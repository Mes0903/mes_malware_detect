
60fed726920afd8b17819574c96a58ae57b0d581aa39a7b760bb0642e6b21b3e.exe:     file format pei-x86-64


Disassembly of section .text:

0000000140001000 <.text>:
   140001000:	lea    rcx,[rip+0x25a19]        # 0x140026a20
   140001007:	jmp    0x1400056a0
   14000100c:	int3   
   14000100d:	int3   
   14000100e:	int3   
   14000100f:	int3   
   140001010:	lea    rcx,[rip+0x25a19]        # 0x140026a30
   140001017:	jmp    0x1400056a0
   14000101c:	int3   
   14000101d:	int3   
   14000101e:	int3   
   14000101f:	int3   
   140001020:	lea    rcx,[rip+0x25a19]        # 0x140026a40
   140001027:	jmp    0x1400056a0
   14000102c:	int3   
   14000102d:	int3   
   14000102e:	int3   
   14000102f:	int3   
   140001030:	lea    rcx,[rip+0x25a19]        # 0x140026a50
   140001037:	jmp    0x1400056a0
   14000103c:	int3   
   14000103d:	int3   
   14000103e:	int3   
   14000103f:	int3   
   140001040:	lea    rcx,[rip+0x25a79]        # 0x140026ac0
   140001047:	jmp    0x1400056a0
   14000104c:	int3   
   14000104d:	int3   
   14000104e:	int3   
   14000104f:	int3   
   140001050:	sub    rsp,0x28
   140001054:	lea    rdx,[rip+0x265d5]        # 0x140027630
   14000105b:	lea    rcx,[rip+0x35036]        # 0x140036098
   140001062:	mov    r8d,0x2d
   140001068:	call   0x140002af0
   14000106d:	lea    rcx,[rip+0x25abc]        # 0x140026b30
   140001074:	add    rsp,0x28
   140001078:	jmp    0x1400056a0
   14000107d:	int3   
   14000107e:	int3   
   14000107f:	int3   
   140001080:	lea    rcx,[rip+0x25b19]        # 0x140026ba0
   140001087:	jmp    0x1400056a0
   14000108c:	int3   
   14000108d:	int3   
   14000108e:	int3   
   14000108f:	int3   
   140001090:	lea    rcx,[rip+0x25b79]        # 0x140026c10
   140001097:	jmp    0x1400056a0
   14000109c:	lea    rcx,[rip+0x25bd9]        # 0x140026c7c
   1400010a3:	jmp    0x1400056a0
   1400010a8:	lea    rcx,[rip+0x25bdd]        # 0x140026c8c
   1400010af:	jmp    0x1400056a0
   1400010b4:	lea    rcx,[rip+0x25be1]        # 0x140026c9c
   1400010bb:	jmp    0x1400056a0
   1400010c0:	lea    rcx,[rip+0x25be5]        # 0x140026cac
   1400010c7:	jmp    0x1400056a0
   1400010cc:	lea    rcx,[rip+0x25be9]        # 0x140026cbc
   1400010d3:	jmp    0x1400056a0
   1400010d8:	lea    rcx,[rip+0x25bed]        # 0x140026ccc
   1400010df:	jmp    0x1400056a0
   1400010e4:	int3   
   1400010e5:	int3   
   1400010e6:	int3   
   1400010e7:	int3   
   1400010e8:	int3   
   1400010e9:	int3   
   1400010ea:	int3   
   1400010eb:	int3   
   1400010ec:	int3   
   1400010ed:	int3   
   1400010ee:	int3   
   1400010ef:	int3   
   1400010f0:	rex push rbx
   1400010f2:	sub    rsp,0x20
   1400010f6:	movzx  r9d,BYTE PTR [rsp+0x30]
   1400010fc:	xor    eax,eax
   1400010fe:	mov    QWORD PTR [rcx+0x18],0x7
   140001106:	mov    QWORD PTR [rcx+0x10],rax
   14000110a:	mov    rbx,rcx
   14000110d:	mov    WORD PTR [rcx],ax
   140001110:	call   0x1400012a0
   140001115:	mov    rax,rbx
   140001118:	add    rsp,0x20
   14000111c:	pop    rbx
   14000111d:	ret    
   14000111e:	int3   
   14000111f:	int3   
   140001120:	mov    al,0x1
   140001122:	ret    
   140001123:	int3   
   140001124:	int3   
   140001125:	int3   
   140001126:	int3   
   140001127:	int3   
   140001128:	int3   
   140001129:	int3   
   14000112a:	int3   
   14000112b:	int3   
   14000112c:	int3   
   14000112d:	int3   
   14000112e:	int3   
   14000112f:	int3   
   140001130:	mov    al,0x1
   140001132:	ret    
   140001133:	int3   
   140001134:	int3   
   140001135:	int3   
   140001136:	int3   
   140001137:	int3   
   140001138:	int3   
   140001139:	int3   
   14000113a:	int3   
   14000113b:	int3   
   14000113c:	int3   
   14000113d:	int3   
   14000113e:	int3   
   14000113f:	int3   
   140001140:	xor    al,al
   140001142:	ret    
   140001143:	int3   
   140001144:	int3   
   140001145:	int3   
   140001146:	int3   
   140001147:	int3   
   140001148:	int3   
   140001149:	int3   
   14000114a:	int3   
   14000114b:	int3   
   14000114c:	int3   
   14000114d:	int3   
   14000114e:	int3   
   14000114f:	int3   
   140001150:	mov    QWORD PTR [rsp+0x8],rbx
   140001155:	push   rdi
   140001156:	sub    rsp,0x30
   14000115a:	xor    edi,edi
   14000115c:	mov    rax,r8
   14000115f:	mov    r9,rdx
   140001162:	mov    rbx,rcx
   140001165:	mov    DWORD PTR [rsp+0x20],edi
   140001169:	cmp    WORD PTR [r8],di
   14000116d:	jne    0x140001174
   14000116f:	mov    r8d,edi
   140001172:	jmp    0x14000118a
   140001174:	or     r8,0xffffffffffffffff
   140001178:	nop    DWORD PTR [rax+rax*1+0x0]
   140001180:	inc    r8
   140001183:	cmp    WORD PTR [rax+r8*2],di
   140001188:	jne    0x140001180
   14000118a:	mov    rdx,rax
   14000118d:	mov    rcx,r9
   140001190:	call   0x140002440
   140001195:	mov    QWORD PTR [rbx+0x18],0x7
   14000119d:	mov    QWORD PTR [rbx+0x10],rdi
   1400011a1:	mov    rcx,rbx
   1400011a4:	mov    rdx,rax
   1400011a7:	mov    WORD PTR [rbx],di
   1400011aa:	call   0x140001aa0
   1400011af:	mov    rax,rbx
   1400011b2:	mov    rbx,QWORD PTR [rsp+0x40]
   1400011b7:	add    rsp,0x30
   1400011bb:	pop    rdi
   1400011bc:	ret    
   1400011bd:	int3   
   1400011be:	int3   
   1400011bf:	int3   
   1400011c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400011c5:	push   rdi
   1400011c6:	sub    rsp,0x30
   1400011ca:	xor    edi,edi
   1400011cc:	mov    rax,r8
   1400011cf:	mov    rbx,rcx
   1400011d2:	mov    DWORD PTR [rsp+0x20],edi
   1400011d6:	cmp    WORD PTR [rdx],di
   1400011d9:	jne    0x1400011e0
   1400011db:	mov    r9d,edi
   1400011de:	jmp    0x1400011ee
   1400011e0:	or     r9,0xffffffffffffffff
   1400011e4:	inc    r9
   1400011e7:	cmp    WORD PTR [rdx+r9*2],di
   1400011ec:	jne    0x1400011e4
   1400011ee:	mov    r8,rdx
   1400011f1:	mov    rcx,rax
   1400011f4:	xor    edx,edx
   1400011f6:	call   0x140003b30
   1400011fb:	mov    QWORD PTR [rbx+0x18],0x7
   140001203:	mov    QWORD PTR [rbx+0x10],rdi
   140001207:	mov    rcx,rbx
   14000120a:	mov    rdx,rax
   14000120d:	mov    WORD PTR [rbx],di
   140001210:	call   0x140001aa0
   140001215:	mov    rax,rbx
   140001218:	mov    rbx,QWORD PTR [rsp+0x40]
   14000121d:	add    rsp,0x30
   140001221:	pop    rdi
   140001222:	ret    
   140001223:	int3   
   140001224:	int3   
   140001225:	int3   
   140001226:	int3   
   140001227:	int3   
   140001228:	int3   
   140001229:	int3   
   14000122a:	int3   
   14000122b:	int3   
   14000122c:	int3   
   14000122d:	int3   
   14000122e:	int3   
   14000122f:	int3   
   140001230:	sub    rsp,0x28
   140001234:	xor    eax,eax
   140001236:	test   rcx,rcx
   140001239:	je     0x14000124b
   14000123b:	cmp    rcx,0xffffffffffffffff
   14000123f:	ja     0x140001250
   140001241:	call   0x1400053e8
   140001246:	test   rax,rax
   140001249:	je     0x140001250
   14000124b:	add    rsp,0x28
   14000124f:	ret    
   140001250:	call   0x14000514c
   140001255:	int3   
   140001256:	int3   
   140001257:	int3   
   140001258:	int3   
   140001259:	int3   
   14000125a:	int3   
   14000125b:	int3   
   14000125c:	int3   
   14000125d:	int3   
   14000125e:	int3   
   14000125f:	int3   
   140001260:	sub    rsp,0x28
   140001264:	xor    eax,eax
   140001266:	test   rcx,rcx
   140001269:	je     0x140001287
   14000126b:	movabs rax,0x7fffffffffffffff
   140001275:	cmp    rcx,rax
   140001278:	ja     0x14000128c
   14000127a:	add    rcx,rcx
   14000127d:	call   0x1400053e8
   140001282:	test   rax,rax
   140001285:	je     0x14000128c
   140001287:	add    rsp,0x28
   14000128b:	ret    
   14000128c:	call   0x14000514c
   140001291:	int3   
   140001292:	int3   
   140001293:	int3   
   140001294:	int3   
   140001295:	int3   
   140001296:	int3   
   140001297:	int3   
   140001298:	int3   
   140001299:	int3   
   14000129a:	int3   
   14000129b:	int3   
   14000129c:	int3   
   14000129d:	int3   
   14000129e:	int3   
   14000129f:	int3   
   1400012a0:	mov    QWORD PTR [rsp+0x8],rcx
   1400012a5:	push   rdi
   1400012a6:	push   r12
   1400012a8:	push   r13
   1400012aa:	push   r14
   1400012ac:	push   r15
   1400012ae:	sub    rsp,0x30
   1400012b2:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400012bb:	mov    QWORD PTR [rsp+0x68],rbx
   1400012c0:	mov    QWORD PTR [rsp+0x70],rsi
   1400012c5:	mov    r12,r8
   1400012c8:	mov    rsi,rdx
   1400012cb:	mov    rbx,rcx
   1400012ce:	mov    rdx,r8
   1400012d1:	sub    rdx,rsi
   1400012d4:	sar    rdx,1
   1400012d7:	mov    rdi,QWORD PTR [rcx+0x10]
   1400012db:	cmp    rdi,rdx
   1400012de:	ja     0x14000130f
   1400012e0:	cmp    QWORD PTR [rcx+0x18],rdx
   1400012e4:	je     0x14000130f
   1400012e6:	mov    r8b,0x1
   1400012e9:	call   0x140001ee0
   1400012ee:	test   al,al
   1400012f0:	je     0x14000130f
   1400012f2:	mov    QWORD PTR [rbx+0x10],rdi
   1400012f6:	cmp    QWORD PTR [rbx+0x18],0x8
   1400012fb:	jb     0x140001302
   1400012fd:	mov    rax,QWORD PTR [rbx]
   140001300:	jmp    0x140001305
   140001302:	mov    rax,rbx
   140001305:	xor    r14d,r14d
   140001308:	mov    WORD PTR [rax+rdi*2],r14w
   14000130d:	jmp    0x140001312
   14000130f:	xor    r14d,r14d
   140001312:	movabs r13,0x7ffffffffffffffe
   14000131c:	nop    DWORD PTR [rax+0x0]
   140001320:	cmp    rsi,r12
   140001323:	je     0x1400013d0
   140001329:	movzx  r15d,WORD PTR [rsi]
   14000132d:	mov    r8,QWORD PTR [rbx+0x10]
   140001331:	or     rax,0xffffffffffffffff
   140001335:	sub    rax,r8
   140001338:	cmp    rax,0x1
   14000133c:	ja     0x14000134a
   14000133e:	lea    rcx,[rip+0x26573]        # 0x1400278b8
   140001345:	call   0x1400051f4
   14000134a:	lea    rdi,[r8+0x1]
   14000134e:	cmp    rdi,r13
   140001351:	jbe    0x14000135f
   140001353:	lea    rcx,[rip+0x2655e]        # 0x1400278b8
   14000135a:	call   0x1400051f4
   14000135f:	mov    rax,QWORD PTR [rbx+0x18]
   140001363:	cmp    rax,rdi
   140001366:	jae    0x140001375
   140001368:	mov    rdx,rdi
   14000136b:	mov    rcx,rbx
   14000136e:	call   0x140001c90
   140001373:	jmp    0x140001392
   140001375:	test   rdi,rdi
   140001378:	jne    0x140001397
   14000137a:	mov    QWORD PTR [rbx+0x10],r14
   14000137e:	cmp    rax,0x8
   140001382:	jb     0x140001389
   140001384:	mov    rax,QWORD PTR [rbx]
   140001387:	jmp    0x14000138c
   140001389:	mov    rax,rbx
   14000138c:	mov    WORD PTR [rax],r14w
   140001390:	jmp    0x1400013c7
   140001392:	test   rdi,rdi
   140001395:	je     0x1400013c7
   140001397:	mov    rcx,QWORD PTR [rbx+0x10]
   14000139b:	cmp    QWORD PTR [rbx+0x18],0x8
   1400013a0:	jb     0x1400013a7
   1400013a2:	mov    rax,QWORD PTR [rbx]
   1400013a5:	jmp    0x1400013aa
   1400013a7:	mov    rax,rbx
   1400013aa:	mov    WORD PTR [rax+rcx*2],r15w
   1400013af:	mov    QWORD PTR [rbx+0x10],rdi
   1400013b3:	cmp    QWORD PTR [rbx+0x18],0x8
   1400013b8:	jb     0x1400013bf
   1400013ba:	mov    rax,QWORD PTR [rbx]
   1400013bd:	jmp    0x1400013c2
   1400013bf:	mov    rax,rbx
   1400013c2:	mov    WORD PTR [rax+rdi*2],r14w
   1400013c7:	add    rsi,0x2
   1400013cb:	jmp    0x140001320
   1400013d0:	mov    rbx,QWORD PTR [rsp+0x68]
   1400013d5:	mov    rsi,QWORD PTR [rsp+0x70]
   1400013da:	add    rsp,0x30
   1400013de:	pop    r15
   1400013e0:	pop    r14
   1400013e2:	pop    r13
   1400013e4:	pop    r12
   1400013e6:	pop    rdi
   1400013e7:	ret    
   1400013e8:	int3   
   1400013e9:	int3   
   1400013ea:	int3   
   1400013eb:	int3   
   1400013ec:	int3   
   1400013ed:	int3   
   1400013ee:	int3   
   1400013ef:	int3   
   1400013f0:	sub    rdx,rcx
   1400013f3:	sar    rdx,1
   1400013f6:	add    QWORD PTR [r8],rdx
   1400013f9:	ret    
   1400013fa:	int3   
   1400013fb:	int3   
   1400013fc:	int3   
   1400013fd:	int3   
   1400013fe:	int3   
   1400013ff:	int3   
   140001400:	sub    rdx,rcx
   140001403:	sar    rdx,1
   140001406:	add    QWORD PTR [r8],rdx
   140001409:	ret    
   14000140a:	int3   
   14000140b:	int3   
   14000140c:	int3   
   14000140d:	int3   
   14000140e:	int3   
   14000140f:	int3   
   140001410:	mov    rax,rcx
   140001413:	ret    
   140001414:	int3   
   140001415:	int3   
   140001416:	int3   
   140001417:	int3   
   140001418:	int3   
   140001419:	int3   
   14000141a:	int3   
   14000141b:	int3   
   14000141c:	int3   
   14000141d:	int3   
   14000141e:	int3   
   14000141f:	int3   
   140001420:	mov    rax,rcx
   140001423:	ret    
   140001424:	int3   
   140001425:	int3   
   140001426:	int3   
   140001427:	int3   
   140001428:	int3   
   140001429:	int3   
   14000142a:	int3   
   14000142b:	int3   
   14000142c:	int3   
   14000142d:	int3   
   14000142e:	int3   
   14000142f:	int3   
   140001430:	mov    rax,rcx
   140001433:	ret    
   140001434:	int3   
   140001435:	int3   
   140001436:	int3   
   140001437:	int3   
   140001438:	int3   
   140001439:	int3   
   14000143a:	int3   
   14000143b:	int3   
   14000143c:	int3   
   14000143d:	int3   
   14000143e:	int3   
   14000143f:	int3   
   140001440:	sub    rsp,0x38
   140001444:	mov    r10,QWORD PTR [rcx+0x18]
   140001448:	cmp    r10,0x8
   14000144c:	jb     0x140001453
   14000144e:	mov    r9,QWORD PTR [rcx]
   140001451:	jmp    0x140001456
   140001453:	mov    r9,rcx
   140001456:	mov    rax,QWORD PTR [rcx+0x10]
   14000145a:	lea    rax,[r9+rax*2]
   14000145e:	cmp    r10,0x8
   140001462:	jb     0x140001469
   140001464:	mov    r10,QWORD PTR [rcx]
   140001467:	jmp    0x14000146c
   140001469:	mov    r10,rcx
   14000146c:	mov    QWORD PTR [rsp+0x20],r8
   140001471:	mov    r9,rdx
   140001474:	mov    r8,rax
   140001477:	mov    rdx,r10
   14000147a:	call   0x1400041b0
   14000147f:	add    rsp,0x38
   140001483:	ret    
   140001484:	int3   
   140001485:	int3   
   140001486:	int3   
   140001487:	int3   
   140001488:	int3   
   140001489:	int3   
   14000148a:	int3   
   14000148b:	int3   
   14000148c:	int3   
   14000148d:	int3   
   14000148e:	int3   
   14000148f:	int3   
   140001490:	test   rdx,rdx
   140001493:	je     0x14000149b
   140001495:	mov    rax,QWORD PTR [r8]
   140001498:	mov    QWORD PTR [rdx],rax
   14000149b:	ret    
   14000149c:	int3   
   14000149d:	int3   
   14000149e:	int3   
   14000149f:	int3   
   1400014a0:	test   rdx,rdx
   1400014a3:	je     0x1400014ab
   1400014a5:	mov    rax,QWORD PTR [r8]
   1400014a8:	mov    QWORD PTR [rdx],rax
   1400014ab:	ret    
   1400014ac:	int3   
   1400014ad:	int3   
   1400014ae:	int3   
   1400014af:	int3   
   1400014b0:	test   rdx,rdx
   1400014b3:	je     0x1400014bb
   1400014b5:	mov    rax,QWORD PTR [r8]
   1400014b8:	mov    QWORD PTR [rdx],rax
   1400014bb:	ret    
   1400014bc:	int3   
   1400014bd:	int3   
   1400014be:	int3   
   1400014bf:	int3   
   1400014c0:	test   rdx,rdx
   1400014c3:	je     0x1400014cb
   1400014c5:	mov    rax,QWORD PTR [r8]
   1400014c8:	mov    QWORD PTR [rdx],rax
   1400014cb:	ret    
   1400014cc:	int3   
   1400014cd:	int3   
   1400014ce:	int3   
   1400014cf:	int3   
   1400014d0:	test   rdx,rdx
   1400014d3:	je     0x1400014db
   1400014d5:	mov    rax,QWORD PTR [r8]
   1400014d8:	mov    QWORD PTR [rdx],rax
   1400014db:	ret    
   1400014dc:	int3   
   1400014dd:	int3   
   1400014de:	int3   
   1400014df:	int3   
   1400014e0:	test   rdx,rdx
   1400014e3:	je     0x1400014eb
   1400014e5:	mov    rax,QWORD PTR [r8]
   1400014e8:	mov    QWORD PTR [rdx],rax
   1400014eb:	ret    
   1400014ec:	int3   
   1400014ed:	int3   
   1400014ee:	int3   
   1400014ef:	int3   
   1400014f0:	ret    0x0
   1400014f3:	int3   
   1400014f4:	int3   
   1400014f5:	int3   
   1400014f6:	int3   
   1400014f7:	int3   
   1400014f8:	int3   
   1400014f9:	int3   
   1400014fa:	int3   
   1400014fb:	int3   
   1400014fc:	int3   
   1400014fd:	int3   
   1400014fe:	int3   
   1400014ff:	int3   
   140001500:	ret    0x0
   140001503:	int3   
   140001504:	int3   
   140001505:	int3   
   140001506:	int3   
   140001507:	int3   
   140001508:	int3   
   140001509:	int3   
   14000150a:	int3   
   14000150b:	int3   
   14000150c:	int3   
   14000150d:	int3   
   14000150e:	int3   
   14000150f:	int3   
   140001510:	ret    0x0
   140001513:	int3   
   140001514:	int3   
   140001515:	int3   
   140001516:	int3   
   140001517:	int3   
   140001518:	int3   
   140001519:	int3   
   14000151a:	int3   
   14000151b:	int3   
   14000151c:	int3   
   14000151d:	int3   
   14000151e:	int3   
   14000151f:	int3   
   140001520:	ret    0x0
   140001523:	int3   
   140001524:	int3   
   140001525:	int3   
   140001526:	int3   
   140001527:	int3   
   140001528:	int3   
   140001529:	int3   
   14000152a:	int3   
   14000152b:	int3   
   14000152c:	int3   
   14000152d:	int3   
   14000152e:	int3   
   14000152f:	int3   
   140001530:	ret    0x0
   140001533:	int3   
   140001534:	int3   
   140001535:	int3   
   140001536:	int3   
   140001537:	int3   
   140001538:	int3   
   140001539:	int3   
   14000153a:	int3   
   14000153b:	int3   
   14000153c:	int3   
   14000153d:	int3   
   14000153e:	int3   
   14000153f:	int3   
   140001540:	ret    0x0
   140001543:	int3   
   140001544:	int3   
   140001545:	int3   
   140001546:	int3   
   140001547:	int3   
   140001548:	int3   
   140001549:	int3   
   14000154a:	int3   
   14000154b:	int3   
   14000154c:	int3   
   14000154d:	int3   
   14000154e:	int3   
   14000154f:	int3   
   140001550:	mov    rax,rcx
   140001553:	ret    
   140001554:	int3   
   140001555:	int3   
   140001556:	int3   
   140001557:	int3   
   140001558:	int3   
   140001559:	int3   
   14000155a:	int3   
   14000155b:	int3   
   14000155c:	int3   
   14000155d:	int3   
   14000155e:	int3   
   14000155f:	int3   
   140001560:	mov    rax,rcx
   140001563:	ret    
   140001564:	int3   
   140001565:	int3   
   140001566:	int3   
   140001567:	int3   
   140001568:	int3   
   140001569:	int3   
   14000156a:	int3   
   14000156b:	int3   
   14000156c:	int3   
   14000156d:	int3   
   14000156e:	int3   
   14000156f:	int3   
   140001570:	mov    rax,rcx
   140001573:	ret    
   140001574:	int3   
   140001575:	int3   
   140001576:	int3   
   140001577:	int3   
   140001578:	int3   
   140001579:	int3   
   14000157a:	int3   
   14000157b:	int3   
   14000157c:	int3   
   14000157d:	int3   
   14000157e:	int3   
   14000157f:	int3   
   140001580:	mov    rax,rcx
   140001583:	ret    
   140001584:	int3   
   140001585:	int3   
   140001586:	int3   
   140001587:	int3   
   140001588:	int3   
   140001589:	int3   
   14000158a:	int3   
   14000158b:	int3   
   14000158c:	int3   
   14000158d:	int3   
   14000158e:	int3   
   14000158f:	int3   
   140001590:	xor    eax,eax
   140001592:	mov    QWORD PTR [rcx+0x10],rax
   140001596:	mov    QWORD PTR [rcx+0x18],rax
   14000159a:	mov    rax,rcx
   14000159d:	ret    
   14000159e:	int3   
   14000159f:	int3   
   1400015a0:	xor    eax,eax
   1400015a2:	mov    QWORD PTR [rcx+0x10],rax
   1400015a6:	mov    QWORD PTR [rcx+0x18],rax
   1400015aa:	mov    rax,rcx
   1400015ad:	ret    
   1400015ae:	int3   
   1400015af:	int3   
   1400015b0:	mov    QWORD PTR [rcx],rdx
   1400015b3:	mov    rax,rcx
   1400015b6:	ret    
   1400015b7:	int3   
   1400015b8:	int3   
   1400015b9:	int3   
   1400015ba:	int3   
   1400015bb:	int3   
   1400015bc:	int3   
   1400015bd:	int3   
   1400015be:	int3   
   1400015bf:	int3   
   1400015c0:	mov    QWORD PTR [rcx],rdx
   1400015c3:	mov    rax,rcx
   1400015c6:	ret    
   1400015c7:	int3   
   1400015c8:	int3   
   1400015c9:	int3   
   1400015ca:	int3   
   1400015cb:	int3   
   1400015cc:	int3   
   1400015cd:	int3   
   1400015ce:	int3   
   1400015cf:	int3   
   1400015d0:	xor    eax,eax
   1400015d2:	mov    QWORD PTR [rcx+0x10],rax
   1400015d6:	mov    QWORD PTR [rcx+0x18],rax
   1400015da:	mov    rax,rcx
   1400015dd:	ret    
   1400015de:	int3   
   1400015df:	int3   
   1400015e0:	xor    eax,eax
   1400015e2:	mov    QWORD PTR [rcx+0x10],rax
   1400015e6:	mov    QWORD PTR [rcx+0x18],rax
   1400015ea:	mov    rax,rcx
   1400015ed:	ret    
   1400015ee:	int3   
   1400015ef:	int3   
   1400015f0:	mov    rax,rcx
   1400015f3:	ret    
   1400015f4:	int3   
   1400015f5:	int3   
   1400015f6:	int3   
   1400015f7:	int3   
   1400015f8:	int3   
   1400015f9:	int3   
   1400015fa:	int3   
   1400015fb:	int3   
   1400015fc:	int3   
   1400015fd:	int3   
   1400015fe:	int3   
   1400015ff:	int3   
   140001600:	mov    rax,rcx
   140001603:	ret    
   140001604:	int3   
   140001605:	int3   
   140001606:	int3   
   140001607:	int3   
   140001608:	int3   
   140001609:	int3   
   14000160a:	int3   
   14000160b:	int3   
   14000160c:	int3   
   14000160d:	int3   
   14000160e:	int3   
   14000160f:	int3   
   140001610:	mov    rax,rcx
   140001613:	ret    
   140001614:	int3   
   140001615:	int3   
   140001616:	int3   
   140001617:	int3   
   140001618:	int3   
   140001619:	int3   
   14000161a:	int3   
   14000161b:	int3   
   14000161c:	int3   
   14000161d:	int3   
   14000161e:	int3   
   14000161f:	int3   
   140001620:	mov    rax,rcx
   140001623:	ret    
   140001624:	int3   
   140001625:	int3   
   140001626:	int3   
   140001627:	int3   
   140001628:	int3   
   140001629:	int3   
   14000162a:	int3   
   14000162b:	int3   
   14000162c:	int3   
   14000162d:	int3   
   14000162e:	int3   
   14000162f:	int3   
   140001630:	mov    rax,rcx
   140001633:	ret    
   140001634:	int3   
   140001635:	int3   
   140001636:	int3   
   140001637:	int3   
   140001638:	int3   
   140001639:	int3   
   14000163a:	int3   
   14000163b:	int3   
   14000163c:	int3   
   14000163d:	int3   
   14000163e:	int3   
   14000163f:	int3   
   140001640:	mov    rax,rcx
   140001643:	ret    
   140001644:	int3   
   140001645:	int3   
   140001646:	int3   
   140001647:	int3   
   140001648:	int3   
   140001649:	int3   
   14000164a:	int3   
   14000164b:	int3   
   14000164c:	int3   
   14000164d:	int3   
   14000164e:	int3   
   14000164f:	int3   
   140001650:	rex push rbx
   140001652:	sub    rsp,0x20
   140001656:	xor    r8d,r8d
   140001659:	mov    QWORD PTR [rcx+0x18],0xf
   140001661:	mov    rbx,rcx
   140001664:	mov    QWORD PTR [rcx+0x10],r8
   140001668:	mov    BYTE PTR [rcx],r8b
   14000166b:	cmp    BYTE PTR [rdx],r8b
   14000166e:	je     0x14000167e
   140001670:	or     r8,0xffffffffffffffff
   140001674:	inc    r8
   140001677:	cmp    BYTE PTR [rdx+r8*1],0x0
   14000167c:	jne    0x140001674
   14000167e:	call   0x140002830
   140001683:	mov    rax,rbx
   140001686:	add    rsp,0x20
   14000168a:	pop    rbx
   14000168b:	ret    
   14000168c:	int3   
   14000168d:	int3   
   14000168e:	int3   
   14000168f:	int3   
   140001690:	rex push rbx
   140001692:	sub    rsp,0x20
   140001696:	xor    eax,eax
   140001698:	mov    QWORD PTR [rcx+0x18],0x7
   1400016a0:	mov    rbx,rcx
   1400016a3:	mov    QWORD PTR [rcx+0x10],rax
   1400016a7:	mov    WORD PTR [rcx],ax
   1400016aa:	call   0x140001aa0
   1400016af:	mov    rax,rbx
   1400016b2:	add    rsp,0x20
   1400016b6:	pop    rbx
   1400016b7:	ret    
   1400016b8:	int3   
   1400016b9:	int3   
   1400016ba:	int3   
   1400016bb:	int3   
   1400016bc:	int3   
   1400016bd:	int3   
   1400016be:	int3   
   1400016bf:	int3   
   1400016c0:	rex push rbx
   1400016c2:	sub    rsp,0x20
   1400016c6:	xor    eax,eax
   1400016c8:	mov    QWORD PTR [rcx+0x18],0x7
   1400016d0:	or     r9,0xffffffffffffffff
   1400016d4:	mov    QWORD PTR [rcx+0x10],rax
   1400016d8:	xor    r8d,r8d
   1400016db:	mov    rbx,rcx
   1400016de:	mov    WORD PTR [rcx],ax
   1400016e1:	call   0x140002970
   1400016e6:	mov    rax,rbx
   1400016e9:	add    rsp,0x20
   1400016ed:	pop    rbx
   1400016ee:	ret    
   1400016ef:	int3   
   1400016f0:	rex push rbx
   1400016f2:	sub    rsp,0x20
   1400016f6:	xor    r8d,r8d
   1400016f9:	mov    QWORD PTR [rcx+0x18],0x7
   140001701:	mov    rbx,rcx
   140001704:	mov    QWORD PTR [rcx+0x10],r8
   140001708:	mov    WORD PTR [rcx],r8w
   14000170c:	cmp    WORD PTR [rdx],r8w
   140001710:	je     0x14000172b
   140001712:	or     r8,0xffffffffffffffff
   140001716:	data16 nop WORD PTR [rax+rax*1+0x0]
   140001720:	inc    r8
   140001723:	cmp    WORD PTR [rdx+r8*2],0x0
   140001729:	jne    0x140001720
   14000172b:	call   0x140002af0
   140001730:	mov    rax,rbx
   140001733:	add    rsp,0x20
   140001737:	pop    rbx
   140001738:	ret    
   140001739:	int3   
   14000173a:	int3   
   14000173b:	int3   
   14000173c:	int3   
   14000173d:	int3   
   14000173e:	int3   
   14000173f:	int3   
   140001740:	xor    eax,eax
   140001742:	mov    QWORD PTR [rcx+0x18],0x7
   14000174a:	mov    QWORD PTR [rcx+0x10],rax
   14000174e:	mov    WORD PTR [rcx],ax
   140001751:	mov    rax,rcx
   140001754:	ret    
   140001755:	int3   
   140001756:	int3   
   140001757:	int3   
   140001758:	int3   
   140001759:	int3   
   14000175a:	int3   
   14000175b:	int3   
   14000175c:	int3   
   14000175d:	int3   
   14000175e:	int3   
   14000175f:	int3   
   140001760:	lea    rax,[rip+0x25dd9]        # 0x140027540
   140001767:	mov    QWORD PTR [rcx],rax
   14000176a:	mov    rax,rcx
   14000176d:	ret    
   14000176e:	int3   
   14000176f:	int3   
   140001770:	lea    rax,[rip+0x25e19]        # 0x140027590
   140001777:	mov    QWORD PTR [rcx],rax
   14000177a:	mov    rax,rcx
   14000177d:	ret    
   14000177e:	int3   
   14000177f:	int3   
   140001780:	lea    rax,[rip+0x25e69]        # 0x1400275f0
   140001787:	mov    QWORD PTR [rcx],rax
   14000178a:	mov    rax,rcx
   14000178d:	ret    
   14000178e:	int3   
   14000178f:	int3   
   140001790:	lea    rax,[rip+0x25d71]        # 0x140027508
   140001797:	mov    QWORD PTR [rcx],rax
   14000179a:	mov    rax,rcx
   14000179d:	ret    
   14000179e:	int3   
   14000179f:	int3   
   1400017a0:	mov    DWORD PTR [rcx],edx
   1400017a2:	mov    QWORD PTR [rcx+0x8],r8
   1400017a6:	mov    rax,rcx
   1400017a9:	ret    
   1400017aa:	int3   
   1400017ab:	int3   
   1400017ac:	int3   
   1400017ad:	int3   
   1400017ae:	int3   
   1400017af:	int3   
   1400017b0:	mov    QWORD PTR [rcx],rdx
   1400017b3:	mov    rax,rcx
   1400017b6:	ret    
   1400017b7:	int3   
   1400017b8:	int3   
   1400017b9:	int3   
   1400017ba:	int3   
   1400017bb:	int3   
   1400017bc:	int3   
   1400017bd:	int3   
   1400017be:	int3   
   1400017bf:	int3   
   1400017c0:	rex push rbx
   1400017c2:	sub    rsp,0x20
   1400017c6:	cmp    QWORD PTR [rcx+0x18],0x10
   1400017cb:	mov    rbx,rcx
   1400017ce:	jb     0x1400017d8
   1400017d0:	mov    rcx,QWORD PTR [rcx]
   1400017d3:	call   0x140005454
   1400017d8:	mov    QWORD PTR [rbx+0x18],0xf
   1400017e0:	mov    QWORD PTR [rbx+0x10],0x0
   1400017e8:	mov    BYTE PTR [rbx],0x0
   1400017eb:	add    rsp,0x20
   1400017ef:	pop    rbx
   1400017f0:	ret    
   1400017f1:	int3   
   1400017f2:	int3   
   1400017f3:	int3   
   1400017f4:	int3   
   1400017f5:	int3   
   1400017f6:	int3   
   1400017f7:	int3   
   1400017f8:	int3   
   1400017f9:	int3   
   1400017fa:	int3   
   1400017fb:	int3   
   1400017fc:	int3   
   1400017fd:	int3   
   1400017fe:	int3   
   1400017ff:	int3   
   140001800:	rex push rbx
   140001802:	sub    rsp,0x20
   140001806:	cmp    QWORD PTR [rcx+0x18],0x8
   14000180b:	mov    rbx,rcx
   14000180e:	jb     0x140001818
   140001810:	mov    rcx,QWORD PTR [rcx]
   140001813:	call   0x140005454
   140001818:	xor    eax,eax
   14000181a:	mov    QWORD PTR [rbx+0x18],0x7
   140001822:	mov    QWORD PTR [rbx+0x10],rax
   140001826:	mov    WORD PTR [rbx],ax
   140001829:	add    rsp,0x20
   14000182d:	pop    rbx
   14000182e:	ret    
   14000182f:	int3   
   140001830:	lea    rax,[rip+0x25cd1]        # 0x140027508
   140001837:	mov    QWORD PTR [rcx],rax
   14000183a:	ret    
   14000183b:	int3   
   14000183c:	int3   
   14000183d:	int3   
   14000183e:	int3   
   14000183f:	int3   
   140001840:	lea    rax,[rip+0x25cc1]        # 0x140027508
   140001847:	mov    QWORD PTR [rcx],rax
   14000184a:	ret    
   14000184b:	int3   
   14000184c:	int3   
   14000184d:	int3   
   14000184e:	int3   
   14000184f:	int3   
   140001850:	lea    rax,[rip+0x25cb1]        # 0x140027508
   140001857:	mov    QWORD PTR [rcx],rax
   14000185a:	ret    
   14000185b:	int3   
   14000185c:	int3   
   14000185d:	int3   
   14000185e:	int3   
   14000185f:	int3   
   140001860:	lea    rax,[rip+0x25ca1]        # 0x140027508
   140001867:	mov    QWORD PTR [rcx],rax
   14000186a:	ret    
   14000186b:	int3   
   14000186c:	int3   
   14000186d:	int3   
   14000186e:	int3   
   14000186f:	int3   
   140001870:	mov    rax,rdx
   140001873:	ret    
   140001874:	int3   
   140001875:	int3   
   140001876:	int3   
   140001877:	int3   
   140001878:	int3   
   140001879:	int3   
   14000187a:	int3   
   14000187b:	int3   
   14000187c:	int3   
   14000187d:	int3   
   14000187e:	int3   
   14000187f:	int3   
   140001880:	ret    0x0
   140001883:	int3   
   140001884:	int3   
   140001885:	int3   
   140001886:	int3   
   140001887:	int3   
   140001888:	int3   
   140001889:	int3   
   14000188a:	int3   
   14000188b:	int3   
   14000188c:	int3   
   14000188d:	int3   
   14000188e:	int3   
   14000188f:	int3   
   140001890:	mov    QWORD PTR [rsp+0x8],rbx
   140001895:	push   rdi
   140001896:	sub    rsp,0x20
   14000189a:	mov    rdi,rdx
   14000189d:	mov    rbx,rcx
   1400018a0:	cmp    rcx,rdx
   1400018a3:	je     0x1400018d0
   1400018a5:	cmp    QWORD PTR [rcx+0x18],0x8
   1400018aa:	jb     0x1400018b4
   1400018ac:	mov    rcx,QWORD PTR [rcx]
   1400018af:	call   0x140005454
   1400018b4:	xor    eax,eax
   1400018b6:	mov    QWORD PTR [rbx+0x18],0x7
   1400018be:	mov    rdx,rdi
   1400018c1:	mov    QWORD PTR [rbx+0x10],rax
   1400018c5:	mov    rcx,rbx
   1400018c8:	mov    WORD PTR [rbx],ax
   1400018cb:	call   0x140001aa0
   1400018d0:	mov    rax,rbx
   1400018d3:	mov    rbx,QWORD PTR [rsp+0x30]
   1400018d8:	add    rsp,0x20
   1400018dc:	pop    rdi
   1400018dd:	ret    
   1400018de:	int3   
   1400018df:	int3   
   1400018e0:	cmp    WORD PTR [rdx],0x0
   1400018e4:	jne    0x1400018ee
   1400018e6:	xor    r8d,r8d
   1400018e9:	jmp    0x140002af0
   1400018ee:	or     r8,0xffffffffffffffff
   1400018f2:	inc    r8
   1400018f5:	cmp    WORD PTR [rdx+r8*2],0x0
   1400018fb:	jne    0x1400018f2
   1400018fd:	jmp    0x140002af0
   140001902:	int3   
   140001903:	int3   
   140001904:	int3   
   140001905:	int3   
   140001906:	int3   
   140001907:	int3   
   140001908:	int3   
   140001909:	int3   
   14000190a:	int3   
   14000190b:	int3   
   14000190c:	int3   
   14000190d:	int3   
   14000190e:	int3   
   14000190f:	int3   
   140001910:	mov    rdx,QWORD PTR [rdx]
   140001913:	cmp    QWORD PTR [rcx],rdx
   140001916:	sete   al
   140001919:	ret    
   14000191a:	int3   
   14000191b:	int3   
   14000191c:	int3   
   14000191d:	int3   
   14000191e:	int3   
   14000191f:	int3   
   140001920:	cmp    rcx,rdx
   140001923:	sete   al
   140001926:	ret    
   140001927:	int3   
   140001928:	int3   
   140001929:	int3   
   14000192a:	int3   
   14000192b:	int3   
   14000192c:	int3   
   14000192d:	int3   
   14000192e:	int3   
   14000192f:	int3   
   140001930:	mov    rax,QWORD PTR [rdx+0x8]
   140001934:	cmp    QWORD PTR [rcx+0x8],rax
   140001938:	jne    0x140001943
   14000193a:	mov    eax,DWORD PTR [rdx]
   14000193c:	cmp    DWORD PTR [rcx],eax
   14000193e:	jne    0x140001943
   140001940:	mov    al,0x1
   140001942:	ret    
   140001943:	xor    al,al
   140001945:	ret    
   140001946:	int3   
   140001947:	int3   
   140001948:	int3   
   140001949:	int3   
   14000194a:	int3   
   14000194b:	int3   
   14000194c:	int3   
   14000194d:	int3   
   14000194e:	int3   
   14000194f:	int3   
   140001950:	mov    rax,QWORD PTR [rcx]
   140001953:	ret    
   140001954:	int3   
   140001955:	int3   
   140001956:	int3   
   140001957:	int3   
   140001958:	int3   
   140001959:	int3   
   14000195a:	int3   
   14000195b:	int3   
   14000195c:	int3   
   14000195d:	int3   
   14000195e:	int3   
   14000195f:	int3   
   140001960:	mov    rax,QWORD PTR [rcx]
   140001963:	ret    
   140001964:	int3   
   140001965:	int3   
   140001966:	int3   
   140001967:	int3   
   140001968:	int3   
   140001969:	int3   
   14000196a:	int3   
   14000196b:	int3   
   14000196c:	int3   
   14000196d:	int3   
   14000196e:	int3   
   14000196f:	int3   
   140001970:	mov    rax,QWORD PTR [rcx]
   140001973:	sub    rax,QWORD PTR [rdx]
   140001976:	sar    rax,1
   140001979:	ret    
   14000197a:	int3   
   14000197b:	int3   
   14000197c:	int3   
   14000197d:	int3   
   14000197e:	int3   
   14000197f:	int3   
   140001980:	mov    rax,QWORD PTR [rcx]
   140001983:	sub    rax,QWORD PTR [rdx]
   140001986:	sar    rax,1
   140001989:	ret    
   14000198a:	int3   
   14000198b:	int3   
   14000198c:	int3   
   14000198d:	int3   
   14000198e:	int3   
   14000198f:	int3   
   140001990:	or     r9,0xffffffffffffffff
   140001994:	xor    r8d,r8d
   140001997:	jmp    0x1400022d0
   14000199c:	int3   
   14000199d:	int3   
   14000199e:	int3   
   14000199f:	int3   
   1400019a0:	cmp    WORD PTR [rdx],0x0
   1400019a4:	jne    0x1400019ae
   1400019a6:	xor    r8d,r8d
   1400019a9:	jmp    0x140002440
   1400019ae:	or     r8,0xffffffffffffffff
   1400019b2:	inc    r8
   1400019b5:	cmp    WORD PTR [rdx+r8*2],0x0
   1400019bb:	jne    0x1400019b2
   1400019bd:	jmp    0x140002440
   1400019c2:	int3   
   1400019c3:	int3   
   1400019c4:	int3   
   1400019c5:	int3   
   1400019c6:	int3   
   1400019c7:	int3   
   1400019c8:	int3   
   1400019c9:	int3   
   1400019ca:	int3   
   1400019cb:	int3   
   1400019cc:	int3   
   1400019cd:	int3   
   1400019ce:	int3   
   1400019cf:	int3   
   1400019d0:	rex push rbx
   1400019d2:	sub    rsp,0x20
   1400019d6:	lea    rax,[rip+0x25b2b]        # 0x140027508
   1400019dd:	mov    rbx,rcx
   1400019e0:	mov    QWORD PTR [rcx],rax
   1400019e3:	test   dl,0x1
   1400019e6:	je     0x1400019ed
   1400019e8:	call   0x140005454
   1400019ed:	mov    rax,rbx
   1400019f0:	add    rsp,0x20
   1400019f4:	pop    rbx
   1400019f5:	ret    
   1400019f6:	int3   
   1400019f7:	int3   
   1400019f8:	int3   
   1400019f9:	int3   
   1400019fa:	int3   
   1400019fb:	int3   
   1400019fc:	int3   
   1400019fd:	int3   
   1400019fe:	int3   
   1400019ff:	int3   
   140001a00:	rex push rbx
   140001a02:	sub    rsp,0x20
   140001a06:	lea    rax,[rip+0x25afb]        # 0x140027508
   140001a0d:	mov    rbx,rcx
   140001a10:	mov    QWORD PTR [rcx],rax
   140001a13:	test   dl,0x1
   140001a16:	je     0x140001a1d
   140001a18:	call   0x140005454
   140001a1d:	mov    rax,rbx
   140001a20:	add    rsp,0x20
   140001a24:	pop    rbx
   140001a25:	ret    
   140001a26:	int3   
   140001a27:	int3   
   140001a28:	int3   
   140001a29:	int3   
   140001a2a:	int3   
   140001a2b:	int3   
   140001a2c:	int3   
   140001a2d:	int3   
   140001a2e:	int3   
   140001a2f:	int3   
   140001a30:	rex push rbx
   140001a32:	sub    rsp,0x20
   140001a36:	lea    rax,[rip+0x25acb]        # 0x140027508
   140001a3d:	mov    rbx,rcx
   140001a40:	mov    QWORD PTR [rcx],rax
   140001a43:	test   dl,0x1
   140001a46:	je     0x140001a4d
   140001a48:	call   0x140005454
   140001a4d:	mov    rax,rbx
   140001a50:	add    rsp,0x20
   140001a54:	pop    rbx
   140001a55:	ret    
   140001a56:	int3   
   140001a57:	int3   
   140001a58:	int3   
   140001a59:	int3   
   140001a5a:	int3   
   140001a5b:	int3   
   140001a5c:	int3   
   140001a5d:	int3   
   140001a5e:	int3   
   140001a5f:	int3   
   140001a60:	rex push rbx
   140001a62:	sub    rsp,0x20
   140001a66:	lea    rax,[rip+0x25a9b]        # 0x140027508
   140001a6d:	mov    rbx,rcx
   140001a70:	mov    QWORD PTR [rcx],rax
   140001a73:	test   dl,0x1
   140001a76:	je     0x140001a7d
   140001a78:	call   0x140005454
   140001a7d:	mov    rax,rbx
   140001a80:	add    rsp,0x20
   140001a84:	pop    rbx
   140001a85:	ret    
   140001a86:	int3   
   140001a87:	int3   
   140001a88:	int3   
   140001a89:	int3   
   140001a8a:	int3   
   140001a8b:	int3   
   140001a8c:	int3   
   140001a8d:	int3   
   140001a8e:	int3   
   140001a8f:	int3   
   140001a90:	ret    0x0
   140001a93:	int3   
   140001a94:	int3   
   140001a95:	int3   
   140001a96:	int3   
   140001a97:	int3   
   140001a98:	int3   
   140001a99:	int3   
   140001a9a:	int3   
   140001a9b:	int3   
   140001a9c:	int3   
   140001a9d:	int3   
   140001a9e:	int3   
   140001a9f:	int3   
   140001aa0:	mov    QWORD PTR [rsp+0x8],rbx
   140001aa5:	mov    QWORD PTR [rsp+0x10],rsi
   140001aaa:	push   rdi
   140001aab:	sub    rsp,0x20
   140001aaf:	xor    esi,esi
   140001ab1:	cmp    QWORD PTR [rdx+0x18],0x8
   140001ab6:	mov    rbx,rdx
   140001ab9:	mov    rdi,rcx
   140001abc:	jae    0x140001ad1
   140001abe:	mov    r8,QWORD PTR [rdx+0x10]
   140001ac2:	inc    r8
   140001ac5:	je     0x140001adf
   140001ac7:	add    r8,r8
   140001aca:	call   0x1400056d0
   140001acf:	jmp    0x140001adf
   140001ad1:	test   rcx,rcx
   140001ad4:	je     0x140001adc
   140001ad6:	mov    rax,QWORD PTR [rdx]
   140001ad9:	mov    QWORD PTR [rcx],rax
   140001adc:	mov    QWORD PTR [rdx],rsi
   140001adf:	mov    rax,QWORD PTR [rbx+0x10]
   140001ae3:	mov    QWORD PTR [rdi+0x10],rax
   140001ae7:	mov    rax,QWORD PTR [rbx+0x18]
   140001aeb:	mov    QWORD PTR [rdi+0x18],rax
   140001aef:	mov    QWORD PTR [rbx+0x10],rsi
   140001af3:	mov    QWORD PTR [rbx+0x18],0x7
   140001afb:	mov    WORD PTR [rbx],si
   140001afe:	mov    rbx,QWORD PTR [rsp+0x30]
   140001b03:	mov    rsi,QWORD PTR [rsp+0x38]
   140001b08:	add    rsp,0x20
   140001b0c:	pop    rdi
   140001b0d:	ret    
   140001b0e:	int3   
   140001b0f:	int3   
   140001b10:	ret    0x0
   140001b13:	int3   
   140001b14:	int3   
   140001b15:	int3   
   140001b16:	int3   
   140001b17:	int3   
   140001b18:	int3   
   140001b19:	int3   
   140001b1a:	int3   
   140001b1b:	int3   
   140001b1c:	int3   
   140001b1d:	int3   
   140001b1e:	int3   
   140001b1f:	int3   
   140001b20:	sub    rsp,0x8
   140001b24:	cmp    r8,0x1
   140001b28:	jne    0x140001b3e
   140001b2a:	cmp    QWORD PTR [rcx+0x18],0x8
   140001b2f:	jb     0x140001b34
   140001b31:	mov    rcx,QWORD PTR [rcx]
   140001b34:	mov    WORD PTR [rcx+rdx*2],r9w
   140001b39:	add    rsp,0x8
   140001b3d:	ret    
   140001b3e:	cmp    QWORD PTR [rcx+0x18],0x8
   140001b43:	mov    QWORD PTR [rsp],rdi
   140001b47:	jb     0x140001b4c
   140001b49:	mov    rcx,QWORD PTR [rcx]
   140001b4c:	lea    rdi,[rcx+rdx*2]
   140001b50:	test   r8,r8
   140001b53:	je     0x140001b5f
   140001b55:	movzx  eax,r9w
   140001b59:	mov    rcx,r8
   140001b5c:	rep stos WORD PTR es:[rdi],ax
   140001b5f:	mov    rdi,QWORD PTR [rsp]
   140001b63:	add    rsp,0x8
   140001b67:	ret    
   140001b68:	int3   
   140001b69:	int3   
   140001b6a:	int3   
   140001b6b:	int3   
   140001b6c:	int3   
   140001b6d:	int3   
   140001b6e:	int3   
   140001b6f:	int3   
   140001b70:	ret    0x0
   140001b73:	int3   
   140001b74:	int3   
   140001b75:	int3   
   140001b76:	int3   
   140001b77:	int3   
   140001b78:	int3   
   140001b79:	int3   
   140001b7a:	int3   
   140001b7b:	int3   
   140001b7c:	int3   
   140001b7d:	int3   
   140001b7e:	int3   
   140001b7f:	int3   
   140001b80:	mov    QWORD PTR [rsp+0x18],r8
   140001b85:	mov    QWORD PTR [rsp+0x10],rdx
   140001b8a:	mov    QWORD PTR [rsp+0x8],rcx
   140001b8f:	push   rbx
   140001b90:	push   rsi
   140001b91:	push   rdi
   140001b92:	push   r14
   140001b94:	sub    rsp,0x38
   140001b98:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140001ba1:	mov    rsi,r8
   140001ba4:	mov    rbx,rcx
   140001ba7:	mov    rdi,rdx
   140001baa:	or     rdi,0xf
   140001bae:	cmp    rdi,0xfffffffffffffffe
   140001bb2:	jbe    0x140001bb9
   140001bb4:	mov    rdi,rdx
   140001bb7:	jmp    0x140001bee
   140001bb9:	mov    r8,QWORD PTR [rcx+0x18]
   140001bbd:	mov    rcx,r8
   140001bc0:	shr    rcx,1
   140001bc3:	movabs rax,0xaaaaaaaaaaaaaaab
   140001bcd:	mul    rdi
   140001bd0:	shr    rdx,1
   140001bd3:	cmp    rcx,rdx
   140001bd6:	jbe    0x140001bee
   140001bd8:	mov    rdi,0xfffffffffffffffe
   140001bdf:	mov    rax,rdi
   140001be2:	sub    rax,rcx
   140001be5:	cmp    r8,rax
   140001be8:	ja     0x140001bee
   140001bea:	lea    rdi,[rcx+r8*1]
   140001bee:	lea    rcx,[rdi+0x1]
   140001bf2:	xor    r14d,r14d
   140001bf5:	test   rcx,rcx
   140001bf8:	je     0x140001c13
   140001bfa:	cmp    rcx,0xffffffffffffffff
   140001bfe:	ja     0x140001c0d
   140001c00:	call   0x1400053e8
   140001c05:	mov    r14,rax
   140001c08:	test   rax,rax
   140001c0b:	jne    0x140001c13
   140001c0d:	call   0x14000514c
   140001c12:	nop
   140001c13:	jmp    0x140001c29
   140001c15:	mov    rbx,QWORD PTR [rsp+0x60]
   140001c1a:	mov    rsi,QWORD PTR [rsp+0x70]
   140001c1f:	mov    rdi,QWORD PTR [rsp+0x68]
   140001c24:	mov    r14,QWORD PTR [rsp+0x78]
   140001c29:	test   rsi,rsi
   140001c2c:	je     0x140001c4d
   140001c2e:	cmp    QWORD PTR [rbx+0x18],0x10
   140001c33:	jb     0x140001c3a
   140001c35:	mov    rdx,QWORD PTR [rbx]
   140001c38:	jmp    0x140001c3d
   140001c3a:	mov    rdx,rbx
   140001c3d:	test   rsi,rsi
   140001c40:	je     0x140001c4d
   140001c42:	mov    r8,rsi
   140001c45:	mov    rcx,r14
   140001c48:	call   0x1400056d0
   140001c4d:	cmp    QWORD PTR [rbx+0x18],0x10
   140001c52:	jb     0x140001c5c
   140001c54:	mov    rcx,QWORD PTR [rbx]
   140001c57:	call   0x140005454
   140001c5c:	mov    BYTE PTR [rbx],0x0
   140001c5f:	mov    QWORD PTR [rbx],r14
   140001c62:	mov    QWORD PTR [rbx+0x18],rdi
   140001c66:	mov    QWORD PTR [rbx+0x10],rsi
   140001c6a:	cmp    rdi,0x10
   140001c6e:	jb     0x140001c73
   140001c70:	mov    rbx,r14
   140001c73:	mov    BYTE PTR [rbx+rsi*1],0x0
   140001c77:	add    rsp,0x38
   140001c7b:	pop    r14
   140001c7d:	pop    rdi
   140001c7e:	pop    rsi
   140001c7f:	pop    rbx
   140001c80:	ret    
   140001c81:	int3   
   140001c82:	int3   
   140001c83:	int3   
   140001c84:	int3   
   140001c85:	int3   
   140001c86:	int3   
   140001c87:	int3   
   140001c88:	int3   
   140001c89:	int3   
   140001c8a:	int3   
   140001c8b:	int3   
   140001c8c:	int3   
   140001c8d:	int3   
   140001c8e:	int3   
   140001c8f:	int3   
   140001c90:	mov    QWORD PTR [rsp+0x18],r8
   140001c95:	mov    QWORD PTR [rsp+0x10],rdx
   140001c9a:	mov    QWORD PTR [rsp+0x8],rcx
   140001c9f:	push   rbx
   140001ca0:	push   rsi
   140001ca1:	push   rdi
   140001ca2:	push   r14
   140001ca4:	push   r15
   140001ca6:	sub    rsp,0x30
   140001caa:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140001cb3:	mov    rsi,r8
   140001cb6:	mov    rbx,rcx
   140001cb9:	mov    rdi,rdx
   140001cbc:	or     rdi,0x7
   140001cc0:	movabs r9,0x7ffffffffffffffe
   140001cca:	cmp    rdi,r9
   140001ccd:	jbe    0x140001cd4
   140001ccf:	mov    rdi,rdx
   140001cd2:	jmp    0x140001d05
   140001cd4:	mov    r8,QWORD PTR [rcx+0x18]
   140001cd8:	mov    rcx,r8
   140001cdb:	shr    rcx,1
   140001cde:	movabs rax,0xaaaaaaaaaaaaaaab
   140001ce8:	mul    rdi
   140001ceb:	shr    rdx,1
   140001cee:	cmp    rcx,rdx
   140001cf1:	jbe    0x140001d05
   140001cf3:	mov    rax,r9
   140001cf6:	sub    rax,rcx
   140001cf9:	cmp    r8,rax
   140001cfc:	lea    rdi,[rcx+r8*1]
   140001d00:	jbe    0x140001d05
   140001d02:	mov    rdi,r9
   140001d05:	lea    rcx,[rdi+0x1]
   140001d09:	xor    r15d,r15d
   140001d0c:	mov    r14d,r15d
   140001d0f:	test   rcx,rcx
   140001d12:	je     0x140001d39
   140001d14:	movabs rax,0x7fffffffffffffff
   140001d1e:	cmp    rcx,rax
   140001d21:	ja     0x140001d33
   140001d23:	add    rcx,rcx
   140001d26:	call   0x1400053e8
   140001d2b:	mov    r14,rax
   140001d2e:	test   rax,rax
   140001d31:	jne    0x140001d39
   140001d33:	call   0x14000514c
   140001d38:	nop
   140001d39:	jmp    0x140001d52
   140001d3b:	xor    r15d,r15d
   140001d3e:	mov    rbx,QWORD PTR [rsp+0x60]
   140001d43:	mov    rsi,QWORD PTR [rsp+0x70]
   140001d48:	mov    rdi,QWORD PTR [rsp+0x68]
   140001d4d:	mov    r14,QWORD PTR [rsp+0x78]
   140001d52:	test   rsi,rsi
   140001d55:	je     0x140001d77
   140001d57:	cmp    QWORD PTR [rbx+0x18],0x8
   140001d5c:	jb     0x140001d63
   140001d5e:	mov    rdx,QWORD PTR [rbx]
   140001d61:	jmp    0x140001d66
   140001d63:	mov    rdx,rbx
   140001d66:	test   rsi,rsi
   140001d69:	je     0x140001d77
   140001d6b:	lea    r8,[rsi+rsi*1]
   140001d6f:	mov    rcx,r14
   140001d72:	call   0x1400056d0
   140001d77:	cmp    QWORD PTR [rbx+0x18],0x8
   140001d7c:	jb     0x140001d86
   140001d7e:	mov    rcx,QWORD PTR [rbx]
   140001d81:	call   0x140005454
   140001d86:	mov    QWORD PTR [rbx],r14
   140001d89:	mov    QWORD PTR [rbx+0x18],rdi
   140001d8d:	mov    QWORD PTR [rbx+0x10],rsi
   140001d91:	cmp    rdi,0x8
   140001d95:	jb     0x140001d9a
   140001d97:	mov    rbx,r14
   140001d9a:	mov    WORD PTR [rbx+rsi*2],r15w
   140001d9f:	add    rsp,0x30
   140001da3:	pop    r15
   140001da5:	pop    r14
   140001da7:	pop    rdi
   140001da8:	pop    rsi
   140001da9:	pop    rbx
   140001daa:	ret    
   140001dab:	int3   
   140001dac:	int3   
   140001dad:	int3   
   140001dae:	int3   
   140001daf:	int3   
   140001db0:	cmp    QWORD PTR [rcx+0x18],0x10
   140001db5:	mov    QWORD PTR [rcx+0x10],rdx
   140001db9:	jb     0x140001dc3
   140001dbb:	mov    rax,QWORD PTR [rcx]
   140001dbe:	mov    BYTE PTR [rax+rdx*1],0x0
   140001dc2:	ret    
   140001dc3:	mov    BYTE PTR [rcx+rdx*1],0x0
   140001dc7:	ret    
   140001dc8:	int3   
   140001dc9:	int3   
   140001dca:	int3   
   140001dcb:	int3   
   140001dcc:	int3   
   140001dcd:	int3   
   140001dce:	int3   
   140001dcf:	int3   
   140001dd0:	cmp    QWORD PTR [rcx+0x18],0x8
   140001dd5:	mov    rax,rcx
   140001dd8:	mov    QWORD PTR [rcx+0x10],rdx
   140001ddc:	jb     0x140001de1
   140001dde:	mov    rax,QWORD PTR [rcx]
   140001de1:	xor    ecx,ecx
   140001de3:	mov    WORD PTR [rax+rdx*2],cx
   140001de7:	ret    
   140001de8:	int3   
   140001de9:	int3   
   140001dea:	int3   
   140001deb:	int3   
   140001dec:	int3   
   140001ded:	int3   
   140001dee:	int3   
   140001def:	int3   
   140001df0:	mov    rax,rdx
   140001df3:	ret    
   140001df4:	int3   
   140001df5:	int3   
   140001df6:	int3   
   140001df7:	int3   
   140001df8:	int3   
   140001df9:	int3   
   140001dfa:	int3   
   140001dfb:	int3   
   140001dfc:	int3   
   140001dfd:	int3   
   140001dfe:	int3   
   140001dff:	int3   
   140001e00:	mov    rax,rdx
   140001e03:	ret    
   140001e04:	int3   
   140001e05:	int3   
   140001e06:	int3   
   140001e07:	int3   
   140001e08:	int3   
   140001e09:	int3   
   140001e0a:	int3   
   140001e0b:	int3   
   140001e0c:	int3   
   140001e0d:	int3   
   140001e0e:	int3   
   140001e0f:	int3   
   140001e10:	mov    QWORD PTR [rsp+0x20],rbx
   140001e15:	push   rdi
   140001e16:	sub    rsp,0x20
   140001e1a:	mov    rdi,rdx
   140001e1d:	mov    rbx,rcx
   140001e20:	cmp    rdx,0xfffffffffffffffe
   140001e24:	ja     0x140001ecd
   140001e2a:	mov    rax,QWORD PTR [rcx+0x18]
   140001e2e:	mov    QWORD PTR [rsp+0x30],rbp
   140001e33:	xor    ebp,ebp
   140001e35:	cmp    rax,rdx
   140001e38:	jae    0x140001e45
   140001e3a:	mov    r8,QWORD PTR [rcx+0x10]
   140001e3e:	call   0x140001b80
   140001e43:	jmp    0x140001eb7
   140001e45:	test   r8b,r8b
   140001e48:	je     0x140001ea2
   140001e4a:	cmp    rdx,0x10
   140001e4e:	jae    0x140001ea2
   140001e50:	mov    QWORD PTR [rsp+0x38],rsi
   140001e55:	mov    rsi,QWORD PTR [rcx+0x10]
   140001e59:	cmp    rdx,rsi
   140001e5c:	cmovb  rsi,rdx
   140001e60:	cmp    rax,0x10
   140001e64:	jb     0x140001e8b
   140001e66:	mov    QWORD PTR [rsp+0x40],r14
   140001e6b:	mov    r14,QWORD PTR [rcx]
   140001e6e:	test   rsi,rsi
   140001e71:	je     0x140001e7e
   140001e73:	mov    r8,rsi
   140001e76:	mov    rdx,r14
   140001e79:	call   0x1400056d0
   140001e7e:	mov    rcx,r14
   140001e81:	call   0x140005454
   140001e86:	mov    r14,QWORD PTR [rsp+0x40]
   140001e8b:	mov    QWORD PTR [rbx+0x10],rsi
   140001e8f:	mov    QWORD PTR [rbx+0x18],0xf
   140001e97:	mov    BYTE PTR [rsi+rbx*1],bpl
   140001e9b:	mov    rsi,QWORD PTR [rsp+0x38]
   140001ea0:	jmp    0x140001eb7
   140001ea2:	test   rdx,rdx
   140001ea5:	jne    0x140001eb7
   140001ea7:	mov    QWORD PTR [rcx+0x10],rbp
   140001eab:	cmp    rax,0x10
   140001eaf:	jb     0x140001eb4
   140001eb1:	mov    rbx,QWORD PTR [rcx]
   140001eb4:	mov    BYTE PTR [rbx],bpl
   140001eb7:	mov    rbp,QWORD PTR [rsp+0x30]
   140001ebc:	mov    rbx,QWORD PTR [rsp+0x48]
   140001ec1:	test   rdi,rdi
   140001ec4:	setne  al
   140001ec7:	add    rsp,0x20
   140001ecb:	pop    rdi
   140001ecc:	ret    
   140001ecd:	lea    rcx,[rip+0x259e4]        # 0x1400278b8
   140001ed4:	call   0x1400051f4
   140001ed9:	int3   
   140001eda:	int3   
   140001edb:	int3   
   140001edc:	int3   
   140001edd:	int3   
   140001ede:	int3   
   140001edf:	int3   
   140001ee0:	mov    QWORD PTR [rsp+0x20],rbx
   140001ee5:	push   rdi
   140001ee6:	sub    rsp,0x20
   140001eea:	movabs rax,0x7ffffffffffffffe
   140001ef4:	mov    rdi,rdx
   140001ef7:	mov    rbx,rcx
   140001efa:	cmp    rdx,rax
   140001efd:	ja     0x140001fa8
   140001f03:	mov    rax,QWORD PTR [rcx+0x18]
   140001f07:	mov    QWORD PTR [rsp+0x38],rsi
   140001f0c:	xor    esi,esi
   140001f0e:	cmp    rax,rdx
   140001f11:	jae    0x140001f1e
   140001f13:	mov    r8,QWORD PTR [rcx+0x10]
   140001f17:	call   0x140001c90
   140001f1c:	jmp    0x140001f92
   140001f1e:	test   r8b,r8b
   140001f21:	je     0x140001f7d
   140001f23:	cmp    rdx,0x8
   140001f27:	jae    0x140001f7d
   140001f29:	mov    QWORD PTR [rsp+0x40],r14
   140001f2e:	mov    r14,QWORD PTR [rcx+0x10]
   140001f32:	cmp    rdx,r14
   140001f35:	cmovb  r14,rdx
   140001f39:	cmp    rax,0x8
   140001f3d:	jb     0x140001f65
   140001f3f:	mov    QWORD PTR [rsp+0x30],rbp
   140001f44:	mov    rbp,QWORD PTR [rcx]
   140001f47:	test   r14,r14
   140001f4a:	je     0x140001f58
   140001f4c:	lea    r8,[r14+r14*1]
   140001f50:	mov    rdx,rbp
   140001f53:	call   0x1400056d0
   140001f58:	mov    rcx,rbp
   140001f5b:	call   0x140005454
   140001f60:	mov    rbp,QWORD PTR [rsp+0x30]
   140001f65:	mov    QWORD PTR [rbx+0x10],r14
   140001f69:	mov    QWORD PTR [rbx+0x18],0x7
   140001f71:	mov    WORD PTR [rbx+r14*2],si
   140001f76:	mov    r14,QWORD PTR [rsp+0x40]
   140001f7b:	jmp    0x140001f92
   140001f7d:	test   rdx,rdx
   140001f80:	jne    0x140001f92
   140001f82:	mov    QWORD PTR [rcx+0x10],rsi
   140001f86:	cmp    rax,0x8
   140001f8a:	jb     0x140001f8f
   140001f8c:	mov    rbx,QWORD PTR [rcx]
   140001f8f:	mov    WORD PTR [rbx],si
   140001f92:	mov    rsi,QWORD PTR [rsp+0x38]
   140001f97:	mov    rbx,QWORD PTR [rsp+0x48]
   140001f9c:	test   rdi,rdi
   140001f9f:	setne  al
   140001fa2:	add    rsp,0x20
   140001fa6:	pop    rdi
   140001fa7:	ret    
   140001fa8:	lea    rcx,[rip+0x25909]        # 0x1400278b8
   140001faf:	call   0x1400051f4
   140001fb4:	int3   
   140001fb5:	int3   
   140001fb6:	int3   
   140001fb7:	int3   
   140001fb8:	int3   
   140001fb9:	int3   
   140001fba:	int3   
   140001fbb:	int3   
   140001fbc:	int3   
   140001fbd:	int3   
   140001fbe:	int3   
   140001fbf:	int3   
   140001fc0:	test   rdx,rdx
   140001fc3:	je     0x140001ffa
   140001fc5:	mov    rax,QWORD PTR [rcx+0x18]
   140001fc9:	cmp    rax,0x10
   140001fcd:	jb     0x140001fd4
   140001fcf:	mov    r8,QWORD PTR [rcx]
   140001fd2:	jmp    0x140001fd7
   140001fd4:	mov    r8,rcx
   140001fd7:	cmp    rdx,r8
   140001fda:	jb     0x140001ffa
   140001fdc:	cmp    rax,0x10
   140001fe0:	jb     0x140001fe7
   140001fe2:	mov    r8,QWORD PTR [rcx]
   140001fe5:	jmp    0x140001fea
   140001fe7:	mov    r8,rcx
   140001fea:	mov    rax,QWORD PTR [rcx+0x10]
   140001fee:	lea    rcx,[r8+rax*1]
   140001ff2:	cmp    rcx,rdx
   140001ff5:	jbe    0x140001ffa
   140001ff7:	mov    al,0x1
   140001ff9:	ret    
   140001ffa:	xor    al,al
   140001ffc:	ret    
   140001ffd:	int3   
   140001ffe:	int3   
   140001fff:	int3   
   140002000:	test   rdx,rdx
   140002003:	je     0x14000203a
   140002005:	mov    rax,QWORD PTR [rcx+0x18]
   140002009:	cmp    rax,0x8
   14000200d:	jb     0x140002014
   14000200f:	mov    r8,QWORD PTR [rcx]
   140002012:	jmp    0x140002017
   140002014:	mov    r8,rcx
   140002017:	cmp    rdx,r8
   14000201a:	jb     0x14000203a
   14000201c:	cmp    rax,0x8
   140002020:	jb     0x140002027
   140002022:	mov    r8,QWORD PTR [rcx]
   140002025:	jmp    0x14000202a
   140002027:	mov    r8,rcx
   14000202a:	mov    rax,QWORD PTR [rcx+0x10]
   14000202e:	lea    rcx,[r8+rax*2]
   140002032:	cmp    rcx,rdx
   140002035:	jbe    0x14000203a
   140002037:	mov    al,0x1
   140002039:	ret    
   14000203a:	xor    al,al
   14000203c:	ret    
   14000203d:	int3   
   14000203e:	int3   
   14000203f:	int3   
   140002040:	cmp    QWORD PTR [rcx+0x18],0x10
   140002045:	jb     0x14000204b
   140002047:	mov    rax,QWORD PTR [rcx]
   14000204a:	ret    
   14000204b:	mov    rax,rcx
   14000204e:	ret    
   14000204f:	int3   
   140002050:	cmp    QWORD PTR [rcx+0x18],0x10
   140002055:	jb     0x14000205b
   140002057:	mov    rax,QWORD PTR [rcx]
   14000205a:	ret    
   14000205b:	mov    rax,rcx
   14000205e:	ret    
   14000205f:	int3   
   140002060:	cmp    QWORD PTR [rcx+0x18],0x8
   140002065:	jb     0x14000206b
   140002067:	mov    rax,QWORD PTR [rcx]
   14000206a:	ret    
   14000206b:	mov    rax,rcx
   14000206e:	ret    
   14000206f:	int3   
   140002070:	cmp    QWORD PTR [rcx+0x18],0x8
   140002075:	jb     0x14000207b
   140002077:	mov    rax,QWORD PTR [rcx]
   14000207a:	ret    
   14000207b:	mov    rax,rcx
   14000207e:	ret    
   14000207f:	int3   
   140002080:	test   rcx,rcx
   140002083:	jne    0x140002088
   140002085:	xor    eax,eax
   140002087:	ret    
   140002088:	sub    rcx,rdx
   14000208b:	sar    rcx,1
   14000208e:	mov    rax,rcx
   140002091:	ret    
   140002092:	int3   
   140002093:	int3   
   140002094:	int3   
   140002095:	int3   
   140002096:	int3   
   140002097:	int3   
   140002098:	int3   
   140002099:	int3   
   14000209a:	int3   
   14000209b:	int3   
   14000209c:	int3   
   14000209d:	int3   
   14000209e:	int3   
   14000209f:	int3   
   1400020a0:	mov    QWORD PTR [rsp+0x10],rbx
   1400020a5:	push   rdi
   1400020a6:	sub    rsp,0x20
   1400020aa:	mov    rdi,r8
   1400020ad:	mov    rbx,rcx
   1400020b0:	test   dl,dl
   1400020b2:	je     0x1400020dd
   1400020b4:	cmp    QWORD PTR [rcx+0x18],0x10
   1400020b9:	jb     0x1400020dd
   1400020bb:	mov    QWORD PTR [rsp+0x30],rsi
   1400020c0:	mov    rsi,QWORD PTR [rcx]
   1400020c3:	test   r8,r8
   1400020c6:	je     0x1400020d0
   1400020c8:	mov    rdx,rsi
   1400020cb:	call   0x1400056d0
   1400020d0:	mov    rcx,rsi
   1400020d3:	call   0x140005454
   1400020d8:	mov    rsi,QWORD PTR [rsp+0x30]
   1400020dd:	mov    QWORD PTR [rbx+0x18],0xf
   1400020e5:	mov    QWORD PTR [rbx+0x10],rdi
   1400020e9:	mov    BYTE PTR [rdi+rbx*1],0x0
   1400020ed:	mov    rbx,QWORD PTR [rsp+0x38]
   1400020f2:	add    rsp,0x20
   1400020f6:	pop    rdi
   1400020f7:	ret    
   1400020f8:	int3   
   1400020f9:	int3   
   1400020fa:	int3   
   1400020fb:	int3   
   1400020fc:	int3   
   1400020fd:	int3   
   1400020fe:	int3   
   1400020ff:	int3   
   140002100:	mov    QWORD PTR [rsp+0x10],rbx
   140002105:	push   rdi
   140002106:	sub    rsp,0x20
   14000210a:	mov    rdi,r8
   14000210d:	mov    rbx,rcx
   140002110:	test   dl,dl
   140002112:	je     0x140002140
   140002114:	cmp    QWORD PTR [rcx+0x18],0x8
   140002119:	jb     0x140002140
   14000211b:	mov    QWORD PTR [rsp+0x30],rsi
   140002120:	mov    rsi,QWORD PTR [rcx]
   140002123:	test   r8,r8
   140002126:	je     0x140002133
   140002128:	add    r8,r8
   14000212b:	mov    rdx,rsi
   14000212e:	call   0x1400056d0
   140002133:	mov    rcx,rsi
   140002136:	call   0x140005454
   14000213b:	mov    rsi,QWORD PTR [rsp+0x30]
   140002140:	mov    QWORD PTR [rbx+0x18],0x7
   140002148:	mov    QWORD PTR [rbx+0x10],rdi
   14000214c:	xor    eax,eax
   14000214e:	mov    WORD PTR [rbx+rdi*2],ax
   140002152:	mov    rbx,QWORD PTR [rsp+0x38]
   140002157:	add    rsp,0x20
   14000215b:	pop    rdi
   14000215c:	ret    
   14000215d:	int3   
   14000215e:	int3   
   14000215f:	int3   
   140002160:	sub    rsp,0x28
   140002164:	lea    rcx,[rip+0x2574d]        # 0x1400278b8
   14000216b:	call   0x1400051f4
   140002170:	int3   
   140002171:	int3   
   140002172:	int3   
   140002173:	int3   
   140002174:	int3   
   140002175:	int3   
   140002176:	int3   
   140002177:	int3   
   140002178:	int3   
   140002179:	int3   
   14000217a:	int3   
   14000217b:	int3   
   14000217c:	int3   
   14000217d:	int3   
   14000217e:	int3   
   14000217f:	int3   
   140002180:	sub    rsp,0x28
   140002184:	lea    rcx,[rip+0x2572d]        # 0x1400278b8
   14000218b:	call   0x1400051f4
   140002190:	int3   
   140002191:	int3   
   140002192:	int3   
   140002193:	int3   
   140002194:	int3   
   140002195:	int3   
   140002196:	int3   
   140002197:	int3   
   140002198:	int3   
   140002199:	int3   
   14000219a:	int3   
   14000219b:	int3   
   14000219c:	int3   
   14000219d:	int3   
   14000219e:	int3   
   14000219f:	int3   
   1400021a0:	sub    rsp,0x28
   1400021a4:	lea    rcx,[rip+0x2571d]        # 0x1400278c8
   1400021ab:	call   0x14000522c
   1400021b0:	int3   
   1400021b1:	int3   
   1400021b2:	int3   
   1400021b3:	int3   
   1400021b4:	int3   
   1400021b5:	int3   
   1400021b6:	int3   
   1400021b7:	int3   
   1400021b8:	int3   
   1400021b9:	int3   
   1400021ba:	int3   
   1400021bb:	int3   
   1400021bc:	int3   
   1400021bd:	int3   
   1400021be:	int3   
   1400021bf:	int3   
   1400021c0:	sub    rsp,0x28
   1400021c4:	lea    rcx,[rip+0x256fd]        # 0x1400278c8
   1400021cb:	call   0x14000522c
   1400021d0:	int3   
   1400021d1:	int3   
   1400021d2:	int3   
   1400021d3:	int3   
   1400021d4:	int3   
   1400021d5:	int3   
   1400021d6:	int3   
   1400021d7:	int3   
   1400021d8:	int3   
   1400021d9:	int3   
   1400021da:	int3   
   1400021db:	int3   
   1400021dc:	int3   
   1400021dd:	int3   
   1400021de:	int3   
   1400021df:	int3   
   1400021e0:	sub    rsp,0x28
   1400021e4:	xor    eax,eax
   1400021e6:	test   rdx,rdx
   1400021e9:	je     0x1400021fe
   1400021eb:	cmp    rdx,0xffffffffffffffff
   1400021ef:	ja     0x140002203
   1400021f1:	mov    rcx,rdx
   1400021f4:	call   0x1400053e8
   1400021f9:	test   rax,rax
   1400021fc:	je     0x140002203
   1400021fe:	add    rsp,0x28
   140002202:	ret    
   140002203:	call   0x14000514c
   140002208:	int3   
   140002209:	int3   
   14000220a:	int3   
   14000220b:	int3   
   14000220c:	int3   
   14000220d:	int3   
   14000220e:	int3   
   14000220f:	int3   
   140002210:	sub    rsp,0x28
   140002214:	xor    eax,eax
   140002216:	test   rdx,rdx
   140002219:	je     0x140002238
   14000221b:	movabs rax,0x7fffffffffffffff
   140002225:	cmp    rdx,rax
   140002228:	ja     0x14000223d
   14000222a:	lea    rcx,[rdx+rdx*1]
   14000222e:	call   0x1400053e8
   140002233:	test   rax,rax
   140002236:	je     0x14000223d
   140002238:	add    rsp,0x28
   14000223c:	ret    
   14000223d:	call   0x14000514c
   140002242:	int3   
   140002243:	int3   
   140002244:	int3   
   140002245:	int3   
   140002246:	int3   
   140002247:	int3   
   140002248:	int3   
   140002249:	int3   
   14000224a:	int3   
   14000224b:	int3   
   14000224c:	int3   
   14000224d:	int3   
   14000224e:	int3   
   14000224f:	int3   
   140002250:	sub    rsp,0x28
   140002254:	xor    eax,eax
   140002256:	test   rdx,rdx
   140002259:	je     0x14000226e
   14000225b:	cmp    rdx,0xffffffffffffffff
   14000225f:	ja     0x140002273
   140002261:	mov    rcx,rdx
   140002264:	call   0x1400053e8
   140002269:	test   rax,rax
   14000226c:	je     0x140002273
   14000226e:	add    rsp,0x28
   140002272:	ret    
   140002273:	call   0x14000514c
   140002278:	int3   
   140002279:	int3   
   14000227a:	int3   
   14000227b:	int3   
   14000227c:	int3   
   14000227d:	int3   
   14000227e:	int3   
   14000227f:	int3   
   140002280:	sub    rsp,0x28
   140002284:	xor    eax,eax
   140002286:	test   rdx,rdx
   140002289:	je     0x1400022a8
   14000228b:	movabs rax,0x7fffffffffffffff
   140002295:	cmp    rdx,rax
   140002298:	ja     0x1400022ad
   14000229a:	lea    rcx,[rdx+rdx*1]
   14000229e:	call   0x1400053e8
   1400022a3:	test   rax,rax
   1400022a6:	je     0x1400022ad
   1400022a8:	add    rsp,0x28
   1400022ac:	ret    
   1400022ad:	call   0x14000514c
   1400022b2:	int3   
   1400022b3:	int3   
   1400022b4:	int3   
   1400022b5:	int3   
   1400022b6:	int3   
   1400022b7:	int3   
   1400022b8:	int3   
   1400022b9:	int3   
   1400022ba:	int3   
   1400022bb:	int3   
   1400022bc:	int3   
   1400022bd:	int3   
   1400022be:	int3   
   1400022bf:	int3   
   1400022c0:	or     r9,0xffffffffffffffff
   1400022c4:	xor    r8d,r8d
   1400022c7:	jmp    0x1400022d0
   1400022cc:	int3   
   1400022cd:	int3   
   1400022ce:	int3   
   1400022cf:	int3   
   1400022d0:	mov    QWORD PTR [rsp+0x10],rbx
   1400022d5:	mov    QWORD PTR [rsp+0x18],rbp
   1400022da:	mov    QWORD PTR [rsp+0x20],rsi
   1400022df:	push   r14
   1400022e1:	sub    rsp,0x20
   1400022e5:	mov    rax,QWORD PTR [rdx+0x10]
   1400022e9:	mov    rsi,r9
   1400022ec:	mov    rbp,r8
   1400022ef:	mov    r14,rdx
   1400022f2:	mov    rbx,rcx
   1400022f5:	cmp    rax,r8
   1400022f8:	jb     0x1400023e5
   1400022fe:	sub    rax,r8
   140002301:	mov    r8,QWORD PTR [rcx+0x10]
   140002305:	cmp    rax,r9
   140002308:	cmovb  rsi,rax
   14000230c:	or     rax,0xffffffffffffffff
   140002310:	sub    rax,r8
   140002313:	cmp    rax,rsi
   140002316:	jbe    0x1400023f2
   14000231c:	mov    QWORD PTR [rsp+0x30],rdi
   140002321:	test   rsi,rsi
   140002324:	je     0x1400023c7
   14000232a:	lea    rdi,[r8+rsi*1]
   14000232e:	movabs rax,0x7ffffffffffffffe
   140002338:	cmp    rdi,rax
   14000233b:	ja     0x1400023ff
   140002341:	mov    rcx,QWORD PTR [rcx+0x18]
   140002345:	cmp    rcx,rdi
   140002348:	jae    0x140002370
   14000234a:	mov    rdx,rdi
   14000234d:	mov    rcx,rbx
   140002350:	call   0x140001c90
   140002355:	test   rdi,rdi
   140002358:	je     0x1400023c7
   14000235a:	cmp    QWORD PTR [r14+0x18],0x8
   14000235f:	jb     0x140002364
   140002361:	mov    r14,QWORD PTR [r14]
   140002364:	cmp    QWORD PTR [rbx+0x18],0x8
   140002369:	jb     0x140002391
   14000236b:	mov    rcx,QWORD PTR [rbx]
   14000236e:	jmp    0x140002394
   140002370:	test   rdi,rdi
   140002373:	jne    0x14000235a
   140002375:	xor    eax,eax
   140002377:	mov    QWORD PTR [rbx+0x10],rax
   14000237b:	cmp    rcx,0x8
   14000237f:	jb     0x140002389
   140002381:	mov    rcx,QWORD PTR [rbx]
   140002384:	mov    WORD PTR [rcx],ax
   140002387:	jmp    0x1400023c7
   140002389:	mov    rcx,rbx
   14000238c:	mov    WORD PTR [rbx],ax
   14000238f:	jmp    0x1400023c7
   140002391:	mov    rcx,rbx
   140002394:	test   rsi,rsi
   140002397:	je     0x1400023ae
   140002399:	mov    rax,QWORD PTR [rbx+0x10]
   14000239d:	lea    r8,[rsi+rsi*1]
   1400023a1:	lea    rdx,[r14+rbp*2]
   1400023a5:	lea    rcx,[rcx+rax*2]
   1400023a9:	call   0x1400056d0
   1400023ae:	cmp    QWORD PTR [rbx+0x18],0x8
   1400023b3:	mov    QWORD PTR [rbx+0x10],rdi
   1400023b7:	jb     0x1400023be
   1400023b9:	mov    rcx,QWORD PTR [rbx]
   1400023bc:	jmp    0x1400023c1
   1400023be:	mov    rcx,rbx
   1400023c1:	xor    eax,eax
   1400023c3:	mov    WORD PTR [rcx+rdi*2],ax
   1400023c7:	mov    rdi,QWORD PTR [rsp+0x30]
   1400023cc:	mov    rbp,QWORD PTR [rsp+0x40]
   1400023d1:	mov    rsi,QWORD PTR [rsp+0x48]
   1400023d6:	mov    rax,rbx
   1400023d9:	mov    rbx,QWORD PTR [rsp+0x38]
   1400023de:	add    rsp,0x20
   1400023e2:	pop    r14
   1400023e4:	ret    
   1400023e5:	lea    rcx,[rip+0x254dc]        # 0x1400278c8
   1400023ec:	call   0x14000522c
   1400023f1:	int3   
   1400023f2:	lea    rcx,[rip+0x254bf]        # 0x1400278b8
   1400023f9:	call   0x1400051f4
   1400023fe:	int3   
   1400023ff:	lea    rcx,[rip+0x254b2]        # 0x1400278b8
   140002406:	call   0x1400051f4
   14000240b:	int3   
   14000240c:	int3   
   14000240d:	int3   
   14000240e:	int3   
   14000240f:	int3   
   140002410:	cmp    WORD PTR [rdx],0x0
   140002414:	jne    0x14000241e
   140002416:	xor    r8d,r8d
   140002419:	jmp    0x140002440
   14000241e:	or     r8,0xffffffffffffffff
   140002422:	inc    r8
   140002425:	cmp    WORD PTR [rdx+r8*2],0x0
   14000242b:	jne    0x140002422
   14000242d:	jmp    0x140002440
   140002432:	int3   
   140002433:	int3   
   140002434:	int3   
   140002435:	int3   
   140002436:	int3   
   140002437:	int3   
   140002438:	int3   
   140002439:	int3   
   14000243a:	int3   
   14000243b:	int3   
   14000243c:	int3   
   14000243d:	int3   
   14000243e:	int3   
   14000243f:	int3   
   140002440:	mov    QWORD PTR [rsp+0x10],rbx
   140002445:	mov    QWORD PTR [rsp+0x18],rsi
   14000244a:	push   r14
   14000244c:	sub    rsp,0x20
   140002450:	mov    r14,r8
   140002453:	mov    rsi,rdx
   140002456:	mov    rbx,rcx
   140002459:	test   rdx,rdx
   14000245c:	je     0x1400024c0
   14000245e:	mov    rdx,QWORD PTR [rcx+0x18]
   140002462:	cmp    rdx,0x8
   140002466:	jb     0x14000246d
   140002468:	mov    rax,QWORD PTR [rcx]
   14000246b:	jmp    0x140002470
   14000246d:	mov    rax,rcx
   140002470:	cmp    rsi,rax
   140002473:	jb     0x1400024c0
   140002475:	cmp    rdx,0x8
   140002479:	jb     0x14000247e
   14000247b:	mov    rcx,QWORD PTR [rcx]
   14000247e:	mov    rax,QWORD PTR [rbx+0x10]
   140002482:	lea    rcx,[rcx+rax*2]
   140002486:	cmp    rcx,rsi
   140002489:	jbe    0x1400024c0
   14000248b:	cmp    rdx,0x8
   14000248f:	jb     0x140002496
   140002491:	mov    rax,QWORD PTR [rbx]
   140002494:	jmp    0x140002499
   140002496:	mov    rax,rbx
   140002499:	sub    rsi,rax
   14000249c:	mov    r9,r8
   14000249f:	mov    rdx,rbx
   1400024a2:	sar    rsi,1
   1400024a5:	mov    rcx,rbx
   1400024a8:	mov    r8,rsi
   1400024ab:	mov    rbx,QWORD PTR [rsp+0x38]
   1400024b0:	mov    rsi,QWORD PTR [rsp+0x40]
   1400024b5:	add    rsp,0x20
   1400024b9:	pop    r14
   1400024bb:	jmp    0x1400022d0
   1400024c0:	mov    r8,QWORD PTR [rbx+0x10]
   1400024c4:	or     rax,0xffffffffffffffff
   1400024c8:	sub    rax,r8
   1400024cb:	cmp    rax,r14
   1400024ce:	jbe    0x14000258d
   1400024d4:	mov    QWORD PTR [rsp+0x30],rdi
   1400024d9:	test   r14,r14
   1400024dc:	je     0x140002574
   1400024e2:	lea    rdi,[r8+r14*1]
   1400024e6:	movabs rax,0x7ffffffffffffffe
   1400024f0:	cmp    rdi,rax
   1400024f3:	ja     0x14000259a
   1400024f9:	mov    rcx,QWORD PTR [rbx+0x18]
   1400024fd:	cmp    rcx,rdi
   140002500:	jae    0x14000251e
   140002502:	mov    rdx,rdi
   140002505:	mov    rcx,rbx
   140002508:	call   0x140001c90
   14000250d:	test   rdi,rdi
   140002510:	je     0x140002574
   140002512:	cmp    QWORD PTR [rbx+0x18],0x8
   140002517:	jb     0x14000253f
   140002519:	mov    rcx,QWORD PTR [rbx]
   14000251c:	jmp    0x140002542
   14000251e:	test   rdi,rdi
   140002521:	jne    0x140002512
   140002523:	xor    eax,eax
   140002525:	mov    QWORD PTR [rbx+0x10],rax
   140002529:	cmp    rcx,0x8
   14000252d:	jb     0x140002537
   14000252f:	mov    rcx,QWORD PTR [rbx]
   140002532:	mov    WORD PTR [rcx],ax
   140002535:	jmp    0x140002574
   140002537:	mov    rcx,rbx
   14000253a:	mov    WORD PTR [rbx],ax
   14000253d:	jmp    0x140002574
   14000253f:	mov    rcx,rbx
   140002542:	test   r14,r14
   140002545:	je     0x14000255b
   140002547:	mov    rax,QWORD PTR [rbx+0x10]
   14000254b:	lea    r8,[r14+r14*1]
   14000254f:	mov    rdx,rsi
   140002552:	lea    rcx,[rcx+rax*2]
   140002556:	call   0x1400056d0
   14000255b:	cmp    QWORD PTR [rbx+0x18],0x8
   140002560:	mov    QWORD PTR [rbx+0x10],rdi
   140002564:	jb     0x14000256b
   140002566:	mov    rcx,QWORD PTR [rbx]
   140002569:	jmp    0x14000256e
   14000256b:	mov    rcx,rbx
   14000256e:	xor    eax,eax
   140002570:	mov    WORD PTR [rcx+rdi*2],ax
   140002574:	mov    rdi,QWORD PTR [rsp+0x30]
   140002579:	mov    rsi,QWORD PTR [rsp+0x40]
   14000257e:	mov    rax,rbx
   140002581:	mov    rbx,QWORD PTR [rsp+0x38]
   140002586:	add    rsp,0x20
   14000258a:	pop    r14
   14000258c:	ret    
   14000258d:	lea    rcx,[rip+0x25324]        # 0x1400278b8
   140002594:	call   0x1400051f4
   140002599:	int3   
   14000259a:	lea    rcx,[rip+0x25317]        # 0x1400278b8
   1400025a1:	call   0x1400051f4
   1400025a6:	int3   
   1400025a7:	int3   
   1400025a8:	int3   
   1400025a9:	int3   
   1400025aa:	int3   
   1400025ab:	int3   
   1400025ac:	int3   
   1400025ad:	int3   
   1400025ae:	int3   
   1400025af:	int3   
   1400025b0:	mov    QWORD PTR [rsp+0x18],rbx
   1400025b5:	mov    QWORD PTR [rsp+0x20],rbp
   1400025ba:	push   r14
   1400025bc:	sub    rsp,0x20
   1400025c0:	or     rax,0xffffffffffffffff
   1400025c4:	movzx  r14d,r8w
   1400025c8:	mov    r8,QWORD PTR [rcx+0x10]
   1400025cc:	sub    rax,r8
   1400025cf:	mov    rbp,rdx
   1400025d2:	mov    rbx,rcx
   1400025d5:	cmp    rax,rdx
   1400025d8:	jbe    0x1400026bf
   1400025de:	mov    QWORD PTR [rsp+0x30],rsi
   1400025e3:	test   rdx,rdx
   1400025e6:	je     0x1400026a6
   1400025ec:	lea    rsi,[r8+rdx*1]
   1400025f0:	movabs rax,0x7ffffffffffffffe
   1400025fa:	cmp    rsi,rax
   1400025fd:	ja     0x1400026cc
   140002603:	mov    rcx,QWORD PTR [rcx+0x18]
   140002607:	cmp    rcx,rsi
   14000260a:	jae    0x14000263b
   14000260c:	mov    rdx,rsi
   14000260f:	mov    rcx,rbx
   140002612:	call   0x140001c90
   140002617:	test   rsi,rsi
   14000261a:	je     0x1400026a6
   140002620:	mov    rcx,QWORD PTR [rbx+0x10]
   140002624:	cmp    rbp,0x1
   140002628:	jne    0x140002666
   14000262a:	cmp    QWORD PTR [rbx+0x18],0x8
   14000262f:	jb     0x14000265c
   140002631:	mov    rax,QWORD PTR [rbx]
   140002634:	mov    WORD PTR [rax+rcx*2],r14w
   140002639:	jmp    0x14000268d
   14000263b:	test   rsi,rsi
   14000263e:	jne    0x140002620
   140002640:	xor    eax,eax
   140002642:	mov    QWORD PTR [rbx+0x10],rax
   140002646:	cmp    rcx,0x8
   14000264a:	jb     0x140002654
   14000264c:	mov    rcx,QWORD PTR [rbx]
   14000264f:	mov    WORD PTR [rcx],ax
   140002652:	jmp    0x1400026a6
   140002654:	mov    rcx,rbx
   140002657:	mov    WORD PTR [rbx],ax
   14000265a:	jmp    0x1400026a6
   14000265c:	mov    rax,rbx
   14000265f:	mov    WORD PTR [rbx+rcx*2],r14w
   140002664:	jmp    0x14000268d
   140002666:	cmp    QWORD PTR [rbx+0x18],0x8
   14000266b:	mov    QWORD PTR [rsp+0x38],rdi
   140002670:	jb     0x140002677
   140002672:	mov    rax,QWORD PTR [rbx]
   140002675:	jmp    0x14000267a
   140002677:	mov    rax,rbx
   14000267a:	lea    rdi,[rax+rcx*2]
   14000267e:	movzx  eax,r14w
   140002682:	mov    rcx,rbp
   140002685:	rep stos WORD PTR es:[rdi],ax
   140002688:	mov    rdi,QWORD PTR [rsp+0x38]
   14000268d:	cmp    QWORD PTR [rbx+0x18],0x8
   140002692:	mov    QWORD PTR [rbx+0x10],rsi
   140002696:	jb     0x14000269d
   140002698:	mov    rcx,QWORD PTR [rbx]
   14000269b:	jmp    0x1400026a0
   14000269d:	mov    rcx,rbx
   1400026a0:	xor    eax,eax
   1400026a2:	mov    WORD PTR [rcx+rsi*2],ax
   1400026a6:	mov    rsi,QWORD PTR [rsp+0x30]
   1400026ab:	mov    rbp,QWORD PTR [rsp+0x48]
   1400026b0:	mov    rax,rbx
   1400026b3:	mov    rbx,QWORD PTR [rsp+0x40]
   1400026b8:	add    rsp,0x20
   1400026bc:	pop    r14
   1400026be:	ret    
   1400026bf:	lea    rcx,[rip+0x251f2]        # 0x1400278b8
   1400026c6:	call   0x1400051f4
   1400026cb:	int3   
   1400026cc:	lea    rcx,[rip+0x251e5]        # 0x1400278b8
   1400026d3:	call   0x1400051f4
   1400026d8:	int3   
   1400026d9:	int3   
   1400026da:	int3   
   1400026db:	int3   
   1400026dc:	int3   
   1400026dd:	int3   
   1400026de:	int3   
   1400026df:	int3   
   1400026e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400026e5:	mov    QWORD PTR [rsp+0x10],rbp
   1400026ea:	mov    QWORD PTR [rsp+0x18],rsi
   1400026ef:	push   rdi
   1400026f0:	sub    rsp,0x20
   1400026f4:	mov    rdi,QWORD PTR [rdx+0x10]
   1400026f8:	mov    rbp,r8
   1400026fb:	mov    rsi,rdx
   1400026fe:	mov    rbx,rcx
   140002701:	cmp    rdi,r8
   140002704:	jb     0x1400027e4
   14000270a:	sub    rdi,r8
   14000270d:	cmp    r9,rdi
   140002710:	cmovb  rdi,r9
   140002714:	cmp    rcx,rdx
   140002717:	jne    0x140002748
   140002719:	lea    rax,[rdi+r8*1]
   14000271d:	cmp    QWORD PTR [rcx+0x10],rax
   140002721:	jb     0x1400027f1
   140002727:	cmp    QWORD PTR [rcx+0x18],0x10
   14000272c:	mov    QWORD PTR [rcx+0x10],rax
   140002730:	jb     0x140002735
   140002732:	mov    rcx,QWORD PTR [rcx]
   140002735:	mov    BYTE PTR [rcx+rax*1],0x0
   140002739:	xor    edx,edx
   14000273b:	mov    rcx,rbx
   14000273e:	call   0x140002e80
   140002743:	jmp    0x1400027cc
   140002748:	cmp    rdi,0xfffffffffffffffe
   14000274c:	ja     0x1400027fe
   140002752:	mov    rax,QWORD PTR [rcx+0x18]
   140002756:	cmp    rax,rdi
   140002759:	jae    0x140002782
   14000275b:	mov    r8,QWORD PTR [rcx+0x10]
   14000275f:	mov    rdx,rdi
   140002762:	call   0x140001b80
   140002767:	test   rdi,rdi
   14000276a:	je     0x1400027cc
   14000276c:	cmp    QWORD PTR [rsi+0x18],0x10
   140002771:	jb     0x140002776
   140002773:	mov    rsi,QWORD PTR [rsi]
   140002776:	cmp    QWORD PTR [rbx+0x18],0x10
   14000277b:	jb     0x1400027a1
   14000277d:	mov    rcx,QWORD PTR [rbx]
   140002780:	jmp    0x1400027a4
   140002782:	test   rdi,rdi
   140002785:	jne    0x14000276c
   140002787:	mov    QWORD PTR [rcx+0x10],rdi
   14000278b:	cmp    rax,0x10
   14000278f:	jb     0x140002799
   140002791:	mov    rax,QWORD PTR [rcx]
   140002794:	mov    BYTE PTR [rax],dil
   140002797:	jmp    0x1400027cc
   140002799:	mov    rax,rcx
   14000279c:	mov    BYTE PTR [rcx],0x0
   14000279f:	jmp    0x1400027cc
   1400027a1:	mov    rcx,rbx
   1400027a4:	test   rdi,rdi
   1400027a7:	je     0x1400027b5
   1400027a9:	lea    rdx,[rsi+rbp*1]
   1400027ad:	mov    r8,rdi
   1400027b0:	call   0x1400056d0
   1400027b5:	cmp    QWORD PTR [rbx+0x18],0x10
   1400027ba:	mov    QWORD PTR [rbx+0x10],rdi
   1400027be:	jb     0x1400027c5
   1400027c0:	mov    rax,QWORD PTR [rbx]
   1400027c3:	jmp    0x1400027c8
   1400027c5:	mov    rax,rbx
   1400027c8:	mov    BYTE PTR [rax+rdi*1],0x0
   1400027cc:	mov    rbp,QWORD PTR [rsp+0x38]
   1400027d1:	mov    rsi,QWORD PTR [rsp+0x40]
   1400027d6:	mov    rax,rbx
   1400027d9:	mov    rbx,QWORD PTR [rsp+0x30]
   1400027de:	add    rsp,0x20
   1400027e2:	pop    rdi
   1400027e3:	ret    
   1400027e4:	lea    rcx,[rip+0x250dd]        # 0x1400278c8
   1400027eb:	call   0x14000522c
   1400027f0:	int3   
   1400027f1:	lea    rcx,[rip+0x250d0]        # 0x1400278c8
   1400027f8:	call   0x14000522c
   1400027fd:	int3   
   1400027fe:	lea    rcx,[rip+0x250b3]        # 0x1400278b8
   140002805:	call   0x1400051f4
   14000280a:	int3   
   14000280b:	int3   
   14000280c:	int3   
   14000280d:	int3   
   14000280e:	int3   
   14000280f:	int3   
   140002810:	cmp    BYTE PTR [rdx],0x0
   140002813:	jne    0x14000281d
   140002815:	xor    r8d,r8d
   140002818:	jmp    0x140002830
   14000281d:	or     r8,0xffffffffffffffff
   140002821:	inc    r8
   140002824:	cmp    BYTE PTR [rdx+r8*1],0x0
   140002829:	jne    0x140002821
   14000282b:	jmp    0x140002830
   140002830:	mov    QWORD PTR [rsp+0x8],rbx
   140002835:	mov    QWORD PTR [rsp+0x10],rsi
   14000283a:	push   rdi
   14000283b:	sub    rsp,0x20
   14000283f:	mov    rdi,r8
   140002842:	mov    rsi,rdx
   140002845:	mov    rbx,rcx
   140002848:	test   rdx,rdx
   14000284b:	je     0x1400028a7
   14000284d:	mov    rdx,QWORD PTR [rcx+0x18]
   140002851:	cmp    rdx,0x10
   140002855:	jb     0x14000285c
   140002857:	mov    rax,QWORD PTR [rcx]
   14000285a:	jmp    0x14000285f
   14000285c:	mov    rax,rcx
   14000285f:	cmp    rsi,rax
   140002862:	jb     0x1400028a7
   140002864:	cmp    rdx,0x10
   140002868:	jb     0x14000286d
   14000286a:	mov    rcx,QWORD PTR [rcx]
   14000286d:	add    rcx,QWORD PTR [rbx+0x10]
   140002871:	cmp    rcx,rsi
   140002874:	jbe    0x1400028a7
   140002876:	cmp    rdx,0x10
   14000287a:	jb     0x140002881
   14000287c:	mov    rax,QWORD PTR [rbx]
   14000287f:	jmp    0x140002884
   140002881:	mov    rax,rbx
   140002884:	sub    rsi,rax
   140002887:	mov    r9,r8
   14000288a:	mov    rdx,rbx
   14000288d:	mov    r8,rsi
   140002890:	mov    rcx,rbx
   140002893:	mov    rbx,QWORD PTR [rsp+0x30]
   140002898:	mov    rsi,QWORD PTR [rsp+0x38]
   14000289d:	add    rsp,0x20
   1400028a1:	pop    rdi
   1400028a2:	jmp    0x1400026e0
   1400028a7:	cmp    r8,0xfffffffffffffffe
   1400028ab:	ja     0x140002955
   1400028b1:	mov    rax,QWORD PTR [rbx+0x18]
   1400028b5:	cmp    rax,r8
   1400028b8:	jae    0x1400028da
   1400028ba:	mov    r8,QWORD PTR [rbx+0x10]
   1400028be:	mov    rdx,rdi
   1400028c1:	mov    rcx,rbx
   1400028c4:	call   0x140001b80
   1400028c9:	test   rdi,rdi
   1400028cc:	je     0x140002942
   1400028ce:	cmp    QWORD PTR [rbx+0x18],0x10
   1400028d3:	jb     0x140002918
   1400028d5:	mov    rcx,QWORD PTR [rbx]
   1400028d8:	jmp    0x14000291b
   1400028da:	test   r8,r8
   1400028dd:	jne    0x1400028c9
   1400028df:	mov    QWORD PTR [rbx+0x10],r8
   1400028e3:	cmp    rax,0x10
   1400028e7:	jb     0x140002902
   1400028e9:	mov    rax,QWORD PTR [rbx]
   1400028ec:	mov    BYTE PTR [rax],r8b
   1400028ef:	mov    rax,rbx
   1400028f2:	mov    rbx,QWORD PTR [rsp+0x30]
   1400028f7:	mov    rsi,QWORD PTR [rsp+0x38]
   1400028fc:	add    rsp,0x20
   140002900:	pop    rdi
   140002901:	ret    
   140002902:	mov    rax,rbx
   140002905:	mov    BYTE PTR [rbx],0x0
   140002908:	mov    rbx,QWORD PTR [rsp+0x30]
   14000290d:	mov    rsi,QWORD PTR [rsp+0x38]
   140002912:	add    rsp,0x20
   140002916:	pop    rdi
   140002917:	ret    
   140002918:	mov    rcx,rbx
   14000291b:	test   rdi,rdi
   14000291e:	je     0x14000292b
   140002920:	mov    r8,rdi
   140002923:	mov    rdx,rsi
   140002926:	call   0x1400056d0
   14000292b:	cmp    QWORD PTR [rbx+0x18],0x10
   140002930:	mov    QWORD PTR [rbx+0x10],rdi
   140002934:	jb     0x14000293b
   140002936:	mov    rax,QWORD PTR [rbx]
   140002939:	jmp    0x14000293e
   14000293b:	mov    rax,rbx
   14000293e:	mov    BYTE PTR [rax+rdi*1],0x0
   140002942:	mov    rsi,QWORD PTR [rsp+0x38]
   140002947:	mov    rax,rbx
   14000294a:	mov    rbx,QWORD PTR [rsp+0x30]
   14000294f:	add    rsp,0x20
   140002953:	pop    rdi
   140002954:	ret    
   140002955:	lea    rcx,[rip+0x24f5c]        # 0x1400278b8
   14000295c:	call   0x1400051f4
   140002961:	int3   
   140002962:	int3   
   140002963:	int3   
   140002964:	int3   
   140002965:	int3   
   140002966:	int3   
   140002967:	int3   
   140002968:	int3   
   140002969:	int3   
   14000296a:	int3   
   14000296b:	int3   
   14000296c:	int3   
   14000296d:	int3   
   14000296e:	int3   
   14000296f:	int3   
   140002970:	mov    QWORD PTR [rsp+0x8],rbx
   140002975:	mov    QWORD PTR [rsp+0x10],rbp
   14000297a:	mov    QWORD PTR [rsp+0x18],rsi
   14000297f:	push   rdi
   140002980:	sub    rsp,0x20
   140002984:	mov    rdi,QWORD PTR [rdx+0x10]
   140002988:	mov    rbp,r8
   14000298b:	mov    rsi,rdx
   14000298e:	mov    rbx,rcx
   140002991:	cmp    rdi,r8
   140002994:	jb     0x140002a8c
   14000299a:	sub    rdi,r8
   14000299d:	cmp    r9,rdi
   1400029a0:	cmovb  rdi,r9
   1400029a4:	cmp    rcx,rdx
   1400029a7:	jne    0x1400029df
   1400029a9:	lea    rcx,[rdi+r8*1]
   1400029ad:	cmp    QWORD PTR [rbx+0x10],rcx
   1400029b1:	jb     0x140002a99
   1400029b7:	cmp    QWORD PTR [rbx+0x18],0x8
   1400029bc:	mov    QWORD PTR [rbx+0x10],rcx
   1400029c0:	jb     0x1400029c7
   1400029c2:	mov    rdx,QWORD PTR [rbx]
   1400029c5:	jmp    0x1400029ca
   1400029c7:	mov    rdx,rbx
   1400029ca:	xor    eax,eax
   1400029cc:	mov    WORD PTR [rdx+rcx*2],ax
   1400029d0:	xor    edx,edx
   1400029d2:	mov    rcx,rbx
   1400029d5:	call   0x140002f90
   1400029da:	jmp    0x140002a74
   1400029df:	movabs rax,0x7ffffffffffffffe
   1400029e9:	cmp    rdi,rax
   1400029ec:	ja     0x140002aa6
   1400029f2:	mov    rcx,QWORD PTR [rcx+0x18]
   1400029f6:	cmp    rcx,rdi
   1400029f9:	jae    0x140002a25
   1400029fb:	mov    r8,QWORD PTR [rbx+0x10]
   1400029ff:	mov    rdx,rdi
   140002a02:	mov    rcx,rbx
   140002a05:	call   0x140001c90
   140002a0a:	test   rdi,rdi
   140002a0d:	je     0x140002a74
   140002a0f:	cmp    QWORD PTR [rsi+0x18],0x8
   140002a14:	jb     0x140002a19
   140002a16:	mov    rsi,QWORD PTR [rsi]
   140002a19:	cmp    QWORD PTR [rbx+0x18],0x8
   140002a1e:	jb     0x140002a46
   140002a20:	mov    rcx,QWORD PTR [rbx]
   140002a23:	jmp    0x140002a49
   140002a25:	test   rdi,rdi
   140002a28:	jne    0x140002a0f
   140002a2a:	xor    eax,eax
   140002a2c:	mov    QWORD PTR [rbx+0x10],rax
   140002a30:	cmp    rcx,0x8
   140002a34:	jb     0x140002a3e
   140002a36:	mov    rcx,QWORD PTR [rbx]
   140002a39:	mov    WORD PTR [rcx],ax
   140002a3c:	jmp    0x140002a74
   140002a3e:	mov    rcx,rbx
   140002a41:	mov    WORD PTR [rbx],ax
   140002a44:	jmp    0x140002a74
   140002a46:	mov    rcx,rbx
   140002a49:	test   rdi,rdi
   140002a4c:	je     0x140002a5b
   140002a4e:	lea    r8,[rdi+rdi*1]
   140002a52:	lea    rdx,[rsi+rbp*2]
   140002a56:	call   0x1400056d0
   140002a5b:	cmp    QWORD PTR [rbx+0x18],0x8
   140002a60:	mov    QWORD PTR [rbx+0x10],rdi
   140002a64:	jb     0x140002a6b
   140002a66:	mov    rcx,QWORD PTR [rbx]
   140002a69:	jmp    0x140002a6e
   140002a6b:	mov    rcx,rbx
   140002a6e:	xor    eax,eax
   140002a70:	mov    WORD PTR [rcx+rdi*2],ax
   140002a74:	mov    rbp,QWORD PTR [rsp+0x38]
   140002a79:	mov    rsi,QWORD PTR [rsp+0x40]
   140002a7e:	mov    rax,rbx
   140002a81:	mov    rbx,QWORD PTR [rsp+0x30]
   140002a86:	add    rsp,0x20
   140002a8a:	pop    rdi
   140002a8b:	ret    
   140002a8c:	lea    rcx,[rip+0x24e35]        # 0x1400278c8
   140002a93:	call   0x14000522c
   140002a98:	int3   
   140002a99:	lea    rcx,[rip+0x24e28]        # 0x1400278c8
   140002aa0:	call   0x14000522c
   140002aa5:	int3   
   140002aa6:	lea    rcx,[rip+0x24e0b]        # 0x1400278b8
   140002aad:	call   0x1400051f4
   140002ab2:	int3   
   140002ab3:	int3   
   140002ab4:	int3   
   140002ab5:	int3   
   140002ab6:	int3   
   140002ab7:	int3   
   140002ab8:	int3   
   140002ab9:	int3   
   140002aba:	int3   
   140002abb:	int3   
   140002abc:	int3   
   140002abd:	int3   
   140002abe:	int3   
   140002abf:	int3   
   140002ac0:	cmp    WORD PTR [rdx],0x0
   140002ac4:	jne    0x140002ace
   140002ac6:	xor    r8d,r8d
   140002ac9:	jmp    0x140002af0
   140002ace:	or     r8,0xffffffffffffffff
   140002ad2:	inc    r8
   140002ad5:	cmp    WORD PTR [rdx+r8*2],0x0
   140002adb:	jne    0x140002ad2
   140002add:	jmp    0x140002af0
   140002ae2:	int3   
   140002ae3:	int3   
   140002ae4:	int3   
   140002ae5:	int3   
   140002ae6:	int3   
   140002ae7:	int3   
   140002ae8:	int3   
   140002ae9:	int3   
   140002aea:	int3   
   140002aeb:	int3   
   140002aec:	int3   
   140002aed:	int3   
   140002aee:	int3   
   140002aef:	int3   
   140002af0:	mov    QWORD PTR [rsp+0x8],rbx
   140002af5:	mov    QWORD PTR [rsp+0x10],rsi
   140002afa:	push   rdi
   140002afb:	sub    rsp,0x20
   140002aff:	mov    rdi,r8
   140002b02:	mov    rsi,rdx
   140002b05:	mov    rbx,rcx
   140002b08:	test   rdx,rdx
   140002b0b:	je     0x140002b6e
   140002b0d:	mov    rdx,QWORD PTR [rcx+0x18]
   140002b11:	cmp    rdx,0x8
   140002b15:	jb     0x140002b1c
   140002b17:	mov    rax,QWORD PTR [rcx]
   140002b1a:	jmp    0x140002b1f
   140002b1c:	mov    rax,rcx
   140002b1f:	cmp    rsi,rax
   140002b22:	jb     0x140002b6e
   140002b24:	cmp    rdx,0x8
   140002b28:	jb     0x140002b2d
   140002b2a:	mov    rcx,QWORD PTR [rcx]
   140002b2d:	mov    rax,QWORD PTR [rbx+0x10]
   140002b31:	lea    rcx,[rcx+rax*2]
   140002b35:	cmp    rcx,rsi
   140002b38:	jbe    0x140002b6e
   140002b3a:	cmp    rdx,0x8
   140002b3e:	jb     0x140002b45
   140002b40:	mov    rax,QWORD PTR [rbx]
   140002b43:	jmp    0x140002b48
   140002b45:	mov    rax,rbx
   140002b48:	sub    rsi,rax
   140002b4b:	mov    r9,r8
   140002b4e:	mov    rdx,rbx
   140002b51:	sar    rsi,1
   140002b54:	mov    rcx,rbx
   140002b57:	mov    r8,rsi
   140002b5a:	mov    rbx,QWORD PTR [rsp+0x30]
   140002b5f:	mov    rsi,QWORD PTR [rsp+0x38]
   140002b64:	add    rsp,0x20
   140002b68:	pop    rdi
   140002b69:	jmp    0x140002970
   140002b6e:	movabs rax,0x7ffffffffffffffe
   140002b78:	cmp    r8,rax
   140002b7b:	ja     0x140002c2d
   140002b81:	mov    rcx,QWORD PTR [rbx+0x18]
   140002b85:	cmp    rcx,r8
   140002b88:	jae    0x140002baa
   140002b8a:	mov    r8,QWORD PTR [rbx+0x10]
   140002b8e:	mov    rdx,rdi
   140002b91:	mov    rcx,rbx
   140002b94:	call   0x140001c90
   140002b99:	test   rdi,rdi
   140002b9c:	je     0x140002c1a
   140002b9e:	cmp    QWORD PTR [rbx+0x18],0x8
   140002ba3:	jb     0x140002bed
   140002ba5:	mov    rcx,QWORD PTR [rbx]
   140002ba8:	jmp    0x140002bf0
   140002baa:	test   r8,r8
   140002bad:	jne    0x140002b99
   140002baf:	xor    eax,eax
   140002bb1:	mov    QWORD PTR [rbx+0x10],rax
   140002bb5:	cmp    rcx,0x8
   140002bb9:	jb     0x140002bd4
   140002bbb:	mov    rcx,QWORD PTR [rbx]
   140002bbe:	mov    WORD PTR [rcx],ax
   140002bc1:	mov    rax,rbx
   140002bc4:	mov    rbx,QWORD PTR [rsp+0x30]
   140002bc9:	mov    rsi,QWORD PTR [rsp+0x38]
   140002bce:	add    rsp,0x20
   140002bd2:	pop    rdi
   140002bd3:	ret    
   140002bd4:	mov    WORD PTR [rbx],ax
   140002bd7:	mov    rcx,rbx
   140002bda:	mov    rax,rbx
   140002bdd:	mov    rbx,QWORD PTR [rsp+0x30]
   140002be2:	mov    rsi,QWORD PTR [rsp+0x38]
   140002be7:	add    rsp,0x20
   140002beb:	pop    rdi
   140002bec:	ret    
   140002bed:	mov    rcx,rbx
   140002bf0:	test   rdi,rdi
   140002bf3:	je     0x140002c01
   140002bf5:	lea    r8,[rdi+rdi*1]
   140002bf9:	mov    rdx,rsi
   140002bfc:	call   0x1400056d0
   140002c01:	cmp    QWORD PTR [rbx+0x18],0x8
   140002c06:	mov    QWORD PTR [rbx+0x10],rdi
   140002c0a:	jb     0x140002c11
   140002c0c:	mov    rcx,QWORD PTR [rbx]
   140002c0f:	jmp    0x140002c14
   140002c11:	mov    rcx,rbx
   140002c14:	xor    eax,eax
   140002c16:	mov    WORD PTR [rcx+rdi*2],ax
   140002c1a:	mov    rsi,QWORD PTR [rsp+0x38]
   140002c1f:	mov    rax,rbx
   140002c22:	mov    rbx,QWORD PTR [rsp+0x30]
   140002c27:	add    rsp,0x20
   140002c2b:	pop    rdi
   140002c2c:	ret    
   140002c2d:	lea    rcx,[rip+0x24c84]        # 0x1400278b8
   140002c34:	call   0x1400051f4
   140002c39:	int3   
   140002c3a:	int3   
   140002c3b:	int3   
   140002c3c:	int3   
   140002c3d:	int3   
   140002c3e:	int3   
   140002c3f:	int3   
   140002c40:	movzx  eax,BYTE PTR [rdx]
   140002c43:	mov    BYTE PTR [rcx],al
   140002c45:	ret    
   140002c46:	int3   
   140002c47:	int3   
   140002c48:	int3   
   140002c49:	int3   
   140002c4a:	int3   
   140002c4b:	int3   
   140002c4c:	int3   
   140002c4d:	int3   
   140002c4e:	int3   
   140002c4f:	int3   
   140002c50:	sub    rsp,0x8
   140002c54:	mov    r9,rcx
   140002c57:	test   rdx,rdx
   140002c5a:	je     0x140002c71
   140002c5c:	mov    QWORD PTR [rsp],rdi
   140002c60:	mov    rdi,rcx
   140002c63:	movzx  eax,r8w
   140002c67:	mov    rcx,rdx
   140002c6a:	rep stos WORD PTR es:[rdi],ax
   140002c6d:	mov    rdi,QWORD PTR [rsp]
   140002c71:	mov    rax,r9
   140002c74:	add    rsp,0x8
   140002c78:	ret    
   140002c79:	int3   
   140002c7a:	int3   
   140002c7b:	int3   
   140002c7c:	int3   
   140002c7d:	int3   
   140002c7e:	int3   
   140002c7f:	int3   
   140002c80:	movzx  eax,WORD PTR [rdx]
   140002c83:	mov    WORD PTR [rcx],ax
   140002c86:	ret    
   140002c87:	int3   
   140002c88:	int3   
   140002c89:	int3   
   140002c8a:	int3   
   140002c8b:	int3   
   140002c8c:	int3   
   140002c8d:	int3   
   140002c8e:	int3   
   140002c8f:	int3   
   140002c90:	cmp    QWORD PTR [rcx+0x18],0x8
   140002c95:	jb     0x140002ca1
   140002c97:	mov    rax,QWORD PTR [rcx]
   140002c9a:	mov    QWORD PTR [rdx],rax
   140002c9d:	mov    rax,rdx
   140002ca0:	ret    
   140002ca1:	mov    QWORD PTR [rdx],rcx
   140002ca4:	mov    rax,rdx
   140002ca7:	ret    
   140002ca8:	int3   
   140002ca9:	int3   
   140002caa:	int3   
   140002cab:	int3   
   140002cac:	int3   
   140002cad:	int3   
   140002cae:	int3   
   140002caf:	int3   
   140002cb0:	cmp    QWORD PTR [rcx+0x18],0x8
   140002cb5:	jb     0x140002cbb
   140002cb7:	mov    rax,QWORD PTR [rcx]
   140002cba:	ret    
   140002cbb:	mov    rax,rcx
   140002cbe:	ret    
   140002cbf:	int3   
   140002cc0:	mov    rax,QWORD PTR [rcx+0x8]
   140002cc4:	ret    
   140002cc5:	int3   
   140002cc6:	int3   
   140002cc7:	int3   
   140002cc8:	int3   
   140002cc9:	int3   
   140002cca:	int3   
   140002ccb:	int3   
   140002ccc:	int3   
   140002ccd:	int3   
   140002cce:	int3   
   140002ccf:	int3   
   140002cd0:	mov    rax,QWORD PTR [rcx+0x8]
   140002cd4:	ret    
   140002cd5:	int3   
   140002cd6:	int3   
   140002cd7:	int3   
   140002cd8:	int3   
   140002cd9:	int3   
   140002cda:	int3   
   140002cdb:	int3   
   140002cdc:	int3   
   140002cdd:	int3   
   140002cde:	int3   
   140002cdf:	int3   
   140002ce0:	rex push rbx
   140002ce2:	sub    rsp,0x20
   140002ce6:	mov    rbx,rcx
   140002ce9:	test   r8,r8
   140002cec:	je     0x140002cf3
   140002cee:	call   0x1400056d0
   140002cf3:	mov    rax,rbx
   140002cf6:	add    rsp,0x20
   140002cfa:	pop    rbx
   140002cfb:	ret    
   140002cfc:	int3   
   140002cfd:	int3   
   140002cfe:	int3   
   140002cff:	int3   
   140002d00:	rex push rbx
   140002d02:	sub    rsp,0x20
   140002d06:	mov    rbx,rcx
   140002d09:	test   r8,r8
   140002d0c:	je     0x140002d16
   140002d0e:	add    r8,r8
   140002d11:	call   0x1400056d0
   140002d16:	mov    rax,rbx
   140002d19:	add    rsp,0x20
   140002d1d:	pop    rbx
   140002d1e:	ret    
   140002d1f:	int3   
   140002d20:	mov    rcx,rdx
   140002d23:	jmp    0x140005454
   140002d28:	int3   
   140002d29:	int3   
   140002d2a:	int3   
   140002d2b:	int3   
   140002d2c:	int3   
   140002d2d:	int3   
   140002d2e:	int3   
   140002d2f:	int3   
   140002d30:	mov    rcx,rdx
   140002d33:	jmp    0x140005454
   140002d38:	int3   
   140002d39:	int3   
   140002d3a:	int3   
   140002d3b:	int3   
   140002d3c:	int3   
   140002d3d:	int3   
   140002d3e:	int3   
   140002d3f:	int3   
   140002d40:	mov    rcx,rdx
   140002d43:	jmp    0x140005454
   140002d48:	int3   
   140002d49:	int3   
   140002d4a:	int3   
   140002d4b:	int3   
   140002d4c:	int3   
   140002d4d:	int3   
   140002d4e:	int3   
   140002d4f:	int3   
   140002d50:	mov    rcx,rdx
   140002d53:	jmp    0x140005454
   140002d58:	int3   
   140002d59:	int3   
   140002d5a:	int3   
   140002d5b:	int3   
   140002d5c:	int3   
   140002d5d:	int3   
   140002d5e:	int3   
   140002d5f:	int3   
   140002d60:	mov    QWORD PTR [rsp+0x8],rbx
   140002d65:	push   rdi
   140002d66:	sub    rsp,0x20
   140002d6a:	mov    ecx,r8d
   140002d6d:	mov    edi,r8d
   140002d70:	mov    rbx,rdx
   140002d73:	call   0x140005320
   140002d78:	mov    DWORD PTR [rbx],edi
   140002d7a:	test   rax,rax
   140002d7d:	lea    rax,[rip+0x3327c]        # 0x140036000
   140002d84:	jne    0x140002d8d
   140002d86:	lea    rax,[rip+0x33283]        # 0x140036010
   140002d8d:	mov    QWORD PTR [rbx+0x8],rax
   140002d91:	mov    rax,rbx
   140002d94:	mov    rbx,QWORD PTR [rsp+0x30]
   140002d99:	add    rsp,0x20
   140002d9d:	pop    rdi
   140002d9e:	ret    
   140002d9f:	int3   
   140002da0:	mov    DWORD PTR [rdx],r8d
   140002da3:	mov    QWORD PTR [rdx+0x8],rcx
   140002da7:	mov    rax,rdx
   140002daa:	ret    
   140002dab:	int3   
   140002dac:	int3   
   140002dad:	int3   
   140002dae:	int3   
   140002daf:	int3   
   140002db0:	sub    rsp,0x28
   140002db4:	call   QWORD PTR [rip+0x2429e]        # 0x140027058
   140002dba:	cmp    eax,0xffffffff
   140002dbd:	je     0x140002dca
   140002dbf:	test   al,0x10
   140002dc1:	je     0x140002dca
   140002dc3:	mov    al,0x1
   140002dc5:	add    rsp,0x28
   140002dc9:	ret    
   140002dca:	xor    al,al
   140002dcc:	add    rsp,0x28
   140002dd0:	ret    
   140002dd1:	int3   
   140002dd2:	int3   
   140002dd3:	int3   
   140002dd4:	int3   
   140002dd5:	int3   
   140002dd6:	int3   
   140002dd7:	int3   
   140002dd8:	int3   
   140002dd9:	int3   
   140002dda:	int3   
   140002ddb:	int3   
   140002ddc:	int3   
   140002ddd:	int3   
   140002dde:	int3   
   140002ddf:	int3   
   140002de0:	xor    eax,eax
   140002de2:	cmp    QWORD PTR [rcx+0x10],rax
   140002de6:	sete   al
   140002de9:	ret    
   140002dea:	int3   
   140002deb:	int3   
   140002dec:	int3   
   140002ded:	int3   
   140002dee:	int3   
   140002def:	int3   
   140002df0:	cmp    QWORD PTR [rcx+0x18],0x8
   140002df5:	jb     0x140002e09
   140002df7:	mov    rax,QWORD PTR [rcx+0x10]
   140002dfb:	mov    r8,QWORD PTR [rcx]
   140002dfe:	lea    rcx,[r8+rax*2]
   140002e02:	mov    rax,rdx
   140002e05:	mov    QWORD PTR [rdx],rcx
   140002e08:	ret    
   140002e09:	mov    rax,QWORD PTR [rcx+0x10]
   140002e0d:	mov    r8,rcx
   140002e10:	lea    rcx,[rcx+rax*2]
   140002e14:	mov    rax,rdx
   140002e17:	mov    QWORD PTR [rdx],rcx
   140002e1a:	ret    
   140002e1b:	int3   
   140002e1c:	int3   
   140002e1d:	int3   
   140002e1e:	int3   
   140002e1f:	int3   
   140002e20:	cmp    rcx,QWORD PTR [rdx+0x8]
   140002e24:	jne    0x140002e2e
   140002e26:	cmp    DWORD PTR [rdx],r8d
   140002e29:	jne    0x140002e2e
   140002e2b:	mov    al,0x1
   140002e2d:	ret    
   140002e2e:	xor    al,al
   140002e30:	ret    
   140002e31:	int3   
   140002e32:	int3   
   140002e33:	int3   
   140002e34:	int3   
   140002e35:	int3   
   140002e36:	int3   
   140002e37:	int3   
   140002e38:	int3   
   140002e39:	int3   
   140002e3a:	int3   
   140002e3b:	int3   
   140002e3c:	int3   
   140002e3d:	int3   
   140002e3e:	int3   
   140002e3f:	int3   
   140002e40:	rex push rbx
   140002e42:	sub    rsp,0x30
   140002e46:	mov    rax,QWORD PTR [rcx]
   140002e49:	mov    rbx,r8
   140002e4c:	mov    r8d,edx
   140002e4f:	lea    rdx,[rsp+0x20]
   140002e54:	call   QWORD PTR [rax+0x18]
   140002e57:	mov    rcx,QWORD PTR [rbx+0x8]
   140002e5b:	cmp    QWORD PTR [rax+0x8],rcx
   140002e5f:	jne    0x140002e6f
   140002e61:	mov    ecx,DWORD PTR [rbx]
   140002e63:	cmp    DWORD PTR [rax],ecx
   140002e65:	jne    0x140002e6f
   140002e67:	mov    al,0x1
   140002e69:	add    rsp,0x30
   140002e6d:	pop    rbx
   140002e6e:	ret    
   140002e6f:	xor    al,al
   140002e71:	add    rsp,0x30
   140002e75:	pop    rbx
   140002e76:	ret    
   140002e77:	int3   
   140002e78:	int3   
   140002e79:	int3   
   140002e7a:	int3   
   140002e7b:	int3   
   140002e7c:	int3   
   140002e7d:	int3   
   140002e7e:	int3   
   140002e7f:	int3   
   140002e80:	mov    QWORD PTR [rsp+0x8],rbx
   140002e85:	push   rdi
   140002e86:	sub    rsp,0x20
   140002e8a:	mov    rdi,QWORD PTR [rcx+0x10]
   140002e8e:	mov    rbx,rcx
   140002e91:	cmp    rdi,rdx
   140002e94:	jb     0x140002f3e
   140002e9a:	mov    rax,rdi
   140002e9d:	sub    rax,rdx
   140002ea0:	cmp    rax,r8
   140002ea3:	ja     0x140002eda
   140002ea5:	cmp    QWORD PTR [rcx+0x18],0x10
   140002eaa:	mov    QWORD PTR [rcx+0x10],rdx
   140002eae:	jb     0x140002ec5
   140002eb0:	mov    rax,QWORD PTR [rcx]
   140002eb3:	mov    BYTE PTR [rax+rdx*1],0x0
   140002eb7:	mov    rax,rcx
   140002eba:	mov    rbx,QWORD PTR [rsp+0x30]
   140002ebf:	add    rsp,0x20
   140002ec3:	pop    rdi
   140002ec4:	ret    
   140002ec5:	mov    rax,rcx
   140002ec8:	mov    BYTE PTR [rcx+rdx*1],0x0
   140002ecc:	mov    rax,rbx
   140002ecf:	mov    rbx,QWORD PTR [rsp+0x30]
   140002ed4:	add    rsp,0x20
   140002ed8:	pop    rdi
   140002ed9:	ret    
   140002eda:	test   r8,r8
   140002edd:	je     0x140002f30
   140002edf:	cmp    QWORD PTR [rcx+0x18],0x10
   140002ee4:	jb     0x140002eeb
   140002ee6:	mov    rax,QWORD PTR [rcx]
   140002ee9:	jmp    0x140002eee
   140002eeb:	mov    rax,rcx
   140002eee:	sub    rdi,r8
   140002ef1:	lea    rcx,[rax+rdx*1]
   140002ef5:	mov    rax,rdi
   140002ef8:	sub    rax,rdx
   140002efb:	je     0x140002f09
   140002efd:	lea    rdx,[rcx+r8*1]
   140002f01:	mov    r8,rax
   140002f04:	call   0x1400056d0
   140002f09:	cmp    QWORD PTR [rbx+0x18],0x10
   140002f0e:	mov    QWORD PTR [rbx+0x10],rdi
   140002f12:	jb     0x140002f29
   140002f14:	mov    rax,QWORD PTR [rbx]
   140002f17:	mov    BYTE PTR [rax+rdi*1],0x0
   140002f1b:	mov    rax,rbx
   140002f1e:	mov    rbx,QWORD PTR [rsp+0x30]
   140002f23:	add    rsp,0x20
   140002f27:	pop    rdi
   140002f28:	ret    
   140002f29:	mov    rax,rbx
   140002f2c:	mov    BYTE PTR [rbx+rdi*1],0x0
   140002f30:	mov    rax,rbx
   140002f33:	mov    rbx,QWORD PTR [rsp+0x30]
   140002f38:	add    rsp,0x20
   140002f3c:	pop    rdi
   140002f3d:	ret    
   140002f3e:	lea    rcx,[rip+0x24983]        # 0x1400278c8
   140002f45:	call   0x14000522c
   140002f4a:	int3   
   140002f4b:	int3   
   140002f4c:	int3   
   140002f4d:	int3   
   140002f4e:	int3   
   140002f4f:	int3   
   140002f50:	sub    rsp,0x28
   140002f54:	cmp    QWORD PTR [rcx+0x10],rdx
   140002f58:	jb     0x140002f80
   140002f5a:	cmp    QWORD PTR [rcx+0x18],0x10
   140002f5f:	mov    QWORD PTR [rcx+0x10],rdx
   140002f63:	jb     0x140002f74
   140002f65:	mov    rax,QWORD PTR [rcx]
   140002f68:	mov    BYTE PTR [rax+rdx*1],0x0
   140002f6c:	mov    rax,rcx
   140002f6f:	add    rsp,0x28
   140002f73:	ret    
   140002f74:	mov    rax,rcx
   140002f77:	mov    BYTE PTR [rcx+rdx*1],0x0
   140002f7b:	add    rsp,0x28
   140002f7f:	ret    
   140002f80:	lea    rcx,[rip+0x24941]        # 0x1400278c8
   140002f87:	call   0x14000522c
   140002f8c:	int3   
   140002f8d:	int3   
   140002f8e:	int3   
   140002f8f:	int3   
   140002f90:	mov    QWORD PTR [rsp+0x8],rbx
   140002f95:	push   rdi
   140002f96:	sub    rsp,0x20
   140002f9a:	mov    rdi,QWORD PTR [rcx+0x10]
   140002f9e:	mov    r9,r8
   140002fa1:	mov    rbx,rcx
   140002fa4:	cmp    rdi,rdx
   140002fa7:	jb     0x140003030
   140002fad:	mov    rax,rdi
   140002fb0:	sub    rax,rdx
   140002fb3:	cmp    rax,r8
   140002fb6:	ja     0x140002fda
   140002fb8:	cmp    QWORD PTR [rcx+0x18],0x8
   140002fbd:	mov    QWORD PTR [rcx+0x10],rdx
   140002fc1:	jb     0x140002fc6
   140002fc3:	mov    rcx,QWORD PTR [rcx]
   140002fc6:	xor    eax,eax
   140002fc8:	mov    WORD PTR [rcx+rdx*2],ax
   140002fcc:	mov    rax,rbx
   140002fcf:	mov    rbx,QWORD PTR [rsp+0x30]
   140002fd4:	add    rsp,0x20
   140002fd8:	pop    rdi
   140002fd9:	ret    
   140002fda:	test   r8,r8
   140002fdd:	je     0x140003022
   140002fdf:	cmp    QWORD PTR [rcx+0x18],0x8
   140002fe4:	jb     0x140002feb
   140002fe6:	mov    rax,QWORD PTR [rcx]
   140002fe9:	jmp    0x140002fee
   140002feb:	mov    rax,rcx
   140002fee:	sub    rdi,r8
   140002ff1:	lea    rcx,[rax+rdx*2]
   140002ff5:	mov    r8,rdi
   140002ff8:	sub    r8,rdx
   140002ffb:	je     0x140003009
   140002ffd:	lea    rdx,[rcx+r9*2]
   140003001:	add    r8,r8
   140003004:	call   0x1400056d0
   140003009:	cmp    QWORD PTR [rbx+0x18],0x8
   14000300e:	mov    QWORD PTR [rbx+0x10],rdi
   140003012:	jb     0x140003019
   140003014:	mov    rcx,QWORD PTR [rbx]
   140003017:	jmp    0x14000301c
   140003019:	mov    rcx,rbx
   14000301c:	xor    eax,eax
   14000301e:	mov    WORD PTR [rcx+rdi*2],ax
   140003022:	mov    rax,rbx
   140003025:	mov    rbx,QWORD PTR [rsp+0x30]
   14000302a:	add    rsp,0x20
   14000302e:	pop    rdi
   14000302f:	ret    
   140003030:	lea    rcx,[rip+0x24891]        # 0x1400278c8
   140003037:	call   0x14000522c
   14000303c:	int3   
   14000303d:	int3   
   14000303e:	int3   
   14000303f:	int3   
   140003040:	sub    rsp,0x28
   140003044:	cmp    QWORD PTR [rcx+0x10],rdx
   140003048:	jb     0x140003078
   14000304a:	cmp    QWORD PTR [rcx+0x18],0x8
   14000304f:	mov    QWORD PTR [rcx+0x10],rdx
   140003053:	jb     0x140003068
   140003055:	mov    rax,QWORD PTR [rcx]
   140003058:	xor    r8d,r8d
   14000305b:	mov    WORD PTR [rax+rdx*2],r8w
   140003060:	mov    rax,rcx
   140003063:	add    rsp,0x28
   140003067:	ret    
   140003068:	xor    r8d,r8d
   14000306b:	mov    rax,rcx
   14000306e:	mov    WORD PTR [rcx+rdx*2],r8w
   140003073:	add    rsp,0x28
   140003077:	ret    
   140003078:	lea    rcx,[rip+0x24849]        # 0x1400278c8
   14000307f:	call   0x14000522c
   140003084:	int3   
   140003085:	int3   
   140003086:	int3   
   140003087:	int3   
   140003088:	int3   
   140003089:	int3   
   14000308a:	int3   
   14000308b:	int3   
   14000308c:	int3   
   14000308d:	int3   
   14000308e:	int3   
   14000308f:	int3   
   140003090:	sub    rsp,0x28
   140003094:	call   QWORD PTR [rip+0x23fbe]        # 0x140027058
   14000309a:	cmp    eax,0xffffffff
   14000309d:	setne  al
   1400030a0:	add    rsp,0x28
   1400030a4:	ret    
   1400030a5:	int3   
   1400030a6:	int3   
   1400030a7:	int3   
   1400030a8:	int3   
   1400030a9:	int3   
   1400030aa:	int3   
   1400030ab:	int3   
   1400030ac:	int3   
   1400030ad:	int3   
   1400030ae:	int3   
   1400030af:	int3   
   1400030b0:	lea    rax,[rip+0x32f49]        # 0x140036000
   1400030b7:	ret    
   1400030b8:	int3   
   1400030b9:	int3   
   1400030ba:	int3   
   1400030bb:	int3   
   1400030bc:	int3   
   1400030bd:	int3   
   1400030be:	int3   
   1400030bf:	int3   
   1400030c0:	mov    rax,rsp
   1400030c3:	push   rbp
   1400030c4:	push   r12
   1400030c6:	push   r13
   1400030c8:	push   r14
   1400030ca:	push   r15
   1400030cc:	lea    rbp,[rax-0x5f]
   1400030d0:	sub    rsp,0xb0
   1400030d7:	mov    QWORD PTR [rbp+0x7],0xfffffffffffffffe
   1400030df:	mov    QWORD PTR [rax+0x10],rbx
   1400030e3:	mov    QWORD PTR [rax+0x18],rsi
   1400030e7:	mov    QWORD PTR [rax+0x20],rdi
   1400030eb:	call   QWORD PTR [rip+0x23f77]        # 0x140027068
   1400030f1:	movzx  ecx,WORD PTR [rax]
   1400030f4:	mov    edx,0x22
   1400030f9:	cmp    dx,cx
   1400030fc:	jne    0x140003126
   1400030fe:	add    rax,0x2
   140003102:	movzx  ecx,WORD PTR [rax]
   140003105:	test   cx,cx
   140003108:	je     0x1400035a8
   14000310e:	xchg   ax,ax
   140003110:	cmp    cx,dx
   140003113:	je     0x140003154
   140003115:	add    rax,0x2
   140003119:	movzx  ecx,WORD PTR [rax]
   14000311c:	test   cx,cx
   14000311f:	jne    0x140003110
   140003121:	jmp    0x1400035a8
   140003126:	test   cx,cx
   140003129:	je     0x1400035a8
   14000312f:	mov    edx,0x20
   140003134:	lea    r8d,[rdx-0x17]
   140003138:	cmp    dx,cx
   14000313b:	je     0x140003154
   14000313d:	cmp    r8w,cx
   140003141:	je     0x140003154
   140003143:	add    rax,0x2
   140003147:	movzx  ecx,WORD PTR [rax]
   14000314a:	test   cx,cx
   14000314d:	jne    0x140003138
   14000314f:	jmp    0x1400035a8
   140003154:	cmp    WORD PTR [rax],0x0
   140003158:	je     0x1400035a8
   14000315e:	add    rax,0x2
   140003162:	mov    QWORD PTR [rbp+0x67],rax
   140003166:	movzx  ecx,WORD PTR [rax]
   140003169:	cmp    cx,0x20
   14000316d:	je     0x14000315e
   14000316f:	cmp    cx,0x9
   140003173:	je     0x14000315e
   140003175:	test   cx,cx
   140003178:	je     0x1400035a8
   14000317e:	lea    rsi,[rip+0x32e93]        # 0x140036018
   140003185:	xor    edi,edi
   140003187:	lea    r14,[rip+0x32eaa]        # 0x140036038
   14000318e:	lea    r15,[rip+0x32ec3]        # 0x140036058
   140003195:	lea    r12,[rip+0x32edc]        # 0x140036078
   14000319c:	lea    r13,[rip+0x32ef5]        # 0x140036098
   1400031a3:	lea    rdx,[rbp+0x67]
   1400031a7:	lea    rcx,[rbp-0x39]
   1400031ab:	call   0x1400038c0
   1400031b0:	nop
   1400031b1:	lea    rcx,[rbp-0x39]
   1400031b5:	cmp    QWORD PTR [rbp-0x21],0x8
   1400031ba:	cmovae rcx,QWORD PTR [rbp-0x39]
   1400031bf:	lea    rdx,[rip+0x244ca]        # 0x140027690
   1400031c6:	call   QWORD PTR [rip+0x23e64]        # 0x140027030
   1400031cc:	test   eax,eax
   1400031ce:	jne    0x1400032c8
   1400031d4:	lea    rdx,[rbp+0x67]
   1400031d8:	lea    rcx,[rbp-0x59]
   1400031dc:	call   0x1400038c0
   1400031e1:	mov    rbx,rax
   1400031e4:	cmp    rsi,rax
   1400031e7:	je     0x140003223
   1400031e9:	cmp    QWORD PTR [rip+0x32e3f],0x8        # 0x140036030
   1400031f1:	jb     0x1400031ff
   1400031f3:	mov    rcx,QWORD PTR [rip+0x32e1e]        # 0x140036018
   1400031fa:	call   0x140005454
   1400031ff:	mov    QWORD PTR [rip+0x32e26],0x7        # 0x140036030
   14000320a:	mov    QWORD PTR [rip+0x32e17],rdi        # 0x140036028
   140003211:	mov    WORD PTR [rip+0x32e00],di        # 0x140036018
   140003218:	mov    rdx,rbx
   14000321b:	mov    rcx,rsi
   14000321e:	call   0x140001aa0
   140003223:	cmp    QWORD PTR [rbp-0x41],0x8
   140003228:	jb     0x140003233
   14000322a:	mov    rcx,QWORD PTR [rbp-0x59]
   14000322e:	call   0x140005454
   140003233:	mov    rcx,rsi
   140003236:	cmp    QWORD PTR [rip+0x32df2],0x8        # 0x140036030
   14000323e:	cmovae rcx,QWORD PTR [rip+0x32dd2]        # 0x140036018
   140003246:	call   QWORD PTR [rip+0x23e0c]        # 0x140027058
   14000324c:	cmp    eax,0xffffffff
   14000324f:	je     0x140003592
   140003255:	test   al,0x10
   140003257:	je     0x140003592
   14000325d:	mov    QWORD PTR [rbp-0x1],0x7
   140003265:	mov    QWORD PTR [rbp-0x9],rdi
   140003269:	mov    WORD PTR [rbp-0x19],di
   14000326d:	or     r9,0xffffffffffffffff
   140003271:	xor    r8d,r8d
   140003274:	mov    rdx,rsi
   140003277:	lea    rcx,[rbp-0x19]
   14000327b:	call   0x140002970
   140003280:	nop
   140003281:	mov    r8d,0xf
   140003287:	lea    rdx,[rip+0x2441a]        # 0x1400276a8
   14000328e:	lea    rcx,[rbp-0x19]
   140003292:	call   0x140002440
   140003297:	lea    rcx,[rbp-0x19]
   14000329b:	cmp    QWORD PTR [rbp-0x1],0x8
   1400032a0:	cmovae rcx,QWORD PTR [rbp-0x19]
   1400032a5:	call   QWORD PTR [rip+0x23dad]        # 0x140027058
   1400032ab:	cmp    eax,0xffffffff
   1400032ae:	je     0x140003587
   1400032b4:	cmp    QWORD PTR [rbp-0x1],0x8
   1400032b9:	jb     0x140003568
   1400032bf:	mov    rcx,QWORD PTR [rbp-0x19]
   1400032c3:	jmp    0x140003562
   1400032c8:	lea    rcx,[rbp-0x39]
   1400032cc:	cmp    QWORD PTR [rbp-0x21],0x8
   1400032d1:	cmovae rcx,QWORD PTR [rbp-0x39]
   1400032d6:	lea    rdx,[rip+0x243eb]        # 0x1400276c8
   1400032dd:	call   QWORD PTR [rip+0x23d4d]        # 0x140027030
   1400032e3:	test   eax,eax
   1400032e5:	jne    0x140003379
   1400032eb:	lea    rdx,[rbp+0x67]
   1400032ef:	lea    rcx,[rbp-0x59]
   1400032f3:	call   0x1400038c0
   1400032f8:	mov    rbx,rax
   1400032fb:	cmp    r14,rax
   1400032fe:	je     0x14000333a
   140003300:	cmp    QWORD PTR [rip+0x32d48],0x8        # 0x140036050
   140003308:	jb     0x140003316
   14000330a:	mov    rcx,QWORD PTR [rip+0x32d27]        # 0x140036038
   140003311:	call   0x140005454
   140003316:	mov    QWORD PTR [rip+0x32d2f],0x7        # 0x140036050
   140003321:	mov    QWORD PTR [rip+0x32d20],rdi        # 0x140036048
   140003328:	mov    WORD PTR [rip+0x32d09],di        # 0x140036038
   14000332f:	mov    rdx,rbx
   140003332:	mov    rcx,r14
   140003335:	call   0x140001aa0
   14000333a:	cmp    QWORD PTR [rbp-0x41],0x8
   14000333f:	jb     0x14000334a
   140003341:	mov    rcx,QWORD PTR [rbp-0x59]
   140003345:	call   0x140005454
   14000334a:	mov    rcx,r14
   14000334d:	cmp    QWORD PTR [rip+0x32cfb],0x8        # 0x140036050
   140003355:	cmovae rcx,QWORD PTR [rip+0x32cdb]        # 0x140036038
   14000335d:	call   QWORD PTR [rip+0x23cf5]        # 0x140027058
   140003363:	cmp    eax,0xffffffff
   140003366:	je     0x14000359d
   14000336c:	test   al,0x10
   14000336e:	je     0x14000359d
   140003374:	jmp    0x140003568
   140003379:	lea    rcx,[rbp-0x39]
   14000337d:	cmp    QWORD PTR [rbp-0x21],0x8
   140003382:	cmovae rcx,QWORD PTR [rbp-0x39]
   140003387:	lea    rdx,[rip+0x24352]        # 0x1400276e0
   14000338e:	call   QWORD PTR [rip+0x23c9c]        # 0x140027030
   140003394:	test   eax,eax
   140003396:	jne    0x1400033fb
   140003398:	lea    rdx,[rbp+0x67]
   14000339c:	lea    rcx,[rbp-0x59]
   1400033a0:	call   0x1400038c0
   1400033a5:	mov    rbx,rax
   1400033a8:	cmp    r15,rax
   1400033ab:	je     0x1400033e7
   1400033ad:	cmp    QWORD PTR [rip+0x32cbb],0x8        # 0x140036070
   1400033b5:	jb     0x1400033c3
   1400033b7:	mov    rcx,QWORD PTR [rip+0x32c9a]        # 0x140036058
   1400033be:	call   0x140005454
   1400033c3:	mov    QWORD PTR [rip+0x32ca2],0x7        # 0x140036070
   1400033ce:	mov    QWORD PTR [rip+0x32c93],rdi        # 0x140036068
   1400033d5:	mov    WORD PTR [rip+0x32c7c],di        # 0x140036058
   1400033dc:	mov    rdx,rbx
   1400033df:	mov    rcx,r15
   1400033e2:	call   0x140001aa0
   1400033e7:	cmp    QWORD PTR [rbp-0x41],0x8
   1400033ec:	jb     0x140003568
   1400033f2:	mov    rcx,QWORD PTR [rbp-0x59]
   1400033f6:	jmp    0x140003562
   1400033fb:	lea    rcx,[rbp-0x39]
   1400033ff:	cmp    QWORD PTR [rbp-0x21],0x8
   140003404:	cmovae rcx,QWORD PTR [rbp-0x39]
   140003409:	lea    rdx,[rip+0x242e8]        # 0x1400276f8
   140003410:	call   QWORD PTR [rip+0x23c1a]        # 0x140027030
   140003416:	test   eax,eax
   140003418:	jne    0x14000347d
   14000341a:	lea    rdx,[rbp+0x67]
   14000341e:	lea    rcx,[rbp-0x59]
   140003422:	call   0x1400038c0
   140003427:	mov    rbx,rax
   14000342a:	cmp    r12,rax
   14000342d:	je     0x140003469
   14000342f:	cmp    QWORD PTR [rip+0x32c59],0x8        # 0x140036090
   140003437:	jb     0x140003445
   140003439:	mov    rcx,QWORD PTR [rip+0x32c38]        # 0x140036078
   140003440:	call   0x140005454
   140003445:	mov    QWORD PTR [rip+0x32c40],0x7        # 0x140036090
   140003450:	mov    QWORD PTR [rip+0x32c31],rdi        # 0x140036088
   140003457:	mov    WORD PTR [rip+0x32c1a],di        # 0x140036078
   14000345e:	mov    rdx,rbx
   140003461:	mov    rcx,r12
   140003464:	call   0x140001aa0
   140003469:	cmp    QWORD PTR [rbp-0x41],0x8
   14000346e:	jb     0x140003568
   140003474:	mov    rcx,QWORD PTR [rbp-0x59]
   140003478:	jmp    0x140003562
   14000347d:	lea    rcx,[rbp-0x39]
   140003481:	cmp    QWORD PTR [rbp-0x21],0x8
   140003486:	cmovae rcx,QWORD PTR [rbp-0x39]
   14000348b:	lea    rdx,[rip+0x24276]        # 0x140027708
   140003492:	call   QWORD PTR [rip+0x23b98]        # 0x140027030
   140003498:	test   eax,eax
   14000349a:	jne    0x140003568
   1400034a0:	lea    rdx,[rbp+0x67]
   1400034a4:	lea    rcx,[rbp+0xf]
   1400034a8:	call   0x1400038c0
   1400034ad:	nop
   1400034ae:	mov    r8,rax
   1400034b1:	lea    rdx,[rip+0x24268]        # 0x140027720
   1400034b8:	lea    rcx,[rbp-0x59]
   1400034bc:	call   0x1400011c0
   1400034c1:	nop
   1400034c2:	lea    r8,[rip+0x24257]        # 0x140027720
   1400034c9:	mov    rdx,rax
   1400034cc:	lea    rcx,[rbp-0x19]
   1400034d0:	call   0x140001150
   1400034d5:	mov    rbx,rax
   1400034d8:	cmp    r13,rax
   1400034db:	je     0x140003517
   1400034dd:	cmp    QWORD PTR [rip+0x32bcb],0x8        # 0x1400360b0
   1400034e5:	jb     0x1400034f3
   1400034e7:	mov    rcx,QWORD PTR [rip+0x32baa]        # 0x140036098
   1400034ee:	call   0x140005454
   1400034f3:	mov    QWORD PTR [rip+0x32bb2],0x7        # 0x1400360b0
   1400034fe:	mov    QWORD PTR [rip+0x32ba3],rdi        # 0x1400360a8
   140003505:	mov    WORD PTR [rip+0x32b8c],di        # 0x140036098
   14000350c:	mov    rdx,rbx
   14000350f:	mov    rcx,r13
   140003512:	call   0x140001aa0
   140003517:	cmp    QWORD PTR [rbp-0x1],0x8
   14000351c:	jb     0x140003527
   14000351e:	mov    rcx,QWORD PTR [rbp-0x19]
   140003522:	call   0x140005454
   140003527:	mov    QWORD PTR [rbp-0x1],0x7
   14000352f:	mov    QWORD PTR [rbp-0x9],rdi
   140003533:	mov    WORD PTR [rbp-0x19],di
   140003537:	cmp    QWORD PTR [rbp-0x41],0x8
   14000353c:	jb     0x140003547
   14000353e:	mov    rcx,QWORD PTR [rbp-0x59]
   140003542:	call   0x140005454
   140003547:	mov    QWORD PTR [rbp-0x41],0x7
   14000354f:	mov    QWORD PTR [rbp-0x49],rdi
   140003553:	mov    WORD PTR [rbp-0x59],di
   140003557:	cmp    QWORD PTR [rbp+0x27],0x8
   14000355c:	jb     0x140003568
   14000355e:	mov    rcx,QWORD PTR [rbp+0xf]
   140003562:	call   0x140005454
   140003567:	nop
   140003568:	cmp    QWORD PTR [rbp-0x21],0x8
   14000356d:	jb     0x140003578
   14000356f:	mov    rcx,QWORD PTR [rbp-0x39]
   140003573:	call   0x140005454
   140003578:	mov    rax,QWORD PTR [rbp+0x67]
   14000357c:	cmp    WORD PTR [rax],0x0
   140003580:	je     0x1400035a8
   140003582:	jmp    0x1400031a3
   140003587:	mov    ecx,0x6f
   14000358c:	call   0x1400048b0
   140003591:	nop
   140003592:	mov    ecx,0x6e
   140003597:	call   0x1400048b0
   14000359c:	int3   
   14000359d:	mov    ecx,0x70
   1400035a2:	call   0x1400048b0
   1400035a7:	nop
   1400035a8:	lea    r11,[rsp+0xb0]
   1400035b0:	mov    rbx,QWORD PTR [r11+0x38]
   1400035b4:	mov    rsi,QWORD PTR [r11+0x40]
   1400035b8:	mov    rdi,QWORD PTR [r11+0x48]
   1400035bc:	mov    rsp,r11
   1400035bf:	pop    r15
   1400035c1:	pop    r14
   1400035c3:	pop    r13
   1400035c5:	pop    r12
   1400035c7:	pop    rbp
   1400035c8:	ret    
   1400035c9:	int3   
   1400035ca:	int3   
   1400035cb:	int3   
   1400035cc:	int3   
   1400035cd:	int3   
   1400035ce:	int3   
   1400035cf:	int3   
   1400035d0:	mov    rax,rsp
   1400035d3:	push   rdi
   1400035d4:	sub    rsp,0x50
   1400035d8:	mov    QWORD PTR [rax-0x30],0xfffffffffffffffe
   1400035e0:	mov    QWORD PTR [rax+0x8],rbx
   1400035e4:	mov    QWORD PTR [rax+0x10],rbp
   1400035e8:	mov    QWORD PTR [rax+0x18],rsi
   1400035ec:	mov    rbx,rcx
   1400035ef:	xor    ebp,ebp
   1400035f1:	mov    DWORD PTR [rsp+0x20],ebp
   1400035f5:	mov    QWORD PTR [rax-0x10],0x7
   1400035fd:	mov    QWORD PTR [rax-0x18],rbp
   140003601:	mov    WORD PTR [rax-0x28],bp
   140003605:	xor    edx,edx
   140003607:	xor    ecx,ecx
   140003609:	call   QWORD PTR [rip+0x23a51]        # 0x140027060
   14000360f:	mov    esi,eax
   140003611:	test   eax,eax
   140003613:	je     0x140003642
   140003615:	mov    ecx,esi
   140003617:	add    rcx,rcx
   14000361a:	call   0x1400064d4
   14000361f:	mov    rdi,rax
   140003622:	test   rax,rax
   140003625:	je     0x1400036b0
   14000362b:	mov    rdx,rax
   14000362e:	mov    ecx,esi
   140003630:	call   QWORD PTR [rip+0x23a2a]        # 0x140027060
   140003636:	test   eax,eax
   140003638:	jne    0x14000367f
   14000363a:	mov    rcx,rdi
   14000363d:	call   0x140006444
   140003642:	mov    QWORD PTR [rbx+0x18],0x7
   14000364a:	mov    QWORD PTR [rbx+0x10],rbp
   14000364e:	mov    WORD PTR [rbx],bp
   140003651:	xor    r8d,r8d
   140003654:	lea    rdx,[rip+0x24031]        # 0x14002768c
   14000365b:	mov    rcx,rbx
   14000365e:	call   0x140002af0
   140003663:	nop
   140003664:	cmp    QWORD PTR [rsp+0x48],0x8
   14000366a:	jb     0x140003700
   140003670:	mov    rcx,QWORD PTR [rsp+0x30]
   140003675:	call   0x140005454
   14000367a:	jmp    0x140003700
   14000367f:	cmp    WORD PTR [rdi],0x0
   140003683:	jne    0x14000368a
   140003685:	mov    r8,rbp
   140003688:	jmp    0x14000369b
   14000368a:	or     r8,0xffffffffffffffff
   14000368e:	xchg   ax,ax
   140003690:	inc    r8
   140003693:	cmp    WORD PTR [rdi+r8*2],0x0
   140003699:	jne    0x140003690
   14000369b:	mov    rdx,rdi
   14000369e:	lea    rcx,[rsp+0x30]
   1400036a3:	call   0x140002af0
   1400036a8:	mov    rcx,rdi
   1400036ab:	call   0x140006444
   1400036b0:	mov    QWORD PTR [rbx+0x18],0x7
   1400036b8:	mov    QWORD PTR [rbx+0x10],rbp
   1400036bc:	mov    WORD PTR [rbx],bp
   1400036bf:	mov    rcx,QWORD PTR [rsp+0x48]
   1400036c4:	cmp    rcx,0x8
   1400036c8:	jae    0x1400036eb
   1400036ca:	mov    r8,QWORD PTR [rsp+0x40]
   1400036cf:	inc    r8
   1400036d2:	je     0x1400036f3
   1400036d4:	add    r8,r8
   1400036d7:	lea    rdx,[rsp+0x30]
   1400036dc:	mov    rcx,rbx
   1400036df:	call   0x1400056d0
   1400036e4:	mov    rcx,QWORD PTR [rsp+0x48]
   1400036e9:	jmp    0x1400036f3
   1400036eb:	mov    rax,QWORD PTR [rsp+0x30]
   1400036f0:	mov    QWORD PTR [rbx],rax
   1400036f3:	mov    rax,QWORD PTR [rsp+0x40]
   1400036f8:	mov    QWORD PTR [rbx+0x10],rax
   1400036fc:	mov    QWORD PTR [rbx+0x18],rcx
   140003700:	mov    rax,rbx
   140003703:	mov    rbx,QWORD PTR [rsp+0x60]
   140003708:	mov    rbp,QWORD PTR [rsp+0x68]
   14000370d:	mov    rsi,QWORD PTR [rsp+0x70]
   140003712:	add    rsp,0x50
   140003716:	pop    rdi
   140003717:	ret    
   140003718:	int3   
   140003719:	int3   
   14000371a:	int3   
   14000371b:	int3   
   14000371c:	int3   
   14000371d:	int3   
   14000371e:	int3   
   14000371f:	int3   
   140003720:	mov    QWORD PTR [rsp+0x8],rcx
   140003725:	push   rbp
   140003726:	push   rbx
   140003727:	push   rsi
   140003728:	push   rdi
   140003729:	push   r14
   14000372b:	mov    rbp,rsp
   14000372e:	sub    rsp,0x80
   140003735:	mov    QWORD PTR [rbp-0x48],0xfffffffffffffffe
   14000373d:	mov    r14,rcx
   140003740:	xor    edi,edi
   140003742:	mov    DWORD PTR [rbp-0x50],edi
   140003745:	mov    QWORD PTR [rbp-0x28],0x7
   14000374d:	mov    QWORD PTR [rbp-0x30],rdi
   140003751:	mov    WORD PTR [rbp-0x40],di
   140003755:	lea    r8d,[rdi+0x3]
   140003759:	lea    rdx,[rip+0x23fc8]        # 0x140027728
   140003760:	lea    rcx,[rbp-0x40]
   140003764:	call   0x140002af0
   140003769:	nop
   14000376a:	lea    r8,[rbp-0x40]
   14000376e:	lea    rdx,[rip+0x23fbb]        # 0x140027730
   140003775:	lea    rcx,[rbp-0x20]
   140003779:	call   0x1400011c0
   14000377e:	nop
   14000377f:	cmp    QWORD PTR [rbp-0x28],0x8
   140003784:	jb     0x14000378f
   140003786:	mov    rcx,QWORD PTR [rbp-0x40]
   14000378a:	call   0x140005454
   14000378f:	mov    QWORD PTR [rbp-0x28],0x7
   140003797:	mov    QWORD PTR [rbp-0x30],rdi
   14000379b:	mov    WORD PTR [rbp-0x40],di
   14000379f:	mov    QWORD PTR [r14+0x18],0x7
   1400037a7:	mov    QWORD PTR [r14+0x10],rdi
   1400037ab:	mov    WORD PTR [r14],di
   1400037af:	mov    DWORD PTR [rbp-0x50],0x1
   1400037b6:	lea    rdx,[rbp-0x20]
   1400037ba:	cmp    QWORD PTR [rbp-0x8],0x8
   1400037bf:	cmovae rdx,QWORD PTR [rbp-0x20]
   1400037c4:	lea    rax,[rbp+0x40]
   1400037c8:	mov    QWORD PTR [rsp+0x20],rax
   1400037cd:	mov    r9d,0x20019
   1400037d3:	xor    r8d,r8d
   1400037d6:	mov    rcx,0xffffffff80000002
   1400037dd:	call   QWORD PTR [rip+0x2381d]        # 0x140027000
   1400037e3:	test   eax,eax
   1400037e5:	jne    0x140003896
   1400037eb:	mov    DWORD PTR [rbp+0x38],edi
   1400037ee:	lea    rax,[rbp+0x38]
   1400037f2:	mov    QWORD PTR [rsp+0x28],rax
   1400037f7:	mov    QWORD PTR [rsp+0x20],rdi
   1400037fc:	xor    r9d,r9d
   1400037ff:	xor    r8d,r8d
   140003802:	lea    rdx,[rip+0x23f5f]        # 0x140027768
   140003809:	mov    rcx,QWORD PTR [rbp+0x40]
   14000380d:	call   QWORD PTR [rip+0x237fd]        # 0x140027010
   140003813:	mov    ebx,eax
   140003815:	mov    ecx,DWORD PTR [rbp+0x38]
   140003818:	add    ecx,0x2
   14000381b:	mov    DWORD PTR [rbp+0x38],ecx
   14000381e:	mov    edx,0x1
   140003823:	call   0x140006400
   140003828:	mov    rsi,rax
   14000382b:	test   ebx,ebx
   14000382d:	jne    0x14000387e
   14000382f:	test   rax,rax
   140003832:	je     0x14000388b
   140003834:	lea    rax,[rbp+0x38]
   140003838:	mov    QWORD PTR [rsp+0x28],rax
   14000383d:	mov    QWORD PTR [rsp+0x20],rsi
   140003842:	xor    r9d,r9d
   140003845:	xor    r8d,r8d
   140003848:	lea    rdx,[rip+0x23f19]        # 0x140027768
   14000384f:	mov    rcx,QWORD PTR [rbp+0x40]
   140003853:	call   QWORD PTR [rip+0x237b7]        # 0x140027010
   140003859:	test   eax,eax
   14000385b:	jne    0x14000387e
   14000385d:	cmp    WORD PTR [rsi],ax
   140003860:	je     0x140003870
   140003862:	or     rdi,0xffffffffffffffff
   140003866:	inc    rdi
   140003869:	cmp    WORD PTR [rsi+rdi*2],0x0
   14000386e:	jne    0x140003866
   140003870:	mov    r8,rdi
   140003873:	mov    rdx,rsi
   140003876:	mov    rcx,r14
   140003879:	call   0x140002af0
   14000387e:	test   rsi,rsi
   140003881:	je     0x14000388b
   140003883:	mov    rcx,rsi
   140003886:	call   0x140006444
   14000388b:	mov    rcx,QWORD PTR [rbp+0x40]
   14000388f:	call   QWORD PTR [rip+0x23773]        # 0x140027008
   140003895:	nop
   140003896:	cmp    QWORD PTR [rbp-0x8],0x8
   14000389b:	jb     0x1400038a6
   14000389d:	mov    rcx,QWORD PTR [rbp-0x20]
   1400038a1:	call   0x140005454
   1400038a6:	mov    rax,r14
   1400038a9:	add    rsp,0x80
   1400038b0:	pop    r14
   1400038b2:	pop    rdi
   1400038b3:	pop    rsi
   1400038b4:	pop    rbx
   1400038b5:	pop    rbp
   1400038b6:	ret    
   1400038b7:	int3   
   1400038b8:	int3   
   1400038b9:	int3   
   1400038ba:	int3   
   1400038bb:	int3   
   1400038bc:	int3   
   1400038bd:	int3   
   1400038be:	int3   
   1400038bf:	int3   
   1400038c0:	mov    QWORD PTR [rsp+0x10],rbx
   1400038c5:	mov    QWORD PTR [rsp+0x18],rsi
   1400038ca:	push   rdi
   1400038cb:	sub    rsp,0x30
   1400038cf:	mov    rbx,QWORD PTR [rdx]
   1400038d2:	xor    r10d,r10d
   1400038d5:	mov    rsi,rdx
   1400038d8:	mov    rdx,rbx
   1400038db:	mov    rdi,rcx
   1400038de:	mov    DWORD PTR [rsp+0x20],r10d
   1400038e3:	mov    r8d,r10d
   1400038e6:	movzx  eax,WORD PTR [rbx]
   1400038e9:	cmp    ax,0x20
   1400038ed:	je     0x1400038f5
   1400038ef:	cmp    ax,0x9
   1400038f3:	jne    0x1400038ff
   1400038f5:	add    rbx,0x2
   1400038f9:	add    rdx,0x2
   1400038fd:	jmp    0x1400038e6
   1400038ff:	movzx  eax,WORD PTR [rbx]
   140003902:	mov    ecx,0x22
   140003907:	cmp    cx,ax
   14000390a:	jne    0x140003940
   14000390c:	movzx  eax,WORD PTR [rbx+0x2]
   140003910:	add    rbx,0x2
   140003914:	add    rdx,0x2
   140003918:	test   ax,ax
   14000391b:	je     0x140003935
   14000391d:	nop    DWORD PTR [rax]
   140003920:	cmp    ax,cx
   140003923:	je     0x14000393a
   140003925:	movzx  eax,WORD PTR [rbx+0x2]
   140003929:	add    rbx,0x2
   14000392d:	inc    r8
   140003930:	test   ax,ax
   140003933:	jne    0x140003920
   140003935:	cmp    WORD PTR [rbx],cx
   140003938:	jne    0x14000396b
   14000393a:	add    rbx,0x2
   14000393e:	jmp    0x14000396b
   140003940:	test   ax,ax
   140003943:	je     0x14000396b
   140003945:	mov    ecx,0x20
   14000394a:	lea    r9d,[rcx-0x17]
   14000394e:	xchg   ax,ax
   140003950:	cmp    cx,ax
   140003953:	je     0x14000396b
   140003955:	cmp    r9w,ax
   140003959:	je     0x14000396b
   14000395b:	movzx  eax,WORD PTR [rbx+0x2]
   14000395f:	add    rbx,0x2
   140003963:	inc    r8
   140003966:	test   ax,ax
   140003969:	jne    0x140003950
   14000396b:	movzx  r9d,BYTE PTR [rsp+0x40]
   140003971:	mov    QWORD PTR [rdi+0x18],0x7
   140003979:	mov    QWORD PTR [rdi+0x10],r10
   14000397d:	lea    r8,[rdx+r8*2]
   140003981:	mov    rcx,rdi
   140003984:	mov    WORD PTR [rdi],r10w
   140003988:	call   0x1400012a0
   14000398d:	mov    QWORD PTR [rsi],rbx
   140003990:	mov    rbx,QWORD PTR [rsp+0x48]
   140003995:	mov    rsi,QWORD PTR [rsp+0x50]
   14000399a:	mov    rax,rdi
   14000399d:	add    rsp,0x30
   1400039a1:	pop    rdi
   1400039a2:	ret    
   1400039a3:	int3   
   1400039a4:	int3   
   1400039a5:	int3   
   1400039a6:	int3   
   1400039a7:	int3   
   1400039a8:	int3   
   1400039a9:	int3   
   1400039aa:	int3   
   1400039ab:	int3   
   1400039ac:	int3   
   1400039ad:	int3   
   1400039ae:	int3   
   1400039af:	int3   
   1400039b0:	mov    QWORD PTR [rsp+0x18],rbx
   1400039b5:	push   rsi
   1400039b6:	push   r14
   1400039b8:	push   r15
   1400039ba:	sub    rsp,0x20
   1400039be:	mov    rbx,rcx
   1400039c1:	mov    rcx,QWORD PTR [rcx+0x10]
   1400039c5:	mov    r14,r9
   1400039c8:	mov    rsi,r8
   1400039cb:	mov    r15,rdx
   1400039ce:	cmp    rcx,rdx
   1400039d1:	jb     0x140003b23
   1400039d7:	mov    rax,QWORD PTR [r8+0x10]
   1400039db:	cmp    rax,r9
   1400039de:	jb     0x140003b23
   1400039e4:	sub    rax,r9
   1400039e7:	mov    QWORD PTR [rsp+0x48],rdi
   1400039ec:	mov    rdi,QWORD PTR [rsp+0x60]
   1400039f1:	cmp    rax,rdi
   1400039f4:	cmovb  rdi,rax
   1400039f8:	or     rax,0xffffffffffffffff
   1400039fc:	sub    rax,rcx
   1400039ff:	cmp    rax,rdi
   140003a02:	jbe    0x140003b16
   140003a08:	test   rdi,rdi
   140003a0b:	je     0x140003aff
   140003a11:	mov    QWORD PTR [rsp+0x40],rbp
   140003a16:	lea    rbp,[rcx+rdi*1]
   140003a1a:	xor    r8d,r8d
   140003a1d:	mov    rdx,rbp
   140003a20:	mov    rcx,rbx
   140003a23:	call   0x140001ee0
   140003a28:	test   al,al
   140003a2a:	je     0x140003afa
   140003a30:	mov    rax,QWORD PTR [rbx+0x18]
   140003a34:	cmp    rax,0x8
   140003a38:	jb     0x140003a3f
   140003a3a:	mov    rdx,QWORD PTR [rbx]
   140003a3d:	jmp    0x140003a42
   140003a3f:	mov    rdx,rbx
   140003a42:	cmp    rax,0x8
   140003a46:	jb     0x140003a4d
   140003a48:	mov    rcx,QWORD PTR [rbx]
   140003a4b:	jmp    0x140003a50
   140003a4d:	mov    rcx,rbx
   140003a50:	mov    r8,QWORD PTR [rbx+0x10]
   140003a54:	sub    r8,r15
   140003a57:	je     0x140003a6d
   140003a59:	lea    rax,[r15+rdi*1]
   140003a5d:	lea    rdx,[rdx+r15*2]
   140003a61:	add    r8,r8
   140003a64:	lea    rcx,[rcx+rax*2]
   140003a68:	call   0x1400056d0
   140003a6d:	cmp    rbx,rsi
   140003a70:	jne    0x140003ab2
   140003a72:	cmp    r15,r14
   140003a75:	jae    0x140003a7a
   140003a77:	add    r14,rdi
   140003a7a:	mov    rax,QWORD PTR [rbx+0x18]
   140003a7e:	cmp    rax,0x8
   140003a82:	jb     0x140003a89
   140003a84:	mov    rcx,QWORD PTR [rbx]
   140003a87:	jmp    0x140003a8c
   140003a89:	mov    rcx,rbx
   140003a8c:	cmp    rax,0x8
   140003a90:	jb     0x140003a97
   140003a92:	mov    rax,QWORD PTR [rbx]
   140003a95:	jmp    0x140003a9a
   140003a97:	mov    rax,rbx
   140003a9a:	test   rdi,rdi
   140003a9d:	je     0x140003ae1
   140003a9f:	lea    rdx,[rcx+r14*2]
   140003aa3:	lea    r8,[rdi+rdi*1]
   140003aa7:	lea    rcx,[rax+r15*2]
   140003aab:	call   0x1400056d0
   140003ab0:	jmp    0x140003ae1
   140003ab2:	cmp    QWORD PTR [rsi+0x18],0x8
   140003ab7:	jb     0x140003abc
   140003ab9:	mov    rsi,QWORD PTR [rsi]
   140003abc:	cmp    QWORD PTR [rbx+0x18],0x8
   140003ac1:	jb     0x140003ac8
   140003ac3:	mov    rax,QWORD PTR [rbx]
   140003ac6:	jmp    0x140003acb
   140003ac8:	mov    rax,rbx
   140003acb:	test   rdi,rdi
   140003ace:	je     0x140003ae1
   140003ad0:	lea    r8,[rdi+rdi*1]
   140003ad4:	lea    rdx,[rsi+r14*2]
   140003ad8:	lea    rcx,[rax+r15*2]
   140003adc:	call   0x1400056d0
   140003ae1:	cmp    QWORD PTR [rbx+0x18],0x8
   140003ae6:	mov    QWORD PTR [rbx+0x10],rbp
   140003aea:	jb     0x140003af1
   140003aec:	mov    rax,QWORD PTR [rbx]
   140003aef:	jmp    0x140003af4
   140003af1:	mov    rax,rbx
   140003af4:	xor    ecx,ecx
   140003af6:	mov    WORD PTR [rax+rbp*2],cx
   140003afa:	mov    rbp,QWORD PTR [rsp+0x40]
   140003aff:	mov    rdi,QWORD PTR [rsp+0x48]
   140003b04:	mov    rax,rbx
   140003b07:	mov    rbx,QWORD PTR [rsp+0x50]
   140003b0c:	add    rsp,0x20
   140003b10:	pop    r15
   140003b12:	pop    r14
   140003b14:	pop    rsi
   140003b15:	ret    
   140003b16:	lea    rcx,[rip+0x23d9b]        # 0x1400278b8
   140003b1d:	call   0x1400051f4
   140003b22:	int3   
   140003b23:	lea    rcx,[rip+0x23d9e]        # 0x1400278c8
   140003b2a:	call   0x14000522c
   140003b2f:	int3   
   140003b30:	mov    QWORD PTR [rsp+0x10],rbx
   140003b35:	mov    QWORD PTR [rsp+0x18],rsi
   140003b3a:	mov    QWORD PTR [rsp+0x20],rdi
   140003b3f:	push   r14
   140003b41:	sub    rsp,0x30
   140003b45:	mov    rsi,r9
   140003b48:	mov    rdi,r8
   140003b4b:	mov    r14,rdx
   140003b4e:	mov    rbx,rcx
   140003b51:	test   r8,r8
   140003b54:	je     0x140003baf
   140003b56:	mov    r8,QWORD PTR [rcx+0x18]
   140003b5a:	cmp    r8,0x8
   140003b5e:	jb     0x140003b65
   140003b60:	mov    rax,QWORD PTR [rcx]
   140003b63:	jmp    0x140003b68
   140003b65:	mov    rax,rcx
   140003b68:	cmp    rdi,rax
   140003b6b:	jb     0x140003baf
   140003b6d:	cmp    r8,0x8
   140003b71:	jb     0x140003b76
   140003b73:	mov    rcx,QWORD PTR [rcx]
   140003b76:	mov    rax,QWORD PTR [rbx+0x10]
   140003b7a:	lea    rcx,[rcx+rax*2]
   140003b7e:	cmp    rcx,rdi
   140003b81:	jbe    0x140003baf
   140003b83:	cmp    r8,0x8
   140003b87:	jb     0x140003b8e
   140003b89:	mov    rax,QWORD PTR [rbx]
   140003b8c:	jmp    0x140003b91
   140003b8e:	mov    rax,rbx
   140003b91:	sub    rdi,rax
   140003b94:	mov    QWORD PTR [rsp+0x20],r9
   140003b99:	mov    r8,rbx
   140003b9c:	sar    rdi,1
   140003b9f:	mov    rcx,rbx
   140003ba2:	mov    r9,rdi
   140003ba5:	call   0x1400039b0
   140003baa:	jmp    0x140003c72
   140003baf:	mov    rcx,QWORD PTR [rbx+0x10]
   140003bb3:	cmp    rcx,rdx
   140003bb6:	jb     0x140003c88
   140003bbc:	or     rax,0xffffffffffffffff
   140003bc0:	sub    rax,rcx
   140003bc3:	cmp    rax,r9
   140003bc6:	jbe    0x140003c95
   140003bcc:	test   r9,r9
   140003bcf:	je     0x140003c6f
   140003bd5:	mov    QWORD PTR [rsp+0x40],rbp
   140003bda:	lea    rbp,[rcx+r9*1]
   140003bde:	xor    r8d,r8d
   140003be1:	mov    rdx,rbp
   140003be4:	mov    rcx,rbx
   140003be7:	call   0x140001ee0
   140003bec:	test   al,al
   140003bee:	je     0x140003c6a
   140003bf0:	mov    rax,QWORD PTR [rbx+0x18]
   140003bf4:	cmp    rax,0x8
   140003bf8:	jb     0x140003bff
   140003bfa:	mov    rdx,QWORD PTR [rbx]
   140003bfd:	jmp    0x140003c02
   140003bff:	mov    rdx,rbx
   140003c02:	cmp    rax,0x8
   140003c06:	jb     0x140003c0d
   140003c08:	mov    rcx,QWORD PTR [rbx]
   140003c0b:	jmp    0x140003c10
   140003c0d:	mov    rcx,rbx
   140003c10:	mov    r8,QWORD PTR [rbx+0x10]
   140003c14:	sub    r8,r14
   140003c17:	je     0x140003c2d
   140003c19:	lea    rax,[r14+rsi*1]
   140003c1d:	lea    rdx,[rdx+r14*2]
   140003c21:	add    r8,r8
   140003c24:	lea    rcx,[rcx+rax*2]
   140003c28:	call   0x1400056d0
   140003c2d:	cmp    QWORD PTR [rbx+0x18],0x8
   140003c32:	jb     0x140003c39
   140003c34:	mov    rax,QWORD PTR [rbx]
   140003c37:	jmp    0x140003c3c
   140003c39:	mov    rax,rbx
   140003c3c:	test   rsi,rsi
   140003c3f:	je     0x140003c51
   140003c41:	lea    r8,[rsi+rsi*1]
   140003c45:	lea    rcx,[rax+r14*2]
   140003c49:	mov    rdx,rdi
   140003c4c:	call   0x1400056d0
   140003c51:	cmp    QWORD PTR [rbx+0x18],0x8
   140003c56:	mov    QWORD PTR [rbx+0x10],rbp
   140003c5a:	jb     0x140003c61
   140003c5c:	mov    rax,QWORD PTR [rbx]
   140003c5f:	jmp    0x140003c64
   140003c61:	mov    rax,rbx
   140003c64:	xor    ecx,ecx
   140003c66:	mov    WORD PTR [rax+rbp*2],cx
   140003c6a:	mov    rbp,QWORD PTR [rsp+0x40]
   140003c6f:	mov    rax,rbx
   140003c72:	mov    rbx,QWORD PTR [rsp+0x48]
   140003c77:	mov    rsi,QWORD PTR [rsp+0x50]
   140003c7c:	mov    rdi,QWORD PTR [rsp+0x58]
   140003c81:	add    rsp,0x30
   140003c85:	pop    r14
   140003c87:	ret    
   140003c88:	lea    rcx,[rip+0x23c39]        # 0x1400278c8
   140003c8f:	call   0x14000522c
   140003c94:	int3   
   140003c95:	lea    rcx,[rip+0x23c1c]        # 0x1400278b8
   140003c9c:	call   0x1400051f4
   140003ca1:	int3   
   140003ca2:	int3   
   140003ca3:	int3   
   140003ca4:	int3   
   140003ca5:	int3   
   140003ca6:	int3   
   140003ca7:	int3   
   140003ca8:	int3   
   140003ca9:	int3   
   140003caa:	int3   
   140003cab:	int3   
   140003cac:	int3   
   140003cad:	int3   
   140003cae:	int3   
   140003caf:	int3   
   140003cb0:	cmp    WORD PTR [r8],0x0
   140003cb5:	jne    0x140003cbf
   140003cb7:	xor    r9d,r9d
   140003cba:	jmp    0x140003b30
   140003cbf:	or     r9,0xffffffffffffffff
   140003cc3:	inc    r9
   140003cc6:	cmp    WORD PTR [r8+r9*2],0x0
   140003ccc:	jne    0x140003cc3
   140003cce:	jmp    0x140003b30
   140003cd3:	int3   
   140003cd4:	int3   
   140003cd5:	int3   
   140003cd6:	int3   
   140003cd7:	int3   
   140003cd8:	int3   
   140003cd9:	int3   
   140003cda:	int3   
   140003cdb:	int3   
   140003cdc:	int3   
   140003cdd:	int3   
   140003cde:	int3   
   140003cdf:	int3   
   140003ce0:	rex push rbp
   140003ce2:	lea    rbp,[rsp-0x20]
   140003ce7:	sub    rsp,0x120
   140003cee:	mov    QWORD PTR [rbp-0x58],0xfffffffffffffffe
   140003cf6:	mov    QWORD PTR [rsp+0x130],rbx
   140003cfe:	xor    edx,edx
   140003d00:	lea    r8d,[rdx+0x68]
   140003d04:	lea    rcx,[rbp-0x50]
   140003d08:	call   0x140007150
   140003d0d:	mov    DWORD PTR [rbp-0x50],0x68
   140003d14:	xor    eax,eax
   140003d16:	mov    QWORD PTR [rbp-0x70],rax
   140003d1a:	mov    QWORD PTR [rbp-0x68],rax
   140003d1e:	mov    QWORD PTR [rbp-0x60],rax
   140003d22:	mov    QWORD PTR [rbp-0x78],0x7
   140003d2a:	xor    ebx,ebx
   140003d2c:	mov    QWORD PTR [rbp-0x80],rbx
   140003d30:	mov    WORD PTR [rsp+0x70],bx
   140003d35:	or     r9,0xffffffffffffffff
   140003d39:	xor    r8d,r8d
   140003d3c:	lea    rdx,[rip+0x322d5]        # 0x140036018
   140003d43:	lea    rcx,[rsp+0x70]
   140003d48:	call   0x140002970
   140003d4d:	nop
   140003d4e:	lea    r8d,[rbx+0xf]
   140003d52:	lea    rdx,[rip+0x2394f]        # 0x1400276a8
   140003d59:	lea    rcx,[rsp+0x70]
   140003d5e:	call   0x140002440
   140003d63:	mov    QWORD PTR [rsp+0x68],0x7
   140003d6c:	mov    QWORD PTR [rsp+0x60],rbx
   140003d71:	mov    WORD PTR [rsp+0x50],bx
   140003d76:	lea    r8d,[rbx+0x7]
   140003d7a:	lea    rdx,[rip+0x239ff]        # 0x140027780
   140003d81:	lea    rcx,[rsp+0x50]
   140003d86:	call   0x140002440
   140003d8b:	cmp    QWORD PTR [rip+0x322d6],rbx        # 0x140036068
   140003d92:	je     0x140003dd6
   140003d94:	lea    r8d,[rbx+0xb]
   140003d98:	lea    rdx,[rip+0x239f1]        # 0x140027790
   140003d9f:	lea    rcx,[rsp+0x50]
   140003da4:	call   0x140002440
   140003da9:	or     r9,0xffffffffffffffff
   140003dad:	xor    r8d,r8d
   140003db0:	lea    rdx,[rip+0x322a1]        # 0x140036058
   140003db7:	lea    rcx,[rsp+0x50]
   140003dbc:	call   0x1400022d0
   140003dc1:	lea    r8d,[rbx+0x1]
   140003dc5:	lea    rdx,[rip+0x239dc]        # 0x1400277a8
   140003dcc:	lea    rcx,[rsp+0x50]
   140003dd1:	call   0x140002440
   140003dd6:	mov    r8d,0x50
   140003ddc:	lea    rdx,[rip+0x239cd]        # 0x1400277b0
   140003de3:	lea    rcx,[rsp+0x50]
   140003de8:	call   0x140002440
   140003ded:	mov    r8d,0x15
   140003df3:	lea    rdx,[rip+0x23a5e]        # 0x140027858
   140003dfa:	lea    rcx,[rsp+0x50]
   140003dff:	call   0x140002440
   140003e04:	or     r9,0xffffffffffffffff
   140003e08:	xor    r8d,r8d
   140003e0b:	lea    rdx,[rip+0x32226]        # 0x140036038
   140003e12:	lea    rcx,[rsp+0x50]
   140003e17:	call   0x1400022d0
   140003e1c:	mov    r8d,0x2
   140003e22:	lea    rdx,[rip+0x23a5b]        # 0x140027884
   140003e29:	lea    rcx,[rsp+0x50]
   140003e2e:	call   0x140002440
   140003e33:	or     r9,0xffffffffffffffff
   140003e37:	xor    r8d,r8d
   140003e3a:	lea    rdx,[rip+0x32257]        # 0x140036098
   140003e41:	lea    rcx,[rsp+0x50]
   140003e46:	call   0x1400022d0
   140003e4b:	mov    r8d,0x2
   140003e51:	lea    rdx,[rip+0x23a34]        # 0x14002788c
   140003e58:	lea    rcx,[rsp+0x50]
   140003e5d:	call   0x140002440
   140003e62:	or     r9,0xffffffffffffffff
   140003e66:	xor    r8d,r8d
   140003e69:	lea    rdx,[rip+0x32208]        # 0x140036078
   140003e70:	lea    rcx,[rsp+0x50]
   140003e75:	call   0x1400022d0
   140003e7a:	mov    r8d,0xd
   140003e80:	lea    rdx,[rip+0x23a11]        # 0x140027898
   140003e87:	lea    rcx,[rsp+0x50]
   140003e8c:	call   0x140002440
   140003e91:	lea    rdx,[rsp+0x50]
   140003e96:	cmp    QWORD PTR [rsp+0x68],0x8
   140003e9c:	cmovae rdx,QWORD PTR [rsp+0x50]
   140003ea2:	lea    rcx,[rsp+0x70]
   140003ea7:	cmp    QWORD PTR [rbp-0x78],0x8
   140003eac:	cmovae rcx,QWORD PTR [rsp+0x70]
   140003eb2:	lea    rax,[rbp-0x70]
   140003eb6:	mov    QWORD PTR [rsp+0x48],rax
   140003ebb:	lea    rax,[rbp-0x50]
   140003ebf:	mov    QWORD PTR [rsp+0x40],rax
   140003ec4:	mov    QWORD PTR [rsp+0x38],rbx
   140003ec9:	mov    QWORD PTR [rsp+0x30],rbx
   140003ece:	mov    DWORD PTR [rsp+0x28],0x8000000
   140003ed6:	mov    DWORD PTR [rsp+0x20],ebx
   140003eda:	xor    r9d,r9d
   140003edd:	xor    r8d,r8d
   140003ee0:	call   QWORD PTR [rip+0x23142]        # 0x140027028
   140003ee6:	test   eax,eax
   140003ee8:	jne    0x140003ef3
   140003eea:	lea    ecx,[rax+0x73]
   140003eed:	call   0x1400048b0
   140003ef2:	int3   
   140003ef3:	or     edx,0xffffffff
   140003ef6:	mov    rcx,QWORD PTR [rbp-0x70]
   140003efa:	call   QWORD PTR [rip+0x23120]        # 0x140027020
   140003f00:	mov    rcx,QWORD PTR [rbp-0x70]
   140003f04:	call   QWORD PTR [rip+0x2312e]        # 0x140027038
   140003f0a:	mov    rcx,QWORD PTR [rbp-0x68]
   140003f0e:	call   QWORD PTR [rip+0x23124]        # 0x140027038
   140003f14:	nop
   140003f15:	cmp    QWORD PTR [rsp+0x68],0x8
   140003f1b:	jb     0x140003f27
   140003f1d:	mov    rcx,QWORD PTR [rsp+0x50]
   140003f22:	call   0x140005454
   140003f27:	mov    QWORD PTR [rsp+0x68],0x7
   140003f30:	mov    QWORD PTR [rsp+0x60],rbx
   140003f35:	mov    WORD PTR [rsp+0x50],bx
   140003f3a:	cmp    QWORD PTR [rbp-0x78],0x8
   140003f3f:	jb     0x140003f4b
   140003f41:	mov    rcx,QWORD PTR [rsp+0x70]
   140003f46:	call   0x140005454
   140003f4b:	mov    rbx,QWORD PTR [rsp+0x130]
   140003f53:	add    rsp,0x120
   140003f5a:	pop    rbp
   140003f5b:	ret    
   140003f5c:	int3   
   140003f5d:	int3   
   140003f5e:	int3   
   140003f5f:	int3   
   140003f60:	cmp    BYTE PTR [rcx],0x0
   140003f63:	jne    0x140003f68
   140003f65:	xor    eax,eax
   140003f67:	ret    
   140003f68:	or     rax,0xffffffffffffffff
   140003f6c:	nop    DWORD PTR [rax+0x0]
   140003f70:	inc    rax
   140003f73:	cmp    BYTE PTR [rcx+rax*1],0x0
   140003f77:	jne    0x140003f70
   140003f79:	ret    
   140003f7a:	int3   
   140003f7b:	int3   
   140003f7c:	int3   
   140003f7d:	int3   
   140003f7e:	int3   
   140003f7f:	int3   
   140003f80:	cmp    WORD PTR [rcx],0x0
   140003f84:	jne    0x140003f89
   140003f86:	xor    eax,eax
   140003f88:	ret    
   140003f89:	or     rax,0xffffffffffffffff
   140003f8d:	nop    DWORD PTR [rax]
   140003f90:	inc    rax
   140003f93:	cmp    WORD PTR [rcx+rax*2],0x0
   140003f98:	jne    0x140003f90
   140003f9a:	ret    
   140003f9b:	int3   
   140003f9c:	int3   
   140003f9d:	int3   
   140003f9e:	int3   
   140003f9f:	int3   
   140003fa0:	or     rax,0xffffffffffffffff
   140003fa4:	ret    
   140003fa5:	int3   
   140003fa6:	int3   
   140003fa7:	int3   
   140003fa8:	int3   
   140003fa9:	int3   
   140003faa:	int3   
   140003fab:	int3   
   140003fac:	int3   
   140003fad:	int3   
   140003fae:	int3   
   140003faf:	int3   
   140003fb0:	movabs rax,0x7fffffffffffffff
   140003fba:	ret    
   140003fbb:	int3   
   140003fbc:	int3   
   140003fbd:	int3   
   140003fbe:	int3   
   140003fbf:	int3   
   140003fc0:	or     rax,0xffffffffffffffff
   140003fc4:	ret    
   140003fc5:	int3   
   140003fc6:	int3   
   140003fc7:	int3   
   140003fc8:	int3   
   140003fc9:	int3   
   140003fca:	int3   
   140003fcb:	int3   
   140003fcc:	int3   
   140003fcd:	int3   
   140003fce:	int3   
   140003fcf:	int3   
   140003fd0:	movabs rax,0x7fffffffffffffff
   140003fda:	ret    
   140003fdb:	int3   
   140003fdc:	int3   
   140003fdd:	int3   
   140003fde:	int3   
   140003fdf:	int3   
   140003fe0:	or     rax,0xffffffffffffffff
   140003fe4:	ret    
   140003fe5:	int3   
   140003fe6:	int3   
   140003fe7:	int3   
   140003fe8:	int3   
   140003fe9:	int3   
   140003fea:	int3   
   140003feb:	int3   
   140003fec:	int3   
   140003fed:	int3   
   140003fee:	int3   
   140003fef:	int3   
   140003ff0:	movabs rax,0x7fffffffffffffff
   140003ffa:	ret    
   140003ffb:	int3   
   140003ffc:	int3   
   140003ffd:	int3   
   140003ffe:	int3   
   140003fff:	int3   
   140004000:	mov    rax,0xfffffffffffffffe
   140004007:	ret    
   140004008:	int3   
   140004009:	int3   
   14000400a:	int3   
   14000400b:	int3   
   14000400c:	int3   
   14000400d:	int3   
   14000400e:	int3   
   14000400f:	int3   
   140004010:	movabs rax,0x7ffffffffffffffe
   14000401a:	ret    
   14000401b:	int3   
   14000401c:	int3   
   14000401d:	int3   
   14000401e:	int3   
   14000401f:	int3   
   140004020:	mov    QWORD PTR [rsp+0x8],rbx
   140004025:	push   rdi
   140004026:	sub    rsp,0x30
   14000402a:	xor    ebx,ebx
   14000402c:	mov    ecx,r8d
   14000402f:	mov    rdi,rdx
   140004032:	mov    DWORD PTR [rsp+0x20],ebx
   140004036:	call   0x140005320
   14000403b:	mov    QWORD PTR [rdi+0x18],0xf
   140004043:	test   rax,rax
   140004046:	mov    QWORD PTR [rdi+0x10],rbx
   14000404a:	lea    rdx,[rip+0x23527]        # 0x140027578
   140004051:	cmovne rdx,rax
   140004055:	mov    BYTE PTR [rdi],bl
   140004057:	cmp    BYTE PTR [rdx],bl
   140004059:	je     0x140004069
   14000405b:	or     rbx,0xffffffffffffffff
   14000405f:	nop
   140004060:	inc    rbx
   140004063:	cmp    BYTE PTR [rdx+rbx*1],0x0
   140004067:	jne    0x140004060
   140004069:	mov    r8,rbx
   14000406c:	mov    rcx,rdi
   14000406f:	call   0x140002830
   140004074:	mov    rbx,QWORD PTR [rsp+0x40]
   140004079:	mov    rax,rdi
   14000407c:	add    rsp,0x30
   140004080:	pop    rdi
   140004081:	ret    
   140004082:	int3   
   140004083:	int3   
   140004084:	int3   
   140004085:	int3   
   140004086:	int3   
   140004087:	int3   
   140004088:	int3   
   140004089:	int3   
   14000408a:	int3   
   14000408b:	int3   
   14000408c:	int3   
   14000408d:	int3   
   14000408e:	int3   
   14000408f:	int3   
   140004090:	rex push rbx
   140004092:	sub    rsp,0x30
   140004096:	xor    eax,eax
   140004098:	mov    rbx,rdx
   14000409b:	mov    DWORD PTR [rsp+0x20],eax
   14000409f:	cmp    r8d,0x1
   1400040a3:	jne    0x1400040cf
   1400040a5:	mov    QWORD PTR [rdx+0x18],0xf
   1400040ad:	mov    QWORD PTR [rdx+0x10],rax
   1400040b1:	mov    BYTE PTR [rdx],al
   1400040b3:	lea    rdx,[rip+0x23516]        # 0x1400275d0
   1400040ba:	lea    r8d,[rax+0x15]
   1400040be:	mov    rcx,rbx
   1400040c1:	call   0x140002830
   1400040c6:	mov    rax,rbx
   1400040c9:	add    rsp,0x30
   1400040cd:	pop    rbx
   1400040ce:	ret    
   1400040cf:	call   0x140004020
   1400040d4:	mov    rax,rbx
   1400040d7:	add    rsp,0x30
   1400040db:	pop    rbx
   1400040dc:	ret    
   1400040dd:	int3   
   1400040de:	int3   
   1400040df:	int3   
   1400040e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400040e5:	push   rdi
   1400040e6:	sub    rsp,0x30
   1400040ea:	xor    ebx,ebx
   1400040ec:	mov    ecx,r8d
   1400040ef:	mov    rdi,rdx
   1400040f2:	mov    DWORD PTR [rsp+0x20],ebx
   1400040f6:	call   0x140005348
   1400040fb:	mov    QWORD PTR [rdi+0x18],0xf
   140004103:	test   rax,rax
   140004106:	mov    QWORD PTR [rdi+0x10],rbx
   14000410a:	lea    rdx,[rip+0x23467]        # 0x140027578
   140004111:	cmovne rdx,rax
   140004115:	mov    BYTE PTR [rdi],bl
   140004117:	cmp    BYTE PTR [rdx],bl
   140004119:	je     0x140004129
   14000411b:	or     rbx,0xffffffffffffffff
   14000411f:	nop
   140004120:	inc    rbx
   140004123:	cmp    BYTE PTR [rdx+rbx*1],0x0
   140004127:	jne    0x140004120
   140004129:	mov    r8,rbx
   14000412c:	mov    rcx,rdi
   14000412f:	call   0x140002830
   140004134:	mov    rbx,QWORD PTR [rsp+0x40]
   140004139:	mov    rax,rdi
   14000413c:	add    rsp,0x30
   140004140:	pop    rdi
   140004141:	ret    
   140004142:	int3   
   140004143:	int3   
   140004144:	int3   
   140004145:	int3   
   140004146:	int3   
   140004147:	int3   
   140004148:	int3   
   140004149:	int3   
   14000414a:	int3   
   14000414b:	int3   
   14000414c:	int3   
   14000414d:	int3   
   14000414e:	int3   
   14000414f:	int3   
   140004150:	test   r8,r8
   140004153:	jne    0x140004159
   140004155:	mov    rax,rcx
   140004158:	ret    
   140004159:	jmp    0x1400056d0
   14000415e:	int3   
   14000415f:	int3   
   140004160:	test   r8,r8
   140004163:	jne    0x140004169
   140004165:	mov    rax,rcx
   140004168:	ret    
   140004169:	add    r8,r8
   14000416c:	jmp    0x1400056d0
   140004171:	int3   
   140004172:	int3   
   140004173:	int3   
   140004174:	int3   
   140004175:	int3   
   140004176:	int3   
   140004177:	int3   
   140004178:	int3   
   140004179:	int3   
   14000417a:	int3   
   14000417b:	int3   
   14000417c:	int3   
   14000417d:	int3   
   14000417e:	int3   
   14000417f:	int3   
   140004180:	lea    rax,[rip+0x233e9]        # 0x140027570
   140004187:	ret    
   140004188:	int3   
   140004189:	int3   
   14000418a:	int3   
   14000418b:	int3   
   14000418c:	int3   
   14000418d:	int3   
   14000418e:	int3   
   14000418f:	int3   
   140004190:	lea    rax,[rip+0x23429]        # 0x1400275c0
   140004197:	ret    
   140004198:	int3   
   140004199:	int3   
   14000419a:	int3   
   14000419b:	int3   
   14000419c:	int3   
   14000419d:	int3   
   14000419e:	int3   
   14000419f:	int3   
   1400041a0:	lea    rax,[rip+0x23479]        # 0x140027620
   1400041a7:	ret    
   1400041a8:	int3   
   1400041a9:	int3   
   1400041aa:	int3   
   1400041ab:	int3   
   1400041ac:	int3   
   1400041ad:	int3   
   1400041ae:	int3   
   1400041af:	int3   
   1400041b0:	rex push rbx
   1400041b2:	sub    rsp,0x30
   1400041b6:	mov    rax,QWORD PTR [rsp+0x60]
   1400041bb:	mov    rbx,rcx
   1400041be:	cmp    r9,rax
   1400041c1:	jne    0x140004206
   1400041c3:	cmp    QWORD PTR [rcx+0x18],0x8
   1400041c8:	jb     0x1400041cf
   1400041ca:	mov    rax,QWORD PTR [rcx]
   1400041cd:	jmp    0x1400041d2
   1400041cf:	mov    rax,rcx
   1400041d2:	xor    ecx,ecx
   1400041d4:	test   r8,r8
   1400041d7:	jne    0x1400041de
   1400041d9:	mov    r8d,ecx
   1400041dc:	jmp    0x1400041e4
   1400041de:	sub    r8,rdx
   1400041e1:	sar    r8,1
   1400041e4:	test   rdx,rdx
   1400041e7:	je     0x1400041f2
   1400041e9:	mov    rcx,rdx
   1400041ec:	sub    rcx,rax
   1400041ef:	sar    rcx,1
   1400041f2:	mov    rdx,rcx
   1400041f5:	mov    rcx,rbx
   1400041f8:	call   0x140002f90
   1400041fd:	mov    rax,rbx
   140004200:	add    rsp,0x30
   140004204:	pop    rbx
   140004205:	ret    
   140004206:	cmp    QWORD PTR [rcx+0x18],0x8
   14000420b:	jb     0x140004212
   14000420d:	mov    r10,QWORD PTR [rcx]
   140004210:	jmp    0x140004215
   140004212:	mov    r10,rcx
   140004215:	xor    ecx,ecx
   140004217:	test   r8,r8
   14000421a:	jne    0x140004221
   14000421c:	mov    r8d,ecx
   14000421f:	jmp    0x140004227
   140004221:	sub    r8,rdx
   140004224:	sar    r8,1
   140004227:	test   rdx,rdx
   14000422a:	je     0x140004235
   14000422c:	mov    rcx,rdx
   14000422f:	sub    rcx,r10
   140004232:	sar    rcx,1
   140004235:	sub    rax,r9
   140004238:	mov    rdx,rcx
   14000423b:	mov    rcx,rbx
   14000423e:	sar    rax,1
   140004241:	mov    QWORD PTR [rsp+0x20],rax
   140004246:	call   0x1400045e0
   14000424b:	mov    rax,rbx
   14000424e:	add    rsp,0x30
   140004252:	pop    rbx
   140004253:	ret    
   140004254:	int3   
   140004255:	int3   
   140004256:	int3   
   140004257:	int3   
   140004258:	int3   
   140004259:	int3   
   14000425a:	int3   
   14000425b:	int3   
   14000425c:	int3   
   14000425d:	int3   
   14000425e:	int3   
   14000425f:	int3   
   140004260:	rex push rbx
   140004262:	push   rbp
   140004263:	push   rsi
   140004264:	push   r12
   140004266:	push   r15
   140004268:	sub    rsp,0x20
   14000426c:	mov    rbx,rcx
   14000426f:	mov    rcx,QWORD PTR [rcx+0x10]
   140004273:	mov    r15,r9
   140004276:	mov    rbp,r8
   140004279:	mov    rsi,rdx
   14000427c:	cmp    rcx,rdx
   14000427f:	jb     0x1400045cf
   140004285:	mov    rax,QWORD PTR [r9+0x10]
   140004289:	mov    r12,QWORD PTR [rsp+0x70]
   14000428e:	cmp    rax,r12
   140004291:	jb     0x1400045cf
   140004297:	mov    QWORD PTR [rsp+0x50],rdi
   14000429c:	mov    rdi,QWORD PTR [rsp+0x78]
   1400042a1:	mov    QWORD PTR [rsp+0x60],r14
   1400042a6:	mov    r14,rcx
   1400042a9:	sub    r14,rdx
   1400042ac:	mov    rdx,rcx
   1400042af:	cmp    r14,r8
   1400042b2:	cmovb  rbp,r14
   1400042b6:	sub    rax,r12
   1400042b9:	cmp    rax,rdi
   1400042bc:	cmovb  rdi,rax
   1400042c0:	or     rax,0xffffffffffffffff
   1400042c4:	sub    rdx,rbp
   1400042c7:	sub    rax,rdi
   1400042ca:	cmp    rax,rdx
   1400042cd:	jbe    0x1400045c2
   1400042d3:	mov    QWORD PTR [rsp+0x58],r13
   1400042d8:	lea    r13,[rdx+rdi*1]
   1400042dc:	sub    r14,rbp
   1400042df:	cmp    rcx,r13
   1400042e2:	jae    0x1400042f2
   1400042e4:	xor    r8d,r8d
   1400042e7:	mov    rdx,r13
   1400042ea:	mov    rcx,rbx
   1400042ed:	call   0x140001ee0
   1400042f2:	mov    rax,QWORD PTR [rbx+0x18]
   1400042f6:	cmp    rbx,r15
   1400042f9:	je     0x14000436d
   1400042fb:	cmp    rax,0x8
   1400042ff:	jb     0x140004306
   140004301:	mov    rdx,QWORD PTR [rbx]
   140004304:	jmp    0x140004309
   140004306:	mov    rdx,rbx
   140004309:	cmp    rax,0x8
   14000430d:	jb     0x140004314
   14000430f:	mov    rcx,QWORD PTR [rbx]
   140004312:	jmp    0x140004317
   140004314:	mov    rcx,rbx
   140004317:	test   r14,r14
   14000431a:	je     0x140004335
   14000431c:	lea    rax,[rsi+rbp*1]
   140004320:	lea    r8,[r14+r14*1]
   140004324:	lea    rdx,[rdx+rax*2]
   140004328:	lea    rax,[rsi+rdi*1]
   14000432c:	lea    rcx,[rcx+rax*2]
   140004330:	call   0x1400056d0
   140004335:	cmp    QWORD PTR [r15+0x18],0x8
   14000433a:	jb     0x14000433f
   14000433c:	mov    r15,QWORD PTR [r15]
   14000433f:	cmp    QWORD PTR [rbx+0x18],0x8
   140004344:	jb     0x14000434b
   140004346:	mov    rax,QWORD PTR [rbx]
   140004349:	jmp    0x14000434e
   14000434b:	mov    rax,rbx
   14000434e:	test   rdi,rdi
   140004351:	je     0x14000458a
   140004357:	lea    r8,[rdi+rdi*1]
   14000435b:	lea    rdx,[r15+r12*2]
   14000435f:	lea    rcx,[rax+rsi*2]
   140004363:	call   0x1400056d0
   140004368:	jmp    0x14000458a
   14000436d:	cmp    rdi,rbp
   140004370:	ja     0x1400043e6
   140004372:	cmp    rax,0x8
   140004376:	jb     0x14000437d
   140004378:	mov    rcx,QWORD PTR [rbx]
   14000437b:	jmp    0x140004380
   14000437d:	mov    rcx,rbx
   140004380:	cmp    rax,0x8
   140004384:	jb     0x14000438b
   140004386:	mov    rax,QWORD PTR [rbx]
   140004389:	jmp    0x14000438e
   14000438b:	mov    rax,rbx
   14000438e:	test   rdi,rdi
   140004391:	je     0x1400043a4
   140004393:	lea    rdx,[rcx+r12*2]
   140004397:	lea    r8,[rdi+rdi*1]
   14000439b:	lea    rcx,[rax+rsi*2]
   14000439f:	call   0x1400056d0
   1400043a4:	mov    rax,QWORD PTR [rbx+0x18]
   1400043a8:	cmp    rax,0x8
   1400043ac:	jb     0x1400043b3
   1400043ae:	mov    rdx,QWORD PTR [rbx]
   1400043b1:	jmp    0x1400043b6
   1400043b3:	mov    rdx,rbx
   1400043b6:	cmp    rax,0x8
   1400043ba:	jb     0x1400043c1
   1400043bc:	mov    rcx,QWORD PTR [rbx]
   1400043bf:	jmp    0x1400043c4
   1400043c1:	mov    rcx,rbx
   1400043c4:	test   r14,r14
   1400043c7:	je     0x14000458a
   1400043cd:	lea    rax,[rsi+rbp*1]
   1400043d1:	lea    r8,[r14+r14*1]
   1400043d5:	lea    rdx,[rdx+rax*2]
   1400043d9:	lea    rax,[rsi+rdi*1]
   1400043dd:	lea    rcx,[rcx+rax*2]
   1400043e1:	jmp    0x140004585
   1400043e6:	cmp    r12,rsi
   1400043e9:	ja     0x14000445f
   1400043eb:	cmp    rax,0x8
   1400043ef:	jb     0x1400043f6
   1400043f1:	mov    rdx,QWORD PTR [rbx]
   1400043f4:	jmp    0x1400043f9
   1400043f6:	mov    rdx,rbx
   1400043f9:	cmp    rax,0x8
   1400043fd:	jb     0x140004404
   1400043ff:	mov    rcx,QWORD PTR [rbx]
   140004402:	jmp    0x140004407
   140004404:	mov    rcx,rbx
   140004407:	test   r14,r14
   14000440a:	je     0x140004425
   14000440c:	lea    rax,[rsi+rbp*1]
   140004410:	lea    r8,[r14+r14*1]
   140004414:	lea    rdx,[rdx+rax*2]
   140004418:	lea    rax,[rsi+rdi*1]
   14000441c:	lea    rcx,[rcx+rax*2]
   140004420:	call   0x1400056d0
   140004425:	mov    rax,QWORD PTR [rbx+0x18]
   140004429:	cmp    rax,0x8
   14000442d:	jb     0x140004434
   14000442f:	mov    rcx,QWORD PTR [rbx]
   140004432:	jmp    0x140004437
   140004434:	mov    rcx,rbx
   140004437:	cmp    rax,0x8
   14000443b:	jb     0x140004442
   14000443d:	mov    rax,QWORD PTR [rbx]
   140004440:	jmp    0x140004445
   140004442:	mov    rax,rbx
   140004445:	test   rdi,rdi
   140004448:	je     0x14000458a
   14000444e:	lea    rdx,[rcx+r12*2]
   140004452:	lea    r8,[rdi+rdi*1]
   140004456:	lea    rcx,[rax+rsi*2]
   14000445a:	jmp    0x140004585
   14000445f:	lea    r15,[rsi+rbp*1]
   140004463:	cmp    r15,r12
   140004466:	ja     0x1400044de
   140004468:	cmp    rax,0x8
   14000446c:	jb     0x140004473
   14000446e:	mov    rdx,QWORD PTR [rbx]
   140004471:	jmp    0x140004476
   140004473:	mov    rdx,rbx
   140004476:	cmp    rax,0x8
   14000447a:	jb     0x140004481
   14000447c:	mov    rcx,QWORD PTR [rbx]
   14000447f:	jmp    0x140004484
   140004481:	mov    rcx,rbx
   140004484:	test   r14,r14
   140004487:	je     0x14000449e
   140004489:	lea    rax,[rsi+rdi*1]
   14000448d:	lea    r8,[r14+r14*1]
   140004491:	lea    rdx,[rdx+r15*2]
   140004495:	lea    rcx,[rcx+rax*2]
   140004499:	call   0x1400056d0
   14000449e:	mov    rax,QWORD PTR [rbx+0x18]
   1400044a2:	cmp    rax,0x8
   1400044a6:	jb     0x1400044ad
   1400044a8:	mov    rcx,QWORD PTR [rbx]
   1400044ab:	jmp    0x1400044b0
   1400044ad:	mov    rcx,rbx
   1400044b0:	cmp    rax,0x8
   1400044b4:	jb     0x1400044bb
   1400044b6:	mov    rax,QWORD PTR [rbx]
   1400044b9:	jmp    0x1400044be
   1400044bb:	mov    rax,rbx
   1400044be:	test   rdi,rdi
   1400044c1:	je     0x14000458a
   1400044c7:	sub    r12,rbp
   1400044ca:	lea    r8,[rdi+rdi*1]
   1400044ce:	add    r12,rdi
   1400044d1:	lea    rdx,[rcx+r12*2]
   1400044d5:	lea    rcx,[rax+rsi*2]
   1400044d9:	jmp    0x140004585
   1400044de:	cmp    rax,0x8
   1400044e2:	jb     0x1400044e9
   1400044e4:	mov    rcx,QWORD PTR [rbx]
   1400044e7:	jmp    0x1400044ec
   1400044e9:	mov    rcx,rbx
   1400044ec:	cmp    rax,0x8
   1400044f0:	jb     0x1400044f7
   1400044f2:	mov    rax,QWORD PTR [rbx]
   1400044f5:	jmp    0x1400044fa
   1400044f7:	mov    rax,rbx
   1400044fa:	test   rbp,rbp
   1400044fd:	je     0x140004514
   1400044ff:	lea    rdx,[rcx+r12*2]
   140004503:	lea    r8,[rbp*2+0x0]
   14000450b:	lea    rcx,[rax+rsi*2]
   14000450f:	call   0x1400056d0
   140004514:	mov    rax,QWORD PTR [rbx+0x18]
   140004518:	cmp    rax,0x8
   14000451c:	jb     0x140004523
   14000451e:	mov    rdx,QWORD PTR [rbx]
   140004521:	jmp    0x140004526
   140004523:	mov    rdx,rbx
   140004526:	cmp    rax,0x8
   14000452a:	jb     0x140004531
   14000452c:	mov    rcx,QWORD PTR [rbx]
   14000452f:	jmp    0x140004534
   140004531:	mov    rcx,rbx
   140004534:	test   r14,r14
   140004537:	je     0x14000454e
   140004539:	lea    rax,[rsi+rdi*1]
   14000453d:	lea    r8,[r14+r14*1]
   140004541:	lea    rdx,[rdx+r15*2]
   140004545:	lea    rcx,[rcx+rax*2]
   140004549:	call   0x1400056d0
   14000454e:	mov    rax,QWORD PTR [rbx+0x18]
   140004552:	cmp    rax,0x8
   140004556:	jb     0x14000455d
   140004558:	mov    rdx,QWORD PTR [rbx]
   14000455b:	jmp    0x140004560
   14000455d:	mov    rdx,rbx
   140004560:	cmp    rax,0x8
   140004564:	jb     0x14000456b
   140004566:	mov    rcx,QWORD PTR [rbx]
   140004569:	jmp    0x14000456e
   14000456b:	mov    rcx,rbx
   14000456e:	mov    r8,rdi
   140004571:	sub    r8,rbp
   140004574:	je     0x14000458a
   140004576:	lea    rax,[r12+rdi*1]
   14000457a:	add    r8,r8
   14000457d:	lea    rcx,[rcx+r15*2]
   140004581:	lea    rdx,[rdx+rax*2]
   140004585:	call   0x1400056d0
   14000458a:	cmp    QWORD PTR [rbx+0x18],0x8
   14000458f:	mov    QWORD PTR [rbx+0x10],r13
   140004593:	jb     0x14000459a
   140004595:	mov    rax,QWORD PTR [rbx]
   140004598:	jmp    0x14000459d
   14000459a:	mov    rax,rbx
   14000459d:	mov    rdi,QWORD PTR [rsp+0x50]
   1400045a2:	mov    r14,QWORD PTR [rsp+0x60]
   1400045a7:	xor    ecx,ecx
   1400045a9:	mov    WORD PTR [rax+r13*2],cx
   1400045ae:	mov    r13,QWORD PTR [rsp+0x58]
   1400045b3:	mov    rax,rbx
   1400045b6:	add    rsp,0x20
   1400045ba:	pop    r15
   1400045bc:	pop    r12
   1400045be:	pop    rsi
   1400045bf:	pop    rbp
   1400045c0:	pop    rbx
   1400045c1:	ret    
   1400045c2:	lea    rcx,[rip+0x232ef]        # 0x1400278b8
   1400045c9:	call   0x1400051f4
   1400045ce:	int3   
   1400045cf:	lea    rcx,[rip+0x232f2]        # 0x1400278c8
   1400045d6:	call   0x14000522c
   1400045db:	int3   
   1400045dc:	int3   
   1400045dd:	int3   
   1400045de:	int3   
   1400045df:	int3   
   1400045e0:	mov    QWORD PTR [rsp+0x20],rbx
   1400045e5:	push   rbp
   1400045e6:	push   rsi
   1400045e7:	push   r12
   1400045e9:	sub    rsp,0x30
   1400045ed:	mov    rbp,r9
   1400045f0:	mov    rsi,r8
   1400045f3:	mov    r12,rdx
   1400045f6:	mov    rbx,rcx
   1400045f9:	test   r9,r9
   1400045fc:	je     0x14000466a
   1400045fe:	mov    r8,QWORD PTR [rcx+0x18]
   140004602:	cmp    r8,0x8
   140004606:	jb     0x14000460d
   140004608:	mov    rax,QWORD PTR [rcx]
   14000460b:	jmp    0x140004610
   14000460d:	mov    rax,rcx
   140004610:	cmp    r9,rax
   140004613:	jb     0x14000466a
   140004615:	cmp    r8,0x8
   140004619:	jb     0x14000461e
   14000461b:	mov    rcx,QWORD PTR [rcx]
   14000461e:	mov    rax,QWORD PTR [rbx+0x10]
   140004622:	lea    rcx,[rcx+rax*2]
   140004626:	cmp    rcx,r9
   140004629:	jbe    0x14000466a
   14000462b:	cmp    r8,0x8
   14000462f:	jb     0x140004636
   140004631:	mov    rax,QWORD PTR [rbx]
   140004634:	jmp    0x140004639
   140004636:	mov    rax,rbx
   140004639:	sub    rbp,rax
   14000463c:	mov    rax,QWORD PTR [rsp+0x70]
   140004641:	mov    r9,rbx
   140004644:	sar    rbp,1
   140004647:	mov    QWORD PTR [rsp+0x28],rax
   14000464c:	mov    r8,rsi
   14000464f:	mov    rcx,rbx
   140004652:	mov    QWORD PTR [rsp+0x20],rbp
   140004657:	call   0x140004260
   14000465c:	mov    rbx,QWORD PTR [rsp+0x68]
   140004661:	add    rsp,0x30
   140004665:	pop    r12
   140004667:	pop    rsi
   140004668:	pop    rbp
   140004669:	ret    
   14000466a:	mov    rcx,QWORD PTR [rbx+0x10]
   14000466e:	cmp    rcx,rdx
   140004671:	jb     0x1400047fd
   140004677:	mov    QWORD PTR [rsp+0x58],r14
   14000467c:	mov    r14,QWORD PTR [rsp+0x70]
   140004681:	mov    QWORD PTR [rsp+0x60],r15
   140004686:	mov    r15,rcx
   140004689:	sub    r15,rdx
   14000468c:	cmp    r15,rsi
   14000468f:	cmovb  rsi,r15
   140004693:	or     rax,0xffffffffffffffff
   140004697:	sub    rax,r14
   14000469a:	sub    rcx,rsi
   14000469d:	cmp    rax,rcx
   1400046a0:	jbe    0x14000480a
   1400046a6:	sub    r15,rsi
   1400046a9:	cmp    r14,rsi
   1400046ac:	jae    0x1400046ec
   1400046ae:	mov    rax,QWORD PTR [rbx+0x18]
   1400046b2:	cmp    rax,0x8
   1400046b6:	jb     0x1400046bd
   1400046b8:	mov    rdx,QWORD PTR [rbx]
   1400046bb:	jmp    0x1400046c0
   1400046bd:	mov    rdx,rbx
   1400046c0:	cmp    rax,0x8
   1400046c4:	jb     0x1400046cb
   1400046c6:	mov    rcx,QWORD PTR [rbx]
   1400046c9:	jmp    0x1400046ce
   1400046cb:	mov    rcx,rbx
   1400046ce:	test   r15,r15
   1400046d1:	je     0x1400046ec
   1400046d3:	lea    rax,[r12+rsi*1]
   1400046d7:	lea    r8,[r15+r15*1]
   1400046db:	lea    rdx,[rdx+rax*2]
   1400046df:	lea    rax,[r12+r14*1]
   1400046e3:	lea    rcx,[rcx+rax*2]
   1400046e7:	call   0x1400056d0
   1400046ec:	mov    QWORD PTR [rsp+0x50],rdi
   1400046f1:	test   r14,r14
   1400046f4:	jne    0x1400046ff
   1400046f6:	test   rsi,rsi
   1400046f9:	je     0x1400047dd
   1400046ff:	mov    r8,QWORD PTR [rbx+0x10]
   140004703:	movabs rax,0x7ffffffffffffffe
   14000470d:	mov    rdi,r8
   140004710:	sub    rdi,rsi
   140004713:	add    rdi,r14
   140004716:	cmp    rdi,rax
   140004719:	ja     0x140004817
   14000471f:	mov    rcx,QWORD PTR [rbx+0x18]
   140004723:	cmp    rcx,rdi
   140004726:	jae    0x140004750
   140004728:	mov    rdx,rdi
   14000472b:	mov    rcx,rbx
   14000472e:	call   0x140001c90
   140004733:	test   rdi,rdi
   140004736:	je     0x1400047dd
   14000473c:	cmp    rsi,r14
   14000473f:	jae    0x1400047a0
   140004741:	mov    rax,QWORD PTR [rbx+0x18]
   140004745:	cmp    rax,0x8
   140004749:	jb     0x140004771
   14000474b:	mov    rdx,QWORD PTR [rbx]
   14000474e:	jmp    0x140004774
   140004750:	test   rdi,rdi
   140004753:	jne    0x14000473c
   140004755:	xor    eax,eax
   140004757:	mov    QWORD PTR [rbx+0x10],rax
   14000475b:	cmp    rcx,0x8
   14000475f:	jb     0x140004769
   140004761:	mov    rcx,QWORD PTR [rbx]
   140004764:	mov    WORD PTR [rcx],ax
   140004767:	jmp    0x1400047dd
   140004769:	mov    rcx,rbx
   14000476c:	mov    WORD PTR [rbx],ax
   14000476f:	jmp    0x1400047dd
   140004771:	mov    rdx,rbx
   140004774:	cmp    rax,0x8
   140004778:	jb     0x14000477f
   14000477a:	mov    rcx,QWORD PTR [rbx]
   14000477d:	jmp    0x140004782
   14000477f:	mov    rcx,rbx
   140004782:	test   r15,r15
   140004785:	je     0x1400047a0
   140004787:	lea    rax,[r12+rsi*1]
   14000478b:	lea    r8,[r15+r15*1]
   14000478f:	lea    rdx,[rdx+rax*2]
   140004793:	lea    rax,[r12+r14*1]
   140004797:	lea    rcx,[rcx+rax*2]
   14000479b:	call   0x1400056d0
   1400047a0:	cmp    QWORD PTR [rbx+0x18],0x8
   1400047a5:	jb     0x1400047ac
   1400047a7:	mov    rax,QWORD PTR [rbx]
   1400047aa:	jmp    0x1400047af
   1400047ac:	mov    rax,rbx
   1400047af:	test   r14,r14
   1400047b2:	je     0x1400047c4
   1400047b4:	lea    r8,[r14+r14*1]
   1400047b8:	lea    rcx,[rax+r12*2]
   1400047bc:	mov    rdx,rbp
   1400047bf:	call   0x1400056d0
   1400047c4:	cmp    QWORD PTR [rbx+0x18],0x8
   1400047c9:	mov    QWORD PTR [rbx+0x10],rdi
   1400047cd:	jb     0x1400047d4
   1400047cf:	mov    rcx,QWORD PTR [rbx]
   1400047d2:	jmp    0x1400047d7
   1400047d4:	mov    rcx,rbx
   1400047d7:	xor    eax,eax
   1400047d9:	mov    WORD PTR [rcx+rdi*2],ax
   1400047dd:	mov    rdi,QWORD PTR [rsp+0x50]
   1400047e2:	mov    r14,QWORD PTR [rsp+0x58]
   1400047e7:	mov    r15,QWORD PTR [rsp+0x60]
   1400047ec:	mov    rax,rbx
   1400047ef:	mov    rbx,QWORD PTR [rsp+0x68]
   1400047f4:	add    rsp,0x30
   1400047f8:	pop    r12
   1400047fa:	pop    rsi
   1400047fb:	pop    rbp
   1400047fc:	ret    
   1400047fd:	lea    rcx,[rip+0x230c4]        # 0x1400278c8
   140004804:	call   0x14000522c
   140004809:	int3   
   14000480a:	lea    rcx,[rip+0x230a7]        # 0x1400278b8
   140004811:	call   0x1400051f4
   140004816:	int3   
   140004817:	lea    rcx,[rip+0x2309a]        # 0x1400278b8
   14000481e:	call   0x1400051f4
   140004823:	int3   
   140004824:	int3   
   140004825:	int3   
   140004826:	int3   
   140004827:	int3   
   140004828:	int3   
   140004829:	int3   
   14000482a:	int3   
   14000482b:	int3   
   14000482c:	int3   
   14000482d:	int3   
   14000482e:	int3   
   14000482f:	int3   
   140004830:	mov    QWORD PTR [rsp+0x8],rbx
   140004835:	push   rdi
   140004836:	sub    rsp,0x20
   14000483a:	mov    rdi,QWORD PTR [rcx+0x10]
   14000483e:	mov    rbx,rcx
   140004841:	cmp    rdi,rdx
   140004844:	ja     0x14000486c
   140004846:	cmp    QWORD PTR [rcx+0x18],rdx
   14000484a:	je     0x14000486c
   14000484c:	mov    r8b,0x1
   14000484f:	call   0x140001ee0
   140004854:	test   al,al
   140004856:	je     0x14000486c
   140004858:	cmp    QWORD PTR [rbx+0x18],0x8
   14000485d:	mov    QWORD PTR [rbx+0x10],rdi
   140004861:	jb     0x140004866
   140004863:	mov    rbx,QWORD PTR [rbx]
   140004866:	xor    eax,eax
   140004868:	mov    WORD PTR [rbx+rdi*2],ax
   14000486c:	mov    rbx,QWORD PTR [rsp+0x30]
   140004871:	add    rsp,0x20
   140004875:	pop    rdi
   140004876:	ret    
   140004877:	int3   
   140004878:	int3   
   140004879:	int3   
   14000487a:	int3   
   14000487b:	int3   
   14000487c:	int3   
   14000487d:	int3   
   14000487e:	int3   
   14000487f:	int3   
   140004880:	mov    rax,rdx
   140004883:	ret    
   140004884:	int3   
   140004885:	int3   
   140004886:	int3   
   140004887:	int3   
   140004888:	int3   
   140004889:	int3   
   14000488a:	int3   
   14000488b:	int3   
   14000488c:	int3   
   14000488d:	int3   
   14000488e:	int3   
   14000488f:	int3   
   140004890:	mov    rax,rdx
   140004893:	ret    
   140004894:	int3   
   140004895:	int3   
   140004896:	int3   
   140004897:	int3   
   140004898:	int3   
   140004899:	int3   
   14000489a:	int3   
   14000489b:	int3   
   14000489c:	int3   
   14000489d:	int3   
   14000489e:	int3   
   14000489f:	int3   
   1400048a0:	mov    rax,rcx
   1400048a3:	ret    
   1400048a4:	int3   
   1400048a5:	int3   
   1400048a6:	int3   
   1400048a7:	int3   
   1400048a8:	int3   
   1400048a9:	int3   
   1400048aa:	int3   
   1400048ab:	int3   
   1400048ac:	int3   
   1400048ad:	int3   
   1400048ae:	int3   
   1400048af:	int3   
   1400048b0:	rex push rbx
   1400048b2:	sub    rsp,0x420
   1400048b9:	mov    ebx,ecx
   1400048bb:	mov    rcx,QWORD PTR [rip+0x333fe]        # 0x140037cc0
   1400048c2:	lea    r8,[rsp+0x20]
   1400048c7:	mov    r9d,0x100
   1400048cd:	mov    edx,0x6d
   1400048d2:	call   QWORD PTR [rip+0x22a00]        # 0x1400272d8
   1400048d8:	mov    rcx,QWORD PTR [rip+0x333e1]        # 0x140037cc0
   1400048df:	lea    r8,[rsp+0x220]
   1400048e7:	mov    r9d,0x100
   1400048ed:	mov    edx,ebx
   1400048ef:	call   QWORD PTR [rip+0x229e3]        # 0x1400272d8
   1400048f5:	lea    r8,[rsp+0x20]
   1400048fa:	lea    rdx,[rsp+0x220]
   140004902:	xor    r9d,r9d
   140004905:	xor    ecx,ecx
   140004907:	call   QWORD PTR [rip+0x229d3]        # 0x1400272e0
   14000490d:	mov    ecx,0x1
   140004912:	call   0x1400063f4
   140004917:	int3   
   140004918:	int3   
   140004919:	int3   
   14000491a:	int3   
   14000491b:	int3   
   14000491c:	int3   
   14000491d:	int3   
   14000491e:	int3   
   14000491f:	int3   
   140004920:	mov    rax,QWORD PTR [rcx+0x10]
   140004924:	ret    
   140004925:	int3   
   140004926:	int3   
   140004927:	int3   
   140004928:	int3   
   140004929:	int3   
   14000492a:	int3   
   14000492b:	int3   
   14000492c:	int3   
   14000492d:	int3   
   14000492e:	int3   
   14000492f:	int3   
   140004930:	mov    rax,QWORD PTR [rcx+0x10]
   140004934:	ret    
   140004935:	int3   
   140004936:	int3   
   140004937:	int3   
   140004938:	int3   
   140004939:	int3   
   14000493a:	int3   
   14000493b:	int3   
   14000493c:	int3   
   14000493d:	int3   
   14000493e:	int3   
   14000493f:	int3   
   140004940:	lea    rax,[rip+0x316c9]        # 0x140036010
   140004947:	ret    
   140004948:	int3   
   140004949:	int3   
   14000494a:	int3   
   14000494b:	int3   
   14000494c:	int3   
   14000494d:	int3   
   14000494e:	int3   
   14000494f:	int3   
   140004950:	mov    eax,DWORD PTR [rcx]
   140004952:	ret    
   140004953:	int3   
   140004954:	int3   
   140004955:	int3   
   140004956:	int3   
   140004957:	int3   
   140004958:	int3   
   140004959:	int3   
   14000495a:	int3   
   14000495b:	int3   
   14000495c:	int3   
   14000495d:	int3   
   14000495e:	int3   
   14000495f:	int3   
   140004960:	mov    eax,DWORD PTR [rcx]
   140004962:	ret    
   140004963:	int3   
   140004964:	int3   
   140004965:	int3   
   140004966:	int3   
   140004967:	int3   
   140004968:	int3   
   140004969:	int3   
   14000496a:	int3   
   14000496b:	int3   
   14000496c:	int3   
   14000496d:	int3   
   14000496e:	int3   
   14000496f:	int3   
   140004970:	mov    QWORD PTR [rsp+0x8],rbx
   140004975:	mov    QWORD PTR [rsp+0x10],rsi
   14000497a:	push   rdi
   14000497b:	sub    rsp,0x40
   14000497f:	xor    edi,edi
   140004981:	cmp    QWORD PTR [rip+0x316a0],rdi        # 0x140036028
   140004988:	jne    0x1400049fc
   14000498a:	lea    rcx,[rsp+0x20]
   14000498f:	call   0x140003720
   140004994:	lea    rsi,[rip+0x3167d]        # 0x140036018
   14000499b:	mov    rbx,rax
   14000499e:	cmp    rsi,rax
   1400049a1:	je     0x1400049dd
   1400049a3:	cmp    QWORD PTR [rip+0x31685],0x8        # 0x140036030
   1400049ab:	jb     0x1400049b9
   1400049ad:	mov    rcx,QWORD PTR [rip+0x31664]        # 0x140036018
   1400049b4:	call   0x140005454
   1400049b9:	mov    rdx,rbx
   1400049bc:	mov    rcx,rsi
   1400049bf:	mov    QWORD PTR [rip+0x31666],0x7        # 0x140036030
   1400049ca:	mov    QWORD PTR [rip+0x31657],rdi        # 0x140036028
   1400049d1:	mov    WORD PTR [rip+0x31640],di        # 0x140036018
   1400049d8:	call   0x140001aa0
   1400049dd:	cmp    QWORD PTR [rsp+0x38],0x8
   1400049e3:	jb     0x1400049ef
   1400049e5:	mov    rcx,QWORD PTR [rsp+0x20]
   1400049ea:	call   0x140005454
   1400049ef:	cmp    QWORD PTR [rip+0x31632],rdi        # 0x140036028
   1400049f6:	je     0x140004a83
   1400049fc:	cmp    QWORD PTR [rip+0x31645],rdi        # 0x140036048
   140004a03:	jne    0x140004a73
   140004a05:	lea    rcx,[rsp+0x20]
   140004a0a:	call   0x1400035d0
   140004a0f:	lea    rsi,[rip+0x31622]        # 0x140036038
   140004a16:	mov    rbx,rax
   140004a19:	cmp    rsi,rax
   140004a1c:	je     0x140004a58
   140004a1e:	cmp    QWORD PTR [rip+0x3162a],0x8        # 0x140036050
   140004a26:	jb     0x140004a34
   140004a28:	mov    rcx,QWORD PTR [rip+0x31609]        # 0x140036038
   140004a2f:	call   0x140005454
   140004a34:	mov    rdx,rbx
   140004a37:	mov    rcx,rsi
   140004a3a:	mov    QWORD PTR [rip+0x3160b],0x7        # 0x140036050
   140004a45:	mov    QWORD PTR [rip+0x315fc],rdi        # 0x140036048
   140004a4c:	mov    WORD PTR [rip+0x315e5],di        # 0x140036038
   140004a53:	call   0x140001aa0
   140004a58:	cmp    QWORD PTR [rsp+0x38],0x8
   140004a5e:	jb     0x140004a6a
   140004a60:	mov    rcx,QWORD PTR [rsp+0x20]
   140004a65:	call   0x140005454
   140004a6a:	cmp    QWORD PTR [rip+0x315d7],rdi        # 0x140036048
   140004a71:	je     0x140004a8e
   140004a73:	mov    rbx,QWORD PTR [rsp+0x50]
   140004a78:	mov    rsi,QWORD PTR [rsp+0x58]
   140004a7d:	add    rsp,0x40
   140004a81:	pop    rdi
   140004a82:	ret    
   140004a83:	mov    ecx,0x71
   140004a88:	call   0x1400048b0
   140004a8d:	int3   
   140004a8e:	mov    ecx,0x72
   140004a93:	call   0x1400048b0
   140004a98:	int3   
   140004a99:	int3   
   140004a9a:	int3   
   140004a9b:	int3   
   140004a9c:	int3   
   140004a9d:	int3   
   140004a9e:	int3   
   140004a9f:	int3   
   140004aa0:	sub    rsp,0x28
   140004aa4:	mov    QWORD PTR [rip+0x33215],rcx        # 0x140037cc0
   140004aab:	call   0x1400030c0
   140004ab0:	call   0x140004970
   140004ab5:	call   0x140003ce0
   140004aba:	xor    eax,eax
   140004abc:	add    rsp,0x28
   140004ac0:	ret    
   140004ac1:	int3   
   140004ac2:	int3   
   140004ac3:	int3   
   140004ac4:	int3   
   140004ac5:	int3   
   140004ac6:	int3   
   140004ac7:	int3   
   140004ac8:	int3   
   140004ac9:	int3   
   140004aca:	int3   
   140004acb:	int3   
   140004acc:	int3   
   140004acd:	int3   
   140004ace:	int3   
   140004acf:	int3   
   140004ad0:	jmp    0x14000658c
   140004ad5:	int3   
   140004ad6:	int3   
   140004ad7:	int3   
   140004ad8:	int3   
   140004ad9:	int3   
   140004ada:	int3   
   140004adb:	int3   
   140004adc:	int3   
   140004add:	int3   
   140004ade:	int3   
   140004adf:	int3   
   140004ae0:	rex push rbx
   140004ae2:	sub    rsp,0x20
   140004ae6:	add    r8,r8
   140004ae9:	mov    rbx,rcx
   140004aec:	call   0x1400056d0
   140004af1:	mov    rax,rbx
   140004af4:	add    rsp,0x20
   140004af8:	pop    rbx
   140004af9:	ret    
   140004afa:	int3   
   140004afb:	int3   
   140004afc:	int3   
   140004afd:	int3   
   140004afe:	int3   
   140004aff:	int3   
   140004b00:	add    r8,r8
   140004b03:	jmp    0x1400056d0
   140004b08:	int3   
   140004b09:	int3   
   140004b0a:	int3   
   140004b0b:	int3   
   140004b0c:	int3   
   140004b0d:	int3   
   140004b0e:	int3   
   140004b0f:	int3   
   140004b10:	sub    rsp,0x8
   140004b14:	mov    r9,rcx
   140004b17:	test   r8,r8
   140004b1a:	je     0x140004b30
   140004b1c:	mov    QWORD PTR [rsp],rdi
   140004b20:	mov    rdi,rcx
   140004b23:	movzx  eax,dx
   140004b26:	mov    rcx,r8
   140004b29:	rep stos WORD PTR es:[rdi],ax
   140004b2c:	mov    rdi,QWORD PTR [rsp]
   140004b30:	mov    rax,r9
   140004b33:	add    rsp,0x8
   140004b37:	ret    
   140004b38:	jmp    QWORD PTR [rip+0x2252a]        # 0x140027068
   140004b3e:	jmp    QWORD PTR [rip+0x2251c]        # 0x140027060
   140004b44:	jmp    QWORD PTR [rip+0x2250e]        # 0x140027058
   140004b4a:	jmp    QWORD PTR [rip+0x224e8]        # 0x140027038
   140004b50:	jmp    QWORD PTR [rip+0x224ca]        # 0x140027020
   140004b56:	jmp    QWORD PTR [rip+0x224cc]        # 0x140027028
   140004b5c:	jmp    QWORD PTR [rip+0x224ce]        # 0x140027030
   140004b62:	jmp    QWORD PTR [rip+0x22770]        # 0x1400272d8
   140004b68:	jmp    QWORD PTR [rip+0x22772]        # 0x1400272e0
   140004b6e:	jmp    QWORD PTR [rip+0x22494]        # 0x140027008
   140004b74:	jmp    QWORD PTR [rip+0x22486]        # 0x140027000
   140004b7a:	jmp    QWORD PTR [rip+0x22490]        # 0x140027010
   140004b80:	mov    rax,rcx
   140004b83:	ret    
   140004b84:	rex push rbx
   140004b86:	sub    rsp,0x20
   140004b8a:	mov    rbx,rcx
   140004b8d:	call   0x14000790c
   140004b92:	lea    rax,[rip+0x2333f]        # 0x140027ed8
   140004b99:	mov    QWORD PTR [rbx],rax
   140004b9c:	mov    rax,rbx
   140004b9f:	add    rsp,0x20
   140004ba3:	pop    rbx
   140004ba4:	ret    
   140004ba5:	int3   
   140004ba6:	int3   
   140004ba7:	int3   
   140004ba8:	rex push rbx
   140004baa:	sub    rsp,0x20
   140004bae:	lea    rax,[rip+0x23333]        # 0x140027ee8
   140004bb5:	lea    rdx,[rsp+0x30]
   140004bba:	mov    r8d,0x1
   140004bc0:	mov    QWORD PTR [rsp+0x30],rax
   140004bc5:	mov    rbx,rcx
   140004bc8:	call   0x1400078f0
   140004bcd:	lea    rax,[rip+0x23304]        # 0x140027ed8
   140004bd4:	mov    QWORD PTR [rbx],rax
   140004bd7:	mov    rax,rbx
   140004bda:	add    rsp,0x20
   140004bde:	pop    rbx
   140004bdf:	ret    
   140004be0:	rex push rbx
   140004be2:	sub    rsp,0x20
   140004be6:	mov    rbx,rcx
   140004be9:	call   0x14000790c
   140004bee:	lea    rax,[rip+0x2339b]        # 0x140027f90
   140004bf5:	mov    QWORD PTR [rbx],rax
   140004bf8:	mov    rax,rbx
   140004bfb:	add    rsp,0x20
   140004bff:	pop    rbx
   140004c00:	ret    
   140004c01:	int3   
   140004c02:	int3   
   140004c03:	int3   
   140004c04:	rex push rbx
   140004c06:	sub    rsp,0x20
   140004c0a:	mov    rbx,rcx
   140004c0d:	call   0x140007938
   140004c12:	lea    rax,[rip+0x23377]        # 0x140027f90
   140004c19:	mov    QWORD PTR [rbx],rax
   140004c1c:	mov    rax,rbx
   140004c1f:	add    rsp,0x20
   140004c23:	pop    rbx
   140004c24:	ret    
   140004c25:	int3   
   140004c26:	int3   
   140004c27:	int3   
   140004c28:	rex push rbx
   140004c2a:	sub    rsp,0x20
   140004c2e:	mov    rbx,rcx
   140004c31:	call   0x14000790c
   140004c36:	lea    rax,[rip+0x232db]        # 0x140027f18
   140004c3d:	mov    QWORD PTR [rbx],rax
   140004c40:	mov    rax,rbx
   140004c43:	add    rsp,0x20
   140004c47:	pop    rbx
   140004c48:	ret    
   140004c49:	int3   
   140004c4a:	int3   
   140004c4b:	int3   
   140004c4c:	rex push rbx
   140004c4e:	sub    rsp,0x20
   140004c52:	mov    QWORD PTR [rsp+0x30],rdx
   140004c57:	lea    rdx,[rsp+0x30]
   140004c5c:	mov    rbx,rcx
   140004c5f:	call   0x1400078c0
   140004c64:	lea    rax,[rip+0x232ad]        # 0x140027f18
   140004c6b:	mov    QWORD PTR [rbx],rax
   140004c6e:	mov    rax,rbx
   140004c71:	add    rsp,0x20
   140004c75:	pop    rbx
   140004c76:	ret    
   140004c77:	int3   
   140004c78:	rex push rbx
   140004c7a:	sub    rsp,0x20
   140004c7e:	mov    rbx,rcx
   140004c81:	call   0x14000790c
   140004c86:	lea    rax,[rip+0x232a3]        # 0x140027f30
   140004c8d:	mov    QWORD PTR [rbx],rax
   140004c90:	mov    rax,rbx
   140004c93:	add    rsp,0x20
   140004c97:	pop    rbx
   140004c98:	ret    
   140004c99:	int3   
   140004c9a:	int3   
   140004c9b:	int3   
   140004c9c:	rex push rbx
   140004c9e:	sub    rsp,0x20
   140004ca2:	mov    QWORD PTR [rsp+0x30],rdx
   140004ca7:	lea    rdx,[rsp+0x30]
   140004cac:	mov    rbx,rcx
   140004caf:	call   0x1400078c0
   140004cb4:	lea    rax,[rip+0x23275]        # 0x140027f30
   140004cbb:	mov    QWORD PTR [rbx],rax
   140004cbe:	mov    rax,rbx
   140004cc1:	add    rsp,0x20
   140004cc5:	pop    rbx
   140004cc6:	ret    
   140004cc7:	int3   
   140004cc8:	rex push rbx
   140004cca:	sub    rsp,0x20
   140004cce:	mov    rbx,rcx
   140004cd1:	call   0x14000790c
   140004cd6:	lea    rax,[rip+0x23223]        # 0x140027f00
   140004cdd:	mov    QWORD PTR [rbx],rax
   140004ce0:	mov    rax,rbx
   140004ce3:	add    rsp,0x20
   140004ce7:	pop    rbx
   140004ce8:	ret    
   140004ce9:	int3   
   140004cea:	int3   
   140004ceb:	int3   
   140004cec:	mov    QWORD PTR [rsp+0x10],rdx
   140004cf1:	push   rbx
   140004cf2:	sub    rsp,0x20
   140004cf6:	lea    rdx,[rsp+0x38]
   140004cfb:	mov    rbx,rcx
   140004cfe:	call   0x1400078c0
   140004d03:	lea    rax,[rip+0x231f6]        # 0x140027f00
   140004d0a:	mov    QWORD PTR [rbx],rax
   140004d0d:	mov    rax,rbx
   140004d10:	add    rsp,0x20
   140004d14:	pop    rbx
   140004d15:	ret    
   140004d16:	int3   
   140004d17:	int3   
   140004d18:	rex push rbx
   140004d1a:	sub    rsp,0x20
   140004d1e:	mov    rbx,rcx
   140004d21:	call   0x14000790c
   140004d26:	lea    rax,[rip+0x2321b]        # 0x140027f48
   140004d2d:	mov    QWORD PTR [rbx],rax
   140004d30:	mov    rax,rbx
   140004d33:	add    rsp,0x20
   140004d37:	pop    rbx
   140004d38:	ret    
   140004d39:	int3   
   140004d3a:	int3   
   140004d3b:	int3   
   140004d3c:	rex push rbx
   140004d3e:	sub    rsp,0x20
   140004d42:	mov    QWORD PTR [rsp+0x30],rdx
   140004d47:	lea    rdx,[rsp+0x30]
   140004d4c:	mov    rbx,rcx
   140004d4f:	call   0x1400078c0
   140004d54:	lea    rax,[rip+0x231ed]        # 0x140027f48
   140004d5b:	mov    QWORD PTR [rbx],rax
   140004d5e:	mov    rax,rbx
   140004d61:	add    rsp,0x20
   140004d65:	pop    rbx
   140004d66:	ret    
   140004d67:	int3   
   140004d68:	rex push rbx
   140004d6a:	sub    rsp,0x20
   140004d6e:	mov    rbx,rcx
   140004d71:	call   0x14000790c
   140004d76:	lea    rax,[rip+0x231fb]        # 0x140027f78
   140004d7d:	mov    QWORD PTR [rbx],rax
   140004d80:	mov    rax,rbx
   140004d83:	add    rsp,0x20
   140004d87:	pop    rbx
   140004d88:	ret    
   140004d89:	int3   
   140004d8a:	int3   
   140004d8b:	int3   
   140004d8c:	rex push rbx
   140004d8e:	sub    rsp,0x20
   140004d92:	mov    QWORD PTR [rsp+0x30],rdx
   140004d97:	lea    rdx,[rsp+0x30]
   140004d9c:	mov    rbx,rcx
   140004d9f:	call   0x1400078c0
   140004da4:	lea    rax,[rip+0x231cd]        # 0x140027f78
   140004dab:	mov    QWORD PTR [rbx],rax
   140004dae:	mov    rax,rbx
   140004db1:	add    rsp,0x20
   140004db5:	pop    rbx
   140004db6:	ret    
   140004db7:	int3   
   140004db8:	mov    QWORD PTR [rsp+0x8],rbx
   140004dbd:	push   rdi
   140004dbe:	sub    rsp,0x20
   140004dc2:	mov    rbx,rdx
   140004dc5:	mov    rdi,rcx
   140004dc8:	call   0x14000790c
   140004dcd:	lea    rax,[rip+0x231ec]        # 0x140027fc0
   140004dd4:	mov    QWORD PTR [rdi],rax
   140004dd7:	mov    eax,DWORD PTR [rbx+0x18]
   140004dda:	mov    rbx,QWORD PTR [rsp+0x30]
   140004ddf:	mov    DWORD PTR [rdi+0x18],eax
   140004de2:	mov    rax,rdi
   140004de5:	add    rsp,0x20
   140004de9:	pop    rdi
   140004dea:	ret    
   140004deb:	int3   
   140004dec:	mov    QWORD PTR [rsp+0x10],rbx
   140004df1:	push   rdi
   140004df2:	sub    rsp,0x20
   140004df6:	mov    rdi,rcx
   140004df9:	mov    ecx,edx
   140004dfb:	mov    ebx,edx
   140004dfd:	call   0x14000508c
   140004e02:	lea    rdx,[rsp+0x30]
   140004e07:	mov    rcx,rdi
   140004e0a:	mov    QWORD PTR [rsp+0x30],rax
   140004e0f:	call   0x1400078c0
   140004e14:	lea    rax,[rip+0x231a5]        # 0x140027fc0
   140004e1b:	mov    QWORD PTR [rdi],rax
   140004e1e:	mov    DWORD PTR [rdi+0x18],ebx
   140004e21:	mov    rbx,QWORD PTR [rsp+0x38]
   140004e26:	mov    rax,rdi
   140004e29:	add    rsp,0x20
   140004e2d:	pop    rdi
   140004e2e:	ret    
   140004e2f:	int3   
   140004e30:	rex push rbx
   140004e32:	sub    rsp,0x20
   140004e36:	mov    rbx,rcx
   140004e39:	call   0x14000790c
   140004e3e:	lea    rax,[rip+0x2311b]        # 0x140027f60
   140004e45:	mov    QWORD PTR [rbx],rax
   140004e48:	mov    rax,rbx
   140004e4b:	add    rsp,0x20
   140004e4f:	pop    rbx
   140004e50:	ret    
   140004e51:	int3   
   140004e52:	int3   
   140004e53:	int3   
   140004e54:	mov    QWORD PTR [rsp+0x10],rdx
   140004e59:	push   rbx
   140004e5a:	sub    rsp,0x20
   140004e5e:	lea    rdx,[rsp+0x38]
   140004e63:	mov    rbx,rcx
   140004e66:	call   0x1400078c0
   140004e6b:	lea    rax,[rip+0x230ee]        # 0x140027f60
   140004e72:	mov    QWORD PTR [rbx],rax
   140004e75:	mov    rax,rbx
   140004e78:	add    rsp,0x20
   140004e7c:	pop    rbx
   140004e7d:	ret    
   140004e7e:	int3   
   140004e7f:	int3   
   140004e80:	lea    rax,[rip+0x23051]        # 0x140027ed8
   140004e87:	mov    QWORD PTR [rcx],rax
   140004e8a:	jmp    0x140007980
   140004e8f:	int3   
   140004e90:	jmp    0x140007980
   140004e95:	int3   
   140004e96:	int3   
   140004e97:	int3   
   140004e98:	jmp    0x140007980
   140004e9d:	int3   
   140004e9e:	int3   
   140004e9f:	int3   
   140004ea0:	jmp    0x140007980
   140004ea5:	int3   
   140004ea6:	int3   
   140004ea7:	int3   
   140004ea8:	jmp    0x140007980
   140004ead:	int3   
   140004eae:	int3   
   140004eaf:	int3   
   140004eb0:	jmp    0x140007980
   140004eb5:	int3   
   140004eb6:	int3   
   140004eb7:	int3   
   140004eb8:	jmp    0x140007980
   140004ebd:	int3   
   140004ebe:	int3   
   140004ebf:	int3   
   140004ec0:	jmp    0x140007980
   140004ec5:	int3   
   140004ec6:	int3   
   140004ec7:	int3   
   140004ec8:	jmp    0x140007980
   140004ecd:	int3   
   140004ece:	int3   
   140004ecf:	int3   
   140004ed0:	mov    QWORD PTR [rsp+0x8],rbx
   140004ed5:	push   rdi
   140004ed6:	sub    rsp,0x20
   140004eda:	lea    rax,[rip+0x22ff7]        # 0x140027ed8
   140004ee1:	mov    ebx,edx
   140004ee3:	mov    rdi,rcx
   140004ee6:	mov    QWORD PTR [rcx],rax
   140004ee9:	call   0x140007980
   140004eee:	test   bl,0x1
   140004ef1:	je     0x140004efb
   140004ef3:	mov    rcx,rdi
   140004ef6:	call   0x140005454
   140004efb:	mov    rax,rdi
   140004efe:	mov    rbx,QWORD PTR [rsp+0x30]
   140004f03:	add    rsp,0x20
   140004f07:	pop    rdi
   140004f08:	ret    
   140004f09:	int3   
   140004f0a:	int3   
   140004f0b:	int3   
   140004f0c:	mov    QWORD PTR [rsp+0x8],rbx
   140004f11:	push   rdi
   140004f12:	sub    rsp,0x20
   140004f16:	mov    ebx,edx
   140004f18:	mov    rdi,rcx
   140004f1b:	call   0x140007980
   140004f20:	test   bl,0x1
   140004f23:	je     0x140004f2d
   140004f25:	mov    rcx,rdi
   140004f28:	call   0x140005454
   140004f2d:	mov    rax,rdi
   140004f30:	mov    rbx,QWORD PTR [rsp+0x30]
   140004f35:	add    rsp,0x20
   140004f39:	pop    rdi
   140004f3a:	ret    
   140004f3b:	int3   
   140004f3c:	mov    QWORD PTR [rsp+0x8],rbx
   140004f41:	push   rdi
   140004f42:	sub    rsp,0x20
   140004f46:	mov    ebx,edx
   140004f48:	mov    rdi,rcx
   140004f4b:	call   0x140007980
   140004f50:	test   bl,0x1
   140004f53:	je     0x140004f5d
   140004f55:	mov    rcx,rdi
   140004f58:	call   0x140005454
   140004f5d:	mov    rax,rdi
   140004f60:	mov    rbx,QWORD PTR [rsp+0x30]
   140004f65:	add    rsp,0x20
   140004f69:	pop    rdi
   140004f6a:	ret    
   140004f6b:	int3   
   140004f6c:	mov    QWORD PTR [rsp+0x8],rbx
   140004f71:	push   rdi
   140004f72:	sub    rsp,0x20
   140004f76:	mov    ebx,edx
   140004f78:	mov    rdi,rcx
   140004f7b:	call   0x140007980
   140004f80:	test   bl,0x1
   140004f83:	je     0x140004f8d
   140004f85:	mov    rcx,rdi
   140004f88:	call   0x140005454
   140004f8d:	mov    rax,rdi
   140004f90:	mov    rbx,QWORD PTR [rsp+0x30]
   140004f95:	add    rsp,0x20
   140004f99:	pop    rdi
   140004f9a:	ret    
   140004f9b:	int3   
   140004f9c:	mov    QWORD PTR [rsp+0x8],rbx
   140004fa1:	push   rdi
   140004fa2:	sub    rsp,0x20
   140004fa6:	mov    ebx,edx
   140004fa8:	mov    rdi,rcx
   140004fab:	call   0x140007980
   140004fb0:	test   bl,0x1
   140004fb3:	je     0x140004fbd
   140004fb5:	mov    rcx,rdi
   140004fb8:	call   0x140005454
   140004fbd:	mov    rax,rdi
   140004fc0:	mov    rbx,QWORD PTR [rsp+0x30]
   140004fc5:	add    rsp,0x20
   140004fc9:	pop    rdi
   140004fca:	ret    
   140004fcb:	int3   
   140004fcc:	mov    QWORD PTR [rsp+0x8],rbx
   140004fd1:	push   rdi
   140004fd2:	sub    rsp,0x20
   140004fd6:	mov    ebx,edx
   140004fd8:	mov    rdi,rcx
   140004fdb:	call   0x140007980
   140004fe0:	test   bl,0x1
   140004fe3:	je     0x140004fed
   140004fe5:	mov    rcx,rdi
   140004fe8:	call   0x140005454
   140004fed:	mov    rax,rdi
   140004ff0:	mov    rbx,QWORD PTR [rsp+0x30]
   140004ff5:	add    rsp,0x20
   140004ff9:	pop    rdi
   140004ffa:	ret    
   140004ffb:	int3   
   140004ffc:	mov    QWORD PTR [rsp+0x8],rbx
   140005001:	push   rdi
   140005002:	sub    rsp,0x20
   140005006:	mov    ebx,edx
   140005008:	mov    rdi,rcx
   14000500b:	call   0x140007980
   140005010:	test   bl,0x1
   140005013:	je     0x14000501d
   140005015:	mov    rcx,rdi
   140005018:	call   0x140005454
   14000501d:	mov    rax,rdi
   140005020:	mov    rbx,QWORD PTR [rsp+0x30]
   140005025:	add    rsp,0x20
   140005029:	pop    rdi
   14000502a:	ret    
   14000502b:	int3   
   14000502c:	mov    QWORD PTR [rsp+0x8],rbx
   140005031:	push   rdi
   140005032:	sub    rsp,0x20
   140005036:	mov    ebx,edx
   140005038:	mov    rdi,rcx
   14000503b:	call   0x140007980
   140005040:	test   bl,0x1
   140005043:	je     0x14000504d
   140005045:	mov    rcx,rdi
   140005048:	call   0x140005454
   14000504d:	mov    rax,rdi
   140005050:	mov    rbx,QWORD PTR [rsp+0x30]
   140005055:	add    rsp,0x20
   140005059:	pop    rdi
   14000505a:	ret    
   14000505b:	int3   
   14000505c:	mov    QWORD PTR [rsp+0x8],rbx
   140005061:	push   rdi
   140005062:	sub    rsp,0x20
   140005066:	mov    ebx,edx
   140005068:	mov    rdi,rcx
   14000506b:	call   0x140007980
   140005070:	test   bl,0x1
   140005073:	je     0x14000507d
   140005075:	mov    rcx,rdi
   140005078:	call   0x140005454
   14000507d:	mov    rax,rdi
   140005080:	mov    rbx,QWORD PTR [rsp+0x30]
   140005085:	add    rsp,0x20
   140005089:	pop    rdi
   14000508a:	ret    
   14000508b:	int3   
   14000508c:	cmp    ecx,0x7
   14000508f:	jg     0x1400050ef
   140005091:	je     0x1400050e7
   140005093:	test   ecx,ecx
   140005095:	je     0x1400050df
   140005097:	dec    ecx
   140005099:	je     0x1400050d7
   14000509b:	dec    ecx
   14000509d:	je     0x1400050cf
   14000509f:	dec    ecx
   1400050a1:	je     0x1400050c7
   1400050a3:	dec    ecx
   1400050a5:	je     0x1400050bf
   1400050a7:	dec    ecx
   1400050a9:	je     0x1400050b7
   1400050ab:	dec    ecx
   1400050ad:	jne    0x14000510c
   1400050af:	lea    rax,[rip+0x2313a]        # 0x1400281f0
   1400050b6:	ret    
   1400050b7:	lea    rax,[rip+0x230e2]        # 0x1400281a0
   1400050be:	ret    
   1400050bf:	lea    rax,[rip+0x2308a]        # 0x140028150
   1400050c6:	ret    
   1400050c7:	lea    rax,[rip+0x23032]        # 0x140028100
   1400050ce:	ret    
   1400050cf:	lea    rax,[rip+0x22fba]        # 0x140028090
   1400050d6:	ret    
   1400050d7:	lea    rax,[rip+0x22f52]        # 0x140028030
   1400050de:	ret    
   1400050df:	lea    rax,[rip+0x22eea]        # 0x140027fd0
   1400050e6:	ret    
   1400050e7:	lea    rax,[rip+0x23152]        # 0x140028240
   1400050ee:	ret    
   1400050ef:	sub    ecx,0x8
   1400050f2:	je     0x140005144
   1400050f4:	dec    ecx
   1400050f6:	je     0x14000513c
   1400050f8:	dec    ecx
   1400050fa:	je     0x140005134
   1400050fc:	dec    ecx
   1400050fe:	je     0x14000512c
   140005100:	dec    ecx
   140005102:	je     0x140005124
   140005104:	dec    ecx
   140005106:	je     0x14000511c
   140005108:	dec    ecx
   14000510a:	je     0x140005114
   14000510c:	lea    rax,[rip+0x23425]        # 0x140028538
   140005113:	ret    
   140005114:	lea    rax,[rip+0x233fd]        # 0x140028518
   14000511b:	ret    
   14000511c:	lea    rax,[rip+0x233d5]        # 0x1400284f8
   140005123:	ret    
   140005124:	lea    rax,[rip+0x23335]        # 0x140028460
   14000512b:	ret    
   14000512c:	lea    rax,[rip+0x232ad]        # 0x1400283e0
   140005133:	ret    
   140005134:	lea    rax,[rip+0x23245]        # 0x140028380
   14000513b:	ret    
   14000513c:	lea    rax,[rip+0x231cd]        # 0x140028310
   140005143:	ret    
   140005144:	lea    rax,[rip+0x23155]        # 0x1400282a0
   14000514b:	ret    
   14000514c:	sub    rsp,0x48
   140005150:	lea    rax,[rip+0x22d91]        # 0x140027ee8
   140005157:	lea    rdx,[rsp+0x50]
   14000515c:	lea    rcx,[rsp+0x20]
   140005161:	mov    r8d,0x1
   140005167:	mov    QWORD PTR [rsp+0x50],rax
   14000516c:	call   0x1400078f0
   140005171:	lea    rax,[rip+0x22d60]        # 0x140027ed8
   140005178:	lea    rdx,[rip+0x2f8a9]        # 0x140034a28
   14000517f:	lea    rcx,[rsp+0x20]
   140005184:	mov    QWORD PTR [rsp+0x20],rax
   140005189:	call   0x140006894
   14000518e:	int3   
   14000518f:	int3   
   140005190:	sub    rsp,0x48
   140005194:	lea    rcx,[rsp+0x20]
   140005199:	call   0x140007938
   14000519e:	lea    rax,[rip+0x22deb]        # 0x140027f90
   1400051a5:	lea    rdx,[rip+0x2fb2c]        # 0x140034cd8
   1400051ac:	lea    rcx,[rsp+0x20]
   1400051b1:	mov    QWORD PTR [rsp+0x20],rax
   1400051b6:	call   0x140006894
   1400051bb:	int3   
   1400051bc:	sub    rsp,0x48
   1400051c0:	mov    QWORD PTR [rsp+0x50],rcx
   1400051c5:	lea    rdx,[rsp+0x50]
   1400051ca:	lea    rcx,[rsp+0x20]
   1400051cf:	call   0x1400078c0
   1400051d4:	lea    rax,[rip+0x22d3d]        # 0x140027f18
   1400051db:	lea    rdx,[rip+0x2f8ce]        # 0x140034ab0
   1400051e2:	lea    rcx,[rsp+0x20]
   1400051e7:	mov    QWORD PTR [rsp+0x20],rax
   1400051ec:	call   0x140006894
   1400051f1:	int3   
   1400051f2:	int3   
   1400051f3:	int3   
   1400051f4:	sub    rsp,0x48
   1400051f8:	mov    QWORD PTR [rsp+0x50],rcx
   1400051fd:	lea    rdx,[rsp+0x50]
   140005202:	lea    rcx,[rsp+0x20]
   140005207:	call   0x1400078c0
   14000520c:	lea    rax,[rip+0x22d1d]        # 0x140027f30
   140005213:	lea    rdx,[rip+0x2f926]        # 0x140034b40
   14000521a:	lea    rcx,[rsp+0x20]
   14000521f:	mov    QWORD PTR [rsp+0x20],rax
   140005224:	call   0x140006894
   140005229:	int3   
   14000522a:	int3   
   14000522b:	int3   
   14000522c:	sub    rsp,0x48
   140005230:	mov    QWORD PTR [rsp+0x50],rcx
   140005235:	lea    rdx,[rsp+0x50]
   14000523a:	lea    rcx,[rsp+0x20]
   14000523f:	call   0x1400078c0
   140005244:	lea    rax,[rip+0x22cfd]        # 0x140027f48
   14000524b:	lea    rdx,[rip+0x2f956]        # 0x140034ba8
   140005252:	lea    rcx,[rsp+0x20]
   140005257:	mov    QWORD PTR [rsp+0x20],rax
   14000525c:	call   0x140006894
   140005261:	int3   
   140005262:	int3   
   140005263:	int3   
   140005264:	sub    rsp,0x48
   140005268:	mov    QWORD PTR [rsp+0x50],rcx
   14000526d:	lea    rdx,[rsp+0x50]
   140005272:	lea    rcx,[rsp+0x20]
   140005277:	call   0x1400078c0
   14000527c:	lea    rax,[rip+0x22cf5]        # 0x140027f78
   140005283:	lea    rdx,[rip+0x2f986]        # 0x140034c10
   14000528a:	lea    rcx,[rsp+0x20]
   14000528f:	mov    QWORD PTR [rsp+0x20],rax
   140005294:	call   0x140006894
   140005299:	int3   
   14000529a:	int3   
   14000529b:	int3   
   14000529c:	rex push rbx
   14000529e:	sub    rsp,0x40
   1400052a2:	mov    ebx,ecx
   1400052a4:	call   0x14000508c
   1400052a9:	lea    rdx,[rsp+0x58]
   1400052ae:	lea    rcx,[rsp+0x20]
   1400052b3:	mov    QWORD PTR [rsp+0x58],rax
   1400052b8:	call   0x1400078c0
   1400052bd:	lea    rax,[rip+0x22cfc]        # 0x140027fc0
   1400052c4:	lea    rdx,[rip+0x2fa6d]        # 0x140034d38
   1400052cb:	lea    rcx,[rsp+0x20]
   1400052d0:	mov    QWORD PTR [rsp+0x20],rax
   1400052d5:	mov    DWORD PTR [rsp+0x38],ebx
   1400052d9:	call   0x140006894
   1400052de:	int3   
   1400052df:	int3   
   1400052e0:	sub    rsp,0x48
   1400052e4:	mov    QWORD PTR [rsp+0x50],rcx
   1400052e9:	lea    rdx,[rsp+0x50]
   1400052ee:	lea    rcx,[rsp+0x20]
   1400052f3:	call   0x1400078c0
   1400052f8:	lea    rax,[rip+0x22c61]        # 0x140027f60
   1400052ff:	lea    rdx,[rip+0x2f99a]        # 0x140034ca0
   140005306:	lea    rcx,[rsp+0x20]
   14000530b:	mov    QWORD PTR [rsp+0x20],rax
   140005310:	call   0x140006894
   140005315:	int3   
   140005316:	int3   
   140005317:	int3   
   140005318:	lea    rax,[rip+0x22c81]        # 0x140027fa0
   14000531f:	ret    
   140005320:	cmp    QWORD PTR [rip+0x236e0],0x0        # 0x140028a08
   140005328:	lea    rax,[rip+0x236d1]        # 0x140028a00
   14000532f:	je     0x140005340
   140005331:	cmp    DWORD PTR [rax],ecx
   140005333:	je     0x140005343
   140005335:	add    rax,0x10
   140005339:	cmp    QWORD PTR [rax+0x8],0x0
   14000533e:	jne    0x140005331
   140005340:	xor    eax,eax
   140005342:	ret    
   140005343:	mov    rax,QWORD PTR [rax+0x8]
   140005347:	ret    
   140005348:	cmp    QWORD PTR [rip+0x23208],0x0        # 0x140028558
   140005350:	lea    rax,[rip+0x231f9]        # 0x140028550
   140005357:	je     0x140005368
   140005359:	cmp    DWORD PTR [rax],ecx
   14000535b:	je     0x14000536b
   14000535d:	add    rax,0x10
   140005361:	cmp    QWORD PTR [rax+0x8],0x0
   140005366:	jne    0x140005359
   140005368:	xor    eax,eax
   14000536a:	ret    
   14000536b:	mov    rax,QWORD PTR [rax+0x8]
   14000536f:	ret    
   140005370:	mov    rcx,QWORD PTR [rip+0x329f1]        # 0x140037d68
   140005377:	rex.W jmp QWORD PTR [rip+0x21cfa]        # 0x140027078
   14000537e:	int3   
   14000537f:	int3   
   140005380:	sub    rsp,0x28
   140005384:	mov    rcx,QWORD PTR [rip+0x329dd]        # 0x140037d68
   14000538b:	call   QWORD PTR [rip+0x21ce7]        # 0x140027078
   140005391:	test   rax,rax
   140005394:	je     0x140005398
   140005396:	call   rax
   140005398:	mov    edx,0x1
   14000539d:	xor    ecx,ecx
   14000539f:	call   0x140007b5c
   1400053a4:	call   0x140007b78
   1400053a9:	int3   
   1400053aa:	int3   
   1400053ab:	int3   
   1400053ac:	mov    QWORD PTR [rsp+0x8],rbx
   1400053b1:	push   rdi
   1400053b2:	sub    rsp,0x20
   1400053b6:	mov    rdi,rcx
   1400053b9:	mov    rcx,QWORD PTR [rip+0x329a8]        # 0x140037d68
   1400053c0:	call   QWORD PTR [rip+0x21cb2]        # 0x140027078
   1400053c6:	mov    rcx,rdi
   1400053c9:	mov    rbx,rax
   1400053cc:	call   QWORD PTR [rip+0x21c9e]        # 0x140027070
   1400053d2:	mov    QWORD PTR [rip+0x3298f],rax        # 0x140037d68
   1400053d9:	mov    rax,rbx
   1400053dc:	mov    rbx,QWORD PTR [rsp+0x30]
   1400053e1:	add    rsp,0x20
   1400053e5:	pop    rdi
   1400053e6:	ret    
   1400053e7:	int3   
   1400053e8:	rex push rbx
   1400053ea:	sub    rsp,0x40
   1400053ee:	mov    rbx,rcx
   1400053f1:	jmp    0x140005402
   1400053f3:	mov    rcx,rbx
   1400053f6:	call   0x140007e5c
   1400053fb:	test   eax,eax
   1400053fd:	je     0x140005412
   1400053ff:	mov    rcx,rbx
   140005402:	call   0x1400064d4
   140005407:	test   rax,rax
   14000540a:	je     0x1400053f3
   14000540c:	add    rsp,0x40
   140005410:	pop    rbx
   140005411:	ret    
   140005412:	lea    rax,[rip+0x22acf]        # 0x140027ee8
   140005419:	lea    rdx,[rsp+0x58]
   14000541e:	lea    rcx,[rsp+0x20]
   140005423:	mov    r8d,0x1
   140005429:	mov    QWORD PTR [rsp+0x58],rax
   14000542e:	call   0x1400078f0
   140005433:	lea    rax,[rip+0x22a9e]        # 0x140027ed8
   14000543a:	lea    rdx,[rip+0x2f5e7]        # 0x140034a28
   140005441:	lea    rcx,[rsp+0x20]
   140005446:	mov    QWORD PTR [rsp+0x20],rax
   14000544b:	call   0x140006894
   140005450:	int3   
   140005451:	int3   
   140005452:	int3   
   140005453:	int3   
   140005454:	jmp    0x140006444
   140005459:	int3   
   14000545a:	int3   
   14000545b:	int3   
   14000545c:	rex push rbx
   14000545e:	sub    rsp,0x20
   140005462:	mov    edx,0x8
   140005467:	lea    ecx,[rdx+0x18]
   14000546a:	call   0x140007ed4
   14000546f:	mov    rcx,rax
   140005472:	mov    rbx,rax
   140005475:	call   QWORD PTR [rip+0x21bf5]        # 0x140027070
   14000547b:	mov    QWORD PTR [rip+0x34cfe],rax        # 0x14003a180
   140005482:	mov    QWORD PTR [rip+0x34cef],rax        # 0x14003a178
   140005489:	test   rbx,rbx
   14000548c:	jne    0x140005493
   14000548e:	lea    eax,[rbx+0x18]
   140005491:	jmp    0x140005499
   140005493:	and    QWORD PTR [rbx],0x0
   140005497:	xor    eax,eax
   140005499:	add    rsp,0x20
   14000549d:	pop    rbx
   14000549e:	ret    
   14000549f:	int3   
   1400054a0:	mov    QWORD PTR [rsp+0x8],rbx
   1400054a5:	mov    QWORD PTR [rsp+0x10],rsi
   1400054aa:	mov    QWORD PTR [rsp+0x18],rdi
   1400054af:	push   r12
   1400054b1:	push   r14
   1400054b3:	push   r15
   1400054b5:	sub    rsp,0x20
   1400054b9:	mov    r12,rcx
   1400054bc:	call   0x140006244
   1400054c1:	nop
   1400054c2:	mov    rcx,QWORD PTR [rip+0x34cb7]        # 0x14003a180
   1400054c9:	call   QWORD PTR [rip+0x21ba9]        # 0x140027078
   1400054cf:	mov    r14,rax
   1400054d2:	mov    rcx,QWORD PTR [rip+0x34c9f]        # 0x14003a178
   1400054d9:	call   QWORD PTR [rip+0x21b99]        # 0x140027078
   1400054df:	mov    rbx,rax
   1400054e2:	cmp    rax,r14
   1400054e5:	jb     0x140005586
   1400054eb:	mov    rdi,rax
   1400054ee:	sub    rdi,r14
   1400054f1:	lea    r15,[rdi+0x8]
   1400054f5:	cmp    r15,0x8
   1400054f9:	jb     0x140005586
   1400054ff:	mov    rcx,r14
   140005502:	call   0x140007e98
   140005507:	mov    rsi,rax
   14000550a:	cmp    rax,r15
   14000550d:	jae    0x140005564
   14000550f:	mov    edx,0x1000
   140005514:	cmp    rax,rdx
   140005517:	cmovb  rdx,rax
   14000551b:	add    rdx,rax
   14000551e:	cmp    rdx,rax
   140005521:	jb     0x140005534
   140005523:	mov    rcx,r14
   140005526:	call   0x140007fd0
   14000552b:	xor    ebx,ebx
   14000552d:	test   rax,rax
   140005530:	jne    0x14000554c
   140005532:	jmp    0x140005536
   140005534:	xor    ebx,ebx
   140005536:	lea    rdx,[rsi+0x20]
   14000553a:	cmp    rdx,rsi
   14000553d:	jb     0x140005588
   14000553f:	mov    rcx,r14
   140005542:	call   0x140007fd0
   140005547:	test   rax,rax
   14000554a:	je     0x140005588
   14000554c:	sar    rdi,0x3
   140005550:	lea    rbx,[rax+rdi*8]
   140005554:	mov    rcx,rax
   140005557:	call   QWORD PTR [rip+0x21b13]        # 0x140027070
   14000555d:	mov    QWORD PTR [rip+0x34c1c],rax        # 0x14003a180
   140005564:	mov    rcx,r12
   140005567:	call   QWORD PTR [rip+0x21b03]        # 0x140027070
   14000556d:	mov    QWORD PTR [rbx],rax
   140005570:	lea    rcx,[rbx+0x8]
   140005574:	call   QWORD PTR [rip+0x21af6]        # 0x140027070
   14000557a:	mov    QWORD PTR [rip+0x34bf7],rax        # 0x14003a178
   140005581:	mov    rbx,r12
   140005584:	jmp    0x140005588
   140005586:	xor    ebx,ebx
   140005588:	call   0x140006250
   14000558d:	mov    rax,rbx
   140005590:	mov    rbx,QWORD PTR [rsp+0x40]
   140005595:	mov    rsi,QWORD PTR [rsp+0x48]
   14000559a:	mov    rdi,QWORD PTR [rsp+0x50]
   14000559f:	add    rsp,0x20
   1400055a3:	pop    r15
   1400055a5:	pop    r14
   1400055a7:	pop    r12
   1400055a9:	ret    
   1400055aa:	int3   
   1400055ab:	int3   
   1400055ac:	mov    QWORD PTR [rsp+0x8],rbx
   1400055b1:	mov    QWORD PTR [rsp+0x10],rbp
   1400055b6:	mov    QWORD PTR [rsp+0x18],rsi
   1400055bb:	push   rdi
   1400055bc:	push   r14
   1400055be:	push   r15
   1400055c0:	sub    rsp,0x20
   1400055c4:	mov    r15,rcx
   1400055c7:	mov    rcx,QWORD PTR [rip+0x34bb2]        # 0x14003a180
   1400055ce:	call   QWORD PTR [rip+0x21aa4]        # 0x140027078
   1400055d4:	mov    rcx,QWORD PTR [rip+0x34b9d]        # 0x14003a178
   1400055db:	mov    rbp,rax
   1400055de:	call   QWORD PTR [rip+0x21a94]        # 0x140027078
   1400055e4:	mov    rsi,rax
   1400055e7:	cmp    rax,rbp
   1400055ea:	jb     0x140005685
   1400055f0:	mov    rbx,rax
   1400055f3:	sub    rbx,rbp
   1400055f6:	lea    r14,[rbx+0x8]
   1400055fa:	cmp    r14,0x8
   1400055fe:	jb     0x140005685
   140005604:	mov    rcx,rbp
   140005607:	call   0x140007e98
   14000560c:	mov    rdi,rax
   14000560f:	cmp    rax,r14
   140005612:	jae    0x140005663
   140005614:	mov    edx,0x1000
   140005619:	cmp    rax,rdx
   14000561c:	cmovb  rdx,rax
   140005620:	add    rdx,rax
   140005623:	cmp    rdx,rax
   140005626:	jb     0x140005635
   140005628:	mov    rcx,rbp
   14000562b:	call   0x140007fd0
   140005630:	test   rax,rax
   140005633:	jne    0x14000564b
   140005635:	lea    rdx,[rdi+0x20]
   140005639:	cmp    rdx,rdi
   14000563c:	jb     0x140005685
   14000563e:	mov    rcx,rbp
   140005641:	call   0x140007fd0
   140005646:	test   rax,rax
   140005649:	je     0x140005685
   14000564b:	sar    rbx,0x3
   14000564f:	mov    rcx,rax
   140005652:	lea    rsi,[rax+rbx*8]
   140005656:	call   QWORD PTR [rip+0x21a14]        # 0x140027070
   14000565c:	mov    QWORD PTR [rip+0x34b1d],rax        # 0x14003a180
   140005663:	mov    rcx,r15
   140005666:	call   QWORD PTR [rip+0x21a04]        # 0x140027070
   14000566c:	lea    rcx,[rsi+0x8]
   140005670:	mov    QWORD PTR [rsi],rax
   140005673:	call   QWORD PTR [rip+0x219f7]        # 0x140027070
   140005679:	mov    QWORD PTR [rip+0x34af8],rax        # 0x14003a178
   140005680:	mov    rax,r15
   140005683:	jmp    0x140005687
   140005685:	xor    eax,eax
   140005687:	mov    rbx,QWORD PTR [rsp+0x40]
   14000568c:	mov    rbp,QWORD PTR [rsp+0x48]
   140005691:	mov    rsi,QWORD PTR [rsp+0x50]
   140005696:	add    rsp,0x20
   14000569a:	pop    r15
   14000569c:	pop    r14
   14000569e:	pop    rdi
   14000569f:	ret    
   1400056a0:	sub    rsp,0x28
   1400056a4:	call   0x1400054a0
   1400056a9:	neg    rax
   1400056ac:	sbb    eax,eax
   1400056ae:	neg    eax
   1400056b0:	dec    eax
   1400056b2:	add    rsp,0x28
   1400056b6:	ret    
   1400056b7:	int3   
   1400056b8:	int3   
   1400056b9:	int3   
   1400056ba:	int3   
   1400056bb:	int3   
   1400056bc:	int3   
   1400056bd:	int3   
   1400056be:	int3   
   1400056bf:	int3   
   1400056c0:	int3   
   1400056c1:	int3   
   1400056c2:	int3   
   1400056c3:	int3   
   1400056c4:	int3   
   1400056c5:	int3   
   1400056c6:	data16 nop WORD PTR [rax+rax*1+0x0]
   1400056d0:	mov    r11,rcx
   1400056d3:	mov    r10,rdx
   1400056d6:	cmp    r8,0x10
   1400056da:	jbe    0x140005799
   1400056e0:	sub    rdx,rcx
   1400056e3:	jae    0x1400056f4
   1400056e5:	mov    rax,r10
   1400056e8:	add    rax,r8
   1400056eb:	cmp    rcx,rax
   1400056ee:	jl     0x140005a8a
   1400056f4:	bt     DWORD PTR [rip+0x32680],0x1        # 0x140037d7c
   1400056fc:	jae    0x140005711
   1400056fe:	push   rdi
   1400056ff:	push   rsi
   140005700:	mov    rdi,rcx
   140005703:	mov    rsi,r10
   140005706:	mov    rcx,r8
   140005709:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000570b:	pop    rsi
   14000570c:	pop    rdi
   14000570d:	mov    rax,r11
   140005710:	ret    
   140005711:	bt     DWORD PTR [rip+0x32663],0x2        # 0x140037d7c
   140005719:	jb     0x140005975
   14000571f:	test   cl,0x7
   140005722:	je     0x14000575a
   140005724:	test   cl,0x1
   140005727:	je     0x140005734
   140005729:	mov    al,BYTE PTR [rdx+rcx*1]
   14000572c:	dec    r8
   14000572f:	mov    BYTE PTR [rcx],al
   140005731:	inc    rcx
   140005734:	test   cl,0x2
   140005737:	je     0x140005748
   140005739:	mov    ax,WORD PTR [rdx+rcx*1]
   14000573d:	sub    r8,0x2
   140005741:	mov    WORD PTR [rcx],ax
   140005744:	add    rcx,0x2
   140005748:	test   cl,0x4
   14000574b:	je     0x14000575a
   14000574d:	mov    eax,DWORD PTR [rdx+rcx*1]
   140005750:	sub    r8,0x4
   140005754:	mov    DWORD PTR [rcx],eax
   140005756:	add    rcx,0x4
   14000575a:	mov    r9,r8
   14000575d:	shr    r9,0x5
   140005761:	jne    0x140005940
   140005767:	mov    r9,r8
   14000576a:	shr    r9,0x3
   14000576e:	je     0x140005784
   140005770:	mov    rax,QWORD PTR [rdx+rcx*1]
   140005774:	mov    QWORD PTR [rcx],rax
   140005777:	add    rcx,0x8
   14000577b:	dec    r9
   14000577e:	jne    0x140005770
   140005780:	and    r8,0x7
   140005784:	test   r8,r8
   140005787:	jne    0x140005790
   140005789:	mov    rax,r11
   14000578c:	ret    
   14000578d:	nop    DWORD PTR [rax]
   140005790:	lea    rdx,[rdx+rcx*1]
   140005794:	mov    r10,rcx
   140005797:	jmp    0x14000579c
   140005799:	mov    r10,r11
   14000579c:	lea    r9,[rip+0xffffffffffffa85d]        # 0x140000000
   1400057a3:	mov    eax,DWORD PTR [r9+r8*4+0x57b0]
   1400057ab:	add    rax,r9
   1400057ae:	jmp    rax
   1400057b0:	hlt    
   1400057b1:	push   rdi
   1400057b2:	add    BYTE PTR [rax],al
   1400057b4:	clc    
   1400057b5:	push   rdi
   1400057b6:	add    BYTE PTR [rax],al
   1400057b8:	add    ebx,DWORD PTR [rax+0x0]
   1400057bb:	add    BYTE PTR [rdi],cl
   1400057bd:	pop    rax
   1400057be:	add    BYTE PTR [rax],al
   1400057c0:	and    al,0x58
   1400057c2:	add    BYTE PTR [rax],al
   1400057c4:	sub    eax,0x3f000058
   1400057c9:	pop    rax
   1400057ca:	add    BYTE PTR [rax],al
   1400057cc:	push   rdx
   1400057cd:	pop    rax
   1400057ce:	add    BYTE PTR [rax],al
   1400057d0:	outs   dx,BYTE PTR ds:[rsi]
   1400057d1:	pop    rax
   1400057d2:	add    BYTE PTR [rax],al
   1400057d4:	js     0x14000582e
   1400057d6:	add    BYTE PTR [rax],al
   1400057d8:	mov    ebx,DWORD PTR [rax+0x0]
   1400057db:	add    BYTE PTR [rdi-0x43ffffa8],bl
   1400057e1:	pop    rax
   1400057e2:	add    BYTE PTR [rax],al
   1400057e4:	int    0x58
   1400057e6:	add    BYTE PTR [rax],al
   1400057e8:	out    0x58,eax
   1400057ea:	add    BYTE PTR [rax],al
   1400057ec:	add    bl,BYTE PTR [rcx+0x0]
   1400057ef:	add    BYTE PTR [rsi],ah
   1400057f1:	pop    rcx
   1400057f2:	add    BYTE PTR [rax],al
   1400057f4:	mov    rax,r11
   1400057f7:	ret    
   1400057f8:	movzx  rax,BYTE PTR [rdx]
   1400057fc:	mov    BYTE PTR [r10],al
   1400057ff:	mov    rax,r11
   140005802:	ret    
   140005803:	movzx  rax,WORD PTR [rdx]
   140005807:	mov    WORD PTR [r10],ax
   14000580b:	mov    rax,r11
   14000580e:	ret    
   14000580f:	movzx  rax,BYTE PTR [rdx]
   140005813:	movzx  rcx,WORD PTR [rdx+0x1]
   140005818:	mov    BYTE PTR [r10],al
   14000581b:	mov    WORD PTR [r10+0x1],cx
   140005820:	mov    rax,r11
   140005823:	ret    
   140005824:	mov    eax,DWORD PTR [rdx]
   140005826:	mov    DWORD PTR [r10],eax
   140005829:	mov    rax,r11
   14000582c:	ret    
   14000582d:	movzx  rax,BYTE PTR [rdx]
   140005831:	mov    ecx,DWORD PTR [rdx+0x1]
   140005834:	mov    BYTE PTR [r10],al
   140005837:	mov    DWORD PTR [r10+0x1],ecx
   14000583b:	mov    rax,r11
   14000583e:	ret    
   14000583f:	movzx  rax,WORD PTR [rdx]
   140005843:	mov    ecx,DWORD PTR [rdx+0x2]
   140005846:	mov    WORD PTR [r10],ax
   14000584a:	mov    DWORD PTR [r10+0x2],ecx
   14000584e:	mov    rax,r11
   140005851:	ret    
   140005852:	movzx  rax,BYTE PTR [rdx]
   140005856:	movzx  rcx,WORD PTR [rdx+0x1]
   14000585b:	mov    edx,DWORD PTR [rdx+0x3]
   14000585e:	mov    BYTE PTR [r10],al
   140005861:	mov    WORD PTR [r10+0x1],cx
   140005866:	mov    DWORD PTR [r10+0x3],edx
   14000586a:	mov    rax,r11
   14000586d:	ret    
   14000586e:	mov    rax,QWORD PTR [rdx]
   140005871:	mov    QWORD PTR [r10],rax
   140005874:	mov    rax,r11
   140005877:	ret    
   140005878:	movzx  rax,BYTE PTR [rdx]
   14000587c:	mov    rcx,QWORD PTR [rdx+0x1]
   140005880:	mov    BYTE PTR [r10],al
   140005883:	mov    QWORD PTR [r10+0x1],rcx
   140005887:	mov    rax,r11
   14000588a:	ret    
   14000588b:	movzx  rax,WORD PTR [rdx]
   14000588f:	mov    rcx,QWORD PTR [rdx+0x2]
   140005893:	mov    WORD PTR [r10],ax
   140005897:	mov    QWORD PTR [r10+0x2],rcx
   14000589b:	mov    rax,r11
   14000589e:	ret    
   14000589f:	movzx  rax,BYTE PTR [rdx]
   1400058a3:	movzx  rcx,WORD PTR [rdx+0x1]
   1400058a8:	mov    rdx,QWORD PTR [rdx+0x3]
   1400058ac:	mov    BYTE PTR [r10],al
   1400058af:	mov    WORD PTR [r10+0x1],cx
   1400058b4:	mov    QWORD PTR [r10+0x3],rdx
   1400058b8:	mov    rax,r11
   1400058bb:	ret    
   1400058bc:	mov    eax,DWORD PTR [rdx]
   1400058be:	mov    rcx,QWORD PTR [rdx+0x4]
   1400058c2:	mov    DWORD PTR [r10],eax
   1400058c5:	mov    QWORD PTR [r10+0x4],rcx
   1400058c9:	mov    rax,r11
   1400058cc:	ret    
   1400058cd:	movzx  rax,BYTE PTR [rdx]
   1400058d1:	mov    ecx,DWORD PTR [rdx+0x1]
   1400058d4:	mov    rdx,QWORD PTR [rdx+0x5]
   1400058d8:	mov    BYTE PTR [r10],al
   1400058db:	mov    DWORD PTR [r10+0x1],ecx
   1400058df:	mov    QWORD PTR [r10+0x5],rdx
   1400058e3:	mov    rax,r11
   1400058e6:	ret    
   1400058e7:	movzx  rax,WORD PTR [rdx]
   1400058eb:	mov    ecx,DWORD PTR [rdx+0x2]
   1400058ee:	mov    rdx,QWORD PTR [rdx+0x6]
   1400058f2:	mov    WORD PTR [r10],ax
   1400058f6:	mov    DWORD PTR [r10+0x2],ecx
   1400058fa:	mov    QWORD PTR [r10+0x6],rdx
   1400058fe:	mov    rax,r11
   140005901:	ret    
   140005902:	movzx  r8,BYTE PTR [rdx]
   140005906:	movzx  rax,WORD PTR [rdx+0x1]
   14000590b:	mov    ecx,DWORD PTR [rdx+0x3]
   14000590e:	mov    rdx,QWORD PTR [rdx+0x7]
   140005912:	mov    BYTE PTR [r10],r8b
   140005915:	mov    WORD PTR [r10+0x1],ax
   14000591a:	mov    DWORD PTR [r10+0x3],ecx
   14000591e:	mov    QWORD PTR [r10+0x7],rdx
   140005922:	mov    rax,r11
   140005925:	ret    
   140005926:	movdqu xmm0,XMMWORD PTR [rdx]
   14000592a:	movdqu XMMWORD PTR [r10],xmm0
   14000592f:	mov    rax,r11
   140005932:	ret    
   140005933:	data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140005940:	mov    rax,QWORD PTR [rdx+rcx*1]
   140005944:	mov    r10,QWORD PTR [rdx+rcx*1+0x8]
   140005949:	add    rcx,0x20
   14000594d:	mov    QWORD PTR [rcx-0x20],rax
   140005951:	mov    QWORD PTR [rcx-0x18],r10
   140005955:	mov    rax,QWORD PTR [rdx+rcx*1-0x10]
   14000595a:	mov    r10,QWORD PTR [rdx+rcx*1-0x8]
   14000595f:	dec    r9
   140005962:	mov    QWORD PTR [rcx-0x10],rax
   140005966:	mov    QWORD PTR [rcx-0x8],r10
   14000596a:	jne    0x140005940
   14000596c:	and    r8,0x1f
   140005970:	jmp    0x140005767
   140005975:	cmp    r8,0x20
   140005979:	jbe    0x140005a60
   14000597f:	test   cl,0xf
   140005982:	jne    0x140005992
   140005984:	movups xmm0,XMMWORD PTR [rdx+rcx*1]
   140005988:	add    rcx,0x10
   14000598c:	sub    r8,0x10
   140005990:	jmp    0x1400059af
   140005992:	movups xmm1,XMMWORD PTR [rdx+rcx*1]
   140005996:	add    rcx,0x20
   14000599a:	and    cl,0xf0
   14000599d:	movups xmm0,XMMWORD PTR [rdx+rcx*1-0x10]
   1400059a2:	movups XMMWORD PTR [r11],xmm1
   1400059a6:	mov    rax,rcx
   1400059a9:	sub    rax,r11
   1400059ac:	sub    r8,rax
   1400059af:	mov    r9,r8
   1400059b2:	shr    r9,0x7
   1400059b6:	je     0x140005a1e
   1400059b8:	movaps XMMWORD PTR [rcx-0x10],xmm0
   1400059bc:	jmp    0x1400059c8
   1400059be:	xchg   ax,ax
   1400059c0:	movaps XMMWORD PTR [rcx-0x20],xmm0
   1400059c4:	movaps XMMWORD PTR [rcx-0x10],xmm1
   1400059c8:	movups xmm0,XMMWORD PTR [rdx+rcx*1]
   1400059cc:	movups xmm1,XMMWORD PTR [rdx+rcx*1+0x10]
   1400059d1:	add    rcx,0x80
   1400059d8:	movaps XMMWORD PTR [rcx-0x80],xmm0
   1400059dc:	movaps XMMWORD PTR [rcx-0x70],xmm1
   1400059e0:	movups xmm0,XMMWORD PTR [rdx+rcx*1-0x60]
   1400059e5:	movups xmm1,XMMWORD PTR [rdx+rcx*1-0x50]
   1400059ea:	dec    r9
   1400059ed:	movaps XMMWORD PTR [rcx-0x60],xmm0
   1400059f1:	movaps XMMWORD PTR [rcx-0x50],xmm1
   1400059f5:	movups xmm0,XMMWORD PTR [rdx+rcx*1-0x40]
   1400059fa:	movups xmm1,XMMWORD PTR [rdx+rcx*1-0x30]
   1400059ff:	movaps XMMWORD PTR [rcx-0x40],xmm0
   140005a03:	movaps XMMWORD PTR [rcx-0x30],xmm1
   140005a07:	movups xmm0,XMMWORD PTR [rdx+rcx*1-0x20]
   140005a0c:	movups xmm1,XMMWORD PTR [rdx+rcx*1-0x10]
   140005a11:	jne    0x1400059c0
   140005a13:	movaps XMMWORD PTR [rcx-0x20],xmm0
   140005a17:	and    r8,0x7f
   140005a1b:	movaps xmm0,xmm1
   140005a1e:	mov    r9,r8
   140005a21:	shr    r9,0x4
   140005a25:	je     0x140005a41
   140005a27:	nop    WORD PTR [rax+rax*1+0x0]
   140005a30:	movaps XMMWORD PTR [rcx-0x10],xmm0
   140005a34:	movups xmm0,XMMWORD PTR [rdx+rcx*1]
   140005a38:	add    rcx,0x10
   140005a3c:	dec    r9
   140005a3f:	jne    0x140005a30
   140005a41:	and    r8,0xf
   140005a45:	je     0x140005a54
   140005a47:	lea    rax,[r8+rcx*1]
   140005a4b:	movups xmm1,XMMWORD PTR [rdx+rax*1-0x10]
   140005a50:	movups XMMWORD PTR [rax-0x10],xmm1
   140005a54:	movaps XMMWORD PTR [rcx-0x10],xmm0
   140005a58:	mov    rax,r11
   140005a5b:	ret    
   140005a5c:	nop    DWORD PTR [rax+0x0]
   140005a60:	movups xmm0,XMMWORD PTR [r10]
   140005a64:	lea    rcx,[r8+rcx*1-0x10]
   140005a69:	movups xmm1,XMMWORD PTR [rdx+rcx*1]
   140005a6d:	movups XMMWORD PTR [r11],xmm0
   140005a71:	movups XMMWORD PTR [rcx],xmm1
   140005a74:	mov    rax,r11
   140005a77:	ret    
   140005a78:	nop    DWORD PTR [rax+rax*1+0x0]
   140005a80:	data16 data16 xchg ax,ax
   140005a84:	data16 data16 xchg ax,ax
   140005a88:	xchg   ax,ax
   140005a8a:	bt     DWORD PTR [rip+0x322ea],0x2        # 0x140037d7c
   140005a92:	jb     0x140005b51
   140005a98:	add    rcx,r8
   140005a9b:	test   cl,0x7
   140005a9e:	je     0x140005ad6
   140005aa0:	test   cl,0x1
   140005aa3:	je     0x140005ab0
   140005aa5:	dec    rcx
   140005aa8:	mov    al,BYTE PTR [rdx+rcx*1]
   140005aab:	dec    r8
   140005aae:	mov    BYTE PTR [rcx],al
   140005ab0:	test   cl,0x2
   140005ab3:	je     0x140005ac4
   140005ab5:	sub    rcx,0x2
   140005ab9:	mov    ax,WORD PTR [rdx+rcx*1]
   140005abd:	sub    r8,0x2
   140005ac1:	mov    WORD PTR [rcx],ax
   140005ac4:	test   cl,0x4
   140005ac7:	je     0x140005ad6
   140005ac9:	sub    rcx,0x4
   140005acd:	mov    eax,DWORD PTR [rdx+rcx*1]
   140005ad0:	sub    r8,0x4
   140005ad4:	mov    DWORD PTR [rcx],eax
   140005ad6:	mov    r9,r8
   140005ad9:	shr    r9,0x5
   140005add:	jne    0x140005b20
   140005adf:	mov    r9,r8
   140005ae2:	shr    r9,0x3
   140005ae6:	je     0x140005afc
   140005ae8:	sub    rcx,0x8
   140005aec:	mov    rax,QWORD PTR [rdx+rcx*1]
   140005af0:	dec    r9
   140005af3:	mov    QWORD PTR [rcx],rax
   140005af6:	jne    0x140005ae8
   140005af8:	and    r8,0x7
   140005afc:	test   r8,r8
   140005aff:	jne    0x140005b10
   140005b01:	mov    rax,r11
   140005b04:	ret    
   140005b05:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140005b10:	sub    rcx,r8
   140005b13:	mov    r10,rcx
   140005b16:	lea    rdx,[rdx+rcx*1]
   140005b1a:	jmp    0x14000579c
   140005b1f:	nop
   140005b20:	mov    rax,QWORD PTR [rdx+rcx*1-0x8]
   140005b25:	mov    r10,QWORD PTR [rdx+rcx*1-0x10]
   140005b2a:	sub    rcx,0x20
   140005b2e:	mov    QWORD PTR [rcx+0x18],rax
   140005b32:	mov    QWORD PTR [rcx+0x10],r10
   140005b36:	mov    rax,QWORD PTR [rdx+rcx*1+0x8]
   140005b3b:	mov    r10,QWORD PTR [rdx+rcx*1]
   140005b3f:	dec    r9
   140005b42:	mov    QWORD PTR [rcx+0x8],rax
   140005b46:	mov    QWORD PTR [rcx],r10
   140005b49:	jne    0x140005b20
   140005b4b:	and    r8,0x1f
   140005b4f:	jmp    0x140005adf
   140005b51:	cmp    r8,0x20
   140005b55:	jbe    0x140005a60
   140005b5b:	add    rcx,r8
   140005b5e:	test   cl,0xf
   140005b61:	jne    0x140005b71
   140005b63:	sub    rcx,0x10
   140005b67:	movups xmm0,XMMWORD PTR [rdx+rcx*1]
   140005b6b:	sub    r8,0x10
   140005b6f:	jmp    0x140005b8c
   140005b71:	sub    rcx,0x10
   140005b75:	movups xmm1,XMMWORD PTR [rdx+rcx*1]
   140005b79:	mov    rax,rcx
   140005b7c:	and    cl,0xf0
   140005b7f:	movups xmm0,XMMWORD PTR [rdx+rcx*1]
   140005b83:	movups XMMWORD PTR [rax],xmm1
   140005b86:	mov    r8,rcx
   140005b89:	sub    r8,r11
   140005b8c:	mov    r9,r8
   140005b8f:	shr    r9,0x7
   140005b93:	je     0x140005bfd
   140005b95:	movaps XMMWORD PTR [rcx],xmm0
   140005b98:	jmp    0x140005ba7
   140005b9a:	nop    WORD PTR [rax+rax*1+0x0]
   140005ba0:	movaps XMMWORD PTR [rcx+0x10],xmm0
   140005ba4:	movaps XMMWORD PTR [rcx],xmm1
   140005ba7:	movups xmm0,XMMWORD PTR [rdx+rcx*1-0x10]
   140005bac:	movups xmm1,XMMWORD PTR [rdx+rcx*1-0x20]
   140005bb1:	sub    rcx,0x80
   140005bb8:	movaps XMMWORD PTR [rcx+0x70],xmm0
   140005bbc:	movaps XMMWORD PTR [rcx+0x60],xmm1
   140005bc0:	movups xmm0,XMMWORD PTR [rdx+rcx*1+0x50]
   140005bc5:	movups xmm1,XMMWORD PTR [rdx+rcx*1+0x40]
   140005bca:	dec    r9
   140005bcd:	movaps XMMWORD PTR [rcx+0x50],xmm0
   140005bd1:	movaps XMMWORD PTR [rcx+0x40],xmm1
   140005bd5:	movups xmm0,XMMWORD PTR [rdx+rcx*1+0x30]
   140005bda:	movups xmm1,XMMWORD PTR [rdx+rcx*1+0x20]
   140005bdf:	movaps XMMWORD PTR [rcx+0x30],xmm0
   140005be3:	movaps XMMWORD PTR [rcx+0x20],xmm1
   140005be7:	movups xmm0,XMMWORD PTR [rdx+rcx*1+0x10]
   140005bec:	movups xmm1,XMMWORD PTR [rdx+rcx*1]
   140005bf0:	jne    0x140005ba0
   140005bf2:	movaps XMMWORD PTR [rcx+0x10],xmm0
   140005bf6:	and    r8,0x7f
   140005bfa:	movaps xmm0,xmm1
   140005bfd:	mov    r9,r8
   140005c00:	shr    r9,0x4
   140005c04:	je     0x140005c20
   140005c06:	data16 nop WORD PTR [rax+rax*1+0x0]
   140005c10:	movaps XMMWORD PTR [rcx],xmm0
   140005c13:	sub    rcx,0x10
   140005c17:	movups xmm0,XMMWORD PTR [rdx+rcx*1]
   140005c1b:	dec    r9
   140005c1e:	jne    0x140005c10
   140005c20:	and    r8,0xf
   140005c24:	je     0x140005c2e
   140005c26:	movups xmm1,XMMWORD PTR [r10]
   140005c2a:	movups XMMWORD PTR [r11],xmm1
   140005c2e:	movaps XMMWORD PTR [rcx],xmm0
   140005c31:	mov    rax,r11
   140005c34:	ret    
   140005c35:	int3   
   140005c36:	int3   
   140005c37:	int3   
   140005c38:	mov    rax,rsp
   140005c3b:	mov    QWORD PTR [rax+0x8],rbx
   140005c3f:	mov    QWORD PTR [rax+0x10],rbp
   140005c43:	mov    QWORD PTR [rax+0x18],rsi
   140005c47:	mov    QWORD PTR [rax+0x20],rdi
   140005c4b:	push   r15
   140005c4d:	sub    rsp,0x30
   140005c51:	xor    edi,edi
   140005c53:	mov    rbx,rdx
   140005c56:	mov    rsi,rcx
   140005c59:	test   rcx,rcx
   140005c5c:	jne    0x140005c76
   140005c5e:	call   0x1400095b8
   140005c63:	mov    ebx,0x16
   140005c68:	mov    DWORD PTR [rax],ebx
   140005c6a:	call   0x140008628
   140005c6f:	mov    eax,ebx
   140005c71:	jmp    0x140005d1d
   140005c76:	test   rdx,rdx
   140005c79:	je     0x140005c5e
   140005c7b:	call   0x140008d30
   140005c80:	mov    r15d,0x1
   140005c86:	test   eax,eax
   140005c88:	jne    0x140005c96
   140005c8a:	call   QWORD PTR [rip+0x21410]        # 0x1400270a0
   140005c90:	test   eax,eax
   140005c92:	cmove  edi,r15d
   140005c96:	and    DWORD PTR [rsp+0x28],0x0
   140005c9b:	and    QWORD PTR [rbx],0x0
   140005c9f:	and    QWORD PTR [rsp+0x20],0x0
   140005ca5:	or     r9d,0xffffffff
   140005ca9:	mov    r8,rsi
   140005cac:	xor    edx,edx
   140005cae:	mov    ecx,edi
   140005cb0:	call   QWORD PTR [rip+0x213f2]        # 0x1400270a8
   140005cb6:	movsxd rbp,eax
   140005cb9:	test   eax,eax
   140005cbb:	jne    0x140005cce
   140005cbd:	call   QWORD PTR [rip+0x213bd]        # 0x140027080
   140005cc3:	mov    ecx,eax
   140005cc5:	call   0x140009568
   140005cca:	xor    eax,eax
   140005ccc:	jmp    0x140005d1d
   140005cce:	mov    rcx,rbp
   140005cd1:	add    rcx,rcx
   140005cd4:	call   0x140007f54
   140005cd9:	mov    QWORD PTR [rbx],rax
   140005cdc:	test   rax,rax
   140005cdf:	je     0x140005cca
   140005ce1:	or     r9d,0xffffffff
   140005ce5:	mov    r8,rsi
   140005ce8:	xor    edx,edx
   140005cea:	mov    ecx,edi
   140005cec:	mov    DWORD PTR [rsp+0x28],ebp
   140005cf0:	mov    QWORD PTR [rsp+0x20],rax
   140005cf5:	call   QWORD PTR [rip+0x213ad]        # 0x1400270a8
   140005cfb:	test   eax,eax
   140005cfd:	jne    0x140005d1a
   140005cff:	call   QWORD PTR [rip+0x2137b]        # 0x140027080
   140005d05:	mov    ecx,eax
   140005d07:	call   0x140009568
   140005d0c:	mov    rcx,QWORD PTR [rbx]
   140005d0f:	call   0x140006444
   140005d14:	and    QWORD PTR [rbx],0x0
   140005d18:	jmp    0x140005cca
   140005d1a:	mov    eax,r15d
   140005d1d:	mov    rbx,QWORD PTR [rsp+0x40]
   140005d22:	mov    rbp,QWORD PTR [rsp+0x48]
   140005d27:	mov    rsi,QWORD PTR [rsp+0x50]
   140005d2c:	mov    rdi,QWORD PTR [rsp+0x58]
   140005d31:	add    rsp,0x30
   140005d35:	pop    r15
   140005d37:	ret    
   140005d38:	mov    rax,rsp
   140005d3b:	mov    QWORD PTR [rax+0x8],rbx
   140005d3f:	mov    QWORD PTR [rax+0x10],rbp
   140005d43:	mov    QWORD PTR [rax+0x18],rsi
   140005d47:	mov    QWORD PTR [rax+0x20],rdi
   140005d4b:	push   r15
   140005d4d:	sub    rsp,0x40
   140005d51:	xor    edi,edi
   140005d53:	mov    rbx,rdx
   140005d56:	mov    rsi,rcx
   140005d59:	test   rcx,rcx
   140005d5c:	jne    0x140005d76
   140005d5e:	call   0x1400095b8
   140005d63:	mov    ebx,0x16
   140005d68:	mov    DWORD PTR [rax],ebx
   140005d6a:	call   0x140008628
   140005d6f:	mov    eax,ebx
   140005d71:	jmp    0x140005e32
   140005d76:	test   rdx,rdx
   140005d79:	je     0x140005d5e
   140005d7b:	call   0x140008d30
   140005d80:	mov    r15d,0x1
   140005d86:	test   eax,eax
   140005d88:	jne    0x140005d96
   140005d8a:	call   QWORD PTR [rip+0x21310]        # 0x1400270a0
   140005d90:	test   eax,eax
   140005d92:	cmove  edi,r15d
   140005d96:	and    QWORD PTR [rsp+0x38],0x0
   140005d9c:	and    QWORD PTR [rsp+0x30],0x0
   140005da2:	and    DWORD PTR [rsp+0x28],0x0
   140005da7:	and    QWORD PTR [rsp+0x20],0x0
   140005dad:	and    QWORD PTR [rbx],0x0
   140005db1:	or     r9d,0xffffffff
   140005db5:	mov    r8,rsi
   140005db8:	xor    edx,edx
   140005dba:	mov    ecx,edi
   140005dbc:	call   QWORD PTR [rip+0x212ee]        # 0x1400270b0
   140005dc2:	movsxd rbp,eax
   140005dc5:	test   eax,eax
   140005dc7:	jne    0x140005dda
   140005dc9:	call   QWORD PTR [rip+0x212b1]        # 0x140027080
   140005dcf:	mov    ecx,eax
   140005dd1:	call   0x140009568
   140005dd6:	xor    eax,eax
   140005dd8:	jmp    0x140005e32
   140005dda:	mov    rcx,rbp
   140005ddd:	call   0x140007f54
   140005de2:	mov    QWORD PTR [rbx],rax
   140005de5:	test   rax,rax
   140005de8:	je     0x140005dd6
   140005dea:	and    QWORD PTR [rsp+0x38],0x0
   140005df0:	and    QWORD PTR [rsp+0x30],0x0
   140005df6:	or     r9d,0xffffffff
   140005dfa:	mov    r8,rsi
   140005dfd:	xor    edx,edx
   140005dff:	mov    ecx,edi
   140005e01:	mov    DWORD PTR [rsp+0x28],ebp
   140005e05:	mov    QWORD PTR [rsp+0x20],rax
   140005e0a:	call   QWORD PTR [rip+0x212a0]        # 0x1400270b0
   140005e10:	test   eax,eax
   140005e12:	jne    0x140005e2f
   140005e14:	call   QWORD PTR [rip+0x21266]        # 0x140027080
   140005e1a:	mov    ecx,eax
   140005e1c:	call   0x140009568
   140005e21:	mov    rcx,QWORD PTR [rbx]
   140005e24:	call   0x140006444
   140005e29:	and    QWORD PTR [rbx],0x0
   140005e2d:	jmp    0x140005dd6
   140005e2f:	mov    eax,r15d
   140005e32:	mov    rbx,QWORD PTR [rsp+0x50]
   140005e37:	mov    rbp,QWORD PTR [rsp+0x58]
   140005e3c:	mov    rsi,QWORD PTR [rsp+0x60]
   140005e41:	mov    rdi,QWORD PTR [rsp+0x68]
   140005e46:	add    rsp,0x40
   140005e4a:	pop    r15
   140005e4c:	ret    
   140005e4d:	int3   
   140005e4e:	int3   
   140005e4f:	int3   
   140005e50:	rex push rbx
   140005e52:	sub    rsp,0x20
   140005e56:	mov    ebx,ecx
   140005e58:	lea    r8,[rsp+0x38]
   140005e5d:	lea    rdx,[rip+0x239dc]        # 0x140029840
   140005e64:	xor    ecx,ecx
   140005e66:	call   QWORD PTR [rip+0x21224]        # 0x140027090
   140005e6c:	test   eax,eax
   140005e6e:	je     0x140005e8b
   140005e70:	mov    rcx,QWORD PTR [rsp+0x38]
   140005e75:	lea    rdx,[rip+0x239dc]        # 0x140029858
   140005e7c:	call   QWORD PTR [rip+0x21216]        # 0x140027098
   140005e82:	test   rax,rax
   140005e85:	je     0x140005e8b
   140005e87:	mov    ecx,ebx
   140005e89:	call   rax
   140005e8b:	add    rsp,0x20
   140005e8f:	pop    rbx
   140005e90:	ret    
   140005e91:	int3   
   140005e92:	int3   
   140005e93:	int3   
   140005e94:	rex push rbx
   140005e96:	sub    rsp,0x20
   140005e9a:	mov    ebx,ecx
   140005e9c:	call   0x140005e50
   140005ea1:	mov    ecx,ebx
   140005ea3:	call   QWORD PTR [rip+0x211df]        # 0x140027088
   140005ea9:	int3   
   140005eaa:	int3   
   140005eab:	int3   
   140005eac:	mov    QWORD PTR [rsp+0x8],rbx
   140005eb1:	push   rdi
   140005eb2:	sub    rsp,0x20
   140005eb6:	mov    rcx,QWORD PTR [rip+0x342c3]        # 0x14003a180
   140005ebd:	call   QWORD PTR [rip+0x211b5]        # 0x140027078
   140005ec3:	mov    rbx,QWORD PTR [rip+0x31e4e]        # 0x140037d18
   140005eca:	mov    rdi,rax
   140005ecd:	test   rbx,rbx
   140005ed0:	je     0x140005eec
   140005ed2:	mov    rcx,QWORD PTR [rbx]
   140005ed5:	test   rcx,rcx
   140005ed8:	je     0x140005ee5
   140005eda:	call   0x140006444
   140005edf:	add    rbx,0x8
   140005ee3:	jne    0x140005ed2
   140005ee5:	mov    rbx,QWORD PTR [rip+0x31e2c]        # 0x140037d18
   140005eec:	mov    rcx,rbx
   140005eef:	call   0x140006444
   140005ef4:	mov    rbx,QWORD PTR [rip+0x31e15]        # 0x140037d10
   140005efb:	and    QWORD PTR [rip+0x31e15],0x0        # 0x140037d18
   140005f03:	test   rbx,rbx
   140005f06:	je     0x140005f22
   140005f08:	mov    rcx,QWORD PTR [rbx]
   140005f0b:	test   rcx,rcx
   140005f0e:	je     0x140005f1b
   140005f10:	call   0x140006444
   140005f15:	add    rbx,0x8
   140005f19:	jne    0x140005f08
   140005f1b:	mov    rbx,QWORD PTR [rip+0x31dee]        # 0x140037d10
   140005f22:	mov    rcx,rbx
   140005f25:	call   0x140006444
   140005f2a:	mov    rcx,QWORD PTR [rip+0x31dd7]        # 0x140037d08
   140005f31:	and    QWORD PTR [rip+0x31dd7],0x0        # 0x140037d10
   140005f39:	call   0x140006444
   140005f3e:	mov    rcx,QWORD PTR [rip+0x31dbb]        # 0x140037d00
   140005f45:	call   0x140006444
   140005f4a:	and    QWORD PTR [rip+0x31db6],0x0        # 0x140037d08
   140005f52:	and    QWORD PTR [rip+0x31da6],0x0        # 0x140037d00
   140005f5a:	or     rbx,0xffffffffffffffff
   140005f5e:	cmp    rdi,rbx
   140005f61:	je     0x140005f75
   140005f63:	cmp    QWORD PTR [rip+0x34215],0x0        # 0x14003a180
   140005f6b:	je     0x140005f75
   140005f6d:	mov    rcx,rdi
   140005f70:	call   0x140006444
   140005f75:	mov    rcx,rbx
   140005f78:	call   QWORD PTR [rip+0x210f2]        # 0x140027070
   140005f7e:	mov    rcx,QWORD PTR [rip+0x326d3]        # 0x140038658
   140005f85:	mov    QWORD PTR [rip+0x341f4],rax        # 0x14003a180
   140005f8c:	test   rcx,rcx
   140005f8f:	je     0x140005f9e
   140005f91:	call   0x140006444
   140005f96:	and    QWORD PTR [rip+0x326ba],0x0        # 0x140038658
   140005f9e:	mov    rcx,QWORD PTR [rip+0x326bb]        # 0x140038660
   140005fa5:	test   rcx,rcx
   140005fa8:	je     0x140005fb7
   140005faa:	call   0x140006444
   140005faf:	and    QWORD PTR [rip+0x326a9],0x0        # 0x140038660
   140005fb7:	mov    rax,QWORD PTR [rip+0x30a72]        # 0x140036a30
   140005fbe:	mov    ecx,ebx
   140005fc0:	lock xadd DWORD PTR [rax],ecx
   140005fc4:	add    ecx,ebx
   140005fc6:	jne    0x140005fe7
   140005fc8:	mov    rcx,QWORD PTR [rip+0x30a61]        # 0x140036a30
   140005fcf:	lea    rbx,[rip+0x3073a]        # 0x140036710
   140005fd6:	cmp    rcx,rbx
   140005fd9:	je     0x140005fe7
   140005fdb:	call   0x140006444
   140005fe0:	mov    QWORD PTR [rip+0x30a49],rbx        # 0x140036a30
   140005fe7:	mov    rbx,QWORD PTR [rsp+0x30]
   140005fec:	add    rsp,0x20
   140005ff0:	pop    rdi
   140005ff1:	ret    
   140005ff2:	int3   
   140005ff3:	int3   
   140005ff4:	rex push rbx
   140005ff6:	sub    rsp,0x20
   140005ffa:	mov    ebx,ecx
   140005ffc:	call   0x140009264
   140006001:	mov    ecx,ebx
   140006003:	call   0x1400092d8
   140006008:	xor    r8d,r8d
   14000600b:	mov    ecx,0xff
   140006010:	lea    edx,[r8+0x1]
   140006014:	call   0x14000625c
   140006019:	int3   
   14000601a:	int3   
   14000601b:	int3   
   14000601c:	mov    edx,0x1
   140006021:	xor    ecx,ecx
   140006023:	mov    r8d,edx
   140006026:	jmp    0x14000625c
   14000602b:	int3   
   14000602c:	xor    edx,edx
   14000602e:	xor    ecx,ecx
   140006030:	lea    r8d,[rdx+0x1]
   140006034:	jmp    0x14000625c
   140006039:	int3   
   14000603a:	int3   
   14000603b:	int3   
   14000603c:	rex push rbx
   14000603e:	sub    rsp,0x20
   140006042:	cmp    QWORD PTR [rip+0x2393e],0x0        # 0x140029988
   14000604a:	mov    ebx,ecx
   14000604c:	je     0x140006066
   14000604e:	lea    rcx,[rip+0x23933]        # 0x140029988
   140006055:	call   0x140009770
   14000605a:	test   eax,eax
   14000605c:	je     0x140006066
   14000605e:	mov    ecx,ebx
   140006060:	call   QWORD PTR [rip+0x23922]        # 0x140029988
   140006066:	call   0x1400097f0
   14000606b:	lea    rdx,[rip+0x212fe]        # 0x140027370
   140006072:	lea    rcx,[rip+0x212c7]        # 0x140027340
   140006079:	call   0x140006208
   14000607e:	test   eax,eax
   140006080:	jne    0x1400060cc
   140006082:	lea    rcx,[rip+0x269f]        # 0x140008728
   140006089:	call   0x1400056a0
   14000608e:	lea    rdx,[rip+0x212a3]        # 0x140027338
   140006095:	lea    rcx,[rip+0x21254]        # 0x1400272f0
   14000609c:	call   0x1400061a8
   1400060a1:	cmp    QWORD PTR [rip+0x340c7],0x0        # 0x14003a170
   1400060a9:	je     0x1400060ca
   1400060ab:	lea    rcx,[rip+0x340be]        # 0x14003a170
   1400060b2:	call   0x140009770
   1400060b7:	test   eax,eax
   1400060b9:	je     0x1400060ca
   1400060bb:	xor    r8d,r8d
   1400060be:	xor    ecx,ecx
   1400060c0:	lea    edx,[r8+0x2]
   1400060c4:	call   QWORD PTR [rip+0x340a6]        # 0x14003a170
   1400060ca:	xor    eax,eax
   1400060cc:	add    rsp,0x20
   1400060d0:	pop    rbx
   1400060d1:	ret    
   1400060d2:	int3   
   1400060d3:	int3   
   1400060d4:	xor    r8d,r8d
   1400060d7:	lea    edx,[r8+0x1]
   1400060db:	jmp    0x14000625c
   1400060e0:	xor    r8d,r8d
   1400060e3:	xor    edx,edx
   1400060e5:	xor    ecx,ecx
   1400060e7:	jmp    0x14000625c
   1400060ec:	sub    rsp,0x28
   1400060f0:	test   rcx,rcx
   1400060f3:	jne    0x14000610c
   1400060f5:	call   0x1400095b8
   1400060fa:	mov    DWORD PTR [rax],0x16
   140006100:	call   0x140008628
   140006105:	mov    eax,0x16
   14000610a:	jmp    0x14000611d
   14000610c:	mov    rax,QWORD PTR [rip+0x31c0d]        # 0x140037d20
   140006113:	test   rax,rax
   140006116:	je     0x1400060f5
   140006118:	mov    QWORD PTR [rcx],rax
   14000611b:	xor    eax,eax
   14000611d:	add    rsp,0x28
   140006121:	ret    
   140006122:	int3   
   140006123:	int3   
   140006124:	sub    rsp,0x28
   140006128:	test   rcx,rcx
   14000612b:	jne    0x140006144
   14000612d:	call   0x1400095b8
   140006132:	mov    DWORD PTR [rax],0x16
   140006138:	call   0x140008628
   14000613d:	mov    eax,0x16
   140006142:	jmp    0x140006155
   140006144:	mov    rax,QWORD PTR [rip+0x31bdd]        # 0x140037d28
   14000614b:	test   rax,rax
   14000614e:	je     0x14000612d
   140006150:	mov    QWORD PTR [rcx],rax
   140006153:	xor    eax,eax
   140006155:	add    rsp,0x28
   140006159:	ret    
   14000615a:	int3   
   14000615b:	int3   
   14000615c:	rex push rbx
   14000615e:	sub    rsp,0x20
   140006162:	xor    ecx,ecx
   140006164:	call   QWORD PTR [rip+0x20f06]        # 0x140027070
   14000616a:	mov    rcx,rax
   14000616d:	mov    rbx,rax
   140006170:	call   0x140007e90
   140006175:	mov    rcx,rbx
   140006178:	call   0x1400085b8
   14000617d:	mov    rcx,rbx
   140006180:	call   0x140007db8
   140006185:	mov    rcx,rbx
   140006188:	call   0x1400098e4
   14000618d:	mov    rcx,rbx
   140006190:	call   0x14000988c
   140006195:	mov    rcx,rbx
   140006198:	call   0x140009e94
   14000619d:	add    rsp,0x20
   1400061a1:	pop    rbx
   1400061a2:	jmp    0x140008d7c
   1400061a7:	int3   
   1400061a8:	mov    QWORD PTR [rsp+0x8],rbx
   1400061ad:	mov    QWORD PTR [rsp+0x10],rbp
   1400061b2:	mov    QWORD PTR [rsp+0x18],rsi
   1400061b7:	push   rdi
   1400061b8:	sub    rsp,0x20
   1400061bc:	xor    ebp,ebp
   1400061be:	mov    rbx,rdx
   1400061c1:	mov    rdi,rcx
   1400061c4:	sub    rbx,rcx
   1400061c7:	mov    esi,ebp
   1400061c9:	add    rbx,0x7
   1400061cd:	shr    rbx,0x3
   1400061d1:	cmp    rcx,rdx
   1400061d4:	cmova  rbx,rbp
   1400061d8:	test   rbx,rbx
   1400061db:	je     0x1400061f3
   1400061dd:	mov    rax,QWORD PTR [rdi]
   1400061e0:	test   rax,rax
   1400061e3:	je     0x1400061e7
   1400061e5:	call   rax
   1400061e7:	inc    rsi
   1400061ea:	add    rdi,0x8
   1400061ee:	cmp    rsi,rbx
   1400061f1:	jb     0x1400061dd
   1400061f3:	mov    rbx,QWORD PTR [rsp+0x30]
   1400061f8:	mov    rbp,QWORD PTR [rsp+0x38]
   1400061fd:	mov    rsi,QWORD PTR [rsp+0x40]
   140006202:	add    rsp,0x20
   140006206:	pop    rdi
   140006207:	ret    
   140006208:	mov    QWORD PTR [rsp+0x8],rbx
   14000620d:	push   rdi
   14000620e:	sub    rsp,0x20
   140006212:	xor    eax,eax
   140006214:	mov    rdi,rdx
   140006217:	mov    rbx,rcx
   14000621a:	cmp    rcx,rdx
   14000621d:	jae    0x140006236
   14000621f:	test   eax,eax
   140006221:	jne    0x140006236
   140006223:	mov    rcx,QWORD PTR [rbx]
   140006226:	test   rcx,rcx
   140006229:	je     0x14000622d
   14000622b:	call   rcx
   14000622d:	add    rbx,0x8
   140006231:	cmp    rbx,rdi
   140006234:	jb     0x14000621f
   140006236:	mov    rbx,QWORD PTR [rsp+0x30]
   14000623b:	add    rsp,0x20
   14000623f:	pop    rdi
   140006240:	ret    
   140006241:	int3   
   140006242:	int3   
   140006243:	int3   
   140006244:	mov    ecx,0x8
   140006249:	jmp    0x140008760
   14000624e:	int3   
   14000624f:	int3   
   140006250:	mov    ecx,0x8
   140006255:	jmp    0x14000897c
   14000625a:	int3   
   14000625b:	int3   
   14000625c:	mov    QWORD PTR [rsp+0x8],rbx
   140006261:	mov    QWORD PTR [rsp+0x10],rsi
   140006266:	mov    DWORD PTR [rsp+0x18],r8d
   14000626b:	push   rdi
   14000626c:	push   r12
   14000626e:	push   r13
   140006270:	push   r14
   140006272:	push   r15
   140006274:	sub    rsp,0x40
   140006278:	mov    r14d,r8d
   14000627b:	mov    ebx,edx
   14000627d:	mov    r13d,ecx
   140006280:	mov    ecx,0x8
   140006285:	call   0x140008760
   14000628a:	nop
   14000628b:	cmp    DWORD PTR [rip+0x31a66],0x1        # 0x140037cf8
   140006292:	je     0x14000639f
   140006298:	mov    DWORD PTR [rip+0x31a96],0x1        # 0x140037d38
   1400062a2:	mov    BYTE PTR [rip+0x31a8b],r14b        # 0x140037d34
   1400062a9:	test   ebx,ebx
   1400062ab:	jne    0x14000638b
   1400062b1:	mov    rcx,QWORD PTR [rip+0x33ec8]        # 0x14003a180
   1400062b8:	call   QWORD PTR [rip+0x20dba]        # 0x140027078
   1400062be:	mov    rsi,rax
   1400062c1:	mov    QWORD PTR [rsp+0x30],rax
   1400062c6:	test   rax,rax
   1400062c9:	je     0x140006378
   1400062cf:	mov    rcx,QWORD PTR [rip+0x33ea2]        # 0x14003a178
   1400062d6:	call   QWORD PTR [rip+0x20d9c]        # 0x140027078
   1400062dc:	mov    rdi,rax
   1400062df:	mov    QWORD PTR [rsp+0x20],rax
   1400062e4:	mov    r12,rsi
   1400062e7:	mov    QWORD PTR [rsp+0x28],rsi
   1400062ec:	mov    r15,rax
   1400062ef:	mov    QWORD PTR [rsp+0x38],rax
   1400062f4:	sub    rdi,0x8
   1400062f8:	mov    QWORD PTR [rsp+0x20],rdi
   1400062fd:	cmp    rdi,rsi
   140006300:	jb     0x140006378
   140006302:	xor    ecx,ecx
   140006304:	call   QWORD PTR [rip+0x20d66]        # 0x140027070
   14000630a:	cmp    QWORD PTR [rdi],rax
   14000630d:	jne    0x140006311
   14000630f:	jmp    0x1400062f4
   140006311:	cmp    rdi,rsi
   140006314:	jb     0x140006378
   140006316:	mov    rcx,QWORD PTR [rdi]
   140006319:	call   QWORD PTR [rip+0x20d59]        # 0x140027078
   14000631f:	mov    rbx,rax
   140006322:	xor    ecx,ecx
   140006324:	call   QWORD PTR [rip+0x20d46]        # 0x140027070
   14000632a:	mov    QWORD PTR [rdi],rax
   14000632d:	call   rbx
   14000632f:	mov    rcx,QWORD PTR [rip+0x33e4a]        # 0x14003a180
   140006336:	call   QWORD PTR [rip+0x20d3c]        # 0x140027078
   14000633c:	mov    rbx,rax
   14000633f:	mov    rcx,QWORD PTR [rip+0x33e32]        # 0x14003a178
   140006346:	call   QWORD PTR [rip+0x20d2c]        # 0x140027078
   14000634c:	cmp    r12,rbx
   14000634f:	jne    0x140006356
   140006351:	cmp    r15,rax
   140006354:	je     0x14000630f
   140006356:	mov    r12,rbx
   140006359:	mov    QWORD PTR [rsp+0x28],rbx
   14000635e:	mov    rsi,rbx
   140006361:	mov    QWORD PTR [rsp+0x30],rbx
   140006366:	mov    r15,rax
   140006369:	mov    QWORD PTR [rsp+0x38],rax
   14000636e:	mov    rdi,rax
   140006371:	mov    QWORD PTR [rsp+0x20],rax
   140006376:	jmp    0x14000630f
   140006378:	lea    rdx,[rip+0x21019]        # 0x140027398
   14000637f:	lea    rcx,[rip+0x20ff2]        # 0x140027378
   140006386:	call   0x1400061a8
   14000638b:	lea    rdx,[rip+0x21016]        # 0x1400273a8
   140006392:	lea    rcx,[rip+0x21007]        # 0x1400273a0
   140006399:	call   0x1400061a8
   14000639e:	nop
   14000639f:	test   r14d,r14d
   1400063a2:	je     0x1400063b3
   1400063a4:	mov    ecx,0x8
   1400063a9:	call   0x14000897c
   1400063ae:	test   r14d,r14d
   1400063b1:	jne    0x1400063d9
   1400063b3:	mov    DWORD PTR [rip+0x3193b],0x1        # 0x140037cf8
   1400063bd:	mov    ecx,0x8
   1400063c2:	call   0x14000897c
   1400063c7:	mov    ecx,r13d
   1400063ca:	call   0x140005e50
   1400063cf:	mov    ecx,r13d
   1400063d2:	call   QWORD PTR [rip+0x20cb0]        # 0x140027088
   1400063d8:	int3   
   1400063d9:	mov    rbx,QWORD PTR [rsp+0x70]
   1400063de:	mov    rsi,QWORD PTR [rsp+0x78]
   1400063e3:	add    rsp,0x40
   1400063e7:	pop    r15
   1400063e9:	pop    r14
   1400063eb:	pop    r13
   1400063ed:	pop    r12
   1400063ef:	pop    rdi
   1400063f0:	ret    
   1400063f1:	int3   
   1400063f2:	int3   
   1400063f3:	int3   
   1400063f4:	xor    r8d,r8d
   1400063f7:	xor    edx,edx
   1400063f9:	jmp    0x14000625c
   1400063fe:	int3   
   1400063ff:	int3   
   140006400:	rex push rbx
   140006402:	sub    rsp,0x20
   140006406:	and    DWORD PTR [rsp+0x40],0x0
   14000640b:	lea    r8,[rsp+0x40]
   140006410:	call   0x14000aae4
   140006415:	mov    rbx,rax
   140006418:	test   rax,rax
   14000641b:	jne    0x140006438
   14000641d:	cmp    DWORD PTR [rsp+0x40],eax
   140006421:	je     0x140006438
   140006423:	call   0x1400095b8
   140006428:	test   rax,rax
   14000642b:	je     0x140006438
   14000642d:	call   0x1400095b8
   140006432:	mov    ecx,DWORD PTR [rsp+0x40]
   140006436:	mov    DWORD PTR [rax],ecx
   140006438:	mov    rax,rbx
   14000643b:	add    rsp,0x20
   14000643f:	pop    rbx
   140006440:	ret    
   140006441:	int3   
   140006442:	int3   
   140006443:	int3   
   140006444:	test   rcx,rcx
   140006447:	je     0x140006480
   140006449:	push   rbx
   14000644a:	sub    rsp,0x20
   14000644e:	mov    r8,rcx
   140006451:	mov    rcx,QWORD PTR [rip+0x32210]        # 0x140038668
   140006458:	xor    edx,edx
   14000645a:	call   QWORD PTR [rip+0x20c58]        # 0x1400270b8
   140006460:	test   eax,eax
   140006462:	jne    0x14000647b
   140006464:	call   0x1400095b8
   140006469:	mov    rbx,rax
   14000646c:	call   QWORD PTR [rip+0x20c0e]        # 0x140027080
   140006472:	mov    ecx,eax
   140006474:	call   0x140009650
   140006479:	mov    DWORD PTR [rbx],eax
   14000647b:	add    rsp,0x20
   14000647f:	pop    rbx
   140006480:	ret    
   140006481:	int3   
   140006482:	int3   
   140006483:	int3   
   140006484:	rex push rbx
   140006486:	sub    rsp,0x20
   14000648a:	mov    rbx,rcx
   14000648d:	mov    rcx,QWORD PTR [rip+0x321d4]        # 0x140038668
   140006494:	test   rcx,rcx
   140006497:	jne    0x1400064b9
   140006499:	call   0x140009264
   14000649e:	mov    ecx,0x1e
   1400064a3:	call   0x1400092d8
   1400064a8:	mov    ecx,0xff
   1400064ad:	call   0x140005e94
   1400064b2:	mov    rcx,QWORD PTR [rip+0x321af]        # 0x140038668
   1400064b9:	test   rbx,rbx
   1400064bc:	mov    r8d,0x1
   1400064c2:	cmovne r8,rbx
   1400064c6:	xor    edx,edx
   1400064c8:	add    rsp,0x20
   1400064cc:	pop    rbx
   1400064cd:	rex.W jmp QWORD PTR [rip+0x20bec]        # 0x1400270c0
   1400064d4:	mov    QWORD PTR [rsp+0x8],rbx
   1400064d9:	mov    QWORD PTR [rsp+0x10],rsi
   1400064de:	push   rdi
   1400064df:	sub    rsp,0x20
   1400064e3:	mov    rbx,rcx
   1400064e6:	cmp    rcx,0xffffffffffffffe0
   1400064ea:	ja     0x140006568
   1400064ec:	mov    edi,0x1
   1400064f1:	test   rcx,rcx
   1400064f4:	cmovne rdi,rcx
   1400064f8:	mov    rcx,QWORD PTR [rip+0x32169]        # 0x140038668
   1400064ff:	test   rcx,rcx
   140006502:	jne    0x140006524
   140006504:	call   0x140009264
   140006509:	mov    ecx,0x1e
   14000650e:	call   0x1400092d8
   140006513:	mov    ecx,0xff
   140006518:	call   0x140005e94
   14000651d:	mov    rcx,QWORD PTR [rip+0x32144]        # 0x140038668
   140006524:	mov    r8,rdi
   140006527:	xor    edx,edx
   140006529:	call   QWORD PTR [rip+0x20b91]        # 0x1400270c0
   14000652f:	mov    rsi,rax
   140006532:	test   rax,rax
   140006535:	jne    0x140006563
   140006537:	cmp    DWORD PTR [rip+0x32133],eax        # 0x140038670
   14000653d:	je     0x14000654d
   14000653f:	mov    rcx,rbx
   140006542:	call   0x140007e5c
   140006547:	test   eax,eax
   140006549:	je     0x140006558
   14000654b:	jmp    0x1400064f8
   14000654d:	call   0x1400095b8
   140006552:	mov    DWORD PTR [rax],0xc
   140006558:	call   0x1400095b8
   14000655d:	mov    DWORD PTR [rax],0xc
   140006563:	mov    rax,rsi
   140006566:	jmp    0x14000657a
   140006568:	call   0x140007e5c
   14000656d:	call   0x1400095b8
   140006572:	mov    DWORD PTR [rax],0xc
   140006578:	xor    eax,eax
   14000657a:	mov    rbx,QWORD PTR [rsp+0x30]
   14000657f:	mov    rsi,QWORD PTR [rsp+0x38]
   140006584:	add    rsp,0x20
   140006588:	pop    rdi
   140006589:	ret    
   14000658a:	int3   
   14000658b:	int3   
   14000658c:	rex push rbx
   14000658e:	sub    rsp,0x50
   140006592:	movsd  QWORD PTR [rsp+0x68],xmm0
   140006598:	movabs rax,0x7fffffffffffffff
   1400065a2:	mov    rcx,QWORD PTR [rsp+0x68]
   1400065a7:	movsd  QWORD PTR [rsp+0x68],xmm1
   1400065ad:	mov    r8,QWORD PTR [rsp+0x68]
   1400065b2:	and    rcx,rax
   1400065b5:	and    r8,rax
   1400065b8:	mov    r9,rcx
   1400065bb:	mov    eax,0x7ff
   1400065c0:	mov    rdx,r8
   1400065c3:	shr    r9,0x34
   1400065c7:	shr    rdx,0x34
   1400065cb:	cmp    r9,rax
   1400065ce:	je     0x14000679c
   1400065d4:	cmp    rdx,rax
   1400065d7:	je     0x14000679c
   1400065dd:	mov    QWORD PTR [rsp+0x68],rcx
   1400065e2:	mov    eax,r9d
   1400065e5:	xor    r10d,r10d
   1400065e8:	movsd  xmm2,QWORD PTR [rsp+0x68]
   1400065ee:	mov    QWORD PTR [rsp+0x68],r8
   1400065f3:	sub    eax,edx
   1400065f5:	movsd  xmm3,QWORD PTR [rsp+0x68]
   1400065fb:	test   rcx,rcx
   1400065fe:	jne    0x140006608
   140006600:	movaps xmm0,xmm3
   140006603:	jmp    0x1400067e8
   140006608:	test   r8,r8
   14000660b:	jne    0x140006615
   14000660d:	movaps xmm0,xmm2
   140006610:	jmp    0x1400067e8
   140006615:	add    eax,0x36
   140006618:	cmp    eax,0x6c
   14000661b:	ja     0x140006793
   140006621:	mov    eax,0x5f3
   140006626:	cmp    r9,rax
   140006629:	ja     0x1400066cb
   14000662f:	cmp    rdx,rax
   140006632:	ja     0x1400066cb
   140006638:	mov    eax,0x20b
   14000663d:	cmp    r9,rax
   140006640:	jb     0x14000664b
   140006642:	cmp    rdx,rax
   140006645:	jae    0x1400066f9
   14000664b:	movsd  xmm0,QWORD PTR [rip+0x23225]        # 0x140029878
   140006653:	movabs rbx,0x2590000000000000
   14000665d:	mov    r10d,0xfffffda8
   140006663:	movabs r11,0x2580000000000000
   14000666d:	test   r9,r9
   140006670:	jne    0x140006692
   140006672:	lea    rax,[rcx+rbx*1]
   140006676:	mov    QWORD PTR [rsp+0x68],rax
   14000667b:	movsd  xmm2,QWORD PTR [rsp+0x68]
   140006681:	addsd  xmm2,xmm0
   140006685:	movsd  QWORD PTR [rsp+0x68],xmm2
   14000668b:	mov    rax,QWORD PTR [rsp+0x68]
   140006690:	jmp    0x1400066a0
   140006692:	add    rcx,r11
   140006695:	mov    QWORD PTR [rsp+0x68],rcx
   14000669a:	movsd  xmm2,QWORD PTR [rsp+0x68]
   1400066a0:	test   rdx,rdx
   1400066a3:	jne    0x1400066c5
   1400066a5:	lea    rax,[r8+rbx*1]
   1400066a9:	mov    QWORD PTR [rsp+0x68],rax
   1400066ae:	movsd  xmm3,QWORD PTR [rsp+0x68]
   1400066b4:	addsd  xmm3,xmm0
   1400066b8:	movsd  QWORD PTR [rsp+0x68],xmm3
   1400066be:	mov    rax,QWORD PTR [rsp+0x68]
   1400066c3:	jmp    0x1400066f9
   1400066c5:	lea    rax,[r8+r11*1]
   1400066c9:	jmp    0x1400066ee
   1400066cb:	movabs rdx,0xda80000000000000
   1400066d5:	mov    r10d,0x258
   1400066db:	lea    rax,[rcx+rdx*1]
   1400066df:	mov    QWORD PTR [rsp+0x68],rax
   1400066e4:	lea    rax,[r8+rdx*1]
   1400066e8:	movsd  xmm2,QWORD PTR [rsp+0x68]
   1400066ee:	mov    QWORD PTR [rsp+0x68],rax
   1400066f3:	movsd  xmm3,QWORD PTR [rsp+0x68]
   1400066f9:	movaps xmm1,xmm2
   1400066fc:	movaps xmm0,xmm3
   1400066ff:	movsxd rax,r10d
   140006702:	add    rax,0x3ff
   140006708:	shl    rax,0x34
   14000670c:	mulsd  xmm1,xmm2
   140006710:	mulsd  xmm0,xmm3
   140006714:	addsd  xmm1,xmm0
   140006718:	movsd  QWORD PTR [rsp+0x70],xmm1
   14000671e:	sqrtsd xmm1,QWORD PTR [rsp+0x70]
   140006724:	movsd  QWORD PTR [rsp+0x60],xmm1
   14000672a:	mov    QWORD PTR [rsp+0x68],rax
   14000672f:	movsd  xmm0,QWORD PTR [rsp+0x68]
   140006735:	movsd  xmm1,QWORD PTR [rsp+0x60]
   14000673b:	mulsd  xmm1,xmm0
   14000673f:	comisd xmm1,QWORD PTR [rip+0x23129]        # 0x140029870
   140006747:	jbe    0x14000678e
   140006749:	mov    DWORD PTR [rsp+0x40],0x2
   140006751:	movsd  QWORD PTR [rsp+0x38],xmm3
   140006757:	movsd  QWORD PTR [rsp+0x30],xmm2
   14000675d:	mov    edx,0x18
   140006762:	lea    rcx,[rip+0x230ff]        # 0x140029868
   140006769:	movabs r8,0x7ff0000000000000
   140006773:	lea    r9d,[rdx-0x15]
   140006777:	mov    DWORD PTR [rsp+0x28],0x22
   14000677f:	mov    DWORD PTR [rsp+0x20],0x11
   140006787:	call   0x14000ada8
   14000678c:	jmp    0x1400067e8
   14000678e:	movaps xmm0,xmm1
   140006791:	jmp    0x1400067e8
   140006793:	addsd  xmm2,xmm3
   140006797:	jmp    0x14000660d
   14000679c:	mulsd  xmm0,xmm0
   1400067a0:	mulsd  xmm1,xmm1
   1400067a4:	movabs r10,0xfffffffffffff
   1400067ae:	addsd  xmm0,xmm1
   1400067b2:	movsd  QWORD PTR [rsp+0x60],xmm0
   1400067b8:	cmp    r9,rax
   1400067bb:	jne    0x1400067c2
   1400067bd:	test   r10,rcx
   1400067c0:	je     0x1400067cc
   1400067c2:	cmp    rdx,rax
   1400067c5:	jne    0x1400067e8
   1400067c7:	test   r10,r8
   1400067ca:	jne    0x1400067e8
   1400067cc:	xor    ecx,ecx
   1400067ce:	call   0x14000ac50
   1400067d3:	movabs rax,0x7ff0000000000000
   1400067dd:	mov    QWORD PTR [rsp+0x68],rax
   1400067e2:	movsd  xmm0,QWORD PTR [rsp+0x68]
   1400067e8:	add    rsp,0x50
   1400067ec:	pop    rbx
   1400067ed:	ret    
   1400067ee:	int3   
   1400067ef:	int3   
   1400067f0:	sub    rsp,0x28
   1400067f4:	xor    eax,eax
   1400067f6:	test   cl,0x1
   1400067f9:	lea    edx,[rax+0x8]
   1400067fc:	cmovne eax,edx
   1400067ff:	test   cl,0x2
   140006802:	je     0x140006807
   140006804:	or     eax,0x10
   140006807:	test   cl,0x4
   14000680a:	je     0x14000680f
   14000680c:	or     eax,0x4
   14000680f:	test   dl,cl
   140006811:	je     0x140006816
   140006813:	or     eax,0x1
   140006816:	test   cl,0x10
   140006819:	je     0x14000681e
   14000681b:	or     eax,0x20
   14000681e:	mov    ecx,eax
   140006820:	call   0x14000ac50
   140006825:	movabs rax,0x7ff0000000000000
   14000682f:	mov    QWORD PTR [rsp+0x38],rax
   140006834:	movsd  xmm0,QWORD PTR [rsp+0x38]
   14000683a:	add    rsp,0x28
   14000683e:	ret    
   14000683f:	int3   
   140006840:	xor    eax,eax
   140006842:	test   cl,0x1
   140006845:	lea    edx,[rax+0x8]
   140006848:	cmovne eax,edx
   14000684b:	test   cl,0x2
   14000684e:	je     0x140006853
   140006850:	or     eax,0x10
   140006853:	test   cl,0x4
   140006856:	je     0x14000685b
   140006858:	or     eax,0x4
   14000685b:	test   dl,cl
   14000685d:	je     0x140006862
   14000685f:	or     eax,0x1
   140006862:	test   cl,0x10
   140006865:	je     0x14000686a
   140006867:	or     eax,0x20
   14000686a:	mov    ecx,eax
   14000686c:	jmp    0x14000ac50
   140006871:	int3   
   140006872:	int3   
   140006873:	int3   
   140006874:	movaps xmm1,xmm0
   140006877:	movsxd rax,edx
   14000687a:	add    rax,0x3ff
   140006880:	shl    rax,0x34
   140006884:	mov    QWORD PTR [rsp+0x8],rax
   140006889:	movsd  xmm0,QWORD PTR [rsp+0x8]
   14000688f:	mulsd  xmm0,xmm1
   140006893:	ret    
   140006894:	mov    QWORD PTR [rsp+0x10],rbx
   140006899:	mov    QWORD PTR [rsp+0x18],rdi
   14000689e:	push   rbp
   14000689f:	mov    rbp,rsp
   1400068a2:	sub    rsp,0x60
   1400068a6:	movaps xmm0,XMMWORD PTR [rip+0x22fd3]        # 0x140029880
   1400068ad:	movaps xmm1,XMMWORD PTR [rip+0x22fdc]        # 0x140029890
   1400068b4:	mov    rbx,rdx
   1400068b7:	mov    rdi,rcx
   1400068ba:	movaps XMMWORD PTR [rbp-0x40],xmm0
   1400068be:	movaps xmm0,XMMWORD PTR [rip+0x22fdb]        # 0x1400298a0
   1400068c5:	movaps XMMWORD PTR [rbp-0x30],xmm1
   1400068c9:	movaps xmm1,XMMWORD PTR [rip+0x22fe0]        # 0x1400298b0
   1400068d0:	movaps XMMWORD PTR [rbp-0x20],xmm0
   1400068d4:	movaps XMMWORD PTR [rbp-0x10],xmm1
   1400068d8:	test   rdx,rdx
   1400068db:	je     0x1400068f3
   1400068dd:	test   BYTE PTR [rdx],0x10
   1400068e0:	je     0x1400068f3
   1400068e2:	mov    rcx,QWORD PTR [rcx]
   1400068e5:	sub    rcx,0x8
   1400068e9:	mov    rax,QWORD PTR [rcx]
   1400068ec:	mov    rbx,QWORD PTR [rax+0x30]
   1400068f0:	call   QWORD PTR [rax+0x40]
   1400068f3:	lea    rdx,[rbp+0x10]
   1400068f7:	mov    rcx,rbx
   1400068fa:	mov    QWORD PTR [rbp-0x18],rdi
   1400068fe:	mov    QWORD PTR [rbp-0x10],rbx
   140006902:	call   QWORD PTR [rip+0x207c0]        # 0x1400270c8
   140006908:	mov    rdx,rax
   14000690b:	mov    QWORD PTR [rbp+0x10],rax
   14000690f:	mov    QWORD PTR [rbp-0x8],rax
   140006913:	test   rbx,rbx
   140006916:	je     0x140006933
   140006918:	test   BYTE PTR [rbx],0x8
   14000691b:	mov    ecx,0x1994000
   140006920:	je     0x140006927
   140006922:	mov    DWORD PTR [rbp-0x20],ecx
   140006925:	jmp    0x140006933
   140006927:	mov    eax,DWORD PTR [rbp-0x20]
   14000692a:	test   rdx,rdx
   14000692d:	cmove  eax,ecx
   140006930:	mov    DWORD PTR [rbp-0x20],eax
   140006933:	mov    r8d,DWORD PTR [rbp-0x28]
   140006937:	mov    edx,DWORD PTR [rbp-0x3c]
   14000693a:	mov    ecx,DWORD PTR [rbp-0x40]
   14000693d:	lea    r9,[rbp-0x20]
   140006941:	call   QWORD PTR [rip+0x20789]        # 0x1400270d0
   140006947:	lea    r11,[rsp+0x60]
   14000694c:	mov    rbx,QWORD PTR [r11+0x18]
   140006950:	mov    rdi,QWORD PTR [r11+0x20]
   140006954:	mov    rsp,r11
   140006957:	pop    rbp
   140006958:	ret    
   140006959:	int3   
   14000695a:	int3   
   14000695b:	int3   
   14000695c:	mov    QWORD PTR [rsp+0x8],rbx
   140006961:	mov    QWORD PTR [rsp+0x10],rsi
   140006966:	push   rdi
   140006967:	sub    rsp,0x20
   14000696b:	mov    ebx,DWORD PTR [rcx+0xc]
   14000696e:	mov    edi,edx
   140006970:	mov    rsi,rcx
   140006973:	test   ebx,ebx
   140006975:	je     0x1400069a3
   140006977:	dec    ebx
   140006979:	call   0x14000b18c
   14000697e:	lea    rcx,[rbx+rbx*4]
   140006982:	mov    rax,QWORD PTR [rax+0x128]
   140006989:	lea    rdx,[rax+rcx*4]
   14000698d:	movsxd rax,DWORD PTR [rsi+0x10]
   140006991:	add    rdx,rax
   140006994:	cmp    edi,DWORD PTR [rdx+0x4]
   140006997:	jle    0x140006973
   140006999:	cmp    edi,DWORD PTR [rdx+0x8]
   14000699c:	jg     0x140006973
   14000699e:	mov    rax,rdx
   1400069a1:	jmp    0x1400069a5
   1400069a3:	xor    eax,eax
   1400069a5:	mov    rbx,QWORD PTR [rsp+0x30]
   1400069aa:	mov    rsi,QWORD PTR [rsp+0x38]
   1400069af:	add    rsp,0x20
   1400069b3:	pop    rdi
   1400069b4:	ret    
   1400069b5:	int3   
   1400069b6:	int3   
   1400069b7:	int3   
   1400069b8:	mov    QWORD PTR [rsp+0x8],rbx
   1400069bd:	mov    QWORD PTR [rsp+0x10],rbp
   1400069c2:	mov    QWORD PTR [rsp+0x18],rsi
   1400069c7:	push   rdi
   1400069c8:	sub    rsp,0x20
   1400069cc:	mov    rsi,rdx
   1400069cf:	mov    rdx,rcx
   1400069d2:	mov    rcx,rsi
   1400069d5:	call   0x14000cf6c
   1400069da:	mov    edi,DWORD PTR [rsi+0xc]
   1400069dd:	xor    ebx,ebx
   1400069df:	mov    ebp,eax
   1400069e1:	jmp    0x140006a0a
   1400069e3:	dec    edi
   1400069e5:	call   0x14000b18c
   1400069ea:	lea    rdx,[rdi+rdi*4]
   1400069ee:	mov    rax,QWORD PTR [rax+0x128]
   1400069f5:	lea    rcx,[rax+rdx*4]
   1400069f9:	movsxd rax,DWORD PTR [rsi+0x10]
   1400069fd:	add    rcx,rax
   140006a00:	cmp    ebp,DWORD PTR [rcx+0x4]
   140006a03:	jle    0x140006a0a
   140006a05:	cmp    ebp,DWORD PTR [rcx+0x8]
   140006a08:	jle    0x140006a11
   140006a0a:	test   edi,edi
   140006a0c:	jne    0x1400069e3
   140006a0e:	mov    rcx,rbx
   140006a11:	mov    rbp,QWORD PTR [rsp+0x38]
   140006a16:	mov    rsi,QWORD PTR [rsp+0x40]
   140006a1b:	test   rcx,rcx
   140006a1e:	setne  bl
   140006a21:	mov    eax,ebx
   140006a23:	mov    rbx,QWORD PTR [rsp+0x30]
   140006a28:	add    rsp,0x20
   140006a2c:	pop    rdi
   140006a2d:	ret    
   140006a2e:	int3   
   140006a2f:	int3   
   140006a30:	mov    QWORD PTR [rsp+0x10],rbx
   140006a35:	mov    QWORD PTR [rsp+0x18],rbp
   140006a3a:	push   rsi
   140006a3b:	push   rdi
   140006a3c:	push   r12
   140006a3e:	push   r14
   140006a40:	push   r15
   140006a42:	sub    rsp,0x20
   140006a46:	mov    edi,DWORD PTR [r8+0xc]
   140006a4a:	mov    r12,rcx
   140006a4d:	mov    rcx,r8
   140006a50:	mov    rsi,r9
   140006a53:	mov    r14,r8
   140006a56:	mov    r15,rdx
   140006a59:	call   0x14000cf6c
   140006a5e:	mov    r10,QWORD PTR [r12]
   140006a62:	mov    QWORD PTR [rsi],r10
   140006a65:	mov    ebp,eax
   140006a67:	test   edi,edi
   140006a69:	je     0x140006adf
   140006a6b:	movsxd rax,DWORD PTR [r14+0x10]
   140006a6f:	dec    edi
   140006a71:	lea    rdx,[rdi+rdi*4]
   140006a75:	lea    rbx,[rax+rdx*4]
   140006a79:	add    rbx,QWORD PTR [r15+0x8]
   140006a7d:	cmp    ebp,DWORD PTR [rbx+0x4]
   140006a80:	jle    0x140006a67
   140006a82:	cmp    ebp,DWORD PTR [rbx+0x8]
   140006a85:	jg     0x140006a67
   140006a87:	mov    rcx,QWORD PTR [r15]
   140006a8a:	lea    rdx,[rsp+0x50]
   140006a8f:	xor    r8d,r8d
   140006a92:	call   QWORD PTR [rip+0x20640]        # 0x1400270d8
   140006a98:	movsxd r8,DWORD PTR [rbx+0x10]
   140006a9c:	mov    r9d,DWORD PTR [rbx+0xc]
   140006aa0:	add    r8,QWORD PTR [rsp+0x50]
   140006aa5:	mov    r10d,DWORD PTR [rax]
   140006aa8:	xor    ecx,ecx
   140006aaa:	test   r9d,r9d
   140006aad:	je     0x140006ac6
   140006aaf:	lea    rdx,[r8+0xc]
   140006ab3:	movsxd rax,DWORD PTR [rdx]
   140006ab6:	cmp    rax,r10
   140006ab9:	je     0x140006ac6
   140006abb:	inc    ecx
   140006abd:	add    rdx,0x14
   140006ac1:	cmp    ecx,r9d
   140006ac4:	jb     0x140006ab3
   140006ac6:	cmp    ecx,r9d
   140006ac9:	jae    0x140006a67
   140006acb:	mov    rax,QWORD PTR [r12]
   140006acf:	lea    rcx,[rcx+rcx*4]
   140006ad3:	movsxd rcx,DWORD PTR [r8+rcx*4+0x10]
   140006ad8:	mov    rcx,QWORD PTR [rcx+rax*1]
   140006adc:	mov    QWORD PTR [rsi],rcx
   140006adf:	mov    rbx,QWORD PTR [rsp+0x58]
   140006ae4:	mov    rbp,QWORD PTR [rsp+0x60]
   140006ae9:	mov    rax,rsi
   140006aec:	add    rsp,0x20
   140006af0:	pop    r15
   140006af2:	pop    r14
   140006af4:	pop    r12
   140006af6:	pop    rdi
   140006af7:	pop    rsi
   140006af8:	ret    
   140006af9:	int3   
   140006afa:	int3   
   140006afb:	int3   
   140006afc:	mov    rax,rsp
   140006aff:	mov    QWORD PTR [rax+0x8],rbx
   140006b03:	mov    QWORD PTR [rax+0x10],rbp
   140006b07:	mov    QWORD PTR [rax+0x18],rsi
   140006b0b:	mov    QWORD PTR [rax+0x20],rdi
   140006b0f:	push   r12
   140006b11:	push   r14
   140006b13:	push   r15
   140006b15:	sub    rsp,0x20
   140006b19:	mov    edi,DWORD PTR [rdx+0xc]
   140006b1c:	mov    rbp,QWORD PTR [rsp+0x70]
   140006b21:	mov    rbx,rdx
   140006b24:	mov    rcx,rbx
   140006b27:	mov    rdx,rbp
   140006b2a:	mov    r12d,r9d
   140006b2d:	xor    esi,esi
   140006b2f:	call   0x14000cf6c
   140006b34:	mov    r14d,eax
   140006b37:	test   edi,edi
   140006b39:	jne    0x140006b40
   140006b3b:	call   0x14000982c
   140006b40:	mov    r10,QWORD PTR [rsp+0x68]
   140006b45:	mov    r8,QWORD PTR [rsp+0x60]
   140006b4a:	mov    edx,edi
   140006b4c:	or     DWORD PTR [r10],0xffffffff
   140006b50:	or     DWORD PTR [r8],0xffffffff
   140006b54:	test   edi,edi
   140006b56:	je     0x140006b82
   140006b58:	mov    r11,QWORD PTR [rbp+0x8]
   140006b5c:	movsxd r15,DWORD PTR [rbx+0x10]
   140006b60:	lea    r9d,[rdx-0x1]
   140006b64:	lea    rcx,[r9+r9*4]
   140006b68:	lea    rax,[r11+rcx*4]
   140006b6c:	cmp    r14d,DWORD PTR [rax+r15*1+0x4]
   140006b71:	jle    0x140006b7a
   140006b73:	cmp    r14d,DWORD PTR [rax+r15*1+0x8]
   140006b78:	jle    0x140006b82
   140006b7a:	mov    edx,r9d
   140006b7d:	test   r9d,r9d
   140006b80:	jne    0x140006b60
   140006b82:	test   edx,edx
   140006b84:	je     0x140006b99
   140006b86:	lea    eax,[rdx-0x1]
   140006b89:	lea    rdx,[rax+rax*4]
   140006b8d:	movsxd rax,DWORD PTR [rbx+0x10]
   140006b91:	lea    rsi,[rax+rdx*4]
   140006b95:	add    rsi,QWORD PTR [rbp+0x8]
   140006b99:	xor    edx,edx
   140006b9b:	test   edi,edi
   140006b9d:	je     0x140006bff
   140006b9f:	xor    r9d,r9d
   140006ba2:	movsxd rcx,DWORD PTR [rbx+0x10]
   140006ba6:	add    rcx,r9
   140006ba9:	add    rcx,QWORD PTR [rbp+0x8]
   140006bad:	test   rsi,rsi
   140006bb0:	je     0x140006bc1
   140006bb2:	mov    eax,DWORD PTR [rsi+0x4]
   140006bb5:	cmp    DWORD PTR [rcx],eax
   140006bb7:	jle    0x140006bdb
   140006bb9:	mov    eax,DWORD PTR [rsi+0x8]
   140006bbc:	cmp    DWORD PTR [rcx+0x4],eax
   140006bbf:	jg     0x140006bdb
   140006bc1:	cmp    r12d,DWORD PTR [rcx]
   140006bc4:	jl     0x140006bdb
   140006bc6:	cmp    r12d,DWORD PTR [rcx+0x4]
   140006bca:	jg     0x140006bdb
   140006bcc:	cmp    DWORD PTR [r8],0xffffffff
   140006bd0:	jne    0x140006bd5
   140006bd2:	mov    DWORD PTR [r8],edx
   140006bd5:	lea    eax,[rdx+0x1]
   140006bd8:	mov    DWORD PTR [r10],eax
   140006bdb:	inc    edx
   140006bdd:	add    r9,0x14
   140006be1:	cmp    edx,edi
   140006be3:	jb     0x140006ba2
   140006be5:	mov    eax,DWORD PTR [r8]
   140006be8:	cmp    eax,0xffffffff
   140006beb:	je     0x140006bff
   140006bed:	lea    rcx,[rax+rax*4]
   140006bf1:	movsxd rax,DWORD PTR [rbx+0x10]
   140006bf5:	lea    rax,[rax+rcx*4]
   140006bf9:	add    rax,QWORD PTR [rbp+0x8]
   140006bfd:	jmp    0x140006c09
   140006bff:	and    DWORD PTR [r8],0x0
   140006c03:	and    DWORD PTR [r10],0x0
   140006c07:	xor    eax,eax
   140006c09:	mov    rbx,QWORD PTR [rsp+0x40]
   140006c0e:	mov    rbp,QWORD PTR [rsp+0x48]
   140006c13:	mov    rsi,QWORD PTR [rsp+0x50]
   140006c18:	mov    rdi,QWORD PTR [rsp+0x58]
   140006c1d:	add    rsp,0x20
   140006c21:	pop    r15
   140006c23:	pop    r14
   140006c25:	pop    r12
   140006c27:	ret    
   140006c28:	mov    QWORD PTR [rsp+0x8],rbx
   140006c2d:	mov    QWORD PTR [rsp+0x10],rbp
   140006c32:	push   rsi
   140006c33:	push   rdi
   140006c34:	push   r14
   140006c36:	sub    rsp,0x20
   140006c3a:	lea    r9,[rsp+0x50]
   140006c3f:	mov    rdi,r8
   140006c42:	mov    rbp,rdx
   140006c45:	call   0x140006a30
   140006c4a:	mov    rdx,rbp
   140006c4d:	mov    rcx,rdi
   140006c50:	mov    r14,rax
   140006c53:	call   0x14000cf6c
   140006c58:	mov    ebx,DWORD PTR [rdi+0xc]
   140006c5b:	mov    esi,eax
   140006c5d:	jmp    0x140006c86
   140006c5f:	dec    ebx
   140006c61:	call   0x14000b18c
   140006c66:	lea    rdx,[rbx+rbx*4]
   140006c6a:	mov    rax,QWORD PTR [rax+0x128]
   140006c71:	lea    rcx,[rax+rdx*4]
   140006c75:	movsxd rax,DWORD PTR [rdi+0x10]
   140006c79:	add    rcx,rax
   140006c7c:	cmp    esi,DWORD PTR [rcx+0x4]
   140006c7f:	jle    0x140006c86
   140006c81:	cmp    esi,DWORD PTR [rcx+0x8]
   140006c84:	jle    0x140006c8c
   140006c86:	test   ebx,ebx
   140006c88:	jne    0x140006c5f
   140006c8a:	xor    ecx,ecx
   140006c8c:	test   rcx,rcx
   140006c8f:	jne    0x140006c97
   140006c91:	or     r9d,0xffffffff
   140006c95:	jmp    0x140006c9b
   140006c97:	mov    r9d,DWORD PTR [rcx+0x4]
   140006c9b:	mov    r8,rdi
   140006c9e:	mov    rdx,rbp
   140006ca1:	mov    rcx,r14
   140006ca4:	call   0x14000c954
   140006ca9:	mov    rbx,QWORD PTR [rsp+0x40]
   140006cae:	mov    rbp,QWORD PTR [rsp+0x48]
   140006cb3:	add    rsp,0x20
   140006cb7:	pop    r14
   140006cb9:	pop    rdi
   140006cba:	pop    rsi
   140006cbb:	ret    
   140006cbc:	mov    QWORD PTR [rsp+0x8],rbx
   140006cc1:	mov    QWORD PTR [rsp+0x10],rbp
   140006cc6:	mov    QWORD PTR [rsp+0x18],rsi
   140006ccb:	push   rdi
   140006ccc:	sub    rsp,0x40
   140006cd0:	mov    rsi,r9
   140006cd3:	mov    rbp,r8
   140006cd6:	mov    rbx,rdx
   140006cd9:	mov    rdi,rcx
   140006cdc:	call   0x14000b18c
   140006ce1:	mov    QWORD PTR [rax+0x138],rbx
   140006ce8:	mov    rbx,QWORD PTR [rdi]
   140006ceb:	call   0x14000b18c
   140006cf0:	mov    rdx,QWORD PTR [rbx+0x38]
   140006cf4:	mov    rcx,QWORD PTR [rsp+0x78]
   140006cf9:	mov    r9,QWORD PTR [rsp+0x70]
   140006cfe:	mov    DWORD PTR [rsp+0x38],0x1
   140006d06:	mov    QWORD PTR [rax+0x130],rdx
   140006d0d:	xor    ebx,ebx
   140006d0f:	mov    QWORD PTR [rsp+0x30],rbx
   140006d14:	mov    DWORD PTR [rsp+0x28],ebx
   140006d18:	mov    QWORD PTR [rsp+0x20],rcx
   140006d1d:	mov    rcx,QWORD PTR [rdi]
   140006d20:	mov    r8,rsi
   140006d23:	mov    rdx,rbp
   140006d26:	call   0x14000cb7c
   140006d2b:	call   0x14000b18c
   140006d30:	mov    rcx,QWORD PTR [rsp+0x80]
   140006d38:	mov    rbp,QWORD PTR [rsp+0x58]
   140006d3d:	mov    rsi,QWORD PTR [rsp+0x60]
   140006d42:	mov    QWORD PTR [rax+0x138],rbx
   140006d49:	lea    eax,[rbx+0x1]
   140006d4c:	mov    rbx,QWORD PTR [rsp+0x50]
   140006d51:	mov    DWORD PTR [rcx],0x1
   140006d57:	add    rsp,0x40
   140006d5b:	pop    rdi
   140006d5c:	ret    
   140006d5d:	int3   
   140006d5e:	int3   
   140006d5f:	int3   
   140006d60:	mov    rax,rsp
   140006d63:	mov    QWORD PTR [rax+0x20],r9
   140006d67:	mov    QWORD PTR [rax+0x18],r8
   140006d6b:	mov    QWORD PTR [rax+0x10],rdx
   140006d6f:	mov    QWORD PTR [rax+0x8],rcx
   140006d73:	push   rbx
   140006d74:	sub    rsp,0x60
   140006d78:	mov    rbx,rcx
   140006d7b:	and    DWORD PTR [rax-0x28],0x0
   140006d7f:	mov    QWORD PTR [rax-0x20],rcx
   140006d83:	mov    QWORD PTR [rax-0x18],r8
   140006d87:	call   0x14000b18c
   140006d8c:	mov    r8,QWORD PTR [rax+0xe0]
   140006d93:	lea    rdx,[rsp+0x48]
   140006d98:	mov    ecx,DWORD PTR [rbx]
   140006d9a:	call   r8
   140006d9d:	mov    DWORD PTR [rsp+0x40],0x0
   140006da5:	jmp    0x140006da7
   140006da7:	mov    eax,DWORD PTR [rsp+0x40]
   140006dab:	add    rsp,0x60
   140006daf:	pop    rbx
   140006db0:	ret    
   140006db1:	int3   
   140006db2:	int3   
   140006db3:	int3   
   140006db4:	rex push rbx
   140006db6:	sub    rsp,0x20
   140006dba:	mov    rbx,rcx
   140006dbd:	mov    QWORD PTR [rcx],rdx
   140006dc0:	call   0x14000b18c
   140006dc5:	cmp    rbx,QWORD PTR [rax+0x120]
   140006dcc:	jae    0x140006ddc
   140006dce:	call   0x14000b18c
   140006dd3:	mov    rcx,QWORD PTR [rax+0x120]
   140006dda:	jmp    0x140006dde
   140006ddc:	xor    ecx,ecx
   140006dde:	mov    QWORD PTR [rbx+0x8],rcx
   140006de2:	call   0x14000b18c
   140006de7:	mov    QWORD PTR [rax+0x120],rbx
   140006dee:	mov    rax,rbx
   140006df1:	add    rsp,0x20
   140006df5:	pop    rbx
   140006df6:	ret    
   140006df7:	int3   
   140006df8:	mov    QWORD PTR [rsp+0x8],rbx
   140006dfd:	push   rdi
   140006dfe:	sub    rsp,0x20
   140006e02:	mov    rdi,rcx
   140006e05:	call   0x14000b18c
   140006e0a:	cmp    rdi,QWORD PTR [rax+0x120]
   140006e11:	je     0x140006e18
   140006e13:	call   0x14000982c
   140006e18:	call   0x14000b18c
   140006e1d:	mov    rbx,QWORD PTR [rax+0x120]
   140006e24:	jmp    0x140006e2f
   140006e26:	cmp    rdi,rbx
   140006e29:	je     0x140006e44
   140006e2b:	mov    rbx,QWORD PTR [rbx+0x8]
   140006e2f:	test   rbx,rbx
   140006e32:	jne    0x140006e26
   140006e34:	call   0x14000982c
   140006e39:	mov    rbx,QWORD PTR [rsp+0x30]
   140006e3e:	add    rsp,0x20
   140006e42:	pop    rdi
   140006e43:	ret    
   140006e44:	call   0x14000b18c
   140006e49:	mov    rcx,QWORD PTR [rbx+0x8]
   140006e4d:	mov    QWORD PTR [rax+0x120],rcx
   140006e54:	jmp    0x140006e39
   140006e56:	int3   
   140006e57:	int3   
   140006e58:	sub    rsp,0x28
   140006e5c:	call   0x14000b18c
   140006e61:	mov    rax,QWORD PTR [rax+0x128]
   140006e68:	add    rsp,0x28
   140006e6c:	ret    
   140006e6d:	int3   
   140006e6e:	int3   
   140006e6f:	int3   
   140006e70:	sub    rsp,0x28
   140006e74:	call   0x14000b18c
   140006e79:	mov    rax,QWORD PTR [rax+0x130]
   140006e80:	add    rsp,0x28
   140006e84:	ret    
   140006e85:	int3   
   140006e86:	int3   
   140006e87:	int3   
   140006e88:	rex push rbx
   140006e8a:	sub    rsp,0x20
   140006e8e:	mov    rbx,rcx
   140006e91:	call   0x14000b18c
   140006e96:	mov    rdx,QWORD PTR [rax+0x120]
   140006e9d:	jmp    0x140006ea8
   140006e9f:	cmp    QWORD PTR [rdx],rbx
   140006ea2:	je     0x140006eb6
   140006ea4:	mov    rdx,QWORD PTR [rdx+0x8]
   140006ea8:	test   rdx,rdx
   140006eab:	jne    0x140006e9f
   140006ead:	lea    eax,[rdx+0x1]
   140006eb0:	add    rsp,0x20
   140006eb4:	pop    rbx
   140006eb5:	ret    
   140006eb6:	xor    eax,eax
   140006eb8:	jmp    0x140006eb0
   140006eba:	int3   
   140006ebb:	int3   
   140006ebc:	mov    r8d,0x4d0
   140006ec2:	jmp    0x1400056d0
   140006ec7:	int3   
   140006ec8:	rex push rbx
   140006eca:	sub    rsp,0x20
   140006ece:	mov    rbx,rcx
   140006ed1:	call   0x14000b18c
   140006ed6:	mov    QWORD PTR [rax+0x128],rbx
   140006edd:	add    rsp,0x20
   140006ee1:	pop    rbx
   140006ee2:	ret    
   140006ee3:	int3   
   140006ee4:	rex push rbx
   140006ee6:	sub    rsp,0x20
   140006eea:	mov    rbx,rcx
   140006eed:	call   0x14000b18c
   140006ef2:	mov    QWORD PTR [rax+0x130],rbx
   140006ef9:	add    rsp,0x20
   140006efd:	pop    rbx
   140006efe:	ret    
   140006eff:	int3   
   140006f00:	rex push rbp
   140006f02:	lea    rbp,[rsp-0x4b0]
   140006f0a:	sub    rsp,0x5b0
   140006f11:	mov    rax,QWORD PTR [rip+0x2fb28]        # 0x140036a40
   140006f18:	xor    rax,rsp
   140006f1b:	mov    QWORD PTR [rbp+0x4a0],rax
   140006f22:	mov    r10,QWORD PTR [rbp+0x4f8]
   140006f29:	lea    rax,[rip+0x229b0]        # 0x1400298e0
   140006f30:	mov    r11,rcx
   140006f33:	lea    rcx,[rsp+0x30]
   140006f38:	movups xmm0,XMMWORD PTR [rax]
   140006f3b:	movups xmm1,XMMWORD PTR [rax+0x10]
   140006f3f:	movups XMMWORD PTR [rcx],xmm0
   140006f42:	movups xmm0,XMMWORD PTR [rax+0x20]
   140006f46:	movups XMMWORD PTR [rcx+0x10],xmm1
   140006f4a:	movups xmm1,XMMWORD PTR [rax+0x30]
   140006f4e:	movups XMMWORD PTR [rcx+0x20],xmm0
   140006f52:	movups xmm0,XMMWORD PTR [rax+0x40]
   140006f56:	movups XMMWORD PTR [rcx+0x30],xmm1
   140006f5a:	movups xmm1,XMMWORD PTR [rax+0x50]
   140006f5e:	movups XMMWORD PTR [rcx+0x40],xmm0
   140006f62:	movups xmm0,XMMWORD PTR [rax+0x60]
   140006f66:	movups XMMWORD PTR [rcx+0x50],xmm1
   140006f6a:	movups xmm1,XMMWORD PTR [rax+0x80]
   140006f71:	movups XMMWORD PTR [rcx+0x60],xmm0
   140006f75:	movups xmm0,XMMWORD PTR [rax+0x70]
   140006f79:	mov    rax,QWORD PTR [rax+0x90]
   140006f80:	movups XMMWORD PTR [rcx+0x70],xmm0
   140006f84:	movups XMMWORD PTR [rcx+0x80],xmm1
   140006f8b:	mov    QWORD PTR [rcx+0x90],rax
   140006f92:	mov    rcx,QWORD PTR [r11]
   140006f95:	lea    rax,[rip+0x52fc]        # 0x14000c298
   140006f9c:	mov    QWORD PTR [rsp+0x50],rax
   140006fa1:	mov    rax,QWORD PTR [rbp+0x4e0]
   140006fa8:	mov    QWORD PTR [rbp-0x80],rdx
   140006fac:	mov    rdx,QWORD PTR [r10]
   140006faf:	mov    QWORD PTR [rsp+0x60],rax
   140006fb4:	movsxd rax,DWORD PTR [rbp+0x4e8]
   140006fbb:	mov    QWORD PTR [rsp+0x68],rax
   140006fc0:	mov    rax,QWORD PTR [rbp+0x4f0]
   140006fc7:	mov    QWORD PTR [rsp+0x70],r8
   140006fcc:	mov    QWORD PTR [rsp+0x78],rax
   140006fd1:	movzx  eax,BYTE PTR [rbp+0x500]
   140006fd8:	mov    QWORD PTR [rsp+0x58],r9
   140006fdd:	mov    QWORD PTR [rbp-0x78],rax
   140006fe1:	mov    rax,QWORD PTR [r10+0x40]
   140006fe5:	lea    r8,[rsp+0x30]
   140006fea:	mov    QWORD PTR [rsp+0x28],rax
   140006fef:	lea    rax,[rbp-0x30]
   140006ff3:	xor    r9d,r9d
   140006ff6:	mov    QWORD PTR [rsp+0x20],rax
   140006ffb:	mov    QWORD PTR [rbp-0x70],0x19930520
   140007003:	call   QWORD PTR [rip+0x200d7]        # 0x1400270e0
   140007009:	mov    rcx,QWORD PTR [rbp+0x4a0]
   140007010:	xor    rcx,rsp
   140007013:	call   0x14000d0a0
   140007018:	add    rsp,0x5b0
   14000701f:	pop    rbp
   140007020:	ret    
   140007021:	int3   
   140007022:	int3   
   140007023:	int3   
   140007024:	mov    QWORD PTR [rsp+0x10],rbx
   140007029:	mov    QWORD PTR [rsp+0x18],rsi
   14000702e:	push   rdi
   14000702f:	sub    rsp,0x40
   140007033:	mov    rbx,r9
   140007036:	mov    rdi,r8
   140007039:	mov    rsi,rcx
   14000703c:	mov    QWORD PTR [rsp+0x50],rdx
   140007041:	call   0x14000b18c
   140007046:	mov    rdx,QWORD PTR [rbx+0x8]
   14000704a:	mov    QWORD PTR [rax+0x128],rdx
   140007051:	call   0x14000b18c
   140007056:	mov    rdx,QWORD PTR [rsi+0x38]
   14000705a:	mov    QWORD PTR [rax+0x130],rdx
   140007061:	call   0x14000b18c
   140007066:	mov    rdx,QWORD PTR [rbx+0x38]
   14000706a:	mov    r8d,DWORD PTR [rdx]
   14000706d:	lea    rdx,[rsp+0x50]
   140007072:	mov    r9,rbx
   140007075:	add    r8,QWORD PTR [rax+0x128]
   14000707c:	xor    eax,eax
   14000707e:	mov    rcx,rsi
   140007081:	mov    DWORD PTR [rsp+0x38],eax
   140007085:	mov    QWORD PTR [rsp+0x30],rax
   14000708a:	mov    DWORD PTR [rsp+0x28],eax
   14000708e:	mov    QWORD PTR [rsp+0x20],r8
   140007093:	mov    r8,rdi
   140007096:	call   0x14000cb7c
   14000709b:	mov    rbx,QWORD PTR [rsp+0x58]
   1400070a0:	mov    rsi,QWORD PTR [rsp+0x60]
   1400070a5:	add    rsp,0x40
   1400070a9:	pop    rdi
   1400070aa:	ret    
   1400070ab:	int3   
   1400070ac:	jmp    0x1400070b4
   1400070b1:	int3   
   1400070b2:	int3   
   1400070b3:	int3   
   1400070b4:	mov    QWORD PTR [rsp+0x10],rbx
   1400070b9:	mov    QWORD PTR [rsp+0x18],rsi
   1400070be:	push   rdi
   1400070bf:	sub    rsp,0x40
   1400070c3:	mov    rbx,r9
   1400070c6:	mov    rdi,r8
   1400070c9:	mov    rsi,rcx
   1400070cc:	mov    QWORD PTR [rsp+0x50],rdx
   1400070d1:	call   0x14000b18c
   1400070d6:	mov    rdx,QWORD PTR [rbx+0x8]
   1400070da:	mov    QWORD PTR [rax+0x128],rdx
   1400070e1:	call   0x14000b18c
   1400070e6:	mov    rdx,QWORD PTR [rsi+0x38]
   1400070ea:	mov    QWORD PTR [rax+0x130],rdx
   1400070f1:	call   0x14000b18c
   1400070f6:	mov    rdx,QWORD PTR [rbx+0x38]
   1400070fa:	mov    r8d,DWORD PTR [rdx]
   1400070fd:	lea    rdx,[rsp+0x50]
   140007102:	mov    r9,rbx
   140007105:	add    r8,QWORD PTR [rax+0x128]
   14000710c:	xor    eax,eax
   14000710e:	mov    rcx,rsi
   140007111:	mov    DWORD PTR [rsp+0x38],eax
   140007115:	mov    QWORD PTR [rsp+0x30],rax
   14000711a:	mov    DWORD PTR [rsp+0x28],eax
   14000711e:	mov    QWORD PTR [rsp+0x20],r8
   140007123:	mov    r8,rdi
   140007126:	call   0x14000cb7c
   14000712b:	mov    rbx,QWORD PTR [rsp+0x58]
   140007130:	mov    rsi,QWORD PTR [rsp+0x60]
   140007135:	add    rsp,0x40
   140007139:	pop    rdi
   14000713a:	ret    
   14000713b:	int3   
   14000713c:	int3   
   14000713d:	int3   
   14000713e:	int3   
   14000713f:	int3   
   140007140:	int3   
   140007141:	int3   
   140007142:	int3   
   140007143:	int3   
   140007144:	int3   
   140007145:	int3   
   140007146:	data16 nop WORD PTR [rax+rax*1+0x0]
   140007150:	mov    r11,rcx
   140007153:	movzx  edx,dl
   140007156:	cmp    r8,0x10
   14000715a:	jb     0x1400072bc
   140007160:	bt     DWORD PTR [rip+0x30c14],0x1        # 0x140037d7c
   140007168:	jae    0x140007178
   14000716a:	push   rdi
   14000716b:	mov    rdi,rcx
   14000716e:	mov    eax,edx
   140007170:	mov    rcx,r8
   140007173:	rep stos BYTE PTR es:[rdi],al
   140007175:	pop    rdi
   140007176:	jmp    0x1400071e5
   140007178:	movabs r9,0x101010101010101
   140007182:	imul   rdx,r9
   140007186:	bt     DWORD PTR [rip+0x30bee],0x2        # 0x140037d7c
   14000718e:	jb     0x140007230
   140007194:	cmp    r8,0x40
   140007198:	jb     0x1400071b8
   14000719a:	neg    rcx
   14000719d:	and    ecx,0x7
   1400071a0:	je     0x1400071a8
   1400071a2:	sub    r8,rcx
   1400071a5:	mov    QWORD PTR [r11],rdx
   1400071a8:	add    rcx,r11
   1400071ab:	mov    r9,r8
   1400071ae:	and    r8,0x3f
   1400071b2:	shr    r9,0x6
   1400071b6:	jne    0x1400071f7
   1400071b8:	mov    r9,r8
   1400071bb:	and    r8,0x7
   1400071bf:	shr    r9,0x3
   1400071c3:	je     0x1400071d6
   1400071c5:	data16 data16 xchg ax,ax
   1400071c9:	nop
   1400071ca:	mov    QWORD PTR [rcx],rdx
   1400071cd:	add    rcx,0x8
   1400071d1:	dec    r9
   1400071d4:	jne    0x1400071ca
   1400071d6:	test   r8,r8
   1400071d9:	je     0x1400071e5
   1400071db:	mov    BYTE PTR [rcx],dl
   1400071dd:	inc    rcx
   1400071e0:	dec    r8
   1400071e3:	jne    0x1400071db
   1400071e5:	mov    rax,r11
   1400071e8:	ret    
   1400071e9:	nop    DWORD PTR [rax+0x0]
   1400071f0:	data16 data16 xchg ax,ax
   1400071f4:	data16 xchg ax,ax
   1400071f7:	mov    QWORD PTR [rcx],rdx
   1400071fa:	mov    QWORD PTR [rcx+0x8],rdx
   1400071fe:	mov    QWORD PTR [rcx+0x10],rdx
   140007202:	add    rcx,0x40
   140007206:	mov    QWORD PTR [rcx-0x28],rdx
   14000720a:	mov    QWORD PTR [rcx-0x20],rdx
   14000720e:	dec    r9
   140007211:	mov    QWORD PTR [rcx-0x18],rdx
   140007215:	mov    QWORD PTR [rcx-0x10],rdx
   140007219:	mov    QWORD PTR [rcx-0x8],rdx
   14000721d:	jne    0x1400071f7
   14000721f:	jmp    0x1400071b8
   140007221:	data16 data16 data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140007230:	movq   xmm0,rdx
   140007235:	punpcklbw xmm0,xmm0
   140007239:	test   cl,0xf
   14000723c:	je     0x140007254
   14000723e:	movups XMMWORD PTR [rcx],xmm0
   140007241:	mov    rax,rcx
   140007244:	and    rax,0xf
   140007248:	add    rcx,0x10
   14000724c:	sub    rcx,rax
   14000724f:	lea    r8,[rax+r8*1-0x10]
   140007254:	mov    r9,r8
   140007257:	shr    r9,0x7
   14000725b:	je     0x14000728f
   14000725d:	jmp    0x140007260
   14000725f:	nop
   140007260:	movaps XMMWORD PTR [rcx],xmm0
   140007263:	movaps XMMWORD PTR [rcx+0x10],xmm0
   140007267:	add    rcx,0x80
   14000726e:	movaps XMMWORD PTR [rcx-0x60],xmm0
   140007272:	movaps XMMWORD PTR [rcx-0x50],xmm0
   140007276:	dec    r9
   140007279:	movaps XMMWORD PTR [rcx-0x40],xmm0
   14000727d:	movaps XMMWORD PTR [rcx-0x30],xmm0
   140007281:	movaps XMMWORD PTR [rcx-0x20],xmm0
   140007285:	movaps XMMWORD PTR [rcx-0x10],xmm0
   140007289:	jne    0x140007260
   14000728b:	and    r8,0x7f
   14000728f:	mov    r9,r8
   140007292:	shr    r9,0x4
   140007296:	je     0x1400072ac
   140007298:	nop    DWORD PTR [rax+rax*1+0x0]
   1400072a0:	movaps XMMWORD PTR [rcx],xmm0
   1400072a3:	add    rcx,0x10
   1400072a7:	dec    r9
   1400072aa:	jne    0x1400072a0
   1400072ac:	and    r8,0xf
   1400072b0:	je     0x1400072b8
   1400072b2:	movups XMMWORD PTR [r8+rcx*1-0x10],xmm0
   1400072b8:	mov    rax,r11
   1400072bb:	ret    
   1400072bc:	movabs r9,0x101010101010101
   1400072c6:	imul   rdx,r9
   1400072ca:	lea    r9,[rip+0xffffffffffff8d2f]        # 0x140000000
   1400072d1:	mov    eax,DWORD PTR [r9+r8*4+0x72e5]
   1400072d9:	add    r9,rax
   1400072dc:	add    rcx,r8
   1400072df:	mov    rax,r11
   1400072e2:	jmp    r9
   1400072e5:	ds jae 0x1400072e8
   1400072e8:	add    BYTE PTR [rbx],bh
   1400072ea:	jae    0x1400072ec
   1400072ec:	add    BYTE PTR [rbx+rsi*2+0x0],cl
   1400072f0:	add    BYTE PTR [rdi],dh
   1400072f2:	jae    0x1400072f4
   1400072f4:	add    BYTE PTR [rax+0x73],ah
   1400072f7:	add    BYTE PTR [rax],al
   1400072f9:	push   rbp
   1400072fa:	jae    0x1400072fc
   1400072fc:	add    BYTE PTR [rcx+0x73],cl
   1400072ff:	add    BYTE PTR [rax],al
   140007301:	xor    al,0x73
   140007303:	add    BYTE PTR [rax],al
   140007305:	jne    0x14000737a
   140007307:	add    BYTE PTR [rax],al
   140007309:	ins    DWORD PTR es:[rdi],dx
   14000730a:	jae    0x14000730c
   14000730c:	add    BYTE PTR [rbx+rsi*2+0x0],ah
   140007310:	add    BYTE PTR [rdi],bh
   140007312:	jae    0x140007314
   140007314:	add    BYTE PTR [rbx+rsi*2+0x0],bl
   140007318:	add    BYTE PTR [rcx+0x73],dl
   14000731b:	add    BYTE PTR [rax],al
   14000731d:	rex.RB jae 0x140007320
   140007320:	add    BYTE PTR [rax],dh
   140007322:	jae    0x140007324
   140007324:	add    BYTE PTR [rsi+0x66],ah
   140007327:	nop    WORD PTR [rax+rax*1+0x0]
   140007330:	mov    QWORD PTR [rcx-0xf],rdx
   140007334:	mov    DWORD PTR [rcx-0x7],edx
   140007337:	mov    WORD PTR [rcx-0x3],dx
   14000733b:	mov    BYTE PTR [rcx-0x1],dl
   14000733e:	ret    
   14000733f:	mov    QWORD PTR [rcx-0xb],rdx
   140007343:	jmp    0x140007337
   140007345:	mov    QWORD PTR [rcx-0xe],rdx
   140007349:	mov    DWORD PTR [rcx-0x6],edx
   14000734c:	mov    WORD PTR [rcx-0x2],dx
   140007350:	ret    
   140007351:	mov    QWORD PTR [rcx-0xd],rdx
   140007355:	mov    DWORD PTR [rcx-0x5],edx
   140007358:	mov    BYTE PTR [rcx-0x1],dl
   14000735b:	ret    
   14000735c:	mov    QWORD PTR [rcx-0xc],rdx
   140007360:	mov    DWORD PTR [rcx-0x4],edx
   140007363:	ret    
   140007364:	mov    QWORD PTR [rcx-0xa],rdx
   140007368:	mov    WORD PTR [rcx-0x2],dx
   14000736c:	ret    
   14000736d:	mov    QWORD PTR [rcx-0x9],rdx
   140007371:	mov    BYTE PTR [rcx-0x1],dl
   140007374:	ret    
   140007375:	mov    QWORD PTR [rcx-0x8],rdx
   140007379:	ret    
   14000737a:	int3   
   14000737b:	int3   
   14000737c:	lea    rax,[rip+0x225fd]        # 0x140029980
   140007383:	mov    QWORD PTR [rcx],rax
   140007386:	mov    rax,rcx
   140007389:	ret    
   14000738a:	int3   
   14000738b:	int3   
   14000738c:	lea    rax,[rip+0x225ed]        # 0x140029980
   140007393:	mov    QWORD PTR [rcx],rax
   140007396:	jmp    0x14000d3c8
   14000739b:	int3   
   14000739c:	mov    rax,rcx
   14000739f:	ret    
   1400073a0:	sub    rsp,0x28
   1400073a4:	mov    rax,rdx
   1400073a7:	lea    rdx,[rcx+0x11]
   1400073ab:	lea    rcx,[rax+0x11]
   1400073af:	call   0x14000d0d0
   1400073b4:	test   eax,eax
   1400073b6:	sete   al
   1400073b9:	add    rsp,0x28
   1400073bd:	ret    
   1400073be:	int3   
   1400073bf:	int3   
   1400073c0:	sub    rsp,0x28
   1400073c4:	mov    rax,rdx
   1400073c7:	lea    rdx,[rcx+0x11]
   1400073cb:	lea    rcx,[rax+0x11]
   1400073cf:	call   0x14000d0d0
   1400073d4:	test   eax,eax
   1400073d6:	setne  al
   1400073d9:	add    rsp,0x28
   1400073dd:	ret    
   1400073de:	int3   
   1400073df:	int3   
   1400073e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400073e5:	push   rdi
   1400073e6:	sub    rsp,0x20
   1400073ea:	lea    rax,[rip+0x2258f]        # 0x140029980
   1400073f1:	mov    ebx,edx
   1400073f3:	mov    rdi,rcx
   1400073f6:	mov    QWORD PTR [rcx],rax
   1400073f9:	call   0x14000d3c8
   1400073fe:	test   bl,0x1
   140007401:	je     0x14000740b
   140007403:	mov    rcx,rdi
   140007406:	call   0x140005454
   14000740b:	mov    rax,rdi
   14000740e:	mov    rbx,QWORD PTR [rsp+0x30]
   140007413:	add    rsp,0x20
   140007417:	pop    rdi
   140007418:	ret    
   140007419:	int3   
   14000741a:	int3   
   14000741b:	int3   
   14000741c:	jmp    0x14000d26c
   140007421:	int3   
   140007422:	int3   
   140007423:	int3   
   140007424:	jmp    0x14000d434
   140007429:	int3   
   14000742a:	int3   
   14000742b:	int3   
   14000742c:	sub    rsp,0x28
   140007430:	mov    rax,rdx
   140007433:	lea    rdx,[rcx+0x11]
   140007437:	lea    rcx,[rax+0x11]
   14000743b:	call   0x14000d0d0
   140007440:	test   eax,eax
   140007442:	setg   al
   140007445:	add    rsp,0x28
   140007449:	ret    
   14000744a:	int3   
   14000744b:	int3   
   14000744c:	jmp    0x14000d138
   140007451:	int3   
   140007452:	int3   
   140007453:	int3   
   140007454:	lea    rax,[rcx+0x10]
   140007458:	ret    
   140007459:	int3   
   14000745a:	int3   
   14000745b:	int3   
   14000745c:	jmp    0x140007474
   140007461:	int3   
   140007462:	int3   
   140007463:	int3   
   140007464:	mov    eax,DWORD PTR [rip+0x308e6]        # 0x140037d50
   14000746a:	mov    DWORD PTR [rip+0x308e0],ecx        # 0x140037d50
   140007470:	ret    
   140007471:	int3   
   140007472:	int3   
   140007473:	int3   
   140007474:	lea    rax,[rip+0x6bd1]        # 0x14000e04c
   14000747b:	lea    rcx,[rip+0x60ae]        # 0x14000d530
   140007482:	mov    QWORD PTR [rip+0x2f02f],rax        # 0x1400364b8
   140007489:	lea    rax,[rip+0x6c5c]        # 0x14000e0ec
   140007490:	mov    QWORD PTR [rip+0x2f019],rcx        # 0x1400364b0
   140007497:	mov    QWORD PTR [rip+0x2f022],rax        # 0x1400364c0
   14000749e:	lea    rax,[rip+0x6c8f]        # 0x14000e134
   1400074a5:	mov    QWORD PTR [rip+0x2f02c],rcx        # 0x1400364d8
   1400074ac:	mov    QWORD PTR [rip+0x2f015],rax        # 0x1400364c8
   1400074b3:	lea    rax,[rip+0x6d02]        # 0x14000e1bc
   1400074ba:	mov    QWORD PTR [rip+0x2f00f],rax        # 0x1400364d0
   1400074c1:	lea    rax,[rip+0x608c]        # 0x14000d554
   1400074c8:	mov    QWORD PTR [rip+0x2f011],rax        # 0x1400364e0
   1400074cf:	lea    rax,[rip+0x6c1e]        # 0x14000e0f4
   1400074d6:	mov    QWORD PTR [rip+0x2f00b],rax        # 0x1400364e8
   1400074dd:	lea    rax,[rip+0x6b70]        # 0x14000e054
   1400074e4:	mov    QWORD PTR [rip+0x2f005],rax        # 0x1400364f0
   1400074eb:	lea    rax,[rip+0x6c4a]        # 0x14000e13c
   1400074f2:	mov    QWORD PTR [rip+0x2efff],rax        # 0x1400364f8
   1400074f9:	ret    
   1400074fa:	int3   
   1400074fb:	int3   
   1400074fc:	sub    rsp,0x28
   140007500:	call   0x14000ec48
   140007505:	add    rsp,0x28
   140007509:	jmp    0x140007510
   14000750e:	int3   
   14000750f:	int3   
   140007510:	mov    QWORD PTR [rsp+0x10],rbx
   140007515:	mov    QWORD PTR [rsp+0x18],rsi
   14000751a:	push   rdi
   14000751b:	sub    rsp,0x30
   14000751f:	call   0x140008cb0
   140007524:	movzx  esi,ax
   140007527:	mov    ecx,0x2
   14000752c:	call   0x14000ec00
   140007531:	mov    eax,0x5a4d
   140007536:	lea    rdi,[rip+0xffffffffffff8ac3]        # 0x140000000
   14000753d:	cmp    WORD PTR [rip+0xffffffffffff8abc],ax        # 0x140000000
   140007544:	je     0x14000754a
   140007546:	xor    ebx,ebx
   140007548:	jmp    0x14000757b
   14000754a:	movsxd rax,DWORD PTR [rip+0xffffffffffff8aeb]        # 0x14000003c
   140007551:	add    rax,rdi
   140007554:	cmp    DWORD PTR [rax],0x4550
   14000755a:	jne    0x140007546
   14000755c:	mov    ecx,0x20b
   140007561:	cmp    WORD PTR [rax+0x18],cx
   140007565:	jne    0x140007546
   140007567:	xor    ebx,ebx
   140007569:	cmp    DWORD PTR [rax+0x84],0xe
   140007570:	jbe    0x14000757b
   140007572:	cmp    DWORD PTR [rax+0xf8],ebx
   140007578:	setne  bl
   14000757b:	mov    DWORD PTR [rsp+0x40],ebx
   14000757f:	call   0x14000ab88
   140007584:	test   eax,eax
   140007586:	jne    0x1400075aa
   140007588:	cmp    DWORD PTR [rip+0x31409],0x1        # 0x140038998
   14000758f:	jne    0x140007596
   140007591:	call   0x140009264
   140007596:	mov    ecx,0x1c
   14000759b:	call   0x1400092d8
   1400075a0:	mov    ecx,0xff
   1400075a5:	call   0x140005e94
   1400075aa:	call   0x14000b2f8
   1400075af:	test   eax,eax
   1400075b1:	jne    0x1400075d5
   1400075b3:	cmp    DWORD PTR [rip+0x313de],0x1        # 0x140038998
   1400075ba:	jne    0x1400075c1
   1400075bc:	call   0x140009264
   1400075c1:	mov    ecx,0x10
   1400075c6:	call   0x1400092d8
   1400075cb:	mov    ecx,0xff
   1400075d0:	call   0x140005e94
   1400075d5:	call   0x1400086f0
   1400075da:	nop
   1400075db:	call   0x14000e464
   1400075e0:	test   eax,eax
   1400075e2:	jns    0x1400075ee
   1400075e4:	mov    ecx,0x1b
   1400075e9:	call   0x1400076e8
   1400075ee:	call   QWORD PTR [rip+0x1faf4]        # 0x1400270e8
   1400075f4:	mov    QWORD PTR [rip+0x32b6d],rax        # 0x14003a168
   1400075fb:	call   0x14000ecf4
   140007600:	mov    QWORD PTR [rip+0x30751],rax        # 0x140037d58
   140007607:	call   0x14000e810
   14000760c:	test   eax,eax
   14000760e:	jns    0x14000761a
   140007610:	mov    ecx,0x8
   140007615:	call   0x140005ff4
   14000761a:	call   0x14000eacc
   14000761f:	test   eax,eax
   140007621:	jns    0x14000762d
   140007623:	mov    ecx,0x9
   140007628:	call   0x140005ff4
   14000762d:	mov    ecx,0x1
   140007632:	call   0x14000603c
   140007637:	test   eax,eax
   140007639:	je     0x140007642
   14000763b:	mov    ecx,eax
   14000763d:	call   0x140005ff4
   140007642:	call   0x14000ede8
   140007647:	movzx  r9d,si
   14000764b:	mov    r8,rax
   14000764e:	xor    edx,edx
   140007650:	mov    rcx,rdi
   140007653:	call   0x140004aa0
   140007658:	mov    edi,eax
   14000765a:	mov    DWORD PTR [rsp+0x20],eax
   14000765e:	test   ebx,ebx
   140007660:	jne    0x140007669
   140007662:	mov    ecx,eax
   140007664:	call   0x1400063f4
   140007669:	call   0x14000602c
   14000766e:	jmp    0x140007687
   140007670:	mov    edi,eax
   140007672:	cmp    DWORD PTR [rsp+0x40],0x0
   140007677:	jne    0x140007681
   140007679:	mov    ecx,eax
   14000767b:	call   0x1400060d4
   140007680:	int3   
   140007681:	call   0x14000601c
   140007686:	nop
   140007687:	mov    eax,edi
   140007689:	mov    rbx,QWORD PTR [rsp+0x48]
   14000768e:	mov    rsi,QWORD PTR [rsp+0x50]
   140007693:	add    rsp,0x30
   140007697:	pop    rdi
   140007698:	ret    
   140007699:	int3   
   14000769a:	int3   
   14000769b:	int3   
   14000769c:	mov    eax,0x5a4d
   1400076a1:	cmp    WORD PTR [rip+0xffffffffffff8958],ax        # 0x140000000
   1400076a8:	je     0x1400076ad
   1400076aa:	xor    eax,eax
   1400076ac:	ret    
   1400076ad:	movsxd rcx,DWORD PTR [rip+0xffffffffffff8988]        # 0x14000003c
   1400076b4:	lea    rax,[rip+0xffffffffffff8945]        # 0x140000000
   1400076bb:	add    rcx,rax
   1400076be:	cmp    DWORD PTR [rcx],0x4550
   1400076c4:	jne    0x1400076aa
   1400076c6:	mov    eax,0x20b
   1400076cb:	cmp    WORD PTR [rcx+0x18],ax
   1400076cf:	jne    0x1400076aa
   1400076d1:	xor    eax,eax
   1400076d3:	cmp    DWORD PTR [rcx+0x84],0xe
   1400076da:	jbe    0x1400076e5
   1400076dc:	cmp    DWORD PTR [rcx+0xf8],eax
   1400076e2:	setne  al
   1400076e5:	ret    
   1400076e6:	int3   
   1400076e7:	int3   
   1400076e8:	rex push rbx
   1400076ea:	sub    rsp,0x20
   1400076ee:	cmp    DWORD PTR [rip+0x312a3],0x1        # 0x140038998
   1400076f5:	mov    ebx,ecx
   1400076f7:	jne    0x1400076fe
   1400076f9:	call   0x140009264
   1400076fe:	mov    ecx,ebx
   140007700:	call   0x1400092d8
   140007705:	mov    ecx,0xff
   14000770a:	add    rsp,0x20
   14000770e:	pop    rbx
   14000770f:	jmp    0x140005e94
   140007714:	int3   
   140007715:	int3   
   140007716:	int3   
   140007717:	int3   
   140007718:	int3   
   140007719:	int3   
   14000771a:	int3   
   14000771b:	int3   
   14000771c:	int3   
   14000771d:	int3   
   14000771e:	int3   
   14000771f:	int3   
   140007720:	int3   
   140007721:	int3   
   140007722:	int3   
   140007723:	int3   
   140007724:	int3   
   140007725:	int3   
   140007726:	data16 nop WORD PTR [rax+rax*1+0x0]
   140007730:	mov    rax,rcx
   140007733:	neg    rcx
   140007736:	test   rax,0x7
   14000773c:	je     0x14000774d
   14000773e:	xchg   ax,ax
   140007740:	mov    dl,BYTE PTR [rax]
   140007742:	inc    rax
   140007745:	test   dl,dl
   140007747:	je     0x1400077a8
   140007749:	test   al,0x7
   14000774b:	jne    0x140007740
   14000774d:	movabs r8,0x7efefefefefefeff
   140007757:	movabs r11,0x8101010101010100
   140007761:	mov    rdx,QWORD PTR [rax]
   140007764:	mov    r9,r8
   140007767:	add    rax,0x8
   14000776b:	add    r9,rdx
   14000776e:	not    rdx
   140007771:	xor    rdx,r9
   140007774:	and    rdx,r11
   140007777:	je     0x140007761
   140007779:	mov    rdx,QWORD PTR [rax-0x8]
   14000777d:	test   dl,dl
   14000777f:	je     0x1400077d2
   140007781:	test   dh,dh
   140007783:	je     0x1400077cc
   140007785:	shr    rdx,0x10
   140007789:	test   dl,dl
   14000778b:	je     0x1400077c6
   14000778d:	test   dh,dh
   14000778f:	je     0x1400077c0
   140007791:	shr    rdx,0x10
   140007795:	test   dl,dl
   140007797:	je     0x1400077ba
   140007799:	test   dh,dh
   14000779b:	je     0x1400077b4
   14000779d:	shr    edx,0x10
   1400077a0:	test   dl,dl
   1400077a2:	je     0x1400077ae
   1400077a4:	test   dh,dh
   1400077a6:	jne    0x140007761
   1400077a8:	lea    rax,[rcx+rax*1-0x1]
   1400077ad:	ret    
   1400077ae:	lea    rax,[rcx+rax*1-0x2]
   1400077b3:	ret    
   1400077b4:	lea    rax,[rcx+rax*1-0x3]
   1400077b9:	ret    
   1400077ba:	lea    rax,[rcx+rax*1-0x4]
   1400077bf:	ret    
   1400077c0:	lea    rax,[rcx+rax*1-0x5]
   1400077c5:	ret    
   1400077c6:	lea    rax,[rcx+rax*1-0x6]
   1400077cb:	ret    
   1400077cc:	lea    rax,[rcx+rax*1-0x7]
   1400077d1:	ret    
   1400077d2:	lea    rax,[rcx+rax*1-0x8]
   1400077d7:	ret    
   1400077d8:	rex push rbx
   1400077da:	sub    rsp,0x20
   1400077de:	mov    rbx,rcx
   1400077e1:	call   0x14000790c
   1400077e6:	lea    rax,[rip+0x2220b]        # 0x1400299f8
   1400077ed:	mov    QWORD PTR [rbx],rax
   1400077f0:	mov    rax,rbx
   1400077f3:	add    rsp,0x20
   1400077f7:	pop    rbx
   1400077f8:	ret    
   1400077f9:	int3   
   1400077fa:	int3   
   1400077fb:	int3   
   1400077fc:	rex push rbx
   1400077fe:	sub    rsp,0x20
   140007802:	mov    rbx,rcx
   140007805:	call   0x140007894
   14000780a:	lea    rax,[rip+0x221e7]        # 0x1400299f8
   140007811:	mov    QWORD PTR [rbx],rax
   140007814:	mov    rax,rbx
   140007817:	add    rsp,0x20
   14000781b:	pop    rbx
   14000781c:	ret    
   14000781d:	int3   
   14000781e:	int3   
   14000781f:	int3   
   140007820:	rex push rbx
   140007822:	sub    rsp,0x20
   140007826:	mov    rbx,rcx
   140007829:	call   0x14000790c
   14000782e:	lea    rax,[rip+0x22193]        # 0x1400299c8
   140007835:	mov    QWORD PTR [rbx],rax
   140007838:	mov    rax,rbx
   14000783b:	add    rsp,0x20
   14000783f:	pop    rbx
   140007840:	ret    
   140007841:	int3   
   140007842:	int3   
   140007843:	int3   
   140007844:	mov    QWORD PTR [rsp+0x10],rdx
   140007849:	push   rbx
   14000784a:	sub    rsp,0x20
   14000784e:	lea    rdx,[rsp+0x38]
   140007853:	mov    rbx,rcx
   140007856:	call   0x1400078c0
   14000785b:	lea    rax,[rip+0x22166]        # 0x1400299c8
   140007862:	mov    QWORD PTR [rbx],rax
   140007865:	mov    rax,rbx
   140007868:	add    rsp,0x20
   14000786c:	pop    rbx
   14000786d:	ret    
   14000786e:	int3   
   14000786f:	int3   
   140007870:	rex push rbx
   140007872:	sub    rsp,0x20
   140007876:	mov    rbx,rcx
   140007879:	call   0x14000790c
   14000787e:	lea    rax,[rip+0x2215b]        # 0x1400299e0
   140007885:	mov    QWORD PTR [rbx],rax
   140007888:	mov    rax,rbx
   14000788b:	add    rsp,0x20
   14000788f:	pop    rbx
   140007890:	ret    
   140007891:	int3   
   140007892:	int3   
   140007893:	int3   
   140007894:	mov    QWORD PTR [rsp+0x10],rdx
   140007899:	push   rbx
   14000789a:	sub    rsp,0x20
   14000789e:	lea    rdx,[rsp+0x38]
   1400078a3:	mov    rbx,rcx
   1400078a6:	call   0x1400078c0
   1400078ab:	lea    rax,[rip+0x2212e]        # 0x1400299e0
   1400078b2:	mov    QWORD PTR [rbx],rax
   1400078b5:	mov    rax,rbx
   1400078b8:	add    rsp,0x20
   1400078bc:	pop    rbx
   1400078bd:	ret    
   1400078be:	int3   
   1400078bf:	int3   
   1400078c0:	rex push rbx
   1400078c2:	sub    rsp,0x20
   1400078c6:	and    QWORD PTR [rcx+0x8],0x0
   1400078cb:	lea    rax,[rip+0x220c6]        # 0x140029998
   1400078d2:	mov    BYTE PTR [rcx+0x10],0x0
   1400078d6:	mov    QWORD PTR [rcx],rax
   1400078d9:	mov    rdx,QWORD PTR [rdx]
   1400078dc:	mov    rbx,rcx
   1400078df:	call   0x140007ac4
   1400078e4:	mov    rax,rbx
   1400078e7:	add    rsp,0x20
   1400078eb:	pop    rbx
   1400078ec:	ret    
   1400078ed:	int3   
   1400078ee:	int3   
   1400078ef:	int3   
   1400078f0:	lea    rax,[rip+0x220a1]        # 0x140029998
   1400078f7:	mov    QWORD PTR [rcx],rax
   1400078fa:	mov    rax,QWORD PTR [rdx]
   1400078fd:	mov    BYTE PTR [rcx+0x10],0x0
   140007901:	mov    QWORD PTR [rcx+0x8],rax
   140007905:	mov    rax,rcx
   140007908:	ret    
   140007909:	int3   
   14000790a:	int3   
   14000790b:	int3   
   14000790c:	rex push rbx
   14000790e:	sub    rsp,0x20
   140007912:	and    QWORD PTR [rcx+0x8],0x0
   140007917:	lea    rax,[rip+0x2207a]        # 0x140029998
   14000791e:	mov    rbx,rcx
   140007921:	mov    QWORD PTR [rcx],rax
   140007924:	mov    BYTE PTR [rcx+0x10],0x0
   140007928:	call   0x140007990
   14000792d:	mov    rax,rbx
   140007930:	add    rsp,0x20
   140007934:	pop    rbx
   140007935:	ret    
   140007936:	int3   
   140007937:	int3   
   140007938:	and    QWORD PTR [rcx+0x8],0x0
   14000793d:	lea    rax,[rip+0x22054]        # 0x140029998
   140007944:	mov    BYTE PTR [rcx+0x10],0x0
   140007948:	mov    QWORD PTR [rcx],rax
   14000794b:	mov    rax,rcx
   14000794e:	ret    
   14000794f:	int3   
   140007950:	lea    rax,[rip+0x22041]        # 0x140029998
   140007957:	mov    QWORD PTR [rcx],rax
   14000795a:	jmp    0x140007b20
   14000795f:	int3   
   140007960:	lea    rax,[rip+0x22031]        # 0x140029998
   140007967:	mov    QWORD PTR [rcx],rax
   14000796a:	jmp    0x140007b20
   14000796f:	int3   
   140007970:	lea    rax,[rip+0x22021]        # 0x140029998
   140007977:	mov    QWORD PTR [rcx],rax
   14000797a:	jmp    0x140007b20
   14000797f:	int3   
   140007980:	lea    rax,[rip+0x22011]        # 0x140029998
   140007987:	mov    QWORD PTR [rcx],rax
   14000798a:	jmp    0x140007b20
   14000798f:	int3   
   140007990:	mov    QWORD PTR [rsp+0x8],rbx
   140007995:	push   rdi
   140007996:	sub    rsp,0x20
   14000799a:	mov    rdi,rdx
   14000799d:	mov    rbx,rcx
   1400079a0:	cmp    rcx,rdx
   1400079a3:	je     0x1400079c6
   1400079a5:	call   0x140007b20
   1400079aa:	cmp    BYTE PTR [rdi+0x10],0x0
   1400079ae:	je     0x1400079be
   1400079b0:	mov    rdx,QWORD PTR [rdi+0x8]
   1400079b4:	mov    rcx,rbx
   1400079b7:	call   0x140007ac4
   1400079bc:	jmp    0x1400079c6
   1400079be:	mov    rax,QWORD PTR [rdi+0x8]
   1400079c2:	mov    QWORD PTR [rbx+0x8],rax
   1400079c6:	mov    rax,rbx
   1400079c9:	mov    rbx,QWORD PTR [rsp+0x30]
   1400079ce:	add    rsp,0x20
   1400079d2:	pop    rdi
   1400079d3:	ret    
   1400079d4:	mov    QWORD PTR [rsp+0x8],rbx
   1400079d9:	push   rdi
   1400079da:	sub    rsp,0x20
   1400079de:	lea    rax,[rip+0x21fb3]        # 0x140029998
   1400079e5:	mov    ebx,edx
   1400079e7:	mov    rdi,rcx
   1400079ea:	mov    QWORD PTR [rcx],rax
   1400079ed:	call   0x140007b20
   1400079f2:	test   bl,0x1
   1400079f5:	je     0x1400079ff
   1400079f7:	mov    rcx,rdi
   1400079fa:	call   0x140005454
   1400079ff:	mov    rax,rdi
   140007a02:	mov    rbx,QWORD PTR [rsp+0x30]
   140007a07:	add    rsp,0x20
   140007a0b:	pop    rdi
   140007a0c:	ret    
   140007a0d:	int3   
   140007a0e:	int3   
   140007a0f:	int3   
   140007a10:	mov    QWORD PTR [rsp+0x8],rbx
   140007a15:	push   rdi
   140007a16:	sub    rsp,0x20
   140007a1a:	lea    rax,[rip+0x21f77]        # 0x140029998
   140007a21:	mov    ebx,edx
   140007a23:	mov    rdi,rcx
   140007a26:	mov    QWORD PTR [rcx],rax
   140007a29:	call   0x140007b20
   140007a2e:	test   bl,0x1
   140007a31:	je     0x140007a3b
   140007a33:	mov    rcx,rdi
   140007a36:	call   0x140005454
   140007a3b:	mov    rax,rdi
   140007a3e:	mov    rbx,QWORD PTR [rsp+0x30]
   140007a43:	add    rsp,0x20
   140007a47:	pop    rdi
   140007a48:	ret    
   140007a49:	int3   
   140007a4a:	int3   
   140007a4b:	int3   
   140007a4c:	mov    QWORD PTR [rsp+0x8],rbx
   140007a51:	push   rdi
   140007a52:	sub    rsp,0x20
   140007a56:	lea    rax,[rip+0x21f3b]        # 0x140029998
   140007a5d:	mov    ebx,edx
   140007a5f:	mov    rdi,rcx
   140007a62:	mov    QWORD PTR [rcx],rax
   140007a65:	call   0x140007b20
   140007a6a:	test   bl,0x1
   140007a6d:	je     0x140007a77
   140007a6f:	mov    rcx,rdi
   140007a72:	call   0x140005454
   140007a77:	mov    rax,rdi
   140007a7a:	mov    rbx,QWORD PTR [rsp+0x30]
   140007a7f:	add    rsp,0x20
   140007a83:	pop    rdi
   140007a84:	ret    
   140007a85:	int3   
   140007a86:	int3   
   140007a87:	int3   
   140007a88:	mov    QWORD PTR [rsp+0x8],rbx
   140007a8d:	push   rdi
   140007a8e:	sub    rsp,0x20
   140007a92:	lea    rax,[rip+0x21eff]        # 0x140029998
   140007a99:	mov    ebx,edx
   140007a9b:	mov    rdi,rcx
   140007a9e:	mov    QWORD PTR [rcx],rax
   140007aa1:	call   0x140007b20
   140007aa6:	test   bl,0x1
   140007aa9:	je     0x140007ab3
   140007aab:	mov    rcx,rdi
   140007aae:	call   0x140005454
   140007ab3:	mov    rax,rdi
   140007ab6:	mov    rbx,QWORD PTR [rsp+0x30]
   140007abb:	add    rsp,0x20
   140007abf:	pop    rdi
   140007ac0:	ret    
   140007ac1:	int3   
   140007ac2:	int3   
   140007ac3:	int3   
   140007ac4:	test   rdx,rdx
   140007ac7:	je     0x140007b1d
   140007ac9:	mov    QWORD PTR [rsp+0x8],rbx
   140007ace:	mov    QWORD PTR [rsp+0x10],rsi
   140007ad3:	push   rdi
   140007ad4:	sub    rsp,0x20
   140007ad8:	mov    rsi,rcx
   140007adb:	mov    rcx,rdx
   140007ade:	mov    rbx,rdx
   140007ae1:	call   0x140007730
   140007ae6:	mov    rdi,rax
   140007ae9:	lea    rcx,[rax+0x1]
   140007aed:	call   0x1400064d4
   140007af2:	mov    QWORD PTR [rsi+0x8],rax
   140007af6:	test   rax,rax
   140007af9:	je     0x140007b0e
   140007afb:	lea    rdx,[rdi+0x1]
   140007aff:	mov    r8,rbx
   140007b02:	mov    rcx,rax
   140007b05:	call   0x14000ee64
   140007b0a:	mov    BYTE PTR [rsi+0x10],0x1
   140007b0e:	mov    rbx,QWORD PTR [rsp+0x30]
   140007b13:	mov    rsi,QWORD PTR [rsp+0x38]
   140007b18:	add    rsp,0x20
   140007b1c:	pop    rdi
   140007b1d:	ret    
   140007b1e:	int3   
   140007b1f:	int3   
   140007b20:	rex push rbx
   140007b22:	sub    rsp,0x20
   140007b26:	cmp    BYTE PTR [rcx+0x10],0x0
   140007b2a:	mov    rbx,rcx
   140007b2d:	je     0x140007b38
   140007b2f:	mov    rcx,QWORD PTR [rcx+0x8]
   140007b33:	call   0x140006444
   140007b38:	and    QWORD PTR [rbx+0x8],0x0
   140007b3d:	mov    BYTE PTR [rbx+0x10],0x0
   140007b41:	add    rsp,0x20
   140007b45:	pop    rbx
   140007b46:	ret    
   140007b47:	int3   
   140007b48:	cmp    QWORD PTR [rcx+0x8],0x0
   140007b4d:	lea    rax,[rip+0x21e54]        # 0x1400299a8
   140007b54:	cmovne rax,QWORD PTR [rcx+0x8]
   140007b59:	ret    
   140007b5a:	int3   
   140007b5b:	int3   
   140007b5c:	mov    eax,DWORD PTR [rip+0x2e57e]        # 0x1400360e0
   140007b62:	mov    r8d,edx
   140007b65:	and    ecx,edx
   140007b67:	not    r8d
   140007b6a:	and    r8d,eax
   140007b6d:	or     r8d,ecx
   140007b70:	mov    DWORD PTR [rip+0x2e569],r8d        # 0x1400360e0
   140007b77:	ret    
   140007b78:	sub    rsp,0x28
   140007b7c:	call   0x1400098c0
   140007b81:	test   rax,rax
   140007b84:	je     0x140007b90
   140007b86:	mov    ecx,0x16
   140007b8b:	call   0x140009998
   140007b90:	test   BYTE PTR [rip+0x2e549],0x2        # 0x1400360e0
   140007b97:	je     0x140007bc2
   140007b99:	mov    ecx,0x17
   140007b9e:	call   0x140025f82
   140007ba3:	test   eax,eax
   140007ba5:	je     0x140007bae
   140007ba7:	mov    ecx,0x7
   140007bac:	int    0x29
   140007bae:	mov    r8d,0x1
   140007bb4:	mov    edx,0x40000015
   140007bb9:	lea    ecx,[r8+0x2]
   140007bbd:	call   0x1400084b4
   140007bc2:	mov    ecx,0x3
   140007bc7:	call   0x1400060d4
   140007bcc:	int3   
   140007bcd:	int3   
   140007bce:	int3   
   140007bcf:	int3   
   140007bd0:	rex push rbx
   140007bd2:	push   rbp
   140007bd3:	push   rsi
   140007bd4:	push   rdi
   140007bd5:	push   r12
   140007bd7:	push   r14
   140007bd9:	push   r15
   140007bdb:	sub    rsp,0xd0
   140007be2:	mov    rax,QWORD PTR [rip+0x2ee57]        # 0x140036a40
   140007be9:	xor    rax,rsp
   140007bec:	mov    QWORD PTR [rsp+0xc0],rax
   140007bf4:	mov    rbx,QWORD PTR [rsp+0x130]
   140007bfc:	mov    esi,r9d
   140007bff:	mov    rbp,r8
   140007c02:	mov    r12,rcx
   140007c05:	cmp    edx,0x1
   140007c08:	jne    0x140007d0c
   140007c0e:	lea    r9,[rsp+0x40]
   140007c13:	mov    r8d,esi
   140007c16:	mov    rdx,rbp
   140007c19:	lea    rdi,[rsp+0x40]
   140007c1e:	xor    r14d,r14d
   140007c21:	mov    DWORD PTR [rsp+0x20],0x80
   140007c29:	call   0x14000f110
   140007c2e:	mov    r15d,eax
   140007c31:	test   eax,eax
   140007c33:	jne    0x140007c94
   140007c35:	call   QWORD PTR [rip+0x1f445]        # 0x140027080
   140007c3b:	cmp    eax,0x7a
   140007c3e:	jne    0x140007cbc
   140007c40:	and    DWORD PTR [rsp+0x20],r14d
   140007c45:	xor    r9d,r9d
   140007c48:	mov    r8d,esi
   140007c4b:	mov    rdx,rbp
   140007c4e:	mov    rcx,r12
   140007c51:	call   0x14000f110
   140007c56:	movsxd r15,eax
   140007c59:	test   eax,eax
   140007c5b:	je     0x140007cbc
   140007c5d:	lea    edx,[r14+0x1]
   140007c61:	mov    rcx,r15
   140007c64:	call   0x140007ed4
   140007c69:	mov    rdi,rax
   140007c6c:	test   rax,rax
   140007c6f:	je     0x140007cbc
   140007c71:	mov    r9,rax
   140007c74:	mov    r8d,esi
   140007c77:	mov    rdx,rbp
   140007c7a:	mov    rcx,r12
   140007c7d:	mov    r14d,0x1
   140007c83:	mov    DWORD PTR [rsp+0x20],r15d
   140007c88:	call   0x14000f110
   140007c8d:	mov    r15d,eax
   140007c90:	test   eax,eax
   140007c92:	je     0x140007cb4
   140007c94:	movsxd rsi,r15d
   140007c97:	mov    edx,0x1
   140007c9c:	mov    rcx,rsi
   140007c9f:	call   0x140007ed4
   140007ca4:	mov    rcx,rax
   140007ca7:	mov    QWORD PTR [rbx],rax
   140007caa:	test   rax,rax
   140007cad:	jne    0x140007ce1
   140007caf:	test   r14d,r14d
   140007cb2:	je     0x140007cbc
   140007cb4:	mov    rcx,rdi
   140007cb7:	call   0x140006444
   140007cbc:	or     eax,0xffffffff
   140007cbf:	mov    rcx,QWORD PTR [rsp+0xc0]
   140007cc7:	xor    rcx,rsp
   140007cca:	call   0x14000d0a0
   140007ccf:	add    rsp,0xd0
   140007cd6:	pop    r15
   140007cd8:	pop    r14
   140007cda:	pop    r12
   140007cdc:	pop    rdi
   140007cdd:	pop    rsi
   140007cde:	pop    rbp
   140007cdf:	pop    rbx
   140007ce0:	ret    
   140007ce1:	lea    eax,[r15-0x1]
   140007ce5:	mov    r8,rdi
   140007ce8:	mov    rdx,rsi
   140007ceb:	movsxd r9,eax
   140007cee:	call   0x14000eec8
   140007cf3:	test   eax,eax
   140007cf5:	jne    0x140007d9f
   140007cfb:	test   r14d,r14d
   140007cfe:	je     0x140007d08
   140007d00:	mov    rcx,rdi
   140007d03:	call   0x140006444
   140007d08:	xor    eax,eax
   140007d0a:	jmp    0x140007cbf
   140007d0c:	mov    r14d,0x2
   140007d12:	cmp    edx,r14d
   140007d15:	jne    0x140007d6a
   140007d17:	and    QWORD PTR [rbx],0x0
   140007d1b:	xor    r9d,r9d
   140007d1e:	xor    r8d,r8d
   140007d21:	mov    edx,esi
   140007d23:	mov    rcx,rbp
   140007d26:	call   0x14000f4a8
   140007d2b:	movsxd rdi,eax
   140007d2e:	test   eax,eax
   140007d30:	je     0x140007d59
   140007d32:	mov    rcx,rdi
   140007d35:	mov    edx,r14d
   140007d38:	call   0x140007ed4
   140007d3d:	mov    QWORD PTR [rbx],rax
   140007d40:	test   rax,rax
   140007d43:	je     0x140007d59
   140007d45:	mov    r9d,edi
   140007d48:	mov    r8,rax
   140007d4b:	mov    edx,esi
   140007d4d:	mov    rcx,rbp
   140007d50:	call   0x14000f4a8
   140007d55:	test   eax,eax
   140007d57:	jne    0x140007d08
   140007d59:	mov    rcx,QWORD PTR [rbx]
   140007d5c:	call   0x140006444
   140007d61:	and    QWORD PTR [rbx],0x0
   140007d65:	jmp    0x140007cbc
   140007d6a:	test   edx,edx
   140007d6c:	jne    0x140007cbc
   140007d72:	and    DWORD PTR [rsp+0x30],edx
   140007d76:	bts    esi,0x1d
   140007d7a:	lea    r8,[rsp+0x30]
   140007d7f:	mov    edx,esi
   140007d81:	mov    r9d,r14d
   140007d84:	mov    rcx,rbp
   140007d87:	call   0x14000f4a8
   140007d8c:	test   eax,eax
   140007d8e:	je     0x140007cbc
   140007d94:	mov    al,BYTE PTR [rsp+0x30]
   140007d98:	mov    BYTE PTR [rbx],al
   140007d9a:	jmp    0x140007d08
   140007d9f:	and    QWORD PTR [rsp+0x20],0x0
   140007da5:	xor    r9d,r9d
   140007da8:	xor    r8d,r8d
   140007dab:	xor    edx,edx
   140007dad:	xor    ecx,ecx
   140007daf:	call   0x140008678
   140007db4:	int3   
   140007db5:	int3   
   140007db6:	int3   
   140007db7:	int3   
   140007db8:	mov    QWORD PTR [rip+0x2ffa9],rcx        # 0x140037d68
   140007dbf:	ret    
   140007dc0:	test   ecx,ecx
   140007dc2:	jne    0x140007dc5
   140007dc4:	ret    
   140007dc5:	push   rbx
   140007dc6:	sub    rsp,0x30
   140007dca:	mov    rax,QWORD PTR [rsp+0x68]
   140007dcf:	mov    r10,r9
   140007dd2:	mov    r9d,DWORD PTR [rsp+0x60]
   140007dd7:	mov    r11,r8
   140007dda:	mov    rbx,rdx
   140007ddd:	mov    r8,r10
   140007de0:	mov    rdx,r11
   140007de3:	mov    rcx,rbx
   140007de6:	mov    QWORD PTR [rsp+0x20],rax
   140007deb:	call   0x140008678
   140007df0:	int3   
   140007df1:	int3   
   140007df2:	int3   
   140007df3:	int3   
   140007df4:	mov    rcx,QWORD PTR [rip+0x2ff75]        # 0x140037d70
   140007dfb:	rex.W jmp QWORD PTR [rip+0x1f276]        # 0x140027078
   140007e02:	int3   
   140007e03:	int3   
   140007e04:	xor    ecx,ecx
   140007e06:	jmp    0x140007e0c
   140007e0b:	int3   
   140007e0c:	mov    QWORD PTR [rsp+0x8],rbx
   140007e11:	push   rdi
   140007e12:	sub    rsp,0x20
   140007e16:	mov    rdi,rcx
   140007e19:	mov    ecx,0x4
   140007e1e:	call   0x140008760
   140007e23:	mov    rcx,QWORD PTR [rip+0x2ff46]        # 0x140037d70
   140007e2a:	call   QWORD PTR [rip+0x1f248]        # 0x140027078
   140007e30:	mov    rcx,rdi
   140007e33:	mov    rbx,rax
   140007e36:	call   QWORD PTR [rip+0x1f234]        # 0x140027070
   140007e3c:	mov    ecx,0x4
   140007e41:	mov    QWORD PTR [rip+0x2ff28],rax        # 0x140037d70
   140007e48:	call   0x14000897c
   140007e4d:	mov    rax,rbx
   140007e50:	mov    rbx,QWORD PTR [rsp+0x30]
   140007e55:	add    rsp,0x20
   140007e59:	pop    rdi
   140007e5a:	ret    
   140007e5b:	int3   
   140007e5c:	rex push rbx
   140007e5e:	sub    rsp,0x20
   140007e62:	mov    rbx,rcx
   140007e65:	mov    rcx,QWORD PTR [rip+0x2ff04]        # 0x140037d70
   140007e6c:	call   QWORD PTR [rip+0x1f206]        # 0x140027078
   140007e72:	test   rax,rax
   140007e75:	je     0x140007e87
   140007e77:	mov    rcx,rbx
   140007e7a:	call   rax
   140007e7c:	test   eax,eax
   140007e7e:	je     0x140007e87
   140007e80:	mov    eax,0x1
   140007e85:	jmp    0x140007e89
   140007e87:	xor    eax,eax
   140007e89:	add    rsp,0x20
   140007e8d:	pop    rbx
   140007e8e:	ret    
   140007e8f:	int3   
   140007e90:	mov    QWORD PTR [rip+0x2fed9],rcx        # 0x140037d70
   140007e97:	ret    
   140007e98:	sub    rsp,0x28
   140007e9c:	test   rcx,rcx
   140007e9f:	jne    0x140007eba
   140007ea1:	call   0x1400095b8
   140007ea6:	mov    DWORD PTR [rax],0x16
   140007eac:	call   0x140008628
   140007eb1:	or     rax,0xffffffffffffffff
   140007eb5:	add    rsp,0x28
   140007eb9:	ret    
   140007eba:	mov    r8,rcx
   140007ebd:	mov    rcx,QWORD PTR [rip+0x307a4]        # 0x140038668
   140007ec4:	xor    edx,edx
   140007ec6:	add    rsp,0x28
   140007eca:	rex.W jmp QWORD PTR [rip+0x1f227]        # 0x1400270f8
   140007ed1:	int3   
   140007ed2:	int3   
   140007ed3:	int3   
   140007ed4:	mov    rax,rsp
   140007ed7:	mov    QWORD PTR [rax+0x8],rbx
   140007edb:	mov    QWORD PTR [rax+0x10],rbp
   140007edf:	mov    QWORD PTR [rax+0x18],rsi
   140007ee3:	mov    QWORD PTR [rax+0x20],rdi
   140007ee7:	push   r14
   140007ee9:	sub    rsp,0x20
   140007eed:	xor    ebx,ebx
   140007eef:	mov    rsi,rdx
   140007ef2:	mov    rbp,rcx
   140007ef5:	or     r14d,0xffffffff
   140007ef9:	xor    r8d,r8d
   140007efc:	mov    rdx,rsi
   140007eff:	mov    rcx,rbp
   140007f02:	call   0x14000aae4
   140007f07:	mov    rdi,rax
   140007f0a:	test   rax,rax
   140007f0d:	jne    0x140007f35
   140007f0f:	cmp    DWORD PTR [rip+0x2fe63],eax        # 0x140037d78
   140007f15:	jbe    0x140007f35
   140007f17:	mov    ecx,ebx
   140007f19:	call   0x140009200
   140007f1e:	lea    ecx,[rbx+0x3e8]
   140007f24:	cmp    ecx,DWORD PTR [rip+0x2fe4e]        # 0x140037d78
   140007f2a:	mov    ebx,ecx
   140007f2c:	cmova  ebx,r14d
   140007f30:	cmp    ebx,r14d
   140007f33:	jne    0x140007ef9
   140007f35:	mov    rbx,QWORD PTR [rsp+0x30]
   140007f3a:	mov    rbp,QWORD PTR [rsp+0x38]
   140007f3f:	mov    rsi,QWORD PTR [rsp+0x40]
   140007f44:	mov    rax,rdi
   140007f47:	mov    rdi,QWORD PTR [rsp+0x48]
   140007f4c:	add    rsp,0x20
   140007f50:	pop    r14
   140007f52:	ret    
   140007f53:	int3   
   140007f54:	mov    rax,rsp
   140007f57:	mov    QWORD PTR [rax+0x8],rbx
   140007f5b:	mov    QWORD PTR [rax+0x10],rbp
   140007f5f:	mov    QWORD PTR [rax+0x18],rsi
   140007f63:	mov    QWORD PTR [rax+0x20],rdi
   140007f67:	push   r14
   140007f69:	sub    rsp,0x20
   140007f6d:	mov    esi,DWORD PTR [rip+0x2fe05]        # 0x140037d78
   140007f73:	xor    ebx,ebx
   140007f75:	mov    rbp,rcx
   140007f78:	or     r14d,0xffffffff
   140007f7c:	mov    rcx,rbp
   140007f7f:	call   0x1400064d4
   140007f84:	mov    rdi,rax
   140007f87:	test   rax,rax
   140007f8a:	jne    0x140007fb0
   140007f8c:	test   esi,esi
   140007f8e:	je     0x140007fb0
   140007f90:	mov    ecx,ebx
   140007f92:	call   0x140009200
   140007f97:	mov    esi,DWORD PTR [rip+0x2fddb]        # 0x140037d78
   140007f9d:	lea    ecx,[rbx+0x3e8]
   140007fa3:	cmp    ecx,esi
   140007fa5:	mov    ebx,ecx
   140007fa7:	cmova  ebx,r14d
   140007fab:	cmp    ebx,r14d
   140007fae:	jne    0x140007f7c
   140007fb0:	mov    rbx,QWORD PTR [rsp+0x30]
   140007fb5:	mov    rbp,QWORD PTR [rsp+0x38]
   140007fba:	mov    rsi,QWORD PTR [rsp+0x40]
   140007fbf:	mov    rax,rdi
   140007fc2:	mov    rdi,QWORD PTR [rsp+0x48]
   140007fc7:	add    rsp,0x20
   140007fcb:	pop    r14
   140007fcd:	ret    
   140007fce:	int3   
   140007fcf:	int3   
   140007fd0:	mov    rax,rsp
   140007fd3:	mov    QWORD PTR [rax+0x8],rbx
   140007fd7:	mov    QWORD PTR [rax+0x10],rbp
   140007fdb:	mov    QWORD PTR [rax+0x18],rsi
   140007fdf:	mov    QWORD PTR [rax+0x20],rdi
   140007fe3:	push   r14
   140007fe5:	sub    rsp,0x20
   140007fe9:	xor    ebx,ebx
   140007feb:	mov    rsi,rdx
   140007fee:	mov    rbp,rcx
   140007ff1:	or     r14d,0xffffffff
   140007ff5:	mov    rdx,rsi
   140007ff8:	mov    rcx,rbp
   140007ffb:	call   0x14000f6d0
   140008000:	mov    rdi,rax
   140008003:	test   rax,rax
   140008006:	jne    0x140008033
   140008008:	test   rsi,rsi
   14000800b:	je     0x140008033
   14000800d:	cmp    DWORD PTR [rip+0x2fd65],eax        # 0x140037d78
   140008013:	jbe    0x140008033
   140008015:	mov    ecx,ebx
   140008017:	call   0x140009200
   14000801c:	lea    ecx,[rbx+0x3e8]
   140008022:	cmp    ecx,DWORD PTR [rip+0x2fd50]        # 0x140037d78
   140008028:	mov    ebx,ecx
   14000802a:	cmova  ebx,r14d
   14000802e:	cmp    ebx,r14d
   140008031:	jne    0x140007ff5
   140008033:	mov    rbx,QWORD PTR [rsp+0x30]
   140008038:	mov    rbp,QWORD PTR [rsp+0x38]
   14000803d:	mov    rsi,QWORD PTR [rsp+0x40]
   140008042:	mov    rax,rdi
   140008045:	mov    rdi,QWORD PTR [rsp+0x48]
   14000804a:	add    rsp,0x20
   14000804e:	pop    r14
   140008050:	ret    
   140008051:	int3   
   140008052:	int3   
   140008053:	int3   
   140008054:	mov    QWORD PTR [rsp+0x8],rbx
   140008059:	mov    QWORD PTR [rsp+0x10],rbp
   14000805e:	mov    QWORD PTR [rsp+0x18],rsi
   140008063:	push   rdi
   140008064:	push   r14
   140008066:	push   r15
   140008068:	sub    rsp,0x20
   14000806c:	xor    ebx,ebx
   14000806e:	mov    rsi,r8
   140008071:	mov    rbp,rdx
   140008074:	or     r15d,0xffffffff
   140008078:	mov    r14,rcx
   14000807b:	mov    r8,rsi
   14000807e:	mov    rdx,rbp
   140008081:	mov    rcx,r14
   140008084:	call   0x14000f7a4
   140008089:	mov    rdi,rax
   14000808c:	test   rax,rax
   14000808f:	jne    0x1400080bc
   140008091:	test   rsi,rsi
   140008094:	je     0x1400080bc
   140008096:	cmp    DWORD PTR [rip+0x2fcdc],eax        # 0x140037d78
   14000809c:	jbe    0x1400080bc
   14000809e:	mov    ecx,ebx
   1400080a0:	call   0x140009200
   1400080a5:	lea    ecx,[rbx+0x3e8]
   1400080ab:	cmp    ecx,DWORD PTR [rip+0x2fcc7]        # 0x140037d78
   1400080b1:	mov    ebx,ecx
   1400080b3:	cmova  ebx,r15d
   1400080b7:	cmp    ebx,r15d
   1400080ba:	jne    0x14000807b
   1400080bc:	mov    rbx,QWORD PTR [rsp+0x40]
   1400080c1:	mov    rbp,QWORD PTR [rsp+0x48]
   1400080c6:	mov    rsi,QWORD PTR [rsp+0x50]
   1400080cb:	mov    rax,rdi
   1400080ce:	add    rsp,0x20
   1400080d2:	pop    r15
   1400080d4:	pop    r14
   1400080d6:	pop    rdi
   1400080d7:	ret    
   1400080d8:	mov    eax,DWORD PTR [rip+0x2fc9a]        # 0x140037d78
   1400080de:	mov    DWORD PTR [rip+0x2fc94],ecx        # 0x140037d78
   1400080e4:	ret    
   1400080e5:	int3   
   1400080e6:	int3   
   1400080e7:	int3   
   1400080e8:	rex push rbx
   1400080ea:	sub    rsp,0x20
   1400080ee:	mov    ebx,ecx
   1400080f0:	call   0x140009200
   1400080f5:	or     eax,0xffffffff
   1400080f8:	add    ebx,0x3e8
   1400080fe:	cmp    ebx,DWORD PTR [rip+0x2fc74]        # 0x140037d78
   140008104:	cmova  ebx,eax
   140008107:	mov    eax,ebx
   140008109:	add    rsp,0x20
   14000810d:	pop    rbx
   14000810e:	ret    
   14000810f:	int3   
   140008110:	mov    rax,rsp
   140008113:	mov    QWORD PTR [rax+0x8],rbx
   140008117:	mov    QWORD PTR [rax+0x10],rbp
   14000811b:	mov    QWORD PTR [rax+0x18],rsi
   14000811f:	push   rdi
   140008120:	push   r12
   140008122:	push   r13
   140008124:	push   r14
   140008126:	push   r15
   140008128:	sub    rsp,0x40
   14000812c:	mov    r12,QWORD PTR [r9+0x8]
   140008130:	mov    r15,QWORD PTR [r9]
   140008133:	mov    rbx,QWORD PTR [r9+0x38]
   140008137:	sub    r15,r12
   14000813a:	test   BYTE PTR [rcx+0x4],0x66
   14000813e:	mov    r14,r9
   140008141:	mov    r13,rdx
   140008144:	mov    rbp,rcx
   140008147:	jne    0x14000822b
   14000814d:	mov    esi,DWORD PTR [r9+0x48]
   140008151:	mov    QWORD PTR [rax-0x38],rcx
   140008155:	mov    QWORD PTR [rax-0x30],r8
   140008159:	cmp    esi,DWORD PTR [rbx]
   14000815b:	jae    0x1400082ce
   140008161:	mov    edi,esi
   140008163:	add    rdi,rdi
   140008166:	mov    eax,DWORD PTR [rbx+rdi*8+0x4]
   14000816a:	cmp    r15,rax
   14000816d:	jb     0x14000821d
   140008173:	mov    eax,DWORD PTR [rbx+rdi*8+0x8]
   140008177:	cmp    r15,rax
   14000817a:	jae    0x14000821d
   140008180:	cmp    DWORD PTR [rbx+rdi*8+0x10],0x0
   140008185:	je     0x14000821d
   14000818b:	cmp    DWORD PTR [rbx+rdi*8+0xc],0x1
   140008190:	je     0x1400081a9
   140008192:	mov    eax,DWORD PTR [rbx+rdi*8+0xc]
   140008196:	lea    rcx,[rsp+0x30]
   14000819b:	mov    rdx,r13
   14000819e:	add    rax,r12
   1400081a1:	call   rax
   1400081a3:	test   eax,eax
   1400081a5:	js     0x140008224
   1400081a7:	jle    0x14000821d
   1400081a9:	cmp    DWORD PTR [rbp+0x0],0xe06d7363
   1400081b0:	jne    0x1400081da
   1400081b2:	cmp    QWORD PTR [rip+0x2277e],0x0        # 0x14002a938
   1400081ba:	je     0x1400081da
   1400081bc:	lea    rcx,[rip+0x22775]        # 0x14002a938
   1400081c3:	call   0x140009770
   1400081c8:	test   eax,eax
   1400081ca:	je     0x1400081da
   1400081cc:	mov    edx,0x1
   1400081d1:	mov    rcx,rbp
   1400081d4:	call   QWORD PTR [rip+0x2275e]        # 0x14002a938
   1400081da:	mov    ecx,DWORD PTR [rbx+rdi*8+0x10]
   1400081de:	mov    r8d,0x1
   1400081e4:	mov    rdx,r13
   1400081e7:	add    rcx,r12
   1400081ea:	call   0x14000f870
   1400081ef:	mov    rax,QWORD PTR [r14+0x40]
   1400081f3:	mov    edx,DWORD PTR [rbx+rdi*8+0x10]
   1400081f7:	mov    r9d,DWORD PTR [rbp+0x0]
   1400081fb:	mov    QWORD PTR [rsp+0x28],rax
   140008200:	mov    rax,QWORD PTR [r14+0x28]
   140008204:	add    rdx,r12
   140008207:	mov    r8,rbp
   14000820a:	mov    rcx,r13
   14000820d:	mov    QWORD PTR [rsp+0x20],rax
   140008212:	call   QWORD PTR [rip+0x1eec8]        # 0x1400270e0
   140008218:	call   0x14000f8a0
   14000821d:	inc    esi
   14000821f:	jmp    0x140008159
   140008224:	xor    eax,eax
   140008226:	jmp    0x1400082d3
   14000822b:	mov    rsi,QWORD PTR [r9+0x20]
   14000822f:	mov    edi,DWORD PTR [r9+0x48]
   140008233:	sub    rsi,r12
   140008236:	jmp    0x1400082c4
   14000823b:	mov    ecx,edi
   14000823d:	add    rcx,rcx
   140008240:	mov    eax,DWORD PTR [rbx+rcx*8+0x4]
   140008244:	cmp    r15,rax
   140008247:	jb     0x1400082c2
   140008249:	mov    eax,DWORD PTR [rbx+rcx*8+0x8]
   14000824d:	cmp    r15,rax
   140008250:	jae    0x1400082c2
   140008252:	test   BYTE PTR [rbp+0x4],0x20
   140008256:	je     0x14000829c
   140008258:	xor    r9d,r9d
   14000825b:	test   edx,edx
   14000825d:	je     0x140008297
   14000825f:	mov    r8d,r9d
   140008262:	add    r8,r8
   140008265:	mov    eax,DWORD PTR [rbx+r8*8+0x4]
   14000826a:	cmp    rsi,rax
   14000826d:	jb     0x14000828f
   14000826f:	mov    eax,DWORD PTR [rbx+r8*8+0x8]
   140008274:	cmp    rsi,rax
   140008277:	jae    0x14000828f
   140008279:	mov    eax,DWORD PTR [rbx+rcx*8+0x10]
   14000827d:	cmp    DWORD PTR [rbx+r8*8+0x10],eax
   140008282:	jne    0x14000828f
   140008284:	mov    eax,DWORD PTR [rbx+rcx*8+0xc]
   140008288:	cmp    DWORD PTR [rbx+r8*8+0xc],eax
   14000828d:	je     0x140008297
   14000828f:	inc    r9d
   140008292:	cmp    r9d,edx
   140008295:	jb     0x14000825f
   140008297:	cmp    r9d,edx
   14000829a:	jne    0x1400082ce
   14000829c:	mov    eax,DWORD PTR [rbx+rcx*8+0x10]
   1400082a0:	test   eax,eax
   1400082a2:	je     0x1400082ab
   1400082a4:	cmp    rsi,rax
   1400082a7:	je     0x1400082ce
   1400082a9:	jmp    0x1400082c2
   1400082ab:	lea    eax,[rdi+0x1]
   1400082ae:	mov    rdx,r13
   1400082b1:	mov    DWORD PTR [r14+0x48],eax
   1400082b5:	mov    r8d,DWORD PTR [rbx+rcx*8+0xc]
   1400082ba:	mov    cl,0x1
   1400082bc:	add    r8,r12
   1400082bf:	call   r8
   1400082c2:	inc    edi
   1400082c4:	mov    edx,DWORD PTR [rbx]
   1400082c6:	cmp    edi,edx
   1400082c8:	jb     0x14000823b
   1400082ce:	mov    eax,0x1
   1400082d3:	lea    r11,[rsp+0x40]
   1400082d8:	mov    rbx,QWORD PTR [r11+0x30]
   1400082dc:	mov    rbp,QWORD PTR [r11+0x38]
   1400082e0:	mov    rsi,QWORD PTR [r11+0x40]
   1400082e4:	mov    rsp,r11
   1400082e7:	pop    r15
   1400082e9:	pop    r14
   1400082eb:	pop    r13
   1400082ed:	pop    r12
   1400082ef:	pop    rdi
   1400082f0:	ret    
   1400082f1:	int3   
   1400082f2:	int3   
   1400082f3:	int3   
   1400082f4:	mov    QWORD PTR [rsp+0x8],rbx
   1400082f9:	mov    QWORD PTR [rsp+0x10],rbp
   1400082fe:	mov    QWORD PTR [rsp+0x18],rsi
   140008303:	push   rdi
   140008304:	sub    rsp,0x10
   140008308:	xor    ecx,ecx
   14000830a:	xor    eax,eax
   14000830c:	xor    edi,edi
   14000830e:	cpuid  
   140008310:	mov    DWORD PTR [rip+0x2ddce],0x2        # 0x1400360e8
   14000831a:	mov    DWORD PTR [rip+0x2ddc0],0x1        # 0x1400360e4
   140008324:	mov    r11d,ebx
   140008327:	mov    ebx,ecx
   140008329:	mov    r8d,edx
   14000832c:	xor    ebx,0x6c65746e
   140008332:	mov    r9d,edx
   140008335:	mov    edx,r11d
   140008338:	xor    r8d,0x49656e69
   14000833f:	xor    edx,0x756e6547
   140008345:	mov    ebp,eax
   140008347:	or     r8d,ebx
   14000834a:	lea    eax,[rdi+0x1]
   14000834d:	or     r8d,edx
   140008350:	sete   r10b
   140008354:	xor    r11d,0x68747541
   14000835b:	xor    r9d,0x69746e65
   140008362:	or     r11d,r9d
   140008365:	xor    ecx,0x444d4163
   14000836b:	or     r11d,ecx
   14000836e:	sete   sil
   140008372:	xor    ecx,ecx
   140008374:	cpuid  
   140008376:	mov    r11d,ecx
   140008379:	mov    r9d,eax
   14000837c:	mov    DWORD PTR [rsp+0x4],ebx
   140008380:	mov    DWORD PTR [rsp+0xc],edx
   140008384:	test   r10b,r10b
   140008387:	je     0x1400083d8
   140008389:	mov    edx,eax
   14000838b:	and    edx,0xfff3ff0
   140008391:	cmp    edx,0x106c0
   140008397:	je     0x1400083c4
   140008399:	cmp    edx,0x20660
   14000839f:	je     0x1400083c4
   1400083a1:	cmp    edx,0x20670
   1400083a7:	je     0x1400083c4
   1400083a9:	add    edx,0xfffcf9b0
   1400083af:	cmp    edx,0x20
   1400083b2:	ja     0x1400083d8
   1400083b4:	movabs rcx,0x100010001
   1400083be:	bt     rcx,rdx
   1400083c2:	jae    0x1400083d8
   1400083c4:	mov    r8d,DWORD PTR [rip+0x2f9b1]        # 0x140037d7c
   1400083cb:	or     r8d,0x1
   1400083cf:	mov    DWORD PTR [rip+0x2f9a6],r8d        # 0x140037d7c
   1400083d6:	jmp    0x1400083df
   1400083d8:	mov    r8d,DWORD PTR [rip+0x2f99d]        # 0x140037d7c
   1400083df:	test   sil,sil
   1400083e2:	je     0x1400083ff
   1400083e4:	and    r9d,0xff00f00
   1400083eb:	cmp    r9d,0x600f00
   1400083f2:	jl     0x1400083ff
   1400083f4:	or     r8d,0x4
   1400083f8:	mov    DWORD PTR [rip+0x2f97d],r8d        # 0x140037d7c
   1400083ff:	mov    eax,0x7
   140008404:	cmp    ebp,eax
   140008406:	jl     0x14000842a
   140008408:	xor    ecx,ecx
   14000840a:	cpuid  
   14000840c:	mov    edi,ebx
   14000840e:	mov    DWORD PTR [rsp],eax
   140008411:	mov    DWORD PTR [rsp+0x8],ecx
   140008415:	mov    DWORD PTR [rsp+0xc],edx
   140008419:	bt     ebx,0x9
   14000841d:	jae    0x14000842a
   14000841f:	or     r8d,0x2
   140008423:	mov    DWORD PTR [rip+0x2f952],r8d        # 0x140037d7c
   14000842a:	bt     r11d,0x14
   14000842f:	jae    0x140008481
   140008431:	mov    DWORD PTR [rip+0x2dca9],0x2        # 0x1400360e4
   14000843b:	mov    DWORD PTR [rip+0x2dca3],0x6        # 0x1400360e8
   140008445:	bt     r11d,0x1b
   14000844a:	jae    0x140008481
   14000844c:	bt     r11d,0x1c
   140008451:	jae    0x140008481
   140008453:	mov    DWORD PTR [rip+0x2dc87],0x3        # 0x1400360e4
   14000845d:	mov    DWORD PTR [rip+0x2dc81],0xe        # 0x1400360e8
   140008467:	test   dil,0x20
   14000846b:	je     0x140008481
   14000846d:	mov    DWORD PTR [rip+0x2dc6d],0x5        # 0x1400360e4
   140008477:	mov    DWORD PTR [rip+0x2dc67],0x2e        # 0x1400360e8
   140008481:	mov    rbx,QWORD PTR [rsp+0x20]
   140008486:	mov    rbp,QWORD PTR [rsp+0x28]
   14000848b:	mov    rsi,QWORD PTR [rsp+0x30]
   140008490:	xor    eax,eax
   140008492:	add    rsp,0x10
   140008496:	pop    rdi
   140008497:	ret    
   140008498:	jmp    0x1400085c0
   14000849d:	int3   
   14000849e:	int3   
   14000849f:	int3   
   1400084a0:	sub    rsp,0x38
   1400084a4:	mov    rax,QWORD PTR [rsp+0x60]
   1400084a9:	mov    QWORD PTR [rsp+0x20],rax
   1400084ae:	call   0x140008678
   1400084b3:	int3   
   1400084b4:	mov    rax,rsp
   1400084b7:	mov    QWORD PTR [rax+0x10],rbx
   1400084bb:	mov    QWORD PTR [rax+0x18],rsi
   1400084bf:	mov    QWORD PTR [rax+0x20],rdi
   1400084c3:	push   rbp
   1400084c4:	lea    rbp,[rax-0x4b8]
   1400084cb:	sub    rsp,0x5b0
   1400084d2:	mov    rax,QWORD PTR [rip+0x2e567]        # 0x140036a40
   1400084d9:	xor    rax,rsp
   1400084dc:	mov    QWORD PTR [rbp+0x4a0],rax
   1400084e3:	mov    edi,r8d
   1400084e6:	mov    esi,edx
   1400084e8:	mov    ebx,ecx
   1400084ea:	cmp    ecx,0xffffffff
   1400084ed:	je     0x1400084f4
   1400084ef:	call   0x14000f8a4
   1400084f4:	and    DWORD PTR [rsp+0x30],0x0
   1400084f9:	lea    rcx,[rsp+0x34]
   1400084fe:	xor    edx,edx
   140008500:	mov    r8d,0x94
   140008506:	call   0x140007150
   14000850b:	lea    rax,[rsp+0x30]
   140008510:	lea    rcx,[rbp-0x30]
   140008514:	mov    QWORD PTR [rsp+0x20],rax
   140008519:	lea    rax,[rbp-0x30]
   14000851d:	mov    QWORD PTR [rsp+0x28],rax
   140008522:	call   0x1400089cc
   140008527:	mov    rax,QWORD PTR [rbp+0x4b8]
   14000852e:	mov    QWORD PTR [rbp+0xc8],rax
   140008535:	lea    rax,[rbp+0x4b8]
   14000853c:	mov    DWORD PTR [rsp+0x30],esi
   140008540:	add    rax,0x8
   140008544:	mov    DWORD PTR [rsp+0x34],edi
   140008548:	mov    QWORD PTR [rbp+0x68],rax
   14000854c:	mov    rax,QWORD PTR [rbp+0x4b8]
   140008553:	mov    QWORD PTR [rsp+0x40],rax
   140008558:	call   QWORD PTR [rip+0x1eba2]        # 0x140027100
   14000855e:	lea    rcx,[rsp+0x20]
   140008563:	mov    edi,eax
   140008565:	call   0x140009228
   14000856a:	test   eax,eax
   14000856c:	jne    0x14000857e
   14000856e:	test   edi,edi
   140008570:	jne    0x14000857e
   140008572:	cmp    ebx,0xffffffff
   140008575:	je     0x14000857e
   140008577:	mov    ecx,ebx
   140008579:	call   0x14000f8a4
   14000857e:	mov    rcx,QWORD PTR [rbp+0x4a0]
   140008585:	xor    rcx,rsp
   140008588:	call   0x14000d0a0
   14000858d:	lea    r11,[rsp+0x5b0]
   140008595:	mov    rbx,QWORD PTR [r11+0x18]
   140008599:	mov    rsi,QWORD PTR [r11+0x20]
   14000859d:	mov    rdi,QWORD PTR [r11+0x28]
   1400085a1:	mov    rsp,r11
   1400085a4:	pop    rbp
   1400085a5:	ret    
   1400085a6:	int3   
   1400085a7:	int3   
   1400085a8:	mov    rcx,QWORD PTR [rip+0x2f7d1]        # 0x140037d80
   1400085af:	rex.W jmp QWORD PTR [rip+0x1eac2]        # 0x140027078
   1400085b6:	int3   
   1400085b7:	int3   
   1400085b8:	mov    QWORD PTR [rip+0x2f7c1],rcx        # 0x140037d80
   1400085bf:	ret    
   1400085c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400085c5:	mov    QWORD PTR [rsp+0x10],rbp
   1400085ca:	mov    QWORD PTR [rsp+0x18],rsi
   1400085cf:	push   rdi
   1400085d0:	sub    rsp,0x30
   1400085d4:	mov    rbp,rcx
   1400085d7:	mov    rcx,QWORD PTR [rip+0x2f7a2]        # 0x140037d80
   1400085de:	mov    ebx,r9d
   1400085e1:	mov    rdi,r8
   1400085e4:	mov    rsi,rdx
   1400085e7:	call   QWORD PTR [rip+0x1ea8b]        # 0x140027078
   1400085ed:	mov    r9d,ebx
   1400085f0:	mov    r8,rdi
   1400085f3:	mov    rdx,rsi
   1400085f6:	mov    rcx,rbp
   1400085f9:	test   rax,rax
   1400085fc:	je     0x140008615
   1400085fe:	mov    rbx,QWORD PTR [rsp+0x40]
   140008603:	mov    rbp,QWORD PTR [rsp+0x48]
   140008608:	mov    rsi,QWORD PTR [rsp+0x50]
   14000860d:	add    rsp,0x30
   140008611:	pop    rdi
   140008612:	rex.W jmp rax
   140008615:	mov    rax,QWORD PTR [rsp+0x60]
   14000861a:	mov    QWORD PTR [rsp+0x20],rax
   14000861f:	call   0x140008678
   140008624:	int3   
   140008625:	int3   
   140008626:	int3   
   140008627:	int3   
   140008628:	sub    rsp,0x38
   14000862c:	and    QWORD PTR [rsp+0x20],0x0
   140008632:	xor    r9d,r9d
   140008635:	xor    r8d,r8d
   140008638:	xor    edx,edx
   14000863a:	xor    ecx,ecx
   14000863c:	call   0x1400085c0
   140008641:	add    rsp,0x38
   140008645:	ret    
   140008646:	int3   
   140008647:	int3   
   140008648:	sub    rsp,0x38
   14000864c:	and    QWORD PTR [rsp+0x20],0x0
   140008652:	xor    r9d,r9d
   140008655:	xor    r8d,r8d
   140008658:	xor    edx,edx
   14000865a:	xor    ecx,ecx
   14000865c:	call   0x1400085c0
   140008661:	and    QWORD PTR [rsp+0x20],0x0
   140008667:	xor    r9d,r9d
   14000866a:	xor    r8d,r8d
   14000866d:	xor    edx,edx
   14000866f:	xor    ecx,ecx
   140008671:	call   0x140008678
   140008676:	int3   
   140008677:	int3   
   140008678:	sub    rsp,0x28
   14000867c:	mov    ecx,0x17
   140008681:	call   0x140025f82
   140008686:	test   eax,eax
   140008688:	je     0x140008691
   14000868a:	mov    ecx,0x5
   14000868f:	int    0x29
   140008691:	mov    r8d,0x1
   140008697:	mov    edx,0xc0000417
   14000869c:	lea    ecx,[r8+0x1]
   1400086a0:	call   0x1400084b4
   1400086a5:	mov    ecx,0xc0000417
   1400086aa:	add    rsp,0x28
   1400086ae:	jmp    0x140009208
   1400086b3:	int3   
   1400086b4:	mov    QWORD PTR [rsp+0x8],rbx
   1400086b9:	push   rdi
   1400086ba:	sub    rsp,0x20
   1400086be:	mov    rdi,rcx
   1400086c1:	mov    rcx,QWORD PTR [rip+0x2f6b8]        # 0x140037d80
   1400086c8:	call   QWORD PTR [rip+0x1e9aa]        # 0x140027078
   1400086ce:	mov    rcx,rdi
   1400086d1:	mov    rbx,rax
   1400086d4:	call   QWORD PTR [rip+0x1e996]        # 0x140027070
   1400086da:	mov    QWORD PTR [rip+0x2f69f],rax        # 0x140037d80
   1400086e1:	mov    rax,rbx
   1400086e4:	mov    rbx,QWORD PTR [rsp+0x30]
   1400086e9:	add    rsp,0x20
   1400086ed:	pop    rdi
   1400086ee:	ret    
   1400086ef:	int3   
   1400086f0:	mov    QWORD PTR [rsp+0x8],rbx
   1400086f5:	push   rdi
   1400086f6:	sub    rsp,0x20
   1400086fa:	lea    rbx,[rip+0x290b7]        # 0x1400317b8
   140008701:	lea    rdi,[rip+0x290b0]        # 0x1400317b8
   140008708:	jmp    0x140008718
   14000870a:	mov    rax,QWORD PTR [rbx]
   14000870d:	test   rax,rax
   140008710:	je     0x140008714
   140008712:	call   rax
   140008714:	add    rbx,0x8
   140008718:	cmp    rbx,rdi
   14000871b:	jb     0x14000870a
   14000871d:	mov    rbx,QWORD PTR [rsp+0x30]
   140008722:	add    rsp,0x20
   140008726:	pop    rdi
   140008727:	ret    
   140008728:	mov    QWORD PTR [rsp+0x8],rbx
   14000872d:	push   rdi
   14000872e:	sub    rsp,0x20
   140008732:	lea    rbx,[rip+0x2908f]        # 0x1400317c8
   140008739:	lea    rdi,[rip+0x29088]        # 0x1400317c8
   140008740:	jmp    0x140008750
   140008742:	mov    rax,QWORD PTR [rbx]
   140008745:	test   rax,rax
   140008748:	je     0x14000874c
   14000874a:	call   rax
   14000874c:	add    rbx,0x8
   140008750:	cmp    rbx,rdi
   140008753:	jb     0x140008742
   140008755:	mov    rbx,QWORD PTR [rsp+0x30]
   14000875a:	add    rsp,0x20
   14000875e:	pop    rdi
   14000875f:	ret    
   140008760:	mov    QWORD PTR [rsp+0x8],rbx
   140008765:	push   rdi
   140008766:	sub    rsp,0x20
   14000876a:	movsxd rbx,ecx
   14000876d:	lea    rdi,[rip+0x2d97c]        # 0x1400360f0
   140008774:	add    rbx,rbx
   140008777:	cmp    QWORD PTR [rdi+rbx*8],0x0
   14000877c:	jne    0x14000878f
   14000877e:	call   0x140008858
   140008783:	test   eax,eax
   140008785:	jne    0x14000878f
   140008787:	lea    ecx,[rax+0x11]
   14000878a:	call   0x140005ff4
   14000878f:	mov    rcx,QWORD PTR [rdi+rbx*8]
   140008793:	mov    rbx,QWORD PTR [rsp+0x30]
   140008798:	add    rsp,0x20
   14000879c:	pop    rdi
   14000879d:	rex.W jmp QWORD PTR [rip+0x1e964]        # 0x140027108
   1400087a4:	rex push rbx
   1400087a6:	sub    rsp,0x20
   1400087aa:	mov    rbx,rcx
   1400087ad:	call   0x140008d30
   1400087b2:	test   eax,eax
   1400087b4:	jne    0x1400087c1
   1400087b6:	mov    rdx,rbx
   1400087b9:	xor    ecx,ecx
   1400087bb:	call   QWORD PTR [rip+0x1e95f]        # 0x140027120
   1400087c1:	mov    ecx,0xff
   1400087c6:	add    rsp,0x20
   1400087ca:	pop    rbx
   1400087cb:	jmp    0x140005e94
   1400087d0:	mov    QWORD PTR [rsp+0x8],rbx
   1400087d5:	mov    QWORD PTR [rsp+0x10],rbp
   1400087da:	mov    QWORD PTR [rsp+0x18],rsi
   1400087df:	push   rdi
   1400087e0:	sub    rsp,0x20
   1400087e4:	mov    edi,0x24
   1400087e9:	lea    rbx,[rip+0x2d900]        # 0x1400360f0
   1400087f0:	mov    ebp,edi
   1400087f2:	mov    rsi,QWORD PTR [rbx]
   1400087f5:	test   rsi,rsi
   1400087f8:	je     0x140008815
   1400087fa:	cmp    DWORD PTR [rbx+0x8],0x1
   1400087fe:	je     0x140008815
   140008800:	mov    rcx,rsi
   140008803:	call   QWORD PTR [rip+0x1e90f]        # 0x140027118
   140008809:	mov    rcx,rsi
   14000880c:	call   0x140006444
   140008811:	and    QWORD PTR [rbx],0x0
   140008815:	add    rbx,0x10
   140008819:	dec    rbp
   14000881c:	jne    0x1400087f2
   14000881e:	lea    rbx,[rip+0x2d8d3]        # 0x1400360f8
   140008825:	mov    rcx,QWORD PTR [rbx-0x8]
   140008829:	test   rcx,rcx
   14000882c:	je     0x140008839
   14000882e:	cmp    DWORD PTR [rbx],0x1
   140008831:	jne    0x140008839
   140008833:	call   QWORD PTR [rip+0x1e8df]        # 0x140027118
   140008839:	add    rbx,0x10
   14000883d:	dec    rdi
   140008840:	jne    0x140008825
   140008842:	mov    rbx,QWORD PTR [rsp+0x30]
   140008847:	mov    rbp,QWORD PTR [rsp+0x38]
   14000884c:	mov    rsi,QWORD PTR [rsp+0x40]
   140008851:	add    rsp,0x20
   140008855:	pop    rdi
   140008856:	ret    
   140008857:	int3   
   140008858:	mov    QWORD PTR [rsp+0x8],rbx
   14000885d:	mov    QWORD PTR [rsp+0x10],rdi
   140008862:	push   r14
   140008864:	sub    rsp,0x20
   140008868:	movsxd rbx,ecx
   14000886b:	cmp    QWORD PTR [rip+0x2fdf5],0x0        # 0x140038668
   140008873:	jne    0x14000888e
   140008875:	call   0x140009264
   14000887a:	mov    ecx,0x1e
   14000887f:	call   0x1400092d8
   140008884:	mov    ecx,0xff
   140008889:	call   0x140005e94
   14000888e:	add    rbx,rbx
   140008891:	lea    r14,[rip+0x2d858]        # 0x1400360f0
   140008898:	cmp    QWORD PTR [r14+rbx*8],0x0
   14000889d:	je     0x1400088a6
   14000889f:	mov    eax,0x1
   1400088a4:	jmp    0x140008904
   1400088a6:	mov    ecx,0x28
   1400088ab:	call   0x140007f54
   1400088b0:	mov    rdi,rax
   1400088b3:	test   rax,rax
   1400088b6:	jne    0x1400088c7
   1400088b8:	call   0x1400095b8
   1400088bd:	mov    DWORD PTR [rax],0xc
   1400088c3:	xor    eax,eax
   1400088c5:	jmp    0x140008904
   1400088c7:	mov    ecx,0xa
   1400088cc:	call   0x140008760
   1400088d1:	nop
   1400088d2:	mov    rcx,rdi
   1400088d5:	cmp    QWORD PTR [r14+rbx*8],0x0
   1400088da:	jne    0x1400088ef
   1400088dc:	xor    r8d,r8d
   1400088df:	mov    edx,0xfa0
   1400088e4:	call   0x140008d04
   1400088e9:	mov    QWORD PTR [r14+rbx*8],rdi
   1400088ed:	jmp    0x1400088f5
   1400088ef:	call   0x140006444
   1400088f4:	nop
   1400088f5:	mov    rcx,QWORD PTR [rip+0x2d894]        # 0x140036190
   1400088fc:	call   QWORD PTR [rip+0x1e80e]        # 0x140027110
   140008902:	jmp    0x14000889f
   140008904:	mov    rbx,QWORD PTR [rsp+0x30]
   140008909:	mov    rdi,QWORD PTR [rsp+0x38]
   14000890e:	add    rsp,0x20
   140008912:	pop    r14
   140008914:	ret    
   140008915:	int3   
   140008916:	int3   
   140008917:	int3   
   140008918:	mov    QWORD PTR [rsp+0x8],rbx
   14000891d:	mov    QWORD PTR [rsp+0x10],rsi
   140008922:	push   rdi
   140008923:	sub    rsp,0x20
   140008927:	xor    esi,esi
   140008929:	lea    rbx,[rip+0x2d7c0]        # 0x1400360f0
   140008930:	lea    edi,[rsi+0x24]
   140008933:	cmp    DWORD PTR [rbx+0x8],0x1
   140008937:	jne    0x14000895d
   140008939:	movsxd rax,esi
   14000893c:	lea    rdx,[rip+0x2f44d]        # 0x140037d90
   140008943:	xor    r8d,r8d
   140008946:	lea    rcx,[rax+rax*4]
   14000894a:	inc    esi
   14000894c:	lea    rcx,[rdx+rcx*8]
   140008950:	mov    edx,0xfa0
   140008955:	mov    QWORD PTR [rbx],rcx
   140008958:	call   0x140008d04
   14000895d:	add    rbx,0x10
   140008961:	dec    rdi
   140008964:	jne    0x140008933
   140008966:	mov    rbx,QWORD PTR [rsp+0x30]
   14000896b:	mov    rsi,QWORD PTR [rsp+0x38]
   140008970:	lea    eax,[rdi+0x1]
   140008973:	add    rsp,0x20
   140008977:	pop    rdi
   140008978:	ret    
   140008979:	int3   
   14000897a:	int3   
   14000897b:	int3   
   14000897c:	movsxd rcx,ecx
   14000897f:	lea    rax,[rip+0x2d76a]        # 0x1400360f0
   140008986:	add    rcx,rcx
   140008989:	mov    rcx,QWORD PTR [rax+rcx*8]
   14000898d:	rex.W jmp QWORD PTR [rip+0x1e77c]        # 0x140027110
   140008994:	sub    rsp,0x28
   140008998:	mov    rax,QWORD PTR [rip+0x317a9]        # 0x14003a148
   14000899f:	and    DWORD PTR [rsp+0x30],0x0
   1400089a4:	xor    rax,QWORD PTR [rip+0x2e095]        # 0x140036a40
   1400089ab:	je     0x1400089c2
   1400089ad:	lea    rcx,[rsp+0x30]
   1400089b2:	xor    edx,edx
   1400089b4:	call   rax
   1400089b6:	cmp    eax,0x7a
   1400089b9:	jne    0x1400089c2
   1400089bb:	mov    eax,0x1
   1400089c0:	jmp    0x1400089c4
   1400089c2:	xor    eax,eax
   1400089c4:	add    rsp,0x28
   1400089c8:	ret    
   1400089c9:	int3   
   1400089ca:	int3   
   1400089cb:	int3   
   1400089cc:	mov    QWORD PTR [rsp+0x20],rbx
   1400089d1:	push   rdi
   1400089d2:	sub    rsp,0x40
   1400089d6:	mov    rbx,rcx
   1400089d9:	call   QWORD PTR [rip+0x1e749]        # 0x140027128
   1400089df:	mov    rdi,QWORD PTR [rbx+0xf8]
   1400089e6:	lea    rdx,[rsp+0x50]
   1400089eb:	xor    r8d,r8d
   1400089ee:	mov    rcx,rdi
   1400089f1:	call   QWORD PTR [rip+0x1e6e1]        # 0x1400270d8
   1400089f7:	test   rax,rax
   1400089fa:	je     0x140008a2e
   1400089fc:	and    QWORD PTR [rsp+0x38],0x0
   140008a02:	mov    rdx,QWORD PTR [rsp+0x50]
   140008a07:	lea    rcx,[rsp+0x58]
   140008a0c:	mov    QWORD PTR [rsp+0x30],rcx
   140008a11:	lea    rcx,[rsp+0x60]
   140008a16:	mov    r9,rax
   140008a19:	mov    QWORD PTR [rsp+0x28],rcx
   140008a1e:	xor    ecx,ecx
   140008a20:	mov    r8,rdi
   140008a23:	mov    QWORD PTR [rsp+0x20],rbx
   140008a28:	call   QWORD PTR [rip+0x1e702]        # 0x140027130
   140008a2e:	mov    rbx,QWORD PTR [rsp+0x68]
   140008a33:	add    rsp,0x40
   140008a37:	pop    rdi
   140008a38:	ret    
   140008a39:	int3   
   140008a3a:	int3   
   140008a3b:	int3   
   140008a3c:	rex push rbx
   140008a3e:	push   rsi
   140008a3f:	push   rdi
   140008a40:	sub    rsp,0x40
   140008a44:	mov    rbx,rcx
   140008a47:	call   QWORD PTR [rip+0x1e6db]        # 0x140027128
   140008a4d:	mov    rsi,QWORD PTR [rbx+0xf8]
   140008a54:	xor    edi,edi
   140008a56:	lea    rdx,[rsp+0x60]
   140008a5b:	xor    r8d,r8d
   140008a5e:	mov    rcx,rsi
   140008a61:	call   QWORD PTR [rip+0x1e671]        # 0x1400270d8
   140008a67:	test   rax,rax
   140008a6a:	je     0x140008aa5
   140008a6c:	and    QWORD PTR [rsp+0x38],0x0
   140008a72:	mov    rdx,QWORD PTR [rsp+0x60]
   140008a77:	lea    rcx,[rsp+0x68]
   140008a7c:	mov    QWORD PTR [rsp+0x30],rcx
   140008a81:	lea    rcx,[rsp+0x70]
   140008a86:	mov    r9,rax
   140008a89:	mov    QWORD PTR [rsp+0x28],rcx
   140008a8e:	xor    ecx,ecx
   140008a90:	mov    r8,rsi
   140008a93:	mov    QWORD PTR [rsp+0x20],rbx
   140008a98:	call   QWORD PTR [rip+0x1e692]        # 0x140027130
   140008a9e:	inc    edi
   140008aa0:	cmp    edi,0x2
   140008aa3:	jl     0x140008a56
   140008aa5:	add    rsp,0x40
   140008aa9:	pop    rdi
   140008aaa:	pop    rsi
   140008aab:	pop    rbx
   140008aac:	ret    
   140008aad:	int3   
   140008aae:	int3   
   140008aaf:	int3   
   140008ab0:	sub    rsp,0x28
   140008ab4:	mov    rax,QWORD PTR [rip+0x315fd]        # 0x14003a0b8
   140008abb:	xor    rax,QWORD PTR [rip+0x2df7e]        # 0x140036a40
   140008ac2:	je     0x140008ac6
   140008ac4:	call   rax
   140008ac6:	add    rsp,0x28
   140008aca:	ret    
   140008acb:	int3   
   140008acc:	sub    rsp,0x28
   140008ad0:	mov    rax,QWORD PTR [rip+0x315f9]        # 0x14003a0d0
   140008ad7:	xor    rax,QWORD PTR [rip+0x2df62]        # 0x140036a40
   140008ade:	je     0x140008ae2
   140008ae0:	call   rax
   140008ae2:	add    rsp,0x28
   140008ae6:	ret    
   140008ae7:	int3   
   140008ae8:	mov    r10,QWORD PTR [rip+0x31599]        # 0x14003a088
   140008aef:	mov    eax,r8d
   140008af2:	xor    r10,QWORD PTR [rip+0x2df47]        # 0x140036a40
   140008af9:	je     0x140008afe
   140008afb:	rex.WB jmp r10
   140008afe:	and    eax,0x1
   140008b01:	mov    r9,rdx
   140008b04:	and    r8d,0x2
   140008b08:	mov    edx,eax
   140008b0a:	rex.W jmp QWORD PTR [rip+0x1e647]        # 0x140027158
   140008b11:	int3   
   140008b12:	int3   
   140008b13:	int3   
   140008b14:	mov    r10,QWORD PTR [rip+0x31575]        # 0x14003a090
   140008b1b:	xor    r10,QWORD PTR [rip+0x2df1e]        # 0x140036a40
   140008b22:	je     0x140008b27
   140008b24:	rex.WB jmp r10
   140008b27:	rex.W jmp QWORD PTR [rip+0x1e682]        # 0x1400271b0
   140008b2e:	int3   
   140008b2f:	int3   
   140008b30:	sub    rsp,0x28
   140008b34:	mov    rax,QWORD PTR [rip+0x315bd]        # 0x14003a0f8
   140008b3b:	xor    rax,QWORD PTR [rip+0x2defe]        # 0x140036a40
   140008b42:	je     0x140008b4b
   140008b44:	add    rsp,0x28
   140008b48:	rex.W jmp rax
   140008b4b:	mov    ecx,0x78
   140008b50:	call   QWORD PTR [rip+0x1e5f2]        # 0x140027148
   140008b56:	xor    al,al
   140008b58:	add    rsp,0x28
   140008b5c:	ret    
   140008b5d:	int3   
   140008b5e:	int3   
   140008b5f:	int3   
   140008b60:	mov    rax,QWORD PTR [rip+0x31539]        # 0x14003a0a0
   140008b67:	xor    rax,QWORD PTR [rip+0x2ded2]        # 0x140036a40
   140008b6e:	je     0x140008b73
   140008b70:	rex.W jmp rax
   140008b73:	xor    eax,eax
   140008b75:	ret    
   140008b76:	int3   
   140008b77:	int3   
   140008b78:	mov    rax,QWORD PTR [rip+0x31541]        # 0x14003a0c0
   140008b7f:	xor    rax,QWORD PTR [rip+0x2deba]        # 0x140036a40
   140008b86:	je     0x140008b8b
   140008b88:	rex.W jmp rax
   140008b8b:	xor    eax,eax
   140008b8d:	ret    
   140008b8e:	int3   
   140008b8f:	int3   
   140008b90:	mov    rax,QWORD PTR [rip+0x314c9]        # 0x14003a060
   140008b97:	xor    rax,QWORD PTR [rip+0x2dea2]        # 0x140036a40
   140008b9e:	je     0x140008ba3
   140008ba0:	rex.W jmp rax
   140008ba3:	rex.W jmp QWORD PTR [rip+0x1e5ce]        # 0x140027178
   140008baa:	int3   
   140008bab:	int3   
   140008bac:	mov    rax,QWORD PTR [rip+0x314b5]        # 0x14003a068
   140008bb3:	xor    rax,QWORD PTR [rip+0x2de86]        # 0x140036a40
   140008bba:	je     0x140008bbf
   140008bbc:	rex.W jmp rax
   140008bbf:	rex.W jmp QWORD PTR [rip+0x1e5ca]        # 0x140027190
   140008bc6:	int3   
   140008bc7:	int3   
   140008bc8:	mov    rax,QWORD PTR [rip+0x314a1]        # 0x14003a070
   140008bcf:	xor    rax,QWORD PTR [rip+0x2de6a]        # 0x140036a40
   140008bd6:	je     0x140008bdb
   140008bd8:	rex.W jmp rax
   140008bdb:	rex.W jmp QWORD PTR [rip+0x1e59e]        # 0x140027180
   140008be2:	int3   
   140008be3:	int3   
   140008be4:	mov    rax,QWORD PTR [rip+0x3148d]        # 0x14003a078
   140008beb:	xor    rax,QWORD PTR [rip+0x2de4e]        # 0x140036a40
   140008bf2:	je     0x140008bf7
   140008bf4:	rex.W jmp rax
   140008bf7:	rex.W jmp QWORD PTR [rip+0x1e58a]        # 0x140027188
   140008bfe:	int3   
   140008bff:	int3   
   140008c00:	sub    rsp,0x28
   140008c04:	mov    rax,QWORD PTR [rip+0x314cd]        # 0x14003a0d8
   140008c0b:	xor    rax,QWORD PTR [rip+0x2de2e]        # 0x140036a40
   140008c12:	je     0x140008c16
   140008c14:	call   rax
   140008c16:	add    rsp,0x28
   140008c1a:	ret    
   140008c1b:	int3   
   140008c1c:	sub    rsp,0x28
   140008c20:	mov    rax,QWORD PTR [rip+0x314b9]        # 0x14003a0e0
   140008c27:	xor    rax,QWORD PTR [rip+0x2de12]        # 0x140036a40
   140008c2e:	je     0x140008c32
   140008c30:	call   rax
   140008c32:	add    rsp,0x28
   140008c36:	ret    
   140008c37:	int3   
   140008c38:	mov    rax,QWORD PTR [rip+0x314a9]        # 0x14003a0e8
   140008c3f:	xor    rax,QWORD PTR [rip+0x2ddfa]        # 0x140036a40
   140008c46:	je     0x140008c4b
   140008c48:	rex.W jmp rax
   140008c4b:	xor    eax,eax
   140008c4d:	ret    
   140008c4e:	int3   
   140008c4f:	int3   
   140008c50:	sub    rsp,0x28
   140008c54:	mov    rax,QWORD PTR [rip+0x314fd]        # 0x14003a158
   140008c5b:	xor    rax,QWORD PTR [rip+0x2ddde]        # 0x140036a40
   140008c62:	je     0x140008c6b
   140008c64:	add    rsp,0x28
   140008c68:	rex.W jmp rax
   140008c6b:	mov    ecx,0x78
   140008c70:	call   QWORD PTR [rip+0x1e4d2]        # 0x140027148
   140008c76:	xor    eax,eax
   140008c78:	add    rsp,0x28
   140008c7c:	ret    
   140008c7d:	int3   
   140008c7e:	int3   
   140008c7f:	int3   
   140008c80:	sub    rsp,0x28
   140008c84:	mov    rax,QWORD PTR [rip+0x31465]        # 0x14003a0f0
   140008c8b:	xor    rax,QWORD PTR [rip+0x2ddae]        # 0x140036a40
   140008c92:	je     0x140008c9b
   140008c94:	add    rsp,0x28
   140008c98:	rex.W jmp rax
   140008c9b:	mov    ecx,0x78
   140008ca0:	call   QWORD PTR [rip+0x1e4a2]        # 0x140027148
   140008ca6:	xor    eax,eax
   140008ca8:	add    rsp,0x28
   140008cac:	ret    
   140008cad:	int3   
   140008cae:	int3   
   140008caf:	int3   
   140008cb0:	sub    rsp,0x98
   140008cb7:	lea    rcx,[rsp+0x20]
   140008cbc:	call   QWORD PTR [rip+0x1e4d6]        # 0x140027198
   140008cc2:	test   BYTE PTR [rsp+0x5c],0x1
   140008cc7:	movzx  ecx,WORD PTR [rsp+0x60]
   140008ccc:	mov    eax,0xa
   140008cd1:	cmovne eax,ecx
   140008cd4:	add    rsp,0x98
   140008cdb:	ret    
   140008cdc:	sub    rsp,0x28
   140008ce0:	mov    rax,QWORD PTR [rip+0x31469]        # 0x14003a150
   140008ce7:	xor    rax,QWORD PTR [rip+0x2dd52]        # 0x140036a40
   140008cee:	je     0x140008cf7
   140008cf0:	add    rsp,0x28
   140008cf4:	rex.W jmp rax
   140008cf7:	call   QWORD PTR [rip+0x1e4a3]        # 0x1400271a0
   140008cfd:	mov    eax,eax
   140008cff:	add    rsp,0x28
   140008d03:	ret    
   140008d04:	sub    rsp,0x28
   140008d08:	mov    rax,QWORD PTR [rip+0x31371]        # 0x14003a080
   140008d0f:	xor    rax,QWORD PTR [rip+0x2dd2a]        # 0x140036a40
   140008d16:	je     0x140008d1f
   140008d18:	add    rsp,0x28
   140008d1c:	rex.W jmp rax
   140008d1f:	call   QWORD PTR [rip+0x1e42b]        # 0x140027150
   140008d25:	mov    eax,0x1
   140008d2a:	add    rsp,0x28
   140008d2e:	ret    
   140008d2f:	int3   
   140008d30:	rex push rbx
   140008d32:	sub    rsp,0x20
   140008d36:	mov    eax,DWORD PTR [rip+0x2d5f4]        # 0x140036330
   140008d3c:	xor    ebx,ebx
   140008d3e:	test   eax,eax
   140008d40:	jns    0x140008d71
   140008d42:	mov    rax,QWORD PTR [rip+0x313ff]        # 0x14003a148
   140008d49:	mov    DWORD PTR [rsp+0x30],ebx
   140008d4d:	xor    rax,QWORD PTR [rip+0x2dcec]        # 0x140036a40
   140008d54:	je     0x140008d67
   140008d56:	lea    rcx,[rsp+0x30]
   140008d5b:	xor    edx,edx
   140008d5d:	call   rax
   140008d5f:	cmp    eax,0x7a
   140008d62:	lea    eax,[rbx+0x1]
   140008d65:	je     0x140008d69
   140008d67:	mov    eax,ebx
   140008d69:	mov    DWORD PTR [rip+0x2d5c1],eax        # 0x140036330
   140008d6f:	test   eax,eax
   140008d71:	setg   bl
   140008d74:	mov    eax,ebx
   140008d76:	add    rsp,0x20
   140008d7a:	pop    rbx
   140008d7b:	ret    
   140008d7c:	rex push rbx
   140008d7e:	sub    rsp,0x20
   140008d82:	lea    rcx,[rip+0x20c7f]        # 0x140029a08
   140008d89:	call   QWORD PTR [rip+0x1e419]        # 0x1400271a8
   140008d8f:	lea    rdx,[rip+0x20c92]        # 0x140029a28
   140008d96:	mov    rcx,rax
   140008d99:	mov    rbx,rax
   140008d9c:	call   QWORD PTR [rip+0x1e2f6]        # 0x140027098
   140008da2:	lea    rdx,[rip+0x20c8f]        # 0x140029a38
   140008da9:	mov    rcx,rbx
   140008dac:	xor    rax,QWORD PTR [rip+0x2dc8d]        # 0x140036a40
   140008db3:	mov    QWORD PTR [rip+0x312a6],rax        # 0x14003a060
   140008dba:	call   QWORD PTR [rip+0x1e2d8]        # 0x140027098
   140008dc0:	lea    rdx,[rip+0x20c79]        # 0x140029a40
   140008dc7:	xor    rax,QWORD PTR [rip+0x2dc72]        # 0x140036a40
   140008dce:	mov    rcx,rbx
   140008dd1:	mov    QWORD PTR [rip+0x31290],rax        # 0x14003a068
   140008dd8:	call   QWORD PTR [rip+0x1e2ba]        # 0x140027098
   140008dde:	lea    rdx,[rip+0x20c6b]        # 0x140029a50
   140008de5:	xor    rax,QWORD PTR [rip+0x2dc54]        # 0x140036a40
   140008dec:	mov    rcx,rbx
   140008def:	mov    QWORD PTR [rip+0x3127a],rax        # 0x14003a070
   140008df6:	call   QWORD PTR [rip+0x1e29c]        # 0x140027098
   140008dfc:	lea    rdx,[rip+0x20c5d]        # 0x140029a60
   140008e03:	xor    rax,QWORD PTR [rip+0x2dc36]        # 0x140036a40
   140008e0a:	mov    rcx,rbx
   140008e0d:	mov    QWORD PTR [rip+0x31264],rax        # 0x14003a078
   140008e14:	call   QWORD PTR [rip+0x1e27e]        # 0x140027098
   140008e1a:	lea    rdx,[rip+0x20c5f]        # 0x140029a80
   140008e21:	xor    rax,QWORD PTR [rip+0x2dc18]        # 0x140036a40
   140008e28:	mov    rcx,rbx
   140008e2b:	mov    QWORD PTR [rip+0x3124e],rax        # 0x14003a080
   140008e32:	call   QWORD PTR [rip+0x1e260]        # 0x140027098
   140008e38:	lea    rdx,[rip+0x20c51]        # 0x140029a90
   140008e3f:	xor    rax,QWORD PTR [rip+0x2dbfa]        # 0x140036a40
   140008e46:	mov    rcx,rbx
   140008e49:	mov    QWORD PTR [rip+0x31238],rax        # 0x14003a088
   140008e50:	call   QWORD PTR [rip+0x1e242]        # 0x140027098
   140008e56:	lea    rdx,[rip+0x20c4b]        # 0x140029aa8
   140008e5d:	xor    rax,QWORD PTR [rip+0x2dbdc]        # 0x140036a40
   140008e64:	mov    rcx,rbx
   140008e67:	mov    QWORD PTR [rip+0x31222],rax        # 0x14003a090
   140008e6e:	call   QWORD PTR [rip+0x1e224]        # 0x140027098
   140008e74:	lea    rdx,[rip+0x20c45]        # 0x140029ac0
   140008e7b:	xor    rax,QWORD PTR [rip+0x2dbbe]        # 0x140036a40
   140008e82:	mov    rcx,rbx
   140008e85:	mov    QWORD PTR [rip+0x3120c],rax        # 0x14003a098
   140008e8c:	call   QWORD PTR [rip+0x1e206]        # 0x140027098
   140008e92:	lea    rdx,[rip+0x20c3f]        # 0x140029ad8
   140008e99:	xor    rax,QWORD PTR [rip+0x2dba0]        # 0x140036a40
   140008ea0:	mov    rcx,rbx
   140008ea3:	mov    QWORD PTR [rip+0x311f6],rax        # 0x14003a0a0
   140008eaa:	call   QWORD PTR [rip+0x1e1e8]        # 0x140027098
   140008eb0:	lea    rdx,[rip+0x20c39]        # 0x140029af0
   140008eb7:	xor    rax,QWORD PTR [rip+0x2db82]        # 0x140036a40
   140008ebe:	mov    rcx,rbx
   140008ec1:	mov    QWORD PTR [rip+0x311e0],rax        # 0x14003a0a8
   140008ec8:	call   QWORD PTR [rip+0x1e1ca]        # 0x140027098
   140008ece:	lea    rdx,[rip+0x20c3b]        # 0x140029b10
   140008ed5:	xor    rax,QWORD PTR [rip+0x2db64]        # 0x140036a40
   140008edc:	mov    rcx,rbx
   140008edf:	mov    QWORD PTR [rip+0x311ca],rax        # 0x14003a0b0
   140008ee6:	call   QWORD PTR [rip+0x1e1ac]        # 0x140027098
   140008eec:	lea    rdx,[rip+0x20c35]        # 0x140029b28
   140008ef3:	xor    rax,QWORD PTR [rip+0x2db46]        # 0x140036a40
   140008efa:	mov    rcx,rbx
   140008efd:	mov    QWORD PTR [rip+0x311b4],rax        # 0x14003a0b8
   140008f04:	call   QWORD PTR [rip+0x1e18e]        # 0x140027098
   140008f0a:	lea    rdx,[rip+0x20c2f]        # 0x140029b40
   140008f11:	xor    rax,QWORD PTR [rip+0x2db28]        # 0x140036a40
   140008f18:	mov    rcx,rbx
   140008f1b:	mov    QWORD PTR [rip+0x3119e],rax        # 0x14003a0c0
   140008f22:	call   QWORD PTR [rip+0x1e170]        # 0x140027098
   140008f28:	lea    rdx,[rip+0x20c29]        # 0x140029b58
   140008f2f:	xor    rax,QWORD PTR [rip+0x2db0a]        # 0x140036a40
   140008f36:	mov    rcx,rbx
   140008f39:	mov    QWORD PTR [rip+0x31188],rax        # 0x14003a0c8
   140008f40:	call   QWORD PTR [rip+0x1e152]        # 0x140027098
   140008f46:	lea    rdx,[rip+0x20c23]        # 0x140029b70
   140008f4d:	xor    rax,QWORD PTR [rip+0x2daec]        # 0x140036a40
   140008f54:	mov    rcx,rbx
   140008f57:	mov    QWORD PTR [rip+0x31172],rax        # 0x14003a0d0
   140008f5e:	call   QWORD PTR [rip+0x1e134]        # 0x140027098
   140008f64:	xor    rax,QWORD PTR [rip+0x2dad5]        # 0x140036a40
   140008f6b:	lea    rdx,[rip+0x20c1e]        # 0x140029b90
   140008f72:	mov    rcx,rbx
   140008f75:	mov    QWORD PTR [rip+0x3115c],rax        # 0x14003a0d8
   140008f7c:	call   QWORD PTR [rip+0x1e116]        # 0x140027098
   140008f82:	lea    rdx,[rip+0x20c27]        # 0x140029bb0
   140008f89:	xor    rax,QWORD PTR [rip+0x2dab0]        # 0x140036a40
   140008f90:	mov    rcx,rbx
   140008f93:	mov    QWORD PTR [rip+0x31146],rax        # 0x14003a0e0
   140008f9a:	call   QWORD PTR [rip+0x1e0f8]        # 0x140027098
   140008fa0:	lea    rdx,[rip+0x20c29]        # 0x140029bd0
   140008fa7:	xor    rax,QWORD PTR [rip+0x2da92]        # 0x140036a40
   140008fae:	mov    rcx,rbx
   140008fb1:	mov    QWORD PTR [rip+0x31130],rax        # 0x14003a0e8
   140008fb8:	call   QWORD PTR [rip+0x1e0da]        # 0x140027098
   140008fbe:	lea    rdx,[rip+0x20c2b]        # 0x140029bf0
   140008fc5:	xor    rax,QWORD PTR [rip+0x2da74]        # 0x140036a40
   140008fcc:	mov    rcx,rbx
   140008fcf:	mov    QWORD PTR [rip+0x3111a],rax        # 0x14003a0f0
   140008fd6:	call   QWORD PTR [rip+0x1e0bc]        # 0x140027098
   140008fdc:	lea    rdx,[rip+0x20c25]        # 0x140029c08
   140008fe3:	xor    rax,QWORD PTR [rip+0x2da56]        # 0x140036a40
   140008fea:	mov    rcx,rbx
   140008fed:	mov    QWORD PTR [rip+0x31104],rax        # 0x14003a0f8
   140008ff4:	call   QWORD PTR [rip+0x1e09e]        # 0x140027098
   140008ffa:	lea    rdx,[rip+0x20c27]        # 0x140029c28
   140009001:	xor    rax,QWORD PTR [rip+0x2da38]        # 0x140036a40
   140009008:	mov    rcx,rbx
   14000900b:	mov    QWORD PTR [rip+0x310ee],rax        # 0x14003a100
   140009012:	call   QWORD PTR [rip+0x1e080]        # 0x140027098
   140009018:	lea    rdx,[rip+0x20c21]        # 0x140029c40
   14000901f:	xor    rax,QWORD PTR [rip+0x2da1a]        # 0x140036a40
   140009026:	mov    rcx,rbx
   140009029:	mov    QWORD PTR [rip+0x310e0],rax        # 0x14003a110
   140009030:	call   QWORD PTR [rip+0x1e062]        # 0x140027098
   140009036:	lea    rdx,[rip+0x20c13]        # 0x140029c50
   14000903d:	xor    rax,QWORD PTR [rip+0x2d9fc]        # 0x140036a40
   140009044:	mov    rcx,rbx
   140009047:	mov    QWORD PTR [rip+0x310ba],rax        # 0x14003a108
   14000904e:	call   QWORD PTR [rip+0x1e044]        # 0x140027098
   140009054:	lea    rdx,[rip+0x20c05]        # 0x140029c60
   14000905b:	xor    rax,QWORD PTR [rip+0x2d9de]        # 0x140036a40
   140009062:	mov    rcx,rbx
   140009065:	mov    QWORD PTR [rip+0x310ac],rax        # 0x14003a118
   14000906c:	call   QWORD PTR [rip+0x1e026]        # 0x140027098
   140009072:	lea    rdx,[rip+0x20bf7]        # 0x140029c70
   140009079:	xor    rax,QWORD PTR [rip+0x2d9c0]        # 0x140036a40
   140009080:	mov    rcx,rbx
   140009083:	mov    QWORD PTR [rip+0x31096],rax        # 0x14003a120
   14000908a:	call   QWORD PTR [rip+0x1e008]        # 0x140027098
   140009090:	lea    rdx,[rip+0x20be9]        # 0x140029c80
   140009097:	xor    rax,QWORD PTR [rip+0x2d9a2]        # 0x140036a40
   14000909e:	mov    rcx,rbx
   1400090a1:	mov    QWORD PTR [rip+0x31080],rax        # 0x14003a128
   1400090a8:	call   QWORD PTR [rip+0x1dfea]        # 0x140027098
   1400090ae:	lea    rdx,[rip+0x20beb]        # 0x140029ca0
   1400090b5:	xor    rax,QWORD PTR [rip+0x2d984]        # 0x140036a40
   1400090bc:	mov    rcx,rbx
   1400090bf:	mov    QWORD PTR [rip+0x3106a],rax        # 0x14003a130
   1400090c6:	call   QWORD PTR [rip+0x1dfcc]        # 0x140027098
   1400090cc:	lea    rdx,[rip+0x20be5]        # 0x140029cb8
   1400090d3:	xor    rax,QWORD PTR [rip+0x2d966]        # 0x140036a40
   1400090da:	mov    rcx,rbx
   1400090dd:	mov    QWORD PTR [rip+0x31054],rax        # 0x14003a138
   1400090e4:	call   QWORD PTR [rip+0x1dfae]        # 0x140027098
   1400090ea:	lea    rdx,[rip+0x20bd7]        # 0x140029cc8
   1400090f1:	xor    rax,QWORD PTR [rip+0x2d948]        # 0x140036a40
   1400090f8:	mov    rcx,rbx
   1400090fb:	mov    QWORD PTR [rip+0x3103e],rax        # 0x14003a140
   140009102:	call   QWORD PTR [rip+0x1df90]        # 0x140027098
   140009108:	lea    rdx,[rip+0x20bd1]        # 0x140029ce0
   14000910f:	xor    rax,QWORD PTR [rip+0x2d92a]        # 0x140036a40
   140009116:	mov    rcx,rbx
   140009119:	mov    QWORD PTR [rip+0x31028],rax        # 0x14003a148
   140009120:	call   QWORD PTR [rip+0x1df72]        # 0x140027098
   140009126:	lea    rdx,[rip+0x20bc3]        # 0x140029cf0
   14000912d:	xor    rax,QWORD PTR [rip+0x2d90c]        # 0x140036a40
   140009134:	mov    rcx,rbx
   140009137:	mov    QWORD PTR [rip+0x31012],rax        # 0x14003a150
   14000913e:	call   QWORD PTR [rip+0x1df54]        # 0x140027098
   140009144:	xor    rax,QWORD PTR [rip+0x2d8f5]        # 0x140036a40
   14000914b:	lea    rdx,[rip+0x20bbe]        # 0x140029d10
   140009152:	mov    rcx,rbx
   140009155:	mov    QWORD PTR [rip+0x30ffc],rax        # 0x14003a158
   14000915c:	call   QWORD PTR [rip+0x1df36]        # 0x140027098
   140009162:	xor    rax,QWORD PTR [rip+0x2d8d7]        # 0x140036a40
   140009169:	mov    QWORD PTR [rip+0x30ff0],rax        # 0x14003a160
   140009170:	add    rsp,0x20
   140009174:	pop    rbx
   140009175:	ret    
   140009176:	int3   
   140009177:	int3   
   140009178:	sub    rsp,0x28
   14000917c:	mov    rax,QWORD PTR [rip+0x30fdd]        # 0x14003a160
   140009183:	xor    rax,QWORD PTR [rip+0x2d8b6]        # 0x140036a40
   14000918a:	je     0x140009193
   14000918c:	add    rsp,0x28
   140009190:	rex.W jmp rax
   140009193:	mov    ecx,0x78
   140009198:	call   QWORD PTR [rip+0x1dfaa]        # 0x140027148
   14000919e:	xor    eax,eax
   1400091a0:	add    rsp,0x28
   1400091a4:	ret    
   1400091a5:	int3   
   1400091a6:	int3   
   1400091a7:	int3   
   1400091a8:	mov    rax,QWORD PTR [rip+0x30ee9]        # 0x14003a098
   1400091af:	xor    rax,QWORD PTR [rip+0x2d88a]        # 0x140036a40
   1400091b6:	je     0x1400091bb
   1400091b8:	rex.W jmp rax
   1400091bb:	xor    eax,eax
   1400091bd:	ret    
   1400091be:	int3   
   1400091bf:	int3   
   1400091c0:	sub    rsp,0x28
   1400091c4:	mov    rax,QWORD PTR [rip+0x30edd]        # 0x14003a0a8
   1400091cb:	xor    rax,QWORD PTR [rip+0x2d86e]        # 0x140036a40
   1400091d2:	je     0x1400091d6
   1400091d4:	call   rax
   1400091d6:	add    rsp,0x28
   1400091da:	ret    
   1400091db:	int3   
   1400091dc:	sub    rsp,0x28
   1400091e0:	mov    rax,QWORD PTR [rip+0x30ee1]        # 0x14003a0c8
   1400091e7:	xor    rax,QWORD PTR [rip+0x2d852]        # 0x140036a40
   1400091ee:	je     0x1400091f2
   1400091f0:	call   rax
   1400091f2:	add    rsp,0x28
   1400091f6:	ret    
   1400091f7:	int3   
   1400091f8:	rex.W jmp QWORD PTR [rip+0x1df41]        # 0x140027140
   1400091ff:	int3   
   140009200:	rex.W jmp QWORD PTR [rip+0x1df59]        # 0x140027160
   140009207:	int3   
   140009208:	rex push rbx
   14000920a:	sub    rsp,0x20
   14000920e:	mov    ebx,ecx
   140009210:	call   QWORD PTR [rip+0x1df52]        # 0x140027168
   140009216:	mov    edx,ebx
   140009218:	mov    rcx,rax
   14000921b:	add    rsp,0x20
   14000921f:	pop    rbx
   140009220:	rex.W jmp QWORD PTR [rip+0x1df49]        # 0x140027170
   140009227:	int3   
   140009228:	rex push rbx
   14000922a:	sub    rsp,0x20
   14000922e:	mov    rbx,rcx
   140009231:	xor    ecx,ecx
   140009233:	call   QWORD PTR [rip+0x1df07]        # 0x140027140
   140009239:	mov    rcx,rbx
   14000923c:	add    rsp,0x20
   140009240:	pop    rbx
   140009241:	rex.W jmp QWORD PTR [rip+0x1def0]        # 0x140027138
   140009248:	sub    rsp,0x28
   14000924c:	mov    rax,QWORD PTR [rip+0x30e5d]        # 0x14003a0b0
   140009253:	xor    rax,QWORD PTR [rip+0x2d7e6]        # 0x140036a40
   14000925a:	je     0x14000925e
   14000925c:	call   rax
   14000925e:	add    rsp,0x28
   140009262:	ret    
   140009263:	int3   
   140009264:	sub    rsp,0x28
   140009268:	mov    ecx,0x3
   14000926d:	call   0x14000ec08
   140009272:	cmp    eax,0x1
   140009275:	je     0x14000928e
   140009277:	mov    ecx,0x3
   14000927c:	call   0x14000ec08
   140009281:	test   eax,eax
   140009283:	jne    0x1400092a2
   140009285:	cmp    DWORD PTR [rip+0x2ed34],0x1        # 0x140037fc0
   14000928c:	jne    0x1400092a2
   14000928e:	mov    ecx,0xfc
   140009293:	call   0x1400092d8
   140009298:	mov    ecx,0xff
   14000929d:	call   0x1400092d8
   1400092a2:	add    rsp,0x28
   1400092a6:	ret    
   1400092a7:	int3   
   1400092a8:	lea    r9,[rip+0x20a81]        # 0x140029d30
   1400092af:	xor    edx,edx
   1400092b1:	mov    r8,r9
   1400092b4:	cmp    ecx,DWORD PTR [r8]
   1400092b7:	je     0x1400092cb
   1400092b9:	inc    edx
   1400092bb:	add    r8,0x10
   1400092bf:	movsxd rax,edx
   1400092c2:	cmp    rax,0x17
   1400092c6:	jb     0x1400092b4
   1400092c8:	xor    eax,eax
   1400092ca:	ret    
   1400092cb:	movsxd rax,edx
   1400092ce:	add    rax,rax
   1400092d1:	mov    rax,QWORD PTR [r9+rax*8+0x8]
   1400092d6:	ret    
   1400092d7:	int3   
   1400092d8:	mov    QWORD PTR [rsp+0x10],rbx
   1400092dd:	mov    QWORD PTR [rsp+0x18],rbp
   1400092e2:	mov    QWORD PTR [rsp+0x20],rsi
   1400092e7:	push   rdi
   1400092e8:	push   r14
   1400092ea:	push   r15
   1400092ec:	sub    rsp,0x250
   1400092f3:	mov    rax,QWORD PTR [rip+0x2d746]        # 0x140036a40
   1400092fa:	xor    rax,rsp
   1400092fd:	mov    QWORD PTR [rsp+0x240],rax
   140009305:	mov    edi,ecx
   140009307:	call   0x1400092a8
   14000930c:	xor    esi,esi
   14000930e:	mov    rbx,rax
   140009311:	test   rax,rax
   140009314:	je     0x1400094b3
   14000931a:	lea    ecx,[rsi+0x3]
   14000931d:	call   0x14000ec08
   140009322:	cmp    eax,0x1
   140009325:	je     0x140009448
   14000932b:	lea    ecx,[rsi+0x3]
   14000932e:	call   0x14000ec08
   140009333:	test   eax,eax
   140009335:	jne    0x140009344
   140009337:	cmp    DWORD PTR [rip+0x2ec82],0x1        # 0x140037fc0
   14000933e:	je     0x140009448
   140009344:	cmp    edi,0xfc
   14000934a:	je     0x1400094b3
   140009350:	lea    rbp,[rip+0x2ec79]        # 0x140037fd0
   140009357:	mov    r15d,0x314
   14000935d:	lea    r8,[rip+0x2146c]        # 0x14002a7d0
   140009364:	mov    rcx,rbp
   140009367:	mov    edx,r15d
   14000936a:	call   0x14000f934
   14000936f:	xor    ecx,ecx
   140009371:	test   eax,eax
   140009373:	jne    0x140009534
   140009379:	lea    r14,[rip+0x2ec82]        # 0x140038002
   140009380:	mov    r8d,0x104
   140009386:	mov    WORD PTR [rip+0x2ee7d],si        # 0x14003820a
   14000938d:	mov    rdx,r14
   140009390:	call   QWORD PTR [rip+0x1de32]        # 0x1400271c8
   140009396:	lea    edi,[r15-0x19]
   14000939a:	test   eax,eax
   14000939c:	jne    0x1400093b7
   14000939e:	lea    r8,[rip+0x21463]        # 0x14002a808
   1400093a5:	mov    edx,edi
   1400093a7:	mov    rcx,r14
   1400093aa:	call   0x14000f934
   1400093af:	test   eax,eax
   1400093b1:	jne    0x1400094e0
   1400093b7:	mov    rcx,r14
   1400093ba:	call   0x14000f9a0
   1400093bf:	inc    rax
   1400093c2:	cmp    rax,0x3c
   1400093c6:	jbe    0x140009401
   1400093c8:	mov    rcx,r14
   1400093cb:	call   0x14000f9a0
   1400093d0:	lea    rcx,[rbp-0x44]
   1400093d4:	lea    r8,[rip+0x2145d]        # 0x14002a838
   1400093db:	lea    rcx,[rcx+rax*2]
   1400093df:	mov    r9d,0x3
   1400093e5:	mov    rax,rcx
   1400093e8:	sub    rax,r14
   1400093eb:	sar    rax,1
   1400093ee:	sub    rdi,rax
   1400093f1:	mov    rdx,rdi
   1400093f4:	call   0x14000f9bc
   1400093f9:	test   eax,eax
   1400093fb:	jne    0x1400094f5
   140009401:	lea    r8,[rip+0x21438]        # 0x14002a840
   140009408:	mov    rdx,r15
   14000940b:	mov    rcx,rbp
   14000940e:	call   0x14000f8ac
   140009413:	test   eax,eax
   140009415:	jne    0x14000951f
   14000941b:	mov    r8,rbx
   14000941e:	mov    rdx,r15
   140009421:	mov    rcx,rbp
   140009424:	call   0x14000f8ac
   140009429:	test   eax,eax
   14000942b:	jne    0x14000950a
   140009431:	lea    rdx,[rip+0x21418]        # 0x14002a850
   140009438:	mov    r8d,0x12010
   14000943e:	mov    rcx,rbp
   140009441:	call   0x14000fa88
   140009446:	jmp    0x1400094b3
   140009448:	mov    ecx,0xfffffff4
   14000944d:	call   QWORD PTR [rip+0x1dd65]        # 0x1400271b8
   140009453:	mov    rdi,rax
   140009456:	lea    rcx,[rax-0x1]
   14000945a:	cmp    rcx,0xfffffffffffffffd
   14000945e:	ja     0x1400094b3
   140009460:	mov    r8d,esi
   140009463:	lea    rdx,[rsp+0x40]
   140009468:	mov    cl,BYTE PTR [rbx]
   14000946a:	mov    BYTE PTR [rdx],cl
   14000946c:	cmp    WORD PTR [rbx],si
   14000946f:	je     0x140009486
   140009471:	inc    r8d
   140009474:	inc    rdx
   140009477:	add    rbx,0x2
   14000947b:	movsxd rax,r8d
   14000947e:	cmp    rax,0x1f4
   140009484:	jb     0x140009468
   140009486:	lea    rcx,[rsp+0x40]
   14000948b:	mov    BYTE PTR [rsp+0x233],sil
   140009493:	call   0x140007730
   140009498:	lea    r9,[rsp+0x30]
   14000949d:	lea    rdx,[rsp+0x40]
   1400094a2:	mov    rcx,rdi
   1400094a5:	mov    r8,rax
   1400094a8:	mov    QWORD PTR [rsp+0x20],rsi
   1400094ad:	call   QWORD PTR [rip+0x1dd0d]        # 0x1400271c0
   1400094b3:	mov    rcx,QWORD PTR [rsp+0x240]
   1400094bb:	xor    rcx,rsp
   1400094be:	call   0x14000d0a0
   1400094c3:	lea    r11,[rsp+0x250]
   1400094cb:	mov    rbx,QWORD PTR [r11+0x28]
   1400094cf:	mov    rbp,QWORD PTR [r11+0x30]
   1400094d3:	mov    rsi,QWORD PTR [r11+0x38]
   1400094d7:	mov    rsp,r11
   1400094da:	pop    r15
   1400094dc:	pop    r14
   1400094de:	pop    rdi
   1400094df:	ret    
   1400094e0:	xor    r9d,r9d
   1400094e3:	xor    r8d,r8d
   1400094e6:	xor    edx,edx
   1400094e8:	xor    ecx,ecx
   1400094ea:	mov    QWORD PTR [rsp+0x20],rsi
   1400094ef:	call   0x140008678
   1400094f4:	int3   
   1400094f5:	xor    r9d,r9d
   1400094f8:	xor    r8d,r8d
   1400094fb:	xor    edx,edx
   1400094fd:	xor    ecx,ecx
   1400094ff:	mov    QWORD PTR [rsp+0x20],rsi
   140009504:	call   0x140008678
   140009509:	int3   
   14000950a:	xor    r9d,r9d
   14000950d:	xor    r8d,r8d
   140009510:	xor    edx,edx
   140009512:	xor    ecx,ecx
   140009514:	mov    QWORD PTR [rsp+0x20],rsi
   140009519:	call   0x140008678
   14000951e:	int3   
   14000951f:	xor    r9d,r9d
   140009522:	xor    r8d,r8d
   140009525:	xor    edx,edx
   140009527:	xor    ecx,ecx
   140009529:	mov    QWORD PTR [rsp+0x20],rsi
   14000952e:	call   0x140008678
   140009533:	int3   
   140009534:	xor    r9d,r9d
   140009537:	xor    r8d,r8d
   14000953a:	xor    edx,edx
   14000953c:	mov    QWORD PTR [rsp+0x20],rsi
   140009541:	call   0x140008678
   140009546:	int3   
   140009547:	int3   
   140009548:	sub    rsp,0x28
   14000954c:	call   0x14000b1b0
   140009551:	test   rax,rax
   140009554:	jne    0x14000955f
   140009556:	lea    rax,[rip+0x2cf4f]        # 0x1400364ac
   14000955d:	jmp    0x140009563
   14000955f:	add    rax,0x14
   140009563:	add    rsp,0x28
   140009567:	ret    
   140009568:	mov    QWORD PTR [rsp+0x8],rbx
   14000956d:	push   rdi
   14000956e:	sub    rsp,0x20
   140009572:	mov    edi,ecx
   140009574:	call   0x14000b1b0
   140009579:	test   rax,rax
   14000957c:	jne    0x140009587
   14000957e:	lea    rax,[rip+0x2cf27]        # 0x1400364ac
   140009585:	jmp    0x14000958b
   140009587:	add    rax,0x14
   14000958b:	mov    DWORD PTR [rax],edi
   14000958d:	call   0x14000b1b0
   140009592:	lea    rbx,[rip+0x2cf0f]        # 0x1400364a8
   140009599:	test   rax,rax
   14000959c:	je     0x1400095a2
   14000959e:	lea    rbx,[rax+0x10]
   1400095a2:	mov    ecx,edi
   1400095a4:	call   0x140009650
   1400095a9:	mov    DWORD PTR [rbx],eax
   1400095ab:	mov    rbx,QWORD PTR [rsp+0x30]
   1400095b0:	add    rsp,0x20
   1400095b4:	pop    rdi
   1400095b5:	ret    
   1400095b6:	int3   
   1400095b7:	int3   
   1400095b8:	sub    rsp,0x28
   1400095bc:	call   0x14000b1b0
   1400095c1:	test   rax,rax
   1400095c4:	jne    0x1400095cf
   1400095c6:	lea    rax,[rip+0x2cedb]        # 0x1400364a8
   1400095cd:	jmp    0x1400095d3
   1400095cf:	add    rax,0x10
   1400095d3:	add    rsp,0x28
   1400095d7:	ret    
   1400095d8:	rex push rbx
   1400095da:	sub    rsp,0x20
   1400095de:	mov    rbx,rcx
   1400095e1:	test   rcx,rcx
   1400095e4:	jne    0x1400095f0
   1400095e6:	call   0x140008628
   1400095eb:	lea    eax,[rbx+0x16]
   1400095ee:	jmp    0x14000960d
   1400095f0:	call   0x14000b1b0
   1400095f5:	test   rax,rax
   1400095f8:	jne    0x140009603
   1400095fa:	lea    rax,[rip+0x2ceab]        # 0x1400364ac
   140009601:	jmp    0x140009607
   140009603:	add    rax,0x14
   140009607:	mov    eax,DWORD PTR [rax]
   140009609:	mov    DWORD PTR [rbx],eax
   14000960b:	xor    eax,eax
   14000960d:	add    rsp,0x20
   140009611:	pop    rbx
   140009612:	ret    
   140009613:	int3   
   140009614:	rex push rbx
   140009616:	sub    rsp,0x20
   14000961a:	mov    rbx,rcx
   14000961d:	test   rcx,rcx
   140009620:	jne    0x14000962c
   140009622:	call   0x140008628
   140009627:	lea    eax,[rbx+0x16]
   14000962a:	jmp    0x140009649
   14000962c:	call   0x14000b1b0
   140009631:	test   rax,rax
   140009634:	jne    0x14000963f
   140009636:	lea    rax,[rip+0x2ce6b]        # 0x1400364a8
   14000963d:	jmp    0x140009643
   14000963f:	add    rax,0x10
   140009643:	mov    eax,DWORD PTR [rax]
   140009645:	mov    DWORD PTR [rbx],eax
   140009647:	xor    eax,eax
   140009649:	add    rsp,0x20
   14000964d:	pop    rbx
   14000964e:	ret    
   14000964f:	int3   
   140009650:	lea    r10,[rip+0x2cce9]        # 0x140036340
   140009657:	xor    edx,edx
   140009659:	mov    r8,r10
   14000965c:	lea    r9d,[rdx+0x8]
   140009660:	cmp    ecx,DWORD PTR [r8]
   140009663:	je     0x140009694
   140009665:	inc    edx
   140009667:	add    r8,r9
   14000966a:	movsxd rax,edx
   14000966d:	cmp    rax,0x2d
   140009671:	jb     0x140009660
   140009673:	lea    eax,[rcx-0x13]
   140009676:	cmp    eax,0x11
   140009679:	ja     0x140009681
   14000967b:	mov    eax,0xd
   140009680:	ret    
   140009681:	add    ecx,0xffffff44
   140009687:	mov    eax,0x16
   14000968c:	cmp    ecx,0xe
   14000968f:	cmovbe eax,r9d
   140009693:	ret    
   140009694:	movsxd rax,edx
   140009697:	mov    eax,DWORD PTR [r10+rax*8+0x4]
   14000969c:	ret    
   14000969d:	int3   
   14000969e:	int3   
   14000969f:	int3   
   1400096a0:	rex push rbx
   1400096a2:	sub    rsp,0x20
   1400096a6:	mov    ebx,ecx
   1400096a8:	call   0x14000b1b0
   1400096ad:	test   rax,rax
   1400096b0:	jne    0x1400096b9
   1400096b2:	mov    eax,0xc
   1400096b7:	jmp    0x1400096d4
   1400096b9:	call   0x14000b1b0
   1400096be:	test   rax,rax
   1400096c1:	jne    0x1400096cc
   1400096c3:	lea    rax,[rip+0x2cde2]        # 0x1400364ac
   1400096ca:	jmp    0x1400096d0
   1400096cc:	add    rax,0x14
   1400096d0:	mov    DWORD PTR [rax],ebx
   1400096d2:	xor    eax,eax
   1400096d4:	add    rsp,0x20
   1400096d8:	pop    rbx
   1400096d9:	ret    
   1400096da:	int3   
   1400096db:	int3   
   1400096dc:	rex push rbx
   1400096de:	sub    rsp,0x20
   1400096e2:	mov    ebx,ecx
   1400096e4:	call   0x14000b1b0
   1400096e9:	test   rax,rax
   1400096ec:	jne    0x1400096f5
   1400096ee:	mov    eax,0xc
   1400096f3:	jmp    0x140009710
   1400096f5:	call   0x14000b1b0
   1400096fa:	test   rax,rax
   1400096fd:	jne    0x140009708
   1400096ff:	lea    rax,[rip+0x2cda2]        # 0x1400364a8
   140009706:	jmp    0x14000970c
   140009708:	add    rax,0x10
   14000970c:	mov    DWORD PTR [rax],ebx
   14000970e:	xor    eax,eax
   140009710:	add    rsp,0x20
   140009714:	pop    rbx
   140009715:	ret    
   140009716:	int3   
   140009717:	int3   
   140009718:	int3   
   140009719:	int3   
   14000971a:	int3   
   14000971b:	int3   
   14000971c:	int3   
   14000971d:	int3   
   14000971e:	int3   
   14000971f:	int3   
   140009720:	movsxd r8,DWORD PTR [rcx+0x3c]
   140009724:	xor    r9d,r9d
   140009727:	mov    r10,rdx
   14000972a:	add    r8,rcx
   14000972d:	movzx  eax,WORD PTR [r8+0x14]
   140009732:	movzx  r11d,WORD PTR [r8+0x6]
   140009737:	add    rax,0x18
   14000973b:	add    rax,r8
   14000973e:	test   r11d,r11d
   140009741:	je     0x140009761
   140009743:	mov    edx,DWORD PTR [rax+0xc]
   140009746:	cmp    r10,rdx
   140009749:	jb     0x140009755
   14000974b:	mov    ecx,DWORD PTR [rax+0x8]
   14000974e:	add    ecx,edx
   140009750:	cmp    r10,rcx
   140009753:	jb     0x140009763
   140009755:	inc    r9d
   140009758:	add    rax,0x28
   14000975c:	cmp    r9d,r11d
   14000975f:	jb     0x140009743
   140009761:	xor    eax,eax
   140009763:	ret    
   140009764:	int3   
   140009765:	int3   
   140009766:	int3   
   140009767:	int3   
   140009768:	int3   
   140009769:	int3   
   14000976a:	int3   
   14000976b:	int3   
   14000976c:	int3   
   14000976d:	int3   
   14000976e:	int3   
   14000976f:	int3   
   140009770:	mov    QWORD PTR [rsp+0x8],rbx
   140009775:	push   rdi
   140009776:	sub    rsp,0x20
   14000977a:	mov    rbx,rcx
   14000977d:	lea    rdi,[rip+0xffffffffffff687c]        # 0x140000000
   140009784:	mov    rcx,rdi
   140009787:	call   0x1400097c0
   14000978c:	test   eax,eax
   14000978e:	je     0x1400097b2
   140009790:	sub    rbx,rdi
   140009793:	mov    rdx,rbx
   140009796:	mov    rcx,rdi
   140009799:	call   0x140009720
   14000979e:	test   rax,rax
   1400097a1:	je     0x1400097b2
   1400097a3:	mov    eax,DWORD PTR [rax+0x24]
   1400097a6:	shr    eax,0x1f
   1400097a9:	not    eax
   1400097ab:	and    eax,0x1
   1400097ae:	jmp    0x1400097b2
   1400097b0:	xor    eax,eax
   1400097b2:	mov    rbx,QWORD PTR [rsp+0x30]
   1400097b7:	add    rsp,0x20
   1400097bb:	pop    rdi
   1400097bc:	ret    
   1400097bd:	int3   
   1400097be:	int3   
   1400097bf:	int3   
   1400097c0:	mov    rax,rcx
   1400097c3:	mov    ecx,0x5a4d
   1400097c8:	cmp    WORD PTR [rax],cx
   1400097cb:	je     0x1400097d0
   1400097cd:	xor    eax,eax
   1400097cf:	ret    
   1400097d0:	movsxd rcx,DWORD PTR [rax+0x3c]
   1400097d4:	add    rcx,rax
   1400097d7:	xor    eax,eax
   1400097d9:	cmp    DWORD PTR [rcx],0x4550
   1400097df:	jne    0x1400097ed
   1400097e1:	mov    edx,0x20b
   1400097e6:	cmp    WORD PTR [rcx+0x18],dx
   1400097ea:	sete   al
   1400097ed:	ret    
   1400097ee:	int3   
   1400097ef:	int3   
   1400097f0:	mov    QWORD PTR [rsp+0x8],rbx
   1400097f5:	push   rdi
   1400097f6:	sub    rsp,0x20
   1400097fa:	xor    edi,edi
   1400097fc:	lea    rbx,[rip+0x2ccad]        # 0x1400364b0
   140009803:	mov    rcx,QWORD PTR [rbx]
   140009806:	call   QWORD PTR [rip+0x1d864]        # 0x140027070
   14000980c:	inc    edi
   14000980e:	mov    QWORD PTR [rbx],rax
   140009811:	movsxd rax,edi
   140009814:	lea    rbx,[rbx+0x8]
   140009818:	cmp    rax,0xa
   14000981c:	jb     0x140009803
   14000981e:	mov    rbx,QWORD PTR [rsp+0x30]
   140009823:	add    rsp,0x20
   140009827:	pop    rdi
   140009828:	ret    
   140009829:	int3   
   14000982a:	int3   
   14000982b:	int3   
   14000982c:	sub    rsp,0x28
   140009830:	mov    rcx,QWORD PTR [rip+0x2edc1]        # 0x1400385f8
   140009837:	call   QWORD PTR [rip+0x1d83b]        # 0x140027078
   14000983d:	test   rax,rax
   140009840:	je     0x140009846
   140009842:	call   rax
   140009844:	jmp    0x140009846
   140009846:	call   0x14000984c
   14000984b:	nop
   14000984c:	sub    rsp,0x28
   140009850:	call   0x14000b18c
   140009855:	mov    rcx,QWORD PTR [rax+0xd0]
   14000985c:	test   rcx,rcx
   14000985f:	je     0x140009865
   140009861:	call   rcx
   140009863:	jmp    0x140009865
   140009865:	call   0x140007b78
   14000986a:	nop
   14000986b:	int3   
   14000986c:	sub    rsp,0x28
   140009870:	call   0x14000b18c
   140009875:	mov    rcx,QWORD PTR [rax+0xd8]
   14000987c:	test   rcx,rcx
   14000987f:	je     0x140009883
   140009881:	call   rcx
   140009883:	call   0x14000984c
   140009888:	int3   
   140009889:	int3   
   14000988a:	int3   
   14000988b:	int3   
   14000988c:	sub    rsp,0x28
   140009890:	lea    rcx,[rip+0xffffffffffffffb5]        # 0x14000984c
   140009897:	call   QWORD PTR [rip+0x1d7d3]        # 0x140027070
   14000989d:	mov    QWORD PTR [rip+0x2ed54],rax        # 0x1400385f8
   1400098a4:	add    rsp,0x28
   1400098a8:	ret    
   1400098a9:	int3   
   1400098aa:	int3   
   1400098ab:	int3   
   1400098ac:	sub    rsp,0x28
   1400098b0:	call   0x14000b18c
   1400098b5:	add    rax,0xb0
   1400098bb:	add    rsp,0x28
   1400098bf:	ret    
   1400098c0:	mov    rcx,QWORD PTR [rip+0x2ed49]        # 0x140038610
   1400098c7:	rex.W jmp QWORD PTR [rip+0x1d7aa]        # 0x140027078
   1400098ce:	int3   
   1400098cf:	int3   
   1400098d0:	sub    rsp,0x28
   1400098d4:	call   0x14000b18c
   1400098d9:	add    rax,0xa8
   1400098df:	add    rsp,0x28
   1400098e3:	ret    
   1400098e4:	mov    QWORD PTR [rip+0x2ed15],rcx        # 0x140038600
   1400098eb:	mov    QWORD PTR [rip+0x2ed16],rcx        # 0x140038608
   1400098f2:	mov    QWORD PTR [rip+0x2ed17],rcx        # 0x140038610
   1400098f9:	mov    QWORD PTR [rip+0x2ed18],rcx        # 0x140038618
   140009900:	ret    
   140009901:	int3   
   140009902:	int3   
   140009903:	int3   
   140009904:	mov    QWORD PTR [rsp+0x8],rbx
   140009909:	mov    QWORD PTR [rsp+0x10],rsi
   14000990e:	push   rdi
   14000990f:	sub    rsp,0x20
   140009913:	mov    ebx,ecx
   140009915:	xor    ecx,ecx
   140009917:	call   0x140008760
   14000991c:	nop
   14000991d:	test   ebx,ebx
   14000991f:	jne    0x14000993a
   140009921:	lea    rdi,[rip+0x2ecd8]        # 0x140038600
   140009928:	mov    rcx,QWORD PTR [rip+0x2ecd1]        # 0x140038600
   14000992f:	call   QWORD PTR [rip+0x1d743]        # 0x140027078
   140009935:	lea    esi,[rbx+0x2]
   140009938:	jmp    0x140009953
   14000993a:	lea    rdi,[rip+0x2ecc7]        # 0x140038608
   140009941:	mov    rcx,QWORD PTR [rip+0x2ecc0]        # 0x140038608
   140009948:	call   QWORD PTR [rip+0x1d72a]        # 0x140027078
   14000994e:	mov    esi,0x15
   140009953:	mov    rbx,rax
   140009956:	cmp    rax,0x2
   14000995a:	jb     0x140009967
   14000995c:	xor    ecx,ecx
   14000995e:	call   QWORD PTR [rip+0x1d70c]        # 0x140027070
   140009964:	mov    QWORD PTR [rdi],rax
   140009967:	xor    ecx,ecx
   140009969:	call   0x14000897c
   14000996e:	test   rbx,rbx
   140009971:	jne    0x140009977
   140009973:	xor    eax,eax
   140009975:	jmp    0x140009986
   140009977:	cmp    rbx,0x1
   14000997b:	je     0x140009981
   14000997d:	mov    ecx,esi
   14000997f:	call   rbx
   140009981:	mov    eax,0x1
   140009986:	mov    rbx,QWORD PTR [rsp+0x30]
   14000998b:	mov    rsi,QWORD PTR [rsp+0x38]
   140009990:	add    rsp,0x20
   140009994:	pop    rdi
   140009995:	ret    
   140009996:	int3   
   140009997:	int3   
   140009998:	mov    QWORD PTR [rsp+0x18],rbx
   14000999d:	mov    QWORD PTR [rsp+0x20],rsi
   1400099a2:	push   rdi
   1400099a3:	push   r12
   1400099a5:	push   r13
   1400099a7:	push   r14
   1400099a9:	push   r15
   1400099ab:	sub    rsp,0x30
   1400099af:	mov    ebx,ecx
   1400099b1:	xor    r13d,r13d
   1400099b4:	and    DWORD PTR [rsp+0x68],r13d
   1400099b9:	xor    edi,edi
   1400099bb:	mov    DWORD PTR [rsp+0x60],edi
   1400099bf:	xor    esi,esi
   1400099c1:	mov    edx,ecx
   1400099c3:	sub    edx,0x2
   1400099c6:	je     0x140009a90
   1400099cc:	sub    edx,0x2
   1400099cf:	je     0x140009a33
   1400099d1:	sub    edx,0x2
   1400099d4:	je     0x140009a23
   1400099d6:	sub    edx,0x2
   1400099d9:	je     0x140009a33
   1400099db:	sub    edx,0x3
   1400099de:	je     0x140009a33
   1400099e0:	sub    edx,0x4
   1400099e3:	je     0x140009a13
   1400099e5:	sub    edx,0x6
   1400099e8:	je     0x140009a00
   1400099ea:	dec    edx
   1400099ec:	je     0x140009a23
   1400099ee:	call   0x1400095b8
   1400099f3:	mov    DWORD PTR [rax],0x16
   1400099f9:	call   0x140008628
   1400099fe:	jmp    0x140009a40
   140009a00:	lea    r14,[rip+0x2ec01]        # 0x140038608
   140009a07:	mov    rcx,QWORD PTR [rip+0x2ebfa]        # 0x140038608
   140009a0e:	jmp    0x140009a9e
   140009a13:	lea    r14,[rip+0x2ebfe]        # 0x140038618
   140009a1a:	mov    rcx,QWORD PTR [rip+0x2ebf7]        # 0x140038618
   140009a21:	jmp    0x140009a9e
   140009a23:	lea    r14,[rip+0x2ebe6]        # 0x140038610
   140009a2a:	mov    rcx,QWORD PTR [rip+0x2ebdf]        # 0x140038610
   140009a31:	jmp    0x140009a9e
   140009a33:	call   0x14000b1b0
   140009a38:	mov    rsi,rax
   140009a3b:	test   rax,rax
   140009a3e:	jne    0x140009a48
   140009a40:	or     eax,0xffffffff
   140009a43:	jmp    0x140009bb3
   140009a48:	mov    rdx,QWORD PTR [rax+0xa0]
   140009a4f:	mov    rcx,rdx
   140009a52:	movsxd r8,DWORD PTR [rip+0x20fe7]        # 0x14002aa40
   140009a59:	cmp    DWORD PTR [rcx+0x4],ebx
   140009a5c:	je     0x140009a71
   140009a5e:	add    rcx,0x10
   140009a62:	mov    rax,r8
   140009a65:	shl    rax,0x4
   140009a69:	add    rax,rdx
   140009a6c:	cmp    rcx,rax
   140009a6f:	jb     0x140009a59
   140009a71:	mov    rax,r8
   140009a74:	shl    rax,0x4
   140009a78:	add    rax,rdx
   140009a7b:	cmp    rcx,rax
   140009a7e:	jae    0x140009a85
   140009a80:	cmp    DWORD PTR [rcx+0x4],ebx
   140009a83:	je     0x140009a87
   140009a85:	xor    ecx,ecx
   140009a87:	lea    r14,[rcx+0x8]
   140009a8b:	mov    r15,QWORD PTR [r14]
   140009a8e:	jmp    0x140009ab0
   140009a90:	lea    r14,[rip+0x2eb69]        # 0x140038600
   140009a97:	mov    rcx,QWORD PTR [rip+0x2eb62]        # 0x140038600
   140009a9e:	mov    edi,0x1
   140009aa3:	mov    DWORD PTR [rsp+0x60],edi
   140009aa7:	call   QWORD PTR [rip+0x1d5cb]        # 0x140027078
   140009aad:	mov    r15,rax
   140009ab0:	cmp    r15,0x1
   140009ab4:	jne    0x140009abd
   140009ab6:	xor    eax,eax
   140009ab8:	jmp    0x140009bb3
   140009abd:	test   r15,r15
   140009ac0:	jne    0x140009acc
   140009ac2:	lea    ecx,[r15+0x3]
   140009ac6:	call   0x1400060d4
   140009acb:	int3   
   140009acc:	test   edi,edi
   140009ace:	je     0x140009ad8
   140009ad0:	xor    ecx,ecx
   140009ad2:	call   0x140008760
   140009ad7:	nop
   140009ad8:	mov    r12d,0x910
   140009ade:	cmp    ebx,0xb
   140009ae1:	ja     0x140009b16
   140009ae3:	bt     r12d,ebx
   140009ae7:	jae    0x140009b16
   140009ae9:	mov    r13,QWORD PTR [rsi+0xa8]
   140009af0:	mov    QWORD PTR [rsp+0x28],r13
   140009af5:	and    QWORD PTR [rsi+0xa8],0x0
   140009afd:	cmp    ebx,0x8
   140009b00:	jne    0x140009b54
   140009b02:	mov    eax,DWORD PTR [rsi+0xb0]
   140009b08:	mov    DWORD PTR [rsp+0x68],eax
   140009b0c:	mov    DWORD PTR [rsi+0xb0],0x8c
   140009b16:	cmp    ebx,0x8
   140009b19:	jne    0x140009b54
   140009b1b:	mov    ecx,DWORD PTR [rip+0x20f27]        # 0x14002aa48
   140009b21:	mov    edx,ecx
   140009b23:	mov    DWORD PTR [rsp+0x20],ecx
   140009b27:	mov    eax,DWORD PTR [rip+0x20f1f]        # 0x14002aa4c
   140009b2d:	add    ecx,eax
   140009b2f:	cmp    edx,ecx
   140009b31:	jge    0x140009b5f
   140009b33:	movsxd rcx,edx
   140009b36:	add    rcx,rcx
   140009b39:	mov    rax,QWORD PTR [rsi+0xa0]
   140009b40:	and    QWORD PTR [rax+rcx*8+0x8],0x0
   140009b46:	inc    edx
   140009b48:	mov    DWORD PTR [rsp+0x20],edx
   140009b4c:	mov    ecx,DWORD PTR [rip+0x20ef6]        # 0x14002aa48
   140009b52:	jmp    0x140009b27
   140009b54:	xor    ecx,ecx
   140009b56:	call   QWORD PTR [rip+0x1d514]        # 0x140027070
   140009b5c:	mov    QWORD PTR [r14],rax
   140009b5f:	test   edi,edi
   140009b61:	je     0x140009b6a
   140009b63:	xor    ecx,ecx
   140009b65:	call   0x14000897c
   140009b6a:	cmp    ebx,0x8
   140009b6d:	jne    0x140009b7c
   140009b6f:	mov    edx,DWORD PTR [rsi+0xb0]
   140009b75:	mov    ecx,ebx
   140009b77:	call   r15
   140009b7a:	jmp    0x140009b81
   140009b7c:	mov    ecx,ebx
   140009b7e:	call   r15
   140009b81:	cmp    ebx,0xb
   140009b84:	ja     0x140009ab6
   140009b8a:	bt     r12d,ebx
   140009b8e:	jae    0x140009ab6
   140009b94:	mov    QWORD PTR [rsi+0xa8],r13
   140009b9b:	cmp    ebx,0x8
   140009b9e:	jne    0x140009ab6
   140009ba4:	mov    eax,DWORD PTR [rsp+0x68]
   140009ba8:	mov    DWORD PTR [rsi+0xb0],eax
   140009bae:	jmp    0x140009ab6
   140009bb3:	mov    rbx,QWORD PTR [rsp+0x70]
   140009bb8:	mov    rsi,QWORD PTR [rsp+0x78]
   140009bbd:	add    rsp,0x30
   140009bc1:	pop    r15
   140009bc3:	pop    r14
   140009bc5:	pop    r13
   140009bc7:	pop    r12
   140009bc9:	pop    rdi
   140009bca:	ret    
   140009bcb:	int3   
   140009bcc:	mov    r9d,ecx
   140009bcf:	movsxd rcx,DWORD PTR [rip+0x20e6a]        # 0x14002aa40
   140009bd6:	mov    rax,rdx
   140009bd9:	cmp    DWORD PTR [rax+0x4],r9d
   140009bdd:	je     0x140009bf2
   140009bdf:	mov    r8,rcx
   140009be2:	add    rax,0x10
   140009be6:	shl    r8,0x4
   140009bea:	add    r8,rdx
   140009bed:	cmp    rax,r8
   140009bf0:	jb     0x140009bd9
   140009bf2:	shl    rcx,0x4
   140009bf6:	add    rcx,rdx
   140009bf9:	cmp    rax,rcx
   140009bfc:	jae    0x140009c04
   140009bfe:	cmp    DWORD PTR [rax+0x4],r9d
   140009c02:	je     0x140009c06
   140009c04:	xor    eax,eax
   140009c06:	ret    
   140009c07:	int3   
   140009c08:	mov    QWORD PTR [rsp+0x8],rbx
   140009c0d:	mov    QWORD PTR [rsp+0x10],rsi
   140009c12:	mov    QWORD PTR [rsp+0x18],rdi
   140009c17:	push   r14
   140009c19:	sub    rsp,0x20
   140009c1d:	mov    rsi,rdx
   140009c20:	mov    edi,ecx
   140009c22:	xor    r14d,r14d
   140009c25:	xor    ebx,ebx
   140009c27:	lea    rax,[rdx-0x3]
   140009c2b:	cmp    rax,0x1
   140009c2f:	jbe    0x140009e5a
   140009c35:	cmp    ecx,0x16
   140009c38:	ja     0x140009d74
   140009c3e:	mov    eax,0x608044
   140009c43:	bt     eax,ecx
   140009c46:	jae    0x140009d74
   140009c4c:	xor    ecx,ecx
   140009c4e:	call   0x140008760
   140009c53:	nop
   140009c54:	cmp    edi,0x2
   140009c57:	je     0x140009c5e
   140009c59:	cmp    edi,0x15
   140009c5c:	jne    0x140009c9b
   140009c5e:	cmp    DWORD PTR [rip+0x2e9bb],0x0        # 0x140038620
   140009c65:	jne    0x140009c9b
   140009c67:	mov    edx,0x1
   140009c6c:	lea    rcx,[rip+0xfffffffffffffc91]        # 0x140009904
   140009c73:	call   QWORD PTR [rip+0x1d557]        # 0x1400271d0
   140009c79:	cmp    eax,0x1
   140009c7c:	jne    0x140009c86
   140009c7e:	mov    DWORD PTR [rip+0x2e99c],eax        # 0x140038620
   140009c84:	jmp    0x140009c9b
   140009c86:	call   0x140009548
   140009c8b:	mov    rbx,rax
   140009c8e:	call   QWORD PTR [rip+0x1d3ec]        # 0x140027080
   140009c94:	mov    DWORD PTR [rbx],eax
   140009c96:	mov    ebx,0x1
   140009c9b:	mov    ecx,edi
   140009c9d:	sub    ecx,0x2
   140009ca0:	je     0x140009d3a
   140009ca6:	sub    ecx,0x4
   140009ca9:	je     0x140009d12
   140009cab:	sub    ecx,0x9
   140009cae:	je     0x140009cea
   140009cb0:	sub    ecx,0x6
   140009cb3:	je     0x140009cbe
   140009cb5:	dec    ecx
   140009cb7:	je     0x140009d12
   140009cb9:	jmp    0x140009d60
   140009cbe:	mov    rcx,QWORD PTR [rip+0x2e943]        # 0x140038608
   140009cc5:	call   QWORD PTR [rip+0x1d3ad]        # 0x140027078
   140009ccb:	mov    r14,rax
   140009cce:	cmp    rsi,0x2
   140009cd2:	je     0x140009d60
   140009cd8:	mov    rcx,rsi
   140009cdb:	call   QWORD PTR [rip+0x1d38f]        # 0x140027070
   140009ce1:	mov    QWORD PTR [rip+0x2e920],rax        # 0x140038608
   140009ce8:	jmp    0x140009d60
   140009cea:	mov    rcx,QWORD PTR [rip+0x2e927]        # 0x140038618
   140009cf1:	call   QWORD PTR [rip+0x1d381]        # 0x140027078
   140009cf7:	mov    r14,rax
   140009cfa:	cmp    rsi,0x2
   140009cfe:	je     0x140009d60
   140009d00:	mov    rcx,rsi
   140009d03:	call   QWORD PTR [rip+0x1d367]        # 0x140027070
   140009d09:	mov    QWORD PTR [rip+0x2e908],rax        # 0x140038618
   140009d10:	jmp    0x140009d60
   140009d12:	mov    rcx,QWORD PTR [rip+0x2e8f7]        # 0x140038610
   140009d19:	call   QWORD PTR [rip+0x1d359]        # 0x140027078
   140009d1f:	mov    r14,rax
   140009d22:	cmp    rsi,0x2
   140009d26:	je     0x140009d60
   140009d28:	mov    rcx,rsi
   140009d2b:	call   QWORD PTR [rip+0x1d33f]        # 0x140027070
   140009d31:	mov    QWORD PTR [rip+0x2e8d8],rax        # 0x140038610
   140009d38:	jmp    0x140009d60
   140009d3a:	mov    rcx,QWORD PTR [rip+0x2e8bf]        # 0x140038600
   140009d41:	call   QWORD PTR [rip+0x1d331]        # 0x140027078
   140009d47:	mov    r14,rax
   140009d4a:	cmp    rsi,0x2
   140009d4e:	je     0x140009d60
   140009d50:	mov    rcx,rsi
   140009d53:	call   QWORD PTR [rip+0x1d317]        # 0x140027070
   140009d59:	mov    QWORD PTR [rip+0x2e8a0],rax        # 0x140038600
   140009d60:	xor    ecx,ecx
   140009d62:	call   0x14000897c
   140009d67:	test   ebx,ebx
   140009d69:	jne    0x140009e5a
   140009d6f:	jmp    0x140009e55
   140009d74:	cmp    ecx,0xb
   140009d77:	ja     0x140009e5a
   140009d7d:	mov    eax,0x910
   140009d82:	bt     eax,ecx
   140009d85:	jae    0x140009e5a
   140009d8b:	call   0x14000b1b0
   140009d90:	mov    rbx,rax
   140009d93:	test   rax,rax
   140009d96:	je     0x140009e5a
   140009d9c:	lea    r14,[rip+0x20bdd]        # 0x14002a980
   140009da3:	cmp    QWORD PTR [rax+0xa0],r14
   140009daa:	jne    0x140009dda
   140009dac:	movsxd rcx,DWORD PTR [rip+0x20c91]        # 0x14002aa44
   140009db3:	call   0x140007f54
   140009db8:	mov    QWORD PTR [rbx+0xa0],rax
   140009dbf:	test   rax,rax
   140009dc2:	je     0x140009e5a
   140009dc8:	movsxd r8,DWORD PTR [rip+0x20c75]        # 0x14002aa44
   140009dcf:	mov    rdx,r14
   140009dd2:	mov    rcx,rax
   140009dd5:	call   0x1400056d0
   140009dda:	mov    rdx,QWORD PTR [rbx+0xa0]
   140009de1:	mov    rcx,rdx
   140009de4:	movsxd r8,DWORD PTR [rip+0x20c55]        # 0x14002aa40
   140009deb:	cmp    DWORD PTR [rcx+0x4],edi
   140009dee:	je     0x140009e03
   140009df0:	add    rcx,0x10
   140009df4:	mov    rax,r8
   140009df7:	shl    rax,0x4
   140009dfb:	add    rax,rdx
   140009dfe:	cmp    rcx,rax
   140009e01:	jb     0x140009deb
   140009e03:	mov    rax,r8
   140009e06:	shl    rax,0x4
   140009e0a:	add    rax,rdx
   140009e0d:	cmp    rcx,rax
   140009e10:	jae    0x140009e17
   140009e12:	cmp    DWORD PTR [rcx+0x4],edi
   140009e15:	je     0x140009e19
   140009e17:	xor    ecx,ecx
   140009e19:	test   rcx,rcx
   140009e1c:	je     0x140009e5a
   140009e1e:	mov    r14,QWORD PTR [rcx+0x8]
   140009e22:	cmp    rsi,0x2
   140009e26:	je     0x140009e55
   140009e28:	lea    rdx,[rcx+0x4]
   140009e2c:	jmp    0x140009e51
   140009e2e:	mov    QWORD PTR [rdx+0x4],rsi
   140009e32:	lea    rdx,[rdx+0x10]
   140009e36:	movsxd rcx,DWORD PTR [rip+0x20c03]        # 0x14002aa40
   140009e3d:	shl    rcx,0x4
   140009e41:	add    rcx,QWORD PTR [rbx+0xa0]
   140009e48:	lea    rax,[rdx-0x4]
   140009e4c:	cmp    rax,rcx
   140009e4f:	jae    0x140009e55
   140009e51:	cmp    DWORD PTR [rdx],edi
   140009e53:	je     0x140009e2e
   140009e55:	mov    rax,r14
   140009e58:	jmp    0x140009e7d
   140009e5a:	cmp    edi,0x11
   140009e5d:	ja     0x140009e69
   140009e5f:	mov    eax,0x3200a
   140009e64:	bt     eax,edi
   140009e67:	jb     0x140009e79
   140009e69:	call   0x1400095b8
   140009e6e:	mov    DWORD PTR [rax],0x16
   140009e74:	call   0x140008628
   140009e79:	or     rax,0xffffffffffffffff
   140009e7d:	mov    rbx,QWORD PTR [rsp+0x30]
   140009e82:	mov    rsi,QWORD PTR [rsp+0x38]
   140009e87:	mov    rdi,QWORD PTR [rsp+0x40]
   140009e8c:	add    rsp,0x20
   140009e90:	pop    r14
   140009e92:	ret    
   140009e93:	int3   
   140009e94:	mov    QWORD PTR [rip+0x2e78d],rcx        # 0x140038628
   140009e9b:	ret    
   140009e9c:	mov    QWORD PTR [rsp+0x8],rbx
   140009ea1:	mov    QWORD PTR [rsp+0x10],rsi
   140009ea6:	mov    QWORD PTR [rsp+0x18],rdi
   140009eab:	push   r14
   140009ead:	sub    rsp,0x20
   140009eb1:	mov    r14,rcx
   140009eb4:	mov    rcx,QWORD PTR [rip+0x2e76d]        # 0x140038628
   140009ebb:	call   QWORD PTR [rip+0x1d1b7]        # 0x140027078
   140009ec1:	mov    rdi,rax
   140009ec4:	test   r14,r14
   140009ec7:	jne    0x140009ee1
   140009ec9:	call   0x1400095b8
   140009ece:	mov    ebx,0x16
   140009ed3:	mov    DWORD PTR [rax],ebx
   140009ed5:	call   0x140008628
   140009eda:	mov    eax,ebx
   140009edc:	jmp    0x140009fc0
   140009ee1:	and    DWORD PTR [r14],0x0
   140009ee5:	test   rax,rax
   140009ee8:	jne    0x140009f9c
   140009eee:	lea    rcx,[rip+0x209ab]        # 0x14002a8a0
   140009ef5:	xor    edx,edx
   140009ef7:	mov    r8d,0x800
   140009efd:	call   QWORD PTR [rip+0x1d2dd]        # 0x1400271e0
   140009f03:	mov    rsi,rax
   140009f06:	test   rax,rax
   140009f09:	jne    0x140009f30
   140009f0b:	call   QWORD PTR [rip+0x1d16f]        # 0x140027080
   140009f11:	cmp    eax,0x57
   140009f14:	jne    0x140009ec9
   140009f16:	lea    rcx,[rip+0x20983]        # 0x14002a8a0
   140009f1d:	xor    r8d,r8d
   140009f20:	xor    edx,edx
   140009f22:	call   QWORD PTR [rip+0x1d2b8]        # 0x1400271e0
   140009f28:	mov    rsi,rax
   140009f2b:	test   rax,rax
   140009f2e:	je     0x140009ec9
   140009f30:	lea    rdx,[rip+0x20989]        # 0x14002a8c0
   140009f37:	mov    rcx,rsi
   140009f3a:	call   QWORD PTR [rip+0x1d158]        # 0x140027098
   140009f40:	mov    rdi,rax
   140009f43:	test   rax,rax
   140009f46:	jne    0x140009f73
   140009f48:	call   0x1400095b8
   140009f4d:	mov    rbx,rax
   140009f50:	call   QWORD PTR [rip+0x1d12a]        # 0x140027080
   140009f56:	mov    ecx,eax
   140009f58:	call   0x140009650
   140009f5d:	mov    DWORD PTR [rbx],eax
   140009f5f:	call   0x140008628
   140009f64:	call   QWORD PTR [rip+0x1d116]        # 0x140027080
   140009f6a:	mov    ecx,eax
   140009f6c:	call   0x140009650
   140009f71:	jmp    0x140009fc0
   140009f73:	mov    rcx,rax
   140009f76:	call   QWORD PTR [rip+0x1d0f4]        # 0x140027070
   140009f7c:	xor    ecx,ecx
   140009f7e:	mov    rbx,rax
   140009f81:	call   QWORD PTR [rip+0x1d0e9]        # 0x140027070
   140009f87:	xchg   QWORD PTR [rip+0x2e69a],rbx        # 0x140038628
   140009f8e:	cmp    rbx,rax
   140009f91:	je     0x140009f9c
   140009f93:	mov    rcx,rsi
   140009f96:	call   QWORD PTR [rip+0x1d23c]        # 0x1400271d8
   140009f9c:	mov    edx,0x4
   140009fa1:	mov    rcx,r14
   140009fa4:	call   rdi
   140009fa6:	test   eax,eax
   140009fa8:	jne    0x140009fbe
   140009faa:	call   0x1400095b8
   140009faf:	mov    DWORD PTR [rax],0xc
   140009fb5:	call   0x1400095b8
   140009fba:	mov    eax,DWORD PTR [rax]
   140009fbc:	jmp    0x140009fc0
   140009fbe:	xor    eax,eax
   140009fc0:	mov    rbx,QWORD PTR [rsp+0x30]
   140009fc5:	mov    rsi,QWORD PTR [rsp+0x38]
   140009fca:	mov    rdi,QWORD PTR [rsp+0x40]
   140009fcf:	add    rsp,0x20
   140009fd3:	pop    r14
   140009fd5:	ret    
   140009fd6:	int3   
   140009fd7:	int3   
   140009fd8:	sub    rsp,0x28
   140009fdc:	cmp    DWORD PTR [rip+0x301a5],0x0        # 0x14003a188
   140009fe3:	jne    0x140009ff9
   140009fe5:	mov    ecx,0xfffffffd
   140009fea:	call   0x14000a4e8
   140009fef:	mov    DWORD PTR [rip+0x3018f],0x1        # 0x14003a188
   140009ff9:	xor    eax,eax
   140009ffb:	add    rsp,0x28
   140009fff:	ret    
   14000a000:	rex push rbx
   14000a002:	sub    rsp,0x20
   14000a006:	mov    rbx,rcx
   14000a009:	mov    BYTE PTR [rcx+0x18],0x0
   14000a00d:	test   rdx,rdx
   14000a010:	jne    0x14000a098
   14000a016:	call   0x14000b18c
   14000a01b:	mov    QWORD PTR [rbx+0x10],rax
   14000a01f:	mov    rdx,QWORD PTR [rax+0xc0]
   14000a026:	mov    QWORD PTR [rbx],rdx
   14000a029:	mov    rcx,QWORD PTR [rax+0xb8]
   14000a030:	mov    QWORD PTR [rbx+0x8],rcx
   14000a034:	cmp    rdx,QWORD PTR [rip+0x2cd45]        # 0x140036d80
   14000a03b:	je     0x14000a053
   14000a03d:	mov    eax,DWORD PTR [rax+0xc8]
   14000a043:	test   DWORD PTR [rip+0x2ceaf],eax        # 0x140036ef8
   14000a049:	jne    0x14000a053
   14000a04b:	call   0x14000fff4
   14000a050:	mov    QWORD PTR [rbx],rax
   14000a053:	mov    rax,QWORD PTR [rip+0x2c9d6]        # 0x140036a30
   14000a05a:	cmp    QWORD PTR [rbx+0x8],rax
   14000a05e:	je     0x14000a07b
   14000a060:	mov    rax,QWORD PTR [rbx+0x10]
   14000a064:	mov    ecx,DWORD PTR [rax+0xc8]
   14000a06a:	test   DWORD PTR [rip+0x2ce88],ecx        # 0x140036ef8
   14000a070:	jne    0x14000a07b
   14000a072:	call   0x14000a3f0
   14000a077:	mov    QWORD PTR [rbx+0x8],rax
   14000a07b:	mov    rcx,QWORD PTR [rbx+0x10]
   14000a07f:	mov    eax,DWORD PTR [rcx+0xc8]
   14000a085:	test   al,0x2
   14000a087:	jne    0x14000a09f
   14000a089:	or     eax,0x2
   14000a08c:	mov    DWORD PTR [rcx+0xc8],eax
   14000a092:	mov    BYTE PTR [rbx+0x18],0x1
   14000a096:	jmp    0x14000a09f
   14000a098:	movups xmm0,XMMWORD PTR [rdx]
   14000a09b:	movdqu XMMWORD PTR [rcx],xmm0
   14000a09f:	mov    rax,rbx
   14000a0a2:	add    rsp,0x20
   14000a0a6:	pop    rbx
   14000a0a7:	ret    
   14000a0a8:	cmp    BYTE PTR [rcx+0x18],0x0
   14000a0ac:	je     0x14000a0b9
   14000a0ae:	mov    rax,QWORD PTR [rcx+0x10]
   14000a0b2:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14000a0b9:	ret    
   14000a0ba:	int3   
   14000a0bb:	int3   
   14000a0bc:	sub    ecx,0x3a4
   14000a0c2:	je     0x14000a0ed
   14000a0c4:	sub    ecx,0x4
   14000a0c7:	je     0x14000a0e5
   14000a0c9:	sub    ecx,0xd
   14000a0cc:	je     0x14000a0dd
   14000a0ce:	dec    ecx
   14000a0d0:	je     0x14000a0d5
   14000a0d2:	xor    eax,eax
   14000a0d4:	ret    
   14000a0d5:	mov    rax,QWORD PTR [rip+0x20814]        # 0x14002a8f0
   14000a0dc:	ret    
   14000a0dd:	mov    rax,QWORD PTR [rip+0x20804]        # 0x14002a8e8
   14000a0e4:	ret    
   14000a0e5:	mov    rax,QWORD PTR [rip+0x207f4]        # 0x14002a8e0
   14000a0ec:	ret    
   14000a0ed:	mov    rax,QWORD PTR [rip+0x207e4]        # 0x14002a8d8
   14000a0f4:	ret    
   14000a0f5:	int3   
   14000a0f6:	int3   
   14000a0f7:	int3   
   14000a0f8:	mov    rax,rcx
   14000a0fb:	ret    
   14000a0fc:	rex push rbx
   14000a0fe:	sub    rsp,0x40
   14000a102:	mov    ebx,ecx
   14000a104:	lea    rcx,[rsp+0x20]
   14000a109:	xor    edx,edx
   14000a10b:	call   0x14000a000
   14000a110:	and    DWORD PTR [rip+0x2e539],0x0        # 0x140038650
   14000a117:	cmp    ebx,0xfffffffe
   14000a11a:	jne    0x14000a12e
   14000a11c:	mov    DWORD PTR [rip+0x2e52a],0x1        # 0x140038650
   14000a126:	call   QWORD PTR [rip+0x1d0cc]        # 0x1400271f8
   14000a12c:	jmp    0x14000a143
   14000a12e:	cmp    ebx,0xfffffffd
   14000a131:	jne    0x14000a147
   14000a133:	mov    DWORD PTR [rip+0x2e513],0x1        # 0x140038650
   14000a13d:	call   QWORD PTR [rip+0x1d0ad]        # 0x1400271f0
   14000a143:	mov    ebx,eax
   14000a145:	jmp    0x14000a15e
   14000a147:	cmp    ebx,0xfffffffc
   14000a14a:	jne    0x14000a15e
   14000a14c:	mov    rax,QWORD PTR [rsp+0x20]
   14000a151:	mov    DWORD PTR [rip+0x2e4f5],0x1        # 0x140038650
   14000a15b:	mov    ebx,DWORD PTR [rax+0x4]
   14000a15e:	cmp    BYTE PTR [rsp+0x38],0x0
   14000a163:	je     0x14000a171
   14000a165:	mov    rcx,QWORD PTR [rsp+0x30]
   14000a16a:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14000a171:	mov    eax,ebx
   14000a173:	add    rsp,0x40
   14000a177:	pop    rbx
   14000a178:	ret    
   14000a179:	int3   
   14000a17a:	int3   
   14000a17b:	int3   
   14000a17c:	mov    QWORD PTR [rsp+0x8],rbx
   14000a181:	mov    QWORD PTR [rsp+0x10],rbp
   14000a186:	mov    QWORD PTR [rsp+0x18],rsi
   14000a18b:	push   rdi
   14000a18c:	sub    rsp,0x20
   14000a190:	lea    rbx,[rcx+0x18]
   14000a194:	mov    rsi,rcx
   14000a197:	mov    ebp,0x101
   14000a19c:	mov    rcx,rbx
   14000a19f:	mov    r8d,ebp
   14000a1a2:	xor    edx,edx
   14000a1a4:	call   0x140007150
   14000a1a9:	xor    eax,eax
   14000a1ab:	lea    rdi,[rsi+0xc]
   14000a1af:	mov    QWORD PTR [rsi+0x4],rax
   14000a1b3:	mov    QWORD PTR [rsi+0x220],rax
   14000a1ba:	mov    ecx,0x6
   14000a1bf:	movzx  eax,ax
   14000a1c2:	rep stos WORD PTR es:[rdi],ax
   14000a1c5:	lea    rdi,[rip+0x2c544]        # 0x140036710
   14000a1cc:	sub    rdi,rsi
   14000a1cf:	mov    al,BYTE PTR [rdi+rbx*1]
   14000a1d2:	mov    BYTE PTR [rbx],al
   14000a1d4:	inc    rbx
   14000a1d7:	dec    rbp
   14000a1da:	jne    0x14000a1cf
   14000a1dc:	lea    rcx,[rsi+0x119]
   14000a1e3:	mov    edx,0x100
   14000a1e8:	mov    al,BYTE PTR [rcx+rdi*1]
   14000a1eb:	mov    BYTE PTR [rcx],al
   14000a1ed:	inc    rcx
   14000a1f0:	dec    rdx
   14000a1f3:	jne    0x14000a1e8
   14000a1f5:	mov    rbx,QWORD PTR [rsp+0x30]
   14000a1fa:	mov    rbp,QWORD PTR [rsp+0x38]
   14000a1ff:	mov    rsi,QWORD PTR [rsp+0x40]
   14000a204:	add    rsp,0x20
   14000a208:	pop    rdi
   14000a209:	ret    
   14000a20a:	int3   
   14000a20b:	int3   
   14000a20c:	mov    QWORD PTR [rsp+0x10],rbx
   14000a211:	mov    QWORD PTR [rsp+0x18],rdi
   14000a216:	push   rbp
   14000a217:	lea    rbp,[rsp-0x480]
   14000a21f:	sub    rsp,0x580
   14000a226:	mov    rax,QWORD PTR [rip+0x2c813]        # 0x140036a40
   14000a22d:	xor    rax,rsp
   14000a230:	mov    QWORD PTR [rbp+0x470],rax
   14000a237:	mov    rdi,rcx
   14000a23a:	mov    ecx,DWORD PTR [rcx+0x4]
   14000a23d:	lea    rdx,[rsp+0x50]
   14000a242:	call   QWORD PTR [rip+0x1cfb8]        # 0x140027200
   14000a248:	mov    ebx,0x100
   14000a24d:	test   eax,eax
   14000a24f:	je     0x14000a38a
   14000a255:	xor    eax,eax
   14000a257:	lea    rcx,[rsp+0x70]
   14000a25c:	mov    BYTE PTR [rcx],al
   14000a25e:	inc    eax
   14000a260:	inc    rcx
   14000a263:	cmp    eax,ebx
   14000a265:	jb     0x14000a25c
   14000a267:	mov    al,BYTE PTR [rsp+0x56]
   14000a26b:	mov    BYTE PTR [rsp+0x70],0x20
   14000a270:	lea    rdx,[rsp+0x56]
   14000a275:	jmp    0x14000a299
   14000a277:	movzx  r8d,BYTE PTR [rdx+0x1]
   14000a27c:	movzx  ecx,al
   14000a27f:	jmp    0x14000a28e
   14000a281:	cmp    ecx,ebx
   14000a283:	jae    0x14000a293
   14000a285:	mov    eax,ecx
   14000a287:	mov    BYTE PTR [rsp+rcx*1+0x70],0x20
   14000a28c:	inc    ecx
   14000a28e:	cmp    ecx,r8d
   14000a291:	jbe    0x14000a281
   14000a293:	add    rdx,0x2
   14000a297:	mov    al,BYTE PTR [rdx]
   14000a299:	test   al,al
   14000a29b:	jne    0x14000a277
   14000a29d:	mov    eax,DWORD PTR [rdi+0x4]
   14000a2a0:	and    DWORD PTR [rsp+0x30],0x0
   14000a2a5:	lea    r8,[rsp+0x70]
   14000a2aa:	mov    DWORD PTR [rsp+0x28],eax
   14000a2ae:	lea    rax,[rbp+0x270]
   14000a2b5:	mov    r9d,ebx
   14000a2b8:	mov    edx,0x1
   14000a2bd:	xor    ecx,ecx
   14000a2bf:	mov    QWORD PTR [rsp+0x20],rax
   14000a2c4:	call   0x1400105e8
   14000a2c9:	and    DWORD PTR [rsp+0x40],0x0
   14000a2ce:	mov    eax,DWORD PTR [rdi+0x4]
   14000a2d1:	mov    rdx,QWORD PTR [rdi+0x220]
   14000a2d8:	mov    DWORD PTR [rsp+0x38],eax
   14000a2dc:	lea    rax,[rbp+0x70]
   14000a2e0:	mov    DWORD PTR [rsp+0x30],ebx
   14000a2e4:	mov    QWORD PTR [rsp+0x28],rax
   14000a2e9:	lea    r9,[rsp+0x70]
   14000a2ee:	mov    r8d,ebx
   14000a2f1:	xor    ecx,ecx
   14000a2f3:	mov    DWORD PTR [rsp+0x20],ebx
   14000a2f7:	call   0x1400103d8
   14000a2fc:	and    DWORD PTR [rsp+0x40],0x0
   14000a301:	mov    eax,DWORD PTR [rdi+0x4]
   14000a304:	mov    rdx,QWORD PTR [rdi+0x220]
   14000a30b:	mov    DWORD PTR [rsp+0x38],eax
   14000a30f:	lea    rax,[rbp+0x170]
   14000a316:	mov    DWORD PTR [rsp+0x30],ebx
   14000a31a:	mov    QWORD PTR [rsp+0x28],rax
   14000a31f:	lea    r9,[rsp+0x70]
   14000a324:	mov    r8d,0x200
   14000a32a:	xor    ecx,ecx
   14000a32c:	mov    DWORD PTR [rsp+0x20],ebx
   14000a330:	call   0x1400103d8
   14000a335:	lea    r8,[rbp+0x70]
   14000a339:	lea    r9,[rbp+0x170]
   14000a340:	sub    r8,rdi
   14000a343:	lea    rdx,[rbp+0x270]
   14000a34a:	lea    rcx,[rdi+0x19]
   14000a34e:	sub    r9,rdi
   14000a351:	test   BYTE PTR [rdx],0x1
   14000a354:	je     0x14000a360
   14000a356:	or     BYTE PTR [rcx],0x10
   14000a359:	mov    al,BYTE PTR [r8+rcx*1-0x19]
   14000a35e:	jmp    0x14000a36d
   14000a360:	test   BYTE PTR [rdx],0x2
   14000a363:	je     0x14000a375
   14000a365:	or     BYTE PTR [rcx],0x20
   14000a368:	mov    al,BYTE PTR [r9+rcx*1-0x19]
   14000a36d:	mov    BYTE PTR [rcx+0x100],al
   14000a373:	jmp    0x14000a37c
   14000a375:	mov    BYTE PTR [rcx+0x100],0x0
   14000a37c:	inc    rcx
   14000a37f:	add    rdx,0x2
   14000a383:	dec    rbx
   14000a386:	jne    0x14000a351
   14000a388:	jmp    0x14000a3c9
   14000a38a:	xor    edx,edx
   14000a38c:	lea    rcx,[rdi+0x19]
   14000a390:	lea    r8d,[rdx-0x61]
   14000a394:	lea    eax,[r8+0x20]
   14000a398:	cmp    eax,0x19
   14000a39b:	ja     0x14000a3a5
   14000a39d:	or     BYTE PTR [rcx],0x10
   14000a3a0:	lea    eax,[rdx+0x20]
   14000a3a3:	jmp    0x14000a3b1
   14000a3a5:	cmp    r8d,0x19
   14000a3a9:	ja     0x14000a3b9
   14000a3ab:	or     BYTE PTR [rcx],0x20
   14000a3ae:	lea    eax,[rdx-0x20]
   14000a3b1:	mov    BYTE PTR [rcx+0x100],al
   14000a3b7:	jmp    0x14000a3c0
   14000a3b9:	mov    BYTE PTR [rcx+0x100],0x0
   14000a3c0:	inc    edx
   14000a3c2:	inc    rcx
   14000a3c5:	cmp    edx,ebx
   14000a3c7:	jb     0x14000a390
   14000a3c9:	mov    rcx,QWORD PTR [rbp+0x470]
   14000a3d0:	xor    rcx,rsp
   14000a3d3:	call   0x14000d0a0
   14000a3d8:	lea    r11,[rsp+0x580]
   14000a3e0:	mov    rbx,QWORD PTR [r11+0x18]
   14000a3e4:	mov    rdi,QWORD PTR [r11+0x20]
   14000a3e8:	mov    rsp,r11
   14000a3eb:	pop    rbp
   14000a3ec:	ret    
   14000a3ed:	int3   
   14000a3ee:	int3   
   14000a3ef:	int3   
   14000a3f0:	mov    QWORD PTR [rsp+0x10],rbx
   14000a3f5:	push   rdi
   14000a3f6:	sub    rsp,0x20
   14000a3fa:	call   0x14000b18c
   14000a3ff:	mov    rdi,rax
   14000a402:	mov    ecx,DWORD PTR [rip+0x2caf0]        # 0x140036ef8
   14000a408:	test   DWORD PTR [rax+0xc8],ecx
   14000a40e:	je     0x14000a423
   14000a410:	cmp    QWORD PTR [rax+0xc0],0x0
   14000a418:	je     0x14000a423
   14000a41a:	mov    rbx,QWORD PTR [rax+0xb8]
   14000a421:	jmp    0x14000a48f
   14000a423:	mov    ecx,0xd
   14000a428:	call   0x140008760
   14000a42d:	nop
   14000a42e:	mov    rbx,QWORD PTR [rdi+0xb8]
   14000a435:	mov    QWORD PTR [rsp+0x30],rbx
   14000a43a:	cmp    rbx,QWORD PTR [rip+0x2c5ef]        # 0x140036a30
   14000a441:	je     0x14000a485
   14000a443:	test   rbx,rbx
   14000a446:	je     0x14000a463
   14000a448:	lock dec DWORD PTR [rbx]
   14000a44b:	jne    0x14000a463
   14000a44d:	lea    rax,[rip+0x2c2bc]        # 0x140036710
   14000a454:	mov    rcx,QWORD PTR [rsp+0x30]
   14000a459:	cmp    rcx,rax
   14000a45c:	je     0x14000a463
   14000a45e:	call   0x140006444
   14000a463:	mov    rax,QWORD PTR [rip+0x2c5c6]        # 0x140036a30
   14000a46a:	mov    QWORD PTR [rdi+0xb8],rax
   14000a471:	mov    rax,QWORD PTR [rip+0x2c5b8]        # 0x140036a30
   14000a478:	mov    QWORD PTR [rsp+0x30],rax
   14000a47d:	lock inc DWORD PTR [rax]
   14000a480:	mov    rbx,QWORD PTR [rsp+0x30]
   14000a485:	mov    ecx,0xd
   14000a48a:	call   0x14000897c
   14000a48f:	test   rbx,rbx
   14000a492:	jne    0x14000a49c
   14000a494:	lea    ecx,[rbx+0x20]
   14000a497:	call   0x140005ff4
   14000a49c:	mov    rax,rbx
   14000a49f:	mov    rbx,QWORD PTR [rsp+0x38]
   14000a4a4:	add    rsp,0x20
   14000a4a8:	pop    rdi
   14000a4a9:	ret    
   14000a4aa:	int3   
   14000a4ab:	int3   
   14000a4ac:	sub    rsp,0x48
   14000a4b0:	lea    rcx,[rsp+0x20]
   14000a4b5:	xor    edx,edx
   14000a4b7:	call   0x14000a000
   14000a4bc:	mov    rax,QWORD PTR [rsp+0x28]
   14000a4c1:	cmp    DWORD PTR [rax+0x8],0x0
   14000a4c5:	je     0x14000a4cc
   14000a4c7:	mov    eax,DWORD PTR [rax+0x4]
   14000a4ca:	jmp    0x14000a4ce
   14000a4cc:	xor    eax,eax
   14000a4ce:	cmp    BYTE PTR [rsp+0x38],0x0
   14000a4d3:	je     0x14000a4e1
   14000a4d5:	mov    rcx,QWORD PTR [rsp+0x30]
   14000a4da:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14000a4e1:	add    rsp,0x48
   14000a4e5:	ret    
   14000a4e6:	int3   
   14000a4e7:	int3   
   14000a4e8:	mov    rax,rsp
   14000a4eb:	mov    QWORD PTR [rax+0x8],rbx
   14000a4ef:	mov    QWORD PTR [rax+0x10],rsi
   14000a4f3:	mov    QWORD PTR [rax+0x18],rdi
   14000a4f7:	mov    QWORD PTR [rax+0x20],r14
   14000a4fb:	push   r15
   14000a4fd:	sub    rsp,0x30
   14000a501:	mov    edi,ecx
   14000a503:	or     r15d,0xffffffff
   14000a507:	call   0x14000b18c
   14000a50c:	mov    rsi,rax
   14000a50f:	call   0x14000a3f0
   14000a514:	mov    rbx,QWORD PTR [rsi+0xb8]
   14000a51b:	mov    ecx,edi
   14000a51d:	call   0x14000a0fc
   14000a522:	mov    r14d,eax
   14000a525:	cmp    eax,DWORD PTR [rbx+0x4]
   14000a528:	je     0x14000a709
   14000a52e:	mov    ecx,0x228
   14000a533:	call   0x140007f54
   14000a538:	mov    rbx,rax
   14000a53b:	xor    edi,edi
   14000a53d:	test   rax,rax
   14000a540:	je     0x14000a70e
   14000a546:	mov    rax,QWORD PTR [rsi+0xb8]
   14000a54d:	mov    rcx,rbx
   14000a550:	lea    edx,[rdi+0x4]
   14000a553:	lea    r8d,[rdx+0x7c]
   14000a557:	movups xmm0,XMMWORD PTR [rax]
   14000a55a:	movups XMMWORD PTR [rcx],xmm0
   14000a55d:	movups xmm1,XMMWORD PTR [rax+0x10]
   14000a561:	movups XMMWORD PTR [rcx+0x10],xmm1
   14000a565:	movups xmm0,XMMWORD PTR [rax+0x20]
   14000a569:	movups XMMWORD PTR [rcx+0x20],xmm0
   14000a56d:	movups xmm1,XMMWORD PTR [rax+0x30]
   14000a571:	movups XMMWORD PTR [rcx+0x30],xmm1
   14000a575:	movups xmm0,XMMWORD PTR [rax+0x40]
   14000a579:	movups XMMWORD PTR [rcx+0x40],xmm0
   14000a57d:	movups xmm1,XMMWORD PTR [rax+0x50]
   14000a581:	movups XMMWORD PTR [rcx+0x50],xmm1
   14000a585:	movups xmm0,XMMWORD PTR [rax+0x60]
   14000a589:	movups XMMWORD PTR [rcx+0x60],xmm0
   14000a58d:	add    rcx,r8
   14000a590:	movups xmm1,XMMWORD PTR [rax+0x70]
   14000a594:	movups XMMWORD PTR [rcx-0x10],xmm1
   14000a598:	add    rax,r8
   14000a59b:	dec    rdx
   14000a59e:	jne    0x14000a557
   14000a5a0:	movups xmm0,XMMWORD PTR [rax]
   14000a5a3:	movups XMMWORD PTR [rcx],xmm0
   14000a5a6:	movups xmm1,XMMWORD PTR [rax+0x10]
   14000a5aa:	movups XMMWORD PTR [rcx+0x10],xmm1
   14000a5ae:	mov    rax,QWORD PTR [rax+0x20]
   14000a5b2:	mov    QWORD PTR [rcx+0x20],rax
   14000a5b6:	mov    DWORD PTR [rbx],edi
   14000a5b8:	mov    rdx,rbx
   14000a5bb:	mov    ecx,r14d
   14000a5be:	call   0x14000a72c
   14000a5c3:	mov    r15d,eax
   14000a5c6:	test   eax,eax
   14000a5c8:	jne    0x14000a6e3
   14000a5ce:	mov    rcx,QWORD PTR [rsi+0xb8]
   14000a5d5:	lea    r14,[rip+0x2c134]        # 0x140036710
   14000a5dc:	lock dec DWORD PTR [rcx]
   14000a5df:	jne    0x14000a5f2
   14000a5e1:	mov    rcx,QWORD PTR [rsi+0xb8]
   14000a5e8:	cmp    rcx,r14
   14000a5eb:	je     0x14000a5f2
   14000a5ed:	call   0x140006444
   14000a5f2:	mov    QWORD PTR [rsi+0xb8],rbx
   14000a5f9:	lock inc DWORD PTR [rbx]
   14000a5fc:	test   BYTE PTR [rsi+0xc8],0x2
   14000a603:	jne    0x14000a70e
   14000a609:	test   BYTE PTR [rip+0x2c8e8],0x1        # 0x140036ef8
   14000a610:	jne    0x14000a70e
   14000a616:	mov    esi,0xd
   14000a61b:	mov    ecx,esi
   14000a61d:	call   0x140008760
   14000a622:	nop
   14000a623:	mov    eax,DWORD PTR [rbx+0x4]
   14000a626:	mov    DWORD PTR [rip+0x2e004],eax        # 0x140038630
   14000a62c:	mov    eax,DWORD PTR [rbx+0x8]
   14000a62f:	mov    DWORD PTR [rip+0x2dfff],eax        # 0x140038634
   14000a635:	mov    rax,QWORD PTR [rbx+0x220]
   14000a63c:	mov    QWORD PTR [rip+0x2e005],rax        # 0x140038648
   14000a643:	mov    edx,edi
   14000a645:	lea    r8,[rip+0xffffffffffff59b4]        # 0x140000000
   14000a64c:	mov    DWORD PTR [rsp+0x20],edx
   14000a650:	cmp    edx,0x5
   14000a653:	jge    0x14000a66a
   14000a655:	movsxd rcx,edx
   14000a658:	movzx  eax,WORD PTR [rbx+rcx*2+0xc]
   14000a65d:	mov    WORD PTR [r8+rcx*2+0x38638],ax
   14000a666:	inc    edx
   14000a668:	jmp    0x14000a64c
   14000a66a:	mov    edx,edi
   14000a66c:	mov    DWORD PTR [rsp+0x20],edx
   14000a670:	cmp    edx,0x101
   14000a676:	jge    0x14000a68b
   14000a678:	movsxd rcx,edx
   14000a67b:	mov    al,BYTE PTR [rcx+rbx*1+0x18]
   14000a67f:	mov    BYTE PTR [rcx+r8*1+0x36500],al
   14000a687:	inc    edx
   14000a689:	jmp    0x14000a66c
   14000a68b:	mov    DWORD PTR [rsp+0x20],edi
   14000a68f:	cmp    edi,0x100
   14000a695:	jge    0x14000a6ad
   14000a697:	movsxd rcx,edi
   14000a69a:	mov    al,BYTE PTR [rcx+rbx*1+0x119]
   14000a6a1:	mov    BYTE PTR [rcx+r8*1+0x36610],al
   14000a6a9:	inc    edi
   14000a6ab:	jmp    0x14000a68b
   14000a6ad:	mov    rcx,QWORD PTR [rip+0x2c37c]        # 0x140036a30
   14000a6b4:	or     eax,0xffffffff
   14000a6b7:	lock xadd DWORD PTR [rcx],eax
   14000a6bb:	dec    eax
   14000a6bd:	jne    0x14000a6d0
   14000a6bf:	mov    rcx,QWORD PTR [rip+0x2c36a]        # 0x140036a30
   14000a6c6:	cmp    rcx,r14
   14000a6c9:	je     0x14000a6d0
   14000a6cb:	call   0x140006444
   14000a6d0:	mov    QWORD PTR [rip+0x2c359],rbx        # 0x140036a30
   14000a6d7:	lock inc DWORD PTR [rbx]
   14000a6da:	mov    ecx,esi
   14000a6dc:	call   0x14000897c
   14000a6e1:	jmp    0x14000a70e
   14000a6e3:	cmp    eax,0xffffffff
   14000a6e6:	jne    0x14000a70e
   14000a6e8:	lea    r14,[rip+0x2c021]        # 0x140036710
   14000a6ef:	cmp    rbx,r14
   14000a6f2:	je     0x14000a6fc
   14000a6f4:	mov    rcx,rbx
   14000a6f7:	call   0x140006444
   14000a6fc:	call   0x1400095b8
   14000a701:	mov    DWORD PTR [rax],0x16
   14000a707:	jmp    0x14000a70e
   14000a709:	xor    edi,edi
   14000a70b:	mov    r15d,edi
   14000a70e:	mov    eax,r15d
   14000a711:	mov    rbx,QWORD PTR [rsp+0x40]
   14000a716:	mov    rsi,QWORD PTR [rsp+0x48]
   14000a71b:	mov    rdi,QWORD PTR [rsp+0x50]
   14000a720:	mov    r14,QWORD PTR [rsp+0x58]
   14000a725:	add    rsp,0x30
   14000a729:	pop    r15
   14000a72b:	ret    
   14000a72c:	mov    QWORD PTR [rsp+0x18],rbx
   14000a731:	mov    QWORD PTR [rsp+0x20],rbp
   14000a736:	push   rsi
   14000a737:	push   rdi
   14000a738:	push   r12
   14000a73a:	push   r14
   14000a73c:	push   r15
   14000a73e:	sub    rsp,0x40
   14000a742:	mov    rax,QWORD PTR [rip+0x2c2f7]        # 0x140036a40
   14000a749:	xor    rax,rsp
   14000a74c:	mov    QWORD PTR [rsp+0x38],rax
   14000a751:	mov    rbx,rdx
   14000a754:	call   0x14000a0fc
   14000a759:	xor    esi,esi
   14000a75b:	mov    edi,eax
   14000a75d:	test   eax,eax
   14000a75f:	jne    0x14000a76e
   14000a761:	mov    rcx,rbx
   14000a764:	call   0x14000a17c
   14000a769:	jmp    0x14000a9b2
   14000a76e:	lea    r12,[rip+0x2c1cb]        # 0x140036940
   14000a775:	mov    ebp,esi
   14000a777:	mov    r15d,0x1
   14000a77d:	mov    rax,r12
   14000a780:	cmp    DWORD PTR [rax],edi
   14000a782:	je     0x14000a8c0
   14000a788:	add    ebp,r15d
   14000a78b:	add    rax,0x30
   14000a78f:	cmp    ebp,0x5
   14000a792:	jb     0x14000a780
   14000a794:	lea    eax,[rdi-0xfde8]
   14000a79a:	cmp    eax,r15d
   14000a79d:	jbe    0x14000a8b8
   14000a7a3:	movzx  ecx,di
   14000a7a6:	call   QWORD PTR [rip+0x1ca3c]        # 0x1400271e8
   14000a7ac:	test   eax,eax
   14000a7ae:	je     0x14000a8b8
   14000a7b4:	lea    rdx,[rsp+0x20]
   14000a7b9:	mov    ecx,edi
   14000a7bb:	call   QWORD PTR [rip+0x1ca3f]        # 0x140027200
   14000a7c1:	test   eax,eax
   14000a7c3:	je     0x14000a8ac
   14000a7c9:	lea    rcx,[rbx+0x18]
   14000a7cd:	xor    edx,edx
   14000a7cf:	mov    r8d,0x101
   14000a7d5:	call   0x140007150
   14000a7da:	mov    DWORD PTR [rbx+0x4],edi
   14000a7dd:	mov    QWORD PTR [rbx+0x220],rsi
   14000a7e4:	cmp    DWORD PTR [rsp+0x20],r15d
   14000a7e9:	jbe    0x14000a895
   14000a7ef:	lea    rdx,[rsp+0x26]
   14000a7f4:	cmp    BYTE PTR [rsp+0x26],sil
   14000a7f9:	je     0x14000a834
   14000a7fb:	cmp    BYTE PTR [rdx+0x1],sil
   14000a7ff:	je     0x14000a834
   14000a801:	movzx  edi,BYTE PTR [rdx+0x1]
   14000a805:	movzx  r8d,BYTE PTR [rdx]
   14000a809:	cmp    r8d,edi
   14000a80c:	ja     0x14000a82b
   14000a80e:	lea    ecx,[r8+0x1]
   14000a812:	lea    rax,[rbx+0x18]
   14000a816:	add    rax,rcx
   14000a819:	sub    edi,r8d
   14000a81c:	lea    ecx,[r15+rdi*1]
   14000a820:	or     BYTE PTR [rax],0x4
   14000a823:	add    rax,r15
   14000a826:	sub    rcx,r15
   14000a829:	jne    0x14000a820
   14000a82b:	add    rdx,0x2
   14000a82f:	cmp    BYTE PTR [rdx],sil
   14000a832:	jne    0x14000a7fb
   14000a834:	lea    rax,[rbx+0x1a]
   14000a838:	mov    ecx,0xfe
   14000a83d:	or     BYTE PTR [rax],0x8
   14000a840:	add    rax,r15
   14000a843:	sub    rcx,r15
   14000a846:	jne    0x14000a83d
   14000a848:	mov    ecx,DWORD PTR [rbx+0x4]
   14000a84b:	sub    ecx,0x3a4
   14000a851:	je     0x14000a881
   14000a853:	sub    ecx,0x4
   14000a856:	je     0x14000a878
   14000a858:	sub    ecx,0xd
   14000a85b:	je     0x14000a86f
   14000a85d:	dec    ecx
   14000a85f:	je     0x14000a866
   14000a861:	mov    rax,rsi
   14000a864:	jmp    0x14000a888
   14000a866:	mov    rax,QWORD PTR [rip+0x20083]        # 0x14002a8f0
   14000a86d:	jmp    0x14000a888
   14000a86f:	mov    rax,QWORD PTR [rip+0x20072]        # 0x14002a8e8
   14000a876:	jmp    0x14000a888
   14000a878:	mov    rax,QWORD PTR [rip+0x20061]        # 0x14002a8e0
   14000a87f:	jmp    0x14000a888
   14000a881:	mov    rax,QWORD PTR [rip+0x20050]        # 0x14002a8d8
   14000a888:	mov    QWORD PTR [rbx+0x220],rax
   14000a88f:	mov    DWORD PTR [rbx+0x8],r15d
   14000a893:	jmp    0x14000a898
   14000a895:	mov    DWORD PTR [rbx+0x8],esi
   14000a898:	lea    rdi,[rbx+0xc]
   14000a89c:	movzx  eax,si
   14000a89f:	mov    ecx,0x6
   14000a8a4:	rep stos WORD PTR es:[rdi],ax
   14000a8a7:	jmp    0x14000a9aa
   14000a8ac:	cmp    DWORD PTR [rip+0x2dd9e],esi        # 0x140038650
   14000a8b2:	jne    0x14000a761
   14000a8b8:	or     eax,0xffffffff
   14000a8bb:	jmp    0x14000a9b4
   14000a8c0:	lea    rcx,[rbx+0x18]
   14000a8c4:	xor    edx,edx
   14000a8c6:	mov    r8d,0x101
   14000a8cc:	call   0x140007150
   14000a8d1:	mov    eax,ebp
   14000a8d3:	lea    r9,[r12+0x10]
   14000a8d8:	lea    r11,[rax+rax*2]
   14000a8dc:	lea    r14,[rip+0x2c055]        # 0x140036938
   14000a8e3:	mov    ebp,0x4
   14000a8e8:	shl    r11,0x4
   14000a8ec:	add    r9,r11
   14000a8ef:	mov    rdx,r9
   14000a8f2:	cmp    BYTE PTR [r9],sil
   14000a8f5:	je     0x14000a937
   14000a8f7:	cmp    BYTE PTR [rdx+0x1],sil
   14000a8fb:	je     0x14000a937
   14000a8fd:	movzx  r8d,BYTE PTR [rdx]
   14000a901:	movzx  eax,BYTE PTR [rdx+0x1]
   14000a905:	cmp    r8d,eax
   14000a908:	ja     0x14000a92e
   14000a90a:	lea    r10d,[r8+0x1]
   14000a90e:	cmp    r10d,0x101
   14000a915:	jae    0x14000a92e
   14000a917:	mov    al,BYTE PTR [r14]
   14000a91a:	add    r8d,r15d
   14000a91d:	or     BYTE PTR [r10+rbx*1+0x18],al
   14000a922:	movzx  eax,BYTE PTR [rdx+0x1]
   14000a926:	add    r10d,r15d
   14000a929:	cmp    r8d,eax
   14000a92c:	jbe    0x14000a90e
   14000a92e:	add    rdx,0x2
   14000a932:	cmp    BYTE PTR [rdx],sil
   14000a935:	jne    0x14000a8f7
   14000a937:	add    r9,0x8
   14000a93b:	add    r14,r15
   14000a93e:	sub    rbp,r15
   14000a941:	jne    0x14000a8ef
   14000a943:	mov    DWORD PTR [rbx+0x4],edi
   14000a946:	mov    DWORD PTR [rbx+0x8],r15d
   14000a94a:	sub    edi,0x3a4
   14000a950:	je     0x14000a97b
   14000a952:	sub    edi,0x4
   14000a955:	je     0x14000a972
   14000a957:	sub    edi,0xd
   14000a95a:	je     0x14000a969
   14000a95c:	dec    edi
   14000a95e:	jne    0x14000a982
   14000a960:	mov    rsi,QWORD PTR [rip+0x1ff89]        # 0x14002a8f0
   14000a967:	jmp    0x14000a982
   14000a969:	mov    rsi,QWORD PTR [rip+0x1ff78]        # 0x14002a8e8
   14000a970:	jmp    0x14000a982
   14000a972:	mov    rsi,QWORD PTR [rip+0x1ff67]        # 0x14002a8e0
   14000a979:	jmp    0x14000a982
   14000a97b:	mov    rsi,QWORD PTR [rip+0x1ff56]        # 0x14002a8d8
   14000a982:	sub    r11,rbx
   14000a985:	mov    QWORD PTR [rbx+0x220],rsi
   14000a98c:	lea    rcx,[rbx+0xc]
   14000a990:	lea    rdi,[r11+r12*1]
   14000a994:	mov    edx,0x6
   14000a999:	movzx  eax,WORD PTR [rdi+rcx*1-0x8]
   14000a99e:	mov    WORD PTR [rcx],ax
   14000a9a1:	lea    rcx,[rcx+0x2]
   14000a9a5:	sub    rdx,r15
   14000a9a8:	jne    0x14000a999
   14000a9aa:	mov    rcx,rbx
   14000a9ad:	call   0x14000a20c
   14000a9b2:	xor    eax,eax
   14000a9b4:	mov    rcx,QWORD PTR [rsp+0x38]
   14000a9b9:	xor    rcx,rsp
   14000a9bc:	call   0x14000d0a0
   14000a9c1:	lea    r11,[rsp+0x40]
   14000a9c6:	mov    rbx,QWORD PTR [r11+0x40]
   14000a9ca:	mov    rbp,QWORD PTR [r11+0x48]
   14000a9ce:	mov    rsp,r11
   14000a9d1:	pop    r15
   14000a9d3:	pop    r14
   14000a9d5:	pop    r12
   14000a9d7:	pop    rdi
   14000a9d8:	pop    rsi
   14000a9d9:	ret    
   14000a9da:	int3   
   14000a9db:	int3   
   14000a9dc:	test   ecx,ecx
   14000a9de:	je     0x14000aa12
   14000a9e0:	push   rbx
   14000a9e1:	sub    rsp,0x20
   14000a9e5:	test   DWORD PTR [rdx+0x18],0x1000
   14000a9ec:	mov    rbx,rdx
   14000a9ef:	je     0x14000aa0d
   14000a9f1:	mov    rcx,rdx
   14000a9f4:	call   0x140010914
   14000a9f9:	and    DWORD PTR [rbx+0x18],0xffffeeff
   14000aa00:	and    DWORD PTR [rbx+0x24],0x0
   14000aa04:	and    QWORD PTR [rbx],0x0
   14000aa08:	and    QWORD PTR [rbx+0x10],0x0
   14000aa0d:	add    rsp,0x20
   14000aa11:	pop    rbx
   14000aa12:	ret    
   14000aa13:	int3   
   14000aa14:	mov    QWORD PTR [rsp+0x8],rbx
   14000aa19:	mov    QWORD PTR [rsp+0x10],rdi
   14000aa1e:	push   r14
   14000aa20:	sub    rsp,0x20
   14000aa24:	mov    rbx,rcx
   14000aa27:	call   0x140010840
   14000aa2c:	mov    ecx,eax
   14000aa2e:	call   0x140010868
   14000aa33:	test   eax,eax
   14000aa35:	je     0x14000aad0
   14000aa3b:	call   0x14001072c
   14000aa40:	add    rax,0x30
   14000aa44:	cmp    rbx,rax
   14000aa47:	jne    0x14000aa4d
   14000aa49:	xor    eax,eax
   14000aa4b:	jmp    0x14000aa60
   14000aa4d:	call   0x14001072c
   14000aa52:	add    rax,0x60
   14000aa56:	cmp    rbx,rax
   14000aa59:	jne    0x14000aad0
   14000aa5b:	mov    eax,0x1
   14000aa60:	inc    DWORD PTR [rip+0x2df6a]        # 0x1400389d0
   14000aa66:	test   DWORD PTR [rbx+0x18],0x10c
   14000aa6d:	jne    0x14000aad0
   14000aa6f:	lea    r14,[rip+0x2dbe2]        # 0x140038658
   14000aa76:	movsxd rdi,eax
   14000aa79:	mov    rax,QWORD PTR [r14+rdi*8]
   14000aa7d:	test   rax,rax
   14000aa80:	jne    0x14000aaad
   14000aa82:	mov    ecx,0x1000
   14000aa87:	call   0x140007f54
   14000aa8c:	mov    QWORD PTR [r14+rdi*8],rax
   14000aa90:	test   rax,rax
   14000aa93:	jne    0x14000aaad
   14000aa95:	lea    rax,[rbx+0x20]
   14000aa99:	mov    QWORD PTR [rbx+0x10],rax
   14000aa9d:	mov    QWORD PTR [rbx],rax
   14000aaa0:	mov    eax,0x2
   14000aaa5:	mov    DWORD PTR [rbx+0x24],eax
   14000aaa8:	mov    DWORD PTR [rbx+0x8],eax
   14000aaab:	jmp    0x14000aac2
   14000aaad:	mov    QWORD PTR [rbx+0x10],rax
   14000aab1:	mov    QWORD PTR [rbx],rax
   14000aab4:	mov    DWORD PTR [rbx+0x24],0x1000
   14000aabb:	mov    DWORD PTR [rbx+0x8],0x1000
   14000aac2:	or     DWORD PTR [rbx+0x18],0x1102
   14000aac9:	mov    eax,0x1
   14000aace:	jmp    0x14000aad2
   14000aad0:	xor    eax,eax
   14000aad2:	mov    rbx,QWORD PTR [rsp+0x30]
   14000aad7:	mov    rdi,QWORD PTR [rsp+0x38]
   14000aadc:	add    rsp,0x20
   14000aae0:	pop    r14
   14000aae2:	ret    
   14000aae3:	int3   
   14000aae4:	mov    QWORD PTR [rsp+0x8],rbx
   14000aae9:	push   rdi
   14000aaea:	sub    rsp,0x20
   14000aaee:	mov    rdi,r8
   14000aaf1:	mov    rbx,rdx
   14000aaf4:	test   rcx,rcx
   14000aaf7:	je     0x14000ab16
   14000aaf9:	xor    edx,edx
   14000aafb:	lea    rax,[rdx-0x20]
   14000aaff:	div    rcx
   14000ab02:	cmp    rax,rbx
   14000ab05:	jae    0x14000ab16
   14000ab07:	call   0x1400095b8
   14000ab0c:	mov    DWORD PTR [rax],0xc
   14000ab12:	xor    eax,eax
   14000ab14:	jmp    0x14000ab73
   14000ab16:	imul   rbx,rcx
   14000ab1a:	mov    eax,0x1
   14000ab1f:	test   rbx,rbx
   14000ab22:	cmove  rbx,rax
   14000ab26:	xor    eax,eax
   14000ab28:	cmp    rbx,0xffffffffffffffe0
   14000ab2c:	ja     0x14000ab46
   14000ab2e:	mov    rcx,QWORD PTR [rip+0x2db33]        # 0x140038668
   14000ab35:	lea    edx,[rax+0x8]
   14000ab38:	mov    r8,rbx
   14000ab3b:	call   QWORD PTR [rip+0x1c57f]        # 0x1400270c0
   14000ab41:	test   rax,rax
   14000ab44:	jne    0x14000ab73
   14000ab46:	cmp    DWORD PTR [rip+0x2db23],0x0        # 0x140038670
   14000ab4d:	je     0x14000ab68
   14000ab4f:	mov    rcx,rbx
   14000ab52:	call   0x140007e5c
   14000ab57:	test   eax,eax
   14000ab59:	jne    0x14000ab26
   14000ab5b:	test   rdi,rdi
   14000ab5e:	je     0x14000ab12
   14000ab60:	mov    DWORD PTR [rdi],0xc
   14000ab66:	jmp    0x14000ab12
   14000ab68:	test   rdi,rdi
   14000ab6b:	je     0x14000ab73
   14000ab6d:	mov    DWORD PTR [rdi],0xc
   14000ab73:	mov    rbx,QWORD PTR [rsp+0x30]
   14000ab78:	add    rsp,0x20
   14000ab7c:	pop    rdi
   14000ab7d:	ret    
   14000ab7e:	int3   
   14000ab7f:	int3   
   14000ab80:	mov    rax,QWORD PTR [rip+0x2dae1]        # 0x140038668
   14000ab87:	ret    
   14000ab88:	sub    rsp,0x28
   14000ab8c:	call   QWORD PTR [rip+0x1c676]        # 0x140027208
   14000ab92:	xor    ecx,ecx
   14000ab94:	test   rax,rax
   14000ab97:	mov    QWORD PTR [rip+0x2daca],rax        # 0x140038668
   14000ab9e:	setne  cl
   14000aba1:	mov    eax,ecx
   14000aba3:	add    rsp,0x28
   14000aba7:	ret    
   14000aba8:	and    QWORD PTR [rip+0x2dab8],0x0        # 0x140038668
   14000abb0:	ret    
   14000abb1:	int3   
   14000abb2:	int3   
   14000abb3:	int3   
   14000abb4:	rex push rbx
   14000abb6:	sub    rsp,0x20
   14000abba:	call   0x140010ae0
   14000abbf:	mov    ebx,eax
   14000abc1:	and    ebx,0x3f
   14000abc4:	call   0x140010afa
   14000abc9:	mov    eax,ebx
   14000abcb:	add    rsp,0x20
   14000abcf:	pop    rbx
   14000abd0:	ret    
   14000abd1:	int3   
   14000abd2:	int3   
   14000abd3:	int3   
   14000abd4:	mov    QWORD PTR [rsp+0x18],rbx
   14000abd9:	mov    QWORD PTR [rsp+0x20],rsi
   14000abde:	push   rdi
   14000abdf:	sub    rsp,0x20
   14000abe3:	mov    rbx,rdx
   14000abe6:	mov    rdi,rcx
   14000abe9:	call   0x140010ae0
   14000abee:	mov    esi,eax
   14000abf0:	mov    DWORD PTR [rsp+0x38],eax
   14000abf4:	mov    ecx,ebx
   14000abf6:	not    ecx
   14000abf8:	or     ecx,0xffff807f
   14000abfe:	and    ecx,eax
   14000ac00:	and    edi,ebx
   14000ac02:	or     ecx,edi
   14000ac04:	mov    DWORD PTR [rsp+0x30],ecx
   14000ac08:	cmp    BYTE PTR [rip+0x2be29],0x0        # 0x140036a38
   14000ac0f:	je     0x14000ac36
   14000ac11:	test   cl,0x40
   14000ac14:	je     0x14000ac36
   14000ac16:	call   0x140010af0
   14000ac1b:	jmp    0x14000ac34
   14000ac1d:	mov    BYTE PTR [rip+0x2be14],0x0        # 0x140036a38
   14000ac24:	mov    ecx,DWORD PTR [rsp+0x30]
   14000ac28:	and    ecx,0xffffffbf
   14000ac2b:	call   0x140010af0
   14000ac30:	mov    esi,DWORD PTR [rsp+0x38]
   14000ac34:	jmp    0x14000ac3e
   14000ac36:	and    ecx,0xffffffbf
   14000ac39:	call   0x140010af0
   14000ac3e:	mov    eax,esi
   14000ac40:	mov    rbx,QWORD PTR [rsp+0x40]
   14000ac45:	mov    rsi,QWORD PTR [rsp+0x48]
   14000ac4a:	add    rsp,0x20
   14000ac4e:	pop    rdi
   14000ac4f:	ret    
   14000ac50:	rex push rbx
   14000ac52:	sub    rsp,0x20
   14000ac56:	mov    rbx,rcx
   14000ac59:	call   0x140010ae0
   14000ac5e:	and    ebx,0x3f
   14000ac61:	or     eax,ebx
   14000ac63:	mov    ecx,eax
   14000ac65:	add    rsp,0x20
   14000ac69:	pop    rbx
   14000ac6a:	jmp    0x140010af0
   14000ac6f:	int3   
   14000ac70:	sub    rsp,0x28
   14000ac74:	call   0x140010ae0
   14000ac79:	and    eax,0x3f
   14000ac7c:	add    rsp,0x28
   14000ac80:	ret    
   14000ac81:	int3   
   14000ac82:	int3   
   14000ac83:	int3   
   14000ac84:	mov    rax,rsp
   14000ac87:	push   rbx
   14000ac88:	sub    rsp,0x50
   14000ac8c:	movsd  xmm0,QWORD PTR [rsp+0x80]
   14000ac95:	movsd  xmm1,QWORD PTR [rsp+0x88]
   14000ac9e:	mov    ebx,ecx
   14000aca0:	mov    DWORD PTR [rax-0x38],ecx
   14000aca3:	mov    rcx,QWORD PTR [rsp+0x90]
   14000acab:	mov    edx,0xffc0
   14000acb0:	movsd  QWORD PTR [rax-0x28],xmm3
   14000acb5:	movsd  QWORD PTR [rax-0x20],xmm0
   14000acba:	movsd  QWORD PTR [rax-0x18],xmm1
   14000acbf:	mov    QWORD PTR [rax-0x30],r8
   14000acc3:	call   0x14000abd4
   14000acc8:	lea    rcx,[rsp+0x20]
   14000accd:	call   0x140011520
   14000acd2:	test   eax,eax
   14000acd4:	jne    0x14000acdd
   14000acd6:	mov    ecx,ebx
   14000acd8:	call   0x14001141c
   14000acdd:	movsd  xmm0,QWORD PTR [rsp+0x40]
   14000ace3:	add    rsp,0x50
   14000ace7:	pop    rbx
   14000ace8:	ret    
   14000ace9:	int3   
   14000acea:	int3   
   14000aceb:	int3   
   14000acec:	mov    QWORD PTR [rsp+0x8],rbx
   14000acf1:	mov    QWORD PTR [rsp+0x10],rsi
   14000acf6:	push   rdi
   14000acf7:	sub    rsp,0x20
   14000acfb:	mov    ebx,ecx
   14000acfd:	mov    rsi,rdx
   14000ad00:	mov    edi,ecx
   14000ad02:	and    ebx,0x1f
   14000ad05:	test   cl,0x8
   14000ad08:	je     0x14000ad1d
   14000ad0a:	test   dl,dl
   14000ad0c:	jns    0x14000ad1d
   14000ad0e:	mov    ecx,0x1
   14000ad13:	call   0x14000ac50
   14000ad18:	and    ebx,0xfffffff7
   14000ad1b:	jmp    0x14000ad74
   14000ad1d:	mov    ecx,0x4
   14000ad22:	test   cl,dil
   14000ad25:	je     0x14000ad38
   14000ad27:	bt     rdx,0x9
   14000ad2c:	jae    0x14000ad38
   14000ad2e:	call   0x14000ac50
   14000ad33:	and    ebx,0xfffffffb
   14000ad36:	jmp    0x14000ad74
   14000ad38:	test   dil,0x1
   14000ad3c:	je     0x14000ad54
   14000ad3e:	bt     rdx,0xa
   14000ad43:	jae    0x14000ad54
   14000ad45:	mov    ecx,0x8
   14000ad4a:	call   0x14000ac50
   14000ad4f:	and    ebx,0xfffffffe
   14000ad52:	jmp    0x14000ad74
   14000ad54:	test   dil,0x2
   14000ad58:	je     0x14000ad74
   14000ad5a:	bt     rdx,0xb
   14000ad5f:	jae    0x14000ad74
   14000ad61:	test   dil,0x10
   14000ad65:	je     0x14000ad71
   14000ad67:	mov    ecx,0x10
   14000ad6c:	call   0x14000ac50
   14000ad71:	and    ebx,0xfffffffd
   14000ad74:	test   dil,0x10
   14000ad78:	je     0x14000ad8e
   14000ad7a:	bt     rsi,0xc
   14000ad7f:	jae    0x14000ad8e
   14000ad81:	mov    ecx,0x20
   14000ad86:	call   0x14000ac50
   14000ad8b:	and    ebx,0xffffffef
   14000ad8e:	mov    rsi,QWORD PTR [rsp+0x38]
   14000ad93:	xor    eax,eax
   14000ad95:	test   ebx,ebx
   14000ad97:	mov    rbx,QWORD PTR [rsp+0x30]
   14000ad9c:	sete   al
   14000ad9f:	add    rsp,0x20
   14000ada3:	pop    rdi
   14000ada4:	ret    
   14000ada5:	int3   
   14000ada6:	int3   
   14000ada7:	int3   
   14000ada8:	mov    rax,rsp
   14000adab:	push   rbp
   14000adac:	push   rbx
   14000adad:	push   rsi
   14000adae:	push   rdi
   14000adaf:	push   r14
   14000adb1:	lea    rbp,[rax-0x37]
   14000adb5:	sub    rsp,0xf0
   14000adbc:	movaps XMMWORD PTR [rax-0x38],xmm6
   14000adc0:	mov    rax,QWORD PTR [rip+0x2bc79]        # 0x140036a40
   14000adc7:	xor    rax,rsp
   14000adca:	mov    QWORD PTR [rbp-0x11],rax
   14000adce:	mov    esi,edx
   14000add0:	mov    r14,rcx
   14000add3:	mov    edx,0xffc0
   14000add8:	mov    ecx,0x1f80
   14000addd:	mov    edi,r9d
   14000ade0:	mov    rbx,r8
   14000ade3:	call   0x14000abd4
   14000ade8:	mov    ecx,DWORD PTR [rbp+0x5f]
   14000adeb:	mov    QWORD PTR [rsp+0x40],rax
   14000adf0:	mov    QWORD PTR [rsp+0x50],rbx
   14000adf5:	movsd  xmm0,QWORD PTR [rsp+0x50]
   14000adfb:	mov    rdx,QWORD PTR [rsp+0x40]
   14000ae00:	movsd  QWORD PTR [rsp+0x48],xmm0
   14000ae06:	call   0x14000acec
   14000ae0b:	movsd  xmm6,QWORD PTR [rbp+0x77]
   14000ae10:	test   eax,eax
   14000ae12:	jne    0x14000ae54
   14000ae14:	cmp    DWORD PTR [rbp+0x7f],0x2
   14000ae18:	jne    0x14000ae2b
   14000ae1a:	mov    eax,DWORD PTR [rbp-0x41]
   14000ae1d:	movsd  QWORD PTR [rbp-0x51],xmm6
   14000ae22:	and    eax,0xffffffe3
   14000ae25:	or     eax,0x3
   14000ae28:	mov    DWORD PTR [rbp-0x41],eax
   14000ae2b:	mov    r8d,DWORD PTR [rbp+0x5f]
   14000ae2f:	lea    rax,[rsp+0x48]
   14000ae34:	lea    rdx,[rsp+0x40]
   14000ae39:	mov    QWORD PTR [rsp+0x28],rax
   14000ae3e:	lea    rax,[rbp+0x6f]
   14000ae42:	lea    rcx,[rsp+0x60]
   14000ae47:	mov    r9d,esi
   14000ae4a:	mov    QWORD PTR [rsp+0x20],rax
   14000ae4f:	call   0x1400110c4
   14000ae54:	cmp    DWORD PTR [rip+0x2c635],0x0        # 0x140037490
   14000ae5b:	jne    0x14000ae91
   14000ae5d:	test   edi,edi
   14000ae5f:	je     0x14000ae91
   14000ae61:	mov    rax,QWORD PTR [rsp+0x40]
   14000ae66:	movsd  xmm0,QWORD PTR [rsp+0x48]
   14000ae6c:	mov    edx,DWORD PTR [rbp+0x67]
   14000ae6f:	movsd  xmm3,QWORD PTR [rbp+0x6f]
   14000ae74:	mov    QWORD PTR [rsp+0x30],rax
   14000ae79:	mov    r8,r14
   14000ae7c:	mov    ecx,edi
   14000ae7e:	movsd  QWORD PTR [rsp+0x28],xmm0
   14000ae84:	movsd  QWORD PTR [rsp+0x20],xmm6
   14000ae8a:	call   0x14000ac84
   14000ae8f:	jmp    0x14000aead
   14000ae91:	mov    ecx,edi
   14000ae93:	call   0x14001141c
   14000ae98:	mov    rcx,QWORD PTR [rsp+0x40]
   14000ae9d:	mov    edx,0xffc0
   14000aea2:	call   0x14000abd4
   14000aea7:	movsd  xmm0,QWORD PTR [rsp+0x48]
   14000aead:	mov    rcx,QWORD PTR [rbp-0x11]
   14000aeb1:	xor    rcx,rsp
   14000aeb4:	call   0x14000d0a0
   14000aeb9:	movaps xmm6,XMMWORD PTR [rsp+0xe0]
   14000aec1:	add    rsp,0xf0
   14000aec8:	pop    r14
   14000aeca:	pop    rdi
   14000aecb:	pop    rsi
   14000aecc:	pop    rbx
   14000aecd:	pop    rbp
   14000aece:	ret    
   14000aecf:	int3   
   14000aed0:	mov    rax,rsp
   14000aed3:	push   rbp
   14000aed4:	push   rbx
   14000aed5:	push   rsi
   14000aed6:	push   rdi
   14000aed7:	push   r14
   14000aed9:	lea    rbp,[rax-0x37]
   14000aedd:	sub    rsp,0xf0
   14000aee4:	movaps XMMWORD PTR [rax-0x38],xmm6
   14000aee8:	mov    rax,QWORD PTR [rip+0x2bb51]        # 0x140036a40
   14000aeef:	xor    rax,rsp
   14000aef2:	mov    QWORD PTR [rbp-0x11],rax
   14000aef6:	mov    esi,edx
   14000aef8:	mov    r14,rcx
   14000aefb:	mov    edx,0xffc0
   14000af00:	mov    ecx,0x1f80
   14000af05:	mov    edi,r9d
   14000af08:	mov    rbx,r8
   14000af0b:	call   0x14000abd4
   14000af10:	mov    ecx,DWORD PTR [rbp+0x5f]
   14000af13:	mov    QWORD PTR [rsp+0x48],rax
   14000af18:	mov    DWORD PTR [rsp+0x50],ebx
   14000af1c:	movss  xmm0,DWORD PTR [rsp+0x50]
   14000af22:	mov    rdx,QWORD PTR [rsp+0x48]
   14000af27:	movss  DWORD PTR [rsp+0x40],xmm0
   14000af2d:	call   0x14000acec
   14000af32:	movss  xmm6,DWORD PTR [rbp+0x77]
   14000af37:	test   eax,eax
   14000af39:	jne    0x14000af7b
   14000af3b:	cmp    DWORD PTR [rbp+0x7f],0x2
   14000af3f:	jne    0x14000af52
   14000af41:	mov    eax,DWORD PTR [rbp-0x41]
   14000af44:	movss  DWORD PTR [rbp-0x51],xmm6
   14000af49:	and    eax,0xffffffe1
   14000af4c:	or     eax,0x1
   14000af4f:	mov    DWORD PTR [rbp-0x41],eax
   14000af52:	mov    r8d,DWORD PTR [rbp+0x5f]
   14000af56:	lea    rax,[rsp+0x40]
   14000af5b:	lea    rdx,[rsp+0x48]
   14000af60:	mov    QWORD PTR [rsp+0x28],rax
   14000af65:	lea    rax,[rbp+0x6f]
   14000af69:	lea    rcx,[rsp+0x60]
   14000af6e:	mov    r9d,esi
   14000af71:	mov    QWORD PTR [rsp+0x20],rax
   14000af76:	call   0x1400113f0
   14000af7b:	cmp    DWORD PTR [rip+0x2c50e],0x0        # 0x140037490
   14000af82:	jne    0x14000afc5
   14000af84:	test   edi,edi
   14000af86:	je     0x14000afc5
   14000af88:	movss  xmm0,DWORD PTR [rsp+0x40]
   14000af8e:	movss  xmm3,DWORD PTR [rbp+0x6f]
   14000af93:	mov    rax,QWORD PTR [rsp+0x48]
   14000af98:	mov    edx,DWORD PTR [rbp+0x67]
   14000af9b:	mov    QWORD PTR [rsp+0x30],rax
   14000afa0:	mov    r8,r14
   14000afa3:	cvtps2pd xmm0,xmm0
   14000afa6:	cvtps2pd xmm1,xmm6
   14000afa9:	cvtps2pd xmm3,xmm3
   14000afac:	mov    ecx,edi
   14000afae:	movsd  QWORD PTR [rsp+0x28],xmm0
   14000afb4:	movsd  QWORD PTR [rsp+0x20],xmm1
   14000afba:	call   0x14000ac84
   14000afbf:	cvtsd2ss xmm0,xmm0
   14000afc3:	jmp    0x14000afe1
   14000afc5:	mov    ecx,edi
   14000afc7:	call   0x14001141c
   14000afcc:	mov    rcx,QWORD PTR [rsp+0x48]
   14000afd1:	mov    edx,0xffc0
   14000afd6:	call   0x14000abd4
   14000afdb:	movss  xmm0,DWORD PTR [rsp+0x40]
   14000afe1:	mov    rcx,QWORD PTR [rbp-0x11]
   14000afe5:	xor    rcx,rsp
   14000afe8:	call   0x14000d0a0
   14000afed:	movaps xmm6,XMMWORD PTR [rsp+0xe0]
   14000aff5:	add    rsp,0xf0
   14000affc:	pop    r14
   14000affe:	pop    rdi
   14000afff:	pop    rsi
   14000b000:	pop    rbx
   14000b001:	pop    rbp
   14000b002:	ret    
   14000b003:	int3   
   14000b004:	mov    eax,DWORD PTR [rip+0x2ba32]        # 0x140036a3c
   14000b00a:	ret    
   14000b00b:	int3   
   14000b00c:	rex.W jmp QWORD PTR [rip+0x1c1fd]        # 0x140027210
   14000b013:	int3   
   14000b014:	rex.W jmp QWORD PTR [rip+0x1c1fd]        # 0x140027218
   14000b01b:	int3   
   14000b01c:	test   rcx,rcx
   14000b01f:	je     0x14000b14e
   14000b025:	mov    QWORD PTR [rsp+0x10],rbx
   14000b02a:	push   rdi
   14000b02b:	sub    rsp,0x20
   14000b02f:	mov    rbx,rcx
   14000b032:	mov    rcx,QWORD PTR [rcx+0x38]
   14000b036:	test   rcx,rcx
   14000b039:	je     0x14000b040
   14000b03b:	call   0x140006444
   14000b040:	mov    rcx,QWORD PTR [rbx+0x48]
   14000b044:	test   rcx,rcx
   14000b047:	je     0x14000b04e
   14000b049:	call   0x140006444
   14000b04e:	mov    rcx,QWORD PTR [rbx+0x58]
   14000b052:	test   rcx,rcx
   14000b055:	je     0x14000b05c
   14000b057:	call   0x140006444
   14000b05c:	mov    rcx,QWORD PTR [rbx+0x68]
   14000b060:	test   rcx,rcx
   14000b063:	je     0x14000b06a
   14000b065:	call   0x140006444
   14000b06a:	mov    rcx,QWORD PTR [rbx+0x70]
   14000b06e:	test   rcx,rcx
   14000b071:	je     0x14000b078
   14000b073:	call   0x140006444
   14000b078:	mov    rcx,QWORD PTR [rbx+0x78]
   14000b07c:	test   rcx,rcx
   14000b07f:	je     0x14000b086
   14000b081:	call   0x140006444
   14000b086:	mov    rcx,QWORD PTR [rbx+0x80]
   14000b08d:	test   rcx,rcx
   14000b090:	je     0x14000b097
   14000b092:	call   0x140006444
   14000b097:	mov    rcx,QWORD PTR [rbx+0xa0]
   14000b09e:	lea    rax,[rip+0x1f8db]        # 0x14002a980
   14000b0a5:	cmp    rcx,rax
   14000b0a8:	je     0x14000b0af
   14000b0aa:	call   0x140006444
   14000b0af:	mov    edi,0xd
   14000b0b4:	mov    ecx,edi
   14000b0b6:	call   0x140008760
   14000b0bb:	nop
   14000b0bc:	mov    rcx,QWORD PTR [rbx+0xb8]
   14000b0c3:	mov    QWORD PTR [rsp+0x30],rcx
   14000b0c8:	test   rcx,rcx
   14000b0cb:	je     0x14000b0e9
   14000b0cd:	lock dec DWORD PTR [rcx]
   14000b0d0:	jne    0x14000b0e9
   14000b0d2:	lea    rax,[rip+0x2b637]        # 0x140036710
   14000b0d9:	mov    rcx,QWORD PTR [rsp+0x30]
   14000b0de:	cmp    rcx,rax
   14000b0e1:	je     0x14000b0e9
   14000b0e3:	call   0x140006444
   14000b0e8:	nop
   14000b0e9:	mov    ecx,edi
   14000b0eb:	call   0x14000897c
   14000b0f0:	mov    ecx,0xc
   14000b0f5:	call   0x140008760
   14000b0fa:	nop
   14000b0fb:	mov    rdi,QWORD PTR [rbx+0xc0]
   14000b102:	test   rdi,rdi
   14000b105:	je     0x14000b132
   14000b107:	mov    rcx,rdi
   14000b10a:	call   0x14000ff50
   14000b10f:	cmp    rdi,QWORD PTR [rip+0x2bc6a]        # 0x140036d80
   14000b116:	je     0x14000b132
   14000b118:	lea    rax,[rip+0x2bc71]        # 0x140036d90
   14000b11f:	cmp    rdi,rax
   14000b122:	je     0x14000b132
   14000b124:	cmp    DWORD PTR [rdi],0x0
   14000b127:	jne    0x14000b132
   14000b129:	mov    rcx,rdi
   14000b12c:	call   0x14000fdb8
   14000b131:	nop
   14000b132:	mov    ecx,0xc
   14000b137:	call   0x14000897c
   14000b13c:	mov    rcx,rbx
   14000b13f:	call   0x140006444
   14000b144:	mov    rbx,QWORD PTR [rsp+0x38]
   14000b149:	add    rsp,0x20
   14000b14d:	pop    rdi
   14000b14e:	ret    
   14000b14f:	int3   
   14000b150:	rex push rbx
   14000b152:	sub    rsp,0x20
   14000b156:	mov    rbx,rcx
   14000b159:	mov    ecx,DWORD PTR [rip+0x2b8dd]        # 0x140036a3c
   14000b15f:	cmp    ecx,0xffffffff
   14000b162:	je     0x14000b186
   14000b164:	test   rbx,rbx
   14000b167:	jne    0x14000b177
   14000b169:	call   0x140008bc8
   14000b16e:	mov    ecx,DWORD PTR [rip+0x2b8c8]        # 0x140036a3c
   14000b174:	mov    rbx,rax
   14000b177:	xor    edx,edx
   14000b179:	call   0x140008be4
   14000b17e:	mov    rcx,rbx
   14000b181:	call   0x14000b01c
   14000b186:	add    rsp,0x20
   14000b18a:	pop    rbx
   14000b18b:	ret    
   14000b18c:	rex push rbx
   14000b18e:	sub    rsp,0x20
   14000b192:	call   0x14000b1b0
   14000b197:	mov    rbx,rax
   14000b19a:	test   rax,rax
   14000b19d:	jne    0x14000b1a7
   14000b19f:	lea    ecx,[rax+0x10]
   14000b1a2:	call   0x140005ff4
   14000b1a7:	mov    rax,rbx
   14000b1aa:	add    rsp,0x20
   14000b1ae:	pop    rbx
   14000b1af:	ret    
   14000b1b0:	mov    QWORD PTR [rsp+0x8],rbx
   14000b1b5:	push   rdi
   14000b1b6:	sub    rsp,0x20
   14000b1ba:	call   QWORD PTR [rip+0x1bec0]        # 0x140027080
   14000b1c0:	mov    ecx,DWORD PTR [rip+0x2b876]        # 0x140036a3c
   14000b1c6:	mov    edi,eax
   14000b1c8:	call   0x140008bc8
   14000b1cd:	mov    rbx,rax
   14000b1d0:	test   rax,rax
   14000b1d3:	jne    0x14000b21c
   14000b1d5:	lea    ecx,[rax+0x1]
   14000b1d8:	mov    edx,0x478
   14000b1dd:	call   0x140007ed4
   14000b1e2:	mov    rbx,rax
   14000b1e5:	test   rax,rax
   14000b1e8:	je     0x14000b21c
   14000b1ea:	mov    ecx,DWORD PTR [rip+0x2b84c]        # 0x140036a3c
   14000b1f0:	mov    rdx,rax
   14000b1f3:	call   0x140008be4
   14000b1f8:	mov    rcx,rbx
   14000b1fb:	test   eax,eax
   14000b1fd:	je     0x14000b215
   14000b1ff:	xor    edx,edx
   14000b201:	call   0x14000b234
   14000b206:	call   QWORD PTR [rip+0x1c00c]        # 0x140027218
   14000b20c:	or     QWORD PTR [rbx+0x8],0xffffffffffffffff
   14000b211:	mov    DWORD PTR [rbx],eax
   14000b213:	jmp    0x14000b21c
   14000b215:	call   0x140006444
   14000b21a:	xor    ebx,ebx
   14000b21c:	mov    ecx,edi
   14000b21e:	call   QWORD PTR [rip+0x1bf24]        # 0x140027148
   14000b224:	mov    rax,rbx
   14000b227:	mov    rbx,QWORD PTR [rsp+0x30]
   14000b22c:	add    rsp,0x20
   14000b230:	pop    rdi
   14000b231:	ret    
   14000b232:	int3   
   14000b233:	int3   
   14000b234:	mov    QWORD PTR [rsp+0x8],rbx
   14000b239:	push   rdi
   14000b23a:	sub    rsp,0x20
   14000b23e:	mov    rdi,rdx
   14000b241:	mov    rbx,rcx
   14000b244:	lea    rax,[rip+0x1f735]        # 0x14002a980
   14000b24b:	mov    QWORD PTR [rcx+0xa0],rax
   14000b252:	and    DWORD PTR [rcx+0x10],0x0
   14000b256:	mov    DWORD PTR [rcx+0x1c],0x1
   14000b25d:	mov    DWORD PTR [rcx+0xc8],0x1
   14000b267:	mov    eax,0x43
   14000b26c:	mov    WORD PTR [rcx+0x164],ax
   14000b273:	mov    WORD PTR [rcx+0x26a],ax
   14000b27a:	lea    rax,[rip+0x2b48f]        # 0x140036710
   14000b281:	mov    QWORD PTR [rcx+0xb8],rax
   14000b288:	and    QWORD PTR [rcx+0x470],0x0
   14000b290:	mov    ecx,0xd
   14000b295:	call   0x140008760
   14000b29a:	nop
   14000b29b:	mov    rax,QWORD PTR [rbx+0xb8]
   14000b2a2:	lock inc DWORD PTR [rax]
   14000b2a5:	mov    ecx,0xd
   14000b2aa:	call   0x14000897c
   14000b2af:	mov    ecx,0xc
   14000b2b4:	call   0x140008760
   14000b2b9:	nop
   14000b2ba:	mov    QWORD PTR [rbx+0xc0],rdi
   14000b2c1:	test   rdi,rdi
   14000b2c4:	jne    0x14000b2d4
   14000b2c6:	mov    rax,QWORD PTR [rip+0x2bab3]        # 0x140036d80
   14000b2cd:	mov    QWORD PTR [rbx+0xc0],rax
   14000b2d4:	mov    rcx,QWORD PTR [rbx+0xc0]
   14000b2db:	call   0x14000fd2c
   14000b2e0:	nop
   14000b2e1:	mov    ecx,0xc
   14000b2e6:	call   0x14000897c
   14000b2eb:	mov    rbx,QWORD PTR [rsp+0x30]
   14000b2f0:	add    rsp,0x20
   14000b2f4:	pop    rdi
   14000b2f5:	ret    
   14000b2f6:	int3   
   14000b2f7:	int3   
   14000b2f8:	rex push rbx
   14000b2fa:	sub    rsp,0x20
   14000b2fe:	call   0x14000615c
   14000b303:	call   0x140008918
   14000b308:	test   eax,eax
   14000b30a:	je     0x14000b36a
   14000b30c:	lea    rcx,[rip+0xfffffffffffffd09]        # 0x14000b01c
   14000b313:	call   0x140008b90
   14000b318:	mov    DWORD PTR [rip+0x2b71e],eax        # 0x140036a3c
   14000b31e:	cmp    eax,0xffffffff
   14000b321:	je     0x14000b36a
   14000b323:	mov    edx,0x478
   14000b328:	mov    ecx,0x1
   14000b32d:	call   0x140007ed4
   14000b332:	mov    rbx,rax
   14000b335:	test   rax,rax
   14000b338:	je     0x14000b36a
   14000b33a:	mov    ecx,DWORD PTR [rip+0x2b6fc]        # 0x140036a3c
   14000b340:	mov    rdx,rax
   14000b343:	call   0x140008be4
   14000b348:	test   eax,eax
   14000b34a:	je     0x14000b36a
   14000b34c:	xor    edx,edx
   14000b34e:	mov    rcx,rbx
   14000b351:	call   0x14000b234
   14000b356:	call   QWORD PTR [rip+0x1bebc]        # 0x140027218
   14000b35c:	or     QWORD PTR [rbx+0x8],0xffffffffffffffff
   14000b361:	mov    DWORD PTR [rbx],eax
   14000b363:	mov    eax,0x1
   14000b368:	jmp    0x14000b371
   14000b36a:	call   0x14000b378
   14000b36f:	xor    eax,eax
   14000b371:	add    rsp,0x20
   14000b375:	pop    rbx
   14000b376:	ret    
   14000b377:	int3   
   14000b378:	sub    rsp,0x28
   14000b37c:	mov    ecx,DWORD PTR [rip+0x2b6ba]        # 0x140036a3c
   14000b382:	cmp    ecx,0xffffffff
   14000b385:	je     0x14000b393
   14000b387:	call   0x140008bac
   14000b38c:	or     DWORD PTR [rip+0x2b6a9],0xffffffff        # 0x140036a3c
   14000b393:	add    rsp,0x28
   14000b397:	jmp    0x1400087d0
   14000b39c:	test   rcx,rcx
   14000b39f:	je     0x14000b409
   14000b3a1:	mov    BYTE PTR [rsp+0x10],dl
   14000b3a5:	sub    rsp,0x28
   14000b3a9:	cmp    DWORD PTR [rcx],0xe06d7363
   14000b3af:	jne    0x14000b405
   14000b3b1:	cmp    DWORD PTR [rcx+0x18],0x4
   14000b3b5:	jne    0x14000b405
   14000b3b7:	mov    eax,DWORD PTR [rcx+0x20]
   14000b3ba:	sub    eax,0x19930520
   14000b3bf:	cmp    eax,0x2
   14000b3c2:	ja     0x14000b405
   14000b3c4:	mov    rax,QWORD PTR [rcx+0x30]
   14000b3c8:	test   rax,rax
   14000b3cb:	je     0x14000b405
   14000b3cd:	movsxd rdx,DWORD PTR [rax+0x4]
   14000b3d1:	test   edx,edx
   14000b3d3:	je     0x14000b3ee
   14000b3d5:	mov    rax,rdx
   14000b3d8:	mov    rdx,QWORD PTR [rcx+0x38]
   14000b3dc:	add    rdx,rax
   14000b3df:	mov    rcx,QWORD PTR [rcx+0x28]
   14000b3e3:	call   rdx
   14000b3e5:	nop
   14000b3e6:	jmp    0x14000b405
   14000b3e8:	call   0x14000984c
   14000b3ed:	nop
   14000b3ee:	test   BYTE PTR [rax],0x10
   14000b3f1:	je     0x14000b405
   14000b3f3:	mov    rax,QWORD PTR [rcx+0x28]
   14000b3f7:	mov    rcx,QWORD PTR [rax]
   14000b3fa:	test   rcx,rcx
   14000b3fd:	je     0x14000b405
   14000b3ff:	mov    rax,QWORD PTR [rcx]
   14000b402:	call   QWORD PTR [rax+0x10]
   14000b405:	add    rsp,0x28
   14000b409:	ret    
   14000b40a:	int3   
   14000b40b:	int3   
   14000b40c:	rex push rbx
   14000b40e:	sub    rsp,0x20
   14000b412:	mov    rbx,rcx
   14000b415:	call   0x14000790c
   14000b41a:	lea    rax,[rip+0x1f527]        # 0x14002a948
   14000b421:	mov    QWORD PTR [rbx],rax
   14000b424:	mov    rax,rbx
   14000b427:	add    rsp,0x20
   14000b42b:	pop    rbx
   14000b42c:	ret    
   14000b42d:	int3   
   14000b42e:	int3   
   14000b42f:	int3   
   14000b430:	mov    QWORD PTR [rsp+0x10],rdx
   14000b435:	push   rbx
   14000b436:	sub    rsp,0x20
   14000b43a:	lea    rdx,[rsp+0x38]
   14000b43f:	mov    rbx,rcx
   14000b442:	call   0x1400078c0
   14000b447:	lea    rax,[rip+0x1f4fa]        # 0x14002a948
   14000b44e:	mov    QWORD PTR [rbx],rax
   14000b451:	mov    rax,rbx
   14000b454:	add    rsp,0x20
   14000b458:	pop    rbx
   14000b459:	ret    
   14000b45a:	int3   
   14000b45b:	int3   
   14000b45c:	lea    rax,[rip+0x1f4e5]        # 0x14002a948
   14000b463:	mov    QWORD PTR [rcx],rax
   14000b466:	jmp    0x140007980
   14000b46b:	int3   
   14000b46c:	mov    QWORD PTR [rsp+0x8],rbx
   14000b471:	push   rdi
   14000b472:	sub    rsp,0x20
   14000b476:	lea    rax,[rip+0x1f4cb]        # 0x14002a948
   14000b47d:	mov    ebx,edx
   14000b47f:	mov    rdi,rcx
   14000b482:	mov    QWORD PTR [rcx],rax
   14000b485:	call   0x140007980
   14000b48a:	test   bl,0x1
   14000b48d:	je     0x14000b497
   14000b48f:	mov    rcx,rdi
   14000b492:	call   0x140005454
   14000b497:	mov    rax,rdi
   14000b49a:	mov    rbx,QWORD PTR [rsp+0x30]
   14000b49f:	add    rsp,0x20
   14000b4a3:	pop    rdi
   14000b4a4:	ret    
   14000b4a5:	int3   
   14000b4a6:	int3   
   14000b4a7:	int3   
   14000b4a8:	mov    rax,rsp
   14000b4ab:	mov    QWORD PTR [rax+0x8],rbx
   14000b4af:	mov    QWORD PTR [rax+0x18],rbp
   14000b4b3:	push   rsi
   14000b4b4:	push   rdi
   14000b4b5:	push   r12
   14000b4b7:	push   r14
   14000b4b9:	push   r15
   14000b4bb:	sub    rsp,0x50
   14000b4bf:	mov    r15,QWORD PTR [rsp+0xa0]
   14000b4c7:	mov    rbp,r9
   14000b4ca:	mov    r14,rdx
   14000b4cd:	mov    r12,r8
   14000b4d0:	mov    rbx,rcx
   14000b4d3:	lea    r9,[rax+0x10]
   14000b4d7:	mov    r8,r15
   14000b4da:	mov    rdx,rbp
   14000b4dd:	mov    rcx,r14
   14000b4e0:	call   0x140006a30
   14000b4e5:	mov    r9,QWORD PTR [rsp+0xb0]
   14000b4ed:	mov    rsi,QWORD PTR [rsp+0xa8]
   14000b4f5:	mov    rdi,rax
   14000b4f8:	test   r9,r9
   14000b4fb:	je     0x14000b50b
   14000b4fd:	mov    r8,rsi
   14000b500:	mov    rdx,rax
   14000b503:	mov    rcx,rbx
   14000b506:	call   0x14000bf90
   14000b50b:	call   0x140006e58
   14000b510:	movsxd rcx,DWORD PTR [rsi+0xc]
   14000b514:	mov    r9,rdi
   14000b517:	add    rax,rcx
   14000b51a:	mov    cl,BYTE PTR [rsp+0xd8]
   14000b521:	mov    r8,r12
   14000b524:	mov    BYTE PTR [rsp+0x40],cl
   14000b528:	mov    rcx,QWORD PTR [rsp+0xb8]
   14000b530:	mov    QWORD PTR [rsp+0x38],rbp
   14000b535:	mov    edx,DWORD PTR [rcx]
   14000b537:	mov    QWORD PTR [rsp+0x30],r15
   14000b53c:	mov    rcx,r14
   14000b53f:	mov    DWORD PTR [rsp+0x28],edx
   14000b543:	mov    rdx,rbx
   14000b546:	mov    QWORD PTR [rsp+0x20],rax
   14000b54b:	call   0x140006f00
   14000b550:	lea    r11,[rsp+0x50]
   14000b555:	mov    rbx,QWORD PTR [r11+0x30]
   14000b559:	mov    rbp,QWORD PTR [r11+0x40]
   14000b55d:	mov    rsp,r11
   14000b560:	pop    r15
   14000b562:	pop    r14
   14000b564:	pop    r12
   14000b566:	pop    rdi
   14000b567:	pop    rsi
   14000b568:	ret    
   14000b569:	int3   
   14000b56a:	int3   
   14000b56b:	int3   
   14000b56c:	mov    QWORD PTR [rsp+0x8],rbx
   14000b571:	push   rdi
   14000b572:	sub    rsp,0x20
   14000b576:	mov    r9,QWORD PTR [rcx]
   14000b579:	and    DWORD PTR [r8],0x0
   14000b57d:	mov    rbx,r8
   14000b580:	mov    r8d,0xe06d7363
   14000b586:	cmp    DWORD PTR [r9],r8d
   14000b589:	jne    0x14000b5e8
   14000b58b:	cmp    DWORD PTR [r9+0x18],0x4
   14000b590:	mov    edi,0x1
   14000b595:	mov    r10d,0x19930520
   14000b59b:	jne    0x14000b5b8
   14000b59d:	mov    eax,DWORD PTR [r9+0x20]
   14000b5a1:	sub    eax,r10d
   14000b5a4:	cmp    eax,0x2
   14000b5a7:	ja     0x14000b5b8
   14000b5a9:	mov    rax,QWORD PTR [rdx+0x28]
   14000b5ad:	mov    ecx,DWORD PTR [rbx]
   14000b5af:	cmp    QWORD PTR [r9+0x28],rax
   14000b5b3:	cmove  ecx,edi
   14000b5b6:	mov    DWORD PTR [rbx],ecx
   14000b5b8:	cmp    DWORD PTR [r9],r8d
   14000b5bb:	jne    0x14000b5e8
   14000b5bd:	cmp    DWORD PTR [r9+0x18],0x4
   14000b5c2:	jne    0x14000b5e8
   14000b5c4:	mov    ecx,DWORD PTR [r9+0x20]
   14000b5c8:	sub    ecx,r10d
   14000b5cb:	cmp    ecx,0x2
   14000b5ce:	ja     0x14000b5e8
   14000b5d0:	cmp    QWORD PTR [r9+0x30],0x0
   14000b5d5:	jne    0x14000b5e8
   14000b5d7:	call   0x14000b18c
   14000b5dc:	mov    DWORD PTR [rax+0x460],edi
   14000b5e2:	mov    DWORD PTR [rbx],edi
   14000b5e4:	mov    eax,edi
   14000b5e6:	jmp    0x14000b5ea
   14000b5e8:	xor    eax,eax
   14000b5ea:	mov    rbx,QWORD PTR [rsp+0x30]
   14000b5ef:	add    rsp,0x20
   14000b5f3:	pop    rdi
   14000b5f4:	ret    
   14000b5f5:	int3   
   14000b5f6:	int3   
   14000b5f7:	int3   
   14000b5f8:	mov    QWORD PTR [rsp+0x10],rbx
   14000b5fd:	mov    QWORD PTR [rsp+0x18],r8
   14000b602:	push   rbp
   14000b603:	push   rsi
   14000b604:	push   rdi
   14000b605:	push   r12
   14000b607:	push   r13
   14000b609:	push   r14
   14000b60b:	push   r15
   14000b60d:	lea    rbp,[rsp-0x7]
   14000b612:	sub    rsp,0xb0
   14000b619:	mov    rbx,QWORD PTR [rbp+0x67]
   14000b61d:	mov    r13,rdx
   14000b620:	mov    rdi,rcx
   14000b623:	xor    r12d,r12d
   14000b626:	mov    rdx,r9
   14000b629:	mov    rcx,rbx
   14000b62c:	mov    r15,r9
   14000b62f:	mov    r14,r8
   14000b632:	mov    BYTE PTR [rbp+0x47],r12b
   14000b636:	mov    BYTE PTR [rbp-0x49],r12b
   14000b63a:	call   0x14000cf6c
   14000b63f:	lea    r9,[rbp-0x21]
   14000b643:	mov    r8,rbx
   14000b646:	mov    rdx,r15
   14000b649:	mov    rcx,r13
   14000b64c:	mov    esi,eax
   14000b64e:	call   0x140006a30
   14000b653:	mov    r8,rbx
   14000b656:	mov    rdx,r15
   14000b659:	mov    rcx,r13
   14000b65c:	call   0x14000cef8
   14000b661:	mov    r8,rbx
   14000b664:	mov    rdx,r15
   14000b667:	cmp    esi,eax
   14000b669:	jle    0x14000b68a
   14000b66b:	lea    rcx,[rbp-0x21]
   14000b66f:	mov    r9d,esi
   14000b672:	call   0x14000cf24
   14000b677:	mov    r9d,esi
   14000b67a:	mov    r8,rbx
   14000b67d:	mov    rdx,r15
   14000b680:	mov    rcx,r13
   14000b683:	call   0x14000cf30
   14000b688:	jmp    0x14000b694
   14000b68a:	mov    rcx,r13
   14000b68d:	call   0x14000cef8
   14000b692:	mov    esi,eax
   14000b694:	cmp    esi,0xffffffff
   14000b697:	jl     0x14000b69e
   14000b699:	cmp    esi,DWORD PTR [rbx+0x4]
   14000b69c:	jl     0x14000b6a3
   14000b69e:	call   0x14000982c
   14000b6a3:	cmp    DWORD PTR [rdi],0xe06d7363
   14000b6a9:	jne    0x14000ba2a
   14000b6af:	cmp    DWORD PTR [rdi+0x18],0x4
   14000b6b3:	jne    0x14000b7f0
   14000b6b9:	mov    eax,DWORD PTR [rdi+0x20]
   14000b6bc:	sub    eax,0x19930520
   14000b6c1:	cmp    eax,0x2
   14000b6c4:	ja     0x14000b7f0
   14000b6ca:	cmp    QWORD PTR [rdi+0x30],r12
   14000b6ce:	jne    0x14000b7f0
   14000b6d4:	call   0x14000b18c
   14000b6d9:	cmp    QWORD PTR [rax+0xf0],r12
   14000b6e0:	je     0x14000ba0f
   14000b6e6:	call   0x14000b18c
   14000b6eb:	mov    rdi,QWORD PTR [rax+0xf0]
   14000b6f2:	call   0x14000b18c
   14000b6f7:	mov    rcx,QWORD PTR [rdi+0x38]
   14000b6fb:	mov    r14,QWORD PTR [rax+0xf8]
   14000b702:	mov    BYTE PTR [rbp+0x47],0x1
   14000b706:	mov    QWORD PTR [rbp+0x57],r14
   14000b70a:	call   0x140006ee4
   14000b70f:	mov    edx,0x1
   14000b714:	mov    rcx,rdi
   14000b717:	call   0x140011530
   14000b71c:	test   eax,eax
   14000b71e:	jne    0x14000b725
   14000b720:	call   0x14000982c
   14000b725:	cmp    DWORD PTR [rdi],0xe06d7363
   14000b72b:	jne    0x14000b74b
   14000b72d:	cmp    DWORD PTR [rdi+0x18],0x4
   14000b731:	jne    0x14000b74b
   14000b733:	mov    eax,DWORD PTR [rdi+0x20]
   14000b736:	sub    eax,0x19930520
   14000b73b:	cmp    eax,0x2
   14000b73e:	ja     0x14000b74b
   14000b740:	cmp    QWORD PTR [rdi+0x30],r12
   14000b744:	jne    0x14000b74b
   14000b746:	call   0x14000982c
   14000b74b:	call   0x14000b18c
   14000b750:	cmp    QWORD PTR [rax+0x108],r12
   14000b757:	je     0x14000b7f0
   14000b75d:	call   0x14000b18c
   14000b762:	mov    r14,QWORD PTR [rax+0x108]
   14000b769:	call   0x14000b18c
   14000b76e:	mov    rdx,r14
   14000b771:	mov    rcx,rdi
   14000b774:	mov    QWORD PTR [rax+0x108],r12
   14000b77b:	call   0x14000bd14
   14000b780:	test   al,al
   14000b782:	jne    0x14000b7ec
   14000b784:	mov    r15d,r12d
   14000b787:	cmp    DWORD PTR [r14],r12d
   14000b78a:	jle    0x14000ba62
   14000b790:	mov    rsi,r12
   14000b793:	call   0x140006e58
   14000b798:	movsxd rcx,DWORD PTR [r14+0x4]
   14000b79c:	add    rax,rsi
   14000b79f:	cmp    DWORD PTR [rcx+rax*1+0x4],r12d
   14000b7a4:	je     0x14000b7c1
   14000b7a6:	call   0x140006e58
   14000b7ab:	movsxd rcx,DWORD PTR [r14+0x4]
   14000b7af:	add    rax,rsi
   14000b7b2:	movsxd rbx,DWORD PTR [rcx+rax*1+0x4]
   14000b7b7:	call   0x140006e58
   14000b7bc:	add    rax,rbx
   14000b7bf:	jmp    0x14000b7c4
   14000b7c1:	mov    rax,r12
   14000b7c4:	lea    rdx,[rip+0x2c3ed]        # 0x140037bb8
   14000b7cb:	mov    rcx,rax
   14000b7ce:	call   0x1400073a0
   14000b7d3:	test   al,al
   14000b7d5:	jne    0x14000ba68
   14000b7db:	inc    r15d
   14000b7de:	add    rsi,0x14
   14000b7e2:	cmp    r15d,DWORD PTR [r14]
   14000b7e5:	jl     0x14000b793
   14000b7e7:	jmp    0x14000ba62
   14000b7ec:	mov    r14,QWORD PTR [rbp+0x57]
   14000b7f0:	cmp    DWORD PTR [rdi],0xe06d7363
   14000b7f6:	jne    0x14000ba2a
   14000b7fc:	cmp    DWORD PTR [rdi+0x18],0x4
   14000b800:	jne    0x14000ba2a
   14000b806:	mov    eax,DWORD PTR [rdi+0x20]
   14000b809:	sub    eax,0x19930520
   14000b80e:	cmp    eax,0x2
   14000b811:	ja     0x14000ba2a
   14000b817:	cmp    DWORD PTR [rbx+0xc],r12d
   14000b81b:	jbe    0x14000b96f
   14000b821:	mov    r8d,DWORD PTR [rbp+0x77]
   14000b825:	lea    rax,[rbp-0x41]
   14000b829:	mov    QWORD PTR [rsp+0x30],r15
   14000b82e:	mov    QWORD PTR [rsp+0x28],rax
   14000b833:	lea    rax,[rbp-0x45]
   14000b837:	mov    r9d,esi
   14000b83a:	mov    rdx,rbx
   14000b83d:	mov    rcx,r13
   14000b840:	mov    QWORD PTR [rsp+0x20],rax
   14000b845:	call   0x140006afc
   14000b84a:	mov    ecx,DWORD PTR [rbp-0x45]
   14000b84d:	mov    edx,DWORD PTR [rbp-0x41]
   14000b850:	cmp    ecx,edx
   14000b852:	jae    0x14000b96f
   14000b858:	lea    r14,[rax+0x10]
   14000b85c:	cmp    DWORD PTR [r14-0x10],esi
   14000b860:	jg     0x14000b951
   14000b866:	cmp    esi,DWORD PTR [r14-0xc]
   14000b86a:	jg     0x14000b951
   14000b870:	call   0x140006e58
   14000b875:	movsxd r12,DWORD PTR [r14]
   14000b878:	add    r12,rax
   14000b87b:	mov    eax,DWORD PTR [r14-0x4]
   14000b87f:	mov    DWORD PTR [rbp-0x3d],eax
   14000b882:	test   eax,eax
   14000b884:	jle    0x14000b94b
   14000b88a:	call   0x140006e70
   14000b88f:	mov    rcx,QWORD PTR [rdi+0x30]
   14000b893:	movsxd rdx,DWORD PTR [rcx+0xc]
   14000b897:	add    rax,0x4
   14000b89b:	add    rax,rdx
   14000b89e:	mov    QWORD PTR [rbp-0x31],rax
   14000b8a2:	call   0x140006e70
   14000b8a7:	mov    rcx,QWORD PTR [rdi+0x30]
   14000b8ab:	movsxd rdx,DWORD PTR [rcx+0xc]
   14000b8af:	mov    ecx,DWORD PTR [rax+rdx*1]
   14000b8b2:	mov    DWORD PTR [rbp-0x39],ecx
   14000b8b5:	test   ecx,ecx
   14000b8b7:	jle    0x14000b8f0
   14000b8b9:	call   0x140006e70
   14000b8be:	mov    rcx,QWORD PTR [rbp-0x31]
   14000b8c2:	mov    r8,QWORD PTR [rdi+0x30]
   14000b8c6:	movsxd rcx,DWORD PTR [rcx]
   14000b8c9:	add    rax,rcx
   14000b8cc:	mov    rcx,r12
   14000b8cf:	mov    rdx,rax
   14000b8d2:	mov    QWORD PTR [rbp-0x29],rax
   14000b8d6:	call   0x14000cda0
   14000b8db:	test   eax,eax
   14000b8dd:	jne    0x14000b8fb
   14000b8df:	mov    eax,DWORD PTR [rbp-0x39]
   14000b8e2:	add    QWORD PTR [rbp-0x31],0x4
   14000b8e7:	dec    eax
   14000b8e9:	mov    DWORD PTR [rbp-0x39],eax
   14000b8ec:	test   eax,eax
   14000b8ee:	jg     0x14000b8b9
   14000b8f0:	mov    eax,DWORD PTR [rbp-0x3d]
   14000b8f3:	dec    eax
   14000b8f5:	add    r12,0x14
   14000b8f9:	jmp    0x14000b87f
   14000b8fb:	mov    al,BYTE PTR [rbp+0x6f]
   14000b8fe:	mov    r8,QWORD PTR [rbp+0x57]
   14000b902:	mov    r9,r15
   14000b905:	mov    BYTE PTR [rsp+0x58],al
   14000b909:	mov    al,BYTE PTR [rbp+0x47]
   14000b90c:	mov    rdx,r13
   14000b90f:	mov    BYTE PTR [rsp+0x50],al
   14000b913:	mov    rax,QWORD PTR [rbp+0x7f]
   14000b917:	mov    rcx,rdi
   14000b91a:	mov    QWORD PTR [rsp+0x48],rax
   14000b91f:	mov    eax,DWORD PTR [rbp+0x77]
   14000b922:	mov    BYTE PTR [rbp-0x49],0x1
   14000b926:	mov    DWORD PTR [rsp+0x40],eax
   14000b92a:	lea    rax,[r14-0x10]
   14000b92e:	mov    QWORD PTR [rsp+0x38],rax
   14000b933:	mov    rax,QWORD PTR [rbp-0x29]
   14000b937:	mov    QWORD PTR [rsp+0x30],rax
   14000b93c:	mov    QWORD PTR [rsp+0x28],r12
   14000b941:	mov    QWORD PTR [rsp+0x20],rbx
   14000b946:	call   0x14000b4a8
   14000b94b:	mov    edx,DWORD PTR [rbp-0x41]
   14000b94e:	mov    ecx,DWORD PTR [rbp-0x45]
   14000b951:	inc    ecx
   14000b953:	add    r14,0x14
   14000b957:	mov    DWORD PTR [rbp-0x45],ecx
   14000b95a:	cmp    ecx,edx
   14000b95c:	jb     0x14000b85c
   14000b962:	xor    r12d,r12d
   14000b965:	cmp    BYTE PTR [rbp-0x49],r12b
   14000b969:	jne    0x14000b9fc
   14000b96f:	mov    eax,DWORD PTR [rbx]
   14000b971:	and    eax,0x1fffffff
   14000b976:	cmp    eax,0x19930521
   14000b97b:	jb     0x14000b9fc
   14000b97d:	mov    esi,DWORD PTR [rbx+0x20]
   14000b980:	test   esi,esi
   14000b982:	je     0x14000b991
   14000b984:	movsxd rsi,esi
   14000b987:	call   0x140006e58
   14000b98c:	add    rax,rsi
   14000b98f:	jmp    0x14000b994
   14000b991:	mov    rax,r12
   14000b994:	test   rax,rax
   14000b997:	je     0x14000b9fc
   14000b999:	test   esi,esi
   14000b99b:	je     0x14000b9ae
   14000b99d:	call   0x140006e58
   14000b9a2:	mov    rdx,rax
   14000b9a5:	movsxd rax,DWORD PTR [rbx+0x20]
   14000b9a9:	add    rdx,rax
   14000b9ac:	jmp    0x14000b9b1
   14000b9ae:	mov    rdx,r12
   14000b9b1:	mov    rcx,rdi
   14000b9b4:	call   0x14000bd14
   14000b9b9:	test   al,al
   14000b9bb:	jne    0x14000b9fc
   14000b9bd:	lea    r9,[rbp+0x47]
   14000b9c1:	mov    r8,rbx
   14000b9c4:	mov    rdx,r15
   14000b9c7:	mov    rcx,r13
   14000b9ca:	call   0x140006a30
   14000b9cf:	mov    cl,BYTE PTR [rbp+0x6f]
   14000b9d2:	mov    r8,QWORD PTR [rbp+0x57]
   14000b9d6:	mov    BYTE PTR [rsp+0x40],cl
   14000b9da:	mov    QWORD PTR [rsp+0x38],r15
   14000b9df:	mov    QWORD PTR [rsp+0x30],rbx
   14000b9e4:	or     DWORD PTR [rsp+0x28],0xffffffff
   14000b9e9:	mov    r9,rax
   14000b9ec:	mov    rdx,rdi
   14000b9ef:	mov    rcx,r13
   14000b9f2:	mov    QWORD PTR [rsp+0x20],r12
   14000b9f7:	call   0x140006f00
   14000b9fc:	call   0x14000b18c
   14000ba01:	cmp    QWORD PTR [rax+0x108],r12
   14000ba08:	je     0x14000ba0f
   14000ba0a:	call   0x14000982c
   14000ba0f:	mov    rbx,QWORD PTR [rsp+0xf8]
   14000ba17:	add    rsp,0xb0
   14000ba1e:	pop    r15
   14000ba20:	pop    r14
   14000ba22:	pop    r13
   14000ba24:	pop    r12
   14000ba26:	pop    rdi
   14000ba27:	pop    rsi
   14000ba28:	pop    rbp
   14000ba29:	ret    
   14000ba2a:	cmp    DWORD PTR [rbx+0xc],r12d
   14000ba2e:	jbe    0x14000b9fc
   14000ba30:	cmp    BYTE PTR [rbp+0x6f],r12b
   14000ba34:	jne    0x14000baa6
   14000ba36:	mov    rax,QWORD PTR [rbp+0x7f]
   14000ba3a:	mov    r9,r15
   14000ba3d:	mov    r8,r14
   14000ba40:	mov    QWORD PTR [rsp+0x38],rax
   14000ba45:	mov    eax,DWORD PTR [rbp+0x77]
   14000ba48:	mov    rdx,r13
   14000ba4b:	mov    DWORD PTR [rsp+0x30],eax
   14000ba4f:	mov    rcx,rdi
   14000ba52:	mov    DWORD PTR [rsp+0x28],esi
   14000ba56:	mov    QWORD PTR [rsp+0x20],rbx
   14000ba5b:	call   0x14000baac
   14000ba60:	jmp    0x14000b9fc
   14000ba62:	call   0x14000984c
   14000ba67:	int3   
   14000ba68:	mov    dl,0x1
   14000ba6a:	mov    rcx,rdi
   14000ba6d:	call   0x14000b39c
   14000ba72:	lea    rax,[rip+0x1eedf]        # 0x14002a958
   14000ba79:	lea    rdx,[rbp+0x47]
   14000ba7d:	lea    rcx,[rbp-0x19]
   14000ba81:	mov    QWORD PTR [rbp+0x47],rax
   14000ba85:	call   0x1400078c0
   14000ba8a:	lea    rax,[rip+0x1eeb7]        # 0x14002a948
   14000ba91:	lea    rdx,[rip+0x29308]        # 0x140034da0
   14000ba98:	lea    rcx,[rbp-0x19]
   14000ba9c:	mov    QWORD PTR [rbp-0x19],rax
   14000baa0:	call   0x140006894
   14000baa5:	int3   
   14000baa6:	call   0x14000984c
   14000baab:	int3   
   14000baac:	mov    QWORD PTR [rsp+0x10],rbx
   14000bab1:	mov    QWORD PTR [rsp+0x18],r8
   14000bab6:	push   rbp
   14000bab7:	push   rsi
   14000bab8:	push   rdi
   14000bab9:	push   r12
   14000babb:	push   r13
   14000babd:	push   r14
   14000babf:	push   r15
   14000bac1:	sub    rsp,0x70
   14000bac5:	cmp    DWORD PTR [rcx],0x80000003
   14000bacb:	mov    r15,r9
   14000bace:	mov    rdi,r8
   14000bad1:	mov    r12,rdx
   14000bad4:	mov    rsi,rcx
   14000bad7:	je     0x14000bcf9
   14000badd:	call   0x14000b18c
   14000bae2:	mov    rbp,QWORD PTR [rsp+0xd0]
   14000baea:	cmp    QWORD PTR [rax+0xe0],0x0
   14000baf2:	je     0x14000bb55
   14000baf4:	xor    ecx,ecx
   14000baf6:	call   QWORD PTR [rip+0x1b574]        # 0x140027070
   14000bafc:	mov    rbx,rax
   14000baff:	call   0x14000b18c
   14000bb04:	cmp    QWORD PTR [rax+0xe0],rbx
   14000bb0b:	je     0x14000bb55
   14000bb0d:	cmp    DWORD PTR [rsi],0xe0434f4d
   14000bb13:	je     0x14000bb55
   14000bb15:	cmp    DWORD PTR [rsi],0xe0434352
   14000bb1b:	mov    ebx,DWORD PTR [rsp+0xe0]
   14000bb22:	je     0x14000bb5c
   14000bb24:	mov    rax,QWORD PTR [rsp+0xe8]
   14000bb2c:	mov    r9,r15
   14000bb2f:	mov    r8,rdi
   14000bb32:	mov    QWORD PTR [rsp+0x30],rax
   14000bb37:	mov    rdx,r12
   14000bb3a:	mov    rcx,rsi
   14000bb3d:	mov    DWORD PTR [rsp+0x28],ebx
   14000bb41:	mov    QWORD PTR [rsp+0x20],rbp
   14000bb46:	call   0x140006d60
   14000bb4b:	test   eax,eax
   14000bb4d:	jne    0x14000bcf9
   14000bb53:	jmp    0x14000bb5c
   14000bb55:	mov    ebx,DWORD PTR [rsp+0xe0]
   14000bb5c:	cmp    DWORD PTR [rbp+0xc],0x0
   14000bb60:	jne    0x14000bb67
   14000bb62:	call   0x14000982c
   14000bb67:	mov    r14d,DWORD PTR [rsp+0xd8]
   14000bb6f:	lea    rax,[rsp+0x60]
   14000bb74:	mov    QWORD PTR [rsp+0x30],r15
   14000bb79:	mov    QWORD PTR [rsp+0x28],rax
   14000bb7e:	lea    rax,[rsp+0xb0]
   14000bb86:	mov    r8d,ebx
   14000bb89:	mov    r9d,r14d
   14000bb8c:	mov    rdx,rbp
   14000bb8f:	mov    rcx,r12
   14000bb92:	mov    QWORD PTR [rsp+0x20],rax
   14000bb97:	call   0x140006afc
   14000bb9c:	mov    ecx,DWORD PTR [rsp+0xb0]
   14000bba3:	cmp    ecx,DWORD PTR [rsp+0x60]
   14000bba7:	jae    0x14000bcf9
   14000bbad:	lea    rdi,[rax+0xc]
   14000bbb1:	lea    r13,[rdi-0xc]
   14000bbb5:	cmp    r14d,DWORD PTR [r13+0x0]
   14000bbb9:	jl     0x14000bce2
   14000bbbf:	cmp    r14d,DWORD PTR [rdi-0x8]
   14000bbc3:	jg     0x14000bce2
   14000bbc9:	call   0x140006e58
   14000bbce:	movsxd rcx,DWORD PTR [rdi]
   14000bbd1:	lea    rdx,[rcx+rcx*4]
   14000bbd5:	movsxd rcx,DWORD PTR [rdi+0x4]
   14000bbd9:	lea    rdx,[rcx+rdx*4]
   14000bbdd:	cmp    DWORD PTR [rax+rdx*1-0x10],0x0
   14000bbe2:	je     0x14000bc07
   14000bbe4:	call   0x140006e58
   14000bbe9:	movsxd rcx,DWORD PTR [rdi]
   14000bbec:	lea    rdx,[rcx+rcx*4]
   14000bbf0:	movsxd rcx,DWORD PTR [rdi+0x4]
   14000bbf4:	lea    rdx,[rcx+rdx*4]
   14000bbf8:	movsxd rbx,DWORD PTR [rax+rdx*1-0x10]
   14000bbfd:	call   0x140006e58
   14000bc02:	add    rax,rbx
   14000bc05:	jmp    0x14000bc09
   14000bc07:	xor    eax,eax
   14000bc09:	test   rax,rax
   14000bc0c:	je     0x14000bc58
   14000bc0e:	call   0x140006e58
   14000bc13:	movsxd rcx,DWORD PTR [rdi]
   14000bc16:	lea    rdx,[rcx+rcx*4]
   14000bc1a:	movsxd rcx,DWORD PTR [rdi+0x4]
   14000bc1e:	lea    rdx,[rcx+rdx*4]
   14000bc22:	cmp    DWORD PTR [rax+rdx*1-0x10],0x0
   14000bc27:	je     0x14000bc4c
   14000bc29:	call   0x140006e58
   14000bc2e:	movsxd rcx,DWORD PTR [rdi]
   14000bc31:	lea    rdx,[rcx+rcx*4]
   14000bc35:	movsxd rcx,DWORD PTR [rdi+0x4]
   14000bc39:	lea    rdx,[rcx+rdx*4]
   14000bc3d:	movsxd rbx,DWORD PTR [rax+rdx*1-0x10]
   14000bc42:	call   0x140006e58
   14000bc47:	add    rax,rbx
   14000bc4a:	jmp    0x14000bc4e
   14000bc4c:	xor    eax,eax
   14000bc4e:	cmp    BYTE PTR [rax+0x10],0x0
   14000bc52:	jne    0x14000bcdb
   14000bc58:	call   0x140006e58
   14000bc5d:	movsxd rcx,DWORD PTR [rdi]
   14000bc60:	lea    rdx,[rcx+rcx*4]
   14000bc64:	movsxd rcx,DWORD PTR [rdi+0x4]
   14000bc68:	lea    rdx,[rcx+rdx*4]
   14000bc6c:	test   BYTE PTR [rax+rdx*1-0x14],0x40
   14000bc71:	jne    0x14000bcdb
   14000bc73:	call   0x140006e58
   14000bc78:	mov    ecx,DWORD PTR [rdi]
   14000bc7a:	mov    r8,QWORD PTR [rsp+0xc0]
   14000bc82:	mov    BYTE PTR [rsp+0x58],0x0
   14000bc87:	mov    BYTE PTR [rsp+0x50],0x1
   14000bc8c:	dec    ecx
   14000bc8e:	movsxd rcx,ecx
   14000bc91:	mov    r9,r15
   14000bc94:	lea    rdx,[rcx+rcx*4]
   14000bc98:	lea    rcx,[rax+rdx*4]
   14000bc9c:	movsxd rax,DWORD PTR [rdi+0x4]
   14000bca0:	mov    rdx,r12
   14000bca3:	add    rcx,rax
   14000bca6:	mov    rax,QWORD PTR [rsp+0xe8]
   14000bcae:	mov    QWORD PTR [rsp+0x48],rax
   14000bcb3:	mov    eax,DWORD PTR [rsp+0xe0]
   14000bcba:	mov    DWORD PTR [rsp+0x40],eax
   14000bcbe:	mov    QWORD PTR [rsp+0x38],r13
   14000bcc3:	and    QWORD PTR [rsp+0x30],0x0
   14000bcc9:	mov    QWORD PTR [rsp+0x28],rcx
   14000bcce:	mov    rcx,rsi
   14000bcd1:	mov    QWORD PTR [rsp+0x20],rbp
   14000bcd6:	call   0x14000b4a8
   14000bcdb:	mov    ecx,DWORD PTR [rsp+0xb0]
   14000bce2:	inc    ecx
   14000bce4:	add    rdi,0x14
   14000bce8:	mov    DWORD PTR [rsp+0xb0],ecx
   14000bcef:	cmp    ecx,DWORD PTR [rsp+0x60]
   14000bcf3:	jb     0x14000bbb1
   14000bcf9:	mov    rbx,QWORD PTR [rsp+0xb8]
   14000bd01:	add    rsp,0x70
   14000bd05:	pop    r15
   14000bd07:	pop    r14
   14000bd09:	pop    r13
   14000bd0b:	pop    r12
   14000bd0d:	pop    rdi
   14000bd0e:	pop    rsi
   14000bd0f:	pop    rbp
   14000bd10:	ret    
   14000bd11:	int3   
   14000bd12:	int3   
   14000bd13:	int3   
   14000bd14:	mov    QWORD PTR [rsp+0x8],rbx
   14000bd19:	mov    QWORD PTR [rsp+0x10],rbp
   14000bd1e:	mov    QWORD PTR [rsp+0x18],rsi
   14000bd23:	push   rdi
   14000bd24:	push   r12
   14000bd26:	push   r13
   14000bd28:	push   r14
   14000bd2a:	push   r15
   14000bd2c:	sub    rsp,0x20
   14000bd30:	mov    rsi,rdx
   14000bd33:	mov    r13,rcx
   14000bd36:	test   rdx,rdx
   14000bd39:	je     0x14000bde0
   14000bd3f:	xor    edi,edi
   14000bd41:	xor    r14b,r14b
   14000bd44:	cmp    DWORD PTR [rdx],edi
   14000bd46:	jle    0x14000bdc0
   14000bd48:	call   0x140006e70
   14000bd4d:	mov    rdx,rax
   14000bd50:	mov    rax,QWORD PTR [r13+0x30]
   14000bd54:	movsxd r15,DWORD PTR [rax+0xc]
   14000bd58:	add    r15,0x4
   14000bd5c:	add    r15,rdx
   14000bd5f:	call   0x140006e70
   14000bd64:	mov    rdx,rax
   14000bd67:	mov    rax,QWORD PTR [r13+0x30]
   14000bd6b:	movsxd rcx,DWORD PTR [rax+0xc]
   14000bd6f:	mov    ebp,DWORD PTR [rdx+rcx*1]
   14000bd72:	test   ebp,ebp
   14000bd74:	jle    0x14000bdba
   14000bd76:	movsxd rax,edi
   14000bd79:	lea    r12,[rax+rax*4]
   14000bd7d:	call   0x140006e70
   14000bd82:	mov    rbx,rax
   14000bd85:	movsxd rax,DWORD PTR [r15]
   14000bd88:	add    rbx,rax
   14000bd8b:	call   0x140006e58
   14000bd90:	movsxd rcx,DWORD PTR [rsi+0x4]
   14000bd94:	mov    r8,QWORD PTR [r13+0x30]
   14000bd98:	lea    rax,[rax+r12*4]
   14000bd9c:	mov    rdx,rbx
   14000bd9f:	add    rcx,rax
   14000bda2:	call   0x14000cda0
   14000bda7:	test   eax,eax
   14000bda9:	jne    0x14000bdb7
   14000bdab:	dec    ebp
   14000bdad:	add    r15,0x4
   14000bdb1:	test   ebp,ebp
   14000bdb3:	jg     0x14000bd7d
   14000bdb5:	jmp    0x14000bdba
   14000bdb7:	mov    r14b,0x1
   14000bdba:	inc    edi
   14000bdbc:	cmp    edi,DWORD PTR [rsi]
   14000bdbe:	jl     0x14000bd48
   14000bdc0:	mov    rbx,QWORD PTR [rsp+0x50]
   14000bdc5:	mov    rbp,QWORD PTR [rsp+0x58]
   14000bdca:	mov    rsi,QWORD PTR [rsp+0x60]
   14000bdcf:	mov    al,r14b
   14000bdd2:	add    rsp,0x20
   14000bdd6:	pop    r15
   14000bdd8:	pop    r14
   14000bdda:	pop    r13
   14000bddc:	pop    r12
   14000bdde:	pop    rdi
   14000bddf:	ret    
   14000bde0:	call   0x14000982c
   14000bde5:	call   0x14000984c
   14000bdea:	int3   
   14000bdeb:	int3   
   14000bdec:	mov    QWORD PTR [rsp+0x8],rbx
   14000bdf1:	mov    QWORD PTR [rsp+0x10],rbp
   14000bdf6:	mov    QWORD PTR [rsp+0x18],rsi
   14000bdfb:	push   rdi
   14000bdfc:	sub    rsp,0x20
   14000be00:	xor    ebp,ebp
   14000be02:	mov    rdi,rcx
   14000be05:	cmp    DWORD PTR [rcx],ebp
   14000be07:	jle    0x14000be58
   14000be09:	xor    esi,esi
   14000be0b:	call   0x140006e58
   14000be10:	movsxd rcx,DWORD PTR [rdi+0x4]
   14000be14:	add    rax,rsi
   14000be17:	cmp    DWORD PTR [rcx+rax*1+0x4],0x0
   14000be1c:	je     0x14000be39
   14000be1e:	call   0x140006e58
   14000be23:	movsxd rcx,DWORD PTR [rdi+0x4]
   14000be27:	add    rax,rsi
   14000be2a:	movsxd rbx,DWORD PTR [rcx+rax*1+0x4]
   14000be2f:	call   0x140006e58
   14000be34:	add    rax,rbx
   14000be37:	jmp    0x14000be3b
   14000be39:	xor    eax,eax
   14000be3b:	lea    rdx,[rip+0x2bd76]        # 0x140037bb8
   14000be42:	mov    rcx,rax
   14000be45:	call   0x1400073a0
   14000be4a:	test   al,al
   14000be4c:	jne    0x14000be6f
   14000be4e:	inc    ebp
   14000be50:	add    rsi,0x14
   14000be54:	cmp    ebp,DWORD PTR [rdi]
   14000be56:	jl     0x14000be0b
   14000be58:	xor    al,al
   14000be5a:	mov    rbx,QWORD PTR [rsp+0x30]
   14000be5f:	mov    rbp,QWORD PTR [rsp+0x38]
   14000be64:	mov    rsi,QWORD PTR [rsp+0x40]
   14000be69:	add    rsp,0x20
   14000be6d:	pop    rdi
   14000be6e:	ret    
   14000be6f:	mov    al,0x1
   14000be71:	jmp    0x14000be5a
   14000be73:	int3   
   14000be74:	mov    r8d,DWORD PTR [rcx+0x18]
   14000be78:	mov    edx,DWORD PTR [rcx+0x4]
   14000be7b:	lea    r9,[rcx+0x20]
   14000be7f:	mov    ecx,DWORD PTR [rcx]
   14000be81:	rex.W jmp QWORD PTR [rip+0x1b248]        # 0x1400270d0
   14000be88:	sub    rsp,0x28
   14000be8c:	call   0x14000b18c
   14000be91:	xor    ecx,ecx
   14000be93:	cmp    DWORD PTR [rax+0x100],ecx
   14000be99:	setne  al
   14000be9c:	add    rsp,0x28
   14000bea0:	ret    
   14000bea1:	int3   
   14000bea2:	int3   
   14000bea3:	int3   
   14000bea4:	mov    rax,rsp
   14000bea7:	mov    QWORD PTR [rax+0x8],rbx
   14000beab:	mov    QWORD PTR [rax+0x10],rbp
   14000beaf:	mov    QWORD PTR [rax+0x18],rsi
   14000beb3:	mov    QWORD PTR [rax+0x20],rdi
   14000beb7:	push   r14
   14000beb9:	sub    rsp,0x20
   14000bebd:	mov    rbx,rdx
   14000bec0:	mov    r14,rcx
   14000bec3:	test   rdx,rdx
   14000bec6:	jne    0x14000becd
   14000bec8:	call   0x14000982c
   14000becd:	mov    rbx,QWORD PTR [rbx]
   14000bed0:	test   rbx,rbx
   14000bed3:	jne    0x14000beda
   14000bed5:	call   0x14000982c
   14000beda:	cmp    DWORD PTR [rbx],0xe06d7363
   14000bee0:	jne    0x14000bef5
   14000bee2:	cmp    DWORD PTR [rbx+0x18],0x4
   14000bee6:	jne    0x14000bef5
   14000bee8:	mov    eax,DWORD PTR [rbx+0x20]
   14000beeb:	sub    eax,0x19930520
   14000bef0:	cmp    eax,0x2
   14000bef3:	jbe    0x14000befa
   14000bef5:	call   0x14000982c
   14000befa:	mov    rbp,QWORD PTR [rbx+0x38]
   14000befe:	mov    rax,QWORD PTR [rbx+0x30]
   14000bf02:	movsxd rcx,DWORD PTR [rax+0xc]
   14000bf06:	lea    rsi,[rbp+0x4]
   14000bf0a:	mov    edi,DWORD PTR [rcx+rbp*1]
   14000bf0d:	add    rsi,rcx
   14000bf10:	jmp    0x14000bf3b
   14000bf12:	movsxd rax,DWORD PTR [rsi]
   14000bf15:	mov    rcx,r14
   14000bf18:	movsxd rbx,DWORD PTR [rax+rbp*1+0x4]
   14000bf1d:	call   0x140007454
   14000bf22:	lea    rdx,[rbp+0x10]
   14000bf26:	mov    rcx,rax
   14000bf29:	add    rdx,rbx
   14000bf2c:	call   0x14000d0d0
   14000bf31:	test   eax,eax
   14000bf33:	je     0x14000bf5c
   14000bf35:	dec    edi
   14000bf37:	add    rsi,0x4
   14000bf3b:	test   edi,edi
   14000bf3d:	jg     0x14000bf12
   14000bf3f:	xor    eax,eax
   14000bf41:	mov    rbx,QWORD PTR [rsp+0x30]
   14000bf46:	mov    rbp,QWORD PTR [rsp+0x38]
   14000bf4b:	mov    rsi,QWORD PTR [rsp+0x40]
   14000bf50:	mov    rdi,QWORD PTR [rsp+0x48]
   14000bf55:	add    rsp,0x20
   14000bf59:	pop    r14
   14000bf5b:	ret    
   14000bf5c:	mov    eax,0x1
   14000bf61:	jmp    0x14000bf41
   14000bf63:	int3   
   14000bf64:	mov    QWORD PTR [rip+0x2c70d],rcx        # 0x140038678
   14000bf6b:	ret    
   14000bf6c:	movsxd rax,DWORD PTR [rdx]
   14000bf6f:	add    rax,rcx
   14000bf72:	cmp    DWORD PTR [rdx+0x4],0x0
   14000bf76:	jl     0x14000bf8e
   14000bf78:	movsxd r9,DWORD PTR [rdx+0x4]
   14000bf7c:	movsxd rdx,DWORD PTR [rdx+0x8]
   14000bf80:	mov    rcx,QWORD PTR [r9+rcx*1]
   14000bf84:	movsxd r8,DWORD PTR [rdx+rcx*1]
   14000bf88:	add    r8,r9
   14000bf8b:	add    rax,r8
   14000bf8e:	ret    
   14000bf8f:	int3   
   14000bf90:	mov    QWORD PTR [rsp+0x8],rbx
   14000bf95:	mov    QWORD PTR [rsp+0x10],rsi
   14000bf9a:	mov    QWORD PTR [rsp+0x18],rdi
   14000bf9f:	push   r14
   14000bfa1:	sub    rsp,0x20
   14000bfa5:	mov    rdi,r9
   14000bfa8:	mov    r14,rcx
   14000bfab:	test   DWORD PTR [r8],0x80000000
   14000bfb2:	je     0x14000bfb9
   14000bfb4:	mov    rsi,rdx
   14000bfb7:	jmp    0x14000bfc0
   14000bfb9:	movsxd rsi,DWORD PTR [r8+0x8]
   14000bfbd:	add    rsi,QWORD PTR [rdx]
   14000bfc0:	call   0x14000c048
   14000bfc5:	dec    eax
   14000bfc7:	je     0x14000c000
   14000bfc9:	dec    eax
   14000bfcb:	jne    0x14000c028
   14000bfcd:	xor    ebx,ebx
   14000bfcf:	cmp    DWORD PTR [rdi+0x18],ebx
   14000bfd2:	je     0x14000bfe3
   14000bfd4:	call   0x140006e70
   14000bfd9:	mov    rbx,rax
   14000bfdc:	movsxd rax,DWORD PTR [rdi+0x18]
   14000bfe0:	add    rbx,rax
   14000bfe3:	lea    rdx,[rdi+0x8]
   14000bfe7:	mov    rcx,QWORD PTR [r14+0x28]
   14000bfeb:	call   0x14000bf6c
   14000bff0:	mov    rdx,rax
   14000bff3:	mov    r8d,0x1
   14000bff9:	mov    rcx,rsi
   14000bffc:	call   rbx
   14000bffe:	jmp    0x14000c028
   14000c000:	xor    ebx,ebx
   14000c002:	cmp    DWORD PTR [rdi+0x18],ebx
   14000c005:	je     0x14000c013
   14000c007:	call   0x140006e70
   14000c00c:	movsxd rbx,DWORD PTR [rdi+0x18]
   14000c010:	add    rbx,rax
   14000c013:	lea    rdx,[rdi+0x8]
   14000c017:	mov    rcx,QWORD PTR [r14+0x28]
   14000c01b:	call   0x14000bf6c
   14000c020:	mov    rdx,rax
   14000c023:	mov    rcx,rsi
   14000c026:	call   rbx
   14000c028:	jmp    0x14000c030
   14000c02a:	call   0x14000984c
   14000c02f:	nop
   14000c030:	mov    rbx,QWORD PTR [rsp+0x30]
   14000c035:	mov    rsi,QWORD PTR [rsp+0x38]
   14000c03a:	mov    rdi,QWORD PTR [rsp+0x40]
   14000c03f:	add    rsp,0x20
   14000c043:	pop    r14
   14000c045:	ret    
   14000c046:	int3   
   14000c047:	int3   
   14000c048:	mov    QWORD PTR [rsp+0x8],rbx
   14000c04d:	mov    QWORD PTR [rsp+0x10],rsi
   14000c052:	mov    QWORD PTR [rsp+0x18],rdi
   14000c057:	push   r13
   14000c059:	push   r14
   14000c05b:	push   r15
   14000c05d:	sub    rsp,0x30
   14000c061:	mov    r14,r9
   14000c064:	mov    rbx,r8
   14000c067:	mov    rsi,rdx
   14000c06a:	mov    r13,rcx
   14000c06d:	xor    edi,edi
   14000c06f:	mov    r15d,DWORD PTR [r8+0x4]
   14000c073:	test   r15d,r15d
   14000c076:	je     0x14000c086
   14000c078:	movsxd r15,r15d
   14000c07b:	call   0x140006e58
   14000c080:	lea    rdx,[r15+rax*1]
   14000c084:	jmp    0x14000c089
   14000c086:	mov    rdx,rdi
   14000c089:	test   rdx,rdx
   14000c08c:	je     0x14000c27b
   14000c092:	test   r15d,r15d
   14000c095:	je     0x14000c0a8
   14000c097:	call   0x140006e58
   14000c09c:	mov    rcx,rax
   14000c09f:	movsxd rax,DWORD PTR [rbx+0x4]
   14000c0a3:	add    rcx,rax
   14000c0a6:	jmp    0x14000c0ab
   14000c0a8:	mov    rcx,rdi
   14000c0ab:	cmp    BYTE PTR [rcx+0x10],dil
   14000c0af:	je     0x14000c27b
   14000c0b5:	cmp    DWORD PTR [rbx+0x8],edi
   14000c0b8:	jne    0x14000c0c6
   14000c0ba:	test   DWORD PTR [rbx],0x80000000
   14000c0c0:	je     0x14000c27b
   14000c0c6:	mov    ecx,DWORD PTR [rbx]
   14000c0c8:	test   ecx,ecx
   14000c0ca:	js     0x14000c0d6
   14000c0cc:	movsxd rax,DWORD PTR [rbx+0x8]
   14000c0d0:	add    rax,QWORD PTR [rsi]
   14000c0d3:	mov    rsi,rax
   14000c0d6:	test   cl,cl
   14000c0d8:	jns    0x14000c131
   14000c0da:	test   BYTE PTR [r14],0x10
   14000c0de:	je     0x14000c131
   14000c0e0:	mov    rax,QWORD PTR [rip+0x2c591]        # 0x140038678
   14000c0e7:	test   rax,rax
   14000c0ea:	je     0x14000c131
   14000c0ec:	call   rax
   14000c0ee:	mov    r15,rax
   14000c0f1:	mov    ebx,0x1
   14000c0f6:	mov    edx,ebx
   14000c0f8:	mov    rcx,rax
   14000c0fb:	call   0x140011530
   14000c100:	test   eax,eax
   14000c102:	je     0x14000c26b
   14000c108:	mov    edx,ebx
   14000c10a:	mov    rcx,rsi
   14000c10d:	call   0x14001153c
   14000c112:	test   eax,eax
   14000c114:	je     0x14000c26b
   14000c11a:	mov    QWORD PTR [rsi],r15
   14000c11d:	mov    rcx,r15
   14000c120:	lea    rdx,[r14+0x8]
   14000c124:	call   0x14000bf6c
   14000c129:	mov    QWORD PTR [rsi],rax
   14000c12c:	jmp    0x14000c271
   14000c131:	mov    ebx,0x1
   14000c136:	test   cl,0x8
   14000c139:	je     0x14000c169
   14000c13b:	mov    edx,ebx
   14000c13d:	mov    rcx,QWORD PTR [r13+0x28]
   14000c141:	call   0x140011530
   14000c146:	test   eax,eax
   14000c148:	je     0x14000c26b
   14000c14e:	mov    edx,ebx
   14000c150:	mov    rcx,rsi
   14000c153:	call   0x14001153c
   14000c158:	test   eax,eax
   14000c15a:	je     0x14000c26b
   14000c160:	mov    rcx,QWORD PTR [r13+0x28]
   14000c164:	mov    QWORD PTR [rsi],rcx
   14000c167:	jmp    0x14000c120
   14000c169:	test   BYTE PTR [r14],bl
   14000c16c:	je     0x14000c1bf
   14000c16e:	mov    edx,ebx
   14000c170:	mov    rcx,QWORD PTR [r13+0x28]
   14000c174:	call   0x140011530
   14000c179:	test   eax,eax
   14000c17b:	je     0x14000c26b
   14000c181:	mov    edx,ebx
   14000c183:	mov    rcx,rsi
   14000c186:	call   0x14001153c
   14000c18b:	test   eax,eax
   14000c18d:	je     0x14000c26b
   14000c193:	movsxd r8,DWORD PTR [r14+0x14]
   14000c197:	mov    rdx,QWORD PTR [r13+0x28]
   14000c19b:	mov    rcx,rsi
   14000c19e:	call   0x1400056d0
   14000c1a3:	cmp    DWORD PTR [r14+0x14],0x8
   14000c1a8:	jne    0x14000c271
   14000c1ae:	cmp    QWORD PTR [rsi],rdi
   14000c1b1:	je     0x14000c271
   14000c1b7:	mov    rcx,QWORD PTR [rsi]
   14000c1ba:	jmp    0x14000c120
   14000c1bf:	cmp    DWORD PTR [r14+0x18],edi
   14000c1c3:	je     0x14000c1d6
   14000c1c5:	call   0x140006e70
   14000c1ca:	mov    rcx,rax
   14000c1cd:	movsxd rax,DWORD PTR [r14+0x18]
   14000c1d1:	add    rcx,rax
   14000c1d4:	jmp    0x14000c1d9
   14000c1d6:	mov    rcx,rdi
   14000c1d9:	mov    edx,ebx
   14000c1db:	test   rcx,rcx
   14000c1de:	mov    rcx,QWORD PTR [r13+0x28]
   14000c1e2:	jne    0x14000c21c
   14000c1e4:	call   0x140011530
   14000c1e9:	test   eax,eax
   14000c1eb:	je     0x14000c26b
   14000c1ed:	mov    edx,ebx
   14000c1ef:	mov    rcx,rsi
   14000c1f2:	call   0x14001153c
   14000c1f7:	test   eax,eax
   14000c1f9:	je     0x14000c26b
   14000c1fb:	movsxd rbx,DWORD PTR [r14+0x14]
   14000c1ff:	lea    rdx,[r14+0x8]
   14000c203:	mov    rcx,QWORD PTR [r13+0x28]
   14000c207:	call   0x14000bf6c
   14000c20c:	mov    rdx,rax
   14000c20f:	mov    r8,rbx
   14000c212:	mov    rcx,rsi
   14000c215:	call   0x1400056d0
   14000c21a:	jmp    0x14000c271
   14000c21c:	call   0x140011530
   14000c221:	test   eax,eax
   14000c223:	je     0x14000c26b
   14000c225:	mov    edx,ebx
   14000c227:	mov    rcx,rsi
   14000c22a:	call   0x14001153c
   14000c22f:	test   eax,eax
   14000c231:	je     0x14000c26b
   14000c233:	cmp    DWORD PTR [r14+0x18],edi
   14000c237:	je     0x14000c24a
   14000c239:	call   0x140006e70
   14000c23e:	mov    rcx,rax
   14000c241:	movsxd rax,DWORD PTR [r14+0x18]
   14000c245:	add    rcx,rax
   14000c248:	jmp    0x14000c24d
   14000c24a:	mov    rcx,rdi
   14000c24d:	call   0x140011524
   14000c252:	test   eax,eax
   14000c254:	je     0x14000c26b
   14000c256:	mov    al,BYTE PTR [r14]
   14000c259:	and    al,0x4
   14000c25b:	neg    al
   14000c25d:	sbb    ecx,ecx
   14000c25f:	neg    ecx
   14000c261:	add    ecx,ebx
   14000c263:	mov    edi,ecx
   14000c265:	mov    DWORD PTR [rsp+0x20],ecx
   14000c269:	jmp    0x14000c271
   14000c26b:	call   0x14000982c
   14000c270:	nop
   14000c271:	mov    eax,edi
   14000c273:	jmp    0x14000c27d
   14000c275:	call   0x14000984c
   14000c27a:	nop
   14000c27b:	xor    eax,eax
   14000c27d:	mov    rbx,QWORD PTR [rsp+0x50]
   14000c282:	mov    rsi,QWORD PTR [rsp+0x58]
   14000c287:	mov    rdi,QWORD PTR [rsp+0x60]
   14000c28c:	add    rsp,0x30
   14000c290:	pop    r15
   14000c292:	pop    r14
   14000c294:	pop    r13
   14000c296:	ret    
   14000c297:	int3   
   14000c298:	rex push rbx
   14000c29a:	push   rsi
   14000c29b:	push   rdi
   14000c29c:	push   r12
   14000c29e:	push   r13
   14000c2a0:	push   r14
   14000c2a2:	push   r15
   14000c2a4:	sub    rsp,0x90
   14000c2ab:	mov    rdi,rcx
   14000c2ae:	xor    r15d,r15d
   14000c2b1:	mov    DWORD PTR [rsp+0x20],r15d
   14000c2b6:	and    DWORD PTR [rsp+0xd0],r15d
   14000c2be:	and    QWORD PTR [rsp+0x40],r15
   14000c2c3:	and    QWORD PTR [rsp+0xe8],r15
   14000c2cb:	call   0x14000b18c
   14000c2d0:	mov    r13,QWORD PTR [rax+0xf8]
   14000c2d7:	mov    QWORD PTR [rsp+0x50],r13
   14000c2dc:	call   0x14000b18c
   14000c2e1:	mov    rax,QWORD PTR [rax+0xf0]
   14000c2e8:	mov    QWORD PTR [rsp+0xe0],rax
   14000c2f0:	mov    rsi,QWORD PTR [rdi+0x50]
   14000c2f4:	mov    QWORD PTR [rsp+0xd8],rsi
   14000c2fc:	mov    rax,QWORD PTR [rdi+0x48]
   14000c300:	mov    QWORD PTR [rsp+0x48],rax
   14000c305:	mov    rbx,QWORD PTR [rdi+0x40]
   14000c309:	mov    rax,QWORD PTR [rdi+0x30]
   14000c30d:	mov    QWORD PTR [rsp+0x58],rax
   14000c312:	mov    r14,QWORD PTR [rdi+0x28]
   14000c316:	mov    QWORD PTR [rsp+0x60],r14
   14000c31b:	call   0x14000b18c
   14000c320:	mov    QWORD PTR [rax+0xf0],rsi
   14000c327:	call   0x14000b18c
   14000c32c:	mov    QWORD PTR [rax+0xf8],rbx
   14000c333:	call   0x14000b18c
   14000c338:	mov    rdx,QWORD PTR [rax+0xf0]
   14000c33f:	mov    rdx,QWORD PTR [rdx+0x28]
   14000c343:	lea    rcx,[rsp+0x78]
   14000c348:	call   0x140006db4
   14000c34d:	mov    r12,rax
   14000c350:	mov    QWORD PTR [rsp+0x38],rax
   14000c355:	cmp    QWORD PTR [rdi+0x58],r15
   14000c359:	je     0x14000c37a
   14000c35b:	mov    DWORD PTR [rsp+0xd0],0x1
   14000c366:	call   0x14000b18c
   14000c36b:	mov    rcx,QWORD PTR [rax+0x138]
   14000c372:	mov    QWORD PTR [rsp+0xe8],rcx
   14000c37a:	mov    r8d,0x100
   14000c380:	mov    rdx,r14
   14000c383:	mov    rcx,QWORD PTR [rsp+0x58]
   14000c388:	call   0x140011560
   14000c38d:	mov    rbx,rax
   14000c390:	mov    QWORD PTR [rsp+0x40],rax
   14000c395:	mov    rdi,QWORD PTR [rsp+0xe0]
   14000c39d:	jmp    0x14000c41a
   14000c39f:	mov    DWORD PTR [rsp+0x20],0x1
   14000c3a7:	call   0x14000b18c
   14000c3ac:	and    DWORD PTR [rax+0x460],0x0
   14000c3b3:	mov    rsi,QWORD PTR [rsp+0xd8]
   14000c3bb:	cmp    DWORD PTR [rsp+0xd0],0x0
   14000c3c3:	je     0x14000c3e6
   14000c3c5:	mov    dl,0x1
   14000c3c7:	mov    rcx,rsi
   14000c3ca:	call   0x14000b39c
   14000c3cf:	mov    rax,QWORD PTR [rsp+0xe8]
   14000c3d7:	lea    r9,[rax+0x20]
   14000c3db:	mov    r8d,DWORD PTR [rax+0x18]
   14000c3df:	mov    edx,DWORD PTR [rax+0x4]
   14000c3e2:	mov    ecx,DWORD PTR [rax]
   14000c3e4:	jmp    0x14000c3f3
   14000c3e6:	lea    r9,[rsi+0x20]
   14000c3ea:	mov    r8d,DWORD PTR [rsi+0x18]
   14000c3ee:	mov    edx,DWORD PTR [rsi+0x4]
   14000c3f1:	mov    ecx,DWORD PTR [rsi]
   14000c3f3:	call   QWORD PTR [rip+0x1acd7]        # 0x1400270d0
   14000c3f9:	mov    r15d,DWORD PTR [rsp+0x20]
   14000c3fe:	mov    rbx,QWORD PTR [rsp+0x40]
   14000c403:	mov    r13,QWORD PTR [rsp+0x50]
   14000c408:	mov    rdi,QWORD PTR [rsp+0xe0]
   14000c410:	mov    r14,QWORD PTR [rsp+0x60]
   14000c415:	mov    r12,QWORD PTR [rsp+0x38]
   14000c41a:	mov    rcx,r12
   14000c41d:	call   0x140006df8
   14000c422:	test   r15d,r15d
   14000c425:	jne    0x14000c459
   14000c427:	cmp    DWORD PTR [rsi],0xe06d7363
   14000c42d:	jne    0x14000c459
   14000c42f:	cmp    DWORD PTR [rsi+0x18],0x4
   14000c433:	jne    0x14000c459
   14000c435:	mov    eax,DWORD PTR [rsi+0x20]
   14000c438:	sub    eax,0x19930520
   14000c43d:	cmp    eax,0x2
   14000c440:	ja     0x14000c459
   14000c442:	mov    rcx,QWORD PTR [rsi+0x28]
   14000c446:	call   0x140006e88
   14000c44b:	test   eax,eax
   14000c44d:	je     0x14000c459
   14000c44f:	mov    dl,0x1
   14000c451:	mov    rcx,rsi
   14000c454:	call   0x14000b39c
   14000c459:	call   0x14000b18c
   14000c45e:	mov    QWORD PTR [rax+0xf0],rdi
   14000c465:	call   0x14000b18c
   14000c46a:	mov    QWORD PTR [rax+0xf8],r13
   14000c471:	mov    rax,QWORD PTR [rsp+0x48]
   14000c476:	movsxd rcx,DWORD PTR [rax+0x1c]
   14000c47a:	mov    rax,QWORD PTR [r14]
   14000c47d:	mov    QWORD PTR [rcx+rax*1],0xfffffffffffffffe
   14000c485:	mov    rax,rbx
   14000c488:	add    rsp,0x90
   14000c48f:	pop    r15
   14000c491:	pop    r14
   14000c493:	pop    r13
   14000c495:	pop    r12
   14000c497:	pop    rdi
   14000c498:	pop    rsi
   14000c499:	pop    rbx
   14000c49a:	ret    
   14000c49b:	int3   
   14000c49c:	sub    rsp,0x28
   14000c4a0:	test   rcx,rcx
   14000c4a3:	je     0x14000c4dc
   14000c4a5:	mov    rcx,QWORD PTR [rcx]
   14000c4a8:	cmp    DWORD PTR [rcx],0xe06d7363
   14000c4ae:	jne    0x14000c4dc
   14000c4b0:	cmp    DWORD PTR [rcx+0x18],0x4
   14000c4b4:	jne    0x14000c4dc
   14000c4b6:	mov    eax,DWORD PTR [rcx+0x20]
   14000c4b9:	sub    eax,0x19930520
   14000c4be:	cmp    eax,0x2
   14000c4c1:	ja     0x14000c4dc
   14000c4c3:	cmp    QWORD PTR [rcx+0x30],0x0
   14000c4c8:	jne    0x14000c4dc
   14000c4ca:	call   0x14000b18c
   14000c4cf:	inc    DWORD PTR [rax+0x100]
   14000c4d5:	mov    eax,0x1
   14000c4da:	jmp    0x14000c4de
   14000c4dc:	xor    eax,eax
   14000c4de:	add    rsp,0x28
   14000c4e2:	ret    
   14000c4e3:	int3   
   14000c4e4:	mov    QWORD PTR [rsp+0x10],rbx
   14000c4e9:	mov    QWORD PTR [rsp+0x18],rsi
   14000c4ee:	mov    QWORD PTR [rsp+0x20],rdi
   14000c4f3:	push   r12
   14000c4f5:	push   r14
   14000c4f7:	push   r15
   14000c4f9:	sub    rsp,0x60
   14000c4fd:	mov    QWORD PTR [rsp+0x38],rsp
   14000c502:	mov    r12,r9
   14000c505:	mov    esi,r8d
   14000c508:	mov    rdi,rdx
   14000c50b:	test   rcx,rcx
   14000c50e:	jne    0x14000c517
   14000c510:	xor    eax,eax
   14000c512:	jmp    0x14000c6bf
   14000c517:	mov    rbx,QWORD PTR [rcx]
   14000c51a:	test   rdx,rdx
   14000c51d:	je     0x14000c525
   14000c51f:	cmp    BYTE PTR [rdx+0x10],0x0
   14000c523:	jne    0x14000c547
   14000c525:	cmp    DWORD PTR [rbx],0xe0434f4d
   14000c52b:	je     0x14000c67a
   14000c531:	cmp    DWORD PTR [rbx],0xe0434352
   14000c537:	je     0x14000c67a
   14000c53d:	test   sil,0x40
   14000c541:	je     0x14000c67a
   14000c547:	cmp    DWORD PTR [rbx],0xe06d7363
   14000c54d:	jne    0x14000c510
   14000c54f:	cmp    DWORD PTR [rbx+0x18],0x4
   14000c553:	jne    0x14000c510
   14000c555:	mov    eax,DWORD PTR [rbx+0x20]
   14000c558:	sub    eax,0x19930520
   14000c55d:	cmp    eax,0x2
   14000c560:	ja     0x14000c510
   14000c562:	cmp    QWORD PTR [rbx+0x30],0x0
   14000c567:	jne    0x14000c584
   14000c569:	call   0x14000b18c
   14000c56e:	cmp    QWORD PTR [rax+0xf0],0x0
   14000c576:	je     0x14000c510
   14000c578:	call   0x14000b18c
   14000c57d:	mov    rbx,QWORD PTR [rax+0xf0]
   14000c584:	call   0x140006e58
   14000c589:	mov    r15,rax
   14000c58c:	mov    QWORD PTR [rsp+0x30],rax
   14000c591:	mov    rcx,QWORD PTR [rbx+0x38]
   14000c595:	call   0x140006ee4
   14000c59a:	nop
   14000c59b:	lea    rdx,[rsp+0x80]
   14000c5a3:	mov    rcx,rdi
   14000c5a6:	call   QWORD PTR [rip+0x1ab1c]        # 0x1400270c8
   14000c5ac:	mov    QWORD PTR [rsp+0x80],rax
   14000c5b4:	mov    rcx,rax
   14000c5b7:	call   0x140006ec8
   14000c5bc:	sub    rdi,QWORD PTR [rsp+0x80]
   14000c5c4:	mov    DWORD PTR [rsp+0x44],edi
   14000c5c8:	mov    DWORD PTR [rsp+0x40],esi
   14000c5cc:	bts    esi,0x1f
   14000c5d0:	mov    DWORD PTR [rsp+0x40],esi
   14000c5d4:	call   0x140006e70
   14000c5d9:	mov    rcx,QWORD PTR [rbx+0x30]
   14000c5dd:	movsxd rsi,DWORD PTR [rcx+0xc]
   14000c5e1:	add    rax,0x4
   14000c5e5:	add    rsi,rax
   14000c5e8:	mov    QWORD PTR [rsp+0x28],rsi
   14000c5ed:	call   0x140006e70
   14000c5f2:	mov    rcx,QWORD PTR [rbx+0x30]
   14000c5f6:	movsxd rdx,DWORD PTR [rcx+0xc]
   14000c5fa:	mov    edi,DWORD PTR [rax+rdx*1]
   14000c5fd:	mov    DWORD PTR [rsp+0x20],edi
   14000c601:	test   edi,edi
   14000c603:	jle    0x14000c66d
   14000c605:	call   0x140006e70
   14000c60a:	mov    r14,rax
   14000c60d:	movsxd rax,DWORD PTR [rsi]
   14000c610:	add    r14,rax
   14000c613:	mov    r8,QWORD PTR [rbx+0x30]
   14000c617:	mov    rdx,r14
   14000c61a:	lea    rcx,[rsp+0x40]
   14000c61f:	call   0x14000cda0
   14000c624:	test   eax,eax
   14000c626:	je     0x14000c65c
   14000c628:	call   0x14000b18c
   14000c62d:	inc    DWORD PTR [rax+0x100]
   14000c633:	test   r12,r12
   14000c636:	je     0x14000c64b
   14000c638:	mov    r9,r14
   14000c63b:	lea    r8,[rsp+0x40]
   14000c640:	mov    rdx,r12
   14000c643:	mov    rcx,rbx
   14000c646:	call   0x14000bf90
   14000c64b:	lea    rdx,[rip+0x68]        # 0x14000c6ba
   14000c652:	mov    rcx,QWORD PTR [rsp+0x38]
   14000c657:	call   0x14000f840
   14000c65c:	dec    edi
   14000c65e:	mov    DWORD PTR [rsp+0x20],edi
   14000c662:	add    rsi,0x4
   14000c666:	mov    QWORD PTR [rsp+0x28],rsi
   14000c66b:	jmp    0x14000c601
   14000c66d:	mov    rcx,r15
   14000c670:	call   0x140006ec8
   14000c675:	jmp    0x14000c510
   14000c67a:	cmp    DWORD PTR [rbx],0xe06d7363
   14000c680:	jne    0x14000c6af
   14000c682:	cmp    DWORD PTR [rbx+0x18],0x4
   14000c686:	jne    0x14000c6af
   14000c688:	mov    eax,DWORD PTR [rbx+0x20]
   14000c68b:	sub    eax,0x19930520
   14000c690:	cmp    eax,0x2
   14000c693:	ja     0x14000c6af
   14000c695:	cmp    QWORD PTR [rbx+0x30],0x0
   14000c69a:	jne    0x14000c6af
   14000c69c:	call   0x14000b18c
   14000c6a1:	cmp    QWORD PTR [rax+0xf0],0x0
   14000c6a9:	je     0x14000c510
   14000c6af:	call   0x14000b18c
   14000c6b4:	inc    DWORD PTR [rax+0x100]
   14000c6ba:	mov    eax,0x1
   14000c6bf:	lea    r11,[rsp+0x60]
   14000c6c4:	mov    rbx,QWORD PTR [r11+0x28]
   14000c6c8:	mov    rsi,QWORD PTR [r11+0x30]
   14000c6cc:	mov    rdi,QWORD PTR [r11+0x38]
   14000c6d0:	mov    rsp,r11
   14000c6d3:	pop    r15
   14000c6d5:	pop    r14
   14000c6d7:	pop    r12
   14000c6d9:	ret    
   14000c6da:	int3   
   14000c6db:	int3   
   14000c6dc:	mov    eax,0x20
   14000c6e1:	ret    
   14000c6e2:	int3   
   14000c6e3:	int3   
   14000c6e4:	mov    QWORD PTR [rsp+0x8],rbx
   14000c6e9:	push   rdi
   14000c6ea:	sub    rsp,0x20
   14000c6ee:	mov    rdi,rdx
   14000c6f1:	test   rcx,rcx
   14000c6f4:	je     0x14000c766
   14000c6f6:	mov    rbx,QWORD PTR [rcx]
   14000c6f9:	test   rbx,rbx
   14000c6fc:	je     0x14000c766
   14000c6fe:	cmp    DWORD PTR [rbx],0xe06d7363
   14000c704:	jne    0x14000c72c
   14000c706:	cmp    DWORD PTR [rbx+0x18],0x4
   14000c70a:	jne    0x14000c72c
   14000c70c:	mov    eax,DWORD PTR [rbx+0x20]
   14000c70f:	sub    eax,0x19930520
   14000c714:	cmp    eax,0x2
   14000c717:	ja     0x14000c72c
   14000c719:	cmp    QWORD PTR [rbx+0x30],0x0
   14000c71e:	jne    0x14000c72c
   14000c720:	call   0x14000b18c
   14000c725:	mov    rbx,QWORD PTR [rax+0xf0]
   14000c72c:	mov    rdx,QWORD PTR [rbx+0x28]
   14000c730:	mov    rcx,rdi
   14000c733:	call   0x140006db4
   14000c738:	call   0x14000b18c
   14000c73d:	mov    rcx,QWORD PTR [rax+0xf0]
   14000c744:	mov    QWORD PTR [rdi+0x10],rcx
   14000c748:	call   0x14000b18c
   14000c74d:	mov    rcx,QWORD PTR [rax+0xf8]
   14000c754:	mov    QWORD PTR [rdi+0x18],rcx
   14000c758:	call   0x14000b18c
   14000c75d:	mov    QWORD PTR [rax+0xf0],rbx
   14000c764:	jmp    0x14000c770
   14000c766:	or     QWORD PTR [rdx+0x10],0xffffffffffffffff
   14000c76b:	or     QWORD PTR [rdx+0x18],0xffffffffffffffff
   14000c770:	call   0x14000b18c
   14000c775:	dec    DWORD PTR [rax+0x100]
   14000c77b:	call   0x14000b18c
   14000c780:	cmp    DWORD PTR [rax+0x100],0x0
   14000c787:	jge    0x14000c795
   14000c789:	call   0x14000b18c
   14000c78e:	and    DWORD PTR [rax+0x100],0x0
   14000c795:	mov    eax,0x1
   14000c79a:	mov    rbx,QWORD PTR [rsp+0x30]
   14000c79f:	add    rsp,0x20
   14000c7a3:	pop    rdi
   14000c7a4:	ret    
   14000c7a5:	int3   
   14000c7a6:	int3   
   14000c7a7:	int3   
   14000c7a8:	mov    QWORD PTR [rsp+0x8],rbx
   14000c7ad:	push   rdi
   14000c7ae:	sub    rsp,0x20
   14000c7b2:	cmp    QWORD PTR [rcx+0x10],0xffffffffffffffff
   14000c7b7:	mov    edi,edx
   14000c7b9:	mov    rbx,rcx
   14000c7bc:	je     0x14000c8f4
   14000c7c2:	call   0x140006df8
   14000c7c7:	test   edi,edi
   14000c7c9:	jne    0x14000c860
   14000c7cf:	call   0x14000b18c
   14000c7d4:	mov    rcx,QWORD PTR [rax+0xf0]
   14000c7db:	cmp    DWORD PTR [rcx],0xe06d7363
   14000c7e1:	jne    0x14000c860
   14000c7e3:	call   0x14000b18c
   14000c7e8:	mov    rcx,QWORD PTR [rax+0xf0]
   14000c7ef:	cmp    DWORD PTR [rcx+0x18],0x4
   14000c7f3:	jne    0x14000c860
   14000c7f5:	call   0x14000b18c
   14000c7fa:	mov    rcx,QWORD PTR [rax+0xf0]
   14000c801:	cmp    DWORD PTR [rcx+0x20],0x19930520
   14000c808:	je     0x14000c834
   14000c80a:	call   0x14000b18c
   14000c80f:	mov    rcx,QWORD PTR [rax+0xf0]
   14000c816:	cmp    DWORD PTR [rcx+0x20],0x19930521
   14000c81d:	je     0x14000c834
   14000c81f:	call   0x14000b18c
   14000c824:	mov    rcx,QWORD PTR [rax+0xf0]
   14000c82b:	cmp    DWORD PTR [rcx+0x20],0x19930522
   14000c832:	jne    0x14000c860
   14000c834:	call   0x14000b18c
   14000c839:	mov    rcx,QWORD PTR [rax+0xf0]
   14000c840:	mov    rcx,QWORD PTR [rcx+0x28]
   14000c844:	call   0x140006e88
   14000c849:	test   eax,eax
   14000c84b:	je     0x14000c860
   14000c84d:	call   0x14000b18c
   14000c852:	mov    dl,0x1
   14000c854:	mov    rcx,QWORD PTR [rax+0xf0]
   14000c85b:	call   0x14000b39c
   14000c860:	call   0x14000b18c
   14000c865:	mov    rcx,QWORD PTR [rax+0xf0]
   14000c86c:	cmp    DWORD PTR [rcx],0xe06d7363
   14000c872:	jne    0x14000c8d4
   14000c874:	call   0x14000b18c
   14000c879:	mov    rcx,QWORD PTR [rax+0xf0]
   14000c880:	cmp    DWORD PTR [rcx+0x18],0x4
   14000c884:	jne    0x14000c8d4
   14000c886:	call   0x14000b18c
   14000c88b:	mov    rcx,QWORD PTR [rax+0xf0]
   14000c892:	cmp    DWORD PTR [rcx+0x20],0x19930520
   14000c899:	je     0x14000c8c5
   14000c89b:	call   0x14000b18c
   14000c8a0:	mov    rcx,QWORD PTR [rax+0xf0]
   14000c8a7:	cmp    DWORD PTR [rcx+0x20],0x19930521
   14000c8ae:	je     0x14000c8c5
   14000c8b0:	call   0x14000b18c
   14000c8b5:	mov    rcx,QWORD PTR [rax+0xf0]
   14000c8bc:	cmp    DWORD PTR [rcx+0x20],0x19930522
   14000c8c3:	jne    0x14000c8d4
   14000c8c5:	test   edi,edi
   14000c8c7:	je     0x14000c8d4
   14000c8c9:	call   0x14000b18c
   14000c8ce:	dec    DWORD PTR [rax+0x100]
   14000c8d4:	call   0x14000b18c
   14000c8d9:	mov    rcx,QWORD PTR [rbx+0x10]
   14000c8dd:	mov    QWORD PTR [rax+0xf0],rcx
   14000c8e4:	call   0x14000b18c
   14000c8e9:	mov    rcx,QWORD PTR [rbx+0x18]
   14000c8ed:	mov    QWORD PTR [rax+0xf8],rcx
   14000c8f4:	mov    rbx,QWORD PTR [rsp+0x30]
   14000c8f9:	add    rsp,0x20
   14000c8fd:	pop    rdi
   14000c8fe:	ret    
   14000c8ff:	int3   
   14000c900:	sub    rsp,0x28
   14000c904:	mov    rax,QWORD PTR [rcx]
   14000c907:	cmp    DWORD PTR [rax],0xe0434352
   14000c90d:	je     0x14000c921
   14000c90f:	cmp    DWORD PTR [rax],0xe0434f4d
   14000c915:	je     0x14000c921
   14000c917:	cmp    DWORD PTR [rax],0xe06d7363
   14000c91d:	jne    0x14000c93a
   14000c91f:	jmp    0x14000c941
   14000c921:	call   0x14000b18c
   14000c926:	cmp    DWORD PTR [rax+0x100],0x0
   14000c92d:	jle    0x14000c93a
   14000c92f:	call   0x14000b18c
   14000c934:	dec    DWORD PTR [rax+0x100]
   14000c93a:	xor    eax,eax
   14000c93c:	add    rsp,0x28
   14000c940:	ret    
   14000c941:	call   0x14000b18c
   14000c946:	and    DWORD PTR [rax+0x100],0x0
   14000c94d:	call   0x14000984c
   14000c952:	int3   
   14000c953:	int3   
   14000c954:	mov    rax,rsp
   14000c957:	mov    DWORD PTR [rax+0x20],r9d
   14000c95b:	mov    QWORD PTR [rax+0x18],r8
   14000c95f:	mov    QWORD PTR [rax+0x10],rdx
   14000c963:	mov    QWORD PTR [rax+0x8],rcx
   14000c967:	push   rbx
   14000c968:	push   rsi
   14000c969:	push   rdi
   14000c96a:	push   r12
   14000c96c:	push   r13
   14000c96e:	push   r14
   14000c970:	push   r15
   14000c972:	sub    rsp,0x30
   14000c976:	mov    r12d,r9d
   14000c979:	mov    rsi,r8
   14000c97c:	mov    r13,rdx
   14000c97f:	mov    r15,rcx
   14000c982:	call   0x140006e58
   14000c987:	mov    QWORD PTR [rsp+0x28],rax
   14000c98c:	mov    r8,rsi
   14000c98f:	mov    rdx,r13
   14000c992:	mov    rcx,r15
   14000c995:	call   0x14000ced0
   14000c99a:	mov    edi,eax
   14000c99c:	call   0x14000b18c
   14000c9a1:	inc    DWORD PTR [rax+0x100]
   14000c9a7:	cmp    edi,0xffffffff
   14000c9aa:	je     0x14000ca9d
   14000c9b0:	cmp    edi,r12d
   14000c9b3:	jle    0x14000ca9d
   14000c9b9:	cmp    edi,0xffffffff
   14000c9bc:	jle    0x14000c9c3
   14000c9be:	cmp    edi,DWORD PTR [rsi+0x4]
   14000c9c1:	jl     0x14000c9c8
   14000c9c3:	call   0x14000982c
   14000c9c8:	movsxd r14,edi
   14000c9cb:	call   0x140006e58
   14000c9d0:	movsxd rcx,DWORD PTR [rsi+0x8]
   14000c9d4:	lea    rax,[rax+r14*8]
   14000c9d8:	mov    edi,DWORD PTR [rcx+rax*1]
   14000c9db:	mov    DWORD PTR [rsp+0x20],edi
   14000c9df:	call   0x140006e58
   14000c9e4:	movsxd rcx,DWORD PTR [rsi+0x8]
   14000c9e8:	lea    rax,[rax+r14*8]
   14000c9ec:	cmp    DWORD PTR [rcx+rax*1+0x4],0x0
   14000c9f1:	je     0x14000ca0f
   14000c9f3:	call   0x140006e58
   14000c9f8:	movsxd rcx,DWORD PTR [rsi+0x8]
   14000c9fc:	lea    rax,[rax+r14*8]
   14000ca00:	movsxd rbx,DWORD PTR [rcx+rax*1+0x4]
   14000ca05:	call   0x140006e58
   14000ca0a:	add    rax,rbx
   14000ca0d:	jmp    0x14000ca11
   14000ca0f:	xor    eax,eax
   14000ca11:	test   rax,rax
   14000ca14:	je     0x14000ca74
   14000ca16:	mov    r9d,edi
   14000ca19:	mov    r8,rsi
   14000ca1c:	mov    rdx,r13
   14000ca1f:	mov    rcx,r15
   14000ca22:	call   0x14000cf24
   14000ca27:	call   0x140006e58
   14000ca2c:	movsxd rcx,DWORD PTR [rsi+0x8]
   14000ca30:	lea    rax,[rax+r14*8]
   14000ca34:	cmp    DWORD PTR [rcx+rax*1+0x4],0x0
   14000ca39:	je     0x14000ca57
   14000ca3b:	call   0x140006e58
   14000ca40:	movsxd rcx,DWORD PTR [rsi+0x8]
   14000ca44:	lea    rax,[rax+r14*8]
   14000ca48:	movsxd rbx,DWORD PTR [rcx+rax*1+0x4]
   14000ca4d:	call   0x140006e58
   14000ca52:	add    rax,rbx
   14000ca55:	jmp    0x14000ca59
   14000ca57:	xor    eax,eax
   14000ca59:	mov    r8d,0x103
   14000ca5f:	mov    rdx,r15
   14000ca62:	mov    rcx,rax
   14000ca65:	call   0x140011560
   14000ca6a:	mov    rcx,QWORD PTR [rsp+0x28]
   14000ca6f:	call   0x140006ec8
   14000ca74:	jmp    0x14000ca94
   14000ca76:	mov    r12d,DWORD PTR [rsp+0x88]
   14000ca7e:	mov    rsi,QWORD PTR [rsp+0x80]
   14000ca86:	mov    r13,QWORD PTR [rsp+0x78]
   14000ca8b:	mov    r15,QWORD PTR [rsp+0x70]
   14000ca90:	mov    edi,DWORD PTR [rsp+0x20]
   14000ca94:	mov    DWORD PTR [rsp+0x24],edi
   14000ca98:	jmp    0x14000c9a7
   14000ca9d:	call   0x14000b18c
   14000caa2:	cmp    DWORD PTR [rax+0x100],0x0
   14000caa9:	jle    0x14000cab6
   14000caab:	call   0x14000b18c
   14000cab0:	dec    DWORD PTR [rax+0x100]
   14000cab6:	cmp    edi,0xffffffff
   14000cab9:	je     0x14000cac5
   14000cabb:	cmp    edi,r12d
   14000cabe:	jle    0x14000cac5
   14000cac0:	call   0x14000982c
   14000cac5:	mov    r9d,edi
   14000cac8:	mov    r8,rsi
   14000cacb:	mov    rdx,r13
   14000cace:	mov    rcx,r15
   14000cad1:	call   0x14000cf24
   14000cad6:	add    rsp,0x30
   14000cada:	pop    r15
   14000cadc:	pop    r14
   14000cade:	pop    r13
   14000cae0:	pop    r12
   14000cae2:	pop    rdi
   14000cae3:	pop    rsi
   14000cae4:	pop    rbx
   14000cae5:	ret    
   14000cae6:	int3   
   14000cae7:	int3   
   14000cae8:	mov    QWORD PTR [rsp+0x8],rbx
   14000caed:	mov    QWORD PTR [rsp+0x10],rsi
   14000caf2:	push   rdi
   14000caf3:	sub    rsp,0x20
   14000caf7:	and    DWORD PTR [rcx],0x0
   14000cafa:	mov    rsi,rcx
   14000cafd:	call   0x14000b18c
   14000cb02:	mov    rax,QWORD PTR [rax+0xf0]
   14000cb09:	test   rax,rax
   14000cb0c:	je     0x14000cb67
   14000cb0e:	mov    rbx,QWORD PTR [rax+0x30]
   14000cb12:	test   rbx,rbx
   14000cb15:	je     0x14000cb29
   14000cb17:	test   BYTE PTR [rbx],0x10
   14000cb1a:	je     0x14000cb29
   14000cb1c:	mov    rax,QWORD PTR [rax+0x28]
   14000cb20:	mov    rax,QWORD PTR [rax]
   14000cb23:	mov    rax,QWORD PTR [rax-0x8]
   14000cb27:	jmp    0x14000cb69
   14000cb29:	call   0x140006e70
   14000cb2e:	movsxd rdi,DWORD PTR [rbx+0xc]
   14000cb32:	add    rax,0x4
   14000cb36:	add    rdi,rax
   14000cb39:	call   0x140006e70
   14000cb3e:	movsxd rcx,DWORD PTR [rbx+0xc]
   14000cb42:	mov    ebx,DWORD PTR [rax+rcx*1]
   14000cb45:	jmp    0x14000cb5b
   14000cb47:	call   0x140006e70
   14000cb4c:	movsxd rcx,DWORD PTR [rdi]
   14000cb4f:	test   BYTE PTR [rax+rcx*1],0x10
   14000cb53:	jne    0x14000cb61
   14000cb55:	dec    ebx
   14000cb57:	add    rdi,0x4
   14000cb5b:	test   ebx,ebx
   14000cb5d:	jg     0x14000cb47
   14000cb5f:	jmp    0x14000cb67
   14000cb61:	mov    DWORD PTR [rsi],0x1
   14000cb67:	xor    eax,eax
   14000cb69:	mov    rbx,QWORD PTR [rsp+0x30]
   14000cb6e:	mov    rsi,QWORD PTR [rsp+0x38]
   14000cb73:	add    rsp,0x20
   14000cb77:	pop    rdi
   14000cb78:	ret    
   14000cb79:	int3   
   14000cb7a:	int3   
   14000cb7b:	int3   
   14000cb7c:	mov    QWORD PTR [rsp+0x8],rbx
   14000cb81:	mov    QWORD PTR [rsp+0x10],rbp
   14000cb86:	mov    QWORD PTR [rsp+0x18],rsi
   14000cb8b:	push   rdi
   14000cb8c:	push   r12
   14000cb8e:	push   r14
   14000cb90:	sub    rsp,0x40
   14000cb94:	mov    rbp,r9
   14000cb97:	mov    r14,r8
   14000cb9a:	mov    rsi,rdx
   14000cb9d:	mov    rbx,rcx
   14000cba0:	call   0x14000b18c
   14000cba5:	mov    rdi,QWORD PTR [rsp+0x80]
   14000cbad:	cmp    DWORD PTR [rax+0x460],0x0
   14000cbb4:	mov    edx,0x1fffffff
   14000cbb9:	mov    r8d,0x80000029
   14000cbbf:	mov    r9d,0x80000026
   14000cbc5:	mov    r12d,0x1
   14000cbcb:	jne    0x14000cc05
   14000cbcd:	cmp    DWORD PTR [rbx],0xe06d7363
   14000cbd3:	je     0x14000cc05
   14000cbd5:	cmp    DWORD PTR [rbx],r8d
   14000cbd8:	jne    0x14000cbea
   14000cbda:	cmp    DWORD PTR [rbx+0x18],0xf
   14000cbde:	jne    0x14000cbea
   14000cbe0:	cmp    QWORD PTR [rbx+0x60],0x19930520
   14000cbe8:	je     0x14000cc05
   14000cbea:	cmp    DWORD PTR [rbx],r9d
   14000cbed:	je     0x14000cc05
   14000cbef:	mov    ecx,DWORD PTR [rdi]
   14000cbf1:	and    ecx,edx
   14000cbf3:	cmp    ecx,0x19930522
   14000cbf9:	jb     0x14000cc05
   14000cbfb:	test   BYTE PTR [rdi+0x24],r12b
   14000cbff:	jne    0x14000cd84
   14000cc05:	mov    eax,DWORD PTR [rbx+0x4]
   14000cc08:	test   al,0x66
   14000cc0a:	je     0x14000cca2
   14000cc10:	cmp    DWORD PTR [rdi+0x4],0x0
   14000cc14:	je     0x14000cd84
   14000cc1a:	cmp    DWORD PTR [rsp+0x88],0x0
   14000cc22:	jne    0x14000cd84
   14000cc28:	and    eax,0x20
   14000cc2b:	je     0x14000cc6b
   14000cc2d:	cmp    DWORD PTR [rbx],r9d
   14000cc30:	jne    0x14000cc6b
   14000cc32:	mov    r8,QWORD PTR [r14+0xf8]
   14000cc39:	mov    rdx,rbp
   14000cc3c:	mov    rcx,rdi
   14000cc3f:	call   0x14000cf74
   14000cc44:	mov    ebx,eax
   14000cc46:	cmp    eax,0xffffffff
   14000cc49:	jl     0x14000cc50
   14000cc4b:	cmp    eax,DWORD PTR [rdi+0x4]
   14000cc4e:	jl     0x14000cc55
   14000cc50:	call   0x14000982c
   14000cc55:	mov    r9d,ebx
   14000cc58:	mov    rcx,rsi
   14000cc5b:	mov    rdx,rbp
   14000cc5e:	mov    r8,rdi
   14000cc61:	call   0x14000c954
   14000cc66:	jmp    0x14000cd84
   14000cc6b:	test   eax,eax
   14000cc6d:	je     0x14000cc8f
   14000cc6f:	cmp    DWORD PTR [rbx],r8d
   14000cc72:	jne    0x14000cc8f
   14000cc74:	mov    esi,DWORD PTR [rbx+0x38]
   14000cc77:	cmp    esi,0xffffffff
   14000cc7a:	jl     0x14000cc81
   14000cc7c:	cmp    esi,DWORD PTR [rdi+0x4]
   14000cc7f:	jl     0x14000cc86
   14000cc81:	call   0x14000982c
   14000cc86:	mov    rcx,QWORD PTR [rbx+0x28]
   14000cc8a:	mov    r9d,esi
   14000cc8d:	jmp    0x14000cc5b
   14000cc8f:	mov    r8,rdi
   14000cc92:	mov    rdx,rbp
   14000cc95:	mov    rcx,rsi
   14000cc98:	call   0x140006c28
   14000cc9d:	jmp    0x14000cd84
   14000cca2:	cmp    DWORD PTR [rdi+0xc],0x0
   14000cca6:	jne    0x14000ccd6
   14000cca8:	mov    eax,DWORD PTR [rdi]
   14000ccaa:	and    eax,edx
   14000ccac:	cmp    eax,0x19930521
   14000ccb1:	jb     0x14000cd84
   14000ccb7:	cmp    DWORD PTR [rdi+0x20],0x0
   14000ccbb:	je     0x14000cccb
   14000ccbd:	call   0x140006e58
   14000ccc2:	movsxd rcx,DWORD PTR [rdi+0x20]
   14000ccc6:	add    rax,rcx
   14000ccc9:	jmp    0x14000cccd
   14000cccb:	xor    eax,eax
   14000cccd:	test   rax,rax
   14000ccd0:	je     0x14000cd84
   14000ccd6:	cmp    DWORD PTR [rbx],0xe06d7363
   14000ccdc:	jne    0x14000cd4b
   14000ccde:	cmp    DWORD PTR [rbx+0x18],0x3
   14000cce2:	jb     0x14000cd4b
   14000cce4:	cmp    DWORD PTR [rbx+0x20],0x19930522
   14000cceb:	jbe    0x14000cd4b
   14000cced:	mov    rax,QWORD PTR [rbx+0x30]
   14000ccf1:	cmp    DWORD PTR [rax+0x8],0x0
   14000ccf5:	je     0x14000cd09
   14000ccf7:	call   0x140006e70
   14000ccfc:	mov    rcx,QWORD PTR [rbx+0x30]
   14000cd00:	movsxd r10,DWORD PTR [rcx+0x8]
   14000cd04:	add    r10,rax
   14000cd07:	jmp    0x14000cd0c
   14000cd09:	xor    r10d,r10d
   14000cd0c:	test   r10,r10
   14000cd0f:	je     0x14000cd4b
   14000cd11:	movzx  eax,BYTE PTR [rsp+0x98]
   14000cd19:	mov    r9,rbp
   14000cd1c:	mov    r8,r14
   14000cd1f:	mov    DWORD PTR [rsp+0x38],eax
   14000cd23:	mov    rax,QWORD PTR [rsp+0x90]
   14000cd2b:	mov    rdx,rsi
   14000cd2e:	mov    QWORD PTR [rsp+0x30],rax
   14000cd33:	mov    eax,DWORD PTR [rsp+0x88]
   14000cd3a:	mov    rcx,rbx
   14000cd3d:	mov    DWORD PTR [rsp+0x28],eax
   14000cd41:	mov    QWORD PTR [rsp+0x20],rdi
   14000cd46:	call   r10
   14000cd49:	jmp    0x14000cd87
   14000cd4b:	mov    rax,QWORD PTR [rsp+0x90]
   14000cd53:	mov    r9,rbp
   14000cd56:	mov    r8,r14
   14000cd59:	mov    QWORD PTR [rsp+0x38],rax
   14000cd5e:	mov    eax,DWORD PTR [rsp+0x88]
   14000cd65:	mov    rdx,rsi
   14000cd68:	mov    DWORD PTR [rsp+0x30],eax
   14000cd6c:	mov    al,BYTE PTR [rsp+0x98]
   14000cd73:	mov    rcx,rbx
   14000cd76:	mov    BYTE PTR [rsp+0x28],al
   14000cd7a:	mov    QWORD PTR [rsp+0x20],rdi
   14000cd7f:	call   0x14000b5f8
   14000cd84:	mov    eax,r12d
   14000cd87:	mov    rbx,QWORD PTR [rsp+0x60]
   14000cd8c:	mov    rbp,QWORD PTR [rsp+0x68]
   14000cd91:	mov    rsi,QWORD PTR [rsp+0x70]
   14000cd96:	add    rsp,0x40
   14000cd9a:	pop    r14
   14000cd9c:	pop    r12
   14000cd9e:	pop    rdi
   14000cd9f:	ret    
   14000cda0:	mov    rax,rsp
   14000cda3:	mov    QWORD PTR [rax+0x8],rbx
   14000cda7:	mov    QWORD PTR [rax+0x10],rbp
   14000cdab:	mov    QWORD PTR [rax+0x18],rsi
   14000cdaf:	mov    QWORD PTR [rax+0x20],rdi
   14000cdb3:	push   r14
   14000cdb5:	sub    rsp,0x20
   14000cdb9:	mov    esi,DWORD PTR [rcx+0x4]
   14000cdbc:	xor    ebx,ebx
   14000cdbe:	mov    r14,r8
   14000cdc1:	mov    rbp,rdx
   14000cdc4:	mov    rdi,rcx
   14000cdc7:	test   esi,esi
   14000cdc9:	je     0x14000cdd9
   14000cdcb:	movsxd rsi,esi
   14000cdce:	call   0x140006e58
   14000cdd3:	lea    rcx,[rsi+rax*1]
   14000cdd7:	jmp    0x14000cddc
   14000cdd9:	mov    rcx,rbx
   14000cddc:	test   rcx,rcx
   14000cddf:	je     0x14000cead
   14000cde5:	test   esi,esi
   14000cde7:	je     0x14000cdf8
   14000cde9:	movsxd rsi,DWORD PTR [rdi+0x4]
   14000cded:	call   0x140006e58
   14000cdf2:	lea    rcx,[rsi+rax*1]
   14000cdf6:	jmp    0x14000cdfb
   14000cdf8:	mov    rcx,rbx
   14000cdfb:	cmp    BYTE PTR [rcx+0x10],bl
   14000cdfe:	je     0x14000cead
   14000ce04:	test   BYTE PTR [rdi],0x80
   14000ce07:	je     0x14000ce13
   14000ce09:	test   BYTE PTR [rbp+0x0],0x10
   14000ce0d:	jne    0x14000cead
   14000ce13:	test   esi,esi
   14000ce15:	je     0x14000ce28
   14000ce17:	call   0x140006e58
   14000ce1c:	mov    rsi,rax
   14000ce1f:	movsxd rax,DWORD PTR [rdi+0x4]
   14000ce23:	add    rsi,rax
   14000ce26:	jmp    0x14000ce2b
   14000ce28:	mov    rsi,rbx
   14000ce2b:	call   0x140006e70
   14000ce30:	mov    rcx,rax
   14000ce33:	movsxd rax,DWORD PTR [rbp+0x4]
   14000ce37:	add    rcx,rax
   14000ce3a:	cmp    rsi,rcx
   14000ce3d:	je     0x14000ce79
   14000ce3f:	cmp    DWORD PTR [rdi+0x4],ebx
   14000ce42:	je     0x14000ce55
   14000ce44:	call   0x140006e58
   14000ce49:	mov    rsi,rax
   14000ce4c:	movsxd rax,DWORD PTR [rdi+0x4]
   14000ce50:	add    rsi,rax
   14000ce53:	jmp    0x14000ce58
   14000ce55:	mov    rsi,rbx
   14000ce58:	call   0x140006e70
   14000ce5d:	movsxd rdx,DWORD PTR [rbp+0x4]
   14000ce61:	lea    rcx,[rsi+0x10]
   14000ce65:	add    rdx,0x10
   14000ce69:	add    rdx,rax
   14000ce6c:	call   0x14000d0d0
   14000ce71:	test   eax,eax
   14000ce73:	je     0x14000ce79
   14000ce75:	xor    eax,eax
   14000ce77:	jmp    0x14000ceb2
   14000ce79:	mov    al,0x2
   14000ce7b:	test   BYTE PTR [rbp+0x0],al
   14000ce7e:	je     0x14000ce85
   14000ce80:	test   BYTE PTR [rdi],0x8
   14000ce83:	je     0x14000cea9
   14000ce85:	test   BYTE PTR [r14],0x1
   14000ce89:	je     0x14000ce90
   14000ce8b:	test   BYTE PTR [rdi],0x1
   14000ce8e:	je     0x14000cea9
   14000ce90:	test   BYTE PTR [r14],0x4
   14000ce94:	je     0x14000ce9b
   14000ce96:	test   BYTE PTR [rdi],0x4
   14000ce99:	je     0x14000cea9
   14000ce9b:	test   BYTE PTR [r14],al
   14000ce9e:	je     0x14000cea4
   14000cea0:	test   BYTE PTR [rdi],al
   14000cea2:	je     0x14000cea9
   14000cea4:	mov    ebx,0x1
   14000cea9:	mov    eax,ebx
   14000ceab:	jmp    0x14000ceb2
   14000cead:	mov    eax,0x1
   14000ceb2:	mov    rbx,QWORD PTR [rsp+0x30]
   14000ceb7:	mov    rbp,QWORD PTR [rsp+0x38]
   14000cebc:	mov    rsi,QWORD PTR [rsp+0x40]
   14000cec1:	mov    rdi,QWORD PTR [rsp+0x48]
   14000cec6:	add    rsp,0x20
   14000ceca:	pop    r14
   14000cecc:	ret    
   14000cecd:	int3   
   14000cece:	int3   
   14000cecf:	int3   
   14000ced0:	sub    rsp,0x28
   14000ced4:	movsxd r9,DWORD PTR [r8+0x1c]
   14000ced8:	mov    rax,QWORD PTR [rcx]
   14000cedb:	mov    r10,r8
   14000cede:	mov    eax,DWORD PTR [r9+rax*1]
   14000cee2:	cmp    eax,0xfffffffe
   14000cee5:	jne    0x14000cef2
   14000cee7:	mov    r8,QWORD PTR [rdx]
   14000ceea:	mov    rcx,r10
   14000ceed:	call   0x14000cf74
   14000cef2:	add    rsp,0x28
   14000cef6:	ret    
   14000cef7:	int3   
   14000cef8:	rex push rbx
   14000cefa:	sub    rsp,0x20
   14000cefe:	lea    r9,[rsp+0x40]
   14000cf03:	mov    rbx,r8
   14000cf06:	call   0x140006a30
   14000cf0b:	mov    rcx,QWORD PTR [rax]
   14000cf0e:	movsxd rax,DWORD PTR [rbx+0x1c]
   14000cf12:	mov    QWORD PTR [rsp+0x40],rcx
   14000cf17:	mov    eax,DWORD PTR [rax+rcx*1+0x4]
   14000cf1b:	add    rsp,0x20
   14000cf1f:	pop    rbx
   14000cf20:	ret    
   14000cf21:	int3   
   14000cf22:	int3   
   14000cf23:	int3   
   14000cf24:	movsxd rdx,DWORD PTR [r8+0x1c]
   14000cf28:	mov    rax,QWORD PTR [rcx]
   14000cf2b:	mov    DWORD PTR [rdx+rax*1],r9d
   14000cf2f:	ret    
   14000cf30:	mov    QWORD PTR [rsp+0x8],rbx
   14000cf35:	push   rdi
   14000cf36:	sub    rsp,0x20
   14000cf3a:	mov    edi,r9d
   14000cf3d:	lea    r9,[rsp+0x40]
   14000cf42:	mov    rbx,r8
   14000cf45:	call   0x140006a30
   14000cf4a:	mov    rcx,QWORD PTR [rax]
   14000cf4d:	movsxd rax,DWORD PTR [rbx+0x1c]
   14000cf51:	mov    QWORD PTR [rsp+0x40],rcx
   14000cf56:	cmp    edi,DWORD PTR [rax+rcx*1+0x4]
   14000cf5a:	jle    0x14000cf60
   14000cf5c:	mov    DWORD PTR [rax+rcx*1+0x4],edi
   14000cf60:	mov    rbx,QWORD PTR [rsp+0x30]
   14000cf65:	add    rsp,0x20
   14000cf69:	pop    rdi
   14000cf6a:	ret    
   14000cf6b:	int3   
   14000cf6c:	mov    r8,QWORD PTR [rdx]
   14000cf6f:	jmp    0x14000cf74
   14000cf74:	mov    QWORD PTR [rsp+0x8],rbx
   14000cf79:	mov    QWORD PTR [rsp+0x10],rbp
   14000cf7e:	mov    QWORD PTR [rsp+0x18],rsi
   14000cf83:	push   rdi
   14000cf84:	sub    rsp,0x20
   14000cf88:	mov    rbp,r8
   14000cf8b:	mov    rsi,rdx
   14000cf8e:	mov    rbx,rcx
   14000cf91:	test   rcx,rcx
   14000cf94:	jne    0x14000cf9b
   14000cf96:	call   0x14000982c
   14000cf9b:	movsxd rax,DWORD PTR [rbx+0x18]
   14000cf9f:	mov    edi,DWORD PTR [rbx+0x14]
   14000cfa2:	add    rax,QWORD PTR [rsi+0x8]
   14000cfa6:	jne    0x14000cfad
   14000cfa8:	call   0x14000982c
   14000cfad:	xor    r8d,r8d
   14000cfb0:	test   edi,edi
   14000cfb2:	je     0x14000cfe8
   14000cfb4:	mov    r9,QWORD PTR [rsi+0x8]
   14000cfb8:	movsxd r10,DWORD PTR [rbx+0x18]
   14000cfbc:	lea    rcx,[r9+r8*8]
   14000cfc0:	movsxd rdx,DWORD PTR [rcx+r10*1]
   14000cfc4:	add    rdx,r9
   14000cfc7:	cmp    rbp,rdx
   14000cfca:	jl     0x14000cfd4
   14000cfcc:	inc    r8d
   14000cfcf:	cmp    r8d,edi
   14000cfd2:	jb     0x14000cfbc
   14000cfd4:	test   r8d,r8d
   14000cfd7:	je     0x14000cfe8
   14000cfd9:	lea    ecx,[r8-0x1]
   14000cfdd:	lea    rax,[r9+rcx*8]
   14000cfe1:	mov    eax,DWORD PTR [rax+r10*1+0x4]
   14000cfe6:	jmp    0x14000cfeb
   14000cfe8:	or     eax,0xffffffff
   14000cfeb:	mov    rbx,QWORD PTR [rsp+0x30]
   14000cff0:	mov    rbp,QWORD PTR [rsp+0x38]
   14000cff5:	mov    rsi,QWORD PTR [rsp+0x40]
   14000cffa:	add    rsp,0x20
   14000cffe:	pop    rdi
   14000cfff:	ret    
   14000d000:	sub    rsp,0x28
   14000d004:	mov    r8,QWORD PTR [r9+0x38]
   14000d008:	mov    rcx,rdx
   14000d00b:	mov    rdx,r9
   14000d00e:	call   0x14000d020
   14000d013:	mov    eax,0x1
   14000d018:	add    rsp,0x28
   14000d01c:	ret    
   14000d01d:	int3   
   14000d01e:	int3   
   14000d01f:	int3   
   14000d020:	rex push rbx
   14000d022:	sub    rsp,0x20
   14000d026:	mov    r11d,DWORD PTR [r8]
   14000d029:	mov    rbx,rdx
   14000d02c:	mov    r9,rcx
   14000d02f:	and    r11d,0xfffffff8
   14000d033:	test   BYTE PTR [r8],0x4
   14000d037:	mov    r10,rcx
   14000d03a:	je     0x14000d04f
   14000d03c:	mov    eax,DWORD PTR [r8+0x8]
   14000d040:	movsxd r10,DWORD PTR [r8+0x4]
   14000d044:	neg    eax
   14000d046:	add    r10,rcx
   14000d049:	movsxd rcx,eax
   14000d04c:	and    r10,rcx
   14000d04f:	movsxd rax,r11d
   14000d052:	mov    rdx,QWORD PTR [rax+r10*1]
   14000d056:	mov    rax,QWORD PTR [rbx+0x10]
   14000d05a:	mov    ecx,DWORD PTR [rax+0x8]
   14000d05d:	add    rcx,QWORD PTR [rbx+0x8]
   14000d061:	test   BYTE PTR [rcx+0x3],0xf
   14000d065:	je     0x14000d073
   14000d067:	movzx  eax,BYTE PTR [rcx+0x3]
   14000d06b:	and    eax,0xfffffff0
   14000d06e:	cdqe   
   14000d070:	add    r9,rax
   14000d073:	xor    r9,rdx
   14000d076:	mov    rcx,r9
   14000d079:	add    rsp,0x20
   14000d07d:	pop    rbx
   14000d07e:	jmp    0x14000d0a0
   14000d083:	int3   
   14000d084:	int3   
   14000d085:	int3   
   14000d086:	int3   
   14000d087:	int3   
   14000d088:	int3   
   14000d089:	int3   
   14000d08a:	int3   
   14000d08b:	int3   
   14000d08c:	int3   
   14000d08d:	int3   
   14000d08e:	int3   
   14000d08f:	int3   
   14000d090:	int3   
   14000d091:	int3   
   14000d092:	int3   
   14000d093:	int3   
   14000d094:	int3   
   14000d095:	int3   
   14000d096:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000d0a0:	cmp    rcx,QWORD PTR [rip+0x29999]        # 0x140036a40
   14000d0a7:	jne    0x14000d0ba
   14000d0a9:	rol    rcx,0x10
   14000d0ad:	test   cx,0xffff
   14000d0b2:	jne    0x14000d0b6
   14000d0b4:	repz ret 
   14000d0b6:	ror    rcx,0x10
   14000d0ba:	jmp    0x1400115f4
   14000d0bf:	int3   
   14000d0c0:	int3   
   14000d0c1:	int3   
   14000d0c2:	int3   
   14000d0c3:	int3   
   14000d0c4:	int3   
   14000d0c5:	int3   
   14000d0c6:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000d0d0:	sub    rdx,rcx
   14000d0d3:	test   cl,0x7
   14000d0d6:	je     0x14000d0ec
   14000d0d8:	movzx  eax,BYTE PTR [rcx]
   14000d0db:	cmp    al,BYTE PTR [rcx+rdx*1]
   14000d0de:	jne    0x14000d12f
   14000d0e0:	inc    rcx
   14000d0e3:	test   al,al
   14000d0e5:	je     0x14000d12c
   14000d0e7:	test   cl,0x7
   14000d0ea:	jne    0x14000d0d8
   14000d0ec:	movabs r11,0x8080808080808080
   14000d0f6:	movabs r10,0xfefefefefefefeff
   14000d100:	lea    eax,[ecx+edx*1]
   14000d104:	and    eax,0xfff
   14000d109:	cmp    eax,0xff8
   14000d10e:	ja     0x14000d0d8
   14000d110:	mov    rax,QWORD PTR [rcx]
   14000d113:	cmp    rax,QWORD PTR [rcx+rdx*1]
   14000d117:	jne    0x14000d0d8
   14000d119:	lea    r9,[r10+rax*1]
   14000d11d:	not    rax
   14000d120:	add    rcx,0x8
   14000d124:	and    rax,r9
   14000d127:	test   r11,rax
   14000d12a:	je     0x14000d100
   14000d12c:	xor    eax,eax
   14000d12e:	ret    
   14000d12f:	sbb    rax,rax
   14000d132:	or     rax,0x1
   14000d136:	ret    
   14000d137:	int3   
   14000d138:	mov    r11,rsp
   14000d13b:	mov    QWORD PTR [r11+0x8],rbx
   14000d13f:	mov    QWORD PTR [r11+0x10],rsi
   14000d143:	mov    QWORD PTR [r11+0x18],rdi
   14000d147:	mov    QWORD PTR [r11+0x20],r14
   14000d14b:	push   r15
   14000d14d:	sub    rsp,0x30
   14000d151:	mov    r15,rdx
   14000d154:	mov    rdi,rcx
   14000d157:	cmp    QWORD PTR [rcx+0x8],0x0
   14000d15c:	jne    0x14000d24d
   14000d162:	mov    eax,0x2800
   14000d167:	lea    rdx,[rcx+0x11]
   14000d16b:	mov    WORD PTR [rsp+0x28],ax
   14000d170:	lea    rax,[rip+0xffffffffffff92cd]        # 0x140006444
   14000d177:	mov    QWORD PTR [r11-0x18],rax
   14000d17b:	lea    r9,[rip+0xffffffffffff9352]        # 0x1400064d4
   14000d182:	xor    r8d,r8d
   14000d185:	xor    ecx,ecx
   14000d187:	call   0x1400184e8
   14000d18c:	mov    r14,rax
   14000d18f:	test   rax,rax
   14000d192:	je     0x14000d251
   14000d198:	mov    rcx,rax
   14000d19b:	call   0x140007730
   14000d1a0:	mov    rbx,rax
   14000d1a3:	test   rax,rax
   14000d1a6:	je     0x14000d1bc
   14000d1a8:	dec    rbx
   14000d1ab:	cmp    BYTE PTR [rbx+r14*1],0x20
   14000d1b0:	jne    0x14000d1bf
   14000d1b2:	mov    BYTE PTR [rbx+r14*1],0x0
   14000d1b7:	test   rbx,rbx
   14000d1ba:	jne    0x14000d1a8
   14000d1bc:	dec    rbx
   14000d1bf:	mov    ecx,0xe
   14000d1c4:	call   0x140008760
   14000d1c9:	nop
   14000d1ca:	cmp    QWORD PTR [rdi+0x8],0x0
   14000d1cf:	jne    0x14000d23a
   14000d1d1:	mov    ecx,0x10
   14000d1d6:	call   0x1400064d4
   14000d1db:	mov    rsi,rax
   14000d1de:	test   rax,rax
   14000d1e1:	je     0x14000d23a
   14000d1e3:	lea    rcx,[rbx+0x2]
   14000d1e7:	call   0x1400064d4
   14000d1ec:	mov    QWORD PTR [rdi+0x8],rax
   14000d1f0:	test   rax,rax
   14000d1f3:	je     0x14000d232
   14000d1f5:	mov    r8,r14
   14000d1f8:	lea    rdx,[rbx+0x2]
   14000d1fc:	mov    rcx,rax
   14000d1ff:	call   0x14000ee64
   14000d204:	test   eax,eax
   14000d206:	jne    0x14000d21d
   14000d208:	mov    rax,QWORD PTR [rdi+0x8]
   14000d20c:	mov    QWORD PTR [rsi],rax
   14000d20f:	mov    rax,QWORD PTR [r15+0x8]
   14000d213:	mov    QWORD PTR [rsi+0x8],rax
   14000d217:	mov    QWORD PTR [r15+0x8],rsi
   14000d21b:	jmp    0x14000d23a
   14000d21d:	and    QWORD PTR [rsp+0x20],0x0
   14000d223:	xor    r9d,r9d
   14000d226:	xor    r8d,r8d
   14000d229:	xor    edx,edx
   14000d22b:	xor    ecx,ecx
   14000d22d:	call   0x140008678
   14000d232:	mov    rcx,rsi
   14000d235:	call   0x140006444
   14000d23a:	mov    rcx,r14
   14000d23d:	call   0x140006444
   14000d242:	nop
   14000d243:	mov    ecx,0xe
   14000d248:	call   0x14000897c
   14000d24d:	mov    rax,QWORD PTR [rdi+0x8]
   14000d251:	mov    rbx,QWORD PTR [rsp+0x40]
   14000d256:	mov    rsi,QWORD PTR [rsp+0x48]
   14000d25b:	mov    rdi,QWORD PTR [rsp+0x50]
   14000d260:	mov    r14,QWORD PTR [rsp+0x58]
   14000d265:	add    rsp,0x30
   14000d269:	pop    r15
   14000d26b:	ret    
   14000d26c:	mov    QWORD PTR [rsp+0x8],rbx
   14000d271:	mov    QWORD PTR [rsp+0x10],rsi
   14000d276:	mov    QWORD PTR [rsp+0x18],rdi
   14000d27b:	push   r12
   14000d27d:	push   r14
   14000d27f:	push   r15
   14000d281:	sub    rsp,0x40
   14000d285:	mov    QWORD PTR [rsp+0x38],rsp
   14000d28a:	mov    r15,rdx
   14000d28d:	mov    rsi,rcx
   14000d290:	cmp    QWORD PTR [rcx+0x8],0x0
   14000d295:	jne    0x14000d3a7
   14000d29b:	mov    ecx,0xe
   14000d2a0:	call   0x140008760
   14000d2a5:	nop
   14000d2a6:	cmp    QWORD PTR [rsi+0x8],0x0
   14000d2ab:	jne    0x14000d39d
   14000d2b1:	mov    eax,0x2800
   14000d2b6:	lea    rdx,[rsi+0x11]
   14000d2ba:	mov    WORD PTR [rsp+0x28],ax
   14000d2bf:	lea    rax,[rip+0xffffffffffff917e]        # 0x140006444
   14000d2c6:	mov    QWORD PTR [rsp+0x20],rax
   14000d2cb:	lea    r9,[rip+0xffffffffffff9202]        # 0x1400064d4
   14000d2d2:	xor    r8d,r8d
   14000d2d5:	xor    ecx,ecx
   14000d2d7:	call   0x1400184e8
   14000d2dc:	mov    r14,rax
   14000d2df:	test   rax,rax
   14000d2e2:	jne    0x14000d2fc
   14000d2e4:	lea    rdx,[rip+0xa]        # 0x14000d2f5
   14000d2eb:	mov    rcx,rsp
   14000d2ee:	call   0x14000f840
   14000d2f3:	nop
   14000d2f4:	nop
   14000d2f5:	xor    eax,eax
   14000d2f7:	jmp    0x14000d3ab
   14000d2fc:	mov    rcx,rax
   14000d2ff:	call   0x140007730
   14000d304:	mov    rbx,rax
   14000d307:	mov    QWORD PTR [rsp+0x30],rax
   14000d30c:	mov    rcx,rbx
   14000d30f:	dec    rbx
   14000d312:	mov    QWORD PTR [rsp+0x30],rbx
   14000d317:	test   rcx,rcx
   14000d31a:	je     0x14000d32a
   14000d31c:	cmp    BYTE PTR [rbx+r14*1],0x20
   14000d321:	jne    0x14000d32a
   14000d323:	mov    BYTE PTR [rbx+r14*1],0x0
   14000d328:	jmp    0x14000d30c
   14000d32a:	mov    ecx,0x10
   14000d32f:	call   0x1400064d4
   14000d334:	mov    rdi,rax
   14000d337:	test   rax,rax
   14000d33a:	je     0x14000d394
   14000d33c:	lea    r12,[rbx+0x2]
   14000d340:	mov    rcx,r12
   14000d343:	call   0x1400064d4
   14000d348:	mov    rbx,rax
   14000d34b:	test   rax,rax
   14000d34e:	je     0x14000d38c
   14000d350:	mov    r8,r14
   14000d353:	mov    rdx,r12
   14000d356:	mov    rcx,rax
   14000d359:	call   0x14000ee64
   14000d35e:	test   eax,eax
   14000d360:	jne    0x14000d377
   14000d362:	mov    QWORD PTR [rsi+0x8],rbx
   14000d366:	mov    QWORD PTR [rdi],rbx
   14000d369:	mov    rax,QWORD PTR [r15+0x8]
   14000d36d:	mov    QWORD PTR [rdi+0x8],rax
   14000d371:	mov    QWORD PTR [r15+0x8],rdi
   14000d375:	jmp    0x14000d394
   14000d377:	and    QWORD PTR [rsp+0x20],0x0
   14000d37d:	xor    r9d,r9d
   14000d380:	xor    r8d,r8d
   14000d383:	xor    edx,edx
   14000d385:	xor    ecx,ecx
   14000d387:	call   0x140008678
   14000d38c:	mov    rcx,rdi
   14000d38f:	call   0x140006444
   14000d394:	mov    rcx,r14
   14000d397:	call   0x140006444
   14000d39c:	nop
   14000d39d:	mov    ecx,0xe
   14000d3a2:	call   0x14000897c
   14000d3a7:	mov    rax,QWORD PTR [rsi+0x8]
   14000d3ab:	mov    rbx,QWORD PTR [rsp+0x60]
   14000d3b0:	mov    rsi,QWORD PTR [rsp+0x68]
   14000d3b5:	mov    rdi,QWORD PTR [rsp+0x70]
   14000d3ba:	add    rsp,0x40
   14000d3be:	pop    r15
   14000d3c0:	pop    r14
   14000d3c2:	pop    r12
   14000d3c4:	ret    
   14000d3c5:	int3   
   14000d3c6:	int3   
   14000d3c7:	int3   
   14000d3c8:	rex push rbx
   14000d3ca:	sub    rsp,0x30
   14000d3ce:	mov    rbx,rcx
   14000d3d1:	mov    ecx,0xe
   14000d3d6:	call   0x140008760
   14000d3db:	nop
   14000d3dc:	mov    rax,QWORD PTR [rbx+0x8]
   14000d3e0:	test   rax,rax
   14000d3e3:	je     0x14000d424
   14000d3e5:	mov    rcx,QWORD PTR [rip+0x2b29c]        # 0x140038688
   14000d3ec:	lea    rdx,[rip+0x2b28d]        # 0x140038680
   14000d3f3:	mov    QWORD PTR [rsp+0x20],rcx
   14000d3f8:	test   rcx,rcx
   14000d3fb:	je     0x14000d416
   14000d3fd:	cmp    QWORD PTR [rcx],rax
   14000d400:	jne    0x14000d411
   14000d402:	mov    rax,QWORD PTR [rcx+0x8]
   14000d406:	mov    QWORD PTR [rdx+0x8],rax
   14000d40a:	call   0x140006444
   14000d40f:	jmp    0x14000d416
   14000d411:	mov    rdx,rcx
   14000d414:	jmp    0x14000d3f3
   14000d416:	mov    rcx,QWORD PTR [rbx+0x8]
   14000d41a:	call   0x140006444
   14000d41f:	and    QWORD PTR [rbx+0x8],0x0
   14000d424:	mov    ecx,0xe
   14000d429:	call   0x14000897c
   14000d42e:	add    rsp,0x30
   14000d432:	pop    rbx
   14000d433:	ret    
   14000d434:	rex push rbx
   14000d436:	sub    rsp,0x30
   14000d43a:	mov    rbx,rcx
   14000d43d:	mov    ecx,0xe
   14000d442:	call   0x140008760
   14000d447:	nop
   14000d448:	mov    rax,QWORD PTR [rbx+0x8]
   14000d44c:	test   rax,rax
   14000d44f:	je     0x14000d490
   14000d451:	mov    rcx,QWORD PTR [rip+0x2b230]        # 0x140038688
   14000d458:	lea    rdx,[rip+0x2b221]        # 0x140038680
   14000d45f:	mov    QWORD PTR [rsp+0x20],rcx
   14000d464:	test   rcx,rcx
   14000d467:	je     0x14000d482
   14000d469:	cmp    QWORD PTR [rcx],rax
   14000d46c:	jne    0x14000d47d
   14000d46e:	mov    rax,QWORD PTR [rcx+0x8]
   14000d472:	mov    QWORD PTR [rdx+0x8],rax
   14000d476:	call   0x140006444
   14000d47b:	jmp    0x14000d482
   14000d47d:	mov    rdx,rcx
   14000d480:	jmp    0x14000d45f
   14000d482:	mov    rcx,QWORD PTR [rbx+0x8]
   14000d486:	call   0x140006444
   14000d48b:	and    QWORD PTR [rbx+0x8],0x0
   14000d490:	mov    ecx,0xe
   14000d495:	call   0x14000897c
   14000d49a:	add    rsp,0x30
   14000d49e:	pop    rbx
   14000d49f:	ret    
   14000d4a0:	mov    QWORD PTR [rsp+0x8],rbx
   14000d4a5:	push   rdi
   14000d4a6:	sub    rsp,0x20
   14000d4aa:	mov    rbx,rcx
   14000d4ad:	mov    ecx,0xe
   14000d4b2:	call   0x140008760
   14000d4b7:	nop
   14000d4b8:	mov    rbx,QWORD PTR [rbx+0x8]
   14000d4bc:	test   rbx,rbx
   14000d4bf:	je     0x14000d4da
   14000d4c1:	mov    rdi,QWORD PTR [rbx+0x8]
   14000d4c5:	mov    rcx,QWORD PTR [rbx]
   14000d4c8:	call   0x140006444
   14000d4cd:	mov    rcx,rbx
   14000d4d0:	call   0x140006444
   14000d4d5:	mov    rbx,rdi
   14000d4d8:	jmp    0x14000d4bc
   14000d4da:	mov    ecx,0xe
   14000d4df:	call   0x14000897c
   14000d4e4:	mov    rbx,QWORD PTR [rsp+0x30]
   14000d4e9:	add    rsp,0x20
   14000d4ed:	pop    rdi
   14000d4ee:	ret    
   14000d4ef:	int3   
   14000d4f0:	sub    rsp,0x38
   14000d4f4:	movzx  eax,r9w
   14000d4f8:	test   r9w,r9w
   14000d4fc:	jne    0x14000d503
   14000d4fe:	mov    eax,0x2800
   14000d503:	mov    WORD PTR [rsp+0x28],ax
   14000d508:	lea    rax,[rip+0xffffffffffff8f35]        # 0x140006444
   14000d50f:	lea    r9,[rip+0xffffffffffff8fbe]        # 0x1400064d4
   14000d516:	mov    QWORD PTR [rsp+0x20],rax
   14000d51b:	call   0x1400184e8
   14000d520:	add    rsp,0x38
   14000d524:	ret    
   14000d525:	int3   
   14000d526:	int3   
   14000d527:	int3   
   14000d528:	jmp    0x1400193f0
   14000d52d:	int3   
   14000d52e:	int3   
   14000d52f:	int3   
   14000d530:	sub    rsp,0x48
   14000d534:	mov    eax,DWORD PTR [rsp+0x78]
   14000d538:	and    QWORD PTR [rsp+0x30],0x0
   14000d53e:	mov    DWORD PTR [rsp+0x28],eax
   14000d542:	mov    eax,DWORD PTR [rsp+0x70]
   14000d546:	mov    DWORD PTR [rsp+0x20],eax
   14000d54a:	call   0x14000d554
   14000d54f:	add    rsp,0x48
   14000d553:	ret    
   14000d554:	sub    rsp,0x38
   14000d558:	lea    eax,[r9-0x45]
   14000d55c:	mov    r10d,0xffffffdf
   14000d562:	test   r10d,eax
   14000d565:	je     0x14000d5b1
   14000d567:	cmp    r9d,0x66
   14000d56b:	jne    0x14000d583
   14000d56d:	mov    rax,QWORD PTR [rsp+0x70]
   14000d572:	mov    r9d,DWORD PTR [rsp+0x60]
   14000d577:	mov    QWORD PTR [rsp+0x20],rax
   14000d57c:	call   0x14000de28
   14000d581:	jmp    0x14000d5cd
   14000d583:	lea    eax,[r9-0x41]
   14000d587:	mov    r9d,DWORD PTR [rsp+0x60]
   14000d58c:	test   r10d,eax
   14000d58f:	mov    rax,QWORD PTR [rsp+0x70]
   14000d594:	mov    QWORD PTR [rsp+0x28],rax
   14000d599:	mov    eax,DWORD PTR [rsp+0x68]
   14000d59d:	mov    DWORD PTR [rsp+0x20],eax
   14000d5a1:	je     0x14000d5aa
   14000d5a3:	call   0x14000df18
   14000d5a8:	jmp    0x14000d5cd
   14000d5aa:	call   0x14000d5f0
   14000d5af:	jmp    0x14000d5cd
   14000d5b1:	mov    rax,QWORD PTR [rsp+0x70]
   14000d5b6:	mov    r9d,DWORD PTR [rsp+0x60]
   14000d5bb:	mov    QWORD PTR [rsp+0x28],rax
   14000d5c0:	mov    eax,DWORD PTR [rsp+0x68]
   14000d5c4:	mov    DWORD PTR [rsp+0x20],eax
   14000d5c8:	call   0x14000dbb8
   14000d5cd:	add    rsp,0x38
   14000d5d1:	ret    
   14000d5d2:	int3   
   14000d5d3:	int3   
   14000d5d4:	sub    rsp,0x38
   14000d5d8:	mov    eax,DWORD PTR [rsp+0x60]
   14000d5dc:	and    QWORD PTR [rsp+0x28],0x0
   14000d5e2:	mov    DWORD PTR [rsp+0x20],eax
   14000d5e6:	call   0x14000d5f0
   14000d5eb:	add    rsp,0x38
   14000d5ef:	ret    
   14000d5f0:	mov    rax,rsp
   14000d5f3:	mov    QWORD PTR [rax+0x8],rbx
   14000d5f7:	mov    QWORD PTR [rax+0x10],rbp
   14000d5fb:	mov    QWORD PTR [rax+0x18],rsi
   14000d5ff:	push   rdi
   14000d600:	push   r12
   14000d602:	push   r13
   14000d604:	push   r14
   14000d606:	push   r15
   14000d608:	sub    rsp,0x50
   14000d60c:	mov    rdi,rdx
   14000d60f:	mov    rdx,QWORD PTR [rsp+0xa8]
   14000d617:	mov    r14,rcx
   14000d61a:	lea    rcx,[rax-0x48]
   14000d61e:	mov    r15d,0x30
   14000d624:	mov    ebx,r9d
   14000d627:	mov    rsi,r8
   14000d62a:	mov    r12d,0x3ff
   14000d630:	movzx  ebp,r15w
   14000d634:	call   0x14000a000
   14000d639:	xor    r9d,r9d
   14000d63c:	test   ebx,ebx
   14000d63e:	cmovs  ebx,r9d
   14000d642:	test   rdi,rdi
   14000d645:	jne    0x14000d653
   14000d647:	call   0x1400095b8
   14000d64c:	mov    ebx,0x16
   14000d651:	jmp    0x14000d670
   14000d653:	test   rsi,rsi
   14000d656:	je     0x14000d647
   14000d658:	lea    eax,[rbx+0xb]
   14000d65b:	mov    BYTE PTR [rdi],r9b
   14000d65e:	movsxd rcx,eax
   14000d661:	cmp    rsi,rcx
   14000d664:	ja     0x14000d67f
   14000d666:	call   0x1400095b8
   14000d66b:	mov    ebx,0x22
   14000d670:	mov    DWORD PTR [rax],ebx
   14000d672:	call   0x140008628
   14000d677:	xor    r9d,r9d
   14000d67a:	jmp    0x14000d96d
   14000d67f:	mov    rax,QWORD PTR [r14]
   14000d682:	mov    ecx,0x7ff
   14000d687:	shr    rax,0x34
   14000d68b:	and    rax,rcx
   14000d68e:	cmp    rax,rcx
   14000d691:	jne    0x14000d729
   14000d697:	mov    QWORD PTR [rsp+0x28],r9
   14000d69c:	mov    DWORD PTR [rsp+0x20],r9d
   14000d6a1:	lea    r8,[rsi-0x2]
   14000d6a5:	cmp    rsi,0xffffffffffffffff
   14000d6a9:	lea    rdx,[rdi+0x2]
   14000d6ad:	mov    r9d,ebx
   14000d6b0:	cmove  r8,rsi
   14000d6b4:	mov    rcx,r14
   14000d6b7:	call   0x14000dbb8
   14000d6bc:	xor    r9d,r9d
   14000d6bf:	mov    ebx,eax
   14000d6c1:	test   eax,eax
   14000d6c3:	je     0x14000d6cd
   14000d6c5:	mov    BYTE PTR [rdi],r9b
   14000d6c8:	jmp    0x14000d96d
   14000d6cd:	cmp    BYTE PTR [rdi+0x2],0x2d
   14000d6d1:	mov    esi,0x1
   14000d6d6:	jne    0x14000d6de
   14000d6d8:	mov    BYTE PTR [rdi],0x2d
   14000d6db:	add    rdi,rsi
   14000d6de:	mov    ebx,DWORD PTR [rsp+0xa0]
   14000d6e5:	mov    BYTE PTR [rdi],r15b
   14000d6e8:	mov    edx,0x65
   14000d6ed:	mov    eax,ebx
   14000d6ef:	neg    eax
   14000d6f1:	sbb    cl,cl
   14000d6f3:	and    cl,0xe0
   14000d6f6:	add    cl,0x78
   14000d6f9:	mov    BYTE PTR [rdi+rsi*1],cl
   14000d6fc:	lea    rcx,[rsi+0x1]
   14000d700:	add    rcx,rdi
   14000d703:	call   0x1400193f0
   14000d708:	xor    r9d,r9d
   14000d70b:	test   rax,rax
   14000d70e:	je     0x14000d96a
   14000d714:	neg    ebx
   14000d716:	sbb    cl,cl
   14000d718:	and    cl,0xe0
   14000d71b:	add    cl,0x70
   14000d71e:	mov    BYTE PTR [rax],cl
   14000d720:	mov    BYTE PTR [rax+0x3],r9b
   14000d724:	jmp    0x14000d96a
   14000d729:	movabs rax,0x8000000000000000
   14000d733:	mov    esi,0x1
   14000d738:	test   QWORD PTR [r14],rax
   14000d73b:	je     0x14000d743
   14000d73d:	mov    BYTE PTR [rdi],0x2d
   14000d740:	add    rdi,rsi
   14000d743:	mov    r13d,DWORD PTR [rsp+0xa0]
   14000d74b:	mov    r10d,r15d
   14000d74e:	movabs r11,0xfffffffffffff
   14000d758:	mov    BYTE PTR [rdi],r10b
   14000d75b:	add    rdi,rsi
   14000d75e:	mov    eax,r13d
   14000d761:	neg    eax
   14000d763:	mov    eax,r13d
   14000d766:	sbb    cl,cl
   14000d768:	and    cl,0xe0
   14000d76b:	add    cl,0x78
   14000d76e:	mov    BYTE PTR [rdi],cl
   14000d770:	add    rdi,rsi
   14000d773:	neg    eax
   14000d775:	sbb    edx,edx
   14000d777:	movabs rax,0x7ff0000000000000
   14000d781:	and    edx,0xffffffe0
   14000d784:	sub    edx,0xffffffd9
   14000d787:	test   QWORD PTR [r14],rax
   14000d78a:	jne    0x14000d7a7
   14000d78c:	mov    BYTE PTR [rdi],r10b
   14000d78f:	mov    rax,QWORD PTR [r14]
   14000d792:	add    rdi,rsi
   14000d795:	and    rax,r11
   14000d798:	neg    rax
   14000d79b:	sbb    r12,r12
   14000d79e:	and    r12d,0x3fe
   14000d7a5:	jmp    0x14000d7ad
   14000d7a7:	mov    BYTE PTR [rdi],0x31
   14000d7aa:	add    rdi,rsi
   14000d7ad:	mov    r15,rdi
   14000d7b0:	add    rdi,rsi
   14000d7b3:	test   ebx,ebx
   14000d7b5:	jne    0x14000d7bc
   14000d7b7:	mov    BYTE PTR [r15],r9b
   14000d7ba:	jmp    0x14000d7d0
   14000d7bc:	mov    rax,QWORD PTR [rsp+0x30]
   14000d7c1:	mov    rcx,QWORD PTR [rax+0xf0]
   14000d7c8:	mov    rax,QWORD PTR [rcx]
   14000d7cb:	mov    cl,BYTE PTR [rax]
   14000d7cd:	mov    BYTE PTR [r15],cl
   14000d7d0:	test   QWORD PTR [r14],r11
   14000d7d3:	jbe    0x14000d861
   14000d7d9:	movabs r8,0xf000000000000
   14000d7e3:	test   ebx,ebx
   14000d7e5:	jle    0x14000d814
   14000d7e7:	mov    rax,QWORD PTR [r14]
   14000d7ea:	mov    cl,bpl
   14000d7ed:	and    rax,r8
   14000d7f0:	and    rax,r11
   14000d7f3:	shr    rax,cl
   14000d7f6:	add    ax,r10w
   14000d7fa:	cmp    ax,0x39
   14000d7fe:	jbe    0x14000d803
   14000d800:	add    ax,dx
   14000d803:	mov    BYTE PTR [rdi],al
   14000d805:	shr    r8,0x4
   14000d809:	sub    ebx,esi
   14000d80b:	add    rdi,rsi
   14000d80e:	add    bp,0xfffc
   14000d812:	jns    0x14000d7e3
   14000d814:	test   bp,bp
   14000d817:	js     0x14000d861
   14000d819:	mov    rax,QWORD PTR [r14]
   14000d81c:	mov    cl,bpl
   14000d81f:	and    rax,r8
   14000d822:	and    rax,r11
   14000d825:	shr    rax,cl
   14000d828:	cmp    ax,0x8
   14000d82c:	jbe    0x14000d861
   14000d82e:	lea    rcx,[rdi-0x1]
   14000d832:	mov    al,BYTE PTR [rcx]
   14000d834:	sub    al,0x46
   14000d836:	test   al,0xdf
   14000d838:	jne    0x14000d842
   14000d83a:	mov    BYTE PTR [rcx],r10b
   14000d83d:	sub    rcx,rsi
   14000d840:	jmp    0x14000d832
   14000d842:	cmp    rcx,r15
   14000d845:	je     0x14000d85b
   14000d847:	mov    al,BYTE PTR [rcx]
   14000d849:	cmp    al,0x39
   14000d84b:	jne    0x14000d854
   14000d84d:	add    dl,0x3a
   14000d850:	mov    BYTE PTR [rcx],dl
   14000d852:	jmp    0x14000d861
   14000d854:	add    al,sil
   14000d857:	mov    BYTE PTR [rcx],al
   14000d859:	jmp    0x14000d861
   14000d85b:	sub    rcx,rsi
   14000d85e:	add    BYTE PTR [rcx],sil
   14000d861:	test   ebx,ebx
   14000d863:	jle    0x14000d87d
   14000d865:	mov    r8,rbx
   14000d868:	mov    dl,r10b
   14000d86b:	mov    rcx,rdi
   14000d86e:	call   0x140007150
   14000d873:	add    rdi,rbx
   14000d876:	xor    r9d,r9d
   14000d879:	lea    r10d,[r9+0x30]
   14000d87d:	cmp    BYTE PTR [r15],r9b
   14000d880:	cmove  rdi,r15
   14000d884:	neg    r13d
   14000d887:	sbb    al,al
   14000d889:	and    al,0xe0
   14000d88b:	add    al,0x70
   14000d88d:	mov    BYTE PTR [rdi],al
   14000d88f:	mov    rcx,QWORD PTR [r14]
   14000d892:	add    rdi,rsi
   14000d895:	shr    rcx,0x34
   14000d899:	and    ecx,0x7ff
   14000d89f:	sub    rcx,r12
   14000d8a2:	js     0x14000d8ac
   14000d8a4:	mov    BYTE PTR [rdi],0x2b
   14000d8a7:	add    rdi,rsi
   14000d8aa:	jmp    0x14000d8b5
   14000d8ac:	mov    BYTE PTR [rdi],0x2d
   14000d8af:	add    rdi,rsi
   14000d8b2:	neg    rcx
   14000d8b5:	mov    r8,rdi
   14000d8b8:	mov    BYTE PTR [rdi],r10b
   14000d8bb:	cmp    rcx,0x3e8
   14000d8c2:	jl     0x14000d8f7
   14000d8c4:	movabs rax,0x20c49ba5e353f7cf
   14000d8ce:	imul   rcx
   14000d8d1:	sar    rdx,0x7
   14000d8d5:	mov    rax,rdx
   14000d8d8:	shr    rax,0x3f
   14000d8dc:	add    rdx,rax
   14000d8df:	lea    eax,[r10+rdx*1]
   14000d8e3:	mov    BYTE PTR [rdi],al
   14000d8e5:	add    rdi,rsi
   14000d8e8:	imul   rax,rdx,0xfffffffffffffc18
   14000d8ef:	add    rcx,rax
   14000d8f2:	cmp    rdi,r8
   14000d8f5:	jne    0x14000d8fd
   14000d8f7:	cmp    rcx,0x64
   14000d8fb:	jl     0x14000d92b
   14000d8fd:	movabs rax,0xa3d70a3d70a3d70b
   14000d907:	imul   rcx
   14000d90a:	add    rdx,rcx
   14000d90d:	sar    rdx,0x6
   14000d911:	mov    rax,rdx
   14000d914:	shr    rax,0x3f
   14000d918:	add    rdx,rax
   14000d91b:	lea    eax,[r10+rdx*1]
   14000d91f:	mov    BYTE PTR [rdi],al
   14000d921:	add    rdi,rsi
   14000d924:	imul   rax,rdx,0xffffffffffffff9c
   14000d928:	add    rcx,rax
   14000d92b:	cmp    rdi,r8
   14000d92e:	jne    0x14000d936
   14000d930:	cmp    rcx,0xa
   14000d934:	jl     0x14000d961
   14000d936:	movabs rax,0x6666666666666667
   14000d940:	imul   rcx
   14000d943:	sar    rdx,0x2
   14000d947:	mov    rax,rdx
   14000d94a:	shr    rax,0x3f
   14000d94e:	add    rdx,rax
   14000d951:	lea    eax,[r10+rdx*1]
   14000d955:	mov    BYTE PTR [rdi],al
   14000d957:	add    rdi,rsi
   14000d95a:	imul   rax,rdx,0xfffffffffffffff6
   14000d95e:	add    rcx,rax
   14000d961:	add    cl,r10b
   14000d964:	mov    BYTE PTR [rdi],cl
   14000d966:	mov    BYTE PTR [rdi+0x1],r9b
   14000d96a:	mov    ebx,r9d
   14000d96d:	cmp    BYTE PTR [rsp+0x48],r9b
   14000d972:	je     0x14000d980
   14000d974:	mov    rcx,QWORD PTR [rsp+0x40]
   14000d979:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14000d980:	lea    r11,[rsp+0x50]
   14000d985:	mov    eax,ebx
   14000d987:	mov    rbx,QWORD PTR [r11+0x30]
   14000d98b:	mov    rbp,QWORD PTR [r11+0x38]
   14000d98f:	mov    rsi,QWORD PTR [r11+0x40]
   14000d993:	mov    rsp,r11
   14000d996:	pop    r15
   14000d998:	pop    r14
   14000d99a:	pop    r13
   14000d99c:	pop    r12
   14000d99e:	pop    rdi
   14000d99f:	ret    
   14000d9a0:	sub    rsp,0x38
   14000d9a4:	mov    eax,DWORD PTR [rsp+0x60]
   14000d9a8:	and    QWORD PTR [rsp+0x28],0x0
   14000d9ae:	mov    DWORD PTR [rsp+0x20],eax
   14000d9b2:	call   0x14000dbb8
   14000d9b7:	add    rsp,0x38
   14000d9bb:	ret    
   14000d9bc:	mov    rax,rsp
   14000d9bf:	mov    QWORD PTR [rax+0x8],rbx
   14000d9c3:	mov    QWORD PTR [rax+0x10],rbp
   14000d9c7:	mov    QWORD PTR [rax+0x18],rsi
   14000d9cb:	mov    QWORD PTR [rax+0x20],rdi
   14000d9cf:	push   r13
   14000d9d1:	push   r14
   14000d9d3:	push   r15
   14000d9d5:	sub    rsp,0x50
   14000d9d9:	mov    r14,rdx
   14000d9dc:	mov    rdx,QWORD PTR [rsp+0xa0]
   14000d9e4:	mov    rdi,rcx
   14000d9e7:	lea    rcx,[rax-0x38]
   14000d9eb:	mov    r13d,r9d
   14000d9ee:	movsxd rsi,r8d
   14000d9f1:	call   0x14000a000
   14000d9f6:	test   rdi,rdi
   14000d9f9:	je     0x14000da00
   14000d9fb:	test   r14,r14
   14000d9fe:	jne    0x14000da0c
   14000da00:	call   0x1400095b8
   14000da05:	mov    ebx,0x16
   14000da0a:	jmp    0x14000da27
   14000da0c:	xor    eax,eax
   14000da0e:	test   esi,esi
   14000da10:	cmovg  eax,esi
   14000da13:	add    eax,0x9
   14000da16:	cdqe   
   14000da18:	cmp    r14,rax
   14000da1b:	ja     0x14000da33
   14000da1d:	call   0x1400095b8
   14000da22:	mov    ebx,0x22
   14000da27:	mov    DWORD PTR [rax],ebx
   14000da29:	call   0x140008628
   14000da2e:	jmp    0x14000db6b
   14000da33:	cmp    BYTE PTR [rsp+0x98],0x0
   14000da3b:	mov    rbp,QWORD PTR [rsp+0x90]
   14000da43:	je     0x14000da79
   14000da45:	xor    ebx,ebx
   14000da47:	cmp    DWORD PTR [rbp+0x0],0x2d
   14000da4b:	sete   bl
   14000da4e:	xor    r15d,r15d
   14000da51:	add    rbx,rdi
   14000da54:	test   esi,esi
   14000da56:	setg   r15b
   14000da5a:	test   r15d,r15d
   14000da5d:	je     0x14000da79
   14000da5f:	mov    rcx,rbx
   14000da62:	call   0x140007730
   14000da67:	movsxd rcx,r15d
   14000da6a:	mov    rdx,rbx
   14000da6d:	lea    r8,[rax+0x1]
   14000da71:	add    rcx,rbx
   14000da74:	call   0x1400056d0
   14000da79:	cmp    DWORD PTR [rbp+0x0],0x2d
   14000da7d:	mov    rdx,rdi
   14000da80:	jne    0x14000da89
   14000da82:	mov    BYTE PTR [rdi],0x2d
   14000da85:	lea    rdx,[rdi+0x1]
   14000da89:	test   esi,esi
   14000da8b:	jle    0x14000daa8
   14000da8d:	mov    al,BYTE PTR [rdx+0x1]
   14000da90:	mov    BYTE PTR [rdx],al
   14000da92:	mov    rax,QWORD PTR [rsp+0x30]
   14000da97:	inc    rdx
   14000da9a:	mov    rcx,QWORD PTR [rax+0xf0]
   14000daa1:	mov    rax,QWORD PTR [rcx]
   14000daa4:	mov    cl,BYTE PTR [rax]
   14000daa6:	mov    BYTE PTR [rdx],cl
   14000daa8:	xor    ecx,ecx
   14000daaa:	lea    rbx,[rdx+rsi*1]
   14000daae:	lea    r8,[rip+0x1ceb3]        # 0x14002a968
   14000dab5:	cmp    BYTE PTR [rsp+0x98],cl
   14000dabc:	sete   cl
   14000dabf:	add    rbx,rcx
   14000dac2:	sub    rdi,rbx
   14000dac5:	cmp    r14,0xffffffffffffffff
   14000dac9:	mov    rcx,rbx
   14000dacc:	lea    rdx,[r14+rdi*1]
   14000dad0:	cmove  rdx,r14
   14000dad4:	call   0x14000ee64
   14000dad9:	test   eax,eax
   14000dadb:	jne    0x14000db9f
   14000dae1:	lea    rcx,[rbx+0x2]
   14000dae5:	test   r13d,r13d
   14000dae8:	je     0x14000daed
   14000daea:	mov    BYTE PTR [rbx],0x45
   14000daed:	mov    rax,QWORD PTR [rbp+0x10]
   14000daf1:	cmp    BYTE PTR [rax],0x30
   14000daf4:	je     0x14000db4c
   14000daf6:	mov    r8d,DWORD PTR [rbp+0x4]
   14000dafa:	dec    r8d
   14000dafd:	jns    0x14000db06
   14000daff:	neg    r8d
   14000db02:	mov    BYTE PTR [rbx+0x1],0x2d
   14000db06:	cmp    r8d,0x64
   14000db0a:	jl     0x14000db27
   14000db0c:	mov    eax,0x51eb851f
   14000db11:	imul   r8d
   14000db14:	sar    edx,0x5
   14000db17:	mov    eax,edx
   14000db19:	shr    eax,0x1f
   14000db1c:	add    edx,eax
   14000db1e:	add    BYTE PTR [rbx+0x2],dl
   14000db21:	imul   eax,edx,0xffffff9c
   14000db24:	add    r8d,eax
   14000db27:	cmp    r8d,0xa
   14000db2b:	jl     0x14000db48
   14000db2d:	mov    eax,0x66666667
   14000db32:	imul   r8d
   14000db35:	sar    edx,0x2
   14000db38:	mov    eax,edx
   14000db3a:	shr    eax,0x1f
   14000db3d:	add    edx,eax
   14000db3f:	add    BYTE PTR [rbx+0x3],dl
   14000db42:	imul   eax,edx,0xfffffff6
   14000db45:	add    r8d,eax
   14000db48:	add    BYTE PTR [rbx+0x4],r8b
   14000db4c:	test   BYTE PTR [rip+0x2b4c1],0x1        # 0x140039014
   14000db53:	je     0x14000db69
   14000db55:	cmp    BYTE PTR [rcx],0x30
   14000db58:	jne    0x14000db69
   14000db5a:	lea    rdx,[rcx+0x1]
   14000db5e:	mov    r8d,0x3
   14000db64:	call   0x1400056d0
   14000db69:	xor    ebx,ebx
   14000db6b:	cmp    BYTE PTR [rsp+0x48],0x0
   14000db70:	je     0x14000db7e
   14000db72:	mov    rcx,QWORD PTR [rsp+0x40]
   14000db77:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14000db7e:	lea    r11,[rsp+0x50]
   14000db83:	mov    eax,ebx
   14000db85:	mov    rbx,QWORD PTR [r11+0x20]
   14000db89:	mov    rbp,QWORD PTR [r11+0x28]
   14000db8d:	mov    rsi,QWORD PTR [r11+0x30]
   14000db91:	mov    rdi,QWORD PTR [r11+0x38]
   14000db95:	mov    rsp,r11
   14000db98:	pop    r15
   14000db9a:	pop    r14
   14000db9c:	pop    r13
   14000db9e:	ret    
   14000db9f:	and    QWORD PTR [rsp+0x20],0x0
   14000dba5:	xor    r9d,r9d
   14000dba8:	xor    r8d,r8d
   14000dbab:	xor    edx,edx
   14000dbad:	xor    ecx,ecx
   14000dbaf:	call   0x140008678
   14000dbb4:	int3   
   14000dbb5:	int3   
   14000dbb6:	int3   
   14000dbb7:	int3   
   14000dbb8:	rex push rbx
   14000dbba:	push   rbp
   14000dbbb:	push   rsi
   14000dbbc:	push   rdi
   14000dbbd:	sub    rsp,0x88
   14000dbc4:	mov    rax,QWORD PTR [rip+0x28e75]        # 0x140036a40
   14000dbcb:	xor    rax,rsp
   14000dbce:	mov    QWORD PTR [rsp+0x70],rax
   14000dbd3:	mov    rcx,QWORD PTR [rcx]
   14000dbd6:	mov    rbx,r8
   14000dbd9:	mov    rdi,rdx
   14000dbdc:	mov    esi,r9d
   14000dbdf:	mov    ebp,0x16
   14000dbe4:	lea    r8,[rsp+0x58]
   14000dbe9:	lea    rdx,[rsp+0x40]
   14000dbee:	mov    r9d,ebp
   14000dbf1:	call   0x140019958
   14000dbf6:	test   rdi,rdi
   14000dbf9:	jne    0x14000dc0e
   14000dbfb:	call   0x1400095b8
   14000dc00:	mov    DWORD PTR [rax],ebp
   14000dc02:	call   0x140008628
   14000dc07:	mov    eax,ebp
   14000dc09:	jmp    0x14000dc96
   14000dc0e:	test   rbx,rbx
   14000dc11:	je     0x14000dbfb
   14000dc13:	or     rdx,0xffffffffffffffff
   14000dc17:	cmp    rbx,rdx
   14000dc1a:	je     0x14000dc36
   14000dc1c:	xor    eax,eax
   14000dc1e:	cmp    DWORD PTR [rsp+0x40],0x2d
   14000dc23:	mov    rdx,rbx
   14000dc26:	sete   al
   14000dc29:	sub    rdx,rax
   14000dc2c:	xor    eax,eax
   14000dc2e:	test   esi,esi
   14000dc30:	setg   al
   14000dc33:	sub    rdx,rax
   14000dc36:	xor    eax,eax
   14000dc38:	cmp    DWORD PTR [rsp+0x40],0x2d
   14000dc3d:	lea    r8d,[rsi+0x1]
   14000dc41:	sete   al
   14000dc44:	xor    ecx,ecx
   14000dc46:	test   esi,esi
   14000dc48:	setg   cl
   14000dc4b:	add    rax,rdi
   14000dc4e:	lea    r9,[rsp+0x40]
   14000dc53:	add    rcx,rax
   14000dc56:	call   0x140019534
   14000dc5b:	test   eax,eax
   14000dc5d:	je     0x14000dc64
   14000dc5f:	mov    BYTE PTR [rdi],0x0
   14000dc62:	jmp    0x14000dc96
   14000dc64:	mov    rax,QWORD PTR [rsp+0xd8]
   14000dc6c:	mov    r9d,DWORD PTR [rsp+0xd0]
   14000dc74:	mov    r8d,esi
   14000dc77:	mov    QWORD PTR [rsp+0x30],rax
   14000dc7c:	lea    rax,[rsp+0x40]
   14000dc81:	mov    rdx,rbx
   14000dc84:	mov    rcx,rdi
   14000dc87:	mov    BYTE PTR [rsp+0x28],0x0
   14000dc8c:	mov    QWORD PTR [rsp+0x20],rax
   14000dc91:	call   0x14000d9bc
   14000dc96:	mov    rcx,QWORD PTR [rsp+0x70]
   14000dc9b:	xor    rcx,rsp
   14000dc9e:	call   0x14000d0a0
   14000dca3:	add    rsp,0x88
   14000dcaa:	pop    rdi
   14000dcab:	pop    rsi
   14000dcac:	pop    rbp
   14000dcad:	pop    rbx
   14000dcae:	ret    
   14000dcaf:	int3   
   14000dcb0:	sub    rsp,0x38
   14000dcb4:	and    QWORD PTR [rsp+0x20],0x0
   14000dcba:	call   0x14000de28
   14000dcbf:	add    rsp,0x38
   14000dcc3:	ret    
   14000dcc4:	mov    rax,rsp
   14000dcc7:	mov    QWORD PTR [rax+0x8],rbx
   14000dccb:	mov    QWORD PTR [rax+0x10],rbp
   14000dccf:	mov    QWORD PTR [rax+0x18],rsi
   14000dcd3:	mov    QWORD PTR [rax+0x20],rdi
   14000dcd7:	push   r14
   14000dcd9:	sub    rsp,0x40
   14000dcdd:	mov    ebx,DWORD PTR [r9+0x4]
   14000dce1:	mov    rsi,rdx
   14000dce4:	mov    rdx,QWORD PTR [rsp+0x78]
   14000dce9:	mov    rdi,rcx
   14000dcec:	lea    rcx,[rax-0x28]
   14000dcf0:	mov    rbp,r9
   14000dcf3:	dec    ebx
   14000dcf5:	mov    r14d,r8d
   14000dcf8:	call   0x14000a000
   14000dcfd:	test   rdi,rdi
   14000dd00:	je     0x14000dd07
   14000dd02:	test   rsi,rsi
   14000dd05:	jne    0x14000dd1d
   14000dd07:	call   0x1400095b8
   14000dd0c:	mov    ebx,0x16
   14000dd11:	mov    DWORD PTR [rax],ebx
   14000dd13:	call   0x140008628
   14000dd18:	jmp    0x14000ddf5
   14000dd1d:	cmp    BYTE PTR [rsp+0x70],0x0
   14000dd22:	je     0x14000dd3e
   14000dd24:	cmp    ebx,r14d
   14000dd27:	jne    0x14000dd3e
   14000dd29:	xor    eax,eax
   14000dd2b:	cmp    DWORD PTR [rbp+0x0],0x2d
   14000dd2f:	movsxd rcx,ebx
   14000dd32:	sete   al
   14000dd35:	add    rax,rdi
   14000dd38:	mov    WORD PTR [rcx+rax*1],0x30
   14000dd3e:	cmp    DWORD PTR [rbp+0x0],0x2d
   14000dd42:	jne    0x14000dd4a
   14000dd44:	mov    BYTE PTR [rdi],0x2d
   14000dd47:	inc    rdi
   14000dd4a:	cmp    DWORD PTR [rbp+0x4],0x0
   14000dd4e:	jg     0x14000dd70
   14000dd50:	mov    rcx,rdi
   14000dd53:	call   0x140007730
   14000dd58:	lea    rcx,[rdi+0x1]
   14000dd5c:	mov    rdx,rdi
   14000dd5f:	lea    r8,[rax+0x1]
   14000dd63:	call   0x1400056d0
   14000dd68:	mov    BYTE PTR [rdi],0x30
   14000dd6b:	inc    rdi
   14000dd6e:	jmp    0x14000dd77
   14000dd70:	movsxd rax,DWORD PTR [rbp+0x4]
   14000dd74:	add    rdi,rax
   14000dd77:	test   r14d,r14d
   14000dd7a:	jle    0x14000ddf3
   14000dd7c:	mov    rcx,rdi
   14000dd7f:	lea    rsi,[rdi+0x1]
   14000dd83:	call   0x140007730
   14000dd88:	mov    rdx,rdi
   14000dd8b:	mov    rcx,rsi
   14000dd8e:	lea    r8,[rax+0x1]
   14000dd92:	call   0x1400056d0
   14000dd97:	mov    rax,QWORD PTR [rsp+0x20]
   14000dd9c:	mov    rcx,QWORD PTR [rax+0xf0]
   14000dda3:	mov    rax,QWORD PTR [rcx]
   14000dda6:	mov    cl,BYTE PTR [rax]
   14000dda8:	mov    BYTE PTR [rdi],cl
   14000ddaa:	mov    ebx,DWORD PTR [rbp+0x4]
   14000ddad:	test   ebx,ebx
   14000ddaf:	jns    0x14000ddf3
   14000ddb1:	neg    ebx
   14000ddb3:	cmp    BYTE PTR [rsp+0x70],0x0
   14000ddb8:	jne    0x14000ddc5
   14000ddba:	mov    eax,ebx
   14000ddbc:	mov    ebx,r14d
   14000ddbf:	cmp    r14d,eax
   14000ddc2:	cmovge ebx,eax
   14000ddc5:	test   ebx,ebx
   14000ddc7:	je     0x14000dde3
   14000ddc9:	mov    rcx,rsi
   14000ddcc:	call   0x140007730
   14000ddd1:	movsxd rcx,ebx
   14000ddd4:	mov    rdx,rsi
   14000ddd7:	lea    r8,[rax+0x1]
   14000dddb:	add    rcx,rsi
   14000ddde:	call   0x1400056d0
   14000dde3:	movsxd r8,ebx
   14000dde6:	mov    edx,0x30
   14000ddeb:	mov    rcx,rsi
   14000ddee:	call   0x140007150
   14000ddf3:	xor    ebx,ebx
   14000ddf5:	cmp    BYTE PTR [rsp+0x38],0x0
   14000ddfa:	je     0x14000de08
   14000ddfc:	mov    rcx,QWORD PTR [rsp+0x30]
   14000de01:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14000de08:	mov    rbp,QWORD PTR [rsp+0x58]
   14000de0d:	mov    rsi,QWORD PTR [rsp+0x60]
   14000de12:	mov    rdi,QWORD PTR [rsp+0x68]
   14000de17:	mov    eax,ebx
   14000de19:	mov    rbx,QWORD PTR [rsp+0x50]
   14000de1e:	add    rsp,0x40
   14000de22:	pop    r14
   14000de24:	ret    
   14000de25:	int3   
   14000de26:	int3   
   14000de27:	int3   
   14000de28:	rex push rbx
   14000de2a:	push   rbp
   14000de2b:	push   rsi
   14000de2c:	push   rdi
   14000de2d:	sub    rsp,0x78
   14000de31:	mov    rax,QWORD PTR [rip+0x28c08]        # 0x140036a40
   14000de38:	xor    rax,rsp
   14000de3b:	mov    QWORD PTR [rsp+0x60],rax
   14000de40:	mov    rcx,QWORD PTR [rcx]
   14000de43:	mov    rbx,r8
   14000de46:	mov    rdi,rdx
   14000de49:	mov    esi,r9d
   14000de4c:	mov    ebp,0x16
   14000de51:	lea    r8,[rsp+0x48]
   14000de56:	lea    rdx,[rsp+0x30]
   14000de5b:	mov    r9d,ebp
   14000de5e:	call   0x140019958
   14000de63:	test   rdi,rdi
   14000de66:	jne    0x14000de78
   14000de68:	call   0x1400095b8
   14000de6d:	mov    DWORD PTR [rax],ebp
   14000de6f:	call   0x140008628
   14000de74:	mov    eax,ebp
   14000de76:	jmp    0x14000dee3
   14000de78:	test   rbx,rbx
   14000de7b:	je     0x14000de68
   14000de7d:	or     rdx,0xffffffffffffffff
   14000de81:	cmp    rbx,rdx
   14000de84:	je     0x14000de96
   14000de86:	xor    eax,eax
   14000de88:	cmp    DWORD PTR [rsp+0x30],0x2d
   14000de8d:	mov    rdx,rbx
   14000de90:	sete   al
   14000de93:	sub    rdx,rax
   14000de96:	mov    r8d,DWORD PTR [rsp+0x34]
   14000de9b:	xor    ecx,ecx
   14000de9d:	lea    r9,[rsp+0x30]
   14000dea2:	add    r8d,esi
   14000dea5:	cmp    DWORD PTR [rsp+0x30],0x2d
   14000deaa:	sete   cl
   14000dead:	add    rcx,rdi
   14000deb0:	call   0x140019534
   14000deb5:	test   eax,eax
   14000deb7:	je     0x14000debe
   14000deb9:	mov    BYTE PTR [rdi],0x0
   14000debc:	jmp    0x14000dee3
   14000debe:	mov    rax,QWORD PTR [rsp+0xc0]
   14000dec6:	lea    r9,[rsp+0x30]
   14000decb:	mov    r8d,esi
   14000dece:	mov    QWORD PTR [rsp+0x28],rax
   14000ded3:	mov    rdx,rbx
   14000ded6:	mov    rcx,rdi
   14000ded9:	mov    BYTE PTR [rsp+0x20],0x0
   14000dede:	call   0x14000dcc4
   14000dee3:	mov    rcx,QWORD PTR [rsp+0x60]
   14000dee8:	xor    rcx,rsp
   14000deeb:	call   0x14000d0a0
   14000def0:	add    rsp,0x78
   14000def4:	pop    rdi
   14000def5:	pop    rsi
   14000def6:	pop    rbp
   14000def7:	pop    rbx
   14000def8:	ret    
   14000def9:	int3   
   14000defa:	int3   
   14000defb:	int3   
   14000defc:	sub    rsp,0x38
   14000df00:	mov    eax,DWORD PTR [rsp+0x60]
   14000df04:	and    QWORD PTR [rsp+0x28],0x0
   14000df0a:	mov    DWORD PTR [rsp+0x20],eax
   14000df0e:	call   0x14000df18
   14000df13:	add    rsp,0x38
   14000df17:	ret    
   14000df18:	rex push rbx
   14000df1a:	push   rbp
   14000df1b:	push   rsi
   14000df1c:	push   rdi
   14000df1d:	push   r14
   14000df1f:	sub    rsp,0x80
   14000df26:	mov    rax,QWORD PTR [rip+0x28b13]        # 0x140036a40
   14000df2d:	xor    rax,rsp
   14000df30:	mov    QWORD PTR [rsp+0x70],rax
   14000df35:	mov    rcx,QWORD PTR [rcx]
   14000df38:	mov    rdi,r8
   14000df3b:	mov    rsi,rdx
   14000df3e:	mov    ebp,r9d
   14000df41:	mov    ebx,0x16
   14000df46:	lea    r8,[rsp+0x58]
   14000df4b:	lea    rdx,[rsp+0x40]
   14000df50:	mov    r9d,ebx
   14000df53:	call   0x140019958
   14000df58:	test   rsi,rsi
   14000df5b:	jne    0x14000df70
   14000df5d:	call   0x1400095b8
   14000df62:	mov    DWORD PTR [rax],ebx
   14000df64:	call   0x140008628
   14000df69:	mov    eax,ebx
   14000df6b:	jmp    0x14000e031
   14000df70:	test   rdi,rdi
   14000df73:	je     0x14000df5d
   14000df75:	mov    r14d,DWORD PTR [rsp+0x44]
   14000df7a:	xor    eax,eax
   14000df7c:	dec    r14d
   14000df7f:	cmp    DWORD PTR [rsp+0x40],0x2d
   14000df84:	sete   al
   14000df87:	or     rdx,0xffffffffffffffff
   14000df8b:	lea    rbx,[rax+rsi*1]
   14000df8f:	cmp    rdi,rdx
   14000df92:	je     0x14000df9a
   14000df94:	mov    rdx,rdi
   14000df97:	sub    rdx,rax
   14000df9a:	lea    r9,[rsp+0x40]
   14000df9f:	mov    r8d,ebp
   14000dfa2:	mov    rcx,rbx
   14000dfa5:	call   0x140019534
   14000dfaa:	test   eax,eax
   14000dfac:	je     0x14000dfb3
   14000dfae:	mov    BYTE PTR [rsi],0x0
   14000dfb1:	jmp    0x14000e031
   14000dfb3:	mov    eax,DWORD PTR [rsp+0x44]
   14000dfb7:	dec    eax
   14000dfb9:	cmp    r14d,eax
   14000dfbc:	setl   cl
   14000dfbf:	cmp    eax,0xfffffffc
   14000dfc2:	jl     0x14000dfff
   14000dfc4:	cmp    eax,ebp
   14000dfc6:	jge    0x14000dfff
   14000dfc8:	test   cl,cl
   14000dfca:	je     0x14000dfd8
   14000dfcc:	mov    al,BYTE PTR [rbx]
   14000dfce:	inc    rbx
   14000dfd1:	test   al,al
   14000dfd3:	jne    0x14000dfcc
   14000dfd5:	mov    BYTE PTR [rbx-0x2],al
   14000dfd8:	mov    rax,QWORD PTR [rsp+0xd8]
   14000dfe0:	lea    r9,[rsp+0x40]
   14000dfe5:	mov    r8d,ebp
   14000dfe8:	mov    QWORD PTR [rsp+0x28],rax
   14000dfed:	mov    rdx,rdi
   14000dff0:	mov    rcx,rsi
   14000dff3:	mov    BYTE PTR [rsp+0x20],0x1
   14000dff8:	call   0x14000dcc4
   14000dffd:	jmp    0x14000e031
   14000dfff:	mov    rax,QWORD PTR [rsp+0xd8]
   14000e007:	mov    r9d,DWORD PTR [rsp+0xd0]
   14000e00f:	mov    r8d,ebp
   14000e012:	mov    QWORD PTR [rsp+0x30],rax
   14000e017:	lea    rax,[rsp+0x40]
   14000e01c:	mov    rdx,rdi
   14000e01f:	mov    rcx,rsi
   14000e022:	mov    BYTE PTR [rsp+0x28],0x1
   14000e027:	mov    QWORD PTR [rsp+0x20],rax
   14000e02c:	call   0x14000d9bc
   14000e031:	mov    rcx,QWORD PTR [rsp+0x70]
   14000e036:	xor    rcx,rsp
   14000e039:	call   0x14000d0a0
   14000e03e:	add    rsp,0x80
   14000e045:	pop    r14
   14000e047:	pop    rdi
   14000e048:	pop    rsi
   14000e049:	pop    rbp
   14000e04a:	pop    rbx
   14000e04b:	ret    
   14000e04c:	xor    edx,edx
   14000e04e:	jmp    0x14000e054
   14000e053:	int3   
   14000e054:	rex push rbx
   14000e056:	sub    rsp,0x40
   14000e05a:	mov    rbx,rcx
   14000e05d:	lea    rcx,[rsp+0x20]
   14000e062:	call   0x14000a000
   14000e067:	mov    cl,BYTE PTR [rbx]
   14000e069:	mov    r8,QWORD PTR [rsp+0x20]
   14000e06e:	test   cl,cl
   14000e070:	je     0x14000e08b
   14000e072:	mov    rax,QWORD PTR [r8+0xf0]
   14000e079:	mov    rdx,QWORD PTR [rax]
   14000e07c:	mov    al,BYTE PTR [rdx]
   14000e07e:	cmp    cl,al
   14000e080:	je     0x14000e08b
   14000e082:	inc    rbx
   14000e085:	mov    cl,BYTE PTR [rbx]
   14000e087:	test   cl,cl
   14000e089:	jne    0x14000e07e
   14000e08b:	mov    al,BYTE PTR [rbx]
   14000e08d:	inc    rbx
   14000e090:	test   al,al
   14000e092:	je     0x14000e0d1
   14000e094:	jmp    0x14000e09f
   14000e096:	sub    al,0x45
   14000e098:	test   al,0xdf
   14000e09a:	je     0x14000e0a5
   14000e09c:	inc    rbx
   14000e09f:	mov    al,BYTE PTR [rbx]
   14000e0a1:	test   al,al
   14000e0a3:	jne    0x14000e096
   14000e0a5:	mov    rdx,rbx
   14000e0a8:	dec    rbx
   14000e0ab:	cmp    BYTE PTR [rbx],0x30
   14000e0ae:	je     0x14000e0a8
   14000e0b0:	mov    rax,QWORD PTR [r8+0xf0]
   14000e0b7:	mov    rcx,QWORD PTR [rax]
   14000e0ba:	mov    al,BYTE PTR [rcx]
   14000e0bc:	cmp    BYTE PTR [rbx],al
   14000e0be:	jne    0x14000e0c3
   14000e0c0:	dec    rbx
   14000e0c3:	mov    al,BYTE PTR [rdx]
   14000e0c5:	inc    rbx
   14000e0c8:	inc    rdx
   14000e0cb:	mov    BYTE PTR [rbx],al
   14000e0cd:	test   al,al
   14000e0cf:	jne    0x14000e0c3
   14000e0d1:	cmp    BYTE PTR [rsp+0x38],0x0
   14000e0d6:	je     0x14000e0e4
   14000e0d8:	mov    rax,QWORD PTR [rsp+0x30]
   14000e0dd:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14000e0e4:	add    rsp,0x40
   14000e0e8:	pop    rbx
   14000e0e9:	ret    
   14000e0ea:	int3   
   14000e0eb:	int3   
   14000e0ec:	xor    r9d,r9d
   14000e0ef:	jmp    0x14000e0f4
   14000e0f4:	rex push rbx
   14000e0f6:	sub    rsp,0x30
   14000e0fa:	mov    rax,r8
   14000e0fd:	mov    rbx,rdx
   14000e100:	mov    r8,r9
   14000e103:	mov    rdx,rax
   14000e106:	test   ecx,ecx
   14000e108:	je     0x14000e11e
   14000e10a:	lea    rcx,[rsp+0x20]
   14000e10f:	call   0x1400196d8
   14000e114:	mov    rax,QWORD PTR [rsp+0x20]
   14000e119:	mov    QWORD PTR [rbx],rax
   14000e11c:	jmp    0x14000e12e
   14000e11e:	lea    rcx,[rsp+0x40]
   14000e123:	call   0x1400197ac
   14000e128:	mov    eax,DWORD PTR [rsp+0x40]
   14000e12c:	mov    DWORD PTR [rbx],eax
   14000e12e:	add    rsp,0x30
   14000e132:	pop    rbx
   14000e133:	ret    
   14000e134:	xor    edx,edx
   14000e136:	jmp    0x14000e13c
   14000e13b:	int3   
   14000e13c:	rex push rbx
   14000e13e:	sub    rsp,0x40
   14000e142:	mov    rbx,rcx
   14000e145:	lea    rcx,[rsp+0x20]
   14000e14a:	call   0x14000a000
   14000e14f:	movsx  ecx,BYTE PTR [rbx]
   14000e152:	call   0x1400193d0
   14000e157:	cmp    eax,0x65
   14000e15a:	je     0x14000e16b
   14000e15c:	inc    rbx
   14000e15f:	movzx  ecx,BYTE PTR [rbx]
   14000e162:	call   0x140018e8c
   14000e167:	test   eax,eax
   14000e169:	jne    0x14000e15c
   14000e16b:	movsx  ecx,BYTE PTR [rbx]
   14000e16e:	call   0x1400193d0
   14000e173:	cmp    eax,0x78
   14000e176:	jne    0x14000e17c
   14000e178:	add    rbx,0x2
   14000e17c:	mov    rax,QWORD PTR [rsp+0x20]
   14000e181:	mov    dl,BYTE PTR [rbx]
   14000e183:	mov    rcx,QWORD PTR [rax+0xf0]
   14000e18a:	mov    rax,QWORD PTR [rcx]
   14000e18d:	mov    cl,BYTE PTR [rax]
   14000e18f:	mov    BYTE PTR [rbx],cl
   14000e191:	inc    rbx
   14000e194:	mov    al,BYTE PTR [rbx]
   14000e196:	mov    BYTE PTR [rbx],dl
   14000e198:	mov    dl,al
   14000e19a:	mov    al,BYTE PTR [rbx]
   14000e19c:	inc    rbx
   14000e19f:	test   al,al
   14000e1a1:	jne    0x14000e194
   14000e1a3:	cmp    BYTE PTR [rsp+0x38],al
   14000e1a7:	je     0x14000e1b5
   14000e1a9:	mov    rax,QWORD PTR [rsp+0x30]
   14000e1ae:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14000e1b5:	add    rsp,0x40
   14000e1b9:	pop    rbx
   14000e1ba:	ret    
   14000e1bb:	int3   
   14000e1bc:	movsd  xmm0,QWORD PTR [rcx]
   14000e1c0:	xor    eax,eax
   14000e1c2:	comisd xmm0,QWORD PTR [rip+0x1c7a6]        # 0x14002a970
   14000e1ca:	setae  al
   14000e1cd:	ret    
   14000e1ce:	int3   
   14000e1cf:	int3   
   14000e1d0:	test   edx,edx
   14000e1d2:	je     0x14000e203
   14000e1d4:	mov    QWORD PTR [rsp+0x8],rbx
   14000e1d9:	push   rdi
   14000e1da:	sub    rsp,0x20
   14000e1de:	movsxd rbx,edx
   14000e1e1:	mov    rdi,rcx
   14000e1e4:	call   0x140007730
   14000e1e9:	lea    rcx,[rdi+rbx*1]
   14000e1ed:	lea    r8,[rax+0x1]
   14000e1f1:	mov    rdx,rdi
   14000e1f4:	call   0x1400056d0
   14000e1f9:	mov    rbx,QWORD PTR [rsp+0x30]
   14000e1fe:	add    rsp,0x20
   14000e202:	pop    rdi
   14000e203:	ret    
   14000e204:	sub    rsp,0x28
   14000e208:	mov    rax,QWORD PTR [rcx]
   14000e20b:	cmp    DWORD PTR [rax],0xe06d7363
   14000e211:	jne    0x14000e22f
   14000e213:	cmp    DWORD PTR [rax+0x18],0x4
   14000e217:	jne    0x14000e22f
   14000e219:	mov    ecx,DWORD PTR [rax+0x20]
   14000e21c:	lea    eax,[rcx-0x19930520]
   14000e222:	cmp    eax,0x2
   14000e225:	jbe    0x14000e236
   14000e227:	cmp    ecx,0x1994000
   14000e22d:	je     0x14000e236
   14000e22f:	xor    eax,eax
   14000e231:	add    rsp,0x28
   14000e235:	ret    
   14000e236:	call   0x14000984c
   14000e23b:	int3   
   14000e23c:	sub    rsp,0x28
   14000e240:	lea    rcx,[rip+0xffffffffffffffbd]        # 0x14000e204
   14000e247:	call   0x1400091f8
   14000e24c:	xor    eax,eax
   14000e24e:	add    rsp,0x28
   14000e252:	ret    
   14000e253:	int3   
   14000e254:	mov    QWORD PTR [rsp+0x8],rbx
   14000e259:	mov    QWORD PTR [rsp+0x10],rbp
   14000e25e:	mov    QWORD PTR [rsp+0x18],rsi
   14000e263:	push   rdi
   14000e264:	sub    rsp,0x20
   14000e268:	mov    rsi,rdx
   14000e26b:	mov    edi,ecx
   14000e26d:	call   0x14000b1b0
   14000e272:	xor    r9d,r9d
   14000e275:	mov    rbx,rax
   14000e278:	test   rax,rax
   14000e27b:	je     0x14000e409
   14000e281:	mov    rdx,QWORD PTR [rax+0xa0]
   14000e288:	mov    rcx,rdx
   14000e28b:	cmp    DWORD PTR [rcx],edi
   14000e28d:	je     0x14000e29f
   14000e28f:	lea    rax,[rdx+0xc0]
   14000e296:	add    rcx,0x10
   14000e29a:	cmp    rcx,rax
   14000e29d:	jb     0x14000e28b
   14000e29f:	lea    rax,[rdx+0xc0]
   14000e2a6:	cmp    rcx,rax
   14000e2a9:	jae    0x14000e2af
   14000e2ab:	cmp    DWORD PTR [rcx],edi
   14000e2ad:	je     0x14000e2b2
   14000e2af:	mov    rcx,r9
   14000e2b2:	test   rcx,rcx
   14000e2b5:	je     0x14000e409
   14000e2bb:	mov    r8,QWORD PTR [rcx+0x8]
   14000e2bf:	test   r8,r8
   14000e2c2:	je     0x14000e409
   14000e2c8:	cmp    r8,0x5
   14000e2cc:	jne    0x14000e2db
   14000e2ce:	mov    QWORD PTR [rcx+0x8],r9
   14000e2d2:	lea    eax,[r8-0x4]
   14000e2d6:	jmp    0x14000e40b
   14000e2db:	cmp    r8,0x1
   14000e2df:	jne    0x14000e2e9
   14000e2e1:	or     eax,0xffffffff
   14000e2e4:	jmp    0x14000e40b
   14000e2e9:	mov    rbp,QWORD PTR [rbx+0xa8]
   14000e2f0:	mov    QWORD PTR [rbx+0xa8],rsi
   14000e2f7:	cmp    DWORD PTR [rcx+0x4],0x8
   14000e2fb:	jne    0x14000e3f3
   14000e301:	mov    edx,0x30
   14000e306:	mov    rax,QWORD PTR [rbx+0xa0]
   14000e30d:	add    rdx,0x10
   14000e311:	mov    QWORD PTR [rdx+rax*1-0x8],r9
   14000e316:	cmp    rdx,0xc0
   14000e31d:	jl     0x14000e306
   14000e31f:	cmp    DWORD PTR [rcx],0xc000008e
   14000e325:	mov    edi,DWORD PTR [rbx+0xb0]
   14000e32b:	jne    0x14000e33c
   14000e32d:	mov    DWORD PTR [rbx+0xb0],0x83
   14000e337:	jmp    0x14000e3dd
   14000e33c:	cmp    DWORD PTR [rcx],0xc0000090
   14000e342:	jne    0x14000e353
   14000e344:	mov    DWORD PTR [rbx+0xb0],0x81
   14000e34e:	jmp    0x14000e3dd
   14000e353:	cmp    DWORD PTR [rcx],0xc0000091
   14000e359:	jne    0x14000e367
   14000e35b:	mov    DWORD PTR [rbx+0xb0],0x84
   14000e365:	jmp    0x14000e3dd
   14000e367:	cmp    DWORD PTR [rcx],0xc0000093
   14000e36d:	jne    0x14000e37b
   14000e36f:	mov    DWORD PTR [rbx+0xb0],0x85
   14000e379:	jmp    0x14000e3dd
   14000e37b:	cmp    DWORD PTR [rcx],0xc000008d
   14000e381:	jne    0x14000e38f
   14000e383:	mov    DWORD PTR [rbx+0xb0],0x82
   14000e38d:	jmp    0x14000e3dd
   14000e38f:	cmp    DWORD PTR [rcx],0xc000008f
   14000e395:	jne    0x14000e3a3
   14000e397:	mov    DWORD PTR [rbx+0xb0],0x86
   14000e3a1:	jmp    0x14000e3dd
   14000e3a3:	cmp    DWORD PTR [rcx],0xc0000092
   14000e3a9:	jne    0x14000e3b7
   14000e3ab:	mov    DWORD PTR [rbx+0xb0],0x8a
   14000e3b5:	jmp    0x14000e3dd
   14000e3b7:	cmp    DWORD PTR [rcx],0xc00002b5
   14000e3bd:	jne    0x14000e3cb
   14000e3bf:	mov    DWORD PTR [rbx+0xb0],0x8d
   14000e3c9:	jmp    0x14000e3dd
   14000e3cb:	cmp    DWORD PTR [rcx],0xc00002b4
   14000e3d1:	jne    0x14000e3dd
   14000e3d3:	mov    DWORD PTR [rbx+0xb0],0x8e
   14000e3dd:	mov    edx,DWORD PTR [rbx+0xb0]
   14000e3e3:	mov    ecx,0x8
   14000e3e8:	call   r8
   14000e3eb:	mov    DWORD PTR [rbx+0xb0],edi
   14000e3f1:	jmp    0x14000e3fd
   14000e3f3:	mov    QWORD PTR [rcx+0x8],r9
   14000e3f7:	mov    ecx,DWORD PTR [rcx+0x4]
   14000e3fa:	call   r8
   14000e3fd:	mov    QWORD PTR [rbx+0xa8],rbp
   14000e404:	jmp    0x14000e2e1
   14000e409:	xor    eax,eax
   14000e40b:	mov    rbx,QWORD PTR [rsp+0x30]
   14000e410:	mov    rbp,QWORD PTR [rsp+0x38]
   14000e415:	mov    rsi,QWORD PTR [rsp+0x40]
   14000e41a:	add    rsp,0x20
   14000e41e:	pop    rdi
   14000e41f:	ret    
   14000e420:	mov    eax,0xe06d7363
   14000e425:	cmp    ecx,eax
   14000e427:	jne    0x14000e430
   14000e429:	mov    ecx,eax
   14000e42b:	jmp    0x14000e254
   14000e430:	xor    eax,eax
   14000e432:	ret    
   14000e433:	int3   
   14000e434:	mov    r9d,ecx
   14000e437:	mov    rax,rdx
   14000e43a:	cmp    DWORD PTR [rax],ecx
   14000e43c:	je     0x14000e44e
   14000e43e:	lea    r8,[rdx+0xc0]
   14000e445:	add    rax,0x10
   14000e449:	cmp    rax,r8
   14000e44c:	jb     0x14000e43a
   14000e44e:	lea    rcx,[rdx+0xc0]
   14000e455:	cmp    rax,rcx
   14000e458:	jae    0x14000e45f
   14000e45a:	cmp    DWORD PTR [rax],r9d
   14000e45d:	je     0x14000e461
   14000e45f:	xor    eax,eax
   14000e461:	ret    
   14000e462:	int3   
   14000e463:	int3   
   14000e464:	mov    rax,rsp
   14000e467:	mov    QWORD PTR [rax+0x8],rbx
   14000e46b:	mov    QWORD PTR [rax+0x10],rsi
   14000e46f:	mov    QWORD PTR [rax+0x18],rdi
   14000e473:	mov    QWORD PTR [rax+0x20],r12
   14000e477:	push   r13
   14000e479:	push   r14
   14000e47b:	push   r15
   14000e47d:	sub    rsp,0xc0
   14000e484:	mov    QWORD PTR [rsp+0x48],rsp
   14000e489:	mov    ecx,0xb
   14000e48e:	call   0x140008760
   14000e493:	nop
   14000e494:	mov    edi,0x58
   14000e499:	mov    edx,edi
   14000e49b:	lea    r13d,[rdi-0x38]
   14000e49f:	mov    ecx,r13d
   14000e4a2:	call   0x140007ed4
   14000e4a7:	mov    rcx,rax
   14000e4aa:	mov    QWORD PTR [rsp+0x28],rax
   14000e4af:	xor    r12d,r12d
   14000e4b2:	test   rax,rax
   14000e4b5:	jne    0x14000e4d0
   14000e4b7:	lea    rdx,[rip+0xa]        # 0x14000e4c8
   14000e4be:	mov    rcx,rsp
   14000e4c1:	call   0x14000f840
   14000e4c6:	nop
   14000e4c7:	nop
   14000e4c8:	or     eax,0xffffffff
   14000e4cb:	jmp    0x14000e76f
   14000e4d0:	mov    QWORD PTR [rip+0x2a1b9],rax        # 0x140038690
   14000e4d7:	mov    DWORD PTR [rip+0x2bb66],r13d        # 0x14003a044
   14000e4de:	add    rax,0xb00
   14000e4e4:	cmp    rcx,rax
   14000e4e7:	jae    0x14000e522
   14000e4e9:	mov    WORD PTR [rcx+0x8],0xa00
   14000e4ef:	or     QWORD PTR [rcx],0xffffffffffffffff
   14000e4f3:	mov    DWORD PTR [rcx+0xc],r12d
   14000e4f7:	and    BYTE PTR [rcx+0x38],0x80
   14000e4fb:	mov    al,BYTE PTR [rcx+0x38]
   14000e4fe:	and    al,0x7f
   14000e500:	mov    BYTE PTR [rcx+0x38],al
   14000e503:	mov    WORD PTR [rcx+0x39],0xa0a
   14000e509:	mov    DWORD PTR [rcx+0x50],r12d
   14000e50d:	mov    BYTE PTR [rcx+0x4c],r12b
   14000e511:	add    rcx,rdi
   14000e514:	mov    QWORD PTR [rsp+0x28],rcx
   14000e519:	mov    rax,QWORD PTR [rip+0x2a170]        # 0x140038690
   14000e520:	jmp    0x14000e4de
   14000e522:	lea    rcx,[rsp+0x50]
   14000e527:	call   QWORD PTR [rip+0x18c6b]        # 0x140027198
   14000e52d:	cmp    WORD PTR [rsp+0x92],r12w
   14000e536:	je     0x14000e67e
   14000e53c:	mov    rax,QWORD PTR [rsp+0x98]
   14000e544:	test   rax,rax
   14000e547:	je     0x14000e67e
   14000e54d:	lea    r14,[rax+0x4]
   14000e551:	mov    QWORD PTR [rsp+0x38],r14
   14000e556:	movsxd rsi,DWORD PTR [rax]
   14000e559:	add    rsi,r14
   14000e55c:	mov    QWORD PTR [rsp+0x40],rsi
   14000e561:	mov    r15d,0x800
   14000e567:	cmp    DWORD PTR [rax],r15d
   14000e56a:	cmovl  r15d,DWORD PTR [rax]
   14000e56e:	mov    ebx,0x1
   14000e573:	mov    DWORD PTR [rsp+0x30],ebx
   14000e577:	cmp    DWORD PTR [rip+0x2bac6],r15d        # 0x14003a044
   14000e57e:	jge    0x14000e5f3
   14000e580:	mov    rdx,rdi
   14000e583:	mov    rcx,r13
   14000e586:	call   0x140007ed4
   14000e58b:	mov    rcx,rax
   14000e58e:	mov    QWORD PTR [rsp+0x28],rax
   14000e593:	test   rax,rax
   14000e596:	jne    0x14000e5a1
   14000e598:	mov    r15d,DWORD PTR [rip+0x2baa5]        # 0x14003a044
   14000e59f:	jmp    0x14000e5f3
   14000e5a1:	movsxd rdx,ebx
   14000e5a4:	lea    r8,[rip+0x2a0e5]        # 0x140038690
   14000e5ab:	mov    QWORD PTR [r8+rdx*8],rax
   14000e5af:	add    DWORD PTR [rip+0x2ba8e],r13d        # 0x14003a044
   14000e5b6:	mov    rax,QWORD PTR [r8+rdx*8]
   14000e5ba:	add    rax,0xb00
   14000e5c0:	cmp    rcx,rax
   14000e5c3:	jae    0x14000e5ef
   14000e5c5:	mov    WORD PTR [rcx+0x8],0xa00
   14000e5cb:	or     QWORD PTR [rcx],0xffffffffffffffff
   14000e5cf:	mov    DWORD PTR [rcx+0xc],r12d
   14000e5d3:	and    BYTE PTR [rcx+0x38],0x80
   14000e5d7:	mov    WORD PTR [rcx+0x39],0xa0a
   14000e5dd:	mov    DWORD PTR [rcx+0x50],r12d
   14000e5e1:	mov    BYTE PTR [rcx+0x4c],r12b
   14000e5e5:	add    rcx,rdi
   14000e5e8:	mov    QWORD PTR [rsp+0x28],rcx
   14000e5ed:	jmp    0x14000e5b6
   14000e5ef:	inc    ebx
   14000e5f1:	jmp    0x14000e573
   14000e5f3:	mov    edi,r12d
   14000e5f6:	mov    DWORD PTR [rsp+0x20],r12d
   14000e5fb:	lea    r13,[rip+0x2a08e]        # 0x140038690
   14000e602:	cmp    edi,r15d
   14000e605:	jge    0x14000e67e
   14000e607:	mov    rcx,QWORD PTR [rsi]
   14000e60a:	lea    rax,[rcx+0x2]
   14000e60e:	cmp    rax,0x1
   14000e612:	jbe    0x14000e665
   14000e614:	test   BYTE PTR [r14],0x1
   14000e618:	je     0x14000e665
   14000e61a:	test   BYTE PTR [r14],0x8
   14000e61e:	jne    0x14000e62a
   14000e620:	call   QWORD PTR [rip+0x18bfa]        # 0x140027220
   14000e626:	test   eax,eax
   14000e628:	je     0x14000e665
   14000e62a:	movsxd rcx,edi
   14000e62d:	mov    rax,rcx
   14000e630:	sar    rax,0x5
   14000e634:	and    ecx,0x1f
   14000e637:	imul   rbx,rcx,0x58
   14000e63b:	add    rbx,QWORD PTR [r13+rax*8+0x0]
   14000e640:	mov    QWORD PTR [rsp+0x28],rbx
   14000e645:	mov    rax,QWORD PTR [rsi]
   14000e648:	mov    QWORD PTR [rbx],rax
   14000e64b:	mov    al,BYTE PTR [r14]
   14000e64e:	mov    BYTE PTR [rbx+0x8],al
   14000e651:	lea    rcx,[rbx+0x10]
   14000e655:	xor    r8d,r8d
   14000e658:	mov    edx,0xfa0
   14000e65d:	call   0x140008d04
   14000e662:	inc    DWORD PTR [rbx+0xc]
   14000e665:	inc    edi
   14000e667:	mov    DWORD PTR [rsp+0x20],edi
   14000e66b:	inc    r14
   14000e66e:	mov    QWORD PTR [rsp+0x38],r14
   14000e673:	add    rsi,0x8
   14000e677:	mov    QWORD PTR [rsp+0x40],rsi
   14000e67c:	jmp    0x14000e602
   14000e67e:	mov    edi,r12d
   14000e681:	mov    DWORD PTR [rsp+0x20],r12d
   14000e686:	mov    r15,0xfffffffffffffffe
   14000e68d:	cmp    edi,0x3
   14000e690:	jge    0x14000e763
   14000e696:	movsxd rsi,edi
   14000e699:	imul   rbx,rsi,0x58
   14000e69d:	add    rbx,QWORD PTR [rip+0x29fec]        # 0x140038690
   14000e6a4:	mov    QWORD PTR [rsp+0x28],rbx
   14000e6a9:	mov    rax,QWORD PTR [rbx]
   14000e6ac:	add    rax,0x2
   14000e6b0:	cmp    rax,0x1
   14000e6b4:	jbe    0x14000e6c6
   14000e6b6:	movsx  eax,BYTE PTR [rbx+0x8]
   14000e6ba:	bts    eax,0x7
   14000e6be:	mov    BYTE PTR [rbx+0x8],al
   14000e6c1:	jmp    0x14000e758
   14000e6c6:	mov    BYTE PTR [rbx+0x8],0x81
   14000e6ca:	lea    eax,[rdi-0x1]
   14000e6cd:	neg    eax
   14000e6cf:	sbb    ecx,ecx
   14000e6d1:	add    ecx,0xfffffff5
   14000e6d4:	mov    eax,0xfffffff6
   14000e6d9:	test   edi,edi
   14000e6db:	cmove  ecx,eax
   14000e6de:	call   QWORD PTR [rip+0x18ad4]        # 0x1400271b8
   14000e6e4:	mov    r14,rax
   14000e6e7:	lea    rcx,[rax+0x1]
   14000e6eb:	cmp    rcx,0x1
   14000e6ef:	jbe    0x14000e737
   14000e6f1:	mov    rcx,rax
   14000e6f4:	call   QWORD PTR [rip+0x18b26]        # 0x140027220
   14000e6fa:	test   eax,eax
   14000e6fc:	je     0x14000e737
   14000e6fe:	mov    QWORD PTR [rbx],r14
   14000e701:	movzx  eax,al
   14000e704:	cmp    eax,0x2
   14000e707:	jne    0x14000e712
   14000e709:	movsx  eax,BYTE PTR [rbx+0x8]
   14000e70d:	or     eax,0x40
   14000e710:	jmp    0x14000e71e
   14000e712:	cmp    eax,0x3
   14000e715:	jne    0x14000e721
   14000e717:	movsx  eax,BYTE PTR [rbx+0x8]
   14000e71b:	or     eax,0x8
   14000e71e:	mov    BYTE PTR [rbx+0x8],al
   14000e721:	lea    rcx,[rbx+0x10]
   14000e725:	xor    r8d,r8d
   14000e728:	mov    edx,0xfa0
   14000e72d:	call   0x140008d04
   14000e732:	inc    DWORD PTR [rbx+0xc]
   14000e735:	jmp    0x14000e758
   14000e737:	movsx  eax,BYTE PTR [rbx+0x8]
   14000e73b:	or     eax,0x40
   14000e73e:	mov    BYTE PTR [rbx+0x8],al
   14000e741:	mov    QWORD PTR [rbx],r15
   14000e744:	mov    rax,QWORD PTR [rip+0x2a8e5]        # 0x140039030
   14000e74b:	test   rax,rax
   14000e74e:	je     0x14000e758
   14000e750:	mov    rax,QWORD PTR [rax+rsi*8]
   14000e754:	mov    DWORD PTR [rax+0x1c],r15d
   14000e758:	inc    edi
   14000e75a:	mov    DWORD PTR [rsp+0x20],edi
   14000e75e:	jmp    0x14000e68d
   14000e763:	mov    ecx,0xb
   14000e768:	call   0x14000897c
   14000e76d:	xor    eax,eax
   14000e76f:	lea    r11,[rsp+0xc0]
   14000e777:	mov    rbx,QWORD PTR [r11+0x20]
   14000e77b:	mov    rsi,QWORD PTR [r11+0x28]
   14000e77f:	mov    rdi,QWORD PTR [r11+0x30]
   14000e783:	mov    r12,QWORD PTR [r11+0x38]
   14000e787:	mov    rsp,r11
   14000e78a:	pop    r15
   14000e78c:	pop    r14
   14000e78e:	pop    r13
   14000e790:	ret    
   14000e791:	int3   
   14000e792:	int3   
   14000e793:	int3   
   14000e794:	mov    QWORD PTR [rsp+0x8],rbx
   14000e799:	mov    QWORD PTR [rsp+0x10],rsi
   14000e79e:	push   rdi
   14000e79f:	sub    rsp,0x20
   14000e7a3:	lea    rdi,[rip+0x29ee6]        # 0x140038690
   14000e7aa:	mov    esi,0x40
   14000e7af:	mov    rbx,QWORD PTR [rdi]
   14000e7b2:	test   rbx,rbx
   14000e7b5:	je     0x14000e7ee
   14000e7b7:	lea    rax,[rbx+0xb00]
   14000e7be:	jmp    0x14000e7dd
   14000e7c0:	cmp    DWORD PTR [rbx+0xc],0x0
   14000e7c4:	je     0x14000e7d0
   14000e7c6:	lea    rcx,[rbx+0x10]
   14000e7ca:	call   QWORD PTR [rip+0x18948]        # 0x140027118
   14000e7d0:	mov    rax,QWORD PTR [rdi]
   14000e7d3:	add    rbx,0x58
   14000e7d7:	add    rax,0xb00
   14000e7dd:	cmp    rbx,rax
   14000e7e0:	jb     0x14000e7c0
   14000e7e2:	mov    rcx,QWORD PTR [rdi]
   14000e7e5:	call   0x140006444
   14000e7ea:	and    QWORD PTR [rdi],0x0
   14000e7ee:	add    rdi,0x8
   14000e7f2:	dec    rsi
   14000e7f5:	jne    0x14000e7af
   14000e7f7:	mov    rbx,QWORD PTR [rsp+0x30]
   14000e7fc:	mov    rsi,QWORD PTR [rsp+0x38]
   14000e801:	add    rsp,0x20
   14000e805:	pop    rdi
   14000e806:	ret    
   14000e807:	int3   
   14000e808:	mov    QWORD PTR [rip+0x29511],rcx        # 0x140037d20
   14000e80f:	ret    
   14000e810:	mov    QWORD PTR [rsp+0x18],rbx
   14000e815:	mov    QWORD PTR [rsp+0x20],rsi
   14000e81a:	push   rdi
   14000e81b:	sub    rsp,0x30
   14000e81f:	cmp    DWORD PTR [rip+0x2b962],0x0        # 0x14003a188
   14000e826:	jne    0x14000e82d
   14000e828:	call   0x140009fd8
   14000e82d:	lea    rdi,[rip+0x2a05c]        # 0x140038890
   14000e834:	mov    r8d,0x104
   14000e83a:	xor    ecx,ecx
   14000e83c:	mov    rdx,rdi
   14000e83f:	mov    BYTE PTR [rip+0x2a14e],0x0        # 0x140038994
   14000e846:	call   QWORD PTR [rip+0x189dc]        # 0x140027228
   14000e84c:	mov    rbx,QWORD PTR [rip+0x2b915]        # 0x14003a168
   14000e853:	mov    QWORD PTR [rip+0x294c6],rdi        # 0x140037d20
   14000e85a:	test   rbx,rbx
   14000e85d:	je     0x14000e864
   14000e85f:	cmp    BYTE PTR [rbx],0x0
   14000e862:	jne    0x14000e867
   14000e864:	mov    rbx,rdi
   14000e867:	lea    rax,[rsp+0x48]
   14000e86c:	lea    r9,[rsp+0x40]
   14000e871:	xor    r8d,r8d
   14000e874:	xor    edx,edx
   14000e876:	mov    rcx,rbx
   14000e879:	mov    QWORD PTR [rsp+0x20],rax
   14000e87e:	call   0x14000e904
   14000e883:	movsxd rsi,DWORD PTR [rsp+0x40]
   14000e888:	movabs rcx,0x1fffffffffffffff
   14000e892:	cmp    rsi,rcx
   14000e895:	jae    0x14000e8f0
   14000e897:	movsxd rcx,DWORD PTR [rsp+0x48]
   14000e89c:	cmp    rcx,0xffffffffffffffff
   14000e8a0:	jae    0x14000e8f0
   14000e8a2:	lea    rdx,[rcx+rsi*8]
   14000e8a6:	cmp    rdx,rcx
   14000e8a9:	jb     0x14000e8f0
   14000e8ab:	mov    rcx,rdx
   14000e8ae:	call   0x140007f54
   14000e8b3:	mov    rdi,rax
   14000e8b6:	test   rax,rax
   14000e8b9:	je     0x14000e8f0
   14000e8bb:	lea    r8,[rax+rsi*8]
   14000e8bf:	lea    rax,[rsp+0x48]
   14000e8c4:	lea    r9,[rsp+0x40]
   14000e8c9:	mov    rdx,rdi
   14000e8cc:	mov    rcx,rbx
   14000e8cf:	mov    QWORD PTR [rsp+0x20],rax
   14000e8d4:	call   0x14000e904
   14000e8d9:	mov    eax,DWORD PTR [rsp+0x40]
   14000e8dd:	mov    QWORD PTR [rip+0x2941c],rdi        # 0x140037d00
   14000e8e4:	dec    eax
   14000e8e6:	mov    DWORD PTR [rip+0x29410],eax        # 0x140037cfc
   14000e8ec:	xor    eax,eax
   14000e8ee:	jmp    0x14000e8f3
   14000e8f0:	or     eax,0xffffffff
   14000e8f3:	mov    rbx,QWORD PTR [rsp+0x50]
   14000e8f8:	mov    rsi,QWORD PTR [rsp+0x58]
   14000e8fd:	add    rsp,0x30
   14000e901:	pop    rdi
   14000e902:	ret    
   14000e903:	int3   
   14000e904:	mov    rax,rsp
   14000e907:	mov    QWORD PTR [rax+0x8],rbx
   14000e90b:	mov    QWORD PTR [rax+0x10],rbp
   14000e90f:	mov    QWORD PTR [rax+0x18],rsi
   14000e913:	mov    QWORD PTR [rax+0x20],rdi
   14000e917:	push   r12
   14000e919:	push   r14
   14000e91b:	push   r15
   14000e91d:	sub    rsp,0x20
   14000e921:	mov    r14,QWORD PTR [rsp+0x60]
   14000e926:	mov    r12,r9
   14000e929:	mov    rdi,r8
   14000e92c:	and    DWORD PTR [r14],0x0
   14000e930:	mov    r15,rdx
   14000e933:	mov    rbx,rcx
   14000e936:	mov    DWORD PTR [r9],0x1
   14000e93d:	test   rdx,rdx
   14000e940:	je     0x14000e949
   14000e942:	mov    QWORD PTR [rdx],r8
   14000e945:	add    r15,0x8
   14000e949:	xor    ebp,ebp
   14000e94b:	cmp    BYTE PTR [rbx],0x22
   14000e94e:	jne    0x14000e961
   14000e950:	xor    eax,eax
   14000e952:	test   ebp,ebp
   14000e954:	mov    sil,0x22
   14000e957:	sete   al
   14000e95a:	inc    rbx
   14000e95d:	mov    ebp,eax
   14000e95f:	jmp    0x14000e998
   14000e961:	inc    DWORD PTR [r14]
   14000e964:	test   rdi,rdi
   14000e967:	je     0x14000e970
   14000e969:	mov    al,BYTE PTR [rbx]
   14000e96b:	mov    BYTE PTR [rdi],al
   14000e96d:	inc    rdi
   14000e970:	movzx  esi,BYTE PTR [rbx]
   14000e973:	inc    rbx
   14000e976:	mov    ecx,esi
   14000e978:	call   0x140019c94
   14000e97d:	test   eax,eax
   14000e97f:	je     0x14000e993
   14000e981:	inc    DWORD PTR [r14]
   14000e984:	test   rdi,rdi
   14000e987:	je     0x14000e990
   14000e989:	mov    al,BYTE PTR [rbx]
   14000e98b:	mov    BYTE PTR [rdi],al
   14000e98d:	inc    rdi
   14000e990:	inc    rbx
   14000e993:	test   sil,sil
   14000e996:	je     0x14000e9b3
   14000e998:	test   ebp,ebp
   14000e99a:	jne    0x14000e94b
   14000e99c:	cmp    sil,0x20
   14000e9a0:	je     0x14000e9a8
   14000e9a2:	cmp    sil,0x9
   14000e9a6:	jne    0x14000e94b
   14000e9a8:	test   rdi,rdi
   14000e9ab:	je     0x14000e9b6
   14000e9ad:	mov    BYTE PTR [rdi-0x1],0x0
   14000e9b1:	jmp    0x14000e9b6
   14000e9b3:	dec    rbx
   14000e9b6:	xor    esi,esi
   14000e9b8:	cmp    BYTE PTR [rbx],0x0
   14000e9bb:	je     0x14000ea9f
   14000e9c1:	cmp    BYTE PTR [rbx],0x20
   14000e9c4:	je     0x14000e9cb
   14000e9c6:	cmp    BYTE PTR [rbx],0x9
   14000e9c9:	jne    0x14000e9d0
   14000e9cb:	inc    rbx
   14000e9ce:	jmp    0x14000e9c1
   14000e9d0:	cmp    BYTE PTR [rbx],0x0
   14000e9d3:	je     0x14000ea9f
   14000e9d9:	test   r15,r15
   14000e9dc:	je     0x14000e9e5
   14000e9de:	mov    QWORD PTR [r15],rdi
   14000e9e1:	add    r15,0x8
   14000e9e5:	inc    DWORD PTR [r12]
   14000e9e9:	mov    edx,0x1
   14000e9ee:	xor    ecx,ecx
   14000e9f0:	jmp    0x14000e9f7
   14000e9f2:	inc    rbx
   14000e9f5:	inc    ecx
   14000e9f7:	cmp    BYTE PTR [rbx],0x5c
   14000e9fa:	je     0x14000e9f2
   14000e9fc:	cmp    BYTE PTR [rbx],0x22
   14000e9ff:	jne    0x14000ea36
   14000ea01:	test   dl,cl
   14000ea03:	jne    0x14000ea22
   14000ea05:	test   esi,esi
   14000ea07:	je     0x14000ea17
   14000ea09:	lea    rax,[rbx+0x1]
   14000ea0d:	cmp    BYTE PTR [rax],0x22
   14000ea10:	jne    0x14000ea17
   14000ea12:	mov    rbx,rax
   14000ea15:	jmp    0x14000ea22
   14000ea17:	xor    eax,eax
   14000ea19:	xor    edx,edx
   14000ea1b:	test   esi,esi
   14000ea1d:	sete   al
   14000ea20:	mov    esi,eax
   14000ea22:	shr    ecx,1
   14000ea24:	jmp    0x14000ea36
   14000ea26:	dec    ecx
   14000ea28:	test   rdi,rdi
   14000ea2b:	je     0x14000ea33
   14000ea2d:	mov    BYTE PTR [rdi],0x5c
   14000ea30:	inc    rdi
   14000ea33:	inc    DWORD PTR [r14]
   14000ea36:	test   ecx,ecx
   14000ea38:	jne    0x14000ea26
   14000ea3a:	mov    al,BYTE PTR [rbx]
   14000ea3c:	test   al,al
   14000ea3e:	je     0x14000ea8c
   14000ea40:	test   esi,esi
   14000ea42:	jne    0x14000ea4c
   14000ea44:	cmp    al,0x20
   14000ea46:	je     0x14000ea8c
   14000ea48:	cmp    al,0x9
   14000ea4a:	je     0x14000ea8c
   14000ea4c:	test   edx,edx
   14000ea4e:	je     0x14000ea84
   14000ea50:	movsx  ecx,al
   14000ea53:	call   0x140019c94
   14000ea58:	test   rdi,rdi
   14000ea5b:	je     0x14000ea77
   14000ea5d:	test   eax,eax
   14000ea5f:	je     0x14000ea6e
   14000ea61:	mov    al,BYTE PTR [rbx]
   14000ea63:	inc    rbx
   14000ea66:	mov    BYTE PTR [rdi],al
   14000ea68:	inc    rdi
   14000ea6b:	inc    DWORD PTR [r14]
   14000ea6e:	mov    al,BYTE PTR [rbx]
   14000ea70:	mov    BYTE PTR [rdi],al
   14000ea72:	inc    rdi
   14000ea75:	jmp    0x14000ea81
   14000ea77:	test   eax,eax
   14000ea79:	je     0x14000ea81
   14000ea7b:	inc    rbx
   14000ea7e:	inc    DWORD PTR [r14]
   14000ea81:	inc    DWORD PTR [r14]
   14000ea84:	inc    rbx
   14000ea87:	jmp    0x14000e9e9
   14000ea8c:	test   rdi,rdi
   14000ea8f:	je     0x14000ea97
   14000ea91:	mov    BYTE PTR [rdi],0x0
   14000ea94:	inc    rdi
   14000ea97:	inc    DWORD PTR [r14]
   14000ea9a:	jmp    0x14000e9b8
   14000ea9f:	test   r15,r15
   14000eaa2:	je     0x14000eaa8
   14000eaa4:	and    QWORD PTR [r15],0x0
   14000eaa8:	inc    DWORD PTR [r12]
   14000eaac:	mov    rbx,QWORD PTR [rsp+0x40]
   14000eab1:	mov    rbp,QWORD PTR [rsp+0x48]
   14000eab6:	mov    rsi,QWORD PTR [rsp+0x50]
   14000eabb:	mov    rdi,QWORD PTR [rsp+0x58]
   14000eac0:	add    rsp,0x20
   14000eac4:	pop    r15
   14000eac6:	pop    r14
   14000eac8:	pop    r12
   14000eaca:	ret    
   14000eacb:	int3   
   14000eacc:	mov    QWORD PTR [rsp+0x8],rbx
   14000ead1:	mov    QWORD PTR [rsp+0x10],rbp
   14000ead6:	mov    QWORD PTR [rsp+0x18],rsi
   14000eadb:	push   rdi
   14000eadc:	sub    rsp,0x30
   14000eae0:	cmp    DWORD PTR [rip+0x2b6a1],0x0        # 0x14003a188
   14000eae7:	jne    0x14000eaee
   14000eae9:	call   0x140009fd8
   14000eaee:	mov    rbx,QWORD PTR [rip+0x29263]        # 0x140037d58
   14000eaf5:	xor    edi,edi
   14000eaf7:	test   rbx,rbx
   14000eafa:	jne    0x14000eb18
   14000eafc:	or     eax,0xffffffff
   14000eaff:	jmp    0x14000ebb9
   14000eb04:	cmp    al,0x3d
   14000eb06:	je     0x14000eb0a
   14000eb08:	inc    edi
   14000eb0a:	mov    rcx,rbx
   14000eb0d:	call   0x140007730
   14000eb12:	inc    rbx
   14000eb15:	add    rbx,rax
   14000eb18:	mov    al,BYTE PTR [rbx]
   14000eb1a:	test   al,al
   14000eb1c:	jne    0x14000eb04
   14000eb1e:	lea    eax,[rdi+0x1]
   14000eb21:	mov    edx,0x8
   14000eb26:	movsxd rcx,eax
   14000eb29:	call   0x140007ed4
   14000eb2e:	mov    rdi,rax
   14000eb31:	mov    QWORD PTR [rip+0x291d8],rax        # 0x140037d10
   14000eb38:	test   rax,rax
   14000eb3b:	je     0x14000eafc
   14000eb3d:	mov    rbx,QWORD PTR [rip+0x29214]        # 0x140037d58
   14000eb44:	cmp    BYTE PTR [rbx],0x0
   14000eb47:	je     0x14000eb99
   14000eb49:	mov    rcx,rbx
   14000eb4c:	call   0x140007730
   14000eb51:	cmp    BYTE PTR [rbx],0x3d
   14000eb54:	lea    esi,[rax+0x1]
   14000eb57:	je     0x14000eb87
   14000eb59:	movsxd rbp,esi
   14000eb5c:	mov    edx,0x1
   14000eb61:	mov    rcx,rbp
   14000eb64:	call   0x140007ed4
   14000eb69:	mov    QWORD PTR [rdi],rax
   14000eb6c:	test   rax,rax
   14000eb6f:	je     0x14000ebce
   14000eb71:	mov    r8,rbx
   14000eb74:	mov    rdx,rbp
   14000eb77:	mov    rcx,rax
   14000eb7a:	call   0x14000ee64
   14000eb7f:	test   eax,eax
   14000eb81:	jne    0x14000ebe7
   14000eb83:	add    rdi,0x8
   14000eb87:	movsxd rax,esi
   14000eb8a:	add    rbx,rax
   14000eb8d:	cmp    BYTE PTR [rbx],0x0
   14000eb90:	jne    0x14000eb49
   14000eb92:	mov    rbx,QWORD PTR [rip+0x291bf]        # 0x140037d58
   14000eb99:	mov    rcx,rbx
   14000eb9c:	call   0x140006444
   14000eba1:	and    QWORD PTR [rip+0x291af],0x0        # 0x140037d58
   14000eba9:	and    QWORD PTR [rdi],0x0
   14000ebad:	mov    DWORD PTR [rip+0x2b5d5],0x1        # 0x14003a18c
   14000ebb7:	xor    eax,eax
   14000ebb9:	mov    rbx,QWORD PTR [rsp+0x40]
   14000ebbe:	mov    rbp,QWORD PTR [rsp+0x48]
   14000ebc3:	mov    rsi,QWORD PTR [rsp+0x50]
   14000ebc8:	add    rsp,0x30
   14000ebcc:	pop    rdi
   14000ebcd:	ret    
   14000ebce:	mov    rcx,QWORD PTR [rip+0x2913b]        # 0x140037d10
   14000ebd5:	call   0x140006444
   14000ebda:	and    QWORD PTR [rip+0x2912e],0x0        # 0x140037d10
   14000ebe2:	jmp    0x14000eafc
   14000ebe7:	and    QWORD PTR [rsp+0x20],0x0
   14000ebed:	xor    r9d,r9d
   14000ebf0:	xor    r8d,r8d
   14000ebf3:	xor    edx,edx
   14000ebf5:	xor    ecx,ecx
   14000ebf7:	call   0x140008678
   14000ebfc:	int3   
   14000ebfd:	int3   
   14000ebfe:	int3   
   14000ebff:	int3   
   14000ec00:	mov    DWORD PTR [rip+0x293ba],ecx        # 0x140037fc0
   14000ec06:	ret    
   14000ec07:	int3   
   14000ec08:	sub    rsp,0x28
   14000ec0c:	test   ecx,ecx
   14000ec0e:	js     0x14000ec30
   14000ec10:	cmp    ecx,0x2
   14000ec13:	jle    0x14000ec22
   14000ec15:	cmp    ecx,0x3
   14000ec18:	jne    0x14000ec30
   14000ec1a:	mov    eax,DWORD PTR [rip+0x29d78]        # 0x140038998
   14000ec20:	jmp    0x14000ec43
   14000ec22:	mov    eax,DWORD PTR [rip+0x29d70]        # 0x140038998
   14000ec28:	mov    DWORD PTR [rip+0x29d6a],ecx        # 0x140038998
   14000ec2e:	jmp    0x14000ec43
   14000ec30:	call   0x1400095b8
   14000ec35:	mov    DWORD PTR [rax],0x16
   14000ec3b:	call   0x140008628
   14000ec40:	or     eax,0xffffffff
   14000ec43:	add    rsp,0x28
   14000ec47:	ret    
   14000ec48:	mov    QWORD PTR [rsp+0x20],rbx
   14000ec4d:	push   rbp
   14000ec4e:	mov    rbp,rsp
   14000ec51:	sub    rsp,0x20
   14000ec55:	mov    rax,QWORD PTR [rip+0x27de4]        # 0x140036a40
   14000ec5c:	and    QWORD PTR [rbp+0x18],0x0
   14000ec61:	movabs rbx,0x2b992ddfa232
   14000ec6b:	cmp    rax,rbx
   14000ec6e:	jne    0x14000ecdf
   14000ec70:	lea    rcx,[rbp+0x18]
   14000ec74:	call   QWORD PTR [rip+0x185c6]        # 0x140027240
   14000ec7a:	mov    rax,QWORD PTR [rbp+0x18]
   14000ec7e:	mov    QWORD PTR [rbp+0x10],rax
   14000ec82:	call   QWORD PTR [rip+0x18590]        # 0x140027218
   14000ec88:	mov    eax,eax
   14000ec8a:	xor    QWORD PTR [rbp+0x10],rax
   14000ec8e:	call   QWORD PTR [rip+0x185a4]        # 0x140027238
   14000ec94:	lea    rcx,[rbp+0x20]
   14000ec98:	mov    eax,eax
   14000ec9a:	xor    QWORD PTR [rbp+0x10],rax
   14000ec9e:	call   QWORD PTR [rip+0x1858c]        # 0x140027230
   14000eca4:	mov    eax,DWORD PTR [rbp+0x20]
   14000eca7:	shl    rax,0x20
   14000ecab:	lea    rcx,[rbp+0x10]
   14000ecaf:	xor    rax,QWORD PTR [rbp+0x20]
   14000ecb3:	xor    rax,QWORD PTR [rbp+0x10]
   14000ecb7:	xor    rax,rcx
   14000ecba:	movabs rcx,0xffffffffffff
   14000ecc4:	and    rax,rcx
   14000ecc7:	movabs rcx,0x2b992ddfa233
   14000ecd1:	cmp    rax,rbx
   14000ecd4:	cmove  rax,rcx
   14000ecd8:	mov    QWORD PTR [rip+0x27d61],rax        # 0x140036a40
   14000ecdf:	mov    rbx,QWORD PTR [rsp+0x48]
   14000ece4:	not    rax
   14000ece7:	mov    QWORD PTR [rip+0x27d5a],rax        # 0x140036a48
   14000ecee:	add    rsp,0x20
   14000ecf2:	pop    rbp
   14000ecf3:	ret    
   14000ecf4:	mov    rax,rsp
   14000ecf7:	mov    QWORD PTR [rax+0x8],rbx
   14000ecfb:	mov    QWORD PTR [rax+0x10],rbp
   14000ecff:	mov    QWORD PTR [rax+0x18],rsi
   14000ed03:	mov    QWORD PTR [rax+0x20],rdi
   14000ed07:	push   r14
   14000ed09:	sub    rsp,0x40
   14000ed0d:	call   QWORD PTR [rip+0x18535]        # 0x140027248
   14000ed13:	xor    r14d,r14d
   14000ed16:	mov    rdi,rax
   14000ed19:	test   rax,rax
   14000ed1c:	je     0x14000edcb
   14000ed22:	mov    rbx,rax
   14000ed25:	cmp    WORD PTR [rax],r14w
   14000ed29:	je     0x14000ed3f
   14000ed2b:	add    rbx,0x2
   14000ed2f:	cmp    WORD PTR [rbx],r14w
   14000ed33:	jne    0x14000ed2b
   14000ed35:	add    rbx,0x2
   14000ed39:	cmp    WORD PTR [rbx],r14w
   14000ed3d:	jne    0x14000ed2b
   14000ed3f:	mov    QWORD PTR [rsp+0x38],r14
   14000ed44:	sub    rbx,rax
   14000ed47:	mov    QWORD PTR [rsp+0x30],r14
   14000ed4c:	sar    rbx,1
   14000ed4f:	mov    r8,rax
   14000ed52:	xor    edx,edx
   14000ed54:	lea    r9d,[rbx+0x1]
   14000ed58:	xor    ecx,ecx
   14000ed5a:	mov    DWORD PTR [rsp+0x28],r14d
   14000ed5f:	mov    QWORD PTR [rsp+0x20],r14
   14000ed64:	call   QWORD PTR [rip+0x18346]        # 0x1400270b0
   14000ed6a:	movsxd rbp,eax
   14000ed6d:	test   eax,eax
   14000ed6f:	je     0x14000edc2
   14000ed71:	mov    rcx,rbp
   14000ed74:	call   0x140007f54
   14000ed79:	mov    rsi,rax
   14000ed7c:	test   rax,rax
   14000ed7f:	je     0x14000edc2
   14000ed81:	mov    QWORD PTR [rsp+0x38],r14
   14000ed86:	mov    QWORD PTR [rsp+0x30],r14
   14000ed8b:	lea    r9d,[rbx+0x1]
   14000ed8f:	mov    r8,rdi
   14000ed92:	xor    edx,edx
   14000ed94:	xor    ecx,ecx
   14000ed96:	mov    DWORD PTR [rsp+0x28],ebp
   14000ed9a:	mov    QWORD PTR [rsp+0x20],rax
   14000ed9f:	call   QWORD PTR [rip+0x1830b]        # 0x1400270b0
   14000eda5:	test   eax,eax
   14000eda7:	jne    0x14000edb4
   14000eda9:	mov    rcx,rsi
   14000edac:	call   0x140006444
   14000edb1:	mov    rsi,r14
   14000edb4:	mov    rcx,rdi
   14000edb7:	call   QWORD PTR [rip+0x18493]        # 0x140027250
   14000edbd:	mov    rax,rsi
   14000edc0:	jmp    0x14000edcd
   14000edc2:	mov    rcx,rdi
   14000edc5:	call   QWORD PTR [rip+0x18485]        # 0x140027250
   14000edcb:	xor    eax,eax
   14000edcd:	mov    rbx,QWORD PTR [rsp+0x50]
   14000edd2:	mov    rbp,QWORD PTR [rsp+0x58]
   14000edd7:	mov    rsi,QWORD PTR [rsp+0x60]
   14000eddc:	mov    rdi,QWORD PTR [rsp+0x68]
   14000ede1:	add    rsp,0x40
   14000ede5:	pop    r14
   14000ede7:	ret    
   14000ede8:	mov    QWORD PTR [rsp+0x8],rbx
   14000eded:	push   rdi
   14000edee:	sub    rsp,0x20
   14000edf2:	xor    edi,edi
   14000edf4:	cmp    DWORD PTR [rip+0x2b38e],edi        # 0x14003a188
   14000edfa:	jne    0x14000ee01
   14000edfc:	call   0x140009fd8
   14000ee01:	mov    rbx,QWORD PTR [rip+0x2b360]        # 0x14003a168
   14000ee08:	lea    rax,[rip+0x1bc41]        # 0x14002aa50
   14000ee0f:	test   rbx,rbx
   14000ee12:	cmove  rbx,rax
   14000ee16:	cmp    BYTE PTR [rbx],0x20
   14000ee19:	ja     0x14000ee24
   14000ee1b:	cmp    BYTE PTR [rbx],0x0
   14000ee1e:	je     0x14000ee53
   14000ee20:	test   edi,edi
   14000ee22:	je     0x14000ee4d
   14000ee24:	cmp    BYTE PTR [rbx],0x22
   14000ee27:	jne    0x14000ee32
   14000ee29:	xor    eax,eax
   14000ee2b:	test   edi,edi
   14000ee2d:	sete   al
   14000ee30:	mov    edi,eax
   14000ee32:	movzx  ecx,BYTE PTR [rbx]
   14000ee35:	call   0x140019c94
   14000ee3a:	test   eax,eax
   14000ee3c:	je     0x14000ee41
   14000ee3e:	inc    rbx
   14000ee41:	inc    rbx
   14000ee44:	jmp    0x14000ee16
   14000ee46:	cmp    al,0x20
   14000ee48:	ja     0x14000ee53
   14000ee4a:	inc    rbx
   14000ee4d:	mov    al,BYTE PTR [rbx]
   14000ee4f:	test   al,al
   14000ee51:	jne    0x14000ee46
   14000ee53:	mov    rax,rbx
   14000ee56:	mov    rbx,QWORD PTR [rsp+0x30]
   14000ee5b:	add    rsp,0x20
   14000ee5f:	pop    rdi
   14000ee60:	ret    
   14000ee61:	int3   
   14000ee62:	int3   
   14000ee63:	int3   
   14000ee64:	rex push rbx
   14000ee66:	sub    rsp,0x20
   14000ee6a:	test   rcx,rcx
   14000ee6d:	je     0x14000ee7c
   14000ee6f:	test   rdx,rdx
   14000ee72:	je     0x14000ee7c
   14000ee74:	test   r8,r8
   14000ee77:	jne    0x14000ee95
   14000ee79:	mov    BYTE PTR [rcx],r8b
   14000ee7c:	call   0x1400095b8
   14000ee81:	mov    ebx,0x16
   14000ee86:	mov    DWORD PTR [rax],ebx
   14000ee88:	call   0x140008628
   14000ee8d:	mov    eax,ebx
   14000ee8f:	add    rsp,0x20
   14000ee93:	pop    rbx
   14000ee94:	ret    
   14000ee95:	mov    r9,rcx
   14000ee98:	sub    r9,r8
   14000ee9b:	mov    al,BYTE PTR [r8]
   14000ee9e:	mov    BYTE PTR [r9+r8*1],al
   14000eea2:	inc    r8
   14000eea5:	test   al,al
   14000eea7:	je     0x14000eeae
   14000eea9:	dec    rdx
   14000eeac:	jne    0x14000ee9b
   14000eeae:	test   rdx,rdx
   14000eeb1:	jne    0x14000eec1
   14000eeb3:	mov    BYTE PTR [rcx],dl
   14000eeb5:	call   0x1400095b8
   14000eeba:	mov    ebx,0x22
   14000eebf:	jmp    0x14000ee86
   14000eec1:	xor    eax,eax
   14000eec3:	jmp    0x14000ee8f
   14000eec5:	int3   
   14000eec6:	int3   
   14000eec7:	int3   
   14000eec8:	rex push rbx
   14000eeca:	sub    rsp,0x20
   14000eece:	xor    ebx,ebx
   14000eed0:	test   r9,r9
   14000eed3:	jne    0x14000eee3
   14000eed5:	test   rcx,rcx
   14000eed8:	jne    0x14000eee8
   14000eeda:	test   rdx,rdx
   14000eedd:	jne    0x14000eefd
   14000eedf:	xor    eax,eax
   14000eee1:	jmp    0x14000ef10
   14000eee3:	test   rcx,rcx
   14000eee6:	je     0x14000eefd
   14000eee8:	test   rdx,rdx
   14000eeeb:	je     0x14000eefd
   14000eeed:	test   r9,r9
   14000eef0:	jne    0x14000eef6
   14000eef2:	mov    BYTE PTR [rcx],bl
   14000eef4:	jmp    0x14000eedf
   14000eef6:	test   r8,r8
   14000eef9:	jne    0x14000ef16
   14000eefb:	mov    BYTE PTR [rcx],bl
   14000eefd:	call   0x1400095b8
   14000ef02:	mov    ebx,0x16
   14000ef07:	mov    DWORD PTR [rax],ebx
   14000ef09:	call   0x140008628
   14000ef0e:	mov    eax,ebx
   14000ef10:	add    rsp,0x20
   14000ef14:	pop    rbx
   14000ef15:	ret    
   14000ef16:	mov    r11,rcx
   14000ef19:	mov    r10,rdx
   14000ef1c:	cmp    r9,0xffffffffffffffff
   14000ef20:	jne    0x14000ef3a
   14000ef22:	sub    r11,r8
   14000ef25:	mov    al,BYTE PTR [r8]
   14000ef28:	mov    BYTE PTR [r11+r8*1],al
   14000ef2c:	inc    r8
   14000ef2f:	test   al,al
   14000ef31:	je     0x14000ef5d
   14000ef33:	dec    r10
   14000ef36:	jne    0x14000ef25
   14000ef38:	jmp    0x14000ef5d
   14000ef3a:	sub    r8,rcx
   14000ef3d:	mov    al,BYTE PTR [r8+r11*1]
   14000ef41:	mov    BYTE PTR [r11],al
   14000ef44:	inc    r11
   14000ef47:	test   al,al
   14000ef49:	je     0x14000ef55
   14000ef4b:	dec    r10
   14000ef4e:	je     0x14000ef55
   14000ef50:	dec    r9
   14000ef53:	jne    0x14000ef3d
   14000ef55:	test   r9,r9
   14000ef58:	jne    0x14000ef5d
   14000ef5a:	mov    BYTE PTR [r11],bl
   14000ef5d:	test   r10,r10
   14000ef60:	jne    0x14000eedf
   14000ef66:	cmp    r9,0xffffffffffffffff
   14000ef6a:	jne    0x14000ef76
   14000ef6c:	mov    BYTE PTR [rcx+rdx*1-0x1],bl
   14000ef70:	lea    eax,[r10+0x50]
   14000ef74:	jmp    0x14000ef10
   14000ef76:	mov    BYTE PTR [rcx],bl
   14000ef78:	call   0x1400095b8
   14000ef7d:	mov    ebx,0x22
   14000ef82:	jmp    0x14000ef07
   14000ef84:	rex push rbp
   14000ef86:	push   r12
   14000ef88:	push   r13
   14000ef8a:	push   r14
   14000ef8c:	push   r15
   14000ef8e:	sub    rsp,0x50
   14000ef92:	lea    rbp,[rsp+0x40]
   14000ef97:	mov    QWORD PTR [rbp+0x40],rbx
   14000ef9b:	mov    QWORD PTR [rbp+0x48],rsi
   14000ef9f:	mov    QWORD PTR [rbp+0x50],rdi
   14000efa3:	mov    rax,QWORD PTR [rip+0x27a96]        # 0x140036a40
   14000efaa:	xor    rax,rbp
   14000efad:	mov    QWORD PTR [rbp+0x0],rax
   14000efb1:	mov    rax,QWORD PTR [rcx]
   14000efb4:	mov    r15d,r8d
   14000efb7:	mov    r12,rdx
   14000efba:	mov    r14d,DWORD PTR [rax+0x4]
   14000efbe:	mov    r13,r9
   14000efc1:	xor    r8d,r8d
   14000efc4:	xor    r9d,r9d
   14000efc7:	mov    edx,r15d
   14000efca:	mov    rcx,r12
   14000efcd:	xor    edi,edi
   14000efcf:	call   0x14000f4a8
   14000efd4:	movsxd rsi,eax
   14000efd7:	test   eax,eax
   14000efd9:	jne    0x14000efe2
   14000efdb:	xor    eax,eax
   14000efdd:	jmp    0x14000f0c8
   14000efe2:	jle    0x14000f05b
   14000efe4:	xor    edx,edx
   14000efe6:	lea    rax,[rdx-0x20]
   14000efea:	div    rsi
   14000efed:	cmp    rax,0x2
   14000eff1:	jb     0x14000f05b
   14000eff3:	lea    rcx,[rsi+rsi*1]
   14000eff7:	lea    rax,[rcx+0x10]
   14000effb:	cmp    rax,rcx
   14000effe:	jbe    0x14000f05b
   14000f000:	lea    rcx,[rsi*2+0x10]
   14000f008:	cmp    rcx,0x400
   14000f00f:	ja     0x14000f042
   14000f011:	lea    rax,[rcx+0xf]
   14000f015:	cmp    rax,rcx
   14000f018:	ja     0x14000f024
   14000f01a:	movabs rax,0xffffffffffffff0
   14000f024:	and    rax,0xfffffffffffffff0
   14000f028:	call   0x140019d60
   14000f02d:	sub    rsp,rax
   14000f030:	lea    rbx,[rsp+0x40]
   14000f035:	test   rbx,rbx
   14000f038:	je     0x14000efdb
   14000f03a:	mov    DWORD PTR [rbx],0xcccc
   14000f040:	jmp    0x14000f055
   14000f042:	call   0x1400064d4
   14000f047:	mov    rbx,rax
   14000f04a:	test   rax,rax
   14000f04d:	je     0x14000f05e
   14000f04f:	mov    DWORD PTR [rax],0xdddd
   14000f055:	add    rbx,0x10
   14000f059:	jmp    0x14000f05e
   14000f05b:	mov    rbx,rdi
   14000f05e:	test   rbx,rbx
   14000f061:	je     0x14000efdb
   14000f067:	mov    r9d,esi
   14000f06a:	mov    r8,rbx
   14000f06d:	mov    edx,r15d
   14000f070:	mov    rcx,r12
   14000f073:	call   0x14000f4a8
   14000f078:	test   eax,eax
   14000f07a:	je     0x14000f0b5
   14000f07c:	mov    eax,DWORD PTR [rbp+0x60]
   14000f07f:	or     r9d,0xffffffff
   14000f083:	xor    edx,edx
   14000f085:	mov    QWORD PTR [rsp+0x38],rdi
   14000f08a:	mov    r8,rbx
   14000f08d:	mov    ecx,r14d
   14000f090:	mov    QWORD PTR [rsp+0x30],rdi
   14000f095:	test   eax,eax
   14000f097:	jne    0x14000f0a4
   14000f099:	mov    DWORD PTR [rsp+0x28],edi
   14000f09d:	mov    QWORD PTR [rsp+0x20],rdi
   14000f0a2:	jmp    0x14000f0ad
   14000f0a4:	mov    DWORD PTR [rsp+0x28],eax
   14000f0a8:	mov    QWORD PTR [rsp+0x20],r13
   14000f0ad:	call   QWORD PTR [rip+0x17ffd]        # 0x1400270b0
   14000f0b3:	mov    edi,eax
   14000f0b5:	lea    rcx,[rbx-0x10]
   14000f0b9:	cmp    DWORD PTR [rcx],0xdddd
   14000f0bf:	jne    0x14000f0c6
   14000f0c1:	call   0x140006444
   14000f0c6:	mov    eax,edi
   14000f0c8:	mov    rcx,QWORD PTR [rbp+0x0]
   14000f0cc:	xor    rcx,rbp
   14000f0cf:	call   0x14000d0a0
   14000f0d4:	mov    rbx,QWORD PTR [rbp+0x40]
   14000f0d8:	mov    rsi,QWORD PTR [rbp+0x48]
   14000f0dc:	mov    rdi,QWORD PTR [rbp+0x50]
   14000f0e0:	lea    rsp,[rbp+0x10]
   14000f0e4:	pop    r15
   14000f0e6:	pop    r14
   14000f0e8:	pop    r13
   14000f0ea:	pop    r12
   14000f0ec:	pop    rbp
   14000f0ed:	ret    
   14000f0ee:	int3   
   14000f0ef:	int3   
   14000f0f0:	xor    eax,eax
   14000f0f2:	lea    rdx,[rcx+0x10]
   14000f0f6:	cmp    rdx,rcx
   14000f0f9:	seta   al
   14000f0fc:	ret    
   14000f0fd:	int3   
   14000f0fe:	int3   
   14000f0ff:	int3   
   14000f100:	test   rcx,rcx
   14000f103:	je     0x14000f10b
   14000f105:	mov    DWORD PTR [rcx],edx
   14000f107:	add    rcx,0x10
   14000f10b:	mov    rax,rcx
   14000f10e:	ret    
   14000f10f:	int3   
   14000f110:	mov    QWORD PTR [rsp+0x8],rbx
   14000f115:	mov    QWORD PTR [rsp+0x10],rsi
   14000f11a:	push   rdi
   14000f11b:	sub    rsp,0x50
   14000f11f:	mov    rsi,rdx
   14000f122:	mov    rdx,rcx
   14000f125:	lea    rcx,[rsp+0x30]
   14000f12a:	mov    rbx,r9
   14000f12d:	mov    edi,r8d
   14000f130:	call   0x14000a000
   14000f135:	mov    eax,DWORD PTR [rsp+0x80]
   14000f13c:	lea    rcx,[rsp+0x30]
   14000f141:	mov    r9,rbx
   14000f144:	mov    r8d,edi
   14000f147:	mov    rdx,rsi
   14000f14a:	mov    DWORD PTR [rsp+0x20],eax
   14000f14e:	call   0x14000ef84
   14000f153:	cmp    BYTE PTR [rsp+0x48],0x0
   14000f158:	je     0x14000f166
   14000f15a:	mov    rcx,QWORD PTR [rsp+0x40]
   14000f15f:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14000f166:	mov    rbx,QWORD PTR [rsp+0x60]
   14000f16b:	mov    rsi,QWORD PTR [rsp+0x68]
   14000f170:	add    rsp,0x50
   14000f174:	pop    rdi
   14000f175:	ret    
   14000f176:	int3   
   14000f177:	int3   
   14000f178:	sub    rsp,0x28
   14000f17c:	test   rcx,rcx
   14000f17f:	je     0x14000f192
   14000f181:	sub    rcx,0x10
   14000f185:	cmp    DWORD PTR [rcx],0xdddd
   14000f18b:	jne    0x14000f192
   14000f18d:	call   0x140006444
   14000f192:	add    rsp,0x28
   14000f196:	ret    
   14000f197:	int3   
   14000f198:	mov    r10d,ecx
   14000f19b:	xor    r8d,r8d
   14000f19e:	mov    r9d,0xe3
   14000f1a4:	lea    eax,[r9+r8*1]
   14000f1a8:	lea    r11,[rip+0x1b8b1]        # 0x14002aa60
   14000f1af:	mov    ecx,r10d
   14000f1b2:	cdq    
   14000f1b3:	sub    eax,edx
   14000f1b5:	sar    eax,1
   14000f1b7:	movsxd rdx,eax
   14000f1ba:	shl    rdx,0x4
   14000f1be:	sub    ecx,DWORD PTR [rdx+r11*1]
   14000f1c2:	je     0x14000f1da
   14000f1c4:	test   ecx,ecx
   14000f1c6:	jns    0x14000f1ce
   14000f1c8:	lea    r9d,[rax-0x1]
   14000f1cc:	jmp    0x14000f1d2
   14000f1ce:	lea    r8d,[rax+0x1]
   14000f1d2:	cmp    r8d,r9d
   14000f1d5:	jle    0x14000f1a4
   14000f1d7:	or     eax,0xffffffff
   14000f1da:	ret    
   14000f1db:	int3   
   14000f1dc:	mov    rax,rsp
   14000f1df:	mov    QWORD PTR [rax+0x8],rbx
   14000f1e3:	mov    QWORD PTR [rax+0x10],rbp
   14000f1e7:	mov    QWORD PTR [rax+0x18],rsi
   14000f1eb:	mov    QWORD PTR [rax+0x20],rdi
   14000f1ef:	push   r14
   14000f1f1:	sub    rsp,0x20
   14000f1f5:	mov    rbp,rcx
   14000f1f8:	xor    edi,edi
   14000f1fa:	mov    esi,0xe3
   14000f1ff:	lea    r14,[rip+0x1c69a]        # 0x14002b8a0
   14000f206:	lea    eax,[rsi+rdi*1]
   14000f209:	mov    r8d,0x55
   14000f20f:	mov    rcx,rbp
   14000f212:	cdq    
   14000f213:	sub    eax,edx
   14000f215:	sar    eax,1
   14000f217:	movsxd rbx,eax
   14000f21a:	mov    rdx,rbx
   14000f21d:	add    rdx,rdx
   14000f220:	mov    rdx,QWORD PTR [r14+rdx*8]
   14000f224:	call   0x14000f678
   14000f229:	test   eax,eax
   14000f22b:	je     0x14000f240
   14000f22d:	jns    0x14000f234
   14000f22f:	lea    esi,[rbx-0x1]
   14000f232:	jmp    0x14000f237
   14000f234:	lea    edi,[rbx+0x1]
   14000f237:	cmp    edi,esi
   14000f239:	jle    0x14000f206
   14000f23b:	or     eax,0xffffffff
   14000f23e:	jmp    0x14000f24b
   14000f240:	mov    rax,rbx
   14000f243:	add    rax,rax
   14000f246:	mov    eax,DWORD PTR [r14+rax*8+0x8]
   14000f24b:	mov    rbx,QWORD PTR [rsp+0x30]
   14000f250:	mov    rbp,QWORD PTR [rsp+0x38]
   14000f255:	mov    rsi,QWORD PTR [rsp+0x40]
   14000f25a:	mov    rdi,QWORD PTR [rsp+0x48]
   14000f25f:	add    rsp,0x20
   14000f263:	pop    r14
   14000f265:	ret    
   14000f266:	int3   
   14000f267:	int3   
   14000f268:	mov    r11,rsp
   14000f26b:	mov    QWORD PTR [r11+0x8],rbx
   14000f26f:	mov    QWORD PTR [r11+0x10],rsi
   14000f273:	push   rdi
   14000f274:	sub    rsp,0x50
   14000f278:	mov    r10,QWORD PTR [rip+0x2ae89]        # 0x14003a108
   14000f27f:	mov    ebx,r9d
   14000f282:	mov    rdi,r8
   14000f285:	xor    r10,QWORD PTR [rip+0x277b4]        # 0x140036a40
   14000f28c:	mov    esi,edx
   14000f28e:	je     0x14000f2ba
   14000f290:	xor    eax,eax
   14000f292:	mov    QWORD PTR [r11-0x18],rax
   14000f296:	mov    QWORD PTR [r11-0x20],rax
   14000f29a:	mov    QWORD PTR [r11-0x28],rax
   14000f29e:	mov    eax,DWORD PTR [rsp+0x88]
   14000f2a5:	mov    DWORD PTR [rsp+0x28],eax
   14000f2a9:	mov    rax,QWORD PTR [rsp+0x80]
   14000f2b1:	mov    QWORD PTR [r11-0x38],rax
   14000f2b5:	call   r10
   14000f2b8:	jmp    0x14000f2e7
   14000f2ba:	call   0x14000f3a8
   14000f2bf:	mov    r9d,ebx
   14000f2c2:	mov    r8,rdi
   14000f2c5:	mov    ecx,eax
   14000f2c7:	mov    eax,DWORD PTR [rsp+0x88]
   14000f2ce:	mov    edx,esi
   14000f2d0:	mov    DWORD PTR [rsp+0x28],eax
   14000f2d4:	mov    rax,QWORD PTR [rsp+0x80]
   14000f2dc:	mov    QWORD PTR [rsp+0x20],rax
   14000f2e1:	call   QWORD PTR [rip+0x17f81]        # 0x140027268
   14000f2e7:	mov    rbx,QWORD PTR [rsp+0x60]
   14000f2ec:	mov    rsi,QWORD PTR [rsp+0x68]
   14000f2f1:	add    rsp,0x50
   14000f2f5:	pop    rdi
   14000f2f6:	ret    
   14000f2f7:	int3   
   14000f2f8:	mov    QWORD PTR [rsp+0x8],rbx
   14000f2fd:	mov    QWORD PTR [rsp+0x10],rbp
   14000f302:	mov    QWORD PTR [rsp+0x18],rsi
   14000f307:	push   rdi
   14000f308:	sub    rsp,0x30
   14000f30c:	movsxd rbx,r8d
   14000f30f:	mov    rsi,rdx
   14000f312:	test   ecx,0xfffff3ff
   14000f318:	jne    0x14000f322
   14000f31a:	cmp    ecx,0xc00
   14000f320:	jne    0x14000f331
   14000f322:	test   rdx,rdx
   14000f325:	jne    0x14000f32c
   14000f327:	test   r8d,r8d
   14000f32a:	jg     0x14000f331
   14000f32c:	test   r8d,r8d
   14000f32f:	jns    0x14000f335
   14000f331:	xor    eax,eax
   14000f333:	jmp    0x14000f37c
   14000f335:	call   0x14000f198
   14000f33a:	test   eax,eax
   14000f33c:	js     0x14000f331
   14000f33e:	cdqe   
   14000f340:	lea    rbp,[rip+0x1b721]        # 0x14002aa68
   14000f347:	mov    edx,0x55
   14000f34c:	add    rax,rax
   14000f34f:	mov    rbp,QWORD PTR [rbp+rax*8+0x0]
   14000f354:	mov    rcx,rbp
   14000f357:	call   0x140019db0
   14000f35c:	mov    rdi,rax
   14000f35f:	test   ebx,ebx
   14000f361:	jle    0x14000f379
   14000f363:	cmp    eax,ebx
   14000f365:	jge    0x14000f331
   14000f367:	mov    rdx,rbx
   14000f36a:	mov    r8,rbp
   14000f36d:	mov    rcx,rsi
   14000f370:	call   0x14000f934
   14000f375:	test   eax,eax
   14000f377:	jne    0x14000f391
   14000f379:	lea    eax,[rdi+0x1]
   14000f37c:	mov    rbx,QWORD PTR [rsp+0x40]
   14000f381:	mov    rbp,QWORD PTR [rsp+0x48]
   14000f386:	mov    rsi,QWORD PTR [rsp+0x50]
   14000f38b:	add    rsp,0x30
   14000f38f:	pop    rdi
   14000f390:	ret    
   14000f391:	and    QWORD PTR [rsp+0x20],0x0
   14000f397:	xor    r9d,r9d
   14000f39a:	xor    r8d,r8d
   14000f39d:	xor    edx,edx
   14000f39f:	xor    ecx,ecx
   14000f3a1:	call   0x140008678
   14000f3a6:	int3   
   14000f3a7:	int3   
   14000f3a8:	sub    rsp,0x28
   14000f3ac:	test   rcx,rcx
   14000f3af:	je     0x14000f3d3
   14000f3b1:	call   0x14000f1dc
   14000f3b6:	test   eax,eax
   14000f3b8:	js     0x14000f3d3
   14000f3ba:	cdqe   
   14000f3bc:	cmp    rax,0xe4
   14000f3c2:	jae    0x14000f3d3
   14000f3c4:	lea    rcx,[rip+0x1b695]        # 0x14002aa60
   14000f3cb:	add    rax,rax
   14000f3ce:	mov    eax,DWORD PTR [rcx+rax*8]
   14000f3d1:	jmp    0x14000f3d5
   14000f3d3:	xor    eax,eax
   14000f3d5:	add    rsp,0x28
   14000f3d9:	ret    
   14000f3da:	int3   
   14000f3db:	int3   
   14000f3dc:	xor    r8d,r8d
   14000f3df:	xor    edx,edx
   14000f3e1:	rex.W jmp QWORD PTR [rip+0x295b8]        # 0x1400389a0
   14000f3e8:	sub    rsp,0x28
   14000f3ec:	mov    rax,QWORD PTR [rip+0x2ad1d]        # 0x14003a110
   14000f3f3:	xor    rax,QWORD PTR [rip+0x27646]        # 0x140036a40
   14000f3fa:	je     0x14000f406
   14000f3fc:	xor    r9d,r9d
   14000f3ff:	add    rsp,0x28
   14000f403:	rex.W jmp rax
   14000f406:	mov    QWORD PTR [rip+0x29593],rcx        # 0x1400389a0
   14000f40d:	lea    rcx,[rip+0xffffffffffffffc8]        # 0x14000f3dc
   14000f414:	mov    edx,0x1
   14000f419:	call   QWORD PTR [rip+0x17e71]        # 0x140027290
   14000f41f:	and    QWORD PTR [rip+0x29579],0x0        # 0x1400389a0
   14000f427:	add    rsp,0x28
   14000f42b:	ret    
   14000f42c:	mov    r11,rsp
   14000f42f:	mov    QWORD PTR [r11+0x8],rbx
   14000f433:	mov    QWORD PTR [r11+0x10],rsi
   14000f437:	push   rdi
   14000f438:	sub    rsp,0x40
   14000f43c:	mov    r10,QWORD PTR [rip+0x2acd5]        # 0x14003a118
   14000f443:	mov    rbx,r9
   14000f446:	mov    rdi,r8
   14000f449:	xor    r10,QWORD PTR [rip+0x275f0]        # 0x140036a40
   14000f450:	mov    esi,edx
   14000f452:	je     0x14000f46f
   14000f454:	and    QWORD PTR [r11-0x18],0x0
   14000f459:	mov    eax,DWORD PTR [rsp+0x78]
   14000f45d:	mov    DWORD PTR [rsp+0x28],eax
   14000f461:	mov    rax,QWORD PTR [rsp+0x70]
   14000f466:	mov    QWORD PTR [r11-0x28],rax
   14000f46a:	call   r10
   14000f46d:	jmp    0x14000f496
   14000f46f:	call   0x14000f3a8
   14000f474:	mov    r9,rbx
   14000f477:	mov    r8,rdi
   14000f47a:	mov    ecx,eax
   14000f47c:	mov    eax,DWORD PTR [rsp+0x78]
   14000f480:	mov    edx,esi
   14000f482:	mov    DWORD PTR [rsp+0x28],eax
   14000f486:	mov    rax,QWORD PTR [rsp+0x70]
   14000f48b:	mov    QWORD PTR [rsp+0x20],rax
   14000f490:	call   QWORD PTR [rip+0x17dc2]        # 0x140027258
   14000f496:	mov    rbx,QWORD PTR [rsp+0x50]
   14000f49b:	mov    rsi,QWORD PTR [rsp+0x58]
   14000f4a0:	add    rsp,0x40
   14000f4a4:	pop    rdi
   14000f4a5:	ret    
   14000f4a6:	int3   
   14000f4a7:	int3   
   14000f4a8:	mov    QWORD PTR [rsp+0x8],rbx
   14000f4ad:	mov    QWORD PTR [rsp+0x10],rsi
   14000f4b2:	push   rdi
   14000f4b3:	sub    rsp,0x20
   14000f4b7:	mov    rax,QWORD PTR [rip+0x2ac62]        # 0x14003a120
   14000f4be:	mov    ebx,r9d
   14000f4c1:	mov    rdi,r8
   14000f4c4:	xor    rax,QWORD PTR [rip+0x27575]        # 0x140036a40
   14000f4cb:	mov    esi,edx
   14000f4cd:	je     0x14000f4d3
   14000f4cf:	call   rax
   14000f4d1:	jmp    0x14000f4e8
   14000f4d3:	call   0x14000f3a8
   14000f4d8:	mov    r9d,ebx
   14000f4db:	mov    r8,rdi
   14000f4de:	mov    ecx,eax
   14000f4e0:	mov    edx,esi
   14000f4e2:	call   QWORD PTR [rip+0x17d90]        # 0x140027278
   14000f4e8:	mov    rbx,QWORD PTR [rsp+0x30]
   14000f4ed:	mov    rsi,QWORD PTR [rsp+0x38]
   14000f4f2:	add    rsp,0x20
   14000f4f6:	pop    rdi
   14000f4f7:	ret    
   14000f4f8:	mov    QWORD PTR [rsp+0x8],rbx
   14000f4fd:	mov    QWORD PTR [rsp+0x10],rsi
   14000f502:	push   rdi
   14000f503:	sub    rsp,0x30
   14000f507:	mov    r10,QWORD PTR [rip+0x2ac1a]        # 0x14003a128
   14000f50e:	mov    rbx,r9
   14000f511:	mov    rdi,r8
   14000f514:	xor    r10,QWORD PTR [rip+0x27525]        # 0x140036a40
   14000f51b:	mov    esi,edx
   14000f51d:	je     0x14000f536
   14000f51f:	mov    eax,DWORD PTR [rsp+0x68]
   14000f523:	mov    DWORD PTR [rsp+0x28],eax
   14000f527:	mov    rax,QWORD PTR [rsp+0x60]
   14000f52c:	mov    QWORD PTR [rsp+0x20],rax
   14000f531:	call   r10
   14000f534:	jmp    0x14000f55d
   14000f536:	call   0x14000f3a8
   14000f53b:	mov    r9,rbx
   14000f53e:	mov    r8,rdi
   14000f541:	mov    ecx,eax
   14000f543:	mov    eax,DWORD PTR [rsp+0x68]
   14000f547:	mov    edx,esi
   14000f549:	mov    DWORD PTR [rsp+0x28],eax
   14000f54d:	mov    rax,QWORD PTR [rsp+0x60]
   14000f552:	mov    QWORD PTR [rsp+0x20],rax
   14000f557:	call   QWORD PTR [rip+0x17d03]        # 0x140027260
   14000f55d:	mov    rbx,QWORD PTR [rsp+0x40]
   14000f562:	mov    rsi,QWORD PTR [rsp+0x48]
   14000f567:	add    rsp,0x30
   14000f56b:	pop    rdi
   14000f56c:	ret    
   14000f56d:	int3   
   14000f56e:	int3   
   14000f56f:	int3   
   14000f570:	mov    QWORD PTR [rsp+0x8],rbx
   14000f575:	push   rdi
   14000f576:	sub    rsp,0x20
   14000f57a:	mov    rax,QWORD PTR [rip+0x2abaf]        # 0x14003a130
   14000f581:	mov    ebx,edx
   14000f583:	mov    rdi,rcx
   14000f586:	xor    rax,QWORD PTR [rip+0x274b3]        # 0x140036a40
   14000f58d:	je     0x14000f593
   14000f58f:	call   rax
   14000f591:	jmp    0x14000f5a6
   14000f593:	call   QWORD PTR [rip+0x17cef]        # 0x140027288
   14000f599:	mov    r8d,ebx
   14000f59c:	mov    rdx,rdi
   14000f59f:	mov    ecx,eax
   14000f5a1:	call   0x14000f2f8
   14000f5a6:	mov    rbx,QWORD PTR [rsp+0x30]
   14000f5ab:	add    rsp,0x20
   14000f5af:	pop    rdi
   14000f5b0:	ret    
   14000f5b1:	int3   
   14000f5b2:	int3   
   14000f5b3:	int3   
   14000f5b4:	sub    rsp,0x28
   14000f5b8:	mov    rax,QWORD PTR [rip+0x2ab79]        # 0x14003a138
   14000f5bf:	xor    rax,QWORD PTR [rip+0x2747a]        # 0x140036a40
   14000f5c6:	je     0x14000f5cf
   14000f5c8:	add    rsp,0x28
   14000f5cc:	rex.W jmp rax
   14000f5cf:	call   0x14000f3a8
   14000f5d4:	mov    edx,0x1
   14000f5d9:	mov    ecx,eax
   14000f5db:	add    rsp,0x28
   14000f5df:	rex.W jmp QWORD PTR [rip+0x17c9a]        # 0x140027280
   14000f5e6:	int3   
   14000f5e7:	int3   
   14000f5e8:	mov    r11,rsp
   14000f5eb:	mov    QWORD PTR [r11+0x8],rbx
   14000f5ef:	mov    QWORD PTR [r11+0x10],rsi
   14000f5f3:	push   rdi
   14000f5f4:	sub    rsp,0x50
   14000f5f8:	mov    r10,QWORD PTR [rip+0x2ab41]        # 0x14003a140
   14000f5ff:	mov    ebx,r9d
   14000f602:	mov    rdi,r8
   14000f605:	xor    r10,QWORD PTR [rip+0x27434]        # 0x140036a40
   14000f60c:	mov    esi,edx
   14000f60e:	je     0x14000f63a
   14000f610:	xor    eax,eax
   14000f612:	mov    QWORD PTR [r11-0x18],rax
   14000f616:	mov    QWORD PTR [r11-0x20],rax
   14000f61a:	mov    QWORD PTR [r11-0x28],rax
   14000f61e:	mov    eax,DWORD PTR [rsp+0x88]
   14000f625:	mov    DWORD PTR [rsp+0x28],eax
   14000f629:	mov    rax,QWORD PTR [rsp+0x80]
   14000f631:	mov    QWORD PTR [r11-0x38],rax
   14000f635:	call   r10
   14000f638:	jmp    0x14000f667
   14000f63a:	call   0x14000f3a8
   14000f63f:	mov    r9d,ebx
   14000f642:	mov    r8,rdi
   14000f645:	mov    ecx,eax
   14000f647:	mov    eax,DWORD PTR [rsp+0x88]
   14000f64e:	mov    edx,esi
   14000f650:	mov    DWORD PTR [rsp+0x28],eax
   14000f654:	mov    rax,QWORD PTR [rsp+0x80]
   14000f65c:	mov    QWORD PTR [rsp+0x20],rax
   14000f661:	call   QWORD PTR [rip+0x17c09]        # 0x140027270
   14000f667:	mov    rbx,QWORD PTR [rsp+0x60]
   14000f66c:	mov    rsi,QWORD PTR [rsp+0x68]
   14000f671:	add    rsp,0x50
   14000f675:	pop    rdi
   14000f676:	ret    
   14000f677:	int3   
   14000f678:	xor    r9d,r9d
   14000f67b:	mov    r10,rdx
   14000f67e:	mov    r11,rcx
   14000f681:	test   r8,r8
   14000f684:	je     0x14000f6c9
   14000f686:	sub    r11,rdx
   14000f689:	movzx  ecx,WORD PTR [r11+r10*1]
   14000f68e:	lea    eax,[rcx-0x41]
   14000f691:	cmp    ax,0x19
   14000f695:	ja     0x14000f69b
   14000f697:	add    cx,0x20
   14000f69b:	movzx  edx,WORD PTR [r10]
   14000f69f:	lea    eax,[rdx-0x41]
   14000f6a2:	cmp    ax,0x19
   14000f6a6:	ja     0x14000f6ac
   14000f6a8:	add    dx,0x20
   14000f6ac:	add    r10,0x2
   14000f6b0:	dec    r8
   14000f6b3:	je     0x14000f6bf
   14000f6b5:	test   cx,cx
   14000f6b8:	je     0x14000f6bf
   14000f6ba:	cmp    cx,dx
   14000f6bd:	je     0x14000f689
   14000f6bf:	movzx  eax,dx
   14000f6c2:	movzx  r9d,cx
   14000f6c6:	sub    r9d,eax
   14000f6c9:	mov    eax,r9d
   14000f6cc:	ret    
   14000f6cd:	int3   
   14000f6ce:	int3   
   14000f6cf:	int3   
   14000f6d0:	mov    QWORD PTR [rsp+0x8],rbx
   14000f6d5:	mov    QWORD PTR [rsp+0x10],rsi
   14000f6da:	push   rdi
   14000f6db:	sub    rsp,0x20
   14000f6df:	mov    rbx,rdx
   14000f6e2:	mov    rdi,rcx
   14000f6e5:	test   rcx,rcx
   14000f6e8:	jne    0x14000f6f4
   14000f6ea:	mov    rcx,rdx
   14000f6ed:	call   0x1400064d4
   14000f6f2:	jmp    0x14000f75e
   14000f6f4:	test   rdx,rdx
   14000f6f7:	jne    0x14000f700
   14000f6f9:	call   0x140006444
   14000f6fe:	jmp    0x14000f75c
   14000f700:	cmp    rdx,0xffffffffffffffe0
   14000f704:	ja     0x14000f749
   14000f706:	mov    rcx,QWORD PTR [rip+0x28f5b]        # 0x140038668
   14000f70d:	mov    eax,0x1
   14000f712:	test   rbx,rbx
   14000f715:	cmove  rbx,rax
   14000f719:	mov    r8,rdi
   14000f71c:	xor    edx,edx
   14000f71e:	mov    r9,rbx
   14000f721:	call   QWORD PTR [rip+0x17b71]        # 0x140027298
   14000f727:	mov    rsi,rax
   14000f72a:	test   rax,rax
   14000f72d:	jne    0x14000f79e
   14000f72f:	cmp    DWORD PTR [rip+0x28f3b],eax        # 0x140038670
   14000f735:	je     0x14000f787
   14000f737:	mov    rcx,rbx
   14000f73a:	call   0x140007e5c
   14000f73f:	test   eax,eax
   14000f741:	je     0x14000f76e
   14000f743:	cmp    rbx,0xffffffffffffffe0
   14000f747:	jbe    0x14000f706
   14000f749:	mov    rcx,rbx
   14000f74c:	call   0x140007e5c
   14000f751:	call   0x1400095b8
   14000f756:	mov    DWORD PTR [rax],0xc
   14000f75c:	xor    eax,eax
   14000f75e:	mov    rbx,QWORD PTR [rsp+0x30]
   14000f763:	mov    rsi,QWORD PTR [rsp+0x38]
   14000f768:	add    rsp,0x20
   14000f76c:	pop    rdi
   14000f76d:	ret    
   14000f76e:	call   0x1400095b8
   14000f773:	mov    rbx,rax
   14000f776:	call   QWORD PTR [rip+0x17904]        # 0x140027080
   14000f77c:	mov    ecx,eax
   14000f77e:	call   0x140009650
   14000f783:	mov    DWORD PTR [rbx],eax
   14000f785:	jmp    0x14000f75c
   14000f787:	call   0x1400095b8
   14000f78c:	mov    rbx,rax
   14000f78f:	call   QWORD PTR [rip+0x178eb]        # 0x140027080
   14000f795:	mov    ecx,eax
   14000f797:	call   0x140009650
   14000f79c:	mov    DWORD PTR [rbx],eax
   14000f79e:	mov    rax,rsi
   14000f7a1:	jmp    0x14000f75e
   14000f7a3:	int3   
   14000f7a4:	mov    QWORD PTR [rsp+0x8],rbx
   14000f7a9:	mov    QWORD PTR [rsp+0x10],rsi
   14000f7ae:	push   rdi
   14000f7af:	sub    rsp,0x20
   14000f7b3:	xor    edi,edi
   14000f7b5:	mov    rbx,rdx
   14000f7b8:	mov    rsi,rcx
   14000f7bb:	test   rdx,rdx
   14000f7be:	je     0x14000f7dd
   14000f7c0:	xor    edx,edx
   14000f7c2:	lea    rax,[rdi-0x20]
   14000f7c6:	div    rbx
   14000f7c9:	cmp    rax,r8
   14000f7cc:	jae    0x14000f7dd
   14000f7ce:	call   0x1400095b8
   14000f7d3:	mov    DWORD PTR [rax],0xc
   14000f7d9:	xor    eax,eax
   14000f7db:	jmp    0x14000f81a
   14000f7dd:	imul   rbx,r8
   14000f7e1:	test   rcx,rcx
   14000f7e4:	je     0x14000f7ee
   14000f7e6:	call   0x140007e98
   14000f7eb:	mov    rdi,rax
   14000f7ee:	mov    rdx,rbx
   14000f7f1:	mov    rcx,rsi
   14000f7f4:	call   0x14000f6d0
   14000f7f9:	mov    rsi,rax
   14000f7fc:	test   rax,rax
   14000f7ff:	je     0x14000f817
   14000f801:	cmp    rdi,rbx
   14000f804:	jae    0x14000f817
   14000f806:	sub    rbx,rdi
   14000f809:	lea    rcx,[rdi+rax*1]
   14000f80d:	xor    edx,edx
   14000f80f:	mov    r8,rbx
   14000f812:	call   0x140007150
   14000f817:	mov    rax,rsi
   14000f81a:	mov    rbx,QWORD PTR [rsp+0x30]
   14000f81f:	mov    rsi,QWORD PTR [rsp+0x38]
   14000f824:	add    rsp,0x20
   14000f828:	pop    rdi
   14000f829:	ret    
   14000f82a:	int3   
   14000f82b:	int3   
   14000f82c:	int3   
   14000f82d:	int3   
   14000f82e:	int3   
   14000f82f:	int3   
   14000f830:	int3   
   14000f831:	int3   
   14000f832:	int3   
   14000f833:	int3   
   14000f834:	int3   
   14000f835:	int3   
   14000f836:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000f840:	sub    rsp,0x4d8
   14000f847:	xor    r8,r8
   14000f84a:	xor    r9,r9
   14000f84d:	mov    QWORD PTR [rsp+0x20],rsp
   14000f852:	mov    QWORD PTR [rsp+0x28],r8
   14000f857:	call   0x140025f76
   14000f85c:	add    rsp,0x4d8
   14000f863:	ret    
   14000f864:	int3   
   14000f865:	int3   
   14000f866:	int3   
   14000f867:	int3   
   14000f868:	int3   
   14000f869:	int3   
   14000f86a:	nop    WORD PTR [rax+rax*1+0x0]
   14000f870:	mov    QWORD PTR [rsp+0x8],rcx
   14000f875:	mov    QWORD PTR [rsp+0x18],rdx
   14000f87a:	mov    DWORD PTR [rsp+0x10],r8d
   14000f87f:	mov    r9,0x19930520
   14000f886:	jmp    0x14000f890
   14000f888:	int3   
   14000f889:	int3   
   14000f88a:	int3   
   14000f88b:	int3   
   14000f88c:	int3   
   14000f88d:	int3   
   14000f88e:	xchg   ax,ax
   14000f890:	ret    
   14000f891:	int3   
   14000f892:	int3   
   14000f893:	int3   
   14000f894:	int3   
   14000f895:	int3   
   14000f896:	int3   
   14000f897:	nop    WORD PTR [rax+rax*1+0x0]
   14000f8a0:	ret    
   14000f8a1:	int3   
   14000f8a2:	int3   
   14000f8a3:	int3   
   14000f8a4:	and    DWORD PTR [rip+0x2a795],0x0        # 0x14003a040
   14000f8ab:	ret    
   14000f8ac:	rex push rbx
   14000f8ae:	sub    rsp,0x20
   14000f8b2:	xor    r10d,r10d
   14000f8b5:	mov    r9,rcx
   14000f8b8:	test   rcx,rcx
   14000f8bb:	je     0x14000f8cb
   14000f8bd:	test   rdx,rdx
   14000f8c0:	je     0x14000f8cb
   14000f8c2:	test   r8,r8
   14000f8c5:	jne    0x14000f8e4
   14000f8c7:	mov    WORD PTR [rcx],r10w
   14000f8cb:	call   0x1400095b8
   14000f8d0:	mov    ebx,0x16
   14000f8d5:	mov    DWORD PTR [rax],ebx
   14000f8d7:	call   0x140008628
   14000f8dc:	mov    eax,ebx
   14000f8de:	add    rsp,0x20
   14000f8e2:	pop    rbx
   14000f8e3:	ret    
   14000f8e4:	cmp    WORD PTR [rcx],r10w
   14000f8e8:	je     0x14000f8f3
   14000f8ea:	add    rcx,0x2
   14000f8ee:	dec    rdx
   14000f8f1:	jne    0x14000f8e4
   14000f8f3:	test   rdx,rdx
   14000f8f6:	jne    0x14000f8fe
   14000f8f8:	mov    WORD PTR [r9],r10w
   14000f8fc:	jmp    0x14000f8cb
   14000f8fe:	sub    rcx,r8
   14000f901:	movzx  eax,WORD PTR [r8]
   14000f905:	mov    WORD PTR [rcx+r8*1],ax
   14000f90a:	lea    r8,[r8+0x2]
   14000f90e:	test   ax,ax
   14000f911:	je     0x14000f918
   14000f913:	dec    rdx
   14000f916:	jne    0x14000f901
   14000f918:	test   rdx,rdx
   14000f91b:	jne    0x14000f92d
   14000f91d:	mov    WORD PTR [r9],r10w
   14000f921:	call   0x1400095b8
   14000f926:	mov    ebx,0x22
   14000f92b:	jmp    0x14000f8d5
   14000f92d:	xor    eax,eax
   14000f92f:	jmp    0x14000f8de
   14000f931:	int3   
   14000f932:	int3   
   14000f933:	int3   
   14000f934:	rex push rbx
   14000f936:	sub    rsp,0x20
   14000f93a:	xor    r10d,r10d
   14000f93d:	test   rcx,rcx
   14000f940:	je     0x14000f950
   14000f942:	test   rdx,rdx
   14000f945:	je     0x14000f950
   14000f947:	test   r8,r8
   14000f94a:	jne    0x14000f969
   14000f94c:	mov    WORD PTR [rcx],r10w
   14000f950:	call   0x1400095b8
   14000f955:	mov    ebx,0x16
   14000f95a:	mov    DWORD PTR [rax],ebx
   14000f95c:	call   0x140008628
   14000f961:	mov    eax,ebx
   14000f963:	add    rsp,0x20
   14000f967:	pop    rbx
   14000f968:	ret    
   14000f969:	mov    r9,rcx
   14000f96c:	sub    r9,r8
   14000f96f:	movzx  eax,WORD PTR [r8]
   14000f973:	mov    WORD PTR [r9+r8*1],ax
   14000f978:	lea    r8,[r8+0x2]
   14000f97c:	test   ax,ax
   14000f97f:	je     0x14000f986
   14000f981:	dec    rdx
   14000f984:	jne    0x14000f96f
   14000f986:	test   rdx,rdx
   14000f989:	jne    0x14000f99b
   14000f98b:	mov    WORD PTR [rcx],r10w
   14000f98f:	call   0x1400095b8
   14000f994:	mov    ebx,0x22
   14000f999:	jmp    0x14000f95a
   14000f99b:	xor    eax,eax
   14000f99d:	jmp    0x14000f963
   14000f99f:	int3   
   14000f9a0:	mov    rax,rcx
   14000f9a3:	movzx  edx,WORD PTR [rax]
   14000f9a6:	add    rax,0x2
   14000f9aa:	test   dx,dx
   14000f9ad:	jne    0x14000f9a3
   14000f9af:	sub    rax,rcx
   14000f9b2:	sar    rax,1
   14000f9b5:	dec    rax
   14000f9b8:	ret    
   14000f9b9:	int3   
   14000f9ba:	int3   
   14000f9bb:	int3   
   14000f9bc:	rex push rbx
   14000f9be:	sub    rsp,0x20
   14000f9c2:	xor    ebx,ebx
   14000f9c4:	test   r9,r9
   14000f9c7:	jne    0x14000f9d7
   14000f9c9:	test   rcx,rcx
   14000f9cc:	jne    0x14000f9dc
   14000f9ce:	test   rdx,rdx
   14000f9d1:	jne    0x14000f9f3
   14000f9d3:	xor    eax,eax
   14000f9d5:	jmp    0x14000fa06
   14000f9d7:	test   rcx,rcx
   14000f9da:	je     0x14000f9f3
   14000f9dc:	test   rdx,rdx
   14000f9df:	je     0x14000f9f3
   14000f9e1:	test   r9,r9
   14000f9e4:	jne    0x14000f9eb
   14000f9e6:	mov    WORD PTR [rcx],bx
   14000f9e9:	jmp    0x14000f9d3
   14000f9eb:	test   r8,r8
   14000f9ee:	jne    0x14000fa0c
   14000f9f0:	mov    WORD PTR [rcx],bx
   14000f9f3:	call   0x1400095b8
   14000f9f8:	mov    ebx,0x16
   14000f9fd:	mov    DWORD PTR [rax],ebx
   14000f9ff:	call   0x140008628
   14000fa04:	mov    eax,ebx
   14000fa06:	add    rsp,0x20
   14000fa0a:	pop    rbx
   14000fa0b:	ret    
   14000fa0c:	mov    r11,rcx
   14000fa0f:	mov    r10,rdx
   14000fa12:	cmp    r9,0xffffffffffffffff
   14000fa16:	jne    0x14000fa34
   14000fa18:	sub    r11,r8
   14000fa1b:	movzx  eax,WORD PTR [r8]
   14000fa1f:	mov    WORD PTR [r11+r8*1],ax
   14000fa24:	lea    r8,[r8+0x2]
   14000fa28:	test   ax,ax
   14000fa2b:	je     0x14000fa5c
   14000fa2d:	dec    r10
   14000fa30:	jne    0x14000fa1b
   14000fa32:	jmp    0x14000fa5c
   14000fa34:	sub    r8,rcx
   14000fa37:	movzx  eax,WORD PTR [r8+r11*1]
   14000fa3c:	mov    WORD PTR [r11],ax
   14000fa40:	lea    r11,[r11+0x2]
   14000fa44:	test   ax,ax
   14000fa47:	je     0x14000fa53
   14000fa49:	dec    r10
   14000fa4c:	je     0x14000fa53
   14000fa4e:	dec    r9
   14000fa51:	jne    0x14000fa37
   14000fa53:	test   r9,r9
   14000fa56:	jne    0x14000fa5c
   14000fa58:	mov    WORD PTR [r11],bx
   14000fa5c:	test   r10,r10
   14000fa5f:	jne    0x14000f9d3
   14000fa65:	cmp    r9,0xffffffffffffffff
   14000fa69:	jne    0x14000fa76
   14000fa6b:	mov    WORD PTR [rcx+rdx*2-0x2],bx
   14000fa70:	lea    eax,[r10+0x50]
   14000fa74:	jmp    0x14000fa06
   14000fa76:	mov    WORD PTR [rcx],bx
   14000fa79:	call   0x1400095b8
   14000fa7e:	mov    ebx,0x22
   14000fa83:	jmp    0x14000f9fd
   14000fa88:	rex push rbx
   14000fa8a:	push   rbp
   14000fa8b:	push   rsi
   14000fa8c:	push   rdi
   14000fa8d:	push   r12
   14000fa8f:	push   r14
   14000fa91:	push   r15
   14000fa93:	sub    rsp,0x50
   14000fa97:	mov    rax,QWORD PTR [rip+0x26fa2]        # 0x140036a40
   14000fa9e:	xor    rax,rsp
   14000faa1:	mov    QWORD PTR [rsp+0x48],rax
   14000faa6:	mov    r15,rcx
   14000faa9:	xor    ecx,ecx
   14000faab:	mov    ebp,r8d
   14000faae:	mov    r12,rdx
   14000fab1:	call   QWORD PTR [rip+0x175b9]        # 0x140027070
   14000fab7:	xor    edi,edi
   14000fab9:	mov    rsi,rax
   14000fabc:	call   0x140008d30
   14000fac1:	cmp    QWORD PTR [rip+0x28ee0],rdi        # 0x1400389a8
   14000fac8:	mov    r14d,eax
   14000facb:	jne    0x14000fbc9
   14000fad1:	lea    rcx,[rip+0x1e288]        # 0x14002dd60
   14000fad8:	xor    edx,edx
   14000fada:	mov    r8d,0x800
   14000fae0:	call   QWORD PTR [rip+0x176fa]        # 0x1400271e0
   14000fae6:	mov    rbx,rax
   14000fae9:	test   rax,rax
   14000faec:	jne    0x14000fb1b
   14000faee:	call   QWORD PTR [rip+0x1758c]        # 0x140027080
   14000faf4:	cmp    eax,0x57
   14000faf7:	jne    0x14000fcdd
   14000fafd:	lea    rcx,[rip+0x1e25c]        # 0x14002dd60
   14000fb04:	xor    r8d,r8d
   14000fb07:	xor    edx,edx
   14000fb09:	call   QWORD PTR [rip+0x176d1]        # 0x1400271e0
   14000fb0f:	mov    rbx,rax
   14000fb12:	test   rax,rax
   14000fb15:	je     0x14000fcdd
   14000fb1b:	lea    rdx,[rip+0x1e256]        # 0x14002dd78
   14000fb22:	mov    rcx,rbx
   14000fb25:	call   QWORD PTR [rip+0x1756d]        # 0x140027098
   14000fb2b:	test   rax,rax
   14000fb2e:	je     0x14000fcdd
   14000fb34:	mov    rcx,rax
   14000fb37:	call   QWORD PTR [rip+0x17533]        # 0x140027070
   14000fb3d:	lea    rdx,[rip+0x1e244]        # 0x14002dd88
   14000fb44:	mov    rcx,rbx
   14000fb47:	mov    QWORD PTR [rip+0x28e5a],rax        # 0x1400389a8
   14000fb4e:	call   QWORD PTR [rip+0x17544]        # 0x140027098
   14000fb54:	mov    rcx,rax
   14000fb57:	call   QWORD PTR [rip+0x17513]        # 0x140027070
   14000fb5d:	lea    rdx,[rip+0x1e234]        # 0x14002dd98
   14000fb64:	mov    rcx,rbx
   14000fb67:	mov    QWORD PTR [rip+0x28e42],rax        # 0x1400389b0
   14000fb6e:	call   QWORD PTR [rip+0x17524]        # 0x140027098
   14000fb74:	mov    rcx,rax
   14000fb77:	call   QWORD PTR [rip+0x174f3]        # 0x140027070
   14000fb7d:	lea    rdx,[rip+0x1e22c]        # 0x14002ddb0
   14000fb84:	mov    rcx,rbx
   14000fb87:	mov    QWORD PTR [rip+0x28e2a],rax        # 0x1400389b8
   14000fb8e:	call   QWORD PTR [rip+0x17504]        # 0x140027098
   14000fb94:	mov    rcx,rax
   14000fb97:	call   QWORD PTR [rip+0x174d3]        # 0x140027070
   14000fb9d:	mov    QWORD PTR [rip+0x28e24],rax        # 0x1400389c8
   14000fba4:	test   rax,rax
   14000fba7:	je     0x14000fbc9
   14000fba9:	lea    rdx,[rip+0x1e220]        # 0x14002ddd0
   14000fbb0:	mov    rcx,rbx
   14000fbb3:	call   QWORD PTR [rip+0x174df]        # 0x140027098
   14000fbb9:	mov    rcx,rax
   14000fbbc:	call   QWORD PTR [rip+0x174ae]        # 0x140027070
   14000fbc2:	mov    QWORD PTR [rip+0x28df7],rax        # 0x1400389c0
   14000fbc9:	call   QWORD PTR [rip+0x17531]        # 0x140027100
   14000fbcf:	test   eax,eax
   14000fbd1:	je     0x14000fbf0
   14000fbd3:	test   r15,r15
   14000fbd6:	je     0x14000fbe1
   14000fbd8:	mov    rcx,r15
   14000fbdb:	call   QWORD PTR [rip+0x176bf]        # 0x1400272a0
   14000fbe1:	test   r14d,r14d
   14000fbe4:	je     0x14000fc0c
   14000fbe6:	mov    eax,0x4
   14000fbeb:	jmp    0x14000fcdf
   14000fbf0:	test   r14d,r14d
   14000fbf3:	je     0x14000fc0c
   14000fbf5:	mov    rcx,QWORD PTR [rip+0x28dac]        # 0x1400389a8
   14000fbfc:	call   QWORD PTR [rip+0x17476]        # 0x140027078
   14000fc02:	mov    eax,0x3
   14000fc07:	jmp    0x14000fcdf
   14000fc0c:	mov    rcx,QWORD PTR [rip+0x28dad]        # 0x1400389c0
   14000fc13:	cmp    rcx,rsi
   14000fc16:	je     0x14000fc7b
   14000fc18:	cmp    QWORD PTR [rip+0x28da9],rsi        # 0x1400389c8
   14000fc1f:	je     0x14000fc7b
   14000fc21:	call   QWORD PTR [rip+0x17451]        # 0x140027078
   14000fc27:	mov    rcx,QWORD PTR [rip+0x28d9a]        # 0x1400389c8
   14000fc2e:	mov    rbx,rax
   14000fc31:	call   QWORD PTR [rip+0x17441]        # 0x140027078
   14000fc37:	mov    r14,rax
   14000fc3a:	test   rbx,rbx
   14000fc3d:	je     0x14000fc7b
   14000fc3f:	test   rax,rax
   14000fc42:	je     0x14000fc7b
   14000fc44:	call   rbx
   14000fc46:	test   rax,rax
   14000fc49:	je     0x14000fc75
   14000fc4b:	lea    rcx,[rsp+0x30]
   14000fc50:	mov    r9d,0xc
   14000fc56:	lea    r8,[rsp+0x38]
   14000fc5b:	mov    QWORD PTR [rsp+0x20],rcx
   14000fc60:	lea    edx,[r9-0xb]
   14000fc64:	mov    rcx,rax
   14000fc67:	call   r14
   14000fc6a:	test   eax,eax
   14000fc6c:	je     0x14000fc75
   14000fc6e:	test   BYTE PTR [rsp+0x40],0x1
   14000fc73:	jne    0x14000fc7b
   14000fc75:	bts    ebp,0x15
   14000fc79:	jmp    0x14000fcbb
   14000fc7b:	mov    rcx,QWORD PTR [rip+0x28d2e]        # 0x1400389b0
   14000fc82:	cmp    rcx,rsi
   14000fc85:	je     0x14000fcbb
   14000fc87:	call   QWORD PTR [rip+0x173eb]        # 0x140027078
   14000fc8d:	test   rax,rax
   14000fc90:	je     0x14000fcbb
   14000fc92:	call   rax
   14000fc94:	mov    rdi,rax
   14000fc97:	test   rax,rax
   14000fc9a:	je     0x14000fcbb
   14000fc9c:	mov    rcx,QWORD PTR [rip+0x28d15]        # 0x1400389b8
   14000fca3:	cmp    rcx,rsi
   14000fca6:	je     0x14000fcbb
   14000fca8:	call   QWORD PTR [rip+0x173ca]        # 0x140027078
   14000fcae:	test   rax,rax
   14000fcb1:	je     0x14000fcbb
   14000fcb3:	mov    rcx,rdi
   14000fcb6:	call   rax
   14000fcb8:	mov    rdi,rax
   14000fcbb:	mov    rcx,QWORD PTR [rip+0x28ce6]        # 0x1400389a8
   14000fcc2:	call   QWORD PTR [rip+0x173b0]        # 0x140027078
   14000fcc8:	test   rax,rax
   14000fccb:	je     0x14000fcdd
   14000fccd:	mov    r9d,ebp
   14000fcd0:	mov    r8,r12
   14000fcd3:	mov    rdx,r15
   14000fcd6:	mov    rcx,rdi
   14000fcd9:	call   rax
   14000fcdb:	jmp    0x14000fcdf
   14000fcdd:	xor    eax,eax
   14000fcdf:	mov    rcx,QWORD PTR [rsp+0x48]
   14000fce4:	xor    rcx,rsp
   14000fce7:	call   0x14000d0a0
   14000fcec:	add    rsp,0x50
   14000fcf0:	pop    r15
   14000fcf2:	pop    r14
   14000fcf4:	pop    r12
   14000fcf6:	pop    rdi
   14000fcf7:	pop    rsi
   14000fcf8:	pop    rbp
   14000fcf9:	pop    rbx
   14000fcfa:	ret    
   14000fcfb:	int3   
   14000fcfc:	rex push rbx
   14000fcfe:	sub    rsp,0x20
   14000fd02:	mov    r9d,DWORD PTR [rcx+0x18]
   14000fd06:	mov    r8,QWORD PTR [rcx+0x10]
   14000fd0a:	mov    rdx,QWORD PTR [rcx+0x8]
   14000fd0e:	mov    rbx,rcx
   14000fd11:	xor    ecx,ecx
   14000fd13:	call   QWORD PTR [rbx]
   14000fd15:	mov    DWORD PTR [rbx+0x1c],eax
   14000fd18:	xor    eax,eax
   14000fd1a:	add    rsp,0x20
   14000fd1e:	pop    rbx
   14000fd1f:	ret    
   14000fd20:	mov    ecx,0x2
   14000fd25:	jmp    0x140005ff4
   14000fd2a:	int3   
   14000fd2b:	int3   
   14000fd2c:	lock inc DWORD PTR [rcx]
   14000fd2f:	mov    rax,QWORD PTR [rcx+0xd8]
   14000fd36:	test   rax,rax
   14000fd39:	je     0x14000fd3e
   14000fd3b:	lock inc DWORD PTR [rax]
   14000fd3e:	mov    rax,QWORD PTR [rcx+0xe8]
   14000fd45:	test   rax,rax
   14000fd48:	je     0x14000fd4d
   14000fd4a:	lock inc DWORD PTR [rax]
   14000fd4d:	mov    rax,QWORD PTR [rcx+0xe0]
   14000fd54:	test   rax,rax
   14000fd57:	je     0x14000fd5c
   14000fd59:	lock inc DWORD PTR [rax]
   14000fd5c:	mov    rax,QWORD PTR [rcx+0xf8]
   14000fd63:	test   rax,rax
   14000fd66:	je     0x14000fd6b
   14000fd68:	lock inc DWORD PTR [rax]
   14000fd6b:	lea    rax,[rcx+0x28]
   14000fd6f:	mov    r8d,0x6
   14000fd75:	lea    rdx,[rip+0x26d38]        # 0x140036ab4
   14000fd7c:	cmp    QWORD PTR [rax-0x10],rdx
   14000fd80:	je     0x14000fd8d
   14000fd82:	mov    rdx,QWORD PTR [rax]
   14000fd85:	test   rdx,rdx
   14000fd88:	je     0x14000fd8d
   14000fd8a:	lock inc DWORD PTR [rdx]
   14000fd8d:	cmp    QWORD PTR [rax-0x18],0x0
   14000fd92:	je     0x14000fda0
   14000fd94:	mov    rdx,QWORD PTR [rax-0x8]
   14000fd98:	test   rdx,rdx
   14000fd9b:	je     0x14000fda0
   14000fd9d:	lock inc DWORD PTR [rdx]
   14000fda0:	add    rax,0x20
   14000fda4:	dec    r8
   14000fda7:	jne    0x14000fd75
   14000fda9:	mov    rax,QWORD PTR [rcx+0x120]
   14000fdb0:	lock inc DWORD PTR [rax+0x15c]
   14000fdb7:	ret    
   14000fdb8:	mov    QWORD PTR [rsp+0x8],rbx
   14000fdbd:	mov    QWORD PTR [rsp+0x10],rbp
   14000fdc2:	mov    QWORD PTR [rsp+0x18],rsi
   14000fdc7:	push   rdi
   14000fdc8:	sub    rsp,0x20
   14000fdcc:	mov    rax,QWORD PTR [rcx+0xf0]
   14000fdd3:	mov    rbx,rcx
   14000fdd6:	test   rax,rax
   14000fdd9:	je     0x14000fe54
   14000fddb:	lea    rcx,[rip+0x276be]        # 0x1400374a0
   14000fde2:	cmp    rax,rcx
   14000fde5:	je     0x14000fe54
   14000fde7:	mov    rax,QWORD PTR [rbx+0xd8]
   14000fdee:	test   rax,rax
   14000fdf1:	je     0x14000fe54
   14000fdf3:	cmp    DWORD PTR [rax],0x0
   14000fdf6:	jne    0x14000fe54
   14000fdf8:	mov    rcx,QWORD PTR [rbx+0xe8]
   14000fdff:	test   rcx,rcx
   14000fe02:	je     0x14000fe1a
   14000fe04:	cmp    DWORD PTR [rcx],0x0
   14000fe07:	jne    0x14000fe1a
   14000fe09:	call   0x140006444
   14000fe0e:	mov    rcx,QWORD PTR [rbx+0xf0]
   14000fe15:	call   0x140019dd0
   14000fe1a:	mov    rcx,QWORD PTR [rbx+0xe0]
   14000fe21:	test   rcx,rcx
   14000fe24:	je     0x14000fe3c
   14000fe26:	cmp    DWORD PTR [rcx],0x0
   14000fe29:	jne    0x14000fe3c
   14000fe2b:	call   0x140006444
   14000fe30:	mov    rcx,QWORD PTR [rbx+0xf0]
   14000fe37:	call   0x14001a418
   14000fe3c:	mov    rcx,QWORD PTR [rbx+0xd8]
   14000fe43:	call   0x140006444
   14000fe48:	mov    rcx,QWORD PTR [rbx+0xf0]
   14000fe4f:	call   0x140006444
   14000fe54:	mov    rax,QWORD PTR [rbx+0xf8]
   14000fe5b:	test   rax,rax
   14000fe5e:	je     0x14000fea7
   14000fe60:	cmp    DWORD PTR [rax],0x0
   14000fe63:	jne    0x14000fea7
   14000fe65:	mov    rcx,QWORD PTR [rbx+0x100]
   14000fe6c:	sub    rcx,0xfe
   14000fe73:	call   0x140006444
   14000fe78:	mov    rcx,QWORD PTR [rbx+0x110]
   14000fe7f:	mov    edi,0x80
   14000fe84:	sub    rcx,rdi
   14000fe87:	call   0x140006444
   14000fe8c:	mov    rcx,QWORD PTR [rbx+0x118]
   14000fe93:	sub    rcx,rdi
   14000fe96:	call   0x140006444
   14000fe9b:	mov    rcx,QWORD PTR [rbx+0xf8]
   14000fea2:	call   0x140006444
   14000fea7:	mov    rcx,QWORD PTR [rbx+0x120]
   14000feae:	lea    rax,[rip+0x26c0b]        # 0x140036ac0
   14000feb5:	cmp    rcx,rax
   14000feb8:	je     0x14000fed4
   14000feba:	cmp    DWORD PTR [rcx+0x15c],0x0
   14000fec1:	jne    0x14000fed4
   14000fec3:	call   0x14001a788
   14000fec8:	mov    rcx,QWORD PTR [rbx+0x120]
   14000fecf:	call   0x140006444
   14000fed4:	lea    rsi,[rbx+0x128]
   14000fedb:	lea    rdi,[rbx+0x28]
   14000fedf:	mov    ebp,0x6
   14000fee4:	lea    rax,[rip+0x26bc9]        # 0x140036ab4
   14000feeb:	cmp    QWORD PTR [rdi-0x10],rax
   14000feef:	je     0x14000ff0b
   14000fef1:	mov    rcx,QWORD PTR [rdi]
   14000fef4:	test   rcx,rcx
   14000fef7:	je     0x14000ff0b
   14000fef9:	cmp    DWORD PTR [rcx],0x0
   14000fefc:	jne    0x14000ff0b
   14000fefe:	call   0x140006444
   14000ff03:	mov    rcx,QWORD PTR [rsi]
   14000ff06:	call   0x140006444
   14000ff0b:	cmp    QWORD PTR [rdi-0x18],0x0
   14000ff10:	je     0x14000ff25
   14000ff12:	mov    rcx,QWORD PTR [rdi-0x8]
   14000ff16:	test   rcx,rcx
   14000ff19:	je     0x14000ff25
   14000ff1b:	cmp    DWORD PTR [rcx],0x0
   14000ff1e:	jne    0x14000ff25
   14000ff20:	call   0x140006444
   14000ff25:	add    rsi,0x8
   14000ff29:	add    rdi,0x20
   14000ff2d:	dec    rbp
   14000ff30:	jne    0x14000fee4
   14000ff32:	mov    rcx,rbx
   14000ff35:	mov    rbx,QWORD PTR [rsp+0x30]
   14000ff3a:	mov    rbp,QWORD PTR [rsp+0x38]
   14000ff3f:	mov    rsi,QWORD PTR [rsp+0x40]
   14000ff44:	add    rsp,0x20
   14000ff48:	pop    rdi
   14000ff49:	jmp    0x140006444
   14000ff4e:	int3   
   14000ff4f:	int3   
   14000ff50:	test   rcx,rcx
   14000ff53:	je     0x14000fff0
   14000ff59:	or     r9d,0xffffffff
   14000ff5d:	lock add DWORD PTR [rcx],r9d
   14000ff61:	mov    rax,QWORD PTR [rcx+0xd8]
   14000ff68:	test   rax,rax
   14000ff6b:	je     0x14000ff71
   14000ff6d:	lock add DWORD PTR [rax],r9d
   14000ff71:	mov    rax,QWORD PTR [rcx+0xe8]
   14000ff78:	test   rax,rax
   14000ff7b:	je     0x14000ff81
   14000ff7d:	lock add DWORD PTR [rax],r9d
   14000ff81:	mov    rax,QWORD PTR [rcx+0xe0]
   14000ff88:	test   rax,rax
   14000ff8b:	je     0x14000ff91
   14000ff8d:	lock add DWORD PTR [rax],r9d
   14000ff91:	mov    rax,QWORD PTR [rcx+0xf8]
   14000ff98:	test   rax,rax
   14000ff9b:	je     0x14000ffa1
   14000ff9d:	lock add DWORD PTR [rax],r9d
   14000ffa1:	lea    rax,[rcx+0x28]
   14000ffa5:	mov    r8d,0x6
   14000ffab:	lea    rdx,[rip+0x26b02]        # 0x140036ab4
   14000ffb2:	cmp    QWORD PTR [rax-0x10],rdx
   14000ffb6:	je     0x14000ffc4
   14000ffb8:	mov    rdx,QWORD PTR [rax]
   14000ffbb:	test   rdx,rdx
   14000ffbe:	je     0x14000ffc4
   14000ffc0:	lock add DWORD PTR [rdx],r9d
   14000ffc4:	cmp    QWORD PTR [rax-0x18],0x0
   14000ffc9:	je     0x14000ffd8
   14000ffcb:	mov    rdx,QWORD PTR [rax-0x8]
   14000ffcf:	test   rdx,rdx
   14000ffd2:	je     0x14000ffd8
   14000ffd4:	lock add DWORD PTR [rdx],r9d
   14000ffd8:	add    rax,0x20
   14000ffdc:	dec    r8
   14000ffdf:	jne    0x14000ffab
   14000ffe1:	mov    rax,QWORD PTR [rcx+0x120]
   14000ffe8:	lock add DWORD PTR [rax+0x15c],r9d
   14000fff0:	mov    rax,rcx
   14000fff3:	ret    
   14000fff4:	rex push rbx
   14000fff6:	sub    rsp,0x20
   14000fffa:	call   0x14000b18c
   14000ffff:	mov    rbx,rax
   140010002:	mov    ecx,DWORD PTR [rip+0x26ef0]        # 0x140036ef8
   140010008:	test   DWORD PTR [rax+0xc8],ecx
   14001000e:	je     0x140010028
   140010010:	cmp    QWORD PTR [rax+0xc0],0x0
   140010018:	je     0x140010028
   14001001a:	call   0x14000b18c
   14001001f:	mov    rbx,QWORD PTR [rax+0xc0]
   140010026:	jmp    0x140010053
   140010028:	mov    ecx,0xc
   14001002d:	call   0x140008760
   140010032:	nop
   140010033:	lea    rcx,[rbx+0xc0]
   14001003a:	mov    rdx,QWORD PTR [rip+0x26d3f]        # 0x140036d80
   140010041:	call   0x14001006c
   140010046:	mov    rbx,rax
   140010049:	mov    ecx,0xc
   14001004e:	call   0x14000897c
   140010053:	test   rbx,rbx
   140010056:	jne    0x140010060
   140010058:	lea    ecx,[rbx+0x20]
   14001005b:	call   0x140005ff4
   140010060:	mov    rax,rbx
   140010063:	add    rsp,0x20
   140010067:	pop    rbx
   140010068:	ret    
   140010069:	int3   
   14001006a:	int3   
   14001006b:	int3   
   14001006c:	mov    QWORD PTR [rsp+0x8],rbx
   140010071:	push   rdi
   140010072:	sub    rsp,0x20
   140010076:	mov    rdi,rdx
   140010079:	test   rdx,rdx
   14001007c:	je     0x1400100c1
   14001007e:	test   rcx,rcx
   140010081:	je     0x1400100c1
   140010083:	mov    rbx,QWORD PTR [rcx]
   140010086:	cmp    rbx,rdx
   140010089:	je     0x1400100bc
   14001008b:	mov    QWORD PTR [rcx],rdx
   14001008e:	mov    rcx,rdx
   140010091:	call   0x14000fd2c
   140010096:	test   rbx,rbx
   140010099:	je     0x1400100bc
   14001009b:	mov    rcx,rbx
   14001009e:	call   0x14000ff50
   1400100a3:	cmp    DWORD PTR [rbx],0x0
   1400100a6:	jne    0x1400100bc
   1400100a8:	lea    rax,[rip+0x26ce1]        # 0x140036d90
   1400100af:	cmp    rbx,rax
   1400100b2:	je     0x1400100bc
   1400100b4:	mov    rcx,rbx
   1400100b7:	call   0x14000fdb8
   1400100bc:	mov    rax,rdi
   1400100bf:	jmp    0x1400100c3
   1400100c1:	xor    eax,eax
   1400100c3:	mov    rbx,QWORD PTR [rsp+0x30]
   1400100c8:	add    rsp,0x20
   1400100cc:	pop    rdi
   1400100cd:	ret    
   1400100ce:	int3   
   1400100cf:	int3   
   1400100d0:	rex push rbp
   1400100d2:	push   r12
   1400100d4:	push   r13
   1400100d6:	push   r14
   1400100d8:	push   r15
   1400100da:	sub    rsp,0x50
   1400100de:	lea    rbp,[rsp+0x40]
   1400100e3:	mov    QWORD PTR [rbp+0x40],rbx
   1400100e7:	mov    QWORD PTR [rbp+0x48],rsi
   1400100eb:	mov    QWORD PTR [rbp+0x50],rdi
   1400100ef:	mov    rax,QWORD PTR [rip+0x2694a]        # 0x140036a40
   1400100f6:	xor    rax,rbp
   1400100f9:	mov    QWORD PTR [rbp+0x8],rax
   1400100fd:	mov    ebx,DWORD PTR [rbp+0x60]
   140010100:	xor    edi,edi
   140010102:	mov    r12,r9
   140010105:	mov    r13d,r8d
   140010108:	mov    QWORD PTR [rbp+0x0],rdx
   14001010c:	test   ebx,ebx
   14001010e:	jle    0x14001013a
   140010110:	mov    r10d,ebx
   140010113:	mov    rax,r9
   140010116:	dec    r10d
   140010119:	cmp    BYTE PTR [rax],dil
   14001011c:	je     0x14001012a
   14001011e:	inc    rax
   140010121:	test   r10d,r10d
   140010124:	jne    0x140010116
   140010126:	or     r10d,0xffffffff
   14001012a:	mov    eax,ebx
   14001012c:	sub    eax,r10d
   14001012f:	dec    eax
   140010131:	cmp    eax,ebx
   140010133:	lea    ebx,[rax+0x1]
   140010136:	jl     0x14001013a
   140010138:	mov    ebx,eax
   14001013a:	mov    r14d,DWORD PTR [rbp+0x78]
   14001013e:	mov    esi,edi
   140010140:	test   r14d,r14d
   140010143:	jne    0x14001014c
   140010145:	mov    rax,QWORD PTR [rcx]
   140010148:	mov    r14d,DWORD PTR [rax+0x4]
   14001014c:	neg    DWORD PTR [rbp+0x80]
   140010152:	mov    r9d,ebx
   140010155:	mov    r8,r12
   140010158:	sbb    edx,edx
   14001015a:	mov    ecx,r14d
   14001015d:	mov    DWORD PTR [rsp+0x28],edi
   140010161:	and    edx,0x8
   140010164:	mov    QWORD PTR [rsp+0x20],rdi
   140010169:	inc    edx
   14001016b:	call   QWORD PTR [rip+0x16f37]        # 0x1400270a8
   140010171:	movsxd r15,eax
   140010174:	test   eax,eax
   140010176:	jne    0x14001017f
   140010178:	xor    eax,eax
   14001017a:	jmp    0x140010396
   14001017f:	movabs r9,0xffffffffffffff0
   140010189:	test   eax,eax
   14001018b:	jle    0x1400101fb
   14001018d:	xor    edx,edx
   14001018f:	lea    rax,[rdx-0x20]
   140010193:	div    r15
   140010196:	cmp    rax,0x2
   14001019a:	jb     0x1400101fb
   14001019c:	lea    rcx,[r15+r15*1]
   1400101a0:	lea    rax,[rcx+0x10]
   1400101a4:	cmp    rax,rcx
   1400101a7:	jbe    0x1400101fb
   1400101a9:	lea    rcx,[r15*2+0x10]
   1400101b1:	cmp    rcx,0x400
   1400101b8:	ja     0x1400101e4
   1400101ba:	lea    rax,[rcx+0xf]
   1400101be:	cmp    rax,rcx
   1400101c1:	ja     0x1400101c6
   1400101c3:	mov    rax,r9
   1400101c6:	and    rax,0xfffffffffffffff0
   1400101ca:	call   0x140019d60
   1400101cf:	sub    rsp,rax
   1400101d2:	lea    rdi,[rsp+0x40]
   1400101d7:	test   rdi,rdi
   1400101da:	je     0x140010178
   1400101dc:	mov    DWORD PTR [rdi],0xcccc
   1400101e2:	jmp    0x1400101f7
   1400101e4:	call   0x1400064d4
   1400101e9:	mov    rdi,rax
   1400101ec:	test   rax,rax
   1400101ef:	je     0x1400101fb
   1400101f1:	mov    DWORD PTR [rax],0xdddd
   1400101f7:	add    rdi,0x10
   1400101fb:	test   rdi,rdi
   1400101fe:	je     0x140010178
   140010204:	mov    r9d,ebx
   140010207:	mov    r8,r12
   14001020a:	mov    edx,0x1
   14001020f:	mov    ecx,r14d
   140010212:	mov    DWORD PTR [rsp+0x28],r15d
   140010217:	mov    QWORD PTR [rsp+0x20],rdi
   14001021c:	call   QWORD PTR [rip+0x16e86]        # 0x1400270a8
   140010222:	test   eax,eax
   140010224:	je     0x140010383
   14001022a:	mov    r12,QWORD PTR [rbp+0x0]
   14001022e:	and    DWORD PTR [rsp+0x28],esi
   140010232:	and    QWORD PTR [rsp+0x20],rsi
   140010237:	mov    rcx,r12
   14001023a:	mov    r9d,r15d
   14001023d:	mov    r8,rdi
   140010240:	mov    edx,r13d
   140010243:	call   0x14000f5e8
   140010248:	movsxd rsi,eax
   14001024b:	test   eax,eax
   14001024d:	je     0x140010383
   140010253:	mov    r9d,0x400
   140010259:	test   r9d,r13d
   14001025c:	je     0x140010294
   14001025e:	mov    ecx,DWORD PTR [rbp+0x70]
   140010261:	test   ecx,ecx
   140010263:	je     0x140010383
   140010269:	cmp    esi,ecx
   14001026b:	jg     0x140010383
   140010271:	mov    rax,QWORD PTR [rbp+0x68]
   140010275:	mov    DWORD PTR [rsp+0x28],ecx
   140010279:	mov    r9d,r15d
   14001027c:	mov    r8,rdi
   14001027f:	mov    edx,r13d
   140010282:	mov    rcx,r12
   140010285:	mov    QWORD PTR [rsp+0x20],rax
   14001028a:	call   0x14000f5e8
   14001028f:	jmp    0x140010383
   140010294:	test   eax,eax
   140010296:	jle    0x14001030f
   140010298:	xor    edx,edx
   14001029a:	lea    rax,[rdx-0x20]
   14001029e:	div    rsi
   1400102a1:	cmp    rax,0x2
   1400102a5:	jb     0x14001030f
   1400102a7:	lea    rcx,[rsi+rsi*1]
   1400102ab:	lea    rax,[rcx+0x10]
   1400102af:	cmp    rax,rcx
   1400102b2:	jbe    0x14001030f
   1400102b4:	lea    rcx,[rsi*2+0x10]
   1400102bc:	cmp    rcx,r9
   1400102bf:	ja     0x1400102f6
   1400102c1:	lea    rax,[rcx+0xf]
   1400102c5:	cmp    rax,rcx
   1400102c8:	ja     0x1400102d4
   1400102ca:	movabs rax,0xffffffffffffff0
   1400102d4:	and    rax,0xfffffffffffffff0
   1400102d8:	call   0x140019d60
   1400102dd:	sub    rsp,rax
   1400102e0:	lea    rbx,[rsp+0x40]
   1400102e5:	test   rbx,rbx
   1400102e8:	je     0x140010383
   1400102ee:	mov    DWORD PTR [rbx],0xcccc
   1400102f4:	jmp    0x140010309
   1400102f6:	call   0x1400064d4
   1400102fb:	mov    rbx,rax
   1400102fe:	test   rax,rax
   140010301:	je     0x140010311
   140010303:	mov    DWORD PTR [rax],0xdddd
   140010309:	add    rbx,0x10
   14001030d:	jmp    0x140010311
   14001030f:	xor    ebx,ebx
   140010311:	test   rbx,rbx
   140010314:	je     0x140010383
   140010316:	mov    r9d,r15d
   140010319:	mov    r8,rdi
   14001031c:	mov    edx,r13d
   14001031f:	mov    rcx,r12
   140010322:	mov    DWORD PTR [rsp+0x28],esi
   140010326:	mov    QWORD PTR [rsp+0x20],rbx
   14001032b:	call   0x14000f5e8
   140010330:	xor    ecx,ecx
   140010332:	test   eax,eax
   140010334:	je     0x140010372
   140010336:	mov    eax,DWORD PTR [rbp+0x70]
   140010339:	xor    edx,edx
   14001033b:	mov    QWORD PTR [rsp+0x38],rcx
   140010340:	mov    r9d,esi
   140010343:	mov    r8,rbx
   140010346:	mov    QWORD PTR [rsp+0x30],rcx
   14001034b:	test   eax,eax
   14001034d:	jne    0x14001035a
   14001034f:	mov    DWORD PTR [rsp+0x28],ecx
   140010353:	mov    QWORD PTR [rsp+0x20],rcx
   140010358:	jmp    0x140010367
   14001035a:	mov    DWORD PTR [rsp+0x28],eax
   14001035e:	mov    rax,QWORD PTR [rbp+0x68]
   140010362:	mov    QWORD PTR [rsp+0x20],rax
   140010367:	mov    ecx,r14d
   14001036a:	call   QWORD PTR [rip+0x16d40]        # 0x1400270b0
   140010370:	mov    esi,eax
   140010372:	lea    rcx,[rbx-0x10]
   140010376:	cmp    DWORD PTR [rcx],0xdddd
   14001037c:	jne    0x140010383
   14001037e:	call   0x140006444
   140010383:	lea    rcx,[rdi-0x10]
   140010387:	cmp    DWORD PTR [rcx],0xdddd
   14001038d:	jne    0x140010394
   14001038f:	call   0x140006444
   140010394:	mov    eax,esi
   140010396:	mov    rcx,QWORD PTR [rbp+0x8]
   14001039a:	xor    rcx,rbp
   14001039d:	call   0x14000d0a0
   1400103a2:	mov    rbx,QWORD PTR [rbp+0x40]
   1400103a6:	mov    rsi,QWORD PTR [rbp+0x48]
   1400103aa:	mov    rdi,QWORD PTR [rbp+0x50]
   1400103ae:	lea    rsp,[rbp+0x10]
   1400103b2:	pop    r15
   1400103b4:	pop    r14
   1400103b6:	pop    r13
   1400103b8:	pop    r12
   1400103ba:	pop    rbp
   1400103bb:	ret    
   1400103bc:	mov    eax,edx
   1400103be:	test   edx,edx
   1400103c0:	je     0x1400103d0
   1400103c2:	dec    eax
   1400103c4:	cmp    BYTE PTR [rcx],0x0
   1400103c7:	je     0x1400103d2
   1400103c9:	inc    rcx
   1400103cc:	test   eax,eax
   1400103ce:	jne    0x1400103c2
   1400103d0:	dec    eax
   1400103d2:	sub    edx,eax
   1400103d4:	lea    eax,[rdx-0x1]
   1400103d7:	ret    
   1400103d8:	mov    QWORD PTR [rsp+0x8],rbx
   1400103dd:	mov    QWORD PTR [rsp+0x10],rsi
   1400103e2:	push   rdi
   1400103e3:	sub    rsp,0x70
   1400103e7:	mov    rsi,rdx
   1400103ea:	mov    rdx,rcx
   1400103ed:	lea    rcx,[rsp+0x50]
   1400103f2:	mov    rbx,r9
   1400103f5:	mov    edi,r8d
   1400103f8:	call   0x14000a000
   1400103fd:	mov    eax,DWORD PTR [rsp+0xc0]
   140010404:	lea    rcx,[rsp+0x50]
   140010409:	mov    r9,rbx
   14001040c:	mov    DWORD PTR [rsp+0x40],eax
   140010410:	mov    eax,DWORD PTR [rsp+0xb8]
   140010417:	mov    r8d,edi
   14001041a:	mov    DWORD PTR [rsp+0x38],eax
   14001041e:	mov    eax,DWORD PTR [rsp+0xb0]
   140010425:	mov    rdx,rsi
   140010428:	mov    DWORD PTR [rsp+0x30],eax
   14001042c:	mov    rax,QWORD PTR [rsp+0xa8]
   140010434:	mov    QWORD PTR [rsp+0x28],rax
   140010439:	mov    eax,DWORD PTR [rsp+0xa0]
   140010440:	mov    DWORD PTR [rsp+0x20],eax
   140010444:	call   0x1400100d0
   140010449:	cmp    BYTE PTR [rsp+0x68],0x0
   14001044e:	je     0x14001045c
   140010450:	mov    rcx,QWORD PTR [rsp+0x60]
   140010455:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14001045c:	lea    r11,[rsp+0x70]
   140010461:	mov    rbx,QWORD PTR [r11+0x10]
   140010465:	mov    rsi,QWORD PTR [r11+0x18]
   140010469:	mov    rsp,r11
   14001046c:	pop    rdi
   14001046d:	ret    
   14001046e:	int3   
   14001046f:	int3   
   140010470:	rex push rbp
   140010472:	push   r12
   140010474:	push   r13
   140010476:	push   r14
   140010478:	push   r15
   14001047a:	sub    rsp,0x40
   14001047e:	lea    rbp,[rsp+0x30]
   140010483:	mov    QWORD PTR [rbp+0x40],rbx
   140010487:	mov    QWORD PTR [rbp+0x48],rsi
   14001048b:	mov    QWORD PTR [rbp+0x50],rdi
   14001048f:	mov    rax,QWORD PTR [rip+0x265aa]        # 0x140036a40
   140010496:	xor    rax,rbp
   140010499:	mov    QWORD PTR [rbp+0x0],rax
   14001049d:	mov    r14d,DWORD PTR [rbp+0x68]
   1400104a1:	xor    edi,edi
   1400104a3:	mov    r15d,r9d
   1400104a6:	mov    r12,r8
   1400104a9:	mov    r13d,edx
   1400104ac:	test   r14d,r14d
   1400104af:	jne    0x1400104b8
   1400104b1:	mov    rax,QWORD PTR [rcx]
   1400104b4:	mov    r14d,DWORD PTR [rax+0x4]
   1400104b8:	neg    DWORD PTR [rbp+0x70]
   1400104bb:	mov    ecx,r14d
   1400104be:	mov    DWORD PTR [rsp+0x28],edi
   1400104c2:	sbb    edx,edx
   1400104c4:	mov    QWORD PTR [rsp+0x20],rdi
   1400104c9:	and    edx,0x8
   1400104cc:	inc    edx
   1400104ce:	call   QWORD PTR [rip+0x16bd4]        # 0x1400270a8
   1400104d4:	movsxd rsi,eax
   1400104d7:	test   eax,eax
   1400104d9:	jne    0x1400104e2
   1400104db:	xor    eax,eax
   1400104dd:	jmp    0x1400105c0
   1400104e2:	jle    0x14001055b
   1400104e4:	movabs rax,0x7ffffffffffffff0
   1400104ee:	cmp    rsi,rax
   1400104f1:	ja     0x14001055b
   1400104f3:	lea    rcx,[rsi+rsi*1]
   1400104f7:	lea    rax,[rcx+0x10]
   1400104fb:	cmp    rax,rcx
   1400104fe:	jbe    0x14001055b
   140010500:	lea    rcx,[rsi*2+0x10]
   140010508:	cmp    rcx,0x400
   14001050f:	ja     0x140010542
   140010511:	lea    rax,[rcx+0xf]
   140010515:	cmp    rax,rcx
   140010518:	ja     0x140010524
   14001051a:	movabs rax,0xffffffffffffff0
   140010524:	and    rax,0xfffffffffffffff0
   140010528:	call   0x140019d60
   14001052d:	sub    rsp,rax
   140010530:	lea    rbx,[rsp+0x30]
   140010535:	test   rbx,rbx
   140010538:	je     0x1400104db
   14001053a:	mov    DWORD PTR [rbx],0xcccc
   140010540:	jmp    0x140010555
   140010542:	call   0x1400064d4
   140010547:	mov    rbx,rax
   14001054a:	test   rax,rax
   14001054d:	je     0x14001055e
   14001054f:	mov    DWORD PTR [rax],0xdddd
   140010555:	add    rbx,0x10
   140010559:	jmp    0x14001055e
   14001055b:	mov    rbx,rdi
   14001055e:	test   rbx,rbx
   140010561:	je     0x1400104db
   140010567:	mov    r8,rsi
   14001056a:	xor    edx,edx
   14001056c:	mov    rcx,rbx
   14001056f:	add    r8,r8
   140010572:	call   0x140007150
   140010577:	mov    r9d,r15d
   14001057a:	mov    r8,r12
   14001057d:	mov    edx,0x1
   140010582:	mov    ecx,r14d
   140010585:	mov    DWORD PTR [rsp+0x28],esi
   140010589:	mov    QWORD PTR [rsp+0x20],rbx
   14001058e:	call   QWORD PTR [rip+0x16b14]        # 0x1400270a8
   140010594:	test   eax,eax
   140010596:	je     0x1400105ad
   140010598:	mov    r9,QWORD PTR [rbp+0x60]
   14001059c:	mov    r8d,eax
   14001059f:	mov    rdx,rbx
   1400105a2:	mov    ecx,r13d
   1400105a5:	call   QWORD PTR [rip+0x16cfd]        # 0x1400272a8
   1400105ab:	mov    edi,eax
   1400105ad:	lea    rcx,[rbx-0x10]
   1400105b1:	cmp    DWORD PTR [rcx],0xdddd
   1400105b7:	jne    0x1400105be
   1400105b9:	call   0x140006444
   1400105be:	mov    eax,edi
   1400105c0:	mov    rcx,QWORD PTR [rbp+0x0]
   1400105c4:	xor    rcx,rbp
   1400105c7:	call   0x14000d0a0
   1400105cc:	mov    rbx,QWORD PTR [rbp+0x40]
   1400105d0:	mov    rsi,QWORD PTR [rbp+0x48]
   1400105d4:	mov    rdi,QWORD PTR [rbp+0x50]
   1400105d8:	lea    rsp,[rbp+0x10]
   1400105dc:	pop    r15
   1400105de:	pop    r14
   1400105e0:	pop    r13
   1400105e2:	pop    r12
   1400105e4:	pop    rbp
   1400105e5:	ret    
   1400105e6:	int3   
   1400105e7:	int3   
   1400105e8:	mov    QWORD PTR [rsp+0x8],rbx
   1400105ed:	mov    QWORD PTR [rsp+0x10],rsi
   1400105f2:	push   rdi
   1400105f3:	sub    rsp,0x60
   1400105f7:	mov    esi,edx
   1400105f9:	mov    rdx,rcx
   1400105fc:	lea    rcx,[rsp+0x40]
   140010601:	mov    ebx,r9d
   140010604:	mov    rdi,r8
   140010607:	call   0x14000a000
   14001060c:	mov    eax,DWORD PTR [rsp+0xa0]
   140010613:	lea    rcx,[rsp+0x40]
   140010618:	mov    r9d,ebx
   14001061b:	mov    DWORD PTR [rsp+0x30],eax
   14001061f:	mov    eax,DWORD PTR [rsp+0x98]
   140010626:	mov    r8,rdi
   140010629:	mov    DWORD PTR [rsp+0x28],eax
   14001062d:	mov    rax,QWORD PTR [rsp+0x90]
   140010635:	mov    edx,esi
   140010637:	mov    QWORD PTR [rsp+0x20],rax
   14001063c:	call   0x140010470
   140010641:	cmp    BYTE PTR [rsp+0x58],0x0
   140010646:	je     0x140010654
   140010648:	mov    rcx,QWORD PTR [rsp+0x50]
   14001064d:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140010654:	mov    rbx,QWORD PTR [rsp+0x70]
   140010659:	mov    rsi,QWORD PTR [rsp+0x78]
   14001065e:	add    rsp,0x60
   140010662:	pop    rdi
   140010663:	ret    
   140010664:	mov    QWORD PTR [rsp+0x8],rbx
   140010669:	push   rdi
   14001066a:	sub    rsp,0x20
   14001066e:	mov    eax,DWORD PTR [rip+0x289c4]        # 0x140039038
   140010674:	xor    ebx,ebx
   140010676:	mov    edi,0x14
   14001067b:	test   eax,eax
   14001067d:	jne    0x140010686
   14001067f:	mov    eax,0x200
   140010684:	jmp    0x14001068b
   140010686:	cmp    eax,edi
   140010688:	cmovl  eax,edi
   14001068b:	movsxd rcx,eax
   14001068e:	mov    edx,0x8
   140010693:	mov    DWORD PTR [rip+0x2899f],eax        # 0x140039038
   140010699:	call   0x140007ed4
   14001069e:	mov    QWORD PTR [rip+0x2898b],rax        # 0x140039030
   1400106a5:	test   rax,rax
   1400106a8:	jne    0x1400106ce
   1400106aa:	lea    edx,[rax+0x8]
   1400106ad:	mov    rcx,rdi
   1400106b0:	mov    DWORD PTR [rip+0x28982],edi        # 0x140039038
   1400106b6:	call   0x140007ed4
   1400106bb:	mov    QWORD PTR [rip+0x2896e],rax        # 0x140039030
   1400106c2:	test   rax,rax
   1400106c5:	jne    0x1400106ce
   1400106c7:	mov    eax,0x1a
   1400106cc:	jmp    0x1400106f1
   1400106ce:	lea    rcx,[rip+0x2682b]        # 0x140036f00
   1400106d5:	mov    QWORD PTR [rbx+rax*1],rcx
   1400106d9:	add    rcx,0x30
   1400106dd:	lea    rbx,[rbx+0x8]
   1400106e1:	dec    rdi
   1400106e4:	je     0x1400106ef
   1400106e6:	mov    rax,QWORD PTR [rip+0x28943]        # 0x140039030
   1400106ed:	jmp    0x1400106d5
   1400106ef:	xor    eax,eax
   1400106f1:	mov    rbx,QWORD PTR [rsp+0x30]
   1400106f6:	add    rsp,0x20
   1400106fa:	pop    rdi
   1400106fb:	ret    
   1400106fc:	sub    rsp,0x28
   140010700:	call   0x140010990
   140010705:	cmp    BYTE PTR [rip+0x27628],0x0        # 0x140037d34
   14001070c:	je     0x140010713
   14001070e:	call   0x14001b81c
   140010713:	mov    rcx,QWORD PTR [rip+0x28916]        # 0x140039030
   14001071a:	call   0x140006444
   14001071f:	and    QWORD PTR [rip+0x28909],0x0        # 0x140039030
   140010727:	add    rsp,0x28
   14001072b:	ret    
   14001072c:	lea    rax,[rip+0x267cd]        # 0x140036f00
   140010733:	ret    
   140010734:	rex push rbx
   140010736:	sub    rsp,0x20
   14001073a:	mov    rbx,rcx
   14001073d:	lea    rcx,[rip+0x267bc]        # 0x140036f00
   140010744:	cmp    rbx,rcx
   140010747:	jb     0x140010789
   140010749:	lea    rax,[rip+0x26b40]        # 0x140037290
   140010750:	cmp    rbx,rax
   140010753:	ja     0x140010789
   140010755:	mov    rdx,rbx
   140010758:	movabs rax,0x2aaaaaaaaaaaaaab
   140010762:	sub    rdx,rcx
   140010765:	imul   rdx
   140010768:	sar    rdx,0x3
   14001076c:	mov    rcx,rdx
   14001076f:	shr    rcx,0x3f
   140010773:	add    rcx,rdx
   140010776:	add    ecx,0x10
   140010779:	call   0x140008760
   14001077e:	bts    DWORD PTR [rbx+0x18],0xf
   140010783:	add    rsp,0x20
   140010787:	pop    rbx
   140010788:	ret    
   140010789:	lea    rcx,[rbx+0x30]
   14001078d:	add    rsp,0x20
   140010791:	pop    rbx
   140010792:	rex.W jmp QWORD PTR [rip+0x1696f]        # 0x140027108
   140010799:	int3   
   14001079a:	int3   
   14001079b:	int3   
   14001079c:	rex push rbx
   14001079e:	sub    rsp,0x20
   1400107a2:	mov    rbx,rdx
   1400107a5:	cmp    ecx,0x14
   1400107a8:	jge    0x1400107bd
   1400107aa:	add    ecx,0x10
   1400107ad:	call   0x140008760
   1400107b2:	bts    DWORD PTR [rbx+0x18],0xf
   1400107b7:	add    rsp,0x20
   1400107bb:	pop    rbx
   1400107bc:	ret    
   1400107bd:	lea    rcx,[rdx+0x30]
   1400107c1:	add    rsp,0x20
   1400107c5:	pop    rbx
   1400107c6:	rex.W jmp QWORD PTR [rip+0x1693b]        # 0x140027108
   1400107cd:	int3   
   1400107ce:	int3   
   1400107cf:	int3   
   1400107d0:	lea    rdx,[rip+0x26729]        # 0x140036f00
   1400107d7:	cmp    rcx,rdx
   1400107da:	jb     0x140010813
   1400107dc:	lea    rax,[rip+0x26aad]        # 0x140037290
   1400107e3:	cmp    rcx,rax
   1400107e6:	ja     0x140010813
   1400107e8:	btr    DWORD PTR [rcx+0x18],0xf
   1400107ed:	sub    rcx,rdx
   1400107f0:	movabs rax,0x2aaaaaaaaaaaaaab
   1400107fa:	imul   rcx
   1400107fd:	sar    rdx,0x3
   140010801:	mov    rcx,rdx
   140010804:	shr    rcx,0x3f
   140010808:	add    rcx,rdx
   14001080b:	add    ecx,0x10
   14001080e:	jmp    0x14000897c
   140010813:	add    rcx,0x30
   140010817:	rex.W jmp QWORD PTR [rip+0x168f2]        # 0x140027110
   14001081e:	int3   
   14001081f:	int3   
   140010820:	cmp    ecx,0x14
   140010823:	jge    0x140010832
   140010825:	btr    DWORD PTR [rdx+0x18],0xf
   14001082a:	add    ecx,0x10
   14001082d:	jmp    0x14000897c
   140010832:	lea    rcx,[rdx+0x30]
   140010836:	rex.W jmp QWORD PTR [rip+0x168d3]        # 0x140027110
   14001083d:	int3   
   14001083e:	int3   
   14001083f:	int3   
   140010840:	sub    rsp,0x28
   140010844:	test   rcx,rcx
   140010847:	jne    0x14001085e
   140010849:	call   0x1400095b8
   14001084e:	mov    DWORD PTR [rax],0x16
   140010854:	call   0x140008628
   140010859:	or     eax,0xffffffff
   14001085c:	jmp    0x140010861
   14001085e:	mov    eax,DWORD PTR [rcx+0x1c]
   140010861:	add    rsp,0x28
   140010865:	ret    
   140010866:	int3   
   140010867:	int3   
   140010868:	sub    rsp,0x28
   14001086c:	cmp    ecx,0xfffffffe
   14001086f:	jne    0x14001087e
   140010871:	call   0x1400095b8
   140010876:	mov    DWORD PTR [rax],0x9
   14001087c:	jmp    0x1400108c0
   14001087e:	test   ecx,ecx
   140010880:	js     0x1400108b0
   140010882:	cmp    ecx,DWORD PTR [rip+0x297bc]        # 0x14003a044
   140010888:	jae    0x1400108b0
   14001088a:	movsxd rcx,ecx
   14001088d:	lea    rdx,[rip+0x27dfc]        # 0x140038690
   140010894:	mov    rax,rcx
   140010897:	and    ecx,0x1f
   14001089a:	sar    rax,0x5
   14001089e:	imul   rcx,rcx,0x58
   1400108a2:	mov    rax,QWORD PTR [rdx+rax*8]
   1400108a6:	movsx  eax,BYTE PTR [rax+rcx*1+0x8]
   1400108ab:	and    eax,0x40
   1400108ae:	jmp    0x1400108c2
   1400108b0:	call   0x1400095b8
   1400108b5:	mov    DWORD PTR [rax],0x9
   1400108bb:	call   0x140008628
   1400108c0:	xor    eax,eax
   1400108c2:	add    rsp,0x28
   1400108c6:	ret    
   1400108c7:	int3   
   1400108c8:	rex push rbx
   1400108ca:	sub    rsp,0x20
   1400108ce:	mov    rbx,rcx
   1400108d1:	test   rcx,rcx
   1400108d4:	jne    0x1400108e0
   1400108d6:	add    rsp,0x20
   1400108da:	pop    rbx
   1400108db:	jmp    0x1400109e0
   1400108e0:	call   0x140010914
   1400108e5:	test   eax,eax
   1400108e7:	je     0x1400108ee
   1400108e9:	or     eax,0xffffffff
   1400108ec:	jmp    0x14001090e
   1400108ee:	test   DWORD PTR [rbx+0x18],0x4000
   1400108f5:	je     0x14001090c
   1400108f7:	mov    rcx,rbx
   1400108fa:	call   0x140010840
   1400108ff:	mov    ecx,eax
   140010901:	call   0x14001b8c4
   140010906:	neg    eax
   140010908:	sbb    eax,eax
   14001090a:	jmp    0x14001090e
   14001090c:	xor    eax,eax
   14001090e:	add    rsp,0x20
   140010912:	pop    rbx
   140010913:	ret    
   140010914:	mov    QWORD PTR [rsp+0x8],rbx
   140010919:	mov    QWORD PTR [rsp+0x10],rsi
   14001091e:	push   rdi
   14001091f:	sub    rsp,0x20
   140010923:	mov    eax,DWORD PTR [rcx+0x18]
   140010926:	xor    esi,esi
   140010928:	mov    rbx,rcx
   14001092b:	and    al,0x3
   14001092d:	cmp    al,0x2
   14001092f:	jne    0x140010970
   140010931:	test   DWORD PTR [rcx+0x18],0x108
   140010938:	je     0x140010970
   14001093a:	mov    edi,DWORD PTR [rcx]
   14001093c:	sub    edi,DWORD PTR [rcx+0x10]
   14001093f:	test   edi,edi
   140010941:	jle    0x140010970
   140010943:	call   0x140010840
   140010948:	mov    rdx,QWORD PTR [rbx+0x10]
   14001094c:	mov    r8d,edi
   14001094f:	mov    ecx,eax
   140010951:	call   0x14001b99c
   140010956:	cmp    eax,edi
   140010958:	jne    0x140010969
   14001095a:	mov    eax,DWORD PTR [rbx+0x18]
   14001095d:	test   al,al
   14001095f:	jns    0x140010970
   140010961:	and    eax,0xfffffffd
   140010964:	mov    DWORD PTR [rbx+0x18],eax
   140010967:	jmp    0x140010970
   140010969:	or     DWORD PTR [rbx+0x18],0x20
   14001096d:	or     esi,0xffffffff
   140010970:	mov    rcx,QWORD PTR [rbx+0x10]
   140010974:	and    DWORD PTR [rbx+0x8],0x0
   140010978:	mov    eax,esi
   14001097a:	mov    rsi,QWORD PTR [rsp+0x38]
   14001097f:	mov    QWORD PTR [rbx],rcx
   140010982:	mov    rbx,QWORD PTR [rsp+0x30]
   140010987:	add    rsp,0x20
   14001098b:	pop    rdi
   14001098c:	ret    
   14001098d:	int3   
   14001098e:	int3   
   14001098f:	int3   
   140010990:	mov    ecx,0x1
   140010995:	jmp    0x1400109e0
   14001099a:	int3   
   14001099b:	int3   
   14001099c:	mov    QWORD PTR [rsp+0x10],rbx
   1400109a1:	mov    QWORD PTR [rsp+0x8],rcx
   1400109a6:	push   rdi
   1400109a7:	sub    rsp,0x20
   1400109ab:	mov    rbx,rcx
   1400109ae:	test   rcx,rcx
   1400109b1:	jne    0x1400109ba
   1400109b3:	call   0x1400109e0
   1400109b8:	jmp    0x1400109d4
   1400109ba:	call   0x140010734
   1400109bf:	nop
   1400109c0:	mov    rcx,rbx
   1400109c3:	call   0x1400108c8
   1400109c8:	mov    edi,eax
   1400109ca:	mov    rcx,rbx
   1400109cd:	call   0x1400107d0
   1400109d2:	mov    eax,edi
   1400109d4:	mov    rbx,QWORD PTR [rsp+0x38]
   1400109d9:	add    rsp,0x20
   1400109dd:	pop    rdi
   1400109de:	ret    
   1400109df:	int3   
   1400109e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400109e5:	mov    QWORD PTR [rsp+0x10],rsi
   1400109ea:	mov    QWORD PTR [rsp+0x18],rdi
   1400109ef:	push   r13
   1400109f1:	push   r14
   1400109f3:	push   r15
   1400109f5:	sub    rsp,0x30
   1400109f9:	mov    r14d,ecx
   1400109fc:	xor    esi,esi
   1400109fe:	xor    edi,edi
   140010a00:	lea    ecx,[rsi+0x1]
   140010a03:	call   0x140008760
   140010a08:	nop
   140010a09:	xor    ebx,ebx
   140010a0b:	or     r13d,0xffffffff
   140010a0f:	mov    DWORD PTR [rsp+0x20],ebx
   140010a13:	cmp    ebx,DWORD PTR [rip+0x2861f]        # 0x140039038
   140010a19:	jge    0x140010a99
   140010a1b:	movsxd r15,ebx
   140010a1e:	mov    rax,QWORD PTR [rip+0x2860b]        # 0x140039030
   140010a25:	mov    rdx,QWORD PTR [rax+r15*8]
   140010a29:	test   rdx,rdx
   140010a2c:	je     0x140010a92
   140010a2e:	test   BYTE PTR [rdx+0x18],0x83
   140010a32:	je     0x140010a92
   140010a34:	mov    ecx,ebx
   140010a36:	call   0x14001079c
   140010a3b:	nop
   140010a3c:	mov    rax,QWORD PTR [rip+0x285ed]        # 0x140039030
   140010a43:	mov    rcx,QWORD PTR [rax+r15*8]
   140010a47:	test   BYTE PTR [rcx+0x18],0x83
   140010a4b:	je     0x140010a80
   140010a4d:	cmp    r14d,0x1
   140010a51:	jne    0x140010a65
   140010a53:	call   0x1400108c8
   140010a58:	cmp    eax,r13d
   140010a5b:	je     0x140010a80
   140010a5d:	inc    esi
   140010a5f:	mov    DWORD PTR [rsp+0x24],esi
   140010a63:	jmp    0x140010a80
   140010a65:	test   r14d,r14d
   140010a68:	jne    0x140010a80
   140010a6a:	test   BYTE PTR [rcx+0x18],0x2
   140010a6e:	je     0x140010a80
   140010a70:	call   0x1400108c8
   140010a75:	cmp    eax,r13d
   140010a78:	cmove  edi,r13d
   140010a7c:	mov    DWORD PTR [rsp+0x28],edi
   140010a80:	mov    rdx,QWORD PTR [rip+0x285a9]        # 0x140039030
   140010a87:	mov    rdx,QWORD PTR [rdx+r15*8]
   140010a8b:	mov    ecx,ebx
   140010a8d:	call   0x140010820
   140010a92:	inc    ebx
   140010a94:	jmp    0x140010a0f
   140010a99:	mov    ecx,0x1
   140010a9e:	call   0x14000897c
   140010aa3:	cmp    r14d,0x1
   140010aa7:	cmove  edi,esi
   140010aaa:	mov    eax,edi
   140010aac:	mov    rbx,QWORD PTR [rsp+0x50]
   140010ab1:	mov    rsi,QWORD PTR [rsp+0x58]
   140010ab6:	mov    rdi,QWORD PTR [rsp+0x60]
   140010abb:	add    rsp,0x30
   140010abf:	pop    r15
   140010ac1:	pop    r14
   140010ac3:	pop    r13
   140010ac5:	ret    
   140010ac6:	int3   
   140010ac7:	int3   
   140010ac8:	int3   
   140010ac9:	int3   
   140010aca:	int3   
   140010acb:	int3   
   140010acc:	int3   
   140010acd:	int3   
   140010ace:	int3   
   140010acf:	int3   
   140010ad0:	int3   
   140010ad1:	int3   
   140010ad2:	int3   
   140010ad3:	int3   
   140010ad4:	int3   
   140010ad5:	int3   
   140010ad6:	data16 nop WORD PTR [rax+rax*1+0x0]
   140010ae0:	sub    rsp,0x8
   140010ae4:	stmxcsr DWORD PTR [rsp]
   140010ae8:	mov    eax,DWORD PTR [rsp]
   140010aeb:	add    rsp,0x8
   140010aef:	ret    
   140010af0:	mov    DWORD PTR [rsp+0x8],ecx
   140010af4:	ldmxcsr DWORD PTR [rsp+0x8]
   140010af9:	ret    
   140010afa:	stmxcsr DWORD PTR [rsp+0x8]
   140010aff:	mov    ecx,0xffffffc0
   140010b04:	and    DWORD PTR [rsp+0x8],ecx
   140010b08:	ldmxcsr DWORD PTR [rsp+0x8]
   140010b0d:	ret    
   140010b0e:	ucomisd xmm0,QWORD PTR [rip+0x1d68a]        # 0x14002e1a0
   140010b16:	jae    0x140010b2c
   140010b18:	ucomisd xmm0,QWORD PTR [rip+0x1d688]        # 0x14002e1a8
   140010b20:	jbe    0x140010b2c
   140010b22:	cvtsd2si rcx,xmm0
   140010b27:	cvtsi2sd xmm0,rcx
   140010b2c:	ret    
   140010b2d:	int3   
   140010b2e:	int3   
   140010b2f:	int3   
   140010b30:	mov    eax,ecx
   140010b32:	test   cl,0x20
   140010b35:	je     0x140010b3e
   140010b37:	mov    ecx,0x5
   140010b3c:	jmp    0x140010b70
   140010b3e:	test   al,0x8
   140010b40:	je     0x140010b49
   140010b42:	mov    ecx,0x1
   140010b47:	jmp    0x140010b70
   140010b49:	test   al,0x4
   140010b4b:	je     0x140010b54
   140010b4d:	mov    ecx,0x2
   140010b52:	jmp    0x140010b70
   140010b54:	mov    ecx,0x1
   140010b59:	test   cl,al
   140010b5b:	je     0x140010b64
   140010b5d:	mov    ecx,0x3
   140010b62:	jmp    0x140010b70
   140010b64:	movzx  eax,al
   140010b67:	mov    ecx,0x2
   140010b6c:	and    ecx,eax
   140010b6e:	add    ecx,ecx
   140010b70:	mov    eax,ecx
   140010b72:	ret    
   140010b73:	int3   
   140010b74:	mov    rax,rsp
   140010b77:	mov    QWORD PTR [rax+0x10],rbx
   140010b7b:	push   rbp
   140010b7c:	push   rsi
   140010b7d:	push   rdi
   140010b7e:	lea    rbp,[rax-0x57]
   140010b82:	sub    rsp,0xe0
   140010b89:	movaps XMMWORD PTR [rax-0x28],xmm6
   140010b8d:	mov    rax,QWORD PTR [rip+0x25eac]        # 0x140036a40
   140010b94:	xor    rax,rsp
   140010b97:	mov    QWORD PTR [rbp+0x1f],rax
   140010b9b:	mov    rbx,QWORD PTR [rbp+0x7f]
   140010b9f:	mov    esi,edx
   140010ba1:	lea    rdx,[rbp-0x61]
   140010ba5:	movsd  QWORD PTR [rbp-0x59],xmm2
   140010baa:	movsd  QWORD PTR [rbp-0x61],xmm3
   140010baf:	movaps xmm6,xmm2
   140010bb2:	mov    r8,rbx
   140010bb5:	mov    edi,ecx
   140010bb7:	call   0x140010d9c
   140010bbc:	test   eax,eax
   140010bbe:	jne    0x140010bf1
   140010bc0:	and    DWORD PTR [rsp+0x30],eax
   140010bc4:	and    DWORD PTR [rbp-0x11],0xfffffffe
   140010bc8:	lea    rax,[rbp-0x61]
   140010bcc:	mov    QWORD PTR [rsp+0x28],rax
   140010bd1:	lea    rax,[rbp-0x59]
   140010bd5:	lea    rdx,[rbp+0x7f]
   140010bd9:	lea    rcx,[rbp-0x51]
   140010bdd:	mov    r9d,esi
   140010be0:	mov    r8d,edi
   140010be3:	mov    QWORD PTR [rsp+0x20],rax
   140010be8:	call   0x1400110ec
   140010bed:	mov    rbx,QWORD PTR [rbp+0x7f]
   140010bf1:	mov    ecx,edi
   140010bf3:	call   0x140010b30
   140010bf8:	cmp    DWORD PTR [rip+0x26891],0x0        # 0x140037490
   140010bff:	jne    0x140010c26
   140010c01:	test   eax,eax
   140010c03:	je     0x140010c26
   140010c05:	movsd  xmm0,QWORD PTR [rbp-0x61]
   140010c0a:	xorps  xmm3,xmm3
   140010c0d:	movaps xmm2,xmm6
   140010c10:	mov    edx,esi
   140010c12:	mov    ecx,eax
   140010c14:	mov    QWORD PTR [rsp+0x28],rbx
   140010c19:	movsd  QWORD PTR [rsp+0x20],xmm0
   140010c1f:	call   0x14001144c
   140010c24:	jmp    0x140010c3f
   140010c26:	mov    ecx,eax
   140010c28:	call   0x14001141c
   140010c2d:	mov    edx,0xffc0
   140010c32:	mov    rcx,rbx
   140010c35:	call   0x14000abd4
   140010c3a:	movsd  xmm0,QWORD PTR [rbp-0x61]
   140010c3f:	mov    rcx,QWORD PTR [rbp+0x1f]
   140010c43:	xor    rcx,rsp
   140010c46:	call   0x14000d0a0
   140010c4b:	lea    r11,[rsp+0xe0]
   140010c53:	mov    rbx,QWORD PTR [r11+0x28]
   140010c57:	movaps xmm6,XMMWORD PTR [r11-0x10]
   140010c5c:	mov    rsp,r11
   140010c5f:	pop    rdi
   140010c60:	pop    rsi
   140010c61:	pop    rbp
   140010c62:	ret    
   140010c63:	int3   
   140010c64:	mov    rax,rsp
   140010c67:	mov    QWORD PTR [rax+0x10],rbx
   140010c6b:	push   rbp
   140010c6c:	push   rsi
   140010c6d:	push   rdi
   140010c6e:	lea    rbp,[rax-0x4f]
   140010c72:	sub    rsp,0xf0
   140010c79:	movaps XMMWORD PTR [rax-0x28],xmm6
   140010c7d:	movaps XMMWORD PTR [rax-0x38],xmm7
   140010c81:	mov    rax,QWORD PTR [rip+0x25db8]        # 0x140036a40
   140010c88:	xor    rax,rsp
   140010c8b:	mov    QWORD PTR [rbp+0x7],rax
   140010c8f:	mov    rbx,QWORD PTR [rbp+0x7f]
   140010c93:	mov    esi,edx
   140010c95:	lea    rdx,[rbp+0x77]
   140010c99:	movsd  QWORD PTR [rbp-0x79],xmm2
   140010c9e:	movaps xmm6,xmm3
   140010ca1:	movaps xmm7,xmm2
   140010ca4:	mov    r8,rbx
   140010ca7:	mov    edi,ecx
   140010ca9:	call   0x140010d9c
   140010cae:	test   eax,eax
   140010cb0:	jne    0x140010cf1
   140010cb2:	mov    eax,DWORD PTR [rbp-0x29]
   140010cb5:	and    DWORD PTR [rsp+0x30],0x0
   140010cba:	lea    rdx,[rbp+0x7f]
   140010cbe:	movsd  QWORD PTR [rbp-0x39],xmm6
   140010cc3:	and    eax,0xffffffe3
   140010cc6:	lea    rcx,[rbp-0x69]
   140010cca:	mov    r9d,esi
   140010ccd:	or     eax,0x3
   140010cd0:	mov    r8d,edi
   140010cd3:	mov    DWORD PTR [rbp-0x29],eax
   140010cd6:	lea    rax,[rbp+0x77]
   140010cda:	mov    QWORD PTR [rsp+0x28],rax
   140010cdf:	lea    rax,[rbp-0x79]
   140010ce3:	mov    QWORD PTR [rsp+0x20],rax
   140010ce8:	call   0x1400110ec
   140010ced:	mov    rbx,QWORD PTR [rbp+0x7f]
   140010cf1:	mov    ecx,edi
   140010cf3:	call   0x140010b30
   140010cf8:	cmp    DWORD PTR [rip+0x26791],0x0        # 0x140037490
   140010cff:	jne    0x140010d26
   140010d01:	test   eax,eax
   140010d03:	je     0x140010d26
   140010d05:	movsd  xmm0,QWORD PTR [rbp+0x77]
   140010d0a:	movaps xmm3,xmm6
   140010d0d:	movaps xmm2,xmm7
   140010d10:	mov    edx,esi
   140010d12:	mov    ecx,eax
   140010d14:	mov    QWORD PTR [rsp+0x28],rbx
   140010d19:	movsd  QWORD PTR [rsp+0x20],xmm0
   140010d1f:	call   0x14001144c
   140010d24:	jmp    0x140010d3f
   140010d26:	mov    ecx,eax
   140010d28:	call   0x14001141c
   140010d2d:	mov    edx,0xffc0
   140010d32:	mov    rcx,rbx
   140010d35:	call   0x14000abd4
   140010d3a:	movsd  xmm0,QWORD PTR [rbp+0x77]
   140010d3f:	mov    rcx,QWORD PTR [rbp+0x7]
   140010d43:	xor    rcx,rsp
   140010d46:	call   0x14000d0a0
   140010d4b:	lea    r11,[rsp+0xf0]
   140010d53:	mov    rbx,QWORD PTR [r11+0x28]
   140010d57:	movaps xmm6,XMMWORD PTR [r11-0x10]
   140010d5c:	movaps xmm7,XMMWORD PTR [r11-0x20]
   140010d61:	mov    rsp,r11
   140010d64:	pop    rdi
   140010d65:	pop    rsi
   140010d66:	pop    rbp
   140010d67:	ret    
   140010d68:	lea    r9,[rip+0x26551]        # 0x1400372c0
   140010d6f:	xor    edx,edx
   140010d71:	mov    rax,r9
   140010d74:	cmp    DWORD PTR [rax],ecx
   140010d76:	je     0x140010d8d
   140010d78:	lea    r8,[rip+0x26711]        # 0x140037490
   140010d7f:	add    rax,0x10
   140010d83:	inc    edx
   140010d85:	cmp    rax,r8
   140010d88:	jl     0x140010d74
   140010d8a:	xor    eax,eax
   140010d8c:	ret    
   140010d8d:	movsxd rax,edx
   140010d90:	add    rax,rax
   140010d93:	mov    rax,QWORD PTR [r9+rax*8+0x8]
   140010d98:	ret    
   140010d99:	int3   
   140010d9a:	int3   
   140010d9b:	int3   
   140010d9c:	mov    QWORD PTR [rsp+0x10],rbx
   140010da1:	push   rbp
   140010da2:	push   rsi
   140010da3:	push   rdi
   140010da4:	push   r12
   140010da6:	push   r13
   140010da8:	push   r14
   140010daa:	push   r15
   140010dac:	sub    rsp,0x30
   140010db0:	xor    r14d,r14d
   140010db3:	mov    ebx,ecx
   140010db5:	movaps XMMWORD PTR [rsp+0x20],xmm6
   140010dba:	and    ebx,0x1f
   140010dbd:	mov    r15,r8
   140010dc0:	mov    rsi,rdx
   140010dc3:	mov    r12d,ecx
   140010dc6:	lea    r13d,[r14+0x10]
   140010dca:	test   cl,0x8
   140010dcd:	je     0x140010de5
   140010dcf:	test   r15b,r15b
   140010dd2:	jns    0x140010de5
   140010dd4:	lea    ecx,[r14+0x1]
   140010dd8:	call   0x14000ac50
   140010ddd:	and    ebx,0xfffffff7
   140010de0:	jmp    0x140010fc2
   140010de5:	mov    ecx,0x4
   140010dea:	test   cl,r12b
   140010ded:	je     0x140010e03
   140010def:	bt     r8,0x9
   140010df4:	jae    0x140010e03
   140010df6:	call   0x14000ac50
   140010dfb:	and    ebx,0xfffffffb
   140010dfe:	jmp    0x140010fc2
   140010e03:	mov    edi,0x1
   140010e08:	test   dil,r12b
   140010e0b:	je     0x140010ec1
   140010e11:	bt     r8,0xa
   140010e16:	jae    0x140010ec1
   140010e1c:	lea    ecx,[rdi+0x7]
   140010e1f:	call   0x14000ac50
   140010e24:	mov    rax,r15
   140010e27:	mov    ecx,0x6000
   140010e2c:	and    rax,rcx
   140010e2f:	je     0x140010e8e
   140010e31:	cmp    rax,0x2000
   140010e37:	je     0x140010e76
   140010e39:	cmp    rax,0x4000
   140010e3f:	je     0x140010e5e
   140010e41:	cmp    rax,rcx
   140010e44:	jne    0x140010eb9
   140010e46:	movsd  xmm0,QWORD PTR [rsi]
   140010e4a:	comisd xmm0,QWORD PTR [rip+0x19b1e]        # 0x14002a970
   140010e52:	movsd  xmm0,QWORD PTR [rip+0x2670e]        # 0x140037568
   140010e5a:	ja     0x140010eb5
   140010e5c:	jmp    0x140010eae
   140010e5e:	movsd  xmm0,QWORD PTR [rsi]
   140010e62:	comisd xmm0,QWORD PTR [rip+0x19b06]        # 0x14002a970
   140010e6a:	ja     0x140010e9c
   140010e6c:	movsd  xmm0,QWORD PTR [rip+0x266f4]        # 0x140037568
   140010e74:	jmp    0x140010eae
   140010e76:	movsd  xmm0,QWORD PTR [rsi]
   140010e7a:	comisd xmm0,QWORD PTR [rip+0x19aee]        # 0x14002a970
   140010e82:	jbe    0x140010ea6
   140010e84:	movsd  xmm0,QWORD PTR [rip+0x266dc]        # 0x140037568
   140010e8c:	jmp    0x140010eb5
   140010e8e:	movsd  xmm0,QWORD PTR [rsi]
   140010e92:	comisd xmm0,QWORD PTR [rip+0x19ad6]        # 0x14002a970
   140010e9a:	jbe    0x140010ea6
   140010e9c:	movsd  xmm0,QWORD PTR [rip+0x266b4]        # 0x140037558
   140010ea4:	jmp    0x140010eb5
   140010ea6:	movsd  xmm0,QWORD PTR [rip+0x266aa]        # 0x140037558
   140010eae:	xorps  xmm0,XMMWORD PTR [rip+0x1d3cb]        # 0x14002e280
   140010eb5:	movsd  QWORD PTR [rsi],xmm0
   140010eb9:	and    ebx,0xfffffffe
   140010ebc:	jmp    0x140010fc2
   140010ec1:	test   r12b,0x2
   140010ec5:	je     0x140010fc2
   140010ecb:	bt     r8,0xb
   140010ed0:	jae    0x140010fc2
   140010ed6:	movsd  xmm0,QWORD PTR [rdx]
   140010eda:	test   r13b,r12b
   140010edd:	xorps  xmm6,xmm6
   140010ee0:	mov    ebp,r14d
   140010ee3:	cmovne ebp,edi
   140010ee6:	ucomisd xmm0,xmm6
   140010eea:	jp     0x140010ef5
   140010eec:	jne    0x140010ef5
   140010eee:	mov    ebp,edi
   140010ef0:	jmp    0x140010fb3
   140010ef5:	lea    rdx,[rsp+0x70]
   140010efa:	call   0x14001c2c4
   140010eff:	mov    ecx,DWORD PTR [rsp+0x70]
   140010f03:	add    ecx,0xfffffa00
   140010f09:	movsd  QWORD PTR [rsp+0x88],xmm0
   140010f12:	cmp    ecx,0xfffffbce
   140010f18:	jge    0x140010f25
   140010f1a:	mulsd  xmm0,xmm6
   140010f1e:	mov    ebp,edi
   140010f20:	jmp    0x140010faf
   140010f25:	mov    rax,QWORD PTR [rsp+0x88]
   140010f2d:	comisd xmm6,xmm0
   140010f31:	mov    r8d,r14d
   140010f34:	seta   r8b
   140010f38:	shr    rax,0x30
   140010f3c:	and    ax,0xf
   140010f40:	or     ax,r13w
   140010f44:	mov    WORD PTR [rsp+0x8e],ax
   140010f4c:	cmp    ecx,0xfffffc03
   140010f52:	jge    0x140010f9a
   140010f54:	mov    eax,DWORD PTR [rsp+0x88]
   140010f5b:	mov    edx,0xfffffc03
   140010f60:	sub    edx,ecx
   140010f62:	mov    ecx,DWORD PTR [rsp+0x8c]
   140010f69:	test   dil,al
   140010f6c:	je     0x140010f73
   140010f6e:	test   ebp,ebp
   140010f70:	cmove  ebp,edi
   140010f73:	shr    eax,1
   140010f75:	mov    DWORD PTR [rsp+0x88],eax
   140010f7c:	test   dil,cl
   140010f7f:	je     0x140010f8c
   140010f81:	bts    eax,0x1f
   140010f85:	mov    DWORD PTR [rsp+0x88],eax
   140010f8c:	shr    ecx,1
   140010f8e:	sub    rdx,rdi
   140010f91:	jne    0x140010f69
   140010f93:	mov    DWORD PTR [rsp+0x8c],ecx
   140010f9a:	movsd  xmm0,QWORD PTR [rsp+0x88]
   140010fa3:	test   r8d,r8d
   140010fa6:	je     0x140010faf
   140010fa8:	xorps  xmm0,XMMWORD PTR [rip+0x1d2d1]        # 0x14002e280
   140010faf:	movsd  QWORD PTR [rsi],xmm0
   140010fb3:	test   ebp,ebp
   140010fb5:	je     0x140010fbf
   140010fb7:	mov    rcx,r13
   140010fba:	call   0x14000ac50
   140010fbf:	and    ebx,0xfffffffd
   140010fc2:	test   r13b,r12b
   140010fc5:	je     0x140010fdb
   140010fc7:	bt     r15,0xc
   140010fcc:	jae    0x140010fdb
   140010fce:	mov    ecx,0x20
   140010fd3:	call   0x14000ac50
   140010fd8:	and    ebx,0xffffffef
   140010fdb:	movaps xmm6,XMMWORD PTR [rsp+0x20]
   140010fe0:	test   ebx,ebx
   140010fe2:	mov    rbx,QWORD PTR [rsp+0x78]
   140010fe7:	sete   r14b
   140010feb:	mov    eax,r14d
   140010fee:	add    rsp,0x30
   140010ff2:	pop    r15
   140010ff4:	pop    r14
   140010ff6:	pop    r13
   140010ff8:	pop    r12
   140010ffa:	pop    rdi
   140010ffb:	pop    rsi
   140010ffc:	pop    rbp
   140010ffd:	ret    
   140010ffe:	int3   
   140010fff:	int3   
   140011000:	rex push rbx
   140011002:	sub    rsp,0x40
   140011006:	cmp    DWORD PTR [rip+0x26483],0x0        # 0x140037490
   14001100d:	movaps XMMWORD PTR [rsp+0x30],xmm6
   140011012:	mov    rbx,r8
   140011015:	movaps xmm6,xmm1
   140011018:	jne    0x140011039
   14001101a:	mov    edx,ecx
   14001101c:	xorps  xmm3,xmm3
   14001101f:	movaps xmm2,xmm1
   140011022:	mov    ecx,0x1
   140011027:	mov    QWORD PTR [rsp+0x28],rbx
   14001102c:	movsd  QWORD PTR [rsp+0x20],xmm1
   140011032:	call   0x14001144c
   140011037:	jmp    0x140011054
   140011039:	call   0x1400095b8
   14001103e:	mov    edx,0xffc0
   140011043:	mov    rcx,rbx
   140011046:	mov    DWORD PTR [rax],0x21
   14001104c:	call   0x14000abd4
   140011051:	movaps xmm0,xmm6
   140011054:	movaps xmm6,XMMWORD PTR [rsp+0x30]
   140011059:	add    rsp,0x40
   14001105d:	pop    rbx
   14001105e:	ret    
   14001105f:	int3   
   140011060:	rex push rbx
   140011062:	sub    rsp,0x40
   140011066:	cmp    DWORD PTR [rip+0x26423],0x0        # 0x140037490
   14001106d:	movaps XMMWORD PTR [rsp+0x30],xmm6
   140011072:	movaps xmm6,xmm1
   140011075:	addsd  xmm6,xmm2
   140011079:	mov    rbx,r9
   14001107c:	jne    0x14001109d
   14001107e:	movaps xmm3,xmm2
   140011081:	mov    edx,ecx
   140011083:	movaps xmm2,xmm1
   140011086:	mov    ecx,0x1
   14001108b:	mov    QWORD PTR [rsp+0x28],rbx
   140011090:	movsd  QWORD PTR [rsp+0x20],xmm6
   140011096:	call   0x14001144c
   14001109b:	jmp    0x1400110b8
   14001109d:	call   0x1400095b8
   1400110a2:	mov    edx,0xffc0
   1400110a7:	mov    rcx,rbx
   1400110aa:	mov    DWORD PTR [rax],0x21
   1400110b0:	call   0x14000abd4
   1400110b5:	movaps xmm0,xmm6
   1400110b8:	movaps xmm6,XMMWORD PTR [rsp+0x30]
   1400110bd:	add    rsp,0x40
   1400110c1:	pop    rbx
   1400110c2:	ret    
   1400110c3:	int3   
   1400110c4:	sub    rsp,0x48
   1400110c8:	and    DWORD PTR [rsp+0x30],0x0
   1400110cd:	mov    rax,QWORD PTR [rsp+0x78]
   1400110d2:	mov    QWORD PTR [rsp+0x28],rax
   1400110d7:	mov    rax,QWORD PTR [rsp+0x70]
   1400110dc:	mov    QWORD PTR [rsp+0x20],rax
   1400110e1:	call   0x1400110ec
   1400110e6:	add    rsp,0x48
   1400110ea:	ret    
   1400110eb:	int3   
   1400110ec:	mov    rax,rsp
   1400110ef:	mov    QWORD PTR [rax+0x10],rbx
   1400110f3:	mov    QWORD PTR [rax+0x18],rsi
   1400110f7:	mov    QWORD PTR [rax+0x20],rdi
   1400110fb:	mov    QWORD PTR [rax+0x8],rcx
   1400110ff:	push   rbp
   140011100:	mov    rbp,rsp
   140011103:	sub    rsp,0x20
   140011107:	mov    rbx,rdx
   14001110a:	xor    edx,edx
   14001110c:	mov    esi,r9d
   14001110f:	mov    DWORD PTR [rcx+0x4],edx
   140011112:	mov    rax,QWORD PTR [rbp+0x10]
   140011116:	mov    edi,0xc000000d
   14001111b:	mov    DWORD PTR [rax+0x8],edx
   14001111e:	mov    rax,QWORD PTR [rbp+0x10]
   140011122:	mov    DWORD PTR [rax+0xc],edx
   140011125:	test   r8b,0x10
   140011129:	je     0x140011138
   14001112b:	mov    rax,QWORD PTR [rbp+0x10]
   14001112f:	mov    edi,0xc000008f
   140011134:	or     DWORD PTR [rax+0x4],0x1
   140011138:	test   r8b,0x2
   14001113c:	je     0x14001114b
   14001113e:	mov    rax,QWORD PTR [rbp+0x10]
   140011142:	mov    edi,0xc0000093
   140011147:	or     DWORD PTR [rax+0x4],0x2
   14001114b:	test   r8b,0x1
   14001114f:	je     0x14001115e
   140011151:	mov    rax,QWORD PTR [rbp+0x10]
   140011155:	mov    edi,0xc0000091
   14001115a:	or     DWORD PTR [rax+0x4],0x4
   14001115e:	test   r8b,0x4
   140011162:	je     0x140011171
   140011164:	mov    rax,QWORD PTR [rbp+0x10]
   140011168:	mov    edi,0xc000008e
   14001116d:	or     DWORD PTR [rax+0x4],0x8
   140011171:	test   r8b,0x8
   140011175:	je     0x140011184
   140011177:	mov    rax,QWORD PTR [rbp+0x10]
   14001117b:	mov    edi,0xc0000090
   140011180:	or     DWORD PTR [rax+0x4],0x10
   140011184:	mov    rcx,QWORD PTR [rbp+0x10]
   140011188:	mov    rax,QWORD PTR [rbx]
   14001118b:	shr    rax,0x7
   14001118f:	shl    eax,0x4
   140011192:	not    eax
   140011194:	xor    eax,DWORD PTR [rcx+0x8]
   140011197:	and    eax,0x10
   14001119a:	xor    DWORD PTR [rcx+0x8],eax
   14001119d:	mov    rcx,QWORD PTR [rbp+0x10]
   1400111a1:	mov    rax,QWORD PTR [rbx]
   1400111a4:	shr    rax,0x9
   1400111a8:	shl    eax,0x3
   1400111ab:	not    eax
   1400111ad:	xor    eax,DWORD PTR [rcx+0x8]
   1400111b0:	and    eax,0x8
   1400111b3:	xor    DWORD PTR [rcx+0x8],eax
   1400111b6:	mov    rcx,QWORD PTR [rbp+0x10]
   1400111ba:	mov    rax,QWORD PTR [rbx]
   1400111bd:	shr    rax,0xa
   1400111c1:	shl    eax,0x2
   1400111c4:	not    eax
   1400111c6:	xor    eax,DWORD PTR [rcx+0x8]
   1400111c9:	and    eax,0x4
   1400111cc:	xor    DWORD PTR [rcx+0x8],eax
   1400111cf:	mov    rcx,QWORD PTR [rbp+0x10]
   1400111d3:	mov    rax,QWORD PTR [rbx]
   1400111d6:	shr    rax,0xb
   1400111da:	add    eax,eax
   1400111dc:	not    eax
   1400111de:	xor    eax,DWORD PTR [rcx+0x8]
   1400111e1:	and    eax,0x2
   1400111e4:	xor    DWORD PTR [rcx+0x8],eax
   1400111e7:	mov    eax,DWORD PTR [rbx]
   1400111e9:	mov    rcx,QWORD PTR [rbp+0x10]
   1400111ed:	shr    rax,0xc
   1400111f1:	not    eax
   1400111f3:	xor    eax,DWORD PTR [rcx+0x8]
   1400111f6:	and    eax,0x1
   1400111f9:	xor    DWORD PTR [rcx+0x8],eax
   1400111fc:	call   0x14000ac70
   140011201:	mov    rdx,rax
   140011204:	test   al,0x1
   140011206:	je     0x140011210
   140011208:	mov    rcx,QWORD PTR [rbp+0x10]
   14001120c:	or     DWORD PTR [rcx+0xc],0x10
   140011210:	test   al,0x4
   140011212:	je     0x14001121c
   140011214:	mov    rcx,QWORD PTR [rbp+0x10]
   140011218:	or     DWORD PTR [rcx+0xc],0x8
   14001121c:	test   al,0x8
   14001121e:	je     0x140011228
   140011220:	mov    rax,QWORD PTR [rbp+0x10]
   140011224:	or     DWORD PTR [rax+0xc],0x4
   140011228:	test   dl,0x10
   14001122b:	je     0x140011235
   14001122d:	mov    rax,QWORD PTR [rbp+0x10]
   140011231:	or     DWORD PTR [rax+0xc],0x2
   140011235:	test   dl,0x20
   140011238:	je     0x140011242
   14001123a:	mov    rax,QWORD PTR [rbp+0x10]
   14001123e:	or     DWORD PTR [rax+0xc],0x1
   140011242:	mov    eax,DWORD PTR [rbx]
   140011244:	mov    ecx,0x6000
   140011249:	and    rax,rcx
   14001124c:	je     0x14001128c
   14001124e:	cmp    rax,0x2000
   140011254:	je     0x14001127c
   140011256:	cmp    rax,0x4000
   14001125c:	je     0x14001126c
   14001125e:	cmp    rax,rcx
   140011261:	jne    0x140011293
   140011263:	mov    rax,QWORD PTR [rbp+0x10]
   140011267:	or     DWORD PTR [rax],0x3
   14001126a:	jmp    0x140011293
   14001126c:	mov    rax,QWORD PTR [rbp+0x10]
   140011270:	and    DWORD PTR [rax],0xfffffffe
   140011273:	mov    rax,QWORD PTR [rbp+0x10]
   140011277:	or     DWORD PTR [rax],0x2
   14001127a:	jmp    0x140011293
   14001127c:	mov    rax,QWORD PTR [rbp+0x10]
   140011280:	and    DWORD PTR [rax],0xfffffffd
   140011283:	mov    rax,QWORD PTR [rbp+0x10]
   140011287:	or     DWORD PTR [rax],0x1
   14001128a:	jmp    0x140011293
   14001128c:	mov    rax,QWORD PTR [rbp+0x10]
   140011290:	and    DWORD PTR [rax],0xfffffffc
   140011293:	mov    rax,QWORD PTR [rbp+0x10]
   140011297:	and    esi,0xfff
   14001129d:	and    DWORD PTR [rax],0xfffe001f
   1400112a3:	mov    rax,QWORD PTR [rbp+0x10]
   1400112a7:	shl    esi,0x5
   1400112aa:	or     DWORD PTR [rax],esi
   1400112ac:	mov    rax,QWORD PTR [rbp+0x10]
   1400112b0:	mov    rsi,QWORD PTR [rbp+0x38]
   1400112b4:	or     DWORD PTR [rax+0x20],0x1
   1400112b8:	cmp    DWORD PTR [rbp+0x40],0x0
   1400112bc:	je     0x1400112f1
   1400112be:	mov    rax,QWORD PTR [rbp+0x10]
   1400112c2:	mov    edx,0xffffffe1
   1400112c7:	and    DWORD PTR [rax+0x20],edx
   1400112ca:	mov    rax,QWORD PTR [rbp+0x30]
   1400112ce:	mov    ecx,DWORD PTR [rax]
   1400112d0:	mov    rax,QWORD PTR [rbp+0x10]
   1400112d4:	mov    DWORD PTR [rax+0x10],ecx
   1400112d7:	mov    rax,QWORD PTR [rbp+0x10]
   1400112db:	or     DWORD PTR [rax+0x60],0x1
   1400112df:	mov    rax,QWORD PTR [rbp+0x10]
   1400112e3:	and    DWORD PTR [rax+0x60],edx
   1400112e6:	mov    rax,QWORD PTR [rbp+0x10]
   1400112ea:	mov    ecx,DWORD PTR [rsi]
   1400112ec:	mov    DWORD PTR [rax+0x50],ecx
   1400112ef:	jmp    0x140011339
   1400112f1:	mov    rcx,QWORD PTR [rbp+0x10]
   1400112f5:	mov    r8d,0xffffffe3
   1400112fb:	mov    eax,DWORD PTR [rcx+0x20]
   1400112fe:	and    eax,r8d
   140011301:	or     eax,0x2
   140011304:	mov    DWORD PTR [rcx+0x20],eax
   140011307:	mov    rax,QWORD PTR [rbp+0x30]
   14001130b:	mov    rcx,QWORD PTR [rax]
   14001130e:	mov    rax,QWORD PTR [rbp+0x10]
   140011312:	mov    QWORD PTR [rax+0x10],rcx
   140011316:	mov    rax,QWORD PTR [rbp+0x10]
   14001131a:	or     DWORD PTR [rax+0x60],0x1
   14001131e:	mov    rdx,QWORD PTR [rbp+0x10]
   140011322:	mov    eax,DWORD PTR [rdx+0x60]
   140011325:	and    eax,r8d
   140011328:	or     eax,0x2
   14001132b:	mov    DWORD PTR [rdx+0x60],eax
   14001132e:	mov    rax,QWORD PTR [rbp+0x10]
   140011332:	mov    rdx,QWORD PTR [rsi]
   140011335:	mov    QWORD PTR [rax+0x50],rdx
   140011339:	call   0x14000abb4
   14001133e:	xor    edx,edx
   140011340:	lea    r9,[rbp+0x10]
   140011344:	lea    r8d,[rdx+0x1]
   140011348:	mov    ecx,edi
   14001134a:	call   QWORD PTR [rip+0x15d80]        # 0x1400270d0
   140011350:	mov    rcx,QWORD PTR [rbp+0x10]
   140011354:	test   BYTE PTR [rcx+0x8],0x10
   140011358:	je     0x14001135f
   14001135a:	btr    QWORD PTR [rbx],0x7
   14001135f:	test   BYTE PTR [rcx+0x8],0x8
   140011363:	je     0x14001136a
   140011365:	btr    QWORD PTR [rbx],0x9
   14001136a:	test   BYTE PTR [rcx+0x8],0x4
   14001136e:	je     0x140011375
   140011370:	btr    QWORD PTR [rbx],0xa
   140011375:	test   BYTE PTR [rcx+0x8],0x2
   140011379:	je     0x140011380
   14001137b:	btr    QWORD PTR [rbx],0xb
   140011380:	test   BYTE PTR [rcx+0x8],0x1
   140011384:	je     0x14001138b
   140011386:	btr    QWORD PTR [rbx],0xc
   14001138b:	mov    eax,DWORD PTR [rcx]
   14001138d:	and    eax,0x3
   140011390:	je     0x1400113bf
   140011392:	dec    eax
   140011394:	je     0x1400113b3
   140011396:	dec    eax
   140011398:	je     0x1400113a7
   14001139a:	dec    eax
   14001139c:	jne    0x1400113c6
   14001139e:	or     QWORD PTR [rbx],0x6000
   1400113a5:	jmp    0x1400113c6
   1400113a7:	btr    QWORD PTR [rbx],0xd
   1400113ac:	bts    QWORD PTR [rbx],0xe
   1400113b1:	jmp    0x1400113c6
   1400113b3:	btr    QWORD PTR [rbx],0xe
   1400113b8:	bts    QWORD PTR [rbx],0xd
   1400113bd:	jmp    0x1400113c6
   1400113bf:	and    QWORD PTR [rbx],0xffffffffffff9fff
   1400113c6:	cmp    DWORD PTR [rbp+0x40],0x0
   1400113ca:	je     0x1400113d3
   1400113cc:	mov    eax,DWORD PTR [rcx+0x50]
   1400113cf:	mov    DWORD PTR [rsi],eax
   1400113d1:	jmp    0x1400113da
   1400113d3:	mov    rax,QWORD PTR [rcx+0x50]
   1400113d7:	mov    QWORD PTR [rsi],rax
   1400113da:	mov    rbx,QWORD PTR [rsp+0x38]
   1400113df:	mov    rsi,QWORD PTR [rsp+0x40]
   1400113e4:	mov    rdi,QWORD PTR [rsp+0x48]
   1400113e9:	add    rsp,0x20
   1400113ed:	pop    rbp
   1400113ee:	ret    
   1400113ef:	int3   
   1400113f0:	sub    rsp,0x48
   1400113f4:	mov    rax,QWORD PTR [rsp+0x78]
   1400113f9:	mov    DWORD PTR [rsp+0x30],0x1
   140011401:	mov    QWORD PTR [rsp+0x28],rax
   140011406:	mov    rax,QWORD PTR [rsp+0x70]
   14001140b:	mov    QWORD PTR [rsp+0x20],rax
   140011410:	call   0x1400110ec
   140011415:	add    rsp,0x48
   140011419:	ret    
   14001141a:	int3   
   14001141b:	int3   
   14001141c:	sub    rsp,0x28
   140011420:	cmp    ecx,0x1
   140011423:	je     0x14001143a
   140011425:	lea    eax,[rcx-0x2]
   140011428:	cmp    eax,0x1
   14001142b:	ja     0x140011445
   14001142d:	call   0x1400095b8
   140011432:	mov    DWORD PTR [rax],0x22
   140011438:	jmp    0x140011445
   14001143a:	call   0x1400095b8
   14001143f:	mov    DWORD PTR [rax],0x21
   140011445:	add    rsp,0x28
   140011449:	ret    
   14001144a:	int3   
   14001144b:	int3   
   14001144c:	movsd  QWORD PTR [rsp+0x20],xmm3
   140011452:	movsd  QWORD PTR [rsp+0x18],xmm2
   140011458:	push   rbx
   140011459:	sub    rsp,0x50
   14001145d:	lea    r9,[rip+0x25e5c]        # 0x1400372c0
   140011464:	mov    ebx,ecx
   140011466:	xor    r8d,r8d
   140011469:	mov    rax,r9
   14001146c:	cmp    DWORD PTR [rax],edx
   14001146e:	je     0x140011487
   140011470:	lea    rcx,[rip+0x26019]        # 0x140037490
   140011477:	add    rax,0x10
   14001147b:	inc    r8d
   14001147e:	cmp    rax,rcx
   140011481:	jl     0x14001146c
   140011483:	xor    eax,eax
   140011485:	jmp    0x140011492
   140011487:	movsxd rax,r8d
   14001148a:	add    rax,rax
   14001148d:	mov    rax,QWORD PTR [r9+rax*8+0x8]
   140011492:	mov    rcx,QWORD PTR [rsp+0x88]
   14001149a:	mov    QWORD PTR [rsp+0x28],rax
   14001149f:	mov    edx,0xffc0
   1400114a4:	test   rax,rax
   1400114a7:	je     0x140011505
   1400114a9:	mov    eax,DWORD PTR [rsp+0x70]
   1400114ad:	mov    DWORD PTR [rsp+0x20],ebx
   1400114b1:	mov    DWORD PTR [rsp+0x30],eax
   1400114b5:	mov    eax,DWORD PTR [rsp+0x74]
   1400114b9:	mov    DWORD PTR [rsp+0x34],eax
   1400114bd:	mov    eax,DWORD PTR [rsp+0x78]
   1400114c1:	mov    DWORD PTR [rsp+0x38],eax
   1400114c5:	mov    eax,DWORD PTR [rsp+0x7c]
   1400114c9:	mov    DWORD PTR [rsp+0x3c],eax
   1400114cd:	mov    eax,DWORD PTR [rsp+0x80]
   1400114d4:	mov    DWORD PTR [rsp+0x40],eax
   1400114d8:	mov    eax,DWORD PTR [rsp+0x84]
   1400114df:	mov    DWORD PTR [rsp+0x44],eax
   1400114e3:	call   0x14000abd4
   1400114e8:	lea    rcx,[rsp+0x20]
   1400114ed:	call   0x140011520
   1400114f2:	test   eax,eax
   1400114f4:	jne    0x1400114fd
   1400114f6:	mov    ecx,ebx
   1400114f8:	call   0x14001141c
   1400114fd:	movsd  xmm0,QWORD PTR [rsp+0x40]
   140011503:	jmp    0x14001151a
   140011505:	call   0x14000abd4
   14001150a:	mov    ecx,ebx
   14001150c:	call   0x14001141c
   140011511:	movsd  xmm0,QWORD PTR [rsp+0x80]
   14001151a:	add    rsp,0x50
   14001151e:	pop    rbx
   14001151f:	ret    
   140011520:	xor    eax,eax
   140011522:	ret    
   140011523:	int3   
   140011524:	neg    rcx
   140011527:	sbb    eax,eax
   140011529:	and    eax,0x1
   14001152c:	ret    
   14001152d:	int3   
   14001152e:	int3   
   14001152f:	int3   
   140011530:	neg    rcx
   140011533:	sbb    eax,eax
   140011535:	and    eax,0x1
   140011538:	ret    
   140011539:	int3   
   14001153a:	int3   
   14001153b:	int3   
   14001153c:	neg    rcx
   14001153f:	sbb    eax,eax
   140011541:	and    eax,0x1
   140011544:	ret    
   140011545:	int3   
   140011546:	int3   
   140011547:	int3   
   140011548:	int3   
   140011549:	int3   
   14001154a:	int3   
   14001154b:	int3   
   14001154c:	int3   
   14001154d:	int3   
   14001154e:	int3   
   14001154f:	int3   
   140011550:	int3   
   140011551:	int3   
   140011552:	int3   
   140011553:	int3   
   140011554:	int3   
   140011555:	int3   
   140011556:	data16 nop WORD PTR [rax+rax*1+0x0]
   140011560:	sub    rsp,0x28
   140011564:	mov    QWORD PTR [rsp+0x30],rcx
   140011569:	mov    QWORD PTR [rsp+0x38],rdx
   14001156e:	mov    DWORD PTR [rsp+0x40],r8d
   140011573:	mov    rdx,QWORD PTR [rdx]
   140011576:	mov    rax,rcx
   140011579:	call   0x14000f870
   14001157e:	call   rax
   140011580:	call   0x14000f8a0
   140011585:	mov    rcx,rax
   140011588:	mov    rdx,QWORD PTR [rsp+0x38]
   14001158d:	mov    rdx,QWORD PTR [rdx]
   140011590:	mov    r8d,0x2
   140011596:	call   0x14000f870
   14001159b:	add    rsp,0x28
   14001159f:	ret    
   1400115a0:	mov    rax,QWORD PTR [rsp]
   1400115a4:	mov    QWORD PTR [rcx],rax
   1400115a7:	ret    
   1400115a8:	rex push rbx
   1400115aa:	sub    rsp,0x20
   1400115ae:	mov    rbx,rcx
   1400115b1:	call   QWORD PTR [rip+0x15b49]        # 0x140027100
   1400115b7:	mov    ecx,0x1
   1400115bc:	mov    DWORD PTR [rip+0x2798e],eax        # 0x140038f50
   1400115c2:	call   0x14000f8a4
   1400115c7:	mov    rcx,rbx
   1400115ca:	call   0x140009228
   1400115cf:	cmp    DWORD PTR [rip+0x2797a],0x0        # 0x140038f50
   1400115d6:	jne    0x1400115e2
   1400115d8:	mov    ecx,0x1
   1400115dd:	call   0x14000f8a4
   1400115e2:	mov    ecx,0xc0000409
   1400115e7:	add    rsp,0x20
   1400115eb:	pop    rbx
   1400115ec:	jmp    0x140009208
   1400115f1:	int3   
   1400115f2:	int3   
   1400115f3:	int3   
   1400115f4:	mov    QWORD PTR [rsp+0x8],rcx
   1400115f9:	sub    rsp,0x38
   1400115fd:	mov    ecx,0x17
   140011602:	call   0x140025f82
   140011607:	test   eax,eax
   140011609:	je     0x140011612
   14001160b:	mov    ecx,0x2
   140011610:	int    0x29
   140011612:	lea    rcx,[rip+0x27467]        # 0x140038a80
   140011619:	call   0x140008a3c
   14001161e:	mov    rax,QWORD PTR [rsp+0x38]
   140011623:	mov    QWORD PTR [rip+0x2754e],rax        # 0x140038b78
   14001162a:	lea    rax,[rsp+0x38]
   14001162f:	add    rax,0x8
   140011633:	mov    QWORD PTR [rip+0x274de],rax        # 0x140038b18
   14001163a:	mov    rax,QWORD PTR [rip+0x27537]        # 0x140038b78
   140011641:	mov    QWORD PTR [rip+0x273a8],rax        # 0x1400389f0
   140011648:	mov    rax,QWORD PTR [rsp+0x40]
   14001164d:	mov    QWORD PTR [rip+0x274ac],rax        # 0x140038b00
   140011654:	mov    DWORD PTR [rip+0x27382],0xc0000409        # 0x1400389e0
   14001165e:	mov    DWORD PTR [rip+0x2737c],0x1        # 0x1400389e4
   140011668:	mov    DWORD PTR [rip+0x27386],0x1        # 0x1400389f8
   140011672:	mov    eax,0x8
   140011677:	imul   rax,rax,0x0
   14001167b:	lea    rcx,[rip+0x2737e]        # 0x140038a00
   140011682:	mov    QWORD PTR [rcx+rax*1],0x2
   14001168a:	mov    eax,0x8
   14001168f:	imul   rax,rax,0x0
   140011693:	mov    rcx,QWORD PTR [rip+0x253a6]        # 0x140036a40
   14001169a:	mov    QWORD PTR [rsp+rax*1+0x20],rcx
   14001169f:	mov    eax,0x8
   1400116a4:	imul   rax,rax,0x1
   1400116a8:	mov    rcx,QWORD PTR [rip+0x25399]        # 0x140036a48
   1400116af:	mov    QWORD PTR [rsp+rax*1+0x20],rcx
   1400116b4:	lea    rcx,[rip+0x1cbd5]        # 0x14002e290
   1400116bb:	call   0x1400115a8
   1400116c0:	add    rsp,0x38
   1400116c4:	ret    
   1400116c5:	int3   
   1400116c6:	int3   
   1400116c7:	int3   
   1400116c8:	sub    rsp,0x28
   1400116cc:	mov    ecx,0x8
   1400116d1:	call   0x1400116dc
   1400116d6:	add    rsp,0x28
   1400116da:	ret    
   1400116db:	int3   
   1400116dc:	mov    DWORD PTR [rsp+0x8],ecx
   1400116e0:	sub    rsp,0x28
   1400116e4:	mov    ecx,0x17
   1400116e9:	call   0x140025f82
   1400116ee:	test   eax,eax
   1400116f0:	je     0x1400116fa
   1400116f2:	mov    eax,DWORD PTR [rsp+0x30]
   1400116f6:	mov    ecx,eax
   1400116f8:	int    0x29
   1400116fa:	lea    rcx,[rip+0x2737f]        # 0x140038a80
   140011701:	call   0x1400089cc
   140011706:	mov    rax,QWORD PTR [rsp+0x28]
   14001170b:	mov    QWORD PTR [rip+0x27466],rax        # 0x140038b78
   140011712:	lea    rax,[rsp+0x28]
   140011717:	add    rax,0x8
   14001171b:	mov    QWORD PTR [rip+0x273f6],rax        # 0x140038b18
   140011722:	mov    rax,QWORD PTR [rip+0x2744f]        # 0x140038b78
   140011729:	mov    QWORD PTR [rip+0x272c0],rax        # 0x1400389f0
   140011730:	mov    DWORD PTR [rip+0x272a6],0xc0000409        # 0x1400389e0
   14001173a:	mov    DWORD PTR [rip+0x272a0],0x1        # 0x1400389e4
   140011744:	mov    DWORD PTR [rip+0x272aa],0x1        # 0x1400389f8
   14001174e:	mov    eax,0x8
   140011753:	imul   rax,rax,0x0
   140011757:	lea    rcx,[rip+0x272a2]        # 0x140038a00
   14001175e:	mov    edx,DWORD PTR [rsp+0x30]
   140011762:	mov    QWORD PTR [rcx+rax*1],rdx
   140011766:	lea    rcx,[rip+0x1cb23]        # 0x14002e290
   14001176d:	call   0x1400115a8
   140011772:	add    rsp,0x28
   140011776:	ret    
   140011777:	int3   
   140011778:	mov    QWORD PTR [rsp+0x18],r8
   14001177d:	mov    DWORD PTR [rsp+0x10],edx
   140011781:	mov    DWORD PTR [rsp+0x8],ecx
   140011785:	sub    rsp,0x38
   140011789:	mov    ecx,0x17
   14001178e:	call   0x140025f82
   140011793:	test   eax,eax
   140011795:	je     0x14001179f
   140011797:	mov    eax,DWORD PTR [rsp+0x40]
   14001179b:	mov    ecx,eax
   14001179d:	int    0x29
   14001179f:	lea    rcx,[rip+0x272da]        # 0x140038a80
   1400117a6:	call   0x1400089cc
   1400117ab:	mov    rax,QWORD PTR [rsp+0x38]
   1400117b0:	mov    QWORD PTR [rip+0x273c1],rax        # 0x140038b78
   1400117b7:	lea    rax,[rsp+0x38]
   1400117bc:	add    rax,0x8
   1400117c0:	mov    QWORD PTR [rip+0x27351],rax        # 0x140038b18
   1400117c7:	mov    rax,QWORD PTR [rip+0x273aa]        # 0x140038b78
   1400117ce:	mov    QWORD PTR [rip+0x2721b],rax        # 0x1400389f0
   1400117d5:	mov    DWORD PTR [rip+0x27201],0xc0000409        # 0x1400389e0
   1400117df:	mov    DWORD PTR [rip+0x271fb],0x1        # 0x1400389e4
   1400117e9:	cmp    DWORD PTR [rsp+0x48],0x0
   1400117ee:	jbe    0x140011800
   1400117f0:	cmp    QWORD PTR [rsp+0x50],0x0
   1400117f6:	jne    0x140011800
   1400117f8:	mov    DWORD PTR [rsp+0x48],0x0
   140011800:	cmp    DWORD PTR [rsp+0x48],0xe
   140011805:	jbe    0x140011811
   140011807:	mov    eax,DWORD PTR [rsp+0x48]
   14001180b:	dec    eax
   14001180d:	mov    DWORD PTR [rsp+0x48],eax
   140011811:	mov    eax,DWORD PTR [rsp+0x48]
   140011815:	inc    eax
   140011817:	mov    DWORD PTR [rip+0x271db],eax        # 0x1400389f8
   14001181d:	mov    eax,0x8
   140011822:	imul   rax,rax,0x0
   140011826:	lea    rcx,[rip+0x271d3]        # 0x140038a00
   14001182d:	mov    edx,DWORD PTR [rsp+0x40]
   140011831:	mov    QWORD PTR [rcx+rax*1],rdx
   140011835:	mov    DWORD PTR [rsp+0x20],0x0
   14001183d:	jmp    0x140011849
   14001183f:	mov    eax,DWORD PTR [rsp+0x20]
   140011843:	inc    eax
   140011845:	mov    DWORD PTR [rsp+0x20],eax
   140011849:	mov    eax,DWORD PTR [rsp+0x48]
   14001184d:	cmp    DWORD PTR [rsp+0x20],eax
   140011851:	jae    0x140011875
   140011853:	mov    eax,DWORD PTR [rsp+0x20]
   140011857:	mov    ecx,DWORD PTR [rsp+0x20]
   14001185b:	inc    ecx
   14001185d:	mov    ecx,ecx
   14001185f:	lea    rdx,[rip+0x2719a]        # 0x140038a00
   140011866:	mov    r8,QWORD PTR [rsp+0x50]
   14001186b:	mov    rax,QWORD PTR [r8+rax*8]
   14001186f:	mov    QWORD PTR [rdx+rcx*8],rax
   140011873:	jmp    0x14001183f
   140011875:	lea    rcx,[rip+0x1ca14]        # 0x14002e290
   14001187c:	call   0x1400115a8
   140011881:	add    rsp,0x38
   140011885:	ret    
   140011886:	int3   
   140011887:	int3   
   140011888:	and    QWORD PTR [rcx],0x0
   14001188c:	mov    rax,rcx
   14001188f:	ret    
   140011890:	mov    QWORD PTR [rsp+0x8],rbx
   140011895:	mov    QWORD PTR [rsp+0x10],rsi
   14001189a:	push   rdi
   14001189b:	sub    rsp,0x20
   14001189f:	and    QWORD PTR [rcx],0x0
   1400118a3:	mov    BYTE PTR [rcx+0x8],0x0
   1400118a7:	and    DWORD PTR [rcx+0x8],0xffff00ff
   1400118ae:	mov    rdi,rdx
   1400118b1:	mov    rdx,QWORD PTR [rdx]
   1400118b4:	mov    sil,r8b
   1400118b7:	mov    rbx,rcx
   1400118ba:	test   rdx,rdx
   1400118bd:	je     0x140011959
   1400118c3:	cmp    BYTE PTR [rdx],0x0
   1400118c6:	je     0x140011953
   1400118cc:	xor    r8d,r8d
   1400118cf:	mov    r9,QWORD PTR [rdi]
   1400118d2:	mov    cl,BYTE PTR [r9]
   1400118d5:	cmp    cl,sil
   1400118d8:	je     0x14001191b
   1400118da:	lea    eax,[rcx-0x24]
   1400118dd:	cmp    al,0x3b
   1400118df:	ja     0x1400118f1
   1400118e1:	movabs r10,0x87fffffe53ff201
   1400118eb:	bt     r10,rax
   1400118ef:	jb     0x14001190c
   1400118f1:	lea    eax,[rcx-0x61]
   1400118f4:	cmp    al,0x19
   1400118f6:	jbe    0x14001190c
   1400118f8:	add    cl,0x80
   1400118fb:	cmp    cl,0x7e
   1400118fe:	jbe    0x14001190c
   140011900:	test   DWORD PTR [rip+0x2768a],0x10000        # 0x140038f94
   14001190a:	je     0x140011941
   14001190c:	lea    rax,[r9+0x1]
   140011910:	inc    r8d
   140011913:	mov    QWORD PTR [rdi],rax
   140011916:	cmp    BYTE PTR [rax],0x0
   140011919:	jne    0x1400118cf
   14001191b:	mov    rcx,rbx
   14001191e:	call   0x140013448
   140011923:	mov    rax,QWORD PTR [rdi]
   140011926:	mov    cl,BYTE PTR [rax]
   140011928:	test   cl,cl
   14001192a:	je     0x140011947
   14001192c:	inc    rax
   14001192f:	mov    QWORD PTR [rdi],rax
   140011932:	cmp    cl,sil
   140011935:	je     0x14001195d
   140011937:	and    QWORD PTR [rbx],0x0
   14001193b:	mov    BYTE PTR [rbx+0x8],0x3
   14001193f:	jmp    0x14001195d
   140011941:	mov    BYTE PTR [rbx+0x8],0x2
   140011945:	jmp    0x14001195d
   140011947:	cmp    BYTE PTR [rbx+0x8],0x0
   14001194b:	jne    0x14001195d
   14001194d:	mov    BYTE PTR [rbx+0x8],0x1
   140011951:	jmp    0x14001195d
   140011953:	mov    BYTE PTR [rcx+0x8],0x1
   140011957:	jmp    0x14001195d
   140011959:	mov    BYTE PTR [rcx+0x8],0x2
   14001195d:	mov    rsi,QWORD PTR [rsp+0x38]
   140011962:	mov    rax,rbx
   140011965:	mov    rbx,QWORD PTR [rsp+0x30]
   14001196a:	add    rsp,0x20
   14001196e:	pop    rdi
   14001196f:	ret    
   140011970:	movups xmm0,XMMWORD PTR [rdx]
   140011973:	mov    rax,rcx
   140011976:	movdqu XMMWORD PTR [rcx],xmm0
   14001197a:	ret    
   14001197b:	int3   
   14001197c:	mov    BYTE PTR [rsp+0x10],dl
   140011980:	push   rbx
   140011981:	sub    rsp,0x20
   140011985:	and    QWORD PTR [rcx],0x0
   140011989:	mov    BYTE PTR [rcx+0x8],0x0
   14001198d:	and    DWORD PTR [rcx+0x8],0xffff00ff
   140011994:	mov    rbx,rcx
   140011997:	test   dl,dl
   140011999:	je     0x1400119ab
   14001199b:	lea    rdx,[rsp+0x38]
   1400119a0:	mov    r8d,0x1
   1400119a6:	call   0x140013448
   1400119ab:	mov    rax,rbx
   1400119ae:	add    rsp,0x20
   1400119b2:	pop    rbx
   1400119b3:	ret    
   1400119b4:	mov    QWORD PTR [rsp+0x8],rbx
   1400119b9:	mov    QWORD PTR [rsp+0x10],rsi
   1400119be:	push   rdi
   1400119bf:	sub    rsp,0x20
   1400119c3:	xor    esi,esi
   1400119c5:	mov    rdi,rdx
   1400119c8:	mov    rbx,rcx
   1400119cb:	test   rdx,rdx
   1400119ce:	je     0x140011a18
   1400119d0:	lea    edx,[rsi+0x10]
   1400119d3:	lea    rcx,[rip+0x275c6]        # 0x140038fa0
   1400119da:	xor    r8d,r8d
   1400119dd:	call   0x1400157b8
   1400119e2:	test   rax,rax
   1400119e5:	je     0x140011a04
   1400119e7:	lea    rcx,[rip+0x1d632]        # 0x14002f020
   1400119ee:	mov    QWORD PTR [rax],rcx
   1400119f1:	mov    cl,BYTE PTR [rdi+0x8]
   1400119f4:	sub    cl,0x2
   1400119f7:	cmp    cl,0x1
   1400119fa:	cmovbe rdi,rsi
   1400119fe:	mov    QWORD PTR [rax+0x8],rdi
   140011a02:	jmp    0x140011a07
   140011a04:	mov    rax,rsi
   140011a07:	mov    QWORD PTR [rbx],rax
   140011a0a:	neg    rax
   140011a0d:	sbb    al,al
   140011a0f:	not    al
   140011a11:	and    al,0x3
   140011a13:	mov    BYTE PTR [rbx+0x8],al
   140011a16:	jmp    0x140011a1f
   140011a18:	mov    BYTE PTR [rcx+0x8],sil
   140011a1c:	mov    QWORD PTR [rcx],rsi
   140011a1f:	and    DWORD PTR [rbx+0x8],0xffff00ff
   140011a26:	mov    rsi,QWORD PTR [rsp+0x38]
   140011a2b:	mov    rax,rbx
   140011a2e:	mov    rbx,QWORD PTR [rsp+0x30]
   140011a33:	add    rsp,0x20
   140011a37:	pop    rdi
   140011a38:	ret    
   140011a39:	int3   
   140011a3a:	int3   
   140011a3b:	int3   
   140011a3c:	rex push rbx
   140011a3e:	sub    rsp,0x20
   140011a42:	mov    rbx,rcx
   140011a45:	xor    ecx,ecx
   140011a47:	mov    BYTE PTR [rbx+0x8],cl
   140011a4a:	and    DWORD PTR [rbx+0x8],0xffff00ff
   140011a51:	mov    QWORD PTR [rbx],rcx
   140011a54:	test   rdx,rdx
   140011a57:	je     0x140011a7a
   140011a59:	mov    rax,rdx
   140011a5c:	mov    r8d,ecx
   140011a5f:	cmp    BYTE PTR [rdx],cl
   140011a61:	je     0x140011a7a
   140011a63:	inc    rax
   140011a66:	inc    r8d
   140011a69:	cmp    BYTE PTR [rax],cl
   140011a6b:	jne    0x140011a63
   140011a6d:	test   r8d,r8d
   140011a70:	je     0x140011a7a
   140011a72:	mov    rcx,rbx
   140011a75:	call   0x140013448
   140011a7a:	mov    rax,rbx
   140011a7d:	add    rsp,0x20
   140011a81:	pop    rbx
   140011a82:	ret    
   140011a83:	int3   
   140011a84:	mov    QWORD PTR [rsp+0x8],rbx
   140011a89:	push   rdi
   140011a8a:	sub    rsp,0x20
   140011a8e:	and    DWORD PTR [rcx+0x8],0xffff00ff
   140011a95:	xor    edi,edi
   140011a97:	mov    rbx,rcx
   140011a9a:	lea    ecx,[rdi+0x1]
   140011a9d:	lea    eax,[rdx-0x2]
   140011aa0:	mov    r8d,edx
   140011aa3:	cmp    eax,ecx
   140011aa5:	mov    QWORD PTR [rbx],rdi
   140011aa8:	cmova  r8d,edi
   140011aac:	mov    BYTE PTR [rbx+0x8],r8b
   140011ab0:	cmp    edx,ecx
   140011ab2:	jne    0x140011ac5
   140011ab4:	call   0x1400183bc
   140011ab9:	mov    QWORD PTR [rbx],rax
   140011abc:	test   rax,rax
   140011abf:	jne    0x140011ac5
   140011ac1:	mov    BYTE PTR [rbx+0x8],0x3
   140011ac5:	mov    rax,rbx
   140011ac8:	mov    rbx,QWORD PTR [rsp+0x30]
   140011acd:	add    rsp,0x20
   140011ad1:	pop    rdi
   140011ad2:	ret    
   140011ad3:	int3   
   140011ad4:	and    QWORD PTR [rcx],0x0
   140011ad8:	mov    BYTE PTR [rcx+0x8],0x0
   140011adc:	and    DWORD PTR [rcx+0x8],0xffff00ff
   140011ae3:	mov    rax,rcx
   140011ae6:	ret    
   140011ae7:	int3   
   140011ae8:	rex push rbx
   140011aea:	sub    rsp,0x40
   140011aee:	mov    rax,QWORD PTR [rip+0x24f4b]        # 0x140036a40
   140011af5:	xor    rax,rsp
   140011af8:	mov    QWORD PTR [rsp+0x38],rax
   140011afd:	xor    r11d,r11d
   140011b00:	mov    r8,rdx
   140011b03:	mov    rbx,rcx
   140011b06:	mov    BYTE PTR [rcx+0x8],r11b
   140011b0a:	and    DWORD PTR [rcx+0x8],0xffff00ff
   140011b11:	lea    r9,[rsp+0x35]
   140011b16:	mov    QWORD PTR [rcx],r11
   140011b19:	mov    BYTE PTR [rsp+0x35],r11b
   140011b1e:	mov    r10b,r11b
   140011b21:	test   rdx,rdx
   140011b24:	jns    0x140011b2c
   140011b26:	mov    r10b,0x1
   140011b29:	neg    r8
   140011b2c:	dec    r9
   140011b2f:	movabs rax,0xcccccccccccccccd
   140011b39:	mul    r8
   140011b3c:	shr    rdx,0x3
   140011b40:	mov    al,dl
   140011b42:	shl    al,0x2
   140011b45:	lea    ecx,[rax+rdx*1]
   140011b48:	add    cl,cl
   140011b4a:	sub    r8b,cl
   140011b4d:	add    r8b,0x30
   140011b51:	mov    BYTE PTR [r9],r8b
   140011b54:	mov    r8,rdx
   140011b57:	test   rdx,rdx
   140011b5a:	jne    0x140011b2c
   140011b5c:	test   r10b,r10b
   140011b5f:	je     0x140011b68
   140011b61:	dec    r9
   140011b64:	mov    BYTE PTR [r9],0x2d
   140011b68:	lea    r8,[rsp+0x35]
   140011b6d:	mov    rdx,r9
   140011b70:	mov    rcx,rbx
   140011b73:	sub    r8d,r9d
   140011b76:	call   0x140013448
   140011b7b:	mov    rax,rbx
   140011b7e:	mov    rcx,QWORD PTR [rsp+0x38]
   140011b83:	xor    rcx,rsp
   140011b86:	call   0x14000d0a0
   140011b8b:	add    rsp,0x40
   140011b8f:	pop    rbx
   140011b90:	ret    
   140011b91:	int3   
   140011b92:	int3   
   140011b93:	int3   
   140011b94:	rex push rbx
   140011b96:	sub    rsp,0x40
   140011b9a:	mov    rax,QWORD PTR [rip+0x24e9f]        # 0x140036a40
   140011ba1:	xor    rax,rsp
   140011ba4:	mov    QWORD PTR [rsp+0x38],rax
   140011ba9:	xor    r10d,r10d
   140011bac:	mov    r8,rdx
   140011baf:	mov    rbx,rcx
   140011bb2:	mov    BYTE PTR [rcx+0x8],r10b
   140011bb6:	and    DWORD PTR [rcx+0x8],0xffff00ff
   140011bbd:	lea    r9,[rsp+0x34]
   140011bc2:	mov    QWORD PTR [rcx],r10
   140011bc5:	mov    BYTE PTR [rsp+0x34],r10b
   140011bca:	dec    r9
   140011bcd:	movabs rax,0xcccccccccccccccd
   140011bd7:	mul    r8
   140011bda:	shr    rdx,0x3
   140011bde:	mov    al,dl
   140011be0:	shl    al,0x2
   140011be3:	lea    ecx,[rax+rdx*1]
   140011be6:	add    cl,cl
   140011be8:	sub    r8b,cl
   140011beb:	add    r8b,0x30
   140011bef:	mov    BYTE PTR [r9],r8b
   140011bf2:	mov    r8,rdx
   140011bf5:	test   rdx,rdx
   140011bf8:	jne    0x140011bca
   140011bfa:	lea    r8,[rsp+0x34]
   140011bff:	mov    rdx,r9
   140011c02:	mov    rcx,rbx
   140011c05:	sub    r8d,r9d
   140011c08:	call   0x140013448
   140011c0d:	mov    rax,rbx
   140011c10:	mov    rcx,QWORD PTR [rsp+0x38]
   140011c15:	xor    rcx,rsp
   140011c18:	call   0x14000d0a0
   140011c1d:	add    rsp,0x40
   140011c21:	pop    rbx
   140011c22:	ret    
   140011c23:	int3   
   140011c24:	lea    rax,[rip+0x1d395]        # 0x14002efc0
   140011c2b:	mov    QWORD PTR [rcx],rax
   140011c2e:	mov    rax,rcx
   140011c31:	ret    
   140011c32:	int3   
   140011c33:	int3   
   140011c34:	lea    rax,[rip+0x1d405]        # 0x14002f040
   140011c3b:	mov    DWORD PTR [rcx+0x8],edx
   140011c3e:	mov    QWORD PTR [rcx],rax
   140011c41:	xor    eax,eax
   140011c43:	cmp    edx,0x1
   140011c46:	lea    r8d,[rax+0x4]
   140011c4a:	cmove  eax,r8d
   140011c4e:	mov    DWORD PTR [rcx+0xc],eax
   140011c51:	mov    rax,rcx
   140011c54:	ret    
   140011c55:	int3   
   140011c56:	int3   
   140011c57:	int3   
   140011c58:	or     DWORD PTR [rcx],0xffffffff
   140011c5b:	mov    rax,rcx
   140011c5e:	ret    
   140011c5f:	int3   
   140011c60:	or     r10d,0xffffffff
   140011c64:	lea    rax,[rcx+0x58]
   140011c68:	mov    DWORD PTR [rcx],r10d
   140011c6b:	mov    DWORD PTR [rax],r10d
   140011c6e:	mov    QWORD PTR [rip+0x2730b],r8        # 0x140038f80
   140011c75:	mov    QWORD PTR [rip+0x272fc],r8        # 0x140038f78
   140011c7c:	xor    r8d,r8d
   140011c7f:	test   rdx,rdx
   140011c82:	je     0x140011c94
   140011c84:	mov    DWORD PTR [rip+0x27305],r9d        # 0x140038f90
   140011c8b:	mov    QWORD PTR [rip+0x272f6],rdx        # 0x140038f88
   140011c92:	jmp    0x140011ca2
   140011c94:	mov    QWORD PTR [rip+0x272ed],r8        # 0x140038f88
   140011c9b:	mov    DWORD PTR [rip+0x272ee],r8d        # 0x140038f90
   140011ca2:	mov    QWORD PTR [rip+0x272bf],rax        # 0x140038f68
   140011ca9:	mov    eax,DWORD PTR [rsp+0x30]
   140011cad:	mov    QWORD PTR [rip+0x272ac],rcx        # 0x140038f60
   140011cb4:	mov    DWORD PTR [rip+0x272da],eax        # 0x140038f94
   140011cba:	mov    rax,QWORD PTR [rsp+0x28]
   140011cbf:	mov    BYTE PTR [rip+0x272d2],r8b        # 0x140038f98
   140011cc6:	mov    QWORD PTR [rip+0x2728b],rax        # 0x140038f58
   140011ccd:	mov    rax,rcx
   140011cd0:	ret    
   140011cd1:	int3   
   140011cd2:	int3   
   140011cd3:	int3   
   140011cd4:	lea    rax,[rip+0x1d305]        # 0x14002efe0
   140011cdb:	mov    BYTE PTR [rcx+0x8],dl
   140011cde:	mov    QWORD PTR [rcx],rax
   140011ce1:	mov    rax,rcx
   140011ce4:	ret    
   140011ce5:	int3   
   140011ce6:	int3   
   140011ce7:	int3   
   140011ce8:	lea    rax,[rip+0x1d331]        # 0x14002f020
   140011cef:	xor    r8d,r8d
   140011cf2:	mov    QWORD PTR [rcx],rax
   140011cf5:	test   rdx,rdx
   140011cf8:	je     0x140011d03
   140011cfa:	mov    al,BYTE PTR [rdx+0x8]
   140011cfd:	sub    al,0x2
   140011cff:	cmp    al,0x1
   140011d01:	jbe    0x140011d06
   140011d03:	mov    r8,rdx
   140011d06:	mov    QWORD PTR [rcx+0x8],r8
   140011d0a:	mov    rax,rcx
   140011d0d:	ret    
   140011d0e:	int3   
   140011d0f:	int3   
   140011d10:	or     DWORD PTR [rcx+0x18],0xffffffff
   140011d14:	lea    rax,[rip+0x1d345]        # 0x14002f060
   140011d1b:	mov    QWORD PTR [rcx+0x8],rdx
   140011d1f:	mov    QWORD PTR [rcx],rax
   140011d22:	mov    QWORD PTR [rcx+0x10],r8
   140011d26:	mov    rax,rcx
   140011d29:	ret    
   140011d2a:	int3   
   140011d2b:	int3   
   140011d2c:	mov    QWORD PTR [rsp+0x8],rbx
   140011d31:	mov    QWORD PTR [rsp+0x10],rsi
   140011d36:	push   rdi
   140011d37:	sub    rsp,0x20
   140011d3b:	lea    rax,[rip+0x1d2be]        # 0x14002f000
   140011d42:	mov    edi,r8d
   140011d45:	mov    rsi,rdx
   140011d48:	mov    rbx,rcx
   140011d4b:	mov    QWORD PTR [rcx],rax
   140011d4e:	test   r8d,r8d
   140011d51:	je     0x140011d97
   140011d53:	test   rdx,rdx
   140011d56:	je     0x140011d97
   140011d58:	lea    rcx,[rip+0x27241]        # 0x140038fa0
   140011d5f:	movsxd rdx,edi
   140011d62:	xor    r8d,r8d
   140011d65:	call   0x1400157b8
   140011d6a:	mov    DWORD PTR [rbx+0x10],edi
   140011d6d:	mov    rcx,rax
   140011d70:	mov    QWORD PTR [rbx+0x8],rax
   140011d74:	test   rax,rax
   140011d77:	je     0x140011d91
   140011d79:	test   edi,edi
   140011d7b:	je     0x140011da0
   140011d7d:	sub    rsi,rax
   140011d80:	mov    edx,edi
   140011d82:	mov    al,BYTE PTR [rsi+rcx*1]
   140011d85:	mov    BYTE PTR [rcx],al
   140011d87:	inc    rcx
   140011d8a:	dec    rdx
   140011d8d:	jne    0x140011d82
   140011d8f:	jmp    0x140011da0
   140011d91:	and    DWORD PTR [rbx+0x10],0x0
   140011d95:	jmp    0x140011da0
   140011d97:	and    QWORD PTR [rcx+0x8],0x0
   140011d9c:	and    DWORD PTR [rcx+0x10],0x0
   140011da0:	mov    rsi,QWORD PTR [rsp+0x38]
   140011da5:	mov    rax,rbx
   140011da8:	mov    rbx,QWORD PTR [rsp+0x30]
   140011dad:	add    rsp,0x20
   140011db1:	pop    rdi
   140011db2:	ret    
   140011db3:	int3   
   140011db4:	mov    rdx,rcx
   140011db7:	lea    rcx,[rip+0x271e2]        # 0x140038fa0
   140011dbe:	jmp    0x1400157b8
   140011dc3:	int3   
   140011dc4:	movups xmm0,XMMWORD PTR [rdx]
   140011dc7:	mov    rax,rcx
   140011dca:	movdqu XMMWORD PTR [rcx],xmm0
   140011dce:	ret    
   140011dcf:	int3   
   140011dd0:	mov    BYTE PTR [rsp+0x10],dl
   140011dd4:	push   rbx
   140011dd5:	sub    rsp,0x20
   140011dd9:	and    QWORD PTR [rcx],0x0
   140011ddd:	mov    BYTE PTR [rcx+0x8],0x0
   140011de1:	and    DWORD PTR [rcx+0x8],0xffff00ff
   140011de8:	mov    rbx,rcx
   140011deb:	test   dl,dl
   140011ded:	je     0x140011dff
   140011def:	lea    rdx,[rsp+0x38]
   140011df4:	mov    r8d,0x1
   140011dfa:	call   0x140013448
   140011dff:	mov    rax,rbx
   140011e02:	add    rsp,0x20
   140011e06:	pop    rbx
   140011e07:	ret    
   140011e08:	mov    QWORD PTR [rsp+0x8],rbx
   140011e0d:	mov    QWORD PTR [rsp+0x10],rsi
   140011e12:	push   rdi
   140011e13:	sub    rsp,0x20
   140011e17:	xor    esi,esi
   140011e19:	mov    rdi,rdx
   140011e1c:	mov    rbx,rcx
   140011e1f:	mov    BYTE PTR [rcx+0x8],sil
   140011e23:	and    DWORD PTR [rcx+0x8],0xffff00ff
   140011e2a:	mov    QWORD PTR [rcx],rsi
   140011e2d:	test   rdx,rdx
   140011e30:	je     0x140011e77
   140011e32:	lea    edx,[rsi+0x10]
   140011e35:	lea    rcx,[rip+0x27164]        # 0x140038fa0
   140011e3c:	xor    r8d,r8d
   140011e3f:	call   0x1400157b8
   140011e44:	test   rax,rax
   140011e47:	je     0x140011e66
   140011e49:	lea    rcx,[rip+0x1d1d0]        # 0x14002f020
   140011e50:	mov    QWORD PTR [rax],rcx
   140011e53:	mov    cl,BYTE PTR [rdi+0x8]
   140011e56:	sub    cl,0x2
   140011e59:	cmp    cl,0x1
   140011e5c:	cmovbe rdi,rsi
   140011e60:	mov    QWORD PTR [rax+0x8],rdi
   140011e64:	jmp    0x140011e69
   140011e66:	mov    rax,rsi
   140011e69:	mov    QWORD PTR [rbx],rax
   140011e6c:	test   rax,rax
   140011e6f:	jne    0x140011e7b
   140011e71:	mov    BYTE PTR [rbx+0x8],0x3
   140011e75:	jmp    0x140011e7b
   140011e77:	mov    BYTE PTR [rcx+0x8],0x3
   140011e7b:	mov    rsi,QWORD PTR [rsp+0x38]
   140011e80:	mov    rax,rbx
   140011e83:	mov    rbx,QWORD PTR [rsp+0x30]
   140011e88:	add    rsp,0x20
   140011e8c:	pop    rdi
   140011e8d:	ret    
   140011e8e:	int3   
   140011e8f:	int3   
   140011e90:	rex push rbx
   140011e92:	sub    rsp,0x20
   140011e96:	mov    rbx,rcx
   140011e99:	xor    ecx,ecx
   140011e9b:	mov    rax,rdx
   140011e9e:	mov    BYTE PTR [rbx+0x8],cl
   140011ea1:	and    DWORD PTR [rbx+0x8],0xffff00ff
   140011ea8:	mov    QWORD PTR [rbx],rcx
   140011eab:	mov    r8d,ecx
   140011eae:	cmp    BYTE PTR [rdx],cl
   140011eb0:	je     0x140011ebc
   140011eb2:	inc    rax
   140011eb5:	inc    r8d
   140011eb8:	cmp    BYTE PTR [rax],cl
   140011eba:	jne    0x140011eb2
   140011ebc:	mov    rcx,rbx
   140011ebf:	call   0x140013448
   140011ec4:	mov    rax,rbx
   140011ec7:	add    rsp,0x20
   140011ecb:	pop    rbx
   140011ecc:	ret    
   140011ecd:	int3   
   140011ece:	int3   
   140011ecf:	int3   
   140011ed0:	rex push rbx
   140011ed2:	sub    rsp,0x20
   140011ed6:	and    DWORD PTR [rcx+0x8],0xffff00ff
   140011edd:	mov    rbx,rcx
   140011ee0:	mov    BYTE PTR [rcx+0x8],dl
   140011ee3:	mov    ecx,0x1
   140011ee8:	cmp    edx,ecx
   140011eea:	jne    0x140011eff
   140011eec:	call   0x1400183bc
   140011ef1:	mov    QWORD PTR [rbx],rax
   140011ef4:	test   rax,rax
   140011ef7:	jne    0x140011f03
   140011ef9:	mov    BYTE PTR [rbx+0x8],0x3
   140011efd:	jmp    0x140011f03
   140011eff:	and    QWORD PTR [rbx],0x0
   140011f03:	mov    rax,rbx
   140011f06:	add    rsp,0x20
   140011f0a:	pop    rbx
   140011f0b:	ret    
   140011f0c:	rex push rbx
   140011f0e:	sub    rsp,0x20
   140011f12:	mov    rbx,rdx
   140011f15:	cmp    r8d,0x9
   140011f19:	ja     0x140011f3d
   140011f1b:	cmp    DWORD PTR [rcx],0xffffffff
   140011f1e:	je     0x140011f36
   140011f20:	cmp    r8d,DWORD PTR [rcx]
   140011f23:	jg     0x140011f36
   140011f25:	movsxd rax,r8d
   140011f28:	mov    rcx,QWORD PTR [rcx+rax*8+0x8]
   140011f2d:	movups xmm0,XMMWORD PTR [rcx]
   140011f30:	movdqu XMMWORD PTR [rdx],xmm0
   140011f34:	jmp    0x140011f4a
   140011f36:	mov    edx,0x2
   140011f3b:	jmp    0x140011f42
   140011f3d:	mov    edx,0x3
   140011f42:	mov    rcx,rbx
   140011f45:	call   0x140011a84
   140011f4a:	mov    rax,rbx
   140011f4d:	add    rsp,0x20
   140011f51:	pop    rbx
   140011f52:	ret    
   140011f53:	int3   
   140011f54:	mov    QWORD PTR [rsp+0x8],rbx
   140011f59:	push   rbp
   140011f5a:	mov    rbp,rsp
   140011f5d:	sub    rsp,0x70
   140011f61:	mov    ecx,DWORD PTR [rbp-0x48]
   140011f64:	and    QWORD PTR [rbp-0x50],0x0
   140011f69:	and    QWORD PTR [rbp-0x40],0x0
   140011f6e:	mov    eax,0xffff0000
   140011f73:	and    DWORD PTR [rbp-0x38],eax
   140011f76:	and    ecx,eax
   140011f78:	mov    rax,QWORD PTR [rip+0x27001]        # 0x140038f80
   140011f7f:	mov    DWORD PTR [rbp-0x48],ecx
   140011f82:	test   rax,rax
   140011f85:	je     0x14001205c
   140011f8b:	cmp    BYTE PTR [rax],0x3f
   140011f8e:	jne    0x140012027
   140011f94:	mov    dl,BYTE PTR [rax+0x1]
   140011f97:	cmp    dl,0x40
   140011f9a:	jne    0x140011fda
   140011f9c:	add    QWORD PTR [rip+0x26fd4],0x2        # 0x140038f78
   140011fa4:	lea    rcx,[rbp-0x20]
   140011fa8:	call   0x1400147e0
   140011fad:	lea    rdx,[rip+0x1cc48]        # 0x14002ebfc
   140011fb4:	lea    rcx,[rbp-0x10]
   140011fb8:	mov    rbx,rax
   140011fbb:	call   0x140011a3c
   140011fc0:	lea    rcx,[rbp-0x30]
   140011fc4:	mov    rdx,rbx
   140011fc7:	movups xmm0,XMMWORD PTR [rax]
   140011fca:	movdqu XMMWORD PTR [rbp-0x30],xmm0
   140011fcf:	call   0x1400122b0
   140011fd4:	movaps xmm1,XMMWORD PTR [rbp-0x30]
   140011fd8:	jmp    0x140012033
   140011fda:	cmp    dl,0x24
   140011fdd:	jne    0x140012039
   140011fdf:	lea    rcx,[rbp-0x10]
   140011fe3:	xor    edx,edx
   140011fe5:	call   0x1400175c0
   140011fea:	movups xmm1,XMMWORD PTR [rax]
   140011fed:	movdqa xmm0,xmm1
   140011ff1:	psrldq xmm0,0x8
   140011ff6:	movd   eax,xmm0
   140011ffa:	mov    BYTE PTR [rbp-0x48],al
   140011ffd:	cmp    al,0x2
   140011fff:	je     0x140012019
   140012001:	test   DWORD PTR [rip+0x26f89],0x1000        # 0x140038f94
   14001200b:	jne    0x140012060
   14001200d:	mov    rax,QWORD PTR [rip+0x26f64]        # 0x140038f78
   140012014:	cmp    BYTE PTR [rax],0x0
   140012017:	je     0x140012060
   140012019:	mov    rax,QWORD PTR [rip+0x26f60]        # 0x140038f80
   140012020:	mov    QWORD PTR [rip+0x26f51],rax        # 0x140038f78
   140012027:	lea    rcx,[rbp-0x10]
   14001202b:	call   0x1400147e0
   140012030:	movups xmm1,XMMWORD PTR [rax]
   140012033:	movaps XMMWORD PTR [rbp-0x50],xmm1
   140012037:	jmp    0x140012060
   140012039:	cmp    dl,0x3f
   14001203c:	jne    0x140012027
   14001203e:	mov    rax,QWORD PTR [rip+0x26f3b]        # 0x140038f80
   140012045:	cmp    BYTE PTR [rax+0x2],0x40
   140012049:	jne    0x140012027
   14001204b:	and    ecx,0xffff0002
   140012051:	or     ecx,0x2
   140012054:	and    QWORD PTR [rbp-0x50],0x0
   140012059:	mov    DWORD PTR [rbp-0x48],ecx
   14001205c:	movaps xmm1,XMMWORD PTR [rbp-0x50]
   140012060:	cmp    BYTE PTR [rbp-0x48],0x3
   140012064:	jne    0x14001206d
   140012066:	xor    eax,eax
   140012068:	jmp    0x14001213a
   14001206d:	cmp    BYTE PTR [rbp-0x48],0x2
   140012071:	je     0x140012092
   140012073:	test   DWORD PTR [rip+0x26f17],0x1000        # 0x140038f94
   14001207d:	jne    0x14001208b
   14001207f:	mov    rax,QWORD PTR [rip+0x26ef2]        # 0x140038f78
   140012086:	cmp    BYTE PTR [rax],0x0
   140012089:	jne    0x140012092
   14001208b:	movdqa XMMWORD PTR [rbp-0x40],xmm1
   140012090:	jmp    0x1400120a2
   140012092:	mov    rdx,QWORD PTR [rip+0x26ee7]        # 0x140038f80
   140012099:	lea    rcx,[rbp-0x40]
   14001209d:	call   0x140011e90
   1400120a2:	mov    rax,QWORD PTR [rip+0x26edf]        # 0x140038f88
   1400120a9:	test   rax,rax
   1400120ac:	jne    0x1400120e1
   1400120ae:	mov    rcx,QWORD PTR [rbp-0x40]
   1400120b2:	test   rcx,rcx
   1400120b5:	je     0x1400120bc
   1400120b7:	mov    rax,QWORD PTR [rcx]
   1400120ba:	call   QWORD PTR [rax]
   1400120bc:	inc    eax
   1400120be:	movsxd rcx,eax
   1400120c1:	mov    DWORD PTR [rip+0x26ec9],eax        # 0x140038f90
   1400120c7:	add    rcx,0x7
   1400120cb:	and    rcx,0xfffffffffffffff8
   1400120cf:	call   QWORD PTR [rip+0x26ecb]        # 0x140038fa0
   1400120d5:	mov    QWORD PTR [rip+0x26eac],rax        # 0x140038f88
   1400120dc:	test   rax,rax
   1400120df:	je     0x14001213a
   1400120e1:	mov    r8d,DWORD PTR [rip+0x26ea8]        # 0x140038f90
   1400120e8:	lea    rcx,[rbp-0x40]
   1400120ec:	mov    rdx,rax
   1400120ef:	call   0x140016ca4
   1400120f4:	mov    rax,QWORD PTR [rip+0x26e8d]        # 0x140038f88
   1400120fb:	mov    dl,BYTE PTR [rax]
   1400120fd:	mov    rcx,rax
   140012100:	test   dl,dl
   140012102:	je     0x14001212f
   140012104:	mov    r8b,0x20
   140012107:	cmp    dl,r8b
   14001210a:	jne    0x140012121
   14001210c:	inc    rax
   14001210f:	mov    BYTE PTR [rcx],r8b
   140012112:	inc    rcx
   140012115:	jmp    0x14001211a
   140012117:	inc    rax
   14001211a:	cmp    BYTE PTR [rax],r8b
   14001211d:	je     0x140012117
   14001211f:	jmp    0x140012129
   140012121:	mov    BYTE PTR [rcx],dl
   140012123:	inc    rcx
   140012126:	inc    rax
   140012129:	mov    dl,BYTE PTR [rax]
   14001212b:	test   dl,dl
   14001212d:	jne    0x140012107
   14001212f:	mov    al,BYTE PTR [rax]
   140012131:	mov    BYTE PTR [rcx],al
   140012133:	mov    rax,QWORD PTR [rip+0x26e4e]        # 0x140038f88
   14001213a:	mov    rbx,QWORD PTR [rsp+0x80]
   140012142:	add    rsp,0x70
   140012146:	pop    rbp
   140012147:	ret    
   140012148:	mov    QWORD PTR [rsp+0x8],rbx
   14001214d:	push   rdi
   14001214e:	sub    rsp,0x30
   140012152:	mov    rdi,rcx
   140012155:	lea    rcx,[rsp+0x20]
   14001215a:	mov    rbx,r8
   14001215d:	call   0x14001197c
   140012162:	mov    rdx,rbx
   140012165:	mov    rcx,rdi
   140012168:	movups xmm0,XMMWORD PTR [rax]
   14001216b:	movdqu XMMWORD PTR [rdi],xmm0
   14001216f:	call   0x1400122b0
   140012174:	mov    rbx,QWORD PTR [rsp+0x40]
   140012179:	mov    rax,rdi
   14001217c:	add    rsp,0x30
   140012180:	pop    rdi
   140012181:	ret    
   140012182:	int3   
   140012183:	int3   
   140012184:	mov    QWORD PTR [rsp+0x8],rbx
   140012189:	push   rdi
   14001218a:	sub    rsp,0x30
   14001218e:	mov    rdi,rcx
   140012191:	lea    rcx,[rsp+0x20]
   140012196:	mov    rbx,r8
   140012199:	call   0x140011a3c
   14001219e:	mov    rdx,rbx
   1400121a1:	mov    rcx,rdi
   1400121a4:	movups xmm0,XMMWORD PTR [rax]
   1400121a7:	movdqu XMMWORD PTR [rdi],xmm0
   1400121ab:	call   0x1400122b0
   1400121b0:	mov    rbx,QWORD PTR [rsp+0x40]
   1400121b5:	mov    rax,rdi
   1400121b8:	add    rsp,0x30
   1400121bc:	pop    rdi
   1400121bd:	ret    
   1400121be:	int3   
   1400121bf:	int3   
   1400121c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400121c5:	push   rdi
   1400121c6:	sub    rsp,0x30
   1400121ca:	mov    rdi,rcx
   1400121cd:	lea    rcx,[rsp+0x20]
   1400121d2:	mov    rbx,r8
   1400121d5:	call   0x140011a84
   1400121da:	mov    rdx,rbx
   1400121dd:	mov    rcx,rdi
   1400121e0:	movups xmm0,XMMWORD PTR [rax]
   1400121e3:	movdqu XMMWORD PTR [rdi],xmm0
   1400121e7:	call   0x1400122b0
   1400121ec:	mov    rbx,QWORD PTR [rsp+0x40]
   1400121f1:	mov    rax,rdi
   1400121f4:	add    rsp,0x30
   1400121f8:	pop    rdi
   1400121f9:	ret    
   1400121fa:	int3   
   1400121fb:	int3   
   1400121fc:	rex push rbx
   1400121fe:	sub    rsp,0x20
   140012202:	movups xmm0,XMMWORD PTR [rcx]
   140012205:	mov    rbx,rdx
   140012208:	mov    rcx,rbx
   14001220b:	movdqu XMMWORD PTR [rdx],xmm0
   14001220f:	mov    rdx,r8
   140012212:	call   0x1400122b0
   140012217:	mov    rax,rbx
   14001221a:	add    rsp,0x20
   14001221e:	pop    rbx
   14001221f:	ret    
   140012220:	rex push rbx
   140012222:	sub    rsp,0x20
   140012226:	movups xmm0,XMMWORD PTR [rcx]
   140012229:	mov    rbx,rdx
   14001222c:	mov    rcx,rbx
   14001222f:	movdqu XMMWORD PTR [rdx],xmm0
   140012233:	mov    dl,r8b
   140012236:	call   0x1400122f0
   14001223b:	mov    rax,rbx
   14001223e:	add    rsp,0x20
   140012242:	pop    rbx
   140012243:	ret    
   140012244:	rex push rbx
   140012246:	sub    rsp,0x20
   14001224a:	movups xmm0,XMMWORD PTR [rcx]
   14001224d:	mov    rbx,rdx
   140012250:	mov    rcx,rbx
   140012253:	movdqu XMMWORD PTR [rdx],xmm0
   140012257:	mov    rdx,r8
   14001225a:	call   0x140012374
   14001225f:	mov    rax,rbx
   140012262:	add    rsp,0x20
   140012266:	pop    rbx
   140012267:	ret    
   140012268:	rex push rbx
   14001226a:	sub    rsp,0x20
   14001226e:	movups xmm0,XMMWORD PTR [rcx]
   140012271:	mov    rbx,rdx
   140012274:	mov    rcx,rbx
   140012277:	movdqu XMMWORD PTR [rdx],xmm0
   14001227b:	mov    rdx,r8
   14001227e:	call   0x14001240c
   140012283:	mov    rax,rbx
   140012286:	add    rsp,0x20
   14001228a:	pop    rbx
   14001228b:	ret    
   14001228c:	rex push rbx
   14001228e:	sub    rsp,0x20
   140012292:	movups xmm0,XMMWORD PTR [rcx]
   140012295:	mov    rbx,rdx
   140012298:	mov    rcx,rbx
   14001229b:	movdqu XMMWORD PTR [rdx],xmm0
   14001229f:	mov    edx,r8d
   1400122a2:	call   0x140012498
   1400122a7:	mov    rax,rbx
   1400122aa:	add    rsp,0x20
   1400122ae:	pop    rbx
   1400122af:	ret    
   1400122b0:	rex push rbx
   1400122b2:	sub    rsp,0x20
   1400122b6:	cmp    BYTE PTR [rcx+0x8],0x1
   1400122ba:	mov    rbx,rcx
   1400122bd:	jg     0x1400122e7
   1400122bf:	cmp    QWORD PTR [rdx],0x0
   1400122c3:	jne    0x1400122d0
   1400122c5:	movsx  edx,BYTE PTR [rdx+0x8]
   1400122c9:	call   0x140012498
   1400122ce:	jmp    0x1400122e7
   1400122d0:	cmp    QWORD PTR [rcx],0x0
   1400122d4:	jne    0x1400122df
   1400122d6:	movups xmm0,XMMWORD PTR [rdx]
   1400122d9:	movdqu XMMWORD PTR [rcx],xmm0
   1400122dd:	jmp    0x1400122e7
   1400122df:	mov    rdx,QWORD PTR [rdx]
   1400122e2:	call   0x1400125c8
   1400122e7:	mov    rax,rbx
   1400122ea:	add    rsp,0x20
   1400122ee:	pop    rbx
   1400122ef:	ret    
   1400122f0:	mov    QWORD PTR [rsp+0x10],rbx
   1400122f5:	push   rdi
   1400122f6:	sub    rsp,0x20
   1400122fa:	mov    r8d,0x1
   140012300:	mov    dil,dl
   140012303:	mov    rbx,rcx
   140012306:	cmp    BYTE PTR [rcx+0x8],r8b
   14001230a:	jg     0x140012366
   14001230c:	test   dl,dl
   14001230e:	je     0x140012366
   140012310:	cmp    QWORD PTR [rcx],0x0
   140012314:	jne    0x140012335
   140012316:	and    QWORD PTR [rcx],0x0
   14001231a:	mov    BYTE PTR [rsp+0x30],dl
   14001231e:	mov    BYTE PTR [rcx+0x8],0x0
   140012322:	and    DWORD PTR [rcx+0x8],0xffff00ff
   140012329:	lea    rdx,[rsp+0x30]
   14001232e:	call   0x140013448
   140012333:	jmp    0x140012366
   140012335:	xor    r8d,r8d
   140012338:	lea    rcx,[rip+0x26c61]        # 0x140038fa0
   14001233f:	lea    edx,[r8+0x10]
   140012343:	call   0x1400157b8
   140012348:	test   rax,rax
   14001234b:	je     0x14001235b
   14001234d:	lea    rcx,[rip+0x1cc8c]        # 0x14002efe0
   140012354:	mov    BYTE PTR [rax+0x8],dil
   140012358:	mov    QWORD PTR [rax],rcx
   14001235b:	mov    rdx,rax
   14001235e:	mov    rcx,rbx
   140012361:	call   0x1400125c8
   140012366:	mov    rax,rbx
   140012369:	mov    rbx,QWORD PTR [rsp+0x38]
   14001236e:	add    rsp,0x20
   140012372:	pop    rdi
   140012373:	ret    
   140012374:	mov    QWORD PTR [rsp+0x8],rbx
   140012379:	mov    QWORD PTR [rsp+0x10],rsi
   14001237e:	push   rdi
   14001237f:	sub    rsp,0x20
   140012383:	cmp    BYTE PTR [rcx+0x8],0x1
   140012387:	mov    rdi,rdx
   14001238a:	mov    rbx,rcx
   14001238d:	jg     0x1400123f6
   14001238f:	xor    esi,esi
   140012391:	test   rdx,rdx
   140012394:	je     0x1400123f6
   140012396:	cmp    QWORD PTR [rcx],rsi
   140012399:	jne    0x1400123a2
   14001239b:	call   0x140011e08
   1400123a0:	jmp    0x1400123f6
   1400123a2:	mov    al,BYTE PTR [rdx+0x8]
   1400123a5:	cmp    al,0x1
   1400123a7:	jbe    0x1400123b3
   1400123a9:	movsx  edx,al
   1400123ac:	call   0x140012498
   1400123b1:	jmp    0x1400123f6
   1400123b3:	xor    r8d,r8d
   1400123b6:	lea    rcx,[rip+0x26be3]        # 0x140038fa0
   1400123bd:	lea    edx,[r8+0x10]
   1400123c1:	call   0x1400157b8
   1400123c6:	test   rax,rax
   1400123c9:	je     0x1400123e8
   1400123cb:	lea    rcx,[rip+0x1cc4e]        # 0x14002f020
   1400123d2:	mov    QWORD PTR [rax],rcx
   1400123d5:	mov    cl,BYTE PTR [rdi+0x8]
   1400123d8:	sub    cl,0x2
   1400123db:	cmp    cl,0x1
   1400123de:	cmovbe rdi,rsi
   1400123e2:	mov    QWORD PTR [rax+0x8],rdi
   1400123e6:	jmp    0x1400123eb
   1400123e8:	mov    rax,rsi
   1400123eb:	mov    rdx,rax
   1400123ee:	mov    rcx,rbx
   1400123f1:	call   0x1400125c8
   1400123f6:	mov    rsi,QWORD PTR [rsp+0x38]
   1400123fb:	mov    rax,rbx
   1400123fe:	mov    rbx,QWORD PTR [rsp+0x30]
   140012403:	add    rsp,0x20
   140012407:	pop    rdi
   140012408:	ret    
   140012409:	int3   
   14001240a:	int3   
   14001240b:	int3   
   14001240c:	mov    QWORD PTR [rsp+0x8],rbx
   140012411:	mov    QWORD PTR [rsp+0x10],rsi
   140012416:	push   rdi
   140012417:	sub    rsp,0x20
   14001241b:	cmp    BYTE PTR [rcx+0x8],0x1
   14001241f:	mov    rsi,rdx
   140012422:	mov    rdi,rcx
   140012425:	jg     0x140012483
   140012427:	xor    ebx,ebx
   140012429:	test   rdx,rdx
   14001242c:	je     0x140012483
   14001242e:	cmp    BYTE PTR [rdx],bl
   140012430:	je     0x140012483
   140012432:	cmp    QWORD PTR [rcx],rbx
   140012435:	jne    0x14001243e
   140012437:	call   0x140011e90
   14001243c:	jmp    0x140012483
   14001243e:	xor    r8d,r8d
   140012441:	lea    rcx,[rip+0x26b58]        # 0x140038fa0
   140012448:	lea    edx,[r8+0x18]
   14001244c:	call   0x1400157b8
   140012451:	test   rax,rax
   140012454:	je     0x140012478
   140012456:	mov    rcx,rsi
   140012459:	mov    r8d,ebx
   14001245c:	cmp    BYTE PTR [rsi],bl
   14001245e:	je     0x14001246a
   140012460:	inc    rcx
   140012463:	inc    r8d
   140012466:	cmp    BYTE PTR [rcx],bl
   140012468:	jne    0x140012460
   14001246a:	mov    rdx,rsi
   14001246d:	mov    rcx,rax
   140012470:	call   0x140011d2c
   140012475:	mov    rbx,rax
   140012478:	mov    rdx,rbx
   14001247b:	mov    rcx,rdi
   14001247e:	call   0x1400125c8
   140012483:	mov    rbx,QWORD PTR [rsp+0x30]
   140012488:	mov    rsi,QWORD PTR [rsp+0x38]
   14001248d:	mov    rax,rdi
   140012490:	add    rsp,0x20
   140012494:	pop    rdi
   140012495:	ret    
   140012496:	int3   
   140012497:	int3   
   140012498:	rex push rbx
   14001249a:	sub    rsp,0x20
   14001249e:	cmp    BYTE PTR [rcx+0x8],0x1
   1400124a2:	mov    rbx,rcx
   1400124a5:	jg     0x1400124d2
   1400124a7:	cmp    QWORD PTR [rcx],0x0
   1400124ab:	je     0x1400124cd
   1400124ad:	lea    eax,[rdx-0x2]
   1400124b0:	cmp    eax,0x1
   1400124b3:	jbe    0x1400124cd
   1400124b5:	test   edx,edx
   1400124b7:	je     0x1400124d2
   1400124b9:	mov    ecx,edx
   1400124bb:	call   0x1400183bc
   1400124c0:	mov    rcx,rbx
   1400124c3:	mov    rdx,rax
   1400124c6:	call   0x1400125c8
   1400124cb:	jmp    0x1400124d2
   1400124cd:	call   0x140011ed0
   1400124d2:	mov    rax,rbx
   1400124d5:	add    rsp,0x20
   1400124d9:	pop    rbx
   1400124da:	ret    
   1400124db:	int3   
   1400124dc:	mov    QWORD PTR [rsp+0x8],rbx
   1400124e1:	push   rdi
   1400124e2:	sub    rsp,0x20
   1400124e6:	cmp    DWORD PTR [rcx],0x9
   1400124e9:	mov    rdi,rdx
   1400124ec:	mov    rbx,rcx
   1400124ef:	je     0x14001252c
   1400124f1:	cmp    QWORD PTR [rdx],0x0
   1400124f5:	je     0x14001252c
   1400124f7:	xor    r8d,r8d
   1400124fa:	lea    rcx,[rip+0x26a9f]        # 0x140038fa0
   140012501:	lea    edx,[r8+0x10]
   140012505:	call   0x1400157b8
   14001250a:	mov    rcx,rax
   14001250d:	test   rax,rax
   140012510:	je     0x14001251b
   140012512:	movups xmm0,XMMWORD PTR [rdi]
   140012515:	movdqu XMMWORD PTR [rax],xmm0
   140012519:	jmp    0x14001251d
   14001251b:	xor    ecx,ecx
   14001251d:	test   rcx,rcx
   140012520:	je     0x14001252c
   140012522:	inc    DWORD PTR [rbx]
   140012524:	movsxd rax,DWORD PTR [rbx]
   140012527:	mov    QWORD PTR [rbx+rax*8+0x8],rcx
   14001252c:	mov    rax,rbx
   14001252f:	mov    rbx,QWORD PTR [rsp+0x30]
   140012534:	add    rsp,0x20
   140012538:	pop    rdi
   140012539:	ret    
   14001253a:	int3   
   14001253b:	int3   
   14001253c:	cmp    BYTE PTR [rcx+0x8],0x3
   140012540:	je     0x14001254c
   140012542:	mov    al,BYTE PTR [rdx+0x8]
   140012545:	cmp    al,0x1
   140012547:	jle    0x14001254c
   140012549:	mov    BYTE PTR [rcx+0x8],al
   14001254c:	mov    rax,rcx
   14001254f:	ret    
   140012550:	xor    eax,eax
   140012552:	mov    QWORD PTR [rcx],rdx
   140012555:	mov    QWORD PTR [rcx+0x8],r8
   140012559:	mov    QWORD PTR [rcx+0x20],rax
   14001255d:	mov    QWORD PTR [rcx+0x10],rax
   140012561:	mov    QWORD PTR [rcx+0x18],rax
   140012565:	ret    
   140012566:	int3   
   140012567:	int3   
   140012568:	rex push rbx
   14001256a:	sub    rsp,0x20
   14001256e:	cmp    QWORD PTR [rcx+0x8],0x0
   140012573:	mov    rbx,rcx
   140012576:	je     0x1400125a0
   140012578:	mov    rax,QWORD PTR [rcx+0x10]
   14001257c:	mov    QWORD PTR [rcx+0x18],rax
   140012580:	jmp    0x14001259b
   140012582:	mov    rax,QWORD PTR [rbx+0x18]
   140012586:	mov    rcx,QWORD PTR [rax]
   140012589:	mov    QWORD PTR [rbx+0x10],rcx
   14001258d:	mov    rcx,rax
   140012590:	call   QWORD PTR [rbx+0x8]
   140012593:	mov    rax,QWORD PTR [rbx+0x10]
   140012597:	mov    QWORD PTR [rbx+0x18],rax
   14001259b:	test   rax,rax
   14001259e:	jne    0x140012582
   1400125a0:	add    rsp,0x20
   1400125a4:	pop    rbx
   1400125a5:	ret    
   1400125a6:	int3   
   1400125a7:	int3   
   1400125a8:	mov    eax,DWORD PTR [rip+0x269e6]        # 0x140038f94
   1400125ae:	not    eax
   1400125b0:	test   al,0x1
   1400125b2:	movsxd rax,ecx
   1400125b5:	lea    rcx,[rip+0x1bce4]        # 0x14002e2a0
   1400125bc:	mov    rax,QWORD PTR [rcx+rax*8]
   1400125c0:	jne    0x1400125c6
   1400125c2:	add    rax,0x2
   1400125c6:	ret    
   1400125c7:	int3   
   1400125c8:	mov    QWORD PTR [rsp+0x8],rbx
   1400125cd:	push   rdi
   1400125ce:	sub    rsp,0x20
   1400125d2:	mov    rdi,rdx
   1400125d5:	mov    rbx,rcx
   1400125d8:	test   rdx,rdx
   1400125db:	je     0x14001261c
   1400125dd:	xor    r8d,r8d
   1400125e0:	lea    rcx,[rip+0x269b9]        # 0x140038fa0
   1400125e7:	lea    edx,[r8+0x20]
   1400125eb:	call   0x1400157b8
   1400125f0:	test   rax,rax
   1400125f3:	je     0x14001260e
   1400125f5:	mov    rdx,QWORD PTR [rbx]
   1400125f8:	or     DWORD PTR [rax+0x18],0xffffffff
   1400125fc:	lea    rcx,[rip+0x1ca5d]        # 0x14002f060
   140012603:	mov    QWORD PTR [rax+0x8],rdx
   140012607:	mov    QWORD PTR [rax],rcx
   14001260a:	mov    QWORD PTR [rax+0x10],rdi
   14001260e:	mov    QWORD PTR [rbx],rax
   140012611:	test   rax,rax
   140012614:	jne    0x140012620
   140012616:	mov    BYTE PTR [rbx+0x8],0x3
   14001261a:	jmp    0x140012620
   14001261c:	mov    BYTE PTR [rcx+0x8],0x3
   140012620:	mov    rbx,QWORD PTR [rsp+0x30]
   140012625:	add    rsp,0x20
   140012629:	pop    rdi
   14001262a:	ret    
   14001262b:	int3   
   14001262c:	mov    rax,rsp
   14001262f:	mov    QWORD PTR [rax+0x8],rbx
   140012633:	push   rbp
   140012634:	push   rsi
   140012635:	push   rdi
   140012636:	push   r12
   140012638:	push   r13
   14001263a:	push   r14
   14001263c:	push   r15
   14001263e:	lea    rbp,[rax-0x5f]
   140012642:	sub    rsp,0xf0
   140012649:	mov    ebx,DWORD PTR [rsp+0x48]
   14001264d:	and    QWORD PTR [rsp+0x40],0x0
   140012653:	movaps XMMWORD PTR [rax-0x48],xmm6
   140012657:	and    ebx,0xffff0000
   14001265d:	movaps XMMWORD PTR [rax-0x58],xmm7
   140012661:	mov    r12,rdx
   140012664:	mov    DWORD PTR [rsp+0x48],ebx
   140012668:	mov    rdi,rcx
   14001266b:	call   0x14001789c
   140012670:	cmp    QWORD PTR [r12],0x0
   140012675:	mov    esi,eax
   140012677:	je     0x14001268d
   140012679:	test   DWORD PTR [r12+0x8],0x200
   140012682:	je     0x14001268d
   140012684:	mov    DWORD PTR [rbp+0x7f],0x1
   14001268b:	jmp    0x140012691
   14001268d:	and    DWORD PTR [rbp+0x7f],0x0
   140012691:	cmp    eax,0xffff
   140012696:	jne    0x1400126aa
   140012698:	mov    edx,0x2
   14001269d:	mov    rcx,rdi
   1400126a0:	call   0x140011a84
   1400126a5:	jmp    0x140013388
   1400126aa:	cmp    eax,0xfffe
   1400126af:	jne    0x1400126d7
   1400126b1:	lea    rcx,[rsp+0x30]
   1400126b6:	mov    edx,0x1
   1400126bb:	call   0x140011a84
   1400126c0:	mov    rdx,r12
   1400126c3:	mov    rcx,rdi
   1400126c6:	movups xmm0,XMMWORD PTR [rax]
   1400126c9:	movdqu XMMWORD PTR [rdi],xmm0
   1400126cd:	call   0x1400122b0
   1400126d2:	jmp    0x140013388
   1400126d7:	cmp    eax,0xfffd
   1400126dc:	jne    0x1400126ec
   1400126de:	movups xmm0,XMMWORD PTR [r12]
   1400126e3:	movdqu XMMWORD PTR [rdi],xmm0
   1400126e7:	jmp    0x140013388
   1400126ec:	mov    r15d,eax
   1400126ef:	mov    r9d,0x1000
   1400126f5:	mov    r8d,0x1b00
   1400126fb:	and    r15d,0x8000
   140012702:	je     0x140012f27
   140012708:	xor    r13d,r13d
   14001270b:	mov    edx,eax
   14001270d:	mov    r14d,esi
   140012710:	and    edx,0x1800
   140012716:	cmp    edx,0x800
   14001271c:	mov    DWORD PTR [rbp+0x6f],edx
   14001271f:	sete   r13b
   140012723:	and    eax,0x400
   140012728:	and    r14d,r9d
   14001272b:	mov    DWORD PTR [rbp+0x77],eax
   14001272e:	test   r13d,r13d
   140012731:	mov    eax,r14d
   140012734:	mov    ecx,DWORD PTR [rbp+0x77]
   140012737:	mov    DWORD PTR [rbp-0x45],r13d
   14001273b:	mov    DWORD PTR [rbp-0x49],r14d
   14001273f:	cmovne eax,ecx
   140012742:	test   eax,eax
   140012744:	je     0x140012754
   140012746:	mov    eax,esi
   140012748:	and    eax,r8d
   14001274b:	cmp    eax,r9d
   14001274e:	je     0x140012f27
   140012754:	test   r13d,r13d
   140012757:	mov    eax,r14d
   14001275a:	cmovne eax,ecx
   14001275d:	test   eax,eax
   14001275f:	je     0x14001277c
   140012761:	mov    eax,esi
   140012763:	and    eax,r8d
   140012766:	cmp    eax,0x1100
   14001276b:	je     0x140012f27
   140012771:	cmp    eax,0x1200
   140012776:	je     0x140012f27
   14001277c:	bt     esi,0xe
   140012780:	jae    0x1400127e1
   140012782:	mov    ecx,DWORD PTR [rip+0x2680c]        # 0x140038f94
   140012788:	mov    eax,ecx
   14001278a:	shr    eax,1
   14001278c:	not    eax
   14001278e:	test   al,0x1
   140012790:	je     0x140012860
   140012796:	shr    ecx,0x3
   140012799:	not    ecx
   14001279b:	test   cl,0x1
   14001279e:	je     0x140012860
   1400127a4:	lea    rcx,[rsp+0x30]
   1400127a9:	call   0x1400139d4
   1400127ae:	lea    rcx,[rbp-0x59]
   1400127b2:	mov    dl,0x20
   1400127b4:	mov    rbx,rax
   1400127b7:	call   0x14001197c
   1400127bc:	lea    rcx,[rbp-0x79]
   1400127c0:	mov    rdx,rbx
   1400127c3:	movups xmm0,XMMWORD PTR [rax]
   1400127c6:	movdqu XMMWORD PTR [rbp-0x79],xmm0
   1400127cb:	call   0x1400122b0
   1400127d0:	movaps xmm0,XMMWORD PTR [rbp-0x79]
   1400127d4:	movdqa XMMWORD PTR [rsp+0x40],xmm0
   1400127da:	mov    ebx,DWORD PTR [rsp+0x48]
   1400127de:	mov    edx,DWORD PTR [rbp+0x6f]
   1400127e1:	test   r13d,r13d
   1400127e4:	cmovne r14d,DWORD PTR [rbp+0x77]
   1400127e9:	test   r14d,r14d
   1400127ec:	je     0x1400129ad
   1400127f2:	cmp    edx,0x1800
   1400127f8:	jne    0x1400129ad
   1400127fe:	lea    rcx,[rsp+0x30]
   140012803:	xor    edx,edx
   140012805:	call   0x140014a54
   14001280a:	lea    rcx,[rbp-0x79]
   14001280e:	mov    dl,0x7b
   140012810:	movups xmm0,XMMWORD PTR [r12]
   140012815:	movdqu XMMWORD PTR [rbp-0x79],xmm0
   14001281a:	call   0x1400122f0
   14001281f:	lea    rdx,[rsp+0x30]
   140012824:	movaps xmm0,XMMWORD PTR [rbp-0x79]
   140012828:	lea    rcx,[rbp-0x79]
   14001282c:	movdqa XMMWORD PTR [rbp-0x79],xmm0
   140012831:	call   0x1400122b0
   140012836:	lea    rdx,[rbp-0x79]
   14001283a:	lea    rcx,[rsp+0x40]
   14001283f:	call   0x1400122b0
   140012844:	mov    rax,QWORD PTR [rip+0x2672d]        # 0x140038f78
   14001284b:	lea    rcx,[rbp-0x39]
   14001284f:	cmp    BYTE PTR [rax],0x0
   140012852:	je     0x1400128af
   140012854:	cmp    BYTE PTR [rax],0x41
   140012857:	je     0x140012897
   140012859:	mov    edx,0x2
   14001285e:	jmp    0x1400128b4
   140012860:	lea    rcx,[rsp+0x30]
   140012865:	call   0x1400139d4
   14001286a:	cmp    BYTE PTR [rsp+0x48],0x3
   14001286f:	je     0x1400127de
   140012875:	cmp    BYTE PTR [rax+0x8],0x1
   140012879:	mov    edx,DWORD PTR [rbp+0x6f]
   14001287c:	jle    0x1400127e1
   140012882:	movzx  eax,BYTE PTR [rax+0x8]
   140012886:	and    ebx,0xffffff00
   14001288c:	or     ebx,eax
   14001288e:	mov    DWORD PTR [rsp+0x48],ebx
   140012892:	jmp    0x1400127e1
   140012897:	inc    rax
   14001289a:	lea    rdx,[rip+0x1c703]        # 0x14002efa4
   1400128a1:	mov    QWORD PTR [rip+0x266d0],rax        # 0x140038f78
   1400128a8:	call   0x140011a3c
   1400128ad:	jmp    0x1400128b9
   1400128af:	mov    edx,0x1
   1400128b4:	call   0x140011a84
   1400128b9:	mov    ebx,0x1000
   1400128be:	test   DWORD PTR [rip+0x266d0],ebx        # 0x140038f94
   1400128c4:	jne    0x14001290e
   1400128c6:	lea    rcx,[rsp+0x30]
   1400128cb:	mov    dl,0x2c
   1400128cd:	call   0x14001197c
   1400128d2:	lea    rdx,[rbp-0x39]
   1400128d6:	lea    rcx,[rbp-0x79]
   1400128da:	movups xmm0,XMMWORD PTR [rax]
   1400128dd:	movdqu XMMWORD PTR [rbp-0x79],xmm0
   1400128e2:	call   0x1400122b0
   1400128e7:	movaps xmm0,XMMWORD PTR [rbp-0x79]
   1400128eb:	lea    rdx,[rip+0x1c3ae]        # 0x14002eca0
   1400128f2:	lea    rcx,[rbp-0x79]
   1400128f6:	movdqa XMMWORD PTR [rbp-0x79],xmm0
   1400128fb:	call   0x14001240c
   140012900:	lea    rdx,[rbp-0x79]
   140012904:	lea    rcx,[rsp+0x40]
   140012909:	call   0x1400122b0
   14001290e:	lea    rdx,[rip+0x1c38f]        # 0x14002eca4
   140012915:	lea    rcx,[rsp+0x40]
   14001291a:	call   0x14001240c
   14001291f:	lea    rcx,[rsp+0x30]
   140012924:	call   0x140013ec0
   140012929:	mov    ecx,DWORD PTR [rip+0x26665]        # 0x140038f94
   14001292f:	mov    eax,ecx
   140012931:	shr    eax,1
   140012933:	not    eax
   140012935:	test   al,0x1
   140012937:	je     0x140012f19
   14001293d:	mov    eax,ecx
   14001293f:	shr    eax,0x4
   140012942:	not    eax
   140012944:	test   al,0x1
   140012946:	je     0x140012f19
   14001294c:	test   ebx,ecx
   14001294e:	jne    0x140012f19
   140012954:	lea    rcx,[rbp-0x59]
   140012958:	mov    dl,0x20
   14001295a:	call   0x14001197c
   14001295f:	lea    rdx,[rsp+0x30]
   140012964:	lea    rcx,[rbp-0x79]
   140012968:	movups xmm0,XMMWORD PTR [rax]
   14001296b:	movdqu XMMWORD PTR [rbp-0x79],xmm0
   140012970:	call   0x1400122b0
   140012975:	movaps xmm0,XMMWORD PTR [rbp-0x79]
   140012979:	lea    rcx,[rbp-0x79]
   14001297d:	mov    dl,0x20
   14001297f:	movdqa XMMWORD PTR [rbp-0x79],xmm0
   140012984:	call   0x1400122f0
   140012989:	lea    rdx,[rsp+0x40]
   14001298e:	movaps xmm0,XMMWORD PTR [rbp-0x79]
   140012992:	lea    rcx,[rbp-0x79]
   140012996:	movdqa XMMWORD PTR [rbp-0x79],xmm0
   14001299b:	call   0x1400122b0
   1400129a0:	movaps xmm6,XMMWORD PTR [rbp-0x79]
   1400129a4:	mov    r12d,DWORD PTR [rbp+0x6f]
   1400129a8:	jmp    0x140013192
   1400129ad:	mov    r14d,DWORD PTR [rbp-0x21]
   1400129b1:	and    QWORD PTR [rbp-0x9],0x0
   1400129b6:	and    QWORD PTR [rbp-0x39],0x0
   1400129bb:	and    QWORD PTR [rbp-0x19],0x0
   1400129c0:	and    QWORD PTR [rbp-0x59],0x0
   1400129c5:	and    QWORD PTR [rbp-0x29],0x0
   1400129ca:	mov    eax,DWORD PTR [rbp-0x49]
   1400129cd:	mov    edx,0xffff0000
   1400129d2:	and    DWORD PTR [rbp-0x1],edx
   1400129d5:	and    DWORD PTR [rbp-0x31],edx
   1400129d8:	and    DWORD PTR [rbp-0x11],edx
   1400129db:	and    DWORD PTR [rbp-0x51],edx
   1400129de:	and    r14d,edx
   1400129e1:	test   r13d,r13d
   1400129e4:	cmovne eax,DWORD PTR [rbp+0x77]
   1400129e8:	mov    DWORD PTR [rbp-0x21],r14d
   1400129ec:	test   eax,eax
   1400129ee:	je     0x140012a76
   1400129f4:	test   r13d,r13d
   1400129f7:	je     0x140012a5e
   1400129f9:	mov    eax,esi
   1400129fb:	and    eax,0x700
   140012a00:	cmp    eax,0x600
   140012a05:	jne    0x140012a35
   140012a07:	lea    rcx,[rsp+0x30]
   140012a0c:	mov    dl,0x1
   140012a0e:	call   0x140014a54
   140012a13:	lea    rcx,[rsp+0x30]
   140012a18:	mov    dl,0x1
   140012a1a:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   140012a1f:	movdqa XMMWORD PTR [rbp-0x9],xmm0
   140012a24:	call   0x140014a54
   140012a29:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   140012a2e:	movdqa XMMWORD PTR [rbp-0x39],xmm0
   140012a33:	jmp    0x140012a48
   140012a35:	test   r13d,r13d
   140012a38:	je     0x140012a5e
   140012a3a:	mov    eax,esi
   140012a3c:	and    eax,0x700
   140012a41:	cmp    eax,0x500
   140012a46:	jne    0x140012a5e
   140012a48:	lea    rcx,[rsp+0x30]
   140012a4d:	mov    dl,0x1
   140012a4f:	call   0x140014a54
   140012a54:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   140012a59:	movdqa XMMWORD PTR [rbp-0x19],xmm0
   140012a5e:	lea    rcx,[rsp+0x30]
   140012a63:	mov    dl,0x1
   140012a65:	call   0x140014a54
   140012a6a:	mov    edx,0xffff0000
   140012a6f:	movaps xmm7,XMMWORD PTR [rsp+0x30]
   140012a74:	jmp    0x140012a7a
   140012a76:	movaps xmm7,XMMWORD PTR [rbp-0x59]
   140012a7a:	test   r13d,r13d
   140012a7d:	je     0x140012b08
   140012a83:	mov    eax,esi
   140012a85:	and    eax,0x700
   140012a8a:	cmp    eax,0x200
   140012a8f:	je     0x140012b08
   140012a91:	mov    eax,DWORD PTR [rip+0x264fd]        # 0x140038f94
   140012a97:	and    QWORD PTR [rbp-0x59],0x0
   140012a9c:	and    DWORD PTR [rbp-0x51],edx
   140012a9f:	and    QWORD PTR [rbp-0x79],0x0
   140012aa4:	and    DWORD PTR [rbp-0x71],edx
   140012aa7:	and    eax,0x60
   140012aaa:	mov    DWORD PTR [rsp+0x20],0x1
   140012ab2:	lea    r8,[rip+0x17f97]        # 0x14002aa50
   140012ab9:	lea    rcx,[rsp+0x30]
   140012abe:	cmp    al,0x60
   140012ac0:	je     0x140012adb
   140012ac2:	lea    r9,[rbp-0x59]
   140012ac6:	lea    rdx,[rbp-0x79]
   140012aca:	call   0x140013fc0
   140012acf:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   140012ad4:	movdqa XMMWORD PTR [rbp-0x29],xmm0
   140012ad9:	jmp    0x140012b08
   140012adb:	lea    r9,[rbp-0x79]
   140012adf:	lea    rdx,[rbp-0x59]
   140012ae3:	call   0x140013fc0
   140012ae8:	cmp    BYTE PTR [rbp-0x21],0x3
   140012aec:	je     0x140012b08
   140012aee:	cmp    BYTE PTR [rsp+0x38],0x1
   140012af3:	jle    0x140012b08
   140012af5:	movzx  eax,BYTE PTR [rsp+0x38]
   140012afa:	and    r14d,0xffffff00
   140012b01:	or     r14d,eax
   140012b04:	mov    DWORD PTR [rbp-0x21],r14d
   140012b08:	mov    ecx,DWORD PTR [rip+0x26486]        # 0x140038f94
   140012b0e:	mov    eax,ecx
   140012b10:	shr    eax,1
   140012b12:	not    eax
   140012b14:	test   al,0x1
   140012b16:	je     0x140012b50
   140012b18:	shr    ecx,0x4
   140012b1b:	not    ecx
   140012b1d:	test   cl,0x1
   140012b20:	je     0x140012b50
   140012b22:	lea    rcx,[rbp-0x79]
   140012b26:	call   0x140013ec0
   140012b2b:	lea    rdx,[rsp+0x40]
   140012b30:	lea    rcx,[rsp+0x30]
   140012b35:	movups xmm0,XMMWORD PTR [rax]
   140012b38:	movdqu XMMWORD PTR [rsp+0x30],xmm0
   140012b3e:	call   0x1400122b0
   140012b43:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   140012b48:	movdqa XMMWORD PTR [rsp+0x40],xmm0
   140012b4e:	jmp    0x140012b77
   140012b50:	lea    rcx,[rsp+0x30]
   140012b55:	call   0x140013ec0
   140012b5a:	cmp    BYTE PTR [rsp+0x48],0x3
   140012b5f:	je     0x140012b77
   140012b61:	cmp    BYTE PTR [rax+0x8],0x1
   140012b65:	jle    0x140012b77
   140012b67:	movzx  eax,BYTE PTR [rax+0x8]
   140012b6b:	and    ebx,0xffffff00
   140012b71:	or     ebx,eax
   140012b73:	mov    DWORD PTR [rsp+0x48],ebx
   140012b77:	xor    ebx,ebx
   140012b79:	cmp    QWORD PTR [r12],rbx
   140012b7d:	je     0x140012bcf
   140012b7f:	cmp    QWORD PTR [rsp+0x40],rbx
   140012b84:	je     0x140012bc4
   140012b86:	test   DWORD PTR [rip+0x26404],0x1000        # 0x140038f94
   140012b90:	jne    0x140012bc4
   140012b92:	lea    rcx,[rbp-0x79]
   140012b96:	mov    dl,0x20
   140012b98:	call   0x14001197c
   140012b9d:	lea    rcx,[rsp+0x30]
   140012ba2:	mov    rdx,r12
   140012ba5:	movups xmm0,XMMWORD PTR [rax]
   140012ba8:	movdqu XMMWORD PTR [rsp+0x30],xmm0
   140012bae:	call   0x1400122b0
   140012bb3:	lea    rdx,[rsp+0x30]
   140012bb8:	lea    rcx,[rsp+0x40]
   140012bbd:	call   0x1400122b0
   140012bc2:	jmp    0x140012bcf
   140012bc4:	movups xmm0,XMMWORD PTR [r12]
   140012bc9:	movdqu XMMWORD PTR [rsp+0x40],xmm0
   140012bcf:	and    DWORD PTR [rbp-0x71],0xffff0000
   140012bd6:	mov    r12,rbx
   140012bd9:	mov    QWORD PTR [rbp-0x79],rbx
   140012bdd:	cmp    DWORD PTR [rbp+0x7f],ebx
   140012be0:	je     0x140012c41
   140012be2:	lea    rcx,[rbp-0x59]
   140012be6:	xor    edx,edx
   140012be8:	call   0x14001658c
   140012bed:	lea    rdx,[rip+0x1c0b4]        # 0x14002eca8
   140012bf4:	lea    rcx,[rbp-0x69]
   140012bf8:	mov    rbx,rax
   140012bfb:	call   0x140011a3c
   140012c00:	lea    rcx,[rsp+0x30]
   140012c05:	mov    rdx,rbx
   140012c08:	movups xmm0,XMMWORD PTR [rax]
   140012c0b:	movdqu XMMWORD PTR [rsp+0x30],xmm0
   140012c11:	call   0x1400122b0
   140012c16:	lea    rdx,[rsp+0x30]
   140012c1b:	lea    rcx,[rsp+0x40]
   140012c20:	call   0x1400122b0
   140012c25:	test   DWORD PTR [rip+0x26365],0x1000        # 0x140038f94
   140012c2f:	je     0x140012c3b
   140012c31:	movaps xmm0,XMMWORD PTR [rsp+0x40]
   140012c36:	jmp    0x1400126e3
   140012c3b:	movaps xmm6,XMMWORD PTR [rbp-0x79]
   140012c3f:	jmp    0x140012c7d
   140012c41:	xor    r8d,r8d
   140012c44:	lea    rcx,[rip+0x26355]        # 0x140038fa0
   140012c4b:	lea    edx,[r8+0x10]
   140012c4f:	call   0x1400157b8
   140012c54:	mov    r12,rax
   140012c57:	test   rax,rax
   140012c5a:	je     0x140012c6b
   140012c5c:	mov    BYTE PTR [rax+0x8],bl
   140012c5f:	and    DWORD PTR [rax+0x8],0xffff00ff
   140012c66:	mov    QWORD PTR [rax],rbx
   140012c69:	jmp    0x140012c6e
   140012c6b:	mov    r12,rbx
   140012c6e:	lea    rcx,[rbp-0x69]
   140012c72:	mov    rdx,r12
   140012c75:	call   0x14001658c
   140012c7a:	movups xmm6,XMMWORD PTR [rax]
   140012c7d:	mov    r14d,DWORD PTR [rbp-0x49]
   140012c81:	test   r13d,r13d
   140012c84:	cmovne r14d,DWORD PTR [rbp+0x77]
   140012c89:	test   r14d,r14d
   140012c8c:	je     0x140012dbd
   140012c92:	test   r13d,r13d
   140012c95:	je     0x140012d86
   140012c9b:	mov    eax,esi
   140012c9d:	and    eax,0x700
   140012ca2:	cmp    eax,0x600
   140012ca7:	jne    0x140012d24
   140012ca9:	lea    rdx,[rip+0x1c000]        # 0x14002ecb0
   140012cb0:	lea    rcx,[rbp-0x69]
   140012cb4:	call   0x140011a3c
   140012cb9:	lea    rdx,[rbp-0x9]
   140012cbd:	lea    rcx,[rsp+0x30]
   140012cc2:	movups xmm0,XMMWORD PTR [rax]
   140012cc5:	movdqu XMMWORD PTR [rsp+0x30],xmm0
   140012ccb:	call   0x1400122b0
   140012cd0:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   140012cd5:	lea    rcx,[rsp+0x30]
   140012cda:	mov    dl,0x2c
   140012cdc:	movdqa XMMWORD PTR [rsp+0x30],xmm0
   140012ce2:	call   0x1400122f0
   140012ce7:	lea    rdx,[rbp-0x39]
   140012ceb:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   140012cf0:	lea    rcx,[rsp+0x30]
   140012cf5:	movdqa XMMWORD PTR [rsp+0x30],xmm0
   140012cfb:	call   0x1400122b0
   140012d00:	lea    rcx,[rsp+0x30]
   140012d05:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   140012d0a:	mov    dl,0x2c
   140012d0c:	movdqa XMMWORD PTR [rsp+0x30],xmm0
   140012d12:	call   0x1400122f0
   140012d17:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   140012d1c:	movdqa XMMWORD PTR [rsp+0x30],xmm0
   140012d22:	jmp    0x140012d50
   140012d24:	test   r13d,r13d
   140012d27:	je     0x140012d86
   140012d29:	mov    eax,esi
   140012d2b:	and    eax,0x700
   140012d30:	cmp    eax,0x500
   140012d35:	jne    0x140012d86
   140012d37:	lea    rdx,[rip+0x1bf82]        # 0x14002ecc0
   140012d3e:	lea    rcx,[rbp-0x69]
   140012d42:	call   0x140011a3c
   140012d47:	movups xmm0,XMMWORD PTR [rax]
   140012d4a:	movdqu XMMWORD PTR [rsp+0x30],xmm0
   140012d50:	lea    rdx,[rbp-0x19]
   140012d54:	lea    rcx,[rsp+0x30]
   140012d59:	call   0x1400122b0
   140012d5e:	lea    rcx,[rsp+0x30]
   140012d63:	mov    dl,0x2c
   140012d65:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   140012d6a:	movdqa XMMWORD PTR [rsp+0x30],xmm0
   140012d70:	call   0x1400122f0
   140012d75:	lea    rdx,[rsp+0x30]
   140012d7a:	lea    rcx,[rsp+0x40]
   140012d7f:	call   0x1400122b0
   140012d84:	jmp    0x140012d97
   140012d86:	lea    rdx,[rip+0x1bf43]        # 0x14002ecd0
   140012d8d:	lea    rcx,[rsp+0x40]
   140012d92:	call   0x14001240c
   140012d97:	lea    rdx,[rip+0x1bf02]        # 0x14002eca0
   140012d9e:	lea    rcx,[rsp+0x30]
   140012da3:	movdqa XMMWORD PTR [rsp+0x30],xmm7
   140012da9:	call   0x14001240c
   140012dae:	lea    rdx,[rsp+0x30]
   140012db3:	lea    rcx,[rsp+0x40]
   140012db8:	call   0x1400122b0
   140012dbd:	lea    rcx,[rbp-0x69]
   140012dc1:	call   0x140013694
   140012dc6:	lea    rcx,[rbp-0x79]
   140012dca:	mov    dl,0x28
   140012dcc:	mov    rbx,rax
   140012dcf:	call   0x14001197c
   140012dd4:	lea    rcx,[rsp+0x30]
   140012dd9:	mov    rdx,rbx
   140012ddc:	movups xmm0,XMMWORD PTR [rax]
   140012ddf:	movdqu XMMWORD PTR [rsp+0x30],xmm0
   140012de5:	call   0x1400122b0
   140012dea:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   140012def:	lea    rcx,[rsp+0x30]
   140012df4:	mov    dl,0x29
   140012df6:	movdqa XMMWORD PTR [rsp+0x30],xmm0
   140012dfc:	call   0x1400122f0
   140012e01:	lea    rdx,[rsp+0x30]
   140012e06:	lea    rcx,[rsp+0x40]
   140012e0b:	call   0x1400122b0
   140012e10:	test   r13d,r13d
   140012e13:	je     0x140012e31
   140012e15:	mov    eax,esi
   140012e17:	and    eax,0x700
   140012e1c:	cmp    eax,0x200
   140012e21:	je     0x140012e31
   140012e23:	lea    rdx,[rbp-0x29]
   140012e27:	lea    rcx,[rsp+0x40]
   140012e2c:	call   0x1400122b0
   140012e31:	mov    eax,DWORD PTR [rip+0x2615d]        # 0x140038f94
   140012e37:	lea    rcx,[rbp-0x69]
   140012e3b:	shr    eax,0x13
   140012e3e:	not    eax
   140012e40:	test   al,0x1
   140012e42:	je     0x140012e58
   140012e44:	call   0x140016464
   140012e49:	lea    rcx,[rsp+0x40]
   140012e4e:	mov    rdx,rax
   140012e51:	call   0x1400122b0
   140012e56:	jmp    0x140012e7e
   140012e58:	call   0x140016464
   140012e5d:	cmp    BYTE PTR [rsp+0x48],0x3
   140012e62:	je     0x140012e7e
   140012e64:	cmp    BYTE PTR [rax+0x8],0x1
   140012e68:	jle    0x140012e7e
   140012e6a:	mov    ecx,DWORD PTR [rsp+0x48]
   140012e6e:	movzx  eax,BYTE PTR [rax+0x8]
   140012e72:	and    ecx,0xffffff00
   140012e78:	or     ecx,eax
   140012e7a:	mov    DWORD PTR [rsp+0x48],ecx
   140012e7e:	mov    eax,DWORD PTR [rip+0x26110]        # 0x140038f94
   140012e84:	lea    rcx,[rbp-0x69]
   140012e88:	shr    eax,0x8
   140012e8b:	not    eax
   140012e8d:	test   al,0x1
   140012e8f:	je     0x140012ea5
   140012e91:	call   0x1400177d8
   140012e96:	lea    rcx,[rsp+0x40]
   140012e9b:	mov    rdx,rax
   140012e9e:	call   0x1400122b0
   140012ea3:	jmp    0x140012ecb
   140012ea5:	call   0x1400177d8
   140012eaa:	cmp    BYTE PTR [rsp+0x48],0x3
   140012eaf:	je     0x140012ecb
   140012eb1:	cmp    BYTE PTR [rax+0x8],0x1
   140012eb5:	jle    0x140012ecb
   140012eb7:	mov    ecx,DWORD PTR [rsp+0x48]
   140012ebb:	movzx  eax,BYTE PTR [rax+0x8]
   140012ebf:	and    ecx,0xffffff00
   140012ec5:	or     ecx,eax
   140012ec7:	mov    DWORD PTR [rsp+0x48],ecx
   140012ecb:	lea    rcx,[rbp-0x69]
   140012ecf:	call   0x140014bb0
   140012ed4:	cmp    BYTE PTR [rsp+0x48],0x3
   140012ed9:	je     0x140012ef5
   140012edb:	cmp    BYTE PTR [rax+0x8],0x1
   140012edf:	jle    0x140012ef5
   140012ee1:	mov    ecx,DWORD PTR [rsp+0x48]
   140012ee5:	movzx  eax,BYTE PTR [rax+0x8]
   140012ee9:	and    ecx,0xffffff00
   140012eef:	or     ecx,eax
   140012ef1:	mov    DWORD PTR [rsp+0x48],ecx
   140012ef5:	mov    eax,DWORD PTR [rip+0x26099]        # 0x140038f94
   140012efb:	shr    eax,0x2
   140012efe:	not    eax
   140012f00:	test   al,0x1
   140012f02:	je     0x140012f19
   140012f04:	test   r12,r12
   140012f07:	je     0x140012f19
   140012f09:	movaps xmm0,XMMWORD PTR [rsp+0x40]
   140012f0e:	movdqu XMMWORD PTR [r12],xmm0
   140012f14:	jmp    0x1400129a4
   140012f19:	movaps xmm6,XMMWORD PTR [rsp+0x40]
   140012f1e:	mov    r12d,DWORD PTR [rbp+0x6f]
   140012f22:	jmp    0x140013197
   140012f27:	lea    rcx,[rsp+0x40]
   140012f2c:	mov    rdx,r12
   140012f2f:	call   0x1400122b0
   140012f34:	mov    r8d,0x7c00
   140012f3a:	test   r15d,r15d
   140012f3d:	jne    0x140012f6e
   140012f3f:	mov    eax,esi
   140012f41:	and    eax,r8d
   140012f44:	cmp    eax,0x6800
   140012f49:	jne    0x140012f5d
   140012f4b:	lea    rdx,[rsp+0x40]
   140012f50:	mov    rcx,rdi
   140012f53:	call   0x140017e3c
   140012f58:	jmp    0x140013388
   140012f5d:	test   r15d,r15d
   140012f60:	jne    0x140012f6e
   140012f62:	mov    eax,esi
   140012f64:	and    eax,r8d
   140012f67:	cmp    eax,0x7000
   140012f6c:	je     0x140012f4b
   140012f6e:	mov    ecx,0x6000
   140012f73:	test   r15d,r15d
   140012f76:	jne    0x140013041
   140012f7c:	mov    eax,esi
   140012f7e:	and    eax,r8d
   140012f81:	cmp    eax,ecx
   140012f83:	jne    0x140012fdd
   140012f85:	lea    rcx,[rbp-0x79]
   140012f89:	xor    edx,edx
   140012f8b:	call   0x140014a54
   140012f90:	lea    rcx,[rsp+0x30]
   140012f95:	mov    dl,0x7b
   140012f97:	movaps xmm0,XMMWORD PTR [rsp+0x40]
   140012f9c:	movdqa XMMWORD PTR [rsp+0x30],xmm0
   140012fa2:	call   0x1400122f0
   140012fa7:	lea    rdx,[rbp-0x79]
   140012fab:	lea    rcx,[rsp+0x30]
   140012fb0:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   140012fb5:	movdqa XMMWORD PTR [rsp+0x30],xmm0
   140012fbb:	call   0x1400122b0
   140012fc0:	lea    rdx,[rip+0x1bcdd]        # 0x14002eca4
   140012fc7:	mov    rcx,rdi
   140012fca:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   140012fcf:	movdqu XMMWORD PTR [rdi],xmm0
   140012fd3:	call   0x14001240c
   140012fd8:	jmp    0x140013388
   140012fdd:	test   r15d,r15d
   140012fe0:	jne    0x140013041
   140012fe2:	mov    eax,esi
   140012fe4:	and    eax,r8d
   140012fe7:	cmp    eax,r8d
   140012fea:	jne    0x140013041
   140012fec:	movaps xmm0,XMMWORD PTR [rsp+0x40]
   140012ff1:	lea    rdx,[rip+0x1bfb4]        # 0x14002efac
   140012ff8:	mov    rcx,rdi
   140012ffb:	movdqu XMMWORD PTR [rdi],xmm0
   140012fff:	call   0x14001240c
   140013004:	lea    rcx,[rbp-0x69]
   140013008:	call   0x1400165c0
   14001300d:	mov    rcx,rdi
   140013010:	mov    rdx,rax
   140013013:	call   0x1400122b0
   140013018:	mov    dl,0x7d
   14001301a:	mov    rcx,rdi
   14001301d:	call   0x1400122f0
   140013022:	mov    rax,QWORD PTR [rip+0x25f4f]        # 0x140038f78
   140013029:	cmp    BYTE PTR [rax],0x40
   14001302c:	jne    0x140013388
   140013032:	inc    rax
   140013035:	mov    QWORD PTR [rip+0x25f3c],rax        # 0x140038f78
   14001303c:	jmp    0x140013388
   140013041:	xor    r13d,r13d
   140013044:	mov    r12d,esi
   140013047:	mov    eax,esi
   140013049:	and    r12d,0x1800
   140013050:	mov    r14d,esi
   140013053:	mov    r9d,0x1000
   140013059:	cmp    r12d,0x800
   140013060:	mov    ebx,0x1b00
   140013065:	sete   r13b
   140013069:	test   ecx,esi
   14001306b:	mov    ecx,0x0
   140013070:	sete   cl
   140013073:	test   r15d,r15d
   140013076:	cmovne ecx,r13d
   14001307a:	and    eax,0x400
   14001307f:	and    r14d,r9d
   140013082:	test   ecx,ecx
   140013084:	mov    DWORD PTR [rbp-0x45],ecx
   140013087:	cmovne r14d,eax
   14001308b:	test   r14d,r14d
   14001308e:	je     0x140013108
   140013090:	xor    ecx,ecx
   140013092:	mov    eax,esi
   140013094:	mov    edx,r15d
   140013097:	and    eax,ebx
   140013099:	cmp    eax,r9d
   14001309c:	sete   cl
   14001309f:	neg    edx
   1400130a1:	sbb    eax,eax
   1400130a3:	test   ecx,eax
   1400130a5:	je     0x1400130b0
   1400130a7:	lea    rdx,[rip+0x1bc32]        # 0x14002ece0
   1400130ae:	jmp    0x1400130fc
   1400130b0:	test   r14d,r14d
   1400130b3:	je     0x140013108
   1400130b5:	xor    ecx,ecx
   1400130b7:	mov    eax,esi
   1400130b9:	mov    edx,r15d
   1400130bc:	and    eax,ebx
   1400130be:	cmp    eax,0x1100
   1400130c3:	sete   cl
   1400130c6:	neg    edx
   1400130c8:	sbb    eax,eax
   1400130ca:	test   ecx,eax
   1400130cc:	je     0x1400130d7
   1400130ce:	lea    rdx,[rip+0x1bc33]        # 0x14002ed08
   1400130d5:	jmp    0x1400130fc
   1400130d7:	test   r14d,r14d
   1400130da:	je     0x140013108
   1400130dc:	xor    ecx,ecx
   1400130de:	mov    eax,esi
   1400130e0:	mov    edx,r15d
   1400130e3:	and    eax,ebx
   1400130e5:	cmp    eax,0x1200
   1400130ea:	sete   cl
   1400130ed:	neg    edx
   1400130ef:	sbb    eax,eax
   1400130f1:	test   ecx,eax
   1400130f3:	je     0x140013108
   1400130f5:	lea    rdx,[rip+0x1bc44]        # 0x14002ed40
   1400130fc:	lea    rcx,[rsp+0x40]
   140013101:	call   0x14001240c
   140013106:	jmp    0x14001311d
   140013108:	test   r15d,r15d
   14001310b:	jne    0x14001311d
   14001310d:	mov    eax,esi
   14001310f:	and    eax,r8d
   140013112:	cmp    eax,0x7800
   140013117:	je     0x140012c31
   14001311d:	test   r14d,r14d
   140013120:	je     0x140013181
   140013122:	xor    ecx,ecx
   140013124:	mov    edx,esi
   140013126:	mov    eax,r15d
   140013129:	and    edx,ebx
   14001312b:	cmp    edx,0x1100
   140013131:	sete   cl
   140013134:	neg    eax
   140013136:	sbb    eax,eax
   140013138:	test   ecx,eax
   14001313a:	jne    0x140013152
   14001313c:	xor    ecx,ecx
   14001313e:	cmp    edx,0x1200
   140013144:	mov    eax,r15d
   140013147:	sete   cl
   14001314a:	neg    eax
   14001314c:	sbb    eax,eax
   14001314e:	test   ecx,eax
   140013150:	je     0x140013181
   140013152:	lea    rdx,[rip+0x1bb4f]        # 0x14002eca8
   140013159:	lea    rcx,[rbp-0x69]
   14001315d:	call   0x140011a3c
   140013162:	lea    rdx,[rsp+0x40]
   140013167:	lea    rcx,[rsp+0x30]
   14001316c:	movups xmm0,XMMWORD PTR [rax]
   14001316f:	movdqu XMMWORD PTR [rsp+0x30],xmm0
   140013175:	call   0x1400122b0
   14001317a:	movaps xmm6,XMMWORD PTR [rsp+0x30]
   14001317f:	jmp    0x140013192
   140013181:	lea    rdx,[rsp+0x40]
   140013186:	lea    rcx,[rbp-0x69]
   14001318a:	call   0x1400150dc
   14001318f:	movups xmm6,XMMWORD PTR [rax]
   140013192:	movaps XMMWORD PTR [rsp+0x40],xmm6
   140013197:	cmp    DWORD PTR [rbp-0x45],0x0
   14001319b:	je     0x14001330e
   1400131a1:	mov    eax,DWORD PTR [rip+0x25ded]        # 0x140038f94
   1400131a7:	shr    eax,0x9
   1400131aa:	not    eax
   1400131ac:	test   al,0x1
   1400131ae:	je     0x140013261
   1400131b4:	xor    ecx,ecx
   1400131b6:	mov    ebx,esi
   1400131b8:	mov    eax,0x1
   1400131bd:	and    ebx,0x700
   1400131c3:	cmp    ebx,0x200
   1400131c9:	sete   cl
   1400131cc:	test   r15d,r15d
   1400131cf:	cmovne eax,ecx
   1400131d2:	test   eax,eax
   1400131d4:	je     0x140013208
   1400131d6:	lea    rdx,[rip+0x1bb93]        # 0x14002ed70
   1400131dd:	lea    rcx,[rbp-0x69]
   1400131e1:	call   0x140011a3c
   1400131e6:	lea    rdx,[rsp+0x40]
   1400131eb:	lea    rcx,[rsp+0x30]
   1400131f0:	movups xmm0,XMMWORD PTR [rax]
   1400131f3:	movdqu XMMWORD PTR [rsp+0x30],xmm0
   1400131f9:	call   0x1400122b0
   1400131fe:	movaps xmm6,XMMWORD PTR [rsp+0x30]
   140013203:	movaps XMMWORD PTR [rsp+0x40],xmm6
   140013208:	test   r15d,r15d
   14001320b:	je     0x140013215
   14001320d:	cmp    ebx,0x100
   140013213:	je     0x14001322f
   140013215:	test   r14d,r14d
   140013218:	je     0x140013261
   14001321a:	lea    eax,[rbx-0x400]
   140013220:	test   eax,0xfffffcff
   140013225:	jne    0x140013261
   140013227:	cmp    ebx,0x700
   14001322d:	je     0x140013261
   14001322f:	lea    rdx,[rip+0x1bb42]        # 0x14002ed78
   140013236:	lea    rcx,[rbp-0x69]
   14001323a:	call   0x140011a3c
   14001323f:	lea    rdx,[rsp+0x40]
   140013244:	lea    rcx,[rsp+0x30]
   140013249:	movups xmm0,XMMWORD PTR [rax]
   14001324c:	movdqu XMMWORD PTR [rsp+0x30],xmm0
   140013252:	call   0x1400122b0
   140013257:	movaps xmm6,XMMWORD PTR [rsp+0x30]
   14001325c:	movaps XMMWORD PTR [rsp+0x40],xmm6
   140013261:	mov    eax,DWORD PTR [rip+0x25d2d]        # 0x140038f94
   140013267:	shr    eax,0x7
   14001326a:	not    eax
   14001326c:	test   al,0x1
   14001326e:	je     0x14001330e
   140013274:	xor    eax,eax
   140013276:	mov    edx,esi
   140013278:	and    edx,0xc0
   14001327e:	cmp    edx,0x40
   140013281:	sete   al
   140013284:	test   r15d,r15d
   140013287:	cmovne r13d,eax
   14001328b:	test   r13d,r13d
   14001328e:	je     0x140013299
   140013290:	lea    rdx,[rip+0x1baf1]        # 0x14002ed88
   140013297:	jmp    0x1400132e3
   140013299:	xor    ecx,ecx
   14001329b:	cmp    edx,0x80
   1400132a1:	sete   cl
   1400132a4:	xor    eax,eax
   1400132a6:	cmp    r12d,0x1000
   1400132ad:	sete   al
   1400132b0:	test   r15d,r15d
   1400132b3:	cmovne eax,ecx
   1400132b6:	test   eax,eax
   1400132b8:	je     0x1400132c3
   1400132ba:	lea    rdx,[rip+0x1bad7]        # 0x14002ed98
   1400132c1:	jmp    0x1400132e3
   1400132c3:	xor    ecx,ecx
   1400132c5:	test   edx,edx
   1400132c7:	sete   cl
   1400132ca:	xor    eax,eax
   1400132cc:	test   r12d,r12d
   1400132cf:	sete   al
   1400132d2:	test   r15d,r15d
   1400132d5:	cmovne eax,ecx
   1400132d8:	test   eax,eax
   1400132da:	je     0x14001330e
   1400132dc:	lea    rdx,[rip+0x1bac5]        # 0x14002eda8
   1400132e3:	lea    rcx,[rbp-0x69]
   1400132e7:	call   0x140011a3c
   1400132ec:	lea    rdx,[rsp+0x40]
   1400132f1:	lea    rcx,[rsp+0x30]
   1400132f6:	movups xmm0,XMMWORD PTR [rax]
   1400132f9:	movdqu XMMWORD PTR [rsp+0x30],xmm0
   1400132ff:	call   0x1400122b0
   140013304:	movaps xmm6,XMMWORD PTR [rsp+0x30]
   140013309:	movaps XMMWORD PTR [rsp+0x40],xmm6
   14001330e:	test   r14d,r14d
   140013311:	je     0x140013351
   140013313:	test   DWORD PTR [rip+0x25c77],0x1000        # 0x140038f94
   14001331d:	jne    0x140013351
   14001331f:	lea    rdx,[rip+0x1ba92]        # 0x14002edb8
   140013326:	lea    rcx,[rbp-0x69]
   14001332a:	call   0x140011a3c
   14001332f:	lea    rdx,[rsp+0x40]
   140013334:	lea    rcx,[rsp+0x30]
   140013339:	movups xmm0,XMMWORD PTR [rax]
   14001333c:	movdqu XMMWORD PTR [rsp+0x30],xmm0
   140013342:	call   0x1400122b0
   140013347:	movaps xmm6,XMMWORD PTR [rsp+0x30]
   14001334c:	movaps XMMWORD PTR [rsp+0x40],xmm6
   140013351:	bt     esi,0x10
   140013355:	jae    0x140013384
   140013357:	lea    rdx,[rip+0x1ba6a]        # 0x14002edc8
   14001335e:	lea    rcx,[rbp-0x69]
   140013362:	call   0x140011a3c
   140013367:	lea    rdx,[rsp+0x40]
   14001336c:	lea    rcx,[rsp+0x30]
   140013371:	movups xmm0,XMMWORD PTR [rax]
   140013374:	movdqu XMMWORD PTR [rsp+0x30],xmm0
   14001337a:	call   0x1400122b0
   14001337f:	movaps xmm6,XMMWORD PTR [rsp+0x30]
   140013384:	movdqu XMMWORD PTR [rdi],xmm6
   140013388:	lea    r11,[rsp+0xf0]
   140013390:	mov    rax,rdi
   140013393:	mov    rbx,QWORD PTR [r11+0x40]
   140013397:	movaps xmm6,XMMWORD PTR [r11-0x10]
   14001339c:	movaps xmm7,XMMWORD PTR [r11-0x20]
   1400133a1:	mov    rsp,r11
   1400133a4:	pop    r15
   1400133a6:	pop    r14
   1400133a8:	pop    r13
   1400133aa:	pop    r12
   1400133ac:	pop    rdi
   1400133ad:	pop    rsi
   1400133ae:	pop    rbp
   1400133af:	ret    
   1400133b0:	mov    eax,DWORD PTR [rip+0x25bde]        # 0x140038f94
   1400133b6:	shr    eax,0x7
   1400133b9:	not    eax
   1400133bb:	and    eax,0x1
   1400133be:	ret    
   1400133bf:	int3   
   1400133c0:	mov    eax,DWORD PTR [rip+0x25bce]        # 0x140038f94
   1400133c6:	shr    eax,0x4
   1400133c9:	not    eax
   1400133cb:	and    eax,0x1
   1400133ce:	ret    
   1400133cf:	int3   
   1400133d0:	mov    eax,DWORD PTR [rip+0x25bbe]        # 0x140038f94
   1400133d6:	shr    eax,0x3
   1400133d9:	not    eax
   1400133db:	and    eax,0x1
   1400133de:	ret    
   1400133df:	int3   
   1400133e0:	mov    eax,DWORD PTR [rip+0x25bae]        # 0x140038f94
   1400133e6:	shr    eax,0xf
   1400133e9:	not    eax
   1400133eb:	and    eax,0x1
   1400133ee:	ret    
   1400133ef:	int3   
   1400133f0:	mov    eax,DWORD PTR [rip+0x25b9e]        # 0x140038f94
   1400133f6:	shr    eax,0x12
   1400133f9:	not    eax
   1400133fb:	and    eax,0x1
   1400133fe:	ret    
   1400133ff:	int3   
   140013400:	mov    eax,DWORD PTR [rip+0x25b8e]        # 0x140038f94
   140013406:	shr    eax,0x2
   140013409:	not    eax
   14001340b:	and    eax,0x1
   14001340e:	ret    
   14001340f:	int3   
   140013410:	mov    eax,DWORD PTR [rip+0x25b7e]        # 0x140038f94
   140013416:	shr    eax,1
   140013418:	not    eax
   14001341a:	and    eax,0x1
   14001341d:	ret    
   14001341e:	int3   
   14001341f:	int3   
   140013420:	mov    eax,DWORD PTR [rip+0x25b6e]        # 0x140038f94
   140013426:	shr    eax,0x9
   140013429:	not    eax
   14001342b:	and    eax,0x1
   14001342e:	ret    
   14001342f:	int3   
   140013430:	mov    eax,DWORD PTR [rip+0x25b5e]        # 0x140038f94
   140013436:	and    eax,0x1000
   14001343b:	ret    
   14001343c:	mov    eax,DWORD PTR [rip+0x25b52]        # 0x140038f94
   140013442:	and    eax,0x10000
   140013447:	ret    
   140013448:	mov    QWORD PTR [rsp+0x8],rbx
   14001344d:	mov    QWORD PTR [rsp+0x10],rsi
   140013452:	push   rdi
   140013453:	sub    rsp,0x20
   140013457:	cmp    QWORD PTR [rcx],0x0
   14001345b:	mov    edi,r8d
   14001345e:	mov    rsi,rdx
   140013461:	mov    rbx,rcx
   140013464:	je     0x140013477
   140013466:	and    DWORD PTR [rcx+0x8],0xffff00ff
   14001346d:	and    QWORD PTR [rcx],0x0
   140013471:	mov    BYTE PTR [rcx+0x8],0x3
   140013475:	jmp    0x1400134e4
   140013477:	test   rdx,rdx
   14001347a:	je     0x1400134e0
   14001347c:	test   r8d,r8d
   14001347f:	je     0x1400134e0
   140013481:	mov    ecx,r8d
   140013484:	xor    r8d,r8d
   140013487:	dec    ecx
   140013489:	lea    rcx,[rip+0x25b10]        # 0x140038fa0
   140013490:	je     0x1400134b0
   140013492:	lea    edx,[r8+0x18]
   140013496:	call   0x1400157b8
   14001349b:	test   rax,rax
   14001349e:	je     0x1400134d0
   1400134a0:	mov    r8d,edi
   1400134a3:	mov    rdx,rsi
   1400134a6:	mov    rcx,rax
   1400134a9:	call   0x140011d2c
   1400134ae:	jmp    0x1400134d2
   1400134b0:	mov    edx,0x10
   1400134b5:	call   0x1400157b8
   1400134ba:	test   rax,rax
   1400134bd:	je     0x1400134d0
   1400134bf:	mov    cl,BYTE PTR [rsi]
   1400134c1:	lea    rdx,[rip+0x1bb18]        # 0x14002efe0
   1400134c8:	mov    BYTE PTR [rax+0x8],cl
   1400134cb:	mov    QWORD PTR [rax],rdx
   1400134ce:	jmp    0x1400134d2
   1400134d0:	xor    eax,eax
   1400134d2:	mov    QWORD PTR [rbx],rax
   1400134d5:	test   rax,rax
   1400134d8:	jne    0x1400134e4
   1400134da:	mov    BYTE PTR [rbx+0x8],0x3
   1400134de:	jmp    0x1400134e4
   1400134e0:	mov    BYTE PTR [rcx+0x8],0x2
   1400134e4:	mov    rbx,QWORD PTR [rsp+0x30]
   1400134e9:	mov    rsi,QWORD PTR [rsp+0x38]
   1400134ee:	add    rsp,0x20
   1400134f2:	pop    rdi
   1400134f3:	ret    
   1400134f4:	mov    eax,DWORD PTR [rip+0x25a9a]        # 0x140038f94
   1400134fa:	shr    eax,0x11
   1400134fd:	not    eax
   1400134ff:	and    eax,0x1
   140013502:	ret    
   140013503:	int3   
   140013504:	mov    eax,DWORD PTR [rip+0x25a8a]        # 0x140038f94
   14001350a:	shr    eax,0x13
   14001350d:	not    eax
   14001350f:	and    eax,0x1
   140013512:	ret    
   140013513:	int3   
   140013514:	mov    ecx,DWORD PTR [rip+0x25a7a]        # 0x140038f94
   14001351a:	xor    eax,eax
   14001351c:	and    ecx,0x60
   14001351f:	cmp    cl,0x60
   140013522:	setne  al
   140013525:	ret    
   140013526:	int3   
   140013527:	int3   
   140013528:	mov    eax,DWORD PTR [rip+0x25a66]        # 0x140038f94
   14001352e:	shr    eax,0x8
   140013531:	not    eax
   140013533:	and    eax,0x1
   140013536:	ret    
   140013537:	int3   
   140013538:	mov    eax,DWORD PTR [rip+0x25a56]        # 0x140038f94
   14001353e:	and    eax,0x2000
   140013543:	ret    
   140013544:	mov    eax,DWORD PTR [rip+0x25a4a]        # 0x140038f94
   14001354a:	not    eax
   14001354c:	and    eax,0x1
   14001354f:	ret    
   140013550:	mov    QWORD PTR [rsp+0x8],rbx
   140013555:	mov    QWORD PTR [rsp+0x10],rsi
   14001355a:	push   rdi
   14001355b:	sub    rsp,0x50
   14001355f:	and    QWORD PTR [rcx],0x0
   140013563:	mov    BYTE PTR [rcx+0x8],0x0
   140013567:	and    DWORD PTR [rcx+0x8],0xffff00ff
   14001356e:	cmp    BYTE PTR [rcx+0x8],0x0
   140013572:	mov    rbx,rcx
   140013575:	mov    esi,0x1
   14001357a:	jne    0x14001367f
   140013580:	mov    rax,QWORD PTR [rip+0x259f1]        # 0x140038f78
   140013587:	cmp    BYTE PTR [rax],0x40
   14001358a:	je     0x14001367f
   140013590:	cmp    BYTE PTR [rax],0x5a
   140013593:	je     0x14001367f
   140013599:	test   esi,esi
   14001359b:	je     0x1400135a1
   14001359d:	xor    esi,esi
   14001359f:	jmp    0x1400135b2
   1400135a1:	mov    dl,0x2c
   1400135a3:	mov    rcx,rbx
   1400135a6:	call   0x1400122f0
   1400135ab:	mov    rax,QWORD PTR [rip+0x259c6]        # 0x140038f78
   1400135b2:	cmp    BYTE PTR [rax],0x0
   1400135b5:	je     0x140013672
   1400135bb:	movsx  r8d,BYTE PTR [rax]
   1400135bf:	sub    r8d,0x30
   1400135c3:	cmp    r8d,0x9
   1400135c7:	ja     0x1400135f1
   1400135c9:	mov    rcx,QWORD PTR [rip+0x25990]        # 0x140038f60
   1400135d0:	inc    rax
   1400135d3:	lea    rdx,[rsp+0x40]
   1400135d8:	mov    QWORD PTR [rip+0x25999],rax        # 0x140038f78
   1400135df:	call   0x140011f0c
   1400135e4:	mov    rcx,rbx
   1400135e7:	mov    rdx,rax
   1400135ea:	call   0x1400122b0
   1400135ef:	jmp    0x14001365f
   1400135f1:	and    QWORD PTR [rsp+0x20],0x0
   1400135f7:	and    DWORD PTR [rsp+0x28],0xffff0000
   1400135ff:	lea    rdx,[rsp+0x20]
   140013604:	lea    rcx,[rsp+0x30]
   140013609:	mov    rdi,rax
   14001360c:	call   0x140015ff8
   140013611:	mov    rax,QWORD PTR [rip+0x25960]        # 0x140038f78
   140013618:	sub    rax,rdi
   14001361b:	cmp    rax,0x1
   14001361f:	jle    0x140013637
   140013621:	mov    rcx,QWORD PTR [rip+0x25938]        # 0x140038f60
   140013628:	cmp    DWORD PTR [rcx],0x9
   14001362b:	je     0x140013637
   14001362d:	lea    rdx,[rsp+0x30]
   140013632:	call   0x1400124dc
   140013637:	lea    rdx,[rsp+0x30]
   14001363c:	mov    rcx,rbx
   14001363f:	call   0x1400122b0
   140013644:	mov    rax,QWORD PTR [rip+0x2592d]        # 0x140038f78
   14001364b:	cmp    rax,rdi
   14001364e:	jne    0x140013666
   140013650:	and    DWORD PTR [rbx+0x8],0xffff00ff
   140013657:	and    QWORD PTR [rbx],0x0
   14001365b:	mov    BYTE PTR [rbx+0x8],0x2
   14001365f:	mov    rax,QWORD PTR [rip+0x25912]        # 0x140038f78
   140013666:	cmp    BYTE PTR [rbx+0x8],0x0
   14001366a:	je     0x140013587
   140013670:	jmp    0x14001367f
   140013672:	mov    edx,0x1
   140013677:	mov    rcx,rbx
   14001367a:	call   0x140012498
   14001367f:	mov    rsi,QWORD PTR [rsp+0x68]
   140013684:	mov    rax,rbx
   140013687:	mov    rbx,QWORD PTR [rsp+0x60]
   14001368c:	add    rsp,0x50
   140013690:	pop    rdi
   140013691:	ret    
   140013692:	int3   
   140013693:	int3   
   140013694:	rex push rbx
   140013696:	sub    rsp,0x30
   14001369a:	mov    rax,QWORD PTR [rip+0x258d7]        # 0x140038f78
   1400136a1:	mov    rbx,rcx
   1400136a4:	cmp    BYTE PTR [rax],0x58
   1400136a7:	je     0x14001376f
   1400136ad:	cmp    BYTE PTR [rax],0x5a
   1400136b0:	je     0x140013744
   1400136b6:	lea    rcx,[rsp+0x20]
   1400136bb:	call   0x140013550
   1400136c0:	cmp    BYTE PTR [rsp+0x28],0x0
   1400136c5:	jne    0x14001372d
   1400136c7:	mov    rax,QWORD PTR [rip+0x258aa]        # 0x140038f78
   1400136ce:	cmp    BYTE PTR [rax],0x0
   1400136d1:	je     0x14001372d
   1400136d3:	cmp    BYTE PTR [rax],0x40
   1400136d6:	je     0x140013738
   1400136d8:	cmp    BYTE PTR [rax],0x5a
   1400136db:	je     0x1400136ef
   1400136dd:	mov    edx,0x2
   1400136e2:	mov    rcx,rbx
   1400136e5:	call   0x140011a84
   1400136ea:	jmp    0x140013785
   1400136ef:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   1400136f4:	inc    rax
   1400136f7:	lea    rdx,[rip+0x1b74a]        # 0x14002ee48
   1400136fe:	mov    QWORD PTR [rip+0x25873],rax        # 0x140038f78
   140013705:	mov    eax,DWORD PTR [rip+0x25889]        # 0x140038f94
   14001370b:	lea    rcx,[rsp+0x20]
   140013710:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   140013716:	shr    eax,0x12
   140013719:	not    eax
   14001371b:	test   al,0x1
   14001371d:	lea    rax,[rip+0x1b718]        # 0x14002ee3c
   140013724:	cmovne rdx,rax
   140013728:	call   0x14001240c
   14001372d:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   140013732:	movdqu XMMWORD PTR [rbx],xmm0
   140013736:	jmp    0x140013785
   140013738:	inc    rax
   14001373b:	mov    QWORD PTR [rip+0x25836],rax        # 0x140038f78
   140013742:	jmp    0x14001372d
   140013744:	inc    rax
   140013747:	lea    rdx,[rip+0x1b6e2]        # 0x14002ee30
   14001374e:	mov    QWORD PTR [rip+0x25823],rax        # 0x140038f78
   140013755:	mov    eax,DWORD PTR [rip+0x25839]        # 0x140038f94
   14001375b:	shr    eax,0x12
   14001375e:	not    eax
   140013760:	test   al,0x1
   140013762:	lea    rax,[rip+0x1b52b]        # 0x14002ec94
   140013769:	cmovne rdx,rax
   14001376d:	jmp    0x140013780
   14001376f:	inc    rax
   140013772:	lea    rdx,[rip+0x1b4ff]        # 0x14002ec78
   140013779:	mov    QWORD PTR [rip+0x257f8],rax        # 0x140038f78
   140013780:	call   0x140011a3c
   140013785:	mov    rax,rbx
   140013788:	add    rsp,0x30
   14001378c:	pop    rbx
   14001378d:	ret    
   14001378e:	int3   
   14001378f:	int3   
   140013790:	mov    QWORD PTR [rsp+0x8],rbx
   140013795:	mov    QWORD PTR [rsp+0x10],rsi
   14001379a:	mov    QWORD PTR [rsp+0x18],rdi
   14001379f:	push   rbp
   1400137a0:	push   r14
   1400137a2:	push   r15
   1400137a4:	mov    rbp,rsp
   1400137a7:	sub    rsp,0x80
   1400137ae:	mov    rax,QWORD PTR [rip+0x257c3]        # 0x140038f78
   1400137b5:	xor    r15d,r15d
   1400137b8:	mov    rsi,rdx
   1400137bb:	mov    r14,rcx
   1400137be:	cmp    BYTE PTR [rax],r15b
   1400137c1:	je     0x14001392c
   1400137c7:	call   0x140015868
   1400137cc:	test   eax,eax
   1400137ce:	mov    edi,eax
   1400137d0:	cmovs  edi,r15d
   1400137d4:	test   edi,edi
   1400137d6:	jne    0x140013814
   1400137d8:	lea    rcx,[rbp-0x30]
   1400137dc:	mov    dl,0x5b
   1400137de:	call   0x14001197c
   1400137e3:	lea    edx,[rdi+0x1]
   1400137e6:	lea    rcx,[rbp-0x50]
   1400137ea:	movups xmm0,XMMWORD PTR [rax]
   1400137ed:	movdqu XMMWORD PTR [rbp-0x50],xmm0
   1400137f2:	call   0x140012498
   1400137f7:	movaps xmm0,XMMWORD PTR [rbp-0x50]
   1400137fb:	lea    rcx,[rbp-0x60]
   1400137ff:	mov    dl,0x5d
   140013801:	movdqa XMMWORD PTR [rbp-0x60],xmm0
   140013806:	call   0x1400122f0
   14001380b:	lea    rdx,[rbp-0x60]
   14001380f:	jmp    0x1400139a9
   140013814:	and    DWORD PTR [rbp-0x58],0xffff0000
   14001381b:	test   DWORD PTR [rsi+0x8],0x800
   140013822:	mov    QWORD PTR [rbp-0x60],r15
   140013826:	je     0x14001389c
   140013828:	lea    rdx,[rip+0x1ae69]        # 0x14002e698
   14001382f:	lea    rcx,[rbp-0x60]
   140013833:	call   0x14001240c
   140013838:	jmp    0x14001389c
   14001383a:	mov    eax,edi
   14001383c:	dec    edi
   14001383e:	test   eax,eax
   140013840:	je     0x1400138a2
   140013842:	mov    rax,QWORD PTR [rip+0x2572f]        # 0x140038f78
   140013849:	cmp    BYTE PTR [rax],r15b
   14001384c:	je     0x1400138a2
   14001384e:	lea    rcx,[rbp-0x20]
   140013852:	xor    edx,edx
   140013854:	call   0x140014a54
   140013859:	lea    rcx,[rbp-0x10]
   14001385d:	mov    dl,0x5b
   14001385f:	mov    rbx,rax
   140013862:	call   0x14001197c
   140013867:	lea    rcx,[rbp-0x40]
   14001386b:	mov    rdx,rbx
   14001386e:	movups xmm0,XMMWORD PTR [rax]
   140013871:	movdqu XMMWORD PTR [rbp-0x40],xmm0
   140013876:	call   0x1400122b0
   14001387b:	movaps xmm0,XMMWORD PTR [rbp-0x40]
   14001387f:	lea    rcx,[rbp-0x30]
   140013883:	mov    dl,0x5d
   140013885:	movdqa XMMWORD PTR [rbp-0x30],xmm0
   14001388a:	call   0x1400122f0
   14001388f:	lea    rdx,[rbp-0x30]
   140013893:	lea    rcx,[rbp-0x60]
   140013897:	call   0x1400122b0
   14001389c:	cmp    BYTE PTR [rbp-0x58],0x1
   1400138a0:	jle    0x14001383a
   1400138a2:	cmp    QWORD PTR [rsi],r15
   1400138a5:	je     0x14001390c
   1400138a7:	test   DWORD PTR [rsi+0x8],0x800
   1400138ae:	je     0x1400138ba
   1400138b0:	movups xmm0,XMMWORD PTR [rsi]
   1400138b3:	movdqu XMMWORD PTR [rbp-0x30],xmm0
   1400138b8:	jmp    0x1400138f6
   1400138ba:	lea    rcx,[rbp-0x10]
   1400138be:	mov    dl,0x28
   1400138c0:	call   0x14001197c
   1400138c5:	lea    rcx,[rbp-0x30]
   1400138c9:	mov    rdx,rsi
   1400138cc:	movups xmm0,XMMWORD PTR [rax]
   1400138cf:	movdqu XMMWORD PTR [rbp-0x30],xmm0
   1400138d4:	call   0x1400122b0
   1400138d9:	movaps xmm0,XMMWORD PTR [rbp-0x30]
   1400138dd:	lea    rcx,[rbp-0x30]
   1400138e1:	mov    dl,0x29
   1400138e3:	movdqa XMMWORD PTR [rbp-0x30],xmm0
   1400138e8:	call   0x1400122f0
   1400138ed:	movaps xmm0,XMMWORD PTR [rbp-0x30]
   1400138f1:	movdqa XMMWORD PTR [rbp-0x30],xmm0
   1400138f6:	lea    rdx,[rbp-0x60]
   1400138fa:	lea    rcx,[rbp-0x30]
   1400138fe:	call   0x1400122b0
   140013903:	movaps xmm0,XMMWORD PTR [rbp-0x30]
   140013907:	movdqa XMMWORD PTR [rbp-0x60],xmm0
   14001390c:	lea    rdx,[rbp-0x60]
   140013910:	lea    rcx,[rbp-0x50]
   140013914:	call   0x140015ff8
   140013919:	bts    DWORD PTR [rbp-0x48],0xb
   14001391e:	movups xmm0,XMMWORD PTR [rbp-0x50]
   140013922:	movdqu XMMWORD PTR [r14],xmm0
   140013927:	jmp    0x1400139b1
   14001392c:	lea    rcx,[rbp-0x10]
   140013930:	cmp    QWORD PTR [rdx],r15
   140013933:	je     0x140013974
   140013935:	mov    dl,0x28
   140013937:	call   0x14001197c
   14001393c:	lea    rcx,[rbp-0x30]
   140013940:	mov    rdx,rsi
   140013943:	movups xmm0,XMMWORD PTR [rax]
   140013946:	movdqu XMMWORD PTR [rbp-0x30],xmm0
   14001394b:	call   0x1400122b0
   140013950:	movaps xmm0,XMMWORD PTR [rbp-0x30]
   140013954:	lea    rdx,[rip+0x1b645]        # 0x14002efa0
   14001395b:	lea    rcx,[rbp-0x30]
   14001395f:	movdqa XMMWORD PTR [rbp-0x30],xmm0
   140013964:	call   0x14001240c
   140013969:	movaps xmm0,XMMWORD PTR [rbp-0x30]
   14001396d:	movdqa XMMWORD PTR [rbp-0x30],xmm0
   140013972:	jmp    0x140013983
   140013974:	mov    dl,0x5b
   140013976:	call   0x14001197c
   14001397b:	movups xmm0,XMMWORD PTR [rax]
   14001397e:	movdqu XMMWORD PTR [rbp-0x30],xmm0
   140013983:	lea    rcx,[rbp-0x30]
   140013987:	mov    edx,0x1
   14001398c:	call   0x140012498
   140013991:	lea    rcx,[rbp-0x40]
   140013995:	mov    dl,0x5d
   140013997:	movaps xmm0,XMMWORD PTR [rbp-0x30]
   14001399b:	movdqa XMMWORD PTR [rbp-0x40],xmm0
   1400139a0:	call   0x1400122f0
   1400139a5:	lea    rdx,[rbp-0x40]
   1400139a9:	mov    rcx,r14
   1400139ac:	call   0x140013a94
   1400139b1:	lea    r11,[rsp+0x80]
   1400139b9:	mov    rax,r14
   1400139bc:	mov    rbx,QWORD PTR [r11+0x20]
   1400139c0:	mov    rsi,QWORD PTR [r11+0x28]
   1400139c4:	mov    rdi,QWORD PTR [r11+0x30]
   1400139c8:	mov    rsp,r11
   1400139cb:	pop    r15
   1400139cd:	pop    r14
   1400139cf:	pop    rbp
   1400139d0:	ret    
   1400139d1:	int3   
   1400139d2:	int3   
   1400139d3:	int3   
   1400139d4:	rex push rbx
   1400139d6:	sub    rsp,0x40
   1400139da:	mov    eax,DWORD PTR [rip+0x255b4]        # 0x140038f94
   1400139e0:	mov    rdx,QWORD PTR [rip+0x1a8b9]        # 0x14002e2a0
   1400139e7:	mov    rbx,rcx
   1400139ea:	not    eax
   1400139ec:	test   al,0x1
   1400139ee:	jne    0x1400139f4
   1400139f0:	add    rdx,0x2
   1400139f4:	lea    rcx,[rsp+0x20]
   1400139f9:	call   0x140011a3c
   1400139fe:	mov    rcx,QWORD PTR [rip+0x25573]        # 0x140038f78
   140013a05:	cmp    BYTE PTR [rcx],0x0
   140013a08:	je     0x140013a5f
   140013a0a:	movsx  eax,BYTE PTR [rcx]
   140013a0d:	inc    rcx
   140013a10:	mov    QWORD PTR [rip+0x25561],rcx        # 0x140038f78
   140013a17:	cmp    eax,0x30
   140013a1a:	je     0x140013a4c
   140013a1c:	cmp    eax,0x32
   140013a1f:	je     0x140013a33
   140013a21:	cmp    eax,0x35
   140013a24:	jne    0x140013a6e
   140013a26:	lea    edx,[rax-0x33]
   140013a29:	mov    rcx,rbx
   140013a2c:	call   0x140011a84
   140013a31:	jmp    0x140013a88
   140013a33:	lea    rcx,[rsp+0x30]
   140013a38:	call   0x140016ab4
   140013a3d:	lea    rcx,[rsp+0x20]
   140013a42:	mov    rdx,rax
   140013a45:	call   0x1400122b0
   140013a4a:	jmp    0x140013a6e
   140013a4c:	lea    rdx,[rip+0x1b225]        # 0x14002ec78
   140013a53:	lea    rcx,[rsp+0x20]
   140013a58:	call   0x14001240c
   140013a5d:	jmp    0x140013a6e
   140013a5f:	lea    rcx,[rsp+0x20]
   140013a64:	mov    edx,0x1
   140013a69:	call   0x140012498
   140013a6e:	lea    rdx,[rip+0x1b35f]        # 0x14002edd4
   140013a75:	lea    rcx,[rsp+0x20]
   140013a7a:	call   0x14001240c
   140013a7f:	movups xmm0,XMMWORD PTR [rsp+0x20]
   140013a84:	movdqu XMMWORD PTR [rbx],xmm0
   140013a88:	mov    rax,rbx
   140013a8b:	add    rsp,0x40
   140013a8f:	pop    rbx
   140013a90:	ret    
   140013a91:	int3   
   140013a92:	int3   
   140013a93:	int3   
   140013a94:	mov    QWORD PTR [rsp+0x8],rbx
   140013a99:	push   rbp
   140013a9a:	push   rsi
   140013a9b:	push   rdi
   140013a9c:	mov    rbp,rsp
   140013a9f:	sub    rsp,0x70
   140013aa3:	mov    rdi,rcx
   140013aa6:	mov    rcx,QWORD PTR [rip+0x254cb]        # 0x140038f78
   140013aad:	mov    rsi,rdx
   140013ab0:	mov    al,BYTE PTR [rcx]
   140013ab2:	mov    BYTE PTR [rbp+0x38],al
   140013ab5:	test   al,al
   140013ab7:	je     0x140013e71
   140013abd:	and    QWORD PTR [rbp-0x50],0x0
   140013ac2:	and    DWORD PTR [rbp-0x48],0xffff0000
   140013ac9:	inc    rcx
   140013acc:	movzx  eax,al
   140013acf:	or     ebx,0xffffffff
   140013ad2:	mov    QWORD PTR [rip+0x2549f],rcx        # 0x140038f78
   140013ad9:	mov    BYTE PTR [rbp+0x30],0x0
   140013add:	cmp    eax,0x4e
   140013ae0:	jg     0x140013b47
   140013ae2:	je     0x140013d62
   140013ae8:	cmp    eax,0x43
   140013aeb:	jl     0x140013d29
   140013af1:	cmp    eax,0x45
   140013af4:	jle    0x140013b3e
   140013af6:	cmp    eax,0x47
   140013af9:	jle    0x140013b35
   140013afb:	cmp    eax,0x49
   140013afe:	jle    0x140013b2c
   140013b00:	cmp    eax,0x4b
   140013b03:	jle    0x140013b23
   140013b05:	cmp    eax,0x4d
   140013b08:	jne    0x140013d29
   140013b0e:	lea    rdx,[rip+0x1b373]        # 0x14002ee88
   140013b15:	lea    rcx,[rbp-0x50]
   140013b19:	call   0x140011e90
   140013b1e:	jmp    0x140013d7b
   140013b23:	lea    rdx,[rip+0x1b356]        # 0x14002ee80
   140013b2a:	jmp    0x140013b15
   140013b2c:	lea    rdx,[rip+0x1b349]        # 0x14002ee7c
   140013b33:	jmp    0x140013b15
   140013b35:	lea    rdx,[rip+0x1b338]        # 0x14002ee74
   140013b3c:	jmp    0x140013b15
   140013b3e:	lea    rdx,[rip+0x1b327]        # 0x14002ee6c
   140013b45:	jmp    0x140013b15
   140013b47:	cmp    eax,0x4f
   140013b4a:	je     0x140013d52
   140013b50:	jle    0x140013d29
   140013b56:	cmp    eax,0x53
   140013b59:	jle    0x140013d22
   140013b5f:	cmp    eax,0x58
   140013b62:	je     0x140013d16
   140013b68:	cmp    eax,0x5f
   140013b6b:	jne    0x140013d29
   140013b71:	movzx  ebx,BYTE PTR [rcx]
   140013b74:	inc    rcx
   140013b77:	mov    eax,ebx
   140013b79:	mov    QWORD PTR [rip+0x253f8],rcx        # 0x140038f78
   140013b80:	cmp    ebx,0x4d
   140013b83:	jg     0x140013c35
   140013b89:	cmp    eax,0x4c
   140013b8c:	jge    0x140013c2c
   140013b92:	cmp    eax,0x47
   140013b95:	jg     0x140013c10
   140013b97:	cmp    eax,0x46
   140013b9a:	jge    0x140013c07
   140013b9c:	test   eax,eax
   140013b9e:	je     0x140013bea
   140013ba0:	cmp    eax,0x24
   140013ba3:	je     0x140013bc6
   140013ba5:	add    eax,0xffffffbc
   140013ba8:	cmp    eax,0x1
   140013bab:	ja     0x140013c86
   140013bb1:	lea    rdx,[rip+0x1b2e8]        # 0x14002eea0
   140013bb8:	lea    rcx,[rbp-0x50]
   140013bbc:	call   0x140011e90
   140013bc1:	jmp    0x140013d7e
   140013bc6:	lea    rcx,[rbp-0x30]
   140013bca:	call   0x140013a94
   140013bcf:	lea    rdx,[rip+0x1b312]        # 0x14002eee8
   140013bd6:	lea    rcx,[rbp-0x40]
   140013bda:	mov    rbx,rax
   140013bdd:	call   0x140011a3c
   140013be2:	mov    rdx,rbx
   140013be5:	jmp    0x140013e82
   140013bea:	dec    rcx
   140013bed:	mov    edx,0x1
   140013bf2:	mov    QWORD PTR [rip+0x2537f],rcx        # 0x140038f78
   140013bf9:	lea    rcx,[rbp-0x50]
   140013bfd:	call   0x140011ed0
   140013c02:	jmp    0x140013d7e
   140013c07:	lea    rdx,[rip+0x1b29a]        # 0x14002eea8
   140013c0e:	jmp    0x140013bb8
   140013c10:	cmp    eax,0x49
   140013c13:	jle    0x140013c23
   140013c15:	cmp    eax,0x4b
   140013c18:	jg     0x140013c86
   140013c1a:	lea    rdx,[rip+0x1b297]        # 0x14002eeb8
   140013c21:	jmp    0x140013bb8
   140013c23:	lea    rdx,[rip+0x1b286]        # 0x14002eeb0
   140013c2a:	jmp    0x140013bb8
   140013c2c:	lea    rdx,[rip+0x1b28d]        # 0x14002eec0
   140013c33:	jmp    0x140013bb8
   140013c35:	cmp    eax,0x4e
   140013c38:	je     0x140013d0a
   140013c3e:	cmp    eax,0x4f
   140013c41:	je     0x140013caa
   140013c43:	cmp    eax,0x52
   140013c46:	je     0x140013c9e
   140013c48:	cmp    eax,0x57
   140013c4b:	je     0x140013c92
   140013c4d:	add    eax,0xffffffa8
   140013c50:	cmp    eax,0x1
   140013c53:	ja     0x140013c86
   140013c55:	dec    rcx
   140013c58:	mov    QWORD PTR [rip+0x25319],rcx        # 0x140038f78
   140013c5f:	lea    rcx,[rbp-0x20]
   140013c63:	call   0x140014c30
   140013c68:	movups xmm0,XMMWORD PTR [rax]
   140013c6b:	movq   rax,xmm0
   140013c70:	movaps XMMWORD PTR [rbp-0x50],xmm0
   140013c74:	test   rax,rax
   140013c77:	jne    0x140013d7e
   140013c7d:	movdqu XMMWORD PTR [rdi],xmm0
   140013c81:	jmp    0x140013e91
   140013c86:	lea    rdx,[rip+0x1b263]        # 0x14002eef0
   140013c8d:	jmp    0x140013bb8
   140013c92:	lea    rdx,[rip+0x1b247]        # 0x14002eee0
   140013c99:	jmp    0x140013bb8
   140013c9e:	lea    rdx,[rip+0x1b22b]        # 0x14002eed0
   140013ca5:	jmp    0x140013bb8
   140013caa:	mov    ebx,0xfffffffe
   140013caf:	movups xmm0,XMMWORD PTR [rsi]
   140013cb2:	and    QWORD PTR [rbp-0x50],0x0
   140013cb7:	and    DWORD PTR [rbp-0x48],0xffff0000
   140013cbe:	movdqu XMMWORD PTR [rbp-0x40],xmm0
   140013cc3:	cmp    ebx,0xfffffffe
   140013cc6:	jne    0x140013e11
   140013ccc:	lea    r9,[rip+0x16d7d]        # 0x14002aa50
   140013cd3:	lea    r8,[rbp-0x40]
   140013cd7:	lea    rdx,[rbp-0x50]
   140013cdb:	lea    rcx,[rbp-0x30]
   140013cdf:	mov    ebx,0x800
   140013ce4:	or     DWORD PTR [rbp-0x38],ebx
   140013ce7:	call   0x140016318
   140013cec:	test   DWORD PTR [rbp-0x28],ebx
   140013cef:	jne    0x140013d01
   140013cf1:	lea    rdx,[rip+0x1a9a0]        # 0x14002e698
   140013cf8:	lea    rcx,[rbp-0x30]
   140013cfc:	call   0x14001240c
   140013d01:	movups xmm0,XMMWORD PTR [rbp-0x30]
   140013d05:	jmp    0x140013c7d
   140013d0a:	lea    rdx,[rip+0x1b187]        # 0x14002ee98
   140013d11:	jmp    0x140013bb8
   140013d16:	lea    rdx,[rip+0x1af5b]        # 0x14002ec78
   140013d1d:	jmp    0x140013b15
   140013d22:	mov    ebx,eax
   140013d24:	and    ebx,0x3
   140013d27:	jmp    0x140013d72
   140013d29:	dec    rcx
   140013d2c:	mov    QWORD PTR [rip+0x25245],rcx        # 0x140038f78
   140013d33:	lea    rcx,[rbp-0x10]
   140013d37:	call   0x140014c30
   140013d3c:	movups xmm0,XMMWORD PTR [rax]
   140013d3f:	movq   rax,xmm0
   140013d44:	movaps XMMWORD PTR [rbp-0x50],xmm0
   140013d48:	test   rax,rax
   140013d4b:	jne    0x140013d7b
   140013d4d:	jmp    0x140013c7d
   140013d52:	lea    rdx,[rip+0x1b097]        # 0x14002edf0
   140013d59:	lea    rcx,[rbp-0x50]
   140013d5d:	call   0x140011e90
   140013d62:	lea    rdx,[rip+0x1b127]        # 0x14002ee90
   140013d69:	lea    rcx,[rbp-0x50]
   140013d6d:	call   0x14001240c
   140013d72:	cmp    ebx,0xffffffff
   140013d75:	jne    0x140013caf
   140013d7b:	mov    bl,BYTE PTR [rbp+0x30]
   140013d7e:	mov    cl,BYTE PTR [rbp+0x38]
   140013d81:	cmp    cl,0x43
   140013d84:	je     0x140013da8
   140013d86:	lea    eax,[rcx-0x45]
   140013d89:	test   al,0xf9
   140013d8b:	je     0x140013d9f
   140013d8d:	cmp    cl,0x5f
   140013d90:	jne    0x140013dd6
   140013d92:	sub    bl,0x45
   140013d95:	cmp    bl,0x8
   140013d98:	ja     0x140013dd6
   140013d9a:	test   bl,0x1
   140013d9d:	jne    0x140013dd6
   140013d9f:	lea    rdx,[rip+0x1b052]        # 0x14002edf8
   140013da6:	jmp    0x140013daf
   140013da8:	lea    rdx,[rip+0x1b149]        # 0x14002eef8
   140013daf:	lea    rcx,[rbp-0x10]
   140013db3:	call   0x140011a3c
   140013db8:	lea    rdx,[rbp-0x50]
   140013dbc:	lea    rcx,[rbp-0x30]
   140013dc0:	movups xmm0,XMMWORD PTR [rax]
   140013dc3:	movdqu XMMWORD PTR [rbp-0x30],xmm0
   140013dc8:	call   0x1400122b0
   140013dcd:	movaps xmm0,XMMWORD PTR [rbp-0x30]
   140013dd1:	movdqa XMMWORD PTR [rbp-0x50],xmm0
   140013dd6:	cmp    QWORD PTR [rsi],0x0
   140013dda:	je     0x140013e08
   140013ddc:	lea    rcx,[rbp-0x10]
   140013de0:	mov    dl,0x20
   140013de2:	call   0x14001197c
   140013de7:	lea    rcx,[rbp-0x30]
   140013deb:	mov    rdx,rsi
   140013dee:	movups xmm0,XMMWORD PTR [rax]
   140013df1:	movdqu XMMWORD PTR [rbp-0x30],xmm0
   140013df6:	call   0x1400122b0
   140013dfb:	lea    rdx,[rbp-0x30]
   140013dff:	lea    rcx,[rbp-0x50]
   140013e03:	call   0x1400122b0
   140013e08:	movaps xmm0,XMMWORD PTR [rbp-0x50]
   140013e0c:	jmp    0x140013c7d
   140013e11:	cmp    QWORD PTR [rsi],0x0
   140013e15:	jne    0x140013e58
   140013e17:	test   bl,0x1
   140013e1a:	je     0x140013e43
   140013e1c:	lea    rdx,[rip+0x1b0dd]        # 0x14002ef00
   140013e23:	lea    rcx,[rbp-0x50]
   140013e27:	call   0x140011e90
   140013e2c:	test   bl,0x2
   140013e2f:	je     0x140013e58
   140013e31:	lea    rdx,[rip+0x1b0d0]        # 0x14002ef08
   140013e38:	lea    rcx,[rbp-0x50]
   140013e3c:	call   0x14001240c
   140013e41:	jmp    0x140013e58
   140013e43:	test   bl,0x2
   140013e46:	je     0x140013e58
   140013e48:	lea    rdx,[rip+0x1afc1]        # 0x14002ee10
   140013e4f:	lea    rcx,[rbp-0x50]
   140013e53:	call   0x140011e90
   140013e58:	lea    r9,[rip+0x1a851]        # 0x14002e6b0
   140013e5f:	lea    r8,[rbp-0x40]
   140013e63:	lea    rdx,[rbp-0x50]
   140013e67:	mov    rcx,rdi
   140013e6a:	call   0x140016318
   140013e6f:	jmp    0x140013e91
   140013e71:	lea    rcx,[rbp-0x10]
   140013e75:	mov    edx,0x1
   140013e7a:	call   0x140011a84
   140013e7f:	mov    rdx,rsi
   140013e82:	movups xmm0,XMMWORD PTR [rax]
   140013e85:	mov    rcx,rdi
   140013e88:	movdqu XMMWORD PTR [rdi],xmm0
   140013e8c:	call   0x1400122b0
   140013e91:	mov    rax,rdi
   140013e94:	mov    rbx,QWORD PTR [rsp+0x90]
   140013e9c:	add    rsp,0x70
   140013ea0:	pop    rdi
   140013ea1:	pop    rsi
   140013ea2:	pop    rbp
   140013ea3:	ret    
   140013ea4:	rex push rbx
   140013ea6:	sub    rsp,0x20
   140013eaa:	xor    edx,edx
   140013eac:	mov    rbx,rcx
   140013eaf:	call   0x140014a54
   140013eb4:	mov    rax,rbx
   140013eb7:	add    rsp,0x20
   140013ebb:	pop    rbx
   140013ebc:	ret    
   140013ebd:	int3   
   140013ebe:	int3   
   140013ebf:	int3   
   140013ec0:	mov    QWORD PTR [rsp+0x8],rbx
   140013ec5:	push   rdi
   140013ec6:	sub    rsp,0x30
   140013eca:	mov    rax,QWORD PTR [rip+0x250a7]        # 0x140038f78
   140013ed1:	mov    rdi,rcx
   140013ed4:	cmp    BYTE PTR [rax],0x0
   140013ed7:	je     0x140013fa7
   140013edd:	movsx  ebx,BYTE PTR [rax]
   140013ee0:	inc    rax
   140013ee3:	mov    edx,0x2
   140013ee8:	sub    ebx,0x41
   140013eeb:	mov    QWORD PTR [rip+0x25086],rax        # 0x140038f78
   140013ef2:	cmp    ebx,0x10
   140013ef5:	ja     0x140013fac
   140013efb:	lea    rcx,[rsp+0x20]
   140013f00:	call   0x140011a84
   140013f05:	mov    ecx,DWORD PTR [rip+0x25089]        # 0x140038f94
   140013f0b:	mov    eax,ecx
   140013f0d:	shr    eax,1
   140013f0f:	not    eax
   140013f11:	test   al,0x1
   140013f13:	je     0x140013f9c
   140013f19:	and    ebx,0xfffffffe
   140013f1c:	je     0x140013f80
   140013f1e:	cmp    ebx,0x2
   140013f21:	je     0x140013f77
   140013f23:	cmp    ebx,0x4
   140013f26:	je     0x140013f6e
   140013f28:	cmp    ebx,0x6
   140013f2b:	je     0x140013f65
   140013f2d:	cmp    ebx,0x8
   140013f30:	je     0x140013f5c
   140013f32:	cmp    ebx,0xc
   140013f35:	je     0x140013f53
   140013f37:	cmp    ebx,0xe
   140013f3a:	je     0x140013f4a
   140013f3c:	cmp    ebx,0x10
   140013f3f:	jne    0x140013f9c
   140013f41:	mov    rdx,QWORD PTR [rip+0x1a388]        # 0x14002e2d0
   140013f48:	jmp    0x140013f87
   140013f4a:	mov    rdx,QWORD PTR [rip+0x1a38f]        # 0x14002e2e0
   140013f51:	jmp    0x140013f87
   140013f53:	mov    rdx,QWORD PTR [rip+0x1a37e]        # 0x14002e2d8
   140013f5a:	jmp    0x140013f87
   140013f5c:	mov    rdx,QWORD PTR [rip+0x1a365]        # 0x14002e2c8
   140013f63:	jmp    0x140013f87
   140013f65:	mov    rdx,QWORD PTR [rip+0x1a34c]        # 0x14002e2b8
   140013f6c:	jmp    0x140013f87
   140013f6e:	mov    rdx,QWORD PTR [rip+0x1a34b]        # 0x14002e2c0
   140013f75:	jmp    0x140013f87
   140013f77:	mov    rdx,QWORD PTR [rip+0x1a332]        # 0x14002e2b0
   140013f7e:	jmp    0x140013f87
   140013f80:	mov    rdx,QWORD PTR [rip+0x1a321]        # 0x14002e2a8
   140013f87:	not    ecx
   140013f89:	test   cl,0x1
   140013f8c:	jne    0x140013f92
   140013f8e:	add    rdx,0x2
   140013f92:	lea    rcx,[rsp+0x20]
   140013f97:	call   0x140011e90
   140013f9c:	movups xmm0,XMMWORD PTR [rsp+0x20]
   140013fa1:	movdqu XMMWORD PTR [rdi],xmm0
   140013fa5:	jmp    0x140013fb1
   140013fa7:	mov    edx,0x1
   140013fac:	call   0x140011a84
   140013fb1:	mov    rax,rdi
   140013fb4:	mov    rbx,QWORD PTR [rsp+0x40]
   140013fb9:	add    rsp,0x30
   140013fbd:	pop    rdi
   140013fbe:	ret    
   140013fbf:	int3   
   140013fc0:	mov    rax,rsp
   140013fc3:	mov    QWORD PTR [rax+0x8],rbx
   140013fc7:	mov    QWORD PTR [rax+0x10],rsi
   140013fcb:	mov    QWORD PTR [rax+0x18],r8
   140013fcf:	push   rbp
   140013fd0:	push   rdi
   140013fd1:	push   r12
   140013fd3:	push   r14
   140013fd5:	push   r15
   140013fd7:	lea    rbp,[rax-0x57]
   140013fdb:	sub    rsp,0xe0
   140013fe2:	xor    r14d,r14d
   140013fe5:	movaps XMMWORD PTR [rax-0x38],xmm6
   140013fe9:	mov    rax,QWORD PTR [rip+0x24f88]        # 0x140038f78
   140013ff0:	mov    rsi,rdx
   140013ff3:	mov    edx,0xffff0000
   140013ff8:	mov    r15,r9
   140013ffb:	and    DWORD PTR [rbp-0x39],edx
   140013ffe:	mov    rbx,rcx
   140014001:	mov    QWORD PTR [rbp-0x41],r14
   140014005:	mov    BYTE PTR [rsp+0x20],r14b
   14001400a:	cmp    BYTE PTR [rax],r14b
   14001400d:	je     0x1400145ee
   140014013:	cmp    BYTE PTR [rax],0x24
   140014016:	jne    0x140014046
   140014018:	mov    r9d,DWORD PTR [rbp+0x7f]
   14001401c:	lea    r8,[rsp+0x20]
   140014021:	lea    rdx,[rbp+0x6f]
   140014025:	lea    rcx,[rbp-0x51]
   140014029:	call   0x140014e90
   14001402e:	cmp    QWORD PTR [rbp-0x51],r14
   140014032:	je     0x140014041
   140014034:	movups xmm0,XMMWORD PTR [rbp-0x51]
   140014038:	movdqu XMMWORD PTR [rbx],xmm0
   14001403c:	jmp    0x140014690
   140014041:	mov    edx,0xffff0000
   140014046:	mov    rax,QWORD PTR [rip+0x24f2b]        # 0x140038f78
   14001404d:	mov    QWORD PTR [rbp-0x71],r14
   140014051:	mov    QWORD PTR [rbp-0x51],r14
   140014055:	movsx  ecx,BYTE PTR [rax]
   140014058:	mov    eax,0x16
   14001405d:	mov    r12,r14
   140014060:	lea    r8d,[rax+0x2b]
   140014064:	mov    edi,ecx
   140014066:	cmp    cl,r8b
   140014069:	cmovge eax,r8d
   14001406d:	and    DWORD PTR [rbp-0x49],edx
   140014070:	sub    edi,eax
   140014072:	and    DWORD PTR [rbp-0x69],edx
   140014075:	mov    edx,DWORD PTR [rip+0x24f19]        # 0x140038f94
   14001407b:	movaps xmm6,XMMWORD PTR [rbp-0x71]
   14001407f:	mov    eax,edi
   140014081:	sub    eax,0x4
   140014084:	je     0x140014181
   14001408a:	dec    eax
   14001408c:	je     0x140014103
   14001408e:	cmp    eax,0x3
   140014091:	jne    0x140014267
   140014097:	mov    eax,edx
   140014099:	shr    eax,1
   14001409b:	not    eax
   14001409d:	test   al,0x1
   14001409f:	je     0x140014208
   1400140a5:	not    edx
   1400140a7:	cmp    QWORD PTR [rbp-0x51],r14
   1400140ab:	je     0x1400140f4
   1400140ad:	mov    rdi,QWORD PTR [rip+0x1a23c]        # 0x14002e2f0
   1400140b4:	test   dl,0x1
   1400140b7:	jne    0x1400140bd
   1400140b9:	add    rdi,0x2
   1400140bd:	movaps xmm0,XMMWORD PTR [rbp-0x51]
   1400140c1:	lea    rcx,[rbp-0x11]
   1400140c5:	mov    dl,0x20
   1400140c7:	movdqa XMMWORD PTR [rbp-0x11],xmm0
   1400140cc:	call   0x1400122f0
   1400140d1:	lea    rcx,[rbp-0x31]
   1400140d5:	movaps xmm0,XMMWORD PTR [rbp-0x11]
   1400140d9:	mov    rdx,rdi
   1400140dc:	movdqa XMMWORD PTR [rbp-0x31],xmm0
   1400140e1:	call   0x14001240c
   1400140e6:	movaps xmm0,XMMWORD PTR [rbp-0x31]
   1400140ea:	movdqa XMMWORD PTR [rbp-0x51],xmm0
   1400140ef:	jmp    0x1400141fc
   1400140f4:	test   dl,0x1
   1400140f7:	mov    rdx,QWORD PTR [rip+0x1a1f2]        # 0x14002e2f0
   1400140fe:	jmp    0x1400141ed
   140014103:	mov    eax,edx
   140014105:	shr    eax,1
   140014107:	not    eax
   140014109:	test   al,0x1
   14001410b:	je     0x140014208
   140014111:	not    edx
   140014113:	test   r12,r12
   140014116:	je     0x14001415e
   140014118:	mov    rdi,QWORD PTR [rip+0x1a1d9]        # 0x14002e2f8
   14001411f:	test   dl,0x1
   140014122:	jne    0x140014128
   140014124:	add    rdi,0x2
   140014128:	lea    rcx,[rbp+0xf]
   14001412c:	mov    dl,0x20
   14001412e:	movdqa XMMWORD PTR [rbp+0xf],xmm6
   140014133:	call   0x1400122f0
   140014138:	lea    rcx,[rbp-0x1]
   14001413c:	mov    rdx,rdi
   14001413f:	movaps xmm0,XMMWORD PTR [rbp+0xf]
   140014143:	movdqa XMMWORD PTR [rbp-0x1],xmm0
   140014148:	call   0x14001240c
   14001414d:	movaps xmm6,XMMWORD PTR [rbp-0x1]
   140014151:	movaps XMMWORD PTR [rbp-0x71],xmm6
   140014155:	mov    r12,QWORD PTR [rbp-0x71]
   140014159:	jmp    0x1400141fc
   14001415e:	test   dl,0x1
   140014161:	mov    rdx,QWORD PTR [rip+0x1a190]        # 0x14002e2f8
   140014168:	jne    0x14001416e
   14001416a:	add    rdx,0x2
   14001416e:	lea    rcx,[rbp-0x71]
   140014172:	call   0x140011e90
   140014177:	mov    r12,QWORD PTR [rbp-0x71]
   14001417b:	movaps xmm6,XMMWORD PTR [rbp-0x71]
   14001417f:	jmp    0x1400141fc
   140014181:	mov    eax,edx
   140014183:	shr    eax,1
   140014185:	not    eax
   140014187:	test   al,0x1
   140014189:	je     0x140014208
   14001418b:	mov    eax,edx
   14001418d:	shr    eax,0x11
   140014190:	not    eax
   140014192:	test   al,0x1
   140014194:	je     0x140014208
   140014196:	not    edx
   140014198:	cmp    QWORD PTR [rbp-0x51],r14
   14001419c:	je     0x1400141e3
   14001419e:	mov    rdi,QWORD PTR [rip+0x1a143]        # 0x14002e2e8
   1400141a5:	test   dl,0x1
   1400141a8:	jne    0x1400141ae
   1400141aa:	add    rdi,0x2
   1400141ae:	movaps xmm0,XMMWORD PTR [rbp-0x51]
   1400141b2:	lea    rcx,[rbp-0x21]
   1400141b6:	mov    dl,0x20
   1400141b8:	movdqa XMMWORD PTR [rbp-0x21],xmm0
   1400141bd:	call   0x1400122f0
   1400141c2:	lea    rcx,[rsp+0x30]
   1400141c7:	movaps xmm0,XMMWORD PTR [rbp-0x21]
   1400141cb:	mov    rdx,rdi
   1400141ce:	movdqa XMMWORD PTR [rsp+0x30],xmm0
   1400141d4:	call   0x14001240c
   1400141d9:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   1400141de:	jmp    0x1400140ea
   1400141e3:	test   dl,0x1
   1400141e6:	mov    rdx,QWORD PTR [rip+0x1a0fb]        # 0x14002e2e8
   1400141ed:	jne    0x1400141f3
   1400141ef:	add    rdx,0x2
   1400141f3:	lea    rcx,[rbp-0x51]
   1400141f7:	call   0x140011e90
   1400141fc:	mov    edx,DWORD PTR [rip+0x24d92]        # 0x140038f94
   140014202:	mov    r8d,0x41
   140014208:	mov    rax,QWORD PTR [rip+0x24d69]        # 0x140038f78
   14001420f:	inc    rax
   140014212:	mov    QWORD PTR [rip+0x24d5f],rax        # 0x140038f78
   140014219:	cmp    BYTE PTR [rax],0x24
   14001421c:	jne    0x14001424a
   14001421e:	mov    r9d,DWORD PTR [rbp+0x7f]
   140014222:	lea    r8,[rsp+0x20]
   140014227:	lea    rdx,[rbp+0x6f]
   14001422b:	lea    rcx,[rbp-0x61]
   14001422f:	call   0x140014e90
   140014234:	cmp    QWORD PTR [rbp-0x61],r14
   140014238:	jne    0x1400145e5
   14001423e:	mov    edx,DWORD PTR [rip+0x24d50]        # 0x140038f94
   140014244:	mov    r8d,0x41
   14001424a:	mov    rax,QWORD PTR [rip+0x24d27]        # 0x140038f78
   140014251:	mov    ecx,0x16
   140014256:	cmp    BYTE PTR [rax],r8b
   140014259:	movsx  edi,BYTE PTR [rax]
   14001425c:	cmovge ecx,r8d
   140014260:	sub    edi,ecx
   140014262:	jmp    0x14001407f
   140014267:	mov    rax,QWORD PTR [rip+0x24d0a]        # 0x140038f78
   14001426e:	cmp    BYTE PTR [rax],r14b
   140014271:	je     0x14001427a
   140014273:	inc    QWORD PTR [rip+0x24cfe]        # 0x140038f78
   14001427a:	cmp    edi,0x1f
   14001427d:	ja     0x14001433e
   140014283:	mov    r14,QWORD PTR [rbp+0x6f]
   140014287:	lea    rcx,[rbp-0x71]
   14001428b:	mov    rdx,r14
   14001428e:	call   0x140011a3c
   140014293:	lea    rdx,[rbp-0x71]
   140014297:	lea    rcx,[rsp+0x30]
   14001429c:	movaps xmm0,XMMWORD PTR [rbp-0x41]
   1400142a0:	movdqa XMMWORD PTR [rsp+0x30],xmm0
   1400142a6:	call   0x1400122b0
   1400142ab:	cmp    QWORD PTR [rbp-0x51],0x0
   1400142b0:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   1400142b5:	movdqa XMMWORD PTR [rbp-0x71],xmm0
   1400142ba:	je     0x1400142f1
   1400142bc:	lea    rcx,[rsp+0x30]
   1400142c1:	mov    dl,0x20
   1400142c3:	movdqa XMMWORD PTR [rsp+0x30],xmm0
   1400142c9:	call   0x1400122f0
   1400142ce:	lea    rdx,[rbp-0x51]
   1400142d2:	lea    rcx,[rsp+0x30]
   1400142d7:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   1400142dc:	movdqa XMMWORD PTR [rsp+0x30],xmm0
   1400142e2:	call   0x1400122b0
   1400142e7:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   1400142ec:	movdqa XMMWORD PTR [rbp-0x71],xmm0
   1400142f1:	test   r12,r12
   1400142f4:	je     0x14001432b
   1400142f6:	lea    rcx,[rsp+0x30]
   1400142fb:	mov    dl,0x20
   1400142fd:	movdqa XMMWORD PTR [rsp+0x30],xmm6
   140014303:	call   0x1400122f0
   140014308:	lea    rdx,[rbp-0x71]
   14001430c:	lea    rcx,[rsp+0x30]
   140014311:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   140014316:	movdqa XMMWORD PTR [rsp+0x30],xmm0
   14001431c:	call   0x1400122b0
   140014321:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   140014326:	movdqa XMMWORD PTR [rbp-0x71],xmm0
   14001432b:	xor    r12d,r12d
   14001432e:	test   dil,0x10
   140014332:	je     0x140014427
   140014338:	cmp    DWORD PTR [rbp+0x7f],r12d
   14001433c:	je     0x14001434b
   14001433e:	mov    edx,0x2
   140014343:	mov    rcx,rbx
   140014346:	jmp    0x14001468b
   14001434b:	cmp    BYTE PTR [r14],r12b
   14001434e:	je     0x1400143c5
   140014350:	lea    rdx,[rip+0x1a8ad]        # 0x14002ec04
   140014357:	lea    rcx,[rbp-0x61]
   14001435b:	call   0x140011a3c
   140014360:	lea    rdx,[rbp-0x71]
   140014364:	lea    rcx,[rsp+0x30]
   140014369:	movups xmm0,XMMWORD PTR [rax]
   14001436c:	movdqu XMMWORD PTR [rsp+0x30],xmm0
   140014372:	call   0x1400122b0
   140014377:	mov    rax,QWORD PTR [rip+0x24bfa]        # 0x140038f78
   14001437e:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   140014383:	lea    rcx,[rbp-0x61]
   140014387:	movdqa XMMWORD PTR [rbp-0x71],xmm0
   14001438c:	cmp    BYTE PTR [rax],r12b
   14001438f:	je     0x140014398
   140014391:	call   0x1400165c0
   140014396:	jmp    0x1400143a2
   140014398:	mov    edx,0x1
   14001439d:	call   0x140011a84
   1400143a2:	movups xmm0,XMMWORD PTR [rax]
   1400143a5:	lea    rdx,[rbp-0x71]
   1400143a9:	lea    rcx,[rsp+0x30]
   1400143ae:	movdqu XMMWORD PTR [rsp+0x30],xmm0
   1400143b4:	call   0x1400122b0
   1400143b9:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   1400143be:	movdqa XMMWORD PTR [rbp-0x71],xmm0
   1400143c3:	jmp    0x1400143f8
   1400143c5:	mov    rax,QWORD PTR [rip+0x24bac]        # 0x140038f78
   1400143cc:	cmp    BYTE PTR [rax],r12b
   1400143cf:	je     0x140014419
   1400143d1:	lea    rcx,[rbp-0x61]
   1400143d5:	call   0x1400165c0
   1400143da:	cmp    BYTE PTR [rbp-0x69],0x3
   1400143de:	je     0x1400143f8
   1400143e0:	cmp    BYTE PTR [rax+0x8],0x1
   1400143e4:	jle    0x1400143f8
   1400143e6:	mov    ecx,DWORD PTR [rbp-0x69]
   1400143e9:	movzx  eax,BYTE PTR [rax+0x8]
   1400143ed:	and    ecx,0xffffff00
   1400143f3:	or     ecx,eax
   1400143f5:	mov    DWORD PTR [rbp-0x69],ecx
   1400143f8:	mov    rax,QWORD PTR [rip+0x24b79]        # 0x140038f78
   1400143ff:	mov    cl,BYTE PTR [rax]
   140014401:	test   cl,cl
   140014403:	je     0x140014419
   140014405:	inc    rax
   140014408:	mov    QWORD PTR [rip+0x24b69],rax        # 0x140038f78
   14001440f:	cmp    cl,0x40
   140014412:	je     0x140014427
   140014414:	jmp    0x14001433e
   140014419:	lea    rcx,[rbp-0x71]
   14001441d:	mov    edx,0x1
   140014422:	call   0x140012498
   140014427:	mov    eax,DWORD PTR [rip+0x24b67]        # 0x140038f94
   14001442d:	shr    eax,1
   14001442f:	not    eax
   140014431:	test   al,0x1
   140014433:	mov    eax,edi
   140014435:	je     0x140014474
   140014437:	and    eax,0xc
   14001443a:	cmp    al,0xc
   14001443c:	jne    0x1400144a2
   14001443e:	cmp    DWORD PTR [rbp+0x7f],r12d
   140014442:	jne    0x14001433e
   140014448:	lea    rcx,[rbp-0x61]
   14001444c:	call   0x1400139d4
   140014451:	lea    rdx,[rbp-0x71]
   140014455:	lea    rcx,[rsp+0x30]
   14001445a:	movups xmm0,XMMWORD PTR [rax]
   14001445d:	movdqu XMMWORD PTR [rsp+0x30],xmm0
   140014463:	call   0x1400122b0
   140014468:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   14001446d:	movdqa XMMWORD PTR [rbp-0x71],xmm0
   140014472:	jmp    0x1400144a2
   140014474:	and    eax,0xc
   140014477:	cmp    al,0xc
   140014479:	jne    0x1400144a2
   14001447b:	lea    rcx,[rbp-0x61]
   14001447f:	call   0x1400139d4
   140014484:	cmp    BYTE PTR [rbp-0x69],0x3
   140014488:	je     0x1400144a2
   14001448a:	cmp    BYTE PTR [rax+0x8],0x1
   14001448e:	jle    0x1400144a2
   140014490:	mov    ecx,DWORD PTR [rbp-0x69]
   140014493:	movzx  eax,BYTE PTR [rax+0x8]
   140014497:	and    ecx,0xffffff00
   14001449d:	or     ecx,eax
   14001449f:	mov    DWORD PTR [rbp-0x69],ecx
   1400144a2:	test   dil,0x2
   1400144a6:	je     0x1400144d9
   1400144a8:	lea    rdx,[rip+0x1aab9]        # 0x14002ef68
   1400144af:	lea    rcx,[rbp-0x61]
   1400144b3:	call   0x140011a3c
   1400144b8:	lea    rdx,[rbp-0x71]
   1400144bc:	lea    rcx,[rsp+0x30]
   1400144c1:	movups xmm0,XMMWORD PTR [rax]
   1400144c4:	movdqu XMMWORD PTR [rsp+0x30],xmm0
   1400144ca:	call   0x1400122b0
   1400144cf:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   1400144d4:	movdqa XMMWORD PTR [rbp-0x71],xmm0
   1400144d9:	test   dil,0x1
   1400144dd:	je     0x140014510
   1400144df:	lea    rdx,[rip+0x1aa8e]        # 0x14002ef74
   1400144e6:	lea    rcx,[rbp-0x61]
   1400144ea:	call   0x140011a3c
   1400144ef:	lea    rdx,[rbp-0x71]
   1400144f3:	lea    rcx,[rsp+0x30]
   1400144f8:	movups xmm0,XMMWORD PTR [rax]
   1400144fb:	movdqu XMMWORD PTR [rsp+0x30],xmm0
   140014501:	call   0x1400122b0
   140014506:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   14001450b:	movdqa XMMWORD PTR [rbp-0x71],xmm0
   140014510:	mov    edi,0x100
   140014515:	cmp    DWORD PTR [rbp+0x7f],r12d
   140014519:	jne    0x1400145cd
   14001451f:	cmp    QWORD PTR [rsi],r12
   140014522:	je     0x140014599
   140014524:	test   DWORD PTR [rsi+0x8],edi
   140014527:	jne    0x140014576
   140014529:	cmp    QWORD PTR [r15],r12
   14001452c:	je     0x140014576
   14001452e:	lea    rcx,[rbp-0x61]
   140014532:	mov    dl,0x20
   140014534:	call   0x14001197c
   140014539:	lea    rcx,[rsp+0x30]
   14001453e:	mov    rdx,r15
   140014541:	movups xmm0,XMMWORD PTR [rax]
   140014544:	movdqu XMMWORD PTR [rsp+0x30],xmm0
   14001454a:	call   0x1400122b0
   14001454f:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   140014554:	lea    rcx,[rsp+0x30]
   140014559:	mov    dl,0x20
   14001455b:	movdqa XMMWORD PTR [rsp+0x30],xmm0
   140014561:	call   0x1400122f0
   140014566:	mov    rdx,rsi
   140014569:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   14001456e:	movdqa XMMWORD PTR [rsp+0x30],xmm0
   140014574:	jmp    0x1400145b5
   140014576:	test   DWORD PTR [rsi+0x8],0x800
   14001457d:	je     0x140014589
   14001457f:	movups xmm0,XMMWORD PTR [rsi]
   140014582:	movdqu XMMWORD PTR [rbp-0x71],xmm0
   140014587:	jmp    0x1400145cd
   140014589:	lea    rcx,[rbp-0x61]
   14001458d:	mov    dl,0x20
   14001458f:	call   0x14001197c
   140014594:	mov    rdx,rsi
   140014597:	jmp    0x1400145ac
   140014599:	cmp    QWORD PTR [r15],r12
   14001459c:	je     0x1400145cd
   14001459e:	lea    rcx,[rbp-0x61]
   1400145a2:	mov    dl,0x20
   1400145a4:	call   0x14001197c
   1400145a9:	mov    rdx,r15
   1400145ac:	movups xmm0,XMMWORD PTR [rax]
   1400145af:	movdqu XMMWORD PTR [rsp+0x30],xmm0
   1400145b5:	lea    rcx,[rsp+0x30]
   1400145ba:	call   0x1400122b0
   1400145bf:	lea    rdx,[rsp+0x30]
   1400145c4:	lea    rcx,[rbp-0x71]
   1400145c8:	call   0x1400122b0
   1400145cd:	or     DWORD PTR [rbp-0x69],edi
   1400145d0:	cmp    BYTE PTR [rsp+0x20],r12b
   1400145d5:	je     0x1400145dc
   1400145d7:	bts    DWORD PTR [rbp-0x69],0xd
   1400145dc:	movaps xmm0,XMMWORD PTR [rbp-0x71]
   1400145e0:	jmp    0x140014038
   1400145e5:	movups xmm0,XMMWORD PTR [rbp-0x61]
   1400145e9:	jmp    0x140014038
   1400145ee:	cmp    DWORD PTR [rbp+0x7f],r14d
   1400145f2:	jne    0x140014686
   1400145f8:	cmp    QWORD PTR [rsi],r14
   1400145fb:	je     0x14001466b
   1400145fd:	mov    edi,0x100
   140014602:	test   DWORD PTR [rsi+0x8],edi
   140014605:	jne    0x140014658
   140014607:	cmp    QWORD PTR [r9],r14
   14001460a:	je     0x140014658
   14001460c:	lea    rcx,[rsp+0x30]
   140014611:	mov    edx,0x1
   140014616:	call   0x140011a84
   14001461b:	lea    rcx,[rbp-0x61]
   14001461f:	mov    rdx,r15
   140014622:	movups xmm0,XMMWORD PTR [rax]
   140014625:	movdqu XMMWORD PTR [rbp-0x61],xmm0
   14001462a:	call   0x1400122b0
   14001462f:	movaps xmm0,XMMWORD PTR [rbp-0x61]
   140014633:	lea    rcx,[rbp-0x61]
   140014637:	mov    dl,0x20
   140014639:	movdqa XMMWORD PTR [rbp-0x61],xmm0
   14001463e:	call   0x1400122f0
   140014643:	movaps xmm0,XMMWORD PTR [rbp-0x61]
   140014647:	mov    rdx,rsi
   14001464a:	mov    rcx,rbx
   14001464d:	movdqu XMMWORD PTR [rbx],xmm0
   140014651:	call   0x1400122b0
   140014656:	jmp    0x140014690
   140014658:	lea    rcx,[rbp-0x61]
   14001465c:	mov    edx,0x1
   140014661:	call   0x140011a84
   140014666:	movups xmm0,XMMWORD PTR [rax]
   140014669:	jmp    0x140014647
   14001466b:	cmp    QWORD PTR [r9],r14
   14001466e:	je     0x140014686
   140014670:	lea    rcx,[rbp-0x61]
   140014674:	mov    edx,0x1
   140014679:	call   0x140011a84
   14001467e:	mov    rdx,r15
   140014681:	movups xmm0,XMMWORD PTR [rax]
   140014684:	jmp    0x14001464a
   140014686:	mov    edx,0x1
   14001468b:	call   0x140011a84
   140014690:	lea    r11,[rsp+0xe0]
   140014698:	mov    rax,rbx
   14001469b:	mov    rbx,QWORD PTR [r11+0x30]
   14001469f:	mov    rsi,QWORD PTR [r11+0x38]
   1400146a3:	movaps xmm6,XMMWORD PTR [r11-0x10]
   1400146a8:	mov    rsp,r11
   1400146ab:	pop    r15
   1400146ad:	pop    r14
   1400146af:	pop    r12
   1400146b1:	pop    rdi
   1400146b2:	pop    rbp
   1400146b3:	ret    
   1400146b4:	mov    r11,rsp
   1400146b7:	push   rbx
   1400146b8:	sub    rsp,0x50
   1400146bc:	mov    rbx,rcx
   1400146bf:	xor    ecx,ecx
   1400146c1:	mov    eax,0xffff0000
   1400146c6:	mov    QWORD PTR [r11-0x28],rcx
   1400146ca:	and    DWORD PTR [rsp+0x38],eax
   1400146ce:	mov    QWORD PTR [r11-0x18],rcx
   1400146d2:	and    DWORD PTR [rsp+0x48],eax
   1400146d6:	mov    DWORD PTR [rsp+0x20],ecx
   1400146da:	lea    r9,[r11-0x28]
   1400146de:	lea    r8,[rip+0x1636b]        # 0x14002aa50
   1400146e5:	lea    rdx,[r11-0x18]
   1400146e9:	mov    rcx,rbx
   1400146ec:	call   0x140013fc0
   1400146f1:	mov    rax,rbx
   1400146f4:	add    rsp,0x50
   1400146f8:	pop    rbx
   1400146f9:	ret    
   1400146fa:	int3   
   1400146fb:	int3   
   1400146fc:	mov    QWORD PTR [rsp+0x8],rbx
   140014701:	push   rbp
   140014702:	mov    rbp,rsp
   140014705:	sub    rsp,0x60
   140014709:	mov    rbx,rcx
   14001470c:	lea    rcx,[rbp-0x30]
   140014710:	call   0x1400119b4
   140014715:	mov    rax,QWORD PTR [rip+0x2485c]        # 0x140038f78
   14001471c:	xor    ecx,ecx
   14001471e:	cmp    BYTE PTR [rax],cl
   140014720:	je     0x1400147af
   140014726:	cmp    BYTE PTR [rax],0x3f
   140014729:	je     0x140014774
   14001472b:	cmp    BYTE PTR [rax],0x58
   14001472e:	je     0x140014741
   140014730:	lea    rdx,[rbp-0x30]
   140014734:	mov    rcx,rbx
   140014737:	call   0x140015ff8
   14001473c:	jmp    0x1400147d0
   140014741:	inc    rax
   140014744:	mov    QWORD PTR [rip+0x2482d],rax        # 0x140038f78
   14001474b:	cmp    QWORD PTR [rbp-0x30],rcx
   14001474f:	jne    0x140014762
   140014751:	lea    rdx,[rip+0x1a520]        # 0x14002ec78
   140014758:	mov    rcx,rbx
   14001475b:	call   0x140011a3c
   140014760:	jmp    0x1400147d0
   140014762:	lea    rdx,[rip+0x1a69b]        # 0x14002ee04
   140014769:	lea    rcx,[rbp-0x20]
   14001476d:	call   0x140011a3c
   140014772:	jmp    0x1400147bd
   140014774:	and    DWORD PTR [rbp-0x18],0xffff0000
   14001477b:	mov    QWORD PTR [rbp-0x20],rcx
   14001477f:	mov    DWORD PTR [rsp+0x20],ecx
   140014783:	inc    rax
   140014786:	lea    rcx,[rbp-0x10]
   14001478a:	lea    r9,[rbp-0x20]
   14001478e:	lea    r8,[rip+0x162bb]        # 0x14002aa50
   140014795:	lea    rdx,[rbp-0x30]
   140014799:	mov    QWORD PTR [rip+0x247d8],rax        # 0x140038f78
   1400147a0:	call   0x140013fc0
   1400147a5:	movups xmm0,XMMWORD PTR [rax]
   1400147a8:	movdqu XMMWORD PTR [rbp-0x30],xmm0
   1400147ad:	jmp    0x140014730
   1400147af:	lea    rcx,[rbp-0x20]
   1400147b3:	mov    edx,0x1
   1400147b8:	call   0x140011a84
   1400147bd:	movups xmm0,XMMWORD PTR [rax]
   1400147c0:	lea    rdx,[rbp-0x30]
   1400147c4:	mov    rcx,rbx
   1400147c7:	movdqu XMMWORD PTR [rbx],xmm0
   1400147cb:	call   0x1400122b0
   1400147d0:	mov    rax,rbx
   1400147d3:	mov    rbx,QWORD PTR [rsp+0x70]
   1400147d8:	add    rsp,0x60
   1400147dc:	pop    rbp
   1400147dd:	ret    
   1400147de:	int3   
   1400147df:	int3   
   1400147e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400147e5:	mov    QWORD PTR [rsp+0x20],rsi
   1400147ea:	push   rbp
   1400147eb:	mov    rbp,rsp
   1400147ee:	sub    rsp,0x50
   1400147f2:	mov    eax,DWORD PTR [rip+0x2479c]        # 0x140038f94
   1400147f8:	mov    rbx,rcx
   1400147fb:	bt     eax,0xd
   1400147ff:	jae    0x14001482b
   140014801:	btr    eax,0xd
   140014805:	lea    rcx,[rbp-0x10]
   140014809:	xor    edx,edx
   14001480b:	mov    DWORD PTR [rip+0x24783],eax        # 0x140038f94
   140014811:	call   0x1400146fc
   140014816:	bts    DWORD PTR [rip+0x24776],0xd        # 0x140038f94
   14001481e:	movups xmm0,XMMWORD PTR [rbp-0x10]
   140014822:	movdqu XMMWORD PTR [rbx],xmm0
   140014826:	jmp    0x140014a3f
   14001482b:	mov    rax,QWORD PTR [rip+0x24746]        # 0x140038f78
   140014832:	mov    dl,0x3f
   140014834:	mov    cl,BYTE PTR [rax]
   140014836:	cmp    cl,dl
   140014838:	jne    0x140014a29
   14001483e:	inc    rax
   140014841:	mov    QWORD PTR [rip+0x24730],rax        # 0x140038f78
   140014848:	cmp    BYTE PTR [rax],dl
   14001484a:	jne    0x14001489b
   14001484c:	inc    rax
   14001484f:	cmp    BYTE PTR [rax],dl
   140014851:	jne    0x140014876
   140014853:	lea    rcx,[rbp-0x10]
   140014857:	call   0x1400147e0
   14001485c:	mov    rax,QWORD PTR [rip+0x24715]        # 0x140038f78
   140014863:	jmp    0x14001486f
   140014865:	inc    rax
   140014868:	mov    QWORD PTR [rip+0x24709],rax        # 0x140038f78
   14001486f:	cmp    BYTE PTR [rax],0x0
   140014872:	jne    0x140014865
   140014874:	jmp    0x14001481e
   140014876:	cmp    BYTE PTR [rax],0x24
   140014879:	lea    rcx,[rbp-0x30]
   14001487d:	jne    0x140014888
   14001487f:	mov    dl,0x1
   140014881:	call   0x1400175c0
   140014886:	jmp    0x1400148a9
   140014888:	xor    r8d,r8d
   14001488b:	xor    edx,edx
   14001488d:	mov    QWORD PTR [rip+0x246e4],rax        # 0x140038f78
   140014894:	call   0x1400158dc
   140014899:	jmp    0x1400148a9
   14001489b:	lea    rcx,[rbp-0x30]
   14001489f:	xor    r8d,r8d
   1400148a2:	mov    dl,0x1
   1400148a4:	call   0x14001800c
   1400148a9:	cmp    QWORD PTR [rbp-0x30],0x0
   1400148ae:	mov    esi,DWORD PTR [rbp-0x28]
   1400148b1:	je     0x1400148c2
   1400148b3:	bt     esi,0x9
   1400148b7:	jae    0x1400148c2
   1400148b9:	mov    DWORD PTR [rbp+0x20],0x1
   1400148c0:	jmp    0x1400148c6
   1400148c2:	and    DWORD PTR [rbp+0x20],0x0
   1400148c6:	mov    ecx,esi
   1400148c8:	shr    ecx,0xf
   1400148cb:	and    ecx,0x1
   1400148ce:	cmp    BYTE PTR [rbp-0x28],0x1
   1400148d2:	mov    DWORD PTR [rbp+0x18],ecx
   1400148d5:	jle    0x1400148e0
   1400148d7:	movaps xmm0,XMMWORD PTR [rbp-0x30]
   1400148db:	jmp    0x140014822
   1400148e0:	mov    rax,QWORD PTR [rip+0x24691]        # 0x140038f78
   1400148e7:	test   BYTE PTR [rax],0xbf
   1400148ea:	je     0x140014990
   1400148f0:	lea    rcx,[rbp-0x20]
   1400148f4:	call   0x1400165c0
   1400148f9:	cmp    QWORD PTR [rbp-0x20],0x0
   1400148fe:	je     0x14001498d
   140014904:	cmp    BYTE PTR [rip+0x2468d],0x0        # 0x140038f98
   14001490b:	lea    rcx,[rbp-0x10]
   14001490f:	je     0x140014956
   140014911:	movaps xmm0,XMMWORD PTR [rbp-0x30]
   140014915:	lea    rdx,[rbp-0x20]
   140014919:	mov    BYTE PTR [rip+0x24678],0x0        # 0x140038f98
   140014920:	movdqa XMMWORD PTR [rbp-0x10],xmm0
   140014925:	call   0x1400122b0
   14001492a:	mov    rax,QWORD PTR [rip+0x24647]        # 0x140038f78
   140014931:	movaps xmm0,XMMWORD PTR [rbp-0x10]
   140014935:	cmp    BYTE PTR [rax],0x40
   140014938:	movdqa XMMWORD PTR [rbp-0x30],xmm0
   14001493d:	je     0x14001498a
   14001493f:	lea    rcx,[rbp-0x10]
   140014943:	call   0x1400165c0
   140014948:	lea    rcx,[rbp-0x10]
   14001494c:	movups xmm0,XMMWORD PTR [rax]
   14001494f:	movdqu XMMWORD PTR [rbp-0x10],xmm0
   140014954:	jmp    0x14001495f
   140014956:	movaps xmm0,XMMWORD PTR [rbp-0x20]
   14001495a:	movdqa XMMWORD PTR [rbp-0x10],xmm0
   14001495f:	lea    rdx,[rip+0x1a29e]        # 0x14002ec04
   140014966:	call   0x14001240c
   14001496b:	lea    rdx,[rbp-0x30]
   14001496f:	lea    rcx,[rbp-0x10]
   140014973:	movaps xmm0,XMMWORD PTR [rbp-0x10]
   140014977:	movdqa XMMWORD PTR [rbp-0x10],xmm0
   14001497c:	call   0x1400122b0
   140014981:	movaps xmm0,XMMWORD PTR [rbp-0x10]
   140014985:	movdqa XMMWORD PTR [rbp-0x30],xmm0
   14001498a:	mov    esi,DWORD PTR [rbp-0x28]
   14001498d:	mov    ecx,DWORD PTR [rbp+0x18]
   140014990:	mov    edx,DWORD PTR [rbp+0x20]
   140014993:	test   edx,edx
   140014995:	je     0x1400149a5
   140014997:	cmp    QWORD PTR [rbp-0x30],0x0
   14001499c:	je     0x1400149a5
   14001499e:	bts    esi,0x9
   1400149a2:	mov    DWORD PTR [rbp-0x28],esi
   1400149a5:	mov    r8d,0x8000
   1400149ab:	test   ecx,ecx
   1400149ad:	je     0x1400149b5
   1400149af:	or     esi,r8d
   1400149b2:	mov    DWORD PTR [rbp-0x28],esi
   1400149b5:	cmp    QWORD PTR [rbp-0x30],0x0
   1400149ba:	je     0x1400148d7
   1400149c0:	mov    ecx,0x1000
   1400149c5:	test   ecx,esi
   1400149c7:	jne    0x1400148d7
   1400149cd:	mov    rax,QWORD PTR [rip+0x245a4]        # 0x140038f78
   1400149d4:	cmp    BYTE PTR [rax],0x0
   1400149d7:	je     0x1400149ec
   1400149d9:	cmp    BYTE PTR [rax],0x40
   1400149dc:	je     0x1400149e5
   1400149de:	mov    edx,0x2
   1400149e3:	jmp    0x140014a37
   1400149e5:	inc    QWORD PTR [rip+0x2458c]        # 0x140038f78
   1400149ec:	test   DWORD PTR [rip+0x245a2],ecx        # 0x140038f94
   1400149f2:	je     0x140014a1b
   1400149f4:	test   edx,edx
   1400149f6:	jne    0x140014a1b
   1400149f8:	test   r8d,esi
   1400149fb:	jne    0x140014a1b
   1400149fd:	and    QWORD PTR [rbp-0x20],0x0
   140014a02:	and    DWORD PTR [rbp-0x18],0xffff0000
   140014a09:	lea    rdx,[rbp-0x20]
   140014a0d:	lea    rcx,[rbp-0x10]
   140014a11:	call   0x14001262c
   140014a16:	jmp    0x1400148d7
   140014a1b:	lea    rdx,[rbp-0x30]
   140014a1f:	mov    rcx,rbx
   140014a22:	call   0x14001262c
   140014a27:	jmp    0x140014a3f
   140014a29:	mov    edx,0x2
   140014a2e:	test   cl,cl
   140014a30:	jne    0x140014a37
   140014a32:	mov    edx,0x1
   140014a37:	mov    rcx,rbx
   140014a3a:	call   0x140011a84
   140014a3f:	mov    rsi,QWORD PTR [rsp+0x78]
   140014a44:	mov    rax,rbx
   140014a47:	mov    rbx,QWORD PTR [rsp+0x60]
   140014a4c:	add    rsp,0x50
   140014a50:	pop    rbp
   140014a51:	ret    
   140014a52:	int3   
   140014a53:	int3   
   140014a54:	mov    QWORD PTR [rsp+0x8],rbx
   140014a59:	mov    QWORD PTR [rsp+0x10],rsi
   140014a5e:	mov    QWORD PTR [rsp+0x18],rdi
   140014a63:	push   rbp
   140014a64:	mov    rbp,rsp
   140014a67:	sub    rsp,0x60
   140014a6b:	mov    r8,QWORD PTR [rip+0x24506]        # 0x140038f78
   140014a72:	xor    esi,esi
   140014a74:	mov    r9b,dl
   140014a77:	cmp    BYTE PTR [r8],0x51
   140014a7b:	mov    rdi,rcx
   140014a7e:	lea    r10d,[rsi+0x1]
   140014a82:	jne    0x140014a95
   140014a84:	add    r8,r10
   140014a87:	lea    rsi,[rip+0x1a1ca]        # 0x14002ec58
   140014a8e:	mov    QWORD PTR [rip+0x244e3],r8        # 0x140038f78
   140014a95:	mov    cl,BYTE PTR [r8]
   140014a98:	test   cl,cl
   140014a9a:	jne    0x140014aac
   140014a9c:	mov    edx,r10d
   140014a9f:	mov    rcx,rdi
   140014aa2:	call   0x140011a84
   140014aa7:	jmp    0x140014b97
   140014aac:	lea    eax,[rcx-0x30]
   140014aaf:	cmp    al,0x9
   140014ab1:	ja     0x140014add
   140014ab3:	add    r8,r10
   140014ab6:	movsx  eax,cl
   140014ab9:	sub    eax,0x2f
   140014abc:	mov    QWORD PTR [rip+0x244b5],r8        # 0x140038f78
   140014ac3:	movsxd rdx,eax
   140014ac6:	test   rsi,rsi
   140014ac9:	je     0x140014ad4
   140014acb:	lea    rcx,[rbp-0x30]
   140014acf:	jmp    0x140014b59
   140014ad4:	lea    rcx,[rbp-0x10]
   140014ad8:	jmp    0x140014b8b
   140014add:	xor    edx,edx
   140014adf:	mov    r11b,0x40
   140014ae2:	jmp    0x140014b0f
   140014ae4:	test   cl,cl
   140014ae6:	je     0x140014a9c
   140014ae8:	lea    eax,[rcx-0x41]
   140014aeb:	cmp    al,0xf
   140014aed:	ja     0x140014b3b
   140014aef:	movsx  eax,cl
   140014af2:	shl    rdx,0x4
   140014af6:	sub    eax,0x41
   140014af9:	movsxd rcx,eax
   140014afc:	add    rcx,rdx
   140014aff:	add    r8,r10
   140014b02:	mov    QWORD PTR [rip+0x2446f],r8        # 0x140038f78
   140014b09:	mov    rdx,rcx
   140014b0c:	mov    cl,BYTE PTR [r8]
   140014b0f:	cmp    cl,r11b
   140014b12:	jne    0x140014ae4
   140014b14:	mov    al,BYTE PTR [r8]
   140014b17:	add    r8,r10
   140014b1a:	mov    QWORD PTR [rip+0x24457],r8        # 0x140038f78
   140014b21:	cmp    al,r11b
   140014b24:	jne    0x140014b3b
   140014b26:	test   r9b,r9b
   140014b29:	je     0x140014b50
   140014b2b:	test   rsi,rsi
   140014b2e:	je     0x140014b45
   140014b30:	lea    rcx,[rbp-0x10]
   140014b34:	call   0x140011ae8
   140014b39:	jmp    0x140014b5e
   140014b3b:	mov    edx,0x2
   140014b40:	jmp    0x140014a9f
   140014b45:	lea    rcx,[rbp-0x30]
   140014b49:	call   0x140011ae8
   140014b4e:	jmp    0x140014b90
   140014b50:	test   rsi,rsi
   140014b53:	je     0x140014b87
   140014b55:	lea    rcx,[rbp-0x10]
   140014b59:	call   0x140011b94
   140014b5e:	lea    rcx,[rbp-0x20]
   140014b62:	mov    rdx,rsi
   140014b65:	mov    rbx,rax
   140014b68:	call   0x140011a3c
   140014b6d:	lea    rcx,[rbp-0x40]
   140014b71:	mov    rdx,rbx
   140014b74:	movups xmm0,XMMWORD PTR [rax]
   140014b77:	movdqu XMMWORD PTR [rbp-0x40],xmm0
   140014b7c:	call   0x1400122b0
   140014b81:	lea    rax,[rbp-0x40]
   140014b85:	jmp    0x140014b90
   140014b87:	lea    rcx,[rbp-0x30]
   140014b8b:	call   0x140011b94
   140014b90:	movups xmm0,XMMWORD PTR [rax]
   140014b93:	movdqu XMMWORD PTR [rdi],xmm0
   140014b97:	lea    r11,[rsp+0x60]
   140014b9c:	mov    rax,rdi
   140014b9f:	mov    rbx,QWORD PTR [r11+0x10]
   140014ba3:	mov    rsi,QWORD PTR [r11+0x18]
   140014ba7:	mov    rdi,QWORD PTR [r11+0x20]
   140014bab:	mov    rsp,r11
   140014bae:	pop    rbp
   140014baf:	ret    
   140014bb0:	rex push rbx
   140014bb2:	sub    rsp,0x20
   140014bb6:	mov    rbx,rcx
   140014bb9:	mov    rcx,QWORD PTR [rip+0x243b8]        # 0x140038f78
   140014bc0:	cmp    BYTE PTR [rcx],0x5f
   140014bc3:	jne    0x140014bfa
   140014bc5:	cmp    BYTE PTR [rcx+0x1],0x5f
   140014bc9:	jne    0x140014bfa
   140014bcb:	add    rcx,0x2
   140014bcf:	mov    QWORD PTR [rip+0x243a2],rcx        # 0x140038f78
   140014bd6:	movsx  eax,BYTE PTR [rcx]
   140014bd9:	inc    rcx
   140014bdc:	sub    eax,0x41
   140014bdf:	mov    QWORD PTR [rip+0x24392],rcx        # 0x140038f78
   140014be6:	cmp    eax,0x3
   140014be9:	jbe    0x140014bfa
   140014beb:	mov    edx,0x2
   140014bf0:	mov    rcx,rbx
   140014bf3:	call   0x140011a84
   140014bf8:	jmp    0x140014c09
   140014bfa:	and    QWORD PTR [rbx],0x0
   140014bfe:	mov    BYTE PTR [rbx+0x8],0x0
   140014c02:	and    DWORD PTR [rbx+0x8],0xffff00ff
   140014c09:	mov    rax,rbx
   140014c0c:	add    rsp,0x20
   140014c10:	pop    rbx
   140014c11:	ret    
   140014c12:	int3   
   140014c13:	int3   
   140014c14:	rex push rbx
   140014c16:	sub    rsp,0x20
   140014c1a:	mov    dl,0x1
   140014c1c:	mov    rbx,rcx
   140014c1f:	call   0x140014a54
   140014c24:	mov    rax,rbx
   140014c27:	add    rsp,0x20
   140014c2b:	pop    rbx
   140014c2c:	ret    
   140014c2d:	int3   
   140014c2e:	int3   
   140014c2f:	int3   
   140014c30:	mov    QWORD PTR [rsp+0x8],rbx
   140014c35:	mov    QWORD PTR [rsp+0x10],rsi
   140014c3a:	mov    QWORD PTR [rsp+0x18],rdi
   140014c3f:	push   rbp
   140014c40:	mov    rbp,rsp
   140014c43:	sub    rsp,0x60
   140014c47:	mov    eax,DWORD PTR [rip+0x24347]        # 0x140038f94
   140014c4d:	mov    rdi,rcx
   140014c50:	mov    r8d,eax
   140014c53:	shr    r8d,0xf
   140014c57:	not    r8d
   140014c5a:	and    r8d,0x1
   140014c5e:	je     0x140014c6d
   140014c60:	bt     eax,0xc
   140014c64:	jb     0x140014c6d
   140014c66:	mov    esi,0x1
   140014c6b:	jmp    0x140014c6f
   140014c6d:	xor    esi,esi
   140014c6f:	mov    rdx,QWORD PTR [rip+0x24302]        # 0x140038f78
   140014c76:	and    QWORD PTR [rbp-0x40],0x0
   140014c7b:	and    DWORD PTR [rbp-0x38],0xffff0000
   140014c82:	movsx  ecx,BYTE PTR [rdx]
   140014c85:	inc    rdx
   140014c88:	mov    QWORD PTR [rip+0x242e9],rdx        # 0x140038f78
   140014c8f:	test   ecx,ecx
   140014c91:	je     0x140014d5b
   140014c97:	sub    ecx,0x54
   140014c9a:	je     0x140014d12
   140014c9c:	dec    ecx
   140014c9e:	je     0x140014d09
   140014ca0:	dec    ecx
   140014ca2:	je     0x140014d00
   140014ca4:	dec    ecx
   140014ca6:	je     0x140014cc2
   140014ca8:	dec    ecx
   140014caa:	je     0x140014cb9
   140014cac:	dec    ecx
   140014cae:	jne    0x140014d22
   140014cb0:	lea    rdx,[rip+0x1a299]        # 0x14002ef50
   140014cb7:	jmp    0x140014d19
   140014cb9:	lea    rdx,[rip+0x1a280]        # 0x14002ef40
   140014cc0:	jmp    0x140014d19
   140014cc2:	lea    rcx,[rbp-0x20]
   140014cc6:	mov    esi,r8d
   140014cc9:	call   0x140014da8
   140014cce:	lea    rdx,[rip+0x1a28b]        # 0x14002ef60
   140014cd5:	lea    rcx,[rbp-0x10]
   140014cd9:	mov    rbx,rax
   140014cdc:	call   0x140011a3c
   140014ce1:	lea    rcx,[rbp-0x30]
   140014ce5:	mov    rdx,rbx
   140014ce8:	movups xmm0,XMMWORD PTR [rax]
   140014ceb:	movdqu XMMWORD PTR [rbp-0x30],xmm0
   140014cf0:	call   0x1400122b0
   140014cf5:	movaps xmm0,XMMWORD PTR [rbp-0x30]
   140014cf9:	movdqa XMMWORD PTR [rbp-0x40],xmm0
   140014cfe:	jmp    0x140014d22
   140014d00:	lea    rdx,[rip+0x1a231]        # 0x14002ef38
   140014d07:	jmp    0x140014d19
   140014d09:	lea    rdx,[rip+0x1a220]        # 0x14002ef30
   140014d10:	jmp    0x140014d19
   140014d12:	lea    rdx,[rip+0x1a20f]        # 0x14002ef28
   140014d19:	lea    rcx,[rbp-0x40]
   140014d1d:	call   0x140011e90
   140014d22:	and    QWORD PTR [rbp-0x30],0x0
   140014d27:	and    DWORD PTR [rbp-0x28],0xffff0000
   140014d2e:	test   esi,esi
   140014d30:	je     0x140014d3b
   140014d32:	movaps xmm0,XMMWORD PTR [rbp-0x40]
   140014d36:	movdqa XMMWORD PTR [rbp-0x30],xmm0
   140014d3b:	lea    rcx,[rbp-0x40]
   140014d3f:	call   0x140016ab4
   140014d44:	lea    rdx,[rbp-0x40]
   140014d48:	lea    rcx,[rbp-0x30]
   140014d4c:	call   0x1400122b0
   140014d51:	movaps xmm0,XMMWORD PTR [rbp-0x30]
   140014d55:	movdqu XMMWORD PTR [rdi],xmm0
   140014d59:	jmp    0x140014d74
   140014d5b:	dec    rdx
   140014d5e:	mov    rcx,rdi
   140014d61:	mov    QWORD PTR [rip+0x24210],rdx        # 0x140038f78
   140014d68:	lea    rdx,[rip+0x1a1aa]        # 0x14002ef19
   140014d6f:	call   0x140011a3c
   140014d74:	lea    r11,[rsp+0x60]
   140014d79:	mov    rax,rdi
   140014d7c:	mov    rbx,QWORD PTR [r11+0x10]
   140014d80:	mov    rsi,QWORD PTR [r11+0x18]
   140014d84:	mov    rdi,QWORD PTR [r11+0x20]
   140014d88:	mov    rsp,r11
   140014d8b:	pop    rbp
   140014d8c:	ret    
   140014d8d:	int3   
   140014d8e:	int3   
   140014d8f:	int3   
   140014d90:	rex push rbx
   140014d92:	sub    rsp,0x20
   140014d96:	mov    rbx,rcx
   140014d99:	call   0x140016ab4
   140014d9e:	mov    rax,rbx
   140014da1:	add    rsp,0x20
   140014da5:	pop    rbx
   140014da6:	ret    
   140014da7:	int3   
   140014da8:	mov    QWORD PTR [rsp+0x8],rbx
   140014dad:	push   rbp
   140014dae:	mov    rbp,rsp
   140014db1:	sub    rsp,0x50
   140014db5:	mov    rax,QWORD PTR [rip+0x241bc]        # 0x140038f78
   140014dbc:	and    QWORD PTR [rbp-0x30],0x0
   140014dc1:	and    DWORD PTR [rbp-0x28],0xffff0000
   140014dc8:	cmp    BYTE PTR [rax],0x0
   140014dcb:	mov    rbx,rcx
   140014dce:	je     0x140014e76
   140014dd4:	mov    al,BYTE PTR [rax]
   140014dd6:	cmp    al,0x30
   140014dd8:	jl     0x140014e6f
   140014dde:	cmp    al,0x31
   140014de0:	jle    0x140014e0f
   140014de2:	cmp    al,0x33
   140014de4:	jle    0x140014e06
   140014de6:	cmp    al,0x34
   140014de8:	je     0x140014e1f
   140014dea:	cmp    al,0x35
   140014dec:	je     0x140014dfd
   140014dee:	sub    al,0x36
   140014df0:	cmp    al,0x1
   140014df2:	ja     0x140014e6f
   140014df4:	lea    rdx,[rip+0x19ff5]        # 0x14002edf0
   140014dfb:	jmp    0x140014e16
   140014dfd:	lea    rdx,[rip+0x19fe4]        # 0x14002ede8
   140014e04:	jmp    0x140014e16
   140014e06:	lea    rdx,[rip+0x19fd3]        # 0x14002ede0
   140014e0d:	jmp    0x140014e16
   140014e0f:	lea    rdx,[rip+0x19fc2]        # 0x14002edd8
   140014e16:	lea    rcx,[rbp-0x30]
   140014e1a:	call   0x140011e90
   140014e1f:	mov    rax,QWORD PTR [rip+0x24152]        # 0x140038f78
   140014e26:	movsx  eax,BYTE PTR [rax]
   140014e29:	inc    QWORD PTR [rip+0x24148]        # 0x140038f78
   140014e30:	add    eax,0xffffffcf
   140014e33:	test   eax,0xfffffff9
   140014e38:	jne    0x140014e65
   140014e3a:	lea    rdx,[rip+0x19fb7]        # 0x14002edf8
   140014e41:	lea    rcx,[rbp-0x10]
   140014e45:	call   0x140011a3c
   140014e4a:	lea    rdx,[rbp-0x30]
   140014e4e:	lea    rcx,[rbp-0x20]
   140014e52:	movups xmm0,XMMWORD PTR [rax]
   140014e55:	movdqu XMMWORD PTR [rbp-0x20],xmm0
   140014e5a:	call   0x1400122b0
   140014e5f:	movaps xmm0,XMMWORD PTR [rbp-0x20]
   140014e63:	jmp    0x140014e69
   140014e65:	movaps xmm0,XMMWORD PTR [rbp-0x30]
   140014e69:	movdqu XMMWORD PTR [rbx],xmm0
   140014e6d:	jmp    0x140014e80
   140014e6f:	mov    edx,0x2
   140014e74:	jmp    0x140014e7b
   140014e76:	mov    edx,0x1
   140014e7b:	call   0x140011a84
   140014e80:	mov    rax,rbx
   140014e83:	mov    rbx,QWORD PTR [rsp+0x60]
   140014e88:	add    rsp,0x50
   140014e8c:	pop    rbp
   140014e8d:	ret    
   140014e8e:	int3   
   140014e8f:	int3   
   140014e90:	mov    QWORD PTR [rsp+0x8],rbx
   140014e95:	mov    QWORD PTR [rsp+0x10],rsi
   140014e9a:	mov    QWORD PTR [rsp+0x18],r14
   140014e9f:	push   rbp
   140014ea0:	mov    rbp,rsp
   140014ea3:	sub    rsp,0x60
   140014ea7:	mov    r10d,DWORD PTR [rbp-0x28]
   140014eab:	and    QWORD PTR [rbp-0x30],0x0
   140014eb0:	mov    rbx,rcx
   140014eb3:	mov    rcx,QWORD PTR [rip+0x240be]        # 0x140038f78
   140014eba:	mov    rsi,r8
   140014ebd:	and    r10d,0xffff0000
   140014ec4:	mov    r14d,0x1
   140014eca:	mov    r11d,r9d
   140014ecd:	mov    DWORD PTR [rbp-0x28],r10d
   140014ed1:	add    rcx,r14
   140014ed4:	mov    QWORD PTR [rip+0x2409d],rcx        # 0x140038f78
   140014edb:	movsx  r9d,BYTE PTR [rcx]
   140014edf:	mov    r8d,r9d
   140014ee2:	sub    r8d,0x41
   140014ee6:	je     0x140015072
   140014eec:	dec    r8d
   140014eef:	je     0x140015032
   140014ef5:	dec    r8d
   140014ef8:	je     0x140015026
   140014efe:	cmp    BYTE PTR [rcx],0x0
   140014f01:	je     0x14001501e
   140014f07:	mov    al,BYTE PTR [rcx+0x1]
   140014f0a:	test   al,al
   140014f0c:	je     0x14001501e
   140014f12:	test   r11d,r11d
   140014f15:	je     0x140014f29
   140014f17:	mov    edx,0x2
   140014f1c:	mov    rcx,rbx
   140014f1f:	call   0x140011a84
   140014f24:	jmp    0x1400150c2
   140014f29:	shl    r9d,0x4
   140014f2d:	add    rcx,0x2
   140014f31:	movsx  esi,al
   140014f34:	add    esi,0xfffffcd0
   140014f3a:	mov    QWORD PTR [rip+0x24037],rcx        # 0x140038f78
   140014f41:	add    esi,r9d
   140014f44:	cmp    esi,r14d
   140014f47:	jbe    0x140014f9a
   140014f49:	and    QWORD PTR [rbp-0x30],0x0
   140014f4e:	and    r10d,0xffffff00
   140014f55:	lea    rdx,[rbp-0x40]
   140014f59:	and    r10d,0xffff00ff
   140014f60:	lea    rcx,[rbp-0x30]
   140014f64:	mov    r8d,r14d
   140014f67:	mov    DWORD PTR [rbp-0x28],r10d
   140014f6b:	mov    BYTE PTR [rbp-0x40],0x2c
   140014f6f:	call   0x140013448
   140014f74:	lea    rcx,[rbp-0x10]
   140014f78:	mov    edx,esi
   140014f7a:	call   0x140011b94
   140014f7f:	lea    rcx,[rbp-0x20]
   140014f83:	movaps xmm0,XMMWORD PTR [rbp-0x30]
   140014f87:	mov    rdx,rax
   140014f8a:	movdqa XMMWORD PTR [rbp-0x20],xmm0
   140014f8f:	call   0x1400122b0
   140014f94:	movaps xmm0,XMMWORD PTR [rbp-0x20]
   140014f98:	jmp    0x140014f9e
   140014f9a:	movaps xmm0,XMMWORD PTR [rbp-0x30]
   140014f9e:	lea    rcx,[rbp-0x20]
   140014fa2:	mov    dl,0x3e
   140014fa4:	movdqa XMMWORD PTR [rbp-0x20],xmm0
   140014fa9:	call   0x1400122f0
   140014fae:	mov    rax,QWORD PTR [rip+0x23fc3]        # 0x140038f78
   140014fb5:	movaps xmm0,XMMWORD PTR [rbp-0x20]
   140014fb9:	cmp    BYTE PTR [rax],0x24
   140014fbc:	movdqa XMMWORD PTR [rbp-0x30],xmm0
   140014fc1:	jne    0x140014fcf
   140014fc3:	add    rax,r14
   140014fc6:	mov    QWORD PTR [rip+0x23fab],rax        # 0x140038f78
   140014fcd:	jmp    0x140014fef
   140014fcf:	lea    rcx,[rbp-0x20]
   140014fd3:	mov    dl,0x5e
   140014fd5:	movdqa XMMWORD PTR [rbp-0x20],xmm0
   140014fda:	call   0x1400122f0
   140014fdf:	mov    rax,QWORD PTR [rip+0x23f92]        # 0x140038f78
   140014fe6:	movaps xmm0,XMMWORD PTR [rbp-0x20]
   140014fea:	movdqa XMMWORD PTR [rbp-0x30],xmm0
   140014fef:	cmp    BYTE PTR [rax],0x0
   140014ff2:	je     0x140015000
   140014ff4:	add    rax,r14
   140014ff7:	mov    QWORD PTR [rip+0x23f7a],rax        # 0x140038f78
   140014ffe:	jmp    0x14001500c
   140015000:	lea    rcx,[rbp-0x30]
   140015004:	mov    edx,r14d
   140015007:	call   0x140012498
   14001500c:	bts    DWORD PTR [rbp-0x28],0xe
   140015011:	movaps xmm0,XMMWORD PTR [rbp-0x30]
   140015015:	movdqu XMMWORD PTR [rbx],xmm0
   140015019:	jmp    0x1400150c2
   14001501e:	mov    edx,r14d
   140015021:	jmp    0x140014f1c
   140015026:	lea    rax,[rip+0x196a3]        # 0x14002e6d0
   14001502d:	mov    QWORD PTR [rdx],rax
   140015030:	jmp    0x140015069
   140015032:	test   r11d,r11d
   140015035:	jne    0x140014f17
   14001503b:	and    QWORD PTR [rbp-0x30],0x0
   140015040:	and    r10d,0xffffff00
   140015047:	lea    rdx,[rbp-0x40]
   14001504b:	and    r10d,0xffff00ff
   140015052:	lea    rcx,[rbp-0x30]
   140015056:	mov    r8d,r14d
   140015059:	mov    BYTE PTR [rsi],r14b
   14001505c:	mov    BYTE PTR [rbp-0x40],0x3e
   140015060:	mov    DWORD PTR [rbp-0x28],r10d
   140015064:	call   0x140013448
   140015069:	add    QWORD PTR [rip+0x23f08],r14        # 0x140038f78
   140015070:	jmp    0x1400150b3
   140015072:	test   r11d,r11d
   140015075:	jne    0x1400150a9
   140015077:	mov    rax,QWORD PTR [rdx]
   14001507a:	cmp    BYTE PTR [rax],0x26
   14001507d:	jne    0x140015090
   14001507f:	lea    rax,[rip+0x1964a]        # 0x14002e6d0
   140015086:	mov    QWORD PTR [rdx],rax
   140015089:	mov    rcx,QWORD PTR [rip+0x23ee8]        # 0x140038f78
   140015090:	mov    rax,QWORD PTR [rdx]
   140015093:	cmp    BYTE PTR [rax],0x2a
   140015096:	jne    0x1400150a9
   140015098:	lea    rax,[rip+0x19651]        # 0x14002e6f0
   14001509f:	mov    QWORD PTR [rdx],rax
   1400150a2:	mov    rcx,QWORD PTR [rip+0x23ecf]        # 0x140038f78
   1400150a9:	add    rcx,r14
   1400150ac:	mov    QWORD PTR [rip+0x23ec5],rcx        # 0x140038f78
   1400150b3:	and    QWORD PTR [rbx],0x0
   1400150b7:	mov    BYTE PTR [rbx+0x8],0x0
   1400150bb:	and    DWORD PTR [rbx+0x8],0xffff00ff
   1400150c2:	lea    r11,[rsp+0x60]
   1400150c7:	mov    rax,rbx
   1400150ca:	mov    rbx,QWORD PTR [r11+0x10]
   1400150ce:	mov    rsi,QWORD PTR [r11+0x18]
   1400150d2:	mov    r14,QWORD PTR [r11+0x20]
   1400150d6:	mov    rsp,r11
   1400150d9:	pop    rbp
   1400150da:	ret    
   1400150db:	int3   
   1400150dc:	mov    QWORD PTR [rsp+0x8],rbx
   1400150e1:	mov    QWORD PTR [rsp+0x10],rsi
   1400150e6:	mov    QWORD PTR [rsp+0x18],rdi
   1400150eb:	push   rbp
   1400150ec:	mov    rbp,rsp
   1400150ef:	sub    rsp,0x60
   1400150f3:	xor    r8d,r8d
   1400150f6:	mov    rsi,rdx
   1400150f9:	mov    rdi,rcx
   1400150fc:	lea    edx,[r8+0x10]
   140015100:	lea    rcx,[rip+0x23e99]        # 0x140038fa0
   140015107:	call   0x1400157b8
   14001510c:	mov    rbx,rax
   14001510f:	test   rax,rax
   140015112:	je     0x140015125
   140015114:	and    QWORD PTR [rax],0x0
   140015118:	mov    BYTE PTR [rax+0x8],0x0
   14001511c:	and    DWORD PTR [rax+0x8],0xffff00ff
   140015123:	jmp    0x140015127
   140015125:	xor    ebx,ebx
   140015127:	mov    rdx,rbx
   14001512a:	mov    rcx,rdi
   14001512d:	call   0x1400146fc
   140015132:	and    QWORD PTR [rbp-0x30],0x0
   140015137:	and    QWORD PTR [rbp-0x20],0x0
   14001513c:	and    DWORD PTR [rsp+0x20],0x0
   140015141:	mov    eax,0xffff0000
   140015146:	lea    r9,[rbp-0x30]
   14001514a:	and    DWORD PTR [rbp-0x28],eax
   14001514d:	and    DWORD PTR [rbp-0x18],eax
   140015150:	lea    r8,[rip+0x158f9]        # 0x14002aa50
   140015157:	lea    rdx,[rbp-0x20]
   14001515b:	lea    rcx,[rbp-0x10]
   14001515f:	call   0x140013fc0
   140015164:	lea    rcx,[rbp-0x20]
   140015168:	mov    dl,0x20
   14001516a:	movaps xmm0,XMMWORD PTR [rbp-0x10]
   14001516e:	movdqa XMMWORD PTR [rbp-0x20],xmm0
   140015173:	call   0x1400122f0
   140015178:	lea    rcx,[rbp-0x20]
   14001517c:	mov    rdx,rsi
   14001517f:	movaps xmm0,XMMWORD PTR [rbp-0x20]
   140015183:	movdqa XMMWORD PTR [rbp-0x20],xmm0
   140015188:	call   0x1400122b0
   14001518d:	lea    r11,[rsp+0x60]
   140015192:	mov    rax,rdi
   140015195:	movaps xmm0,XMMWORD PTR [rbp-0x20]
   140015199:	movdqu XMMWORD PTR [rbx],xmm0
   14001519d:	mov    rbx,QWORD PTR [r11+0x10]
   1400151a1:	mov    rsi,QWORD PTR [r11+0x18]
   1400151a5:	mov    rdi,QWORD PTR [r11+0x20]
   1400151a9:	mov    rsp,r11
   1400151ac:	pop    rbp
   1400151ad:	ret    
   1400151ae:	int3   
   1400151af:	int3   
   1400151b0:	mov    rax,rsp
   1400151b3:	mov    QWORD PTR [rax+0x8],rbx
   1400151b7:	mov    QWORD PTR [rax+0x10],rsi
   1400151bb:	mov    QWORD PTR [rax+0x18],rdi
   1400151bf:	push   rbp
   1400151c0:	push   r12
   1400151c2:	push   r13
   1400151c4:	push   r14
   1400151c6:	push   r15
   1400151c8:	lea    rbp,[rax-0x5f]
   1400151cc:	sub    rsp,0x90
   1400151d3:	mov    rdi,rcx
   1400151d6:	mov    rcx,QWORD PTR [rip+0x23d9b]        # 0x140038f78
   1400151dd:	xor    ebx,ebx
   1400151df:	mov    r12,rdx
   1400151e2:	cmp    BYTE PTR [rcx],bl
   1400151e4:	jne    0x140015209
   1400151e6:	lea    edx,[rbx+0x1]
   1400151e9:	lea    rcx,[rbp+0x17]
   1400151ed:	call   0x140011a84
   1400151f2:	mov    rdx,r12
   1400151f5:	movups xmm0,XMMWORD PTR [rax]
   1400151f8:	mov    rcx,rdi
   1400151fb:	movdqu XMMWORD PTR [rdi],xmm0
   1400151ff:	call   0x1400122b0
   140015204:	jmp    0x140015692
   140015209:	mov    al,BYTE PTR [rcx]
   14001520b:	sub    al,0x36
   14001520d:	cmp    al,0x3
   14001520f:	jbe    0x140015220
   140015211:	cmp    BYTE PTR [rcx],0x5f
   140015214:	je     0x140015220
   140015216:	mov    edx,0x2
   14001521b:	jmp    0x14001568a
   140015220:	movsx  r14d,BYTE PTR [rcx]
   140015224:	mov    esi,0x1
   140015229:	or     edx,0xffffffff
   14001522c:	add    rcx,rsi
   14001522f:	sub    r14d,0x36
   140015233:	mov    QWORD PTR [rip+0x23d3e],rcx        # 0x140038f78
   14001523a:	cmp    r14d,0x29
   14001523e:	jne    0x140015268
   140015240:	cmp    BYTE PTR [rcx],bl
   140015242:	je     0x140015264
   140015244:	movsx  r14d,BYTE PTR [rcx]
   140015248:	add    rcx,rsi
   14001524b:	sub    r14d,0x3d
   14001524f:	mov    QWORD PTR [rip+0x23d22],rcx        # 0x140038f78
   140015256:	lea    eax,[r14-0x4]
   14001525a:	cmp    eax,0x3
   14001525d:	jbe    0x140015270
   14001525f:	mov    r14d,edx
   140015262:	jmp    0x140015270
   140015264:	mov    edx,esi
   140015266:	jmp    0x1400151e9
   140015268:	cmp    r14d,0x3
   14001526c:	cmova  r14d,edx
   140015270:	cmp    r14d,edx
   140015273:	je     0x140015216
   140015275:	mov    r15d,DWORD PTR [rbp-0x11]
   140015279:	movups xmm0,XMMWORD PTR [r12]
   14001527e:	mov    r13d,r14d
   140015281:	and    r15d,0xffff0000
   140015288:	mov    QWORD PTR [rbp-0x19],rbx
   14001528c:	mov    DWORD PTR [rbp-0x11],r15d
   140015290:	movdqu XMMWORD PTR [rbp-0x29],xmm0
   140015295:	and    r13d,0x2
   140015299:	je     0x1400153ad
   14001529f:	lea    rdx,[rip+0x1995e]        # 0x14002ec04
   1400152a6:	lea    rcx,[rbp+0x17]
   1400152aa:	call   0x140011a3c
   1400152af:	lea    rdx,[rbp-0x29]
   1400152b3:	lea    rcx,[rbp+0x7]
   1400152b7:	movups xmm0,XMMWORD PTR [rax]
   1400152ba:	movdqu XMMWORD PTR [rbp+0x7],xmm0
   1400152bf:	call   0x1400122b0
   1400152c4:	mov    rax,QWORD PTR [rip+0x23cad]        # 0x140038f78
   1400152cb:	movaps xmm0,XMMWORD PTR [rbp+0x7]
   1400152cf:	lea    rcx,[rbp+0x17]
   1400152d3:	movdqa XMMWORD PTR [rbp-0x29],xmm0
   1400152d8:	cmp    BYTE PTR [rax],bl
   1400152da:	je     0x14001531d
   1400152dc:	call   0x1400165c0
   1400152e1:	lea    rcx,[rbp-0x9]
   1400152e5:	mov    dl,0x20
   1400152e7:	mov    rbx,rax
   1400152ea:	call   0x14001197c
   1400152ef:	lea    rcx,[rbp+0x7]
   1400152f3:	mov    rdx,rbx
   1400152f6:	movups xmm0,XMMWORD PTR [rax]
   1400152f9:	movdqu XMMWORD PTR [rbp+0x7],xmm0
   1400152fe:	call   0x1400122b0
   140015303:	movaps xmm0,XMMWORD PTR [rbp+0x7]
   140015307:	lea    rdx,[rbp-0x29]
   14001530b:	lea    rcx,[rbp+0x7]
   14001530f:	movdqa XMMWORD PTR [rbp+0x7],xmm0
   140015314:	call   0x1400122b0
   140015319:	xor    ebx,ebx
   14001531b:	jmp    0x140015339
   14001531d:	mov    edx,esi
   14001531f:	call   0x140011a84
   140015324:	lea    rdx,[rbp-0x29]
   140015328:	lea    rcx,[rbp+0x7]
   14001532c:	movups xmm0,XMMWORD PTR [rax]
   14001532f:	movdqu XMMWORD PTR [rbp+0x7],xmm0
   140015334:	call   0x1400122b0
   140015339:	mov    rax,QWORD PTR [rip+0x23c38]        # 0x140038f78
   140015340:	movaps xmm0,XMMWORD PTR [rbp+0x7]
   140015344:	movdqa XMMWORD PTR [rbp-0x29],xmm0
   140015349:	cmp    BYTE PTR [rax],bl
   14001534b:	je     0x140015456
   140015351:	cmp    BYTE PTR [rax],0x40
   140015354:	jne    0x140015216
   14001535a:	add    rax,rsi
   14001535d:	mov    QWORD PTR [rbp-0x9],rbx
   140015361:	mov    QWORD PTR [rbp+0x7],rbx
   140015365:	mov    QWORD PTR [rip+0x23c0c],rax        # 0x140038f78
   14001536c:	mov    eax,DWORD PTR [rip+0x23c22]        # 0x140038f94
   140015372:	mov    DWORD PTR [rsp+0x20],esi
   140015376:	and    eax,0x60
   140015379:	lea    r8,[rip+0x156d0]        # 0x14002aa50
   140015380:	lea    rcx,[rbp+0x17]
   140015384:	cmp    al,0x60
   140015386:	mov    eax,0xffff0000
   14001538b:	je     0x140015418
   140015391:	and    DWORD PTR [rbp-0x1],eax
   140015394:	and    DWORD PTR [rbp+0xf],eax
   140015397:	lea    r9,[rbp-0x9]
   14001539b:	lea    rdx,[rbp+0x7]
   14001539f:	call   0x140013fc0
   1400153a4:	movaps xmm0,XMMWORD PTR [rbp+0x17]
   1400153a8:	movdqa XMMWORD PTR [rbp-0x19],xmm0
   1400153ad:	test   r14b,0x4
   1400153b1:	je     0x140015491
   1400153b7:	mov    eax,DWORD PTR [rip+0x23bd7]        # 0x140038f94
   1400153bd:	shr    eax,1
   1400153bf:	not    eax
   1400153c1:	test   sil,al
   1400153c4:	je     0x14001546a
   1400153ca:	lea    rcx,[rbp+0x7]
   1400153ce:	call   0x1400139d4
   1400153d3:	lea    rcx,[rbp-0x9]
   1400153d7:	mov    dl,0x20
   1400153d9:	mov    rbx,rax
   1400153dc:	call   0x14001197c
   1400153e1:	lea    rcx,[rbp+0x17]
   1400153e5:	mov    rdx,rbx
   1400153e8:	movups xmm0,XMMWORD PTR [rax]
   1400153eb:	movdqu XMMWORD PTR [rbp+0x17],xmm0
   1400153f0:	call   0x1400122b0
   1400153f5:	movaps xmm0,XMMWORD PTR [rbp+0x17]
   1400153f9:	lea    rdx,[rbp-0x29]
   1400153fd:	lea    rcx,[rbp+0x17]
   140015401:	movdqa XMMWORD PTR [rbp+0x17],xmm0
   140015406:	call   0x1400122b0
   14001540b:	xor    ebx,ebx
   14001540d:	movaps xmm0,XMMWORD PTR [rbp+0x17]
   140015411:	movdqa XMMWORD PTR [rbp-0x29],xmm0
   140015416:	jmp    0x140015491
   140015418:	and    DWORD PTR [rbp+0xf],eax
   14001541b:	and    DWORD PTR [rbp-0x1],eax
   14001541e:	lea    r9,[rbp+0x7]
   140015422:	lea    rdx,[rbp-0x9]
   140015426:	call   0x140013fc0
   14001542b:	cmp    BYTE PTR [rbp-0x11],0x3
   14001542f:	je     0x1400153ad
   140015435:	cmp    BYTE PTR [rbp+0x1f],sil
   140015439:	jle    0x1400153ad
   14001543f:	movzx  eax,BYTE PTR [rbp+0x1f]
   140015443:	and    r15d,0xffffff00
   14001544a:	or     r15d,eax
   14001544d:	mov    DWORD PTR [rbp-0x11],r15d
   140015451:	jmp    0x1400153ad
   140015456:	lea    rcx,[rbp+0x17]
   14001545a:	mov    edx,esi
   14001545c:	call   0x140011a84
   140015461:	lea    rdx,[rbp-0x29]
   140015465:	jmp    0x1400151f5
   14001546a:	lea    rcx,[rbp+0x17]
   14001546e:	call   0x1400139d4
   140015473:	cmp    BYTE PTR [rbp-0x21],0x3
   140015477:	je     0x140015491
   140015479:	cmp    BYTE PTR [rax+0x8],sil
   14001547d:	jle    0x140015491
   14001547f:	mov    ecx,DWORD PTR [rbp-0x21]
   140015482:	movzx  eax,BYTE PTR [rax+0x8]
   140015486:	and    ecx,0xffffff00
   14001548c:	or     ecx,eax
   14001548e:	mov    DWORD PTR [rbp-0x21],ecx
   140015491:	mov    eax,DWORD PTR [rip+0x23afd]        # 0x140038f94
   140015497:	shr    eax,1
   140015499:	not    eax
   14001549b:	test   sil,al
   14001549e:	je     0x1400154c9
   1400154a0:	lea    rcx,[rbp+0x7]
   1400154a4:	call   0x140013ec0
   1400154a9:	lea    rdx,[rbp-0x29]
   1400154ad:	lea    rcx,[rbp+0x17]
   1400154b1:	movups xmm0,XMMWORD PTR [rax]
   1400154b4:	movdqu XMMWORD PTR [rbp+0x17],xmm0
   1400154b9:	call   0x1400122b0
   1400154be:	movaps xmm0,XMMWORD PTR [rbp+0x17]
   1400154c2:	movdqa XMMWORD PTR [rbp-0x29],xmm0
   1400154c7:	jmp    0x1400154f0
   1400154c9:	lea    rcx,[rbp+0x17]
   1400154cd:	call   0x140013ec0
   1400154d2:	cmp    BYTE PTR [rbp-0x21],0x3
   1400154d6:	je     0x1400154f0
   1400154d8:	cmp    BYTE PTR [rax+0x8],sil
   1400154dc:	jle    0x1400154f0
   1400154de:	mov    ecx,DWORD PTR [rbp-0x21]
   1400154e1:	movzx  eax,BYTE PTR [rax+0x8]
   1400154e5:	and    ecx,0xffffff00
   1400154eb:	or     ecx,eax
   1400154ed:	mov    DWORD PTR [rbp-0x21],ecx
   1400154f0:	cmp    QWORD PTR [r12],rbx
   1400154f4:	je     0x140015533
   1400154f6:	lea    rcx,[rbp+0x7]
   1400154fa:	mov    dl,0x28
   1400154fc:	call   0x14001197c
   140015501:	lea    rdx,[rbp-0x29]
   140015505:	lea    rcx,[rbp+0x17]
   140015509:	movups xmm0,XMMWORD PTR [rax]
   14001550c:	movdqu XMMWORD PTR [rbp+0x17],xmm0
   140015511:	call   0x1400122b0
   140015516:	movaps xmm0,XMMWORD PTR [rbp+0x17]
   14001551a:	lea    rcx,[rbp+0x17]
   14001551e:	mov    dl,0x29
   140015520:	movdqa XMMWORD PTR [rbp+0x17],xmm0
   140015525:	call   0x1400122f0
   14001552a:	movaps xmm0,XMMWORD PTR [rbp+0x17]
   14001552e:	movdqa XMMWORD PTR [rbp-0x29],xmm0
   140015533:	xor    r8d,r8d
   140015536:	lea    rcx,[rip+0x23a63]        # 0x140038fa0
   14001553d:	lea    edx,[r8+0x10]
   140015541:	call   0x1400157b8
   140015546:	mov    r14,rax
   140015549:	test   rax,rax
   14001554c:	je     0x14001555d
   14001554e:	mov    BYTE PTR [rax+0x8],bl
   140015551:	and    DWORD PTR [rax+0x8],0xffff00ff
   140015558:	mov    QWORD PTR [rax],rbx
   14001555b:	jmp    0x140015560
   14001555d:	mov    r14,rbx
   140015560:	lea    rcx,[rbp+0x27]
   140015564:	mov    rdx,r14
   140015567:	call   0x14001658c
   14001556c:	lea    rcx,[rbp+0x7]
   140015570:	call   0x140013694
   140015575:	lea    rcx,[rbp-0x9]
   140015579:	mov    dl,0x28
   14001557b:	mov    rbx,rax
   14001557e:	call   0x14001197c
   140015583:	lea    rcx,[rbp+0x17]
   140015587:	mov    rdx,rbx
   14001558a:	movups xmm0,XMMWORD PTR [rax]
   14001558d:	movdqu XMMWORD PTR [rbp+0x17],xmm0
   140015592:	call   0x1400122b0
   140015597:	movaps xmm0,XMMWORD PTR [rbp+0x17]
   14001559b:	lea    rcx,[rbp+0x17]
   14001559f:	mov    dl,0x29
   1400155a1:	movdqa XMMWORD PTR [rbp+0x17],xmm0
   1400155a6:	call   0x1400122f0
   1400155ab:	lea    rdx,[rbp+0x17]
   1400155af:	lea    rcx,[rbp-0x29]
   1400155b3:	call   0x1400122b0
   1400155b8:	mov    ecx,DWORD PTR [rip+0x239d6]        # 0x140038f94
   1400155be:	mov    eax,ecx
   1400155c0:	and    eax,0x60
   1400155c3:	cmp    al,0x60
   1400155c5:	je     0x1400155df
   1400155c7:	test   r13d,r13d
   1400155ca:	je     0x1400155df
   1400155cc:	lea    rdx,[rbp-0x19]
   1400155d0:	lea    rcx,[rbp-0x29]
   1400155d4:	call   0x1400122b0
   1400155d9:	mov    ecx,DWORD PTR [rip+0x239b5]        # 0x140038f94
   1400155df:	shr    ecx,0x13
   1400155e2:	not    ecx
   1400155e4:	test   sil,cl
   1400155e7:	lea    rcx,[rbp+0x17]
   1400155eb:	je     0x140015600
   1400155ed:	call   0x140016464
   1400155f2:	lea    rcx,[rbp-0x29]
   1400155f6:	mov    rdx,rax
   1400155f9:	call   0x1400122b0
   1400155fe:	jmp    0x140015623
   140015600:	call   0x140016464
   140015605:	cmp    BYTE PTR [rbp-0x21],0x3
   140015609:	je     0x140015623
   14001560b:	cmp    BYTE PTR [rax+0x8],sil
   14001560f:	jle    0x140015623
   140015611:	mov    ecx,DWORD PTR [rbp-0x21]
   140015614:	movzx  eax,BYTE PTR [rax+0x8]
   140015618:	and    ecx,0xffffff00
   14001561e:	or     ecx,eax
   140015620:	mov    DWORD PTR [rbp-0x21],ecx
   140015623:	mov    eax,DWORD PTR [rip+0x2396b]        # 0x140038f94
   140015629:	lea    rcx,[rbp+0x17]
   14001562d:	shr    eax,0x8
   140015630:	not    eax
   140015632:	test   sil,al
   140015635:	je     0x14001564a
   140015637:	call   0x1400177d8
   14001563c:	lea    rcx,[rbp-0x29]
   140015640:	mov    rdx,rax
   140015643:	call   0x1400122b0
   140015648:	jmp    0x14001566d
   14001564a:	call   0x1400177d8
   14001564f:	cmp    BYTE PTR [rbp-0x21],0x3
   140015653:	je     0x14001566d
   140015655:	cmp    BYTE PTR [rax+0x8],sil
   140015659:	jle    0x14001566d
   14001565b:	mov    ecx,DWORD PTR [rbp-0x21]
   14001565e:	movzx  eax,BYTE PTR [rax+0x8]
   140015662:	and    ecx,0xffffff00
   140015668:	or     ecx,eax
   14001566a:	mov    DWORD PTR [rbp-0x21],ecx
   14001566d:	test   r14,r14
   140015670:	je     0x140015685
   140015672:	movaps xmm0,XMMWORD PTR [rbp-0x29]
   140015676:	movdqu XMMWORD PTR [r14],xmm0
   14001567b:	movups xmm1,XMMWORD PTR [rbp+0x27]
   14001567f:	movdqu XMMWORD PTR [rdi],xmm1
   140015683:	jmp    0x140015692
   140015685:	mov    edx,0x3
   14001568a:	mov    rcx,rdi
   14001568d:	call   0x140011a84
   140015692:	lea    r11,[rsp+0x90]
   14001569a:	mov    rax,rdi
   14001569d:	mov    rbx,QWORD PTR [r11+0x30]
   1400156a1:	mov    rsi,QWORD PTR [r11+0x38]
   1400156a5:	mov    rdi,QWORD PTR [r11+0x40]
   1400156a9:	mov    rsp,r11
   1400156ac:	pop    r15
   1400156ae:	pop    r14
   1400156b0:	pop    r13
   1400156b2:	pop    r12
   1400156b4:	pop    rbp
   1400156b5:	ret    
   1400156b6:	int3   
   1400156b7:	int3   
   1400156b8:	rex push rbx
   1400156ba:	sub    rsp,0x20
   1400156be:	xor    edx,edx
   1400156c0:	mov    rbx,rcx
   1400156c3:	call   0x140014a54
   1400156c8:	mov    rax,rbx
   1400156cb:	add    rsp,0x20
   1400156cf:	pop    rbx
   1400156d0:	ret    
   1400156d1:	int3   
   1400156d2:	int3   
   1400156d3:	int3   
   1400156d4:	mov    rcx,QWORD PTR [rcx]
   1400156d7:	test   rcx,rcx
   1400156da:	jne    0x1400156df
   1400156dc:	xor    al,al
   1400156de:	ret    
   1400156df:	mov    rax,QWORD PTR [rcx]
   1400156e2:	rex.W jmp QWORD PTR [rax+0x8]
   1400156e6:	int3   
   1400156e7:	int3   
   1400156e8:	cmp    DWORD PTR [rcx+0x8],0x1
   1400156ec:	setne  al
   1400156ef:	dec    al
   1400156f1:	and    al,0x20
   1400156f3:	ret    
   1400156f4:	mov    al,BYTE PTR [rcx+0x8]
   1400156f7:	ret    
   1400156f8:	sub    rsp,0x28
   1400156fc:	mov    rcx,QWORD PTR [rcx+0x8]
   140015700:	xor    eax,eax
   140015702:	test   rcx,rcx
   140015705:	je     0x140015715
   140015707:	mov    rcx,QWORD PTR [rcx]
   14001570a:	test   rcx,rcx
   14001570d:	je     0x140015715
   14001570f:	mov    rax,QWORD PTR [rcx]
   140015712:	call   QWORD PTR [rax+0x8]
   140015715:	add    rsp,0x28
   140015719:	ret    
   14001571a:	int3   
   14001571b:	int3   
   14001571c:	rex push rbx
   14001571e:	sub    rsp,0x20
   140015722:	mov    rbx,rcx
   140015725:	mov    rcx,QWORD PTR [rcx+0x10]
   140015729:	mov    rax,QWORD PTR [rcx]
   14001572c:	call   QWORD PTR [rax+0x8]
   14001572f:	test   al,al
   140015731:	jne    0x14001573d
   140015733:	mov    rcx,QWORD PTR [rbx+0x8]
   140015737:	mov    rax,QWORD PTR [rcx]
   14001573a:	call   QWORD PTR [rax+0x8]
   14001573d:	add    rsp,0x20
   140015741:	pop    rbx
   140015742:	ret    
   140015743:	int3   
   140015744:	xor    eax,eax
   140015746:	cmp    DWORD PTR [rcx+0x10],eax
   140015749:	je     0x140015757
   14001574b:	movsxd rdx,DWORD PTR [rcx+0x10]
   14001574f:	mov    rax,QWORD PTR [rcx+0x8]
   140015753:	mov    al,BYTE PTR [rax+rdx*1-0x1]
   140015757:	ret    
   140015758:	mov    QWORD PTR [rsp+0x8],rbx
   14001575d:	push   rdi
   14001575e:	sub    rsp,0x50
   140015762:	mov    rdi,rcx
   140015765:	lea    rcx,[rsp+0x30]
   14001576a:	xor    edx,edx
   14001576c:	call   0x140014a54
   140015771:	lea    rcx,[rsp+0x40]
   140015776:	mov    dl,0x60
   140015778:	mov    rbx,rax
   14001577b:	call   0x14001197c
   140015780:	lea    rcx,[rsp+0x20]
   140015785:	mov    rdx,rbx
   140015788:	movups xmm0,XMMWORD PTR [rax]
   14001578b:	movdqu XMMWORD PTR [rsp+0x20],xmm0
   140015791:	call   0x1400122b0
   140015796:	movups xmm0,XMMWORD PTR [rsp+0x20]
   14001579b:	mov    dl,0x27
   14001579d:	mov    rcx,rdi
   1400157a0:	movdqu XMMWORD PTR [rdi],xmm0
   1400157a4:	call   0x1400122f0
   1400157a9:	mov    rbx,QWORD PTR [rsp+0x60]
   1400157ae:	mov    rax,rdi
   1400157b1:	add    rsp,0x50
   1400157b5:	pop    rdi
   1400157b6:	ret    
   1400157b7:	int3   
   1400157b8:	mov    QWORD PTR [rsp+0x8],rbx
   1400157bd:	mov    QWORD PTR [rsp+0x10],rsi
   1400157c2:	push   rdi
   1400157c3:	sub    rsp,0x20
   1400157c7:	lea    rdi,[rdx+0x7]
   1400157cb:	mov    rbx,rcx
   1400157ce:	and    rdi,0xfffffffffffffff8
   1400157d2:	test   r8d,r8d
   1400157d5:	je     0x1400157de
   1400157d7:	mov    rcx,rdi
   1400157da:	call   QWORD PTR [rbx]
   1400157dc:	jmp    0x140015858
   1400157de:	mov    eax,0x8
   1400157e3:	test   rdi,rdi
   1400157e6:	cmove  rdi,rax
   1400157ea:	mov    rax,QWORD PTR [rcx+0x20]
   1400157ee:	cmp    rax,rdi
   1400157f1:	jae    0x140015845
   1400157f3:	mov    esi,0x1000
   1400157f8:	cmp    rdi,rsi
   1400157fb:	jbe    0x140015801
   1400157fd:	xor    eax,eax
   1400157ff:	jmp    0x140015858
   140015801:	lea    rcx,[rip+0x23798]        # 0x140038fa0
   140015808:	mov    edx,0x1008
   14001580d:	mov    r8d,0x1
   140015813:	call   0x1400157b8
   140015818:	test   rax,rax
   14001581b:	je     0x140015821
   14001581d:	and    QWORD PTR [rax],0x0
   140015821:	test   rax,rax
   140015824:	je     0x1400157fd
   140015826:	mov    rcx,QWORD PTR [rbx+0x18]
   14001582a:	test   rcx,rcx
   14001582d:	je     0x140015834
   14001582f:	mov    QWORD PTR [rcx],rax
   140015832:	jmp    0x140015838
   140015834:	mov    QWORD PTR [rbx+0x10],rax
   140015838:	sub    rsi,rdi
   14001583b:	mov    QWORD PTR [rbx+0x18],rax
   14001583f:	mov    QWORD PTR [rbx+0x20],rsi
   140015843:	jmp    0x14001584c
   140015845:	sub    rax,rdi
   140015848:	mov    QWORD PTR [rcx+0x20],rax
   14001584c:	mov    rax,QWORD PTR [rbx+0x20]
   140015850:	add    rax,0x8
   140015854:	add    rax,QWORD PTR [rbx+0x18]
   140015858:	mov    rbx,QWORD PTR [rsp+0x30]
   14001585d:	mov    rsi,QWORD PTR [rsp+0x38]
   140015862:	add    rsp,0x20
   140015866:	pop    rdi
   140015867:	ret    
   140015868:	mov    rcx,QWORD PTR [rip+0x23709]        # 0x140038f78
   14001586f:	mov    dl,BYTE PTR [rcx]
   140015871:	test   dl,dl
   140015873:	jne    0x140015878
   140015875:	xor    eax,eax
   140015877:	ret    
   140015878:	lea    eax,[rdx-0x30]
   14001587b:	cmp    al,0x9
   14001587d:	ja     0x140015890
   14001587f:	movsx  eax,dl
   140015882:	sub    eax,0x2f
   140015885:	inc    rcx
   140015888:	mov    QWORD PTR [rip+0x236e9],rcx        # 0x140038f78
   14001588f:	ret    
   140015890:	xor    r8d,r8d
   140015893:	mov    r9b,0x40
   140015896:	jmp    0x1400158bd
   140015898:	test   dl,dl
   14001589a:	je     0x140015875
   14001589c:	lea    eax,[rdx-0x41]
   14001589f:	cmp    al,0xf
   1400158a1:	ja     0x1400158d7
   1400158a3:	shl    r8d,0x4
   1400158a7:	movsx  eax,dl
   1400158aa:	add    r8d,0xffffffbf
   1400158ae:	add    r8d,eax
   1400158b1:	inc    rcx
   1400158b4:	mov    QWORD PTR [rip+0x236bd],rcx        # 0x140038f78
   1400158bb:	mov    dl,BYTE PTR [rcx]
   1400158bd:	cmp    dl,r9b
   1400158c0:	jne    0x140015898
   1400158c2:	mov    al,BYTE PTR [rcx]
   1400158c4:	inc    rcx
   1400158c7:	mov    QWORD PTR [rip+0x236aa],rcx        # 0x140038f78
   1400158ce:	cmp    al,r9b
   1400158d1:	jne    0x1400158d7
   1400158d3:	mov    eax,r8d
   1400158d6:	ret    
   1400158d7:	or     eax,0xffffffff
   1400158da:	ret    
   1400158db:	int3   
   1400158dc:	mov    rax,rsp
   1400158df:	mov    QWORD PTR [rax+0x8],rbx
   1400158e3:	mov    QWORD PTR [rax+0x10],rsi
   1400158e7:	mov    QWORD PTR [rax+0x20],rdi
   1400158eb:	mov    QWORD PTR [rax+0x18],r8
   1400158ef:	push   rbp
   1400158f0:	lea    rbp,[rax-0x5f]
   1400158f4:	sub    rsp,0xf0
   1400158fb:	mov    rbx,QWORD PTR [rip+0x23676]        # 0x140038f78
   140015902:	and    QWORD PTR [rbp-0x69],0x0
   140015907:	and    QWORD PTR [rbp-0x79],0x0
   14001590c:	movsx  eax,BYTE PTR [rbx]
   14001590f:	xor    esi,esi
   140015911:	mov    rdi,rcx
   140015914:	mov    ecx,0xffff0000
   140015919:	lea    r8d,[rsi+0x1]
   14001591d:	and    DWORD PTR [rbp-0x61],ecx
   140015920:	and    DWORD PTR [rbp-0x71],ecx
   140015923:	add    rbx,r8
   140015926:	mov    QWORD PTR [rip+0x2364b],rbx        # 0x140038f78
   14001592d:	cmp    eax,0x41
   140015930:	jg     0x140015aee
   140015936:	je     0x140015f7d
   14001593c:	test   eax,eax
   14001593e:	je     0x140015ad7
   140015944:	cmp    eax,0x2f
   140015947:	jle    0x140015bfd
   14001594d:	cmp    eax,0x31
   140015950:	jle    0x1400159b1
   140015952:	cmp    eax,0x39
   140015955:	jg     0x140015bfd
   14001595b:	movsx  rdx,BYTE PTR [rbx-0x1]
   140015960:	lea    rbx,[rip+0xfffffffffffea699]        # 0x140000000
   140015967:	mov    rdx,QWORD PTR [rbx+rdx*8+0x2e180]
   14001596f:	lea    rcx,[rbp-0x69]
   140015973:	call   0x140011e90
   140015978:	cmp    QWORD PTR [rbp-0x69],0x0
   14001597d:	je     0x140015ab3
   140015983:	lea    rdx,[rip+0x18d16]        # 0x14002e6a0
   14001598a:	lea    rcx,[rbp-0x39]
   14001598e:	call   0x140011a3c
   140015993:	lea    rdx,[rbp-0x69]
   140015997:	lea    rcx,[rbp-0x59]
   14001599b:	movups xmm0,XMMWORD PTR [rax]
   14001599e:	movdqu XMMWORD PTR [rbp-0x59],xmm0
   1400159a3:	call   0x1400122b0
   1400159a8:	movaps xmm0,XMMWORD PTR [rbp-0x59]
   1400159ac:	jmp    0x140015ab7
   1400159b1:	and    DWORD PTR [rbp-0x71],ecx
   1400159b4:	mov    QWORD PTR [rbp-0x79],rsi
   1400159b8:	test   dl,dl
   1400159ba:	je     0x140015a4d
   1400159c0:	lea    rcx,[rbp-0x9]
   1400159c4:	call   0x140016f58
   1400159c9:	lea    rcx,[rbp-0x49]
   1400159cd:	mov    dl,0x3c
   1400159cf:	mov    rbx,rax
   1400159d2:	call   0x14001197c
   1400159d7:	lea    rcx,[rbp-0x59]
   1400159db:	mov    rdx,rbx
   1400159de:	movups xmm0,XMMWORD PTR [rax]
   1400159e1:	movdqu XMMWORD PTR [rbp-0x59],xmm0
   1400159e6:	call   0x1400122b0
   1400159eb:	lea    rdx,[rbp-0x59]
   1400159ef:	lea    rcx,[rbp-0x79]
   1400159f3:	call   0x1400122b0
   1400159f8:	mov    rcx,QWORD PTR [rbp-0x79]
   1400159fc:	test   rcx,rcx
   1400159ff:	je     0x140015a16
   140015a01:	mov    rax,QWORD PTR [rcx]
   140015a04:	call   QWORD PTR [rax+0x8]
   140015a07:	cmp    al,0x3e
   140015a09:	jne    0x140015a16
   140015a0b:	lea    rcx,[rbp-0x79]
   140015a0f:	mov    dl,0x20
   140015a11:	call   0x1400122f0
   140015a16:	lea    rcx,[rbp-0x79]
   140015a1a:	mov    dl,0x3e
   140015a1c:	call   0x1400122f0
   140015a21:	mov    rax,QWORD PTR [rbp+0x77]
   140015a25:	test   rax,rax
   140015a28:	je     0x140015a2d
   140015a2a:	mov    BYTE PTR [rax],0x1
   140015a2d:	mov    rbx,QWORD PTR [rip+0x23544]        # 0x140038f78
   140015a34:	cmp    BYTE PTR [rbx],sil
   140015a37:	jne    0x140015a3f
   140015a39:	movups xmm0,XMMWORD PTR [rbp-0x79]
   140015a3d:	jmp    0x140015ab7
   140015a3f:	mov    rsi,QWORD PTR [rbp-0x79]
   140015a43:	inc    rbx
   140015a46:	mov    QWORD PTR [rip+0x2352b],rbx        # 0x140038f78
   140015a4d:	lea    rcx,[rbp+0x47]
   140015a51:	xor    r8d,r8d
   140015a54:	xor    edx,edx
   140015a56:	call   0x14001800c
   140015a5b:	movups xmm0,XMMWORD PTR [rax]
   140015a5e:	mov    QWORD PTR [rip+0x23513],rbx        # 0x140038f78
   140015a65:	movq   rax,xmm0
   140015a6a:	movaps XMMWORD PTR [rbp-0x69],xmm0
   140015a6e:	test   rax,rax
   140015a71:	je     0x140015aa1
   140015a73:	cmp    BYTE PTR [rbx-0x1],0x31
   140015a77:	jne    0x140015aa1
   140015a79:	lea    rcx,[rbp-0x49]
   140015a7d:	mov    dl,0x7e
   140015a7f:	call   0x14001197c
   140015a84:	lea    rdx,[rbp-0x69]
   140015a88:	lea    rcx,[rbp-0x59]
   140015a8c:	movups xmm0,XMMWORD PTR [rax]
   140015a8f:	movdqu XMMWORD PTR [rbp-0x59],xmm0
   140015a94:	call   0x1400122b0
   140015a99:	movaps xmm0,XMMWORD PTR [rbp-0x59]
   140015a9d:	movaps XMMWORD PTR [rbp-0x69],xmm0
   140015aa1:	test   rsi,rsi
   140015aa4:	je     0x140015ab7
   140015aa6:	lea    rdx,[rbp-0x79]
   140015aaa:	lea    rcx,[rbp-0x69]
   140015aae:	call   0x1400122b0
   140015ab3:	movaps xmm0,XMMWORD PTR [rbp-0x69]
   140015ab7:	movdqu XMMWORD PTR [rdi],xmm0
   140015abb:	lea    r11,[rsp+0xf0]
   140015ac3:	mov    rax,rdi
   140015ac6:	mov    rbx,QWORD PTR [r11+0x10]
   140015aca:	mov    rsi,QWORD PTR [r11+0x18]
   140015ace:	mov    rdi,QWORD PTR [r11+0x28]
   140015ad2:	mov    rsp,r11
   140015ad5:	pop    rbp
   140015ad6:	ret    
   140015ad7:	sub    rbx,r8
   140015ada:	mov    edx,r8d
   140015add:	mov    QWORD PTR [rip+0x23494],rbx        # 0x140038f78
   140015ae4:	mov    rcx,rdi
   140015ae7:	call   0x140011a84
   140015aec:	jmp    0x140015abb
   140015aee:	cmp    eax,0x42
   140015af1:	je     0x140015f7a
   140015af7:	jle    0x140015bfd
   140015afd:	cmp    eax,0x5a
   140015b00:	jle    0x140015f7d
   140015b06:	cmp    eax,0x5f
   140015b09:	jne    0x140015bfd
   140015b0f:	movsx  ecx,BYTE PTR [rbx]
   140015b12:	add    rbx,r8
   140015b15:	mov    QWORD PTR [rip+0x2345c],rbx        # 0x140038f78
   140015b1c:	cmp    ecx,0x4f
   140015b1f:	jg     0x140015c13
   140015b25:	cmp    ecx,0x44
   140015b28:	jge    0x140015f48
   140015b2e:	cmp    ecx,0x39
   140015b31:	jg     0x140015bb1
   140015b33:	je     0x140015b8a
   140015b35:	test   ecx,ecx
   140015b37:	je     0x140015ad7
   140015b39:	cmp    ecx,0x2f
   140015b3c:	jle    0x140015bfd
   140015b42:	cmp    ecx,0x36
   140015b45:	jle    0x140015b71
   140015b47:	cmp    ecx,0x38
   140015b4a:	jg     0x140015bfd
   140015b50:	movsx  rdx,BYTE PTR [rbx-0x1]
   140015b55:	lea    rbx,[rip+0xfffffffffffea4a4]        # 0x140000000
   140015b5c:	mov    rdx,QWORD PTR [rbx+rdx*8+0x2e2a0]
   140015b64:	mov    rcx,rdi
   140015b67:	call   0x140011a3c
   140015b6c:	jmp    0x140015abb
   140015b71:	movsx  rdx,BYTE PTR [rbx-0x1]
   140015b76:	lea    rbx,[rip+0xfffffffffffea483]        # 0x140000000
   140015b7d:	mov    rdx,QWORD PTR [rbx+rdx*8+0x2e2a0]
   140015b85:	jmp    0x14001596f
   140015b8a:	movsx  rdx,BYTE PTR [rbx-0x1]
   140015b8f:	lea    rbx,[rip+0xfffffffffffea46a]        # 0x140000000
   140015b96:	lea    rcx,[rbp-0x79]
   140015b9a:	mov    rdx,QWORD PTR [rbx+rdx*8+0x2e2a0]
   140015ba2:	call   0x140011a3c
   140015ba7:	bts    DWORD PTR [rbp-0x71],0xf
   140015bac:	jmp    0x140015a39
   140015bb1:	cmp    ecx,0x3f
   140015bb4:	je     0x140015be3
   140015bb6:	cmp    ecx,0x40
   140015bb9:	jle    0x140015bfd
   140015bbb:	cmp    ecx,0x42
   140015bbe:	jle    0x140015f48
   140015bc4:	cmp    ecx,0x43
   140015bc7:	jne    0x140015bfd
   140015bc9:	lea    rdx,[rip+0x18ba8]        # 0x14002e778
   140015bd0:	lea    rcx,[rbp-0x79]
   140015bd4:	call   0x140016e20
   140015bd9:	bts    DWORD PTR [rbp-0x71],0xc
   140015bde:	jmp    0x140015a39
   140015be3:	movsx  eax,BYTE PTR [rbx]
   140015be6:	add    rbx,r8
   140015be9:	mov    QWORD PTR [rip+0x23388],rbx        # 0x140038f78
   140015bf0:	test   eax,eax
   140015bf2:	je     0x140015ad7
   140015bf8:	cmp    eax,0x30
   140015bfb:	je     0x140015c07
   140015bfd:	mov    edx,0x2
   140015c02:	jmp    0x140015ae4
   140015c07:	xor    r8d,r8d
   140015c0a:	lea    rdx,[rip+0x19027]        # 0x14002ec38
   140015c11:	jmp    0x140015bd0
   140015c13:	cmp    ecx,0x54
   140015c16:	jg     0x140015e62
   140015c1c:	cmp    ecx,0x53
   140015c1f:	jge    0x140015f48
   140015c25:	sub    ecx,0x50
   140015c28:	je     0x140015e10
   140015c2e:	dec    ecx
   140015c30:	je     0x140015ab3
   140015c36:	dec    ecx
   140015c38:	jne    0x140015bfd
   140015c3a:	movsx  rdx,BYTE PTR [rbx-0x1]
   140015c3f:	lea    rbx,[rip+0xfffffffffffea3ba]        # 0x140000000
   140015c46:	lea    rcx,[rbp-0x69]
   140015c4a:	mov    rdx,QWORD PTR [rbx+rdx*8+0x2e268]
   140015c52:	call   0x140011e90
   140015c57:	mov    rax,QWORD PTR [rip+0x2331a]        # 0x140038f78
   140015c5e:	mov    cl,BYTE PTR [rax]
   140015c60:	test   cl,cl
   140015c62:	jne    0x140015c7e
   140015c64:	movaps xmm0,XMMWORD PTR [rbp-0x69]
   140015c68:	mov    edx,0x1
   140015c6d:	mov    rcx,rdi
   140015c70:	movdqu XMMWORD PTR [rdi],xmm0
   140015c74:	call   0x140012498
   140015c79:	jmp    0x140015abb
   140015c7e:	movsx  eax,cl
   140015c81:	sub    eax,0x30
   140015c84:	js     0x140015bfd
   140015c8a:	movsxd rdx,eax
   140015c8d:	cmp    rdx,0x5
   140015c91:	jae    0x140015bfd
   140015c97:	mov    rdx,QWORD PTR [rbx+rdx*8+0x2e590]
   140015c9f:	lea    rcx,[rbp-0x79]
   140015ca3:	call   0x140011e90
   140015ca8:	mov    rcx,QWORD PTR [rip+0x232c9]        # 0x140038f78
   140015caf:	movsx  eax,BYTE PTR [rcx]
   140015cb2:	inc    rcx
   140015cb5:	mov    QWORD PTR [rip+0x232bc],rcx        # 0x140038f78
   140015cbc:	cmp    eax,0x30
   140015cbf:	je     0x140015dd2
   140015cc5:	cmp    eax,0x31
   140015cc8:	je     0x140015cff
   140015cca:	add    eax,0xffffffce
   140015ccd:	cmp    eax,0x2
   140015cd0:	ja     0x140015ceb
   140015cd2:	movaps xmm0,XMMWORD PTR [rbp-0x69]
   140015cd6:	lea    rdx,[rbp-0x79]
   140015cda:	mov    rcx,rdi
   140015cdd:	movdqu XMMWORD PTR [rdi],xmm0
   140015ce1:	call   0x1400122b0
   140015ce6:	jmp    0x140015abb
   140015ceb:	dec    rcx
   140015cee:	mov    edx,0x1
   140015cf3:	mov    QWORD PTR [rip+0x2327e],rcx        # 0x140038f78
   140015cfa:	jmp    0x140015ae4
   140015cff:	movaps xmm0,XMMWORD PTR [rbp-0x69]
   140015d03:	lea    rdx,[rbp-0x79]
   140015d07:	lea    rcx,[rbp-0x69]
   140015d0b:	movdqa XMMWORD PTR [rbp-0x69],xmm0
   140015d10:	call   0x1400122b0
   140015d15:	lea    rcx,[rbp-0x29]
   140015d19:	call   0x140016bcc
   140015d1e:	lea    rcx,[rbp-0x59]
   140015d22:	mov    dl,0x2c
   140015d24:	movups xmm0,XMMWORD PTR [rax]
   140015d27:	movdqu XMMWORD PTR [rbp-0x59],xmm0
   140015d2c:	call   0x1400122f0
   140015d31:	lea    rdx,[rbp-0x59]
   140015d35:	lea    rcx,[rbp-0x69]
   140015d39:	call   0x1400122b0
   140015d3e:	lea    rcx,[rbp+0x37]
   140015d42:	call   0x140016bcc
   140015d47:	lea    rcx,[rbp-0x59]
   140015d4b:	mov    dl,0x2c
   140015d4d:	movups xmm0,XMMWORD PTR [rax]
   140015d50:	movdqu XMMWORD PTR [rbp-0x59],xmm0
   140015d55:	call   0x1400122f0
   140015d5a:	lea    rdx,[rbp-0x59]
   140015d5e:	lea    rcx,[rbp-0x69]
   140015d62:	call   0x1400122b0
   140015d67:	lea    rcx,[rbp+0x17]
   140015d6b:	call   0x140016bcc
   140015d70:	lea    rcx,[rbp-0x59]
   140015d74:	mov    dl,0x2c
   140015d76:	movups xmm0,XMMWORD PTR [rax]
   140015d79:	movdqu XMMWORD PTR [rbp-0x59],xmm0
   140015d7e:	call   0x1400122f0
   140015d83:	lea    rdx,[rbp-0x59]
   140015d87:	lea    rcx,[rbp-0x69]
   140015d8b:	call   0x1400122b0
   140015d90:	lea    rcx,[rbp-0x19]
   140015d94:	xor    edx,edx
   140015d96:	call   0x140014a54
   140015d9b:	lea    rcx,[rbp-0x59]
   140015d9f:	mov    dl,0x29
   140015da1:	movups xmm0,XMMWORD PTR [rax]
   140015da4:	movdqu XMMWORD PTR [rbp-0x59],xmm0
   140015da9:	call   0x1400122f0
   140015dae:	lea    rdx,[rbp-0x59]
   140015db2:	lea    rcx,[rbp-0x69]
   140015db6:	call   0x1400122b0
   140015dbb:	mov    dl,0x27
   140015dbd:	mov    rcx,rdi
   140015dc0:	movaps xmm0,XMMWORD PTR [rbp-0x69]
   140015dc4:	movdqu XMMWORD PTR [rdi],xmm0
   140015dc8:	call   0x1400122f0
   140015dcd:	jmp    0x140015abb
   140015dd2:	lea    rcx,[rbp-0x49]
   140015dd6:	xor    edx,edx
   140015dd8:	call   0x1400146fc
   140015ddd:	lea    rcx,[rbp-0x59]
   140015de1:	mov    dl,0x20
   140015de3:	movaps xmm0,XMMWORD PTR [rbp-0x49]
   140015de7:	movdqa XMMWORD PTR [rbp-0x59],xmm0
   140015dec:	call   0x1400122f0
   140015df1:	lea    rdx,[rbp-0x69]
   140015df5:	lea    rcx,[rbp-0x59]
   140015df9:	movaps xmm0,XMMWORD PTR [rbp-0x59]
   140015dfd:	movdqa XMMWORD PTR [rbp-0x59],xmm0
   140015e02:	call   0x1400122b0
   140015e07:	movaps xmm0,XMMWORD PTR [rbp-0x59]
   140015e0b:	jmp    0x140015cd6
   140015e10:	movsx  rdx,BYTE PTR [rbx-0x1]
   140015e15:	lea    rbx,[rip+0xfffffffffffea1e4]        # 0x140000000
   140015e1c:	lea    rcx,[rbp-0x69]
   140015e20:	mov    rdx,QWORD PTR [rbx+rdx*8+0x2e268]
   140015e28:	call   0x140011e90
   140015e2d:	lea    rcx,[rbp+0x7]
   140015e31:	xor    r8d,r8d
   140015e34:	xor    edx,edx
   140015e36:	call   0x1400158dc
   140015e3b:	movups xmm0,XMMWORD PTR [rax]
   140015e3e:	movq   rax,xmm0
   140015e43:	movups XMMWORD PTR [rbp-0x79],xmm0
   140015e47:	test   rax,rax
   140015e4a:	je     0x140015cd2
   140015e50:	test   DWORD PTR [rbp-0x71],0x400
   140015e57:	je     0x140015cd2
   140015e5d:	jmp    0x140015bfd
   140015e62:	cmp    ecx,0x56
   140015e65:	jle    0x140015f61
   140015e6b:	cmp    ecx,0x57
   140015e6e:	jle    0x140015bfd
   140015e74:	cmp    ecx,0x59
   140015e77:	jle    0x140015f48
   140015e7d:	cmp    ecx,0x5f
   140015e80:	jne    0x140015bfd
   140015e86:	movsx  eax,BYTE PTR [rbx]
   140015e89:	add    rbx,r8
   140015e8c:	mov    QWORD PTR [rip+0x230e5],rbx        # 0x140038f78
   140015e93:	cmp    eax,0x41
   140015e96:	jl     0x140015bfd
   140015e9c:	cmp    eax,0x44
   140015e9f:	jle    0x140015eaf
   140015ea1:	cmp    eax,0x46
   140015ea4:	jle    0x140015ec8
   140015ea6:	cmp    eax,0x4a
   140015ea9:	jg     0x140015bfd
   140015eaf:	movsx  rdx,BYTE PTR [rbx-0x1]
   140015eb4:	lea    rbx,[rip+0xfffffffffffea145]        # 0x140000000
   140015ebb:	mov    rdx,QWORD PTR [rbx+rdx*8+0x2e330]
   140015ec3:	jmp    0x140015b64
   140015ec8:	movsx  rdx,BYTE PTR [rbx-0x1]
   140015ecd:	lea    rbx,[rip+0xfffffffffffea12c]        # 0x140000000
   140015ed4:	lea    rcx,[rbp-0x79]
   140015ed8:	mov    rdx,QWORD PTR [rbx+rdx*8+0x2e330]
   140015ee0:	call   0x140011a3c
   140015ee5:	mov    rax,QWORD PTR [rip+0x2308c]        # 0x140038f78
   140015eec:	cmp    BYTE PTR [rax],0x3f
   140015eef:	jne    0x140015f1e
   140015ef1:	lea    rcx,[rbp+0x27]
   140015ef5:	call   0x1400147e0
   140015efa:	lea    rcx,[rbp-0x79]
   140015efe:	mov    rdx,rax
   140015f01:	call   0x1400122b0
   140015f06:	mov    rax,QWORD PTR [rip+0x2306b]        # 0x140038f78
   140015f0d:	cmp    BYTE PTR [rax],0x40
   140015f10:	jne    0x140015f33
   140015f12:	inc    rax
   140015f15:	mov    QWORD PTR [rip+0x2305c],rax        # 0x140038f78
   140015f1c:	jmp    0x140015f33
   140015f1e:	lea    rcx,[rbp-0x39]
   140015f22:	call   0x140016f0c
   140015f27:	lea    rcx,[rbp-0x79]
   140015f2b:	mov    rdx,rax
   140015f2e:	call   0x1400122b0
   140015f33:	lea    rdx,[rip+0x18d16]        # 0x14002ec50
   140015f3a:	lea    rcx,[rbp-0x79]
   140015f3e:	call   0x14001240c
   140015f43:	jmp    0x140015a39
   140015f48:	movsx  rdx,BYTE PTR [rbx-0x1]
   140015f4d:	lea    rbx,[rip+0xfffffffffffea0ac]        # 0x140000000
   140015f54:	mov    rdx,QWORD PTR [rbx+rdx*8+0x2e268]
   140015f5c:	jmp    0x140015b64
   140015f61:	movsx  rdx,BYTE PTR [rbx-0x1]
   140015f66:	lea    rbx,[rip+0xfffffffffffea093]        # 0x140000000
   140015f6d:	mov    rdx,QWORD PTR [rbx+rdx*8+0x2e268]
   140015f75:	jmp    0x14001596f
   140015f7a:	mov    esi,r8d
   140015f7d:	movsx  rdx,BYTE PTR [rbx-0x1]
   140015f82:	lea    rbx,[rip+0xfffffffffffea077]        # 0x140000000
   140015f89:	lea    rcx,[rbp-0x69]
   140015f8d:	mov    rdx,QWORD PTR [rbx+rdx*8+0x2e148]
   140015f95:	call   0x140011e90
   140015f9a:	test   esi,esi
   140015f9c:	je     0x140015978
   140015fa2:	cmp    QWORD PTR [rbp-0x69],0x0
   140015fa7:	je     0x140015ab3
   140015fad:	bts    DWORD PTR [rbp-0x61],0x9
   140015fb2:	jmp    0x140015ab3
   140015fb7:	int3   
   140015fb8:	rex push rbx
   140015fba:	sub    rsp,0x20
   140015fbe:	lea    r9,[rip+0x186eb]        # 0x14002e6b0
   140015fc5:	mov    rbx,rcx
   140015fc8:	call   0x140016318
   140015fcd:	mov    rax,rbx
   140015fd0:	add    rsp,0x20
   140015fd4:	pop    rbx
   140015fd5:	ret    
   140015fd6:	int3   
   140015fd7:	int3   
   140015fd8:	rex push rbx
   140015fda:	sub    rsp,0x20
   140015fde:	lea    r9,[rip+0x14a6b]        # 0x14002aa50
   140015fe5:	mov    rbx,rcx
   140015fe8:	call   0x140016318
   140015fed:	mov    rax,rbx
   140015ff0:	add    rsp,0x20
   140015ff4:	pop    rbx
   140015ff5:	ret    
   140015ff6:	int3   
   140015ff7:	int3   
   140015ff8:	mov    QWORD PTR [rsp+0x8],rbx
   140015ffd:	mov    QWORD PTR [rsp+0x10],rdi
   140016002:	push   rbp
   140016003:	mov    rbp,rsp
   140016006:	sub    rsp,0x60
   14001600a:	mov    r8,QWORD PTR [rip+0x22f67]        # 0x140038f78
   140016011:	and    QWORD PTR [rbp-0x30],0x0
   140016016:	mov    rbx,rcx
   140016019:	movsx  ecx,BYTE PTR [r8]
   14001601d:	mov    rdi,rdx
   140016020:	mov    edx,0xffff0000
   140016025:	and    DWORD PTR [rbp-0x28],edx
   140016028:	test   ecx,ecx
   14001602a:	je     0x1400161da
   140016030:	sub    ecx,0x24
   140016033:	je     0x1400160b3
   140016035:	sub    ecx,0x1d
   140016038:	je     0x140016076
   14001603a:	dec    ecx
   14001603c:	je     0x14001604e
   14001603e:	mov    rdx,rdi
   140016041:	mov    rcx,rbx
   140016044:	call   0x140013a94
   140016049:	jmp    0x1400161fa
   14001604e:	lea    rdx,[rip+0x18dbb]        # 0x14002ee10
   140016055:	lea    rcx,[rbp-0x30]
   140016059:	call   0x140011e90
   14001605e:	cmp    QWORD PTR [rdi],0x0
   140016062:	je     0x14001606f
   140016064:	lea    rcx,[rbp-0x30]
   140016068:	mov    dl,0x20
   14001606a:	call   0x1400122f0
   14001606f:	mov    r8,QWORD PTR [rip+0x22f02]        # 0x140038f78
   140016076:	lea    r9,[rip+0x18647]        # 0x14002e6c4
   14001607d:	movups xmm0,XMMWORD PTR [rdi]
   140016080:	inc    r8
   140016083:	lea    rdx,[rbp-0x30]
   140016087:	mov    QWORD PTR [rip+0x22eea],r8        # 0x140038f78
   14001608e:	lea    r8,[rbp-0x20]
   140016092:	mov    rcx,rbx
   140016095:	movups XMMWORD PTR [rbp-0x20],xmm0
   140016099:	psrldq xmm0,0x8
   14001609e:	movd   eax,xmm0
   1400160a2:	bts    eax,0x8
   1400160a6:	mov    DWORD PTR [rbp-0x18],eax
   1400160a9:	call   0x140016318
   1400160ae:	jmp    0x1400161fa
   1400160b3:	mov    al,BYTE PTR [r8+0x1]
   1400160b7:	cmp    al,0x24
   1400160b9:	je     0x1400160d5
   1400160bb:	test   al,al
   1400160bd:	je     0x1400161da
   1400160c3:	mov    rcx,rbx
   1400160c6:	mov    edx,0x2
   1400160cb:	call   0x140011a84
   1400160d0:	jmp    0x1400161fa
   1400160d5:	add    r8,0x2
   1400160d9:	mov    QWORD PTR [rip+0x22e98],r8        # 0x140038f78
   1400160e0:	movsx  ecx,BYTE PTR [r8]
   1400160e4:	test   ecx,ecx
   1400160e6:	je     0x1400161da
   1400160ec:	sub    ecx,0x41
   1400160ef:	je     0x1400161c3
   1400160f5:	dec    ecx
   1400160f7:	je     0x1400161a6
   1400160fd:	dec    ecx
   1400160ff:	je     0x140016170
   140016101:	sub    ecx,0xe
   140016104:	je     0x140016164
   140016106:	dec    ecx
   140016108:	je     0x14001613c
   14001610a:	dec    ecx
   14001610c:	je     0x140016130
   14001610e:	dec    ecx
   140016110:	mov    rcx,rbx
   140016113:	jne    0x1400160c6
   140016115:	inc    r8
   140016118:	lea    rdx,[rip+0x18d01]        # 0x14002ee20
   14001611f:	mov    QWORD PTR [rip+0x22e52],r8        # 0x140038f78
   140016126:	call   0x140011a3c
   14001612b:	jmp    0x1400161fa
   140016130:	inc    r8
   140016133:	mov    QWORD PTR [rip+0x22e3e],r8        # 0x140038f78
   14001613a:	jmp    0x1400160c3
   14001613c:	lea    rdx,[rip+0x18ccd]        # 0x14002ee10
   140016143:	lea    rcx,[rbp-0x30]
   140016147:	call   0x140011e90
   14001614c:	cmp    QWORD PTR [rdi],0x0
   140016150:	je     0x14001615d
   140016152:	lea    rcx,[rbp-0x30]
   140016156:	mov    dl,0x20
   140016158:	call   0x1400122f0
   14001615d:	mov    r8,QWORD PTR [rip+0x22e14]        # 0x140038f78
   140016164:	lea    r9,[rip+0x1858d]        # 0x14002e6f8
   14001616b:	jmp    0x14001607d
   140016170:	and    DWORD PTR [rbp-0x28],edx
   140016173:	and    QWORD PTR [rbp-0x30],0x0
   140016178:	and    DWORD PTR [rsp+0x20],0x0
   14001617d:	inc    r8
   140016180:	lea    r9,[rbp-0x30]
   140016184:	lea    rcx,[rbp-0x10]
   140016188:	mov    QWORD PTR [rip+0x22de9],r8        # 0x140038f78
   14001618f:	lea    r8,[rip+0x148ba]        # 0x14002aa50
   140016196:	mov    rdx,rdi
   140016199:	call   0x140013fc0
   14001619e:	mov    rdx,rax
   1400161a1:	jmp    0x140016041
   1400161a6:	inc    r8
   1400161a9:	mov    rdx,rdi
   1400161ac:	mov    rcx,rbx
   1400161af:	mov    QWORD PTR [rip+0x22dc2],r8        # 0x140038f78
   1400161b6:	mov    r8d,0x1
   1400161bc:	call   0x140016210
   1400161c1:	jmp    0x1400161fa
   1400161c3:	inc    r8
   1400161c6:	mov    rdx,rdi
   1400161c9:	mov    rcx,rbx
   1400161cc:	mov    QWORD PTR [rip+0x22da5],r8        # 0x140038f78
   1400161d3:	call   0x1400151b0
   1400161d8:	jmp    0x1400161fa
   1400161da:	lea    rcx,[rbp-0x20]
   1400161de:	mov    edx,0x1
   1400161e3:	call   0x140011a84
   1400161e8:	mov    rdx,rdi
   1400161eb:	mov    rcx,rbx
   1400161ee:	movups xmm0,XMMWORD PTR [rax]
   1400161f1:	movdqu XMMWORD PTR [rbx],xmm0
   1400161f5:	call   0x1400122b0
   1400161fa:	mov    rdi,QWORD PTR [rsp+0x78]
   1400161ff:	mov    rax,rbx
   140016202:	mov    rbx,QWORD PTR [rsp+0x70]
   140016207:	add    rsp,0x60
   14001620b:	pop    rbp
   14001620c:	ret    
   14001620d:	int3   
   14001620e:	int3   
   14001620f:	int3   
   140016210:	mov    QWORD PTR [rsp+0x8],rbx
   140016215:	mov    QWORD PTR [rsp+0x10],rdi
   14001621a:	push   rbp
   14001621b:	mov    rbp,rsp
   14001621e:	sub    rsp,0x50
   140016222:	mov    rax,QWORD PTR [rip+0x22d4f]        # 0x140038f78
   140016229:	mov    rdi,rdx
   14001622c:	mov    rbx,rcx
   14001622f:	cmp    BYTE PTR [rax],0x0
   140016232:	je     0x1400162e4
   140016238:	test   r8d,r8d
   14001623b:	je     0x140016275
   14001623d:	cmp    BYTE PTR [rax],0x58
   140016240:	jne    0x140016275
   140016242:	inc    rax
   140016245:	mov    QWORD PTR [rip+0x22d2c],rax        # 0x140038f78
   14001624c:	cmp    QWORD PTR [rdx],0x0
   140016250:	jne    0x140016263
   140016252:	lea    rdx,[rip+0x18a1f]        # 0x14002ec78
   140016259:	call   0x140011a3c
   14001625e:	jmp    0x140016304
   140016263:	lea    rdx,[rip+0x18b9a]        # 0x14002ee04
   14001626a:	lea    rcx,[rbp-0x20]
   14001626e:	call   0x140011a3c
   140016273:	jmp    0x1400162f2
   140016275:	cmp    BYTE PTR [rax],0x59
   140016278:	jne    0x14001628b
   14001627a:	inc    rax
   14001627d:	mov    QWORD PTR [rip+0x22cf4],rax        # 0x140038f78
   140016284:	call   0x140013790
   140016289:	jmp    0x140016304
   14001628b:	lea    rcx,[rbp-0x30]
   14001628f:	call   0x140013a94
   140016294:	test   DWORD PTR [rdi+0x8],0x4000
   14001629b:	je     0x1400162c8
   14001629d:	lea    rdx,[rip+0x18cdc]        # 0x14002ef80
   1400162a4:	lea    rcx,[rbp-0x10]
   1400162a8:	call   0x140011a3c
   1400162ad:	lea    rdx,[rbp-0x30]
   1400162b1:	lea    rcx,[rbp-0x20]
   1400162b5:	movups xmm0,XMMWORD PTR [rax]
   1400162b8:	movdqu XMMWORD PTR [rbp-0x20],xmm0
   1400162bd:	call   0x1400122b0
   1400162c2:	movaps xmm0,XMMWORD PTR [rbp-0x20]
   1400162c6:	jmp    0x1400162de
   1400162c8:	test   DWORD PTR [rdi+0x8],0x2000
   1400162cf:	je     0x1400162da
   1400162d1:	lea    rdx,[rip+0x18cb8]        # 0x14002ef90
   1400162d8:	jmp    0x1400162a4
   1400162da:	movaps xmm0,XMMWORD PTR [rbp-0x30]
   1400162de:	movdqu XMMWORD PTR [rbx],xmm0
   1400162e2:	jmp    0x140016304
   1400162e4:	lea    rcx,[rbp-0x10]
   1400162e8:	mov    edx,0x1
   1400162ed:	call   0x140011a84
   1400162f2:	movups xmm0,XMMWORD PTR [rax]
   1400162f5:	mov    rdx,rdi
   1400162f8:	mov    rcx,rbx
   1400162fb:	movdqu XMMWORD PTR [rbx],xmm0
   1400162ff:	call   0x1400122b0
   140016304:	mov    rdi,QWORD PTR [rsp+0x68]
   140016309:	mov    rax,rbx
   14001630c:	mov    rbx,QWORD PTR [rsp+0x60]
   140016311:	add    rsp,0x50
   140016315:	pop    rbp
   140016316:	ret    
   140016317:	int3   
   140016318:	mov    QWORD PTR [rsp+0x8],rbx
   14001631d:	mov    QWORD PTR [rsp+0x10],rsi
   140016322:	mov    QWORD PTR [rsp+0x18],rdi
   140016327:	push   rbp
   140016328:	push   r14
   14001632a:	push   r15
   14001632c:	mov    rbp,rsp
   14001632f:	sub    rsp,0x40
   140016333:	mov    rax,QWORD PTR [rip+0x22c3e]        # 0x140038f78
   14001633a:	mov    rsi,rcx
   14001633d:	xor    ebx,ebx
   14001633f:	mov    cl,BYTE PTR [rax]
   140016341:	mov    r15,r9
   140016344:	mov    rdi,r8
   140016347:	mov    r14,rdx
   14001634a:	test   cl,cl
   14001634c:	je     0x1400163d9
   140016352:	lea    eax,[rcx-0x36]
   140016355:	cmp    al,0x3
   140016357:	jbe    0x14001638f
   140016359:	cmp    cl,0x5f
   14001635c:	je     0x14001638f
   14001635e:	mov    r9,rdx
   140016361:	lea    rcx,[rbp-0x10]
   140016365:	mov    r8,r15
   140016368:	mov    rdx,rdi
   14001636b:	mov    DWORD PTR [rsp+0x20],ebx
   14001636f:	call   0x140013fc0
   140016374:	cmp    BYTE PTR [r15],0x2a
   140016378:	lea    rdx,[rbp-0x10]
   14001637c:	sete   bl
   14001637f:	mov    rcx,rsi
   140016382:	mov    r8d,ebx
   140016385:	call   0x140016210
   14001638a:	jmp    0x14001642d
   14001638f:	lea    rcx,[rbp-0x10]
   140016393:	mov    rdx,r9
   140016396:	call   0x140011a3c
   14001639b:	cmp    QWORD PTR [r14],rbx
   14001639e:	je     0x1400163ba
   1400163a0:	cmp    QWORD PTR [rdi],rbx
   1400163a3:	je     0x1400163ae
   1400163a5:	test   DWORD PTR [rdi+0x8],0x100
   1400163ac:	jne    0x1400163ba
   1400163ae:	lea    rcx,[rbp-0x10]
   1400163b2:	mov    rdx,r14
   1400163b5:	call   0x1400122b0
   1400163ba:	cmp    QWORD PTR [rdi],rbx
   1400163bd:	je     0x1400163cb
   1400163bf:	lea    rcx,[rbp-0x10]
   1400163c3:	mov    rdx,rdi
   1400163c6:	call   0x1400122b0
   1400163cb:	lea    rdx,[rbp-0x10]
   1400163cf:	mov    rcx,rsi
   1400163d2:	call   0x1400151b0
   1400163d7:	jmp    0x14001642d
   1400163d9:	lea    rcx,[rbp-0x10]
   1400163dd:	mov    edx,0x1
   1400163e2:	call   0x140011a84
   1400163e7:	lea    rcx,[rbp-0x10]
   1400163eb:	mov    rdx,r15
   1400163ee:	call   0x14001240c
   1400163f3:	cmp    QWORD PTR [r14],rbx
   1400163f6:	je     0x140016404
   1400163f8:	lea    rcx,[rbp-0x10]
   1400163fc:	mov    rdx,r14
   1400163ff:	call   0x1400122b0
   140016404:	cmp    QWORD PTR [rdi],rbx
   140016407:	je     0x140016425
   140016409:	cmp    QWORD PTR [r14],rbx
   14001640c:	je     0x140016419
   14001640e:	lea    rcx,[rbp-0x10]
   140016412:	mov    dl,0x20
   140016414:	call   0x1400122f0
   140016419:	lea    rcx,[rbp-0x10]
   14001641d:	mov    rdx,rdi
   140016420:	call   0x1400122b0
   140016425:	movups xmm0,XMMWORD PTR [rbp-0x10]
   140016429:	movdqu XMMWORD PTR [rsi],xmm0
   14001642d:	mov    rbx,QWORD PTR [rsp+0x60]
   140016432:	mov    rdi,QWORD PTR [rsp+0x70]
   140016437:	mov    rax,rsi
   14001643a:	mov    rsi,QWORD PTR [rsp+0x68]
   14001643f:	add    rsp,0x40
   140016443:	pop    r15
   140016445:	pop    r14
   140016447:	pop    rbp
   140016448:	ret    
   140016449:	int3   
   14001644a:	int3   
   14001644b:	int3   
   14001644c:	rex push rbx
   14001644e:	sub    rsp,0x20
   140016452:	mov    rbx,rcx
   140016455:	call   0x140016318
   14001645a:	mov    rax,rbx
   14001645d:	add    rsp,0x20
   140016461:	pop    rbx
   140016462:	ret    
   140016463:	int3   
   140016464:	mov    r11,rsp
   140016467:	mov    QWORD PTR [r11+0x8],rbx
   14001646b:	mov    QWORD PTR [r11+0x10],rsi
   14001646f:	push   rdi
   140016470:	sub    rsp,0x30
   140016474:	mov    rax,QWORD PTR [rip+0x22afd]        # 0x140038f78
   14001647b:	mov    rbx,rcx
   14001647e:	cmp    BYTE PTR [rax],0x5f
   140016481:	jne    0x140016569
   140016487:	inc    rax
   14001648a:	mov    QWORD PTR [rip+0x22ae7],rax        # 0x140038f78
   140016491:	movsx  esi,BYTE PTR [rax]
   140016494:	inc    rax
   140016497:	sub    esi,0x41
   14001649a:	mov    QWORD PTR [rip+0x22ad7],rax        # 0x140038f78
   1400164a1:	cmp    esi,0x3
   1400164a4:	ja     0x140016546
   1400164aa:	and    QWORD PTR [r11-0x18],0x0
   1400164af:	mov    eax,DWORD PTR [rip+0x22adf]        # 0x140038f94
   1400164b5:	and    DWORD PTR [rsp+0x28],0xffff0000
   1400164bd:	shr    eax,1
   1400164bf:	not    eax
   1400164c1:	test   al,0x1
   1400164c3:	je     0x14001655e
   1400164c9:	lea    rdx,[rip+0x187d8]        # 0x14002eca8
   1400164d0:	lea    rcx,[r11-0x18]
   1400164d4:	call   0x14001240c
   1400164d9:	mov    eax,DWORD PTR [rip+0x22ab5]        # 0x140038f94
   1400164df:	mov    rdx,QWORD PTR [rip+0x17e1a]        # 0x14002e300
   1400164e6:	not    eax
   1400164e8:	test   al,0x1
   1400164ea:	jne    0x1400164f0
   1400164ec:	add    rdx,0x2
   1400164f0:	lea    rcx,[rsp+0x20]
   1400164f5:	call   0x14001240c
   1400164fa:	test   esi,esi
   1400164fc:	je     0x140016552
   1400164fe:	mov    edi,esi
   140016500:	not    edi
   140016502:	inc    edi
   140016504:	and    edi,esi
   140016506:	mov    eax,edi
   140016508:	dec    eax
   14001650a:	je     0x140016519
   14001650c:	dec    eax
   14001650e:	jne    0x140016543
   140016510:	lea    rdx,[rip+0x1894d]        # 0x14002ee64
   140016517:	jmp    0x140016520
   140016519:	lea    rdx,[rip+0x18940]        # 0x14002ee60
   140016520:	lea    rcx,[rsp+0x20]
   140016525:	call   0x14001240c
   14001652a:	not    edi
   14001652c:	and    esi,edi
   14001652e:	je     0x140016552
   140016530:	lea    rdx,[rip+0x18931]        # 0x14002ee68
   140016537:	lea    rcx,[rsp+0x20]
   14001653c:	call   0x14001240c
   140016541:	jmp    0x1400164fe
   140016543:	mov    rcx,rbx
   140016546:	mov    edx,0x2
   14001654b:	call   0x140011a84
   140016550:	jmp    0x140016578
   140016552:	lea    rcx,[rsp+0x20]
   140016557:	mov    dl,0x29
   140016559:	call   0x1400122f0
   14001655e:	movups xmm0,XMMWORD PTR [rsp+0x20]
   140016563:	movdqu XMMWORD PTR [rbx],xmm0
   140016567:	jmp    0x140016578
   140016569:	and    QWORD PTR [rcx],0x0
   14001656d:	mov    BYTE PTR [rcx+0x8],0x0
   140016571:	and    DWORD PTR [rcx+0x8],0xffff00ff
   140016578:	mov    rsi,QWORD PTR [rsp+0x48]
   14001657d:	mov    rax,rbx
   140016580:	mov    rbx,QWORD PTR [rsp+0x40]
   140016585:	add    rsp,0x30
   140016589:	pop    rdi
   14001658a:	ret    
   14001658b:	int3   
   14001658c:	rex push rbx
   14001658e:	sub    rsp,0x20
   140016592:	mov    rax,QWORD PTR [rip+0x229df]        # 0x140038f78
   140016599:	mov    rbx,rcx
   14001659c:	cmp    BYTE PTR [rax],0x40
   14001659f:	jne    0x1400165b2
   1400165a1:	inc    rax
   1400165a4:	mov    QWORD PTR [rip+0x229cd],rax        # 0x140038f78
   1400165ab:	call   0x1400119b4
   1400165b0:	jmp    0x1400165b7
   1400165b2:	call   0x1400146fc
   1400165b7:	mov    rax,rbx
   1400165ba:	add    rsp,0x20
   1400165be:	pop    rbx
   1400165bf:	ret    
   1400165c0:	mov    rax,rsp
   1400165c3:	mov    QWORD PTR [rax+0x8],rbx
   1400165c7:	mov    QWORD PTR [rax+0x10],rsi
   1400165cb:	mov    QWORD PTR [rax+0x18],rdi
   1400165cf:	mov    QWORD PTR [rax+0x20],r14
   1400165d3:	push   rbp
   1400165d4:	lea    rbp,[rax-0x138]
   1400165db:	sub    rsp,0x230
   1400165e2:	xor    r14d,r14d
   1400165e5:	mov    rdi,rcx
   1400165e8:	mov    BYTE PTR [rcx+0x8],r14b
   1400165ec:	mov    eax,DWORD PTR [rcx+0x8]
   1400165ef:	mov    QWORD PTR [rcx],r14
   1400165f2:	and    eax,0xffff00ff
   1400165f7:	mov    sil,r14b
   1400165fa:	mov    DWORD PTR [rcx+0x8],eax
   1400165fd:	test   al,al
   1400165ff:	jne    0x140016a19
   140016605:	mov    rax,QWORD PTR [rip+0x2296c]        # 0x140038f78
   14001660c:	test   BYTE PTR [rax],0xbf
   14001660f:	je     0x140016a19
   140016615:	cmp    BYTE PTR [rip+0x2297c],r14b        # 0x140038f98
   14001661c:	je     0x14001662b
   14001661e:	cmp    BYTE PTR [rip+0x22974],r14b        # 0x140038f99
   140016625:	je     0x140016a92
   14001662b:	cmp    QWORD PTR [rdi],r14
   14001662e:	je     0x140016691
   140016630:	lea    rdx,[rip+0x185cd]        # 0x14002ec04
   140016637:	lea    rcx,[rbp+0xd0]
   14001663e:	call   0x140011a3c
   140016643:	lea    rcx,[rbp-0x10]
   140016647:	mov    rdx,rdi
   14001664a:	movups xmm0,XMMWORD PTR [rax]
   14001664d:	movdqu XMMWORD PTR [rbp-0x10],xmm0
   140016652:	call   0x1400122b0
   140016657:	movups xmm0,XMMWORD PTR [rbp-0x10]
   14001665b:	movdqu XMMWORD PTR [rdi],xmm0
   14001665f:	test   sil,sil
   140016662:	je     0x140016691
   140016664:	lea    rcx,[rbp+0x120]
   14001666b:	mov    dl,0x5b
   14001666d:	call   0x14001197c
   140016672:	lea    rcx,[rbp-0x80]
   140016676:	mov    rdx,rdi
   140016679:	movups xmm0,XMMWORD PTR [rax]
   14001667c:	movdqu XMMWORD PTR [rbp-0x80],xmm0
   140016681:	call   0x1400122b0
   140016686:	movups xmm0,XMMWORD PTR [rbp-0x80]
   14001668a:	mov    sil,r14b
   14001668d:	movdqu XMMWORD PTR [rdi],xmm0
   140016691:	mov    rax,QWORD PTR [rip+0x228e0]        # 0x140038f78
   140016698:	cmp    BYTE PTR [rax],0x3f
   14001669b:	jne    0x1400169e3
   1400166a1:	inc    rax
   1400166a4:	mov    QWORD PTR [rip+0x228cd],rax        # 0x140038f78
   1400166ab:	movsx  ecx,BYTE PTR [rax]
   1400166ae:	sub    ecx,0x24
   1400166b1:	je     0x1400169ae
   1400166b7:	dec    ecx
   1400166b9:	je     0x140016955
   1400166bf:	sub    ecx,0x1a
   1400166c2:	je     0x140016890
   1400166c8:	sub    ecx,0x2
   1400166cb:	je     0x140016955
   1400166d1:	sub    ecx,0x8
   1400166d4:	je     0x140016844
   1400166da:	cmp    ecx,0x8
   1400166dd:	je     0x14001674b
   1400166df:	lea    rcx,[rbp+0x110]
   1400166e6:	xor    edx,edx
   1400166e8:	call   0x140014a54
   1400166ed:	lea    rcx,[rbp+0xb0]
   1400166f4:	mov    dl,0x60
   1400166f6:	mov    rbx,rax
   1400166f9:	call   0x14001197c
   1400166fe:	lea    rcx,[rsp+0x70]
   140016703:	mov    rdx,rax
   140016706:	call   0x140011970
   14001670b:	lea    rcx,[rsp+0x70]
   140016710:	mov    rdx,rbx
   140016713:	call   0x1400122b0
   140016718:	lea    rcx,[rbp+0x30]
   14001671c:	mov    dl,0x27
   14001671e:	movaps xmm0,XMMWORD PTR [rsp+0x70]
   140016723:	movdqa XMMWORD PTR [rbp+0x30],xmm0
   140016728:	call   0x1400122f0
   14001672d:	lea    rcx,[rbp-0x70]
   140016731:	mov    rdx,rdi
   140016734:	movaps xmm0,XMMWORD PTR [rbp+0x30]
   140016738:	movdqa XMMWORD PTR [rbp-0x70],xmm0
   14001673d:	call   0x1400122b0
   140016742:	movaps xmm0,XMMWORD PTR [rbp-0x70]
   140016746:	jmp    0x140016a0c
   14001674b:	and    DWORD PTR [rsp+0x28],0xffff0000
   140016753:	inc    QWORD PTR [rip+0x2281e]        # 0x140038f78
   14001675a:	mov    QWORD PTR [rsp+0x20],r14
   14001675f:	lea    rcx,[rsp+0x40]
   140016764:	xor    r8d,r8d
   140016767:	mov    dl,0x1
   140016769:	call   0x14001800c
   14001676e:	cmp    BYTE PTR [rsp+0x48],r14b
   140016773:	jne    0x1400167b9
   140016775:	movaps xmm0,XMMWORD PTR [rsp+0x40]
   14001677a:	cmp    QWORD PTR [rsp+0x20],r14
   14001677f:	je     0x1400167b1
   140016781:	lea    rdx,[rip+0x1847c]        # 0x14002ec04
   140016788:	lea    rcx,[rbp+0x50]
   14001678c:	movdqa XMMWORD PTR [rbp+0x50],xmm0
   140016791:	call   0x14001240c
   140016796:	lea    rdx,[rsp+0x20]
   14001679b:	lea    rcx,[rbp+0x0]
   14001679f:	movaps xmm0,XMMWORD PTR [rbp+0x50]
   1400167a3:	movdqa XMMWORD PTR [rbp+0x0],xmm0
   1400167a8:	call   0x1400122b0
   1400167ad:	movaps xmm0,XMMWORD PTR [rbp+0x0]
   1400167b1:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   1400167b7:	jmp    0x1400167ce
   1400167b9:	mov    eax,DWORD PTR [rsp+0x28]
   1400167bd:	mov    QWORD PTR [rsp+0x20],r14
   1400167c2:	and    eax,0xffff0002
   1400167c7:	or     eax,0x2
   1400167ca:	mov    DWORD PTR [rsp+0x28],eax
   1400167ce:	cmp    BYTE PTR [rsp+0x28],r14b
   1400167d3:	jne    0x140016831
   1400167d5:	mov    rax,QWORD PTR [rip+0x2279c]        # 0x140038f78
   1400167dc:	cmp    BYTE PTR [rax],0x40
   1400167df:	jne    0x14001675f
   1400167e5:	lea    rcx,[rbp+0xf0]
   1400167ec:	mov    dl,0x5b
   1400167ee:	call   0x14001197c
   1400167f3:	lea    rdx,[rsp+0x20]
   1400167f8:	lea    rcx,[rbp-0x40]
   1400167fc:	movups xmm0,XMMWORD PTR [rax]
   1400167ff:	movdqu XMMWORD PTR [rbp-0x40],xmm0
   140016804:	call   0x1400122b0
   140016809:	movaps xmm0,XMMWORD PTR [rbp-0x40]
   14001680d:	lea    rcx,[rbp+0x40]
   140016811:	mov    dl,0x5d
   140016813:	movdqa XMMWORD PTR [rbp+0x40],xmm0
   140016818:	call   0x1400122f0
   14001681d:	movaps xmm0,XMMWORD PTR [rbp+0x40]
   140016821:	movdqu XMMWORD PTR [rdi],xmm0
   140016825:	inc    QWORD PTR [rip+0x2274c]        # 0x140038f78
   14001682c:	jmp    0x140016a10
   140016831:	and    DWORD PTR [rdi+0x8],0xffff00ff
   140016838:	mov    QWORD PTR [rdi],r14
   14001683b:	mov    BYTE PTR [rdi+0x8],0x2
   14001683f:	jmp    0x140016a10
   140016844:	inc    QWORD PTR [rip+0x2272d]        # 0x140038f78
   14001684b:	lea    rcx,[rbp+0x80]
   140016852:	xor    r8d,r8d
   140016855:	mov    dl,0x1
   140016857:	call   0x14001800c
   14001685c:	lea    rcx,[rbp-0x20]
   140016860:	mov    dl,0x5d
   140016862:	movups xmm0,XMMWORD PTR [rax]
   140016865:	movdqu XMMWORD PTR [rbp-0x20],xmm0
   14001686a:	call   0x1400122f0
   14001686f:	movaps xmm0,XMMWORD PTR [rbp-0x20]
   140016873:	lea    rcx,[rbp+0x20]
   140016877:	mov    rdx,rdi
   14001687a:	movdqa XMMWORD PTR [rbp+0x20],xmm0
   14001687f:	call   0x1400122b0
   140016884:	mov    sil,0x1
   140016887:	movaps xmm0,XMMWORD PTR [rbp+0x20]
   14001688b:	jmp    0x140016a0c
   140016890:	mov    rax,QWORD PTR [rip+0x226e1]        # 0x140038f78
   140016897:	lea    rcx,[rax+0x1]
   14001689b:	cmp    BYTE PTR [rcx],0x5f
   14001689e:	jne    0x1400168ef
   1400168a0:	cmp    BYTE PTR [rax+0x2],0x3f
   1400168a4:	jne    0x1400168ef
   1400168a6:	mov    QWORD PTR [rip+0x226cb],rcx        # 0x140038f78
   1400168ad:	lea    rcx,[rbp+0x90]
   1400168b4:	xor    r8d,r8d
   1400168b7:	xor    edx,edx
   1400168b9:	call   0x1400158dc
   1400168be:	lea    rcx,[rbp-0x60]
   1400168c2:	mov    rdx,rdi
   1400168c5:	movups xmm0,XMMWORD PTR [rax]
   1400168c8:	movdqu XMMWORD PTR [rbp-0x60],xmm0
   1400168cd:	call   0x1400122b0
   1400168d2:	movups xmm0,XMMWORD PTR [rbp-0x60]
   1400168d6:	movdqu XMMWORD PTR [rdi],xmm0
   1400168da:	mov    rax,QWORD PTR [rip+0x22697]        # 0x140038f78
   1400168e1:	cmp    BYTE PTR [rax],0x40
   1400168e4:	jne    0x140016a10
   1400168ea:	jmp    0x140016825
   1400168ef:	lea    rcx,[rbp+0xa0]
   1400168f6:	call   0x1400147e0
   1400168fb:	lea    rcx,[rbp+0xc0]
   140016902:	mov    dl,0x60
   140016904:	mov    rbx,rax
   140016907:	call   0x14001197c
   14001690c:	lea    rcx,[rbp-0x50]
   140016910:	mov    rdx,rbx
   140016913:	movups xmm0,XMMWORD PTR [rax]
   140016916:	movdqu XMMWORD PTR [rbp-0x50],xmm0
   14001691b:	call   0x1400122b0
   140016920:	movaps xmm0,XMMWORD PTR [rbp-0x50]
   140016924:	lea    rcx,[rbp-0x30]
   140016928:	mov    dl,0x27
   14001692a:	movdqa XMMWORD PTR [rbp-0x30],xmm0
   14001692f:	call   0x1400122f0
   140016934:	lea    rcx,[rsp+0x50]
   140016939:	movaps xmm0,XMMWORD PTR [rbp-0x30]
   14001693d:	mov    rdx,rdi
   140016940:	movdqa XMMWORD PTR [rsp+0x50],xmm0
   140016946:	call   0x1400122b0
   14001694b:	movaps xmm0,XMMWORD PTR [rsp+0x50]
   140016950:	jmp    0x140016a0c
   140016955:	lea    rdx,[rip+0x2261c]        # 0x140038f78
   14001695c:	lea    rcx,[rbp+0x60]
   140016960:	mov    r8b,0x40
   140016963:	call   0x140011890
   140016968:	lea    rdx,[rip+0x182c9]        # 0x14002ec38
   14001696f:	lea    rcx,[rbp+0xe0]
   140016976:	call   0x140011a3c
   14001697b:	lea    rcx,[rbp+0x10]
   14001697f:	mov    rdx,rdi
   140016982:	movups xmm0,XMMWORD PTR [rax]
   140016985:	movdqu XMMWORD PTR [rbp+0x10],xmm0
   14001698a:	call   0x1400122b0
   14001698f:	movups xmm0,XMMWORD PTR [rbp+0x10]
   140016993:	movdqu XMMWORD PTR [rdi],xmm0
   140016997:	mov    rcx,QWORD PTR [rip+0x225ca]        # 0x140038f68
   14001699e:	cmp    DWORD PTR [rcx],0x9
   1400169a1:	je     0x140016a10
   1400169a3:	lea    rdx,[rbp+0x60]
   1400169a7:	call   0x1400124dc
   1400169ac:	jmp    0x140016a10
   1400169ae:	dec    QWORD PTR [rip+0x225c3]        # 0x140038f78
   1400169b5:	lea    rcx,[rbp+0x100]
   1400169bc:	xor    r8d,r8d
   1400169bf:	mov    dl,0x1
   1400169c1:	call   0x14001800c
   1400169c6:	lea    rcx,[rsp+0x60]
   1400169cb:	mov    rdx,rdi
   1400169ce:	movups xmm0,XMMWORD PTR [rax]
   1400169d1:	movdqu XMMWORD PTR [rsp+0x60],xmm0
   1400169d7:	call   0x1400122b0
   1400169dc:	movups xmm0,XMMWORD PTR [rsp+0x60]
   1400169e1:	jmp    0x140016a0c
   1400169e3:	lea    rcx,[rbp+0x70]
   1400169e7:	xor    r8d,r8d
   1400169ea:	mov    dl,0x1
   1400169ec:	call   0x14001800c
   1400169f1:	lea    rcx,[rsp+0x30]
   1400169f6:	mov    rdx,rdi
   1400169f9:	movups xmm0,XMMWORD PTR [rax]
   1400169fc:	movdqu XMMWORD PTR [rsp+0x30],xmm0
   140016a02:	call   0x1400122b0
   140016a07:	movups xmm0,XMMWORD PTR [rsp+0x30]
   140016a0c:	movdqu XMMWORD PTR [rdi],xmm0
   140016a10:	cmp    BYTE PTR [rdi+0x8],r14b
   140016a14:	jmp    0x1400165ff
   140016a19:	mov    rax,QWORD PTR [rip+0x22558]        # 0x140038f78
   140016a20:	cmp    BYTE PTR [rax],r14b
   140016a23:	je     0x140016a3a
   140016a25:	cmp    BYTE PTR [rax],0x40
   140016a28:	je     0x140016a92
   140016a2a:	and    DWORD PTR [rdi+0x8],0xffff00ff
   140016a31:	mov    QWORD PTR [rdi],r14
   140016a34:	mov    BYTE PTR [rdi+0x8],0x2
   140016a38:	jmp    0x140016a92
   140016a3a:	mov    edx,0x1
   140016a3f:	cmp    QWORD PTR [rdi],r14
   140016a42:	jne    0x140016a4e
   140016a44:	mov    rcx,rdi
   140016a47:	call   0x140011ed0
   140016a4c:	jmp    0x140016a92
   140016a4e:	lea    rcx,[rbp+0x70]
   140016a52:	call   0x140011a84
   140016a57:	lea    rdx,[rip+0x181a6]        # 0x14002ec04
   140016a5e:	lea    rcx,[rsp+0x30]
   140016a63:	movups xmm0,XMMWORD PTR [rax]
   140016a66:	movdqu XMMWORD PTR [rsp+0x30],xmm0
   140016a6c:	call   0x14001240c
   140016a71:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   140016a76:	lea    rcx,[rsp+0x30]
   140016a7b:	mov    rdx,rdi
   140016a7e:	movdqa XMMWORD PTR [rsp+0x30],xmm0
   140016a84:	call   0x1400122b0
   140016a89:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   140016a8e:	movdqu XMMWORD PTR [rdi],xmm0
   140016a92:	lea    r11,[rsp+0x230]
   140016a9a:	mov    rax,rdi
   140016a9d:	mov    rbx,QWORD PTR [r11+0x10]
   140016aa1:	mov    rsi,QWORD PTR [r11+0x18]
   140016aa5:	mov    rdi,QWORD PTR [r11+0x20]
   140016aa9:	mov    r14,QWORD PTR [r11+0x28]
   140016aad:	mov    rsp,r11
   140016ab0:	pop    rbp
   140016ab1:	ret    
   140016ab2:	int3   
   140016ab3:	int3   
   140016ab4:	mov    QWORD PTR [rsp+0x8],rbx
   140016ab9:	push   rbp
   140016aba:	mov    rbp,rsp
   140016abd:	sub    rsp,0x40
   140016ac1:	and    QWORD PTR [rcx],0x0
   140016ac5:	mov    BYTE PTR [rcx+0x8],0x0
   140016ac9:	and    DWORD PTR [rcx+0x8],0xffff00ff
   140016ad0:	mov    rbx,rcx
   140016ad3:	lea    rcx,[rbp-0x20]
   140016ad7:	xor    r8d,r8d
   140016ada:	mov    dl,0x1
   140016adc:	call   0x14001800c
   140016ae1:	movups xmm0,XMMWORD PTR [rax]
   140016ae4:	movdqu XMMWORD PTR [rbx],xmm0
   140016ae8:	cmp    BYTE PTR [rbx+0x8],0x0
   140016aec:	mov    rax,QWORD PTR [rip+0x22485]        # 0x140038f78
   140016af3:	jne    0x140016b44
   140016af5:	cmp    BYTE PTR [rax],0x0
   140016af8:	je     0x140016b44
   140016afa:	cmp    BYTE PTR [rax],0x40
   140016afd:	je     0x140016b49
   140016aff:	lea    rcx,[rbp-0x10]
   140016b03:	call   0x1400165c0
   140016b08:	lea    rdx,[rip+0x180f5]        # 0x14002ec04
   140016b0f:	lea    rcx,[rbp-0x20]
   140016b13:	movups xmm0,XMMWORD PTR [rax]
   140016b16:	movdqu XMMWORD PTR [rbp-0x20],xmm0
   140016b1b:	call   0x14001240c
   140016b20:	movaps xmm0,XMMWORD PTR [rbp-0x20]
   140016b24:	lea    rcx,[rbp-0x20]
   140016b28:	mov    rdx,rbx
   140016b2b:	movdqa XMMWORD PTR [rbp-0x20],xmm0
   140016b30:	call   0x1400122b0
   140016b35:	movaps xmm0,XMMWORD PTR [rbp-0x20]
   140016b39:	movdqu XMMWORD PTR [rbx],xmm0
   140016b3d:	mov    rax,QWORD PTR [rip+0x22434]        # 0x140038f78
   140016b44:	cmp    BYTE PTR [rax],0x40
   140016b47:	jne    0x140016b55
   140016b49:	inc    rax
   140016b4c:	mov    QWORD PTR [rip+0x22425],rax        # 0x140038f78
   140016b53:	jmp    0x140016bbe
   140016b55:	cmp    BYTE PTR [rax],0x0
   140016b58:	je     0x140016b6b
   140016b5a:	and    DWORD PTR [rbx+0x8],0xffff00ff
   140016b61:	and    QWORD PTR [rbx],0x0
   140016b65:	mov    BYTE PTR [rbx+0x8],0x2
   140016b69:	jmp    0x140016bbe
   140016b6b:	cmp    QWORD PTR [rbx],0x0
   140016b6f:	mov    edx,0x1
   140016b74:	jne    0x140016b80
   140016b76:	mov    rcx,rbx
   140016b79:	call   0x140011ed0
   140016b7e:	jmp    0x140016bbe
   140016b80:	lea    rcx,[rbp-0x10]
   140016b84:	call   0x140011a84
   140016b89:	lea    rdx,[rip+0x18074]        # 0x14002ec04
   140016b90:	lea    rcx,[rbp-0x20]
   140016b94:	movups xmm0,XMMWORD PTR [rax]
   140016b97:	movdqu XMMWORD PTR [rbp-0x20],xmm0
   140016b9c:	call   0x14001240c
   140016ba1:	movaps xmm0,XMMWORD PTR [rbp-0x20]
   140016ba5:	lea    rcx,[rbp-0x20]
   140016ba9:	mov    rdx,rbx
   140016bac:	movdqa XMMWORD PTR [rbp-0x20],xmm0
   140016bb1:	call   0x1400122b0
   140016bb6:	movaps xmm0,XMMWORD PTR [rbp-0x20]
   140016bba:	movdqu XMMWORD PTR [rbx],xmm0
   140016bbe:	mov    rax,rbx
   140016bc1:	mov    rbx,QWORD PTR [rsp+0x50]
   140016bc6:	add    rsp,0x40
   140016bca:	pop    rbp
   140016bcb:	ret    
   140016bcc:	mov    QWORD PTR [rsp+0x8],rbx
   140016bd1:	push   rdi
   140016bd2:	sub    rsp,0x40
   140016bd6:	mov    rdi,rcx
   140016bd9:	mov    rcx,QWORD PTR [rip+0x22398]        # 0x140038f78
   140016be0:	mov    al,BYTE PTR [rcx]
   140016be2:	test   al,al
   140016be4:	jne    0x140016bf5
   140016be6:	mov    edx,0x1
   140016beb:	mov    rcx,rdi
   140016bee:	call   0x140011a84
   140016bf3:	jmp    0x140016c3a
   140016bf5:	xor    edx,edx
   140016bf7:	cmp    al,0x3f
   140016bf9:	jne    0x140016c32
   140016bfb:	inc    rcx
   140016bfe:	mov    QWORD PTR [rip+0x22373],rcx        # 0x140038f78
   140016c05:	lea    rcx,[rsp+0x20]
   140016c0a:	call   0x140014a54
   140016c0f:	lea    rcx,[rsp+0x30]
   140016c14:	mov    dl,0x2d
   140016c16:	mov    rbx,rax
   140016c19:	call   0x14001197c
   140016c1e:	mov    rdx,rbx
   140016c21:	mov    rcx,rdi
   140016c24:	movups xmm0,XMMWORD PTR [rax]
   140016c27:	movdqu XMMWORD PTR [rdi],xmm0
   140016c2b:	call   0x1400122b0
   140016c30:	jmp    0x140016c3a
   140016c32:	mov    rcx,rdi
   140016c35:	call   0x140014a54
   140016c3a:	mov    rax,rdi
   140016c3d:	mov    rbx,QWORD PTR [rsp+0x50]
   140016c42:	add    rsp,0x40
   140016c46:	pop    rdi
   140016c47:	ret    
   140016c48:	mov    r11,rsp
   140016c4b:	push   rbx
   140016c4c:	sub    rsp,0x50
   140016c50:	mov    rbx,rcx
   140016c53:	xor    ecx,ecx
   140016c55:	mov    eax,0xffff0000
   140016c5a:	mov    QWORD PTR [r11-0x28],rcx
   140016c5e:	and    DWORD PTR [rsp+0x38],eax
   140016c62:	mov    QWORD PTR [r11-0x18],rcx
   140016c66:	and    DWORD PTR [rsp+0x48],eax
   140016c6a:	mov    DWORD PTR [rsp+0x20],ecx
   140016c6e:	lea    r9,[r11-0x28]
   140016c72:	lea    r8,[rip+0x13dd7]        # 0x14002aa50
   140016c79:	lea    rdx,[r11-0x18]
   140016c7d:	mov    rcx,rbx
   140016c80:	call   0x140013fc0
   140016c85:	mov    rax,rbx
   140016c88:	add    rsp,0x50
   140016c8c:	pop    rbx
   140016c8d:	ret    
   140016c8e:	int3   
   140016c8f:	int3   
   140016c90:	mov    rcx,QWORD PTR [rcx]
   140016c93:	test   rcx,rcx
   140016c96:	jne    0x140016c9c
   140016c98:	mov    rax,rdx
   140016c9b:	ret    
   140016c9c:	mov    rax,QWORD PTR [rcx]
   140016c9f:	rex.W jmp QWORD PTR [rax+0x10]
   140016ca3:	int3   
   140016ca4:	mov    QWORD PTR [rsp+0x8],rbx
   140016ca9:	mov    QWORD PTR [rsp+0x10],rsi
   140016cae:	push   rdi
   140016caf:	sub    rsp,0x20
   140016cb3:	mov    rdi,rcx
   140016cb6:	mov    rcx,QWORD PTR [rcx]
   140016cb9:	mov    esi,r8d
   140016cbc:	mov    rbx,rdx
   140016cbf:	test   rcx,rcx
   140016cc2:	je     0x140016d10
   140016cc4:	test   rdx,rdx
   140016cc7:	jne    0x140016ceb
   140016cc9:	mov    rax,QWORD PTR [rcx]
   140016ccc:	call   QWORD PTR [rax]
   140016cce:	lea    rcx,[rip+0x222cb]        # 0x140038fa0
   140016cd5:	xor    r8d,r8d
   140016cd8:	lea    esi,[rax+0x1]
   140016cdb:	movsxd rdx,esi
   140016cde:	call   0x1400157b8
   140016ce3:	mov    rbx,rax
   140016ce6:	test   rax,rax
   140016ce9:	je     0x140016d18
   140016ceb:	mov    rcx,QWORD PTR [rdi]
   140016cee:	test   rcx,rcx
   140016cf1:	jne    0x140016cf8
   140016cf3:	mov    rax,rbx
   140016cf6:	jmp    0x140016d0b
   140016cf8:	mov    r9,QWORD PTR [rcx]
   140016cfb:	movsxd r8,esi
   140016cfe:	mov    rdx,rbx
   140016d01:	dec    r8
   140016d04:	add    r8,rbx
   140016d07:	call   QWORD PTR [r9+0x10]
   140016d0b:	mov    BYTE PTR [rax],0x0
   140016d0e:	jmp    0x140016d18
   140016d10:	test   rdx,rdx
   140016d13:	je     0x140016d18
   140016d15:	mov    BYTE PTR [rdx],0x0
   140016d18:	mov    rsi,QWORD PTR [rsp+0x38]
   140016d1d:	mov    rax,rbx
   140016d20:	mov    rbx,QWORD PTR [rsp+0x30]
   140016d25:	add    rsp,0x20
   140016d29:	pop    rdi
   140016d2a:	ret    
   140016d2b:	int3   
   140016d2c:	cmp    DWORD PTR [rcx+0x8],0x1
   140016d30:	jne    0x140016d6b
   140016d32:	sub    r8d,edx
   140016d35:	mov    ecx,0x4
   140016d3a:	cmp    r8d,ecx
   140016d3d:	cmovl  ecx,r8d
   140016d41:	test   ecx,ecx
   140016d43:	je     0x140016d64
   140016d45:	lea    r9,[rip+0x1832c]        # 0x14002f078
   140016d4c:	mov    r8,rdx
   140016d4f:	mov    r10d,ecx
   140016d52:	sub    r9,rdx
   140016d55:	mov    al,BYTE PTR [r9+r8*1]
   140016d59:	mov    BYTE PTR [r8],al
   140016d5c:	inc    r8
   140016d5f:	dec    r10
   140016d62:	jne    0x140016d55
   140016d64:	movsxd rax,ecx
   140016d67:	add    rax,rdx
   140016d6a:	ret    
   140016d6b:	mov    rax,rdx
   140016d6e:	ret    
   140016d6f:	int3   
   140016d70:	cmp    rdx,r8
   140016d73:	jae    0x140016d7d
   140016d75:	mov    al,BYTE PTR [rcx+0x8]
   140016d78:	mov    BYTE PTR [rdx],al
   140016d7a:	inc    rdx
   140016d7d:	mov    rax,rdx
   140016d80:	ret    
   140016d81:	int3   
   140016d82:	int3   
   140016d83:	int3   
   140016d84:	sub    rsp,0x28
   140016d88:	mov    rcx,QWORD PTR [rcx+0x8]
   140016d8c:	test   rcx,rcx
   140016d8f:	je     0x140016da2
   140016d91:	mov    rcx,QWORD PTR [rcx]
   140016d94:	test   rcx,rcx
   140016d97:	je     0x140016da2
   140016d99:	mov    rax,QWORD PTR [rcx]
   140016d9c:	call   QWORD PTR [rax+0x10]
   140016d9f:	mov    rdx,rax
   140016da2:	mov    rax,rdx
   140016da5:	add    rsp,0x28
   140016da9:	ret    
   140016daa:	int3   
   140016dab:	int3   
   140016dac:	mov    QWORD PTR [rsp+0x8],rbx
   140016db1:	push   rdi
   140016db2:	sub    rsp,0x20
   140016db6:	mov    rdi,rcx
   140016db9:	mov    rcx,QWORD PTR [rcx+0x8]
   140016dbd:	mov    rbx,r8
   140016dc0:	mov    rax,QWORD PTR [rcx]
   140016dc3:	call   QWORD PTR [rax+0x10]
   140016dc6:	cmp    rax,rbx
   140016dc9:	jae    0x140016ddc
   140016dcb:	mov    rcx,QWORD PTR [rdi+0x10]
   140016dcf:	mov    r8,rbx
   140016dd2:	mov    rdx,rax
   140016dd5:	mov    r9,QWORD PTR [rcx]
   140016dd8:	call   QWORD PTR [r9+0x10]
   140016ddc:	mov    rbx,QWORD PTR [rsp+0x30]
   140016de1:	add    rsp,0x20
   140016de5:	pop    rdi
   140016de6:	ret    
   140016de7:	int3   
   140016de8:	mov    r9d,DWORD PTR [rcx+0x10]
   140016dec:	mov    r10,QWORD PTR [rcx+0x8]
   140016df0:	sub    r8d,edx
   140016df3:	cmp    r9d,r8d
   140016df6:	cmovg  r9d,r8d
   140016dfa:	test   r9d,r9d
   140016dfd:	je     0x140016e16
   140016dff:	mov    rcx,rdx
   140016e02:	sub    r10,rdx
   140016e05:	mov    r8d,r9d
   140016e08:	mov    al,BYTE PTR [r10+rcx*1]
   140016e0c:	mov    BYTE PTR [rcx],al
   140016e0e:	inc    rcx
   140016e11:	dec    r8
   140016e14:	jne    0x140016e08
   140016e16:	movsxd rax,r9d
   140016e19:	add    rax,rdx
   140016e1c:	ret    
   140016e1d:	int3   
   140016e1e:	int3   
   140016e1f:	int3   
   140016e20:	rex push rbx
   140016e22:	sub    rsp,0x40
   140016e26:	mov    rbx,rcx
   140016e29:	lea    rcx,[rsp+0x20]
   140016e2e:	call   0x140011a3c
   140016e33:	mov    rdx,QWORD PTR [rip+0x2213e]        # 0x140038f78
   140016e3a:	mov    al,BYTE PTR [rdx]
   140016e3c:	inc    rdx
   140016e3f:	mov    QWORD PTR [rip+0x22132],rdx        # 0x140038f78
   140016e46:	cmp    al,0x40
   140016e48:	jne    0x140016ec9
   140016e4a:	mov    al,BYTE PTR [rdx]
   140016e4c:	inc    rdx
   140016e4f:	mov    QWORD PTR [rip+0x22122],rdx        # 0x140038f78
   140016e56:	cmp    al,0x5f
   140016e58:	jne    0x140016ec9
   140016e5a:	inc    rdx
   140016e5d:	lea    rcx,[rsp+0x30]
   140016e62:	mov    QWORD PTR [rip+0x2210f],rdx        # 0x140038f78
   140016e69:	xor    edx,edx
   140016e6b:	call   0x140014a54
   140016e70:	lea    rcx,[rsp+0x30]
   140016e75:	xor    edx,edx
   140016e77:	call   0x140014a54
   140016e7c:	mov    rax,QWORD PTR [rip+0x220f5]        # 0x140038f78
   140016e83:	mov    cl,BYTE PTR [rax]
   140016e85:	test   cl,cl
   140016e87:	je     0x140016eb8
   140016e89:	cmp    cl,0x40
   140016e8c:	je     0x140016e9e
   140016e8e:	inc    rax
   140016e91:	mov    QWORD PTR [rip+0x220e0],rax        # 0x140038f78
   140016e98:	mov    cl,BYTE PTR [rax]
   140016e9a:	test   cl,cl
   140016e9c:	jne    0x140016e89
   140016e9e:	cmp    BYTE PTR [rax],0x0
   140016ea1:	je     0x140016eb8
   140016ea3:	movups xmm0,XMMWORD PTR [rsp+0x20]
   140016ea8:	inc    rax
   140016eab:	mov    QWORD PTR [rip+0x220c6],rax        # 0x140038f78
   140016eb2:	movdqu XMMWORD PTR [rbx],xmm0
   140016eb6:	jmp    0x140016ed6
   140016eb8:	dec    rax
   140016ebb:	mov    edx,0x1
   140016ec0:	mov    QWORD PTR [rip+0x220b1],rax        # 0x140038f78
   140016ec7:	jmp    0x140016ece
   140016ec9:	mov    edx,0x2
   140016ece:	mov    rcx,rbx
   140016ed1:	call   0x140011a84
   140016ed6:	mov    rax,rbx
   140016ed9:	add    rsp,0x40
   140016edd:	pop    rbx
   140016ede:	ret    
   140016edf:	int3   
   140016ee0:	sub    edx,ecx
   140016ee2:	cmp    r9d,edx
   140016ee5:	cmovg  r9d,edx
   140016ee9:	test   r9d,r9d
   140016eec:	je     0x140016f05
   140016eee:	mov    rdx,rcx
   140016ef1:	sub    r8,rcx
   140016ef4:	mov    r10d,r9d
   140016ef7:	mov    al,BYTE PTR [r8+rdx*1]
   140016efb:	mov    BYTE PTR [rdx],al
   140016efd:	inc    rdx
   140016f00:	dec    r10
   140016f03:	jne    0x140016ef7
   140016f05:	movsxd rax,r9d
   140016f08:	add    rax,rcx
   140016f0b:	ret    
   140016f0c:	rex push rbx
   140016f0e:	sub    rsp,0x20
   140016f12:	mov    rax,QWORD PTR [rip+0x2205f]        # 0x140038f78
   140016f19:	mov    rbx,rcx
   140016f1c:	cmp    BYTE PTR [rax],0x3f
   140016f1f:	jne    0x140016f45
   140016f21:	inc    rax
   140016f24:	cmp    BYTE PTR [rax],0x24
   140016f27:	jne    0x140016f32
   140016f29:	mov    dl,0x1
   140016f2b:	call   0x1400175c0
   140016f30:	jmp    0x140016f4f
   140016f32:	xor    r8d,r8d
   140016f35:	xor    edx,edx
   140016f37:	mov    QWORD PTR [rip+0x2203a],rax        # 0x140038f78
   140016f3e:	call   0x1400158dc
   140016f43:	jmp    0x140016f4f
   140016f45:	xor    r8d,r8d
   140016f48:	mov    dl,0x1
   140016f4a:	call   0x14001800c
   140016f4f:	mov    rax,rbx
   140016f52:	add    rsp,0x20
   140016f56:	pop    rbx
   140016f57:	ret    
   140016f58:	mov    rax,rsp
   140016f5b:	mov    QWORD PTR [rax+0x10],rbx
   140016f5f:	mov    QWORD PTR [rax+0x18],rsi
   140016f63:	mov    QWORD PTR [rax+0x20],rdi
   140016f67:	push   rbp
   140016f68:	push   r14
   140016f6a:	push   r15
   140016f6c:	lea    rbp,[rax-0x5f]
   140016f70:	sub    rsp,0x100
   140016f77:	mov    rax,QWORD PTR [rip+0x1fac2]        # 0x140036a40
   140016f7e:	xor    rax,rsp
   140016f81:	mov    QWORD PTR [rbp+0x37],rax
   140016f85:	and    QWORD PTR [rcx],0x0
   140016f89:	mov    BYTE PTR [rcx+0x8],0x0
   140016f8d:	and    DWORD PTR [rcx+0x8],0xffff00ff
   140016f94:	mov    r15b,0x1
   140016f97:	mov    rbx,rcx
   140016f9a:	mov    BYTE PTR [rip+0x21ff8],r15b        # 0x140038f99
   140016fa1:	cmp    BYTE PTR [rcx+0x8],0x0
   140016fa5:	jne    0x14001720f
   140016fab:	mov    rcx,QWORD PTR [rip+0x21fc6]        # 0x140038f78
   140016fb2:	test   BYTE PTR [rcx],0xbf
   140016fb5:	je     0x14001720f
   140016fbb:	xor    sil,sil
   140016fbe:	test   r15b,r15b
   140016fc1:	je     0x140016fc8
   140016fc3:	xor    r15b,r15b
   140016fc6:	jmp    0x140016fcb
   140016fc8:	mov    sil,0x1
   140016fcb:	movsx  r8d,BYTE PTR [rcx]
   140016fcf:	sub    r8d,0x30
   140016fd3:	cmp    r8d,0x9
   140016fd7:	ja     0x140017003
   140016fd9:	inc    rcx
   140016fdc:	lea    rdx,[rbp-0x29]
   140016fe0:	mov    QWORD PTR [rip+0x21f91],rcx        # 0x140038f78
   140016fe7:	mov    rcx,QWORD PTR [rip+0x21f82]        # 0x140038f70
   140016fee:	call   0x140011f0c
   140016ff3:	mov    rcx,rbx
   140016ff6:	mov    rdx,rax
   140016ff9:	call   0x1400122b0
   140016ffe:	jmp    0x1400171fe
   140017003:	and    QWORD PTR [rsp+0x20],0x0
   140017009:	and    DWORD PTR [rsp+0x28],0xffff0000
   140017011:	xor    dil,dil
   140017014:	cmp    BYTE PTR [rcx],0x24
   140017017:	mov    r14,rcx
   14001701a:	jne    0x140017037
   14001701c:	cmp    BYTE PTR [rcx+0x1],0x24
   140017020:	jne    0x140017037
   140017022:	mov    al,BYTE PTR [rcx+0x2]
   140017025:	cmp    al,0x57
   140017027:	jne    0x14001705d
   140017029:	add    rcx,0x3
   14001702d:	mov    dil,0x1
   140017030:	mov    QWORD PTR [rip+0x21f41],rcx        # 0x140038f78
   140017037:	mov    al,BYTE PTR [rcx]
   140017039:	cmp    al,0x58
   14001703b:	jne    0x140017071
   14001703d:	inc    rcx
   140017040:	lea    rdx,[rip+0x17c31]        # 0x14002ec78
   140017047:	mov    QWORD PTR [rip+0x21f2a],rcx        # 0x140038f78
   14001704e:	lea    rcx,[rsp+0x20]
   140017053:	call   0x140011e90
   140017058:	jmp    0x140017193
   14001705d:	cmp    al,0x56
   14001705f:	jne    0x140017037
   140017061:	add    rcx,0x3
   140017065:	mov    QWORD PTR [rip+0x21f0c],rcx        # 0x140038f78
   14001706c:	jmp    0x140017205
   140017071:	cmp    al,0x24
   140017073:	jne    0x140017091
   140017075:	inc    rcx
   140017078:	cmp    BYTE PTR [rcx],al
   14001707a:	je     0x140017091
   14001707c:	mov    QWORD PTR [rip+0x21ef5],rcx        # 0x140038f78
   140017083:	lea    rcx,[rbp-0x9]
   140017087:	call   0x140017244
   14001708c:	jmp    0x14001718a
   140017091:	cmp    al,0x3f
   140017093:	jne    0x140017171
   140017099:	lea    rcx,[rsp+0x30]
   14001709e:	call   0x140016bcc
   1400170a3:	test   DWORD PTR [rip+0x21ee7],0x4000        # 0x140038f94
   1400170ad:	je     0x140017126
   1400170af:	lea    rdx,[rbp+0x27]
   1400170b3:	lea    rcx,[rsp+0x30]
   1400170b8:	mov    r8d,0x10
   1400170be:	call   0x140016ca4
   1400170c3:	lea    rcx,[rbp+0x27]
   1400170c7:	call   0x14001c554
   1400170cc:	mov    ecx,eax
   1400170ce:	call   QWORD PTR [rip+0x21e84]        # 0x140038f58
   1400170d4:	test   rax,rax
   1400170d7:	je     0x1400170e1
   1400170d9:	mov    rdx,rax
   1400170dc:	jmp    0x14001704e
   1400170e1:	lea    rdx,[rip+0x17b98]        # 0x14002ec80
   1400170e8:	lea    rcx,[rbp-0x19]
   1400170ec:	call   0x140011a3c
   1400170f1:	lea    rdx,[rsp+0x30]
   1400170f6:	lea    rcx,[rbp-0x39]
   1400170fa:	movups xmm0,XMMWORD PTR [rax]
   1400170fd:	movdqu XMMWORD PTR [rbp-0x39],xmm0
   140017102:	call   0x1400122b0
   140017107:	movaps xmm0,XMMWORD PTR [rbp-0x39]
   14001710b:	lea    rdx,[rip+0x17b22]        # 0x14002ec34
   140017112:	lea    rcx,[rbp-0x49]
   140017116:	movdqa XMMWORD PTR [rbp-0x49],xmm0
   14001711b:	call   0x14001240c
   140017120:	movaps xmm0,XMMWORD PTR [rbp-0x49]
   140017124:	jmp    0x140017169
   140017126:	lea    rdx,[rip+0x17b53]        # 0x14002ec80
   14001712d:	lea    rcx,[rbp+0x17]
   140017131:	call   0x140011a3c
   140017136:	lea    rdx,[rsp+0x30]
   14001713b:	lea    rcx,[rbp-0x59]
   14001713f:	movups xmm0,XMMWORD PTR [rax]
   140017142:	movdqu XMMWORD PTR [rbp-0x59],xmm0
   140017147:	call   0x1400122b0
   14001714c:	movaps xmm0,XMMWORD PTR [rbp-0x59]
   140017150:	lea    rdx,[rip+0x17add]        # 0x14002ec34
   140017157:	lea    rcx,[rbp-0x69]
   14001715b:	movdqa XMMWORD PTR [rbp-0x69],xmm0
   140017160:	call   0x14001240c
   140017165:	movaps xmm0,XMMWORD PTR [rbp-0x69]
   140017169:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   14001716f:	jmp    0x140017193
   140017171:	and    QWORD PTR [rbp-0x79],0x0
   140017176:	and    DWORD PTR [rbp-0x71],0xffff0000
   14001717d:	lea    rdx,[rbp-0x79]
   140017181:	lea    rcx,[rbp+0x7]
   140017185:	call   0x140015ff8
   14001718a:	movups xmm0,XMMWORD PTR [rax]
   14001718d:	movdqu XMMWORD PTR [rsp+0x20],xmm0
   140017193:	mov    rcx,QWORD PTR [rip+0x21dde]        # 0x140038f78
   14001719a:	mov    rax,rcx
   14001719d:	sub    rax,r14
   1400171a0:	cmp    rax,0x1
   1400171a4:	jle    0x1400171c6
   1400171a6:	mov    rax,QWORD PTR [rip+0x21dc3]        # 0x140038f70
   1400171ad:	cmp    DWORD PTR [rax],0x9
   1400171b0:	je     0x1400171c6
   1400171b2:	lea    rdx,[rsp+0x20]
   1400171b7:	mov    rcx,rax
   1400171ba:	call   0x1400124dc
   1400171bf:	mov    rcx,QWORD PTR [rip+0x21db2]        # 0x140038f78
   1400171c6:	cmp    QWORD PTR [rsp+0x20],0x0
   1400171cc:	je     0x140017205
   1400171ce:	test   sil,sil
   1400171d1:	je     0x1400171dd
   1400171d3:	mov    dl,0x2c
   1400171d5:	mov    rcx,rbx
   1400171d8:	call   0x1400122f0
   1400171dd:	lea    rdx,[rsp+0x20]
   1400171e2:	mov    rcx,rbx
   1400171e5:	call   0x1400122b0
   1400171ea:	test   dil,dil
   1400171ed:	je     0x1400171fe
   1400171ef:	lea    rdx,[rip+0x17a9e]        # 0x14002ec94
   1400171f6:	mov    rcx,rbx
   1400171f9:	call   0x14001240c
   1400171fe:	mov    rcx,QWORD PTR [rip+0x21d73]        # 0x140038f78
   140017205:	cmp    BYTE PTR [rbx+0x8],0x0
   140017209:	je     0x140016fb2
   14001720f:	mov    BYTE PTR [rip+0x21d83],0x0        # 0x140038f99
   140017216:	mov    rax,rbx
   140017219:	mov    rcx,QWORD PTR [rbp+0x37]
   14001721d:	xor    rcx,rsp
   140017220:	call   0x14000d0a0
   140017225:	lea    r11,[rsp+0x100]
   14001722d:	mov    rbx,QWORD PTR [r11+0x28]
   140017231:	mov    rsi,QWORD PTR [r11+0x30]
   140017235:	mov    rdi,QWORD PTR [r11+0x38]
   140017239:	mov    rsp,r11
   14001723c:	pop    r15
   14001723e:	pop    r14
   140017240:	pop    rbp
   140017241:	ret    
   140017242:	int3   
   140017243:	int3   
   140017244:	mov    rax,rsp
   140017247:	mov    QWORD PTR [rax+0x10],rbx
   14001724b:	mov    QWORD PTR [rax+0x18],rsi
   14001724f:	mov    QWORD PTR [rax+0x20],rdi
   140017253:	push   rbp
   140017254:	lea    rbp,[rax-0x48]
   140017258:	sub    rsp,0x140
   14001725f:	mov    rax,QWORD PTR [rip+0x1f7da]        # 0x140036a40
   140017266:	xor    rax,rsp
   140017269:	mov    QWORD PTR [rbp+0x30],rax
   14001726d:	mov    rdi,rcx
   140017270:	mov    rcx,QWORD PTR [rip+0x21d01]        # 0x140038f78
   140017277:	movsx  esi,BYTE PTR [rcx]
   14001727a:	inc    rcx
   14001727d:	mov    QWORD PTR [rip+0x21cf4],rcx        # 0x140038f78
   140017284:	mov    ebx,esi
   140017286:	cmp    esi,0x45
   140017289:	jg     0x14001742e
   14001728f:	cmp    ebx,0x45
   140017292:	je     0x140017421
   140017298:	test   ebx,ebx
   14001729a:	je     0x14001740d
   1400172a0:	sub    ebx,0x30
   1400172a3:	je     0x140017400
   1400172a9:	dec    ebx
   1400172ab:	je     0x1400173b8
   1400172b1:	dec    ebx
   1400172b3:	je     0x14001730e
   1400172b5:	cmp    ebx,0x12
   1400172b8:	jne    0x14001734f
   1400172be:	lea    rcx,[rsp+0x20]
   1400172c3:	call   0x140016bcc
   1400172c8:	test   DWORD PTR [rip+0x21cc2],0x4000        # 0x140038f94
   1400172d2:	je     0x140017487
   1400172d8:	lea    rdx,[rbp-0x50]
   1400172dc:	lea    rcx,[rsp+0x20]
   1400172e1:	mov    r8d,0x10
   1400172e7:	call   0x140016ca4
   1400172ec:	lea    rcx,[rbp-0x50]
   1400172f0:	call   0x14001c554
   1400172f5:	mov    ecx,eax
   1400172f7:	call   QWORD PTR [rip+0x21c5b]        # 0x140038f58
   1400172fd:	test   rax,rax
   140017300:	je     0x140017487
   140017306:	mov    rdx,rax
   140017309:	jmp    0x1400173ce
   14001730e:	lea    rcx,[rsp+0x20]
   140017313:	call   0x140016bcc
   140017318:	lea    rcx,[rbp-0x50]
   14001731c:	call   0x140016bcc
   140017321:	cmp    BYTE PTR [rsp+0x28],0x1
   140017326:	jg     0x140017417
   14001732c:	cmp    BYTE PTR [rbp-0x48],0x1
   140017330:	jg     0x140017417
   140017336:	lea    rdx,[rbp-0x3f]
   14001733a:	lea    rcx,[rsp+0x20]
   14001733f:	mov    r8d,0x64
   140017345:	call   0x140016ca4
   14001734a:	test   rax,rax
   14001734d:	jne    0x140017361
   14001734f:	mov    edx,0x2
   140017354:	mov    rcx,rdi
   140017357:	call   0x140011a84
   14001735c:	jmp    0x140017595
   140017361:	mov    al,BYTE PTR [rbp-0x3f]
   140017364:	mov    BYTE PTR [rbp-0x40],al
   140017367:	cmp    al,0x2d
   140017369:	jne    0x140017377
   14001736b:	mov    al,BYTE PTR [rbp-0x3e]
   14001736e:	mov    BYTE PTR [rbp-0x3e],0x2e
   140017372:	mov    BYTE PTR [rbp-0x3f],al
   140017375:	jmp    0x14001737b
   140017377:	mov    BYTE PTR [rbp-0x3f],0x2e
   14001737b:	lea    rdx,[rbp-0x40]
   14001737f:	lea    rcx,[rsp+0x50]
   140017384:	call   0x140011a3c
   140017389:	lea    rcx,[rsp+0x20]
   14001738e:	mov    dl,0x65
   140017390:	movups xmm0,XMMWORD PTR [rax]
   140017393:	movdqu XMMWORD PTR [rsp+0x20],xmm0
   140017399:	call   0x1400122f0
   14001739e:	movups xmm0,XMMWORD PTR [rsp+0x20]
   1400173a3:	lea    rdx,[rbp-0x50]
   1400173a7:	mov    rcx,rdi
   1400173aa:	movdqu XMMWORD PTR [rdi],xmm0
   1400173ae:	call   0x1400122b0
   1400173b3:	jmp    0x140017595
   1400173b8:	cmp    BYTE PTR [rcx],0x40
   1400173bb:	jne    0x1400173db
   1400173bd:	inc    rcx
   1400173c0:	lea    rdx,[rip+0x178d1]        # 0x14002ec98
   1400173c7:	mov    QWORD PTR [rip+0x21baa],rcx        # 0x140038f78
   1400173ce:	mov    rcx,rdi
   1400173d1:	call   0x140011a3c
   1400173d6:	jmp    0x140017595
   1400173db:	lea    rcx,[rbp-0x70]
   1400173df:	call   0x1400147e0
   1400173e4:	lea    rdx,[rip+0x172d9]        # 0x14002e6c4
   1400173eb:	lea    rcx,[rsp+0x70]
   1400173f0:	mov    rbx,rax
   1400173f3:	call   0x140011a3c
   1400173f8:	mov    rdx,rbx
   1400173fb:	movups xmm0,XMMWORD PTR [rax]
   1400173fe:	jmp    0x1400173a7
   140017400:	mov    rcx,rdi
   140017403:	call   0x140016bcc
   140017408:	jmp    0x140017595
   14001740d:	dec    rcx
   140017410:	mov    QWORD PTR [rip+0x21b61],rcx        # 0x140038f78
   140017417:	mov    edx,0x1
   14001741c:	jmp    0x140017354
   140017421:	mov    rcx,rdi
   140017424:	call   0x1400147e0
   140017429:	jmp    0x140017595
   14001742e:	cmp    ebx,0x4a
   140017431:	jle    0x1400174d9
   140017437:	cmp    ebx,0x51
   14001743a:	je     0x1400172be
   140017440:	cmp    ebx,0x52
   140017443:	je     0x140017462
   140017445:	cmp    ebx,0x53
   140017448:	jne    0x14001734f
   14001744e:	and    QWORD PTR [rdi],0x0
   140017452:	mov    BYTE PTR [rdi+0x8],0x0
   140017456:	and    DWORD PTR [rdi+0x8],0xffff00ff
   14001745d:	jmp    0x140017595
   140017462:	lea    rcx,[rbp-0x50]
   140017466:	xor    r8d,r8d
   140017469:	xor    edx,edx
   14001746b:	call   0x14001800c
   140017470:	lea    rcx,[rsp+0x20]
   140017475:	call   0x140016bcc
   14001747a:	movups xmm0,XMMWORD PTR [rbp-0x50]
   14001747e:	movdqu XMMWORD PTR [rdi],xmm0
   140017482:	jmp    0x140017595
   140017487:	lea    rcx,[rsp+0x30]
   14001748c:	cmp    sil,0x44
   140017490:	jne    0x1400174d0
   140017492:	lea    rdx,[rip+0x177e7]        # 0x14002ec80
   140017499:	call   0x140011a3c
   14001749e:	lea    rdx,[rsp+0x20]
   1400174a3:	lea    rcx,[rbp-0x50]
   1400174a7:	movups xmm0,XMMWORD PTR [rax]
   1400174aa:	movdqu XMMWORD PTR [rbp-0x50],xmm0
   1400174af:	call   0x1400122b0
   1400174b4:	movups xmm0,XMMWORD PTR [rbp-0x50]
   1400174b8:	lea    rdx,[rip+0x17775]        # 0x14002ec34
   1400174bf:	mov    rcx,rdi
   1400174c2:	movdqu XMMWORD PTR [rdi],xmm0
   1400174c6:	call   0x14001240c
   1400174cb:	jmp    0x140017595
   1400174d0:	lea    rdx,[rip+0x17781]        # 0x14002ec58
   1400174d7:	jmp    0x140017499
   1400174d9:	lea    rcx,[rsp+0x20]
   1400174de:	mov    dl,0x7b
   1400174e0:	call   0x14001197c
   1400174e5:	sub    sil,0x48
   1400174e9:	cmp    sil,0x2
   1400174ed:	ja     0x140017512
   1400174ef:	lea    rcx,[rsp+0x40]
   1400174f4:	call   0x1400147e0
   1400174f9:	lea    rcx,[rsp+0x20]
   1400174fe:	mov    rdx,rax
   140017501:	call   0x1400122b0
   140017506:	lea    rcx,[rsp+0x20]
   14001750b:	mov    dl,0x2c
   14001750d:	call   0x1400122f0
   140017512:	sub    ebx,0x46
   140017515:	je     0x14001754a
   140017517:	dec    ebx
   140017519:	je     0x140017527
   14001751b:	dec    ebx
   14001751d:	je     0x14001756c
   14001751f:	dec    ebx
   140017521:	je     0x14001754a
   140017523:	dec    ebx
   140017525:	jne    0x140017582
   140017527:	lea    rcx,[rsp+0x60]
   14001752c:	call   0x140016bcc
   140017531:	lea    rcx,[rsp+0x20]
   140017536:	mov    rdx,rax
   140017539:	call   0x1400122b0
   14001753e:	lea    rcx,[rsp+0x20]
   140017543:	mov    dl,0x2c
   140017545:	call   0x1400122f0
   14001754a:	lea    rcx,[rbp-0x80]
   14001754e:	call   0x140016bcc
   140017553:	lea    rcx,[rsp+0x20]
   140017558:	mov    rdx,rax
   14001755b:	call   0x1400122b0
   140017560:	lea    rcx,[rsp+0x20]
   140017565:	mov    dl,0x2c
   140017567:	call   0x1400122f0
   14001756c:	lea    rcx,[rbp-0x60]
   140017570:	call   0x140016bcc
   140017575:	lea    rcx,[rsp+0x20]
   14001757a:	mov    rdx,rax
   14001757d:	call   0x1400122b0
   140017582:	movups xmm0,XMMWORD PTR [rsp+0x20]
   140017587:	mov    dl,0x7d
   140017589:	mov    rcx,rdi
   14001758c:	movdqu XMMWORD PTR [rdi],xmm0
   140017590:	call   0x1400122f0
   140017595:	mov    rax,rdi
   140017598:	mov    rcx,QWORD PTR [rbp+0x30]
   14001759c:	xor    rcx,rsp
   14001759f:	call   0x14000d0a0
   1400175a4:	lea    r11,[rsp+0x140]
   1400175ac:	mov    rbx,QWORD PTR [r11+0x18]
   1400175b0:	mov    rsi,QWORD PTR [r11+0x20]
   1400175b4:	mov    rdi,QWORD PTR [r11+0x28]
   1400175b8:	mov    rsp,r11
   1400175bb:	pop    rbp
   1400175bc:	ret    
   1400175bd:	int3   
   1400175be:	int3   
   1400175bf:	int3   
   1400175c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400175c5:	mov    QWORD PTR [rsp+0x10],rsi
   1400175ca:	mov    QWORD PTR [rsp+0x20],rdi
   1400175cf:	push   rbp
   1400175d0:	push   r12
   1400175d2:	push   r13
   1400175d4:	push   r14
   1400175d6:	push   r15
   1400175d8:	lea    rbp,[rsp-0x80]
   1400175dd:	sub    rsp,0x180
   1400175e4:	mov    rax,QWORD PTR [rip+0x2198d]        # 0x140038f78
   1400175eb:	mov    r14b,dl
   1400175ee:	mov    rdi,rcx
   1400175f1:	cmp    BYTE PTR [rax],0x3f
   1400175f4:	jne    0x140017760
   1400175fa:	cmp    BYTE PTR [rax+0x1],0x24
   1400175fe:	jne    0x140017760
   140017604:	mov    r15,QWORD PTR [rip+0x21955]        # 0x140038f60
   14001760b:	mov    r12,QWORD PTR [rip+0x21956]        # 0x140038f68
   140017612:	mov    r13,QWORD PTR [rip+0x21957]        # 0x140038f70
   140017619:	or     ecx,0xffffffff
   14001761c:	add    rax,0x2
   140017620:	xor    bl,bl
   140017622:	mov    DWORD PTR [rsp+0x60],ecx
   140017626:	mov    DWORD PTR [rbp-0x40],ecx
   140017629:	mov    DWORD PTR [rbp+0x20],ecx
   14001762c:	lea    rcx,[rsp+0x60]
   140017631:	mov    esi,0x1
   140017636:	mov    QWORD PTR [rip+0x2193b],rax        # 0x140038f78
   14001763d:	mov    QWORD PTR [rip+0x2191c],rcx        # 0x140038f60
   140017644:	lea    rcx,[rbp-0x40]
   140017648:	mov    BYTE PTR [rbp+0xc0],bl
   14001764e:	mov    QWORD PTR [rip+0x21913],rcx        # 0x140038f68
   140017655:	lea    rcx,[rbp+0x20]
   140017659:	mov    dl,sil
   14001765c:	mov    QWORD PTR [rip+0x2190d],rcx        # 0x140038f70
   140017663:	cmp    BYTE PTR [rax],0x3f
   140017666:	lea    rcx,[rsp+0x30]
   14001766b:	jne    0x14001768b
   14001766d:	add    rax,rsi
   140017670:	lea    r8,[rbp+0xc0]
   140017677:	mov    QWORD PTR [rip+0x218fa],rax        # 0x140038f78
   14001767e:	call   0x1400158dc
   140017683:	mov    bl,BYTE PTR [rbp+0xc0]
   140017689:	jmp    0x140017693
   14001768b:	mov    r8b,sil
   14001768e:	call   0x14001800c
   140017693:	movups xmm0,XMMWORD PTR [rax]
   140017696:	movzx  ecx,BYTE PTR [rip+0x218fb]        # 0x140038f98
   14001769d:	movq   rax,xmm0
   1400176a2:	movups XMMWORD PTR [rsp+0x20],xmm0
   1400176a7:	test   rax,rax
   1400176aa:	cmove  ecx,esi
   1400176ad:	mov    BYTE PTR [rip+0x218e5],cl        # 0x140038f98
   1400176b3:	test   bl,bl
   1400176b5:	jne    0x140017745
   1400176bb:	lea    rcx,[rsp+0x50]
   1400176c0:	call   0x140016f58
   1400176c5:	lea    rcx,[rsp+0x40]
   1400176ca:	mov    dl,0x3c
   1400176cc:	mov    rbx,rax
   1400176cf:	call   0x14001197c
   1400176d4:	lea    rcx,[rsp+0x30]
   1400176d9:	mov    rdx,rbx
   1400176dc:	movups xmm0,XMMWORD PTR [rax]
   1400176df:	movdqu XMMWORD PTR [rsp+0x30],xmm0
   1400176e5:	call   0x1400122b0
   1400176ea:	lea    rdx,[rsp+0x30]
   1400176ef:	lea    rcx,[rsp+0x20]
   1400176f4:	call   0x1400122b0
   1400176f9:	mov    rcx,QWORD PTR [rsp+0x20]
   1400176fe:	test   rcx,rcx
   140017701:	je     0x140017719
   140017703:	mov    rax,QWORD PTR [rcx]
   140017706:	call   QWORD PTR [rax+0x8]
   140017709:	cmp    al,0x3e
   14001770b:	jne    0x140017719
   14001770d:	lea    rcx,[rsp+0x20]
   140017712:	mov    dl,0x20
   140017714:	call   0x1400122f0
   140017719:	lea    rcx,[rsp+0x20]
   14001771e:	mov    dl,0x3e
   140017720:	call   0x1400122f0
   140017725:	test   r14b,r14b
   140017728:	je     0x140017740
   14001772a:	mov    rax,QWORD PTR [rip+0x21847]        # 0x140038f78
   140017731:	cmp    BYTE PTR [rax],0x0
   140017734:	je     0x140017740
   140017736:	add    rax,rsi
   140017739:	mov    QWORD PTR [rip+0x21838],rax        # 0x140038f78
   140017740:	movups xmm0,XMMWORD PTR [rsp+0x20]
   140017745:	mov    QWORD PTR [rip+0x21814],r15        # 0x140038f60
   14001774c:	mov    QWORD PTR [rip+0x21815],r12        # 0x140038f68
   140017753:	mov    QWORD PTR [rip+0x21816],r13        # 0x140038f70
   14001775a:	movdqu XMMWORD PTR [rdi],xmm0
   14001775e:	jmp    0x14001776a
   140017760:	mov    edx,0x2
   140017765:	call   0x140011a84
   14001776a:	lea    r11,[rsp+0x180]
   140017772:	mov    rax,rdi
   140017775:	mov    rbx,QWORD PTR [r11+0x30]
   140017779:	mov    rsi,QWORD PTR [r11+0x38]
   14001777d:	mov    rdi,QWORD PTR [r11+0x48]
   140017781:	mov    rsp,r11
   140017784:	pop    r15
   140017786:	pop    r14
   140017788:	pop    r13
   14001778a:	pop    r12
   14001778c:	pop    rbp
   14001778d:	ret    
   14001778e:	int3   
   14001778f:	int3   
   140017790:	mov    r11,rsp
   140017793:	push   rbx
   140017794:	sub    rsp,0x50
   140017798:	and    QWORD PTR [r11-0x28],0x0
   14001779d:	and    QWORD PTR [r11-0x18],0x0
   1400177a2:	mov    eax,0xffff0000
   1400177a7:	and    DWORD PTR [rsp+0x38],eax
   1400177ab:	and    DWORD PTR [rsp+0x48],eax
   1400177af:	lea    r9,[r11-0x28]
   1400177b3:	lea    r8,[rip+0x13296]        # 0x14002aa50
   1400177ba:	lea    rdx,[r11-0x18]
   1400177be:	mov    rbx,rcx
   1400177c1:	mov    DWORD PTR [rsp+0x20],0x1
   1400177c9:	call   0x140013fc0
   1400177ce:	mov    rax,rbx
   1400177d1:	add    rsp,0x50
   1400177d5:	pop    rbx
   1400177d6:	ret    
   1400177d7:	int3   
   1400177d8:	mov    QWORD PTR [rsp+0x8],rbx
   1400177dd:	mov    QWORD PTR [rsp+0x10],rdi
   1400177e2:	push   rbp
   1400177e3:	mov    rbp,rsp
   1400177e6:	sub    rsp,0x50
   1400177ea:	mov    rax,QWORD PTR [rip+0x21787]        # 0x140038f78
   1400177f1:	mov    rdi,rcx
   1400177f4:	cmp    BYTE PTR [rax],0x0
   1400177f7:	je     0x140017850
   1400177f9:	cmp    BYTE PTR [rax],0x5a
   1400177fc:	jne    0x14001781e
   1400177fe:	and    QWORD PTR [rbp-0x30],0x0
   140017803:	inc    rax
   140017806:	and    DWORD PTR [rbp-0x28],0xffff0000
   14001780d:	movups xmm0,XMMWORD PTR [rbp-0x30]
   140017811:	mov    QWORD PTR [rip+0x21760],rax        # 0x140038f78
   140017818:	movdqu XMMWORD PTR [rcx],xmm0
   14001781c:	jmp    0x140017888
   14001781e:	lea    rcx,[rbp-0x20]
   140017822:	call   0x140013694
   140017827:	lea    rdx,[rip+0x1762a]        # 0x14002ee58
   14001782e:	lea    rcx,[rbp-0x10]
   140017832:	mov    rbx,rax
   140017835:	call   0x140011a3c
   14001783a:	lea    rcx,[rbp-0x30]
   14001783e:	mov    rdx,rbx
   140017841:	movups xmm0,XMMWORD PTR [rax]
   140017844:	movdqu XMMWORD PTR [rbp-0x30],xmm0
   140017849:	call   0x1400122b0
   14001784e:	jmp    0x140017876
   140017850:	lea    rdx,[rip+0x17601]        # 0x14002ee58
   140017857:	lea    rcx,[rbp-0x10]
   14001785b:	call   0x140011a3c
   140017860:	lea    rcx,[rbp-0x30]
   140017864:	mov    edx,0x1
   140017869:	movups xmm0,XMMWORD PTR [rax]
   14001786c:	movdqu XMMWORD PTR [rbp-0x30],xmm0
   140017871:	call   0x140012498
   140017876:	movups xmm0,XMMWORD PTR [rbp-0x30]
   14001787a:	mov    dl,0x29
   14001787c:	mov    rcx,rdi
   14001787f:	movdqu XMMWORD PTR [rdi],xmm0
   140017883:	call   0x1400122f0
   140017888:	mov    rbx,QWORD PTR [rsp+0x60]
   14001788d:	mov    rax,rdi
   140017890:	mov    rdi,QWORD PTR [rsp+0x68]
   140017895:	add    rsp,0x50
   140017899:	pop    rbp
   14001789a:	ret    
   14001789b:	int3   
   14001789c:	sub    rsp,0x28
   1400178a0:	mov    r8,QWORD PTR [rip+0x216d1]        # 0x140038f78
   1400178a7:	mov    r9d,0x4000
   1400178ad:	xor    edx,edx
   1400178af:	cmp    BYTE PTR [r8],0x5f
   1400178b3:	jne    0x1400178c2
   1400178b5:	inc    r8
   1400178b8:	mov    edx,r9d
   1400178bb:	mov    QWORD PTR [rip+0x216b6],r8        # 0x140038f78
   1400178c2:	mov    al,BYTE PTR [r8]
   1400178c5:	sub    al,0x41
   1400178c7:	cmp    al,0x19
   1400178c9:	jbe    0x140017c84
   1400178cf:	cmp    BYTE PTR [r8],0x24
   1400178d3:	jne    0x140017b0e
   1400178d9:	inc    r8
   1400178dc:	xor    r10b,r10b
   1400178df:	mov    QWORD PTR [rip+0x21692],r8        # 0x140038f78
   1400178e6:	movsx  ecx,BYTE PTR [r8]
   1400178ea:	cmp    ecx,0x42
   1400178ed:	jg     0x1400179ea
   1400178f3:	je     0x1400179df
   1400178f9:	test   ecx,ecx
   1400178fb:	je     0x1400179d2
   140017901:	cmp    ecx,0x24
   140017904:	jne    0x1400179aa
   14001790a:	lea    rax,[r8+0x1]
   14001790e:	cmp    BYTE PTR [rax],0x50
   140017911:	cmove  r8,rax
   140017915:	inc    r8
   140017918:	mov    QWORD PTR [rip+0x21659],r8        # 0x140038f78
   14001791f:	cmp    BYTE PTR [r8],r10b
   140017922:	je     0x1400179a0
   140017924:	mov    al,BYTE PTR [r8]
   140017927:	sub    al,0x46
   140017929:	test   al,0xfd
   14001792b:	je     0x140017953
   14001792d:	cmp    BYTE PTR [r8],0x4a
   140017931:	je     0x140017962
   140017933:	cmp    BYTE PTR [r8],0x4b
   140017937:	jle    0x140017ce5
   14001793d:	cmp    BYTE PTR [r8],0x4d
   140017941:	jle    0x140017953
   140017943:	cmp    BYTE PTR [r8],0x4f
   140017947:	jle    0x140017962
   140017949:	cmp    BYTE PTR [r8],0x51
   14001794d:	jne    0x140017ce5
   140017953:	inc    r8
   140017956:	mov    QWORD PTR [rip+0x2161b],r8        # 0x140038f78
   14001795d:	jmp    0x1400178ad
   140017962:	inc    r8
   140017965:	mov    QWORD PTR [rip+0x2160c],r8        # 0x140038f78
   14001796c:	mov    al,BYTE PTR [r8]
   14001796f:	sub    al,0x30
   140017971:	cmp    al,0x9
   140017973:	ja     0x140017996
   140017975:	movsx  eax,BYTE PTR [r8]
   140017979:	sub    eax,0x2f
   14001797c:	cdqe   
   14001797e:	add    r8,rax
   140017981:	mov    QWORD PTR [rip+0x215f0],r8        # 0x140038f78
   140017988:	call   0x14001789c
   14001798d:	bts    eax,0x10
   140017991:	jmp    0x140017d76
   140017996:	mov    edx,0xffff
   14001799b:	jmp    0x140017aff
   1400179a0:	mov    eax,0xfffe
   1400179a5:	jmp    0x140017d76
   1400179aa:	cmp    ecx,0x2f
   1400179ad:	jle    0x140017ce5
   1400179b3:	cmp    ecx,0x35
   1400179b6:	jle    0x140017a27
   1400179b8:	cmp    ecx,0x41
   1400179bb:	jne    0x140017ce5
   1400179c1:	and    edx,0xfffff4ff
   1400179c7:	or     edx,0x9000
   1400179cd:	jmp    0x140017aff
   1400179d2:	mov    edx,0xfffe
   1400179d7:	dec    r8
   1400179da:	jmp    0x140017aff
   1400179df:	or     edx,0x9800
   1400179e5:	jmp    0x140017aff
   1400179ea:	sub    ecx,0x43
   1400179ed:	je     0x140017af9
   1400179f3:	dec    ecx
   1400179f5:	je     0x140017aeb
   1400179fb:	dec    ecx
   1400179fd:	je     0x140017add
   140017a03:	sub    ecx,0xd
   140017a06:	jne    0x140017ce5
   140017a0c:	inc    r8
   140017a0f:	mov    r10b,0x1
   140017a12:	mov    QWORD PTR [rip+0x2155f],r8        # 0x140038f78
   140017a19:	mov    cl,BYTE PTR [r8]
   140017a1c:	lea    eax,[rcx-0x30]
   140017a1f:	cmp    al,0x5
   140017a21:	ja     0x140017acd
   140017a27:	movsx  eax,BYTE PTR [r8]
   140017a2b:	mov    r9d,0x8000
   140017a31:	mov    r11d,0xffffefff
   140017a37:	or     edx,r9d
   140017a3a:	sub    eax,0x30
   140017a3d:	test   r9d,edx
   140017a40:	je     0x140017a4b
   140017a42:	and    edx,r11d
   140017a45:	bts    edx,0xb
   140017a49:	jmp    0x140017a51
   140017a4b:	and    edx,0xffff9fff
   140017a51:	test   r10b,r10b
   140017a54:	je     0x140017a62
   140017a56:	btr    edx,0x8
   140017a5a:	or     edx,0x600
   140017a60:	jmp    0x140017a6c
   140017a62:	btr    edx,0x9
   140017a66:	or     edx,0x500
   140017a6c:	test   al,0x1
   140017a6e:	je     0x140017a76
   140017a70:	bts    edx,0xd
   140017a74:	jmp    0x140017a7a
   140017a76:	btr    edx,0xd
   140017a7a:	and    eax,0x6
   140017a7d:	je     0x140017ab3
   140017a7f:	cmp    eax,0x2
   140017a82:	je     0x140017a9e
   140017a84:	cmp    eax,0x4
   140017a87:	jne    0x140017ce5
   140017a8d:	mov    eax,edx
   140017a8f:	mov    ecx,edx
   140017a91:	and    eax,0xffffff3f
   140017a96:	and    edx,0xffffe7ff
   140017a9c:	jmp    0x140017ac5
   140017a9e:	mov    eax,edx
   140017aa0:	mov    ecx,edx
   140017aa2:	btr    edx,0xb
   140017aa6:	and    eax,0xffffffbf
   140017aa9:	bts    eax,0x7
   140017aad:	bts    edx,0xc
   140017ab1:	jmp    0x140017ac5
   140017ab3:	mov    eax,edx
   140017ab5:	mov    ecx,edx
   140017ab7:	and    edx,r11d
   140017aba:	btr    eax,0x7
   140017abe:	or     eax,0x40
   140017ac1:	bts    edx,0xb
   140017ac5:	and    ecx,r9d
   140017ac8:	cmovne edx,eax
   140017acb:	jmp    0x140017aff
   140017acd:	neg    cl
   140017acf:	mov    edx,0xffff
   140017ad4:	sbb    eax,eax
   140017ad6:	add    eax,edx
   140017ad8:	jmp    0x140017d76
   140017add:	and    edx,0xfffff6ff
   140017ae3:	or     edx,0x9200
   140017ae9:	jmp    0x140017aff
   140017aeb:	and    edx,0xfffff5ff
   140017af1:	or     edx,0x9100
   140017af7:	jmp    0x140017aff
   140017af9:	or     edx,0x7c00
   140017aff:	inc    r8
   140017b02:	mov    QWORD PTR [rip+0x2146f],r8        # 0x140038f78
   140017b09:	jmp    0x140017d74
   140017b0e:	mov    cl,BYTE PTR [r8]
   140017b11:	lea    eax,[rcx-0x30]
   140017b14:	cmp    al,0x8
   140017b16:	ja     0x140017c59
   140017b1c:	inc    r8
   140017b1f:	movsx  ecx,cl
   140017b22:	btr    edx,0xf
   140017b26:	mov    QWORD PTR [rip+0x2144b],r8        # 0x140038f78
   140017b2d:	sub    ecx,0x30
   140017b30:	je     0x140017c19
   140017b36:	dec    ecx
   140017b38:	je     0x140017be7
   140017b3e:	dec    ecx
   140017b40:	je     0x140017bb9
   140017b42:	dec    ecx
   140017b44:	je     0x140017bad
   140017b46:	dec    ecx
   140017b48:	je     0x140017ba0
   140017b4a:	dec    ecx
   140017b4c:	je     0x140017b8f
   140017b4e:	dec    ecx
   140017b50:	je     0x140017b7e
   140017b52:	dec    ecx
   140017b54:	je     0x140017b6d
   140017b56:	dec    ecx
   140017b58:	jne    0x140017ce5
   140017b5e:	btr    edx,0xa
   140017b62:	or     edx,0x7800
   140017b68:	jmp    0x140017d74
   140017b6d:	and    edx,0xfffff3ff
   140017b73:	or     edx,0x7000
   140017b79:	jmp    0x140017d74
   140017b7e:	and    edx,0xffffebff
   140017b84:	or     edx,0x6800
   140017b8a:	jmp    0x140017d74
   140017b8f:	and    edx,0xffffe3ff
   140017b95:	or     edx,0x6000
   140017b9b:	jmp    0x140017d74
   140017ba0:	btr    edx,0xe
   140017ba4:	bts    edx,0xd
   140017ba8:	jmp    0x140017d74
   140017bad:	btr    edx,0xd
   140017bb1:	or     edx,r9d
   140017bb4:	jmp    0x140017d74
   140017bb9:	mov    r9d,0x8000
   140017bbf:	test   r9d,edx
   140017bc2:	je     0x140017bd0
   140017bc4:	and    edx,0xfffffaff
   140017bca:	bts    edx,0x9
   140017bce:	jmp    0x140017bd6
   140017bd0:	and    edx,0xffff9fff
   140017bd6:	mov    eax,edx
   140017bd8:	mov    ecx,edx
   140017bda:	and    eax,0xffffff3f
   140017bdf:	and    edx,0xffffe7ff
   140017be5:	jmp    0x140017c4e
   140017be7:	mov    r9d,0x8000
   140017bed:	test   r9d,edx
   140017bf0:	je     0x140017bfe
   140017bf2:	and    edx,0xfffffaff
   140017bf8:	bts    edx,0x9
   140017bfc:	jmp    0x140017c04
   140017bfe:	and    edx,0xffff9fff
   140017c04:	mov    eax,edx
   140017c06:	mov    ecx,edx
   140017c08:	btr    edx,0xb
   140017c0c:	and    eax,0xffffffbf
   140017c0f:	bts    eax,0x7
   140017c13:	bts    edx,0xc
   140017c17:	jmp    0x140017c4e
   140017c19:	mov    r9d,0x8000
   140017c1f:	test   r9d,edx
   140017c22:	je     0x140017c30
   140017c24:	and    edx,0xfffffaff
   140017c2a:	bts    edx,0x9
   140017c2e:	jmp    0x140017c36
   140017c30:	and    edx,0xffff9fff
   140017c36:	mov    eax,edx
   140017c38:	mov    ecx,edx
   140017c3a:	mov    r11d,0xffffefff
   140017c40:	btr    eax,0x7
   140017c44:	and    edx,r11d
   140017c47:	or     eax,0x40
   140017c4a:	bts    edx,0xb
   140017c4e:	and    ecx,r9d
   140017c51:	cmovne edx,eax
   140017c54:	jmp    0x140017d74
   140017c59:	cmp    cl,0x39
   140017c5c:	jne    0x140017c72
   140017c5e:	inc    r8
   140017c61:	mov    edx,0xfffd
   140017c66:	mov    QWORD PTR [rip+0x2130b],r8        # 0x140038f78
   140017c6d:	jmp    0x140017d74
   140017c72:	neg    cl
   140017c74:	mov    edx,0xfffe
   140017c79:	sbb    eax,eax
   140017c7b:	neg    eax
   140017c7d:	add    edx,eax
   140017c7f:	jmp    0x140017d74
   140017c84:	movsx  r10d,BYTE PTR [r8]
   140017c88:	inc    r8
   140017c8b:	mov    r9d,0x8000
   140017c91:	sub    r10d,0x41
   140017c95:	or     edx,r9d
   140017c98:	mov    QWORD PTR [rip+0x212d9],r8        # 0x140038f78
   140017c9f:	test   r10b,0x1
   140017ca3:	je     0x140017cab
   140017ca5:	bts    edx,0xd
   140017ca9:	jmp    0x140017caf
   140017cab:	btr    edx,0xd
   140017caf:	cmp    r10d,0x18
   140017cb3:	jge    0x140017d74
   140017cb9:	mov    r11d,0xffffefff
   140017cbf:	test   r9d,edx
   140017cc2:	je     0x140017ccd
   140017cc4:	and    edx,r11d
   140017cc7:	bts    edx,0xb
   140017ccb:	jmp    0x140017cd3
   140017ccd:	and    edx,0xffff9fff
   140017cd3:	mov    eax,r10d
   140017cd6:	and    eax,0x18
   140017cd9:	je     0x140017d15
   140017cdb:	cmp    eax,0x8
   140017cde:	je     0x140017d00
   140017ce0:	cmp    eax,0x10
   140017ce3:	je     0x140017cef
   140017ce5:	mov    eax,0xffff
   140017cea:	jmp    0x140017d76
   140017cef:	mov    eax,edx
   140017cf1:	mov    ecx,edx
   140017cf3:	and    eax,0xffffff3f
   140017cf8:	and    edx,0xffffe7ff
   140017cfe:	jmp    0x140017d27
   140017d00:	mov    eax,edx
   140017d02:	mov    ecx,edx
   140017d04:	btr    edx,0xb
   140017d08:	and    eax,0xffffffbf
   140017d0b:	bts    eax,0x7
   140017d0f:	bts    edx,0xc
   140017d13:	jmp    0x140017d27
   140017d15:	mov    eax,edx
   140017d17:	mov    ecx,edx
   140017d19:	and    edx,r11d
   140017d1c:	btr    eax,0x7
   140017d20:	or     eax,0x40
   140017d23:	bts    edx,0xb
   140017d27:	and    ecx,r9d
   140017d2a:	cmovne edx,eax
   140017d2d:	and    r10d,0x6
   140017d31:	je     0x140017d74
   140017d33:	cmp    r10d,0x2
   140017d37:	je     0x140017d5d
   140017d39:	cmp    r10d,0x4
   140017d3d:	je     0x140017d51
   140017d3f:	cmp    r10d,0x6
   140017d43:	jne    0x140017ce5
   140017d45:	and    edx,0xfffffcff
   140017d4b:	bts    edx,0xa
   140017d4f:	jmp    0x140017d74
   140017d51:	and    edx,0xfffff9ff
   140017d57:	bts    edx,0x8
   140017d5b:	jmp    0x140017d74
   140017d5d:	test   r9d,edx
   140017d60:	je     0x140017d6e
   140017d62:	and    edx,0xfffffaff
   140017d68:	bts    edx,0x9
   140017d6c:	jmp    0x140017d74
   140017d6e:	and    edx,0xffff9fff
   140017d74:	mov    eax,edx
   140017d76:	add    rsp,0x28
   140017d7a:	ret    
   140017d7b:	int3   
   140017d7c:	rex push rbx
   140017d7e:	sub    rsp,0x20
   140017d82:	mov    rax,QWORD PTR [rip+0x211ef]        # 0x140038f78
   140017d89:	mov    rbx,rcx
   140017d8c:	cmp    BYTE PTR [rax],0x0
   140017d8f:	je     0x140017db5
   140017d91:	cmp    BYTE PTR [rax],0x41
   140017d94:	je     0x140017d9d
   140017d96:	mov    edx,0x2
   140017d9b:	jmp    0x140017dba
   140017d9d:	inc    rax
   140017da0:	lea    rdx,[rip+0x171fd]        # 0x14002efa4
   140017da7:	mov    QWORD PTR [rip+0x211ca],rax        # 0x140038f78
   140017dae:	call   0x140011a3c
   140017db3:	jmp    0x140017dbf
   140017db5:	mov    edx,0x1
   140017dba:	call   0x140011a84
   140017dbf:	mov    rax,rbx
   140017dc2:	add    rsp,0x20
   140017dc6:	pop    rbx
   140017dc7:	ret    
   140017dc8:	rex push rbx
   140017dca:	sub    rsp,0x20
   140017dce:	mov    rbx,rcx
   140017dd1:	call   0x140017e3c
   140017dd6:	mov    rax,rbx
   140017dd9:	add    rsp,0x20
   140017ddd:	pop    rbx
   140017dde:	ret    
   140017ddf:	int3   
   140017de0:	rex push rbx
   140017de2:	sub    rsp,0x30
   140017de6:	movups xmm0,XMMWORD PTR [rdx]
   140017de9:	lea    rdx,[rip+0x171bc]        # 0x14002efac
   140017df0:	mov    rbx,rcx
   140017df3:	movdqu XMMWORD PTR [rcx],xmm0
   140017df7:	call   0x14001240c
   140017dfc:	lea    rcx,[rsp+0x20]
   140017e01:	call   0x1400165c0
   140017e06:	mov    rcx,rbx
   140017e09:	mov    rdx,rax
   140017e0c:	call   0x1400122b0
   140017e11:	mov    dl,0x7d
   140017e13:	mov    rcx,rbx
   140017e16:	call   0x1400122f0
   140017e1b:	mov    rax,QWORD PTR [rip+0x21156]        # 0x140038f78
   140017e22:	cmp    BYTE PTR [rax],0x40
   140017e25:	jne    0x140017e31
   140017e27:	inc    rax
   140017e2a:	mov    QWORD PTR [rip+0x21147],rax        # 0x140038f78
   140017e31:	mov    rax,rbx
   140017e34:	add    rsp,0x30
   140017e38:	pop    rbx
   140017e39:	ret    
   140017e3a:	int3   
   140017e3b:	int3   
   140017e3c:	mov    QWORD PTR [rsp+0x8],rbx
   140017e41:	mov    QWORD PTR [rsp+0x10],rdi
   140017e46:	push   rbp
   140017e47:	mov    rbp,rsp
   140017e4a:	sub    rsp,0x70
   140017e4e:	movups xmm0,XMMWORD PTR [rdx]
   140017e51:	mov    rdi,rcx
   140017e54:	movdqu XMMWORD PTR [rcx],xmm0
   140017e58:	cmp    BYTE PTR [rcx+0x8],0x1
   140017e5c:	jg     0x140017ff6
   140017e62:	mov    rax,QWORD PTR [rip+0x2110f]        # 0x140038f78
   140017e69:	cmp    BYTE PTR [rax],0x0
   140017e6c:	je     0x140017fc6
   140017e72:	and    QWORD PTR [rbp-0x40],0x0
   140017e77:	and    QWORD PTR [rbp-0x30],0x0
   140017e7c:	and    DWORD PTR [rsp+0x20],0x0
   140017e81:	mov    eax,0xffff0000
   140017e86:	lea    r9,[rbp-0x40]
   140017e8a:	lea    r8,[rip+0x12bbf]        # 0x14002aa50
   140017e91:	and    DWORD PTR [rbp-0x38],eax
   140017e94:	and    DWORD PTR [rbp-0x28],eax
   140017e97:	lea    rdx,[rbp-0x30]
   140017e9b:	lea    rcx,[rbp-0x20]
   140017e9f:	call   0x140013fc0
   140017ea4:	lea    rcx,[rbp-0x30]
   140017ea8:	mov    dl,0x20
   140017eaa:	movaps xmm0,XMMWORD PTR [rbp-0x20]
   140017eae:	movdqa XMMWORD PTR [rbp-0x30],xmm0
   140017eb3:	call   0x1400122f0
   140017eb8:	lea    rcx,[rbp-0x30]
   140017ebc:	mov    rdx,rdi
   140017ebf:	movaps xmm0,XMMWORD PTR [rbp-0x30]
   140017ec3:	movdqa XMMWORD PTR [rbp-0x30],xmm0
   140017ec8:	call   0x1400122b0
   140017ecd:	movaps xmm0,XMMWORD PTR [rbp-0x30]
   140017ed1:	movdqu XMMWORD PTR [rdi],xmm0
   140017ed5:	cmp    BYTE PTR [rdi+0x8],0x1
   140017ed9:	jg     0x140017ff6
   140017edf:	mov    rax,QWORD PTR [rip+0x21092]        # 0x140038f78
   140017ee6:	cmp    BYTE PTR [rax],0x40
   140017ee9:	je     0x140017fba
   140017eef:	lea    rdx,[rip+0x170b6]        # 0x14002efac
   140017ef6:	mov    rcx,rdi
   140017ef9:	call   0x14001240c
   140017efe:	mov    rax,QWORD PTR [rip+0x21073]        # 0x140038f78
   140017f05:	cmp    BYTE PTR [rdi+0x8],0x1
   140017f09:	jg     0x140017fb5
   140017f0f:	test   BYTE PTR [rax],0xbf
   140017f12:	je     0x140017f8c
   140017f14:	lea    rcx,[rbp-0x20]
   140017f18:	call   0x1400165c0
   140017f1d:	lea    rcx,[rbp-0x10]
   140017f21:	mov    dl,0x60
   140017f23:	mov    rbx,rax
   140017f26:	call   0x14001197c
   140017f2b:	lea    rcx,[rbp-0x30]
   140017f2f:	mov    rdx,rbx
   140017f32:	movups xmm0,XMMWORD PTR [rax]
   140017f35:	movdqu XMMWORD PTR [rbp-0x30],xmm0
   140017f3a:	call   0x1400122b0
   140017f3f:	movaps xmm0,XMMWORD PTR [rbp-0x30]
   140017f43:	lea    rcx,[rbp-0x40]
   140017f47:	mov    dl,0x27
   140017f49:	movdqa XMMWORD PTR [rbp-0x40],xmm0
   140017f4e:	call   0x1400122f0
   140017f53:	lea    rdx,[rbp-0x40]
   140017f57:	mov    rcx,rdi
   140017f5a:	call   0x1400122b0
   140017f5f:	mov    rax,QWORD PTR [rip+0x21012]        # 0x140038f78
   140017f66:	cmp    BYTE PTR [rax],0x40
   140017f69:	jne    0x140017f75
   140017f6b:	inc    rax
   140017f6e:	mov    QWORD PTR [rip+0x21003],rax        # 0x140038f78
   140017f75:	cmp    BYTE PTR [rdi+0x8],0x1
   140017f79:	jg     0x140017fb5
   140017f7b:	cmp    BYTE PTR [rax],0x40
   140017f7e:	je     0x140017f05
   140017f80:	lea    rdx,[rip+0x1702d]        # 0x14002efb4
   140017f87:	jmp    0x140017ef6
   140017f8c:	cmp    BYTE PTR [rdi+0x8],0x1
   140017f90:	jg     0x140017fb5
   140017f92:	cmp    BYTE PTR [rax],0x0
   140017f95:	jne    0x140017fa4
   140017f97:	mov    edx,0x1
   140017f9c:	mov    rcx,rdi
   140017f9f:	call   0x140012498
   140017fa4:	mov    dl,0x7d
   140017fa6:	mov    rcx,rdi
   140017fa9:	call   0x1400122f0
   140017fae:	mov    rax,QWORD PTR [rip+0x20fc3]        # 0x140038f78
   140017fb5:	cmp    BYTE PTR [rax],0x40
   140017fb8:	jne    0x140017ff6
   140017fba:	inc    rax
   140017fbd:	mov    QWORD PTR [rip+0x20fb4],rax        # 0x140038f78
   140017fc4:	jmp    0x140017ff6
   140017fc6:	cmp    BYTE PTR [rcx+0x8],0x1
   140017fca:	jg     0x140017ff6
   140017fcc:	lea    rcx,[rbp-0x10]
   140017fd0:	mov    edx,0x1
   140017fd5:	call   0x140011a84
   140017fda:	lea    rcx,[rbp-0x30]
   140017fde:	mov    rdx,rdi
   140017fe1:	movups xmm0,XMMWORD PTR [rax]
   140017fe4:	movdqu XMMWORD PTR [rbp-0x30],xmm0
   140017fe9:	call   0x1400122b0
   140017fee:	movups xmm0,XMMWORD PTR [rbp-0x30]
   140017ff2:	movdqu XMMWORD PTR [rdi],xmm0
   140017ff6:	lea    r11,[rsp+0x70]
   140017ffb:	mov    rax,rdi
   140017ffe:	mov    rbx,QWORD PTR [r11+0x10]
   140018002:	mov    rdi,QWORD PTR [r11+0x18]
   140018006:	mov    rsp,r11
   140018009:	pop    rbp
   14001800a:	ret    
   14001800b:	int3   
   14001800c:	mov    QWORD PTR [rsp+0x10],rbx
   140018011:	mov    QWORD PTR [rsp+0x18],rsi
   140018016:	mov    QWORD PTR [rsp+0x20],rdi
   14001801b:	push   rbp
   14001801c:	mov    rbp,rsp
   14001801f:	sub    rsp,0x80
   140018026:	mov    rax,QWORD PTR [rip+0x1ea13]        # 0x140036a40
   14001802d:	xor    rax,rsp
   140018030:	mov    QWORD PTR [rbp-0x8],rax
   140018034:	mov    r9,QWORD PTR [rip+0x20f3d]        # 0x140038f78
   14001803b:	mov    r10b,r8b
   14001803e:	mov    sil,dl
   140018041:	movsx  r8d,BYTE PTR [r9]
   140018045:	mov    rbx,rcx
   140018048:	sub    r8d,0x30
   14001804c:	cmp    r8d,0x9
   140018050:	ja     0x140018070
   140018052:	mov    rdx,rcx
   140018055:	mov    rcx,QWORD PTR [rip+0x20f0c]        # 0x140038f68
   14001805c:	inc    r9
   14001805f:	mov    QWORD PTR [rip+0x20f12],r9        # 0x140038f78
   140018066:	call   0x140011f0c
   14001806b:	jmp    0x14001825c
   140018070:	and    QWORD PTR [rbp-0x60],0x0
   140018075:	mov    r11d,0xffff0000
   14001807b:	and    DWORD PTR [rbp-0x58],r11d
   14001807f:	cmp    BYTE PTR [r9],0x3f
   140018083:	jne    0x1400180d5
   140018085:	lea    rcx,[rbp-0x18]
   140018089:	xor    edx,edx
   14001808b:	call   0x1400175c0
   140018090:	mov    rcx,QWORD PTR [rip+0x20ee1]        # 0x140038f78
   140018097:	movups xmm0,XMMWORD PTR [rax]
   14001809a:	mov    al,BYTE PTR [rcx]
   14001809c:	inc    rcx
   14001809f:	mov    QWORD PTR [rip+0x20ed2],rcx        # 0x140038f78
   1400180a6:	movdqu XMMWORD PTR [rbp-0x60],xmm0
   1400180ab:	cmp    al,0x40
   1400180ad:	je     0x14001823a
   1400180b3:	dec    rcx
   1400180b6:	mov    QWORD PTR [rip+0x20ebb],rcx        # 0x140038f78
   1400180bd:	mov    al,BYTE PTR [rcx]
   1400180bf:	lea    rcx,[rbp-0x60]
   1400180c3:	neg    al
   1400180c5:	sbb    edx,edx
   1400180c7:	neg    edx
   1400180c9:	inc    edx
   1400180cb:	call   0x140011ed0
   1400180d0:	jmp    0x14001823a
   1400180d5:	lea    rdi,[rip+0x16b2c]        # 0x14002ec08
   1400180dc:	mov    rcx,r9
   1400180df:	mov    r8d,0x12
   1400180e5:	mov    rax,rdi
   1400180e8:	mov    dl,BYTE PTR [rcx]
   1400180ea:	test   dl,dl
   1400180ec:	je     0x1400180fd
   1400180ee:	cmp    dl,BYTE PTR [rax]
   1400180f0:	jne    0x1400180fd
   1400180f2:	inc    rcx
   1400180f5:	inc    rax
   1400180f8:	dec    r8d
   1400180fb:	jne    0x1400180e8
   1400180fd:	movzx  ecx,BYTE PTR [rcx]
   140018100:	movzx  eax,BYTE PTR [rax]
   140018103:	cmp    ecx,eax
   140018105:	jne    0x14001810d
   140018107:	add    r9,0x13
   14001810b:	jmp    0x140018147
   14001810d:	lea    rdi,[rip+0x16b0c]        # 0x14002ec20
   140018114:	mov    rcx,r9
   140018117:	mov    r8d,0xc
   14001811d:	mov    rax,rdi
   140018120:	mov    dl,BYTE PTR [rcx]
   140018122:	test   dl,dl
   140018124:	je     0x140018135
   140018126:	cmp    dl,BYTE PTR [rax]
   140018128:	jne    0x140018135
   14001812a:	inc    rcx
   14001812d:	inc    rax
   140018130:	dec    r8d
   140018133:	jne    0x140018120
   140018135:	movzx  ecx,BYTE PTR [rcx]
   140018138:	movzx  eax,BYTE PTR [rax]
   14001813b:	cmp    ecx,eax
   14001813d:	jne    0x1400181f6
   140018143:	add    r9,0xd
   140018147:	lea    rcx,[rbp-0x40]
   14001814b:	mov    QWORD PTR [rip+0x20e26],r9        # 0x140038f78
   140018152:	call   0x140016bcc
   140018157:	test   DWORD PTR [rip+0x20e33],0x4000        # 0x140038f94
   140018161:	je     0x14001819d
   140018163:	lea    rdx,[rbp-0x18]
   140018167:	lea    rcx,[rbp-0x40]
   14001816b:	mov    r8d,0x10
   140018171:	call   0x140016ca4
   140018176:	lea    rcx,[rbp-0x18]
   14001817a:	call   0x14001c554
   14001817f:	mov    ecx,eax
   140018181:	call   QWORD PTR [rip+0x20dd1]        # 0x140038f58
   140018187:	lea    rcx,[rbp-0x60]
   14001818b:	test   rax,rax
   14001818e:	je     0x1400181a1
   140018190:	mov    rdx,rax
   140018193:	call   0x140011e90
   140018198:	jmp    0x14001823a
   14001819d:	lea    rcx,[rbp-0x60]
   1400181a1:	lea    rdx,[rip+0x16a88]        # 0x14002ec30
   1400181a8:	call   0x140011e90
   1400181ad:	lea    rcx,[rbp-0x28]
   1400181b1:	mov    rdx,rdi
   1400181b4:	call   0x140011a3c
   1400181b9:	lea    rdx,[rbp-0x40]
   1400181bd:	lea    rcx,[rbp-0x50]
   1400181c1:	movups xmm0,XMMWORD PTR [rax]
   1400181c4:	movdqu XMMWORD PTR [rbp-0x50],xmm0
   1400181c9:	call   0x1400122b0
   1400181ce:	movaps xmm0,XMMWORD PTR [rbp-0x50]
   1400181d2:	lea    rdx,[rip+0x16a5b]        # 0x14002ec34
   1400181d9:	lea    rcx,[rbp-0x50]
   1400181dd:	movdqa XMMWORD PTR [rbp-0x50],xmm0
   1400181e2:	call   0x14001240c
   1400181e7:	lea    rdx,[rbp-0x50]
   1400181eb:	lea    rcx,[rbp-0x60]
   1400181ef:	call   0x1400122b0
   1400181f4:	jmp    0x14001823a
   1400181f6:	test   r10b,r10b
   1400181f9:	je     0x14001821f
   1400181fb:	cmp    BYTE PTR [r9],0x40
   1400181ff:	jne    0x14001821f
   140018201:	and    QWORD PTR [rbp-0x40],0x0
   140018206:	and    DWORD PTR [rbp-0x38],r11d
   14001820a:	movaps xmm0,XMMWORD PTR [rbp-0x40]
   14001820e:	inc    r9
   140018211:	movdqa XMMWORD PTR [rbp-0x60],xmm0
   140018216:	mov    QWORD PTR [rip+0x20d5b],r9        # 0x140038f78
   14001821d:	jmp    0x14001823a
   14001821f:	lea    rdx,[rip+0x20d52]        # 0x140038f78
   140018226:	lea    rcx,[rbp-0x28]
   14001822a:	mov    r8b,0x40
   14001822d:	call   0x140011890
   140018232:	movups xmm0,XMMWORD PTR [rax]
   140018235:	movdqu XMMWORD PTR [rbp-0x60],xmm0
   14001823a:	test   sil,sil
   14001823d:	je     0x140018254
   14001823f:	mov    rcx,QWORD PTR [rip+0x20d22]        # 0x140038f68
   140018246:	cmp    DWORD PTR [rcx],0x9
   140018249:	je     0x140018254
   14001824b:	lea    rdx,[rbp-0x60]
   14001824f:	call   0x1400124dc
   140018254:	movaps xmm0,XMMWORD PTR [rbp-0x60]
   140018258:	movdqu XMMWORD PTR [rbx],xmm0
   14001825c:	mov    rax,rbx
   14001825f:	mov    rcx,QWORD PTR [rbp-0x8]
   140018263:	xor    rcx,rsp
   140018266:	call   0x14000d0a0
   14001826b:	lea    r11,[rsp+0x80]
   140018273:	mov    rbx,QWORD PTR [r11+0x18]
   140018277:	mov    rsi,QWORD PTR [r11+0x20]
   14001827b:	mov    rdi,QWORD PTR [r11+0x28]
   14001827f:	mov    rsp,r11
   140018282:	pop    rbp
   140018283:	ret    
   140018284:	mov    eax,DWORD PTR [rip+0x20d0a]        # 0x140038f94
   14001828a:	and    eax,0x4000
   14001828f:	ret    
   140018290:	mov    eax,DWORD PTR [rcx+0x8]
   140018293:	shr    eax,0xb
   140018296:	and    eax,0x1
   140018299:	ret    
   14001829a:	int3   
   14001829b:	int3   
   14001829c:	mov    eax,DWORD PTR [rcx+0x8]
   14001829f:	shr    eax,0xe
   1400182a2:	and    eax,0x1
   1400182a5:	ret    
   1400182a6:	int3   
   1400182a7:	int3   
   1400182a8:	xor    eax,eax
   1400182aa:	cmp    QWORD PTR [rcx],rax
   1400182ad:	sete   al
   1400182b0:	ret    
   1400182b1:	int3   
   1400182b2:	int3   
   1400182b3:	int3   
   1400182b4:	xor    eax,eax
   1400182b6:	cmp    DWORD PTR [rcx],0x9
   1400182b9:	sete   al
   1400182bc:	ret    
   1400182bd:	int3   
   1400182be:	int3   
   1400182bf:	int3   
   1400182c0:	mov    eax,DWORD PTR [rcx+0x8]
   1400182c3:	shr    eax,0xc
   1400182c6:	and    eax,0x1
   1400182c9:	ret    
   1400182ca:	int3   
   1400182cb:	int3   
   1400182cc:	mov    eax,DWORD PTR [rcx+0x8]
   1400182cf:	shr    eax,0xd
   1400182d2:	and    eax,0x1
   1400182d5:	ret    
   1400182d6:	int3   
   1400182d7:	int3   
   1400182d8:	mov    eax,DWORD PTR [rcx+0x8]
   1400182db:	shr    eax,0x8
   1400182de:	and    eax,0x1
   1400182e1:	ret    
   1400182e2:	int3   
   1400182e3:	int3   
   1400182e4:	xor    eax,eax
   1400182e6:	cmp    QWORD PTR [rcx],rax
   1400182e9:	je     0x1400182f9
   1400182eb:	test   DWORD PTR [rcx+0x8],0x200
   1400182f2:	je     0x1400182f9
   1400182f4:	mov    eax,0x1
   1400182f9:	ret    
   1400182fa:	int3   
   1400182fb:	int3   
   1400182fc:	xor    eax,eax
   1400182fe:	cmp    QWORD PTR [rcx],rax
   140018301:	je     0x140018311
   140018303:	test   DWORD PTR [rcx+0x8],0x400
   14001830a:	je     0x140018311
   14001830c:	mov    eax,0x1
   140018311:	ret    
   140018312:	int3   
   140018313:	int3   
   140018314:	mov    eax,DWORD PTR [rcx+0x8]
   140018317:	shr    eax,0xf
   14001831a:	and    eax,0x1
   14001831d:	ret    
   14001831e:	int3   
   14001831f:	int3   
   140018320:	xor    eax,eax
   140018322:	cmp    BYTE PTR [rcx+0x8],0x1
   140018326:	setle  al
   140018329:	ret    
   14001832a:	int3   
   14001832b:	int3   
   14001832c:	mov    rcx,QWORD PTR [rcx]
   14001832f:	test   rcx,rcx
   140018332:	jne    0x140018337
   140018334:	xor    eax,eax
   140018336:	ret    
   140018337:	mov    rax,QWORD PTR [rcx]
   14001833a:	rex.W jmp QWORD PTR [rax]
   14001833d:	int3   
   14001833e:	int3   
   14001833f:	int3   
   140018340:	mov    eax,DWORD PTR [rcx+0xc]
   140018343:	ret    
   140018344:	mov    eax,0x1
   140018349:	ret    
   14001834a:	int3   
   14001834b:	int3   
   14001834c:	sub    rsp,0x28
   140018350:	mov    rcx,QWORD PTR [rcx+0x8]
   140018354:	xor    eax,eax
   140018356:	test   rcx,rcx
   140018359:	je     0x140018368
   14001835b:	mov    rcx,QWORD PTR [rcx]
   14001835e:	test   rcx,rcx
   140018361:	je     0x140018368
   140018363:	mov    rax,QWORD PTR [rcx]
   140018366:	call   QWORD PTR [rax]
   140018368:	add    rsp,0x28
   14001836c:	ret    
   14001836d:	int3   
   14001836e:	int3   
   14001836f:	int3   
   140018370:	mov    QWORD PTR [rsp+0x8],rbx
   140018375:	mov    QWORD PTR [rsp+0x10],rsi
   14001837a:	push   rdi
   14001837b:	sub    rsp,0x20
   14001837f:	cmp    DWORD PTR [rcx+0x18],0x0
   140018383:	mov    rsi,rcx
   140018386:	jge    0x1400183a4
   140018388:	mov    rcx,QWORD PTR [rcx+0x10]
   14001838c:	mov    rbx,QWORD PTR [rsi+0x8]
   140018390:	mov    rax,QWORD PTR [rcx]
   140018393:	call   QWORD PTR [rax]
   140018395:	mov    rdx,QWORD PTR [rbx]
   140018398:	mov    rcx,rbx
   14001839b:	mov    edi,eax
   14001839d:	call   QWORD PTR [rdx]
   14001839f:	add    edi,eax
   1400183a1:	mov    DWORD PTR [rsi+0x18],edi
   1400183a4:	mov    eax,DWORD PTR [rsi+0x18]
   1400183a7:	mov    rbx,QWORD PTR [rsp+0x30]
   1400183ac:	mov    rsi,QWORD PTR [rsp+0x38]
   1400183b1:	add    rsp,0x20
   1400183b5:	pop    rdi
   1400183b6:	ret    
   1400183b7:	int3   
   1400183b8:	mov    eax,DWORD PTR [rcx+0x10]
   1400183bb:	ret    
   1400183bc:	mov    eax,DWORD PTR [rip+0x20c4e]        # 0x140039010
   1400183c2:	test   al,0x1
   1400183c4:	jne    0x140018425
   1400183c6:	or     eax,0x1
   1400183c9:	xor    edx,edx
   1400183cb:	mov    DWORD PTR [rip+0x20c13],0x1        # 0x140038fe8
   1400183d5:	mov    DWORD PTR [rip+0x20c35],eax        # 0x140039010
   1400183db:	lea    rax,[rip+0x16c5e]        # 0x14002f040
   1400183e2:	mov    DWORD PTR [rip+0x20c00],0x4        # 0x140038fec
   1400183ec:	mov    QWORD PTR [rip+0x20be5],rdx        # 0x140038fd8
   1400183f3:	mov    QWORD PTR [rip+0x20bfa],0x2        # 0x140038ff8
   1400183fe:	mov    QWORD PTR [rip+0x20bff],0x3        # 0x140039008
   140018409:	mov    QWORD PTR [rip+0x20bc0],rax        # 0x140038fd0
   140018410:	mov    QWORD PTR [rip+0x20bc9],rax        # 0x140038fe0
   140018417:	mov    QWORD PTR [rip+0x20bd2],rax        # 0x140038ff0
   14001841e:	mov    QWORD PTR [rip+0x20bdb],rax        # 0x140039000
   140018425:	cmp    ecx,0x3
   140018428:	ja     0x14001843c
   14001842a:	movsxd rax,ecx
   14001842d:	lea    rcx,[rip+0x20b9c]        # 0x140038fd0
   140018434:	shl    rax,0x4
   140018438:	add    rax,rcx
   14001843b:	ret    
   14001843c:	lea    rax,[rip+0x20bbd]        # 0x140039000
   140018443:	ret    
   140018444:	bts    DWORD PTR [rcx+0x8],0xb
   140018449:	ret    
   14001844a:	int3   
   14001844b:	int3   
   14001844c:	bts    DWORD PTR [rcx+0x8],0xe
   140018451:	ret    
   140018452:	int3   
   140018453:	int3   
   140018454:	bts    DWORD PTR [rcx+0x8],0xc
   140018459:	ret    
   14001845a:	int3   
   14001845b:	int3   
   14001845c:	bts    DWORD PTR [rcx+0x8],0xd
   140018461:	ret    
   140018462:	int3   
   140018463:	int3   
   140018464:	cmp    QWORD PTR [rcx],0x0
   140018468:	je     0x14001846f
   14001846a:	bts    DWORD PTR [rcx+0x8],0x9
   14001846f:	ret    
   140018470:	bts    DWORD PTR [rcx+0x8],0xf
   140018475:	ret    
   140018476:	int3   
   140018477:	int3   
   140018478:	bts    DWORD PTR [rcx+0x8],0x8
   14001847d:	mov    rax,rcx
   140018480:	ret    
   140018481:	int3   
   140018482:	int3   
   140018483:	int3   
   140018484:	movsx  eax,BYTE PTR [rcx+0x8]
   140018488:	ret    
   140018489:	int3   
   14001848a:	int3   
   14001848b:	int3   
   14001848c:	test   r8d,r8d
   14001848f:	je     0x1400184a4
   140018491:	sub    rdx,rcx
   140018494:	mov    r8d,r8d
   140018497:	mov    al,BYTE PTR [rdx+rcx*1]
   14001849a:	mov    BYTE PTR [rcx],al
   14001849c:	inc    rcx
   14001849f:	dec    r8
   1400184a2:	jne    0x140018497
   1400184a4:	ret    
   1400184a5:	int3   
   1400184a6:	int3   
   1400184a7:	int3   
   1400184a8:	xor    eax,eax
   1400184aa:	cmp    BYTE PTR [rcx],al
   1400184ac:	je     0x1400184b8
   1400184ae:	inc    rcx
   1400184b1:	inc    eax
   1400184b3:	cmp    BYTE PTR [rcx],0x0
   1400184b6:	jne    0x1400184ae
   1400184b8:	ret    
   1400184b9:	int3   
   1400184ba:	int3   
   1400184bb:	int3   
   1400184bc:	test   r8d,r8d
   1400184bf:	jne    0x1400184c4
   1400184c1:	xor    eax,eax
   1400184c3:	ret    
   1400184c4:	or     r9d,0xffffffff
   1400184c8:	jmp    0x1400184da
   1400184ca:	mov    al,BYTE PTR [rcx]
   1400184cc:	test   al,al
   1400184ce:	je     0x1400184df
   1400184d0:	cmp    al,BYTE PTR [rdx]
   1400184d2:	jne    0x1400184df
   1400184d4:	inc    rcx
   1400184d7:	inc    rdx
   1400184da:	add    r8d,r9d
   1400184dd:	jne    0x1400184ca
   1400184df:	movzx  eax,BYTE PTR [rcx]
   1400184e2:	movzx  ecx,BYTE PTR [rdx]
   1400184e5:	sub    eax,ecx
   1400184e7:	ret    
   1400184e8:	mov    QWORD PTR [rsp+0x8],rbx
   1400184ed:	mov    QWORD PTR [rsp+0x10],rsi
   1400184f2:	mov    QWORD PTR [rsp+0x18],rdi
   1400184f7:	push   r14
   1400184f9:	sub    rsp,0xe0
   140018500:	mov    rbx,r9
   140018503:	mov    edi,r8d
   140018506:	mov    rsi,rdx
   140018509:	mov    r14,rcx
   14001850c:	test   r9,r9
   14001850f:	jne    0x140018518
   140018511:	xor    eax,eax
   140018513:	jmp    0x1400185ce
   140018518:	mov    ecx,0x5
   14001851d:	call   0x140008858
   140018522:	test   eax,eax
   140018524:	je     0x140018511
   140018526:	mov    ecx,0x5
   14001852b:	call   0x140008760
   140018530:	nop
   140018531:	mov    QWORD PTR [rip+0x20a68],rbx        # 0x140038fa0
   140018538:	mov    rax,QWORD PTR [rsp+0x110]
   140018540:	mov    QWORD PTR [rip+0x20a61],rax        # 0x140038fa8
   140018547:	and    QWORD PTR [rip+0x20a71],0x0        # 0x140038fc0
   14001854f:	xorps  xmm0,xmm0
   140018552:	movdqu XMMWORD PTR [rip+0x20a56],xmm0        # 0x140038fb0
   14001855a:	movzx  eax,WORD PTR [rsp+0x118]
   140018562:	mov    DWORD PTR [rsp+0x28],eax
   140018566:	and    QWORD PTR [rsp+0x20],0x0
   14001856c:	mov    r9d,edi
   14001856f:	mov    r8,rsi
   140018572:	mov    rdx,r14
   140018575:	lea    rcx,[rsp+0x30]
   14001857a:	call   0x140011c60
   14001857f:	lea    rcx,[rsp+0x30]
   140018584:	call   0x140011f54
   140018589:	mov    rbx,rax
   14001858c:	mov    r8,QWORD PTR [rip+0x20a15]        # 0x140038fa8
   140018593:	test   r8,r8
   140018596:	je     0x1400185c1
   140018598:	mov    rcx,QWORD PTR [rip+0x20a11]        # 0x140038fb0
   14001859f:	mov    QWORD PTR [rip+0x20a12],rcx        # 0x140038fb8
   1400185a6:	test   rcx,rcx
   1400185a9:	je     0x1400185c1
   1400185ab:	mov    rdx,QWORD PTR [rcx]
   1400185ae:	mov    QWORD PTR [rip+0x209fb],rdx        # 0x140038fb0
   1400185b5:	call   r8
   1400185b8:	mov    r8,QWORD PTR [rip+0x209e9]        # 0x140038fa8
   1400185bf:	jmp    0x140018598
   1400185c1:	mov    ecx,0x5
   1400185c6:	call   0x14000897c
   1400185cb:	mov    rax,rbx
   1400185ce:	lea    r11,[rsp+0xe0]
   1400185d6:	mov    rbx,QWORD PTR [r11+0x10]
   1400185da:	mov    rsi,QWORD PTR [r11+0x18]
   1400185de:	mov    rdi,QWORD PTR [r11+0x20]
   1400185e2:	mov    rsp,r11
   1400185e5:	pop    r14
   1400185e7:	ret    
   1400185e8:	mov    QWORD PTR [rsp+0x8],rbx
   1400185ed:	mov    QWORD PTR [rsp+0x10],rsi
   1400185f2:	mov    QWORD PTR [rsp+0x18],rdi
   1400185f7:	push   r14
   1400185f9:	sub    rsp,0xe0
   140018600:	mov    rbx,r9
   140018603:	mov    edi,r8d
   140018606:	mov    rsi,rdx
   140018609:	mov    r14,rcx
   14001860c:	test   r9,r9
   14001860f:	jne    0x140018618
   140018611:	xor    eax,eax
   140018613:	jmp    0x1400186d4
   140018618:	mov    ecx,0x5
   14001861d:	call   0x140008858
   140018622:	test   eax,eax
   140018624:	je     0x140018611
   140018626:	mov    ecx,0x5
   14001862b:	call   0x140008760
   140018630:	nop
   140018631:	mov    QWORD PTR [rip+0x20968],rbx        # 0x140038fa0
   140018638:	mov    rax,QWORD PTR [rsp+0x110]
   140018640:	mov    QWORD PTR [rip+0x20961],rax        # 0x140038fa8
   140018647:	and    QWORD PTR [rip+0x20971],0x0        # 0x140038fc0
   14001864f:	xorps  xmm0,xmm0
   140018652:	movdqu XMMWORD PTR [rip+0x20956],xmm0        # 0x140038fb0
   14001865a:	mov    eax,DWORD PTR [rsp+0x120]
   140018661:	mov    DWORD PTR [rsp+0x28],eax
   140018665:	mov    rax,QWORD PTR [rsp+0x118]
   14001866d:	mov    QWORD PTR [rsp+0x20],rax
   140018672:	mov    r9d,edi
   140018675:	mov    r8,rsi
   140018678:	mov    rdx,r14
   14001867b:	lea    rcx,[rsp+0x30]
   140018680:	call   0x140011c60
   140018685:	lea    rcx,[rsp+0x30]
   14001868a:	call   0x140011f54
   14001868f:	mov    rbx,rax
   140018692:	mov    r8,QWORD PTR [rip+0x2090f]        # 0x140038fa8
   140018699:	test   r8,r8
   14001869c:	je     0x1400186c7
   14001869e:	mov    rcx,QWORD PTR [rip+0x2090b]        # 0x140038fb0
   1400186a5:	mov    QWORD PTR [rip+0x2090c],rcx        # 0x140038fb8
   1400186ac:	test   rcx,rcx
   1400186af:	je     0x1400186c7
   1400186b1:	mov    rdx,QWORD PTR [rcx]
   1400186b4:	mov    QWORD PTR [rip+0x208f5],rdx        # 0x140038fb0
   1400186bb:	call   r8
   1400186be:	mov    r8,QWORD PTR [rip+0x208e3]        # 0x140038fa8
   1400186c5:	jmp    0x14001869e
   1400186c7:	mov    ecx,0x5
   1400186cc:	call   0x14000897c
   1400186d1:	mov    rax,rbx
   1400186d4:	lea    r11,[rsp+0xe0]
   1400186dc:	mov    rbx,QWORD PTR [r11+0x10]
   1400186e0:	mov    rsi,QWORD PTR [r11+0x18]
   1400186e4:	mov    rdi,QWORD PTR [r11+0x20]
   1400186e8:	mov    rsp,r11
   1400186eb:	pop    r14
   1400186ed:	ret    
   1400186ee:	int3   
   1400186ef:	int3   
   1400186f0:	xor    eax,eax
   1400186f2:	cmp    ecx,0x80
   1400186f8:	setb   al
   1400186fb:	ret    
   1400186fc:	rex push rbx
   1400186fe:	sub    rsp,0x20
   140018702:	mov    ebx,ecx
   140018704:	movzx  ecx,cl
   140018707:	call   0x140018ce0
   14001870c:	xor    edx,edx
   14001870e:	test   eax,eax
   140018710:	jne    0x140018717
   140018712:	cmp    bl,0x5f
   140018715:	jne    0x14001871c
   140018717:	mov    edx,0x1
   14001871c:	mov    eax,edx
   14001871e:	add    rsp,0x20
   140018722:	pop    rbx
   140018723:	ret    
   140018724:	rex push rbx
   140018726:	sub    rsp,0x20
   14001872a:	mov    ebx,ecx
   14001872c:	call   0x140018d60
   140018731:	xor    edx,edx
   140018733:	test   eax,eax
   140018735:	jne    0x14001873c
   140018737:	cmp    ebx,0x5f
   14001873a:	jne    0x140018741
   14001873c:	mov    edx,0x1
   140018741:	mov    eax,edx
   140018743:	add    rsp,0x20
   140018747:	pop    rbx
   140018748:	ret    
   140018749:	int3   
   14001874a:	int3   
   14001874b:	int3   
   14001874c:	and    ecx,0x7f
   14001874f:	mov    eax,ecx
   140018751:	ret    
   140018752:	int3   
   140018753:	int3   
   140018754:	rex push rbx
   140018756:	sub    rsp,0x40
   14001875a:	movsxd rbx,ecx
   14001875d:	lea    rcx,[rsp+0x20]
   140018762:	call   0x14000a000
   140018767:	mov    rax,QWORD PTR [rsp+0x20]
   14001876c:	cmp    DWORD PTR [rax+0xd4],0x1
   140018773:	jle    0x14001878a
   140018775:	lea    r8,[rsp+0x20]
   14001877a:	mov    edx,0x107
   14001877f:	mov    ecx,ebx
   140018781:	call   0x14001c590
   140018786:	mov    ecx,eax
   140018788:	jmp    0x14001879b
   14001878a:	mov    rax,QWORD PTR [rax+0x108]
   140018791:	movzx  ecx,WORD PTR [rax+rbx*2]
   140018795:	and    ecx,0x107
   14001879b:	cmp    BYTE PTR [rsp+0x38],0x0
   1400187a0:	je     0x1400187ae
   1400187a2:	mov    rax,QWORD PTR [rsp+0x30]
   1400187a7:	and    DWORD PTR [rax+0xc8],0xfffffffd
   1400187ae:	mov    eax,ecx
   1400187b0:	add    rsp,0x40
   1400187b4:	pop    rbx
   1400187b5:	ret    
   1400187b6:	int3   
   1400187b7:	int3   
   1400187b8:	rex push rbx
   1400187ba:	sub    rsp,0x40
   1400187be:	movsxd rbx,ecx
   1400187c1:	lea    rcx,[rsp+0x20]
   1400187c6:	call   0x14000a000
   1400187cb:	mov    rax,QWORD PTR [rsp+0x20]
   1400187d0:	cmp    DWORD PTR [rax+0xd4],0x1
   1400187d7:	jle    0x1400187ee
   1400187d9:	lea    r8,[rsp+0x20]
   1400187de:	mov    edx,0x103
   1400187e3:	mov    ecx,ebx
   1400187e5:	call   0x14001c590
   1400187ea:	mov    ecx,eax
   1400187ec:	jmp    0x1400187ff
   1400187ee:	mov    rax,QWORD PTR [rax+0x108]
   1400187f5:	movzx  ecx,WORD PTR [rax+rbx*2]
   1400187f9:	and    ecx,0x103
   1400187ff:	cmp    BYTE PTR [rsp+0x38],0x0
   140018804:	je     0x140018812
   140018806:	mov    rax,QWORD PTR [rsp+0x30]
   14001880b:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140018812:	mov    eax,ecx
   140018814:	add    rsp,0x40
   140018818:	pop    rbx
   140018819:	ret    
   14001881a:	int3   
   14001881b:	int3   
   14001881c:	rex push rbx
   14001881e:	sub    rsp,0x40
   140018822:	movsxd rbx,ecx
   140018825:	lea    rcx,[rsp+0x20]
   14001882a:	call   0x14000a000
   14001882f:	cmp    ebx,0x9
   140018832:	jne    0x140018839
   140018834:	lea    ecx,[rbx+0x37]
   140018837:	jmp    0x14001886e
   140018839:	mov    rax,QWORD PTR [rsp+0x20]
   14001883e:	cmp    DWORD PTR [rax+0xd4],0x1
   140018845:	jle    0x14001885c
   140018847:	lea    r8,[rsp+0x20]
   14001884c:	mov    edx,0x40
   140018851:	mov    ecx,ebx
   140018853:	call   0x14001c590
   140018858:	mov    ecx,eax
   14001885a:	jmp    0x14001886e
   14001885c:	mov    rax,QWORD PTR [rax+0x108]
   140018863:	mov    ecx,0x40
   140018868:	movzx  edx,WORD PTR [rax+rbx*2]
   14001886c:	and    ecx,edx
   14001886e:	cmp    BYTE PTR [rsp+0x38],0x0
   140018873:	je     0x140018881
   140018875:	mov    rax,QWORD PTR [rsp+0x30]
   14001887a:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140018881:	mov    eax,ecx
   140018883:	add    rsp,0x40
   140018887:	pop    rbx
   140018888:	ret    
   140018889:	int3   
   14001888a:	int3   
   14001888b:	int3   
   14001888c:	rex push rbx
   14001888e:	sub    rsp,0x40
   140018892:	movsxd rbx,ecx
   140018895:	lea    rcx,[rsp+0x20]
   14001889a:	call   0x14000a000
   14001889f:	mov    rax,QWORD PTR [rsp+0x20]
   1400188a4:	cmp    DWORD PTR [rax+0xd4],0x1
   1400188ab:	jle    0x1400188c2
   1400188ad:	lea    r8,[rsp+0x20]
   1400188b2:	mov    edx,0x20
   1400188b7:	mov    ecx,ebx
   1400188b9:	call   0x14001c590
   1400188be:	mov    ecx,eax
   1400188c0:	jmp    0x1400188d0
   1400188c2:	mov    rax,QWORD PTR [rax+0x108]
   1400188c9:	movzx  ecx,WORD PTR [rax+rbx*2]
   1400188cd:	and    ecx,0x20
   1400188d0:	cmp    BYTE PTR [rsp+0x38],0x0
   1400188d5:	je     0x1400188e3
   1400188d7:	mov    rax,QWORD PTR [rsp+0x30]
   1400188dc:	and    DWORD PTR [rax+0xc8],0xfffffffd
   1400188e3:	mov    eax,ecx
   1400188e5:	add    rsp,0x40
   1400188e9:	pop    rbx
   1400188ea:	ret    
   1400188eb:	int3   
   1400188ec:	rex push rbx
   1400188ee:	sub    rsp,0x40
   1400188f2:	movsxd rbx,ecx
   1400188f5:	lea    rcx,[rsp+0x20]
   1400188fa:	call   0x14000a000
   1400188ff:	mov    rax,QWORD PTR [rsp+0x20]
   140018904:	cmp    DWORD PTR [rax+0xd4],0x1
   14001890b:	jle    0x140018922
   14001890d:	lea    r8,[rsp+0x20]
   140018912:	mov    edx,0x107
   140018917:	mov    ecx,ebx
   140018919:	call   0x14001c590
   14001891e:	mov    edx,eax
   140018920:	jmp    0x140018933
   140018922:	mov    rax,QWORD PTR [rax+0x108]
   140018929:	movzx  edx,WORD PTR [rax+rbx*2]
   14001892d:	and    edx,0x107
   140018933:	xor    ecx,ecx
   140018935:	cmp    BYTE PTR [rsp+0x38],cl
   140018939:	je     0x140018947
   14001893b:	mov    rax,QWORD PTR [rsp+0x30]
   140018940:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140018947:	test   edx,edx
   140018949:	jne    0x140018950
   14001894b:	cmp    ebx,0x5f
   14001894e:	jne    0x140018955
   140018950:	mov    ecx,0x1
   140018955:	mov    eax,ecx
   140018957:	add    rsp,0x40
   14001895b:	pop    rbx
   14001895c:	ret    
   14001895d:	int3   
   14001895e:	int3   
   14001895f:	int3   
   140018960:	rex push rbx
   140018962:	sub    rsp,0x40
   140018966:	movsxd rbx,ecx
   140018969:	lea    rcx,[rsp+0x20]
   14001896e:	call   0x14000a000
   140018973:	mov    rax,QWORD PTR [rsp+0x20]
   140018978:	cmp    DWORD PTR [rax+0xd4],0x1
   14001897f:	jle    0x140018996
   140018981:	lea    r8,[rsp+0x20]
   140018986:	mov    edx,0x103
   14001898b:	mov    ecx,ebx
   14001898d:	call   0x14001c590
   140018992:	mov    edx,eax
   140018994:	jmp    0x1400189a7
   140018996:	mov    rax,QWORD PTR [rax+0x108]
   14001899d:	movzx  edx,WORD PTR [rax+rbx*2]
   1400189a1:	and    edx,0x103
   1400189a7:	xor    ecx,ecx
   1400189a9:	cmp    BYTE PTR [rsp+0x38],cl
   1400189ad:	je     0x1400189bb
   1400189af:	mov    rax,QWORD PTR [rsp+0x30]
   1400189b4:	and    DWORD PTR [rax+0xc8],0xfffffffd
   1400189bb:	test   edx,edx
   1400189bd:	jne    0x1400189c4
   1400189bf:	cmp    ebx,0x5f
   1400189c2:	jne    0x1400189c9
   1400189c4:	mov    ecx,0x1
   1400189c9:	mov    eax,ecx
   1400189cb:	add    rsp,0x40
   1400189cf:	pop    rbx
   1400189d0:	ret    
   1400189d1:	int3   
   1400189d2:	int3   
   1400189d3:	int3   
   1400189d4:	rex push rbx
   1400189d6:	sub    rsp,0x40
   1400189da:	movsxd rbx,ecx
   1400189dd:	lea    rcx,[rsp+0x20]
   1400189e2:	call   0x14000a000
   1400189e7:	mov    rax,QWORD PTR [rsp+0x20]
   1400189ec:	cmp    DWORD PTR [rax+0xd4],0x1
   1400189f3:	jle    0x140018a0a
   1400189f5:	lea    r8,[rsp+0x20]
   1400189fa:	mov    edx,0x4
   1400189ff:	mov    ecx,ebx
   140018a01:	call   0x14001c590
   140018a06:	mov    ecx,eax
   140018a08:	jmp    0x140018a18
   140018a0a:	mov    rax,QWORD PTR [rax+0x108]
   140018a11:	movzx  ecx,WORD PTR [rax+rbx*2]
   140018a15:	and    ecx,0x4
   140018a18:	cmp    BYTE PTR [rsp+0x38],0x0
   140018a1d:	je     0x140018a2b
   140018a1f:	mov    rax,QWORD PTR [rsp+0x30]
   140018a24:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140018a2b:	mov    eax,ecx
   140018a2d:	add    rsp,0x40
   140018a31:	pop    rbx
   140018a32:	ret    
   140018a33:	int3   
   140018a34:	rex push rbx
   140018a36:	sub    rsp,0x40
   140018a3a:	movsxd rbx,ecx
   140018a3d:	lea    rcx,[rsp+0x20]
   140018a42:	call   0x14000a000
   140018a47:	mov    rax,QWORD PTR [rsp+0x20]
   140018a4c:	cmp    DWORD PTR [rax+0xd4],0x1
   140018a53:	jle    0x140018a6a
   140018a55:	lea    r8,[rsp+0x20]
   140018a5a:	mov    edx,0x117
   140018a5f:	mov    ecx,ebx
   140018a61:	call   0x14001c590
   140018a66:	mov    ecx,eax
   140018a68:	jmp    0x140018a7b
   140018a6a:	mov    rax,QWORD PTR [rax+0x108]
   140018a71:	movzx  ecx,WORD PTR [rax+rbx*2]
   140018a75:	and    ecx,0x117
   140018a7b:	cmp    BYTE PTR [rsp+0x38],0x0
   140018a80:	je     0x140018a8e
   140018a82:	mov    rax,QWORD PTR [rsp+0x30]
   140018a87:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140018a8e:	mov    eax,ecx
   140018a90:	add    rsp,0x40
   140018a94:	pop    rbx
   140018a95:	ret    
   140018a96:	int3   
   140018a97:	int3   
   140018a98:	rex push rbx
   140018a9a:	sub    rsp,0x40
   140018a9e:	movsxd rbx,ecx
   140018aa1:	lea    rcx,[rsp+0x20]
   140018aa6:	call   0x14000a000
   140018aab:	mov    rax,QWORD PTR [rsp+0x20]
   140018ab0:	cmp    DWORD PTR [rax+0xd4],0x1
   140018ab7:	jle    0x140018ace
   140018ab9:	lea    r8,[rsp+0x20]
   140018abe:	mov    edx,0x2
   140018ac3:	mov    ecx,ebx
   140018ac5:	call   0x14001c590
   140018aca:	mov    ecx,eax
   140018acc:	jmp    0x140018adc
   140018ace:	mov    rax,QWORD PTR [rax+0x108]
   140018ad5:	movzx  ecx,WORD PTR [rax+rbx*2]
   140018ad9:	and    ecx,0x2
   140018adc:	cmp    BYTE PTR [rsp+0x38],0x0
   140018ae1:	je     0x140018aef
   140018ae3:	mov    rax,QWORD PTR [rsp+0x30]
   140018ae8:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140018aef:	mov    eax,ecx
   140018af1:	add    rsp,0x40
   140018af5:	pop    rbx
   140018af6:	ret    
   140018af7:	int3   
   140018af8:	rex push rbx
   140018afa:	sub    rsp,0x40
   140018afe:	movsxd rbx,ecx
   140018b01:	lea    rcx,[rsp+0x20]
   140018b06:	call   0x14000a000
   140018b0b:	mov    rax,QWORD PTR [rsp+0x20]
   140018b10:	cmp    DWORD PTR [rax+0xd4],0x1
   140018b17:	jle    0x140018b2e
   140018b19:	lea    r8,[rsp+0x20]
   140018b1e:	mov    edx,0x157
   140018b23:	mov    ecx,ebx
   140018b25:	call   0x14001c590
   140018b2a:	mov    ecx,eax
   140018b2c:	jmp    0x140018b3f
   140018b2e:	mov    rax,QWORD PTR [rax+0x108]
   140018b35:	movzx  ecx,WORD PTR [rax+rbx*2]
   140018b39:	and    ecx,0x157
   140018b3f:	cmp    BYTE PTR [rsp+0x38],0x0
   140018b44:	je     0x140018b52
   140018b46:	mov    rax,QWORD PTR [rsp+0x30]
   140018b4b:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140018b52:	mov    eax,ecx
   140018b54:	add    rsp,0x40
   140018b58:	pop    rbx
   140018b59:	ret    
   140018b5a:	int3   
   140018b5b:	int3   
   140018b5c:	rex push rbx
   140018b5e:	sub    rsp,0x40
   140018b62:	movsxd rbx,ecx
   140018b65:	lea    rcx,[rsp+0x20]
   140018b6a:	call   0x14000a000
   140018b6f:	mov    rax,QWORD PTR [rsp+0x20]
   140018b74:	cmp    DWORD PTR [rax+0xd4],0x1
   140018b7b:	jle    0x140018b92
   140018b7d:	lea    r8,[rsp+0x20]
   140018b82:	mov    edx,0x10
   140018b87:	mov    ecx,ebx
   140018b89:	call   0x14001c590
   140018b8e:	mov    ecx,eax
   140018b90:	jmp    0x140018ba0
   140018b92:	mov    rax,QWORD PTR [rax+0x108]
   140018b99:	movzx  ecx,WORD PTR [rax+rbx*2]
   140018b9d:	and    ecx,0x10
   140018ba0:	cmp    BYTE PTR [rsp+0x38],0x0
   140018ba5:	je     0x140018bb3
   140018ba7:	mov    rax,QWORD PTR [rsp+0x30]
   140018bac:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140018bb3:	mov    eax,ecx
   140018bb5:	add    rsp,0x40
   140018bb9:	pop    rbx
   140018bba:	ret    
   140018bbb:	int3   
   140018bbc:	rex push rbx
   140018bbe:	sub    rsp,0x40
   140018bc2:	movsxd rbx,ecx
   140018bc5:	lea    rcx,[rsp+0x20]
   140018bca:	call   0x14000a000
   140018bcf:	mov    rax,QWORD PTR [rsp+0x20]
   140018bd4:	cmp    DWORD PTR [rax+0xd4],0x1
   140018bdb:	jle    0x140018bf2
   140018bdd:	lea    r8,[rsp+0x20]
   140018be2:	mov    edx,0x8
   140018be7:	mov    ecx,ebx
   140018be9:	call   0x14001c590
   140018bee:	mov    ecx,eax
   140018bf0:	jmp    0x140018c00
   140018bf2:	mov    rax,QWORD PTR [rax+0x108]
   140018bf9:	movzx  ecx,WORD PTR [rax+rbx*2]
   140018bfd:	and    ecx,0x8
   140018c00:	cmp    BYTE PTR [rsp+0x38],0x0
   140018c05:	je     0x140018c13
   140018c07:	mov    rax,QWORD PTR [rsp+0x30]
   140018c0c:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140018c13:	mov    eax,ecx
   140018c15:	add    rsp,0x40
   140018c19:	pop    rbx
   140018c1a:	ret    
   140018c1b:	int3   
   140018c1c:	rex push rbx
   140018c1e:	sub    rsp,0x40
   140018c22:	movsxd rbx,ecx
   140018c25:	lea    rcx,[rsp+0x20]
   140018c2a:	call   0x14000a000
   140018c2f:	mov    rax,QWORD PTR [rsp+0x20]
   140018c34:	cmp    DWORD PTR [rax+0xd4],0x1
   140018c3b:	jle    0x140018c52
   140018c3d:	lea    r8,[rsp+0x20]
   140018c42:	mov    edx,0x1
   140018c47:	mov    ecx,ebx
   140018c49:	call   0x14001c590
   140018c4e:	mov    ecx,eax
   140018c50:	jmp    0x140018c60
   140018c52:	mov    rax,QWORD PTR [rax+0x108]
   140018c59:	movzx  ecx,WORD PTR [rax+rbx*2]
   140018c5d:	and    ecx,0x1
   140018c60:	cmp    BYTE PTR [rsp+0x38],0x0
   140018c65:	je     0x140018c73
   140018c67:	mov    rax,QWORD PTR [rsp+0x30]
   140018c6c:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140018c73:	mov    eax,ecx
   140018c75:	add    rsp,0x40
   140018c79:	pop    rbx
   140018c7a:	ret    
   140018c7b:	int3   
   140018c7c:	rex push rbx
   140018c7e:	sub    rsp,0x40
   140018c82:	movsxd rbx,ecx
   140018c85:	lea    rcx,[rsp+0x20]
   140018c8a:	call   0x14000a000
   140018c8f:	mov    rax,QWORD PTR [rsp+0x20]
   140018c94:	cmp    DWORD PTR [rax+0xd4],0x1
   140018c9b:	jle    0x140018cb2
   140018c9d:	lea    r8,[rsp+0x20]
   140018ca2:	mov    edx,0x80
   140018ca7:	mov    ecx,ebx
   140018ca9:	call   0x14001c590
   140018cae:	mov    ecx,eax
   140018cb0:	jmp    0x140018cc3
   140018cb2:	mov    rax,QWORD PTR [rax+0x108]
   140018cb9:	movzx  ecx,WORD PTR [rax+rbx*2]
   140018cbd:	and    ecx,0x80
   140018cc3:	cmp    BYTE PTR [rsp+0x38],0x0
   140018cc8:	je     0x140018cd6
   140018cca:	mov    rax,QWORD PTR [rsp+0x30]
   140018ccf:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140018cd6:	mov    eax,ecx
   140018cd8:	add    rsp,0x40
   140018cdc:	pop    rbx
   140018cdd:	ret    
   140018cde:	int3   
   140018cdf:	int3   
   140018ce0:	rex push rbx
   140018ce2:	sub    rsp,0x40
   140018ce6:	cmp    DWORD PTR [rip+0x20333],0x0        # 0x140039020
   140018ced:	movsxd rbx,ecx
   140018cf0:	jne    0x140018d04
   140018cf2:	mov    rax,QWORD PTR [rip+0x1e19f]        # 0x140036e98
   140018cf9:	movzx  eax,WORD PTR [rax+rbx*2]
   140018cfd:	and    eax,0x107
   140018d02:	jmp    0x140018d59
   140018d04:	lea    rcx,[rsp+0x20]
   140018d09:	xor    edx,edx
   140018d0b:	call   0x14000a000
   140018d10:	mov    rax,QWORD PTR [rsp+0x20]
   140018d15:	cmp    DWORD PTR [rax+0xd4],0x1
   140018d1c:	jle    0x140018d33
   140018d1e:	lea    r8,[rsp+0x20]
   140018d23:	mov    edx,0x107
   140018d28:	mov    ecx,ebx
   140018d2a:	call   0x14001c590
   140018d2f:	mov    ecx,eax
   140018d31:	jmp    0x140018d44
   140018d33:	mov    rax,QWORD PTR [rax+0x108]
   140018d3a:	movzx  ecx,WORD PTR [rax+rbx*2]
   140018d3e:	and    ecx,0x107
   140018d44:	cmp    BYTE PTR [rsp+0x38],0x0
   140018d49:	je     0x140018d57
   140018d4b:	mov    rax,QWORD PTR [rsp+0x30]
   140018d50:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140018d57:	mov    eax,ecx
   140018d59:	add    rsp,0x40
   140018d5d:	pop    rbx
   140018d5e:	ret    
   140018d5f:	int3   
   140018d60:	rex push rbx
   140018d62:	sub    rsp,0x40
   140018d66:	cmp    DWORD PTR [rip+0x202b3],0x0        # 0x140039020
   140018d6d:	movsxd rbx,ecx
   140018d70:	jne    0x140018d84
   140018d72:	mov    rax,QWORD PTR [rip+0x1e11f]        # 0x140036e98
   140018d79:	movzx  eax,WORD PTR [rax+rbx*2]
   140018d7d:	and    eax,0x103
   140018d82:	jmp    0x140018dd9
   140018d84:	lea    rcx,[rsp+0x20]
   140018d89:	xor    edx,edx
   140018d8b:	call   0x14000a000
   140018d90:	mov    rax,QWORD PTR [rsp+0x20]
   140018d95:	cmp    DWORD PTR [rax+0xd4],0x1
   140018d9c:	jle    0x140018db3
   140018d9e:	lea    r8,[rsp+0x20]
   140018da3:	mov    edx,0x103
   140018da8:	mov    ecx,ebx
   140018daa:	call   0x14001c590
   140018daf:	mov    ecx,eax
   140018db1:	jmp    0x140018dc4
   140018db3:	mov    rax,QWORD PTR [rax+0x108]
   140018dba:	movzx  ecx,WORD PTR [rax+rbx*2]
   140018dbe:	and    ecx,0x103
   140018dc4:	cmp    BYTE PTR [rsp+0x38],0x0
   140018dc9:	je     0x140018dd7
   140018dcb:	mov    rax,QWORD PTR [rsp+0x30]
   140018dd0:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140018dd7:	mov    eax,ecx
   140018dd9:	add    rsp,0x40
   140018ddd:	pop    rbx
   140018dde:	ret    
   140018ddf:	int3   
   140018de0:	cmp    DWORD PTR [rip+0x20239],0x0        # 0x140039020
   140018de7:	jne    0x140018e08
   140018de9:	cmp    ecx,0x9
   140018dec:	jne    0x140018df2
   140018dee:	lea    eax,[rcx+0x37]
   140018df1:	ret    
   140018df2:	mov    rax,QWORD PTR [rip+0x1e09f]        # 0x140036e98
   140018df9:	movsxd rcx,ecx
   140018dfc:	movzx  edx,WORD PTR [rax+rcx*2]
   140018e00:	mov    eax,0x40
   140018e05:	and    eax,edx
   140018e07:	ret    
   140018e08:	xor    edx,edx
   140018e0a:	jmp    0x14001881c
   140018e0f:	int3   
   140018e10:	rex push rbx
   140018e12:	sub    rsp,0x40
   140018e16:	cmp    DWORD PTR [rip+0x20203],0x0        # 0x140039020
   140018e1d:	movsxd rbx,ecx
   140018e20:	jne    0x140018e32
   140018e22:	mov    rax,QWORD PTR [rip+0x1e06f]        # 0x140036e98
   140018e29:	movzx  eax,WORD PTR [rax+rbx*2]
   140018e2d:	and    eax,0x20
   140018e30:	jmp    0x140018e84
   140018e32:	lea    rcx,[rsp+0x20]
   140018e37:	xor    edx,edx
   140018e39:	call   0x14000a000
   140018e3e:	mov    rax,QWORD PTR [rsp+0x20]
   140018e43:	cmp    DWORD PTR [rax+0xd4],0x1
   140018e4a:	jle    0x140018e61
   140018e4c:	lea    r8,[rsp+0x20]
   140018e51:	mov    edx,0x20
   140018e56:	mov    ecx,ebx
   140018e58:	call   0x14001c590
   140018e5d:	mov    ecx,eax
   140018e5f:	jmp    0x140018e6f
   140018e61:	mov    rax,QWORD PTR [rax+0x108]
   140018e68:	movzx  ecx,WORD PTR [rax+rbx*2]
   140018e6c:	and    ecx,0x20
   140018e6f:	cmp    BYTE PTR [rsp+0x38],0x0
   140018e74:	je     0x140018e82
   140018e76:	mov    rax,QWORD PTR [rsp+0x30]
   140018e7b:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140018e82:	mov    eax,ecx
   140018e84:	add    rsp,0x40
   140018e88:	pop    rbx
   140018e89:	ret    
   140018e8a:	int3   
   140018e8b:	int3   
   140018e8c:	rex push rbx
   140018e8e:	sub    rsp,0x40
   140018e92:	cmp    DWORD PTR [rip+0x20187],0x0        # 0x140039020
   140018e99:	movsxd rbx,ecx
   140018e9c:	jne    0x140018eae
   140018e9e:	mov    rax,QWORD PTR [rip+0x1dff3]        # 0x140036e98
   140018ea5:	movzx  eax,WORD PTR [rax+rbx*2]
   140018ea9:	and    eax,0x4
   140018eac:	jmp    0x140018f00
   140018eae:	lea    rcx,[rsp+0x20]
   140018eb3:	xor    edx,edx
   140018eb5:	call   0x14000a000
   140018eba:	mov    rax,QWORD PTR [rsp+0x20]
   140018ebf:	cmp    DWORD PTR [rax+0xd4],0x1
   140018ec6:	jle    0x140018edd
   140018ec8:	lea    r8,[rsp+0x20]
   140018ecd:	mov    edx,0x4
   140018ed2:	mov    ecx,ebx
   140018ed4:	call   0x14001c590
   140018ed9:	mov    ecx,eax
   140018edb:	jmp    0x140018eeb
   140018edd:	mov    rax,QWORD PTR [rax+0x108]
   140018ee4:	movzx  ecx,WORD PTR [rax+rbx*2]
   140018ee8:	and    ecx,0x4
   140018eeb:	cmp    BYTE PTR [rsp+0x38],0x0
   140018ef0:	je     0x140018efe
   140018ef2:	mov    rax,QWORD PTR [rsp+0x30]
   140018ef7:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140018efe:	mov    eax,ecx
   140018f00:	add    rsp,0x40
   140018f04:	pop    rbx
   140018f05:	ret    
   140018f06:	int3   
   140018f07:	int3   
   140018f08:	rex push rbx
   140018f0a:	sub    rsp,0x40
   140018f0e:	cmp    DWORD PTR [rip+0x2010b],0x0        # 0x140039020
   140018f15:	movsxd rbx,ecx
   140018f18:	jne    0x140018f2c
   140018f1a:	mov    rax,QWORD PTR [rip+0x1df77]        # 0x140036e98
   140018f21:	movzx  eax,WORD PTR [rax+rbx*2]
   140018f25:	and    eax,0x117
   140018f2a:	jmp    0x140018f81
   140018f2c:	lea    rcx,[rsp+0x20]
   140018f31:	xor    edx,edx
   140018f33:	call   0x14000a000
   140018f38:	mov    rax,QWORD PTR [rsp+0x20]
   140018f3d:	cmp    DWORD PTR [rax+0xd4],0x1
   140018f44:	jle    0x140018f5b
   140018f46:	lea    r8,[rsp+0x20]
   140018f4b:	mov    edx,0x117
   140018f50:	mov    ecx,ebx
   140018f52:	call   0x14001c590
   140018f57:	mov    ecx,eax
   140018f59:	jmp    0x140018f6c
   140018f5b:	mov    rax,QWORD PTR [rax+0x108]
   140018f62:	movzx  ecx,WORD PTR [rax+rbx*2]
   140018f66:	and    ecx,0x117
   140018f6c:	cmp    BYTE PTR [rsp+0x38],0x0
   140018f71:	je     0x140018f7f
   140018f73:	mov    rax,QWORD PTR [rsp+0x30]
   140018f78:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140018f7f:	mov    eax,ecx
   140018f81:	add    rsp,0x40
   140018f85:	pop    rbx
   140018f86:	ret    
   140018f87:	int3   
   140018f88:	rex push rbx
   140018f8a:	sub    rsp,0x40
   140018f8e:	cmp    DWORD PTR [rip+0x2008b],0x0        # 0x140039020
   140018f95:	movsxd rbx,ecx
   140018f98:	jne    0x140018faa
   140018f9a:	mov    rax,QWORD PTR [rip+0x1def7]        # 0x140036e98
   140018fa1:	movzx  eax,WORD PTR [rax+rbx*2]
   140018fa5:	and    eax,0x2
   140018fa8:	jmp    0x140018ffc
   140018faa:	lea    rcx,[rsp+0x20]
   140018faf:	xor    edx,edx
   140018fb1:	call   0x14000a000
   140018fb6:	mov    rax,QWORD PTR [rsp+0x20]
   140018fbb:	cmp    DWORD PTR [rax+0xd4],0x1
   140018fc2:	jle    0x140018fd9
   140018fc4:	lea    r8,[rsp+0x20]
   140018fc9:	mov    edx,0x2
   140018fce:	mov    ecx,ebx
   140018fd0:	call   0x14001c590
   140018fd5:	mov    ecx,eax
   140018fd7:	jmp    0x140018fe7
   140018fd9:	mov    rax,QWORD PTR [rax+0x108]
   140018fe0:	movzx  ecx,WORD PTR [rax+rbx*2]
   140018fe4:	and    ecx,0x2
   140018fe7:	cmp    BYTE PTR [rsp+0x38],0x0
   140018fec:	je     0x140018ffa
   140018fee:	mov    rax,QWORD PTR [rsp+0x30]
   140018ff3:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140018ffa:	mov    eax,ecx
   140018ffc:	add    rsp,0x40
   140019000:	pop    rbx
   140019001:	ret    
   140019002:	int3   
   140019003:	int3   
   140019004:	rex push rbx
   140019006:	sub    rsp,0x40
   14001900a:	cmp    DWORD PTR [rip+0x2000f],0x0        # 0x140039020
   140019011:	movsxd rbx,ecx
   140019014:	jne    0x140019028
   140019016:	mov    rax,QWORD PTR [rip+0x1de7b]        # 0x140036e98
   14001901d:	movzx  eax,WORD PTR [rax+rbx*2]
   140019021:	and    eax,0x157
   140019026:	jmp    0x14001907d
   140019028:	lea    rcx,[rsp+0x20]
   14001902d:	xor    edx,edx
   14001902f:	call   0x14000a000
   140019034:	mov    rax,QWORD PTR [rsp+0x20]
   140019039:	cmp    DWORD PTR [rax+0xd4],0x1
   140019040:	jle    0x140019057
   140019042:	lea    r8,[rsp+0x20]
   140019047:	mov    edx,0x157
   14001904c:	mov    ecx,ebx
   14001904e:	call   0x14001c590
   140019053:	mov    ecx,eax
   140019055:	jmp    0x140019068
   140019057:	mov    rax,QWORD PTR [rax+0x108]
   14001905e:	movzx  ecx,WORD PTR [rax+rbx*2]
   140019062:	and    ecx,0x157
   140019068:	cmp    BYTE PTR [rsp+0x38],0x0
   14001906d:	je     0x14001907b
   14001906f:	mov    rax,QWORD PTR [rsp+0x30]
   140019074:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14001907b:	mov    eax,ecx
   14001907d:	add    rsp,0x40
   140019081:	pop    rbx
   140019082:	ret    
   140019083:	int3   
   140019084:	rex push rbx
   140019086:	sub    rsp,0x40
   14001908a:	cmp    DWORD PTR [rip+0x1ff8f],0x0        # 0x140039020
   140019091:	movsxd rbx,ecx
   140019094:	jne    0x1400190a6
   140019096:	mov    rax,QWORD PTR [rip+0x1ddfb]        # 0x140036e98
   14001909d:	movzx  eax,WORD PTR [rax+rbx*2]
   1400190a1:	and    eax,0x10
   1400190a4:	jmp    0x1400190f8
   1400190a6:	lea    rcx,[rsp+0x20]
   1400190ab:	xor    edx,edx
   1400190ad:	call   0x14000a000
   1400190b2:	mov    rax,QWORD PTR [rsp+0x20]
   1400190b7:	cmp    DWORD PTR [rax+0xd4],0x1
   1400190be:	jle    0x1400190d5
   1400190c0:	lea    r8,[rsp+0x20]
   1400190c5:	mov    edx,0x10
   1400190ca:	mov    ecx,ebx
   1400190cc:	call   0x14001c590
   1400190d1:	mov    ecx,eax
   1400190d3:	jmp    0x1400190e3
   1400190d5:	mov    rax,QWORD PTR [rax+0x108]
   1400190dc:	movzx  ecx,WORD PTR [rax+rbx*2]
   1400190e0:	and    ecx,0x10
   1400190e3:	cmp    BYTE PTR [rsp+0x38],0x0
   1400190e8:	je     0x1400190f6
   1400190ea:	mov    rax,QWORD PTR [rsp+0x30]
   1400190ef:	and    DWORD PTR [rax+0xc8],0xfffffffd
   1400190f6:	mov    eax,ecx
   1400190f8:	add    rsp,0x40
   1400190fc:	pop    rbx
   1400190fd:	ret    
   1400190fe:	int3   
   1400190ff:	int3   
   140019100:	rex push rbx
   140019102:	sub    rsp,0x40
   140019106:	cmp    DWORD PTR [rip+0x1ff13],0x0        # 0x140039020
   14001910d:	movsxd rbx,ecx
   140019110:	jne    0x140019122
   140019112:	mov    rax,QWORD PTR [rip+0x1dd7f]        # 0x140036e98
   140019119:	movzx  eax,WORD PTR [rax+rbx*2]
   14001911d:	and    eax,0x8
   140019120:	jmp    0x140019174
   140019122:	lea    rcx,[rsp+0x20]
   140019127:	xor    edx,edx
   140019129:	call   0x14000a000
   14001912e:	mov    rax,QWORD PTR [rsp+0x20]
   140019133:	cmp    DWORD PTR [rax+0xd4],0x1
   14001913a:	jle    0x140019151
   14001913c:	lea    r8,[rsp+0x20]
   140019141:	mov    edx,0x8
   140019146:	mov    ecx,ebx
   140019148:	call   0x14001c590
   14001914d:	mov    ecx,eax
   14001914f:	jmp    0x14001915f
   140019151:	mov    rax,QWORD PTR [rax+0x108]
   140019158:	movzx  ecx,WORD PTR [rax+rbx*2]
   14001915c:	and    ecx,0x8
   14001915f:	cmp    BYTE PTR [rsp+0x38],0x0
   140019164:	je     0x140019172
   140019166:	mov    rax,QWORD PTR [rsp+0x30]
   14001916b:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140019172:	mov    eax,ecx
   140019174:	add    rsp,0x40
   140019178:	pop    rbx
   140019179:	ret    
   14001917a:	int3   
   14001917b:	int3   
   14001917c:	rex push rbx
   14001917e:	sub    rsp,0x40
   140019182:	cmp    DWORD PTR [rip+0x1fe97],0x0        # 0x140039020
   140019189:	movsxd rbx,ecx
   14001918c:	jne    0x14001919e
   14001918e:	mov    rax,QWORD PTR [rip+0x1dd03]        # 0x140036e98
   140019195:	movzx  eax,WORD PTR [rax+rbx*2]
   140019199:	and    eax,0x1
   14001919c:	jmp    0x1400191f0
   14001919e:	lea    rcx,[rsp+0x20]
   1400191a3:	xor    edx,edx
   1400191a5:	call   0x14000a000
   1400191aa:	mov    rax,QWORD PTR [rsp+0x20]
   1400191af:	cmp    DWORD PTR [rax+0xd4],0x1
   1400191b6:	jle    0x1400191cd
   1400191b8:	lea    r8,[rsp+0x20]
   1400191bd:	mov    edx,0x1
   1400191c2:	mov    ecx,ebx
   1400191c4:	call   0x14001c590
   1400191c9:	mov    ecx,eax
   1400191cb:	jmp    0x1400191db
   1400191cd:	mov    rax,QWORD PTR [rax+0x108]
   1400191d4:	movzx  ecx,WORD PTR [rax+rbx*2]
   1400191d8:	and    ecx,0x1
   1400191db:	cmp    BYTE PTR [rsp+0x38],0x0
   1400191e0:	je     0x1400191ee
   1400191e2:	mov    rax,QWORD PTR [rsp+0x30]
   1400191e7:	and    DWORD PTR [rax+0xc8],0xfffffffd
   1400191ee:	mov    eax,ecx
   1400191f0:	add    rsp,0x40
   1400191f4:	pop    rbx
   1400191f5:	ret    
   1400191f6:	int3   
   1400191f7:	int3   
   1400191f8:	rex push rbx
   1400191fa:	sub    rsp,0x40
   1400191fe:	cmp    DWORD PTR [rip+0x1fe1b],0x0        # 0x140039020
   140019205:	movsxd rbx,ecx
   140019208:	jne    0x14001921c
   14001920a:	mov    rax,QWORD PTR [rip+0x1dc87]        # 0x140036e98
   140019211:	movzx  eax,WORD PTR [rax+rbx*2]
   140019215:	and    eax,0x80
   14001921a:	jmp    0x140019271
   14001921c:	lea    rcx,[rsp+0x20]
   140019221:	xor    edx,edx
   140019223:	call   0x14000a000
   140019228:	mov    rax,QWORD PTR [rsp+0x20]
   14001922d:	cmp    DWORD PTR [rax+0xd4],0x1
   140019234:	jle    0x14001924b
   140019236:	lea    r8,[rsp+0x20]
   14001923b:	mov    edx,0x80
   140019240:	mov    ecx,ebx
   140019242:	call   0x14001c590
   140019247:	mov    ecx,eax
   140019249:	jmp    0x14001925c
   14001924b:	mov    rax,QWORD PTR [rax+0x108]
   140019252:	movzx  ecx,WORD PTR [rax+rbx*2]
   140019256:	and    ecx,0x80
   14001925c:	cmp    BYTE PTR [rsp+0x38],0x0
   140019261:	je     0x14001926f
   140019263:	mov    rax,QWORD PTR [rsp+0x30]
   140019268:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14001926f:	mov    eax,ecx
   140019271:	add    rsp,0x40
   140019275:	pop    rbx
   140019276:	ret    
   140019277:	int3   
   140019278:	lea    eax,[rcx+0x20]
   14001927b:	ret    
   14001927c:	mov    QWORD PTR [rsp+0x10],rdi
   140019281:	mov    QWORD PTR [rsp+0x20],r14
   140019286:	push   rbp
   140019287:	mov    rbp,rsp
   14001928a:	sub    rsp,0x70
   14001928e:	movsxd rdi,ecx
   140019291:	lea    rcx,[rbp-0x20]
   140019295:	call   0x14000a000
   14001929a:	cmp    edi,0x100
   1400192a0:	jae    0x1400192ff
   1400192a2:	mov    rdx,QWORD PTR [rbp-0x20]
   1400192a6:	cmp    DWORD PTR [rdx+0xd4],0x1
   1400192ad:	jle    0x1400192c5
   1400192af:	lea    r8,[rbp-0x20]
   1400192b3:	mov    edx,0x1
   1400192b8:	mov    ecx,edi
   1400192ba:	call   0x14001c590
   1400192bf:	mov    rdx,QWORD PTR [rbp-0x20]
   1400192c3:	jmp    0x1400192d3
   1400192c5:	mov    rax,QWORD PTR [rdx+0x108]
   1400192cc:	movzx  eax,WORD PTR [rax+rdi*2]
   1400192d0:	and    eax,0x1
   1400192d3:	test   eax,eax
   1400192d5:	je     0x1400192e7
   1400192d7:	mov    rax,QWORD PTR [rdx+0x110]
   1400192de:	movzx  eax,BYTE PTR [rax+rdi*1]
   1400192e2:	jmp    0x1400193ab
   1400192e7:	cmp    BYTE PTR [rbp-0x8],0x0
   1400192eb:	je     0x1400192f8
   1400192ed:	mov    rax,QWORD PTR [rbp-0x10]
   1400192f1:	and    DWORD PTR [rax+0xc8],0xfffffffd
   1400192f8:	mov    eax,edi
   1400192fa:	jmp    0x1400193bc
   1400192ff:	mov    rax,QWORD PTR [rbp-0x20]
   140019303:	cmp    DWORD PTR [rax+0xd4],0x1
   14001930a:	jle    0x140019337
   14001930c:	mov    r14d,edi
   14001930f:	lea    rdx,[rbp-0x20]
   140019313:	sar    r14d,0x8
   140019317:	movzx  ecx,r14b
   14001931b:	call   0x14001db48
   140019320:	test   eax,eax
   140019322:	je     0x140019337
   140019324:	mov    BYTE PTR [rbp+0x10],r14b
   140019328:	mov    BYTE PTR [rbp+0x11],dil
   14001932c:	mov    BYTE PTR [rbp+0x12],0x0
   140019330:	mov    ecx,0x2
   140019335:	jmp    0x14001934f
   140019337:	call   0x1400095b8
   14001933c:	mov    ecx,0x1
   140019341:	mov    DWORD PTR [rax],0x2a
   140019347:	mov    BYTE PTR [rbp+0x10],dil
   14001934b:	mov    BYTE PTR [rbp+0x11],0x0
   14001934f:	mov    rdx,QWORD PTR [rbp-0x20]
   140019353:	mov    DWORD PTR [rsp+0x40],0x1
   14001935b:	lea    r9,[rbp+0x10]
   14001935f:	mov    eax,DWORD PTR [rdx+0x4]
   140019362:	mov    rdx,QWORD PTR [rdx+0x138]
   140019369:	mov    r8d,0x100
   14001936f:	mov    DWORD PTR [rsp+0x38],eax
   140019373:	lea    rax,[rbp+0x20]
   140019377:	mov    DWORD PTR [rsp+0x30],0x3
   14001937f:	mov    QWORD PTR [rsp+0x28],rax
   140019384:	mov    DWORD PTR [rsp+0x20],ecx
   140019388:	lea    rcx,[rbp-0x20]
   14001938c:	call   0x1400103d8
   140019391:	test   eax,eax
   140019393:	je     0x1400192e7
   140019399:	cmp    eax,0x1
   14001939c:	movzx  eax,BYTE PTR [rbp+0x20]
   1400193a0:	je     0x1400193ab
   1400193a2:	movzx  ecx,BYTE PTR [rbp+0x21]
   1400193a6:	shl    eax,0x8
   1400193a9:	or     eax,ecx
   1400193ab:	cmp    BYTE PTR [rbp-0x8],0x0
   1400193af:	je     0x1400193bc
   1400193b1:	mov    rcx,QWORD PTR [rbp-0x10]
   1400193b5:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   1400193bc:	lea    r11,[rsp+0x70]
   1400193c1:	mov    rdi,QWORD PTR [r11+0x18]
   1400193c5:	mov    r14,QWORD PTR [r11+0x28]
   1400193c9:	mov    rsp,r11
   1400193cc:	pop    rbp
   1400193cd:	ret    
   1400193ce:	int3   
   1400193cf:	int3   
   1400193d0:	cmp    DWORD PTR [rip+0x1fc49],0x0        # 0x140039020
   1400193d7:	jne    0x1400193e7
   1400193d9:	lea    eax,[rcx-0x41]
   1400193dc:	cmp    eax,0x19
   1400193df:	ja     0x1400193e4
   1400193e1:	add    ecx,0x20
   1400193e4:	mov    eax,ecx
   1400193e6:	ret    
   1400193e7:	xor    edx,edx
   1400193e9:	jmp    0x14001927c
   1400193ee:	int3   
   1400193ef:	int3   
   1400193f0:	sub    rsp,0x18
   1400193f4:	xor    r8d,r8d
   1400193f7:	mov    r9,rcx
   1400193fa:	test   edx,edx
   1400193fc:	jne    0x140019446
   1400193fe:	and    r9d,0xf
   140019402:	mov    rdx,rcx
   140019405:	xorps  xmm1,xmm1
   140019408:	and    rdx,0xfffffffffffffff0
   14001940c:	mov    ecx,r9d
   14001940f:	or     r9d,0xffffffff
   140019413:	shl    r9d,cl
   140019416:	movdqa xmm0,XMMWORD PTR [rdx]
   14001941a:	pcmpeqb xmm0,xmm1
   14001941e:	pmovmskb eax,xmm0
   140019422:	and    eax,r9d
   140019425:	jne    0x14001943b
   140019427:	add    rdx,0x10
   14001942b:	movdqa xmm0,XMMWORD PTR [rdx]
   14001942f:	pcmpeqb xmm0,xmm1
   140019433:	pmovmskb eax,xmm0
   140019437:	test   eax,eax
   140019439:	je     0x140019427
   14001943b:	bsf    eax,eax
   14001943e:	add    rax,rdx
   140019441:	jmp    0x1400194ec
   140019446:	cmp    DWORD PTR [rip+0x1cc97],0x2        # 0x1400360e4
   14001944d:	jge    0x1400194f1
   140019453:	mov    r10,rcx
   140019456:	movzx  eax,dl
   140019459:	and    r9d,0xf
   14001945d:	and    r10,0xfffffffffffffff0
   140019461:	mov    ecx,eax
   140019463:	xorps  xmm2,xmm2
   140019466:	shl    ecx,0x8
   140019469:	or     ecx,eax
   14001946b:	movd   xmm0,ecx
   14001946f:	mov    ecx,r9d
   140019472:	or     r9d,0xffffffff
   140019476:	shl    r9d,cl
   140019479:	pshuflw xmm1,xmm0,0x0
   14001947e:	movdqa xmm0,xmm2
   140019482:	pcmpeqb xmm0,XMMWORD PTR [r10]
   140019487:	pshufd xmm3,xmm1,0x0
   14001948c:	pmovmskb ecx,xmm0
   140019490:	movdqa xmm0,xmm3
   140019494:	pcmpeqb xmm0,XMMWORD PTR [r10]
   140019499:	pmovmskb edx,xmm0
   14001949d:	and    edx,r9d
   1400194a0:	and    ecx,r9d
   1400194a3:	jne    0x1400194d3
   1400194a5:	bsr    ecx,edx
   1400194a8:	movdqa xmm1,xmm2
   1400194ac:	movdqa xmm0,xmm3
   1400194b0:	add    rcx,r10
   1400194b3:	test   edx,edx
   1400194b5:	cmovne r8,rcx
   1400194b9:	add    r10,0x10
   1400194bd:	pcmpeqb xmm1,XMMWORD PTR [r10]
   1400194c2:	pcmpeqb xmm0,XMMWORD PTR [r10]
   1400194c7:	pmovmskb ecx,xmm1
   1400194cb:	pmovmskb edx,xmm0
   1400194cf:	test   ecx,ecx
   1400194d1:	je     0x1400194a5
   1400194d3:	mov    eax,ecx
   1400194d5:	neg    eax
   1400194d7:	and    eax,ecx
   1400194d9:	dec    eax
   1400194db:	and    edx,eax
   1400194dd:	bsr    ecx,edx
   1400194e0:	add    rcx,r10
   1400194e3:	test   edx,edx
   1400194e5:	cmovne r8,rcx
   1400194e9:	mov    rax,r8
   1400194ec:	add    rsp,0x18
   1400194f0:	ret    
   1400194f1:	test   cl,0xf
   1400194f4:	je     0x14001950f
   1400194f6:	movsx  eax,BYTE PTR [r9]
   1400194fa:	cmp    eax,edx
   1400194fc:	cmove  r8,r9
   140019500:	cmp    BYTE PTR [r9],0x0
   140019504:	je     0x1400194e9
   140019506:	inc    r9
   140019509:	test   r9b,0xf
   14001950d:	jne    0x1400194f6
   14001950f:	movzx  eax,dl
   140019512:	movd   xmm0,eax
   140019516:	pcmpistri xmm0,XMMWORD PTR [r9],0x40
   14001951d:	jae    0x14001952c
   14001951f:	movsxd r8,ecx
   140019522:	add    r8,r9
   140019525:	pcmpistri xmm0,XMMWORD PTR [r9],0x40
   14001952c:	je     0x1400194e9
   14001952e:	add    r9,0x10
   140019532:	jmp    0x140019516
   140019534:	mov    QWORD PTR [rsp+0x8],rbx
   140019539:	push   rdi
   14001953a:	sub    rsp,0x20
   14001953e:	mov    rbx,rcx
   140019541:	mov    rcx,QWORD PTR [r9+0x10]
   140019545:	xor    r10d,r10d
   140019548:	test   rbx,rbx
   14001954b:	jne    0x140019565
   14001954d:	call   0x1400095b8
   140019552:	mov    ebx,0x16
   140019557:	mov    DWORD PTR [rax],ebx
   140019559:	call   0x140008628
   14001955e:	mov    eax,ebx
   140019560:	jmp    0x1400195f4
   140019565:	test   rdx,rdx
   140019568:	je     0x14001954d
   14001956a:	mov    eax,r10d
   14001956d:	test   r8d,r8d
   140019570:	mov    BYTE PTR [rbx],r10b
   140019573:	cmovg  eax,r8d
   140019577:	inc    eax
   140019579:	cdqe   
   14001957b:	cmp    rdx,rax
   14001957e:	ja     0x14001958c
   140019580:	call   0x1400095b8
   140019585:	mov    ebx,0x22
   14001958a:	jmp    0x140019557
   14001958c:	lea    rdi,[rbx+0x1]
   140019590:	mov    BYTE PTR [rbx],0x30
   140019593:	mov    rax,rdi
   140019596:	jmp    0x1400195b2
   140019598:	cmp    BYTE PTR [rcx],r10b
   14001959b:	je     0x1400195a5
   14001959d:	movsx  edx,BYTE PTR [rcx]
   1400195a0:	inc    rcx
   1400195a3:	jmp    0x1400195aa
   1400195a5:	mov    edx,0x30
   1400195aa:	mov    BYTE PTR [rax],dl
   1400195ac:	inc    rax
   1400195af:	dec    r8d
   1400195b2:	test   r8d,r8d
   1400195b5:	jg     0x140019598
   1400195b7:	mov    BYTE PTR [rax],r10b
   1400195ba:	js     0x1400195d0
   1400195bc:	cmp    BYTE PTR [rcx],0x35
   1400195bf:	jl     0x1400195d0
   1400195c1:	jmp    0x1400195c6
   1400195c3:	mov    BYTE PTR [rax],0x30
   1400195c6:	dec    rax
   1400195c9:	cmp    BYTE PTR [rax],0x39
   1400195cc:	je     0x1400195c3
   1400195ce:	inc    BYTE PTR [rax]
   1400195d0:	cmp    BYTE PTR [rbx],0x31
   1400195d3:	jne    0x1400195db
   1400195d5:	inc    DWORD PTR [r9+0x4]
   1400195d9:	jmp    0x1400195f2
   1400195db:	mov    rcx,rdi
   1400195de:	call   0x140007730
   1400195e3:	mov    rdx,rdi
   1400195e6:	mov    rcx,rbx
   1400195e9:	lea    r8,[rax+0x1]
   1400195ed:	call   0x1400056d0
   1400195f2:	xor    eax,eax
   1400195f4:	mov    rbx,QWORD PTR [rsp+0x30]
   1400195f9:	add    rsp,0x20
   1400195fd:	pop    rdi
   1400195fe:	ret    
   1400195ff:	int3   
   140019600:	rex push rbx
   140019602:	push   rsi
   140019603:	push   rdi
   140019604:	sub    rsp,0x80
   14001960b:	mov    rax,QWORD PTR [rip+0x1d42e]        # 0x140036a40
   140019612:	xor    rax,rsp
   140019615:	mov    QWORD PTR [rsp+0x78],rax
   14001961a:	mov    rsi,rcx
   14001961d:	mov    rbx,rdx
   140019620:	lea    rcx,[rsp+0x48]
   140019625:	mov    rdx,r8
   140019628:	mov    rdi,r9
   14001962b:	call   0x14000a000
   140019630:	lea    rax,[rsp+0x48]
   140019635:	lea    rdx,[rsp+0x40]
   14001963a:	mov    QWORD PTR [rsp+0x38],rax
   14001963f:	and    DWORD PTR [rsp+0x30],0x0
   140019644:	and    DWORD PTR [rsp+0x28],0x0
   140019649:	and    DWORD PTR [rsp+0x20],0x0
   14001964e:	lea    rcx,[rsp+0x68]
   140019653:	xor    r9d,r9d
   140019656:	mov    r8,rbx
   140019659:	call   0x14001fa34
   14001965e:	mov    ebx,eax
   140019660:	test   rdi,rdi
   140019663:	je     0x14001966d
   140019665:	mov    rcx,QWORD PTR [rsp+0x40]
   14001966a:	mov    QWORD PTR [rdi],rcx
   14001966d:	lea    rcx,[rsp+0x68]
   140019672:	mov    rdx,rsi
   140019675:	call   0x14001ebdc
   14001967a:	mov    ecx,eax
   14001967c:	mov    eax,0x3
   140019681:	test   al,bl
   140019683:	jne    0x140019691
   140019685:	cmp    ecx,0x1
   140019688:	je     0x1400196a4
   14001968a:	cmp    ecx,0x2
   14001968d:	jne    0x1400196a2
   14001968f:	jmp    0x140019696
   140019691:	test   bl,0x1
   140019694:	je     0x14001969d
   140019696:	mov    eax,0x4
   14001969b:	jmp    0x1400196a4
   14001969d:	test   bl,0x2
   1400196a0:	jne    0x1400196a4
   1400196a2:	xor    eax,eax
   1400196a4:	cmp    BYTE PTR [rsp+0x60],0x0
   1400196a9:	je     0x1400196b7
   1400196ab:	mov    rcx,QWORD PTR [rsp+0x58]
   1400196b0:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   1400196b7:	mov    rcx,QWORD PTR [rsp+0x78]
   1400196bc:	xor    rcx,rsp
   1400196bf:	call   0x14000d0a0
   1400196c4:	add    rsp,0x80
   1400196cb:	pop    rdi
   1400196cc:	pop    rsi
   1400196cd:	pop    rbx
   1400196ce:	ret    
   1400196cf:	int3   
   1400196d0:	xor    r8d,r8d
   1400196d3:	jmp    0x1400196d8
   1400196d8:	mov    QWORD PTR [rsp+0x18],rbx
   1400196dd:	push   rdi
   1400196de:	sub    rsp,0x80
   1400196e5:	mov    rax,QWORD PTR [rip+0x1d354]        # 0x140036a40
   1400196ec:	xor    rax,rsp
   1400196ef:	mov    QWORD PTR [rsp+0x78],rax
   1400196f4:	mov    rdi,rcx
   1400196f7:	mov    rbx,rdx
   1400196fa:	lea    rcx,[rsp+0x40]
   1400196ff:	mov    rdx,r8
   140019702:	call   0x14000a000
   140019707:	lea    rax,[rsp+0x40]
   14001970c:	lea    rdx,[rsp+0x60]
   140019711:	mov    QWORD PTR [rsp+0x38],rax
   140019716:	and    DWORD PTR [rsp+0x30],0x0
   14001971b:	and    DWORD PTR [rsp+0x28],0x0
   140019720:	and    DWORD PTR [rsp+0x20],0x0
   140019725:	lea    rcx,[rsp+0x68]
   14001972a:	xor    r9d,r9d
   14001972d:	mov    r8,rbx
   140019730:	call   0x14001fa34
   140019735:	lea    rcx,[rsp+0x68]
   14001973a:	mov    rdx,rdi
   14001973d:	mov    ebx,eax
   14001973f:	call   0x14001e624
   140019744:	mov    ecx,eax
   140019746:	mov    eax,0x3
   14001974b:	test   al,bl
   14001974d:	jne    0x14001975b
   14001974f:	cmp    ecx,0x1
   140019752:	je     0x14001976e
   140019754:	cmp    ecx,0x2
   140019757:	jne    0x14001976c
   140019759:	jmp    0x140019760
   14001975b:	test   bl,0x1
   14001975e:	je     0x140019767
   140019760:	mov    eax,0x4
   140019765:	jmp    0x14001976e
   140019767:	test   bl,0x2
   14001976a:	jne    0x14001976e
   14001976c:	xor    eax,eax
   14001976e:	cmp    BYTE PTR [rsp+0x58],0x0
   140019773:	je     0x140019781
   140019775:	mov    rcx,QWORD PTR [rsp+0x50]
   14001977a:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140019781:	mov    rcx,QWORD PTR [rsp+0x78]
   140019786:	xor    rcx,rsp
   140019789:	call   0x14000d0a0
   14001978e:	mov    rbx,QWORD PTR [rsp+0xa0]
   140019796:	add    rsp,0x80
   14001979d:	pop    rdi
   14001979e:	ret    
   14001979f:	int3   
   1400197a0:	xor    r9d,r9d
   1400197a3:	xor    r8d,r8d
   1400197a6:	jmp    0x140019600
   1400197ab:	int3   
   1400197ac:	xor    r9d,r9d
   1400197af:	jmp    0x140019600
   1400197b4:	xor    r8d,r8d
   1400197b7:	jmp    0x1400197bc
   1400197bc:	mov    QWORD PTR [rsp+0x18],rbx
   1400197c1:	push   rdi
   1400197c2:	sub    rsp,0x80
   1400197c9:	mov    rax,QWORD PTR [rip+0x1d270]        # 0x140036a40
   1400197d0:	xor    rax,rsp
   1400197d3:	mov    QWORD PTR [rsp+0x78],rax
   1400197d8:	mov    rdi,rcx
   1400197db:	mov    rbx,rdx
   1400197de:	lea    rcx,[rsp+0x40]
   1400197e3:	mov    rdx,r8
   1400197e6:	call   0x14000a000
   1400197eb:	lea    rax,[rsp+0x40]
   1400197f0:	lea    rdx,[rsp+0x60]
   1400197f5:	mov    QWORD PTR [rsp+0x38],rax
   1400197fa:	and    DWORD PTR [rsp+0x30],0x0
   1400197ff:	and    DWORD PTR [rsp+0x28],0x0
   140019804:	and    DWORD PTR [rsp+0x20],0x0
   140019809:	lea    rcx,[rsp+0x68]
   14001980e:	mov    r9d,0x1
   140019814:	mov    r8,rbx
   140019817:	call   0x14001fa34
   14001981c:	lea    rcx,[rsp+0x68]
   140019821:	mov    rdx,rdi
   140019824:	mov    ebx,eax
   140019826:	call   0x14001f194
   14001982b:	mov    ecx,eax
   14001982d:	mov    eax,0x3
   140019832:	test   al,bl
   140019834:	jne    0x140019842
   140019836:	cmp    ecx,0x1
   140019839:	je     0x140019855
   14001983b:	cmp    ecx,0x2
   14001983e:	jne    0x140019853
   140019840:	jmp    0x140019847
   140019842:	test   bl,0x1
   140019845:	je     0x14001984e
   140019847:	mov    eax,0x4
   14001984c:	jmp    0x140019855
   14001984e:	test   bl,0x2
   140019851:	jne    0x140019855
   140019853:	xor    eax,eax
   140019855:	cmp    BYTE PTR [rsp+0x58],0x0
   14001985a:	je     0x140019868
   14001985c:	mov    rcx,QWORD PTR [rsp+0x50]
   140019861:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140019868:	mov    rcx,QWORD PTR [rsp+0x78]
   14001986d:	xor    rcx,rsp
   140019870:	call   0x14000d0a0
   140019875:	mov    rbx,QWORD PTR [rsp+0xa0]
   14001987d:	add    rsp,0x80
   140019884:	pop    rdi
   140019885:	ret    
   140019886:	int3   
   140019887:	int3   
   140019888:	mov    QWORD PTR [rsp+0x8],rbx
   14001988d:	movzx  r11d,WORD PTR [rdx+0x6]
   140019892:	mov    r10,rcx
   140019895:	mov    ecx,DWORD PTR [rdx+0x4]
   140019898:	movzx  r8d,r11w
   14001989c:	mov    eax,0x8000
   1400198a1:	mov    r9d,0x7ff
   1400198a7:	shr    r8w,0x4
   1400198ac:	and    r11w,ax
   1400198b0:	mov    eax,DWORD PTR [rdx]
   1400198b2:	and    r8w,r9w
   1400198b6:	and    ecx,0xfffff
   1400198bc:	mov    ebx,0x80000000
   1400198c1:	movzx  edx,r8w
   1400198c5:	test   edx,edx
   1400198c7:	je     0x1400198e1
   1400198c9:	cmp    edx,r9d
   1400198cc:	je     0x1400198d9
   1400198ce:	mov    edx,0x3c00
   1400198d3:	add    r8w,dx
   1400198d7:	jmp    0x1400198fd
   1400198d9:	mov    r8d,0x7fff
   1400198df:	jmp    0x1400198fd
   1400198e1:	test   ecx,ecx
   1400198e3:	jne    0x1400198f2
   1400198e5:	test   eax,eax
   1400198e7:	jne    0x1400198f2
   1400198e9:	and    DWORD PTR [r10+0x4],eax
   1400198ed:	and    DWORD PTR [r10],eax
   1400198f0:	jmp    0x14001994a
   1400198f2:	mov    edx,0x3c01
   1400198f7:	add    r8w,dx
   1400198fb:	xor    ebx,ebx
   1400198fd:	mov    r9d,eax
   140019900:	shl    ecx,0xb
   140019903:	shl    eax,0xb
   140019906:	shr    r9d,0x15
   14001990a:	mov    DWORD PTR [r10],eax
   14001990d:	or     r9d,ecx
   140019910:	or     r9d,ebx
   140019913:	mov    DWORD PTR [r10+0x4],r9d
   140019917:	test   r9d,r9d
   14001991a:	js     0x140019946
   14001991c:	mov    edx,DWORD PTR [r10]
   14001991f:	lea    eax,[r9+r9*1]
   140019923:	mov    ecx,edx
   140019925:	shr    ecx,0x1f
   140019928:	mov    r9d,ecx
   14001992b:	or     r9d,eax
   14001992e:	lea    eax,[rdx+rdx*1]
   140019931:	mov    DWORD PTR [r10],eax
   140019934:	mov    eax,0xffff
   140019939:	add    r8w,ax
   14001993d:	test   r9d,r9d
   140019940:	jns    0x14001991c
   140019942:	mov    DWORD PTR [r10+0x4],r9d
   140019946:	or     r11w,r8w
   14001994a:	mov    rbx,QWORD PTR [rsp+0x8]
   14001994f:	mov    WORD PTR [r10+0x8],r11w
   140019954:	ret    
   140019955:	int3   
   140019956:	int3   
   140019957:	int3   
   140019958:	rex push rbp
   14001995a:	push   rbx
   14001995b:	push   rsi
   14001995c:	push   rdi
   14001995d:	lea    rbp,[rsp-0x3f]
   140019962:	sub    rsp,0x88
   140019969:	mov    rax,QWORD PTR [rip+0x1d0d0]        # 0x140036a40
   140019970:	xor    rax,rsp
   140019973:	mov    QWORD PTR [rbp+0x27],rax
   140019977:	mov    rdi,rdx
   14001997a:	mov    QWORD PTR [rbp-0x19],rcx
   14001997e:	lea    rdx,[rbp-0x19]
   140019982:	lea    rcx,[rbp-0x9]
   140019986:	mov    rbx,r9
   140019989:	mov    rsi,r8
   14001998c:	call   0x140019888
   140019991:	movzx  eax,WORD PTR [rbp-0x1]
   140019995:	xor    r8d,r8d
   140019998:	movsd  xmm0,QWORD PTR [rbp-0x9]
   14001999d:	movsd  QWORD PTR [rbp-0x19],xmm0
   1400199a2:	lea    r9,[rbp+0x7]
   1400199a6:	lea    rcx,[rbp-0x19]
   1400199aa:	lea    edx,[r8+0x11]
   1400199ae:	mov    WORD PTR [rbp-0x11],ax
   1400199b2:	call   0x140020298
   1400199b7:	movsx  ecx,BYTE PTR [rbp+0x9]
   1400199bb:	mov    DWORD PTR [rdi],ecx
   1400199bd:	movsx  ecx,WORD PTR [rbp+0x7]
   1400199c1:	lea    r8,[rbp+0xb]
   1400199c5:	mov    DWORD PTR [rdi+0x4],ecx
   1400199c8:	mov    rdx,rbx
   1400199cb:	mov    rcx,rsi
   1400199ce:	mov    DWORD PTR [rdi+0x8],eax
   1400199d1:	call   0x14000ee64
   1400199d6:	test   eax,eax
   1400199d8:	jne    0x1400199f9
   1400199da:	mov    QWORD PTR [rdi+0x10],rsi
   1400199de:	mov    rax,rdi
   1400199e1:	mov    rcx,QWORD PTR [rbp+0x27]
   1400199e5:	xor    rcx,rsp
   1400199e8:	call   0x14000d0a0
   1400199ed:	add    rsp,0x88
   1400199f4:	pop    rdi
   1400199f5:	pop    rsi
   1400199f6:	pop    rbx
   1400199f7:	pop    rbp
   1400199f8:	ret    
   1400199f9:	and    QWORD PTR [rsp+0x20],0x0
   1400199ff:	xor    r9d,r9d
   140019a02:	xor    r8d,r8d
   140019a05:	xor    edx,edx
   140019a07:	xor    ecx,ecx
   140019a09:	call   0x140008678
   140019a0e:	int3   
   140019a0f:	int3   
   140019a10:	mov    eax,DWORD PTR [rip+0x1f5fe]        # 0x140039014
   140019a16:	ret    
   140019a17:	int3   
   140019a18:	rex push rbx
   140019a1a:	sub    rsp,0x20
   140019a1e:	mov    ebx,DWORD PTR [rip+0x1f5f0]        # 0x140039014
   140019a24:	test   ecx,0xfffffffe
   140019a2a:	je     0x140019a3e
   140019a2c:	call   0x1400095b8
   140019a31:	mov    DWORD PTR [rax],0x16
   140019a37:	call   0x140008628
   140019a3c:	jmp    0x140019a44
   140019a3e:	mov    DWORD PTR [rip+0x1f5d0],ecx        # 0x140039014
   140019a44:	mov    eax,ebx
   140019a46:	add    rsp,0x20
   140019a4a:	pop    rbx
   140019a4b:	ret    
   140019a4c:	mov    QWORD PTR [rsp+0x8],rbx
   140019a51:	mov    QWORD PTR [rsp+0x10],rsi
   140019a56:	push   rdi
   140019a57:	sub    rsp,0x40
   140019a5b:	mov    ebx,edx
   140019a5d:	mov    rdx,rcx
   140019a60:	lea    rcx,[rsp+0x20]
   140019a65:	mov    edi,r9d
   140019a68:	mov    esi,r8d
   140019a6b:	call   0x14000a000
   140019a70:	mov    rax,QWORD PTR [rsp+0x28]
   140019a75:	movzx  edx,bl
   140019a78:	test   BYTE PTR [rdx+rax*1+0x19],dil
   140019a7d:	jne    0x140019a9d
   140019a7f:	test   esi,esi
   140019a81:	je     0x140019a97
   140019a83:	mov    rax,QWORD PTR [rsp+0x20]
   140019a88:	mov    rcx,QWORD PTR [rax+0x108]
   140019a8f:	movzx  eax,WORD PTR [rcx+rdx*2]
   140019a93:	and    eax,esi
   140019a95:	jmp    0x140019a99
   140019a97:	xor    eax,eax
   140019a99:	test   eax,eax
   140019a9b:	je     0x140019aa2
   140019a9d:	mov    eax,0x1
   140019aa2:	cmp    BYTE PTR [rsp+0x38],0x0
   140019aa7:	je     0x140019ab5
   140019aa9:	mov    rcx,QWORD PTR [rsp+0x30]
   140019aae:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140019ab5:	mov    rbx,QWORD PTR [rsp+0x50]
   140019aba:	mov    rsi,QWORD PTR [rsp+0x58]
   140019abf:	add    rsp,0x40
   140019ac3:	pop    rdi
   140019ac4:	ret    
   140019ac5:	int3   
   140019ac6:	int3   
   140019ac7:	int3   
   140019ac8:	mov    edx,ecx
   140019aca:	mov    r9d,0x1
   140019ad0:	mov    r8d,0x107
   140019ad6:	xor    ecx,ecx
   140019ad8:	jmp    0x140019a4c
   140019add:	int3   
   140019ade:	int3   
   140019adf:	int3   
   140019ae0:	mov    rax,rdx
   140019ae3:	mov    edx,ecx
   140019ae5:	mov    r9d,0x1
   140019aeb:	mov    rcx,rax
   140019aee:	mov    r8d,0x107
   140019af4:	jmp    0x140019a4c
   140019af9:	int3   
   140019afa:	int3   
   140019afb:	int3   
   140019afc:	mov    edx,ecx
   140019afe:	mov    r9d,0x1
   140019b04:	mov    r8d,0x103
   140019b0a:	xor    ecx,ecx
   140019b0c:	jmp    0x140019a4c
   140019b11:	int3   
   140019b12:	int3   
   140019b13:	int3   
   140019b14:	mov    rax,rdx
   140019b17:	mov    edx,ecx
   140019b19:	mov    r9d,0x1
   140019b1f:	mov    rcx,rax
   140019b22:	mov    r8d,0x103
   140019b28:	jmp    0x140019a4c
   140019b2d:	int3   
   140019b2e:	int3   
   140019b2f:	int3   
   140019b30:	cmp    ecx,0x9
   140019b33:	jne    0x140019b39
   140019b35:	lea    eax,[rcx+0x37]
   140019b38:	ret    
   140019b39:	mov    r9d,0x2
   140019b3f:	mov    edx,ecx
   140019b41:	xor    ecx,ecx
   140019b43:	lea    r8d,[r9+0x3e]
   140019b47:	jmp    0x140019a4c
   140019b4c:	mov    r10,rdx
   140019b4f:	cmp    ecx,0x9
   140019b52:	jne    0x140019b58
   140019b54:	lea    eax,[rcx+0x37]
   140019b57:	ret    
   140019b58:	mov    r9d,0x2
   140019b5e:	mov    edx,ecx
   140019b60:	mov    rcx,r10
   140019b63:	lea    r8d,[r9+0x3e]
   140019b67:	jmp    0x140019a4c
   140019b6c:	mov    edx,ecx
   140019b6e:	mov    r9d,0x3
   140019b74:	mov    r8d,0x117
   140019b7a:	xor    ecx,ecx
   140019b7c:	jmp    0x140019a4c
   140019b81:	int3   
   140019b82:	int3   
   140019b83:	int3   
   140019b84:	mov    rax,rdx
   140019b87:	mov    edx,ecx
   140019b89:	mov    r9d,0x3
   140019b8f:	mov    rcx,rax
   140019b92:	mov    r8d,0x117
   140019b98:	jmp    0x140019a4c
   140019b9d:	int3   
   140019b9e:	int3   
   140019b9f:	int3   
   140019ba0:	mov    edx,ecx
   140019ba2:	mov    r9d,0x1
   140019ba8:	xor    r8d,r8d
   140019bab:	xor    ecx,ecx
   140019bad:	jmp    0x140019a4c
   140019bb2:	int3   
   140019bb3:	int3   
   140019bb4:	mov    rax,rdx
   140019bb7:	mov    edx,ecx
   140019bb9:	mov    r9d,0x1
   140019bbf:	mov    rcx,rax
   140019bc2:	xor    r8d,r8d
   140019bc5:	jmp    0x140019a4c
   140019bca:	int3   
   140019bcb:	int3   
   140019bcc:	xor    edx,edx
   140019bce:	jmp    0x140019bd4
   140019bd3:	int3   
   140019bd4:	mov    QWORD PTR [rsp+0x8],rbx
   140019bd9:	push   rdi
   140019bda:	sub    rsp,0x40
   140019bde:	mov    edi,ecx
   140019be0:	lea    rcx,[rsp+0x20]
   140019be5:	mov    rbx,rdx
   140019be8:	call   0x14000a000
   140019bed:	mov    rax,QWORD PTR [rsp+0x28]
   140019bf2:	test   rax,rax
   140019bf5:	je     0x140019c17
   140019bf7:	cmp    DWORD PTR [rax+0x4],0x3a4
   140019bfe:	jne    0x140019c17
   140019c00:	mov    r9d,0x3
   140019c06:	xor    r8d,r8d
   140019c09:	mov    edx,edi
   140019c0b:	mov    rcx,rbx
   140019c0e:	call   0x140019a4c
   140019c13:	mov    ecx,eax
   140019c15:	jmp    0x140019c19
   140019c17:	xor    ecx,ecx
   140019c19:	cmp    BYTE PTR [rsp+0x38],0x0
   140019c1e:	je     0x140019c2c
   140019c20:	mov    rax,QWORD PTR [rsp+0x30]
   140019c25:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140019c2c:	mov    eax,ecx
   140019c2e:	mov    rbx,QWORD PTR [rsp+0x50]
   140019c33:	add    rsp,0x40
   140019c37:	pop    rdi
   140019c38:	ret    
   140019c39:	int3   
   140019c3a:	int3   
   140019c3b:	int3   
   140019c3c:	mov    edx,ecx
   140019c3e:	mov    r9d,0x3
   140019c44:	xor    r8d,r8d
   140019c47:	xor    ecx,ecx
   140019c49:	jmp    0x140019a4c
   140019c4e:	int3   
   140019c4f:	int3   
   140019c50:	mov    rax,rdx
   140019c53:	mov    edx,ecx
   140019c55:	mov    r9d,0x3
   140019c5b:	mov    rcx,rax
   140019c5e:	xor    r8d,r8d
   140019c61:	jmp    0x140019a4c
   140019c66:	int3   
   140019c67:	int3   
   140019c68:	mov    edx,ecx
   140019c6a:	mov    r9d,0x2
   140019c70:	xor    r8d,r8d
   140019c73:	xor    ecx,ecx
   140019c75:	jmp    0x140019a4c
   140019c7a:	int3   
   140019c7b:	int3   
   140019c7c:	mov    rax,rdx
   140019c7f:	mov    edx,ecx
   140019c81:	mov    r9d,0x2
   140019c87:	mov    rcx,rax
   140019c8a:	xor    r8d,r8d
   140019c8d:	jmp    0x140019a4c
   140019c92:	int3   
   140019c93:	int3   
   140019c94:	mov    edx,ecx
   140019c96:	mov    r9d,0x4
   140019c9c:	xor    r8d,r8d
   140019c9f:	xor    ecx,ecx
   140019ca1:	jmp    0x140019a4c
   140019ca6:	int3   
   140019ca7:	int3   
   140019ca8:	mov    rax,rdx
   140019cab:	mov    edx,ecx
   140019cad:	mov    r9d,0x4
   140019cb3:	mov    rcx,rax
   140019cb6:	xor    r8d,r8d
   140019cb9:	jmp    0x140019a4c
   140019cbe:	int3   
   140019cbf:	int3   
   140019cc0:	mov    edx,ecx
   140019cc2:	mov    r9d,0x3
   140019cc8:	mov    r8d,0x157
   140019cce:	xor    ecx,ecx
   140019cd0:	jmp    0x140019a4c
   140019cd5:	int3   
   140019cd6:	int3   
   140019cd7:	int3   
   140019cd8:	mov    rax,rdx
   140019cdb:	mov    edx,ecx
   140019cdd:	mov    r9d,0x3
   140019ce3:	mov    rcx,rax
   140019ce6:	mov    r8d,0x157
   140019cec:	jmp    0x140019a4c
   140019cf1:	int3   
   140019cf2:	int3   
   140019cf3:	int3   
   140019cf4:	mov    r9d,0x2
   140019cfa:	mov    edx,ecx
   140019cfc:	xor    ecx,ecx
   140019cfe:	lea    r8d,[r9+0xe]
   140019d02:	jmp    0x140019a4c
   140019d07:	int3   
   140019d08:	mov    rax,rdx
   140019d0b:	mov    r9d,0x2
   140019d11:	mov    edx,ecx
   140019d13:	lea    r8d,[r9+0xe]
   140019d17:	mov    rcx,rax
   140019d1a:	jmp    0x140019a4c
   140019d1f:	int3   
   140019d20:	mov    edx,ecx
   140019d22:	mov    r9d,0x8
   140019d28:	xor    r8d,r8d
   140019d2b:	xor    ecx,ecx
   140019d2d:	jmp    0x140019a4c
   140019d32:	int3   
   140019d33:	int3   
   140019d34:	mov    rax,rdx
   140019d37:	mov    edx,ecx
   140019d39:	mov    r9d,0x8
   140019d3f:	mov    rcx,rax
   140019d42:	xor    r8d,r8d
   140019d45:	jmp    0x140019a4c
   140019d4a:	int3   
   140019d4b:	int3   
   140019d4c:	int3   
   140019d4d:	int3   
   140019d4e:	int3   
   140019d4f:	int3   
   140019d50:	int3   
   140019d51:	int3   
   140019d52:	int3   
   140019d53:	int3   
   140019d54:	int3   
   140019d55:	int3   
   140019d56:	data16 nop WORD PTR [rax+rax*1+0x0]
   140019d60:	sub    rsp,0x10
   140019d64:	mov    QWORD PTR [rsp],r10
   140019d68:	mov    QWORD PTR [rsp+0x8],r11
   140019d6d:	xor    r11,r11
   140019d70:	lea    r10,[rsp+0x18]
   140019d75:	sub    r10,rax
   140019d78:	cmovb  r10,r11
   140019d7c:	mov    r11,QWORD PTR gs:0x10
   140019d85:	cmp    r10,r11
   140019d88:	jae    0x140019da0
   140019d8a:	and    r10w,0xf000
   140019d90:	lea    r11,[r11-0x1000]
   140019d97:	mov    BYTE PTR [r11],0x0
   140019d9b:	cmp    r10,r11
   140019d9e:	jne    0x140019d90
   140019da0:	mov    r10,QWORD PTR [rsp]
   140019da4:	mov    r11,QWORD PTR [rsp+0x8]
   140019da9:	add    rsp,0x10
   140019dad:	ret    
   140019dae:	int3   
   140019daf:	int3   
   140019db0:	xor    r8d,r8d
   140019db3:	mov    eax,r8d
   140019db6:	test   rdx,rdx
   140019db9:	je     0x140019dcd
   140019dbb:	cmp    WORD PTR [rcx],r8w
   140019dbf:	je     0x140019dcd
   140019dc1:	inc    rax
   140019dc4:	add    rcx,0x2
   140019dc8:	cmp    rax,rdx
   140019dcb:	jb     0x140019dbb
   140019dcd:	ret    
   140019dce:	int3   
   140019dcf:	int3   
   140019dd0:	test   rcx,rcx
   140019dd3:	je     0x140019ed9
   140019dd9:	push   rbx
   140019dda:	sub    rsp,0x20
   140019dde:	mov    rbx,rcx
   140019de1:	mov    rcx,QWORD PTR [rcx+0x18]
   140019de5:	cmp    rcx,QWORD PTR [rip+0x1d6cc]        # 0x1400374b8
   140019dec:	je     0x140019df3
   140019dee:	call   0x140006444
   140019df3:	mov    rcx,QWORD PTR [rbx+0x20]
   140019df7:	cmp    rcx,QWORD PTR [rip+0x1d6c2]        # 0x1400374c0
   140019dfe:	je     0x140019e05
   140019e00:	call   0x140006444
   140019e05:	mov    rcx,QWORD PTR [rbx+0x28]
   140019e09:	cmp    rcx,QWORD PTR [rip+0x1d6b8]        # 0x1400374c8
   140019e10:	je     0x140019e17
   140019e12:	call   0x140006444
   140019e17:	mov    rcx,QWORD PTR [rbx+0x30]
   140019e1b:	cmp    rcx,QWORD PTR [rip+0x1d6ae]        # 0x1400374d0
   140019e22:	je     0x140019e29
   140019e24:	call   0x140006444
   140019e29:	mov    rcx,QWORD PTR [rbx+0x38]
   140019e2d:	cmp    rcx,QWORD PTR [rip+0x1d6a4]        # 0x1400374d8
   140019e34:	je     0x140019e3b
   140019e36:	call   0x140006444
   140019e3b:	mov    rcx,QWORD PTR [rbx+0x40]
   140019e3f:	cmp    rcx,QWORD PTR [rip+0x1d69a]        # 0x1400374e0
   140019e46:	je     0x140019e4d
   140019e48:	call   0x140006444
   140019e4d:	mov    rcx,QWORD PTR [rbx+0x48]
   140019e51:	cmp    rcx,QWORD PTR [rip+0x1d690]        # 0x1400374e8
   140019e58:	je     0x140019e5f
   140019e5a:	call   0x140006444
   140019e5f:	mov    rcx,QWORD PTR [rbx+0x68]
   140019e63:	cmp    rcx,QWORD PTR [rip+0x1d69e]        # 0x140037508
   140019e6a:	je     0x140019e71
   140019e6c:	call   0x140006444
   140019e71:	mov    rcx,QWORD PTR [rbx+0x70]
   140019e75:	cmp    rcx,QWORD PTR [rip+0x1d694]        # 0x140037510
   140019e7c:	je     0x140019e83
   140019e7e:	call   0x140006444
   140019e83:	mov    rcx,QWORD PTR [rbx+0x78]
   140019e87:	cmp    rcx,QWORD PTR [rip+0x1d68a]        # 0x140037518
   140019e8e:	je     0x140019e95
   140019e90:	call   0x140006444
   140019e95:	mov    rcx,QWORD PTR [rbx+0x80]
   140019e9c:	cmp    rcx,QWORD PTR [rip+0x1d67d]        # 0x140037520
   140019ea3:	je     0x140019eaa
   140019ea5:	call   0x140006444
   140019eaa:	mov    rcx,QWORD PTR [rbx+0x88]
   140019eb1:	cmp    rcx,QWORD PTR [rip+0x1d670]        # 0x140037528
   140019eb8:	je     0x140019ebf
   140019eba:	call   0x140006444
   140019ebf:	mov    rcx,QWORD PTR [rbx+0x90]
   140019ec6:	cmp    rcx,QWORD PTR [rip+0x1d663]        # 0x140037530
   140019ecd:	je     0x140019ed4
   140019ecf:	call   0x140006444
   140019ed4:	add    rsp,0x20
   140019ed8:	pop    rbx
   140019ed9:	ret    
   140019eda:	int3   
   140019edb:	int3   
   140019edc:	mov    QWORD PTR [rsp+0x8],rbx
   140019ee1:	mov    QWORD PTR [rsp+0x10],rsi
   140019ee6:	mov    QWORD PTR [rsp+0x18],rdi
   140019eeb:	push   rbp
   140019eec:	push   r12
   140019eee:	push   r13
   140019ef0:	push   r14
   140019ef2:	push   r15
   140019ef4:	mov    rbp,rsp
   140019ef7:	sub    rsp,0x40
   140019efb:	xor    ebx,ebx
   140019efd:	mov    rsi,rcx
   140019f00:	mov    QWORD PTR [rbp-0x10],rcx
   140019f04:	mov    r15d,ebx
   140019f07:	mov    QWORD PTR [rbp-0x8],rbx
   140019f0b:	cmp    QWORD PTR [rcx+0x140],rbx
   140019f12:	jne    0x140019f2c
   140019f14:	cmp    QWORD PTR [rcx+0x148],rbx
   140019f1b:	jne    0x140019f2c
   140019f1d:	mov    r12d,ebx
   140019f20:	lea    r14,[rip+0x1d579]        # 0x1400374a0
   140019f27:	jmp    0x14001a36f
   140019f2c:	mov    edx,0x98
   140019f31:	mov    ecx,0x1
   140019f36:	call   0x140007ed4
   140019f3b:	mov    r14,rax
   140019f3e:	test   rax,rax
   140019f41:	jne    0x140019f4d
   140019f43:	mov    eax,0x1
   140019f48:	jmp    0x14001a3be
   140019f4d:	mov    edi,0x4
   140019f52:	mov    ecx,edi
   140019f54:	call   0x140007f54
   140019f59:	mov    r12,rax
   140019f5c:	test   rax,rax
   140019f5f:	jne    0x140019f6b
   140019f61:	mov    rcx,r14
   140019f64:	call   0x140006444
   140019f69:	jmp    0x140019f43
   140019f6b:	mov    DWORD PTR [rax],ebx
   140019f6d:	cmp    QWORD PTR [rsi+0x140],rbx
   140019f74:	je     0x14001a2ac
   140019f7a:	mov    rcx,rdi
   140019f7d:	call   0x140007f54
   140019f82:	mov    r15,rax
   140019f85:	test   rax,rax
   140019f88:	jne    0x140019f97
   140019f8a:	mov    rcx,r14
   140019f8d:	call   0x140006444
   140019f92:	mov    rcx,r12
   140019f95:	jmp    0x140019f64
   140019f97:	mov    DWORD PTR [rax],ebx
   140019f99:	mov    rdi,QWORD PTR [rsi+0x140]
   140019fa0:	mov    r9d,0x15
   140019fa6:	lea    rax,[r14+0x18]
   140019faa:	lea    rcx,[rbp-0x10]
   140019fae:	lea    edx,[r9-0x14]
   140019fb2:	mov    r8,rdi
   140019fb5:	mov    QWORD PTR [rsp+0x20],rax
   140019fba:	call   0x140007bd0
   140019fbf:	lea    rcx,[r14+0x20]
   140019fc3:	mov    r9d,0x14
   140019fc9:	mov    QWORD PTR [rsp+0x20],rcx
   140019fce:	lea    edx,[r9-0x13]
   140019fd2:	lea    rcx,[rbp-0x10]
   140019fd6:	mov    r8,rdi
   140019fd9:	mov    ebx,eax
   140019fdb:	call   0x140007bd0
   140019fe0:	lea    rcx,[r14+0x28]
   140019fe4:	mov    r9d,0x16
   140019fea:	mov    QWORD PTR [rsp+0x20],rcx
   140019fef:	lea    edx,[r9-0x15]
   140019ff3:	lea    rcx,[rbp-0x10]
   140019ff7:	mov    r8,rdi
   140019ffa:	or     ebx,eax
   140019ffc:	call   0x140007bd0
   14001a001:	mov    r9d,0x17
   14001a007:	lea    rcx,[rbp-0x10]
   14001a00b:	or     ebx,eax
   14001a00d:	lea    rax,[r14+0x30]
   14001a011:	lea    edx,[r9-0x16]
   14001a015:	mov    r8,rdi
   14001a018:	mov    QWORD PTR [rsp+0x20],rax
   14001a01d:	call   0x140007bd0
   14001a022:	mov    r9d,0x18
   14001a028:	lea    r13,[r14+0x38]
   14001a02c:	lea    rcx,[rbp-0x10]
   14001a030:	lea    edx,[r9-0x17]
   14001a034:	mov    r8,rdi
   14001a037:	or     ebx,eax
   14001a039:	mov    QWORD PTR [rsp+0x20],r13
   14001a03e:	call   0x140007bd0
   14001a043:	mov    r9d,0x50
   14001a049:	or     ebx,eax
   14001a04b:	lea    rax,[r14+0x40]
   14001a04f:	lea    rcx,[rbp-0x10]
   14001a053:	lea    edx,[r9-0x4f]
   14001a057:	mov    r8,rdi
   14001a05a:	mov    QWORD PTR [rsp+0x20],rax
   14001a05f:	call   0x140007bd0
   14001a064:	mov    r9d,0x51
   14001a06a:	or     ebx,eax
   14001a06c:	lea    rax,[r14+0x48]
   14001a070:	lea    rcx,[rbp-0x10]
   14001a074:	lea    edx,[r9-0x50]
   14001a078:	mov    r8,rdi
   14001a07b:	mov    QWORD PTR [rsp+0x20],rax
   14001a080:	call   0x140007bd0
   14001a085:	lea    rcx,[rbp-0x10]
   14001a089:	mov    r9d,0x1a
   14001a08f:	or     ebx,eax
   14001a091:	lea    rax,[r14+0x50]
   14001a095:	mov    r8,rdi
   14001a098:	xor    edx,edx
   14001a09a:	mov    QWORD PTR [rsp+0x20],rax
   14001a09f:	call   0x140007bd0
   14001a0a4:	lea    rcx,[rbp-0x10]
   14001a0a8:	mov    r9d,0x19
   14001a0ae:	or     ebx,eax
   14001a0b0:	lea    rax,[r14+0x51]
   14001a0b4:	mov    r8,rdi
   14001a0b7:	xor    edx,edx
   14001a0b9:	mov    QWORD PTR [rsp+0x20],rax
   14001a0be:	call   0x140007bd0
   14001a0c3:	lea    rcx,[rbp-0x10]
   14001a0c7:	mov    r9d,0x54
   14001a0cd:	or     ebx,eax
   14001a0cf:	lea    rax,[r14+0x52]
   14001a0d3:	mov    r8,rdi
   14001a0d6:	xor    edx,edx
   14001a0d8:	mov    QWORD PTR [rsp+0x20],rax
   14001a0dd:	call   0x140007bd0
   14001a0e2:	or     ebx,eax
   14001a0e4:	lea    rax,[r14+0x53]
   14001a0e8:	lea    rcx,[rbp-0x10]
   14001a0ec:	mov    r9d,0x55
   14001a0f2:	mov    r8,rdi
   14001a0f5:	xor    edx,edx
   14001a0f7:	mov    QWORD PTR [rsp+0x20],rax
   14001a0fc:	call   0x140007bd0
   14001a101:	lea    rcx,[rbp-0x10]
   14001a105:	or     ebx,eax
   14001a107:	lea    rax,[r14+0x54]
   14001a10b:	mov    r9d,0x56
   14001a111:	mov    r8,rdi
   14001a114:	xor    edx,edx
   14001a116:	mov    QWORD PTR [rsp+0x20],rax
   14001a11b:	call   0x140007bd0
   14001a120:	lea    rcx,[rbp-0x10]
   14001a124:	mov    r9d,0x57
   14001a12a:	or     ebx,eax
   14001a12c:	lea    rax,[r14+0x55]
   14001a130:	mov    r8,rdi
   14001a133:	xor    edx,edx
   14001a135:	mov    QWORD PTR [rsp+0x20],rax
   14001a13a:	call   0x140007bd0
   14001a13f:	lea    rcx,[rbp-0x10]
   14001a143:	mov    r9d,0x52
   14001a149:	or     ebx,eax
   14001a14b:	lea    rax,[r14+0x56]
   14001a14f:	mov    r8,rdi
   14001a152:	xor    edx,edx
   14001a154:	mov    QWORD PTR [rsp+0x20],rax
   14001a159:	call   0x140007bd0
   14001a15e:	lea    rcx,[rbp-0x10]
   14001a162:	mov    r9d,0x53
   14001a168:	or     ebx,eax
   14001a16a:	lea    rax,[r14+0x57]
   14001a16e:	mov    r8,rdi
   14001a171:	xor    edx,edx
   14001a173:	mov    QWORD PTR [rsp+0x20],rax
   14001a178:	call   0x140007bd0
   14001a17d:	mov    r9d,0x15
   14001a183:	lea    rcx,[rbp-0x10]
   14001a187:	or     ebx,eax
   14001a189:	lea    rax,[r14+0x68]
   14001a18d:	lea    edx,[r9-0x13]
   14001a191:	mov    r8,rdi
   14001a194:	mov    QWORD PTR [rsp+0x20],rax
   14001a199:	call   0x140007bd0
   14001a19e:	mov    r9d,0x14
   14001a1a4:	lea    rcx,[rbp-0x10]
   14001a1a8:	or     ebx,eax
   14001a1aa:	lea    rax,[r14+0x70]
   14001a1ae:	lea    edx,[r9-0x12]
   14001a1b2:	mov    r8,rdi
   14001a1b5:	mov    QWORD PTR [rsp+0x20],rax
   14001a1ba:	call   0x140007bd0
   14001a1bf:	mov    r9d,0x16
   14001a1c5:	lea    rcx,[rbp-0x10]
   14001a1c9:	or     ebx,eax
   14001a1cb:	lea    rax,[r14+0x78]
   14001a1cf:	lea    edx,[r9-0x14]
   14001a1d3:	mov    r8,rdi
   14001a1d6:	mov    QWORD PTR [rsp+0x20],rax
   14001a1db:	call   0x140007bd0
   14001a1e0:	mov    r9d,0x17
   14001a1e6:	lea    rcx,[rbp-0x10]
   14001a1ea:	or     ebx,eax
   14001a1ec:	lea    rax,[r14+0x80]
   14001a1f3:	lea    edx,[r9-0x15]
   14001a1f7:	mov    r8,rdi
   14001a1fa:	mov    QWORD PTR [rsp+0x20],rax
   14001a1ff:	call   0x140007bd0
   14001a204:	mov    r9d,0x50
   14001a20a:	lea    rcx,[rbp-0x10]
   14001a20e:	or     ebx,eax
   14001a210:	lea    rax,[r14+0x88]
   14001a217:	lea    edx,[r9-0x4e]
   14001a21b:	mov    r8,rdi
   14001a21e:	mov    QWORD PTR [rsp+0x20],rax
   14001a223:	call   0x140007bd0
   14001a228:	or     ebx,eax
   14001a22a:	mov    r9d,0x51
   14001a230:	lea    rax,[r14+0x90]
   14001a237:	lea    rcx,[rbp-0x10]
   14001a23b:	lea    edx,[r9-0x4f]
   14001a23f:	mov    r8,rdi
   14001a242:	mov    QWORD PTR [rsp+0x20],rax
   14001a247:	call   0x140007bd0
   14001a24c:	or     eax,ebx
   14001a24e:	je     0x14001a270
   14001a250:	mov    rcx,r14
   14001a253:	call   0x140019dd0
   14001a258:	mov    rcx,r14
   14001a25b:	call   0x140006444
   14001a260:	mov    rcx,r12
   14001a263:	call   0x140006444
   14001a268:	mov    rcx,r15
   14001a26b:	jmp    0x140019f64
   14001a270:	mov    rdx,QWORD PTR [r13+0x0]
   14001a274:	xor    ebx,ebx
   14001a276:	jmp    0x14001a289
   14001a278:	mov    cl,BYTE PTR [rdx]
   14001a27a:	lea    eax,[rcx-0x30]
   14001a27d:	cmp    al,0x9
   14001a27f:	ja     0x14001a292
   14001a281:	sub    cl,0x30
   14001a284:	mov    BYTE PTR [rdx],cl
   14001a286:	inc    rdx
   14001a289:	cmp    BYTE PTR [rdx],bl
   14001a28b:	jne    0x14001a278
   14001a28d:	jmp    0x14001a312
   14001a292:	cmp    cl,0x3b
   14001a295:	jne    0x14001a286
   14001a297:	mov    r8,rdx
   14001a29a:	lea    rcx,[r8+0x1]
   14001a29e:	mov    al,BYTE PTR [rcx]
   14001a2a0:	mov    BYTE PTR [r8],al
   14001a2a3:	mov    r8,rcx
   14001a2a6:	test   al,al
   14001a2a8:	jne    0x14001a29a
   14001a2aa:	jmp    0x14001a289
   14001a2ac:	lea    rax,[rip+0x1d1ed]        # 0x1400374a0
   14001a2b3:	mov    edx,0x80
   14001a2b8:	movups xmm0,XMMWORD PTR [rax]
   14001a2bb:	movups XMMWORD PTR [r14],xmm0
   14001a2bf:	movups xmm1,XMMWORD PTR [rax+0x10]
   14001a2c3:	movups XMMWORD PTR [r14+0x10],xmm1
   14001a2c8:	movups xmm0,XMMWORD PTR [rax+0x20]
   14001a2cc:	movups XMMWORD PTR [r14+0x20],xmm0
   14001a2d1:	movups xmm1,XMMWORD PTR [rax+0x30]
   14001a2d5:	movups XMMWORD PTR [r14+0x30],xmm1
   14001a2da:	movups xmm0,XMMWORD PTR [rax+0x40]
   14001a2de:	movups XMMWORD PTR [r14+0x40],xmm0
   14001a2e3:	movups xmm1,XMMWORD PTR [rax+0x50]
   14001a2e7:	movups XMMWORD PTR [r14+0x50],xmm1
   14001a2ec:	movups xmm0,XMMWORD PTR [rax+0x60]
   14001a2f0:	movups XMMWORD PTR [r14+0x60],xmm0
   14001a2f5:	movups xmm0,XMMWORD PTR [rax+0x70]
   14001a2f9:	movups XMMWORD PTR [r14+rdx*1-0x10],xmm0
   14001a2ff:	movups xmm1,XMMWORD PTR [rax+rdx*1]
   14001a303:	movups XMMWORD PTR [r14+rdx*1],xmm1
   14001a308:	mov    rax,QWORD PTR [rax+rdx*1+0x10]
   14001a30d:	mov    QWORD PTR [r14+rdx*1+0x10],rax
   14001a312:	mov    rax,QWORD PTR [rsi+0xf0]
   14001a319:	mov    rcx,QWORD PTR [rax]
   14001a31c:	mov    QWORD PTR [r14],rcx
   14001a31f:	mov    rax,QWORD PTR [rsi+0xf0]
   14001a326:	mov    rcx,QWORD PTR [rax+0x8]
   14001a32a:	mov    QWORD PTR [r14+0x8],rcx
   14001a32e:	mov    rax,QWORD PTR [rsi+0xf0]
   14001a335:	mov    rcx,QWORD PTR [rax+0x10]
   14001a339:	mov    QWORD PTR [r14+0x10],rcx
   14001a33d:	mov    rax,QWORD PTR [rsi+0xf0]
   14001a344:	mov    rcx,QWORD PTR [rax+0x58]
   14001a348:	mov    QWORD PTR [r14+0x58],rcx
   14001a34c:	mov    rax,QWORD PTR [rsi+0xf0]
   14001a353:	mov    rcx,QWORD PTR [rax+0x60]
   14001a357:	mov    QWORD PTR [r14+0x60],rcx
   14001a35b:	mov    DWORD PTR [r12],0x1
   14001a363:	test   r15,r15
   14001a366:	je     0x14001a36f
   14001a368:	mov    DWORD PTR [r15],0x1
   14001a36f:	mov    rax,QWORD PTR [rsi+0xe8]
   14001a376:	test   rax,rax
   14001a379:	je     0x14001a37e
   14001a37b:	lock dec DWORD PTR [rax]
   14001a37e:	mov    rcx,QWORD PTR [rsi+0xd8]
   14001a385:	test   rcx,rcx
   14001a388:	je     0x14001a3a7
   14001a38a:	lock dec DWORD PTR [rcx]
   14001a38d:	jne    0x14001a3a7
   14001a38f:	mov    rcx,QWORD PTR [rsi+0xf0]
   14001a396:	call   0x140006444
   14001a39b:	mov    rcx,QWORD PTR [rsi+0xd8]
   14001a3a2:	call   0x140006444
   14001a3a7:	mov    QWORD PTR [rsi+0xe8],r15
   14001a3ae:	mov    QWORD PTR [rsi+0xd8],r12
   14001a3b5:	mov    QWORD PTR [rsi+0xf0],r14
   14001a3bc:	xor    eax,eax
   14001a3be:	lea    r11,[rsp+0x40]
   14001a3c3:	mov    rbx,QWORD PTR [r11+0x30]
   14001a3c7:	mov    rsi,QWORD PTR [r11+0x38]
   14001a3cb:	mov    rdi,QWORD PTR [r11+0x40]
   14001a3cf:	mov    rsp,r11
   14001a3d2:	pop    r15
   14001a3d4:	pop    r14
   14001a3d6:	pop    r13
   14001a3d8:	pop    r12
   14001a3da:	pop    rbp
   14001a3db:	ret    
   14001a3dc:	xor    r9d,r9d
   14001a3df:	mov    rdx,rcx
   14001a3e2:	cmp    BYTE PTR [rcx],r9b
   14001a3e5:	je     0x14001a3fd
   14001a3e7:	mov    cl,BYTE PTR [rdx]
   14001a3e9:	lea    eax,[rcx-0x30]
   14001a3ec:	cmp    al,0x9
   14001a3ee:	ja     0x14001a3fe
   14001a3f0:	sub    cl,0x30
   14001a3f3:	mov    BYTE PTR [rdx],cl
   14001a3f5:	inc    rdx
   14001a3f8:	cmp    BYTE PTR [rdx],r9b
   14001a3fb:	jne    0x14001a3e7
   14001a3fd:	ret    
   14001a3fe:	cmp    cl,0x3b
   14001a401:	jne    0x14001a3f5
   14001a403:	mov    r8,rdx
   14001a406:	lea    rcx,[r8+0x1]
   14001a40a:	mov    al,BYTE PTR [rcx]
   14001a40c:	mov    BYTE PTR [r8],al
   14001a40f:	mov    r8,rcx
   14001a412:	test   al,al
   14001a414:	jne    0x14001a406
   14001a416:	jmp    0x14001a3f8
   14001a418:	test   rcx,rcx
   14001a41b:	je     0x14001a483
   14001a41d:	push   rbx
   14001a41e:	sub    rsp,0x20
   14001a422:	mov    rbx,rcx
   14001a425:	mov    rcx,QWORD PTR [rcx]
   14001a428:	cmp    rcx,QWORD PTR [rip+0x1d071]        # 0x1400374a0
   14001a42f:	je     0x14001a436
   14001a431:	call   0x140006444
   14001a436:	mov    rcx,QWORD PTR [rbx+0x8]
   14001a43a:	cmp    rcx,QWORD PTR [rip+0x1d067]        # 0x1400374a8
   14001a441:	je     0x14001a448
   14001a443:	call   0x140006444
   14001a448:	mov    rcx,QWORD PTR [rbx+0x10]
   14001a44c:	cmp    rcx,QWORD PTR [rip+0x1d05d]        # 0x1400374b0
   14001a453:	je     0x14001a45a
   14001a455:	call   0x140006444
   14001a45a:	mov    rcx,QWORD PTR [rbx+0x58]
   14001a45e:	cmp    rcx,QWORD PTR [rip+0x1d093]        # 0x1400374f8
   14001a465:	je     0x14001a46c
   14001a467:	call   0x140006444
   14001a46c:	mov    rcx,QWORD PTR [rbx+0x60]
   14001a470:	cmp    rcx,QWORD PTR [rip+0x1d089]        # 0x140037500
   14001a477:	je     0x14001a47e
   14001a479:	call   0x140006444
   14001a47e:	add    rsp,0x20
   14001a482:	pop    rbx
   14001a483:	ret    
   14001a484:	mov    rax,rsp
   14001a487:	mov    QWORD PTR [rax+0x8],rbx
   14001a48b:	mov    QWORD PTR [rax+0x10],rbp
   14001a48f:	mov    QWORD PTR [rax+0x18],rsi
   14001a493:	push   rdi
   14001a494:	push   r12
   14001a496:	push   r13
   14001a498:	push   r14
   14001a49a:	push   r15
   14001a49c:	sub    rsp,0x40
   14001a4a0:	xor    ebx,ebx
   14001a4a2:	mov    rsi,rcx
   14001a4a5:	mov    QWORD PTR [rax-0x38],rcx
   14001a4a9:	mov    QWORD PTR [rax-0x30],rbx
   14001a4ad:	cmp    QWORD PTR [rcx+0x148],rbx
   14001a4b4:	jne    0x14001a4d1
   14001a4b6:	cmp    QWORD PTR [rcx+0x140],rbx
   14001a4bd:	jne    0x14001a4d1
   14001a4bf:	mov    r15d,ebx
   14001a4c2:	mov    r12d,ebx
   14001a4c5:	lea    r14,[rip+0x1cfd4]        # 0x1400374a0
   14001a4cc:	jmp    0x14001a6dd
   14001a4d1:	mov    ebp,0x1
   14001a4d6:	mov    edx,0x98
   14001a4db:	mov    ecx,ebp
   14001a4dd:	call   0x140007ed4
   14001a4e2:	mov    r14,rax
   14001a4e5:	test   rax,rax
   14001a4e8:	jne    0x14001a4f1
   14001a4ea:	mov    eax,ebp
   14001a4ec:	jmp    0x14001a72c
   14001a4f1:	mov    rax,QWORD PTR [rsi+0xf0]
   14001a4f8:	mov    edx,0x80
   14001a4fd:	lea    edi,[rdx-0x7c]
   14001a500:	mov    ecx,edi
   14001a502:	movups xmm0,XMMWORD PTR [rax]
   14001a505:	movups XMMWORD PTR [r14],xmm0
   14001a509:	movups xmm1,XMMWORD PTR [rax+0x10]
   14001a50d:	movups XMMWORD PTR [r14+0x10],xmm1
   14001a512:	movups xmm0,XMMWORD PTR [rax+0x20]
   14001a516:	movups XMMWORD PTR [r14+0x20],xmm0
   14001a51b:	movups xmm1,XMMWORD PTR [rax+0x30]
   14001a51f:	movups XMMWORD PTR [r14+0x30],xmm1
   14001a524:	movups xmm0,XMMWORD PTR [rax+0x40]
   14001a528:	movups XMMWORD PTR [r14+0x40],xmm0
   14001a52d:	movups xmm1,XMMWORD PTR [rax+0x50]
   14001a531:	movups XMMWORD PTR [r14+0x50],xmm1
   14001a536:	movups xmm0,XMMWORD PTR [rax+0x60]
   14001a53a:	movups XMMWORD PTR [r14+0x60],xmm0
   14001a53f:	movups xmm0,XMMWORD PTR [rax+0x70]
   14001a543:	movups XMMWORD PTR [r14+rdx*1-0x10],xmm0
   14001a549:	movups xmm1,XMMWORD PTR [rax+rdx*1]
   14001a54d:	movups XMMWORD PTR [r14+rdx*1],xmm1
   14001a552:	mov    rax,QWORD PTR [rax+rdx*1+0x10]
   14001a557:	mov    QWORD PTR [r14+rdx*1+0x10],rax
   14001a55c:	call   0x140007f54
   14001a561:	mov    r12,rax
   14001a564:	test   rax,rax
   14001a567:	jne    0x14001a576
   14001a569:	mov    rcx,r14
   14001a56c:	call   0x140006444
   14001a571:	jmp    0x14001a4ea
   14001a576:	mov    DWORD PTR [rax],ebx
   14001a578:	cmp    QWORD PTR [rsi+0x148],rbx
   14001a57f:	je     0x14001a698
   14001a585:	mov    rcx,rdi
   14001a588:	call   0x140007f54
   14001a58d:	mov    r15,rax
   14001a590:	test   rax,rax
   14001a593:	je     0x14001a64f
   14001a599:	mov    DWORD PTR [rax],ebx
   14001a59b:	mov    rdi,QWORD PTR [rsi+0x148]
   14001a5a2:	lea    rcx,[rsp+0x30]
   14001a5a7:	mov    r9d,0xe
   14001a5ad:	mov    edx,ebp
   14001a5af:	mov    r8,rdi
   14001a5b2:	mov    QWORD PTR [rsp+0x20],r14
   14001a5b7:	call   0x140007bd0
   14001a5bc:	lea    rcx,[r14+0x8]
   14001a5c0:	mov    QWORD PTR [rsp+0x20],rcx
   14001a5c5:	lea    rcx,[rsp+0x30]
   14001a5ca:	mov    r9d,0xf
   14001a5d0:	mov    r8,rdi
   14001a5d3:	mov    edx,ebp
   14001a5d5:	mov    ebx,eax
   14001a5d7:	call   0x140007bd0
   14001a5dc:	lea    r13,[r14+0x10]
   14001a5e0:	lea    rcx,[rsp+0x30]
   14001a5e5:	mov    r9d,0x10
   14001a5eb:	mov    r8,rdi
   14001a5ee:	mov    edx,ebp
   14001a5f0:	or     ebx,eax
   14001a5f2:	mov    QWORD PTR [rsp+0x20],r13
   14001a5f7:	call   0x140007bd0
   14001a5fc:	mov    r9d,0xe
   14001a602:	or     ebx,eax
   14001a604:	lea    rax,[r14+0x58]
   14001a608:	lea    rcx,[rsp+0x30]
   14001a60d:	lea    edx,[r9-0xc]
   14001a611:	mov    r8,rdi
   14001a614:	mov    QWORD PTR [rsp+0x20],rax
   14001a619:	call   0x140007bd0
   14001a61e:	mov    r9d,0xf
   14001a624:	or     ebx,eax
   14001a626:	lea    rax,[r14+0x60]
   14001a62a:	lea    rcx,[rsp+0x30]
   14001a62f:	lea    edx,[r9-0xd]
   14001a633:	mov    r8,rdi
   14001a636:	mov    QWORD PTR [rsp+0x20],rax
   14001a63b:	call   0x140007bd0
   14001a640:	or     eax,ebx
   14001a642:	je     0x14001a65f
   14001a644:	mov    rcx,r14
   14001a647:	call   0x14001a418
   14001a64c:	or     ebp,0xffffffff
   14001a64f:	mov    rcx,r14
   14001a652:	call   0x140006444
   14001a657:	mov    rcx,r12
   14001a65a:	jmp    0x14001a56c
   14001a65f:	mov    rdx,QWORD PTR [r13+0x0]
   14001a663:	xor    ebx,ebx
   14001a665:	jmp    0x14001a678
   14001a667:	mov    cl,BYTE PTR [rdx]
   14001a669:	lea    eax,[rcx-0x30]
   14001a66c:	cmp    al,0x9
   14001a66e:	ja     0x14001a67e
   14001a670:	sub    cl,0x30
   14001a673:	mov    BYTE PTR [rdx],cl
   14001a675:	add    rdx,rbp
   14001a678:	cmp    BYTE PTR [rdx],bl
   14001a67a:	jne    0x14001a667
   14001a67c:	jmp    0x14001a6d1
   14001a67e:	cmp    cl,0x3b
   14001a681:	jne    0x14001a675
   14001a683:	mov    r8,rdx
   14001a686:	lea    rcx,[r8+0x1]
   14001a68a:	mov    al,BYTE PTR [rcx]
   14001a68c:	mov    BYTE PTR [r8],al
   14001a68f:	mov    r8,rcx
   14001a692:	test   al,al
   14001a694:	jne    0x14001a686
   14001a696:	jmp    0x14001a678
   14001a698:	mov    rax,QWORD PTR [rip+0x1ce01]        # 0x1400374a0
   14001a69f:	mov    r15,rbx
   14001a6a2:	mov    QWORD PTR [r14],rax
   14001a6a5:	mov    rax,QWORD PTR [rip+0x1cdfc]        # 0x1400374a8
   14001a6ac:	mov    QWORD PTR [r14+0x8],rax
   14001a6b0:	mov    rax,QWORD PTR [rip+0x1cdf9]        # 0x1400374b0
   14001a6b7:	mov    QWORD PTR [r14+0x10],rax
   14001a6bb:	mov    rax,QWORD PTR [rip+0x1ce36]        # 0x1400374f8
   14001a6c2:	mov    QWORD PTR [r14+0x58],rax
   14001a6c6:	mov    rax,QWORD PTR [rip+0x1ce33]        # 0x140037500
   14001a6cd:	mov    QWORD PTR [r14+0x60],rax
   14001a6d1:	mov    DWORD PTR [r12],ebp
   14001a6d5:	test   r15,r15
   14001a6d8:	je     0x14001a6dd
   14001a6da:	mov    DWORD PTR [r15],ebp
   14001a6dd:	mov    rax,QWORD PTR [rsi+0xe0]
   14001a6e4:	test   rax,rax
   14001a6e7:	je     0x14001a6ec
   14001a6e9:	lock dec DWORD PTR [rax]
   14001a6ec:	mov    rcx,QWORD PTR [rsi+0xd8]
   14001a6f3:	test   rcx,rcx
   14001a6f6:	je     0x14001a715
   14001a6f8:	lock dec DWORD PTR [rcx]
   14001a6fb:	jne    0x14001a715
   14001a6fd:	mov    rcx,QWORD PTR [rsi+0xd8]
   14001a704:	call   0x140006444
   14001a709:	mov    rcx,QWORD PTR [rsi+0xf0]
   14001a710:	call   0x140006444
   14001a715:	mov    QWORD PTR [rsi+0xe0],r15
   14001a71c:	mov    QWORD PTR [rsi+0xd8],r12
   14001a723:	mov    QWORD PTR [rsi+0xf0],r14
   14001a72a:	xor    eax,eax
   14001a72c:	lea    r11,[rsp+0x40]
   14001a731:	mov    rbx,QWORD PTR [r11+0x30]
   14001a735:	mov    rbp,QWORD PTR [r11+0x38]
   14001a739:	mov    rsi,QWORD PTR [r11+0x40]
   14001a73d:	mov    rsp,r11
   14001a740:	pop    r15
   14001a742:	pop    r14
   14001a744:	pop    r13
   14001a746:	pop    r12
   14001a748:	pop    rdi
   14001a749:	ret    
   14001a74a:	int3   
   14001a74b:	int3   
   14001a74c:	xor    r9d,r9d
   14001a74f:	mov    rdx,rcx
   14001a752:	cmp    BYTE PTR [rcx],r9b
   14001a755:	je     0x14001a76d
   14001a757:	mov    cl,BYTE PTR [rdx]
   14001a759:	lea    eax,[rcx-0x30]
   14001a75c:	cmp    al,0x9
   14001a75e:	ja     0x14001a76e
   14001a760:	sub    cl,0x30
   14001a763:	mov    BYTE PTR [rdx],cl
   14001a765:	inc    rdx
   14001a768:	cmp    BYTE PTR [rdx],r9b
   14001a76b:	jne    0x14001a757
   14001a76d:	ret    
   14001a76e:	cmp    cl,0x3b
   14001a771:	jne    0x14001a765
   14001a773:	mov    r8,rdx
   14001a776:	lea    rcx,[r8+0x1]
   14001a77a:	mov    al,BYTE PTR [rcx]
   14001a77c:	mov    BYTE PTR [r8],al
   14001a77f:	mov    r8,rcx
   14001a782:	test   al,al
   14001a784:	jne    0x14001a776
   14001a786:	jmp    0x14001a768
   14001a788:	test   rcx,rcx
   14001a78b:	je     0x14001ab81
   14001a791:	push   rbx
   14001a792:	sub    rsp,0x20
   14001a796:	mov    rbx,rcx
   14001a799:	mov    rcx,QWORD PTR [rcx+0x8]
   14001a79d:	call   0x140006444
   14001a7a2:	mov    rcx,QWORD PTR [rbx+0x10]
   14001a7a6:	call   0x140006444
   14001a7ab:	mov    rcx,QWORD PTR [rbx+0x18]
   14001a7af:	call   0x140006444
   14001a7b4:	mov    rcx,QWORD PTR [rbx+0x20]
   14001a7b8:	call   0x140006444
   14001a7bd:	mov    rcx,QWORD PTR [rbx+0x28]
   14001a7c1:	call   0x140006444
   14001a7c6:	mov    rcx,QWORD PTR [rbx+0x30]
   14001a7ca:	call   0x140006444
   14001a7cf:	mov    rcx,QWORD PTR [rbx]
   14001a7d2:	call   0x140006444
   14001a7d7:	mov    rcx,QWORD PTR [rbx+0x40]
   14001a7db:	call   0x140006444
   14001a7e0:	mov    rcx,QWORD PTR [rbx+0x48]
   14001a7e4:	call   0x140006444
   14001a7e9:	mov    rcx,QWORD PTR [rbx+0x50]
   14001a7ed:	call   0x140006444
   14001a7f2:	mov    rcx,QWORD PTR [rbx+0x58]
   14001a7f6:	call   0x140006444
   14001a7fb:	mov    rcx,QWORD PTR [rbx+0x60]
   14001a7ff:	call   0x140006444
   14001a804:	mov    rcx,QWORD PTR [rbx+0x68]
   14001a808:	call   0x140006444
   14001a80d:	mov    rcx,QWORD PTR [rbx+0x38]
   14001a811:	call   0x140006444
   14001a816:	mov    rcx,QWORD PTR [rbx+0x70]
   14001a81a:	call   0x140006444
   14001a81f:	mov    rcx,QWORD PTR [rbx+0x78]
   14001a823:	call   0x140006444
   14001a828:	mov    rcx,QWORD PTR [rbx+0x80]
   14001a82f:	call   0x140006444
   14001a834:	mov    rcx,QWORD PTR [rbx+0x88]
   14001a83b:	call   0x140006444
   14001a840:	mov    rcx,QWORD PTR [rbx+0x90]
   14001a847:	call   0x140006444
   14001a84c:	mov    rcx,QWORD PTR [rbx+0x98]
   14001a853:	call   0x140006444
   14001a858:	mov    rcx,QWORD PTR [rbx+0xa0]
   14001a85f:	call   0x140006444
   14001a864:	mov    rcx,QWORD PTR [rbx+0xa8]
   14001a86b:	call   0x140006444
   14001a870:	mov    rcx,QWORD PTR [rbx+0xb0]
   14001a877:	call   0x140006444
   14001a87c:	mov    rcx,QWORD PTR [rbx+0xb8]
   14001a883:	call   0x140006444
   14001a888:	mov    rcx,QWORD PTR [rbx+0xc0]
   14001a88f:	call   0x140006444
   14001a894:	mov    rcx,QWORD PTR [rbx+0xc8]
   14001a89b:	call   0x140006444
   14001a8a0:	mov    rcx,QWORD PTR [rbx+0xd0]
   14001a8a7:	call   0x140006444
   14001a8ac:	mov    rcx,QWORD PTR [rbx+0xd8]
   14001a8b3:	call   0x140006444
   14001a8b8:	mov    rcx,QWORD PTR [rbx+0xe0]
   14001a8bf:	call   0x140006444
   14001a8c4:	mov    rcx,QWORD PTR [rbx+0xe8]
   14001a8cb:	call   0x140006444
   14001a8d0:	mov    rcx,QWORD PTR [rbx+0xf0]
   14001a8d7:	call   0x140006444
   14001a8dc:	mov    rcx,QWORD PTR [rbx+0xf8]
   14001a8e3:	call   0x140006444
   14001a8e8:	mov    rcx,QWORD PTR [rbx+0x100]
   14001a8ef:	call   0x140006444
   14001a8f4:	mov    rcx,QWORD PTR [rbx+0x108]
   14001a8fb:	call   0x140006444
   14001a900:	mov    rcx,QWORD PTR [rbx+0x110]
   14001a907:	call   0x140006444
   14001a90c:	mov    rcx,QWORD PTR [rbx+0x118]
   14001a913:	call   0x140006444
   14001a918:	mov    rcx,QWORD PTR [rbx+0x120]
   14001a91f:	call   0x140006444
   14001a924:	mov    rcx,QWORD PTR [rbx+0x128]
   14001a92b:	call   0x140006444
   14001a930:	mov    rcx,QWORD PTR [rbx+0x130]
   14001a937:	call   0x140006444
   14001a93c:	mov    rcx,QWORD PTR [rbx+0x138]
   14001a943:	call   0x140006444
   14001a948:	mov    rcx,QWORD PTR [rbx+0x140]
   14001a94f:	call   0x140006444
   14001a954:	mov    rcx,QWORD PTR [rbx+0x148]
   14001a95b:	call   0x140006444
   14001a960:	mov    rcx,QWORD PTR [rbx+0x150]
   14001a967:	call   0x140006444
   14001a96c:	mov    rcx,QWORD PTR [rbx+0x168]
   14001a973:	call   0x140006444
   14001a978:	mov    rcx,QWORD PTR [rbx+0x170]
   14001a97f:	call   0x140006444
   14001a984:	mov    rcx,QWORD PTR [rbx+0x178]
   14001a98b:	call   0x140006444
   14001a990:	mov    rcx,QWORD PTR [rbx+0x180]
   14001a997:	call   0x140006444
   14001a99c:	mov    rcx,QWORD PTR [rbx+0x188]
   14001a9a3:	call   0x140006444
   14001a9a8:	mov    rcx,QWORD PTR [rbx+0x190]
   14001a9af:	call   0x140006444
   14001a9b4:	mov    rcx,QWORD PTR [rbx+0x160]
   14001a9bb:	call   0x140006444
   14001a9c0:	mov    rcx,QWORD PTR [rbx+0x1a0]
   14001a9c7:	call   0x140006444
   14001a9cc:	mov    rcx,QWORD PTR [rbx+0x1a8]
   14001a9d3:	call   0x140006444
   14001a9d8:	mov    rcx,QWORD PTR [rbx+0x1b0]
   14001a9df:	call   0x140006444
   14001a9e4:	mov    rcx,QWORD PTR [rbx+0x1b8]
   14001a9eb:	call   0x140006444
   14001a9f0:	mov    rcx,QWORD PTR [rbx+0x1c0]
   14001a9f7:	call   0x140006444
   14001a9fc:	mov    rcx,QWORD PTR [rbx+0x1c8]
   14001aa03:	call   0x140006444
   14001aa08:	mov    rcx,QWORD PTR [rbx+0x198]
   14001aa0f:	call   0x140006444
   14001aa14:	mov    rcx,QWORD PTR [rbx+0x1d0]
   14001aa1b:	call   0x140006444
   14001aa20:	mov    rcx,QWORD PTR [rbx+0x1d8]
   14001aa27:	call   0x140006444
   14001aa2c:	mov    rcx,QWORD PTR [rbx+0x1e0]
   14001aa33:	call   0x140006444
   14001aa38:	mov    rcx,QWORD PTR [rbx+0x1e8]
   14001aa3f:	call   0x140006444
   14001aa44:	mov    rcx,QWORD PTR [rbx+0x1f0]
   14001aa4b:	call   0x140006444
   14001aa50:	mov    rcx,QWORD PTR [rbx+0x1f8]
   14001aa57:	call   0x140006444
   14001aa5c:	mov    rcx,QWORD PTR [rbx+0x200]
   14001aa63:	call   0x140006444
   14001aa68:	mov    rcx,QWORD PTR [rbx+0x208]
   14001aa6f:	call   0x140006444
   14001aa74:	mov    rcx,QWORD PTR [rbx+0x210]
   14001aa7b:	call   0x140006444
   14001aa80:	mov    rcx,QWORD PTR [rbx+0x218]
   14001aa87:	call   0x140006444
   14001aa8c:	mov    rcx,QWORD PTR [rbx+0x220]
   14001aa93:	call   0x140006444
   14001aa98:	mov    rcx,QWORD PTR [rbx+0x228]
   14001aa9f:	call   0x140006444
   14001aaa4:	mov    rcx,QWORD PTR [rbx+0x230]
   14001aaab:	call   0x140006444
   14001aab0:	mov    rcx,QWORD PTR [rbx+0x238]
   14001aab7:	call   0x140006444
   14001aabc:	mov    rcx,QWORD PTR [rbx+0x240]
   14001aac3:	call   0x140006444
   14001aac8:	mov    rcx,QWORD PTR [rbx+0x248]
   14001aacf:	call   0x140006444
   14001aad4:	mov    rcx,QWORD PTR [rbx+0x250]
   14001aadb:	call   0x140006444
   14001aae0:	mov    rcx,QWORD PTR [rbx+0x258]
   14001aae7:	call   0x140006444
   14001aaec:	mov    rcx,QWORD PTR [rbx+0x260]
   14001aaf3:	call   0x140006444
   14001aaf8:	mov    rcx,QWORD PTR [rbx+0x268]
   14001aaff:	call   0x140006444
   14001ab04:	mov    rcx,QWORD PTR [rbx+0x270]
   14001ab0b:	call   0x140006444
   14001ab10:	mov    rcx,QWORD PTR [rbx+0x278]
   14001ab17:	call   0x140006444
   14001ab1c:	mov    rcx,QWORD PTR [rbx+0x280]
   14001ab23:	call   0x140006444
   14001ab28:	mov    rcx,QWORD PTR [rbx+0x288]
   14001ab2f:	call   0x140006444
   14001ab34:	mov    rcx,QWORD PTR [rbx+0x290]
   14001ab3b:	call   0x140006444
   14001ab40:	mov    rcx,QWORD PTR [rbx+0x298]
   14001ab47:	call   0x140006444
   14001ab4c:	mov    rcx,QWORD PTR [rbx+0x2a0]
   14001ab53:	call   0x140006444
   14001ab58:	mov    rcx,QWORD PTR [rbx+0x2a8]
   14001ab5f:	call   0x140006444
   14001ab64:	mov    rcx,QWORD PTR [rbx+0x2b0]
   14001ab6b:	call   0x140006444
   14001ab70:	mov    rcx,QWORD PTR [rbx+0x2b8]
   14001ab77:	call   0x140006444
   14001ab7c:	add    rsp,0x20
   14001ab80:	pop    rbx
   14001ab81:	ret    
   14001ab82:	int3   
   14001ab83:	int3   
   14001ab84:	mov    QWORD PTR [rsp+0x8],rbx
   14001ab89:	mov    QWORD PTR [rsp+0x10],rbp
   14001ab8e:	push   rdi
   14001ab8f:	sub    rsp,0x20
   14001ab93:	cmp    QWORD PTR [rcx+0x150],0x0
   14001ab9b:	mov    rdi,rcx
   14001ab9e:	lea    rbp,[rip+0x1bf1b]        # 0x140036ac0
   14001aba5:	je     0x14001abf2
   14001aba7:	mov    edx,0x2c0
   14001abac:	mov    ecx,0x1
   14001abb1:	call   0x140007ed4
   14001abb6:	mov    rbx,rax
   14001abb9:	test   rax,rax
   14001abbc:	jne    0x14001abc5
   14001abbe:	mov    eax,0x1
   14001abc3:	jmp    0x14001ac11
   14001abc5:	mov    rdx,rdi
   14001abc8:	mov    rcx,rax
   14001abcb:	call   0x14001ac24
   14001abd0:	test   eax,eax
   14001abd2:	je     0x14001abe6
   14001abd4:	mov    rcx,rbx
   14001abd7:	call   0x14001a788
   14001abdc:	mov    rcx,rbx
   14001abdf:	call   0x140006444
   14001abe4:	jmp    0x14001abbe
   14001abe6:	mov    DWORD PTR [rbx+0x15c],0x1
   14001abf0:	jmp    0x14001abf5
   14001abf2:	mov    rbx,rbp
   14001abf5:	mov    rax,QWORD PTR [rdi+0x120]
   14001abfc:	cmp    rax,rbp
   14001abff:	je     0x14001ac08
   14001ac01:	lock dec DWORD PTR [rax+0x15c]
   14001ac08:	mov    QWORD PTR [rdi+0x120],rbx
   14001ac0f:	xor    eax,eax
   14001ac11:	mov    rbx,QWORD PTR [rsp+0x30]
   14001ac16:	mov    rbp,QWORD PTR [rsp+0x38]
   14001ac1b:	add    rsp,0x20
   14001ac1f:	pop    rdi
   14001ac20:	ret    
   14001ac21:	int3   
   14001ac22:	int3   
   14001ac23:	int3   
   14001ac24:	mov    rax,rsp
   14001ac27:	mov    QWORD PTR [rax+0x8],rbx
   14001ac2b:	mov    QWORD PTR [rax+0x10],rsi
   14001ac2f:	mov    QWORD PTR [rax+0x18],rdi
   14001ac33:	mov    QWORD PTR [rax+0x20],r14
   14001ac37:	push   rbp
   14001ac38:	mov    rbp,rsp
   14001ac3b:	sub    rsp,0x40
   14001ac3f:	mov    rsi,QWORD PTR [rdx+0x150]
   14001ac46:	mov    rbx,rdx
   14001ac49:	mov    rdi,rcx
   14001ac4c:	test   rcx,rcx
   14001ac4f:	jne    0x14001ac59
   14001ac51:	or     eax,0xffffffff
   14001ac54:	jmp    0x14001b783
   14001ac59:	mov    rcx,rsi
   14001ac5c:	call   0x14001c6c8
   14001ac61:	and    QWORD PTR [rbp-0x8],0x0
   14001ac66:	mov    r9d,0x31
   14001ac6c:	lea    r14d,[r9-0x30]
   14001ac70:	mov    QWORD PTR [rdi+0x2b8],rax
   14001ac77:	lea    rax,[rdi+0x8]
   14001ac7b:	lea    rcx,[rbp-0x10]
   14001ac7f:	mov    r8,rsi
   14001ac82:	mov    edx,r14d
   14001ac85:	mov    QWORD PTR [rbp-0x10],rbx
   14001ac89:	mov    QWORD PTR [rsp+0x20],rax
   14001ac8e:	call   0x140007bd0
   14001ac93:	lea    rcx,[rdi+0x10]
   14001ac97:	lea    r9d,[r14+0x31]
   14001ac9b:	mov    r8,rsi
   14001ac9e:	mov    QWORD PTR [rsp+0x20],rcx
   14001aca3:	lea    rcx,[rbp-0x10]
   14001aca7:	mov    edx,r14d
   14001acaa:	mov    ebx,eax
   14001acac:	call   0x140007bd0
   14001acb1:	lea    rcx,[rdi+0x18]
   14001acb5:	mov    QWORD PTR [rsp+0x20],rcx
   14001acba:	lea    r9d,[r14+0x32]
   14001acbe:	lea    rcx,[rbp-0x10]
   14001acc2:	mov    r8,rsi
   14001acc5:	mov    edx,r14d
   14001acc8:	or     ebx,eax
   14001acca:	call   0x140007bd0
   14001accf:	lea    r9d,[r14+0x33]
   14001acd3:	lea    rcx,[rbp-0x10]
   14001acd7:	or     ebx,eax
   14001acd9:	lea    rax,[rdi+0x20]
   14001acdd:	mov    r8,rsi
   14001ace0:	mov    edx,r14d
   14001ace3:	mov    QWORD PTR [rsp+0x20],rax
   14001ace8:	call   0x140007bd0
   14001aced:	lea    r9d,[r14+0x34]
   14001acf1:	lea    rcx,[rbp-0x10]
   14001acf5:	or     ebx,eax
   14001acf7:	lea    rax,[rdi+0x28]
   14001acfb:	mov    r8,rsi
   14001acfe:	mov    edx,r14d
   14001ad01:	mov    QWORD PTR [rsp+0x20],rax
   14001ad06:	call   0x140007bd0
   14001ad0b:	lea    r9d,[r14+0x35]
   14001ad0f:	lea    rcx,[rbp-0x10]
   14001ad13:	or     ebx,eax
   14001ad15:	lea    rax,[rdi+0x30]
   14001ad19:	mov    r8,rsi
   14001ad1c:	mov    edx,r14d
   14001ad1f:	mov    QWORD PTR [rsp+0x20],rax
   14001ad24:	call   0x140007bd0
   14001ad29:	lea    r9d,[r14+0x36]
   14001ad2d:	lea    rcx,[rbp-0x10]
   14001ad31:	mov    r8,rsi
   14001ad34:	mov    edx,r14d
   14001ad37:	mov    QWORD PTR [rsp+0x20],rdi
   14001ad3c:	or     ebx,eax
   14001ad3e:	call   0x140007bd0
   14001ad43:	lea    r9d,[r14+0x29]
   14001ad47:	or     ebx,eax
   14001ad49:	lea    rax,[rdi+0x40]
   14001ad4d:	lea    rcx,[rbp-0x10]
   14001ad51:	mov    r8,rsi
   14001ad54:	mov    edx,r14d
   14001ad57:	mov    QWORD PTR [rsp+0x20],rax
   14001ad5c:	call   0x140007bd0
   14001ad61:	lea    r9d,[r14+0x2a]
   14001ad65:	lea    rcx,[rbp-0x10]
   14001ad69:	or     ebx,eax
   14001ad6b:	lea    rax,[rdi+0x48]
   14001ad6f:	mov    r8,rsi
   14001ad72:	mov    edx,r14d
   14001ad75:	mov    QWORD PTR [rsp+0x20],rax
   14001ad7a:	call   0x140007bd0
   14001ad7f:	lea    r9d,[r14+0x2b]
   14001ad83:	mov    r8,rsi
   14001ad86:	or     ebx,eax
   14001ad88:	lea    rax,[rdi+0x50]
   14001ad8c:	mov    QWORD PTR [rsp+0x20],rax
   14001ad91:	lea    rcx,[rbp-0x10]
   14001ad95:	mov    edx,r14d
   14001ad98:	call   0x140007bd0
   14001ad9d:	lea    r9d,[r14+0x2c]
   14001ada1:	lea    rcx,[rbp-0x10]
   14001ada5:	or     ebx,eax
   14001ada7:	lea    rax,[rdi+0x58]
   14001adab:	mov    r8,rsi
   14001adae:	mov    edx,r14d
   14001adb1:	mov    QWORD PTR [rsp+0x20],rax
   14001adb6:	call   0x140007bd0
   14001adbb:	lea    r9d,[r14+0x2d]
   14001adbf:	lea    rcx,[rbp-0x10]
   14001adc3:	or     ebx,eax
   14001adc5:	lea    rax,[rdi+0x60]
   14001adc9:	mov    r8,rsi
   14001adcc:	mov    edx,r14d
   14001adcf:	mov    QWORD PTR [rsp+0x20],rax
   14001add4:	call   0x140007bd0
   14001add9:	lea    r9d,[r14+0x2e]
   14001addd:	lea    rcx,[rbp-0x10]
   14001ade1:	or     ebx,eax
   14001ade3:	lea    rax,[rdi+0x68]
   14001ade7:	mov    r8,rsi
   14001adea:	mov    edx,r14d
   14001aded:	mov    QWORD PTR [rsp+0x20],rax
   14001adf2:	call   0x140007bd0
   14001adf7:	lea    r9d,[r14+0x2f]
   14001adfb:	lea    rcx,[rbp-0x10]
   14001adff:	or     ebx,eax
   14001ae01:	lea    rax,[rdi+0x38]
   14001ae05:	mov    r8,rsi
   14001ae08:	mov    edx,r14d
   14001ae0b:	mov    QWORD PTR [rsp+0x20],rax
   14001ae10:	call   0x140007bd0
   14001ae15:	lea    r9d,[r14+0x43]
   14001ae19:	lea    rcx,[rbp-0x10]
   14001ae1d:	or     ebx,eax
   14001ae1f:	lea    rax,[rdi+0x70]
   14001ae23:	mov    r8,rsi
   14001ae26:	mov    edx,r14d
   14001ae29:	mov    QWORD PTR [rsp+0x20],rax
   14001ae2e:	call   0x140007bd0
   14001ae33:	lea    r9d,[r14+0x44]
   14001ae37:	lea    rcx,[rbp-0x10]
   14001ae3b:	or     ebx,eax
   14001ae3d:	lea    rax,[rdi+0x78]
   14001ae41:	mov    r8,rsi
   14001ae44:	mov    edx,r14d
   14001ae47:	mov    QWORD PTR [rsp+0x20],rax
   14001ae4c:	call   0x140007bd0
   14001ae51:	lea    r9d,[r14+0x45]
   14001ae55:	lea    rcx,[rbp-0x10]
   14001ae59:	or     ebx,eax
   14001ae5b:	lea    rax,[rdi+0x80]
   14001ae62:	mov    r8,rsi
   14001ae65:	mov    edx,r14d
   14001ae68:	mov    QWORD PTR [rsp+0x20],rax
   14001ae6d:	call   0x140007bd0
   14001ae72:	lea    r9d,[r14+0x46]
   14001ae76:	lea    rcx,[rbp-0x10]
   14001ae7a:	or     ebx,eax
   14001ae7c:	lea    rax,[rdi+0x88]
   14001ae83:	mov    r8,rsi
   14001ae86:	mov    edx,r14d
   14001ae89:	mov    QWORD PTR [rsp+0x20],rax
   14001ae8e:	call   0x140007bd0
   14001ae93:	lea    r9d,[r14+0x47]
   14001ae97:	lea    rcx,[rbp-0x10]
   14001ae9b:	or     ebx,eax
   14001ae9d:	lea    rax,[rdi+0x90]
   14001aea4:	mov    r8,rsi
   14001aea7:	mov    edx,r14d
   14001aeaa:	mov    QWORD PTR [rsp+0x20],rax
   14001aeaf:	call   0x140007bd0
   14001aeb4:	lea    r9d,[r14+0x48]
   14001aeb8:	mov    r8,rsi
   14001aebb:	or     ebx,eax
   14001aebd:	lea    rax,[rdi+0x98]
   14001aec4:	mov    edx,r14d
   14001aec7:	mov    QWORD PTR [rsp+0x20],rax
   14001aecc:	lea    rcx,[rbp-0x10]
   14001aed0:	call   0x140007bd0
   14001aed5:	lea    r9d,[r14+0x49]
   14001aed9:	lea    rcx,[rbp-0x10]
   14001aedd:	or     ebx,eax
   14001aedf:	lea    rax,[rdi+0xa0]
   14001aee6:	mov    r8,rsi
   14001aee9:	mov    edx,r14d
   14001aeec:	mov    QWORD PTR [rsp+0x20],rax
   14001aef1:	call   0x140007bd0
   14001aef6:	lea    r9d,[r14+0x4a]
   14001aefa:	lea    rcx,[rbp-0x10]
   14001aefe:	or     ebx,eax
   14001af00:	lea    rax,[rdi+0xa8]
   14001af07:	mov    r8,rsi
   14001af0a:	mov    edx,r14d
   14001af0d:	mov    QWORD PTR [rsp+0x20],rax
   14001af12:	call   0x140007bd0
   14001af17:	lea    r9d,[r14+0x4b]
   14001af1b:	lea    rcx,[rbp-0x10]
   14001af1f:	or     ebx,eax
   14001af21:	lea    rax,[rdi+0xb0]
   14001af28:	mov    r8,rsi
   14001af2b:	mov    edx,r14d
   14001af2e:	mov    QWORD PTR [rsp+0x20],rax
   14001af33:	call   0x140007bd0
   14001af38:	lea    r9d,[r14+0x4c]
   14001af3c:	lea    rcx,[rbp-0x10]
   14001af40:	or     ebx,eax
   14001af42:	lea    rax,[rdi+0xb8]
   14001af49:	mov    r8,rsi
   14001af4c:	mov    edx,r14d
   14001af4f:	mov    QWORD PTR [rsp+0x20],rax
   14001af54:	call   0x140007bd0
   14001af59:	lea    r9d,[r14+0x4d]
   14001af5d:	lea    rcx,[rbp-0x10]
   14001af61:	or     ebx,eax
   14001af63:	lea    rax,[rdi+0xc0]
   14001af6a:	mov    r8,rsi
   14001af6d:	mov    edx,r14d
   14001af70:	mov    QWORD PTR [rsp+0x20],rax
   14001af75:	call   0x140007bd0
   14001af7a:	lea    r9d,[r14+0x4e]
   14001af7e:	lea    rcx,[rbp-0x10]
   14001af82:	or     ebx,eax
   14001af84:	lea    rax,[rdi+0xc8]
   14001af8b:	mov    r8,rsi
   14001af8e:	mov    edx,r14d
   14001af91:	mov    QWORD PTR [rsp+0x20],rax
   14001af96:	call   0x140007bd0
   14001af9b:	lea    r9d,[r14+0x37]
   14001af9f:	lea    rcx,[rbp-0x10]
   14001afa3:	or     ebx,eax
   14001afa5:	lea    rax,[rdi+0xd0]
   14001afac:	mov    r8,rsi
   14001afaf:	mov    edx,r14d
   14001afb2:	mov    QWORD PTR [rsp+0x20],rax
   14001afb7:	call   0x140007bd0
   14001afbc:	lea    r9d,[r14+0x38]
   14001afc0:	lea    rcx,[rbp-0x10]
   14001afc4:	or     ebx,eax
   14001afc6:	lea    rax,[rdi+0xd8]
   14001afcd:	mov    r8,rsi
   14001afd0:	mov    edx,r14d
   14001afd3:	mov    QWORD PTR [rsp+0x20],rax
   14001afd8:	call   0x140007bd0
   14001afdd:	lea    r9d,[r14+0x39]
   14001afe1:	lea    rcx,[rbp-0x10]
   14001afe5:	or     ebx,eax
   14001afe7:	lea    rax,[rdi+0xe0]
   14001afee:	mov    r8,rsi
   14001aff1:	mov    edx,r14d
   14001aff4:	mov    QWORD PTR [rsp+0x20],rax
   14001aff9:	call   0x140007bd0
   14001affe:	lea    r9d,[r14+0x3a]
   14001b002:	mov    r8,rsi
   14001b005:	or     ebx,eax
   14001b007:	lea    rax,[rdi+0xe8]
   14001b00e:	mov    edx,r14d
   14001b011:	mov    QWORD PTR [rsp+0x20],rax
   14001b016:	lea    rcx,[rbp-0x10]
   14001b01a:	call   0x140007bd0
   14001b01f:	lea    r9d,[r14+0x3b]
   14001b023:	lea    rcx,[rbp-0x10]
   14001b027:	or     ebx,eax
   14001b029:	lea    rax,[rdi+0xf0]
   14001b030:	mov    r8,rsi
   14001b033:	mov    edx,r14d
   14001b036:	mov    QWORD PTR [rsp+0x20],rax
   14001b03b:	call   0x140007bd0
   14001b040:	lea    r9d,[r14+0x3c]
   14001b044:	lea    rcx,[rbp-0x10]
   14001b048:	or     ebx,eax
   14001b04a:	lea    rax,[rdi+0xf8]
   14001b051:	mov    r8,rsi
   14001b054:	mov    edx,r14d
   14001b057:	mov    QWORD PTR [rsp+0x20],rax
   14001b05c:	call   0x140007bd0
   14001b061:	lea    r9d,[r14+0x3d]
   14001b065:	lea    rcx,[rbp-0x10]
   14001b069:	or     ebx,eax
   14001b06b:	lea    rax,[rdi+0x100]
   14001b072:	mov    r8,rsi
   14001b075:	mov    edx,r14d
   14001b078:	mov    QWORD PTR [rsp+0x20],rax
   14001b07d:	call   0x140007bd0
   14001b082:	lea    r9d,[r14+0x3e]
   14001b086:	lea    rcx,[rbp-0x10]
   14001b08a:	or     ebx,eax
   14001b08c:	lea    rax,[rdi+0x108]
   14001b093:	mov    r8,rsi
   14001b096:	mov    edx,r14d
   14001b099:	mov    QWORD PTR [rsp+0x20],rax
   14001b09e:	call   0x140007bd0
   14001b0a3:	lea    r9d,[r14+0x3f]
   14001b0a7:	lea    rcx,[rbp-0x10]
   14001b0ab:	or     ebx,eax
   14001b0ad:	lea    rax,[rdi+0x110]
   14001b0b4:	mov    r8,rsi
   14001b0b7:	mov    edx,r14d
   14001b0ba:	mov    QWORD PTR [rsp+0x20],rax
   14001b0bf:	call   0x140007bd0
   14001b0c4:	lea    r9d,[r14+0x40]
   14001b0c8:	lea    rcx,[rbp-0x10]
   14001b0cc:	or     ebx,eax
   14001b0ce:	lea    rax,[rdi+0x118]
   14001b0d5:	mov    r8,rsi
   14001b0d8:	mov    edx,r14d
   14001b0db:	mov    QWORD PTR [rsp+0x20],rax
   14001b0e0:	call   0x140007bd0
   14001b0e5:	lea    r9d,[r14+0x41]
   14001b0e9:	lea    rcx,[rbp-0x10]
   14001b0ed:	or     ebx,eax
   14001b0ef:	lea    rax,[rdi+0x120]
   14001b0f6:	mov    r8,rsi
   14001b0f9:	mov    edx,r14d
   14001b0fc:	mov    QWORD PTR [rsp+0x20],rax
   14001b101:	call   0x140007bd0
   14001b106:	lea    r9d,[r14+0x42]
   14001b10a:	lea    rcx,[rbp-0x10]
   14001b10e:	or     ebx,eax
   14001b110:	lea    rax,[rdi+0x128]
   14001b117:	mov    r8,rsi
   14001b11a:	mov    edx,r14d
   14001b11d:	mov    QWORD PTR [rsp+0x20],rax
   14001b122:	call   0x140007bd0
   14001b127:	lea    r9d,[r14+0x27]
   14001b12b:	lea    rcx,[rbp-0x10]
   14001b12f:	or     ebx,eax
   14001b131:	lea    rax,[rdi+0x130]
   14001b138:	mov    r8,rsi
   14001b13b:	mov    edx,r14d
   14001b13e:	mov    QWORD PTR [rsp+0x20],rax
   14001b143:	call   0x140007bd0
   14001b148:	lea    r9d,[r14+0x28]
   14001b14c:	lea    rcx,[rbp-0x10]
   14001b150:	or     ebx,eax
   14001b152:	lea    rax,[rdi+0x138]
   14001b159:	mov    r8,rsi
   14001b15c:	mov    edx,r14d
   14001b15f:	mov    QWORD PTR [rsp+0x20],rax
   14001b164:	call   0x140007bd0
   14001b169:	or     ebx,eax
   14001b16b:	lea    rax,[rdi+0x140]
   14001b172:	lea    r9d,[r14+0x1e]
   14001b176:	lea    rcx,[rbp-0x10]
   14001b17a:	mov    r8,rsi
   14001b17d:	mov    edx,r14d
   14001b180:	mov    QWORD PTR [rsp+0x20],rax
   14001b185:	call   0x140007bd0
   14001b18a:	lea    r9d,[r14+0x1f]
   14001b18e:	or     ebx,eax
   14001b190:	lea    rax,[rdi+0x148]
   14001b197:	lea    rcx,[rbp-0x10]
   14001b19b:	mov    r8,rsi
   14001b19e:	mov    edx,r14d
   14001b1a1:	mov    QWORD PTR [rsp+0x20],rax
   14001b1a6:	call   0x140007bd0
   14001b1ab:	lea    rcx,[rbp-0x10]
   14001b1af:	mov    r9d,0x1003
   14001b1b5:	or     ebx,eax
   14001b1b7:	lea    rax,[rdi+0x150]
   14001b1be:	mov    r8,rsi
   14001b1c1:	mov    edx,r14d
   14001b1c4:	mov    QWORD PTR [rsp+0x20],rax
   14001b1c9:	call   0x140007bd0
   14001b1ce:	lea    rcx,[rbp-0x10]
   14001b1d2:	mov    r9d,0x1009
   14001b1d8:	or     ebx,eax
   14001b1da:	lea    rax,[rdi+0x158]
   14001b1e1:	mov    r8,rsi
   14001b1e4:	xor    edx,edx
   14001b1e6:	mov    QWORD PTR [rsp+0x20],rax
   14001b1eb:	call   0x140007bd0
   14001b1f0:	lea    r9d,[r14+0x30]
   14001b1f4:	lea    rcx,[rbp-0x10]
   14001b1f8:	lea    r14d,[r9-0x2f]
   14001b1fc:	or     ebx,eax
   14001b1fe:	lea    rax,[rdi+0x168]
   14001b205:	mov    edx,r14d
   14001b208:	mov    r8,rsi
   14001b20b:	mov    QWORD PTR [rsp+0x20],rax
   14001b210:	call   0x140007bd0
   14001b215:	lea    r9d,[r14+0x30]
   14001b219:	lea    rcx,[rbp-0x10]
   14001b21d:	or     ebx,eax
   14001b21f:	lea    rax,[rdi+0x170]
   14001b226:	mov    r8,rsi
   14001b229:	mov    edx,r14d
   14001b22c:	mov    QWORD PTR [rsp+0x20],rax
   14001b231:	call   0x140007bd0
   14001b236:	lea    r9d,[r14+0x31]
   14001b23a:	lea    rcx,[rbp-0x10]
   14001b23e:	or     ebx,eax
   14001b240:	lea    rax,[rdi+0x178]
   14001b247:	mov    r8,rsi
   14001b24a:	mov    edx,r14d
   14001b24d:	mov    QWORD PTR [rsp+0x20],rax
   14001b252:	call   0x140007bd0
   14001b257:	lea    r9d,[r14+0x32]
   14001b25b:	lea    rcx,[rbp-0x10]
   14001b25f:	or     ebx,eax
   14001b261:	lea    rax,[rdi+0x180]
   14001b268:	mov    r8,rsi
   14001b26b:	mov    edx,r14d
   14001b26e:	mov    QWORD PTR [rsp+0x20],rax
   14001b273:	call   0x140007bd0
   14001b278:	lea    r9d,[r14+0x33]
   14001b27c:	lea    rcx,[rbp-0x10]
   14001b280:	or     ebx,eax
   14001b282:	lea    rax,[rdi+0x188]
   14001b289:	mov    r8,rsi
   14001b28c:	mov    edx,r14d
   14001b28f:	mov    QWORD PTR [rsp+0x20],rax
   14001b294:	call   0x140007bd0
   14001b299:	lea    r9d,[r14+0x34]
   14001b29d:	lea    rcx,[rbp-0x10]
   14001b2a1:	or     ebx,eax
   14001b2a3:	lea    rax,[rdi+0x190]
   14001b2aa:	mov    r8,rsi
   14001b2ad:	mov    edx,r14d
   14001b2b0:	mov    QWORD PTR [rsp+0x20],rax
   14001b2b5:	call   0x140007bd0
   14001b2ba:	or     ebx,eax
   14001b2bc:	lea    rax,[rdi+0x160]
   14001b2c3:	lea    r9d,[r14+0x35]
   14001b2c7:	lea    rcx,[rbp-0x10]
   14001b2cb:	mov    r8,rsi
   14001b2ce:	mov    edx,r14d
   14001b2d1:	mov    QWORD PTR [rsp+0x20],rax
   14001b2d6:	call   0x140007bd0
   14001b2db:	lea    r9d,[r14+0x28]
   14001b2df:	or     ebx,eax
   14001b2e1:	lea    rax,[rdi+0x1a0]
   14001b2e8:	lea    rcx,[rbp-0x10]
   14001b2ec:	mov    r8,rsi
   14001b2ef:	mov    edx,r14d
   14001b2f2:	mov    QWORD PTR [rsp+0x20],rax
   14001b2f7:	call   0x140007bd0
   14001b2fc:	lea    r9d,[r14+0x29]
   14001b300:	lea    rcx,[rbp-0x10]
   14001b304:	or     ebx,eax
   14001b306:	lea    rax,[rdi+0x1a8]
   14001b30d:	mov    r8,rsi
   14001b310:	mov    edx,r14d
   14001b313:	mov    QWORD PTR [rsp+0x20],rax
   14001b318:	call   0x140007bd0
   14001b31d:	lea    r9d,[r14+0x2a]
   14001b321:	lea    rcx,[rbp-0x10]
   14001b325:	or     ebx,eax
   14001b327:	lea    rax,[rdi+0x1b0]
   14001b32e:	mov    r8,rsi
   14001b331:	mov    edx,r14d
   14001b334:	mov    QWORD PTR [rsp+0x20],rax
   14001b339:	call   0x140007bd0
   14001b33e:	lea    r9d,[r14+0x2b]
   14001b342:	lea    rcx,[rbp-0x10]
   14001b346:	or     ebx,eax
   14001b348:	lea    rax,[rdi+0x1b8]
   14001b34f:	mov    r8,rsi
   14001b352:	mov    edx,r14d
   14001b355:	mov    QWORD PTR [rsp+0x20],rax
   14001b35a:	call   0x140007bd0
   14001b35f:	lea    r9d,[r14+0x2c]
   14001b363:	lea    rcx,[rbp-0x10]
   14001b367:	or     ebx,eax
   14001b369:	lea    rax,[rdi+0x1c0]
   14001b370:	mov    r8,rsi
   14001b373:	mov    edx,r14d
   14001b376:	mov    QWORD PTR [rsp+0x20],rax
   14001b37b:	call   0x140007bd0
   14001b380:	lea    r9d,[r14+0x2d]
   14001b384:	lea    rcx,[rbp-0x10]
   14001b388:	or     ebx,eax
   14001b38a:	lea    rax,[rdi+0x1c8]
   14001b391:	mov    r8,rsi
   14001b394:	mov    edx,r14d
   14001b397:	mov    QWORD PTR [rsp+0x20],rax
   14001b39c:	call   0x140007bd0
   14001b3a1:	lea    r9d,[r14+0x2e]
   14001b3a5:	lea    rcx,[rbp-0x10]
   14001b3a9:	or     ebx,eax
   14001b3ab:	lea    rax,[rdi+0x198]
   14001b3b2:	mov    r8,rsi
   14001b3b5:	mov    edx,r14d
   14001b3b8:	mov    QWORD PTR [rsp+0x20],rax
   14001b3bd:	call   0x140007bd0
   14001b3c2:	lea    r9d,[r14+0x42]
   14001b3c6:	lea    rcx,[rbp-0x10]
   14001b3ca:	or     ebx,eax
   14001b3cc:	lea    rax,[rdi+0x1d0]
   14001b3d3:	mov    r8,rsi
   14001b3d6:	mov    edx,r14d
   14001b3d9:	mov    QWORD PTR [rsp+0x20],rax
   14001b3de:	call   0x140007bd0
   14001b3e3:	lea    r9d,[r14+0x43]
   14001b3e7:	lea    rcx,[rbp-0x10]
   14001b3eb:	or     ebx,eax
   14001b3ed:	lea    rax,[rdi+0x1d8]
   14001b3f4:	mov    r8,rsi
   14001b3f7:	mov    edx,r14d
   14001b3fa:	mov    QWORD PTR [rsp+0x20],rax
   14001b3ff:	call   0x140007bd0
   14001b404:	or     ebx,eax
   14001b406:	lea    rax,[rdi+0x1e0]
   14001b40d:	lea    r9d,[r14+0x44]
   14001b411:	lea    rcx,[rbp-0x10]
   14001b415:	mov    r8,rsi
   14001b418:	mov    edx,r14d
   14001b41b:	mov    QWORD PTR [rsp+0x20],rax
   14001b420:	call   0x140007bd0
   14001b425:	lea    r9d,[r14+0x45]
   14001b429:	lea    rcx,[rbp-0x10]
   14001b42d:	or     ebx,eax
   14001b42f:	lea    rax,[rdi+0x1e8]
   14001b436:	mov    r8,rsi
   14001b439:	mov    edx,r14d
   14001b43c:	mov    QWORD PTR [rsp+0x20],rax
   14001b441:	call   0x140007bd0
   14001b446:	lea    r9d,[r14+0x46]
   14001b44a:	lea    rcx,[rbp-0x10]
   14001b44e:	or     ebx,eax
   14001b450:	lea    rax,[rdi+0x1f0]
   14001b457:	mov    r8,rsi
   14001b45a:	mov    edx,r14d
   14001b45d:	mov    QWORD PTR [rsp+0x20],rax
   14001b462:	call   0x140007bd0
   14001b467:	lea    r9d,[r14+0x47]
   14001b46b:	lea    rcx,[rbp-0x10]
   14001b46f:	or     ebx,eax
   14001b471:	lea    rax,[rdi+0x1f8]
   14001b478:	mov    r8,rsi
   14001b47b:	mov    edx,r14d
   14001b47e:	mov    QWORD PTR [rsp+0x20],rax
   14001b483:	call   0x140007bd0
   14001b488:	lea    r9d,[r14+0x48]
   14001b48c:	lea    rcx,[rbp-0x10]
   14001b490:	or     ebx,eax
   14001b492:	lea    rax,[rdi+0x200]
   14001b499:	mov    r8,rsi
   14001b49c:	mov    edx,r14d
   14001b49f:	mov    QWORD PTR [rsp+0x20],rax
   14001b4a4:	call   0x140007bd0
   14001b4a9:	lea    r9d,[r14+0x49]
   14001b4ad:	lea    rcx,[rbp-0x10]
   14001b4b1:	or     ebx,eax
   14001b4b3:	lea    rax,[rdi+0x208]
   14001b4ba:	mov    r8,rsi
   14001b4bd:	mov    edx,r14d
   14001b4c0:	mov    QWORD PTR [rsp+0x20],rax
   14001b4c5:	call   0x140007bd0
   14001b4ca:	lea    r9d,[r14+0x4a]
   14001b4ce:	lea    rcx,[rbp-0x10]
   14001b4d2:	or     ebx,eax
   14001b4d4:	lea    rax,[rdi+0x210]
   14001b4db:	mov    r8,rsi
   14001b4de:	mov    edx,r14d
   14001b4e1:	mov    QWORD PTR [rsp+0x20],rax
   14001b4e6:	call   0x140007bd0
   14001b4eb:	lea    r9d,[r14+0x4b]
   14001b4ef:	lea    rcx,[rbp-0x10]
   14001b4f3:	or     ebx,eax
   14001b4f5:	lea    rax,[rdi+0x218]
   14001b4fc:	mov    r8,rsi
   14001b4ff:	mov    edx,r14d
   14001b502:	mov    QWORD PTR [rsp+0x20],rax
   14001b507:	call   0x140007bd0
   14001b50c:	lea    r9d,[r14+0x4c]
   14001b510:	lea    rcx,[rbp-0x10]
   14001b514:	or     ebx,eax
   14001b516:	lea    rax,[rdi+0x220]
   14001b51d:	mov    r8,rsi
   14001b520:	mov    edx,r14d
   14001b523:	mov    QWORD PTR [rsp+0x20],rax
   14001b528:	call   0x140007bd0
   14001b52d:	lea    r9d,[r14+0x4d]
   14001b531:	lea    rcx,[rbp-0x10]
   14001b535:	or     ebx,eax
   14001b537:	lea    rax,[rdi+0x228]
   14001b53e:	mov    r8,rsi
   14001b541:	mov    edx,r14d
   14001b544:	mov    QWORD PTR [rsp+0x20],rax
   14001b549:	call   0x140007bd0
   14001b54e:	or     ebx,eax
   14001b550:	lea    rax,[rdi+0x230]
   14001b557:	lea    r9d,[r14+0x36]
   14001b55b:	lea    rcx,[rbp-0x10]
   14001b55f:	mov    r8,rsi
   14001b562:	mov    edx,r14d
   14001b565:	mov    QWORD PTR [rsp+0x20],rax
   14001b56a:	call   0x140007bd0
   14001b56f:	lea    r9d,[r14+0x37]
   14001b573:	lea    rcx,[rbp-0x10]
   14001b577:	or     ebx,eax
   14001b579:	lea    rax,[rdi+0x238]
   14001b580:	mov    r8,rsi
   14001b583:	mov    edx,r14d
   14001b586:	mov    QWORD PTR [rsp+0x20],rax
   14001b58b:	call   0x140007bd0
   14001b590:	lea    r9d,[r14+0x38]
   14001b594:	lea    rcx,[rbp-0x10]
   14001b598:	or     ebx,eax
   14001b59a:	lea    rax,[rdi+0x240]
   14001b5a1:	mov    r8,rsi
   14001b5a4:	mov    edx,r14d
   14001b5a7:	mov    QWORD PTR [rsp+0x20],rax
   14001b5ac:	call   0x140007bd0
   14001b5b1:	lea    r9d,[r14+0x39]
   14001b5b5:	lea    rcx,[rbp-0x10]
   14001b5b9:	or     ebx,eax
   14001b5bb:	lea    rax,[rdi+0x248]
   14001b5c2:	mov    r8,rsi
   14001b5c5:	mov    edx,r14d
   14001b5c8:	mov    QWORD PTR [rsp+0x20],rax
   14001b5cd:	call   0x140007bd0
   14001b5d2:	lea    r9d,[r14+0x3a]
   14001b5d6:	lea    rcx,[rbp-0x10]
   14001b5da:	or     ebx,eax
   14001b5dc:	lea    rax,[rdi+0x250]
   14001b5e3:	mov    r8,rsi
   14001b5e6:	mov    edx,r14d
   14001b5e9:	mov    QWORD PTR [rsp+0x20],rax
   14001b5ee:	call   0x140007bd0
   14001b5f3:	lea    r9d,[r14+0x3b]
   14001b5f7:	lea    rcx,[rbp-0x10]
   14001b5fb:	or     ebx,eax
   14001b5fd:	lea    rax,[rdi+0x258]
   14001b604:	mov    r8,rsi
   14001b607:	mov    edx,r14d
   14001b60a:	mov    QWORD PTR [rsp+0x20],rax
   14001b60f:	call   0x140007bd0
   14001b614:	lea    r9d,[r14+0x3c]
   14001b618:	lea    rcx,[rbp-0x10]
   14001b61c:	or     ebx,eax
   14001b61e:	lea    rax,[rdi+0x260]
   14001b625:	mov    r8,rsi
   14001b628:	mov    edx,r14d
   14001b62b:	mov    QWORD PTR [rsp+0x20],rax
   14001b630:	call   0x140007bd0
   14001b635:	lea    r9d,[r14+0x3d]
   14001b639:	lea    rcx,[rbp-0x10]
   14001b63d:	or     ebx,eax
   14001b63f:	lea    rax,[rdi+0x268]
   14001b646:	mov    r8,rsi
   14001b649:	mov    edx,r14d
   14001b64c:	mov    QWORD PTR [rsp+0x20],rax
   14001b651:	call   0x140007bd0
   14001b656:	lea    r9d,[r14+0x3e]
   14001b65a:	lea    rcx,[rbp-0x10]
   14001b65e:	or     ebx,eax
   14001b660:	lea    rax,[rdi+0x270]
   14001b667:	mov    r8,rsi
   14001b66a:	mov    edx,r14d
   14001b66d:	mov    QWORD PTR [rsp+0x20],rax
   14001b672:	call   0x140007bd0
   14001b677:	lea    r9d,[r14+0x3f]
   14001b67b:	lea    rcx,[rbp-0x10]
   14001b67f:	or     ebx,eax
   14001b681:	lea    rax,[rdi+0x278]
   14001b688:	mov    r8,rsi
   14001b68b:	mov    edx,r14d
   14001b68e:	mov    QWORD PTR [rsp+0x20],rax
   14001b693:	call   0x140007bd0
   14001b698:	or     ebx,eax
   14001b69a:	lea    rax,[rdi+0x280]
   14001b6a1:	mov    QWORD PTR [rsp+0x20],rax
   14001b6a6:	lea    r9d,[r14+0x40]
   14001b6aa:	lea    rcx,[rbp-0x10]
   14001b6ae:	mov    r8,rsi
   14001b6b1:	mov    edx,r14d
   14001b6b4:	call   0x140007bd0
   14001b6b9:	lea    r9d,[r14+0x41]
   14001b6bd:	lea    rcx,[rbp-0x10]
   14001b6c1:	or     ebx,eax
   14001b6c3:	lea    rax,[rdi+0x288]
   14001b6ca:	mov    r8,rsi
   14001b6cd:	mov    edx,r14d
   14001b6d0:	mov    QWORD PTR [rsp+0x20],rax
   14001b6d5:	call   0x140007bd0
   14001b6da:	lea    r9d,[r14+0x26]
   14001b6de:	lea    rcx,[rbp-0x10]
   14001b6e2:	or     ebx,eax
   14001b6e4:	lea    rax,[rdi+0x290]
   14001b6eb:	mov    r8,rsi
   14001b6ee:	mov    edx,r14d
   14001b6f1:	mov    QWORD PTR [rsp+0x20],rax
   14001b6f6:	call   0x140007bd0
   14001b6fb:	lea    r9d,[r14+0x27]
   14001b6ff:	lea    rcx,[rbp-0x10]
   14001b703:	or     ebx,eax
   14001b705:	lea    rax,[rdi+0x298]
   14001b70c:	mov    r8,rsi
   14001b70f:	mov    edx,r14d
   14001b712:	mov    QWORD PTR [rsp+0x20],rax
   14001b717:	call   0x140007bd0
   14001b71c:	lea    r9d,[r14+0x1d]
   14001b720:	lea    rcx,[rbp-0x10]
   14001b724:	or     ebx,eax
   14001b726:	lea    rax,[rdi+0x2a0]
   14001b72d:	mov    r8,rsi
   14001b730:	mov    edx,r14d
   14001b733:	mov    QWORD PTR [rsp+0x20],rax
   14001b738:	call   0x140007bd0
   14001b73d:	lea    r9d,[r14+0x1e]
   14001b741:	lea    rcx,[rbp-0x10]
   14001b745:	or     ebx,eax
   14001b747:	lea    rax,[rdi+0x2a8]
   14001b74e:	mov    r8,rsi
   14001b751:	mov    edx,r14d
   14001b754:	mov    QWORD PTR [rsp+0x20],rax
   14001b759:	call   0x140007bd0
   14001b75e:	lea    rcx,[rbp-0x10]
   14001b762:	mov    r9d,0x1003
   14001b768:	or     ebx,eax
   14001b76a:	lea    rax,[rdi+0x2b0]
   14001b771:	mov    r8,rsi
   14001b774:	mov    edx,r14d
   14001b777:	mov    QWORD PTR [rsp+0x20],rax
   14001b77c:	call   0x140007bd0
   14001b781:	or     eax,ebx
   14001b783:	mov    rbx,QWORD PTR [rsp+0x50]
   14001b788:	mov    rsi,QWORD PTR [rsp+0x58]
   14001b78d:	mov    rdi,QWORD PTR [rsp+0x60]
   14001b792:	mov    r14,QWORD PTR [rsp+0x68]
   14001b797:	add    rsp,0x40
   14001b79b:	pop    rbp
   14001b79c:	ret    
   14001b79d:	int3   
   14001b79e:	int3   
   14001b79f:	int3   
   14001b7a0:	sub    rsp,0x28
   14001b7a4:	call   0x14000b18c
   14001b7a9:	mov    rcx,QWORD PTR [rip+0x1b5d0]        # 0x140036d80
   14001b7b0:	cmp    QWORD PTR [rax+0xc0],rcx
   14001b7b7:	je     0x14001b7cc
   14001b7b9:	mov    eax,DWORD PTR [rax+0xc8]
   14001b7bf:	test   DWORD PTR [rip+0x1b733],eax        # 0x140036ef8
   14001b7c5:	jne    0x14001b7cc
   14001b7c7:	call   0x14000fff4
   14001b7cc:	mov    rax,QWORD PTR [rip+0x1bd6d]        # 0x140037540
   14001b7d3:	add    rsp,0x28
   14001b7d7:	ret    
   14001b7d8:	sub    rsp,0x28
   14001b7dc:	call   0x14000b18c
   14001b7e1:	mov    rcx,QWORD PTR [rax+0xc0]
   14001b7e8:	cmp    rcx,QWORD PTR [rip+0x1b591]        # 0x140036d80
   14001b7ef:	je     0x14001b807
   14001b7f1:	mov    eax,DWORD PTR [rax+0xc8]
   14001b7f7:	test   DWORD PTR [rip+0x1b6fb],eax        # 0x140036ef8
   14001b7fd:	jne    0x14001b807
   14001b7ff:	call   0x14000fff4
   14001b804:	mov    rcx,rax
   14001b807:	mov    rax,QWORD PTR [rcx+0x108]
   14001b80e:	add    rsp,0x28
   14001b812:	ret    
   14001b813:	int3   
   14001b814:	mov    rax,QWORD PTR [rip+0x1bd35]        # 0x140037550
   14001b81b:	ret    
   14001b81c:	mov    QWORD PTR [rsp+0x8],rbx
   14001b821:	mov    QWORD PTR [rsp+0x10],rsi
   14001b826:	push   rdi
   14001b827:	sub    rsp,0x30
   14001b82b:	xor    edi,edi
   14001b82d:	lea    ecx,[rdi+0x1]
   14001b830:	call   0x140008760
   14001b835:	nop
   14001b836:	lea    ebx,[rdi+0x3]
   14001b839:	mov    DWORD PTR [rsp+0x20],ebx
   14001b83d:	cmp    ebx,DWORD PTR [rip+0x1d7f5]        # 0x140039038
   14001b843:	jge    0x14001b8a8
   14001b845:	movsxd rsi,ebx
   14001b848:	mov    rax,QWORD PTR [rip+0x1d7e1]        # 0x140039030
   14001b84f:	mov    rcx,QWORD PTR [rax+rsi*8]
   14001b853:	test   rcx,rcx
   14001b856:	je     0x14001b8a4
   14001b858:	test   BYTE PTR [rcx+0x18],0x83
   14001b85c:	je     0x14001b86e
   14001b85e:	call   0x140020e68
   14001b863:	cmp    eax,0xffffffff
   14001b866:	je     0x14001b86e
   14001b868:	inc    edi
   14001b86a:	mov    DWORD PTR [rsp+0x24],edi
   14001b86e:	cmp    ebx,0x14
   14001b871:	jl     0x14001b8a4
   14001b873:	mov    rax,QWORD PTR [rip+0x1d7b6]        # 0x140039030
   14001b87a:	mov    rcx,QWORD PTR [rax+rsi*8]
   14001b87e:	add    rcx,0x30
   14001b882:	call   QWORD PTR [rip+0xb890]        # 0x140027118
   14001b888:	mov    rcx,QWORD PTR [rip+0x1d7a1]        # 0x140039030
   14001b88f:	mov    rcx,QWORD PTR [rcx+rsi*8]
   14001b893:	call   0x140006444
   14001b898:	mov    rax,QWORD PTR [rip+0x1d791]        # 0x140039030
   14001b89f:	and    QWORD PTR [rax+rsi*8],0x0
   14001b8a4:	inc    ebx
   14001b8a6:	jmp    0x14001b839
   14001b8a8:	mov    ecx,0x1
   14001b8ad:	call   0x14000897c
   14001b8b2:	mov    eax,edi
   14001b8b4:	mov    rbx,QWORD PTR [rsp+0x40]
   14001b8b9:	mov    rsi,QWORD PTR [rsp+0x48]
   14001b8be:	add    rsp,0x30
   14001b8c2:	pop    rdi
   14001b8c3:	ret    
   14001b8c4:	mov    QWORD PTR [rsp+0x18],rbx
   14001b8c9:	mov    DWORD PTR [rsp+0x8],ecx
   14001b8cd:	push   rsi
   14001b8ce:	push   rdi
   14001b8cf:	push   r14
   14001b8d1:	sub    rsp,0x20
   14001b8d5:	movsxd rdi,ecx
   14001b8d8:	cmp    edi,0xfffffffe
   14001b8db:	jne    0x14001b8ed
   14001b8dd:	call   0x1400095b8
   14001b8e2:	mov    DWORD PTR [rax],0x9
   14001b8e8:	jmp    0x14001b98a
   14001b8ed:	test   ecx,ecx
   14001b8ef:	js     0x14001b97a
   14001b8f5:	cmp    edi,DWORD PTR [rip+0x1e749]        # 0x14003a044
   14001b8fb:	jae    0x14001b97a
   14001b8fd:	mov    rax,rdi
   14001b900:	mov    rbx,rdi
   14001b903:	sar    rbx,0x5
   14001b907:	lea    r14,[rip+0x1cd82]        # 0x140038690
   14001b90e:	and    eax,0x1f
   14001b911:	imul   rsi,rax,0x58
   14001b915:	mov    rax,QWORD PTR [r14+rbx*8]
   14001b919:	movsx  ecx,BYTE PTR [rax+rsi*1+0x8]
   14001b91e:	and    ecx,0x1
   14001b921:	je     0x14001b97a
   14001b923:	mov    ecx,edi
   14001b925:	call   0x140020ed0
   14001b92a:	nop
   14001b92b:	mov    rax,QWORD PTR [r14+rbx*8]
   14001b92f:	test   BYTE PTR [rax+rsi*1+0x8],0x1
   14001b934:	je     0x14001b961
   14001b936:	mov    ecx,edi
   14001b938:	call   0x14002120c
   14001b93d:	mov    rcx,rax
   14001b940:	call   QWORD PTR [rip+0xb96a]        # 0x1400272b0
   14001b946:	test   eax,eax
   14001b948:	jne    0x14001b954
   14001b94a:	call   QWORD PTR [rip+0xb730]        # 0x140027080
   14001b950:	mov    ebx,eax
   14001b952:	jmp    0x14001b956
   14001b954:	xor    ebx,ebx
   14001b956:	test   ebx,ebx
   14001b958:	je     0x14001b96f
   14001b95a:	call   0x140009548
   14001b95f:	mov    DWORD PTR [rax],ebx
   14001b961:	call   0x1400095b8
   14001b966:	mov    DWORD PTR [rax],0x9
   14001b96c:	or     ebx,0xffffffff
   14001b96f:	mov    ecx,edi
   14001b971:	call   0x14002142c
   14001b976:	mov    eax,ebx
   14001b978:	jmp    0x14001b98d
   14001b97a:	call   0x1400095b8
   14001b97f:	mov    DWORD PTR [rax],0x9
   14001b985:	call   0x140008628
   14001b98a:	or     eax,0xffffffff
   14001b98d:	mov    rbx,QWORD PTR [rsp+0x50]
   14001b992:	add    rsp,0x20
   14001b996:	pop    r14
   14001b998:	pop    rdi
   14001b999:	pop    rsi
   14001b99a:	ret    
   14001b99b:	int3   
   14001b99c:	mov    QWORD PTR [rsp+0x10],rbx
   14001b9a1:	mov    DWORD PTR [rsp+0x8],ecx
   14001b9a5:	push   rsi
   14001b9a6:	push   rdi
   14001b9a7:	push   r12
   14001b9a9:	push   r14
   14001b9ab:	push   r15
   14001b9ad:	sub    rsp,0x20
   14001b9b1:	mov    esi,r8d
   14001b9b4:	mov    r14,rdx
   14001b9b7:	movsxd rbx,ecx
   14001b9ba:	cmp    ebx,0xfffffffe
   14001b9bd:	jne    0x14001b9d7
   14001b9bf:	call   0x140009548
   14001b9c4:	and    DWORD PTR [rax],0x0
   14001b9c7:	call   0x1400095b8
   14001b9cc:	mov    DWORD PTR [rax],0x9
   14001b9d2:	jmp    0x14001ba68
   14001b9d7:	test   ecx,ecx
   14001b9d9:	js     0x14001ba50
   14001b9db:	cmp    ebx,DWORD PTR [rip+0x1e663]        # 0x14003a044
   14001b9e1:	jae    0x14001ba50
   14001b9e3:	mov    rax,rbx
   14001b9e6:	mov    rdi,rbx
   14001b9e9:	sar    rdi,0x5
   14001b9ed:	lea    r12,[rip+0x1cc9c]        # 0x140038690
   14001b9f4:	and    eax,0x1f
   14001b9f7:	imul   r15,rax,0x58
   14001b9fb:	mov    rax,QWORD PTR [r12+rdi*8]
   14001b9ff:	movsx  ecx,BYTE PTR [rax+r15*1+0x8]
   14001ba05:	and    ecx,0x1
   14001ba08:	je     0x14001ba50
   14001ba0a:	mov    ecx,ebx
   14001ba0c:	call   0x140020ed0
   14001ba11:	nop
   14001ba12:	mov    rax,QWORD PTR [r12+rdi*8]
   14001ba16:	test   BYTE PTR [rax+r15*1+0x8],0x1
   14001ba1c:	je     0x14001ba2f
   14001ba1e:	mov    r8d,esi
   14001ba21:	mov    rdx,r14
   14001ba24:	mov    ecx,ebx
   14001ba26:	call   0x14001ba80
   14001ba2b:	mov    edi,eax
   14001ba2d:	jmp    0x14001ba45
   14001ba2f:	call   0x1400095b8
   14001ba34:	mov    DWORD PTR [rax],0x9
   14001ba3a:	call   0x140009548
   14001ba3f:	and    DWORD PTR [rax],0x0
   14001ba42:	or     edi,0xffffffff
   14001ba45:	mov    ecx,ebx
   14001ba47:	call   0x14002142c
   14001ba4c:	mov    eax,edi
   14001ba4e:	jmp    0x14001ba6b
   14001ba50:	call   0x140009548
   14001ba55:	and    DWORD PTR [rax],0x0
   14001ba58:	call   0x1400095b8
   14001ba5d:	mov    DWORD PTR [rax],0x9
   14001ba63:	call   0x140008628
   14001ba68:	or     eax,0xffffffff
   14001ba6b:	mov    rbx,QWORD PTR [rsp+0x58]
   14001ba70:	add    rsp,0x20
   14001ba74:	pop    r15
   14001ba76:	pop    r14
   14001ba78:	pop    r12
   14001ba7a:	pop    rdi
   14001ba7b:	pop    rsi
   14001ba7c:	ret    
   14001ba7d:	int3   
   14001ba7e:	int3   
   14001ba7f:	int3   
   14001ba80:	mov    QWORD PTR [rsp+0x20],rbx
   14001ba85:	push   rbp
   14001ba86:	push   rsi
   14001ba87:	push   rdi
   14001ba88:	push   r12
   14001ba8a:	push   r13
   14001ba8c:	push   r14
   14001ba8e:	push   r15
   14001ba90:	lea    rbp,[rsp-0x1a40]
   14001ba98:	mov    eax,0x1b40
   14001ba9d:	call   0x140019d60
   14001baa2:	sub    rsp,rax
   14001baa5:	mov    rax,QWORD PTR [rip+0x1af94]        # 0x140036a40
   14001baac:	xor    rax,rsp
   14001baaf:	mov    QWORD PTR [rbp+0x1a30],rax
   14001bab6:	xor    r12d,r12d
   14001bab9:	mov    r15d,r8d
   14001babc:	mov    r14,rdx
   14001babf:	movsxd rdi,ecx
   14001bac2:	mov    DWORD PTR [rsp+0x40],r12d
   14001bac7:	mov    ebx,r12d
   14001baca:	mov    esi,r12d
   14001bacd:	test   r8d,r8d
   14001bad0:	jne    0x14001bad9
   14001bad2:	xor    eax,eax
   14001bad4:	jmp    0x14001c247
   14001bad9:	test   rdx,rdx
   14001badc:	jne    0x14001bafe
   14001bade:	call   0x140009548
   14001bae3:	mov    DWORD PTR [rax],r12d
   14001bae6:	call   0x1400095b8
   14001baeb:	mov    DWORD PTR [rax],0x16
   14001baf1:	call   0x140008628
   14001baf6:	or     eax,0xffffffff
   14001baf9:	jmp    0x14001c247
   14001bafe:	mov    rax,rdi
   14001bb01:	mov    rcx,rdi
   14001bb04:	lea    rdx,[rip+0x1cb85]        # 0x140038690
   14001bb0b:	sar    rcx,0x5
   14001bb0f:	and    eax,0x1f
   14001bb12:	mov    QWORD PTR [rsp+0x48],rcx
   14001bb17:	mov    rcx,QWORD PTR [rdx+rcx*8]
   14001bb1b:	imul   r13,rax,0x58
   14001bb1f:	mov    r12b,BYTE PTR [r13+rcx*1+0x38]
   14001bb24:	mov    QWORD PTR [rsp+0x58],r13
   14001bb29:	add    r12b,r12b
   14001bb2c:	sar    r12b,1
   14001bb2f:	lea    eax,[r12-0x1]
   14001bb34:	cmp    al,0x1
   14001bb36:	ja     0x14001bb4c
   14001bb38:	mov    eax,r15d
   14001bb3b:	not    eax
   14001bb3d:	test   al,0x1
   14001bb3f:	jne    0x14001bb4c
   14001bb41:	call   0x140009548
   14001bb46:	xor    ecx,ecx
   14001bb48:	mov    DWORD PTR [rax],ecx
   14001bb4a:	jmp    0x14001bae6
   14001bb4c:	test   BYTE PTR [r13+rcx*1+0x8],0x20
   14001bb52:	je     0x14001bb61
   14001bb54:	xor    edx,edx
   14001bb56:	mov    ecx,edi
   14001bb58:	lea    r8d,[rdx+0x2]
   14001bb5c:	call   0x140021540
   14001bb61:	mov    ecx,edi
   14001bb63:	call   0x140010868
   14001bb68:	mov    rdi,QWORD PTR [rsp+0x48]
   14001bb6d:	test   eax,eax
   14001bb6f:	je     0x14001beb5
   14001bb75:	lea    rax,[rip+0x1cb14]        # 0x140038690
   14001bb7c:	mov    rax,QWORD PTR [rax+rdi*8]
   14001bb80:	test   BYTE PTR [r13+rax*1+0x8],0x80
   14001bb86:	je     0x14001beb5
   14001bb8c:	call   0x14000b18c
   14001bb91:	lea    rdx,[rsp+0x64]
   14001bb96:	mov    rcx,QWORD PTR [rax+0xc0]
   14001bb9d:	xor    eax,eax
   14001bb9f:	cmp    QWORD PTR [rcx+0x138],rax
   14001bba6:	mov    edi,eax
   14001bba8:	mov    rax,QWORD PTR [rsp+0x48]
   14001bbad:	lea    rcx,[rip+0x1cadc]        # 0x140038690
   14001bbb4:	sete   dil
   14001bbb8:	mov    rcx,QWORD PTR [rcx+rax*8]
   14001bbbc:	mov    rcx,QWORD PTR [r13+rcx*1+0x0]
   14001bbc1:	call   QWORD PTR [rip+0xb6f9]        # 0x1400272c0
   14001bbc7:	xor    ecx,ecx
   14001bbc9:	test   eax,eax
   14001bbcb:	je     0x14001beb0
   14001bbd1:	xor    eax,eax
   14001bbd3:	test   edi,edi
   14001bbd5:	je     0x14001bbe0
   14001bbd7:	test   r12b,r12b
   14001bbda:	je     0x14001bea9
   14001bbe0:	call   QWORD PTR [rip+0xb6d2]        # 0x1400272b8
   14001bbe6:	mov    rdi,r14
   14001bbe9:	mov    DWORD PTR [rsp+0x68],eax
   14001bbed:	xor    eax,eax
   14001bbef:	movzx  ecx,ax
   14001bbf2:	mov    WORD PTR [rsp+0x44],ax
   14001bbf7:	mov    DWORD PTR [rsp+0x60],eax
   14001bbfb:	test   r15d,r15d
   14001bbfe:	je     0x14001c20a
   14001bc04:	mov    r13d,eax
   14001bc07:	test   r12b,r12b
   14001bc0a:	jne    0x14001bdb3
   14001bc10:	mov    cl,BYTE PTR [rdi]
   14001bc12:	mov    r13,QWORD PTR [rsp+0x58]
   14001bc17:	lea    rdx,[rip+0x1ca72]        # 0x140038690
   14001bc1e:	cmp    cl,0xa
   14001bc21:	sete   al
   14001bc24:	xor    r8d,r8d
   14001bc27:	mov    DWORD PTR [rsp+0x64],eax
   14001bc2b:	mov    rax,QWORD PTR [rsp+0x48]
   14001bc30:	mov    rdx,QWORD PTR [rdx+rax*8]
   14001bc34:	cmp    DWORD PTR [r13+rdx*1+0x50],r8d
   14001bc39:	je     0x14001bc5a
   14001bc3b:	mov    al,BYTE PTR [r13+rdx*1+0x4c]
   14001bc40:	mov    BYTE PTR [rsp+0x6d],cl
   14001bc44:	mov    BYTE PTR [rsp+0x6c],al
   14001bc48:	mov    DWORD PTR [r13+rdx*1+0x50],r8d
   14001bc4d:	mov    r8d,0x2
   14001bc53:	lea    rdx,[rsp+0x6c]
   14001bc58:	jmp    0x14001bca3
   14001bc5a:	movsx  ecx,cl
   14001bc5d:	call   0x14001dc80
   14001bc62:	test   eax,eax
   14001bc64:	je     0x14001bc9a
   14001bc66:	mov    rax,r15
   14001bc69:	sub    rax,rdi
   14001bc6c:	add    rax,r14
   14001bc6f:	cmp    rax,0x1
   14001bc73:	jle    0x14001be2c
   14001bc79:	lea    rcx,[rsp+0x44]
   14001bc7e:	mov    r8d,0x2
   14001bc84:	mov    rdx,rdi
   14001bc87:	call   0x140021728
   14001bc8c:	cmp    eax,0xffffffff
   14001bc8f:	je     0x14001be6e
   14001bc95:	inc    rdi
   14001bc98:	jmp    0x14001bcb6
   14001bc9a:	mov    r8d,0x1
   14001bca0:	mov    rdx,rdi
   14001bca3:	lea    rcx,[rsp+0x44]
   14001bca8:	call   0x140021728
   14001bcad:	cmp    eax,0xffffffff
   14001bcb0:	je     0x14001be6e
   14001bcb6:	mov    ecx,DWORD PTR [rsp+0x68]
   14001bcba:	xor    eax,eax
   14001bcbc:	lea    r8,[rsp+0x44]
   14001bcc1:	mov    QWORD PTR [rsp+0x38],rax
   14001bcc6:	mov    QWORD PTR [rsp+0x30],rax
   14001bccb:	lea    rax,[rsp+0x6c]
   14001bcd0:	mov    r9d,0x1
   14001bcd6:	xor    edx,edx
   14001bcd8:	mov    DWORD PTR [rsp+0x28],0x5
   14001bce0:	mov    QWORD PTR [rsp+0x20],rax
   14001bce5:	inc    rdi
   14001bce8:	call   QWORD PTR [rip+0xb3c2]        # 0x1400270b0
   14001bcee:	mov    r13d,eax
   14001bcf1:	test   eax,eax
   14001bcf3:	je     0x14001be69
   14001bcf9:	mov    rax,QWORD PTR [rsp+0x48]
   14001bcfe:	lea    rcx,[rip+0x1c98b]        # 0x140038690
   14001bd05:	lea    r9,[rsp+0x60]
   14001bd0a:	mov    rcx,QWORD PTR [rcx+rax*8]
   14001bd0e:	xor    eax,eax
   14001bd10:	lea    rdx,[rsp+0x6c]
   14001bd15:	mov    QWORD PTR [rsp+0x20],rax
   14001bd1a:	mov    rax,QWORD PTR [rsp+0x58]
   14001bd1f:	mov    r8d,r13d
   14001bd22:	mov    rcx,QWORD PTR [rax+rcx*1]
   14001bd26:	call   QWORD PTR [rip+0xb494]        # 0x1400271c0
   14001bd2c:	test   eax,eax
   14001bd2e:	je     0x14001be61
   14001bd34:	mov    eax,DWORD PTR [rsp+0x40]
   14001bd38:	mov    ebx,edi
   14001bd3a:	sub    ebx,r14d
   14001bd3d:	add    ebx,eax
   14001bd3f:	cmp    DWORD PTR [rsp+0x60],r13d
   14001bd44:	jl     0x14001c1ef
   14001bd4a:	xor    r13d,r13d
   14001bd4d:	cmp    DWORD PTR [rsp+0x64],r13d
   14001bd52:	je     0x14001bdac
   14001bd54:	mov    rax,QWORD PTR [rsp+0x48]
   14001bd59:	lea    r8d,[r13+0x1]
   14001bd5d:	mov    BYTE PTR [rsp+0x6c],0xd
   14001bd62:	lea    rcx,[rip+0x1c927]        # 0x140038690
   14001bd69:	mov    QWORD PTR [rsp+0x20],r13
   14001bd6e:	mov    r13,QWORD PTR [rsp+0x58]
   14001bd73:	mov    rcx,QWORD PTR [rcx+rax*8]
   14001bd77:	lea    r9,[rsp+0x60]
   14001bd7c:	lea    rdx,[rsp+0x6c]
   14001bd81:	mov    rcx,QWORD PTR [r13+rcx*1+0x0]
   14001bd86:	call   QWORD PTR [rip+0xb434]        # 0x1400271c0
   14001bd8c:	test   eax,eax
   14001bd8e:	je     0x14001be57
   14001bd94:	cmp    DWORD PTR [rsp+0x60],0x1
   14001bd99:	jl     0x14001be6e
   14001bd9f:	inc    DWORD PTR [rsp+0x40]
   14001bda3:	movzx  ecx,WORD PTR [rsp+0x44]
   14001bda8:	inc    ebx
   14001bdaa:	jmp    0x14001be1b
   14001bdac:	movzx  ecx,WORD PTR [rsp+0x44]
   14001bdb1:	jmp    0x14001be16
   14001bdb3:	lea    eax,[r12-0x1]
   14001bdb8:	cmp    al,0x1
   14001bdba:	ja     0x14001bdd5
   14001bdbc:	movzx  ecx,WORD PTR [rdi]
   14001bdbf:	xor    eax,eax
   14001bdc1:	cmp    cx,0xa
   14001bdc5:	mov    r13d,eax
   14001bdc8:	mov    WORD PTR [rsp+0x44],cx
   14001bdcd:	sete   r13b
   14001bdd1:	add    rdi,0x2
   14001bdd5:	lea    eax,[r12-0x1]
   14001bdda:	cmp    al,0x1
   14001bddc:	ja     0x14001be16
   14001bdde:	call   0x140021764
   14001bde3:	movzx  ecx,WORD PTR [rsp+0x44]
   14001bde8:	cmp    ax,cx
   14001bdeb:	jne    0x14001be61
   14001bded:	add    ebx,0x2
   14001bdf0:	test   r13d,r13d
   14001bdf3:	je     0x14001be16
   14001bdf5:	mov    eax,0xd
   14001bdfa:	mov    ecx,eax
   14001bdfc:	mov    WORD PTR [rsp+0x44],ax
   14001be01:	call   0x140021764
   14001be06:	movzx  ecx,WORD PTR [rsp+0x44]
   14001be0b:	cmp    ax,cx
   14001be0e:	jne    0x14001be61
   14001be10:	inc    ebx
   14001be12:	inc    DWORD PTR [rsp+0x40]
   14001be16:	mov    r13,QWORD PTR [rsp+0x58]
   14001be1b:	mov    eax,edi
   14001be1d:	sub    eax,r14d
   14001be20:	cmp    eax,r15d
   14001be23:	jae    0x14001be6e
   14001be25:	xor    eax,eax
   14001be27:	jmp    0x14001bc04
   14001be2c:	mov    al,BYTE PTR [rdi]
   14001be2e:	mov    r15,QWORD PTR [rsp+0x48]
   14001be33:	lea    r12,[rip+0x1c856]        # 0x140038690
   14001be3a:	mov    rcx,QWORD PTR [r12+r15*8]
   14001be3e:	inc    ebx
   14001be40:	mov    rdi,r15
   14001be43:	mov    BYTE PTR [r13+rcx*1+0x4c],al
   14001be48:	mov    rax,QWORD PTR [r12+r15*8]
   14001be4c:	mov    DWORD PTR [r13+rax*1+0x50],0x1
   14001be55:	jmp    0x14001be73
   14001be57:	call   QWORD PTR [rip+0xb223]        # 0x140027080
   14001be5d:	mov    esi,eax
   14001be5f:	jmp    0x14001be6e
   14001be61:	call   QWORD PTR [rip+0xb219]        # 0x140027080
   14001be67:	mov    esi,eax
   14001be69:	mov    r13,QWORD PTR [rsp+0x58]
   14001be6e:	mov    rdi,QWORD PTR [rsp+0x48]
   14001be73:	mov    eax,DWORD PTR [rsp+0x40]
   14001be77:	test   ebx,ebx
   14001be79:	jne    0x14001c243
   14001be7f:	xor    ebx,ebx
   14001be81:	test   esi,esi
   14001be83:	je     0x14001c20f
   14001be89:	cmp    esi,0x5
   14001be8c:	jne    0x14001c1fe
   14001be92:	call   0x1400095b8
   14001be97:	mov    DWORD PTR [rax],0x9
   14001be9d:	call   0x140009548
   14001bea2:	mov    DWORD PTR [rax],esi
   14001bea4:	jmp    0x14001baf6
   14001bea9:	mov    rdi,QWORD PTR [rsp+0x48]
   14001beae:	jmp    0x14001beb7
   14001beb0:	mov    rdi,QWORD PTR [rsp+0x48]
   14001beb5:	xor    eax,eax
   14001beb7:	lea    r9,[rip+0x1c7d2]        # 0x140038690
   14001bebe:	mov    rcx,QWORD PTR [r9+rdi*8]
   14001bec2:	test   BYTE PTR [r13+rcx*1+0x8],0x80
   14001bec8:	je     0x14001c1b6
   14001bece:	mov    esi,eax
   14001bed0:	test   r12b,r12b
   14001bed3:	jne    0x14001bfb1
   14001bed9:	mov    r12,r14
   14001bedc:	test   r15d,r15d
   14001bedf:	je     0x14001c20f
   14001bee5:	mov    edx,0xd
   14001beea:	jmp    0x14001beee
   14001beec:	xor    eax,eax
   14001beee:	mov    r13d,DWORD PTR [rsp+0x40]
   14001bef3:	lea    rdi,[rbp+0x630]
   14001befa:	mov    rcx,rax
   14001befd:	mov    eax,r12d
   14001bf00:	sub    eax,r14d
   14001bf03:	cmp    eax,r15d
   14001bf06:	jae    0x14001bf2f
   14001bf08:	mov    al,BYTE PTR [r12]
   14001bf0c:	inc    r12
   14001bf0f:	cmp    al,0xa
   14001bf11:	jne    0x14001bf1e
   14001bf13:	mov    BYTE PTR [rdi],dl
   14001bf15:	inc    r13d
   14001bf18:	inc    rdi
   14001bf1b:	inc    rcx
   14001bf1e:	inc    rcx
   14001bf21:	mov    BYTE PTR [rdi],al
   14001bf23:	inc    rdi
   14001bf26:	cmp    rcx,0x13ff
   14001bf2d:	jb     0x14001befd
   14001bf2f:	lea    rax,[rbp+0x630]
   14001bf36:	mov    r8d,edi
   14001bf39:	mov    DWORD PTR [rsp+0x40],r13d
   14001bf3e:	mov    r13,QWORD PTR [rsp+0x58]
   14001bf43:	sub    r8d,eax
   14001bf46:	mov    rax,QWORD PTR [rsp+0x48]
   14001bf4b:	mov    rcx,QWORD PTR [r9+rax*8]
   14001bf4f:	xor    eax,eax
   14001bf51:	lea    r9,[rsp+0x50]
   14001bf56:	mov    rcx,QWORD PTR [r13+rcx*1+0x0]
   14001bf5b:	lea    rdx,[rbp+0x630]
   14001bf62:	mov    QWORD PTR [rsp+0x20],rax
   14001bf67:	call   QWORD PTR [rip+0xb253]        # 0x1400271c0
   14001bf6d:	test   eax,eax
   14001bf6f:	je     0x14001be57
   14001bf75:	add    ebx,DWORD PTR [rsp+0x50]
   14001bf79:	lea    rax,[rbp+0x630]
   14001bf80:	sub    rdi,rax
   14001bf83:	movsxd rax,DWORD PTR [rsp+0x50]
   14001bf88:	cmp    rax,rdi
   14001bf8b:	jl     0x14001be6e
   14001bf91:	mov    eax,r12d
   14001bf94:	mov    edx,0xd
   14001bf99:	lea    r9,[rip+0x1c6f0]        # 0x140038690
   14001bfa0:	sub    eax,r14d
   14001bfa3:	cmp    eax,r15d
   14001bfa6:	jb     0x14001beec
   14001bfac:	jmp    0x14001be6e
   14001bfb1:	cmp    r12b,0x2
   14001bfb5:	mov    r12,r14
   14001bfb8:	jne    0x14001c09e
   14001bfbe:	test   r15d,r15d
   14001bfc1:	je     0x14001c20f
   14001bfc7:	mov    edx,0xd
   14001bfcc:	jmp    0x14001bfd0
   14001bfce:	xor    eax,eax
   14001bfd0:	mov    r13d,DWORD PTR [rsp+0x40]
   14001bfd5:	lea    rdi,[rbp+0x630]
   14001bfdc:	mov    rcx,rax
   14001bfdf:	mov    eax,r12d
   14001bfe2:	sub    eax,r14d
   14001bfe5:	cmp    eax,r15d
   14001bfe8:	jae    0x14001c01c
   14001bfea:	movzx  eax,WORD PTR [r12]
   14001bfef:	add    r12,0x2
   14001bff3:	cmp    ax,0xa
   14001bff7:	jne    0x14001c008
   14001bff9:	mov    WORD PTR [rdi],dx
   14001bffc:	add    r13d,0x2
   14001c000:	add    rdi,0x2
   14001c004:	add    rcx,0x2
   14001c008:	add    rcx,0x2
   14001c00c:	mov    WORD PTR [rdi],ax
   14001c00f:	add    rdi,0x2
   14001c013:	cmp    rcx,0x13fe
   14001c01a:	jb     0x14001bfdf
   14001c01c:	lea    rax,[rbp+0x630]
   14001c023:	mov    r8d,edi
   14001c026:	mov    DWORD PTR [rsp+0x40],r13d
   14001c02b:	mov    r13,QWORD PTR [rsp+0x58]
   14001c030:	sub    r8d,eax
   14001c033:	mov    rax,QWORD PTR [rsp+0x48]
   14001c038:	mov    rcx,QWORD PTR [r9+rax*8]
   14001c03c:	xor    eax,eax
   14001c03e:	lea    r9,[rsp+0x50]
   14001c043:	mov    rcx,QWORD PTR [r13+rcx*1+0x0]
   14001c048:	lea    rdx,[rbp+0x630]
   14001c04f:	mov    QWORD PTR [rsp+0x20],rax
   14001c054:	call   QWORD PTR [rip+0xb166]        # 0x1400271c0
   14001c05a:	test   eax,eax
   14001c05c:	je     0x14001be57
   14001c062:	add    ebx,DWORD PTR [rsp+0x50]
   14001c066:	lea    rax,[rbp+0x630]
   14001c06d:	sub    rdi,rax
   14001c070:	movsxd rax,DWORD PTR [rsp+0x50]
   14001c075:	cmp    rax,rdi
   14001c078:	jl     0x14001be6e
   14001c07e:	mov    eax,r12d
   14001c081:	mov    edx,0xd
   14001c086:	lea    r9,[rip+0x1c603]        # 0x140038690
   14001c08d:	sub    eax,r14d
   14001c090:	cmp    eax,r15d
   14001c093:	jb     0x14001bfce
   14001c099:	jmp    0x14001be6e
   14001c09e:	test   r15d,r15d
   14001c0a1:	je     0x14001c20f
   14001c0a7:	mov    r8d,0xd
   14001c0ad:	jmp    0x14001c0b1
   14001c0af:	xor    eax,eax
   14001c0b1:	lea    rcx,[rbp-0x80]
   14001c0b5:	mov    rdx,rax
   14001c0b8:	mov    eax,r12d
   14001c0bb:	sub    eax,r14d
   14001c0be:	cmp    eax,r15d
   14001c0c1:	jae    0x14001c0f2
   14001c0c3:	movzx  eax,WORD PTR [r12]
   14001c0c8:	add    r12,0x2
   14001c0cc:	cmp    ax,0xa
   14001c0d0:	jne    0x14001c0de
   14001c0d2:	mov    WORD PTR [rcx],r8w
   14001c0d6:	add    rcx,0x2
   14001c0da:	add    rdx,0x2
   14001c0de:	add    rdx,0x2
   14001c0e2:	mov    WORD PTR [rcx],ax
   14001c0e5:	add    rcx,0x2
   14001c0e9:	cmp    rdx,0x6a8
   14001c0f0:	jb     0x14001c0b8
   14001c0f2:	lea    rax,[rbp-0x80]
   14001c0f6:	xor    edi,edi
   14001c0f8:	lea    r8,[rbp-0x80]
   14001c0fc:	sub    ecx,eax
   14001c0fe:	mov    QWORD PTR [rsp+0x38],rdi
   14001c103:	mov    QWORD PTR [rsp+0x30],rdi
   14001c108:	mov    eax,ecx
   14001c10a:	mov    ecx,0xfde9
   14001c10f:	mov    DWORD PTR [rsp+0x28],0xd55
   14001c117:	cdq    
   14001c118:	sub    eax,edx
   14001c11a:	xor    edx,edx
   14001c11c:	sar    eax,1
   14001c11e:	mov    r9d,eax
   14001c121:	lea    rax,[rbp+0x630]
   14001c128:	mov    QWORD PTR [rsp+0x20],rax
   14001c12d:	call   QWORD PTR [rip+0xaf7d]        # 0x1400270b0
   14001c133:	mov    r13d,eax
   14001c136:	test   eax,eax
   14001c138:	je     0x14001be61
   14001c13e:	movsxd rax,edi
   14001c141:	mov    r8d,r13d
   14001c144:	lea    rdx,[rbp+0x630]
   14001c14b:	add    rdx,rax
   14001c14e:	mov    rax,QWORD PTR [rsp+0x48]
   14001c153:	lea    rcx,[rip+0x1c536]        # 0x140038690
   14001c15a:	mov    rcx,QWORD PTR [rcx+rax*8]
   14001c15e:	xor    eax,eax
   14001c160:	lea    r9,[rsp+0x50]
   14001c165:	mov    QWORD PTR [rsp+0x20],rax
   14001c16a:	mov    rax,QWORD PTR [rsp+0x58]
   14001c16f:	sub    r8d,edi
   14001c172:	mov    rcx,QWORD PTR [rax+rcx*1]
   14001c176:	call   QWORD PTR [rip+0xb044]        # 0x1400271c0
   14001c17c:	test   eax,eax
   14001c17e:	je     0x14001c18b
   14001c180:	add    edi,DWORD PTR [rsp+0x50]
   14001c184:	cmp    r13d,edi
   14001c187:	jg     0x14001c13e
   14001c189:	jmp    0x14001c193
   14001c18b:	call   QWORD PTR [rip+0xaeef]        # 0x140027080
   14001c191:	mov    esi,eax
   14001c193:	cmp    r13d,edi
   14001c196:	jg     0x14001be69
   14001c19c:	mov    ebx,r12d
   14001c19f:	mov    r8d,0xd
   14001c1a5:	sub    ebx,r14d
   14001c1a8:	cmp    ebx,r15d
   14001c1ab:	jb     0x14001c0af
   14001c1b1:	jmp    0x14001be69
   14001c1b6:	mov    rcx,QWORD PTR [r13+rcx*1+0x0]
   14001c1bb:	lea    r9,[rsp+0x50]
   14001c1c0:	mov    r8d,r15d
   14001c1c3:	mov    rdx,r14
   14001c1c6:	mov    QWORD PTR [rsp+0x20],rax
   14001c1cb:	call   QWORD PTR [rip+0xafef]        # 0x1400271c0
   14001c1d1:	test   eax,eax
   14001c1d3:	je     0x14001c1e0
   14001c1d5:	mov    ebx,DWORD PTR [rsp+0x50]
   14001c1d9:	mov    eax,esi
   14001c1db:	jmp    0x14001be77
   14001c1e0:	call   QWORD PTR [rip+0xae9a]        # 0x140027080
   14001c1e6:	mov    esi,eax
   14001c1e8:	mov    eax,ebx
   14001c1ea:	jmp    0x14001be77
   14001c1ef:	mov    r13,QWORD PTR [rsp+0x58]
   14001c1f4:	mov    rdi,QWORD PTR [rsp+0x48]
   14001c1f9:	jmp    0x14001be77
   14001c1fe:	mov    ecx,esi
   14001c200:	call   0x140009568
   14001c205:	jmp    0x14001baf6
   14001c20a:	mov    rdi,QWORD PTR [rsp+0x48]
   14001c20f:	lea    rax,[rip+0x1c47a]        # 0x140038690
   14001c216:	mov    rax,QWORD PTR [rax+rdi*8]
   14001c21a:	test   BYTE PTR [r13+rax*1+0x8],0x40
   14001c220:	je     0x14001c22c
   14001c222:	cmp    BYTE PTR [r14],0x1a
   14001c226:	je     0x14001bad2
   14001c22c:	call   0x1400095b8
   14001c231:	mov    DWORD PTR [rax],0x1c
   14001c237:	call   0x140009548
   14001c23c:	mov    DWORD PTR [rax],ebx
   14001c23e:	jmp    0x14001baf6
   14001c243:	sub    ebx,eax
   14001c245:	mov    eax,ebx
   14001c247:	mov    rcx,QWORD PTR [rbp+0x1a30]
   14001c24e:	xor    rcx,rsp
   14001c251:	call   0x14000d0a0
   14001c256:	mov    rbx,QWORD PTR [rsp+0x1b98]
   14001c25e:	add    rsp,0x1b40
   14001c265:	pop    r15
   14001c267:	pop    r14
   14001c269:	pop    r13
   14001c26b:	pop    r12
   14001c26d:	pop    rdi
   14001c26e:	pop    rsi
   14001c26f:	pop    rbp
   14001c270:	ret    
   14001c271:	int3   
   14001c272:	int3   
   14001c273:	int3   
   14001c274:	movsd  QWORD PTR [rsp+0x8],xmm0
   14001c27a:	mov    rcx,QWORD PTR [rsp+0x8]
   14001c27f:	mov    eax,0x7ff
   14001c284:	shr    rcx,0x30
   14001c288:	movsd  QWORD PTR [rsp+0x20],xmm0
   14001c28e:	movsd  QWORD PTR [rsp+0x18],xmm0
   14001c294:	shr    cx,0x4
   14001c298:	and    cx,ax
   14001c29b:	mov    rax,QWORD PTR [rsp+0x20]
   14001c2a0:	add    cx,dx
   14001c2a3:	shr    rax,0x30
   14001c2a7:	mov    edx,0x800f
   14001c2ac:	and    ax,dx
   14001c2af:	shl    cx,0x4
   14001c2b3:	or     cx,ax
   14001c2b6:	mov    WORD PTR [rsp+0x1e],cx
   14001c2bb:	movsd  xmm0,QWORD PTR [rsp+0x18]
   14001c2c1:	ret    
   14001c2c2:	int3   
   14001c2c3:	int3   
   14001c2c4:	movaps xmm1,xmm0
   14001c2c7:	movsd  QWORD PTR [rsp+0x8],xmm0
   14001c2cd:	xorps  xmm0,xmm0
   14001c2d0:	mov    r10,rdx
   14001c2d3:	ucomisd xmm1,xmm0
   14001c2d7:	jp     0x14001c2e2
   14001c2d9:	jne    0x14001c2e2
   14001c2db:	xor    ecx,ecx
   14001c2dd:	jmp    0x14001c3f4
   14001c2e2:	mov    rax,QWORD PTR [rsp+0x8]
   14001c2e7:	mov    ecx,0x7ff0
   14001c2ec:	mov    r8,rax
   14001c2ef:	shr    r8,0x30
   14001c2f3:	test   cx,r8w
   14001c2f7:	jne    0x14001c3aa
   14001c2fd:	mov    edx,DWORD PTR [rsp+0x8]
   14001c301:	shr    rax,0x20
   14001c305:	test   eax,0xfffff
   14001c30a:	jne    0x14001c314
   14001c30c:	test   edx,edx
   14001c30e:	je     0x14001c3aa
   14001c314:	xor    r9d,r9d
   14001c317:	comisd xmm0,xmm1
   14001c31b:	mov    ecx,0xfffffc03
   14001c320:	seta   r9b
   14001c324:	test   r8b,0x10
   14001c328:	jne    0x14001c34e
   14001c32a:	mov    eax,DWORD PTR [rsp+0xc]
   14001c32e:	add    eax,eax
   14001c330:	mov    DWORD PTR [rsp+0xc],eax
   14001c334:	test   edx,edx
   14001c336:	jns    0x14001c33f
   14001c338:	or     eax,0x1
   14001c33b:	mov    DWORD PTR [rsp+0xc],eax
   14001c33f:	add    edx,edx
   14001c341:	dec    ecx
   14001c343:	test   BYTE PTR [rsp+0xe],0x10
   14001c348:	je     0x14001c32e
   14001c34a:	mov    DWORD PTR [rsp+0x8],edx
   14001c34e:	movzx  eax,WORD PTR [rsp+0xe]
   14001c353:	mov    edx,0xffef
   14001c358:	and    ax,dx
   14001c35b:	mov    WORD PTR [rsp+0xe],ax
   14001c360:	test   r9d,r9d
   14001c363:	je     0x14001c372
   14001c365:	mov    edx,0x8000
   14001c36a:	or     ax,dx
   14001c36d:	mov    WORD PTR [rsp+0xe],ax
   14001c372:	movsd  xmm0,QWORD PTR [rsp+0x8]
   14001c378:	mov    edx,0xbfef
   14001c37d:	movsd  QWORD PTR [rsp+0x10],xmm0
   14001c383:	movsd  QWORD PTR [rsp+0x8],xmm0
   14001c389:	mov    rax,QWORD PTR [rsp+0x10]
   14001c38e:	shr    rax,0x30
   14001c392:	and    ax,dx
   14001c395:	mov    edx,0x3fe0
   14001c39a:	or     ax,dx
   14001c39d:	mov    WORD PTR [rsp+0xe],ax
   14001c3a2:	movsd  xmm0,QWORD PTR [rsp+0x8]
   14001c3a8:	jmp    0x14001c3f4
   14001c3aa:	mov    edx,0xbfef
   14001c3af:	movsd  QWORD PTR [rsp+0x10],xmm1
   14001c3b5:	mov    ecx,0x7ff
   14001c3ba:	movsd  QWORD PTR [rsp+0x18],xmm1
   14001c3c0:	mov    rax,QWORD PTR [rsp+0x18]
   14001c3c5:	shr    rax,0x30
   14001c3c9:	and    ax,dx
   14001c3cc:	mov    edx,0x3fe0
   14001c3d1:	or     ax,dx
   14001c3d4:	mov    WORD PTR [rsp+0x16],ax
   14001c3d9:	movzx  eax,WORD PTR [rsp+0xe]
   14001c3de:	shr    ax,0x4
   14001c3e2:	movsd  xmm0,QWORD PTR [rsp+0x10]
   14001c3e8:	and    ax,cx
   14001c3eb:	movsx  ecx,ax
   14001c3ee:	sub    ecx,0x3fe
   14001c3f4:	mov    DWORD PTR [r10],ecx
   14001c3f7:	ret    
   14001c3f8:	mov    ecx,0x7ff
   14001c3fd:	movsd  QWORD PTR [rsp+0x8],xmm0
   14001c403:	mov    rax,QWORD PTR [rsp+0x8]
   14001c408:	shr    rax,0x30
   14001c40c:	shr    ax,0x4
   14001c410:	and    ax,cx
   14001c413:	mov    ecx,0x3fe
   14001c418:	sub    ax,cx
   14001c41b:	cwde   
   14001c41c:	ret    
   14001c41d:	int3   
   14001c41e:	int3   
   14001c41f:	int3   
   14001c420:	movsd  QWORD PTR [rsp+0x8],xmm0
   14001c426:	mov    rax,QWORD PTR [rsp+0x8]
   14001c42b:	movsd  QWORD PTR [rsp+0x18],xmm0
   14001c431:	shr    rax,0x30
   14001c435:	mov    ecx,0x800f
   14001c43a:	shl    dx,0x4
   14001c43e:	and    ax,cx
   14001c441:	or     ax,dx
   14001c444:	mov    WORD PTR [rsp+0x1e],ax
   14001c449:	movsd  xmm0,QWORD PTR [rsp+0x18]
   14001c44f:	ret    
   14001c450:	movsd  QWORD PTR [rsp+0x8],xmm0
   14001c456:	mov    rax,QWORD PTR [rsp+0x8]
   14001c45b:	mov    ecx,0x800f
   14001c460:	shr    rax,0x30
   14001c464:	movsd  QWORD PTR [rsp+0x18],xmm0
   14001c46a:	and    ax,cx
   14001c46d:	mov    ecx,0x3fe
   14001c472:	add    dx,cx
   14001c475:	shl    dx,0x4
   14001c479:	or     ax,dx
   14001c47c:	mov    WORD PTR [rsp+0x1e],ax
   14001c481:	movsd  xmm0,QWORD PTR [rsp+0x18]
   14001c487:	ret    
   14001c488:	movsd  QWORD PTR [rsp+0x8],xmm0
   14001c48e:	mov    rax,QWORD PTR [rsp+0x8]
   14001c493:	mov    rcx,rax
   14001c496:	shr    rcx,0x20
   14001c49a:	cmp    ecx,0x7ff00000
   14001c4a0:	jne    0x14001c4ac
   14001c4a2:	test   eax,eax
   14001c4a4:	jne    0x14001c4ac
   14001c4a6:	mov    eax,0x1
   14001c4ab:	ret    
   14001c4ac:	cmp    ecx,0xfff00000
   14001c4b2:	jne    0x14001c4be
   14001c4b4:	test   eax,eax
   14001c4b6:	jne    0x14001c4be
   14001c4b8:	mov    eax,0x2
   14001c4bd:	ret    
   14001c4be:	mov    r8d,0x7ff8
   14001c4c4:	mov    rdx,rax
   14001c4c7:	shr    rdx,0x30
   14001c4cb:	and    dx,r8w
   14001c4cf:	cmp    dx,r8w
   14001c4d3:	jne    0x14001c4db
   14001c4d5:	mov    eax,0x3
   14001c4da:	ret    
   14001c4db:	mov    r8d,0x7ff0
   14001c4e1:	cmp    dx,r8w
   14001c4e5:	jne    0x14001c4f9
   14001c4e7:	test   ecx,0x7ffff
   14001c4ed:	jne    0x14001c4f3
   14001c4ef:	test   eax,eax
   14001c4f1:	je     0x14001c4f9
   14001c4f3:	mov    eax,0x4
   14001c4f8:	ret    
   14001c4f9:	xor    eax,eax
   14001c4fb:	ret    
   14001c4fc:	xor    edx,edx
   14001c4fe:	lea    r8d,[rdx+0xa]
   14001c502:	jmp    0x140021a30
   14001c507:	int3   
   14001c508:	mov    r9,rdx
   14001c50b:	xor    edx,edx
   14001c50d:	lea    r8d,[rdx+0xa]
   14001c511:	jmp    0x140021a60
   14001c516:	int3   
   14001c517:	int3   
   14001c518:	mov    r9,rdx
   14001c51b:	xor    edx,edx
   14001c51d:	lea    r8d,[rdx+0xa]
   14001c521:	jmp    0x140021e08
   14001c526:	int3   
   14001c527:	int3   
   14001c528:	mov    r9,rdx
   14001c52b:	xor    edx,edx
   14001c52d:	lea    r8d,[rdx+0xa]
   14001c531:	jmp    0x140021e08
   14001c536:	int3   
   14001c537:	int3   
   14001c538:	mov    r9,rdx
   14001c53b:	xor    edx,edx
   14001c53d:	lea    r8d,[rdx+0xa]
   14001c541:	jmp    0x140021a60
   14001c546:	int3   
   14001c547:	int3   
   14001c548:	xor    edx,edx
   14001c54a:	lea    r8d,[rdx+0xa]
   14001c54e:	jmp    0x140021e54
   14001c553:	int3   
   14001c554:	xor    edx,edx
   14001c556:	lea    r8d,[rdx+0xa]
   14001c55a:	jmp    0x140021e54
   14001c55f:	int3   
   14001c560:	xor    edx,edx
   14001c562:	lea    r8d,[rdx+0xa]
   14001c566:	jmp    0x140021a30
   14001c56b:	int3   
   14001c56c:	cmp    DWORD PTR [rip+0x1caad],0x0        # 0x140039020
   14001c573:	jne    0x14001c586
   14001c575:	mov    rax,QWORD PTR [rip+0x1a91c]        # 0x140036e98
   14001c57c:	movsxd rcx,ecx
   14001c57f:	movzx  eax,WORD PTR [rax+rcx*2]
   14001c583:	and    eax,edx
   14001c585:	ret    
   14001c586:	xor    r8d,r8d
   14001c589:	jmp    0x14001c590
   14001c58e:	int3   
   14001c58f:	int3   
   14001c590:	mov    QWORD PTR [rsp+0x10],rsi
   14001c595:	push   rbp
   14001c596:	push   rdi
   14001c597:	push   r14
   14001c599:	mov    rbp,rsp
   14001c59c:	sub    rsp,0x60
   14001c5a0:	movsxd rdi,ecx
   14001c5a3:	mov    r14d,edx
   14001c5a6:	lea    rcx,[rbp-0x20]
   14001c5aa:	mov    rdx,r8
   14001c5ad:	call   0x14000a000
   14001c5b2:	lea    eax,[rdi+0x1]
   14001c5b5:	cmp    eax,0x100
   14001c5ba:	ja     0x14001c5cd
   14001c5bc:	mov    rax,QWORD PTR [rbp-0x20]
   14001c5c0:	mov    rcx,QWORD PTR [rax+0x108]
   14001c5c7:	movzx  eax,WORD PTR [rcx+rdi*2]
   14001c5cb:	jmp    0x14001c646
   14001c5cd:	mov    esi,edi
   14001c5cf:	lea    rdx,[rbp-0x20]
   14001c5d3:	sar    esi,0x8
   14001c5d6:	movzx  ecx,sil
   14001c5da:	call   0x14001db48
   14001c5df:	mov    edx,0x1
   14001c5e4:	test   eax,eax
   14001c5e6:	je     0x14001c5fa
   14001c5e8:	mov    BYTE PTR [rbp+0x38],sil
   14001c5ec:	mov    BYTE PTR [rbp+0x39],dil
   14001c5f0:	mov    BYTE PTR [rbp+0x3a],0x0
   14001c5f4:	lea    r9d,[rdx+0x1]
   14001c5f8:	jmp    0x14001c605
   14001c5fa:	mov    BYTE PTR [rbp+0x38],dil
   14001c5fe:	mov    BYTE PTR [rbp+0x39],0x0
   14001c602:	mov    r9d,edx
   14001c605:	mov    rax,QWORD PTR [rbp-0x20]
   14001c609:	mov    DWORD PTR [rsp+0x30],edx
   14001c60d:	lea    r8,[rbp+0x38]
   14001c611:	mov    ecx,DWORD PTR [rax+0x4]
   14001c614:	lea    rax,[rbp+0x20]
   14001c618:	mov    DWORD PTR [rsp+0x28],ecx
   14001c61c:	lea    rcx,[rbp-0x20]
   14001c620:	mov    QWORD PTR [rsp+0x20],rax
   14001c625:	call   0x1400105e8
   14001c62a:	test   eax,eax
   14001c62c:	jne    0x14001c642
   14001c62e:	cmp    BYTE PTR [rbp-0x8],al
   14001c631:	je     0x14001c63e
   14001c633:	mov    rax,QWORD PTR [rbp-0x10]
   14001c637:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14001c63e:	xor    eax,eax
   14001c640:	jmp    0x14001c65a
   14001c642:	movzx  eax,WORD PTR [rbp+0x20]
   14001c646:	and    eax,r14d
   14001c649:	cmp    BYTE PTR [rbp-0x8],0x0
   14001c64d:	je     0x14001c65a
   14001c64f:	mov    rcx,QWORD PTR [rbp-0x10]
   14001c653:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14001c65a:	mov    rsi,QWORD PTR [rsp+0x88]
   14001c662:	add    rsp,0x60
   14001c666:	pop    r14
   14001c668:	pop    rdi
   14001c669:	pop    rbp
   14001c66a:	ret    
   14001c66b:	int3   
   14001c66c:	xor    eax,eax
   14001c66e:	ret    
   14001c66f:	int3   
   14001c670:	rex push rdi
   14001c672:	sub    rsp,0x20
   14001c676:	lea    rdi,[rip+0x1a713]        # 0x140036d90
   14001c67d:	cmp    QWORD PTR [rip+0x1a6fc],rdi        # 0x140036d80
   14001c684:	je     0x14001c6b1
   14001c686:	mov    ecx,0xc
   14001c68b:	call   0x140008760
   14001c690:	nop
   14001c691:	mov    rdx,rdi
   14001c694:	lea    rcx,[rip+0x1a6e5]        # 0x140036d80
   14001c69b:	call   0x14001006c
   14001c6a0:	mov    QWORD PTR [rip+0x1a6d9],rax        # 0x140036d80
   14001c6a7:	mov    ecx,0xc
   14001c6ac:	call   0x14000897c
   14001c6b1:	add    rsp,0x20
   14001c6b5:	pop    rdi
   14001c6b6:	ret    
   14001c6b7:	int3   
   14001c6b8:	mov    eax,DWORD PTR [rip+0x1c96a]        # 0x140039028
   14001c6be:	ret    
   14001c6bf:	int3   
   14001c6c0:	lea    rax,[rip+0x1c95d]        # 0x140039024
   14001c6c7:	ret    
   14001c6c8:	mov    QWORD PTR [rsp+0x8],rbx
   14001c6cd:	mov    QWORD PTR [rsp+0x10],rsi
   14001c6d2:	push   rdi
   14001c6d3:	sub    rsp,0x30
   14001c6d7:	mov    rdi,rcx
   14001c6da:	test   rcx,rcx
   14001c6dd:	jne    0x14001c6f1
   14001c6df:	xor    eax,eax
   14001c6e1:	mov    rbx,QWORD PTR [rsp+0x40]
   14001c6e6:	mov    rsi,QWORD PTR [rsp+0x48]
   14001c6eb:	add    rsp,0x30
   14001c6ef:	pop    rdi
   14001c6f0:	ret    
   14001c6f1:	mov    edx,0x55
   14001c6f6:	call   0x140019db0
   14001c6fb:	mov    rsi,rax
   14001c6fe:	cmp    rax,0x55
   14001c702:	jae    0x14001c6df
   14001c704:	lea    rcx,[rax*2+0x2]
   14001c70c:	call   0x140007f54
   14001c711:	mov    rbx,rax
   14001c714:	test   rax,rax
   14001c717:	je     0x14001c6df
   14001c719:	lea    rdx,[rsi+0x1]
   14001c71d:	mov    r8,rdi
   14001c720:	mov    rcx,rax
   14001c723:	mov    r9,rdx
   14001c726:	call   0x14000f9bc
   14001c72b:	test   eax,eax
   14001c72d:	jne    0x14001c734
   14001c72f:	mov    rax,rbx
   14001c732:	jmp    0x14001c6e1
   14001c734:	and    QWORD PTR [rsp+0x20],0x0
   14001c73a:	xor    r9d,r9d
   14001c73d:	xor    r8d,r8d
   14001c740:	xor    edx,edx
   14001c742:	xor    ecx,ecx
   14001c744:	call   0x140008678
   14001c749:	int3   
   14001c74a:	int3   
   14001c74b:	int3   
   14001c74c:	jmp    0x14001cae8
   14001c751:	int3   
   14001c752:	int3   
   14001c753:	int3   
   14001c754:	jmp    0x14001cf34
   14001c759:	int3   
   14001c75a:	int3   
   14001c75b:	int3   
   14001c75c:	jmp    0x14001cfd0
   14001c761:	int3   
   14001c762:	int3   
   14001c763:	int3   
   14001c764:	mov    QWORD PTR [rsp+0x8],rbx
   14001c769:	mov    QWORD PTR [rsp+0x10],rbp
   14001c76e:	mov    QWORD PTR [rsp+0x18],rsi
   14001c773:	push   rdi
   14001c774:	sub    rsp,0x30
   14001c778:	mov    rbx,r8
   14001c77b:	mov    rdi,rdx
   14001c77e:	mov    rsi,rcx
   14001c781:	call   0x14000f934
   14001c786:	xor    ebp,ebp
   14001c788:	test   eax,eax
   14001c78a:	jne    0x14001c7f1
   14001c78c:	lea    rax,[rbx+0x80]
   14001c793:	cmp    WORD PTR [rax],bp
   14001c796:	je     0x14001c7b3
   14001c798:	lea    r9,[rip+0x132a1]        # 0x14002fa40
   14001c79f:	lea    r8d,[rbp+0x2]
   14001c7a3:	mov    rdx,rdi
   14001c7a6:	mov    rcx,rsi
   14001c7a9:	mov    QWORD PTR [rsp+0x20],rax
   14001c7ae:	call   0x14001d16c
   14001c7b3:	lea    rax,[rbx+0x100]
   14001c7ba:	cmp    WORD PTR [rax],bp
   14001c7bd:	je     0x14001c7dc
   14001c7bf:	lea    r9,[rip+0x1327e]        # 0x14002fa44
   14001c7c6:	mov    r8d,0x2
   14001c7cc:	mov    rdx,rdi
   14001c7cf:	mov    rcx,rsi
   14001c7d2:	mov    QWORD PTR [rsp+0x20],rax
   14001c7d7:	call   0x14001d16c
   14001c7dc:	mov    rbx,QWORD PTR [rsp+0x40]
   14001c7e1:	mov    rbp,QWORD PTR [rsp+0x48]
   14001c7e6:	mov    rsi,QWORD PTR [rsp+0x50]
   14001c7eb:	add    rsp,0x30
   14001c7ef:	pop    rdi
   14001c7f0:	ret    
   14001c7f1:	xor    r9d,r9d
   14001c7f4:	xor    r8d,r8d
   14001c7f7:	xor    edx,edx
   14001c7f9:	xor    ecx,ecx
   14001c7fb:	mov    QWORD PTR [rsp+0x20],rbp
   14001c800:	call   0x140008678
   14001c805:	int3   
   14001c806:	int3   
   14001c807:	int3   
   14001c808:	mov    QWORD PTR [rsp+0x8],rbx
   14001c80d:	mov    QWORD PTR [rsp+0x10],rbp
   14001c812:	mov    QWORD PTR [rsp+0x18],rsi
   14001c817:	push   rdi
   14001c818:	push   r14
   14001c81a:	push   r15
   14001c81c:	sub    rsp,0x30
   14001c820:	mov    rbx,rdx
   14001c823:	mov    r8d,0x1ca
   14001c829:	xor    edx,edx
   14001c82b:	mov    rsi,rcx
   14001c82e:	call   0x140007150
   14001c833:	xor    r15d,r15d
   14001c836:	cmp    WORD PTR [rbx],r15w
   14001c83a:	jne    0x14001c843
   14001c83c:	xor    eax,eax
   14001c83e:	jmp    0x14001c950
   14001c843:	cmp    WORD PTR [rbx],0x2e
   14001c847:	jne    0x14001c87a
   14001c849:	lea    r8,[rbx+0x2]
   14001c84d:	cmp    WORD PTR [r8],r15w
   14001c851:	je     0x14001c87a
   14001c853:	mov    edx,0x10
   14001c858:	lea    rcx,[rsi+0x100]
   14001c85f:	lea    r9d,[rdx-0x1]
   14001c863:	call   0x14000f9bc
   14001c868:	test   eax,eax
   14001c86a:	jne    0x14001c969
   14001c870:	mov    WORD PTR [rsi+0x11e],r15w
   14001c878:	jmp    0x14001c83c
   14001c87a:	mov    ebp,r15d
   14001c87d:	lea    rdx,[rip+0x131b4]        # 0x14002fa38
   14001c884:	mov    rcx,rbx
   14001c887:	call   0x1400224f4
   14001c88c:	test   rax,rax
   14001c88f:	je     0x14001c94d
   14001c895:	lea    r14,[rbx+rax*2]
   14001c899:	movzx  edi,WORD PTR [r14]
   14001c89d:	test   ebp,ebp
   14001c89f:	jne    0x14001c8cf
   14001c8a1:	cmp    rax,0x40
   14001c8a5:	jae    0x14001c94d
   14001c8ab:	cmp    di,0x2e
   14001c8af:	je     0x14001c94d
   14001c8b5:	lea    edx,[rbp+0x40]
   14001c8b8:	mov    r9,rax
   14001c8bb:	mov    r8,rbx
   14001c8be:	mov    rcx,rsi
   14001c8c1:	call   0x14000f9bc
   14001c8c6:	test   eax,eax
   14001c8c8:	je     0x14001c92f
   14001c8ca:	jmp    0x14001c97e
   14001c8cf:	cmp    ebp,0x1
   14001c8d2:	jne    0x14001c8fe
   14001c8d4:	cmp    rax,0x40
   14001c8d8:	jae    0x14001c94d
   14001c8da:	cmp    di,0x5f
   14001c8de:	je     0x14001c94d
   14001c8e0:	lea    rcx,[rsi+0x80]
   14001c8e7:	lea    edx,[rbp+0x3f]
   14001c8ea:	mov    r9,rax
   14001c8ed:	mov    r8,rbx
   14001c8f0:	call   0x14000f9bc
   14001c8f5:	test   eax,eax
   14001c8f7:	je     0x14001c92f
   14001c8f9:	jmp    0x14001c993
   14001c8fe:	cmp    ebp,0x2
   14001c901:	jne    0x14001c94d
   14001c903:	cmp    rax,0x10
   14001c907:	jae    0x14001c94d
   14001c909:	test   di,di
   14001c90c:	je     0x14001c914
   14001c90e:	cmp    di,0x2c
   14001c912:	jne    0x14001c94d
   14001c914:	lea    rcx,[rsi+0x100]
   14001c91b:	mov    r9,rax
   14001c91e:	mov    r8,rbx
   14001c921:	mov    edx,0x10
   14001c926:	call   0x14000f9bc
   14001c92b:	test   eax,eax
   14001c92d:	jne    0x14001c9a8
   14001c92f:	cmp    di,0x2c
   14001c933:	je     0x14001c83c
   14001c939:	test   di,di
   14001c93c:	je     0x14001c83c
   14001c942:	lea    rbx,[r14+0x2]
   14001c946:	inc    ebp
   14001c948:	jmp    0x14001c87d
   14001c94d:	or     eax,0xffffffff
   14001c950:	mov    rbx,QWORD PTR [rsp+0x50]
   14001c955:	mov    rbp,QWORD PTR [rsp+0x58]
   14001c95a:	mov    rsi,QWORD PTR [rsp+0x60]
   14001c95f:	add    rsp,0x30
   14001c963:	pop    r15
   14001c965:	pop    r14
   14001c967:	pop    rdi
   14001c968:	ret    
   14001c969:	xor    r9d,r9d
   14001c96c:	xor    r8d,r8d
   14001c96f:	xor    edx,edx
   14001c971:	xor    ecx,ecx
   14001c973:	mov    QWORD PTR [rsp+0x20],r15
   14001c978:	call   0x140008678
   14001c97d:	int3   
   14001c97e:	xor    r9d,r9d
   14001c981:	xor    r8d,r8d
   14001c984:	xor    edx,edx
   14001c986:	xor    ecx,ecx
   14001c988:	mov    QWORD PTR [rsp+0x20],r15
   14001c98d:	call   0x140008678
   14001c992:	int3   
   14001c993:	xor    r9d,r9d
   14001c996:	xor    r8d,r8d
   14001c999:	xor    edx,edx
   14001c99b:	xor    ecx,ecx
   14001c99d:	mov    QWORD PTR [rsp+0x20],r15
   14001c9a2:	call   0x140008678
   14001c9a7:	int3   
   14001c9a8:	xor    r9d,r9d
   14001c9ab:	xor    r8d,r8d
   14001c9ae:	xor    edx,edx
   14001c9b0:	xor    ecx,ecx
   14001c9b2:	mov    QWORD PTR [rsp+0x20],r15
   14001c9b7:	call   0x140008678
   14001c9bc:	int3   
   14001c9bd:	int3   
   14001c9be:	int3   
   14001c9bf:	int3   
   14001c9c0:	rex push rbx
   14001c9c2:	sub    rsp,0x20
   14001c9c6:	mov    ebx,ecx
   14001c9c8:	call   0x14000b18c
   14001c9cd:	mov    r8d,DWORD PTR [rax+0xc8]
   14001c9d4:	mov    edx,r8d
   14001c9d7:	and    dl,0x2
   14001c9da:	neg    dl
   14001c9dc:	sbb    ecx,ecx
   14001c9de:	cmp    ebx,0xffffffff
   14001c9e1:	je     0x14001ca19
   14001c9e3:	test   ebx,ebx
   14001c9e5:	je     0x14001ca20
   14001c9e7:	cmp    ebx,0x1
   14001c9ea:	je     0x14001ca0c
   14001c9ec:	cmp    ebx,0x2
   14001c9ef:	je     0x14001ca06
   14001c9f1:	call   0x1400095b8
   14001c9f6:	mov    DWORD PTR [rax],0x16
   14001c9fc:	call   0x140008628
   14001ca01:	or     eax,0xffffffff
   14001ca04:	jmp    0x14001ca23
   14001ca06:	and    r8d,0xfffffffd
   14001ca0a:	jmp    0x14001ca10
   14001ca0c:	or     r8d,0x2
   14001ca10:	mov    DWORD PTR [rax+0xc8],r8d
   14001ca17:	jmp    0x14001ca20
   14001ca19:	or     DWORD PTR [rip+0x1a4d8],0xffffffff        # 0x140036ef8
   14001ca20:	lea    eax,[rcx+0x2]
   14001ca23:	add    rsp,0x20
   14001ca27:	pop    rbx
   14001ca28:	ret    
   14001ca29:	int3   
   14001ca2a:	int3   
   14001ca2b:	int3   
   14001ca2c:	sub    rsp,0x28
   14001ca30:	test   rdx,rdx
   14001ca33:	je     0x14001cae3
   14001ca39:	test   rcx,rcx
   14001ca3c:	je     0x14001cae3
   14001ca42:	cmp    rcx,rdx
   14001ca45:	je     0x14001cae3
   14001ca4b:	mov    eax,0x2
   14001ca50:	mov    r8,rcx
   14001ca53:	lea    r9d,[rax+0x7e]
   14001ca57:	movups xmm0,XMMWORD PTR [rdx]
   14001ca5a:	movups XMMWORD PTR [r8],xmm0
   14001ca5e:	movups xmm1,XMMWORD PTR [rdx+0x10]
   14001ca62:	movups XMMWORD PTR [r8+0x10],xmm1
   14001ca67:	movups xmm0,XMMWORD PTR [rdx+0x20]
   14001ca6b:	movups XMMWORD PTR [r8+0x20],xmm0
   14001ca70:	movups xmm1,XMMWORD PTR [rdx+0x30]
   14001ca74:	movups XMMWORD PTR [r8+0x30],xmm1
   14001ca79:	movups xmm0,XMMWORD PTR [rdx+0x40]
   14001ca7d:	movups XMMWORD PTR [r8+0x40],xmm0
   14001ca82:	movups xmm1,XMMWORD PTR [rdx+0x50]
   14001ca86:	movups XMMWORD PTR [r8+0x50],xmm1
   14001ca8b:	movups xmm0,XMMWORD PTR [rdx+0x60]
   14001ca8f:	movups XMMWORD PTR [r8+0x60],xmm0
   14001ca94:	movups xmm1,XMMWORD PTR [rdx+0x70]
   14001ca98:	add    r8,r9
   14001ca9b:	add    rdx,r9
   14001ca9e:	movups XMMWORD PTR [r8-0x10],xmm1
   14001caa3:	dec    rax
   14001caa6:	jne    0x14001ca57
   14001caa8:	movups xmm0,XMMWORD PTR [rdx]
   14001caab:	movups XMMWORD PTR [r8],xmm0
   14001caaf:	movups xmm1,XMMWORD PTR [rdx+0x10]
   14001cab3:	movups XMMWORD PTR [r8+0x10],xmm1
   14001cab8:	movups xmm0,XMMWORD PTR [rdx+0x20]
   14001cabc:	movups XMMWORD PTR [r8+0x20],xmm0
   14001cac1:	movups xmm1,XMMWORD PTR [rdx+0x30]
   14001cac5:	movups XMMWORD PTR [r8+0x30],xmm1
   14001caca:	movups xmm0,XMMWORD PTR [rdx+0x40]
   14001cace:	movups XMMWORD PTR [r8+0x40],xmm0
   14001cad3:	mov    rax,QWORD PTR [rdx+0x50]
   14001cad7:	mov    QWORD PTR [r8+0x50],rax
   14001cadb:	and    DWORD PTR [rcx],0x0
   14001cade:	call   0x14000fd2c
   14001cae3:	add    rsp,0x28
   14001cae7:	ret    
   14001cae8:	rex push rbx
   14001caea:	sub    rsp,0x150
   14001caf1:	mov    rax,QWORD PTR [rip+0x19f48]        # 0x140036a40
   14001caf8:	xor    rax,rsp
   14001cafb:	mov    QWORD PTR [rsp+0x140],rax
   14001cb03:	mov    ebx,ecx
   14001cb05:	cmp    ecx,0x5
   14001cb08:	ja     0x14001cb44
   14001cb0a:	test   rdx,rdx
   14001cb0d:	je     0x14001cb44
   14001cb0f:	lea    rax,[rsp+0x30]
   14001cb14:	mov    r8,rdx
   14001cb17:	or     r9d,0xffffffff
   14001cb1b:	xor    edx,edx
   14001cb1d:	xor    ecx,ecx
   14001cb1f:	mov    DWORD PTR [rsp+0x28],0x83
   14001cb27:	mov    QWORD PTR [rsp+0x20],rax
   14001cb2c:	call   QWORD PTR [rip+0xa576]        # 0x1400270a8
   14001cb32:	test   eax,eax
   14001cb34:	je     0x14001cb44
   14001cb36:	lea    rdx,[rsp+0x30]
   14001cb3b:	mov    ecx,ebx
   14001cb3d:	call   0x14001d06c
   14001cb42:	jmp    0x14001cb46
   14001cb44:	xor    eax,eax
   14001cb46:	mov    rcx,QWORD PTR [rsp+0x140]
   14001cb4e:	xor    rcx,rsp
   14001cb51:	call   0x14000d0a0
   14001cb56:	add    rsp,0x150
   14001cb5d:	pop    rbx
   14001cb5e:	ret    
   14001cb5f:	int3   
   14001cb60:	rex push rbp
   14001cb62:	push   rbx
   14001cb63:	push   rsi
   14001cb64:	push   rdi
   14001cb65:	push   r12
   14001cb67:	push   r13
   14001cb69:	push   r14
   14001cb6b:	push   r15
   14001cb6d:	lea    rbp,[rsp-0x148]
   14001cb75:	sub    rsp,0x248
   14001cb7c:	mov    rax,QWORD PTR [rip+0x19ebd]        # 0x140036a40
   14001cb83:	xor    rax,rsp
   14001cb86:	mov    QWORD PTR [rbp+0x130],rax
   14001cb8d:	mov    rdi,QWORD PTR [rbp+0x1b8]
   14001cb94:	mov    rsi,r9
   14001cb97:	mov    r13,r8
   14001cb9a:	mov    QWORD PTR [rsp+0x50],r8
   14001cb9f:	mov    r12,rdx
   14001cba2:	mov    rbx,rcx
   14001cba5:	call   0x14000b18c
   14001cbaa:	lea    rcx,[rax+0x160]
   14001cbb1:	lea    r15,[rax+0x164]
   14001cbb8:	lea    r14,[rax+0x26a]
   14001cbbf:	mov    QWORD PTR [rsp+0x38],rcx
   14001cbc4:	xor    ecx,ecx
   14001cbc6:	mov    QWORD PTR [rsp+0x40],r15
   14001cbcb:	mov    DWORD PTR [rsp+0x30],ecx
   14001cbcf:	test   rbx,rbx
   14001cbd2:	jne    0x14001cbf9
   14001cbd4:	xor    eax,eax
   14001cbd6:	mov    rcx,QWORD PTR [rbp+0x130]
   14001cbdd:	xor    rcx,rsp
   14001cbe0:	call   0x14000d0a0
   14001cbe5:	add    rsp,0x248
   14001cbec:	pop    r15
   14001cbee:	pop    r14
   14001cbf0:	pop    r13
   14001cbf2:	pop    r12
   14001cbf4:	pop    rdi
   14001cbf5:	pop    rsi
   14001cbf6:	pop    rbx
   14001cbf7:	pop    rbp
   14001cbf8:	ret    
   14001cbf9:	mov    rdx,QWORD PTR [rbp+0x1b0]
   14001cc00:	add    rax,0x398
   14001cc06:	mov    r9d,0x55
   14001cc0c:	mov    r8,rax
   14001cc0f:	mov    rcx,rsi
   14001cc12:	mov    QWORD PTR [rsp+0x48],rax
   14001cc17:	call   0x14000f9bc
   14001cc1c:	xor    ecx,ecx
   14001cc1e:	test   eax,eax
   14001cc20:	jne    0x14001cf1f
   14001cc26:	cmp    WORD PTR [rbx],0x43
   14001cc2a:	jne    0x14001cc5d
   14001cc2c:	cmp    WORD PTR [rbx+0x2],cx
   14001cc30:	jne    0x14001cc5d
   14001cc32:	lea    r8,[rip+0x12df7]        # 0x14002fa30
   14001cc39:	mov    rdx,r13
   14001cc3c:	mov    rcx,r12
   14001cc3f:	call   0x14000f934
   14001cc44:	xor    ecx,ecx
   14001cc46:	test   eax,eax
   14001cc48:	jne    0x14001ce7d
   14001cc4e:	test   rdi,rdi
   14001cc51:	je     0x14001cc55
   14001cc53:	mov    DWORD PTR [rdi],ecx
   14001cc55:	mov    rax,r12
   14001cc58:	jmp    0x14001cbd6
   14001cc5d:	mov    rcx,rbx
   14001cc60:	call   0x14000f9a0
   14001cc65:	mov    r13,rax
   14001cc68:	cmp    rax,0x83
   14001cc6e:	jae    0x14001cc96
   14001cc70:	mov    rdx,rbx
   14001cc73:	mov    rcx,r14
   14001cc76:	call   0x1400224b8
   14001cc7b:	test   eax,eax
   14001cc7d:	je     0x14001ce1a
   14001cc83:	mov    rdx,rbx
   14001cc86:	mov    rcx,r15
   14001cc89:	call   0x1400224b8
   14001cc8e:	test   eax,eax
   14001cc90:	je     0x14001ce1a
   14001cc96:	mov    rax,QWORD PTR [rip+0x1d473]        # 0x14003a110
   14001cc9d:	lea    rcx,[rsp+0x60]
   14001cca2:	mov    rdx,rbx
   14001cca5:	xor    rax,QWORD PTR [rip+0x19d94]        # 0x140036a40
   14001ccac:	mov    eax,0x0
   14001ccb1:	lea    r15d,[rax+0x1]
   14001ccb5:	cmovne r15d,eax
   14001ccb9:	call   0x14001c808
   14001ccbe:	test   eax,eax
   14001ccc0:	jne    0x14001cd3d
   14001ccc2:	test   r15d,r15d
   14001ccc5:	mov    r15,QWORD PTR [rsp+0x38]
   14001ccca:	lea    r8,[rsp+0x60]
   14001cccf:	mov    rdx,r15
   14001ccd2:	lea    rcx,[rsp+0x60]
   14001ccd7:	je     0x14001cce0
   14001ccd9:	call   0x140023920
   14001ccde:	jmp    0x14001cce5
   14001cce0:	call   0x140022e24
   14001cce5:	test   eax,eax
   14001cce7:	je     0x14001cd42
   14001cce9:	mov    r15d,0x83
   14001ccef:	lea    r8,[rsp+0x60]
   14001ccf4:	mov    rcx,r14
   14001ccf7:	mov    edx,r15d
   14001ccfa:	call   0x14001c764
   14001ccff:	test   rsi,rsi
   14001cd02:	je     0x14001ce0e
   14001cd08:	lea    rcx,[rbp+0x80]
   14001cd0f:	call   0x14000f9a0
   14001cd14:	mov    rdx,QWORD PTR [rbp+0x1b0]
   14001cd1b:	lea    r8,[rbp+0x80]
   14001cd22:	lea    r9,[rax+0x1]
   14001cd26:	mov    rcx,rsi
   14001cd29:	call   0x14000f9bc
   14001cd2e:	xor    esi,esi
   14001cd30:	test   eax,eax
   14001cd32:	je     0x14001cde7
   14001cd38:	jmp    0x14001ce90
   14001cd3d:	mov    r15,QWORD PTR [rsp+0x38]
   14001cd42:	mov    rcx,rbx
   14001cd45:	call   0x14000f5b4
   14001cd4a:	test   eax,eax
   14001cd4c:	je     0x14001ce50
   14001cd52:	lea    r8,[rsp+0x30]
   14001cd57:	mov    r9d,0x2
   14001cd5d:	mov    edx,0x20001004
   14001cd62:	mov    rcx,rbx
   14001cd65:	call   0x14000f4a8
   14001cd6a:	test   eax,eax
   14001cd6c:	je     0x14001cd76
   14001cd6e:	mov    eax,DWORD PTR [rsp+0x30]
   14001cd72:	test   eax,eax
   14001cd74:	jne    0x14001cd80
   14001cd76:	call   QWORD PTR [rip+0xa474]        # 0x1400271f0
   14001cd7c:	mov    DWORD PTR [rsp+0x30],eax
   14001cd80:	movzx  eax,ax
   14001cd83:	mov    r8,rbx
   14001cd86:	mov    edx,0x83
   14001cd8b:	mov    DWORD PTR [r15],eax
   14001cd8e:	lea    r15,[r13+0x1]
   14001cd92:	mov    rcx,r14
   14001cd95:	mov    r9,r15
   14001cd98:	call   0x14000f9bc
   14001cd9d:	xor    ecx,ecx
   14001cd9f:	test   eax,eax
   14001cda1:	jne    0x14001cef9
   14001cda7:	mov    rdx,QWORD PTR [rbp+0x1b0]
   14001cdae:	mov    r9,r15
   14001cdb1:	mov    r8,rbx
   14001cdb4:	mov    rcx,rsi
   14001cdb7:	call   0x14000f9bc
   14001cdbc:	xor    esi,esi
   14001cdbe:	test   eax,eax
   14001cdc0:	jne    0x14001cee4
   14001cdc6:	mov    rcx,QWORD PTR [rsp+0x48]
   14001cdcb:	lea    edx,[rsi+0x55]
   14001cdce:	mov    r9,r15
   14001cdd1:	mov    r8,rbx
   14001cdd4:	call   0x14000f9bc
   14001cdd9:	test   eax,eax
   14001cddb:	jne    0x14001cecf
   14001cde1:	mov    r15d,0x83
   14001cde7:	cmp    WORD PTR [rbx],si
   14001cdea:	je     0x14001ce10
   14001cdec:	cmp    r13,r15
   14001cdef:	jae    0x14001ce10
   14001cdf1:	mov    rcx,QWORD PTR [rsp+0x40]
   14001cdf6:	lea    r9,[r13+0x1]
   14001cdfa:	mov    r8,rbx
   14001cdfd:	mov    rdx,r15
   14001ce00:	call   0x14000f9bc
   14001ce05:	test   eax,eax
   14001ce07:	je     0x14001ce1c
   14001ce09:	jmp    0x14001cea5
   14001ce0e:	jmp    0x14001cde7
   14001ce10:	mov    rax,QWORD PTR [rsp+0x40]
   14001ce15:	mov    WORD PTR [rax],si
   14001ce18:	jmp    0x14001ce1c
   14001ce1a:	xor    esi,esi
   14001ce1c:	test   rdi,rdi
   14001ce1f:	je     0x14001ce34
   14001ce21:	mov    rdx,QWORD PTR [rsp+0x38]
   14001ce26:	mov    r8d,0x4
   14001ce2c:	mov    rcx,rdi
   14001ce2f:	call   0x1400056d0
   14001ce34:	mov    rdx,QWORD PTR [rsp+0x50]
   14001ce39:	mov    r8,r14
   14001ce3c:	mov    rcx,r12
   14001ce3f:	call   0x14000f934
   14001ce44:	test   eax,eax
   14001ce46:	jne    0x14001ceba
   14001ce48:	mov    rax,r14
   14001ce4b:	jmp    0x14001cbd6
   14001ce50:	mov    rcx,rsi
   14001ce53:	call   0x14000f9a0
   14001ce58:	mov    rcx,QWORD PTR [rsp+0x48]
   14001ce5d:	mov    r8,rsi
   14001ce60:	lea    r9,[rax+0x1]
   14001ce64:	mov    edx,0x55
   14001ce69:	call   0x14000f9bc
   14001ce6e:	xor    ecx,ecx
   14001ce70:	test   eax,eax
   14001ce72:	je     0x14001cbd4
   14001ce78:	jmp    0x14001cf0c
   14001ce7d:	xor    r9d,r9d
   14001ce80:	xor    r8d,r8d
   14001ce83:	xor    edx,edx
   14001ce85:	mov    QWORD PTR [rsp+0x20],rcx
   14001ce8a:	call   0x140008678
   14001ce8f:	int3   
   14001ce90:	xor    r9d,r9d
   14001ce93:	xor    r8d,r8d
   14001ce96:	xor    edx,edx
   14001ce98:	xor    ecx,ecx
   14001ce9a:	mov    QWORD PTR [rsp+0x20],rsi
   14001ce9f:	call   0x140008678
   14001cea4:	int3   
   14001cea5:	xor    r9d,r9d
   14001cea8:	xor    r8d,r8d
   14001ceab:	xor    edx,edx
   14001cead:	xor    ecx,ecx
   14001ceaf:	mov    QWORD PTR [rsp+0x20],rsi
   14001ceb4:	call   0x140008678
   14001ceb9:	int3   
   14001ceba:	xor    r9d,r9d
   14001cebd:	xor    r8d,r8d
   14001cec0:	xor    edx,edx
   14001cec2:	xor    ecx,ecx
   14001cec4:	mov    QWORD PTR [rsp+0x20],rsi
   14001cec9:	call   0x140008678
   14001cece:	int3   
   14001cecf:	xor    r9d,r9d
   14001ced2:	xor    r8d,r8d
   14001ced5:	xor    edx,edx
   14001ced7:	xor    ecx,ecx
   14001ced9:	mov    QWORD PTR [rsp+0x20],rsi
   14001cede:	call   0x140008678
   14001cee3:	int3   
   14001cee4:	xor    r9d,r9d
   14001cee7:	xor    r8d,r8d
   14001ceea:	xor    edx,edx
   14001ceec:	xor    ecx,ecx
   14001ceee:	mov    QWORD PTR [rsp+0x20],rsi
   14001cef3:	call   0x140008678
   14001cef8:	int3   
   14001cef9:	xor    r9d,r9d
   14001cefc:	xor    r8d,r8d
   14001ceff:	xor    edx,edx
   14001cf01:	mov    QWORD PTR [rsp+0x20],rcx
   14001cf06:	call   0x140008678
   14001cf0b:	int3   
   14001cf0c:	xor    r9d,r9d
   14001cf0f:	xor    r8d,r8d
   14001cf12:	xor    edx,edx
   14001cf14:	mov    QWORD PTR [rsp+0x20],rcx
   14001cf19:	call   0x140008678
   14001cf1e:	int3   
   14001cf1f:	xor    r9d,r9d
   14001cf22:	xor    r8d,r8d
   14001cf25:	xor    edx,edx
   14001cf27:	mov    QWORD PTR [rsp+0x20],rcx
   14001cf2c:	call   0x140008678
   14001cf31:	int3   
   14001cf32:	int3   
   14001cf33:	int3   
   14001cf34:	test   rcx,rcx
   14001cf37:	je     0x14001cfcd
   14001cf3d:	push   rbx
   14001cf3e:	sub    rsp,0x20
   14001cf42:	mov    rbx,rcx
   14001cf45:	mov    ecx,0xd
   14001cf4a:	call   0x140008760
   14001cf4f:	nop
   14001cf50:	mov    rcx,QWORD PTR [rbx+0x8]
   14001cf54:	test   rcx,rcx
   14001cf57:	je     0x14001cf74
   14001cf59:	lock dec DWORD PTR [rcx]
   14001cf5c:	jne    0x14001cf74
   14001cf5e:	mov    rcx,QWORD PTR [rbx+0x8]
   14001cf62:	lea    rax,[rip+0x197a7]        # 0x140036710
   14001cf69:	cmp    rcx,rax
   14001cf6c:	je     0x14001cf74
   14001cf6e:	call   0x140006444
   14001cf73:	nop
   14001cf74:	mov    ecx,0xd
   14001cf79:	call   0x14000897c
   14001cf7e:	cmp    QWORD PTR [rbx],0x0
   14001cf82:	je     0x14001cfc0
   14001cf84:	mov    ecx,0xc
   14001cf89:	call   0x140008760
   14001cf8e:	nop
   14001cf8f:	mov    rcx,QWORD PTR [rbx]
   14001cf92:	call   0x14000ff50
   14001cf97:	mov    rcx,QWORD PTR [rbx]
   14001cf9a:	test   rcx,rcx
   14001cf9d:	je     0x14001cfb6
   14001cf9f:	cmp    DWORD PTR [rcx],0x0
   14001cfa2:	jne    0x14001cfb6
   14001cfa4:	lea    rax,[rip+0x19de5]        # 0x140036d90
   14001cfab:	cmp    rcx,rax
   14001cfae:	je     0x14001cfb6
   14001cfb0:	call   0x14000fdb8
   14001cfb5:	nop
   14001cfb6:	mov    ecx,0xc
   14001cfbb:	call   0x14000897c
   14001cfc0:	mov    rcx,rbx
   14001cfc3:	call   0x140006444
   14001cfc8:	add    rsp,0x20
   14001cfcc:	pop    rbx
   14001cfcd:	ret    
   14001cfce:	int3   
   14001cfcf:	int3   
   14001cfd0:	mov    QWORD PTR [rsp+0x8],rbx
   14001cfd5:	push   rdi
   14001cfd6:	sub    rsp,0x20
   14001cfda:	call   0x14000b18c
   14001cfdf:	mov    rdi,rax
   14001cfe2:	mov    edx,0x1
   14001cfe7:	lea    ecx,[rdx+0xf]
   14001cfea:	call   0x140007ed4
   14001cfef:	mov    rbx,rax
   14001cff2:	test   rax,rax
   14001cff5:	jne    0x14001d006
   14001cff7:	call   0x1400095b8
   14001cffc:	mov    DWORD PTR [rax],0xc
   14001d002:	xor    eax,eax
   14001d004:	jmp    0x14001d061
   14001d006:	call   0x14000fff4
   14001d00b:	call   0x14000a3f0
   14001d010:	mov    rax,QWORD PTR [rdi+0xc0]
   14001d017:	mov    QWORD PTR [rbx],rax
   14001d01a:	mov    rax,QWORD PTR [rdi+0xb8]
   14001d021:	mov    QWORD PTR [rbx+0x8],rax
   14001d025:	mov    ecx,0xc
   14001d02a:	call   0x140008760
   14001d02f:	nop
   14001d030:	mov    rcx,QWORD PTR [rbx]
   14001d033:	call   0x14000fd2c
   14001d038:	nop
   14001d039:	mov    ecx,0xc
   14001d03e:	call   0x14000897c
   14001d043:	mov    edi,0xd
   14001d048:	mov    ecx,edi
   14001d04a:	call   0x140008760
   14001d04f:	nop
   14001d050:	mov    rax,QWORD PTR [rbx+0x8]
   14001d054:	lock inc DWORD PTR [rax]
   14001d057:	mov    ecx,edi
   14001d059:	call   0x14000897c
   14001d05e:	mov    rax,rbx
   14001d061:	mov    rbx,QWORD PTR [rsp+0x30]
   14001d066:	add    rsp,0x20
   14001d06a:	pop    rdi
   14001d06b:	ret    
   14001d06c:	mov    QWORD PTR [rsp+0x8],rbx
   14001d071:	mov    QWORD PTR [rsp+0x10],rbp
   14001d076:	mov    QWORD PTR [rsp+0x18],rsi
   14001d07b:	push   rdi
   14001d07c:	sub    rsp,0x20
   14001d080:	mov    rdi,rdx
   14001d083:	mov    esi,ecx
   14001d085:	cmp    ecx,0x5
   14001d088:	ja     0x14001d0b1
   14001d08a:	test   rdx,rdx
   14001d08d:	je     0x14001d0b1
   14001d08f:	mov    ebp,0x1
   14001d094:	mov    edx,ebp
   14001d096:	lea    ecx,[rbp+0xf]
   14001d099:	call   0x140007ed4
   14001d09e:	mov    rbx,rax
   14001d0a1:	test   rax,rax
   14001d0a4:	jne    0x14001d0c8
   14001d0a6:	call   0x1400095b8
   14001d0ab:	mov    DWORD PTR [rax],0xc
   14001d0b1:	xor    eax,eax
   14001d0b3:	mov    rbx,QWORD PTR [rsp+0x30]
   14001d0b8:	mov    rbp,QWORD PTR [rsp+0x38]
   14001d0bd:	mov    rsi,QWORD PTR [rsp+0x40]
   14001d0c2:	add    rsp,0x20
   14001d0c6:	pop    rdi
   14001d0c7:	ret    
   14001d0c8:	mov    rdx,rbp
   14001d0cb:	mov    ecx,0x158
   14001d0d0:	call   0x140007ed4
   14001d0d5:	mov    QWORD PTR [rbx],rax
   14001d0d8:	test   rax,rax
   14001d0db:	jne    0x14001d0e7
   14001d0dd:	mov    rcx,rbx
   14001d0e0:	call   0x140006444
   14001d0e5:	jmp    0x14001d0a6
   14001d0e7:	mov    rdx,rbp
   14001d0ea:	mov    ecx,0x228
   14001d0ef:	call   0x140007ed4
   14001d0f4:	mov    rcx,QWORD PTR [rbx]
   14001d0f7:	mov    QWORD PTR [rbx+0x8],rax
   14001d0fb:	test   rax,rax
   14001d0fe:	jne    0x14001d107
   14001d100:	call   0x140006444
   14001d105:	jmp    0x14001d0dd
   14001d107:	lea    rdx,[rip+0x19c82]        # 0x140036d90
   14001d10e:	call   0x14001ca2c
   14001d113:	mov    rcx,QWORD PTR [rbx]
   14001d116:	mov    r8,rdi
   14001d119:	mov    edx,esi
   14001d11b:	call   0x14001d544
   14001d120:	test   rax,rax
   14001d123:	je     0x14001d138
   14001d125:	mov    rax,QWORD PTR [rbx]
   14001d128:	mov    rdx,QWORD PTR [rbx+0x8]
   14001d12c:	mov    ecx,DWORD PTR [rax+0x4]
   14001d12f:	call   0x14000a72c
   14001d134:	test   eax,eax
   14001d136:	je     0x14001d15d
   14001d138:	mov    rcx,QWORD PTR [rbx+0x8]
   14001d13c:	call   0x140006444
   14001d141:	mov    rcx,QWORD PTR [rbx]
   14001d144:	call   0x14000ff50
   14001d149:	mov    rcx,QWORD PTR [rbx]
   14001d14c:	call   0x14000fdb8
   14001d151:	mov    rcx,rbx
   14001d154:	call   0x140006444
   14001d159:	xor    ebx,ebx
   14001d15b:	jmp    0x14001d163
   14001d15d:	mov    rax,QWORD PTR [rbx+0x8]
   14001d161:	mov    DWORD PTR [rax],ebp
   14001d163:	mov    rax,rbx
   14001d166:	jmp    0x14001d0b3
   14001d16b:	int3   
   14001d16c:	test   r8d,r8d
   14001d16f:	jle    0x14001d1ba
   14001d171:	mov    DWORD PTR [rsp+0x18],r8d
   14001d176:	mov    QWORD PTR [rsp+0x20],r9
   14001d17b:	push   rbx
   14001d17c:	push   rbp
   14001d17d:	push   rsi
   14001d17e:	push   rdi
   14001d17f:	sub    rsp,0x38
   14001d183:	lea    rdi,[rsp+0x78]
   14001d188:	xor    ebx,ebx
   14001d18a:	mov    rsi,rdx
   14001d18d:	add    rdi,0xfffffffffffffff8
   14001d191:	mov    rbp,rcx
   14001d194:	lea    rdi,[rdi+0x8]
   14001d198:	mov    rdx,rsi
   14001d19b:	mov    rcx,rbp
   14001d19e:	mov    r8,QWORD PTR [rdi]
   14001d1a1:	call   0x14000f8ac
   14001d1a6:	test   eax,eax
   14001d1a8:	jne    0x14001d1bb
   14001d1aa:	inc    ebx
   14001d1ac:	cmp    ebx,DWORD PTR [rsp+0x70]
   14001d1b0:	jl     0x14001d194
   14001d1b2:	add    rsp,0x38
   14001d1b6:	pop    rdi
   14001d1b7:	pop    rsi
   14001d1b8:	pop    rbp
   14001d1b9:	pop    rbx
   14001d1ba:	ret    
   14001d1bb:	and    QWORD PTR [rsp+0x20],0x0
   14001d1c1:	xor    r9d,r9d
   14001d1c4:	xor    r8d,r8d
   14001d1c7:	xor    edx,edx
   14001d1c9:	xor    ecx,ecx
   14001d1cb:	call   0x140008678
   14001d1d0:	int3   
   14001d1d1:	int3   
   14001d1d2:	int3   
   14001d1d3:	int3   
   14001d1d4:	mov    QWORD PTR [rsp+0x8],rbx
   14001d1d9:	mov    QWORD PTR [rsp+0x10],rsi
   14001d1de:	mov    QWORD PTR [rsp+0x20],rdi
   14001d1e3:	push   r12
   14001d1e5:	push   r14
   14001d1e7:	push   r15
   14001d1e9:	sub    rsp,0x30
   14001d1ed:	mov    r14,rdx
   14001d1f0:	mov    r12d,ecx
   14001d1f3:	xor    esi,esi
   14001d1f5:	cmp    ecx,0x5
   14001d1f8:	jbe    0x14001d211
   14001d1fa:	call   0x1400095b8
   14001d1ff:	mov    DWORD PTR [rax],0x16
   14001d205:	call   0x140008628
   14001d20a:	xor    eax,eax
   14001d20c:	jmp    0x14001d355
   14001d211:	call   0x14000b18c
   14001d216:	mov    rbx,rax
   14001d219:	mov    QWORD PTR [rsp+0x60],rax
   14001d21e:	call   0x14000fff4
   14001d223:	or     DWORD PTR [rbx+0xc8],0x10
   14001d22a:	mov    edx,0x1
   14001d22f:	mov    ecx,0x158
   14001d234:	call   0x140007ed4
   14001d239:	mov    rdi,rax
   14001d23c:	test   rax,rax
   14001d23f:	je     0x14001d34b
   14001d245:	mov    ecx,0xc
   14001d24a:	call   0x140008760
   14001d24f:	nop
   14001d250:	lea    r15,[rbx+0xc0]
   14001d257:	mov    rdx,QWORD PTR [r15]
   14001d25a:	mov    rcx,rdi
   14001d25d:	call   0x14001ca2c
   14001d262:	nop
   14001d263:	mov    ecx,0xc
   14001d268:	call   0x14000897c
   14001d26d:	mov    r8,r14
   14001d270:	mov    edx,r12d
   14001d273:	mov    rcx,rdi
   14001d276:	call   0x14001d544
   14001d27b:	mov    rsi,rax
   14001d27e:	mov    QWORD PTR [rsp+0x20],rax
   14001d283:	test   rax,rax
   14001d286:	je     0x14001d33a
   14001d28c:	test   r14,r14
   14001d28f:	je     0x14001d2ba
   14001d291:	lea    rdx,[rip+0x1981c]        # 0x140036ab4
   14001d298:	mov    rcx,r14
   14001d29b:	call   0x1400224b8
   14001d2a0:	mov    ecx,DWORD PTR [rip+0x1bd7a]        # 0x140039020
   14001d2a6:	test   eax,eax
   14001d2a8:	mov    r14d,0x1
   14001d2ae:	cmovne ecx,r14d
   14001d2b2:	mov    DWORD PTR [rip+0x1bd68],ecx        # 0x140039020
   14001d2b8:	jmp    0x14001d2c0
   14001d2ba:	mov    r14d,0x1
   14001d2c0:	mov    ecx,0xc
   14001d2c5:	call   0x140008760
   14001d2ca:	nop
   14001d2cb:	mov    rdx,rdi
   14001d2ce:	mov    rcx,r15
   14001d2d1:	call   0x14001006c
   14001d2d6:	mov    rcx,rdi
   14001d2d9:	call   0x14000ff50
   14001d2de:	test   BYTE PTR [rbx+0xc8],0x2
   14001d2e5:	jne    0x14001d32e
   14001d2e7:	test   BYTE PTR [rip+0x19c0a],r14b        # 0x140036ef8
   14001d2ee:	jne    0x14001d32e
   14001d2f0:	mov    rdx,QWORD PTR [r15]
   14001d2f3:	lea    rcx,[rip+0x19a86]        # 0x140036d80
   14001d2fa:	call   0x14001006c
   14001d2ff:	mov    rdx,QWORD PTR [rip+0x19a7a]        # 0x140036d80
   14001d306:	mov    rax,QWORD PTR [rdx+0xf0]
   14001d30d:	mov    QWORD PTR [rip+0x1a22c],rax        # 0x140037540
   14001d314:	mov    rax,QWORD PTR [rdx+0x108]
   14001d31b:	mov    QWORD PTR [rip+0x1a226],rax        # 0x140037548
   14001d322:	mov    eax,DWORD PTR [rdx+0xd4]
   14001d328:	mov    DWORD PTR [rip+0x19782],eax        # 0x140036ab0
   14001d32e:	mov    ecx,0xc
   14001d333:	call   0x14000897c
   14001d338:	jmp    0x14001d34b
   14001d33a:	mov    rcx,rdi
   14001d33d:	call   0x14000ff50
   14001d342:	mov    rcx,rdi
   14001d345:	call   0x14000fdb8
   14001d34a:	nop
   14001d34b:	and    DWORD PTR [rbx+0xc8],0xffffffef
   14001d352:	mov    rax,rsi
   14001d355:	mov    rbx,QWORD PTR [rsp+0x50]
   14001d35a:	mov    rsi,QWORD PTR [rsp+0x58]
   14001d35f:	mov    rdi,QWORD PTR [rsp+0x68]
   14001d364:	add    rsp,0x30
   14001d368:	pop    r15
   14001d36a:	pop    r14
   14001d36c:	pop    r12
   14001d36e:	ret    
   14001d36f:	int3   
   14001d370:	mov    QWORD PTR [rsp+0x8],rbx
   14001d375:	mov    QWORD PTR [rsp+0x10],rbp
   14001d37a:	mov    QWORD PTR [rsp+0x18],rsi
   14001d37f:	push   rdi
   14001d380:	push   r12
   14001d382:	push   r13
   14001d384:	push   r14
   14001d386:	push   r15
   14001d388:	sub    rsp,0x30
   14001d38c:	mov    rdi,rcx
   14001d38f:	mov    ecx,0x6a6
   14001d394:	mov    ebp,0x1
   14001d399:	call   0x140007f54
   14001d39e:	xor    r13d,r13d
   14001d3a1:	mov    rsi,rax
   14001d3a4:	test   rax,rax
   14001d3a7:	jne    0x14001d3c6
   14001d3a9:	mov    rbx,QWORD PTR [rsp+0x60]
   14001d3ae:	mov    rbp,QWORD PTR [rsp+0x68]
   14001d3b3:	mov    rsi,QWORD PTR [rsp+0x70]
   14001d3b8:	add    rsp,0x30
   14001d3bc:	pop    r15
   14001d3be:	pop    r14
   14001d3c0:	pop    r13
   14001d3c2:	pop    r12
   14001d3c4:	pop    rdi
   14001d3c5:	ret    
   14001d3c6:	lea    r14,[rax+0x4]
   14001d3ca:	mov    ebx,0x351
   14001d3cf:	mov    r8d,0x3
   14001d3d5:	mov    WORD PTR [r14],r13w
   14001d3d9:	mov    DWORD PTR [rax],ebp
   14001d3db:	mov    rax,QWORD PTR [rdi+0x38]
   14001d3df:	mov    r9,QWORD PTR [rip+0x124c2]        # 0x14002f8a8
   14001d3e6:	mov    QWORD PTR [rsp+0x28],rax
   14001d3eb:	lea    rax,[rip+0x1263a]        # 0x14002fa2c
   14001d3f2:	mov    edx,ebx
   14001d3f4:	mov    rcx,r14
   14001d3f7:	mov    QWORD PTR [rsp+0x20],rax
   14001d3fc:	call   0x14001d16c
   14001d401:	lea    r15,[rip+0x124a0]        # 0x14002f8a8
   14001d408:	lea    r12,[rdi+0x38]
   14001d40c:	lea    r8,[rip+0x12615]        # 0x14002fa28
   14001d413:	mov    rdx,rbx
   14001d416:	mov    rcx,r14
   14001d419:	call   0x14000f8ac
   14001d41e:	test   eax,eax
   14001d420:	jne    0x14001d52f
   14001d426:	mov    rcx,QWORD PTR [r12]
   14001d42a:	lea    rbx,[r12+0x20]
   14001d42f:	mov    rdx,QWORD PTR [rbx]
   14001d432:	call   0x1400224b8
   14001d437:	mov    r12,rbx
   14001d43a:	mov    r8d,0x3
   14001d440:	test   eax,eax
   14001d442:	mov    rax,QWORD PTR [rbx]
   14001d445:	mov    ebx,0x351
   14001d44a:	mov    QWORD PTR [rsp+0x28],rax
   14001d44f:	cmovne ebp,r13d
   14001d453:	lea    rax,[rip+0x125d2]        # 0x14002fa2c
   14001d45a:	add    r15,0x18
   14001d45e:	mov    edx,ebx
   14001d460:	mov    rcx,r14
   14001d463:	mov    r9,QWORD PTR [r15]
   14001d466:	mov    QWORD PTR [rsp+0x20],rax
   14001d46b:	call   0x14001d16c
   14001d470:	lea    rax,[rip+0x12491]        # 0x14002f908
   14001d477:	cmp    r15,rax
   14001d47a:	jl     0x14001d40c
   14001d47c:	test   ebp,ebp
   14001d47e:	jne    0x14001d4d3
   14001d480:	mov    rcx,QWORD PTR [rdi+0x28]
   14001d484:	or     ebx,0xffffffff
   14001d487:	test   rcx,rcx
   14001d48a:	je     0x14001d49f
   14001d48c:	mov    eax,ebx
   14001d48e:	lock xadd DWORD PTR [rcx],eax
   14001d492:	add    eax,ebx
   14001d494:	jne    0x14001d49f
   14001d496:	mov    rcx,QWORD PTR [rdi+0x28]
   14001d49a:	call   0x140006444
   14001d49f:	mov    rax,QWORD PTR [rdi+0x20]
   14001d4a3:	test   rax,rax
   14001d4a6:	je     0x14001d4bb
   14001d4a8:	mov    ecx,ebx
   14001d4aa:	lock xadd DWORD PTR [rax],ecx
   14001d4ae:	add    ecx,ebx
   14001d4b0:	jne    0x14001d4bb
   14001d4b2:	mov    rcx,QWORD PTR [rdi+0x20]
   14001d4b6:	call   0x140006444
   14001d4bb:	mov    QWORD PTR [rdi+0x20],r13
   14001d4bf:	mov    QWORD PTR [rdi+0x10],r13
   14001d4c3:	mov    QWORD PTR [rdi+0x28],rsi
   14001d4c7:	mov    QWORD PTR [rdi+0x18],r14
   14001d4cb:	mov    rax,r14
   14001d4ce:	jmp    0x14001d3a9
   14001d4d3:	mov    rcx,rsi
   14001d4d6:	call   0x140006444
   14001d4db:	mov    rcx,QWORD PTR [rdi+0x28]
   14001d4df:	or     ebx,0xffffffff
   14001d4e2:	test   rcx,rcx
   14001d4e5:	je     0x14001d4fa
   14001d4e7:	mov    eax,ebx
   14001d4e9:	lock xadd DWORD PTR [rcx],eax
   14001d4ed:	add    eax,ebx
   14001d4ef:	jne    0x14001d4fa
   14001d4f1:	mov    rcx,QWORD PTR [rdi+0x28]
   14001d4f5:	call   0x140006444
   14001d4fa:	mov    rcx,QWORD PTR [rdi+0x20]
   14001d4fe:	test   rcx,rcx
   14001d501:	je     0x14001d516
   14001d503:	mov    eax,ebx
   14001d505:	lock xadd DWORD PTR [rcx],eax
   14001d509:	add    eax,ebx
   14001d50b:	jne    0x14001d516
   14001d50d:	mov    rcx,QWORD PTR [rdi+0x20]
   14001d511:	call   0x140006444
   14001d516:	mov    rax,QWORD PTR [rdi+0x58]
   14001d51a:	mov    QWORD PTR [rdi+0x20],r13
   14001d51e:	mov    QWORD PTR [rdi+0x10],r13
   14001d522:	mov    QWORD PTR [rdi+0x28],r13
   14001d526:	mov    QWORD PTR [rdi+0x18],r13
   14001d52a:	jmp    0x14001d3a9
   14001d52f:	xor    r9d,r9d
   14001d532:	xor    r8d,r8d
   14001d535:	xor    edx,edx
   14001d537:	xor    ecx,ecx
   14001d539:	mov    QWORD PTR [rsp+0x20],r13
   14001d53e:	call   0x140008678
   14001d543:	int3   
   14001d544:	mov    QWORD PTR [rsp+0x20],rbx
   14001d549:	push   rbp
   14001d54a:	push   rsi
   14001d54b:	push   rdi
   14001d54c:	push   r12
   14001d54e:	push   r13
   14001d550:	push   r14
   14001d552:	push   r15
   14001d554:	sub    rsp,0x200
   14001d55b:	mov    rax,QWORD PTR [rip+0x194de]        # 0x140036a40
   14001d562:	xor    rax,rsp
   14001d565:	mov    QWORD PTR [rsp+0x1f0],rax
   14001d56d:	xor    r13d,r13d
   14001d570:	mov    rbx,r8
   14001d573:	mov    rdi,rcx
   14001d576:	test   edx,edx
   14001d578:	je     0x14001d59a
   14001d57a:	test   rbx,rbx
   14001d57d:	je     0x14001d589
   14001d57f:	call   0x14001d7b0
   14001d584:	jmp    0x14001d6df
   14001d589:	movsxd rax,edx
   14001d58c:	shl    rax,0x5
   14001d590:	mov    rax,QWORD PTR [rax+rcx*1+0x18]
   14001d595:	jmp    0x14001d6df
   14001d59a:	mov    ebp,0x1
   14001d59f:	mov    esi,r13d
   14001d5a2:	test   rbx,rbx
   14001d5a5:	je     0x14001d6da
   14001d5ab:	cmp    WORD PTR [r8],0x4c
   14001d5b0:	jne    0x14001d70e
   14001d5b6:	cmp    WORD PTR [r8+0x2],0x43
   14001d5bc:	jne    0x14001d70e
   14001d5c2:	cmp    WORD PTR [r8+0x4],0x5f
   14001d5c8:	jne    0x14001d70e
   14001d5ce:	lea    rdx,[rip+0x1244b]        # 0x14002fa20
   14001d5d5:	mov    rcx,rbx
   14001d5d8:	call   0x140022560
   14001d5dd:	mov    r14,rax
   14001d5e0:	test   rax,rax
   14001d5e3:	je     0x14001d70a
   14001d5e9:	mov    rbp,rax
   14001d5ec:	sub    rbp,rbx
   14001d5ef:	sar    rbp,1
   14001d5f2:	je     0x14001d70a
   14001d5f8:	cmp    WORD PTR [rax],0x3b
   14001d5fc:	je     0x14001d70a
   14001d602:	mov    r12d,0x1
   14001d608:	lea    r15,[rip+0x12299]        # 0x14002f8a8
   14001d60f:	mov    rcx,QWORD PTR [r15]
   14001d612:	mov    r8,rbp
   14001d615:	mov    rdx,rbx
   14001d618:	call   0x140022534
   14001d61d:	test   eax,eax
   14001d61f:	jne    0x14001d62e
   14001d621:	mov    rcx,QWORD PTR [r15]
   14001d624:	call   0x14000f9a0
   14001d629:	cmp    rbp,rax
   14001d62c:	je     0x14001d641
   14001d62e:	lea    rax,[rip+0x122d3]        # 0x14002f908
   14001d635:	add    r15,0x18
   14001d639:	inc    r12d
   14001d63c:	cmp    r15,rax
   14001d63f:	jle    0x14001d60f
   14001d641:	add    r14,0x2
   14001d645:	lea    rdx,[rip+0x123dc]        # 0x14002fa28
   14001d64c:	mov    rcx,r14
   14001d64f:	call   0x1400224f4
   14001d654:	mov    rbx,rax
   14001d657:	test   rax,rax
   14001d65a:	jne    0x14001d667
   14001d65c:	cmp    WORD PTR [r14],0x3b
   14001d661:	jne    0x14001d70a
   14001d667:	cmp    r12d,0x5
   14001d66b:	jg     0x14001d6b7
   14001d66d:	lea    rcx,[rsp+0x30]
   14001d672:	mov    r9,rax
   14001d675:	mov    r8,r14
   14001d678:	mov    edx,0x83
   14001d67d:	call   0x14000f9bc
   14001d682:	test   eax,eax
   14001d684:	jne    0x14001d799
   14001d68a:	lea    rax,[rbx+rbx*1]
   14001d68e:	cmp    rax,0x106
   14001d694:	jae    0x14001d793
   14001d69a:	lea    r8,[rsp+0x30]
   14001d69f:	mov    edx,r12d
   14001d6a2:	mov    rcx,rdi
   14001d6a5:	mov    WORD PTR [rsp+rax*1+0x30],r13w
   14001d6ab:	call   0x14001d7b0
   14001d6b0:	test   rax,rax
   14001d6b3:	je     0x14001d6b7
   14001d6b5:	inc    esi
   14001d6b7:	lea    rbx,[r14+rbx*2]
   14001d6bb:	cmp    WORD PTR [rbx],r13w
   14001d6bf:	je     0x14001d6cf
   14001d6c1:	add    rbx,0x2
   14001d6c5:	cmp    WORD PTR [rbx],r13w
   14001d6c9:	jne    0x14001d5ce
   14001d6cf:	test   esi,esi
   14001d6d1:	je     0x14001d78b
   14001d6d7:	mov    rcx,rdi
   14001d6da:	call   0x14001d370
   14001d6df:	mov    rcx,QWORD PTR [rsp+0x1f0]
   14001d6e7:	xor    rcx,rsp
   14001d6ea:	call   0x14000d0a0
   14001d6ef:	mov    rbx,QWORD PTR [rsp+0x258]
   14001d6f7:	add    rsp,0x200
   14001d6fe:	pop    r15
   14001d700:	pop    r14
   14001d702:	pop    r13
   14001d704:	pop    r12
   14001d706:	pop    rdi
   14001d707:	pop    rsi
   14001d708:	pop    rbp
   14001d709:	ret    
   14001d70a:	xor    eax,eax
   14001d70c:	jmp    0x14001d6df
   14001d70e:	lea    r9,[rsp+0x140]
   14001d716:	lea    rdx,[rsp+0x30]
   14001d71b:	mov    r8d,0x83
   14001d721:	mov    rcx,rbx
   14001d724:	mov    QWORD PTR [rsp+0x28],r13
   14001d729:	mov    QWORD PTR [rsp+0x20],0x55
   14001d732:	call   0x14001cb60
   14001d737:	test   rax,rax
   14001d73a:	je     0x14001d6df
   14001d73c:	mov    ebx,r13d
   14001d73f:	lea    r14,[rdi+0x18]
   14001d743:	test   ebx,ebx
   14001d745:	je     0x14001d773
   14001d747:	mov    rdx,QWORD PTR [r14]
   14001d74a:	lea    rcx,[rsp+0x30]
   14001d74f:	call   0x1400224b8
   14001d754:	test   eax,eax
   14001d756:	je     0x14001d771
   14001d758:	lea    r8,[rsp+0x30]
   14001d75d:	mov    edx,ebx
   14001d75f:	mov    rcx,rdi
   14001d762:	call   0x14001d7b0
   14001d767:	test   rax,rax
   14001d76a:	jne    0x14001d771
   14001d76c:	mov    ebp,r13d
   14001d76f:	jmp    0x14001d773
   14001d771:	inc    esi
   14001d773:	inc    ebx
   14001d775:	add    r14,0x20
   14001d779:	cmp    ebx,0x5
   14001d77c:	jle    0x14001d743
   14001d77e:	test   ebp,ebp
   14001d780:	jne    0x14001d6d7
   14001d786:	jmp    0x14001d6cf
   14001d78b:	mov    rax,r13
   14001d78e:	jmp    0x14001d6df
   14001d793:	call   0x1400116c8
   14001d798:	int3   
   14001d799:	xor    r9d,r9d
   14001d79c:	xor    r8d,r8d
   14001d79f:	xor    edx,edx
   14001d7a1:	xor    ecx,ecx
   14001d7a3:	mov    QWORD PTR [rsp+0x20],r13
   14001d7a8:	call   0x140008678
   14001d7ad:	int3   
   14001d7ae:	int3   
   14001d7af:	int3   
   14001d7b0:	mov    QWORD PTR [rsp+0x20],rbx
   14001d7b5:	push   rbp
   14001d7b6:	push   rsi
   14001d7b7:	push   rdi
   14001d7b8:	push   r12
   14001d7ba:	push   r13
   14001d7bc:	push   r14
   14001d7be:	push   r15
   14001d7c0:	lea    rbp,[rsp-0x230]
   14001d7c8:	sub    rsp,0x330
   14001d7cf:	mov    rax,QWORD PTR [rip+0x1926a]        # 0x140036a40
   14001d7d6:	xor    rax,rsp
   14001d7d9:	mov    QWORD PTR [rbp+0x220],rax
   14001d7e0:	mov    rbx,r8
   14001d7e3:	movsxd r12,edx
   14001d7e6:	mov    rdi,rcx
   14001d7e9:	call   0x14000b18c
   14001d7ee:	lea    r9,[rbp+0x170]
   14001d7f5:	lea    rdx,[rsp+0x60]
   14001d7fa:	lea    r14,[rax+0x370]
   14001d801:	lea    rax,[rsp+0x40]
   14001d806:	mov    r8d,0x83
   14001d80c:	mov    QWORD PTR [rsp+0x28],rax
   14001d811:	mov    rcx,rbx
   14001d814:	mov    QWORD PTR [rsp+0x20],0x55
   14001d81d:	call   0x14001cb60
   14001d822:	test   rax,rax
   14001d825:	jne    0x14001d853
   14001d827:	xor    eax,eax
   14001d829:	mov    rcx,QWORD PTR [rbp+0x220]
   14001d830:	xor    rcx,rsp
   14001d833:	call   0x14000d0a0
   14001d838:	mov    rbx,QWORD PTR [rsp+0x388]
   14001d840:	add    rsp,0x330
   14001d847:	pop    r15
   14001d849:	pop    r14
   14001d84b:	pop    r13
   14001d84d:	pop    r12
   14001d84f:	pop    rdi
   14001d850:	pop    rsi
   14001d851:	pop    rbp
   14001d852:	ret    
   14001d853:	mov    rbx,r12
   14001d856:	lea    rcx,[rsp+0x60]
   14001d85b:	shl    rbx,0x5
   14001d85f:	mov    rdx,QWORD PTR [rbx+rdi*1+0x18]
   14001d864:	call   0x1400224b8
   14001d869:	test   eax,eax
   14001d86b:	jne    0x14001d874
   14001d86d:	mov    rax,QWORD PTR [rbx+rdi*1+0x18]
   14001d872:	jmp    0x14001d829
   14001d874:	lea    rcx,[rsp+0x60]
   14001d879:	call   0x14000f9a0
   14001d87e:	mov    r15,rax
   14001d881:	lea    rcx,[rax*2+0x6]
   14001d889:	call   0x140007f54
   14001d88e:	mov    r13,rax
   14001d891:	test   rax,rax
   14001d894:	je     0x14001d827
   14001d896:	mov    rcx,QWORD PTR [rbx+rdi*1+0x18]
   14001d89b:	lea    r8,[rsp+0x60]
   14001d8a0:	lea    rdx,[r15+0x1]
   14001d8a4:	mov    QWORD PTR [rsp+0x48],rcx
   14001d8a9:	mov    rcx,QWORD PTR [rdi+r12*8+0x128]
   14001d8b1:	mov    QWORD PTR [rsp+0x50],rcx
   14001d8b6:	mov    ecx,DWORD PTR [rdi+0x4]
   14001d8b9:	mov    DWORD PTR [rsp+0x44],ecx
   14001d8bd:	lea    rcx,[rax+0x4]
   14001d8c1:	call   0x14000f934
   14001d8c6:	xor    r15d,r15d
   14001d8c9:	test   eax,eax
   14001d8cb:	jne    0x14001daa9
   14001d8d1:	cmp    WORD PTR [rsp+0x60],0x43
   14001d8d7:	lea    rax,[r13+0x4]
   14001d8db:	mov    QWORD PTR [rbx+rdi*1+0x18],rax
   14001d8e0:	jne    0x14001d8f4
   14001d8e2:	cmp    WORD PTR [rsp+0x62],r15w
   14001d8e8:	jne    0x14001d8f4
   14001d8ea:	mov    QWORD PTR [rdi+r12*8+0x128],r15
   14001d8f2:	jmp    0x14001d908
   14001d8f4:	lea    rcx,[rbp+0x170]
   14001d8fb:	call   0x14001c6c8
   14001d900:	mov    QWORD PTR [rdi+r12*8+0x128],rax
   14001d908:	cmp    r12d,0x2
   14001d90c:	jne    0x14001d9e8
   14001d912:	mov    eax,DWORD PTR [rsp+0x40]
   14001d916:	mov    r8d,r15d
   14001d919:	mov    rdx,r15
   14001d91c:	mov    DWORD PTR [rdi+0x4],eax
   14001d91f:	mov    rcx,QWORD PTR [r14+0x20]
   14001d923:	mov    eax,DWORD PTR [r14+rdx*8]
   14001d927:	cmp    DWORD PTR [rdi+0x4],eax
   14001d92a:	je     0x14001d945
   14001d92c:	mov    rax,QWORD PTR [r14+rdx*8]
   14001d930:	mov    QWORD PTR [r14+rdx*8],rcx
   14001d934:	inc    rdx
   14001d937:	inc    r8d
   14001d93a:	mov    rcx,rax
   14001d93d:	cmp    rdx,0x5
   14001d941:	jl     0x14001d923
   14001d943:	jmp    0x14001d958
   14001d945:	test   r8d,r8d
   14001d948:	je     0x14001d958
   14001d94a:	movsxd rdx,r8d
   14001d94d:	mov    rax,QWORD PTR [r14+rdx*8]
   14001d951:	mov    QWORD PTR [r14],rax
   14001d954:	mov    QWORD PTR [r14+rdx*8],rcx
   14001d958:	cmp    r8d,0x5
   14001d95c:	jne    0x14001d9dc
   14001d95e:	mov    eax,DWORD PTR [rdi+0x4]
   14001d961:	lea    r9d,[r8+0x7a]
   14001d965:	mov    DWORD PTR [rsp+0x30],0x1
   14001d96d:	mov    DWORD PTR [rsp+0x28],eax
   14001d971:	lea    rax,[rbp+0x70]
   14001d975:	lea    r8,[rip+0x12024]        # 0x14002f9a0
   14001d97c:	lea    edx,[r9-0x7e]
   14001d980:	xor    ecx,ecx
   14001d982:	mov    QWORD PTR [rsp+0x20],rax
   14001d987:	call   0x1400105e8
   14001d98c:	test   eax,eax
   14001d98e:	je     0x14001d9d2
   14001d990:	mov    edx,r15d
   14001d993:	lea    rcx,[rbp+0x70]
   14001d997:	mov    eax,0x1ff
   14001d99c:	inc    edx
   14001d99e:	and    WORD PTR [rcx],ax
   14001d9a1:	movsxd rax,edx
   14001d9a4:	lea    rcx,[rcx+0x2]
   14001d9a8:	cmp    rax,0x7f
   14001d9ac:	jb     0x14001d997
   14001d9ae:	mov    rdx,QWORD PTR [rip+0x19bcb]        # 0x140037580
   14001d9b5:	lea    rcx,[rbp+0x70]
   14001d9b9:	mov    r8d,0xfe
   14001d9bf:	call   0x1400223f0
   14001d9c4:	mov    ecx,r15d
   14001d9c7:	test   eax,eax
   14001d9c9:	sete   cl
   14001d9cc:	mov    DWORD PTR [r14+0x4],ecx
   14001d9d0:	jmp    0x14001d9d6
   14001d9d2:	mov    DWORD PTR [r14+0x4],r15d
   14001d9d6:	mov    eax,DWORD PTR [rdi+0x4]
   14001d9d9:	mov    DWORD PTR [r14],eax
   14001d9dc:	mov    eax,DWORD PTR [r14+0x4]
   14001d9e0:	mov    DWORD PTR [rdi+0xd0],eax
   14001d9e6:	jmp    0x14001da04
   14001d9e8:	cmp    r12d,0x1
   14001d9ec:	jne    0x14001d9f7
   14001d9ee:	mov    eax,DWORD PTR [rsp+0x40]
   14001d9f2:	mov    DWORD PTR [rdi+0x8],eax
   14001d9f5:	jmp    0x14001da04
   14001d9f7:	cmp    r12d,0x5
   14001d9fb:	jne    0x14001da04
   14001d9fd:	mov    eax,DWORD PTR [rsp+0x40]
   14001da01:	mov    DWORD PTR [rdi+0xc],eax
   14001da04:	lea    rax,[r12+r12*2]
   14001da08:	lea    rdx,[rip+0x11e91]        # 0x14002f8a0
   14001da0f:	mov    rcx,rdi
   14001da12:	call   QWORD PTR [rdx+rax*8]
   14001da15:	test   eax,eax
   14001da17:	je     0x14001da51
   14001da19:	mov    rax,QWORD PTR [rsp+0x48]
   14001da1e:	mov    QWORD PTR [rbx+rdi*1+0x18],rax
   14001da23:	mov    rcx,QWORD PTR [rdi+r12*8+0x128]
   14001da2b:	call   0x140006444
   14001da30:	mov    rax,QWORD PTR [rsp+0x50]
   14001da35:	mov    rcx,r13
   14001da38:	mov    QWORD PTR [rdi+r12*8+0x128],rax
   14001da40:	call   0x140006444
   14001da45:	mov    eax,DWORD PTR [rsp+0x44]
   14001da49:	mov    DWORD PTR [rdi+0x4],eax
   14001da4c:	jmp    0x14001d827
   14001da51:	lea    rcx,[rip+0x1905c]        # 0x140036ab4
   14001da58:	cmp    QWORD PTR [rsp+0x48],rcx
   14001da5d:	je     0x14001da97
   14001da5f:	mov    rcx,QWORD PTR [rbx+rdi*1+0x28]
   14001da64:	lock dec DWORD PTR [rcx]
   14001da67:	jne    0x14001da97
   14001da69:	mov    rcx,QWORD PTR [rbx+rdi*1+0x28]
   14001da6e:	call   0x140006444
   14001da73:	mov    rcx,QWORD PTR [rbx+rdi*1+0x20]
   14001da78:	call   0x140006444
   14001da7d:	mov    rcx,QWORD PTR [rdi+r12*8+0x128]
   14001da85:	call   0x140006444
   14001da8a:	mov    QWORD PTR [rbx+rdi*1+0x18],r15
   14001da8f:	mov    QWORD PTR [rdi+r12*8+0x128],r15
   14001da97:	mov    DWORD PTR [r13+0x0],0x1
   14001da9f:	mov    QWORD PTR [rbx+rdi*1+0x28],r13
   14001daa4:	jmp    0x14001d86d
   14001daa9:	xor    r9d,r9d
   14001daac:	xor    r8d,r8d
   14001daaf:	xor    edx,edx
   14001dab1:	xor    ecx,ecx
   14001dab3:	mov    QWORD PTR [rsp+0x20],r15
   14001dab8:	call   0x140008678
   14001dabd:	int3   
   14001dabe:	int3   
   14001dabf:	int3   
   14001dac0:	mov    rcx,QWORD PTR [rip+0x192b9]        # 0x140036d80
   14001dac7:	mov    rax,QWORD PTR [rcx+0xf0]
   14001dace:	mov    QWORD PTR [rip+0x19a6b],rax        # 0x140037540
   14001dad5:	mov    rax,QWORD PTR [rcx+0x108]
   14001dadc:	mov    QWORD PTR [rip+0x19a65],rax        # 0x140037548
   14001dae3:	mov    eax,DWORD PTR [rcx+0xd4]
   14001dae9:	mov    DWORD PTR [rip+0x18fc1],eax        # 0x140036ab0
   14001daef:	ret    
   14001daf0:	rex push rbx
   14001daf2:	sub    rsp,0x20
   14001daf6:	mov    edx,0x107
   14001dafb:	movzx  ebx,cx
   14001dafe:	call   0x140023bc8
   14001db03:	xor    edx,edx
   14001db05:	test   eax,eax
   14001db07:	jne    0x14001db0f
   14001db09:	cmp    bx,0x5f
   14001db0d:	jne    0x14001db14
   14001db0f:	mov    edx,0x1
   14001db14:	mov    eax,edx
   14001db16:	add    rsp,0x20
   14001db1a:	pop    rbx
   14001db1b:	ret    
   14001db1c:	rex push rbx
   14001db1e:	sub    rsp,0x20
   14001db22:	mov    edx,0x103
   14001db27:	movzx  ebx,cx
   14001db2a:	call   0x140023bc8
   14001db2f:	xor    edx,edx
   14001db31:	test   eax,eax
   14001db33:	jne    0x14001db3b
   14001db35:	cmp    bx,0x5f
   14001db39:	jne    0x14001db40
   14001db3b:	mov    edx,0x1
   14001db40:	mov    eax,edx
   14001db42:	add    rsp,0x20
   14001db46:	pop    rbx
   14001db47:	ret    
   14001db48:	rex push rbx
   14001db4a:	sub    rsp,0x40
   14001db4e:	mov    ebx,ecx
   14001db50:	lea    rcx,[rsp+0x20]
   14001db55:	call   0x14000a000
   14001db5a:	mov    rax,QWORD PTR [rsp+0x20]
   14001db5f:	movzx  edx,bl
   14001db62:	mov    rcx,QWORD PTR [rax+0x108]
   14001db69:	movzx  eax,WORD PTR [rcx+rdx*2]
   14001db6d:	and    eax,0x8000
   14001db72:	cmp    BYTE PTR [rsp+0x38],0x0
   14001db77:	je     0x14001db85
   14001db79:	mov    rcx,QWORD PTR [rsp+0x30]
   14001db7e:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14001db85:	add    rsp,0x40
   14001db89:	pop    rbx
   14001db8a:	ret    
   14001db8b:	int3   
   14001db8c:	mov    edx,0x107
   14001db91:	jmp    0x140023bc8
   14001db96:	int3   
   14001db97:	int3   
   14001db98:	mov    edx,0x103
   14001db9d:	jmp    0x140023bc8
   14001dba2:	int3   
   14001dba3:	int3   
   14001dba4:	cmp    cx,0x9
   14001dba8:	jne    0x14001dbb0
   14001dbaa:	mov    eax,0x40
   14001dbaf:	ret    
   14001dbb0:	mov    edx,0x40
   14001dbb5:	jmp    0x140023bc8
   14001dbba:	int3   
   14001dbbb:	int3   
   14001dbbc:	mov    edx,0x20
   14001dbc1:	jmp    0x140023bc8
   14001dbc6:	int3   
   14001dbc7:	int3   
   14001dbc8:	rex push rbx
   14001dbca:	sub    rsp,0x20
   14001dbce:	mov    edx,0x107
   14001dbd3:	movzx  ebx,cx
   14001dbd6:	call   0x140023bc8
   14001dbdb:	xor    edx,edx
   14001dbdd:	test   eax,eax
   14001dbdf:	jne    0x14001dbe7
   14001dbe1:	cmp    bx,0x5f
   14001dbe5:	jne    0x14001dbec
   14001dbe7:	mov    edx,0x1
   14001dbec:	mov    eax,edx
   14001dbee:	add    rsp,0x20
   14001dbf2:	pop    rbx
   14001dbf3:	ret    
   14001dbf4:	rex push rbx
   14001dbf6:	sub    rsp,0x20
   14001dbfa:	mov    edx,0x103
   14001dbff:	movzx  ebx,cx
   14001dc02:	call   0x140023bc8
   14001dc07:	xor    edx,edx
   14001dc09:	test   eax,eax
   14001dc0b:	jne    0x14001dc13
   14001dc0d:	cmp    bx,0x5f
   14001dc11:	jne    0x14001dc18
   14001dc13:	mov    edx,0x1
   14001dc18:	mov    eax,edx
   14001dc1a:	add    rsp,0x20
   14001dc1e:	pop    rbx
   14001dc1f:	ret    
   14001dc20:	mov    edx,0x4
   14001dc25:	jmp    0x140023bc8
   14001dc2a:	int3   
   14001dc2b:	int3   
   14001dc2c:	mov    edx,0x117
   14001dc31:	jmp    0x140023bc8
   14001dc36:	int3   
   14001dc37:	int3   
   14001dc38:	mov    edx,0x2
   14001dc3d:	jmp    0x140023bc8
   14001dc42:	int3   
   14001dc43:	int3   
   14001dc44:	mov    edx,0x157
   14001dc49:	jmp    0x140023bc8
   14001dc4e:	int3   
   14001dc4f:	int3   
   14001dc50:	mov    edx,0x10
   14001dc55:	jmp    0x140023bc8
   14001dc5a:	int3   
   14001dc5b:	int3   
   14001dc5c:	mov    edx,0x8
   14001dc61:	jmp    0x140023bc8
   14001dc66:	int3   
   14001dc67:	int3   
   14001dc68:	mov    edx,0x1
   14001dc6d:	jmp    0x140023bc8
   14001dc72:	int3   
   14001dc73:	int3   
   14001dc74:	mov    edx,0x80
   14001dc79:	jmp    0x140023bc8
   14001dc7e:	int3   
   14001dc7f:	int3   
   14001dc80:	rex push rbx
   14001dc82:	sub    rsp,0x40
   14001dc86:	mov    ebx,ecx
   14001dc88:	lea    rcx,[rsp+0x20]
   14001dc8d:	xor    edx,edx
   14001dc8f:	call   0x14000a000
   14001dc94:	mov    rax,QWORD PTR [rsp+0x20]
   14001dc99:	movzx  edx,bl
   14001dc9c:	mov    rcx,QWORD PTR [rax+0x108]
   14001dca3:	movzx  eax,WORD PTR [rcx+rdx*2]
   14001dca7:	and    eax,0x8000
   14001dcac:	cmp    BYTE PTR [rsp+0x38],0x0
   14001dcb1:	je     0x14001dcbf
   14001dcb3:	mov    rcx,QWORD PTR [rsp+0x30]
   14001dcb8:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14001dcbf:	add    rsp,0x40
   14001dcc3:	pop    rbx
   14001dcc4:	ret    
   14001dcc5:	int3   
   14001dcc6:	int3   
   14001dcc7:	int3   
   14001dcc8:	mov    edx,0x107
   14001dccd:	jmp    0x140023bc8
   14001dcd2:	int3   
   14001dcd3:	int3   
   14001dcd4:	mov    edx,0x103
   14001dcd9:	jmp    0x140023bc8
   14001dcde:	int3   
   14001dcdf:	int3   
   14001dce0:	xor    eax,eax
   14001dce2:	mov    edx,0x80
   14001dce7:	cmp    cx,dx
   14001dcea:	setb   al
   14001dced:	ret    
   14001dcee:	int3   
   14001dcef:	int3   
   14001dcf0:	cmp    cx,0x9
   14001dcf4:	jne    0x14001dcfc
   14001dcf6:	mov    eax,0x40
   14001dcfb:	ret    
   14001dcfc:	mov    edx,0x40
   14001dd01:	jmp    0x140023bc8
   14001dd06:	int3   
   14001dd07:	int3   
   14001dd08:	mov    edx,0x20
   14001dd0d:	jmp    0x140023bc8
   14001dd12:	int3   
   14001dd13:	int3   
   14001dd14:	mov    edx,0x4
   14001dd19:	jmp    0x140023bc8
   14001dd1e:	int3   
   14001dd1f:	int3   
   14001dd20:	mov    edx,0x117
   14001dd25:	jmp    0x140023bc8
   14001dd2a:	int3   
   14001dd2b:	int3   
   14001dd2c:	mov    edx,0x2
   14001dd31:	jmp    0x140023bc8
   14001dd36:	int3   
   14001dd37:	int3   
   14001dd38:	mov    edx,0x157
   14001dd3d:	jmp    0x140023bc8
   14001dd42:	int3   
   14001dd43:	int3   
   14001dd44:	mov    edx,0x10
   14001dd49:	jmp    0x140023bc8
   14001dd4e:	int3   
   14001dd4f:	int3   
   14001dd50:	mov    edx,0x8
   14001dd55:	jmp    0x140023bc8
   14001dd5a:	int3   
   14001dd5b:	int3   
   14001dd5c:	mov    edx,0x1
   14001dd61:	jmp    0x140023bc8
   14001dd66:	int3   
   14001dd67:	int3   
   14001dd68:	mov    edx,0x80
   14001dd6d:	jmp    0x140023bc8
   14001dd72:	int3   
   14001dd73:	int3   
   14001dd74:	sub    rcx,rdx
   14001dd77:	mov    r8d,0x3
   14001dd7d:	mov    eax,DWORD PTR [rdx]
   14001dd7f:	mov    DWORD PTR [rcx+rdx*1],eax
   14001dd82:	lea    rdx,[rdx+0x4]
   14001dd86:	dec    r8
   14001dd89:	jne    0x14001dd7d
   14001dd8b:	ret    
   14001dd8c:	and    QWORD PTR [rcx],0x0
   14001dd90:	and    DWORD PTR [rcx+0x8],0x0
   14001dd94:	ret    
   14001dd95:	int3   
   14001dd96:	int3   
   14001dd97:	int3   
   14001dd98:	mov    r9,rcx
   14001dd9b:	mov    eax,edx
   14001dd9d:	mov    ecx,0x1f
   14001dda2:	cdq    
   14001dda3:	mov    r8d,0x1
   14001dda9:	and    edx,ecx
   14001ddab:	add    eax,edx
   14001ddad:	mov    r10d,eax
   14001ddb0:	and    eax,ecx
   14001ddb2:	sub    eax,edx
   14001ddb4:	sar    r10d,0x5
   14001ddb8:	sub    ecx,eax
   14001ddba:	movsxd r11,r10d
   14001ddbd:	mov    eax,DWORD PTR [r9+r11*4]
   14001ddc1:	shl    r8d,cl
   14001ddc4:	xor    ecx,ecx
   14001ddc6:	lea    edx,[rax+r8*1]
   14001ddca:	cmp    edx,eax
   14001ddcc:	jb     0x14001ddd3
   14001ddce:	cmp    edx,r8d
   14001ddd1:	jae    0x14001ddd8
   14001ddd3:	mov    ecx,0x1
   14001ddd8:	lea    eax,[r10-0x1]
   14001dddc:	mov    DWORD PTR [r9+r11*4],edx
   14001dde0:	movsxd rdx,eax
   14001dde3:	test   eax,eax
   14001dde5:	js     0x14001de0e
   14001dde7:	test   ecx,ecx
   14001dde9:	je     0x14001de0e
   14001ddeb:	mov    eax,DWORD PTR [r9+rdx*4]
   14001ddef:	xor    ecx,ecx
   14001ddf1:	lea    r8d,[rax+0x1]
   14001ddf5:	cmp    r8d,eax
   14001ddf8:	jb     0x14001de00
   14001ddfa:	cmp    r8d,0x1
   14001ddfe:	jae    0x14001de05
   14001de00:	mov    ecx,0x1
   14001de05:	mov    DWORD PTR [r9+rdx*4],r8d
   14001de09:	dec    rdx
   14001de0c:	jns    0x14001dde7
   14001de0e:	mov    eax,ecx
   14001de10:	ret    
   14001de11:	int3   
   14001de12:	int3   
   14001de13:	int3   
   14001de14:	xor    edx,edx
   14001de16:	cmp    DWORD PTR [rcx+rdx*4],0x0
   14001de1a:	jne    0x14001de2b
   14001de1c:	inc    rdx
   14001de1f:	cmp    rdx,0x3
   14001de23:	jl     0x14001de16
   14001de25:	mov    eax,0x1
   14001de2a:	ret    
   14001de2b:	xor    eax,eax
   14001de2d:	ret    
   14001de2e:	int3   
   14001de2f:	int3   
   14001de30:	mov    QWORD PTR [rsp+0x8],rbx
   14001de35:	mov    QWORD PTR [rsp+0x10],rbp
   14001de3a:	mov    QWORD PTR [rsp+0x18],rsi
   14001de3f:	push   rdi
   14001de40:	push   r14
   14001de42:	push   r15
   14001de44:	sub    rsp,0x20
   14001de48:	lea    r10d,[rdx-0x1]
   14001de4c:	xor    ebx,ebx
   14001de4e:	or     r11d,0xffffffff
   14001de52:	lea    esi,[rbx+0x1f]
   14001de55:	lea    eax,[r10+0x1]
   14001de59:	mov    r8,rcx
   14001de5c:	cdq    
   14001de5d:	mov    r14d,esi
   14001de60:	lea    r9d,[rbx+0x3]
   14001de64:	and    edx,esi
   14001de66:	add    eax,edx
   14001de68:	mov    edi,eax
   14001de6a:	and    eax,esi
   14001de6c:	sub    eax,edx
   14001de6e:	sar    edi,0x5
   14001de71:	sub    r14d,eax
   14001de74:	movsxd r15,edi
   14001de77:	mov    eax,DWORD PTR [rcx+r15*4]
   14001de7b:	bt     eax,r14d
   14001de7f:	jae    0x14001df21
   14001de85:	mov    ecx,r14d
   14001de88:	mov    edx,r11d
   14001de8b:	movsxd rax,edi
   14001de8e:	shl    edx,cl
   14001de90:	not    edx
   14001de92:	test   DWORD PTR [r8+rax*4],edx
   14001de96:	jne    0x14001deb0
   14001de98:	lea    eax,[rdi+0x1]
   14001de9b:	movsxd rcx,eax
   14001de9e:	jmp    0x14001dea9
   14001dea0:	cmp    DWORD PTR [r8+rcx*4],ebx
   14001dea4:	jne    0x14001deb0
   14001dea6:	inc    rcx
   14001dea9:	cmp    rcx,r9
   14001deac:	jl     0x14001dea0
   14001deae:	jmp    0x14001df21
   14001deb0:	mov    eax,r10d
   14001deb3:	mov    r10d,0x1
   14001deb9:	cdq    
   14001deba:	and    edx,esi
   14001debc:	add    eax,edx
   14001debe:	mov    ebp,eax
   14001dec0:	and    eax,esi
   14001dec2:	sub    eax,edx
   14001dec4:	sar    ebp,0x5
   14001dec7:	sub    esi,eax
   14001dec9:	mov    cl,sil
   14001decc:	movsxd rsi,ebp
   14001decf:	mov    eax,DWORD PTR [r8+rsi*4]
   14001ded3:	shl    r10d,cl
   14001ded6:	mov    ecx,ebx
   14001ded8:	lea    edx,[rax+r10*1]
   14001dedc:	cmp    edx,eax
   14001dede:	jb     0x14001dee5
   14001dee0:	cmp    edx,r10d
   14001dee3:	jae    0x14001deea
   14001dee5:	mov    ecx,0x1
   14001deea:	lea    eax,[rbp-0x1]
   14001deed:	mov    DWORD PTR [r8+rsi*4],edx
   14001def1:	movsxd rdx,eax
   14001def4:	test   eax,eax
   14001def6:	js     0x14001df1f
   14001def8:	test   ecx,ecx
   14001defa:	je     0x14001df1f
   14001defc:	mov    eax,DWORD PTR [r8+rdx*4]
   14001df00:	mov    ecx,ebx
   14001df02:	lea    r10d,[rax+0x1]
   14001df06:	cmp    r10d,eax
   14001df09:	jb     0x14001df11
   14001df0b:	cmp    r10d,0x1
   14001df0f:	jae    0x14001df16
   14001df11:	mov    ecx,0x1
   14001df16:	mov    DWORD PTR [r8+rdx*4],r10d
   14001df1a:	dec    rdx
   14001df1d:	jns    0x14001def8
   14001df1f:	mov    ebx,ecx
   14001df21:	lea    eax,[rdi+0x1]
   14001df24:	mov    ecx,r14d
   14001df27:	shl    r11d,cl
   14001df2a:	movsxd rdx,eax
   14001df2d:	and    DWORD PTR [r8+r15*4],r11d
   14001df31:	cmp    rdx,r9
   14001df34:	jge    0x14001df4b
   14001df36:	sub    r9,rdx
   14001df39:	lea    rcx,[r8+rdx*4]
   14001df3d:	xor    edx,edx
   14001df3f:	shl    r9,0x2
   14001df43:	mov    r8,r9
   14001df46:	call   0x140007150
   14001df4b:	mov    rbp,QWORD PTR [rsp+0x48]
   14001df50:	mov    rsi,QWORD PTR [rsp+0x50]
   14001df55:	mov    eax,ebx
   14001df57:	mov    rbx,QWORD PTR [rsp+0x40]
   14001df5c:	add    rsp,0x20
   14001df60:	pop    r15
   14001df62:	pop    r14
   14001df64:	pop    rdi
   14001df65:	ret    
   14001df66:	int3   
   14001df67:	int3   
   14001df68:	mov    rax,rsp
   14001df6b:	mov    QWORD PTR [rax+0x8],rbx
   14001df6f:	mov    QWORD PTR [rax+0x10],rbp
   14001df73:	mov    QWORD PTR [rax+0x18],rsi
   14001df77:	mov    QWORD PTR [rax+0x20],rdi
   14001df7b:	xor    r9d,r9d
   14001df7e:	or     r10d,0xffffffff
   14001df82:	mov    eax,edx
   14001df84:	cdq    
   14001df85:	mov    rbx,rcx
   14001df88:	lea    ebp,[r9+0x20]
   14001df8c:	and    edx,0x1f
   14001df8f:	mov    r8,rbx
   14001df92:	lea    edi,[r9+0x3]
   14001df96:	add    eax,edx
   14001df98:	mov    r11d,eax
   14001df9b:	and    eax,0x1f
   14001df9e:	sub    eax,edx
   14001dfa0:	sar    r11d,0x5
   14001dfa4:	mov    ecx,eax
   14001dfa6:	mov    esi,eax
   14001dfa8:	shl    r10d,cl
   14001dfab:	sub    ebp,eax
   14001dfad:	not    r10d
   14001dfb0:	mov    eax,DWORD PTR [r8]
   14001dfb3:	mov    ecx,esi
   14001dfb5:	mov    edx,eax
   14001dfb7:	shr    eax,cl
   14001dfb9:	mov    ecx,ebp
   14001dfbb:	or     eax,r9d
   14001dfbe:	and    edx,r10d
   14001dfc1:	mov    r9d,edx
   14001dfc4:	mov    DWORD PTR [r8],eax
   14001dfc7:	lea    r8,[r8+0x4]
   14001dfcb:	shl    r9d,cl
   14001dfce:	dec    rdi
   14001dfd1:	jne    0x14001dfb0
   14001dfd3:	movsxd r9,r11d
   14001dfd6:	lea    edx,[rdi+0x2]
   14001dfd9:	lea    rcx,[rbx+0x8]
   14001dfdd:	mov    r8,r9
   14001dfe0:	neg    r8
   14001dfe3:	cmp    rdx,r9
   14001dfe6:	jl     0x14001dff0
   14001dfe8:	mov    eax,DWORD PTR [rcx+r8*4]
   14001dfec:	mov    DWORD PTR [rcx],eax
   14001dfee:	jmp    0x14001dff3
   14001dff0:	and    DWORD PTR [rcx],0x0
   14001dff3:	sub    rcx,0x4
   14001dff7:	dec    rdx
   14001dffa:	jns    0x14001dfe3
   14001dffc:	mov    rbx,QWORD PTR [rsp+0x8]
   14001e001:	mov    rbp,QWORD PTR [rsp+0x10]
   14001e006:	mov    rsi,QWORD PTR [rsp+0x18]
   14001e00b:	mov    rdi,QWORD PTR [rsp+0x20]
   14001e010:	ret    
   14001e011:	int3   
   14001e012:	int3   
   14001e013:	int3   
   14001e014:	mov    eax,edx
   14001e016:	mov    r9,rcx
   14001e019:	mov    ecx,0x1f
   14001e01e:	cdq    
   14001e01f:	and    edx,ecx
   14001e021:	add    eax,edx
   14001e023:	mov    r8d,eax
   14001e026:	and    eax,ecx
   14001e028:	sub    eax,edx
   14001e02a:	or     edx,0xffffffff
   14001e02d:	sar    r8d,0x5
   14001e031:	sub    ecx,eax
   14001e033:	movsxd rax,r8d
   14001e036:	shl    edx,cl
   14001e038:	not    edx
   14001e03a:	test   DWORD PTR [r9+rax*4],edx
   14001e03e:	je     0x14001e043
   14001e040:	xor    eax,eax
   14001e042:	ret    
   14001e043:	lea    eax,[r8+0x1]
   14001e047:	movsxd rcx,eax
   14001e04a:	jmp    0x14001e056
   14001e04c:	cmp    DWORD PTR [r9+rcx*4],0x0
   14001e051:	jne    0x14001e040
   14001e053:	inc    rcx
   14001e056:	cmp    rcx,0x3
   14001e05a:	jl     0x14001e04c
   14001e05c:	mov    eax,0x1
   14001e061:	ret    
   14001e062:	int3   
   14001e063:	int3   
   14001e064:	lea    r9d,[rcx+rdx*1]
   14001e068:	xor    eax,eax
   14001e06a:	cmp    r9d,ecx
   14001e06d:	jb     0x14001e074
   14001e06f:	cmp    r9d,edx
   14001e072:	jae    0x14001e079
   14001e074:	mov    eax,0x1
   14001e079:	mov    DWORD PTR [r8],r9d
   14001e07c:	ret    
   14001e07d:	int3   
   14001e07e:	int3   
   14001e07f:	int3   
   14001e080:	mov    QWORD PTR [rsp+0x8],rbx
   14001e085:	push   rbp
   14001e086:	push   rsi
   14001e087:	push   rdi
   14001e088:	push   r12
   14001e08a:	push   r13
   14001e08c:	push   r14
   14001e08e:	push   r15
   14001e090:	mov    rbp,rsp
   14001e093:	sub    rsp,0x70
   14001e097:	mov    rax,QWORD PTR [rip+0x189a2]        # 0x140036a40
   14001e09e:	xor    rax,rsp
   14001e0a1:	mov    QWORD PTR [rbp-0x10],rax
   14001e0a5:	movzx  eax,WORD PTR [rcx+0xa]
   14001e0a9:	movzx  r11d,WORD PTR [rcx]
   14001e0ad:	xor    ebx,ebx
   14001e0af:	mov    edi,eax
   14001e0b1:	and    eax,0x8000
   14001e0b6:	shl    r11d,0x10
   14001e0ba:	mov    DWORD PTR [rbp-0x40],eax
   14001e0bd:	mov    eax,DWORD PTR [rcx+0x6]
   14001e0c0:	and    edi,0x7fff
   14001e0c6:	mov    DWORD PTR [rbp-0x20],eax
   14001e0c9:	mov    eax,DWORD PTR [rcx+0x2]
   14001e0cc:	sub    edi,0x3fff
   14001e0d2:	mov    r13d,0x1f
   14001e0d8:	mov    r9,r8
   14001e0db:	mov    QWORD PTR [rbp-0x48],r8
   14001e0df:	mov    DWORD PTR [rbp-0x1c],eax
   14001e0e2:	mov    QWORD PTR [rbp-0x38],rdx
   14001e0e6:	mov    DWORD PTR [rbp-0x2c],r11d
   14001e0ea:	mov    DWORD PTR [rbp-0x18],r11d
   14001e0ee:	lea    esi,[rbx+0x1]
   14001e0f1:	lea    r14d,[r13-0x1c]
   14001e0f5:	cmp    edi,0xffffc001
   14001e0fb:	jne    0x14001e126
   14001e0fd:	mov    r8d,ebx
   14001e100:	mov    eax,ebx
   14001e102:	cmp    DWORD PTR [rbp+rax*4-0x20],ebx
   14001e106:	jne    0x14001e115
   14001e108:	add    rax,rsi
   14001e10b:	cmp    rax,r14
   14001e10e:	jl     0x14001e102
   14001e110:	jmp    0x14001e5c7
   14001e115:	mov    QWORD PTR [rbp-0x20],rbx
   14001e119:	mov    DWORD PTR [rbp-0x18],ebx
   14001e11c:	mov    ebx,0x2
   14001e121:	jmp    0x14001e5c7
   14001e126:	mov    rax,QWORD PTR [rbp-0x20]
   14001e12a:	or     r15d,0xffffffff
   14001e12e:	mov    DWORD PTR [rbp-0x50],edi
   14001e131:	mov    QWORD PTR [rbp-0x28],rax
   14001e135:	mov    eax,DWORD PTR [r8+0x8]
   14001e139:	mov    r8d,r13d
   14001e13c:	dec    eax
   14001e13e:	mov    r12d,ebx
   14001e141:	mov    DWORD PTR [rbp-0x4c],eax
   14001e144:	inc    eax
   14001e146:	cdq    
   14001e147:	and    edx,r13d
   14001e14a:	add    eax,edx
   14001e14c:	mov    r9d,eax
   14001e14f:	and    eax,r13d
   14001e152:	sar    r9d,0x5
   14001e156:	sub    eax,edx
   14001e158:	sub    r8d,eax
   14001e15b:	movsxd r10,r9d
   14001e15e:	mov    ecx,DWORD PTR [rbp+r10*4-0x20]
   14001e163:	mov    DWORD PTR [rbp-0x30],r8d
   14001e167:	bt     ecx,r8d
   14001e16b:	jae    0x14001e20f
   14001e171:	mov    ecx,r8d
   14001e174:	mov    eax,r15d
   14001e177:	movsxd rdx,r9d
   14001e17a:	shl    eax,cl
   14001e17c:	not    eax
   14001e17e:	test   DWORD PTR [rbp+rdx*4-0x20],eax
   14001e182:	jne    0x14001e19d
   14001e184:	lea    eax,[r9+0x1]
   14001e188:	movsxd rcx,eax
   14001e18b:	jmp    0x14001e196
   14001e18d:	cmp    DWORD PTR [rbp+rcx*4-0x20],ebx
   14001e191:	jne    0x14001e19d
   14001e193:	add    rcx,rsi
   14001e196:	cmp    rcx,r14
   14001e199:	jl     0x14001e18d
   14001e19b:	jmp    0x14001e20f
   14001e19d:	mov    eax,DWORD PTR [rbp-0x4c]
   14001e1a0:	mov    ecx,r13d
   14001e1a3:	cdq    
   14001e1a4:	and    edx,r13d
   14001e1a7:	add    eax,edx
   14001e1a9:	mov    r8d,eax
   14001e1ac:	and    eax,r13d
   14001e1af:	sub    eax,edx
   14001e1b1:	sar    r8d,0x5
   14001e1b5:	mov    edx,esi
   14001e1b7:	sub    ecx,eax
   14001e1b9:	movsxd r10,r8d
   14001e1bc:	mov    eax,DWORD PTR [rbp+r10*4-0x20]
   14001e1c1:	shl    edx,cl
   14001e1c3:	lea    ecx,[rax+rdx*1]
   14001e1c6:	cmp    ecx,eax
   14001e1c8:	jb     0x14001e1ce
   14001e1ca:	cmp    ecx,edx
   14001e1cc:	jae    0x14001e1d1
   14001e1ce:	mov    r12d,esi
   14001e1d1:	lea    eax,[r8-0x1]
   14001e1d5:	mov    DWORD PTR [rbp+r10*4-0x20],ecx
   14001e1da:	movsxd rdx,eax
   14001e1dd:	test   eax,eax
   14001e1df:	js     0x14001e208
   14001e1e1:	test   r12d,r12d
   14001e1e4:	je     0x14001e208
   14001e1e6:	mov    eax,DWORD PTR [rbp+rdx*4-0x20]
   14001e1ea:	mov    r12d,ebx
   14001e1ed:	lea    r8d,[rax+0x1]
   14001e1f1:	cmp    r8d,eax
   14001e1f4:	jb     0x14001e1fb
   14001e1f6:	cmp    r8d,esi
   14001e1f9:	jae    0x14001e1fe
   14001e1fb:	mov    r12d,esi
   14001e1fe:	mov    DWORD PTR [rbp+rdx*4-0x20],r8d
   14001e203:	sub    rdx,rsi
   14001e206:	jns    0x14001e1e1
   14001e208:	mov    r8d,DWORD PTR [rbp-0x30]
   14001e20c:	movsxd r10,r9d
   14001e20f:	mov    ecx,r8d
   14001e212:	mov    eax,r15d
   14001e215:	shl    eax,cl
   14001e217:	and    DWORD PTR [rbp+r10*4-0x20],eax
   14001e21c:	lea    eax,[r9+0x1]
   14001e220:	movsxd rdx,eax
   14001e223:	cmp    rdx,r14
   14001e226:	jge    0x14001e245
   14001e228:	lea    rcx,[rbp-0x20]
   14001e22c:	mov    r8,r14
   14001e22f:	sub    r8,rdx
   14001e232:	lea    rcx,[rcx+rdx*4]
   14001e236:	xor    edx,edx
   14001e238:	shl    r8,0x2
   14001e23c:	call   0x140007150
   14001e241:	mov    r11d,DWORD PTR [rbp-0x2c]
   14001e245:	test   r12d,r12d
   14001e248:	je     0x14001e24c
   14001e24a:	add    edi,esi
   14001e24c:	mov    r9,QWORD PTR [rbp-0x48]
   14001e250:	mov    ecx,DWORD PTR [r9+0x4]
   14001e254:	mov    eax,ecx
   14001e256:	sub    eax,DWORD PTR [r9+0x8]
   14001e25a:	cmp    edi,eax
   14001e25c:	jge    0x14001e272
   14001e25e:	mov    QWORD PTR [rbp-0x20],rbx
   14001e262:	mov    DWORD PTR [rbp-0x18],ebx
   14001e265:	mov    r8d,ebx
   14001e268:	mov    ebx,0x2
   14001e26d:	jmp    0x14001e5c3
   14001e272:	cmp    edi,ecx
   14001e274:	jg     0x14001e4ac
   14001e27a:	sub    ecx,DWORD PTR [rbp-0x50]
   14001e27d:	mov    rax,QWORD PTR [rbp-0x28]
   14001e281:	mov    r10d,r15d
   14001e284:	mov    QWORD PTR [rbp-0x20],rax
   14001e288:	mov    eax,ecx
   14001e28a:	mov    DWORD PTR [rbp-0x18],r11d
   14001e28e:	cdq    
   14001e28f:	mov    r11,r14
   14001e292:	mov    r9d,ebx
   14001e295:	and    edx,r13d
   14001e298:	lea    r8,[rbp-0x20]
   14001e29c:	add    eax,edx
   14001e29e:	mov    r12d,eax
   14001e2a1:	and    eax,r13d
   14001e2a4:	sub    eax,edx
   14001e2a6:	sar    r12d,0x5
   14001e2aa:	mov    ecx,eax
   14001e2ac:	mov    edi,eax
   14001e2ae:	mov    eax,0x20
   14001e2b3:	shl    r10d,cl
   14001e2b6:	sub    eax,ecx
   14001e2b8:	mov    r14d,eax
   14001e2bb:	not    r10d
   14001e2be:	mov    eax,DWORD PTR [r8]
   14001e2c1:	mov    ecx,edi
   14001e2c3:	mov    edx,eax
   14001e2c5:	shr    eax,cl
   14001e2c7:	mov    ecx,r14d
   14001e2ca:	or     eax,r9d
   14001e2cd:	and    edx,r10d
   14001e2d0:	mov    r9d,edx
   14001e2d3:	mov    DWORD PTR [r8],eax
   14001e2d6:	lea    r8,[r8+0x4]
   14001e2da:	shl    r9d,cl
   14001e2dd:	sub    r11,rsi
   14001e2e0:	jne    0x14001e2be
   14001e2e2:	movsxd r10,r12d
   14001e2e5:	lea    edi,[r11+0x2]
   14001e2e9:	lea    r14d,[r11+0x3]
   14001e2ed:	mov    r9,r10
   14001e2f0:	mov    r8d,edi
   14001e2f3:	neg    r9
   14001e2f6:	cmp    r8,r10
   14001e2f9:	jl     0x14001e310
   14001e2fb:	mov    rdx,r8
   14001e2fe:	shl    rdx,0x2
   14001e302:	lea    rax,[rdx+r9*4]
   14001e306:	mov    ecx,DWORD PTR [rbp+rax*1-0x20]
   14001e30a:	mov    DWORD PTR [rbp+rdx*1-0x20],ecx
   14001e30e:	jmp    0x14001e315
   14001e310:	mov    DWORD PTR [rbp+r8*4-0x20],ebx
   14001e315:	sub    r8,rsi
   14001e318:	jns    0x14001e2f6
   14001e31a:	mov    r8d,DWORD PTR [rbp-0x4c]
   14001e31e:	mov    r11d,r13d
   14001e321:	lea    eax,[r8+0x1]
   14001e325:	cdq    
   14001e326:	and    edx,r13d
   14001e329:	add    eax,edx
   14001e32b:	mov    r9d,eax
   14001e32e:	and    eax,r13d
   14001e331:	sub    eax,edx
   14001e333:	sar    r9d,0x5
   14001e337:	sub    r11d,eax
   14001e33a:	movsxd rax,r9d
   14001e33d:	mov    ecx,DWORD PTR [rbp+rax*4-0x20]
   14001e341:	bt     ecx,r11d
   14001e345:	jae    0x14001e3e3
   14001e34b:	mov    ecx,r11d
   14001e34e:	mov    eax,r15d
   14001e351:	movsxd rdx,r9d
   14001e354:	shl    eax,cl
   14001e356:	not    eax
   14001e358:	test   DWORD PTR [rbp+rdx*4-0x20],eax
   14001e35c:	jne    0x14001e377
   14001e35e:	lea    eax,[r9+0x1]
   14001e362:	movsxd rcx,eax
   14001e365:	jmp    0x14001e370
   14001e367:	cmp    DWORD PTR [rbp+rcx*4-0x20],ebx
   14001e36b:	jne    0x14001e377
   14001e36d:	add    rcx,rsi
   14001e370:	cmp    rcx,r14
   14001e373:	jl     0x14001e367
   14001e375:	jmp    0x14001e3e3
   14001e377:	mov    eax,r8d
   14001e37a:	mov    ecx,r13d
   14001e37d:	cdq    
   14001e37e:	and    edx,r13d
   14001e381:	add    eax,edx
   14001e383:	mov    r10d,eax
   14001e386:	and    eax,r13d
   14001e389:	sub    eax,edx
   14001e38b:	sar    r10d,0x5
   14001e38f:	mov    edx,esi
   14001e391:	sub    ecx,eax
   14001e393:	movsxd r12,r10d
   14001e396:	mov    eax,DWORD PTR [rbp+r12*4-0x20]
   14001e39b:	shl    edx,cl
   14001e39d:	mov    ecx,ebx
   14001e39f:	lea    r8d,[rax+rdx*1]
   14001e3a3:	cmp    r8d,eax
   14001e3a6:	jb     0x14001e3ad
   14001e3a8:	cmp    r8d,edx
   14001e3ab:	jae    0x14001e3af
   14001e3ad:	mov    ecx,esi
   14001e3af:	lea    eax,[r10-0x1]
   14001e3b3:	mov    DWORD PTR [rbp+r12*4-0x20],r8d
   14001e3b8:	movsxd rdx,eax
   14001e3bb:	test   eax,eax
   14001e3bd:	js     0x14001e3e3
   14001e3bf:	test   ecx,ecx
   14001e3c1:	je     0x14001e3e3
   14001e3c3:	mov    eax,DWORD PTR [rbp+rdx*4-0x20]
   14001e3c7:	mov    ecx,ebx
   14001e3c9:	lea    r8d,[rax+0x1]
   14001e3cd:	cmp    r8d,eax
   14001e3d0:	jb     0x14001e3d7
   14001e3d2:	cmp    r8d,esi
   14001e3d5:	jae    0x14001e3d9
   14001e3d7:	mov    ecx,esi
   14001e3d9:	mov    DWORD PTR [rbp+rdx*4-0x20],r8d
   14001e3de:	sub    rdx,rsi
   14001e3e1:	jns    0x14001e3bf
   14001e3e3:	mov    ecx,r11d
   14001e3e6:	mov    eax,r15d
   14001e3e9:	shl    eax,cl
   14001e3eb:	movsxd rcx,r9d
   14001e3ee:	and    DWORD PTR [rbp+rcx*4-0x20],eax
   14001e3f2:	lea    eax,[r9+0x1]
   14001e3f6:	movsxd rdx,eax
   14001e3f9:	cmp    rdx,r14
   14001e3fc:	jge    0x14001e417
   14001e3fe:	lea    rcx,[rbp-0x20]
   14001e402:	mov    r8,r14
   14001e405:	sub    r8,rdx
   14001e408:	lea    rcx,[rcx+rdx*4]
   14001e40c:	xor    edx,edx
   14001e40e:	shl    r8,0x2
   14001e412:	call   0x140007150
   14001e417:	mov    rax,QWORD PTR [rbp-0x48]
   14001e41b:	mov    r12d,0x20
   14001e421:	mov    r9d,ebx
   14001e424:	mov    eax,DWORD PTR [rax+0xc]
   14001e427:	lea    r8,[rbp-0x20]
   14001e42b:	add    eax,esi
   14001e42d:	cdq    
   14001e42e:	and    edx,r13d
   14001e431:	add    eax,edx
   14001e433:	mov    r10d,eax
   14001e436:	and    eax,r13d
   14001e439:	sub    eax,edx
   14001e43b:	sar    r10d,0x5
   14001e43f:	mov    ecx,eax
   14001e441:	mov    r11d,eax
   14001e444:	shl    r15d,cl
   14001e447:	sub    r12d,eax
   14001e44a:	not    r15d
   14001e44d:	mov    eax,DWORD PTR [r8]
   14001e450:	mov    ecx,r11d
   14001e453:	mov    edx,eax
   14001e455:	shr    eax,cl
   14001e457:	mov    ecx,r12d
   14001e45a:	or     eax,r9d
   14001e45d:	and    edx,r15d
   14001e460:	mov    r9d,edx
   14001e463:	mov    DWORD PTR [r8],eax
   14001e466:	lea    r8,[r8+0x4]
   14001e46a:	shl    r9d,cl
   14001e46d:	sub    r14,rsi
   14001e470:	jne    0x14001e44d
   14001e472:	movsxd r10,r10d
   14001e475:	mov    r8,rdi
   14001e478:	mov    r9,r10
   14001e47b:	neg    r9
   14001e47e:	cmp    r8,r10
   14001e481:	jl     0x14001e498
   14001e483:	mov    rdx,r8
   14001e486:	shl    rdx,0x2
   14001e48a:	lea    rax,[rdx+r9*4]
   14001e48e:	mov    ecx,DWORD PTR [rbp+rax*1-0x20]
   14001e492:	mov    DWORD PTR [rbp+rdx*1-0x20],ecx
   14001e496:	jmp    0x14001e49d
   14001e498:	mov    DWORD PTR [rbp+r8*4-0x20],ebx
   14001e49d:	sub    r8,rsi
   14001e4a0:	jns    0x14001e47e
   14001e4a2:	mov    r8d,ebx
   14001e4a5:	mov    ebx,edi
   14001e4a7:	jmp    0x14001e5bf
   14001e4ac:	mov    eax,DWORD PTR [r9+0xc]
   14001e4b0:	mov    r10d,DWORD PTR [r9]
   14001e4b3:	mov    r12d,0x20
   14001e4b9:	cdq    
   14001e4ba:	and    edx,r13d
   14001e4bd:	add    eax,edx
   14001e4bf:	mov    r11d,eax
   14001e4c2:	and    eax,r13d
   14001e4c5:	sub    eax,edx
   14001e4c7:	sar    r11d,0x5
   14001e4cb:	mov    ecx,eax
   14001e4cd:	shl    r15d,cl
   14001e4d0:	not    r15d
   14001e4d3:	cmp    edi,r10d
   14001e4d6:	jl     0x14001e553
   14001e4d8:	mov    QWORD PTR [rbp-0x20],rbx
   14001e4dc:	bts    DWORD PTR [rbp-0x20],0x1f
   14001e4e1:	mov    DWORD PTR [rbp-0x18],ebx
   14001e4e4:	sub    r12d,eax
   14001e4e7:	mov    edi,eax
   14001e4e9:	mov    r9d,ebx
   14001e4ec:	lea    r8,[rbp-0x20]
   14001e4f0:	mov    eax,DWORD PTR [r8]
   14001e4f3:	mov    ecx,edi
   14001e4f5:	mov    edx,r15d
   14001e4f8:	and    edx,eax
   14001e4fa:	shr    eax,cl
   14001e4fc:	mov    ecx,r12d
   14001e4ff:	or     eax,r9d
   14001e502:	mov    r9d,edx
   14001e505:	shl    r9d,cl
   14001e508:	mov    DWORD PTR [r8],eax
   14001e50b:	lea    r8,[r8+0x4]
   14001e50f:	sub    r14,rsi
   14001e512:	jne    0x14001e4f0
   14001e514:	movsxd r9,r11d
   14001e517:	lea    edi,[r14+0x2]
   14001e51b:	mov    r8,r9
   14001e51e:	neg    r8
   14001e521:	cmp    rdi,r9
   14001e524:	jl     0x14001e53b
   14001e526:	mov    rdx,rdi
   14001e529:	shl    rdx,0x2
   14001e52d:	lea    rax,[rdx+r8*4]
   14001e531:	mov    ecx,DWORD PTR [rbp+rax*1-0x20]
   14001e535:	mov    DWORD PTR [rbp+rdx*1-0x20],ecx
   14001e539:	jmp    0x14001e53f
   14001e53b:	mov    DWORD PTR [rbp+rdi*4-0x20],ebx
   14001e53f:	sub    rdi,rsi
   14001e542:	jns    0x14001e521
   14001e544:	mov    r9,QWORD PTR [rbp-0x48]
   14001e548:	mov    ebx,esi
   14001e54a:	mov    r8d,DWORD PTR [r9+0x14]
   14001e54e:	add    r8d,r10d
   14001e551:	jmp    0x14001e5c3
   14001e553:	mov    r8d,DWORD PTR [r9+0x14]
   14001e557:	btr    DWORD PTR [rbp-0x20],0x1f
   14001e55c:	mov    r10d,ebx
   14001e55f:	add    r8d,edi
   14001e562:	mov    edi,eax
   14001e564:	sub    r12d,eax
   14001e567:	lea    r9,[rbp-0x20]
   14001e56b:	mov    eax,DWORD PTR [r9]
   14001e56e:	mov    ecx,edi
   14001e570:	mov    edx,eax
   14001e572:	shr    eax,cl
   14001e574:	mov    ecx,r12d
   14001e577:	or     eax,r10d
   14001e57a:	and    edx,r15d
   14001e57d:	mov    r10d,edx
   14001e580:	mov    DWORD PTR [r9],eax
   14001e583:	lea    r9,[r9+0x4]
   14001e587:	shl    r10d,cl
   14001e58a:	sub    r14,rsi
   14001e58d:	jne    0x14001e56b
   14001e58f:	movsxd r10,r11d
   14001e592:	lea    edi,[r14+0x2]
   14001e596:	mov    r9,r10
   14001e599:	neg    r9
   14001e59c:	cmp    rdi,r10
   14001e59f:	jl     0x14001e5b6
   14001e5a1:	mov    rdx,rdi
   14001e5a4:	shl    rdx,0x2
   14001e5a8:	lea    rax,[rdx+r9*4]
   14001e5ac:	mov    ecx,DWORD PTR [rbp+rax*1-0x20]
   14001e5b0:	mov    DWORD PTR [rbp+rdx*1-0x20],ecx
   14001e5b4:	jmp    0x14001e5ba
   14001e5b6:	mov    DWORD PTR [rbp+rdi*4-0x20],ebx
   14001e5ba:	sub    rdi,rsi
   14001e5bd:	jns    0x14001e59c
   14001e5bf:	mov    r9,QWORD PTR [rbp-0x48]
   14001e5c3:	mov    rdx,QWORD PTR [rbp-0x38]
   14001e5c7:	sub    r13d,DWORD PTR [r9+0xc]
   14001e5cb:	mov    cl,r13b
   14001e5ce:	shl    r8d,cl
   14001e5d1:	neg    DWORD PTR [rbp-0x40]
   14001e5d4:	sbb    eax,eax
   14001e5d6:	and    eax,0x80000000
   14001e5db:	or     r8d,eax
   14001e5de:	or     r8d,DWORD PTR [rbp-0x20]
   14001e5e2:	cmp    DWORD PTR [r9+0x10],0x40
   14001e5e7:	jne    0x14001e5f4
   14001e5e9:	mov    eax,DWORD PTR [rbp-0x1c]
   14001e5ec:	mov    DWORD PTR [rdx+0x4],r8d
   14001e5f0:	mov    DWORD PTR [rdx],eax
   14001e5f2:	jmp    0x14001e5fe
   14001e5f4:	cmp    DWORD PTR [r9+0x10],0x20
   14001e5f9:	jne    0x14001e5fe
   14001e5fb:	mov    DWORD PTR [rdx],r8d
   14001e5fe:	mov    eax,ebx
   14001e600:	mov    rcx,QWORD PTR [rbp-0x10]
   14001e604:	xor    rcx,rsp
   14001e607:	call   0x14000d0a0
   14001e60c:	mov    rbx,QWORD PTR [rsp+0xb0]
   14001e614:	add    rsp,0x70
   14001e618:	pop    r15
   14001e61a:	pop    r14
   14001e61c:	pop    r13
   14001e61e:	pop    r12
   14001e620:	pop    rdi
   14001e621:	pop    rsi
   14001e622:	pop    rbp
   14001e623:	ret    
   14001e624:	mov    QWORD PTR [rsp+0x8],rbx
   14001e629:	mov    QWORD PTR [rsp+0x18],rsi
   14001e62e:	mov    QWORD PTR [rsp+0x20],rdi
   14001e633:	push   rbp
   14001e634:	push   r12
   14001e636:	push   r13
   14001e638:	push   r14
   14001e63a:	push   r15
   14001e63c:	mov    rbp,rsp
   14001e63f:	sub    rsp,0x60
   14001e643:	mov    rax,QWORD PTR [rip+0x183f6]        # 0x140036a40
   14001e64a:	xor    rax,rsp
   14001e64d:	mov    QWORD PTR [rbp-0x8],rax
   14001e651:	movzx  eax,WORD PTR [rcx+0xa]
   14001e655:	movzx  r9d,WORD PTR [rcx]
   14001e659:	xor    ebx,ebx
   14001e65b:	mov    edi,eax
   14001e65d:	and    eax,0x8000
   14001e662:	shl    r9d,0x10
   14001e666:	mov    DWORD PTR [rbp-0x3c],eax
   14001e669:	mov    eax,DWORD PTR [rcx+0x6]
   14001e66c:	and    edi,0x7fff
   14001e672:	mov    DWORD PTR [rbp-0x18],eax
   14001e675:	mov    eax,DWORD PTR [rcx+0x2]
   14001e678:	sub    edi,0x3fff
   14001e67e:	mov    r12d,0x1f
   14001e684:	mov    QWORD PTR [rbp-0x30],rdx
   14001e688:	mov    DWORD PTR [rbp-0x28],r9d
   14001e68c:	mov    DWORD PTR [rbp-0x14],eax
   14001e68f:	mov    DWORD PTR [rbp-0x10],r9d
   14001e693:	lea    esi,[rbx+0x1]
   14001e696:	lea    r14d,[r12-0x1c]
   14001e69b:	cmp    edi,0xffffc001
   14001e6a1:	jne    0x14001e6cc
   14001e6a3:	mov    r8d,ebx
   14001e6a6:	mov    eax,ebx
   14001e6a8:	cmp    DWORD PTR [rbp+rax*4-0x18],ebx
   14001e6ac:	jne    0x14001e6bb
   14001e6ae:	add    rax,rsi
   14001e6b1:	cmp    rax,r14
   14001e6b4:	jl     0x14001e6a8
   14001e6b6:	jmp    0x14001eb72
   14001e6bb:	mov    QWORD PTR [rbp-0x18],rbx
   14001e6bf:	mov    DWORD PTR [rbp-0x10],ebx
   14001e6c2:	mov    ebx,0x2
   14001e6c7:	jmp    0x14001eb72
   14001e6cc:	mov    rax,QWORD PTR [rbp-0x18]
   14001e6d0:	mov    r8d,r12d
   14001e6d3:	or     r15d,0xffffffff
   14001e6d7:	mov    QWORD PTR [rbp-0x20],rax
   14001e6db:	mov    eax,DWORD PTR [rip+0x18eaf]        # 0x140037590
   14001e6e1:	mov    DWORD PTR [rbp-0x40],edi
   14001e6e4:	dec    eax
   14001e6e6:	mov    r13d,ebx
   14001e6e9:	mov    DWORD PTR [rbp-0x38],eax
   14001e6ec:	inc    eax
   14001e6ee:	cdq    
   14001e6ef:	and    edx,r12d
   14001e6f2:	add    eax,edx
   14001e6f4:	mov    r10d,eax
   14001e6f7:	and    eax,r12d
   14001e6fa:	sar    r10d,0x5
   14001e6fe:	sub    eax,edx
   14001e700:	sub    r8d,eax
   14001e703:	movsxd r11,r10d
   14001e706:	mov    ecx,DWORD PTR [rbp+r11*4-0x18]
   14001e70b:	mov    DWORD PTR [rbp-0x24],r8d
   14001e70f:	bt     ecx,r8d
   14001e713:	jae    0x14001e7b7
   14001e719:	mov    ecx,r8d
   14001e71c:	mov    eax,r15d
   14001e71f:	movsxd rdx,r10d
   14001e722:	shl    eax,cl
   14001e724:	not    eax
   14001e726:	test   DWORD PTR [rbp+rdx*4-0x18],eax
   14001e72a:	jne    0x14001e745
   14001e72c:	lea    eax,[r10+0x1]
   14001e730:	movsxd rcx,eax
   14001e733:	jmp    0x14001e73e
   14001e735:	cmp    DWORD PTR [rbp+rcx*4-0x18],ebx
   14001e739:	jne    0x14001e745
   14001e73b:	add    rcx,rsi
   14001e73e:	cmp    rcx,r14
   14001e741:	jl     0x14001e735
   14001e743:	jmp    0x14001e7b7
   14001e745:	mov    eax,DWORD PTR [rbp-0x38]
   14001e748:	mov    ecx,r12d
   14001e74b:	cdq    
   14001e74c:	and    edx,r12d
   14001e74f:	add    eax,edx
   14001e751:	mov    r8d,eax
   14001e754:	and    eax,r12d
   14001e757:	sub    eax,edx
   14001e759:	sar    r8d,0x5
   14001e75d:	mov    edx,esi
   14001e75f:	sub    ecx,eax
   14001e761:	movsxd r11,r8d
   14001e764:	mov    eax,DWORD PTR [rbp+r11*4-0x18]
   14001e769:	shl    edx,cl
   14001e76b:	lea    ecx,[rax+rdx*1]
   14001e76e:	cmp    ecx,eax
   14001e770:	jb     0x14001e776
   14001e772:	cmp    ecx,edx
   14001e774:	jae    0x14001e779
   14001e776:	mov    r13d,esi
   14001e779:	lea    eax,[r8-0x1]
   14001e77d:	mov    DWORD PTR [rbp+r11*4-0x18],ecx
   14001e782:	movsxd rdx,eax
   14001e785:	test   eax,eax
   14001e787:	js     0x14001e7b0
   14001e789:	test   r13d,r13d
   14001e78c:	je     0x14001e7b0
   14001e78e:	mov    eax,DWORD PTR [rbp+rdx*4-0x18]
   14001e792:	mov    r13d,ebx
   14001e795:	lea    r8d,[rax+0x1]
   14001e799:	cmp    r8d,eax
   14001e79c:	jb     0x14001e7a3
   14001e79e:	cmp    r8d,esi
   14001e7a1:	jae    0x14001e7a6
   14001e7a3:	mov    r13d,esi
   14001e7a6:	mov    DWORD PTR [rbp+rdx*4-0x18],r8d
   14001e7ab:	sub    rdx,rsi
   14001e7ae:	jns    0x14001e789
   14001e7b0:	mov    r8d,DWORD PTR [rbp-0x24]
   14001e7b4:	movsxd r11,r10d
   14001e7b7:	mov    ecx,r8d
   14001e7ba:	mov    eax,r15d
   14001e7bd:	shl    eax,cl
   14001e7bf:	and    DWORD PTR [rbp+r11*4-0x18],eax
   14001e7c4:	lea    eax,[r10+0x1]
   14001e7c8:	movsxd rdx,eax
   14001e7cb:	cmp    rdx,r14
   14001e7ce:	jge    0x14001e7ed
   14001e7d0:	lea    rcx,[rbp-0x18]
   14001e7d4:	mov    r8,r14
   14001e7d7:	sub    r8,rdx
   14001e7da:	lea    rcx,[rcx+rdx*4]
   14001e7de:	xor    edx,edx
   14001e7e0:	shl    r8,0x2
   14001e7e4:	call   0x140007150
   14001e7e9:	mov    r9d,DWORD PTR [rbp-0x28]
   14001e7ed:	test   r13d,r13d
   14001e7f0:	je     0x14001e7f4
   14001e7f2:	add    edi,esi
   14001e7f4:	mov    ecx,DWORD PTR [rip+0x18d92]        # 0x14003758c
   14001e7fa:	mov    eax,ecx
   14001e7fc:	sub    eax,DWORD PTR [rip+0x18d8e]        # 0x140037590
   14001e802:	cmp    edi,eax
   14001e804:	jge    0x14001e81a
   14001e806:	mov    QWORD PTR [rbp-0x18],rbx
   14001e80a:	mov    DWORD PTR [rbp-0x10],ebx
   14001e80d:	mov    r8d,ebx
   14001e810:	mov    ebx,0x2
   14001e815:	jmp    0x14001eb6e
   14001e81a:	cmp    edi,ecx
   14001e81c:	jg     0x14001ea53
   14001e822:	sub    ecx,DWORD PTR [rbp-0x40]
   14001e825:	mov    rax,QWORD PTR [rbp-0x20]
   14001e829:	mov    r10d,r15d
   14001e82c:	mov    QWORD PTR [rbp-0x18],rax
   14001e830:	mov    eax,ecx
   14001e832:	mov    DWORD PTR [rbp-0x10],r9d
   14001e836:	cdq    
   14001e837:	mov    r11,r14
   14001e83a:	mov    r9d,ebx
   14001e83d:	and    edx,r12d
   14001e840:	lea    r8,[rbp-0x18]
   14001e844:	add    eax,edx
   14001e846:	mov    r13d,eax
   14001e849:	and    eax,r12d
   14001e84c:	sub    eax,edx
   14001e84e:	sar    r13d,0x5
   14001e852:	mov    ecx,eax
   14001e854:	mov    edi,eax
   14001e856:	mov    eax,0x20
   14001e85b:	shl    r10d,cl
   14001e85e:	sub    eax,ecx
   14001e860:	mov    r14d,eax
   14001e863:	not    r10d
   14001e866:	mov    eax,DWORD PTR [r8]
   14001e869:	mov    ecx,edi
   14001e86b:	mov    edx,eax
   14001e86d:	shr    eax,cl
   14001e86f:	mov    ecx,r14d
   14001e872:	or     eax,r9d
   14001e875:	and    edx,r10d
   14001e878:	mov    r9d,edx
   14001e87b:	mov    DWORD PTR [r8],eax
   14001e87e:	lea    r8,[r8+0x4]
   14001e882:	shl    r9d,cl
   14001e885:	sub    r11,rsi
   14001e888:	jne    0x14001e866
   14001e88a:	movsxd r10,r13d
   14001e88d:	lea    edi,[r11+0x2]
   14001e891:	lea    r14d,[r11+0x3]
   14001e895:	mov    r9,r10
   14001e898:	mov    r8d,edi
   14001e89b:	neg    r9
   14001e89e:	cmp    r8,r10
   14001e8a1:	jl     0x14001e8b8
   14001e8a3:	mov    rdx,r8
   14001e8a6:	shl    rdx,0x2
   14001e8aa:	lea    rax,[rdx+r9*4]
   14001e8ae:	mov    ecx,DWORD PTR [rbp+rax*1-0x18]
   14001e8b2:	mov    DWORD PTR [rbp+rdx*1-0x18],ecx
   14001e8b6:	jmp    0x14001e8bd
   14001e8b8:	mov    DWORD PTR [rbp+r8*4-0x18],ebx
   14001e8bd:	sub    r8,rsi
   14001e8c0:	jns    0x14001e89e
   14001e8c2:	mov    r8d,DWORD PTR [rbp-0x38]
   14001e8c6:	mov    r11d,r12d
   14001e8c9:	lea    eax,[r8+0x1]
   14001e8cd:	cdq    
   14001e8ce:	and    edx,r12d
   14001e8d1:	add    eax,edx
   14001e8d3:	mov    r9d,eax
   14001e8d6:	and    eax,r12d
   14001e8d9:	sub    eax,edx
   14001e8db:	sar    r9d,0x5
   14001e8df:	sub    r11d,eax
   14001e8e2:	movsxd rax,r9d
   14001e8e5:	mov    ecx,DWORD PTR [rbp+rax*4-0x18]
   14001e8e9:	bt     ecx,r11d
   14001e8ed:	jae    0x14001e98b
   14001e8f3:	mov    ecx,r11d
   14001e8f6:	mov    eax,r15d
   14001e8f9:	movsxd rdx,r9d
   14001e8fc:	shl    eax,cl
   14001e8fe:	not    eax
   14001e900:	test   DWORD PTR [rbp+rdx*4-0x18],eax
   14001e904:	jne    0x14001e91f
   14001e906:	lea    eax,[r9+0x1]
   14001e90a:	movsxd rcx,eax
   14001e90d:	jmp    0x14001e918
   14001e90f:	cmp    DWORD PTR [rbp+rcx*4-0x18],ebx
   14001e913:	jne    0x14001e91f
   14001e915:	add    rcx,rsi
   14001e918:	cmp    rcx,r14
   14001e91b:	jl     0x14001e90f
   14001e91d:	jmp    0x14001e98b
   14001e91f:	mov    eax,r8d
   14001e922:	mov    ecx,r12d
   14001e925:	cdq    
   14001e926:	and    edx,r12d
   14001e929:	add    eax,edx
   14001e92b:	mov    r10d,eax
   14001e92e:	and    eax,r12d
   14001e931:	sub    eax,edx
   14001e933:	sar    r10d,0x5
   14001e937:	mov    edx,esi
   14001e939:	sub    ecx,eax
   14001e93b:	movsxd r13,r10d
   14001e93e:	mov    eax,DWORD PTR [rbp+r13*4-0x18]
   14001e943:	shl    edx,cl
   14001e945:	mov    ecx,ebx
   14001e947:	lea    r8d,[rax+rdx*1]
   14001e94b:	cmp    r8d,eax
   14001e94e:	jb     0x14001e955
   14001e950:	cmp    r8d,edx
   14001e953:	jae    0x14001e957
   14001e955:	mov    ecx,esi
   14001e957:	lea    eax,[r10-0x1]
   14001e95b:	mov    DWORD PTR [rbp+r13*4-0x18],r8d
   14001e960:	movsxd rdx,eax
   14001e963:	test   eax,eax
   14001e965:	js     0x14001e98b
   14001e967:	test   ecx,ecx
   14001e969:	je     0x14001e98b
   14001e96b:	mov    eax,DWORD PTR [rbp+rdx*4-0x18]
   14001e96f:	mov    ecx,ebx
   14001e971:	lea    r8d,[rax+0x1]
   14001e975:	cmp    r8d,eax
   14001e978:	jb     0x14001e97f
   14001e97a:	cmp    r8d,esi
   14001e97d:	jae    0x14001e981
   14001e97f:	mov    ecx,esi
   14001e981:	mov    DWORD PTR [rbp+rdx*4-0x18],r8d
   14001e986:	sub    rdx,rsi
   14001e989:	jns    0x14001e967
   14001e98b:	mov    ecx,r11d
   14001e98e:	mov    eax,r15d
   14001e991:	shl    eax,cl
   14001e993:	movsxd rcx,r9d
   14001e996:	and    DWORD PTR [rbp+rcx*4-0x18],eax
   14001e99a:	lea    eax,[r9+0x1]
   14001e99e:	movsxd rdx,eax
   14001e9a1:	cmp    rdx,r14
   14001e9a4:	jge    0x14001e9bf
   14001e9a6:	lea    rcx,[rbp-0x18]
   14001e9aa:	mov    r8,r14
   14001e9ad:	sub    r8,rdx
   14001e9b0:	lea    rcx,[rcx+rdx*4]
   14001e9b4:	xor    edx,edx
   14001e9b6:	shl    r8,0x2
   14001e9ba:	call   0x140007150
   14001e9bf:	mov    eax,DWORD PTR [rip+0x18bcf]        # 0x140037594
   14001e9c5:	mov    r13d,0x20
   14001e9cb:	mov    r9d,ebx
   14001e9ce:	inc    eax
   14001e9d0:	lea    r8,[rbp-0x18]
   14001e9d4:	cdq    
   14001e9d5:	and    edx,r12d
   14001e9d8:	add    eax,edx
   14001e9da:	mov    r10d,eax
   14001e9dd:	and    eax,r12d
   14001e9e0:	sub    eax,edx
   14001e9e2:	sar    r10d,0x5
   14001e9e6:	mov    ecx,eax
   14001e9e8:	mov    r11d,eax
   14001e9eb:	shl    r15d,cl
   14001e9ee:	sub    r13d,eax
   14001e9f1:	not    r15d
   14001e9f4:	mov    eax,DWORD PTR [r8]
   14001e9f7:	mov    ecx,r11d
   14001e9fa:	mov    edx,eax
   14001e9fc:	shr    eax,cl
   14001e9fe:	mov    ecx,r13d
   14001ea01:	or     eax,r9d
   14001ea04:	and    edx,r15d
   14001ea07:	mov    r9d,edx
   14001ea0a:	mov    DWORD PTR [r8],eax
   14001ea0d:	lea    r8,[r8+0x4]
   14001ea11:	shl    r9d,cl
   14001ea14:	sub    r14,rsi
   14001ea17:	jne    0x14001e9f4
   14001ea19:	movsxd r10,r10d
   14001ea1c:	mov    r8,rdi
   14001ea1f:	mov    r9,r10
   14001ea22:	neg    r9
   14001ea25:	cmp    r8,r10
   14001ea28:	jl     0x14001ea3f
   14001ea2a:	mov    rdx,r8
   14001ea2d:	shl    rdx,0x2
   14001ea31:	lea    rax,[rdx+r9*4]
   14001ea35:	mov    ecx,DWORD PTR [rbp+rax*1-0x18]
   14001ea39:	mov    DWORD PTR [rbp+rdx*1-0x18],ecx
   14001ea3d:	jmp    0x14001ea44
   14001ea3f:	mov    DWORD PTR [rbp+r8*4-0x18],ebx
   14001ea44:	sub    r8,rsi
   14001ea47:	jns    0x14001ea25
   14001ea49:	mov    r8d,ebx
   14001ea4c:	mov    ebx,edi
   14001ea4e:	jmp    0x14001eb6e
   14001ea53:	mov    eax,DWORD PTR [rip+0x18b3b]        # 0x140037594
   14001ea59:	mov    r10d,DWORD PTR [rip+0x18b28]        # 0x140037588
   14001ea60:	mov    r13d,0x20
   14001ea66:	cdq    
   14001ea67:	and    edx,r12d
   14001ea6a:	add    eax,edx
   14001ea6c:	mov    r11d,eax
   14001ea6f:	and    eax,r12d
   14001ea72:	sub    eax,edx
   14001ea74:	sar    r11d,0x5
   14001ea78:	mov    ecx,eax
   14001ea7a:	shl    r15d,cl
   14001ea7d:	not    r15d
   14001ea80:	cmp    edi,r10d
   14001ea83:	jl     0x14001eaff
   14001ea85:	mov    QWORD PTR [rbp-0x18],rbx
   14001ea89:	bts    DWORD PTR [rbp-0x18],0x1f
   14001ea8e:	mov    DWORD PTR [rbp-0x10],ebx
   14001ea91:	sub    r13d,eax
   14001ea94:	mov    edi,eax
   14001ea96:	mov    r9d,ebx
   14001ea99:	lea    r8,[rbp-0x18]
   14001ea9d:	mov    eax,DWORD PTR [r8]
   14001eaa0:	mov    ecx,edi
   14001eaa2:	mov    edx,r15d
   14001eaa5:	and    edx,eax
   14001eaa7:	shr    eax,cl
   14001eaa9:	mov    ecx,r13d
   14001eaac:	or     eax,r9d
   14001eaaf:	mov    r9d,edx
   14001eab2:	shl    r9d,cl
   14001eab5:	mov    DWORD PTR [r8],eax
   14001eab8:	lea    r8,[r8+0x4]
   14001eabc:	sub    r14,rsi
   14001eabf:	jne    0x14001ea9d
   14001eac1:	movsxd r9,r11d
   14001eac4:	lea    edi,[r14+0x2]
   14001eac8:	mov    r8,r9
   14001eacb:	neg    r8
   14001eace:	cmp    rdi,r9
   14001ead1:	jl     0x14001eae8
   14001ead3:	mov    rdx,rdi
   14001ead6:	shl    rdx,0x2
   14001eada:	lea    rax,[rdx+r8*4]
   14001eade:	mov    ecx,DWORD PTR [rbp+rax*1-0x18]
   14001eae2:	mov    DWORD PTR [rbp+rdx*1-0x18],ecx
   14001eae6:	jmp    0x14001eaec
   14001eae8:	mov    DWORD PTR [rbp+rdi*4-0x18],ebx
   14001eaec:	sub    rdi,rsi
   14001eaef:	jns    0x14001eace
   14001eaf1:	mov    r8d,DWORD PTR [rip+0x18aa4]        # 0x14003759c
   14001eaf8:	mov    ebx,esi
   14001eafa:	add    r8d,r10d
   14001eafd:	jmp    0x14001eb6e
   14001eaff:	mov    r8d,DWORD PTR [rip+0x18a96]        # 0x14003759c
   14001eb06:	btr    DWORD PTR [rbp-0x18],0x1f
   14001eb0b:	mov    r10d,ebx
   14001eb0e:	add    r8d,edi
   14001eb11:	mov    edi,eax
   14001eb13:	sub    r13d,eax
   14001eb16:	lea    r9,[rbp-0x18]
   14001eb1a:	mov    eax,DWORD PTR [r9]
   14001eb1d:	mov    ecx,edi
   14001eb1f:	mov    edx,eax
   14001eb21:	shr    eax,cl
   14001eb23:	mov    ecx,r13d
   14001eb26:	or     eax,r10d
   14001eb29:	and    edx,r15d
   14001eb2c:	mov    r10d,edx
   14001eb2f:	mov    DWORD PTR [r9],eax
   14001eb32:	lea    r9,[r9+0x4]
   14001eb36:	shl    r10d,cl
   14001eb39:	sub    r14,rsi
   14001eb3c:	jne    0x14001eb1a
   14001eb3e:	movsxd r10,r11d
   14001eb41:	lea    edi,[r14+0x2]
   14001eb45:	mov    r9,r10
   14001eb48:	neg    r9
   14001eb4b:	cmp    rdi,r10
   14001eb4e:	jl     0x14001eb65
   14001eb50:	mov    rdx,rdi
   14001eb53:	shl    rdx,0x2
   14001eb57:	lea    rax,[rdx+r9*4]
   14001eb5b:	mov    ecx,DWORD PTR [rbp+rax*1-0x18]
   14001eb5f:	mov    DWORD PTR [rbp+rdx*1-0x18],ecx
   14001eb63:	jmp    0x14001eb69
   14001eb65:	mov    DWORD PTR [rbp+rdi*4-0x18],ebx
   14001eb69:	sub    rdi,rsi
   14001eb6c:	jns    0x14001eb4b
   14001eb6e:	mov    rdx,QWORD PTR [rbp-0x30]
   14001eb72:	sub    r12d,DWORD PTR [rip+0x18a1b]        # 0x140037594
   14001eb79:	mov    cl,r12b
   14001eb7c:	shl    r8d,cl
   14001eb7f:	neg    DWORD PTR [rbp-0x3c]
   14001eb82:	sbb    eax,eax
   14001eb84:	and    eax,0x80000000
   14001eb89:	or     r8d,eax
   14001eb8c:	mov    eax,DWORD PTR [rip+0x18a06]        # 0x140037598
   14001eb92:	or     r8d,DWORD PTR [rbp-0x18]
   14001eb96:	cmp    eax,0x40
   14001eb99:	jne    0x14001eba6
   14001eb9b:	mov    eax,DWORD PTR [rbp-0x14]
   14001eb9e:	mov    DWORD PTR [rdx+0x4],r8d
   14001eba2:	mov    DWORD PTR [rdx],eax
   14001eba4:	jmp    0x14001ebae
   14001eba6:	cmp    eax,0x20
   14001eba9:	jne    0x14001ebae
   14001ebab:	mov    DWORD PTR [rdx],r8d
   14001ebae:	mov    eax,ebx
   14001ebb0:	mov    rcx,QWORD PTR [rbp-0x8]
   14001ebb4:	xor    rcx,rsp
   14001ebb7:	call   0x14000d0a0
   14001ebbc:	lea    r11,[rsp+0x60]
   14001ebc1:	mov    rbx,QWORD PTR [r11+0x30]
   14001ebc5:	mov    rsi,QWORD PTR [r11+0x40]
   14001ebc9:	mov    rdi,QWORD PTR [r11+0x48]
   14001ebcd:	mov    rsp,r11
   14001ebd0:	pop    r15
   14001ebd2:	pop    r14
   14001ebd4:	pop    r13
   14001ebd6:	pop    r12
   14001ebd8:	pop    rbp
   14001ebd9:	ret    
   14001ebda:	int3   
   14001ebdb:	int3   
   14001ebdc:	mov    QWORD PTR [rsp+0x8],rbx
   14001ebe1:	mov    QWORD PTR [rsp+0x18],rsi
   14001ebe6:	mov    QWORD PTR [rsp+0x20],rdi
   14001ebeb:	push   rbp
   14001ebec:	push   r12
   14001ebee:	push   r13
   14001ebf0:	push   r14
   14001ebf2:	push   r15
   14001ebf4:	mov    rbp,rsp
   14001ebf7:	sub    rsp,0x60
   14001ebfb:	mov    rax,QWORD PTR [rip+0x17e3e]        # 0x140036a40
   14001ec02:	xor    rax,rsp
   14001ec05:	mov    QWORD PTR [rbp-0x8],rax
   14001ec09:	movzx  eax,WORD PTR [rcx+0xa]
   14001ec0d:	movzx  r9d,WORD PTR [rcx]
   14001ec11:	xor    ebx,ebx
   14001ec13:	mov    edi,eax
   14001ec15:	and    eax,0x8000
   14001ec1a:	shl    r9d,0x10
   14001ec1e:	mov    DWORD PTR [rbp-0x3c],eax
   14001ec21:	mov    eax,DWORD PTR [rcx+0x6]
   14001ec24:	and    edi,0x7fff
   14001ec2a:	mov    DWORD PTR [rbp-0x18],eax
   14001ec2d:	mov    eax,DWORD PTR [rcx+0x2]
   14001ec30:	sub    edi,0x3fff
   14001ec36:	mov    r12d,0x1f
   14001ec3c:	mov    QWORD PTR [rbp-0x30],rdx
   14001ec40:	mov    DWORD PTR [rbp-0x28],r9d
   14001ec44:	mov    DWORD PTR [rbp-0x14],eax
   14001ec47:	mov    DWORD PTR [rbp-0x10],r9d
   14001ec4b:	lea    esi,[rbx+0x1]
   14001ec4e:	lea    r14d,[r12-0x1c]
   14001ec53:	cmp    edi,0xffffc001
   14001ec59:	jne    0x14001ec84
   14001ec5b:	mov    r8d,ebx
   14001ec5e:	mov    eax,ebx
   14001ec60:	cmp    DWORD PTR [rbp+rax*4-0x18],ebx
   14001ec64:	jne    0x14001ec73
   14001ec66:	add    rax,rsi
   14001ec69:	cmp    rax,r14
   14001ec6c:	jl     0x14001ec60
   14001ec6e:	jmp    0x14001f12a
   14001ec73:	mov    QWORD PTR [rbp-0x18],rbx
   14001ec77:	mov    DWORD PTR [rbp-0x10],ebx
   14001ec7a:	mov    ebx,0x2
   14001ec7f:	jmp    0x14001f12a
   14001ec84:	mov    rax,QWORD PTR [rbp-0x18]
   14001ec88:	mov    r8d,r12d
   14001ec8b:	or     r15d,0xffffffff
   14001ec8f:	mov    QWORD PTR [rbp-0x20],rax
   14001ec93:	mov    eax,DWORD PTR [rip+0x1890f]        # 0x1400375a8
   14001ec99:	mov    DWORD PTR [rbp-0x40],edi
   14001ec9c:	dec    eax
   14001ec9e:	mov    r13d,ebx
   14001eca1:	mov    DWORD PTR [rbp-0x38],eax
   14001eca4:	inc    eax
   14001eca6:	cdq    
   14001eca7:	and    edx,r12d
   14001ecaa:	add    eax,edx
   14001ecac:	mov    r10d,eax
   14001ecaf:	and    eax,r12d
   14001ecb2:	sar    r10d,0x5
   14001ecb6:	sub    eax,edx
   14001ecb8:	sub    r8d,eax
   14001ecbb:	movsxd r11,r10d
   14001ecbe:	mov    ecx,DWORD PTR [rbp+r11*4-0x18]
   14001ecc3:	mov    DWORD PTR [rbp-0x24],r8d
   14001ecc7:	bt     ecx,r8d
   14001eccb:	jae    0x14001ed6f
   14001ecd1:	mov    ecx,r8d
   14001ecd4:	mov    eax,r15d
   14001ecd7:	movsxd rdx,r10d
   14001ecda:	shl    eax,cl
   14001ecdc:	not    eax
   14001ecde:	test   DWORD PTR [rbp+rdx*4-0x18],eax
   14001ece2:	jne    0x14001ecfd
   14001ece4:	lea    eax,[r10+0x1]
   14001ece8:	movsxd rcx,eax
   14001eceb:	jmp    0x14001ecf6
   14001eced:	cmp    DWORD PTR [rbp+rcx*4-0x18],ebx
   14001ecf1:	jne    0x14001ecfd
   14001ecf3:	add    rcx,rsi
   14001ecf6:	cmp    rcx,r14
   14001ecf9:	jl     0x14001eced
   14001ecfb:	jmp    0x14001ed6f
   14001ecfd:	mov    eax,DWORD PTR [rbp-0x38]
   14001ed00:	mov    ecx,r12d
   14001ed03:	cdq    
   14001ed04:	and    edx,r12d
   14001ed07:	add    eax,edx
   14001ed09:	mov    r8d,eax
   14001ed0c:	and    eax,r12d
   14001ed0f:	sub    eax,edx
   14001ed11:	sar    r8d,0x5
   14001ed15:	mov    edx,esi
   14001ed17:	sub    ecx,eax
   14001ed19:	movsxd r11,r8d
   14001ed1c:	mov    eax,DWORD PTR [rbp+r11*4-0x18]
   14001ed21:	shl    edx,cl
   14001ed23:	lea    ecx,[rax+rdx*1]
   14001ed26:	cmp    ecx,eax
   14001ed28:	jb     0x14001ed2e
   14001ed2a:	cmp    ecx,edx
   14001ed2c:	jae    0x14001ed31
   14001ed2e:	mov    r13d,esi
   14001ed31:	lea    eax,[r8-0x1]
   14001ed35:	mov    DWORD PTR [rbp+r11*4-0x18],ecx
   14001ed3a:	movsxd rdx,eax
   14001ed3d:	test   eax,eax
   14001ed3f:	js     0x14001ed68
   14001ed41:	test   r13d,r13d
   14001ed44:	je     0x14001ed68
   14001ed46:	mov    eax,DWORD PTR [rbp+rdx*4-0x18]
   14001ed4a:	mov    r13d,ebx
   14001ed4d:	lea    r8d,[rax+0x1]
   14001ed51:	cmp    r8d,eax
   14001ed54:	jb     0x14001ed5b
   14001ed56:	cmp    r8d,esi
   14001ed59:	jae    0x14001ed5e
   14001ed5b:	mov    r13d,esi
   14001ed5e:	mov    DWORD PTR [rbp+rdx*4-0x18],r8d
   14001ed63:	sub    rdx,rsi
   14001ed66:	jns    0x14001ed41
   14001ed68:	mov    r8d,DWORD PTR [rbp-0x24]
   14001ed6c:	movsxd r11,r10d
   14001ed6f:	mov    ecx,r8d
   14001ed72:	mov    eax,r15d
   14001ed75:	shl    eax,cl
   14001ed77:	and    DWORD PTR [rbp+r11*4-0x18],eax
   14001ed7c:	lea    eax,[r10+0x1]
   14001ed80:	movsxd rdx,eax
   14001ed83:	cmp    rdx,r14
   14001ed86:	jge    0x14001eda5
   14001ed88:	lea    rcx,[rbp-0x18]
   14001ed8c:	mov    r8,r14
   14001ed8f:	sub    r8,rdx
   14001ed92:	lea    rcx,[rcx+rdx*4]
   14001ed96:	xor    edx,edx
   14001ed98:	shl    r8,0x2
   14001ed9c:	call   0x140007150
   14001eda1:	mov    r9d,DWORD PTR [rbp-0x28]
   14001eda5:	test   r13d,r13d
   14001eda8:	je     0x14001edac
   14001edaa:	add    edi,esi
   14001edac:	mov    ecx,DWORD PTR [rip+0x187f2]        # 0x1400375a4
   14001edb2:	mov    eax,ecx
   14001edb4:	sub    eax,DWORD PTR [rip+0x187ee]        # 0x1400375a8
   14001edba:	cmp    edi,eax
   14001edbc:	jge    0x14001edd2
   14001edbe:	mov    QWORD PTR [rbp-0x18],rbx
   14001edc2:	mov    DWORD PTR [rbp-0x10],ebx
   14001edc5:	mov    r8d,ebx
   14001edc8:	mov    ebx,0x2
   14001edcd:	jmp    0x14001f126
   14001edd2:	cmp    edi,ecx
   14001edd4:	jg     0x14001f00b
   14001edda:	sub    ecx,DWORD PTR [rbp-0x40]
   14001eddd:	mov    rax,QWORD PTR [rbp-0x20]
   14001ede1:	mov    r10d,r15d
   14001ede4:	mov    QWORD PTR [rbp-0x18],rax
   14001ede8:	mov    eax,ecx
   14001edea:	mov    DWORD PTR [rbp-0x10],r9d
   14001edee:	cdq    
   14001edef:	mov    r11,r14
   14001edf2:	mov    r9d,ebx
   14001edf5:	and    edx,r12d
   14001edf8:	lea    r8,[rbp-0x18]
   14001edfc:	add    eax,edx
   14001edfe:	mov    r13d,eax
   14001ee01:	and    eax,r12d
   14001ee04:	sub    eax,edx
   14001ee06:	sar    r13d,0x5
   14001ee0a:	mov    ecx,eax
   14001ee0c:	mov    edi,eax
   14001ee0e:	mov    eax,0x20
   14001ee13:	shl    r10d,cl
   14001ee16:	sub    eax,ecx
   14001ee18:	mov    r14d,eax
   14001ee1b:	not    r10d
   14001ee1e:	mov    eax,DWORD PTR [r8]
   14001ee21:	mov    ecx,edi
   14001ee23:	mov    edx,eax
   14001ee25:	shr    eax,cl
   14001ee27:	mov    ecx,r14d
   14001ee2a:	or     eax,r9d
   14001ee2d:	and    edx,r10d
   14001ee30:	mov    r9d,edx
   14001ee33:	mov    DWORD PTR [r8],eax
   14001ee36:	lea    r8,[r8+0x4]
   14001ee3a:	shl    r9d,cl
   14001ee3d:	sub    r11,rsi
   14001ee40:	jne    0x14001ee1e
   14001ee42:	movsxd r10,r13d
   14001ee45:	lea    edi,[r11+0x2]
   14001ee49:	lea    r14d,[r11+0x3]
   14001ee4d:	mov    r9,r10
   14001ee50:	mov    r8d,edi
   14001ee53:	neg    r9
   14001ee56:	cmp    r8,r10
   14001ee59:	jl     0x14001ee70
   14001ee5b:	mov    rdx,r8
   14001ee5e:	shl    rdx,0x2
   14001ee62:	lea    rax,[rdx+r9*4]
   14001ee66:	mov    ecx,DWORD PTR [rbp+rax*1-0x18]
   14001ee6a:	mov    DWORD PTR [rbp+rdx*1-0x18],ecx
   14001ee6e:	jmp    0x14001ee75
   14001ee70:	mov    DWORD PTR [rbp+r8*4-0x18],ebx
   14001ee75:	sub    r8,rsi
   14001ee78:	jns    0x14001ee56
   14001ee7a:	mov    r8d,DWORD PTR [rbp-0x38]
   14001ee7e:	mov    r11d,r12d
   14001ee81:	lea    eax,[r8+0x1]
   14001ee85:	cdq    
   14001ee86:	and    edx,r12d
   14001ee89:	add    eax,edx
   14001ee8b:	mov    r9d,eax
   14001ee8e:	and    eax,r12d
   14001ee91:	sub    eax,edx
   14001ee93:	sar    r9d,0x5
   14001ee97:	sub    r11d,eax
   14001ee9a:	movsxd rax,r9d
   14001ee9d:	mov    ecx,DWORD PTR [rbp+rax*4-0x18]
   14001eea1:	bt     ecx,r11d
   14001eea5:	jae    0x14001ef43
   14001eeab:	mov    ecx,r11d
   14001eeae:	mov    eax,r15d
   14001eeb1:	movsxd rdx,r9d
   14001eeb4:	shl    eax,cl
   14001eeb6:	not    eax
   14001eeb8:	test   DWORD PTR [rbp+rdx*4-0x18],eax
   14001eebc:	jne    0x14001eed7
   14001eebe:	lea    eax,[r9+0x1]
   14001eec2:	movsxd rcx,eax
   14001eec5:	jmp    0x14001eed0
   14001eec7:	cmp    DWORD PTR [rbp+rcx*4-0x18],ebx
   14001eecb:	jne    0x14001eed7
   14001eecd:	add    rcx,rsi
   14001eed0:	cmp    rcx,r14
   14001eed3:	jl     0x14001eec7
   14001eed5:	jmp    0x14001ef43
   14001eed7:	mov    eax,r8d
   14001eeda:	mov    ecx,r12d
   14001eedd:	cdq    
   14001eede:	and    edx,r12d
   14001eee1:	add    eax,edx
   14001eee3:	mov    r10d,eax
   14001eee6:	and    eax,r12d
   14001eee9:	sub    eax,edx
   14001eeeb:	sar    r10d,0x5
   14001eeef:	mov    edx,esi
   14001eef1:	sub    ecx,eax
   14001eef3:	movsxd r13,r10d
   14001eef6:	mov    eax,DWORD PTR [rbp+r13*4-0x18]
   14001eefb:	shl    edx,cl
   14001eefd:	mov    ecx,ebx
   14001eeff:	lea    r8d,[rax+rdx*1]
   14001ef03:	cmp    r8d,eax
   14001ef06:	jb     0x14001ef0d
   14001ef08:	cmp    r8d,edx
   14001ef0b:	jae    0x14001ef0f
   14001ef0d:	mov    ecx,esi
   14001ef0f:	lea    eax,[r10-0x1]
   14001ef13:	mov    DWORD PTR [rbp+r13*4-0x18],r8d
   14001ef18:	movsxd rdx,eax
   14001ef1b:	test   eax,eax
   14001ef1d:	js     0x14001ef43
   14001ef1f:	test   ecx,ecx
   14001ef21:	je     0x14001ef43
   14001ef23:	mov    eax,DWORD PTR [rbp+rdx*4-0x18]
   14001ef27:	mov    ecx,ebx
   14001ef29:	lea    r8d,[rax+0x1]
   14001ef2d:	cmp    r8d,eax
   14001ef30:	jb     0x14001ef37
   14001ef32:	cmp    r8d,esi
   14001ef35:	jae    0x14001ef39
   14001ef37:	mov    ecx,esi
   14001ef39:	mov    DWORD PTR [rbp+rdx*4-0x18],r8d
   14001ef3e:	sub    rdx,rsi
   14001ef41:	jns    0x14001ef1f
   14001ef43:	mov    ecx,r11d
   14001ef46:	mov    eax,r15d
   14001ef49:	shl    eax,cl
   14001ef4b:	movsxd rcx,r9d
   14001ef4e:	and    DWORD PTR [rbp+rcx*4-0x18],eax
   14001ef52:	lea    eax,[r9+0x1]
   14001ef56:	movsxd rdx,eax
   14001ef59:	cmp    rdx,r14
   14001ef5c:	jge    0x14001ef77
   14001ef5e:	lea    rcx,[rbp-0x18]
   14001ef62:	mov    r8,r14
   14001ef65:	sub    r8,rdx
   14001ef68:	lea    rcx,[rcx+rdx*4]
   14001ef6c:	xor    edx,edx
   14001ef6e:	shl    r8,0x2
   14001ef72:	call   0x140007150
   14001ef77:	mov    eax,DWORD PTR [rip+0x1862f]        # 0x1400375ac
   14001ef7d:	mov    r13d,0x20
   14001ef83:	mov    r9d,ebx
   14001ef86:	inc    eax
   14001ef88:	lea    r8,[rbp-0x18]
   14001ef8c:	cdq    
   14001ef8d:	and    edx,r12d
   14001ef90:	add    eax,edx
   14001ef92:	mov    r10d,eax
   14001ef95:	and    eax,r12d
   14001ef98:	sub    eax,edx
   14001ef9a:	sar    r10d,0x5
   14001ef9e:	mov    ecx,eax
   14001efa0:	mov    r11d,eax
   14001efa3:	shl    r15d,cl
   14001efa6:	sub    r13d,eax
   14001efa9:	not    r15d
   14001efac:	mov    eax,DWORD PTR [r8]
   14001efaf:	mov    ecx,r11d
   14001efb2:	mov    edx,eax
   14001efb4:	shr    eax,cl
   14001efb6:	mov    ecx,r13d
   14001efb9:	or     eax,r9d
   14001efbc:	and    edx,r15d
   14001efbf:	mov    r9d,edx
   14001efc2:	mov    DWORD PTR [r8],eax
   14001efc5:	lea    r8,[r8+0x4]
   14001efc9:	shl    r9d,cl
   14001efcc:	sub    r14,rsi
   14001efcf:	jne    0x14001efac
   14001efd1:	movsxd r10,r10d
   14001efd4:	mov    r8,rdi
   14001efd7:	mov    r9,r10
   14001efda:	neg    r9
   14001efdd:	cmp    r8,r10
   14001efe0:	jl     0x14001eff7
   14001efe2:	mov    rdx,r8
   14001efe5:	shl    rdx,0x2
   14001efe9:	lea    rax,[rdx+r9*4]
   14001efed:	mov    ecx,DWORD PTR [rbp+rax*1-0x18]
   14001eff1:	mov    DWORD PTR [rbp+rdx*1-0x18],ecx
   14001eff5:	jmp    0x14001effc
   14001eff7:	mov    DWORD PTR [rbp+r8*4-0x18],ebx
   14001effc:	sub    r8,rsi
   14001efff:	jns    0x14001efdd
   14001f001:	mov    r8d,ebx
   14001f004:	mov    ebx,edi
   14001f006:	jmp    0x14001f126
   14001f00b:	mov    eax,DWORD PTR [rip+0x1859b]        # 0x1400375ac
   14001f011:	mov    r10d,DWORD PTR [rip+0x18588]        # 0x1400375a0
   14001f018:	mov    r13d,0x20
   14001f01e:	cdq    
   14001f01f:	and    edx,r12d
   14001f022:	add    eax,edx
   14001f024:	mov    r11d,eax
   14001f027:	and    eax,r12d
   14001f02a:	sub    eax,edx
   14001f02c:	sar    r11d,0x5
   14001f030:	mov    ecx,eax
   14001f032:	shl    r15d,cl
   14001f035:	not    r15d
   14001f038:	cmp    edi,r10d
   14001f03b:	jl     0x14001f0b7
   14001f03d:	mov    QWORD PTR [rbp-0x18],rbx
   14001f041:	bts    DWORD PTR [rbp-0x18],0x1f
   14001f046:	mov    DWORD PTR [rbp-0x10],ebx
   14001f049:	sub    r13d,eax
   14001f04c:	mov    edi,eax
   14001f04e:	mov    r9d,ebx
   14001f051:	lea    r8,[rbp-0x18]
   14001f055:	mov    eax,DWORD PTR [r8]
   14001f058:	mov    ecx,edi
   14001f05a:	mov    edx,r15d
   14001f05d:	and    edx,eax
   14001f05f:	shr    eax,cl
   14001f061:	mov    ecx,r13d
   14001f064:	or     eax,r9d
   14001f067:	mov    r9d,edx
   14001f06a:	shl    r9d,cl
   14001f06d:	mov    DWORD PTR [r8],eax
   14001f070:	lea    r8,[r8+0x4]
   14001f074:	sub    r14,rsi
   14001f077:	jne    0x14001f055
   14001f079:	movsxd r9,r11d
   14001f07c:	lea    edi,[r14+0x2]
   14001f080:	mov    r8,r9
   14001f083:	neg    r8
   14001f086:	cmp    rdi,r9
   14001f089:	jl     0x14001f0a0
   14001f08b:	mov    rdx,rdi
   14001f08e:	shl    rdx,0x2
   14001f092:	lea    rax,[rdx+r8*4]
   14001f096:	mov    ecx,DWORD PTR [rbp+rax*1-0x18]
   14001f09a:	mov    DWORD PTR [rbp+rdx*1-0x18],ecx
   14001f09e:	jmp    0x14001f0a4
   14001f0a0:	mov    DWORD PTR [rbp+rdi*4-0x18],ebx
   14001f0a4:	sub    rdi,rsi
   14001f0a7:	jns    0x14001f086
   14001f0a9:	mov    r8d,DWORD PTR [rip+0x18504]        # 0x1400375b4
   14001f0b0:	mov    ebx,esi
   14001f0b2:	add    r8d,r10d
   14001f0b5:	jmp    0x14001f126
   14001f0b7:	mov    r8d,DWORD PTR [rip+0x184f6]        # 0x1400375b4
   14001f0be:	btr    DWORD PTR [rbp-0x18],0x1f
   14001f0c3:	mov    r10d,ebx
   14001f0c6:	add    r8d,edi
   14001f0c9:	mov    edi,eax
   14001f0cb:	sub    r13d,eax
   14001f0ce:	lea    r9,[rbp-0x18]
   14001f0d2:	mov    eax,DWORD PTR [r9]
   14001f0d5:	mov    ecx,edi
   14001f0d7:	mov    edx,eax
   14001f0d9:	shr    eax,cl
   14001f0db:	mov    ecx,r13d
   14001f0de:	or     eax,r10d
   14001f0e1:	and    edx,r15d
   14001f0e4:	mov    r10d,edx
   14001f0e7:	mov    DWORD PTR [r9],eax
   14001f0ea:	lea    r9,[r9+0x4]
   14001f0ee:	shl    r10d,cl
   14001f0f1:	sub    r14,rsi
   14001f0f4:	jne    0x14001f0d2
   14001f0f6:	movsxd r10,r11d
   14001f0f9:	lea    edi,[r14+0x2]
   14001f0fd:	mov    r9,r10
   14001f100:	neg    r9
   14001f103:	cmp    rdi,r10
   14001f106:	jl     0x14001f11d
   14001f108:	mov    rdx,rdi
   14001f10b:	shl    rdx,0x2
   14001f10f:	lea    rax,[rdx+r9*4]
   14001f113:	mov    ecx,DWORD PTR [rbp+rax*1-0x18]
   14001f117:	mov    DWORD PTR [rbp+rdx*1-0x18],ecx
   14001f11b:	jmp    0x14001f121
   14001f11d:	mov    DWORD PTR [rbp+rdi*4-0x18],ebx
   14001f121:	sub    rdi,rsi
   14001f124:	jns    0x14001f103
   14001f126:	mov    rdx,QWORD PTR [rbp-0x30]
   14001f12a:	sub    r12d,DWORD PTR [rip+0x1847b]        # 0x1400375ac
   14001f131:	mov    cl,r12b
   14001f134:	shl    r8d,cl
   14001f137:	neg    DWORD PTR [rbp-0x3c]
   14001f13a:	sbb    eax,eax
   14001f13c:	and    eax,0x80000000
   14001f141:	or     r8d,eax
   14001f144:	mov    eax,DWORD PTR [rip+0x18466]        # 0x1400375b0
   14001f14a:	or     r8d,DWORD PTR [rbp-0x18]
   14001f14e:	cmp    eax,0x40
   14001f151:	jne    0x14001f15e
   14001f153:	mov    eax,DWORD PTR [rbp-0x14]
   14001f156:	mov    DWORD PTR [rdx+0x4],r8d
   14001f15a:	mov    DWORD PTR [rdx],eax
   14001f15c:	jmp    0x14001f166
   14001f15e:	cmp    eax,0x20
   14001f161:	jne    0x14001f166
   14001f163:	mov    DWORD PTR [rdx],r8d
   14001f166:	mov    eax,ebx
   14001f168:	mov    rcx,QWORD PTR [rbp-0x8]
   14001f16c:	xor    rcx,rsp
   14001f16f:	call   0x14000d0a0
   14001f174:	lea    r11,[rsp+0x60]
   14001f179:	mov    rbx,QWORD PTR [r11+0x30]
   14001f17d:	mov    rsi,QWORD PTR [r11+0x40]
   14001f181:	mov    rdi,QWORD PTR [r11+0x48]
   14001f185:	mov    rsp,r11
   14001f188:	pop    r15
   14001f18a:	pop    r14
   14001f18c:	pop    r13
   14001f18e:	pop    r12
   14001f190:	pop    rbp
   14001f191:	ret    
   14001f192:	int3   
   14001f193:	int3   
   14001f194:	mov    QWORD PTR [rsp+0x8],rbx
   14001f199:	mov    QWORD PTR [rsp+0x18],rbp
   14001f19e:	push   rdi
   14001f19f:	sub    rsp,0x20
   14001f1a3:	mov    rax,QWORD PTR [rip+0x17896]        # 0x140036a40
   14001f1aa:	xor    rax,rsp
   14001f1ad:	mov    QWORD PTR [rsp+0x10],rax
   14001f1b2:	movzx  r11d,WORD PTR [rcx+0xa]
   14001f1b7:	movzx  r10d,WORD PTR [rcx]
   14001f1bb:	mov    ebp,0x7fff
   14001f1c0:	lea    eax,[rbp+0x1]
   14001f1c3:	movzx  r9d,r11w
   14001f1c7:	xor    r8d,r8d
   14001f1ca:	shl    r10d,0x10
   14001f1ce:	and    r11w,ax
   14001f1d2:	mov    eax,DWORD PTR [rcx+0x2]
   14001f1d5:	mov    rbx,rdx
   14001f1d8:	mov    edx,DWORD PTR [rcx+0x6]
   14001f1db:	and    r9w,bp
   14001f1df:	mov    DWORD PTR [rsp+0x8],r10d
   14001f1e4:	lea    edi,[r8+0x1]
   14001f1e8:	mov    DWORD PTR [rsp],edx
   14001f1eb:	test   r10d,r10d
   14001f1ee:	jns    0x14001f249
   14001f1f0:	test   r10d,0x7fffffff
   14001f1f7:	je     0x14001f249
   14001f1f9:	lea    edx,[rax+0x1]
   14001f1fc:	mov    ecx,r8d
   14001f1ff:	cmp    edx,eax
   14001f201:	jb     0x14001f207
   14001f203:	cmp    edx,edi
   14001f205:	jae    0x14001f209
   14001f207:	mov    ecx,edi
   14001f209:	mov    DWORD PTR [rsp+0x4],edx
   14001f20d:	mov    rdx,r8
   14001f210:	test   ecx,ecx
   14001f212:	je     0x14001f242
   14001f214:	mov    eax,DWORD PTR [rsp+rdx*4]
   14001f217:	mov    ecx,r8d
   14001f21a:	lea    r10d,[rax+0x1]
   14001f21e:	cmp    r10d,eax
   14001f221:	jb     0x14001f228
   14001f223:	cmp    r10d,edi
   14001f226:	jae    0x14001f22a
   14001f228:	mov    ecx,edi
   14001f22a:	mov    DWORD PTR [rsp+rdx*4],r10d
   14001f22e:	sub    rdx,rdi
   14001f231:	jns    0x14001f210
   14001f233:	test   ecx,ecx
   14001f235:	je     0x14001f242
   14001f237:	mov    edx,0x80000000
   14001f23c:	add    r9w,di
   14001f240:	jmp    0x14001f245
   14001f242:	mov    edx,DWORD PTR [rsp]
   14001f245:	mov    eax,DWORD PTR [rsp+0x4]
   14001f249:	cmp    r9w,bp
   14001f24d:	mov    DWORD PTR [rbx],eax
   14001f24f:	mov    DWORD PTR [rbx+0x4],edx
   14001f252:	cmove  r8d,edi
   14001f256:	or     r11w,r9w
   14001f25a:	mov    WORD PTR [rbx+0x8],r11w
   14001f25f:	mov    eax,r8d
   14001f262:	mov    rcx,QWORD PTR [rsp+0x10]
   14001f267:	xor    rcx,rsp
   14001f26a:	call   0x14000d0a0
   14001f26f:	mov    rbx,QWORD PTR [rsp+0x30]
   14001f274:	mov    rbp,QWORD PTR [rsp+0x40]
   14001f279:	add    rsp,0x20
   14001f27d:	pop    rdi
   14001f27e:	ret    
   14001f27f:	int3   
   14001f280:	mov    QWORD PTR [rsp+0x20],rbx
   14001f285:	push   rdi
   14001f286:	sub    rsp,0x60
   14001f28a:	mov    rax,QWORD PTR [rip+0x177af]        # 0x140036a40
   14001f291:	xor    rax,rsp
   14001f294:	mov    QWORD PTR [rsp+0x50],rax
   14001f299:	mov    rax,QWORD PTR [rsp+0x90]
   14001f2a1:	mov    rbx,rcx
   14001f2a4:	lea    rcx,[rsp+0x40]
   14001f2a9:	mov    QWORD PTR [rsp+0x38],rax
   14001f2ae:	xor    eax,eax
   14001f2b0:	mov    DWORD PTR [rsp+0x30],eax
   14001f2b4:	mov    DWORD PTR [rsp+0x28],eax
   14001f2b8:	mov    DWORD PTR [rsp+0x20],eax
   14001f2bc:	call   0x14001fa34
   14001f2c1:	lea    rcx,[rsp+0x40]
   14001f2c6:	mov    rdx,rbx
   14001f2c9:	mov    edi,eax
   14001f2cb:	call   0x14001f194
   14001f2d0:	cmp    eax,0x1
   14001f2d3:	jne    0x14001f2d8
   14001f2d5:	or     edi,0x2
   14001f2d8:	mov    eax,edi
   14001f2da:	mov    rcx,QWORD PTR [rsp+0x50]
   14001f2df:	xor    rcx,rsp
   14001f2e2:	call   0x14000d0a0
   14001f2e7:	mov    rbx,QWORD PTR [rsp+0x88]
   14001f2ef:	add    rsp,0x60
   14001f2f3:	pop    rdi
   14001f2f4:	ret    
   14001f2f5:	int3   
   14001f2f6:	int3   
   14001f2f7:	int3   
   14001f2f8:	mov    QWORD PTR [rsp+0x10],rbx
   14001f2fd:	mov    QWORD PTR [rsp+0x18],rsi
   14001f302:	mov    QWORD PTR [rsp+0x20],rdi
   14001f307:	push   rbp
   14001f308:	push   r12
   14001f30a:	push   r13
   14001f30c:	push   r14
   14001f30e:	push   r15
   14001f310:	mov    rbp,rsp
   14001f313:	sub    rsp,0x30
   14001f317:	mov    rax,QWORD PTR [rip+0x17722]        # 0x140036a40
   14001f31e:	xor    rax,rsp
   14001f321:	mov    QWORD PTR [rbp-0x10],rax
   14001f325:	movzx  eax,WORD PTR [rdx+0xa]
   14001f329:	xor    r12d,r12d
   14001f32c:	mov    r8,rcx
   14001f32f:	mov    QWORD PTR [rbp-0x28],rcx
   14001f333:	movzx  ecx,WORD PTR [rcx+0xa]
   14001f337:	movzx  esi,ax
   14001f33a:	xor    si,cx
   14001f33d:	mov    rdi,rdx
   14001f340:	mov    edx,0x8000
   14001f345:	and    si,dx
   14001f348:	mov    edx,0x7fff
   14001f34d:	mov    DWORD PTR [rbp-0x2c],r12d
   14001f351:	and    cx,dx
   14001f354:	and    ax,dx
   14001f357:	mov    QWORD PTR [rbp-0x20],r12
   14001f35b:	lea    r9d,[rcx+rax*1]
   14001f35f:	mov    DWORD PTR [rbp-0x18],r12d
   14001f363:	mov    WORD PTR [rbp-0x2e],si
   14001f367:	mov    WORD PTR [rbp-0x30],r9w
   14001f36c:	cmp    cx,dx
   14001f36f:	jae    0x14001f5e4
   14001f375:	cmp    ax,dx
   14001f378:	jae    0x14001f5e4
   14001f37e:	mov    edx,0xbffd
   14001f383:	cmp    r9w,dx
   14001f387:	ja     0x14001f5e4
   14001f38d:	mov    edx,0x3fbf
   14001f392:	cmp    r9w,dx
   14001f396:	ja     0x14001f3a4
   14001f398:	mov    QWORD PTR [r8+0x4],r12
   14001f39c:	mov    DWORD PTR [r8],r12d
   14001f39f:	jmp    0x14001f5fc
   14001f3a4:	mov    edx,0x7fffffff
   14001f3a9:	mov    r14d,0x1
   14001f3af:	test   cx,cx
   14001f3b2:	jne    0x14001f3d8
   14001f3b4:	add    r9w,r14w
   14001f3b8:	mov    WORD PTR [rbp-0x30],r9w
   14001f3bd:	test   DWORD PTR [r8+0x8],edx
   14001f3c1:	jne    0x14001f3d8
   14001f3c3:	cmp    DWORD PTR [r8+0x4],r12d
   14001f3c7:	jne    0x14001f3d8
   14001f3c9:	cmp    DWORD PTR [r8],r12d
   14001f3cc:	jne    0x14001f3d8
   14001f3ce:	mov    WORD PTR [r8+0xa],r12w
   14001f3d3:	jmp    0x14001f5fc
   14001f3d8:	test   ax,ax
   14001f3db:	jne    0x14001f3f6
   14001f3dd:	add    r9w,r14w
   14001f3e1:	mov    WORD PTR [rbp-0x30],r9w
   14001f3e6:	test   DWORD PTR [rdi+0x8],edx
   14001f3e9:	jne    0x14001f3f6
   14001f3eb:	cmp    DWORD PTR [rdi+0x4],r12d
   14001f3ef:	jne    0x14001f3f6
   14001f3f1:	cmp    DWORD PTR [rdi],r12d
   14001f3f4:	je     0x14001f398
   14001f3f6:	mov    r10d,0x5
   14001f3fc:	mov    r14d,r12d
   14001f3ff:	lea    rdx,[rbp-0x20]
   14001f403:	lea    r9d,[r10-0x4]
   14001f407:	mov    r15d,r10d
   14001f40a:	test   r10d,r10d
   14001f40d:	jle    0x14001f462
   14001f40f:	lea    eax,[r14+r14*1]
   14001f413:	mov    esi,r14d
   14001f416:	lea    r12,[rdi+0x8]
   14001f41a:	movsxd r13,eax
   14001f41d:	and    esi,r9d
   14001f420:	add    r13,r8
   14001f423:	movzx  eax,WORD PTR [r13+0x0]
   14001f428:	movzx  ecx,WORD PTR [r12]
   14001f42d:	xor    r11d,r11d
   14001f430:	imul   ecx,eax
   14001f433:	mov    eax,DWORD PTR [rdx]
   14001f435:	lea    ebx,[rax+rcx*1]
   14001f438:	cmp    ebx,eax
   14001f43a:	jb     0x14001f440
   14001f43c:	cmp    ebx,ecx
   14001f43e:	jae    0x14001f443
   14001f440:	mov    r11d,r9d
   14001f443:	mov    DWORD PTR [rdx],ebx
   14001f445:	test   r11d,r11d
   14001f448:	je     0x14001f44f
   14001f44a:	add    WORD PTR [rdx+0x4],r9w
   14001f44f:	sub    r15d,r9d
   14001f452:	add    r13,0x2
   14001f456:	sub    r12,0x2
   14001f45a:	test   r15d,r15d
   14001f45d:	jg     0x14001f423
   14001f45f:	xor    r12d,r12d
   14001f462:	sub    r10d,r9d
   14001f465:	add    rdx,0x2
   14001f469:	add    r14d,r9d
   14001f46c:	test   r10d,r10d
   14001f46f:	jg     0x14001f407
   14001f471:	movzx  r9d,WORD PTR [rbp-0x30]
   14001f476:	mov    r10d,DWORD PTR [rbp-0x18]
   14001f47a:	mov    r11d,DWORD PTR [rbp-0x20]
   14001f47e:	mov    eax,0xc002
   14001f483:	mov    ebx,0x80000000
   14001f488:	mov    r15d,0xffff
   14001f48e:	add    r9w,ax
   14001f492:	test   r9w,r9w
   14001f496:	jle    0x14001f4d4
   14001f498:	test   ebx,r10d
   14001f49b:	jne    0x14001f4ce
   14001f49d:	mov    edi,DWORD PTR [rbp-0x1c]
   14001f4a0:	mov    edx,r11d
   14001f4a3:	add    r10d,r10d
   14001f4a6:	shr    edx,0x1f
   14001f4a9:	add    r11d,r11d
   14001f4ac:	mov    ecx,edi
   14001f4ae:	shr    ecx,0x1f
   14001f4b1:	lea    eax,[rdi+rdi*1]
   14001f4b4:	add    r9w,r15w
   14001f4b8:	or     eax,edx
   14001f4ba:	or     r10d,ecx
   14001f4bd:	mov    DWORD PTR [rbp-0x20],r11d
   14001f4c1:	mov    DWORD PTR [rbp-0x1c],eax
   14001f4c4:	mov    DWORD PTR [rbp-0x18],r10d
   14001f4c8:	test   r9w,r9w
   14001f4cc:	jg     0x14001f498
   14001f4ce:	test   r9w,r9w
   14001f4d2:	jg     0x14001f541
   14001f4d4:	add    r9w,r15w
   14001f4d8:	mov    r14d,0x1
   14001f4de:	jns    0x14001f547
   14001f4e0:	mov    r8d,DWORD PTR [rbp-0x2c]
   14001f4e4:	movzx  eax,r9w
   14001f4e8:	neg    ax
   14001f4eb:	movzx  edx,ax
   14001f4ee:	add    r9w,dx
   14001f4f2:	test   BYTE PTR [rbp-0x20],r14b
   14001f4f6:	je     0x14001f4fb
   14001f4f8:	add    r8d,r14d
   14001f4fb:	mov    edi,DWORD PTR [rbp-0x1c]
   14001f4fe:	mov    eax,r10d
   14001f501:	shr    r11d,1
   14001f504:	mov    ecx,edi
   14001f506:	shl    eax,0x1f
   14001f509:	shr    edi,1
   14001f50b:	shl    ecx,0x1f
   14001f50e:	or     edi,eax
   14001f510:	shr    r10d,1
   14001f513:	or     r11d,ecx
   14001f516:	mov    DWORD PTR [rbp-0x1c],edi
   14001f519:	mov    DWORD PTR [rbp-0x20],r11d
   14001f51d:	sub    rdx,r14
   14001f520:	jne    0x14001f4f2
   14001f522:	test   r8d,r8d
   14001f525:	mov    r8,QWORD PTR [rbp-0x28]
   14001f529:	mov    DWORD PTR [rbp-0x18],r10d
   14001f52d:	je     0x14001f547
   14001f52f:	movzx  eax,r11w
   14001f533:	or     ax,r14w
   14001f537:	mov    WORD PTR [rbp-0x20],ax
   14001f53b:	mov    r11d,DWORD PTR [rbp-0x20]
   14001f53f:	jmp    0x14001f54b
   14001f541:	mov    r14d,0x1
   14001f547:	movzx  eax,WORD PTR [rbp-0x20]
   14001f54b:	movzx  esi,WORD PTR [rbp-0x2e]
   14001f54f:	mov    edx,0x8000
   14001f554:	cmp    ax,dx
   14001f557:	ja     0x14001f569
   14001f559:	and    r11d,0x1ffff
   14001f560:	cmp    r11d,0x18000
   14001f567:	jne    0x14001f5b2
   14001f569:	mov    eax,DWORD PTR [rbp-0x1e]
   14001f56c:	or     ecx,0xffffffff
   14001f56f:	cmp    eax,ecx
   14001f571:	jne    0x14001f5ac
   14001f573:	mov    eax,DWORD PTR [rbp-0x1a]
   14001f576:	mov    DWORD PTR [rbp-0x1e],r12d
   14001f57a:	cmp    eax,ecx
   14001f57c:	jne    0x14001f5a0
   14001f57e:	movzx  eax,WORD PTR [rbp-0x16]
   14001f582:	mov    DWORD PTR [rbp-0x1a],r12d
   14001f586:	cmp    ax,r15w
   14001f58a:	jne    0x14001f596
   14001f58c:	mov    WORD PTR [rbp-0x16],dx
   14001f590:	add    r9w,r14w
   14001f594:	jmp    0x14001f5a6
   14001f596:	add    ax,r14w
   14001f59a:	mov    WORD PTR [rbp-0x16],ax
   14001f59e:	jmp    0x14001f5a6
   14001f5a0:	add    eax,r14d
   14001f5a3:	mov    DWORD PTR [rbp-0x1a],eax
   14001f5a6:	mov    r10d,DWORD PTR [rbp-0x18]
   14001f5aa:	jmp    0x14001f5b2
   14001f5ac:	add    eax,r14d
   14001f5af:	mov    DWORD PTR [rbp-0x1e],eax
   14001f5b2:	mov    eax,0x7fff
   14001f5b7:	cmp    r9w,ax
   14001f5bb:	jb     0x14001f5c6
   14001f5bd:	mov    QWORD PTR [r8],0x0
   14001f5c4:	jmp    0x14001f5ec
   14001f5c6:	movzx  eax,WORD PTR [rbp-0x1e]
   14001f5ca:	or     r9w,si
   14001f5ce:	mov    DWORD PTR [r8+0x6],r10d
   14001f5d2:	mov    WORD PTR [r8],ax
   14001f5d6:	mov    eax,DWORD PTR [rbp-0x1c]
   14001f5d9:	mov    WORD PTR [r8+0xa],r9w
   14001f5de:	mov    DWORD PTR [r8+0x2],eax
   14001f5e2:	jmp    0x14001f5fc
   14001f5e4:	mov    ebx,0x80000000
   14001f5e9:	mov    QWORD PTR [r8],r12
   14001f5ec:	neg    si
   14001f5ef:	sbb    eax,eax
   14001f5f1:	and    eax,ebx
   14001f5f3:	add    eax,0x7fff8000
   14001f5f8:	mov    DWORD PTR [r8+0x8],eax
   14001f5fc:	mov    rcx,QWORD PTR [rbp-0x10]
   14001f600:	xor    rcx,rsp
   14001f603:	call   0x14000d0a0
   14001f608:	mov    rbx,QWORD PTR [rsp+0x68]
   14001f60d:	mov    rsi,QWORD PTR [rsp+0x70]
   14001f612:	mov    rdi,QWORD PTR [rsp+0x78]
   14001f617:	add    rsp,0x30
   14001f61b:	pop    r15
   14001f61d:	pop    r14
   14001f61f:	pop    r13
   14001f621:	pop    r12
   14001f623:	pop    rbp
   14001f624:	ret    
   14001f625:	int3   
   14001f626:	int3   
   14001f627:	int3   
   14001f628:	test   edx,edx
   14001f62a:	je     0x14001f9db
   14001f630:	mov    QWORD PTR [rsp+0x10],rbx
   14001f635:	mov    QWORD PTR [rsp+0x18],rsi
   14001f63a:	mov    QWORD PTR [rsp+0x20],rdi
   14001f63f:	push   rbp
   14001f640:	push   r12
   14001f642:	push   r13
   14001f644:	push   r14
   14001f646:	push   r15
   14001f648:	mov    rbp,rsp
   14001f64b:	sub    rsp,0x50
   14001f64f:	mov    rax,QWORD PTR [rip+0x173ea]        # 0x140036a40
   14001f656:	xor    rax,rsp
   14001f659:	mov    QWORD PTR [rbp-0x8],rax
   14001f65d:	lea    r14,[rip+0x17f5c]        # 0x1400375c0
   14001f664:	xor    edi,edi
   14001f666:	mov    ebx,edx
   14001f668:	sub    r14,0x60
   14001f66c:	mov    r9,rcx
   14001f66f:	mov    QWORD PTR [rbp-0x40],rcx
   14001f673:	test   edx,edx
   14001f675:	jns    0x14001f684
   14001f677:	lea    r14,[rip+0x180a2]        # 0x140037720
   14001f67e:	neg    ebx
   14001f680:	sub    r14,0x60
   14001f684:	test   r8d,r8d
   14001f687:	jne    0x14001f68c
   14001f689:	mov    WORD PTR [rcx],di
   14001f68c:	test   ebx,ebx
   14001f68e:	je     0x14001f9b2
   14001f694:	mov    r15d,0x8000
   14001f69a:	mov    esi,0x1
   14001f69f:	lea    r11d,[r15-0x1]
   14001f6a3:	mov    eax,ebx
   14001f6a5:	add    r14,0x54
   14001f6a9:	sar    ebx,0x3
   14001f6ac:	mov    DWORD PTR [rbp-0x48],ebx
   14001f6af:	mov    QWORD PTR [rbp-0x38],r14
   14001f6b3:	and    eax,0x7
   14001f6b6:	je     0x14001f9aa
   14001f6bc:	cdqe   
   14001f6be:	lea    rcx,[rax+rax*2]
   14001f6c2:	lea    rdx,[r14+rcx*4]
   14001f6c6:	cmp    WORD PTR [rdx],r15w
   14001f6ca:	jb     0x14001f6ec
   14001f6cc:	mov    eax,DWORD PTR [rdx+0x8]
   14001f6cf:	movsd  xmm0,QWORD PTR [rdx]
   14001f6d3:	lea    rdx,[rbp-0x18]
   14001f6d7:	mov    DWORD PTR [rbp-0x10],eax
   14001f6da:	movsd  QWORD PTR [rbp-0x18],xmm0
   14001f6df:	mov    rax,QWORD PTR [rbp-0x18]
   14001f6e3:	shr    rax,0x10
   14001f6e7:	sub    eax,esi
   14001f6e9:	mov    DWORD PTR [rbp-0x16],eax
   14001f6ec:	movzx  ecx,WORD PTR [rdx+0xa]
   14001f6f0:	movzx  eax,WORD PTR [r9+0xa]
   14001f6f5:	mov    DWORD PTR [rbp-0x4c],edi
   14001f6f8:	movzx  r10d,cx
   14001f6fc:	and    cx,r11w
   14001f700:	mov    QWORD PTR [rbp-0x28],0x0
   14001f708:	xor    r10w,ax
   14001f70c:	and    ax,r11w
   14001f710:	mov    DWORD PTR [rbp-0x20],edi
   14001f713:	and    r10w,r15w
   14001f717:	lea    r8d,[rax+rcx*1]
   14001f71b:	mov    WORD PTR [rbp-0x50],r10w
   14001f720:	cmp    ax,r11w
   14001f724:	jae    0x14001f98f
   14001f72a:	cmp    cx,r11w
   14001f72e:	jae    0x14001f98f
   14001f734:	mov    r11d,0xbffd
   14001f73a:	cmp    r8w,r11w
   14001f73e:	ja     0x14001f989
   14001f744:	mov    r10d,0x3fbf
   14001f74a:	cmp    r8w,r10w
   14001f74e:	ja     0x14001f766
   14001f750:	mov    QWORD PTR [r9+0x4],0x0
   14001f758:	mov    DWORD PTR [r9],edi
   14001f75b:	mov    r11d,0x7fff
   14001f761:	jmp    0x14001f9aa
   14001f766:	test   ax,ax
   14001f769:	jne    0x14001f78b
   14001f76b:	add    r8w,si
   14001f76f:	test   DWORD PTR [r9+0x8],0x7fffffff
   14001f777:	jne    0x14001f78b
   14001f779:	cmp    DWORD PTR [r9+0x4],edi
   14001f77d:	jne    0x14001f78b
   14001f77f:	cmp    DWORD PTR [r9],edi
   14001f782:	jne    0x14001f78b
   14001f784:	mov    WORD PTR [r9+0xa],di
   14001f789:	jmp    0x14001f75b
   14001f78b:	test   cx,cx
   14001f78e:	jne    0x14001f7a6
   14001f790:	add    r8w,si
   14001f794:	test   DWORD PTR [rdx+0x8],0x7fffffff
   14001f79b:	jne    0x14001f7a6
   14001f79d:	cmp    DWORD PTR [rdx+0x4],edi
   14001f7a0:	jne    0x14001f7a6
   14001f7a2:	cmp    DWORD PTR [rdx],edi
   14001f7a4:	je     0x14001f750
   14001f7a6:	xor    r14d,r14d
   14001f7a9:	lea    r10,[rbp-0x28]
   14001f7ad:	lea    r11d,[r14+0x5]
   14001f7b1:	mov    r15d,r14d
   14001f7b4:	mov    r12d,r11d
   14001f7b7:	test   r11d,r11d
   14001f7ba:	jle    0x14001f818
   14001f7bc:	lea    eax,[r15+r15*1]
   14001f7c0:	mov    ebx,r15d
   14001f7c3:	lea    r13,[rdx+0x8]
   14001f7c7:	cdqe   
   14001f7c9:	and    ebx,esi
   14001f7cb:	add    rax,r9
   14001f7ce:	mov    r9,rax
   14001f7d1:	movzx  eax,WORD PTR [r13+0x0]
   14001f7d6:	movzx  ecx,WORD PTR [r9]
   14001f7da:	mov    esi,r14d
   14001f7dd:	imul   ecx,eax
   14001f7e0:	mov    eax,DWORD PTR [r10]
   14001f7e3:	lea    edi,[rax+rcx*1]
   14001f7e6:	cmp    edi,eax
   14001f7e8:	jb     0x14001f7ee
   14001f7ea:	cmp    edi,ecx
   14001f7ec:	jae    0x14001f7f3
   14001f7ee:	mov    esi,0x1
   14001f7f3:	test   esi,esi
   14001f7f5:	mov    DWORD PTR [r10],edi
   14001f7f8:	mov    esi,0x1
   14001f7fd:	je     0x14001f804
   14001f7ff:	add    WORD PTR [r10+0x4],si
   14001f804:	sub    r12d,esi
   14001f807:	add    r9,0x2
   14001f80b:	sub    r13,0x2
   14001f80f:	test   r12d,r12d
   14001f812:	jg     0x14001f7d1
   14001f814:	mov    r9,QWORD PTR [rbp-0x40]
   14001f818:	sub    r11d,esi
   14001f81b:	add    r10,0x2
   14001f81f:	add    r15d,esi
   14001f822:	test   r11d,r11d
   14001f825:	jg     0x14001f7b4
   14001f827:	mov    r10d,DWORD PTR [rbp-0x20]
   14001f82b:	mov    r11d,DWORD PTR [rbp-0x28]
   14001f82f:	mov    eax,0xc002
   14001f834:	add    r8w,ax
   14001f838:	mov    r12d,0xffff
   14001f83e:	test   r8w,r8w
   14001f842:	jle    0x14001f880
   14001f844:	test   r10d,r10d
   14001f847:	js     0x14001f87a
   14001f849:	mov    edi,DWORD PTR [rbp-0x24]
   14001f84c:	mov    edx,r11d
   14001f84f:	add    r10d,r10d
   14001f852:	shr    edx,0x1f
   14001f855:	add    r11d,r11d
   14001f858:	mov    ecx,edi
   14001f85a:	shr    ecx,0x1f
   14001f85d:	lea    eax,[rdi+rdi*1]
   14001f860:	add    r8w,r12w
   14001f864:	or     eax,edx
   14001f866:	or     r10d,ecx
   14001f869:	mov    DWORD PTR [rbp-0x28],r11d
   14001f86d:	mov    DWORD PTR [rbp-0x24],eax
   14001f870:	mov    DWORD PTR [rbp-0x20],r10d
   14001f874:	test   r8w,r8w
   14001f878:	jg     0x14001f844
   14001f87a:	test   r8w,r8w
   14001f87e:	jg     0x14001f8e6
   14001f880:	add    r8w,r12w
   14001f884:	jns    0x14001f8e6
   14001f886:	mov    r9d,DWORD PTR [rbp-0x4c]
   14001f88a:	movzx  eax,r8w
   14001f88e:	neg    ax
   14001f891:	movzx  edx,ax
   14001f894:	add    r8w,dx
   14001f898:	test   BYTE PTR [rbp-0x28],sil
   14001f89c:	je     0x14001f8a1
   14001f89e:	add    r9d,esi
   14001f8a1:	mov    edi,DWORD PTR [rbp-0x24]
   14001f8a4:	mov    eax,r10d
   14001f8a7:	shr    r11d,1
   14001f8aa:	mov    ecx,edi
   14001f8ac:	shl    eax,0x1f
   14001f8af:	shr    edi,1
   14001f8b1:	shl    ecx,0x1f
   14001f8b4:	or     edi,eax
   14001f8b6:	shr    r10d,1
   14001f8b9:	or     r11d,ecx
   14001f8bc:	mov    DWORD PTR [rbp-0x24],edi
   14001f8bf:	mov    DWORD PTR [rbp-0x28],r11d
   14001f8c3:	sub    rdx,rsi
   14001f8c6:	jne    0x14001f898
   14001f8c8:	test   r9d,r9d
   14001f8cb:	mov    r9,QWORD PTR [rbp-0x40]
   14001f8cf:	mov    DWORD PTR [rbp-0x20],r10d
   14001f8d3:	je     0x14001f8e6
   14001f8d5:	movzx  eax,r11w
   14001f8d9:	or     ax,si
   14001f8dc:	mov    WORD PTR [rbp-0x28],ax
   14001f8e0:	mov    r11d,DWORD PTR [rbp-0x28]
   14001f8e4:	jmp    0x14001f8ea
   14001f8e6:	movzx  eax,WORD PTR [rbp-0x28]
   14001f8ea:	mov    ebx,DWORD PTR [rbp-0x48]
   14001f8ed:	mov    r14,QWORD PTR [rbp-0x38]
   14001f8f1:	mov    r15d,0x8000
   14001f8f7:	cmp    ax,r15w
   14001f8fb:	ja     0x14001f90d
   14001f8fd:	and    r11d,0x1ffff
   14001f904:	cmp    r11d,0x18000
   14001f90b:	jne    0x14001f953
   14001f90d:	mov    eax,DWORD PTR [rbp-0x26]
   14001f910:	cmp    eax,0xffffffff
   14001f913:	jne    0x14001f94e
   14001f915:	mov    eax,DWORD PTR [rbp-0x22]
   14001f918:	xor    edi,edi
   14001f91a:	mov    DWORD PTR [rbp-0x26],edi
   14001f91d:	cmp    eax,0xffffffff
   14001f920:	jne    0x14001f943
   14001f922:	movzx  eax,WORD PTR [rbp-0x1e]
   14001f926:	mov    DWORD PTR [rbp-0x22],edi
   14001f929:	cmp    ax,r12w
   14001f92d:	jne    0x14001f93a
   14001f92f:	mov    WORD PTR [rbp-0x1e],r15w
   14001f934:	add    r8w,si
   14001f938:	jmp    0x14001f948
   14001f93a:	add    ax,si
   14001f93d:	mov    WORD PTR [rbp-0x1e],ax
   14001f941:	jmp    0x14001f948
   14001f943:	add    eax,esi
   14001f945:	mov    DWORD PTR [rbp-0x22],eax
   14001f948:	mov    r10d,DWORD PTR [rbp-0x20]
   14001f94c:	jmp    0x14001f955
   14001f94e:	add    eax,esi
   14001f950:	mov    DWORD PTR [rbp-0x26],eax
   14001f953:	xor    edi,edi
   14001f955:	mov    r11d,0x7fff
   14001f95b:	cmp    r8w,r11w
   14001f95f:	jb     0x14001f96a
   14001f961:	movzx  eax,WORD PTR [rbp-0x50]
   14001f965:	neg    ax
   14001f968:	jmp    0x14001f993
   14001f96a:	movzx  eax,WORD PTR [rbp-0x26]
   14001f96e:	or     r8w,WORD PTR [rbp-0x50]
   14001f973:	mov    DWORD PTR [r9+0x6],r10d
   14001f977:	mov    WORD PTR [r9],ax
   14001f97b:	mov    eax,DWORD PTR [rbp-0x24]
   14001f97e:	mov    WORD PTR [r9+0xa],r8w
   14001f983:	mov    DWORD PTR [r9+0x2],eax
   14001f987:	jmp    0x14001f9aa
   14001f989:	mov    r11d,0x7fff
   14001f98f:	neg    r10w
   14001f993:	sbb    eax,eax
   14001f995:	mov    QWORD PTR [r9],0x0
   14001f99c:	and    eax,0x80000000
   14001f9a1:	add    eax,0x7fff8000
   14001f9a6:	mov    DWORD PTR [r9+0x8],eax
   14001f9aa:	test   ebx,ebx
   14001f9ac:	jne    0x14001f6a3
   14001f9b2:	mov    rcx,QWORD PTR [rbp-0x8]
   14001f9b6:	xor    rcx,rsp
   14001f9b9:	call   0x14000d0a0
   14001f9be:	lea    r11,[rsp+0x50]
   14001f9c3:	mov    rbx,QWORD PTR [r11+0x38]
   14001f9c7:	mov    rsi,QWORD PTR [r11+0x40]
   14001f9cb:	mov    rdi,QWORD PTR [r11+0x48]
   14001f9cf:	mov    rsp,r11
   14001f9d2:	pop    r15
   14001f9d4:	pop    r14
   14001f9d6:	pop    r13
   14001f9d8:	pop    r12
   14001f9da:	pop    rbp
   14001f9db:	ret    
   14001f9dc:	mov    eax,DWORD PTR [rcx]
   14001f9de:	mov    edx,DWORD PTR [rcx+0x4]
   14001f9e1:	mov    r8d,eax
   14001f9e4:	add    eax,eax
   14001f9e6:	mov    r9d,edx
   14001f9e9:	mov    DWORD PTR [rcx],eax
   14001f9eb:	lea    eax,[rdx+rdx*1]
   14001f9ee:	shr    r8d,0x1f
   14001f9f2:	or     eax,r8d
   14001f9f5:	shr    r9d,0x1f
   14001f9f9:	mov    DWORD PTR [rcx+0x4],eax
   14001f9fc:	mov    eax,DWORD PTR [rcx+0x8]
   14001f9ff:	add    eax,eax
   14001fa01:	or     eax,r9d
   14001fa04:	mov    DWORD PTR [rcx+0x8],eax
   14001fa07:	ret    
   14001fa08:	mov    eax,DWORD PTR [rcx+0x8]
   14001fa0b:	mov    edx,DWORD PTR [rcx+0x4]
   14001fa0e:	mov    r8d,eax
   14001fa11:	shr    eax,1
   14001fa13:	mov    r9d,edx
   14001fa16:	mov    DWORD PTR [rcx+0x8],eax
   14001fa19:	mov    eax,DWORD PTR [rcx]
   14001fa1b:	shl    r8d,0x1f
   14001fa1f:	shl    r9d,0x1f
   14001fa23:	shr    edx,1
   14001fa25:	shr    eax,1
   14001fa27:	or     eax,r9d
   14001fa2a:	or     edx,r8d
   14001fa2d:	mov    DWORD PTR [rcx],eax
   14001fa2f:	mov    DWORD PTR [rcx+0x4],edx
   14001fa32:	ret    
   14001fa33:	int3   
   14001fa34:	mov    QWORD PTR [rsp+0x18],rbx
   14001fa39:	push   rbp
   14001fa3a:	push   rsi
   14001fa3b:	push   rdi
   14001fa3c:	push   r12
   14001fa3e:	push   r13
   14001fa40:	push   r14
   14001fa42:	push   r15
   14001fa44:	lea    rbp,[rsp-0x7]
   14001fa49:	sub    rsp,0xa0
   14001fa50:	mov    rax,QWORD PTR [rip+0x16fe9]        # 0x140036a40
   14001fa57:	xor    rax,rsp
   14001fa5a:	mov    QWORD PTR [rbp-0x1],rax
   14001fa5e:	mov    r14,QWORD PTR [rbp+0x7f]
   14001fa62:	xor    ebx,ebx
   14001fa64:	mov    DWORD PTR [rbp-0x6d],r9d
   14001fa68:	lea    r9d,[rbx+0x1]
   14001fa6c:	mov    QWORD PTR [rbp-0x59],rcx
   14001fa70:	mov    QWORD PTR [rbp-0x69],rdx
   14001fa74:	lea    r10,[rbp-0x21]
   14001fa78:	mov    WORD PTR [rbp-0x71],bx
   14001fa7c:	mov    r11d,ebx
   14001fa7f:	mov    DWORD PTR [rbp-0x75],r9d
   14001fa83:	mov    r15d,ebx
   14001fa86:	mov    DWORD PTR [rbp-0x79],ebx
   14001fa89:	mov    r12d,ebx
   14001fa8c:	mov    r13d,ebx
   14001fa8f:	mov    esi,ebx
   14001fa91:	mov    ecx,ebx
   14001fa93:	test   r14,r14
   14001fa96:	jne    0x14001faaf
   14001fa98:	call   0x1400095b8
   14001fa9d:	mov    DWORD PTR [rax],0x16
   14001faa3:	call   0x140008628
   14001faa8:	xor    eax,eax
   14001faaa:	jmp    0x14002026e
   14001faaf:	mov    rdi,r8
   14001fab2:	cmp    BYTE PTR [r8],0x20
   14001fab6:	ja     0x14001fad1
   14001fab8:	movsx  rax,BYTE PTR [r8]
   14001fabc:	movabs rdx,0x100002600
   14001fac6:	bt     rdx,rax
   14001faca:	jae    0x14001fad1
   14001facc:	add    r8,r9
   14001facf:	jmp    0x14001fab2
   14001fad1:	mov    dl,BYTE PTR [r8]
   14001fad4:	add    r8,r9
   14001fad7:	cmp    ecx,0x5
   14001fada:	jg     0x14001fcea
   14001fae0:	je     0x14001fcd0
   14001fae6:	mov    r9d,ecx
   14001fae9:	test   ecx,ecx
   14001faeb:	je     0x14001fc74
   14001faf1:	dec    r9d
   14001faf4:	je     0x14001fc34
   14001fafa:	dec    r9d
   14001fafd:	je     0x14001fbe2
   14001fb03:	dec    r9d
   14001fb06:	je     0x14001fb95
   14001fb0c:	dec    r9d
   14001fb0f:	jne    0x14001fdaf
   14001fb15:	mov    r9d,0x1
   14001fb1b:	mov    al,0x30
   14001fb1d:	mov    r15d,r9d
   14001fb20:	mov    DWORD PTR [rbp-0x79],r9d
   14001fb24:	test   r11d,r11d
   14001fb27:	jne    0x14001fb59
   14001fb29:	jmp    0x14001fb34
   14001fb2b:	mov    dl,BYTE PTR [r8]
   14001fb2e:	sub    esi,r9d
   14001fb31:	add    r8,r9
   14001fb34:	cmp    dl,al
   14001fb36:	je     0x14001fb2b
   14001fb38:	jmp    0x14001fb59
   14001fb3a:	cmp    dl,0x39
   14001fb3d:	jg     0x14001fb5d
   14001fb3f:	cmp    r11d,0x19
   14001fb43:	jae    0x14001fb53
   14001fb45:	sub    dl,al
   14001fb47:	add    r11d,r9d
   14001fb4a:	mov    BYTE PTR [r10],dl
   14001fb4d:	add    r10,r9
   14001fb50:	sub    esi,r9d
   14001fb53:	mov    dl,BYTE PTR [r8]
   14001fb56:	add    r8,r9
   14001fb59:	cmp    dl,al
   14001fb5b:	jge    0x14001fb3a
   14001fb5d:	lea    eax,[rdx-0x2b]
   14001fb60:	test   al,0xfd
   14001fb62:	je     0x14001fb88
   14001fb64:	cmp    dl,0x43
   14001fb67:	jle    0x14001fca9
   14001fb6d:	cmp    dl,0x45
   14001fb70:	jle    0x14001fb7e
   14001fb72:	sub    dl,0x64
   14001fb75:	cmp    dl,r9b
   14001fb78:	ja     0x14001fca9
   14001fb7e:	mov    ecx,0x6
   14001fb83:	jmp    0x14001fad1
   14001fb88:	sub    r8,r9
   14001fb8b:	mov    ecx,0xb
   14001fb90:	jmp    0x14001fad1
   14001fb95:	mov    r9d,0x1
   14001fb9b:	mov    al,0x30
   14001fb9d:	mov    r15d,r9d
   14001fba0:	jmp    0x14001fbc3
   14001fba2:	cmp    dl,0x39
   14001fba5:	jg     0x14001fbc7
   14001fba7:	cmp    r11d,0x19
   14001fbab:	jae    0x14001fbba
   14001fbad:	sub    dl,al
   14001fbaf:	add    r11d,r9d
   14001fbb2:	mov    BYTE PTR [r10],dl
   14001fbb5:	add    r10,r9
   14001fbb8:	jmp    0x14001fbbd
   14001fbba:	add    esi,r9d
   14001fbbd:	mov    dl,BYTE PTR [r8]
   14001fbc0:	add    r8,r9
   14001fbc3:	cmp    dl,al
   14001fbc5:	jge    0x14001fba2
   14001fbc7:	mov    rax,QWORD PTR [r14]
   14001fbca:	mov    rcx,QWORD PTR [rax+0xf0]
   14001fbd1:	mov    rax,QWORD PTR [rcx]
   14001fbd4:	cmp    dl,BYTE PTR [rax]
   14001fbd6:	jne    0x14001fb5d
   14001fbd8:	mov    ecx,0x4
   14001fbdd:	jmp    0x14001fad1
   14001fbe2:	lea    eax,[rdx-0x31]
   14001fbe5:	cmp    al,0x8
   14001fbe7:	ja     0x14001fbfc
   14001fbe9:	mov    ecx,0x3
   14001fbee:	mov    r9d,0x1
   14001fbf4:	sub    r8,r9
   14001fbf7:	jmp    0x14001fad1
   14001fbfc:	mov    rax,QWORD PTR [r14]
   14001fbff:	mov    rcx,QWORD PTR [rax+0xf0]
   14001fc06:	mov    rax,QWORD PTR [rcx]
   14001fc09:	cmp    dl,BYTE PTR [rax]
   14001fc0b:	jne    0x14001fc1d
   14001fc0d:	mov    ecx,0x5
   14001fc12:	mov    r9d,0x1
   14001fc18:	jmp    0x14001fad1
   14001fc1d:	cmp    dl,0x30
   14001fc20:	jne    0x14001fe18
   14001fc26:	mov    r9d,0x1
   14001fc2c:	mov    ecx,r9d
   14001fc2f:	jmp    0x14001fad1
   14001fc34:	lea    eax,[rdx-0x31]
   14001fc37:	mov    r9d,0x1
   14001fc3d:	mov    r15d,r9d
   14001fc40:	cmp    al,0x8
   14001fc42:	ja     0x14001fc4a
   14001fc44:	lea    ecx,[r9+0x2]
   14001fc48:	jmp    0x14001fbf4
   14001fc4a:	mov    rax,QWORD PTR [r14]
   14001fc4d:	mov    rcx,QWORD PTR [rax+0xf0]
   14001fc54:	mov    rax,QWORD PTR [rcx]
   14001fc57:	cmp    dl,BYTE PTR [rax]
   14001fc59:	je     0x14001fbd8
   14001fc5f:	lea    eax,[rdx-0x2b]
   14001fc62:	test   al,0xfd
   14001fc64:	je     0x14001fb88
   14001fc6a:	cmp    dl,0x30
   14001fc6d:	je     0x14001fc2c
   14001fc6f:	jmp    0x14001fb64
   14001fc74:	lea    eax,[rdx-0x31]
   14001fc77:	cmp    al,0x8
   14001fc79:	jbe    0x14001fbe9
   14001fc7f:	mov    rax,QWORD PTR [r14]
   14001fc82:	mov    rcx,QWORD PTR [rax+0xf0]
   14001fc89:	mov    rax,QWORD PTR [rcx]
   14001fc8c:	cmp    dl,BYTE PTR [rax]
   14001fc8e:	je     0x14001fc0d
   14001fc94:	cmp    dl,0x2b
   14001fc97:	je     0x14001fcc2
   14001fc99:	cmp    dl,0x2d
   14001fc9c:	je     0x14001fcb1
   14001fc9e:	cmp    dl,0x30
   14001fca1:	je     0x14001fc26
   14001fca3:	mov    r9d,0x1
   14001fca9:	sub    r8,r9
   14001fcac:	jmp    0x14001fe21
   14001fcb1:	mov    ecx,0x2
   14001fcb6:	mov    DWORD PTR [rbp-0x71],0x8000
   14001fcbd:	jmp    0x14001fc12
   14001fcc2:	mov    ecx,0x2
   14001fcc7:	mov    WORD PTR [rbp-0x71],bx
   14001fccb:	jmp    0x14001fc12
   14001fcd0:	sub    dl,0x30
   14001fcd3:	mov    DWORD PTR [rbp-0x79],r9d
   14001fcd7:	cmp    dl,0x9
   14001fcda:	ja     0x14001fdb9
   14001fce0:	mov    ecx,0x4
   14001fce5:	jmp    0x14001fbf4
   14001fcea:	mov    r9d,ecx
   14001fced:	sub    r9d,0x6
   14001fcf1:	je     0x14001fd93
   14001fcf7:	dec    r9d
   14001fcfa:	je     0x14001fd6f
   14001fcfc:	dec    r9d
   14001fcff:	je     0x14001fd43
   14001fd01:	dec    r9d
   14001fd04:	je     0x14001fdbe
   14001fd0a:	cmp    r9d,0x2
   14001fd0e:	jne    0x14001fdaf
   14001fd14:	cmp    DWORD PTR [rbp+0x77],ebx
   14001fd17:	je     0x14001fca3
   14001fd19:	lea    rdi,[r8-0x1]
   14001fd1d:	cmp    dl,0x2b
   14001fd20:	je     0x14001fd39
   14001fd22:	cmp    dl,0x2d
   14001fd25:	jne    0x14001fe18
   14001fd2b:	or     DWORD PTR [rbp-0x75],0xffffffff
   14001fd2f:	mov    ecx,0x7
   14001fd34:	jmp    0x14001fc12
   14001fd39:	mov    ecx,0x7
   14001fd3e:	jmp    0x14001fc12
   14001fd43:	mov    r9d,0x1
   14001fd49:	mov    r12d,r9d
   14001fd4c:	jmp    0x14001fd54
   14001fd4e:	mov    dl,BYTE PTR [r8]
   14001fd51:	add    r8,r9
   14001fd54:	cmp    dl,0x30
   14001fd57:	je     0x14001fd4e
   14001fd59:	sub    dl,0x31
   14001fd5c:	cmp    dl,0x8
   14001fd5f:	ja     0x14001fca9
   14001fd65:	mov    ecx,0x9
   14001fd6a:	jmp    0x14001fbf4
   14001fd6f:	lea    eax,[rdx-0x31]
   14001fd72:	cmp    al,0x8
   14001fd74:	ja     0x14001fd80
   14001fd76:	mov    ecx,0x9
   14001fd7b:	jmp    0x14001fbee
   14001fd80:	cmp    dl,0x30
   14001fd83:	jne    0x14001fe18
   14001fd89:	mov    ecx,0x8
   14001fd8e:	jmp    0x14001fc12
   14001fd93:	lea    eax,[rdx-0x31]
   14001fd96:	lea    rdi,[r8-0x2]
   14001fd9a:	cmp    al,0x8
   14001fd9c:	jbe    0x14001fd76
   14001fd9e:	cmp    dl,0x2b
   14001fda1:	je     0x14001fdaa
   14001fda3:	cmp    dl,0x2d
   14001fda6:	je     0x14001fd2b
   14001fda8:	jmp    0x14001fd80
   14001fdaa:	mov    ecx,0x7
   14001fdaf:	cmp    ecx,0xa
   14001fdb2:	je     0x14001fe1b
   14001fdb4:	jmp    0x14001fc12
   14001fdb9:	mov    r8,rdi
   14001fdbc:	jmp    0x14001fe21
   14001fdbe:	mov    r9d,0x1
   14001fdc4:	mov    dil,0x30
   14001fdc7:	mov    r12d,r9d
   14001fdca:	jmp    0x14001fdf0
   14001fdcc:	cmp    dl,0x39
   14001fdcf:	jg     0x14001fe0e
   14001fdd1:	lea    r13d,[r13+r13*4+0x0]
   14001fdd6:	movsx  eax,dl
   14001fdd9:	lea    r13d,[r13-0x18]
   14001fddd:	lea    r13d,[rax+r13*2]
   14001fde1:	cmp    r13d,0x1450
   14001fde8:	jg     0x14001fdf7
   14001fdea:	mov    dl,BYTE PTR [r8]
   14001fded:	add    r8,r9
   14001fdf0:	cmp    dl,dil
   14001fdf3:	jge    0x14001fdcc
   14001fdf5:	jmp    0x14001fe0e
   14001fdf7:	mov    r13d,0x1451
   14001fdfd:	jmp    0x14001fe0e
   14001fdff:	cmp    dl,0x39
   14001fe02:	jg     0x14001fca9
   14001fe08:	mov    dl,BYTE PTR [r8]
   14001fe0b:	add    r8,r9
   14001fe0e:	cmp    dl,dil
   14001fe11:	jge    0x14001fdff
   14001fe13:	jmp    0x14001fca9
   14001fe18:	mov    r8,rdi
   14001fe1b:	mov    r9d,0x1
   14001fe21:	mov    rax,QWORD PTR [rbp-0x69]
   14001fe25:	mov    QWORD PTR [rax],r8
   14001fe28:	test   r15d,r15d
   14001fe2b:	je     0x140020244
   14001fe31:	cmp    r11d,0x18
   14001fe35:	jbe    0x14001fe50
   14001fe37:	mov    al,BYTE PTR [rbp-0xa]
   14001fe3a:	cmp    al,0x5
   14001fe3c:	jl     0x14001fe44
   14001fe3e:	add    al,r9b
   14001fe41:	mov    BYTE PTR [rbp-0xa],al
   14001fe44:	sub    r10,r9
   14001fe47:	mov    r11d,0x18
   14001fe4d:	add    esi,r9d
   14001fe50:	test   r11d,r11d
   14001fe53:	jne    0x14001fe6a
   14001fe55:	movzx  edx,bx
   14001fe58:	movzx  eax,bx
   14001fe5b:	mov    edi,ebx
   14001fe5d:	mov    ecx,ebx
   14001fe5f:	jmp    0x140020253
   14001fe64:	dec    r11d
   14001fe67:	add    esi,r9d
   14001fe6a:	sub    r10,r9
   14001fe6d:	cmp    BYTE PTR [r10],bl
   14001fe70:	je     0x14001fe64
   14001fe72:	lea    r8,[rbp-0x41]
   14001fe76:	lea    rcx,[rbp-0x21]
   14001fe7a:	mov    edx,r11d
   14001fe7d:	call   0x140023c30
   14001fe82:	cmp    DWORD PTR [rbp-0x75],ebx
   14001fe85:	jge    0x14001fe8a
   14001fe87:	neg    r13d
   14001fe8a:	add    r13d,esi
   14001fe8d:	test   r12d,r12d
   14001fe90:	jne    0x14001fe96
   14001fe92:	add    r13d,DWORD PTR [rbp+0x67]
   14001fe96:	cmp    DWORD PTR [rbp-0x79],ebx
   14001fe99:	jne    0x14001fe9f
   14001fe9b:	sub    r13d,DWORD PTR [rbp+0x6f]
   14001fe9f:	cmp    r13d,0x1450
   14001fea6:	jg     0x14002022e
   14001feac:	cmp    r13d,0xffffebb0
   14001feb3:	jl     0x14002021e
   14001feb9:	lea    rsi,[rip+0x17700]        # 0x1400375c0
   14001fec0:	sub    rsi,0x60
   14001fec4:	test   r13d,r13d
   14001fec7:	je     0x14002020c
   14001fecd:	jns    0x14001fedd
   14001fecf:	lea    rsi,[rip+0x1784a]        # 0x140037720
   14001fed6:	neg    r13d
   14001fed9:	sub    rsi,0x60
   14001fedd:	cmp    DWORD PTR [rbp-0x6d],ebx
   14001fee0:	jne    0x14001fee6
   14001fee2:	mov    WORD PTR [rbp-0x41],bx
   14001fee6:	test   r13d,r13d
   14001fee9:	je     0x14002020c
   14001feef:	mov    edi,0x80000000
   14001fef4:	mov    r9d,0x7fff
   14001fefa:	mov    eax,r13d
   14001fefd:	add    rsi,0x54
   14001ff01:	sar    r13d,0x3
   14001ff05:	mov    QWORD PTR [rbp-0x61],rsi
   14001ff09:	and    eax,0x7
   14001ff0c:	je     0x140020203
   14001ff12:	cdqe   
   14001ff14:	mov    r11d,0x8000
   14001ff1a:	mov    r14d,0x1
   14001ff20:	lea    rcx,[rax+rax*2]
   14001ff24:	lea    rdx,[rsi+rcx*4]
   14001ff28:	mov    QWORD PTR [rbp-0x69],rdx
   14001ff2c:	cmp    WORD PTR [rdx],r11w
   14001ff30:	jb     0x14001ff57
   14001ff32:	mov    eax,DWORD PTR [rdx+0x8]
   14001ff35:	movsd  xmm0,QWORD PTR [rdx]
   14001ff39:	lea    rdx,[rbp-0x31]
   14001ff3d:	mov    DWORD PTR [rbp-0x29],eax
   14001ff40:	movsd  QWORD PTR [rbp-0x31],xmm0
   14001ff45:	mov    rax,QWORD PTR [rbp-0x31]
   14001ff49:	shr    rax,0x10
   14001ff4d:	mov    QWORD PTR [rbp-0x69],rdx
   14001ff51:	sub    eax,r14d
   14001ff54:	mov    DWORD PTR [rbp-0x2f],eax
   14001ff57:	movzx  eax,WORD PTR [rdx+0xa]
   14001ff5b:	movzx  ecx,WORD PTR [rbp-0x37]
   14001ff5f:	mov    QWORD PTR [rbp-0x51],rbx
   14001ff63:	movzx  r12d,ax
   14001ff67:	and    ax,r9w
   14001ff6b:	mov    DWORD PTR [rbp-0x49],ebx
   14001ff6e:	xor    r12w,cx
   14001ff72:	and    cx,r9w
   14001ff76:	and    r12w,r11w
   14001ff7a:	lea    r8d,[rcx+rax*1]
   14001ff7e:	cmp    cx,r9w
   14001ff82:	jae    0x1400201ef
   14001ff88:	cmp    ax,r9w
   14001ff8c:	jae    0x1400201ef
   14001ff92:	mov    r10d,0xbffd
   14001ff98:	cmp    r8w,r10w
   14001ff9c:	ja     0x1400201ef
   14001ffa2:	mov    r10d,0x3fbf
   14001ffa8:	cmp    r8w,r10w
   14001ffac:	ja     0x14001ffba
   14001ffae:	mov    QWORD PTR [rbp-0x3d],rbx
   14001ffb2:	mov    DWORD PTR [rbp-0x41],ebx
   14001ffb5:	jmp    0x140020203
   14001ffba:	test   cx,cx
   14001ffbd:	jne    0x14001ffdf
   14001ffbf:	add    r8w,r14w
   14001ffc3:	test   DWORD PTR [rbp-0x39],0x7fffffff
   14001ffca:	jne    0x14001ffdf
   14001ffcc:	cmp    DWORD PTR [rbp-0x3d],ebx
   14001ffcf:	jne    0x14001ffdf
   14001ffd1:	cmp    DWORD PTR [rbp-0x41],ebx
   14001ffd4:	jne    0x14001ffdf
   14001ffd6:	mov    WORD PTR [rbp-0x37],bx
   14001ffda:	jmp    0x140020203
   14001ffdf:	test   ax,ax
   14001ffe2:	jne    0x14001fffa
   14001ffe4:	add    r8w,r14w
   14001ffe8:	test   DWORD PTR [rdx+0x8],0x7fffffff
   14001ffef:	jne    0x14001fffa
   14001fff1:	cmp    DWORD PTR [rdx+0x4],ebx
   14001fff4:	jne    0x14001fffa
   14001fff6:	cmp    DWORD PTR [rdx],ebx
   14001fff8:	je     0x14001ffae
   14001fffa:	mov    r15d,ebx
   14001fffd:	lea    r9,[rbp-0x51]
   140020001:	mov    r10d,0x5
   140020007:	mov    DWORD PTR [rbp-0x79],r10d
   14002000b:	test   r10d,r10d
   14002000e:	jle    0x14002007c
   140020010:	lea    eax,[r15+r15*1]
   140020014:	lea    rdi,[rbp-0x41]
   140020018:	lea    rsi,[rdx+0x8]
   14002001c:	movsxd rcx,eax
   14002001f:	mov    eax,r15d
   140020022:	and    eax,r14d
   140020025:	add    rdi,rcx
   140020028:	mov    edx,eax
   14002002a:	movzx  eax,WORD PTR [rdi]
   14002002d:	movzx  ecx,WORD PTR [rsi]
   140020030:	mov    r11d,ebx
   140020033:	imul   ecx,eax
   140020036:	mov    eax,DWORD PTR [r9]
   140020039:	lea    r14d,[rax+rcx*1]
   14002003d:	cmp    r14d,eax
   140020040:	jb     0x140020047
   140020042:	cmp    r14d,ecx
   140020045:	jae    0x14002004d
   140020047:	mov    r11d,0x1
   14002004d:	mov    DWORD PTR [r9],r14d
   140020050:	mov    r14d,0x1
   140020056:	test   r11d,r11d
   140020059:	je     0x140020060
   14002005b:	add    WORD PTR [r9+0x4],r14w
   140020060:	mov    r11d,DWORD PTR [rbp-0x79]
   140020064:	add    rdi,0x2
   140020068:	sub    rsi,0x2
   14002006c:	sub    r11d,r14d
   14002006f:	mov    DWORD PTR [rbp-0x79],r11d
   140020073:	test   r11d,r11d
   140020076:	jg     0x14002002a
   140020078:	mov    rdx,QWORD PTR [rbp-0x69]
   14002007c:	sub    r10d,r14d
   14002007f:	add    r9,0x2
   140020083:	add    r15d,r14d
   140020086:	test   r10d,r10d
   140020089:	jg     0x140020007
   14002008f:	mov    r10d,DWORD PTR [rbp-0x49]
   140020093:	mov    r9d,DWORD PTR [rbp-0x51]
   140020097:	mov    eax,0xc002
   14002009c:	add    r8w,ax
   1400200a0:	mov    edi,0x80000000
   1400200a5:	mov    r15d,0xffff
   1400200ab:	test   r8w,r8w
   1400200af:	jle    0x1400200f0
   1400200b1:	test   edi,r10d
   1400200b4:	jne    0x1400200ea
   1400200b6:	mov    r11d,DWORD PTR [rbp-0x4d]
   1400200ba:	mov    edx,r9d
   1400200bd:	add    r10d,r10d
   1400200c0:	shr    edx,0x1f
   1400200c3:	add    r9d,r9d
   1400200c6:	mov    ecx,r11d
   1400200c9:	shr    ecx,0x1f
   1400200cc:	lea    eax,[r11+r11*1]
   1400200d0:	add    r8w,r15w
   1400200d4:	or     eax,edx
   1400200d6:	or     r10d,ecx
   1400200d9:	mov    DWORD PTR [rbp-0x51],r9d
   1400200dd:	mov    DWORD PTR [rbp-0x4d],eax
   1400200e0:	mov    DWORD PTR [rbp-0x49],r10d
   1400200e4:	test   r8w,r8w
   1400200e8:	jg     0x1400200b1
   1400200ea:	test   r8w,r8w
   1400200ee:	jg     0x14002015a
   1400200f0:	add    r8w,r15w
   1400200f4:	jns    0x14002015a
   1400200f6:	movzx  eax,r8w
   1400200fa:	mov    edi,ebx
   1400200fc:	neg    ax
   1400200ff:	movzx  edx,ax
   140020102:	add    r8w,dx
   140020106:	test   BYTE PTR [rbp-0x51],r14b
   14002010a:	je     0x14002010f
   14002010c:	add    edi,r14d
   14002010f:	mov    r11d,DWORD PTR [rbp-0x4d]
   140020113:	mov    eax,r10d
   140020116:	shr    r9d,1
   140020119:	mov    ecx,r11d
   14002011c:	shl    eax,0x1f
   14002011f:	shr    r11d,1
   140020122:	shl    ecx,0x1f
   140020125:	or     r11d,eax
   140020128:	shr    r10d,1
   14002012b:	or     r9d,ecx
   14002012e:	mov    DWORD PTR [rbp-0x4d],r11d
   140020132:	mov    DWORD PTR [rbp-0x51],r9d
   140020136:	sub    rdx,r14
   140020139:	jne    0x140020106
   14002013b:	test   edi,edi
   14002013d:	mov    DWORD PTR [rbp-0x49],r10d
   140020141:	mov    edi,0x80000000
   140020146:	je     0x14002015a
   140020148:	movzx  eax,r9w
   14002014c:	or     ax,r14w
   140020150:	mov    WORD PTR [rbp-0x51],ax
   140020154:	mov    r9d,DWORD PTR [rbp-0x51]
   140020158:	jmp    0x14002015e
   14002015a:	movzx  eax,WORD PTR [rbp-0x51]
   14002015e:	mov    rsi,QWORD PTR [rbp-0x61]
   140020162:	mov    r11d,0x8000
   140020168:	cmp    ax,r11w
   14002016c:	ja     0x14002017e
   14002016e:	and    r9d,0x1ffff
   140020175:	cmp    r9d,0x18000
   14002017c:	jne    0x1400201c6
   14002017e:	mov    eax,DWORD PTR [rbp-0x4f]
   140020181:	or     ecx,0xffffffff
   140020184:	cmp    eax,ecx
   140020186:	jne    0x1400201c0
   140020188:	mov    eax,DWORD PTR [rbp-0x4b]
   14002018b:	mov    DWORD PTR [rbp-0x4f],ebx
   14002018e:	cmp    eax,ecx
   140020190:	jne    0x1400201b4
   140020192:	movzx  eax,WORD PTR [rbp-0x47]
   140020196:	mov    DWORD PTR [rbp-0x4b],ebx
   140020199:	cmp    ax,r15w
   14002019d:	jne    0x1400201aa
   14002019f:	mov    WORD PTR [rbp-0x47],r11w
   1400201a4:	add    r8w,r14w
   1400201a8:	jmp    0x1400201ba
   1400201aa:	add    ax,r14w
   1400201ae:	mov    WORD PTR [rbp-0x47],ax
   1400201b2:	jmp    0x1400201ba
   1400201b4:	add    eax,r14d
   1400201b7:	mov    DWORD PTR [rbp-0x4b],eax
   1400201ba:	mov    r10d,DWORD PTR [rbp-0x49]
   1400201be:	jmp    0x1400201c6
   1400201c0:	add    eax,r14d
   1400201c3:	mov    DWORD PTR [rbp-0x4f],eax
   1400201c6:	mov    r9d,0x7fff
   1400201cc:	cmp    r8w,r9w
   1400201d0:	jae    0x1400201ef
   1400201d2:	movzx  eax,WORD PTR [rbp-0x4f]
   1400201d6:	or     r8w,r12w
   1400201da:	mov    DWORD PTR [rbp-0x3b],r10d
   1400201de:	mov    WORD PTR [rbp-0x41],ax
   1400201e2:	mov    eax,DWORD PTR [rbp-0x4d]
   1400201e5:	mov    WORD PTR [rbp-0x37],r8w
   1400201ea:	mov    DWORD PTR [rbp-0x3f],eax
   1400201ed:	jmp    0x140020203
   1400201ef:	neg    r12w
   1400201f3:	mov    QWORD PTR [rbp-0x41],rbx
   1400201f7:	sbb    eax,eax
   1400201f9:	and    eax,edi
   1400201fb:	add    eax,0x7fff8000
   140020200:	mov    DWORD PTR [rbp-0x39],eax
   140020203:	test   r13d,r13d
   140020206:	jne    0x14001fefa
   14002020c:	mov    eax,DWORD PTR [rbp-0x39]
   14002020f:	movzx  edx,WORD PTR [rbp-0x41]
   140020213:	mov    ecx,DWORD PTR [rbp-0x3f]
   140020216:	mov    edi,DWORD PTR [rbp-0x3b]
   140020219:	shr    eax,0x10
   14002021c:	jmp    0x140020253
   14002021e:	mov    edx,ebx
   140020220:	movzx  eax,bx
   140020223:	mov    edi,ebx
   140020225:	mov    ecx,ebx
   140020227:	mov    ebx,0x1
   14002022c:	jmp    0x140020253
   14002022e:	mov    ecx,ebx
   140020230:	movzx  edx,bx
   140020233:	mov    eax,0x7fff
   140020238:	mov    ebx,0x2
   14002023d:	mov    edi,0x80000000
   140020242:	jmp    0x140020253
   140020244:	movzx  edx,bx
   140020247:	movzx  eax,bx
   14002024a:	mov    edi,ebx
   14002024c:	mov    ecx,ebx
   14002024e:	mov    ebx,0x4
   140020253:	mov    r8,QWORD PTR [rbp-0x59]
   140020257:	or     ax,WORD PTR [rbp-0x71]
   14002025b:	mov    WORD PTR [r8+0xa],ax
   140020260:	mov    eax,ebx
   140020262:	mov    WORD PTR [r8],dx
   140020266:	mov    DWORD PTR [r8+0x2],ecx
   14002026a:	mov    DWORD PTR [r8+0x6],edi
   14002026e:	mov    rcx,QWORD PTR [rbp-0x1]
   140020272:	xor    rcx,rsp
   140020275:	call   0x14000d0a0
   14002027a:	mov    rbx,QWORD PTR [rsp+0xf0]
   140020282:	add    rsp,0xa0
   140020289:	pop    r15
   14002028b:	pop    r14
   14002028d:	pop    r13
   14002028f:	pop    r12
   140020291:	pop    rdi
   140020292:	pop    rsi
   140020293:	pop    rbp
   140020294:	ret    
   140020295:	int3   
   140020296:	int3   
   140020297:	int3   
   140020298:	mov    QWORD PTR [rsp+0x10],rbx
   14002029d:	push   rbp
   14002029e:	push   rsi
   14002029f:	push   rdi
   1400202a0:	push   r12
   1400202a2:	push   r13
   1400202a4:	push   r14
   1400202a6:	push   r15
   1400202a8:	lea    rbp,[rsp-0x27]
   1400202ad:	sub    rsp,0xc0
   1400202b4:	mov    rax,QWORD PTR [rip+0x16785]        # 0x140036a40
   1400202bb:	xor    rax,rsp
   1400202be:	mov    QWORD PTR [rbp+0x17],rax
   1400202c2:	movzx  r10d,WORD PTR [rcx+0x8]
   1400202c7:	mov    rbx,r9
   1400202ca:	mov    r9d,DWORD PTR [rcx]
   1400202cd:	mov    DWORD PTR [rbp-0x4d],edx
   1400202d0:	mov    edx,0x8000
   1400202d5:	mov    r11d,0x1
   1400202db:	mov    DWORD PTR [rbp-0x39],r8d
   1400202df:	mov    r8d,DWORD PTR [rcx+0x4]
   1400202e3:	movzx  ecx,r10w
   1400202e7:	and    cx,dx
   1400202ea:	lea    r13d,[rdx-0x1]
   1400202ee:	lea    eax,[r11+0x1f]
   1400202f2:	xor    r12d,r12d
   1400202f5:	and    r10w,r13w
   1400202f9:	mov    QWORD PTR [rbp-0x41],rbx
   1400202fd:	mov    DWORD PTR [rbp-0x9],0xcccccccc
   140020304:	mov    DWORD PTR [rbp-0x5],0xcccccccc
   14002030b:	mov    DWORD PTR [rbp-0x1],0x3ffbcccc
   140020312:	mov    WORD PTR [rbp-0x67],cx
   140020316:	lea    edi,[rax+0xd]
   140020319:	test   cx,cx
   14002031c:	je     0x140020324
   14002031e:	mov    BYTE PTR [rbx+0x2],dil
   140020322:	jmp    0x140020327
   140020324:	mov    BYTE PTR [rbx+0x2],al
   140020327:	test   r10w,r10w
   14002032b:	jne    0x14002035b
   14002032d:	test   r8d,r8d
   140020330:	jne    0x14002042a
   140020336:	test   r9d,r9d
   140020339:	jne    0x14002042a
   14002033f:	cmp    cx,dx
   140020342:	cmove  eax,edi
   140020345:	mov    WORD PTR [rbx],r12w
   140020349:	mov    BYTE PTR [rbx+0x2],al
   14002034c:	mov    WORD PTR [rbx+0x3],0x3001
   140020352:	mov    BYTE PTR [rbx+0x5],r12b
   140020356:	jmp    0x140020cb6
   14002035b:	cmp    r10w,r13w
   14002035f:	jne    0x14002042a
   140020365:	mov    esi,0x80000000
   14002036a:	mov    WORD PTR [rbx],r11w
   14002036e:	cmp    r8d,esi
   140020371:	jne    0x140020378
   140020373:	test   r9d,r9d
   140020376:	je     0x1400203a1
   140020378:	bt     r8d,0x1e
   14002037d:	jb     0x1400203a1
   14002037f:	lea    rcx,[rbx+0x4]
   140020383:	lea    r8,[rip+0xf6be]        # 0x14002fa48
   14002038a:	mov    edx,0x16
   14002038f:	call   0x14000ee64
   140020394:	test   eax,eax
   140020396:	je     0x14002041e
   14002039c:	jmp    0x140020d1c
   1400203a1:	test   cx,cx
   1400203a4:	je     0x1400203d1
   1400203a6:	cmp    r8d,0xc0000000
   1400203ad:	jne    0x1400203d1
   1400203af:	test   r9d,r9d
   1400203b2:	jne    0x140020401
   1400203b4:	lea    rcx,[rbx+0x4]
   1400203b8:	lea    r8,[rip+0xf691]        # 0x14002fa50
   1400203bf:	lea    edx,[r9+0x16]
   1400203c3:	call   0x14000ee64
   1400203c8:	test   eax,eax
   1400203ca:	je     0x1400203f7
   1400203cc:	jmp    0x140020d31
   1400203d1:	cmp    r8d,esi
   1400203d4:	jne    0x140020401
   1400203d6:	test   r9d,r9d
   1400203d9:	jne    0x140020401
   1400203db:	lea    rcx,[rbx+0x4]
   1400203df:	lea    r8,[rip+0xf672]        # 0x14002fa58
   1400203e6:	lea    edx,[r9+0x16]
   1400203ea:	call   0x14000ee64
   1400203ef:	test   eax,eax
   1400203f1:	jne    0x140020d46
   1400203f7:	mov    eax,0x5
   1400203fc:	mov    BYTE PTR [rbx+0x3],al
   1400203ff:	jmp    0x140020422
   140020401:	lea    rcx,[rbx+0x4]
   140020405:	lea    r8,[rip+0xf654]        # 0x14002fa60
   14002040c:	mov    edx,0x16
   140020411:	call   0x14000ee64
   140020416:	test   eax,eax
   140020418:	jne    0x140020d5b
   14002041e:	mov    BYTE PTR [rbx+0x3],0x6
   140020422:	mov    r11d,r12d
   140020425:	jmp    0x140020cb6
   14002042a:	movzx  edx,r10w
   14002042e:	mov    DWORD PTR [rbp-0x17],r9d
   140020432:	mov    WORD PTR [rbp-0xf],r10w
   140020437:	mov    ecx,r8d
   14002043a:	mov    eax,edx
   14002043c:	lea    r9,[rip+0x1717d]        # 0x1400375c0
   140020443:	shr    ecx,0x18
   140020446:	shr    eax,0x8
   140020449:	mov    r15d,0x80000000
   14002044f:	lea    eax,[rax+rcx*2]
   140020452:	mov    r14d,0x5
   140020458:	sub    r9,0x60
   14002045c:	mov    DWORD PTR [rbp-0x13],r8d
   140020460:	mov    WORD PTR [rbp-0x19],r12w
   140020465:	mov    esi,0xbffd
   14002046a:	imul   ecx,eax,0x4d
   14002046d:	imul   eax,edx,0x4d10
   140020473:	add    eax,0xecbced0c
   140020478:	mov    DWORD PTR [rbp-0x49],r14d
   14002047c:	lea    edi,[r15-0x1]
   140020480:	add    ecx,eax
   140020482:	sar    ecx,0x10
   140020485:	movsx  r10d,cx
   140020489:	mov    DWORD PTR [rbp-0x61],ecx
   14002048c:	neg    r10d
   14002048f:	je     0x140020804
   140020495:	test   r10d,r10d
   140020498:	jns    0x1400204ab
   14002049a:	lea    r9,[rip+0x1727f]        # 0x140037720
   1400204a1:	neg    r10d
   1400204a4:	sub    r9,0x60
   1400204a8:	test   r10d,r10d
   1400204ab:	je     0x140020804
   1400204b1:	mov    r8d,DWORD PTR [rbp-0x15]
   1400204b5:	mov    edx,DWORD PTR [rbp-0x19]
   1400204b8:	mov    eax,r10d
   1400204bb:	add    r9,0x54
   1400204bf:	sar    r10d,0x3
   1400204c3:	mov    DWORD PTR [rbp-0x51],r10d
   1400204c7:	mov    QWORD PTR [rbp-0x59],r9
   1400204cb:	and    eax,0x7
   1400204ce:	je     0x1400207ed
   1400204d4:	cdqe   
   1400204d6:	lea    rcx,[rax+rax*2]
   1400204da:	lea    rsi,[r9+rcx*4]
   1400204de:	mov    r9d,0x8000
   1400204e4:	mov    QWORD PTR [rbp-0x31],rsi
   1400204e8:	cmp    WORD PTR [rsi],r9w
   1400204ec:	jb     0x140020513
   1400204ee:	mov    eax,DWORD PTR [rsi+0x8]
   1400204f1:	movsd  xmm0,QWORD PTR [rsi]
   1400204f5:	lea    rsi,[rbp+0x7]
   1400204f9:	mov    DWORD PTR [rbp+0xf],eax
   1400204fc:	movsd  QWORD PTR [rbp+0x7],xmm0
   140020501:	mov    rax,QWORD PTR [rbp+0x7]
   140020505:	shr    rax,0x10
   140020509:	mov    QWORD PTR [rbp-0x31],rsi
   14002050d:	sub    eax,r11d
   140020510:	mov    DWORD PTR [rbp+0x9],eax
   140020513:	movzx  ecx,WORD PTR [rsi+0xa]
   140020517:	movzx  eax,WORD PTR [rbp-0xf]
   14002051b:	mov    DWORD PTR [rbp-0x65],r12d
   14002051f:	movzx  ebx,cx
   140020522:	and    cx,r13w
   140020526:	mov    QWORD PTR [rbp-0x29],0x0
   14002052e:	xor    bx,ax
   140020531:	and    ax,r13w
   140020535:	mov    DWORD PTR [rbp-0x21],r12d
   140020539:	and    bx,r9w
   14002053d:	lea    r9d,[rax+rcx*1]
   140020541:	mov    WORD PTR [rbp-0x69],bx
   140020545:	cmp    ax,r13w
   140020549:	jae    0x1400207cc
   14002054f:	cmp    cx,r13w
   140020553:	jae    0x1400207cc
   140020559:	mov    r13d,0xbffd
   14002055f:	cmp    r9w,r13w
   140020563:	ja     0x1400207c6
   140020569:	mov    ebx,0x3fbf
   14002056e:	cmp    r9w,bx
   140020572:	ja     0x140020587
   140020574:	mov    QWORD PTR [rbp-0x15],0x0
   14002057c:	mov    r13d,0x7fff
   140020582:	jmp    0x1400207e0
   140020587:	test   ax,ax
   14002058a:	jne    0x1400205ae
   14002058c:	add    r9w,r11w
   140020590:	test   DWORD PTR [rbp-0x11],edi
   140020593:	jne    0x1400205ae
   140020595:	test   r8d,r8d
   140020598:	jne    0x1400205ae
   14002059a:	test   edx,edx
   14002059c:	jne    0x1400205ae
   14002059e:	mov    WORD PTR [rbp-0xf],r12w
   1400205a3:	mov    r13d,0x7fff
   1400205a9:	jmp    0x1400207e9
   1400205ae:	test   cx,cx
   1400205b1:	jne    0x1400205c7
   1400205b3:	add    r9w,r11w
   1400205b7:	test   DWORD PTR [rsi+0x8],edi
   1400205ba:	jne    0x1400205c7
   1400205bc:	cmp    DWORD PTR [rsi+0x4],r12d
   1400205c0:	jne    0x1400205c7
   1400205c2:	cmp    DWORD PTR [rsi],r12d
   1400205c5:	je     0x140020574
   1400205c7:	mov    edi,r14d
   1400205ca:	lea    rdx,[rbp-0x29]
   1400205ce:	xor    r14d,r14d
   1400205d1:	mov    r13d,edi
   1400205d4:	test   edi,edi
   1400205d6:	jle    0x140020637
   1400205d8:	lea    eax,[r12+r12*1]
   1400205dc:	lea    r14,[rbp-0x19]
   1400205e0:	mov    ebx,r12d
   1400205e3:	movsxd rcx,eax
   1400205e6:	and    ebx,r11d
   1400205e9:	lea    r15,[rsi+0x8]
   1400205ed:	add    r14,rcx
   1400205f0:	xor    esi,esi
   1400205f2:	movzx  eax,WORD PTR [r15]
   1400205f6:	movzx  ecx,WORD PTR [r14]
   1400205fa:	mov    r10d,esi
   1400205fd:	imul   ecx,eax
   140020600:	mov    eax,DWORD PTR [rdx]
   140020602:	lea    r8d,[rax+rcx*1]
   140020606:	cmp    r8d,eax
   140020609:	jb     0x140020610
   14002060b:	cmp    r8d,ecx
   14002060e:	jae    0x140020613
   140020610:	mov    r10d,r11d
   140020613:	mov    DWORD PTR [rdx],r8d
   140020616:	test   r10d,r10d
   140020619:	je     0x140020620
   14002061b:	add    WORD PTR [rdx+0x4],r11w
   140020620:	sub    r13d,r11d
   140020623:	add    r14,0x2
   140020627:	sub    r15,0x2
   14002062b:	test   r13d,r13d
   14002062e:	jg     0x1400205f2
   140020630:	mov    rsi,QWORD PTR [rbp-0x31]
   140020634:	xor    r14d,r14d
   140020637:	sub    edi,r11d
   14002063a:	add    rdx,0x2
   14002063e:	add    r12d,r11d
   140020641:	test   edi,edi
   140020643:	jg     0x1400205d1
   140020645:	mov    r10d,DWORD PTR [rbp-0x21]
   140020649:	mov    r8d,DWORD PTR [rbp-0x29]
   14002064d:	mov    eax,0xc002
   140020652:	add    r9w,ax
   140020656:	xor    r12d,r12d
   140020659:	mov    ebx,0xffff
   14002065e:	mov    r15d,0x80000000
   140020664:	test   r9w,r9w
   140020668:	jle    0x1400206a6
   14002066a:	test   r15d,r10d
   14002066d:	jne    0x1400206a0
   14002066f:	mov    edi,DWORD PTR [rbp-0x25]
   140020672:	mov    edx,r8d
   140020675:	add    r10d,r10d
   140020678:	shr    edx,0x1f
   14002067b:	add    r8d,r8d
   14002067e:	mov    ecx,edi
   140020680:	shr    ecx,0x1f
   140020683:	lea    eax,[rdi+rdi*1]
   140020686:	add    r9w,bx
   14002068a:	or     eax,edx
   14002068c:	or     r10d,ecx
   14002068f:	mov    DWORD PTR [rbp-0x29],r8d
   140020693:	mov    DWORD PTR [rbp-0x25],eax
   140020696:	mov    DWORD PTR [rbp-0x21],r10d
   14002069a:	test   r9w,r9w
   14002069e:	jg     0x14002066a
   1400206a0:	test   r9w,r9w
   1400206a4:	jg     0x140020713
   1400206a6:	add    r9w,bx
   1400206aa:	jns    0x140020713
   1400206ac:	movzx  eax,r9w
   1400206b0:	neg    ax
   1400206b3:	movzx  edx,ax
   1400206b6:	add    r9w,dx
   1400206ba:	mov    WORD PTR [rbp-0x5d],r9w
   1400206bf:	mov    r9d,DWORD PTR [rbp-0x65]
   1400206c3:	test   BYTE PTR [rbp-0x29],r11b
   1400206c7:	je     0x1400206cc
   1400206c9:	add    r9d,r11d
   1400206cc:	mov    edi,DWORD PTR [rbp-0x25]
   1400206cf:	mov    eax,r10d
   1400206d2:	shr    r8d,1
   1400206d5:	mov    ecx,edi
   1400206d7:	shl    eax,0x1f
   1400206da:	shr    edi,1
   1400206dc:	shl    ecx,0x1f
   1400206df:	or     edi,eax
   1400206e1:	shr    r10d,1
   1400206e4:	or     r8d,ecx
   1400206e7:	mov    DWORD PTR [rbp-0x25],edi
   1400206ea:	mov    DWORD PTR [rbp-0x29],r8d
   1400206ee:	sub    rdx,r11
   1400206f1:	jne    0x1400206c3
   1400206f3:	test   r9d,r9d
   1400206f6:	movzx  r9d,WORD PTR [rbp-0x5d]
   1400206fb:	mov    DWORD PTR [rbp-0x21],r10d
   1400206ff:	je     0x140020713
   140020701:	movzx  eax,r8w
   140020705:	or     ax,r11w
   140020709:	mov    WORD PTR [rbp-0x29],ax
   14002070d:	mov    r8d,DWORD PTR [rbp-0x29]
   140020711:	jmp    0x140020717
   140020713:	movzx  eax,WORD PTR [rbp-0x29]
   140020717:	mov    ecx,0x8000
   14002071c:	cmp    ax,cx
   14002071f:	ja     0x140020731
   140020721:	and    r8d,0x1ffff
   140020728:	cmp    r8d,0x18000
   14002072f:	jne    0x140020779
   140020731:	mov    eax,DWORD PTR [rbp-0x27]
   140020734:	or     edx,0xffffffff
   140020737:	cmp    eax,edx
   140020739:	jne    0x140020773
   14002073b:	mov    eax,DWORD PTR [rbp-0x23]
   14002073e:	mov    DWORD PTR [rbp-0x27],r12d
   140020742:	cmp    eax,edx
   140020744:	jne    0x140020767
   140020746:	movzx  eax,WORD PTR [rbp-0x1f]
   14002074a:	mov    DWORD PTR [rbp-0x23],r12d
   14002074e:	cmp    ax,bx
   140020751:	jne    0x14002075d
   140020753:	mov    WORD PTR [rbp-0x1f],cx
   140020757:	add    r9w,r11w
   14002075b:	jmp    0x14002076d
   14002075d:	add    ax,r11w
   140020761:	mov    WORD PTR [rbp-0x1f],ax
   140020765:	jmp    0x14002076d
   140020767:	add    eax,r11d
   14002076a:	mov    DWORD PTR [rbp-0x23],eax
   14002076d:	mov    r10d,DWORD PTR [rbp-0x21]
   140020771:	jmp    0x140020779
   140020773:	add    eax,r11d
   140020776:	mov    DWORD PTR [rbp-0x27],eax
   140020779:	mov    r13d,0x7fff
   14002077f:	mov    r14d,0x5
   140020785:	mov    edi,0x7fffffff
   14002078a:	cmp    r9w,r13w
   14002078e:	jb     0x14002079d
   140020790:	movzx  eax,WORD PTR [rbp-0x69]
   140020794:	mov    r10d,DWORD PTR [rbp-0x51]
   140020798:	neg    ax
   14002079b:	jmp    0x1400207cf
   14002079d:	movzx  eax,WORD PTR [rbp-0x27]
   1400207a1:	or     r9w,WORD PTR [rbp-0x69]
   1400207a6:	mov    DWORD PTR [rbp-0x13],r10d
   1400207aa:	mov    r10d,DWORD PTR [rbp-0x51]
   1400207ae:	mov    WORD PTR [rbp-0x19],ax
   1400207b2:	mov    eax,DWORD PTR [rbp-0x25]
   1400207b5:	mov    DWORD PTR [rbp-0x17],eax
   1400207b8:	mov    r8d,DWORD PTR [rbp-0x15]
   1400207bc:	mov    edx,DWORD PTR [rbp-0x19]
   1400207bf:	mov    WORD PTR [rbp-0xf],r9w
   1400207c4:	jmp    0x1400207e9
   1400207c6:	mov    r13d,0x7fff
   1400207cc:	neg    bx
   1400207cf:	sbb    eax,eax
   1400207d1:	mov    DWORD PTR [rbp-0x15],r12d
   1400207d5:	and    eax,r15d
   1400207d8:	add    eax,0x7fff8000
   1400207dd:	mov    DWORD PTR [rbp-0x11],eax
   1400207e0:	mov    edx,r12d
   1400207e3:	mov    r8d,r12d
   1400207e6:	mov    DWORD PTR [rbp-0x19],edx
   1400207e9:	mov    r9,QWORD PTR [rbp-0x59]
   1400207ed:	test   r10d,r10d
   1400207f0:	jne    0x1400204b8
   1400207f6:	mov    rbx,QWORD PTR [rbp-0x41]
   1400207fa:	mov    ecx,DWORD PTR [rbp-0x61]
   1400207fd:	mov    esi,0xbffd
   140020802:	jmp    0x14002080b
   140020804:	mov    r8d,DWORD PTR [rbp-0x15]
   140020808:	mov    edx,DWORD PTR [rbp-0x19]
   14002080b:	mov    eax,DWORD PTR [rbp-0x11]
   14002080e:	mov    r9d,0x3fff
   140020814:	shr    eax,0x10
   140020817:	cmp    ax,r9w
   14002081b:	jb     0x140020ad7
   140020821:	add    cx,r11w
   140020825:	mov    r9d,0x8000
   14002082b:	mov    DWORD PTR [rbp-0x65],r12d
   14002082f:	lea    r10d,[r9-0x1]
   140020833:	mov    DWORD PTR [rbp-0x61],ecx
   140020836:	movzx  ecx,WORD PTR [rbp+0x1]
   14002083a:	movzx  r13d,cx
   14002083e:	and    cx,r10w
   140020842:	mov    QWORD PTR [rbp-0x29],0x0
   14002084a:	xor    r13w,ax
   14002084e:	and    ax,r10w
   140020852:	mov    DWORD PTR [rbp-0x21],r12d
   140020856:	and    r13w,r9w
   14002085a:	lea    r9d,[rax+rcx*1]
   14002085e:	cmp    ax,r10w
   140020862:	jae    0x140020ac0
   140020868:	cmp    cx,r10w
   14002086c:	jae    0x140020ac0
   140020872:	cmp    r9w,si
   140020876:	ja     0x140020ac0
   14002087c:	mov    r10d,0x3fbf
   140020882:	cmp    r9w,r10w
   140020886:	ja     0x140020891
   140020888:	mov    DWORD PTR [rbp-0x11],r12d
   14002088c:	jmp    0x140020ad1
   140020891:	test   ax,ax
   140020894:	jne    0x1400208b2
   140020896:	add    r9w,r11w
   14002089a:	test   DWORD PTR [rbp-0x11],edi
   14002089d:	jne    0x1400208b2
   14002089f:	test   r8d,r8d
   1400208a2:	jne    0x1400208b2
   1400208a4:	test   edx,edx
   1400208a6:	jne    0x1400208b2
   1400208a8:	mov    WORD PTR [rbp-0xf],r12w
   1400208ad:	jmp    0x140020ad7
   1400208b2:	test   cx,cx
   1400208b5:	jne    0x1400208cc
   1400208b7:	add    r9w,r11w
   1400208bb:	test   DWORD PTR [rbp-0x1],edi
   1400208be:	jne    0x1400208cc
   1400208c0:	cmp    DWORD PTR [rbp-0x5],r12d
   1400208c4:	jne    0x1400208cc
   1400208c6:	cmp    DWORD PTR [rbp-0x9],r12d
   1400208ca:	je     0x140020888
   1400208cc:	mov    edi,r12d
   1400208cf:	lea    rdx,[rbp-0x29]
   1400208d3:	mov    esi,r14d
   1400208d6:	test   r14d,r14d
   1400208d9:	jle    0x140020938
   1400208db:	lea    eax,[rdi+rdi*1]
   1400208de:	lea    r15,[rbp-0x19]
   1400208e2:	mov    r12d,edi
   1400208e5:	movsxd rcx,eax
   1400208e8:	and    r12d,r11d
   1400208eb:	lea    r14,[rbp-0x1]
   1400208ef:	add    r15,rcx
   1400208f2:	xor    ebx,ebx
   1400208f4:	movzx  eax,WORD PTR [r15]
   1400208f8:	movzx  ecx,WORD PTR [r14]
   1400208fc:	mov    r8d,ebx
   1400208ff:	imul   ecx,eax
   140020902:	mov    eax,DWORD PTR [rdx]
   140020904:	lea    r10d,[rax+rcx*1]
   140020908:	cmp    r10d,eax
   14002090b:	jb     0x140020912
   14002090d:	cmp    r10d,ecx
   140020910:	jae    0x140020915
   140020912:	mov    r8d,r11d
   140020915:	mov    DWORD PTR [rdx],r10d
   140020918:	test   r8d,r8d
   14002091b:	je     0x140020922
   14002091d:	add    WORD PTR [rdx+0x4],r11w
   140020922:	sub    esi,r11d
   140020925:	add    r15,0x2
   140020929:	sub    r14,0x2
   14002092d:	test   esi,esi
   14002092f:	jg     0x1400208f4
   140020931:	mov    r14d,DWORD PTR [rbp-0x49]
   140020935:	xor    r12d,r12d
   140020938:	sub    r14d,r11d
   14002093b:	add    rdx,0x2
   14002093f:	add    edi,r11d
   140020942:	mov    DWORD PTR [rbp-0x49],r14d
   140020946:	test   r14d,r14d
   140020949:	jg     0x1400208d3
   14002094b:	mov    rbx,QWORD PTR [rbp-0x41]
   14002094f:	mov    r8d,DWORD PTR [rbp-0x21]
   140020953:	mov    r10d,DWORD PTR [rbp-0x29]
   140020957:	mov    eax,0xc002
   14002095c:	mov    esi,0x80000000
   140020961:	mov    r14d,0xffff
   140020967:	add    r9w,ax
   14002096b:	test   r9w,r9w
   14002096f:	jle    0x1400209ad
   140020971:	test   esi,r8d
   140020974:	jne    0x1400209a7
   140020976:	mov    edi,DWORD PTR [rbp-0x25]
   140020979:	mov    edx,r10d
   14002097c:	add    r8d,r8d
   14002097f:	shr    edx,0x1f
   140020982:	add    r10d,r10d
   140020985:	mov    ecx,edi
   140020987:	shr    ecx,0x1f
   14002098a:	lea    eax,[rdi+rdi*1]
   14002098d:	add    r9w,r14w
   140020991:	or     eax,edx
   140020993:	or     r8d,ecx
   140020996:	mov    DWORD PTR [rbp-0x29],r10d
   14002099a:	mov    DWORD PTR [rbp-0x25],eax
   14002099d:	mov    DWORD PTR [rbp-0x21],r8d
   1400209a1:	test   r9w,r9w
   1400209a5:	jg     0x140020971
   1400209a7:	test   r9w,r9w
   1400209ab:	jg     0x140020a12
   1400209ad:	add    r9w,r14w
   1400209b1:	jns    0x140020a12
   1400209b3:	mov    ebx,DWORD PTR [rbp-0x65]
   1400209b6:	movzx  eax,r9w
   1400209ba:	neg    ax
   1400209bd:	movzx  edx,ax
   1400209c0:	add    r9w,dx
   1400209c4:	test   BYTE PTR [rbp-0x29],r11b
   1400209c8:	je     0x1400209cd
   1400209ca:	add    ebx,r11d
   1400209cd:	mov    edi,DWORD PTR [rbp-0x25]
   1400209d0:	mov    eax,r8d
   1400209d3:	shr    r10d,1
   1400209d6:	mov    ecx,edi
   1400209d8:	shl    eax,0x1f
   1400209db:	shr    edi,1
   1400209dd:	shl    ecx,0x1f
   1400209e0:	or     edi,eax
   1400209e2:	shr    r8d,1
   1400209e5:	or     r10d,ecx
   1400209e8:	mov    DWORD PTR [rbp-0x25],edi
   1400209eb:	mov    DWORD PTR [rbp-0x29],r10d
   1400209ef:	sub    rdx,r11
   1400209f2:	jne    0x1400209c4
   1400209f4:	test   ebx,ebx
   1400209f6:	mov    rbx,QWORD PTR [rbp-0x41]
   1400209fa:	mov    DWORD PTR [rbp-0x21],r8d
   1400209fe:	je     0x140020a12
   140020a00:	movzx  eax,r10w
   140020a04:	or     ax,r11w
   140020a08:	mov    WORD PTR [rbp-0x29],ax
   140020a0c:	mov    r10d,DWORD PTR [rbp-0x29]
   140020a10:	jmp    0x140020a16
   140020a12:	movzx  eax,WORD PTR [rbp-0x29]
   140020a16:	mov    ecx,0x8000
   140020a1b:	cmp    ax,cx
   140020a1e:	ja     0x140020a30
   140020a20:	and    r10d,0x1ffff
   140020a27:	cmp    r10d,0x18000
   140020a2e:	jne    0x140020a79
   140020a30:	mov    eax,DWORD PTR [rbp-0x27]
   140020a33:	or     edx,0xffffffff
   140020a36:	cmp    eax,edx
   140020a38:	jne    0x140020a73
   140020a3a:	mov    eax,DWORD PTR [rbp-0x23]
   140020a3d:	mov    DWORD PTR [rbp-0x27],r12d
   140020a41:	cmp    eax,edx
   140020a43:	jne    0x140020a67
   140020a45:	movzx  eax,WORD PTR [rbp-0x1f]
   140020a49:	mov    DWORD PTR [rbp-0x23],r12d
   140020a4d:	cmp    ax,r14w
   140020a51:	jne    0x140020a5d
   140020a53:	mov    WORD PTR [rbp-0x1f],cx
   140020a57:	add    r9w,r11w
   140020a5b:	jmp    0x140020a6d
   140020a5d:	add    ax,r11w
   140020a61:	mov    WORD PTR [rbp-0x1f],ax
   140020a65:	jmp    0x140020a6d
   140020a67:	add    eax,r11d
   140020a6a:	mov    DWORD PTR [rbp-0x23],eax
   140020a6d:	mov    r8d,DWORD PTR [rbp-0x21]
   140020a71:	jmp    0x140020a79
   140020a73:	add    eax,r11d
   140020a76:	mov    DWORD PTR [rbp-0x27],eax
   140020a79:	mov    eax,0x7fff
   140020a7e:	cmp    r9w,ax
   140020a82:	jb     0x140020a9c
   140020a84:	neg    r13w
   140020a88:	mov    r8d,r12d
   140020a8b:	mov    edx,r12d
   140020a8e:	sbb    eax,eax
   140020a90:	and    eax,esi
   140020a92:	add    eax,0x7fff8000
   140020a97:	mov    DWORD PTR [rbp-0x11],eax
   140020a9a:	jmp    0x140020adc
   140020a9c:	movzx  eax,WORD PTR [rbp-0x27]
   140020aa0:	or     r9w,r13w
   140020aa4:	mov    DWORD PTR [rbp-0x13],r8d
   140020aa8:	mov    WORD PTR [rbp-0x19],ax
   140020aac:	mov    eax,DWORD PTR [rbp-0x25]
   140020aaf:	mov    WORD PTR [rbp-0xf],r9w
   140020ab4:	mov    DWORD PTR [rbp-0x17],eax
   140020ab7:	mov    r8d,DWORD PTR [rbp-0x15]
   140020abb:	mov    edx,DWORD PTR [rbp-0x19]
   140020abe:	jmp    0x140020adc
   140020ac0:	neg    r13w
   140020ac4:	sbb    eax,eax
   140020ac6:	and    eax,r15d
   140020ac9:	add    eax,0x7fff8000
   140020ace:	mov    DWORD PTR [rbp-0x11],eax
   140020ad1:	mov    edx,r12d
   140020ad4:	mov    r8d,r12d
   140020ad7:	mov    ecx,0x8000
   140020adc:	mov    eax,DWORD PTR [rbp-0x61]
   140020adf:	mov    r14d,DWORD PTR [rbp-0x4d]
   140020ae3:	mov    WORD PTR [rbx],ax
   140020ae6:	test   BYTE PTR [rbp-0x39],r11b
   140020aea:	je     0x140020b09
   140020aec:	cwde   
   140020aed:	add    r14d,eax
   140020af0:	test   r14d,r14d
   140020af3:	jg     0x140020b09
   140020af5:	cmp    WORD PTR [rbp-0x67],cx
   140020af9:	mov    eax,0x20
   140020afe:	lea    ecx,[rax+0xd]
   140020b01:	cmove  eax,ecx
   140020b04:	jmp    0x140020345
   140020b09:	mov    r9d,DWORD PTR [rbp-0x11]
   140020b0d:	mov    eax,0x15
   140020b12:	mov    WORD PTR [rbp-0xf],r12w
   140020b17:	mov    esi,DWORD PTR [rbp-0x11]
   140020b1a:	cmp    r14d,eax
   140020b1d:	lea    r10d,[rax-0xd]
   140020b21:	cmovg  r14d,eax
   140020b25:	shr    r9d,0x10
   140020b29:	sub    r9d,0x3ffe
   140020b30:	mov    ecx,r8d
   140020b33:	mov    eax,edx
   140020b35:	add    esi,esi
   140020b37:	add    r8d,r8d
   140020b3a:	shr    eax,0x1f
   140020b3d:	shr    ecx,0x1f
   140020b40:	or     r8d,eax
   140020b43:	or     esi,ecx
   140020b45:	add    edx,edx
   140020b47:	sub    r10,r11
   140020b4a:	jne    0x140020b30
   140020b4c:	mov    DWORD PTR [rbp-0x15],r8d
   140020b50:	mov    DWORD PTR [rbp-0x19],edx
   140020b53:	test   r9d,r9d
   140020b56:	jns    0x140020b8a
   140020b58:	neg    r9d
   140020b5b:	movzx  r10d,r9b
   140020b5f:	test   r10d,r10d
   140020b62:	jle    0x140020b8a
   140020b64:	mov    ecx,r8d
   140020b67:	mov    eax,esi
   140020b69:	shr    edx,1
   140020b6b:	shr    r8d,1
   140020b6e:	shl    eax,0x1f
   140020b71:	shl    ecx,0x1f
   140020b74:	sub    r10d,r11d
   140020b77:	shr    esi,1
   140020b79:	or     r8d,eax
   140020b7c:	or     edx,ecx
   140020b7e:	test   r10d,r10d
   140020b81:	jg     0x140020b64
   140020b83:	mov    DWORD PTR [rbp-0x15],r8d
   140020b87:	mov    DWORD PTR [rbp-0x19],edx
   140020b8a:	lea    r15d,[r14+0x1]
   140020b8e:	lea    rdi,[rbx+0x4]
   140020b92:	mov    r10,rdi
   140020b95:	test   r15d,r15d
   140020b98:	jle    0x140020c72
   140020b9e:	movsd  xmm0,QWORD PTR [rbp-0x19]
   140020ba3:	mov    ecx,r8d
   140020ba6:	add    r8d,r8d
   140020ba9:	shr    ecx,0x1f
   140020bac:	mov    eax,edx
   140020bae:	add    edx,edx
   140020bb0:	shr    eax,0x1f
   140020bb3:	lea    r9d,[rsi+rsi*1]
   140020bb7:	movsd  QWORD PTR [rbp+0x7],xmm0
   140020bbc:	or     r8d,eax
   140020bbf:	or     r9d,ecx
   140020bc2:	mov    eax,edx
   140020bc4:	mov    ecx,r8d
   140020bc7:	shr    eax,0x1f
   140020bca:	add    r8d,r8d
   140020bcd:	or     r8d,eax
   140020bd0:	mov    eax,DWORD PTR [rbp+0x7]
   140020bd3:	add    edx,edx
   140020bd5:	shr    ecx,0x1f
   140020bd8:	add    r9d,r9d
   140020bdb:	lea    r12d,[rax+rdx*1]
   140020bdf:	or     r9d,ecx
   140020be2:	cmp    r12d,edx
   140020be5:	jb     0x140020bec
   140020be7:	cmp    r12d,eax
   140020bea:	jae    0x140020c0d
   140020bec:	xor    r14d,r14d
   140020bef:	lea    eax,[r8+0x1]
   140020bf3:	mov    ecx,r14d
   140020bf6:	cmp    eax,r8d
   140020bf9:	jb     0x140020c00
   140020bfb:	cmp    eax,r11d
   140020bfe:	jae    0x140020c03
   140020c00:	mov    ecx,r11d
   140020c03:	mov    r8d,eax
   140020c06:	test   ecx,ecx
   140020c08:	je     0x140020c0d
   140020c0a:	add    r9d,r11d
   140020c0d:	mov    rax,QWORD PTR [rbp+0x7]
   140020c11:	shr    rax,0x20
   140020c15:	lea    r14d,[r8+rax*1]
   140020c19:	cmp    r14d,r8d
   140020c1c:	jb     0x140020c23
   140020c1e:	cmp    r14d,eax
   140020c21:	jae    0x140020c26
   140020c23:	add    r9d,r11d
   140020c26:	mov    eax,r12d
   140020c29:	add    r9d,esi
   140020c2c:	lea    edx,[r12+r12*1]
   140020c30:	shr    eax,0x1f
   140020c33:	xor    r12d,r12d
   140020c36:	lea    r8d,[r14+r14*1]
   140020c3a:	or     r8d,eax
   140020c3d:	mov    ecx,r14d
   140020c40:	lea    eax,[r9+r9*1]
   140020c44:	shr    ecx,0x1f
   140020c47:	sub    r15d,r11d
   140020c4a:	mov    DWORD PTR [rbp-0x19],edx
   140020c4d:	or     eax,ecx
   140020c4f:	mov    DWORD PTR [rbp-0x15],r8d
   140020c53:	mov    DWORD PTR [rbp-0x11],eax
   140020c56:	shr    eax,0x18
   140020c59:	mov    BYTE PTR [rbp-0xe],r12b
   140020c5d:	add    al,0x30
   140020c5f:	mov    BYTE PTR [r10],al
   140020c62:	add    r10,r11
   140020c65:	test   r15d,r15d
   140020c68:	jle    0x140020c72
   140020c6a:	mov    esi,DWORD PTR [rbp-0x11]
   140020c6d:	jmp    0x140020b9e
   140020c72:	sub    r10,r11
   140020c75:	mov    al,BYTE PTR [r10]
   140020c78:	sub    r10,r11
   140020c7b:	cmp    al,0x35
   140020c7d:	jl     0x140020ce9
   140020c7f:	jmp    0x140020c8e
   140020c81:	cmp    BYTE PTR [r10],0x39
   140020c85:	jne    0x140020c93
   140020c87:	mov    BYTE PTR [r10],0x30
   140020c8b:	sub    r10,r11
   140020c8e:	cmp    r10,rdi
   140020c91:	jae    0x140020c81
   140020c93:	cmp    r10,rdi
   140020c96:	jae    0x140020c9f
   140020c98:	add    r10,r11
   140020c9b:	add    WORD PTR [rbx],r11w
   140020c9f:	add    BYTE PTR [r10],r11b
   140020ca2:	sub    r10b,bl
   140020ca5:	sub    r10b,0x3
   140020ca9:	movsx  rax,r10b
   140020cad:	mov    BYTE PTR [rbx+0x3],r10b
   140020cb1:	mov    BYTE PTR [rax+rbx*1+0x4],r12b
   140020cb6:	mov    eax,r11d
   140020cb9:	mov    rcx,QWORD PTR [rbp+0x17]
   140020cbd:	xor    rcx,rsp
   140020cc0:	call   0x14000d0a0
   140020cc5:	mov    rbx,QWORD PTR [rsp+0x108]
   140020ccd:	add    rsp,0xc0
   140020cd4:	pop    r15
   140020cd6:	pop    r14
   140020cd8:	pop    r13
   140020cda:	pop    r12
   140020cdc:	pop    rdi
   140020cdd:	pop    rsi
   140020cde:	pop    rbp
   140020cdf:	ret    
   140020ce0:	cmp    BYTE PTR [r10],0x30
   140020ce4:	jne    0x140020cee
   140020ce6:	sub    r10,r11
   140020ce9:	cmp    r10,rdi
   140020cec:	jae    0x140020ce0
   140020cee:	cmp    r10,rdi
   140020cf1:	jae    0x140020ca2
   140020cf3:	mov    eax,0x20
   140020cf8:	mov    r9d,0x8000
   140020cfe:	mov    WORD PTR [rbx],r12w
   140020d02:	cmp    WORD PTR [rbp-0x67],r9w
   140020d07:	lea    ecx,[rax+0xd]
   140020d0a:	mov    BYTE PTR [rbx+0x3],r11b
   140020d0e:	cmove  eax,ecx
   140020d11:	mov    BYTE PTR [rbx+0x2],al
   140020d14:	mov    BYTE PTR [rdi],0x30
   140020d17:	jmp    0x140020352
   140020d1c:	xor    r9d,r9d
   140020d1f:	xor    r8d,r8d
   140020d22:	xor    edx,edx
   140020d24:	xor    ecx,ecx
   140020d26:	mov    QWORD PTR [rsp+0x20],r12
   140020d2b:	call   0x140008678
   140020d30:	int3   
   140020d31:	xor    r9d,r9d
   140020d34:	xor    r8d,r8d
   140020d37:	xor    edx,edx
   140020d39:	xor    ecx,ecx
   140020d3b:	mov    QWORD PTR [rsp+0x20],r12
   140020d40:	call   0x140008678
   140020d45:	int3   
   140020d46:	xor    r9d,r9d
   140020d49:	xor    r8d,r8d
   140020d4c:	xor    edx,edx
   140020d4e:	xor    ecx,ecx
   140020d50:	mov    QWORD PTR [rsp+0x20],r12
   140020d55:	call   0x140008678
   140020d5a:	int3   
   140020d5b:	xor    r9d,r9d
   140020d5e:	xor    r8d,r8d
   140020d61:	xor    edx,edx
   140020d63:	xor    ecx,ecx
   140020d65:	mov    QWORD PTR [rsp+0x20],r12
   140020d6a:	call   0x140008678
   140020d6f:	int3   
   140020d70:	mov    eax,DWORD PTR [rcx]
   140020d72:	mov    r10d,DWORD PTR [rdx]
   140020d75:	xor    r9d,r9d
   140020d78:	lea    r8d,[rax+r10*1]
   140020d7c:	mov    r11,rdx
   140020d7f:	cmp    r8d,eax
   140020d82:	jb     0x140020d89
   140020d84:	cmp    r8d,r10d
   140020d87:	jae    0x140020d8f
   140020d89:	mov    r9d,0x1
   140020d8f:	mov    DWORD PTR [rcx],r8d
   140020d92:	test   r9d,r9d
   140020d95:	je     0x140020dba
   140020d97:	mov    eax,DWORD PTR [rcx+0x4]
   140020d9a:	xor    r8d,r8d
   140020d9d:	lea    edx,[rax+0x1]
   140020da0:	cmp    edx,eax
   140020da2:	jb     0x140020da9
   140020da4:	cmp    edx,0x1
   140020da7:	jae    0x140020daf
   140020da9:	mov    r8d,0x1
   140020daf:	mov    DWORD PTR [rcx+0x4],edx
   140020db2:	test   r8d,r8d
   140020db5:	je     0x140020dba
   140020db7:	inc    DWORD PTR [rcx+0x8]
   140020dba:	mov    eax,DWORD PTR [rcx+0x4]
   140020dbd:	mov    r9d,DWORD PTR [r11+0x4]
   140020dc1:	xor    r8d,r8d
   140020dc4:	lea    edx,[rax+r9*1]
   140020dc8:	cmp    edx,eax
   140020dca:	jb     0x140020dd1
   140020dcc:	cmp    edx,r9d
   140020dcf:	jae    0x140020dd7
   140020dd1:	mov    r8d,0x1
   140020dd7:	mov    DWORD PTR [rcx+0x4],edx
   140020dda:	test   r8d,r8d
   140020ddd:	je     0x140020de2
   140020ddf:	inc    DWORD PTR [rcx+0x8]
   140020de2:	mov    eax,DWORD PTR [r11+0x8]
   140020de6:	add    DWORD PTR [rcx+0x8],eax
   140020de9:	ret    
   140020dea:	int3   
   140020deb:	int3   
   140020dec:	mov    QWORD PTR [rsp+0x8],rbx
   140020df1:	push   rdi
   140020df2:	sub    rsp,0x20
   140020df6:	or     edi,0xffffffff
   140020df9:	mov    rbx,rcx
   140020dfc:	test   rcx,rcx
   140020dff:	jne    0x140020e15
   140020e01:	call   0x1400095b8
   140020e06:	mov    DWORD PTR [rax],0x16
   140020e0c:	call   0x140008628
   140020e11:	or     eax,edi
   140020e13:	jmp    0x140020e5b
   140020e15:	test   BYTE PTR [rcx+0x18],0x83
   140020e19:	je     0x140020e55
   140020e1b:	call   0x140010914
   140020e20:	mov    rcx,rbx
   140020e23:	mov    edi,eax
   140020e25:	call   0x140023fd4
   140020e2a:	mov    rcx,rbx
   140020e2d:	call   0x140010840
   140020e32:	mov    ecx,eax
   140020e34:	call   0x140023e54
   140020e39:	test   eax,eax
   140020e3b:	jns    0x140020e42
   140020e3d:	or     edi,0xffffffff
   140020e40:	jmp    0x140020e55
   140020e42:	mov    rcx,QWORD PTR [rbx+0x28]
   140020e46:	test   rcx,rcx
   140020e49:	je     0x140020e55
   140020e4b:	call   0x140006444
   140020e50:	and    QWORD PTR [rbx+0x28],0x0
   140020e55:	and    DWORD PTR [rbx+0x18],0x0
   140020e59:	mov    eax,edi
   140020e5b:	mov    rbx,QWORD PTR [rsp+0x30]
   140020e60:	add    rsp,0x20
   140020e64:	pop    rdi
   140020e65:	ret    
   140020e66:	int3   
   140020e67:	int3   
   140020e68:	mov    QWORD PTR [rsp+0x10],rbx
   140020e6d:	mov    QWORD PTR [rsp+0x8],rcx
   140020e72:	push   rdi
   140020e73:	sub    rsp,0x20
   140020e77:	mov    rbx,rcx
   140020e7a:	or     edi,0xffffffff
   140020e7d:	xor    eax,eax
   140020e7f:	test   rcx,rcx
   140020e82:	setne  al
   140020e85:	test   eax,eax
   140020e87:	jne    0x140020e9d
   140020e89:	call   0x1400095b8
   140020e8e:	mov    DWORD PTR [rax],0x16
   140020e94:	call   0x140008628
   140020e99:	mov    eax,edi
   140020e9b:	jmp    0x140020ec3
   140020e9d:	test   BYTE PTR [rcx+0x18],0x40
   140020ea1:	je     0x140020ea9
   140020ea3:	and    DWORD PTR [rcx+0x18],0x0
   140020ea7:	jmp    0x140020e99
   140020ea9:	call   0x140010734
   140020eae:	nop
   140020eaf:	mov    rcx,rbx
   140020eb2:	call   0x140020dec
   140020eb7:	mov    edi,eax
   140020eb9:	mov    rcx,rbx
   140020ebc:	call   0x1400107d0
   140020ec1:	jmp    0x140020e99
   140020ec3:	mov    rbx,QWORD PTR [rsp+0x38]
   140020ec8:	add    rsp,0x20
   140020ecc:	pop    rdi
   140020ecd:	ret    
   140020ece:	int3   
   140020ecf:	int3   
   140020ed0:	mov    QWORD PTR [rsp+0x8],rbx
   140020ed5:	mov    QWORD PTR [rsp+0x10],rsi
   140020eda:	mov    QWORD PTR [rsp+0x18],rdi
   140020edf:	push   r15
   140020ee1:	sub    rsp,0x20
   140020ee5:	movsxd rax,ecx
   140020ee8:	mov    rsi,rax
   140020eeb:	sar    rsi,0x5
   140020eef:	lea    r15,[rip+0x1779a]        # 0x140038690
   140020ef6:	and    eax,0x1f
   140020ef9:	imul   rbx,rax,0x58
   140020efd:	mov    rdi,QWORD PTR [r15+rsi*8]
   140020f01:	cmp    DWORD PTR [rbx+rdi*1+0xc],0x0
   140020f06:	jne    0x140020f3c
   140020f08:	mov    ecx,0xa
   140020f0d:	call   0x140008760
   140020f12:	nop
   140020f13:	cmp    DWORD PTR [rbx+rdi*1+0xc],0x0
   140020f18:	jne    0x140020f32
   140020f1a:	lea    rcx,[rbx+0x10]
   140020f1e:	add    rcx,rdi
   140020f21:	xor    r8d,r8d
   140020f24:	mov    edx,0xfa0
   140020f29:	call   0x140008d04
   140020f2e:	inc    DWORD PTR [rbx+rdi*1+0xc]
   140020f32:	mov    ecx,0xa
   140020f37:	call   0x14000897c
   140020f3c:	mov    rcx,QWORD PTR [r15+rsi*8]
   140020f40:	add    rcx,0x10
   140020f44:	add    rcx,rbx
   140020f47:	call   QWORD PTR [rip+0x61bb]        # 0x140027108
   140020f4d:	mov    eax,0x1
   140020f52:	mov    rbx,QWORD PTR [rsp+0x30]
   140020f57:	mov    rsi,QWORD PTR [rsp+0x38]
   140020f5c:	mov    rdi,QWORD PTR [rsp+0x40]
   140020f61:	add    rsp,0x20
   140020f65:	pop    r15
   140020f67:	ret    
   140020f68:	mov    rax,rsp
   140020f6b:	mov    QWORD PTR [rax+0x8],rbx
   140020f6f:	mov    QWORD PTR [rax+0x10],rsi
   140020f73:	mov    QWORD PTR [rax+0x18],rdi
   140020f77:	mov    QWORD PTR [rax+0x20],r12
   140020f7b:	push   r13
   140020f7d:	push   r14
   140020f7f:	push   r15
   140020f81:	sub    rsp,0x30
   140020f85:	or     r13,0xffffffffffffffff
   140020f89:	mov    esi,r13d
   140020f8c:	xor    r12d,r12d
   140020f8f:	lea    ebx,[r13+0xc]
   140020f93:	mov    ecx,ebx
   140020f95:	call   0x140008858
   140020f9a:	test   eax,eax
   140020f9c:	jne    0x140020fa6
   140020f9e:	mov    eax,r13d
   140020fa1:	jmp    0x140021141
   140020fa6:	mov    ecx,ebx
   140020fa8:	call   0x140008760
   140020fad:	nop
   140020fae:	mov    edi,r12d
   140020fb1:	mov    DWORD PTR [rsp+0x24],r12d
   140020fb6:	lea    r14,[rip+0x176d3]        # 0x140038690
   140020fbd:	cmp    edi,0x40
   140020fc0:	jge    0x140021135
   140020fc6:	movsxd r15,edi
   140020fc9:	mov    rbx,QWORD PTR [r14+r15*8]
   140020fcd:	test   rbx,rbx
   140020fd0:	je     0x1400210b4
   140020fd6:	mov    QWORD PTR [rsp+0x28],rbx
   140020fdb:	mov    rax,QWORD PTR [r14+r15*8]
   140020fdf:	add    rax,0xb00
   140020fe5:	cmp    rbx,rax
   140020fe8:	jae    0x1400210a0
   140020fee:	test   BYTE PTR [rbx+0x8],0x1
   140020ff2:	jne    0x140021090
   140020ff8:	cmp    DWORD PTR [rbx+0xc],r12d
   140020ffc:	jne    0x14002102d
   140020ffe:	mov    ecx,0xa
   140021003:	call   0x140008760
   140021008:	nop
   140021009:	cmp    DWORD PTR [rbx+0xc],r12d
   14002100d:	jne    0x140021023
   14002100f:	lea    rcx,[rbx+0x10]
   140021013:	xor    r8d,r8d
   140021016:	mov    edx,0xfa0
   14002101b:	call   0x140008d04
   140021020:	inc    DWORD PTR [rbx+0xc]
   140021023:	mov    ecx,0xa
   140021028:	call   0x14000897c
   14002102d:	test   r12d,r12d
   140021030:	jne    0x140021090
   140021032:	lea    rcx,[rbx+0x10]
   140021036:	call   QWORD PTR [rip+0x60cc]        # 0x140027108
   14002103c:	test   BYTE PTR [rbx+0x8],0x1
   140021040:	je     0x14002104e
   140021042:	lea    rcx,[rbx+0x10]
   140021046:	call   QWORD PTR [rip+0x60c4]        # 0x140027110
   14002104c:	jmp    0x140021090
   14002104e:	lea    r14,[rip+0x1763b]        # 0x140038690
   140021055:	test   r12d,r12d
   140021058:	jne    0x140021090
   14002105a:	mov    BYTE PTR [rbx+0x8],0x1
   14002105e:	mov    QWORD PTR [rbx],r13
   140021061:	sub    rbx,QWORD PTR [r14+r15*8]
   140021065:	movabs rax,0x2e8ba2e8ba2e8ba3
   14002106f:	imul   rbx
   140021072:	mov    rsi,rdx
   140021075:	sar    rsi,0x4
   140021079:	mov    rax,rsi
   14002107c:	shr    rax,0x3f
   140021080:	add    rsi,rax
   140021083:	mov    eax,edi
   140021085:	shl    eax,0x5
   140021088:	add    esi,eax
   14002108a:	mov    DWORD PTR [rsp+0x20],esi
   14002108e:	jmp    0x1400210a0
   140021090:	add    rbx,0x58
   140021094:	lea    r14,[rip+0x175f5]        # 0x140038690
   14002109b:	jmp    0x140020fd6
   1400210a0:	cmp    esi,r13d
   1400210a3:	jne    0x140021135
   1400210a9:	inc    edi
   1400210ab:	mov    DWORD PTR [rsp+0x24],edi
   1400210af:	jmp    0x140020fbd
   1400210b4:	mov    edx,0x58
   1400210b9:	lea    ecx,[rdx-0x38]
   1400210bc:	call   0x140007ed4
   1400210c1:	mov    QWORD PTR [rsp+0x28],rax
   1400210c6:	test   rax,rax
   1400210c9:	je     0x140021135
   1400210cb:	movsxd rdx,edi
   1400210ce:	mov    QWORD PTR [r14+rdx*8],rax
   1400210d2:	add    DWORD PTR [rip+0x18f6b],0x20        # 0x14003a044
   1400210d9:	mov    rcx,QWORD PTR [r14+rdx*8]
   1400210dd:	add    rcx,0xb00
   1400210e4:	cmp    rax,rcx
   1400210e7:	jae    0x140021101
   1400210e9:	mov    WORD PTR [rax+0x8],0xa00
   1400210ef:	mov    QWORD PTR [rax],r13
   1400210f2:	mov    DWORD PTR [rax+0xc],r12d
   1400210f6:	add    rax,0x58
   1400210fa:	mov    QWORD PTR [rsp+0x28],rax
   1400210ff:	jmp    0x1400210d9
   140021101:	shl    edi,0x5
   140021104:	mov    DWORD PTR [rsp+0x20],edi
   140021108:	movsxd rcx,edi
   14002110b:	mov    rax,rcx
   14002110e:	sar    rax,0x5
   140021112:	and    ecx,0x1f
   140021115:	imul   rcx,rcx,0x58
   140021119:	mov    rax,QWORD PTR [r14+rax*8]
   14002111d:	mov    BYTE PTR [rax+rcx*1+0x8],0x1
   140021122:	mov    ecx,edi
   140021124:	call   0x140020ed0
   140021129:	test   eax,eax
   14002112b:	cmove  edi,r13d
   14002112f:	mov    esi,edi
   140021131:	mov    DWORD PTR [rsp+0x20],edi
   140021135:	mov    ecx,0xb
   14002113a:	call   0x14000897c
   14002113f:	mov    eax,esi
   140021141:	mov    rbx,QWORD PTR [rsp+0x50]
   140021146:	mov    rsi,QWORD PTR [rsp+0x58]
   14002114b:	mov    rdi,QWORD PTR [rsp+0x60]
   140021150:	mov    r12,QWORD PTR [rsp+0x68]
   140021155:	add    rsp,0x30
   140021159:	pop    r15
   14002115b:	pop    r14
   14002115d:	pop    r13
   14002115f:	ret    
   140021160:	mov    QWORD PTR [rsp+0x8],rbx
   140021165:	mov    QWORD PTR [rsp+0x10],rdi
   14002116a:	push   r14
   14002116c:	sub    rsp,0x20
   140021170:	test   ecx,ecx
   140021172:	js     0x1400211e3
   140021174:	cmp    ecx,DWORD PTR [rip+0x18eca]        # 0x14003a044
   14002117a:	jae    0x1400211e3
   14002117c:	movsxd rax,ecx
   14002117f:	lea    r14,[rip+0x1750a]        # 0x140038690
   140021186:	mov    rdi,rax
   140021189:	and    eax,0x1f
   14002118c:	sar    rdi,0x5
   140021190:	imul   rbx,rax,0x58
   140021194:	mov    rax,QWORD PTR [r14+rdi*8]
   140021198:	test   BYTE PTR [rax+rbx*1+0x8],0x1
   14002119d:	je     0x1400211e3
   14002119f:	cmp    QWORD PTR [rax+rbx*1],0xffffffffffffffff
   1400211a4:	je     0x1400211e3
   1400211a6:	cmp    DWORD PTR [rip+0x16e13],0x1        # 0x140037fc0
   1400211ad:	jne    0x1400211d6
   1400211af:	test   ecx,ecx
   1400211b1:	je     0x1400211c9
   1400211b3:	dec    ecx
   1400211b5:	je     0x1400211c2
   1400211b7:	dec    ecx
   1400211b9:	jne    0x1400211d6
   1400211bb:	mov    ecx,0xfffffff4
   1400211c0:	jmp    0x1400211ce
   1400211c2:	mov    ecx,0xfffffff5
   1400211c7:	jmp    0x1400211ce
   1400211c9:	mov    ecx,0xfffffff6
   1400211ce:	xor    edx,edx
   1400211d0:	call   QWORD PTR [rip+0x5e7a]        # 0x140027050
   1400211d6:	mov    rax,QWORD PTR [r14+rdi*8]
   1400211da:	or     QWORD PTR [rbx+rax*1],0xffffffffffffffff
   1400211df:	xor    eax,eax
   1400211e1:	jmp    0x1400211f9
   1400211e3:	call   0x1400095b8
   1400211e8:	mov    DWORD PTR [rax],0x9
   1400211ee:	call   0x140009548
   1400211f3:	and    DWORD PTR [rax],0x0
   1400211f6:	or     eax,0xffffffff
   1400211f9:	mov    rbx,QWORD PTR [rsp+0x30]
   1400211fe:	mov    rdi,QWORD PTR [rsp+0x38]
   140021203:	add    rsp,0x20
   140021207:	pop    r14
   140021209:	ret    
   14002120a:	int3   
   14002120b:	int3   
   14002120c:	sub    rsp,0x28
   140021210:	cmp    ecx,0xfffffffe
   140021213:	jne    0x14002122a
   140021215:	call   0x140009548
   14002121a:	and    DWORD PTR [rax],0x0
   14002121d:	call   0x1400095b8
   140021222:	mov    DWORD PTR [rax],0x9
   140021228:	jmp    0x140021277
   14002122a:	test   ecx,ecx
   14002122c:	js     0x14002125f
   14002122e:	cmp    ecx,DWORD PTR [rip+0x18e10]        # 0x14003a044
   140021234:	jae    0x14002125f
   140021236:	movsxd rcx,ecx
   140021239:	lea    r8,[rip+0x17450]        # 0x140038690
   140021240:	mov    rax,rcx
   140021243:	and    ecx,0x1f
   140021246:	sar    rax,0x5
   14002124a:	imul   rdx,rcx,0x58
   14002124e:	mov    rax,QWORD PTR [r8+rax*8]
   140021252:	test   BYTE PTR [rax+rdx*1+0x8],0x1
   140021257:	je     0x14002125f
   140021259:	mov    rax,QWORD PTR [rax+rdx*1]
   14002125d:	jmp    0x14002127b
   14002125f:	call   0x140009548
   140021264:	and    DWORD PTR [rax],0x0
   140021267:	call   0x1400095b8
   14002126c:	mov    DWORD PTR [rax],0x9
   140021272:	call   0x140008628
   140021277:	or     rax,0xffffffffffffffff
   14002127b:	add    rsp,0x28
   14002127f:	ret    
   140021280:	mov    rax,rsp
   140021283:	mov    QWORD PTR [rax+0x8],rbx
   140021287:	mov    QWORD PTR [rax+0x18],rsi
   14002128b:	mov    QWORD PTR [rax+0x20],rdi
   14002128f:	push   r14
   140021291:	sub    rsp,0x30
   140021295:	mov    rsi,rcx
   140021298:	xor    r14d,r14d
   14002129b:	mov    DWORD PTR [rax-0x18],r14d
   14002129f:	test   dl,0x8
   1400212a2:	movzx  ebx,r14b
   1400212a6:	lea    eax,[r14+0x20]
   1400212aa:	cmovne ebx,eax
   1400212ad:	bt     edx,0xe
   1400212b1:	jae    0x1400212b6
   1400212b3:	or     bl,0x80
   1400212b6:	test   dl,dl
   1400212b8:	jns    0x1400212bd
   1400212ba:	or     bl,0x10
   1400212bd:	call   QWORD PTR [rip+0x5f5d]        # 0x140027220
   1400212c3:	test   eax,eax
   1400212c5:	jne    0x1400212dc
   1400212c7:	call   QWORD PTR [rip+0x5db3]        # 0x140027080
   1400212cd:	mov    ecx,eax
   1400212cf:	call   0x140009568
   1400212d4:	or     eax,0xffffffff
   1400212d7:	jmp    0x140021364
   1400212dc:	cmp    eax,0x2
   1400212df:	jne    0x1400212e6
   1400212e1:	or     bl,0x40
   1400212e4:	jmp    0x1400212ee
   1400212e6:	cmp    eax,0x3
   1400212e9:	jne    0x1400212ee
   1400212eb:	or     bl,0x8
   1400212ee:	call   0x140020f68
   1400212f3:	movsxd rdi,eax
   1400212f6:	mov    DWORD PTR [rsp+0x48],edi
   1400212fa:	cmp    edi,0xffffffff
   1400212fd:	jne    0x140021314
   1400212ff:	call   0x1400095b8
   140021304:	mov    DWORD PTR [rax],0x18
   14002130a:	call   0x140009548
   14002130f:	mov    DWORD PTR [rax],r14d
   140021312:	jmp    0x1400212d4
   140021314:	mov    rdx,rsi
   140021317:	mov    ecx,edi
   140021319:	call   0x14002137c
   14002131e:	or     bl,0x1
   140021321:	mov    rax,rdi
   140021324:	mov    rdx,rdi
   140021327:	sar    rdx,0x5
   14002132b:	lea    r8,[rip+0x1735e]        # 0x140038690
   140021332:	and    eax,0x1f
   140021335:	imul   rcx,rax,0x58
   140021339:	mov    rax,QWORD PTR [r8+rdx*8]
   14002133d:	mov    BYTE PTR [rcx+rax*1+0x8],bl
   140021341:	mov    rax,QWORD PTR [r8+rdx*8]
   140021345:	and    BYTE PTR [rcx+rax*1+0x38],0x80
   14002134a:	mov    rax,QWORD PTR [r8+rdx*8]
   14002134e:	and    BYTE PTR [rcx+rax*1+0x38],0x7f
   140021353:	mov    DWORD PTR [rsp+0x20],0x1
   14002135b:	mov    ecx,edi
   14002135d:	call   0x14002142c
   140021362:	mov    eax,edi
   140021364:	mov    rbx,QWORD PTR [rsp+0x40]
   140021369:	mov    rsi,QWORD PTR [rsp+0x50]
   14002136e:	mov    rdi,QWORD PTR [rsp+0x58]
   140021373:	add    rsp,0x30
   140021377:	pop    r14
   140021379:	ret    
   14002137a:	int3   
   14002137b:	int3   
   14002137c:	mov    QWORD PTR [rsp+0x8],rbx
   140021381:	mov    QWORD PTR [rsp+0x10],rsi
   140021386:	mov    QWORD PTR [rsp+0x18],rdi
   14002138b:	push   r14
   14002138d:	sub    rsp,0x20
   140021391:	mov    rbx,rdx
   140021394:	test   ecx,ecx
   140021396:	js     0x1400213fd
   140021398:	cmp    ecx,DWORD PTR [rip+0x18ca6]        # 0x14003a044
   14002139e:	jae    0x1400213fd
   1400213a0:	movsxd rax,ecx
   1400213a3:	lea    r14,[rip+0x172e6]        # 0x140038690
   1400213aa:	mov    rdi,rax
   1400213ad:	and    eax,0x1f
   1400213b0:	sar    rdi,0x5
   1400213b4:	imul   rsi,rax,0x58
   1400213b8:	mov    rax,QWORD PTR [r14+rdi*8]
   1400213bc:	cmp    QWORD PTR [rsi+rax*1],0xffffffffffffffff
   1400213c1:	jne    0x1400213fd
   1400213c3:	cmp    DWORD PTR [rip+0x16bf6],0x1        # 0x140037fc0
   1400213ca:	jne    0x1400213f1
   1400213cc:	test   ecx,ecx
   1400213ce:	je     0x1400213e6
   1400213d0:	dec    ecx
   1400213d2:	je     0x1400213df
   1400213d4:	dec    ecx
   1400213d6:	jne    0x1400213f1
   1400213d8:	mov    ecx,0xfffffff4
   1400213dd:	jmp    0x1400213eb
   1400213df:	mov    ecx,0xfffffff5
   1400213e4:	jmp    0x1400213eb
   1400213e6:	mov    ecx,0xfffffff6
   1400213eb:	call   QWORD PTR [rip+0x5c5f]        # 0x140027050
   1400213f1:	mov    rax,QWORD PTR [r14+rdi*8]
   1400213f5:	mov    QWORD PTR [rsi+rax*1],rbx
   1400213f9:	xor    eax,eax
   1400213fb:	jmp    0x140021413
   1400213fd:	call   0x1400095b8
   140021402:	mov    DWORD PTR [rax],0x9
   140021408:	call   0x140009548
   14002140d:	and    DWORD PTR [rax],0x0
   140021410:	or     eax,0xffffffff
   140021413:	mov    rbx,QWORD PTR [rsp+0x30]
   140021418:	mov    rsi,QWORD PTR [rsp+0x38]
   14002141d:	mov    rdi,QWORD PTR [rsp+0x40]
   140021422:	add    rsp,0x20
   140021426:	pop    r14
   140021428:	ret    
   140021429:	int3   
   14002142a:	int3   
   14002142b:	int3   
   14002142c:	movsxd rdx,ecx
   14002142f:	lea    r8,[rip+0x1725a]        # 0x140038690
   140021436:	mov    rax,rdx
   140021439:	and    edx,0x1f
   14002143c:	sar    rax,0x5
   140021440:	imul   rcx,rdx,0x58
   140021444:	mov    rax,QWORD PTR [r8+rax*8]
   140021448:	add    rcx,0x10
   14002144c:	add    rcx,rax
   14002144f:	rex.W jmp QWORD PTR [rip+0x5cba]        # 0x140027110
   140021456:	int3   
   140021457:	int3   
   140021458:	mov    QWORD PTR [rsp+0x10],rbx
   14002145d:	mov    DWORD PTR [rsp+0x8],ecx
   140021461:	push   rsi
   140021462:	push   rdi
   140021463:	push   r12
   140021465:	push   r14
   140021467:	push   r15
   140021469:	sub    rsp,0x20
   14002146d:	mov    esi,r8d
   140021470:	mov    r14,rdx
   140021473:	movsxd rbx,ecx
   140021476:	cmp    ebx,0xfffffffe
   140021479:	jne    0x140021493
   14002147b:	call   0x140009548
   140021480:	and    DWORD PTR [rax],0x0
   140021483:	call   0x1400095b8
   140021488:	mov    DWORD PTR [rax],0x9
   14002148e:	jmp    0x140021527
   140021493:	test   ecx,ecx
   140021495:	js     0x14002150f
   140021497:	cmp    ebx,DWORD PTR [rip+0x18ba7]        # 0x14003a044
   14002149d:	jae    0x14002150f
   14002149f:	mov    rax,rbx
   1400214a2:	mov    rdi,rbx
   1400214a5:	sar    rdi,0x5
   1400214a9:	lea    r12,[rip+0x171e0]        # 0x140038690
   1400214b0:	and    eax,0x1f
   1400214b3:	imul   r15,rax,0x58
   1400214b7:	mov    rax,QWORD PTR [r12+rdi*8]
   1400214bb:	movsx  ecx,BYTE PTR [rax+r15*1+0x8]
   1400214c1:	and    ecx,0x1
   1400214c4:	je     0x14002150f
   1400214c6:	mov    ecx,ebx
   1400214c8:	call   0x140020ed0
   1400214cd:	nop
   1400214ce:	mov    rax,QWORD PTR [r12+rdi*8]
   1400214d2:	test   BYTE PTR [rax+r15*1+0x8],0x1
   1400214d8:	je     0x1400214ec
   1400214da:	mov    r8d,esi
   1400214dd:	mov    rdx,r14
   1400214e0:	mov    ecx,ebx
   1400214e2:	call   0x140021540
   1400214e7:	mov    rdi,rax
   1400214ea:	jmp    0x140021503
   1400214ec:	call   0x1400095b8
   1400214f1:	mov    DWORD PTR [rax],0x9
   1400214f7:	call   0x140009548
   1400214fc:	and    DWORD PTR [rax],0x0
   1400214ff:	or     rdi,0xffffffffffffffff
   140021503:	mov    ecx,ebx
   140021505:	call   0x14002142c
   14002150a:	mov    rax,rdi
   14002150d:	jmp    0x14002152b
   14002150f:	call   0x140009548
   140021514:	and    DWORD PTR [rax],0x0
   140021517:	call   0x1400095b8
   14002151c:	mov    DWORD PTR [rax],0x9
   140021522:	call   0x140008628
   140021527:	or     rax,0xffffffffffffffff
   14002152b:	mov    rbx,QWORD PTR [rsp+0x58]
   140021530:	add    rsp,0x20
   140021534:	pop    r15
   140021536:	pop    r14
   140021538:	pop    r12
   14002153a:	pop    rdi
   14002153b:	pop    rsi
   14002153c:	ret    
   14002153d:	int3   
   14002153e:	int3   
   14002153f:	int3   
   140021540:	mov    QWORD PTR [rsp+0x8],rbx
   140021545:	mov    QWORD PTR [rsp+0x10],rsi
   14002154a:	push   rdi
   14002154b:	sub    rsp,0x20
   14002154f:	movsxd rbx,ecx
   140021552:	mov    edi,r8d
   140021555:	mov    rsi,rdx
   140021558:	mov    ecx,ebx
   14002155a:	call   0x14002120c
   14002155f:	cmp    rax,0xffffffffffffffff
   140021563:	jne    0x140021576
   140021565:	call   0x1400095b8
   14002156a:	mov    DWORD PTR [rax],0x9
   140021570:	or     rax,0xffffffffffffffff
   140021574:	jmp    0x1400215c3
   140021576:	lea    r8,[rsp+0x48]
   14002157b:	mov    r9d,edi
   14002157e:	mov    rdx,rsi
   140021581:	mov    rcx,rax
   140021584:	call   QWORD PTR [rip+0x5abe]        # 0x140027048
   14002158a:	test   eax,eax
   14002158c:	jne    0x14002159d
   14002158e:	call   QWORD PTR [rip+0x5aec]        # 0x140027080
   140021594:	mov    ecx,eax
   140021596:	call   0x140009568
   14002159b:	jmp    0x140021570
   14002159d:	mov    rcx,rbx
   1400215a0:	mov    rax,rbx
   1400215a3:	lea    rdx,[rip+0x170e6]        # 0x140038690
   1400215aa:	sar    rax,0x5
   1400215ae:	and    ecx,0x1f
   1400215b1:	mov    rax,QWORD PTR [rdx+rax*8]
   1400215b5:	imul   rcx,rcx,0x58
   1400215b9:	and    BYTE PTR [rax+rcx*1+0x8],0xfd
   1400215be:	mov    rax,QWORD PTR [rsp+0x48]
   1400215c3:	mov    rbx,QWORD PTR [rsp+0x30]
   1400215c8:	mov    rsi,QWORD PTR [rsp+0x38]
   1400215cd:	add    rsp,0x20
   1400215d1:	pop    rdi
   1400215d2:	ret    
   1400215d3:	int3   
   1400215d4:	mov    rax,rsp
   1400215d7:	mov    QWORD PTR [rax+0x8],rbx
   1400215db:	mov    QWORD PTR [rax+0x10],rbp
   1400215df:	mov    QWORD PTR [rax+0x18],rsi
   1400215e3:	mov    QWORD PTR [rax+0x20],rdi
   1400215e7:	push   r14
   1400215e9:	sub    rsp,0x50
   1400215ed:	xor    r14d,r14d
   1400215f0:	mov    rbp,r8
   1400215f3:	mov    rsi,rdx
   1400215f6:	mov    rdi,rcx
   1400215f9:	test   rdx,rdx
   1400215fc:	je     0x140021611
   1400215fe:	test   r8,r8
   140021601:	je     0x140021611
   140021603:	cmp    BYTE PTR [rdx],r14b
   140021606:	jne    0x14002162e
   140021608:	test   rcx,rcx
   14002160b:	je     0x140021611
   14002160d:	mov    WORD PTR [rcx],r14w
   140021611:	xor    eax,eax
   140021613:	mov    rbx,QWORD PTR [rsp+0x60]
   140021618:	mov    rbp,QWORD PTR [rsp+0x68]
   14002161d:	mov    rsi,QWORD PTR [rsp+0x70]
   140021622:	mov    rdi,QWORD PTR [rsp+0x78]
   140021627:	add    rsp,0x50
   14002162b:	pop    r14
   14002162d:	ret    
   14002162e:	lea    rcx,[rsp+0x30]
   140021633:	mov    rdx,r9
   140021636:	call   0x14000a000
   14002163b:	mov    rax,QWORD PTR [rsp+0x30]
   140021640:	cmp    QWORD PTR [rax+0x138],r14
   140021647:	jne    0x14002165e
   140021649:	test   rdi,rdi
   14002164c:	je     0x140021654
   14002164e:	movzx  eax,BYTE PTR [rsi]
   140021651:	mov    WORD PTR [rdi],ax
   140021654:	mov    ebx,0x1
   140021659:	jmp    0x14002170b
   14002165e:	movzx  ecx,BYTE PTR [rsi]
   140021661:	lea    rdx,[rsp+0x30]
   140021666:	call   0x14001db48
   14002166b:	mov    ebx,0x1
   140021670:	test   eax,eax
   140021672:	je     0x1400216ce
   140021674:	mov    rcx,QWORD PTR [rsp+0x30]
   140021679:	mov    r9d,DWORD PTR [rcx+0xd4]
   140021680:	cmp    r9d,ebx
   140021683:	jle    0x1400216b4
   140021685:	cmp    ebp,r9d
   140021688:	jl     0x1400216b4
   14002168a:	mov    ecx,DWORD PTR [rcx+0x4]
   14002168d:	mov    eax,r14d
   140021690:	test   rdi,rdi
   140021693:	setne  al
   140021696:	lea    edx,[rbx+0x8]
   140021699:	mov    r8,rsi
   14002169c:	mov    DWORD PTR [rsp+0x28],eax
   1400216a0:	mov    QWORD PTR [rsp+0x20],rdi
   1400216a5:	call   QWORD PTR [rip+0x59fd]        # 0x1400270a8
   1400216ab:	mov    rcx,QWORD PTR [rsp+0x30]
   1400216b0:	test   eax,eax
   1400216b2:	jne    0x1400216c6
   1400216b4:	movsxd rax,DWORD PTR [rcx+0xd4]
   1400216bb:	cmp    rbp,rax
   1400216be:	jb     0x1400216fd
   1400216c0:	cmp    BYTE PTR [rsi+0x1],r14b
   1400216c4:	je     0x1400216fd
   1400216c6:	mov    ebx,DWORD PTR [rcx+0xd4]
   1400216cc:	jmp    0x14002170b
   1400216ce:	mov    eax,r14d
   1400216d1:	test   rdi,rdi
   1400216d4:	mov    r9d,ebx
   1400216d7:	setne  al
   1400216da:	mov    r8,rsi
   1400216dd:	mov    edx,0x9
   1400216e2:	mov    DWORD PTR [rsp+0x28],eax
   1400216e6:	mov    rax,QWORD PTR [rsp+0x30]
   1400216eb:	mov    QWORD PTR [rsp+0x20],rdi
   1400216f0:	mov    ecx,DWORD PTR [rax+0x4]
   1400216f3:	call   QWORD PTR [rip+0x59af]        # 0x1400270a8
   1400216f9:	test   eax,eax
   1400216fb:	jne    0x14002170b
   1400216fd:	call   0x1400095b8
   140021702:	or     ebx,0xffffffff
   140021705:	mov    DWORD PTR [rax],0x2a
   14002170b:	cmp    BYTE PTR [rsp+0x48],r14b
   140021710:	je     0x14002171e
   140021712:	mov    rcx,QWORD PTR [rsp+0x40]
   140021717:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14002171e:	mov    eax,ebx
   140021720:	jmp    0x140021613
   140021725:	int3   
   140021726:	int3   
   140021727:	int3   
   140021728:	xor    r9d,r9d
   14002172b:	jmp    0x1400215d4
   140021730:	rex push rbx
   140021732:	sub    rsp,0x20
   140021736:	movzx  ebx,cx
   140021739:	mov    ecx,0x3
   14002173e:	call   0x140008760
   140021743:	nop
   140021744:	movzx  ecx,bx
   140021747:	call   0x140021764
   14002174c:	movzx  ebx,ax
   14002174f:	mov    ecx,0x3
   140021754:	call   0x14000897c
   140021759:	movzx  eax,bx
   14002175c:	add    rsp,0x20
   140021760:	pop    rbx
   140021761:	ret    
   140021762:	int3   
   140021763:	int3   
   140021764:	mov    WORD PTR [rsp+0x8],cx
   140021769:	sub    rsp,0x38
   14002176d:	mov    rcx,QWORD PTR [rip+0x1610c]        # 0x140037880
   140021774:	cmp    rcx,0xfffffffffffffffe
   140021778:	jne    0x140021786
   14002177a:	call   0x14002402c
   14002177f:	mov    rcx,QWORD PTR [rip+0x160fa]        # 0x140037880
   140021786:	cmp    rcx,0xffffffffffffffff
   14002178a:	jne    0x140021793
   14002178c:	mov    eax,0xffff
   140021791:	jmp    0x1400217b8
   140021793:	and    QWORD PTR [rsp+0x20],0x0
   140021799:	lea    r9,[rsp+0x48]
   14002179e:	lea    rdx,[rsp+0x40]
   1400217a3:	mov    r8d,0x1
   1400217a9:	call   QWORD PTR [rip+0x5891]        # 0x140027040
   1400217af:	test   eax,eax
   1400217b1:	je     0x14002178c
   1400217b3:	movzx  eax,WORD PTR [rsp+0x40]
   1400217b8:	add    rsp,0x38
   1400217bc:	ret    
   1400217bd:	int3   
   1400217be:	int3   
   1400217bf:	int3   
   1400217c0:	mov    rax,rsp
   1400217c3:	mov    QWORD PTR [rax+0x8],rbx
   1400217c7:	mov    QWORD PTR [rax+0x18],rbp
   1400217cb:	mov    QWORD PTR [rax+0x20],rsi
   1400217cf:	push   rdi
   1400217d0:	push   r12
   1400217d2:	push   r13
   1400217d4:	push   r14
   1400217d6:	push   r15
   1400217d8:	sub    rsp,0x40
   1400217dc:	mov    r12,rdx
   1400217df:	mov    rdx,rcx
   1400217e2:	lea    rcx,[rax-0x48]
   1400217e6:	mov    r14d,r9d
   1400217e9:	mov    r15,r8
   1400217ec:	call   0x14000a000
   1400217f1:	test   r15,r15
   1400217f4:	je     0x1400217f9
   1400217f6:	mov    QWORD PTR [r15],r12
   1400217f9:	test   r12,r12
   1400217fc:	je     0x14002180c
   1400217fe:	test   r14d,r14d
   140021801:	je     0x140021823
   140021803:	lea    eax,[r14-0x2]
   140021807:	cmp    eax,0x22
   14002180a:	jbe    0x140021823
   14002180c:	call   0x1400095b8
   140021811:	mov    DWORD PTR [rax],0x16
   140021817:	call   0x140008628
   14002181c:	xor    edi,edi
   14002181e:	jmp    0x1400219d9
   140021823:	mov    sil,BYTE PTR [r12]
   140021827:	mov    r8,QWORD PTR [rsp+0x20]
   14002182c:	xor    edi,edi
   14002182e:	lea    rbx,[r12+0x1]
   140021833:	cmp    DWORD PTR [r8+0xd4],0x1
   14002183b:	jle    0x140021857
   14002183d:	lea    r8,[rsp+0x20]
   140021842:	movzx  ecx,sil
   140021846:	mov    edx,0x8
   14002184b:	call   0x14001c590
   140021850:	mov    r8,QWORD PTR [rsp+0x20]
   140021855:	jmp    0x140021869
   140021857:	mov    rax,QWORD PTR [r8+0x108]
   14002185e:	movzx  ecx,sil
   140021862:	movzx  eax,WORD PTR [rax+rcx*2]
   140021866:	and    eax,0x8
   140021869:	test   eax,eax
   14002186b:	je     0x140021875
   14002186d:	mov    sil,BYTE PTR [rbx]
   140021870:	inc    rbx
   140021873:	jmp    0x140021833
   140021875:	mov    ebp,DWORD PTR [rsp+0x90]
   14002187c:	cmp    sil,0x2d
   140021880:	jne    0x140021887
   140021882:	or     ebp,0x2
   140021885:	jmp    0x14002188d
   140021887:	cmp    sil,0x2b
   14002188b:	jne    0x140021893
   14002188d:	mov    sil,BYTE PTR [rbx]
   140021890:	inc    rbx
   140021893:	test   r14d,r14d
   140021896:	jne    0x1400218bc
   140021898:	cmp    sil,0x30
   14002189c:	je     0x1400218a6
   14002189e:	mov    r14d,0xa
   1400218a4:	jmp    0x1400218d8
   1400218a6:	mov    al,BYTE PTR [rbx]
   1400218a8:	sub    al,0x58
   1400218aa:	test   al,0xdf
   1400218ac:	je     0x1400218b6
   1400218ae:	mov    r14d,0x8
   1400218b4:	jmp    0x1400218d8
   1400218b6:	mov    r14d,0x10
   1400218bc:	cmp    r14d,0x10
   1400218c0:	jne    0x1400218d8
   1400218c2:	cmp    sil,0x30
   1400218c6:	jne    0x1400218d8
   1400218c8:	mov    al,BYTE PTR [rbx]
   1400218ca:	sub    al,0x58
   1400218cc:	test   al,0xdf
   1400218ce:	jne    0x1400218d8
   1400218d0:	mov    sil,BYTE PTR [rbx+0x1]
   1400218d4:	add    rbx,0x2
   1400218d8:	mov    r13,QWORD PTR [r8+0x108]
   1400218df:	movsxd r10,r14d
   1400218e2:	xor    edx,edx
   1400218e4:	or     rax,0xffffffffffffffff
   1400218e8:	div    r10
   1400218eb:	mov    r11,rdx
   1400218ee:	mov    r9,rax
   1400218f1:	movzx  ecx,sil
   1400218f5:	movzx  r8d,WORD PTR [r13+rcx*2+0x0]
   1400218fb:	mov    ecx,r8d
   1400218fe:	and    ecx,0x4
   140021901:	je     0x14002190c
   140021903:	movsx  edx,sil
   140021907:	sub    edx,0x30
   14002190a:	jmp    0x140021926
   14002190c:	and    r8d,0x103
   140021913:	je     0x140021944
   140021915:	lea    eax,[rsi-0x61]
   140021918:	movsx  edx,sil
   14002191c:	cmp    al,0x19
   14002191e:	ja     0x140021923
   140021920:	sub    edx,0x20
   140021923:	add    edx,0xffffffc9
   140021926:	cmp    edx,r14d
   140021929:	jae    0x140021944
   14002192b:	or     ebp,0x8
   14002192e:	cmp    rdi,r9
   140021931:	jb     0x140021958
   140021933:	jne    0x14002193c
   140021935:	mov    eax,edx
   140021937:	cmp    rax,r11
   14002193a:	jbe    0x140021958
   14002193c:	or     ebp,0x4
   14002193f:	test   r15,r15
   140021942:	jne    0x140021964
   140021944:	dec    rbx
   140021947:	test   bpl,0x8
   14002194b:	jne    0x14002196c
   14002194d:	test   r15,r15
   140021950:	cmovne rbx,r12
   140021954:	xor    edi,edi
   140021956:	jmp    0x1400219c8
   140021958:	mov    rcx,r10
   14002195b:	imul   rcx,rdi
   14002195f:	mov    edi,edx
   140021961:	add    rdi,rcx
   140021964:	mov    sil,BYTE PTR [rbx]
   140021967:	inc    rbx
   14002196a:	jmp    0x1400218f1
   14002196c:	movabs rsi,0x7fffffffffffffff
   140021976:	test   bpl,0x4
   14002197a:	jne    0x1400219a1
   14002197c:	test   bpl,0x1
   140021980:	jne    0x1400219c8
   140021982:	mov    eax,ebp
   140021984:	and    eax,0x2
   140021987:	je     0x140021998
   140021989:	movabs rcx,0x8000000000000000
   140021993:	cmp    rdi,rcx
   140021996:	ja     0x1400219a1
   140021998:	test   eax,eax
   14002199a:	jne    0x1400219c8
   14002199c:	cmp    rdi,rsi
   14002199f:	jbe    0x1400219c8
   1400219a1:	call   0x1400095b8
   1400219a6:	mov    DWORD PTR [rax],0x22
   1400219ac:	test   bpl,0x1
   1400219b0:	je     0x1400219b8
   1400219b2:	or     rdi,0xffffffffffffffff
   1400219b6:	jmp    0x1400219c8
   1400219b8:	mov    al,bpl
   1400219bb:	and    al,0x2
   1400219bd:	neg    al
   1400219bf:	sbb    rdi,rdi
   1400219c2:	neg    rdi
   1400219c5:	add    rdi,rsi
   1400219c8:	test   r15,r15
   1400219cb:	je     0x1400219d0
   1400219cd:	mov    QWORD PTR [r15],rbx
   1400219d0:	test   bpl,0x2
   1400219d4:	je     0x1400219d9
   1400219d6:	neg    rdi
   1400219d9:	cmp    BYTE PTR [rsp+0x38],0x0
   1400219de:	je     0x1400219ec
   1400219e0:	mov    rcx,QWORD PTR [rsp+0x30]
   1400219e5:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   1400219ec:	lea    r11,[rsp+0x40]
   1400219f1:	mov    rax,rdi
   1400219f4:	mov    rbx,QWORD PTR [r11+0x30]
   1400219f8:	mov    rbp,QWORD PTR [r11+0x40]
   1400219fc:	mov    rsi,QWORD PTR [r11+0x48]
   140021a00:	mov    rsp,r11
   140021a03:	pop    r15
   140021a05:	pop    r14
   140021a07:	pop    r13
   140021a09:	pop    r12
   140021a0b:	pop    rdi
   140021a0c:	ret    
   140021a0d:	int3   
   140021a0e:	int3   
   140021a0f:	int3   
   140021a10:	sub    rsp,0x28
   140021a14:	mov    r9,rdx
   140021a17:	mov    rdx,rcx
   140021a1a:	lea    rcx,[rsp+0x48]
   140021a1f:	call   0x140019600
   140021a24:	movss  xmm0,DWORD PTR [rsp+0x48]
   140021a2a:	add    rsp,0x28
   140021a2e:	ret    
   140021a2f:	int3   
   140021a30:	sub    rsp,0x38
   140021a34:	xor    eax,eax
   140021a36:	mov    r9d,r8d
   140021a39:	mov    r8,rdx
   140021a3c:	cmp    DWORD PTR [rip+0x175de],eax        # 0x140039020
   140021a42:	mov    DWORD PTR [rsp+0x20],eax
   140021a46:	mov    rdx,rcx
   140021a49:	jne    0x140021a54
   140021a4b:	lea    rcx,[rip+0x15496]        # 0x140036ee8
   140021a52:	jmp    0x140021a56
   140021a54:	xor    ecx,ecx
   140021a56:	call   0x1400217c0
   140021a5b:	add    rsp,0x38
   140021a5f:	ret    
   140021a60:	sub    rsp,0x38
   140021a64:	and    DWORD PTR [rsp+0x20],0x0
   140021a69:	mov    rax,r9
   140021a6c:	mov    r9d,r8d
   140021a6f:	mov    r8,rdx
   140021a72:	mov    rdx,rcx
   140021a75:	mov    rcx,rax
   140021a78:	call   0x1400217c0
   140021a7d:	add    rsp,0x38
   140021a81:	ret    
   140021a82:	int3   
   140021a83:	int3   
   140021a84:	sub    rsp,0x38
   140021a88:	and    DWORD PTR [rsp+0x20],0x0
   140021a8d:	mov    rax,r9
   140021a90:	mov    r9d,r8d
   140021a93:	mov    r8,rdx
   140021a96:	mov    rdx,rcx
   140021a99:	mov    rcx,rax
   140021a9c:	call   0x1400217c0
   140021aa1:	add    rsp,0x38
   140021aa5:	ret    
   140021aa6:	int3   
   140021aa7:	int3   
   140021aa8:	jmp    0x140024068
   140021aad:	int3   
   140021aae:	int3   
   140021aaf:	int3   
   140021ab0:	sub    rsp,0x38
   140021ab4:	and    DWORD PTR [rsp+0x20],0x0
   140021ab9:	mov    rax,r9
   140021abc:	mov    r9d,r8d
   140021abf:	mov    r8,rdx
   140021ac2:	mov    rdx,rcx
   140021ac5:	mov    rcx,rax
   140021ac8:	call   0x1400217c0
   140021acd:	add    rsp,0x38
   140021ad1:	ret    
   140021ad2:	int3   
   140021ad3:	int3   
   140021ad4:	sub    rsp,0x38
   140021ad8:	cmp    DWORD PTR [rip+0x17541],0x0        # 0x140039020
   140021adf:	mov    r9d,r8d
   140021ae2:	mov    r8,rdx
   140021ae5:	mov    rdx,rcx
   140021ae8:	mov    DWORD PTR [rsp+0x20],0x1
   140021af0:	jne    0x140021afb
   140021af2:	lea    rcx,[rip+0x153ef]        # 0x140036ee8
   140021af9:	jmp    0x140021afd
   140021afb:	xor    ecx,ecx
   140021afd:	call   0x1400217c0
   140021b02:	add    rsp,0x38
   140021b06:	ret    
   140021b07:	int3   
   140021b08:	sub    rsp,0x38
   140021b0c:	mov    rax,r9
   140021b0f:	mov    r9d,r8d
   140021b12:	mov    r8,rdx
   140021b15:	mov    rdx,rcx
   140021b18:	mov    rcx,rax
   140021b1b:	mov    DWORD PTR [rsp+0x20],0x1
   140021b23:	call   0x1400217c0
   140021b28:	add    rsp,0x38
   140021b2c:	ret    
   140021b2d:	int3   
   140021b2e:	int3   
   140021b2f:	int3   
   140021b30:	sub    rsp,0x38
   140021b34:	mov    rax,r9
   140021b37:	mov    r9d,r8d
   140021b3a:	mov    r8,rdx
   140021b3d:	mov    rdx,rcx
   140021b40:	mov    rcx,rax
   140021b43:	mov    DWORD PTR [rsp+0x20],0x1
   140021b4b:	call   0x1400217c0
   140021b50:	add    rsp,0x38
   140021b54:	ret    
   140021b55:	int3   
   140021b56:	int3   
   140021b57:	int3   
   140021b58:	sub    rsp,0x38
   140021b5c:	mov    rax,r9
   140021b5f:	mov    r9d,r8d
   140021b62:	mov    r8,rdx
   140021b65:	mov    rdx,rcx
   140021b68:	mov    rcx,rax
   140021b6b:	mov    DWORD PTR [rsp+0x20],0x1
   140021b73:	call   0x1400217c0
   140021b78:	add    rsp,0x38
   140021b7c:	ret    
   140021b7d:	int3   
   140021b7e:	int3   
   140021b7f:	int3   
   140021b80:	sub    rsp,0x28
   140021b84:	mov    r9,rdx
   140021b87:	mov    rdx,rcx
   140021b8a:	lea    rcx,[rsp+0x40]
   140021b8f:	xor    r8d,r8d
   140021b92:	call   0x140019600
   140021b97:	movss  xmm0,DWORD PTR [rsp+0x40]
   140021b9d:	add    rsp,0x28
   140021ba1:	ret    
   140021ba2:	int3   
   140021ba3:	int3   
   140021ba4:	jmp    0x140021a30
   140021ba9:	int3   
   140021baa:	int3   
   140021bab:	int3   
   140021bac:	jmp    0x1400241bc
   140021bb1:	int3   
   140021bb2:	int3   
   140021bb3:	int3   
   140021bb4:	jmp    0x140021a30
   140021bb9:	int3   
   140021bba:	int3   
   140021bbb:	int3   
   140021bbc:	jmp    0x140021ad4
   140021bc1:	int3   
   140021bc2:	int3   
   140021bc3:	int3   
   140021bc4:	jmp    0x140021ad4
   140021bc9:	int3   
   140021bca:	int3   
   140021bcb:	int3   
   140021bcc:	mov    QWORD PTR [rsp+0x8],rbx
   140021bd1:	mov    QWORD PTR [rsp+0x18],rbp
   140021bd6:	push   rsi
   140021bd7:	push   rdi
   140021bd8:	push   r12
   140021bda:	push   r14
   140021bdc:	push   r15
   140021bde:	sub    rsp,0x40
   140021be2:	mov    r12,rdx
   140021be5:	mov    rdx,rcx
   140021be8:	lea    rcx,[rsp+0x20]
   140021bed:	mov    r14d,r9d
   140021bf0:	mov    r15,r8
   140021bf3:	call   0x14000a000
   140021bf8:	test   r15,r15
   140021bfb:	je     0x140021c00
   140021bfd:	mov    QWORD PTR [r15],r12
   140021c00:	test   r12,r12
   140021c03:	je     0x140021c13
   140021c05:	test   r14d,r14d
   140021c08:	je     0x140021c28
   140021c0a:	lea    eax,[r14-0x2]
   140021c0e:	cmp    eax,0x22
   140021c11:	jbe    0x140021c28
   140021c13:	call   0x1400095b8
   140021c18:	mov    DWORD PTR [rax],0x16
   140021c1e:	call   0x140008628
   140021c23:	jmp    0x140021cae
   140021c28:	mov    sil,BYTE PTR [r12]
   140021c2c:	mov    r8,QWORD PTR [rsp+0x20]
   140021c31:	xor    edi,edi
   140021c33:	lea    rbx,[r12+0x1]
   140021c38:	cmp    DWORD PTR [r8+0xd4],0x1
   140021c40:	jle    0x140021c5c
   140021c42:	lea    r8,[rsp+0x20]
   140021c47:	movzx  ecx,sil
   140021c4b:	mov    edx,0x8
   140021c50:	call   0x14001c590
   140021c55:	mov    r8,QWORD PTR [rsp+0x20]
   140021c5a:	jmp    0x140021c6e
   140021c5c:	mov    rax,QWORD PTR [r8+0x108]
   140021c63:	movzx  ecx,sil
   140021c67:	movzx  eax,WORD PTR [rax+rcx*2]
   140021c6b:	and    eax,0x8
   140021c6e:	test   eax,eax
   140021c70:	je     0x140021c7a
   140021c72:	mov    sil,BYTE PTR [rbx]
   140021c75:	inc    rbx
   140021c78:	jmp    0x140021c38
   140021c7a:	mov    ebp,DWORD PTR [rsp+0x90]
   140021c81:	cmp    sil,0x2d
   140021c85:	jne    0x140021c8c
   140021c87:	or     ebp,0x2
   140021c8a:	jmp    0x140021c92
   140021c8c:	cmp    sil,0x2b
   140021c90:	jne    0x140021c98
   140021c92:	mov    sil,BYTE PTR [rbx]
   140021c95:	inc    rbx
   140021c98:	test   r14d,r14d
   140021c9b:	je     0x140021cba
   140021c9d:	lea    eax,[r14-0x2]
   140021ca1:	cmp    eax,0x22
   140021ca4:	jbe    0x140021cb5
   140021ca6:	test   r15,r15
   140021ca9:	je     0x140021cae
   140021cab:	mov    QWORD PTR [r15],r12
   140021cae:	xor    edi,edi
   140021cb0:	jmp    0x140021dda
   140021cb5:	test   r14d,r14d
   140021cb8:	jne    0x140021ce0
   140021cba:	cmp    sil,0x30
   140021cbe:	je     0x140021cc8
   140021cc0:	mov    r14d,0xa
   140021cc6:	jmp    0x140021cfc
   140021cc8:	mov    al,BYTE PTR [rbx]
   140021cca:	sub    al,0x58
   140021ccc:	test   al,0xdf
   140021cce:	je     0x140021cd8
   140021cd0:	mov    r14d,0x8
   140021cd6:	jmp    0x140021cfc
   140021cd8:	mov    r14d,0x10
   140021cde:	jmp    0x140021cec
   140021ce0:	cmp    r14d,0x10
   140021ce4:	jne    0x140021cfc
   140021ce6:	cmp    sil,0x30
   140021cea:	jne    0x140021cfc
   140021cec:	mov    al,BYTE PTR [rbx]
   140021cee:	sub    al,0x58
   140021cf0:	test   al,0xdf
   140021cf2:	jne    0x140021cfc
   140021cf4:	mov    sil,BYTE PTR [rbx+0x1]
   140021cf8:	add    rbx,0x2
   140021cfc:	mov    r10,QWORD PTR [r8+0x108]
   140021d03:	xor    edx,edx
   140021d05:	or     eax,0xffffffff
   140021d08:	div    r14d
   140021d0b:	mov    r9d,eax
   140021d0e:	movzx  ecx,sil
   140021d12:	movzx  r8d,WORD PTR [r10+rcx*2]
   140021d17:	mov    ecx,r8d
   140021d1a:	and    ecx,0x4
   140021d1d:	je     0x140021d28
   140021d1f:	movsx  ecx,sil
   140021d23:	sub    ecx,0x30
   140021d26:	jmp    0x140021d42
   140021d28:	and    r8d,0x103
   140021d2f:	je     0x140021d5d
   140021d31:	lea    eax,[rsi-0x61]
   140021d34:	movsx  ecx,sil
   140021d38:	cmp    al,0x19
   140021d3a:	ja     0x140021d3f
   140021d3c:	sub    ecx,0x20
   140021d3f:	add    ecx,0xffffffc9
   140021d42:	cmp    ecx,r14d
   140021d45:	jae    0x140021d5d
   140021d47:	or     ebp,0x8
   140021d4a:	cmp    edi,r9d
   140021d4d:	jb     0x140021d71
   140021d4f:	jne    0x140021d55
   140021d51:	cmp    ecx,edx
   140021d53:	jbe    0x140021d71
   140021d55:	or     ebp,0x4
   140021d58:	test   r15,r15
   140021d5b:	jne    0x140021d77
   140021d5d:	dec    rbx
   140021d60:	test   bpl,0x8
   140021d64:	jne    0x140021d7f
   140021d66:	test   r15,r15
   140021d69:	cmovne rbx,r12
   140021d6d:	xor    edi,edi
   140021d6f:	jmp    0x140021dca
   140021d71:	imul   edi,r14d
   140021d75:	add    edi,ecx
   140021d77:	mov    sil,BYTE PTR [rbx]
   140021d7a:	inc    rbx
   140021d7d:	jmp    0x140021d0e
   140021d7f:	mov    esi,0x7fffffff
   140021d84:	test   bpl,0x4
   140021d88:	jne    0x140021da7
   140021d8a:	test   bpl,0x1
   140021d8e:	jne    0x140021dca
   140021d90:	mov    eax,ebp
   140021d92:	and    eax,0x2
   140021d95:	je     0x140021d9f
   140021d97:	cmp    edi,0x80000000
   140021d9d:	ja     0x140021da7
   140021d9f:	test   eax,eax
   140021da1:	jne    0x140021dca
   140021da3:	cmp    edi,esi
   140021da5:	jbe    0x140021dca
   140021da7:	call   0x1400095b8
   140021dac:	mov    DWORD PTR [rax],0x22
   140021db2:	test   bpl,0x1
   140021db6:	je     0x140021dbd
   140021db8:	or     edi,0xffffffff
   140021dbb:	jmp    0x140021dca
   140021dbd:	mov    al,bpl
   140021dc0:	and    al,0x2
   140021dc2:	neg    al
   140021dc4:	sbb    edi,edi
   140021dc6:	neg    edi
   140021dc8:	add    edi,esi
   140021dca:	test   r15,r15
   140021dcd:	je     0x140021dd2
   140021dcf:	mov    QWORD PTR [r15],rbx
   140021dd2:	test   bpl,0x2
   140021dd6:	je     0x140021dda
   140021dd8:	neg    edi
   140021dda:	cmp    BYTE PTR [rsp+0x38],0x0
   140021ddf:	je     0x140021ded
   140021de1:	mov    rcx,QWORD PTR [rsp+0x30]
   140021de6:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140021ded:	lea    r11,[rsp+0x40]
   140021df2:	mov    eax,edi
   140021df4:	mov    rbx,QWORD PTR [r11+0x30]
   140021df8:	mov    rbp,QWORD PTR [r11+0x40]
   140021dfc:	mov    rsp,r11
   140021dff:	pop    r15
   140021e01:	pop    r14
   140021e03:	pop    r12
   140021e05:	pop    rdi
   140021e06:	pop    rsi
   140021e07:	ret    
   140021e08:	sub    rsp,0x38
   140021e0c:	and    DWORD PTR [rsp+0x20],0x0
   140021e11:	mov    rax,r9
   140021e14:	mov    r9d,r8d
   140021e17:	mov    r8,rdx
   140021e1a:	mov    rdx,rcx
   140021e1d:	mov    rcx,rax
   140021e20:	call   0x140021bcc
   140021e25:	add    rsp,0x38
   140021e29:	ret    
   140021e2a:	int3   
   140021e2b:	int3   
   140021e2c:	sub    rsp,0x38
   140021e30:	mov    rax,r9
   140021e33:	mov    r9d,r8d
   140021e36:	mov    r8,rdx
   140021e39:	mov    rdx,rcx
   140021e3c:	mov    rcx,rax
   140021e3f:	mov    DWORD PTR [rsp+0x20],0x1
   140021e47:	call   0x140021bcc
   140021e4c:	add    rsp,0x38
   140021e50:	ret    
   140021e51:	int3   
   140021e52:	int3   
   140021e53:	int3   
   140021e54:	sub    rsp,0x38
   140021e58:	xor    eax,eax
   140021e5a:	mov    r9d,r8d
   140021e5d:	mov    r8,rdx
   140021e60:	cmp    DWORD PTR [rip+0x171ba],eax        # 0x140039020
   140021e66:	mov    DWORD PTR [rsp+0x20],eax
   140021e6a:	mov    rdx,rcx
   140021e6d:	jne    0x140021e78
   140021e6f:	lea    rcx,[rip+0x15072]        # 0x140036ee8
   140021e76:	jmp    0x140021e7a
   140021e78:	xor    ecx,ecx
   140021e7a:	call   0x140021bcc
   140021e7f:	add    rsp,0x38
   140021e83:	ret    
   140021e84:	sub    rsp,0x38
   140021e88:	cmp    DWORD PTR [rip+0x17191],0x0        # 0x140039020
   140021e8f:	mov    r9d,r8d
   140021e92:	mov    r8,rdx
   140021e95:	mov    rdx,rcx
   140021e98:	mov    DWORD PTR [rsp+0x20],0x1
   140021ea0:	jne    0x140021eab
   140021ea2:	lea    rcx,[rip+0x1503f]        # 0x140036ee8
   140021ea9:	jmp    0x140021ead
   140021eab:	xor    ecx,ecx
   140021ead:	call   0x140021bcc
   140021eb2:	add    rsp,0x38
   140021eb6:	ret    
   140021eb7:	int3   
   140021eb8:	xor    eax,eax
   140021eba:	ret    
   140021ebb:	int3   
   140021ebc:	sub    rsp,0x28
   140021ec0:	call   0x14000b18c
   140021ec5:	mov    rcx,QWORD PTR [rax+0xc0]
   140021ecc:	cmp    rcx,QWORD PTR [rip+0x14ead]        # 0x140036d80
   140021ed3:	je     0x140021eeb
   140021ed5:	mov    eax,DWORD PTR [rax+0xc8]
   140021edb:	test   DWORD PTR [rip+0x15017],eax        # 0x140036ef8
   140021ee1:	jne    0x140021eeb
   140021ee3:	call   0x14000fff4
   140021ee8:	mov    rcx,rax
   140021eeb:	mov    eax,DWORD PTR [rcx+0x4]
   140021eee:	add    rsp,0x28
   140021ef2:	ret    
   140021ef3:	int3   
   140021ef4:	sub    rsp,0x28
   140021ef8:	call   0x14000b18c
   140021efd:	mov    rcx,QWORD PTR [rax+0xc0]
   140021f04:	cmp    rcx,QWORD PTR [rip+0x14e75]        # 0x140036d80
   140021f0b:	je     0x140021f23
   140021f0d:	mov    eax,DWORD PTR [rax+0xc8]
   140021f13:	test   DWORD PTR [rip+0x14fdf],eax        # 0x140036ef8
   140021f19:	jne    0x140021f23
   140021f1b:	call   0x14000fff4
   140021f20:	mov    rcx,rax
   140021f23:	mov    eax,DWORD PTR [rcx+0x8]
   140021f26:	add    rsp,0x28
   140021f2a:	ret    
   140021f2b:	int3   
   140021f2c:	sub    rsp,0x28
   140021f30:	call   0x14000b18c
   140021f35:	mov    rcx,QWORD PTR [rax+0xc0]
   140021f3c:	cmp    rcx,QWORD PTR [rip+0x14e3d]        # 0x140036d80
   140021f43:	je     0x140021f5b
   140021f45:	mov    eax,DWORD PTR [rax+0xc8]
   140021f4b:	test   DWORD PTR [rip+0x14fa7],eax        # 0x140036ef8
   140021f51:	jne    0x140021f5b
   140021f53:	call   0x14000fff4
   140021f58:	mov    rcx,rax
   140021f5b:	lea    rax,[rcx+0x128]
   140021f62:	add    rsp,0x28
   140021f66:	ret    
   140021f67:	int3   
   140021f68:	sub    rsp,0x28
   140021f6c:	call   0x14000b18c
   140021f71:	mov    rcx,QWORD PTR [rax+0xc0]
   140021f78:	cmp    rcx,QWORD PTR [rip+0x14e01]        # 0x140036d80
   140021f7f:	je     0x140021f97
   140021f81:	mov    eax,DWORD PTR [rax+0xc8]
   140021f87:	test   DWORD PTR [rip+0x14f6b],eax        # 0x140036ef8
   140021f8d:	jne    0x140021f97
   140021f8f:	call   0x14000fff4
   140021f94:	mov    rcx,rax
   140021f97:	mov    eax,DWORD PTR [rcx+0xd4]
   140021f9d:	add    rsp,0x28
   140021fa1:	ret    
   140021fa2:	int3   
   140021fa3:	int3   
   140021fa4:	test   rcx,rcx
   140021fa7:	je     0x140021f68
   140021fad:	mov    rax,QWORD PTR [rcx]
   140021fb0:	mov    eax,DWORD PTR [rax+0xd4]
   140021fb6:	ret    
   140021fb7:	int3   
   140021fb8:	mov    r11,rsp
   140021fbb:	mov    QWORD PTR [r11+0x10],rbx
   140021fbf:	mov    QWORD PTR [r11+0x18],rbp
   140021fc3:	mov    QWORD PTR [r11+0x20],rsi
   140021fc7:	push   rdi
   140021fc8:	push   r12
   140021fca:	push   r13
   140021fcc:	push   r14
   140021fce:	push   r15
   140021fd0:	sub    rsp,0x90
   140021fd7:	mov    rax,QWORD PTR [rip+0x14a62]        # 0x140036a40
   140021fde:	xor    rax,rsp
   140021fe1:	mov    QWORD PTR [rsp+0x88],rax
   140021fe9:	mov    r8,QWORD PTR [rcx+0x138]
   140021ff0:	xor    ebx,ebx
   140021ff2:	mov    rdi,rcx
   140021ff5:	mov    QWORD PTR [rsp+0x58],rbx
   140021ffa:	mov    r15d,ebx
   140021ffd:	mov    r12d,ebx
   140022000:	mov    r13d,ebx
   140022003:	mov    ebp,ebx
   140022005:	mov    QWORD PTR [r11-0x58],rcx
   140022009:	mov    QWORD PTR [r11-0x50],rbx
   14002200d:	test   r8,r8
   140022010:	je     0x140022356
   140022016:	lea    r14,[rcx+0x4]
   14002201a:	lea    esi,[rbx+0x1]
   14002201d:	cmp    DWORD PTR [r14],ebx
   140022020:	jne    0x140022040
   140022022:	lea    rcx,[r11-0x58]
   140022026:	xor    edx,edx
   140022028:	mov    r9d,0x1004
   14002202e:	mov    QWORD PTR [rsp+0x20],r14
   140022033:	call   0x140007bd0
   140022038:	test   eax,eax
   14002203a:	jne    0x140022326
   140022040:	mov    ecx,0x4
   140022045:	call   0x140007f54
   14002204a:	mov    ebp,0x180
   14002204f:	mov    edx,0x2
   140022054:	mov    ecx,ebp
   140022056:	mov    QWORD PTR [rsp+0x58],rax
   14002205b:	call   0x140007ed4
   140022060:	mov    rdx,rsi
   140022063:	mov    ecx,ebp
   140022065:	mov    r15,rax
   140022068:	call   0x140007ed4
   14002206d:	mov    rdx,rsi
   140022070:	mov    ecx,ebp
   140022072:	mov    r12,rax
   140022075:	call   0x140007ed4
   14002207a:	lea    ecx,[rbp-0x7f]
   14002207d:	mov    rdx,rsi
   140022080:	mov    r13,rax
   140022083:	call   0x140007ed4
   140022088:	mov    rbp,rax
   14002208b:	mov    rax,QWORD PTR [rsp+0x58]
   140022090:	test   rax,rax
   140022093:	je     0x140022326
   140022099:	test   r15,r15
   14002209c:	je     0x140022326
   1400220a2:	test   rbp,rbp
   1400220a5:	je     0x140022326
   1400220ab:	test   r12,r12
   1400220ae:	je     0x140022326
   1400220b4:	test   r13,r13
   1400220b7:	je     0x140022326
   1400220bd:	mov    DWORD PTR [rax],ebx
   1400220bf:	mov    rcx,rbp
   1400220c2:	mov    eax,ebx
   1400220c4:	mov    BYTE PTR [rcx],al
   1400220c6:	add    eax,esi
   1400220c8:	add    rcx,rsi
   1400220cb:	cmp    eax,0x100
   1400220d0:	jl     0x1400220c4
   1400220d2:	mov    ecx,DWORD PTR [r14]
   1400220d5:	lea    rdx,[rsp+0x70]
   1400220da:	call   QWORD PTR [rip+0x5120]        # 0x140027200
   1400220e0:	test   eax,eax
   1400220e2:	je     0x140022326
   1400220e8:	cmp    DWORD PTR [rsp+0x70],0x5
   1400220ed:	ja     0x140022326
   1400220f3:	movzx  eax,WORD PTR [rsp+0x70]
   1400220f8:	mov    rdx,QWORD PTR [rdi+0x138]
   1400220ff:	mov    DWORD PTR [rsp+0x40],ebx
   140022103:	mov    DWORD PTR [rsp+0x50],eax
   140022107:	mov    eax,DWORD PTR [r14]
   14002210a:	lea    rcx,[r12+0x81]
   140022112:	mov    DWORD PTR [rsp+0x38],eax
   140022116:	mov    eax,0xff
   14002211b:	lea    r9,[rbp+0x1]
   14002211f:	mov    DWORD PTR [rsp+0x30],eax
   140022123:	mov    QWORD PTR [rsp+0x28],rcx
   140022128:	lea    r8d,[rax+0x1]
   14002212c:	xor    ecx,ecx
   14002212e:	mov    DWORD PTR [rsp+0x20],eax
   140022132:	call   0x1400103d8
   140022137:	test   eax,eax
   140022139:	je     0x140022326
   14002213f:	mov    eax,DWORD PTR [r14]
   140022142:	mov    rdx,QWORD PTR [rdi+0x138]
   140022149:	mov    DWORD PTR [rsp+0x40],ebx
   14002214d:	mov    DWORD PTR [rsp+0x38],eax
   140022151:	mov    eax,0xff
   140022156:	lea    rcx,[r13+0x81]
   14002215d:	mov    DWORD PTR [rsp+0x30],eax
   140022161:	mov    QWORD PTR [rsp+0x28],rcx
   140022166:	lea    r9,[rbp+0x1]
   14002216a:	xor    ecx,ecx
   14002216c:	mov    r8d,0x200
   140022172:	mov    DWORD PTR [rsp+0x20],eax
   140022176:	call   0x1400103d8
   14002217b:	test   eax,eax
   14002217d:	je     0x140022326
   140022183:	cmp    DWORD PTR [rsp+0x50],esi
   140022187:	jle    0x1400221b7
   140022189:	cmp    BYTE PTR [rsp+0x76],bl
   14002218d:	je     0x1400221b7
   14002218f:	lea    rcx,[rsp+0x77]
   140022194:	cmp    BYTE PTR [rcx],bl
   140022196:	je     0x1400221b7
   140022198:	movzx  edx,BYTE PTR [rcx-0x1]
   14002219c:	jmp    0x1400221a7
   14002219e:	movsxd rax,edx
   1400221a1:	add    edx,esi
   1400221a3:	mov    BYTE PTR [rax+rbp*1],0x20
   1400221a7:	movzx  eax,BYTE PTR [rcx]
   1400221aa:	cmp    edx,eax
   1400221ac:	jle    0x14002219e
   1400221ae:	add    rcx,0x2
   1400221b2:	cmp    BYTE PTR [rcx-0x1],bl
   1400221b5:	jne    0x140022194
   1400221b7:	mov    eax,DWORD PTR [r14]
   1400221ba:	lea    rcx,[r15+0x100]
   1400221c1:	mov    DWORD PTR [rsp+0x30],ebx
   1400221c5:	mov    DWORD PTR [rsp+0x28],eax
   1400221c9:	mov    QWORD PTR [rsp+0x20],rcx
   1400221ce:	mov    r9d,0x100
   1400221d4:	xor    ecx,ecx
   1400221d6:	mov    r8,rbp
   1400221d9:	mov    edx,esi
   1400221db:	call   0x1400105e8
   1400221e0:	test   eax,eax
   1400221e2:	je     0x140022326
   1400221e8:	lea    r14,[r15+0xfe]
   1400221ef:	mov    WORD PTR [r14],bx
   1400221f3:	mov    BYTE PTR [r12+0x7f],bl
   1400221f8:	mov    BYTE PTR [r13+0x7f],bl
   1400221fc:	mov    BYTE PTR [r12+0x80],bl
   140022204:	mov    BYTE PTR [r13+0x80],bl
   14002220b:	cmp    DWORD PTR [rsp+0x50],esi
   14002220f:	jle    0x14002224a
   140022211:	cmp    BYTE PTR [rsp+0x76],bl
   140022215:	je     0x14002224a
   140022217:	lea    rcx,[rsp+0x77]
   14002221c:	cmp    BYTE PTR [rcx],bl
   14002221e:	je     0x14002224a
   140022220:	movzx  edx,BYTE PTR [rcx-0x1]
   140022224:	jmp    0x14002223a
   140022226:	movsxd rax,edx
   140022229:	mov    r8d,0x8000
   14002222f:	add    edx,esi
   140022231:	mov    WORD PTR [r15+rax*2+0x100],r8w
   14002223a:	movzx  eax,BYTE PTR [rcx]
   14002223d:	cmp    edx,eax
   14002223f:	jle    0x140022226
   140022241:	add    rcx,0x2
   140022245:	cmp    BYTE PTR [rcx-0x1],bl
   140022248:	jne    0x14002221c
   14002224a:	lea    rdx,[r15+0x200]
   140022251:	mov    r8d,0xfe
   140022257:	mov    rcx,r15
   14002225a:	call   0x1400056d0
   14002225f:	lea    rdx,[r12+0x100]
   140022267:	mov    r8d,0x7f
   14002226d:	mov    rcx,r12
   140022270:	call   0x1400056d0
   140022275:	lea    rdx,[r13+0x100]
   14002227c:	mov    r8d,0x7f
   140022282:	mov    rcx,r13
   140022285:	call   0x1400056d0
   14002228a:	mov    rcx,QWORD PTR [rdi+0xf8]
   140022291:	test   rcx,rcx
   140022294:	je     0x1400222da
   140022296:	lock dec DWORD PTR [rcx]
   140022299:	jne    0x1400222da
   14002229b:	mov    rcx,QWORD PTR [rdi+0x100]
   1400222a2:	sub    rcx,0xfe
   1400222a9:	call   0x140006444
   1400222ae:	mov    rcx,QWORD PTR [rdi+0x110]
   1400222b5:	add    rcx,0xffffffffffffff80
   1400222b9:	call   0x140006444
   1400222be:	mov    rcx,QWORD PTR [rdi+0x118]
   1400222c5:	add    rcx,0xffffffffffffff80
   1400222c9:	call   0x140006444
   1400222ce:	mov    rcx,QWORD PTR [rdi+0xf8]
   1400222d5:	call   0x140006444
   1400222da:	mov    rax,QWORD PTR [rsp+0x58]
   1400222df:	mov    DWORD PTR [rax],esi
   1400222e1:	mov    QWORD PTR [rdi+0xf8],rax
   1400222e8:	lea    rax,[r15+0x100]
   1400222ef:	mov    QWORD PTR [rdi+0x108],rax
   1400222f6:	lea    rax,[r12+0x80]
   1400222fe:	mov    QWORD PTR [rdi+0x100],r14
   140022305:	mov    QWORD PTR [rdi+0x110],rax
   14002230c:	lea    rax,[r13+0x80]
   140022313:	mov    QWORD PTR [rdi+0x118],rax
   14002231a:	mov    eax,DWORD PTR [rsp+0x50]
   14002231e:	mov    DWORD PTR [rdi+0xd4],eax
   140022324:	jmp    0x14002234a
   140022326:	mov    rcx,QWORD PTR [rsp+0x58]
   14002232b:	call   0x140006444
   140022330:	mov    rcx,r15
   140022333:	call   0x140006444
   140022338:	mov    rcx,r12
   14002233b:	call   0x140006444
   140022340:	mov    rcx,r13
   140022343:	call   0x140006444
   140022348:	mov    ebx,esi
   14002234a:	mov    rcx,rbp
   14002234d:	call   0x140006444
   140022352:	mov    eax,ebx
   140022354:	jmp    0x1400223aa
   140022356:	mov    rax,QWORD PTR [rcx+0xf8]
   14002235d:	test   rax,rax
   140022360:	je     0x140022365
   140022362:	lock dec DWORD PTR [rax]
   140022365:	lea    rax,[rip+0xce14]        # 0x14002f180
   14002236c:	mov    esi,0x1
   140022371:	mov    QWORD PTR [rcx+0xf8],rbx
   140022378:	mov    QWORD PTR [rcx+0x108],rax
   14002237f:	lea    rax,[rip+0xd28a]        # 0x14002f610
   140022386:	mov    QWORD PTR [rcx+0x100],rbx
   14002238d:	mov    QWORD PTR [rcx+0x110],rax
   140022394:	lea    rax,[rip+0xd3f5]        # 0x14002f790
   14002239b:	mov    DWORD PTR [rcx+0xd4],esi
   1400223a1:	mov    QWORD PTR [rcx+0x118],rax
   1400223a8:	xor    eax,eax
   1400223aa:	mov    rcx,QWORD PTR [rsp+0x88]
   1400223b2:	xor    rcx,rsp
   1400223b5:	call   0x14000d0a0
   1400223ba:	lea    r11,[rsp+0x90]
   1400223c2:	mov    rbx,QWORD PTR [r11+0x38]
   1400223c6:	mov    rbp,QWORD PTR [r11+0x40]
   1400223ca:	mov    rsi,QWORD PTR [r11+0x48]
   1400223ce:	mov    rsp,r11
   1400223d1:	pop    r15
   1400223d3:	pop    r14
   1400223d5:	pop    r13
   1400223d7:	pop    r12
   1400223d9:	pop    rdi
   1400223da:	ret    
   1400223db:	int3   
   1400223dc:	int3   
   1400223dd:	int3   
   1400223de:	int3   
   1400223df:	int3   
   1400223e0:	int3   
   1400223e1:	int3   
   1400223e2:	int3   
   1400223e3:	int3   
   1400223e4:	int3   
   1400223e5:	int3   
   1400223e6:	data16 nop WORD PTR [rax+rax*1+0x0]
   1400223f0:	sub    rdx,rcx
   1400223f3:	cmp    r8,0x8
   1400223f7:	jb     0x14002241b
   1400223f9:	test   cl,0x7
   1400223fc:	je     0x140022412
   1400223fe:	xchg   ax,ax
   140022400:	mov    al,BYTE PTR [rcx]
   140022402:	cmp    al,BYTE PTR [rdx+rcx*1]
   140022405:	jne    0x140022433
   140022407:	inc    rcx
   14002240a:	dec    r8
   14002240d:	test   cl,0x7
   140022410:	jne    0x140022400
   140022412:	mov    r9,r8
   140022415:	shr    r9,0x3
   140022419:	jne    0x14002243a
   14002241b:	test   r8,r8
   14002241e:	je     0x14002242f
   140022420:	mov    al,BYTE PTR [rcx]
   140022422:	cmp    al,BYTE PTR [rdx+rcx*1]
   140022425:	jne    0x140022433
   140022427:	inc    rcx
   14002242a:	dec    r8
   14002242d:	jne    0x140022420
   14002242f:	xor    rax,rax
   140022432:	ret    
   140022433:	sbb    eax,eax
   140022435:	sbb    eax,0xffffffff
   140022438:	ret    
   140022439:	nop
   14002243a:	shr    r9,0x2
   14002243e:	je     0x140022477
   140022440:	mov    rax,QWORD PTR [rcx]
   140022443:	cmp    rax,QWORD PTR [rdx+rcx*1]
   140022447:	jne    0x1400224a4
   140022449:	mov    rax,QWORD PTR [rcx+0x8]
   14002244d:	cmp    rax,QWORD PTR [rdx+rcx*1+0x8]
   140022452:	jne    0x1400224a0
   140022454:	mov    rax,QWORD PTR [rcx+0x10]
   140022458:	cmp    rax,QWORD PTR [rdx+rcx*1+0x10]
   14002245d:	jne    0x14002249c
   14002245f:	mov    rax,QWORD PTR [rcx+0x18]
   140022463:	cmp    rax,QWORD PTR [rdx+rcx*1+0x18]
   140022468:	jne    0x140022498
   14002246a:	add    rcx,0x20
   14002246e:	dec    r9
   140022471:	jne    0x140022440
   140022473:	and    r8,0x1f
   140022477:	mov    r9,r8
   14002247a:	shr    r9,0x3
   14002247e:	je     0x14002241b
   140022480:	mov    rax,QWORD PTR [rcx]
   140022483:	cmp    rax,QWORD PTR [rdx+rcx*1]
   140022487:	jne    0x1400224a4
   140022489:	add    rcx,0x8
   14002248d:	dec    r9
   140022490:	jne    0x140022480
   140022492:	and    r8,0x7
   140022496:	jmp    0x14002241b
   140022498:	add    rcx,0x8
   14002249c:	add    rcx,0x8
   1400224a0:	add    rcx,0x8
   1400224a4:	mov    rcx,QWORD PTR [rcx+rdx*1]
   1400224a8:	bswap  rax
   1400224ab:	bswap  rcx
   1400224ae:	cmp    rax,rcx
   1400224b1:	sbb    eax,eax
   1400224b3:	sbb    eax,0xffffffff
   1400224b6:	ret    
   1400224b7:	int3   
   1400224b8:	movzx  r8d,WORD PTR [rdx]
   1400224bc:	movzx  eax,WORD PTR [rcx]
   1400224bf:	sub    eax,r8d
   1400224c2:	jne    0x1400224de
   1400224c4:	sub    rcx,rdx
   1400224c7:	test   r8w,r8w
   1400224cb:	je     0x1400224de
   1400224cd:	add    rdx,0x2
   1400224d1:	movzx  r8d,WORD PTR [rdx]
   1400224d5:	movzx  eax,WORD PTR [rcx+rdx*1]
   1400224d9:	sub    eax,r8d
   1400224dc:	je     0x1400224c7
   1400224de:	test   eax,eax
   1400224e0:	jns    0x1400224e6
   1400224e2:	or     eax,0xffffffff
   1400224e5:	ret    
   1400224e6:	mov    ecx,0x1
   1400224eb:	test   eax,eax
   1400224ed:	cmovg  eax,ecx
   1400224f0:	ret    
   1400224f1:	int3   
   1400224f2:	int3   
   1400224f3:	int3   
   1400224f4:	xor    r10d,r10d
   1400224f7:	mov    r9,rdx
   1400224fa:	mov    rax,rcx
   1400224fd:	cmp    WORD PTR [rcx],r10w
   140022501:	je     0x14002252c
   140022503:	mov    r8,r9
   140022506:	cmp    WORD PTR [r9],r10w
   14002250a:	je     0x140022522
   14002250c:	movzx  edx,WORD PTR [r9]
   140022510:	cmp    dx,WORD PTR [rax]
   140022513:	je     0x14002252c
   140022515:	add    r8,0x2
   140022519:	movzx  edx,WORD PTR [r8]
   14002251d:	test   dx,dx
   140022520:	jne    0x140022510
   140022522:	add    rax,0x2
   140022526:	cmp    WORD PTR [rax],r10w
   14002252a:	jmp    0x140022501
   14002252c:	sub    rax,rcx
   14002252f:	sar    rax,1
   140022532:	ret    
   140022533:	int3   
   140022534:	test   r8,r8
   140022537:	jne    0x140022551
   140022539:	xor    eax,eax
   14002253b:	ret    
   14002253c:	movzx  eax,WORD PTR [rcx]
   14002253f:	test   ax,ax
   140022542:	je     0x140022556
   140022544:	cmp    ax,WORD PTR [rdx]
   140022547:	jne    0x140022556
   140022549:	add    rcx,0x2
   14002254d:	add    rdx,0x2
   140022551:	dec    r8
   140022554:	jne    0x14002253c
   140022556:	movzx  eax,WORD PTR [rcx]
   140022559:	movzx  ecx,WORD PTR [rdx]
   14002255c:	sub    eax,ecx
   14002255e:	ret    
   14002255f:	int3   
   140022560:	mov    r9,rdx
   140022563:	movzx  eax,WORD PTR [rcx]
   140022566:	test   ax,ax
   140022569:	je     0x140022595
   14002256b:	cmp    WORD PTR [r9],0x0
   140022570:	mov    r8,r9
   140022573:	je     0x14002258b
   140022575:	movzx  edx,WORD PTR [r9]
   140022579:	cmp    dx,ax
   14002257c:	je     0x140022591
   14002257e:	add    r8,0x2
   140022582:	movzx  edx,WORD PTR [r8]
   140022586:	test   dx,dx
   140022589:	jne    0x140022579
   14002258b:	add    rcx,0x2
   14002258f:	jmp    0x140022563
   140022591:	mov    rax,rcx
   140022594:	ret    
   140022595:	xor    eax,eax
   140022597:	ret    
   140022598:	rex push rbx
   14002259a:	sub    rsp,0xf0
   1400225a1:	mov    rax,QWORD PTR [rip+0x14498]        # 0x140036a40
   1400225a8:	xor    rax,rsp
   1400225ab:	mov    QWORD PTR [rsp+0xe0],rax
   1400225b3:	or     DWORD PTR [rcx+0x10],0x104
   1400225ba:	mov    rbx,rcx
   1400225bd:	lea    rcx,[rsp+0x30]
   1400225c2:	mov    edx,0x55
   1400225c7:	call   0x14000f570
   1400225cc:	cmp    eax,0x1
   1400225cf:	jle    0x1400225f9
   1400225d1:	lea    rcx,[rsp+0x30]
   1400225d6:	call   0x14000f9a0
   1400225db:	lea    rcx,[rbx+0x258]
   1400225e2:	lea    r8,[rsp+0x30]
   1400225e7:	lea    r9,[rax+0x1]
   1400225eb:	mov    edx,0x55
   1400225f0:	call   0x14000f9bc
   1400225f5:	test   eax,eax
   1400225f7:	jne    0x140022612
   1400225f9:	mov    rcx,QWORD PTR [rsp+0xe0]
   140022601:	xor    rcx,rsp
   140022604:	call   0x14000d0a0
   140022609:	add    rsp,0xf0
   140022610:	pop    rbx
   140022611:	ret    
   140022612:	and    QWORD PTR [rsp+0x20],0x0
   140022618:	xor    r9d,r9d
   14002261b:	xor    r8d,r8d
   14002261e:	xor    edx,edx
   140022620:	xor    ecx,ecx
   140022622:	call   0x140008678
   140022627:	int3   
   140022628:	rex push rbx
   14002262a:	sub    rsp,0x20
   14002262e:	mov    rbx,rcx
   140022631:	mov    rcx,QWORD PTR [rcx]
   140022634:	call   0x14000f9a0
   140022639:	mov    rcx,QWORD PTR [rbx+0x8]
   14002263d:	xor    edx,edx
   14002263f:	cmp    rax,0x3
   140022643:	sete   dl
   140022646:	mov    DWORD PTR [rbx+0x18],edx
   140022649:	call   0x14000f9a0
   14002264e:	xor    ecx,ecx
   140022650:	cmp    rax,0x3
   140022654:	sete   cl
   140022657:	cmp    DWORD PTR [rbx+0x18],0x0
   14002265b:	mov    DWORD PTR [rbx+0x1c],ecx
   14002265e:	je     0x140022667
   140022660:	mov    edx,0x2
   140022665:	jmp    0x1400226a0
   140022667:	mov    rcx,QWORD PTR [rbx]
   14002266a:	xor    r9d,r9d
   14002266d:	test   rcx,rcx
   140022670:	jne    0x140022676
   140022672:	xor    edx,edx
   140022674:	jmp    0x1400226a0
   140022676:	mov    edx,0x2
   14002267b:	movzx  r8d,WORD PTR [rcx]
   14002267f:	add    rcx,rdx
   140022682:	lea    eax,[r8-0x41]
   140022686:	cmp    ax,0x19
   14002268a:	jbe    0x140022698
   14002268c:	sub    r8w,0x61
   140022691:	cmp    r8w,0x19
   140022696:	ja     0x14002269d
   140022698:	inc    r9d
   14002269b:	jmp    0x14002267b
   14002269d:	mov    edx,r9d
   1400226a0:	xor    r8d,r8d
   1400226a3:	mov    DWORD PTR [rbx+0x14],edx
   1400226a6:	lea    rcx,[rip+0xe3]        # 0x140022790
   1400226ad:	lea    edx,[r8+0x3]
   1400226b1:	call   0x14000f3e8
   1400226b6:	test   DWORD PTR [rbx+0x10],0x100
   1400226bd:	je     0x1400226ce
   1400226bf:	test   DWORD PTR [rbx+0x10],0x200
   1400226c6:	je     0x1400226ce
   1400226c8:	test   BYTE PTR [rbx+0x10],0x7
   1400226cc:	jne    0x1400226d2
   1400226ce:	and    DWORD PTR [rbx+0x10],0x0
   1400226d2:	add    rsp,0x20
   1400226d6:	pop    rbx
   1400226d7:	ret    
   1400226d8:	rex push rbx
   1400226da:	sub    rsp,0x20
   1400226de:	mov    rbx,rcx
   1400226e1:	mov    rcx,QWORD PTR [rcx]
   1400226e4:	call   0x14000f9a0
   1400226e9:	xor    edx,edx
   1400226eb:	cmp    rax,0x3
   1400226ef:	sete   dl
   1400226f2:	mov    DWORD PTR [rbx+0x18],edx
   1400226f5:	test   edx,edx
   1400226f7:	je     0x140022700
   1400226f9:	mov    edx,0x2
   1400226fe:	jmp    0x140022739
   140022700:	mov    rcx,QWORD PTR [rbx]
   140022703:	xor    r9d,r9d
   140022706:	test   rcx,rcx
   140022709:	jne    0x14002270f
   14002270b:	xor    edx,edx
   14002270d:	jmp    0x140022739
   14002270f:	mov    edx,0x2
   140022714:	movzx  r8d,WORD PTR [rcx]
   140022718:	add    rcx,rdx
   14002271b:	lea    eax,[r8-0x41]
   14002271f:	cmp    ax,0x19
   140022723:	jbe    0x140022731
   140022725:	sub    r8w,0x61
   14002272a:	cmp    r8w,0x19
   14002272f:	ja     0x140022736
   140022731:	inc    r9d
   140022734:	jmp    0x140022714
   140022736:	mov    edx,r9d
   140022739:	xor    r8d,r8d
   14002273c:	mov    DWORD PTR [rbx+0x14],edx
   14002273f:	lea    rcx,[rip+0x3d6]        # 0x140022b1c
   140022746:	lea    edx,[r8+0x3]
   14002274a:	call   0x14000f3e8
   14002274f:	test   BYTE PTR [rbx+0x10],0x4
   140022753:	jne    0x140022759
   140022755:	and    DWORD PTR [rbx+0x10],0x0
   140022759:	add    rsp,0x20
   14002275d:	pop    rbx
   14002275e:	ret    
   14002275f:	int3   
   140022760:	xor    edx,edx
   140022762:	test   rcx,rcx
   140022765:	jne    0x14002276a
   140022767:	xor    eax,eax
   140022769:	ret    
   14002276a:	movzx  r8d,WORD PTR [rcx]
   14002276e:	add    rcx,0x2
   140022772:	lea    eax,[r8-0x41]
   140022776:	cmp    ax,0x19
   14002277a:	jbe    0x140022788
   14002277c:	sub    r8w,0x61
   140022781:	cmp    r8w,0x19
   140022786:	ja     0x14002278c
   140022788:	inc    edx
   14002278a:	jmp    0x14002276a
   14002278c:	mov    eax,edx
   14002278e:	ret    
   14002278f:	int3   
   140022790:	mov    QWORD PTR [rsp+0x10],rbx
   140022795:	mov    QWORD PTR [rsp+0x18],rbp
   14002279a:	push   rsi
   14002279b:	push   rdi
   14002279c:	push   r14
   14002279e:	sub    rsp,0xc0
   1400227a5:	mov    rax,QWORD PTR [rip+0x14294]        # 0x140036a40
   1400227ac:	xor    rax,rsp
   1400227af:	mov    QWORD PTR [rsp+0xb0],rax
   1400227b7:	mov    rdi,rcx
   1400227ba:	call   0x14000b18c
   1400227bf:	mov    esi,0x40
   1400227c4:	lea    rbx,[rax+0x140]
   1400227cb:	lea    r8,[rsp+0x30]
   1400227d0:	mov    r9d,esi
   1400227d3:	mov    ecx,DWORD PTR [rbx+0x1c]
   1400227d6:	neg    ecx
   1400227d8:	mov    rcx,rdi
   1400227db:	sbb    edx,edx
   1400227dd:	and    edx,0xfffff005
   1400227e3:	add    edx,0x1002
   1400227e9:	call   0x14000f4a8
   1400227ee:	xor    ebp,ebp
   1400227f0:	test   eax,eax
   1400227f2:	jne    0x140022801
   1400227f4:	mov    DWORD PTR [rbx+0x10],ebp
   1400227f7:	mov    eax,0x1
   1400227fc:	jmp    0x140022a75
   140022801:	mov    rcx,QWORD PTR [rbx+0x8]
   140022805:	lea    rdx,[rsp+0x30]
   14002280a:	call   0x14002457c
   14002280f:	mov    r14d,0x55
   140022815:	test   eax,eax
   140022817:	jne    0x140022912
   14002281d:	mov    eax,DWORD PTR [rbx+0x18]
   140022820:	lea    r8,[rsp+0x30]
   140022825:	mov    r9d,esi
   140022828:	neg    eax
   14002282a:	mov    rcx,rdi
   14002282d:	sbb    edx,edx
   14002282f:	and    edx,0xfffff002
   140022835:	add    edx,0x1001
   14002283b:	call   0x14000f4a8
   140022840:	test   eax,eax
   140022842:	je     0x1400227f4
   140022844:	mov    rcx,QWORD PTR [rbx]
   140022847:	lea    rdx,[rsp+0x30]
   14002284c:	call   0x14002457c
   140022851:	test   eax,eax
   140022853:	jne    0x140022887
   140022855:	or     DWORD PTR [rbx+0x10],0x304
   14002285c:	mov    rcx,rdi
   14002285f:	call   0x14000f9a0
   140022864:	lea    rcx,[rbx+0x258]
   14002286b:	mov    r8,rdi
   14002286e:	lea    r9,[rax+0x1]
   140022872:	mov    edx,r14d
   140022875:	call   0x14000f9bc
   14002287a:	test   eax,eax
   14002287c:	je     0x140022912
   140022882:	jmp    0x140022a9d
   140022887:	test   BYTE PTR [rbx+0x10],0x2
   14002288b:	jne    0x140022912
   140022891:	cmp    DWORD PTR [rbx+0x14],ebp
   140022894:	je     0x1400228d6
   140022896:	movsxd r8,DWORD PTR [rbx+0x14]
   14002289a:	mov    rcx,QWORD PTR [rbx]
   14002289d:	lea    rdx,[rsp+0x30]
   1400228a2:	call   0x1400246f0
   1400228a7:	test   eax,eax
   1400228a9:	jne    0x1400228d6
   1400228ab:	or     DWORD PTR [rbx+0x10],0x2
   1400228af:	mov    rcx,rdi
   1400228b2:	call   0x14000f9a0
   1400228b7:	lea    rcx,[rbx+0x258]
   1400228be:	mov    r8,rdi
   1400228c1:	lea    r9,[rax+0x1]
   1400228c5:	mov    rdx,r14
   1400228c8:	call   0x14000f9bc
   1400228cd:	test   eax,eax
   1400228cf:	je     0x140022912
   1400228d1:	jmp    0x140022ab2
   1400228d6:	test   BYTE PTR [rbx+0x10],0x1
   1400228da:	jne    0x140022912
   1400228dc:	mov    rcx,rdi
   1400228df:	call   0x140022cb0
   1400228e4:	test   eax,eax
   1400228e6:	je     0x140022912
   1400228e8:	or     DWORD PTR [rbx+0x10],0x1
   1400228ec:	mov    rcx,rdi
   1400228ef:	call   0x14000f9a0
   1400228f4:	lea    rcx,[rbx+0x258]
   1400228fb:	mov    r8,rdi
   1400228fe:	lea    r9,[rax+0x1]
   140022902:	mov    rdx,r14
   140022905:	call   0x14000f9bc
   14002290a:	test   eax,eax
   14002290c:	jne    0x140022ac7
   140022912:	mov    eax,DWORD PTR [rbx+0x10]
   140022915:	mov    ecx,0x300
   14002291a:	and    eax,ecx
   14002291c:	cmp    eax,ecx
   14002291e:	je     0x140022a6a
   140022924:	mov    eax,DWORD PTR [rbx+0x18]
   140022927:	lea    r8,[rsp+0x30]
   14002292c:	mov    r9d,0x80
   140022932:	neg    eax
   140022934:	mov    rcx,rdi
   140022937:	sbb    edx,edx
   140022939:	and    edx,0xfffff002
   14002293f:	add    edx,0x1001
   140022945:	call   0x14000f4a8
   14002294a:	test   eax,eax
   14002294c:	je     0x1400227f4
   140022952:	mov    rcx,QWORD PTR [rbx]
   140022955:	lea    rdx,[rsp+0x30]
   14002295a:	call   0x14002457c
   14002295f:	test   eax,eax
   140022961:	jne    0x140022a6a
   140022967:	bts    DWORD PTR [rbx+0x10],0x9
   14002296c:	cmp    DWORD PTR [rbx+0x18],ebp
   14002296f:	je     0x1400229ad
   140022971:	bts    DWORD PTR [rbx+0x10],0x8
   140022976:	lea    rsi,[rbx+0x258]
   14002297d:	cmp    WORD PTR [rsi],bp
   140022980:	jne    0x140022a6a
   140022986:	mov    rcx,rdi
   140022989:	call   0x14000f9a0
   14002298e:	mov    r8,rdi
   140022991:	mov    rdx,r14
   140022994:	lea    r9,[rax+0x1]
   140022998:	mov    rcx,rsi
   14002299b:	call   0x14000f9bc
   1400229a0:	test   eax,eax
   1400229a2:	je     0x140022a6a
   1400229a8:	jmp    0x140022adc
   1400229ad:	cmp    DWORD PTR [rbx+0x14],ebp
   1400229b0:	je     0x140022a37
   1400229b6:	mov    rcx,QWORD PTR [rbx]
   1400229b9:	call   0x14000f9a0
   1400229be:	cmp    eax,DWORD PTR [rbx+0x14]
   1400229c1:	jne    0x140022a37
   1400229c3:	mov    rcx,rdi
   1400229c6:	call   0x140022cb0
   1400229cb:	test   eax,eax
   1400229cd:	jne    0x140022a03
   1400229cf:	mov    rcx,QWORD PTR [rbx]
   1400229d2:	mov    esi,ebp
   1400229d4:	test   rcx,rcx
   1400229d7:	je     0x1400229f7
   1400229d9:	movzx  edx,WORD PTR [rcx]
   1400229dc:	add    rcx,0x2
   1400229e0:	lea    eax,[rdx-0x41]
   1400229e3:	cmp    ax,0x19
   1400229e7:	jbe    0x1400229f3
   1400229e9:	sub    dx,0x61
   1400229ed:	cmp    dx,0x19
   1400229f1:	ja     0x1400229f7
   1400229f3:	inc    esi
   1400229f5:	jmp    0x1400229d9
   1400229f7:	mov    rcx,QWORD PTR [rbx]
   1400229fa:	call   0x14000f9a0
   1400229ff:	cmp    esi,eax
   140022a01:	je     0x140022a6a
   140022a03:	bts    DWORD PTR [rbx+0x10],0x8
   140022a08:	lea    rsi,[rbx+0x258]
   140022a0f:	cmp    WORD PTR [rsi],bp
   140022a12:	jne    0x140022a6a
   140022a14:	mov    rcx,rdi
   140022a17:	call   0x14000f9a0
   140022a1c:	mov    r8,rdi
   140022a1f:	mov    rdx,r14
   140022a22:	lea    r9,[rax+0x1]
   140022a26:	mov    rcx,rsi
   140022a29:	call   0x14000f9bc
   140022a2e:	test   eax,eax
   140022a30:	je     0x140022a6a
   140022a32:	jmp    0x140022af1
   140022a37:	bts    DWORD PTR [rbx+0x10],0x8
   140022a3c:	lea    rsi,[rbx+0x258]
   140022a43:	cmp    WORD PTR [rsi],bp
   140022a46:	jne    0x140022a6a
   140022a48:	mov    rcx,rdi
   140022a4b:	call   0x14000f9a0
   140022a50:	mov    r8,rdi
   140022a53:	mov    rdx,r14
   140022a56:	lea    r9,[rax+0x1]
   140022a5a:	mov    rcx,rsi
   140022a5d:	call   0x14000f9bc
   140022a62:	test   eax,eax
   140022a64:	jne    0x140022b06
   140022a6a:	mov    eax,DWORD PTR [rbx+0x10]
   140022a6d:	shr    eax,0x2
   140022a70:	not    eax
   140022a72:	and    eax,0x1
   140022a75:	mov    rcx,QWORD PTR [rsp+0xb0]
   140022a7d:	xor    rcx,rsp
   140022a80:	call   0x14000d0a0
   140022a85:	lea    r11,[rsp+0xc0]
   140022a8d:	mov    rbx,QWORD PTR [r11+0x28]
   140022a91:	mov    rbp,QWORD PTR [r11+0x30]
   140022a95:	mov    rsp,r11
   140022a98:	pop    r14
   140022a9a:	pop    rdi
   140022a9b:	pop    rsi
   140022a9c:	ret    
   140022a9d:	xor    r9d,r9d
   140022aa0:	xor    r8d,r8d
   140022aa3:	xor    edx,edx
   140022aa5:	xor    ecx,ecx
   140022aa7:	mov    QWORD PTR [rsp+0x20],rbp
   140022aac:	call   0x140008678
   140022ab1:	int3   
   140022ab2:	xor    r9d,r9d
   140022ab5:	xor    r8d,r8d
   140022ab8:	xor    edx,edx
   140022aba:	xor    ecx,ecx
   140022abc:	mov    QWORD PTR [rsp+0x20],rbp
   140022ac1:	call   0x140008678
   140022ac6:	int3   
   140022ac7:	xor    r9d,r9d
   140022aca:	xor    r8d,r8d
   140022acd:	xor    edx,edx
   140022acf:	xor    ecx,ecx
   140022ad1:	mov    QWORD PTR [rsp+0x20],rbp
   140022ad6:	call   0x140008678
   140022adb:	int3   
   140022adc:	xor    r9d,r9d
   140022adf:	xor    r8d,r8d
   140022ae2:	xor    edx,edx
   140022ae4:	xor    ecx,ecx
   140022ae6:	mov    QWORD PTR [rsp+0x20],rbp
   140022aeb:	call   0x140008678
   140022af0:	int3   
   140022af1:	xor    r9d,r9d
   140022af4:	xor    r8d,r8d
   140022af7:	xor    edx,edx
   140022af9:	xor    ecx,ecx
   140022afb:	mov    QWORD PTR [rsp+0x20],rbp
   140022b00:	call   0x140008678
   140022b05:	int3   
   140022b06:	xor    r9d,r9d
   140022b09:	xor    r8d,r8d
   140022b0c:	xor    edx,edx
   140022b0e:	xor    ecx,ecx
   140022b10:	mov    QWORD PTR [rsp+0x20],rbp
   140022b15:	call   0x140008678
   140022b1a:	int3   
   140022b1b:	int3   
   140022b1c:	mov    QWORD PTR [rsp+0x10],rbx
   140022b21:	push   rdi
   140022b22:	sub    rsp,0x130
   140022b29:	mov    rax,QWORD PTR [rip+0x13f10]        # 0x140036a40
   140022b30:	xor    rax,rsp
   140022b33:	mov    QWORD PTR [rsp+0x120],rax
   140022b3b:	mov    rdi,rcx
   140022b3e:	call   0x14000b18c
   140022b43:	lea    r8,[rsp+0x30]
   140022b48:	lea    rbx,[rax+0x140]
   140022b4f:	mov    r9d,0x78
   140022b55:	mov    ecx,DWORD PTR [rbx+0x18]
   140022b58:	neg    ecx
   140022b5a:	mov    rcx,rdi
   140022b5d:	sbb    edx,edx
   140022b5f:	and    edx,0xfffff002
   140022b65:	add    edx,0x1001
   140022b6b:	call   0x14000f4a8
   140022b70:	test   eax,eax
   140022b72:	jne    0x140022b7e
   140022b74:	and    DWORD PTR [rbx+0x10],eax
   140022b77:	mov    eax,0x1
   140022b7c:	jmp    0x140022bc2
   140022b7e:	mov    rcx,QWORD PTR [rbx]
   140022b81:	lea    rdx,[rsp+0x30]
   140022b86:	call   0x14002457c
   140022b8b:	test   eax,eax
   140022b8d:	jne    0x140022bb7
   140022b8f:	mov    rcx,rdi
   140022b92:	call   0x14000f9a0
   140022b97:	lea    rcx,[rbx+0x258]
   140022b9e:	mov    r8,rdi
   140022ba1:	lea    r9,[rax+0x1]
   140022ba5:	mov    edx,0x55
   140022baa:	call   0x14000f9bc
   140022baf:	test   eax,eax
   140022bb1:	jne    0x140022be3
   140022bb3:	or     DWORD PTR [rbx+0x10],0x4
   140022bb7:	mov    eax,DWORD PTR [rbx+0x10]
   140022bba:	shr    eax,0x2
   140022bbd:	not    eax
   140022bbf:	and    eax,0x1
   140022bc2:	mov    rcx,QWORD PTR [rsp+0x120]
   140022bca:	xor    rcx,rsp
   140022bcd:	call   0x14000d0a0
   140022bd2:	mov    rbx,QWORD PTR [rsp+0x148]
   140022bda:	add    rsp,0x130
   140022be1:	pop    rdi
   140022be2:	ret    
   140022be3:	and    QWORD PTR [rsp+0x20],0x0
   140022be9:	xor    r9d,r9d
   140022bec:	xor    r8d,r8d
   140022bef:	xor    edx,edx
   140022bf1:	xor    ecx,ecx
   140022bf3:	call   0x140008678
   140022bf8:	int3   
   140022bf9:	int3   
   140022bfa:	int3   
   140022bfb:	int3   
   140022bfc:	mov    QWORD PTR [rsp+0x10],rbx
   140022c01:	mov    QWORD PTR [rsp+0x18],rsi
   140022c06:	push   rdi
   140022c07:	sub    rsp,0x20
   140022c0b:	xor    esi,esi
   140022c0d:	mov    rdi,rdx
   140022c10:	mov    rbx,rcx
   140022c13:	test   rcx,rcx
   140022c16:	je     0x140022c6e
   140022c18:	cmp    WORD PTR [rcx],si
   140022c1b:	je     0x140022c6e
   140022c1d:	lea    rdx,[rip+0xdddc]        # 0x140030a00
   140022c24:	call   0x1400224b8
   140022c29:	test   eax,eax
   140022c2b:	je     0x140022c6e
   140022c2d:	lea    rdx,[rip+0xddd4]        # 0x140030a08
   140022c34:	mov    rcx,rbx
   140022c37:	call   0x1400224b8
   140022c3c:	test   eax,eax
   140022c3e:	jne    0x140022c64
   140022c40:	lea    rcx,[rdi+0x258]
   140022c47:	lea    r9d,[rsi+0x2]
   140022c4b:	lea    r8,[rsp+0x30]
   140022c50:	mov    edx,0x2000000b
   140022c55:	call   0x14000f4a8
   140022c5a:	test   eax,eax
   140022c5c:	je     0x140022c8e
   140022c5e:	mov    eax,DWORD PTR [rsp+0x30]
   140022c62:	jmp    0x140022ca0
   140022c64:	mov    rcx,rbx
   140022c67:	call   0x1400244b8
   140022c6c:	jmp    0x140022ca0
   140022c6e:	lea    rcx,[rdi+0x258]
   140022c75:	lea    r8,[rsp+0x30]
   140022c7a:	mov    r9d,0x2
   140022c80:	mov    edx,0x20001004
   140022c85:	call   0x14000f4a8
   140022c8a:	test   eax,eax
   140022c8c:	jne    0x140022c92
   140022c8e:	xor    eax,eax
   140022c90:	jmp    0x140022ca0
   140022c92:	mov    eax,DWORD PTR [rsp+0x30]
   140022c96:	test   eax,eax
   140022c98:	jne    0x140022ca0
   140022c9a:	call   QWORD PTR [rip+0x4550]        # 0x1400271f0
   140022ca0:	mov    rbx,QWORD PTR [rsp+0x38]
   140022ca5:	mov    rsi,QWORD PTR [rsp+0x40]
   140022caa:	add    rsp,0x20
   140022cae:	pop    rdi
   140022caf:	ret    
   140022cb0:	mov    QWORD PTR [rsp+0x10],rbx
   140022cb5:	push   rdi
   140022cb6:	sub    rsp,0x40
   140022cba:	mov    rax,QWORD PTR [rip+0x13d7f]        # 0x140036a40
   140022cc1:	xor    rax,rsp
   140022cc4:	mov    QWORD PTR [rsp+0x38],rax
   140022cc9:	mov    r9d,0x9
   140022ccf:	lea    r8,[rsp+0x20]
   140022cd4:	mov    rdi,rcx
   140022cd7:	lea    edx,[r9+0x50]
   140022cdb:	call   0x14000f4a8
   140022ce0:	xor    ebx,ebx
   140022ce2:	test   eax,eax
   140022ce4:	je     0x140022d00
   140022ce6:	lea    rcx,[rsp+0x20]
   140022ceb:	mov    r8d,0x9
   140022cf1:	mov    rdx,rdi
   140022cf4:	call   0x140022534
   140022cf9:	test   eax,eax
   140022cfb:	sete   bl
   140022cfe:	mov    eax,ebx
   140022d00:	mov    rcx,QWORD PTR [rsp+0x38]
   140022d05:	xor    rcx,rsp
   140022d08:	call   0x14000d0a0
   140022d0d:	mov    rbx,QWORD PTR [rsp+0x58]
   140022d12:	add    rsp,0x40
   140022d16:	pop    rdi
   140022d17:	ret    
   140022d18:	mov    QWORD PTR [rsp+0x8],rbx
   140022d1d:	mov    QWORD PTR [rsp+0x10],rsi
   140022d22:	push   rdi
   140022d23:	sub    rsp,0x20
   140022d27:	mov    rsi,r8
   140022d2a:	mov    edi,edx
   140022d2c:	call   0x140022cb0
   140022d31:	xor    ebx,ebx
   140022d33:	test   eax,eax
   140022d35:	jne    0x140022d71
   140022d37:	test   edi,edi
   140022d39:	je     0x140022d71
   140022d3b:	mov    rcx,QWORD PTR [rsi]
   140022d3e:	test   rcx,rcx
   140022d41:	je     0x140022d61
   140022d43:	movzx  edx,WORD PTR [rcx]
   140022d46:	add    rcx,0x2
   140022d4a:	lea    eax,[rdx-0x41]
   140022d4d:	cmp    ax,0x19
   140022d51:	jbe    0x140022d5d
   140022d53:	sub    dx,0x61
   140022d57:	cmp    dx,0x19
   140022d5b:	ja     0x140022d61
   140022d5d:	inc    ebx
   140022d5f:	jmp    0x140022d43
   140022d61:	mov    rcx,QWORD PTR [rsi]
   140022d64:	call   0x14000f9a0
   140022d69:	cmp    ebx,eax
   140022d6b:	jne    0x140022d71
   140022d6d:	xor    eax,eax
   140022d6f:	jmp    0x140022d76
   140022d71:	mov    eax,0x1
   140022d76:	mov    rbx,QWORD PTR [rsp+0x30]
   140022d7b:	mov    rsi,QWORD PTR [rsp+0x38]
   140022d80:	add    rsp,0x20
   140022d84:	pop    rdi
   140022d85:	ret    
   140022d86:	int3   
   140022d87:	int3   
   140022d88:	mov    rax,rsp
   140022d8b:	mov    QWORD PTR [rax+0x8],rbx
   140022d8f:	mov    QWORD PTR [rax+0x10],rbp
   140022d93:	mov    QWORD PTR [rax+0x18],rsi
   140022d97:	mov    QWORD PTR [rax+0x20],rdi
   140022d9b:	push   r12
   140022d9d:	push   r14
   140022d9f:	push   r15
   140022da1:	sub    rsp,0x20
   140022da5:	xor    ebx,ebx
   140022da7:	mov    r15,r8
   140022daa:	mov    edi,edx
   140022dac:	mov    r12,rcx
   140022daf:	mov    eax,0x1
   140022db4:	mov    esi,ebx
   140022db6:	test   edx,edx
   140022db8:	js     0x140022dfb
   140022dba:	test   eax,eax
   140022dbc:	je     0x140022dfd
   140022dbe:	mov    rcx,QWORD PTR [r15]
   140022dc1:	lea    eax,[rsi+rdi*1]
   140022dc4:	cdq    
   140022dc5:	sub    eax,edx
   140022dc7:	sar    eax,1
   140022dc9:	movsxd rbp,eax
   140022dcc:	mov    r14,rbp
   140022dcf:	shl    r14,0x4
   140022dd3:	mov    rdx,QWORD PTR [r14+r12*1]
   140022dd7:	call   0x14002457c
   140022ddc:	test   eax,eax
   140022dde:	jne    0x140022ded
   140022de0:	lea    rcx,[r12+0x8]
   140022de5:	add    rcx,r14
   140022de8:	mov    QWORD PTR [r15],rcx
   140022deb:	jmp    0x140022df7
   140022ded:	jns    0x140022df4
   140022def:	lea    edi,[rbp-0x1]
   140022df2:	jmp    0x140022df7
   140022df4:	lea    esi,[rbp+0x1]
   140022df7:	cmp    esi,edi
   140022df9:	jle    0x140022dba
   140022dfb:	test   eax,eax
   140022dfd:	mov    rbp,QWORD PTR [rsp+0x48]
   140022e02:	mov    rsi,QWORD PTR [rsp+0x50]
   140022e07:	mov    rdi,QWORD PTR [rsp+0x58]
   140022e0c:	sete   bl
   140022e0f:	mov    eax,ebx
   140022e11:	mov    rbx,QWORD PTR [rsp+0x40]
   140022e16:	add    rsp,0x20
   140022e1a:	pop    r15
   140022e1c:	pop    r14
   140022e1e:	pop    r12
   140022e20:	ret    
   140022e21:	int3   
   140022e22:	int3   
   140022e23:	int3   
   140022e24:	rex push rbx
   140022e26:	push   rbp
   140022e27:	push   rsi
   140022e28:	push   rdi
   140022e29:	push   r12
   140022e2b:	push   r14
   140022e2d:	push   r15
   140022e2f:	sub    rsp,0xf0
   140022e36:	mov    rax,QWORD PTR [rip+0x13c03]        # 0x140036a40
   140022e3d:	xor    rax,rsp
   140022e40:	mov    QWORD PTR [rsp+0xe0],rax
   140022e48:	mov    rbp,r8
   140022e4b:	mov    rsi,rdx
   140022e4e:	mov    r14,rcx
   140022e51:	call   0x14000b18c
   140022e56:	xor    r12d,r12d
   140022e59:	lea    rbx,[rax+0x140]
   140022e60:	lea    rax,[r14+0x80]
   140022e67:	lea    r15,[rbx+0x258]
   140022e6e:	lea    rdi,[rbx+0x8]
   140022e72:	mov    DWORD PTR [rbx+0x10],r12d
   140022e76:	mov    WORD PTR [r15],r12w
   140022e7a:	mov    QWORD PTR [rdi],rax
   140022e7d:	mov    QWORD PTR [rbx],r14
   140022e80:	cmp    WORD PTR [rax],r12w
   140022e84:	je     0x140022e9a
   140022e86:	lea    edx,[r12+0x16]
   140022e8b:	lea    rcx,[rip+0xd80e]        # 0x1400306a0
   140022e92:	mov    r8,rdi
   140022e95:	call   0x140022d88
   140022e9a:	mov    rax,QWORD PTR [rbx]
   140022e9d:	cmp    WORD PTR [rax],r12w
   140022ea1:	je     0x140023019
   140022ea7:	mov    rax,QWORD PTR [rdi]
   140022eaa:	mov    rcx,rbx
   140022ead:	cmp    WORD PTR [rax],r12w
   140022eb1:	je     0x140022eba
   140022eb3:	call   0x140022628
   140022eb8:	jmp    0x140022ebf
   140022eba:	call   0x1400226d8
   140022ebf:	cmp    DWORD PTR [rbx+0x10],r12d
   140022ec3:	jne    0x140022efc
   140022ec5:	lea    rcx,[rip+0xcba4]        # 0x14002fa70
   140022ecc:	mov    r8,rbx
   140022ecf:	mov    edx,0x40
   140022ed4:	call   0x140022d88
   140022ed9:	test   eax,eax
   140022edb:	je     0x140022ef2
   140022edd:	mov    rax,QWORD PTR [rdi]
   140022ee0:	mov    rcx,rbx
   140022ee3:	cmp    WORD PTR [rax],r12w
   140022ee7:	je     0x14002300f
   140022eed:	call   0x140022628
   140022ef2:	cmp    DWORD PTR [rbx+0x10],r12d
   140022ef6:	je     0x140023062
   140022efc:	lea    rcx,[r14+0x100]
   140022f03:	mov    rdx,rbx
   140022f06:	call   0x140022bfc
   140022f0b:	mov    ebx,eax
   140022f0d:	test   eax,eax
   140022f0f:	je     0x140023062
   140022f15:	lea    ecx,[rax-0xfde8]
   140022f1b:	cmp    ecx,0x1
   140022f1e:	jbe    0x140023062
   140022f24:	movzx  ecx,ax
   140022f27:	call   QWORD PTR [rip+0x42bb]        # 0x1400271e8
   140022f2d:	test   eax,eax
   140022f2f:	je     0x140023062
   140022f35:	test   rsi,rsi
   140022f38:	je     0x140022f3c
   140022f3a:	mov    DWORD PTR [rsi],ebx
   140022f3c:	test   rbp,rbp
   140022f3f:	je     0x140023008
   140022f45:	lea    rsi,[rbp+0x120]
   140022f4c:	mov    rcx,r15
   140022f4f:	mov    WORD PTR [rsi],r12w
   140022f53:	call   0x14000f9a0
   140022f58:	mov    r8,r15
   140022f5b:	lea    r9,[rax+0x1]
   140022f5f:	mov    edx,0x55
   140022f64:	mov    rcx,rsi
   140022f67:	call   0x14000f9bc
   140022f6c:	test   eax,eax
   140022f6e:	jne    0x14002309b
   140022f74:	lea    r9d,[rax+0x40]
   140022f78:	mov    r8,rbp
   140022f7b:	mov    edx,0x1001
   140022f80:	mov    rcx,rsi
   140022f83:	call   0x14000f4a8
   140022f88:	test   eax,eax
   140022f8a:	je     0x140023062
   140022f90:	lea    rdi,[rbp+0x80]
   140022f97:	mov    r9d,0x40
   140022f9d:	mov    edx,0x1002
   140022fa2:	mov    r8,rdi
   140022fa5:	mov    rcx,rsi
   140022fa8:	call   0x14000f4a8
   140022fad:	test   eax,eax
   140022faf:	je     0x140023062
   140022fb5:	mov    edx,0x5f
   140022fba:	mov    rcx,rdi
   140022fbd:	call   0x1400244f0
   140022fc2:	test   rax,rax
   140022fc5:	jne    0x140022fd7
   140022fc7:	lea    edx,[rax+0x2e]
   140022fca:	mov    rcx,rdi
   140022fcd:	call   0x1400244f0
   140022fd2:	test   rax,rax
   140022fd5:	je     0x140022ff0
   140022fd7:	mov    r9d,0x40
   140022fdd:	mov    r8,rdi
   140022fe0:	mov    rcx,rsi
   140022fe3:	lea    edx,[r9-0x39]
   140022fe7:	call   0x14000f4a8
   140022fec:	test   eax,eax
   140022fee:	je     0x140023062
   140022ff0:	mov    r9d,0xa
   140022ff6:	lea    rdx,[rbp+0x100]
   140022ffd:	mov    ecx,ebx
   140022fff:	lea    r8d,[r9+0x6]
   140023003:	call   0x1400241e8
   140023008:	mov    eax,0x1
   14002300d:	jmp    0x140023064
   14002300f:	call   0x1400226d8
   140023014:	jmp    0x140022ef2
   140023019:	or     DWORD PTR [rbx+0x10],0x104
   140023020:	lea    rcx,[rsp+0x30]
   140023025:	mov    edx,0x55
   14002302a:	call   0x14000f570
   14002302f:	cmp    eax,0x1
   140023032:	jle    0x140022ef2
   140023038:	lea    rcx,[rsp+0x30]
   14002303d:	call   0x14000f9a0
   140023042:	lea    r8,[rsp+0x30]
   140023047:	mov    edx,0x55
   14002304c:	lea    r9,[rax+0x1]
   140023050:	mov    rcx,r15
   140023053:	call   0x14000f9bc
   140023058:	test   eax,eax
   14002305a:	je     0x140022ef2
   140023060:	jmp    0x140023086
   140023062:	xor    eax,eax
   140023064:	mov    rcx,QWORD PTR [rsp+0xe0]
   14002306c:	xor    rcx,rsp
   14002306f:	call   0x14000d0a0
   140023074:	add    rsp,0xf0
   14002307b:	pop    r15
   14002307d:	pop    r14
   14002307f:	pop    r12
   140023081:	pop    rdi
   140023082:	pop    rsi
   140023083:	pop    rbp
   140023084:	pop    rbx
   140023085:	ret    
   140023086:	xor    r9d,r9d
   140023089:	xor    r8d,r8d
   14002308c:	xor    edx,edx
   14002308e:	xor    ecx,ecx
   140023090:	mov    QWORD PTR [rsp+0x20],r12
   140023095:	call   0x140008678
   14002309a:	int3   
   14002309b:	xor    r9d,r9d
   14002309e:	xor    r8d,r8d
   1400230a1:	xor    edx,edx
   1400230a3:	xor    ecx,ecx
   1400230a5:	mov    QWORD PTR [rsp+0x20],r12
   1400230aa:	call   0x140008678
   1400230af:	int3   
   1400230b0:	mov    QWORD PTR [rsp+0x10],rbx
   1400230b5:	mov    QWORD PTR [rsp+0x18],rbp
   1400230ba:	mov    QWORD PTR [rsp+0x20],rsi
   1400230bf:	push   rdi
   1400230c0:	sub    rsp,0x120
   1400230c7:	mov    rax,QWORD PTR [rip+0x13972]        # 0x140036a40
   1400230ce:	xor    rax,rsp
   1400230d1:	mov    QWORD PTR [rsp+0x110],rax
   1400230d9:	mov    rbx,rcx
   1400230dc:	call   0x14000b18c
   1400230e1:	mov    rbp,rax
   1400230e4:	call   0x14000b18c
   1400230e9:	mov    rcx,rbx
   1400230ec:	mov    rdi,QWORD PTR [rax+0x470]
   1400230f3:	call   0x1400236b4
   1400230f8:	mov    ecx,DWORD PTR [rbp+0x15c]
   1400230fe:	neg    ecx
   140023100:	lea    r8,[rsp+0x20]
   140023105:	mov    r9d,0xf0
   14002310b:	sbb    edx,edx
   14002310d:	mov    ecx,eax
   14002310f:	mov    esi,eax
   140023111:	and    edx,0xfffff005
   140023117:	add    edx,0x1002
   14002311d:	call   QWORD PTR [rip+0x4155]        # 0x140027278
   140023123:	xor    ebx,ebx
   140023125:	test   eax,eax
   140023127:	jne    0x140023130
   140023129:	mov    DWORD PTR [rdi],ebx
   14002312b:	lea    eax,[rbx+0x1]
   14002312e:	jmp    0x140023173
   140023130:	mov    rcx,QWORD PTR [rbp+0x148]
   140023137:	lea    rdx,[rsp+0x20]
   14002313c:	call   0x14002457c
   140023141:	test   eax,eax
   140023143:	jne    0x140023169
   140023145:	lea    rcx,[rip+0xd8c4]        # 0x140030a10
   14002314c:	cmp    si,WORD PTR [rcx]
   14002314f:	je     0x140023169
   140023151:	inc    ebx
   140023153:	add    rcx,0x2
   140023157:	movsxd rax,ebx
   14002315a:	cmp    rax,0xa
   14002315e:	jb     0x14002314c
   140023160:	or     DWORD PTR [rdi],0x4
   140023163:	mov    DWORD PTR [rdi+0x8],esi
   140023166:	mov    DWORD PTR [rdi+0x4],esi
   140023169:	mov    eax,DWORD PTR [rdi]
   14002316b:	shr    eax,0x2
   14002316e:	not    eax
   140023170:	and    eax,0x1
   140023173:	mov    rcx,QWORD PTR [rsp+0x110]
   14002317b:	xor    rcx,rsp
   14002317e:	call   0x14000d0a0
   140023183:	lea    r11,[rsp+0x120]
   14002318b:	mov    rbx,QWORD PTR [r11+0x18]
   14002318f:	mov    rbp,QWORD PTR [r11+0x20]
   140023193:	mov    rsi,QWORD PTR [r11+0x28]
   140023197:	mov    rsp,r11
   14002319a:	pop    rdi
   14002319b:	ret    
   14002319c:	mov    QWORD PTR [rsp+0x8],rbx
   1400231a1:	push   rdi
   1400231a2:	sub    rsp,0x20
   1400231a6:	mov    rdi,rcx
   1400231a9:	call   0x14000b18c
   1400231ae:	mov    rcx,QWORD PTR [rax+0x148]
   1400231b5:	mov    rbx,rax
   1400231b8:	call   0x14000f9a0
   1400231bd:	xor    edx,edx
   1400231bf:	lea    rcx,[rip+0xfffffffffffffeea]        # 0x1400230b0
   1400231c6:	cmp    rax,0x3
   1400231ca:	sete   dl
   1400231cd:	mov    DWORD PTR [rbx+0x15c],edx
   1400231d3:	mov    edx,0x1
   1400231d8:	call   QWORD PTR [rip+0x40b2]        # 0x140027290
   1400231de:	test   BYTE PTR [rdi],0x4
   1400231e1:	jne    0x1400231e6
   1400231e3:	and    DWORD PTR [rdi],0x0
   1400231e6:	mov    rbx,QWORD PTR [rsp+0x30]
   1400231eb:	add    rsp,0x20
   1400231ef:	pop    rdi
   1400231f0:	ret    
   1400231f1:	int3   
   1400231f2:	int3   
   1400231f3:	int3   
   1400231f4:	rex push rbx
   1400231f6:	sub    rsp,0x20
   1400231fa:	or     DWORD PTR [rcx],0x104
   140023200:	mov    rbx,rcx
   140023203:	call   QWORD PTR [rip+0x407f]        # 0x140027288
   140023209:	mov    DWORD PTR [rbx+0x8],eax
   14002320c:	mov    DWORD PTR [rbx+0x4],eax
   14002320f:	add    rsp,0x20
   140023213:	pop    rbx
   140023214:	ret    
   140023215:	int3   
   140023216:	int3   
   140023217:	int3   
   140023218:	mov    QWORD PTR [rsp+0x8],rbx
   14002321d:	push   rdi
   14002321e:	sub    rsp,0x20
   140023222:	mov    rdi,rcx
   140023225:	call   0x14000b18c
   14002322a:	lea    rbx,[rax+0x140]
   140023231:	mov    rcx,QWORD PTR [rbx]
   140023234:	call   0x14000f9a0
   140023239:	mov    rcx,QWORD PTR [rbx+0x8]
   14002323d:	xor    edx,edx
   14002323f:	cmp    rax,0x3
   140023243:	sete   dl
   140023246:	mov    DWORD PTR [rbx+0x18],edx
   140023249:	call   0x14000f9a0
   14002324e:	xor    ecx,ecx
   140023250:	cmp    rax,0x3
   140023254:	mov    edx,0x2
   140023259:	sete   cl
   14002325c:	mov    DWORD PTR [rbx+0x1c],ecx
   14002325f:	and    DWORD PTR [rdi+0x4],0x0
   140023263:	cmp    DWORD PTR [rbx+0x18],0x0
   140023267:	jne    0x140023294
   140023269:	mov    rcx,QWORD PTR [rbx]
   14002326c:	xor    r9d,r9d
   14002326f:	movzx  r8d,WORD PTR [rcx]
   140023273:	add    rcx,rdx
   140023276:	lea    eax,[r8-0x41]
   14002327a:	cmp    ax,0x19
   14002327e:	jbe    0x14002328c
   140023280:	sub    r8w,0x61
   140023285:	cmp    r8w,0x19
   14002328a:	ja     0x140023291
   14002328c:	inc    r9d
   14002328f:	jmp    0x14002326f
   140023291:	mov    edx,r9d
   140023294:	mov    DWORD PTR [rbx+0x14],edx
   140023297:	lea    rcx,[rip+0xea]        # 0x140023388
   14002329e:	mov    edx,0x1
   1400232a3:	call   QWORD PTR [rip+0x3fe7]        # 0x140027290
   1400232a9:	test   DWORD PTR [rdi],0x100
   1400232af:	je     0x1400232be
   1400232b1:	test   DWORD PTR [rdi],0x200
   1400232b7:	je     0x1400232be
   1400232b9:	test   BYTE PTR [rdi],0x7
   1400232bc:	jne    0x1400232c1
   1400232be:	and    DWORD PTR [rdi],0x0
   1400232c1:	mov    rbx,QWORD PTR [rsp+0x30]
   1400232c6:	add    rsp,0x20
   1400232ca:	pop    rdi
   1400232cb:	ret    
   1400232cc:	mov    QWORD PTR [rsp+0x8],rbx
   1400232d1:	push   rdi
   1400232d2:	sub    rsp,0x20
   1400232d6:	mov    rdi,rcx
   1400232d9:	call   0x14000b18c
   1400232de:	mov    rcx,QWORD PTR [rax+0x140]
   1400232e5:	mov    rbx,rax
   1400232e8:	call   0x14000f9a0
   1400232ed:	xor    edx,edx
   1400232ef:	mov    ecx,0x2
   1400232f4:	cmp    rax,0x3
   1400232f8:	sete   dl
   1400232fb:	mov    DWORD PTR [rbx+0x158],edx
   140023301:	test   edx,edx
   140023303:	jne    0x140023334
   140023305:	mov    rdx,QWORD PTR [rbx+0x140]
   14002330c:	xor    r9d,r9d
   14002330f:	movzx  r8d,WORD PTR [rdx]
   140023313:	add    rdx,rcx
   140023316:	lea    eax,[r8-0x41]
   14002331a:	cmp    ax,0x19
   14002331e:	jbe    0x14002332c
   140023320:	sub    r8w,0x61
   140023325:	cmp    r8w,0x19
   14002332a:	ja     0x140023331
   14002332c:	inc    r9d
   14002332f:	jmp    0x14002330f
   140023331:	mov    ecx,r9d
   140023334:	mov    DWORD PTR [rbx+0x154],ecx
   14002333a:	lea    rcx,[rip+0x277]        # 0x1400235b8
   140023341:	mov    edx,0x1
   140023346:	call   QWORD PTR [rip+0x3f44]        # 0x140027290
   14002334c:	test   BYTE PTR [rdi],0x4
   14002334f:	jne    0x140023354
   140023351:	and    DWORD PTR [rdi],0x0
   140023354:	mov    rbx,QWORD PTR [rsp+0x30]
   140023359:	add    rsp,0x20
   14002335d:	pop    rdi
   14002335e:	ret    
   14002335f:	int3   
   140023360:	xor    r8d,r8d
   140023363:	movzx  edx,WORD PTR [rcx]
   140023366:	add    rcx,0x2
   14002336a:	lea    eax,[rdx-0x41]
   14002336d:	cmp    ax,0x19
   140023371:	jbe    0x14002337d
   140023373:	sub    dx,0x61
   140023377:	cmp    dx,0x19
   14002337b:	ja     0x140023382
   14002337d:	inc    r8d
   140023380:	jmp    0x140023363
   140023382:	mov    eax,r8d
   140023385:	ret    
   140023386:	int3   
   140023387:	int3   
   140023388:	mov    QWORD PTR [rsp+0x10],rbx
   14002338d:	mov    QWORD PTR [rsp+0x18],rsi
   140023392:	mov    QWORD PTR [rsp+0x20],rdi
   140023397:	push   r14
   140023399:	sub    rsp,0x120
   1400233a0:	mov    rax,QWORD PTR [rip+0x13699]        # 0x140036a40
   1400233a7:	xor    rax,rsp
   1400233aa:	mov    QWORD PTR [rsp+0x110],rax
   1400233b2:	mov    rbx,rcx
   1400233b5:	call   0x14000b18c
   1400233ba:	lea    rsi,[rax+0x140]
   1400233c1:	call   0x14000b18c
   1400233c6:	mov    rcx,rbx
   1400233c9:	mov    rdi,QWORD PTR [rax+0x470]
   1400233d0:	call   0x1400236b4
   1400233d5:	mov    ecx,DWORD PTR [rsi+0x1c]
   1400233d8:	neg    ecx
   1400233da:	lea    r8,[rsp+0x20]
   1400233df:	mov    r9d,0xf0
   1400233e5:	sbb    edx,edx
   1400233e7:	mov    ecx,eax
   1400233e9:	mov    ebx,eax
   1400233eb:	and    edx,0xfffff005
   1400233f1:	add    edx,0x1002
   1400233f7:	call   QWORD PTR [rip+0x3e7b]        # 0x140027278
   1400233fd:	xor    r14d,r14d
   140023400:	test   eax,eax
   140023402:	jne    0x140023411
   140023404:	mov    DWORD PTR [rdi],r14d
   140023407:	mov    eax,0x1
   14002340c:	jmp    0x14002358b
   140023411:	mov    rcx,QWORD PTR [rsi+0x8]
   140023415:	lea    rdx,[rsp+0x20]
   14002341a:	call   0x14002457c
   14002341f:	test   eax,eax
   140023421:	jne    0x1400234d3
   140023427:	mov    eax,DWORD PTR [rsi+0x18]
   14002342a:	lea    r8,[rsp+0x20]
   14002342f:	mov    r9d,0xf0
   140023435:	neg    eax
   140023437:	mov    ecx,ebx
   140023439:	sbb    edx,edx
   14002343b:	and    edx,0xfffff002
   140023441:	add    edx,0x1001
   140023447:	call   QWORD PTR [rip+0x3e2b]        # 0x140027278
   14002344d:	test   eax,eax
   14002344f:	je     0x140023404
   140023451:	mov    rcx,QWORD PTR [rsi]
   140023454:	lea    rdx,[rsp+0x20]
   140023459:	call   0x14002457c
   14002345e:	test   eax,eax
   140023460:	jne    0x14002346d
   140023462:	or     DWORD PTR [rdi],0x304
   140023468:	mov    DWORD PTR [rdi+0x4],ebx
   14002346b:	jmp    0x1400234d0
   14002346d:	test   BYTE PTR [rdi],0x2
   140023470:	jne    0x1400234d3
   140023472:	cmp    DWORD PTR [rsi+0x14],r14d
   140023476:	je     0x1400234a5
   140023478:	movsxd r8,DWORD PTR [rsi+0x14]
   14002347c:	mov    rcx,QWORD PTR [rsi]
   14002347f:	lea    rdx,[rsp+0x20]
   140023484:	call   0x1400246f0
   140023489:	test   eax,eax
   14002348b:	jne    0x1400234a5
   14002348d:	or     DWORD PTR [rdi],0x2
   140023490:	mov    DWORD PTR [rdi+0x8],ebx
   140023493:	mov    rcx,QWORD PTR [rsi]
   140023496:	call   0x14000f9a0
   14002349b:	cmp    eax,DWORD PTR [rsi+0x14]
   14002349e:	jne    0x1400234d3
   1400234a0:	mov    DWORD PTR [rdi+0x4],ebx
   1400234a3:	jmp    0x1400234d3
   1400234a5:	mov    ecx,DWORD PTR [rdi]
   1400234a7:	test   cl,0x1
   1400234aa:	jne    0x1400234d3
   1400234ac:	mov    r8d,r14d
   1400234af:	lea    rdx,[rip+0xd55a]        # 0x140030a10
   1400234b6:	cmp    bx,WORD PTR [rdx]
   1400234b9:	je     0x1400234d3
   1400234bb:	inc    r8d
   1400234be:	add    rdx,0x2
   1400234c2:	movsxd rax,r8d
   1400234c5:	cmp    rax,0xa
   1400234c9:	jb     0x1400234b6
   1400234cb:	or     ecx,0x1
   1400234ce:	mov    DWORD PTR [rdi],ecx
   1400234d0:	mov    DWORD PTR [rdi+0x8],ebx
   1400234d3:	mov    eax,DWORD PTR [rdi]
   1400234d5:	mov    ecx,0x300
   1400234da:	and    eax,ecx
   1400234dc:	cmp    eax,ecx
   1400234de:	je     0x140023581
   1400234e4:	mov    eax,DWORD PTR [rsi+0x18]
   1400234e7:	lea    r8,[rsp+0x20]
   1400234ec:	mov    r9d,0xf0
   1400234f2:	neg    eax
   1400234f4:	mov    ecx,ebx
   1400234f6:	sbb    edx,edx
   1400234f8:	and    edx,0xfffff002
   1400234fe:	add    edx,0x1001
   140023504:	call   QWORD PTR [rip+0x3d6e]        # 0x140027278
   14002350a:	test   eax,eax
   14002350c:	je     0x140023404
   140023512:	mov    rcx,QWORD PTR [rsi]
   140023515:	lea    rdx,[rsp+0x20]
   14002351a:	call   0x14002457c
   14002351f:	test   eax,eax
   140023521:	jne    0x140023547
   140023523:	bts    DWORD PTR [rdi],0x9
   140023527:	cmp    DWORD PTR [rsi+0x18],r14d
   14002352b:	jne    0x140023574
   14002352d:	cmp    DWORD PTR [rsi+0x14],r14d
   140023531:	je     0x140023574
   140023533:	mov    rcx,QWORD PTR [rsi]
   140023536:	call   0x14000f9a0
   14002353b:	cmp    eax,DWORD PTR [rsi+0x14]
   14002353e:	jne    0x140023574
   140023540:	mov    edx,0x1
   140023545:	jmp    0x140023566
   140023547:	cmp    DWORD PTR [rsi+0x18],r14d
   14002354b:	jne    0x140023581
   14002354d:	cmp    DWORD PTR [rsi+0x14],r14d
   140023551:	je     0x140023581
   140023553:	mov    rcx,QWORD PTR [rsi]
   140023556:	lea    rdx,[rsp+0x20]
   14002355b:	call   0x14002457c
   140023560:	test   eax,eax
   140023562:	jne    0x140023581
   140023564:	xor    edx,edx
   140023566:	mov    r8,rdi
   140023569:	mov    ecx,ebx
   14002356b:	call   0x1400237dc
   140023570:	test   eax,eax
   140023572:	je     0x140023581
   140023574:	bts    DWORD PTR [rdi],0x8
   140023578:	cmp    DWORD PTR [rdi+0x4],r14d
   14002357c:	jne    0x140023581
   14002357e:	mov    DWORD PTR [rdi+0x4],ebx
   140023581:	mov    eax,DWORD PTR [rdi]
   140023583:	shr    eax,0x2
   140023586:	not    eax
   140023588:	and    eax,0x1
   14002358b:	mov    rcx,QWORD PTR [rsp+0x110]
   140023593:	xor    rcx,rsp
   140023596:	call   0x14000d0a0
   14002359b:	lea    r11,[rsp+0x120]
   1400235a3:	mov    rbx,QWORD PTR [r11+0x18]
   1400235a7:	mov    rsi,QWORD PTR [r11+0x20]
   1400235ab:	mov    rdi,QWORD PTR [r11+0x28]
   1400235af:	mov    rsp,r11
   1400235b2:	pop    r14
   1400235b4:	ret    
   1400235b5:	int3   
   1400235b6:	int3   
   1400235b7:	int3   
   1400235b8:	mov    QWORD PTR [rsp+0x10],rbx
   1400235bd:	mov    QWORD PTR [rsp+0x18],rsi
   1400235c2:	push   rdi
   1400235c3:	sub    rsp,0x120
   1400235ca:	mov    rax,QWORD PTR [rip+0x1346f]        # 0x140036a40
   1400235d1:	xor    rax,rsp
   1400235d4:	mov    QWORD PTR [rsp+0x110],rax
   1400235dc:	mov    rbx,rcx
   1400235df:	call   0x14000b18c
   1400235e4:	lea    rsi,[rax+0x140]
   1400235eb:	call   0x14000b18c
   1400235f0:	mov    rcx,rbx
   1400235f3:	mov    rdi,QWORD PTR [rax+0x470]
   1400235fa:	call   0x1400236b4
   1400235ff:	mov    ecx,DWORD PTR [rsi+0x18]
   140023602:	neg    ecx
   140023604:	lea    r8,[rsp+0x20]
   140023609:	mov    r9d,0xf0
   14002360f:	sbb    edx,edx
   140023611:	mov    ecx,eax
   140023613:	mov    ebx,eax
   140023615:	and    edx,0xfffff002
   14002361b:	add    edx,0x1001
   140023621:	call   QWORD PTR [rip+0x3c51]        # 0x140027278
   140023627:	test   eax,eax
   140023629:	jne    0x140023634
   14002362b:	and    DWORD PTR [rdi],eax
   14002362d:	mov    eax,0x1
   140023632:	jmp    0x14002368f
   140023634:	mov    rcx,QWORD PTR [rsi]
   140023637:	lea    rdx,[rsp+0x20]
   14002363c:	call   0x14002457c
   140023641:	test   eax,eax
   140023643:	jne    0x14002364f
   140023645:	cmp    DWORD PTR [rsi+0x18],eax
   140023648:	jne    0x14002367c
   14002364a:	lea    edx,[rax+0x1]
   14002364d:	jmp    0x14002366e
   14002364f:	cmp    DWORD PTR [rsi+0x18],0x0
   140023653:	jne    0x140023685
   140023655:	cmp    DWORD PTR [rsi+0x14],0x0
   140023659:	je     0x140023685
   14002365b:	mov    rcx,QWORD PTR [rsi]
   14002365e:	lea    rdx,[rsp+0x20]
   140023663:	call   0x14002457c
   140023668:	test   eax,eax
   14002366a:	jne    0x140023685
   14002366c:	xor    edx,edx
   14002366e:	mov    r8,rdi
   140023671:	mov    ecx,ebx
   140023673:	call   0x1400237dc
   140023678:	test   eax,eax
   14002367a:	je     0x140023685
   14002367c:	or     DWORD PTR [rdi],0x4
   14002367f:	mov    DWORD PTR [rdi+0x4],ebx
   140023682:	mov    DWORD PTR [rdi+0x8],ebx
   140023685:	mov    eax,DWORD PTR [rdi]
   140023687:	shr    eax,0x2
   14002368a:	not    eax
   14002368c:	and    eax,0x1
   14002368f:	mov    rcx,QWORD PTR [rsp+0x110]
   140023697:	xor    rcx,rsp
   14002369a:	call   0x14000d0a0
   14002369f:	lea    r11,[rsp+0x120]
   1400236a7:	mov    rbx,QWORD PTR [r11+0x18]
   1400236ab:	mov    rsi,QWORD PTR [r11+0x20]
   1400236af:	mov    rsp,r11
   1400236b2:	pop    rdi
   1400236b3:	ret    
   1400236b4:	movzx  edx,WORD PTR [rcx]
   1400236b7:	xor    r10d,r10d
   1400236ba:	mov    r9,rcx
   1400236bd:	mov    r8d,r10d
   1400236c0:	jmp    0x1400236f9
   1400236c2:	lea    eax,[rdx-0x61]
   1400236c5:	lea    r9,[r9+0x2]
   1400236c9:	cmp    ax,0x5
   1400236cd:	ja     0x1400236d6
   1400236cf:	mov    eax,0xffd9
   1400236d4:	jmp    0x1400236e4
   1400236d6:	lea    eax,[rdx-0x41]
   1400236d9:	cmp    ax,0x5
   1400236dd:	ja     0x1400236e7
   1400236df:	mov    eax,0xfff9
   1400236e4:	add    dx,ax
   1400236e7:	shl    r8d,0x4
   1400236eb:	movzx  ecx,dx
   1400236ee:	movzx  edx,WORD PTR [r9]
   1400236f2:	add    r8d,0xffffffd0
   1400236f6:	add    r8d,ecx
   1400236f9:	test   dx,dx
   1400236fc:	jne    0x1400236c2
   1400236fe:	mov    eax,r8d
   140023701:	ret    
   140023702:	int3   
   140023703:	int3   
   140023704:	mov    QWORD PTR [rsp+0x10],rbx
   140023709:	mov    QWORD PTR [rsp+0x18],rsi
   14002370e:	push   rdi
   14002370f:	sub    rsp,0x20
   140023713:	xor    esi,esi
   140023715:	mov    rdi,rdx
   140023718:	mov    rbx,rcx
   14002371b:	test   rcx,rcx
   14002371e:	je     0x140023773
   140023720:	cmp    WORD PTR [rcx],si
   140023723:	je     0x140023773
   140023725:	lea    rdx,[rip+0xd2d4]        # 0x140030a00
   14002372c:	call   0x1400224b8
   140023731:	test   eax,eax
   140023733:	je     0x140023773
   140023735:	lea    rdx,[rip+0xd2cc]        # 0x140030a08
   14002373c:	mov    rcx,rbx
   14002373f:	call   0x1400224b8
   140023744:	test   eax,eax
   140023746:	jne    0x140023769
   140023748:	mov    ecx,DWORD PTR [rdi+0x8]
   14002374b:	lea    r9d,[rsi+0x2]
   14002374f:	lea    r8,[rsp+0x30]
   140023754:	mov    edx,0x2000000b
   140023759:	call   QWORD PTR [rip+0x3b19]        # 0x140027278
   14002375f:	test   eax,eax
   140023761:	je     0x140023790
   140023763:	mov    eax,DWORD PTR [rsp+0x30]
   140023767:	jmp    0x1400237a2
   140023769:	mov    rcx,rbx
   14002376c:	call   0x1400244b8
   140023771:	jmp    0x1400237a2
   140023773:	mov    ecx,DWORD PTR [rdi+0x8]
   140023776:	lea    r8,[rsp+0x30]
   14002377b:	mov    r9d,0x2
   140023781:	mov    edx,0x20001004
   140023786:	call   QWORD PTR [rip+0x3aec]        # 0x140027278
   14002378c:	test   eax,eax
   14002378e:	jne    0x140023794
   140023790:	xor    eax,eax
   140023792:	jmp    0x1400237a2
   140023794:	mov    eax,DWORD PTR [rsp+0x30]
   140023798:	test   eax,eax
   14002379a:	jne    0x1400237a2
   14002379c:	call   QWORD PTR [rip+0x3a4e]        # 0x1400271f0
   1400237a2:	mov    rbx,QWORD PTR [rsp+0x38]
   1400237a7:	mov    rsi,QWORD PTR [rsp+0x40]
   1400237ac:	add    rsp,0x20
   1400237b0:	pop    rdi
   1400237b1:	ret    
   1400237b2:	int3   
   1400237b3:	int3   
   1400237b4:	xor    r9d,r9d
   1400237b7:	lea    r8,[rip+0xd252]        # 0x140030a10
   1400237be:	lea    eax,[r9+0x1]
   1400237c2:	cmp    cx,WORD PTR [r8]
   1400237c6:	je     0x1400237d9
   1400237c8:	add    r9d,eax
   1400237cb:	add    r8,0x2
   1400237cf:	movsxd rdx,r9d
   1400237d2:	cmp    rdx,0xa
   1400237d6:	jb     0x1400237c2
   1400237d8:	ret    
   1400237d9:	xor    eax,eax
   1400237db:	ret    
   1400237dc:	mov    QWORD PTR [rsp+0x10],rbx
   1400237e1:	mov    QWORD PTR [rsp+0x18],rbp
   1400237e6:	mov    QWORD PTR [rsp+0x20],rsi
   1400237eb:	push   rdi
   1400237ec:	sub    rsp,0x20
   1400237f0:	mov    ebp,edx
   1400237f2:	mov    edi,ecx
   1400237f4:	call   0x14000b18c
   1400237f9:	mov    ecx,edi
   1400237fb:	lea    r8,[rsp+0x30]
   140023800:	mov    r9d,0x2
   140023806:	and    ecx,0x3ff
   14002380c:	mov    edx,0x20000001
   140023811:	mov    rsi,rax
   140023814:	bts    ecx,0xa
   140023818:	call   QWORD PTR [rip+0x3a5a]        # 0x140027278
   14002381e:	xor    ebx,ebx
   140023820:	test   eax,eax
   140023822:	jne    0x140023828
   140023824:	xor    eax,eax
   140023826:	jmp    0x14002386c
   140023828:	cmp    edi,DWORD PTR [rsp+0x30]
   14002382c:	je     0x140023867
   14002382e:	test   ebp,ebp
   140023830:	je     0x140023867
   140023832:	mov    rcx,QWORD PTR [rsi+0x140]
   140023839:	movzx  edx,WORD PTR [rcx]
   14002383c:	add    rcx,0x2
   140023840:	lea    eax,[rdx-0x41]
   140023843:	cmp    ax,0x19
   140023847:	jbe    0x140023853
   140023849:	sub    dx,0x61
   14002384d:	cmp    dx,0x19
   140023851:	ja     0x140023857
   140023853:	inc    ebx
   140023855:	jmp    0x140023839
   140023857:	mov    rcx,QWORD PTR [rsi+0x140]
   14002385e:	call   0x14000f9a0
   140023863:	cmp    ebx,eax
   140023865:	je     0x140023824
   140023867:	mov    eax,0x1
   14002386c:	mov    rbx,QWORD PTR [rsp+0x38]
   140023871:	mov    rbp,QWORD PTR [rsp+0x40]
   140023876:	mov    rsi,QWORD PTR [rsp+0x48]
   14002387b:	add    rsp,0x20
   14002387f:	pop    rdi
   140023880:	ret    
   140023881:	int3   
   140023882:	int3   
   140023883:	int3   
   140023884:	mov    rax,rsp
   140023887:	mov    QWORD PTR [rax+0x8],rbx
   14002388b:	mov    QWORD PTR [rax+0x10],rbp
   14002388f:	mov    QWORD PTR [rax+0x18],rsi
   140023893:	mov    QWORD PTR [rax+0x20],rdi
   140023897:	push   r12
   140023899:	push   r14
   14002389b:	push   r15
   14002389d:	sub    rsp,0x20
   1400238a1:	xor    ebx,ebx
   1400238a3:	mov    r15,r8
   1400238a6:	mov    edi,edx
   1400238a8:	mov    r12,rcx
   1400238ab:	mov    eax,0x1
   1400238b0:	mov    esi,ebx
   1400238b2:	test   edx,edx
   1400238b4:	js     0x1400238f7
   1400238b6:	test   eax,eax
   1400238b8:	je     0x1400238f9
   1400238ba:	mov    rcx,QWORD PTR [r15]
   1400238bd:	lea    eax,[rsi+rdi*1]
   1400238c0:	cdq    
   1400238c1:	sub    eax,edx
   1400238c3:	sar    eax,1
   1400238c5:	movsxd rbp,eax
   1400238c8:	mov    r14,rbp
   1400238cb:	shl    r14,0x4
   1400238cf:	mov    rdx,QWORD PTR [r14+r12*1]
   1400238d3:	call   0x14002457c
   1400238d8:	test   eax,eax
   1400238da:	jne    0x1400238e9
   1400238dc:	lea    rcx,[r12+0x8]
   1400238e1:	add    rcx,r14
   1400238e4:	mov    QWORD PTR [r15],rcx
   1400238e7:	jmp    0x1400238f3
   1400238e9:	jns    0x1400238f0
   1400238eb:	lea    edi,[rbp-0x1]
   1400238ee:	jmp    0x1400238f3
   1400238f0:	lea    esi,[rbp+0x1]
   1400238f3:	cmp    esi,edi
   1400238f5:	jle    0x1400238b6
   1400238f7:	test   eax,eax
   1400238f9:	mov    rbp,QWORD PTR [rsp+0x48]
   1400238fe:	mov    rsi,QWORD PTR [rsp+0x50]
   140023903:	mov    rdi,QWORD PTR [rsp+0x58]
   140023908:	sete   bl
   14002390b:	mov    eax,ebx
   14002390d:	mov    rbx,QWORD PTR [rsp+0x40]
   140023912:	add    rsp,0x20
   140023916:	pop    r15
   140023918:	pop    r14
   14002391a:	pop    r12
   14002391c:	ret    
   14002391d:	int3   
   14002391e:	int3   
   14002391f:	int3   
   140023920:	rex push rbp
   140023922:	push   rbx
   140023923:	push   rsi
   140023924:	push   rdi
   140023925:	push   r12
   140023927:	push   r14
   140023929:	push   r15
   14002392b:	mov    rbp,rsp
   14002392e:	sub    rsp,0x40
   140023932:	mov    rax,QWORD PTR [rip+0x13107]        # 0x140036a40
   140023939:	xor    rax,rsp
   14002393c:	mov    QWORD PTR [rbp-0x10],rax
   140023940:	mov    r14,r8
   140023943:	mov    r15,rdx
   140023946:	mov    rsi,rcx
   140023949:	call   0x14000b18c
   14002394e:	xor    edx,edx
   140023950:	lea    rcx,[rbp-0x20]
   140023954:	lea    r8d,[rdx+0xc]
   140023958:	mov    rdi,rax
   14002395b:	call   0x140007150
   140023960:	call   0x14000b18c
   140023965:	lea    rcx,[rbp-0x20]
   140023969:	xor    r12d,r12d
   14002396c:	mov    QWORD PTR [rax+0x470],rcx
   140023973:	test   rsi,rsi
   140023976:	jne    0x140023984
   140023978:	or     DWORD PTR [rbp-0x20],0x104
   14002397f:	jmp    0x140023a9e
   140023984:	lea    rax,[rsi+0x80]
   14002398b:	lea    rbx,[rdi+0x148]
   140023992:	mov    QWORD PTR [rdi+0x140],rsi
   140023999:	mov    QWORD PTR [rbx],rax
   14002399c:	test   rax,rax
   14002399f:	je     0x1400239be
   1400239a1:	cmp    WORD PTR [rax],r12w
   1400239a5:	je     0x1400239be
   1400239a7:	mov    edx,DWORD PTR [rip+0xd04b]        # 0x1400309f8
   1400239ad:	lea    rcx,[rip+0xccec]        # 0x1400306a0
   1400239b4:	mov    r8,rbx
   1400239b7:	dec    edx
   1400239b9:	call   0x140023884
   1400239be:	mov    DWORD PTR [rbp-0x20],r12d
   1400239c2:	mov    rax,QWORD PTR [rdi+0x140]
   1400239c9:	test   rax,rax
   1400239cc:	je     0x140023a47
   1400239ce:	cmp    WORD PTR [rax],r12w
   1400239d2:	je     0x140023a47
   1400239d4:	mov    rax,QWORD PTR [rbx]
   1400239d7:	test   rax,rax
   1400239da:	je     0x1400239ed
   1400239dc:	cmp    WORD PTR [rax],r12w
   1400239e0:	je     0x1400239ed
   1400239e2:	lea    rcx,[rbp-0x20]
   1400239e6:	call   0x140023218
   1400239eb:	jmp    0x1400239f6
   1400239ed:	lea    rcx,[rbp-0x20]
   1400239f1:	call   0x1400232cc
   1400239f6:	cmp    DWORD PTR [rbp-0x20],r12d
   1400239fa:	jne    0x140023ab4
   140023a00:	mov    edx,DWORD PTR [rip+0xcfee]        # 0x1400309f4
   140023a06:	lea    r8,[rdi+0x140]
   140023a0d:	lea    rcx,[rip+0xc05c]        # 0x14002fa70
   140023a14:	dec    edx
   140023a16:	call   0x140023884
   140023a1b:	test   eax,eax
   140023a1d:	je     0x140023aaa
   140023a23:	mov    rax,QWORD PTR [rbx]
   140023a26:	test   rax,rax
   140023a29:	je     0x140023a3c
   140023a2b:	cmp    WORD PTR [rax],r12w
   140023a2f:	je     0x140023a3c
   140023a31:	lea    rcx,[rbp-0x20]
   140023a35:	call   0x140023218
   140023a3a:	jmp    0x140023aaa
   140023a3c:	lea    rcx,[rbp-0x20]
   140023a40:	call   0x1400232cc
   140023a45:	jmp    0x140023aaa
   140023a47:	mov    rax,QWORD PTR [rbx]
   140023a4a:	test   rax,rax
   140023a4d:	je     0x140023a97
   140023a4f:	cmp    WORD PTR [rax],r12w
   140023a53:	je     0x140023a97
   140023a55:	call   0x14000b18c
   140023a5a:	mov    rbx,rax
   140023a5d:	mov    rcx,QWORD PTR [rax+0x148]
   140023a64:	call   0x14000f9a0
   140023a69:	mov    ecx,r12d
   140023a6c:	mov    edx,0x1
   140023a71:	cmp    rax,0x3
   140023a75:	sete   cl
   140023a78:	mov    DWORD PTR [rbx+0x15c],ecx
   140023a7e:	lea    rcx,[rip+0xfffffffffffff62b]        # 0x1400230b0
   140023a85:	call   QWORD PTR [rip+0x3805]        # 0x140027290
   140023a8b:	test   BYTE PTR [rbp-0x20],0x4
   140023a8f:	jne    0x140023aaa
   140023a91:	mov    DWORD PTR [rbp-0x20],r12d
   140023a95:	jmp    0x140023aaa
   140023a97:	mov    DWORD PTR [rbp-0x20],0x104
   140023a9e:	call   QWORD PTR [rip+0x37e4]        # 0x140027288
   140023aa4:	mov    DWORD PTR [rbp-0x1c],eax
   140023aa7:	mov    DWORD PTR [rbp-0x18],eax
   140023aaa:	cmp    DWORD PTR [rbp-0x20],r12d
   140023aae:	je     0x140023b99
   140023ab4:	lea    rax,[rsi+0x100]
   140023abb:	neg    rsi
   140023abe:	lea    rdx,[rbp-0x20]
   140023ac2:	sbb    rcx,rcx
   140023ac5:	and    rcx,rax
   140023ac8:	call   0x140023704
   140023acd:	mov    ebx,eax
   140023acf:	test   eax,eax
   140023ad1:	je     0x140023b99
   140023ad7:	lea    ecx,[rax-0xfde8]
   140023add:	cmp    ecx,0x1
   140023ae0:	jbe    0x140023b99
   140023ae6:	movzx  ecx,ax
   140023ae9:	call   QWORD PTR [rip+0x36f9]        # 0x1400271e8
   140023aef:	test   eax,eax
   140023af1:	je     0x140023b99
   140023af7:	mov    ecx,DWORD PTR [rbp-0x1c]
   140023afa:	mov    edx,0x1
   140023aff:	call   QWORD PTR [rip+0x377b]        # 0x140027280
   140023b05:	test   eax,eax
   140023b07:	je     0x140023b99
   140023b0d:	test   r15,r15
   140023b10:	je     0x140023b15
   140023b12:	mov    DWORD PTR [r15],ebx
   140023b15:	mov    ecx,DWORD PTR [rbp-0x1c]
   140023b18:	lea    rdx,[rdi+0x398]
   140023b1f:	mov    edi,0x55
   140023b24:	mov    r8d,edi
   140023b27:	call   0x14000f2f8
   140023b2c:	test   r14,r14
   140023b2f:	je     0x140023b92
   140023b31:	mov    ecx,DWORD PTR [rbp-0x1c]
   140023b34:	lea    rdx,[r14+0x120]
   140023b3b:	mov    r8d,edi
   140023b3e:	call   0x14000f2f8
   140023b43:	mov    ecx,DWORD PTR [rbp-0x1c]
   140023b46:	mov    edi,0x40
   140023b4b:	mov    r9d,edi
   140023b4e:	mov    r8,r14
   140023b51:	mov    edx,0x1001
   140023b56:	call   QWORD PTR [rip+0x371c]        # 0x140027278
   140023b5c:	test   eax,eax
   140023b5e:	je     0x140023b99
   140023b60:	mov    ecx,DWORD PTR [rbp-0x18]
   140023b63:	lea    r8,[r14+0x80]
   140023b6a:	mov    r9d,edi
   140023b6d:	mov    edx,0x1002
   140023b72:	call   QWORD PTR [rip+0x3700]        # 0x140027278
   140023b78:	test   eax,eax
   140023b7a:	je     0x140023b99
   140023b7c:	lea    rdx,[r14+0x100]
   140023b83:	lea    r9d,[rdi-0x36]
   140023b87:	lea    r8d,[rdi-0x30]
   140023b8b:	mov    ecx,ebx
   140023b8d:	call   0x1400241e8
   140023b92:	mov    eax,0x1
   140023b97:	jmp    0x140023b9b
   140023b99:	xor    eax,eax
   140023b9b:	mov    rcx,QWORD PTR [rbp-0x10]
   140023b9f:	xor    rcx,rsp
   140023ba2:	call   0x14000d0a0
   140023ba7:	add    rsp,0x40
   140023bab:	pop    r15
   140023bad:	pop    r14
   140023baf:	pop    r12
   140023bb1:	pop    rdi
   140023bb2:	pop    rsi
   140023bb3:	pop    rbx
   140023bb4:	pop    rbp
   140023bb5:	ret    
   140023bb6:	int3   
   140023bb7:	int3   
   140023bb8:	jmp    0x140023bc8
   140023bbd:	int3   
   140023bbe:	int3   
   140023bbf:	int3   
   140023bc0:	jmp    0x140023bc8
   140023bc5:	int3   
   140023bc6:	int3   
   140023bc7:	int3   
   140023bc8:	mov    WORD PTR [rsp+0x8],cx
   140023bcd:	push   rbx
   140023bce:	sub    rsp,0x20
   140023bd2:	mov    eax,0xffff
   140023bd7:	movzx  ebx,dx
   140023bda:	cmp    cx,ax
   140023bdd:	jne    0x140023be3
   140023bdf:	xor    eax,eax
   140023be1:	jmp    0x140023c28
   140023be3:	mov    eax,0x100
   140023be8:	cmp    cx,ax
   140023beb:	jae    0x140023bfd
   140023bed:	mov    rax,QWORD PTR [rip+0x1395c]        # 0x140037550
   140023bf4:	movzx  ecx,cx
   140023bf7:	movzx  eax,WORD PTR [rax+rcx*2]
   140023bfb:	jmp    0x140023c23
   140023bfd:	mov    ecx,0x1
   140023c02:	lea    r9,[rsp+0x40]
   140023c07:	lea    rdx,[rsp+0x30]
   140023c0c:	mov    r8d,ecx
   140023c0f:	call   QWORD PTR [rip+0x3693]        # 0x1400272a8
   140023c15:	xor    ecx,ecx
   140023c17:	test   eax,eax
   140023c19:	je     0x140023c20
   140023c1b:	movzx  ecx,WORD PTR [rsp+0x40]
   140023c20:	movzx  eax,cx
   140023c23:	movzx  ecx,bx
   140023c26:	and    eax,ecx
   140023c28:	add    rsp,0x20
   140023c2c:	pop    rbx
   140023c2d:	ret    
   140023c2e:	int3   
   140023c2f:	int3   
   140023c30:	mov    QWORD PTR [rsp+0x8],rbx
   140023c35:	mov    QWORD PTR [rsp+0x10],rbp
   140023c3a:	mov    QWORD PTR [rsp+0x18],rsi
   140023c3f:	push   rdi
   140023c40:	push   r12
   140023c42:	push   r14
   140023c44:	sub    rsp,0x10
   140023c48:	and    DWORD PTR [r8],0x0
   140023c4c:	and    DWORD PTR [r8+0x4],0x0
   140023c51:	and    DWORD PTR [r8+0x8],0x0
   140023c56:	mov    r10,r8
   140023c59:	mov    edi,edx
   140023c5b:	mov    rbp,rcx
   140023c5e:	mov    ebx,0x404e
   140023c63:	test   edx,edx
   140023c65:	je     0x140023dac
   140023c6b:	xor    r11d,r11d
   140023c6e:	xor    r8d,r8d
   140023c71:	xor    r9d,r9d
   140023c74:	lea    r12d,[r11+0x1]
   140023c78:	movsd  xmm0,QWORD PTR [r10]
   140023c7d:	mov    r14d,DWORD PTR [r10+0x8]
   140023c81:	mov    ecx,r8d
   140023c84:	shr    ecx,0x1f
   140023c87:	add    r8d,r8d
   140023c8a:	add    r9d,r9d
   140023c8d:	movsd  QWORD PTR [rsp],xmm0
   140023c92:	or     r9d,ecx
   140023c95:	lea    edx,[r11+r11*1]
   140023c99:	mov    eax,r11d
   140023c9c:	shr    eax,0x1f
   140023c9f:	add    r9d,r9d
   140023ca2:	or     r8d,eax
   140023ca5:	mov    eax,edx
   140023ca7:	add    edx,edx
   140023ca9:	mov    ecx,r8d
   140023cac:	shr    eax,0x1f
   140023caf:	add    r8d,r8d
   140023cb2:	shr    ecx,0x1f
   140023cb5:	or     r8d,eax
   140023cb8:	xor    eax,eax
   140023cba:	or     r9d,ecx
   140023cbd:	mov    ecx,DWORD PTR [rsp]
   140023cc0:	mov    DWORD PTR [r10],edx
   140023cc3:	lea    esi,[rdx+rcx*1]
   140023cc6:	mov    DWORD PTR [r10+0x4],r8d
   140023cca:	mov    DWORD PTR [r10+0x8],r9d
   140023cce:	cmp    esi,edx
   140023cd0:	jb     0x140023cd6
   140023cd2:	cmp    esi,ecx
   140023cd4:	jae    0x140023cd9
   140023cd6:	mov    eax,r12d
   140023cd9:	mov    DWORD PTR [r10],esi
   140023cdc:	test   eax,eax
   140023cde:	je     0x140023d04
   140023ce0:	mov    eax,r8d
   140023ce3:	inc    r8d
   140023ce6:	xor    ecx,ecx
   140023ce8:	cmp    r8d,eax
   140023ceb:	jb     0x140023cf2
   140023ced:	cmp    r8d,r12d
   140023cf0:	jae    0x140023cf5
   140023cf2:	mov    ecx,r12d
   140023cf5:	mov    DWORD PTR [r10+0x4],r8d
   140023cf9:	test   ecx,ecx
   140023cfb:	je     0x140023d04
   140023cfd:	inc    r9d
   140023d00:	mov    DWORD PTR [r10+0x8],r9d
   140023d04:	mov    rax,QWORD PTR [rsp]
   140023d08:	xor    ecx,ecx
   140023d0a:	shr    rax,0x20
   140023d0e:	lea    r11d,[r8+rax*1]
   140023d12:	cmp    r11d,r8d
   140023d15:	jb     0x140023d1c
   140023d17:	cmp    r11d,eax
   140023d1a:	jae    0x140023d1f
   140023d1c:	mov    ecx,r12d
   140023d1f:	mov    DWORD PTR [r10+0x4],r11d
   140023d23:	test   ecx,ecx
   140023d25:	je     0x140023d2e
   140023d27:	add    r9d,r12d
   140023d2a:	mov    DWORD PTR [r10+0x8],r9d
   140023d2e:	add    r9d,r14d
   140023d31:	lea    edx,[rsi+rsi*1]
   140023d34:	mov    ecx,r11d
   140023d37:	shr    ecx,0x1f
   140023d3a:	lea    r8d,[r11+r11*1]
   140023d3e:	add    r9d,r9d
   140023d41:	or     r9d,ecx
   140023d44:	mov    eax,esi
   140023d46:	mov    DWORD PTR [r10],edx
   140023d49:	shr    eax,0x1f
   140023d4c:	mov    DWORD PTR [r10+0x8],r9d
   140023d50:	or     r8d,eax
   140023d53:	xor    eax,eax
   140023d55:	mov    DWORD PTR [r10+0x4],r8d
   140023d59:	movsx  ecx,BYTE PTR [rbp+0x0]
   140023d5d:	lea    r11d,[rdx+rcx*1]
   140023d61:	cmp    r11d,edx
   140023d64:	jb     0x140023d6b
   140023d66:	cmp    r11d,ecx
   140023d69:	jae    0x140023d6e
   140023d6b:	mov    eax,r12d
   140023d6e:	mov    DWORD PTR [r10],r11d
   140023d71:	test   eax,eax
   140023d73:	je     0x140023d99
   140023d75:	mov    eax,r8d
   140023d78:	inc    r8d
   140023d7b:	xor    ecx,ecx
   140023d7d:	cmp    r8d,eax
   140023d80:	jb     0x140023d87
   140023d82:	cmp    r8d,r12d
   140023d85:	jae    0x140023d8a
   140023d87:	mov    ecx,r12d
   140023d8a:	mov    DWORD PTR [r10+0x4],r8d
   140023d8e:	test   ecx,ecx
   140023d90:	je     0x140023d99
   140023d92:	inc    r9d
   140023d95:	mov    DWORD PTR [r10+0x8],r9d
   140023d99:	add    rbp,r12
   140023d9c:	mov    DWORD PTR [r10+0x4],r8d
   140023da0:	mov    DWORD PTR [r10+0x8],r9d
   140023da4:	dec    edi
   140023da6:	jne    0x140023c78
   140023dac:	cmp    DWORD PTR [r10+0x8],0x0
   140023db1:	jne    0x140023ded
   140023db3:	mov    r8d,DWORD PTR [r10+0x4]
   140023db7:	mov    edx,DWORD PTR [r10]
   140023dba:	mov    eax,r8d
   140023dbd:	mov    r9d,r8d
   140023dc0:	shl    eax,0x10
   140023dc3:	mov    ecx,edx
   140023dc5:	shl    edx,0x10
   140023dc8:	shr    ecx,0x10
   140023dcb:	shr    r9d,0x10
   140023dcf:	mov    DWORD PTR [r10],edx
   140023dd2:	mov    r8d,ecx
   140023dd5:	or     r8d,eax
   140023dd8:	mov    eax,0xfff0
   140023ddd:	add    bx,ax
   140023de0:	test   r9d,r9d
   140023de3:	je     0x140023db7
   140023de5:	mov    DWORD PTR [r10+0x4],r8d
   140023de9:	mov    DWORD PTR [r10+0x8],r9d
   140023ded:	mov    edx,DWORD PTR [r10+0x8]
   140023df1:	mov    r11d,0x8000
   140023df7:	test   r11d,edx
   140023dfa:	jne    0x140023e34
   140023dfc:	mov    r9d,DWORD PTR [r10]
   140023dff:	mov    r8d,DWORD PTR [r10+0x4]
   140023e03:	mov    ecx,r8d
   140023e06:	mov    eax,r9d
   140023e09:	add    r8d,r8d
   140023e0c:	shr    eax,0x1f
   140023e0f:	add    edx,edx
   140023e11:	shr    ecx,0x1f
   140023e14:	or     r8d,eax
   140023e17:	mov    eax,0xffff
   140023e1c:	or     edx,ecx
   140023e1e:	add    bx,ax
   140023e21:	add    r9d,r9d
   140023e24:	test   r11d,edx
   140023e27:	je     0x140023e03
   140023e29:	mov    DWORD PTR [r10],r9d
   140023e2c:	mov    DWORD PTR [r10+0x4],r8d
   140023e30:	mov    DWORD PTR [r10+0x8],edx
   140023e34:	mov    rbp,QWORD PTR [rsp+0x38]
   140023e39:	mov    rsi,QWORD PTR [rsp+0x40]
   140023e3e:	mov    WORD PTR [r10+0xa],bx
   140023e43:	mov    rbx,QWORD PTR [rsp+0x30]
   140023e48:	add    rsp,0x10
   140023e4c:	pop    r14
   140023e4e:	pop    r12
   140023e50:	pop    rdi
   140023e51:	ret    
   140023e52:	int3   
   140023e53:	int3   
   140023e54:	mov    QWORD PTR [rsp+0x18],rbx
   140023e59:	mov    DWORD PTR [rsp+0x8],ecx
   140023e5d:	push   rsi
   140023e5e:	push   rdi
   140023e5f:	push   r14
   140023e61:	sub    rsp,0x20
   140023e65:	movsxd rbx,ecx
   140023e68:	cmp    ebx,0xfffffffe
   140023e6b:	jne    0x140023e85
   140023e6d:	call   0x140009548
   140023e72:	and    DWORD PTR [rax],0x0
   140023e75:	call   0x1400095b8
   140023e7a:	mov    DWORD PTR [rax],0x9
   140023e80:	jmp    0x140023f06
   140023e85:	test   ecx,ecx
   140023e87:	js     0x140023eee
   140023e89:	cmp    ebx,DWORD PTR [rip+0x161b5]        # 0x14003a044
   140023e8f:	jae    0x140023eee
   140023e91:	mov    rax,rbx
   140023e94:	mov    rdi,rbx
   140023e97:	sar    rdi,0x5
   140023e9b:	lea    r14,[rip+0x147ee]        # 0x140038690
   140023ea2:	and    eax,0x1f
   140023ea5:	imul   rsi,rax,0x58
   140023ea9:	mov    rax,QWORD PTR [r14+rdi*8]
   140023ead:	movsx  ecx,BYTE PTR [rax+rsi*1+0x8]
   140023eb2:	and    ecx,0x1
   140023eb5:	je     0x140023eee
   140023eb7:	mov    ecx,ebx
   140023eb9:	call   0x140020ed0
   140023ebe:	nop
   140023ebf:	mov    rax,QWORD PTR [r14+rdi*8]
   140023ec3:	test   BYTE PTR [rax+rsi*1+0x8],0x1
   140023ec8:	je     0x140023ed5
   140023eca:	mov    ecx,ebx
   140023ecc:	call   0x140023f18
   140023ed1:	mov    edi,eax
   140023ed3:	jmp    0x140023ee3
   140023ed5:	call   0x1400095b8
   140023eda:	mov    DWORD PTR [rax],0x9
   140023ee0:	or     edi,0xffffffff
   140023ee3:	mov    ecx,ebx
   140023ee5:	call   0x14002142c
   140023eea:	mov    eax,edi
   140023eec:	jmp    0x140023f09
   140023eee:	call   0x140009548
   140023ef3:	and    DWORD PTR [rax],0x0
   140023ef6:	call   0x1400095b8
   140023efb:	mov    DWORD PTR [rax],0x9
   140023f01:	call   0x140008628
   140023f06:	or     eax,0xffffffff
   140023f09:	mov    rbx,QWORD PTR [rsp+0x50]
   140023f0e:	add    rsp,0x20
   140023f12:	pop    r14
   140023f14:	pop    rdi
   140023f15:	pop    rsi
   140023f16:	ret    
   140023f17:	int3   
   140023f18:	mov    QWORD PTR [rsp+0x8],rbx
   140023f1d:	push   rdi
   140023f1e:	sub    rsp,0x20
   140023f22:	movsxd rdi,ecx
   140023f25:	mov    ecx,edi
   140023f27:	call   0x14002120c
   140023f2c:	cmp    rax,0xffffffffffffffff
   140023f30:	je     0x140023f8b
   140023f32:	mov    rax,QWORD PTR [rip+0x14757]        # 0x140038690
   140023f39:	mov    ecx,0x2
   140023f3e:	cmp    edi,0x1
   140023f41:	jne    0x140023f4c
   140023f43:	test   BYTE PTR [rax+0xb8],dil
   140023f4a:	jne    0x140023f56
   140023f4c:	cmp    edi,ecx
   140023f4e:	jne    0x140023f6d
   140023f50:	test   BYTE PTR [rax+0x60],0x1
   140023f54:	je     0x140023f6d
   140023f56:	call   0x14002120c
   140023f5b:	mov    ecx,0x1
   140023f60:	mov    rbx,rax
   140023f63:	call   0x14002120c
   140023f68:	cmp    rax,rbx
   140023f6b:	je     0x140023f8b
   140023f6d:	mov    ecx,edi
   140023f6f:	call   0x14002120c
   140023f74:	mov    rcx,rax
   140023f77:	call   QWORD PTR [rip+0x30bb]        # 0x140027038
   140023f7d:	test   eax,eax
   140023f7f:	jne    0x140023f8b
   140023f81:	call   QWORD PTR [rip+0x30f9]        # 0x140027080
   140023f87:	mov    ebx,eax
   140023f89:	jmp    0x140023f8d
   140023f8b:	xor    ebx,ebx
   140023f8d:	mov    ecx,edi
   140023f8f:	call   0x140021160
   140023f94:	mov    rdx,rdi
   140023f97:	mov    rcx,rdi
   140023f9a:	sar    rcx,0x5
   140023f9e:	and    edx,0x1f
   140023fa1:	lea    r8,[rip+0x146e8]        # 0x140038690
   140023fa8:	mov    rcx,QWORD PTR [r8+rcx*8]
   140023fac:	imul   rdx,rdx,0x58
   140023fb0:	mov    BYTE PTR [rcx+rdx*1+0x8],0x0
   140023fb5:	test   ebx,ebx
   140023fb7:	je     0x140023fc5
   140023fb9:	mov    ecx,ebx
   140023fbb:	call   0x140009568
   140023fc0:	or     eax,0xffffffff
   140023fc3:	jmp    0x140023fc7
   140023fc5:	xor    eax,eax
   140023fc7:	mov    rbx,QWORD PTR [rsp+0x30]
   140023fcc:	add    rsp,0x20
   140023fd0:	pop    rdi
   140023fd1:	ret    
   140023fd2:	int3   
   140023fd3:	int3   
   140023fd4:	rex push rbx
   140023fd6:	sub    rsp,0x20
   140023fda:	test   BYTE PTR [rcx+0x18],0x83
   140023fde:	mov    rbx,rcx
   140023fe1:	je     0x140024005
   140023fe3:	test   BYTE PTR [rcx+0x18],0x8
   140023fe7:	je     0x140024005
   140023fe9:	mov    rcx,QWORD PTR [rcx+0x10]
   140023fed:	call   0x140006444
   140023ff2:	and    DWORD PTR [rbx+0x18],0xfffffbf7
   140023ff9:	xor    eax,eax
   140023ffb:	mov    QWORD PTR [rbx],rax
   140023ffe:	mov    QWORD PTR [rbx+0x10],rax
   140024002:	mov    DWORD PTR [rbx+0x8],eax
   140024005:	add    rsp,0x20
   140024009:	pop    rbx
   14002400a:	ret    
   14002400b:	int3   
   14002400c:	sub    rsp,0x28
   140024010:	mov    rcx,QWORD PTR [rip+0x13869]        # 0x140037880
   140024017:	lea    rax,[rcx+0x2]
   14002401b:	cmp    rax,0x1
   14002401f:	jbe    0x140024027
   140024021:	call   QWORD PTR [rip+0x3011]        # 0x140027038
   140024027:	add    rsp,0x28
   14002402b:	ret    
   14002402c:	sub    rsp,0x48
   140024030:	and    QWORD PTR [rsp+0x30],0x0
   140024036:	and    DWORD PTR [rsp+0x28],0x0
   14002403b:	mov    r8d,0x3
   140024041:	lea    rcx,[rip+0xc9e0]        # 0x140030a28
   140024048:	xor    r9d,r9d
   14002404b:	mov    edx,0x40000000
   140024050:	mov    DWORD PTR [rsp+0x20],r8d
   140024055:	call   QWORD PTR [rip+0x326d]        # 0x1400272c8
   14002405b:	mov    QWORD PTR [rip+0x1381e],rax        # 0x140037880
   140024062:	add    rsp,0x48
   140024066:	ret    
   140024067:	int3   
   140024068:	mov    QWORD PTR [rsp+0x18],rbx
   14002406d:	mov    QWORD PTR [rsp+0x20],rsi
   140024072:	push   rdi
   140024073:	sub    rsp,0x70
   140024077:	movaps XMMWORD PTR [rsp+0x60],xmm6
   14002407c:	mov    rax,QWORD PTR [rip+0x129bd]        # 0x140036a40
   140024083:	xor    rax,rsp
   140024086:	mov    QWORD PTR [rsp+0x58],rax
   14002408b:	mov    rsi,rcx
   14002408e:	mov    rbx,rcx
   140024091:	mov    rdi,rdx
   140024094:	lea    rcx,[rsp+0x20]
   140024099:	mov    rdx,r8
   14002409c:	call   0x14000a000
   1400240a1:	test   rdi,rdi
   1400240a4:	je     0x1400240a9
   1400240a6:	mov    QWORD PTR [rdi],rbx
   1400240a9:	test   rsi,rsi
   1400240ac:	jne    0x1400240c6
   1400240ae:	call   0x1400095b8
   1400240b3:	mov    DWORD PTR [rax],0x16
   1400240b9:	call   0x140008628
   1400240be:	xorps  xmm6,xmm6
   1400240c1:	jmp    0x140024182
   1400240c6:	mov    rdx,QWORD PTR [rsp+0x20]
   1400240cb:	cmp    DWORD PTR [rdx+0xd4],0x1
   1400240d2:	jle    0x1400240ed
   1400240d4:	movzx  ecx,BYTE PTR [rbx]
   1400240d7:	lea    r8,[rsp+0x20]
   1400240dc:	mov    edx,0x8
   1400240e1:	call   0x14001c590
   1400240e6:	mov    rdx,QWORD PTR [rsp+0x20]
   1400240eb:	jmp    0x1400240fe
   1400240ed:	movzx  ecx,BYTE PTR [rbx]
   1400240f0:	mov    rax,QWORD PTR [rdx+0x108]
   1400240f7:	movzx  eax,WORD PTR [rax+rcx*2]
   1400240fb:	and    eax,0x8
   1400240fe:	test   eax,eax
   140024100:	je     0x140024107
   140024102:	inc    rbx
   140024105:	jmp    0x1400240cb
   140024107:	lea    r8,[rsp+0x20]
   14002410c:	lea    rcx,[rsp+0x40]
   140024111:	mov    rdx,rbx
   140024114:	call   0x1400248a0
   140024119:	test   rdi,rdi
   14002411c:	je     0x140024128
   14002411e:	movsxd rcx,DWORD PTR [rax+0x4]
   140024122:	add    rcx,rbx
   140024125:	mov    QWORD PTR [rdi],rcx
   140024128:	test   DWORD PTR [rax],0x240
   14002412e:	je     0x14002413d
   140024130:	xorps  xmm6,xmm6
   140024133:	test   rdi,rdi
   140024136:	je     0x140024182
   140024138:	mov    QWORD PTR [rdi],rsi
   14002413b:	jmp    0x140024182
   14002413d:	test   BYTE PTR [rax],0x81
   140024140:	je     0x140024158
   140024142:	cmp    BYTE PTR [rbx],0x2d
   140024145:	movsd  xmm6,QWORD PTR [rip+0x13743]        # 0x140037890
   14002414d:	jne    0x140024170
   14002414f:	xorps  xmm6,XMMWORD PTR [rip+0xa12a]        # 0x14002e280
   140024156:	jmp    0x140024170
   140024158:	test   DWORD PTR [rax],0x100
   14002415e:	je     0x14002417d
   140024160:	movsd  xmm0,QWORD PTR [rax+0x10]
   140024165:	xorps  xmm6,xmm6
   140024168:	ucomisd xmm0,xmm6
   14002416c:	jp     0x14002417d
   14002416e:	jne    0x14002417d
   140024170:	call   0x1400095b8
   140024175:	mov    DWORD PTR [rax],0x22
   14002417b:	jmp    0x140024182
   14002417d:	movsd  xmm6,QWORD PTR [rax+0x10]
   140024182:	cmp    BYTE PTR [rsp+0x38],0x0
   140024187:	je     0x140024195
   140024189:	mov    rax,QWORD PTR [rsp+0x30]
   14002418e:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140024195:	movaps xmm0,xmm6
   140024198:	mov    rcx,QWORD PTR [rsp+0x58]
   14002419d:	xor    rcx,rsp
   1400241a0:	call   0x14000d0a0
   1400241a5:	lea    r11,[rsp+0x70]
   1400241aa:	mov    rbx,QWORD PTR [r11+0x20]
   1400241ae:	mov    rsi,QWORD PTR [r11+0x28]
   1400241b2:	movaps xmm6,XMMWORD PTR [rsp+0x60]
   1400241b7:	mov    rsp,r11
   1400241ba:	pop    rdi
   1400241bb:	ret    
   1400241bc:	xor    r8d,r8d
   1400241bf:	jmp    0x140024068
   1400241c4:	sub    rsp,0x38
   1400241c8:	xor    eax,eax
   1400241ca:	cmp    r9d,0xa
   1400241ce:	jne    0x1400241d9
   1400241d0:	test   rcx,rcx
   1400241d3:	jns    0x1400241d9
   1400241d5:	lea    eax,[r9-0x9]
   1400241d9:	mov    DWORD PTR [rsp+0x20],eax
   1400241dd:	call   0x14002425c
   1400241e2:	add    rsp,0x38
   1400241e6:	ret    
   1400241e7:	int3   
   1400241e8:	sub    rsp,0x38
   1400241ec:	cmp    r9d,0xa
   1400241f0:	jne    0x140024200
   1400241f2:	test   ecx,ecx
   1400241f4:	jns    0x140024200
   1400241f6:	mov    DWORD PTR [rsp+0x20],0x1
   1400241fe:	jmp    0x140024205
   140024200:	and    DWORD PTR [rsp+0x20],0x0
   140024205:	call   0x140024370
   14002420a:	add    rsp,0x38
   14002420e:	ret    
   14002420f:	int3   
   140024210:	sub    rsp,0x38
   140024214:	xor    eax,eax
   140024216:	cmp    r9d,0xa
   14002421a:	jne    0x140024224
   14002421c:	test   ecx,ecx
   14002421e:	jns    0x140024224
   140024220:	lea    eax,[r9-0x9]
   140024224:	mov    DWORD PTR [rsp+0x20],eax
   140024228:	call   0x140024370
   14002422d:	add    rsp,0x38
   140024231:	ret    
   140024232:	int3   
   140024233:	int3   
   140024234:	sub    rsp,0x38
   140024238:	and    DWORD PTR [rsp+0x20],0x0
   14002423d:	call   0x14002425c
   140024242:	add    rsp,0x38
   140024246:	ret    
   140024247:	int3   
   140024248:	sub    rsp,0x38
   14002424c:	and    DWORD PTR [rsp+0x20],0x0
   140024251:	call   0x140024370
   140024256:	add    rsp,0x38
   14002425a:	ret    
   14002425b:	int3   
   14002425c:	mov    QWORD PTR [rsp+0x8],rbx
   140024261:	mov    QWORD PTR [rsp+0x10],rbp
   140024266:	mov    QWORD PTR [rsp+0x18],rsi
   14002426b:	push   rdi
   14002426c:	sub    rsp,0x20
   140024270:	xor    ebp,ebp
   140024272:	mov    esi,r9d
   140024275:	mov    rdi,r8
   140024278:	mov    r10,rdx
   14002427b:	mov    r11,rcx
   14002427e:	test   rdx,rdx
   140024281:	jne    0x14002429b
   140024283:	call   0x1400095b8
   140024288:	mov    ebx,0x16
   14002428d:	mov    DWORD PTR [rax],ebx
   14002428f:	call   0x140008628
   140024294:	mov    eax,ebx
   140024296:	jmp    0x140024358
   14002429b:	test   r8,r8
   14002429e:	je     0x140024283
   1400242a0:	mov    WORD PTR [rdx],bp
   1400242a3:	mov    edx,DWORD PTR [rsp+0x50]
   1400242a7:	mov    eax,edx
   1400242a9:	neg    eax
   1400242ab:	sbb    rcx,rcx
   1400242ae:	neg    rcx
   1400242b1:	inc    rcx
   1400242b4:	cmp    r8,rcx
   1400242b7:	ja     0x1400242c5
   1400242b9:	call   0x1400095b8
   1400242be:	mov    ebx,0x22
   1400242c3:	jmp    0x14002428d
   1400242c5:	lea    eax,[rsi-0x2]
   1400242c8:	mov    ebx,0x22
   1400242cd:	cmp    eax,ebx
   1400242cf:	ja     0x140024283
   1400242d1:	mov    rcx,rbp
   1400242d4:	mov    r8,r10
   1400242d7:	test   edx,edx
   1400242d9:	je     0x1400242ec
   1400242db:	lea    eax,[rbx+0xb]
   1400242de:	lea    r8,[r10+0x2]
   1400242e2:	lea    ecx,[rbx-0x21]
   1400242e5:	mov    WORD PTR [r10],ax
   1400242e9:	neg    r11
   1400242ec:	mov    r9,r8
   1400242ef:	xor    edx,edx
   1400242f1:	mov    rax,r11
   1400242f4:	div    rsi
   1400242f7:	mov    r11,rax
   1400242fa:	cmp    edx,0x9
   1400242fd:	jbe    0x140024305
   1400242ff:	add    dx,0x57
   140024303:	jmp    0x140024309
   140024305:	add    dx,0x30
   140024309:	mov    WORD PTR [r8],dx
   14002430d:	inc    rcx
   140024310:	add    r8,0x2
   140024314:	test   rax,rax
   140024317:	je     0x14002431e
   140024319:	cmp    rcx,rdi
   14002431c:	jb     0x1400242ef
   14002431e:	cmp    rcx,rdi
   140024321:	jb     0x140024331
   140024323:	mov    WORD PTR [r10],bp
   140024327:	call   0x1400095b8
   14002432c:	jmp    0x14002428d
   140024331:	mov    WORD PTR [r8],bp
   140024335:	sub    r8,0x2
   140024339:	movzx  eax,WORD PTR [r9]
   14002433d:	movzx  ecx,WORD PTR [r8]
   140024341:	mov    WORD PTR [r8],ax
   140024345:	mov    WORD PTR [r9],cx
   140024349:	add    r9,0x2
   14002434d:	sub    r8,0x2
   140024351:	cmp    r9,r8
   140024354:	jb     0x140024339
   140024356:	xor    eax,eax
   140024358:	mov    rbx,QWORD PTR [rsp+0x30]
   14002435d:	mov    rbp,QWORD PTR [rsp+0x38]
   140024362:	mov    rsi,QWORD PTR [rsp+0x40]
   140024367:	add    rsp,0x20
   14002436b:	pop    rdi
   14002436c:	ret    
   14002436d:	int3   
   14002436e:	int3   
   14002436f:	int3   
   140024370:	mov    QWORD PTR [rsp+0x8],rbx
   140024375:	mov    QWORD PTR [rsp+0x10],rbp
   14002437a:	mov    QWORD PTR [rsp+0x18],rsi
   14002437f:	push   rdi
   140024380:	sub    rsp,0x20
   140024384:	xor    ebp,ebp
   140024386:	mov    esi,r9d
   140024389:	mov    rdi,r8
   14002438c:	mov    r10,rdx
   14002438f:	mov    r11d,ecx
   140024392:	test   rdx,rdx
   140024395:	jne    0x1400243af
   140024397:	call   0x1400095b8
   14002439c:	mov    ebx,0x16
   1400243a1:	mov    DWORD PTR [rax],ebx
   1400243a3:	call   0x140008628
   1400243a8:	mov    eax,ebx
   1400243aa:	jmp    0x14002446b
   1400243af:	test   r8,r8
   1400243b2:	je     0x140024397
   1400243b4:	mov    WORD PTR [rdx],bp
   1400243b7:	mov    edx,DWORD PTR [rsp+0x50]
   1400243bb:	mov    eax,edx
   1400243bd:	neg    eax
   1400243bf:	sbb    rcx,rcx
   1400243c2:	neg    rcx
   1400243c5:	inc    rcx
   1400243c8:	cmp    r8,rcx
   1400243cb:	ja     0x1400243d9
   1400243cd:	call   0x1400095b8
   1400243d2:	mov    ebx,0x22
   1400243d7:	jmp    0x1400243a1
   1400243d9:	lea    eax,[r9-0x2]
   1400243dd:	mov    ebx,0x22
   1400243e2:	cmp    eax,ebx
   1400243e4:	ja     0x140024397
   1400243e6:	mov    rcx,rbp
   1400243e9:	mov    r8,r10
   1400243ec:	test   edx,edx
   1400243ee:	je     0x140024401
   1400243f0:	lea    eax,[rbx+0xb]
   1400243f3:	lea    r8,[r10+0x2]
   1400243f7:	lea    ecx,[rbx-0x21]
   1400243fa:	mov    WORD PTR [r10],ax
   1400243fe:	neg    r11d
   140024401:	mov    r9,r8
   140024404:	xor    edx,edx
   140024406:	mov    eax,r11d
   140024409:	div    esi
   14002440b:	mov    r11d,eax
   14002440e:	cmp    edx,0x9
   140024411:	jbe    0x140024419
   140024413:	add    dx,0x57
   140024417:	jmp    0x14002441d
   140024419:	add    dx,0x30
   14002441d:	mov    WORD PTR [r8],dx
   140024421:	inc    rcx
   140024424:	add    r8,0x2
   140024428:	test   eax,eax
   14002442a:	je     0x140024431
   14002442c:	cmp    rcx,rdi
   14002442f:	jb     0x140024404
   140024431:	cmp    rcx,rdi
   140024434:	jb     0x140024444
   140024436:	mov    WORD PTR [r10],bp
   14002443a:	call   0x1400095b8
   14002443f:	jmp    0x1400243a1
   140024444:	mov    WORD PTR [r8],bp
   140024448:	sub    r8,0x2
   14002444c:	movzx  eax,WORD PTR [r9]
   140024450:	movzx  ecx,WORD PTR [r8]
   140024454:	mov    WORD PTR [r8],ax
   140024458:	mov    WORD PTR [r9],cx
   14002445c:	add    r9,0x2
   140024460:	sub    r8,0x2
   140024464:	cmp    r9,r8
   140024467:	jb     0x14002444c
   140024469:	xor    eax,eax
   14002446b:	mov    rbx,QWORD PTR [rsp+0x30]
   140024470:	mov    rbp,QWORD PTR [rsp+0x38]
   140024475:	mov    rsi,QWORD PTR [rsp+0x40]
   14002447a:	add    rsp,0x20
   14002447e:	pop    rdi
   14002447f:	ret    
   140024480:	xor    edx,edx
   140024482:	lea    r8d,[rdx+0xa]
   140024486:	jmp    0x140024b6c
   14002448b:	int3   
   14002448c:	xor    edx,edx
   14002448e:	lea    r8d,[rdx+0xa]
   140024492:	jmp    0x140024ef8
   140024497:	int3   
   140024498:	mov    r9,rdx
   14002449b:	xor    edx,edx
   14002449d:	lea    r8d,[rdx+0xa]
   1400244a1:	jmp    0x140024f28
   1400244a6:	int3   
   1400244a7:	int3   
   1400244a8:	mov    r9,rdx
   1400244ab:	xor    edx,edx
   1400244ad:	lea    r8d,[rdx+0xa]
   1400244b1:	jmp    0x140024b58
   1400244b6:	int3   
   1400244b7:	int3   
   1400244b8:	xor    edx,edx
   1400244ba:	lea    r8d,[rdx+0xa]
   1400244be:	jmp    0x140024b6c
   1400244c3:	int3   
   1400244c4:	mov    r9,rdx
   1400244c7:	xor    edx,edx
   1400244c9:	lea    r8d,[rdx+0xa]
   1400244cd:	jmp    0x140024b58
   1400244d2:	int3   
   1400244d3:	int3   
   1400244d4:	xor    edx,edx
   1400244d6:	lea    r8d,[rdx+0xa]
   1400244da:	jmp    0x140024ef8
   1400244df:	int3   
   1400244e0:	mov    r9,rdx
   1400244e3:	xor    edx,edx
   1400244e5:	lea    r8d,[rdx+0xa]
   1400244e9:	jmp    0x140024f28
   1400244ee:	int3   
   1400244ef:	int3   
   1400244f0:	sub    rsp,0x18
   1400244f4:	movdqa xmm2,XMMWORD PTR [rsp]
   1400244f9:	movzx  eax,dx
   1400244fc:	mov    r8,rcx
   1400244ff:	movd   xmm0,eax
   140024503:	xor    r9d,r9d
   140024506:	pshuflw xmm1,xmm0,0x0
   14002450b:	pshufd xmm3,xmm1,0x0
   140024510:	mov    rax,r8
   140024513:	and    eax,0xfff
   140024518:	cmp    rax,0xff0
   14002451e:	ja     0x14002454b
   140024520:	movdqu xmm1,XMMWORD PTR [r8]
   140024525:	movdqa xmm0,xmm2
   140024529:	pxor   xmm0,xmm2
   14002452d:	movdqa xmm2,xmm0
   140024531:	pcmpeqw xmm2,xmm1
   140024535:	pcmpeqw xmm1,xmm3
   140024539:	por    xmm2,xmm1
   14002453d:	pmovmskb eax,xmm2
   140024541:	test   eax,eax
   140024543:	jne    0x14002455d
   140024545:	add    r8,0x10
   140024549:	jmp    0x140024510
   14002454b:	cmp    WORD PTR [r8],dx
   14002454f:	je     0x140024574
   140024551:	cmp    WORD PTR [r8],r9w
   140024555:	je     0x140024570
   140024557:	add    r8,0x2
   14002455b:	jmp    0x140024510
   14002455d:	bsf    ecx,eax
   140024560:	add    r8,rcx
   140024563:	cmp    WORD PTR [r8],dx
   140024567:	cmove  r9,r8
   14002456b:	mov    rax,r9
   14002456e:	jmp    0x140024577
   140024570:	xor    eax,eax
   140024572:	jmp    0x140024577
   140024574:	mov    rax,r8
   140024577:	add    rsp,0x18
   14002457b:	ret    
   14002457c:	sub    rsp,0x28
   140024580:	xor    r8d,r8d
   140024583:	mov    r9,rdx
   140024586:	mov    r10,rcx
   140024589:	cmp    DWORD PTR [rip+0x14a90],r8d        # 0x140039020
   140024590:	jne    0x1400245f7
   140024592:	test   rcx,rcx
   140024595:	jne    0x1400245b1
   140024597:	call   0x1400095b8
   14002459c:	mov    DWORD PTR [rax],0x16
   1400245a2:	call   0x140008628
   1400245a7:	mov    eax,0x7fffffff
   1400245ac:	add    rsp,0x28
   1400245b0:	ret    
   1400245b1:	test   rdx,rdx
   1400245b4:	je     0x140024597
   1400245b6:	sub    r10,rdx
   1400245b9:	movzx  edx,WORD PTR [r10+r9*1]
   1400245be:	lea    eax,[rdx-0x41]
   1400245c1:	cmp    ax,0x19
   1400245c5:	ja     0x1400245cb
   1400245c7:	add    dx,0x20
   1400245cb:	movzx  ecx,WORD PTR [r9]
   1400245cf:	lea    eax,[rcx-0x41]
   1400245d2:	cmp    ax,0x19
   1400245d6:	ja     0x1400245dc
   1400245d8:	add    cx,0x20
   1400245dc:	add    r9,0x2
   1400245e0:	test   dx,dx
   1400245e3:	je     0x1400245ea
   1400245e5:	cmp    dx,cx
   1400245e8:	je     0x1400245b9
   1400245ea:	movzx  ecx,cx
   1400245ed:	movzx  eax,dx
   1400245f0:	sub    eax,ecx
   1400245f2:	add    rsp,0x28
   1400245f6:	ret    
   1400245f7:	add    rsp,0x28
   1400245fb:	jmp    0x140024600
   140024600:	mov    rax,rsp
   140024603:	mov    QWORD PTR [rax+0x8],rbx
   140024607:	mov    QWORD PTR [rax+0x10],rbp
   14002460b:	mov    QWORD PTR [rax+0x18],rsi
   14002460f:	push   rdi
   140024610:	sub    rsp,0x40
   140024614:	mov    rsi,rcx
   140024617:	mov    rdi,rdx
   14002461a:	lea    rcx,[rax-0x28]
   14002461e:	mov    rdx,r8
   140024621:	call   0x14000a000
   140024626:	xor    ebp,ebp
   140024628:	test   rsi,rsi
   14002462b:	je     0x140024632
   14002462d:	test   rdi,rdi
   140024630:	jne    0x140024649
   140024632:	call   0x1400095b8
   140024637:	mov    DWORD PTR [rax],0x16
   14002463d:	call   0x140008628
   140024642:	mov    eax,0x7fffffff
   140024647:	jmp    0x1400246c5
   140024649:	mov    rax,QWORD PTR [rsp+0x20]
   14002464e:	cmp    QWORD PTR [rax+0x138],rbp
   140024655:	jne    0x14002468b
   140024657:	sub    rsi,rdi
   14002465a:	movzx  ebx,WORD PTR [rsi+rdi*1]
   14002465e:	lea    eax,[rbx-0x41]
   140024661:	cmp    ax,0x19
   140024665:	ja     0x14002466b
   140024667:	add    bx,0x20
   14002466b:	movzx  ecx,WORD PTR [rdi]
   14002466e:	lea    eax,[rcx-0x41]
   140024671:	cmp    ax,0x19
   140024675:	ja     0x14002467b
   140024677:	add    cx,0x20
   14002467b:	add    rdi,0x2
   14002467f:	test   bx,bx
   140024682:	je     0x1400246bd
   140024684:	cmp    bx,cx
   140024687:	je     0x14002465a
   140024689:	jmp    0x1400246bd
   14002468b:	movzx  ecx,WORD PTR [rsi]
   14002468e:	lea    rdx,[rsp+0x20]
   140024693:	call   0x140025078
   140024698:	movzx  ecx,WORD PTR [rdi]
   14002469b:	lea    rdx,[rsp+0x20]
   1400246a0:	movzx  ebx,ax
   1400246a3:	lea    rsi,[rsi+0x2]
   1400246a7:	call   0x140025078
   1400246ac:	lea    rdi,[rdi+0x2]
   1400246b0:	movzx  ecx,ax
   1400246b3:	test   bx,bx
   1400246b6:	je     0x1400246bd
   1400246b8:	cmp    bx,ax
   1400246bb:	je     0x14002468b
   1400246bd:	movzx  ecx,cx
   1400246c0:	movzx  eax,bx
   1400246c3:	sub    eax,ecx
   1400246c5:	cmp    BYTE PTR [rsp+0x38],bpl
   1400246ca:	je     0x1400246d8
   1400246cc:	mov    rcx,QWORD PTR [rsp+0x30]
   1400246d1:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   1400246d8:	mov    rbx,QWORD PTR [rsp+0x50]
   1400246dd:	mov    rbp,QWORD PTR [rsp+0x58]
   1400246e2:	mov    rsi,QWORD PTR [rsp+0x60]
   1400246e7:	add    rsp,0x40
   1400246eb:	pop    rdi
   1400246ec:	ret    
   1400246ed:	int3   
   1400246ee:	int3   
   1400246ef:	int3   
   1400246f0:	sub    rsp,0x28
   1400246f4:	xor    r9d,r9d
   1400246f7:	mov    r11,r8
   1400246fa:	mov    r10,rcx
   1400246fd:	cmp    DWORD PTR [rip+0x1491c],r9d        # 0x140039020
   140024704:	jne    0x14002477e
   140024706:	test   r8,r8
   140024709:	je     0x140024776
   14002470b:	test   rcx,rcx
   14002470e:	jne    0x14002472a
   140024710:	call   0x1400095b8
   140024715:	mov    DWORD PTR [rax],0x16
   14002471b:	call   0x140008628
   140024720:	mov    eax,0x7fffffff
   140024725:	add    rsp,0x28
   140024729:	ret    
   14002472a:	test   rdx,rdx
   14002472d:	je     0x140024710
   14002472f:	sub    r10,rdx
   140024732:	movzx  ecx,WORD PTR [r10+rdx*1]
   140024737:	lea    eax,[rcx-0x41]
   14002473a:	cmp    ax,0x19
   14002473e:	ja     0x140024744
   140024740:	add    cx,0x20
   140024744:	movzx  r8d,WORD PTR [rdx]
   140024748:	lea    eax,[r8-0x41]
   14002474c:	cmp    ax,0x19
   140024750:	ja     0x140024757
   140024752:	add    r8w,0x20
   140024757:	add    rdx,0x2
   14002475b:	dec    r11
   14002475e:	je     0x14002476b
   140024760:	test   cx,cx
   140024763:	je     0x14002476b
   140024765:	cmp    cx,r8w
   140024769:	je     0x140024732
   14002476b:	movzx  eax,r8w
   14002476f:	movzx  r9d,cx
   140024773:	sub    r9d,eax
   140024776:	mov    eax,r9d
   140024779:	add    rsp,0x28
   14002477d:	ret    
   14002477e:	add    rsp,0x28
   140024782:	jmp    0x140024788
   140024787:	int3   
   140024788:	mov    rax,rsp
   14002478b:	mov    QWORD PTR [rax+0x8],rbx
   14002478f:	mov    QWORD PTR [rax+0x10],rbp
   140024793:	mov    QWORD PTR [rax+0x18],rsi
   140024797:	mov    QWORD PTR [rax+0x20],rdi
   14002479b:	push   r14
   14002479d:	sub    rsp,0x40
   1400247a1:	xor    r14d,r14d
   1400247a4:	mov    rbp,r8
   1400247a7:	mov    rdi,rdx
   1400247aa:	mov    rsi,rcx
   1400247ad:	mov    eax,r14d
   1400247b0:	test   r8,r8
   1400247b3:	je     0x140024883
   1400247b9:	test   rcx,rcx
   1400247bc:	jne    0x1400247d8
   1400247be:	call   0x1400095b8
   1400247c3:	mov    DWORD PTR [rax],0x16
   1400247c9:	call   0x140008628
   1400247ce:	mov    eax,0x7fffffff
   1400247d3:	jmp    0x140024883
   1400247d8:	test   rdx,rdx
   1400247db:	je     0x1400247be
   1400247dd:	lea    rcx,[rsp+0x20]
   1400247e2:	mov    rdx,r9
   1400247e5:	call   0x14000a000
   1400247ea:	mov    rax,QWORD PTR [rsp+0x20]
   1400247ef:	cmp    QWORD PTR [rax+0x138],r14
   1400247f6:	jne    0x140024831
   1400247f8:	sub    rsi,rdi
   1400247fb:	movzx  ebx,WORD PTR [rsi+rdi*1]
   1400247ff:	lea    eax,[rbx-0x41]
   140024802:	cmp    ax,0x19
   140024806:	ja     0x14002480c
   140024808:	add    bx,0x20
   14002480c:	movzx  ecx,WORD PTR [rdi]
   14002480f:	lea    eax,[rcx-0x41]
   140024812:	cmp    ax,0x19
   140024816:	ja     0x14002481c
   140024818:	add    cx,0x20
   14002481c:	add    rdi,0x2
   140024820:	dec    rbp
   140024823:	je     0x140024868
   140024825:	test   bx,bx
   140024828:	je     0x140024868
   14002482a:	cmp    bx,cx
   14002482d:	je     0x1400247fb
   14002482f:	jmp    0x140024868
   140024831:	movzx  ecx,WORD PTR [rsi]
   140024834:	lea    rdx,[rsp+0x20]
   140024839:	call   0x140025078
   14002483e:	movzx  ecx,WORD PTR [rdi]
   140024841:	lea    rdx,[rsp+0x20]
   140024846:	movzx  ebx,ax
   140024849:	call   0x140025078
   14002484e:	lea    rsi,[rsi+0x2]
   140024852:	lea    rdi,[rdi+0x2]
   140024856:	movzx  ecx,ax
   140024859:	dec    rbp
   14002485c:	je     0x140024868
   14002485e:	test   bx,bx
   140024861:	je     0x140024868
   140024863:	cmp    bx,ax
   140024866:	je     0x140024831
   140024868:	movzx  ecx,cx
   14002486b:	movzx  eax,bx
   14002486e:	sub    eax,ecx
   140024870:	cmp    BYTE PTR [rsp+0x38],r14b
   140024875:	je     0x140024883
   140024877:	mov    rcx,QWORD PTR [rsp+0x30]
   14002487c:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140024883:	mov    rbx,QWORD PTR [rsp+0x50]
   140024888:	mov    rbp,QWORD PTR [rsp+0x58]
   14002488d:	mov    rsi,QWORD PTR [rsp+0x60]
   140024892:	mov    rdi,QWORD PTR [rsp+0x68]
   140024897:	add    rsp,0x40
   14002489b:	pop    r14
   14002489d:	ret    
   14002489e:	int3   
   14002489f:	int3   
   1400248a0:	mov    r11,rsp
   1400248a3:	mov    QWORD PTR [r11+0x20],rbx
   1400248a7:	push   rbp
   1400248a8:	push   rsi
   1400248a9:	push   rdi
   1400248aa:	sub    rsp,0x70
   1400248ae:	mov    rax,QWORD PTR [rip+0x1218b]        # 0x140036a40
   1400248b5:	xor    rax,rsp
   1400248b8:	mov    QWORD PTR [rsp+0x60],rax
   1400248bd:	mov    QWORD PTR [r11-0x50],r8
   1400248c1:	xor    ebx,ebx
   1400248c3:	mov    rbp,rdx
   1400248c6:	and    DWORD PTR [rsp+0x30],ebx
   1400248ca:	and    DWORD PTR [rsp+0x28],ebx
   1400248ce:	and    DWORD PTR [rsp+0x20],ebx
   1400248d2:	mov    r8,rdx
   1400248d5:	mov    rdi,rcx
   1400248d8:	lea    rdx,[r11-0x40]
   1400248dc:	lea    rcx,[r11-0x38]
   1400248e0:	xor    r9d,r9d
   1400248e3:	call   0x14001fa34
   1400248e8:	mov    esi,eax
   1400248ea:	test   al,0x4
   1400248ec:	je     0x1400248ff
   1400248ee:	and    DWORD PTR [rsp+0x40],0x0
   1400248f3:	and    DWORD PTR [rsp+0x44],0x0
   1400248f8:	mov    ebx,0x200
   1400248fd:	jmp    0x14002492d
   1400248ff:	lea    rdx,[rsp+0x40]
   140024904:	lea    rcx,[rsp+0x50]
   140024909:	call   0x14001e624
   14002490e:	test   sil,0x2
   140024912:	jne    0x140024919
   140024914:	cmp    eax,0x1
   140024917:	jne    0x14002491e
   140024919:	mov    ebx,0x80
   14002491e:	test   sil,0x1
   140024922:	jne    0x140024929
   140024924:	cmp    eax,0x2
   140024927:	jne    0x14002492d
   140024929:	bts    ebx,0x8
   14002492d:	mov    ecx,DWORD PTR [rsp+0x48]
   140024931:	mov    DWORD PTR [rdi],ebx
   140024933:	mov    rax,rdi
   140024936:	sub    ecx,ebp
   140024938:	mov    DWORD PTR [rdi+0x4],ecx
   14002493b:	mov    rcx,QWORD PTR [rsp+0x40]
   140024940:	mov    QWORD PTR [rdi+0x10],rcx
   140024944:	mov    rcx,QWORD PTR [rsp+0x60]
   140024949:	xor    rcx,rsp
   14002494c:	call   0x14000d0a0
   140024951:	mov    rbx,QWORD PTR [rsp+0xa8]
   140024959:	add    rsp,0x70
   14002495d:	pop    rdi
   14002495e:	pop    rsi
   14002495f:	pop    rbp
   140024960:	ret    
   140024961:	int3   
   140024962:	int3   
   140024963:	int3   
   140024964:	int3   
   140024965:	int3   
   140024966:	int3   
   140024967:	int3   
   140024968:	int3   
   140024969:	int3   
   14002496a:	int3   
   14002496b:	int3   
   14002496c:	int3   
   14002496d:	int3   
   14002496e:	int3   
   14002496f:	int3   
   140024970:	mov    QWORD PTR [rsp+0x18],rbx
   140024975:	mov    QWORD PTR [rsp+0x8],rcx
   14002497a:	push   rbp
   14002497b:	push   rsi
   14002497c:	push   rdi
   14002497d:	push   r12
   14002497f:	push   r13
   140024981:	push   r14
   140024983:	push   r15
   140024985:	sub    rsp,0x20
   140024989:	mov    ebp,r9d
   14002498c:	mov    r14d,r8d
   14002498f:	mov    r15,rdx
   140024992:	test   rdx,rdx
   140024995:	je     0x14002499a
   140024997:	mov    QWORD PTR [rdx],rcx
   14002499a:	test   rcx,rcx
   14002499d:	jne    0x1400249b6
   14002499f:	call   0x1400095b8
   1400249a4:	mov    DWORD PTR [rax],0x16
   1400249aa:	call   0x140008628
   1400249af:	xor    eax,eax
   1400249b1:	jmp    0x140024b43
   1400249b6:	test   r8d,r8d
   1400249b9:	je     0x1400249c4
   1400249bb:	lea    eax,[r8-0x2]
   1400249bf:	cmp    eax,0x22
   1400249c2:	ja     0x14002499f
   1400249c4:	movzx  esi,WORD PTR [rcx]
   1400249c7:	xor    edi,edi
   1400249c9:	lea    rbx,[rcx+0x2]
   1400249cd:	lea    r13d,[rdi+0x8]
   1400249d1:	jmp    0x1400249da
   1400249d3:	movzx  esi,WORD PTR [rbx]
   1400249d6:	add    rbx,0x2
   1400249da:	mov    edx,r13d
   1400249dd:	movzx  ecx,si
   1400249e0:	call   0x140023bc8
   1400249e5:	test   eax,eax
   1400249e7:	jne    0x1400249d3
   1400249e9:	cmp    si,0x2d
   1400249ed:	jne    0x1400249f4
   1400249ef:	or     ebp,0x2
   1400249f2:	jmp    0x1400249fa
   1400249f4:	cmp    si,0x2b
   1400249f8:	jne    0x140024a01
   1400249fa:	movzx  esi,WORD PTR [rbx]
   1400249fd:	add    rbx,0x2
   140024a01:	mov    r13d,0xffdf
   140024a07:	test   r14d,r14d
   140024a0a:	jne    0x140024a3b
   140024a0c:	movzx  ecx,si
   140024a0f:	call   0x14002514c
   140024a14:	test   eax,eax
   140024a16:	je     0x140024a20
   140024a18:	mov    r14d,0xa
   140024a1e:	jmp    0x140024a62
   140024a20:	movzx  eax,WORD PTR [rbx]
   140024a23:	sub    ax,0x58
   140024a27:	test   r13w,ax
   140024a2b:	je     0x140024a35
   140024a2d:	mov    r14d,0x8
   140024a33:	jmp    0x140024a62
   140024a35:	mov    r14d,0x10
   140024a3b:	cmp    r14d,0x10
   140024a3f:	jne    0x140024a62
   140024a41:	movzx  ecx,si
   140024a44:	call   0x14002514c
   140024a49:	test   eax,eax
   140024a4b:	jne    0x140024a62
   140024a4d:	movzx  eax,WORD PTR [rbx]
   140024a50:	sub    ax,0x58
   140024a54:	test   r13w,ax
   140024a58:	jne    0x140024a62
   140024a5a:	movzx  esi,WORD PTR [rbx+0x2]
   140024a5e:	add    rbx,0x4
   140024a62:	xor    edx,edx
   140024a64:	or     eax,0xffffffff
   140024a67:	div    r14d
   140024a6a:	mov    r13d,eax
   140024a6d:	mov    r12d,edx
   140024a70:	movzx  ecx,si
   140024a73:	call   0x14002514c
   140024a78:	cmp    eax,0xffffffff
   140024a7b:	jne    0x140024aa1
   140024a7d:	lea    ecx,[rsi-0x41]
   140024a80:	cmp    cx,0x19
   140024a84:	jbe    0x140024a8f
   140024a86:	lea    eax,[rsi-0x61]
   140024a89:	cmp    ax,0x19
   140024a8d:	ja     0x140024abd
   140024a8f:	lea    eax,[rsi-0x61]
   140024a92:	cmp    ax,0x19
   140024a96:	movzx  eax,si
   140024a99:	ja     0x140024a9e
   140024a9b:	sub    eax,0x20
   140024a9e:	add    eax,0xffffffc9
   140024aa1:	cmp    eax,r14d
   140024aa4:	jae    0x140024abd
   140024aa6:	or     ebp,0x8
   140024aa9:	cmp    edi,r13d
   140024aac:	jb     0x140024ad7
   140024aae:	jne    0x140024ab5
   140024ab0:	cmp    eax,r12d
   140024ab3:	jbe    0x140024ad7
   140024ab5:	or     ebp,0x4
   140024ab8:	test   r15,r15
   140024abb:	jne    0x140024add
   140024abd:	mov    r12,QWORD PTR [rsp+0x60]
   140024ac2:	sub    rbx,0x2
   140024ac6:	test   bpl,0x8
   140024aca:	jne    0x140024ae6
   140024acc:	test   r15,r15
   140024acf:	cmovne rbx,r12
   140024ad3:	xor    edi,edi
   140024ad5:	jmp    0x140024b31
   140024ad7:	imul   edi,r14d
   140024adb:	add    edi,eax
   140024add:	movzx  esi,WORD PTR [rbx]
   140024ae0:	add    rbx,0x2
   140024ae4:	jmp    0x140024a70
   140024ae6:	mov    esi,0x7fffffff
   140024aeb:	test   bpl,0x4
   140024aef:	jne    0x140024b0e
   140024af1:	test   bpl,0x1
   140024af5:	jne    0x140024b31
   140024af7:	mov    eax,ebp
   140024af9:	and    eax,0x2
   140024afc:	je     0x140024b06
   140024afe:	cmp    edi,0x80000000
   140024b04:	ja     0x140024b0e
   140024b06:	test   eax,eax
   140024b08:	jne    0x140024b31
   140024b0a:	cmp    edi,esi
   140024b0c:	jbe    0x140024b31
   140024b0e:	call   0x1400095b8
   140024b13:	mov    DWORD PTR [rax],0x22
   140024b19:	test   bpl,0x1
   140024b1d:	je     0x140024b24
   140024b1f:	or     edi,0xffffffff
   140024b22:	jmp    0x140024b31
   140024b24:	mov    al,bpl
   140024b27:	and    al,0x2
   140024b29:	neg    al
   140024b2b:	sbb    edi,edi
   140024b2d:	neg    edi
   140024b2f:	add    edi,esi
   140024b31:	test   r15,r15
   140024b34:	je     0x140024b39
   140024b36:	mov    QWORD PTR [r15],rbx
   140024b39:	test   bpl,0x2
   140024b3d:	je     0x140024b41
   140024b3f:	neg    edi
   140024b41:	mov    eax,edi
   140024b43:	mov    rbx,QWORD PTR [rsp+0x70]
   140024b48:	add    rsp,0x20
   140024b4c:	pop    r15
   140024b4e:	pop    r14
   140024b50:	pop    r13
   140024b52:	pop    r12
   140024b54:	pop    rdi
   140024b55:	pop    rsi
   140024b56:	pop    rbp
   140024b57:	ret    
   140024b58:	xor    r9d,r9d
   140024b5b:	jmp    0x140024970
   140024b60:	mov    r9d,0x1
   140024b66:	jmp    0x140024970
   140024b6b:	int3   
   140024b6c:	xor    r9d,r9d
   140024b6f:	jmp    0x140024970
   140024b74:	mov    r9d,0x1
   140024b7a:	jmp    0x140024970
   140024b7f:	int3   
   140024b80:	mov    QWORD PTR [rsp+0x8],rbx
   140024b85:	mov    QWORD PTR [rsp+0x10],rdx
   140024b8a:	push   rbp
   140024b8b:	push   rsi
   140024b8c:	push   rdi
   140024b8d:	push   r12
   140024b8f:	push   r13
   140024b91:	push   r14
   140024b93:	push   r15
   140024b95:	sub    rsp,0x40
   140024b99:	mov    r12,rdx
   140024b9c:	mov    rdx,rcx
   140024b9f:	lea    rcx,[rsp+0x20]
   140024ba4:	mov    r14d,r9d
   140024ba7:	mov    r15,r8
   140024baa:	call   0x14000a000
   140024baf:	test   r15,r15
   140024bb2:	je     0x140024bb7
   140024bb4:	mov    QWORD PTR [r15],r12
   140024bb7:	test   r12,r12
   140024bba:	je     0x140024bca
   140024bbc:	test   r14d,r14d
   140024bbf:	je     0x140024bdc
   140024bc1:	lea    eax,[r14-0x2]
   140024bc5:	cmp    eax,0x22
   140024bc8:	jbe    0x140024bdc
   140024bca:	call   0x1400095b8
   140024bcf:	mov    DWORD PTR [rax],0x16
   140024bd5:	call   0x140008628
   140024bda:	jmp    0x140024c37
   140024bdc:	movzx  esi,WORD PTR [r12]
   140024be1:	xor    edi,edi
   140024be3:	lea    rbx,[r12+0x2]
   140024be8:	lea    ebp,[rdi+0x8]
   140024beb:	jmp    0x140024bf4
   140024bed:	movzx  esi,WORD PTR [rbx]
   140024bf0:	add    rbx,0x2
   140024bf4:	mov    edx,ebp
   140024bf6:	movzx  ecx,si
   140024bf9:	call   0x140023bc8
   140024bfe:	test   eax,eax
   140024c00:	jne    0x140024bed
   140024c02:	mov    ebp,DWORD PTR [rsp+0xa0]
   140024c09:	cmp    si,0x2d
   140024c0d:	jne    0x140024c14
   140024c0f:	or     ebp,0x2
   140024c12:	jmp    0x140024c1a
   140024c14:	cmp    si,0x2b
   140024c18:	jne    0x140024c21
   140024c1a:	movzx  esi,WORD PTR [rbx]
   140024c1d:	add    rbx,0x2
   140024c21:	test   r14d,r14d
   140024c24:	je     0x140024c3e
   140024c26:	lea    eax,[r14-0x2]
   140024c2a:	cmp    eax,0x22
   140024c2d:	jbe    0x140024c3e
   140024c2f:	test   r15,r15
   140024c32:	je     0x140024c37
   140024c34:	mov    QWORD PTR [r15],r12
   140024c37:	xor    edi,edi
   140024c39:	jmp    0x140024db7
   140024c3e:	mov    r13d,0xffdf
   140024c44:	test   r14d,r14d
   140024c47:	jne    0x140024c78
   140024c49:	movzx  ecx,si
   140024c4c:	call   0x14002514c
   140024c51:	test   eax,eax
   140024c53:	je     0x140024c5d
   140024c55:	mov    r14d,0xa
   140024c5b:	jmp    0x140024c9f
   140024c5d:	movzx  eax,WORD PTR [rbx]
   140024c60:	sub    ax,0x58
   140024c64:	test   r13w,ax
   140024c68:	je     0x140024c72
   140024c6a:	mov    r14d,0x8
   140024c70:	jmp    0x140024c9f
   140024c72:	mov    r14d,0x10
   140024c78:	cmp    r14d,0x10
   140024c7c:	jne    0x140024c9f
   140024c7e:	movzx  ecx,si
   140024c81:	call   0x14002514c
   140024c86:	test   eax,eax
   140024c88:	jne    0x140024c9f
   140024c8a:	movzx  eax,WORD PTR [rbx]
   140024c8d:	sub    ax,0x58
   140024c91:	test   r13w,ax
   140024c95:	jne    0x140024c9f
   140024c97:	movzx  esi,WORD PTR [rbx+0x2]
   140024c9b:	add    rbx,0x4
   140024c9f:	movsxd rcx,r14d
   140024ca2:	xor    edx,edx
   140024ca4:	or     rax,0xffffffffffffffff
   140024ca8:	div    rcx
   140024cab:	movsxd r12,r14d
   140024cae:	mov    QWORD PTR [rsp+0x90],rdx
   140024cb6:	mov    r13,rax
   140024cb9:	movzx  ecx,si
   140024cbc:	call   0x14002514c
   140024cc1:	mov    r8d,eax
   140024cc4:	cmp    eax,0xffffffff
   140024cc7:	jne    0x140024cf0
   140024cc9:	lea    ecx,[rsi-0x41]
   140024ccc:	cmp    cx,0x19
   140024cd0:	jbe    0x140024cdb
   140024cd2:	lea    eax,[rsi-0x61]
   140024cd5:	cmp    ax,0x19
   140024cd9:	ja     0x140024d14
   140024cdb:	lea    eax,[rsi-0x61]
   140024cde:	movzx  r8d,si
   140024ce2:	cmp    ax,0x19
   140024ce6:	ja     0x140024cec
   140024ce8:	sub    r8d,0x20
   140024cec:	add    r8d,0xffffffc9
   140024cf0:	cmp    r8d,r14d
   140024cf3:	jae    0x140024d14
   140024cf5:	or     ebp,0x8
   140024cf8:	cmp    rdi,r13
   140024cfb:	jb     0x140024d31
   140024cfd:	jne    0x140024d0c
   140024cff:	mov    eax,r8d
   140024d02:	cmp    rax,QWORD PTR [rsp+0x90]
   140024d0a:	jbe    0x140024d31
   140024d0c:	or     ebp,0x4
   140024d0f:	test   r15,r15
   140024d12:	jne    0x140024d3e
   140024d14:	mov    r12,QWORD PTR [rsp+0x88]
   140024d1c:	sub    rbx,0x2
   140024d20:	test   bpl,0x8
   140024d24:	jne    0x140024d4a
   140024d26:	test   r15,r15
   140024d29:	cmovne rbx,r12
   140024d2d:	xor    edi,edi
   140024d2f:	jmp    0x140024da6
   140024d31:	mov    rcx,r12
   140024d34:	imul   rcx,rdi
   140024d38:	mov    edi,r8d
   140024d3b:	add    rdi,rcx
   140024d3e:	movzx  esi,WORD PTR [rbx]
   140024d41:	add    rbx,0x2
   140024d45:	jmp    0x140024cb9
   140024d4a:	movabs rsi,0x7fffffffffffffff
   140024d54:	test   bpl,0x4
   140024d58:	jne    0x140024d7f
   140024d5a:	test   bpl,0x1
   140024d5e:	jne    0x140024da6
   140024d60:	mov    eax,ebp
   140024d62:	and    eax,0x2
   140024d65:	je     0x140024d76
   140024d67:	movabs rcx,0x8000000000000000
   140024d71:	cmp    rdi,rcx
   140024d74:	ja     0x140024d7f
   140024d76:	test   eax,eax
   140024d78:	jne    0x140024da6
   140024d7a:	cmp    rdi,rsi
   140024d7d:	jbe    0x140024da6
   140024d7f:	call   0x1400095b8
   140024d84:	mov    DWORD PTR [rax],0x22
   140024d8a:	test   bpl,0x1
   140024d8e:	je     0x140024d96
   140024d90:	or     rdi,0xffffffffffffffff
   140024d94:	jmp    0x140024da6
   140024d96:	mov    al,bpl
   140024d99:	and    al,0x2
   140024d9b:	neg    al
   140024d9d:	sbb    rdi,rdi
   140024da0:	neg    rdi
   140024da3:	add    rdi,rsi
   140024da6:	test   r15,r15
   140024da9:	je     0x140024dae
   140024dab:	mov    QWORD PTR [r15],rbx
   140024dae:	test   bpl,0x2
   140024db2:	je     0x140024db7
   140024db4:	neg    rdi
   140024db7:	cmp    BYTE PTR [rsp+0x38],0x0
   140024dbc:	je     0x140024dca
   140024dbe:	mov    rcx,QWORD PTR [rsp+0x30]
   140024dc3:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140024dca:	mov    rax,rdi
   140024dcd:	mov    rbx,QWORD PTR [rsp+0x80]
   140024dd5:	add    rsp,0x40
   140024dd9:	pop    r15
   140024ddb:	pop    r14
   140024ddd:	pop    r13
   140024ddf:	pop    r12
   140024de1:	pop    rdi
   140024de2:	pop    rsi
   140024de3:	pop    rbp
   140024de4:	ret    
   140024de5:	int3   
   140024de6:	int3   
   140024de7:	int3   
   140024de8:	mov    rax,rsp
   140024deb:	mov    QWORD PTR [rax+0x8],rbx
   140024def:	mov    QWORD PTR [rax+0x10],rbp
   140024df3:	push   rsi
   140024df4:	push   rdi
   140024df5:	push   r14
   140024df7:	sub    rsp,0x50
   140024dfb:	and    QWORD PTR [rax-0x30],0x0
   140024e00:	and    QWORD PTR [rax-0x38],0x0
   140024e05:	and    DWORD PTR [rax-0x40],0x0
   140024e09:	and    QWORD PTR [rax-0x48],0x0
   140024e0e:	mov    r14,r8
   140024e11:	mov    rdi,rdx
   140024e14:	mov    r8,rcx
   140024e17:	mov    rsi,rcx
   140024e1a:	or     r9d,0xffffffff
   140024e1e:	xor    ecx,ecx
   140024e20:	xor    edx,edx
   140024e22:	call   QWORD PTR [rip+0x2288]        # 0x1400270b0
   140024e28:	movsxd rbp,eax
   140024e2b:	test   eax,eax
   140024e2d:	jne    0x140024e44
   140024e2f:	call   QWORD PTR [rip+0x224b]        # 0x140027080
   140024e35:	mov    ecx,eax
   140024e37:	call   0x140009568
   140024e3c:	xorps  xmm0,xmm0
   140024e3f:	jmp    0x140024ee3
   140024e44:	mov    rcx,rbp
   140024e47:	call   0x140007f54
   140024e4c:	mov    rbx,rax
   140024e4f:	test   rax,rax
   140024e52:	je     0x140024e3c
   140024e54:	and    QWORD PTR [rsp+0x38],0x0
   140024e5a:	and    QWORD PTR [rsp+0x30],0x0
   140024e60:	or     r9d,0xffffffff
   140024e64:	mov    r8,rsi
   140024e67:	xor    edx,edx
   140024e69:	xor    ecx,ecx
   140024e6b:	mov    DWORD PTR [rsp+0x28],ebp
   140024e6f:	mov    QWORD PTR [rsp+0x20],rax
   140024e74:	call   QWORD PTR [rip+0x2236]        # 0x1400270b0
   140024e7a:	test   eax,eax
   140024e7c:	jne    0x140024e95
   140024e7e:	call   QWORD PTR [rip+0x21fc]        # 0x140027080
   140024e84:	mov    ecx,eax
   140024e86:	call   0x140009568
   140024e8b:	mov    rcx,rbx
   140024e8e:	call   0x140006444
   140024e93:	jmp    0x140024e3c
   140024e95:	and    QWORD PTR [rsp+0x40],0x0
   140024e9b:	lea    r9,[rsp+0x40]
   140024ea0:	lea    rcx,[rsp+0x88]
   140024ea8:	mov    r8,r14
   140024eab:	mov    rdx,rbx
   140024eae:	call   0x140019600
   140024eb3:	test   rdi,rdi
   140024eb6:	je     0x140024ed2
   140024eb8:	mov    rax,QWORD PTR [rsp+0x40]
   140024ebd:	test   rax,rax
   140024ec0:	je     0x140024ece
   140024ec2:	sub    rax,rbx
   140024ec5:	lea    rax,[rsi+rax*2]
   140024ec9:	mov    QWORD PTR [rdi],rax
   140024ecc:	jmp    0x140024ed2
   140024ece:	and    QWORD PTR [rdi],0x0
   140024ed2:	mov    rcx,rbx
   140024ed5:	call   0x140006444
   140024eda:	movss  xmm0,DWORD PTR [rsp+0x88]
   140024ee3:	mov    rbx,QWORD PTR [rsp+0x70]
   140024ee8:	mov    rbp,QWORD PTR [rsp+0x78]
   140024eed:	add    rsp,0x50
   140024ef1:	pop    r14
   140024ef3:	pop    rdi
   140024ef4:	pop    rsi
   140024ef5:	ret    
   140024ef6:	int3   
   140024ef7:	int3   
   140024ef8:	sub    rsp,0x38
   140024efc:	xor    eax,eax
   140024efe:	mov    r9d,r8d
   140024f01:	mov    r8,rdx
   140024f04:	cmp    DWORD PTR [rip+0x14116],eax        # 0x140039020
   140024f0a:	mov    DWORD PTR [rsp+0x20],eax
   140024f0e:	mov    rdx,rcx
   140024f11:	jne    0x140024f1c
   140024f13:	lea    rcx,[rip+0x11fce]        # 0x140036ee8
   140024f1a:	jmp    0x140024f1e
   140024f1c:	xor    ecx,ecx
   140024f1e:	call   0x140024b80
   140024f23:	add    rsp,0x38
   140024f27:	ret    
   140024f28:	sub    rsp,0x38
   140024f2c:	and    DWORD PTR [rsp+0x20],0x0
   140024f31:	mov    rax,r9
   140024f34:	mov    r9d,r8d
   140024f37:	mov    r8,rdx
   140024f3a:	mov    rdx,rcx
   140024f3d:	mov    rcx,rax
   140024f40:	call   0x140024b80
   140024f45:	add    rsp,0x38
   140024f49:	ret    
   140024f4a:	int3   
   140024f4b:	int3   
   140024f4c:	sub    rsp,0x38
   140024f50:	and    DWORD PTR [rsp+0x20],0x0
   140024f55:	mov    rax,r9
   140024f58:	mov    r9d,r8d
   140024f5b:	mov    r8,rdx
   140024f5e:	mov    rdx,rcx
   140024f61:	mov    rcx,rax
   140024f64:	call   0x140024b80
   140024f69:	add    rsp,0x38
   140024f6d:	ret    
   140024f6e:	int3   
   140024f6f:	int3   
   140024f70:	jmp    0x1400252e4
   140024f75:	int3   
   140024f76:	int3   
   140024f77:	int3   
   140024f78:	sub    rsp,0x38
   140024f7c:	and    DWORD PTR [rsp+0x20],0x0
   140024f81:	mov    rax,r9
   140024f84:	mov    r9d,r8d
   140024f87:	mov    r8,rdx
   140024f8a:	mov    rdx,rcx
   140024f8d:	mov    rcx,rax
   140024f90:	call   0x140024b80
   140024f95:	add    rsp,0x38
   140024f99:	ret    
   140024f9a:	int3   
   140024f9b:	int3   
   140024f9c:	sub    rsp,0x38
   140024fa0:	cmp    DWORD PTR [rip+0x14079],0x0        # 0x140039020
   140024fa7:	mov    r9d,r8d
   140024faa:	mov    r8,rdx
   140024fad:	mov    rdx,rcx
   140024fb0:	mov    DWORD PTR [rsp+0x20],0x1
   140024fb8:	jne    0x140024fc3
   140024fba:	lea    rcx,[rip+0x11f27]        # 0x140036ee8
   140024fc1:	jmp    0x140024fc5
   140024fc3:	xor    ecx,ecx
   140024fc5:	call   0x140024b80
   140024fca:	add    rsp,0x38
   140024fce:	ret    
   140024fcf:	int3   
   140024fd0:	sub    rsp,0x38
   140024fd4:	mov    rax,r9
   140024fd7:	mov    r9d,r8d
   140024fda:	mov    r8,rdx
   140024fdd:	mov    rdx,rcx
   140024fe0:	mov    rcx,rax
   140024fe3:	mov    DWORD PTR [rsp+0x20],0x1
   140024feb:	call   0x140024b80
   140024ff0:	add    rsp,0x38
   140024ff4:	ret    
   140024ff5:	int3   
   140024ff6:	int3   
   140024ff7:	int3   
   140024ff8:	sub    rsp,0x38
   140024ffc:	mov    rax,r9
   140024fff:	mov    r9d,r8d
   140025002:	mov    r8,rdx
   140025005:	mov    rdx,rcx
   140025008:	mov    rcx,rax
   14002500b:	mov    DWORD PTR [rsp+0x20],0x1
   140025013:	call   0x140024b80
   140025018:	add    rsp,0x38
   14002501c:	ret    
   14002501d:	int3   
   14002501e:	int3   
   14002501f:	int3   
   140025020:	sub    rsp,0x38
   140025024:	mov    rax,r9
   140025027:	mov    r9d,r8d
   14002502a:	mov    r8,rdx
   14002502d:	mov    rdx,rcx
   140025030:	mov    rcx,rax
   140025033:	mov    DWORD PTR [rsp+0x20],0x1
   14002503b:	call   0x140024b80
   140025040:	add    rsp,0x38
   140025044:	ret    
   140025045:	int3   
   140025046:	int3   
   140025047:	int3   
   140025048:	xor    r8d,r8d
   14002504b:	jmp    0x140024de8
   140025050:	jmp    0x140024ef8
   140025055:	int3   
   140025056:	int3   
   140025057:	int3   
   140025058:	jmp    0x140025414
   14002505d:	int3   
   14002505e:	int3   
   14002505f:	int3   
   140025060:	jmp    0x140024ef8
   140025065:	int3   
   140025066:	int3   
   140025067:	int3   
   140025068:	jmp    0x140024f9c
   14002506d:	int3   
   14002506e:	int3   
   14002506f:	int3   
   140025070:	jmp    0x140024f9c
   140025075:	int3   
   140025076:	int3   
   140025077:	int3   
   140025078:	mov    QWORD PTR [rsp+0x10],rbx
   14002507d:	mov    WORD PTR [rsp+0x8],cx
   140025082:	push   rbp
   140025083:	mov    rbp,rsp
   140025086:	sub    rsp,0x50
   14002508a:	mov    eax,0xffff
   14002508f:	cmp    cx,ax
   140025092:	je     0x140025137
   140025098:	lea    rcx,[rbp-0x20]
   14002509c:	call   0x14000a000
   1400250a1:	mov    rbx,QWORD PTR [rbp-0x20]
   1400250a5:	mov    rax,QWORD PTR [rbx+0x138]
   1400250ac:	test   rax,rax
   1400250af:	jne    0x1400250c4
   1400250b1:	movzx  edx,WORD PTR [rbp+0x10]
   1400250b5:	lea    eax,[rdx-0x41]
   1400250b8:	cmp    ax,0x19
   1400250bc:	ja     0x140025123
   1400250be:	add    dx,0x20
   1400250c2:	jmp    0x140025123
   1400250c4:	movzx  ecx,WORD PTR [rbp+0x10]
   1400250c8:	mov    edx,0x100
   1400250cd:	cmp    cx,dx
   1400250d0:	jae    0x1400250f7
   1400250d2:	mov    edx,0x1
   1400250d7:	call   0x140023bc8
   1400250dc:	test   eax,eax
   1400250de:	jne    0x1400250e6
   1400250e0:	movzx  edx,WORD PTR [rbp+0x10]
   1400250e4:	jmp    0x140025123
   1400250e6:	movzx  ecx,WORD PTR [rbp+0x10]
   1400250ea:	mov    rax,QWORD PTR [rbx+0x110]
   1400250f1:	movzx  edx,BYTE PTR [rax+rcx*1]
   1400250f5:	jmp    0x140025123
   1400250f7:	lea    rcx,[rbp+0x20]
   1400250fb:	mov    r9d,0x1
   140025101:	lea    r8,[rbp+0x10]
   140025105:	mov    DWORD PTR [rsp+0x28],r9d
   14002510a:	mov    QWORD PTR [rsp+0x20],rcx
   14002510f:	mov    rcx,rax
   140025112:	call   0x14002541c
   140025117:	movzx  edx,WORD PTR [rbp+0x10]
   14002511b:	test   eax,eax
   14002511d:	je     0x140025123
   14002511f:	movzx  edx,WORD PTR [rbp+0x20]
   140025123:	cmp    BYTE PTR [rbp-0x8],0x0
   140025127:	je     0x140025134
   140025129:	mov    rcx,QWORD PTR [rbp-0x10]
   14002512d:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140025134:	movzx  eax,dx
   140025137:	mov    rbx,QWORD PTR [rsp+0x68]
   14002513c:	add    rsp,0x50
   140025140:	pop    rbp
   140025141:	ret    
   140025142:	int3   
   140025143:	int3   
   140025144:	xor    edx,edx
   140025146:	jmp    0x140025078
   14002514b:	int3   
   14002514c:	mov    edx,0x30
   140025151:	cmp    cx,dx
   140025154:	jb     0x1400252dd
   14002515a:	cmp    cx,0x3a
   14002515e:	jae    0x140025166
   140025160:	movzx  eax,cx
   140025163:	sub    eax,edx
   140025165:	ret    
   140025166:	mov    edx,0xff10
   14002516b:	cmp    cx,dx
   14002516e:	jae    0x1400252cf
   140025174:	mov    edx,0x660
   140025179:	cmp    cx,dx
   14002517c:	jb     0x1400252dd
   140025182:	lea    eax,[rdx+0xa]
   140025185:	cmp    cx,ax
   140025188:	jb     0x140025160
   14002518a:	mov    edx,0x6f0
   14002518f:	cmp    cx,dx
   140025192:	jb     0x1400252dd
   140025198:	lea    eax,[rdx+0xa]
   14002519b:	cmp    cx,ax
   14002519e:	jb     0x140025160
   1400251a0:	mov    edx,0x966
   1400251a5:	cmp    cx,dx
   1400251a8:	jb     0x1400252dd
   1400251ae:	lea    eax,[rdx+0xa]
   1400251b1:	cmp    cx,ax
   1400251b4:	jb     0x140025160
   1400251b6:	lea    edx,[rax+0x76]
   1400251b9:	cmp    cx,dx
   1400251bc:	jb     0x1400252dd
   1400251c2:	lea    eax,[rdx+0xa]
   1400251c5:	cmp    cx,ax
   1400251c8:	jb     0x140025160
   1400251ca:	lea    edx,[rax+0x76]
   1400251cd:	cmp    cx,dx
   1400251d0:	jb     0x1400252dd
   1400251d6:	lea    eax,[rdx+0xa]
   1400251d9:	cmp    cx,ax
   1400251dc:	jb     0x140025160
   1400251de:	lea    edx,[rax+0x76]
   1400251e1:	cmp    cx,dx
   1400251e4:	jb     0x1400252dd
   1400251ea:	lea    eax,[rdx+0xa]
   1400251ed:	cmp    cx,ax
   1400251f0:	jb     0x140025160
   1400251f6:	lea    edx,[rax+0x76]
   1400251f9:	cmp    cx,dx
   1400251fc:	jb     0x1400252dd
   140025202:	lea    eax,[rdx+0xa]
   140025205:	cmp    cx,ax
   140025208:	jb     0x140025160
   14002520e:	mov    edx,0xc66
   140025213:	cmp    cx,dx
   140025216:	jb     0x1400252dd
   14002521c:	lea    eax,[rdx+0xa]
   14002521f:	cmp    cx,ax
   140025222:	jb     0x140025160
   140025228:	lea    edx,[rax+0x76]
   14002522b:	cmp    cx,dx
   14002522e:	jb     0x1400252dd
   140025234:	lea    eax,[rdx+0xa]
   140025237:	cmp    cx,ax
   14002523a:	jb     0x140025160
   140025240:	lea    edx,[rax+0x76]
   140025243:	cmp    cx,dx
   140025246:	jb     0x1400252dd
   14002524c:	lea    eax,[rdx+0xa]
   14002524f:	cmp    cx,ax
   140025252:	jb     0x140025160
   140025258:	mov    edx,0xe50
   14002525d:	cmp    cx,dx
   140025260:	jb     0x1400252dd
   140025262:	lea    eax,[rdx+0xa]
   140025265:	cmp    cx,ax
   140025268:	jb     0x140025160
   14002526e:	lea    edx,[rax+0x76]
   140025271:	cmp    cx,dx
   140025274:	jb     0x1400252dd
   140025276:	lea    eax,[rdx+0xa]
   140025279:	cmp    cx,ax
   14002527c:	jb     0x140025160
   140025282:	lea    edx,[rax+0x46]
   140025285:	cmp    cx,dx
   140025288:	jb     0x1400252dd
   14002528a:	lea    eax,[rdx+0xa]
   14002528d:	cmp    cx,ax
   140025290:	jb     0x140025160
   140025296:	mov    edx,0x1040
   14002529b:	cmp    cx,dx
   14002529e:	jb     0x1400252dd
   1400252a0:	lea    eax,[rdx+0xa]
   1400252a3:	cmp    cx,ax
   1400252a6:	jb     0x140025160
   1400252ac:	mov    edx,0x17e0
   1400252b1:	cmp    cx,dx
   1400252b4:	jb     0x1400252dd
   1400252b6:	lea    eax,[rdx+0xa]
   1400252b9:	cmp    cx,ax
   1400252bc:	jb     0x140025160
   1400252c2:	lea    edx,[rax+0x26]
   1400252c5:	cmp    cx,dx
   1400252c8:	jb     0x1400252dd
   1400252ca:	lea    eax,[rdx+0xa]
   1400252cd:	jmp    0x1400252d4
   1400252cf:	mov    eax,0xff1a
   1400252d4:	cmp    cx,ax
   1400252d7:	jb     0x140025160
   1400252dd:	or     eax,0xffffffff
   1400252e0:	ret    
   1400252e1:	int3   
   1400252e2:	int3   
   1400252e3:	int3   
   1400252e4:	mov    QWORD PTR [rsp+0x18],rbx
   1400252e9:	mov    QWORD PTR [rsp+0x20],rsi
   1400252ee:	push   rdi
   1400252ef:	sub    rsp,0x70
   1400252f3:	movaps XMMWORD PTR [rsp+0x60],xmm6
   1400252f8:	mov    rax,QWORD PTR [rip+0x11741]        # 0x140036a40
   1400252ff:	xor    rax,rsp
   140025302:	mov    QWORD PTR [rsp+0x58],rax
   140025307:	mov    rsi,rcx
   14002530a:	mov    rdi,rcx
   14002530d:	mov    rbx,rdx
   140025310:	lea    rcx,[rsp+0x20]
   140025315:	mov    rdx,r8
   140025318:	call   0x14000a000
   14002531d:	test   rbx,rbx
   140025320:	je     0x140025325
   140025322:	mov    QWORD PTR [rbx],rdi
   140025325:	test   rsi,rsi
   140025328:	jne    0x140025342
   14002532a:	call   0x1400095b8
   14002532f:	mov    DWORD PTR [rax],0x16
   140025335:	call   0x140008628
   14002533a:	xorps  xmm6,xmm6
   14002533d:	jmp    0x1400253d9
   140025342:	movzx  ecx,WORD PTR [rsi]
   140025345:	jmp    0x14002534e
   140025347:	add    rdi,0x2
   14002534b:	movzx  ecx,WORD PTR [rdi]
   14002534e:	mov    edx,0x8
   140025353:	call   0x140023bc8
   140025358:	test   eax,eax
   14002535a:	jne    0x140025347
   14002535c:	lea    r8,[rsp+0x20]
   140025361:	lea    rcx,[rsp+0x40]
   140025366:	mov    rdx,rdi
   140025369:	call   0x140025468
   14002536e:	test   rbx,rbx
   140025371:	je     0x14002537e
   140025373:	movsxd rcx,DWORD PTR [rax+0x4]
   140025377:	lea    rdx,[rdi+rcx*2]
   14002537b:	mov    QWORD PTR [rbx],rdx
   14002537e:	test   DWORD PTR [rax],0x240
   140025384:	je     0x140025393
   140025386:	xorps  xmm6,xmm6
   140025389:	test   rbx,rbx
   14002538c:	je     0x1400253d9
   14002538e:	mov    QWORD PTR [rbx],rsi
   140025391:	jmp    0x1400253d9
   140025393:	test   BYTE PTR [rax],0x81
   140025396:	je     0x1400253af
   140025398:	cmp    WORD PTR [rdi],0x2d
   14002539c:	movsd  xmm6,QWORD PTR [rip+0x124ec]        # 0x140037890
   1400253a4:	jne    0x1400253c7
   1400253a6:	xorps  xmm6,XMMWORD PTR [rip+0x8ed3]        # 0x14002e280
   1400253ad:	jmp    0x1400253c7
   1400253af:	test   DWORD PTR [rax],0x100
   1400253b5:	je     0x1400253d4
   1400253b7:	movsd  xmm0,QWORD PTR [rax+0x10]
   1400253bc:	xorps  xmm6,xmm6
   1400253bf:	ucomisd xmm0,xmm6
   1400253c3:	jp     0x1400253d4
   1400253c5:	jne    0x1400253d4
   1400253c7:	call   0x1400095b8
   1400253cc:	mov    DWORD PTR [rax],0x22
   1400253d2:	jmp    0x1400253d9
   1400253d4:	movsd  xmm6,QWORD PTR [rax+0x10]
   1400253d9:	cmp    BYTE PTR [rsp+0x38],0x0
   1400253de:	je     0x1400253ec
   1400253e0:	mov    rax,QWORD PTR [rsp+0x30]
   1400253e5:	and    DWORD PTR [rax+0xc8],0xfffffffd
   1400253ec:	movaps xmm0,xmm6
   1400253ef:	mov    rcx,QWORD PTR [rsp+0x58]
   1400253f4:	xor    rcx,rsp
   1400253f7:	call   0x14000d0a0
   1400253fc:	lea    r11,[rsp+0x70]
   140025401:	mov    rbx,QWORD PTR [r11+0x20]
   140025405:	mov    rsi,QWORD PTR [r11+0x28]
   140025409:	movaps xmm6,XMMWORD PTR [rsp+0x60]
   14002540e:	mov    rsp,r11
   140025411:	pop    rdi
   140025412:	ret    
   140025413:	int3   
   140025414:	xor    r8d,r8d
   140025417:	jmp    0x1400252e4
   14002541c:	mov    QWORD PTR [rsp+0x8],rbx
   140025421:	mov    QWORD PTR [rsp+0x10],rsi
   140025426:	push   rdi
   140025427:	sub    rsp,0x30
   14002542b:	movsxd rax,r9d
   14002542e:	mov    rbx,r8
   140025431:	mov    edi,edx
   140025433:	mov    rsi,rcx
   140025436:	test   r9d,r9d
   140025439:	jle    0x140025446
   14002543b:	mov    rdx,rax
   14002543e:	mov    rcx,rbx
   140025441:	call   0x140019db0
   140025446:	mov    r8,rbx
   140025449:	mov    edx,edi
   14002544b:	mov    r9d,eax
   14002544e:	mov    rcx,rsi
   140025451:	mov    rbx,QWORD PTR [rsp+0x40]
   140025456:	mov    rsi,QWORD PTR [rsp+0x48]
   14002545b:	add    rsp,0x30
   14002545f:	pop    rdi
   140025460:	jmp    0x14000f5e8
   140025465:	int3   
   140025466:	int3   
   140025467:	int3   
   140025468:	mov    r11,rsp
   14002546b:	mov    QWORD PTR [r11+0x20],rbx
   14002546f:	push   rbp
   140025470:	push   rsi
   140025471:	push   rdi
   140025472:	sub    rsp,0x70
   140025476:	mov    rax,QWORD PTR [rip+0x115c3]        # 0x140036a40
   14002547d:	xor    rax,rsp
   140025480:	mov    QWORD PTR [rsp+0x60],rax
   140025485:	mov    QWORD PTR [r11-0x50],r8
   140025489:	xor    ebx,ebx
   14002548b:	mov    rbp,rdx
   14002548e:	and    DWORD PTR [rsp+0x30],ebx
   140025492:	and    DWORD PTR [rsp+0x28],ebx
   140025496:	and    DWORD PTR [rsp+0x20],ebx
   14002549a:	mov    r8,rdx
   14002549d:	mov    rdi,rcx
   1400254a0:	lea    rdx,[r11-0x40]
   1400254a4:	lea    rcx,[r11-0x38]
   1400254a8:	xor    r9d,r9d
   1400254ab:	call   0x1400255a8
   1400254b0:	mov    esi,eax
   1400254b2:	test   al,0x4
   1400254b4:	je     0x1400254c7
   1400254b6:	and    DWORD PTR [rsp+0x40],0x0
   1400254bb:	and    DWORD PTR [rsp+0x44],0x0
   1400254c0:	mov    ebx,0x200
   1400254c5:	jmp    0x1400254f5
   1400254c7:	lea    rdx,[rsp+0x40]
   1400254cc:	lea    rcx,[rsp+0x50]
   1400254d1:	call   0x14001e624
   1400254d6:	test   sil,0x2
   1400254da:	jne    0x1400254e1
   1400254dc:	cmp    eax,0x1
   1400254df:	jne    0x1400254e6
   1400254e1:	mov    ebx,0x80
   1400254e6:	test   sil,0x1
   1400254ea:	jne    0x1400254f1
   1400254ec:	cmp    eax,0x2
   1400254ef:	jne    0x1400254f5
   1400254f1:	bts    ebx,0x8
   1400254f5:	mov    rcx,QWORD PTR [rsp+0x48]
   1400254fa:	mov    DWORD PTR [rdi],ebx
   1400254fc:	mov    rax,rdi
   1400254ff:	sub    rcx,rbp
   140025502:	sar    rcx,1
   140025505:	mov    DWORD PTR [rdi+0x4],ecx
   140025508:	mov    rcx,QWORD PTR [rsp+0x40]
   14002550d:	mov    QWORD PTR [rdi+0x10],rcx
   140025511:	mov    rcx,QWORD PTR [rsp+0x60]
   140025516:	xor    rcx,rsp
   140025519:	call   0x14000d0a0
   14002551e:	mov    rbx,QWORD PTR [rsp+0xa8]
   140025526:	add    rsp,0x70
   14002552a:	pop    rdi
   14002552b:	pop    rsi
   14002552c:	pop    rbp
   14002552d:	ret    
   14002552e:	int3   
   14002552f:	int3   
   140025530:	mov    QWORD PTR [rsp+0x20],rbx
   140025535:	push   rdi
   140025536:	sub    rsp,0x60
   14002553a:	mov    rax,QWORD PTR [rip+0x114ff]        # 0x140036a40
   140025541:	xor    rax,rsp
   140025544:	mov    QWORD PTR [rsp+0x50],rax
   140025549:	mov    rax,QWORD PTR [rsp+0x90]
   140025551:	mov    rbx,rcx
   140025554:	lea    rcx,[rsp+0x40]
   140025559:	mov    QWORD PTR [rsp+0x38],rax
   14002555e:	xor    eax,eax
   140025560:	mov    DWORD PTR [rsp+0x30],eax
   140025564:	mov    DWORD PTR [rsp+0x28],eax
   140025568:	mov    DWORD PTR [rsp+0x20],eax
   14002556c:	call   0x1400255a8
   140025571:	lea    rcx,[rsp+0x40]
   140025576:	mov    rdx,rbx
   140025579:	mov    edi,eax
   14002557b:	call   0x14001f194
   140025580:	cmp    eax,0x1
   140025583:	jne    0x140025588
   140025585:	or     edi,0x2
   140025588:	mov    eax,edi
   14002558a:	mov    rcx,QWORD PTR [rsp+0x50]
   14002558f:	xor    rcx,rsp
   140025592:	call   0x14000d0a0
   140025597:	mov    rbx,QWORD PTR [rsp+0x88]
   14002559f:	add    rsp,0x60
   1400255a3:	pop    rdi
   1400255a4:	ret    
   1400255a5:	int3   
   1400255a6:	int3   
   1400255a7:	int3   
   1400255a8:	mov    QWORD PTR [rsp+0x18],rbx
   1400255ad:	push   rbp
   1400255ae:	push   rsi
   1400255af:	push   rdi
   1400255b0:	push   r12
   1400255b2:	push   r13
   1400255b4:	push   r14
   1400255b6:	push   r15
   1400255b8:	lea    rbp,[rsp-0x7]
   1400255bd:	sub    rsp,0xa0
   1400255c4:	mov    rax,QWORD PTR [rip+0x11475]        # 0x140036a40
   1400255cb:	xor    rax,rsp
   1400255ce:	mov    QWORD PTR [rbp-0x1],rax
   1400255d2:	mov    r15,QWORD PTR [rbp+0x7f]
   1400255d6:	xor    ebx,ebx
   1400255d8:	mov    DWORD PTR [rbp-0x6d],r9d
   1400255dc:	lea    r9d,[rbx+0x1]
   1400255e0:	mov    QWORD PTR [rbp-0x59],rcx
   1400255e4:	mov    QWORD PTR [rbp-0x69],rdx
   1400255e8:	lea    r10,[rbp-0x21]
   1400255ec:	mov    WORD PTR [rbp-0x71],bx
   1400255f0:	mov    r11d,ebx
   1400255f3:	mov    DWORD PTR [rbp-0x75],r9d
   1400255f7:	mov    r12d,ebx
   1400255fa:	mov    DWORD PTR [rbp-0x79],ebx
   1400255fd:	mov    r13d,ebx
   140025600:	mov    esi,ebx
   140025602:	mov    r14d,ebx
   140025605:	mov    ecx,ebx
   140025607:	test   r15,r15
   14002560a:	jne    0x140025623
   14002560c:	call   0x1400095b8
   140025611:	mov    DWORD PTR [rax],0x16
   140025617:	call   0x140008628
   14002561c:	xor    eax,eax
   14002561e:	jmp    0x140025efa
   140025623:	mov    rdi,r8
   140025626:	cmp    WORD PTR [r8],0x20
   14002562b:	ja     0x140025647
   14002562d:	movzx  eax,WORD PTR [r8]
   140025631:	movabs rdx,0x100002600
   14002563b:	bt     rdx,rax
   14002563f:	jae    0x140025647
   140025641:	add    r8,0x2
   140025645:	jmp    0x140025626
   140025647:	mov    eax,0x30
   14002564c:	movzx  edx,WORD PTR [r8]
   140025650:	add    r8,0x2
   140025654:	cmp    ecx,0x5
   140025657:	jg     0x14002594a
   14002565d:	je     0x140025927
   140025663:	mov    r9d,ecx
   140025666:	test   ecx,ecx
   140025668:	je     0x1400258b7
   14002566e:	dec    r9d
   140025671:	je     0x140025823
   140025677:	dec    r9d
   14002567a:	je     0x1400257c3
   140025680:	dec    r9d
   140025683:	je     0x140025722
   140025689:	dec    r9d
   14002568c:	jne    0x140025a87
   140025692:	mov    r9d,0x1
   140025698:	mov    r12d,r9d
   14002569b:	mov    DWORD PTR [rbp-0x79],r9d
   14002569f:	lea    eax,[r9+0x2f]
   1400256a3:	test   r11d,r11d
   1400256a6:	jne    0x1400256de
   1400256a8:	jmp    0x1400256b5
   1400256aa:	movzx  edx,WORD PTR [r8]
   1400256ae:	sub    r14d,r9d
   1400256b1:	add    r8,0x2
   1400256b5:	cmp    dx,ax
   1400256b8:	je     0x1400256aa
   1400256ba:	jmp    0x1400256de
   1400256bc:	cmp    dx,0x39
   1400256c0:	ja     0x1400256e3
   1400256c2:	cmp    r11d,0x19
   1400256c6:	jae    0x1400256d6
   1400256c8:	sub    dl,al
   1400256ca:	add    r11d,r9d
   1400256cd:	mov    BYTE PTR [r10],dl
   1400256d0:	add    r10,r9
   1400256d3:	sub    r14d,r9d
   1400256d6:	movzx  edx,WORD PTR [r8]
   1400256da:	add    r8,0x2
   1400256de:	cmp    dx,ax
   1400256e1:	jae    0x1400256bc
   1400256e3:	movzx  ecx,dx
   1400256e6:	lea    eax,[rcx-0x2b]
   1400256e9:	test   eax,0xfffffffd
   1400256ee:	je     0x140025714
   1400256f0:	cmp    ecx,0x43
   1400256f3:	jle    0x140025a95
   1400256f9:	cmp    ecx,0x45
   1400256fc:	jle    0x14002570a
   1400256fe:	lea    eax,[rcx-0x64]
   140025701:	cmp    eax,r9d
   140025704:	ja     0x140025a95
   14002570a:	mov    ecx,0x6
   14002570f:	jmp    0x140025647
   140025714:	sub    r8,0x2
   140025718:	mov    ecx,0xb
   14002571d:	jmp    0x140025647
   140025722:	mov    eax,0x1
   140025727:	mov    r12d,eax
   14002572a:	lea    r9d,[rax+0x2f]
   14002572e:	jmp    0x140025755
   140025730:	cmp    dx,0x39
   140025734:	ja     0x14002575b
   140025736:	cmp    r11d,0x19
   14002573a:	jae    0x14002574a
   14002573c:	sub    dl,r9b
   14002573f:	add    r11d,eax
   140025742:	mov    BYTE PTR [r10],dl
   140025745:	add    r10,rax
   140025748:	jmp    0x14002574d
   14002574a:	add    r14d,eax
   14002574d:	movzx  edx,WORD PTR [r8]
   140025751:	add    r8,0x2
   140025755:	cmp    dx,r9w
   140025759:	jae    0x140025730
   14002575b:	mov    rax,QWORD PTR [r15]
   14002575e:	movzx  r9d,dx
   140025762:	mov    rcx,QWORD PTR [rax+0xf0]
   140025769:	mov    rax,QWORD PTR [rcx]
   14002576c:	movsx  ecx,BYTE PTR [rax]
   14002576f:	cmp    r9d,ecx
   140025772:	jne    0x140025781
   140025774:	mov    ecx,0x4
   140025779:	mov    r9,r12
   14002577c:	jmp    0x140025647
   140025781:	lea    eax,[r9-0x2b]
   140025785:	test   eax,0xfffffffd
   14002578a:	je     0x1400257b8
   14002578c:	cmp    r9d,0x43
   140025790:	jle    0x1400257a8
   140025792:	cmp    r9d,0x45
   140025796:	jle    0x1400257b0
   140025798:	lea    eax,[r9-0x64]
   14002579c:	mov    r9,r12
   14002579f:	cmp    eax,r9d
   1400257a2:	jbe    0x14002570a
   1400257a8:	mov    r15,r12
   1400257ab:	jmp    0x140025af5
   1400257b0:	mov    r9,r12
   1400257b3:	jmp    0x14002570a
   1400257b8:	sub    r8,0x2
   1400257bc:	mov    ecx,0xb
   1400257c1:	jmp    0x140025779
   1400257c3:	lea    eax,[rdx-0x31]
   1400257c6:	mov    ecx,0x8
   1400257cb:	cmp    ax,cx
   1400257ce:	ja     0x1400257e9
   1400257d0:	mov    ecx,0x3
   1400257d5:	sub    r8,0x2
   1400257d9:	mov    eax,0x30
   1400257de:	mov    r9d,0x1
   1400257e4:	jmp    0x14002564c
   1400257e9:	mov    rax,QWORD PTR [r15]
   1400257ec:	mov    rcx,QWORD PTR [rax+0xf0]
   1400257f3:	mov    rax,QWORD PTR [rcx]
   1400257f6:	movsx  ecx,BYTE PTR [rax]
   1400257f9:	movzx  eax,dx
   1400257fc:	cmp    eax,ecx
   1400257fe:	jne    0x140025807
   140025800:	mov    ecx,0x5
   140025805:	jmp    0x1400257d9
   140025807:	mov    eax,0x30
   14002580c:	cmp    dx,ax
   14002580f:	jne    0x1400259ff
   140025815:	mov    r9d,0x1
   14002581b:	mov    ecx,r9d
   14002581e:	jmp    0x14002564c
   140025823:	mov    r9d,0x1
   140025829:	lea    eax,[rdx-0x31]
   14002582c:	lea    ecx,[r9+0x7]
   140025830:	mov    r12d,r9d
   140025833:	cmp    ax,cx
   140025836:	ja     0x140025845
   140025838:	lea    ecx,[r9+0x2]
   14002583c:	sub    r8,0x2
   140025840:	jmp    0x140025647
   140025845:	mov    rax,QWORD PTR [r15]
   140025848:	movzx  r9d,dx
   14002584c:	mov    rcx,QWORD PTR [rax+0xf0]
   140025853:	mov    rax,QWORD PTR [rcx]
   140025856:	movsx  ecx,BYTE PTR [rax]
   140025859:	cmp    r9d,ecx
   14002585c:	je     0x140025774
   140025862:	lea    eax,[r9-0x2b]
   140025866:	test   eax,0xfffffffd
   14002586b:	je     0x1400257b8
   140025871:	mov    eax,0x30
   140025876:	cmp    r9d,eax
   140025879:	je     0x1400258af
   14002587b:	cmp    r9d,0x43
   14002587f:	jle    0x1400257a8
   140025885:	cmp    r9d,0x45
   140025889:	jle    0x1400258aa
   14002588b:	lea    eax,[r9-0x64]
   14002588f:	mov    r9,r12
   140025892:	cmp    eax,r9d
   140025895:	ja     0x1400257a8
   14002589b:	mov    eax,0x30
   1400258a0:	mov    ecx,0x6
   1400258a5:	jmp    0x14002564c
   1400258aa:	mov    r9,r12
   1400258ad:	jmp    0x1400258a0
   1400258af:	mov    r9,r12
   1400258b2:	jmp    0x14002581b
   1400258b7:	lea    eax,[rdx-0x31]
   1400258ba:	mov    ecx,0x8
   1400258bf:	cmp    ax,cx
   1400258c2:	jbe    0x1400257d0
   1400258c8:	mov    rax,QWORD PTR [r15]
   1400258cb:	movzx  r9d,dx
   1400258cf:	mov    rcx,QWORD PTR [rax+0xf0]
   1400258d6:	mov    rax,QWORD PTR [rcx]
   1400258d9:	movsx  ecx,BYTE PTR [rax]
   1400258dc:	cmp    r9d,ecx
   1400258df:	je     0x140025800
   1400258e5:	cmp    r9d,0x2b
   1400258e9:	je     0x140025919
   1400258eb:	cmp    r9d,0x2d
   1400258ef:	je     0x140025908
   1400258f1:	mov    eax,0x30
   1400258f6:	cmp    r9d,eax
   1400258f9:	je     0x140025815
   1400258ff:	sub    r8,0x2
   140025903:	jmp    0x140025a02
   140025908:	mov    ecx,0x2
   14002590d:	mov    DWORD PTR [rbp-0x71],0x8000
   140025914:	jmp    0x1400257d9
   140025919:	mov    ecx,0x2
   14002591e:	mov    WORD PTR [rbp-0x71],bx
   140025922:	jmp    0x1400257d9
   140025927:	sub    dx,ax
   14002592a:	mov    ecx,0x9
   14002592f:	mov    DWORD PTR [rbp-0x79],r9d
   140025933:	cmp    dx,cx
   140025936:	ja     0x1400259ff
   14002593c:	mov    ecx,0x4
   140025941:	sub    r8,0x2
   140025945:	jmp    0x14002564c
   14002594a:	mov    r9d,ecx
   14002594d:	sub    r9d,0x6
   140025951:	je     0x140025a4f
   140025957:	dec    r9d
   14002595a:	je     0x1400259da
   14002595c:	dec    r9d
   14002595f:	je     0x1400259a2
   140025961:	dec    r9d
   140025964:	je     0x140025aa1
   14002596a:	cmp    r9d,0x2
   14002596e:	jne    0x140025a87
   140025974:	cmp    DWORD PTR [rbp+0x77],ebx
   140025977:	je     0x1400258ff
   140025979:	movzx  eax,dx
   14002597c:	lea    rdi,[r8-0x2]
   140025980:	cmp    eax,0x2b
   140025983:	je     0x140025998
   140025985:	cmp    eax,0x2d
   140025988:	jne    0x1400259ff
   14002598a:	or     DWORD PTR [rbp-0x75],0xffffffff
   14002598e:	mov    ecx,0x7
   140025993:	jmp    0x1400257d9
   140025998:	mov    ecx,0x7
   14002599d:	jmp    0x1400257d9
   1400259a2:	mov    r9d,0x1
   1400259a8:	mov    r13d,r9d
   1400259ab:	lea    eax,[r9+0x2f]
   1400259af:	jmp    0x1400259b9
   1400259b1:	movzx  edx,WORD PTR [r8]
   1400259b5:	add    r8,0x2
   1400259b9:	cmp    dx,ax
   1400259bc:	je     0x1400259b1
   1400259be:	sub    dx,0x31
   1400259c2:	mov    ecx,0x8
   1400259c7:	cmp    dx,cx
   1400259ca:	ja     0x140025a95
   1400259d0:	mov    ecx,0x9
   1400259d5:	jmp    0x140025941
   1400259da:	lea    eax,[rdx-0x31]
   1400259dd:	mov    ecx,0x8
   1400259e2:	cmp    ax,cx
   1400259e5:	ja     0x1400259f1
   1400259e7:	mov    ecx,0x9
   1400259ec:	jmp    0x1400257d5
   1400259f1:	mov    eax,0x30
   1400259f6:	cmp    dx,ax
   1400259f9:	je     0x1400257de
   1400259ff:	mov    r8,rdi
   140025a02:	mov    r15d,0x1
   140025a08:	mov    rax,QWORD PTR [rbp-0x69]
   140025a0c:	mov    QWORD PTR [rax],r8
   140025a0f:	test   r12d,r12d
   140025a12:	je     0x140025ed0
   140025a18:	cmp    r11d,0x18
   140025a1c:	jbe    0x140025a37
   140025a1e:	mov    al,BYTE PTR [rbp-0xa]
   140025a21:	cmp    al,0x5
   140025a23:	jl     0x140025a2b
   140025a25:	add    al,r15b
   140025a28:	mov    BYTE PTR [rbp-0xa],al
   140025a2b:	sub    r10,r15
   140025a2e:	mov    r11d,0x18
   140025a34:	add    r14d,r15d
   140025a37:	test   r11d,r11d
   140025a3a:	jne    0x140025b04
   140025a40:	movzx  edx,bx
   140025a43:	movzx  eax,bx
   140025a46:	mov    edi,ebx
   140025a48:	mov    ecx,ebx
   140025a4a:	jmp    0x140025edf
   140025a4f:	lea    eax,[rdx-0x31]
   140025a52:	mov    ecx,0x8
   140025a57:	lea    rdi,[r8-0x4]
   140025a5b:	cmp    ax,cx
   140025a5e:	jbe    0x1400259e7
   140025a60:	movzx  eax,dx
   140025a63:	cmp    eax,0x2b
   140025a66:	je     0x140025a82
   140025a68:	cmp    eax,0x2d
   140025a6b:	je     0x14002598a
   140025a71:	lea    r9d,[rcx+0x28]
   140025a75:	cmp    eax,r9d
   140025a78:	jne    0x1400259ff
   140025a7a:	mov    eax,r9d
   140025a7d:	jmp    0x1400257de
   140025a82:	mov    ecx,0x7
   140025a87:	cmp    ecx,0xa
   140025a8a:	je     0x140025a02
   140025a90:	jmp    0x1400257d9
   140025a95:	sub    r8,0x2
   140025a99:	mov    r15,r9
   140025a9c:	jmp    0x140025a08
   140025aa1:	mov    r15d,0x1
   140025aa7:	mov    r13d,r15d
   140025aaa:	lea    r9d,[r15+0x2f]
   140025aae:	jmp    0x140025ad2
   140025ab0:	cmp    dx,0x39
   140025ab4:	ja     0x140025aef
   140025ab6:	lea    esi,[rsi+rsi*4]
   140025ab9:	movzx  eax,dx
   140025abc:	lea    esi,[rsi-0x18]
   140025abf:	lea    esi,[rax+rsi*2]
   140025ac2:	cmp    esi,0x1450
   140025ac8:	jg     0x140025ada
   140025aca:	movzx  edx,WORD PTR [r8]
   140025ace:	add    r8,0x2
   140025ad2:	cmp    dx,r9w
   140025ad6:	jae    0x140025ab0
   140025ad8:	jmp    0x140025aef
   140025ada:	mov    esi,0x1451
   140025adf:	jmp    0x140025aef
   140025ae1:	cmp    dx,0x39
   140025ae5:	ja     0x140025af5
   140025ae7:	movzx  edx,WORD PTR [r8]
   140025aeb:	add    r8,0x2
   140025aef:	cmp    dx,r9w
   140025af3:	jae    0x140025ae1
   140025af5:	sub    r8,0x2
   140025af9:	jmp    0x140025a08
   140025afe:	dec    r11d
   140025b01:	add    r14d,r15d
   140025b04:	sub    r10,r15
   140025b07:	cmp    BYTE PTR [r10],bl
   140025b0a:	je     0x140025afe
   140025b0c:	lea    r8,[rbp-0x41]
   140025b10:	lea    rcx,[rbp-0x21]
   140025b14:	mov    edx,r11d
   140025b17:	call   0x140023c30
   140025b1c:	cmp    DWORD PTR [rbp-0x75],ebx
   140025b1f:	jge    0x140025b23
   140025b21:	neg    esi
   140025b23:	add    esi,r14d
   140025b26:	test   r13d,r13d
   140025b29:	jne    0x140025b2e
   140025b2b:	add    esi,DWORD PTR [rbp+0x67]
   140025b2e:	cmp    DWORD PTR [rbp-0x79],ebx
   140025b31:	jne    0x140025b36
   140025b33:	sub    esi,DWORD PTR [rbp+0x6f]
   140025b36:	cmp    esi,0x1450
   140025b3c:	jg     0x140025eba
   140025b42:	cmp    esi,0xffffebb0
   140025b48:	jl     0x140025eac
   140025b4e:	lea    r14,[rip+0x11a6b]        # 0x1400375c0
   140025b55:	sub    r14,0x60
   140025b59:	test   esi,esi
   140025b5b:	je     0x140025e9a
   140025b61:	jns    0x140025b70
   140025b63:	lea    r14,[rip+0x11bb6]        # 0x140037720
   140025b6a:	neg    esi
   140025b6c:	sub    r14,0x60
   140025b70:	cmp    DWORD PTR [rbp-0x6d],ebx
   140025b73:	jne    0x140025b79
   140025b75:	mov    WORD PTR [rbp-0x41],bx
   140025b79:	test   esi,esi
   140025b7b:	je     0x140025e9a
   140025b81:	mov    edi,0x80000000
   140025b86:	mov    r9d,0x7fff
   140025b8c:	mov    eax,esi
   140025b8e:	add    r14,0x54
   140025b92:	sar    esi,0x3
   140025b95:	mov    QWORD PTR [rbp-0x61],r14
   140025b99:	and    eax,0x7
   140025b9c:	je     0x140025e92
   140025ba2:	cdqe   
   140025ba4:	mov    r11d,0x8000
   140025baa:	lea    rcx,[rax+rax*2]
   140025bae:	lea    rdx,[r14+rcx*4]
   140025bb2:	mov    QWORD PTR [rbp-0x69],rdx
   140025bb6:	cmp    WORD PTR [rdx],r11w
   140025bba:	jb     0x140025be1
   140025bbc:	mov    eax,DWORD PTR [rdx+0x8]
   140025bbf:	movsd  xmm0,QWORD PTR [rdx]
   140025bc3:	lea    rdx,[rbp-0x31]
   140025bc7:	mov    DWORD PTR [rbp-0x29],eax
   140025bca:	movsd  QWORD PTR [rbp-0x31],xmm0
   140025bcf:	mov    rax,QWORD PTR [rbp-0x31]
   140025bd3:	shr    rax,0x10
   140025bd7:	mov    QWORD PTR [rbp-0x69],rdx
   140025bdb:	sub    eax,r15d
   140025bde:	mov    DWORD PTR [rbp-0x2f],eax
   140025be1:	movzx  eax,WORD PTR [rdx+0xa]
   140025be5:	movzx  ecx,WORD PTR [rbp-0x37]
   140025be9:	mov    QWORD PTR [rbp-0x51],rbx
   140025bed:	movzx  r12d,ax
   140025bf1:	and    ax,r9w
   140025bf5:	mov    DWORD PTR [rbp-0x49],ebx
   140025bf8:	xor    r12w,cx
   140025bfc:	and    cx,r9w
   140025c00:	and    r12w,r11w
   140025c04:	lea    r8d,[rcx+rax*1]
   140025c08:	cmp    cx,r9w
   140025c0c:	jae    0x140025e7e
   140025c12:	cmp    ax,r9w
   140025c16:	jae    0x140025e7e
   140025c1c:	mov    r10d,0xbffd
   140025c22:	cmp    r8w,r10w
   140025c26:	ja     0x140025e7e
   140025c2c:	mov    r10d,0x3fbf
   140025c32:	cmp    r8w,r10w
   140025c36:	ja     0x140025c44
   140025c38:	mov    QWORD PTR [rbp-0x3d],rbx
   140025c3c:	mov    DWORD PTR [rbp-0x41],ebx
   140025c3f:	jmp    0x140025e92
   140025c44:	test   cx,cx
   140025c47:	jne    0x140025c69
   140025c49:	add    r8w,r15w
   140025c4d:	test   DWORD PTR [rbp-0x39],0x7fffffff
   140025c54:	jne    0x140025c69
   140025c56:	cmp    DWORD PTR [rbp-0x3d],ebx
   140025c59:	jne    0x140025c69
   140025c5b:	cmp    DWORD PTR [rbp-0x41],ebx
   140025c5e:	jne    0x140025c69
   140025c60:	mov    WORD PTR [rbp-0x37],bx
   140025c64:	jmp    0x140025e92
   140025c69:	test   ax,ax
   140025c6c:	jne    0x140025c84
   140025c6e:	add    r8w,r15w
   140025c72:	test   DWORD PTR [rdx+0x8],0x7fffffff
   140025c79:	jne    0x140025c84
   140025c7b:	cmp    DWORD PTR [rdx+0x4],ebx
   140025c7e:	jne    0x140025c84
   140025c80:	cmp    DWORD PTR [rdx],ebx
   140025c82:	je     0x140025c38
   140025c84:	mov    r13d,ebx
   140025c87:	lea    r9,[rbp-0x51]
   140025c8b:	mov    r10d,0x5
   140025c91:	mov    DWORD PTR [rbp-0x79],r10d
   140025c95:	test   r10d,r10d
   140025c98:	jle    0x140025d0b
   140025c9a:	lea    eax,[r13*2+0x0]
   140025ca2:	lea    rdi,[rbp-0x41]
   140025ca6:	lea    r14,[rdx+0x8]
   140025caa:	movsxd rcx,eax
   140025cad:	mov    eax,r13d
   140025cb0:	and    eax,r15d
   140025cb3:	add    rdi,rcx
   140025cb6:	mov    edx,eax
   140025cb8:	movzx  eax,WORD PTR [r14]
   140025cbc:	movzx  ecx,WORD PTR [rdi]
   140025cbf:	mov    r11d,ebx
   140025cc2:	imul   ecx,eax
   140025cc5:	mov    eax,DWORD PTR [r9]
   140025cc8:	lea    r15d,[rax+rcx*1]
   140025ccc:	cmp    r15d,eax
   140025ccf:	jb     0x140025cd6
   140025cd1:	cmp    r15d,ecx
   140025cd4:	jae    0x140025cdc
   140025cd6:	mov    r11d,0x1
   140025cdc:	mov    DWORD PTR [r9],r15d
   140025cdf:	mov    r15d,0x1
   140025ce5:	test   r11d,r11d
   140025ce8:	je     0x140025cef
   140025cea:	add    WORD PTR [r9+0x4],r15w
   140025cef:	mov    r11d,DWORD PTR [rbp-0x79]
   140025cf3:	add    rdi,0x2
   140025cf7:	sub    r14,0x2
   140025cfb:	sub    r11d,r15d
   140025cfe:	mov    DWORD PTR [rbp-0x79],r11d
   140025d02:	test   r11d,r11d
   140025d05:	jg     0x140025cb8
   140025d07:	mov    rdx,QWORD PTR [rbp-0x69]
   140025d0b:	sub    r10d,r15d
   140025d0e:	add    r9,0x2
   140025d12:	add    r13d,r15d
   140025d15:	test   r10d,r10d
   140025d18:	jg     0x140025c91
   140025d1e:	mov    r10d,DWORD PTR [rbp-0x49]
   140025d22:	mov    r9d,DWORD PTR [rbp-0x51]
   140025d26:	mov    eax,0xc002
   140025d2b:	add    r8w,ax
   140025d2f:	mov    edi,0x80000000
   140025d34:	mov    r13d,0xffff
   140025d3a:	test   r8w,r8w
   140025d3e:	jle    0x140025d7f
   140025d40:	test   edi,r10d
   140025d43:	jne    0x140025d79
   140025d45:	mov    r11d,DWORD PTR [rbp-0x4d]
   140025d49:	mov    edx,r9d
   140025d4c:	add    r10d,r10d
   140025d4f:	shr    edx,0x1f
   140025d52:	add    r9d,r9d
   140025d55:	mov    ecx,r11d
   140025d58:	shr    ecx,0x1f
   140025d5b:	lea    eax,[r11+r11*1]
   140025d5f:	add    r8w,r13w
   140025d63:	or     eax,edx
   140025d65:	or     r10d,ecx
   140025d68:	mov    DWORD PTR [rbp-0x51],r9d
   140025d6c:	mov    DWORD PTR [rbp-0x4d],eax
   140025d6f:	mov    DWORD PTR [rbp-0x49],r10d
   140025d73:	test   r8w,r8w
   140025d77:	jg     0x140025d40
   140025d79:	test   r8w,r8w
   140025d7d:	jg     0x140025de9
   140025d7f:	add    r8w,r13w
   140025d83:	jns    0x140025de9
   140025d85:	movzx  eax,r8w
   140025d89:	mov    edi,ebx
   140025d8b:	neg    ax
   140025d8e:	movzx  edx,ax
   140025d91:	add    r8w,dx
   140025d95:	test   BYTE PTR [rbp-0x51],r15b
   140025d99:	je     0x140025d9e
   140025d9b:	add    edi,r15d
   140025d9e:	mov    r11d,DWORD PTR [rbp-0x4d]
   140025da2:	mov    eax,r10d
   140025da5:	shr    r9d,1
   140025da8:	mov    ecx,r11d
   140025dab:	shl    eax,0x1f
   140025dae:	shr    r11d,1
   140025db1:	shl    ecx,0x1f
   140025db4:	or     r11d,eax
   140025db7:	shr    r10d,1
   140025dba:	or     r9d,ecx
   140025dbd:	mov    DWORD PTR [rbp-0x4d],r11d
   140025dc1:	mov    DWORD PTR [rbp-0x51],r9d
   140025dc5:	sub    rdx,r15
   140025dc8:	jne    0x140025d95
   140025dca:	test   edi,edi
   140025dcc:	mov    DWORD PTR [rbp-0x49],r10d
   140025dd0:	mov    edi,0x80000000
   140025dd5:	je     0x140025de9
   140025dd7:	movzx  eax,r9w
   140025ddb:	or     ax,r15w
   140025ddf:	mov    WORD PTR [rbp-0x51],ax
   140025de3:	mov    r9d,DWORD PTR [rbp-0x51]
   140025de7:	jmp    0x140025ded
   140025de9:	movzx  eax,WORD PTR [rbp-0x51]
   140025ded:	mov    r14,QWORD PTR [rbp-0x61]
   140025df1:	mov    r11d,0x8000
   140025df7:	cmp    ax,r11w
   140025dfb:	ja     0x140025e0d
   140025dfd:	and    r9d,0x1ffff
   140025e04:	cmp    r9d,0x18000
   140025e0b:	jne    0x140025e55
   140025e0d:	mov    eax,DWORD PTR [rbp-0x4f]
   140025e10:	or     ecx,0xffffffff
   140025e13:	cmp    eax,ecx
   140025e15:	jne    0x140025e4f
   140025e17:	mov    eax,DWORD PTR [rbp-0x4b]
   140025e1a:	mov    DWORD PTR [rbp-0x4f],ebx
   140025e1d:	cmp    eax,ecx
   140025e1f:	jne    0x140025e43
   140025e21:	movzx  eax,WORD PTR [rbp-0x47]
   140025e25:	mov    DWORD PTR [rbp-0x4b],ebx
   140025e28:	cmp    ax,r13w
   140025e2c:	jne    0x140025e39
   140025e2e:	mov    WORD PTR [rbp-0x47],r11w
   140025e33:	add    r8w,r15w
   140025e37:	jmp    0x140025e49
   140025e39:	add    ax,r15w
   140025e3d:	mov    WORD PTR [rbp-0x47],ax
   140025e41:	jmp    0x140025e49
   140025e43:	add    eax,r15d
   140025e46:	mov    DWORD PTR [rbp-0x4b],eax
   140025e49:	mov    r10d,DWORD PTR [rbp-0x49]
   140025e4d:	jmp    0x140025e55
   140025e4f:	add    eax,r15d
   140025e52:	mov    DWORD PTR [rbp-0x4f],eax
   140025e55:	mov    r9d,0x7fff
   140025e5b:	cmp    r8w,r9w
   140025e5f:	jae    0x140025e7e
   140025e61:	movzx  eax,WORD PTR [rbp-0x4f]
   140025e65:	or     r8w,r12w
   140025e69:	mov    DWORD PTR [rbp-0x3b],r10d
   140025e6d:	mov    WORD PTR [rbp-0x41],ax
   140025e71:	mov    eax,DWORD PTR [rbp-0x4d]
   140025e74:	mov    WORD PTR [rbp-0x37],r8w
   140025e79:	mov    DWORD PTR [rbp-0x3f],eax
   140025e7c:	jmp    0x140025e92
   140025e7e:	neg    r12w
   140025e82:	mov    QWORD PTR [rbp-0x41],rbx
   140025e86:	sbb    eax,eax
   140025e88:	and    eax,edi
   140025e8a:	add    eax,0x7fff8000
   140025e8f:	mov    DWORD PTR [rbp-0x39],eax
   140025e92:	test   esi,esi
   140025e94:	jne    0x140025b8c
   140025e9a:	mov    eax,DWORD PTR [rbp-0x39]
   140025e9d:	movzx  edx,WORD PTR [rbp-0x41]
   140025ea1:	mov    ecx,DWORD PTR [rbp-0x3f]
   140025ea4:	mov    edi,DWORD PTR [rbp-0x3b]
   140025ea7:	shr    eax,0x10
   140025eaa:	jmp    0x140025edf
   140025eac:	mov    edx,ebx
   140025eae:	movzx  eax,bx
   140025eb1:	mov    edi,ebx
   140025eb3:	mov    ecx,ebx
   140025eb5:	mov    ebx,r15d
   140025eb8:	jmp    0x140025edf
   140025eba:	mov    ecx,ebx
   140025ebc:	movzx  edx,bx
   140025ebf:	mov    eax,0x7fff
   140025ec4:	mov    ebx,0x2
   140025ec9:	mov    edi,0x80000000
   140025ece:	jmp    0x140025edf
   140025ed0:	movzx  edx,bx
   140025ed3:	movzx  eax,bx
   140025ed6:	mov    edi,ebx
   140025ed8:	mov    ecx,ebx
   140025eda:	mov    ebx,0x4
   140025edf:	mov    r8,QWORD PTR [rbp-0x59]
   140025ee3:	or     ax,WORD PTR [rbp-0x71]
   140025ee7:	mov    WORD PTR [r8+0xa],ax
   140025eec:	mov    eax,ebx
   140025eee:	mov    WORD PTR [r8],dx
   140025ef2:	mov    DWORD PTR [r8+0x2],ecx
   140025ef6:	mov    DWORD PTR [r8+0x6],edi
   140025efa:	mov    rcx,QWORD PTR [rbp-0x1]
   140025efe:	xor    rcx,rsp
   140025f01:	call   0x14000d0a0
   140025f06:	mov    rbx,QWORD PTR [rsp+0xf0]
   140025f0e:	add    rsp,0xa0
   140025f15:	pop    r15
   140025f17:	pop    r14
   140025f19:	pop    r13
   140025f1b:	pop    r12
   140025f1d:	pop    rdi
   140025f1e:	pop    rsi
   140025f1f:	pop    rbp
   140025f20:	ret    
   140025f21:	int3   
   140025f22:	jmp    QWORD PTR [rip+0x1148]        # 0x140027070
   140025f28:	jmp    QWORD PTR [rip+0x114a]        # 0x140027078
   140025f2e:	jmp    QWORD PTR [rip+0x114c]        # 0x140027080
   140025f34:	jmp    QWORD PTR [rip+0x114e]        # 0x140027088
   140025f3a:	jmp    QWORD PTR [rip+0x1150]        # 0x140027090
   140025f40:	jmp    QWORD PTR [rip+0x1152]        # 0x140027098
   140025f46:	jmp    QWORD PTR [rip+0x1154]        # 0x1400270a0
   140025f4c:	jmp    QWORD PTR [rip+0x1156]        # 0x1400270a8
   140025f52:	jmp    QWORD PTR [rip+0x1158]        # 0x1400270b0
   140025f58:	jmp    QWORD PTR [rip+0x115a]        # 0x1400270b8
   140025f5e:	jmp    QWORD PTR [rip+0x115c]        # 0x1400270c0
   140025f64:	jmp    QWORD PTR [rip+0x115e]        # 0x1400270c8
   140025f6a:	jmp    QWORD PTR [rip+0x1160]        # 0x1400270d0
   140025f70:	jmp    QWORD PTR [rip+0x1162]        # 0x1400270d8
   140025f76:	jmp    QWORD PTR [rip+0x1164]        # 0x1400270e0
   140025f7c:	jmp    QWORD PTR [rip+0x1166]        # 0x1400270e8
   140025f82:	jmp    QWORD PTR [rip+0x1168]        # 0x1400270f0
   140025f88:	jmp    QWORD PTR [rip+0x116a]        # 0x1400270f8
   140025f8e:	jmp    QWORD PTR [rip+0x116c]        # 0x140027100
   140025f94:	jmp    QWORD PTR [rip+0x116e]        # 0x140027108
   140025f9a:	jmp    QWORD PTR [rip+0x1170]        # 0x140027110
   140025fa0:	jmp    QWORD PTR [rip+0x1172]        # 0x140027118
   140025fa6:	jmp    QWORD PTR [rip+0x1174]        # 0x140027120
   140025fac:	jmp    QWORD PTR [rip+0x1176]        # 0x140027128
   140025fb2:	jmp    QWORD PTR [rip+0x1178]        # 0x140027130
   140025fb8:	jmp    QWORD PTR [rip+0x117a]        # 0x140027138
   140025fbe:	jmp    QWORD PTR [rip+0x117c]        # 0x140027140
   140025fc4:	jmp    QWORD PTR [rip+0x117e]        # 0x140027148
   140025fca:	jmp    QWORD PTR [rip+0x1180]        # 0x140027150
   140025fd0:	jmp    QWORD PTR [rip+0x1182]        # 0x140027158
   140025fd6:	jmp    QWORD PTR [rip+0x1184]        # 0x140027160
   140025fdc:	jmp    QWORD PTR [rip+0x1186]        # 0x140027168
   140025fe2:	jmp    QWORD PTR [rip+0x1188]        # 0x140027170
   140025fe8:	jmp    QWORD PTR [rip+0x118a]        # 0x140027178
   140025fee:	jmp    QWORD PTR [rip+0x118c]        # 0x140027180
   140025ff4:	jmp    QWORD PTR [rip+0x118e]        # 0x140027188
   140025ffa:	jmp    QWORD PTR [rip+0x1190]        # 0x140027190
   140026000:	jmp    QWORD PTR [rip+0x1192]        # 0x140027198
   140026006:	jmp    QWORD PTR [rip+0x1194]        # 0x1400271a0
   14002600c:	jmp    QWORD PTR [rip+0x1196]        # 0x1400271a8
   140026012:	jmp    QWORD PTR [rip+0x1198]        # 0x1400271b0
   140026018:	jmp    QWORD PTR [rip+0x119a]        # 0x1400271b8
   14002601e:	jmp    QWORD PTR [rip+0x119c]        # 0x1400271c0
   140026024:	jmp    QWORD PTR [rip+0x119e]        # 0x1400271c8
   14002602a:	jmp    QWORD PTR [rip+0x11a0]        # 0x1400271d0
   140026030:	jmp    QWORD PTR [rip+0x11a2]        # 0x1400271d8
   140026036:	jmp    QWORD PTR [rip+0x11a4]        # 0x1400271e0
   14002603c:	jmp    QWORD PTR [rip+0x11a6]        # 0x1400271e8
   140026042:	jmp    QWORD PTR [rip+0x11a8]        # 0x1400271f0
   140026048:	jmp    QWORD PTR [rip+0x11aa]        # 0x1400271f8
   14002604e:	jmp    QWORD PTR [rip+0x11ac]        # 0x140027200
   140026054:	jmp    QWORD PTR [rip+0x11ae]        # 0x140027208
   14002605a:	jmp    QWORD PTR [rip+0x11b0]        # 0x140027210
   140026060:	jmp    QWORD PTR [rip+0x11b2]        # 0x140027218
   140026066:	jmp    QWORD PTR [rip+0x11b4]        # 0x140027220
   14002606c:	jmp    QWORD PTR [rip+0x11b6]        # 0x140027228
   140026072:	jmp    QWORD PTR [rip+0x11b8]        # 0x140027230
   140026078:	jmp    QWORD PTR [rip+0x11ba]        # 0x140027238
   14002607e:	jmp    QWORD PTR [rip+0x11bc]        # 0x140027240
   140026084:	jmp    QWORD PTR [rip+0x11be]        # 0x140027248
   14002608a:	jmp    QWORD PTR [rip+0x11c0]        # 0x140027250
   140026090:	jmp    QWORD PTR [rip+0x11c2]        # 0x140027258
   140026096:	jmp    QWORD PTR [rip+0x11c4]        # 0x140027260
   14002609c:	jmp    QWORD PTR [rip+0x11c6]        # 0x140027268
   1400260a2:	jmp    QWORD PTR [rip+0x11c8]        # 0x140027270
   1400260a8:	jmp    QWORD PTR [rip+0x11ca]        # 0x140027278
   1400260ae:	jmp    QWORD PTR [rip+0x11cc]        # 0x140027280
   1400260b4:	jmp    QWORD PTR [rip+0x11ce]        # 0x140027288
   1400260ba:	jmp    QWORD PTR [rip+0x11d0]        # 0x140027290
   1400260c0:	jmp    QWORD PTR [rip+0x11d2]        # 0x140027298
   1400260c6:	jmp    QWORD PTR [rip+0x11d4]        # 0x1400272a0
   1400260cc:	jmp    QWORD PTR [rip+0x11d6]        # 0x1400272a8
   1400260d2:	jmp    QWORD PTR [rip+0x11d8]        # 0x1400272b0
   1400260d8:	jmp    QWORD PTR [rip+0x11da]        # 0x1400272b8
   1400260de:	jmp    QWORD PTR [rip+0x11dc]        # 0x1400272c0
   1400260e4:	jmp    QWORD PTR [rip+0xf66]        # 0x140027050
   1400260ea:	jmp    QWORD PTR [rip+0xf58]        # 0x140027048
   1400260f0:	jmp    QWORD PTR [rip+0xf4a]        # 0x140027040
   1400260f6:	jmp    QWORD PTR [rip+0x11cc]        # 0x1400272c8
   1400260fc:	int3   
   1400260fd:	int3   
   1400260fe:	int3   
   1400260ff:	int3   
   140026100:	mov    QWORD PTR [rsp+0x10],rdx
   140026105:	push   rbx
   140026106:	push   rbp
   140026107:	sub    rsp,0x28
   14002610b:	mov    rbp,rdx
   14002610e:	mov    rbx,QWORD PTR [rbp+0x60]
   140026112:	cmp    QWORD PTR [rbx+0x18],0x8
   140026117:	jb     0x140026121
   140026119:	mov    rcx,QWORD PTR [rbx]
   14002611c:	call   0x140005454
   140026121:	mov    QWORD PTR [rbx+0x18],0x7
   140026129:	mov    QWORD PTR [rbx+0x10],0x0
   140026131:	xor    eax,eax
   140026133:	mov    WORD PTR [rbx],ax
   140026136:	xor    edx,edx
   140026138:	xor    ecx,ecx
   14002613a:	call   0x140006894
   14002613f:	nop
   140026140:	mov    QWORD PTR [rsp+0x10],rdx
   140026145:	push   rbp
   140026146:	sub    rsp,0x20
   14002614a:	mov    rbp,rdx
   14002614d:	mov    rcx,QWORD PTR [rbp+0x68]
   140026151:	mov    QWORD PTR [rbp+0x68],rcx
   140026155:	xor    eax,eax
   140026157:	inc    rcx
   14002615a:	je     0x140026171
   14002615c:	cmp    rcx,0xffffffffffffffff
   140026160:	ja     0x14002616c
   140026162:	call   0x1400053e8
   140026167:	test   rax,rax
   14002616a:	jne    0x140026171
   14002616c:	call   0x14000514c
   140026171:	mov    QWORD PTR [rbp+0x78],rax
   140026175:	lea    rax,[rip+0xfffffffffffdba99]        # 0x140001c15
   14002617c:	add    rsp,0x20
   140026180:	pop    rbp
   140026181:	ret    
   140026182:	int3   
   140026183:	mov    QWORD PTR [rsp+0x10],rdx
   140026188:	push   rbx
   140026189:	push   rbp
   14002618a:	sub    rsp,0x28
   14002618e:	mov    rbp,rdx
   140026191:	mov    rbx,QWORD PTR [rbp+0x60]
   140026195:	cmp    QWORD PTR [rbx+0x18],0x10
   14002619a:	jb     0x1400261a4
   14002619c:	mov    rcx,QWORD PTR [rbx]
   14002619f:	call   0x140005454
   1400261a4:	mov    QWORD PTR [rbx+0x18],0xf
   1400261ac:	mov    QWORD PTR [rbx+0x10],0x0
   1400261b4:	mov    BYTE PTR [rbx],0x0
   1400261b7:	xor    edx,edx
   1400261b9:	xor    ecx,ecx
   1400261bb:	call   0x140006894
   1400261c0:	nop
   1400261c1:	int3   
   1400261c2:	int3   
   1400261c3:	int3   
   1400261c4:	int3   
   1400261c5:	int3   
   1400261c6:	int3   
   1400261c7:	int3   
   1400261c8:	int3   
   1400261c9:	int3   
   1400261ca:	int3   
   1400261cb:	int3   
   1400261cc:	int3   
   1400261cd:	int3   
   1400261ce:	int3   
   1400261cf:	int3   
   1400261d0:	mov    QWORD PTR [rsp+0x10],rdx
   1400261d5:	push   rbp
   1400261d6:	sub    rsp,0x20
   1400261da:	mov    rbp,rdx
   1400261dd:	mov    rcx,QWORD PTR [rbp+0x68]
   1400261e1:	mov    QWORD PTR [rbp+0x68],rcx
   1400261e5:	xor    eax,eax
   1400261e7:	inc    rcx
   1400261ea:	je     0x14002620d
   1400261ec:	movabs rax,0x7fffffffffffffff
   1400261f6:	cmp    rcx,rax
   1400261f9:	ja     0x140026208
   1400261fb:	add    rcx,rcx
   1400261fe:	call   0x1400053e8
   140026203:	test   rax,rax
   140026206:	jne    0x14002620d
   140026208:	call   0x14000514c
   14002620d:	mov    QWORD PTR [rbp+0x78],rax
   140026211:	lea    rax,[rip+0xfffffffffffdbb23]        # 0x140001d3b
   140026218:	add    rsp,0x20
   14002621c:	pop    rbp
   14002621d:	ret    
   14002621e:	int3   
   14002621f:	mov    QWORD PTR [rsp+0x10],rdx
   140026224:	push   rbx
   140026225:	push   rbp
   140026226:	sub    rsp,0x28
   14002622a:	mov    rbp,rdx
   14002622d:	mov    rbx,QWORD PTR [rbp+0x60]
   140026231:	cmp    QWORD PTR [rbx+0x18],0x8
   140026236:	jb     0x140026240
   140026238:	mov    rcx,QWORD PTR [rbx]
   14002623b:	call   0x140005454
   140026240:	mov    QWORD PTR [rbx+0x18],0x7
   140026248:	mov    QWORD PTR [rbx+0x10],0x0
   140026250:	xor    eax,eax
   140026252:	mov    WORD PTR [rbx],ax
   140026255:	xor    edx,edx
   140026257:	xor    ecx,ecx
   140026259:	call   0x140006894
   14002625e:	nop
   14002625f:	int3   
   140026260:	lea    rcx,[rdx+0x40]
   140026267:	jmp    0x140001800
   14002626c:	lea    rcx,[rdx+0x60]
   140026273:	jmp    0x140001800
   140026278:	lea    rcx,[rdx+0x88]
   14002627f:	jmp    0x140001800
   140026284:	lea    rcx,[rdx+0x20]
   14002628b:	jmp    0x140001800
   140026290:	lea    rcx,[rdx+0x30]
   140026297:	jmp    0x140001800
   14002629c:	int3   
   14002629d:	int3   
   14002629e:	int3   
   14002629f:	int3   
   1400262a0:	lea    rcx,[rdx+0x40]
   1400262a7:	jmp    0x140001800
   1400262ac:	lea    rcx,[rdx+0x60]
   1400262b3:	jmp    0x140001800
   1400262b8:	rex push rbp
   1400262ba:	sub    rsp,0x20
   1400262be:	mov    rbp,rdx
   1400262c1:	mov    eax,DWORD PTR [rbp+0x30]
   1400262c4:	and    eax,0x1
   1400262c7:	test   eax,eax
   1400262c9:	je     0x1400262db
   1400262cb:	and    DWORD PTR [rbp+0x30],0xfffffffe
   1400262cf:	mov    rcx,QWORD PTR [rbp+0xb0]
   1400262d6:	call   0x140001800
   1400262db:	add    rsp,0x20
   1400262df:	pop    rbp
   1400262e0:	ret    
   1400262e1:	int3   
   1400262e2:	int3   
   1400262e3:	int3   
   1400262e4:	int3   
   1400262e5:	int3   
   1400262e6:	int3   
   1400262e7:	int3   
   1400262e8:	int3   
   1400262e9:	int3   
   1400262ea:	int3   
   1400262eb:	int3   
   1400262ec:	int3   
   1400262ed:	int3   
   1400262ee:	int3   
   1400262ef:	int3   
   1400262f0:	lea    rcx,[rdx+0x70]
   1400262f7:	jmp    0x140001800
   1400262fc:	lea    rcx,[rdx+0x50]
   140026303:	jmp    0x140001800
   140026308:	rex push rbp
   14002630a:	sub    rsp,0x20
   14002630e:	mov    rbp,rdx
   140026311:	add    rsp,0x20
   140026315:	pop    rbp
   140026316:	jmp    0x140006250
   14002631b:	int3   
   14002631c:	rex push rbp
   14002631e:	sub    rsp,0x20
   140026322:	mov    rbp,rdx
   140026325:	cmp    DWORD PTR [rbp+0x80],0x0
   14002632c:	je     0x140026339
   14002632e:	mov    ecx,0x8
   140026333:	call   0x14000897c
   140026338:	nop
   140026339:	add    rsp,0x20
   14002633d:	pop    rbp
   14002633e:	ret    
   14002633f:	int3   
   140026340:	rex push rbp
   140026342:	sub    rsp,0x40
   140026346:	mov    rbp,rdx
   140026349:	lea    rax,[rbp+0x40]
   14002634d:	mov    QWORD PTR [rsp+0x30],rax
   140026352:	mov    rax,QWORD PTR [rbp+0x90]
   140026359:	mov    QWORD PTR [rsp+0x28],rax
   14002635e:	mov    rax,QWORD PTR [rbp+0x88]
   140026365:	mov    QWORD PTR [rsp+0x20],rax
   14002636a:	mov    r9,QWORD PTR [rbp+0x80]
   140026371:	mov    r8,QWORD PTR [rbp+0x78]
   140026375:	mov    rdx,QWORD PTR [rbp+0x70]
   140026379:	call   0x140006cbc
   14002637e:	nop
   14002637f:	add    rsp,0x40
   140026383:	pop    rbp
   140026384:	ret    
   140026385:	int3   
   140026386:	rex push rbp
   140026388:	sub    rsp,0x20
   14002638c:	mov    rbp,rdx
   14002638f:	mov    rax,QWORD PTR [rcx]
   140026392:	mov    rdx,rcx
   140026395:	mov    ecx,DWORD PTR [rax]
   140026397:	call   0x14000e254
   14002639c:	nop
   14002639d:	add    rsp,0x20
   1400263a1:	pop    rbp
   1400263a2:	ret    
   1400263a3:	int3   
   1400263a4:	rex push rbp
   1400263a6:	sub    rsp,0x20
   1400263aa:	mov    rbp,rdx
   1400263ad:	mov    rcx,QWORD PTR [rip+0xfddc]        # 0x140036190
   1400263b4:	add    rsp,0x20
   1400263b8:	pop    rbp
   1400263b9:	rex.W jmp QWORD PTR [rip+0xd50]        # 0x140027110
   1400263c0:	int3   
   1400263c1:	int3   
   1400263c2:	int3   
   1400263c3:	int3   
   1400263c4:	int3   
   1400263c5:	int3   
   1400263c6:	int3   
   1400263c7:	int3   
   1400263c8:	int3   
   1400263c9:	int3   
   1400263ca:	int3   
   1400263cb:	int3   
   1400263cc:	int3   
   1400263cd:	int3   
   1400263ce:	int3   
   1400263cf:	int3   
   1400263d0:	rex push rbp
   1400263d2:	sub    rsp,0x20
   1400263d6:	mov    rbp,rdx
   1400263d9:	mov    rax,QWORD PTR [rcx]
   1400263dc:	xor    ecx,ecx
   1400263de:	cmp    DWORD PTR [rax],0xc0000005
   1400263e4:	sete   cl
   1400263e7:	mov    eax,ecx
   1400263e9:	add    rsp,0x20
   1400263ed:	pop    rbp
   1400263ee:	ret    
   1400263ef:	int3   
   1400263f0:	rex push rbp
   1400263f2:	sub    rsp,0x20
   1400263f6:	mov    rbp,rdx
   1400263f9:	xor    ecx,ecx
   1400263fb:	add    rsp,0x20
   1400263ff:	pop    rbp
   140026400:	jmp    0x14000897c
   140026405:	int3   
   140026406:	rex push rbp
   140026408:	sub    rsp,0x20
   14002640c:	mov    rbp,rdx
   14002640f:	cmp    DWORD PTR [rbp+0x60],0x0
   140026413:	je     0x14002641d
   140026415:	xor    ecx,ecx
   140026417:	call   0x14000897c
   14002641c:	nop
   14002641d:	add    rsp,0x20
   140026421:	pop    rbp
   140026422:	ret    
   140026423:	int3   
   140026424:	rex push rbp
   140026426:	sub    rsp,0x20
   14002642a:	mov    rbp,rdx
   14002642d:	xor    ecx,ecx
   14002642f:	add    rsp,0x20
   140026433:	pop    rbp
   140026434:	jmp    0x14000897c
   140026439:	int3   
   14002643a:	rex push rbp
   14002643c:	sub    rsp,0x20
   140026440:	mov    rbp,rdx
   140026443:	mov    ecx,0xd
   140026448:	add    rsp,0x20
   14002644c:	pop    rbp
   14002644d:	jmp    0x14000897c
   140026452:	int3   
   140026453:	rex push rbp
   140026455:	sub    rsp,0x20
   140026459:	mov    rbp,rdx
   14002645c:	mov    ecx,0xd
   140026461:	add    rsp,0x20
   140026465:	pop    rbp
   140026466:	jmp    0x14000897c
   14002646b:	int3   
   14002646c:	rex push rbp
   14002646e:	sub    rsp,0x20
   140026472:	mov    rbp,rdx
   140026475:	mov    rax,QWORD PTR [rcx]
   140026478:	cmp    DWORD PTR [rax],0xc0000005
   14002647e:	je     0x14002648c
   140026480:	cmp    DWORD PTR [rax],0xc000001d
   140026486:	je     0x14002648c
   140026488:	xor    eax,eax
   14002648a:	jmp    0x140026491
   14002648c:	mov    eax,0x1
   140026491:	add    rsp,0x20
   140026495:	pop    rbp
   140026496:	ret    
   140026497:	int3   
   140026498:	rex push rbp
   14002649a:	sub    rsp,0x20
   14002649e:	mov    rbp,rdx
   1400264a1:	mov    ecx,0xd
   1400264a6:	add    rsp,0x20
   1400264aa:	pop    rbp
   1400264ab:	jmp    0x14000897c
   1400264b0:	int3   
   1400264b1:	rex push rbp
   1400264b3:	sub    rsp,0x20
   1400264b7:	mov    rbp,rdx
   1400264ba:	mov    ecx,0xc
   1400264bf:	add    rsp,0x20
   1400264c3:	pop    rbp
   1400264c4:	jmp    0x14000897c
   1400264c9:	int3   
   1400264ca:	rex push rbp
   1400264cc:	sub    rsp,0x20
   1400264d0:	mov    rbp,rdx
   1400264d3:	mov    ecx,0xd
   1400264d8:	add    rsp,0x20
   1400264dc:	pop    rbp
   1400264dd:	jmp    0x14000897c
   1400264e2:	int3   
   1400264e3:	rex push rbp
   1400264e5:	sub    rsp,0x20
   1400264e9:	mov    rbp,rdx
   1400264ec:	mov    ecx,0xc
   1400264f1:	add    rsp,0x20
   1400264f5:	pop    rbp
   1400264f6:	jmp    0x14000897c
   1400264fb:	int3   
   1400264fc:	rex push rbp
   1400264fe:	sub    rsp,0x20
   140026502:	mov    rbp,rdx
   140026505:	mov    QWORD PTR [rbp+0x70],rcx
   140026509:	mov    QWORD PTR [rbp+0x68],rcx
   14002650d:	mov    rax,QWORD PTR [rbp+0x68]
   140026511:	mov    rcx,QWORD PTR [rax]
   140026514:	mov    QWORD PTR [rbp+0x28],rcx
   140026518:	mov    DWORD PTR [rbp+0x20],0x0
   14002651f:	mov    rax,QWORD PTR [rbp+0x28]
   140026523:	cmp    DWORD PTR [rax],0xe06d7363
   140026529:	jne    0x140026578
   14002652b:	mov    rax,QWORD PTR [rbp+0x28]
   14002652f:	cmp    DWORD PTR [rax+0x18],0x4
   140026533:	jne    0x140026578
   140026535:	mov    rax,QWORD PTR [rbp+0x28]
   140026539:	cmp    DWORD PTR [rax+0x20],0x19930520
   140026540:	je     0x14002655c
   140026542:	mov    rax,QWORD PTR [rbp+0x28]
   140026546:	cmp    DWORD PTR [rax+0x20],0x19930521
   14002654d:	je     0x14002655c
   14002654f:	mov    rax,QWORD PTR [rbp+0x28]
   140026553:	cmp    DWORD PTR [rax+0x20],0x19930522
   14002655a:	jne    0x140026578
   14002655c:	mov    rdx,QWORD PTR [rbp+0x28]
   140026560:	mov    rax,QWORD PTR [rbp+0xd8]
   140026567:	mov    rcx,QWORD PTR [rax+0x28]
   14002656b:	cmp    QWORD PTR [rdx+0x28],rcx
   14002656f:	jne    0x140026578
   140026571:	mov    DWORD PTR [rbp+0x20],0x1
   140026578:	mov    rax,QWORD PTR [rbp+0x28]
   14002657c:	cmp    DWORD PTR [rax],0xe06d7363
   140026582:	jne    0x1400265df
   140026584:	mov    rax,QWORD PTR [rbp+0x28]
   140026588:	cmp    DWORD PTR [rax+0x18],0x4
   14002658c:	jne    0x1400265df
   14002658e:	mov    rax,QWORD PTR [rbp+0x28]
   140026592:	cmp    DWORD PTR [rax+0x20],0x19930520
   140026599:	je     0x1400265b5
   14002659b:	mov    rax,QWORD PTR [rbp+0x28]
   14002659f:	cmp    DWORD PTR [rax+0x20],0x19930521
   1400265a6:	je     0x1400265b5
   1400265a8:	mov    rax,QWORD PTR [rbp+0x28]
   1400265ac:	cmp    DWORD PTR [rax+0x20],0x19930522
   1400265b3:	jne    0x1400265df
   1400265b5:	mov    rax,QWORD PTR [rbp+0x28]
   1400265b9:	cmp    QWORD PTR [rax+0x30],0x0
   1400265be:	jne    0x1400265df
   1400265c0:	call   0x14000b18c
   1400265c5:	mov    DWORD PTR [rax+0x460],0x1
   1400265cf:	mov    DWORD PTR [rbp+0x20],0x1
   1400265d6:	mov    DWORD PTR [rbp+0x30],0x1
   1400265dd:	jmp    0x1400265e6
   1400265df:	mov    DWORD PTR [rbp+0x30],0x0
   1400265e6:	mov    eax,DWORD PTR [rbp+0x30]
   1400265e9:	add    rsp,0x20
   1400265ed:	pop    rbp
   1400265ee:	ret    
   1400265ef:	int3   
   1400265f0:	rex push rbx
   1400265f2:	push   rbp
   1400265f3:	sub    rsp,0x28
   1400265f7:	mov    rbp,rdx
   1400265fa:	mov    rcx,QWORD PTR [rbp+0x38]
   1400265fe:	call   0x140006df8
   140026603:	cmp    DWORD PTR [rbp+0x20],0x0
   140026607:	jne    0x140026643
   140026609:	mov    rbx,QWORD PTR [rbp+0xd8]
   140026610:	cmp    DWORD PTR [rbx],0xe06d7363
   140026616:	jne    0x140026643
   140026618:	cmp    DWORD PTR [rbx+0x18],0x4
   14002661c:	jne    0x140026643
   14002661e:	mov    eax,DWORD PTR [rbx+0x20]
   140026621:	sub    eax,0x19930520
   140026626:	cmp    eax,0x2
   140026629:	ja     0x140026643
   14002662b:	mov    rcx,QWORD PTR [rbx+0x28]
   14002662f:	call   0x140006e88
   140026634:	test   eax,eax
   140026636:	je     0x140026643
   140026638:	mov    dl,0x1
   14002663a:	mov    rcx,rbx
   14002663d:	call   0x14000b39c
   140026642:	nop
   140026643:	call   0x14000b18c
   140026648:	mov    rcx,QWORD PTR [rbp+0xe0]
   14002664f:	mov    QWORD PTR [rax+0xf0],rcx
   140026656:	call   0x14000b18c
   14002665b:	mov    rcx,QWORD PTR [rbp+0x50]
   14002665f:	mov    QWORD PTR [rax+0xf8],rcx
   140026666:	add    rsp,0x28
   14002666a:	pop    rbp
   14002666b:	pop    rbx
   14002666c:	ret    
   14002666d:	int3   
   14002666e:	rex push rbp
   140026670:	sub    rsp,0x20
   140026674:	mov    rbp,rdx
   140026677:	mov    rcx,QWORD PTR [rbp+0x30]
   14002667b:	call   0x140006ec8
   140026680:	nop
   140026681:	add    rsp,0x20
   140026685:	pop    rbp
   140026686:	ret    
   140026687:	int3   
   140026688:	rex push rbp
   14002668a:	sub    rsp,0x20
   14002668e:	mov    rbp,rdx
   140026691:	xor    eax,eax
   140026693:	cmp    BYTE PTR [rbp+0x38],al
   140026696:	setne  al
   140026699:	add    rsp,0x20
   14002669d:	pop    rbp
   14002669e:	ret    
   14002669f:	int3   
   1400266a0:	rex push rbp
   1400266a2:	sub    rsp,0x20
   1400266a6:	mov    rbp,rdx
   1400266a9:	call   0x14000c900
   1400266ae:	nop
   1400266af:	add    rsp,0x20
   1400266b3:	pop    rbp
   1400266b4:	ret    
   1400266b5:	int3   
   1400266b6:	rex push rbp
   1400266b8:	sub    rsp,0x20
   1400266bc:	mov    rbp,rdx
   1400266bf:	call   0x14000b18c
   1400266c4:	cmp    DWORD PTR [rax+0x100],0x0
   1400266cb:	jle    0x1400266d8
   1400266cd:	call   0x14000b18c
   1400266d2:	dec    DWORD PTR [rax+0x100]
   1400266d8:	add    rsp,0x20
   1400266dc:	pop    rbp
   1400266dd:	ret    
   1400266de:	int3   
   1400266df:	rex push rbp
   1400266e1:	sub    rsp,0x30
   1400266e5:	mov    rbp,rdx
   1400266e8:	mov    ecx,0xe
   1400266ed:	add    rsp,0x30
   1400266f1:	pop    rbp
   1400266f2:	jmp    0x14000897c
   1400266f7:	int3   
   1400266f8:	rex push rbp
   1400266fa:	sub    rsp,0x30
   1400266fe:	mov    rbp,rdx
   140026701:	mov    ecx,0xe
   140026706:	call   0x14000897c
   14002670b:	nop
   14002670c:	add    rsp,0x30
   140026710:	pop    rbp
   140026711:	ret    
   140026712:	int3   
   140026713:	rex push rbp
   140026715:	sub    rsp,0x20
   140026719:	mov    rbp,rdx
   14002671c:	mov    ecx,0xe
   140026721:	add    rsp,0x20
   140026725:	pop    rbp
   140026726:	jmp    0x14000897c
   14002672b:	int3   
   14002672c:	rex push rbp
   14002672e:	sub    rsp,0x20
   140026732:	mov    rbp,rdx
   140026735:	mov    ecx,0xe
   14002673a:	add    rsp,0x20
   14002673e:	pop    rbp
   14002673f:	jmp    0x14000897c
   140026744:	int3   
   140026745:	rex push rbp
   140026747:	sub    rsp,0x20
   14002674b:	mov    rbp,rdx
   14002674e:	mov    ecx,0xe
   140026753:	add    rsp,0x20
   140026757:	pop    rbp
   140026758:	jmp    0x14000897c
   14002675d:	int3   
   14002675e:	rex push rbp
   140026760:	sub    rsp,0x20
   140026764:	mov    rbp,rdx
   140026767:	mov    ecx,0xb
   14002676c:	call   0x14000897c
   140026771:	nop
   140026772:	add    rsp,0x20
   140026776:	pop    rbp
   140026777:	ret    
   140026778:	int3   
   140026779:	rex push rbp
   14002677b:	sub    rsp,0x20
   14002677f:	mov    rbp,rdx
   140026782:	mov    ecx,0xc
   140026787:	add    rsp,0x20
   14002678b:	pop    rbp
   14002678c:	jmp    0x14000897c
   140026791:	int3   
   140026792:	rex push rbp
   140026794:	sub    rsp,0x20
   140026798:	mov    rbp,rdx
   14002679b:	mov    rcx,QWORD PTR [rbp+0x30]
   14002679f:	add    rsp,0x20
   1400267a3:	pop    rbp
   1400267a4:	jmp    0x1400107d0
   1400267a9:	int3   
   1400267aa:	rex push rbp
   1400267ac:	sub    rsp,0x20
   1400267b0:	mov    rbp,rdx
   1400267b3:	movsxd rcx,DWORD PTR [rbp+0x20]
   1400267b7:	mov    rax,rcx
   1400267ba:	mov    rdx,QWORD PTR [rip+0x1286f]        # 0x140039030
   1400267c1:	mov    rdx,QWORD PTR [rdx+rcx*8]
   1400267c5:	call   0x140010820
   1400267ca:	nop
   1400267cb:	add    rsp,0x20
   1400267cf:	pop    rbp
   1400267d0:	ret    
   1400267d1:	int3   
   1400267d2:	rex push rbp
   1400267d4:	sub    rsp,0x20
   1400267d8:	mov    rbp,rdx
   1400267db:	mov    ecx,0x1
   1400267e0:	add    rsp,0x20
   1400267e4:	pop    rbp
   1400267e5:	jmp    0x14000897c
   1400267ea:	int3   
   1400267eb:	rex push rbp
   1400267ed:	sub    rsp,0x30
   1400267f1:	mov    rbp,rdx
   1400267f4:	mov    ecx,0x5
   1400267f9:	add    rsp,0x30
   1400267fd:	pop    rbp
   1400267fe:	jmp    0x14000897c
   140026803:	int3   
   140026804:	rex push rbp
   140026806:	sub    rsp,0x30
   14002680a:	mov    rbp,rdx
   14002680d:	mov    ecx,0x5
   140026812:	add    rsp,0x30
   140026816:	pop    rbp
   140026817:	jmp    0x14000897c
   14002681c:	int3   
   14002681d:	rex push rbp
   14002681f:	sub    rsp,0x20
   140026823:	mov    rbp,rdx
   140026826:	mov    ecx,0x1
   14002682b:	add    rsp,0x20
   14002682f:	pop    rbp
   140026830:	jmp    0x14000897c
   140026835:	int3   
   140026836:	rex push rbp
   140026838:	sub    rsp,0x20
   14002683c:	mov    rbp,rdx
   14002683f:	mov    ecx,DWORD PTR [rbp+0x40]
   140026842:	add    rsp,0x20
   140026846:	pop    rbp
   140026847:	jmp    0x14002142c
   14002684c:	int3   
   14002684d:	rex push rbp
   14002684f:	sub    rsp,0x20
   140026853:	mov    rbp,rdx
   140026856:	mov    ecx,DWORD PTR [rbp+0x50]
   140026859:	add    rsp,0x20
   14002685d:	pop    rbp
   14002685e:	jmp    0x14002142c
   140026863:	int3   
   140026864:	rex push rbp
   140026866:	sub    rsp,0x20
   14002686a:	mov    rbp,rdx
   14002686d:	mov    ecx,0xd
   140026872:	add    rsp,0x20
   140026876:	pop    rbp
   140026877:	jmp    0x14000897c
   14002687c:	int3   
   14002687d:	rex push rbp
   14002687f:	sub    rsp,0x20
   140026883:	mov    rbp,rdx
   140026886:	mov    ecx,0xc
   14002688b:	add    rsp,0x20
   14002688f:	pop    rbp
   140026890:	jmp    0x14000897c
   140026895:	int3   
   140026896:	rex push rbp
   140026898:	sub    rsp,0x20
   14002689c:	mov    rbp,rdx
   14002689f:	mov    ecx,0xc
   1400268a4:	add    rsp,0x20
   1400268a8:	pop    rbp
   1400268a9:	jmp    0x14000897c
   1400268ae:	int3   
   1400268af:	rex push rbp
   1400268b1:	sub    rsp,0x20
   1400268b5:	mov    rbp,rdx
   1400268b8:	mov    ecx,0xd
   1400268bd:	add    rsp,0x20
   1400268c1:	pop    rbp
   1400268c2:	jmp    0x14000897c
   1400268c7:	int3   
   1400268c8:	rex push rbp
   1400268ca:	sub    rsp,0x20
   1400268ce:	mov    rbp,rdx
   1400268d1:	mov    ecx,0xc
   1400268d6:	add    rsp,0x20
   1400268da:	pop    rbp
   1400268db:	jmp    0x14000897c
   1400268e0:	int3   
   1400268e1:	rex push rbp
   1400268e3:	sub    rsp,0x20
   1400268e7:	mov    rbp,rdx
   1400268ea:	mov    ecx,0xc
   1400268ef:	call   0x14000897c
   1400268f4:	nop
   1400268f5:	add    rsp,0x20
   1400268f9:	pop    rbp
   1400268fa:	ret    
   1400268fb:	int3   
   1400268fc:	rex push rbp
   1400268fe:	sub    rsp,0x20
   140026902:	mov    rbp,rdx
   140026905:	mov    ecx,0xc
   14002690a:	call   0x14000897c
   14002690f:	nop
   140026910:	add    rsp,0x20
   140026914:	pop    rbp
   140026915:	ret    
   140026916:	int3   
   140026917:	rex push rbp
   140026919:	sub    rsp,0x20
   14002691d:	mov    rbp,rdx
   140026920:	mov    rax,QWORD PTR [rbp+0x60]
   140026924:	and    DWORD PTR [rax+0xc8],0xffffffef
   14002692b:	add    rsp,0x20
   14002692f:	pop    rbp
   140026930:	ret    
   140026931:	int3   
   140026932:	rex push rbp
   140026934:	sub    rsp,0x20
   140026938:	mov    rbp,rdx
   14002693b:	mov    rcx,QWORD PTR [rbp+0x30]
   14002693f:	add    rsp,0x20
   140026943:	pop    rbp
   140026944:	jmp    0x1400107d0
   140026949:	int3   
   14002694a:	rex push rbp
   14002694c:	sub    rsp,0x20
   140026950:	mov    rbp,rdx
   140026953:	mov    ecx,0xa
   140026958:	add    rsp,0x20
   14002695c:	pop    rbp
   14002695d:	jmp    0x14000897c
   140026962:	int3   
   140026963:	rex push rbp
   140026965:	sub    rsp,0x20
   140026969:	mov    rbp,rdx
   14002696c:	mov    ecx,0xa
   140026971:	call   0x14000897c
   140026976:	nop
   140026977:	add    rsp,0x20
   14002697b:	pop    rbp
   14002697c:	ret    
   14002697d:	int3   
   14002697e:	rex push rbp
   140026980:	sub    rsp,0x20
   140026984:	mov    rbp,rdx
   140026987:	mov    ecx,0xb
   14002698c:	add    rsp,0x20
   140026990:	pop    rbp
   140026991:	jmp    0x14000897c
   140026996:	int3   
   140026997:	rex push rbp
   140026999:	sub    rsp,0x20
   14002699d:	mov    rbp,rdx
   1400269a0:	cmp    DWORD PTR [rbp+0x20],0x0
   1400269a4:	jne    0x1400269c8
   1400269a6:	movsxd rcx,DWORD PTR [rbp+0x48]
   1400269aa:	mov    rax,rcx
   1400269ad:	sar    rax,0x5
   1400269b1:	lea    rdx,[rip+0x11cd8]        # 0x140038690
   1400269b8:	and    ecx,0x1f
   1400269bb:	imul   rcx,rcx,0x58
   1400269bf:	mov    rax,QWORD PTR [rdx+rax*8]
   1400269c3:	and    BYTE PTR [rax+rcx*1+0x8],0xfe
   1400269c8:	mov    ecx,DWORD PTR [rbp+0x48]
   1400269cb:	call   0x14002142c
   1400269d0:	nop
   1400269d1:	add    rsp,0x20
   1400269d5:	pop    rbp
   1400269d6:	ret    
   1400269d7:	int3   
   1400269d8:	rex push rbp
   1400269da:	sub    rsp,0x20
   1400269de:	mov    rbp,rdx
   1400269e1:	mov    ecx,DWORD PTR [rbp+0x50]
   1400269e4:	add    rsp,0x20
   1400269e8:	pop    rbp
   1400269e9:	jmp    0x14002142c
   1400269ee:	int3   
   1400269ef:	rex push rbp
   1400269f1:	sub    rsp,0x20
   1400269f5:	mov    rbp,rdx
   1400269f8:	mov    ecx,0x3
   1400269fd:	add    rsp,0x20
   140026a01:	pop    rbp
   140026a02:	jmp    0x14000897c
   140026a07:	int3   
   140026a08:	rex push rbp
   140026a0a:	sub    rsp,0x20
   140026a0e:	mov    rbp,rdx
   140026a11:	mov    ecx,DWORD PTR [rbp+0x40]
   140026a14:	add    rsp,0x20
   140026a18:	pop    rbp
   140026a19:	jmp    0x14002142c
   140026a1e:	int3   
   140026a1f:	int3   
   140026a20:	lea    rax,[rip+0xae1]        # 0x140027508
   140026a27:	mov    QWORD PTR [rip+0xf5d2],rax        # 0x140036000
   140026a2e:	ret    
   140026a2f:	int3   
   140026a30:	lea    rax,[rip+0xad1]        # 0x140027508
   140026a37:	mov    QWORD PTR [rip+0xf5ca],rax        # 0x140036008
   140026a3e:	ret    
   140026a3f:	int3   
   140026a40:	lea    rax,[rip+0xac1]        # 0x140027508
   140026a47:	mov    QWORD PTR [rip+0xf5c2],rax        # 0x140036010
   140026a4e:	ret    
   140026a4f:	int3   
   140026a50:	sub    rsp,0x28
   140026a54:	cmp    QWORD PTR [rip+0xf5f4],0x8        # 0x140036050
   140026a5c:	jb     0x140026a9c
   140026a5e:	lea    rcx,[rsp+0x30]
   140026a63:	mov    QWORD PTR [rsp+0x20],rbx
   140026a68:	mov    rbx,QWORD PTR [rip+0xf5c9]        # 0x140036038
   140026a6f:	call   0x140001610
   140026a74:	lea    rdx,[rip+0xf5bd]        # 0x140036038
   140026a7b:	lea    rcx,[rsp+0x30]
   140026a80:	call   0x140001520
   140026a85:	lea    rcx,[rsp+0x30]
   140026a8a:	call   0x140001610
   140026a8f:	mov    rcx,rbx
   140026a92:	call   0x140005454
   140026a97:	mov    rbx,QWORD PTR [rsp+0x20]
   140026a9c:	xor    eax,eax
   140026a9e:	mov    QWORD PTR [rip+0xf5a7],0x7        # 0x140036050
   140026aa9:	mov    QWORD PTR [rip+0xf598],rax        # 0x140036048
   140026ab0:	mov    WORD PTR [rip+0xf581],ax        # 0x140036038
   140026ab7:	add    rsp,0x28
   140026abb:	ret    
   140026abc:	int3   
   140026abd:	int3   
   140026abe:	int3   
   140026abf:	int3   
   140026ac0:	sub    rsp,0x28
   140026ac4:	cmp    QWORD PTR [rip+0xf5c4],0x8        # 0x140036090
   140026acc:	jb     0x140026b0c
   140026ace:	lea    rcx,[rsp+0x30]
   140026ad3:	mov    QWORD PTR [rsp+0x20],rbx
   140026ad8:	mov    rbx,QWORD PTR [rip+0xf599]        # 0x140036078
   140026adf:	call   0x140001610
   140026ae4:	lea    rdx,[rip+0xf58d]        # 0x140036078
   140026aeb:	lea    rcx,[rsp+0x30]
   140026af0:	call   0x140001520
   140026af5:	lea    rcx,[rsp+0x30]
   140026afa:	call   0x140001610
   140026aff:	mov    rcx,rbx
   140026b02:	call   0x140005454
   140026b07:	mov    rbx,QWORD PTR [rsp+0x20]
   140026b0c:	xor    eax,eax
   140026b0e:	mov    QWORD PTR [rip+0xf577],0x7        # 0x140036090
   140026b19:	mov    QWORD PTR [rip+0xf568],rax        # 0x140036088
   140026b20:	mov    WORD PTR [rip+0xf551],ax        # 0x140036078
   140026b27:	add    rsp,0x28
   140026b2b:	ret    
   140026b2c:	int3   
   140026b2d:	int3   
   140026b2e:	int3   
   140026b2f:	int3   
   140026b30:	sub    rsp,0x28
   140026b34:	cmp    QWORD PTR [rip+0xf574],0x8        # 0x1400360b0
   140026b3c:	jb     0x140026b7c
   140026b3e:	lea    rcx,[rsp+0x30]
   140026b43:	mov    QWORD PTR [rsp+0x20],rbx
   140026b48:	mov    rbx,QWORD PTR [rip+0xf549]        # 0x140036098
   140026b4f:	call   0x140001610
   140026b54:	lea    rdx,[rip+0xf53d]        # 0x140036098
   140026b5b:	lea    rcx,[rsp+0x30]
   140026b60:	call   0x140001520
   140026b65:	lea    rcx,[rsp+0x30]
   140026b6a:	call   0x140001610
   140026b6f:	mov    rcx,rbx
   140026b72:	call   0x140005454
   140026b77:	mov    rbx,QWORD PTR [rsp+0x20]
   140026b7c:	xor    eax,eax
   140026b7e:	mov    QWORD PTR [rip+0xf527],0x7        # 0x1400360b0
   140026b89:	mov    QWORD PTR [rip+0xf518],rax        # 0x1400360a8
   140026b90:	mov    WORD PTR [rip+0xf501],ax        # 0x140036098
   140026b97:	add    rsp,0x28
   140026b9b:	ret    
   140026b9c:	int3   
   140026b9d:	int3   
   140026b9e:	int3   
   140026b9f:	int3   
   140026ba0:	sub    rsp,0x28
   140026ba4:	cmp    QWORD PTR [rip+0xf4c4],0x8        # 0x140036070
   140026bac:	jb     0x140026bec
   140026bae:	lea    rcx,[rsp+0x30]
   140026bb3:	mov    QWORD PTR [rsp+0x20],rbx
   140026bb8:	mov    rbx,QWORD PTR [rip+0xf499]        # 0x140036058
   140026bbf:	call   0x140001610
   140026bc4:	lea    rdx,[rip+0xf48d]        # 0x140036058
   140026bcb:	lea    rcx,[rsp+0x30]
   140026bd0:	call   0x140001520
   140026bd5:	lea    rcx,[rsp+0x30]
   140026bda:	call   0x140001610
   140026bdf:	mov    rcx,rbx
   140026be2:	call   0x140005454
   140026be7:	mov    rbx,QWORD PTR [rsp+0x20]
   140026bec:	xor    eax,eax
   140026bee:	mov    QWORD PTR [rip+0xf477],0x7        # 0x140036070
   140026bf9:	mov    QWORD PTR [rip+0xf468],rax        # 0x140036068
   140026c00:	mov    WORD PTR [rip+0xf451],ax        # 0x140036058
   140026c07:	add    rsp,0x28
   140026c0b:	ret    
   140026c0c:	int3   
   140026c0d:	int3   
   140026c0e:	int3   
   140026c0f:	int3   
   140026c10:	sub    rsp,0x28
   140026c14:	cmp    QWORD PTR [rip+0xf414],0x8        # 0x140036030
   140026c1c:	jb     0x140026c5c
   140026c1e:	lea    rcx,[rsp+0x30]
   140026c23:	mov    QWORD PTR [rsp+0x20],rbx
   140026c28:	mov    rbx,QWORD PTR [rip+0xf3e9]        # 0x140036018
   140026c2f:	call   0x140001610
   140026c34:	lea    rdx,[rip+0xf3dd]        # 0x140036018
   140026c3b:	lea    rcx,[rsp+0x30]
   140026c40:	call   0x140001520
   140026c45:	lea    rcx,[rsp+0x30]
   140026c4a:	call   0x140001610
   140026c4f:	mov    rcx,rbx
   140026c52:	call   0x140005454
   140026c57:	mov    rbx,QWORD PTR [rsp+0x20]
   140026c5c:	xor    eax,eax
   140026c5e:	mov    QWORD PTR [rip+0xf3c7],0x7        # 0x140036030
   140026c69:	mov    QWORD PTR [rip+0xf3b8],rax        # 0x140036028
   140026c70:	mov    WORD PTR [rip+0xf3a1],ax        # 0x140036018
   140026c77:	add    rsp,0x28
   140026c7b:	ret    
   140026c7c:	lea    rax,[rip+0x885]        # 0x140027508
   140026c83:	mov    QWORD PTR [rip+0xf376],rax        # 0x140036000
   140026c8a:	ret    
   140026c8b:	int3   
   140026c8c:	lea    rax,[rip+0x875]        # 0x140027508
   140026c93:	mov    QWORD PTR [rip+0xf36e],rax        # 0x140036008
   140026c9a:	ret    
   140026c9b:	int3   
   140026c9c:	lea    rax,[rip+0x865]        # 0x140027508
   140026ca3:	mov    QWORD PTR [rip+0xf366],rax        # 0x140036010
   140026caa:	ret    
   140026cab:	int3   
   140026cac:	lea    rax,[rip+0x855]        # 0x140027508
   140026cb3:	mov    QWORD PTR [rip+0xf346],rax        # 0x140036000
   140026cba:	ret    
   140026cbb:	int3   
   140026cbc:	lea    rax,[rip+0x845]        # 0x140027508
   140026cc3:	mov    QWORD PTR [rip+0xf33e],rax        # 0x140036008
   140026cca:	ret    
   140026ccb:	int3   
   140026ccc:	lea    rax,[rip+0x835]        # 0x140027508
   140026cd3:	mov    QWORD PTR [rip+0xf336],rax        # 0x140036010
   140026cda:	ret    

Disassembly of section .rdata:

0000000140027000 <.rdata>:
   140027000:	(bad)  
   140027001:	push   rdx
   140027002:	add    eax,DWORD PTR [rax]
   140027004:	add    BYTE PTR [rax],al
   140027006:	add    BYTE PTR [rax],al
   140027008:	enter  0x352,0x0
   14002700c:	add    BYTE PTR [rax],al
   14002700e:	add    BYTE PTR [rax],al
   140027010:	out    0x52,al
   140027012:	add    eax,DWORD PTR [rax]
	...
   140027020:	pop    rsi
   140027021:	push   rdx
   140027022:	add    eax,DWORD PTR [rax]
   140027024:	add    BYTE PTR [rax],al
   140027026:	add    BYTE PTR [rax],al
   140027028:	je     0x14002707c
   14002702a:	add    eax,DWORD PTR [rax]
   14002702c:	add    BYTE PTR [rax],al
   14002702e:	add    BYTE PTR [rax],al
   140027030:	xchg   BYTE PTR [rdx+0x3],dl
   140027033:	add    BYTE PTR [rax],al
   140027035:	add    BYTE PTR [rax],al
   140027037:	add    BYTE PTR [rax+0x52],dl
   14002703a:	add    eax,DWORD PTR [rax]
   14002703c:	add    BYTE PTR [rax],al
   14002703e:	add    BYTE PTR [rax],al
   140027040:	scas   al,BYTE PTR es:[rdi]
   140027041:	pop    rax
   140027042:	add    eax,DWORD PTR [rax]
   140027044:	add    BYTE PTR [rax],al
   140027046:	add    BYTE PTR [rax],al
   140027048:	(bad)  
   140027049:	pop    rax
   14002704a:	add    eax,DWORD PTR [rax]
   14002704c:	add    BYTE PTR [rax],al
   14002704e:	add    BYTE PTR [rax],al
   140027050:	mov    bl,BYTE PTR [rax+0x3]
   140027053:	add    BYTE PTR [rax],al
   140027055:	add    BYTE PTR [rax],al
   140027057:	add    BYTE PTR [rdx],bh
   140027059:	push   rdx
   14002705a:	add    eax,DWORD PTR [rax]
   14002705c:	add    BYTE PTR [rax],al
   14002705e:	add    BYTE PTR [rax],al
   140027060:	and    dl,BYTE PTR [rdx+0x3]
   140027063:	add    BYTE PTR [rax],al
   140027065:	add    BYTE PTR [rax],al
   140027067:	add    BYTE PTR [rax],dl
   140027069:	push   rdx
   14002706a:	add    eax,DWORD PTR [rax]
   14002706c:	add    BYTE PTR [rax],al
   14002706e:	add    BYTE PTR [rax],al
   140027070:	or     BYTE PTR [rbx+0x3],dl
   140027073:	add    BYTE PTR [rax],al
   140027075:	add    BYTE PTR [rax],al
   140027077:	add    BYTE PTR [rax],bl
   140027079:	push   rbx
   14002707a:	add    eax,DWORD PTR [rax]
   14002707c:	add    BYTE PTR [rax],al
   14002707e:	add    BYTE PTR [rax],al
   140027080:	sub    BYTE PTR [rbx+0x3],dl
   140027083:	add    BYTE PTR [rax],al
   140027085:	add    BYTE PTR [rax],al
   140027087:	add    BYTE PTR [rax],bh
   140027089:	push   rbx
   14002708a:	add    eax,DWORD PTR [rax]
   14002708c:	add    BYTE PTR [rax],al
   14002708e:	add    BYTE PTR [rax],al
   140027090:	rex.RX push rbx
   140027092:	add    eax,DWORD PTR [rax]
   140027094:	add    BYTE PTR [rax],al
   140027096:	add    BYTE PTR [rax],al
   140027098:	pop    rsp
   140027099:	push   rbx
   14002709a:	add    eax,DWORD PTR [rax]
   14002709c:	add    BYTE PTR [rax],al
   14002709e:	add    BYTE PTR [rax],al
   1400270a0:	outs   dx,BYTE PTR ds:[rsi]
   1400270a1:	push   rbx
   1400270a2:	add    eax,DWORD PTR [rax]
   1400270a4:	add    BYTE PTR [rax],al
   1400270a6:	add    BYTE PTR [rax],al
   1400270a8:	adc    BYTE PTR [rbx+0x3],0x0
   1400270ac:	add    BYTE PTR [rax],al
   1400270ae:	add    BYTE PTR [rax],al
   1400270b0:	xchg   esi,eax
   1400270b1:	push   rbx
   1400270b2:	add    eax,DWORD PTR [rax]
   1400270b4:	add    BYTE PTR [rax],al
   1400270b6:	add    BYTE PTR [rax],al
   1400270b8:	lods   al,BYTE PTR ds:[rsi]
   1400270b9:	push   rbx
   1400270ba:	add    eax,DWORD PTR [rax]
   1400270bc:	add    BYTE PTR [rax],al
   1400270be:	add    BYTE PTR [rax],al
   1400270c0:	mov    eax,0x353
   1400270c5:	add    BYTE PTR [rax],al
   1400270c7:	add    ah,al
   1400270c9:	push   rbx
   1400270ca:	add    eax,DWORD PTR [rax]
   1400270cc:	add    BYTE PTR [rax],al
   1400270ce:	add    BYTE PTR [rax],al
   1400270d0:	fcom   DWORD PTR [rbx+0x3]
   1400270d3:	add    BYTE PTR [rax],al
   1400270d5:	add    BYTE PTR [rax],al
   1400270d7:	add    dl,ch
   1400270d9:	push   rbx
   1400270da:	add    eax,DWORD PTR [rax]
   1400270dc:	add    BYTE PTR [rax],al
   1400270de:	add    BYTE PTR [rax],al
   1400270e0:	add    al,0x54
   1400270e2:	add    eax,DWORD PTR [rax]
   1400270e4:	add    BYTE PTR [rax],al
   1400270e6:	add    BYTE PTR [rax],al
   1400270e8:	adc    dl,BYTE PTR [rbx+rax*1+0x0]
   1400270ec:	add    BYTE PTR [rax],al
   1400270ee:	add    BYTE PTR [rax],al
   1400270f0:	and    al,0x54
   1400270f2:	add    eax,DWORD PTR [rax]
   1400270f4:	add    BYTE PTR [rax],al
   1400270f6:	add    BYTE PTR [rax],al
   1400270f8:	rex push rsp
   1400270fa:	add    eax,DWORD PTR [rax]
   1400270fc:	add    BYTE PTR [rax],al
   1400270fe:	add    BYTE PTR [rax],al
   140027100:	rex.WR push rsp
   140027102:	add    eax,DWORD PTR [rax]
   140027104:	add    BYTE PTR [rax],al
   140027106:	add    BYTE PTR [rax],al
   140027108:	(bad)  
   140027109:	push   rsp
   14002710a:	add    eax,DWORD PTR [rax]
   14002710c:	add    BYTE PTR [rax],al
   14002710e:	add    BYTE PTR [rax],al
   140027110:	js     0x140027166
   140027112:	add    eax,DWORD PTR [rax]
   140027114:	add    BYTE PTR [rax],al
   140027116:	add    BYTE PTR [rax],al
   140027118:	nop
   140027119:	push   rsp
   14002711a:	add    eax,DWORD PTR [rax]
   14002711c:	add    BYTE PTR [rax],al
   14002711e:	add    BYTE PTR [rax],al
   140027120:	test   al,0x54
   140027122:	add    eax,DWORD PTR [rax]
   140027124:	add    BYTE PTR [rax],al
   140027126:	add    BYTE PTR [rax],al
   140027128:	mov    eax,0x354
   14002712d:	add    BYTE PTR [rax],al
   14002712f:	add    ah,cl
   140027131:	push   rsp
   140027132:	add    eax,DWORD PTR [rax]
   140027134:	add    BYTE PTR [rax],al
   140027136:	add    BYTE PTR [rax],al
   140027138:	loopne 0x14002718e
   14002713a:	add    eax,DWORD PTR [rax]
   14002713c:	add    BYTE PTR [rax],al
   14002713e:	add    BYTE PTR [rax],al
   140027140:	cld    
   140027141:	push   rsp
   140027142:	add    eax,DWORD PTR [rax]
   140027144:	add    BYTE PTR [rax],al
   140027146:	add    BYTE PTR [rax],al
   140027148:	sbb    dl,BYTE PTR [rbp+0x3]
   14002714b:	add    BYTE PTR [rax],al
   14002714d:	add    BYTE PTR [rax],al
   14002714f:	add    BYTE PTR [rdx],ch
   140027151:	push   rbp
   140027152:	add    eax,DWORD PTR [rax]
   140027154:	add    BYTE PTR [rax],al
   140027156:	add    BYTE PTR [rax],al
   140027158:	push   rdx
   140027159:	push   rbp
   14002715a:	add    eax,DWORD PTR [rax]
   14002715c:	add    BYTE PTR [rax],al
   14002715e:	add    BYTE PTR [rax],al
   140027160:	(bad)  
   140027161:	push   rbp
   140027162:	add    eax,DWORD PTR [rax]
   140027164:	add    BYTE PTR [rax],al
   140027166:	add    BYTE PTR [rax],al
   140027168:	push   0x55
   14002716a:	add    eax,DWORD PTR [rax]
   14002716c:	add    BYTE PTR [rax],al
   14002716e:	add    BYTE PTR [rax],al
   140027170:	jle    0x1400271c7
   140027172:	add    eax,DWORD PTR [rax]
   140027174:	add    BYTE PTR [rax],al
   140027176:	add    BYTE PTR [rax],al
   140027178:	xchg   edx,eax
   140027179:	push   rbp
   14002717a:	add    eax,DWORD PTR [rax]
   14002717c:	add    BYTE PTR [rax],al
   14002717e:	add    BYTE PTR [rax],al
   140027180:	sahf   
   140027181:	push   rbp
   140027182:	add    eax,DWORD PTR [rax]
   140027184:	add    BYTE PTR [rax],al
   140027186:	add    BYTE PTR [rax],al
   140027188:	lods   al,BYTE PTR ds:[rsi]
   140027189:	push   rbp
   14002718a:	add    eax,DWORD PTR [rax]
   14002718c:	add    BYTE PTR [rax],al
   14002718e:	add    BYTE PTR [rax],al
   140027190:	mov    edx,0x355
   140027195:	add    BYTE PTR [rax],al
   140027197:	add    ah,al
   140027199:	push   rbp
   14002719a:	add    eax,DWORD PTR [rax]
   14002719c:	add    BYTE PTR [rax],al
   14002719e:	add    BYTE PTR [rax],al
   1400271a0:	(bad)  
   1400271a1:	push   rbp
   1400271a2:	add    eax,DWORD PTR [rax]
   1400271a4:	add    BYTE PTR [rax],al
   1400271a6:	add    BYTE PTR [rax],al
   1400271a8:	out    0x55,al
   1400271aa:	add    eax,DWORD PTR [rax]
   1400271ac:	add    BYTE PTR [rax],al
   1400271ae:	add    BYTE PTR [rax],al
   1400271b0:	cli    
   1400271b1:	push   rbp
   1400271b2:	add    eax,DWORD PTR [rax]
   1400271b4:	add    BYTE PTR [rax],al
   1400271b6:	add    BYTE PTR [rax],al
   1400271b8:	(bad)  
   1400271b9:	push   rsi
   1400271ba:	add    eax,DWORD PTR [rax]
   1400271bc:	add    BYTE PTR [rax],al
   1400271be:	add    BYTE PTR [rax],al
   1400271c0:	(bad)  
   1400271c1:	push   rsi
   1400271c2:	add    eax,DWORD PTR [rax]
   1400271c4:	add    BYTE PTR [rax],al
   1400271c6:	add    BYTE PTR [rax],al
   1400271c8:	sub    dl,BYTE PTR [rsi+0x3]
   1400271cb:	add    BYTE PTR [rax],al
   1400271cd:	add    BYTE PTR [rax],al
   1400271cf:	add    BYTE PTR [rax+0x56],al
   1400271d2:	add    eax,DWORD PTR [rax]
   1400271d4:	add    BYTE PTR [rax],al
   1400271d6:	add    BYTE PTR [rax],al
   1400271d8:	pop    rax
   1400271d9:	push   rsi
   1400271da:	add    eax,DWORD PTR [rax]
   1400271dc:	add    BYTE PTR [rax],al
   1400271de:	add    BYTE PTR [rax],al
   1400271e0:	push   si
   1400271e2:	add    eax,DWORD PTR [rax]
   1400271e4:	add    BYTE PTR [rax],al
   1400271e6:	add    BYTE PTR [rax],al
   1400271e8:	js     0x140027240
   1400271ea:	add    eax,DWORD PTR [rax]
   1400271ec:	add    BYTE PTR [rax],al
   1400271ee:	add    BYTE PTR [rax],al
   1400271f0:	mov    dl,BYTE PTR [rsi+0x3]
   1400271f3:	add    BYTE PTR [rax],al
   1400271f5:	add    BYTE PTR [rax],al
   1400271f7:	add    BYTE PTR [rsi+rdx*2+0x3],dl
   1400271fe:	add    BYTE PTR [rax],al
   140027200:	movabs al,ds:0xac00000000000356
   140027209:	push   rsi
   14002720a:	add    eax,DWORD PTR [rax]
   14002720c:	add    BYTE PTR [rax],al
   14002720e:	add    BYTE PTR [rax],al
   140027210:	mov    esi,0x356
   140027215:	add    BYTE PTR [rax],al
   140027217:	add    dl,dl
   140027219:	push   rsi
   14002721a:	add    eax,DWORD PTR [rax]
   14002721c:	add    BYTE PTR [rax],al
   14002721e:	add    BYTE PTR [rax],al
   140027220:	call   0x14002757b
   140027225:	add    BYTE PTR [rax],al
   140027227:	add    dh,dh
   140027229:	push   rsi
   14002722a:	add    eax,DWORD PTR [rax]
   14002722c:	add    BYTE PTR [rax],al
   14002722e:	add    BYTE PTR [rax],al
   140027230:	or     al,0x57
   140027232:	add    eax,DWORD PTR [rax]
   140027234:	add    BYTE PTR [rax],al
   140027236:	add    BYTE PTR [rax],al
   140027238:	es push rdi
   14002723a:	add    eax,DWORD PTR [rax]
   14002723c:	add    BYTE PTR [rax],al
   14002723e:	add    BYTE PTR [rax],al
   140027240:	cmp    al,0x57
   140027242:	add    eax,DWORD PTR [rax]
   140027244:	add    BYTE PTR [rax],al
   140027246:	add    BYTE PTR [rax],al
   140027248:	push   rsi
   140027249:	push   rdi
   14002724a:	add    eax,DWORD PTR [rax]
   14002724c:	add    BYTE PTR [rax],al
   14002724e:	add    BYTE PTR [rax],al
   140027250:	jo     0x1400272a9
   140027252:	add    eax,DWORD PTR [rax]
   140027254:	add    BYTE PTR [rax],al
   140027256:	add    BYTE PTR [rax],al
   140027258:	mov    dl,BYTE PTR [rdi+0x3]
   14002725b:	add    BYTE PTR [rax],al
   14002725d:	add    BYTE PTR [rax],al
   14002725f:	add    BYTE PTR [rdi+rdx*2+0x3],bl
   140027266:	add    BYTE PTR [rax],al
   140027268:	scas   al,BYTE PTR es:[rdi]
   140027269:	push   rdi
   14002726a:	add    eax,DWORD PTR [rax]
   14002726c:	add    BYTE PTR [rax],al
   14002726e:	add    BYTE PTR [rax],al
   140027270:	rcl    BYTE PTR [rdi+0x3],0x0
   140027274:	add    BYTE PTR [rax],al
   140027276:	add    BYTE PTR [rax],al
   140027278:	rcl    BYTE PTR [rdi+0x3],1
   14002727b:	add    BYTE PTR [rax],al
   14002727d:	add    BYTE PTR [rax],al
   14002727f:	add    dl,ah
   140027281:	push   rdi
   140027282:	add    eax,DWORD PTR [rax]
   140027284:	add    BYTE PTR [rax],al
   140027286:	add    BYTE PTR [rax],al
   140027288:	repnz push rdi
   14002728a:	add    eax,DWORD PTR [rax]
   14002728c:	add    BYTE PTR [rax],al
   14002728e:	add    BYTE PTR [rax],al
   140027290:	or     BYTE PTR [rax+0x3],bl
   140027293:	add    BYTE PTR [rax],al
   140027295:	add    BYTE PTR [rax],al
   140027297:	add    BYTE PTR [rsi],bl
   140027299:	pop    rax
   14002729a:	add    eax,DWORD PTR [rax]
   14002729c:	add    BYTE PTR [rax],al
   14002729e:	add    BYTE PTR [rax],al
   1400272a0:	sub    al,0x58
   1400272a2:	add    eax,DWORD PTR [rax]
   1400272a4:	add    BYTE PTR [rax],al
   1400272a6:	add    BYTE PTR [rax],al
   1400272a8:	rex.X pop rax
   1400272aa:	add    eax,DWORD PTR [rax]
   1400272ac:	add    BYTE PTR [rax],al
   1400272ae:	add    BYTE PTR [rax],al
   1400272b0:	push   rsp
   1400272b1:	pop    rax
   1400272b2:	add    eax,DWORD PTR [rax]
   1400272b4:	add    BYTE PTR [rax],al
   1400272b6:	add    BYTE PTR [rax],al
   1400272b8:	push   0x358
   1400272bd:	add    BYTE PTR [rax],al
   1400272bf:	add    BYTE PTR [rax+0x58],bh
   1400272c2:	add    eax,DWORD PTR [rax]
   1400272c4:	add    BYTE PTR [rax],al
   1400272c6:	add    BYTE PTR [rax],al
   1400272c8:	mov    esi,0x358
	...
   1400272d5:	add    BYTE PTR [rax],al
   1400272d7:	add    BYTE PTR [rax+0x352],ah
   1400272dd:	add    BYTE PTR [rax],al
   1400272df:	add    BYTE PTR [rsi+0x352],ch
	...
   1400272f5:	add    BYTE PTR [rax],al
   1400272f7:	add    BYTE PTR [rax+0x1400010],dl
   1400272fd:	add    BYTE PTR [rax],al
   1400272ff:	add    BYTE PTR [rax],dh
   140027301:	adc    BYTE PTR [rax],al
   140027303:	rex add DWORD PTR [rax],eax
   140027306:	add    BYTE PTR [rax],al
   140027308:	adc    BYTE PTR [rax],0x0
   14002730b:	rex add DWORD PTR [rax],eax
   14002730e:	add    BYTE PTR [rax],al
   140027310:	adc    BYTE PTR [rax],al
   140027313:	rex add DWORD PTR [rax],eax
   140027316:	add    BYTE PTR [rax],al
   140027318:	push   rax
   140027319:	adc    BYTE PTR [rax],al
   14002731b:	rex add DWORD PTR [rax],eax
   14002731e:	add    BYTE PTR [rax],al
   140027320:	add    BYTE PTR [rax],dl
   140027322:	add    BYTE PTR [rax+0x1],al
   140027325:	add    BYTE PTR [rax],al
   140027327:	add    BYTE PTR [rax],dl
   140027329:	adc    BYTE PTR [rax],al
   14002732b:	rex add DWORD PTR [rax],eax
   14002732e:	add    BYTE PTR [rax],al
   140027330:	and    BYTE PTR [rax],dl
   140027332:	add    BYTE PTR [rax+0x1],al
	...
   140027345:	add    BYTE PTR [rax],al
   140027347:	add    BYTE PTR [rsp+rdx*2+0x0],bl
   14002734b:	rex add DWORD PTR [rax],eax
   14002734e:	add    BYTE PTR [rax],al
   140027350:	hlt    
   140027351:	(bad)  
   140027352:	add    BYTE PTR [rax+0x1],al
   140027355:	add    BYTE PTR [rax],al
   140027357:	add    al,bl
   140027359:	lahf   
   14002735a:	add    BYTE PTR [rax+0x1],al
   14002735d:	add    BYTE PTR [rax],al
   14002735f:	add    BYTE PTR [rsi+rax*1+0x1],ah
   140027363:	rex add DWORD PTR [rax],eax
   140027366:	add    BYTE PTR [rax],al
   140027368:	cmp    al,0xe2
   14002736a:	add    BYTE PTR [rax+0x1],al
	...
   14002737d:	add    BYTE PTR [rax],al
   14002737f:	add    BYTE PTR [rax-0x3a],dh
   140027382:	add    DWORD PTR [rax+0x1],eax
   140027385:	add    BYTE PTR [rax],al
   140027387:	add    BYTE PTR [rax+rax*2],cl
   14002738a:	add    al,BYTE PTR [rax+0x1]
   14002738d:	add    BYTE PTR [rax],al
   14002738f:	add    ah,bh
   140027391:	(bad)  
   140027392:	add    DWORD PTR [rax+0x1],eax
	...
   1400273b1:	add    BYTE PTR [rax],al
   1400273b3:	add    al,bl
   1400273b5:	sub    DWORD PTR [rbx+0x58],ecx
   1400273bb:	add    BYTE PTR [rdx],al
   1400273bd:	add    BYTE PTR [rax],al
   1400273bf:	add    BYTE PTR [rax+0x0],cl
   1400273c2:	add    BYTE PTR [rax],al
   1400273c4:	mov    al,0xa
   1400273c6:	add    eax,DWORD PTR [rax]
   1400273c8:	mov    al,0xfc
   1400273ca:	add    al,BYTE PTR [rax]
   1400273cc:	add    BYTE PTR [rax],al
   1400273ce:	add    BYTE PTR [rax],al
   1400273d0:	fsubr  DWORD PTR [rcx]
   1400273d2:	mov    ebx,DWORD PTR [rax+0x0]
   1400273d5:	add    BYTE PTR [rax],al
   1400273d7:	add    BYTE PTR [rax+rax*1],cl
   1400273da:	add    BYTE PTR [rax],al
   1400273dc:	adc    al,0x0
   1400273de:	add    BYTE PTR [rax],al
   1400273e0:	clc    
   1400273e1:	or     al,BYTE PTR [rbx]
   1400273e3:	add    al,bh
   1400273e5:	cld    
   1400273e6:	add    al,BYTE PTR [rax]
   1400273e8:	and    al,BYTE PTR [rip+0x41993]        # 0x140068d81
   1400273ee:	add    BYTE PTR [rax],al
   1400273f0:	mov    eax,0x2000318
   1400273f5:	add    BYTE PTR [rax],al
   1400273f7:	add    al,bl
   1400273f9:	sbb    BYTE PTR [rbx],al
   1400273fb:	add    BYTE PTR [rax],cl
   1400273fd:	add    BYTE PTR [rax],al
   1400273ff:	add    BYTE PTR [rax],dh
   140027401:	sbb    DWORD PTR [rbx],eax
   140027403:	add    BYTE PTR [rax],ah
   140027405:	add    BYTE PTR [rax],al
   140027407:	add    BYTE PTR [rax],al
   140027409:	add    BYTE PTR [rax],al
   14002740b:	add    BYTE PTR [rcx],al
   14002740d:	add    BYTE PTR [rax],al
   14002740f:	add    BYTE PTR [rdx],ah
   140027411:	add    eax,0x41993
   140027416:	add    BYTE PTR [rax],al
   140027418:	(bad)  
   140027419:	sbb    eax,0x20003
   14002741e:	add    BYTE PTR [rax],al
   140027420:	in     al,0x1d
   140027422:	add    eax,DWORD PTR [rax]
   140027424:	or     BYTE PTR [rax],al
   140027426:	add    BYTE PTR [rax],al
   140027428:	rex (bad) 
   14002742a:	add    eax,DWORD PTR [rax]
   14002742c:	and    BYTE PTR [rax],al
   14002742e:	add    BYTE PTR [rax],al
   140027430:	add    BYTE PTR [rax],al
   140027432:	add    BYTE PTR [rax],al
   140027434:	add    DWORD PTR [rax],eax
   140027436:	add    BYTE PTR [rax],al
   140027438:	and    al,BYTE PTR [rip+0x11993]        # 0x140038dd1
   14002743e:	add    BYTE PTR [rax],al
   140027440:	ins    BYTE PTR es:[rdi],dx
   140027441:	and    BYTE PTR [rbx],al
	...
   14002744b:	add    BYTE PTR [rip+0x78000000],al        # 0x1b8027451
   140027451:	and    BYTE PTR [rbx],al
   140027453:	add    BYTE PTR [rax],ch
   140027455:	add    BYTE PTR [rax],al
   140027457:	add    BYTE PTR [rax],al
   140027459:	add    BYTE PTR [rax],al
   14002745b:	add    BYTE PTR [rcx],al
   14002745d:	add    BYTE PTR [rax],al
   14002745f:	add    BYTE PTR [rdx],ah
   140027461:	add    eax,0x41993
   140027466:	add    BYTE PTR [rax],al
   140027468:	in     al,dx
   140027469:	and    BYTE PTR [rbx],al
	...
   140027473:	add    BYTE PTR [rax+rax*1],cl
   140027476:	add    BYTE PTR [rax],al
   140027478:	adc    BYTE PTR [rcx],ah
   14002747a:	add    eax,DWORD PTR [rax]
   14002747c:	add    BYTE PTR [rax],0x0
   14002747f:	add    BYTE PTR [rax],al
   140027481:	add    BYTE PTR [rax],al
   140027483:	add    BYTE PTR [rcx],al
   140027485:	add    BYTE PTR [rax],al
   140027487:	add    BYTE PTR [rdx],ah
   140027489:	add    eax,0x41993
   14002748e:	add    BYTE PTR [rax],al
   140027490:	movabs al,ds:0x321
   140027499:	add    BYTE PTR [rax],al
   14002749b:	add    BYTE PTR [rip+0xffffffffc0000000],al        # 0x1000274a1
   1400274a1:	and    DWORD PTR [rbx],eax
   1400274a3:	add    BYTE PTR [rax],bh
   1400274a5:	add    BYTE PTR [rax],al
   1400274a7:	add    BYTE PTR [rax],al
   1400274a9:	add    BYTE PTR [rax],al
   1400274ab:	add    BYTE PTR [rcx],al
   1400274ad:	add    BYTE PTR [rax],al
   1400274af:	add    BYTE PTR [rdx],ah
   1400274b1:	add    eax,0x21993
   1400274b6:	add    BYTE PTR [rax],al
   1400274b8:	sbb    BYTE PTR [rdx],ah
   1400274ba:	add    eax,DWORD PTR [rax]
	...
   1400274c4:	add    eax,0x28000000
   1400274c9:	and    al,BYTE PTR [rbx]
   1400274cb:	add    BYTE PTR [rax+0x0],ch
   1400274d1:	add    BYTE PTR [rax],al
   1400274d3:	add    BYTE PTR [rcx],al
   1400274d5:	add    BYTE PTR [rax],al
   1400274d7:	add    BYTE PTR [rdx],ah
   1400274d9:	add    eax,0x21993
   1400274de:	add    BYTE PTR [rax],al
   1400274e0:	mov    BYTE PTR [rdx],ah
   1400274e2:	add    eax,DWORD PTR [rax]
   1400274e4:	add    DWORD PTR [rax],eax
   1400274e6:	add    BYTE PTR [rax],al
   1400274e8:	cwde   
   1400274e9:	and    al,BYTE PTR [rbx]
   1400274eb:	add    BYTE PTR [rip+0xffffffffc0000000],al        # 0x1000274f1
   1400274f1:	and    al,BYTE PTR [rbx]
   1400274f3:	add    BYTE PTR [rax],ah
   1400274f5:	add    BYTE PTR [rax],al
   1400274f7:	add    BYTE PTR [rax],al
   1400274f9:	add    BYTE PTR [rax],al
   1400274fb:	add    BYTE PTR [rcx],al
   1400274fd:	add    BYTE PTR [rax],al
   1400274ff:	add    BYTE PTR [rax],dl
   140027501:	or     eax,DWORD PTR [rbx]
   140027503:	rex add DWORD PTR [rax],eax
   140027506:	add    BYTE PTR [rax],al
   140027508:	(bad)  
   140027509:	sbb    al,BYTE PTR [rax]
   14002750b:	rex add DWORD PTR [rax],eax
   14002750e:	add    BYTE PTR [rax],al
   140027510:	adc    BYTE PTR [rbx+0x0],0x40
   140027514:	add    DWORD PTR [rax],eax
   140027516:	add    BYTE PTR [rax],al
   140027518:	adc    BYTE PTR [rbx+0x0],0x40
   14002751c:	add    DWORD PTR [rax],eax
   14002751e:	add    BYTE PTR [rax],al
   140027520:	movabs al,ds:0x200000000140002d
   140027529:	add    BYTE PTR cs:[rax+0x1],al
   14002752d:	add    BYTE PTR [rax],al
   14002752f:	add    BYTE PTR [rax+0x2e],al
   140027532:	add    BYTE PTR [rax+0x1],al
   140027535:	add    BYTE PTR [rax],al
   140027537:	add    BYTE PTR [rax+0x140030b],cl
   14002753d:	add    BYTE PTR [rax],al
   14002753f:	add    al,dl
   140027541:	sbb    DWORD PTR [rax],eax
   140027543:	rex add DWORD PTR [rax],eax
   140027546:	add    BYTE PTR [rax],al
   140027548:	add    BYTE PTR [rcx+0x0],0x40
   14002754c:	add    DWORD PTR [rax],eax
   14002754e:	add    BYTE PTR [rax],al
   140027550:	and    BYTE PTR [rax+0x0],al
   140027553:	rex add DWORD PTR [rax],eax
   140027556:	add    BYTE PTR [rax],al
   140027558:	movabs al,ds:0x200000000140002d
   140027561:	add    BYTE PTR cs:[rax+0x1],al
   140027565:	add    BYTE PTR [rax],al
   140027567:	add    BYTE PTR [rax+0x2e],al
   14002756a:	add    BYTE PTR [rax+0x1],al
   14002756d:	add    BYTE PTR [rax],al
   14002756f:	add    BYTE PTR [rdi+0x65],ah
   140027572:	outs   dx,BYTE PTR ds:[rsi]
   140027573:	gs jb  0x1400275df
   140027576:	movsxd eax,DWORD PTR [rax]
   140027578:	jne    0x1400275e8
   14002757a:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
   14002757e:	outs   dx,BYTE PTR ds:[rsi]
   14002757f:	and    BYTE PTR [rbp+0x72],ah
   140027582:	jb     0x1400275f3
   140027584:	jb     0x140027586
   140027586:	add    BYTE PTR [rax],al
   140027588:	or     BYTE PTR [rbx+rax*1],cl
   14002758b:	rex add DWORD PTR [rax],eax
   14002758e:	add    BYTE PTR [rax],al
   140027590:	add    BYTE PTR [rdx],bl
   140027592:	add    BYTE PTR [rax+0x1],al
   140027595:	add    BYTE PTR [rax],al
   140027597:	add    BYTE PTR [rax+0x1400041],dl
   14002759d:	add    BYTE PTR [rax],al
   14002759f:	add    BYTE PTR [rax+0x1400040],dl
   1400275a5:	add    BYTE PTR [rax],al
   1400275a7:	add    BYTE PTR [rax+0x140002d],ah
   1400275ad:	add    BYTE PTR [rax],al
   1400275af:	add    BYTE PTR [rax],ah
   1400275b1:	add    BYTE PTR cs:[rax+0x1],al
   1400275b5:	add    BYTE PTR [rax],al
   1400275b7:	add    BYTE PTR [rax+0x2e],al
   1400275ba:	add    BYTE PTR [rax+0x1],al
   1400275bd:	add    BYTE PTR [rax],al
   1400275bf:	add    BYTE PTR [rcx+0x6f],ch
   1400275c2:	jae    0x140027638
   1400275c4:	jb     0x14002762b
   1400275c6:	(bad)  
   1400275c7:	ins    DWORD PTR es:[rdi],dx
	...
   1400275d0:	imul   ebp,DWORD PTR [rdi+0x73],0x61657274
   1400275d7:	ins    DWORD PTR es:[rdi],dx
   1400275d8:	and    BYTE PTR [rbx+0x74],dh
   1400275db:	jb     0x140027642
   1400275dd:	(bad)  
   1400275de:	ins    DWORD PTR es:[rdi],dx
   1400275df:	and    BYTE PTR [rbp+0x72],ah
   1400275e2:	jb     0x140027653
   1400275e4:	jb     0x1400275e6
   1400275e6:	add    BYTE PTR [rax],al
   1400275e8:	nop
   1400275e9:	or     al,0x3
   1400275eb:	rex add DWORD PTR [rax],eax
   1400275ee:	add    BYTE PTR [rax],al
   1400275f0:	xor    BYTE PTR [rdx],bl
   1400275f2:	add    BYTE PTR [rax+0x1],al
   1400275f5:	add    BYTE PTR [rax],al
   1400275f7:	add    BYTE PTR [rax+0x1400041],ah
   1400275fd:	add    BYTE PTR [rax],al
   1400275ff:	add    al,ah
   140027601:	add    BYTE PTR [rax+0x1],al
   140027605:	add    BYTE PTR [rax],al
   140027607:	add    BYTE PTR [rax+0x2d],ah
   14002760a:	add    BYTE PTR [rax+0x1],al
   14002760d:	add    BYTE PTR [rax],al
   14002760f:	add    BYTE PTR [rax],ah
   140027611:	add    BYTE PTR cs:[rax+0x1],al
   140027615:	add    BYTE PTR [rax],al
   140027617:	add    BYTE PTR [rax+0x2e],al
   14002761a:	add    BYTE PTR [rax+0x1],al
   14002761d:	add    BYTE PTR [rax],al
   14002761f:	add    BYTE PTR [rbx+0x79],dh
   140027622:	jae    0x140027698
   140027624:	gs ins DWORD PTR es:[rdi],dx
	...
   14002762e:	add    BYTE PTR [rax],al
   140027630:	ins    DWORD PTR es:[rdi],dx
   140027631:	add    BYTE PTR [rcx+0x0],ah
   140027634:	je     0x140027636
   140027636:	ins    BYTE PTR es:[rdi],dx
   140027637:	add    BYTE PTR [rcx+0x0],ah
   14002763a:	(bad)  
   14002763b:	add    BYTE PTR [rbx+0x0],dh
   14002763e:	push   0x72006100
   140027643:	add    BYTE PTR [rbp+0x0],ah
   140027646:	add    BYTE PTR fs:[rsi],ch
   140027649:	add    BYTE PTR [rbx+0x0],dh
   14002764c:	jne    0x14002764e
   14002764e:	jo     0x140027650
   140027650:	jo     0x140027652
   140027652:	outs   dx,DWORD PTR ds:[rsi]
   140027653:	add    BYTE PTR [rdx+0x0],dh
   140027656:	je     0x140027658
   140027658:	jo     0x14002765a
   14002765a:	imul   eax,DWORD PTR [rax],0x67
   14002765d:	add    BYTE PTR [rsi],ch
   14002765f:	add    BYTE PTR [rdi+0x0],ah
   140027662:	add    BYTE PTR gs:[rax+rax*1+0x53],dh
   140027667:	add    BYTE PTR [rbp+0x0],dh
   14002766a:	jo     0x14002766c
   14002766c:	jo     0x14002766e
   14002766e:	outs   dx,DWORD PTR ds:[rsi]
   14002766f:	add    BYTE PTR [rdx+0x0],dh
   140027672:	je     0x140027674
   140027674:	push   rax
   140027675:	add    BYTE PTR [rcx+0x0],ah
   140027678:	movsxd eax,DWORD PTR [rax]
   14002767a:	imul   eax,DWORD PTR [rax],0x61
   14002767d:	add    BYTE PTR [rdi+0x0],ah
   140027680:	add    BYTE PTR gs:[rdx+0x0],dl
   140027684:	outs   dx,DWORD PTR ds:[rsi]
   140027685:	add    BYTE PTR [rdi+0x0],ch
   140027688:	je     0x14002768a
   14002768a:	add    BYTE PTR [rax],al
   14002768c:	add    BYTE PTR [rax],al
   14002768e:	add    BYTE PTR [rax],al
   140027690:	sub    eax,0x61006d00
   140027695:	add    BYTE PTR [rax+rax*1+0x6c],dh
   140027699:	add    BYTE PTR [rcx+0x0],ah
   14002769c:	(bad)  
   14002769d:	add    BYTE PTR [rdx+0x0],dh
   1400276a0:	outs   dx,DWORD PTR ds:[rsi]
   1400276a1:	add    BYTE PTR [rdi+0x0],ch
   1400276a4:	je     0x1400276a6
   1400276a6:	add    BYTE PTR [rax],al
   1400276a8:	pop    rsp
   1400276a9:	add    BYTE PTR [rdx+0x0],ah
   1400276ac:	imul   eax,DWORD PTR [rax],0x5c006e
   1400276b2:	ins    DWORD PTR es:[rdi],dx
   1400276b3:	add    BYTE PTR [rcx+0x0],ah
   1400276b6:	je     0x1400276b8
   1400276b8:	ins    BYTE PTR es:[rdi],dx
   1400276b9:	add    BYTE PTR [rcx+0x0],ah
   1400276bc:	(bad)  
   1400276bd:	add    BYTE PTR [rsi],ch
   1400276bf:	add    BYTE PTR [rbp+0x0],ah
   1400276c2:	js     0x1400276c4
   1400276c4:	add    BYTE PTR gs:[rax],al
   1400276c7:	add    BYTE PTR [rip+0x72006100],ch        # 0x1b202d7cd
   1400276cd:	add    BYTE PTR [rbx+0x0],ah
   1400276d0:	push   0x76006900
   1400276d5:	add    BYTE PTR [rbp+0x0],ah
   1400276d8:	jae    0x1400276da
   1400276da:	add    BYTE PTR [rax],al
   1400276dc:	add    BYTE PTR [rax],al
   1400276de:	add    BYTE PTR [rax],al
   1400276e0:	sub    eax,0x6f006c00
   1400276e5:	add    BYTE PTR [rdi+0x0],ah
   1400276e8:	data16 add BYTE PTR [rcx+0x0],ch
   1400276ec:	ins    BYTE PTR es:[rdi],dx
   1400276ed:	add    BYTE PTR [rbp+0x0],ah
	...
   1400276f8:	sub    eax,0x78006500
   1400276fd:	add    BYTE PTR [rax+rax*1+0x72],dh
   140027701:	add    BYTE PTR [rcx+0x0],ah
   140027704:	add    BYTE PTR [rax],al
   140027706:	add    BYTE PTR [rax],al
   140027708:	sub    eax,0x6e006900
   14002770d:	add    BYTE PTR [rbx+0x0],dh
   140027710:	je     0x140027712
   140027712:	(bad)  
   140027713:	add    BYTE PTR [rax+rax*1+0x6c],ch
   140027717:	add    BYTE PTR [rax+rax*1+0x6f],cl
   14002771b:	add    BYTE PTR [rbx+0x0],ah
   14002771e:	add    BYTE PTR [rax],al
   140027720:	(bad)  
   140027721:	add    BYTE PTR [rax],al
   140027723:	add    BYTE PTR [rax],al
   140027725:	add    BYTE PTR [rax],al
   140027727:	add    BYTE PTR [rcx],bh
   140027729:	add    BYTE PTR [rsi],ch
   14002772b:	add    BYTE PTR [rdx],dh
   14002772d:	add    BYTE PTR [rax],al
   14002772f:	add    BYTE PTR [rbx+0x0],dl
   140027732:	rex.WRXB add BYTE PTR [r14+0x0],r8b
   140027736:	push   rsp
   140027737:	add    BYTE PTR [rdi+0x0],dl
   14002773a:	add    BYTE PTR [r10+0x0],dl
   14002773e:	add    BYTE PTR [r8+rax*1+0x4d],r11b
   140027743:	add    BYTE PTR [rcx+0x0],ah
   140027746:	je     0x140027748
   140027748:	push   0x6f007700
   14002774d:	add    BYTE PTR [rdx+0x0],dh
   140027750:	imul   eax,DWORD PTR [rax],0x73
   140027753:	add    BYTE PTR [rax+rax*1+0x4d],bl
   140027757:	add    BYTE PTR [rcx+0x0],al
   14002775a:	push   rsp
   14002775b:	add    BYTE PTR [rax+rax*1+0x41],cl
   14002775f:	add    BYTE PTR [rdx+0x0],al
   140027762:	pop    rsp
   140027763:	add    BYTE PTR [rax],al
   140027765:	add    BYTE PTR [rax],al
   140027767:	add    BYTE PTR [rbp+0x0],cl
   14002776a:	add    BYTE PTR [r8+rax*1+0x4c],dl
   14002776f:	add    BYTE PTR [rcx+0x0],al
   140027772:	rex.X add BYTE PTR [rdx+0x0],dl
   140027776:	rex.WRXB add BYTE PTR [r15+0x0],r9b
   14002777a:	push   rsp
   14002777b:	add    BYTE PTR [rax],al
   14002777d:	add    BYTE PTR [rax],al
   14002777f:	add    BYTE PTR [rax],ah
   140027781:	add    BYTE PTR [rip+0x61007700],ch        # 0x1a102ee87
   140027787:	add    BYTE PTR [rcx+0x0],ch
   14002778a:	je     0x14002778c
   14002778c:	and    BYTE PTR [rax],al
   14002778e:	add    BYTE PTR [rax],al
   140027790:	and    BYTE PTR [rax],al
   140027792:	sub    eax,0x6f006c00
   140027797:	add    BYTE PTR [rdi+0x0],ah
   14002779a:	data16 add BYTE PTR [rcx+0x0],ch
   14002779e:	ins    BYTE PTR es:[rdi],dx
   14002779f:	add    BYTE PTR [rbp+0x0],ah
   1400277a2:	and    BYTE PTR [rax],al
   1400277a4:	and    al,BYTE PTR [rax]
   1400277a6:	add    BYTE PTR [rax],al
   1400277a8:	and    al,BYTE PTR [rax]
   1400277aa:	add    BYTE PTR [rax],al
   1400277ac:	add    BYTE PTR [rax],al
   1400277ae:	add    BYTE PTR [rax],al
   1400277b0:	and    BYTE PTR [rax],al
   1400277b2:	sub    eax,0x20007200
   1400277b7:	add    BYTE PTR [rdx],ah
   1400277b9:	add    BYTE PTR [rdi+0x0],ch
   1400277bc:	(bad)  
   1400277bd:	add    BYTE PTR [rdx+0x0],ch
   1400277c0:	and    BYTE PTR [rax],al
   1400277c2:	cmp    eax,0x6d002000
   1400277c7:	add    BYTE PTR [rcx+0x0],ah
   1400277ca:	je     0x1400277cc
   1400277cc:	ins    BYTE PTR es:[rdi],dx
   1400277cd:	add    BYTE PTR [rcx+0x0],ah
   1400277d0:	(bad)  
   1400277d1:	add    BYTE PTR [rsi],ch
   1400277d3:	add    BYTE PTR [rcx+0x0],ch
   1400277d6:	outs   dx,BYTE PTR ds:[rsi]
   1400277d7:	add    BYTE PTR [rax+rax*1+0x65],dh
   1400277db:	add    BYTE PTR [rdx+0x0],dh
   1400277de:	outs   dx,BYTE PTR ds:[rsi]
   1400277df:	add    BYTE PTR [rcx+0x0],ah
   1400277e2:	ins    BYTE PTR es:[rdi],dx
   1400277e3:	add    BYTE PTR [rsi],ch
   1400277e5:	add    BYTE PTR [rbx+0x0],dl
   1400277e8:	jne    0x1400277ea
   1400277ea:	jo     0x1400277ec
   1400277ec:	jo     0x1400277ee
   1400277ee:	outs   dx,DWORD PTR ds:[rsi]
   1400277ef:	add    BYTE PTR [rdx+0x0],dh
   1400277f2:	je     0x1400277f4
   1400277f4:	push   rbx
   1400277f5:	add    BYTE PTR [rdi+0x0],ch
   1400277f8:	data16 add BYTE PTR [rax+rax*1+0x77],dh
   1400277fd:	add    BYTE PTR [rcx+0x0],ah
   140027800:	jb     0x140027802
   140027802:	add    BYTE PTR gs:[rcx+0x0],cl
   140027806:	outs   dx,BYTE PTR ds:[rsi]
   140027807:	add    BYTE PTR [rbx+0x0],dh
   14002780a:	je     0x14002780c
   14002780c:	(bad)  
   14002780d:	add    BYTE PTR [rax+rax*1+0x6c],ch
   140027811:	add    BYTE PTR [rbp+0x0],ah
   140027814:	jb     0x140027816
   140027816:	rex.WR add BYTE PTR [rcx+0x0],r12b
   14002781a:	jne    0x14002781c
   14002781c:	outs   dx,BYTE PTR ds:[rsi]
   14002781d:	add    BYTE PTR [rbx+0x0],ah
   140027820:	push   0x72006500
   140027825:	add    BYTE PTR [rax],ch
   140027827:	add    BYTE PTR [rcx],ch
   140027829:	add    BYTE PTR [rbx],bh
   14002782b:	add    BYTE PTR [rax],ah
   14002782d:	add    BYTE PTR [rdi+0x0],ch
   140027830:	(bad)  
   140027831:	add    BYTE PTR [rdx+0x0],ch
   140027834:	add    BYTE PTR cs:[rax+rax*1+0x61],ch
   140027839:	add    BYTE PTR [rbp+0x0],dh
   14002783c:	outs   dx,BYTE PTR ds:[rsi]
   14002783d:	add    BYTE PTR [rbx+0x0],ah
   140027840:	push   0x69005700
   140027845:	add    BYTE PTR [rsi+0x0],ch
   140027848:	add    BYTE PTR fs:[rdi+0x0],ch
   14002784c:	ja     0x14002784e
   14002784e:	sub    BYTE PTR [rax],al
	...
   140027858:	(bad)  
   140027859:	add    BYTE PTR [rcx+0x0],cl
   14002785c:	rex.WRX add BYTE PTR [rbx+0x0],r10b
   140027860:	push   rsp
   140027861:	add    BYTE PTR [rcx+0x0],al
   140027864:	rex.WR add BYTE PTR [rax+rax*1+0x46],r9b
   140027869:	add    BYTE PTR [rdx+0x0],dl
   14002786c:	rex.WRXB add BYTE PTR [r13+0x0],r9b
   140027870:	rex.RX add BYTE PTR [rdi+0x0],r9b
   140027874:	rex.WR add BYTE PTR [rax+rax*1+0x45],r8b
   140027879:	add    BYTE PTR [rdx+0x0],dl
   14002787c:	(bad)  
   14002787d:	add    BYTE PTR [rax+rax*1],ch
   140027880:	(bad)  
   140027881:	add    BYTE PTR [rax],al
   140027883:	add    BYTE PTR [rdi],ah
   140027885:	add    BYTE PTR [rax+rax*1],ch
   140027888:	add    BYTE PTR [rax],al
   14002788a:	add    BYTE PTR [rax],al
   14002788c:	sub    DWORD PTR [rax],eax
   14002788e:	cmp    eax,DWORD PTR [rax]
	...
   140027898:	cmp    eax,DWORD PTR [rax]
   14002789a:	and    BYTE PTR [rax],al
   14002789c:	movsxd eax,DWORD PTR [rax]
   14002789e:	ins    BYTE PTR es:[rdi],dx
   14002789f:	add    BYTE PTR [rbp+0x0],ah
   1400278a2:	(bad)  
   1400278a3:	add    BYTE PTR [rdx+0x0],dh
   1400278a6:	and    BYTE PTR [rax],al
   1400278a8:	outs   dx,DWORD PTR ds:[rsi]
   1400278a9:	add    BYTE PTR [rdx+0x0],ah
   1400278ac:	push   0x0
   1400278ae:	cmp    eax,DWORD PTR [rax]
   1400278b0:	and    al,BYTE PTR [rax]
   1400278b2:	add    BYTE PTR [rax],al
   1400278b4:	add    BYTE PTR [rax],al
   1400278b6:	add    BYTE PTR [rax],al
   1400278b8:	jae    0x14002792e
   1400278ba:	jb     0x140027925
   1400278bc:	outs   dx,BYTE PTR ds:[rsi]
   1400278bd:	and    BYTE PTR [edi+ebp*2+0x6f],dh
   1400278c2:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
   1400278c6:	add    BYTE PTR [ecx+0x6e],ch
   1400278ca:	jbe    0x14002792d
   1400278cc:	ins    BYTE PTR es:[rdi],dx
   1400278cd:	imul   esp,DWORD PTR [rax+riz*1+0x73],0x6e697274
   1400278d5:	and    BYTE PTR [eax+0x6f],dh
   1400278d9:	jae    0x140027944
   1400278db:	je     0x140027946
   1400278dd:	outs   dx,DWORD PTR ds:[rsi]
   1400278de:	outs   dx,BYTE PTR ds:[rsi]
   1400278df:	add    BYTE PTR [rcx],bh
   1400278e1:	xor    ch,BYTE PTR cs:[rsi]
   1400278e4:	xor    BYTE PTR [rsi],ch
   1400278e6:	xor    eax,0x31303332
   1400278eb:	(bad)  
   1400278ec:	add    BYTE PTR [rax],al
   1400278ee:	add    BYTE PTR [rax],al
   1400278f0:	rex.WX (bad) 
   1400278f2:	outs   dx,BYTE PTR ds:[rsi]
   1400278f3:	and    BYTE PTR [rdx],dh
   1400278f5:	(bad)  
   1400278f6:	and    BYTE PTR [rdx],dh
   1400278f8:	xor    BYTE PTR [rcx],dh
   1400278fa:	(bad)  
   1400278fb:	add    BYTE PTR [rax],al
   1400278fd:	add    BYTE PTR [rax],al
   1400278ff:	add    BYTE PTR [rdx+0x69],ah
   140027902:	outs   dx,BYTE PTR ds:[rsi]
   140027903:	pop    rsp
   140027904:	ja     0x14002796f
   140027906:	outs   dx,BYTE PTR ds:[rsi]
   140027907:	ss xor al,0x5c
   14002790a:	imul   ebp,DWORD PTR [rsi+0x73],0x6c6c6174
   140027911:	pop    rdi
   140027912:	jae    0x140027989
   140027914:	jo     0x140027986
   140027916:	outs   dx,DWORD PTR ds:[rsi]
   140027917:	jb     0x14002798d
   140027919:	jae    0x14002798a
   14002791b:	data16 je 0x140027995
   14002791e:	(bad)  
   14002791f:	jb     0x140027986
   140027921:	cs gs js 0x14002798a
   140027925:	add    BYTE PTR [rcx],al
   140027927:	add    BYTE PTR [rdi],al
   140027929:	add    BYTE PTR [rax],al
   14002792b:	add    BYTE PTR [rdx],al
   14002792d:	add    BYTE PTR [rax],al
   14002792f:	add    BYTE PTR [rax],al
   140027931:	add    BYTE PTR [rax],al
   140027933:	add    BYTE PTR [rax],dl
   140027935:	add    BYTE PTR [rax],al
   140027937:	add    BYTE PTR [rax+rax*1],al
   14002793a:	add    BYTE PTR [rax],al
   14002793c:	add    BYTE PTR [rax],al
   14002793e:	add    BYTE PTR [rax],al
   140027940:	add    DWORD PTR [rax],eax
   140027942:	add    BYTE PTR [rax],al
   140027944:	add    BYTE PTR [rax],al
   140027946:	add    BYTE PTR [rax],al
   140027948:	add    DWORD PTR [rax],eax
   14002794a:	add    BYTE PTR [rax],al
   14002794c:	add    al,BYTE PTR [rax]
   14002794e:	add    BYTE PTR [rax],al
   140027950:	add    al,0x0
   140027952:	add    BYTE PTR [rax],al
   140027954:	or     BYTE PTR [rax],al
   140027956:	add    BYTE PTR [rax],al
   140027958:	adc    BYTE PTR [rax],al
   14002795a:	add    BYTE PTR [rax],al
   14002795c:	and    BYTE PTR [rax],al
   14002795e:	add    BYTE PTR [rax],al
   140027960:	add    DWORD PTR [rax],eax
   140027962:	add    BYTE PTR [rax],al
   140027964:	(bad)  
   140027965:	add    BYTE PTR [rax],al
   140027967:	add    BYTE PTR [rax],al
   140027969:	add    BYTE PTR [rax],al
   14002796b:	add    BYTE PTR [rdi],al
   14002796d:	add    BYTE PTR [rax],al
   14002796f:	add    BYTE PTR [rdx],al
   140027971:	add    BYTE PTR [rax],al
   140027973:	add    BYTE PTR [rax],al
   140027975:	add    BYTE PTR [rax],al
   140027977:	add    BYTE PTR [rax],cl
   140027979:	add    BYTE PTR [rax],al
   14002797b:	add    BYTE PTR [rdx],al
   14002797d:	add    BYTE PTR [rax],al
   14002797f:	add    BYTE PTR [rcx],al
   140027981:	add    BYTE PTR [rax],al
   140027983:	add    BYTE PTR [rdi],cl
   140027985:	add    BYTE PTR [rax],al
   140027987:	add    BYTE PTR [rax+rax*1],al
   14002798a:	add    BYTE PTR [rax],al
   14002798c:	add    BYTE PTR [rax],al
   14002798e:	add    BYTE PTR [rax],al
   140027990:	adc    BYTE PTR [rax],al
   140027992:	add    BYTE PTR [rax],al
   140027994:	add    al,0x0
   140027996:	add    BYTE PTR [rax],al
   140027998:	add    DWORD PTR [rax],eax
   14002799a:	add    BYTE PTR [rax],al
   14002799c:	add    BYTE PTR [rax],al
   14002799e:	add    BYTE PTR [rax],al
   1400279a0:	add    BYTE PTR [rcx],al
   1400279a2:	add    BYTE PTR [rax],al
   1400279a4:	add    BYTE PTR [rax],al
   1400279a6:	add    BYTE PTR [rax],al
   1400279a8:	(bad)  
   1400279a9:	add    BYTE PTR [rax],al
   1400279ab:	add    BYTE PTR [rcx],cl
   1400279ad:	add    BYTE PTR [rax],al
   1400279af:	add    BYTE PTR [rax],al
   1400279b1:	add    BYTE PTR [rax],al
   1400279b3:	add    BYTE PTR [rax],ah
   1400279b5:	add    BYTE PTR [rax],al
   1400279b7:	add    BYTE PTR [rcx],cl
   1400279b9:	add    BYTE PTR [rax],al
   1400279bb:	add    BYTE PTR [rcx],al
   1400279bd:	add    BYTE PTR [rax],al
   1400279bf:	add    BYTE PTR [rdi],bl
   1400279c1:	add    BYTE PTR [rax],al
   1400279c3:	add    BYTE PTR [rcx],cl
	...
   1400279cd:	add    BYTE PTR [rax],al
   1400279cf:	add    BYTE PTR [rax],ah
   1400279d1:	add    BYTE PTR [rax],al
   1400279d3:	add    BYTE PTR [rcx],cl
   1400279d5:	add    BYTE PTR [rax],al
   1400279d7:	add    BYTE PTR [rcx],al
   1400279d9:	add    BYTE PTR [rax],al
   1400279db:	add    BYTE PTR [rdi],bh
   1400279dd:	add    BYTE PTR [rax],al
   1400279df:	add    BYTE PTR [rdx],dl
   1400279e1:	add    BYTE PTR [rax],al
   1400279e3:	add    BYTE PTR [rax],al
   1400279e5:	add    BYTE PTR [rax],al
   1400279e7:	add    BYTE PTR [rax+0x0],al
   1400279ea:	add    BYTE PTR [rax],al
   1400279ec:	adc    eax,DWORD PTR [rax]
   1400279ee:	add    BYTE PTR [rax],al
   1400279f0:	add    al,0x7b
   1400279f2:	add    al,BYTE PTR [rax+0x1]
   1400279f5:	add    BYTE PTR [rax],al
   1400279f7:	add    BYTE PTR [rip+0x7000000],al        # 0x1470279fd
   1400279fd:	add    DWORD PTR [rax],eax
   1400279ff:	add    BYTE PTR [rbx+rdi*2],cl
   140027a02:	add    al,BYTE PTR [rax+0x1]
   140027a05:	add    BYTE PTR [rax],al
   140027a07:	add    BYTE PTR [rip+0x3000000],al        # 0x143027a0d
   140027a0d:	add    DWORD PTR [rax],eax
   140027a0f:	add    BYTE PTR [rax],bl
   140027a11:	jnp    0x140027a15
   140027a13:	rex add DWORD PTR [rax],eax
   140027a16:	add    BYTE PTR [rax],al
   140027a18:	add    eax,0x48000000
   140027a1d:	add    BYTE PTR [rax],al
   140027a1f:	add    BYTE PTR [rax],ah
   140027a21:	jnp    0x140027a25
   140027a23:	rex add DWORD PTR [rax],eax
   140027a26:	add    BYTE PTR [rax],al
   140027a28:	add    eax,0x20000000
   140027a2d:	add    BYTE PTR [rax],al
   140027a2f:	add    BYTE PTR [rax],ch
   140027a31:	jnp    0x140027a35
   140027a33:	rex add DWORD PTR [rax],eax
   140027a36:	add    BYTE PTR [rax],al
   140027a38:	add    DWORD PTR [rax],eax
   140027a3a:	add    BYTE PTR [rax],al
   140027a3c:	add    al,0x0
   140027a3e:	add    BYTE PTR [rax],al
   140027a40:	sub    al,0x7b
   140027a42:	add    al,BYTE PTR [rax+0x1]
   140027a45:	add    BYTE PTR [rax],al
   140027a47:	add    BYTE PTR [rip+0x4000000],al        # 0x144027a4d
   140027a4d:	add    BYTE PTR [rax],al
   140027a4f:	add    BYTE PTR [rax],bh
   140027a51:	jnp    0x140027a55
   140027a53:	rex add DWORD PTR [rax],eax
   140027a56:	add    BYTE PTR [rax],al
   140027a58:	add    eax,0x17000000
   140027a5d:	add    DWORD PTR [rax],eax
   140027a5f:	add    BYTE PTR [rax+0x7b],al
   140027a62:	add    al,BYTE PTR [rax+0x1]
   140027a65:	add    BYTE PTR [rax],al
   140027a67:	add    BYTE PTR [rip+0x2000000],al        # 0x142027a6d
   140027a6d:	add    BYTE PTR [rax],al
   140027a6f:	add    BYTE PTR [rax+0x7b],cl
   140027a72:	add    al,BYTE PTR [rax+0x1]
   140027a75:	add    BYTE PTR [rax],al
   140027a77:	add    BYTE PTR [rip+0xffffffffd7000000],al        # 0x117027a7d
   140027a7d:	add    DWORD PTR [rax],eax
   140027a7f:	add    BYTE PTR [rax+0x7b],dl
   140027a82:	add    al,BYTE PTR [rax+0x1]
   140027a85:	add    BYTE PTR [rax],al
   140027a87:	add    BYTE PTR [rip+0x10000000],al        # 0x150027a8d
   140027a8d:	add    BYTE PTR [rax],al
   140027a8f:	add    BYTE PTR [rax+0x7b],bl
   140027a92:	add    al,BYTE PTR [rax+0x1]
   140027a95:	add    BYTE PTR [rax],al
   140027a97:	add    BYTE PTR [rip+0x48000000],al        # 0x188027a9d
   140027a9d:	add    BYTE PTR [rax],al
   140027a9f:	add    BYTE PTR [rax+0x7b],ah
   140027aa2:	add    al,BYTE PTR [rax+0x1]
   140027aa5:	add    BYTE PTR [rax],al
   140027aa7:	add    BYTE PTR [rcx],al
   140027aa9:	add    BYTE PTR [rax],al
   140027aab:	add    BYTE PTR [rax+0x0],cl
   140027aae:	add    BYTE PTR [rax],al
   140027ab0:	fs jnp 0x140027ab5
   140027ab3:	rex add DWORD PTR [rax],eax
   140027ab6:	add    BYTE PTR [rax],al
   140027ab8:	add    eax,0x1000000
   140027abd:	add    BYTE PTR [rax],al
   140027abf:	add    BYTE PTR [rbx+rdi*2+0x2],ch
   140027ac3:	rex add DWORD PTR [rax],eax
   140027ac6:	add    BYTE PTR [rax],al
   140027ac8:	add    DWORD PTR [rax],eax
   140027aca:	add    BYTE PTR [rax],al
   140027acc:	(bad)  
   140027acd:	inc    DWORD PTR [rax]
   140027acf:	add    BYTE PTR [rax+0x7b],dh
   140027ad2:	add    al,BYTE PTR [rax+0x1]
   140027ad5:	add    BYTE PTR [rax],al
   140027ad7:	add    BYTE PTR [rsi],al
   140027ad9:	add    BYTE PTR [rax],al
   140027adb:	add    BYTE PTR [rax+0x0],al
	...
   140027aed:	add    BYTE PTR [rax],al
   140027aef:	add    BYTE PTR [rax],bl
   140027af1:	add    BYTE PTR [rax],al
   140027af3:	add    BYTE PTR [rsi],al
   140027af5:	add    BYTE PTR [rax],al
   140027af7:	add    BYTE PTR [rcx],cl
   140027af9:	add    BYTE PTR [rax],al
   140027afb:	add    BYTE PTR [rax+0x26000000],al
   140027b01:	add    BYTE PTR [rax],al
   140027b03:	add    BYTE PTR [rcx+0x6c],ah
   140027b06:	outs   dx,BYTE PTR ds:[rsi]
   140027b07:	jne    0x140027b76
   140027b09:	add    BYTE PTR [rax],al
   140027b0b:	add    BYTE PTR [rcx+0x6c],ah
   140027b0e:	jo     0x140027b78
   140027b10:	(bad)  
   140027b11:	add    BYTE PTR [rax],al
   140027b13:	add    BYTE PTR [rbx+0x62ffffff],al
   140027b19:	ins    BYTE PTR es:[rdi],dx
   140027b1a:	(bad)  
   140027b1b:	outs   dx,BYTE PTR ds:[rsi]
   140027b1c:	imul   eax,DWORD PTR [rax],0x0
   140027b1f:	add    BYTE PTR [rbx+0x6e],ah
   140027b22:	je     0x140027b96
   140027b24:	ins    BYTE PTR es:[rdi],dx
   140027b25:	add    BYTE PTR [rax],al
   140027b27:	add    BYTE PTR [rax+rax*1+0x0],ah
   140027b2b:	add    BYTE PTR [rcx+rbp*2+0x67],ah
   140027b2f:	imul   esi,DWORD PTR [rax+rax*1+0x0],0xffffdb00
   140027b37:	jmp    QWORD PTR [rdi+0x72]
   140027b3a:	(bad)  
   140027b3b:	jo     0x140027ba5
   140027b3d:	add    BYTE PTR [rax],al
   140027b3f:	add    BYTE PTR [rdi+rbp*2+0x77],ch
   140027b43:	gs jb  0x140027b46
   140027b46:	add    BYTE PTR [rax],al
   140027b48:	jo     0x140027bbc
   140027b4a:	imul   ebp,DWORD PTR [rsi+0x74],0x70000000
   140027b51:	jne    0x140027bc1
   140027b53:	movsxd esi,DWORD PTR [rax+rax*1+0x0]
   140027b57:	add    BYTE PTR [rbx+0x70],dh
   140027b5a:	(bad)  
   140027b5b:	movsxd esp,DWORD PTR [rbp+0x0]
   140027b5e:	add    BYTE PTR [rax],al
   140027b60:	jae    0x140027b62
   140027b62:	add    BYTE PTR [rax],al
   140027b64:	jne    0x140027bd6
   140027b66:	jo     0x140027bcd
   140027b68:	jb     0x140027b6a
   140027b6a:	add    BYTE PTR [rax],al
   140027b6c:	ja     0x140027b6e
   140027b6e:	add    BYTE PTR [rax],al
   140027b70:	js     0x140027bd6
   140027b72:	imul   esp,DWORD PTR [rdi+0x69],0x35000074
   140027b79:	add    BYTE PTR [rax],al
   140027b7b:	add    BYTE PTR [rdi],cl
   140027b7d:	add    BYTE PTR [rax],al
   140027b7f:	add    BYTE PTR [rcx],dl
   140027b81:	add    BYTE PTR [rax],al
   140027b83:	add    BYTE PTR [rax],al
   140027b85:	add    al,0x0
   140027b87:	add    BYTE PTR [rcx+rax*1],dh
   140027b8a:	add    BYTE PTR [rax],al
   140027b8c:	add    edi,esp
   140027b8e:	(bad)  
   140027b8f:	dec    ebp
   140027b91:	(bad)  
   140027b92:	(bad)  
   140027b93:	inc    DWORD PTR [rax]
	...
   140027b9d:	add    BYTE PTR [rax],al
   140027b9f:	add    al,al
   140027ba1:	jl     0x140027ba5
   140027ba3:	rex add DWORD PTR [rax],eax
   140027ba6:	add    BYTE PTR [rax],al
   140027ba8:	add    eax,0x7000000
   140027bad:	add    DWORD PTR [rax],eax
   140027baf:	add    al,dl
   140027bb1:	jl     0x140027bb5
   140027bb3:	rex add DWORD PTR [rax],eax
   140027bb6:	add    BYTE PTR [rax],al
   140027bb8:	add    eax,0x3000000
   140027bbd:	add    DWORD PTR [rax],eax
   140027bbf:	add    al,ah
   140027bc1:	jl     0x140027bc5
   140027bc3:	rex add DWORD PTR [rax],eax
   140027bc6:	add    BYTE PTR [rax],al
   140027bc8:	add    eax,0x48000000
   140027bcd:	add    BYTE PTR [rax],al
   140027bcf:	add    al,dh
   140027bd1:	jl     0x140027bd5
   140027bd3:	rex add DWORD PTR [rax],eax
   140027bd6:	add    BYTE PTR [rax],al
   140027bd8:	add    eax,0x20000000
   140027bdd:	add    BYTE PTR [rax],al
   140027bdf:	add    ah,bh
   140027be1:	jl     0x140027be5
   140027be3:	rex add DWORD PTR [rax],eax
   140027be6:	add    BYTE PTR [rax],al
   140027be8:	add    DWORD PTR [rax],eax
   140027bea:	add    BYTE PTR [rax],al
   140027bec:	add    al,0x0
   140027bee:	add    BYTE PTR [rax],al
   140027bf0:	add    BYTE PTR [rbp+0x2],bh
   140027bf3:	rex add DWORD PTR [rax],eax
   140027bf6:	add    BYTE PTR [rax],al
   140027bf8:	add    eax,0x4000000
   140027bfd:	add    BYTE PTR [rax],al
   140027bff:	add    BYTE PTR [rax],dl
   140027c01:	jge    0x140027c05
   140027c03:	rex add DWORD PTR [rax],eax
   140027c06:	add    BYTE PTR [rax],al
   140027c08:	add    eax,0x17000000
   140027c0d:	add    DWORD PTR [rax],eax
   140027c0f:	add    BYTE PTR [rax],ah
   140027c11:	jge    0x140027c15
   140027c13:	rex add DWORD PTR [rax],eax
   140027c16:	add    BYTE PTR [rax],al
   140027c18:	add    eax,0x2000000
   140027c1d:	add    BYTE PTR [rax],al
   140027c1f:	add    BYTE PTR [rax],dh
   140027c21:	jge    0x140027c25
   140027c23:	rex add DWORD PTR [rax],eax
   140027c26:	add    BYTE PTR [rax],al
   140027c28:	add    eax,0xd7000000
   140027c2d:	add    DWORD PTR [rax],eax
   140027c2f:	add    BYTE PTR [rax+0x7d],al
   140027c32:	add    al,BYTE PTR [rax+0x1]
   140027c35:	add    BYTE PTR [rax],al
   140027c37:	add    BYTE PTR [rip+0x10000000],al        # 0x150027c3d
   140027c3d:	add    BYTE PTR [rax],al
   140027c3f:	add    BYTE PTR [rax+0x7d],dl
   140027c42:	add    al,BYTE PTR [rax+0x1]
   140027c45:	add    BYTE PTR [rax],al
   140027c47:	add    BYTE PTR [rip+0x48000000],al        # 0x188027c4d
   140027c4d:	add    BYTE PTR [rax],al
   140027c4f:	add    BYTE PTR [rbp+rdi*2+0x2],bl
   140027c53:	rex add DWORD PTR [rax],eax
   140027c56:	add    BYTE PTR [rax],al
   140027c58:	add    DWORD PTR [rax],eax
   140027c5a:	add    BYTE PTR [rax],al
   140027c5c:	rex.W add BYTE PTR [rax],al
   140027c5f:	add    BYTE PTR [rax+0x7d],ah
   140027c62:	add    al,BYTE PTR [rax+0x1]
   140027c65:	add    BYTE PTR [rax],al
   140027c67:	add    BYTE PTR [rip+0x1000000],al        # 0x141027c6d
   140027c6d:	add    BYTE PTR [rax],al
   140027c6f:	add    BYTE PTR [rbp+rdi*2+0x2],ch
   140027c73:	rex add DWORD PTR [rax],eax
   140027c76:	add    BYTE PTR [rax],al
   140027c78:	add    DWORD PTR [rax],eax
   140027c7a:	add    BYTE PTR [rax],al
   140027c7c:	(bad)  
   140027c7d:	inc    DWORD PTR [rax]
   140027c7f:	add    BYTE PTR [rax+0x7d],dh
   140027c82:	add    al,BYTE PTR [rax+0x1]
   140027c85:	add    BYTE PTR [rax],al
   140027c87:	add    BYTE PTR [rsi],al
   140027c89:	add    BYTE PTR [rax],al
   140027c8b:	add    BYTE PTR [rax+0x0],al
	...
   140027c9d:	add    BYTE PTR [rax],al
   140027c9f:	add    BYTE PTR [rax],cl
   140027ca1:	add    BYTE PTR [rax],al
   140027ca3:	add    BYTE PTR [rax],al
   140027ca5:	add    BYTE PTR [rax],al
   140027ca7:	add    BYTE PTR [rip+0xf000000],dh        # 0x14f027cad
   140027cad:	add    BYTE PTR [rax],al
   140027caf:	add    BYTE PTR [rcx],dl
   140027cb1:	add    BYTE PTR [rax],al
   140027cb3:	add    BYTE PTR [rax],al
   140027cb5:	add    al,0x0
   140027cb7:	add    BYTE PTR [rcx+rax*1],dh
   140027cba:	add    BYTE PTR [rax],al
   140027cbc:	add    edi,esp
   140027cbe:	(bad)  
   140027cbf:	jmp    QWORD PTR [rcx+0x0]
   140027cc2:	ins    BYTE PTR es:[rdi],dx
   140027cc3:	add    BYTE PTR [rsi+0x0],ch
   140027cc6:	jne    0x140027cc8
   140027cc8:	ins    DWORD PTR es:[rdi],dx
   140027cc9:	add    BYTE PTR [rax],al
   140027ccb:	add    BYTE PTR [rax],al
   140027ccd:	add    BYTE PTR [rax],al
   140027ccf:	add    BYTE PTR [rcx+0x0],ah
   140027cd2:	ins    BYTE PTR es:[rdi],dx
   140027cd3:	add    BYTE PTR [rax+0x0],dh
   140027cd6:	push   0x6100
   140027cdb:	add    BYTE PTR [rax],al
   140027cdd:	add    BYTE PTR [rax],al
   140027cdf:	add    BYTE PTR [rdx+0x0],ah
   140027ce2:	ins    BYTE PTR es:[rdi],dx
   140027ce3:	add    BYTE PTR [rcx+0x0],ah
   140027ce6:	outs   dx,BYTE PTR ds:[rsi]
   140027ce7:	add    BYTE PTR [rbx+0x0],ch
   140027cea:	add    BYTE PTR [rax],al
   140027cec:	int    0xfe
   140027cee:	(bad)  
   140027cef:	jmp    QWORD PTR [rbx+0x0]
   140027cf2:	outs   dx,BYTE PTR ds:[rsi]
   140027cf3:	add    BYTE PTR [rax+rax*1+0x72],dh
   140027cf7:	add    BYTE PTR [rax+rax*1+0x0],ch
   140027cfb:	add    BYTE PTR [rax+rax*1+0x0],ah
   140027cff:	add    BYTE PTR [rax+rax*1+0x69],ah
   140027d03:	add    BYTE PTR [rdi+0x0],ah
   140027d06:	imul   eax,DWORD PTR [rax],0x74
   140027d0c:	add    BYTE PTR [rax],al
   140027d0e:	add    BYTE PTR [rax],al
   140027d10:	add    BYTE PTR [edx+0x0],dh
   140027d14:	(bad)  
   140027d15:	add    BYTE PTR [rax+0x0],dh
   140027d18:	push   0x0
   140027d1d:	add    BYTE PTR [rax],al
   140027d1f:	add    BYTE PTR [rax+rax*1+0x6f],ch
   140027d23:	add    BYTE PTR [rdi+0x0],dh
   140027d26:	add    BYTE PTR gs:[rdx+0x0],dh
   140027d2a:	add    BYTE PTR [rax],al
   140027d2c:	add    BYTE PTR [rax],al
   140027d2e:	add    BYTE PTR [rax],al
   140027d30:	jo     0x140027d32
   140027d32:	jb     0x140027d34
   140027d34:	imul   eax,DWORD PTR [rax],0x74006e
   140027d3a:	add    BYTE PTR [rax],al
   140027d3c:	add    BYTE PTR [rax],al
   140027d3e:	add    BYTE PTR [rax],al
   140027d40:	jo     0x140027d42
   140027d42:	jne    0x140027d44
   140027d44:	outs   dx,BYTE PTR ds:[rsi]
   140027d45:	add    BYTE PTR [rbx+0x0],ah
   140027d48:	je     0x140027d4a
   140027d4a:	add    BYTE PTR [rax],al
   140027d4c:	add    BYTE PTR [rax],al
   140027d4e:	add    BYTE PTR [rax],al
   140027d50:	jae    0x140027d52
   140027d52:	jo     0x140027d54
   140027d54:	(bad)  
   140027d55:	add    BYTE PTR [rbx+0x0],ah
   140027d58:	add    BYTE PTR gs:[rax],al
   140027d5b:	add    BYTE PTR [rbx+0x0],dh
   140027d5e:	add    BYTE PTR [rax],al
   140027d60:	jne    0x140027d62
   140027d62:	jo     0x140027d64
   140027d64:	jo     0x140027d66
   140027d66:	add    BYTE PTR gs:[rdx+0x0],dh
   140027d6a:	add    BYTE PTR [rax],al
   140027d6c:	ja     0x140027d6e
   140027d6e:	add    BYTE PTR [rax],al
   140027d70:	js     0x140027d72
   140027d72:	add    BYTE PTR fs:[rcx+0x0],ch
   140027d76:	add    BYTE PTR [ecx+0x0],ch
   140027d7a:	je     0x140027d7c
   140027d7c:	add    BYTE PTR [rax],al
   140027d7e:	add    BYTE PTR [rax],al
   140027d80:	add    al,0x0
   140027d82:	add    BYTE PTR [rax],al
   140027d84:	add    BYTE PTR [rax],al
   140027d86:	add    BYTE PTR [rax],al
   140027d88:	add    al,BYTE PTR [rax]
   140027d8a:	add    BYTE PTR [rax],al
   140027d8c:	add    BYTE PTR [rax],al
   140027d8e:	add    BYTE PTR [rax],al
   140027d90:	add    DWORD PTR [rax],eax
   140027d92:	add    BYTE PTR [rax],al
   140027d94:	add    BYTE PTR [rax],al
   140027d96:	add    BYTE PTR [rax],al
   140027d98:	and    BYTE PTR [rax],al
	...
   140027da6:	add    BYTE PTR [rax],al
   140027da8:	add    DWORD PTR [rax],eax
   140027daa:	add    BYTE PTR [rax],al
   140027dac:	add    DWORD PTR [rax],eax
	...
   140027db6:	add    BYTE PTR [rax],al
   140027db8:	add    al,BYTE PTR [rax]
   140027dba:	add    BYTE PTR [rax],al
   140027dbc:	add    al,0x0
   140027dbe:	add    BYTE PTR [rax],al
   140027dc0:	or     BYTE PTR [rax],al
   140027dc2:	add    BYTE PTR [rax],al
   140027dc4:	add    BYTE PTR [rax],al
   140027dc6:	add    BYTE PTR [rax],al
   140027dc8:	adc    BYTE PTR [rax],al
   140027dca:	add    BYTE PTR [rax],al
   140027dcc:	add    BYTE PTR [rax],al
   140027dce:	add    BYTE PTR [rax],al
   140027dd0:	and    BYTE PTR [rax],al
   140027dd2:	add    BYTE PTR [rax],al
   140027dd4:	add    BYTE PTR [rax],al
   140027dd6:	add    BYTE PTR [rax],al
   140027dd8:	add    BYTE PTR [rax],al
   140027ddb:	add    BYTE PTR [rax],al
   140027ddd:	add    BYTE PTR [rax],al
   140027ddf:	add    BYTE PTR [rax+0x0],al
   140027de5:	add    BYTE PTR [rax],al
   140027de7:	add    BYTE PTR [rax],al
   140027de9:	add    DWORD PTR [rax],eax
   140027deb:	add    BYTE PTR [rax],al
   140027ded:	add    BYTE PTR [rax],al
   140027def:	add    BYTE PTR [rax],al
   140027df1:	add    al,BYTE PTR [rax]
   140027df3:	add    BYTE PTR [rax],al
   140027df5:	add    BYTE PTR [rax],al
   140027df7:	add    BYTE PTR [rax],al
   140027df9:	add    al,0x0
   140027dfb:	add    BYTE PTR [rax],al
   140027dfd:	add    BYTE PTR [rax],al
   140027dff:	add    BYTE PTR [rax],al
   140027e01:	or     BYTE PTR [rax],al
   140027e03:	add    BYTE PTR [rax],al
   140027e05:	add    BYTE PTR [rax],al
   140027e07:	add    BYTE PTR [rax],al
   140027e09:	adc    BYTE PTR [rax],al
   140027e0b:	add    BYTE PTR [rax],al
   140027e0d:	add    BYTE PTR [rax],al
   140027e0f:	add    BYTE PTR [rax],al
   140027e11:	and    BYTE PTR [rax],al
   140027e13:	add    BYTE PTR [rax],al
   140027e15:	add    BYTE PTR [rax],al
   140027e17:	add    BYTE PTR [rax],al
   140027e19:	xor    BYTE PTR [rax],al
   140027e1b:	add    BYTE PTR [rax],al
   140027e1d:	add    BYTE PTR [rax],al
   140027e1f:	add    BYTE PTR [rax],al
   140027e21:	add    BYTE PTR [rax],al
   140027e24:	add    BYTE PTR [rax],al
   140027e26:	add    BYTE PTR [rax],al
   140027e28:	add    BYTE PTR [rax+0x0],al
   140027e2e:	add    BYTE PTR [rax],al
   140027e30:	rol    BYTE PTR [rcx],0x0
   140027e33:	add    BYTE PTR [rax],al
   140027e35:	add    BYTE PTR [rax],al
   140027e37:	add    BYTE PTR [rax],al
   140027e39:	(bad)  
   140027e3a:	add    BYTE PTR [rax],al
   140027e3c:	add    BYTE PTR [rax],al
   140027e3e:	add    BYTE PTR [rax],al
   140027e40:	add    BYTE PTR [rax],dh
	...
   140027e52:	add    BYTE PTR [rax],al
   140027e54:	add    DWORD PTR [rax],eax
   140027e56:	add    BYTE PTR [rax],al
   140027e58:	add    al,BYTE PTR [rax]
	...
   140027e62:	add    BYTE PTR [rax],al
   140027e64:	add    al,0x0
   140027e66:	add    BYTE PTR [rax],al
   140027e68:	add    BYTE PTR [rax],al
   140027e6a:	add    BYTE PTR [rax],al
   140027e6c:	adc    BYTE PTR [rax],al
   140027e6e:	add    BYTE PTR [rax],al
   140027e70:	add    BYTE PTR [rax],al
   140027e72:	add    BYTE PTR [rax],al
   140027e74:	add    DWORD PTR [rax],eax
   140027e76:	add    BYTE PTR [rax],al
   140027e78:	add    al,BYTE PTR [rax]
   140027e7a:	add    BYTE PTR [rax],al
   140027e7c:	add    al,0x0
   140027e7e:	add    BYTE PTR [rax],al
   140027e80:	or     BYTE PTR [rax],al
   140027e82:	add    BYTE PTR [rax],al
   140027e84:	adc    BYTE PTR [rax],al
   140027e86:	add    BYTE PTR [rax],al
   140027e88:	add    BYTE PTR [rax],al
   140027e8b:	add    BYTE PTR [rax+0x20000000],al
   140027e91:	add    BYTE PTR [rax],al
   140027e93:	add    BYTE PTR [rax],al
   140027e95:	add    BYTE PTR [rax],al
   140027e97:	add    BYTE PTR [rcx],al
   140027e99:	add    BYTE PTR [rax],al
   140027e9b:	add    BYTE PTR [rcx],al
   140027e9d:	add    BYTE PTR [rax],al
   140027e9f:	add    BYTE PTR [rcx],al
   140027ea1:	add    BYTE PTR [rax],al
   140027ea3:	add    BYTE PTR [rdx],al
   140027ea5:	add    BYTE PTR [rax],al
   140027ea7:	add    BYTE PTR [rcx],al
   140027ea9:	add    DWORD PTR [rcx],eax
   140027eab:	add    BYTE PTR [rdx],al
   140027ead:	add    BYTE PTR [rax],al
   140027eaf:	add    BYTE PTR [rcx],al
   140027eb1:	add    BYTE PTR [rax],al
   140027eb3:	add    BYTE PTR [rcx],al
   140027eb5:	add    DWORD PTR [rcx],eax
   140027eb7:	add    DWORD PTR [rcx],eax
   140027eb9:	add    BYTE PTR [rcx],al
   140027ebb:	add    BYTE PTR [rax],al
   140027ebd:	add    DWORD PTR [rcx],eax
   140027ebf:	add    DWORD PTR [rax],eax
   140027ec1:	add    BYTE PTR [rax],al
   140027ec3:	add    BYTE PTR [rcx],al
   140027ec5:	add    BYTE PTR [rax],al
   140027ec7:	add    BYTE PTR [rdx],al
   140027ec9:	add    BYTE PTR [rax],al
   140027ecb:	add    BYTE PTR [rax],al
   140027ecd:	add    BYTE PTR [rax],al
   140027ecf:	add    BYTE PTR [rax+0xd],ch
   140027ed2:	add    eax,DWORD PTR [rax+0x1]
   140027ed5:	add    BYTE PTR [rax],al
   140027ed7:	add    al,dl
   140027ed9:	rex.WRX add BYTE PTR [rax+0x1],r8b
   140027edd:	add    BYTE PTR [rax],al
   140027edf:	add    BYTE PTR [rax+0x7b],cl
   140027ee2:	add    BYTE PTR [rax+0x1],al
   140027ee5:	add    BYTE PTR [rax],al
   140027ee7:	add    BYTE PTR [rdx+0x61],ah
   140027eea:	and    BYTE PTR fs:[rcx+0x6c],ah
   140027eee:	ins    BYTE PTR es:[rdi],dx
   140027eef:	outs   dx,DWORD PTR ds:[rsi]
   140027ef0:	movsxd esp,DWORD PTR [rcx+0x74]
   140027ef3:	imul   ebp,DWORD PTR [rdi+0x6e],0xde80000
   140027efa:	add    eax,DWORD PTR [rax+0x1]
   140027efd:	add    BYTE PTR [rax],al
   140027eff:	add    BYTE PTR [rdi+rcx*2+0x14000],bl
   140027f06:	add    BYTE PTR [rax],al
   140027f08:	rex.W jnp 0x140027f0b
   140027f0b:	rex add DWORD PTR [rax],eax
   140027f0e:	add    BYTE PTR [rax],al
   140027f10:	push   0x140030e
   140027f15:	add    BYTE PTR [rax],al
   140027f17:	add    BYTE PTR [rdi+rcx*2],bh
   140027f1a:	add    BYTE PTR [rax+0x1],al
   140027f1d:	add    BYTE PTR [rax],al
   140027f1f:	add    BYTE PTR [rax+0x7b],cl
   140027f22:	add    BYTE PTR [rax+0x1],al
   140027f25:	add    BYTE PTR [rax],al
   140027f27:	add    al,dh
   140027f29:	(bad)  
   140027f2a:	add    eax,DWORD PTR [rax+0x1]
   140027f2d:	add    BYTE PTR [rax],al
   140027f2f:	add    BYTE PTR [rdi+rcx*2+0x0],ch
   140027f33:	rex add DWORD PTR [rax],eax
   140027f36:	add    BYTE PTR [rax],al
   140027f38:	rex.W jnp 0x140027f3b
   140027f3b:	rex add DWORD PTR [rax],eax
   140027f3e:	add    BYTE PTR [rax],al
   140027f40:	js     0x140027f51
   140027f42:	add    eax,DWORD PTR [rax+0x1]
   140027f45:	add    BYTE PTR [rax],al
   140027f47:	add    ah,cl
   140027f49:	rex.WRXB add BYTE PTR [r8+0x1],r8b
   140027f4d:	add    BYTE PTR [rax],al
   140027f4f:	add    BYTE PTR [rax+0x7b],cl
   140027f52:	add    BYTE PTR [rax+0x1],al
   140027f55:	add    BYTE PTR [rax],al
   140027f57:	add    BYTE PTR [rax],al
   140027f59:	adc    BYTE PTR [rbx],al
   140027f5b:	rex add DWORD PTR [rax],eax
   140027f5e:	add    BYTE PTR [rax],al
   140027f60:	pop    rsp
   140027f61:	push   rax
   140027f62:	add    BYTE PTR [rax+0x1],al
   140027f65:	add    BYTE PTR [rax],al
   140027f67:	add    BYTE PTR [rax+0x7b],cl
   140027f6a:	add    BYTE PTR [rax+0x1],al
   140027f6d:	add    BYTE PTR [rax],al
   140027f6f:	add    BYTE PTR [rax+0x1400310],al
   140027f75:	add    BYTE PTR [rax],al
   140027f77:	add    ah,bh
   140027f79:	rex.WRXB add BYTE PTR [r8+0x1],r8b
   140027f7d:	add    BYTE PTR [rax],al
   140027f7f:	add    BYTE PTR [rax+0x7b],cl
   140027f82:	add    BYTE PTR [rax+0x1],al
   140027f85:	add    BYTE PTR [rax],al
   140027f87:	add    BYTE PTR [rax],cl
   140027f89:	adc    DWORD PTR [rbx],eax
   140027f8b:	rex add DWORD PTR [rax],eax
   140027f8e:	add    BYTE PTR [rax],al
   140027f90:	or     al,0x4f
   140027f92:	add    BYTE PTR [rax+0x1],al
   140027f95:	add    BYTE PTR [rax],al
   140027f97:	add    BYTE PTR [rax],bl
   140027f99:	push   rbx
   140027f9a:	add    BYTE PTR [rax+0x1],al
   140027f9d:	add    BYTE PTR [rax],al
   140027f9f:	add    BYTE PTR [rdx+0x61],ah
   140027fa2:	and    BYTE PTR fs:[rsi+0x75],ah
   140027fa6:	outs   dx,BYTE PTR ds:[rsi]
   140027fa7:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   140027fab:	outs   dx,BYTE PTR ds:[rsi]
   140027fac:	and    BYTE PTR [rbx+0x61],ah
   140027faf:	ins    BYTE PTR es:[rdi],dx
   140027fb0:	ins    BYTE PTR es:[rdi],dx
   140027fb1:	add    BYTE PTR [rax],al
   140027fb3:	add    BYTE PTR [rax],al
   140027fb5:	add    BYTE PTR [rax],al
   140027fb7:	add    BYTE PTR [rax+0x1400311],cl
   140027fbd:	add    BYTE PTR [rax],al
   140027fbf:	add    BYTE PTR [rax+rdx*2],ch
   140027fc2:	add    BYTE PTR [rax+0x1],al
   140027fc5:	add    BYTE PTR [rax],al
   140027fc7:	add    BYTE PTR [rax+0x7b],cl
   140027fca:	add    BYTE PTR [rax+0x1],al
   140027fcd:	add    BYTE PTR [rax],al
   140027fcf:	add    BYTE PTR [rdx+0x65],dh
   140027fd2:	addr32 gs js 0x140028035
   140027fd6:	gs jb  0x14002804b
   140027fd9:	outs   dx,DWORD PTR ds:[rsi]
   140027fda:	jb     0x140028004
   140027fdc:	gs jb  0x140028051
   140027fdf:	outs   dx,DWORD PTR ds:[rsi]
   140027fe0:	jb     0x140028041
   140027fe2:	movsxd ebp,DWORD PTR [rdi+0x6c]
   140027fe5:	ins    BYTE PTR es:[rdi],dx
   140027fe6:	(bad)  
   140027fe7:	je     0x14002804e
   140027fe9:	sub    DWORD PTR [rdx],edi
   140027feb:	and    BYTE PTR [rax+rbp*2+0x65],dl
   140027fef:	and    BYTE PTR [rbp+0x78],ah
   140027ff2:	jo     0x140028066
   140027ff4:	gs jae 0x14002806a
   140027ff7:	imul   ebp,DWORD PTR [rdi+0x6e],0x6e6f6320
   140027ffe:	je     0x140028061
   140028000:	imul   ebp,DWORD PTR [rsi+0x65],0x6e612064
   140028007:	and    BYTE PTR [rcx+0x6e],ch
   14002800a:	jbe    0x14002806d
   14002800c:	ins    BYTE PTR es:[rdi],dx
   14002800d:	imul   esp,DWORD PTR [rax+riz*1+0x63],0x616c6c6f
   140028015:	je     0x140028080
   140028017:	outs   dx,BYTE PTR ds:[rsi]
   140028018:	and    BYTE PTR [ebp+0x6c],ah
   14002801c:	gs ins DWORD PTR es:[rdi],dx
   14002801e:	outs   dx,BYTE PTR gs:[rsi]
   140028020:	je     0x140028042
   140028022:	outs   dx,BYTE PTR ds:[rsi]
   140028023:	(bad)  
   140028024:	ins    DWORD PTR es:[rdi],dx
   140028025:	gs add BYTE PTR cs:[rax],al
   140028029:	add    BYTE PTR [rax],al
   14002802b:	add    BYTE PTR [rax],al
   14002802d:	add    BYTE PTR [rax],al
   14002802f:	add    BYTE PTR [rdx+0x65],dh
   140028032:	addr32 gs js 0x140028095
   140028036:	gs jb  0x1400280ab
   140028039:	outs   dx,DWORD PTR ds:[rsi]
   14002803a:	jb     0x140028064
   14002803c:	gs jb  0x1400280b1
   14002803f:	outs   dx,DWORD PTR ds:[rsi]
   140028040:	jb     0x1400280a1
   140028042:	movsxd esi,DWORD PTR [rcx+rdi*2+0x70]
   140028046:	sub    DWORD PTR gs:[rdx],edi
   140028049:	and    BYTE PTR [rax+rbp*2+0x65],dl
   14002804d:	and    BYTE PTR [rbp+0x78],ah
   140028050:	jo     0x1400280c4
   140028052:	gs jae 0x1400280c8
   140028055:	imul   ebp,DWORD PTR [rdi+0x6e],0x6e6f6320
   14002805c:	je     0x1400280bf
   14002805e:	imul   ebp,DWORD PTR [rsi+0x65],0x6e612064
   140028065:	and    BYTE PTR [rcx+0x6e],ch
   140028068:	jbe    0x1400280cb
   14002806a:	ins    BYTE PTR es:[rdi],dx
   14002806b:	imul   esp,DWORD PTR [rax+riz*1+0x63],0x61726168
   140028073:	movsxd esi,DWORD PTR [rbp+riz*2+0x72]
   140028077:	and    BYTE PTR [rbx+0x6c],ah
   14002807a:	(bad)  
   14002807b:	jae    0x1400280f0
   14002807d:	and    BYTE PTR [rsi+0x61],ch
   140028080:	ins    DWORD PTR es:[rdi],dx
   140028081:	gs add BYTE PTR cs:[rax],al
	...
   14002808d:	add    BYTE PTR [rax],al
   14002808f:	add    BYTE PTR [rdx+0x65],dh
   140028092:	addr32 gs js 0x1400280f5
   140028096:	gs jb  0x14002810b
   140028099:	outs   dx,DWORD PTR ds:[rsi]
   14002809a:	jb     0x1400280c4
   14002809c:	gs jb  0x140028111
   14002809f:	outs   dx,DWORD PTR ds:[rsi]
   1400280a0:	jb     0x140028101
   1400280a2:	gs jae 0x140028108
   1400280a5:	(bad)  
   1400280a6:	jo     0x14002810d
   1400280a8:	sub    DWORD PTR [rdx],edi
   1400280aa:	and    BYTE PTR [rax+rbp*2+0x65],dl
   1400280ae:	and    BYTE PTR [rbp+0x78],ah
   1400280b1:	jo     0x140028125
   1400280b3:	gs jae 0x140028129
   1400280b6:	imul   ebp,DWORD PTR [rdi+0x6e],0x6e6f6320
   1400280bd:	je     0x140028120
   1400280bf:	imul   ebp,DWORD PTR [rsi+0x65],0x6e612064
   1400280c6:	and    BYTE PTR [rcx+0x6e],ch
   1400280c9:	jbe    0x14002812c
   1400280cb:	ins    BYTE PTR es:[rdi],dx
   1400280cc:	imul   esp,DWORD PTR [rax+riz*1+0x65],0x70616373
   1400280d4:	gs and BYTE PTR fs:[rbx+0x68],ah
   1400280d9:	(bad)  
   1400280da:	jb     0x14002813d
   1400280dc:	movsxd esi,DWORD PTR [rbp+riz*2+0x72]
   1400280e0:	sub    al,0x20
   1400280e2:	outs   dx,DWORD PTR ds:[rsi]
   1400280e3:	jb     0x140028105
   1400280e5:	(bad)  
   1400280e6:	and    BYTE PTR [rdx+rsi*2+0x61],dh
   1400280ea:	imul   ebp,DWORD PTR [rcx+rbp*2+0x6e],0x73652067
   1400280f2:	movsxd esp,DWORD PTR [rcx+0x70]
   1400280f5:	gs add BYTE PTR cs:[rax],al
   1400280f9:	add    BYTE PTR [rax],al
   1400280fb:	add    BYTE PTR [rax],al
   1400280fd:	add    BYTE PTR [rax],al
   1400280ff:	add    BYTE PTR [rdx+0x65],dh
   140028102:	addr32 gs js 0x140028165
   140028106:	gs jb  0x14002817b
   140028109:	outs   dx,DWORD PTR ds:[rsi]
   14002810a:	jb     0x140028134
   14002810c:	gs jb  0x140028181
   14002810f:	outs   dx,DWORD PTR ds:[rsi]
   140028110:	jb     0x140028171
   140028112:	(bad)  
   140028114:	movsxd ebp,DWORD PTR [rbx+0x72]
   140028117:	sub    WORD PTR gs:[rdx],di
   14002811b:	and    BYTE PTR [rax+rbp*2+0x65],dl
   14002811f:	and    BYTE PTR [rbp+0x78],ah
   140028122:	jo     0x140028196
   140028124:	gs jae 0x14002819a
   140028127:	imul   ebp,DWORD PTR [rdi+0x6e],0x6e6f6320
   14002812e:	je     0x140028191
   140028130:	imul   ebp,DWORD PTR [rsi+0x65],0x6e612064
   140028137:	and    BYTE PTR [rcx+0x6e],ch
   14002813a:	jbe    0x14002819d
   14002813c:	ins    BYTE PTR es:[rdi],dx
   14002813d:	imul   esp,DWORD PTR [rax+riz*1+0x62],0x206b6361
   140028145:	jb     0x1400281ac
   140028147:	data16 gs jb 0x1400281b0
   14002814b:	outs   dx,BYTE PTR ds:[rsi]
   14002814c:	movsxd esp,DWORD PTR [rbp+0x2e]
   14002814f:	add    BYTE PTR [rdx+0x65],dh
   140028152:	addr32 gs js 0x1400281b5
   140028156:	gs jb  0x1400281cb
   140028159:	outs   dx,DWORD PTR ds:[rsi]
   14002815a:	jb     0x140028184
   14002815c:	gs jb  0x1400281d1
   14002815f:	outs   dx,DWORD PTR ds:[rsi]
   140028160:	jb     0x1400281c1
   140028162:	(bad)  
   140028164:	(bad)  
   140028165:	movsxd ebp,DWORD PTR [rbx+0x29]
   140028168:	cmp    ah,BYTE PTR [rax]
   14002816a:	push   rsp
   14002816b:	push   0x78652065
   140028170:	jo     0x1400281e4
   140028172:	gs jae 0x1400281e8
   140028175:	imul   ebp,DWORD PTR [rdi+0x6e],0x6e6f6320
   14002817c:	je     0x1400281df
   14002817e:	imul   ebp,DWORD PTR [rsi+0x65],0x696d2064
   140028185:	jae    0x1400281f4
   140028187:	(bad)  
   140028188:	je     0x1400281ed
   14002818a:	push   0x5b206465
   14002818f:	and    BYTE PTR [rcx+0x6e],ah
   140028192:	and    BYTE PTR fs:[rbp+0x2e],bl
	...
   14002819e:	add    BYTE PTR [rax],al
   1400281a0:	jb     0x140028207
   1400281a2:	addr32 gs js 0x140028205
   1400281a6:	gs jb  0x14002821b
   1400281a9:	outs   dx,DWORD PTR ds:[rsi]
   1400281aa:	jb     0x1400281d4
   1400281ac:	gs jb  0x140028221
   1400281af:	outs   dx,DWORD PTR ds:[rsi]
   1400281b0:	jb     0x140028211
   1400281b2:	jo     0x140028215
   1400281b4:	jb     0x14002821b
   1400281b6:	outs   dx,BYTE PTR ds:[rsi]
   1400281b7:	sub    DWORD PTR [rdx],edi
   1400281b9:	and    BYTE PTR [rax+rbp*2+0x65],dl
   1400281bd:	and    BYTE PTR [rbp+0x78],ah
   1400281c0:	jo     0x140028234
   1400281c2:	gs jae 0x140028238
   1400281c5:	imul   ebp,DWORD PTR [rdi+0x6e],0x6e6f6320
   1400281cc:	je     0x14002822f
   1400281ce:	imul   ebp,DWORD PTR [rsi+0x65],0x696d2064
   1400281d5:	jae    0x140028244
   1400281d7:	(bad)  
   1400281d8:	je     0x14002823d
   1400281da:	push   0x28206465
   1400281df:	and    BYTE PTR [rcx+0x6e],ah
   1400281e2:	and    BYTE PTR fs:[rcx],ch
   1400281e5:	add    BYTE PTR cs:[rax],al
	...
   1400281f0:	jb     0x140028257
   1400281f2:	addr32 gs js 0x140028255
   1400281f6:	gs jb  0x14002826b
   1400281f9:	outs   dx,DWORD PTR ds:[rsi]
   1400281fa:	jb     0x140028224
   1400281fc:	gs jb  0x140028271
   1400281ff:	outs   dx,DWORD PTR ds:[rsi]
   140028200:	jb     0x140028261
   140028202:	(bad)  
   140028204:	(bad)  
   140028205:	movsxd esp,DWORD PTR [rbp+0x29]
   140028208:	cmp    ah,BYTE PTR [rax]
   14002820a:	push   rsp
   14002820b:	push   0x78652065
   140028210:	jo     0x140028284
   140028212:	gs jae 0x140028288
   140028215:	imul   ebp,DWORD PTR [rdi+0x6e],0x6e6f6320
   14002821c:	je     0x14002827f
   14002821e:	imul   ebp,DWORD PTR [rsi+0x65],0x696d2064
   140028225:	jae    0x140028294
   140028227:	(bad)  
   140028228:	je     0x14002828d
   14002822a:	push   0x7b206465
   14002822f:	and    BYTE PTR [rcx+0x6e],ah
   140028232:	and    BYTE PTR fs:[rbp+0x2e],bh
	...
   14002823e:	add    BYTE PTR [rax],al
   140028240:	jb     0x1400282a7
   140028242:	addr32 gs js 0x1400282a5
   140028246:	gs jb  0x1400282bb
   140028249:	outs   dx,DWORD PTR ds:[rsi]
   14002824a:	jb     0x140028274
   14002824c:	gs jb  0x1400282c1
   14002824f:	outs   dx,DWORD PTR ds:[rsi]
   140028250:	jb     0x1400282b1
   140028252:	(bad)
   140028257:	(bad)  
   140028258:	movsxd esp,DWORD PTR [rbp+0x29]
   14002825b:	cmp    ah,BYTE PTR [rax]
   14002825d:	push   rsp
   14002825e:	push   0x78652065
   140028263:	jo     0x1400282d7
   140028265:	gs jae 0x1400282db
   140028268:	imul   ebp,DWORD PTR [rdi+0x6e],0x6e6f6320
   14002826f:	je     0x1400282d2
   140028271:	imul   ebp,DWORD PTR [rsi+0x65],0x6e612064
   140028278:	and    BYTE PTR [rcx+0x6e],ch
   14002827b:	jbe    0x1400282de
   14002827d:	ins    BYTE PTR es:[rdi],dx
   14002827e:	imul   esp,DWORD PTR [rax+riz*1+0x72],0x65676e61
   140028286:	and    BYTE PTR [rcx+0x6e],ch
   140028289:	and    BYTE PTR [rcx+0x20],ah
   14002828c:	jnp    0x1400282ae
   14002828e:	gs js  0x140028301
   140028291:	jb     0x1400282f8
   140028293:	jae    0x140028308
   140028295:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e7d20
   14002829c:	add    BYTE PTR [rax],al
   14002829e:	add    BYTE PTR [rax],al
   1400282a0:	jb     0x140028307
   1400282a2:	addr32 gs js 0x140028305
   1400282a6:	gs jb  0x14002831b
   1400282a9:	outs   dx,DWORD PTR ds:[rsi]
   1400282aa:	jb     0x1400282d4
   1400282ac:	gs jb  0x140028321
   1400282af:	outs   dx,DWORD PTR ds:[rsi]
   1400282b0:	jb     0x140028311
   1400282b2:	jb     0x140028315
   1400282b4:	outs   dx,BYTE PTR ds:[rsi]
   1400282b5:	sub    DWORD PTR gs:[edx],edi
   1400282b9:	and    BYTE PTR [rax+rbp*2+0x65],dl
   1400282bd:	and    BYTE PTR [rbp+0x78],ah
   1400282c0:	jo     0x140028334
   1400282c2:	gs jae 0x140028338
   1400282c5:	imul   ebp,DWORD PTR [rdi+0x6e],0x6e6f6320
   1400282cc:	je     0x14002832f
   1400282ce:	imul   ebp,DWORD PTR [rsi+0x65],0x6e612064
   1400282d5:	and    BYTE PTR [rcx+0x6e],ch
   1400282d8:	jbe    0x14002833b
   1400282da:	ins    BYTE PTR es:[rdi],dx
   1400282db:	imul   esp,DWORD PTR [rax+riz*1+0x63],0x61726168
   1400282e3:	movsxd esi,DWORD PTR [rbp+riz*2+0x72]
   1400282e7:	and    BYTE PTR [rdx+0x61],dh
   1400282ea:	outs   dx,BYTE PTR ds:[rsi]
   1400282eb:	addr32 gs sub al,0x20
   1400282ef:	jae    0x140028366
   1400282f1:	movsxd ebp,DWORD PTR [rax+0x20]
   1400282f4:	(bad)  
   1400282f5:	jae    0x140028317
   1400282f7:	pop    rbx
   1400282f8:	(bad)  
   1400282f9:	sub    eax,0x69205d61
   1400282fe:	outs   dx,BYTE PTR ds:[rsi]
   1400282ff:	and    BYTE PTR [rbp+0x6f],ch
   140028302:	jae    0x140028378
   140028304:	and    BYTE PTR [rbp+0x6e],ah
   140028307:	movsxd ebp,DWORD PTR [rdi+0x64]
   14002830a:	imul   ebp,DWORD PTR [rsi+0x67],0x72002e73
   140028311:	gs addr32 gs js 0x140028375
   140028316:	gs jb  0x14002838b
   140028319:	outs   dx,DWORD PTR ds:[rsi]
   14002831a:	jb     0x140028344
   14002831c:	gs jb  0x140028391
   14002831f:	outs   dx,DWORD PTR ds:[rsi]
   140028320:	jb     0x140028381
   140028322:	jae    0x140028394
   140028324:	(bad)  
   140028325:	movsxd esp,DWORD PTR [rbp+0x29]
   140028328:	cmp    ah,BYTE PTR [rax]
   14002832a:	push   rsp
   14002832b:	push   0x20657265
   140028330:	ja     0x140028393
   140028332:	jae    0x140028354
   140028334:	imul   ebp,DWORD PTR [rsi+0x73],0x69666675
   14002833b:	movsxd ebp,DWORD PTR [rcx+0x65]
   14002833e:	outs   dx,BYTE PTR ds:[rsi]
   14002833f:	je     0x140028361
   140028341:	ins    DWORD PTR es:[rdi],dx
   140028342:	gs ins DWORD PTR es:[rdi],dx
   140028344:	outs   dx,DWORD PTR ds:[rsi]
   140028345:	jb     0x1400283c0
   140028347:	and    BYTE PTR [rdi+rbp*2+0x20],dh
   14002834b:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14002834e:	jbe    0x1400283b5
   140028350:	jb     0x1400283c6
   140028352:	and    BYTE PTR [rax+rbp*2+0x65],dh
   140028356:	and    BYTE PTR [rbp+0x78],ah
   140028359:	jo     0x1400283cd
   14002835b:	gs jae 0x1400283d1
   14002835e:	imul   ebp,DWORD PTR [rdi+0x6e],0x746e6920
   140028365:	outs   dx,DWORD PTR ds:[rsi]
   140028366:	and    BYTE PTR [rcx+0x20],ah
   140028369:	imul   bp,WORD PTR [rsi+0x69],0x6574
   14002836f:	and    BYTE PTR [rbx+0x74],dh
   140028372:	(bad)  
   140028373:	je     0x1400283da
   140028375:	and    BYTE PTR [rbp+0x61],ch
   140028378:	movsxd ebp,DWORD PTR [rax+0x69]
   14002837b:	outs   dx,BYTE PTR ds:[rsi]
   14002837c:	gs add BYTE PTR cs:[rax],al
   140028380:	jb     0x1400283e7
   140028382:	addr32 gs js 0x1400283e5
   140028386:	gs jb  0x1400283fb
   140028389:	outs   dx,DWORD PTR ds:[rsi]
   14002838a:	jb     0x1400283b4
   14002838c:	gs jb  0x140028401
   14002838f:	outs   dx,DWORD PTR ds:[rsi]
   140028390:	jb     0x1400283f1
   140028392:	(bad)
   140028397:	jo     0x1400283fe
   140028399:	(bad)  
   14002839a:	je     0x1400283c5
   14002839c:	cmp    ah,BYTE PTR [rax]
   14002839e:	rex.WRXB outs dx,BYTE PTR ds:[rsi]
   1400283a0:	and    BYTE PTR gs:[rdi+0x66],ch
   1400283a4:	and    BYTE PTR [rdx],ch
   1400283a6:	(bad)  
   1400283a7:	sub    edi,DWORD PTR [rbx+0x20]
   1400283aa:	ja     0x14002840d
   1400283ac:	jae    0x1400283ce
   1400283ae:	outs   dx,BYTE PTR ds:[rsi]
   1400283af:	outs   dx,DWORD PTR ds:[rsi]
   1400283b0:	je     0x1400283d2
   1400283b2:	jo     0x140028426
   1400283b4:	movsxd esp,DWORD PTR gs:[rbp+0x64]
   1400283b8:	gs and BYTE PTR fs:[rdx+0x79],ah
   1400283bd:	and    BYTE PTR [rcx+0x20],ah
   1400283c0:	jbe    0x140028423
   1400283c2:	ins    BYTE PTR es:[rdi],dx
   1400283c3:	imul   esp,DWORD PTR [rax+riz*1+0x72],0x6c756765
   1400283cb:	(bad)  
   1400283cc:	jb     0x1400283ee
   1400283ce:	gs js  0x140028441
   1400283d1:	jb     0x140028438
   1400283d3:	jae    0x140028448
   1400283d5:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e
   1400283dc:	add    BYTE PTR [rax],al
   1400283de:	add    BYTE PTR [rax],al
   1400283e0:	jb     0x140028447
   1400283e2:	addr32 gs js 0x140028445
   1400283e6:	gs jb  0x14002845b
   1400283e9:	outs   dx,DWORD PTR ds:[rsi]
   1400283ea:	jb     0x140028414
   1400283ec:	gs jb  0x140028461
   1400283ef:	outs   dx,DWORD PTR ds:[rsi]
   1400283f0:	jb     0x140028451
   1400283f2:	movsxd ebp,DWORD PTR [rdi+0x6d]
   1400283f5:	jo     0x140028463
   1400283f7:	gs js  0x140028463
   1400283fa:	je     0x140028475
   1400283fc:	sub    DWORD PTR [rdx],edi
   1400283fe:	and    BYTE PTR [rax+rbp*2+0x65],dl
   140028402:	and    BYTE PTR [rbx+0x6f],ah
   140028405:	ins    DWORD PTR es:[rdi],dx
   140028406:	jo     0x140028474
   140028408:	gs js  0x140028474
   14002840b:	je     0x140028486
   14002840d:	and    BYTE PTR [rdi+0x66],ch
   140028410:	and    BYTE PTR [rcx+0x6e],ah
   140028413:	and    BYTE PTR [rcx+0x74],ah
   140028416:	je     0x14002847d
   140028418:	ins    DWORD PTR es:[rdi],dx
   140028419:	jo     0x14002848f
   14002841b:	gs and BYTE PTR fs:[rbp+0x61],ch
   140028420:	je     0x140028485
   140028422:	push   0x61676120
   140028427:	imul   ebp,DWORD PTR [rsi+0x73],0x20612074
   14002842e:	jb     0x140028495
   140028430:	addr32 jne 0x14002849f
   140028433:	(bad)  
   140028434:	jb     0x140028456
   140028436:	gs js  0x1400284a9
   140028439:	jb     0x1400284a0
   14002843b:	jae    0x1400284b0
   14002843d:	imul   ebp,DWORD PTR [rdi+0x6e],0x63786520
   140028444:	gs gs fs gs and BYTE PTR fs:[rcx+0x20],ah
   14002844c:	jo     0x1400284c0
   14002844e:	gs sub eax,0x20746573
   140028454:	ins    BYTE PTR es:[rdi],dx
   140028455:	gs jbe 0x1400284bd
   140028458:	ins    BYTE PTR es:[rdi],dx
   140028459:	add    BYTE PTR cs:[rax],al
   14002845c:	add    BYTE PTR [rax],al
   14002845e:	add    BYTE PTR [rax],al
   140028460:	jb     0x1400284c7
   140028462:	addr32 gs js 0x1400284c5
   140028466:	gs jb  0x1400284db
   140028469:	outs   dx,DWORD PTR ds:[rsi]
   14002846a:	jb     0x140028494
   14002846c:	gs jb  0x1400284e1
   14002846f:	outs   dx,DWORD PTR ds:[rsi]
   140028470:	jb     0x1400284d1
   140028472:	jae    0x1400284e8
   140028474:	(bad)  
   140028475:	movsxd ebp,DWORD PTR [rbx+0x29]
   140028478:	cmp    ah,BYTE PTR [rax]
   14002847a:	push   rsp
   14002847b:	push   0x20657265
   140028480:	ja     0x1400284e3
   140028482:	jae    0x1400284a4
   140028484:	imul   ebp,DWORD PTR [rsi+0x73],0x69666675
   14002848b:	movsxd ebp,DWORD PTR [rcx+0x65]
   14002848e:	outs   dx,BYTE PTR ds:[rsi]
   14002848f:	je     0x1400284b1
   140028491:	ins    DWORD PTR es:[rdi],dx
   140028492:	gs ins DWORD PTR es:[rdi],dx
   140028494:	outs   dx,DWORD PTR ds:[rsi]
   140028495:	jb     0x140028510
   140028497:	and    BYTE PTR [rdi+rbp*2+0x20],dh
   14002849b:	fs gs je 0x140028504
   14002849f:	jb     0x14002850e
   1400284a1:	imul   ebp,DWORD PTR [rsi+0x65],0x65687720
   1400284a8:	je     0x140028512
   1400284aa:	gs jb  0x1400284cd
   1400284ad:	je     0x140028517
   1400284af:	and    BYTE PTR gs:[rdx+0x65],dh
   1400284b3:	addr32 jne 0x140028522
   1400284b6:	(bad)  
   1400284b7:	jb     0x1400284d9
   1400284b9:	gs js  0x14002852c
   1400284bc:	jb     0x140028523
   1400284be:	jae    0x140028533
   1400284c0:	imul   ebp,DWORD PTR [rdi+0x6e],0x756f6320
   1400284c7:	ins    BYTE PTR es:[rdi],dx
   1400284c8:	and    BYTE PTR fs:[rbp+0x61],ch
   1400284cc:	je     0x140028531
   1400284ce:	push   0x65687420
   1400284d3:	and    BYTE PTR [rbx+0x70],dh
   1400284d6:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
   1400284da:	imul   esp,DWORD PTR [rbp+0x64],0x61686320
   1400284e1:	jb     0x140028544
   1400284e3:	movsxd esi,DWORD PTR [rbp+riz*2+0x72]
   1400284e7:	and    BYTE PTR [rbx+0x65],dh
   1400284ea:	jno    0x140028561
   1400284ec:	outs   dx,BYTE PTR gs:[rsi]
   1400284ee:	movsxd esp,DWORD PTR [rbp+0x2e]
   1400284f1:	add    BYTE PTR [rax],al
   1400284f3:	add    BYTE PTR [rax],al
   1400284f5:	add    BYTE PTR [rax],al
   1400284f7:	add    BYTE PTR [rdx+0x65],dh
   1400284fa:	addr32 gs js 0x14002855d
   1400284fe:	gs jb  0x140028573
   140028501:	outs   dx,DWORD PTR ds:[rsi]
   140028502:	jb     0x14002852c
   140028504:	gs jb  0x140028579
   140028507:	outs   dx,DWORD PTR ds:[rsi]
   140028508:	jb     0x140028569
   14002850a:	jo     0x14002856d
   14002850c:	jb     0x140028581
   14002850e:	sub    DWORD PTR gs:[rax],eax
   140028511:	add    BYTE PTR [rax],al
   140028513:	add    BYTE PTR [rax],al
   140028515:	add    BYTE PTR [rax],al
   140028517:	add    BYTE PTR [rdx+0x65],dh
   14002851a:	addr32 gs js 0x14002857d
   14002851e:	gs jb  0x140028593
   140028521:	outs   dx,DWORD PTR ds:[rsi]
   140028522:	jb     0x14002854c
   140028524:	gs jb  0x140028599
   140028527:	outs   dx,DWORD PTR ds:[rsi]
   140028528:	jb     0x140028589
   14002852a:	jae    0x1400285a5
   14002852c:	outs   dx,BYTE PTR ds:[rsi]
   14002852d:	je     0x140028590
   14002852f:	js     0x14002855a
   140028531:	add    BYTE PTR [rax],al
   140028533:	add    BYTE PTR [rax],al
   140028535:	add    BYTE PTR [rax],al
   140028537:	add    BYTE PTR [rdx+0x65],dh
   14002853a:	addr32 gs js 0x14002859d
   14002853e:	gs jb  0x1400285b3
   140028541:	outs   dx,DWORD PTR ds:[rsi]
   140028542:	jb     0x140028544
	...
   140028550:	add    eax,0x0
   140028555:	add    BYTE PTR [rax],al
   140028557:	add    al,dh
   140028559:	mov    es,WORD PTR [rdx]
   14002855b:	rex add DWORD PTR [rax],eax
   14002855e:	add    BYTE PTR [rax],al
   140028560:	mov    bh,0x0
   140028562:	add    BYTE PTR [rax],al
   140028564:	add    BYTE PTR [rax],al
   140028566:	add    BYTE PTR [rax],al
   140028568:	or     BYTE PTR [rdi+0x14002],cl
   14002856e:	add    BYTE PTR [rax],al
   140028570:	adc    al,0x0
   140028572:	add    BYTE PTR [rax],al
   140028574:	add    BYTE PTR [rax],al
   140028576:	add    BYTE PTR [rax],al
   140028578:	sbb    BYTE PTR [rdi+0x14002],cl
   14002857e:	add    BYTE PTR [rax],al
   140028580:	outs   dx,DWORD PTR ds:[rsi]
   140028581:	add    BYTE PTR [rax],al
   140028583:	add    BYTE PTR [rax],al
   140028585:	add    BYTE PTR [rax],al
   140028587:	add    BYTE PTR [rax],ch
   140028589:	pop    QWORD PTR [rdx]
   14002858b:	rex add DWORD PTR [rax],eax
   14002858e:	add    BYTE PTR [rax],al
   140028590:	stos   BYTE PTR es:[rdi],al
   140028591:	add    BYTE PTR [rax],al
   140028593:	add    BYTE PTR [rax],al
   140028595:	add    BYTE PTR [rax],al
   140028597:	add    BYTE PTR [rax-0x71],al
   14002859a:	add    al,BYTE PTR [rax+0x1]
   14002859d:	add    BYTE PTR [rax],al
   14002859f:	add    BYTE PTR [rsi+0x0],cl
   1400285a5:	add    BYTE PTR [rax],al
   1400285a7:	add    BYTE PTR [rax-0x71],al
   1400285aa:	add    al,BYTE PTR [rax+0x1]
   1400285ad:	add    BYTE PTR [rax],al
   1400285af:	add    BYTE PTR [rdx+0x0],dl
   1400285b2:	add    BYTE PTR [rax],al
   1400285b4:	add    BYTE PTR [rax],al
   1400285b6:	add    BYTE PTR [rax],al
   1400285b8:	lock mov es,WORD PTR [rdx]
   1400285bb:	rex add DWORD PTR [rax],eax
   1400285be:	add    BYTE PTR [rax],al
   1400285c0:	repz add eax,DWORD PTR [rax]
   1400285c3:	add    BYTE PTR [rax],al
   1400285c5:	add    BYTE PTR [rax],al
   1400285c7:	add    BYTE PTR [rax-0x71],bl
   1400285ca:	add    al,BYTE PTR [rax+0x1]
   1400285cd:	add    BYTE PTR [rax],al
   1400285cf:	add    ah,dh
   1400285d1:	add    eax,DWORD PTR [rax]
   1400285d3:	add    BYTE PTR [rax],al
   1400285d5:	add    BYTE PTR [rax],al
   1400285d7:	add    BYTE PTR [rax-0x71],bl
   1400285da:	add    al,BYTE PTR [rax+0x1]
   1400285dd:	add    BYTE PTR [rax],al
   1400285df:	add    ch,dh
   1400285e1:	add    eax,DWORD PTR [rax]
   1400285e3:	add    BYTE PTR [rax],al
   1400285e5:	add    BYTE PTR [rax],al
   1400285e7:	add    BYTE PTR [rax-0x71],bl
   1400285ea:	add    al,BYTE PTR [rax+0x1]
   1400285ed:	add    BYTE PTR [rax],al
   1400285ef:	add    BYTE PTR [rax],dl
   1400285f1:	add    BYTE PTR [rax],al
   1400285f3:	add    BYTE PTR [rax],al
   1400285f5:	add    BYTE PTR [rax],al
   1400285f7:	add    al,dh
   1400285f9:	mov    es,WORD PTR [rdx]
   1400285fb:	rex add DWORD PTR [rax],eax
   1400285fe:	add    BYTE PTR [rax],al
   140028600:	(bad)  
   140028601:	add    BYTE PTR [rax],al
   140028603:	add    BYTE PTR [rax],al
   140028605:	add    BYTE PTR [rax],al
   140028607:	add    BYTE PTR [rax],bl
   140028609:	pop    QWORD PTR [rdx]
   14002860b:	rex add DWORD PTR [rax],eax
   14002860e:	add    BYTE PTR [rax],al
   140028610:	or     DWORD PTR fs:[rax],eax
   140028613:	add    BYTE PTR [rax],al
   140028615:	add    BYTE PTR [rax],al
   140028617:	add    BYTE PTR [rax-0x71],al
   14002861a:	add    al,BYTE PTR [rax+0x1]
   14002861d:	add    BYTE PTR [rax],al
   14002861f:	add    BYTE PTR [rcx+0x0],dl
   140028625:	add    BYTE PTR [rax],al
   140028627:	add    BYTE PTR [rax-0x71],ch
   14002862a:	add    al,BYTE PTR [rax+0x1]
   14002862d:	add    BYTE PTR [rax],al
   14002862f:	add    BYTE PTR [rbx],cl
   140028631:	add    DWORD PTR [rax],eax
   140028633:	add    BYTE PTR [rax],al
   140028635:	add    BYTE PTR [rax],al
   140028637:	add    BYTE PTR [rax+0x140028f],al
   14002863d:	add    BYTE PTR [rax],al
   14002863f:	add    BYTE PTR [rax+0x0],dh
   140028642:	add    BYTE PTR [rax],al
   140028644:	add    BYTE PTR [rax],al
   140028646:	add    BYTE PTR [rax],al
   140028648:	cwde   
   140028649:	pop    QWORD PTR [rdx]
   14002864b:	rex add DWORD PTR [rax],eax
   14002864e:	add    BYTE PTR [rax],al
   140028650:	push   rax
   140028651:	add    BYTE PTR [rax],al
   140028653:	add    BYTE PTR [rax],al
   140028655:	add    BYTE PTR [rax],al
   140028657:	add    BYTE PTR [rax],cl
   140028659:	pop    QWORD PTR [rdx]
   14002865b:	rex add DWORD PTR [rax],eax
   14002865e:	add    BYTE PTR [rax],al
   140028660:	add    al,BYTE PTR [rax]
   140028662:	add    BYTE PTR [rax],al
   140028664:	add    BYTE PTR [rax],al
   140028666:	add    BYTE PTR [rax],al
   140028668:	mov    al,0x8f
   14002866a:	add    al,BYTE PTR [rax+0x1]
   14002866d:	add    BYTE PTR [rax],al
   14002866f:	add    BYTE PTR [rdi],ah
   140028671:	add    BYTE PTR [rax],al
   140028673:	add    BYTE PTR [rax],al
   140028675:	add    BYTE PTR [rax],al
   140028677:	add    BYTE PTR [rax+0x140028f],bl
   14002867d:	add    BYTE PTR [rax],al
   14002867f:	add    BYTE PTR [rax+rax*1],cl
   140028682:	add    BYTE PTR [rax],al
   140028684:	add    BYTE PTR [rax],al
   140028686:	add    BYTE PTR [rax],al
   140028688:	lock mov es,WORD PTR [rdx]
   14002868b:	rex add DWORD PTR [rax],eax
   14002868e:	add    BYTE PTR [rax],al
   140028690:	sldt   WORD PTR [rax]
   140028693:	add    BYTE PTR [rax],al
   140028695:	add    BYTE PTR [rax],al
   140028697:	add    BYTE PTR [rax],bl
   140028699:	pop    QWORD PTR [rdx]
   14002869b:	rex add DWORD PTR [rax],eax
   14002869e:	add    BYTE PTR [rax],al
   1400286a0:	add    DWORD PTR [rax],eax
   1400286a2:	add    BYTE PTR [rax],al
   1400286a4:	add    BYTE PTR [rax],al
   1400286a6:	add    BYTE PTR [rax],al
   1400286a8:	ror    BYTE PTR [rdi+0x14002],1
   1400286ae:	add    BYTE PTR [rax],al
   1400286b0:	(bad)  
   1400286b1:	add    BYTE PTR [rax],al
   1400286b3:	add    BYTE PTR [rax],al
   1400286b5:	add    BYTE PTR [rax],al
   1400286b7:	add    BYTE PTR [rax+0x140028f],al
   1400286bd:	add    BYTE PTR [rax],al
   1400286bf:	add    BYTE PTR [rbx+0x0],bh
   1400286c2:	add    BYTE PTR [rax],al
   1400286c4:	add    BYTE PTR [rax],al
   1400286c6:	add    BYTE PTR [rax],al
   1400286c8:	or     BYTE PTR [rdi+0x14002],0x0
   1400286cf:	add    BYTE PTR [rcx],ah
   1400286d1:	add    BYTE PTR [rax],al
   1400286d3:	add    BYTE PTR [rax],al
   1400286d5:	add    BYTE PTR [rax],al
   1400286d7:	add    al,ch
   1400286d9:	pop    QWORD PTR [rdx]
   1400286db:	rex add DWORD PTR [rax],eax
   1400286de:	add    BYTE PTR [rax],al
   1400286e0:	(bad)  
   1400286e1:	add    BYTE PTR [rax],al
   1400286e3:	add    BYTE PTR [rax],al
   1400286e5:	add    BYTE PTR [rax],al
   1400286e7:	add    al,ch
   1400286e9:	pop    QWORD PTR [rdx]
   1400286eb:	rex add DWORD PTR [rax],eax
   1400286ee:	add    BYTE PTR [rax],al
   1400286f0:	add    DWORD PTR [rax],0x0
   1400286f3:	add    BYTE PTR [rax],al
   1400286f5:	add    BYTE PTR [rax],al
   1400286f7:	add    BYTE PTR [rax+0x140028f],al
   1400286fd:	add    BYTE PTR [rax],al
   1400286ff:	add    dh,ah
   140028701:	add    eax,DWORD PTR [rax]
   140028703:	add    BYTE PTR [rax],al
   140028705:	add    BYTE PTR [rax],al
   140028707:	add    al,dh
   140028709:	mov    es,WORD PTR [rdx]
   14002870b:	rex add DWORD PTR [rax],eax
   14002870e:	add    BYTE PTR [rax],al
   140028710:	or     BYTE PTR [rax],al
   140028712:	add    BYTE PTR [rax],al
   140028714:	add    BYTE PTR [rax],al
   140028716:	add    BYTE PTR [rax],al
   140028718:	add    BYTE PTR [rax+0x14002],dl
   14002871e:	add    BYTE PTR [rax],al
   140028720:	adc    eax,0x0
   140028725:	add    BYTE PTR [rax],al
   140028727:	add    BYTE PTR [rax],bl
   140028729:	nop
   14002872a:	add    al,BYTE PTR [rax+0x1]
   14002872d:	add    BYTE PTR [rax],al
   14002872f:	add    BYTE PTR [rcx],dl
   140028731:	add    BYTE PTR [rax],al
   140028733:	add    BYTE PTR [rax],al
   140028735:	add    BYTE PTR [rax],al
   140028737:	add    BYTE PTR [rax],bh
   140028739:	nop
   14002873a:	add    al,BYTE PTR [rax+0x1]
   14002873d:	add    BYTE PTR [rax],al
   14002873f:	add    BYTE PTR [rsi+0x0],ch
   140028742:	add    BYTE PTR [rax],al
   140028744:	add    BYTE PTR [rax],al
   140028746:	add    BYTE PTR [rax],al
   140028748:	pop    rax
   140028749:	pop    QWORD PTR [rdx]
   14002874b:	rex add DWORD PTR [rax],eax
   14002874e:	add    BYTE PTR [rax],al
   140028750:	(bad)  
   140028751:	or     DWORD PTR [rax],eax
   140028753:	add    BYTE PTR [rax],al
   140028755:	add    BYTE PTR [rax],al
   140028757:	add    BYTE PTR [rax-0x71],al
   14002875a:	add    al,BYTE PTR [rax+0x1]
   14002875d:	add    BYTE PTR [rax],al
   14002875f:	add    bl,ah
   140028761:	add    eax,DWORD PTR [rax]
   140028763:	add    BYTE PTR [rax],al
   140028765:	add    BYTE PTR [rax],al
   140028767:	add    BYTE PTR [rax-0x70],dl
   14002876a:	add    al,BYTE PTR [rax+0x1]
   14002876d:	add    BYTE PTR [rax],al
   14002876f:	add    BYTE PTR [rsi],cl
	...
   140028779:	nop
   14002877a:	add    al,BYTE PTR [rax+0x1]
   14002877d:	add    BYTE PTR [rax],al
   14002877f:	add    BYTE PTR [rbx],al
   140028781:	add    BYTE PTR [rax],al
   140028783:	add    BYTE PTR [rax],al
   140028785:	add    BYTE PTR [rax],al
   140028787:	add    BYTE PTR [rax+0x140028f],dh
   14002878d:	add    BYTE PTR [rax],al
   14002878f:	add    BYTE PTR [rsi],bl
   140028791:	add    BYTE PTR [rax],al
   140028793:	add    BYTE PTR [rax],al
   140028795:	add    BYTE PTR [rax],al
   140028797:	add    BYTE PTR [rax-0x71],bl
   14002879a:	add    al,BYTE PTR [rax+0x1]
   14002879d:	add    BYTE PTR [rax],al
   14002879f:	add    ch,dl
   1400287a1:	add    al,0x0
   1400287a3:	add    BYTE PTR [rax],al
   1400287a5:	add    BYTE PTR [rax],al
   1400287a7:	add    BYTE PTR [rax],bl
   1400287a9:	nop
   1400287aa:	add    al,BYTE PTR [rax+0x1]
   1400287ad:	add    BYTE PTR [rax],al
   1400287af:	add    BYTE PTR [rcx],bl
   1400287b1:	add    BYTE PTR [rax],al
   1400287b3:	add    BYTE PTR [rax],al
   1400287b5:	add    BYTE PTR [rax],al
   1400287b7:	add    BYTE PTR [rax-0x71],bl
   1400287ba:	add    al,BYTE PTR [rax+0x1]
   1400287bd:	add    BYTE PTR [rax],al
   1400287bf:	add    BYTE PTR [rax],ah
   1400287c1:	add    BYTE PTR [rax],al
   1400287c3:	add    BYTE PTR [rax],al
   1400287c5:	add    BYTE PTR [rax],al
   1400287c7:	add    al,dh
   1400287c9:	mov    es,WORD PTR [rdx]
   1400287cb:	rex add DWORD PTR [rax],eax
   1400287ce:	add    BYTE PTR [rax],al
   1400287d0:	add    al,0x0
   1400287d2:	add    BYTE PTR [rax],al
   1400287d4:	add    BYTE PTR [rax],al
   1400287d6:	add    BYTE PTR [rax],al
   1400287d8:	push   0x1400290
   1400287dd:	add    BYTE PTR [rax],al
   1400287df:	add    BYTE PTR [rip+0x0],bl        # 0x1400287e5
   1400287e5:	add    BYTE PTR [rax],al
   1400287e7:	add    BYTE PTR [rax-0x71],bl
   1400287ea:	add    al,BYTE PTR [rax+0x1]
   1400287ed:	add    BYTE PTR [rax],al
   1400287ef:	add    BYTE PTR [rbx],dl
   1400287f1:	add    BYTE PTR [rax],al
   1400287f3:	add    BYTE PTR [rax],al
   1400287f5:	add    BYTE PTR [rax],al
   1400287f7:	add    al,dh
   1400287f9:	mov    es,WORD PTR [rdx]
   1400287fb:	rex add DWORD PTR [rax],eax
   1400287fe:	add    BYTE PTR [rax],al
   140028800:	sbb    eax,0x27
   140028805:	add    BYTE PTR [rax],al
   140028807:	add    BYTE PTR [rax+0x1400290],al
   14002880d:	add    BYTE PTR [rax],al
   14002880f:	add    BYTE PTR [rax+0x27],al
   140028812:	add    BYTE PTR [rax],al
   140028814:	add    BYTE PTR [rax],al
   140028816:	add    BYTE PTR [rax],al
   140028818:	cwde   
   140028819:	nop
   14002881a:	add    al,BYTE PTR [rax+0x1]
   14002881d:	add    BYTE PTR [rax],al
   14002881f:	add    BYTE PTR [rcx+0x27],al
   140028822:	add    BYTE PTR [rax],al
   140028824:	add    BYTE PTR [rax],al
   140028826:	add    BYTE PTR [rax],al
   140028828:	test   al,0x90
   14002882a:	add    al,BYTE PTR [rax+0x1]
   14002882d:	add    BYTE PTR [rax],al
   14002882f:	add    BYTE PTR [rdi],bh
   140028831:	(bad)  
   140028832:	add    BYTE PTR [rax],al
   140028834:	add    BYTE PTR [rax],al
   140028836:	add    BYTE PTR [rax],al
   140028838:	rcl    BYTE PTR [rax+0x14002],0x0
   14002883f:	add    BYTE PTR [rip+0x27],dh        # 0x14002886c
   140028845:	add    BYTE PTR [rax],al
   140028847:	add    al,ah
   140028849:	nop
   14002884a:	add    al,BYTE PTR [rax+0x1]
   14002884d:	add    BYTE PTR [rax],al
   14002884f:	add    BYTE PTR [rcx],bl
   140028851:	(bad)  
   140028852:	add    BYTE PTR [rax],al
   140028854:	add    BYTE PTR [rax],al
   140028856:	add    BYTE PTR [rax],al
   140028858:	add    BYTE PTR [rcx+0x14002],dl
   14002885e:	add    BYTE PTR [rax],al
   140028860:	rex.RB (bad) 
   140028862:	add    BYTE PTR [rax],al
   140028864:	add    BYTE PTR [rax],al
   140028866:	add    BYTE PTR [rax],al
   140028868:	sbb    BYTE PTR [rcx+0x14002],dl
   14002886e:	add    BYTE PTR [rax],al
   140028870:	rex.WRB (bad) 
   140028872:	add    BYTE PTR [rax],al
   140028874:	add    BYTE PTR [rax],al
   140028876:	add    BYTE PTR [rax],al
   140028878:	xor    BYTE PTR [rcx+0x14002],dl
   14002887e:	add    BYTE PTR [rax],al
   140028880:	rex.RX (bad) 
   140028882:	add    BYTE PTR [rax],al
   140028884:	add    BYTE PTR [rax],al
   140028886:	add    BYTE PTR [rax],al
   140028888:	xchg   rcx,rax
   14002888a:	add    al,BYTE PTR [rax+0x1]
   14002888d:	add    BYTE PTR [rax],al
   14002888f:	add    BYTE PTR [rdi],dh
   140028891:	(bad)  
   140028892:	add    BYTE PTR [rax],al
   140028894:	add    BYTE PTR [rax],al
   140028896:	add    BYTE PTR [rax],al
   140028898:	(bad)  
   140028899:	xchg   ecx,eax
   14002889a:	add    al,BYTE PTR [rax+0x1]
   14002889d:	add    BYTE PTR [rax],al
   14002889f:	add    BYTE PTR [rsi],bl
   1400288a1:	(bad)  
   1400288a2:	add    BYTE PTR [rax],al
   1400288a4:	add    BYTE PTR [rax],al
   1400288a6:	add    BYTE PTR [rax],al
   1400288a8:	adc    BYTE PTR [rcx+0x14002],0x0
   1400288af:	add    BYTE PTR [rcx+0x27],dl
   1400288b2:	add    BYTE PTR [rax],al
   1400288b4:	add    BYTE PTR [rax],al
   1400288b6:	add    BYTE PTR [rax],al
   1400288b8:	nop
   1400288b9:	xchg   ecx,eax
   1400288ba:	add    al,BYTE PTR [rax+0x1]
   1400288bd:	add    BYTE PTR [rax],al
   1400288bf:	add    BYTE PTR [rdi+riz*1],dh
   1400288c2:	add    BYTE PTR [rax],al
   1400288c4:	add    BYTE PTR [rax],al
   1400288c6:	add    BYTE PTR [rax],al
   1400288c8:	test   al,0x91
   1400288ca:	add    al,BYTE PTR [rax+0x1]
   1400288cd:	add    BYTE PTR [rax],al
   1400288cf:	add    BYTE PTR [rdi+riz*1],dl
   1400288d2:	add    BYTE PTR [rax],al
   1400288d4:	add    BYTE PTR [rax],al
   1400288d6:	add    BYTE PTR [rax],al
   1400288d8:	rcl    BYTE PTR [rcx+0x14002],0x0
   1400288df:	add    BYTE PTR [rsi],ah
   1400288e1:	(bad)  
   1400288e2:	add    BYTE PTR [rax],al
   1400288e4:	add    BYTE PTR [rax],al
   1400288e6:	add    BYTE PTR [rax],al
   1400288e8:	rcl    BYTE PTR [rcx+0x14002],1
   1400288ee:	add    BYTE PTR [rax],al
   1400288f0:	rex.W (bad) 
   1400288f2:	add    BYTE PTR [rax],al
   1400288f4:	add    BYTE PTR [rax],al
   1400288f6:	add    BYTE PTR [rax],al
   1400288f8:	call   0x141428b8e
   1400288fd:	add    BYTE PTR [rax],al
   1400288ff:	add    BYTE PTR [rax],ch
   140028901:	(bad)  
   140028902:	add    BYTE PTR [rax],al
   140028904:	add    BYTE PTR [rax],al
   140028906:	add    BYTE PTR [rax],al
   140028908:	add    BYTE PTR [rdx+0x14002],dl
   14002890e:	add    BYTE PTR [rax],al
   140028910:	cmp    BYTE PTR [rdi],ah
   140028912:	add    BYTE PTR [rax],al
   140028914:	add    BYTE PTR [rax],al
   140028916:	add    BYTE PTR [rax],al
   140028918:	sbb    BYTE PTR [rdx+0x14002],dl
   14002891e:	add    BYTE PTR [rax],al
   140028920:	rex.WRXB (bad) 
   140028922:	add    BYTE PTR [rax],al
   140028924:	add    BYTE PTR [rax],al
   140028926:	add    BYTE PTR [rax],al
   140028928:	sub    BYTE PTR [rdx+0x14002],dl
   14002892e:	add    BYTE PTR [rax],al
   140028930:	rex.X (bad) 
   140028932:	add    BYTE PTR [rax],al
   140028934:	add    BYTE PTR [rax],al
   140028936:	add    BYTE PTR [rax],al
   140028938:	rex xchg edx,eax
   14002893a:	add    al,BYTE PTR [rax+0x1]
   14002893d:	add    BYTE PTR [rax],al
   14002893f:	add    BYTE PTR [rdi+riz*1+0x0],al
   140028943:	add    BYTE PTR [rax],al
   140028945:	add    BYTE PTR [rax],al
   140028947:	add    BYTE PTR [rax-0x6e],dl
   14002894a:	add    al,BYTE PTR [rax+0x1]
   14002894d:	add    BYTE PTR [rax],al
   14002894f:	add    BYTE PTR [rbx+0x27],al
   140028952:	add    BYTE PTR [rax],al
   140028954:	add    BYTE PTR [rax],al
   140028956:	add    BYTE PTR [rax],al
   140028958:	(bad)  
   140028959:	xchg   edx,eax
   14002895a:	add    al,BYTE PTR [rax+0x1]
   14002895d:	add    BYTE PTR [rax],al
   14002895f:	add    BYTE PTR [rdi+0x27],al
   140028962:	add    BYTE PTR [rax],al
   140028964:	add    BYTE PTR [rax],al
   140028966:	add    BYTE PTR [rax],al
   140028968:	js     0x1400288fc
   14002896a:	add    al,BYTE PTR [rax+0x1]
   14002896d:	add    BYTE PTR [rax],al
   14002896f:	add    BYTE PTR [rdx],bh
   140028971:	(bad)  
   140028972:	add    BYTE PTR [rax],al
   140028974:	add    BYTE PTR [rax],al
   140028976:	add    BYTE PTR [rax],al
   140028978:	mov    BYTE PTR [rdx+0x14002],dl
   14002897e:	add    BYTE PTR [rax],al
   140028980:	rex.WB (bad) 
   140028982:	add    BYTE PTR [rax],al
   140028984:	add    BYTE PTR [rax],al
   140028986:	add    BYTE PTR [rax],al
   140028988:	movabs al,ds:0x3600000001400292
   140028991:	(bad)  
   140028992:	add    BYTE PTR [rax],al
   140028994:	add    BYTE PTR [rax],al
   140028996:	add    BYTE PTR [rax],al
   140028998:	mov    al,0x92
   14002899a:	add    al,BYTE PTR [rax+0x1]
   14002899d:	add    BYTE PTR [rax],al
   14002899f:	add    BYTE PTR [rip+0x27],bh        # 0x1400289cc
   1400289a5:	add    BYTE PTR [rax],al
   1400289a7:	add    al,al
   1400289a9:	xchg   edx,eax
   1400289aa:	add    al,BYTE PTR [rax+0x1]
   1400289ad:	add    BYTE PTR [rax],al
   1400289af:	add    BYTE PTR [rbx],bh
   1400289b1:	(bad)  
   1400289b2:	add    BYTE PTR [rax],al
   1400289b4:	add    BYTE PTR [rax],al
   1400289b6:	add    BYTE PTR [rax],al
   1400289b8:	fcom   DWORD PTR [rdx+0x14002]
   1400289be:	add    BYTE PTR [rax],al
   1400289c0:	cmp    DWORD PTR [rdi],esp
   1400289c2:	add    BYTE PTR [rax],al
   1400289c4:	add    BYTE PTR [rax],al
   1400289c6:	add    BYTE PTR [rax],al
   1400289c8:	lock xchg edx,eax
   1400289ca:	add    al,BYTE PTR [rax+0x1]
   1400289cd:	add    BYTE PTR [rax],al
   1400289cf:	add    BYTE PTR [rdi+riz*1+0x0],cl
   1400289d3:	add    BYTE PTR [rax],al
   1400289d5:	add    BYTE PTR [rax],al
   1400289d7:	add    BYTE PTR [rax],cl
   1400289d9:	xchg   ebx,eax
   1400289da:	add    al,BYTE PTR [rax+0x1]
   1400289dd:	add    BYTE PTR [rax],al
   1400289df:	add    BYTE PTR [rbx],dh
   1400289e1:	(bad)  
   1400289e2:	add    BYTE PTR [rax],al
   1400289e4:	add    BYTE PTR [rax],al
   1400289e6:	add    BYTE PTR [rax],al
   1400289e8:	sbb    BYTE PTR [rbx+0x14002],dl
	...
   1400289fe:	add    BYTE PTR [rax],al
   140028a00:	data16 add BYTE PTR [rax],al
   140028a03:	add    BYTE PTR [rax],al
   140028a05:	add    BYTE PTR [rax],al
   140028a07:	add    BYTE PTR [rax],dh
   140028a09:	xchg   ebx,eax
   140028a0a:	add    al,BYTE PTR [rax+0x1]
   140028a0d:	add    BYTE PTR [rax],al
   140028a0f:	add    BYTE PTR [rax+rax*1+0x0],ah
   140028a13:	add    BYTE PTR [rax],al
   140028a15:	add    BYTE PTR [rax],al
   140028a17:	add    BYTE PTR [rax-0x6d],dl
   140028a1a:	add    al,BYTE PTR [rax+0x1]
   140028a1d:	add    BYTE PTR [rax],al
   140028a1f:	add    BYTE PTR [rbp+0x0],ah
   140028a22:	add    BYTE PTR [rax],al
   140028a24:	add    BYTE PTR [rax],al
   140028a26:	add    BYTE PTR [rax],al
   140028a28:	(bad)  
   140028a29:	xchg   ebx,eax
   140028a2a:	add    al,BYTE PTR [rax+0x1]
   140028a2d:	add    BYTE PTR [rax],al
   140028a2f:	add    BYTE PTR [rcx+0x0],dh
   140028a32:	add    BYTE PTR [rax],al
   140028a34:	add    BYTE PTR [rax],al
   140028a36:	add    BYTE PTR [rax],al
   140028a38:	js     0x1400289cd
   140028a3a:	add    al,BYTE PTR [rax+0x1]
   140028a3d:	add    BYTE PTR [rax],al
   140028a3f:	add    BYTE PTR [rdi],al
   140028a41:	add    BYTE PTR [rax],al
   140028a43:	add    BYTE PTR [rax],al
   140028a45:	add    BYTE PTR [rax],al
   140028a47:	add    BYTE PTR [rax+0x1400293],dl
   140028a4d:	add    BYTE PTR [rax],al
   140028a4f:	add    BYTE PTR [rcx],ah
   140028a51:	add    BYTE PTR [rax],al
   140028a53:	add    BYTE PTR [rax],al
   140028a55:	add    BYTE PTR [rax],al
   140028a57:	add    BYTE PTR [rax+0x1400293],ch
   140028a5d:	add    BYTE PTR [rax],al
   140028a5f:	add    BYTE PTR [rsi],cl
   140028a61:	add    BYTE PTR [rax],al
   140028a63:	add    BYTE PTR [rax],al
   140028a65:	add    BYTE PTR [rax],al
   140028a67:	add    al,al
   140028a69:	xchg   ebx,eax
   140028a6a:	add    al,BYTE PTR [rax+0x1]
   140028a6d:	add    BYTE PTR [rax],al
   140028a6f:	add    BYTE PTR [rcx],cl
   140028a71:	add    BYTE PTR [rax],al
   140028a73:	add    BYTE PTR [rax],al
   140028a75:	add    BYTE PTR [rax],al
   140028a77:	add    al,dl
   140028a79:	xchg   ebx,eax
   140028a7a:	add    al,BYTE PTR [rax+0x1]
   140028a7d:	add    BYTE PTR [rax],al
   140028a7f:	add    BYTE PTR [rax+0x0],ch
   140028a82:	add    BYTE PTR [rax],al
   140028a84:	add    BYTE PTR [rax],al
   140028a86:	add    BYTE PTR [rax],al
   140028a88:	call   0x141428d20
   140028a8d:	add    BYTE PTR [rax],al
   140028a8f:	add    BYTE PTR [rax],ah
   140028a91:	add    BYTE PTR [rax],al
   140028a93:	add    BYTE PTR [rax],al
   140028a95:	add    BYTE PTR [rax],al
   140028a97:	add    al,bh
   140028a99:	xchg   ebx,eax
   140028a9a:	add    al,BYTE PTR [rax+0x1]
   140028a9d:	add    BYTE PTR [rax],al
   140028a9f:	add    BYTE PTR [rdx+0x0],ch
   140028aa2:	add    BYTE PTR [rax],al
   140028aa4:	add    BYTE PTR [rax],al
   140028aa6:	add    BYTE PTR [rax],al
   140028aa8:	or     BYTE PTR [rdx+rax*1+0x140],dl
   140028aaf:	add    BYTE PTR [rdi+0x0],ah
   140028ab2:	add    BYTE PTR [rax],al
   140028ab4:	add    BYTE PTR [rax],al
   140028ab6:	add    BYTE PTR [rax],al
   140028ab8:	and    BYTE PTR [rdx+rax*1+0x140],dl
   140028abf:	add    BYTE PTR [rbx+0x0],ch
   140028ac2:	add    BYTE PTR [rax],al
   140028ac4:	add    BYTE PTR [rax],al
   140028ac6:	add    BYTE PTR [rax],al
   140028ac8:	rex xchg esp,eax
   140028aca:	add    al,BYTE PTR [rax+0x1]
   140028acd:	add    BYTE PTR [rax],al
   140028acf:	add    BYTE PTR [rax+rax*1+0x0],ch
   140028ad3:	add    BYTE PTR [rax],al
   140028ad5:	add    BYTE PTR [rax],al
   140028ad7:	add    BYTE PTR [rax-0x6c],bl
   140028ada:	add    al,BYTE PTR [rax+0x1]
   140028add:	add    BYTE PTR [rax],al
   140028adf:	add    BYTE PTR [rdx],dl
   140028ae1:	add    BYTE PTR [rax],al
   140028ae3:	add    BYTE PTR [rax],al
   140028ae5:	add    BYTE PTR [rax],al
   140028ae7:	add    BYTE PTR [rax],bh
   140028ae9:	nop
   140028aea:	add    al,BYTE PTR [rax+0x1]
   140028aed:	add    BYTE PTR [rax],al
   140028aef:	add    BYTE PTR [rbp+0x0],ch
   140028af2:	add    BYTE PTR [rax],al
   140028af4:	add    BYTE PTR [rax],al
   140028af6:	add    BYTE PTR [rax],al
   140028af8:	jo     0x140028a8e
   140028afa:	add    al,BYTE PTR [rax+0x1]
   140028afd:	add    BYTE PTR [rax],al
   140028aff:	add    BYTE PTR [rax],dl
   140028b01:	add    BYTE PTR [rax],al
   140028b03:	add    BYTE PTR [rax],al
   140028b05:	add    BYTE PTR [rax],al
   140028b07:	add    BYTE PTR [rax-0x71],al
   140028b0a:	add    al,BYTE PTR [rax+0x1]
   140028b0d:	add    BYTE PTR [rax],al
   140028b0f:	add    BYTE PTR [rcx],ch
   140028b11:	add    BYTE PTR [rax],al
   140028b13:	add    BYTE PTR [rax],al
   140028b15:	add    BYTE PTR [rax],al
   140028b17:	add    BYTE PTR [rax-0x71],ch
   140028b1a:	add    al,BYTE PTR [rax+0x1]
   140028b1d:	add    BYTE PTR [rax],al
   140028b1f:	add    BYTE PTR [rax],cl
   140028b21:	add    BYTE PTR [rax],al
   140028b23:	add    BYTE PTR [rax],al
   140028b25:	add    BYTE PTR [rax],al
   140028b27:	add    BYTE PTR [rax+0x1400294],dl
   140028b2d:	add    BYTE PTR [rax],al
   140028b2f:	add    BYTE PTR [rcx],dl
   140028b31:	add    BYTE PTR [rax],al
   140028b33:	add    BYTE PTR [rax],al
   140028b35:	add    BYTE PTR [rax],al
   140028b37:	add    BYTE PTR [rax],cl
   140028b39:	pop    QWORD PTR [rdx]
   140028b3b:	rex add DWORD PTR [rax],eax
   140028b3e:	add    BYTE PTR [rax],al
   140028b40:	sbb    eax,DWORD PTR [rax]
   140028b42:	add    BYTE PTR [rax],al
   140028b44:	add    BYTE PTR [rax],al
   140028b46:	add    BYTE PTR [rax],al
   140028b48:	test   al,0x94
   140028b4a:	add    al,BYTE PTR [rax+0x1]
   140028b4d:	add    BYTE PTR [rax],al
   140028b4f:	add    BYTE PTR [rsi],ah
   140028b51:	add    BYTE PTR [rax],al
   140028b53:	add    BYTE PTR [rax],al
   140028b55:	add    BYTE PTR [rax],al
   140028b57:	add    BYTE PTR [rax],ch
   140028b59:	pop    QWORD PTR [rdx]
   140028b5b:	rex add DWORD PTR [rax],eax
   140028b5e:	add    BYTE PTR [rax],al
   140028b60:	sub    BYTE PTR [rax],al
   140028b62:	add    BYTE PTR [rax],al
   140028b64:	add    BYTE PTR [rax],al
   140028b66:	add    BYTE PTR [rax],al
   140028b68:	ror    BYTE PTR [rdi+0x14002],1
   140028b6e:	add    BYTE PTR [rax],al
   140028b70:	outs   dx,BYTE PTR ds:[rsi]
   140028b71:	add    BYTE PTR [rax],al
   140028b73:	add    BYTE PTR [rax],al
   140028b75:	add    BYTE PTR [rax],al
   140028b77:	add    BYTE PTR [rax+0x1400294],bh
   140028b7d:	add    BYTE PTR [rax],al
   140028b7f:	add    BYTE PTR [rdi+0x0],ch
   140028b82:	add    BYTE PTR [rax],al
   140028b84:	add    BYTE PTR [rax],al
   140028b86:	add    BYTE PTR [rax],al
   140028b88:	rcl    BYTE PTR [rdx+rax*1+0x140],1
   140028b8f:	add    BYTE PTR [rdx],ch
   140028b91:	add    BYTE PTR [rax],al
   140028b93:	add    BYTE PTR [rax],al
   140028b95:	add    BYTE PTR [rax],al
   140028b97:	add    al,ch
   140028b99:	xchg   esp,eax
   140028b9a:	add    al,BYTE PTR [rax+0x1]
   140028b9d:	add    BYTE PTR [rax],al
   140028b9f:	add    BYTE PTR [rcx],bl
	...
   140028ba9:	xchg   ebp,eax
   140028baa:	add    al,BYTE PTR [rax+0x1]
   140028bad:	add    BYTE PTR [rax],al
   140028baf:	add    BYTE PTR [rax+rax*1],al
   140028bb2:	add    BYTE PTR [rax],al
   140028bb4:	add    BYTE PTR [rax],al
   140028bb6:	add    BYTE PTR [rax],al
   140028bb8:	rcl    BYTE PTR [rcx+0x14002],0x0
   140028bbf:	add    BYTE PTR [rsi],dl
   140028bc1:	add    BYTE PTR [rax],al
   140028bc3:	add    BYTE PTR [rax],al
   140028bc5:	add    BYTE PTR [rax],al
   140028bc7:	add    BYTE PTR [rax+0x140028f],al
   140028bcd:	add    BYTE PTR [rax],al
   140028bcf:	add    BYTE PTR [rip+0x0],bl        # 0x140028bd5
   140028bd5:	add    BYTE PTR [rax],al
   140028bd7:	add    BYTE PTR [rax],ch
   140028bd9:	xchg   ebp,eax
   140028bda:	add    al,BYTE PTR [rax+0x1]
   140028bdd:	add    BYTE PTR [rax],al
   140028bdf:	add    BYTE PTR [rip+0x0],al        # 0x140028be5
   140028be5:	add    BYTE PTR [rax],al
   140028be7:	add    BYTE PTR [rax-0x71],bl
   140028bea:	add    al,BYTE PTR [rax+0x1]
   140028bed:	add    BYTE PTR [rax],al
   140028bef:	add    BYTE PTR [rip+0x0],dl        # 0x140028bf5
   140028bf5:	add    BYTE PTR [rax],al
   140028bf7:	add    BYTE PTR [rax],bh
   140028bf9:	xchg   ebp,eax
   140028bfa:	add    al,BYTE PTR [rax+0x1]
   140028bfd:	add    BYTE PTR [rax],al
   140028bff:	add    BYTE PTR [rbx+0x0],dh
   140028c02:	add    BYTE PTR [rax],al
   140028c04:	add    BYTE PTR [rax],al
   140028c06:	add    BYTE PTR [rax],al
   140028c08:	xchg   rbp,rax
   140028c0a:	add    al,BYTE PTR [rax+0x1]
   140028c0d:	add    BYTE PTR [rax],al
   140028c0f:	add    BYTE PTR [rax+rax*1+0x0],dh
   140028c13:	add    BYTE PTR [rax],al
   140028c15:	add    BYTE PTR [rax],al
   140028c17:	add    BYTE PTR [rax-0x6b],bl
   140028c1a:	add    al,BYTE PTR [rax+0x1]
   140028c1d:	add    BYTE PTR [rax],al
   140028c1f:	add    BYTE PTR [rbp+0x0],dh
   140028c22:	add    BYTE PTR [rax],al
   140028c24:	add    BYTE PTR [rax],al
   140028c26:	add    BYTE PTR [rax],al
   140028c28:	push   0x1400295
   140028c2d:	add    BYTE PTR [rax],al
   140028c2f:	add    BYTE PTR [rsi+0x0],dh
   140028c32:	add    BYTE PTR [rax],al
   140028c34:	add    BYTE PTR [rax],al
   140028c36:	add    BYTE PTR [rax],al
   140028c38:	js     0x140028bcf
   140028c3a:	add    al,BYTE PTR [rax+0x1]
   140028c3d:	add    BYTE PTR [rax],al
   140028c3f:	add    BYTE PTR [rdi+0x0],dh
   140028c42:	add    BYTE PTR [rax],al
   140028c44:	add    BYTE PTR [rax],al
   140028c46:	add    BYTE PTR [rax],al
   140028c48:	nop
   140028c49:	xchg   ebp,eax
   140028c4a:	add    al,BYTE PTR [rax+0x1]
   140028c4d:	add    BYTE PTR [rax],al
   140028c4f:	add    BYTE PTR [rdx],cl
   140028c51:	add    BYTE PTR [rax],al
   140028c53:	add    BYTE PTR [rax],al
   140028c55:	add    BYTE PTR [rax],al
   140028c57:	add    BYTE PTR [rax+0x1400295],ah
   140028c5d:	add    BYTE PTR [rax],al
   140028c5f:	add    BYTE PTR [rcx+0x0],bh
   140028c62:	add    BYTE PTR [rax],al
   140028c64:	add    BYTE PTR [rax],al
   140028c66:	add    BYTE PTR [rax],al
   140028c68:	mov    eax,0x1400295
   140028c6d:	add    BYTE PTR [rax],al
   140028c6f:	add    BYTE PTR [rdi],ah
   140028c71:	add    BYTE PTR [rax],al
   140028c73:	add    BYTE PTR [rax],al
   140028c75:	add    BYTE PTR [rax],al
   140028c77:	add    al,ch
   140028c79:	pop    QWORD PTR [rdx]
   140028c7b:	rex add DWORD PTR [rax],eax
   140028c7e:	add    BYTE PTR [rax],al
   140028c80:	js     0x140028c82
   140028c82:	add    BYTE PTR [rax],al
   140028c84:	add    BYTE PTR [rax],al
   140028c86:	add    BYTE PTR [rax],al
   140028c88:	rcl    BYTE PTR [rbp+0x14002],0x0
   140028c8f:	add    BYTE PTR [rdx+0x0],bh
   140028c92:	add    BYTE PTR [rax],al
   140028c94:	add    BYTE PTR [rax],al
   140028c96:	add    BYTE PTR [rax],al
   140028c98:	fcom   DWORD PTR [rbp+0x14002]
   140028c9e:	add    BYTE PTR [rax],al
   140028ca0:	jnp    0x140028ca2
   140028ca2:	add    BYTE PTR [rax],al
   140028ca4:	add    BYTE PTR [rax],al
   140028ca6:	add    BYTE PTR [rax],al
   140028ca8:	call   0x141428f42
   140028cad:	add    BYTE PTR [rax],al
   140028caf:	add    BYTE PTR [rax+rax*1],bl
   140028cb2:	add    BYTE PTR [rax],al
   140028cb4:	add    BYTE PTR [rax],al
   140028cb6:	add    BYTE PTR [rax],al
   140028cb8:	cwde   
   140028cb9:	pop    QWORD PTR [rdx]
   140028cbb:	rex add DWORD PTR [rax],eax
   140028cbe:	add    BYTE PTR [rax],al
   140028cc0:	jl     0x140028cc2
   140028cc2:	add    BYTE PTR [rax],al
   140028cc4:	add    BYTE PTR [rax],al
   140028cc6:	add    BYTE PTR [rax],al
   140028cc8:	add    BYTE PTR [rsi+0x14002],dl
   140028cce:	add    BYTE PTR [rax],al
   140028cd0:	(bad)  
   140028cd1:	add    BYTE PTR [rax],al
   140028cd3:	add    BYTE PTR [rax],al
   140028cd5:	add    BYTE PTR [rax],al
   140028cd7:	add    BYTE PTR [rax],bl
   140028cd9:	xchg   esi,eax
   140028cda:	add    al,BYTE PTR [rax+0x1]
   140028cdd:	add    BYTE PTR [rax],al
   140028cdf:	add    BYTE PTR [rbx],dl
   140028ce1:	add    BYTE PTR [rax],al
   140028ce3:	add    BYTE PTR [rax],al
   140028ce5:	add    BYTE PTR [rax],al
   140028ce7:	add    BYTE PTR [rax],bl
   140028ce9:	pop    QWORD PTR [rdx]
   140028ceb:	rex add DWORD PTR [rax],eax
   140028cee:	add    BYTE PTR [rax],al
   140028cf0:	add    al,BYTE PTR [rax]
   140028cf2:	add    BYTE PTR [rax],al
   140028cf4:	add    BYTE PTR [rax],al
   140028cf6:	add    BYTE PTR [rax],al
   140028cf8:	mov    al,0x8f
   140028cfa:	add    al,BYTE PTR [rax+0x1]
   140028cfd:	add    BYTE PTR [rax],al
   140028cff:	add    BYTE PTR [rbx],al
   140028d01:	add    BYTE PTR [rax],al
   140028d03:	add    BYTE PTR [rax],al
   140028d05:	add    BYTE PTR [rax],al
   140028d07:	add    BYTE PTR [rax],bh
   140028d09:	xchg   esi,eax
   140028d0a:	add    al,BYTE PTR [rax+0x1]
   140028d0d:	add    BYTE PTR [rax],al
   140028d0f:	add    BYTE PTR [rax+rax*1],dl
   140028d12:	add    BYTE PTR [rax],al
   140028d14:	add    BYTE PTR [rax],al
   140028d16:	add    BYTE PTR [rax],al
   140028d18:	xchg   rsi,rax
   140028d1a:	add    al,BYTE PTR [rax+0x1]
   140028d1d:	add    BYTE PTR [rax],al
   140028d1f:	add    BYTE PTR [rax+0x0],al
   140028d25:	add    BYTE PTR [rax],al
   140028d27:	add    BYTE PTR [rax-0x6a],bl
   140028d2a:	add    al,BYTE PTR [rax+0x1]
   140028d2d:	add    BYTE PTR [rax],al
   140028d2f:	add    BYTE PTR [rbp+0x0],bh
   140028d32:	add    BYTE PTR [rax],al
   140028d34:	add    BYTE PTR [rax],al
   140028d36:	add    BYTE PTR [rax],al
   140028d38:	push   0x1400296
   140028d3d:	add    BYTE PTR [rax],al
   140028d3f:	add    BYTE PTR [rsi+0x0],bh
   140028d42:	add    BYTE PTR [rax],al
   140028d44:	add    BYTE PTR [rax],al
   140028d46:	add    BYTE PTR [rax],al
   140028d48:	js     0x140028ce0
   140028d4a:	add    al,BYTE PTR [rax+0x1]
   140028d4d:	add    BYTE PTR [rax],al
   140028d4f:	add    BYTE PTR [rax+rax*1],cl
   140028d52:	add    BYTE PTR [rax],al
   140028d54:	add    BYTE PTR [rax],al
   140028d56:	add    BYTE PTR [rax],al
   140028d58:	add    BYTE PTR [rax+0x14002],dl
   140028d5e:	add    BYTE PTR [rax],al
   140028d60:	add    DWORD PTR [rax],0x0
   140028d66:	add    BYTE PTR [rax],al
   140028d68:	mov    BYTE PTR [rsi+0x14002],dl
   140028d6e:	add    BYTE PTR [rax],al
   140028d70:	imul   eax,DWORD PTR [rax],0x0
   140028d76:	add    BYTE PTR [rax],al
   140028d78:	push   rax
   140028d79:	nop
   140028d7a:	add    al,BYTE PTR [rax+0x1]
   140028d7d:	add    BYTE PTR [rax],al
   140028d7f:	add    BYTE PTR [rax+0x0],dh
   140028d82:	add    BYTE PTR [rax],al
   140028d84:	add    BYTE PTR [rax],al
   140028d86:	add    BYTE PTR [rax],al
   140028d88:	cwde   
   140028d89:	xchg   esi,eax
   140028d8a:	add    al,BYTE PTR [rax+0x1]
   140028d8d:	add    BYTE PTR [rax],al
   140028d8f:	add    BYTE PTR [rcx],al
   140028d91:	add    BYTE PTR [rax],al
   140028d93:	add    BYTE PTR [rax],al
   140028d95:	add    BYTE PTR [rax],al
   140028d97:	add    BYTE PTR [rax+0x1400296],dh
   140028d9d:	add    BYTE PTR [rax],al
   140028d9f:	add    BYTE PTR [rdx+0x0],al
   140028da5:	add    BYTE PTR [rax],al
   140028da7:	add    al,cl
   140028da9:	xchg   esi,eax
   140028daa:	add    al,BYTE PTR [rax+0x1]
   140028dad:	add    BYTE PTR [rax],al
   140028daf:	add    BYTE PTR [rax+rax*1+0x0],cl
   140028db6:	add    BYTE PTR [rax],al
   140028db8:	loopne 0x140028d50
   140028dba:	add    al,BYTE PTR [rax+0x1]
   140028dbd:	add    BYTE PTR [rax],al
   140028dbf:	add    BYTE PTR [rbp+0x0],al
   140028dc5:	add    BYTE PTR [rax],al
   140028dc7:	add    al,bh
   140028dc9:	xchg   esi,eax
   140028dca:	add    al,BYTE PTR [rax+0x1]
   140028dcd:	add    BYTE PTR [rax],al
   140028dcf:	add    BYTE PTR [rip+0x0],cl        # 0x140028dd5
   140028dd5:	add    BYTE PTR [rax],al
   140028dd7:	add    al,dh
   140028dd9:	mov    es,WORD PTR [rdx]
   140028ddb:	rex add DWORD PTR [rax],eax
   140028dde:	add    BYTE PTR [rax],al
   140028de0:	xchg   BYTE PTR [rax],al
   140028de2:	add    BYTE PTR [rax],al
   140028de4:	add    BYTE PTR [rax],al
   140028de6:	add    BYTE PTR [rax],al
   140028de8:	or     BYTE PTR [rdi+0x14002],dl
   140028dee:	add    BYTE PTR [rax],al
   140028df0:	xchg   DWORD PTR [rax],eax
   140028df2:	add    BYTE PTR [rax],al
   140028df4:	add    BYTE PTR [rax],al
   140028df6:	add    BYTE PTR [rax],al
   140028df8:	sbb    BYTE PTR [rdi+0x14002],dl
   140028dfe:	add    BYTE PTR [rax],al
   140028e00:	(bad)  
   140028e01:	add    BYTE PTR [rax],al
   140028e03:	add    BYTE PTR [rax],al
   140028e05:	add    BYTE PTR [rax],al
   140028e07:	add    BYTE PTR [rax],dh
   140028e09:	xchg   edi,eax
   140028e0a:	add    al,BYTE PTR [rax+0x1]
   140028e0d:	add    BYTE PTR [rax],al
   140028e0f:	add    BYTE PTR [rax+rax*1],ah
   140028e12:	add    BYTE PTR [rax],al
   140028e14:	add    BYTE PTR [rax],al
   140028e16:	add    BYTE PTR [rax],al
   140028e18:	xchg   rdi,rax
   140028e1a:	add    al,BYTE PTR [rax+0x1]
   140028e1d:	add    BYTE PTR [rax],al
   140028e1f:	add    BYTE PTR [rbx],cl
   140028e21:	add    BYTE PTR [rax],al
   140028e23:	add    BYTE PTR [rax],al
   140028e25:	add    BYTE PTR [rax],al
   140028e27:	add    BYTE PTR [rax],bl
   140028e29:	nop
   140028e2a:	add    al,BYTE PTR [rax+0x1]
   140028e2d:	add    BYTE PTR [rax],al
   140028e2f:	add    BYTE PTR [rdx],ah
   140028e31:	add    BYTE PTR [rax],al
   140028e33:	add    BYTE PTR [rax],al
   140028e35:	add    BYTE PTR [rax],al
   140028e37:	add    BYTE PTR [rax-0x69],ch
   140028e3a:	add    al,BYTE PTR [rax+0x1]
   140028e3d:	add    BYTE PTR [rax],al
   140028e3f:	add    BYTE PTR [rdi+0x0],bh
   140028e42:	add    BYTE PTR [rax],al
   140028e44:	add    BYTE PTR [rax],al
   140028e46:	add    BYTE PTR [rax],al
   140028e48:	adc    BYTE PTR [rdi+0x14002],0x0
   140028e4f:	add    BYTE PTR [rcx+0x0],cl
   140028e55:	add    BYTE PTR [rax],al
   140028e57:	add    BYTE PTR [rax+0x1400297],bl
   140028e5d:	add    BYTE PTR [rax],al
   140028e5f:	add    BYTE PTR [rbx+0x0],cl
   140028e65:	add    BYTE PTR [rax],al
   140028e67:	add    BYTE PTR [rax+0x1400297],ch
   140028e6d:	add    BYTE PTR [rax],al
   140028e6f:	add    BYTE PTR [rdx+0x0],cl
   140028e75:	add    BYTE PTR [rax],al
   140028e77:	add    BYTE PTR [rax+0x1400297],bh
   140028e7d:	add    BYTE PTR [rax],al
   140028e7f:	add    BYTE PTR [rdi],dl
   140028e81:	add    BYTE PTR [rax],al
   140028e83:	add    BYTE PTR [rax],al
   140028e85:	add    BYTE PTR [rax],al
   140028e87:	add    al,cl
   140028e89:	xchg   edi,eax
   140028e8a:	add    al,BYTE PTR [rax+0x1]
   140028e8d:	add    BYTE PTR [rax],al
   140028e8f:	add    BYTE PTR [rax],bl
   140028e91:	add    BYTE PTR [rax],al
   140028e93:	add    BYTE PTR [rax],al
   140028e95:	add    BYTE PTR [rax],al
   140028e97:	add    BYTE PTR [rax-0x70],ch
   140028e9a:	add    al,BYTE PTR [rax+0x1]
   140028e9d:	add    BYTE PTR [rax],al
   140028e9f:	add    BYTE PTR [rdi],bl
   140028ea1:	add    BYTE PTR [rax],al
   140028ea3:	add    BYTE PTR [rax],al
   140028ea5:	add    BYTE PTR [rax],al
   140028ea7:	add    al,ch
   140028ea9:	xchg   edi,eax
   140028eaa:	add    al,BYTE PTR [rax+0x1]
   140028ead:	add    BYTE PTR [rax],al
   140028eaf:	add    BYTE PTR [rdx+0x0],dh
   140028eb2:	add    BYTE PTR [rax],al
   140028eb4:	add    BYTE PTR [rax],al
   140028eb6:	add    BYTE PTR [rax],al
   140028eb8:	clc    
   140028eb9:	xchg   edi,eax
   140028eba:	add    al,BYTE PTR [rax+0x1]
   140028ebd:	add    BYTE PTR [rax],al
   140028ebf:	add    BYTE PTR [rax+rax*1+0x0],al
   140028ec6:	add    BYTE PTR [rax],al
   140028ec8:	sbb    BYTE PTR [rax+0x14002],bl
   140028ece:	add    BYTE PTR [rax],al
   140028ed0:	mov    BYTE PTR [rax],al
   140028ed2:	add    BYTE PTR [rax],al
   140028ed4:	add    BYTE PTR [rax],al
   140028ed6:	add    BYTE PTR [rax],al
   140028ed8:	sub    BYTE PTR [rax+0x14002],bl
	...
   140028eee:	add    BYTE PTR [rax],al
   140028ef0:	jo     0x140028f57
   140028ef2:	jb     0x140028f61
   140028ef4:	imul   esi,DWORD PTR [rbx+0x73],0x206e6f69
   140028efb:	fs outs dx,BYTE PTR gs:[rsi]
   140028efe:	imul   esp,DWORD PTR [rbp+0x64],0x0
   140028f05:	add    BYTE PTR [rax],al
   140028f07:	add    BYTE PTR [rsi+0x69],ah
   140028f0a:	ins    BYTE PTR es:[rdi],dx
   140028f0b:	and    BYTE PTR gs:[rbp+0x78],ah
   140028f0f:	imul   esi,DWORD PTR [rbx+0x74],0x73
   140028f16:	add    BYTE PTR [rax],al
   140028f18:	outs   dx,BYTE PTR ds:[rsi]
   140028f19:	outs   dx,DWORD PTR ds:[rsi]
   140028f1a:	and    BYTE PTR [rbx+0x75],dh
   140028f1d:	movsxd ebp,DWORD PTR [rax+0x20]
   140028f20:	fs gs jbe 0x140028f8d
   140028f24:	movsxd esp,DWORD PTR [rbp+0x0]
   140028f27:	add    BYTE PTR [rsi+0x69],ah
   140028f2a:	ins    BYTE PTR es:[rdi],dx
   140028f2b:	outs   dx,BYTE PTR gs:[rsi]
   140028f2d:	(bad)  
   140028f2e:	ins    DWORD PTR es:[rdi],dx
   140028f2f:	and    BYTE PTR gs:[rdi+rbp*2+0x6f],dh
   140028f34:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
   140028f38:	add    BYTE PTR [eax],al
   140028f3b:	add    BYTE PTR [rax],al
   140028f3d:	add    BYTE PTR [rax],al
   140028f3f:	add    BYTE PTR [rbp+riz*2+0x76],ah
   140028f43:	imul   esp,DWORD PTR [rbx+0x65],0x20726f20
   140028f4a:	jb     0x140028fb1
   140028f4c:	jae    0x140028fbd
   140028f4e:	jne    0x140028fc2
   140028f50:	movsxd esp,DWORD PTR [rbp+0x20]
   140028f53:	(bad)  
   140028f54:	jne    0x140028fc9
   140028f56:	jns    0x140028f58
   140028f58:	imul   ebp,DWORD PTR [rdi+0x20],0x6f727265
   140028f5f:	jb     0x140028f61
   140028f61:	add    BYTE PTR [rax],al
   140028f63:	add    BYTE PTR [rax],al
   140028f65:	add    BYTE PTR [rax],al
   140028f67:	add    BYTE PTR [rcx+rbp*2+0x72],ah
   140028f6b:	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
   140028f70:	jns    0x140028f92
   140028f72:	outs   dx,BYTE PTR ds:[rsi]
   140028f73:	outs   dx,DWORD PTR ds:[rsi]
   140028f74:	je     0x140028f96
   140028f76:	gs ins DWORD PTR es:[rdi],dx
   140028f78:	jo     0x140028fee
   140028f7a:	jns    0x140028f7c
   140028f7c:	add    BYTE PTR [rax],al
   140028f7e:	add    BYTE PTR [rax],al
   140028f80:	imul   ebp,DWORD PTR [rsi+0x76],0x64696c61
   140028f87:	and    BYTE PTR [rcx+0x72],ah
   140028f8a:	addr32 jne 0x140028ffa
   140028f8d:	outs   dx,BYTE PTR gs:[rsi]
   140028f8f:	je     0x140028f91
   140028f91:	add    BYTE PTR [rax],al
   140028f93:	add    BYTE PTR [rax],al
   140028f95:	add    BYTE PTR [rax],al
   140028f97:	add    BYTE PTR [rsi+0x6f],ch
   140028f9a:	and    BYTE PTR [rbx+0x70],dh
   140028f9d:	(bad)  
   140028f9e:	movsxd esp,DWORD PTR [rbp+0x20]
   140028fa1:	outs   dx,DWORD PTR ds:[rsi]
   140028fa2:	outs   dx,BYTE PTR ds:[rsi]
   140028fa3:	and    BYTE PTR [rbp+riz*2+0x76],ah
   140028fa7:	imul   esp,DWORD PTR [rbx+0x65],0x0
   140028fae:	add    BYTE PTR [rax],al
   140028fb0:	outs   dx,BYTE PTR ds:[rsi]
   140028fb1:	outs   dx,DWORD PTR ds:[rsi]
   140028fb2:	and    BYTE PTR [rbx+0x75],dh
   140028fb5:	movsxd ebp,DWORD PTR [rax+0x20]
   140028fb8:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x726f
   140028fbf:	and    BYTE PTR [rcx+rbp*2+0x72],ah
   140028fc3:	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
   140028fc8:	jns    0x140028fca
   140028fca:	add    BYTE PTR [rax],al
   140028fcc:	add    BYTE PTR [rax],al
   140028fce:	add    BYTE PTR [rax],al
   140028fd0:	data16 jne 0x140029041
   140028fd3:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   140028fd7:	outs   dx,BYTE PTR ds:[rsi]
   140028fd8:	and    BYTE PTR [rsi+0x6f],ch
   140028fdb:	je     0x140028ffd
   140028fdd:	jae    0x140029054
   140028fdf:	jo     0x140029051
   140028fe1:	outs   dx,DWORD PTR ds:[rsi]
   140028fe2:	jb     0x140029058
   140028fe4:	gs add BYTE PTR fs:[rax],al
   140028fe8:	outs   dx,BYTE PTR ds:[rsi]
   140028fe9:	outs   dx,DWORD PTR ds:[rsi]
   140028fea:	and    BYTE PTR [rdi+rbp*2+0x63],ch
   140028fee:	imul   esp,DWORD PTR [rax],0x61
   140028ff1:	jbe    0x140029054
   140028ff3:	imul   ebp,DWORD PTR [rcx+riz*2+0x62],0x656c
   140028ffb:	add    BYTE PTR [rax],al
   140028ffd:	add    BYTE PTR [rax],al
   140028fff:	add    BYTE PTR [rsi+0x6f],ch
   140029002:	je     0x140029024
   140029004:	outs   dx,BYTE PTR gs:[rsi]
   140029006:	outs   dx,DWORD PTR ds:[rsi]
   140029007:	jne    0x140029070
   140029009:	push   0x6d656d20
   14002900e:	outs   dx,DWORD PTR ds:[rsi]
   14002900f:	jb     0x14002908a
   140029011:	add    BYTE PTR [rax],al
   140029013:	add    BYTE PTR [rax],al
   140029015:	add    BYTE PTR [rax],al
   140029017:	add    BYTE PTR [rdx+0x65],dh
   14002901a:	jae    0x14002908b
   14002901c:	jne    0x140029090
   14002901e:	movsxd esp,DWORD PTR [rbp+0x20]
   140029021:	jne    0x140029091
   140029023:	(bad)  
   140029024:	jbe    0x140029087
   140029026:	imul   ebp,DWORD PTR [rcx+riz*2+0x62],0x7420656c
   14002902e:	jb     0x1400290a9
   140029030:	and    BYTE PTR [rcx+0x67],ah
   140029033:	(bad)  
   140029034:	imul   ebp,DWORD PTR [rsi+0x0],0x6f726300
   14002903b:	jae    0x1400290b0
   14002903d:	and    BYTE PTR [rbp+riz*2+0x76],ah
   140029041:	imul   esp,DWORD PTR [rbx+0x65],0x6e696c20
   140029048:	imul   eax,DWORD PTR [rax],0x0
   14002904b:	add    BYTE PTR [rax],al
   14002904d:	add    BYTE PTR [rax],al
   14002904f:	add    BYTE PTR [rdi+0x70],ch
   140029052:	gs jb  0x1400290b6
   140029055:	je     0x1400290c0
   140029057:	outs   dx,DWORD PTR ds:[rsi]
   140029058:	outs   dx,BYTE PTR ds:[rsi]
   140029059:	and    BYTE PTR [rbx+0x61],ah
   14002905c:	outs   dx,BYTE PTR ds:[rsi]
   14002905d:	movsxd esp,DWORD PTR [rbp+0x6c]
   140029060:	gs add BYTE PTR fs:[rax],al
   140029064:	add    BYTE PTR [rax],al
   140029066:	add    BYTE PTR [rax],al
   140029068:	je     0x1400290d9
   14002906a:	outs   dx,DWORD PTR ds:[rsi]
   14002906b:	and    BYTE PTR [rbp+0x61],ch
   14002906e:	outs   dx,BYTE PTR ds:[rsi]
   14002906f:	jns    0x140029091
   140029071:	imul   bp,WORD PTR [rbp+riz*2+0x73],0x6f20
   140029078:	jo     0x1400290df
   14002907a:	outs   dx,BYTE PTR ds:[rsi]
   14002907b:	add    BYTE PTR [rax],al
   14002907d:	add    BYTE PTR [rax],al
   14002907f:	add    BYTE PTR [rax+0x65],dh
   140029082:	jb     0x1400290f1
   140029084:	imul   esi,DWORD PTR [rbx+0x73],0x5f6e6f69
   14002908b:	fs outs dx,BYTE PTR gs:[rsi]
   14002908e:	imul   esp,DWORD PTR [rbp+0x64],0x0
   140029095:	add    BYTE PTR [rax],al
   140029097:	add    BYTE PTR [rcx+0x64],ah
   14002909a:	fs jb  0x140029102
   14002909d:	jae    0x140029112
   14002909f:	pop    rdi
   1400290a0:	imul   ebp,DWORD PTR [rsi+0x5f],0x657375
   1400290a7:	add    BYTE PTR [rcx+0x64],ah
   1400290aa:	fs jb  0x140029112
   1400290ad:	jae    0x140029122
   1400290af:	pop    rdi
   1400290b0:	outs   dx,BYTE PTR ds:[rsi]
   1400290b1:	outs   dx,DWORD PTR ds:[rsi]
   1400290b2:	je     0x140029113
   1400290b4:	(bad)  
   1400290b5:	jbe    0x140029118
   1400290b7:	imul   ebp,DWORD PTR [rcx+riz*2+0x62],0x656c
   1400290bf:	add    BYTE PTR [rcx+0x64],ah
   1400290c2:	fs jb  0x14002912a
   1400290c5:	jae    0x14002913a
   1400290c7:	pop    rdi
   1400290c8:	data16 (bad) 
   1400290ca:	ins    DWORD PTR es:[rdi],dx
   1400290cb:	imul   ebp,DWORD PTR [rcx+rdi*2+0x5f],0x5f746f6e
   1400290d3:	jae    0x14002914a
   1400290d5:	jo     0x140029147
   1400290d7:	outs   dx,DWORD PTR ds:[rsi]
   1400290d8:	jb     0x14002914e
   1400290da:	gs add BYTE PTR fs:[rax],al
   1400290de:	add    BYTE PTR [rax],al
   1400290e0:	movsxd ebp,DWORD PTR [rdi+0x6e]
   1400290e3:	outs   dx,BYTE PTR ds:[rsi]
   1400290e4:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   1400290e9:	outs   dx,BYTE PTR ds:[rsi]
   1400290ea:	pop    rdi
   1400290eb:	(bad)  
   1400290ec:	ins    BYTE PTR es:[rdi],dx
   1400290ed:	jb     0x140029154
   1400290ef:	(bad)  
   1400290f0:	fs jns 0x140029152
   1400290f3:	imul   ebp,DWORD PTR [rsi+0x5f],0x676f7270
   1400290fa:	jb     0x140029161
   1400290fc:	jae    0x140029171
   1400290fe:	add    BYTE PTR [rax],al
   140029100:	(bad)
   140029105:	imul   ebp,DWORD PTR [rbp+riz*2+0x5f],0x63736564
   14002910d:	jb     0x140029178
   14002910f:	jo     0x140029185
   140029111:	outs   dx,DWORD PTR ds:[rsi]
   140029112:	jb     0x140029114
   140029114:	add    BYTE PTR [rax],al
   140029116:	add    BYTE PTR [rax],al
   140029118:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14002911b:	outs   dx,BYTE PTR ds:[rsi]
   14002911c:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140029121:	outs   dx,BYTE PTR ds:[rsi]
   140029122:	pop    rdi
   140029123:	(bad)  
   140029124:	(bad)  
   140029125:	outs   dx,DWORD PTR ds:[rsi]
   140029126:	jb     0x14002919c
   140029128:	gs add BYTE PTR fs:[rax],al
   14002912c:	add    BYTE PTR [rax],al
   14002912e:	add    BYTE PTR [rax],al
   140029130:	movsxd ebp,DWORD PTR [rdi+0x6e]
   140029133:	outs   dx,BYTE PTR ds:[rsi]
   140029134:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140029139:	outs   dx,BYTE PTR ds:[rsi]
   14002913a:	pop    rdi
   14002913b:	jb     0x1400291a2
   14002913d:	data16 jne 0x1400291b3
   140029140:	gs add BYTE PTR fs:[rax],al
   140029144:	add    BYTE PTR [rax],al
   140029146:	add    BYTE PTR [rax],al
   140029148:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14002914b:	outs   dx,BYTE PTR ds:[rsi]
   14002914c:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140029151:	outs   dx,BYTE PTR ds:[rsi]
   140029152:	pop    rdi
   140029153:	jb     0x1400291ba
   140029155:	jae    0x1400291bc
   140029157:	je     0x140029159
   140029159:	add    BYTE PTR [rax],al
   14002915b:	add    BYTE PTR [rax],al
   14002915d:	add    BYTE PTR [rax],al
   14002915f:	add    BYTE PTR [rbp+riz*2+0x73],ah
   140029163:	je     0x1400291ce
   140029165:	outs   dx,BYTE PTR ds:[rsi]
   140029166:	(bad)  
   140029167:	je     0x1400291d2
   140029169:	outs   dx,DWORD PTR ds:[rsi]
   14002916a:	outs   dx,BYTE PTR ds:[rsi]
   14002916b:	pop    rdi
   14002916c:	(bad)  
   14002916d:	fs fs jb 0x1400291d6
   140029171:	jae    0x1400291e6
   140029173:	pop    rdi
   140029174:	jb     0x1400291db
   140029176:	jno    0x1400291ed
   140029178:	imul   esi,DWORD PTR [rdx+0x65],0x64
   14002917f:	add    BYTE PTR [rdx+0x61],ah
   140029182:	fs pop rdi
   140029184:	(bad)  
   140029185:	fs fs jb 0x1400291ee
   140029189:	jae    0x1400291fe
   14002918b:	add    BYTE PTR [rax],al
   14002918d:	add    BYTE PTR [rax],al
   14002918f:	add    BYTE PTR [rax+0x6f],ch
   140029192:	jae    0x140029208
   140029194:	pop    rdi
   140029195:	jne    0x140029205
   140029197:	jb     0x1400291fe
   140029199:	(bad)  
   14002919a:	movsxd ebp,DWORD PTR [rax+0x61]
   14002919d:	(bad)  
   14002919e:	ins    BYTE PTR es:[rdi],dx
   14002919f:	add    BYTE PTR gs:[rax],al
   1400291a2:	add    BYTE PTR [rax],al
   1400291a4:	add    BYTE PTR [rax],al
   1400291a6:	add    BYTE PTR [rax],al
   1400291a8:	outs   dx,DWORD PTR ds:[rsi]
   1400291a9:	jo     0x140029210
   1400291ab:	jb     0x14002920e
   1400291ad:	je     0x140029218
   1400291af:	outs   dx,DWORD PTR ds:[rsi]
   1400291b0:	outs   dx,BYTE PTR ds:[rsi]
   1400291b1:	pop    rdi
   1400291b2:	imul   ebp,DWORD PTR [rsi+0x5f],0x676f7270
   1400291b9:	jb     0x140029220
   1400291bb:	jae    0x140029230
   1400291bd:	add    BYTE PTR [rax],al
   1400291bf:	add    BYTE PTR [rcx+0x6e],ch
   1400291c2:	je     0x140029229
   1400291c4:	jb     0x140029238
   1400291c6:	jne    0x140029238
   1400291c8:	je     0x14002922f
   1400291ca:	add    BYTE PTR fs:[rax],al
   1400291cd:	add    BYTE PTR [rax],al
   1400291cf:	add    BYTE PTR [rcx+0x6e],ch
   1400291d2:	jbe    0x140029235
   1400291d4:	ins    BYTE PTR es:[rdi],dx
   1400291d5:	imul   esp,DWORD PTR [rdi+rbx*2+0x61],0x6d756772
   1400291dd:	outs   dx,BYTE PTR gs:[rsi]
   1400291df:	je     0x1400291e1
   1400291e1:	add    BYTE PTR [rax],al
   1400291e3:	add    BYTE PTR [rax],al
   1400291e5:	add    BYTE PTR [rax],al
   1400291e7:	add    BYTE PTR [rcx+0x6c],ah
   1400291ea:	jb     0x140029251
   1400291ec:	(bad)  
   1400291ed:	fs jns 0x14002924f
   1400291f0:	movsxd ebp,DWORD PTR [rdi+0x6e]
   1400291f3:	outs   dx,BYTE PTR ds:[rsi]
   1400291f4:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
   1400291f9:	add    BYTE PTR [rax],al
   1400291fb:	add    BYTE PTR [rax],al
   1400291fd:	add    BYTE PTR [rax],al
   1400291ff:	add    BYTE PTR [rdi+rbp*2+0x6f],dh
   140029203:	pop    rdi
   140029204:	ins    DWORD PTR es:[rdi],dx
   140029205:	(bad)  
   140029206:	outs   dx,BYTE PTR ds:[rsi]
   140029207:	jns    0x140029268
   140029209:	imul   bp,WORD PTR [rbp+riz*2+0x73],0x6f5f
   140029210:	jo     0x140029277
   140029212:	outs   dx,BYTE PTR ds:[rsi]
   140029213:	add    BYTE PTR [rax],al
   140029215:	add    BYTE PTR [rax],al
   140029217:	add    BYTE PTR [rbp+0x65],ch
   14002921a:	jae    0x14002928f
   14002921c:	(bad)  
   14002921d:	addr32 gs pop rdi
   140029220:	jae    0x14002928b
   140029222:	jp     0x140029289
   140029224:	add    BYTE PTR [rax],al
   140029226:	add    BYTE PTR [rax],al
   140029228:	imul   bp,WORD PTR [rbp+riz*2+0x6e],0x6d61
   14002922f:	gs pop rdi
   140029231:	je     0x1400292a2
   140029233:	outs   dx,DWORD PTR ds:[rsi]
   140029234:	pop    rdi
   140029235:	ins    BYTE PTR es:[rdi],dx
   140029236:	outs   dx,DWORD PTR ds:[rsi]
   140029237:	outs   dx,BYTE PTR ds:[rsi]
   140029238:	add    BYTE PTR [eax],al
   14002923b:	add    BYTE PTR [rax],al
   14002923d:	add    BYTE PTR [rax],al
   14002923f:	add    BYTE PTR [rsi+0x65],ch
   140029242:	je     0x1400292bb
   140029244:	outs   dx,DWORD PTR ds:[rsi]
   140029245:	jb     0x1400292b2
   140029247:	pop    rdi
   140029248:	outs   dx,DWORD PTR fs:[rsi]
   14002924a:	ja     0x1400292ba
   14002924c:	add    BYTE PTR [rax],al
   14002924e:	add    BYTE PTR [rax],al
   140029250:	outs   dx,BYTE PTR ds:[rsi]
   140029251:	gs je  0x1400292cb
   140029254:	outs   dx,DWORD PTR ds:[rsi]
   140029255:	jb     0x1400292c2
   140029257:	pop    rdi
   140029258:	jb     0x1400292bf
   14002925a:	jae    0x1400292c1
   14002925c:	je     0x14002925e
   14002925e:	add    BYTE PTR [rax],al
   140029260:	outs   dx,BYTE PTR ds:[rsi]
   140029261:	gs je  0x1400292db
   140029264:	outs   dx,DWORD PTR ds:[rsi]
   140029265:	jb     0x1400292d2
   140029267:	pop    rdi
   140029268:	jne    0x1400292d8
   14002926a:	jb     0x1400292d1
   14002926c:	(bad)  
   14002926d:	movsxd ebp,DWORD PTR [rax+0x61]
   140029270:	(bad)  
   140029271:	ins    BYTE PTR es:[rdi],dx
   140029272:	add    BYTE PTR gs:[rax],al
   140029275:	add    BYTE PTR [rax],al
   140029277:	add    BYTE PTR [rsi+0x6f],ch
   14002927a:	pop    rdi
   14002927b:	(bad)  
   14002927c:	jne    0x1400292e4
   14002927e:	data16 gs jb 0x1400292e1
   140029282:	jae    0x1400292f4
   140029284:	(bad)  
   140029285:	movsxd esp,DWORD PTR [rbp+0x0]
   140029288:	outs   dx,BYTE PTR ds:[rsi]
   140029289:	outs   dx,DWORD PTR ds:[rsi]
   14002928a:	pop    rdi
   14002928b:	jo     0x1400292ff
   14002928d:	outs   dx,DWORD PTR ds:[rsi]
   14002928e:	je     0x1400292ff
   140029290:	movsxd ebp,DWORD PTR [rdi+0x6c]
   140029293:	pop    rdi
   140029294:	outs   dx,DWORD PTR ds:[rsi]
   140029295:	jo     0x14002930b
   140029297:	imul   ebp,DWORD PTR [rdi+0x6e],0x0
   14002929e:	add    BYTE PTR [rax],al
   1400292a0:	outs   dx,BYTE PTR ds:[rsi]
   1400292a1:	outs   dx,DWORD PTR ds:[rsi]
   1400292a2:	je     0x140029303
   1400292a4:	movsxd ebp,DWORD PTR [rdi+0x6e]
   1400292a7:	outs   dx,BYTE PTR ds:[rsi]
   1400292a8:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
   1400292ad:	add    BYTE PTR [rax],al
   1400292af:	add    BYTE PTR [rsi+0x6f],ch
   1400292b2:	je     0x140029313
   1400292b4:	(bad)  
   1400292b5:	pop    rdi
   1400292b6:	jae    0x140029327
   1400292b8:	movsxd ebp,DWORD PTR [rbx+0x65]
   1400292bb:	je     0x1400292bd
   1400292bd:	add    BYTE PTR [rax],al
   1400292bf:	add    BYTE PTR [rdi+0x70],ch
   1400292c2:	gs jb  0x140029326
   1400292c5:	je     0x140029330
   1400292c7:	outs   dx,DWORD PTR ds:[rsi]
   1400292c8:	outs   dx,BYTE PTR ds:[rsi]
   1400292c9:	pop    rdi
   1400292ca:	outs   dx,BYTE PTR ds:[rsi]
   1400292cb:	outs   dx,DWORD PTR ds:[rsi]
   1400292cc:	je     0x14002932d
   1400292ce:	jae    0x140029345
   1400292d0:	jo     0x140029342
   1400292d2:	outs   dx,DWORD PTR ds:[rsi]
   1400292d3:	jb     0x140029349
   1400292d5:	gs add BYTE PTR fs:[rax+0x72],dh
   1400292da:	outs   dx,DWORD PTR ds:[rsi]
   1400292db:	je     0x14002934c
   1400292dd:	movsxd ebp,DWORD PTR [rdi+0x6c]
   1400292e0:	pop    rdi
   1400292e1:	outs   dx,BYTE PTR ds:[rsi]
   1400292e2:	outs   dx,DWORD PTR ds:[rsi]
   1400292e3:	je     0x140029344
   1400292e5:	jae    0x14002935c
   1400292e7:	jo     0x140029359
   1400292e9:	outs   dx,DWORD PTR ds:[rsi]
   1400292ea:	jb     0x140029360
   1400292ec:	gs add BYTE PTR fs:[rax],al
   1400292f0:	ja     0x140029364
   1400292f2:	outs   dx,DWORD PTR ds:[rsi]
   1400292f3:	outs   dx,BYTE PTR ds:[rsi]
   1400292f4:	addr32 pop rdi
   1400292f6:	jo     0x14002936a
   1400292f8:	outs   dx,DWORD PTR ds:[rsi]
   1400292f9:	je     0x14002936a
   1400292fb:	movsxd ebp,DWORD PTR [rdi+0x6c]
   1400292fe:	pop    rdi
   1400292ff:	je     0x14002937a
   140029301:	jo     0x140029368
   140029303:	add    BYTE PTR [rax],al
   140029305:	add    BYTE PTR [rax],al
   140029307:	add    BYTE PTR [rcx+rbp*2+0x6d],dh
   14002930b:	gs fs pop rdi
   14002930e:	outs   dx,DWORD PTR ds:[rsi]
   14002930f:	jne    0x140029385
   140029311:	add    BYTE PTR [rax],al
   140029313:	add    BYTE PTR [rax],al
   140029315:	add    BYTE PTR [rax],al
   140029317:	add    BYTE PTR [rdi+0x70],ch
   14002931a:	gs jb  0x14002937e
   14002931d:	je     0x140029388
   14002931f:	outs   dx,DWORD PTR ds:[rsi]
   140029320:	outs   dx,BYTE PTR ds:[rsi]
   140029321:	pop    rdi
   140029322:	ja     0x140029393
   140029324:	jne    0x140029392
   140029326:	fs pop rdi
   140029328:	(bad)  
   140029329:	ins    BYTE PTR es:[rdi],dx
   14002932a:	outs   dx,DWORD PTR ds:[rsi]
   14002932b:	movsxd ebp,DWORD PTR [rbx+0x0]
   14002932e:	add    BYTE PTR [rax],al
   140029330:	(bad)  
   140029331:	fs fs jb 0x14002939a
   140029335:	jae    0x1400293aa
   140029337:	and    BYTE PTR [rsi+0x61],ah
   14002933a:	ins    DWORD PTR es:[rdi],dx
   14002933b:	imul   ebp,DWORD PTR [rcx+rdi*2+0x20],0x20746f6e
   140029343:	jae    0x1400293ba
   140029345:	jo     0x1400293b7
   140029347:	outs   dx,DWORD PTR ds:[rsi]
   140029348:	jb     0x1400293be
   14002934a:	gs add BYTE PTR fs:[rax],al
   14002934e:	add    BYTE PTR [rax],al
   140029350:	(bad)  
   140029351:	fs fs jb 0x1400293ba
   140029355:	jae    0x1400293ca
   140029357:	and    BYTE PTR [rcx+0x6e],ch
   14002935a:	and    BYTE PTR [rbp+0x73],dh
   14002935d:	add    BYTE PTR gs:[rax],al
   140029360:	(bad)  
   140029361:	fs fs jb 0x1400293ca
   140029365:	jae    0x1400293da
   140029367:	and    BYTE PTR [rsi+0x6f],ch
   14002936a:	je     0x14002938c
   14002936c:	(bad)  
   14002936d:	jbe    0x1400293d0
   14002936f:	imul   ebp,DWORD PTR [rcx+riz*2+0x62],0x656c
   140029377:	add    BYTE PTR [rcx+0x6c],ah
   14002937a:	jb     0x1400293e1
   14002937c:	(bad)  
   14002937d:	fs jns 0x1400293a0
   140029380:	movsxd ebp,DWORD PTR [rdi+0x6e]
   140029383:	outs   dx,BYTE PTR ds:[rsi]
   140029384:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
   140029389:	add    BYTE PTR [rax],al
   14002938b:	add    BYTE PTR [rax],al
   14002938d:	add    BYTE PTR [rax],al
   14002938f:	add    BYTE PTR [rcx+0x72],ah
   140029392:	addr32 jne 0x140029402
   140029395:	outs   dx,BYTE PTR gs:[rsi]
   140029397:	je     0x1400293b9
   140029399:	ins    BYTE PTR es:[rdi],dx
   14002939a:	imul   esi,DWORD PTR [rbx+0x74],0x6f6f7420
   1400293a1:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
   1400293a5:	add    BYTE PTR [eax],al
   1400293a8:	(bad)  
   1400293a9:	jb     0x140029412
   1400293ab:	jne    0x14002941a
   1400293ad:	outs   dx,BYTE PTR gs:[rsi]
   1400293af:	je     0x1400293d1
   1400293b1:	outs   dx,DWORD PTR ds:[rsi]
   1400293b2:	jne    0x140029428
   1400293b4:	and    BYTE PTR [rdi+0x66],ch
   1400293b7:	and    BYTE PTR [rdi+rbp*2+0x6d],ah
   1400293bb:	(bad)  
   1400293bc:	imul   ebp,DWORD PTR [rsi+0x0],0x64616200
   1400293c3:	and    BYTE PTR [rcx+0x64],ah
   1400293c6:	fs jb  0x14002942e
   1400293c9:	jae    0x14002943e
   1400293cb:	add    BYTE PTR [rax],al
   1400293cd:	add    BYTE PTR [rax],al
   1400293cf:	add    BYTE PTR [rdx+0x61],ah
   1400293d2:	and    BYTE PTR fs:[rsi+0x69],ah
   1400293d6:	ins    BYTE PTR es:[rdi],dx
   1400293d7:	and    BYTE PTR gs:[rbp+riz*2+0x73],ah
   1400293dc:	movsxd esi,DWORD PTR [rdx+0x69]
   1400293df:	jo     0x140029455
   1400293e1:	outs   dx,DWORD PTR ds:[rsi]
   1400293e2:	jb     0x1400293e4
   1400293e4:	add    BYTE PTR [rax],al
   1400293e6:	add    BYTE PTR [rax],al
   1400293e8:	(bad)
   1400293ed:	gs jae 0x140029463
   1400293f0:	(bad)  
   1400293f1:	add    BYTE PTR gs:[eax],al
   1400293f5:	add    BYTE PTR [rax],al
   1400293f7:	add    BYTE PTR [rdx+0x72],ah
   1400293fa:	outs   dx,DWORD PTR ds:[rsi]
   1400293fb:	imul   esp,DWORD PTR [rbp+0x6e],0x20
   1400293ff:	jo     0x14002946a
   140029401:	jo     0x140029468
   140029403:	add    BYTE PTR [rax],al
   140029405:	add    BYTE PTR [rax],al
   140029407:	add    BYTE PTR [rbx+0x6f],ah
   14002940a:	outs   dx,BYTE PTR ds:[rsi]
   14002940b:	outs   dx,BYTE PTR ds:[rsi]
   14002940c:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140029411:	outs   dx,BYTE PTR ds:[rsi]
   140029412:	and    BYTE PTR [rcx+0x62],ah
   140029415:	outs   dx,DWORD PTR ds:[rsi]
   140029416:	jb     0x14002948c
   140029418:	gs add BYTE PTR fs:[rax],al
   14002941c:	add    BYTE PTR [rax],al
   14002941e:	add    BYTE PTR [rax],al
   140029420:	movsxd ebp,DWORD PTR [rdi+0x6e]
   140029423:	outs   dx,BYTE PTR ds:[rsi]
   140029424:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140029429:	outs   dx,BYTE PTR ds:[rsi]
   14002942a:	and    BYTE PTR [rcx+0x6c],ah
   14002942d:	jb     0x140029494
   14002942f:	(bad)  
   140029430:	fs jns 0x140029453
   140029433:	imul   ebp,DWORD PTR [rsi+0x20],0x676f7270
   14002943a:	jb     0x1400294a1
   14002943c:	jae    0x1400294b1
   14002943e:	add    BYTE PTR [rax],al
   140029440:	movsxd ebp,DWORD PTR [rdi+0x6e]
   140029443:	outs   dx,BYTE PTR ds:[rsi]
   140029444:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140029449:	outs   dx,BYTE PTR ds:[rsi]
   14002944a:	and    BYTE PTR [rdx+0x65],dh
   14002944d:	data16 jne 0x1400294c3
   140029450:	gs add BYTE PTR fs:[rax],al
   140029454:	add    BYTE PTR [rax],al
   140029456:	add    BYTE PTR [rax],al
   140029458:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14002945b:	outs   dx,BYTE PTR ds:[rsi]
   14002945c:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140029461:	outs   dx,BYTE PTR ds:[rsi]
   140029462:	and    BYTE PTR [rdx+0x65],dh
   140029465:	jae    0x1400294cc
   140029467:	je     0x140029469
   140029469:	add    BYTE PTR [rax],al
   14002946b:	add    BYTE PTR [rax],al
   14002946d:	add    BYTE PTR [rax],al
   14002946f:	add    BYTE PTR [rbp+riz*2+0x73],ah
   140029473:	je     0x1400294de
   140029475:	outs   dx,BYTE PTR ds:[rsi]
   140029476:	(bad)  
   140029477:	je     0x1400294e2
   140029479:	outs   dx,DWORD PTR ds:[rsi]
   14002947a:	outs   dx,BYTE PTR ds:[rsi]
   14002947b:	and    BYTE PTR [rcx+0x64],ah
   14002947e:	fs jb  0x1400294e6
   140029481:	jae    0x1400294f6
   140029483:	and    BYTE PTR [rdx+0x65],dh
   140029486:	jno    0x1400294fd
   140029488:	imul   esi,DWORD PTR [rdx+0x65],0x64
   14002948f:	add    BYTE PTR [rbp+0x78],ah
   140029492:	movsxd esi,DWORD PTR gs:[rbp+0x74]
   140029496:	(bad)  
   140029497:	(bad)  
   140029498:	ins    BYTE PTR es:[rdi],dx
   140029499:	and    BYTE PTR gs:[rsi+0x6f],ah
   14002949d:	jb     0x14002950c
   14002949f:	(bad)  
   1400294a0:	je     0x1400294c2
   1400294a2:	gs jb  0x140029517
   1400294a5:	outs   dx,DWORD PTR ds:[rsi]
   1400294a6:	jb     0x1400294a8
   1400294a8:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x6f74
   1400294af:	outs   dx,DWORD PTR ds:[rsi]
   1400294b0:	and    BYTE PTR [rcx+riz*2+0x72],ch
   1400294b4:	add    BYTE PTR gs:[eax],al
   1400294b8:	push   0x2074736f
   1400294bd:	jne    0x14002952d
   1400294bf:	jb     0x140029526
   1400294c1:	(bad)  
   1400294c2:	movsxd ebp,DWORD PTR [rax+0x61]
   1400294c5:	(bad)  
   1400294c6:	ins    BYTE PTR es:[rdi],dx
   1400294c7:	add    BYTE PTR gs:[rax],al
   1400294ca:	add    BYTE PTR [rax],al
   1400294cc:	add    BYTE PTR [rax],al
   1400294ce:	add    BYTE PTR [rax],al
   1400294d0:	imul   esp,DWORD PTR [rbp+riz*2+0x6e],0x69666974
   1400294d8:	gs jb  0x1400294fb
   1400294db:	jb     0x140029542
   1400294dd:	ins    DWORD PTR es:[rdi],dx
   1400294de:	outs   dx,DWORD PTR ds:[rsi]
   1400294df:	jbe    0x140029546
   1400294e1:	add    BYTE PTR fs:[rax],al
   1400294e4:	add    BYTE PTR [rax],al
   1400294e6:	add    BYTE PTR [rax],al
   1400294e8:	imul   ebp,DWORD PTR [rsp+rbp*2+0x65],0x206c6167
   1400294f0:	(bad)  
   1400294f1:	jns    0x140029567
   1400294f3:	and    BYTE PTR gs:[rbx+0x65],dh
   1400294f7:	jno    0x14002956e
   1400294f9:	outs   dx,BYTE PTR gs:[rsi]
   1400294fb:	movsxd esp,DWORD PTR [rbp+0x0]
   1400294fe:	add    BYTE PTR [rax],al
   140029500:	imul   ebp,DWORD PTR [rsi+0x61],0x6f727070
   140029507:	jo     0x14002957b
   140029509:	imul   esp,DWORD PTR [rcx+0x74],0x6f692065
   140029510:	and    BYTE PTR [rbx+0x6f],ah
   140029513:	outs   dx,BYTE PTR ds:[rsi]
   140029514:	je     0x140029588
   140029516:	outs   dx,DWORD PTR ds:[rsi]
   140029517:	ins    BYTE PTR es:[rdi],dx
   140029518:	and    BYTE PTR [rdi+0x70],ch
   14002951b:	gs jb  0x14002957f
   14002951e:	je     0x140029589
   140029520:	outs   dx,DWORD PTR ds:[rsi]
   140029521:	outs   dx,BYTE PTR ds:[rsi]
   140029522:	add    BYTE PTR [rax],al
   140029524:	add    BYTE PTR [rax],al
   140029526:	add    BYTE PTR [rax],al
   140029528:	imul   ebp,DWORD PTR [rsi+0x76],0x64696c61
   14002952f:	and    BYTE PTR [rbx+0x65],dh
   140029532:	imul   eax,DWORD PTR gs:[rax],0x0
   140029536:	add    BYTE PTR [rax],al
   140029538:	imul   esi,DWORD PTR [rbx+0x20],0x69642061
   14002953f:	jb     0x1400295a6
   140029541:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   140029545:	jns    0x140029547
   140029547:	add    BYTE PTR [rbp+0x65],ch
   14002954a:	jae    0x1400295bf
   14002954c:	(bad)  
   14002954d:	and    BYTE PTR gs:[ebx+0x69],dh
   140029552:	jp     0x1400295b9
   140029554:	add    BYTE PTR [rax],al
   140029556:	add    BYTE PTR [rax],al
   140029558:	outs   dx,BYTE PTR ds:[rsi]
   140029559:	gs je  0x1400295d3
   14002955c:	outs   dx,DWORD PTR ds:[rsi]
   14002955d:	jb     0x1400295ca
   14002955f:	and    BYTE PTR [rdi+rbp*2+0x77],ah
   140029563:	outs   dx,BYTE PTR ds:[rsi]
   140029564:	add    BYTE PTR [rax],al
   140029566:	add    BYTE PTR [rax],al
   140029568:	outs   dx,BYTE PTR ds:[rsi]
   140029569:	gs je  0x1400295e3
   14002956c:	outs   dx,DWORD PTR ds:[rsi]
   14002956d:	jb     0x1400295da
   14002956f:	and    BYTE PTR [rdx+0x65],dh
   140029572:	jae    0x1400295d9
   140029574:	je     0x140029576
   140029576:	add    BYTE PTR [rax],al
   140029578:	outs   dx,BYTE PTR ds:[rsi]
   140029579:	gs je  0x1400295f3
   14002957c:	outs   dx,DWORD PTR ds:[rsi]
   14002957d:	jb     0x1400295ea
   14002957f:	and    BYTE PTR [rbp+0x6e],dh
   140029582:	jb     0x1400295e9
   140029584:	(bad)  
   140029585:	movsxd ebp,DWORD PTR [rax+0x61]
   140029588:	(bad)  
   140029589:	ins    BYTE PTR es:[rdi],dx
   14002958a:	add    BYTE PTR gs:[rax],al
   14002958d:	add    BYTE PTR [rax],al
   14002958f:	add    BYTE PTR [rsi+0x6f],ch
   140029592:	and    BYTE PTR [rdx+0x75],ah
   140029595:	data16 data16 gs jb 0x1400295ba
   14002959a:	jae    0x14002960c
   14002959c:	(bad)  
   14002959d:	movsxd esp,DWORD PTR [rbp+0x0]
   1400295a0:	outs   dx,BYTE PTR ds:[rsi]
   1400295a1:	outs   dx,DWORD PTR ds:[rsi]
   1400295a2:	and    BYTE PTR [rbx+0x68],ah
   1400295a5:	imul   ebp,DWORD PTR [rsp+riz*2+0x20],0x636f7270
   1400295ad:	gs jae 0x140029623
	...
   1400295b8:	outs   dx,BYTE PTR ds:[rsi]
   1400295b9:	outs   dx,DWORD PTR ds:[rsi]
   1400295ba:	and    BYTE PTR [rcx+rbp*2+0x6e],ch
   1400295be:	imul   eax,DWORD PTR [rax],0x6e
   1400295c1:	outs   dx,DWORD PTR ds:[rsi]
   1400295c2:	and    BYTE PTR [rbp+0x65],ch
   1400295c5:	jae    0x14002963a
   1400295c7:	(bad)  
   1400295c8:	and    BYTE PTR gs:[ecx+0x76],ah
   1400295cd:	(bad)  
   1400295ce:	imul   ebp,DWORD PTR [rcx+riz*2+0x62],0x656c
   1400295d6:	add    BYTE PTR [rax],al
   1400295d8:	outs   dx,BYTE PTR ds:[rsi]
   1400295d9:	outs   dx,DWORD PTR ds:[rsi]
   1400295da:	and    BYTE PTR [rbp+0x65],ch
   1400295dd:	jae    0x140029652
   1400295df:	(bad)  
   1400295e0:	add    BYTE PTR gs:[eax],al
   1400295e4:	add    BYTE PTR [rax],al
   1400295e6:	add    BYTE PTR [rax],al
   1400295e8:	outs   dx,BYTE PTR ds:[rsi]
   1400295e9:	outs   dx,DWORD PTR ds:[rsi]
   1400295ea:	and    BYTE PTR [rax+0x72],dh
   1400295ed:	outs   dx,DWORD PTR ds:[rsi]
   1400295ee:	je     0x14002965f
   1400295f0:	movsxd ebp,DWORD PTR [rdi+0x6c]
   1400295f3:	and    BYTE PTR [rdi+0x70],ch
   1400295f6:	je     0x140029661
   1400295f8:	outs   dx,DWORD PTR ds:[rsi]
   1400295f9:	outs   dx,BYTE PTR ds:[rsi]
   1400295fa:	add    BYTE PTR [rax],al
   1400295fc:	add    BYTE PTR [rax],al
   1400295fe:	add    BYTE PTR [rax],al
   140029600:	outs   dx,BYTE PTR ds:[rsi]
   140029601:	outs   dx,DWORD PTR ds:[rsi]
   140029602:	and    BYTE PTR [rbx+0x74],dh
   140029605:	jb     0x14002966c
   140029607:	(bad)  
   140029608:	ins    DWORD PTR es:[rdi],dx
   140029609:	and    BYTE PTR [rdx+0x65],dh
   14002960c:	jae    0x14002967d
   14002960e:	jne    0x140029682
   140029610:	movsxd esp,DWORD PTR [rbp+0x73]
   140029613:	add    BYTE PTR [rax],al
   140029615:	add    BYTE PTR [rax],al
   140029617:	add    BYTE PTR [rsi+0x6f],ch
   14002961a:	and    BYTE PTR [rbx+0x75],dh
   14002961d:	movsxd ebp,DWORD PTR [rax+0x20]
   140029620:	fs gs jbe 0x14002968d
   140029624:	movsxd esp,DWORD PTR [rbp+0x20]
   140029627:	outs   dx,DWORD PTR ds:[rsi]
   140029628:	jb     0x14002964a
   14002962a:	(bad)  
   14002962b:	fs fs jb 0x140029694
   14002962f:	jae    0x1400296a4
   140029631:	add    BYTE PTR [rax],al
   140029633:	add    BYTE PTR [rax],al
   140029635:	add    BYTE PTR [rax],al
   140029637:	add    BYTE PTR [rsi+0x6f],ch
   14002963a:	and    BYTE PTR [rbx+0x75],dh
   14002963d:	movsxd ebp,DWORD PTR [rax+0x20]
   140029640:	jo     0x1400296b4
   140029642:	outs   dx,DWORD PTR ds:[rsi]
   140029643:	movsxd esp,DWORD PTR [rbp+0x73]
   140029646:	jae    0x140029648
   140029648:	outs   dx,BYTE PTR ds:[rsi]
   140029649:	outs   dx,DWORD PTR ds:[rsi]
   14002964a:	je     0x14002966c
   14002964c:	(bad)  
   14002964d:	and    BYTE PTR [rcx+rbp*2+0x72],ah
   140029651:	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
   140029656:	jns    0x140029658
   140029658:	outs   dx,BYTE PTR ds:[rsi]
   140029659:	outs   dx,DWORD PTR ds:[rsi]
   14002965a:	je     0x14002967c
   14002965c:	(bad)  
   14002965d:	and    BYTE PTR [rbx+0x6f],dh
   140029660:	movsxd ebp,DWORD PTR [rbx+0x65]
   140029663:	je     0x140029665
   140029665:	add    BYTE PTR [rax],al
   140029667:	add    BYTE PTR [rsi+0x6f],ch
   14002966a:	je     0x14002968c
   14002966c:	(bad)  
   14002966d:	and    BYTE PTR [rbx+0x74],dh
   140029670:	jb     0x1400296d7
   140029672:	(bad)  
   140029673:	ins    DWORD PTR es:[rdi],dx
   140029674:	add    BYTE PTR [rax],al
   140029676:	add    BYTE PTR [rax],al
   140029678:	outs   dx,BYTE PTR ds:[rsi]
   140029679:	outs   dx,DWORD PTR ds:[rsi]
   14002967a:	je     0x14002969c
   14002967c:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14002967f:	outs   dx,BYTE PTR ds:[rsi]
   140029680:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
   140029685:	add    BYTE PTR [rax],al
   140029687:	add    BYTE PTR [rsi+0x6f],ch
   14002968a:	je     0x1400296ac
   14002968c:	jae    0x140029703
   14002968e:	jo     0x140029700
   140029690:	outs   dx,DWORD PTR ds:[rsi]
   140029691:	jb     0x140029707
   140029693:	gs add BYTE PTR fs:[rax],al
   140029697:	add    BYTE PTR [rdi+0x70],ch
   14002969a:	gs jb  0x1400296fe
   14002969d:	je     0x140029708
   14002969f:	outs   dx,DWORD PTR ds:[rsi]
   1400296a0:	outs   dx,BYTE PTR ds:[rsi]
   1400296a1:	and    BYTE PTR [rcx+0x6e],ch
   1400296a4:	and    BYTE PTR [rax+0x72],dh
   1400296a7:	outs   dx,DWORD PTR ds:[rsi]
   1400296a8:	addr32 jb 0x140029710
   1400296ab:	jae    0x140029720
   1400296ad:	add    BYTE PTR [rax],al
   1400296af:	add    BYTE PTR [rdi+0x70],ch
   1400296b2:	gs jb  0x140029716
   1400296b5:	je     0x140029720
   1400296b7:	outs   dx,DWORD PTR ds:[rsi]
   1400296b8:	outs   dx,BYTE PTR ds:[rsi]
   1400296b9:	and    BYTE PTR [rsi+0x6f],ch
   1400296bc:	je     0x1400296de
   1400296be:	jo     0x140029725
   1400296c0:	jb     0x14002972f
   1400296c2:	imul   esi,DWORD PTR [rsp+rsi*2+0x65],0x706f0064
   1400296ca:	gs jb  0x14002972e
   1400296cd:	je     0x140029738
   1400296cf:	outs   dx,DWORD PTR ds:[rsi]
   1400296d0:	outs   dx,BYTE PTR ds:[rsi]
   1400296d1:	and    BYTE PTR [rsi+0x6f],ch
   1400296d4:	je     0x1400296f6
   1400296d6:	jae    0x14002974d
   1400296d8:	jo     0x14002974a
   1400296da:	outs   dx,DWORD PTR ds:[rsi]
   1400296db:	jb     0x140029751
   1400296dd:	gs add BYTE PTR fs:[rdi+0x70],ch
   1400296e2:	gs jb  0x140029746
   1400296e5:	je     0x140029750
   1400296e7:	outs   dx,DWORD PTR ds:[rsi]
   1400296e8:	outs   dx,BYTE PTR ds:[rsi]
   1400296e9:	and    BYTE PTR [rdi+0x6f],dh
   1400296ec:	jne    0x14002975a
   1400296ee:	and    BYTE PTR fs:[rdx+0x6c],ah
   1400296f2:	outs   dx,DWORD PTR ds:[rsi]
   1400296f3:	movsxd ebp,DWORD PTR [rbx+0x0]
   1400296f6:	add    BYTE PTR [rax],al
   1400296f8:	outs   dx,DWORD PTR ds:[rsi]
   1400296f9:	ja     0x140029769
   1400296fb:	gs jb  0x14002971e
   1400296fe:	fs gs (bad) 
   140029701:	add    BYTE PTR fs:[rax],al
   140029704:	add    BYTE PTR [rax],al
   140029706:	add    BYTE PTR [rax],al
   140029708:	jo     0x14002977c
   14002970a:	outs   dx,DWORD PTR ds:[rsi]
   14002970b:	je     0x14002977c
   14002970d:	movsxd ebp,DWORD PTR [rdi+0x6c]
   140029710:	and    BYTE PTR [rbp+0x72],ah
   140029713:	jb     0x140029784
   140029715:	jb     0x140029717
   140029717:	add    BYTE PTR [rax+0x72],dh
   14002971a:	outs   dx,DWORD PTR ds:[rsi]
   14002971b:	je     0x14002978c
   14002971d:	movsxd ebp,DWORD PTR [rdi+0x6c]
   140029720:	and    BYTE PTR [rsi+0x6f],ch
   140029723:	je     0x140029745
   140029725:	jae    0x14002979c
   140029727:	jo     0x140029799
   140029729:	outs   dx,DWORD PTR ds:[rsi]
   14002972a:	jb     0x1400297a0
   14002972c:	gs add BYTE PTR fs:[rax],al
   140029730:	jb     0x140029797
   140029732:	(bad)  
   140029733:	and    BYTE PTR fs:[rdi+0x6e],ch
   140029737:	ins    BYTE PTR es:[rdi],dx
   140029738:	jns    0x14002975a
   14002973a:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x7973
   140029741:	jae    0x1400297b7
   140029743:	gs ins DWORD PTR es:[rdi],dx
   140029745:	add    BYTE PTR [rax],al
   140029747:	add    BYTE PTR [rdx+0x65],dh
   14002974a:	jae    0x1400297bb
   14002974c:	jne    0x1400297c0
   14002974e:	movsxd esp,DWORD PTR [rbp+0x20]
   140029751:	fs gs (bad) 
   140029754:	fs ins BYTE PTR es:[rdi],dx
   140029756:	outs   dx,DWORD PTR ds:[rsi]
   140029757:	movsxd ebp,DWORD PTR [rbx+0x20]
   14002975a:	ja     0x1400297cb
   14002975c:	jne    0x1400297ca
   14002975e:	and    BYTE PTR fs:[rdi+0x63],ch
   140029762:	movsxd esi,DWORD PTR [rbp+0x72]
   140029765:	add    BYTE PTR [rax],al
   140029767:	add    BYTE PTR [rdx+0x65],dh
   14002976a:	jae    0x1400297e1
   14002976c:	ins    BYTE PTR es:[rdi],dx
   14002976d:	je     0x14002978f
   14002976f:	outs   dx,DWORD PTR ds:[rsi]
   140029770:	jne    0x1400297e6
   140029772:	and    BYTE PTR [rdi+0x66],ch
   140029775:	and    BYTE PTR [rdx+0x61],dh
   140029778:	outs   dx,BYTE PTR ds:[rsi]
   140029779:	add    BYTE PTR gs:[eax],al
   14002977d:	add    BYTE PTR [rax],al
   14002977f:	add    BYTE PTR [rbx+0x74],dh
   140029782:	(bad)  
   140029783:	je     0x1400297ea
   140029785:	and    BYTE PTR [rsi+0x6f],ch
   140029788:	je     0x1400297aa
   14002978a:	jb     0x1400297f1
   14002978c:	movsxd ebp,DWORD PTR [rdi+0x76]
   14002978f:	gs jb  0x1400297f3
   140029792:	(bad)  
   140029793:	ins    BYTE PTR es:[rdi],dx
   140029794:	add    BYTE PTR gs:[rax],al
   140029797:	add    BYTE PTR [rbx+0x74],dh
   14002979a:	jb     0x140029801
   14002979c:	(bad)  
   14002979d:	ins    DWORD PTR es:[rdi],dx
   14002979e:	and    BYTE PTR [rcx+rbp*2+0x6d],dh
   1400297a2:	outs   dx,DWORD PTR gs:[rsi]
   1400297a4:	jne    0x14002981a
   1400297a6:	add    BYTE PTR [rax],al
   1400297a8:	je     0x14002980f
   1400297aa:	js     0x140029820
   1400297ac:	and    BYTE PTR [rsi+0x69],ah
   1400297af:	ins    BYTE PTR es:[rdi],dx
   1400297b0:	and    BYTE PTR gs:[rdx+0x75],ah
   1400297b4:	jae    0x14002982f
   1400297b6:	add    BYTE PTR [rax],al
   1400297b8:	je     0x140029823
   1400297ba:	ins    DWORD PTR es:[rdi],dx
   1400297bb:	gs and BYTE PTR fs:[rdi+0x75],ch
   1400297c0:	je     0x1400297c2
   1400297c2:	add    BYTE PTR [rax],al
   1400297c4:	add    BYTE PTR [rax],al
   1400297c6:	add    BYTE PTR [rax],al
   1400297c8:	je     0x140029839
   1400297ca:	outs   dx,DWORD PTR ds:[rsi]
   1400297cb:	and    BYTE PTR [rbp+0x61],ch
   1400297ce:	outs   dx,BYTE PTR ds:[rsi]
   1400297cf:	jns    0x1400297f1
   1400297d1:	imul   bp,WORD PTR [rbp+riz*2+0x73],0x6f20
   1400297d8:	jo     0x14002983f
   1400297da:	outs   dx,BYTE PTR ds:[rsi]
   1400297db:	and    BYTE PTR [rcx+0x6e],ch
   1400297de:	and    BYTE PTR [rbx+0x79],dh
   1400297e1:	jae    0x140029857
   1400297e3:	gs ins DWORD PTR es:[rdi],dx
   1400297e5:	add    BYTE PTR [rax],al
   1400297e7:	add    BYTE PTR [rdi+rbp*2+0x6f],dh
   1400297eb:	and    BYTE PTR [rbp+0x61],ch
   1400297ee:	outs   dx,BYTE PTR ds:[rsi]
   1400297ef:	jns    0x140029811
   1400297f1:	ins    BYTE PTR es:[rdi],dx
   1400297f2:	imul   ebp,DWORD PTR [rsi+0x6b],0x74000073
   1400297f9:	outs   dx,DWORD PTR ds:[rsi]
   1400297fa:	outs   dx,DWORD PTR ds:[rsi]
   1400297fb:	and    BYTE PTR [rbp+0x61],ch
   1400297fe:	outs   dx,BYTE PTR ds:[rsi]
   1400297ff:	jns    0x140029821
   140029801:	jae    0x14002987c
   140029803:	ins    DWORD PTR es:[rdi],dx
   140029804:	(bad)  
   140029805:	outs   dx,DWORD PTR ds:[rsi]
   140029806:	ins    BYTE PTR es:[rdi],dx
   140029807:	imul   esp,DWORD PTR [rbx+0x20],0x6b6e696c
   14002980e:	and    BYTE PTR [rbp+riz*2+0x76],ch
   140029812:	gs ins BYTE PTR es:[rdi],dx
   140029814:	jae    0x140029816
   140029816:	add    BYTE PTR [rax],al
   140029818:	jbe    0x14002987b
   14002981a:	ins    BYTE PTR es:[rdi],dx
   14002981b:	jne    0x140029882
   14002981d:	and    BYTE PTR [rdi+rbp*2+0x6f],dh
   140029821:	and    BYTE PTR [rcx+riz*2+0x72],ch
   140029825:	add    BYTE PTR gs:[edi+0x72],dh
   14002982a:	outs   dx,DWORD PTR ds:[rsi]
   14002982b:	outs   dx,BYTE PTR ds:[rsi]
   14002982c:	and    BYTE PTR [eax+0x72],dh
   140029830:	outs   dx,DWORD PTR ds:[rsi]
   140029831:	je     0x1400298a2
   140029833:	movsxd ebp,DWORD PTR [rdi+0x6c]
   140029836:	and    BYTE PTR [rcx+rdi*2+0x70],dh
   14002983a:	add    BYTE PTR gs:[rax],al
   14002983d:	add    BYTE PTR [rax],al
   14002983f:	add    BYTE PTR [rbp+0x0],ch
   140029842:	jae    0x140029844
   140029844:	movsxd eax,DWORD PTR [rax]
   140029846:	outs   dx,DWORD PTR ds:[rsi]
   140029847:	add    BYTE PTR [rdx+0x0],dh
   14002984a:	add    BYTE PTR gs:[rbp+0x0],ah
   14002984e:	add    BYTE PTR cs:[rax+rax*1+0x6c],ah
   140029853:	add    BYTE PTR [rax+rax*1+0x0],ch
   140029857:	add    BYTE PTR [rbx+0x6f],al
   14002985a:	jb     0x1400298a1
   14002985c:	js     0x1400298c7
   14002985e:	je     0x1400298b0
   140029860:	jb     0x1400298d1
   140029862:	movsxd esp,DWORD PTR [rbp+0x73]
   140029865:	jae    0x140029867
   140029867:	add    BYTE PTR [rdi+0x68],bl
   14002986a:	jns    0x1400298dc
   14002986c:	outs   dx,DWORD PTR ds:[rsi]
   14002986d:	je     0x14002986f
   14002986f:	add    bh,bh
   140029871:	(bad)  
   140029872:	(bad)  
   140029873:	(bad)  
   140029874:	(bad)  
   140029875:	(bad)  
   140029876:	out    dx,eax
   140029877:	jg     0x140029879
   140029879:	add    BYTE PTR [rax],al
   14002987b:	add    BYTE PTR [rax],al
   14002987d:	add    BYTE PTR [rax+0x6d7363a5],dl
   140029883:	loopne 0x140029886
	...
   140029895:	add    BYTE PTR [rax],al
   140029897:	add    BYTE PTR [rax+rax*1],al
   14002989a:	add    BYTE PTR [rax],al
   14002989c:	add    BYTE PTR [rax],al
   14002989e:	add    BYTE PTR [rax],al
   1400298a0:	and    BYTE PTR [rip+0x1993],al        # 0x14002b239
	...
   1400298c2:	add    BYTE PTR [rax],al
   1400298c4:	add    DWORD PTR [rax],eax
   1400298c6:	add    BYTE PTR [rax],al
   1400298c8:	add    al,BYTE PTR [rax]
   1400298ca:	add    BYTE PTR [rax],al
   1400298cc:	add    eax,DWORD PTR [rax]
   1400298ce:	add    BYTE PTR [rax],al
   1400298d0:	add    al,0x0
	...
   1400298de:	add    BYTE PTR [rax],al
   1400298e0:	sub    DWORD PTR [rax],eax
   1400298e2:	add    BYTE PTR [rax+0x1],al
	...
   1400298f8:	sldt   WORD PTR [rax]
   1400298fb:	add    BYTE PTR [rax],al
   1400298fd:	add    BYTE PTR [rax],al
   1400298ff:	add    BYTE PTR [rax],ah
   140029901:	add    eax,0x1993
	...
   140029976:	add    BYTE PTR [rax],al
   140029978:	adc    BYTE PTR [rdx],dl
   14002997a:	add    eax,DWORD PTR [rax+0x1]
   14002997d:	add    BYTE PTR [rax],al
   14002997f:	add    al,ah
   140029981:	jae    0x140029983
   140029983:	rex add DWORD PTR [rax],eax
   140029986:	add    BYTE PTR [rax],al
   140029988:	pop    rsp
   140029989:	je     0x14002998b
   14002998b:	rex add DWORD PTR [rax],eax
   14002998e:	add    BYTE PTR [rax],al
   140029990:	mov    BYTE PTR [rdx],dl
   140029992:	add    eax,DWORD PTR [rax+0x1]
   140029995:	add    BYTE PTR [rax],al
   140029997:	add    BYTE PTR [rax+0x140007a],cl
   14002999d:	add    BYTE PTR [rax],al
   14002999f:	add    BYTE PTR [rax+0x7b],cl
   1400299a2:	add    BYTE PTR [rax+0x1],al
   1400299a5:	add    BYTE PTR [rax],al
   1400299a7:	add    BYTE PTR [rbp+0x6e],dl
   1400299aa:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
   1400299ae:	outs   dx,BYTE PTR ds:[rsi]
   1400299af:	and    BYTE PTR [rbp+0x78],ah
   1400299b2:	movsxd esp,DWORD PTR [rbp+0x70]
   1400299b5:	je     0x140029a20
   1400299b7:	outs   dx,DWORD PTR ds:[rsi]
   1400299b8:	outs   dx,BYTE PTR ds:[rsi]
   1400299b9:	add    BYTE PTR [rax],al
   1400299bb:	add    BYTE PTR [rax],al
   1400299bd:	add    BYTE PTR [rax],al
   1400299bf:	add    BYTE PTR [rax+0x1400312],dh
   1400299c5:	add    BYTE PTR [rax],al
   1400299c7:	add    BYTE PTR [rax],dl
   1400299c9:	jp     0x1400299cb
   1400299cb:	rex add DWORD PTR [rax],eax
   1400299ce:	add    BYTE PTR [rax],al
   1400299d0:	rex.W jnp 0x1400299d3
   1400299d3:	rex add DWORD PTR [rax],eax
   1400299d6:	add    BYTE PTR [rax],al
   1400299d8:	xor    BYTE PTR [rbx],dl
   1400299da:	add    eax,DWORD PTR [rax+0x1]
   1400299dd:	add    BYTE PTR [rax],al
   1400299df:	add    BYTE PTR [rdx+rdi*2+0x0],cl
   1400299e3:	rex add DWORD PTR [rax],eax
   1400299e6:	add    BYTE PTR [rax],al
   1400299e8:	rex.W jnp 0x1400299eb
   1400299eb:	rex add DWORD PTR [rax],eax
   1400299ee:	add    BYTE PTR [rax],al
   1400299f0:	mov    al,0x13
   1400299f2:	add    eax,DWORD PTR [rax+0x1]
   1400299f5:	add    BYTE PTR [rax],al
   1400299f7:	add    ah,dl
   1400299f9:	jns    0x1400299fb
   1400299fb:	rex add DWORD PTR [rax],eax
   1400299fe:	add    BYTE PTR [rax],al
   140029a00:	rex.W jnp 0x140029a03
   140029a03:	rex add DWORD PTR [rax],eax
   140029a06:	add    BYTE PTR [rax],al
   140029a08:	imul   eax,DWORD PTR [rax],0x65
   140029a0b:	add    BYTE PTR [rdx+0x0],dh
   140029a0e:	outs   dx,BYTE PTR ds:[rsi]
   140029a0f:	add    BYTE PTR [rbp+0x0],ah
   140029a12:	ins    BYTE PTR es:[rdi],dx
   140029a13:	add    BYTE PTR [rbx],dh
   140029a15:	add    BYTE PTR [rdx],dh
   140029a17:	add    BYTE PTR [rsi],ch
   140029a19:	add    BYTE PTR [rax+rax*1+0x6c],ah
   140029a1d:	add    BYTE PTR [rax+rax*1+0x0],ch
   140029a21:	add    BYTE PTR [rax],al
   140029a23:	add    BYTE PTR [rax],al
   140029a25:	add    BYTE PTR [rax],al
   140029a27:	add    BYTE PTR [rsi+0x6c],al
   140029a2a:	jae    0x140029a6d
   140029a2c:	ins    BYTE PTR es:[rdi],dx
   140029a2d:	ins    BYTE PTR es:[rdi],dx
   140029a2e:	outs   dx,DWORD PTR ds:[rsi]
   140029a2f:	movsxd eax,DWORD PTR [rax]
   140029a31:	add    BYTE PTR [rax],al
   140029a33:	add    BYTE PTR [rax],al
   140029a35:	add    BYTE PTR [rax],al
   140029a37:	add    BYTE PTR [rsi+0x6c],al
   140029a3a:	jae    0x140029a82
   140029a3c:	jb     0x140029aa3
   140029a3e:	add    BYTE PTR gs:[rsi+0x6c],al
   140029a42:	jae    0x140029a8b
   140029a44:	gs je  0x140029a9d
   140029a47:	(bad)  
   140029a48:	ins    BYTE PTR es:[rdi],dx
   140029a49:	jne    0x140029ab0
   140029a4b:	add    BYTE PTR [rax],al
   140029a4d:	add    BYTE PTR [rax],al
   140029a4f:	add    BYTE PTR [rsi+0x6c],al
   140029a52:	jae    0x140029aa7
   140029a54:	gs je  0x140029aad
   140029a57:	(bad)  
   140029a58:	ins    BYTE PTR es:[rdi],dx
   140029a59:	jne    0x140029ac0
   140029a5b:	add    BYTE PTR [rax],al
   140029a5d:	add    BYTE PTR [rax],al
   140029a5f:	add    BYTE PTR [rcx+0x6e],cl
   140029a62:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   140029a6a:	rex.XB jb 0x140029ad6
   140029a6d:	je     0x140029ad8
   140029a6f:	movsxd esp,DWORD PTR [rcx+0x6c]
   140029a72:	push   rbx
   140029a73:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140029a78:	outs   dx,BYTE PTR ds:[rsi]
   140029a79:	rex.RB js 0x140029a7c
   140029a7c:	add    BYTE PTR [rax],al
   140029a7e:	add    BYTE PTR [rax],al
   140029a80:	rex.XB jb 0x140029ae8
   140029a83:	(bad)  
   140029a84:	je     0x140029aeb
   140029a86:	rex.RB jbe 0x140029aee
   140029a89:	outs   dx,BYTE PTR ds:[rsi]
   140029a8a:	je     0x140029ad1
   140029a8c:	js     0x140029ae5
   140029a8e:	add    BYTE PTR [rax],al
   140029a90:	rex.XB jb 0x140029af8
   140029a93:	(bad)  
   140029a94:	je     0x140029afb
   140029a96:	push   rbx
   140029a97:	gs ins DWORD PTR es:[rdi],dx
   140029a99:	(bad)  
   140029a9a:	jo     0x140029b04
   140029a9c:	outs   dx,DWORD PTR ds:[rsi]
   140029a9d:	jb     0x140029b04
   140029a9f:	rex.RB js 0x140029af9
   140029aa2:	add    BYTE PTR [rax],al
   140029aa4:	add    BYTE PTR [rax],al
   140029aa6:	add    BYTE PTR [rax],al
   140029aa8:	push   rbx
   140029aa9:	gs je  0x140029b00
   140029aac:	push   0x64616572
   140029ab1:	push   rbx
   140029ab2:	je     0x140029b15
   140029ab4:	movsxd ebp,DWORD PTR [rbx+0x47]
   140029ab7:	jne    0x140029b1a
   140029ab9:	jb     0x140029b1c
   140029abb:	outs   dx,BYTE PTR ds:[rsi]
   140029abc:	je     0x140029b23
   140029abe:	add    BYTE PTR gs:[rbx+0x72],al
   140029ac2:	gs (bad) 
   140029ac4:	je     0x140029b2b
   140029ac6:	push   rsp
   140029ac7:	push   0x64616572
   140029acc:	jo     0x140029b3d
   140029ace:	outs   dx,DWORD PTR ds:[rsi]
   140029acf:	ins    BYTE PTR es:[rdi],dx
   140029ad0:	push   rsp
   140029ad1:	imul   ebp,DWORD PTR [rbp+0x65],0x72
   140029ad8:	push   rbx
   140029ad9:	gs je  0x140029b30
   140029adc:	push   0x64616572
   140029ae1:	jo     0x140029b52
   140029ae3:	outs   dx,DWORD PTR ds:[rsi]
   140029ae4:	ins    BYTE PTR es:[rdi],dx
   140029ae5:	push   rsp
   140029ae6:	imul   ebp,DWORD PTR [rbp+0x65],0x72
   140029aed:	add    BYTE PTR [rax],al
   140029aef:	add    BYTE PTR [rdi+0x61],dl
   140029af2:	imul   esi,DWORD PTR [rsi+rax*2+0x6f],0x72685472
   140029afa:	gs (bad) 
   140029afc:	fs jo  0x140029b6e
   140029aff:	outs   dx,DWORD PTR ds:[rsi]
   140029b00:	ins    BYTE PTR es:[rdi],dx
   140029b01:	push   rsp
   140029b02:	imul   ebp,DWORD PTR [rbp+0x65],0x6c614372
   140029b09:	ins    BYTE PTR es:[rdi],dx
   140029b0a:	(bad)  
   140029b0c:	movsxd ebp,DWORD PTR [rbx+0x73]
   140029b0f:	add    BYTE PTR [rbx+0x6c],al
   140029b12:	outs   dx,DWORD PTR ds:[rsi]
   140029b13:	jae    0x140029b7a
   140029b15:	push   rsp
   140029b16:	push   0x64616572
   140029b1b:	jo     0x140029b8c
   140029b1d:	outs   dx,DWORD PTR ds:[rsi]
   140029b1e:	ins    BYTE PTR es:[rdi],dx
   140029b1f:	push   rsp
   140029b20:	imul   ebp,DWORD PTR [rbp+0x65],0x72
   140029b27:	add    BYTE PTR [rbx+0x72],al
   140029b2a:	gs (bad) 
   140029b2c:	je     0x140029b93
   140029b2e:	push   rsp
   140029b2f:	push   0x64616572
   140029b34:	jo     0x140029ba5
   140029b36:	outs   dx,DWORD PTR ds:[rsi]
   140029b37:	ins    BYTE PTR es:[rdi],dx
   140029b38:	push   rdi
   140029b39:	(bad)  
   140029b3a:	imul   esi,DWORD PTR [rax+rax*1+0x0],0x65530000
   140029b42:	je     0x140029b98
   140029b44:	push   0x64616572
   140029b49:	jo     0x140029bba
   140029b4b:	outs   dx,DWORD PTR ds:[rsi]
   140029b4c:	ins    BYTE PTR es:[rdi],dx
   140029b4d:	push   rdi
   140029b4e:	(bad)  
   140029b4f:	imul   esi,DWORD PTR [rax+rax*1+0x0],0x0
   140029b57:	add    BYTE PTR [rbx+0x6c],al
   140029b5a:	outs   dx,DWORD PTR ds:[rsi]
   140029b5b:	jae    0x140029bc2
   140029b5d:	push   rsp
   140029b5e:	push   0x64616572
   140029b63:	jo     0x140029bd4
   140029b65:	outs   dx,DWORD PTR ds:[rsi]
   140029b66:	ins    BYTE PTR es:[rdi],dx
   140029b67:	push   rdi
   140029b68:	(bad)  
   140029b69:	imul   esi,DWORD PTR [rax+rax*1+0x0],0x46000000
   140029b71:	ins    BYTE PTR es:[rdi],dx
   140029b72:	jne    0x140029be7
   140029b74:	push   0x636f7250
   140029b79:	gs jae 0x140029bef
   140029b7c:	push   rdi
   140029b7d:	jb     0x140029be8
   140029b7f:	je     0x140029be6
   140029b81:	rex.X jne 0x140029bea
   140029b84:	data16 gs jb 0x140029bfb
	...
   140029b90:	rex.RX jb 0x140029bf8
   140029b93:	imul   r12,QWORD PTR gs:[rdx+0x72],0x57797261
   140029b9c:	push   0x61436e65
   140029ba1:	ins    BYTE PTR es:[rdi],dx
   140029ba2:	ins    BYTE PTR es:[rdi],dx
   140029ba3:	(bad)  
   140029ba5:	movsxd ebp,DWORD PTR [rbx+0x52]
   140029ba8:	gs je  0x140029c20
   140029bab:	jb     0x140029c1b
   140029bad:	jae    0x140029baf
   140029baf:	add    BYTE PTR [rdi+0x65],al
   140029bb2:	je     0x140029bf7
   140029bb4:	jne    0x140029c28
   140029bb6:	jb     0x140029c1d
   140029bb8:	outs   dx,BYTE PTR ds:[rsi]
   140029bb9:	je     0x140029c0b
   140029bbb:	jb     0x140029c2c
   140029bbd:	movsxd esp,DWORD PTR [rbp+0x73]
   140029bc0:	jae    0x140029c31
   140029bc2:	jb     0x140029c12
   140029bc4:	jne    0x140029c33
   140029bc6:	(bad)  
   140029bc7:	gs jb  0x140029bca
   140029bca:	add    BYTE PTR [rax],al
   140029bcc:	add    BYTE PTR [rax],al
   140029bce:	add    BYTE PTR [rax],al
   140029bd0:	rex.RXB
   140029bd1:	gs je  0x140029c20
   140029bd4:	outs   dx,DWORD PTR ds:[rsi]
   140029bd5:	imul   esp,DWORD PTR [ebx+0x61],0x6f72506c
   140029bdd:	movsxd esp,DWORD PTR [rbp+0x73]
   140029be0:	jae    0x140029c51
   140029be2:	jb     0x140029c2d
   140029be4:	outs   dx,BYTE PTR ds:[rsi]
   140029be5:	outs   dx,WORD PTR ds:[rsi]
   140029be7:	jb     0x140029c56
   140029be9:	(bad)  
   140029bea:	je     0x140029c55
   140029bec:	outs   dx,DWORD PTR ds:[rsi]
   140029bed:	outs   dx,BYTE PTR ds:[rsi]
   140029bee:	add    BYTE PTR [rax],al
   140029bf0:	rex.XB jb 0x140029c58
   140029bf3:	(bad)  
   140029bf4:	je     0x140029c5b
   140029bf6:	push   rbx
   140029bf7:	jns    0x140029c66
   140029bf9:	(bad)  
   140029bfa:	outs   dx,DWORD PTR ds:[rsi]
   140029bfb:	ins    BYTE PTR es:[rdi],dx
   140029bfc:	imul   esp,DWORD PTR [rbx+0x4c],0x576b6e69
   140029c03:	add    BYTE PTR [rax],al
   140029c05:	add    BYTE PTR [rax],al
   140029c07:	add    BYTE PTR [rbx+0x65],dl
   140029c0a:	je     0x140029c50
   140029c0c:	gs data16 (bad) 
   140029c0f:	jne    0x140029c7d
   140029c11:	je     0x140029c57
   140029c13:	ins    BYTE PTR es:[rdi],dx
   140029c14:	ins    BYTE PTR es:[rdi],dx
   140029c15:	imul   r14d,DWORD PTR [rdx+0x65],0x726f7463
   140029c1d:	imul   esp,DWORD PTR [rbp+0x73],0x0
   140029c24:	add    BYTE PTR [rax],al
   140029c26:	add    BYTE PTR [rax],al
   140029c28:	rex.RB outs dx,BYTE PTR ds:[rsi]
   140029c2a:	jne    0x140029c99
   140029c2c:	push   rbx
   140029c2d:	jns    0x140029ca2
   140029c2f:	je     0x140029c96
   140029c31:	ins    DWORD PTR es:[rdi],dx
   140029c32:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140029c34:	movsxd esp,DWORD PTR [rcx+0x6c]
   140029c37:	gs jae 0x140029c7f
   140029c3a:	js     0x140029c3c
   140029c3c:	add    BYTE PTR [rax],al
   140029c3e:	add    BYTE PTR [rax],al
   140029c40:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140029c42:	ins    DWORD PTR es:[rdi],dx
   140029c43:	jo     0x140029ca6
   140029c45:	jb     0x140029cac
   140029c47:	push   rbx
   140029c48:	je     0x140029cbc
   140029c4a:	imul   ebp,DWORD PTR [rsi+0x67],0x47007845
   140029c51:	gs je  0x140029c98
   140029c54:	(bad)  
   140029c55:	je     0x140029cbc
   140029c57:	rex.RX outs dx,DWORD PTR ds:[rsi]
   140029c59:	jb     0x140029cc8
   140029c5b:	(bad)  
   140029c5c:	je     0x140029ca3
   140029c5e:	js     0x140029c60
   140029c60:	rex.RXB
   140029c61:	gs je  0x140029cb0
   140029c64:	outs   dx,DWORD PTR ds:[rsi]
   140029c65:	movsxd esp,DWORD PTR [rcx+0x6c]
   140029c68:	rex.WB outs dx,BYTE PTR gs:[rsi]
   140029c6b:	outs   dx,WORD PTR ds:[rsi]
   140029c6d:	rex.RB js 0x140029c70
   140029c70:	rex.RXB
   140029c71:	gs je  0x140029cc8
   140029c74:	imul   ebp,DWORD PTR [rbp+0x65],0x6d726f46
   140029c7b:	(bad)  
   140029c7c:	je     0x140029cc3
   140029c7e:	js     0x140029c80
   140029c80:	rex.RXB
   140029c81:	gs je  0x140029cd9
   140029c84:	jae    0x140029ceb
   140029c86:	jb     0x140029ccc
   140029c88:	gs data16 (bad) 
   140029c8b:	jne    0x140029cf9
   140029c8d:	je     0x140029cdb
   140029c8f:	outs   dx,DWORD PTR ds:[rsi]
   140029c90:	movsxd esp,DWORD PTR [rcx+0x6c]
   140029c93:	gs rex.WRX (bad) 
   140029c96:	ins    DWORD PTR es:[rdi],dx
   140029c97:	add    BYTE PTR gs:[rax],al
   140029c9a:	add    BYTE PTR [rax],al
   140029c9c:	add    BYTE PTR [rax],al
   140029c9e:	add    BYTE PTR [rax],al
   140029ca0:	rex.WB jae 0x140029cf9
   140029ca3:	(bad)  
   140029ca4:	ins    BYTE PTR es:[rdi],dx
   140029ca5:	imul   esp,DWORD PTR [rsp+rcx*2+0x6f],0x656c6163
   140029cad:	rex.WRX (bad) 
   140029caf:	ins    DWORD PTR es:[rdi],dx
   140029cb0:	add    BYTE PTR gs:[rax],al
   140029cb3:	add    BYTE PTR [rax],al
   140029cb5:	add    BYTE PTR [rax],al
   140029cb7:	add    BYTE PTR [rbx+rax*2+0x4d],cl
   140029cbb:	(bad)  
   140029cbc:	jo     0x140029d11
   140029cbe:	je     0x140029d32
   140029cc0:	imul   ebp,DWORD PTR [rsi+0x67],0x7845
   140029cc7:	add    BYTE PTR [rdi+0x65],al
   140029cca:	je     0x140029d0f
   140029ccc:	jne    0x140029d40
   140029cce:	jb     0x140029d35
   140029cd0:	outs   dx,BYTE PTR ds:[rsi]
   140029cd1:	je     0x140029d23
   140029cd3:	(bad)  
   140029cd4:	movsxd ebp,DWORD PTR [rbx+0x61]
   140029cd7:	addr32 gs rex.WB
   140029cda:	add    BYTE PTR fs:[rax],al
   140029cdd:	add    BYTE PTR [rax],al
   140029cdf:	add    BYTE PTR [rdi+0x65],al
   140029ce2:	je     0x140029d38
   140029ce4:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
   140029ceb:	je     0x140029d23
   140029ced:	xor    al,0x0
   140029cef:	add    BYTE PTR [rdi+0x65],al
   140029cf2:	je     0x140029d3a
   140029cf4:	imul   ebp,DWORD PTR [rbp+riz*2+0x49],0x726f666e
   140029cfc:	ins    DWORD PTR es:[rdi],dx
   140029cfd:	(bad)  
   140029cfe:	je     0x140029d69
   140029d00:	outs   dx,DWORD PTR ds:[rsi]
   140029d01:	outs   dx,BYTE PTR ds:[rsi]
   140029d02:	rex.X jns 0x140029d4d
   140029d05:	(bad)  
   140029d06:	outs   dx,BYTE PTR ds:[rsi]
   140029d07:	fs ins BYTE PTR es:[rdi],dx
   140029d09:	gs rex.RB js 0x140029d64
   140029d0d:	add    BYTE PTR [rax],al
   140029d0f:	add    BYTE PTR [rbx+0x65],dl
   140029d12:	je     0x140029d5a
   140029d14:	imul   ebp,DWORD PTR [rbp+riz*2+0x49],0x726f666e
   140029d1c:	ins    DWORD PTR es:[rdi],dx
   140029d1d:	(bad)  
   140029d1e:	je     0x140029d89
   140029d20:	outs   dx,DWORD PTR ds:[rsi]
   140029d21:	outs   dx,BYTE PTR ds:[rsi]
   140029d22:	rex.X jns 0x140029d6d
   140029d25:	(bad)  
   140029d26:	outs   dx,BYTE PTR ds:[rsi]
   140029d27:	fs ins BYTE PTR es:[rdi],dx
   140029d29:	gs push rdi
   140029d2b:	add    BYTE PTR [rax],al
   140029d2d:	add    BYTE PTR [rax],al
   140029d2f:	add    BYTE PTR [rdx],al
   140029d31:	add    BYTE PTR [rax],al
   140029d33:	add    BYTE PTR [rax],al
   140029d35:	add    BYTE PTR [rax],al
   140029d37:	add    BYTE PTR [rax+0x140029e],ah
   140029d3d:	add    BYTE PTR [rax],al
   140029d3f:	add    BYTE PTR [rax],cl
	...
   140029d49:	lahf   
   140029d4a:	add    al,BYTE PTR [rax+0x1]
   140029d4d:	add    BYTE PTR [rax],al
   140029d4f:	add    BYTE PTR [rcx],cl
   140029d51:	add    BYTE PTR [rax],al
   140029d53:	add    BYTE PTR [rax],al
   140029d55:	add    BYTE PTR [rax],al
   140029d57:	add    BYTE PTR [rax-0x61],ah
   140029d5a:	add    al,BYTE PTR [rax+0x1]
   140029d5d:	add    BYTE PTR [rax],al
   140029d5f:	add    BYTE PTR [rdx],cl
   140029d61:	add    BYTE PTR [rax],al
   140029d63:	add    BYTE PTR [rax],al
   140029d65:	add    BYTE PTR [rax],al
   140029d67:	add    al,al
   140029d69:	lahf   
   140029d6a:	add    al,BYTE PTR [rax+0x1]
   140029d6d:	add    BYTE PTR [rax],al
   140029d6f:	add    BYTE PTR [rax],dl
   140029d71:	add    BYTE PTR [rax],al
   140029d73:	add    BYTE PTR [rax],al
   140029d75:	add    BYTE PTR [rax],al
   140029d77:	add    BYTE PTR [rax],dl
   140029d79:	movabs al,ds:0x11000000014002
   140029d82:	add    BYTE PTR [rax],al
   140029d84:	add    BYTE PTR [rax],al
   140029d86:	add    BYTE PTR [rax],al
   140029d88:	jo     0x140029d2a
   140029d8a:	add    al,BYTE PTR [rax+0x1]
   140029d8d:	add    BYTE PTR [rax],al
   140029d8f:	add    BYTE PTR [rdx],dl
   140029d91:	add    BYTE PTR [rax],al
   140029d93:	add    BYTE PTR [rax],al
   140029d95:	add    BYTE PTR [rax],al
   140029d97:	add    al,dl
   140029d99:	movabs al,ds:0x13000000014002
   140029da2:	add    BYTE PTR [rax],al
   140029da4:	add    BYTE PTR [rax],al
   140029da6:	add    BYTE PTR [rax],al
   140029da8:	and    BYTE PTR [rcx+0x14002],ah
   140029dae:	add    BYTE PTR [rax],al
   140029db0:	sbb    BYTE PTR [rax],al
   140029db2:	add    BYTE PTR [rax],al
   140029db4:	add    BYTE PTR [rax],al
   140029db6:	add    BYTE PTR [rax],al
   140029db8:	and    BYTE PTR [rcx+0x14002],0x0
   140029dbf:	add    BYTE PTR [rcx],bl
   140029dc1:	add    BYTE PTR [rax],al
   140029dc3:	add    BYTE PTR [rax],al
   140029dc5:	add    BYTE PTR [rax],al
   140029dc7:	add    al,dh
   140029dc9:	movabs eax,ds:0x1a000000014002
   140029dd2:	add    BYTE PTR [rax],al
   140029dd4:	add    BYTE PTR [rax],al
   140029dd6:	add    BYTE PTR [rax],al
   140029dd8:	movabs ds:0x1b000000014002,al
   140029de2:	add    BYTE PTR [rax],al
   140029de4:	add    BYTE PTR [rax],al
   140029de6:	add    BYTE PTR [rax],al
   140029de8:	mov    al,0xa2
   140029dea:	add    al,BYTE PTR [rax+0x1]
   140029ded:	add    BYTE PTR [rax],al
   140029def:	add    BYTE PTR [rax+rax*1],bl
   140029df2:	add    BYTE PTR [rax],al
   140029df4:	add    BYTE PTR [rax],al
   140029df6:	add    BYTE PTR [rax],al
   140029df8:	and    BYTE PTR [rbx+0x14002],ah
   140029dfe:	add    BYTE PTR [rax],al
   140029e00:	(bad)  
   140029e01:	add    BYTE PTR [rax],al
   140029e03:	add    BYTE PTR [rax],al
   140029e05:	add    BYTE PTR [rax],al
   140029e07:	add    BYTE PTR [rax-0x5d],dh
   140029e0a:	add    al,BYTE PTR [rax+0x1]
   140029e0d:	add    BYTE PTR [rax],al
   140029e0f:	add    BYTE PTR [rdi],bl
   140029e11:	add    BYTE PTR [rax],al
   140029e13:	add    BYTE PTR [rax],al
   140029e15:	add    BYTE PTR [rax],al
   140029e17:	add    BYTE PTR [rax+0x14002a3],dh
   140029e1d:	add    BYTE PTR [rax],al
   140029e1f:	add    BYTE PTR [rax],ah
   140029e21:	add    BYTE PTR [rax],al
   140029e23:	add    BYTE PTR [rax],al
   140029e25:	add    BYTE PTR [rax],al
   140029e27:	add    BYTE PTR [rax+0x14002a4],al
   140029e2d:	add    BYTE PTR [rax],al
   140029e2f:	add    BYTE PTR [rcx],ah
   140029e31:	add    BYTE PTR [rax],al
   140029e33:	add    BYTE PTR [rax],al
   140029e35:	add    BYTE PTR [rax],al
   140029e37:	add    al,dh
   140029e39:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140029e3a:	add    al,BYTE PTR [rax+0x1]
   140029e3d:	add    BYTE PTR [rax],al
   140029e3f:	add    BYTE PTR [rdx],ah
   140029e41:	add    BYTE PTR [rax],al
   140029e43:	add    BYTE PTR [rax],al
   140029e45:	add    BYTE PTR [rax],al
   140029e47:	add    al,ah
   140029e49:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140029e4a:	add    al,BYTE PTR [rax+0x1]
   140029e4d:	add    BYTE PTR [rax],al
   140029e4f:	add    BYTE PTR [rax+0x0],bh
   140029e52:	add    BYTE PTR [rax],al
   140029e54:	add    BYTE PTR [rax],al
   140029e56:	add    BYTE PTR [rax],al
   140029e58:	cmps   QWORD PTR ds:[rsi],QWORD PTR es:[rdi]
   140029e5a:	add    al,BYTE PTR [rax+0x1]
   140029e5d:	add    BYTE PTR [rax],al
   140029e5f:	add    BYTE PTR [rcx+0x0],bh
   140029e62:	add    BYTE PTR [rax],al
   140029e64:	add    BYTE PTR [rax],al
   140029e66:	add    BYTE PTR [rax],al
   140029e68:	push   0x14002a7
   140029e6d:	add    BYTE PTR [rax],al
   140029e6f:	add    BYTE PTR [rdx+0x0],bh
   140029e72:	add    BYTE PTR [rax],al
   140029e74:	add    BYTE PTR [rax],al
   140029e76:	add    BYTE PTR [rax],al
   140029e78:	mov    BYTE PTR [rdi+0x14002],ah
   140029e7e:	add    BYTE PTR [rax],al
   140029e80:	cld    
   140029e81:	add    BYTE PTR [rax],al
   140029e83:	add    BYTE PTR [rax],al
   140029e85:	add    BYTE PTR [rax],al
   140029e87:	add    BYTE PTR [rdi+riz*4+0x14002],ah
   140029e8e:	add    BYTE PTR [rax],al
   140029e90:	inc    DWORD PTR [rax]
   140029e92:	add    BYTE PTR [rax],al
   140029e94:	add    BYTE PTR [rax],al
   140029e96:	add    BYTE PTR [rax],al
   140029e98:	mov    al,0xa7
   140029e9a:	add    al,BYTE PTR [rax+0x1]
   140029e9d:	add    BYTE PTR [rax],al
   140029e9f:	add    BYTE PTR [rdx+0x0],dl
   140029ea2:	add    BYTE PTR ss:[rax],dh
   140029ea5:	add    BYTE PTR [rax],dh
   140029ea7:	add    BYTE PTR [rdx],dh
   140029ea9:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d02a8af
   140029eaf:	add    BYTE PTR [rax],ah
   140029eb1:	add    BYTE PTR [rsi+0x0],ah
   140029eb4:	ins    BYTE PTR es:[rdi],dx
   140029eb5:	add    BYTE PTR [rdi+0x0],ch
   140029eb8:	(bad)  
   140029eb9:	add    BYTE PTR [rax+rax*1+0x69],dh
   140029ebd:	add    BYTE PTR [rsi+0x0],ch
   140029ec0:	add    BYTE PTR [eax],ah
   140029ec3:	add    BYTE PTR [rax+0x0],dh
   140029ec6:	outs   dx,DWORD PTR ds:[rsi]
   140029ec7:	add    BYTE PTR [rcx+0x0],ch
   140029eca:	outs   dx,BYTE PTR ds:[rsi]
   140029ecb:	add    BYTE PTR [rax+rax*1+0x20],dh
   140029ecf:	add    BYTE PTR [rbx+0x0],dh
   140029ed2:	jne    0x140029ed4
   140029ed4:	jo     0x140029ed6
   140029ed6:	jo     0x140029ed8
   140029ed8:	outs   dx,DWORD PTR ds:[rsi]
   140029ed9:	add    BYTE PTR [rdx+0x0],dh
   140029edc:	je     0x140029ede
   140029ede:	and    BYTE PTR [rax],al
   140029ee0:	outs   dx,BYTE PTR ds:[rsi]
   140029ee1:	add    BYTE PTR [rdi+0x0],ch
   140029ee4:	je     0x140029ee6
   140029ee6:	and    BYTE PTR [rax],al
   140029ee8:	ins    BYTE PTR es:[rdi],dx
   140029ee9:	add    BYTE PTR [rdi+0x0],ch
   140029eec:	(bad)  
   140029eed:	add    BYTE PTR [rax+rax*1+0x65],ah
   140029ef1:	add    BYTE PTR [rax+rax*1+0xd],ah
   140029ef5:	add    BYTE PTR [rdx],cl
	...
   140029eff:	add    BYTE PTR [rdx+0x0],dl
   140029f02:	add    BYTE PTR ss:[rax],dh
   140029f05:	add    BYTE PTR [rax],dh
   140029f07:	add    BYTE PTR [rax],bh
   140029f09:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d02a90f
   140029f0f:	add    BYTE PTR [rax],ah
   140029f11:	add    BYTE PTR [rsi+0x0],ch
   140029f14:	outs   dx,DWORD PTR ds:[rsi]
   140029f15:	add    BYTE PTR [rax+rax*1+0x20],dh
   140029f19:	add    BYTE PTR [rbp+0x0],ah
   140029f1c:	outs   dx,BYTE PTR ds:[rsi]
   140029f1d:	add    BYTE PTR [rdi+0x0],ch
   140029f20:	jne    0x140029f22
   140029f22:	add    BYTE PTR [eax+0x0],ch
   140029f26:	and    BYTE PTR [rax],al
   140029f28:	jae    0x140029f2a
   140029f2a:	jo     0x140029f2c
   140029f2c:	(bad)  
   140029f2d:	add    BYTE PTR [rbx+0x0],ah
   140029f30:	add    BYTE PTR gs:[rax],ah
   140029f33:	add    BYTE PTR [rsi+0x0],ah
   140029f36:	outs   dx,DWORD PTR ds:[rsi]
   140029f37:	add    BYTE PTR [rdx+0x0],dh
   140029f3a:	and    BYTE PTR [rax],al
   140029f3c:	(bad)  
   140029f3d:	add    BYTE PTR [rdx+0x0],dh
   140029f40:	add    BYTE PTR [ebp+0x0],dh
   140029f44:	ins    DWORD PTR es:[rdi],dx
   140029f45:	add    BYTE PTR [rbp+0x0],ah
   140029f48:	outs   dx,BYTE PTR ds:[rsi]
   140029f49:	add    BYTE PTR [rax+rax*1+0x73],dh
   140029f4d:	add    BYTE PTR [rip+0xa00],cl        # 0x14002a953
	...
   140029f5f:	add    BYTE PTR [rdx+0x0],dl
   140029f62:	add    BYTE PTR ss:[rax],dh
   140029f65:	add    BYTE PTR [rax],dh
   140029f67:	add    BYTE PTR [rcx],bh
   140029f69:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d02a96f
   140029f6f:	add    BYTE PTR [rax],ah
   140029f71:	add    BYTE PTR [rsi+0x0],ch
   140029f74:	outs   dx,DWORD PTR ds:[rsi]
   140029f75:	add    BYTE PTR [rax+rax*1+0x20],dh
   140029f79:	add    BYTE PTR [rbp+0x0],ah
   140029f7c:	outs   dx,BYTE PTR ds:[rsi]
   140029f7d:	add    BYTE PTR [rdi+0x0],ch
   140029f80:	jne    0x140029f82
   140029f82:	add    BYTE PTR [eax+0x0],ch
   140029f86:	and    BYTE PTR [rax],al
   140029f88:	jae    0x140029f8a
   140029f8a:	jo     0x140029f8c
   140029f8c:	(bad)  
   140029f8d:	add    BYTE PTR [rbx+0x0],ah
   140029f90:	add    BYTE PTR gs:[rax],ah
   140029f93:	add    BYTE PTR [rsi+0x0],ah
   140029f96:	outs   dx,DWORD PTR ds:[rsi]
   140029f97:	add    BYTE PTR [rdx+0x0],dh
   140029f9a:	and    BYTE PTR [rax],al
   140029f9c:	add    BYTE PTR gs:[rsi+0x0],ch
   140029fa0:	jbe    0x140029fa2
   140029fa2:	imul   eax,DWORD PTR [rax],0x6f0072
   140029fa8:	outs   dx,BYTE PTR ds:[rsi]
   140029fa9:	add    BYTE PTR [rbp+0x0],ch
   140029fac:	add    BYTE PTR gs:[rsi+0x0],ch
   140029fb0:	je     0x140029fb2
   140029fb2:	or     eax,0xa00
	...
   140029fbf:	add    BYTE PTR [rdx+0x0],dl
   140029fc2:	add    BYTE PTR ss:[rax],dh
   140029fc5:	add    BYTE PTR [rcx],dh
   140029fc7:	add    BYTE PTR [rax],dh
   140029fc9:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d02a9cf
   140029fcf:	add    BYTE PTR [rax],ah
   140029fd1:	add    BYTE PTR [rcx+0x0],ah
   140029fd4:	(bad)  
   140029fd5:	add    BYTE PTR [rdi+0x0],ch
   140029fd8:	jb     0x140029fda
   140029fda:	je     0x140029fdc
   140029fdc:	sub    BYTE PTR [rax],al
   140029fde:	sub    DWORD PTR [rax],eax
   140029fe0:	and    BYTE PTR [rax],al
   140029fe2:	push   0x73006100
   140029fe7:	add    BYTE PTR [rax],ah
   140029fe9:	add    BYTE PTR [rdx+0x0],ah
   140029fec:	add    BYTE PTR gs:[rbp+0x0],ah
   140029ff0:	outs   dx,BYTE PTR ds:[rsi]
   140029ff1:	add    BYTE PTR [rax],ah
   140029ff3:	add    BYTE PTR [rbx+0x0],ah
   140029ff6:	(bad)  
   140029ff7:	add    BYTE PTR [rax+rax*1+0x6c],ch
   140029ffb:	add    BYTE PTR [rbp+0x0],ah
   140029ffe:	add    BYTE PTR fs:[rip+0xa00],cl        # 0x14002aa05
	...
   14002a00d:	add    BYTE PTR [rax],al
   14002a00f:	add    BYTE PTR [rdx+0x0],dl
   14002a012:	add    BYTE PTR ss:[rax],dh
   14002a015:	add    BYTE PTR [rcx],dh
   14002a017:	add    BYTE PTR [rsi],dh
   14002a019:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d02aa1f
   14002a01f:	add    BYTE PTR [rax],ah
   14002a021:	add    BYTE PTR [rsi+0x0],ch
   14002a024:	outs   dx,DWORD PTR ds:[rsi]
   14002a025:	add    BYTE PTR [rax+rax*1+0x20],dh
   14002a029:	add    BYTE PTR [rbp+0x0],ah
   14002a02c:	outs   dx,BYTE PTR ds:[rsi]
   14002a02d:	add    BYTE PTR [rdi+0x0],ch
   14002a030:	jne    0x14002a032
   14002a032:	add    BYTE PTR [eax+0x0],ch
   14002a036:	and    BYTE PTR [rax],al
   14002a038:	jae    0x14002a03a
   14002a03a:	jo     0x14002a03c
   14002a03c:	(bad)  
   14002a03d:	add    BYTE PTR [rbx+0x0],ah
   14002a040:	add    BYTE PTR gs:[rax],ah
   14002a043:	add    BYTE PTR [rsi+0x0],ah
   14002a046:	outs   dx,DWORD PTR ds:[rsi]
   14002a047:	add    BYTE PTR [rdx+0x0],dh
   14002a04a:	and    BYTE PTR [rax],al
   14002a04c:	je     0x14002a04e
   14002a04e:	push   0x65007200
   14002a053:	add    BYTE PTR [rcx+0x0],ah
   14002a056:	add    BYTE PTR fs:[rax],ah
   14002a059:	add    BYTE PTR [rax+rax*1+0x61],ah
   14002a05d:	add    BYTE PTR [rax+rax*1+0x61],dh
   14002a061:	add    BYTE PTR [rip+0xa00],cl        # 0x14002aa67
	...
   14002a06f:	add    BYTE PTR [rdx+0x0],dl
   14002a072:	add    BYTE PTR ss:[rax],dh
   14002a075:	add    BYTE PTR [rcx],dh
   14002a077:	add    BYTE PTR [rdi],dh
   14002a079:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d02aa7f
   14002a07f:	add    BYTE PTR [rax],ah
   14002a081:	add    BYTE PTR [rbp+0x0],dh
   14002a084:	outs   dx,BYTE PTR ds:[rsi]
   14002a085:	add    BYTE PTR [rbp+0x0],ah
   14002a088:	js     0x14002a08a
   14002a08a:	jo     0x14002a08c
   14002a08c:	add    BYTE PTR gs:[rbx+0x0],ah
   14002a090:	je     0x14002a092
   14002a092:	add    BYTE PTR gs:[rax+rax*1+0x20],ah
   14002a097:	add    BYTE PTR [rbp+0x0],ch
   14002a09a:	jne    0x14002a09c
   14002a09c:	ins    BYTE PTR es:[rdi],dx
   14002a09d:	add    BYTE PTR [rax+rax*1+0x69],dh
   14002a0a1:	add    BYTE PTR [rax+rax*1+0x68],dh
   14002a0a5:	add    BYTE PTR [rdx+0x0],dh
   14002a0a8:	add    BYTE PTR gs:[rcx+0x0],ah
   14002a0ac:	add    BYTE PTR fs:[rax],ah
   14002a0af:	add    BYTE PTR [rax+rax*1+0x6f],ch
   14002a0b3:	add    BYTE PTR [rbx+0x0],ah
   14002a0b6:	imul   eax,DWORD PTR [rax],0x20
   14002a0b9:	add    BYTE PTR [rbp+0x0],ah
   14002a0bc:	jb     0x14002a0be
   14002a0be:	jb     0x14002a0c0
   14002a0c0:	outs   dx,DWORD PTR ds:[rsi]
   14002a0c1:	add    BYTE PTR [rdx+0x0],dh
   14002a0c4:	or     eax,0xa00
   14002a0c9:	add    BYTE PTR [rax],al
   14002a0cb:	add    BYTE PTR [rax],al
   14002a0cd:	add    BYTE PTR [rax],al
   14002a0cf:	add    BYTE PTR [rdx+0x0],dl
   14002a0d2:	add    BYTE PTR ss:[rax],dh
   14002a0d5:	add    BYTE PTR [rcx],dh
   14002a0d7:	add    BYTE PTR [rax],bh
   14002a0d9:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d02aadf
   14002a0df:	add    BYTE PTR [rax],ah
   14002a0e1:	add    BYTE PTR [rbp+0x0],dh
   14002a0e4:	outs   dx,BYTE PTR ds:[rsi]
   14002a0e5:	add    BYTE PTR [rbp+0x0],ah
   14002a0e8:	js     0x14002a0ea
   14002a0ea:	jo     0x14002a0ec
   14002a0ec:	add    BYTE PTR gs:[rbx+0x0],ah
   14002a0f0:	je     0x14002a0f2
   14002a0f2:	add    BYTE PTR gs:[rax+rax*1+0x20],ah
   14002a0f7:	add    BYTE PTR [rax+0x0],ch
   14002a0fa:	add    BYTE PTR gs:[rcx+0x0],ah
   14002a0fe:	jo     0x14002a100
   14002a100:	and    BYTE PTR [rax],al
   14002a102:	add    BYTE PTR gs:[rdx+0x0],dh
   14002a106:	jb     0x14002a108
   14002a108:	outs   dx,DWORD PTR ds:[rsi]
   14002a109:	add    BYTE PTR [rdx+0x0],dh
   14002a10c:	or     eax,0xa00
	...
   14002a11d:	add    BYTE PTR [rax],al
   14002a11f:	add    BYTE PTR [rdx+0x0],dl
   14002a122:	add    BYTE PTR ss:[rax],dh
   14002a125:	add    BYTE PTR [rcx],dh
   14002a127:	add    BYTE PTR [rcx],bh
   14002a129:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d02ab2f
   14002a12f:	add    BYTE PTR [rax],ah
   14002a131:	add    BYTE PTR [rbp+0x0],dh
   14002a134:	outs   dx,BYTE PTR ds:[rsi]
   14002a135:	add    BYTE PTR [rcx+0x0],ah
   14002a138:	(bad)  
   14002a139:	add    BYTE PTR [rax+rax*1+0x65],ch
   14002a13d:	add    BYTE PTR [rax],ah
   14002a13f:	add    BYTE PTR [rax+rax*1+0x6f],dh
   14002a143:	add    BYTE PTR [rax],ah
   14002a145:	add    BYTE PTR [rdi+0x0],ch
   14002a148:	jo     0x14002a14a
   14002a14a:	add    BYTE PTR gs:[rsi+0x0],ch
   14002a14e:	and    BYTE PTR [rax],al
   14002a150:	movsxd eax,DWORD PTR [rax]
   14002a152:	outs   dx,DWORD PTR ds:[rsi]
   14002a153:	add    BYTE PTR [rsi+0x0],ch
   14002a156:	jae    0x14002a158
   14002a158:	outs   dx,DWORD PTR ds:[rsi]
   14002a159:	add    BYTE PTR [rax+rax*1+0x65],ch
   14002a15d:	add    BYTE PTR [rax],ah
   14002a15f:	add    BYTE PTR [rax+rax*1+0x65],ah
   14002a163:	add    BYTE PTR [rsi+0x0],dh
   14002a166:	imul   eax,DWORD PTR [rax],0x650063
   14002a16c:	or     eax,0xa00
	...
   14002a17d:	add    BYTE PTR [rax],al
   14002a17f:	add    BYTE PTR [rdx+0x0],dl
   14002a182:	add    BYTE PTR ss:[rax],dh
   14002a185:	add    BYTE PTR [rdx],dh
   14002a187:	add    BYTE PTR [rax+rax*1],dh
   14002a18a:	or     eax,0x2d000a00
   14002a18f:	add    BYTE PTR [rax],ah
   14002a191:	add    BYTE PTR [rsi+0x0],ch
   14002a194:	outs   dx,DWORD PTR ds:[rsi]
   14002a195:	add    BYTE PTR [rax+rax*1+0x20],dh
   14002a199:	add    BYTE PTR [rbp+0x0],ah
   14002a19c:	outs   dx,BYTE PTR ds:[rsi]
   14002a19d:	add    BYTE PTR [rdi+0x0],ch
   14002a1a0:	jne    0x14002a1a2
   14002a1a2:	add    BYTE PTR [eax+0x0],ch
   14002a1a6:	and    BYTE PTR [rax],al
   14002a1a8:	jae    0x14002a1aa
   14002a1aa:	jo     0x14002a1ac
   14002a1ac:	(bad)  
   14002a1ad:	add    BYTE PTR [rbx+0x0],ah
   14002a1b0:	add    BYTE PTR gs:[rax],ah
   14002a1b3:	add    BYTE PTR [rsi+0x0],ah
   14002a1b6:	outs   dx,DWORD PTR ds:[rsi]
   14002a1b7:	add    BYTE PTR [rdx+0x0],dh
   14002a1ba:	and    BYTE PTR [rax],al
   14002a1bc:	pop    rdi
   14002a1bd:	add    BYTE PTR [rdi+0x0],ch
   14002a1c0:	outs   dx,BYTE PTR ds:[rsi]
   14002a1c1:	add    BYTE PTR [rbp+0x0],ah
   14002a1c4:	js     0x14002a1c6
   14002a1c6:	imul   eax,DWORD PTR [rax],0x2f0074
   14002a1cc:	(bad)  
   14002a1cd:	add    BYTE PTR [rax+rax*1+0x65],dh
   14002a1d1:	add    BYTE PTR [rax+0x0],bh
   14002a1d4:	imul   eax,DWORD PTR [rax],0x200074
   14002a1da:	je     0x14002a1dc
   14002a1dc:	(bad)  
   14002a1dd:	add    BYTE PTR [rdx+0x0],ah
   14002a1e0:	ins    BYTE PTR es:[rdi],dx
   14002a1e1:	add    BYTE PTR [rbp+0x0],ah
   14002a1e4:	or     eax,0xa00
   14002a1e9:	add    BYTE PTR [rax],al
   14002a1eb:	add    BYTE PTR [rax],al
   14002a1ed:	add    BYTE PTR [rax],al
   14002a1ef:	add    BYTE PTR [rdx+0x0],dl
   14002a1f2:	add    BYTE PTR ss:[rax],dh
   14002a1f5:	add    BYTE PTR [rdx],dh
   14002a1f7:	add    BYTE PTR [rip+0xa000d00],dh        # 0x14a02aefd
   14002a1fd:	add    BYTE PTR [rip+0x70002000],ch        # 0x1b002c203
   14002a203:	add    BYTE PTR [rbp+0x0],dh
   14002a206:	jb     0x14002a208
   14002a208:	add    BYTE PTR gs:[rax],ah
   14002a20b:	add    BYTE PTR [rsi+0x0],dh
   14002a20e:	imul   eax,DWORD PTR [rax],0x740072
   14002a214:	jne    0x14002a216
   14002a216:	(bad)  
   14002a217:	add    BYTE PTR [rax+rax*1+0x20],ch
   14002a21b:	add    BYTE PTR [rsi+0x0],ah
   14002a21e:	jne    0x14002a220
   14002a220:	outs   dx,BYTE PTR ds:[rsi]
   14002a221:	add    BYTE PTR [rbx+0x0],ah
   14002a224:	je     0x14002a226
   14002a226:	imul   eax,DWORD PTR [rax],0x6e006f
   14002a22c:	and    BYTE PTR [rax],al
   14002a22e:	movsxd eax,DWORD PTR [rax]
   14002a230:	(bad)  
   14002a231:	add    BYTE PTR [rax+rax*1+0x6c],ch
   14002a235:	add    BYTE PTR [rip+0xa00],cl        # 0x14002ac3b
   14002a23b:	add    BYTE PTR [rax],al
   14002a23d:	add    BYTE PTR [rax],al
   14002a23f:	add    BYTE PTR [rdx+0x0],dl
   14002a242:	add    BYTE PTR ss:[rax],dh
   14002a245:	add    BYTE PTR [rdx],dh
   14002a247:	add    BYTE PTR [rsi],dh
   14002a249:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d02ac4f
   14002a24f:	add    BYTE PTR [rax],ah
   14002a251:	add    BYTE PTR [rsi+0x0],ch
   14002a254:	outs   dx,DWORD PTR ds:[rsi]
   14002a255:	add    BYTE PTR [rax+rax*1+0x20],dh
   14002a259:	add    BYTE PTR [rbp+0x0],ah
   14002a25c:	outs   dx,BYTE PTR ds:[rsi]
   14002a25d:	add    BYTE PTR [rdi+0x0],ch
   14002a260:	jne    0x14002a262
   14002a262:	add    BYTE PTR [eax+0x0],ch
   14002a266:	and    BYTE PTR [rax],al
   14002a268:	jae    0x14002a26a
   14002a26a:	jo     0x14002a26c
   14002a26c:	(bad)  
   14002a26d:	add    BYTE PTR [rbx+0x0],ah
   14002a270:	add    BYTE PTR gs:[rax],ah
   14002a273:	add    BYTE PTR [rsi+0x0],ah
   14002a276:	outs   dx,DWORD PTR ds:[rsi]
   14002a277:	add    BYTE PTR [rdx+0x0],dh
   14002a27a:	and    BYTE PTR [rax],al
   14002a27c:	jae    0x14002a27e
   14002a27e:	je     0x14002a280
   14002a280:	add    BYTE PTR fs:[rcx+0x0],ch
   14002a284:	outs   dx,DWORD PTR ds:[rsi]
   14002a285:	add    BYTE PTR [rax],ah
   14002a287:	add    BYTE PTR [rcx+0x0],ch
   14002a28a:	outs   dx,BYTE PTR ds:[rsi]
   14002a28b:	add    BYTE PTR [rcx+0x0],ch
   14002a28e:	je     0x14002a290
   14002a290:	imul   eax,DWORD PTR [rax],0x6c0061
   14002a296:	imul   eax,DWORD PTR [rax],0x61007a
   14002a29c:	je     0x14002a29e
   14002a29e:	imul   eax,DWORD PTR [rax],0x6e006f
   14002a2a4:	or     eax,0xa00
   14002a2a9:	add    BYTE PTR [rax],al
   14002a2ab:	add    BYTE PTR [rax],al
   14002a2ad:	add    BYTE PTR [rax],al
   14002a2af:	add    BYTE PTR [rdx+0x0],dl
   14002a2b2:	add    BYTE PTR ss:[rax],dh
   14002a2b5:	add    BYTE PTR [rdx],dh
   14002a2b7:	add    BYTE PTR [rdi],dh
   14002a2b9:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d02acbf
   14002a2bf:	add    BYTE PTR [rax],ah
   14002a2c1:	add    BYTE PTR [rsi+0x0],ch
   14002a2c4:	outs   dx,DWORD PTR ds:[rsi]
   14002a2c5:	add    BYTE PTR [rax+rax*1+0x20],dh
   14002a2c9:	add    BYTE PTR [rbp+0x0],ah
   14002a2cc:	outs   dx,BYTE PTR ds:[rsi]
   14002a2cd:	add    BYTE PTR [rdi+0x0],ch
   14002a2d0:	jne    0x14002a2d2
   14002a2d2:	add    BYTE PTR [eax+0x0],ch
   14002a2d6:	and    BYTE PTR [rax],al
   14002a2d8:	jae    0x14002a2da
   14002a2da:	jo     0x14002a2dc
   14002a2dc:	(bad)  
   14002a2dd:	add    BYTE PTR [rbx+0x0],ah
   14002a2e0:	add    BYTE PTR gs:[rax],ah
   14002a2e3:	add    BYTE PTR [rsi+0x0],ah
   14002a2e6:	outs   dx,DWORD PTR ds:[rsi]
   14002a2e7:	add    BYTE PTR [rdx+0x0],dh
   14002a2ea:	and    BYTE PTR [rax],al
   14002a2ec:	ins    BYTE PTR es:[rdi],dx
   14002a2ed:	add    BYTE PTR [rdi+0x0],ch
   14002a2f0:	ja     0x14002a2f2
   14002a2f2:	imul   eax,DWORD PTR [rax],0x20006f
   14002a2f8:	imul   eax,DWORD PTR [rax],0x69006e
   14002a2fe:	je     0x14002a300
   14002a300:	imul   eax,DWORD PTR [rax],0x6c0061
   14002a306:	imul   eax,DWORD PTR [rax],0x61007a
   14002a30c:	je     0x14002a30e
   14002a30e:	imul   eax,DWORD PTR [rax],0x6e006f
   14002a314:	or     eax,0xa00
   14002a319:	add    BYTE PTR [rax],al
   14002a31b:	add    BYTE PTR [rax],al
   14002a31d:	add    BYTE PTR [rax],al
   14002a31f:	add    BYTE PTR [rdx+0x0],dl
   14002a322:	add    BYTE PTR ss:[rax],dh
   14002a325:	add    BYTE PTR [rdx],dh
   14002a327:	add    BYTE PTR [rax],bh
   14002a329:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d02ad2f
   14002a32f:	add    BYTE PTR [rax],ah
   14002a331:	add    BYTE PTR [rbp+0x0],dh
   14002a334:	outs   dx,BYTE PTR ds:[rsi]
   14002a335:	add    BYTE PTR [rcx+0x0],ah
   14002a338:	(bad)  
   14002a339:	add    BYTE PTR [rax+rax*1+0x65],ch
   14002a33d:	add    BYTE PTR [rax],ah
   14002a33f:	add    BYTE PTR [rax+rax*1+0x6f],dh
   14002a343:	add    BYTE PTR [rax],ah
   14002a345:	add    BYTE PTR [rcx+0x0],ch
   14002a348:	outs   dx,BYTE PTR ds:[rsi]
   14002a349:	add    BYTE PTR [rcx+0x0],ch
   14002a34c:	je     0x14002a34e
   14002a34e:	imul   eax,DWORD PTR [rax],0x6c0061
   14002a354:	imul   eax,DWORD PTR [rax],0x65007a
   14002a35a:	and    BYTE PTR [rax],al
   14002a35c:	push   0x61006500
   14002a361:	add    BYTE PTR [rax+0x0],dh
   14002a364:	or     eax,0xa00
   14002a369:	add    BYTE PTR [rax],al
   14002a36b:	add    BYTE PTR [rax],al
   14002a36d:	add    BYTE PTR [rax],al
   14002a36f:	add    BYTE PTR [rdx+0x0],dl
   14002a372:	add    BYTE PTR ss:[rax],dh
   14002a375:	add    BYTE PTR [rbx],dh
   14002a377:	add    BYTE PTR [rax],dh
   14002a379:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d02ad7f
   14002a37f:	add    BYTE PTR [rax],ah
   14002a381:	add    BYTE PTR [rbx+0x0],al
   14002a384:	push   rdx
   14002a385:	add    BYTE PTR [rax+rax*1+0x20],dl
   14002a389:	add    BYTE PTR [rsi+0x0],ch
   14002a38c:	outs   dx,DWORD PTR ds:[rsi]
   14002a38d:	add    BYTE PTR [rax+rax*1+0x20],dh
   14002a391:	add    BYTE PTR [rcx+0x0],ch
   14002a394:	outs   dx,BYTE PTR ds:[rsi]
   14002a395:	add    BYTE PTR [rcx+0x0],ch
   14002a398:	je     0x14002a39a
   14002a39a:	imul   eax,DWORD PTR [rax],0x6c0061
   14002a3a0:	imul   eax,DWORD PTR [rax],0x65007a
   14002a3a6:	add    BYTE PTR fs:[rip+0xa00],cl        # 0x14002adad
   14002a3ad:	add    BYTE PTR [rax],al
   14002a3af:	add    BYTE PTR [rdx+0x0],dl
   14002a3b2:	add    BYTE PTR ss:[rax],dh
   14002a3b5:	add    BYTE PTR [rbx],dh
   14002a3b7:	add    BYTE PTR [rcx],dh
   14002a3b9:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d02adbf
   14002a3bf:	add    BYTE PTR [rax],ah
   14002a3c1:	add    BYTE PTR [rcx+0x0],al
   14002a3c4:	je     0x14002a3c6
   14002a3c6:	je     0x14002a3c8
   14002a3c8:	add    BYTE PTR gs:[rbp+0x0],ch
   14002a3cc:	jo     0x14002a3ce
   14002a3ce:	je     0x14002a3d0
   14002a3d0:	and    BYTE PTR [rax],al
   14002a3d2:	je     0x14002a3d4
   14002a3d4:	outs   dx,DWORD PTR ds:[rsi]
   14002a3d5:	add    BYTE PTR [rax],ah
   14002a3d7:	add    BYTE PTR [rcx+0x0],ch
   14002a3da:	outs   dx,BYTE PTR ds:[rsi]
   14002a3db:	add    BYTE PTR [rcx+0x0],ch
   14002a3de:	je     0x14002a3e0
   14002a3e0:	imul   eax,DWORD PTR [rax],0x6c0061
   14002a3e6:	imul   eax,DWORD PTR [rax],0x65007a
   14002a3ec:	and    BYTE PTR [rax],al
   14002a3ee:	je     0x14002a3f0
   14002a3f0:	push   0x20006500
   14002a3f5:	add    BYTE PTR [rbx+0x0],al
   14002a3f8:	push   rdx
   14002a3f9:	add    BYTE PTR [rax+rax*1+0x20],dl
   14002a3fd:	add    BYTE PTR [rbp+0x0],ch
   14002a400:	outs   dx,DWORD PTR ds:[rsi]
   14002a401:	add    BYTE PTR [rdx+0x0],dh
   14002a404:	add    BYTE PTR gs:[rax],ah
   14002a407:	add    BYTE PTR [rax+rax*1+0x68],dh
   14002a40b:	add    BYTE PTR [rcx+0x0],ah
   14002a40e:	outs   dx,BYTE PTR ds:[rsi]
   14002a40f:	add    BYTE PTR [rax],ah
   14002a411:	add    BYTE PTR [rdi+0x0],ch
   14002a414:	outs   dx,BYTE PTR ds:[rsi]
   14002a415:	add    BYTE PTR [rbx+0x0],ah
   14002a418:	add    BYTE PTR gs:[rsi],ch
   14002a41b:	add    BYTE PTR [rdx],cl
   14002a41d:	add    BYTE PTR [rax+rax*1+0x68],dl
   14002a421:	add    BYTE PTR [rcx+0x0],ch
   14002a424:	jae    0x14002a426
   14002a426:	and    BYTE PTR [rax],al
   14002a428:	imul   eax,DWORD PTR [rax],0x64006e
   14002a42e:	imul   eax,DWORD PTR [rax],0x610063
   14002a434:	je     0x14002a436
   14002a436:	add    BYTE PTR gs:[rbx+0x0],dh
   14002a43a:	and    BYTE PTR [rax],al
   14002a43c:	(bad)  
   14002a43d:	add    BYTE PTR [rax],ah
   14002a43f:	add    BYTE PTR [rdx+0x0],ah
   14002a442:	jne    0x14002a444
   14002a444:	add    BYTE PTR [eax],ah
   14002a447:	add    BYTE PTR [rcx+0x0],ch
   14002a44a:	outs   dx,BYTE PTR ds:[rsi]
   14002a44b:	add    BYTE PTR [rax],ah
   14002a44d:	add    BYTE PTR [rcx+0x0],bh
   14002a450:	outs   dx,DWORD PTR ds:[rsi]
   14002a451:	add    BYTE PTR [rbp+0x0],dh
   14002a454:	jb     0x14002a456
   14002a456:	and    BYTE PTR [rax],al
   14002a458:	(bad)  
   14002a459:	add    BYTE PTR [rax+0x0],dh
   14002a45c:	jo     0x14002a45e
   14002a45e:	ins    BYTE PTR es:[rdi],dx
   14002a45f:	add    BYTE PTR [rcx+0x0],ch
   14002a462:	movsxd eax,DWORD PTR [rax]
   14002a464:	(bad)  
   14002a465:	add    BYTE PTR [rax+rax*1+0x69],dh
   14002a469:	add    BYTE PTR [rdi+0x0],ch
   14002a46c:	outs   dx,BYTE PTR ds:[rsi]
   14002a46d:	add    BYTE PTR [rsi],ch
   14002a46f:	add    BYTE PTR [rip+0xa00],cl        # 0x14002ae75
	...
   14002a47d:	add    BYTE PTR [rax],al
   14002a47f:	add    BYTE PTR [rdx+0x0],dl
   14002a482:	add    BYTE PTR ss:[rax],dh
   14002a485:	add    BYTE PTR [rbx],dh
   14002a487:	add    BYTE PTR [rdx],dh
   14002a489:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d02ae8f
   14002a48f:	add    BYTE PTR [rax],ah
   14002a491:	add    BYTE PTR [rsi+0x0],ch
   14002a494:	outs   dx,DWORD PTR ds:[rsi]
   14002a495:	add    BYTE PTR [rax+rax*1+0x20],dh
   14002a499:	add    BYTE PTR [rbp+0x0],ah
   14002a49c:	outs   dx,BYTE PTR ds:[rsi]
   14002a49d:	add    BYTE PTR [rdi+0x0],ch
   14002a4a0:	jne    0x14002a4a2
   14002a4a2:	add    BYTE PTR [eax+0x0],ch
   14002a4a6:	and    BYTE PTR [rax],al
   14002a4a8:	jae    0x14002a4aa
   14002a4aa:	jo     0x14002a4ac
   14002a4ac:	(bad)  
   14002a4ad:	add    BYTE PTR [rbx+0x0],ah
   14002a4b0:	add    BYTE PTR gs:[rax],ah
   14002a4b3:	add    BYTE PTR [rsi+0x0],ah
   14002a4b6:	outs   dx,DWORD PTR ds:[rsi]
   14002a4b7:	add    BYTE PTR [rdx+0x0],dh
   14002a4ba:	and    BYTE PTR [rax],al
   14002a4bc:	ins    BYTE PTR es:[rdi],dx
   14002a4bd:	add    BYTE PTR [rdi+0x0],ch
   14002a4c0:	movsxd eax,DWORD PTR [rax]
   14002a4c2:	(bad)  
   14002a4c3:	add    BYTE PTR [rax+rax*1+0x65],ch
   14002a4c7:	add    BYTE PTR [rax],ah
   14002a4c9:	add    BYTE PTR [rcx+0x0],ch
   14002a4cc:	outs   dx,BYTE PTR ds:[rsi]
   14002a4cd:	add    BYTE PTR [rsi+0x0],ah
   14002a4d0:	outs   dx,DWORD PTR ds:[rsi]
   14002a4d1:	add    BYTE PTR [rdx+0x0],dh
   14002a4d4:	ins    DWORD PTR es:[rdi],dx
   14002a4d5:	add    BYTE PTR [rcx+0x0],ah
   14002a4d8:	je     0x14002a4da
   14002a4da:	imul   eax,DWORD PTR [rax],0x6e006f
   14002a4e0:	or     eax,0xa00
	...
   14002a4ed:	add    BYTE PTR [rax],al
   14002a4ef:	add    BYTE PTR [rdx+0x0],dl
   14002a4f2:	add    BYTE PTR ss:[rax],dh
   14002a4f5:	add    BYTE PTR [rbx],dh
   14002a4f7:	add    BYTE PTR [rbx],dh
   14002a4f9:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d02aeff
   14002a4ff:	add    BYTE PTR [rax],ah
   14002a501:	add    BYTE PTR [rcx+0x0],al
   14002a504:	je     0x14002a506
   14002a506:	je     0x14002a508
   14002a508:	add    BYTE PTR gs:[rbp+0x0],ch
   14002a50c:	jo     0x14002a50e
   14002a50e:	je     0x14002a510
   14002a510:	and    BYTE PTR [rax],al
   14002a512:	je     0x14002a514
   14002a514:	outs   dx,DWORD PTR ds:[rsi]
   14002a515:	add    BYTE PTR [rax],ah
   14002a517:	add    BYTE PTR [rbp+0x0],dh
   14002a51a:	jae    0x14002a51c
   14002a51c:	add    BYTE PTR gs:[rax],ah
   14002a51f:	add    BYTE PTR [rbp+0x0],cl
   14002a522:	push   rbx
   14002a523:	add    BYTE PTR [rcx+0x0],cl
   14002a526:	rex.WR add BYTE PTR [rax],r12b
   14002a529:	add    BYTE PTR [rbx+0x0],ah
   14002a52c:	outs   dx,DWORD PTR ds:[rsi]
   14002a52d:	add    BYTE PTR [rax+rax*1+0x65],ah
   14002a531:	add    BYTE PTR [rax],ah
   14002a533:	add    BYTE PTR [rsi+0x0],ah
   14002a536:	jb     0x14002a538
   14002a538:	outs   dx,DWORD PTR ds:[rsi]
   14002a539:	add    BYTE PTR [rbp+0x0],ch
   14002a53c:	and    BYTE PTR [rax],al
   14002a53e:	je     0x14002a540
   14002a540:	push   0x73006900
   14002a545:	add    BYTE PTR [rax],ah
   14002a547:	add    BYTE PTR [rcx+0x0],ah
   14002a54a:	jae    0x14002a54c
   14002a54c:	jae    0x14002a54e
   14002a54e:	add    BYTE PTR gs:[rbp+0x0],ch
   14002a552:	(bad)  
   14002a553:	add    BYTE PTR [rax+rax*1+0x79],ch
   14002a557:	add    BYTE PTR [rax],ah
   14002a559:	add    BYTE PTR [rax+rax*1+0x75],ah
   14002a55d:	add    BYTE PTR [rdx+0x0],dh
   14002a560:	imul   eax,DWORD PTR [rax],0x67006e
   14002a566:	and    BYTE PTR [rax],al
   14002a568:	outs   dx,BYTE PTR ds:[rsi]
   14002a569:	add    BYTE PTR [rcx+0x0],ah
   14002a56c:	je     0x14002a56e
   14002a56e:	imul   eax,DWORD PTR [rax],0x650076
   14002a574:	and    BYTE PTR [rax],al
   14002a576:	movsxd eax,DWORD PTR [rax]
   14002a578:	outs   dx,DWORD PTR ds:[rsi]
   14002a579:	add    BYTE PTR [rax+rax*1+0x65],ah
   14002a57d:	add    BYTE PTR [rax],ah
   14002a57f:	add    BYTE PTR [rcx+0x0],ch
   14002a582:	outs   dx,BYTE PTR ds:[rsi]
   14002a583:	add    BYTE PTR [rcx+0x0],ch
   14002a586:	je     0x14002a588
   14002a588:	imul   eax,DWORD PTR [rax],0x6c0061
   14002a58e:	imul   eax,DWORD PTR [rax],0x61007a
   14002a594:	je     0x14002a596
   14002a596:	imul   eax,DWORD PTR [rax],0x6e006f
   14002a59c:	or     al,BYTE PTR [rax]
   14002a59e:	push   rsp
   14002a59f:	add    BYTE PTR [rax+0x0],ch
   14002a5a2:	imul   eax,DWORD PTR [rax],0x200073
   14002a5a8:	imul   eax,DWORD PTR [rax],0x64006e
   14002a5ae:	imul   eax,DWORD PTR [rax],0x610063
   14002a5b4:	je     0x14002a5b6
   14002a5b6:	add    BYTE PTR gs:[rbx+0x0],dh
   14002a5ba:	and    BYTE PTR [rax],al
   14002a5bc:	(bad)  
   14002a5bd:	add    BYTE PTR [rax],ah
   14002a5bf:	add    BYTE PTR [rdx+0x0],ah
   14002a5c2:	jne    0x14002a5c4
   14002a5c4:	add    BYTE PTR [eax],ah
   14002a5c7:	add    BYTE PTR [rcx+0x0],ch
   14002a5ca:	outs   dx,BYTE PTR ds:[rsi]
   14002a5cb:	add    BYTE PTR [rax],ah
   14002a5cd:	add    BYTE PTR [rcx+0x0],bh
   14002a5d0:	outs   dx,DWORD PTR ds:[rsi]
   14002a5d1:	add    BYTE PTR [rbp+0x0],dh
   14002a5d4:	jb     0x14002a5d6
   14002a5d6:	and    BYTE PTR [rax],al
   14002a5d8:	(bad)  
   14002a5d9:	add    BYTE PTR [rax+0x0],dh
   14002a5dc:	jo     0x14002a5de
   14002a5de:	ins    BYTE PTR es:[rdi],dx
   14002a5df:	add    BYTE PTR [rcx+0x0],ch
   14002a5e2:	movsxd eax,DWORD PTR [rax]
   14002a5e4:	(bad)  
   14002a5e5:	add    BYTE PTR [rax+rax*1+0x69],dh
   14002a5e9:	add    BYTE PTR [rdi+0x0],ch
   14002a5ec:	outs   dx,BYTE PTR ds:[rsi]
   14002a5ed:	add    BYTE PTR [rsi],ch
   14002a5ef:	add    BYTE PTR [rax],ah
   14002a5f1:	add    BYTE PTR [rcx+0x0],cl
   14002a5f4:	je     0x14002a5f6
   14002a5f6:	and    BYTE PTR [rax],al
   14002a5f8:	imul   eax,DWORD PTR [rax],0x200073
   14002a5fe:	ins    DWORD PTR es:[rdi],dx
   14002a5ff:	add    BYTE PTR [rdi+0x0],ch
   14002a602:	jae    0x14002a604
   14002a604:	je     0x14002a606
   14002a606:	and    BYTE PTR [rax],al
   14002a608:	ins    BYTE PTR es:[rdi],dx
   14002a609:	add    BYTE PTR [rcx+0x0],ch
   14002a60c:	imul   eax,DWORD PTR [rax],0x65
   14002a60f:	add    BYTE PTR [rax+rax*1+0x79],ch
   14002a613:	add    BYTE PTR [rax],ah
   14002a615:	add    BYTE PTR [rax+rax*1+0x68],dh
   14002a619:	add    BYTE PTR [rbp+0x0],ah
   14002a61c:	and    BYTE PTR [rax],al
   14002a61e:	jb     0x14002a620
   14002a620:	add    BYTE PTR gs:[rbx+0x0],dh
   14002a624:	jne    0x14002a626
   14002a626:	ins    BYTE PTR es:[rdi],dx
   14002a627:	add    BYTE PTR [rax+rax*1+0x20],dh
   14002a62b:	add    BYTE PTR [rdi+0x0],ch
   14002a62e:	data16 add BYTE PTR [rax],ah
   14002a631:	add    BYTE PTR [rbx+0x0],ah
   14002a634:	(bad)  
   14002a635:	add    BYTE PTR [rax+rax*1+0x6c],ch
   14002a639:	add    BYTE PTR [rcx+0x0],ch
   14002a63c:	outs   dx,BYTE PTR ds:[rsi]
   14002a63d:	add    BYTE PTR [rdi+0x0],ah
   14002a640:	and    BYTE PTR [rax],al
   14002a642:	(bad)  
   14002a643:	add    BYTE PTR [rsi+0x0],ch
   14002a646:	and    BYTE PTR [rax],al
   14002a648:	rex.WRB add BYTE PTR [r11+0x0],r10b
   14002a64c:	rex.WB add BYTE PTR [r8+rax*1+0x2d],cl
   14002a651:	add    BYTE PTR [rbx+0x0],ah
   14002a654:	outs   dx,DWORD PTR ds:[rsi]
   14002a655:	add    BYTE PTR [rbp+0x0],ch
   14002a658:	jo     0x14002a65a
   14002a65a:	imul   eax,DWORD PTR [rax],0x65006c
   14002a660:	add    BYTE PTR fs:[rax],ah
   14002a663:	add    BYTE PTR [rax],ch
   14002a665:	add    BYTE PTR [rdi],ch
   14002a667:	add    BYTE PTR [rbx+0x0],ah
   14002a66a:	ins    BYTE PTR es:[rdi],dx
   14002a66b:	add    BYTE PTR [rdx+0x0],dh
   14002a66e:	sub    DWORD PTR [rax],eax
   14002a670:	and    BYTE PTR [rax],al
   14002a672:	data16 add BYTE PTR [rbp+0x0],dh
   14002a676:	outs   dx,BYTE PTR ds:[rsi]
   14002a677:	add    BYTE PTR [rbx+0x0],ah
   14002a67a:	je     0x14002a67c
   14002a67c:	imul   eax,DWORD PTR [rax],0x6e006f
   14002a682:	and    BYTE PTR [rax],al
   14002a684:	data16 add BYTE PTR [rdx+0x0],dh
   14002a688:	outs   dx,DWORD PTR ds:[rsi]
   14002a689:	add    BYTE PTR [rbp+0x0],ch
   14002a68c:	and    BYTE PTR [rax],al
   14002a68e:	(bad)  
   14002a68f:	add    BYTE PTR [rax],ah
   14002a691:	add    BYTE PTR [rsi+0x0],ch
   14002a694:	(bad)  
   14002a695:	add    BYTE PTR [rax+rax*1+0x69],dh
   14002a699:	add    BYTE PTR [rsi+0x0],dh
   14002a69c:	add    BYTE PTR gs:[rax],ah
   14002a69f:	add    BYTE PTR [rbx+0x0],ah
   14002a6a2:	outs   dx,DWORD PTR ds:[rsi]
   14002a6a3:	add    BYTE PTR [rsi+0x0],ch
   14002a6a6:	jae    0x14002a6a8
   14002a6a8:	je     0x14002a6aa
   14002a6aa:	jb     0x14002a6ac
   14002a6ac:	jne    0x14002a6ae
   14002a6ae:	movsxd eax,DWORD PTR [rax]
   14002a6b0:	je     0x14002a6b2
   14002a6b2:	outs   dx,DWORD PTR ds:[rsi]
   14002a6b3:	add    BYTE PTR [rdx+0x0],dh
   14002a6b6:	and    BYTE PTR [rax],al
   14002a6b8:	outs   dx,DWORD PTR ds:[rsi]
   14002a6b9:	add    BYTE PTR [rdx+0x0],dh
   14002a6bc:	and    BYTE PTR [rax],al
   14002a6be:	data16 add BYTE PTR [rdx+0x0],dh
   14002a6c2:	outs   dx,DWORD PTR ds:[rsi]
   14002a6c3:	add    BYTE PTR [rbp+0x0],ch
   14002a6c6:	and    BYTE PTR [rax],al
   14002a6c8:	add    BYTE PTR [rax+rax*1+0x6c],r13b
   14002a6cd:	add    BYTE PTR [rbp+0x0],cl
   14002a6d0:	(bad)  
   14002a6d1:	add    BYTE PTR [rcx+0x0],ch
   14002a6d4:	outs   dx,BYTE PTR ds:[rsi]
   14002a6d5:	add    BYTE PTR [rsi],ch
   14002a6d7:	add    BYTE PTR [rip+0xa00],cl        # 0x14002b0dd
   14002a6dd:	add    BYTE PTR [rax],al
   14002a6df:	add    BYTE PTR [rdx+0x0],dl
   14002a6e2:	add    BYTE PTR ss:[rax],dh
   14002a6e5:	add    BYTE PTR [rbx],dh
   14002a6e7:	add    BYTE PTR [rax+rax*1],dh
   14002a6ea:	or     eax,0x2d000a00
   14002a6ef:	add    BYTE PTR [rax],ah
   14002a6f1:	add    BYTE PTR [rcx+0x0],ch
   14002a6f4:	outs   dx,BYTE PTR ds:[rsi]
   14002a6f5:	add    BYTE PTR [rbx+0x0],ah
   14002a6f8:	outs   dx,DWORD PTR ds:[rsi]
   14002a6f9:	add    BYTE PTR [rsi+0x0],ch
   14002a6fc:	jae    0x14002a6fe
   14002a6fe:	imul   eax,DWORD PTR [rax],0x740073
   14002a704:	add    BYTE PTR gs:[rsi+0x0],ch
   14002a708:	je     0x14002a70a
   14002a70a:	and    BYTE PTR [rax],al
   14002a70c:	outs   dx,DWORD PTR ds:[rsi]
   14002a70d:	add    BYTE PTR [rsi+0x0],ch
   14002a710:	add    BYTE PTR gs:[rax+0x0],bh
   14002a714:	imul   eax,DWORD PTR [rax],0x200074
   14002a71a:	(bad)  
   14002a71b:	add    BYTE PTR [rbp+0x0],ah
   14002a71e:	add    BYTE PTR [ecx+0x0],ch
   14002a722:	outs   dx,BYTE PTR ds:[rsi]
   14002a723:	add    BYTE PTR [rip+0x6e006500],ch        # 0x1ae030c29
   14002a729:	add    BYTE PTR [rax+rax*1+0x20],ah
   14002a72d:	add    BYTE PTR [rsi+0x0],dh
   14002a730:	(bad)  
   14002a731:	add    BYTE PTR [rdx+0x0],dh
   14002a734:	imul   eax,DWORD PTR [rax],0x620061
   14002a73a:	ins    BYTE PTR es:[rdi],dx
   14002a73b:	add    BYTE PTR [rbp+0x0],ah
   14002a73e:	jae    0x14002a740
   14002a740:	or     eax,0xa00
   14002a745:	add    BYTE PTR [rax],al
   14002a747:	add    BYTE PTR [rax+rax*1+0x4f],al
   14002a74b:	add    BYTE PTR [rbp+0x0],cl
   14002a74e:	add    BYTE PTR [r9+0x0],cl
   14002a752:	rex.WRX add BYTE PTR [rax],r12b
   14002a755:	add    BYTE PTR [rbp+0x0],ah
   14002a758:	jb     0x14002a75a
   14002a75a:	jb     0x14002a75c
   14002a75c:	outs   dx,DWORD PTR ds:[rsi]
   14002a75d:	add    BYTE PTR [rdx+0x0],dh
   14002a760:	or     eax,0xa00
   14002a765:	add    BYTE PTR [rax],al
   14002a767:	add    BYTE PTR [rbx+0x0],dl
   14002a76a:	rex.WB add BYTE PTR [r14+0x0],cl
   14002a76e:	rex.RXB add BYTE PTR [r8],r12b
   14002a771:	add    BYTE PTR [rbp+0x0],ah
   14002a774:	jb     0x14002a776
   14002a776:	jb     0x14002a778
   14002a778:	outs   dx,DWORD PTR ds:[rsi]
   14002a779:	add    BYTE PTR [rdx+0x0],dh
   14002a77c:	or     eax,0xa00
   14002a781:	add    BYTE PTR [rax],al
   14002a783:	add    BYTE PTR [rax],al
   14002a785:	add    BYTE PTR [rax],al
   14002a787:	add    BYTE PTR [rax+rax*1+0x4c],dl
   14002a78b:	add    BYTE PTR [rdi+0x0],cl
   14002a78e:	push   rbx
   14002a78f:	add    BYTE PTR [rbx+0x0],dl
   14002a792:	and    BYTE PTR [rax],al
   14002a794:	add    BYTE PTR gs:[rdx+0x0],dh
   14002a798:	jb     0x14002a79a
   14002a79a:	outs   dx,DWORD PTR ds:[rsi]
   14002a79b:	add    BYTE PTR [rdx+0x0],dh
   14002a79e:	or     eax,0xa00
   14002a7a3:	add    BYTE PTR [rip+0xa00],cl        # 0x14002b1a9
   14002a7a9:	add    BYTE PTR [rax],al
   14002a7ab:	add    BYTE PTR [rax],al
   14002a7ad:	add    BYTE PTR [rax],al
   14002a7af:	add    BYTE PTR [rdx+0x0],dh
   14002a7b2:	jne    0x14002a7b4
   14002a7b4:	outs   dx,BYTE PTR ds:[rsi]
   14002a7b5:	add    BYTE PTR [rax+rax*1+0x69],dh
   14002a7b9:	add    BYTE PTR [rbp+0x0],ch
   14002a7bc:	add    BYTE PTR gs:[rax],ah
   14002a7bf:	add    BYTE PTR [rbp+0x0],ah
   14002a7c2:	jb     0x14002a7c4
   14002a7c4:	jb     0x14002a7c6
   14002a7c6:	outs   dx,DWORD PTR ds:[rsi]
   14002a7c7:	add    BYTE PTR [rdx+0x0],dh
   14002a7ca:	and    BYTE PTR [rax],al
   14002a7cc:	add    BYTE PTR [rax],al
   14002a7ce:	add    BYTE PTR [rax],al
   14002a7d0:	push   rdx
   14002a7d1:	add    BYTE PTR [rbp+0x0],dh
   14002a7d4:	outs   dx,BYTE PTR ds:[rsi]
   14002a7d5:	add    BYTE PTR [rax+rax*1+0x69],dh
   14002a7d9:	add    BYTE PTR [rbp+0x0],ch
   14002a7dc:	add    BYTE PTR gs:[rax],ah
   14002a7df:	add    BYTE PTR [rbp+0x0],al
   14002a7e2:	jb     0x14002a7e4
   14002a7e4:	jb     0x14002a7e6
   14002a7e6:	outs   dx,DWORD PTR ds:[rsi]
   14002a7e7:	add    BYTE PTR [rdx+0x0],dh
   14002a7ea:	and    DWORD PTR [rax],eax
   14002a7ec:	or     al,BYTE PTR [rax]
   14002a7ee:	or     al,BYTE PTR [rax]
   14002a7f0:	push   rax
   14002a7f1:	add    BYTE PTR [rdx+0x0],dh
   14002a7f4:	outs   dx,DWORD PTR ds:[rsi]
   14002a7f5:	add    BYTE PTR [rdi+0x0],ah
   14002a7f8:	jb     0x14002a7fa
   14002a7fa:	(bad)  
   14002a7fb:	add    BYTE PTR [rbp+0x0],ch
   14002a7fe:	cmp    al,BYTE PTR [rax]
   14002a800:	and    BYTE PTR [rax],al
   14002a802:	add    BYTE PTR [rax],al
   14002a804:	add    BYTE PTR [rax],al
   14002a806:	add    BYTE PTR [rax],al
   14002a808:	cmp    al,0x0
   14002a80a:	jo     0x14002a80c
   14002a80c:	jb     0x14002a80e
   14002a80e:	outs   dx,DWORD PTR ds:[rsi]
   14002a80f:	add    BYTE PTR [rdi+0x0],ah
   14002a812:	jb     0x14002a814
   14002a814:	(bad)  
   14002a815:	add    BYTE PTR [rbp+0x0],ch
   14002a818:	and    BYTE PTR [rax],al
   14002a81a:	outs   dx,BYTE PTR ds:[rsi]
   14002a81b:	add    BYTE PTR [rcx+0x0],ah
   14002a81e:	ins    DWORD PTR es:[rdi],dx
   14002a81f:	add    BYTE PTR [rbp+0x0],ah
   14002a822:	and    BYTE PTR [rax],al
   14002a824:	jne    0x14002a826
   14002a826:	outs   dx,BYTE PTR ds:[rsi]
   14002a827:	add    BYTE PTR [rbx+0x0],ch
   14002a82a:	outs   dx,BYTE PTR ds:[rsi]
   14002a82b:	add    BYTE PTR [rdi+0x0],ch
   14002a82e:	ja     0x14002a830
   14002a830:	outs   dx,BYTE PTR ds:[rsi]
   14002a831:	add    BYTE PTR [rsi],bh
   14002a833:	add    BYTE PTR [rax],al
   14002a835:	add    BYTE PTR [rax],al
   14002a837:	add    BYTE PTR [rsi],ch
   14002a839:	add    BYTE PTR [rsi],ch
   14002a83b:	add    BYTE PTR [rsi],ch
   14002a83d:	add    BYTE PTR [rax],al
   14002a83f:	add    BYTE PTR [rdx],cl
   14002a841:	add    BYTE PTR [rdx],cl
	...
   14002a84f:	add    BYTE PTR [rbp+0x0],cl
   14002a852:	imul   eax,DWORD PTR [rax],0x720063
   14002a858:	outs   dx,DWORD PTR ds:[rsi]
   14002a859:	add    BYTE PTR [rbx+0x0],dh
   14002a85c:	outs   dx,DWORD PTR ds:[rsi]
   14002a85d:	add    BYTE PTR [rsi+0x0],ah
   14002a860:	je     0x14002a862
   14002a862:	and    BYTE PTR [rax],al
   14002a864:	push   rsi
   14002a865:	add    BYTE PTR [rcx+0x0],ch
   14002a868:	jae    0x14002a86a
   14002a86a:	jne    0x14002a86c
   14002a86c:	(bad)  
   14002a86d:	add    BYTE PTR [rax+rax*1+0x20],ch
   14002a871:	add    BYTE PTR [rbx+0x0],al
   14002a874:	sub    eax,DWORD PTR [rax]
   14002a876:	sub    eax,DWORD PTR [rax]
   14002a878:	and    BYTE PTR [rax],al
   14002a87a:	push   rdx
   14002a87b:	add    BYTE PTR [rbp+0x0],dh
   14002a87e:	outs   dx,BYTE PTR ds:[rsi]
   14002a87f:	add    BYTE PTR [rax+rax*1+0x69],dh
   14002a883:	add    BYTE PTR [rbp+0x0],ch
   14002a886:	add    BYTE PTR gs:[rax],ah
   14002a889:	add    BYTE PTR [rax+rax*1+0x69],cl
   14002a88d:	add    BYTE PTR [rdx+0x0],ah
   14002a890:	jb     0x14002a892
   14002a892:	(bad)  
   14002a893:	add    BYTE PTR [rdx+0x0],dh
   14002a896:	jns    0x14002a898
	...
   14002a8a0:	add    BYTE PTR [r8+rax*1+0x56],al
   14002a8a5:	add    BYTE PTR [rcx+0x0],al
   14002a8a8:	push   rax
   14002a8a9:	add    BYTE PTR [rcx+0x0],cl
   14002a8ac:	xor    eax,DWORD PTR [rax]
   14002a8ae:	xor    al,BYTE PTR [rax]
   14002a8b0:	add    BYTE PTR cs:[rax+rax*1+0x4c],al
   14002a8b5:	add    BYTE PTR [rax+rax*1+0x0],cl
   14002a8b9:	add    BYTE PTR [rax],al
   14002a8bb:	add    BYTE PTR [rax],al
   14002a8bd:	add    BYTE PTR [rax],al
   14002a8bf:	add    BYTE PTR [rbx+0x79],dl
   14002a8c2:	jae    0x14002a938
   14002a8c4:	gs ins DWORD PTR es:[rdi],dx
   14002a8c6:	rex.RX jne 0x14002a937
   14002a8c9:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   14002a8cd:	outs   dx,BYTE PTR ds:[rsi]
   14002a8ce:	xor    BYTE PTR [rbx],dh
   14002a8d0:	add    BYTE PTR ss:[rax],al
   14002a8d3:	add    BYTE PTR [rax],al
   14002a8d5:	add    BYTE PTR [rax],al
   14002a8d7:	add    al,bh
   14002a8d9:	test   al,0x2
   14002a8db:	rex add DWORD PTR [rax],eax
   14002a8de:	add    BYTE PTR [rax],al
   14002a8e0:	or     BYTE PTR [rcx+0x14002],ch
   14002a8e6:	add    BYTE PTR [rax],al
   14002a8e8:	sbb    BYTE PTR [rcx+0x14002],ch
   14002a8ee:	add    BYTE PTR [rax],al
   14002a8f0:	sub    BYTE PTR [rcx+0x14002],ch
   14002a8f6:	add    BYTE PTR [rax],al
   14002a8f8:	push   0x0
   14002a8fa:	(bad)  
   14002a8fb:	add    BYTE PTR [rip+0x50004a00],ch        # 0x19002f301
   14002a901:	add    BYTE PTR [rax],al
   14002a903:	add    BYTE PTR [rax],al
   14002a905:	add    BYTE PTR [rax],al
   14002a907:	add    BYTE PTR [rdx+0x0],bh
   14002a90a:	push   0x43002d00
   14002a90f:	add    BYTE PTR [rsi+0x0],cl
   14002a912:	add    BYTE PTR [rax],al
   14002a914:	add    BYTE PTR [rax],al
   14002a916:	add    BYTE PTR [rax],al
   14002a918:	imul   eax,DWORD PTR [rax],0x6f
   14002a91b:	add    BYTE PTR [rip+0x52004b00],ch        # 0x19202f421
   14002a921:	add    BYTE PTR [rax],al
   14002a923:	add    BYTE PTR [rax],al
   14002a925:	add    BYTE PTR [rax],al
   14002a927:	add    BYTE PTR [rdx+0x0],bh
   14002a92a:	push   0x54002d00
   14002a92f:	add    BYTE PTR [rdi+0x0],dl
   14002a932:	add    BYTE PTR [rax],al
   14002a934:	add    BYTE PTR [rax],al
   14002a936:	add    BYTE PTR [rax],al
   14002a938:	pushf  
   14002a939:	mov    bl,0x0
   14002a93b:	rex add DWORD PTR [rax],eax
   14002a93e:	add    BYTE PTR [rax],al
   14002a940:	cmp    BYTE PTR [rbx+rax*1],dl
   14002a943:	rex add DWORD PTR [rax],eax
   14002a946:	add    BYTE PTR [rax],al
   14002a948:	ins    BYTE PTR es:[rdi],dx
   14002a949:	mov    ah,0x0
   14002a94b:	rex add DWORD PTR [rax],eax
   14002a94e:	add    BYTE PTR [rax],al
   14002a950:	rex.W jnp 0x14002a953
   14002a953:	rex add DWORD PTR [rax],eax
   14002a956:	add    BYTE PTR [rax],al
   14002a958:	(bad)
   14002a95d:	js     0x14002a9c2
   14002a95f:	gs jo  0x14002a9d6
   14002a962:	imul   ebp,DWORD PTR [rdi+0x6e],0x65000000
   14002a969:	sub    esi,DWORD PTR [rax]
   14002a96b:	xor    BYTE PTR [rax],dh
	...
   14002a97d:	add    BYTE PTR [rax],al
   14002a97f:	add    BYTE PTR [rip+0xbc00000],al        # 0x14bc2a985
	...
   14002a98d:	add    BYTE PTR [rax],al
   14002a98f:	add    BYTE PTR [rip+0x4c00000],bl        # 0x144c2a995
	...
   14002a99d:	add    BYTE PTR [rax],al
   14002a99f:	add    BYTE PTR [rsi+0x4c00000],dl
	...
   14002a9ad:	add    BYTE PTR [rax],al
   14002a9af:	add    BYTE PTR [rbp+0x8c00000],cl
	...
   14002a9bd:	add    BYTE PTR [rax],al
   14002a9bf:	add    BYTE PTR [rsi+0x8c00000],cl
	...
   14002a9cd:	add    BYTE PTR [rax],al
   14002a9cf:	add    BYTE PTR [rdi+0x8c00000],cl
	...
   14002a9dd:	add    BYTE PTR [rax],al
   14002a9df:	add    BYTE PTR [rax+0x8c00000],dl
	...
   14002a9ed:	add    BYTE PTR [rax],al
   14002a9ef:	add    BYTE PTR [rcx+0x8c00000],dl
	...
   14002a9fd:	add    BYTE PTR [rax],al
   14002a9ff:	add    BYTE PTR [rdx+0x8c00000],dl
	...
   14002aa0d:	add    BYTE PTR [rax],al
   14002aa0f:	add    BYTE PTR [rbx+0x8c00000],dl
	...
   14002aa1d:	add    BYTE PTR [rax],al
   14002aa1f:	add    BYTE PTR [rdx+rax*1+0x8c000],dh
	...
   14002aa2e:	add    BYTE PTR [rax],al
   14002aa30:	mov    ch,0x2
   14002aa32:	add    al,al
   14002aa34:	or     BYTE PTR [rax],al
	...
   14002aa3e:	add    BYTE PTR [rax],al
   14002aa40:	or     al,0x0
   14002aa42:	add    BYTE PTR [rax],al
   14002aa44:	rol    BYTE PTR [rax],0x0
   14002aa47:	add    BYTE PTR [rbx],al
   14002aa49:	add    BYTE PTR [rax],al
   14002aa4b:	add    BYTE PTR [rcx],cl
	...
   14002aa5d:	add    BYTE PTR [rax],al
   14002aa5f:	add    BYTE PTR [rcx],al
   14002aa61:	add    BYTE PTR [rax],al
   14002aa63:	add    BYTE PTR [rax],al
   14002aa65:	add    BYTE PTR [rax],al
   14002aa67:	add    al,ah
   14002aa69:	mov    BYTE PTR [rdx],0x40
   14002aa6c:	add    DWORD PTR [rax],eax
   14002aa6e:	add    BYTE PTR [rax],al
   14002aa70:	add    al,BYTE PTR [rax]
   14002aa72:	add    BYTE PTR [rax],al
   14002aa74:	add    BYTE PTR [rax],al
   14002aa76:	add    BYTE PTR [rax],al
   14002aa78:	call   0x14142ad43
   14002aa7d:	add    BYTE PTR [rax],al
   14002aa7f:	add    BYTE PTR [rbx],al
   14002aa81:	add    BYTE PTR [rax],al
   14002aa83:	add    BYTE PTR [rax],al
   14002aa85:	add    BYTE PTR [rax],al
   14002aa87:	add    al,dh
   14002aa89:	mov    BYTE PTR [rdx],0x40
   14002aa8c:	add    DWORD PTR [rax],eax
   14002aa8e:	add    BYTE PTR [rax],al
   14002aa90:	add    al,0x0
   14002aa92:	add    BYTE PTR [rax],al
   14002aa94:	add    BYTE PTR [rax],al
   14002aa96:	add    BYTE PTR [rax],al
   14002aa98:	clc    
   14002aa99:	mov    BYTE PTR [rdx],0x40
   14002aa9c:	add    DWORD PTR [rax],eax
   14002aa9e:	add    BYTE PTR [rax],al
   14002aaa0:	add    eax,0x0
   14002aaa5:	add    BYTE PTR [rax],al
   14002aaa7:	add    BYTE PTR [rax],cl
   14002aaa9:	mov    DWORD PTR [rdx],0x140
   14002aaaf:	add    BYTE PTR [rsi],al
   14002aab1:	add    BYTE PTR [rax],al
   14002aab3:	add    BYTE PTR [rax],al
   14002aab5:	add    BYTE PTR [rax],al
   14002aab7:	add    BYTE PTR [rax],dl
   14002aab9:	mov    DWORD PTR [rdx],0x140
   14002aabf:	add    BYTE PTR [rdi],al
   14002aac1:	add    BYTE PTR [rax],al
   14002aac3:	add    BYTE PTR [rax],al
   14002aac5:	add    BYTE PTR [rax],al
   14002aac7:	add    BYTE PTR [rax],bl
   14002aac9:	mov    DWORD PTR [rdx],0x140
   14002aacf:	add    BYTE PTR [rax],cl
   14002aad1:	add    BYTE PTR [rax],al
   14002aad3:	add    BYTE PTR [rax],al
   14002aad5:	add    BYTE PTR [rax],al
   14002aad7:	add    BYTE PTR [rax],ah
   14002aad9:	mov    DWORD PTR [rdx],0x140
   14002aadf:	add    BYTE PTR [rcx],cl
   14002aae1:	add    BYTE PTR [rax],al
   14002aae3:	add    BYTE PTR [rax],al
   14002aae5:	add    BYTE PTR [rax],al
   14002aae7:	add    BYTE PTR [rax],ch
   14002aae9:	mov    DWORD PTR [rdx],0x140
   14002aaef:	add    BYTE PTR [rdx],cl
   14002aaf1:	add    BYTE PTR [rax],al
   14002aaf3:	add    BYTE PTR [rax],al
   14002aaf5:	add    BYTE PTR [rax],al
   14002aaf7:	add    BYTE PTR [rax],dh
   14002aaf9:	mov    DWORD PTR [rdx],0x140
   14002aaff:	add    BYTE PTR [rbx],cl
   14002ab01:	add    BYTE PTR [rax],al
   14002ab03:	add    BYTE PTR [rax],al
   14002ab05:	add    BYTE PTR [rax],al
   14002ab07:	add    BYTE PTR [rax],bh
   14002ab09:	mov    DWORD PTR [rdx],0x140
   14002ab0f:	add    BYTE PTR [rax+rax*1],cl
   14002ab12:	add    BYTE PTR [rax],al
   14002ab14:	add    BYTE PTR [rax],al
   14002ab16:	add    BYTE PTR [rax],al
   14002ab18:	rex mov DWORD PTR [rdx],0x140
   14002ab1f:	add    BYTE PTR [rip+0x0],cl        # 0x14002ab25
   14002ab25:	add    BYTE PTR [rax],al
   14002ab27:	add    BYTE PTR [rax-0x39],cl
   14002ab2a:	add    al,BYTE PTR [rax+0x1]
   14002ab2d:	add    BYTE PTR [rax],al
   14002ab2f:	add    BYTE PTR [rsi],cl
   14002ab31:	add    BYTE PTR [rax],al
   14002ab33:	add    BYTE PTR [rax],al
   14002ab35:	add    BYTE PTR [rax],al
   14002ab37:	add    BYTE PTR [rax-0x39],dl
   14002ab3a:	add    al,BYTE PTR [rax+0x1]
   14002ab3d:	add    BYTE PTR [rax],al
   14002ab3f:	add    BYTE PTR [rdi],cl
   14002ab41:	add    BYTE PTR [rax],al
   14002ab43:	add    BYTE PTR [rax],al
   14002ab45:	add    BYTE PTR [rax],al
   14002ab47:	add    BYTE PTR [rax-0x39],bl
   14002ab4a:	add    al,BYTE PTR [rax+0x1]
   14002ab4d:	add    BYTE PTR [rax],al
   14002ab4f:	add    BYTE PTR [rax],dl
   14002ab51:	add    BYTE PTR [rax],al
   14002ab53:	add    BYTE PTR [rax],al
   14002ab55:	add    BYTE PTR [rax],al
   14002ab57:	add    BYTE PTR [rax-0x39],ah
   14002ab5a:	add    al,BYTE PTR [rax+0x1]
   14002ab5d:	add    BYTE PTR [rax],al
   14002ab5f:	add    BYTE PTR [rcx],dl
   14002ab61:	add    BYTE PTR [rax],al
   14002ab63:	add    BYTE PTR [rax],al
   14002ab65:	add    BYTE PTR [rax],al
   14002ab67:	add    BYTE PTR [rax-0x39],ch
   14002ab6a:	add    al,BYTE PTR [rax+0x1]
   14002ab6d:	add    BYTE PTR [rax],al
   14002ab6f:	add    BYTE PTR [rdx],dl
   14002ab71:	add    BYTE PTR [rax],al
   14002ab73:	add    BYTE PTR [rax],al
   14002ab75:	add    BYTE PTR [rax],al
   14002ab77:	add    BYTE PTR [rax-0x39],dh
   14002ab7a:	add    al,BYTE PTR [rax+0x1]
   14002ab7d:	add    BYTE PTR [rax],al
   14002ab7f:	add    BYTE PTR [rbx],dl
   14002ab81:	add    BYTE PTR [rax],al
   14002ab83:	add    BYTE PTR [rax],al
   14002ab85:	add    BYTE PTR [rax],al
   14002ab87:	add    BYTE PTR [rax-0x39],bh
   14002ab8a:	add    al,BYTE PTR [rax+0x1]
   14002ab8d:	add    BYTE PTR [rax],al
   14002ab8f:	add    BYTE PTR [rax+rax*1],dl
   14002ab92:	add    BYTE PTR [rax],al
   14002ab94:	add    BYTE PTR [rax],al
   14002ab96:	add    BYTE PTR [rax],al
   14002ab98:	add    bh,0x2
   14002ab9b:	rex add DWORD PTR [rax],eax
   14002ab9e:	add    BYTE PTR [rax],al
   14002aba0:	adc    eax,0x0
   14002aba5:	add    BYTE PTR [rax],al
   14002aba7:	add    BYTE PTR [rax+0x14002c7],cl
   14002abad:	add    BYTE PTR [rax],al
   14002abaf:	add    BYTE PTR [rsi],dl
   14002abb1:	add    BYTE PTR [rax],al
   14002abb3:	add    BYTE PTR [rax],al
   14002abb5:	add    BYTE PTR [rax],al
   14002abb7:	add    BYTE PTR [rax+0x14002c7],dl
   14002abbd:	add    BYTE PTR [rax],al
   14002abbf:	add    BYTE PTR [rax],bl
   14002abc1:	add    BYTE PTR [rax],al
   14002abc3:	add    BYTE PTR [rax],al
   14002abc5:	add    BYTE PTR [rax],al
   14002abc7:	add    BYTE PTR [rax+0x14002c7],bl
   14002abcd:	add    BYTE PTR [rax],al
   14002abcf:	add    BYTE PTR [rcx],bl
   14002abd1:	add    BYTE PTR [rax],al
   14002abd3:	add    BYTE PTR [rax],al
   14002abd5:	add    BYTE PTR [rax],al
   14002abd7:	add    BYTE PTR [rax+0x14002c7],ah
   14002abdd:	add    BYTE PTR [rax],al
   14002abdf:	add    BYTE PTR [rdx],bl
   14002abe1:	add    BYTE PTR [rax],al
   14002abe3:	add    BYTE PTR [rax],al
   14002abe5:	add    BYTE PTR [rax],al
   14002abe7:	add    BYTE PTR [rax+0x14002c7],ch
   14002abed:	add    BYTE PTR [rax],al
   14002abef:	add    BYTE PTR [rbx],bl
   14002abf1:	add    BYTE PTR [rax],al
   14002abf3:	add    BYTE PTR [rax],al
   14002abf5:	add    BYTE PTR [rax],al
   14002abf7:	add    BYTE PTR [rax+0x14002c7],dh
   14002abfd:	add    BYTE PTR [rax],al
   14002abff:	add    BYTE PTR [rax+rax*1],bl
   14002ac02:	add    BYTE PTR [rax],al
   14002ac04:	add    BYTE PTR [rax],al
   14002ac06:	add    BYTE PTR [rax],al
   14002ac08:	mov    eax,0x14002c7
   14002ac0d:	add    BYTE PTR [rax],al
   14002ac0f:	add    BYTE PTR [rip+0x0],bl        # 0x14002ac15
   14002ac15:	add    BYTE PTR [rax],al
   14002ac17:	add    al,al
   14002ac19:	mov    DWORD PTR [rdx],0x140
   14002ac1f:	add    BYTE PTR [rsi],bl
   14002ac21:	add    BYTE PTR [rax],al
   14002ac23:	add    BYTE PTR [rax],al
   14002ac25:	add    BYTE PTR [rax],al
   14002ac27:	add    al,cl
   14002ac29:	mov    DWORD PTR [rdx],0x140
   14002ac2f:	add    BYTE PTR [rdi],bl
   14002ac31:	add    BYTE PTR [rax],al
   14002ac33:	add    BYTE PTR [rax],al
   14002ac35:	add    BYTE PTR [rax],al
   14002ac37:	add    al,dl
   14002ac39:	mov    DWORD PTR [rdx],0x140
   14002ac3f:	add    BYTE PTR [rax],ah
   14002ac41:	add    BYTE PTR [rax],al
   14002ac43:	add    BYTE PTR [rax],al
   14002ac45:	add    BYTE PTR [rax],al
   14002ac47:	add    al,bl
   14002ac49:	mov    DWORD PTR [rdx],0x140
   14002ac4f:	add    BYTE PTR [rcx],ah
   14002ac51:	add    BYTE PTR [rax],al
   14002ac53:	add    BYTE PTR [rax],al
   14002ac55:	add    BYTE PTR [rax],al
   14002ac57:	add    al,ah
   14002ac59:	mov    DWORD PTR [rdx],0x140
   14002ac5f:	add    BYTE PTR [rdx],ah
   14002ac61:	add    BYTE PTR [rax],al
   14002ac63:	add    BYTE PTR [rax],al
   14002ac65:	add    BYTE PTR [rax],al
   14002ac67:	add    al,ch
   14002ac69:	mov    DWORD PTR [rdx],0x140
   14002ac6f:	add    BYTE PTR [rbx],ah
   14002ac71:	add    BYTE PTR [rax],al
   14002ac73:	add    BYTE PTR [rax],al
   14002ac75:	add    BYTE PTR [rax],al
   14002ac77:	add    al,dh
   14002ac79:	mov    DWORD PTR [rdx],0x140
   14002ac7f:	add    BYTE PTR [rax+rax*1],ah
   14002ac82:	add    BYTE PTR [rax],al
   14002ac84:	add    BYTE PTR [rax],al
   14002ac86:	add    BYTE PTR [rax],al
   14002ac88:	clc    
   14002ac89:	mov    DWORD PTR [rdx],0x140
   14002ac8f:	add    BYTE PTR [rip+0x0],ah        # 0x14002ac95
   14002ac95:	add    BYTE PTR [rax],al
   14002ac97:	add    BYTE PTR [rax],al
   14002ac99:	enter  0x4002,0x1
   14002ac9d:	add    BYTE PTR [rax],al
   14002ac9f:	add    BYTE PTR [rsi],ah
   14002aca1:	add    BYTE PTR [rax],al
   14002aca3:	add    BYTE PTR [rax],al
   14002aca5:	add    BYTE PTR [rax],al
   14002aca7:	add    BYTE PTR [rax],cl
   14002aca9:	enter  0x4002,0x1
   14002acad:	add    BYTE PTR [rax],al
   14002acaf:	add    BYTE PTR [rdi],ah
   14002acb1:	add    BYTE PTR [rax],al
   14002acb3:	add    BYTE PTR [rax],al
   14002acb5:	add    BYTE PTR [rax],al
   14002acb7:	add    BYTE PTR [rax],dl
   14002acb9:	enter  0x4002,0x1
   14002acbd:	add    BYTE PTR [rax],al
   14002acbf:	add    BYTE PTR [rcx],ch
   14002acc1:	add    BYTE PTR [rax],al
   14002acc3:	add    BYTE PTR [rax],al
   14002acc5:	add    BYTE PTR [rax],al
   14002acc7:	add    BYTE PTR [rax],bl
   14002acc9:	enter  0x4002,0x1
   14002accd:	add    BYTE PTR [rax],al
   14002accf:	add    BYTE PTR [rdx],ch
   14002acd1:	add    BYTE PTR [rax],al
   14002acd3:	add    BYTE PTR [rax],al
   14002acd5:	add    BYTE PTR [rax],al
   14002acd7:	add    BYTE PTR [rax],ah
   14002acd9:	enter  0x4002,0x1
   14002acdd:	add    BYTE PTR [rax],al
   14002acdf:	add    BYTE PTR [rbx],ch
   14002ace1:	add    BYTE PTR [rax],al
   14002ace3:	add    BYTE PTR [rax],al
   14002ace5:	add    BYTE PTR [rax],al
   14002ace7:	add    BYTE PTR [rax],ch
   14002ace9:	enter  0x4002,0x1
   14002aced:	add    BYTE PTR [rax],al
   14002acef:	add    BYTE PTR [rax+rax*1],ch
   14002acf2:	add    BYTE PTR [rax],al
   14002acf4:	add    BYTE PTR [rax],al
   14002acf6:	add    BYTE PTR [rax],al
   14002acf8:	xor    al,cl
   14002acfa:	add    al,BYTE PTR [rax+0x1]
   14002acfd:	add    BYTE PTR [rax],al
   14002acff:	add    BYTE PTR [rip+0x0],ch        # 0x14002ad05
   14002ad05:	add    BYTE PTR [rax],al
   14002ad07:	add    BYTE PTR [rax],bh
   14002ad09:	enter  0x4002,0x1
   14002ad0d:	add    BYTE PTR [rax],al
   14002ad0f:	add    BYTE PTR [rdi],ch
   14002ad11:	add    BYTE PTR [rax],al
   14002ad13:	add    BYTE PTR [rax],al
   14002ad15:	add    BYTE PTR [rax],al
   14002ad17:	add    BYTE PTR [rax-0x38],al
   14002ad1a:	add    al,BYTE PTR [rax+0x1]
   14002ad1d:	add    BYTE PTR [rax],al
   14002ad1f:	add    BYTE PTR [rsi],dh
   14002ad21:	add    BYTE PTR [rax],al
   14002ad23:	add    BYTE PTR [rax],al
   14002ad25:	add    BYTE PTR [rax],al
   14002ad27:	add    BYTE PTR [rax-0x38],cl
   14002ad2a:	add    al,BYTE PTR [rax+0x1]
   14002ad2d:	add    BYTE PTR [rax],al
   14002ad2f:	add    BYTE PTR [rdi],dh
   14002ad31:	add    BYTE PTR [rax],al
   14002ad33:	add    BYTE PTR [rax],al
   14002ad35:	add    BYTE PTR [rax],al
   14002ad37:	add    BYTE PTR [rax-0x38],dl
   14002ad3a:	add    al,BYTE PTR [rax+0x1]
   14002ad3d:	add    BYTE PTR [rax],al
   14002ad3f:	add    BYTE PTR [rax],bh
   14002ad41:	add    BYTE PTR [rax],al
   14002ad43:	add    BYTE PTR [rax],al
   14002ad45:	add    BYTE PTR [rax],al
   14002ad47:	add    BYTE PTR [rax-0x38],bl
   14002ad4a:	add    al,BYTE PTR [rax+0x1]
   14002ad4d:	add    BYTE PTR [rax],al
   14002ad4f:	add    BYTE PTR [rcx],bh
   14002ad51:	add    BYTE PTR [rax],al
   14002ad53:	add    BYTE PTR [rax],al
   14002ad55:	add    BYTE PTR [rax],al
   14002ad57:	add    BYTE PTR [rax-0x38],ah
   14002ad5a:	add    al,BYTE PTR [rax+0x1]
   14002ad5d:	add    BYTE PTR [rax],al
   14002ad5f:	add    BYTE PTR [rsi],bh
   14002ad61:	add    BYTE PTR [rax],al
   14002ad63:	add    BYTE PTR [rax],al
   14002ad65:	add    BYTE PTR [rax],al
   14002ad67:	add    BYTE PTR [rax-0x38],ch
   14002ad6a:	add    al,BYTE PTR [rax+0x1]
   14002ad6d:	add    BYTE PTR [rax],al
   14002ad6f:	add    BYTE PTR [rdi],bh
   14002ad71:	add    BYTE PTR [rax],al
   14002ad73:	add    BYTE PTR [rax],al
   14002ad75:	add    BYTE PTR [rax],al
   14002ad77:	add    BYTE PTR [rax-0x38],dh
   14002ad7a:	add    al,BYTE PTR [rax+0x1]
   14002ad7d:	add    BYTE PTR [rax],al
   14002ad7f:	add    BYTE PTR [rax+0x0],al
   14002ad82:	add    BYTE PTR [rax],al
   14002ad84:	add    BYTE PTR [rax],al
   14002ad86:	add    BYTE PTR [rax],al
   14002ad88:	js     0x14002ad52
   14002ad8a:	add    al,BYTE PTR [rax+0x1]
   14002ad8d:	add    BYTE PTR [rax],al
   14002ad8f:	add    BYTE PTR [rcx+0x0],al
   14002ad92:	add    BYTE PTR [rax],al
   14002ad94:	add    BYTE PTR [rax],al
   14002ad96:	add    BYTE PTR [rax],al
   14002ad98:	or     al,0x2
   14002ad9b:	rex add DWORD PTR [rax],eax
   14002ad9e:	add    BYTE PTR [rax],al
   14002ada0:	rex.XB add BYTE PTR [r8],al
   14002ada3:	add    BYTE PTR [rax],al
   14002ada5:	add    BYTE PTR [rax],al
   14002ada7:	add    BYTE PTR [rax+0x14002c8],cl
   14002adad:	add    BYTE PTR [rax],al
   14002adaf:	add    BYTE PTR [rax+rax*1+0x0],al
   14002adb3:	add    BYTE PTR [rax],al
   14002adb5:	add    BYTE PTR [rax],al
   14002adb7:	add    BYTE PTR [rax+0x14002c8],dl
   14002adbd:	add    BYTE PTR [rax],al
   14002adbf:	add    BYTE PTR [rsi+0x0],al
   14002adc2:	add    BYTE PTR [rax],al
   14002adc4:	add    BYTE PTR [rax],al
   14002adc6:	add    BYTE PTR [rax],al
   14002adc8:	cwde   
   14002adc9:	enter  0x4002,0x1
   14002adcd:	add    BYTE PTR [rax],al
   14002adcf:	add    BYTE PTR [rdi+0x0],al
   14002add2:	add    BYTE PTR [rax],al
   14002add4:	add    BYTE PTR [rax],al
   14002add6:	add    BYTE PTR [rax],al
   14002add8:	movabs al,ds:0x49000000014002c8
   14002ade1:	add    BYTE PTR [rax],al
   14002ade3:	add    BYTE PTR [rax],al
   14002ade5:	add    BYTE PTR [rax],al
   14002ade7:	add    BYTE PTR [rax+0x14002c8],ch
   14002aded:	add    BYTE PTR [rax],al
   14002adef:	add    BYTE PTR [rdx+0x0],cl
   14002adf2:	add    BYTE PTR [rax],al
   14002adf4:	add    BYTE PTR [rax],al
   14002adf6:	add    BYTE PTR [rax],al
   14002adf8:	mov    al,0xc8
   14002adfa:	add    al,BYTE PTR [rax+0x1]
   14002adfd:	add    BYTE PTR [rax],al
   14002adff:	add    BYTE PTR [rbx+0x0],cl
   14002ae02:	add    BYTE PTR [rax],al
   14002ae04:	add    BYTE PTR [rax],al
   14002ae06:	add    BYTE PTR [rax],al
   14002ae08:	mov    eax,0x14002c8
   14002ae0d:	add    BYTE PTR [rax],al
   14002ae0f:	add    BYTE PTR [rsi+0x0],cl
   14002ae12:	add    BYTE PTR [rax],al
   14002ae14:	add    BYTE PTR [rax],al
   14002ae16:	add    BYTE PTR [rax],al
   14002ae18:	ror    al,0x2
   14002ae1b:	rex add DWORD PTR [rax],eax
   14002ae1e:	add    BYTE PTR [rax],al
   14002ae20:	rex.WRXB add BYTE PTR [r8],r8b
   14002ae23:	add    BYTE PTR [rax],al
   14002ae25:	add    BYTE PTR [rax],al
   14002ae27:	add    al,cl
   14002ae29:	enter  0x4002,0x1
   14002ae2d:	add    BYTE PTR [rax],al
   14002ae2f:	add    BYTE PTR [rax+0x0],dl
   14002ae32:	add    BYTE PTR [rax],al
   14002ae34:	add    BYTE PTR [rax],al
   14002ae36:	add    BYTE PTR [rax],al
   14002ae38:	ror    al,1
   14002ae3a:	add    al,BYTE PTR [rax+0x1]
   14002ae3d:	add    BYTE PTR [rax],al
   14002ae3f:	add    BYTE PTR [rsi+0x0],dl
   14002ae42:	add    BYTE PTR [rax],al
   14002ae44:	add    BYTE PTR [rax],al
   14002ae46:	add    BYTE PTR [rax],al
   14002ae48:	fmul   st,st(0)
   14002ae4a:	add    al,BYTE PTR [rax+0x1]
   14002ae4d:	add    BYTE PTR [rax],al
   14002ae4f:	add    BYTE PTR [rdi+0x0],dl
   14002ae52:	add    BYTE PTR [rax],al
   14002ae54:	add    BYTE PTR [rax],al
   14002ae56:	add    BYTE PTR [rax],al
   14002ae58:	loopne 0x14002ae22
   14002ae5a:	add    al,BYTE PTR [rax+0x1]
   14002ae5d:	add    BYTE PTR [rax],al
   14002ae5f:	add    BYTE PTR [rdx+0x0],bl
   14002ae62:	add    BYTE PTR [rax],al
   14002ae64:	add    BYTE PTR [rax],al
   14002ae66:	add    BYTE PTR [rax],al
   14002ae68:	call   0x14142b135
   14002ae6d:	add    BYTE PTR [rax],al
   14002ae6f:	add    BYTE PTR [rbp+0x0],ah
   14002ae72:	add    BYTE PTR [rax],al
   14002ae74:	add    BYTE PTR [rax],al
   14002ae76:	add    BYTE PTR [rax],al
   14002ae78:	lock enter 0x4002,0x1
   14002ae7d:	add    BYTE PTR [rax],al
   14002ae7f:	add    BYTE PTR [rdi+0x0],bh
   14002ae82:	add    BYTE PTR [rax],al
   14002ae84:	add    BYTE PTR [rax],al
   14002ae86:	add    BYTE PTR [rax],al
   14002ae88:	mov    WORD PTR [rsi+0x2],?
   14002ae8b:	rex add DWORD PTR [rax],eax
   14002ae8e:	add    BYTE PTR [rax],al
   14002ae90:	add    DWORD PTR [rax+rax*1],eax
   14002ae93:	add    BYTE PTR [rax],al
   14002ae95:	add    BYTE PTR [rax],al
   14002ae97:	add    al,bh
   14002ae99:	enter  0x4002,0x1
   14002ae9d:	add    BYTE PTR [rax],al
   14002ae9f:	add    BYTE PTR [rdx],al
   14002aea1:	add    al,0x0
   14002aea3:	add    BYTE PTR [rax],al
   14002aea5:	add    BYTE PTR [rax],al
   14002aea7:	add    BYTE PTR [rax],cl
   14002aea9:	leave  
   14002aeaa:	add    al,BYTE PTR [rax+0x1]
   14002aead:	add    BYTE PTR [rax],al
   14002aeaf:	add    BYTE PTR [rbx],al
   14002aeb1:	add    al,0x0
   14002aeb3:	add    BYTE PTR [rax],al
   14002aeb5:	add    BYTE PTR [rax],al
   14002aeb7:	add    BYTE PTR [rax],bl
   14002aeb9:	leave  
   14002aeba:	add    al,BYTE PTR [rax+0x1]
   14002aebd:	add    BYTE PTR [rax],al
   14002aebf:	add    BYTE PTR [rsp+rax*1],al
   14002aec2:	add    BYTE PTR [rax],al
   14002aec4:	add    BYTE PTR [rax],al
   14002aec6:	add    BYTE PTR [rax],al
   14002aec8:	sub    BYTE PTR [rcx+0x14002],ch
   14002aece:	add    BYTE PTR [rax],al
   14002aed0:	add    eax,0x4
   14002aed5:	add    BYTE PTR [rax],al
   14002aed7:	add    BYTE PTR [rax],ch
   14002aed9:	leave  
   14002aeda:	add    al,BYTE PTR [rax+0x1]
   14002aedd:	add    BYTE PTR [rax],al
   14002aedf:	add    BYTE PTR [rsi],al
   14002aee1:	add    al,0x0
   14002aee3:	add    BYTE PTR [rax],al
   14002aee5:	add    BYTE PTR [rax],al
   14002aee7:	add    BYTE PTR [rax],bh
   14002aee9:	leave  
   14002aeea:	add    al,BYTE PTR [rax+0x1]
   14002aeed:	add    BYTE PTR [rax],al
   14002aeef:	add    BYTE PTR [rdi],al
   14002aef1:	add    al,0x0
   14002aef3:	add    BYTE PTR [rax],al
   14002aef5:	add    BYTE PTR [rax],al
   14002aef7:	add    BYTE PTR [rax-0x37],cl
   14002aefa:	add    al,BYTE PTR [rax+0x1]
   14002aefd:	add    BYTE PTR [rax],al
   14002aeff:	add    BYTE PTR [rax],cl
   14002af01:	add    al,0x0
   14002af03:	add    BYTE PTR [rax],al
   14002af05:	add    BYTE PTR [rax],al
   14002af07:	add    BYTE PTR [rax-0x37],bl
   14002af0a:	add    al,BYTE PTR [rax+0x1]
   14002af0d:	add    BYTE PTR [rax],al
   14002af0f:	add    BYTE PTR [rcx],cl
   14002af11:	add    al,0x0
   14002af13:	add    BYTE PTR [rax],al
   14002af15:	add    BYTE PTR [rax],al
   14002af17:	add    BYTE PTR [rax-0x37],ch
   14002af1a:	add    al,BYTE PTR [rax+0x1]
   14002af1d:	add    BYTE PTR [rax],al
   14002af1f:	add    BYTE PTR [rbx],cl
   14002af21:	add    al,0x0
   14002af23:	add    BYTE PTR [rax],al
   14002af25:	add    BYTE PTR [rax],al
   14002af27:	add    BYTE PTR [rax-0x37],bh
   14002af2a:	add    al,BYTE PTR [rax+0x1]
   14002af2d:	add    BYTE PTR [rax],al
   14002af2f:	add    BYTE PTR [rsp+rax*1],cl
   14002af32:	add    BYTE PTR [rax],al
   14002af34:	add    BYTE PTR [rax],al
   14002af36:	add    BYTE PTR [rax],al
   14002af38:	mov    cl,cl
   14002af3a:	add    al,BYTE PTR [rax+0x1]
   14002af3d:	add    BYTE PTR [rax],al
   14002af3f:	add    BYTE PTR [rip+0x4],cl        # 0x14002af49
   14002af45:	add    BYTE PTR [rax],al
   14002af47:	add    BYTE PTR [rax+0x14002c9],bl
   14002af4d:	add    BYTE PTR [rax],al
   14002af4f:	add    BYTE PTR [rsi],cl
   14002af51:	add    al,0x0
   14002af53:	add    BYTE PTR [rax],al
   14002af55:	add    BYTE PTR [rax],al
   14002af57:	add    BYTE PTR [rax+0x14002c9],ch
   14002af5d:	add    BYTE PTR [rax],al
   14002af5f:	add    BYTE PTR [rdi],cl
   14002af61:	add    al,0x0
   14002af63:	add    BYTE PTR [rax],al
   14002af65:	add    BYTE PTR [rax],al
   14002af67:	add    BYTE PTR [rax+0x14002c9],bh
   14002af6d:	add    BYTE PTR [rax],al
   14002af6f:	add    BYTE PTR [rax],dl
   14002af71:	add    al,0x0
   14002af73:	add    BYTE PTR [rax],al
   14002af75:	add    BYTE PTR [rax],al
   14002af77:	add    al,cl
   14002af79:	leave  
   14002af7a:	add    al,BYTE PTR [rax+0x1]
   14002af7d:	add    BYTE PTR [rax],al
   14002af7f:	add    BYTE PTR [rcx],dl
   14002af81:	add    al,0x0
   14002af83:	add    BYTE PTR [rax],al
   14002af85:	add    BYTE PTR [rax],al
   14002af87:	add    al,bh
   14002af89:	test   al,0x2
   14002af8b:	rex add DWORD PTR [rax],eax
   14002af8e:	add    BYTE PTR [rax],al
   14002af90:	adc    al,BYTE PTR [rax+rax*1]
   14002af93:	add    BYTE PTR [rax],al
   14002af95:	add    BYTE PTR [rax],al
   14002af97:	add    BYTE PTR [rax],bl
   14002af99:	test   eax,0x14002
   14002af9e:	add    BYTE PTR [rax],al
   14002afa0:	adc    eax,DWORD PTR [rax+rax*1]
   14002afa3:	add    BYTE PTR [rax],al
   14002afa5:	add    BYTE PTR [rax],al
   14002afa7:	add    al,bl
   14002afa9:	leave  
   14002afaa:	add    al,BYTE PTR [rax+0x1]
   14002afad:	add    BYTE PTR [rax],al
   14002afaf:	add    BYTE PTR [rsp+rax*1],dl
   14002afb2:	add    BYTE PTR [rax],al
   14002afb4:	add    BYTE PTR [rax],al
   14002afb6:	add    BYTE PTR [rax],al
   14002afb8:	call   0x14142b286
   14002afbd:	add    BYTE PTR [rax],al
   14002afbf:	add    BYTE PTR [rip+0x4],dl        # 0x14002afc9
   14002afc5:	add    BYTE PTR [rax],al
   14002afc7:	add    al,bh
   14002afc9:	leave  
   14002afca:	add    al,BYTE PTR [rax+0x1]
   14002afcd:	add    BYTE PTR [rax],al
   14002afcf:	add    BYTE PTR [rsi],dl
   14002afd1:	add    al,0x0
   14002afd3:	add    BYTE PTR [rax],al
   14002afd5:	add    BYTE PTR [rax],al
   14002afd7:	add    BYTE PTR [rax],cl
   14002afd9:	retf   0x4002
   14002afdc:	add    DWORD PTR [rax],eax
   14002afde:	add    BYTE PTR [rax],al
   14002afe0:	sbb    BYTE PTR [rax+rax*1],al
   14002afe3:	add    BYTE PTR [rax],al
   14002afe5:	add    BYTE PTR [rax],al
   14002afe7:	add    BYTE PTR [rax],bl
   14002afe9:	retf   0x4002
   14002afec:	add    DWORD PTR [rax],eax
   14002afee:	add    BYTE PTR [rax],al
   14002aff0:	sbb    DWORD PTR [rax+rax*1],eax
   14002aff3:	add    BYTE PTR [rax],al
   14002aff5:	add    BYTE PTR [rax],al
   14002aff7:	add    BYTE PTR [rax],ch
   14002aff9:	retf   0x4002
   14002affc:	add    DWORD PTR [rax],eax
   14002affe:	add    BYTE PTR [rax],al
   14002b000:	sbb    al,BYTE PTR [rax+rax*1]
   14002b003:	add    BYTE PTR [rax],al
   14002b005:	add    BYTE PTR [rax],al
   14002b007:	add    BYTE PTR [rax],bh
   14002b009:	retf   0x4002
   14002b00c:	add    DWORD PTR [rax],eax
   14002b00e:	add    BYTE PTR [rax],al
   14002b010:	sbb    eax,DWORD PTR [rax+rax*1]
   14002b013:	add    BYTE PTR [rax],al
   14002b015:	add    BYTE PTR [rax],al
   14002b017:	add    BYTE PTR [rax-0x36],cl
   14002b01a:	add    al,BYTE PTR [rax+0x1]
   14002b01d:	add    BYTE PTR [rax],al
   14002b01f:	add    BYTE PTR [rsp+rax*1],bl
   14002b022:	add    BYTE PTR [rax],al
   14002b024:	add    BYTE PTR [rax],al
   14002b026:	add    BYTE PTR [rax],al
   14002b028:	pop    rax
   14002b029:	retf   0x4002
   14002b02c:	add    DWORD PTR [rax],eax
   14002b02e:	add    BYTE PTR [rax],al
   14002b030:	sbb    eax,0x4
   14002b035:	add    BYTE PTR [rax],al
   14002b037:	add    BYTE PTR [rax-0x36],ch
   14002b03a:	add    al,BYTE PTR [rax+0x1]
   14002b03d:	add    BYTE PTR [rax],al
   14002b03f:	add    BYTE PTR [rsi],bl
   14002b041:	add    al,0x0
   14002b043:	add    BYTE PTR [rax],al
   14002b045:	add    BYTE PTR [rax],al
   14002b047:	add    BYTE PTR [rax-0x36],bh
   14002b04a:	add    al,BYTE PTR [rax+0x1]
   14002b04d:	add    BYTE PTR [rax],al
   14002b04f:	add    BYTE PTR [rdi],bl
   14002b051:	add    al,0x0
   14002b053:	add    BYTE PTR [rax],al
   14002b055:	add    BYTE PTR [rax],al
   14002b057:	add    BYTE PTR [rax+0x14002ca],cl
   14002b05d:	add    BYTE PTR [rax],al
   14002b05f:	add    BYTE PTR [rax],ah
   14002b061:	add    al,0x0
   14002b063:	add    BYTE PTR [rax],al
   14002b065:	add    BYTE PTR [rax],al
   14002b067:	add    BYTE PTR [rax+0x14002ca],bl
   14002b06d:	add    BYTE PTR [rax],al
   14002b06f:	add    BYTE PTR [rcx],ah
   14002b071:	add    al,0x0
   14002b073:	add    BYTE PTR [rax],al
   14002b075:	add    BYTE PTR [rax],al
   14002b077:	add    BYTE PTR [rax+0x14002ca],ch
   14002b07d:	add    BYTE PTR [rax],al
   14002b07f:	add    BYTE PTR [rdx],ah
   14002b081:	add    al,0x0
   14002b083:	add    BYTE PTR [rax],al
   14002b085:	add    BYTE PTR [rax],al
   14002b087:	add    BYTE PTR [rax+0x14002ca],bh
   14002b08d:	add    BYTE PTR [rax],al
   14002b08f:	add    BYTE PTR [rbx],ah
   14002b091:	add    al,0x0
   14002b093:	add    BYTE PTR [rax],al
   14002b095:	add    BYTE PTR [rax],al
   14002b097:	add    al,cl
   14002b099:	retf   0x4002
   14002b09c:	add    DWORD PTR [rax],eax
   14002b09e:	add    BYTE PTR [rax],al
   14002b0a0:	and    al,0x4
   14002b0a2:	add    BYTE PTR [rax],al
   14002b0a4:	add    BYTE PTR [rax],al
   14002b0a6:	add    BYTE PTR [rax],al
   14002b0a8:	fmul   st,st(2)
   14002b0aa:	add    al,BYTE PTR [rax+0x1]
   14002b0ad:	add    BYTE PTR [rax],al
   14002b0af:	add    BYTE PTR [rip+0x4],ah        # 0x14002b0b9
   14002b0b5:	add    BYTE PTR [rax],al
   14002b0b7:	add    al,ch
   14002b0b9:	retf   0x4002
   14002b0bc:	add    DWORD PTR [rax],eax
   14002b0be:	add    BYTE PTR [rax],al
   14002b0c0:	es add al,0x0
   14002b0c3:	add    BYTE PTR [rax],al
   14002b0c5:	add    BYTE PTR [rax],al
   14002b0c7:	add    al,bh
   14002b0c9:	retf   0x4002
   14002b0cc:	add    DWORD PTR [rax],eax
   14002b0ce:	add    BYTE PTR [rax],al
   14002b0d0:	(bad)  
   14002b0d1:	add    al,0x0
   14002b0d3:	add    BYTE PTR [rax],al
   14002b0d5:	add    BYTE PTR [rax],al
   14002b0d7:	add    BYTE PTR [rax],cl
   14002b0d9:	retf   
   14002b0da:	add    al,BYTE PTR [rax+0x1]
   14002b0dd:	add    BYTE PTR [rax],al
   14002b0df:	add    BYTE PTR [rcx],ch
   14002b0e1:	add    al,0x0
   14002b0e3:	add    BYTE PTR [rax],al
   14002b0e5:	add    BYTE PTR [rax],al
   14002b0e7:	add    BYTE PTR [rax],bl
   14002b0e9:	retf   
   14002b0ea:	add    al,BYTE PTR [rax+0x1]
   14002b0ed:	add    BYTE PTR [rax],al
   14002b0ef:	add    BYTE PTR [rdx],ch
   14002b0f1:	add    al,0x0
   14002b0f3:	add    BYTE PTR [rax],al
   14002b0f5:	add    BYTE PTR [rax],al
   14002b0f7:	add    BYTE PTR [rax],ch
   14002b0f9:	retf   
   14002b0fa:	add    al,BYTE PTR [rax+0x1]
   14002b0fd:	add    BYTE PTR [rax],al
   14002b0ff:	add    BYTE PTR [rbx],ch
   14002b101:	add    al,0x0
   14002b103:	add    BYTE PTR [rax],al
   14002b105:	add    BYTE PTR [rax],al
   14002b107:	add    BYTE PTR [rax],bh
   14002b109:	retf   
   14002b10a:	add    al,BYTE PTR [rax+0x1]
   14002b10d:	add    BYTE PTR [rax],al
   14002b10f:	add    BYTE PTR [rsp+rax*1],ch
   14002b112:	add    BYTE PTR [rax],al
   14002b114:	add    BYTE PTR [rax],al
   14002b116:	add    BYTE PTR [rax],al
   14002b118:	rex.W retf 
   14002b11a:	add    al,BYTE PTR [rax+0x1]
   14002b11d:	add    BYTE PTR [rax],al
   14002b11f:	add    BYTE PTR [rip+0x4],ch        # 0x14002b129
   14002b125:	add    BYTE PTR [rax],al
   14002b127:	add    BYTE PTR [rax-0x35],ah
   14002b12a:	add    al,BYTE PTR [rax+0x1]
   14002b12d:	add    BYTE PTR [rax],al
   14002b12f:	add    BYTE PTR [rdi],ch
   14002b131:	add    al,0x0
   14002b133:	add    BYTE PTR [rax],al
   14002b135:	add    BYTE PTR [rax],al
   14002b137:	add    BYTE PTR [rax-0x35],dh
   14002b13a:	add    al,BYTE PTR [rax+0x1]
   14002b13d:	add    BYTE PTR [rax],al
   14002b13f:	add    BYTE PTR [rdx],dh
   14002b141:	add    al,0x0
   14002b143:	add    BYTE PTR [rax],al
   14002b145:	add    BYTE PTR [rax],al
   14002b147:	add    BYTE PTR [rax+0x14002cb],al
   14002b14d:	add    BYTE PTR [rax],al
   14002b14f:	add    BYTE PTR [rsp+rax*1],dh
   14002b152:	add    BYTE PTR [rax],al
   14002b154:	add    BYTE PTR [rax],al
   14002b156:	add    BYTE PTR [rax],al
   14002b158:	nop
   14002b159:	retf   
   14002b15a:	add    al,BYTE PTR [rax+0x1]
   14002b15d:	add    BYTE PTR [rax],al
   14002b15f:	add    BYTE PTR [rip+0x4],dh        # 0x14002b169
   14002b165:	add    BYTE PTR [rax],al
   14002b167:	add    BYTE PTR [rax+0x14002cb],ah
   14002b16d:	add    BYTE PTR [rax],al
   14002b16f:	add    BYTE PTR [rsi],dh
   14002b171:	add    al,0x0
   14002b173:	add    BYTE PTR [rax],al
   14002b175:	add    BYTE PTR [rax],al
   14002b177:	add    BYTE PTR [rax+0x14002cb],dh
   14002b17d:	add    BYTE PTR [rax],al
   14002b17f:	add    BYTE PTR [rdi],dh
   14002b181:	add    al,0x0
   14002b183:	add    BYTE PTR [rax],al
   14002b185:	add    BYTE PTR [rax],al
   14002b187:	add    al,al
   14002b189:	retf   
   14002b18a:	add    al,BYTE PTR [rax+0x1]
   14002b18d:	add    BYTE PTR [rax],al
   14002b18f:	add    BYTE PTR [rax],bh
   14002b191:	add    al,0x0
   14002b193:	add    BYTE PTR [rax],al
   14002b195:	add    BYTE PTR [rax],al
   14002b197:	add    al,dl
   14002b199:	retf   
   14002b19a:	add    al,BYTE PTR [rax+0x1]
   14002b19d:	add    BYTE PTR [rax],al
   14002b19f:	add    BYTE PTR [rcx],bh
   14002b1a1:	add    al,0x0
   14002b1a3:	add    BYTE PTR [rax],al
   14002b1a5:	add    BYTE PTR [rax],al
   14002b1a7:	add    al,ah
   14002b1a9:	retf   
   14002b1aa:	add    al,BYTE PTR [rax+0x1]
   14002b1ad:	add    BYTE PTR [rax],al
   14002b1af:	add    BYTE PTR [rdx],bh
   14002b1b1:	add    al,0x0
   14002b1b3:	add    BYTE PTR [rax],al
   14002b1b5:	add    BYTE PTR [rax],al
   14002b1b7:	add    al,dh
   14002b1b9:	retf   
   14002b1ba:	add    al,BYTE PTR [rax+0x1]
   14002b1bd:	add    BYTE PTR [rax],al
   14002b1bf:	add    BYTE PTR [rbx],bh
   14002b1c1:	add    al,0x0
   14002b1c3:	add    BYTE PTR [rax],al
   14002b1c5:	add    BYTE PTR [rax],al
   14002b1c7:	add    BYTE PTR [rax],al
   14002b1c9:	int3   
   14002b1ca:	add    al,BYTE PTR [rax+0x1]
   14002b1cd:	add    BYTE PTR [rax],al
   14002b1cf:	add    BYTE PTR [rsi],bh
   14002b1d1:	add    al,0x0
   14002b1d3:	add    BYTE PTR [rax],al
   14002b1d5:	add    BYTE PTR [rax],al
   14002b1d7:	add    BYTE PTR [rax],dl
   14002b1d9:	int3   
   14002b1da:	add    al,BYTE PTR [rax+0x1]
   14002b1dd:	add    BYTE PTR [rax],al
   14002b1df:	add    BYTE PTR [rdi],bh
   14002b1e1:	add    al,0x0
   14002b1e3:	add    BYTE PTR [rax],al
   14002b1e5:	add    BYTE PTR [rax],al
   14002b1e7:	add    BYTE PTR [rax],ah
   14002b1e9:	int3   
   14002b1ea:	add    al,BYTE PTR [rax+0x1]
   14002b1ed:	add    BYTE PTR [rax],al
   14002b1ef:	add    BYTE PTR [rax+0x4],al
   14002b1f2:	add    BYTE PTR [rax],al
   14002b1f4:	add    BYTE PTR [rax],al
   14002b1f6:	add    BYTE PTR [rax],al
   14002b1f8:	xor    ah,cl
   14002b1fa:	add    al,BYTE PTR [rax+0x1]
   14002b1fd:	add    BYTE PTR [rax],al
   14002b1ff:	add    BYTE PTR [rcx+0x4],al
   14002b202:	add    BYTE PTR [rax],al
   14002b204:	add    BYTE PTR [rax],al
   14002b206:	add    BYTE PTR [rax],al
   14002b208:	rex int3 
   14002b20a:	add    al,BYTE PTR [rax+0x1]
   14002b20d:	add    BYTE PTR [rax],al
   14002b20f:	add    BYTE PTR [rbx+0x4],al
   14002b212:	add    BYTE PTR [rax],al
   14002b214:	add    BYTE PTR [rax],al
   14002b216:	add    BYTE PTR [rax],al
   14002b218:	push   rax
   14002b219:	int3   
   14002b21a:	add    al,BYTE PTR [rax+0x1]
   14002b21d:	add    BYTE PTR [rax],al
   14002b21f:	add    BYTE PTR [rsp+rax*1+0x0],al
   14002b223:	add    BYTE PTR [rax],al
   14002b225:	add    BYTE PTR [rax],al
   14002b227:	add    BYTE PTR [rax-0x34],ch
   14002b22a:	add    al,BYTE PTR [rax+0x1]
   14002b22d:	add    BYTE PTR [rax],al
   14002b22f:	add    BYTE PTR [rbp+0x4],al
   14002b232:	add    BYTE PTR [rax],al
   14002b234:	add    BYTE PTR [rax],al
   14002b236:	add    BYTE PTR [rax],al
   14002b238:	js     0x14002b206
   14002b23a:	add    al,BYTE PTR [rax+0x1]
   14002b23d:	add    BYTE PTR [rax],al
   14002b23f:	add    BYTE PTR [rsi+0x4],al
   14002b242:	add    BYTE PTR [rax],al
   14002b244:	add    BYTE PTR [rax],al
   14002b246:	add    BYTE PTR [rax],al
   14002b248:	mov    ah,cl
   14002b24a:	add    al,BYTE PTR [rax+0x1]
   14002b24d:	add    BYTE PTR [rax],al
   14002b24f:	add    BYTE PTR [rdi+0x4],al
   14002b252:	add    BYTE PTR [rax],al
   14002b254:	add    BYTE PTR [rax],al
   14002b256:	add    BYTE PTR [rax],al
   14002b258:	cwde   
   14002b259:	int3   
   14002b25a:	add    al,BYTE PTR [rax+0x1]
   14002b25d:	add    BYTE PTR [rax],al
   14002b25f:	add    BYTE PTR [rcx+0x4],cl
   14002b262:	add    BYTE PTR [rax],al
   14002b264:	add    BYTE PTR [rax],al
   14002b266:	add    BYTE PTR [rax],al
   14002b268:	test   al,0xcc
   14002b26a:	add    al,BYTE PTR [rax+0x1]
   14002b26d:	add    BYTE PTR [rax],al
   14002b26f:	add    BYTE PTR [rdx+0x4],cl
   14002b272:	add    BYTE PTR [rax],al
   14002b274:	add    BYTE PTR [rax],al
   14002b276:	add    BYTE PTR [rax],al
   14002b278:	mov    eax,0x14002cc
   14002b27d:	add    BYTE PTR [rax],al
   14002b27f:	add    BYTE PTR [rbx+0x4],cl
   14002b282:	add    BYTE PTR [rax],al
   14002b284:	add    BYTE PTR [rax],al
   14002b286:	add    BYTE PTR [rax],al
   14002b288:	enter  0x2cc,0x40
   14002b28c:	add    DWORD PTR [rax],eax
   14002b28e:	add    BYTE PTR [rax],al
   14002b290:	rex.WR add al,0x0
   14002b293:	add    BYTE PTR [rax],al
   14002b295:	add    BYTE PTR [rax],al
   14002b297:	add    al,bl
   14002b299:	int3   
   14002b29a:	add    al,BYTE PTR [rax+0x1]
   14002b29d:	add    BYTE PTR [rax],al
   14002b29f:	add    BYTE PTR [rsi+0x4],cl
   14002b2a2:	add    BYTE PTR [rax],al
   14002b2a4:	add    BYTE PTR [rax],al
   14002b2a6:	add    BYTE PTR [rax],al
   14002b2a8:	call   0x14142b579
   14002b2ad:	add    BYTE PTR [rax],al
   14002b2af:	add    BYTE PTR [rdi+0x4],cl
   14002b2b2:	add    BYTE PTR [rax],al
   14002b2b4:	add    BYTE PTR [rax],al
   14002b2b6:	add    BYTE PTR [rax],al
   14002b2b8:	clc    
   14002b2b9:	int3   
   14002b2ba:	add    al,BYTE PTR [rax+0x1]
   14002b2bd:	add    BYTE PTR [rax],al
   14002b2bf:	add    BYTE PTR [rax+0x4],dl
   14002b2c2:	add    BYTE PTR [rax],al
   14002b2c4:	add    BYTE PTR [rax],al
   14002b2c6:	add    BYTE PTR [rax],al
   14002b2c8:	or     ch,cl
   14002b2ca:	add    al,BYTE PTR [rax+0x1]
   14002b2cd:	add    BYTE PTR [rax],al
   14002b2cf:	add    BYTE PTR [rdx+0x4],dl
   14002b2d2:	add    BYTE PTR [rax],al
   14002b2d4:	add    BYTE PTR [rax],al
   14002b2d6:	add    BYTE PTR [rax],al
   14002b2d8:	sbb    ch,cl
   14002b2da:	add    al,BYTE PTR [rax+0x1]
   14002b2dd:	add    BYTE PTR [rax],al
   14002b2df:	add    BYTE PTR [rsi+0x4],dl
   14002b2e2:	add    BYTE PTR [rax],al
   14002b2e4:	add    BYTE PTR [rax],al
   14002b2e6:	add    BYTE PTR [rax],al
   14002b2e8:	sub    ch,cl
   14002b2ea:	add    al,BYTE PTR [rax+0x1]
   14002b2ed:	add    BYTE PTR [rax],al
   14002b2ef:	add    BYTE PTR [rdi+0x4],dl
   14002b2f2:	add    BYTE PTR [rax],al
   14002b2f4:	add    BYTE PTR [rax],al
   14002b2f6:	add    BYTE PTR [rax],al
   14002b2f8:	cmp    ch,cl
   14002b2fa:	add    al,BYTE PTR [rax+0x1]
   14002b2fd:	add    BYTE PTR [rax],al
   14002b2ff:	add    BYTE PTR [rdx+0x4],bl
   14002b302:	add    BYTE PTR [rax],al
   14002b304:	add    BYTE PTR [rax],al
   14002b306:	add    BYTE PTR [rax],al
   14002b308:	rex.W int 0x2
   14002b30b:	rex add DWORD PTR [rax],eax
   14002b30e:	add    BYTE PTR [rax],al
   14002b310:	gs add al,0x0
   14002b313:	add    BYTE PTR [rax],al
   14002b315:	add    BYTE PTR [rax],al
   14002b317:	add    BYTE PTR [rax-0x33],bl
   14002b31a:	add    al,BYTE PTR [rax+0x1]
   14002b31d:	add    BYTE PTR [rax],al
   14002b31f:	add    BYTE PTR [rbx+0x4],ch
   14002b322:	add    BYTE PTR [rax],al
   14002b324:	add    BYTE PTR [rax],al
   14002b326:	add    BYTE PTR [rax],al
   14002b328:	push   0x14002cd
   14002b32d:	add    BYTE PTR [rax],al
   14002b32f:	add    BYTE PTR [rsp+rax*1+0x0],ch
   14002b333:	add    BYTE PTR [rax],al
   14002b335:	add    BYTE PTR [rax],al
   14002b337:	add    BYTE PTR [rax-0x33],bh
   14002b33a:	add    al,BYTE PTR [rax+0x1]
   14002b33d:	add    BYTE PTR [rax],al
   14002b33f:	add    BYTE PTR [rcx+0x4],al
   14002b345:	add    BYTE PTR [rax],al
   14002b347:	add    BYTE PTR [rax+0x14002cd],cl
   14002b34d:	add    BYTE PTR [rax],al
   14002b34f:	add    BYTE PTR [rcx],al
   14002b351:	or     BYTE PTR [rax],al
   14002b353:	add    BYTE PTR [rax],al
   14002b355:	add    BYTE PTR [rax],al
   14002b357:	add    BYTE PTR [rax+0x14002cd],bl
   14002b35d:	add    BYTE PTR [rax],al
   14002b35f:	add    BYTE PTR [rax+rcx*1],al
   14002b362:	add    BYTE PTR [rax],al
   14002b364:	add    BYTE PTR [rax],al
   14002b366:	add    BYTE PTR [rax],al
   14002b368:	or     BYTE PTR [rcx+0x14002],ch
   14002b36e:	add    BYTE PTR [rax],al
   14002b370:	(bad)  
   14002b371:	or     BYTE PTR [rax],al
   14002b373:	add    BYTE PTR [rax],al
   14002b375:	add    BYTE PTR [rax],al
   14002b377:	add    BYTE PTR [rax+0x14002cd],ch
   14002b37d:	add    BYTE PTR [rax],al
   14002b37f:	add    BYTE PTR [rcx],cl
   14002b381:	or     BYTE PTR [rax],al
   14002b383:	add    BYTE PTR [rax],al
   14002b385:	add    BYTE PTR [rax],al
   14002b387:	add    BYTE PTR [rax+0x14002cd],bh
   14002b38d:	add    BYTE PTR [rax],al
   14002b38f:	add    BYTE PTR [rdx],cl
   14002b391:	or     BYTE PTR [rax],al
   14002b393:	add    BYTE PTR [rax],al
   14002b395:	add    BYTE PTR [rax],al
   14002b397:	add    al,cl
   14002b399:	int    0x2
   14002b39b:	rex add DWORD PTR [rax],eax
   14002b39e:	add    BYTE PTR [rax],al
   14002b3a0:	or     al,0x8
   14002b3a2:	add    BYTE PTR [rax],al
   14002b3a4:	add    BYTE PTR [rax],al
   14002b3a6:	add    BYTE PTR [rax],al
   14002b3a8:	fmul   st,st(5)
   14002b3aa:	add    al,BYTE PTR [rax+0x1]
   14002b3ad:	add    BYTE PTR [rax],al
   14002b3af:	add    BYTE PTR [rax],dl
   14002b3b1:	or     BYTE PTR [rax],al
   14002b3b3:	add    BYTE PTR [rax],al
   14002b3b5:	add    BYTE PTR [rax],al
   14002b3b7:	add    al,ch
   14002b3b9:	int    0x2
   14002b3bb:	rex add DWORD PTR [rax],eax
   14002b3be:	add    BYTE PTR [rax],al
   14002b3c0:	adc    ecx,DWORD PTR [rax]
   14002b3c2:	add    BYTE PTR [rax],al
   14002b3c4:	add    BYTE PTR [rax],al
   14002b3c6:	add    BYTE PTR [rax],al
   14002b3c8:	clc    
   14002b3c9:	int    0x2
   14002b3cb:	rex add DWORD PTR [rax],eax
   14002b3ce:	add    BYTE PTR [rax],al
   14002b3d0:	adc    al,0x8
   14002b3d2:	add    BYTE PTR [rax],al
   14002b3d4:	add    BYTE PTR [rax],al
   14002b3d6:	add    BYTE PTR [rax],al
   14002b3d8:	or     dh,cl
   14002b3da:	add    al,BYTE PTR [rax+0x1]
   14002b3dd:	add    BYTE PTR [rax],al
   14002b3df:	add    BYTE PTR [rsi],dl
   14002b3e1:	or     BYTE PTR [rax],al
   14002b3e3:	add    BYTE PTR [rax],al
   14002b3e5:	add    BYTE PTR [rax],al
   14002b3e7:	add    BYTE PTR [rax],bl
   14002b3e9:	(bad)  
   14002b3ea:	add    al,BYTE PTR [rax+0x1]
   14002b3ed:	add    BYTE PTR [rax],al
   14002b3ef:	add    BYTE PTR [rdx],bl
   14002b3f1:	or     BYTE PTR [rax],al
   14002b3f3:	add    BYTE PTR [rax],al
   14002b3f5:	add    BYTE PTR [rax],al
   14002b3f7:	add    BYTE PTR [rax],ch
   14002b3f9:	(bad)  
   14002b3fa:	add    al,BYTE PTR [rax+0x1]
   14002b3fd:	add    BYTE PTR [rax],al
   14002b3ff:	add    BYTE PTR [rip+0x8],bl        # 0x14002b40d
   14002b405:	add    BYTE PTR [rax],al
   14002b407:	add    BYTE PTR [rax-0x32],al
   14002b40a:	add    al,BYTE PTR [rax+0x1]
   14002b40d:	add    BYTE PTR [rax],al
   14002b40f:	add    BYTE PTR [rax+rcx*1],ch
   14002b412:	add    BYTE PTR [rax],al
   14002b414:	add    BYTE PTR [rax],al
   14002b416:	add    BYTE PTR [rax],al
   14002b418:	push   rax
   14002b419:	(bad)  
   14002b41a:	add    al,BYTE PTR [rax+0x1]
   14002b41d:	add    BYTE PTR [rax],al
   14002b41f:	add    BYTE PTR [rbx],bh
   14002b421:	or     BYTE PTR [rax],al
   14002b423:	add    BYTE PTR [rax],al
   14002b425:	add    BYTE PTR [rax],al
   14002b427:	add    BYTE PTR [rax-0x32],ch
   14002b42a:	add    al,BYTE PTR [rax+0x1]
   14002b42d:	add    BYTE PTR [rax],al
   14002b42f:	add    BYTE PTR [rsi],bh
   14002b431:	or     BYTE PTR [rax],al
   14002b433:	add    BYTE PTR [rax],al
   14002b435:	add    BYTE PTR [rax],al
   14002b437:	add    BYTE PTR [rax-0x32],bh
   14002b43a:	add    al,BYTE PTR [rax+0x1]
   14002b43d:	add    BYTE PTR [rax],al
   14002b43f:	add    BYTE PTR [rbx+0x8],al
   14002b442:	add    BYTE PTR [rax],al
   14002b444:	add    BYTE PTR [rax],al
   14002b446:	add    BYTE PTR [rax],al
   14002b448:	mov    dh,cl
   14002b44a:	add    al,BYTE PTR [rax+0x1]
   14002b44d:	add    BYTE PTR [rax],al
   14002b44f:	add    BYTE PTR [rbx+0x8],ch
   14002b452:	add    BYTE PTR [rax],al
   14002b454:	add    BYTE PTR [rax],al
   14002b456:	add    BYTE PTR [rax],al
   14002b458:	movabs al,ds:0x1000000014002ce
   14002b461:	or     al,0x0
   14002b463:	add    BYTE PTR [rax],al
   14002b465:	add    BYTE PTR [rax],al
   14002b467:	add    BYTE PTR [rax+0x14002ce],dh
   14002b46d:	add    BYTE PTR [rax],al
   14002b46f:	add    BYTE PTR [rsp+rcx*1],al
   14002b472:	add    BYTE PTR [rax],al
   14002b474:	add    BYTE PTR [rax],al
   14002b476:	add    BYTE PTR [rax],al
   14002b478:	ror    dh,0x2
   14002b47b:	rex add DWORD PTR [rax],eax
   14002b47e:	add    BYTE PTR [rax],al
   14002b480:	(bad)  
   14002b481:	or     al,0x0
   14002b483:	add    BYTE PTR [rax],al
   14002b485:	add    BYTE PTR [rax],al
   14002b487:	add    al,dl
   14002b489:	(bad)  
   14002b48a:	add    al,BYTE PTR [rax+0x1]
   14002b48d:	add    BYTE PTR [rax],al
   14002b48f:	add    BYTE PTR [rcx],cl
   14002b491:	or     al,0x0
   14002b493:	add    BYTE PTR [rax],al
   14002b495:	add    BYTE PTR [rax],al
   14002b497:	add    al,ah
   14002b499:	(bad)  
   14002b49a:	add    al,BYTE PTR [rax+0x1]
   14002b49d:	add    BYTE PTR [rax],al
   14002b49f:	add    BYTE PTR [rdx],cl
   14002b4a1:	or     al,0x0
   14002b4a3:	add    BYTE PTR [rax],al
   14002b4a5:	add    BYTE PTR [rax],al
   14002b4a7:	add    al,dh
   14002b4a9:	(bad)  
   14002b4aa:	add    al,BYTE PTR [rax+0x1]
   14002b4ad:	add    BYTE PTR [rax],al
   14002b4af:	add    BYTE PTR [rsp+rcx*1],cl
   14002b4b2:	add    BYTE PTR [rax],al
   14002b4b4:	add    BYTE PTR [rax],al
   14002b4b6:	add    BYTE PTR [rax],al
   14002b4b8:	add    bh,cl
   14002b4ba:	add    al,BYTE PTR [rax+0x1]
   14002b4bd:	add    BYTE PTR [rax],al
   14002b4bf:	add    BYTE PTR [rdx],bl
   14002b4c1:	or     al,0x0
   14002b4c3:	add    BYTE PTR [rax],al
   14002b4c5:	add    BYTE PTR [rax],al
   14002b4c7:	add    BYTE PTR [rax],dl
   14002b4c9:	iret   
   14002b4ca:	add    al,BYTE PTR [rax+0x1]
   14002b4cd:	add    BYTE PTR [rax],al
   14002b4cf:	add    BYTE PTR [rbx],bh
   14002b4d1:	or     al,0x0
   14002b4d3:	add    BYTE PTR [rax],al
   14002b4d5:	add    BYTE PTR [rax],al
   14002b4d7:	add    BYTE PTR [rax],ch
   14002b4d9:	iret   
   14002b4da:	add    al,BYTE PTR [rax+0x1]
   14002b4dd:	add    BYTE PTR [rax],al
   14002b4df:	add    BYTE PTR [rbx+0xc],ch
   14002b4e2:	add    BYTE PTR [rax],al
   14002b4e4:	add    BYTE PTR [rax],al
   14002b4e6:	add    BYTE PTR [rax],al
   14002b4e8:	cmp    bh,cl
   14002b4ea:	add    al,BYTE PTR [rax+0x1]
   14002b4ed:	add    BYTE PTR [rax],al
   14002b4ef:	add    BYTE PTR [rcx],al
   14002b4f1:	adc    BYTE PTR [rax],al
   14002b4f3:	add    BYTE PTR [rax],al
   14002b4f5:	add    BYTE PTR [rax],al
   14002b4f7:	add    BYTE PTR [rax-0x31],cl
   14002b4fa:	add    al,BYTE PTR [rax+0x1]
   14002b4fd:	add    BYTE PTR [rax],al
   14002b4ff:	add    BYTE PTR [rax+rdx*1],al
   14002b502:	add    BYTE PTR [rax],al
   14002b504:	add    BYTE PTR [rax],al
   14002b506:	add    BYTE PTR [rax],al
   14002b508:	pop    rax
   14002b509:	iret   
   14002b50a:	add    al,BYTE PTR [rax+0x1]
   14002b50d:	add    BYTE PTR [rax],al
   14002b50f:	add    BYTE PTR [rdi],al
   14002b511:	adc    BYTE PTR [rax],al
   14002b513:	add    BYTE PTR [rax],al
   14002b515:	add    BYTE PTR [rax],al
   14002b517:	add    BYTE PTR [rax-0x31],ch
   14002b51a:	add    al,BYTE PTR [rax+0x1]
   14002b51d:	add    BYTE PTR [rax],al
   14002b51f:	add    BYTE PTR [rcx],cl
   14002b521:	adc    BYTE PTR [rax],al
   14002b523:	add    BYTE PTR [rax],al
   14002b525:	add    BYTE PTR [rax],al
   14002b527:	add    BYTE PTR [rax-0x31],bh
   14002b52a:	add    al,BYTE PTR [rax+0x1]
   14002b52d:	add    BYTE PTR [rax],al
   14002b52f:	add    BYTE PTR [rdx],cl
   14002b531:	adc    BYTE PTR [rax],al
   14002b533:	add    BYTE PTR [rax],al
   14002b535:	add    BYTE PTR [rax],al
   14002b537:	add    BYTE PTR [rax+0x14002cf],cl
   14002b53d:	add    BYTE PTR [rax],al
   14002b53f:	add    BYTE PTR [rax+rdx*1],cl
   14002b542:	add    BYTE PTR [rax],al
   14002b544:	add    BYTE PTR [rax],al
   14002b546:	add    BYTE PTR [rax],al
   14002b548:	cwde   
   14002b549:	iret   
   14002b54a:	add    al,BYTE PTR [rax+0x1]
   14002b54d:	add    BYTE PTR [rax],al
   14002b54f:	add    BYTE PTR [rdx],bl
   14002b551:	adc    BYTE PTR [rax],al
   14002b553:	add    BYTE PTR [rax],al
   14002b555:	add    BYTE PTR [rax],al
   14002b557:	add    BYTE PTR [rax+0x14002cf],ch
   14002b55d:	add    BYTE PTR [rax],al
   14002b55f:	add    BYTE PTR [rbx],bh
   14002b561:	adc    BYTE PTR [rax],al
   14002b563:	add    BYTE PTR [rax],al
   14002b565:	add    BYTE PTR [rax],al
   14002b567:	add    BYTE PTR [rax+0x14002cf],bh
   14002b56d:	add    BYTE PTR [rax],al
   14002b56f:	add    BYTE PTR [rcx],al
   14002b571:	adc    al,0x0
   14002b573:	add    BYTE PTR [rax],al
   14002b575:	add    BYTE PTR [rax],al
   14002b577:	add    al,cl
   14002b579:	iret   
   14002b57a:	add    al,BYTE PTR [rax+0x1]
   14002b57d:	add    BYTE PTR [rax],al
   14002b57f:	add    BYTE PTR [rsp+rdx*1],al
   14002b582:	add    BYTE PTR [rax],al
   14002b584:	add    BYTE PTR [rax],al
   14002b586:	add    BYTE PTR [rax],al
   14002b588:	fmul   st,st(7)
   14002b58a:	add    al,BYTE PTR [rax+0x1]
   14002b58d:	add    BYTE PTR [rax],al
   14002b58f:	add    BYTE PTR [rdi],al
   14002b591:	adc    al,0x0
   14002b593:	add    BYTE PTR [rax],al
   14002b595:	add    BYTE PTR [rax],al
   14002b597:	add    al,ch
   14002b599:	iret   
   14002b59a:	add    al,BYTE PTR [rax+0x1]
   14002b59d:	add    BYTE PTR [rax],al
   14002b59f:	add    BYTE PTR [rcx],cl
   14002b5a1:	adc    al,0x0
   14002b5a3:	add    BYTE PTR [rax],al
   14002b5a5:	add    BYTE PTR [rax],al
   14002b5a7:	add    al,bh
   14002b5a9:	iret   
   14002b5aa:	add    al,BYTE PTR [rax+0x1]
   14002b5ad:	add    BYTE PTR [rax],al
   14002b5af:	add    BYTE PTR [rdx],cl
   14002b5b1:	adc    al,0x0
   14002b5b3:	add    BYTE PTR [rax],al
   14002b5b5:	add    BYTE PTR [rax],al
   14002b5b7:	add    BYTE PTR [rax],cl
   14002b5b9:	rol    BYTE PTR [rdx],1
   14002b5bb:	rex add DWORD PTR [rax],eax
   14002b5be:	add    BYTE PTR [rax],al
   14002b5c0:	or     al,0x14
   14002b5c2:	add    BYTE PTR [rax],al
   14002b5c4:	add    BYTE PTR [rax],al
   14002b5c6:	add    BYTE PTR [rax],al
   14002b5c8:	sbb    al,dl
   14002b5ca:	add    al,BYTE PTR [rax+0x1]
   14002b5cd:	add    BYTE PTR [rax],al
   14002b5cf:	add    BYTE PTR [rdx],bl
   14002b5d1:	adc    al,0x0
   14002b5d3:	add    BYTE PTR [rax],al
   14002b5d5:	add    BYTE PTR [rax],al
   14002b5d7:	add    BYTE PTR [rax],ch
   14002b5d9:	rol    BYTE PTR [rdx],1
   14002b5db:	rex add DWORD PTR [rax],eax
   14002b5de:	add    BYTE PTR [rax],al
   14002b5e0:	cmp    edx,DWORD PTR [rax+rax*1]
   14002b5e3:	add    BYTE PTR [rax],al
   14002b5e5:	add    BYTE PTR [rax],al
   14002b5e7:	add    BYTE PTR [rax-0x30],al
   14002b5ea:	add    al,BYTE PTR [rax+0x1]
   14002b5ed:	add    BYTE PTR [rax],al
   14002b5ef:	add    BYTE PTR [rcx],al
   14002b5f1:	sbb    BYTE PTR [rax],al
   14002b5f3:	add    BYTE PTR [rax],al
   14002b5f5:	add    BYTE PTR [rax],al
   14002b5f7:	add    BYTE PTR [rax-0x30],dl
   14002b5fa:	add    al,BYTE PTR [rax+0x1]
   14002b5fd:	add    BYTE PTR [rax],al
   14002b5ff:	add    BYTE PTR [rcx],cl
   14002b601:	sbb    BYTE PTR [rax],al
   14002b603:	add    BYTE PTR [rax],al
   14002b605:	add    BYTE PTR [rax],al
   14002b607:	add    BYTE PTR [rax-0x30],ah
   14002b60a:	add    al,BYTE PTR [rax+0x1]
   14002b60d:	add    BYTE PTR [rax],al
   14002b60f:	add    BYTE PTR [rdx],cl
   14002b611:	sbb    BYTE PTR [rax],al
   14002b613:	add    BYTE PTR [rax],al
   14002b615:	add    BYTE PTR [rax],al
   14002b617:	add    BYTE PTR [rax-0x30],dh
   14002b61a:	add    al,BYTE PTR [rax+0x1]
   14002b61d:	add    BYTE PTR [rax],al
   14002b61f:	add    BYTE PTR [rax+rbx*1],cl
   14002b622:	add    BYTE PTR [rax],al
   14002b624:	add    BYTE PTR [rax],al
   14002b626:	add    BYTE PTR [rax],al
   14002b628:	adc    al,0x2
   14002b62b:	rex add DWORD PTR [rax],eax
   14002b62e:	add    BYTE PTR [rax],al
   14002b630:	sbb    bl,BYTE PTR [rax]
   14002b632:	add    BYTE PTR [rax],al
   14002b634:	add    BYTE PTR [rax],al
   14002b636:	add    BYTE PTR [rax],al
   14002b638:	nop
   14002b639:	rol    BYTE PTR [rdx],1
   14002b63b:	rex add DWORD PTR [rax],eax
   14002b63e:	add    BYTE PTR [rax],al
   14002b640:	cmp    ebx,DWORD PTR [rax]
   14002b642:	add    BYTE PTR [rax],al
   14002b644:	add    BYTE PTR [rax],al
   14002b646:	add    BYTE PTR [rax],al
   14002b648:	test   al,0xd0
   14002b64a:	add    al,BYTE PTR [rax+0x1]
   14002b64d:	add    BYTE PTR [rax],al
   14002b64f:	add    BYTE PTR [rcx],al
   14002b651:	sbb    al,0x0
   14002b653:	add    BYTE PTR [rax],al
   14002b655:	add    BYTE PTR [rax],al
   14002b657:	add    BYTE PTR [rax+0x14002d0],bh
   14002b65d:	add    BYTE PTR [rax],al
   14002b65f:	add    BYTE PTR [rcx],cl
   14002b661:	sbb    al,0x0
   14002b663:	add    BYTE PTR [rax],al
   14002b665:	add    BYTE PTR [rax],al
   14002b667:	add    al,cl
   14002b669:	rol    BYTE PTR [rdx],1
   14002b66b:	rex add DWORD PTR [rax],eax
   14002b66e:	add    BYTE PTR [rax],al
   14002b670:	or     bl,BYTE PTR [rax+rax*1]
   14002b673:	add    BYTE PTR [rax],al
   14002b675:	add    BYTE PTR [rax],al
   14002b677:	add    al,bl
   14002b679:	rol    BYTE PTR [rdx],1
   14002b67b:	rex add DWORD PTR [rax],eax
   14002b67e:	add    BYTE PTR [rax],al
   14002b680:	sbb    bl,BYTE PTR [rax+rax*1]
   14002b683:	add    BYTE PTR [rax],al
   14002b685:	add    BYTE PTR [rax],al
   14002b687:	add    al,ch
   14002b689:	rol    BYTE PTR [rdx],1
   14002b68b:	rex add DWORD PTR [rax],eax
   14002b68e:	add    BYTE PTR [rax],al
   14002b690:	cmp    ebx,DWORD PTR [rax+rax*1]
   14002b693:	add    BYTE PTR [rax],al
   14002b695:	add    BYTE PTR [rax],al
   14002b697:	add    BYTE PTR [rax],al
   14002b699:	rol    DWORD PTR [rdx],1
   14002b69b:	rex add DWORD PTR [rax],eax
   14002b69e:	add    BYTE PTR [rax],al
   14002b6a0:	add    DWORD PTR [rax],esp
   14002b6a2:	add    BYTE PTR [rax],al
   14002b6a4:	add    BYTE PTR [rax],al
   14002b6a6:	add    BYTE PTR [rax],al
   14002b6a8:	adc    cl,dl
   14002b6aa:	add    al,BYTE PTR [rax+0x1]
   14002b6ad:	add    BYTE PTR [rax],al
   14002b6af:	add    BYTE PTR [rcx],cl
   14002b6b1:	and    BYTE PTR [rax],al
   14002b6b3:	add    BYTE PTR [rax],al
   14002b6b5:	add    BYTE PTR [rax],al
   14002b6b7:	add    BYTE PTR [rax],ah
   14002b6b9:	rol    DWORD PTR [rdx],1
   14002b6bb:	rex add DWORD PTR [rax],eax
   14002b6be:	add    BYTE PTR [rax],al
   14002b6c0:	or     ah,BYTE PTR [rax]
   14002b6c2:	add    BYTE PTR [rax],al
   14002b6c4:	add    BYTE PTR [rax],al
   14002b6c6:	add    BYTE PTR [rax],al
   14002b6c8:	xor    cl,dl
   14002b6ca:	add    al,BYTE PTR [rax+0x1]
   14002b6cd:	add    BYTE PTR [rax],al
   14002b6cf:	add    BYTE PTR [rbx],bh
   14002b6d1:	and    BYTE PTR [rax],al
   14002b6d3:	add    BYTE PTR [rax],al
   14002b6d5:	add    BYTE PTR [rax],al
   14002b6d7:	add    BYTE PTR [rax-0x2f],al
   14002b6da:	add    al,BYTE PTR [rax+0x1]
   14002b6dd:	add    BYTE PTR [rax],al
   14002b6df:	add    BYTE PTR [rcx],al
   14002b6e1:	and    al,0x0
   14002b6e3:	add    BYTE PTR [rax],al
   14002b6e5:	add    BYTE PTR [rax],al
   14002b6e7:	add    BYTE PTR [rax-0x2f],dl
   14002b6ea:	add    al,BYTE PTR [rax+0x1]
   14002b6ed:	add    BYTE PTR [rax],al
   14002b6ef:	add    BYTE PTR [rcx],cl
   14002b6f1:	and    al,0x0
   14002b6f3:	add    BYTE PTR [rax],al
   14002b6f5:	add    BYTE PTR [rax],al
   14002b6f7:	add    BYTE PTR [rax-0x2f],ah
   14002b6fa:	add    al,BYTE PTR [rax+0x1]
   14002b6fd:	add    BYTE PTR [rax],al
   14002b6ff:	add    BYTE PTR [rdx],cl
   14002b701:	and    al,0x0
   14002b703:	add    BYTE PTR [rax],al
   14002b705:	add    BYTE PTR [rax],al
   14002b707:	add    BYTE PTR [rax-0x2f],dh
   14002b70a:	add    al,BYTE PTR [rax+0x1]
   14002b70d:	add    BYTE PTR [rax],al
   14002b70f:	add    BYTE PTR [rbx],bh
   14002b711:	and    al,0x0
   14002b713:	add    BYTE PTR [rax],al
   14002b715:	add    BYTE PTR [rax],al
   14002b717:	add    BYTE PTR [rax+0x14002d1],al
   14002b71d:	add    BYTE PTR [rax],al
   14002b71f:	add    BYTE PTR [rcx],al
   14002b721:	sub    BYTE PTR [rax],al
   14002b723:	add    BYTE PTR [rax],al
   14002b725:	add    BYTE PTR [rax],al
   14002b727:	add    BYTE PTR [rax+0x14002d1],dl
   14002b72d:	add    BYTE PTR [rax],al
   14002b72f:	add    BYTE PTR [rcx],cl
   14002b731:	sub    BYTE PTR [rax],al
   14002b733:	add    BYTE PTR [rax],al
   14002b735:	add    BYTE PTR [rax],al
   14002b737:	add    BYTE PTR [rax+0x14002d1],ah
   14002b73d:	add    BYTE PTR [rax],al
   14002b73f:	add    BYTE PTR [rdx],cl
   14002b741:	sub    BYTE PTR [rax],al
   14002b743:	add    BYTE PTR [rax],al
   14002b745:	add    BYTE PTR [rax],al
   14002b747:	add    BYTE PTR [rax+0x14002d1],dh
   14002b74d:	add    BYTE PTR [rax],al
   14002b74f:	add    BYTE PTR [rcx],al
   14002b751:	sub    al,0x0
   14002b753:	add    BYTE PTR [rax],al
   14002b755:	add    BYTE PTR [rax],al
   14002b757:	add    al,al
   14002b759:	rol    DWORD PTR [rdx],1
   14002b75b:	rex add DWORD PTR [rax],eax
   14002b75e:	add    BYTE PTR [rax],al
   14002b760:	or     DWORD PTR [rax+rax*1],ebp
   14002b763:	add    BYTE PTR [rax],al
   14002b765:	add    BYTE PTR [rax],al
   14002b767:	add    al,dl
   14002b769:	rol    DWORD PTR [rdx],1
   14002b76b:	rex add DWORD PTR [rax],eax
   14002b76e:	add    BYTE PTR [rax],al
   14002b770:	or     ch,BYTE PTR [rax+rax*1]
   14002b773:	add    BYTE PTR [rax],al
   14002b775:	add    BYTE PTR [rax],al
   14002b777:	add    al,ah
   14002b779:	rol    DWORD PTR [rdx],1
   14002b77b:	rex add DWORD PTR [rax],eax
   14002b77e:	add    BYTE PTR [rax],al
   14002b780:	add    DWORD PTR [rax],esi
   14002b782:	add    BYTE PTR [rax],al
   14002b784:	add    BYTE PTR [rax],al
   14002b786:	add    BYTE PTR [rax],al
   14002b788:	lock rol DWORD PTR [rdx],1
   14002b78b:	rex add DWORD PTR [rax],eax
   14002b78e:	add    BYTE PTR [rax],al
   14002b790:	or     DWORD PTR [rax],esi
   14002b792:	add    BYTE PTR [rax],al
   14002b794:	add    BYTE PTR [rax],al
   14002b796:	add    BYTE PTR [rax],al
   14002b798:	add    dl,dl
   14002b79a:	add    al,BYTE PTR [rax+0x1]
   14002b79d:	add    BYTE PTR [rax],al
   14002b79f:	add    BYTE PTR [rdx],cl
   14002b7a1:	xor    BYTE PTR [rax],al
   14002b7a3:	add    BYTE PTR [rax],al
   14002b7a5:	add    BYTE PTR [rax],al
   14002b7a7:	add    BYTE PTR [rax],dl
   14002b7a9:	rol    BYTE PTR [rdx],cl
   14002b7ab:	rex add DWORD PTR [rax],eax
   14002b7ae:	add    BYTE PTR [rax],al
   14002b7b0:	add    DWORD PTR [rax+rax*1],esi
   14002b7b3:	add    BYTE PTR [rax],al
   14002b7b5:	add    BYTE PTR [rax],al
   14002b7b7:	add    BYTE PTR [rax],ah
   14002b7b9:	rol    BYTE PTR [rdx],cl
   14002b7bb:	rex add DWORD PTR [rax],eax
   14002b7be:	add    BYTE PTR [rax],al
   14002b7c0:	or     DWORD PTR [rax+rax*1],esi
   14002b7c3:	add    BYTE PTR [rax],al
   14002b7c5:	add    BYTE PTR [rax],al
   14002b7c7:	add    BYTE PTR [rax],dh
   14002b7c9:	rol    BYTE PTR [rdx],cl
   14002b7cb:	rex add DWORD PTR [rax],eax
   14002b7ce:	add    BYTE PTR [rax],al
   14002b7d0:	or     dh,BYTE PTR [rax+rax*1]
   14002b7d3:	add    BYTE PTR [rax],al
   14002b7d5:	add    BYTE PTR [rax],al
   14002b7d7:	add    BYTE PTR [rax-0x2e],al
   14002b7da:	add    al,BYTE PTR [rax+0x1]
   14002b7dd:	add    BYTE PTR [rax],al
   14002b7df:	add    BYTE PTR [rcx],al
   14002b7e1:	cmp    BYTE PTR [rax],al
   14002b7e3:	add    BYTE PTR [rax],al
   14002b7e5:	add    BYTE PTR [rax],al
   14002b7e7:	add    BYTE PTR [rax-0x2e],dl
   14002b7ea:	add    al,BYTE PTR [rax+0x1]
   14002b7ed:	add    BYTE PTR [rax],al
   14002b7ef:	add    BYTE PTR [rdx],cl
   14002b7f1:	cmp    BYTE PTR [rax],al
   14002b7f3:	add    BYTE PTR [rax],al
   14002b7f5:	add    BYTE PTR [rax],al
   14002b7f7:	add    BYTE PTR [rax-0x2e],ah
   14002b7fa:	add    al,BYTE PTR [rax+0x1]
   14002b7fd:	add    BYTE PTR [rax],al
   14002b7ff:	add    BYTE PTR [rcx],al
   14002b801:	cmp    al,0x0
   14002b803:	add    BYTE PTR [rax],al
   14002b805:	add    BYTE PTR [rax],al
   14002b807:	add    BYTE PTR [rax-0x2e],dh
   14002b80a:	add    al,BYTE PTR [rax+0x1]
   14002b80d:	add    BYTE PTR [rax],al
   14002b80f:	add    BYTE PTR [rdx],cl
   14002b811:	cmp    al,0x0
   14002b813:	add    BYTE PTR [rax],al
   14002b815:	add    BYTE PTR [rax],al
   14002b817:	add    BYTE PTR [rax+0x14002d2],al
   14002b81d:	add    BYTE PTR [rax],al
   14002b81f:	add    BYTE PTR [rcx],al
   14002b821:	add    BYTE PTR [rax],al
   14002b824:	add    BYTE PTR [rax],al
   14002b826:	add    BYTE PTR [rax],al
   14002b828:	nop
   14002b829:	rol    BYTE PTR [rdx],cl
   14002b82b:	rex add DWORD PTR [rax],eax
   14002b82e:	add    BYTE PTR [rax],al
   14002b830:	or     al,BYTE PTR [rax+0x0]
   14002b833:	add    BYTE PTR [rax],al
   14002b835:	add    BYTE PTR [rax],al
   14002b837:	add    BYTE PTR [rax+0x14002d2],ah
   14002b83d:	add    BYTE PTR [rax],al
   14002b83f:	add    BYTE PTR [rdx],cl
   14002b841:	add    BYTE PTR [rax],r8b
   14002b844:	add    BYTE PTR [rax],al
   14002b846:	add    BYTE PTR [rax],al
   14002b848:	mov    al,0xd2
   14002b84a:	add    al,BYTE PTR [rax+0x1]
   14002b84d:	add    BYTE PTR [rax],al
   14002b84f:	add    BYTE PTR [rdx],cl
   14002b851:	rex.W add BYTE PTR [rax],al
   14002b854:	add    BYTE PTR [rax],al
   14002b856:	add    BYTE PTR [rax],al
   14002b858:	rcl    dl,0x2
   14002b85b:	rex add DWORD PTR [rax],eax
   14002b85e:	add    BYTE PTR [rax],al
   14002b860:	or     cl,BYTE PTR [rax+rax*1+0x0]
   14002b864:	add    BYTE PTR [rax],al
   14002b866:	add    BYTE PTR [rax],al
   14002b868:	rcl    dl,1
   14002b86a:	add    al,BYTE PTR [rax+0x1]
   14002b86d:	add    BYTE PTR [rax],al
   14002b86f:	add    BYTE PTR [rdx],cl
   14002b871:	push   rax
   14002b872:	add    BYTE PTR [rax],al
   14002b874:	add    BYTE PTR [rax],al
   14002b876:	add    BYTE PTR [rax],al
   14002b878:	loopne 0x14002b84c
   14002b87a:	add    al,BYTE PTR [rax+0x1]
   14002b87d:	add    BYTE PTR [rax],al
   14002b87f:	add    BYTE PTR [rsp+rdi*2],al
   14002b882:	add    BYTE PTR [rax],al
   14002b884:	add    BYTE PTR [rax],al
   14002b886:	add    BYTE PTR [rax],al
   14002b888:	lock rol BYTE PTR [rdx],cl
   14002b88b:	rex add DWORD PTR [rax],eax
   14002b88e:	add    BYTE PTR [rax],al
   14002b890:	sbb    bh,BYTE PTR [rax+rax*1+0x0]
   14002b894:	add    BYTE PTR [rax],al
   14002b896:	add    BYTE PTR [rax],al
   14002b898:	add    bl,dl
   14002b89a:	add    al,BYTE PTR [rax+0x1]
   14002b89d:	add    BYTE PTR [rax],al
   14002b89f:	add    BYTE PTR [rsi+rsi*2+0x14002],cl
   14002b8a6:	add    BYTE PTR [rax],al
   14002b8a8:	rex.X add BYTE PTR [rax],al
   14002b8ab:	add    BYTE PTR [rax],al
   14002b8ad:	add    BYTE PTR [rax],al
   14002b8af:	add    BYTE PTR [rax-0x38],cl
   14002b8b2:	add    al,BYTE PTR [rax+0x1]
   14002b8b5:	add    BYTE PTR [rax],al
   14002b8b7:	add    BYTE PTR [rax+rax*1],ch
   14002b8ba:	add    BYTE PTR [rax],al
   14002b8bc:	add    BYTE PTR [rax],al
   14002b8be:	add    BYTE PTR [rax],al
   14002b8c0:	or     bl,dl
   14002b8c2:	add    al,BYTE PTR [rax+0x1]
   14002b8c5:	add    BYTE PTR [rax],al
   14002b8c7:	add    BYTE PTR [rcx+0x0],dh
   14002b8ca:	add    BYTE PTR [rax],al
   14002b8cc:	add    BYTE PTR [rax],al
   14002b8ce:	add    BYTE PTR [rax],al
   14002b8d0:	loopne 0x14002b898
   14002b8d2:	add    al,BYTE PTR [rax+0x1]
	...
   14002b8dd:	add    BYTE PTR [rax],al
   14002b8df:	add    BYTE PTR [rax],bl
   14002b8e1:	rol    DWORD PTR [rdx],cl
   14002b8e3:	rex add DWORD PTR [rax],eax
   14002b8e6:	add    BYTE PTR [rax],al
   14002b8e8:	fadd   DWORD PTR [rax]
   14002b8ea:	add    BYTE PTR [rax],al
   14002b8ec:	add    BYTE PTR [rax],al
   14002b8ee:	add    BYTE PTR [rax],al
   14002b8f0:	sub    bl,dl
   14002b8f2:	add    al,BYTE PTR [rax+0x1]
   14002b8f5:	add    BYTE PTR [rax],al
   14002b8f7:	add    dl,bl
   14002b8f9:	add    BYTE PTR [rax],al
   14002b8fb:	add    BYTE PTR [rax],al
   14002b8fd:	add    BYTE PTR [rax],al
   14002b8ff:	add    BYTE PTR [rax],bh
   14002b901:	rol    DWORD PTR [rdx],cl
   14002b903:	rex add DWORD PTR [rax],eax
   14002b906:	add    BYTE PTR [rax],al
   14002b908:	mov    cl,0x0
   14002b90a:	add    BYTE PTR [rax],al
   14002b90c:	add    BYTE PTR [rax],al
   14002b90e:	add    BYTE PTR [rax],al
   14002b910:	rol    QWORD PTR [rdx],cl
   14002b913:	rex add DWORD PTR [rax],eax
   14002b916:	add    BYTE PTR [rax],al
   14002b918:	movabs al,ds:0x5800000000000000
   14002b921:	rol    DWORD PTR [rdx],cl
   14002b923:	rex add DWORD PTR [rax],eax
   14002b926:	add    BYTE PTR [rax],al
   14002b928:	pop    QWORD PTR [rax]
   14002b92a:	add    BYTE PTR [rax],al
   14002b92c:	add    BYTE PTR [rax],al
   14002b92e:	add    BYTE PTR [rax],al
   14002b930:	push   0x14002d3
   14002b935:	add    BYTE PTR [rax],al
   14002b937:	add    bh,cl
   14002b939:	add    BYTE PTR [rax],al
   14002b93b:	add    BYTE PTR [rax],al
   14002b93d:	add    BYTE PTR [rax],al
   14002b93f:	add    BYTE PTR [rax-0x2d],bh
   14002b942:	add    al,BYTE PTR [rax+0x1]
   14002b945:	add    BYTE PTR [rax],al
   14002b947:	add    ch,dl
   14002b949:	add    BYTE PTR [rax],al
   14002b94b:	add    BYTE PTR [rax],al
   14002b94d:	add    BYTE PTR [rax],al
   14002b94f:	add    BYTE PTR [rax+0x14002d3],cl
   14002b955:	add    BYTE PTR [rax],al
   14002b957:	add    dl,dl
   14002b959:	add    BYTE PTR [rax],al
   14002b95b:	add    BYTE PTR [rax],al
   14002b95d:	add    BYTE PTR [rax],al
   14002b95f:	add    BYTE PTR [rax+0x14002d3],bl
   14002b965:	add    BYTE PTR [rax],al
   14002b967:	add    BYTE PTR [rcx+0x0],ch
   14002b96d:	add    BYTE PTR [rax],al
   14002b96f:	add    BYTE PTR [rax+0x14002d3],ch
   14002b975:	add    BYTE PTR [rax],al
   14002b977:	add    BYTE PTR [rcx+0x0],bh
   14002b97d:	add    BYTE PTR [rax],al
   14002b97f:	add    BYTE PTR [rax+0x14002d3],bh
   14002b985:	add    BYTE PTR [rax],al
   14002b987:	add    ah,al
   14002b989:	add    BYTE PTR [rax],al
   14002b98b:	add    BYTE PTR [rax],al
   14002b98d:	add    BYTE PTR [rax],al
   14002b98f:	add    al,cl
   14002b991:	rol    DWORD PTR [rdx],cl
   14002b993:	rex add DWORD PTR [rax],eax
   14002b996:	add    BYTE PTR [rax],al
   14002b998:	fadd   QWORD PTR [rax]
   14002b99a:	add    BYTE PTR [rax],al
   14002b99c:	add    BYTE PTR [rax],al
   14002b99e:	add    BYTE PTR [rax],al
   14002b9a0:	fcom   st(3)
   14002b9a2:	add    al,BYTE PTR [rax+0x1]
   14002b9a5:	add    BYTE PTR [rax],al
   14002b9a7:	add    BYTE PTR [rbx+0x0],al
   14002b9aa:	add    BYTE PTR [rax],al
   14002b9ac:	add    BYTE PTR [rax],al
   14002b9ae:	add    BYTE PTR [rax],al
   14002b9b0:	call   0x14142bc88
   14002b9b5:	add    BYTE PTR [rax],al
   14002b9b7:	add    ah,cl
   14002b9b9:	add    BYTE PTR [rax],al
   14002b9bb:	add    BYTE PTR [rax],al
   14002b9bd:	add    BYTE PTR [rax],al
   14002b9bf:	add    al,bh
   14002b9c1:	rol    DWORD PTR [rdx],cl
   14002b9c3:	rex add DWORD PTR [rax],eax
   14002b9c6:	add    BYTE PTR [rax],al
   14002b9c8:	mov    edi,0x0
   14002b9cd:	add    BYTE PTR [rax],al
   14002b9cf:	add    BYTE PTR [rax],cl
   14002b9d1:	(bad)  
   14002b9d2:	add    al,BYTE PTR [rax+0x1]
   14002b9d5:	add    BYTE PTR [rax],al
   14002b9d7:	add    al,cl
   14002b9d9:	add    BYTE PTR [rax],al
   14002b9db:	add    BYTE PTR [rax],al
   14002b9dd:	add    BYTE PTR [rax],al
   14002b9df:	add    BYTE PTR [rax],dh
   14002b9e1:	enter  0x4002,0x1
   14002b9e5:	add    BYTE PTR [rax],al
   14002b9e7:	add    BYTE PTR [rcx],ch
   14002b9e9:	add    BYTE PTR [rax],al
   14002b9eb:	add    BYTE PTR [rax],al
   14002b9ed:	add    BYTE PTR [rax],al
   14002b9ef:	add    BYTE PTR [rax],bl
   14002b9f1:	(bad)  
   14002b9f2:	add    al,BYTE PTR [rax+0x1]
   14002b9f5:	add    BYTE PTR [rax],al
   14002b9f7:	add    BYTE PTR [rbx+0x0],bl
   14002b9fd:	add    BYTE PTR [rax],al
   14002b9ff:	add    BYTE PTR [rax],dh
   14002ba01:	(bad)  
   14002ba02:	add    al,BYTE PTR [rax+0x1]
   14002ba05:	add    BYTE PTR [rax],al
   14002ba07:	add    BYTE PTR [rbx+0x0],ch
   14002ba0a:	add    BYTE PTR [rax],al
   14002ba0c:	add    BYTE PTR [rax],al
   14002ba0e:	add    BYTE PTR [rax],al
   14002ba10:	lock mov DWORD PTR [rdx],0x140
   14002ba17:	add    BYTE PTR [rcx],ah
   14002ba19:	add    BYTE PTR [rax],al
   14002ba1b:	add    BYTE PTR [rax],al
   14002ba1d:	add    BYTE PTR [rax],al
   14002ba1f:	add    BYTE PTR [rax-0x2c],cl
   14002ba22:	add    al,BYTE PTR [rax+0x1]
   14002ba25:	add    BYTE PTR [rax],al
   14002ba27:	add    BYTE PTR [rbx+0x0],ah
   14002ba2a:	add    BYTE PTR [rax],al
   14002ba2c:	add    BYTE PTR [rax],al
   14002ba2e:	add    BYTE PTR [rax],al
   14002ba30:	call   0x14142bcfb
   14002ba35:	add    BYTE PTR [rax],al
   14002ba37:	add    BYTE PTR [rcx],al
   14002ba39:	add    BYTE PTR [rax],al
   14002ba3b:	add    BYTE PTR [rax],al
   14002ba3d:	add    BYTE PTR [rax],al
   14002ba3f:	add    BYTE PTR [rax-0x2c],bl
   14002ba42:	add    al,BYTE PTR [rax+0x1]
   14002ba45:	add    BYTE PTR [rax],al
   14002ba47:	add    BYTE PTR [rax+rax*1+0x0],al
   14002ba4b:	add    BYTE PTR [rax],al
   14002ba4d:	add    BYTE PTR [rax],al
   14002ba4f:	add    BYTE PTR [rax-0x2c],ch
   14002ba52:	add    al,BYTE PTR [rax+0x1]
   14002ba55:	add    BYTE PTR [rax],al
   14002ba57:	add    BYTE PTR [rbp+0x0],bh
   14002ba5a:	add    BYTE PTR [rax],al
   14002ba5c:	add    BYTE PTR [rax],al
   14002ba5e:	add    BYTE PTR [rax],al
   14002ba60:	js     0x14002ba36
   14002ba62:	add    al,BYTE PTR [rax+0x1]
   14002ba65:	add    BYTE PTR [rax],al
   14002ba67:	add    BYTE PTR [rdi+0x0],dh
   14002ba6d:	add    BYTE PTR [rax],al
   14002ba6f:	add    al,dh
   14002ba71:	mov    BYTE PTR [rdx],0x40
   14002ba74:	add    DWORD PTR [rax],eax
   14002ba76:	add    BYTE PTR [rax],al
   14002ba78:	add    al,BYTE PTR [rax]
   14002ba7a:	add    BYTE PTR [rax],al
   14002ba7c:	add    BYTE PTR [rax],al
   14002ba7e:	add    BYTE PTR [rax],al
   14002ba80:	nop
   14002ba81:	(bad)  
   14002ba82:	add    al,BYTE PTR [rax+0x1]
   14002ba85:	add    BYTE PTR [rax],al
   14002ba87:	add    BYTE PTR [rbp+0x0],al
   14002ba8a:	add    BYTE PTR [rax],al
   14002ba8c:	add    BYTE PTR [rax],al
   14002ba8e:	add    BYTE PTR [rax],al
   14002ba90:	or     bh,al
   14002ba92:	add    al,BYTE PTR [rax+0x1]
   14002ba95:	add    BYTE PTR [rax],al
   14002ba97:	add    BYTE PTR [rax+rax*1],al
   14002ba9a:	add    BYTE PTR [rax],al
   14002ba9c:	add    BYTE PTR [rax],al
   14002ba9e:	add    BYTE PTR [rax],al
   14002baa0:	movabs al,ds:0x47000000014002d4
   14002baa9:	add    BYTE PTR [rax],al
   14002baab:	add    BYTE PTR [rax],al
   14002baad:	add    BYTE PTR [rax],al
   14002baaf:	add    BYTE PTR [rax+0x14002d4],dh
   14002bab5:	add    BYTE PTR [rax],al
   14002bab7:	add    BYTE PTR [rdi+0x0],al
   14002babd:	add    BYTE PTR [rax],al
   14002babf:	add    BYTE PTR [rax],dl
   14002bac1:	mov    DWORD PTR [rdx],0x140
   14002bac7:	add    BYTE PTR [rip+0x0],al        # 0x14002bacd
   14002bacd:	add    BYTE PTR [rax],al
   14002bacf:	add    al,al
   14002bad1:	(bad)  
   14002bad2:	add    al,BYTE PTR [rax+0x1]
   14002bad5:	add    BYTE PTR [rax],al
   14002bad7:	add    BYTE PTR [rax+0x0],cl
   14002bada:	add    BYTE PTR [rax],al
   14002badc:	add    BYTE PTR [rax],al
   14002bade:	add    BYTE PTR [rax],al
   14002bae0:	sbb    bh,al
   14002bae2:	add    al,BYTE PTR [rax+0x1]
   14002bae5:	add    BYTE PTR [rax],al
   14002bae7:	add    BYTE PTR [rsi],al
   14002bae9:	add    BYTE PTR [rax],al
   14002baeb:	add    BYTE PTR [rax],al
   14002baed:	add    BYTE PTR [rax],al
   14002baef:	add    al,dl
   14002baf1:	(bad)  
   14002baf2:	add    al,BYTE PTR [rax+0x1]
   14002baf5:	add    BYTE PTR [rax],al
   14002baf7:	add    BYTE PTR [rdx+0x0],ah
   14002bafd:	add    BYTE PTR [rax],al
   14002baff:	add    al,ah
   14002bb01:	(bad)  
   14002bb02:	add    al,BYTE PTR [rax+0x1]
   14002bb05:	add    BYTE PTR [rax],al
   14002bb07:	add    BYTE PTR [rcx+0x0],dl
   14002bb0d:	add    BYTE PTR [rax],al
   14002bb0f:	add    al,dh
   14002bb11:	(bad)  
   14002bb12:	add    al,BYTE PTR [rax+0x1]
   14002bb15:	add    BYTE PTR [rax],al
   14002bb17:	add    BYTE PTR [rcx+0x0],cl
   14002bb1a:	add    BYTE PTR [rax],al
   14002bb1c:	add    BYTE PTR [rax],al
   14002bb1e:	add    BYTE PTR [rax],al
   14002bb20:	add    ch,dl
   14002bb22:	add    al,BYTE PTR [rax+0x1]
   14002bb25:	add    BYTE PTR [rax],al
   14002bb27:	add    BYTE PTR [rbx+0x0],dh
   14002bb2d:	add    BYTE PTR [rax],al
   14002bb2f:	add    BYTE PTR [rax],dl
   14002bb31:	(bad)  
   14002bb32:	add    al,BYTE PTR [rax+0x1]
   14002bb35:	add    BYTE PTR [rax],al
   14002bb37:	add    BYTE PTR [rbx+0x0],ch
   14002bb3d:	add    BYTE PTR [rax],al
   14002bb3f:	add    al,dh
   14002bb41:	enter  0x4002,0x1
   14002bb45:	add    BYTE PTR [rax],al
   14002bb47:	add    BYTE PTR [rcx+0x0],al
   14002bb4a:	add    BYTE PTR [rax],al
   14002bb4c:	add    BYTE PTR [rax],al
   14002bb4e:	add    BYTE PTR [rax],al
   14002bb50:	and    ch,dl
   14002bb52:	add    al,BYTE PTR [rax+0x1]
   14002bb55:	add    BYTE PTR [rax],al
   14002bb57:	add    BYTE PTR [rbx+0x0],cl
   14002bb5d:	add    BYTE PTR [rax],al
   14002bb5f:	add    BYTE PTR [rax],ah
   14002bb61:	mov    DWORD PTR [rdx],0x140
   14002bb67:	add    BYTE PTR [rdi],al
   14002bb69:	add    BYTE PTR [rax],al
   14002bb6b:	add    BYTE PTR [rax],al
   14002bb6d:	add    BYTE PTR [rax],al
   14002bb6f:	add    BYTE PTR [rax],dh
   14002bb71:	(bad)  
   14002bb72:	add    al,BYTE PTR [rax+0x1]
   14002bb75:	add    BYTE PTR [rax],al
   14002bb77:	add    BYTE PTR [rdx+0x0],cl
   14002bb7a:	add    BYTE PTR [rax],al
   14002bb7c:	add    BYTE PTR [rax],al
   14002bb7e:	add    BYTE PTR [rax],al
   14002bb80:	sub    bh,al
   14002bb82:	add    al,BYTE PTR [rax+0x1]
   14002bb85:	add    BYTE PTR [rax],al
   14002bb87:	add    BYTE PTR [rax],cl
   14002bb89:	add    BYTE PTR [rax],al
   14002bb8b:	add    BYTE PTR [rax],al
   14002bb8d:	add    BYTE PTR [rax],al
   14002bb8f:	add    BYTE PTR [rax-0x2b],al
   14002bb92:	add    al,BYTE PTR [rax+0x1]
   14002bb95:	add    BYTE PTR [rax],al
   14002bb97:	add    BYTE PTR [rbx+0x0],ah
   14002bb9d:	add    BYTE PTR [rax],al
   14002bb9f:	add    BYTE PTR [rax-0x2b],dl
   14002bba2:	add    al,BYTE PTR [rax+0x1]
   14002bba5:	add    BYTE PTR [rax],al
   14002bba7:	add    ch,cl
   14002bba9:	add    BYTE PTR [rax],al
   14002bbab:	add    BYTE PTR [rax],al
   14002bbad:	add    BYTE PTR [rax],al
   14002bbaf:	add    BYTE PTR [rax-0x2b],ah
   14002bbb2:	add    al,BYTE PTR [rax+0x1]
   14002bbb5:	add    BYTE PTR [rax],al
   14002bbb7:	add    BYTE PTR [rax+rax*1+0x0],ch
   14002bbbe:	add    BYTE PTR [rax],al
   14002bbc0:	jo     0x14002bb97
   14002bbc2:	add    al,BYTE PTR [rax+0x1]
   14002bbc5:	add    BYTE PTR [rax],al
   14002bbc7:	add    cl,cl
   14002bbc9:	add    BYTE PTR [rax],al
   14002bbcb:	add    BYTE PTR [rax],al
   14002bbcd:	add    BYTE PTR [rax],al
   14002bbcf:	add    BYTE PTR [rax+0x14002d5],al
   14002bbd5:	add    BYTE PTR [rax],al
   14002bbd7:	add    BYTE PTR [rdx+0x0],dl
   14002bbdd:	add    BYTE PTR [rax],al
   14002bbdf:	add    BYTE PTR [rax+0x14002d5],dl
   14002bbe5:	add    BYTE PTR [rax],al
   14002bbe7:	add    BYTE PTR [rdx+0x0],bh
   14002bbed:	add    BYTE PTR [rax],al
   14002bbef:	add    BYTE PTR [rax+0x14002d5],ah
   14002bbf5:	add    BYTE PTR [rax],al
   14002bbf7:	add    ch,al
   14002bbf9:	add    BYTE PTR [rax],al
   14002bbfb:	add    BYTE PTR [rax],al
   14002bbfd:	add    BYTE PTR [rax],al
   14002bbff:	add    BYTE PTR [rax+0x14002d5],dh
   14002bc05:	add    BYTE PTR [rax],al
   14002bc07:	add    BYTE PTR [rax+rax*1+0x0],dh
   14002bc0e:	add    BYTE PTR [rax],al
   14002bc10:	rcl    ch,0x2
   14002bc13:	rex add DWORD PTR [rax],eax
   14002bc16:	add    BYTE PTR [rax],al
   14002bc18:	(bad)  
   14002bc19:	add    BYTE PTR [rax],al
   14002bc1b:	add    BYTE PTR [rax],al
   14002bc1d:	add    BYTE PTR [rax],al
   14002bc1f:	add    al,dl
   14002bc21:	(bad)  
   14002bc22:	add    al,BYTE PTR [rax+0x1]
   14002bc25:	add    BYTE PTR [rax],al
   14002bc27:	add    al,dl
   14002bc29:	add    BYTE PTR [rax],al
   14002bc2b:	add    BYTE PTR [rax],al
   14002bc2d:	add    BYTE PTR [rax],al
   14002bc2f:	add    al,ah
   14002bc31:	(bad)  
   14002bc32:	add    al,BYTE PTR [rax+0x1]
   14002bc35:	add    BYTE PTR [rax],al
   14002bc37:	add    BYTE PTR [rbx+0x0],cl
   14002bc3a:	add    BYTE PTR [rax],al
   14002bc3c:	add    BYTE PTR [rax],al
   14002bc3e:	add    BYTE PTR [rax],al
   14002bc40:	lock (bad) 
   14002bc42:	add    al,BYTE PTR [rax+0x1]
   14002bc45:	add    BYTE PTR [rax],al
   14002bc47:	add    al,al
	...
   14002bc51:	(bad)  
   14002bc52:	add    al,BYTE PTR [rax+0x1]
   14002bc55:	add    BYTE PTR [rax],al
   14002bc57:	add    bl,dl
   14002bc59:	add    BYTE PTR [rax],al
   14002bc5b:	add    BYTE PTR [rax],al
   14002bc5d:	add    BYTE PTR [rax],al
   14002bc5f:	add    BYTE PTR [rax],dh
   14002bc61:	mov    DWORD PTR [rdx],0x140
   14002bc67:	add    BYTE PTR [rcx],cl
   14002bc69:	add    BYTE PTR [rax],al
   14002bc6b:	add    BYTE PTR [rax],al
   14002bc6d:	add    BYTE PTR [rax],al
   14002bc6f:	add    BYTE PTR [rax],dl
   14002bc71:	(bad)  
   14002bc72:	add    al,BYTE PTR [rax+0x1]
   14002bc75:	add    BYTE PTR [rax],al
   14002bc77:	add    cl,dl
   14002bc79:	add    BYTE PTR [rax],al
   14002bc7b:	add    BYTE PTR [rax],al
   14002bc7d:	add    BYTE PTR [rax],al
   14002bc7f:	add    BYTE PTR [rax],ah
   14002bc81:	(bad)  
   14002bc82:	add    al,BYTE PTR [rax+0x1]
   14002bc85:	add    BYTE PTR [rax],al
   14002bc87:	add    ch,bl
   14002bc89:	add    BYTE PTR [rax],al
   14002bc8b:	add    BYTE PTR [rax],al
   14002bc8d:	add    BYTE PTR [rax],al
   14002bc8f:	add    BYTE PTR [rax],dh
   14002bc91:	(bad)  
   14002bc92:	add    al,BYTE PTR [rax+0x1]
   14002bc95:	add    BYTE PTR [rax],al
   14002bc97:	add    bh,dl
   14002bc99:	add    BYTE PTR [rax],al
   14002bc9b:	add    BYTE PTR [rax],al
   14002bc9d:	add    BYTE PTR [rax],al
   14002bc9f:	add    BYTE PTR [rax-0x2a],al
   14002bca2:	add    al,BYTE PTR [rax+0x1]
   14002bca5:	add    BYTE PTR [rax],al
   14002bca7:	add    dl,cl
   14002bca9:	add    BYTE PTR [rax],al
   14002bcab:	add    BYTE PTR [rax],al
   14002bcad:	add    BYTE PTR [rax],al
   14002bcaf:	add    BYTE PTR [rax-0x2a],dl
   14002bcb2:	add    al,BYTE PTR [rax+0x1]
   14002bcb5:	add    BYTE PTR [rax],al
   14002bcb7:	add    BYTE PTR [rbp+0x0],dh
   14002bcbd:	add    BYTE PTR [rax],al
   14002bcbf:	add    BYTE PTR [rax-0x2a],ah
   14002bcc2:	add    al,BYTE PTR [rax+0x1]
   14002bcc5:	add    BYTE PTR [rax],al
   14002bcc7:	add    cl,al
   14002bcc9:	add    BYTE PTR [rax],al
   14002bccb:	add    BYTE PTR [rax],al
   14002bccd:	add    BYTE PTR [rax],al
   14002bccf:	add    BYTE PTR [rax-0x2a],dh
   14002bcd2:	add    al,BYTE PTR [rax+0x1]
   14002bcd5:	add    BYTE PTR [rax],al
   14002bcd7:	add    ah,dl
   14002bcd9:	add    BYTE PTR [rax],al
   14002bcdb:	add    BYTE PTR [rax],al
   14002bcdd:	add    BYTE PTR [rax],al
   14002bcdf:	add    BYTE PTR [rax+0x14002d6],al
   14002bce5:	add    BYTE PTR [rax],al
   14002bce7:	add    BYTE PTR [rax+rax*1+0x0],ah
   14002bcee:	add    BYTE PTR [rax],al
   14002bcf0:	nop
   14002bcf1:	(bad)  
   14002bcf2:	add    al,BYTE PTR [rax+0x1]
   14002bcf5:	add    BYTE PTR [rax],al
   14002bcf7:	add    BYTE PTR [rbp+0x0],ch
   14002bcfd:	add    BYTE PTR [rax],al
   14002bcff:	add    BYTE PTR [rax+0x14002d6],ah
   14002bd05:	add    BYTE PTR [rax],al
   14002bd07:	add    bh,bl
   14002bd09:	add    BYTE PTR [rax],al
   14002bd0b:	add    BYTE PTR [rax],al
   14002bd0d:	add    BYTE PTR [rax],al
   14002bd0f:	add    BYTE PTR [rax+0x14002d6],dh
   14002bd15:	add    BYTE PTR [rax],al
   14002bd17:	add    BYTE PTR [rbx+0x0],dl
   14002bd1d:	add    BYTE PTR [rax],al
   14002bd1f:	add    al,al
   14002bd21:	(bad)  
   14002bd22:	add    al,BYTE PTR [rax+0x1]
   14002bd25:	add    BYTE PTR [rax],al
   14002bd27:	add    al,ah
   14002bd29:	add    BYTE PTR [rax],al
   14002bd2b:	add    BYTE PTR [rax],al
   14002bd2d:	add    BYTE PTR [rax],al
   14002bd2f:	add    al,dl
   14002bd31:	(bad)  
   14002bd32:	add    al,BYTE PTR [rax+0x1]
   14002bd35:	add    BYTE PTR [rax],al
   14002bd37:	add    BYTE PTR [rbx+0x0],bh
   14002bd3d:	add    BYTE PTR [rax],al
   14002bd3f:	add    al,ah
   14002bd41:	(bad)  
   14002bd42:	add    al,BYTE PTR [rax+0x1]
   14002bd45:	add    BYTE PTR [rax],al
   14002bd47:	add    dh,cl
   14002bd49:	add    BYTE PTR [rax],al
   14002bd4b:	add    BYTE PTR [rax],al
   14002bd4d:	add    BYTE PTR [rax],al
   14002bd4f:	add    al,dh
   14002bd51:	(bad)  
   14002bd52:	add    al,BYTE PTR [rax+0x1]
   14002bd55:	add    BYTE PTR [rax],al
   14002bd57:	add    cl,ah
	...
   14002bd61:	xlat   BYTE PTR ds:[rbx]
   14002bd62:	add    al,BYTE PTR [rax+0x1]
   14002bd65:	add    BYTE PTR [rax],al
   14002bd67:	add    bl,bl
   14002bd69:	add    BYTE PTR [rax],al
   14002bd6b:	add    BYTE PTR [rax],al
   14002bd6d:	add    BYTE PTR [rax],al
   14002bd6f:	add    BYTE PTR [rax],dl
   14002bd71:	xlat   BYTE PTR ds:[rbx]
   14002bd72:	add    al,BYTE PTR [rax+0x1]
   14002bd75:	add    BYTE PTR [rax],al
   14002bd77:	add    dh,bl
   14002bd79:	add    BYTE PTR [rax],al
   14002bd7b:	add    BYTE PTR [rax],al
   14002bd7d:	add    BYTE PTR [rax],al
   14002bd7f:	add    BYTE PTR [rax],ah
   14002bd81:	xlat   BYTE PTR ds:[rbx]
   14002bd82:	add    al,BYTE PTR [rax+0x1]
   14002bd85:	add    BYTE PTR [rax],al
   14002bd87:	add    cl,bl
   14002bd89:	add    BYTE PTR [rax],al
   14002bd8b:	add    BYTE PTR [rax],al
   14002bd8d:	add    BYTE PTR [rax],al
   14002bd8f:	add    BYTE PTR [rax],dh
   14002bd91:	xlat   BYTE PTR ds:[rbx]
   14002bd92:	add    al,BYTE PTR [rax+0x1]
   14002bd95:	add    BYTE PTR [rax],al
   14002bd97:	add    dh,al
	...
   14002bda1:	enter  0x4002,0x1
   14002bda5:	add    BYTE PTR [rax],al
   14002bda7:	add    BYTE PTR [rbx],ah
   14002bda9:	add    BYTE PTR [rax],al
   14002bdab:	add    BYTE PTR [rax],al
   14002bdad:	add    BYTE PTR [rax],al
   14002bdaf:	add    BYTE PTR [rax-0x29],al
   14002bdb2:	add    al,BYTE PTR [rax+0x1]
   14002bdb5:	add    BYTE PTR [rax],al
   14002bdb7:	add    BYTE PTR [rbp+0x0],ah
   14002bdba:	add    BYTE PTR [rax],al
   14002bdbc:	add    BYTE PTR [rax],al
   14002bdbe:	add    BYTE PTR [rax],al
   14002bdc0:	cmp    al,cl
   14002bdc2:	add    al,BYTE PTR [rax+0x1]
   14002bdc5:	add    BYTE PTR [rax],al
   14002bdc7:	add    BYTE PTR [rdx],ch
   14002bdc9:	add    BYTE PTR [rax],al
   14002bdcb:	add    BYTE PTR [rax],al
   14002bdcd:	add    BYTE PTR [rax],al
   14002bdcf:	add    BYTE PTR [rax-0x29],dl
   14002bdd2:	add    al,BYTE PTR [rax+0x1]
   14002bdd5:	add    BYTE PTR [rax],al
   14002bdd7:	add    BYTE PTR [rax+rax*1+0x0],ch
   14002bddb:	add    BYTE PTR [rax],al
   14002bddd:	add    BYTE PTR [rax],al
   14002bddf:	add    BYTE PTR [rax],bl
   14002bde1:	enter  0x4002,0x1
   14002bde5:	add    BYTE PTR [rax],al
   14002bde7:	add    BYTE PTR [rsi],ah
   14002bde9:	add    BYTE PTR [rax],al
   14002bdeb:	add    BYTE PTR [rax],al
   14002bded:	add    BYTE PTR [rax],al
   14002bdef:	add    BYTE PTR [rax-0x29],ah
   14002bdf2:	add    al,BYTE PTR [rax+0x1]
   14002bdf5:	add    BYTE PTR [rax],al
   14002bdf7:	add    BYTE PTR [rax+0x0],ch
   14002bdfa:	add    BYTE PTR [rax],al
   14002bdfc:	add    BYTE PTR [rax],al
   14002bdfe:	add    BYTE PTR [rax],al
   14002be00:	cmp    bh,al
   14002be02:	add    al,BYTE PTR [rax+0x1]
   14002be05:	add    BYTE PTR [rax],al
   14002be07:	add    BYTE PTR [rdx],cl
   14002be09:	add    BYTE PTR [rax],al
   14002be0b:	add    BYTE PTR [rax],al
   14002be0d:	add    BYTE PTR [rax],al
   14002be0f:	add    BYTE PTR [rax-0x29],dh
   14002be12:	add    al,BYTE PTR [rax+0x1]
   14002be15:	add    BYTE PTR [rax],al
   14002be17:	add    BYTE PTR [rax+rax*1+0x0],cl
   14002be1b:	add    BYTE PTR [rax],al
   14002be1d:	add    BYTE PTR [rax],al
   14002be1f:	add    BYTE PTR [rax-0x38],bl
   14002be22:	add    al,BYTE PTR [rax+0x1]
   14002be25:	add    BYTE PTR [rax],al
   14002be27:	add    BYTE PTR [rsi],ch
   14002be29:	add    BYTE PTR [rax],al
   14002be2b:	add    BYTE PTR [rax],al
   14002be2d:	add    BYTE PTR [rax],al
   14002be2f:	add    BYTE PTR [rax+0x14002d7],al
   14002be35:	add    BYTE PTR [rax],al
   14002be37:	add    BYTE PTR [rbx+0x0],dh
   14002be3a:	add    BYTE PTR [rax],al
   14002be3c:	add    BYTE PTR [rax],al
   14002be3e:	add    BYTE PTR [rax],al
   14002be40:	rex mov DWORD PTR [rdx],0x140
   14002be47:	add    BYTE PTR [rbx],cl
   14002be49:	add    BYTE PTR [rax],al
   14002be4b:	add    BYTE PTR [rax],al
   14002be4d:	add    BYTE PTR [rax],al
   14002be4f:	add    BYTE PTR [rax+0x14002d7],dl
   14002be55:	add    BYTE PTR [rax],al
   14002be57:	add    BYTE PTR [rax+rax*1+0x0],dl
   14002be5e:	add    BYTE PTR [rax],al
   14002be60:	movabs al,ds:0xa5000000014002d7
   14002be69:	add    BYTE PTR [rax],al
   14002be6b:	add    BYTE PTR [rax],al
   14002be6d:	add    BYTE PTR [rax],al
   14002be6f:	add    BYTE PTR [rax+0x14002d7],dh
   14002be75:	add    BYTE PTR [rax],al
   14002be77:	add    BYTE PTR [rsi+0x0],ch
   14002be7d:	add    BYTE PTR [rax],al
   14002be7f:	add    al,al
   14002be81:	xlat   BYTE PTR ds:[rbx]
   14002be82:	add    al,BYTE PTR [rax+0x1]
   14002be85:	add    BYTE PTR [rax],al
   14002be87:	add    BYTE PTR [rbp+0x0],cl
   14002be8a:	add    BYTE PTR [rax],al
   14002be8c:	add    BYTE PTR [rax],al
   14002be8e:	add    BYTE PTR [rax],al
   14002be90:	rcl    bh,1
   14002be92:	add    al,BYTE PTR [rax+0x1]
   14002be95:	add    BYTE PTR [rax],al
   14002be97:	add    BYTE PTR [rsi+0x0],dh
   14002be9d:	add    BYTE PTR [rax],al
   14002be9f:	add    al,ah
   14002bea1:	xlat   BYTE PTR ds:[rbx]
   14002bea2:	add    al,BYTE PTR [rax+0x1]
   14002bea5:	add    BYTE PTR [rax],al
   14002bea7:	add    BYTE PTR [rax+rax*1+0x0],bh
   14002beae:	add    BYTE PTR [rax],al
   14002beb0:	fmul   st,st(0)
   14002beb2:	add    al,BYTE PTR [rax+0x1]
   14002beb5:	add    BYTE PTR [rax],al
   14002beb7:	add    BYTE PTR [rsi],bh
   14002beb9:	add    BYTE PTR [rax],al
   14002bebb:	add    BYTE PTR [rax],al
   14002bebd:	add    BYTE PTR [rax],al
   14002bebf:	add    al,dh
   14002bec1:	xlat   BYTE PTR ds:[rbx]
   14002bec2:	add    al,BYTE PTR [rax+0x1]
   14002bec5:	add    BYTE PTR [rax],al
   14002bec7:	add    BYTE PTR [rax+0x0],cl
   14002becd:	add    BYTE PTR [rax],al
   14002becf:	add    BYTE PTR [rax+0x14002c8],ah
   14002bed5:	add    BYTE PTR [rax],al
   14002bed7:	add    BYTE PTR [rdi],dh
	...
   14002bee1:	fadd   DWORD PTR [rdx]
   14002bee3:	rex add DWORD PTR [rax],eax
   14002bee6:	add    BYTE PTR [rax],al
   14002bee8:	jg     0x14002beea
   14002beea:	add    BYTE PTR [rax],al
   14002beec:	add    BYTE PTR [rax],al
   14002beee:	add    BYTE PTR [rax],al
   14002bef0:	mov    QWORD PTR [rdx],0x140
   14002bef7:	add    BYTE PTR [rax+rax*1],cl
   14002befa:	add    BYTE PTR [rax],al
   14002befc:	add    BYTE PTR [rax],al
   14002befe:	add    BYTE PTR [rax],al
   14002bf00:	adc    al,bl
   14002bf02:	add    al,BYTE PTR [rax+0x1]
   14002bf05:	add    BYTE PTR [rax],al
   14002bf07:	add    BYTE PTR [rsi+0x0],cl
   14002bf0a:	add    BYTE PTR [rax],al
   14002bf0c:	add    BYTE PTR [rax],al
   14002bf0e:	add    BYTE PTR [rax],al
   14002bf10:	(bad)  
   14002bf11:	enter  0x4002,0x1
   14002bf15:	add    BYTE PTR [rax],al
   14002bf17:	add    BYTE PTR [rdi],ch
   14002bf19:	add    BYTE PTR [rax],al
   14002bf1b:	add    BYTE PTR [rax],al
   14002bf1d:	add    BYTE PTR [rax],al
   14002bf1f:	add    BYTE PTR [rax],ah
   14002bf21:	fadd   DWORD PTR [rdx]
   14002bf23:	rex add DWORD PTR [rax],eax
   14002bf26:	add    BYTE PTR [rax],al
   14002bf28:	je     0x14002bf2a
   14002bf2a:	add    BYTE PTR [rax],al
   14002bf2c:	add    BYTE PTR [rax],al
   14002bf2e:	add    BYTE PTR [rax],al
   14002bf30:	test   al,0xc7
   14002bf32:	add    al,BYTE PTR [rax+0x1]
   14002bf35:	add    BYTE PTR [rax],al
   14002bf37:	add    BYTE PTR [rax],bl
   14002bf39:	add    BYTE PTR [rax],al
   14002bf3b:	add    BYTE PTR [rax],al
   14002bf3d:	add    BYTE PTR [rax],al
   14002bf3f:	add    BYTE PTR [rax],dh
   14002bf41:	fadd   DWORD PTR [rdx]
   14002bf43:	rex add DWORD PTR [rax],eax
   14002bf46:	add    BYTE PTR [rax],al
   14002bf48:	scas   eax,DWORD PTR es:[rdi]
   14002bf49:	add    BYTE PTR [rax],al
   14002bf4b:	add    BYTE PTR [rax],al
   14002bf4d:	add    BYTE PTR [rax],al
   14002bf4f:	add    BYTE PTR [rax-0x28],al
   14002bf52:	add    al,BYTE PTR [rax+0x1]
   14002bf55:	add    BYTE PTR [rax],al
   14002bf57:	add    BYTE PTR [rdx+0x0],bl
   14002bf5a:	add    BYTE PTR [rax],al
   14002bf5c:	add    BYTE PTR [rax],al
   14002bf5e:	add    BYTE PTR [rax],al
   14002bf60:	push   rax
   14002bf61:	mov    DWORD PTR [rdx],0x140
   14002bf67:	add    BYTE PTR [rip+0x0],cl        # 0x14002bf6d
   14002bf6d:	add    BYTE PTR [rax],al
   14002bf6f:	add    BYTE PTR [rax-0x28],dl
   14002bf72:	add    al,BYTE PTR [rax+0x1]
   14002bf75:	add    BYTE PTR [rax],al
   14002bf77:	add    BYTE PTR [rdi+0x0],cl
   14002bf7a:	add    BYTE PTR [rax],al
   14002bf7c:	add    BYTE PTR [rax],al
   14002bf7e:	add    BYTE PTR [rax],al
   14002bf80:	sub    al,cl
   14002bf82:	add    al,BYTE PTR [rax+0x1]
   14002bf85:	add    BYTE PTR [rax],al
   14002bf87:	add    BYTE PTR [rax],ch
   14002bf89:	add    BYTE PTR [rax],al
   14002bf8b:	add    BYTE PTR [rax],al
   14002bf8d:	add    BYTE PTR [rax],al
   14002bf8f:	add    BYTE PTR [rax-0x28],ah
   14002bf92:	add    al,BYTE PTR [rax+0x1]
   14002bf95:	add    BYTE PTR [rax],al
   14002bf97:	add    BYTE PTR [rdx+0x0],ch
   14002bf9a:	add    BYTE PTR [rax],al
   14002bf9c:	add    BYTE PTR [rax],al
   14002bf9e:	add    BYTE PTR [rax],al
   14002bfa0:	loopne 0x14002bf69
   14002bfa2:	add    al,BYTE PTR [rax+0x1]
   14002bfa5:	add    BYTE PTR [rax],al
   14002bfa7:	add    BYTE PTR [rdi],bl
   14002bfa9:	add    BYTE PTR [rax],al
   14002bfab:	add    BYTE PTR [rax],al
   14002bfad:	add    BYTE PTR [rax],al
   14002bfaf:	add    BYTE PTR [rax-0x28],dh
   14002bfb2:	add    al,BYTE PTR [rax+0x1]
   14002bfb5:	add    BYTE PTR [rax],al
   14002bfb7:	add    BYTE PTR [rcx+0x0],ah
   14002bfba:	add    BYTE PTR [rax],al
   14002bfbc:	add    BYTE PTR [rax],al
   14002bfbe:	add    BYTE PTR [rax],al
   14002bfc0:	pop    rax
   14002bfc1:	mov    DWORD PTR [rdx],0x140
   14002bfc7:	add    BYTE PTR [rsi],cl
   14002bfc9:	add    BYTE PTR [rax],al
   14002bfcb:	add    BYTE PTR [rax],al
   14002bfcd:	add    BYTE PTR [rax],al
   14002bfcf:	add    BYTE PTR [rax+0x14002d8],al
   14002bfd5:	add    BYTE PTR [rax],al
   14002bfd7:	add    BYTE PTR [rax+0x0],dl
   14002bfda:	add    BYTE PTR [rax],al
   14002bfdc:	add    BYTE PTR [rax],al
   14002bfde:	add    BYTE PTR [rax],al
   14002bfe0:	(bad)  
   14002bfe1:	mov    DWORD PTR [rdx],0x140
   14002bfe7:	add    BYTE PTR [rdi],cl
   14002bfe9:	add    BYTE PTR [rax],al
   14002bfeb:	add    BYTE PTR [rax],al
   14002bfed:	add    BYTE PTR [rax],al
   14002bfef:	add    BYTE PTR [rax+0x14002d8],dl
   14002bff5:	add    BYTE PTR [rax],al
   14002bff7:	add    BYTE PTR [rbp+0x0],dl
   14002bffd:	add    BYTE PTR [rax],al
   14002bfff:	add    BYTE PTR [rax+0x14002d8],ah
   14002c005:	add    BYTE PTR [rax],al
   14002c007:	add    BYTE PTR [rcx+0x0],dl
   14002c00a:	add    BYTE PTR [rax],al
   14002c00c:	add    BYTE PTR [rax],al
   14002c00e:	add    BYTE PTR [rax],al
   14002c010:	push   0x14002c7
   14002c015:	add    BYTE PTR [rax],al
   14002c017:	add    BYTE PTR [rax],dl
   14002c019:	add    BYTE PTR [rax],al
   14002c01b:	add    BYTE PTR [rax],al
   14002c01d:	add    BYTE PTR [rax],al
   14002c01f:	add    BYTE PTR [rax+0x14002d8],dh
   14002c025:	add    BYTE PTR [rax],al
   14002c027:	add    BYTE PTR [rdx+0x0],dl
   14002c02a:	add    BYTE PTR [rax],al
   14002c02c:	add    BYTE PTR [rax],al
   14002c02e:	add    BYTE PTR [rax],al
   14002c030:	push   rax
   14002c031:	enter  0x4002,0x1
   14002c035:	add    BYTE PTR [rax],al
   14002c037:	add    BYTE PTR [rip+0x0],ch        # 0x14002c03d
   14002c03d:	add    BYTE PTR [rax],al
   14002c03f:	add    al,al
   14002c041:	fadd   DWORD PTR [rdx]
   14002c043:	rex add DWORD PTR [rax],eax
   14002c046:	add    BYTE PTR [rax],al
   14002c048:	jb     0x14002c04a
   14002c04a:	add    BYTE PTR [rax],al
   14002c04c:	add    BYTE PTR [rax],al
   14002c04e:	add    BYTE PTR [rax],al
   14002c050:	jo     0x14002c01a
   14002c052:	add    al,BYTE PTR [rax+0x1]
   14002c055:	add    BYTE PTR [rax],al
   14002c057:	add    BYTE PTR [rcx],dh
   14002c059:	add    BYTE PTR [rax],al
   14002c05b:	add    BYTE PTR [rax],al
   14002c05d:	add    BYTE PTR [rax],al
   14002c05f:	add    al,dl
   14002c061:	fadd   DWORD PTR [rdx]
   14002c063:	rex add DWORD PTR [rax],eax
   14002c066:	add    BYTE PTR [rax],al
   14002c068:	js     0x14002c06a
   14002c06a:	add    BYTE PTR [rax],al
   14002c06c:	add    BYTE PTR [rax],al
   14002c06e:	add    BYTE PTR [rax],al
   14002c070:	mov    eax,0x14002c8
   14002c075:	add    BYTE PTR [rax],al
   14002c077:	add    BYTE PTR [rdx],bh
   14002c079:	add    BYTE PTR [rax],al
   14002c07b:	add    BYTE PTR [rax],al
   14002c07d:	add    BYTE PTR [rax],al
   14002c07f:	add    al,ah
   14002c081:	fadd   DWORD PTR [rdx]
   14002c083:	rex add DWORD PTR [rax],eax
   14002c086:	add    BYTE PTR [rax],al
   14002c088:	(bad)  
   14002c089:	add    BYTE PTR [rax],al
   14002c08b:	add    BYTE PTR [rax],al
   14002c08d:	add    BYTE PTR [rax],al
   14002c08f:	add    BYTE PTR [rax-0x39],dh
   14002c092:	add    al,BYTE PTR [rax+0x1]
   14002c095:	add    BYTE PTR [rax],al
   14002c097:	add    BYTE PTR [rcx],dl
   14002c099:	add    BYTE PTR [rax],al
   14002c09b:	add    BYTE PTR [rax],al
   14002c09d:	add    BYTE PTR [rax],al
   14002c09f:	add    al,ah
   14002c0a1:	enter  0x4002,0x1
   14002c0a5:	add    BYTE PTR [rax],al
   14002c0a7:	add    BYTE PTR [rdi],bh
   14002c0a9:	add    BYTE PTR [rax],al
   14002c0ab:	add    BYTE PTR [rax],al
   14002c0ad:	add    BYTE PTR [rax],al
   14002c0af:	add    al,dh
   14002c0b1:	fadd   DWORD PTR [rdx]
   14002c0b3:	rex add DWORD PTR [rax],eax
   14002c0b6:	add    BYTE PTR [rax],al
   14002c0b8:	mov    DWORD PTR [rax],eax
   14002c0ba:	add    BYTE PTR [rax],al
   14002c0bc:	add    BYTE PTR [rax],al
   14002c0be:	add    BYTE PTR [rax],al
   14002c0c0:	add    cl,bl
   14002c0c2:	add    al,BYTE PTR [rax+0x1]
   14002c0c5:	add    BYTE PTR [rax],al
   14002c0c7:	add    BYTE PTR [rbx+0x0],dl
   14002c0ca:	add    BYTE PTR [rax],al
   14002c0cc:	add    BYTE PTR [rax],al
   14002c0ce:	add    BYTE PTR [rax],al
   14002c0d0:	js     0x14002c09a
   14002c0d2:	add    al,BYTE PTR [rax+0x1]
   14002c0d5:	add    BYTE PTR [rax],al
   14002c0d7:	add    BYTE PTR [rdx],dh
   14002c0d9:	add    BYTE PTR [rax],al
   14002c0db:	add    BYTE PTR [rax],al
   14002c0dd:	add    BYTE PTR [rax],al
   14002c0df:	add    BYTE PTR [rax],dl
   14002c0e1:	fld    DWORD PTR [rdx]
   14002c0e3:	rex add DWORD PTR [rax],eax
   14002c0e6:	add    BYTE PTR [rax],al
   14002c0e8:	jns    0x14002c0ea
   14002c0ea:	add    BYTE PTR [rax],al
   14002c0ec:	add    BYTE PTR [rax],al
   14002c0ee:	add    BYTE PTR [rax],al
   14002c0f0:	adc    al,cl
   14002c0f2:	add    al,BYTE PTR [rax+0x1]
   14002c0f5:	add    BYTE PTR [rax],al
   14002c0f7:	add    BYTE PTR [rip+0x0],ah        # 0x14002c0fd
   14002c0fd:	add    BYTE PTR [rax],al
   14002c0ff:	add    BYTE PTR [rax],ah
   14002c101:	fld    DWORD PTR [rdx]
   14002c103:	rex add DWORD PTR [rax],eax
   14002c106:	add    BYTE PTR [rax],al
   14002c108:	add    BYTE PTR [eax],al
   14002c10b:	add    BYTE PTR [rax],al
   14002c10d:	add    BYTE PTR [rax],al
   14002c10f:	add    BYTE PTR [rax],cl
   14002c111:	enter  0x4002,0x1
   14002c115:	add    BYTE PTR [rax],al
   14002c117:	add    BYTE PTR [rax+rax*1],ah
   14002c11a:	add    BYTE PTR [rax],al
   14002c11c:	add    BYTE PTR [rax],al
   14002c11e:	add    BYTE PTR [rax],al
   14002c120:	xor    cl,bl
   14002c122:	add    al,BYTE PTR [rax+0x1]
   14002c125:	add    BYTE PTR [rax],al
   14002c127:	add    BYTE PTR [rsi+0x0],ah
   14002c12a:	add    BYTE PTR [rax],al
   14002c12c:	add    BYTE PTR [rax],al
   14002c12e:	add    BYTE PTR [rax],al
   14002c130:	rex fld DWORD PTR [rdx]
   14002c133:	rex add DWORD PTR [rax],eax
   14002c136:	add    BYTE PTR [rax],al
   14002c138:	mov    es,WORD PTR [rax]
   14002c13a:	add    BYTE PTR [rax],al
   14002c13c:	add    BYTE PTR [rax],al
   14002c13e:	add    BYTE PTR [rax],al
   14002c140:	rex enter 0x4002,0x1
   14002c145:	add    BYTE PTR [rax],al
   14002c147:	add    BYTE PTR [rbx],ch
   14002c149:	add    BYTE PTR [rax],al
   14002c14b:	add    BYTE PTR [rax],al
   14002c14d:	add    BYTE PTR [rax],al
   14002c14f:	add    BYTE PTR [rax-0x27],dl
   14002c152:	add    al,BYTE PTR [rax+0x1]
   14002c155:	add    BYTE PTR [rax],al
   14002c157:	add    BYTE PTR [rbp+0x0],ch
   14002c15a:	add    BYTE PTR [rax],al
   14002c15c:	add    BYTE PTR [rax],al
   14002c15e:	add    BYTE PTR [rax],al
   14002c160:	(bad)  
   14002c161:	fld    DWORD PTR [rdx]
   14002c163:	rex add DWORD PTR [rax],eax
   14002c166:	add    BYTE PTR [rax],al
   14002c168:	add    DWORD PTR [rax],0x0
   14002c16b:	add    BYTE PTR [rax],al
   14002c16d:	add    BYTE PTR [rax],al
   14002c16f:	add    al,dl
   14002c171:	enter  0x4002,0x1
   14002c175:	add    BYTE PTR [rax],al
   14002c177:	add    BYTE PTR [rip+0x0],bh        # 0x14002c17d
   14002c17d:	add    BYTE PTR [rax],al
   14002c17f:	add    BYTE PTR [rax-0x27],dh
   14002c182:	add    al,BYTE PTR [rax+0x1]
   14002c185:	add    BYTE PTR [rax],al
   14002c187:	add    BYTE PTR [rsi+0x0],al
   14002c18d:	add    BYTE PTR [rax],al
   14002c18f:	add    al,al
   14002c191:	enter  0x4002,0x1
   14002c195:	add    BYTE PTR [rax],al
   14002c197:	add    BYTE PTR [rbx],bh
   14002c199:	add    BYTE PTR [rax],al
   14002c19b:	add    BYTE PTR [rax],al
   14002c19d:	add    BYTE PTR [rax],al
   14002c19f:	add    BYTE PTR [rax+0x14002d9],al
   14002c1a5:	add    BYTE PTR [rax],al
   14002c1a7:	add    BYTE PTR [rax+rax*1+0x0],al
   14002c1ae:	add    BYTE PTR [rax],al
   14002c1b0:	push   0x14002c8
   14002c1b5:	add    BYTE PTR [rax],al
   14002c1b7:	add    BYTE PTR [rax],dh
   14002c1b9:	add    BYTE PTR [rax],al
   14002c1bb:	add    BYTE PTR [rax],al
   14002c1bd:	add    BYTE PTR [rax],al
   14002c1bf:	add    BYTE PTR [rax+0x14002d9],dl
   14002c1c5:	add    BYTE PTR [rax],al
   14002c1c7:	add    BYTE PTR [rbp+0x0],bl
   14002c1cd:	add    BYTE PTR [rax],al
   14002c1cf:	add    BYTE PTR [rax+0x14002d9],ah
   14002c1d5:	add    BYTE PTR [rax],al
   14002c1d7:	add    BYTE PTR [rdi+0x0],dh
   14002c1da:	add    BYTE PTR [rax],al
   14002c1dc:	add    BYTE PTR [rax],al
   14002c1de:	add    BYTE PTR [rax],al
   14002c1e0:	mov    al,0xd9
   14002c1e2:	add    al,BYTE PTR [rax+0x1]
   14002c1e5:	add    BYTE PTR [rax],al
   14002c1e7:	add    BYTE PTR [rbp+0x0],dh
   14002c1ea:	add    BYTE PTR [rax],al
   14002c1ec:	add    BYTE PTR [rax],al
   14002c1ee:	add    BYTE PTR [rax],al
   14002c1f0:	rcr    cl,0x2
   14002c1f3:	rex add DWORD PTR [rax],eax
   14002c1f6:	add    BYTE PTR [rax],al
   14002c1f8:	push   rbp
   14002c1f9:	add    BYTE PTR [rax],al
   14002c1fb:	add    BYTE PTR [rax],al
   14002c1fd:	add    BYTE PTR [rax],al
   14002c1ff:	add    BYTE PTR [rax-0x39],bh
   14002c202:	add    al,BYTE PTR [rax+0x1]
   14002c205:	add    BYTE PTR [rax],al
   14002c207:	add    BYTE PTR [rdx],dl
   14002c209:	add    BYTE PTR [rax],al
   14002c20b:	add    BYTE PTR [rax],al
   14002c20d:	add    BYTE PTR [rax],al
   14002c20f:	add    al,dl
   14002c211:	fld    DWORD PTR [rdx]
   14002c213:	rex add DWORD PTR [rax],eax
   14002c216:	add    BYTE PTR [rax],al
   14002c218:	xchg   esi,eax
   14002c219:	add    BYTE PTR [rax],al
   14002c21b:	add    BYTE PTR [rax],al
   14002c21d:	add    BYTE PTR [rax],al
   14002c21f:	add    al,ah
   14002c221:	fld    DWORD PTR [rdx]
   14002c223:	rex add DWORD PTR [rax],eax
   14002c226:	add    BYTE PTR [rax],al
   14002c228:	push   rsp
   14002c229:	add    BYTE PTR [rax],al
   14002c22b:	add    BYTE PTR [rax],al
   14002c22d:	add    BYTE PTR [rax],al
   14002c22f:	add    al,dh
   14002c231:	fld    DWORD PTR [rdx]
   14002c233:	rex add DWORD PTR [rax],eax
   14002c236:	add    BYTE PTR [rax],al
   14002c238:	xchg   edi,eax
   14002c239:	add    BYTE PTR [rax],al
   14002c23b:	add    BYTE PTR [rax],al
   14002c23d:	add    BYTE PTR [rax],al
   14002c23f:	add    BYTE PTR [rax+0x14002c7],al
   14002c245:	add    BYTE PTR [rax],al
   14002c247:	add    BYTE PTR [rbx],dl
	...
   14002c251:	fiadd  DWORD PTR [rdx]
   14002c253:	rex add DWORD PTR [rax],eax
   14002c256:	add    BYTE PTR [rax],al
   14002c258:	lea    eax,[rax]
   14002c25a:	add    BYTE PTR [rax],al
   14002c25c:	add    BYTE PTR [rax],al
   14002c25e:	add    BYTE PTR [rax],al
   14002c260:	cwde   
   14002c261:	enter  0x4002,0x1
   14002c265:	add    BYTE PTR [rax],al
   14002c267:	add    BYTE PTR [rsi],dh
   14002c269:	add    BYTE PTR [rax],al
   14002c26b:	add    BYTE PTR [rax],al
   14002c26d:	add    BYTE PTR [rax],al
   14002c26f:	add    BYTE PTR [rax],dl
   14002c271:	fiadd  DWORD PTR [rdx]
   14002c273:	rex add DWORD PTR [rax],eax
   14002c276:	add    BYTE PTR [rax],al
   14002c278:	jle    0x14002c27a
   14002c27a:	add    BYTE PTR [rax],al
   14002c27c:	add    BYTE PTR [rax],al
   14002c27e:	add    BYTE PTR [rax],al
   14002c280:	mov    bh,al
   14002c282:	add    al,BYTE PTR [rax+0x1]
   14002c285:	add    BYTE PTR [rax],al
   14002c287:	add    BYTE PTR [rax+rax*1],dl
   14002c28a:	add    BYTE PTR [rax],al
   14002c28c:	add    BYTE PTR [rax],al
   14002c28e:	add    BYTE PTR [rax],al
   14002c290:	and    dl,bl
   14002c292:	add    al,BYTE PTR [rax+0x1]
   14002c295:	add    BYTE PTR [rax],al
   14002c297:	add    BYTE PTR [rsi+0x0],dl
   14002c29a:	add    BYTE PTR [rax],al
   14002c29c:	add    BYTE PTR [rax],al
   14002c29e:	add    BYTE PTR [rax],al
   14002c2a0:	nop
   14002c2a1:	mov    DWORD PTR [rdx],0x140
   14002c2a7:	add    BYTE PTR [rip+0x0],dl        # 0x14002c2ad
   14002c2ad:	add    BYTE PTR [rax],al
   14002c2af:	add    BYTE PTR [rax],dh
   14002c2b1:	fiadd  DWORD PTR [rdx]
   14002c2b3:	rex add DWORD PTR [rax],eax
   14002c2b6:	add    BYTE PTR [rax],al
   14002c2b8:	push   rdi
   14002c2b9:	add    BYTE PTR [rax],al
   14002c2bb:	add    BYTE PTR [rax],al
   14002c2bd:	add    BYTE PTR [rax],al
   14002c2bf:	add    BYTE PTR [rax-0x26],al
   14002c2c2:	add    al,BYTE PTR [rax+0x1]
   14002c2c5:	add    BYTE PTR [rax],al
   14002c2c7:	add    BYTE PTR [rax+0x0],bl
   14002c2cd:	add    BYTE PTR [rax],al
   14002c2cf:	add    BYTE PTR [rax-0x26],dl
   14002c2d2:	add    al,BYTE PTR [rax+0x1]
   14002c2d5:	add    BYTE PTR [rax],al
   14002c2d7:	add    BYTE PTR [rax+rax*1+0x0],cl
   14002c2de:	add    BYTE PTR [rax],al
   14002c2e0:	(bad)  
   14002c2e1:	fiadd  DWORD PTR [rdx]
   14002c2e3:	rex add DWORD PTR [rax],eax
   14002c2e6:	add    BYTE PTR [rax],al
   14002c2e8:	lahf   
   14002c2e9:	add    BYTE PTR [rax],al
   14002c2eb:	add    BYTE PTR [rax],al
   14002c2ed:	add    BYTE PTR [rax],al
   14002c2ef:	add    BYTE PTR [rax-0x26],dh
   14002c2f2:	add    al,BYTE PTR [rax+0x1]
   14002c2f5:	add    BYTE PTR [rax],al
   14002c2f7:	add    BYTE PTR [rax+0x0],ch
   14002c2fd:	add    BYTE PTR [rax],al
   14002c2ff:	add    BYTE PTR [rax+0x14002c7],bl
   14002c305:	add    BYTE PTR [rax],al
   14002c307:	add    BYTE PTR [rsi],dl
   14002c309:	add    BYTE PTR [rax],al
   14002c30b:	add    BYTE PTR [rax],al
   14002c30d:	add    BYTE PTR [rax],al
   14002c30f:	add    BYTE PTR [rax+0x14002da],al
   14002c315:	add    BYTE PTR [rax],al
   14002c317:	add    BYTE PTR [rax+0x0],bl
   14002c31a:	add    BYTE PTR [rax],al
   14002c31c:	add    BYTE PTR [rax],al
   14002c31e:	add    BYTE PTR [rax],al
   14002c320:	movabs al,ds:0x17000000014002c7
   14002c329:	add    BYTE PTR [rax],al
   14002c32b:	add    BYTE PTR [rax],al
   14002c32d:	add    BYTE PTR [rax],al
   14002c32f:	add    BYTE PTR [rax+0x14002da],dl
   14002c335:	add    BYTE PTR [rax],al
   14002c337:	add    BYTE PTR [rcx+0x0],bl
   14002c33a:	add    BYTE PTR [rax],al
   14002c33c:	add    BYTE PTR [rax],al
   14002c33e:	add    BYTE PTR [rax],al
   14002c340:	enter  0x2c8,0x40
   14002c344:	add    DWORD PTR [rax],eax
   14002c346:	add    BYTE PTR [rax],al
   14002c348:	cmp    al,0x0
   14002c34a:	add    BYTE PTR [rax],al
   14002c34c:	add    BYTE PTR [rax],al
   14002c34e:	add    BYTE PTR [rax],al
   14002c350:	movabs al,ds:0x85000000014002da
   14002c359:	add    BYTE PTR [rax],al
   14002c35b:	add    BYTE PTR [rax],al
   14002c35d:	add    BYTE PTR [rax],al
   14002c35f:	add    BYTE PTR [rax+0x14002da],dh
   14002c365:	add    BYTE PTR [rax],al
   14002c367:	add    BYTE PTR [rdi+0x0],ah
   14002c36d:	add    BYTE PTR [rax],al
   14002c36f:	add    al,al
   14002c371:	fiadd  DWORD PTR [rdx]
   14002c373:	rex add DWORD PTR [rax],eax
   14002c376:	add    BYTE PTR [rax],al
   14002c378:	jbe    0x14002c37a
   14002c37a:	add    BYTE PTR [rax],al
   14002c37c:	add    BYTE PTR [rax],al
   14002c37e:	add    BYTE PTR [rax],al
   14002c380:	rcr    dl,1
   14002c382:	add    al,BYTE PTR [rax+0x1]
   14002c385:	add    BYTE PTR [rax],al
   14002c387:	add    BYTE PTR [rax+rax*1+0x0],bl
   14002c38e:	add    BYTE PTR [rax],al
   14002c390:	mov    al,0xc7
   14002c392:	add    al,BYTE PTR [rax+0x1]
   14002c395:	add    BYTE PTR [rax],al
   14002c397:	add    BYTE PTR [rcx],bl
   14002c399:	add    BYTE PTR [rax],al
   14002c39b:	add    BYTE PTR [rax],al
   14002c39d:	add    BYTE PTR [rax],al
   14002c39f:	add    al,ah
   14002c3a1:	fiadd  DWORD PTR [rdx]
   14002c3a3:	rex add DWORD PTR [rax],eax
   14002c3a6:	add    BYTE PTR [rax],al
   14002c3a8:	pop    rbx
   14002c3a9:	add    BYTE PTR [rax],al
   14002c3ab:	add    BYTE PTR [rax],al
   14002c3ad:	add    BYTE PTR [rax],al
   14002c3af:	add    al,bh
   14002c3b1:	mov    DWORD PTR [rdx],0x140
   14002c3b7:	add    BYTE PTR [rdx],ah
   14002c3b9:	add    BYTE PTR [rax],al
   14002c3bb:	add    BYTE PTR [rax],al
   14002c3bd:	add    BYTE PTR [rax],al
   14002c3bf:	add    al,dh
   14002c3c1:	fiadd  DWORD PTR [rdx]
   14002c3c3:	rex add DWORD PTR [rax],eax
   14002c3c6:	add    BYTE PTR [rax],al
   14002c3c8:	add    BYTE PTR fs:[rax],al
   14002c3cb:	add    BYTE PTR [rax],al
   14002c3cd:	add    BYTE PTR [rax],al
   14002c3cf:	add    BYTE PTR [rax],al
   14002c3d1:	fild   DWORD PTR [rdx]
   14002c3d3:	rex add DWORD PTR [rax],eax
   14002c3d6:	add    BYTE PTR [rax],al
   14002c3d8:	mov    esi,0x0
   14002c3dd:	add    BYTE PTR [rax],al
   14002c3df:	add    BYTE PTR [rax],dl
   14002c3e1:	fild   DWORD PTR [rdx]
   14002c3e3:	rex add DWORD PTR [rax],eax
   14002c3e6:	add    BYTE PTR [rax],al
   14002c3e8:	ret    
   14002c3e9:	add    BYTE PTR [rax],al
   14002c3eb:	add    BYTE PTR [rax],al
   14002c3ed:	add    BYTE PTR [rax],al
   14002c3ef:	add    BYTE PTR [rax],ah
   14002c3f1:	fild   DWORD PTR [rdx]
   14002c3f3:	rex add DWORD PTR [rax],eax
   14002c3f6:	add    BYTE PTR [rax],al
   14002c3f8:	mov    al,0x0
   14002c3fa:	add    BYTE PTR [rax],al
   14002c3fc:	add    BYTE PTR [rax],al
   14002c3fe:	add    BYTE PTR [rax],al
   14002c400:	xor    bl,bl
   14002c402:	add    al,BYTE PTR [rax+0x1]
   14002c405:	add    BYTE PTR [rax],al
   14002c407:	add    BYTE PTR [rax+0x0],bh
   14002c40d:	add    BYTE PTR [rax],al
   14002c40f:	add    BYTE PTR [rax-0x25],al
   14002c412:	add    al,BYTE PTR [rax+0x1]
   14002c415:	add    BYTE PTR [rax],al
   14002c417:	add    bl,cl
   14002c419:	add    BYTE PTR [rax],al
   14002c41b:	add    BYTE PTR [rax],al
   14002c41d:	add    BYTE PTR [rax],al
   14002c41f:	add    BYTE PTR [rax-0x25],dl
   14002c422:	add    al,BYTE PTR [rax+0x1]
   14002c425:	add    BYTE PTR [rax],al
   14002c427:	add    bh,al
   14002c429:	add    BYTE PTR [rax],al
   14002c42b:	add    BYTE PTR [rax],al
   14002c42d:	add    BYTE PTR [rax],al
   14002c42f:	add    BYTE PTR [rax+0x14002c7],bh
   14002c435:	add    BYTE PTR [rax],al
   14002c437:	add    BYTE PTR [rdx],bl
   14002c439:	add    BYTE PTR [rax],al
   14002c43b:	add    BYTE PTR [rax],al
   14002c43d:	add    BYTE PTR [rax],al
   14002c43f:	add    BYTE PTR [rax-0x25],ah
   14002c442:	add    al,BYTE PTR [rax+0x1]
   14002c445:	add    BYTE PTR [rax],al
   14002c447:	add    BYTE PTR [rax+rax*1+0x0],bl
   14002c44b:	add    BYTE PTR [rax],al
   14002c44d:	add    BYTE PTR [rax],al
   14002c44f:	add    BYTE PTR [rax],al
   14002c451:	rol    DWORD PTR [rdx],cl
   14002c453:	rex add DWORD PTR [rax],eax
   14002c456:	add    BYTE PTR [rax],al
   14002c458:	jrcxz  0x14002c45a
   14002c45a:	add    BYTE PTR [rax],al
   14002c45c:	add    BYTE PTR [rax],al
   14002c45e:	add    BYTE PTR [rax],al
   14002c460:	jo     0x14002c43d
   14002c462:	add    al,BYTE PTR [rax+0x1]
   14002c465:	add    BYTE PTR [rax],al
   14002c467:	add    dl,al
   14002c469:	add    BYTE PTR [rax],al
   14002c46b:	add    BYTE PTR [rax],al
   14002c46d:	add    BYTE PTR [rax],al
   14002c46f:	add    BYTE PTR [rax+0x14002db],cl
   14002c475:	add    BYTE PTR [rax],al
   14002c477:	add    BYTE PTR [rbp+0x0],bh
   14002c47d:	add    BYTE PTR [rax],al
   14002c47f:	add    BYTE PTR [rax+0x14002db],ah
   14002c485:	add    BYTE PTR [rax],al
   14002c487:	add    BYTE PTR [rsi+0x0],ah
   14002c48d:	add    BYTE PTR [rax],al
   14002c48f:	add    BYTE PTR [rax+0x14002db],bh
   14002c495:	add    BYTE PTR [rax],al
   14002c497:	add    BYTE PTR [rcx+0x0],bl
   14002c49d:	add    BYTE PTR [rax],al
   14002c49f:	add    al,al
   14002c4a1:	mov    DWORD PTR [rdx],0x140
   14002c4a7:	add    BYTE PTR [rbx],bl
   14002c4a9:	add    BYTE PTR [rax],al
   14002c4ab:	add    BYTE PTR [rax],al
   14002c4ad:	add    BYTE PTR [rax],al
   14002c4af:	add    al,dl
   14002c4b1:	fild   DWORD PTR [rdx]
   14002c4b3:	rex add DWORD PTR [rax],eax
   14002c4b6:	add    BYTE PTR [rax],al
   14002c4b8:	(bad)  
   14002c4b9:	add    BYTE PTR [rax],al
   14002c4bb:	add    BYTE PTR [rax],al
   14002c4bd:	add    BYTE PTR [rax],al
   14002c4bf:	add    al,ah
   14002c4c1:	fild   DWORD PTR [rdx]
   14002c4c3:	rex add DWORD PTR [rax],eax
   14002c4c6:	add    BYTE PTR [rax],al
   14002c4c8:	pop    rbp
   14002c4c9:	add    BYTE PTR [rax],al
   14002c4cb:	add    BYTE PTR [rax],al
   14002c4cd:	add    BYTE PTR [rax],al
   14002c4cf:	add    BYTE PTR [rax+0x14002c8],al
   14002c4d5:	add    BYTE PTR [rax],al
   14002c4d7:	add    BYTE PTR [rbx],dh
   14002c4d9:	add    BYTE PTR [rax],al
   14002c4db:	add    BYTE PTR [rax],al
   14002c4dd:	add    BYTE PTR [rax],al
   14002c4df:	add    al,dh
   14002c4e1:	fild   DWORD PTR [rdx]
   14002c4e3:	rex add DWORD PTR [rax],eax
   14002c4e6:	add    BYTE PTR [rax],al
   14002c4e8:	jp     0x14002c4ea
   14002c4ea:	add    BYTE PTR [rax],al
   14002c4ec:	add    BYTE PTR [rax],al
   14002c4ee:	add    BYTE PTR [rax],al
   14002c4f0:	call   0x14142c7bd
   14002c4f5:	add    BYTE PTR [rax],al
   14002c4f7:	add    BYTE PTR [rax+0x0],al
   14002c4fa:	add    BYTE PTR [rax],al
   14002c4fc:	add    BYTE PTR [rax],al
   14002c4fe:	add    BYTE PTR [rax],al
   14002c500:	add    ah,bl
   14002c502:	add    al,BYTE PTR [rax+0x1]
   14002c505:	add    BYTE PTR [rax],al
   14002c507:	add    BYTE PTR [rdx+0x0],cl
   14002c50d:	add    BYTE PTR [rax],al
   14002c50f:	add    BYTE PTR [rax+0x14002c8],ch
   14002c515:	add    BYTE PTR [rax],al
   14002c517:	add    BYTE PTR [rax],bh
   14002c519:	add    BYTE PTR [rax],al
   14002c51b:	add    BYTE PTR [rax],al
   14002c51d:	add    BYTE PTR [rax],al
   14002c51f:	add    BYTE PTR [rax],dl
   14002c521:	fadd   QWORD PTR [rdx]
   14002c523:	rex add DWORD PTR [rax],eax
   14002c526:	add    BYTE PTR [rax],al
   14002c528:	add    BYTE PTR [rax],0x0
   14002c52b:	add    BYTE PTR [rax],al
   14002c52d:	add    BYTE PTR [rax],al
   14002c52f:	add    BYTE PTR [rax+0x14002c8],dh
   14002c535:	add    BYTE PTR [rax],al
   14002c537:	add    BYTE PTR [rcx],bh
   14002c539:	add    BYTE PTR [rax],al
   14002c53b:	add    BYTE PTR [rax],al
   14002c53d:	add    BYTE PTR [rax],al
   14002c53f:	add    BYTE PTR [rax],ah
   14002c541:	fadd   QWORD PTR [rdx]
   14002c543:	rex add DWORD PTR [rax],eax
   14002c546:	add    BYTE PTR [rax],al
   14002c548:	add    DWORD PTR [rax],0x0
   14002c54e:	add    BYTE PTR [rax],al
   14002c550:	enter  0x2c7,0x40
   14002c554:	add    DWORD PTR [rax],eax
   14002c556:	add    BYTE PTR [rax],al
   14002c558:	sbb    al,0x0
   14002c55a:	add    BYTE PTR [rax],al
   14002c55c:	add    BYTE PTR [rax],al
   14002c55e:	add    BYTE PTR [rax],al
   14002c560:	xor    ah,bl
   14002c562:	add    al,BYTE PTR [rax+0x1]
   14002c565:	add    BYTE PTR [rax],al
   14002c567:	add    BYTE PTR [rsi+0x0],bl
   14002c56a:	add    BYTE PTR [rax],al
   14002c56c:	add    BYTE PTR [rax],al
   14002c56e:	add    BYTE PTR [rax],al
   14002c570:	rex fadd QWORD PTR [rdx]
   14002c573:	rex add DWORD PTR [rax],eax
   14002c576:	add    BYTE PTR [rax],al
   14002c578:	outs   dx,BYTE PTR ds:[rsi]
   14002c579:	add    BYTE PTR [rax],al
   14002c57b:	add    BYTE PTR [rax],al
   14002c57d:	add    BYTE PTR [rax],al
   14002c57f:	add    al,dl
   14002c581:	mov    DWORD PTR [rdx],0x140
   14002c587:	add    BYTE PTR [rip+0x0],bl        # 0x14002c58d
   14002c58d:	add    BYTE PTR [rax],al
   14002c58f:	add    BYTE PTR [rax-0x24],dl
   14002c592:	add    al,BYTE PTR [rax+0x1]
   14002c595:	add    BYTE PTR [rax],al
   14002c597:	add    BYTE PTR [rdi+0x0],bl
   14002c59a:	add    BYTE PTR [rax],al
   14002c59c:	add    BYTE PTR [rax],al
   14002c59e:	add    BYTE PTR [rax],al
   14002c5a0:	nop
   14002c5a1:	enter  0x4002,0x1
   14002c5a5:	add    BYTE PTR [rax],al
   14002c5a7:	add    BYTE PTR [rip+0x0],dh        # 0x14002c5ad
   14002c5ad:	add    BYTE PTR [rax],al
   14002c5af:	add    BYTE PTR [rax-0x24],ah
   14002c5b2:	add    al,BYTE PTR [rax+0x1]
   14002c5b5:	add    BYTE PTR [rax],al
   14002c5b7:	add    BYTE PTR [rax+rax*1+0x0],bh
   14002c5bb:	add    BYTE PTR [rax],al
   14002c5bd:	add    BYTE PTR [rax],al
   14002c5bf:	add    al,ch
   14002c5c1:	mov    DWORD PTR [rdx],0x140
   14002c5c7:	add    BYTE PTR [rax],ah
   14002c5c9:	add    BYTE PTR [rax],al
   14002c5cb:	add    BYTE PTR [rax],al
   14002c5cd:	add    BYTE PTR [rax],al
   14002c5cf:	add    BYTE PTR [rax-0x24],dh
   14002c5d2:	add    al,BYTE PTR [rax+0x1]
   14002c5d5:	add    BYTE PTR [rax],al
   14002c5d7:	add    BYTE PTR [rdx+0x0],ah
   14002c5da:	add    BYTE PTR [rax],al
   14002c5dc:	add    BYTE PTR [rax],al
   14002c5de:	add    BYTE PTR [rax],al
   14002c5e0:	fadd   st,st(7)
   14002c5e2:	add    al,BYTE PTR [rax+0x1]
   14002c5e5:	add    BYTE PTR [rax],al
   14002c5e7:	add    BYTE PTR [rsi],bl
   14002c5e9:	add    BYTE PTR [rax],al
   14002c5eb:	add    BYTE PTR [rax],al
   14002c5ed:	add    BYTE PTR [rax],al
   14002c5ef:	add    BYTE PTR [rax+0x14002dc],al
   14002c5f5:	add    BYTE PTR [rax],al
   14002c5f7:	add    BYTE PTR [rax+0x0],ah
   14002c5fa:	add    BYTE PTR [rax],al
   14002c5fc:	add    BYTE PTR [rax],al
   14002c5fe:	add    BYTE PTR [rax],al
   14002c600:	mov    al,cl
   14002c602:	add    al,BYTE PTR [rax+0x1]
   14002c605:	add    BYTE PTR [rax],al
   14002c607:	add    BYTE PTR [rax+rax*1],dh
   14002c60a:	add    BYTE PTR [rax],al
   14002c60c:	add    BYTE PTR [rax],al
   14002c60e:	add    BYTE PTR [rax],al
   14002c610:	nop
   14002c611:	fadd   QWORD PTR [rdx]
   14002c613:	rex add DWORD PTR [rax],eax
   14002c616:	add    BYTE PTR [rax],al
   14002c618:	sahf   
   14002c619:	add    BYTE PTR [rax],al
   14002c61b:	add    BYTE PTR [rax],al
   14002c61d:	add    BYTE PTR [rax],al
   14002c61f:	add    BYTE PTR [rax+0x14002dc],ch
   14002c625:	add    BYTE PTR [rax],al
   14002c627:	add    BYTE PTR [rbx+0x0],bh
   14002c62a:	add    BYTE PTR [rax],al
   14002c62c:	add    BYTE PTR [rax],al
   14002c62e:	add    BYTE PTR [rax],al
   14002c630:	and    al,cl
   14002c632:	add    al,BYTE PTR [rax+0x1]
   14002c635:	add    BYTE PTR [rax],al
   14002c637:	add    BYTE PTR [rdi],ah
   14002c639:	add    BYTE PTR [rax],al
   14002c63b:	add    BYTE PTR [rax],al
   14002c63d:	add    BYTE PTR [rax],al
   14002c63f:	add    al,al
   14002c641:	fadd   QWORD PTR [rdx]
   14002c643:	rex add DWORD PTR [rax],eax
   14002c646:	add    BYTE PTR [rax],al
   14002c648:	imul   eax,DWORD PTR [rax],0x0
   14002c64e:	add    BYTE PTR [rax],al
   14002c650:	rcr    ah,1
   14002c652:	add    al,BYTE PTR [rax+0x1]
   14002c655:	add    BYTE PTR [rax],al
   14002c657:	add    BYTE PTR [rdi+0x0],ch
   14002c65a:	add    BYTE PTR [rax],al
   14002c65c:	add    BYTE PTR [rax],al
   14002c65e:	add    BYTE PTR [rax],al
   14002c660:	loopne 0x14002c63e
   14002c662:	add    al,BYTE PTR [rax+0x1]
   14002c665:	add    BYTE PTR [rax],al
   14002c667:	add    BYTE PTR [rbx],al
   14002c669:	add    BYTE PTR [rax],al
   14002c66b:	add    BYTE PTR [rax],al
   14002c66d:	add    BYTE PTR [rax],al
   14002c66f:	add    al,dh
   14002c671:	fadd   QWORD PTR [rdx]
   14002c673:	rex add DWORD PTR [rax],eax
   14002c676:	add    BYTE PTR [rax],al
   14002c678:	loop   0x14002c67a
   14002c67a:	add    BYTE PTR [rax],al
   14002c67c:	add    BYTE PTR [rax],al
   14002c67e:	add    BYTE PTR [rax],al
   14002c680:	add    ch,bl
   14002c682:	add    al,BYTE PTR [rax+0x1]
   14002c685:	add    BYTE PTR [rax],al
   14002c687:	add    BYTE PTR [rax+0x0],dl
   14002c68d:	add    BYTE PTR [rax],al
   14002c68f:	add    BYTE PTR [rax],dl
   14002c691:	fld    QWORD PTR [rdx]
   14002c693:	rex add DWORD PTR [rax],eax
   14002c696:	add    BYTE PTR [rax],al
   14002c698:	movabs eax,ds:0x2000000000000000
   14002c6a1:	fld    QWORD PTR [rdx]
   14002c6a3:	rex add DWORD PTR [rax],eax
   14002c6a6:	add    BYTE PTR [rax],al
   14002c6a8:	mov    dl,0x0
   14002c6aa:	add    BYTE PTR [rax],al
   14002c6ac:	add    BYTE PTR [rax],al
   14002c6ae:	add    BYTE PTR [rax],al
   14002c6b0:	xor    ch,bl
   14002c6b2:	add    al,BYTE PTR [rax+0x1]
   14002c6b5:	add    BYTE PTR [rax],al
   14002c6b7:	add    BYTE PTR [rdx+0x0],ch
   14002c6bd:	add    BYTE PTR [rax],al
   14002c6bf:	add    BYTE PTR [rax-0x23],al
   14002c6c2:	add    al,BYTE PTR [rax+0x1]
   14002c6c5:	add    BYTE PTR [rax],al
   14002c6c7:	add    BYTE PTR [rsi+0x0],al
   14002c6ca:	add    BYTE PTR [rax],al
   14002c6cc:	add    BYTE PTR [rax],al
   14002c6ce:	add    BYTE PTR [rax],al
   14002c6d0:	push   rax
   14002c6d1:	fld    QWORD PTR [rdx]
   14002c6d3:	rex add DWORD PTR [rax],eax
   14002c6d6:	add    BYTE PTR [rax],al
   14002c6d8:	jo     0x14002c6da
   14002c6da:	add    BYTE PTR [rax],al
   14002c6dc:	add    BYTE PTR [rax],al
   14002c6de:	add    BYTE PTR [rax],al
   14002c6e0:	(bad)  
   14002c6e1:	add    BYTE PTR [rdx+0x0],dh
   14002c6e4:	add    BYTE PTR [rax],al
   14002c6e6:	add    BYTE PTR [rax],al
   14002c6e8:	(bad)  
   14002c6e9:	add    BYTE PTR [rdi+0x0],ah
   14002c6ec:	add    BYTE PTR [rax],al
   14002c6ee:	add    BYTE PTR [rax],al
   14002c6f0:	movsxd eax,DWORD PTR [rax]
   14002c6f2:	(bad)  
   14002c6f3:	add    BYTE PTR [rax],al
   14002c6f5:	add    BYTE PTR [rax],al
   14002c6f7:	add    BYTE PTR [rdx+0x0],bh
   14002c6fa:	push   0x43002d00
   14002c6ff:	add    BYTE PTR [rax+0x0],cl
   14002c702:	push   rbx
   14002c703:	add    BYTE PTR [rax],al
   14002c705:	add    BYTE PTR [rax],al
   14002c707:	add    BYTE PTR [rbx+0x0],ah
   14002c70a:	jae    0x14002c70c
   14002c70c:	add    BYTE PTR [rax],al
   14002c70e:	add    BYTE PTR [rax],al
   14002c710:	add    BYTE PTR fs:[rcx+0x0],ah
   14002c714:	add    BYTE PTR [rax],al
   14002c716:	add    BYTE PTR [rax],al
   14002c718:	add    BYTE PTR fs:[rbp+0x0],ah
   14002c71c:	add    BYTE PTR [rax],al
   14002c71e:	add    BYTE PTR [rax],al
   14002c720:	add    BYTE PTR gs:[rax+rax*1+0x0],ch
   14002c725:	add    BYTE PTR [rax],al
   14002c727:	add    BYTE PTR [rbp+0x0],ah
   14002c72a:	outs   dx,BYTE PTR ds:[rsi]
   14002c72b:	add    BYTE PTR [rax],al
   14002c72d:	add    BYTE PTR [rax],al
   14002c72f:	add    BYTE PTR [rbp+0x0],ah
   14002c732:	jae    0x14002c734
   14002c734:	add    BYTE PTR [rax],al
   14002c736:	add    BYTE PTR [rax],al
   14002c738:	data16 add BYTE PTR [rcx+0x0],ch
   14002c73c:	add    BYTE PTR [rax],al
   14002c73e:	add    BYTE PTR [rax],al
   14002c740:	data16 add BYTE PTR [rdx+0x0],dh
   14002c744:	add    BYTE PTR [rax],al
   14002c746:	add    BYTE PTR [rax],al
   14002c748:	push   0x6500
   14002c74d:	add    BYTE PTR [rax],al
   14002c74f:	add    BYTE PTR [rax+0x0],ch
   14002c752:	jne    0x14002c754
   14002c754:	add    BYTE PTR [rax],al
   14002c756:	add    BYTE PTR [rax],al
   14002c758:	imul   eax,DWORD PTR [rax],0x73
   14002c75e:	add    BYTE PTR [rax],al
   14002c760:	imul   eax,DWORD PTR [rax],0x74
   14002c766:	add    BYTE PTR [rax],al
   14002c768:	push   0x0
   14002c76a:	(bad)  
   14002c76b:	add    BYTE PTR [rax],al
   14002c76d:	add    BYTE PTR [rax],al
   14002c76f:	add    BYTE PTR [rbx+0x0],ch
   14002c772:	outs   dx,DWORD PTR ds:[rsi]
   14002c773:	add    BYTE PTR [rax],al
   14002c775:	add    BYTE PTR [rax],al
   14002c777:	add    BYTE PTR [rsi+0x0],ch
   14002c77a:	ins    BYTE PTR es:[rdi],dx
   14002c77b:	add    BYTE PTR [rax],al
   14002c77d:	add    BYTE PTR [rax],al
   14002c77f:	add    BYTE PTR [rsi+0x0],ch
   14002c782:	outs   dx,DWORD PTR ds:[rsi]
   14002c783:	add    BYTE PTR [rax],al
   14002c785:	add    BYTE PTR [rax],al
   14002c787:	add    BYTE PTR [rax+0x0],dh
   14002c78a:	ins    BYTE PTR es:[rdi],dx
   14002c78b:	add    BYTE PTR [rax],al
   14002c78d:	add    BYTE PTR [rax],al
   14002c78f:	add    BYTE PTR [rax+0x0],dh
   14002c792:	je     0x14002c794
   14002c794:	add    BYTE PTR [rax],al
   14002c796:	add    BYTE PTR [rax],al
   14002c798:	jb     0x14002c79a
   14002c79a:	outs   dx,DWORD PTR ds:[rsi]
   14002c79b:	add    BYTE PTR [rax],al
   14002c79d:	add    BYTE PTR [rax],al
   14002c79f:	add    BYTE PTR [rdx+0x0],dh
   14002c7a2:	jne    0x14002c7a4
   14002c7a4:	add    BYTE PTR [rax],al
   14002c7a6:	add    BYTE PTR [rax],al
   14002c7a8:	push   0x7200
   14002c7ad:	add    BYTE PTR [rax],al
   14002c7af:	add    BYTE PTR [rbx+0x0],dh
   14002c7b2:	imul   eax,DWORD PTR [rax],0x0
   14002c7b5:	add    BYTE PTR [rax],al
   14002c7b7:	add    BYTE PTR [rbx+0x0],dh
   14002c7ba:	jno    0x14002c7bc
   14002c7bc:	add    BYTE PTR [rax],al
   14002c7be:	add    BYTE PTR [rax],al
   14002c7c0:	jae    0x14002c7c2
   14002c7c2:	jbe    0x14002c7c4
   14002c7c4:	add    BYTE PTR [rax],al
   14002c7c6:	add    BYTE PTR [rax],al
   14002c7c8:	je     0x14002c7ca
   14002c7ca:	push   0x0
   14002c7cf:	add    BYTE PTR [rax+rax*1+0x72],dh
   14002c7d3:	add    BYTE PTR [rax],al
   14002c7d5:	add    BYTE PTR [rax],al
   14002c7d7:	add    BYTE PTR [rbp+0x0],dh
   14002c7da:	jb     0x14002c7dc
   14002c7dc:	add    BYTE PTR [rax],al
   14002c7de:	add    BYTE PTR [rax],al
   14002c7e0:	imul   eax,DWORD PTR [rax],0x64
   14002c7e6:	add    BYTE PTR [rax],al
   14002c7e8:	jne    0x14002c7ea
   14002c7ea:	imul   eax,DWORD PTR [rax],0x0
   14002c7ed:	add    BYTE PTR [rax],al
   14002c7ef:	add    BYTE PTR [rdx+0x0],ah
   14002c7f2:	add    BYTE PTR gs:[rax],al
   14002c7f5:	add    BYTE PTR [rax],al
   14002c7f7:	add    BYTE PTR [rbx+0x0],dh
   14002c7fa:	ins    BYTE PTR es:[rdi],dx
   14002c7fb:	add    BYTE PTR [rax],al
   14002c7fd:	add    BYTE PTR [rax],al
   14002c7ff:	add    BYTE PTR [rbp+0x0],ah
   14002c802:	je     0x14002c804
   14002c804:	add    BYTE PTR [rax],al
   14002c806:	add    BYTE PTR [rax],al
   14002c808:	ins    BYTE PTR es:[rdi],dx
   14002c809:	add    BYTE PTR [rsi+0x0],dh
   14002c80c:	add    BYTE PTR [rax],al
   14002c80e:	add    BYTE PTR [rax],al
   14002c810:	ins    BYTE PTR es:[rdi],dx
   14002c811:	add    BYTE PTR [rax+rax*1+0x0],dh
   14002c815:	add    BYTE PTR [rax],al
   14002c817:	add    BYTE PTR [rsi+0x0],ah
   14002c81a:	(bad)  
   14002c81b:	add    BYTE PTR [rax],al
   14002c81d:	add    BYTE PTR [rax],al
   14002c81f:	add    BYTE PTR [rsi+0x0],dh
   14002c822:	imul   eax,DWORD PTR [rax],0x0
   14002c828:	push   0x7900
   14002c82d:	add    BYTE PTR [rax],al
   14002c82f:	add    BYTE PTR [rcx+0x0],ah
   14002c832:	jp     0x14002c834
   14002c834:	add    BYTE PTR [rax],al
   14002c836:	add    BYTE PTR [rax],al
   14002c838:	add    BYTE PTR gs:[rbp+0x0],dh
   14002c83c:	add    BYTE PTR [rax],al
   14002c83e:	add    BYTE PTR [rax],al
   14002c840:	ins    DWORD PTR es:[rdi],dx
   14002c841:	add    BYTE PTR [rbx+0x0],ch
   14002c844:	add    BYTE PTR [rax],al
   14002c846:	add    BYTE PTR [rax],al
   14002c848:	(bad)  
   14002c849:	add    BYTE PTR [rsi+0x0],ah
   14002c84c:	add    BYTE PTR [rax],al
   14002c84e:	add    BYTE PTR [rax],al
   14002c850:	imul   eax,DWORD PTR [rax],0x61
   14002c853:	add    BYTE PTR [rax],al
   14002c855:	add    BYTE PTR [rax],al
   14002c857:	add    BYTE PTR [rsi+0x0],ah
   14002c85a:	outs   dx,DWORD PTR ds:[rsi]
   14002c85b:	add    BYTE PTR [rax],al
   14002c85d:	add    BYTE PTR [rax],al
   14002c85f:	add    BYTE PTR [rax+0x0],ch
   14002c862:	imul   eax,DWORD PTR [rax],0x0
   14002c868:	ins    DWORD PTR es:[rdi],dx
   14002c869:	add    BYTE PTR [rbx+0x0],dh
   14002c86c:	add    BYTE PTR [rax],al
   14002c86e:	add    BYTE PTR [rax],al
   14002c870:	imul   eax,DWORD PTR [rax],0x6b
   14002c873:	add    BYTE PTR [rax],al
   14002c875:	add    BYTE PTR [rax],al
   14002c877:	add    BYTE PTR [rbx+0x0],ch
   14002c87a:	jns    0x14002c87c
   14002c87c:	add    BYTE PTR [rax],al
   14002c87e:	add    BYTE PTR [rax],al
   14002c880:	jae    0x14002c882
   14002c882:	ja     0x14002c884
   14002c884:	add    BYTE PTR [rax],al
   14002c886:	add    BYTE PTR [rax],al
   14002c888:	jne    0x14002c88a
   14002c88a:	jp     0x14002c88c
   14002c88c:	add    BYTE PTR [rax],al
   14002c88e:	add    BYTE PTR [rax],al
   14002c890:	je     0x14002c892
   14002c892:	je     0x14002c894
   14002c894:	add    BYTE PTR [rax],al
   14002c896:	add    BYTE PTR [rax],al
   14002c898:	jo     0x14002c89a
   14002c89a:	(bad)  
   14002c89b:	add    BYTE PTR [rax],al
   14002c89d:	add    BYTE PTR [rax],al
   14002c89f:	add    BYTE PTR [rdi+0x0],ah
   14002c8a2:	jne    0x14002c8a4
   14002c8a4:	add    BYTE PTR [rax],al
   14002c8a6:	add    BYTE PTR [rax],al
   14002c8a8:	je     0x14002c8aa
   14002c8aa:	(bad)  
   14002c8ab:	add    BYTE PTR [rax],al
   14002c8ad:	add    BYTE PTR [rax],al
   14002c8af:	add    BYTE PTR [rax+rax*1+0x65],dh
   14002c8b3:	add    BYTE PTR [rax],al
   14002c8b5:	add    BYTE PTR [rax],al
   14002c8b7:	add    BYTE PTR [rbx+0x0],ch
   14002c8ba:	outs   dx,BYTE PTR ds:[rsi]
   14002c8bb:	add    BYTE PTR [rax],al
   14002c8bd:	add    BYTE PTR [rax],al
   14002c8bf:	add    BYTE PTR [rbp+0x0],ch
   14002c8c2:	jb     0x14002c8c4
   14002c8c4:	add    BYTE PTR [rax],al
   14002c8c6:	add    BYTE PTR [rax],al
   14002c8c8:	jae    0x14002c8ca
   14002c8ca:	(bad)  
   14002c8cb:	add    BYTE PTR [rax],al
   14002c8cd:	add    BYTE PTR [rax],al
   14002c8cf:	add    BYTE PTR [rbp+0x0],ch
   14002c8d2:	outs   dx,BYTE PTR ds:[rsi]
   14002c8d3:	add    BYTE PTR [rax],al
   14002c8d5:	add    BYTE PTR [rax],al
   14002c8d7:	add    BYTE PTR [rdi+0x0],ah
   14002c8da:	ins    BYTE PTR es:[rdi],dx
   14002c8db:	add    BYTE PTR [rax],al
   14002c8dd:	add    BYTE PTR [rax],al
   14002c8df:	add    BYTE PTR [rbx+0x0],ch
   14002c8e2:	outs   dx,DWORD PTR ds:[rsi]
   14002c8e3:	add    BYTE PTR [rbx+0x0],ch
   14002c8e6:	add    BYTE PTR [rax],al
   14002c8e8:	jae    0x14002c8ea
   14002c8ea:	jns    0x14002c8ec
   14002c8ec:	jb     0x14002c8ee
   14002c8ee:	add    BYTE PTR [rax],al
   14002c8f0:	add    BYTE PTR fs:[rcx+0x0],ch
   14002c8f4:	jbe    0x14002c8f6
   14002c8f6:	add    BYTE PTR [rax],al
   14002c8f8:	(bad)  
   14002c8f9:	add    BYTE PTR [rdx+0x0],dh
   14002c8fc:	sub    eax,0x41005300
   14002c901:	add    BYTE PTR [rax],al
   14002c903:	add    BYTE PTR [rax],al
   14002c905:	add    BYTE PTR [rax],al
   14002c907:	add    BYTE PTR [rdx+0x0],ah
   14002c90a:	add    BYTE PTR [eip+0x47004200],ch        # 0x187030b11
   14002c911:	add    BYTE PTR [rax],al
   14002c913:	add    BYTE PTR [rax],al
   14002c915:	add    BYTE PTR [rax],al
   14002c917:	add    BYTE PTR [rbx+0x0],ah
   14002c91a:	(bad)  
   14002c91b:	add    BYTE PTR [rip+0x53004500],ch        # 0x193030e21
   14002c921:	add    BYTE PTR [rax],al
   14002c923:	add    BYTE PTR [rax],al
   14002c925:	add    BYTE PTR [rax],al
   14002c927:	add    BYTE PTR [rbx+0x0],ah
   14002c92a:	jae    0x14002c92c
   14002c92c:	sub    eax,0x5a004300
   14002c931:	add    BYTE PTR [rax],al
   14002c933:	add    BYTE PTR [rax],al
   14002c935:	add    BYTE PTR [rax],al
   14002c937:	add    BYTE PTR [rax+rax*1+0x61],ah
   14002c93b:	add    BYTE PTR [rip+0x4b004400],ch        # 0x18b030d41
   14002c941:	add    BYTE PTR [rax],al
   14002c943:	add    BYTE PTR [rax],al
   14002c945:	add    BYTE PTR [rax],al
   14002c947:	add    BYTE PTR [rax+rax*1+0x65],ah
   14002c94b:	add    BYTE PTR [rip+0x45004400],ch        # 0x185030d51
   14002c951:	add    BYTE PTR [rax],al
   14002c953:	add    BYTE PTR [rax],al
   14002c955:	add    BYTE PTR [rax],al
   14002c957:	add    BYTE PTR [rbp+0x0],ah
   14002c95a:	ins    BYTE PTR es:[rdi],dx
   14002c95b:	add    BYTE PTR [rip+0x52004700],ch        # 0x192031061
   14002c961:	add    BYTE PTR [rax],al
   14002c963:	add    BYTE PTR [rax],al
   14002c965:	add    BYTE PTR [rax],al
   14002c967:	add    BYTE PTR [rbp+0x0],ah
   14002c96a:	outs   dx,BYTE PTR ds:[rsi]
   14002c96b:	add    BYTE PTR [rip+0x53005500],ch        # 0x193031e71
   14002c971:	add    BYTE PTR [rax],al
   14002c973:	add    BYTE PTR [rax],al
   14002c975:	add    BYTE PTR [rax],al
   14002c977:	add    BYTE PTR [rsi+0x0],ah
   14002c97a:	imul   eax,DWORD PTR [rax],0x46002d
   14002c980:	rex.WB add BYTE PTR [r8],al
   14002c983:	add    BYTE PTR [rax],al
   14002c985:	add    BYTE PTR [rax],al
   14002c987:	add    BYTE PTR [rsi+0x0],ah
   14002c98a:	jb     0x14002c98c
   14002c98c:	sub    eax,0x52004600
   14002c991:	add    BYTE PTR [rax],al
   14002c993:	add    BYTE PTR [rax],al
   14002c995:	add    BYTE PTR [rax],al
   14002c997:	add    BYTE PTR [rax+0x0],ch
   14002c99a:	add    BYTE PTR gs:[rip+0x4c004900],ch        # 0x18c0312a1
   14002c9a1:	add    BYTE PTR [rax],al
   14002c9a3:	add    BYTE PTR [rax],al
   14002c9a5:	add    BYTE PTR [rax],al
   14002c9a7:	add    BYTE PTR [rax+0x0],ch
   14002c9aa:	jne    0x14002c9ac
   14002c9ac:	sub    eax,0x55004800
   14002c9b1:	add    BYTE PTR [rax],al
   14002c9b3:	add    BYTE PTR [rax],al
   14002c9b5:	add    BYTE PTR [rax],al
   14002c9b7:	add    BYTE PTR [rcx+0x0],ch
   14002c9ba:	jae    0x14002c9bc
   14002c9bc:	sub    eax,0x53004900
   14002c9c1:	add    BYTE PTR [rax],al
   14002c9c3:	add    BYTE PTR [rax],al
   14002c9c5:	add    BYTE PTR [rax],al
   14002c9c7:	add    BYTE PTR [rcx+0x0],ch
   14002c9ca:	je     0x14002c9cc
   14002c9cc:	sub    eax,0x54004900
   14002c9d1:	add    BYTE PTR [rax],al
   14002c9d3:	add    BYTE PTR [rax],al
   14002c9d5:	add    BYTE PTR [rax],al
   14002c9d7:	add    BYTE PTR [rsi+0x0],ch
   14002c9da:	ins    BYTE PTR es:[rdi],dx
   14002c9db:	add    BYTE PTR [rip+0x4c004e00],ch        # 0x18c0317e1
   14002c9e1:	add    BYTE PTR [rax],al
   14002c9e3:	add    BYTE PTR [rax],al
   14002c9e5:	add    BYTE PTR [rax],al
   14002c9e7:	add    BYTE PTR [rsi+0x0],ch
   14002c9ea:	(bad)  
   14002c9eb:	add    BYTE PTR [rip+0x4f004e00],ch        # 0x18f0317f1
   14002c9f1:	add    BYTE PTR [rax],al
   14002c9f3:	add    BYTE PTR [rax],al
   14002c9f5:	add    BYTE PTR [rax],al
   14002c9f7:	add    BYTE PTR [rax+0x0],dh
   14002c9fa:	ins    BYTE PTR es:[rdi],dx
   14002c9fb:	add    BYTE PTR [rip+0x4c005000],ch        # 0x18c031a01
   14002ca01:	add    BYTE PTR [rax],al
   14002ca03:	add    BYTE PTR [rax],al
   14002ca05:	add    BYTE PTR [rax],al
   14002ca07:	add    BYTE PTR [rax+0x0],dh
   14002ca0a:	je     0x14002ca0c
   14002ca0c:	sub    eax,0x52004200
   14002ca11:	add    BYTE PTR [rax],al
   14002ca13:	add    BYTE PTR [rax],al
   14002ca15:	add    BYTE PTR [rax],al
   14002ca17:	add    BYTE PTR [rdx+0x0],dh
   14002ca1a:	outs   dx,DWORD PTR ds:[rsi]
   14002ca1b:	add    BYTE PTR [rip+0x4f005200],ch        # 0x18f031c21
   14002ca21:	add    BYTE PTR [rax],al
   14002ca23:	add    BYTE PTR [rax],al
   14002ca25:	add    BYTE PTR [rax],al
   14002ca27:	add    BYTE PTR [rdx+0x0],dh
   14002ca2a:	jne    0x14002ca2c
   14002ca2c:	sub    eax,0x55005200
   14002ca31:	add    BYTE PTR [rax],al
   14002ca33:	add    BYTE PTR [rax],al
   14002ca35:	add    BYTE PTR [rax],al
   14002ca37:	add    BYTE PTR [rax+0x0],ch
   14002ca3a:	jb     0x14002ca3c
   14002ca3c:	sub    eax,0x52004800
   14002ca41:	add    BYTE PTR [rax],al
   14002ca43:	add    BYTE PTR [rax],al
   14002ca45:	add    BYTE PTR [rax],al
   14002ca47:	add    BYTE PTR [rbx+0x0],dh
   14002ca4a:	imul   eax,DWORD PTR [rax],0x2d
   14002ca4d:	add    BYTE PTR [rbx+0x0],dl
   14002ca50:	rex.WXB add BYTE PTR [r8],al
   14002ca53:	add    BYTE PTR [rax],al
   14002ca55:	add    BYTE PTR [rax],al
   14002ca57:	add    BYTE PTR [rbx+0x0],dh
   14002ca5a:	jno    0x14002ca5c
   14002ca5c:	sub    eax,0x4c004100
   14002ca61:	add    BYTE PTR [rax],al
   14002ca63:	add    BYTE PTR [rax],al
   14002ca65:	add    BYTE PTR [rax],al
   14002ca67:	add    BYTE PTR [rbx+0x0],dh
   14002ca6a:	jbe    0x14002ca6c
   14002ca6c:	sub    eax,0x45005300
   14002ca71:	add    BYTE PTR [rax],al
   14002ca73:	add    BYTE PTR [rax],al
   14002ca75:	add    BYTE PTR [rax],al
   14002ca77:	add    BYTE PTR [rax+rax*1+0x68],dh
   14002ca7b:	add    BYTE PTR [rip+0x48005400],ch        # 0x188031e81
   14002ca81:	add    BYTE PTR [rax],al
   14002ca83:	add    BYTE PTR [rax],al
   14002ca85:	add    BYTE PTR [rax],al
   14002ca87:	add    BYTE PTR [rax+rax*1+0x72],dh
   14002ca8b:	add    BYTE PTR [rip+0x52005400],ch        # 0x192031e91
   14002ca91:	add    BYTE PTR [rax],al
   14002ca93:	add    BYTE PTR [rax],al
   14002ca95:	add    BYTE PTR [rax],al
   14002ca97:	add    BYTE PTR [rbp+0x0],dh
   14002ca9a:	jb     0x14002ca9c
   14002ca9c:	sub    eax,0x4b005000
   14002caa1:	add    BYTE PTR [rax],al
   14002caa3:	add    BYTE PTR [rax],al
   14002caa5:	add    BYTE PTR [rax],al
   14002caa7:	add    BYTE PTR [rcx+0x0],ch
   14002caaa:	add    BYTE PTR fs:[rip+0x44004900],ch        # 0x1840313b1
   14002cab1:	add    BYTE PTR [rax],al
   14002cab3:	add    BYTE PTR [rax],al
   14002cab5:	add    BYTE PTR [rax],al
   14002cab7:	add    BYTE PTR [rbp+0x0],dh
   14002caba:	imul   eax,DWORD PTR [rax],0x2d
   14002cabd:	add    BYTE PTR [rbp+0x0],dl
   14002cac0:	add    BYTE PTR [r8],al
   14002cac3:	add    BYTE PTR [rax],al
   14002cac5:	add    BYTE PTR [rax],al
   14002cac7:	add    BYTE PTR [rdx+0x0],ah
   14002caca:	add    BYTE PTR gs:[rip+0x59004200],ch        # 0x199030cd1
   14002cad1:	add    BYTE PTR [rax],al
   14002cad3:	add    BYTE PTR [rax],al
   14002cad5:	add    BYTE PTR [rax],al
   14002cad7:	add    BYTE PTR [rbx+0x0],dh
   14002cada:	ins    BYTE PTR es:[rdi],dx
   14002cadb:	add    BYTE PTR [rip+0x49005300],ch        # 0x189031de1
   14002cae1:	add    BYTE PTR [rax],al
   14002cae3:	add    BYTE PTR [rax],al
   14002cae5:	add    BYTE PTR [rax],al
   14002cae7:	add    BYTE PTR [rbp+0x0],ah
   14002caea:	je     0x14002caec
   14002caec:	sub    eax,0x45004500
   14002caf1:	add    BYTE PTR [rax],al
   14002caf3:	add    BYTE PTR [rax],al
   14002caf5:	add    BYTE PTR [rax],al
   14002caf7:	add    BYTE PTR [rax+rax*1+0x76],ch
   14002cafb:	add    BYTE PTR [rip+0x56004c00],ch        # 0x196031701
   14002cb01:	add    BYTE PTR [rax],al
   14002cb03:	add    BYTE PTR [rax],al
   14002cb05:	add    BYTE PTR [rax],al
   14002cb07:	add    BYTE PTR [rax+rax*1+0x74],ch
   14002cb0b:	add    BYTE PTR [rip+0x54004c00],ch        # 0x194031711
   14002cb11:	add    BYTE PTR [rax],al
   14002cb13:	add    BYTE PTR [rax],al
   14002cb15:	add    BYTE PTR [rax],al
   14002cb17:	add    BYTE PTR [rsi+0x0],ah
   14002cb1a:	(bad)  
   14002cb1b:	add    BYTE PTR [rip+0x52004900],ch        # 0x192031421
   14002cb21:	add    BYTE PTR [rax],al
   14002cb23:	add    BYTE PTR [rax],al
   14002cb25:	add    BYTE PTR [rax],al
   14002cb27:	add    BYTE PTR [rsi+0x0],dh
   14002cb2a:	imul   eax,DWORD PTR [rax],0x56002d
   14002cb30:	rex.WRX add BYTE PTR [rax],r8b
   14002cb33:	add    BYTE PTR [rax],al
   14002cb35:	add    BYTE PTR [rax],al
   14002cb37:	add    BYTE PTR [rax+0x0],ch
   14002cb3a:	jns    0x14002cb3c
   14002cb3c:	sub    eax,0x4d004100
   14002cb41:	add    BYTE PTR [rax],al
   14002cb43:	add    BYTE PTR [rax],al
   14002cb45:	add    BYTE PTR [rax],al
   14002cb47:	add    BYTE PTR [rcx+0x0],ah
   14002cb4a:	jp     0x14002cb4c
   14002cb4c:	sub    eax,0x5a004100
   14002cb51:	add    BYTE PTR [rip+0x61004c00],ch        # 0x1a1031757
   14002cb57:	add    BYTE PTR [rax+rax*1+0x6e],dh
   14002cb5b:	add    BYTE PTR [rax],al
   14002cb5d:	add    BYTE PTR [rax],al
   14002cb5f:	add    BYTE PTR [rbp+0x0],ah
   14002cb62:	jne    0x14002cb64
   14002cb64:	sub    eax,0x53004500
   14002cb69:	add    BYTE PTR [rax],al
   14002cb6b:	add    BYTE PTR [rax],al
   14002cb6d:	add    BYTE PTR [rax],al
   14002cb6f:	add    BYTE PTR [rbp+0x0],ch
   14002cb72:	imul   eax,DWORD PTR [rax],0x2d
   14002cb75:	add    BYTE PTR [rbp+0x0],cl
   14002cb78:	rex.WXB add BYTE PTR [r8],al
   14002cb7b:	add    BYTE PTR [rax],al
   14002cb7d:	add    BYTE PTR [rax],al
   14002cb7f:	add    BYTE PTR [rax+rax*1+0x6e],dh
   14002cb83:	add    BYTE PTR [rip+0x41005a00],ch        # 0x181032589
   14002cb89:	add    BYTE PTR [rax],al
   14002cb8b:	add    BYTE PTR [rax],al
   14002cb8d:	add    BYTE PTR [rax],al
   14002cb8f:	add    BYTE PTR [rax+0x0],bh
   14002cb92:	push   0x5a002d00
   14002cb97:	add    BYTE PTR [rcx+0x0],al
   14002cb9a:	add    BYTE PTR [rax],al
   14002cb9c:	add    BYTE PTR [rax],al
   14002cb9e:	add    BYTE PTR [rax],al
   14002cba0:	jp     0x14002cba2
   14002cba2:	jne    0x14002cba4
   14002cba4:	sub    eax,0x41005a00
   14002cba9:	add    BYTE PTR [rax],al
   14002cbab:	add    BYTE PTR [rax],al
   14002cbad:	add    BYTE PTR [rax],al
   14002cbaf:	add    BYTE PTR [rcx+0x0],ah
   14002cbb2:	data16 add BYTE PTR [rip+0x41005a00],ch        # 0x1810325b9
   14002cbb9:	add    BYTE PTR [rax],al
   14002cbbb:	add    BYTE PTR [rax],al
   14002cbbd:	add    BYTE PTR [rax],al
   14002cbbf:	add    BYTE PTR [rbx+0x0],ch
   14002cbc2:	(bad)  
   14002cbc3:	add    BYTE PTR [rip+0x45004700],ch        # 0x1850312c9
   14002cbc9:	add    BYTE PTR [rax],al
   14002cbcb:	add    BYTE PTR [rax],al
   14002cbcd:	add    BYTE PTR [rax],al
   14002cbcf:	add    BYTE PTR [rsi+0x0],ah
   14002cbd2:	outs   dx,DWORD PTR ds:[rsi]
   14002cbd3:	add    BYTE PTR [rip+0x4f004600],ch        # 0x18f0311d9
   14002cbd9:	add    BYTE PTR [rax],al
   14002cbdb:	add    BYTE PTR [rax],al
   14002cbdd:	add    BYTE PTR [rax],al
   14002cbdf:	add    BYTE PTR [rax+0x0],ch
   14002cbe2:	imul   eax,DWORD PTR [rax],0x49002d
   14002cbe8:	rex.WRX add BYTE PTR [rax],r8b
   14002cbeb:	add    BYTE PTR [rax],al
   14002cbed:	add    BYTE PTR [rax],al
   14002cbef:	add    BYTE PTR [rbp+0x0],ch
   14002cbf2:	je     0x14002cbf4
   14002cbf4:	sub    eax,0x54004d00
   14002cbf9:	add    BYTE PTR [rax],al
   14002cbfb:	add    BYTE PTR [rax],al
   14002cbfd:	add    BYTE PTR [rax],al
   14002cbff:	add    BYTE PTR [rbx+0x0],dh
   14002cc02:	add    BYTE PTR gs:[rip+0x4f004e00],ch        # 0x18f031a09
   14002cc09:	add    BYTE PTR [rax],al
   14002cc0b:	add    BYTE PTR [rax],al
   14002cc0d:	add    BYTE PTR [rax],al
   14002cc0f:	add    BYTE PTR [rbp+0x0],ch
   14002cc12:	jae    0x14002cc14
   14002cc14:	sub    eax,0x59004d00
   14002cc19:	add    BYTE PTR [rax],al
   14002cc1b:	add    BYTE PTR [rax],al
   14002cc1d:	add    BYTE PTR [rax],al
   14002cc1f:	add    BYTE PTR [rbx+0x0],ch
   14002cc22:	imul   eax,DWORD PTR [rax],0x2d
   14002cc25:	add    BYTE PTR [rbx+0x0],cl
   14002cc28:	pop    rdx
   14002cc29:	add    BYTE PTR [rax],al
   14002cc2b:	add    BYTE PTR [rax],al
   14002cc2d:	add    BYTE PTR [rax],al
   14002cc2f:	add    BYTE PTR [rbx+0x0],ch
   14002cc32:	jns    0x14002cc34
   14002cc34:	sub    eax,0x47004b00
   14002cc39:	add    BYTE PTR [rax],al
   14002cc3b:	add    BYTE PTR [rax],al
   14002cc3d:	add    BYTE PTR [rax],al
   14002cc3f:	add    BYTE PTR [rbx+0x0],dh
   14002cc42:	ja     0x14002cc44
   14002cc44:	sub    eax,0x45004b00
   14002cc49:	add    BYTE PTR [rax],al
   14002cc4b:	add    BYTE PTR [rax],al
   14002cc4d:	add    BYTE PTR [rax],al
   14002cc4f:	add    BYTE PTR [rbp+0x0],dh
   14002cc52:	jp     0x14002cc54
   14002cc54:	sub    eax,0x5a005500
   14002cc59:	add    BYTE PTR [rip+0x61004c00],ch        # 0x1a103185f
   14002cc5f:	add    BYTE PTR [rax+rax*1+0x6e],dh
   14002cc63:	add    BYTE PTR [rax],al
   14002cc65:	add    BYTE PTR [rax],al
   14002cc67:	add    BYTE PTR [rax+rax*1+0x74],dh
   14002cc6b:	add    BYTE PTR [rip+0x55005200],ch        # 0x195031e71
   14002cc71:	add    BYTE PTR [rax],al
   14002cc73:	add    BYTE PTR [rax],al
   14002cc75:	add    BYTE PTR [rax],al
   14002cc77:	add    BYTE PTR [rdx+0x0],ah
   14002cc7a:	outs   dx,BYTE PTR ds:[rsi]
   14002cc7b:	add    BYTE PTR [rip+0x4e004900],ch        # 0x18e031581
   14002cc81:	add    BYTE PTR [rax],al
   14002cc83:	add    BYTE PTR [rax],al
   14002cc85:	add    BYTE PTR [rax],al
   14002cc87:	add    BYTE PTR [rax+0x0],dh
   14002cc8a:	(bad)  
   14002cc8b:	add    BYTE PTR [rip+0x4e004900],ch        # 0x18e031591
   14002cc91:	add    BYTE PTR [rax],al
   14002cc93:	add    BYTE PTR [rax],al
   14002cc95:	add    BYTE PTR [rax],al
   14002cc97:	add    BYTE PTR [rdi+0x0],ah
   14002cc9a:	jne    0x14002cc9c
   14002cc9c:	sub    eax,0x4e004900
   14002cca1:	add    BYTE PTR [rax],al
   14002cca3:	add    BYTE PTR [rax],al
   14002cca5:	add    BYTE PTR [rax],al
   14002cca7:	add    BYTE PTR [rax+rax*1+0x61],dh
   14002ccab:	add    BYTE PTR [rip+0x4e004900],ch        # 0x18e0315b1
   14002ccb1:	add    BYTE PTR [rax],al
   14002ccb3:	add    BYTE PTR [rax],al
   14002ccb5:	add    BYTE PTR [rax],al
   14002ccb7:	add    BYTE PTR [rax+rax*1+0x65],dh
   14002ccbb:	add    BYTE PTR [rip+0x4e004900],ch        # 0x18e0315c1
   14002ccc1:	add    BYTE PTR [rax],al
   14002ccc3:	add    BYTE PTR [rax],al
   14002ccc5:	add    BYTE PTR [rax],al
   14002ccc7:	add    BYTE PTR [rbx+0x0],ch
   14002ccca:	outs   dx,BYTE PTR ds:[rsi]
   14002cccb:	add    BYTE PTR [rip+0x4e004900],ch        # 0x18e0315d1
   14002ccd1:	add    BYTE PTR [rax],al
   14002ccd3:	add    BYTE PTR [rax],al
   14002ccd5:	add    BYTE PTR [rax],al
   14002ccd7:	add    BYTE PTR [rbp+0x0],ch
   14002ccda:	ins    BYTE PTR es:[rdi],dx
   14002ccdb:	add    BYTE PTR [rip+0x4e004900],ch        # 0x18e0315e1
   14002cce1:	add    BYTE PTR [rax],al
   14002cce3:	add    BYTE PTR [rax],al
   14002cce5:	add    BYTE PTR [rax],al
   14002cce7:	add    BYTE PTR [rbp+0x0],ch
   14002ccea:	jb     0x14002ccec
   14002ccec:	sub    eax,0x4e004900
   14002ccf1:	add    BYTE PTR [rax],al
   14002ccf3:	add    BYTE PTR [rax],al
   14002ccf5:	add    BYTE PTR [rax],al
   14002ccf7:	add    BYTE PTR [rbx+0x0],dh
   14002ccfa:	(bad)  
   14002ccfb:	add    BYTE PTR [rip+0x4e004900],ch        # 0x18e031601
   14002cd01:	add    BYTE PTR [rax],al
   14002cd03:	add    BYTE PTR [rax],al
   14002cd05:	add    BYTE PTR [rax],al
   14002cd07:	add    BYTE PTR [rbp+0x0],ch
   14002cd0a:	outs   dx,BYTE PTR ds:[rsi]
   14002cd0b:	add    BYTE PTR [rip+0x4e004d00],ch        # 0x18e031a11
   14002cd11:	add    BYTE PTR [rax],al
   14002cd13:	add    BYTE PTR [rax],al
   14002cd15:	add    BYTE PTR [rax],al
   14002cd17:	add    BYTE PTR [rbx+0x0],ah
   14002cd1a:	jns    0x14002cd1c
   14002cd1c:	sub    eax,0x42004700
   14002cd21:	add    BYTE PTR [rax],al
   14002cd23:	add    BYTE PTR [rax],al
   14002cd25:	add    BYTE PTR [rax],al
   14002cd27:	add    BYTE PTR [rdi+0x0],ah
   14002cd2a:	ins    BYTE PTR es:[rdi],dx
   14002cd2b:	add    BYTE PTR [rip+0x53004500],ch        # 0x193031231
   14002cd31:	add    BYTE PTR [rax],al
   14002cd33:	add    BYTE PTR [rax],al
   14002cd35:	add    BYTE PTR [rax],al
   14002cd37:	add    BYTE PTR [rbx+0x0],ch
   14002cd3a:	outs   dx,DWORD PTR ds:[rsi]
   14002cd3b:	add    BYTE PTR [rbx+0x0],ch
   14002cd3e:	sub    eax,0x4e004900
   14002cd43:	add    BYTE PTR [rax],al
   14002cd45:	add    BYTE PTR [rax],al
   14002cd47:	add    BYTE PTR [rbx+0x0],dh
   14002cd4a:	jns    0x14002cd4c
   14002cd4c:	jb     0x14002cd4e
   14002cd4e:	sub    eax,0x59005300
   14002cd53:	add    BYTE PTR [rax],al
   14002cd55:	add    BYTE PTR [rax],al
   14002cd57:	add    BYTE PTR [rax+rax*1+0x69],ah
   14002cd5b:	add    BYTE PTR [rsi+0x0],dh
   14002cd5e:	sub    eax,0x56004d00
   14002cd63:	add    BYTE PTR [rax],al
   14002cd65:	add    BYTE PTR [rax],al
   14002cd67:	add    BYTE PTR [rcx+0x0],dh
   14002cd6a:	jne    0x14002cd6c
   14002cd6c:	jp     0x14002cd6e
   14002cd6e:	sub    eax,0x4f004200
   14002cd73:	add    BYTE PTR [rax],al
   14002cd75:	add    BYTE PTR [rax],al
   14002cd77:	add    BYTE PTR [rsi+0x0],ch
   14002cd7a:	jae    0x14002cd7c
   14002cd7c:	sub    eax,0x41005a00
   14002cd81:	add    BYTE PTR [rax],al
   14002cd83:	add    BYTE PTR [rax],al
   14002cd85:	add    BYTE PTR [rax],al
   14002cd87:	add    BYTE PTR [rbp+0x0],ch
   14002cd8a:	imul   eax,DWORD PTR [rax],0x4e002d
   14002cd90:	pop    rdx
   14002cd91:	add    BYTE PTR [rax],al
   14002cd93:	add    BYTE PTR [rax],al
   14002cd95:	add    BYTE PTR [rax],al
   14002cd97:	add    BYTE PTR [rcx+0x0],ah
   14002cd9a:	jb     0x14002cd9c
   14002cd9c:	sub    eax,0x51004900
   14002cda1:	add    BYTE PTR [rax],al
   14002cda3:	add    BYTE PTR [rax],al
   14002cda5:	add    BYTE PTR [rax],al
   14002cda7:	add    BYTE PTR [rax+rax*1+0x65],ah
   14002cdab:	add    BYTE PTR [rip+0x48004300],ch        # 0x1880310b1
   14002cdb1:	add    BYTE PTR [rax],al
   14002cdb3:	add    BYTE PTR [rax],al
   14002cdb5:	add    BYTE PTR [rax],al
   14002cdb7:	add    BYTE PTR [rbp+0x0],ah
   14002cdba:	outs   dx,BYTE PTR ds:[rsi]
   14002cdbb:	add    BYTE PTR [rip+0x42004700],ch        # 0x1820314c1
   14002cdc1:	add    BYTE PTR [rax],al
   14002cdc3:	add    BYTE PTR [rax],al
   14002cdc5:	add    BYTE PTR [rax],al
   14002cdc7:	add    BYTE PTR [rbp+0x0],ah
   14002cdca:	jae    0x14002cdcc
   14002cdcc:	sub    eax,0x58004d00
   14002cdd1:	add    BYTE PTR [rax],al
   14002cdd3:	add    BYTE PTR [rax],al
   14002cdd5:	add    BYTE PTR [rax],al
   14002cdd7:	add    BYTE PTR [rsi+0x0],ah
   14002cdda:	jb     0x14002cddc
   14002cddc:	sub    eax,0x45004200
   14002cde1:	add    BYTE PTR [rax],al
   14002cde3:	add    BYTE PTR [rax],al
   14002cde5:	add    BYTE PTR [rax],al
   14002cde7:	add    BYTE PTR [rcx+0x0],ch
   14002cdea:	je     0x14002cdec
   14002cdec:	sub    eax,0x48004300
   14002cdf1:	add    BYTE PTR [rax],al
   14002cdf3:	add    BYTE PTR [rax],al
   14002cdf5:	add    BYTE PTR [rax],al
   14002cdf7:	add    BYTE PTR [rsi+0x0],ch
   14002cdfa:	ins    BYTE PTR es:[rdi],dx
   14002cdfb:	add    BYTE PTR [rip+0x45004200],ch        # 0x185031001
   14002ce01:	add    BYTE PTR [rax],al
   14002ce03:	add    BYTE PTR [rax],al
   14002ce05:	add    BYTE PTR [rax],al
   14002ce07:	add    BYTE PTR [rsi+0x0],ch
   14002ce0a:	outs   dx,BYTE PTR ds:[rsi]
   14002ce0b:	add    BYTE PTR [rip+0x4f004e00],ch        # 0x18f031c11
   14002ce11:	add    BYTE PTR [rax],al
   14002ce13:	add    BYTE PTR [rax],al
   14002ce15:	add    BYTE PTR [rax],al
   14002ce17:	add    BYTE PTR [rax+0x0],dh
   14002ce1a:	je     0x14002ce1c
   14002ce1c:	sub    eax,0x54005000
   14002ce21:	add    BYTE PTR [rax],al
   14002ce23:	add    BYTE PTR [rax],al
   14002ce25:	add    BYTE PTR [rax],al
   14002ce27:	add    BYTE PTR [rbx+0x0],dh
   14002ce2a:	jb     0x14002ce2c
   14002ce2c:	sub    eax,0x50005300
   14002ce31:	add    BYTE PTR [rip+0x61004c00],ch        # 0x1a1031a37
   14002ce37:	add    BYTE PTR [rax+rax*1+0x6e],dh
   14002ce3b:	add    BYTE PTR [rax],al
   14002ce3d:	add    BYTE PTR [rax],al
   14002ce3f:	add    BYTE PTR [rbx+0x0],dh
   14002ce42:	jbe    0x14002ce44
   14002ce44:	sub    eax,0x49004600
   14002ce49:	add    BYTE PTR [rax],al
   14002ce4b:	add    BYTE PTR [rax],al
   14002ce4d:	add    BYTE PTR [rax],al
   14002ce4f:	add    BYTE PTR [rcx+0x0],ah
   14002ce52:	jp     0x14002ce54
   14002ce54:	sub    eax,0x5a004100
   14002ce59:	add    BYTE PTR [rip+0x79004300],ch        # 0x1b903115f
   14002ce5f:	add    BYTE PTR [rdx+0x0],dh
   14002ce62:	ins    BYTE PTR es:[rdi],dx
   14002ce63:	add    BYTE PTR [rax],al
   14002ce65:	add    BYTE PTR [rax],al
   14002ce67:	add    BYTE PTR [rbx+0x0],dh
   14002ce6a:	add    BYTE PTR gs:[rip+0x45005300],ch        # 0x185032171
   14002ce71:	add    BYTE PTR [rax],al
   14002ce73:	add    BYTE PTR [rax],al
   14002ce75:	add    BYTE PTR [rax],al
   14002ce77:	add    BYTE PTR [rbp+0x0],ch
   14002ce7a:	jae    0x14002ce7c
   14002ce7c:	sub    eax,0x4e004200
   14002ce81:	add    BYTE PTR [rax],al
   14002ce83:	add    BYTE PTR [rax],al
   14002ce85:	add    BYTE PTR [rax],al
   14002ce87:	add    BYTE PTR [rbp+0x0],dh
   14002ce8a:	jp     0x14002ce8c
   14002ce8c:	sub    eax,0x5a005500
   14002ce91:	add    BYTE PTR [rip+0x79004300],ch        # 0x1b9031197
   14002ce97:	add    BYTE PTR [rdx+0x0],dh
   14002ce9a:	ins    BYTE PTR es:[rdi],dx
   14002ce9b:	add    BYTE PTR [rax],al
   14002ce9d:	add    BYTE PTR [rax],al
   14002ce9f:	add    BYTE PTR [rcx+0x0],dh
   14002cea2:	jne    0x14002cea4
   14002cea4:	jp     0x14002cea6
   14002cea6:	sub    eax,0x43004500
   14002ceab:	add    BYTE PTR [rax],al
   14002cead:	add    BYTE PTR [rax],al
   14002ceaf:	add    BYTE PTR [rcx+0x0],ah
   14002ceb2:	jb     0x14002ceb4
   14002ceb4:	sub    eax,0x47004500
   14002ceb9:	add    BYTE PTR [rax],al
   14002cebb:	add    BYTE PTR [rax],al
   14002cebd:	add    BYTE PTR [rax],al
   14002cebf:	add    BYTE PTR [rdx+0x0],bh
   14002cec2:	push   0x48002d00
   14002cec7:	add    BYTE PTR [rbx+0x0],cl
   14002ceca:	add    BYTE PTR [rax],al
   14002cecc:	add    BYTE PTR [rax],al
   14002cece:	add    BYTE PTR [rax],al
   14002ced0:	add    BYTE PTR fs:[rbp+0x0],ah
   14002ced4:	sub    eax,0x54004100
   14002ced9:	add    BYTE PTR [rax],al
   14002cedb:	add    BYTE PTR [rax],al
   14002cedd:	add    BYTE PTR [rax],al
   14002cedf:	add    BYTE PTR [rbp+0x0],ah
   14002cee2:	outs   dx,BYTE PTR ds:[rsi]
   14002cee3:	add    BYTE PTR [rip+0x55004100],ch        # 0x195030fe9
   14002cee9:	add    BYTE PTR [rax],al
   14002ceeb:	add    BYTE PTR [rax],al
   14002ceed:	add    BYTE PTR [rax],al
   14002ceef:	add    BYTE PTR [rbp+0x0],ah
   14002cef2:	jae    0x14002cef4
   14002cef4:	sub    eax,0x53004500
   14002cef9:	add    BYTE PTR [rax],al
   14002cefb:	add    BYTE PTR [rax],al
   14002cefd:	add    BYTE PTR [rax],al
   14002ceff:	add    BYTE PTR [rsi+0x0],ah
   14002cf02:	jb     0x14002cf04
   14002cf04:	sub    eax,0x41004300
   14002cf09:	add    BYTE PTR [rax],al
   14002cf0b:	add    BYTE PTR [rax],al
   14002cf0d:	add    BYTE PTR [rax],al
   14002cf0f:	add    BYTE PTR [rbx+0x0],dh
   14002cf12:	jb     0x14002cf14
   14002cf14:	sub    eax,0x50005300
   14002cf19:	add    BYTE PTR [rip+0x79004300],ch        # 0x1b903121f
   14002cf1f:	add    BYTE PTR [rdx+0x0],dh
   14002cf22:	ins    BYTE PTR es:[rdi],dx
   14002cf23:	add    BYTE PTR [rax],al
   14002cf25:	add    BYTE PTR [rax],al
   14002cf27:	add    BYTE PTR [rbx+0x0],dh
   14002cf2a:	add    BYTE PTR gs:[rip+0x49004600],ch        # 0x189031531
   14002cf31:	add    BYTE PTR [rax],al
   14002cf33:	add    BYTE PTR [rax],al
   14002cf35:	add    BYTE PTR [rax],al
   14002cf37:	add    BYTE PTR [rcx+0x0],dh
   14002cf3a:	jne    0x14002cf3c
   14002cf3c:	jp     0x14002cf3e
   14002cf3e:	sub    eax,0x45005000
   14002cf43:	add    BYTE PTR [rax],al
   14002cf45:	add    BYTE PTR [rax],al
   14002cf47:	add    BYTE PTR [rcx+0x0],ah
   14002cf4a:	jb     0x14002cf4c
   14002cf4c:	sub    eax,0x59004c00
   14002cf51:	add    BYTE PTR [rax],al
   14002cf53:	add    BYTE PTR [rax],al
   14002cf55:	add    BYTE PTR [rax],al
   14002cf57:	add    BYTE PTR [rdx+0x0],bh
   14002cf5a:	push   0x53002d00
   14002cf5f:	add    BYTE PTR [rdi+0x0],al
   14002cf62:	add    BYTE PTR [rax],al
   14002cf64:	add    BYTE PTR [rax],al
   14002cf66:	add    BYTE PTR [rax],al
   14002cf68:	add    BYTE PTR fs:[rbp+0x0],ah
   14002cf6c:	sub    eax,0x55004c00
   14002cf71:	add    BYTE PTR [rax],al
   14002cf73:	add    BYTE PTR [rax],al
   14002cf75:	add    BYTE PTR [rax],al
   14002cf77:	add    BYTE PTR [rbp+0x0],ah
   14002cf7a:	outs   dx,BYTE PTR ds:[rsi]
   14002cf7b:	add    BYTE PTR [rip+0x41004300],ch        # 0x181031281
   14002cf81:	add    BYTE PTR [rax],al
   14002cf83:	add    BYTE PTR [rax],al
   14002cf85:	add    BYTE PTR [rax],al
   14002cf87:	add    BYTE PTR [rbp+0x0],ah
   14002cf8a:	jae    0x14002cf8c
   14002cf8c:	sub    eax,0x54004700
   14002cf91:	add    BYTE PTR [rax],al
   14002cf93:	add    BYTE PTR [rax],al
   14002cf95:	add    BYTE PTR [rax],al
   14002cf97:	add    BYTE PTR [rsi+0x0],ah
   14002cf9a:	jb     0x14002cf9c
   14002cf9c:	sub    eax,0x48004300
   14002cfa1:	add    BYTE PTR [rax],al
   14002cfa3:	add    BYTE PTR [rax],al
   14002cfa5:	add    BYTE PTR [rax],al
   14002cfa7:	add    BYTE PTR [rax+0x0],ch
   14002cfaa:	jb     0x14002cfac
   14002cfac:	sub    eax,0x41004200
   14002cfb1:	add    BYTE PTR [rax],al
   14002cfb3:	add    BYTE PTR [rax],al
   14002cfb5:	add    BYTE PTR [rax],al
   14002cfb7:	add    BYTE PTR [rbx+0x0],dh
   14002cfba:	ins    DWORD PTR es:[rdi],dx
   14002cfbb:	add    BYTE PTR [rdx+0x0],ch
   14002cfbe:	sub    eax,0x4f004e00
   14002cfc3:	add    BYTE PTR [rax],al
   14002cfc5:	add    BYTE PTR [rax],al
   14002cfc7:	add    BYTE PTR [rcx+0x0],ah
   14002cfca:	jb     0x14002cfcc
   14002cfcc:	sub    eax,0x5a004400
   14002cfd1:	add    BYTE PTR [rax],al
   14002cfd3:	add    BYTE PTR [rax],al
   14002cfd5:	add    BYTE PTR [rax],al
   14002cfd7:	add    BYTE PTR [rdx+0x0],bh
   14002cfda:	push   0x4d002d00
   14002cfdf:	add    BYTE PTR [rdi+0x0],cl
   14002cfe2:	add    BYTE PTR [rax],al
   14002cfe4:	add    BYTE PTR [rax],al
   14002cfe6:	add    BYTE PTR [rax],al
   14002cfe8:	add    BYTE PTR fs:[rbp+0x0],ah
   14002cfec:	sub    eax,0x49004c00
   14002cff1:	add    BYTE PTR [rax],al
   14002cff3:	add    BYTE PTR [rax],al
   14002cff5:	add    BYTE PTR [rax],al
   14002cff7:	add    BYTE PTR [rbp+0x0],ah
   14002cffa:	outs   dx,BYTE PTR ds:[rsi]
   14002cffb:	add    BYTE PTR [rip+0x5a004e00],ch        # 0x19a031e01
   14002d001:	add    BYTE PTR [rax],al
   14002d003:	add    BYTE PTR [rax],al
   14002d005:	add    BYTE PTR [rax],al
   14002d007:	add    BYTE PTR [rbp+0x0],ah
   14002d00a:	jae    0x14002d00c
   14002d00c:	sub    eax,0x52004300
   14002d011:	add    BYTE PTR [rax],al
   14002d013:	add    BYTE PTR [rax],al
   14002d015:	add    BYTE PTR [rax],al
   14002d017:	add    BYTE PTR [rsi+0x0],ah
   14002d01a:	jb     0x14002d01c
   14002d01c:	sub    eax,0x55004c00
   14002d021:	add    BYTE PTR [rax],al
   14002d023:	add    BYTE PTR [rax],al
   14002d025:	add    BYTE PTR [rax],al
   14002d027:	add    BYTE PTR [rdx+0x0],ah
   14002d02a:	jae    0x14002d02c
   14002d02c:	sub    eax,0x41004200
   14002d031:	add    BYTE PTR [rip+0x61004c00],ch        # 0x1a1031c37
   14002d037:	add    BYTE PTR [rax+rax*1+0x6e],dh
   14002d03b:	add    BYTE PTR [rax],al
   14002d03d:	add    BYTE PTR [rax],al
   14002d03f:	add    BYTE PTR [rbx+0x0],dh
   14002d042:	ins    DWORD PTR es:[rdi],dx
   14002d043:	add    BYTE PTR [rdx+0x0],ch
   14002d046:	sub    eax,0x45005300
   14002d04b:	add    BYTE PTR [rax],al
   14002d04d:	add    BYTE PTR [rax],al
   14002d04f:	add    BYTE PTR [rcx+0x0],ah
   14002d052:	jb     0x14002d054
   14002d054:	sub    eax,0x41004d00
   14002d059:	add    BYTE PTR [rax],al
   14002d05b:	add    BYTE PTR [rax],al
   14002d05d:	add    BYTE PTR [rax],al
   14002d05f:	add    BYTE PTR [rbp+0x0],ah
   14002d062:	outs   dx,BYTE PTR ds:[rsi]
   14002d063:	add    BYTE PTR [rip+0x45004900],ch        # 0x185031969
   14002d069:	add    BYTE PTR [rax],al
   14002d06b:	add    BYTE PTR [rax],al
   14002d06d:	add    BYTE PTR [rax],al
   14002d06f:	add    BYTE PTR [rbp+0x0],ah
   14002d072:	jae    0x14002d074
   14002d074:	sub    eax,0x41005000
   14002d079:	add    BYTE PTR [rax],al
   14002d07b:	add    BYTE PTR [rax],al
   14002d07d:	add    BYTE PTR [rax],al
   14002d07f:	add    BYTE PTR [rsi+0x0],ah
   14002d082:	jb     0x14002d084
   14002d084:	sub    eax,0x43004d00
   14002d089:	add    BYTE PTR [rax],al
   14002d08b:	add    BYTE PTR [rax],al
   14002d08d:	add    BYTE PTR [rax],al
   14002d08f:	add    BYTE PTR [rbx+0x0],dh
   14002d092:	jb     0x14002d094
   14002d094:	sub    eax,0x41004200
   14002d099:	add    BYTE PTR [rip+0x61004c00],ch        # 0x1a1031c9f
   14002d09f:	add    BYTE PTR [rax+rax*1+0x6e],dh
   14002d0a3:	add    BYTE PTR [rax],al
   14002d0a5:	add    BYTE PTR [rax],al
   14002d0a7:	add    BYTE PTR [rbx+0x0],dh
   14002d0aa:	ins    DWORD PTR es:[rdi],dx
   14002d0ab:	add    BYTE PTR [rcx+0x0],ah
   14002d0ae:	sub    eax,0x4f004e00
   14002d0b3:	add    BYTE PTR [rax],al
   14002d0b5:	add    BYTE PTR [rax],al
   14002d0b7:	add    BYTE PTR [rcx+0x0],ah
   14002d0ba:	jb     0x14002d0bc
   14002d0bc:	sub    eax,0x4e005400
   14002d0c1:	add    BYTE PTR [rax],al
   14002d0c3:	add    BYTE PTR [rax],al
   14002d0c5:	add    BYTE PTR [rax],al
   14002d0c7:	add    BYTE PTR [rbp+0x0],ah
   14002d0ca:	outs   dx,BYTE PTR ds:[rsi]
   14002d0cb:	add    BYTE PTR [rip+0x41005a00],ch        # 0x181032ad1
   14002d0d1:	add    BYTE PTR [rax],al
   14002d0d3:	add    BYTE PTR [rax],al
   14002d0d5:	add    BYTE PTR [rax],al
   14002d0d7:	add    BYTE PTR [rbp+0x0],ah
   14002d0da:	jae    0x14002d0dc
   14002d0dc:	sub    eax,0x4f004400
   14002d0e1:	add    BYTE PTR [rax],al
   14002d0e3:	add    BYTE PTR [rax],al
   14002d0e5:	add    BYTE PTR [rax],al
   14002d0e7:	add    BYTE PTR [rbx+0x0],dh
   14002d0ea:	jb     0x14002d0ec
   14002d0ec:	sub    eax,0x41004200
   14002d0f1:	add    BYTE PTR [rip+0x79004300],ch        # 0x1b90313f7
   14002d0f7:	add    BYTE PTR [rdx+0x0],dh
   14002d0fa:	ins    BYTE PTR es:[rdi],dx
   14002d0fb:	add    BYTE PTR [rax],al
   14002d0fd:	add    BYTE PTR [rax],al
   14002d0ff:	add    BYTE PTR [rbx+0x0],dh
   14002d102:	ins    DWORD PTR es:[rdi],dx
   14002d103:	add    BYTE PTR [rcx+0x0],ah
   14002d106:	sub    eax,0x45005300
   14002d10b:	add    BYTE PTR [rax],al
   14002d10d:	add    BYTE PTR [rax],al
   14002d10f:	add    BYTE PTR [rcx+0x0],ah
   14002d112:	jb     0x14002d114
   14002d114:	sub    eax,0x4d004f00
   14002d119:	add    BYTE PTR [rax],al
   14002d11b:	add    BYTE PTR [rax],al
   14002d11d:	add    BYTE PTR [rax],al
   14002d11f:	add    BYTE PTR [rbp+0x0],ah
   14002d122:	outs   dx,BYTE PTR ds:[rsi]
   14002d123:	add    BYTE PTR [rip+0x4d004a00],ch        # 0x18d031b29
   14002d129:	add    BYTE PTR [rax],al
   14002d12b:	add    BYTE PTR [rax],al
   14002d12d:	add    BYTE PTR [rax],al
   14002d12f:	add    BYTE PTR [rbp+0x0],ah
   14002d132:	jae    0x14002d134
   14002d134:	sub    eax,0x45005600
   14002d139:	add    BYTE PTR [rax],al
   14002d13b:	add    BYTE PTR [rax],al
   14002d13d:	add    BYTE PTR [rax],al
   14002d13f:	add    BYTE PTR [rbx+0x0],dh
   14002d142:	ins    DWORD PTR es:[rdi],dx
   14002d143:	add    BYTE PTR [rbx+0x0],dh
   14002d146:	sub    eax,0x49004600
   14002d14b:	add    BYTE PTR [rax],al
   14002d14d:	add    BYTE PTR [rax],al
   14002d14f:	add    BYTE PTR [rcx+0x0],ah
   14002d152:	jb     0x14002d154
   14002d154:	sub    eax,0x45005900
   14002d159:	add    BYTE PTR [rax],al
   14002d15b:	add    BYTE PTR [rax],al
   14002d15d:	add    BYTE PTR [rax],al
   14002d15f:	add    BYTE PTR [rbp+0x0],ah
   14002d162:	outs   dx,BYTE PTR ds:[rsi]
   14002d163:	add    BYTE PTR [rip+0x42004300],ch        # 0x182031469
   14002d169:	add    BYTE PTR [rax],al
   14002d16b:	add    BYTE PTR [rax],al
   14002d16d:	add    BYTE PTR [rax],al
   14002d16f:	add    BYTE PTR [rbp+0x0],ah
   14002d172:	jae    0x14002d174
   14002d174:	sub    eax,0x4f004300
   14002d179:	add    BYTE PTR [rax],al
   14002d17b:	add    BYTE PTR [rax],al
   14002d17d:	add    BYTE PTR [rax],al
   14002d17f:	add    BYTE PTR [rbx+0x0],dh
   14002d182:	ins    DWORD PTR es:[rdi],dx
   14002d183:	add    BYTE PTR [rsi+0x0],ch
   14002d186:	sub    eax,0x49004600
   14002d18b:	add    BYTE PTR [rax],al
   14002d18d:	add    BYTE PTR [rax],al
   14002d18f:	add    BYTE PTR [rcx+0x0],ah
   14002d192:	jb     0x14002d194
   14002d194:	sub    eax,0x59005300
   14002d199:	add    BYTE PTR [rax],al
   14002d19b:	add    BYTE PTR [rax],al
   14002d19d:	add    BYTE PTR [rax],al
   14002d19f:	add    BYTE PTR [rbp+0x0],ah
   14002d1a2:	outs   dx,BYTE PTR ds:[rsi]
   14002d1a3:	add    BYTE PTR [rip+0x5a004200],ch        # 0x19a0313a9
   14002d1a9:	add    BYTE PTR [rax],al
   14002d1ab:	add    BYTE PTR [rax],al
   14002d1ad:	add    BYTE PTR [rax],al
   14002d1af:	add    BYTE PTR [rbp+0x0],ah
   14002d1b2:	jae    0x14002d1b4
   14002d1b4:	sub    eax,0x45005000
   14002d1b9:	add    BYTE PTR [rax],al
   14002d1bb:	add    BYTE PTR [rax],al
   14002d1bd:	add    BYTE PTR [rax],al
   14002d1bf:	add    BYTE PTR [rcx+0x0],ah
   14002d1c2:	jb     0x14002d1c4
   14002d1c4:	sub    eax,0x4f004a00
   14002d1c9:	add    BYTE PTR [rax],al
   14002d1cb:	add    BYTE PTR [rax],al
   14002d1cd:	add    BYTE PTR [rax],al
   14002d1cf:	add    BYTE PTR [rbp+0x0],ah
   14002d1d2:	outs   dx,BYTE PTR ds:[rsi]
   14002d1d3:	add    BYTE PTR [rip+0x54005400],ch        # 0x1940325d9
   14002d1d9:	add    BYTE PTR [rax],al
   14002d1db:	add    BYTE PTR [rax],al
   14002d1dd:	add    BYTE PTR [rax],al
   14002d1df:	add    BYTE PTR [rbp+0x0],ah
   14002d1e2:	jae    0x14002d1e4
   14002d1e4:	sub    eax,0x52004100
   14002d1e9:	add    BYTE PTR [rax],al
   14002d1eb:	add    BYTE PTR [rax],al
   14002d1ed:	add    BYTE PTR [rax],al
   14002d1ef:	add    BYTE PTR [rcx+0x0],ah
   14002d1f2:	jb     0x14002d1f4
   14002d1f4:	sub    eax,0x42004c00
   14002d1f9:	add    BYTE PTR [rax],al
   14002d1fb:	add    BYTE PTR [rax],al
   14002d1fd:	add    BYTE PTR [rax],al
   14002d1ff:	add    BYTE PTR [rbp+0x0],ah
   14002d202:	outs   dx,BYTE PTR ds:[rsi]
   14002d203:	add    BYTE PTR [rip+0x57005a00],ch        # 0x197032c09
   14002d209:	add    BYTE PTR [rax],al
   14002d20b:	add    BYTE PTR [rax],al
   14002d20d:	add    BYTE PTR [rax],al
   14002d20f:	add    BYTE PTR [rbp+0x0],ah
   14002d212:	jae    0x14002d214
   14002d214:	sub    eax,0x43004500
   14002d219:	add    BYTE PTR [rax],al
   14002d21b:	add    BYTE PTR [rax],al
   14002d21d:	add    BYTE PTR [rax],al
   14002d21f:	add    BYTE PTR [rcx+0x0],ah
   14002d222:	jb     0x14002d224
   14002d224:	sub    eax,0x57004b00
   14002d229:	add    BYTE PTR [rax],al
   14002d22b:	add    BYTE PTR [rax],al
   14002d22d:	add    BYTE PTR [rax],al
   14002d22f:	add    BYTE PTR [rbp+0x0],ah
   14002d232:	outs   dx,BYTE PTR ds:[rsi]
   14002d233:	add    BYTE PTR [rip+0x48005000],ch        # 0x188032239
   14002d239:	add    BYTE PTR [rax],al
   14002d23b:	add    BYTE PTR [rax],al
   14002d23d:	add    BYTE PTR [rax],al
   14002d23f:	add    BYTE PTR [rbp+0x0],ah
   14002d242:	jae    0x14002d244
   14002d244:	sub    eax,0x4c004300
   14002d249:	add    BYTE PTR [rax],al
   14002d24b:	add    BYTE PTR [rax],al
   14002d24d:	add    BYTE PTR [rax],al
   14002d24f:	add    BYTE PTR [rcx+0x0],ah
   14002d252:	jb     0x14002d254
   14002d254:	sub    eax,0x45004100
   14002d259:	add    BYTE PTR [rax],al
   14002d25b:	add    BYTE PTR [rax],al
   14002d25d:	add    BYTE PTR [rax],al
   14002d25f:	add    BYTE PTR [rbp+0x0],ah
   14002d262:	jae    0x14002d264
   14002d264:	sub    eax,0x59005500
   14002d269:	add    BYTE PTR [rax],al
   14002d26b:	add    BYTE PTR [rax],al
   14002d26d:	add    BYTE PTR [rax],al
   14002d26f:	add    BYTE PTR [rcx+0x0],ah
   14002d272:	jb     0x14002d274
   14002d274:	sub    eax,0x48004200
   14002d279:	add    BYTE PTR [rax],al
   14002d27b:	add    BYTE PTR [rax],al
   14002d27d:	add    BYTE PTR [rax],al
   14002d27f:	add    BYTE PTR [rbp+0x0],ah
   14002d282:	jae    0x14002d284
   14002d284:	sub    eax,0x59005000
   14002d289:	add    BYTE PTR [rax],al
   14002d28b:	add    BYTE PTR [rax],al
   14002d28d:	add    BYTE PTR [rax],al
   14002d28f:	add    BYTE PTR [rcx+0x0],ah
   14002d292:	jb     0x14002d294
   14002d294:	sub    eax,0x41005100
   14002d299:	add    BYTE PTR [rax],al
   14002d29b:	add    BYTE PTR [rax],al
   14002d29d:	add    BYTE PTR [rax],al
   14002d29f:	add    BYTE PTR [rbp+0x0],ah
   14002d2a2:	jae    0x14002d2a4
   14002d2a4:	sub    eax,0x4f004200
   14002d2a9:	add    BYTE PTR [rax],al
   14002d2ab:	add    BYTE PTR [rax],al
   14002d2ad:	add    BYTE PTR [rax],al
   14002d2af:	add    BYTE PTR [rbp+0x0],ah
   14002d2b2:	jae    0x14002d2b4
   14002d2b4:	sub    eax,0x56005300
   14002d2b9:	add    BYTE PTR [rax],al
   14002d2bb:	add    BYTE PTR [rax],al
   14002d2bd:	add    BYTE PTR [rax],al
   14002d2bf:	add    BYTE PTR [rbp+0x0],ah
   14002d2c2:	jae    0x14002d2c4
   14002d2c4:	sub    eax,0x4e004800
   14002d2c9:	add    BYTE PTR [rax],al
   14002d2cb:	add    BYTE PTR [rax],al
   14002d2cd:	add    BYTE PTR [rax],al
   14002d2cf:	add    BYTE PTR [rbp+0x0],ah
   14002d2d2:	jae    0x14002d2d4
   14002d2d4:	sub    eax,0x49004e00
   14002d2d9:	add    BYTE PTR [rax],al
   14002d2db:	add    BYTE PTR [rax],al
   14002d2dd:	add    BYTE PTR [rax],al
   14002d2df:	add    BYTE PTR [rbp+0x0],ah
   14002d2e2:	jae    0x14002d2e4
   14002d2e4:	sub    eax,0x52005000
   14002d2e9:	add    BYTE PTR [rax],al
   14002d2eb:	add    BYTE PTR [rax],al
   14002d2ed:	add    BYTE PTR [rax],al
   14002d2ef:	add    BYTE PTR [rdx+0x0],bh
   14002d2f2:	push   0x43002d00
   14002d2f7:	add    BYTE PTR [rax+0x0],cl
   14002d2fa:	push   rsp
   14002d2fb:	add    BYTE PTR [rax],al
   14002d2fd:	add    BYTE PTR [rax],al
   14002d2ff:	add    BYTE PTR [rbx+0x0],dh
   14002d302:	jb     0x14002d304
   14002d304:	add    BYTE PTR [rax],al
   14002d306:	add    BYTE PTR [rax],al
   14002d308:	(bad)  
   14002d309:	add    BYTE PTR [rsi+0x0],ah
   14002d30c:	sub    eax,0x61007a00
   14002d311:	add    BYTE PTR [rax],al
   14002d313:	add    BYTE PTR [rax],al
   14002d315:	add    BYTE PTR [rax],al
   14002d317:	add    BYTE PTR [rcx+0x0],ah
   14002d31a:	jb     0x14002d31c
   14002d31c:	sub    eax,0x65006100
   14002d321:	add    BYTE PTR [rax],al
   14002d323:	add    BYTE PTR [rax],al
   14002d325:	add    BYTE PTR [rax],al
   14002d327:	add    BYTE PTR [rcx+0x0],ah
   14002d32a:	jb     0x14002d32c
   14002d32c:	sub    eax,0x68006200
   14002d331:	add    BYTE PTR [rax],al
   14002d333:	add    BYTE PTR [rax],al
   14002d335:	add    BYTE PTR [rax],al
   14002d337:	add    BYTE PTR [rcx+0x0],ah
   14002d33a:	jb     0x14002d33c
   14002d33c:	sub    eax,0x7a006400
   14002d341:	add    BYTE PTR [rax],al
   14002d343:	add    BYTE PTR [rax],al
   14002d345:	add    BYTE PTR [rax],al
   14002d347:	add    BYTE PTR [rcx+0x0],ah
   14002d34a:	jb     0x14002d34c
   14002d34c:	sub    eax,0x67006500
   14002d351:	add    BYTE PTR [rax],al
   14002d353:	add    BYTE PTR [rax],al
   14002d355:	add    BYTE PTR [rax],al
   14002d357:	add    BYTE PTR [rcx+0x0],ah
   14002d35a:	jb     0x14002d35c
   14002d35c:	sub    eax,0x71006900
   14002d361:	add    BYTE PTR [rax],al
   14002d363:	add    BYTE PTR [rax],al
   14002d365:	add    BYTE PTR [rax],al
   14002d367:	add    BYTE PTR [rcx+0x0],ah
   14002d36a:	jb     0x14002d36c
   14002d36c:	sub    eax,0x6f006a00
   14002d371:	add    BYTE PTR [rax],al
   14002d373:	add    BYTE PTR [rax],al
   14002d375:	add    BYTE PTR [rax],al
   14002d377:	add    BYTE PTR [rcx+0x0],ah
   14002d37a:	jb     0x14002d37c
   14002d37c:	sub    eax,0x77006b00
   14002d381:	add    BYTE PTR [rax],al
   14002d383:	add    BYTE PTR [rax],al
   14002d385:	add    BYTE PTR [rax],al
   14002d387:	add    BYTE PTR [rcx+0x0],ah
   14002d38a:	jb     0x14002d38c
   14002d38c:	sub    eax,0x62006c00
   14002d391:	add    BYTE PTR [rax],al
   14002d393:	add    BYTE PTR [rax],al
   14002d395:	add    BYTE PTR [rax],al
   14002d397:	add    BYTE PTR [rcx+0x0],ah
   14002d39a:	jb     0x14002d39c
   14002d39c:	sub    eax,0x79006c00
   14002d3a1:	add    BYTE PTR [rax],al
   14002d3a3:	add    BYTE PTR [rax],al
   14002d3a5:	add    BYTE PTR [rax],al
   14002d3a7:	add    BYTE PTR [rcx+0x0],ah
   14002d3aa:	jb     0x14002d3ac
   14002d3ac:	sub    eax,0x61006d00
   14002d3b1:	add    BYTE PTR [rax],al
   14002d3b3:	add    BYTE PTR [rax],al
   14002d3b5:	add    BYTE PTR [rax],al
   14002d3b7:	add    BYTE PTR [rcx+0x0],ah
   14002d3ba:	jb     0x14002d3bc
   14002d3bc:	sub    eax,0x6d006f00
   14002d3c1:	add    BYTE PTR [rax],al
   14002d3c3:	add    BYTE PTR [rax],al
   14002d3c5:	add    BYTE PTR [rax],al
   14002d3c7:	add    BYTE PTR [rcx+0x0],ah
   14002d3ca:	jb     0x14002d3cc
   14002d3cc:	sub    eax,0x61007100
   14002d3d1:	add    BYTE PTR [rax],al
   14002d3d3:	add    BYTE PTR [rax],al
   14002d3d5:	add    BYTE PTR [rax],al
   14002d3d7:	add    BYTE PTR [rcx+0x0],ah
   14002d3da:	jb     0x14002d3dc
   14002d3dc:	sub    eax,0x61007300
   14002d3e1:	add    BYTE PTR [rax],al
   14002d3e3:	add    BYTE PTR [rax],al
   14002d3e5:	add    BYTE PTR [rax],al
   14002d3e7:	add    BYTE PTR [rcx+0x0],ah
   14002d3ea:	jb     0x14002d3ec
   14002d3ec:	sub    eax,0x79007300
   14002d3f1:	add    BYTE PTR [rax],al
   14002d3f3:	add    BYTE PTR [rax],al
   14002d3f5:	add    BYTE PTR [rax],al
   14002d3f7:	add    BYTE PTR [rcx+0x0],ah
   14002d3fa:	jb     0x14002d3fc
   14002d3fc:	sub    eax,0x6e007400
   14002d401:	add    BYTE PTR [rax],al
   14002d403:	add    BYTE PTR [rax],al
   14002d405:	add    BYTE PTR [rax],al
   14002d407:	add    BYTE PTR [rcx+0x0],ah
   14002d40a:	jb     0x14002d40c
   14002d40c:	sub    eax,0x65007900
   14002d411:	add    BYTE PTR [rax],al
   14002d413:	add    BYTE PTR [rax],al
   14002d415:	add    BYTE PTR [rax],al
   14002d417:	add    BYTE PTR [rcx+0x0],ah
   14002d41a:	jp     0x14002d41c
   14002d41c:	sub    eax,0x7a006100
   14002d421:	add    BYTE PTR [rip+0x79006300],ch        # 0x1b9033727
   14002d427:	add    BYTE PTR [rdx+0x0],dh
   14002d42a:	ins    BYTE PTR es:[rdi],dx
   14002d42b:	add    BYTE PTR [rax],al
   14002d42d:	add    BYTE PTR [rax],al
   14002d42f:	add    BYTE PTR [rcx+0x0],ah
   14002d432:	jp     0x14002d434
   14002d434:	sub    eax,0x7a006100
   14002d439:	add    BYTE PTR [rip+0x61006c00],ch        # 0x1a103403f
   14002d43f:	add    BYTE PTR [rax+rax*1+0x6e],dh
   14002d443:	add    BYTE PTR [rax],al
   14002d445:	add    BYTE PTR [rax],al
   14002d447:	add    BYTE PTR [rdx+0x0],ah
   14002d44a:	add    BYTE PTR gs:[rip+0x79006200],ch        # 0x1b9033651
   14002d451:	add    BYTE PTR [rax],al
   14002d453:	add    BYTE PTR [rax],al
   14002d455:	add    BYTE PTR [rax],al
   14002d457:	add    BYTE PTR [rdx+0x0],ah
   14002d45a:	add    BYTE PTR [eip+0x67006200],ch        # 0x1a7033661
   14002d461:	add    BYTE PTR [rax],al
   14002d463:	add    BYTE PTR [rax],al
   14002d465:	add    BYTE PTR [rax],al
   14002d467:	add    BYTE PTR [rdx+0x0],ah
   14002d46a:	outs   dx,BYTE PTR ds:[rsi]
   14002d46b:	add    BYTE PTR [rip+0x6e006900],ch        # 0x1ae033d71
   14002d471:	add    BYTE PTR [rax],al
   14002d473:	add    BYTE PTR [rax],al
   14002d475:	add    BYTE PTR [rax],al
   14002d477:	add    BYTE PTR [rdx+0x0],ah
   14002d47a:	jae    0x14002d47c
   14002d47c:	sub    eax,0x61006200
   14002d481:	add    BYTE PTR [rip+0x61006c00],ch        # 0x1a1034087
   14002d487:	add    BYTE PTR [rax+rax*1+0x6e],dh
   14002d48b:	add    BYTE PTR [rax],al
   14002d48d:	add    BYTE PTR [rax],al
   14002d48f:	add    BYTE PTR [rbx+0x0],ah
   14002d492:	(bad)  
   14002d493:	add    BYTE PTR [rip+0x73006500],ch        # 0x1b3033999
   14002d499:	add    BYTE PTR [rax],al
   14002d49b:	add    BYTE PTR [rax],al
   14002d49d:	add    BYTE PTR [rax],al
   14002d49f:	add    BYTE PTR [rbx+0x0],ah
   14002d4a2:	jae    0x14002d4a4
   14002d4a4:	sub    eax,0x7a006300
   14002d4a9:	add    BYTE PTR [rax],al
   14002d4ab:	add    BYTE PTR [rax],al
   14002d4ad:	add    BYTE PTR [rax],al
   14002d4af:	add    BYTE PTR [rbx+0x0],ah
   14002d4b2:	jns    0x14002d4b4
   14002d4b4:	sub    eax,0x62006700
   14002d4b9:	add    BYTE PTR [rax],al
   14002d4bb:	add    BYTE PTR [rax],al
   14002d4bd:	add    BYTE PTR [rax],al
   14002d4bf:	add    BYTE PTR [rax+rax*1+0x61],ah
   14002d4c3:	add    BYTE PTR [rip+0x6b006400],ch        # 0x1ab0338c9
   14002d4c9:	add    BYTE PTR [rax],al
   14002d4cb:	add    BYTE PTR [rax],al
   14002d4cd:	add    BYTE PTR [rax],al
   14002d4cf:	add    BYTE PTR [rax+rax*1+0x65],ah
   14002d4d3:	add    BYTE PTR [rip+0x74006100],ch        # 0x1b40335d9
   14002d4d9:	add    BYTE PTR [rax],al
   14002d4db:	add    BYTE PTR [rax],al
   14002d4dd:	add    BYTE PTR [rax],al
   14002d4df:	add    BYTE PTR [rax+rax*1+0x65],ah
   14002d4e3:	add    BYTE PTR [rip+0x68006300],ch        # 0x1a80337e9
   14002d4e9:	add    BYTE PTR [rax],al
   14002d4eb:	add    BYTE PTR [rax],al
   14002d4ed:	add    BYTE PTR [rax],al
   14002d4ef:	add    BYTE PTR [rax+rax*1+0x65],ah
   14002d4f3:	add    BYTE PTR [rip+0x65006400],ch        # 0x1a50338f9
   14002d4f9:	add    BYTE PTR [rax],al
   14002d4fb:	add    BYTE PTR [rax],al
   14002d4fd:	add    BYTE PTR [rax],al
   14002d4ff:	add    BYTE PTR [rax+rax*1+0x65],ah
   14002d503:	add    BYTE PTR [rip+0x69006c00],ch        # 0x1a9034109
   14002d509:	add    BYTE PTR [rax],al
   14002d50b:	add    BYTE PTR [rax],al
   14002d50d:	add    BYTE PTR [rax],al
   14002d50f:	add    BYTE PTR [rax+rax*1+0x65],ah
   14002d513:	add    BYTE PTR [rip+0x75006c00],ch        # 0x1b5034119
   14002d519:	add    BYTE PTR [rax],al
   14002d51b:	add    BYTE PTR [rax],al
   14002d51d:	add    BYTE PTR [rax],al
   14002d51f:	add    BYTE PTR [rax+rax*1+0x69],ah
   14002d523:	add    BYTE PTR [rsi+0x0],dh
   14002d526:	sub    eax,0x76006d00
   14002d52b:	add    BYTE PTR [rax],al
   14002d52d:	add    BYTE PTR [rax],al
   14002d52f:	add    BYTE PTR [rbp+0x0],ah
   14002d532:	ins    BYTE PTR es:[rdi],dx
   14002d533:	add    BYTE PTR [rip+0x72006700],ch        # 0x1b2033c39
   14002d539:	add    BYTE PTR [rax],al
   14002d53b:	add    BYTE PTR [rax],al
   14002d53d:	add    BYTE PTR [rax],al
   14002d53f:	add    BYTE PTR [rbp+0x0],ah
   14002d542:	outs   dx,BYTE PTR ds:[rsi]
   14002d543:	add    BYTE PTR [rip+0x75006100],ch        # 0x1b5033649
   14002d549:	add    BYTE PTR [rax],al
   14002d54b:	add    BYTE PTR [rax],al
   14002d54d:	add    BYTE PTR [rax],al
   14002d54f:	add    BYTE PTR [rbp+0x0],ah
   14002d552:	outs   dx,BYTE PTR ds:[rsi]
   14002d553:	add    BYTE PTR [rip+0x7a006200],ch        # 0x1ba033759
   14002d559:	add    BYTE PTR [rax],al
   14002d55b:	add    BYTE PTR [rax],al
   14002d55d:	add    BYTE PTR [rax],al
   14002d55f:	add    BYTE PTR [rbp+0x0],ah
   14002d562:	outs   dx,BYTE PTR ds:[rsi]
   14002d563:	add    BYTE PTR [rip+0x61006300],ch        # 0x1a1033869
   14002d569:	add    BYTE PTR [rax],al
   14002d56b:	add    BYTE PTR [rax],al
   14002d56d:	add    BYTE PTR [rax],al
   14002d56f:	add    BYTE PTR [rbp+0x0],ah
   14002d572:	outs   dx,BYTE PTR ds:[rsi]
   14002d573:	add    BYTE PTR [rip+0x62006300],ch        # 0x1a2033879
   14002d579:	add    BYTE PTR [rax],al
   14002d57b:	add    BYTE PTR [rax],al
   14002d57d:	add    BYTE PTR [rax],al
   14002d57f:	add    BYTE PTR [rbp+0x0],ah
   14002d582:	outs   dx,BYTE PTR ds:[rsi]
   14002d583:	add    BYTE PTR [rip+0x62006700],ch        # 0x1a2033c89
   14002d589:	add    BYTE PTR [rax],al
   14002d58b:	add    BYTE PTR [rax],al
   14002d58d:	add    BYTE PTR [rax],al
   14002d58f:	add    BYTE PTR [rbp+0x0],ah
   14002d592:	outs   dx,BYTE PTR ds:[rsi]
   14002d593:	add    BYTE PTR [rip+0x65006900],ch        # 0x1a5033e99
   14002d599:	add    BYTE PTR [rax],al
   14002d59b:	add    BYTE PTR [rax],al
   14002d59d:	add    BYTE PTR [rax],al
   14002d59f:	add    BYTE PTR [rbp+0x0],ah
   14002d5a2:	outs   dx,BYTE PTR ds:[rsi]
   14002d5a3:	add    BYTE PTR [rip+0x6d006a00],ch        # 0x1ad033fa9
   14002d5a9:	add    BYTE PTR [rax],al
   14002d5ab:	add    BYTE PTR [rax],al
   14002d5ad:	add    BYTE PTR [rax],al
   14002d5af:	add    BYTE PTR [rbp+0x0],ah
   14002d5b2:	outs   dx,BYTE PTR ds:[rsi]
   14002d5b3:	add    BYTE PTR [rip+0x7a006e00],ch        # 0x1ba0343b9
   14002d5b9:	add    BYTE PTR [rax],al
   14002d5bb:	add    BYTE PTR [rax],al
   14002d5bd:	add    BYTE PTR [rax],al
   14002d5bf:	add    BYTE PTR [rbp+0x0],ah
   14002d5c2:	outs   dx,BYTE PTR ds:[rsi]
   14002d5c3:	add    BYTE PTR [rip+0x68007000],ch        # 0x1a80345c9
   14002d5c9:	add    BYTE PTR [rax],al
   14002d5cb:	add    BYTE PTR [rax],al
   14002d5cd:	add    BYTE PTR [rax],al
   14002d5cf:	add    BYTE PTR [rbp+0x0],ah
   14002d5d2:	outs   dx,BYTE PTR ds:[rsi]
   14002d5d3:	add    BYTE PTR [rip+0x74007400],ch        # 0x1b40349d9
   14002d5d9:	add    BYTE PTR [rax],al
   14002d5db:	add    BYTE PTR [rax],al
   14002d5dd:	add    BYTE PTR [rax],al
   14002d5df:	add    BYTE PTR [rbp+0x0],ah
   14002d5e2:	outs   dx,BYTE PTR ds:[rsi]
   14002d5e3:	add    BYTE PTR [rip+0x73007500],ch        # 0x1b3034ae9
   14002d5e9:	add    BYTE PTR [rax],al
   14002d5eb:	add    BYTE PTR [rax],al
   14002d5ed:	add    BYTE PTR [rax],al
   14002d5ef:	add    BYTE PTR [rbp+0x0],ah
   14002d5f2:	outs   dx,BYTE PTR ds:[rsi]
   14002d5f3:	add    BYTE PTR [rip+0x61007a00],ch        # 0x1a1034ff9
   14002d5f9:	add    BYTE PTR [rax],al
   14002d5fb:	add    BYTE PTR [rax],al
   14002d5fd:	add    BYTE PTR [rax],al
   14002d5ff:	add    BYTE PTR [rbp+0x0],ah
   14002d602:	outs   dx,BYTE PTR ds:[rsi]
   14002d603:	add    BYTE PTR [rip+0x77007a00],ch        # 0x1b7035009
   14002d609:	add    BYTE PTR [rax],al
   14002d60b:	add    BYTE PTR [rax],al
   14002d60d:	add    BYTE PTR [rax],al
   14002d60f:	add    BYTE PTR [rbp+0x0],ah
   14002d612:	jae    0x14002d614
   14002d614:	sub    eax,0x72006100
   14002d619:	add    BYTE PTR [rax],al
   14002d61b:	add    BYTE PTR [rax],al
   14002d61d:	add    BYTE PTR [rax],al
   14002d61f:	add    BYTE PTR [rbp+0x0],ah
   14002d622:	jae    0x14002d624
   14002d624:	sub    eax,0x6f006200
   14002d629:	add    BYTE PTR [rax],al
   14002d62b:	add    BYTE PTR [rax],al
   14002d62d:	add    BYTE PTR [rax],al
   14002d62f:	add    BYTE PTR [rbp+0x0],ah
   14002d632:	jae    0x14002d634
   14002d634:	sub    eax,0x6c006300
   14002d639:	add    BYTE PTR [rax],al
   14002d63b:	add    BYTE PTR [rax],al
   14002d63d:	add    BYTE PTR [rax],al
   14002d63f:	add    BYTE PTR [rbp+0x0],ah
   14002d642:	jae    0x14002d644
   14002d644:	sub    eax,0x6f006300
   14002d649:	add    BYTE PTR [rax],al
   14002d64b:	add    BYTE PTR [rax],al
   14002d64d:	add    BYTE PTR [rax],al
   14002d64f:	add    BYTE PTR [rbp+0x0],ah
   14002d652:	jae    0x14002d654
   14002d654:	sub    eax,0x72006300
   14002d659:	add    BYTE PTR [rax],al
   14002d65b:	add    BYTE PTR [rax],al
   14002d65d:	add    BYTE PTR [rax],al
   14002d65f:	add    BYTE PTR [rbp+0x0],ah
   14002d662:	jae    0x14002d664
   14002d664:	sub    eax,0x6f006400
   14002d669:	add    BYTE PTR [rax],al
   14002d66b:	add    BYTE PTR [rax],al
   14002d66d:	add    BYTE PTR [rax],al
   14002d66f:	add    BYTE PTR [rbp+0x0],ah
   14002d672:	jae    0x14002d674
   14002d674:	sub    eax,0x63006500
   14002d679:	add    BYTE PTR [rax],al
   14002d67b:	add    BYTE PTR [rax],al
   14002d67d:	add    BYTE PTR [rax],al
   14002d67f:	add    BYTE PTR [rbp+0x0],ah
   14002d682:	jae    0x14002d684
   14002d684:	sub    eax,0x73006500
   14002d689:	add    BYTE PTR [rax],al
   14002d68b:	add    BYTE PTR [rax],al
   14002d68d:	add    BYTE PTR [rax],al
   14002d68f:	add    BYTE PTR [rbp+0x0],ah
   14002d692:	jae    0x14002d694
   14002d694:	sub    eax,0x74006700
   14002d699:	add    BYTE PTR [rax],al
   14002d69b:	add    BYTE PTR [rax],al
   14002d69d:	add    BYTE PTR [rax],al
   14002d69f:	add    BYTE PTR [rbp+0x0],ah
   14002d6a2:	jae    0x14002d6a4
   14002d6a4:	sub    eax,0x6e006800
   14002d6a9:	add    BYTE PTR [rax],al
   14002d6ab:	add    BYTE PTR [rax],al
   14002d6ad:	add    BYTE PTR [rax],al
   14002d6af:	add    BYTE PTR [rbp+0x0],ah
   14002d6b2:	jae    0x14002d6b4
   14002d6b4:	sub    eax,0x78006d00
   14002d6b9:	add    BYTE PTR [rax],al
   14002d6bb:	add    BYTE PTR [rax],al
   14002d6bd:	add    BYTE PTR [rax],al
   14002d6bf:	add    BYTE PTR [rbp+0x0],ah
   14002d6c2:	jae    0x14002d6c4
   14002d6c4:	sub    eax,0x69006e00
   14002d6c9:	add    BYTE PTR [rax],al
   14002d6cb:	add    BYTE PTR [rax],al
   14002d6cd:	add    BYTE PTR [rax],al
   14002d6cf:	add    BYTE PTR [rbp+0x0],ah
   14002d6d2:	jae    0x14002d6d4
   14002d6d4:	sub    eax,0x61007000
   14002d6d9:	add    BYTE PTR [rax],al
   14002d6db:	add    BYTE PTR [rax],al
   14002d6dd:	add    BYTE PTR [rax],al
   14002d6df:	add    BYTE PTR [rbp+0x0],ah
   14002d6e2:	jae    0x14002d6e4
   14002d6e4:	sub    eax,0x65007000
   14002d6e9:	add    BYTE PTR [rax],al
   14002d6eb:	add    BYTE PTR [rax],al
   14002d6ed:	add    BYTE PTR [rax],al
   14002d6ef:	add    BYTE PTR [rbp+0x0],ah
   14002d6f2:	jae    0x14002d6f4
   14002d6f4:	sub    eax,0x72007000
   14002d6f9:	add    BYTE PTR [rax],al
   14002d6fb:	add    BYTE PTR [rax],al
   14002d6fd:	add    BYTE PTR [rax],al
   14002d6ff:	add    BYTE PTR [rbp+0x0],ah
   14002d702:	jae    0x14002d704
   14002d704:	sub    eax,0x79007000
   14002d709:	add    BYTE PTR [rax],al
   14002d70b:	add    BYTE PTR [rax],al
   14002d70d:	add    BYTE PTR [rax],al
   14002d70f:	add    BYTE PTR [rbp+0x0],ah
   14002d712:	jae    0x14002d714
   14002d714:	sub    eax,0x76007300
   14002d719:	add    BYTE PTR [rax],al
   14002d71b:	add    BYTE PTR [rax],al
   14002d71d:	add    BYTE PTR [rax],al
   14002d71f:	add    BYTE PTR [rbp+0x0],ah
   14002d722:	jae    0x14002d724
   14002d724:	sub    eax,0x79007500
   14002d729:	add    BYTE PTR [rax],al
   14002d72b:	add    BYTE PTR [rax],al
   14002d72d:	add    BYTE PTR [rax],al
   14002d72f:	add    BYTE PTR [rbp+0x0],ah
   14002d732:	jae    0x14002d734
   14002d734:	sub    eax,0x65007600
   14002d739:	add    BYTE PTR [rax],al
   14002d73b:	add    BYTE PTR [rax],al
   14002d73d:	add    BYTE PTR [rax],al
   14002d73f:	add    BYTE PTR [rbp+0x0],ah
   14002d742:	je     0x14002d744
   14002d744:	sub    eax,0x65006500
   14002d749:	add    BYTE PTR [rax],al
   14002d74b:	add    BYTE PTR [rax],al
   14002d74d:	add    BYTE PTR [rax],al
   14002d74f:	add    BYTE PTR [rbp+0x0],ah
   14002d752:	jne    0x14002d754
   14002d754:	sub    eax,0x73006500
   14002d759:	add    BYTE PTR [rax],al
   14002d75b:	add    BYTE PTR [rax],al
   14002d75d:	add    BYTE PTR [rax],al
   14002d75f:	add    BYTE PTR [rsi+0x0],ah
   14002d762:	(bad)  
   14002d763:	add    BYTE PTR [rip+0x72006900],ch        # 0x1b2034069
   14002d769:	add    BYTE PTR [rax],al
   14002d76b:	add    BYTE PTR [rax],al
   14002d76d:	add    BYTE PTR [rax],al
   14002d76f:	add    BYTE PTR [rsi+0x0],ah
   14002d772:	imul   eax,DWORD PTR [rax],0x66002d
   14002d778:	imul   eax,DWORD PTR [rax],0x0
   14002d77e:	add    BYTE PTR [rax],al
   14002d780:	data16 add BYTE PTR [rdi+0x0],ch
   14002d784:	sub    eax,0x6f006600
   14002d789:	add    BYTE PTR [rax],al
   14002d78b:	add    BYTE PTR [rax],al
   14002d78d:	add    BYTE PTR [rax],al
   14002d78f:	add    BYTE PTR [rsi+0x0],ah
   14002d792:	jb     0x14002d794
   14002d794:	sub    eax,0x65006200
   14002d799:	add    BYTE PTR [rax],al
   14002d79b:	add    BYTE PTR [rax],al
   14002d79d:	add    BYTE PTR [rax],al
   14002d79f:	add    BYTE PTR [rsi+0x0],ah
   14002d7a2:	jb     0x14002d7a4
   14002d7a4:	sub    eax,0x61006300
   14002d7a9:	add    BYTE PTR [rax],al
   14002d7ab:	add    BYTE PTR [rax],al
   14002d7ad:	add    BYTE PTR [rax],al
   14002d7af:	add    BYTE PTR [rsi+0x0],ah
   14002d7b2:	jb     0x14002d7b4
   14002d7b4:	sub    eax,0x68006300
   14002d7b9:	add    BYTE PTR [rax],al
   14002d7bb:	add    BYTE PTR [rax],al
   14002d7bd:	add    BYTE PTR [rax],al
   14002d7bf:	add    BYTE PTR [rsi+0x0],ah
   14002d7c2:	jb     0x14002d7c4
   14002d7c4:	sub    eax,0x72006600
   14002d7c9:	add    BYTE PTR [rax],al
   14002d7cb:	add    BYTE PTR [rax],al
   14002d7cd:	add    BYTE PTR [rax],al
   14002d7cf:	add    BYTE PTR [rsi+0x0],ah
   14002d7d2:	jb     0x14002d7d4
   14002d7d4:	sub    eax,0x75006c00
   14002d7d9:	add    BYTE PTR [rax],al
   14002d7db:	add    BYTE PTR [rax],al
   14002d7dd:	add    BYTE PTR [rax],al
   14002d7df:	add    BYTE PTR [rsi+0x0],ah
   14002d7e2:	jb     0x14002d7e4
   14002d7e4:	sub    eax,0x63006d00
   14002d7e9:	add    BYTE PTR [rax],al
   14002d7eb:	add    BYTE PTR [rax],al
   14002d7ed:	add    BYTE PTR [rax],al
   14002d7ef:	add    BYTE PTR [rdi+0x0],ah
   14002d7f2:	ins    BYTE PTR es:[rdi],dx
   14002d7f3:	add    BYTE PTR [rip+0x73006500],ch        # 0x1b3033cf9
   14002d7f9:	add    BYTE PTR [rax],al
   14002d7fb:	add    BYTE PTR [rax],al
   14002d7fd:	add    BYTE PTR [rax],al
   14002d7ff:	add    BYTE PTR [rdi+0x0],ah
   14002d802:	jne    0x14002d804
   14002d804:	sub    eax,0x6e006900
   14002d809:	add    BYTE PTR [rax],al
   14002d80b:	add    BYTE PTR [rax],al
   14002d80d:	add    BYTE PTR [rax],al
   14002d80f:	add    BYTE PTR [rax+0x0],ch
   14002d812:	add    BYTE PTR gs:[rip+0x6c006900],ch        # 0x1ac034119
   14002d819:	add    BYTE PTR [rax],al
   14002d81b:	add    BYTE PTR [rax],al
   14002d81d:	add    BYTE PTR [rax],al
   14002d81f:	add    BYTE PTR [rax+0x0],ch
   14002d822:	imul   eax,DWORD PTR [rax],0x69002d
   14002d828:	outs   dx,BYTE PTR ds:[rsi]
   14002d829:	add    BYTE PTR [rax],al
   14002d82b:	add    BYTE PTR [rax],al
   14002d82d:	add    BYTE PTR [rax],al
   14002d82f:	add    BYTE PTR [rax+0x0],ch
   14002d832:	jb     0x14002d834
   14002d834:	sub    eax,0x61006200
   14002d839:	add    BYTE PTR [rax],al
   14002d83b:	add    BYTE PTR [rax],al
   14002d83d:	add    BYTE PTR [rax],al
   14002d83f:	add    BYTE PTR [rax+0x0],ch
   14002d842:	jb     0x14002d844
   14002d844:	sub    eax,0x72006800
   14002d849:	add    BYTE PTR [rax],al
   14002d84b:	add    BYTE PTR [rax],al
   14002d84d:	add    BYTE PTR [rax],al
   14002d84f:	add    BYTE PTR [rax+0x0],ch
   14002d852:	jne    0x14002d854
   14002d854:	sub    eax,0x75006800
   14002d859:	add    BYTE PTR [rax],al
   14002d85b:	add    BYTE PTR [rax],al
   14002d85d:	add    BYTE PTR [rax],al
   14002d85f:	add    BYTE PTR [rax+0x0],ch
   14002d862:	jns    0x14002d864
   14002d864:	sub    eax,0x6d006100
   14002d869:	add    BYTE PTR [rax],al
   14002d86b:	add    BYTE PTR [rax],al
   14002d86d:	add    BYTE PTR [rax],al
   14002d86f:	add    BYTE PTR [rcx+0x0],ch
   14002d872:	add    BYTE PTR fs:[rip+0x64006900],ch        # 0x1a4034179
   14002d879:	add    BYTE PTR [rax],al
   14002d87b:	add    BYTE PTR [rax],al
   14002d87d:	add    BYTE PTR [rax],al
   14002d87f:	add    BYTE PTR [rcx+0x0],ch
   14002d882:	jae    0x14002d884
   14002d884:	sub    eax,0x73006900
   14002d889:	add    BYTE PTR [rax],al
   14002d88b:	add    BYTE PTR [rax],al
   14002d88d:	add    BYTE PTR [rax],al
   14002d88f:	add    BYTE PTR [rcx+0x0],ch
   14002d892:	je     0x14002d894
   14002d894:	sub    eax,0x68006300
   14002d899:	add    BYTE PTR [rax],al
   14002d89b:	add    BYTE PTR [rax],al
   14002d89d:	add    BYTE PTR [rax],al
   14002d89f:	add    BYTE PTR [rcx+0x0],ch
   14002d8a2:	je     0x14002d8a4
   14002d8a4:	sub    eax,0x74006900
   14002d8a9:	add    BYTE PTR [rax],al
   14002d8ab:	add    BYTE PTR [rax],al
   14002d8ad:	add    BYTE PTR [rax],al
   14002d8af:	add    BYTE PTR [rdx+0x0],ch
   14002d8b2:	(bad)  
   14002d8b3:	add    BYTE PTR [rip+0x70006a00],ch        # 0x1b00342b9
   14002d8b9:	add    BYTE PTR [rax],al
   14002d8bb:	add    BYTE PTR [rax],al
   14002d8bd:	add    BYTE PTR [rax],al
   14002d8bf:	add    BYTE PTR [rbx+0x0],ch
   14002d8c2:	(bad)  
   14002d8c3:	add    BYTE PTR [rip+0x65006700],ch        # 0x1a5033fc9
   14002d8c9:	add    BYTE PTR [rax],al
   14002d8cb:	add    BYTE PTR [rax],al
   14002d8cd:	add    BYTE PTR [rax],al
   14002d8cf:	add    BYTE PTR [rbx+0x0],ch
   14002d8d2:	imul   eax,DWORD PTR [rax],0x2d
   14002d8d5:	add    BYTE PTR [rbx+0x0],ch
   14002d8d8:	jp     0x14002d8da
   14002d8da:	add    BYTE PTR [rax],al
   14002d8dc:	add    BYTE PTR [rax],al
   14002d8de:	add    BYTE PTR [rax],al
   14002d8e0:	imul   eax,DWORD PTR [rax],0x6e
   14002d8e3:	add    BYTE PTR [rip+0x6e006900],ch        # 0x1ae0341e9
   14002d8e9:	add    BYTE PTR [rax],al
   14002d8eb:	add    BYTE PTR [rax],al
   14002d8ed:	add    BYTE PTR [rax],al
   14002d8ef:	add    BYTE PTR [rbx+0x0],ch
   14002d8f2:	outs   dx,DWORD PTR ds:[rsi]
   14002d8f3:	add    BYTE PTR [rbx+0x0],ch
   14002d8f6:	sub    eax,0x6e006900
   14002d8fb:	add    BYTE PTR [rax],al
   14002d8fd:	add    BYTE PTR [rax],al
   14002d8ff:	add    BYTE PTR [rbx+0x0],ch
   14002d902:	outs   dx,DWORD PTR ds:[rsi]
   14002d903:	add    BYTE PTR [rip+0x72006b00],ch        # 0x1b2034409
   14002d909:	add    BYTE PTR [rax],al
   14002d90b:	add    BYTE PTR [rax],al
   14002d90d:	add    BYTE PTR [rax],al
   14002d90f:	add    BYTE PTR [rbx+0x0],ch
   14002d912:	jns    0x14002d914
   14002d914:	sub    eax,0x67006b00
   14002d919:	add    BYTE PTR [rax],al
   14002d91b:	add    BYTE PTR [rax],al
   14002d91d:	add    BYTE PTR [rax],al
   14002d91f:	add    BYTE PTR [rax+rax*1+0x74],ch
   14002d923:	add    BYTE PTR [rip+0x74006c00],ch        # 0x1b4034529
   14002d929:	add    BYTE PTR [rax],al
   14002d92b:	add    BYTE PTR [rax],al
   14002d92d:	add    BYTE PTR [rax],al
   14002d92f:	add    BYTE PTR [rax+rax*1+0x76],ch
   14002d933:	add    BYTE PTR [rip+0x76006c00],ch        # 0x1b6034539
   14002d939:	add    BYTE PTR [rax],al
   14002d93b:	add    BYTE PTR [rax],al
   14002d93d:	add    BYTE PTR [rax],al
   14002d93f:	add    BYTE PTR [rbp+0x0],ch
   14002d942:	imul   eax,DWORD PTR [rax],0x6e002d
   14002d948:	jp     0x14002d94a
   14002d94a:	add    BYTE PTR [rax],al
   14002d94c:	add    BYTE PTR [rax],al
   14002d94e:	add    BYTE PTR [rax],al
   14002d950:	ins    DWORD PTR es:[rdi],dx
   14002d951:	add    BYTE PTR [rbx+0x0],ch
   14002d954:	sub    eax,0x6b006d00
   14002d959:	add    BYTE PTR [rax],al
   14002d95b:	add    BYTE PTR [rax],al
   14002d95d:	add    BYTE PTR [rax],al
   14002d95f:	add    BYTE PTR [rbp+0x0],ch
   14002d962:	ins    BYTE PTR es:[rdi],dx
   14002d963:	add    BYTE PTR [rip+0x6e006900],ch        # 0x1ae034269
   14002d969:	add    BYTE PTR [rax],al
   14002d96b:	add    BYTE PTR [rax],al
   14002d96d:	add    BYTE PTR [rax],al
   14002d96f:	add    BYTE PTR [rbp+0x0],ch
   14002d972:	outs   dx,BYTE PTR ds:[rsi]
   14002d973:	add    BYTE PTR [rip+0x6e006d00],ch        # 0x1ae034679
   14002d979:	add    BYTE PTR [rax],al
   14002d97b:	add    BYTE PTR [rax],al
   14002d97d:	add    BYTE PTR [rax],al
   14002d97f:	add    BYTE PTR [rbp+0x0],ch
   14002d982:	jb     0x14002d984
   14002d984:	sub    eax,0x6e006900
   14002d989:	add    BYTE PTR [rax],al
   14002d98b:	add    BYTE PTR [rax],al
   14002d98d:	add    BYTE PTR [rax],al
   14002d98f:	add    BYTE PTR [rbp+0x0],ch
   14002d992:	jae    0x14002d994
   14002d994:	sub    eax,0x6e006200
   14002d999:	add    BYTE PTR [rax],al
   14002d99b:	add    BYTE PTR [rax],al
   14002d99d:	add    BYTE PTR [rax],al
   14002d99f:	add    BYTE PTR [rbp+0x0],ch
   14002d9a2:	jae    0x14002d9a4
   14002d9a4:	sub    eax,0x79006d00
   14002d9a9:	add    BYTE PTR [rax],al
   14002d9ab:	add    BYTE PTR [rax],al
   14002d9ad:	add    BYTE PTR [rax],al
   14002d9af:	add    BYTE PTR [rbp+0x0],ch
   14002d9b2:	je     0x14002d9b4
   14002d9b4:	sub    eax,0x74006d00
   14002d9b9:	add    BYTE PTR [rax],al
   14002d9bb:	add    BYTE PTR [rax],al
   14002d9bd:	add    BYTE PTR [rax],al
   14002d9bf:	add    BYTE PTR [rsi+0x0],ch
   14002d9c2:	(bad)  
   14002d9c3:	add    BYTE PTR [rip+0x6f006e00],ch        # 0x1af0347c9
   14002d9c9:	add    BYTE PTR [rax],al
   14002d9cb:	add    BYTE PTR [rax],al
   14002d9cd:	add    BYTE PTR [rax],al
   14002d9cf:	add    BYTE PTR [rsi+0x0],ch
   14002d9d2:	ins    BYTE PTR es:[rdi],dx
   14002d9d3:	add    BYTE PTR [rip+0x65006200],ch        # 0x1a5033bd9
   14002d9d9:	add    BYTE PTR [rax],al
   14002d9db:	add    BYTE PTR [rax],al
   14002d9dd:	add    BYTE PTR [rax],al
   14002d9df:	add    BYTE PTR [rsi+0x0],ch
   14002d9e2:	ins    BYTE PTR es:[rdi],dx
   14002d9e3:	add    BYTE PTR [rip+0x6c006e00],ch        # 0x1ac0347e9
   14002d9e9:	add    BYTE PTR [rax],al
   14002d9eb:	add    BYTE PTR [rax],al
   14002d9ed:	add    BYTE PTR [rax],al
   14002d9ef:	add    BYTE PTR [rsi+0x0],ch
   14002d9f2:	outs   dx,BYTE PTR ds:[rsi]
   14002d9f3:	add    BYTE PTR [rip+0x6f006e00],ch        # 0x1af0347f9
   14002d9f9:	add    BYTE PTR [rax],al
   14002d9fb:	add    BYTE PTR [rax],al
   14002d9fd:	add    BYTE PTR [rax],al
   14002d9ff:	add    BYTE PTR [rsi+0x0],ch
   14002da02:	jae    0x14002da04
   14002da04:	sub    eax,0x61007a00
   14002da09:	add    BYTE PTR [rax],al
   14002da0b:	add    BYTE PTR [rax],al
   14002da0d:	add    BYTE PTR [rax],al
   14002da0f:	add    BYTE PTR [rax+0x0],dh
   14002da12:	(bad)  
   14002da13:	add    BYTE PTR [rip+0x6e006900],ch        # 0x1ae034319
   14002da19:	add    BYTE PTR [rax],al
   14002da1b:	add    BYTE PTR [rax],al
   14002da1d:	add    BYTE PTR [rax],al
   14002da1f:	add    BYTE PTR [rax+0x0],dh
   14002da22:	ins    BYTE PTR es:[rdi],dx
   14002da23:	add    BYTE PTR [rip+0x6c007000],ch        # 0x1ac034a29
   14002da29:	add    BYTE PTR [rax],al
   14002da2b:	add    BYTE PTR [rax],al
   14002da2d:	add    BYTE PTR [rax],al
   14002da2f:	add    BYTE PTR [rax+0x0],dh
   14002da32:	je     0x14002da34
   14002da34:	sub    eax,0x72006200
   14002da39:	add    BYTE PTR [rax],al
   14002da3b:	add    BYTE PTR [rax],al
   14002da3d:	add    BYTE PTR [rax],al
   14002da3f:	add    BYTE PTR [rax+0x0],dh
   14002da42:	je     0x14002da44
   14002da44:	sub    eax,0x74007000
   14002da49:	add    BYTE PTR [rax],al
   14002da4b:	add    BYTE PTR [rax],al
   14002da4d:	add    BYTE PTR [rax],al
   14002da4f:	add    BYTE PTR [rcx+0x0],dh
   14002da52:	jne    0x14002da54
   14002da54:	jp     0x14002da56
   14002da56:	sub    eax,0x6f006200
   14002da5b:	add    BYTE PTR [rax],al
   14002da5d:	add    BYTE PTR [rax],al
   14002da5f:	add    BYTE PTR [rcx+0x0],dh
   14002da62:	jne    0x14002da64
   14002da64:	jp     0x14002da66
   14002da66:	sub    eax,0x63006500
   14002da6b:	add    BYTE PTR [rax],al
   14002da6d:	add    BYTE PTR [rax],al
   14002da6f:	add    BYTE PTR [rcx+0x0],dh
   14002da72:	jne    0x14002da74
   14002da74:	jp     0x14002da76
   14002da76:	sub    eax,0x65007000
   14002da7b:	add    BYTE PTR [rax],al
   14002da7d:	add    BYTE PTR [rax],al
   14002da7f:	add    BYTE PTR [rdx+0x0],dh
   14002da82:	outs   dx,DWORD PTR ds:[rsi]
   14002da83:	add    BYTE PTR [rip+0x6f007200],ch        # 0x1af034c89
   14002da89:	add    BYTE PTR [rax],al
   14002da8b:	add    BYTE PTR [rax],al
   14002da8d:	add    BYTE PTR [rax],al
   14002da8f:	add    BYTE PTR [rdx+0x0],dh
   14002da92:	jne    0x14002da94
   14002da94:	sub    eax,0x75007200
   14002da99:	add    BYTE PTR [rax],al
   14002da9b:	add    BYTE PTR [rax],al
   14002da9d:	add    BYTE PTR [rax],al
   14002da9f:	add    BYTE PTR [rbx+0x0],dh
   14002daa2:	(bad)  
   14002daa3:	add    BYTE PTR [rip+0x6e006900],ch        # 0x1ae0343a9
   14002daa9:	add    BYTE PTR [rax],al
   14002daab:	add    BYTE PTR [rax],al
   14002daad:	add    BYTE PTR [rax],al
   14002daaf:	add    BYTE PTR [rbx+0x0],dh
   14002dab2:	add    BYTE PTR gs:[rip+0x69006600],ch        # 0x1a90340b9
   14002dab9:	add    BYTE PTR [rax],al
   14002dabb:	add    BYTE PTR [rax],al
   14002dabd:	add    BYTE PTR [rax],al
   14002dabf:	add    BYTE PTR [rbx+0x0],dh
   14002dac2:	add    BYTE PTR gs:[rip+0x6f006e00],ch        # 0x1af0348c9
   14002dac9:	add    BYTE PTR [rax],al
   14002dacb:	add    BYTE PTR [rax],al
   14002dacd:	add    BYTE PTR [rax],al
   14002dacf:	add    BYTE PTR [rbx+0x0],dh
   14002dad2:	add    BYTE PTR gs:[rip+0x65007300],ch        # 0x1a5034dd9
   14002dad9:	add    BYTE PTR [rax],al
   14002dadb:	add    BYTE PTR [rax],al
   14002dadd:	add    BYTE PTR [rax],al
   14002dadf:	add    BYTE PTR [rbx+0x0],dh
   14002dae2:	imul   eax,DWORD PTR [rax],0x2d
   14002dae5:	add    BYTE PTR [rbx+0x0],dh
   14002dae8:	imul   eax,DWORD PTR [rax],0x0
   14002daeb:	add    BYTE PTR [rax],al
   14002daed:	add    BYTE PTR [rax],al
   14002daef:	add    BYTE PTR [rbx+0x0],dh
   14002daf2:	ins    BYTE PTR es:[rdi],dx
   14002daf3:	add    BYTE PTR [rip+0x69007300],ch        # 0x1a9034df9
   14002daf9:	add    BYTE PTR [rax],al
   14002dafb:	add    BYTE PTR [rax],al
   14002dafd:	add    BYTE PTR [rax],al
   14002daff:	add    BYTE PTR [rbx+0x0],dh
   14002db02:	ins    DWORD PTR es:[rdi],dx
   14002db03:	add    BYTE PTR [rcx+0x0],ah
   14002db06:	sub    eax,0x6f006e00
   14002db0b:	add    BYTE PTR [rax],al
   14002db0d:	add    BYTE PTR [rax],al
   14002db0f:	add    BYTE PTR [rbx+0x0],dh
   14002db12:	ins    DWORD PTR es:[rdi],dx
   14002db13:	add    BYTE PTR [rcx+0x0],ah
   14002db16:	sub    eax,0x65007300
   14002db1b:	add    BYTE PTR [rax],al
   14002db1d:	add    BYTE PTR [rax],al
   14002db1f:	add    BYTE PTR [rbx+0x0],dh
   14002db22:	ins    DWORD PTR es:[rdi],dx
   14002db23:	add    BYTE PTR [rdx+0x0],ch
   14002db26:	sub    eax,0x6f006e00
   14002db2b:	add    BYTE PTR [rax],al
   14002db2d:	add    BYTE PTR [rax],al
   14002db2f:	add    BYTE PTR [rbx+0x0],dh
   14002db32:	ins    DWORD PTR es:[rdi],dx
   14002db33:	add    BYTE PTR [rdx+0x0],ch
   14002db36:	sub    eax,0x65007300
   14002db3b:	add    BYTE PTR [rax],al
   14002db3d:	add    BYTE PTR [rax],al
   14002db3f:	add    BYTE PTR [rbx+0x0],dh
   14002db42:	ins    DWORD PTR es:[rdi],dx
   14002db43:	add    BYTE PTR [rsi+0x0],ch
   14002db46:	sub    eax,0x69006600
   14002db4b:	add    BYTE PTR [rax],al
   14002db4d:	add    BYTE PTR [rax],al
   14002db4f:	add    BYTE PTR [rbx+0x0],dh
   14002db52:	ins    DWORD PTR es:[rdi],dx
   14002db53:	add    BYTE PTR [rbx+0x0],dh
   14002db56:	sub    eax,0x69006600
   14002db5b:	add    BYTE PTR [rax],al
   14002db5d:	add    BYTE PTR [rax],al
   14002db5f:	add    BYTE PTR [rbx+0x0],dh
   14002db62:	jno    0x14002db64
   14002db64:	sub    eax,0x6c006100
   14002db69:	add    BYTE PTR [rax],al
   14002db6b:	add    BYTE PTR [rax],al
   14002db6d:	add    BYTE PTR [rax],al
   14002db6f:	add    BYTE PTR [rbx+0x0],dh
   14002db72:	jb     0x14002db74
   14002db74:	sub    eax,0x61006200
   14002db79:	add    BYTE PTR [rip+0x79006300],ch        # 0x1b9033e7f
   14002db7f:	add    BYTE PTR [rdx+0x0],dh
   14002db82:	ins    BYTE PTR es:[rdi],dx
   14002db83:	add    BYTE PTR [rax],al
   14002db85:	add    BYTE PTR [rax],al
   14002db87:	add    BYTE PTR [rbx+0x0],dh
   14002db8a:	jb     0x14002db8c
   14002db8c:	sub    eax,0x61006200
   14002db91:	add    BYTE PTR [rip+0x61006c00],ch        # 0x1a1034797
   14002db97:	add    BYTE PTR [rax+rax*1+0x6e],dh
   14002db9b:	add    BYTE PTR [rax],al
   14002db9d:	add    BYTE PTR [rax],al
   14002db9f:	add    BYTE PTR [rbx+0x0],dh
   14002dba2:	jb     0x14002dba4
   14002dba4:	sub    eax,0x70007300
   14002dba9:	add    BYTE PTR [rip+0x79006300],ch        # 0x1b9033eaf
   14002dbaf:	add    BYTE PTR [rdx+0x0],dh
   14002dbb2:	ins    BYTE PTR es:[rdi],dx
   14002dbb3:	add    BYTE PTR [rax],al
   14002dbb5:	add    BYTE PTR [rax],al
   14002dbb7:	add    BYTE PTR [rbx+0x0],dh
   14002dbba:	jb     0x14002dbbc
   14002dbbc:	sub    eax,0x70007300
   14002dbc1:	add    BYTE PTR [rip+0x61006c00],ch        # 0x1a10347c7
   14002dbc7:	add    BYTE PTR [rax+rax*1+0x6e],dh
   14002dbcb:	add    BYTE PTR [rax],al
   14002dbcd:	add    BYTE PTR [rax],al
   14002dbcf:	add    BYTE PTR [rbx+0x0],dh
   14002dbd2:	jbe    0x14002dbd4
   14002dbd4:	sub    eax,0x69006600
   14002dbd9:	add    BYTE PTR [rax],al
   14002dbdb:	add    BYTE PTR [rax],al
   14002dbdd:	add    BYTE PTR [rax],al
   14002dbdf:	add    BYTE PTR [rbx+0x0],dh
   14002dbe2:	jbe    0x14002dbe4
   14002dbe4:	sub    eax,0x65007300
   14002dbe9:	add    BYTE PTR [rax],al
   14002dbeb:	add    BYTE PTR [rax],al
   14002dbed:	add    BYTE PTR [rax],al
   14002dbef:	add    BYTE PTR [rbx+0x0],dh
   14002dbf2:	ja     0x14002dbf4
   14002dbf4:	sub    eax,0x65006b00
   14002dbf9:	add    BYTE PTR [rax],al
   14002dbfb:	add    BYTE PTR [rax],al
   14002dbfd:	add    BYTE PTR [rax],al
   14002dbff:	add    BYTE PTR [rbx+0x0],dh
   14002dc02:	jns    0x14002dc04
   14002dc04:	jb     0x14002dc06
   14002dc06:	sub    eax,0x79007300
   14002dc0b:	add    BYTE PTR [rax],al
   14002dc0d:	add    BYTE PTR [rax],al
   14002dc0f:	add    BYTE PTR [rax+rax*1+0x61],dh
   14002dc13:	add    BYTE PTR [rip+0x6e006900],ch        # 0x1ae034519
   14002dc19:	add    BYTE PTR [rax],al
   14002dc1b:	add    BYTE PTR [rax],al
   14002dc1d:	add    BYTE PTR [rax],al
   14002dc1f:	add    BYTE PTR [rax+rax*1+0x65],dh
   14002dc23:	add    BYTE PTR [rip+0x6e006900],ch        # 0x1ae034529
   14002dc29:	add    BYTE PTR [rax],al
   14002dc2b:	add    BYTE PTR [rax],al
   14002dc2d:	add    BYTE PTR [rax],al
   14002dc2f:	add    BYTE PTR [rax+rax*1+0x68],dh
   14002dc33:	add    BYTE PTR [rip+0x68007400],ch        # 0x1a8035039
   14002dc39:	add    BYTE PTR [rax],al
   14002dc3b:	add    BYTE PTR [rax],al
   14002dc3d:	add    BYTE PTR [rax],al
   14002dc3f:	add    BYTE PTR [rax+rax*1+0x6e],dh
   14002dc43:	add    BYTE PTR [rip+0x61007a00],ch        # 0x1a1035649
   14002dc49:	add    BYTE PTR [rax],al
   14002dc4b:	add    BYTE PTR [rax],al
   14002dc4d:	add    BYTE PTR [rax],al
   14002dc4f:	add    BYTE PTR [rax+rax*1+0x72],dh
   14002dc53:	add    BYTE PTR [rip+0x72007400],ch        # 0x1b2035059
   14002dc59:	add    BYTE PTR [rax],al
   14002dc5b:	add    BYTE PTR [rax],al
   14002dc5d:	add    BYTE PTR [rax],al
   14002dc5f:	add    BYTE PTR [rax+rax*1+0x74],dh
   14002dc63:	add    BYTE PTR [rip+0x75007200],ch        # 0x1b5034e69
   14002dc69:	add    BYTE PTR [rax],al
   14002dc6b:	add    BYTE PTR [rax],al
   14002dc6d:	add    BYTE PTR [rax],al
   14002dc6f:	add    BYTE PTR [rbp+0x0],dh
   14002dc72:	imul   eax,DWORD PTR [rax],0x2d
   14002dc75:	add    BYTE PTR [rbp+0x0],dh
   14002dc78:	(bad)  
   14002dc79:	add    BYTE PTR [rax],al
   14002dc7b:	add    BYTE PTR [rax],al
   14002dc7d:	add    BYTE PTR [rax],al
   14002dc7f:	add    BYTE PTR [rbp+0x0],dh
   14002dc82:	jb     0x14002dc84
   14002dc84:	sub    eax,0x6b007000
   14002dc89:	add    BYTE PTR [rax],al
   14002dc8b:	add    BYTE PTR [rax],al
   14002dc8d:	add    BYTE PTR [rax],al
   14002dc8f:	add    BYTE PTR [rbp+0x0],dh
   14002dc92:	jp     0x14002dc94
   14002dc94:	sub    eax,0x7a007500
   14002dc99:	add    BYTE PTR [rip+0x79006300],ch        # 0x1b9033f9f
   14002dc9f:	add    BYTE PTR [rdx+0x0],dh
   14002dca2:	ins    BYTE PTR es:[rdi],dx
   14002dca3:	add    BYTE PTR [rax],al
   14002dca5:	add    BYTE PTR [rax],al
   14002dca7:	add    BYTE PTR [rbp+0x0],dh
   14002dcaa:	jp     0x14002dcac
   14002dcac:	sub    eax,0x7a007500
   14002dcb1:	add    BYTE PTR [rip+0x61006c00],ch        # 0x1a10348b7
   14002dcb7:	add    BYTE PTR [rax+rax*1+0x6e],dh
   14002dcbb:	add    BYTE PTR [rax],al
   14002dcbd:	add    BYTE PTR [rax],al
   14002dcbf:	add    BYTE PTR [rsi+0x0],dh
   14002dcc2:	imul   eax,DWORD PTR [rax],0x76002d
   14002dcc8:	outs   dx,BYTE PTR ds:[rsi]
   14002dcc9:	add    BYTE PTR [rax],al
   14002dccb:	add    BYTE PTR [rax],al
   14002dccd:	add    BYTE PTR [rax],al
   14002dccf:	add    BYTE PTR [rax+0x0],bh
   14002dcd2:	push   0x7a002d00
   14002dcd7:	add    BYTE PTR [rcx+0x0],ah
   14002dcda:	add    BYTE PTR [rax],al
   14002dcdc:	add    BYTE PTR [rax],al
   14002dcde:	add    BYTE PTR [rax],al
   14002dce0:	jp     0x14002dce2
   14002dce2:	push   0x63002d00
   14002dce7:	add    BYTE PTR [rax+0x0],ch
   14002dcea:	jae    0x14002dcec
   14002dcec:	add    BYTE PTR [rax],al
   14002dcee:	add    BYTE PTR [rax],al
   14002dcf0:	jp     0x14002dcf2
   14002dcf2:	push   0x63002d00
   14002dcf7:	add    BYTE PTR [rax+0x0],ch
   14002dcfa:	je     0x14002dcfc
   14002dcfc:	add    BYTE PTR [rax],al
   14002dcfe:	add    BYTE PTR [rax],al
   14002dd00:	jp     0x14002dd02
   14002dd02:	push   0x63002d00
   14002dd07:	add    BYTE PTR [rsi+0x0],ch
   14002dd0a:	add    BYTE PTR [rax],al
   14002dd0c:	add    BYTE PTR [rax],al
   14002dd0e:	add    BYTE PTR [rax],al
   14002dd10:	jp     0x14002dd12
   14002dd12:	push   0x68002d00
   14002dd17:	add    BYTE PTR [rbx+0x0],ch
   14002dd1a:	add    BYTE PTR [rax],al
   14002dd1c:	add    BYTE PTR [rax],al
   14002dd1e:	add    BYTE PTR [rax],al
   14002dd20:	jp     0x14002dd22
   14002dd22:	push   0x6d002d00
   14002dd27:	add    BYTE PTR [rdi+0x0],ch
   14002dd2a:	add    BYTE PTR [rax],al
   14002dd2c:	add    BYTE PTR [rax],al
   14002dd2e:	add    BYTE PTR [rax],al
   14002dd30:	jp     0x14002dd32
   14002dd32:	push   0x73002d00
   14002dd37:	add    BYTE PTR [rdi+0x0],ah
   14002dd3a:	add    BYTE PTR [rax],al
   14002dd3c:	add    BYTE PTR [rax],al
   14002dd3e:	add    BYTE PTR [rax],al
   14002dd40:	jp     0x14002dd42
   14002dd42:	push   0x74002d00
   14002dd47:	add    BYTE PTR [rdi+0x0],dh
   14002dd4a:	add    BYTE PTR [rax],al
   14002dd4c:	add    BYTE PTR [rax],al
   14002dd4e:	add    BYTE PTR [rax],al
   14002dd50:	jp     0x14002dd52
   14002dd52:	jne    0x14002dd54
   14002dd54:	sub    eax,0x61007a00
   14002dd59:	add    BYTE PTR [rax],al
   14002dd5b:	add    BYTE PTR [rax],al
   14002dd5d:	add    BYTE PTR [rax],al
   14002dd5f:	add    BYTE PTR [rbp+0x0],dl
   14002dd62:	push   rbx
   14002dd63:	add    BYTE PTR [rbp+0x0],al
   14002dd66:	push   rdx
   14002dd67:	add    BYTE PTR [rbx],dh
   14002dd69:	add    BYTE PTR [rdx],dh
   14002dd6b:	add    BYTE PTR [rsi],ch
   14002dd6d:	add    BYTE PTR [rax+rax*1+0x4c],al
   14002dd71:	add    BYTE PTR [rax+rax*1+0x0],cl
   14002dd75:	add    BYTE PTR [rax],al
   14002dd77:	add    BYTE PTR [rbp+0x65],cl
   14002dd7a:	jae    0x14002ddef
   14002dd7c:	(bad)  
   14002dd7d:	rex.X outs dx,DWORD PTR gs:[esi]
   14002dd81:	js     0x14002ddda
   14002dd83:	add    BYTE PTR [rax],al
   14002dd85:	add    BYTE PTR [rax],al
   14002dd87:	add    BYTE PTR [rdi+0x65],al
   14002dd8a:	je     0x14002ddcd
   14002dd8c:	movsxd esi,DWORD PTR [rcx+rbp*2+0x76]
   14002dd90:	gs push rdi
   14002dd92:	imul   ebp,DWORD PTR [rsi+0x64],0x4700776f
   14002dd99:	gs je  0x14002dde8
   14002dd9c:	(bad)  
   14002dd9d:	jae    0x14002de13
   14002dd9f:	movsxd esi,DWORD PTR [r9+rbp*2+0x76]
   14002dda4:	gs push rax
   14002dda6:	outs   dx,DWORD PTR ds:[rsi]
   14002dda7:	jo     0x14002de1e
   14002dda9:	jo     0x14002ddab
   14002ddab:	add    BYTE PTR [rax],al
   14002ddad:	add    BYTE PTR [rax],al
   14002ddaf:	add    BYTE PTR [rdi+0x65],al
   14002ddb2:	je     0x14002de09
   14002ddb4:	jae    0x14002de1b
   14002ddb6:	jb     0x14002de07
   14002ddb8:	(bad)  
   14002ddb9:	push   0x65
   14002ddbb:	movsxd esi,DWORD PTR [rcx+rcx*2+0x6e]
   14002ddbf:	outs   dx,WORD PTR ds:[rsi]
   14002ddc1:	jb     0x14002de30
   14002ddc3:	(bad)  
   14002ddc4:	je     0x14002de2f
   14002ddc6:	outs   dx,DWORD PTR ds:[rsi]
   14002ddc7:	outs   dx,BYTE PTR ds:[rsi]
   14002ddc8:	push   rdi
   14002ddc9:	add    BYTE PTR [rax],al
   14002ddcb:	add    BYTE PTR [rax],al
   14002ddcd:	add    BYTE PTR [rax],al
   14002ddcf:	add    BYTE PTR [rdi+0x65],al
   14002ddd2:	je     0x14002de24
   14002ddd4:	jb     0x14002de45
   14002ddd6:	movsxd esp,DWORD PTR [rbp+0x73]
   14002ddd9:	jae    0x14002de32
   14002dddb:	imul   ebp,DWORD PTR [rsi+0x64],0x7453776f
   14002dde2:	(bad)  
   14002dde3:	je     0x14002de4e
   14002dde5:	outs   dx,DWORD PTR ds:[rsi]
   14002dde6:	outs   dx,BYTE PTR ds:[rsi]
   14002dde7:	add    BYTE PTR [rbx+0x75],dl
   14002ddea:	outs   dx,BYTE PTR ds:[rsi]
   14002ddeb:	add    BYTE PTR [rbp+0x6f],cl
   14002ddee:	outs   dx,BYTE PTR ds:[rsi]
   14002ddef:	add    BYTE PTR [rbp+rsi*2+0x65],dl
   14002ddf3:	add    BYTE PTR [rdi+0x65],dl
   14002ddf6:	add    BYTE PTR fs:[rax+rbp*2+0x75],dl
   14002ddfb:	add    BYTE PTR [rsi+0x72],al
   14002ddfe:	imul   eax,DWORD PTR [rax],0x746153
   14002de04:	push   rbx
   14002de05:	jne    0x14002de75
   14002de07:	fs (bad) 
   14002de09:	jns    0x14002de0b
   14002de0b:	add    BYTE PTR [rbp+0x6f],cl
   14002de0e:	outs   dx,BYTE PTR ds:[rsi]
   14002de0f:	fs (bad) 
   14002de11:	jns    0x14002de13
   14002de13:	add    BYTE PTR [rax],al
   14002de15:	add    BYTE PTR [rax],al
   14002de17:	add    BYTE PTR [rbp+rsi*2+0x65],dl
   14002de1b:	jae    0x14002de81
   14002de1d:	(bad)  
   14002de1e:	jns    0x14002de20
   14002de20:	push   rdi
   14002de21:	gs outs dx,BYTE PTR fs:[rsi]
   14002de24:	gs jae 0x14002de8b
   14002de27:	(bad)  
   14002de28:	jns    0x14002de2a
   14002de2a:	add    BYTE PTR [rax],al
   14002de2c:	add    BYTE PTR [rax],al
   14002de2e:	add    BYTE PTR [rax],al
   14002de30:	push   rsp
   14002de31:	push   0x64737275
   14002de36:	(bad)  
   14002de37:	jns    0x14002de39
   14002de39:	add    BYTE PTR [rax],al
   14002de3b:	add    BYTE PTR [rsi+0x72],al
   14002de3e:	imul   esp,DWORD PTR [rcx+riz*2+0x79],0x0
   14002de46:	add    BYTE PTR [rax],al
   14002de48:	push   rbx
   14002de49:	(bad)  
   14002de4a:	je     0x14002dec1
   14002de4c:	jb     0x14002deb2
   14002de4e:	(bad)  
   14002de4f:	jns    0x14002de51
   14002de51:	add    BYTE PTR [rax],al
   14002de53:	add    BYTE PTR [rdx+0x61],cl
   14002de56:	outs   dx,BYTE PTR ds:[rsi]
   14002de57:	add    BYTE PTR [rsi+0x65],al
   14002de5a:	(bad)  
   14002de5b:	add    BYTE PTR [rbp+0x61],cl
   14002de5e:	jb     0x14002de60
   14002de60:	rex.B jo 0x14002ded5
   14002de63:	add    BYTE PTR [rbp+0x61],cl
   14002de66:	jns    0x14002de68
   14002de68:	rex.WX jne 0x14002ded9
   14002de6b:	add    BYTE PTR [rdx+0x75],cl
   14002de6e:	ins    BYTE PTR es:[rdi],dx
   14002de6f:	add    BYTE PTR [rcx+0x75],al
   14002de72:	add    BYTE PTR [ebx+0x65],dl
   14002de76:	jo     0x14002de78
   14002de78:	movsxd r14,DWORD PTR [r8+r8*1+0x4e]
   14002de7d:	outs   dx,DWORD PTR ds:[rsi]
   14002de7e:	jbe    0x14002de80
   14002de80:	rex.R
   14002de81:	movsxd eax,DWORD PTR gs:[rax]
   14002de84:	add    BYTE PTR [rax],al
   14002de86:	add    BYTE PTR [rax],al
   14002de88:	rex.WX (bad) 
   14002de8a:	outs   dx,BYTE PTR ds:[rsi]
   14002de8b:	jne    0x14002deee
   14002de8d:	jb     0x14002df08
   14002de8f:	add    BYTE PTR [rsi+0x65],al
   14002de92:	(bad)
   14002de97:	jns    0x14002de99
   14002de99:	add    BYTE PTR [rax],al
   14002de9b:	add    BYTE PTR [rbp+0x61],cl
   14002de9e:	jb     0x14002df03
   14002dea0:	push   0x41000000
   14002dea5:	jo     0x14002df19
   14002dea7:	imul   ebp,DWORD PTR [rax+rax*1+0x0],0x6e754a00
   14002deaf:	add    BYTE PTR gs:[rax],al
   14002deb2:	add    BYTE PTR [rax],al
   14002deb4:	rex.WX jne 0x14002df23
   14002deb7:	jns    0x14002deb9
   14002deb9:	add    BYTE PTR [rax],al
   14002debb:	add    BYTE PTR [rcx+0x75],al
   14002debe:	addr32 jne 0x14002df34
   14002dec1:	je     0x14002dec3
   14002dec3:	add    BYTE PTR [rax],al
   14002dec5:	add    BYTE PTR [rax],al
   14002dec7:	add    BYTE PTR [rbx+0x65],dl
   14002deca:	jo     0x14002df40
   14002decc:	gs ins DWORD PTR es:[rdi],dx
   14002dece:	(bad)  
   14002decf:	gs jb  0x14002ded2
   14002ded2:	add    BYTE PTR [rax],al
   14002ded4:	add    BYTE PTR [rax],al
   14002ded6:	add    BYTE PTR [rax],al
   14002ded8:	movsxd r14,DWORD PTR [r15+r13*2+0x62]
   14002dedd:	gs jb  0x14002dee0
   14002dee0:	rex.WRX outs dx,DWORD PTR ds:[rsi]
   14002dee2:	jbe    0x14002df49
   14002dee4:	ins    DWORD PTR es:[rdi],dx
   14002dee5:	(bad)  
   14002dee6:	gs jb  0x14002dee9
   14002dee9:	add    BYTE PTR [rax],al
   14002deeb:	add    BYTE PTR [rax],al
   14002deed:	add    BYTE PTR [rax],al
   14002deef:	add    BYTE PTR [rbp+riz*2+0x63],al
   14002def3:	gs ins DWORD PTR es:[rdi],dx
   14002def5:	(bad)  
   14002def6:	gs jb  0x14002def9
   14002def9:	add    BYTE PTR [rax],al
   14002defb:	add    BYTE PTR [rcx+0x4d],al
   14002defe:	add    BYTE PTR [rax],al
   14002df00:	push   rax
   14002df01:	rex.WRB add BYTE PTR [r8],r8b
   14002df04:	add    BYTE PTR [rax],al
   14002df06:	add    BYTE PTR [rax],al
   14002df08:	rex.WRB
   14002df09:	rex.WRB (bad) 
   14002df0b:	fs fs (bad) 
   14002df0e:	jns    0x14002df89
	...
   14002df18:	fs fs fs fs sub al,0x20
   14002df1e:	rex.WRB
   14002df1f:	rex.WRB
   14002df20:	rex.WRB
   14002df21:	rex.WRB and BYTE PTR [r12+riz*2+0x2c],r12b
   14002df26:	and    BYTE PTR [rcx+0x79],bh
   14002df29:	jns    0x14002dfa4
   14002df2b:	add    BYTE PTR [rax],al
   14002df2d:	add    BYTE PTR [rax],al
   14002df2f:	add    BYTE PTR [rax+0x48],cl
   14002df32:	cmp    ch,BYTE PTR [rbp+0x6d]
   14002df35:	cmp    dh,BYTE PTR [rbx+0x73]
	...
   14002df40:	push   rbx
   14002df41:	add    BYTE PTR [rbp+0x0],dh
   14002df44:	outs   dx,BYTE PTR ds:[rsi]
   14002df45:	add    BYTE PTR [rax],al
   14002df47:	add    BYTE PTR [rbp+0x0],cl
   14002df4a:	outs   dx,DWORD PTR ds:[rsi]
   14002df4b:	add    BYTE PTR [rsi+0x0],ch
   14002df4e:	add    BYTE PTR [rax],al
   14002df50:	push   rsp
   14002df51:	add    BYTE PTR [rbp+0x0],dh
   14002df54:	add    BYTE PTR gs:[rax],al
   14002df57:	add    BYTE PTR [rdi+0x0],dl
   14002df5a:	add    BYTE PTR gs:[rax+rax*1+0x0],ah
   14002df5f:	add    BYTE PTR [rax+rax*1+0x68],dl
   14002df63:	add    BYTE PTR [rbp+0x0],dh
   14002df66:	add    BYTE PTR [rax],al
   14002df68:	rex.RX add BYTE PTR [rdx+0x0],r14b
   14002df6c:	imul   eax,DWORD PTR [rax],0x530000
   14002df72:	(bad)  
   14002df73:	add    BYTE PTR [rax+rax*1+0x0],dh
   14002df77:	add    BYTE PTR [rbx+0x0],dl
   14002df7a:	jne    0x14002df7c
   14002df7c:	outs   dx,BYTE PTR ds:[rsi]
   14002df7d:	add    BYTE PTR [rax+rax*1+0x61],ah
   14002df81:	add    BYTE PTR [rcx+0x0],bh
   14002df84:	add    BYTE PTR [rax],al
   14002df86:	add    BYTE PTR [rax],al
   14002df88:	rex.WRB add BYTE PTR [r15+0x0],r13b
   14002df8c:	outs   dx,BYTE PTR ds:[rsi]
   14002df8d:	add    BYTE PTR [rax+rax*1+0x61],ah
   14002df91:	add    BYTE PTR [rcx+0x0],bh
   14002df94:	add    BYTE PTR [rax],al
   14002df96:	add    BYTE PTR [rax],al
   14002df98:	push   rsp
   14002df99:	add    BYTE PTR [rbp+0x0],dh
   14002df9c:	add    BYTE PTR gs:[rbx+0x0],dh
   14002dfa0:	add    BYTE PTR fs:[rcx+0x0],ah
   14002dfa4:	jns    0x14002dfa6
   14002dfa6:	add    BYTE PTR [rax],al
   14002dfa8:	push   rdi
   14002dfa9:	add    BYTE PTR [rbp+0x0],ah
   14002dfac:	add    BYTE PTR fs:[rsi+0x0],ch
   14002dfb0:	add    BYTE PTR gs:[rbx+0x0],dh
   14002dfb4:	add    BYTE PTR fs:[rcx+0x0],ah
   14002dfb8:	jns    0x14002dfba
   14002dfba:	add    BYTE PTR [rax],al
   14002dfbc:	add    BYTE PTR [rax],al
   14002dfbe:	add    BYTE PTR [rax],al
   14002dfc0:	push   rsp
   14002dfc1:	add    BYTE PTR [rax+0x0],ch
   14002dfc4:	jne    0x14002dfc6
   14002dfc6:	jb     0x14002dfc8
   14002dfc8:	jae    0x14002dfca
   14002dfca:	add    BYTE PTR fs:[rcx+0x0],ah
   14002dfce:	jns    0x14002dfd0
	...
   14002dfd8:	rex.RX add BYTE PTR [rdx+0x0],r14b
   14002dfdc:	imul   eax,DWORD PTR [rax],0x610064
   14002dfe2:	jns    0x14002dfe4
   14002dfe4:	add    BYTE PTR [rax],al
   14002dfe6:	add    BYTE PTR [rax],al
   14002dfe8:	push   rbx
   14002dfe9:	add    BYTE PTR [rcx+0x0],ah
   14002dfec:	je     0x14002dfee
   14002dfee:	jne    0x14002dff0
   14002dff0:	jb     0x14002dff2
   14002dff2:	add    BYTE PTR fs:[rcx+0x0],ah
   14002dff6:	jns    0x14002dff8
	...
   14002e000:	rex.WX add BYTE PTR [rcx+0x0],spl
   14002e004:	outs   dx,BYTE PTR ds:[rsi]
   14002e005:	add    BYTE PTR [rax],al
   14002e007:	add    BYTE PTR [rsi+0x0],al
   14002e00a:	add    BYTE PTR gs:[rdx+0x0],ah
   14002e00e:	add    BYTE PTR [rax],al
   14002e010:	rex.WRB add BYTE PTR [r9+0x0],r12b
   14002e014:	jb     0x14002e016
   14002e016:	add    BYTE PTR [rax],al
   14002e018:	add    BYTE PTR [r8+0x0],sil
   14002e01c:	jb     0x14002e01e
   14002e01e:	add    BYTE PTR [rax],al
   14002e020:	rex.WRB add BYTE PTR [r9+0x0],r12b
   14002e024:	jns    0x14002e026
   14002e026:	add    BYTE PTR [rax],al
   14002e028:	rex.WX add BYTE PTR [rbp+0x0],sil
   14002e02c:	outs   dx,BYTE PTR ds:[rsi]
   14002e02d:	add    BYTE PTR [rax],al
   14002e02f:	add    BYTE PTR [rdx+0x0],cl
   14002e032:	jne    0x14002e034
   14002e034:	ins    BYTE PTR es:[rdi],dx
   14002e035:	add    BYTE PTR [rax],al
   14002e037:	add    BYTE PTR [rcx+0x0],al
   14002e03a:	jne    0x14002e03c
   14002e03c:	add    BYTE PTR [eax],al
   14002e03f:	add    BYTE PTR [rbx+0x0],dl
   14002e042:	add    BYTE PTR gs:[rax+0x0],dh
   14002e046:	add    BYTE PTR [rax],al
   14002e048:	rex.WRXB add BYTE PTR [r11+0x0],r12b
   14002e04c:	je     0x14002e04e
   14002e04e:	add    BYTE PTR [rax],al
   14002e050:	rex.WRX add BYTE PTR [rdi+0x0],r13b
   14002e054:	jbe    0x14002e056
   14002e056:	add    BYTE PTR [rax],al
   14002e058:	add    BYTE PTR [rbp+0x0],r12b
   14002e05c:	movsxd eax,DWORD PTR [rax]
   14002e05e:	add    BYTE PTR [rax],al
   14002e060:	rex.WX add BYTE PTR [rcx+0x0],spl
   14002e064:	outs   dx,BYTE PTR ds:[rsi]
   14002e065:	add    BYTE PTR [rbp+0x0],dh
   14002e068:	(bad)  
   14002e069:	add    BYTE PTR [rdx+0x0],dh
   14002e06c:	jns    0x14002e06e
   14002e06e:	add    BYTE PTR [rax],al
   14002e070:	rex.RX add BYTE PTR [rbp+0x0],r12b
   14002e074:	(bad)  
   14002e075:	add    BYTE PTR [rdx+0x0],dh
   14002e078:	jne    0x14002e07a
   14002e07a:	(bad)  
   14002e07b:	add    BYTE PTR [rdx+0x0],dh
   14002e07e:	jns    0x14002e080
	...
   14002e088:	rex.WRB add BYTE PTR [r9+0x0],r12b
   14002e08c:	jb     0x14002e08e
   14002e08e:	movsxd eax,DWORD PTR [rax]
   14002e090:	push   0x0
   14002e095:	add    BYTE PTR [rax],al
   14002e097:	add    BYTE PTR [rcx+0x0],al
   14002e09a:	jo     0x14002e09c
   14002e09c:	jb     0x14002e09e
   14002e09e:	imul   eax,DWORD PTR [rax],0x6c
   14002e0a4:	add    BYTE PTR [rax],al
   14002e0a6:	add    BYTE PTR [rax],al
   14002e0a8:	rex.WX add BYTE PTR [rbp+0x0],sil
   14002e0ac:	outs   dx,BYTE PTR ds:[rsi]
   14002e0ad:	add    BYTE PTR [rbp+0x0],ah
	...
   14002e0b8:	rex.WX add BYTE PTR [rbp+0x0],sil
   14002e0bc:	ins    BYTE PTR es:[rdi],dx
   14002e0bd:	add    BYTE PTR [rcx+0x0],bh
	...
   14002e0c8:	add    BYTE PTR [r13+0x0],sil
   14002e0cc:	add    BYTE PTR [ebp+0x0],dh
   14002e0d0:	jae    0x14002e0d2
   14002e0d2:	je     0x14002e0d4
   14002e0d4:	add    BYTE PTR [rax],al
   14002e0d6:	add    BYTE PTR [rax],al
   14002e0d8:	push   rbx
   14002e0d9:	add    BYTE PTR [rbp+0x0],ah
   14002e0dc:	jo     0x14002e0de
   14002e0de:	je     0x14002e0e0
   14002e0e0:	add    BYTE PTR gs:[rbp+0x0],ch
   14002e0e4:	(bad)  
   14002e0e5:	add    BYTE PTR [rbp+0x0],ah
   14002e0e8:	jb     0x14002e0ea
   14002e0ea:	add    BYTE PTR [rax],al
   14002e0ec:	add    BYTE PTR [rax],al
   14002e0ee:	add    BYTE PTR [rax],al
   14002e0f0:	rex.WRXB add BYTE PTR [r11+0x0],r12b
   14002e0f4:	je     0x14002e0f6
   14002e0f6:	outs   dx,DWORD PTR ds:[rsi]
   14002e0f7:	add    BYTE PTR [rdx+0x0],ah
   14002e0fa:	add    BYTE PTR gs:[rdx+0x0],dh
   14002e0fe:	add    BYTE PTR [rax],al
   14002e100:	rex.WRX add BYTE PTR [rdi+0x0],r13b
   14002e104:	jbe    0x14002e106
   14002e106:	add    BYTE PTR gs:[rbp+0x0],ch
   14002e10a:	(bad)  
   14002e10b:	add    BYTE PTR [rbp+0x0],ah
   14002e10e:	jb     0x14002e110
	...
   14002e118:	add    BYTE PTR [rbp+0x0],r12b
   14002e11c:	movsxd eax,DWORD PTR [rax]
   14002e11e:	add    BYTE PTR gs:[rbp+0x0],ch
   14002e122:	(bad)  
   14002e123:	add    BYTE PTR [rbp+0x0],ah
   14002e126:	jb     0x14002e128
   14002e128:	add    BYTE PTR [rax],al
   14002e12a:	add    BYTE PTR [rax],al
   14002e12c:	add    BYTE PTR [r13+0x0],cl
   14002e130:	add    BYTE PTR [rax],al
   14002e132:	add    BYTE PTR [rax],al
   14002e134:	push   rax
   14002e135:	add    BYTE PTR [rbp+0x0],cl
	...
   14002e140:	rex.WRB add BYTE PTR [r13+0x0],r9b
   14002e144:	(bad)  
   14002e145:	add    BYTE PTR [rax+rax*1+0x64],ah
   14002e149:	add    BYTE PTR [rdi],ch
   14002e14b:	add    BYTE PTR [rcx+0x0],bh
   14002e14e:	jns    0x14002e150
	...
   14002e158:	add    BYTE PTR fs:[rax+rax*1+0x64],ah
   14002e15d:	add    BYTE PTR [rax+rax*1+0x2c],ah
   14002e161:	add    BYTE PTR [rax],ah
   14002e163:	add    BYTE PTR [rbp+0x0],cl
   14002e166:	rex.WRB add BYTE PTR [r13+0x0],r9b
   14002e16a:	rex.WRB add BYTE PTR [r8],r12b
   14002e16d:	add    BYTE PTR [rax+rax*1+0x64],ah
   14002e171:	add    BYTE PTR [rax+rax*1],ch
   14002e174:	and    BYTE PTR [rax],al
   14002e176:	jns    0x14002e178
   14002e178:	jns    0x14002e17a
   14002e17a:	jns    0x14002e17c
   14002e17c:	jns    0x14002e17e
   14002e17e:	add    BYTE PTR [rax],al
   14002e180:	rex.W add BYTE PTR [rax+0x0],cl
   14002e184:	cmp    al,BYTE PTR [rax]
   14002e186:	ins    DWORD PTR es:[rdi],dx
   14002e187:	add    BYTE PTR [rbp+0x0],ch
   14002e18a:	cmp    al,BYTE PTR [rax]
   14002e18c:	jae    0x14002e18e
   14002e18e:	jae    0x14002e190
	...
   14002e1a0:	(bad)  
   14002e1a1:	(bad)  
   14002e1a2:	(bad)  
   14002e1a3:	(bad)  
   14002e1a4:	(bad)  
   14002e1a5:	(bad)  
   14002e1a6:	(bad)  
   14002e1a7:	rex.XB (bad) 
   14002e1a9:	(bad)  
   14002e1aa:	(bad)  
   14002e1ab:	(bad)  
   14002e1ac:	(bad)  
   14002e1ad:	(bad)  
   14002e1ae:	(bad)  
   14002e1af:	ret    
   14002e1b0:	gs js  0x14002e223
   14002e1b3:	add    BYTE PTR [rax+0x6f],dh
   14002e1b6:	ja     0x14002e1b8
   14002e1b8:	ins    BYTE PTR es:[rdi],dx
   14002e1b9:	outs   dx,DWORD PTR ds:[rsi]
   14002e1ba:	add    BYTE PTR [edi+ebp*2+0x67],ch
   14002e1bf:	xor    DWORD PTR [rax],esi
   14002e1c1:	add    BYTE PTR [rax],al
   14002e1c3:	add    BYTE PTR [rbx+0x69],dh
   14002e1c6:	outs   dx,BYTE PTR ds:[rsi]
   14002e1c7:	push   0x0
   14002e1cc:	movsxd ebp,DWORD PTR [rdi+0x73]
   14002e1cf:	push   0x0
   14002e1d4:	je     0x14002e237
   14002e1d6:	outs   dx,BYTE PTR ds:[rsi]
   14002e1d7:	push   0x0
   14002e1dc:	(bad)  
   14002e1dd:	jae    0x14002e248
   14002e1df:	outs   dx,BYTE PTR ds:[rsi]
   14002e1e0:	add    BYTE PTR [rax],al
   14002e1e2:	add    BYTE PTR [rax],al
   14002e1e4:	(bad)  
   14002e1e5:	movsxd ebp,DWORD PTR [rdi+0x73]
   14002e1e8:	add    BYTE PTR [rax],al
   14002e1ea:	add    BYTE PTR [rax],al
   14002e1ec:	(bad)  
   14002e1ed:	je     0x14002e250
   14002e1ef:	outs   dx,BYTE PTR ds:[rsi]
   14002e1f0:	add    BYTE PTR [rax],al
   14002e1f2:	add    BYTE PTR [rax],al
   14002e1f4:	(bad)  
   14002e1f5:	je     0x14002e258
   14002e1f7:	outs   dx,BYTE PTR ds:[rsi]
   14002e1f8:	xor    al,BYTE PTR [rax]
   14002e1fa:	add    BYTE PTR [rax],al
   14002e1fc:	jae    0x14002e26f
   14002e1fe:	jb     0x14002e274
   14002e200:	add    BYTE PTR [rax],al
   14002e202:	add    BYTE PTR [rax],al
   14002e204:	jae    0x14002e26f
   14002e206:	outs   dx,BYTE PTR ds:[rsi]
   14002e207:	add    BYTE PTR [rbx+0x6f],ah
   14002e20a:	jae    0x14002e20c
   14002e20c:	je     0x14002e26f
   14002e20e:	outs   dx,BYTE PTR ds:[rsi]
   14002e20f:	add    BYTE PTR [rbx+0x65],ah
   14002e212:	imul   ebp,DWORD PTR [rax+rax*1+0x0],0x6c660000
   14002e21a:	outs   dx,DWORD PTR ds:[rsi]
   14002e21b:	outs   dx,DWORD PTR ds:[rsi]
   14002e21c:	jb     0x14002e21e
   14002e21e:	add    BYTE PTR [rax],al
   14002e220:	data16 (bad) 
   14002e222:	(bad)  
   14002e224:	add    BYTE PTR [rax],al
   14002e226:	add    BYTE PTR [rax],al
   14002e228:	ins    DWORD PTR es:[rdi],dx
   14002e229:	outs   dx,DWORD PTR ds:[rsi]
   14002e22a:	data16 add BYTE PTR fs:[rax],al
   14002e22e:	add    BYTE PTR [rax],al
   14002e230:	ins    BYTE PTR es:[rdi],dx
   14002e231:	fs gs js 0x14002e2a5
   14002e235:	add    BYTE PTR [rax],al
   14002e237:	add    BYTE PTR [rdi+0x63],bl
   14002e23a:	(bad)  
   14002e23b:	(bad)  
   14002e23d:	add    BYTE PTR [rax],al
   14002e23f:	add    BYTE PTR [rsi+0x6d],ah
   14002e242:	outs   dx,DWORD PTR ds:[rsi]
   14002e243:	add    BYTE PTR fs:[rax],al
   14002e246:	add    BYTE PTR [rax],al
   14002e248:	data16 jb 0x14002e2b0
   14002e24b:	js     0x14002e2bd
   14002e24d:	add    BYTE PTR [rax],al
   14002e24f:	add    BYTE PTR [rdi+0x79],bl
   14002e252:	xor    BYTE PTR [rax],al
   14002e254:	pop    rdi
   14002e255:	jns    0x14002e288
   14002e257:	add    BYTE PTR [rdi+0x79],bl
   14002e25a:	outs   dx,BYTE PTR ds:[rsi]
   14002e25b:	add    BYTE PTR [rdi+0x6c],bl
   14002e25e:	outs   dx,DWORD PTR ds:[rsi]
   14002e25f:	addr32 (bad) 
   14002e261:	add    BYTE PTR [rax],al
   14002e263:	add    BYTE PTR [rax],al
   14002e265:	add    BYTE PTR [rax],al
   14002e267:	add    BYTE PTR [rdi+0x6e],bl
   14002e26a:	gs js  0x14002e2e1
   14002e26d:	(bad)  
   14002e26e:	data16 je 0x14002e2d6
   14002e271:	jb     0x14002e273
	...
   14002e287:	add    BYTE PTR [rax],0x0
   14002e28a:	add    BYTE PTR [rax],al
   14002e28c:	add    BYTE PTR [rax],al
   14002e28e:	add    BYTE PTR [rax+0x400389e0],al
   14002e294:	add    DWORD PTR [rax],eax
   14002e296:	add    BYTE PTR [rax],al
   14002e298:	or     BYTE PTR [rdx+0x14003],0x0
   14002e29f:	add    BYTE PTR [rax+0x14002e5],bh
   14002e2a5:	add    BYTE PTR [rax],al
   14002e2a7:	add    al,cl
   14002e2a9:	in     eax,0x2
   14002e2ab:	rex add DWORD PTR [rax],eax
   14002e2ae:	add    BYTE PTR [rax],al
   14002e2b0:	shl    ch,1
   14002e2b2:	add    al,BYTE PTR [rax+0x1]
   14002e2b5:	add    BYTE PTR [rax],al
   14002e2b7:	add    al,ah
   14002e2b9:	in     eax,0x2
   14002e2bb:	rex add DWORD PTR [rax],eax
   14002e2be:	add    BYTE PTR [rax],al
   14002e2c0:	lock in eax,0x2
   14002e2c3:	rex add DWORD PTR [rax],eax
   14002e2c6:	add    BYTE PTR [rax],al
   14002e2c8:	add    dh,ah
   14002e2ca:	add    al,BYTE PTR [rax+0x1]
   14002e2cd:	add    BYTE PTR [rax],al
   14002e2cf:	add    BYTE PTR [rax],dl
   14002e2d1:	out    0x2,al
   14002e2d3:	rex add DWORD PTR [rax],eax
   14002e2d6:	add    BYTE PTR [rax],al
   14002e2d8:	and    dh,ah
   14002e2da:	add    al,BYTE PTR [rax+0x1]
   14002e2dd:	add    BYTE PTR [rax],al
   14002e2df:	add    BYTE PTR [rsi+riz*8],ch
   14002e2e2:	add    al,BYTE PTR [rax+0x1]
   14002e2e5:	add    BYTE PTR [rax],al
   14002e2e7:	add    BYTE PTR [rax],bh
   14002e2e9:	out    0x2,al
   14002e2eb:	rex add DWORD PTR [rax],eax
   14002e2ee:	add    BYTE PTR [rax],al
   14002e2f0:	out    0x2,al
   14002e2f3:	rex add DWORD PTR [rax],eax
   14002e2f6:	add    BYTE PTR [rax],al
   14002e2f8:	push   rax
   14002e2f9:	out    0x2,al
   14002e2fb:	rex add DWORD PTR [rax],eax
   14002e2fe:	add    BYTE PTR [rax],al
   14002e300:	(bad)  
   14002e301:	out    0x2,al
   14002e303:	rex add DWORD PTR [rax],eax
   14002e306:	add    BYTE PTR [rax],al
   14002e308:	push   rax
   14002e309:	stos   BYTE PTR es:[rdi],al
   14002e30a:	add    al,BYTE PTR [rax+0x1]
   14002e30d:	add    BYTE PTR [rax],al
   14002e30f:	add    BYTE PTR [rsi+riz*8+0x2],ch
   14002e313:	rex add DWORD PTR [rax],eax
   14002e316:	add    BYTE PTR [rax],al
   14002e318:	js     0x14002e300
   14002e31a:	add    al,BYTE PTR [rax+0x1]
   14002e31d:	add    BYTE PTR [rax],al
   14002e31f:	add    BYTE PTR [rax+0x14002e6],al
   14002e325:	add    BYTE PTR [rax],al
   14002e327:	add    BYTE PTR [rsi+riz*8+0x14002],al
   14002e32e:	add    BYTE PTR [rax],al
   14002e330:	mov    dh,ah
   14002e332:	add    al,BYTE PTR [rax+0x1]
   14002e335:	add    BYTE PTR [rax],al
   14002e337:	add    BYTE PTR [rsi+riz*8+0x14002],cl
   14002e33e:	add    BYTE PTR [rax],al
   14002e340:	nop
   14002e341:	out    0x2,al
   14002e343:	rex add DWORD PTR [rax],eax
   14002e346:	add    BYTE PTR [rax],al
   14002e348:	xchg   esp,eax
   14002e349:	out    0x2,al
   14002e34b:	rex add DWORD PTR [rax],eax
   14002e34e:	add    BYTE PTR [rax],al
   14002e350:	cwde   
   14002e351:	out    0x2,al
   14002e353:	rex add DWORD PTR [rax],eax
   14002e356:	add    BYTE PTR [rax],al
   14002e358:	movabs al,ds:0xac000000014002e6
   14002e361:	out    0x2,al
   14002e363:	rex add DWORD PTR [rax],eax
   14002e366:	add    BYTE PTR [rax],al
   14002e368:	mov    al,0xe6
   14002e36a:	add    al,BYTE PTR [rax+0x1]
   14002e36d:	add    BYTE PTR [rax],al
   14002e36f:	add    BYTE PTR [rsi+riz*8+0x14002],dh
   14002e376:	add    BYTE PTR [rax],al
   14002e378:	mov    eax,0x14002e6
   14002e37d:	add    BYTE PTR [rax],al
   14002e37f:	add    BYTE PTR [rsi+riz*8+0x14002],bh
   14002e386:	add    BYTE PTR [rax],al
   14002e388:	shl    dh,0x2
   14002e38b:	rex add DWORD PTR [rax],eax
   14002e38e:	add    BYTE PTR [rax],al
   14002e390:	(bad)  
   14002e391:	out    0x2,al
   14002e393:	rex add DWORD PTR [rax],eax
   14002e396:	add    BYTE PTR [rax],al
   14002e398:	enter  0x2e6,0x40
   14002e39c:	add    DWORD PTR [rax],eax
   14002e39e:	add    BYTE PTR [rax],al
   14002e3a0:	int3   
   14002e3a1:	out    0x2,al
   14002e3a3:	rex add DWORD PTR [rax],eax
   14002e3a6:	add    BYTE PTR [rax],al
   14002e3a8:	shl    dh,1
   14002e3aa:	add    al,BYTE PTR [rax+0x1]
   14002e3ad:	add    BYTE PTR [rax],al
   14002e3af:	add    ah,dl
   14002e3b1:	out    0x2,al
   14002e3b3:	rex add DWORD PTR [rax],eax
   14002e3b6:	add    BYTE PTR [rax],al
   14002e3b8:	fsub   st,st(6)
   14002e3ba:	add    al,BYTE PTR [rax+0x1]
   14002e3bd:	add    BYTE PTR [rax],al
   14002e3bf:	add    ah,bl
   14002e3c1:	out    0x2,al
   14002e3c3:	rex add DWORD PTR [rax],eax
   14002e3c6:	add    BYTE PTR [rax],al
   14002e3c8:	loopne 0x14002e3b0
   14002e3ca:	add    al,BYTE PTR [rax+0x1]
   14002e3cd:	add    BYTE PTR [rax],al
   14002e3cf:	add    ah,ah
   14002e3d1:	out    0x2,al
   14002e3d3:	rex add DWORD PTR [rax],eax
   14002e3d6:	add    BYTE PTR [rax],al
   14002e3d8:	call   0x14142e6c3
   14002e3dd:	add    BYTE PTR [rax],al
   14002e3df:	add    ah,ch
   14002e3e1:	out    0x2,al
   14002e3e3:	rex add DWORD PTR [rax],eax
   14002e3e6:	add    BYTE PTR [rax],al
   14002e3e8:	lock out 0x2,al
   14002e3eb:	rex add DWORD PTR [rax],eax
   14002e3ee:	add    BYTE PTR [rax],al
   14002e3f0:	hlt    
   14002e3f1:	out    0x2,al
   14002e3f3:	rex add DWORD PTR [rax],eax
   14002e3f6:	add    BYTE PTR [rax],al
   14002e3f8:	clc    
   14002e3f9:	out    0x2,al
   14002e3fb:	rex add DWORD PTR [rax],eax
   14002e3fe:	add    BYTE PTR [rax],al
   14002e400:	cld    
   14002e401:	out    0x2,al
   14002e403:	rex add DWORD PTR [rax],eax
   14002e406:	add    BYTE PTR [rax],al
   14002e408:	add    bh,ah
   14002e40a:	add    al,BYTE PTR [rax+0x1]
   14002e40d:	add    BYTE PTR [rax],al
   14002e40f:	add    BYTE PTR [rdi+riz*8],al
   14002e412:	add    al,BYTE PTR [rax+0x1]
   14002e415:	add    BYTE PTR [rax],al
   14002e417:	add    BYTE PTR [rax],cl
   14002e419:	out    0x2,eax
   14002e41b:	rex add DWORD PTR [rax],eax
   14002e41e:	add    BYTE PTR [rax],al
   14002e420:	or     al,0xe7
   14002e422:	add    al,BYTE PTR [rax+0x1]
   14002e425:	add    BYTE PTR [rax],al
   14002e427:	add    BYTE PTR [rax],dl
   14002e429:	out    0x2,eax
   14002e42b:	rex add DWORD PTR [rax],eax
   14002e42e:	add    BYTE PTR [rax],al
   14002e430:	adc    al,0xe7
   14002e432:	add    al,BYTE PTR [rax+0x1]
   14002e435:	add    BYTE PTR [rax],al
   14002e437:	add    BYTE PTR [rax],bl
   14002e439:	out    0x2,eax
   14002e43b:	rex add DWORD PTR [rax],eax
   14002e43e:	add    BYTE PTR [rax],al
   14002e440:	sbb    al,0xe7
   14002e442:	add    al,BYTE PTR [rax+0x1]
   14002e445:	add    BYTE PTR [rax],al
   14002e447:	add    BYTE PTR [rax],ah
   14002e449:	out    0x2,eax
   14002e44b:	rex add DWORD PTR [rax],eax
   14002e44e:	add    BYTE PTR [rax],al
   14002e450:	and    al,0xe7
   14002e452:	add    al,BYTE PTR [rax+0x1]
   14002e455:	add    BYTE PTR [rax],al
   14002e457:	add    BYTE PTR [rax],ch
   14002e459:	out    0x2,eax
   14002e45b:	rex add DWORD PTR [rax],eax
   14002e45e:	add    BYTE PTR [rax],al
   14002e460:	cmp    bh,ah
   14002e462:	add    al,BYTE PTR [rax+0x1]
   14002e465:	add    BYTE PTR [rax],al
   14002e467:	add    BYTE PTR [rax-0x19],cl
   14002e46a:	add    al,BYTE PTR [rax+0x1]
   14002e46d:	add    BYTE PTR [rax],al
   14002e46f:	add    BYTE PTR [rax-0x19],dl
   14002e472:	add    al,BYTE PTR [rax+0x1]
   14002e475:	add    BYTE PTR [rax],al
   14002e477:	add    BYTE PTR [rax-0x19],ah
   14002e47a:	add    al,BYTE PTR [rax+0x1]
   14002e47d:	add    BYTE PTR [rax],al
   14002e47f:	add    BYTE PTR [rax-0x19],bh
   14002e482:	add    al,BYTE PTR [rax+0x1]
   14002e485:	add    BYTE PTR [rax],al
   14002e487:	add    BYTE PTR [rax+0x14002e7],cl
   14002e48d:	add    BYTE PTR [rax],al
   14002e48f:	add    BYTE PTR [rax+0x14002e7],ah
   14002e495:	add    BYTE PTR [rax],al
   14002e497:	add    al,al
   14002e499:	out    0x2,eax
   14002e49b:	rex add DWORD PTR [rax],eax
   14002e49e:	add    BYTE PTR [rax],al
   14002e4a0:	loopne 0x14002e489
   14002e4a2:	add    al,BYTE PTR [rax+0x1]
   14002e4a5:	add    BYTE PTR [rax],al
   14002e4a7:	add    BYTE PTR [rax],al
   14002e4a9:	call   0x1400424b0
   14002e4ae:	add    BYTE PTR [rax],al
   14002e4b0:	and    al,ch
   14002e4b2:	add    al,BYTE PTR [rax+0x1]
   14002e4b5:	add    BYTE PTR [rax],al
   14002e4b7:	add    BYTE PTR [rax-0x18],al
   14002e4ba:	add    al,BYTE PTR [rax+0x1]
   14002e4bd:	add    BYTE PTR [rax],al
   14002e4bf:	add    BYTE PTR [rax-0x18],ch
   14002e4c2:	add    al,BYTE PTR [rax+0x1]
   14002e4c5:	add    BYTE PTR [rax],al
   14002e4c7:	add    BYTE PTR [rax+0x14002e8],cl
   14002e4cd:	add    BYTE PTR [rax],al
   14002e4cf:	add    BYTE PTR [rax+0x14002e8],dh
   14002e4d5:	add    BYTE PTR [rax],al
   14002e4d7:	add    al,dl
   14002e4d9:	call   0x1400424e0
   14002e4de:	add    BYTE PTR [rax],al
   14002e4e0:	clc    
   14002e4e1:	call   0x1400424e8
   14002e4e6:	add    BYTE PTR [rax],al
   14002e4e8:	sbb    cl,ch
   14002e4ea:	add    al,BYTE PTR [rax+0x1]
   14002e4ed:	add    BYTE PTR [rax],al
   14002e4ef:	add    BYTE PTR [rax],ch
   14002e4f1:	jmp    0x1400424f8
   14002e4f6:	add    BYTE PTR [rax],al
   14002e4f8:	sub    al,0xe9
   14002e4fa:	add    al,BYTE PTR [rax+0x1]
   14002e4fd:	add    BYTE PTR [rax],al
   14002e4ff:	add    BYTE PTR [rax],bh
   14002e501:	jmp    0x140042508
   14002e506:	add    BYTE PTR [rax],al
   14002e508:	jmp    0x140042510
   14002e50e:	add    BYTE PTR [rax],al
   14002e510:	ins    BYTE PTR es:[rdi],dx
   14002e511:	jmp    0x140042518
   14002e516:	add    BYTE PTR [rax],al
   14002e518:	js     0x14002e503
   14002e51a:	add    al,BYTE PTR [rax+0x1]
   14002e51d:	add    BYTE PTR [rax],al
   14002e51f:	add    BYTE PTR [rax+0x14002e9],cl
   14002e525:	add    BYTE PTR [rax],al
   14002e527:	add    BYTE PTR [rax+0x14002e9],bl
   14002e52d:	add    BYTE PTR [rax],al
   14002e52f:	add    BYTE PTR [rax+0x14002e9],bh
   14002e535:	add    BYTE PTR [rax],al
   14002e537:	add    al,bl
   14002e539:	jmp    0x140042540
   14002e53e:	add    BYTE PTR [rax],al
   14002e540:	add    dl,ch
   14002e542:	add    al,BYTE PTR [rax+0x1]
   14002e545:	add    BYTE PTR [rax],al
   14002e547:	add    BYTE PTR [rax],ch
   14002e549:	(bad)  
   14002e54a:	add    al,BYTE PTR [rax+0x1]
   14002e54d:	add    BYTE PTR [rax],al
   14002e54f:	add    BYTE PTR [rax-0x16],dl
   14002e552:	add    al,BYTE PTR [rax+0x1]
   14002e555:	add    BYTE PTR [rax],al
   14002e557:	add    BYTE PTR [rax+0x14002ea],al
   14002e55d:	add    BYTE PTR [rax],al
   14002e55f:	add    BYTE PTR [rax+0x14002ea],ah
   14002e565:	add    BYTE PTR [rax],al
   14002e567:	add    al,cl
   14002e569:	(bad)  
   14002e56a:	add    al,BYTE PTR [rax+0x1]
   14002e56d:	add    BYTE PTR [rax],al
   14002e56f:	add    al,dh
   14002e571:	(bad)  
   14002e572:	add    al,BYTE PTR [rax+0x1]
   14002e575:	add    BYTE PTR [rax],al
   14002e577:	add    BYTE PTR [rax],ah
   14002e579:	jmp    0x14002e57d
   14002e57b:	rex add DWORD PTR [rax],eax
   14002e57e:	add    BYTE PTR [rax],al
   14002e580:	push   rax
   14002e581:	jmp    0x14002e585
   14002e583:	rex add DWORD PTR [rax],eax
   14002e586:	add    BYTE PTR [rax],al
   14002e588:	push   rax
   14002e589:	stos   BYTE PTR es:[rdi],al
   14002e58a:	add    al,BYTE PTR [rax+0x1]
   14002e58d:	add    BYTE PTR [rax],al
   14002e58f:	add    BYTE PTR [rax-0x15],dh
   14002e592:	add    al,BYTE PTR [rax+0x1]
   14002e595:	add    BYTE PTR [rax],al
   14002e597:	add    BYTE PTR [rax+0x14002eb],cl
   14002e59d:	add    BYTE PTR [rax],al
   14002e59f:	add    BYTE PTR [rax+0x14002eb],ch
   14002e5a5:	add    BYTE PTR [rax],al
   14002e5a7:	add    al,al
   14002e5a9:	jmp    0x14002e5ad
   14002e5ab:	rex add DWORD PTR [rax],eax
   14002e5ae:	add    BYTE PTR [rax],al
   14002e5b0:	loopne 0x14002e59d
   14002e5b2:	add    al,BYTE PTR [rax+0x1]
   14002e5b5:	add    BYTE PTR [rax],al
   14002e5b7:	add    BYTE PTR [rdi+0x5f],bl
   14002e5ba:	(bad)  
   14002e5bc:	jae    0x14002e623
   14002e5be:	sub    BYTE PTR fs:[rax],al
   14002e5c1:	add    BYTE PTR [rax],al
   14002e5c3:	add    BYTE PTR [rax],al
   14002e5c5:	add    BYTE PTR [rax],al
   14002e5c7:	add    BYTE PTR [rdi+0x5f],bl
   14002e5ca:	movsxd esp,DWORD PTR [rbp+riz*2+0x63]
   14002e5ce:	ins    BYTE PTR es:[rdi],dx
   14002e5cf:	add    BYTE PTR [rdi+0x5f],bl
   14002e5d2:	jo     0x14002e635
   14002e5d4:	jae    0x14002e639
   14002e5d6:	(bad)  
   14002e5d7:	ins    BYTE PTR es:[rdi],dx
	...
   14002e5e0:	pop    rdi
   14002e5e1:	pop    rdi
   14002e5e2:	jae    0x14002e658
   14002e5e4:	movsxd esp,DWORD PTR fs:[rcx+0x6c]
   14002e5e8:	ins    BYTE PTR es:[rdi],dx
   14002e5e9:	add    BYTE PTR [rax],al
   14002e5eb:	add    BYTE PTR [rax],al
   14002e5ed:	add    BYTE PTR [rax],al
   14002e5ef:	add    BYTE PTR [rdi+0x5f],bl
   14002e5f2:	je     0x14002e65c
   14002e5f4:	imul   esi,DWORD PTR [rbx+0x63],0x6c6c61
   14002e5fb:	add    BYTE PTR [rax],al
   14002e5fd:	add    BYTE PTR [rax],al
   14002e5ff:	add    BYTE PTR [rdi+0x5f],bl
   14002e602:	data16 (bad) 
   14002e604:	jae    0x14002e67a
   14002e606:	movsxd esp,DWORD PTR [rcx+0x6c]
   14002e609:	ins    BYTE PTR es:[rdi],dx
   14002e60a:	add    BYTE PTR [rax],al
   14002e60c:	add    BYTE PTR [rax],al
   14002e60e:	add    BYTE PTR [rax],al
   14002e610:	pop    rdi
   14002e611:	pop    rdi
   14002e612:	jbe    0x14002e679
   14002e614:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   14002e618:	movsxd esp,DWORD PTR [rcx+0x6c]
   14002e61b:	ins    BYTE PTR es:[rdi],dx
   14002e61c:	add    BYTE PTR [rax],al
   14002e61e:	add    BYTE PTR [rax],al
   14002e620:	pop    rdi
   14002e621:	pop    rdi
   14002e622:	movsxd ebp,DWORD PTR [rdx+rsi*2+0x63]
   14002e626:	(bad)  
   14002e627:	ins    BYTE PTR es:[rdi],dx
   14002e628:	ins    BYTE PTR es:[rdi],dx
   14002e629:	add    BYTE PTR [rax],al
   14002e62b:	add    BYTE PTR [rdi+0x5f],bl
   14002e62e:	gs (bad) 
   14002e630:	(bad)  
   14002e631:	imul   eax,DWORD PTR [rax],0x0
   14002e637:	add    BYTE PTR [rdi+0x5f],bl
   14002e63a:	jo     0x14002e6b0
   14002e63c:	jb     0x14002e674
   14002e63e:	xor    al,0x0
   14002e640:	pop    rdi
   14002e641:	pop    rdi
   14002e642:	jb     0x14002e6a9
   14002e644:	jae    0x14002e6ba
   14002e646:	jb     0x14002e6b1
   14002e648:	movsxd esi,DWORD PTR [rax+rax*1+0x0]
   14002e64c:	add    BYTE PTR [rax],al
   14002e64e:	add    BYTE PTR [rax],al
   14002e650:	pop    rdi
   14002e651:	pop    rdi
   14002e652:	jne    0x14002e6c2
   14002e654:	(bad)  
   14002e655:	ins    BYTE PTR es:[rdi],dx
   14002e656:	imul   esp,DWORD PTR [rdi+0x6e],0x6465
   14002e65d:	add    BYTE PTR [rax],al
   14002e65f:	add    BYTE PTR [rdx+0x65],dh
   14002e662:	jae    0x14002e6d8
   14002e664:	jb     0x14002e6cf
   14002e666:	movsxd esi,DWORD PTR [rax+rbp*1+0x0]
   14002e66a:	add    BYTE PTR [rax],al
   14002e66c:	and    BYTE PTR [rsi+0x65],ch
   14002e66f:	ja     0x14002e671
   14002e671:	add    BYTE PTR [rax],al
   14002e673:	add    BYTE PTR [rax],al
   14002e675:	add    BYTE PTR [rax],al
   14002e677:	add    BYTE PTR [rax],ah
   14002e679:	fs gs ins BYTE PTR es:[rdi],dx
   14002e67c:	gs je  0x14002e6e4
   14002e67f:	add    BYTE PTR [rip+0x3e000000],bh        # 0x17e02e685
   14002e685:	add    BYTE PTR ds:[rax],al
   14002e688:	cmp    al,0x3c
   14002e68a:	add    BYTE PTR [rax],al
   14002e68c:	and    DWORD PTR [rax],eax
   14002e68e:	add    BYTE PTR [rax],al
   14002e690:	cmp    eax,0x2100003d
   14002e695:	cmp    eax,0x5d5b0000
   14002e69a:	add    BYTE PTR [rax],al
   14002e69c:	add    BYTE PTR [rax],al
   14002e69e:	add    BYTE PTR [rax],al
   14002e6a0:	outs   dx,DWORD PTR ds:[rsi]
   14002e6a1:	jo     0x14002e708
   14002e6a3:	jb     0x14002e706
   14002e6a5:	je     0x14002e716
   14002e6a7:	jb     0x14002e6a9
   14002e6a9:	add    BYTE PTR [rax],al
   14002e6ab:	add    BYTE PTR [rip+0x2a00003e],ch        # 0x16a02e6ef
   14002e6b1:	add    BYTE PTR [rax],al
   14002e6b3:	add    BYTE PTR [rbx],ch
   14002e6b5:	sub    eax,DWORD PTR [rax]
   14002e6b7:	add    BYTE PTR [rip+0x2d00002d],ch        # 0x16d02e6ea
   14002e6bd:	add    BYTE PTR [rax],al
   14002e6bf:	add    BYTE PTR [rbx],ch
   14002e6c1:	add    BYTE PTR [rax],al
   14002e6c3:	add    BYTE PTR [rsi],ah
   14002e6c5:	add    BYTE PTR [rax],al
   14002e6c7:	add    BYTE PTR [rip+0x2f002a3e],ch        # 0x16f03110b
   14002e6cd:	add    BYTE PTR [rax],al
   14002e6cf:	add    BYTE PTR [rip+0x3c000000],ah        # 0x17c02e6d5
   14002e6d5:	add    BYTE PTR [rax],al
   14002e6d7:	add    BYTE PTR [rdi*1+0x3e0000],bh
   14002e6de:	add    BYTE PTR [rax],al
   14002e6e0:	ds cmp eax,0x2c0000
   14002e6e6:	add    BYTE PTR [rax],al
   14002e6e8:	sub    BYTE PTR [rcx],ch
   14002e6ea:	add    BYTE PTR [rax],al
   14002e6ec:	jle    0x14002e6ee
   14002e6ee:	add    BYTE PTR [rax],al
   14002e6f0:	pop    rsi
   14002e6f1:	add    BYTE PTR [rax],al
   14002e6f3:	add    BYTE PTR [rax+rax*1+0x0],bh
   14002e6f7:	add    BYTE PTR [rsi],ah
   14002e6f9:	add    BYTE PTR es:[rax],al
   14002e6fc:	jl     0x14002e77a
   14002e6fe:	add    BYTE PTR [rax],al
   14002e700:	sub    bh,BYTE PTR [rip+0x3d2b0000]        # 0x17d2de706
   14002e706:	add    BYTE PTR [rax],al
   14002e708:	sub    eax,0x2f00003d
   14002e70d:	cmp    eax,0x3d250000
   14002e712:	add    BYTE PTR [rax],al
   14002e714:	ds ds cmp eax,0x3d3c3c00
   14002e71b:	add    BYTE PTR [rsi],ah
   14002e71d:	cmp    eax,0x3d7c0000
   14002e722:	add    BYTE PTR [rax],al
   14002e724:	pop    rsi
   14002e725:	cmp    eax,0x76600000
   14002e72a:	data16 je 0x14002e78e
   14002e72d:	(bad)  
   14002e72e:	ins    BYTE PTR es:[rdi],dx
   14002e72f:	gs (bad) 
   14002e731:	add    BYTE PTR [rax],al
   14002e733:	add    BYTE PTR [rax],al
   14002e735:	add    BYTE PTR [rax],al
   14002e737:	add    BYTE PTR [rax+0x76],ah
   14002e73a:	(bad)  
   14002e73b:	je     0x14002e79e
   14002e73d:	(bad)  
   14002e73e:	ins    BYTE PTR es:[rdi],dx
   14002e73f:	gs (bad) 
   14002e741:	add    BYTE PTR [rax],al
   14002e743:	add    BYTE PTR [rax],al
   14002e745:	add    BYTE PTR [rax],al
   14002e747:	add    BYTE PTR [rax+0x76],ah
   14002e74a:	movsxd esp,DWORD PTR [rcx+0x6c]
   14002e74d:	ins    BYTE PTR es:[rdi],dx
   14002e74e:	(bad)  
   14002e74f:	add    BYTE PTR [rax+0x74],ah
   14002e752:	jns    0x14002e7c4
   14002e754:	outs   dx,DWORD PTR gs:[rsi]
   14002e756:	data16 (bad) 
	...
   14002e760:	(bad)  
   14002e761:	ins    BYTE PTR es:[rdi],dx
   14002e762:	outs   dx,DWORD PTR ds:[rsi]
   14002e763:	movsxd esp,DWORD PTR [rcx+0x6c]
   14002e766:	and    BYTE PTR [rbx+0x74],dh
   14002e769:	(bad)  
   14002e76a:	je     0x14002e7d5
   14002e76c:	movsxd esp,DWORD PTR [rax]
   14002e76e:	addr32 jne 0x14002e7d2
   14002e771:	jb     0x14002e7d7
   14002e773:	(bad)  
   14002e774:	add    BYTE PTR [rax],al
   14002e776:	add    BYTE PTR [rax],al
   14002e778:	(bad)  
   14002e779:	jae    0x14002e7ef
   14002e77b:	jb     0x14002e7e6
   14002e77d:	outs   dx,BYTE PTR ds:[rsi]
   14002e77e:	addr32 (bad) 
	...
   14002e788:	(bad)  
   14002e789:	jbe    0x14002e7ed
   14002e78b:	(bad)  
   14002e78c:	jae    0x14002e7f3
   14002e78e:	and    BYTE PTR [rbp+riz*2+0x73],ah
   14002e792:	je     0x14002e806
   14002e794:	jne    0x14002e7f9
   14002e796:	je     0x14002e807
   14002e798:	jb     0x14002e7c1
   14002e79a:	add    BYTE PTR [rax],al
   14002e79c:	add    BYTE PTR [rax],al
   14002e79e:	add    BYTE PTR [rax],al
   14002e7a0:	(bad)  
   14002e7a1:	jbe    0x14002e808
   14002e7a3:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   14002e7a7:	and    BYTE PTR [rbp+riz*2+0x6c],ah
   14002e7ab:	gs je  0x14002e817
   14002e7ae:	outs   dx,BYTE PTR ds:[rsi]
   14002e7af:	and    BYTE PTR [ebp+eiz*2+0x73],ah
   14002e7b4:	je     0x14002e828
   14002e7b6:	jne    0x14002e81b
   14002e7b8:	je     0x14002e829
   14002e7ba:	jb     0x14002e7e3
   14002e7bc:	add    BYTE PTR [rax],al
   14002e7be:	add    BYTE PTR [rax],al
   14002e7c0:	(bad)  
   14002e7c1:	fs gs data16 (bad) 
   14002e7c5:	jne    0x14002e833
   14002e7c7:	je     0x14002e7e9
   14002e7c9:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14002e7cc:	jae    0x14002e842
   14002e7ce:	jb     0x14002e845
   14002e7d0:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   14002e7d4:	and    BYTE PTR [rbx+0x6c],ah
   14002e7d7:	outs   dx,DWORD PTR ds:[rsi]
   14002e7d8:	jae    0x14002e84f
   14002e7da:	jb     0x14002e841
   14002e7dc:	(bad)  
   14002e7dd:	add    BYTE PTR [rax],al
   14002e7df:	add    BYTE PTR [rax+0x73],ah
   14002e7e2:	movsxd esp,DWORD PTR [rcx+0x6c]
   14002e7e5:	(bad)  
   14002e7e6:	jb     0x14002e808
   14002e7e8:	fs gs ins BYTE PTR es:[rdi],dx
   14002e7eb:	gs je  0x14002e857
   14002e7ee:	outs   dx,BYTE PTR ds:[rsi]
   14002e7ef:	and    BYTE PTR [ebp+eiz*2+0x73],ah
   14002e7f4:	je     0x14002e868
   14002e7f6:	jne    0x14002e85b
   14002e7f8:	je     0x14002e869
   14002e7fa:	jb     0x14002e823
   14002e7fc:	add    BYTE PTR [rax],al
   14002e7fe:	add    BYTE PTR [rax],al
   14002e800:	(bad)  
   14002e801:	jbe    0x14002e868
   14002e803:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   14002e807:	and    BYTE PTR [rbx+0x6f],ah
   14002e80a:	outs   dx,BYTE PTR ds:[rsi]
   14002e80b:	jae    0x14002e881
   14002e80d:	jb     0x14002e884
   14002e80f:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   14002e813:	and    BYTE PTR [rcx+0x74],ch
   14002e816:	gs jb  0x14002e87a
   14002e819:	je     0x14002e88a
   14002e81b:	jb     0x14002e844
   14002e81d:	add    BYTE PTR [rax],al
   14002e81f:	add    BYTE PTR [rax+0x76],ah
   14002e822:	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
   14002e827:	and    BYTE PTR [rbp+riz*2+0x73],ah
   14002e82b:	je     0x14002e89f
   14002e82d:	jne    0x14002e892
   14002e82f:	je     0x14002e8a0
   14002e831:	jb     0x14002e853
   14002e833:	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x726f7461
   14002e83b:	(bad)  
   14002e83c:	add    BYTE PTR [rax],al
   14002e83e:	add    BYTE PTR [rax],al
   14002e840:	(bad)  
   14002e841:	jbe    0x14002e8a8
   14002e843:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   14002e847:	and    BYTE PTR [rsi+0x62],dh
   14002e84a:	(bad)  
   14002e84b:	jae    0x14002e8b2
   14002e84d:	and    BYTE PTR [rbx+0x6f],ah
   14002e850:	outs   dx,BYTE PTR ds:[rsi]
   14002e851:	jae    0x14002e8c7
   14002e853:	jb     0x14002e8ca
   14002e855:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   14002e859:	and    BYTE PTR [rcx+0x74],ch
   14002e85c:	gs jb  0x14002e8c0
   14002e85f:	je     0x14002e8d0
   14002e861:	jb     0x14002e88a
   14002e863:	add    BYTE PTR [rax],al
   14002e865:	add    BYTE PTR [rax],al
   14002e867:	add    BYTE PTR [rax+0x76],ah
   14002e86a:	imul   esi,DWORD PTR [rdx+0x74],0x206c6175
   14002e871:	imul   esi,DWORD PTR fs:[rbx+0x70],0x6563616c
   14002e879:	ins    DWORD PTR es:[rdi],dx
   14002e87a:	outs   dx,BYTE PTR gs:[rsi]
   14002e87c:	je     0x14002e89e
   14002e87e:	ins    DWORD PTR es:[rdi],dx
   14002e87f:	(bad)  
   14002e880:	jo     0x14002e8a9
   14002e882:	add    BYTE PTR [rax],al
   14002e884:	add    BYTE PTR [rax],al
   14002e886:	add    BYTE PTR [rax],al
   14002e888:	(bad)  
   14002e889:	gs push 0x63657620
   14002e88f:	je     0x14002e900
   14002e891:	jb     0x14002e8b3
   14002e893:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14002e896:	jae    0x14002e90c
   14002e898:	jb     0x14002e90f
   14002e89a:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   14002e89e:	and    BYTE PTR [rcx+0x74],ch
   14002e8a1:	gs jb  0x14002e905
   14002e8a4:	je     0x14002e915
   14002e8a6:	jb     0x14002e8cf
	...
   14002e8b0:	(bad)  
   14002e8b1:	gs push 0x63657620
   14002e8b7:	je     0x14002e928
   14002e8b9:	jb     0x14002e8db
   14002e8bb:	fs gs jae 0x14002e933
   14002e8bf:	jb     0x14002e936
   14002e8c1:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   14002e8c5:	and    BYTE PTR [rcx+0x74],ch
   14002e8c8:	gs jb  0x14002e92c
   14002e8cb:	je     0x14002e93c
   14002e8cd:	jb     0x14002e8f6
   14002e8cf:	add    BYTE PTR [rax+0x65],ah
   14002e8d2:	push   0x63657620
   14002e8d7:	je     0x14002e948
   14002e8d9:	jb     0x14002e8fb
   14002e8db:	jbe    0x14002e93f
   14002e8dd:	(bad)  
   14002e8de:	jae    0x14002e945
   14002e8e0:	and    BYTE PTR [rbx+0x6f],ah
   14002e8e3:	outs   dx,BYTE PTR ds:[rsi]
   14002e8e4:	jae    0x14002e95a
   14002e8e6:	jb     0x14002e95d
   14002e8e8:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   14002e8ec:	and    BYTE PTR [rcx+0x74],ch
   14002e8ef:	gs jb  0x14002e953
   14002e8f2:	je     0x14002e963
   14002e8f4:	jb     0x14002e91d
   14002e8f6:	add    BYTE PTR [rax],al
   14002e8f8:	(bad)  
   14002e8f9:	movsxd ebp,DWORD PTR [rdi+0x70]
   14002e8fc:	jns    0x14002e91e
   14002e8fe:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14002e901:	jae    0x14002e977
   14002e903:	jb     0x14002e97a
   14002e905:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   14002e909:	and    BYTE PTR [rbx+0x6c],ah
   14002e90c:	outs   dx,DWORD PTR ds:[rsi]
   14002e90d:	jae    0x14002e984
   14002e90f:	jb     0x14002e976
   14002e911:	(bad)  
   14002e912:	add    BYTE PTR [rax],al
   14002e914:	add    BYTE PTR [rax],al
   14002e916:	add    BYTE PTR [rax],al
   14002e918:	(bad)  
   14002e919:	jne    0x14002e97f
   14002e91b:	je     0x14002e93d
   14002e91d:	jb     0x14002e984
   14002e91f:	je     0x14002e996
   14002e921:	jb     0x14002e991
   14002e923:	imul   ebp,DWORD PTR [rsi+0x67],0x45600027
   14002e92a:	rex.W add BYTE PTR [rax+0x52],spl
   14002e92e:	push   rsp
   14002e92f:	push   rsp
   14002e930:	rex.WB add BYTE PTR [r8],al
   14002e933:	add    BYTE PTR [rax],al
   14002e935:	add    BYTE PTR [rax],al
   14002e937:	add    BYTE PTR [rax+0x6c],ah
   14002e93a:	outs   dx,DWORD PTR ds:[rsi]
   14002e93b:	movsxd esp,DWORD PTR [rcx+0x6c]
   14002e93e:	and    BYTE PTR [rsi+0x66],dh
   14002e941:	je     0x14002e9a4
   14002e943:	(bad)  
   14002e944:	ins    BYTE PTR es:[rdi],dx
   14002e945:	gs (bad) 
   14002e947:	add    BYTE PTR [rax+0x6c],ah
   14002e94a:	outs   dx,DWORD PTR ds:[rsi]
   14002e94b:	movsxd esp,DWORD PTR [rcx+0x6c]
   14002e94e:	and    BYTE PTR [rsi+0x66],dh
   14002e951:	je     0x14002e9b4
   14002e953:	(bad)  
   14002e954:	ins    BYTE PTR es:[rdi],dx
   14002e955:	and    BYTE PTR gs:[rbx+0x6f],ah
   14002e959:	outs   dx,BYTE PTR ds:[rsi]
   14002e95a:	jae    0x14002e9d0
   14002e95c:	jb     0x14002e9d3
   14002e95e:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   14002e962:	and    BYTE PTR [rbx+0x6c],ah
   14002e965:	outs   dx,DWORD PTR ds:[rsi]
   14002e966:	jae    0x14002e9dd
   14002e968:	jb     0x14002e9cf
   14002e96a:	(bad)  
   14002e96b:	add    BYTE PTR [rax],ah
   14002e96d:	outs   dx,BYTE PTR ds:[rsi]
   14002e96e:	gs ja  0x14002e9cc
   14002e971:	pop    rbp
   14002e972:	add    BYTE PTR [rax],al
   14002e974:	add    BYTE PTR [rax],al
   14002e976:	add    BYTE PTR [rax],al
   14002e978:	and    BYTE PTR [rbp+riz*2+0x6c],ah
   14002e97c:	gs je  0x14002e9e4
   14002e97f:	pop    rbx
   14002e980:	pop    rbp
   14002e981:	add    BYTE PTR [rax],al
   14002e983:	add    BYTE PTR [rax],al
   14002e985:	add    BYTE PTR [rax],al
   14002e987:	add    BYTE PTR [rax+0x6f],ah
   14002e98a:	ins    DWORD PTR es:[rdi],dx
   14002e98b:	outs   dx,BYTE PTR ds:[rsi]
   14002e98c:	imul   esp,DWORD PTR [rax],0x6c6c6163
   14002e992:	jae    0x14002e9fd
   14002e994:	addr32 (bad) 
   14002e996:	add    BYTE PTR [rax],al
   14002e998:	(bad)  
   14002e999:	jo     0x14002ea07
   14002e99b:	(bad)  
   14002e99c:	movsxd esp,DWORD PTR [rbp+0x6d]
   14002e99f:	outs   dx,BYTE PTR gs:[rsi]
   14002e9a1:	je     0x14002e9c3
   14002e9a3:	fs gs ins BYTE PTR es:[rdi],dx
   14002e9a6:	gs je  0x14002ea0e
   14002e9a9:	and    BYTE PTR [rbx+0x6c],ah
   14002e9ac:	outs   dx,DWORD PTR ds:[rsi]
   14002e9ad:	jae    0x14002ea24
   14002e9af:	jb     0x14002ea16
   14002e9b1:	(bad)  
   14002e9b2:	add    BYTE PTR [rax],al
   14002e9b4:	add    BYTE PTR [rax],al
   14002e9b6:	add    BYTE PTR [rax],al
   14002e9b8:	(bad)  
   14002e9b9:	jo     0x14002ea27
   14002e9bb:	(bad)  
   14002e9bc:	movsxd esp,DWORD PTR [rbp+0x6d]
   14002e9bf:	outs   dx,BYTE PTR gs:[rsi]
   14002e9c1:	je     0x14002e9e3
   14002e9c3:	fs gs ins BYTE PTR es:[rdi],dx
   14002e9c6:	gs je  0x14002ea2e
   14002e9c9:	pop    rbx
   14002e9ca:	pop    rbp
   14002e9cb:	and    BYTE PTR [rbx+0x6c],ah
   14002e9ce:	outs   dx,DWORD PTR ds:[rsi]
   14002e9cf:	jae    0x14002ea46
   14002e9d1:	jb     0x14002ea38
   14002e9d3:	(bad)  
   14002e9d4:	add    BYTE PTR [rax],al
   14002e9d6:	add    BYTE PTR [rax],al
   14002e9d8:	(bad)  
   14002e9d9:	ins    DWORD PTR es:[rdi],dx
   14002e9da:	(bad)  
   14002e9db:	outs   dx,BYTE PTR ds:[rsi]
   14002e9dc:	(bad)  
   14002e9dd:	gs and BYTE PTR fs:[esi+0x65],dh
   14002e9e3:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   14002e9e7:	and    BYTE PTR [rbx+0x6f],ah
   14002e9ea:	outs   dx,BYTE PTR ds:[rsi]
   14002e9eb:	jae    0x14002ea61
   14002e9ed:	jb     0x14002ea64
   14002e9ef:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   14002e9f3:	and    BYTE PTR [rcx+0x74],ch
   14002e9f6:	gs jb  0x14002ea5a
   14002e9f9:	je     0x14002ea6a
   14002e9fb:	jb     0x14002ea24
   14002e9fd:	add    BYTE PTR [rax],al
   14002e9ff:	add    BYTE PTR [rax+0x6d],ah
   14002ea02:	(bad)  
   14002ea03:	outs   dx,BYTE PTR ds:[rsi]
   14002ea04:	(bad)  
   14002ea05:	gs and BYTE PTR fs:[esi+0x65],dh
   14002ea0b:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   14002ea0f:	and    BYTE PTR [rbp+riz*2+0x73],ah
   14002ea13:	je     0x14002ea87
   14002ea15:	jne    0x14002ea7a
   14002ea17:	je     0x14002ea88
   14002ea19:	jb     0x14002ea3b
   14002ea1b:	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x726f7461
   14002ea23:	(bad)  
   14002ea24:	add    BYTE PTR [rax],al
   14002ea26:	add    BYTE PTR [rax],al
   14002ea28:	(bad)  
   14002ea29:	gs push 0x63657620
   14002ea2f:	je     0x14002eaa0
   14002ea31:	jb     0x14002ea53
   14002ea33:	movsxd ebp,DWORD PTR [rdi+0x70]
   14002ea36:	jns    0x14002ea58
   14002ea38:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14002ea3b:	jae    0x14002eab1
   14002ea3d:	jb     0x14002eab4
   14002ea3f:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   14002ea43:	and    BYTE PTR [rcx+0x74],ch
   14002ea46:	gs jb  0x14002eaaa
   14002ea49:	je     0x14002eaba
   14002ea4b:	jb     0x14002ea74
   14002ea4d:	add    BYTE PTR [rax],al
   14002ea4f:	add    BYTE PTR [rax+0x65],ah
   14002ea52:	push   0x63657620
   14002ea57:	je     0x14002eac8
   14002ea59:	jb     0x14002ea7b
   14002ea5b:	jbe    0x14002eabf
   14002ea5d:	(bad)  
   14002ea5e:	jae    0x14002eac5
   14002ea60:	and    BYTE PTR [rbx+0x6f],ah
   14002ea63:	jo     0x14002eade
   14002ea65:	and    BYTE PTR [rbx+0x6f],ah
   14002ea68:	outs   dx,BYTE PTR ds:[rsi]
   14002ea69:	jae    0x14002eadf
   14002ea6b:	jb     0x14002eae2
   14002ea6d:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   14002ea71:	and    BYTE PTR [rcx+0x74],ch
   14002ea74:	gs jb  0x14002ead8
   14002ea77:	je     0x14002eae8
   14002ea79:	jb     0x14002eaa2
   14002ea7b:	add    BYTE PTR [rax],al
   14002ea7d:	add    BYTE PTR [rax],al
   14002ea7f:	add    BYTE PTR [rax+0x64],ah
   14002ea82:	jns    0x14002eaf2
   14002ea84:	(bad)  
   14002ea85:	ins    DWORD PTR es:[rdi],dx
   14002ea86:	imul   esp,DWORD PTR [rbx+0x20],0x74696e69
   14002ea8d:	imul   esp,DWORD PTR [rcx+0x6c],0x72657a69
   14002ea94:	and    BYTE PTR [rsi+0x6f],ah
   14002ea97:	jb     0x14002eab9
   14002ea99:	(bad)  
   14002ea9a:	add    BYTE PTR [rax],al
   14002ea9c:	add    BYTE PTR [rax],al
   14002ea9e:	add    BYTE PTR [rax],al
   14002eaa0:	(bad)  
   14002eaa1:	fs jns 0x14002eb12
   14002eaa4:	(bad)  
   14002eaa5:	ins    DWORD PTR es:[rdi],dx
   14002eaa6:	imul   esp,DWORD PTR [rbx+0x20],0x78657461
   14002eaad:	imul   esi,DWORD PTR [rax+riz*1+0x64],0x72747365
   14002eab5:	jne    0x14002eb1a
   14002eab7:	je     0x14002eb28
   14002eab9:	jb     0x14002eadb
   14002eabb:	outs   dx,WORD PTR ds:[rsi]
   14002eabd:	jb     0x14002eadf
   14002eabf:	(bad)  
	...
   14002eac8:	(bad)  
   14002eac9:	jbe    0x14002eb30
   14002eacb:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   14002eacf:	and    BYTE PTR [rbx+0x6f],ah
   14002ead2:	jo     0x14002eb4d
   14002ead4:	and    BYTE PTR [rbx+0x6f],ah
   14002ead7:	outs   dx,BYTE PTR ds:[rsi]
   14002ead8:	jae    0x14002eb4e
   14002eada:	jb     0x14002eb51
   14002eadc:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   14002eae0:	and    BYTE PTR [rcx+0x74],ch
   14002eae3:	gs jb  0x14002eb47
   14002eae6:	je     0x14002eb57
   14002eae8:	jb     0x14002eb11
   14002eaea:	add    BYTE PTR [rax],al
   14002eaec:	add    BYTE PTR [rax],al
   14002eaee:	add    BYTE PTR [rax],al
   14002eaf0:	(bad)  
   14002eaf1:	jbe    0x14002eb58
   14002eaf3:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   14002eaf7:	and    BYTE PTR [rsi+0x62],dh
   14002eafa:	(bad)  
   14002eafb:	jae    0x14002eb62
   14002eafd:	and    BYTE PTR [rbx+0x6f],ah
   14002eb00:	jo     0x14002eb7b
   14002eb02:	and    BYTE PTR [rbx+0x6f],ah
   14002eb05:	outs   dx,BYTE PTR ds:[rsi]
   14002eb06:	jae    0x14002eb7c
   14002eb08:	jb     0x14002eb7f
   14002eb0a:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   14002eb0e:	and    BYTE PTR [rcx+0x74],ch
   14002eb11:	gs jb  0x14002eb75
   14002eb14:	je     0x14002eb85
   14002eb16:	jb     0x14002eb3f
	...
   14002eb20:	(bad)  
   14002eb21:	ins    DWORD PTR es:[rdi],dx
   14002eb22:	(bad)  
   14002eb23:	outs   dx,BYTE PTR ds:[rsi]
   14002eb24:	(bad)  
   14002eb25:	gs and BYTE PTR fs:[esi+0x65],dh
   14002eb2b:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   14002eb2f:	and    BYTE PTR [rbx+0x6f],ah
   14002eb32:	jo     0x14002ebad
   14002eb34:	and    BYTE PTR [rbx+0x6f],ah
   14002eb37:	outs   dx,BYTE PTR ds:[rsi]
   14002eb38:	jae    0x14002ebae
   14002eb3a:	jb     0x14002ebb1
   14002eb3c:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   14002eb40:	and    BYTE PTR [rcx+0x74],ch
   14002eb43:	gs jb  0x14002eba7
   14002eb46:	je     0x14002ebb7
   14002eb48:	jb     0x14002eb71
   14002eb4a:	add    BYTE PTR [rax],al
   14002eb4c:	add    BYTE PTR [rax],al
   14002eb4e:	add    BYTE PTR [rax],al
   14002eb50:	(bad)  
   14002eb51:	ins    BYTE PTR es:[rdi],dx
   14002eb52:	outs   dx,DWORD PTR ds:[rsi]
   14002eb53:	movsxd esp,DWORD PTR [rcx+0x6c]
   14002eb56:	and    BYTE PTR [rbx+0x74],dh
   14002eb59:	(bad)  
   14002eb5a:	je     0x14002ebc5
   14002eb5c:	movsxd esp,DWORD PTR [rax]
   14002eb5e:	je     0x14002ebc8
   14002eb60:	jb     0x14002ebc7
   14002eb62:	(bad)  
   14002eb63:	and    BYTE PTR fs:[rdi+0x75],ah
   14002eb67:	(bad)  
   14002eb68:	jb     0x14002ebce
   14002eb6a:	(bad)  
   14002eb6b:	add    BYTE PTR [rax],al
   14002eb6d:	add    BYTE PTR [rax],al
   14002eb6f:	add    BYTE PTR [rax],ah
   14002eb71:	push   rsp
   14002eb72:	jns    0x14002ebe4
   14002eb74:	and    BYTE PTR gs:[rbp+riz*2+0x73],al
   14002eb79:	movsxd esi,DWORD PTR [rdx+0x69]
   14002eb7c:	jo     0x14002ebf2
   14002eb7e:	outs   dx,DWORD PTR ds:[rsi]
   14002eb7f:	jb     0x14002eba8
   14002eb81:	add    BYTE PTR [rax],al
   14002eb83:	add    BYTE PTR [rax],al
   14002eb85:	add    BYTE PTR [rax],al
   14002eb87:	add    BYTE PTR [rax],ah
   14002eb89:	rex.X (bad) 
   14002eb8b:	jae    0x14002ebf2
   14002eb8d:	and    BYTE PTR [rbx+0x6c],al
   14002eb90:	(bad)  
   14002eb91:	jae    0x14002ec06
   14002eb93:	and    BYTE PTR [rbp+riz*2+0x73],al
   14002eb97:	movsxd esi,DWORD PTR [rdx+0x69]
   14002eb9a:	jo     0x14002ec10
   14002eb9c:	outs   dx,DWORD PTR ds:[rsi]
   14002eb9d:	jb     0x14002ebbf
   14002eb9f:	(bad)  
   14002eba0:	je     0x14002ebc2
   14002eba2:	sub    BYTE PTR [rax],al
   14002eba4:	add    BYTE PTR [rax],al
   14002eba6:	add    BYTE PTR [rax],al
   14002eba8:	and    BYTE PTR [rdx+0x61],al
   14002ebab:	jae    0x14002ec12
   14002ebad:	and    BYTE PTR [rbx+0x6c],al
   14002ebb0:	(bad)  
   14002ebb1:	jae    0x14002ec26
   14002ebb3:	and    BYTE PTR [rcx+0x72],al
   14002ebb6:	jb     0x14002ec19
   14002ebb8:	jns    0x14002ebe1
   14002ebba:	add    BYTE PTR [rax],al
   14002ebbc:	add    BYTE PTR [rax],al
   14002ebbe:	add    BYTE PTR [rax],al
   14002ebc0:	and    BYTE PTR [rbx+0x6c],al
   14002ebc3:	(bad)  
   14002ebc4:	jae    0x14002ec39
   14002ebc6:	and    BYTE PTR [rax+0x69],cl
   14002ebc9:	gs jb  0x14002ec2d
   14002ebcc:	jb     0x14002ec31
   14002ebce:	push   0x65442079
   14002ebd3:	jae    0x14002ec38
   14002ebd5:	jb     0x14002ec40
   14002ebd7:	jo     0x14002ec4d
   14002ebd9:	outs   dx,DWORD PTR ds:[rsi]
   14002ebda:	jb     0x14002ec03
   14002ebdc:	add    BYTE PTR [rax],al
   14002ebde:	add    BYTE PTR [rax],al
   14002ebe0:	and    BYTE PTR [rbx+0x6f],al
   14002ebe3:	ins    DWORD PTR es:[rdi],dx
   14002ebe4:	jo     0x14002ec52
   14002ebe6:	gs je  0x14002ec4e
   14002ebe9:	and    BYTE PTR [rdi+0x62],cl
   14002ebec:	push   0x65
   14002ebee:	movsxd esi,DWORD PTR [rax+riz*1+0x4c]
   14002ebf2:	outs   dx,DWORD PTR ds:[rsi]
   14002ebf3:	movsxd esp,DWORD PTR [rcx+0x74]
   14002ebf6:	outs   dx,DWORD PTR ds:[rsi]
   14002ebf7:	jb     0x14002ec20
   14002ebf9:	add    BYTE PTR [rax],al
   14002ebfb:	add    BYTE PTR [rbx+0x56],al
   14002ebfe:	cmp    ah,BYTE PTR [rax]
   14002ec00:	add    BYTE PTR [rax],al
   14002ec02:	add    BYTE PTR [rax],al
   14002ec04:	cmp    bh,BYTE PTR [rdx]
   14002ec06:	add    BYTE PTR [rax],al
   14002ec08:	je     0x14002ec6f
   14002ec0a:	ins    DWORD PTR es:[rdi],dx
   14002ec0b:	jo     0x14002ec79
   14002ec0d:	(bad)  
   14002ec0e:	je     0x14002ec75
   14002ec10:	sub    eax,0x61726170
   14002ec15:	ins    DWORD PTR es:[rdi],dx
   14002ec16:	gs je  0x14002ec7e
   14002ec19:	jb     0x14002ec48
   14002ec1b:	add    BYTE PTR [rax],al
   14002ec1d:	add    BYTE PTR [rax],al
   14002ec1f:	add    BYTE PTR [rdi+0x65],ah
   14002ec22:	outs   dx,BYTE PTR ds:[rsi]
   14002ec23:	gs jb  0x14002ec8f
   14002ec26:	movsxd ebp,DWORD PTR [rip+0x65707974]        # 0x1a57365a0
   14002ec2c:	sub    eax,0x60000000
   14002ec31:	add    BYTE PTR [rax],al
   14002ec33:	add    BYTE PTR [rdi],ah
   14002ec35:	add    BYTE PTR [rax],al
   14002ec37:	add    BYTE PTR [rax+0x61],ah
   14002ec3a:	outs   dx,BYTE PTR ds:[rsi]
   14002ec3b:	outs   dx,DWORD PTR ds:[rsi]
   14002ec3c:	outs   dx,BYTE PTR ds:[rsi]
   14002ec3d:	jns    0x14002ecac
   14002ec3f:	outs   dx,DWORD PTR ds:[rsi]
   14002ec40:	jne    0x14002ecb5
   14002ec42:	and    BYTE PTR [rsi+0x61],ch
   14002ec45:	ins    DWORD PTR es:[rdi],dx
   14002ec46:	gs jae 0x14002ecb9
   14002ec49:	(bad)  
   14002ec4a:	movsxd esp,DWORD PTR [rbp+0x27]
   14002ec4d:	add    BYTE PTR [rax],al
   14002ec4f:	add    BYTE PTR [rdi],ah
   14002ec51:	(bad)  
   14002ec52:	add    BYTE PTR [rax],al
   14002ec54:	add    BYTE PTR [rax],al
   14002ec56:	add    BYTE PTR [rax],al
   14002ec58:	(bad)  
   14002ec59:	outs   dx,BYTE PTR ds:[rsi]
   14002ec5a:	outs   dx,DWORD PTR ds:[rsi]
   14002ec5b:	outs   dx,BYTE PTR ds:[rsi]
   14002ec5c:	sub    eax,0x65707974
   14002ec61:	sub    eax,0x706d6574
   14002ec66:	ins    BYTE PTR es:[rdi],dx
   14002ec67:	(bad)  
   14002ec68:	je     0x14002eccf
   14002ec6a:	sub    eax,0x61726170
   14002ec6f:	ins    DWORD PTR es:[rdi],dx
   14002ec70:	gs je  0x14002ecd8
   14002ec73:	jb     0x14002ec75
   14002ec75:	add    BYTE PTR [rax],al
   14002ec77:	add    BYTE PTR [rsi+0x6f],dh
   14002ec7a:	imul   esp,DWORD PTR [rax+rax*1+0x0],0x74600000
   14002ec82:	gs ins DWORD PTR es:[rdi],dx
   14002ec84:	jo     0x14002ecf2
   14002ec86:	(bad)  
   14002ec87:	je     0x14002ecee
   14002ec89:	sub    eax,0x61726170
   14002ec8e:	ins    DWORD PTR es:[rdi],dx
   14002ec8f:	gs je  0x14002ecf7
   14002ec92:	jb     0x14002ec94
   14002ec94:	cs cs add BYTE PTR cs:[rsi+0x55],cl
   14002ec9a:	rex.WR
   14002ec9b:	rex.WR add BYTE PTR [rax],r8b
   14002ec9e:	add    BYTE PTR [rax],al
   14002eca0:	jge    0x14002ecc9
   14002eca2:	and    BYTE PTR [rax],al
   14002eca4:	jge    0x14002eccd
   14002eca6:	add    BYTE PTR [rax],al
   14002eca8:	and    BYTE PTR [rax],al
   14002ecaa:	add    BYTE PTR [rax],al
   14002ecac:	add    BYTE PTR [rax],al
   14002ecae:	add    BYTE PTR [rax],al
   14002ecb0:	(bad)  
   14002ecb1:	jbe    0x14002ed27
   14002ecb3:	outs   dx,DWORD PTR ds:[rsi]
   14002ecb4:	jb     0x14002ed1a
   14002ecb6:	imul   esi,DWORD PTR [rbx+0x70],0x7b7865
   14002ecbd:	add    BYTE PTR [rax],al
   14002ecbf:	add    BYTE PTR [rax+0x76],ah
   14002ecc2:	je     0x14002ed33
   14002ecc4:	jb     0x14002ed2a
   14002ecc6:	imul   esi,DWORD PTR [rbx+0x70],0x7b
   14002eccd:	add    BYTE PTR [rax],al
   14002eccf:	add    BYTE PTR [rax+0x61],ah
   14002ecd2:	fs push 0x75
   14002ecd5:	jae    0x14002ed4b
   14002ecd7:	outs   dx,DWORD PTR ds:[rsi]
   14002ecd8:	jb     0x14002ed55
   14002ecda:	add    BYTE PTR [rax],al
   14002ecdc:	add    BYTE PTR [rax],al
   14002ecde:	add    BYTE PTR [rax],al
   14002ece0:	(bad)  
   14002ece1:	ins    BYTE PTR es:[rdi],dx
   14002ece2:	outs   dx,DWORD PTR ds:[rsi]
   14002ece3:	movsxd esp,DWORD PTR [rcx+0x6c]
   14002ece6:	and    BYTE PTR [rbx+0x74],dh
   14002ece9:	(bad)  
   14002ecea:	je     0x14002ed55
   14002ecec:	movsxd esp,DWORD PTR [rax]
   14002ecee:	fs gs jae 0x14002ed66
   14002ecf2:	jb     0x14002ed69
   14002ecf4:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   14002ecf8:	and    BYTE PTR [rax+0x65],ch
   14002ecfb:	ins    BYTE PTR es:[rdi],dx
   14002ecfc:	jo     0x14002ed63
   14002ecfe:	jb     0x14002ed27
	...
   14002ed08:	(bad)  
   14002ed09:	je     0x14002ed70
   14002ed0b:	ins    DWORD PTR es:[rdi],dx
   14002ed0c:	jo     0x14002ed7a
   14002ed0e:	(bad)  
   14002ed0f:	je     0x14002ed76
   14002ed11:	and    BYTE PTR [rbx+0x74],dh
   14002ed14:	(bad)  
   14002ed15:	je     0x14002ed80
   14002ed17:	movsxd esp,DWORD PTR [rax]
   14002ed19:	fs (bad) 
   14002ed1b:	je     0x14002ed7e
   14002ed1d:	and    BYTE PTR [rbp+0x65],ch
   14002ed20:	ins    DWORD PTR es:[rdi],dx
   14002ed21:	(bad)  
   14002ed22:	gs jb  0x14002ed45
   14002ed25:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14002ed28:	jae    0x14002ed9e
   14002ed2a:	jb     0x14002eda1
   14002ed2c:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   14002ed30:	and    BYTE PTR [rax+0x65],ch
   14002ed33:	ins    BYTE PTR es:[rdi],dx
   14002ed34:	jo     0x14002ed9b
   14002ed36:	jb     0x14002ed5f
	...
   14002ed40:	(bad)  
   14002ed41:	je     0x14002eda8
   14002ed43:	ins    DWORD PTR es:[rdi],dx
   14002ed44:	jo     0x14002edb2
   14002ed46:	(bad)  
   14002ed47:	je     0x14002edae
   14002ed49:	and    BYTE PTR [rbx+0x74],dh
   14002ed4c:	(bad)  
   14002ed4d:	je     0x14002edb8
   14002ed4f:	movsxd esp,DWORD PTR [rax]
   14002ed51:	fs (bad) 
   14002ed53:	je     0x14002edb6
   14002ed55:	and    BYTE PTR [rbp+0x65],ch
   14002ed58:	ins    DWORD PTR es:[rdi],dx
   14002ed59:	(bad)  
   14002ed5a:	gs jb  0x14002ed7d
   14002ed5d:	fs gs jae 0x14002edd5
   14002ed61:	jb     0x14002edd8
   14002ed63:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   14002ed67:	and    BYTE PTR [rax+0x65],ch
   14002ed6a:	ins    BYTE PTR es:[rdi],dx
   14002ed6b:	jo     0x14002edd2
   14002ed6d:	jb     0x14002ed96
   14002ed6f:	add    BYTE PTR [rbx+0x74],dh
   14002ed72:	(bad)  
   14002ed73:	je     0x14002edde
   14002ed75:	movsxd esp,DWORD PTR [rax]
   14002ed77:	add    BYTE PTR [rsi+0x69],dh
   14002ed7a:	jb     0x14002edf0
   14002ed7c:	jne    0x14002eddf
   14002ed7e:	ins    BYTE PTR es:[rdi],dx
   14002ed7f:	and    BYTE PTR [rax],al
   14002ed81:	add    BYTE PTR [rax],al
   14002ed83:	add    BYTE PTR [rax],al
   14002ed85:	add    BYTE PTR [rax],al
   14002ed87:	add    BYTE PTR [rax+0x72],dh
   14002ed8a:	imul   esi,DWORD PTR [rsi+0x61],0x203a6574
   14002ed91:	add    BYTE PTR [rax],al
   14002ed93:	add    BYTE PTR [rax],al
   14002ed95:	add    BYTE PTR [rax],al
   14002ed97:	add    BYTE PTR [rax+0x72],dh
   14002ed9a:	outs   dx,DWORD PTR ds:[rsi]
   14002ed9b:	je     0x14002ee02
   14002ed9d:	movsxd esi,DWORD PTR [rbp+riz*2+0x64]
   14002eda1:	cmp    ah,BYTE PTR [rax]
   14002eda3:	add    BYTE PTR [rax],al
   14002eda5:	add    BYTE PTR [rax],al
   14002eda7:	add    BYTE PTR [rax+0x75],dh
   14002edaa:	(bad)  
   14002edab:	ins    BYTE PTR es:[rdi],dx
   14002edac:	imul   esp,DWORD PTR [rbx+0x3a],0x20
   14002edb3:	add    BYTE PTR [rax],al
   14002edb5:	add    BYTE PTR [rax],al
   14002edb7:	add    BYTE PTR [rbx+0x74],bl
   14002edba:	push   0x5d6b6e75
   14002edbf:	cmp    al,BYTE PTR [rax]
   14002edc1:	add    BYTE PTR [rax],al
   14002edc3:	add    BYTE PTR [rax],al
   14002edc5:	add    BYTE PTR [rax],al
   14002edc7:	add    BYTE PTR [rbp+0x78],ah
   14002edca:	je     0x14002ee31
   14002edcc:	jb     0x14002ee3c
   14002edce:	and    BYTE PTR [rdx],ah
   14002edd0:	rex.XB and spl,BYTE PTR [r8]
   14002edd3:	add    BYTE PTR [rcx],ch
   14002edd5:	and    BYTE PTR [rax],al
   14002edd7:	add    BYTE PTR [rbx+0x68],ah
   14002edda:	(bad)  
   14002eddb:	jb     0x14002edfd
   14002eddd:	add    BYTE PTR [rax],al
   14002eddf:	add    BYTE PTR [rbx+0x68],dh
   14002ede2:	outs   dx,DWORD PTR ds:[rsi]
   14002ede3:	jb     0x14002ee59
   14002ede5:	and    BYTE PTR [rax],al
   14002ede7:	add    BYTE PTR [rcx+0x6e],ch
   14002edea:	je     0x14002ee0c
   14002edec:	add    BYTE PTR [rax],al
   14002edee:	add    BYTE PTR [rax],al
   14002edf0:	ins    BYTE PTR es:[rdi],dx
   14002edf1:	outs   dx,DWORD PTR ds:[rsi]
   14002edf2:	outs   dx,BYTE PTR ds:[rsi]
   14002edf3:	and    BYTE PTR [eax],al
   14002edf6:	add    BYTE PTR [rax],al
   14002edf8:	jne    0x14002ee68
   14002edfa:	jae    0x14002ee65
   14002edfc:	outs   dx,BYTE PTR ds:[esi]
   14002edfe:	gs and BYTE PTR fs:[rax],al
   14002ee02:	add    BYTE PTR [rax],al
   14002ee04:	jbe    0x14002ee75
   14002ee06:	imul   esp,DWORD PTR [rax+riz*1+0x0],0x0
   14002ee0e:	add    BYTE PTR [rax],al
   14002ee10:	jbe    0x14002ee81
   14002ee12:	ins    BYTE PTR es:[rdi],dx
   14002ee13:	(bad)  
   14002ee14:	je     0x14002ee7f
   14002ee16:	ins    BYTE PTR es:[rdi],dx
   14002ee17:	add    BYTE PTR gs:[rax],al
   14002ee1a:	add    BYTE PTR [rax],al
   14002ee1c:	add    BYTE PTR [rax],al
   14002ee1e:	add    BYTE PTR [rax],al
   14002ee20:	jae    0x14002ee96
   14002ee22:	cmp    bh,BYTE PTR fs:[rdx]
   14002ee25:	outs   dx,BYTE PTR ds:[rsi]
   14002ee26:	jne    0x14002ee94
   14002ee28:	ins    BYTE PTR es:[rdi],dx
   14002ee29:	jo     0x14002ee9f
   14002ee2b:	jb     0x14002ee8c
   14002ee2d:	je     0x14002ee2f
   14002ee2f:	add    BYTE PTR [riz*2+0x70696c6c],bh
   14002ee36:	jae    0x14002eea1
   14002ee38:	jae    0x14002ee78
   14002ee3a:	add    BYTE PTR [rax],al
   14002ee3c:	sub    al,0x2e
   14002ee3e:	cs add BYTE PTR cs:[rax],al
   14002ee42:	add    BYTE PTR [rax],al
   14002ee44:	add    BYTE PTR [rax],al
   14002ee46:	add    BYTE PTR [rax],al
   14002ee48:	sub    al,0x3c
   14002ee4a:	gs ins BYTE PTR es:[rdi],dx
   14002ee4c:	ins    BYTE PTR es:[rdi],dx
   14002ee4d:	imul   esi,DWORD PTR [rax+0x73],0x3e7369
   14002ee54:	add    BYTE PTR [rax],al
   14002ee56:	add    BYTE PTR [rax],al
   14002ee58:	and    BYTE PTR [rax+rbp*2+0x72],dh
   14002ee5c:	outs   dx,DWORD PTR ds:[rsi]
   14002ee5d:	ja     0x14002ee87
   14002ee5f:	add    BYTE PTR [rbx+0x70],ah
   14002ee62:	jne    0x14002ee64
   14002ee64:	(bad)  
   14002ee65:	ins    DWORD PTR es:[rdi],dx
   14002ee66:	jo     0x14002ee68
   14002ee68:	sub    al,0x20
   14002ee6a:	add    BYTE PTR [rax],al
   14002ee6c:	movsxd ebp,DWORD PTR [rax+0x61]
   14002ee6f:	jb     0x14002ee71
   14002ee71:	add    BYTE PTR [rax],al
   14002ee73:	add    BYTE PTR [rbx+0x68],dh
   14002ee76:	outs   dx,DWORD PTR ds:[rsi]
   14002ee77:	jb     0x14002eeed
   14002ee79:	add    BYTE PTR [rax],al
   14002ee7b:	add    BYTE PTR [rcx+0x6e],ch
   14002ee7e:	je     0x14002ee80
   14002ee80:	ins    BYTE PTR es:[rdi],dx
   14002ee81:	outs   dx,DWORD PTR ds:[rsi]
   14002ee82:	outs   dx,BYTE PTR ds:[rsi]
   14002ee83:	add    BYTE PTR [eax],al
   14002ee86:	add    BYTE PTR [rax],al
   14002ee88:	data16 ins BYTE PTR es:[rdi],dx
   14002ee8a:	outs   dx,DWORD PTR ds:[rsi]
   14002ee8b:	(bad)  
   14002ee8c:	je     0x14002ee8e
   14002ee8e:	add    BYTE PTR [rax],al
   14002ee90:	outs   dx,DWORD PTR fs:[rsi]
   14002ee92:	jne    0x14002eef6
   14002ee94:	ins    BYTE PTR es:[rdi],dx
   14002ee95:	add    BYTE PTR gs:[rax],al
   14002ee98:	(bad)  
   14002ee99:	outs   dx,DWORD PTR ds:[rsi]
   14002ee9a:	outs   dx,DWORD PTR ds:[rsi]
   14002ee9b:	ins    BYTE PTR es:[rdi],dx
   14002ee9c:	add    BYTE PTR [rax],al
   14002ee9e:	add    BYTE PTR [rax],al
   14002eea0:	pop    rdi
   14002eea1:	pop    rdi
   14002eea2:	imul   ebp,DWORD PTR [rsi+0x74],0x5f000038
   14002eea9:	pop    rdi
   14002eeaa:	imul   ebp,DWORD PTR [rsi+0x74],0x5f003631
   14002eeb1:	pop    rdi
   14002eeb2:	imul   ebp,DWORD PTR [rsi+0x74],0x5f003233
   14002eeb9:	pop    rdi
   14002eeba:	imul   ebp,DWORD PTR [rsi+0x74],0x5f003436
   14002eec1:	pop    rdi
   14002eec2:	imul   ebp,DWORD PTR [rsi+0x74],0x383231
   14002eec9:	add    BYTE PTR [rax],al
   14002eecb:	add    BYTE PTR [rax],al
   14002eecd:	add    BYTE PTR [rax],al
   14002eecf:	add    BYTE PTR [rsi*2+0x6f6e6b6e],bh
   14002eed6:	ja     0x14002ef46
   14002eed8:	add    BYTE PTR ds:[rax],al
   14002eedb:	add    BYTE PTR [rax],al
   14002eedd:	add    BYTE PTR [rax],al
   14002eedf:	add    BYTE PTR [rdi+0x63],dh
   14002eee2:	push   0x745f7261
   14002eee7:	add    BYTE PTR [rdi+0x5f],bl
   14002eeea:	ja     0x14002ef22
   14002eeec:	xor    al,0x20
   14002eeee:	add    BYTE PTR [rax],al
   14002eef0:	push   rbp
   14002eef1:	rex.WRX
   14002eef2:	rex.WXB
   14002eef3:	rex.WRX
   14002eef4:	rex.WRXB push r15
   14002eef6:	rex.WRX add BYTE PTR [rbx+0x69],r14b
   14002eefa:	outs   dx,BYTE PTR ds:[esi]
   14002eefc:	gs and BYTE PTR fs:[rax],al
   14002ef00:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14002ef03:	jae    0x14002ef79
   14002ef05:	add    BYTE PTR [rax],al
   14002ef07:	add    BYTE PTR [rax],ah
   14002ef09:	jbe    0x14002ef7a
   14002ef0b:	ins    BYTE PTR es:[rdi],dx
   14002ef0c:	(bad)  
   14002ef0d:	je     0x14002ef78
   14002ef0f:	ins    BYTE PTR es:[rdi],dx
   14002ef10:	add    BYTE PTR gs:[rax],al
   14002ef13:	add    BYTE PTR [rax],al
   14002ef15:	add    BYTE PTR [rax],al
   14002ef17:	add    BYTE PTR [rax+0x75],ah
   14002ef1a:	outs   dx,BYTE PTR ds:[rsi]
   14002ef1b:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
   14002ef1f:	outs   dx,BYTE PTR ds:[rsi]
   14002ef20:	and    BYTE PTR [rbp+0x63],ah
   14002ef23:	jae    0x14002ef9a
   14002ef25:	(bad)  
   14002ef26:	add    BYTE PTR [rax],al
   14002ef28:	jne    0x14002ef98
   14002ef2a:	imul   ebp,DWORD PTR [rdi+0x6e],0x73000020
   14002ef31:	je     0x14002efa5
   14002ef33:	jne    0x14002ef98
   14002ef35:	je     0x14002ef57
   14002ef37:	add    BYTE PTR [rbx+0x6c],ah
   14002ef3a:	(bad)  
   14002ef3b:	jae    0x14002efb0
   14002ef3d:	and    BYTE PTR [rax],al
   14002ef3f:	add    BYTE PTR [rbx+0x6f],ah
   14002ef42:	movsxd ebp,DWORD PTR [rcx+riz*2+0x73]
   14002ef46:	jae    0x14002ef68
	...
   14002ef50:	movsxd ebp,DWORD PTR [rdi+0x69]
   14002ef53:	outs   dx,BYTE PTR ds:[rsi]
   14002ef54:	je     0x14002efbb
   14002ef56:	jb     0x14002efbe
   14002ef58:	(bad)  
   14002ef59:	movsxd esp,DWORD PTR [rbp+0x20]
   14002ef5c:	add    BYTE PTR [rax],al
   14002ef5e:	add    BYTE PTR [rax],al
   14002ef60:	outs   dx,BYTE PTR gs:[rsi]
   14002ef62:	jne    0x14002efd1
   14002ef64:	and    BYTE PTR [rax],al
   14002ef66:	add    BYTE PTR [rax],al
   14002ef68:	jbe    0x14002efd9
   14002ef6a:	ins    BYTE PTR es:[rdi],dx
   14002ef6b:	(bad)  
   14002ef6c:	je     0x14002efd7
   14002ef6e:	ins    BYTE PTR es:[rdi],dx
   14002ef6f:	and    BYTE PTR gs:[rax],al
   14002ef72:	add    BYTE PTR [rax],al
   14002ef74:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14002ef77:	jae    0x14002efed
   14002ef79:	and    BYTE PTR [rax],al
   14002ef7b:	add    BYTE PTR [rax],al
   14002ef7d:	add    BYTE PTR [rax],al
   14002ef7f:	add    BYTE PTR [rbx+0x6c],ah
   14002ef82:	imul   edi,DWORD PTR [rdx],0x7272613a
   14002ef88:	(bad)  
   14002ef89:	jns    0x14002efc7
   14002ef8b:	add    BYTE PTR [rax],al
   14002ef8d:	add    BYTE PTR [rax],al
   14002ef8f:	add    BYTE PTR [rbx+0x6c],ah
   14002ef92:	imul   edi,DWORD PTR [rdx],0x6e69703a
   14002ef98:	pop    rdi
   14002ef99:	jo     0x14002f00f
   14002ef9b:	jb     0x14002efd9
   14002ef9d:	add    BYTE PTR [rax],al
   14002ef9f:	add    BYTE PTR [rcx],ch
   14002efa1:	pop    rbx
   14002efa2:	add    BYTE PTR [rax],al
   14002efa4:	jnp    0x14002f00c
   14002efa6:	ins    BYTE PTR es:[rdi],dx
   14002efa7:	(bad)  
   14002efa8:	je     0x14002f027
   14002efaa:	add    BYTE PTR [rax],al
   14002efac:	jnp    0x14002f014
   14002efae:	outs   dx,DWORD PTR ds:[rsi]
   14002efaf:	jb     0x14002efd1
   14002efb1:	add    BYTE PTR [rax],al
   14002efb3:	add    BYTE PTR [rbx+0x20],dh
   14002efb6:	add    BYTE PTR [rax],al
   14002efb8:	mov    eax,0x1400314
   14002efbd:	add    BYTE PTR [rax],al
   14002efbf:	add    BYTE PTR [rax+0x1400053],al
   14002efc5:	add    BYTE PTR [rax],al
   14002efc7:	add    BYTE PTR [rax+0x1400053],al
   14002efcd:	add    BYTE PTR [rax],al
   14002efcf:	add    BYTE PTR [rax+0x1400053],al
   14002efd5:	add    BYTE PTR [rax],al
   14002efd7:	add    BYTE PTR [rax],dh
   14002efd9:	adc    eax,0x14003
   14002efde:	add    BYTE PTR [rax],al
   14002efe0:	rex.R add DWORD PTR [rcx],0x40
   14002efe4:	add    DWORD PTR [rax],eax
   14002efe6:	add    BYTE PTR [rax],al
   14002efe8:	hlt    
   14002efe9:	push   rsi
   14002efea:	add    DWORD PTR [rax+0x1],eax
   14002efed:	add    BYTE PTR [rax],al
   14002efef:	add    BYTE PTR [rax+0x6d],dh
   14002eff2:	add    DWORD PTR [rax+0x1],eax
   14002eff5:	add    BYTE PTR [rax],al
   14002eff7:	add    BYTE PTR [rax+0x1400315],dh
   14002effd:	add    BYTE PTR [rax],al
   14002efff:	add    BYTE PTR [rax+0x1400183],bh
   14002f005:	add    BYTE PTR [rax],al
   14002f007:	add    BYTE PTR [rdi+rdx*2+0x1],al
   14002f00b:	rex add DWORD PTR [rax],eax
   14002f00e:	add    BYTE PTR [rax],al
   14002f010:	call   0x14142f182
   14002f015:	add    BYTE PTR [rax],al
   14002f017:	add    BYTE PTR [rax],dh
   14002f019:	(bad)  
   14002f01a:	add    eax,DWORD PTR [rax+0x1]
   14002f01d:	add    BYTE PTR [rax],al
   14002f01f:	add    BYTE PTR [rbx+rax*4+0x1],cl
   14002f023:	rex add DWORD PTR [rax],eax
   14002f026:	add    BYTE PTR [rax],al
   14002f028:	clc    
   14002f029:	push   rsi
   14002f02a:	add    DWORD PTR [rax+0x1],eax
   14002f02d:	add    BYTE PTR [rax],al
   14002f02f:	add    BYTE PTR [rbp+rbp*2+0x14001],al
   14002f036:	add    BYTE PTR [rax],al
   14002f038:	mov    al,0x16
   14002f03a:	add    eax,DWORD PTR [rax+0x1]
   14002f03d:	add    BYTE PTR [rax],al
   14002f03f:	add    BYTE PTR [rax-0x7d],al
   14002f042:	add    DWORD PTR [rax+0x1],eax
   14002f045:	add    BYTE PTR [rax],al
   14002f047:	add    al,ch
   14002f049:	push   rsi
   14002f04a:	add    DWORD PTR [rax+0x1],eax
   14002f04d:	add    BYTE PTR [rax],al
   14002f04f:	add    BYTE PTR [rbp*2+0x14001],ch
   14002f056:	add    BYTE PTR [rax],al
   14002f058:	xor    BYTE PTR [rdi],dl
   14002f05a:	add    eax,DWORD PTR [rax+0x1]
   14002f05d:	add    BYTE PTR [rax],al
   14002f05f:	add    BYTE PTR [rax-0x7d],dh
   14002f062:	add    DWORD PTR [rax+0x1],eax
   14002f065:	add    BYTE PTR [rax],al
   14002f067:	add    BYTE PTR [rdi+rdx*2],bl
   14002f06a:	add    DWORD PTR [rax+0x1],eax
   14002f06d:	add    BYTE PTR [rax],al
   14002f06f:	add    BYTE PTR [rbp+rbp*2+0x14001],ch
   14002f076:	add    BYTE PTR [rax],al
   14002f078:	and    BYTE PTR [rdi],bh
   14002f07a:	(bad)  
   14002f07b:	and    BYTE PTR [rax],al
	...
   14002f17d:	add    BYTE PTR [rax],al
   14002f17f:	add    BYTE PTR [rax],ah
   14002f181:	add    BYTE PTR [rax],ah
   14002f183:	add    BYTE PTR [rax],ah
   14002f185:	add    BYTE PTR [rax],ah
   14002f187:	add    BYTE PTR [rax],ah
   14002f189:	add    BYTE PTR [rax],ah
   14002f18b:	add    BYTE PTR [rax],ah
   14002f18d:	add    BYTE PTR [rax],ah
   14002f18f:	add    BYTE PTR [rax],ah
   14002f191:	add    BYTE PTR [rax],ch
   14002f193:	add    BYTE PTR [rax],ch
   14002f195:	add    BYTE PTR [rax],ch
   14002f197:	add    BYTE PTR [rax],ch
   14002f199:	add    BYTE PTR [rax],ch
   14002f19b:	add    BYTE PTR [rax],ah
   14002f19d:	add    BYTE PTR [rax],ah
   14002f19f:	add    BYTE PTR [rax],ah
   14002f1a1:	add    BYTE PTR [rax],ah
   14002f1a3:	add    BYTE PTR [rax],ah
   14002f1a5:	add    BYTE PTR [rax],ah
   14002f1a7:	add    BYTE PTR [rax],ah
   14002f1a9:	add    BYTE PTR [rax],ah
   14002f1ab:	add    BYTE PTR [rax],ah
   14002f1ad:	add    BYTE PTR [rax],ah
   14002f1af:	add    BYTE PTR [rax],ah
   14002f1b1:	add    BYTE PTR [rax],ah
   14002f1b3:	add    BYTE PTR [rax],ah
   14002f1b5:	add    BYTE PTR [rax],ah
   14002f1b7:	add    BYTE PTR [rax],ah
   14002f1b9:	add    BYTE PTR [rax],ah
   14002f1bb:	add    BYTE PTR [rax],ah
   14002f1bd:	add    BYTE PTR [rax],ah
   14002f1bf:	add    BYTE PTR [rax+0x0],cl
   14002f1c2:	adc    BYTE PTR [rax],al
   14002f1c4:	adc    BYTE PTR [rax],al
   14002f1c6:	adc    BYTE PTR [rax],al
   14002f1c8:	adc    BYTE PTR [rax],al
   14002f1ca:	adc    BYTE PTR [rax],al
   14002f1cc:	adc    BYTE PTR [rax],al
   14002f1ce:	adc    BYTE PTR [rax],al
   14002f1d0:	adc    BYTE PTR [rax],al
   14002f1d2:	adc    BYTE PTR [rax],al
   14002f1d4:	adc    BYTE PTR [rax],al
   14002f1d6:	adc    BYTE PTR [rax],al
   14002f1d8:	adc    BYTE PTR [rax],al
   14002f1da:	adc    BYTE PTR [rax],al
   14002f1dc:	adc    BYTE PTR [rax],al
   14002f1de:	adc    BYTE PTR [rax],al
   14002f1e0:	test   BYTE PTR [rax],al
   14002f1e2:	test   BYTE PTR [rax],al
   14002f1e4:	test   BYTE PTR [rax],al
   14002f1e6:	test   BYTE PTR [rax],al
   14002f1e8:	test   BYTE PTR [rax],al
   14002f1ea:	test   BYTE PTR [rax],al
   14002f1ec:	test   BYTE PTR [rax],al
   14002f1ee:	test   BYTE PTR [rax],al
   14002f1f0:	test   BYTE PTR [rax],al
   14002f1f2:	test   BYTE PTR [rax],al
   14002f1f4:	adc    BYTE PTR [rax],al
   14002f1f6:	adc    BYTE PTR [rax],al
   14002f1f8:	adc    BYTE PTR [rax],al
   14002f1fa:	adc    BYTE PTR [rax],al
   14002f1fc:	adc    BYTE PTR [rax],al
   14002f1fe:	adc    BYTE PTR [rax],al
   14002f200:	adc    BYTE PTR [rax],al
   14002f202:	add    DWORD PTR [rax],0x810081
   14002f208:	add    DWORD PTR [rax],0x810081
   14002f20e:	add    DWORD PTR [rax],eax
   14002f210:	add    DWORD PTR [rax],eax
   14002f212:	add    DWORD PTR [rax],eax
   14002f214:	add    DWORD PTR [rax],eax
   14002f216:	add    DWORD PTR [rax],eax
   14002f218:	add    DWORD PTR [rax],eax
   14002f21a:	add    DWORD PTR [rax],eax
   14002f21c:	add    DWORD PTR [rax],eax
   14002f21e:	add    DWORD PTR [rax],eax
   14002f220:	add    DWORD PTR [rax],eax
   14002f222:	add    DWORD PTR [rax],eax
   14002f224:	add    DWORD PTR [rax],eax
   14002f226:	add    DWORD PTR [rax],eax
   14002f228:	add    DWORD PTR [rax],eax
   14002f22a:	add    DWORD PTR [rax],eax
   14002f22c:	add    DWORD PTR [rax],eax
   14002f22e:	add    DWORD PTR [rax],eax
   14002f230:	add    DWORD PTR [rax],eax
   14002f232:	add    DWORD PTR [rax],eax
   14002f234:	add    DWORD PTR [rax],eax
   14002f236:	adc    BYTE PTR [rax],al
   14002f238:	adc    BYTE PTR [rax],al
   14002f23a:	adc    BYTE PTR [rax],al
   14002f23c:	adc    BYTE PTR [rax],al
   14002f23e:	adc    BYTE PTR [rax],al
   14002f240:	adc    BYTE PTR [rax],al
   14002f242:	(bad)  
   14002f243:	add    BYTE PTR [rdx-0x7dff7e00],al
   14002f249:	add    BYTE PTR [rdx+0x2008200],al
   14002f24f:	add    BYTE PTR [rdx],al
   14002f251:	add    BYTE PTR [rdx],al
   14002f253:	add    BYTE PTR [rdx],al
   14002f255:	add    BYTE PTR [rdx],al
   14002f257:	add    BYTE PTR [rdx],al
   14002f259:	add    BYTE PTR [rdx],al
   14002f25b:	add    BYTE PTR [rdx],al
   14002f25d:	add    BYTE PTR [rdx],al
   14002f25f:	add    BYTE PTR [rdx],al
   14002f261:	add    BYTE PTR [rdx],al
   14002f263:	add    BYTE PTR [rdx],al
   14002f265:	add    BYTE PTR [rdx],al
   14002f267:	add    BYTE PTR [rdx],al
   14002f269:	add    BYTE PTR [rdx],al
   14002f26b:	add    BYTE PTR [rdx],al
   14002f26d:	add    BYTE PTR [rdx],al
   14002f26f:	add    BYTE PTR [rdx],al
   14002f271:	add    BYTE PTR [rdx],al
   14002f273:	add    BYTE PTR [rdx],al
   14002f275:	add    BYTE PTR [rax],dl
   14002f277:	add    BYTE PTR [rax],dl
   14002f279:	add    BYTE PTR [rax],dl
   14002f27b:	add    BYTE PTR [rax],dl
   14002f27d:	add    BYTE PTR [rax],ah
	...
   14002f37f:	add    BYTE PTR [rax],al
   14002f381:	add    BYTE PTR [rax],ah
   14002f383:	add    BYTE PTR [rax],ah
   14002f385:	add    BYTE PTR [rax],ah
   14002f387:	add    BYTE PTR [rax],ah
   14002f389:	add    BYTE PTR [rax],ah
   14002f38b:	add    BYTE PTR [rax],ah
   14002f38d:	add    BYTE PTR [rax],ah
   14002f38f:	add    BYTE PTR [rax],ah
   14002f391:	add    BYTE PTR [rax],ah
   14002f393:	add    BYTE PTR [rax],ch
   14002f395:	add    BYTE PTR [rax],ch
   14002f397:	add    BYTE PTR [rax],ch
   14002f399:	add    BYTE PTR [rax],ch
   14002f39b:	add    BYTE PTR [rax],ch
   14002f39d:	add    BYTE PTR [rax],ah
   14002f39f:	add    BYTE PTR [rax],ah
   14002f3a1:	add    BYTE PTR [rax],ah
   14002f3a3:	add    BYTE PTR [rax],ah
   14002f3a5:	add    BYTE PTR [rax],ah
   14002f3a7:	add    BYTE PTR [rax],ah
   14002f3a9:	add    BYTE PTR [rax],ah
   14002f3ab:	add    BYTE PTR [rax],ah
   14002f3ad:	add    BYTE PTR [rax],ah
   14002f3af:	add    BYTE PTR [rax],ah
   14002f3b1:	add    BYTE PTR [rax],ah
   14002f3b3:	add    BYTE PTR [rax],ah
   14002f3b5:	add    BYTE PTR [rax],ah
   14002f3b7:	add    BYTE PTR [rax],ah
   14002f3b9:	add    BYTE PTR [rax],ah
   14002f3bb:	add    BYTE PTR [rax],ah
   14002f3bd:	add    BYTE PTR [rax],ah
   14002f3bf:	add    BYTE PTR [rax],ah
   14002f3c1:	add    BYTE PTR [rax+0x0],cl
   14002f3c4:	adc    BYTE PTR [rax],al
   14002f3c6:	adc    BYTE PTR [rax],al
   14002f3c8:	adc    BYTE PTR [rax],al
   14002f3ca:	adc    BYTE PTR [rax],al
   14002f3cc:	adc    BYTE PTR [rax],al
   14002f3ce:	adc    BYTE PTR [rax],al
   14002f3d0:	adc    BYTE PTR [rax],al
   14002f3d2:	adc    BYTE PTR [rax],al
   14002f3d4:	adc    BYTE PTR [rax],al
   14002f3d6:	adc    BYTE PTR [rax],al
   14002f3d8:	adc    BYTE PTR [rax],al
   14002f3da:	adc    BYTE PTR [rax],al
   14002f3dc:	adc    BYTE PTR [rax],al
   14002f3de:	adc    BYTE PTR [rax],al
   14002f3e0:	adc    BYTE PTR [rax],al
   14002f3e2:	test   BYTE PTR [rax],al
   14002f3e4:	test   BYTE PTR [rax],al
   14002f3e6:	test   BYTE PTR [rax],al
   14002f3e8:	test   BYTE PTR [rax],al
   14002f3ea:	test   BYTE PTR [rax],al
   14002f3ec:	test   BYTE PTR [rax],al
   14002f3ee:	test   BYTE PTR [rax],al
   14002f3f0:	test   BYTE PTR [rax],al
   14002f3f2:	test   BYTE PTR [rax],al
   14002f3f4:	test   BYTE PTR [rax],al
   14002f3f6:	adc    BYTE PTR [rax],al
   14002f3f8:	adc    BYTE PTR [rax],al
   14002f3fa:	adc    BYTE PTR [rax],al
   14002f3fc:	adc    BYTE PTR [rax],al
   14002f3fe:	adc    BYTE PTR [rax],al
   14002f400:	adc    BYTE PTR [rax],al
   14002f402:	adc    BYTE PTR [rax],al
   14002f404:	add    DWORD PTR [rcx],0x1810181
   14002f40a:	add    DWORD PTR [rcx],0x1810181
   14002f410:	add    DWORD PTR [rcx],eax
   14002f412:	add    DWORD PTR [rcx],eax
   14002f414:	add    DWORD PTR [rcx],eax
   14002f416:	add    DWORD PTR [rcx],eax
   14002f418:	add    DWORD PTR [rcx],eax
   14002f41a:	add    DWORD PTR [rcx],eax
   14002f41c:	add    DWORD PTR [rcx],eax
   14002f41e:	add    DWORD PTR [rcx],eax
   14002f420:	add    DWORD PTR [rcx],eax
   14002f422:	add    DWORD PTR [rcx],eax
   14002f424:	add    DWORD PTR [rcx],eax
   14002f426:	add    DWORD PTR [rcx],eax
   14002f428:	add    DWORD PTR [rcx],eax
   14002f42a:	add    DWORD PTR [rcx],eax
   14002f42c:	add    DWORD PTR [rcx],eax
   14002f42e:	add    DWORD PTR [rcx],eax
   14002f430:	add    DWORD PTR [rcx],eax
   14002f432:	add    DWORD PTR [rcx],eax
   14002f434:	add    DWORD PTR [rcx],eax
   14002f436:	add    DWORD PTR [rcx],eax
   14002f438:	adc    BYTE PTR [rax],al
   14002f43a:	adc    BYTE PTR [rax],al
   14002f43c:	adc    BYTE PTR [rax],al
   14002f43e:	adc    BYTE PTR [rax],al
   14002f440:	adc    BYTE PTR [rax],al
   14002f442:	adc    BYTE PTR [rax],al
   14002f444:	(bad)  
   14002f445:	add    DWORD PTR [rdx-0x7dfe7dff],eax
   14002f44b:	add    DWORD PTR [rdx+0x2018201],eax
   14002f451:	add    DWORD PTR [rdx],eax
   14002f453:	add    DWORD PTR [rdx],eax
   14002f455:	add    DWORD PTR [rdx],eax
   14002f457:	add    DWORD PTR [rdx],eax
   14002f459:	add    DWORD PTR [rdx],eax
   14002f45b:	add    DWORD PTR [rdx],eax
   14002f45d:	add    DWORD PTR [rdx],eax
   14002f45f:	add    DWORD PTR [rdx],eax
   14002f461:	add    DWORD PTR [rdx],eax
   14002f463:	add    DWORD PTR [rdx],eax
   14002f465:	add    DWORD PTR [rdx],eax
   14002f467:	add    DWORD PTR [rdx],eax
   14002f469:	add    DWORD PTR [rdx],eax
   14002f46b:	add    DWORD PTR [rdx],eax
   14002f46d:	add    DWORD PTR [rdx],eax
   14002f46f:	add    DWORD PTR [rdx],eax
   14002f471:	add    DWORD PTR [rdx],eax
   14002f473:	add    DWORD PTR [rdx],eax
   14002f475:	add    DWORD PTR [rdx],eax
   14002f477:	add    DWORD PTR [rax],edx
   14002f479:	add    BYTE PTR [rax],dl
   14002f47b:	add    BYTE PTR [rax],dl
   14002f47d:	add    BYTE PTR [rax],dl
   14002f47f:	add    BYTE PTR [rax],ah
   14002f481:	add    BYTE PTR [rax],ah
   14002f483:	add    BYTE PTR [rax],ah
   14002f485:	add    BYTE PTR [rax],ah
   14002f487:	add    BYTE PTR [rax],ah
   14002f489:	add    BYTE PTR [rax],ah
   14002f48b:	add    BYTE PTR [rax],ah
   14002f48d:	add    BYTE PTR [rax],ah
   14002f48f:	add    BYTE PTR [rax],ah
   14002f491:	add    BYTE PTR [rax],ah
   14002f493:	add    BYTE PTR [rax],ah
   14002f495:	add    BYTE PTR [rax],ah
   14002f497:	add    BYTE PTR [rax],ah
   14002f499:	add    BYTE PTR [rax],ah
   14002f49b:	add    BYTE PTR [rax],ah
   14002f49d:	add    BYTE PTR [rax],ah
   14002f49f:	add    BYTE PTR [rax],ah
   14002f4a1:	add    BYTE PTR [rax],ah
   14002f4a3:	add    BYTE PTR [rax],ah
   14002f4a5:	add    BYTE PTR [rax],ah
   14002f4a7:	add    BYTE PTR [rax],ah
   14002f4a9:	add    BYTE PTR [rax],ah
   14002f4ab:	add    BYTE PTR [rax],ah
   14002f4ad:	add    BYTE PTR [rax],ah
   14002f4af:	add    BYTE PTR [rax],ah
   14002f4b1:	add    BYTE PTR [rax],ah
   14002f4b3:	add    BYTE PTR [rax],ah
   14002f4b5:	add    BYTE PTR [rax],ah
   14002f4b7:	add    BYTE PTR [rax],ah
   14002f4b9:	add    BYTE PTR [rax],ah
   14002f4bb:	add    BYTE PTR [rax],ah
   14002f4bd:	add    BYTE PTR [rax],ah
   14002f4bf:	add    BYTE PTR [rax],ah
   14002f4c1:	add    BYTE PTR [rax],cl
   14002f4c3:	add    BYTE PTR [rax],dl
   14002f4c5:	add    BYTE PTR [rax],dl
   14002f4c7:	add    BYTE PTR [rax],dl
   14002f4c9:	add    BYTE PTR [rax],dl
   14002f4cb:	add    BYTE PTR [rax],dl
   14002f4cd:	add    BYTE PTR [rax],dl
   14002f4cf:	add    BYTE PTR [rax],dl
   14002f4d1:	add    BYTE PTR [rax],dl
   14002f4d3:	add    BYTE PTR [rax],dl
   14002f4d5:	add    BYTE PTR [rax],dl
   14002f4d7:	add    BYTE PTR [rax],dl
   14002f4d9:	add    BYTE PTR [rax],dl
   14002f4db:	add    BYTE PTR [rax],dl
   14002f4dd:	add    BYTE PTR [rax],dl
   14002f4df:	add    BYTE PTR [rax],dl
   14002f4e1:	add    BYTE PTR [rax],dl
   14002f4e3:	add    BYTE PTR [rax],dl
   14002f4e5:	add    BYTE PTR [rax],dl
   14002f4e7:	add    BYTE PTR [rax],dl
   14002f4e9:	add    BYTE PTR [rax],dl
   14002f4eb:	add    BYTE PTR [rax],dl
   14002f4ed:	add    BYTE PTR [rax],dl
   14002f4ef:	add    BYTE PTR [rax],dl
   14002f4f1:	add    BYTE PTR [rax],dl
   14002f4f3:	add    BYTE PTR [rax],dl
   14002f4f5:	add    BYTE PTR [rax],dl
   14002f4f7:	add    BYTE PTR [rax],dl
   14002f4f9:	add    BYTE PTR [rax],dl
   14002f4fb:	add    BYTE PTR [rax],dl
   14002f4fd:	add    BYTE PTR [rax],dl
   14002f4ff:	add    BYTE PTR [rax],dl
   14002f501:	add    BYTE PTR [rcx],al
   14002f503:	add    DWORD PTR [rcx],eax
   14002f505:	add    DWORD PTR [rcx],eax
   14002f507:	add    DWORD PTR [rcx],eax
   14002f509:	add    DWORD PTR [rcx],eax
   14002f50b:	add    DWORD PTR [rcx],eax
   14002f50d:	add    DWORD PTR [rcx],eax
   14002f50f:	add    DWORD PTR [rcx],eax
   14002f511:	add    DWORD PTR [rcx],eax
   14002f513:	add    DWORD PTR [rcx],eax
   14002f515:	add    DWORD PTR [rcx],eax
   14002f517:	add    DWORD PTR [rcx],eax
   14002f519:	add    DWORD PTR [rcx],eax
   14002f51b:	add    DWORD PTR [rcx],eax
   14002f51d:	add    DWORD PTR [rcx],eax
   14002f51f:	add    DWORD PTR [rcx],eax
   14002f521:	add    DWORD PTR [rcx],eax
   14002f523:	add    DWORD PTR [rcx],eax
   14002f525:	add    DWORD PTR [rcx],eax
   14002f527:	add    DWORD PTR [rcx],eax
   14002f529:	add    DWORD PTR [rcx],eax
   14002f52b:	add    DWORD PTR [rcx],eax
   14002f52d:	add    DWORD PTR [rcx],eax
   14002f52f:	add    DWORD PTR [rax],edx
   14002f531:	add    BYTE PTR [rcx],al
   14002f533:	add    DWORD PTR [rcx],eax
   14002f535:	add    DWORD PTR [rcx],eax
   14002f537:	add    DWORD PTR [rcx],eax
   14002f539:	add    DWORD PTR [rcx],eax
   14002f53b:	add    DWORD PTR [rcx],eax
   14002f53d:	add    DWORD PTR [rcx],eax
   14002f53f:	add    DWORD PTR [rdx],eax
   14002f541:	add    DWORD PTR [rdx],eax
   14002f543:	add    DWORD PTR [rdx],eax
   14002f545:	add    DWORD PTR [rdx],eax
   14002f547:	add    DWORD PTR [rdx],eax
   14002f549:	add    DWORD PTR [rdx],eax
   14002f54b:	add    DWORD PTR [rdx],eax
   14002f54d:	add    DWORD PTR [rdx],eax
   14002f54f:	add    DWORD PTR [rdx],eax
   14002f551:	add    DWORD PTR [rdx],eax
   14002f553:	add    DWORD PTR [rdx],eax
   14002f555:	add    DWORD PTR [rdx],eax
   14002f557:	add    DWORD PTR [rdx],eax
   14002f559:	add    DWORD PTR [rdx],eax
   14002f55b:	add    DWORD PTR [rdx],eax
   14002f55d:	add    DWORD PTR [rdx],eax
   14002f55f:	add    DWORD PTR [rdx],eax
   14002f561:	add    DWORD PTR [rdx],eax
   14002f563:	add    DWORD PTR [rdx],eax
   14002f565:	add    DWORD PTR [rdx],eax
   14002f567:	add    DWORD PTR [rdx],eax
   14002f569:	add    DWORD PTR [rdx],eax
   14002f56b:	add    DWORD PTR [rdx],eax
   14002f56d:	add    DWORD PTR [rdx],eax
   14002f56f:	add    DWORD PTR [rax],edx
   14002f571:	add    BYTE PTR [rdx],al
   14002f573:	add    DWORD PTR [rdx],eax
   14002f575:	add    DWORD PTR [rdx],eax
   14002f577:	add    DWORD PTR [rdx],eax
   14002f579:	add    DWORD PTR [rdx],eax
   14002f57b:	add    DWORD PTR [rdx],eax
   14002f57d:	add    DWORD PTR [rdx],eax
   14002f57f:	add    DWORD PTR [rdx],eax
   14002f581:	add    DWORD PTR [rcx],eax
   14002f583:	add    DWORD PTR [rax],eax
	...
   14002f58d:	add    BYTE PTR [rax],al
   14002f58f:	add    BYTE PTR [rax-0x7b7c7d7f],al
   14002f595:	test   DWORD PTR [rsi-0x75767779],eax
   14002f59b:	mov    ecx,DWORD PTR [rbp+rcx*4-0x6e6f7072]
   14002f5a2:	xchg   edx,eax
   14002f5a3:	xchg   ebx,eax
   14002f5a4:	xchg   esp,eax
   14002f5a5:	xchg   ebp,eax
   14002f5a6:	xchg   esi,eax
   14002f5a7:	xchg   edi,eax
   14002f5a8:	cwde   
   14002f5a9:	cdq    
   14002f5aa:	(bad)  
   14002f5ab:	fwait
   14002f5ac:	pushf  
   14002f5ad:	popf   
   14002f5ae:	sahf   
   14002f5af:	lahf   
   14002f5b0:	movabs al,ds:0xa8a7a6a5a4a3a2a1
   14002f5b9:	test   eax,0xadacabaa
   14002f5be:	scas   al,BYTE PTR es:[rdi]
   14002f5bf:	scas   eax,DWORD PTR es:[rdi]
   14002f5c0:	mov    al,0xb1
   14002f5c2:	mov    dl,0xb3
   14002f5c4:	mov    ah,0xb5
   14002f5c6:	mov    dh,0xb7
   14002f5c8:	mov    eax,0xbcbbbab9
   14002f5cd:	mov    ebp,0xc1c0bfbe
   14002f5d2:	ret    0xc4c3
   14002f5d5:	(bad)
   14002f5d8:	enter  0xcac9,0xcb
   14002f5dc:	int3   
   14002f5dd:	int    0xce
   14002f5df:	iret   
   14002f5e0:	rcl    cl,1
   14002f5e2:	rcl    bl,cl
   14002f5e4:	(bad)  
   14002f5e5:	(bad)  
   14002f5e6:	(bad)  
   14002f5e7:	xlat   BYTE PTR ds:[rbx]
   14002f5e8:	fcomp  st(1)
   14002f5ea:	fcmovu st,st(3)
   14002f5ec:	(bad)  
   14002f5ee:	(bad)  
   14002f5f0:	loopne 0x14002f5d3
   14002f5f2:	loop   0x14002f5d7
   14002f5f4:	in     al,0xe5
   14002f5f6:	out    0xe7,al
   14002f5f8:	call   0x12ceee0e6
   14002f5fd:	in     eax,dx
   14002f5fe:	out    dx,al
   14002f5ff:	out    dx,eax
   14002f600:	lock icebp 
   14002f602:	repnz repz hlt 
   14002f605:	cmc    
   14002f606:	div    bh
   14002f608:	clc    
   14002f609:	stc    
   14002f60a:	cli    
   14002f60b:	sti    
   14002f60c:	cld    
   14002f60d:	std    
   14002f60e:	(bad)  
   14002f60f:	inc    DWORD PTR [rax]
   14002f611:	add    DWORD PTR [rdx],eax
   14002f613:	add    eax,DWORD PTR [rax*1+0x9080706]
   14002f61a:	or     cl,BYTE PTR [rbx]
   14002f61c:	or     al,0xd
   14002f61e:	(bad)  
   14002f61f:	movups xmm2,XMMWORD PTR [rcx]
   14002f622:	adc    dl,BYTE PTR [rbx]
   14002f624:	adc    al,0x15
   14002f626:	(bad)  
   14002f627:	(bad)  
   14002f628:	sbb    BYTE PTR [rcx],bl
   14002f62a:	sbb    bl,BYTE PTR [rbx]
   14002f62c:	sbb    al,0x1d
   14002f62e:	(bad)  
   14002f62f:	(bad)  
   14002f630:	and    BYTE PTR [rcx],ah
   14002f632:	and    ah,BYTE PTR [rbx]
   14002f634:	and    al,0x25
   14002f636:	es (bad) 
   14002f638:	sub    BYTE PTR [rcx],ch
   14002f63a:	sub    ch,BYTE PTR [rbx]
   14002f63c:	sub    al,0x2d
   14002f63e:	cs (bad) 
   14002f640:	xor    BYTE PTR [rcx],dh
   14002f642:	xor    dh,BYTE PTR [rbx]
   14002f644:	xor    al,0x35
   14002f646:	ss (bad) 
   14002f648:	cmp    BYTE PTR [rcx],bh
   14002f64a:	cmp    bh,BYTE PTR [rbx]
   14002f64c:	cmp    al,0x3d
   14002f64e:	ds (bad) 
   14002f650:	rex (bad) 
   14002f652:	(bad)
   14002f657:	addr32 push 0x6c6b6a69
   14002f65d:	ins    DWORD PTR es:[rdi],dx
   14002f65e:	outs   dx,BYTE PTR ds:[rsi]
   14002f65f:	outs   dx,DWORD PTR ds:[rsi]
   14002f660:	jo     0x14002f6d3
   14002f662:	jb     0x14002f6d7
   14002f664:	je     0x14002f6db
   14002f666:	jbe    0x14002f6df
   14002f668:	js     0x14002f6e3
   14002f66a:	jp     0x14002f6c7
   14002f66c:	pop    rsp
   14002f66d:	pop    rbp
   14002f66e:	pop    rsi
   14002f66f:	pop    rdi
   14002f670:	(bad)  
   14002f671:	(bad)  
   14002f672:	(bad)
   14002f677:	addr32 push 0x6c6b6a69
   14002f67d:	ins    DWORD PTR es:[rdi],dx
   14002f67e:	outs   dx,BYTE PTR ds:[rsi]
   14002f67f:	outs   dx,DWORD PTR ds:[rsi]
   14002f680:	jo     0x14002f6f3
   14002f682:	jb     0x14002f6f7
   14002f684:	je     0x14002f6fb
   14002f686:	jbe    0x14002f6ff
   14002f688:	js     0x14002f703
   14002f68a:	jp     0x14002f707
   14002f68c:	jl     0x14002f70b
   14002f68e:	jle    0x14002f70f
   14002f690:	add    BYTE PTR [rcx-0x7a7b7c7e],0x86
   14002f697:	xchg   DWORD PTR [rax-0x73747577],ecx
   14002f69d:	lea    ecx,[rsi-0x6d6e6f71]
   14002f6a3:	xchg   ebx,eax
   14002f6a4:	xchg   esp,eax
   14002f6a5:	xchg   ebp,eax
   14002f6a6:	xchg   esi,eax
   14002f6a7:	xchg   edi,eax
   14002f6a8:	cwde   
   14002f6a9:	cdq    
   14002f6aa:	(bad)  
   14002f6ab:	fwait
   14002f6ac:	pushf  
   14002f6ad:	popf   
   14002f6ae:	sahf   
   14002f6af:	lahf   
   14002f6b0:	movabs al,ds:0xa8a7a6a5a4a3a2a1
   14002f6b9:	test   eax,0xadacabaa
   14002f6be:	scas   al,BYTE PTR es:[rdi]
   14002f6bf:	scas   eax,DWORD PTR es:[rdi]
   14002f6c0:	mov    al,0xb1
   14002f6c2:	mov    dl,0xb3
   14002f6c4:	mov    ah,0xb5
   14002f6c6:	mov    dh,0xb7
   14002f6c8:	mov    eax,0xbcbbbab9
   14002f6cd:	mov    ebp,0xc1c0bfbe
   14002f6d2:	ret    0xc4c3
   14002f6d5:	(bad)
   14002f6d8:	enter  0xcac9,0xcb
   14002f6dc:	int3   
   14002f6dd:	int    0xce
   14002f6df:	iret   
   14002f6e0:	rcl    cl,1
   14002f6e2:	rcl    bl,cl
   14002f6e4:	(bad)  
   14002f6e5:	(bad)  
   14002f6e6:	(bad)  
   14002f6e7:	xlat   BYTE PTR ds:[rbx]
   14002f6e8:	fcomp  st(1)
   14002f6ea:	fcmovu st,st(3)
   14002f6ec:	(bad)  
   14002f6ee:	(bad)  
   14002f6f0:	loopne 0x14002f6d3
   14002f6f2:	loop   0x14002f6d7
   14002f6f4:	in     al,0xe5
   14002f6f6:	out    0xe7,al
   14002f6f8:	call   0x12ceee1e6
   14002f6fd:	in     eax,dx
   14002f6fe:	out    dx,al
   14002f6ff:	out    dx,eax
   14002f700:	lock icebp 
   14002f702:	repnz repz hlt 
   14002f705:	cmc    
   14002f706:	div    bh
   14002f708:	clc    
   14002f709:	stc    
   14002f70a:	cli    
   14002f70b:	sti    
   14002f70c:	cld    
   14002f70d:	std    
   14002f70e:	(bad)  
   14002f70f:	inc    DWORD PTR [rax-0x7b7c7d7f]
   14002f715:	test   DWORD PTR [rsi-0x75767779],eax
   14002f71b:	mov    ecx,DWORD PTR [rbp+rcx*4-0x6e6f7072]
   14002f722:	xchg   edx,eax
   14002f723:	xchg   ebx,eax
   14002f724:	xchg   esp,eax
   14002f725:	xchg   ebp,eax
   14002f726:	xchg   esi,eax
   14002f727:	xchg   edi,eax
   14002f728:	cwde   
   14002f729:	cdq    
   14002f72a:	(bad)  
   14002f72b:	fwait
   14002f72c:	pushf  
   14002f72d:	popf   
   14002f72e:	sahf   
   14002f72f:	lahf   
   14002f730:	movabs al,ds:0xa8a7a6a5a4a3a2a1
   14002f739:	test   eax,0xadacabaa
   14002f73e:	scas   al,BYTE PTR es:[rdi]
   14002f73f:	scas   eax,DWORD PTR es:[rdi]
   14002f740:	mov    al,0xb1
   14002f742:	mov    dl,0xb3
   14002f744:	mov    ah,0xb5
   14002f746:	mov    dh,0xb7
   14002f748:	mov    eax,0xbcbbbab9
   14002f74d:	mov    ebp,0xc1c0bfbe
   14002f752:	ret    0xc4c3
   14002f755:	(bad)
   14002f758:	enter  0xcac9,0xcb
   14002f75c:	int3   
   14002f75d:	int    0xce
   14002f75f:	iret   
   14002f760:	rcl    cl,1
   14002f762:	rcl    bl,cl
   14002f764:	(bad)  
   14002f765:	(bad)  
   14002f766:	(bad)  
   14002f767:	xlat   BYTE PTR ds:[rbx]
   14002f768:	fcomp  st(1)
   14002f76a:	fcmovu st,st(3)
   14002f76c:	(bad)  
   14002f76e:	(bad)  
   14002f770:	loopne 0x14002f753
   14002f772:	loop   0x14002f757
   14002f774:	in     al,0xe5
   14002f776:	out    0xe7,al
   14002f778:	call   0x12ceee266
   14002f77d:	in     eax,dx
   14002f77e:	out    dx,al
   14002f77f:	out    dx,eax
   14002f780:	lock icebp 
   14002f782:	repnz repz hlt 
   14002f785:	cmc    
   14002f786:	div    bh
   14002f788:	clc    
   14002f789:	stc    
   14002f78a:	cli    
   14002f78b:	sti    
   14002f78c:	cld    
   14002f78d:	std    
   14002f78e:	(bad)  
   14002f78f:	inc    DWORD PTR [rax]
   14002f791:	add    DWORD PTR [rdx],eax
   14002f793:	add    eax,DWORD PTR [rax*1+0x9080706]
   14002f79a:	or     cl,BYTE PTR [rbx]
   14002f79c:	or     al,0xd
   14002f79e:	(bad)  
   14002f79f:	movups xmm2,XMMWORD PTR [rcx]
   14002f7a2:	adc    dl,BYTE PTR [rbx]
   14002f7a4:	adc    al,0x15
   14002f7a6:	(bad)  
   14002f7a7:	(bad)  
   14002f7a8:	sbb    BYTE PTR [rcx],bl
   14002f7aa:	sbb    bl,BYTE PTR [rbx]
   14002f7ac:	sbb    al,0x1d
   14002f7ae:	(bad)  
   14002f7af:	(bad)  
   14002f7b0:	and    BYTE PTR [rcx],ah
   14002f7b2:	and    ah,BYTE PTR [rbx]
   14002f7b4:	and    al,0x25
   14002f7b6:	es (bad) 
   14002f7b8:	sub    BYTE PTR [rcx],ch
   14002f7ba:	sub    ch,BYTE PTR [rbx]
   14002f7bc:	sub    al,0x2d
   14002f7be:	cs (bad) 
   14002f7c0:	xor    BYTE PTR [rcx],dh
   14002f7c2:	xor    dh,BYTE PTR [rbx]
   14002f7c4:	xor    al,0x35
   14002f7c6:	ss (bad) 
   14002f7c8:	cmp    BYTE PTR [rcx],bh
   14002f7ca:	cmp    bh,BYTE PTR [rbx]
   14002f7cc:	cmp    al,0x3d
   14002f7ce:	ds (bad) 
   14002f7d0:	rex
   14002f7d1:	rex.B
   14002f7d2:	rex.X
   14002f7d3:	rex.XB
   14002f7d4:	rex.R
   14002f7d5:	rex.RB
   14002f7d6:	rex.RX
   14002f7d7:	rex.RXB
   14002f7d8:	rex.W
   14002f7d9:	rex.WB
   14002f7da:	rex.WX
   14002f7db:	rex.WXB
   14002f7dc:	rex.WR
   14002f7dd:	rex.WRB
   14002f7de:	rex.WRX
   14002f7df:	rex.WRXB push r8
   14002f7e1:	push   rcx
   14002f7e2:	push   rdx
   14002f7e3:	push   rbx
   14002f7e4:	push   rsp
   14002f7e5:	push   rbp
   14002f7e6:	push   rsi
   14002f7e7:	push   rdi
   14002f7e8:	pop    rax
   14002f7e9:	pop    rcx
   14002f7ea:	pop    rdx
   14002f7eb:	pop    rbx
   14002f7ec:	pop    rsp
   14002f7ed:	pop    rbp
   14002f7ee:	pop    rsi
   14002f7ef:	pop    rdi
   14002f7f0:	(bad)  
   14002f7f1:	rex.B
   14002f7f2:	rex.X
   14002f7f3:	rex.XB
   14002f7f4:	rex.R
   14002f7f5:	rex.RB
   14002f7f6:	rex.RX
   14002f7f7:	rex.RXB
   14002f7f8:	rex.W
   14002f7f9:	rex.WB
   14002f7fa:	rex.WX
   14002f7fb:	rex.WXB
   14002f7fc:	rex.WR
   14002f7fd:	rex.WRB
   14002f7fe:	rex.WRX
   14002f7ff:	rex.WRXB push r8
   14002f801:	push   rcx
   14002f802:	push   rdx
   14002f803:	push   rbx
   14002f804:	push   rsp
   14002f805:	push   rbp
   14002f806:	push   rsi
   14002f807:	push   rdi
   14002f808:	pop    rax
   14002f809:	pop    rcx
   14002f80a:	pop    rdx
   14002f80b:	jnp    0x14002f889
   14002f80d:	jge    0x14002f88d
   14002f80f:	jg     0x14002f791
   14002f811:	add    DWORD PTR [rdx-0x797a7b7d],0x8a898887
   14002f81b:	mov    ecx,DWORD PTR [rbp+rcx*4-0x6e6f7072]
   14002f822:	xchg   edx,eax
   14002f823:	xchg   ebx,eax
   14002f824:	xchg   esp,eax
   14002f825:	xchg   ebp,eax
   14002f826:	xchg   esi,eax
   14002f827:	xchg   edi,eax
   14002f828:	cwde   
   14002f829:	cdq    
   14002f82a:	(bad)  
   14002f82b:	fwait
   14002f82c:	pushf  
   14002f82d:	popf   
   14002f82e:	sahf   
   14002f82f:	lahf   
   14002f830:	movabs al,ds:0xa8a7a6a5a4a3a2a1
   14002f839:	test   eax,0xadacabaa
   14002f83e:	scas   al,BYTE PTR es:[rdi]
   14002f83f:	scas   eax,DWORD PTR es:[rdi]
   14002f840:	mov    al,0xb1
   14002f842:	mov    dl,0xb3
   14002f844:	mov    ah,0xb5
   14002f846:	mov    dh,0xb7
   14002f848:	mov    eax,0xbcbbbab9
   14002f84d:	mov    ebp,0xc1c0bfbe
   14002f852:	ret    0xc4c3
   14002f855:	(bad)
   14002f858:	enter  0xcac9,0xcb
   14002f85c:	int3   
   14002f85d:	int    0xce
   14002f85f:	iret   
   14002f860:	rcl    cl,1
   14002f862:	rcl    bl,cl
   14002f864:	(bad)  
   14002f865:	(bad)  
   14002f866:	(bad)  
   14002f867:	xlat   BYTE PTR ds:[rbx]
   14002f868:	fcomp  st(1)
   14002f86a:	fcmovu st,st(3)
   14002f86c:	(bad)  
   14002f86e:	(bad)  
   14002f870:	loopne 0x14002f853
   14002f872:	loop   0x14002f857
   14002f874:	in     al,0xe5
   14002f876:	out    0xe7,al
   14002f878:	call   0x12ceee366
   14002f87d:	in     eax,dx
   14002f87e:	out    dx,al
   14002f87f:	out    dx,eax
   14002f880:	lock icebp 
   14002f882:	repnz repz hlt 
   14002f885:	cmc    
   14002f886:	div    bh
   14002f888:	clc    
   14002f889:	stc    
   14002f88a:	cli    
   14002f88b:	sti    
   14002f88c:	cld    
   14002f88d:	std    
   14002f88e:	(bad)  
   14002f88f:	jmp    QWORD PTR [rax]
   14002f891:	stc    
   14002f892:	add    al,BYTE PTR [rax+0x1]
	...
   14002f89d:	add    BYTE PTR [rax],al
   14002f89f:	add    BYTE PTR [rsi+rax*8+0x1],ch
   14002f8a3:	rex add DWORD PTR [rax],eax
   14002f8a6:	add    BYTE PTR [rax],al
   14002f8a8:	xor    cl,bh
   14002f8aa:	add    al,BYTE PTR [rax+0x1]
   14002f8ad:	add    BYTE PTR [rax],al
   14002f8af:	add    BYTE PTR [rdx+rbp*2+0x14003],dh
   14002f8b6:	add    BYTE PTR [rax],al
   14002f8b8:	mov    eax,0x140021e
   14002f8bd:	add    BYTE PTR [rax],al
   14002f8bf:	add    BYTE PTR [rax-0x7],cl
   14002f8c2:	add    al,BYTE PTR [rax+0x1]
   14002f8c5:	add    BYTE PTR [rax],al
   14002f8c7:	add    BYTE PTR [rdx+rbp*2+0x14003],dh
   14002f8ce:	add    BYTE PTR [rax],al
   14002f8d0:	mov    eax,0x140021f
   14002f8d5:	add    BYTE PTR [rax],al
   14002f8d7:	add    BYTE PTR [rax-0x7],ah
   14002f8da:	add    al,BYTE PTR [rax+0x1]
   14002f8dd:	add    BYTE PTR [rax],al
   14002f8df:	add    BYTE PTR [rdx+rbp*2+0x14003],dh
   14002f8e6:	add    BYTE PTR [rax],al
   14002f8e8:	fcomp  QWORD PTR [rsi+0x14001]
   14002f8ee:	add    BYTE PTR [rax],al
   14002f8f0:	js     0x14002f8eb
   14002f8f2:	add    al,BYTE PTR [rax+0x1]
   14002f8f5:	add    BYTE PTR [rax],al
   14002f8f7:	add    BYTE PTR [rdx+rbp*2+0x14003],dh
   14002f8fe:	add    BYTE PTR [rax],al
   14002f900:	test   BYTE PTR [rcx+rax*1+0x140],ah
   14002f907:	add    BYTE PTR [rax+0x14002f9],dl
   14002f90d:	add    BYTE PTR [rax],al
   14002f90f:	add    BYTE PTR [rdx+rbp*2+0x14003],dh
   14002f916:	add    BYTE PTR [rax],al
   14002f918:	test   BYTE PTR [rbx+0x14001],ch
   14002f91e:	add    BYTE PTR [rax],al
   14002f920:	rex.WR add BYTE PTR [rbx+0x0],r8b
   14002f924:	pop    rdi
   14002f925:	add    BYTE PTR [rcx+0x0],al
   14002f928:	rex.WR add BYTE PTR [rax+rax*1+0x0],r9b
   14002f92d:	add    BYTE PTR [rax],al
   14002f92f:	add    BYTE PTR [rax+rax*1+0x43],cl
   14002f933:	add    BYTE PTR [rdi+0x0],bl
   14002f936:	rex.XB add BYTE PTR [r15+0x0],cl
   14002f93a:	rex.WR add BYTE PTR [rax+rax*1+0x41],r9b
   14002f93f:	add    BYTE PTR [rax+rax*1+0x45],dl
   14002f943:	add    BYTE PTR [rax],al
   14002f945:	add    BYTE PTR [rax],al
   14002f947:	add    BYTE PTR [rax+rax*1+0x43],cl
   14002f94b:	add    BYTE PTR [rdi+0x0],bl
   14002f94e:	add    BYTE PTR [r8+r8*1+0x59],dl
   14002f953:	add    BYTE PTR [rax+0x0],dl
   14002f956:	add    BYTE PTR [r8],r8b
   14002f959:	add    BYTE PTR [rax],al
   14002f95b:	add    BYTE PTR [rax],al
   14002f95d:	add    BYTE PTR [rax],al
   14002f95f:	add    BYTE PTR [rax+rax*1+0x43],cl
   14002f963:	add    BYTE PTR [rdi+0x0],bl
   14002f966:	rex.WRB add BYTE PTR [r15+0x0],r9b
   14002f96a:	rex.WRX add BYTE PTR [rbp+0x0],r8b
   14002f96e:	push   rsp
   14002f96f:	add    BYTE PTR [rcx+0x0],al
   14002f972:	push   rdx
   14002f973:	add    BYTE PTR [rcx+0x0],bl
   14002f976:	add    BYTE PTR [rax],al
   14002f978:	rex.WR add BYTE PTR [rbx+0x0],r8b
   14002f97c:	pop    rdi
   14002f97d:	add    BYTE PTR [rsi+0x0],cl
   14002f980:	push   rbp
   14002f981:	add    BYTE PTR [rbp+0x0],cl
   14002f984:	add    BYTE PTR [r10+0x0],r10b
   14002f988:	rex.WB add BYTE PTR [r11+0x0],al
   14002f98c:	add    BYTE PTR [rax],al
   14002f98e:	add    BYTE PTR [rax],al
   14002f990:	rex.WR add BYTE PTR [rbx+0x0],r8b
   14002f994:	pop    rdi
   14002f995:	add    BYTE PTR [rax+rax*1+0x49],dl
   14002f999:	add    BYTE PTR [rbp+0x0],cl
   14002f99c:	add    BYTE PTR [r8],r8b
   14002f99f:	add    BYTE PTR [rcx],al
   14002f9a1:	add    al,BYTE PTR [rbx]
   14002f9a3:	add    al,0x5
   14002f9a5:	(bad)  
   14002f9a6:	(bad)  
   14002f9a7:	or     BYTE PTR [rcx],cl
   14002f9a9:	or     cl,BYTE PTR [rbx]
   14002f9ab:	or     al,0xd
   14002f9ad:	(bad)  
   14002f9ae:	movups xmm2,XMMWORD PTR [rcx]
   14002f9b1:	adc    dl,BYTE PTR [rbx]
   14002f9b3:	adc    al,0x15
   14002f9b5:	(bad)  
   14002f9b6:	(bad)  
   14002f9b7:	sbb    BYTE PTR [rcx],bl
   14002f9b9:	sbb    bl,BYTE PTR [rbx]
   14002f9bb:	sbb    al,0x1d
   14002f9bd:	(bad)  
   14002f9be:	(bad)  
   14002f9bf:	and    BYTE PTR [rcx],ah
   14002f9c1:	and    ah,BYTE PTR [rbx]
   14002f9c3:	and    al,0x25
   14002f9c5:	es (bad) 
   14002f9c7:	sub    BYTE PTR [rcx],ch
   14002f9c9:	sub    ch,BYTE PTR [rbx]
   14002f9cb:	sub    al,0x2d
   14002f9cd:	cs (bad) 
   14002f9cf:	xor    BYTE PTR [rcx],dh
   14002f9d1:	xor    dh,BYTE PTR [rbx]
   14002f9d3:	xor    al,0x35
   14002f9d5:	ss (bad) 
   14002f9d7:	cmp    BYTE PTR [rcx],bh
   14002f9d9:	cmp    bh,BYTE PTR [rbx]
   14002f9db:	cmp    al,0x3d
   14002f9dd:	ds (bad) 
   14002f9df:	rex
   14002f9e0:	rex.B
   14002f9e1:	rex.X
   14002f9e2:	rex.XB
   14002f9e3:	rex.R
   14002f9e4:	rex.RB
   14002f9e5:	rex.RX
   14002f9e6:	rex.RXB
   14002f9e7:	rex.W
   14002f9e8:	rex.WB
   14002f9e9:	rex.WX
   14002f9ea:	rex.WXB
   14002f9eb:	rex.WR
   14002f9ec:	rex.WRB
   14002f9ed:	rex.WRX
   14002f9ee:	rex.WRXB push r8
   14002f9f0:	push   rcx
   14002f9f1:	push   rdx
   14002f9f2:	push   rbx
   14002f9f3:	push   rsp
   14002f9f4:	push   rbp
   14002f9f5:	push   rsi
   14002f9f6:	push   rdi
   14002f9f7:	pop    rax
   14002f9f8:	pop    rcx
   14002f9f9:	pop    rdx
   14002f9fa:	pop    rbx
   14002f9fb:	pop    rsp
   14002f9fc:	pop    rbp
   14002f9fd:	pop    rsi
   14002f9fe:	pop    rdi
   14002f9ff:	(bad)  
   14002fa00:	(bad)  
   14002fa01:	(bad)
   14002fa06:	addr32 push 0x6c6b6a69
   14002fa0c:	ins    DWORD PTR es:[rdi],dx
   14002fa0d:	outs   dx,BYTE PTR ds:[rsi]
   14002fa0e:	outs   dx,DWORD PTR ds:[rsi]
   14002fa0f:	jo     0x14002fa82
   14002fa11:	jb     0x14002fa86
   14002fa13:	je     0x14002fa8a
   14002fa15:	jbe    0x14002fa8e
   14002fa17:	js     0x14002fa92
   14002fa19:	jp     0x14002fa96
   14002fa1b:	jl     0x14002fa9a
   14002fa1d:	jle    0x14002fa9e
   14002fa1f:	add    BYTE PTR [rip+0x3b00],bh        # 0x140033525
   14002fa25:	add    BYTE PTR [rax],al
   14002fa27:	add    BYTE PTR [rbx],bh
   14002fa29:	add    BYTE PTR [rax],al
   14002fa2b:	add    BYTE PTR [rip+0x43000000],bh        # 0x18302fa31
   14002fa31:	add    BYTE PTR [rax],al
   14002fa33:	add    BYTE PTR [rax],al
   14002fa35:	add    BYTE PTR [rax],al
   14002fa37:	add    BYTE PTR [rdi+0x0],bl
   14002fa3a:	add    BYTE PTR cs:[rax+rax*1],ch
   14002fa3e:	add    BYTE PTR [rax],al
   14002fa40:	pop    rdi
   14002fa41:	add    BYTE PTR [rax],al
   14002fa43:	add    BYTE PTR [rsi],ch
   14002fa45:	add    BYTE PTR [rax],al
   14002fa47:	add    BYTE PTR [rcx],dh
   14002fa49:	and    edx,DWORD PTR [rbx+0x4e]
   14002fa4c:	rex.B
   14002fa4d:	rex.WRX add BYTE PTR [rax],r8b
   14002fa50:	xor    DWORD PTR [rbx],esp
   14002fa52:	rex.WB
   14002fa53:	rex.WRX
   14002fa54:	add    BYTE PTR [rax],r8b
   14002fa57:	add    BYTE PTR [rcx],dh
   14002fa59:	and    ecx,DWORD PTR [rcx+0x4e]
   14002fa5c:	rex.RX add BYTE PTR [rax],r8b
   14002fa5f:	add    BYTE PTR [rcx],dh
   14002fa61:	and    edx,DWORD PTR [rcx+0x4e]
   14002fa64:	rex.B
   14002fa65:	rex.WRX add BYTE PTR [rax],r8b
	...
   14002fa70:	cmp    dh,0x2
   14002fa73:	rex add DWORD PTR [rax],eax
   14002fa76:	add    BYTE PTR [rax],al
   14002fa78:	add    BYTE PTR [r14+0x0],r9b
   14002fa7c:	push   rbp
   14002fa7d:	add    BYTE PTR [rax],al
   14002fa7f:	add    BYTE PTR [rax+0x14002fe],bl
   14002fa85:	add    BYTE PTR [rax],al
   14002fa87:	add    BYTE PTR [rbp+0x0],al
   14002fa8a:	rex.WRX add BYTE PTR [rbp+0x0],r10b
   14002fa8e:	add    BYTE PTR [rax],al
   14002fa90:	sar    dh,0x2
   14002fa93:	rex add DWORD PTR [rax],eax
   14002fa96:	add    BYTE PTR [rax],al
   14002fa98:	add    BYTE PTR [r14+0x0],r9b
   14002fa9c:	push   rbp
   14002fa9d:	add    BYTE PTR [rax],al
   14002fa9f:	add    al,ch
   14002faa1:	inc    BYTE PTR [rdx]
   14002faa3:	rex add DWORD PTR [rax],eax
   14002faa6:	add    BYTE PTR [rax],al
   14002faa8:	add    BYTE PTR [r14+0x0],r9b
   14002faac:	add    BYTE PTR [r8],al
   14002faaf:	add    BYTE PTR [rax],al
   14002fab1:	inc    DWORD PTR [rdx]
   14002fab3:	rex add DWORD PTR [rax],eax
   14002fab6:	add    BYTE PTR [rax],al
   14002fab8:	rex.WRX add BYTE PTR [rax+r8*1+0x42],r9b
   14002fabd:	add    BYTE PTR [rax],al
   14002fabf:	add    BYTE PTR [rax],dl
   14002fac1:	inc    DWORD PTR [rdx]
   14002fac3:	rex add DWORD PTR [rax],eax
   14002fac6:	add    BYTE PTR [rax],al
   14002fac8:	add    BYTE PTR [r14+0x0],r9b
   14002facc:	rex.XB add BYTE PTR [r8],al
   14002facf:	add    BYTE PTR [rax],ch
   14002fad1:	inc    DWORD PTR [rdx]
   14002fad3:	rex add DWORD PTR [rax],eax
   14002fad6:	add    BYTE PTR [rax],al
   14002fad8:	pop    rdx
   14002fad9:	add    BYTE PTR [rax+0x0],cl
   14002fadc:	rex.W add BYTE PTR [rax],al
   14002fadf:	add    BYTE PTR [rax],dh
   14002fae1:	inc    DWORD PTR [rdx]
   14002fae3:	rex add DWORD PTR [rax],eax
   14002fae6:	add    BYTE PTR [rax],al
   14002fae8:	pop    rdx
   14002fae9:	add    BYTE PTR [rax+0x0],cl
   14002faec:	rex.WB add BYTE PTR [r8],al
   14002faef:	add    BYTE PTR [rax],bh
   14002faf1:	inc    DWORD PTR [rdx]
   14002faf3:	rex add DWORD PTR [rax],eax
   14002faf6:	add    BYTE PTR [rax],al
   14002faf8:	rex.XB add BYTE PTR [r8+0x0],cl
   14002fafc:	push   rbx
   14002fafd:	add    BYTE PTR [rax],al
   14002faff:	add    BYTE PTR [rax-0x1],cl
   14002fb02:	add    al,BYTE PTR [rax+0x1]
   14002fb05:	add    BYTE PTR [rax],al
   14002fb07:	add    BYTE PTR [rdx+0x0],bl
   14002fb0a:	rex.W add BYTE PTR [rax+0x0],cl
   14002fb0e:	add    BYTE PTR [rax],al
   14002fb10:	jo     0x14002fb11
   14002fb12:	add    al,BYTE PTR [rax+0x1]
   14002fb15:	add    BYTE PTR [rax],al
   14002fb17:	add    BYTE PTR [rbx+0x0],al
   14002fb1a:	rex.W add BYTE PTR [rbx+0x0],dl
   14002fb1e:	add    BYTE PTR [rax],al
   14002fb20:	cwde   
   14002fb21:	inc    DWORD PTR [rdx]
   14002fb23:	rex add DWORD PTR [rax],eax
   14002fb26:	add    BYTE PTR [rax],al
   14002fb28:	pop    rdx
   14002fb29:	add    BYTE PTR [rax+0x0],cl
   14002fb2c:	rex.WB add BYTE PTR [r8],al
   14002fb2f:	add    al,al
   14002fb31:	inc    DWORD PTR [rdx]
   14002fb33:	rex add DWORD PTR [rax],eax
   14002fb36:	add    BYTE PTR [rax],al
   14002fb38:	rex.XB add BYTE PTR [r8+0x0],cl
   14002fb3c:	push   rsp
   14002fb3d:	add    BYTE PTR [rax],al
   14002fb3f:	add    al,ch
   14002fb41:	inc    DWORD PTR [rdx]
   14002fb43:	rex add DWORD PTR [rax],eax
   14002fb46:	add    BYTE PTR [rax],al
   14002fb48:	rex.WRX add BYTE PTR [rax+r8*1+0x42],r9b
   14002fb4d:	add    BYTE PTR [rax],al
   14002fb4f:	add    BYTE PTR [rax],cl
   14002fb51:	add    BYTE PTR [rbx],al
   14002fb53:	rex add DWORD PTR [rax],eax
   14002fb56:	add    BYTE PTR [rax],al
   14002fb58:	add    BYTE PTR [r14+0x0],r9b
   14002fb5c:	push   rbp
   14002fb5d:	add    BYTE PTR [rax],al
   14002fb5f:	add    BYTE PTR [rax],dh
   14002fb61:	add    BYTE PTR [rbx],al
   14002fb63:	rex add DWORD PTR [rax],eax
   14002fb66:	add    BYTE PTR [rax],al
   14002fb68:	add    BYTE PTR [r14+0x0],r9b
   14002fb6c:	add    BYTE PTR [r8],al
   14002fb6f:	add    BYTE PTR [rax+0x0],cl
   14002fb72:	add    eax,DWORD PTR [rax+0x1]
   14002fb75:	add    BYTE PTR [rax],al
   14002fb77:	add    BYTE PTR [rbp+0x0],al
   14002fb7a:	rex.WRX add BYTE PTR [rax+r8*1+0x0],r9b
   14002fb7f:	add    BYTE PTR [rax+0x0],ch
   14002fb82:	add    eax,DWORD PTR [rax+0x1]
   14002fb85:	add    BYTE PTR [rax],al
   14002fb87:	add    BYTE PTR [rbp+0x0],al
   14002fb8a:	rex.WRX add BYTE PTR [rbx+0x0],r8b
   14002fb8e:	add    BYTE PTR [rax],al
   14002fb90:	add    BYTE PTR [rax],0x3
   14002fb93:	rex add DWORD PTR [rax],eax
   14002fb96:	add    BYTE PTR [rax],al
   14002fb98:	add    BYTE PTR [r14+0x0],r9b
   14002fb9c:	rex.X add BYTE PTR [rax],al
   14002fb9f:	add    BYTE PTR [rax+0x1400300],ch
   14002fba5:	add    BYTE PTR [rax],al
   14002fba7:	add    BYTE PTR [rbp+0x0],al
   14002fbaa:	rex.WRX add BYTE PTR [rcx+0x0],r9b
   14002fbae:	add    BYTE PTR [rax],al
   14002fbb0:	rol    BYTE PTR [rax],0x3
   14002fbb3:	rex add DWORD PTR [rax],eax
   14002fbb6:	add    BYTE PTR [rax],al
   14002fbb8:	add    BYTE PTR [r14+0x0],r9b
   14002fbbc:	rex.WX add BYTE PTR [rax],al
   14002fbbf:	add    al,ah
   14002fbc1:	add    BYTE PTR [rbx],al
   14002fbc3:	rex add DWORD PTR [rax],eax
   14002fbc6:	add    BYTE PTR [rax],al
   14002fbc8:	add    BYTE PTR [r14+0x0],r9b
   14002fbcc:	pop    rdx
   14002fbcd:	add    BYTE PTR [rax],al
   14002fbcf:	add    al,bh
   14002fbd1:	add    BYTE PTR [rbx],al
   14002fbd3:	rex add DWORD PTR [rax],eax
   14002fbd6:	add    BYTE PTR [rax],al
   14002fbd8:	add    BYTE PTR [r14+0x0],r9b
   14002fbdc:	push   rbx
   14002fbdd:	add    BYTE PTR [rax],al
   14002fbdf:	add    BYTE PTR [rax],ch
   14002fbe1:	add    DWORD PTR [rbx],eax
   14002fbe3:	rex add DWORD PTR [rax],eax
   14002fbe6:	add    BYTE PTR [rax],al
   14002fbe8:	add    BYTE PTR [r14+0x0],r9b
   14002fbec:	push   rsp
   14002fbed:	add    BYTE PTR [rax],al
   14002fbef:	add    BYTE PTR [rax+0x1],ah
   14002fbf2:	add    eax,DWORD PTR [rax+0x1]
   14002fbf5:	add    BYTE PTR [rax],al
   14002fbf7:	add    BYTE PTR [rbp+0x0],al
   14002fbfa:	rex.WRX add BYTE PTR [rdi+0x0],r8b
   14002fbfe:	add    BYTE PTR [rax],al
   14002fc00:	js     0x14002fc03
   14002fc02:	add    eax,DWORD PTR [rax+0x1]
   14002fc05:	add    BYTE PTR [rax],al
   14002fc07:	add    BYTE PTR [rbp+0x0],al
   14002fc0a:	rex.WRX add BYTE PTR [rbp+0x0],r10b
   14002fc0e:	add    BYTE PTR [rax],al
   14002fc10:	nop
   14002fc11:	add    DWORD PTR [rbx],eax
   14002fc13:	rex add DWORD PTR [rax],eax
   14002fc16:	add    BYTE PTR [rax],al
   14002fc18:	add    BYTE PTR [r14+0x0],r9b
   14002fc1c:	push   rbp
   14002fc1d:	add    BYTE PTR [rax],al
   14002fc1f:	add    BYTE PTR [rax+0x1400301],ch
   14002fc25:	add    BYTE PTR [rax],al
   14002fc27:	add    BYTE PTR [rsi+0x0],al
   14002fc2a:	push   rdx
   14002fc2b:	add    BYTE PTR [rdx+0x0],al
   14002fc2e:	add    BYTE PTR [rax],al
   14002fc30:	enter  0x301,0x40
   14002fc34:	add    DWORD PTR [rax],eax
   14002fc36:	add    BYTE PTR [rax],al
   14002fc38:	rex.RX add BYTE PTR [rdx+0x0],r10b
   14002fc3c:	rex.XB add BYTE PTR [r8],al
   14002fc3f:	add    al,ch
   14002fc41:	add    DWORD PTR [rbx],eax
   14002fc43:	rex add DWORD PTR [rax],eax
   14002fc46:	add    BYTE PTR [rax],al
   14002fc48:	rex.RX add BYTE PTR [rdx+0x0],r10b
   14002fc4c:	rex.WR add BYTE PTR [rax],r8b
   14002fc4f:	add    BYTE PTR [rax],dl
   14002fc51:	add    al,BYTE PTR [rbx]
   14002fc53:	rex add DWORD PTR [rax],eax
   14002fc56:	add    BYTE PTR [rax],al
   14002fc58:	rex.RX add BYTE PTR [rdx+0x0],r10b
   14002fc5c:	push   rbx
   14002fc5d:	add    BYTE PTR [rax],al
   14002fc5f:	add    BYTE PTR [rax],dh
   14002fc61:	add    al,BYTE PTR [rbx]
   14002fc63:	rex add DWORD PTR [rax],eax
   14002fc66:	add    BYTE PTR [rax],al
   14002fc68:	add    BYTE PTR [rbp+0x0],r8b
   14002fc6c:	add    BYTE PTR [r8],al
   14002fc6f:	add    BYTE PTR [rax+0x2],dl
   14002fc72:	add    eax,DWORD PTR [rax+0x1]
   14002fc75:	add    BYTE PTR [rax],al
   14002fc77:	add    BYTE PTR [rax+rax*1+0x45],al
   14002fc7b:	add    BYTE PTR [rbx+0x0],al
   14002fc7e:	add    BYTE PTR [rax],al
   14002fc80:	js     0x14002fc84
   14002fc82:	add    eax,DWORD PTR [rax+0x1]
   14002fc85:	add    BYTE PTR [rax],al
   14002fc87:	add    BYTE PTR [rax+rax*1+0x45],al
   14002fc8b:	add    BYTE PTR [rax+rax*1+0x0],cl
   14002fc8f:	add    BYTE PTR [rax+0x1400302],ah
   14002fc95:	add    BYTE PTR [rax],al
   14002fc97:	add    BYTE PTR [rax+rax*1+0x45],al
   14002fc9b:	add    BYTE PTR [rbx+0x0],dl
   14002fc9e:	add    BYTE PTR [rax],al
   14002fca0:	rol    BYTE PTR [rdx],0x3
   14002fca3:	rex add DWORD PTR [rax],eax
   14002fca6:	add    BYTE PTR [rax],al
   14002fca8:	add    BYTE PTR [r14+0x0],r9b
   14002fcac:	rex.WB add BYTE PTR [r8],al
   14002fcaf:	add    al,ah
   14002fcb1:	add    al,BYTE PTR [rbx]
   14002fcb3:	rex add DWORD PTR [rax],eax
   14002fcb6:	add    BYTE PTR [rax],al
   14002fcb8:	rex.WB add BYTE PTR [r8+rax*1+0x53],dl
   14002fcbd:	add    BYTE PTR [rax],al
   14002fcbf:	add    BYTE PTR [rax],al
   14002fcc1:	add    eax,DWORD PTR [rbx]
   14002fcc3:	rex add DWORD PTR [rax],eax
   14002fcc6:	add    BYTE PTR [rax],al
   14002fcc8:	rex.WRX add BYTE PTR [rdi+0x0],r9b
   14002fccc:	push   rdx
   14002fccd:	add    BYTE PTR [rax],al
   14002fccf:	add    BYTE PTR [rax],bl
   14002fcd1:	add    eax,DWORD PTR [rbx]
   14002fcd3:	rex add DWORD PTR [rax],eax
   14002fcd6:	add    BYTE PTR [rax],al
   14002fcd8:	rex.WRX add BYTE PTR [rdi+0x0],r9b
   14002fcdc:	push   rdx
   14002fcdd:	add    BYTE PTR [rax],al
   14002fcdf:	add    BYTE PTR [rax+0x3],al
   14002fce2:	add    eax,DWORD PTR [rax+0x1]
   14002fce5:	add    BYTE PTR [rax],al
   14002fce7:	add    BYTE PTR [rsi+0x0],cl
   14002fcea:	rex.WRXB add BYTE PTR [r14+0x0],r9b
   14002fcee:	add    BYTE PTR [rax],al
   14002fcf0:	push   0x1400303
   14002fcf5:	add    BYTE PTR [rax],al
   14002fcf7:	add    BYTE PTR [rax+0x0],dl
   14002fcfa:	push   rsp
   14002fcfb:	add    BYTE PTR [rdx+0x0],al
   14002fcfe:	add    BYTE PTR [rax],al
   14002fd00:	cwde   
   14002fd01:	add    eax,DWORD PTR [rbx]
   14002fd03:	rex add DWORD PTR [rax],eax
   14002fd06:	add    BYTE PTR [rax],al
   14002fd08:	add    BYTE PTR [r11+0x0],r10b
   14002fd0c:	push   rbx
   14002fd0d:	add    BYTE PTR [rax],al
   14002fd0f:	add    al,al
   14002fd11:	add    eax,DWORD PTR [rbx]
   14002fd13:	rex add DWORD PTR [rax],eax
   14002fd16:	add    BYTE PTR [rax],al
   14002fd18:	add    BYTE PTR [r11+0x0],r10b
   14002fd1c:	rex.X add BYTE PTR [rax],al
   14002fd1f:	add    al,ah
   14002fd21:	add    eax,DWORD PTR [rbx]
   14002fd23:	rex add DWORD PTR [rax],eax
   14002fd26:	add    BYTE PTR [rax],al
   14002fd28:	add    BYTE PTR [r11+0x0],r10b
   14002fd2c:	rex.WR add BYTE PTR [rax],r8b
   14002fd2f:	add    BYTE PTR [rax],al
   14002fd31:	add    al,0x3
   14002fd33:	rex add DWORD PTR [rax],eax
   14002fd36:	add    BYTE PTR [rax],al
   14002fd38:	add    BYTE PTR [r11+0x0],r10b
   14002fd3c:	rex.WRXB add BYTE PTR [r8],r8b
   14002fd3f:	add    BYTE PTR [rax],ch
   14002fd41:	add    al,0x3
   14002fd43:	rex add DWORD PTR [rax],eax
   14002fd46:	add    BYTE PTR [rax],al
   14002fd48:	add    BYTE PTR [r11+0x0],r10b
   14002fd4c:	rex.XB add BYTE PTR [r8],al
   14002fd4f:	add    BYTE PTR [rax+0x4],dl
   14002fd52:	add    eax,DWORD PTR [rax+0x1]
   14002fd55:	add    BYTE PTR [rax],al
   14002fd57:	add    BYTE PTR [rbp+0x0],al
   14002fd5a:	push   rbx
   14002fd5b:	add    BYTE PTR [rax+rax*1+0x0],al
   14002fd5f:	add    BYTE PTR [rax+0x1400304],cl
   14002fd65:	add    BYTE PTR [rax],al
   14002fd67:	add    BYTE PTR [rbp+0x0],al
   14002fd6a:	push   rbx
   14002fd6b:	add    BYTE PTR [rsi+0x0],al
   14002fd6e:	add    BYTE PTR [rax],al
   14002fd70:	test   al,0x4
   14002fd72:	add    eax,DWORD PTR [rax+0x1]
   14002fd75:	add    BYTE PTR [rax],al
   14002fd77:	add    BYTE PTR [rbp+0x0],al
   14002fd7a:	push   rbx
   14002fd7b:	add    BYTE PTR [rbp+0x0],al
   14002fd7e:	add    BYTE PTR [rax],al
   14002fd80:	rol    BYTE PTR [rbx+rax*1],1
   14002fd83:	rex add DWORD PTR [rax],eax
   14002fd86:	add    BYTE PTR [rax],al
   14002fd88:	add    BYTE PTR [r11+0x0],r10b
   14002fd8c:	rex.RXB add BYTE PTR [r8],r8b
   14002fd8f:	add    al,bh
   14002fd91:	add    al,0x3
   14002fd93:	rex add DWORD PTR [rax],eax
   14002fd96:	add    BYTE PTR [rax],al
   14002fd98:	add    BYTE PTR [r11+0x0],r10b
   14002fd9c:	rex.W add BYTE PTR [rax],al
   14002fd9f:	add    BYTE PTR [rax],ah
   14002fda1:	add    eax,0x14003
   14002fda6:	add    BYTE PTR [rax],al
   14002fda8:	add    BYTE PTR [r11+0x0],r10b
   14002fdac:	rex.WRB add BYTE PTR [r8],r8b
   14002fdaf:	add    BYTE PTR [rax+0x5],al
   14002fdb2:	add    eax,DWORD PTR [rax+0x1]
   14002fdb5:	add    BYTE PTR [rax],al
   14002fdb7:	add    BYTE PTR [rbp+0x0],al
   14002fdba:	push   rbx
   14002fdbb:	add    BYTE PTR [rsi+0x0],cl
   14002fdbe:	add    BYTE PTR [rax],al
   14002fdc0:	(bad)  
   14002fdc1:	add    eax,0x14003
   14002fdc6:	add    BYTE PTR [rax],al
   14002fdc8:	add    BYTE PTR [r11+0x0],r10b
   14002fdcc:	rex.WB add BYTE PTR [r8],al
   14002fdcf:	add    BYTE PTR [rax+0x1400305],cl
   14002fdd5:	add    BYTE PTR [rax],al
   14002fdd7:	add    BYTE PTR [rbp+0x0],al
   14002fdda:	push   rbx
   14002fddb:	add    BYTE PTR [rcx+0x0],al
   14002fdde:	add    BYTE PTR [rax],al
   14002fde0:	test   al,0x5
   14002fde2:	add    eax,DWORD PTR [rax+0x1]
   14002fde5:	add    BYTE PTR [rax],al
   14002fde7:	add    BYTE PTR [rbp+0x0],al
   14002fdea:	push   rbx
   14002fdeb:	add    BYTE PTR [rdx+0x0],bl
   14002fdee:	add    BYTE PTR [rax],al
   14002fdf0:	rol    BYTE PTR [rip+0x14003],1        # 0x140043df9
   14002fdf6:	add    BYTE PTR [rax],al
   14002fdf8:	add    BYTE PTR [r11+0x0],r10b
   14002fdfc:	push   rdx
   14002fdfd:	add    BYTE PTR [rax],al
   14002fdff:	add    al,dh
   14002fe01:	add    eax,0x14003
   14002fe06:	add    BYTE PTR [rax],al
   14002fe08:	add    BYTE PTR [r11+0x0],r10b
   14002fe0c:	push   rbp
   14002fe0d:	add    BYTE PTR [rax],al
   14002fe0f:	add    BYTE PTR [rax],bl
   14002fe11:	(bad)  
   14002fe12:	add    eax,DWORD PTR [rax+0x1]
   14002fe15:	add    BYTE PTR [rax],al
   14002fe17:	add    BYTE PTR [rbp+0x0],al
   14002fe1a:	push   rbx
   14002fe1b:	add    BYTE PTR [rcx+0x0],bl
   14002fe1e:	add    BYTE PTR [rax],al
   14002fe20:	cmp    BYTE PTR [rsi],al
   14002fe22:	add    eax,DWORD PTR [rax+0x1]
   14002fe25:	add    BYTE PTR [rax],al
   14002fe27:	add    BYTE PTR [rbp+0x0],al
   14002fe2a:	push   rbx
   14002fe2b:	add    BYTE PTR [rsi+0x0],dl
   14002fe2e:	add    BYTE PTR [rax],al
   14002fe30:	(bad)  
   14002fe31:	(bad)  
   14002fe32:	add    eax,DWORD PTR [rax+0x1]
   14002fe35:	add    BYTE PTR [rax],al
   14002fe37:	add    BYTE PTR [rbx+0x0],dl
   14002fe3a:	push   rsi
   14002fe3b:	add    BYTE PTR [rsi+0x0],al
   14002fe3e:	add    BYTE PTR [rax],al
   14002fe40:	add    BYTE PTR [rsi],0x3
   14002fe43:	rex add DWORD PTR [rax],eax
   14002fe46:	add    BYTE PTR [rax],al
   14002fe48:	add    BYTE PTR [rbp+0x0],r8b
   14002fe4c:	push   rbx
   14002fe4d:	add    BYTE PTR [rax],al
   14002fe4f:	add    al,ch
   14002fe51:	mov    DWORD PTR [rdx],0x140
   14002fe57:	add    BYTE PTR [rbp+0x0],al
   14002fe5a:	rex.WRX add BYTE PTR [rdi+0x0],r8b
   14002fe5e:	add    BYTE PTR [rax],al
   14002fe60:	mov    WORD PTR [rsi],es
   14002fe62:	add    eax,DWORD PTR [rax+0x1]
   14002fe65:	add    BYTE PTR [rax],al
   14002fe67:	add    BYTE PTR [rbp+0x0],al
   14002fe6a:	rex.WRX add BYTE PTR [rbp+0x0],r10b
   14002fe6e:	add    BYTE PTR [rax],al
   14002fe70:	cwde   
   14002fe71:	(bad)  
   14002fe72:	add    eax,DWORD PTR [rax+0x1]
   14002fe75:	add    BYTE PTR [rax],al
   14002fe77:	add    BYTE PTR [rbp+0x0],al
   14002fe7a:	rex.WRX add BYTE PTR [rbp+0x0],r10b
   14002fe7e:	add    BYTE PTR [rax],al
   14002fe80:	(bad)  
   14002fe81:	add    BYTE PTR [rbp+0x0],ch
   14002fe84:	add    BYTE PTR gs:[rdx+0x0],dh
   14002fe88:	imul   eax,DWORD PTR [rax],0x610063
   14002fe8e:	outs   dx,BYTE PTR ds:[rsi]
	...
   14002fe97:	add    BYTE PTR [rcx+0x0],ah
   14002fe9a:	ins    DWORD PTR es:[rdi],dx
   14002fe9b:	add    BYTE PTR [rbp+0x0],ah
   14002fe9e:	jb     0x14002fea0
   14002fea0:	imul   eax,DWORD PTR [rax],0x610063
   14002fea6:	outs   dx,BYTE PTR ds:[rsi]
   14002fea7:	add    BYTE PTR [rax],ah
   14002fea9:	add    BYTE PTR [rbp+0x0],ah
   14002feac:	outs   dx,BYTE PTR ds:[rsi]
   14002fead:	add    BYTE PTR [rdi+0x0],ah
   14002feb0:	ins    BYTE PTR es:[rdi],dx
   14002feb1:	add    BYTE PTR [rcx+0x0],ch
   14002feb4:	jae    0x14002feb6
   14002feb6:	push   0x0
   14002febb:	add    BYTE PTR [rax],al
   14002febd:	add    BYTE PTR [rax],al
   14002febf:	add    BYTE PTR [rcx+0x0],ah
   14002fec2:	ins    DWORD PTR es:[rdi],dx
   14002fec3:	add    BYTE PTR [rbp+0x0],ah
   14002fec6:	jb     0x14002fec8
   14002fec8:	imul   eax,DWORD PTR [rax],0x610063
   14002fece:	outs   dx,BYTE PTR ds:[rsi]
   14002fecf:	add    BYTE PTR [rip+0x6e006500],ch        # 0x1ae0363d5
   14002fed5:	add    BYTE PTR [rdi+0x0],ah
   14002fed8:	ins    BYTE PTR es:[rdi],dx
   14002fed9:	add    BYTE PTR [rcx+0x0],ch
   14002fedc:	jae    0x14002fede
   14002fede:	push   0x0
   14002fee3:	add    BYTE PTR [rax],al
   14002fee5:	add    BYTE PTR [rax],al
   14002fee7:	add    BYTE PTR [rcx+0x0],ah
   14002feea:	jne    0x14002feec
   14002feec:	jae    0x14002feee
   14002feee:	je     0x14002fef0
   14002fef0:	jb     0x14002fef2
   14002fef2:	(bad)  
   14002fef3:	add    BYTE PTR [rax+rax*1+0x69],ch
   14002fef7:	add    BYTE PTR [rcx+0x0],ah
   14002fefa:	outs   dx,BYTE PTR ds:[rsi]
   14002fefb:	add    BYTE PTR [rax],al
   14002fefd:	add    BYTE PTR [rax],al
   14002feff:	add    BYTE PTR [rdx+0x0],ah
   14002ff02:	add    BYTE PTR gs:[rax+rax*1+0x67],ch
   14002ff07:	add    BYTE PTR [rcx+0x0],ch
   14002ff0a:	(bad)  
   14002ff0b:	add    BYTE PTR [rsi+0x0],ch
   14002ff0e:	add    BYTE PTR [rax],al
   14002ff10:	movsxd eax,DWORD PTR [rax]
   14002ff12:	(bad)  
   14002ff13:	add    BYTE PTR [rsi+0x0],ch
   14002ff16:	(bad)  
   14002ff17:	add    BYTE PTR [rax+rax*1+0x69],ah
   14002ff1b:	add    BYTE PTR [rcx+0x0],ah
   14002ff1e:	outs   dx,BYTE PTR ds:[rsi]
	...
   14002ff27:	add    BYTE PTR [rbx+0x0],ah
   14002ff2a:	push   0x6800
   14002ff2f:	add    BYTE PTR [rbx+0x0],ah
   14002ff32:	push   0x6900
   14002ff37:	add    BYTE PTR [rbx+0x0],ah
   14002ff3a:	push   0x6e006900
   14002ff3f:	add    BYTE PTR [rbp+0x0],ah
   14002ff42:	jae    0x14002ff44
   14002ff44:	add    BYTE PTR gs:[rax],al
   14002ff47:	add    BYTE PTR [rbx+0x0],ah
   14002ff4a:	push   0x6e006900
   14002ff4f:	add    BYTE PTR [rbp+0x0],ah
   14002ff52:	jae    0x14002ff54
   14002ff54:	add    BYTE PTR gs:[rip+0x6f006800],ch        # 0x1af03675b
   14002ff5b:	add    BYTE PTR [rsi+0x0],ch
   14002ff5e:	add    BYTE PTR [ebx+0x0],ch
   14002ff62:	outs   dx,DWORD PTR ds:[rsi]
   14002ff63:	add    BYTE PTR [rsi+0x0],ch
   14002ff66:	add    BYTE PTR [eax],al
   14002ff69:	add    BYTE PTR [rax],al
   14002ff6b:	add    BYTE PTR [rax],al
   14002ff6d:	add    BYTE PTR [rax],al
   14002ff6f:	add    BYTE PTR [rbx+0x0],ah
   14002ff72:	push   0x6e006900
   14002ff77:	add    BYTE PTR [rbp+0x0],ah
   14002ff7a:	jae    0x14002ff7c
   14002ff7c:	add    BYTE PTR gs:[rip+0x69007300],ch        # 0x1a9037283
   14002ff83:	add    BYTE PTR [rbp+0x0],ch
   14002ff86:	jo     0x14002ff88
   14002ff88:	ins    BYTE PTR es:[rdi],dx
   14002ff89:	add    BYTE PTR [rcx+0x0],ch
   14002ff8c:	data16 add BYTE PTR [rcx+0x0],ch
   14002ff90:	add    BYTE PTR gs:[rax+rax*1+0x0],ah
   14002ff95:	add    BYTE PTR [rax],al
   14002ff97:	add    BYTE PTR [rbx+0x0],ah
   14002ff9a:	push   0x6e006900
   14002ff9f:	add    BYTE PTR [rbp+0x0],ah
   14002ffa2:	jae    0x14002ffa4
   14002ffa4:	add    BYTE PTR gs:[rip+0x69007300],ch        # 0x1a90372ab
   14002ffab:	add    BYTE PTR [rsi+0x0],ch
   14002ffae:	add    BYTE PTR [ecx+0x0],ah
   14002ffb2:	jo     0x14002ffb4
   14002ffb4:	outs   dx,DWORD PTR ds:[rsi]
   14002ffb5:	add    BYTE PTR [rdx+0x0],dh
   14002ffb8:	add    BYTE PTR gs:[rax],al
   14002ffbb:	add    BYTE PTR [rax],al
   14002ffbd:	add    BYTE PTR [rax],al
   14002ffbf:	add    BYTE PTR [rbx+0x0],ah
   14002ffc2:	push   0x6e006900
   14002ffc7:	add    BYTE PTR [rbp+0x0],ah
   14002ffca:	jae    0x14002ffcc
   14002ffcc:	add    BYTE PTR gs:[rip+0x72007400],ch        # 0x1b20373d3
   14002ffd3:	add    BYTE PTR [rcx+0x0],ah
   14002ffd6:	add    BYTE PTR fs:[rcx+0x0],ch
   14002ffda:	je     0x14002ffdc
   14002ffdc:	imul   eax,DWORD PTR [rax],0x6e006f
   14002ffe2:	(bad)  
   14002ffe3:	add    BYTE PTR [rax+rax*1+0x0],ch
   14002ffe7:	add    BYTE PTR [rax+rax*1+0x75],ah
   14002ffeb:	add    BYTE PTR [rax+rax*1+0x63],dh
   14002ffef:	add    BYTE PTR [rax+0x0],ch
   14002fff2:	sub    eax,0x65006200
   14002fff7:	add    BYTE PTR [rax+rax*1+0x67],ch
   14002fffb:	add    BYTE PTR [rcx+0x0],ch
   14002fffe:	(bad)  
   14002ffff:	add    BYTE PTR [rsi+0x0],ch
   140030002:	add    BYTE PTR [rax],al
   140030004:	add    BYTE PTR [rax],al
   140030006:	add    BYTE PTR [rax],al
   140030008:	add    BYTE PTR gs:[rsi+0x0],ch
   14003000c:	add    BYTE PTR [eax+eax*1+0x69],ch
   140030011:	add    BYTE PTR [rbx+0x0],dh
   140030014:	push   0x61002d00
   140030019:	add    BYTE PTR [rbp+0x0],ch
   14003001c:	add    BYTE PTR gs:[rdx+0x0],dh
   140030020:	imul   eax,DWORD PTR [rax],0x610063
   140030026:	outs   dx,BYTE PTR ds:[rsi]
	...
   14003002f:	add    BYTE PTR [rbp+0x0],ah
   140030032:	outs   dx,BYTE PTR ds:[rsi]
   140030033:	add    BYTE PTR [rdi+0x0],ah
   140030036:	ins    BYTE PTR es:[rdi],dx
   140030037:	add    BYTE PTR [rcx+0x0],ch
   14003003a:	jae    0x14003003c
   14003003c:	push   0x61002d00
   140030041:	add    BYTE PTR [rbp+0x0],dh
   140030044:	jae    0x140030046
   140030046:	add    BYTE PTR [rax],al
   140030048:	add    BYTE PTR gs:[rsi+0x0],ch
   14003004c:	add    BYTE PTR [eax+eax*1+0x69],ch
   140030051:	add    BYTE PTR [rbx+0x0],dh
   140030054:	push   0x62002d00
   140030059:	add    BYTE PTR [rbp+0x0],ah
   14003005c:	ins    BYTE PTR es:[rdi],dx
   14003005d:	add    BYTE PTR [rcx+0x0],ch
   140030060:	jp     0x140030062
   140030062:	add    BYTE PTR gs:[rax],al
   140030065:	add    BYTE PTR [rax],al
   140030067:	add    BYTE PTR [rbp+0x0],ah
   14003006a:	outs   dx,BYTE PTR ds:[rsi]
   14003006b:	add    BYTE PTR [rdi+0x0],ah
   14003006e:	ins    BYTE PTR es:[rdi],dx
   14003006f:	add    BYTE PTR [rcx+0x0],ch
   140030072:	jae    0x140030074
   140030074:	push   0x63002d00
   140030079:	add    BYTE PTR [rcx+0x0],ah
   14003007c:	outs   dx,BYTE PTR ds:[rsi]
   14003007d:	add    BYTE PTR [rax],al
   14003007f:	add    BYTE PTR [rbp+0x0],ah
   140030082:	outs   dx,BYTE PTR ds:[rsi]
   140030083:	add    BYTE PTR [rdi+0x0],ah
   140030086:	ins    BYTE PTR es:[rdi],dx
   140030087:	add    BYTE PTR [rcx+0x0],ch
   14003008a:	jae    0x14003008c
   14003008c:	push   0x63002d00
   140030091:	add    BYTE PTR [rcx+0x0],ah
   140030094:	jb     0x140030096
   140030096:	imul   eax,DWORD PTR [rax],0x620062
   14003009c:	add    BYTE PTR gs:[rcx+0x0],ah
   1400300a0:	outs   dx,BYTE PTR ds:[rsi]
   1400300a1:	add    BYTE PTR [rax],al
   1400300a3:	add    BYTE PTR [rax],al
   1400300a5:	add    BYTE PTR [rax],al
   1400300a7:	add    BYTE PTR [rbp+0x0],ah
   1400300aa:	outs   dx,BYTE PTR ds:[rsi]
   1400300ab:	add    BYTE PTR [rdi+0x0],ah
   1400300ae:	ins    BYTE PTR es:[rdi],dx
   1400300af:	add    BYTE PTR [rcx+0x0],ch
   1400300b2:	jae    0x1400300b4
   1400300b4:	push   0x69002d00
   1400300b9:	add    BYTE PTR [rdx+0x0],dh
   1400300bc:	add    BYTE PTR gs:[rax],al
   1400300bf:	add    BYTE PTR [rbp+0x0],ah
   1400300c2:	outs   dx,BYTE PTR ds:[rsi]
   1400300c3:	add    BYTE PTR [rdi+0x0],ah
   1400300c6:	ins    BYTE PTR es:[rdi],dx
   1400300c7:	add    BYTE PTR [rcx+0x0],ch
   1400300ca:	jae    0x1400300cc
   1400300cc:	push   0x6a002d00
   1400300d1:	add    BYTE PTR [rcx+0x0],ah
   1400300d4:	ins    DWORD PTR es:[rdi],dx
   1400300d5:	add    BYTE PTR [rcx+0x0],ah
   1400300d8:	imul   eax,DWORD PTR [rax],0x610063
   1400300de:	add    BYTE PTR [rax],al
   1400300e0:	add    BYTE PTR gs:[rsi+0x0],ch
   1400300e4:	add    BYTE PTR [eax+eax*1+0x69],ch
   1400300e9:	add    BYTE PTR [rbx+0x0],dh
   1400300ec:	push   0x6e002d00
   1400300f1:	add    BYTE PTR [rdx+0x0],bh
   1400300f4:	add    BYTE PTR [rax],al
   1400300f6:	add    BYTE PTR [rax],al
   1400300f8:	add    BYTE PTR gs:[rsi+0x0],ch
   1400300fc:	add    BYTE PTR [eax+eax*1+0x69],ch
   140030101:	add    BYTE PTR [rbx+0x0],dh
   140030104:	push   0x73002d00
   140030109:	add    BYTE PTR [rdi+0x0],ch
   14003010c:	jne    0x14003010e
   14003010e:	je     0x140030110
   140030110:	push   0x61002000
   140030115:	add    BYTE PTR [rsi+0x0],ah
   140030118:	jb     0x14003011a
   14003011a:	imul   eax,DWORD PTR [rax],0x610063
	...
   140030128:	add    BYTE PTR gs:[rsi+0x0],ch
   14003012c:	add    BYTE PTR [eax+eax*1+0x69],ch
   140030131:	add    BYTE PTR [rbx+0x0],dh
   140030134:	push   0x74002d00
   140030139:	add    BYTE PTR [rdx+0x0],dh
   14003013c:	imul   eax,DWORD PTR [rax],0x69006e
   140030142:	add    BYTE PTR fs:[rcx+0x0],ah
   140030146:	add    BYTE PTR fs:[rax],ah
   140030149:	add    BYTE PTR [rcx+0x0],bh
   14003014c:	and    BYTE PTR [rax],al
   14003014e:	je     0x140030150
   140030150:	outs   dx,DWORD PTR ds:[rsi]
   140030151:	add    BYTE PTR [rdx+0x0],ah
   140030154:	(bad)  
   140030155:	add    BYTE PTR [rdi+0x0],ah
   140030158:	outs   dx,DWORD PTR ds:[rsi]
   140030159:	add    BYTE PTR [rax],al
   14003015b:	add    BYTE PTR [rax],al
   14003015d:	add    BYTE PTR [rax],al
   14003015f:	add    BYTE PTR [rbp+0x0],ah
   140030162:	outs   dx,BYTE PTR ds:[rsi]
   140030163:	add    BYTE PTR [rdi+0x0],ah
   140030166:	ins    BYTE PTR es:[rdi],dx
   140030167:	add    BYTE PTR [rcx+0x0],ch
   14003016a:	jae    0x14003016c
   14003016c:	push   0x75002d00
   140030171:	add    BYTE PTR [rbx+0x0],ch
   140030174:	add    BYTE PTR [rax],al
   140030176:	add    BYTE PTR [rax],al
   140030178:	add    BYTE PTR gs:[rsi+0x0],ch
   14003017c:	add    BYTE PTR [eax+eax*1+0x69],ch
   140030181:	add    BYTE PTR [rbx+0x0],dh
   140030184:	push   0x75002d00
   140030189:	add    BYTE PTR [rbx+0x0],dh
   14003018c:	add    BYTE PTR [rax],al
   14003018e:	add    BYTE PTR [rax],al
   140030190:	add    BYTE PTR gs:[rsi+0x0],ch
   140030194:	add    BYTE PTR [eax+eax*1+0x69],ch
   140030199:	add    BYTE PTR [rbx+0x0],dh
   14003019c:	push   0x75002d00
   1400301a1:	add    BYTE PTR [rbx+0x0],dh
   1400301a4:	(bad)  
   1400301a5:	add    BYTE PTR [rax],al
   1400301a7:	add    BYTE PTR [rsi+0x0],ah
   1400301aa:	jb     0x1400301ac
   1400301ac:	add    BYTE PTR gs:[rsi+0x0],ch
   1400301b0:	movsxd eax,DWORD PTR [rax]
   1400301b2:	push   0x62002d00
   1400301b7:	add    BYTE PTR [rbp+0x0],ah
   1400301ba:	ins    BYTE PTR es:[rdi],dx
   1400301bb:	add    BYTE PTR [rdi+0x0],ah
   1400301be:	imul   eax,DWORD PTR [rax],0x6e0061
   1400301c4:	add    BYTE PTR [rax],al
   1400301c6:	add    BYTE PTR [rax],al
   1400301c8:	data16 add BYTE PTR [rdx+0x0],dh
   1400301cc:	add    BYTE PTR gs:[rsi+0x0],ch
   1400301d0:	movsxd eax,DWORD PTR [rax]
   1400301d2:	push   0x63002d00
   1400301d7:	add    BYTE PTR [rcx+0x0],ah
   1400301da:	outs   dx,BYTE PTR ds:[rsi]
   1400301db:	add    BYTE PTR [rcx+0x0],ah
   1400301de:	add    BYTE PTR fs:[rcx+0x0],ch
   1400301e2:	(bad)  
   1400301e3:	add    BYTE PTR [rsi+0x0],ch
   1400301e6:	add    BYTE PTR [rax],al
   1400301e8:	data16 add BYTE PTR [rdx+0x0],dh
   1400301ec:	add    BYTE PTR gs:[rsi+0x0],ch
   1400301f0:	movsxd eax,DWORD PTR [rax]
   1400301f2:	push   0x6c002d00
   1400301f7:	add    BYTE PTR [rbp+0x0],dh
   1400301fa:	js     0x1400301fc
   1400301fc:	add    BYTE PTR gs:[rbp+0x0],ch
   140030200:	(bad)  
   140030201:	add    BYTE PTR [rdi+0x0],ch
   140030204:	jne    0x140030206
   140030206:	jb     0x140030208
   140030208:	add    BYTE PTR [eax],al
   14003020b:	add    BYTE PTR [rax],al
   14003020d:	add    BYTE PTR [rax],al
   14003020f:	add    BYTE PTR [rsi+0x0],ah
   140030212:	jb     0x140030214
   140030214:	add    BYTE PTR gs:[rsi+0x0],ch
   140030218:	movsxd eax,DWORD PTR [rax]
   14003021a:	push   0x73002d00
   14003021f:	add    BYTE PTR [rdi+0x0],dh
   140030222:	imul   eax,DWORD PTR [rax],0x730073
	...
   140030230:	add    BYTE PTR [ebp+0x0],ah
   140030234:	jb     0x140030236
   140030236:	ins    DWORD PTR es:[rdi],dx
   140030237:	add    BYTE PTR [rcx+0x0],ah
   14003023a:	outs   dx,BYTE PTR ds:[rsi]
   14003023b:	add    BYTE PTR [rip+0x75006100],ch        # 0x1b5036341
   140030241:	add    BYTE PTR [rbx+0x0],dh
   140030244:	je     0x140030246
   140030246:	jb     0x140030248
   140030248:	imul   eax,DWORD PTR [rax],0x6e0061
   14003024e:	add    BYTE PTR [rax],al
   140030250:	add    BYTE PTR [ebp+0x0],ah
   140030254:	jb     0x140030256
   140030256:	ins    DWORD PTR es:[rdi],dx
   140030257:	add    BYTE PTR [rcx+0x0],ah
   14003025a:	outs   dx,BYTE PTR ds:[rsi]
   14003025b:	add    BYTE PTR [rip+0x69006c00],ch        # 0x1a9036e61
   140030261:	add    BYTE PTR [rbx+0x0],ah
   140030264:	push   0x65007400
   140030269:	add    BYTE PTR [rsi+0x0],ch
   14003026c:	jae    0x14003026e
   14003026e:	je     0x140030270
   140030270:	add    BYTE PTR gs:[rcx+0x0],ch
   140030274:	outs   dx,BYTE PTR ds:[rsi]
   140030275:	add    BYTE PTR [rax],al
   140030277:	add    BYTE PTR [rdi+0x0],ah
   14003027a:	add    BYTE PTR gs:[rdx+0x0],dh
   14003027e:	ins    DWORD PTR es:[rdi],dx
   14003027f:	add    BYTE PTR [rcx+0x0],ah
   140030282:	outs   dx,BYTE PTR ds:[rsi]
   140030283:	add    BYTE PTR [rip+0x75006c00],ch        # 0x1b5036e89
   140030289:	add    BYTE PTR [rax+0x0],bh
   14003028c:	add    BYTE PTR gs:[rbp+0x0],ch
   140030290:	(bad)  
   140030291:	add    BYTE PTR [rdi+0x0],ch
   140030294:	jne    0x140030296
   140030296:	jb     0x140030298
   140030298:	add    BYTE PTR [eax],al
   14003029b:	add    BYTE PTR [rax],al
   14003029d:	add    BYTE PTR [rax],al
   14003029f:	add    BYTE PTR [rdi+0x0],ah
   1400302a2:	add    BYTE PTR gs:[rdx+0x0],dh
   1400302a6:	ins    DWORD PTR es:[rdi],dx
   1400302a7:	add    BYTE PTR [rcx+0x0],ah
   1400302aa:	outs   dx,BYTE PTR ds:[rsi]
   1400302ab:	add    BYTE PTR [rip+0x77007300],ch        # 0x1b70375b1
   1400302b1:	add    BYTE PTR [rcx+0x0],ch
   1400302b4:	jae    0x1400302b6
   1400302b6:	jae    0x1400302b8
	...
   1400302c0:	imul   eax,DWORD PTR [rax],0x690072
   1400302c6:	jae    0x1400302c8
   1400302c8:	push   0x65002d00
   1400302cd:	add    BYTE PTR [rsi+0x0],ch
   1400302d0:	add    BYTE PTR [eax+eax*1+0x69],ch
   1400302d5:	add    BYTE PTR [rbx+0x0],dh
   1400302d8:	push   0x0
   1400302dd:	add    BYTE PTR [rax],al
   1400302df:	add    BYTE PTR [rcx+0x0],ch
   1400302e2:	je     0x1400302e4
   1400302e4:	(bad)  
   1400302e5:	add    BYTE PTR [rax+rax*1+0x69],ch
   1400302e9:	add    BYTE PTR [rcx+0x0],ah
   1400302ec:	outs   dx,BYTE PTR ds:[rsi]
   1400302ed:	add    BYTE PTR [rip+0x77007300],ch        # 0x1b70375f3
   1400302f3:	add    BYTE PTR [rcx+0x0],ch
   1400302f6:	jae    0x1400302f8
   1400302f8:	jae    0x1400302fa
   1400302fa:	add    BYTE PTR [rax],al
   1400302fc:	add    BYTE PTR [rax],al
   1400302fe:	add    BYTE PTR [rax],al
   140030300:	outs   dx,BYTE PTR ds:[rsi]
   140030301:	add    BYTE PTR [rdi+0x0],ch
   140030304:	jb     0x140030306
   140030306:	ja     0x140030308
   140030308:	add    BYTE PTR gs:[rdi+0x0],ah
   14003030c:	imul   eax,DWORD PTR [rax],0x6e0061
   140030312:	add    BYTE PTR [rax],al
   140030314:	add    BYTE PTR [rax],al
   140030316:	add    BYTE PTR [rax],al
   140030318:	outs   dx,BYTE PTR ds:[rsi]
   140030319:	add    BYTE PTR [rdi+0x0],ch
   14003031c:	jb     0x14003031e
   14003031e:	ja     0x140030320
   140030320:	add    BYTE PTR gs:[rdi+0x0],ah
   140030324:	imul   eax,DWORD PTR [rax],0x6e0061
   14003032a:	sub    eax,0x6f006200
   14003032f:	add    BYTE PTR [rbx+0x0],ch
   140030332:	ins    DWORD PTR es:[rdi],dx
   140030333:	add    BYTE PTR [rcx+0x0],ah
   140030336:	ins    BYTE PTR es:[rdi],dx
	...
   14003033f:	add    BYTE PTR [rsi+0x0],ch
   140030342:	outs   dx,DWORD PTR ds:[rsi]
   140030343:	add    BYTE PTR [rdx+0x0],dh
   140030346:	ja     0x140030348
   140030348:	add    BYTE PTR gs:[rdi+0x0],ah
   14003034c:	imul   eax,DWORD PTR [rax],0x6e0061
   140030352:	sub    eax,0x79006e00
   140030357:	add    BYTE PTR [rsi+0x0],ch
   14003035a:	outs   dx,DWORD PTR ds:[rsi]
   14003035b:	add    BYTE PTR [rdx+0x0],dh
   14003035e:	jae    0x140030360
   140030360:	imul   eax,DWORD PTR [rax],0x0
   140030363:	add    BYTE PTR [rax],al
   140030365:	add    BYTE PTR [rax],al
   140030367:	add    BYTE PTR [rax+0x0],dh
   14003036a:	outs   dx,DWORD PTR ds:[rsi]
   14003036b:	add    BYTE PTR [rdx+0x0],dh
   14003036e:	je     0x140030370
   140030370:	jne    0x140030372
   140030372:	add    BYTE PTR [ebp+0x0],dh
   140030376:	add    BYTE PTR gs:[rbx+0x0],dh
   14003037a:	add    BYTE PTR gs:[rip+0x72006200],ch        # 0x1b2036581
   140030381:	add    BYTE PTR [rcx+0x0],ah
   140030384:	jp     0x140030386
   140030386:	imul   eax,DWORD PTR [rax],0x69006c
   14003038c:	(bad)  
   14003038d:	add    BYTE PTR [rsi+0x0],ch
	...
   140030398:	jae    0x14003039a
   14003039a:	jo     0x14003039c
   14003039c:	(bad)  
   14003039d:	add    BYTE PTR [rsi+0x0],ch
   1400303a0:	imul   eax,DWORD PTR [rax],0x680073
   1400303a6:	sub    eax,0x72006100
   1400303ab:	add    BYTE PTR [rdi+0x0],ah
   1400303ae:	add    BYTE PTR gs:[rsi+0x0],ch
   1400303b2:	je     0x1400303b4
   1400303b4:	imul   eax,DWORD PTR [rax],0x61006e
   1400303ba:	add    BYTE PTR [rax],al
   1400303bc:	add    BYTE PTR [rax],al
   1400303be:	add    BYTE PTR [rax],al
   1400303c0:	jae    0x1400303c2
   1400303c2:	jo     0x1400303c4
   1400303c4:	(bad)  
   1400303c5:	add    BYTE PTR [rsi+0x0],ch
   1400303c8:	imul   eax,DWORD PTR [rax],0x680073
   1400303ce:	sub    eax,0x6f006200
   1400303d3:	add    BYTE PTR [rax+rax*1+0x69],ch
   1400303d7:	add    BYTE PTR [rsi+0x0],dh
   1400303da:	imul   eax,DWORD PTR [rax],0x61
   1400303e0:	jae    0x1400303e2
   1400303e2:	jo     0x1400303e4
   1400303e4:	(bad)  
   1400303e5:	add    BYTE PTR [rsi+0x0],ch
   1400303e8:	imul   eax,DWORD PTR [rax],0x680073
   1400303ee:	sub    eax,0x68006300
   1400303f3:	add    BYTE PTR [rcx+0x0],ch
   1400303f6:	ins    BYTE PTR es:[rdi],dx
   1400303f7:	add    BYTE PTR [rbp+0x0],ah
   1400303fa:	add    BYTE PTR [rax],al
   1400303fc:	add    BYTE PTR [rax],al
   1400303fe:	add    BYTE PTR [rax],al
   140030400:	jae    0x140030402
   140030402:	jo     0x140030404
   140030404:	(bad)  
   140030405:	add    BYTE PTR [rsi+0x0],ch
   140030408:	imul   eax,DWORD PTR [rax],0x680073
   14003040e:	sub    eax,0x6f006300
   140030413:	add    BYTE PTR [rax+rax*1+0x6f],ch
   140030417:	add    BYTE PTR [rbp+0x0],ch
   14003041a:	(bad)  
   14003041b:	add    BYTE PTR [rcx+0x0],ch
   14003041e:	(bad)  
	...
   140030427:	add    BYTE PTR [rbx+0x0],dh
   14003042a:	jo     0x14003042c
   14003042c:	(bad)  
   14003042d:	add    BYTE PTR [rsi+0x0],ch
   140030430:	imul   eax,DWORD PTR [rax],0x680073
   140030436:	sub    eax,0x6f006300
   14003043b:	add    BYTE PTR [rbx+0x0],dh
   14003043e:	je     0x140030440
   140030440:	(bad)  
   140030441:	add    BYTE PTR [rax],ah
   140030443:	add    BYTE PTR [rdx+0x0],dh
   140030446:	imul   eax,DWORD PTR [rax],0x610063
   14003044c:	add    BYTE PTR [rax],al
   14003044e:	add    BYTE PTR [rax],al
   140030450:	jae    0x140030452
   140030452:	jo     0x140030454
   140030454:	(bad)  
   140030455:	add    BYTE PTR [rsi+0x0],ch
   140030458:	imul   eax,DWORD PTR [rax],0x680073
   14003045e:	sub    eax,0x6f006400
   140030463:	add    BYTE PTR [rbp+0x0],ch
   140030466:	imul   eax,DWORD PTR [rax],0x69006e
   14003046c:	movsxd eax,DWORD PTR [rax]
   14003046e:	(bad)  
   14003046f:	add    BYTE PTR [rsi+0x0],ch
   140030472:	and    BYTE PTR [rax],al
   140030474:	jb     0x140030476
   140030476:	add    BYTE PTR gs:[rax+0x0],dh
   14003047a:	jne    0x14003047c
   14003047c:	(bad)  
   14003047d:	add    BYTE PTR [rax+rax*1+0x69],ch
   140030481:	add    BYTE PTR [rbx+0x0],ah
   140030484:	add    BYTE PTR [rax],al
   140030486:	add    BYTE PTR [rax],al
   140030488:	jae    0x14003048a
   14003048a:	jo     0x14003048c
   14003048c:	(bad)  
   14003048d:	add    BYTE PTR [rsi+0x0],ch
   140030490:	imul   eax,DWORD PTR [rax],0x680073
   140030496:	sub    eax,0x63006500
   14003049b:	add    BYTE PTR [rbp+0x0],dh
   14003049e:	(bad)  
   14003049f:	add    BYTE PTR [rax+rax*1+0x6f],ah
   1400304a3:	add    BYTE PTR [rdx+0x0],dh
   1400304a6:	add    BYTE PTR [rax],al
   1400304a8:	jae    0x1400304aa
   1400304aa:	jo     0x1400304ac
   1400304ac:	(bad)  
   1400304ad:	add    BYTE PTR [rsi+0x0],ch
   1400304b0:	imul   eax,DWORD PTR [rax],0x680073
   1400304b6:	sub    eax,0x6c006500
   1400304bb:	add    BYTE PTR [rax],ah
   1400304bd:	add    BYTE PTR [rbx+0x0],dh
   1400304c0:	(bad)  
   1400304c1:	add    BYTE PTR [rax+rax*1+0x76],ch
   1400304c5:	add    BYTE PTR [rcx+0x0],ah
   1400304c8:	add    BYTE PTR fs:[rdi+0x0],ch
   1400304cc:	jb     0x1400304ce
   1400304ce:	add    BYTE PTR [rax],al
   1400304d0:	jae    0x1400304d2
   1400304d2:	jo     0x1400304d4
   1400304d4:	(bad)  
   1400304d5:	add    BYTE PTR [rsi+0x0],ch
   1400304d8:	imul   eax,DWORD PTR [rax],0x680073
   1400304de:	sub    eax,0x75006700
   1400304e3:	add    BYTE PTR [rcx+0x0],ah
   1400304e6:	je     0x1400304e8
   1400304e8:	add    BYTE PTR gs:[rbp+0x0],ch
   1400304ec:	(bad)  
   1400304ed:	add    BYTE PTR [rax+rax*1+0x61],ch
   1400304f1:	add    BYTE PTR [rax],al
   1400304f3:	add    BYTE PTR [rax],al
   1400304f5:	add    BYTE PTR [rax],al
   1400304f7:	add    BYTE PTR [rbx+0x0],dh
   1400304fa:	jo     0x1400304fc
   1400304fc:	(bad)  
   1400304fd:	add    BYTE PTR [rsi+0x0],ch
   140030500:	imul   eax,DWORD PTR [rax],0x680073
   140030506:	sub    eax,0x6f006800
   14003050b:	add    BYTE PTR [rsi+0x0],ch
   14003050e:	add    BYTE PTR fs:[rbp+0x0],dh
   140030512:	jb     0x140030514
   140030514:	(bad)  
   140030515:	add    BYTE PTR [rbx+0x0],dh
	...
   140030520:	jae    0x140030522
   140030522:	jo     0x140030524
   140030524:	(bad)  
   140030525:	add    BYTE PTR [rsi+0x0],ch
   140030528:	imul   eax,DWORD PTR [rax],0x680073
   14003052e:	sub    eax,0x65006d00
   140030533:	add    BYTE PTR [rax+0x0],bh
   140030536:	imul   eax,DWORD PTR [rax],0x610063
   14003053c:	outs   dx,BYTE PTR ds:[rsi]
   14003053d:	add    BYTE PTR [rax],al
   14003053f:	add    BYTE PTR [rbx+0x0],dh
   140030542:	jo     0x140030544
   140030544:	(bad)  
   140030545:	add    BYTE PTR [rsi+0x0],ch
   140030548:	imul   eax,DWORD PTR [rax],0x680073
   14003054e:	sub    eax,0x6f006d00
   140030553:	add    BYTE PTR [rax+rax*1+0x65],ah
   140030557:	add    BYTE PTR [rdx+0x0],dh
   14003055a:	outs   dx,BYTE PTR ds:[rsi]
   14003055b:	add    BYTE PTR [rax],al
   14003055d:	add    BYTE PTR [rax],al
   14003055f:	add    BYTE PTR [rbx+0x0],dh
   140030562:	jo     0x140030564
   140030564:	(bad)  
   140030565:	add    BYTE PTR [rsi+0x0],ch
   140030568:	imul   eax,DWORD PTR [rax],0x680073
   14003056e:	sub    eax,0x69006e00
   140030573:	add    BYTE PTR [rbx+0x0],ah
   140030576:	(bad)  
   140030577:	add    BYTE PTR [rdx+0x0],dh
   14003057a:	(bad)  
   14003057b:	add    BYTE PTR [rdi+0x0],ah
   14003057e:	jne    0x140030580
   140030580:	(bad)  
   140030581:	add    BYTE PTR [rax],al
   140030583:	add    BYTE PTR [rax],al
   140030585:	add    BYTE PTR [rax],al
   140030587:	add    BYTE PTR [rbx+0x0],dh
   14003058a:	jo     0x14003058c
   14003058c:	(bad)  
   14003058d:	add    BYTE PTR [rsi+0x0],ch
   140030590:	imul   eax,DWORD PTR [rax],0x680073
   140030596:	sub    eax,0x61007000
   14003059b:	add    BYTE PTR [rsi+0x0],ch
   14003059e:	(bad)  
   14003059f:	add    BYTE PTR [rbp+0x0],ch
   1400305a2:	(bad)  
   1400305a3:	add    BYTE PTR [rax],al
   1400305a5:	add    BYTE PTR [rax],al
   1400305a7:	add    BYTE PTR [rbx+0x0],dh
   1400305aa:	jo     0x1400305ac
   1400305ac:	(bad)  
   1400305ad:	add    BYTE PTR [rsi+0x0],ch
   1400305b0:	imul   eax,DWORD PTR [rax],0x680073
   1400305b6:	sub    eax,0x61007000
   1400305bb:	add    BYTE PTR [rdx+0x0],dh
   1400305be:	(bad)  
   1400305bf:	add    BYTE PTR [rdi+0x0],ah
   1400305c2:	jne    0x1400305c4
   1400305c4:	(bad)  
   1400305c5:	add    BYTE PTR [rcx+0x0],bh
	...
   1400305d0:	jae    0x1400305d2
   1400305d2:	jo     0x1400305d4
   1400305d4:	(bad)  
   1400305d5:	add    BYTE PTR [rsi+0x0],ch
   1400305d8:	imul   eax,DWORD PTR [rax],0x680073
   1400305de:	sub    eax,0x65007000
   1400305e3:	add    BYTE PTR [rdx+0x0],dh
   1400305e6:	jne    0x1400305e8
	...
   1400305f0:	jae    0x1400305f2
   1400305f2:	jo     0x1400305f4
   1400305f4:	(bad)  
   1400305f5:	add    BYTE PTR [rsi+0x0],ch
   1400305f8:	imul   eax,DWORD PTR [rax],0x680073
   1400305fe:	sub    eax,0x75007000
   140030603:	add    BYTE PTR [rbp+0x0],ah
   140030606:	jb     0x140030608
   140030608:	je     0x14003060a
   14003060a:	outs   dx,DWORD PTR ds:[rsi]
   14003060b:	add    BYTE PTR [rax],ah
   14003060d:	add    BYTE PTR [rdx+0x0],dh
   140030610:	imul   eax,DWORD PTR [rax],0x6f0063
   140030616:	add    BYTE PTR [rax],al
   140030618:	jae    0x14003061a
   14003061a:	jo     0x14003061c
   14003061c:	(bad)  
   14003061d:	add    BYTE PTR [rsi+0x0],ch
   140030620:	imul   eax,DWORD PTR [rax],0x680073
   140030626:	sub    eax,0x72007500
   14003062b:	add    BYTE PTR [rbp+0x0],dh
   14003062e:	add    BYTE PTR [ebp+0x0],dh
   140030632:	(bad)  
   140030633:	add    BYTE PTR [rcx+0x0],bh
   140030636:	add    BYTE PTR [rax],al
   140030638:	jae    0x14003063a
   14003063a:	jo     0x14003063c
   14003063c:	(bad)  
   14003063d:	add    BYTE PTR [rsi+0x0],ch
   140030640:	imul   eax,DWORD PTR [rax],0x680073
   140030646:	sub    eax,0x65007600
   14003064b:	add    BYTE PTR [rsi+0x0],ch
   14003064e:	add    BYTE PTR gs:[rdx+0x0],bh
   140030652:	jne    0x140030654
   140030654:	add    BYTE PTR gs:[rax+rax*1+0x61],ch
   140030659:	add    BYTE PTR [rax],al
   14003065b:	add    BYTE PTR [rax],al
   14003065d:	add    BYTE PTR [rax],al
   14003065f:	add    BYTE PTR [rbx+0x0],dh
   140030662:	ja     0x140030664
   140030664:	add    BYTE PTR gs:[rax+rax*1+0x69],ah
   140030669:	add    BYTE PTR [rbx+0x0],dh
   14003066c:	push   0x66002d00
   140030671:	add    BYTE PTR [rcx+0x0],ch
   140030674:	outs   dx,BYTE PTR ds:[rsi]
   140030675:	add    BYTE PTR [rax+rax*1+0x61],ch
   140030679:	add    BYTE PTR [rsi+0x0],ch
   14003067c:	add    BYTE PTR fs:[rax],al
   14003067f:	add    BYTE PTR [rbx+0x0],dh
   140030682:	ja     0x140030684
   140030684:	imul   eax,DWORD PTR [rax],0x730073
   14003068a:	add    BYTE PTR [rax],al
   14003068c:	jne    0x14003068e
   14003068e:	jae    0x140030690
	...
   140030698:	jne    0x14003069a
   14003069a:	jae    0x14003069c
   14003069c:	(bad)  
   14003069d:	add    BYTE PTR [rax],al
   14003069f:	add    BYTE PTR [rax],dl
   1400306a1:	or     BYTE PTR [rbx],al
   1400306a3:	rex add DWORD PTR [rax],eax
   1400306a6:	add    BYTE PTR [rax],al
   1400306a8:	push   rbp
   1400306a9:	add    BYTE PTR [rbx+0x0],dl
   1400306ac:	add    BYTE PTR [r8],al
   1400306af:	add    BYTE PTR [rax],ah
   1400306b1:	or     BYTE PTR [rbx],al
   1400306b3:	rex add DWORD PTR [rax],eax
   1400306b6:	add    BYTE PTR [rax],al
   1400306b8:	rex.RXB add BYTE PTR [r10+0x0],r8b
   1400306bc:	push   rdx
   1400306bd:	add    BYTE PTR [rax],al
   1400306bf:	add    BYTE PTR [rax],dh
   1400306c1:	or     BYTE PTR [rbx],al
   1400306c3:	rex add DWORD PTR [rax],eax
   1400306c6:	add    BYTE PTR [rax],al
   1400306c8:	rex.XB add BYTE PTR [r8+0x0],cl
   1400306cc:	rex.WRX add BYTE PTR [rax],r8b
   1400306cf:	add    BYTE PTR [rax+0x8],al
   1400306d2:	add    eax,DWORD PTR [rax+0x1]
   1400306d5:	add    BYTE PTR [rax],al
   1400306d7:	add    BYTE PTR [rbx+0x0],al
   1400306da:	pop    rdx
   1400306db:	add    BYTE PTR [rbp+0x0],al
   1400306de:	add    BYTE PTR [rax],al
   1400306e0:	push   rax
   1400306e1:	or     BYTE PTR [rbx],al
   1400306e3:	rex add DWORD PTR [rax],eax
   1400306e6:	add    BYTE PTR [rax],al
   1400306e8:	rex.RXB add BYTE PTR [r10+0x0],r8b
   1400306ec:	push   rdx
   1400306ed:	add    BYTE PTR [rax],al
   1400306ef:	add    BYTE PTR [rax+0x8],ah
   1400306f2:	add    eax,DWORD PTR [rax+0x1]
   1400306f5:	add    BYTE PTR [rax],al
   1400306f7:	add    BYTE PTR [rdi+0x0],al
   1400306fa:	rex.X add BYTE PTR [rdx+0x0],dl
   1400306fe:	add    BYTE PTR [rax],al
   140030700:	or     BYTE PTR [rax],0x3
   140030703:	rex add DWORD PTR [rax],eax
   140030706:	add    BYTE PTR [rax],al
   140030708:	rex.WRX add BYTE PTR [rax+r8*1+0x44],r9b
   14003070d:	add    BYTE PTR [rax],al
   14003070f:	add    BYTE PTR [rax+0x1400308],dl
   140030715:	add    BYTE PTR [rax],al
   140030717:	add    BYTE PTR [rax+0x0],cl
   14003071a:	rex.WXB add BYTE PTR [r15+0x0],al
   14003071e:	add    BYTE PTR [rax],al
   140030720:	test   al,0x8
   140030722:	add    eax,DWORD PTR [rax+0x1]
   140030725:	add    BYTE PTR [rax],al
   140030727:	add    BYTE PTR [rsi+0x0],cl
   14003072a:	pop    rdx
   14003072b:	add    BYTE PTR [rax+rax*1+0x0],cl
   14003072f:	add    al,al
   140030731:	or     BYTE PTR [rbx],al
   140030733:	rex add DWORD PTR [rax],eax
   140030736:	add    BYTE PTR [rax],al
   140030738:	rex.WRX add BYTE PTR [rdx+0x0],r11b
   14003073c:	rex.WR add BYTE PTR [rax],r8b
   14003073f:	add    al,cl
   140030741:	or     BYTE PTR [rbx],al
   140030743:	rex add DWORD PTR [rax],eax
   140030746:	add    BYTE PTR [rax],al
   140030748:	rex.XB add BYTE PTR [r8+0x0],cl
   14003074c:	rex.WRX add BYTE PTR [rax],r8b
   14003074f:	add    al,ah
   140030751:	or     BYTE PTR [rbx],al
   140030753:	rex add DWORD PTR [rax],eax
   140030756:	add    BYTE PTR [rax],al
   140030758:	rex.XB add BYTE PTR [r8+0x0],cl
   14003075c:	rex.WRX add BYTE PTR [rax],r8b
   14003075f:	add    al,bh
   140030761:	or     BYTE PTR [rbx],al
   140030763:	rex add DWORD PTR [rax],eax
   140030766:	add    BYTE PTR [rax],al
   140030768:	push   rax
   140030769:	add    BYTE PTR [rdx+0x0],dl
   14003076c:	rex.WB add BYTE PTR [r8],al
   14003076f:	add    BYTE PTR [rax],dl
   140030771:	or     DWORD PTR [rbx],eax
   140030773:	rex add DWORD PTR [rax],eax
   140030776:	add    BYTE PTR [rax],al
   140030778:	push   rbx
   140030779:	add    BYTE PTR [rsi+0x0],dl
   14003077c:	rex.WXB add BYTE PTR [r8],al
   14003077f:	add    BYTE PTR [rax],ah
   140030781:	or     DWORD PTR [rbx],eax
   140030783:	rex add DWORD PTR [rax],eax
   140030786:	add    BYTE PTR [rax],al
   140030788:	pop    rdx
   140030789:	add    BYTE PTR [rcx+0x0],al
   14003078c:	rex.RX add BYTE PTR [rax],r8b
   14003078f:	add    BYTE PTR [rax+0x9],al
   140030792:	add    eax,DWORD PTR [rax+0x1]
   140030795:	add    BYTE PTR [rax],al
   140030797:	add    BYTE PTR [rbx+0x0],cl
   14003079a:	rex.WRXB add BYTE PTR [r10+0x0],r10b
   14003079e:	add    BYTE PTR [rax],al
   1400307a0:	pop    rax
   1400307a1:	or     DWORD PTR [rbx],eax
   1400307a3:	rex add DWORD PTR [rax],eax
   1400307a6:	add    BYTE PTR [rax],al
   1400307a8:	pop    rdx
   1400307a9:	add    BYTE PTR [rcx+0x0],al
   1400307ac:	rex.RX add BYTE PTR [rax],r8b
   1400307af:	add    BYTE PTR [rax+0x9],bh
   1400307b2:	add    eax,DWORD PTR [rax+0x1]
   1400307b5:	add    BYTE PTR [rax],al
   1400307b7:	add    BYTE PTR [rbx+0x0],cl
   1400307ba:	rex.WRXB add BYTE PTR [r10+0x0],r10b
   1400307be:	add    BYTE PTR [rax],al
   1400307c0:	nop
   1400307c1:	or     DWORD PTR [rbx],eax
   1400307c3:	rex add DWORD PTR [rax],eax
   1400307c6:	add    BYTE PTR [rax],al
   1400307c8:	push   rsp
   1400307c9:	add    BYTE PTR [rax+rax*1+0x4f],dl
   1400307cd:	add    BYTE PTR [rax],al
   1400307cf:	add    al,ch
   1400307d1:	mov    DWORD PTR [rdx],0x140
   1400307d7:	add    BYTE PTR [rdi+0x0],al
   1400307da:	rex.X add BYTE PTR [rdx+0x0],dl
   1400307de:	add    BYTE PTR [rax],al
   1400307e0:	mov    eax,0x1400309
   1400307e5:	add    BYTE PTR [rax],al
   1400307e7:	add    BYTE PTR [rdi+0x0],al
   1400307ea:	rex.X add BYTE PTR [rdx+0x0],dl
   1400307ee:	add    BYTE PTR [rax],al
   1400307f0:	fmul   DWORD PTR [rcx]
   1400307f2:	add    eax,DWORD PTR [rax+0x1]
   1400307f5:	add    BYTE PTR [rax],al
   1400307f7:	add    BYTE PTR [rbp+0x0],dl
   1400307fa:	push   rbx
   1400307fb:	add    BYTE PTR [rcx+0x0],al
   1400307fe:	add    BYTE PTR [rax],al
   140030800:	mov    WORD PTR [rsi],es
   140030802:	add    eax,DWORD PTR [rax+0x1]
   140030805:	add    BYTE PTR [rax],al
   140030807:	add    BYTE PTR [rbp+0x0],dl
   14003080a:	push   rbx
   14003080b:	add    BYTE PTR [rcx+0x0],al
   14003080e:	add    BYTE PTR [rax],al
   140030810:	(bad)  
   140030811:	add    BYTE PTR [rbp+0x0],ch
   140030814:	add    BYTE PTR gs:[rdx+0x0],dh
   140030818:	imul   eax,DWORD PTR [rax],0x610063
   14003081e:	add    BYTE PTR [rax],al
   140030820:	(bad)  
   140030821:	add    BYTE PTR [rdx+0x0],dh
   140030824:	imul   eax,DWORD PTR [rax],0x610074
   14003082a:	imul   eax,DWORD PTR [rax],0x6e
   140030830:	movsxd eax,DWORD PTR [rax]
   140030832:	push   0x6e006900
   140030837:	add    BYTE PTR [rcx+0x0],ah
   14003083a:	add    BYTE PTR [rax],al
   14003083c:	add    BYTE PTR [rax],al
   14003083e:	add    BYTE PTR [rax],al
   140030840:	movsxd eax,DWORD PTR [rax]
   140030842:	jp     0x140030844
   140030844:	add    BYTE PTR gs:[rbx+0x0],ah
   140030848:	push   0x0
   14003084d:	add    BYTE PTR [rax],al
   14003084f:	add    BYTE PTR [rbp+0x0],ah
   140030852:	outs   dx,BYTE PTR ds:[rsi]
   140030853:	add    BYTE PTR [rdi+0x0],ah
   140030856:	ins    BYTE PTR es:[rdi],dx
   140030857:	add    BYTE PTR [rcx+0x0],ah
   14003085a:	outs   dx,BYTE PTR ds:[rsi]
   14003085b:	add    BYTE PTR [rax+rax*1+0x0],ah
   14003085f:	add    BYTE PTR [rdi+0x0],ah
   140030862:	jb     0x140030864
   140030864:	add    BYTE PTR gs:[rcx+0x0],ah
   140030868:	je     0x14003086a
   14003086a:	and    BYTE PTR [rax],al
   14003086c:	(bad)  
   14003086d:	add    BYTE PTR [rdx+0x0],dh
   140030870:	imul   eax,DWORD PTR [rax],0x610074
   140030876:	imul   eax,DWORD PTR [rax],0x6e
   14003087c:	add    BYTE PTR [rax],al
   14003087e:	add    BYTE PTR [rax],al
   140030880:	push   0x6c006f00
   140030885:	add    BYTE PTR [rax+rax*1+0x61],ch
   140030889:	add    BYTE PTR [rsi+0x0],ch
   14003088c:	add    BYTE PTR fs:[rax],al
   14003088f:	add    BYTE PTR [rax+0x0],ch
   140030892:	outs   dx,DWORD PTR ds:[rsi]
   140030893:	add    BYTE PTR [rsi+0x0],ch
   140030896:	add    BYTE PTR [eip+0x6f006b00],ch        # 0x1af03739d
   14003089d:	add    BYTE PTR [rsi+0x0],ch
   1400308a0:	add    BYTE PTR [eax],al
   1400308a3:	add    BYTE PTR [rax],al
   1400308a5:	add    BYTE PTR [rax],al
   1400308a7:	add    BYTE PTR [rsi+0x0],ch
   1400308aa:	add    BYTE PTR gs:[rdi+0x0],dh
   1400308ae:	sub    eax,0x65007a00
   1400308b3:	add    BYTE PTR [rcx+0x0],ah
   1400308b6:	ins    BYTE PTR es:[rdi],dx
   1400308b7:	add    BYTE PTR [rcx+0x0],ah
   1400308ba:	outs   dx,BYTE PTR ds:[rsi]
   1400308bb:	add    BYTE PTR [rax+rax*1+0x0],ah
   1400308bf:	add    BYTE PTR [rsi+0x0],ch
   1400308c2:	jp     0x1400308c4
   1400308c4:	add    BYTE PTR [rax],al
   1400308c6:	add    BYTE PTR [rax],al
   1400308c8:	jo     0x1400308ca
   1400308ca:	jb     0x1400308cc
   1400308cc:	and    BYTE PTR [rax],al
   1400308ce:	movsxd eax,DWORD PTR [rax]
   1400308d0:	push   0x6e006900
   1400308d5:	add    BYTE PTR [rcx+0x0],ah
	...
   1400308e0:	jo     0x1400308e2
   1400308e2:	jb     0x1400308e4
   1400308e4:	sub    eax,0x68006300
   1400308e9:	add    BYTE PTR [rcx+0x0],ch
   1400308ec:	outs   dx,BYTE PTR ds:[rsi]
   1400308ed:	add    BYTE PTR [rcx+0x0],ah
	...
   1400308f8:	jo     0x1400308fa
   1400308fa:	jne    0x1400308fc
   1400308fc:	add    BYTE PTR gs:[rdx+0x0],dh
   140030900:	je     0x140030902
   140030902:	outs   dx,DWORD PTR ds:[rsi]
   140030903:	add    BYTE PTR [rip+0x69007200],ch        # 0x1a9037b09
   140030909:	add    BYTE PTR [rbx+0x0],ah
   14003090c:	outs   dx,DWORD PTR ds:[rsi]
   14003090d:	add    BYTE PTR [rax],al
   14003090f:	add    BYTE PTR [rbx+0x0],dh
   140030912:	ins    BYTE PTR es:[rdi],dx
   140030913:	add    BYTE PTR [rdi+0x0],ch
   140030916:	jbe    0x140030918
   140030918:	(bad)  
   140030919:	add    BYTE PTR [rbx+0x0],ch
   14003091c:	add    BYTE PTR [rax],al
   14003091e:	add    BYTE PTR [rax],al
   140030920:	jae    0x140030922
   140030922:	outs   dx,DWORD PTR ds:[rsi]
   140030923:	add    BYTE PTR [rbp+0x0],dh
   140030926:	je     0x140030928
   140030928:	push   0x61002000
   14003092d:	add    BYTE PTR [rsi+0x0],ah
   140030930:	jb     0x140030932
   140030932:	imul   eax,DWORD PTR [rax],0x610063
	...
   140030940:	jae    0x140030942
   140030942:	outs   dx,DWORD PTR ds:[rsi]
   140030943:	add    BYTE PTR [rbp+0x0],dh
   140030946:	je     0x140030948
   140030948:	push   0x6b002000
   14003094d:	add    BYTE PTR [rdi+0x0],ch
   140030950:	jb     0x140030952
   140030952:	add    BYTE PTR gs:[rcx+0x0],ah
   140030956:	add    BYTE PTR [rax],al
   140030958:	jae    0x14003095a
   14003095a:	outs   dx,DWORD PTR ds:[rsi]
   14003095b:	add    BYTE PTR [rbp+0x0],dh
   14003095e:	je     0x140030960
   140030960:	push   0x61002d00
   140030965:	add    BYTE PTR [rsi+0x0],ah
   140030968:	jb     0x14003096a
   14003096a:	imul   eax,DWORD PTR [rax],0x610063
	...
   140030978:	jae    0x14003097a
   14003097a:	outs   dx,DWORD PTR ds:[rsi]
   14003097b:	add    BYTE PTR [rbp+0x0],dh
   14003097e:	je     0x140030980
   140030980:	push   0x6b002d00
   140030985:	add    BYTE PTR [rdi+0x0],ch
   140030988:	jb     0x14003098a
   14003098a:	add    BYTE PTR gs:[rcx+0x0],ah
   14003098e:	add    BYTE PTR [rax],al
   140030990:	je     0x140030992
   140030992:	jb     0x140030994
   140030994:	imul   eax,DWORD PTR [rax],0x69006e
   14003099a:	add    BYTE PTR fs:[rcx+0x0],ah
   14003099e:	add    BYTE PTR fs:[rax],ah
   1400309a1:	add    BYTE PTR [rsi],ah
   1400309a3:	add    BYTE PTR [rax],ah
   1400309a5:	add    BYTE PTR [rax+rax*1+0x6f],dh
   1400309a9:	add    BYTE PTR [rdx+0x0],ah
   1400309ac:	(bad)  
   1400309ad:	add    BYTE PTR [rdi+0x0],ah
   1400309b0:	outs   dx,DWORD PTR ds:[rsi]
   1400309b1:	add    BYTE PTR [rax],al
   1400309b3:	add    BYTE PTR [rax],al
   1400309b5:	add    BYTE PTR [rax],al
   1400309b7:	add    BYTE PTR [rbp+0x0],dh
   1400309ba:	outs   dx,BYTE PTR ds:[rsi]
   1400309bb:	add    BYTE PTR [rcx+0x0],ch
   1400309be:	je     0x1400309c0
   1400309c0:	add    BYTE PTR gs:[rax+rax*1+0x2d],ah
   1400309c5:	add    BYTE PTR [rbx+0x0],ch
   1400309c8:	imul   eax,DWORD PTR [rax],0x67006e
   1400309ce:	add    BYTE PTR fs:[rdi+0x0],ch
   1400309d2:	ins    DWORD PTR es:[rdi],dx
   1400309d3:	add    BYTE PTR [rax],al
   1400309d5:	add    BYTE PTR [rax],al
   1400309d7:	add    BYTE PTR [rbp+0x0],dh
   1400309da:	outs   dx,BYTE PTR ds:[rsi]
   1400309db:	add    BYTE PTR [rcx+0x0],ch
   1400309de:	je     0x1400309e0
   1400309e0:	add    BYTE PTR gs:[rax+rax*1+0x2d],ah
   1400309e5:	add    BYTE PTR [rbx+0x0],dh
   1400309e8:	je     0x1400309ea
   1400309ea:	(bad)  
   1400309eb:	add    BYTE PTR [rax+rax*1+0x65],dh
   1400309ef:	add    BYTE PTR [rbx+0x0],dh
   1400309f2:	add    BYTE PTR [rax],al
   1400309f4:	add    BYTE PTR [r8],al
   1400309f7:	add    BYTE PTR [rdi],dl
   1400309f9:	add    BYTE PTR [rax],al
   1400309fb:	add    BYTE PTR [rax],al
   1400309fd:	add    BYTE PTR [rax],al
   1400309ff:	add    BYTE PTR [rcx+0x0],al
   140030a02:	rex.XB add BYTE PTR [r8+0x0],dl
   140030a06:	add    BYTE PTR [rax],al
   140030a08:	rex.WRXB add BYTE PTR [r11+0x0],r8b
   140030a0c:	push   rax
   140030a0d:	add    BYTE PTR [rax],al
   140030a0f:	add    BYTE PTR [rsp+rcx*1],cl
   140030a12:	sbb    cl,BYTE PTR [rdi+rax*1]
   140030a15:	adc    BYTE PTR [rsi],dh
   140030a17:	add    al,0xc
   140030a19:	or     BYTE PTR [rip+0xc040304],ch        # 0x14c070d23
   140030a1f:	adc    BYTE PTR [rax],dl
   140030a21:	or     BYTE PTR [rip+0x8],bl        # 0x140030a2f
   140030a27:	add    BYTE PTR [rbx+0x0],al
   140030a2a:	rex.WRXB add BYTE PTR [r14+0x0],r9b
   140030a2e:	rex.WRXB add BYTE PTR [r13+0x0],r10b
   140030a32:	push   rsp
   140030a33:	add    BYTE PTR [rax+rax*1],ah
	...
   140030a3e:	add    BYTE PTR [rax],al
   140030a40:	jo     0x140030a42
	...
   140030a96:	add    BYTE PTR [rax],al
   140030a98:	rex push 0x3
   140030a9b:	rex add DWORD PTR [rax],eax
	...
   140030aae:	add    BYTE PTR [rax],al
   140030ab0:	push   rdx
   140030ab1:	push   rbx
   140030ab2:	rex.R push rbx
   140030ab4:	jns    0x140030ada
   140030ab6:	clc    
   140030ab7:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140030ab8:	ret    0x5756
   140030abb:	rex.R pushf 
   140030abd:	cmc    
   140030abe:	sub    cl,dl
   140030ac0:	addr32 mov dl,0x3e
   140030ac3:	mov    bh,0x3
   140030ac5:	add    BYTE PTR [rax],al
   140030ac7:	add    BYTE PTR [rdx+0x3a],al
   140030aca:	pop    rsp
   140030acb:	ins    DWORD PTR es:[rdi],dx
   140030acc:	(bad)  
   140030acd:	je     0x140030b3b
   140030acf:	(bad)  
   140030ad0:	(bad)  
   140030ad1:	pop    rsp
   140030ad2:	(bad)  
   140030ad3:	imul   ebp,DWORD PTR [rsi+0x5c],0x366e6977
   140030ada:	xor    al,0x5c
   140030adc:	imul   ebp,DWORD PTR [rsi+0x73],0x6c6c6174
   140030ae3:	pop    rdi
   140030ae4:	jae    0x140030b5b
   140030ae6:	jo     0x140030b58
   140030ae8:	outs   dx,DWORD PTR ds:[rsi]
   140030ae9:	jb     0x140030b5f
   140030aeb:	jae    0x140030b5c
   140030aed:	data16 je 0x140030b67
   140030af0:	(bad)  
   140030af1:	jb     0x140030b58
   140030af3:	cs jo  0x140030b5a
   140030af6:	(bad)  
   140030af7:	add    BYTE PTR [rax],al
   140030af9:	add    BYTE PTR [rax],al
   140030afb:	add    BYTE PTR [rsi-0x6c000000],dl
	...
   140030b0d:	add    BYTE PTR [rax],al
   140030b0f:	add    BYTE PTR [rcx],al
	...
   140030b19:	add    BYTE PTR [rax],al
   140030b1b:	add    BYTE PTR [rax+0x38000378],bl
   140030b21:	or     eax,DWORD PTR [rbx]
   140030b23:	add    BYTE PTR [rax],dl
   140030b25:	or     eax,DWORD PTR [rbx]
	...
   140030b3f:	add    BYTE PTR [rcx],al
   140030b41:	add    BYTE PTR [rax],al
   140030b43:	add    BYTE PTR [rax+0xb],dl
   140030b46:	add    eax,DWORD PTR [rax]
	...
   140030b50:	(bad)  
   140030b51:	or     eax,DWORD PTR [rbx]
	...
   140030b5f:	add    BYTE PTR [rax+0x378],bl
   140030b65:	add    BYTE PTR [rax],al
   140030b67:	add    BYTE PTR [rax],al
   140030b69:	add    BYTE PTR [rax],al
   140030b6b:	add    bh,bh
   140030b6d:	(bad)  
   140030b6e:	(bad)  
   140030b6f:	inc    DWORD PTR [rax]
   140030b71:	add    BYTE PTR [rax],al
   140030b73:	add    BYTE PTR [rax+0x0],al
   140030b76:	add    BYTE PTR [rax],al
   140030b78:	cmp    BYTE PTR [rbx],cl
   140030b7a:	add    eax,DWORD PTR [rax]
	...
   140030b88:	add    DWORD PTR [rax],eax
	...
   140030b92:	add    BYTE PTR [rax],al
   140030b94:	enter  0x378,0x0
   140030b98:	mov    al,0xb
   140030b9a:	add    eax,DWORD PTR [rax]
   140030b9c:	mov    BYTE PTR [rbx],cl
   140030b9e:	add    eax,DWORD PTR [rax]
	...
   140030bb8:	add    al,BYTE PTR [rax]
   140030bba:	add    BYTE PTR [rax],al
   140030bbc:	enter  0x30b,0x0
	...
   140030bc8:	loopne 0x140030bd5
   140030bca:	add    eax,DWORD PTR [rax]
   140030bcc:	(bad)  
   140030bcd:	or     eax,DWORD PTR [rbx]
	...
   140030bdf:	add    al,cl
   140030be1:	js     0x140030be6
   140030be3:	add    BYTE PTR [rcx],al
   140030be5:	add    BYTE PTR [rax],al
   140030be7:	add    BYTE PTR [rax],al
   140030be9:	add    BYTE PTR [rax],al
   140030beb:	add    bh,bh
   140030bed:	(bad)  
   140030bee:	(bad)  
   140030bef:	inc    DWORD PTR [rax]
   140030bf1:	add    BYTE PTR [rax],al
   140030bf3:	add    BYTE PTR [rax+0x0],al
   140030bf6:	add    BYTE PTR [rax],al
   140030bf8:	mov    al,0xb
   140030bfa:	add    eax,DWORD PTR [rax]
	...
   140030c08:	add    DWORD PTR [rax],eax
	...
   140030c12:	add    BYTE PTR [rax],al
   140030c14:	add    BYTE PTR [rcx+0x3],bh
   140030c17:	add    BYTE PTR [rax],dh
   140030c19:	or     al,0x3
   140030c1b:	add    BYTE PTR [rax],cl
   140030c1d:	or     al,0x3
	...
   140030c37:	add    BYTE PTR [rbx],al
   140030c39:	add    BYTE PTR [rax],al
   140030c3b:	add    BYTE PTR [rax+0xc],cl
   140030c3e:	add    eax,DWORD PTR [rax]
	...
   140030c48:	push   0xffffffffe000030c
   140030c4d:	or     eax,DWORD PTR [rbx]
   140030c4f:	add    BYTE PTR [rax+0xb],ah
   140030c52:	add    eax,DWORD PTR [rax]
	...
   140030c68:	add    BYTE PTR [rcx+0x3],bh
   140030c6b:	add    BYTE PTR [rdx],al
   140030c6d:	add    BYTE PTR [rax],al
   140030c6f:	add    BYTE PTR [rax],al
   140030c71:	add    BYTE PTR [rax],al
   140030c73:	add    bh,bh
   140030c75:	(bad)  
   140030c76:	(bad)  
   140030c77:	inc    DWORD PTR [rax]
   140030c79:	add    BYTE PTR [rax],al
   140030c7b:	add    BYTE PTR [rax+0x0],al
   140030c7e:	add    BYTE PTR [rax],al
   140030c80:	xor    BYTE PTR [rbx+rax*1],cl
	...
   140030c8f:	add    BYTE PTR [rcx],al
	...
   140030c99:	add    BYTE PTR [rax],al
   140030c9b:	add    BYTE PTR [rax],bh
   140030c9d:	jns    0x140030ca2
   140030c9f:	add    BYTE PTR [rax-0x6ffffcf4],bh
   140030ca5:	or     al,0x3
	...
   140030cbf:	add    BYTE PTR [rbx],al
   140030cc1:	add    BYTE PTR [rax],al
   140030cc3:	add    al,dl
   140030cc5:	or     al,0x3
	...
   140030ccf:	add    al,dh
   140030cd1:	or     al,0x3
   140030cd3:	add    al,ah
   140030cd5:	or     eax,DWORD PTR [rbx]
   140030cd7:	add    BYTE PTR [rax+0xb],ah
   140030cda:	add    eax,DWORD PTR [rax]
	...
   140030cf0:	cmp    BYTE PTR [rcx+0x3],bh
   140030cf3:	add    BYTE PTR [rdx],al
   140030cf5:	add    BYTE PTR [rax],al
   140030cf7:	add    BYTE PTR [rax],al
   140030cf9:	add    BYTE PTR [rax],al
   140030cfb:	add    bh,bh
   140030cfd:	(bad)  
   140030cfe:	(bad)  
   140030cff:	inc    DWORD PTR [rax]
   140030d01:	add    BYTE PTR [rax],al
   140030d03:	add    BYTE PTR [rax+0x0],al
   140030d06:	add    BYTE PTR [rax],al
   140030d08:	mov    eax,0x30c
	...
   140030d15:	add    BYTE PTR [rax],al
   140030d17:	add    BYTE PTR [rax+0x379],bl
   140030d1d:	add    BYTE PTR [rax],al
   140030d1f:	add    BYTE PTR [rax],al
   140030d21:	add    BYTE PTR [rax],al
   140030d23:	add    bh,bh
   140030d25:	(bad)  
   140030d26:	(bad)  
   140030d27:	inc    DWORD PTR [rax]
   140030d29:	add    BYTE PTR [rax],al
   140030d2b:	add    BYTE PTR [rax+0x0],al
   140030d2e:	add    BYTE PTR [rax],al
   140030d30:	rex or eax,0x3
	...
   140030d46:	add    BYTE PTR [rax],al
   140030d48:	add    DWORD PTR [rax],eax
   140030d4a:	add    BYTE PTR [rax],al
   140030d4c:	pop    rax
   140030d4d:	or     eax,0x3
   140030d52:	add    BYTE PTR [rax],al
   140030d54:	add    BYTE PTR [rax],al
   140030d56:	add    BYTE PTR [rax],al
   140030d58:	sbb    BYTE PTR [rip+0x3],cl        # 0x140030d61
	...
   140030d66:	add    BYTE PTR [rax],al
   140030d68:	add    DWORD PTR [rax],eax
	...
   140030d72:	add    BYTE PTR [rax],al
   140030d74:	jo     0x140030def
   140030d76:	add    eax,DWORD PTR [rax]
   140030d78:	nop
   140030d79:	or     eax,0xd680003
   140030d7e:	add    eax,DWORD PTR [rax]
	...
   140030d98:	add    al,BYTE PTR [rax]
   140030d9a:	add    BYTE PTR [rax],al
   140030d9c:	test   al,0xd
   140030d9e:	add    eax,DWORD PTR [rax]
	...
   140030da8:	ror    BYTE PTR [rip+0xd180003],0x3        # 0x14d1b0db2
	...
   140030dbf:	add    BYTE PTR [rax+0x79],dh
   140030dc2:	add    eax,DWORD PTR [rax]
   140030dc4:	add    DWORD PTR [rax],eax
   140030dc6:	add    BYTE PTR [rax],al
   140030dc8:	add    BYTE PTR [rax],al
   140030dca:	add    BYTE PTR [rax],al
   140030dcc:	(bad)  
   140030dcd:	(bad)  
   140030dce:	(bad)  
   140030dcf:	inc    DWORD PTR [rax]
   140030dd1:	add    BYTE PTR [rax],al
   140030dd3:	add    BYTE PTR [rax+0x0],al
   140030dd6:	add    BYTE PTR [rax],al
   140030dd8:	nop
   140030dd9:	or     eax,0x3
	...
   140030de6:	add    BYTE PTR [rax],al
   140030de8:	add    DWORD PTR [rax],eax
	...
   140030df2:	add    BYTE PTR [rax],al
   140030df4:	lock jns 0x140030dfa
   140030df7:	add    BYTE PTR [rax],dl
   140030df9:	(bad)  
   140030dfa:	add    eax,DWORD PTR [rax]
   140030dfc:	call   0x14003110e
	...
   140030e15:	add    BYTE PTR [rax],al
   140030e17:	add    BYTE PTR [rdx],al
   140030e19:	add    BYTE PTR [rax],al
   140030e1b:	add    BYTE PTR [rax],ch
   140030e1d:	(bad)  
   140030e1e:	add    eax,DWORD PTR [rax]
	...
   140030e28:	rex (bad) 
   140030e2a:	add    eax,DWORD PTR [rax]
   140030e2c:	sbb    BYTE PTR [rip+0x3],cl        # 0x140030e35
	...
   140030e3e:	add    BYTE PTR [rax],al
   140030e40:	lock jns 0x140030e46
   140030e43:	add    BYTE PTR [rcx],al
   140030e45:	add    BYTE PTR [rax],al
   140030e47:	add    BYTE PTR [rax],al
   140030e49:	add    BYTE PTR [rax],al
   140030e4b:	add    bh,bh
   140030e4d:	(bad)  
   140030e4e:	(bad)  
   140030e4f:	inc    DWORD PTR [rax]
   140030e51:	add    BYTE PTR [rax],al
   140030e53:	add    BYTE PTR [rax+0x0],al
   140030e56:	add    BYTE PTR [rax],al
   140030e58:	adc    BYTE PTR [rsi],cl
   140030e5a:	add    eax,DWORD PTR [rax]
	...
   140030e68:	add    DWORD PTR [rax],eax
	...
   140030e72:	add    BYTE PTR [rax],al
   140030e74:	sar    BYTE PTR [rcx+0x3],0x0
   140030e78:	nop
   140030e79:	(bad)  
   140030e7a:	add    eax,DWORD PTR [rax]
   140030e7c:	push   0x30e
	...
   140030e95:	add    BYTE PTR [rax],al
   140030e97:	add    BYTE PTR [rbx],al
   140030e99:	add    BYTE PTR [rax],al
   140030e9b:	add    BYTE PTR [rax+0x30e],ch
   140030ea1:	add    BYTE PTR [rax],al
   140030ea3:	add    BYTE PTR [rax],al
   140030ea5:	add    BYTE PTR [rax],al
   140030ea7:	add    al,cl
   140030ea9:	(bad)  
   140030eaa:	add    eax,DWORD PTR [rax]
   140030eac:	rex (bad) 
   140030eae:	add    eax,DWORD PTR [rax]
   140030eb0:	sbb    BYTE PTR [rip+0x3],cl        # 0x140030eb9
	...
   140030ec6:	add    BYTE PTR [rax],al
   140030ec8:	sar    BYTE PTR [rcx+0x3],0x0
   140030ecc:	add    al,BYTE PTR [rax]
   140030ece:	add    BYTE PTR [rax],al
   140030ed0:	add    BYTE PTR [rax],al
   140030ed2:	add    BYTE PTR [rax],al
   140030ed4:	(bad)  
   140030ed5:	(bad)  
   140030ed6:	(bad)  
   140030ed7:	inc    DWORD PTR [rax]
   140030ed9:	add    BYTE PTR [rax],al
   140030edb:	add    BYTE PTR [rax+0x0],al
   140030ede:	add    BYTE PTR [rax],al
   140030ee0:	nop
   140030ee1:	(bad)  
   140030ee2:	add    eax,DWORD PTR [rax]
	...
   140030ef0:	add    DWORD PTR [rax],eax
	...
   140030efa:	add    BYTE PTR [rax],al
   140030efc:	sbb    BYTE PTR [rdx+0x3],bh
   140030eff:	add    BYTE PTR [rax],bl
   140030f01:	lsl    eax,WORD PTR [rax]
   140030f04:	lock (bad) 
   140030f06:	add    eax,DWORD PTR [rax]
	...
   140030f20:	add    eax,DWORD PTR [rax]
   140030f22:	add    BYTE PTR [rax],al
   140030f24:	xor    BYTE PTR [rdi],cl
   140030f26:	add    eax,DWORD PTR [rax]
	...
   140030f30:	push   rax
   140030f31:	lsl    eax,WORD PTR [rax]
   140030f34:	rex (bad) 
   140030f36:	add    eax,DWORD PTR [rax]
   140030f38:	sbb    BYTE PTR [rip+0x3],cl        # 0x140030f41
	...
   140030f4e:	add    BYTE PTR [rax],al
   140030f50:	sbb    BYTE PTR [rdx+0x3],bh
   140030f53:	add    BYTE PTR [rdx],al
   140030f55:	add    BYTE PTR [rax],al
   140030f57:	add    BYTE PTR [rax],al
   140030f59:	add    BYTE PTR [rax],al
   140030f5b:	add    bh,bh
   140030f5d:	(bad)  
   140030f5e:	(bad)  
   140030f5f:	inc    DWORD PTR [rax]
   140030f61:	add    BYTE PTR [rax],al
   140030f63:	add    BYTE PTR [rax+0x0],al
   140030f66:	add    BYTE PTR [rax],al
   140030f68:	sbb    BYTE PTR [rdi],cl
   140030f6a:	add    eax,DWORD PTR [rax]
	...
   140030f78:	add    DWORD PTR [rax],eax
	...
   140030f82:	add    BYTE PTR [rax],al
   140030f84:	rex jp 0x140030f8a
   140030f87:	add    BYTE PTR [rax+0x7800030f],ah
   140030f8d:	lsl    eax,WORD PTR [rax]
	...
   140030fa8:	add    eax,DWORD PTR [rax]
   140030faa:	add    BYTE PTR [rax],al
   140030fac:	mov    eax,0x30f
   140030fb1:	add    BYTE PTR [rax],al
   140030fb3:	add    BYTE PTR [rax],al
   140030fb5:	add    BYTE PTR [rax],al
   140030fb7:	add    al,bl
   140030fb9:	lsl    eax,WORD PTR [rax]
   140030fbc:	rex (bad) 
   140030fbe:	add    eax,DWORD PTR [rax]
   140030fc0:	sbb    BYTE PTR [rip+0x3],cl        # 0x140030fc9
	...
   140030fd6:	add    BYTE PTR [rax],al
   140030fd8:	rex jp 0x140030fde
   140030fdb:	add    BYTE PTR [rdx],al
   140030fdd:	add    BYTE PTR [rax],al
   140030fdf:	add    BYTE PTR [rax],al
   140030fe1:	add    BYTE PTR [rax],al
   140030fe3:	add    bh,bh
   140030fe5:	(bad)  
   140030fe6:	(bad)  
   140030fe7:	inc    DWORD PTR [rax]
   140030fe9:	add    BYTE PTR [rax],al
   140030feb:	add    BYTE PTR [rax+0x0],al
   140030fee:	add    BYTE PTR [rax],al
   140030ff0:	movabs al,ds:0x30f
   140030ff9:	add    BYTE PTR [rax],al
   140030ffb:	add    BYTE PTR [rax],al
   140030ffd:	add    BYTE PTR [rax],al
   140030fff:	add    BYTE PTR [rcx],al
	...
   140031009:	add    BYTE PTR [rax],al
   14003100b:	add    BYTE PTR [rax+0x2800037a],bl
   140031011:	adc    BYTE PTR [rbx],al
   140031013:	add    BYTE PTR [rax],al
   140031015:	adc    BYTE PTR [rbx],al
	...
   14003102f:	add    BYTE PTR [rdx],al
   140031031:	add    BYTE PTR [rax],al
   140031033:	add    BYTE PTR [rax+0x10],al
   140031036:	add    eax,DWORD PTR [rax]
	...
   140031040:	pop    rax
   140031041:	adc    BYTE PTR [rbx],al
   140031043:	add    BYTE PTR [rax],bl
   140031045:	or     eax,0x3
	...
   140031056:	add    BYTE PTR [rax],al
   140031058:	cwde   
   140031059:	jp     0x14003105e
   14003105b:	add    BYTE PTR [rcx],al
   14003105d:	add    BYTE PTR [rax],al
   14003105f:	add    BYTE PTR [rax],al
   140031061:	add    BYTE PTR [rax],al
   140031063:	add    bh,bh
   140031065:	(bad)  
   140031066:	(bad)  
   140031067:	inc    DWORD PTR [rax]
   140031069:	add    BYTE PTR [rax],al
   14003106b:	add    BYTE PTR [rax+0x0],al
   14003106e:	add    BYTE PTR [rax],al
   140031070:	sub    BYTE PTR [rax],dl
   140031072:	add    eax,DWORD PTR [rax]
	...
   140031080:	add    DWORD PTR [rax],eax
	...
   14003108a:	add    BYTE PTR [rax],al
   14003108c:	push   0xffffffffa800037a
   140031091:	adc    BYTE PTR [rbx],al
   140031093:	add    BYTE PTR [rax+0x310],al
	...
   1400310ad:	add    BYTE PTR [rax],al
   1400310af:	add    BYTE PTR [rbx],al
   1400310b1:	add    BYTE PTR [rax],al
   1400310b3:	add    al,al
   1400310b5:	adc    BYTE PTR [rbx],al
	...
   1400310bf:	add    al,ah
   1400310c1:	adc    BYTE PTR [rbx],al
   1400310c3:	add    BYTE PTR [rax+0x10],bl
   1400310c6:	add    eax,DWORD PTR [rax]
   1400310c8:	sbb    BYTE PTR [rip+0x3],cl        # 0x1400310d1
	...
   1400310de:	add    BYTE PTR [rax],al
   1400310e0:	push   0x200037a
   1400310e5:	add    BYTE PTR [rax],al
   1400310e7:	add    BYTE PTR [rax],al
   1400310e9:	add    BYTE PTR [rax],al
   1400310eb:	add    bh,bh
   1400310ed:	(bad)  
   1400310ee:	(bad)  
   1400310ef:	inc    DWORD PTR [rax]
   1400310f1:	add    BYTE PTR [rax],al
   1400310f3:	add    BYTE PTR [rax+0x0],al
   1400310f6:	add    BYTE PTR [rax],al
   1400310f8:	test   al,0x10
   1400310fa:	add    eax,DWORD PTR [rax]
	...
   140031108:	add    DWORD PTR [rax],eax
	...
   140031112:	add    BYTE PTR [rax],al
   140031114:	sar    BYTE PTR [rdx+0x3],0x0
   140031118:	xor    BYTE PTR [rcx],dl
   14003111a:	add    eax,DWORD PTR [rax]
   14003111c:	or     BYTE PTR [rcx],dl
   14003111e:	add    eax,DWORD PTR [rax]
	...
   140031138:	add    al,BYTE PTR [rax]
   14003113a:	add    BYTE PTR [rax],al
   14003113c:	adc    QWORD PTR [rbx],rax
	...
   140031147:	add    BYTE PTR [rax+0x11],ah
   14003114a:	add    eax,DWORD PTR [rax]
   14003114c:	sbb    BYTE PTR [rip+0x3],cl        # 0x140031155
	...
   14003115e:	add    BYTE PTR [rax],al
   140031160:	sar    BYTE PTR [rdx+0x3],0x0
   140031164:	add    DWORD PTR [rax],eax
   140031166:	add    BYTE PTR [rax],al
   140031168:	add    BYTE PTR [rax],al
   14003116a:	add    BYTE PTR [rax],al
   14003116c:	(bad)  
   14003116d:	(bad)  
   14003116e:	(bad)  
   14003116f:	inc    DWORD PTR [rax]
   140031171:	add    BYTE PTR [rax],al
   140031173:	add    BYTE PTR [rax+0x0],al
   140031176:	add    BYTE PTR [rax],al
   140031178:	xor    BYTE PTR [rcx],dl
   14003117a:	add    eax,DWORD PTR [rax]
	...
   140031188:	add    DWORD PTR [rax],eax
	...
   140031192:	add    BYTE PTR [rax],al
   140031194:	lock jp 0x14003119a
   140031197:	add    BYTE PTR [rax-0x77fffcef],dh
   14003119d:	adc    DWORD PTR [rbx],eax
	...
   1400311b7:	add    BYTE PTR [rbx],al
   1400311b9:	add    BYTE PTR [rax],al
   1400311bb:	add    al,cl
   1400311bd:	adc    DWORD PTR [rbx],eax
	...
   1400311c7:	add    al,ch
   1400311c9:	adc    DWORD PTR [rbx],eax
   1400311cb:	add    BYTE PTR [rax+0x10],bl
   1400311ce:	add    eax,DWORD PTR [rax]
   1400311d0:	sbb    BYTE PTR [rip+0x3],cl        # 0x1400311d9
	...
   1400311e6:	add    BYTE PTR [rax],al
   1400311e8:	lock jp 0x1400311ee
   1400311eb:	add    BYTE PTR [rdx],al
   1400311ed:	add    BYTE PTR [rax],al
   1400311ef:	add    BYTE PTR [rax],al
   1400311f1:	add    BYTE PTR [rax],al
   1400311f3:	add    bh,bh
   1400311f5:	(bad)  
   1400311f6:	(bad)  
   1400311f7:	inc    DWORD PTR [rax]
   1400311f9:	add    BYTE PTR [rax],al
   1400311fb:	add    BYTE PTR [rax+0x0],al
   1400311fe:	add    BYTE PTR [rax],al
   140031200:	mov    al,0x11
   140031202:	add    eax,DWORD PTR [rax]
	...
   140031210:	add    DWORD PTR [rax],eax
	...
   14003121a:	add    BYTE PTR [rax],al
   14003121c:	sbb    BYTE PTR [rbx+0x3],bh
   14003121f:	add    BYTE PTR [rax],bh
   140031221:	adc    al,BYTE PTR [rbx]
   140031223:	add    BYTE PTR [rax],dl
   140031225:	adc    al,BYTE PTR [rbx]
	...
   14003123f:	add    BYTE PTR [rcx],al
   140031241:	add    BYTE PTR [rax],al
   140031243:	add    BYTE PTR [rax+0x12],dl
   140031246:	add    eax,DWORD PTR [rax]
	...
   140031250:	(bad)  
   140031251:	adc    al,BYTE PTR [rbx]
	...
   14003125f:	add    BYTE PTR [rax],bl
   140031261:	jnp    0x140031266
	...
   14003126b:	add    bh,bh
   14003126d:	(bad)  
   14003126e:	(bad)  
   14003126f:	inc    DWORD PTR [rax]
   140031271:	add    BYTE PTR [rax],al
   140031273:	add    BYTE PTR [rax+0x0],al
   140031276:	add    BYTE PTR [rax],al
   140031278:	cmp    BYTE PTR [rdx],dl
   14003127a:	add    eax,DWORD PTR [rax]
	...
   140031288:	add    DWORD PTR [rax],eax
	...
   140031292:	add    BYTE PTR [rax],al
   140031294:	cwde   
   140031295:	jns    0x14003129a
   140031297:	add    BYTE PTR [rax+0xd],al
   14003129a:	add    eax,DWORD PTR [rax]
   14003129c:	mov    BYTE PTR [rdx],dl
   14003129e:	add    eax,DWORD PTR [rax]
	...
   1400312b0:	add    DWORD PTR [rax],eax
	...
   1400312ba:	add    BYTE PTR [rax],al
   1400312bc:	cmp    BYTE PTR [rbx+0x3],bh
   1400312bf:	add    al,bl
   1400312c1:	adc    al,BYTE PTR [rbx]
   1400312c3:	add    BYTE PTR [rax+0x312],dh
	...
   1400312dd:	add    BYTE PTR [rax],al
   1400312df:	add    BYTE PTR [rdx],al
   1400312e1:	add    BYTE PTR [rax],al
   1400312e3:	add    al,dh
   1400312e5:	adc    al,BYTE PTR [rbx]
	...
   1400312ef:	add    BYTE PTR [rax],cl
   1400312f1:	adc    eax,DWORD PTR [rbx]
   1400312f3:	add    BYTE PTR [rax],bl
   1400312f5:	or     eax,0x3
	...
   140031306:	add    BYTE PTR [rax],al
   140031308:	cmp    BYTE PTR [rbx+0x3],bh
   14003130b:	add    BYTE PTR [rcx],al
   14003130d:	add    BYTE PTR [rax],al
   14003130f:	add    BYTE PTR [rax],al
   140031311:	add    BYTE PTR [rax],al
   140031313:	add    bh,bh
   140031315:	(bad)  
   140031316:	(bad)  
   140031317:	inc    DWORD PTR [rax]
   140031319:	add    BYTE PTR [rax],al
   14003131b:	add    BYTE PTR [rax+0x0],al
   14003131e:	add    BYTE PTR [rax],al
   140031320:	fcom   DWORD PTR [rdx]
   140031322:	add    eax,DWORD PTR [rax]
	...
   140031330:	add    DWORD PTR [rax],eax
	...
   14003133a:	add    BYTE PTR [rax],al
   14003133c:	(bad)  
   14003133d:	jnp    0x140031342
   14003133f:	add    BYTE PTR [rax+0x13],bl
   140031342:	add    eax,DWORD PTR [rax]
   140031344:	xor    BYTE PTR [rbx],dl
   140031346:	add    eax,DWORD PTR [rax]
	...
   140031360:	add    al,BYTE PTR [rax]
   140031362:	add    BYTE PTR [rax],al
   140031364:	jo     0x140031379
   140031366:	add    eax,DWORD PTR [rax]
	...
   140031370:	mov    BYTE PTR [rbx],dl
   140031372:	add    eax,DWORD PTR [rax]
   140031374:	sbb    BYTE PTR [rip+0x3],cl        # 0x14003137d
	...
   140031386:	add    BYTE PTR [rax],al
   140031388:	(bad)  
   140031389:	jnp    0x14003138e
   14003138b:	add    BYTE PTR [rcx],al
   14003138d:	add    BYTE PTR [rax],al
   14003138f:	add    BYTE PTR [rax],al
   140031391:	add    BYTE PTR [rax],al
   140031393:	add    bh,bh
   140031395:	(bad)  
   140031396:	(bad)  
   140031397:	inc    DWORD PTR [rax]
   140031399:	add    BYTE PTR [rax],al
   14003139b:	add    BYTE PTR [rax+0x0],al
   14003139e:	add    BYTE PTR [rax],al
   1400313a0:	pop    rax
   1400313a1:	adc    eax,DWORD PTR [rbx]
	...
   1400313af:	add    BYTE PTR [rcx],al
	...
   1400313b9:	add    BYTE PTR [rax],al
   1400313bb:	add    BYTE PTR [rax-0x27fffc85],cl
   1400313c1:	adc    eax,DWORD PTR [rbx]
   1400313c3:	add    BYTE PTR [rax+0x313],dh
	...
   1400313dd:	add    BYTE PTR [rax],al
   1400313df:	add    BYTE PTR [rbx],al
   1400313e1:	add    BYTE PTR [rax],al
   1400313e3:	add    al,dh
   1400313e5:	adc    eax,DWORD PTR [rbx]
	...
   1400313ef:	add    BYTE PTR [rax],dl
   1400313f1:	adc    al,0x3
   1400313f3:	add    BYTE PTR [rax+0x18000313],cl
   1400313f9:	or     eax,0x3
	...
   14003140e:	add    BYTE PTR [rax],al
   140031410:	mov    BYTE PTR [rbx+0x3],bh
   140031413:	add    BYTE PTR [rdx],al
   140031415:	add    BYTE PTR [rax],al
   140031417:	add    BYTE PTR [rax],al
   140031419:	add    BYTE PTR [rax],al
   14003141b:	add    bh,bh
   14003141d:	(bad)  
   14003141e:	(bad)  
   14003141f:	inc    DWORD PTR [rax]
   140031421:	add    BYTE PTR [rax],al
   140031423:	add    BYTE PTR [rax+0x0],al
   140031426:	add    BYTE PTR [rax],al
   140031428:	fcom   DWORD PTR [rbx]
   14003142a:	add    eax,DWORD PTR [rax]
	...
   140031438:	add    DWORD PTR [rax],eax
	...
   140031442:	add    BYTE PTR [rax],al
   140031444:	mov    eax,0x6000037b
   140031449:	adc    al,0x3
   14003144b:	add    BYTE PTR [rax],bh
   14003144d:	adc    al,0x3
	...
   140031467:	add    BYTE PTR [rdx],al
   140031469:	add    BYTE PTR [rax],al
   14003146b:	add    BYTE PTR [rax+0x14],bh
   14003146e:	add    eax,DWORD PTR [rax]
	...
   140031478:	nop
   140031479:	adc    al,0x3
   14003147b:	add    BYTE PTR [rax],bl
   14003147d:	or     eax,0x3
	...
   14003148e:	add    BYTE PTR [rax],al
   140031490:	mov    eax,0x100037b
   140031495:	add    BYTE PTR [rax],al
   140031497:	add    BYTE PTR [rax],al
   140031499:	add    BYTE PTR [rax],al
   14003149b:	add    bh,bh
   14003149d:	(bad)  
   14003149e:	(bad)  
   14003149f:	inc    DWORD PTR [rax]
   1400314a1:	add    BYTE PTR [rax],al
   1400314a3:	add    BYTE PTR [rax+0x0],al
   1400314a6:	add    BYTE PTR [rax],al
   1400314a8:	(bad)  
   1400314a9:	adc    al,0x3
	...
   1400314b7:	add    BYTE PTR [rcx],al
	...
   1400314c1:	add    BYTE PTR [rax],al
   1400314c3:	add    al,ah
   1400314c5:	jnp    0x1400314ca
   1400314c7:	add    al,ah
   1400314c9:	adc    al,0x3
   1400314cb:	add    BYTE PTR [rax+0x314],bh
	...
   1400314e5:	add    BYTE PTR [rax],al
   1400314e7:	add    BYTE PTR [rcx],al
   1400314e9:	add    BYTE PTR [rax],al
   1400314eb:	add    al,bh
   1400314ed:	adc    al,0x3
	...
   1400314f7:	add    BYTE PTR [rax],cl
   1400314f9:	adc    eax,0x3
	...
   140031506:	add    BYTE PTR [rax],al
   140031508:	loopne 0x140031585
   14003150a:	add    eax,DWORD PTR [rax]
	...
   140031514:	(bad)  
   140031515:	(bad)  
   140031516:	(bad)  
   140031517:	inc    DWORD PTR [rax]
   140031519:	add    BYTE PTR [rax],al
   14003151b:	add    BYTE PTR [rax+0x0],al
   14003151e:	add    BYTE PTR [rax],al
   140031520:	loopne 0x140031536
   140031522:	add    eax,DWORD PTR [rax]
	...
   140031530:	add    DWORD PTR [rax],eax
	...
   14003153a:	add    BYTE PTR [rax],al
   14003153c:	add    BYTE PTR [rbx+rax*1+0x0],bh
   140031540:	pop    rax
   140031541:	adc    eax,0x15300003
   140031546:	add    eax,DWORD PTR [rax]
	...
   140031560:	add    al,BYTE PTR [rax]
   140031562:	add    BYTE PTR [rax],al
   140031564:	jo     0x14003157b
   140031566:	add    eax,DWORD PTR [rax]
	...
   140031570:	mov    BYTE PTR [rip+0x15080003],dl        # 0x1550b1579
   140031576:	add    eax,DWORD PTR [rax]
	...
   140031588:	add    BYTE PTR [rbx+rax*1+0x0],bh
   14003158c:	add    DWORD PTR [rax],eax
   14003158e:	add    BYTE PTR [rax],al
   140031590:	add    BYTE PTR [rax],al
   140031592:	add    BYTE PTR [rax],al
   140031594:	(bad)  
   140031595:	(bad)  
   140031596:	(bad)  
   140031597:	inc    DWORD PTR [rax]
   140031599:	add    BYTE PTR [rax],al
   14003159b:	add    BYTE PTR [rax+0x0],al
   14003159e:	add    BYTE PTR [rax],al
   1400315a0:	pop    rax
   1400315a1:	adc    eax,0x3
	...
   1400315ae:	add    BYTE PTR [rax],al
   1400315b0:	add    DWORD PTR [rax],eax
	...
   1400315ba:	add    BYTE PTR [rax],al
   1400315bc:	and    BYTE PTR [rbx+rax*1+0x0],bh
   1400315c0:	fcom   DWORD PTR [rip+0x15b00003]        # 0x155b315c9
   1400315c6:	add    eax,DWORD PTR [rax]
	...
   1400315e0:	add    al,BYTE PTR [rax]
   1400315e2:	add    BYTE PTR [rax],al
   1400315e4:	lock adc eax,0x3
   1400315ea:	add    BYTE PTR [rax],al
   1400315ec:	add    BYTE PTR [rax],al
   1400315ee:	add    BYTE PTR [rax],al
   1400315f0:	or     BYTE PTR [rsi],dl
   1400315f2:	add    eax,DWORD PTR [rax]
   1400315f4:	or     BYTE PTR [rip+0x3],dl        # 0x1400315fd
	...
   140031606:	add    BYTE PTR [rax],al
   140031608:	and    BYTE PTR [rbx+rax*1+0x0],bh
   14003160c:	add    DWORD PTR [rax],eax
   14003160e:	add    BYTE PTR [rax],al
   140031610:	add    BYTE PTR [rax],al
   140031612:	add    BYTE PTR [rax],al
   140031614:	(bad)  
   140031615:	(bad)  
   140031616:	(bad)  
   140031617:	inc    DWORD PTR [rax]
   140031619:	add    BYTE PTR [rax],al
   14003161b:	add    BYTE PTR [rax+0x0],al
   14003161e:	add    BYTE PTR [rax],al
   140031620:	fcom   DWORD PTR [rip+0x3]        # 0x140031629
	...
   14003162e:	add    BYTE PTR [rax],al
   140031630:	add    DWORD PTR [rax],eax
	...
   14003163a:	add    BYTE PTR [rax],al
   14003163c:	rex jl 0x140031642
   14003163f:	add    BYTE PTR [rax+0x16],bl
   140031642:	add    eax,DWORD PTR [rax]
   140031644:	xor    BYTE PTR [rsi],dl
   140031646:	add    eax,DWORD PTR [rax]
	...
   140031660:	add    al,BYTE PTR [rax]
   140031662:	add    BYTE PTR [rax],al
   140031664:	jo     0x14003167c
   140031666:	add    eax,DWORD PTR [rax]
	...
   140031670:	mov    BYTE PTR [rsi],dl
   140031672:	add    eax,DWORD PTR [rax]
   140031674:	or     BYTE PTR [rip+0x3],dl        # 0x14003167d
	...
   140031686:	add    BYTE PTR [rax],al
   140031688:	rex jl 0x14003168e
   14003168b:	add    BYTE PTR [rcx],al
   14003168d:	add    BYTE PTR [rax],al
   14003168f:	add    BYTE PTR [rax],al
   140031691:	add    BYTE PTR [rax],al
   140031693:	add    bh,bh
   140031695:	(bad)  
   140031696:	(bad)  
   140031697:	inc    DWORD PTR [rax]
   140031699:	add    BYTE PTR [rax],al
   14003169b:	add    BYTE PTR [rax+0x0],al
   14003169e:	add    BYTE PTR [rax],al
   1400316a0:	pop    rax
   1400316a1:	(bad)  
   1400316a2:	add    eax,DWORD PTR [rax]
	...
   1400316b0:	add    DWORD PTR [rax],eax
	...
   1400316ba:	add    BYTE PTR [rax],al
   1400316bc:	push   0xffffffffd800037c
   1400316c1:	(bad)  
   1400316c2:	add    eax,DWORD PTR [rax]
   1400316c4:	mov    al,0x16
   1400316c6:	add    eax,DWORD PTR [rax]
	...
   1400316e0:	add    al,BYTE PTR [rax]
   1400316e2:	add    BYTE PTR [rax],al
   1400316e4:	lock (bad) 
   1400316e6:	add    eax,DWORD PTR [rax]
	...
   1400316f0:	or     BYTE PTR [rdi],dl
   1400316f2:	add    eax,DWORD PTR [rax]
   1400316f4:	or     BYTE PTR [rip+0x3],dl        # 0x1400316fd
	...
   140031706:	add    BYTE PTR [rax],al
   140031708:	push   0x100037c
   14003170d:	add    BYTE PTR [rax],al
   14003170f:	add    BYTE PTR [rax],al
   140031711:	add    BYTE PTR [rax],al
   140031713:	add    bh,bh
   140031715:	(bad)  
   140031716:	(bad)  
   140031717:	inc    DWORD PTR [rax]
   140031719:	add    BYTE PTR [rax],al
   14003171b:	add    BYTE PTR [rax+0x0],al
   14003171e:	add    BYTE PTR [rax],al
   140031720:	fcom   DWORD PTR [rsi]
   140031722:	add    eax,DWORD PTR [rax]
	...
   140031730:	add    DWORD PTR [rax],eax
	...
   14003173a:	add    BYTE PTR [rax],al
   14003173c:	nop
   14003173d:	jl     0x140031742
   14003173f:	add    BYTE PTR [rax+0x17],bl
   140031742:	add    eax,DWORD PTR [rax]
   140031744:	xor    BYTE PTR [rdi],dl
   140031746:	add    eax,DWORD PTR [rax]
	...
   140031760:	add    al,BYTE PTR [rax]
   140031762:	add    BYTE PTR [rax],al
   140031764:	jo     0x14003177d
   140031766:	add    eax,DWORD PTR [rax]
	...
   140031770:	mov    BYTE PTR [rdi],dl
   140031772:	add    eax,DWORD PTR [rax]
   140031774:	or     BYTE PTR [rip+0x3],dl        # 0x14003177d
	...
   140031786:	add    BYTE PTR [rax],al
   140031788:	nop
   140031789:	jl     0x14003178e
   14003178b:	add    BYTE PTR [rcx],al
   14003178d:	add    BYTE PTR [rax],al
   14003178f:	add    BYTE PTR [rax],al
   140031791:	add    BYTE PTR [rax],al
   140031793:	add    bh,bh
   140031795:	(bad)  
   140031796:	(bad)  
   140031797:	inc    DWORD PTR [rax]
   140031799:	add    BYTE PTR [rax],al
   14003179b:	add    BYTE PTR [rax+0x0],al
   14003179e:	add    BYTE PTR [rax],al
   1400317a0:	pop    rax
   1400317a1:	(bad)  
   1400317a2:	add    eax,DWORD PTR [rax]
	...
   1400317d0:	add    DWORD PTR [rcx+rax*1],eax
   1400317d3:	add    BYTE PTR [rdx+rax*2],al
   1400317d6:	add    BYTE PTR [rax],al
   1400317d8:	add    DWORD PTR [rsi],eax
   1400317da:	add    al,BYTE PTR [rax]
   1400317dc:	(bad)  
   1400317dd:	xor    al,BYTE PTR [rdx]
   1400317df:	xor    BYTE PTR [rcx],al
   1400317e1:	add    al,0x1
   1400317e3:	add    BYTE PTR [rdx+rax*1],al
   1400317e6:	add    BYTE PTR [rax],al
   1400317e8:	and    DWORD PTR [rdx+rax*1],eax
   1400317eb:	add    BYTE PTR [rsp+rsi*2],al
   1400317ee:	add    BYTE PTR [rax],al
   1400317f0:	adc    BYTE PTR [rbx+0x0],cl
   1400317f3:	add    BYTE PTR [rbx+rcx*2],bl
   1400317f6:	add    BYTE PTR [rax],al
   1400317f8:	loopne 0x140031811
   1400317fa:	add    eax,DWORD PTR [rax]
   1400317fc:	and    DWORD PTR [rax],eax
   1400317fe:	add    BYTE PTR [rax],al
   140031800:	adc    BYTE PTR [rbx+0x0],cl
   140031803:	add    BYTE PTR [rbx+rcx*2],bl
   140031806:	add    BYTE PTR [rax],al
   140031808:	loopne 0x140031821
   14003180a:	add    eax,DWORD PTR [rax]
   14003180c:	add    DWORD PTR [rsi],eax
   14003180e:	add    al,BYTE PTR [rax]
   140031810:	(bad)  
   140031811:	xor    al,BYTE PTR [rdx]
   140031813:	xor    BYTE PTR [rcx],al
   140031815:	add    al,0x1
   140031817:	add    BYTE PTR [rdx+rax*1],al
   14003181a:	add    BYTE PTR [rax],al
   14003181c:	and    DWORD PTR [rdx+rax*1],eax
   14003181f:	add    BYTE PTR [rsp+rsi*2],al
   140031822:	add    BYTE PTR [rax],al
   140031824:	push   rax
   140031825:	sub    al,0x0
   140031827:	add    BYTE PTR [rsp+rbp*1+0x0],bl
   14003182b:	add    BYTE PTR [rax+rbx*1],dl
   14003182e:	add    eax,DWORD PTR [rax]
   140031830:	and    DWORD PTR [rax],eax
   140031832:	add    BYTE PTR [rax],al
   140031834:	push   rax
   140031835:	sub    al,0x0
   140031837:	add    BYTE PTR [rsp+rbp*1+0x0],bl
   14003183b:	add    BYTE PTR [rax+rbx*1],dl
   14003183e:	add    eax,DWORD PTR [rax]
   140031840:	add    DWORD PTR [rsi],eax
   140031842:	add    al,BYTE PTR [rax]
   140031844:	(bad)  
   140031845:	xor    al,BYTE PTR [rdx]
   140031847:	xor    BYTE PTR [rcx],al
   140031849:	add    al,0x1
   14003184b:	add    BYTE PTR [rdx+rax*2],al
   14003184e:	add    BYTE PTR [rax],al
   140031850:	add    DWORD PTR [rcx+rax*1],eax
   140031853:	add    BYTE PTR [rdx+rax*2],al
   140031856:	add    BYTE PTR [rax],al
   140031858:	add    DWORD PTR [rsi],eax
   14003185a:	add    al,BYTE PTR [rax]
   14003185c:	(bad)  
   14003185d:	xor    al,BYTE PTR [rdx]
   14003185f:	xor    BYTE PTR [rcx],al
   140031861:	(bad)  
   140031862:	add    al,BYTE PTR [rax]
   140031864:	(bad)  
   140031865:	xor    al,BYTE PTR [rdx]
   140031867:	xor    BYTE PTR [rcx],al
   140031869:	adc    al,0x8
   14003186b:	add    BYTE PTR [rsp+riz*2],dl
   14003186e:	or     BYTE PTR [rax],al
   140031870:	adc    al,0x54
   140031872:	(bad)  
   140031873:	add    BYTE PTR [rsp+rsi*1],dl
   140031876:	(bad)  
   140031877:	add    BYTE PTR [rdx+rsi*1],dl
   14003187a:	adc    BYTE PTR [rax+0x1],dh
   14003187d:	clts   
   14003187f:	add    BYTE PTR [rdi],cl
   140031881:	fs (bad) 
   140031883:	add    BYTE PTR [rdi],cl
   140031885:	xor    al,0x6
   140031887:	add    BYTE PTR [rdi],cl
   140031889:	xor    cl,BYTE PTR [rbx]
   14003188b:	jo     0x14003188e
   14003188d:	add    al,0x1
   14003188f:	add    BYTE PTR [rdx+rax*2],al
   140031892:	add    BYTE PTR [rax],al
   140031894:	add    DWORD PTR [rdx],ecx
   140031896:	add    al,0x0
   140031898:	or     dh,BYTE PTR [rsi+rax*1]
   14003189b:	add    BYTE PTR [rdx],cl
   14003189d:	xor    al,BYTE PTR [rsi]
   14003189f:	jo     0x1400318ba
   1400318a1:	and    DWORD PTR [rip+0x14621800],eax        # 0x1546530a7
   1400318a7:	loopne 0x1400318bb
   1400318a9:	jo     0x1400318bc
   1400318ab:	(bad)  
   1400318ac:	adc    BYTE PTR [rax],dh
   1400318ae:	add    BYTE PTR [rax],al
   1400318b0:	mov    ah,0x70
   1400318b2:	add    BYTE PTR [rax],al
   1400318b4:	call   0x13f031b2c
   1400318b9:	(bad)  
   1400318ba:	(bad)  
   1400318bb:	inc    DWORD PTR [rax]
   1400318bd:	add    BYTE PTR [rax],al
   1400318bf:	add    bh,bh
   1400318c1:	(bad)  
   1400318c2:	(bad)  
   1400318c3:	inc    DWORD PTR [rax]
   1400318c5:	add    BYTE PTR [rax],al
   1400318c7:	add    BYTE PTR [rcx],al
   1400318c9:	add    BYTE PTR [rax],al
   1400318cb:	add    BYTE PTR [rax],al
   1400318cd:	add    BYTE PTR [rax],al
   1400318cf:	add    BYTE PTR [rcx],al
	...
   1400318dd:	add    BYTE PTR [rax],al
   1400318df:	add    BYTE PTR [rbx],al
   1400318e1:	add    BYTE PTR [rax],al
   1400318e3:	add    BYTE PTR [rcx],al
   1400318e5:	add    BYTE PTR [rax],al
   1400318e7:	add    BYTE PTR [rax],al
   1400318e9:	sbb    DWORD PTR [rbx],eax
   1400318eb:	add    BYTE PTR [rdx],al
   1400318ed:	add    BYTE PTR [rax],al
   1400318ef:	add    BYTE PTR [rdx],al
   1400318f1:	add    BYTE PTR [rax],al
   1400318f3:	add    BYTE PTR [rbx],al
   1400318f5:	add    BYTE PTR [rax],al
   1400318f7:	add    BYTE PTR [rcx],al
   1400318f9:	add    BYTE PTR [rax],al
   1400318fb:	add    BYTE PTR [rcx+rbx*1],dl
   1400318fe:	add    eax,DWORD PTR [rax]
   140031900:	add    BYTE PTR [rax],al
	...
   14003190b:	add    BYTE PTR [rax+0x61],al
   14003190e:	add    al,BYTE PTR [rax]
   140031910:	cmp    BYTE PTR [rax],al
   140031912:	add    BYTE PTR [rax],al
   140031914:	add    BYTE PTR [rax],al
	...
   14003191f:	add    BYTE PTR [rbx+0x48000261],al
	...
   14003192d:	add    BYTE PTR [rax],al
   14003192f:	add    BYTE PTR [rax-0xffffe5],al
   140031935:	(bad)  
   140031936:	(bad)  
   140031937:	(bad)  
   140031938:	out    dx,al
   140031939:	sbb    eax,DWORD PTR [rax]
   14003193b:	add    BYTE PTR [rax],al
   14003193d:	add    BYTE PTR [rax],al
   14003193f:	add    BYTE PTR [rbx],dl
   140031941:	sbb    al,0x0
   140031943:	add    bh,bh
   140031945:	(bad)  
   140031946:	(bad)  
   140031947:	inc    DWORD PTR [rax+0x61]
   14003194a:	add    al,BYTE PTR [rax]
   14003194c:	add    BYTE PTR [rax],al
   14003194e:	add    BYTE PTR [rax],al
   140031950:	rex.WRB (bad) 
   140031952:	add    al,BYTE PTR [rax]
   140031954:	add    DWORD PTR [rax],eax
   140031956:	add    BYTE PTR [rax],al
   140031958:	push   rbp
   140031959:	(bad)  
   14003195a:	add    al,BYTE PTR [rax]
   14003195c:	add    al,BYTE PTR [rax]
   14003195e:	add    BYTE PTR [rax],al
   140031960:	jne    0x1400319c3
   140031962:	add    al,BYTE PTR [rax]
   140031964:	add    BYTE PTR [rax],al
   140031966:	add    BYTE PTR [rax],al
   140031968:	xchg   ecx,eax
   140031969:	(bad)  
   14003196a:	add    al,BYTE PTR [rax]
   14003196c:	add    eax,DWORD PTR [rax]
   14003196e:	add    BYTE PTR [rax],al
   140031970:	sbb    DWORD PTR [rdx],ecx
   140031972:	add    al,BYTE PTR [rax]
   140031974:	or     dh,BYTE PTR [rdx]
   140031976:	(bad)  
   140031977:	push   rax
   140031978:	mov    ah,0x70
   14003197a:	add    BYTE PTR [rax],al
   14003197c:	call   0x159031bf4
   140031981:	or     eax,DWORD PTR [rbx]
   140031983:	add    BYTE PTR [rbx],cl
   140031985:	rex.X (bad) 
   140031987:	push   rax
   140031988:	(bad)  
   140031989:	xor    BYTE PTR [rax],al
   14003198b:	add    BYTE PTR [rax+rsi*2+0x73e80000],dh
   140031992:	add    al,BYTE PTR [rax]
   140031994:	add    DWORD PTR [rdx],ecx
   140031996:	add    al,0x0
   140031998:	or     dh,BYTE PTR [rcx+rcx*1]
   14003199b:	add    BYTE PTR [rdx],cl
   14003199d:	xor    al,BYTE PTR [rsi]
   14003199f:	jo     0x1400319c2
   1400319a1:	add    eax,0x54050002
   1400319a6:	(bad)  
   1400319a7:	add    BYTE PTR [rax],dl
   1400319a9:	(bad)  
   1400319aa:	add    BYTE PTR [rax],al
   1400319ac:	cs (bad) 
   1400319ae:	add    BYTE PTR [rax],al
   1400319b0:	xchg   esp,eax
   1400319b1:	sbb    DWORD PTR [rbx],eax
   1400319b3:	add    BYTE PTR [rcx],ah
   1400319b5:	add    eax,0x64050002
   1400319ba:	(bad)  
   1400319bb:	add    BYTE PTR [rsi],ch
   1400319bd:	(bad)  
   1400319be:	add    BYTE PTR [rax],al
   1400319c0:	push   rax
   1400319c1:	(bad)  
   1400319c2:	add    BYTE PTR [rax],al
   1400319c4:	movabs al,ds:0x500020521000319
   1400319cd:	in     al,0x8
   1400319cf:	add    BYTE PTR [rax+0x1e],dl
   1400319d2:	add    BYTE PTR [rax],al
   1400319d4:	data16 (bad) 
   1400319d6:	add    BYTE PTR [rax],al
   1400319d8:	mov    ah,0x19
   1400319da:	add    eax,DWORD PTR [rax]
   1400319dc:	and    DWORD PTR [rax],eax
   1400319de:	add    BYTE PTR [rax],al
   1400319e0:	push   rax
   1400319e1:	(bad)  
   1400319e2:	add    BYTE PTR [rax],al
   1400319e4:	data16 (bad) 
   1400319e6:	add    BYTE PTR [rax],al
   1400319e8:	mov    ah,0x19
   1400319ea:	add    eax,DWORD PTR [rax]
   1400319ec:	and    DWORD PTR [rax],eax
   1400319ee:	add    BYTE PTR [rax],al
   1400319f0:	cs (bad) 
   1400319f2:	add    BYTE PTR [rax],al
   1400319f4:	push   rax
   1400319f5:	(bad)  
   1400319f6:	add    BYTE PTR [rax],al
   1400319f8:	movabs al,ds:0x1000000021000319
   140031a01:	(bad)  
   140031a02:	add    BYTE PTR [rax],al
   140031a04:	cs (bad) 
   140031a06:	add    BYTE PTR [rax],al
   140031a08:	xchg   esp,eax
   140031a09:	sbb    DWORD PTR [rbx],eax
   140031a0b:	add    BYTE PTR [rcx],al
   140031a0d:	or     al,BYTE PTR [rax+rax*1]
   140031a10:	or     dh,BYTE PTR [rdi+rax*1]
   140031a13:	add    BYTE PTR [rdx],cl
   140031a15:	xor    al,BYTE PTR [rsi]
   140031a17:	jo     0x140031a3a
   140031a19:	add    eax,0x64050002
   140031a1e:	(bad)  
   140031a1f:	add    BYTE PTR [rax-0x44ffffe0],ah
   140031a25:	and    BYTE PTR [rax],al
   140031a27:	add    BYTE PTR [rdx+rbx*1],cl
   140031a2a:	add    eax,DWORD PTR [rax]
   140031a2c:	and    DWORD PTR [rax],eax
   140031a2e:	add    BYTE PTR [rax],al
   140031a30:	movabs al,ds:0xc000020bb000020
   140031a39:	sbb    al,BYTE PTR [rbx]
   140031a3b:	add    BYTE PTR [rcx],al
   140031a3d:	add    al,0x1
   140031a3f:	add    BYTE PTR [rdx+rax*2],al
   140031a42:	add    BYTE PTR [rax],al
   140031a44:	add    DWORD PTR [rcx+rax*1],eax
   140031a47:	add    BYTE PTR [rdx+rax*2],al
   140031a4a:	add    BYTE PTR [rax],al
   140031a4c:	add    DWORD PTR [rsi],eax
   140031a4e:	add    al,BYTE PTR [rax]
   140031a50:	(bad)  
   140031a51:	push   rdx
   140031a52:	add    dh,BYTE PTR [rax]
   140031a54:	add    DWORD PTR [rsi],eax
   140031a56:	add    al,BYTE PTR [rax]
   140031a58:	(bad)  
   140031a59:	xor    al,BYTE PTR [rdx]
   140031a5b:	xor    BYTE PTR [rcx],al
   140031a5d:	or     al,BYTE PTR [rax+rax*1]
   140031a60:	or     dh,BYTE PTR [rax+rcx*1]
   140031a63:	add    BYTE PTR [rdx],cl
   140031a65:	push   rdx
   140031a66:	(bad)  
   140031a67:	jo     0x140031a6a
   140031a69:	(bad)  
   140031a6a:	add    al,BYTE PTR [rax]
   140031a6c:	(bad)  
   140031a6d:	xor    al,BYTE PTR [rdx]
   140031a6f:	xor    BYTE PTR [rcx],al
   140031a71:	(bad)  
   140031a72:	add    al,BYTE PTR [rax]
   140031a74:	(bad)  
   140031a75:	push   rdx
   140031a76:	add    dh,BYTE PTR [rax]
   140031a78:	add    DWORD PTR [rsi],eax
   140031a7a:	add    al,BYTE PTR [rax]
   140031a7c:	(bad)  
   140031a7d:	xor    al,BYTE PTR [rdx]
   140031a7f:	xor    BYTE PTR [rcx],al
   140031a81:	or     al,BYTE PTR [rax+rax*1]
   140031a84:	or     dh,BYTE PTR [rax+rcx*1]
   140031a87:	add    BYTE PTR [rdx],cl
   140031a89:	push   rdx
   140031a8a:	(bad)  
   140031a8b:	jo     0x140031a8e
   140031a8d:	or     al,BYTE PTR [rax+rax*1]
   140031a90:	or     dh,BYTE PTR [rsi+rax*1]
   140031a93:	add    BYTE PTR [rdx],cl
   140031a95:	xor    al,BYTE PTR [rsi]
   140031a97:	jo     0x140031a9a
   140031a99:	(bad)  
   140031a9a:	add    al,BYTE PTR [rax]
   140031a9c:	(bad)  
   140031a9d:	xor    al,BYTE PTR [rdx]
   140031a9f:	xor    BYTE PTR [rcx],al
   140031aa1:	add    al,0x1
   140031aa3:	add    BYTE PTR [rdx+rax*2],al
   140031aa6:	add    BYTE PTR [rax],al
   140031aa8:	add    DWORD PTR [rcx+rax*1],eax
   140031aab:	add    BYTE PTR [rdx+rax*2],al
   140031aae:	add    BYTE PTR [rax],al
   140031ab0:	add    DWORD PTR [rsi],eax
   140031ab2:	add    al,BYTE PTR [rax]
   140031ab4:	(bad)  
   140031ab5:	xor    al,BYTE PTR [rdx]
   140031ab7:	xor    BYTE PTR [rcx],al
   140031ab9:	(bad)  
   140031aba:	add    al,BYTE PTR [rax]
   140031abc:	(bad)  
   140031abd:	xor    al,BYTE PTR [rdx]
   140031abf:	xor    BYTE PTR [rcx],al
   140031ac1:	(bad)  
   140031ac2:	add    al,BYTE PTR [rax]
   140031ac4:	(bad)  
   140031ac5:	xor    al,BYTE PTR [rdx]
   140031ac7:	xor    BYTE PTR [rcx],al
   140031ac9:	or     al,BYTE PTR [rax+rax*1]
   140031acc:	or     dh,BYTE PTR [rsi+rax*1]
   140031acf:	add    BYTE PTR [rdx],cl
   140031ad1:	xor    al,BYTE PTR [rsi]
   140031ad3:	jo     0x140031ad6
   140031ad5:	clts   
   140031ad7:	add    BYTE PTR [rdi],cl
   140031ad9:	fs (bad) 
   140031adb:	add    BYTE PTR [rdi],cl
   140031add:	xor    al,0x6
   140031adf:	add    BYTE PTR [rdi],cl
   140031ae1:	xor    cl,BYTE PTR [rbx]
   140031ae3:	jo     0x140031ae6
   140031ae5:	(bad)  
   140031ae6:	add    al,BYTE PTR [rax]
   140031ae8:	(bad)  
   140031ae9:	xor    al,BYTE PTR [rdx]
   140031aeb:	xor    BYTE PTR [rcx],al
   140031aed:	adc    eax,0x64150008
   140031af2:	or     DWORD PTR [rax],eax
   140031af4:	adc    eax,0x15000854
   140031af9:	xor    al,0x7
   140031afb:	add    BYTE PTR [rip+0x21e01132],dl        # 0x161e32c33
   140031b01:	add    eax,0x74050002
   140031b06:	(bad)  
   140031b07:	add    al,dl
   140031b09:	and    al,BYTE PTR [rax]
   140031b0b:	add    BYTE PTR [rbx+riz*1],bl
   140031b0e:	add    BYTE PTR [rax],al
   140031b10:	in     al,dx
   140031b11:	sbb    al,BYTE PTR [rbx]
   140031b13:	add    BYTE PTR [rcx],ah
   140031b15:	add    BYTE PTR [rax],al
   140031b17:	add    al,dl
   140031b19:	and    al,BYTE PTR [rax]
   140031b1b:	add    BYTE PTR [rbx+riz*1],bl
   140031b1e:	add    BYTE PTR [rax],al
   140031b20:	in     al,dx
   140031b21:	sbb    al,BYTE PTR [rbx]
   140031b23:	add    BYTE PTR [rcx],ah
   140031b25:	add    BYTE PTR [rdx],al
   140031b27:	add    BYTE PTR [rax],al
   140031b29:	je     0x140031b31
   140031b2b:	add    al,dl
   140031b2d:	and    al,BYTE PTR [rax]
   140031b2f:	add    BYTE PTR [rbx+riz*1],bl
   140031b32:	add    BYTE PTR [rax],al
   140031b34:	in     al,dx
   140031b35:	sbb    al,BYTE PTR [rbx]
   140031b37:	add    BYTE PTR [rcx],al
   140031b39:	adc    BYTE PTR [rsi],al
   140031b3b:	add    BYTE PTR [rax],dl
   140031b3d:	or     BYTE PTR fs:[rax],al
   140031b40:	adc    BYTE PTR [rdi+rax*1],dh
   140031b43:	add    BYTE PTR [rax],dl
   140031b45:	xor    cl,BYTE PTR [rax+riz*8]
   140031b48:	and    DWORD PTR [rip+0x74050002],eax        # 0x1b4081b50
   140031b4e:	(bad)  
   140031b4f:	add    BYTE PTR [rax+0x24],al
   140031b52:	add    BYTE PTR [rax],al
   140031b54:	(bad)  
   140031b55:	and    al,0x0
   140031b57:	add    BYTE PTR [rax],bh
   140031b59:	sbb    eax,DWORD PTR [rbx]
   140031b5b:	add    BYTE PTR [rcx],ah
   140031b5d:	add    BYTE PTR [rax],al
   140031b5f:	add    BYTE PTR [rax+0x24],al
   140031b62:	add    BYTE PTR [rax],al
   140031b64:	(bad)  
   140031b65:	and    al,0x0
   140031b67:	add    BYTE PTR [rax],bh
   140031b69:	sbb    eax,DWORD PTR [rbx]
   140031b6b:	add    BYTE PTR [rcx],ah
   140031b6d:	add    BYTE PTR [rdx],al
   140031b6f:	add    BYTE PTR [rax],al
   140031b71:	je     0x140031b79
   140031b73:	add    BYTE PTR [rax+0x24],al
   140031b76:	add    BYTE PTR [rax],al
   140031b78:	(bad)  
   140031b79:	and    al,0x0
   140031b7b:	add    BYTE PTR [rax],bh
   140031b7d:	sbb    eax,DWORD PTR [rbx]
   140031b7f:	add    BYTE PTR [rcx],al
   140031b81:	adc    BYTE PTR [rsi],al
   140031b83:	add    BYTE PTR [rax],dl
   140031b85:	push   rsp
   140031b86:	or     DWORD PTR [rax],eax
   140031b88:	adc    BYTE PTR [rax+rcx*1],dh
   140031b8b:	add    BYTE PTR [rax],dl
   140031b8d:	xor    cl,BYTE PTR [rax+riz*8]
   140031b90:	and    DWORD PTR [rip+0x64050002],eax        # 0x1a4081b98
   140031b96:	(bad)  
   140031b97:	add    BYTE PTR [rax-0x21ffffdb],dh
   140031b9d:	and    eax,0x1b800000
   140031ba2:	add    eax,DWORD PTR [rax]
   140031ba4:	and    DWORD PTR [rip+0x74050002],eax        # 0x1b4081bac
   140031baa:	(bad)  
   140031bab:	add    dh,bl
   140031bad:	and    eax,0x266b0000
   140031bb2:	add    BYTE PTR [rax],al
   140031bb4:	nop
   140031bb5:	sbb    eax,DWORD PTR [rbx]
   140031bb7:	add    BYTE PTR [rcx],ah
   140031bb9:	add    BYTE PTR [rax],al
   140031bbb:	add    dh,bl
   140031bbd:	and    eax,0x266b0000
   140031bc2:	add    BYTE PTR [rax],al
   140031bc4:	nop
   140031bc5:	sbb    eax,DWORD PTR [rbx]
   140031bc7:	add    BYTE PTR [rcx],ah
   140031bc9:	add    BYTE PTR [rax],al
   140031bcb:	add    BYTE PTR [rax-0x21ffffdb],dh
   140031bd1:	and    eax,0x1b800000
   140031bd6:	add    eax,DWORD PTR [rax]
   140031bd8:	and    DWORD PTR [rax],eax
   140031bda:	add    al,BYTE PTR [rax]
   140031bdc:	add    BYTE PTR [rsi+rax*1+0x0],ah
   140031be0:	mov    al,0x25
   140031be2:	add    BYTE PTR [rax],al
   140031be4:	fisub  WORD PTR [rip+0x1b800000]        # 0x15b831bea
   140031bea:	add    eax,DWORD PTR [rax]
   140031bec:	add    DWORD PTR [rax+rcx*1],edx
   140031bef:	add    BYTE PTR [rsp+riz*2],dl
   140031bf2:	or     BYTE PTR [rax],al
   140031bf4:	adc    al,0x54
   140031bf6:	(bad)  
   140031bf7:	add    BYTE PTR [rsp+rsi*1],dl
   140031bfa:	(bad)  
   140031bfb:	add    BYTE PTR [rdx+rsi*1],dl
   140031bfe:	adc    BYTE PTR [rax+0x1],dh
   140031c01:	clts   
   140031c03:	add    BYTE PTR [rdi],cl
   140031c05:	fs (bad) 
   140031c07:	add    BYTE PTR [rdi],cl
   140031c09:	xor    al,0x6
   140031c0b:	add    BYTE PTR [rdi],cl
   140031c0d:	xor    cl,BYTE PTR [rbx]
   140031c0f:	jo     0x140031c12
   140031c11:	(bad)  
   140031c12:	(bad)  
   140031c13:	add    BYTE PTR [rsi],cl
   140031c15:	xor    al,0xa
   140031c17:	add    BYTE PTR [rsi],cl
   140031c19:	xor    cl,BYTE PTR [rdx]
   140031c1b:	lock or al,ah
   140031c1e:	(bad)  
   140031c1f:	(bad)  
   140031c20:	and    DWORD PTR [rip+0x74050002],eax        # 0x1b4081c28
   140031c26:	or     DWORD PTR [rax],eax
   140031c28:	mov    al,0x39
   140031c2a:	add    BYTE PTR [rax],al
   140031c2c:	out    0x39,eax
   140031c2e:	add    BYTE PTR [rax],al
   140031c30:	adc    BYTE PTR [rbx+rax*1],bl
   140031c33:	add    BYTE PTR [rcx],ah
   140031c35:	add    eax,0x54050002
   140031c3a:	or     BYTE PTR [rax],al
   140031c3c:	out    0x39,eax
   140031c3e:	add    BYTE PTR [rax],al
   140031c40:	adc    DWORD PTR [rdx],edi
   140031c42:	add    BYTE PTR [rax],al
   140031c44:	and    BYTE PTR [rbx+rax*1],bl
   140031c47:	add    BYTE PTR [rcx],ah
   140031c49:	add    BYTE PTR [rax],al
   140031c4b:	add    bh,ah
   140031c4d:	cmp    DWORD PTR [rax],eax
   140031c4f:	add    BYTE PTR [rcx],dl
   140031c51:	cmp    al,BYTE PTR [rax]
   140031c53:	add    BYTE PTR [rax],ah
   140031c55:	sbb    al,0x3
   140031c57:	add    BYTE PTR [rcx],ah
   140031c59:	add    BYTE PTR [rdx],al
   140031c5b:	add    BYTE PTR [rax],al
   140031c5d:	je     0x140031c68
   140031c5f:	add    BYTE PTR [rax-0x18ffffc7],dh
   140031c65:	cmp    DWORD PTR [rax],eax
   140031c67:	add    BYTE PTR [rax],dl
   140031c69:	sbb    al,0x3
   140031c6b:	add    BYTE PTR [rcx],ah
   140031c6d:	add    BYTE PTR [rax],al
   140031c6f:	add    BYTE PTR [rax-0x18ffffc7],dh
   140031c75:	cmp    DWORD PTR [rax],eax
   140031c77:	add    BYTE PTR [rax],dl
   140031c79:	sbb    al,0x3
   140031c7b:	add    BYTE PTR [rcx],al
   140031c7d:	adc    eax,0x74150008
   140031c82:	or     eax,DWORD PTR [rax]
   140031c84:	adc    eax,0x15000a64
   140031c89:	xor    al,0x9
   140031c8b:	add    BYTE PTR [rip+0x21e01152],dl        # 0x161e32de3
   140031c91:	add    eax,0x54050002
   140031c96:	or     BYTE PTR [rax],al
   140031c98:	xor    BYTE PTR [rbx],bh
   140031c9a:	add    BYTE PTR [rax],al
   140031c9c:	(bad)  
   140031c9d:	cmp    eax,DWORD PTR [rax]
   140031c9f:	add    BYTE PTR [rsp+rbx*1+0x3],bh
   140031ca3:	add    BYTE PTR [rcx],ah
   140031ca5:	add    BYTE PTR [rax],al
   140031ca7:	add    BYTE PTR [rax],dh
   140031ca9:	cmp    eax,DWORD PTR [rax]
   140031cab:	add    ch,dl
   140031cad:	cmp    eax,DWORD PTR [rax]
   140031caf:	add    BYTE PTR [rsp+rbx*1+0x3],bh
   140031cb3:	add    BYTE PTR [rcx],al
   140031cb5:	add    al,0x1
   140031cb7:	add    BYTE PTR [rdx+rax*2],al
   140031cba:	add    BYTE PTR [rax],al
   140031cbc:	add    DWORD PTR [rdx],ecx
   140031cbe:	add    al,0x0
   140031cc0:	or     dh,BYTE PTR [rsi+rax*1]
   140031cc3:	add    BYTE PTR [rdx],cl
   140031cc5:	xor    al,BYTE PTR [rsi]
   140031cc7:	jo     0x140031cca
   140031cc9:	or     al,0x6
   140031ccb:	add    BYTE PTR [rdx+rsi*1],cl
   140031cce:	or     al,dh
   140031cd0:	(bad)  
   140031cd1:	rol    BYTE PTR [rax+riz*2],0x3
   140031cd5:	push   rax
   140031cd6:	add    dh,BYTE PTR [rax]
   140031cd8:	and    DWORD PTR [rcx+0x6],eax
   140031cdb:	add    BYTE PTR [rcx-0x2c],al
   140031cde:	or     eax,DWORD PTR [rax]
   140031ce0:	pmulhuw mm1,QWORD PTR [rax+rax*1]
   140031ce4:	add    eax,0x60000a74
   140031ce9:	rex.X add BYTE PTR [rax],al
   140031cec:	xchg   edi,eax
   140031ced:	rex.X add BYTE PTR [rax],al
   140031cf0:	enter  0x31c,0x0
   140031cf4:	and    DWORD PTR [rax],eax
   140031cf6:	add    al,0x0
   140031cf8:	add    ah,ah
   140031cfa:	or     al,0x0
   140031cfc:	add    BYTE PTR [rdx+rcx*1+0x0],dh
   140031d00:	(bad)  
   140031d01:	rex.X add BYTE PTR [rax],al
   140031d04:	xchg   edi,eax
   140031d05:	rex.X add BYTE PTR [rax],al
   140031d08:	enter  0x31c,0x0
   140031d0c:	and    DWORD PTR [rax],eax
   140031d0e:	add    BYTE PTR [rax],al
   140031d10:	(bad)  
   140031d11:	rex.X add BYTE PTR [rax],al
   140031d14:	xchg   edi,eax
   140031d15:	rex.X add BYTE PTR [rax],al
   140031d18:	enter  0x31c,0x0
   140031d1c:	add    DWORD PTR [rip+0x340d0006],ecx        # 0x174101d28
   140031d22:	or     eax,0x9520d00
   140031d27:	rol    BYTE PTR [rdi],0x60
   140031d2a:	(bad)  
   140031d2b:	push   rax
   140031d2c:	and    DWORD PTR [rdx+0x6],edi
   140031d2f:	add    BYTE PTR [rdx+0x74],bh
   140031d32:	or     al,BYTE PTR [rax]
   140031d34:	pmuludq mm1,QWORD PTR [rax+rax*1]
   140031d38:	add    eax,0xe0000be4
   140031d3d:	add    BYTE PTR [r8],r8b
   140031d40:	ja     0x140031d88
   140031d42:	add    BYTE PTR [rax],al
   140031d44:	sbb    al,0x1d
   140031d46:	add    eax,DWORD PTR [rax]
   140031d48:	and    DWORD PTR [rax],eax
   140031d4a:	add    BYTE PTR [rax],al
   140031d4c:	loopne 0x140031d93
   140031d4e:	add    BYTE PTR [rax],al
   140031d50:	ja     0x140031d98
   140031d52:	add    BYTE PTR [rax],al
   140031d54:	sbb    al,0x1d
   140031d56:	add    eax,DWORD PTR [rax]
   140031d58:	and    DWORD PTR [rax],eax
   140031d5a:	add    al,0x0
   140031d5c:	add    ah,dh
   140031d5e:	or     al,0x0
   140031d60:	add    ah,ah
   140031d62:	or     eax,DWORD PTR [rax]
   140031d64:	loopne 0x140031dab
   140031d66:	add    BYTE PTR [rax],al
   140031d68:	ja     0x140031db0
   140031d6a:	add    BYTE PTR [rax],al
   140031d6c:	sbb    al,0x1d
   140031d6e:	add    eax,DWORD PTR [rax]
   140031d70:	and    DWORD PTR [rax],eax
   140031d72:	(bad)  
   140031d73:	add    BYTE PTR [rax],al
   140031d75:	hlt    
   140031d76:	or     al,0x0
   140031d78:	add    ah,ah
   140031d7a:	or     eax,DWORD PTR [rax]
   140031d7c:	add    BYTE PTR [rdx+rcx*1+0x0],dh
   140031d80:	loopne 0x140031dc7
   140031d82:	add    BYTE PTR [rax],al
   140031d84:	ja     0x140031dcc
   140031d86:	add    BYTE PTR [rax],al
   140031d88:	sbb    al,0x1d
   140031d8a:	add    eax,DWORD PTR [rax]
   140031d8c:	add    DWORD PTR [rsi],eax
   140031d8e:	add    al,BYTE PTR [rax]
   140031d90:	(bad)  
   140031d91:	push   rdx
   140031d92:	add    dh,BYTE PTR [rax]
   140031d94:	add    DWORD PTR [rdx],ecx
   140031d96:	add    al,0x0
   140031d98:	or     dh,BYTE PTR [rsi+rax*1]
   140031d9b:	add    BYTE PTR [rdx],cl
   140031d9d:	xor    al,BYTE PTR [rsi]
   140031d9f:	jo     0x140031da2
   140031da1:	(bad)  
   140031da2:	add    eax,DWORD PTR [rax]
   140031da4:	(bad)  
   140031da5:	je     0x140031da7
   140031da7:	add    BYTE PTR [rdx+rax*1],al
   140031daa:	add    BYTE PTR [rax],al
   140031dac:	sbb    DWORD PTR [rbx],esp
   140031dae:	(bad)  
   140031daf:	add    BYTE PTR [rdx],bl
   140031db1:	push   rdx
   140031db2:	(bad)  
   140031db3:	lock adc al,0xe0
   140031db6:	adc    dh,BYTE PTR [rax+0x11]
   140031db9:	(bad)  
   140031dba:	adc    BYTE PTR [rax],dh
   140031dbc:	mov    ah,0x70
   140031dbe:	add    BYTE PTR [rax],al
   140031dc0:	adc    BYTE PTR [rdx+rax*1+0x0],dh
   140031dc4:	(bad)  
   140031dc5:	(bad)  
   140031dc6:	(bad)  
   140031dc7:	inc    DWORD PTR [rax]
   140031dc9:	add    BYTE PTR [rax],al
   140031dcb:	add    bh,bh
   140031dcd:	(bad)  
   140031dce:	(bad)  
   140031dcf:	inc    DWORD PTR [rax]
   140031dd1:	add    BYTE PTR [rax],al
   140031dd3:	add    BYTE PTR [rcx],al
   140031dd5:	add    BYTE PTR [rax],al
   140031dd7:	add    BYTE PTR [rax],al
   140031dd9:	add    BYTE PTR [rax],al
   140031ddb:	add    BYTE PTR [rcx],al
	...
   140031de9:	add    BYTE PTR [rax],al
   140031deb:	add    BYTE PTR [rbx],al
   140031ded:	add    BYTE PTR [rax],al
   140031def:	add    BYTE PTR [rcx],al
   140031df1:	add    BYTE PTR [rax],al
   140031df3:	add    BYTE PTR [rsi+rbx*1],cl
   140031df6:	add    eax,DWORD PTR [rax]
   140031df8:	add    al,BYTE PTR [rax]
   140031dfa:	add    BYTE PTR [rax],al
   140031dfc:	add    al,BYTE PTR [rax]
   140031dfe:	add    BYTE PTR [rax],al
   140031e00:	add    eax,DWORD PTR [rax]
   140031e02:	add    BYTE PTR [rax],al
   140031e04:	add    DWORD PTR [rax],eax
   140031e06:	add    BYTE PTR [rax],al
   140031e08:	and    BYTE PTR [rsi],bl
   140031e0a:	add    eax,DWORD PTR [rax]
   140031e0c:	add    BYTE PTR [rax],al
	...
   140031e17:	add    al,dl
   140031e19:	(bad)  
   140031e1a:	add    al,BYTE PTR [rax]
   140031e1c:	cmp    BYTE PTR [rax],al
   140031e1e:	add    BYTE PTR [rax],al
   140031e20:	add    BYTE PTR [rax],al
	...
   140031e2b:	add    BYTE PTR [rdi],bl
   140031e2d:	(bad)  
   140031e2f:	add    BYTE PTR [rax+0x0],cl
	...
   140031e3e:	add    BYTE PTR [rax],al
   140031e40:	nop
   140031e41:	sbb    al,0x0
   140031e43:	add    bh,bh
   140031e45:	(bad)  
   140031e46:	(bad)  
   140031e47:	inc    DWORD PTR [rip+0x1d]        # 0x140031e6a
   140031e4d:	add    BYTE PTR [rax],al
   140031e4f:	add    BYTE PTR [rcx],bh
   140031e51:	sbb    eax,0xffff0000
   140031e56:	(bad)  
   140031e57:	call   rax
   140031e59:	(bad)  
   140031e5a:	add    al,BYTE PTR [rax]
   140031e5c:	add    BYTE PTR [rax],al
   140031e5e:	add    BYTE PTR [rax],al
   140031e60:	frstor [rcx+0x2]
   140031e63:	add    BYTE PTR [rcx],al
   140031e65:	add    BYTE PTR [rax],al
   140031e67:	add    ch,ah
   140031e69:	(bad)  
   140031e6a:	add    al,BYTE PTR [rax]
   140031e6c:	add    al,BYTE PTR [rax]
   140031e6e:	add    BYTE PTR [rax],al
   140031e70:	adc    DWORD PTR [rdx+0x2],esp
   140031e73:	add    BYTE PTR [rax],al
   140031e75:	add    BYTE PTR [rax],al
   140031e77:	add    BYTE PTR [rip+0x3000262],ch        # 0x1430320df
   140031e7d:	add    BYTE PTR [rax],al
   140031e7f:	add    BYTE PTR [rcx],bl
   140031e81:	or     al,BYTE PTR [rdx]
   140031e83:	add    BYTE PTR [rdx],cl
   140031e85:	xor    al,BYTE PTR [rsi]
   140031e87:	push   rax
   140031e88:	mov    ah,0x70
   140031e8a:	add    BYTE PTR [rax],al
   140031e8c:	adc    BYTE PTR [rdx+rax*1+0x0],dh
   140031e90:	sbb    DWORD PTR [rbx],ecx
   140031e92:	add    eax,DWORD PTR [rax]
   140031e94:	or     eax,DWORD PTR [rdx+0x7]
   140031e97:	push   rax
   140031e98:	(bad)  
   140031e99:	xor    BYTE PTR [rax],al
   140031e9b:	add    BYTE PTR [rax+rsi*2+0x74100000],dh
   140031ea2:	add    al,BYTE PTR [rax]
   140031ea4:	add    DWORD PTR [rdx],ecx
   140031ea6:	add    al,0x0
   140031ea8:	or     dh,BYTE PTR [rcx+rcx*1]
   140031eab:	add    BYTE PTR [rdx],cl
   140031ead:	xor    al,BYTE PTR [rsi]
   140031eaf:	jo     0x140031ed2
   140031eb1:	add    eax,0x64050002
   140031eb6:	(bad)  
   140031eb7:	add    al,ah
   140031eb9:	(bad)  
   140031eba:	add    BYTE PTR [rax],al
   140031ebc:	(bad)  
   140031ebd:	(bad)  
   140031ebe:	add    BYTE PTR [rax],al
   140031ec0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140031ec1:	(bad)  
   140031ec2:	add    eax,DWORD PTR [rax]
   140031ec4:	and    DWORD PTR [rip+0xffffffffe4050002],eax        # 0x124081ecc
   140031eca:	or     BYTE PTR [rax],al
   140031ecc:	(bad)  
   140031ecd:	(bad)  
   140031ece:	add    BYTE PTR [rax],al
   140031ed0:	sub    DWORD PTR [rdi],ebx
   140031ed2:	add    BYTE PTR [rax],al
   140031ed4:	mov    al,0x1e
   140031ed6:	add    eax,DWORD PTR [rax]
   140031ed8:	and    DWORD PTR [rip+0x54050002],eax        # 0x194081ee0
   140031ede:	(bad)  
   140031edf:	add    BYTE PTR [rcx],ch
   140031ee1:	(bad)  
   140031ee2:	add    BYTE PTR [rax],al
   140031ee4:	(bad)  
   140031ee5:	(bad)  
   140031ee6:	add    BYTE PTR [rax],al
   140031ee8:	(bad)  
   140031ee9:	(bad)  
   140031eea:	add    eax,DWORD PTR [rax]
   140031eec:	and    DWORD PTR [rax],eax
   140031eee:	add    BYTE PTR [rax],al
   140031ef0:	sub    DWORD PTR [rdi],ebx
   140031ef2:	add    BYTE PTR [rax],al
   140031ef4:	(bad)  
   140031ef5:	(bad)  
   140031ef6:	add    BYTE PTR [rax],al
   140031ef8:	(bad)  
   140031ef9:	(bad)  
   140031efa:	add    eax,DWORD PTR [rax]
   140031efc:	and    DWORD PTR [rax],eax
   140031efe:	add    BYTE PTR [rax],al
   140031f00:	(bad)  
   140031f01:	(bad)  
   140031f02:	add    BYTE PTR [rax],al
   140031f04:	sub    DWORD PTR [rdi],ebx
   140031f06:	add    BYTE PTR [rax],al
   140031f08:	mov    al,0x1e
   140031f0a:	add    eax,DWORD PTR [rax]
   140031f0c:	and    DWORD PTR [rax],eax
   140031f0e:	add    BYTE PTR [rax],al
   140031f10:	loopne 0x140031f30
   140031f12:	add    BYTE PTR [rax],al
   140031f14:	(bad)  
   140031f15:	(bad)  
   140031f16:	add    BYTE PTR [rax],al
   140031f18:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140031f19:	(bad)  
   140031f1a:	add    eax,DWORD PTR [rax]
   140031f1c:	add    DWORD PTR [rdx],ecx
   140031f1e:	add    al,0x0
   140031f20:	or     dh,BYTE PTR [rdi+rax*1]
   140031f23:	add    BYTE PTR [rdx],cl
   140031f25:	xor    al,BYTE PTR [rsi]
   140031f27:	jo     0x140031f4a
   140031f29:	add    eax,0x64050002
   140031f2e:	(bad)  
   140031f2f:	add    BYTE PTR [rax],al
   140031f31:	and    DWORD PTR [rax],eax
   140031f33:	add    BYTE PTR [rbx],bl
   140031f35:	and    DWORD PTR [rax],eax
   140031f37:	add    BYTE PTR [rdi+rbx*1],bl
   140031f3a:	add    eax,DWORD PTR [rax]
   140031f3c:	and    DWORD PTR [rax],eax
   140031f3e:	add    BYTE PTR [rax],al
   140031f40:	add    BYTE PTR [rcx],ah
   140031f42:	add    BYTE PTR [rax],al
   140031f44:	sbb    esp,DWORD PTR [rcx]
   140031f46:	add    BYTE PTR [rax],al
   140031f48:	sbb    al,0x1f
   140031f4a:	add    eax,DWORD PTR [rax]
   140031f4c:	add    DWORD PTR [rcx+rax*1],eax
   140031f4f:	add    BYTE PTR [rdx+rax*2],al
   140031f52:	add    BYTE PTR [rax],al
   140031f54:	add    DWORD PTR [rcx+rax*1],eax
   140031f57:	add    BYTE PTR [rdx+rax*2],al
   140031f5a:	add    BYTE PTR [rax],al
   140031f5c:	add    DWORD PTR [rcx+rax*1],eax
   140031f5f:	add    BYTE PTR [rdx+rax*2],al
   140031f62:	add    BYTE PTR [rax],al
   140031f64:	and    DWORD PTR [rip+0x34050002],eax        # 0x174081f6c
   140031f6a:	add    al,0x0
   140031f6c:	adc    BYTE PTR [rdx+rax*1+0x0],ch
   140031f70:	and    ebp,DWORD PTR [rdx+rax*1+0x0]
   140031f74:	pop    rsp
   140031f75:	(bad)  
   140031f76:	add    eax,DWORD PTR [rax]
   140031f78:	and    DWORD PTR [rax],eax
   140031f7a:	add    BYTE PTR [rax],al
   140031f7c:	adc    BYTE PTR [rdx+rax*1+0x0],ch
   140031f80:	and    ebp,DWORD PTR [rdx+rax*1+0x0]
   140031f84:	pop    rsp
   140031f85:	(bad)  
   140031f86:	add    eax,DWORD PTR [rax]
   140031f88:	add    DWORD PTR [rcx+rax*1],eax
   140031f8b:	add    BYTE PTR [rdx+rax*2],al
   140031f8e:	add    BYTE PTR [rax],al
   140031f90:	and    DWORD PTR [rip+0x34050002],eax        # 0x174081f98
   140031f96:	add    al,0x0
   140031f98:	push   rax
   140031f99:	push   0x2
   140031f9b:	add    BYTE PTR [rbx+0x6a],ah
   140031f9e:	add    al,BYTE PTR [rax]
   140031fa0:	mov    BYTE PTR [rdi],bl
   140031fa2:	add    eax,DWORD PTR [rax]
   140031fa4:	and    DWORD PTR [rax],eax
   140031fa6:	add    BYTE PTR [rax],al
   140031fa8:	push   rax
   140031fa9:	push   0x2
   140031fab:	add    BYTE PTR [rbx+0x6a],ah
   140031fae:	add    al,BYTE PTR [rax]
   140031fb0:	mov    BYTE PTR [rdi],bl
   140031fb2:	add    eax,DWORD PTR [rax]
   140031fb4:	add    DWORD PTR [rcx+rax*1],eax
   140031fb7:	add    BYTE PTR [rdx+rax*2],al
   140031fba:	add    BYTE PTR [rax],al
   140031fbc:	and    DWORD PTR [rip+0x34050002],eax        # 0x174081fc4
   140031fc2:	add    al,0x0
   140031fc4:	movabs al,ds:0xb400026bb300026b
   140031fcd:	(bad)  
   140031fce:	add    eax,DWORD PTR [rax]
   140031fd0:	and    DWORD PTR [rax],eax
   140031fd2:	add    BYTE PTR [rax],al
   140031fd4:	movabs al,ds:0xb400026bb300026b
   140031fdd:	(bad)  
   140031fde:	add    eax,DWORD PTR [rax]
   140031fe0:	add    DWORD PTR [rcx+rax*1],eax
   140031fe3:	add    BYTE PTR [rdx+rax*2],al
   140031fe6:	add    BYTE PTR [rax],al
   140031fe8:	and    DWORD PTR [rip+0x34050002],eax        # 0x174081ff0
   140031fee:	add    al,0x0
   140031ff0:	shr    BYTE PTR [rdx+0x2],0x0
   140031ff4:	shr    DWORD PTR [rdx+0x2],cl
   140031ff7:	add    al,ah
   140031ff9:	(bad)  
   140031ffa:	add    eax,DWORD PTR [rax]
   140031ffc:	and    DWORD PTR [rax],eax
   140031ffe:	add    BYTE PTR [rax],al
   140032000:	shr    BYTE PTR [rdx+0x2],0x0
   140032004:	shr    DWORD PTR [rdx+0x2],cl
   140032007:	add    al,ah
   140032009:	(bad)  
   14003200a:	add    eax,DWORD PTR [rax]
   14003200c:	add    DWORD PTR [rcx+rax*1],eax
   14003200f:	add    BYTE PTR [rdx+rax*2],al
   140032012:	add    BYTE PTR [rax],al
   140032014:	add    DWORD PTR [rcx+rax*1],eax
   140032017:	add    BYTE PTR [rdx+rax*2],al
   14003201a:	add    BYTE PTR [rax],al
   14003201c:	and    DWORD PTR [rip+0x34050002],eax        # 0x174082024
   140032022:	add    al,0x0
   140032024:	xor    BYTE PTR [rbx+0x2],ch
   140032027:	add    BYTE PTR [rbx+0x6b],al
   14003202a:	add    al,BYTE PTR [rax]
   14003202c:	adc    al,0x20
   14003202e:	add    eax,DWORD PTR [rax]
   140032030:	and    DWORD PTR [rax],eax
   140032032:	add    BYTE PTR [rax],al
   140032034:	xor    BYTE PTR [rbx+0x2],ch
   140032037:	add    BYTE PTR [rbx+0x6b],al
   14003203a:	add    al,BYTE PTR [rax]
   14003203c:	adc    al,0x20
   14003203e:	add    eax,DWORD PTR [rax]
   140032040:	add    DWORD PTR [rcx+rax*1],eax
   140032043:	add    BYTE PTR [rdx+rax*2],al
   140032046:	add    BYTE PTR [rax],al
   140032048:	add    DWORD PTR [rcx+rax*1],eax
   14003204b:	add    BYTE PTR [rdx+rax*2],al
   14003204e:	add    BYTE PTR [rax],al
   140032050:	adc    DWORD PTR [rax+rcx*1],ebx
   140032053:	add    BYTE PTR [rsp+riz*2],bl
   140032056:	(bad)  
   140032057:	add    BYTE PTR [rax],bl
   140032059:	push   rsp
   14003205a:	or     eax,0xc341400
   14003205f:	add    BYTE PTR [rax],cl
   140032061:	xchg   edx,eax
   140032062:	add    al,0x70
   140032064:	mov    ah,0x70
   140032066:	add    BYTE PTR [rax],al
   140032068:	cmp    BYTE PTR [rdx+rax*1+0x0],dh
   14003206c:	(bad)  
   14003206d:	(bad)  
   14003206e:	(bad)  
   14003206f:	call   QWORD PTR [rax+0x262]
   140032075:	add    BYTE PTR [rax],al
   140032077:	add    al,dl
   140032079:	xor    eax,0xffff0000
   14003207e:	(bad)  
   14003207f:	inc    DWORD PTR [rip+0x36]        # 0x1400320bb
   140032085:	add    BYTE PTR [rax],al
   140032087:	add    BYTE PTR [rsi+rsi*1+0x0],ah
   14003208b:	add    bh,bh
   14003208d:	(bad)  
   14003208e:	(bad)  
   14003208f:	(bad)  
   140032090:	jg     0x1400320c8
   140032092:	add    BYTE PTR [rax],al
   140032094:	add    BYTE PTR [rax],al
   140032096:	add    BYTE PTR [rax],al
   140032098:	add    BYTE PTR [rdi],dh
   14003209a:	add    BYTE PTR [rax],al
   14003209c:	(bad)  
   14003209d:	(bad)  
   14003209e:	(bad)  
   14003209f:	inc    DWORD PTR [rcx]
   1400320a1:	or     DWORD PTR [rbx],eax
   1400320a3:	add    BYTE PTR [rcx],cl
   1400320a5:	add    DWORD PTR [rax+rax*1+0x3002],eax
   1400320ac:	add    DWORD PTR [rdi],ecx
   1400320ae:	(bad)  
   1400320af:	add    BYTE PTR [rdi],cl
   1400320b1:	or     al,BYTE PTR fs:[rax]
   1400320b4:	sysenter 
   1400320b6:	or     DWORD PTR [rax],eax
   1400320b8:	rsqrtps xmm1,XMMWORD PTR [rbx]
   1400320bb:	jo     0x1400320be
   1400320bd:	(bad)  
   1400320be:	add    al,BYTE PTR [rax]
   1400320c0:	(bad)  
   1400320c1:	xor    al,BYTE PTR [rdx]
   1400320c3:	xor    BYTE PTR [rcx],dl
   1400320c5:	sub    ecx,DWORD PTR [rip+0x1f742b00]        # 0x15f774bcb
   1400320cb:	add    BYTE PTR [rdi],ah
   1400320cd:	fs (bad) 
   1400320cf:	add    BYTE PTR [rbx],ah
   1400320d1:	xor    al,0x1d
   1400320d3:	add    BYTE PTR [rdi],dl
   1400320d5:	add    DWORD PTR [rsi],edx
   1400320d7:	add    BYTE PTR [rax+rsi*8],cl
   1400320da:	or     ah,al
   1400320dc:	or     al,dl
   1400320de:	(bad)  
   1400320df:	rol    BYTE PTR [rax+rdx*2],0x0
   1400320e3:	add    BYTE PTR [rax+rsi*2+0x74600000],dh
   1400320ea:	add    al,BYTE PTR [rax]
   1400320ec:	(bad)  
   1400320ed:	(bad)  
   1400320ee:	(bad)  
   1400320ef:	jmp    QWORD PTR [rax+0x62]
   1400320f2:	add    al,BYTE PTR [rax]
   1400320f4:	add    BYTE PTR [rax],al
   1400320f6:	add    BYTE PTR [rax],al
   1400320f8:	ins    BYTE PTR es:[rdi],dx
   1400320f9:	(bad)  
   1400320fb:	add    BYTE PTR [rax],al
   1400320fd:	add    BYTE PTR [rax],al
   1400320ff:	add    BYTE PTR [rax+0x62],bh
   140032102:	add    al,BYTE PTR [rax]
   140032104:	add    al,BYTE PTR [rax]
   140032106:	add    BYTE PTR [rax],al
   140032108:	test   BYTE PTR [rdx+0x2],ah
   14003210b:	add    BYTE PTR [rax],al
   14003210d:	add    BYTE PTR [rax],al
   14003210f:	add    al,al
   140032111:	xor    BYTE PTR [rax],al
   140032113:	add    bh,bh
   140032115:	(bad)  
   140032116:	(bad)  
   140032117:	push   QWORD PTR [rcx+0x31]
   14003211d:	add    BYTE PTR [rax],al
   14003211f:	add    BYTE PTR [rcx+0x1000032],al
   140032125:	add    BYTE PTR [rax],al
   140032127:	add    BYTE PTR [rdx+rsi*1+0x0],dh
   14003212e:	add    BYTE PTR [rax],al
   140032130:	scas   al,BYTE PTR es:[rdi]
   140032131:	xor    al,0x0
   140032133:	add    BYTE PTR [rdx],al
   140032135:	add    BYTE PTR [rax],al
   140032137:	add    dl,al
   140032139:	xor    al,0x0
   14003213b:	add    BYTE PTR [rbx],al
   14003213d:	add    BYTE PTR [rax],al
   14003213f:	add    BYTE PTR [rdi],dh
   140032141:	xor    eax,0x20000
   140032146:	add    BYTE PTR [rax],al
   140032148:	push   rdi
   140032149:	xor    eax,0x0
   14003214e:	add    BYTE PTR [rax],al
   140032150:	push   0xffffffffff000035
   140032155:	(bad)  
   140032156:	(bad)  
   140032157:	inc    DWORD PTR [rdi+0x1000035]
   14003215d:	add    BYTE PTR [rax],al
   14003215f:	add    BYTE PTR [rdx+0x35],dl
   140032165:	add    BYTE PTR [rax],al
   140032167:	add    BYTE PTR [rax-0xffffcb],ch
   14003216d:	(bad)  
   14003216e:	(bad)  
   14003216f:	inc    DWORD PTR [rcx]
   140032171:	or     al,BYTE PTR [rax+rax*1]
   140032174:	or     dh,BYTE PTR [rax+rcx*1]
   140032177:	add    BYTE PTR [rdx],cl
   140032179:	push   rdx
   14003217a:	(bad)  
   14003217b:	jo     0x14003217e
   14003217d:	or     al,BYTE PTR [rax+rax*1]
   140032180:	or     dh,BYTE PTR [rax+rcx*1]
   140032183:	add    BYTE PTR [rdx],cl
   140032185:	push   rdx
   140032186:	(bad)  
   140032187:	jo     0x14003219a
   140032189:	sbb    eax,0xf2150006
   14003218e:	or     esp,eax
   140032190:	or     DWORD PTR [rax+0x8],esi
   140032193:	(bad)  
   140032194:	(bad)  
   140032195:	xor    BYTE PTR [rsi],al
   140032197:	push   rax
   140032198:	mov    ah,0x70
   14003219a:	add    BYTE PTR [rax],al
   14003219c:	mov    BYTE PTR [rdx+rax*1+0x0],dh
   1400321a0:	(bad)  
   1400321a1:	(bad)  
   1400321a2:	(bad)  
   1400321a3:	(bad)  
   1400321a4:	mov    eax,0x262
   1400321a9:	add    BYTE PTR [rax],al
   1400321ab:	add    BYTE PTR [rax+0x1000262],ah
   1400321b1:	add    BYTE PTR [rax],al
   1400321b3:	add    BYTE PTR [rdx+riz*2+0x2],ch
   1400321ba:	add    BYTE PTR [rax],al
   1400321bc:	lods   al,BYTE PTR ds:[rsi]
   1400321bd:	(bad)  
   1400321bf:	add    BYTE PTR [rax],ah
   1400321c1:	(bad)  
   1400321c2:	add    BYTE PTR [rax],al
   1400321c4:	(bad)  
   1400321c5:	(bad)  
   1400321c6:	(bad)  
   1400321c7:	inc    DWORD PTR [rax+0x37]
   1400321ca:	add    BYTE PTR [rax],al
   1400321cc:	add    BYTE PTR [rax],al
   1400321ce:	add    BYTE PTR [rax],al
   1400321d0:	push   0x37
   1400321d2:	add    BYTE PTR [rax],al
   1400321d4:	add    DWORD PTR [rax],eax
   1400321d6:	add    BYTE PTR [rax],al
   1400321d8:	jg     0x140032211
   1400321da:	add    BYTE PTR [rax],al
   1400321dc:	add    eax,DWORD PTR [rax]
   1400321de:	add    BYTE PTR [rax],al
   1400321e0:	xchg   esi,eax
   1400321e1:	cmp    BYTE PTR [rax],al
   1400321e3:	add    BYTE PTR [rax],al
   1400321e5:	add    BYTE PTR [rax],al
   1400321e7:	add    BYTE PTR [rcx],al
   1400321e9:	(bad)  
   1400321ea:	add    al,BYTE PTR [rax]
   1400321ec:	(bad)  
   1400321ed:	xor    al,BYTE PTR [rdx]
   1400321ef:	push   rax
   1400321f0:	add    DWORD PTR [rdi],ecx
   1400321f2:	(bad)  
   1400321f3:	add    BYTE PTR [rdi],cl
   1400321f5:	or     eax,DWORD PTR fs:[rax]
   1400321f8:	sysenter 
   1400321fa:	or     al,BYTE PTR [rax]
   1400321fc:	(bad)  
   1400321fe:	or     esi,DWORD PTR [rax+0x11]
   140032201:	(bad)  
   140032202:	add    eax,0x26341e00
   140032207:	add    BYTE PTR [rsi],cl
   140032209:	add    DWORD PTR [rax+rax*1],esp
   14003220c:	add    dl,BYTE PTR [rax+0x0]
   14003220f:	add    BYTE PTR [rax+rsi*2+0x74b00000],dh
   140032216:	add    al,BYTE PTR [rax]
   140032218:	(bad)  
   140032219:	(bad)  
   14003221a:	(bad)  
   14003221b:	push   rax
   14003221d:	(bad)  
   14003221f:	add    BYTE PTR [rax],al
   140032221:	add    BYTE PTR [rax],al
   140032223:	add    ah,bh
   140032225:	(bad)  
   140032227:	add    al,ah
   140032229:	cmp    al,0x0
   14003222b:	add    bh,bh
   14003222d:	(bad)  
   14003222e:	(bad)  
   14003222f:	dec    DWORD PTR [rsi+0x3d]
   140032232:	add    BYTE PTR [rax],al
   140032234:	add    BYTE PTR [rax],al
   140032236:	add    BYTE PTR [rax],al
   140032238:	jbe    0x140032277
   14003223a:	add    BYTE PTR [rax],al
   14003223c:	add    DWORD PTR [rax],eax
   14003223e:	add    BYTE PTR [rax],al
   140032240:	adc    eax,0x3f
   140032245:	add    BYTE PTR [rax],al
   140032247:	add    BYTE PTR [rdx],bh
   140032249:	(bad)  
   14003224a:	add    BYTE PTR [rax],al
   14003224c:	(bad)  
   14003224d:	(bad)  
   14003224e:	(bad)  
   14003224f:	inc    DWORD PTR [rcx]
   140032251:	add    al,0x1
   140032253:	add    BYTE PTR [rdx+riz*2],al
   140032256:	add    BYTE PTR [rax],al
   140032258:	add    DWORD PTR [rcx+rax*1],eax
   14003225b:	add    BYTE PTR [rdx+rax*2],al
   14003225e:	add    BYTE PTR [rax],al
   140032260:	add    DWORD PTR [rcx+rax*1],eax
   140032263:	add    BYTE PTR [rdx+rax*2],al
   140032266:	add    BYTE PTR [rax],al
   140032268:	sbb    DWORD PTR [rip+0x6425000a],esp        # 0x1a4282278
   14003226e:	(bad)  
   14003226f:	add    BYTE PTR [rax],ah
   140032271:	xor    al,0xd
   140032273:	add    BYTE PTR [rdx],dl
   140032275:	push   rdx
   140032276:	(bad)  
   140032277:	lock or al,0xe0
   14003227a:	or     dl,al
   14003227c:	or     al,al
   14003227e:	(bad)  
   14003227f:	jo     0x140032235
   140032281:	jo     0x140032283
   140032283:	add    al,bl
   140032285:	je     0x140032289
   140032287:	add    bh,bh
   140032289:	(bad)  
   14003228a:	(bad)  
   14003228b:	inc    DWORD PTR [rax]
   14003228d:	add    BYTE PTR [rax],al
   14003228f:	add    bh,bh
   140032291:	(bad)  
   140032292:	(bad)  
   140032293:	inc    DWORD PTR [rax]
	...
   14003229d:	add    BYTE PTR [rax],al
   14003229f:	add    BYTE PTR [rcx],al
   1400322a1:	add    BYTE PTR [rax],al
   1400322a3:	add    BYTE PTR [rcx],al
   1400322a5:	add    BYTE PTR [rax],al
   1400322a7:	add    BYTE PTR [rdx+riz*1+0x400003],ch
	...
   1400322b6:	add    BYTE PTR [rax],al
   1400322b8:	add    BYTE PTR [rcx+0x2],ah
   1400322bb:	add    BYTE PTR [rax+0x0],cl
   1400322be:	add    BYTE PTR [rax],al
   1400322c0:	movabs al,ds:0x12ffffffff000012
   1400322c9:	adc    eax,DWORD PTR [rax]
   1400322cb:	add    BYTE PTR [rax],al
   1400322cd:	add    BYTE PTR [rax],al
   1400322cf:	add    al,dl
   1400322d1:	adc    eax,DWORD PTR [rax]
   1400322d3:	add    bh,bh
   1400322d5:	(bad)  
   1400322d6:	(bad)  
   1400322d7:	inc    DWORD PTR [rax]
   1400322d9:	(bad)  
   1400322da:	add    al,BYTE PTR [rax]
   1400322dc:	add    BYTE PTR [rax],al
   1400322de:	add    BYTE PTR [rax],al
   1400322e0:	(bad)  
   1400322e1:	(bad)  
   1400322e2:	add    al,BYTE PTR [rax]
   1400322e4:	add    DWORD PTR [rax],eax
   1400322e6:	add    BYTE PTR [rax],al
   1400322e8:	sbb    DWORD PTR [rbx],ecx
   1400322ea:	add    eax,DWORD PTR [rax]
   1400322ec:	or     eax,DWORD PTR [rdx+0x7]
   1400322ef:	push   rax
   1400322f0:	(bad)  
   1400322f1:	xor    BYTE PTR [rax],al
   1400322f3:	add    BYTE PTR [rax+rsi*2+0x74d80000],dh
   1400322fa:	add    al,BYTE PTR [rax]
   1400322fc:	add    DWORD PTR [rsi],eax
   1400322fe:	add    al,BYTE PTR [rax]
   140032300:	(bad)  
   140032301:	xor    al,BYTE PTR [rdx]
   140032303:	xor    BYTE PTR [rcx],al
   140032305:	(bad)  
   140032306:	add    al,BYTE PTR [rax]
   140032308:	(bad)  
   140032309:	xor    al,BYTE PTR [rdx]
   14003230b:	xor    BYTE PTR [rcx],al
   14003230d:	or     al,BYTE PTR [rax+rax*1]
   140032310:	or     dh,BYTE PTR [rsi+rax*1]
   140032313:	add    BYTE PTR [rdx],cl
   140032315:	xor    al,BYTE PTR [rsi]
   140032317:	jo     0x14003231a
   140032319:	add    al,0x1
   14003231b:	add    BYTE PTR [rdx+rax*4],al
   14003231e:	add    BYTE PTR [rax],al
   140032320:	add    DWORD PTR [rcx+rax*1],eax
   140032323:	add    BYTE PTR [rdx+rax*4],al
   140032326:	add    BYTE PTR [rax],al
   140032328:	add    DWORD PTR [rcx+rax*1],eax
   14003232b:	add    BYTE PTR [rdx+rax*4],al
   14003232e:	add    BYTE PTR [rax],al
   140032330:	add    DWORD PTR [rcx+rax*1],eax
   140032333:	add    BYTE PTR [rdx+rax*4],al
   140032336:	add    BYTE PTR [rax],al
   140032338:	add    DWORD PTR [rcx+rax*1],eax
   14003233b:	add    BYTE PTR [rdx+rax*4],al
   14003233e:	add    BYTE PTR [rax],al
   140032340:	add    DWORD PTR [rcx+rax*1],eax
   140032343:	add    BYTE PTR [rdx+rax*4],al
   140032346:	add    BYTE PTR [rax],al
   140032348:	add    DWORD PTR [rdx],ecx
   14003234a:	add    al,BYTE PTR [rax]
   14003234c:	or     dh,BYTE PTR [rdx]
   14003234e:	(bad)  
   14003234f:	xor    BYTE PTR [rcx],al
   140032351:	(bad)  
   140032352:	add    al,BYTE PTR [rax]
   140032354:	(bad)  
   140032355:	xor    al,BYTE PTR [rdx]
   140032357:	xor    BYTE PTR [rcx],al
   140032359:	or     al,BYTE PTR [rax+rax*1]
   14003235c:	or     dh,BYTE PTR [rsi+rax*1]
   14003235f:	add    BYTE PTR [rdx],cl
   140032361:	xor    al,BYTE PTR [rsi]
   140032363:	jo     0x140032366
   140032365:	(bad)  
   140032366:	add    al,BYTE PTR [rax]
   140032368:	(bad)  
   140032369:	xor    al,BYTE PTR [rdx]
   14003236b:	xor    BYTE PTR [rcx],al
   14003236d:	(bad)  
   14003236e:	add    al,BYTE PTR [rax]
   140032370:	(bad)  
   140032371:	xor    al,BYTE PTR [rdx]
   140032373:	xor    BYTE PTR [rcx],al
   140032375:	or     al,BYTE PTR [rax+rax*1]
   140032378:	or     dh,BYTE PTR [rsi+rax*1]
   14003237b:	add    BYTE PTR [rdx],cl
   14003237d:	xor    al,BYTE PTR [rsi]
   14003237f:	jo     0x140032382
   140032381:	(bad)  
   140032382:	add    al,BYTE PTR [rax]
   140032384:	(bad)  
   140032385:	xor    al,BYTE PTR [rdx]
   140032387:	xor    BYTE PTR [rcx],al
   140032389:	(bad)  
   14003238a:	add    al,BYTE PTR [rax]
   14003238c:	(bad)  
   14003238d:	xor    al,BYTE PTR [rdx]
   14003238f:	xor    BYTE PTR [rcx],al
   140032391:	or     al,BYTE PTR [rax+rax*1]
   140032394:	or     dh,BYTE PTR [rsi+rax*1]
   140032397:	add    BYTE PTR [rdx],cl
   140032399:	xor    al,BYTE PTR [rsi]
   14003239b:	jo     0x14003239e
   14003239d:	(bad)  
   14003239e:	add    al,BYTE PTR [rax]
   1400323a0:	(bad)  
   1400323a1:	xor    al,BYTE PTR [rdx]
   1400323a3:	xor    BYTE PTR [rcx],al
   1400323a5:	(bad)  
   1400323a6:	add    al,BYTE PTR [rax]
   1400323a8:	(bad)  
   1400323a9:	xor    al,BYTE PTR [rdx]
   1400323ab:	xor    BYTE PTR [rcx],al
   1400323ad:	or     al,BYTE PTR [rax+rax*1]
   1400323b0:	or     dh,BYTE PTR [rsi+rax*1]
   1400323b3:	add    BYTE PTR [rdx],cl
   1400323b5:	xor    al,BYTE PTR [rsi]
   1400323b7:	jo     0x1400323ba
   1400323b9:	or     al,BYTE PTR [rdx]
   1400323bb:	add    BYTE PTR [rdx],cl
   1400323bd:	xor    al,BYTE PTR [rsi]
   1400323bf:	xor    BYTE PTR [rcx],al
   1400323c1:	(bad)  
   1400323c2:	add    al,BYTE PTR [rax]
   1400323c4:	(bad)  
   1400323c5:	xor    al,BYTE PTR [rdx]
   1400323c7:	xor    BYTE PTR [rcx],al
   1400323c9:	or     al,BYTE PTR [rax+rax*1]
   1400323cc:	or     dh,BYTE PTR [rsi+rax*1]
   1400323cf:	add    BYTE PTR [rdx],cl
   1400323d1:	xor    al,BYTE PTR [rsi]
   1400323d3:	jo     0x1400323d6
   1400323d5:	(bad)  
   1400323d6:	add    al,BYTE PTR [rax]
   1400323d8:	(bad)  
   1400323d9:	xor    al,BYTE PTR [rdx]
   1400323db:	xor    BYTE PTR [rcx],al
   1400323dd:	(bad)  
   1400323de:	add    al,BYTE PTR [rax]
   1400323e0:	(bad)  
   1400323e1:	xor    al,BYTE PTR [rdx]
   1400323e3:	xor    BYTE PTR [rcx],al
   1400323e5:	or     al,BYTE PTR [rax+rax*1]
   1400323e8:	or     dh,BYTE PTR [rsi+rax*1]
   1400323eb:	add    BYTE PTR [rdx],cl
   1400323ed:	xor    al,BYTE PTR [rsi]
   1400323ef:	jo     0x1400323f2
   1400323f1:	(bad)  
   1400323f2:	add    al,BYTE PTR [rax]
   1400323f4:	(bad)  
   1400323f5:	xor    al,BYTE PTR [rdx]
   1400323f7:	xor    BYTE PTR [rcx],al
   1400323f9:	(bad)  
   1400323fa:	add    al,BYTE PTR [rax]
   1400323fc:	(bad)  
   1400323fd:	xor    al,BYTE PTR [rdx]
   1400323ff:	xor    BYTE PTR [rcx],al
   140032401:	or     al,BYTE PTR [rax+rax*1]
   140032404:	or     dh,BYTE PTR [rsi+rax*1]
   140032407:	add    BYTE PTR [rdx],cl
   140032409:	xor    al,BYTE PTR [rsi]
   14003240b:	jo     0x14003240e
   14003240d:	add    al,0x1
   14003240f:	add    BYTE PTR [rdx+rax*4],al
   140032412:	add    BYTE PTR [rax],al
   140032414:	add    DWORD PTR [rsi],eax
   140032416:	add    al,BYTE PTR [rax]
   140032418:	(bad)  
   140032419:	jb     0x14003241d
   14003241b:	xor    BYTE PTR [rcx],al
   14003241d:	or     al,BYTE PTR [rax+rax*1]
   140032420:	or     dh,BYTE PTR [rdi+rax*1]
   140032423:	add    BYTE PTR [rdx],cl
   140032425:	xor    al,BYTE PTR [rsi]
   140032427:	jo     0x14003242a
   140032429:	or     al,BYTE PTR [rax+rax*1]
   14003242c:	or     dh,BYTE PTR [rsi+rax*1]
   14003242f:	add    BYTE PTR [rdx],cl
   140032431:	xor    al,BYTE PTR [rsi]
   140032433:	jo     0x140032436
   140032435:	or     al,BYTE PTR [rax+rax*1]
   140032438:	or     dh,BYTE PTR [rsi+rax*1]
   14003243b:	add    BYTE PTR [rdx],cl
   14003243d:	xor    al,BYTE PTR [rsi]
   14003243f:	jo     0x140032442
   140032441:	or     al,BYTE PTR [rax+rax*1]
   140032444:	or     dh,BYTE PTR [rsi+rax*1]
   140032447:	add    BYTE PTR [rdx],cl
   140032449:	xor    al,BYTE PTR [rsi]
   14003244b:	jo     0x14003244e
   14003244d:	add    al,0x1
   14003244f:	add    BYTE PTR [rdx+rax*2],al
   140032452:	add    BYTE PTR [rax],al
   140032454:	add    DWORD PTR [rsi],eax
   140032456:	add    al,BYTE PTR [rax]
   140032458:	(bad)  
   140032459:	jb     0x14003245d
   14003245b:	xor    BYTE PTR [rcx],al
   14003245d:	add    al,0x1
   14003245f:	add    BYTE PTR [rdx+rax*2],al
   140032462:	add    BYTE PTR [rax],al
   140032464:	adc    DWORD PTR [rcx],ebx
   140032466:	or     al,BYTE PTR [rax]
   140032468:	sbb    DWORD PTR [rdx+rcx*1+0x0],esi
   14003246c:	sbb    DWORD PTR [rcx+rcx*1+0x0],esp
   140032470:	sbb    DWORD PTR [rax+rcx*1],esi
   140032473:	add    BYTE PTR [rcx],bl
   140032475:	xor    dl,BYTE PTR [rip+0x11e013f0]        # 0x151e3386b
   14003247b:	rcl    BYTE PTR [rax],0x81
   14003247e:	add    BYTE PTR [rax],al
   140032480:	add    DWORD PTR [rax],eax
   140032482:	add    BYTE PTR [rax],al
   140032484:	ret    0x54
   140032487:	add    BYTE PTR [rax+0x8000055],cl
   14003248d:	movsxd eax,DWORD PTR [rdx]
   14003248f:	add    BYTE PTR [rax],al
   140032491:	add    BYTE PTR [rax],al
   140032493:	add    BYTE PTR [rcx],al
   140032495:	(bad)  
   140032496:	add    al,BYTE PTR [rax]
   140032498:	(bad)  
   140032499:	xor    al,BYTE PTR [rdx]
   14003249b:	push   rax
   14003249c:	add    DWORD PTR [rsi],eax
   14003249e:	add    al,BYTE PTR [rax]
   1400324a0:	(bad)  
   1400324a1:	xor    al,BYTE PTR [rdx]
   1400324a3:	xor    BYTE PTR [rcx],al
   1400324a5:	sbb    BYTE PTR [rdx],cl
   1400324a7:	add    BYTE PTR [rax],bl
   1400324a9:	or     al,BYTE PTR fs:[rax]
   1400324ac:	sbb    BYTE PTR [rcx+rcx*1+0x0],dl
   1400324b0:	sbb    BYTE PTR [rax+rcx*1],dh
   1400324b3:	add    BYTE PTR [rax],bl
   1400324b5:	xor    dl,BYTE PTR [rax+rsi*8]
   1400324b8:	adc    ah,al
   1400324ba:	adc    BYTE PTR [rax+0x0],dh
   1400324bd:	add    BYTE PTR [rax],al
   1400324bf:	add    BYTE PTR [rcx],al
   1400324c1:	add    BYTE PTR [rax],al
   1400324c3:	add    BYTE PTR [rcx],al
   1400324c5:	(bad)  
   1400324c6:	add    al,BYTE PTR [rax]
   1400324c8:	(bad)  
   1400324c9:	xor    al,BYTE PTR [rdx]
   1400324cb:	xor    BYTE PTR [rcx],al
   1400324cd:	(bad)  
   1400324ce:	add    al,BYTE PTR [rax]
   1400324d0:	(bad)  
   1400324d1:	xor    al,BYTE PTR [rdx]
   1400324d3:	xor    BYTE PTR [rcx],al
   1400324d5:	(bad)  
   1400324d6:	add    al,BYTE PTR [rax]
   1400324d8:	(bad)  
   1400324d9:	xor    al,BYTE PTR [rdx]
   1400324db:	xor    BYTE PTR [rcx],al
   1400324dd:	(bad)  
   1400324de:	add    al,BYTE PTR [rax]
   1400324e0:	(bad)  
   1400324e1:	xor    al,BYTE PTR [rdx]
   1400324e3:	xor    BYTE PTR [rcx],al
   1400324e5:	or     al,BYTE PTR [rax+rax*1]
   1400324e8:	or     dh,BYTE PTR [rsi+rax*1]
   1400324eb:	add    BYTE PTR [rdx],cl
   1400324ed:	xor    al,BYTE PTR [rsi]
   1400324ef:	jo     0x1400324f2
   1400324f1:	(bad)  
   1400324f2:	add    al,BYTE PTR [rax]
   1400324f4:	(bad)  
   1400324f5:	xor    al,BYTE PTR [rdx]
   1400324f7:	xor    BYTE PTR [rcx],al
   1400324f9:	sbb    DWORD PTR [rdx],ecx
   1400324fb:	add    BYTE PTR [rcx],bl
   1400324fd:	je     0x14003250a
   1400324ff:	add    BYTE PTR [rcx],bl
   140032501:	or     al,BYTE PTR fs:[rax]
   140032504:	sbb    DWORD PTR [rcx+rcx*1+0x0],edx
   140032508:	sbb    DWORD PTR [rax+rcx*1],esi
   14003250b:	add    BYTE PTR [rcx],bl
   14003250d:	push   rdx
   14003250e:	adc    eax,0xa1901f0
   140032513:	add    BYTE PTR [rcx],bl
   140032515:	je     0x140032524
   140032517:	add    BYTE PTR [rcx],bl
   140032519:	fs or  al,0x0
   14003251c:	sbb    DWORD PTR [rbx+rcx*1+0x0],edx
   140032520:	sbb    DWORD PTR [rdx+rcx*1],esi
   140032523:	add    BYTE PTR [rcx],bl
   140032525:	jb     0x14003253c
   140032527:	lock add DWORD PTR [rcx+rax*1],eax
   14003252b:	add    BYTE PTR [rdx+rax*2],al
   14003252e:	add    BYTE PTR [rax],al
   140032530:	add    DWORD PTR [rcx+rax*1],eax
   140032533:	add    BYTE PTR [rdx+rax*2],al
   140032536:	add    BYTE PTR [rax],al
   140032538:	add    DWORD PTR [rax+rcx*1],edx
   14003253b:	add    BYTE PTR [rsp+riz*2],dl
   14003253e:	or     BYTE PTR [rax],al
   140032540:	adc    al,0x54
   140032542:	(bad)  
   140032543:	add    BYTE PTR [rsp+rsi*1],dl
   140032546:	(bad)  
   140032547:	add    BYTE PTR [rdx+rsi*1],dl
   14003254a:	adc    BYTE PTR [rax+0x1],dh
   14003254d:	or     al,BYTE PTR [rax+rax*1]
   140032550:	or     dh,BYTE PTR [rsi+rax*1]
   140032553:	add    BYTE PTR [rdx],cl
   140032555:	xor    al,BYTE PTR [rsi]
   140032557:	jo     0x14003256a
   140032559:	sbb    al,0xa
   14003255b:	add    BYTE PTR [rsp+riz*2],bl
   14003255e:	ltr    WORD PTR [rsp+rsi*1]
   140032562:	(bad)  
   140032563:	add    BYTE PTR [rdx+rsi*2],bl
   140032566:	sbb    al,dh
   140032568:	(bad)  
   140032569:	loopne 0x14003257f
   14003256b:	rcl    BYTE PTR [rdx],1
   14003256d:	rcl    BYTE PTR [rax],0x70
   140032570:	adc    BYTE PTR [rcx+0x10000],al
   140032576:	add    BYTE PTR [rax],al
   140032578:	mov    esp,DWORD PTR [rdx+0x0]
   14003257b:	add    BYTE PTR [rdi+0x1c000063],bl
   140032581:	movsxd eax,DWORD PTR [rdx]
   140032583:	add    BYTE PTR [rax],al
   140032585:	add    BYTE PTR [rax],al
   140032587:	add    BYTE PTR [rcx],al
   140032589:	(bad)  
   14003258a:	add    al,BYTE PTR [rax]
   14003258c:	(bad)  
   14003258d:	xor    al,BYTE PTR [rdx]
   14003258f:	push   rax
   140032590:	add    DWORD PTR [rsi],eax
   140032592:	add    al,BYTE PTR [rax]
   140032594:	(bad)  
   140032595:	xor    al,BYTE PTR [rdx]
   140032597:	xor    BYTE PTR [rcx],al
   140032599:	or     al,BYTE PTR [rdx]
   14003259b:	add    BYTE PTR [rdx],cl
   14003259d:	xor    al,BYTE PTR [rsi]
   14003259f:	xor    BYTE PTR [rcx],al
   1400325a1:	clts   
   1400325a3:	add    BYTE PTR [rdi],cl
   1400325a5:	fs (bad) 
   1400325a7:	add    BYTE PTR [rdi],cl
   1400325a9:	xor    al,0x6
   1400325ab:	add    BYTE PTR [rdi],cl
   1400325ad:	xor    cl,BYTE PTR [rbx]
   1400325af:	jo     0x1400325b2
   1400325b1:	(bad)  
   1400325b2:	add    al,BYTE PTR [rax]
   1400325b4:	(bad)  
   1400325b5:	xor    al,BYTE PTR [rdx]
   1400325b7:	xor    BYTE PTR [rcx],al
   1400325b9:	(bad)  
   1400325ba:	add    al,BYTE PTR [rax]
   1400325bc:	(bad)  
   1400325bd:	xchg   edx,eax
   1400325be:	add    dh,BYTE PTR [rax]
   1400325c0:	add    DWORD PTR [rcx+rax*1],eax
   1400325c3:	add    BYTE PTR [rdx+rax*2],al
   1400325c6:	add    BYTE PTR [rax],al
   1400325c8:	add    DWORD PTR [rdx],edx
   1400325ca:	(bad)  
   1400325cb:	add    BYTE PTR [rdx],dl
   1400325cd:	je     0x1400325df
   1400325cf:	add    BYTE PTR [rdx],dl
   1400325d1:	xor    al,0xf
   1400325d3:	add    BYTE PTR [rdx],dl
   1400325d5:	mov    dl,0xb
   1400325d7:	push   rax
   1400325d8:	add    DWORD PTR [rax+rcx*1],edx
   1400325db:	add    BYTE PTR [rsp+riz*2],dl
   1400325de:	or     BYTE PTR [rax],al
   1400325e0:	adc    al,0x54
   1400325e2:	(bad)  
   1400325e3:	add    BYTE PTR [rsp+rsi*1],dl
   1400325e6:	(bad)  
   1400325e7:	add    BYTE PTR [rdx+rsi*1],dl
   1400325ea:	adc    BYTE PTR [rax+0x1],dh
   1400325ed:	adc    cl,BYTE PTR [rax]
   1400325ef:	add    BYTE PTR [rdx],dl
   1400325f1:	push   rsp
   1400325f2:	or     DWORD PTR [rax],eax
   1400325f4:	adc    dh,BYTE PTR [rax+rcx*1]
   1400325f7:	add    BYTE PTR [rdx],dl
   1400325f9:	xor    cl,BYTE PTR [rsi]
   1400325fb:	loopne 0x140032609
   1400325fd:	jo     0x14003260a
   1400325ff:	(bad)  
   140032600:	add    DWORD PTR [rdx],ecx
   140032602:	add    al,0x0
   140032604:	or     dh,BYTE PTR [rsi+rax*1]
   140032607:	add    BYTE PTR [rdx],cl
   140032609:	xor    al,BYTE PTR [rsi]
   14003260b:	jo     0x14003260e
   14003260d:	(bad)  
   14003260e:	add    al,BYTE PTR [rax]
   140032610:	(bad)  
   140032611:	xor    al,BYTE PTR [rdx]
   140032613:	xor    BYTE PTR [rcx],al
   140032615:	(bad)  
   140032616:	add    al,BYTE PTR [rax]
   140032618:	(bad)  
   140032619:	xor    al,BYTE PTR [rdx]
   14003261b:	xor    BYTE PTR [rcx],bl
   14003261d:	and    al,BYTE PTR [rbx]
   14003261f:	add    BYTE PTR [rcx],dl
   140032621:	add    DWORD PTR [rsi+0x500200],esi
   140032627:	add    BYTE PTR [rax],al
   140032629:	rol    BYTE PTR [rax],1
   14003262b:	add    BYTE PTR [rax+0x9000005],ah
   140032631:	sbb    BYTE PTR [rdx],al
   140032633:	add    BYTE PTR [rax],bl
   140032635:	mov    dl,0x14
   140032637:	xor    BYTE PTR [rax],dl
   140032639:	add    DWORD PTR [rax],0x100
   14003263f:	add    BYTE PTR [rdi-0x58ffff93],al
   140032645:	ins    DWORD PTR es:[rdi],dx
   140032646:	add    BYTE PTR [rax],al
   140032648:	rex movsxd eax,DWORD PTR [rdx]
   14003264b:	add    BYTE PTR [rdi+0x100006d],ah
   140032651:	(bad)  
   140032652:	add    al,BYTE PTR [rax]
   140032654:	(bad)  
   140032655:	jb     0x140032659
   140032657:	push   rax
   140032658:	add    DWORD PTR [rcx+rax*1],eax
   14003265b:	add    BYTE PTR [rdx+rax*2],al
   14003265e:	add    BYTE PTR [rax],al
   140032660:	add    DWORD PTR [rcx+rax*1],eax
   140032663:	add    BYTE PTR [rdx+rax*2],al
   140032666:	add    BYTE PTR [rax],al
   140032668:	add    DWORD PTR [rsi],eax
   14003266a:	add    al,BYTE PTR [rax]
   14003266c:	(bad)  
   14003266d:	xor    al,BYTE PTR [rdx]
   14003266f:	xor    BYTE PTR [rcx],al
   140032671:	(bad)  
   140032672:	add    al,BYTE PTR [rax]
   140032674:	(bad)  
   140032675:	xor    al,BYTE PTR [rdx]
   140032677:	xor    BYTE PTR [rcx],al
   140032679:	sbb    eax,0x741d000c
   14003267e:	or     eax,DWORD PTR [rax]
   140032680:	sbb    eax,0x1d000a64
   140032685:	push   rsp
   140032686:	or     DWORD PTR [rax],eax
   140032688:	sbb    eax,0x1d000834
   14003268d:	xor    bl,BYTE PTR [rcx]
   14003268f:	lock (bad) 
   140032691:	loopne 0x1400326a8
   140032693:	rol    BYTE PTR [rcx],0x16
   140032696:	or     al,BYTE PTR [rax]
   140032698:	(bad)  
   140032699:	push   rsp
   14003269a:	or     al,0x0
   14003269c:	(bad)  
   14003269d:	xor    al,0xb
   14003269f:	add    BYTE PTR [rsi],dl
   1400326a1:	xor    dl,BYTE PTR [rdx]
   1400326a3:	lock adc al,ah
   1400326a6:	(bad)  
   1400326a7:	ror    BYTE PTR [rax+rsi*2],0xb
   1400326ab:	(bad)  
   1400326ac:	add    DWORD PTR [rdi],ecx
   1400326ae:	(bad)  
   1400326af:	add    BYTE PTR [rdi],cl
   1400326b1:	fs (bad) 
   1400326b3:	add    BYTE PTR [rdi],cl
   1400326b5:	xor    al,0x6
   1400326b7:	add    BYTE PTR [rdi],cl
   1400326b9:	xor    cl,BYTE PTR [rbx]
   1400326bb:	jo     0x1400326be
   1400326bd:	clts   
   1400326bf:	add    BYTE PTR [rdi],cl
   1400326c1:	fs or  al,0x0
   1400326c4:	sysenter 
   1400326c6:	or     eax,DWORD PTR [rax]
   1400326c8:	(bad)  
   1400326ca:	or     esi,DWORD PTR [rax+0x1]
   1400326cd:	clts   
   1400326cf:	add    BYTE PTR [rdi],cl
   1400326d1:	fs or  al,0x0
   1400326d4:	sysenter 
   1400326d6:	or     eax,DWORD PTR [rax]
   1400326d8:	(bad)  
   1400326da:	or     esi,DWORD PTR [rax+0x1]
   1400326dd:	adc    al,0x8
   1400326df:	add    BYTE PTR [rsp+riz*2],dl
   1400326e2:	or     al,0x0
   1400326e4:	adc    al,0x54
   1400326e6:	or     eax,DWORD PTR [rax]
   1400326e8:	adc    al,0x34
   1400326ea:	or     al,BYTE PTR [rax]
   1400326ec:	adc    al,0x72
   1400326ee:	adc    BYTE PTR [rax+0x1],dh
   1400326f1:	add    BYTE PTR [rax],al
   1400326f3:	add    BYTE PTR [rcx],al
   1400326f5:	add    al,0x1
   1400326f7:	add    BYTE PTR [rdx+rax*2],al
   1400326fa:	add    BYTE PTR [rax],al
   1400326fc:	add    DWORD PTR [rcx+rax*1],eax
   1400326ff:	add    BYTE PTR [rdx+rax*2],al
   140032702:	add    BYTE PTR [rax],al
   140032704:	add    DWORD PTR [rcx+rax*1],eax
   140032707:	add    BYTE PTR [rdx+rax*2],al
   14003270a:	add    BYTE PTR [rax],al
   14003270c:	add    DWORD PTR [rdx],ecx
   14003270e:	add    al,0x0
   140032710:	or     dh,BYTE PTR [rsi+rax*1]
   140032713:	add    BYTE PTR [rdx],cl
   140032715:	xor    al,BYTE PTR [rsi]
   140032717:	jo     0x14003271a
   140032719:	(bad)  
   14003271a:	add    al,BYTE PTR [rax]
   14003271c:	(bad)  
   14003271d:	xor    al,BYTE PTR [rdx]
   14003271f:	xor    BYTE PTR [rcx],cl
   140032721:	clts   
   140032723:	add    BYTE PTR [rdi],cl
   140032725:	or     al,BYTE PTR fs:[rax]
   140032728:	sysenter 
   14003272a:	or     DWORD PTR [rax],eax
   14003272c:	rsqrtps xmm1,XMMWORD PTR [rbx]
   14003272f:	jo     0x140032741
   140032731:	add    DWORD PTR [rax],0x100
   140032737:	add    bl,bl
   140032739:	jne    0x14003273b
   14003273b:	add    BYTE PTR [rax+0x76],dh
   14003273e:	add    BYTE PTR [rax],al
   140032740:	xchg   BYTE PTR [rbx+0x2],ah
   140032743:	add    BYTE PTR [rax+0x76],dh
   140032746:	add    BYTE PTR [rax],al
   140032748:	add    DWORD PTR [rsi],eax
   14003274a:	add    al,BYTE PTR [rax]
   14003274c:	(bad)  
   14003274d:	xor    al,BYTE PTR [rdx]
   14003274f:	push   rax
   140032750:	add    DWORD PTR [rcx+rax*1],eax
   140032753:	add    BYTE PTR [rdx+rax*2],al
   140032756:	add    BYTE PTR [rax],al
   140032758:	add    DWORD PTR [rax],eax
   14003275a:	add    BYTE PTR [rax],al
   14003275c:	add    DWORD PTR [rsi],eax
   14003275e:	add    al,BYTE PTR [rax]
   140032760:	(bad)  
   140032761:	xor    al,BYTE PTR [rdx]
   140032763:	xor    BYTE PTR [rcx],al
   140032765:	(bad)  
   140032766:	add    al,BYTE PTR [rax]
   140032768:	(bad)  
   140032769:	xor    al,BYTE PTR [rdx]
   14003276b:	xor    BYTE PTR [rcx],al
   14003276d:	or     al,BYTE PTR [rax+rax*1]
   140032770:	or     dh,BYTE PTR [rsi+rax*1]
   140032773:	add    BYTE PTR [rdx],cl
   140032775:	xor    al,BYTE PTR [rsi]
   140032777:	jo     0x14003277a
   140032779:	adc    al,0x6
   14003277b:	add    BYTE PTR [rsp+riz*2],dl
   14003277e:	(bad)  
   14003277f:	add    BYTE PTR [rsp+rsi*1],dl
   140032782:	(bad)  
   140032783:	add    BYTE PTR [rdx+rsi*1],dl
   140032786:	adc    BYTE PTR [rax+0x1],dh
   140032789:	(bad)  
   14003278a:	add    al,BYTE PTR [rax]
   14003278c:	(bad)  
   14003278d:	xor    al,BYTE PTR [rdx]
   14003278f:	xor    BYTE PTR [rcx],al
   140032791:	or     al,BYTE PTR [rax+rax*1]
   140032794:	or     dh,BYTE PTR [rsi+rax*1]
   140032797:	add    BYTE PTR [rdx],cl
   140032799:	xor    al,BYTE PTR [rsi]
   14003279b:	jo     0x14003279e
   14003279d:	or     al,BYTE PTR [rdx]
   14003279f:	add    BYTE PTR [rdx],cl
   1400327a1:	xor    al,BYTE PTR [rsi]
   1400327a3:	xor    BYTE PTR [rcx],al
   1400327a5:	(bad)  
   1400327a6:	add    al,BYTE PTR [rax]
   1400327a8:	(bad)  
   1400327a9:	xor    al,BYTE PTR [rdx]
   1400327ab:	xor    BYTE PTR [rcx],al
   1400327ad:	or     al,BYTE PTR [rax+rax*1]
   1400327b0:	or     dh,BYTE PTR [rsi+rax*1]
   1400327b3:	add    BYTE PTR [rdx],cl
   1400327b5:	xor    al,BYTE PTR [rsi]
   1400327b7:	jo     0x1400327ba
   1400327b9:	or     al,BYTE PTR [rdx]
   1400327bb:	add    BYTE PTR [rdx],cl
   1400327bd:	xor    al,BYTE PTR [rsi]
   1400327bf:	xor    BYTE PTR [rcx],al
   1400327c1:	(bad)  
   1400327c2:	add    al,BYTE PTR [rax]
   1400327c4:	(bad)  
   1400327c5:	xor    al,BYTE PTR [rdx]
   1400327c7:	xor    BYTE PTR [rcx],al
   1400327c9:	or     al,BYTE PTR [rax+rax*1]
   1400327cc:	or     dh,BYTE PTR [rsi+rax*1]
   1400327cf:	add    BYTE PTR [rdx],cl
   1400327d1:	xor    al,BYTE PTR [rsi]
   1400327d3:	jo     0x1400327d6
   1400327d5:	(bad)  
   1400327d6:	add    al,BYTE PTR [rax]
   1400327d8:	(bad)  
   1400327d9:	xor    al,BYTE PTR [rdx]
   1400327db:	xor    BYTE PTR [rcx],al
   1400327dd:	(bad)  
   1400327de:	add    al,BYTE PTR [rax]
   1400327e0:	(bad)  
   1400327e1:	xor    al,BYTE PTR [rdx]
   1400327e3:	xor    BYTE PTR [rcx],al
   1400327e5:	or     al,BYTE PTR [rax+rax*1]
   1400327e8:	or     dh,BYTE PTR [rsi+rax*1]
   1400327eb:	add    BYTE PTR [rdx],cl
   1400327ed:	xor    al,BYTE PTR [rsi]
   1400327ef:	jo     0x1400327f2
   1400327f1:	add    al,0x1
   1400327f3:	add    BYTE PTR [rdx+rax*2],al
   1400327f6:	add    BYTE PTR [rax],al
   1400327f8:	sbb    DWORD PTR [rcx+rcx*1],esp
   1400327fb:	add    BYTE PTR [rdx],dl
   1400327fd:	add    DWORD PTR [rdx],ebx
   1400327ff:	add    BYTE PTR [rbx],cl
   140032801:	lock or eax,esp
   140032804:	(bad)  
   140032805:	rol    BYTE PTR [rip+0x3600470],0x50        # 0x143632c7c
   14003280c:	add    dh,BYTE PTR [rax]
   14003280e:	add    BYTE PTR [rax],al
   140032810:	add    al,dl
   140032812:	add    BYTE PTR [rax],al
   140032814:	rol    BYTE PTR [rax],0x0
   140032817:	add    BYTE PTR [rcx],al
   140032819:	or     al,BYTE PTR [rdx]
   14003281b:	add    BYTE PTR [rdx],cl
   14003281d:	push   rdx
   14003281e:	(bad)  
   14003281f:	xor    BYTE PTR [rcx],al
   140032821:	(bad)  
   140032822:	add    al,BYTE PTR [rax]
   140032824:	(bad)  
   140032825:	xor    al,BYTE PTR [rdx]
   140032827:	xor    BYTE PTR [rcx],al
   140032829:	or     al,BYTE PTR [rax+rax*1]
   14003282c:	or     dh,BYTE PTR [rsi+rax*1]
   14003282f:	add    BYTE PTR [rdx],cl
   140032831:	xor    al,BYTE PTR [rsi]
   140032833:	jo     0x140032836
   140032835:	add    al,0x1
   140032837:	add    BYTE PTR [rdx+rax*2],al
   14003283a:	add    BYTE PTR [rax],al
   14003283c:	add    DWORD PTR [rsi],eax
   14003283e:	add    al,BYTE PTR [rax]
   140032840:	(bad)  
   140032841:	xor    al,BYTE PTR [rdx]
   140032843:	xor    BYTE PTR [rcx],al
   140032845:	sbb    DWORD PTR [rdx],ecx
   140032847:	add    BYTE PTR [rcx],bl
   140032849:	je     0x140032854
   14003284b:	add    BYTE PTR [rcx],bl
   14003284d:	or     BYTE PTR fs:[rax],al
   140032850:	sbb    DWORD PTR [rdi+rax*1+0x0],edx
   140032854:	sbb    DWORD PTR [rsi+rax*1],esi
   140032857:	add    BYTE PTR [rcx],bl
   140032859:	xor    dl,BYTE PTR [rip+0xa1901e0]        # 0x14a1c2a3f
   14003285f:	add    BYTE PTR [rcx],bl
   140032861:	je     0x14003286c
   140032863:	add    BYTE PTR [rcx],bl
   140032865:	or     BYTE PTR fs:[rax],al
   140032868:	sbb    DWORD PTR [rdi+rax*1+0x0],edx
   14003286c:	sbb    DWORD PTR [rsi+rax*1],esi
   14003286f:	add    BYTE PTR [rcx],bl
   140032871:	xor    dl,BYTE PTR [rip+0xa1901e0]        # 0x14a1c2a57
   140032877:	add    BYTE PTR [rcx],bl
   140032879:	je     0x140032884
   14003287b:	add    BYTE PTR [rcx],bl
   14003287d:	or     BYTE PTR fs:[rax],al
   140032880:	sbb    DWORD PTR [rdi+rax*1+0x0],edx
   140032884:	sbb    DWORD PTR [rsi+rax*1],esi
   140032887:	add    BYTE PTR [rcx],bl
   140032889:	xor    dl,BYTE PTR [rip+0xa1801e0]        # 0x14a1b2a6f
   14003288f:	add    BYTE PTR [rax],bl
   140032891:	or     al,BYTE PTR fs:[rax]
   140032894:	sbb    BYTE PTR [rcx+rcx*1+0x0],dl
   140032898:	sbb    BYTE PTR [rax+rcx*1],dh
   14003289b:	add    BYTE PTR [rax],bl
   14003289d:	xor    dl,BYTE PTR [rax+rsi*8]
   1400328a0:	adc    ah,al
   1400328a2:	adc    BYTE PTR [rax+0x1],dh
   1400328a5:	sbb    al,0xc
   1400328a7:	add    BYTE PTR [rsp+riz*2],bl
   1400328aa:	adc    BYTE PTR [rax],al
   1400328ac:	sbb    al,0x54
   1400328ae:	ltr    WORD PTR [rsp+rsi*1]
   1400328b2:	(bad)  
   1400328b3:	add    BYTE PTR [rdx+rsi*2],bl
   1400328b6:	sbb    al,dh
   1400328b8:	(bad)  
   1400328b9:	loopne 0x1400328cf
   1400328bb:	rcl    BYTE PTR [rdx],1
   1400328bd:	rcl    BYTE PTR [rax],0x70
   1400328c0:	add    DWORD PTR [rax+rcx*1],edx
   1400328c3:	add    BYTE PTR [rsp+riz*2],dl
   1400328c6:	(bad)  
   1400328c7:	add    BYTE PTR [rsp+rdx*2],dl
   1400328ca:	add    eax,0x4341400
   1400328cf:	add    BYTE PTR [rdx+rdx*1],dl
   1400328d2:	adc    BYTE PTR [rax+0x1],dh
   1400328d5:	add    al,0x1
   1400328d7:	add    BYTE PTR [rdx+riz*2],al
   1400328da:	add    BYTE PTR [rax],al
   1400328dc:	add    DWORD PTR [rcx+rax*1],eax
   1400328df:	add    BYTE PTR [rdx+riz*2],al
   1400328e2:	add    BYTE PTR [rax],al
   1400328e4:	add    DWORD PTR [rcx+rax*1],eax
   1400328e7:	add    BYTE PTR [rdx+rax*2],al
   1400328ea:	add    BYTE PTR [rax],al
   1400328ec:	sbb    DWORD PTR [rdi],ebp
   1400328ee:	or     DWORD PTR [rax],eax
   1400328f0:	(bad)  
   1400328f1:	je     0x1400328ae
   1400328f3:	add    BYTE PTR [rsi],bl
   1400328f5:	fs mov edx,0xb9341e00
   1400328fb:	add    BYTE PTR [rsi],bl
   1400328fd:	add    DWORD PTR [rsi+0x501000],esi
   140032903:	add    BYTE PTR [rax],al
   140032905:	rol    BYTE PTR [rax],1
   140032907:	add    BYTE PTR [rax+0x1000005],ah
   14003290d:	or     al,BYTE PTR [rax+rax*1]
   140032910:	or     dh,BYTE PTR [rsi+rax*1]
   140032913:	add    BYTE PTR [rdx],cl
   140032915:	xor    al,BYTE PTR [rsi]
   140032917:	jo     0x14003291a
   140032919:	adc    al,0x8
   14003291b:	add    BYTE PTR [rsp+riz*2],dl
   14003291e:	or     al,BYTE PTR [rax]
   140032920:	adc    al,0x54
   140032922:	or     DWORD PTR [rax],eax
   140032924:	adc    al,0x34
   140032926:	or     BYTE PTR [rax],al
   140032928:	adc    al,0x52
   14003292a:	adc    BYTE PTR [rax+0x1],dh
   14003292d:	add    al,0x1
   14003292f:	add    BYTE PTR [rdx+riz*2],al
   140032932:	add    BYTE PTR [rax],al
   140032934:	add    DWORD PTR [rdx],ecx
   140032936:	add    al,0x0
   140032938:	or     dh,BYTE PTR [rsi+rax*1]
   14003293b:	add    BYTE PTR [rdx],cl
   14003293d:	xor    al,BYTE PTR [rsi]
   14003293f:	jo     0x140032942
   140032941:	or     al,BYTE PTR [rax+rax*1]
   140032944:	or     dh,BYTE PTR [rsi+rax*1]
   140032947:	add    BYTE PTR [rdx],cl
   140032949:	xor    al,BYTE PTR [rsi]
   14003294b:	jo     0x14003294e
   14003294d:	or     al,BYTE PTR [rax+rax*1]
   140032950:	or     dh,BYTE PTR [rsi+rax*1]
   140032953:	add    BYTE PTR [rdx],cl
   140032955:	xor    al,BYTE PTR [rsi]
   140032957:	jo     0x14003296a
   140032959:	adc    BYTE PTR [rsi],al
   14003295b:	add    BYTE PTR [rax],dl
   14003295d:	je     0x140032966
   14003295f:	add    BYTE PTR [rax],dl
   140032961:	xor    al,0x6
   140032963:	add    BYTE PTR [rax],dl
   140032965:	xor    cl,BYTE PTR [rax+riz*8]
   140032968:	adc    BYTE PTR [rcx+0x10000],al
   14003296e:	add    BYTE PTR [rax],al
   140032970:	ror    BYTE PTR [rax-0x770b0000],cl
   140032976:	add    BYTE PTR [rax],al
   140032978:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140032979:	movsxd eax,DWORD PTR [rdx]
   14003297b:	add    BYTE PTR [rax],al
   14003297d:	add    BYTE PTR [rax],al
   14003297f:	add    BYTE PTR [rcx],al
   140032981:	(bad)  
   140032982:	add    al,BYTE PTR [rax]
   140032984:	(bad)  
   140032985:	xor    al,BYTE PTR [rdx]
   140032987:	push   rax
   140032988:	add    DWORD PTR [rdi],ecx
   14003298a:	(bad)  
   14003298b:	add    BYTE PTR [rdi],cl
   14003298d:	fs (bad) 
   14003298f:	add    BYTE PTR [rdi],cl
   140032991:	xor    al,0x6
   140032993:	add    BYTE PTR [rdi],cl
   140032995:	xor    cl,BYTE PTR [rbx]
   140032997:	jo     0x14003299a
   140032999:	adc    al,0x8
   14003299b:	add    BYTE PTR [rsp+riz*2],dl
   14003299e:	or     BYTE PTR [rax],al
   1400329a0:	adc    al,0x54
   1400329a2:	(bad)  
   1400329a3:	add    BYTE PTR [rsp+rsi*1],dl
   1400329a6:	(bad)  
   1400329a7:	add    BYTE PTR [rdx+rsi*1],dl
   1400329aa:	adc    BYTE PTR [rax+0x1],dh
   1400329ad:	(bad)  
   1400329ae:	add    al,BYTE PTR [rax]
   1400329b0:	(bad)  
   1400329b1:	xor    al,BYTE PTR [rdx]
   1400329b3:	xor    BYTE PTR [rcx],al
   1400329b5:	(bad)  
   1400329b6:	add    al,BYTE PTR [rax]
   1400329b8:	(bad)  
   1400329b9:	xor    al,BYTE PTR [rdx]
   1400329bb:	xor    BYTE PTR [rcx],al
   1400329bd:	(bad)  
   1400329be:	add    al,BYTE PTR [rax]
   1400329c0:	(bad)  
   1400329c1:	add    DWORD PTR [rbx],edx
   1400329c3:	add    BYTE PTR [rcx],al
   1400329c5:	(bad)  
   1400329c6:	add    al,BYTE PTR [rax]
   1400329c8:	(bad)  
   1400329c9:	xor    al,BYTE PTR [rdx]
   1400329cb:	xor    BYTE PTR [rcx],al
   1400329cd:	(bad)  
   1400329ce:	add    al,BYTE PTR [rax]
   1400329d0:	(bad)  
   1400329d1:	xor    al,BYTE PTR [rdx]
   1400329d3:	xor    BYTE PTR [rcx],al
   1400329d5:	or     al,BYTE PTR [rax+rax*1]
   1400329d8:	or     dh,BYTE PTR [rcx*1+0x6720a00]
   1400329df:	jo     0x1400329e2
   1400329e1:	or     BYTE PTR [rax+rax*1],al
   1400329e4:	or     BYTE PTR [rdx+0x4],dh
   1400329e7:	jo     0x1400329ec
   1400329e9:	(bad)  
   1400329ea:	add    dh,BYTE PTR [rax]
   1400329ec:	add    DWORD PTR [rcx+rax*1],eax
   1400329ef:	add    BYTE PTR [rdx+rax*2],al
   1400329f2:	add    BYTE PTR [rax],al
   1400329f4:	add    DWORD PTR [rcx+rax*1],eax
   1400329f7:	add    BYTE PTR [rdx+rax*2],al
   1400329fa:	add    BYTE PTR [rax],al
   1400329fc:	add    DWORD PTR [rcx+rax*1],eax
   1400329ff:	add    BYTE PTR [rdx+rax*2],al
   140032a02:	add    BYTE PTR [rax],al
   140032a04:	add    DWORD PTR [rcx+rax*1],eax
   140032a07:	add    BYTE PTR [rdx+rax*2],al
   140032a0a:	add    BYTE PTR [rax],al
   140032a0c:	add    DWORD PTR [rcx+rax*1],eax
   140032a0f:	add    BYTE PTR [rdx+rax*2],al
   140032a12:	add    BYTE PTR [rax],al
   140032a14:	add    DWORD PTR [rcx+rax*1],eax
   140032a17:	add    BYTE PTR [rdx+rax*2],al
   140032a1a:	add    BYTE PTR [rax],al
   140032a1c:	add    DWORD PTR [rcx+rax*1],eax
   140032a1f:	add    BYTE PTR [rdx+rax*2],al
   140032a22:	add    BYTE PTR [rax],al
   140032a24:	add    DWORD PTR [rcx+rax*1],eax
   140032a27:	add    BYTE PTR [rdx+rax*2],al
   140032a2a:	add    BYTE PTR [rax],al
   140032a2c:	add    DWORD PTR [rcx+rax*1],eax
   140032a2f:	add    BYTE PTR [rdx+rax*2],al
   140032a32:	add    BYTE PTR [rax],al
   140032a34:	add    DWORD PTR [rcx+rax*1],eax
   140032a37:	add    BYTE PTR [rdx+rax*2],al
   140032a3a:	add    BYTE PTR [rax],al
   140032a3c:	add    DWORD PTR [rcx+rax*1],eax
   140032a3f:	add    BYTE PTR [rdx+rax*2],al
   140032a42:	add    BYTE PTR [rax],al
   140032a44:	add    DWORD PTR [rcx+rax*1],eax
   140032a47:	add    BYTE PTR [rdx+rax*2],al
   140032a4a:	add    BYTE PTR [rax],al
   140032a4c:	add    DWORD PTR [rcx+rax*1],eax
   140032a4f:	add    BYTE PTR [rdx+rax*2],al
   140032a52:	add    BYTE PTR [rax],al
   140032a54:	add    DWORD PTR [rsi],eax
   140032a56:	add    al,BYTE PTR [rax]
   140032a58:	(bad)  
   140032a59:	xor    al,BYTE PTR [rdx]
   140032a5b:	xor    BYTE PTR [rcx],al
   140032a5d:	add    al,0x1
   140032a5f:	add    BYTE PTR [rdx+rax*2],al
   140032a62:	add    BYTE PTR [rax],al
   140032a64:	add    DWORD PTR [rcx+rax*1],eax
   140032a67:	add    BYTE PTR [rdx+rax*2],al
   140032a6a:	add    BYTE PTR [rax],al
   140032a6c:	sbb    DWORD PTR [rip+0x641b000b],ebp        # 0x1a41e2a7d
   140032a72:	push   rcx
   140032a73:	add    BYTE PTR [rbx],bl
   140032a75:	push   rsp
   140032a76:	push   rax
   140032a77:	add    BYTE PTR [rbx],bl
   140032a79:	xor    al,0x4f
   140032a7b:	add    BYTE PTR [rbx],bl
   140032a7d:	add    DWORD PTR [rdx+0x0],ecx
   140032a80:	adc    al,0xf0
   140032a82:	adc    ah,al
   140032a84:	adc    BYTE PTR [rax+0x0],dh
   140032a87:	add    BYTE PTR [rax],al
   140032a89:	rol    BYTE PTR [rax],1
   140032a8b:	add    BYTE PTR [rax+0x2],al
   140032a8e:	add    BYTE PTR [rax],al
   140032a90:	add    DWORD PTR [rcx+rax*1],eax
   140032a93:	add    BYTE PTR [rdx+rax*2],al
   140032a96:	add    BYTE PTR [rax],al
   140032a98:	add    DWORD PTR [rsi],eax
   140032a9a:	add    al,BYTE PTR [rax]
   140032a9c:	(bad)  
   140032a9d:	xor    al,BYTE PTR [rdx]
   140032a9f:	xor    BYTE PTR [rcx],al
   140032aa1:	(bad)  
   140032aa2:	add    al,BYTE PTR [rax]
   140032aa4:	(bad)  
   140032aa5:	xor    al,BYTE PTR [rdx]
   140032aa7:	xor    BYTE PTR [rcx],al
   140032aa9:	add    al,0x1
   140032aab:	add    BYTE PTR [rdx+rax*2],al
   140032aae:	add    BYTE PTR [rax],al
   140032ab0:	add    DWORD PTR [rsi],eax
   140032ab2:	add    al,BYTE PTR [rax]
   140032ab4:	(bad)  
   140032ab5:	xor    al,BYTE PTR [rdx]
   140032ab7:	xor    BYTE PTR [rcx],al
   140032ab9:	(bad)  
   140032aba:	add    al,BYTE PTR [rax]
   140032abc:	(bad)  
   140032abd:	xor    al,BYTE PTR [rdx]
   140032abf:	xor    BYTE PTR [rcx],al
   140032ac1:	or     al,BYTE PTR [rax+rax*1]
   140032ac4:	or     dh,BYTE PTR [rsi+rax*1]
   140032ac7:	add    BYTE PTR [rdx],cl
   140032ac9:	xor    al,BYTE PTR [rsi]
   140032acb:	jo     0x140032ad6
   140032acd:	or     al,BYTE PTR [rax+rax*1]
   140032ad0:	or     dh,BYTE PTR [rsi+rax*1]
   140032ad3:	add    BYTE PTR [rdx],cl
   140032ad5:	xor    al,BYTE PTR [rsi]
   140032ad7:	jo     0x140032ae9
   140032ad9:	add    DWORD PTR [rax],0x100
   140032adf:	add    BYTE PTR [rbp-0x69],bh
   140032ae2:	add    BYTE PTR [rax],al
   140032ae4:	mov    al,0x97
   140032ae6:	add    BYTE PTR [rax],al
   140032ae8:	shl    BYTE PTR [rbx+0x2],1
   140032aeb:	add    BYTE PTR [rax+0x1000097],dh
   140032af1:	(bad)  
   140032af2:	add    al,BYTE PTR [rax]
   140032af4:	(bad)  
   140032af5:	xor    al,BYTE PTR [rdx]
   140032af7:	push   rax
   140032af8:	add    DWORD PTR [rdx],ecx
   140032afa:	add    al,0x0
   140032afc:	or     dh,BYTE PTR [rsi+rax*1]
   140032aff:	add    BYTE PTR [rdx],cl
   140032b01:	xor    al,BYTE PTR [rsi]
   140032b03:	jo     0x140032b0e
   140032b05:	add    al,0x1
   140032b07:	add    BYTE PTR [rdx+rax*2],al
   140032b0a:	add    BYTE PTR [rax],al
   140032b0c:	adc    BYTE PTR [rcx+0x10000],al
   140032b12:	add    BYTE PTR [rax],al
   140032b14:	(bad)  
   140032b15:	cwde   
   140032b16:	add    BYTE PTR [rax],al
   140032b18:	gs cwde 
   140032b1a:	add    BYTE PTR [rax],al
   140032b1c:	add    DWORD PTR [rax],eax
   140032b1e:	add    BYTE PTR [rax],al
   140032b20:	gs cwde 
   140032b22:	add    BYTE PTR [rax],al
   140032b24:	add    DWORD PTR [rcx+rax*1],eax
   140032b27:	add    BYTE PTR [rdx+rax*2],al
   140032b2a:	add    BYTE PTR [rax],al
   140032b2c:	or     DWORD PTR [rcx+rax*1],eax
   140032b2f:	add    BYTE PTR [rdx+rax*2],al
   140032b32:	add    BYTE PTR [rax],al
   140032b34:	adc    BYTE PTR [rcx+0x10000],al
   140032b3a:	add    BYTE PTR [rax],al
   140032b3c:	rex.X cwde 
   140032b3e:	add    BYTE PTR [rax],al
   140032b40:	rex.RX cwde 
   140032b42:	add    BYTE PTR [rax],al
   140032b44:	add    DWORD PTR [rax],eax
   140032b46:	add    BYTE PTR [rax],al
   140032b48:	rex.RX cwde 
   140032b4a:	add    BYTE PTR [rax],al
   140032b4c:	add    DWORD PTR [rcx+rax*1],eax
   140032b4f:	add    BYTE PTR [rdx+rax*2],al
   140032b52:	add    BYTE PTR [rax],al
   140032b54:	add    DWORD PTR [rcx+rax*1],eax
   140032b57:	add    BYTE PTR [rdx+rax*2],al
   140032b5a:	add    BYTE PTR [rax],al
   140032b5c:	add    DWORD PTR [rcx+rax*1],eax
   140032b5f:	add    BYTE PTR [rdx+rax*2],al
   140032b62:	add    BYTE PTR [rax],al
   140032b64:	adc    DWORD PTR [rip+0x74150008],edx        # 0x1b4182b72
   140032b6a:	or     BYTE PTR [rax],al
   140032b6c:	adc    eax,0x15000764
   140032b71:	xor    al,0x6
   140032b73:	add    BYTE PTR [rip+0x10e01132],dl        # 0x150e33cab
   140032b79:	add    DWORD PTR [rax],0x100
   140032b7f:	add    BYTE PTR [rsp+rbx*4+0x0],dl
   140032b83:	add    BYTE PTR [rax-0x63],ah
   140032b86:	add    BYTE PTR [rax],al
   140032b88:	and    al,0x64
   140032b8a:	add    al,BYTE PTR [rax]
   140032b8c:	add    BYTE PTR [rax],al
   140032b8e:	add    BYTE PTR [rax],al
   140032b90:	add    DWORD PTR [rsi],eax
   140032b92:	add    al,BYTE PTR [rax]
   140032b94:	(bad)  
   140032b95:	xor    al,BYTE PTR [rdx]
   140032b97:	push   rax
   140032b98:	adc    DWORD PTR [rdi],edx
   140032b9a:	or     al,BYTE PTR [rax]
   140032b9c:	(bad)  
   140032b9d:	lldt   WORD PTR fs:[rdi]
   140032ba1:	xor    al,0xe
   140032ba3:	add    BYTE PTR [rdi],dl
   140032ba5:	push   rdx
   140032ba6:	adc    esi,eax
   140032ba8:	adc    eax,esp
   140032baa:	(bad)  
   140032bac:	or     eax,0x10700bc0
   140032bb1:	add    DWORD PTR [rax],0x100
   140032bb7:	add    al,bl
   140032bb9:	(bad)  
   140032bba:	add    BYTE PTR [rax],al
   140032bbc:	pop    rdi
   140032bbd:	fwait
   140032bbe:	add    BYTE PTR [rax],al
   140032bc0:	(bad)  
   140032bc1:	add    al,BYTE PTR fs:[rax]
   140032bc4:	add    BYTE PTR [rax],al
   140032bc6:	add    BYTE PTR [rax],al
   140032bc8:	add    DWORD PTR [rsi],eax
   140032bca:	add    al,BYTE PTR [rax]
   140032bcc:	(bad)  
   140032bcd:	xor    al,BYTE PTR [rdx]
   140032bcf:	push   rax
   140032bd0:	adc    DWORD PTR [rdi],ecx
   140032bd2:	(bad)  
   140032bd3:	add    BYTE PTR [rdi],cl
   140032bd5:	fs (bad) 
   140032bd7:	add    BYTE PTR [rdi],cl
   140032bd9:	xor    al,0x6
   140032bdb:	add    BYTE PTR [rdi],cl
   140032bdd:	xor    cl,BYTE PTR [rbx]
   140032bdf:	jo     0x140032bf1
   140032be1:	add    DWORD PTR [rax],0x100
   140032be7:	add    BYTE PTR [rip+0x67000099],bl        # 0x1a7032c86
   140032bed:	cdq    
   140032bee:	add    BYTE PTR [rax],al
   140032bf0:	lock movsxd eax,DWORD PTR [rdx]
   140032bf3:	add    BYTE PTR [rax],al
   140032bf5:	add    BYTE PTR [rax],al
   140032bf7:	add    BYTE PTR [rcx],al
   140032bf9:	(bad)  
   140032bfa:	add    al,BYTE PTR [rax]
   140032bfc:	(bad)  
   140032bfd:	xor    al,BYTE PTR [rdx]
   140032bff:	push   rax
   140032c00:	add    DWORD PTR [rip+0x74150008],edx        # 0x1b4182c0e
   140032c06:	or     BYTE PTR [rax],al
   140032c08:	adc    eax,0x15000764
   140032c0d:	xor    al,0x6
   140032c0f:	add    BYTE PTR [rip+0x11e01132],dl        # 0x151e33d47
   140032c15:	or     al,BYTE PTR [rax+rax*1]
   140032c18:	or     dh,BYTE PTR [rdi+rax*1]
   140032c1b:	add    BYTE PTR [rdx],cl
   140032c1d:	xor    al,BYTE PTR [rsi]
   140032c1f:	jo     0x140032c31
   140032c21:	add    DWORD PTR [rax],0x100
   140032c27:	add    BYTE PTR [rsi],ch
   140032c29:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140032c2a:	add    BYTE PTR [rax],al
   140032c2c:	test   DWORD PTR [rax+rax*1+0x2643a00],esp
   140032c33:	add    BYTE PTR [rax],al
   140032c35:	add    BYTE PTR [rax],al
   140032c37:	add    BYTE PTR [rcx],al
   140032c39:	(bad)  
   140032c3a:	add    al,BYTE PTR [rax]
   140032c3c:	(bad)  
   140032c3d:	xor    al,BYTE PTR [rdx]
   140032c3f:	push   rax
   140032c40:	adc    DWORD PTR [rcx],ebx
   140032c42:	or     al,BYTE PTR [rax]
   140032c44:	sbb    esp,esp
   140032c46:	or     eax,DWORD PTR [rax]
   140032c48:	sbb    DWORD PTR [rdx+rcx*1+0x0],esi
   140032c4c:	sbb    DWORD PTR [rcx+rcx*1+0x0],esp
   140032c50:	sbb    DWORD PTR [rax+rcx*1],esi
   140032c53:	add    BYTE PTR [rcx],bl
   140032c55:	push   rdx
   140032c56:	adc    eax,0x8110f0
   140032c5b:	add    BYTE PTR [rcx],al
   140032c5d:	add    BYTE PTR [rax],al
   140032c5f:	add    BYTE PTR [rbx],ah
   140032c61:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140032c62:	add    BYTE PTR [rax],al
   140032c64:	fisub  DWORD PTR [rsi+0x64530000]
   140032c6a:	add    al,BYTE PTR [rax]
   140032c6c:	add    BYTE PTR [rax],al
   140032c6e:	add    BYTE PTR [rax],al
   140032c70:	add    DWORD PTR [rsi],eax
   140032c72:	add    al,BYTE PTR [rax]
   140032c74:	(bad)  
   140032c75:	xor    al,BYTE PTR [rdx]
   140032c77:	push   rax
   140032c78:	add    DWORD PTR [rcx+rax*1],eax
   140032c7b:	add    BYTE PTR [rdx+rax*4],al
   140032c7e:	add    BYTE PTR [rax],al
   140032c80:	add    DWORD PTR [rcx+rax*1],eax
   140032c83:	add    BYTE PTR [rdx+rax*2],al
   140032c86:	add    BYTE PTR [rax],al
   140032c88:	add    DWORD PTR [rsi],eax
   140032c8a:	add    al,BYTE PTR [rax]
   140032c8c:	(bad)  
   140032c8d:	xor    al,BYTE PTR [rdx]
   140032c8f:	xor    BYTE PTR [rcx],bl
   140032c91:	and    eax,0x5416000a
   140032c96:	adc    DWORD PTR [rax],eax
   140032c98:	(bad)  
   140032c99:	xor    al,0x10
   140032c9b:	add    BYTE PTR [rsi],dl
   140032c9d:	jb     0x140032cb1
   140032c9f:	lock adc al,ah
   140032ca2:	(bad)  
   140032ca3:	ror    BYTE PTR [rax+rsi*2],0xb
   140032ca7:	(bad)  
   140032ca8:	add    al,dl
   140032caa:	add    BYTE PTR [rax],al
   140032cac:	cmp    BYTE PTR [rax],al
   140032cae:	add    BYTE PTR [rax],al
   140032cb0:	add    DWORD PTR [rsi],eax
   140032cb2:	add    al,BYTE PTR [rax]
   140032cb4:	(bad)  
   140032cb5:	jb     0x140032cb9
   140032cb7:	xor    BYTE PTR [rcx],al
   140032cb9:	adc    al,0x8
   140032cbb:	add    BYTE PTR [rsp+riz*2],dl
   140032cbe:	or     BYTE PTR [rax],al
   140032cc0:	adc    al,0x54
   140032cc2:	(bad)  
   140032cc3:	add    BYTE PTR [rsp+rsi*1],dl
   140032cc6:	(bad)  
   140032cc7:	add    BYTE PTR [rdx+rsi*1],dl
   140032cca:	adc    BYTE PTR [rax+0x19],dh
   140032ccd:	sub    eax,DWORD PTR [rdi]
   140032ccf:	add    BYTE PTR [rdx],bl
   140032cd1:	je     0x140032c87
   140032cd3:	add    BYTE PTR [rdx],bl
   140032cd5:	xor    al,0xb3
   140032cd7:	add    BYTE PTR [rdx],bl
   140032cd9:	add    DWORD PTR [rax+0x500b00],esi
   140032cdf:	add    BYTE PTR [rax],al
   140032ce1:	rol    BYTE PTR [rax],1
   140032ce3:	add    BYTE PTR [rax+0x5],dh
   140032ce6:	add    BYTE PTR [rax],al
   140032ce8:	add    DWORD PTR [rax],edx
   140032cea:	(bad)  
   140032ceb:	add    BYTE PTR [rax],dl
   140032ced:	je     0x140032cf6
   140032cef:	add    BYTE PTR [rax],dl
   140032cf1:	xor    al,0x6
   140032cf3:	add    BYTE PTR [rax],dl
   140032cf5:	xor    cl,BYTE PTR [rax+riz*8]
   140032cf8:	add    DWORD PTR [rcx],ecx
   140032cfa:	add    al,BYTE PTR [rax]
   140032cfc:	or     DWORD PTR [rdx],esi
   140032cfe:	add    eax,0x40a0130
   140032d03:	add    BYTE PTR [rdx],cl
   140032d05:	xor    al,0x6
   140032d07:	add    BYTE PTR [rdx],cl
   140032d09:	xor    al,BYTE PTR [rsi]
   140032d0b:	jo     0x140032d0e
   140032d0d:	add    al,0x1
   140032d0f:	add    BYTE PTR [rdx+rax*2],al
   140032d12:	add    BYTE PTR [rax],al
   140032d14:	add    DWORD PTR [rsi],eax
   140032d16:	add    al,BYTE PTR [rax]
   140032d18:	(bad)  
   140032d19:	xor    al,BYTE PTR [rdx]
   140032d1b:	xor    BYTE PTR [rcx],cl
   140032d1d:	clts   
   140032d1f:	add    BYTE PTR [rdi],cl
   140032d21:	or     DWORD PTR fs:[rax],eax
   140032d24:	sysenter 
   140032d26:	or     BYTE PTR [rax],al
   140032d28:	rdmsr  
   140032d2a:	or     esi,DWORD PTR [rax+0x10]
   140032d2d:	add    DWORD PTR [rax],0x100
   140032d33:	add    BYTE PTR [rsi],dl
   140032d35:	lods   al,BYTE PTR ds:[rsi]
   140032d36:	add    BYTE PTR [rax],al
   140032d38:	sbb    eax,0x6c0000ac
   140032d3d:	add    al,BYTE PTR fs:[rax]
   140032d40:	sbb    eax,0x10000ac
   140032d45:	(bad)  
   140032d46:	add    al,BYTE PTR [rax]
   140032d48:	(bad)  
   140032d49:	xor    al,BYTE PTR [rdx]
   140032d4b:	push   rax
   140032d4c:	add    DWORD PTR [rcx+rax*1],eax
   140032d4f:	add    BYTE PTR [rdx+rax*2],al
   140032d52:	add    BYTE PTR [rax],al
   140032d54:	add    DWORD PTR [rsi],eax
   140032d56:	add    al,BYTE PTR [rax]
   140032d58:	(bad)  
   140032d59:	xor    al,BYTE PTR [rdx]
   140032d5b:	xor    BYTE PTR [rcx],al
   140032d5d:	or     BYTE PTR [rdx],al
   140032d5f:	add    BYTE PTR [rax],cl
   140032d61:	xchg   edx,eax
   140032d62:	add    al,0x30
   140032d64:	add    DWORD PTR [rdi],ecx
   140032d66:	(bad)  
   140032d67:	add    BYTE PTR [rdi],cl
   140032d69:	fs (bad) 
   140032d6b:	add    BYTE PTR [rdi],cl
   140032d6d:	xor    al,0x6
   140032d6f:	add    BYTE PTR [rdi],cl
   140032d71:	xor    cl,BYTE PTR [rbx]
   140032d73:	jo     0x140032d8e
   140032d75:	or     DWORD PTR es:[rax],eax
   140032d78:	sbb    BYTE PTR [rax+0xe],ch
   140032d7b:	add    BYTE PTR [rcx+rax*1],dl
   140032d7e:	(bad)  
   140032d7f:	add    BYTE PTR [rcx],cl
   140032d81:	loopne 0x140032d8a
   140032d83:	jo     0x140032d8b
   140032d85:	(bad)  
   140032d86:	add    eax,0x500430
   140032d8b:	add    BYTE PTR [rax],al
   140032d8d:	rol    BYTE PTR [rax],1
   140032d8f:	add    al,dl
   140032d91:	add    BYTE PTR [rax],al
   140032d93:	add    BYTE PTR [rcx],bl
   140032d95:	or     DWORD PTR es:[rax],eax
   140032d98:	sbb    BYTE PTR [rax+0xe],ch
   140032d9b:	add    BYTE PTR [rcx+rax*1],dl
   140032d9e:	(bad)  
   140032d9f:	add    BYTE PTR [rcx],cl
   140032da1:	loopne 0x140032daa
   140032da3:	jo     0x140032dab
   140032da5:	(bad)  
   140032da6:	add    eax,0x500430
   140032dab:	add    BYTE PTR [rax],al
   140032dad:	rol    BYTE PTR [rax],1
   140032daf:	add    al,dl
   140032db1:	add    BYTE PTR [rax],al
   140032db3:	add    BYTE PTR [rcx],al
   140032db5:	(bad)  
   140032db6:	add    al,BYTE PTR [rax]
   140032db8:	(bad)  
   140032db9:	xor    al,BYTE PTR [rdx]
   140032dbb:	xor    BYTE PTR [rcx],al
   140032dbd:	or     al,BYTE PTR [rax+rax*1]
   140032dc0:	or     dh,BYTE PTR [rsi+rax*1]
   140032dc3:	add    BYTE PTR [rdx],cl
   140032dc5:	xor    al,BYTE PTR [rsi]
   140032dc7:	jo     0x140032dda
   140032dc9:	adc    eax,DWORD PTR [rax+rax*1]
   140032dcc:	adc    esi,DWORD PTR [rdi+rax*1]
   140032dcf:	add    BYTE PTR [rbx],dl
   140032dd1:	xor    cl,BYTE PTR [rdi]
   140032dd3:	jo     0x140032de5
   140032dd5:	add    DWORD PTR [rax],0x200
   140032ddb:	add    BYTE PTR [rax+rsi*4-0x4f170000],bh
   140032de2:	add    BYTE PTR [rax],al
   140032de4:	cwde   
   140032de5:	add    al,BYTE PTR fs:[rax]
   140032de8:	add    BYTE PTR [rax],al
   140032dea:	add    BYTE PTR [rax],al
   140032dec:	sti    
   140032ded:	mov    al,0x0
   140032def:	add    BYTE PTR [rdx],dh
   140032df1:	mov    cl,0x0
   140032df3:	add    BYTE PTR [rcx+0x264],dh
   140032df9:	add    BYTE PTR [rax],al
   140032dfb:	add    BYTE PTR [rcx],al
   140032dfd:	(bad)  
   140032dfe:	add    al,BYTE PTR [rax]
   140032e00:	(bad)  
   140032e01:	xor    al,BYTE PTR [rdx]
   140032e03:	push   rax
   140032e04:	add    DWORD PTR [rsi],eax
   140032e06:	add    al,BYTE PTR [rax]
   140032e08:	(bad)  
   140032e09:	xor    al,BYTE PTR [rdx]
   140032e0b:	push   rax
   140032e0c:	add    DWORD PTR [rsi],eax
   140032e0e:	add    al,BYTE PTR [rax]
   140032e10:	(bad)  
   140032e11:	xor    al,BYTE PTR [rdx]
   140032e13:	xor    BYTE PTR [rcx],dl
   140032e15:	or     al,BYTE PTR [rax+rax*1]
   140032e18:	or     dh,BYTE PTR [rsi+rax*1]
   140032e1b:	add    BYTE PTR [rdx],cl
   140032e1d:	xor    al,BYTE PTR [rsi]
   140032e1f:	jo     0x140032e31
   140032e21:	add    DWORD PTR [rax],0x200
   140032e27:	add    BYTE PTR [rbx-0x5affff4e],bl
   140032e2d:	mov    dl,0x0
   140032e2f:	add    dl,cl
   140032e31:	add    al,BYTE PTR fs:[rax]
   140032e34:	add    BYTE PTR [rax],al
   140032e36:	add    BYTE PTR [rax],al
   140032e38:	mov    edx,0xe10000b2
   140032e3d:	mov    dl,0x0
   140032e3f:	add    bl,ah
   140032e41:	add    al,BYTE PTR fs:[rax]
   140032e44:	add    BYTE PTR [rax],al
   140032e46:	add    BYTE PTR [rax],al
   140032e48:	add    DWORD PTR [rsi],eax
   140032e4a:	add    al,BYTE PTR [rax]
   140032e4c:	(bad)  
   140032e4d:	xor    al,BYTE PTR [rdx]
   140032e4f:	push   rax
   140032e50:	add    DWORD PTR [rsi],eax
   140032e52:	add    al,BYTE PTR [rax]
   140032e54:	(bad)  
   140032e55:	xor    al,BYTE PTR [rdx]
   140032e57:	push   rax
   140032e58:	add    DWORD PTR [rsi],eax
   140032e5a:	add    al,BYTE PTR [rax]
   140032e5c:	(bad)  
   140032e5d:	xor    al,BYTE PTR [rdx]
   140032e5f:	xor    BYTE PTR [rcx],al
   140032e61:	add    al,0x1
   140032e63:	add    BYTE PTR [rdx+rax*2],al
   140032e66:	add    BYTE PTR [rax],al
   140032e68:	adc    DWORD PTR [rcx],ebx
   140032e6a:	or     al,BYTE PTR [rax]
   140032e6c:	sbb    DWORD PTR [rbx+rdx*1+0x0],esi
   140032e70:	sbb    DWORD PTR [rdx+rdx*1+0x0],esp
   140032e74:	sbb    DWORD PTR [rcx+rdx*1],esi
   140032e77:	add    BYTE PTR [rcx],bl
   140032e79:	mov    dl,0x15
   140032e7b:	lock adc esp,eax
   140032e7e:	adc    eax,eax
   140032e80:	adc    BYTE PTR [rcx+0x10000],al
   140032e86:	add    BYTE PTR [rax],al
   140032e88:	fwait
   140032e89:	(bad)
   140032e8c:	ins    DWORD PTR es:[rdi],dx
   140032e8d:	mov    BYTE PTR [rax],0x0
   140032e90:	outs   dx,BYTE PTR ds:[rsi]
   140032e91:	data16 add al,BYTE PTR [rax]
   140032e94:	add    BYTE PTR [rax],al
   140032e96:	add    BYTE PTR [rax],al
   140032e98:	add    DWORD PTR [rsi],eax
   140032e9a:	add    al,BYTE PTR [rax]
   140032e9c:	(bad)  
   140032e9d:	xor    al,BYTE PTR [rdx]
   140032e9f:	push   rax
   140032ea0:	add    DWORD PTR [rdx],ecx
   140032ea2:	add    al,0x0
   140032ea4:	or     dh,BYTE PTR [rsi+rax*1]
   140032ea7:	add    BYTE PTR [rdx],cl
   140032ea9:	xor    al,BYTE PTR [rsi]
   140032eab:	jo     0x140032eae
   140032ead:	add    al,0x1
   140032eaf:	add    BYTE PTR [rdx+rax*2],al
   140032eb2:	add    BYTE PTR [rax],al
   140032eb4:	add    DWORD PTR [rdx],ecx
   140032eb6:	add    al,0x0
   140032eb8:	or     dh,BYTE PTR [rsi+rax*1]
   140032ebb:	add    BYTE PTR [rdx],cl
   140032ebd:	xor    al,BYTE PTR [rsi]
   140032ebf:	jo     0x140032ec2
   140032ec1:	sbb    DWORD PTR [rdx],ecx
   140032ec3:	add    BYTE PTR [rcx],bl
   140032ec5:	je     0x140032ed0
   140032ec7:	add    BYTE PTR [rcx],bl
   140032ec9:	or     BYTE PTR fs:[rax],al
   140032ecc:	sbb    DWORD PTR [rdi+rax*1+0x0],edx
   140032ed0:	sbb    DWORD PTR [rsi+rax*1],esi
   140032ed3:	add    BYTE PTR [rcx],bl
   140032ed5:	xor    dl,BYTE PTR [rip+0x10401e0]        # 0x1410730bb
   140032edb:	add    BYTE PTR [rdx+rax*2],al
   140032ede:	add    BYTE PTR [rax],al
   140032ee0:	sbb    DWORD PTR [rbx],edx
   140032ee2:	or     DWORD PTR [rax],eax
   140032ee4:	adc    eax,DWORD PTR [rcx]
   140032ee6:	adc    al,BYTE PTR [rax]
   140032ee8:	or     al,0xf0
   140032eea:	or     ah,al
   140032eec:	or     al,dl
   140032eee:	(bad)  
   140032eef:	rol    BYTE PTR [rax+rsi*2],0x3
   140032ef3:	(bad)  
   140032ef4:	add    dh,BYTE PTR [rax]
   140032ef6:	add    BYTE PTR [rax],al
   140032ef8:	adc    BYTE PTR [rcx+0x20000],al
   140032efe:	add    BYTE PTR [rax],al
   140032f00:	jp     0x140032ec5
   140032f02:	add    BYTE PTR [rax],al
   140032f04:	lahf   
   140032f05:	ret    
   140032f06:	add    BYTE PTR [rax],al
   140032f08:	cld    
   140032f09:	add    al,BYTE PTR fs:[rax]
   140032f0c:	lahf   
   140032f0d:	ret    
   140032f0e:	add    BYTE PTR [rax],al
   140032f10:	jp     0x140032ed5
   140032f12:	add    BYTE PTR [rax],al
   140032f14:	sbb    al,ah
   140032f16:	add    BYTE PTR [rax],al
   140032f18:	lock add al,BYTE PTR gs:[rax]
   140032f1c:	add    BYTE PTR [rax],al
   140032f1e:	add    BYTE PTR [rax],al
   140032f20:	add    DWORD PTR [rsi],eax
   140032f22:	add    al,BYTE PTR [rax]
   140032f24:	(bad)  
   140032f25:	xor    al,BYTE PTR [rdx]
   140032f27:	push   rax
   140032f28:	add    DWORD PTR [rdi],eax
   140032f2a:	add    eax,DWORD PTR [rax]
   140032f2c:	(bad)  
   140032f2d:	rex.X add edx,DWORD PTR [rax+0x2]
   140032f31:	xor    BYTE PTR [rax],al
   140032f33:	add    BYTE PTR [rcx],al
   140032f35:	or     al,BYTE PTR [rdx]
   140032f37:	add    BYTE PTR [rdx],cl
   140032f39:	xor    al,BYTE PTR [rsi]
   140032f3b:	xor    BYTE PTR [rcx],al
   140032f3d:	(bad)  
   140032f3e:	add    al,BYTE PTR [rax]
   140032f40:	(bad)  
   140032f41:	xor    al,BYTE PTR [rdx]
   140032f43:	xor    BYTE PTR [rcx],al
   140032f45:	or     al,BYTE PTR [rax+rax*1]
   140032f48:	or     dh,BYTE PTR [rsi+rax*1]
   140032f4b:	add    BYTE PTR [rdx],cl
   140032f4d:	xor    al,BYTE PTR [rsi]
   140032f4f:	jo     0x140032f6a
   140032f51:	and    cl,BYTE PTR [rax]
   140032f53:	add    BYTE PTR [rdx],ah
   140032f55:	push   rdx
   140032f56:	(bad)  
   140032f57:	lock sbb al,0xe0
   140032f5a:	sbb    dl,al
   140032f5c:	sbb    al,al
   140032f5e:	(bad)  
   140032f5f:	jo     0x140032f76
   140032f61:	(bad)  
   140032f62:	adc    al,0x30
   140032f64:	adc    BYTE PTR [rcx+0x20000],al
   140032f6a:	add    BYTE PTR [rax],al
   140032f6c:	(bad)  
   140032f6e:	add    BYTE PTR [rax],al
   140032f70:	jbe    0x140032f3c
   140032f72:	add    BYTE PTR [rax],al
   140032f74:	movabs al,ds:0xa70000ca76000266
   140032f7d:	leave  
   140032f7e:	add    BYTE PTR [rax],al
   140032f80:	popf   
   140032f81:	retf   0x0
   140032f84:	mov    dh,0x66
   140032f86:	add    al,BYTE PTR [rax]
   140032f88:	add    BYTE PTR [rax],al
   140032f8a:	add    BYTE PTR [rax],al
   140032f8c:	add    DWORD PTR [rsi],eax
   140032f8e:	add    al,BYTE PTR [rax]
   140032f90:	(bad)  
   140032f91:	xor    al,BYTE PTR [rdx]
   140032f93:	push   rax
   140032f94:	add    DWORD PTR [rsi],eax
   140032f96:	add    al,BYTE PTR [rax]
   140032f98:	(bad)  
   140032f99:	xor    al,BYTE PTR [rdx]
   140032f9b:	push   rax
   140032f9c:	add    DWORD PTR [rcx],esp
   140032f9e:	or     eax,DWORD PTR [rax]
   140032fa0:	and    DWORD PTR [rdi+rbx*1],esi
   140032fa3:	add    BYTE PTR [rcx],ah
   140032fa5:	add    DWORD PTR [rsi],edx
   140032fa7:	add    BYTE PTR [rip+0x11e013f0],dl        # 0x151e3439d
   140032fad:	ror    BYTE PTR [rdi],1
   140032faf:	ror    BYTE PTR [rip+0xb600c70],0x50        # 0x14b633c26
   140032fb6:	add    BYTE PTR [rax],al
   140032fb8:	add    DWORD PTR [rdi],edx
   140032fba:	or     al,BYTE PTR [rax]
   140032fbc:	(bad)  
   140032fbd:	push   rsp
   140032fbe:	adc    al,BYTE PTR [rax]
   140032fc0:	(bad)  
   140032fc1:	xor    al,0x10
   140032fc3:	add    BYTE PTR [rdi],dl
   140032fc5:	xchg   edx,eax
   140032fc6:	adc    esi,eax
   140032fc8:	adc    eax,esp
   140032fca:	xadd   BYTE PTR [rip+0x9600c70],cl        # 0x149633c41
   140032fd1:	adc    eax,0x74150008
   140032fd6:	or     BYTE PTR [rax],al
   140032fd8:	adc    eax,0x15000764
   140032fdd:	xor    al,0x6
   140032fdf:	add    BYTE PTR [rip+0x10e01132],dl        # 0x150e34117
   140032fe5:	add    DWORD PTR [rax],0x100
   140032feb:	add    al,al
   140032fed:	mov    edi,0xc02a0000
   140032ff2:	add    BYTE PTR [rax],al
   140032ff4:	add    DWORD PTR [rax],eax
   140032ff6:	add    BYTE PTR [rax],al
   140032ff8:	sub    al,al
   140032ffa:	add    BYTE PTR [rax],al
   140032ffc:	add    DWORD PTR [rcx],ebx
   140032ffe:	or     al,BYTE PTR [rax]
   140033000:	sbb    DWORD PTR [rcx+rcx*1+0x0],esi
   140033004:	sbb    DWORD PTR [rax+rcx*1+0x0],esp
   140033008:	sbb    DWORD PTR [rdi+rax*1+0x0],edx
   14003300c:	sbb    DWORD PTR [rsi+rax*1],esi
   14003300f:	add    BYTE PTR [rcx],bl
   140033011:	xor    dl,BYTE PTR [rip+0x60f01e0]        # 0x1461231f7
   140033017:	add    BYTE PTR [rdi],cl
   140033019:	fs (bad) 
   14003301b:	add    BYTE PTR [rdi],cl
   14003301d:	xor    al,0x6
   14003301f:	add    BYTE PTR [rdi],cl
   140033021:	xor    cl,BYTE PTR [rbx]
   140033023:	jo     0x140033026
   140033025:	sbb    DWORD PTR [rdx],ecx
   140033027:	add    BYTE PTR [rcx],bl
   140033029:	xor    al,0x17
   14003302b:	add    BYTE PTR [rcx],bl
   14003302d:	rcl    BYTE PTR [rip+0x11e013f0],cl        # 0x151e34423
   140033033:	ror    BYTE PTR [rdi],1
   140033035:	ror    BYTE PTR [rip+0xb600c70],0x50        # 0x14b633cac
   14003303c:	add    DWORD PTR [rcx+rax*1],eax
   14003303f:	add    BYTE PTR [rdx+rax*2],al
   140033042:	add    BYTE PTR [rax],al
   140033044:	add    DWORD PTR [rdx],ecx
   140033046:	add    al,0x0
   140033048:	or     dh,BYTE PTR [rsi+rax*1]
   14003304b:	add    BYTE PTR [rdx],cl
   14003304d:	xor    al,BYTE PTR [rsi]
   14003304f:	jo     0x14003305a
   140033051:	or     eax,0x420d0001
   140033056:	add    BYTE PTR [rax],al
   140033058:	adc    BYTE PTR [rcx+0x10000],al
   14003305e:	add    BYTE PTR [rax],al
   140033060:	(bad)  
   140033061:	mov    bl,0x0
   140033063:	add    dh,ah
   140033065:	mov    bl,0x0
   140033067:	add    BYTE PTR [rax-0x17fffd9a],cl
   14003306d:	mov    bl,0x0
   14003306f:	add    BYTE PTR [rcx],al
   140033071:	(bad)  
   140033072:	add    al,BYTE PTR [rax]
   140033074:	(bad)  
   140033075:	xor    al,BYTE PTR [rdx]
   140033077:	push   rax
   140033078:	add    DWORD PTR [rsp+rcx*1],ebx
   14003307b:	add    BYTE PTR [rsp+riz*2],bl
   14003307e:	or     al,0x0
   140033080:	sbb    al,0x54
   140033082:	or     eax,DWORD PTR [rax]
   140033084:	sbb    al,0x34
   140033086:	or     al,BYTE PTR [rax]
   140033088:	sbb    al,0x32
   14003308a:	sbb    al,dh
   14003308c:	(bad)  
   14003308d:	loopne 0x1400330a3
   14003308f:	rcl    BYTE PTR [rdx],1
   140033091:	rcl    BYTE PTR [rax],0x70
   140033094:	add    DWORD PTR [rax+rcx*1],edx
   140033097:	add    BYTE PTR [rsp+riz*2],dl
   14003309a:	or     BYTE PTR [rax],al
   14003309c:	adc    al,0x54
   14003309e:	(bad)  
   14003309f:	add    BYTE PTR [rsp+rsi*1],dl
   1400330a2:	(bad)  
   1400330a3:	add    BYTE PTR [rdx+rsi*1],dl
   1400330a6:	adc    BYTE PTR [rax+0x1],dh
   1400330a9:	sbb    BYTE PTR [rdx],cl
   1400330ab:	add    BYTE PTR [rax],bl
   1400330ad:	fs (bad) 
   1400330af:	add    BYTE PTR [rax],bl
   1400330b1:	push   rsp
   1400330b2:	or     eax,0xc341800
   1400330b7:	add    BYTE PTR [rax],bl
   1400330b9:	jb     0x1400330cf
   1400330bb:	loopne 0x1400330cf
   1400330bd:	rcl    BYTE PTR [rax],0x70
   1400330c0:	or     DWORD PTR [rcx],ebx
   1400330c2:	or     al,BYTE PTR [rax]
   1400330c4:	sbb    DWORD PTR [rsp+rcx*1+0x0],esi
   1400330c8:	sbb    DWORD PTR [rbx+rcx*1+0x0],esp
   1400330cc:	sbb    DWORD PTR [rdx+rcx*1],esi
   1400330cf:	add    BYTE PTR [rcx],bl
   1400330d1:	push   rdx
   1400330d2:	adc    eax,0x11e013f0
   1400330d7:	rcl    BYTE PTR [rax],1
   1400330d9:	add    DWORD PTR [rax],0x100
   1400330df:	add    dh,dl
   1400330e1:	rol    BYTE PTR [rax],0x0
   1400330e4:	jno    0x1400330a8
   1400330e6:	add    BYTE PTR [rax],al
   1400330e8:	add    DWORD PTR [rax],eax
   1400330ea:	add    BYTE PTR [rax],al
   1400330ec:	jne    0x1400330b0
   1400330ee:	add    BYTE PTR [rax],al
   1400330f0:	add    DWORD PTR [rcx+rax*1],eax
   1400330f3:	add    BYTE PTR [rdx+rax*2],al
   1400330f6:	add    BYTE PTR [rax],al
   1400330f8:	add    DWORD PTR [rdx],ecx
   1400330fa:	add    al,0x0
   1400330fc:	or     dh,BYTE PTR [rsi+rax*1]
   1400330ff:	add    BYTE PTR [rdx],cl
   140033101:	xor    al,BYTE PTR [rsi]
   140033103:	jo     0x140033106
   140033105:	(bad)  
   140033106:	add    al,BYTE PTR [rax]
   140033108:	(bad)  
   140033109:	xor    al,BYTE PTR [rdx]
   14003310b:	xor    BYTE PTR [rcx],al
   14003310d:	adc    al,0x8
   14003310f:	add    BYTE PTR [rsp+riz*2],dl
   140033112:	or     BYTE PTR [rax],al
   140033114:	adc    al,0x54
   140033116:	(bad)  
   140033117:	add    BYTE PTR [rsp+rsi*1],dl
   14003311a:	(bad)  
   14003311b:	add    BYTE PTR [rdx+rsi*1],dl
   14003311e:	adc    BYTE PTR [rax+0x1],dh
   140033121:	(bad)  
   140033122:	add    al,BYTE PTR [rax]
   140033124:	(bad)  
   140033125:	xor    al,BYTE PTR [rdx]
   140033127:	xor    BYTE PTR [rcx],al
   140033129:	add    al,0x1
   14003312b:	add    BYTE PTR [rdx+rax*2],al
   14003312e:	add    BYTE PTR [rax],al
   140033130:	add    DWORD PTR [rax],eax
   140033132:	add    BYTE PTR [rax],al
   140033134:	add    BYTE PTR [rax],al
   140033136:	add    BYTE PTR [rax],al
   140033138:	add    DWORD PTR [rax],eax
   14003313a:	add    BYTE PTR [rax],al
   14003313c:	adc    DWORD PTR [rcx],ebx
   14003313e:	or     al,BYTE PTR [rax]
   140033140:	sbb    esp,esp
   140033142:	or     eax,DWORD PTR [rax]
   140033144:	sbb    DWORD PTR [rdx+rcx*1+0x0],esi
   140033148:	sbb    DWORD PTR [rcx+rcx*1+0x0],esp
   14003314c:	sbb    DWORD PTR [rax+rcx*1],esi
   14003314f:	add    BYTE PTR [rcx],bl
   140033151:	push   rdx
   140033152:	adc    eax,0x8110f0
   140033157:	add    BYTE PTR [rcx],al
   140033159:	add    BYTE PTR [rax],al
   14003315b:	add    dl,cl
   14003315d:	rol    DWORD PTR [rax],1
   14003315f:	add    BYTE PTR [rbx-0x2e],al
   140033162:	add    BYTE PTR [rax],al
   140033164:	fbld   TBYTE PTR [rsi+0x2]
   140033167:	add    BYTE PTR [rax],al
   140033169:	add    BYTE PTR [rax],al
   14003316b:	add    BYTE PTR [rcx],al
   14003316d:	(bad)  
   14003316e:	add    al,BYTE PTR [rax]
   140033170:	(bad)  
   140033171:	push   rdx
   140033172:	add    dl,BYTE PTR [rax+0x11]
   140033175:	(bad)  
   140033176:	add    al,BYTE PTR [rax]
   140033178:	(bad)  
   140033179:	push   rdx
   14003317a:	add    dh,BYTE PTR [rax]
   14003317c:	adc    BYTE PTR [rcx+0x10000],al
   140033182:	add    BYTE PTR [rax],al
   140033184:	(bad)  
   140033186:	add    BYTE PTR [rax],al
   140033188:	and    al,0xd4
   14003318a:	add    BYTE PTR [rax],al
   14003318c:	adc    esp,DWORD PTR [rdi+0x2]
   14003318f:	add    BYTE PTR [rax],al
   140033191:	add    BYTE PTR [rax],al
   140033193:	add    BYTE PTR [rcx],al
   140033195:	(bad)  
   140033196:	add    al,BYTE PTR [rax]
   140033198:	(bad)  
   140033199:	xor    al,BYTE PTR [rdx]
   14003319b:	push   rax
   14003319c:	adc    DWORD PTR [rcx],ebx
   14003319e:	or     al,BYTE PTR [rax]
   1400331a0:	sbb    DWORD PTR [rsi+rcx*1+0x0],esi
   1400331a4:	sbb    DWORD PTR [rbp+rcx*1+0x0],esp
   1400331a8:	sbb    DWORD PTR [rsp+rcx*1],esi
   1400331ab:	add    BYTE PTR [rcx],bl
   1400331ad:	jb     0x1400331c4
   1400331af:	lock adc esp,eax
   1400331b2:	adc    eax,eax
   1400331b4:	adc    BYTE PTR [rcx+0x20000],al
   1400331ba:	add    BYTE PTR [rax],al
   1400331bc:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400331bd:	rol    BYTE PTR [rax],cl
   1400331bf:	add    ah,dh
   1400331c1:	rol    BYTE PTR [rax],cl
   1400331c3:	add    al,bh
   1400331c5:	data16 add al,BYTE PTR [rax]
   1400331c8:	add    BYTE PTR [rax],al
   1400331ca:	add    BYTE PTR [rax],al
   1400331cc:	cld    
   1400331cd:	rol    BYTE PTR [rax],cl
   1400331cf:	add    BYTE PTR [rbp-0x7ffff2d],bl
   1400331d5:	data16 add al,BYTE PTR [rax]
   1400331d8:	add    BYTE PTR [rax],al
   1400331da:	add    BYTE PTR [rax],al
   1400331dc:	add    DWORD PTR [rsi],eax
   1400331de:	add    al,BYTE PTR [rax]
   1400331e0:	(bad)  
   1400331e1:	push   rdx
   1400331e2:	add    dl,BYTE PTR [rax+0x11]
   1400331e5:	(bad)  
   1400331e6:	add    al,BYTE PTR [rax]
   1400331e8:	(bad)  
   1400331e9:	push   rdx
   1400331ea:	add    dh,BYTE PTR [rax]
   1400331ec:	adc    BYTE PTR [rcx+0x10000],al
   1400331f2:	add    BYTE PTR [rax],al
   1400331f4:	rex.W (bad) 
   1400331f6:	add    BYTE PTR [rax],al
   1400331f8:	nop
   1400331f9:	(bad)  
   1400331fa:	add    BYTE PTR [rax],al
   1400331fc:	sub    al,0x67
   1400331fe:	add    al,BYTE PTR [rax]
   140033200:	add    BYTE PTR [rax],al
   140033202:	add    BYTE PTR [rax],al
   140033204:	add    DWORD PTR [rsi],eax
   140033206:	add    al,BYTE PTR [rax]
   140033208:	(bad)  
   140033209:	xor    al,BYTE PTR [rdx]
   14003320b:	push   rax
   14003320c:	add    DWORD PTR [rcx+rax*1],eax
   14003320f:	add    BYTE PTR [rdx+riz*2],al
   140033212:	add    BYTE PTR [rax],al
   140033214:	adc    DWORD PTR [rdx],ecx
   140033216:	add    al,0x0
   140033218:	or     dh,BYTE PTR [rsi+rax*1]
   14003321b:	add    BYTE PTR [rdx],cl
   14003321d:	xor    al,BYTE PTR [rsi]
   14003321f:	jo     0x140033231
   140033221:	add    DWORD PTR [rax],0x100
   140033227:	add    BYTE PTR [rax-0x25ffff2c],bh
   14003322d:	(bad)  
   14003322e:	add    BYTE PTR [rax],al
   140033230:	rex.RB
   140033231:	add    al,BYTE PTR [eax]
   140033234:	add    BYTE PTR [rax],al
   140033236:	add    BYTE PTR [rax],al
   140033238:	add    DWORD PTR [rsi],eax
   14003323a:	add    al,BYTE PTR [rax]
   14003323c:	(bad)  
   14003323d:	xor    al,BYTE PTR [rdx]
   14003323f:	push   rax
   140033240:	add    DWORD PTR [rcx+rax*1],eax
   140033243:	add    BYTE PTR [rdx+riz*2],al
   140033246:	add    BYTE PTR [rax],al
   140033248:	add    DWORD PTR [rcx+rax*1],eax
   14003324b:	add    BYTE PTR [rdx+riz*2],al
   14003324e:	add    BYTE PTR [rax],al
   140033250:	add    DWORD PTR [rcx+rax*1],eax
   140033253:	add    BYTE PTR [rdx+riz*2],al
   140033256:	add    BYTE PTR [rax],al
   140033258:	add    DWORD PTR [rcx+rax*1],eax
   14003325b:	add    BYTE PTR [rdx+rax*4],al
   14003325e:	add    BYTE PTR [rax],al
   140033260:	add    DWORD PTR [rcx+rax*1],eax
   140033263:	add    BYTE PTR [rdx+riz*2],al
   140033266:	add    BYTE PTR [rax],al
   140033268:	add    DWORD PTR [rsi],eax
   14003326a:	add    al,BYTE PTR [rax]
   14003326c:	(bad)  
   14003326d:	jb     0x140033271
   14003326f:	xor    BYTE PTR [rcx],al
   140033271:	(bad)  
   140033272:	add    al,BYTE PTR [rax]
   140033274:	(bad)  
   140033275:	push   rdx
   140033276:	add    dh,BYTE PTR [rax]
   140033278:	add    DWORD PTR [rsi],eax
   14003327a:	add    al,BYTE PTR [rax]
   14003327c:	(bad)  
   14003327d:	jb     0x140033281
   14003327f:	xor    BYTE PTR [rcx],al
   140033281:	(bad)  
   140033282:	add    al,0x0
   140033284:	(bad)  
   140033285:	xor    al,0x6
   140033287:	add    BYTE PTR [rsi],cl
   140033289:	xor    cl,BYTE PTR [rdx]
   14003328b:	jo     0x14003328e
   14003328d:	sbb    eax,0x741d000c
   140033292:	adc    DWORD PTR [rax],eax
   140033294:	sbb    eax,0x1d001064
   140033299:	push   rsp
   14003329a:	ltr    WORD PTR [rip+0x1d000e34]        # 0x15d0340d5
   1400332a1:	xchg   edx,eax
   1400332a2:	sbb    eax,esi
   1400332a4:	(bad)  
   1400332a5:	loopne 0x1400332bc
   1400332a7:	rcr    BYTE PTR [rcx],1
   1400332a9:	sbb    eax,DWORD PTR [rsi]
   1400332ab:	add    BYTE PTR [rcx+rax*1],cl
   1400332ae:	adc    DWORD PTR [rax],eax
   1400332b0:	add    eax,0x3600470
   1400332b5:	push   rax
   1400332b6:	add    dh,BYTE PTR [rax]
   1400332b8:	add    al,dl
   1400332ba:	add    BYTE PTR [rax],al
   1400332bc:	jo     0x1400332be
   1400332be:	add    BYTE PTR [rax],al
   1400332c0:	add    DWORD PTR [rsp+rcx*1],ebx
   1400332c3:	add    BYTE PTR [rsp+riz*2],bl
   1400332c6:	adc    al,BYTE PTR [rax]
   1400332c8:	sbb    al,0x54
   1400332ca:	adc    DWORD PTR [rax],eax
   1400332cc:	sbb    al,0x34
   1400332ce:	adc    BYTE PTR [rax],al
   1400332d0:	sbb    al,0x92
   1400332d2:	sbb    al,dh
   1400332d4:	(bad)  
   1400332d5:	loopne 0x1400332eb
   1400332d7:	rcl    BYTE PTR [rdx],1
   1400332d9:	rcl    BYTE PTR [rax],0x70
   1400332dc:	add    DWORD PTR [rcx],ebx
   1400332de:	or     al,BYTE PTR [rax]
   1400332e0:	sbb    DWORD PTR [rbp+rcx*1+0x0],esi
   1400332e4:	sbb    DWORD PTR [rsp+rcx*1+0x0],esp
   1400332e8:	sbb    DWORD PTR [rbx+rcx*1+0x0],edx
   1400332ec:	sbb    DWORD PTR [rdx+rcx*1],esi
   1400332ef:	add    BYTE PTR [rcx],bl
   1400332f1:	jb     0x140033308
   1400332f3:	loopne 0x14003330e
   1400332f5:	sbb    BYTE PTR [rip+0x5e20900],al        # 0x145e53bfb
   1400332fb:	jo     0x140033301
   1400332fd:	(bad)  
   1400332fe:	add    edx,DWORD PTR [rax+0x2]
   140033301:	xor    BYTE PTR [rax],al
   140033303:	add    BYTE PTR [rax],al
   140033305:	rol    BYTE PTR [rax],1
   140033307:	add    BYTE PTR [rax+0x0],ah
   14003330a:	add    BYTE PTR [rax],al
   14003330c:	sbb    DWORD PTR [rip+0xfffffffff20e0006],ebx        # 0x132113318
   140033312:	(bad)  
   140033313:	loopne 0x14003331a
   140033315:	jo     0x14003331b
   140033317:	(bad)  
   140033318:	add    edx,DWORD PTR [rax+0x2]
   14003331b:	xor    BYTE PTR [rax],al
   14003331d:	rol    BYTE PTR [rax],1
   14003331f:	add    BYTE PTR [rax+0x0],dh
   140033322:	add    BYTE PTR [rax],al
   140033324:	add    DWORD PTR [rcx+rax*1],eax
   140033327:	add    BYTE PTR [rdx+riz*2],al
   14003332a:	add    BYTE PTR [rax],al
   14003332c:	add    DWORD PTR [rcx+rax*1],eax
   14003332f:	add    BYTE PTR [rdx+rax*2],al
   140033332:	add    BYTE PTR [rax],al
   140033334:	add    DWORD PTR [rcx+rax*1],eax
   140033337:	add    BYTE PTR [rdx+rax*2],al
   14003333a:	add    BYTE PTR [rax],al
   14003333c:	add    DWORD PTR [rax+rcx*1],edx
   14003333f:	add    BYTE PTR [rsp+riz*2],dl
   140033342:	or     BYTE PTR [rax],al
   140033344:	adc    al,0x54
   140033346:	(bad)  
   140033347:	add    BYTE PTR [rsp+rsi*1],dl
   14003334a:	(bad)  
   14003334b:	add    BYTE PTR [rdx+rsi*1],dl
   14003334e:	adc    BYTE PTR [rax+0x11],dh
   140033351:	and    BYTE PTR [rip+0x1fc42000],cl        # 0x15fc75357
   140033357:	add    BYTE PTR [rax],ah
   140033359:	je     0x140033379
   14003335b:	add    BYTE PTR [rax],ah
   14003335d:	fs sbb eax,0x1c342000
   140033363:	add    BYTE PTR [rax],ah
   140033365:	add    DWORD PTR [rax],ebx
   140033367:	add    BYTE PTR [rcx],bl
   140033369:	lock (bad) 
   14003336b:	loopne 0x140033382
   14003336d:	rol    BYTE PTR [rax],1
   14003336f:	add    BYTE PTR [rax],dl
   140033371:	add    DWORD PTR [rax],0x200
   140033377:	add    BYTE PTR [rsp+riz*8-0x1b390000],dl
   14003337e:	add    BYTE PTR [rax],al
   140033380:	pop    rsi
   140033381:	add    al,BYTE PTR [eax]
   140033384:	add    BYTE PTR [rax],al
   140033386:	add    BYTE PTR [rax],al
   140033388:	shl    ah,1
   14003338a:	add    BYTE PTR [rax],al
   14003338c:	movsxd esp,edi
   14003338e:	add    BYTE PTR [rax],al
   140033390:	pop    rsi
   140033391:	add    al,BYTE PTR [eax]
   140033394:	add    BYTE PTR [rax],al
   140033396:	add    BYTE PTR [rax],al
   140033398:	add    DWORD PTR [rsi],eax
   14003339a:	add    al,BYTE PTR [rax]
   14003339c:	(bad)  
   14003339d:	xor    al,BYTE PTR [rdx]
   14003339f:	push   rax
   1400333a0:	add    DWORD PTR [rdi],ecx
   1400333a2:	(bad)  
   1400333a3:	add    BYTE PTR [rdi],cl
   1400333a5:	fs (bad) 
   1400333a7:	add    BYTE PTR [rdi],cl
   1400333a9:	xor    al,0x6
   1400333ab:	add    BYTE PTR [rdi],cl
   1400333ad:	xor    cl,BYTE PTR [rbx]
   1400333af:	jo     0x1400333b2
   1400333b1:	clts   
   1400333b3:	add    BYTE PTR [rdi],cl
   1400333b5:	or     eax,DWORD PTR fs:[rax]
   1400333b8:	sysenter 
   1400333ba:	or     al,BYTE PTR [rax]
   1400333bc:	rsqrtps xmm1,XMMWORD PTR [rbx]
   1400333bf:	jo     0x1400333c2
   1400333c1:	sbb    eax,0x741d000c
   1400333c6:	or     eax,DWORD PTR [rax]
   1400333c8:	sbb    eax,0x1d000a64
   1400333cd:	push   rsp
   1400333ce:	or     DWORD PTR [rax],eax
   1400333d0:	sbb    eax,0x1d000834
   1400333d5:	xor    bl,BYTE PTR [rcx]
   1400333d7:	lock (bad) 
   1400333d9:	loopne 0x1400333f0
   1400333db:	rol    BYTE PTR [rcx],0x14
   1400333de:	or     BYTE PTR [rax],al
   1400333e0:	adc    al,0x64
   1400333e2:	or     al,BYTE PTR [rax]
   1400333e4:	adc    al,0x54
   1400333e6:	or     DWORD PTR [rax],eax
   1400333e8:	adc    al,0x34
   1400333ea:	or     BYTE PTR [rax],al
   1400333ec:	adc    al,0x52
   1400333ee:	adc    BYTE PTR [rax+0x1],dh
   1400333f1:	add    al,0x1
   1400333f3:	add    BYTE PTR [rdx+rax*2],al
   1400333f6:	add    BYTE PTR [rax],al
   1400333f8:	add    DWORD PTR [rip+0x340d0004],ecx        # 0x174103402
   1400333fe:	or     DWORD PTR [rax],eax
   140033400:	or     eax,0x1500632
   140033405:	sbb    DWORD PTR [rdx],ecx
   140033407:	add    BYTE PTR [rcx],bl
   140033409:	je     0x140033418
   14003340b:	add    BYTE PTR [rcx],bl
   14003340d:	fs or  al,0x0
   140033410:	sbb    DWORD PTR [rbx+rcx*1+0x0],edx
   140033414:	sbb    DWORD PTR [rdx+rcx*1],esi
   140033417:	add    BYTE PTR [rcx],bl
   140033419:	jb     0x140033430
   14003341b:	loopne 0x14003341e
   14003341d:	or     al,BYTE PTR [rax+rax*1]
   140033420:	or     dh,BYTE PTR [rsi+rax*1]
   140033423:	add    BYTE PTR [rdx],cl
   140033425:	xor    al,BYTE PTR [rsi]
   140033427:	jo     0x14003342a
   140033429:	(bad)  
   14003342a:	add    al,BYTE PTR [rax]
   14003342c:	(bad)  
   14003342d:	xor    al,BYTE PTR [rdx]
   14003342f:	xor    BYTE PTR [rcx],al
   140033431:	(bad)  
   140033432:	add    al,BYTE PTR [rax]
   140033434:	(bad)  
   140033435:	xor    al,BYTE PTR [rdx]
   140033437:	xor    BYTE PTR [rcx],al
   140033439:	clts   
   14003343b:	add    BYTE PTR [rdi],cl
   14003343d:	fs or  eax,0xc340f00
   140033443:	add    BYTE PTR [rdi],cl
   140033445:	xchg   edx,eax
   140033446:	or     esi,DWORD PTR [rax+0x1]
   140033449:	add    al,0x1
   14003344b:	add    BYTE PTR [rdx+rax*2],al
   14003344e:	add    BYTE PTR [rax],al
   140033450:	sbb    DWORD PTR [rip+0x741f450d],ebp        # 0x1b4227963
   140033456:	adc    al,BYTE PTR [rax]
   140033458:	sbb    esp,DWORD PTR [rcx+rdx*1+0x0]
   14003345c:	(bad)  
   14003345d:	xor    al,0x10
   14003345f:	add    BYTE PTR [rbx],dl
   140033461:	rex.XB (bad) 
   140033463:	xchg   edx,eax
   140033464:	or     dh,al
   140033466:	or     al,ah
   140033468:	(bad)  
   140033469:	rol    BYTE PTR [rax+rax*8],1
   14003346c:	add    dl,BYTE PTR [rax+0x0]
   14003346f:	add    BYTE PTR [rax],al
   140033471:	rol    BYTE PTR [rax],1
   140033473:	add    BYTE PTR [rax+0x0],al
   140033476:	add    BYTE PTR [rax],al
   140033478:	add    DWORD PTR [rcx+rax*1],eax
   14003347b:	add    BYTE PTR [rdx+rax*2],al
   14003347e:	add    BYTE PTR [rax],al
   140033480:	add    DWORD PTR [rax+rcx*1],edx
   140033483:	add    BYTE PTR [rsp+riz*2],dl
   140033486:	or     al,BYTE PTR [rax]
   140033488:	adc    al,0x54
   14003348a:	or     DWORD PTR [rax],eax
   14003348c:	adc    al,0x34
   14003348e:	or     BYTE PTR [rax],al
   140033490:	adc    al,0x52
   140033492:	adc    BYTE PTR [rax+0x1],dh
   140033495:	adc    BYTE PTR [rsi],al
   140033497:	add    BYTE PTR [rax],dl
   140033499:	fs or  eax,0xc341000
   14003349f:	add    BYTE PTR [rax],dl
   1400334a1:	xchg   edx,eax
   1400334a2:	or     al,0x70
   1400334a4:	add    DWORD PTR [rcx+rax*1],eax
   1400334a7:	add    BYTE PTR [rdx+rax*2],al
   1400334aa:	add    BYTE PTR [rax],al
   1400334ac:	add    DWORD PTR [rax],edx
   1400334ae:	(bad)  
   1400334af:	add    BYTE PTR [rax],dl
   1400334b1:	or     eax,DWORD PTR fs:[rax]
   1400334b4:	adc    BYTE PTR [rdx+rcx*1],dh
   1400334b7:	add    BYTE PTR [rax],dl
   1400334b9:	jb     0x1400334c7
   1400334bb:	jo     0x1400334be
   1400334bd:	clts   
   1400334bf:	add    BYTE PTR [rdi],cl
   1400334c1:	fs (bad) 
   1400334c3:	add    BYTE PTR [rdi],cl
   1400334c5:	xor    al,0x6
   1400334c7:	add    BYTE PTR [rdi],cl
   1400334c9:	xor    cl,BYTE PTR [rbx]
   1400334cb:	jo     0x1400334ce
   1400334cd:	clts   
   1400334cf:	add    BYTE PTR [rdi],cl
   1400334d1:	or     DWORD PTR fs:[rax],eax
   1400334d4:	sysenter 
   1400334d6:	or     BYTE PTR [rax],al
   1400334d8:	rsqrtps xmm1,XMMWORD PTR [rbx]
   1400334db:	jo     0x1400334de
   1400334dd:	or     al,BYTE PTR [rax+rax*1]
   1400334e0:	or     dh,BYTE PTR [rsi+rax*1]
   1400334e3:	add    BYTE PTR [rdx],cl
   1400334e5:	xor    al,BYTE PTR [rsi]
   1400334e7:	jo     0x1400334ea
   1400334e9:	add    al,0x1
   1400334eb:	add    BYTE PTR [rdx+rax*2],al
   1400334ee:	add    BYTE PTR [rax],al
   1400334f0:	add    DWORD PTR [rax],edx
   1400334f2:	(bad)  
   1400334f3:	add    BYTE PTR [rax],dl
   1400334f5:	fs or  eax,0xc341000
   1400334fb:	add    BYTE PTR [rax],dl
   1400334fd:	xchg   edx,eax
   1400334fe:	or     al,0x70
   140033500:	add    DWORD PTR [rcx],ebx
   140033502:	or     al,BYTE PTR [rax]
   140033504:	sbb    DWORD PTR [rcx+rcx*1+0x0],esi
   140033508:	sbb    DWORD PTR [rax+rcx*1+0x0],esp
   14003350c:	sbb    DWORD PTR [rdi+rax*1+0x0],edx
   140033510:	sbb    DWORD PTR [rsi+rax*1],esi
   140033513:	add    BYTE PTR [rcx],bl
   140033515:	xor    dl,BYTE PTR [rip+0x60f01e0]        # 0x1461236fb
   14003351b:	add    BYTE PTR [rdi],cl
   14003351d:	fs (bad) 
   14003351f:	add    BYTE PTR [rdi],cl
   140033521:	xor    al,0x6
   140033523:	add    BYTE PTR [rdi],cl
   140033525:	xor    cl,BYTE PTR [rbx]
   140033527:	jo     0x14003352a
   140033529:	clts   
   14003352b:	add    BYTE PTR [rdi],cl
   14003352d:	fs (bad) 
   14003352f:	add    BYTE PTR [rdi],cl
   140033531:	xor    al,0x6
   140033533:	add    BYTE PTR [rdi],cl
   140033535:	xor    cl,BYTE PTR [rbx]
   140033537:	jo     0x14003353a
   140033539:	(bad)  
   14003353a:	add    al,BYTE PTR [rax]
   14003353c:	(bad)  
   14003353d:	add    DWORD PTR [rbx+0x100],ebx
   140033543:	add    BYTE PTR [rcx],al
   140033545:	add    BYTE PTR [rax],al
   140033547:	add    BYTE PTR [rcx],al
   140033549:	add    BYTE PTR [rax],al
   14003354b:	add    BYTE PTR [rcx],al
   14003354d:	(bad)  
   14003354e:	add    al,BYTE PTR [rax]
   140033550:	(bad)  
   140033551:	xor    al,BYTE PTR [rdx]
   140033553:	xor    BYTE PTR [rcx],al
   140033555:	(bad)  
   140033556:	add    al,BYTE PTR [rax]
   140033558:	(bad)  
   140033559:	xor    al,BYTE PTR [rdx]
   14003355b:	xor    BYTE PTR [rcx],al
   14003355d:	(bad)  
   14003355e:	add    al,BYTE PTR [rax]
   140033560:	(bad)  
   140033561:	xor    al,BYTE PTR [rdx]
   140033563:	xor    BYTE PTR [rcx],bl
   140033565:	(bad)  
   140033566:	or     BYTE PTR [rax],al
   140033568:	setb   BYTE PTR [rbx]
   14003356b:	lock or eax,esp
   14003356e:	(bad)  
   14003356f:	rol    BYTE PTR [rip+0x3600470],0x50        # 0x1436339e6
   140033576:	add    dh,BYTE PTR [rax]
   140033578:	add    al,dl
   14003357a:	add    BYTE PTR [rax],al
   14003357c:	rex.W add BYTE PTR [rax],al
   14003357f:	add    BYTE PTR [rcx],al
   140033581:	(bad)  
   140033582:	add    al,BYTE PTR [rax]
   140033584:	(bad)  
   140033585:	xor    al,BYTE PTR [rdx]
   140033587:	xor    BYTE PTR [rcx],dl
   140033589:	(bad)  
   14003358a:	add    al,BYTE PTR [rax]
   14003358c:	(bad)  
   14003358d:	xor    al,BYTE PTR [rdx]
   14003358f:	xor    BYTE PTR [rax],dl
   140033591:	add    DWORD PTR [rax],0x100
   140033597:	add    BYTE PTR [rbx],dh
   140033599:	add    BYTE PTR [rcx],al
   14003359b:	add    BYTE PTR [rcx+0x0],cl
   14003359e:	add    DWORD PTR [rax],eax
   1400335a0:	jns    0x140033609
   1400335a2:	add    al,BYTE PTR [rax]
   1400335a4:	add    BYTE PTR [rax],al
   1400335a6:	add    BYTE PTR [rax],al
   1400335a8:	add    DWORD PTR [rsi],eax
   1400335aa:	add    al,BYTE PTR [rax]
   1400335ac:	(bad)  
   1400335ad:	xor    al,BYTE PTR [rdx]
   1400335af:	push   rax
   1400335b0:	add    DWORD PTR [rax+rcx*1],edx
   1400335b3:	add    BYTE PTR [rsp+riz*2],dl
   1400335b6:	or     BYTE PTR [rax],al
   1400335b8:	adc    al,0x54
   1400335ba:	(bad)  
   1400335bb:	add    BYTE PTR [rsp+rsi*1],dl
   1400335be:	(bad)  
   1400335bf:	add    BYTE PTR [rdx+rsi*1],dl
   1400335c2:	adc    BYTE PTR [rax+0x1],dh
   1400335c5:	or     al,BYTE PTR [rax+rax*1]
   1400335c8:	or     dh,BYTE PTR [rsi+rax*1]
   1400335cb:	add    BYTE PTR [rdx],cl
   1400335cd:	xor    al,BYTE PTR [rsi]
   1400335cf:	jo     0x1400335d2
   1400335d1:	clts   
   1400335d3:	add    BYTE PTR [rdi],cl
   1400335d5:	adc    DWORD PTR fs:[rax],eax
   1400335d8:	sysenter 
   1400335da:	adc    BYTE PTR [rax],al
   1400335dc:	psrld  mm1,QWORD PTR [rbx]
   1400335df:	jo     0x1400335fa
   1400335e1:	sub    eax,0x741f450d
   1400335e6:	adc    al,BYTE PTR [rax]
   1400335e8:	sbb    esp,DWORD PTR [rcx+rdx*1+0x0]
   1400335ec:	(bad)  
   1400335ed:	xor    al,0x10
   1400335ef:	add    BYTE PTR [rbx],dl
   1400335f1:	rex.XB (bad) 
   1400335f3:	xchg   edx,eax
   1400335f4:	or     dh,al
   1400335f6:	or     al,ah
   1400335f8:	(bad)  
   1400335f9:	rol    BYTE PTR [rax+rax*8],1
   1400335fc:	add    dl,BYTE PTR [rax+0x0]
   1400335ff:	add    BYTE PTR [rax],al
   140033601:	rol    BYTE PTR [rax],1
   140033603:	add    BYTE PTR [rax+0x0],cl
   140033606:	add    BYTE PTR [rax],al
   140033608:	add    DWORD PTR [rdi],ecx
   14003360a:	(bad)  
   14003360b:	add    BYTE PTR [rdi],cl
   14003360d:	str    WORD PTR fs:[rdi]
   140033611:	xor    al,0xe
   140033613:	add    BYTE PTR [rdi],cl
   140033615:	mov    dl,0xb
   140033617:	jo     0x140033632
   140033619:	sub    eax,0x741f350d
   14003361e:	adc    BYTE PTR [rax],al
   140033620:	sbb    esp,DWORD PTR [rdi+rcx*1+0x0]
   140033624:	(bad)  
   140033625:	xor    al,0xe
   140033627:	add    BYTE PTR [rbx],dl
   140033629:	xor    ecx,DWORD PTR [rsi]
   14003362b:	jb     0x140033637
   14003362d:	lock or al,ah
   140033630:	(bad)  
   140033631:	rol    BYTE PTR [rax+rax*8],1
   140033634:	add    dl,BYTE PTR [rax+0x0]
   140033637:	add    BYTE PTR [rax],al
   140033639:	rol    BYTE PTR [rax],1
   14003363b:	add    BYTE PTR [rax],dh
   14003363d:	add    BYTE PTR [rax],al
   14003363f:	add    BYTE PTR [rcx],al
   140033641:	(bad)  
   140033642:	add    al,BYTE PTR [rax]
   140033644:	(bad)  
   140033645:	xor    al,BYTE PTR [rdx]
   140033647:	xor    BYTE PTR [rcx],al
   140033649:	(bad)  
   14003364a:	add    al,BYTE PTR [rax]
   14003364c:	(bad)  
   14003364d:	xor    al,BYTE PTR [rdx]
   14003364f:	xor    BYTE PTR [rcx],al
   140033651:	or     al,BYTE PTR [rax+rax*1]
   140033654:	or     dh,BYTE PTR [rsi+rax*1]
   140033657:	add    BYTE PTR [rdx],cl
   140033659:	xor    al,BYTE PTR [rsi]
   14003365b:	jo     0x14003365e
   14003365d:	add    al,0x1
   14003365f:	add    BYTE PTR [rdx+rax*2],al
   140033662:	add    BYTE PTR [rax],al
   140033664:	add    DWORD PTR [rcx+rax*1],eax
   140033667:	add    BYTE PTR [rdx+rax*2],al
   14003366a:	add    BYTE PTR [rax],al
   14003366c:	add    DWORD PTR [rcx+rax*1],eax
   14003366f:	add    BYTE PTR [rdx+rax*2],al
   140033672:	add    BYTE PTR [rax],al
   140033674:	adc    DWORD PTR [rdi],ecx
   140033676:	add    al,0x0
   140033678:	sysenter 
   14003367a:	(bad)  
   14003367b:	add    BYTE PTR [rdi],cl
   14003367d:	xor    cl,BYTE PTR [rbx]
   14003367f:	jo     0x140033691
   140033681:	add    DWORD PTR [rax],0x100
   140033687:	add    al,al
   140033689:	or     DWORD PTR [rcx],eax
   14003368b:	add    dl,cl
   14003368d:	or     DWORD PTR [rcx],eax
   14003368f:	add    BYTE PTR [rdx+0x267],dl
   140033695:	add    BYTE PTR [rax],al
   140033697:	add    BYTE PTR [rcx],al
   140033699:	(bad)  
   14003369a:	add    al,BYTE PTR [rax]
   14003369c:	(bad)  
   14003369d:	xor    al,BYTE PTR [rdx]
   14003369f:	push   rax
   1400336a0:	add    DWORD PTR [rsi],eax
   1400336a2:	add    al,BYTE PTR [rax]
   1400336a4:	(bad)  
   1400336a5:	xor    al,BYTE PTR [rdx]
   1400336a7:	xor    BYTE PTR [rcx],al
   1400336a9:	clts   
   1400336ab:	add    BYTE PTR [rdi],cl
   1400336ad:	fs (bad) 
   1400336af:	add    BYTE PTR [rdi],cl
   1400336b1:	xor    al,0x6
   1400336b3:	add    BYTE PTR [rdi],cl
   1400336b5:	xor    cl,BYTE PTR [rbx]
   1400336b7:	jo     0x1400336ca
   1400336b9:	sbb    DWORD PTR [rdx],ecx
   1400336bb:	add    BYTE PTR [rcx],bl
   1400336bd:	je     0x1400336cb
   1400336bf:	add    BYTE PTR [rcx],bl
   1400336c1:	or     eax,DWORD PTR fs:[rax]
   1400336c4:	sbb    DWORD PTR [rdx+rcx*1],esi
   1400336c7:	add    BYTE PTR [rcx],bl
   1400336c9:	push   rdx
   1400336ca:	adc    eax,0x11e013f0
   1400336cf:	rcl    BYTE PTR [rax],1
   1400336d1:	add    DWORD PTR [rax],0x200
   1400336d7:	add    BYTE PTR [rdx+rcx*1],bh
   1400336da:	add    DWORD PTR [rax],eax
   1400336dc:	or     BYTE PTR [rdx],0x1
   1400336df:	add    BYTE PTR [rdx+0x267],ch
   1400336e5:	add    BYTE PTR [rax],al
   1400336e7:	add    BYTE PTR [rcx],cl
   1400336e9:	or     al,BYTE PTR [rcx]
   1400336eb:	add    BYTE PTR [rcx-0x2dfffef6],bl
   1400336f1:	add    al,BYTE PTR [eax]
   1400336f4:	add    BYTE PTR [rax],al
   1400336f6:	add    BYTE PTR [rax],al
   1400336f8:	add    DWORD PTR [rsi],eax
   1400336fa:	add    al,BYTE PTR [rax]
   1400336fc:	(bad)  
   1400336fd:	xor    al,BYTE PTR [rdx]
   1400336ff:	push   rax
   140033700:	add    DWORD PTR [rsi],eax
   140033702:	add    al,BYTE PTR [rax]
   140033704:	(bad)  
   140033705:	xor    al,BYTE PTR [rdx]
   140033707:	push   rax
   140033708:	add    DWORD PTR [rcx+rax*1],eax
   14003370b:	add    BYTE PTR [rdx+rax*1],al
   14003370e:	add    BYTE PTR [rax],al
   140033710:	sbb    DWORD PTR [rdi],esp
   140033712:	or     DWORD PTR [rax],eax
   140033714:	sbb    DWORD PTR [rax+0xd],ebp
   140033717:	add    BYTE PTR [rip+0x15002134],dl        # 0x155035851
   14003371d:	add    DWORD PTR [rax+rax*1],ebx
   140033720:	or     dh,BYTE PTR [rax+0x9]
   140033723:	(bad)  
   140033724:	or     BYTE PTR [rax+0x0],dl
   140033727:	add    BYTE PTR [rax],al
   140033729:	rol    BYTE PTR [rax],1
   14003372b:	add    al,al
   14003372d:	add    BYTE PTR [rax],al
   14003372f:	add    BYTE PTR [rcx],bl
   140033731:	sub    ecx,DWORD PTR [rbx]
   140033733:	add    BYTE PTR [rip+0x19000d78],bl        # 0x1590344b1
   140033739:	push   0x3415000e
   14003373e:	and    eax,DWORD PTR [rax]
   140033740:	adc    eax,0xa001e01
   140033745:	jo     0x140033750
   140033747:	(bad)  
   140033748:	or     BYTE PTR [rax+0x0],dl
   14003374b:	add    BYTE PTR [rax],al
   14003374d:	rol    BYTE PTR [rax],1
   14003374f:	add    al,al
   140033751:	add    BYTE PTR [rax],al
   140033753:	add    BYTE PTR [rcx],al
   140033755:	adc    al,BYTE PTR [rax+rax*1]
   140033758:	adc    ch,BYTE PTR [rax+0x3]
   14003375b:	add    BYTE PTR [rsi],al
   14003375d:	jb     0x140033761
   14003375f:	xor    BYTE PTR [rcx],al
   140033761:	adc    al,BYTE PTR [rax+rax*1]
   140033764:	adc    ch,BYTE PTR [rax+0x3]
   140033767:	add    BYTE PTR [rsi],al
   140033769:	jb     0x14003376d
   14003376b:	xor    BYTE PTR [rcx],al
   14003376d:	add    al,0x1
   14003376f:	add    BYTE PTR [rdx+rax*2],al
   140033772:	add    BYTE PTR [rax],al
   140033774:	add    DWORD PTR [rsi],ebx
   140033776:	or     al,0x0
   140033778:	(bad)  
   140033779:	push   0x34140002
   14003377e:	lldt   WORD PTR [rdx+rdx*2]
   140033782:	adc    al,dh
   140033784:	(bad)  
   140033785:	loopne 0x140033793
   140033787:	ror    BYTE PTR [rdx],1
   140033789:	ror    BYTE PTR [rax],0x70
   14003378c:	(bad)  
   14003378d:	(bad)  
   14003378e:	(bad)  
   14003378f:	push   rax
   140033790:	add    DWORD PTR [rcx+rax*1],eax
   140033793:	add    BYTE PTR [rdx+rax*4],al
   140033796:	add    BYTE PTR [rax],al
   140033798:	add    DWORD PTR [rcx+rax*1],eax
   14003379b:	add    BYTE PTR [rdx+rax*4],al
   14003379e:	add    BYTE PTR [rax],al
   1400337a0:	add    DWORD PTR [rcx],edx
   1400337a2:	add    al,BYTE PTR [rax]
   1400337a4:	adc    DWORD PTR [rdx+0x1b01300d],edx
   1400337aa:	or     BYTE PTR [rax],al
   1400337ac:	sbb    esi,DWORD PTR [rcx+rcx*1+0x0]
   1400337b0:	sbb    esp,DWORD PTR [rax+rcx*1+0x0]
   1400337b4:	sbb    esi,DWORD PTR [rdi+rax*1]
   1400337b7:	add    BYTE PTR [rbx],bl
   1400337b9:	xor    dl,BYTE PTR [rax+rdx*2]
   1400337bc:	add    BYTE PTR [rax],al
   1400337be:	add    BYTE PTR [rax],al
   1400337c0:	add    DWORD PTR [rcx+rax*1],eax
   1400337c3:	add    BYTE PTR [rdx+rax*2],al
   1400337c6:	add    BYTE PTR [rax],al
   1400337c8:	add    DWORD PTR [rax],ecx
   1400337ca:	add    DWORD PTR [rax],eax
   1400337cc:	or     BYTE PTR [rdx+0x0],al
   1400337cf:	add    BYTE PTR [rcx],al
   1400337d1:	adc    DWORD PTR [rcx],eax
   1400337d3:	add    BYTE PTR [rcx],dl
   1400337d5:	(bad)  
   1400337d6:	add    BYTE PTR [rax],al
   1400337d8:	add    DWORD PTR [rcx+rax*1],eax
   1400337db:	add    BYTE PTR [rdx+rax*2],al
   1400337de:	add    BYTE PTR [rax],al
   1400337e0:	add    DWORD PTR [rsi],eax
   1400337e2:	add    al,BYTE PTR [rax]
   1400337e4:	(bad)  
   1400337e5:	xor    al,BYTE PTR [rdx]
   1400337e7:	xor    BYTE PTR [rcx],al
   1400337e9:	or     DWORD PTR [rcx],eax
   1400337eb:	add    BYTE PTR [rcx],cl
   1400337ed:	(bad)  
   1400337ee:	add    BYTE PTR [rax],al
   1400337f0:	adc    DWORD PTR [rax],ebx
   1400337f2:	or     DWORD PTR [rax],eax
   1400337f4:	sbb    BYTE PTR [rax+riz*1+0x0],dh
   1400337f8:	sbb    BYTE PTR [rdi+rbx*1+0x0],ah
   1400337fc:	sbb    BYTE PTR [rsi+rbx*1],dh
   1400337ff:	add    BYTE PTR [rax],bl
   140033801:	add    DWORD PTR [rax+rax*1],ebx
   140033804:	adc    eax,esp
   140033806:	add    BYTE PTR [rax],al
   140033808:	adc    BYTE PTR [rcx+0x10000],al
   14003380e:	add    BYTE PTR [rax],al
   140033810:	xor    DWORD PTR [rbp-0x7a3effff],eax
   140033816:	add    DWORD PTR [rax],eax
   140033818:	jmp    0x140033881
   14003381a:	add    al,BYTE PTR [rax]
   14003381c:	add    BYTE PTR [rax],al
   14003381e:	add    BYTE PTR [rax],al
   140033820:	add    DWORD PTR [rsi],eax
   140033822:	add    al,BYTE PTR [rax]
   140033824:	(bad)  
   140033825:	push   rdx
   140033826:	add    dl,BYTE PTR [rax+0x11]
   140033829:	sbb    BYTE PTR [rcx],cl
   14003382b:	add    BYTE PTR [rax],bl
   14003382d:	je     0x14003384f
   14003382f:	add    BYTE PTR [rax],bl
   140033831:	fs (bad) 
   140033833:	add    BYTE PTR [rax],bl
   140033835:	xor    al,0x1e
   140033837:	add    BYTE PTR [rax],bl
   140033839:	add    DWORD PTR [rax+rax*1],ebx
   14003383c:	adc    eax,esp
   14003383e:	add    BYTE PTR [rax],al
   140033840:	adc    BYTE PTR [rcx+0x10000],al
   140033846:	add    BYTE PTR [rax],al
   140033848:	xor    DWORD PTR [rsi-0x7938ffff],eax
   14003384e:	add    DWORD PTR [rax],eax
   140033850:	add    al,0x68
   140033852:	add    al,BYTE PTR [rax]
   140033854:	add    BYTE PTR [rax],al
   140033856:	add    BYTE PTR [rax],al
   140033858:	add    DWORD PTR [rsi],eax
   14003385a:	add    al,BYTE PTR [rax]
   14003385c:	(bad)  
   14003385d:	push   rdx
   14003385e:	add    dl,BYTE PTR [rax+0x1]
   140033861:	clts   
   140033863:	add    BYTE PTR [rdi],cl
   140033865:	fs (bad) 
   140033867:	add    BYTE PTR [rdi],cl
   140033869:	xor    al,0x6
   14003386b:	add    BYTE PTR [rdi],cl
   14003386d:	xor    cl,BYTE PTR [rbx]
   14003386f:	jo     0x140033872
   140033871:	(bad)  
   140033872:	add    al,BYTE PTR [rax]
   140033874:	(bad)  
   140033875:	xor    al,BYTE PTR [rdx]
   140033877:	xor    BYTE PTR [rcx],al
   140033879:	or     DWORD PTR [rdx],eax
   14003387b:	add    BYTE PTR [rcx],cl
   14003387d:	xor    al,BYTE PTR [rip+0x2060130]        # 0x1420939b3
   140033883:	add    BYTE PTR [rsi],al
   140033885:	xor    al,BYTE PTR [rdx]
   140033887:	xor    BYTE PTR [rcx],al
   140033889:	clts   
   14003388b:	add    BYTE PTR [rdi],cl
   14003388d:	fs (bad) 
   14003388f:	add    BYTE PTR [rdi],cl
   140033891:	xor    al,0x6
   140033893:	add    BYTE PTR [rdi],cl
   140033895:	xor    cl,BYTE PTR [rbx]
   140033897:	jo     0x14003389a
   140033899:	or     al,BYTE PTR [rax+rax*1]
   14003389c:	or     dh,BYTE PTR [rsi+rax*1]
   14003389f:	add    BYTE PTR [rdx],cl
   1400338a1:	xor    al,BYTE PTR [rsi]
   1400338a3:	jo     0x1400338a6
   1400338a5:	clts   
   1400338a7:	add    BYTE PTR [rdi],cl
   1400338a9:	fs (bad) 
   1400338ab:	add    BYTE PTR [rdi],cl
   1400338ad:	xor    al,0x6
   1400338af:	add    BYTE PTR [rdi],cl
   1400338b1:	xor    cl,BYTE PTR [rbx]
   1400338b3:	jo     0x1400338ce
   1400338b5:	adc    eax,0x72060002
   1400338ba:	add    dh,BYTE PTR [rax]
   1400338bc:	add    al,dl
   1400338be:	add    BYTE PTR [rax],al
   1400338c0:	cmp    BYTE PTR [rax],al
   1400338c2:	add    BYTE PTR [rax],al
   1400338c4:	sbb    DWORD PTR [rip+0x72060002],edx        # 0x1b20938cc
   1400338ca:	add    dh,BYTE PTR [rax]
   1400338cc:	add    al,dl
   1400338ce:	add    BYTE PTR [rax],al
   1400338d0:	cmp    BYTE PTR [rax],al
   1400338d2:	add    BYTE PTR [rax],al
   1400338d4:	add    DWORD PTR [rdi],ecx
   1400338d6:	(bad)  
   1400338d7:	add    BYTE PTR [rdi],cl
   1400338d9:	fs (bad) 
   1400338db:	add    BYTE PTR [rdi],cl
   1400338dd:	xor    al,0x6
   1400338df:	add    BYTE PTR [rdi],cl
   1400338e1:	xor    cl,BYTE PTR [rbx]
   1400338e3:	jo     0x1400338e6
   1400338e5:	(bad)  
   1400338e6:	add    al,BYTE PTR [rax]
   1400338e8:	(bad)  
   1400338e9:	xor    al,BYTE PTR [rdx]
   1400338eb:	xor    BYTE PTR [rcx],al
   1400338ed:	(bad)  
   1400338ee:	add    al,BYTE PTR [rax]
   1400338f0:	(bad)  
   1400338f1:	xor    al,BYTE PTR [rdx]
   1400338f3:	xor    BYTE PTR [rcx],al
   1400338f5:	(bad)  
   1400338f6:	add    al,BYTE PTR [rax]
   1400338f8:	(bad)  
   1400338f9:	xor    al,BYTE PTR [rdx]
   1400338fb:	xor    BYTE PTR [rcx],al
   1400338fd:	(bad)  
   1400338fe:	add    al,BYTE PTR [rax]
   140033900:	(bad)  
   140033901:	xor    al,BYTE PTR [rdx]
   140033903:	xor    BYTE PTR [rcx],al
   140033905:	(bad)  
   140033906:	add    al,BYTE PTR [rax]
   140033908:	(bad)  
   140033909:	xor    al,BYTE PTR [rdx]
   14003390b:	xor    BYTE PTR [rcx],al
   14003390d:	or     al,BYTE PTR [rax+rax*1]
   140033910:	or     dh,BYTE PTR [rdi+rax*1]
   140033913:	add    BYTE PTR [rdx],cl
   140033915:	xor    al,BYTE PTR [rsi]
   140033917:	jo     0x14003391a
   140033919:	clts   
   14003391b:	add    BYTE PTR [rdi],cl
   14003391d:	fs (bad) 
   14003391f:	add    BYTE PTR [rdi],cl
   140033921:	xor    al,0x6
   140033923:	add    BYTE PTR [rdi],cl
   140033925:	xor    cl,BYTE PTR [rbx]
   140033927:	jo     0x14003392a
   140033929:	clts   
   14003392b:	add    BYTE PTR [rdi],cl
   14003392d:	fs (bad) 
   14003392f:	add    BYTE PTR [rdi],cl
   140033931:	xor    al,0x6
   140033933:	add    BYTE PTR [rdi],cl
   140033935:	xor    cl,BYTE PTR [rbx]
   140033937:	jo     0x14003393a
   140033939:	(bad)  
   14003393a:	add    al,BYTE PTR [rax]
   14003393c:	(bad)  
   14003393d:	xor    al,BYTE PTR [rdx]
   14003393f:	xor    BYTE PTR [rcx],al
   140033941:	(bad)  
   140033942:	add    al,BYTE PTR [rax]
   140033944:	(bad)  
   140033945:	xor    al,BYTE PTR [rdx]
   140033947:	xor    BYTE PTR [rcx],al
   140033949:	(bad)  
   14003394a:	add    al,BYTE PTR [rax]
   14003394c:	(bad)  
   14003394d:	xor    al,BYTE PTR [rdx]
   14003394f:	xor    BYTE PTR [rcx],al
   140033951:	or     DWORD PTR [rdx],eax
   140033953:	add    BYTE PTR [rcx],cl
   140033955:	xor    al,BYTE PTR [rip+0x60f0130]        # 0x146123a8b
   14003395b:	add    BYTE PTR [rdi],cl
   14003395d:	fs (bad) 
   14003395f:	add    BYTE PTR [rdi],cl
   140033961:	xor    al,0x6
   140033963:	add    BYTE PTR [rdi],cl
   140033965:	xor    cl,BYTE PTR [rbx]
   140033967:	jo     0x14003396a
   140033969:	(bad)  
   14003396a:	add    al,BYTE PTR [rax]
   14003396c:	(bad)  
   14003396d:	xor    al,BYTE PTR [rdx]
   14003396f:	xor    BYTE PTR [rcx],al
   140033971:	or     al,BYTE PTR [rax+rax*1]
   140033974:	or     dh,BYTE PTR [rax+rcx*1]
   140033977:	add    BYTE PTR [rdx],cl
   140033979:	push   rdx
   14003397a:	(bad)  
   14003397b:	jo     0x14003397e
   14003397d:	or     al,BYTE PTR [rax+rax*1]
   140033980:	or     dh,BYTE PTR [rax+rcx*1]
   140033983:	add    BYTE PTR [rdx],cl
   140033985:	push   rdx
   140033986:	(bad)  
   140033987:	jo     0x14003398a
   140033989:	or     al,BYTE PTR [rax+rax*1]
   14003398c:	or     dh,BYTE PTR [rax+rcx*1]
   14003398f:	add    BYTE PTR [rdx],cl
   140033991:	push   rdx
   140033992:	(bad)  
   140033993:	jo     0x140033996
   140033995:	or     al,BYTE PTR [rax+rax*1]
   140033998:	or     dh,BYTE PTR [rsi+rax*1]
   14003399b:	add    BYTE PTR [rdx],cl
   14003399d:	xor    al,BYTE PTR [rsi]
   14003399f:	jo     0x1400339a2
   1400339a1:	clts   
   1400339a3:	add    BYTE PTR [rdi],cl
   1400339a5:	fs (bad) 
   1400339a7:	add    BYTE PTR [rdi],cl
   1400339a9:	xor    al,0x6
   1400339ab:	add    BYTE PTR [rdi],cl
   1400339ad:	xor    cl,BYTE PTR [rbx]
   1400339af:	jo     0x1400339b2
   1400339b1:	or     al,BYTE PTR [rax+rax*1]
   1400339b4:	or     dh,BYTE PTR [rsi+rax*1]
   1400339b7:	add    BYTE PTR [rdx],cl
   1400339b9:	xor    al,BYTE PTR [rsi]
   1400339bb:	jo     0x1400339be
   1400339bd:	(bad)  
   1400339be:	add    al,BYTE PTR [rax]
   1400339c0:	(bad)  
   1400339c1:	xor    al,BYTE PTR [rdx]
   1400339c3:	xor    BYTE PTR [rcx],al
   1400339c5:	adc    al,BYTE PTR [rsi]
   1400339c7:	add    BYTE PTR [rdx],dl
   1400339c9:	lldt   WORD PTR fs:[rdx]
   1400339cd:	xor    al,0xc
   1400339cf:	add    BYTE PTR [rdx],dl
   1400339d1:	xchg   edx,eax
   1400339d2:	or     edx,DWORD PTR [rax+0x1]
   1400339d5:	(bad)  
   1400339d6:	add    al,BYTE PTR [rax]
   1400339d8:	(bad)  
   1400339d9:	xor    al,BYTE PTR [rdx]
   1400339db:	xor    BYTE PTR [rcx],bl
   1400339dd:	sub    BYTE PTR [rax],cl
   1400339df:	add    BYTE PTR [rdx],bl
   1400339e1:	je     0x1400339f8
   1400339e3:	add    BYTE PTR [rdx],bl
   1400339e5:	fs adc al,0x0
   1400339e8:	sbb    dh,BYTE PTR [rbx+rdx*1]
   1400339eb:	add    BYTE PTR [rdx],bl
   1400339ed:	repnz adc BYTE PTR [rax+0x0],dl
   1400339f1:	rol    BYTE PTR [rax],1
   1400339f3:	add    BYTE PTR [rax+0x0],bh
   1400339f6:	add    BYTE PTR [rax],al
   1400339f8:	add    DWORD PTR [rdi],ebx
   1400339fa:	or     DWORD PTR [rax],eax
   1400339fc:	(bad)  
   1400339fd:	je     0x140033a22
   1400339ff:	add    BYTE PTR [rdi],bl
   140033a01:	and    DWORD PTR fs:[rax],eax
   140033a04:	(bad)  
   140033a05:	xor    al,0x20
   140033a07:	add    BYTE PTR [rdi],bl
   140033a09:	add    DWORD PTR [rsi],ebx
   140033a0b:	add    BYTE PTR [rax+rdx*2],dl
   140033a0e:	add    BYTE PTR [rax],al
   140033a10:	add    DWORD PTR [rdx],esp
   140033a12:	or     eax,DWORD PTR [rax]
   140033a14:	and    ah,ah
   140033a16:	rex.WXB add BYTE PTR [r10],spl
   140033a19:	je     0x140033a65
   140033a1b:	add    BYTE PTR [rdx],ah
   140033a1d:	rex.WB add BYTE PTR fs:[r10],spl
   140033a21:	xor    al,0x48
   140033a23:	add    BYTE PTR [rdx],ah
   140033a25:	add    DWORD PTR [rsi+0x0],eax
   140033a28:	adc    al,0x50
   140033a2a:	add    BYTE PTR [rax],al
   140033a2c:	add    DWORD PTR [rip+0x340d0004],ecx        # 0x174103a36
   140033a32:	or     al,BYTE PTR [rax]
   140033a34:	or     eax,0x1500672
   140033a39:	or     al,BYTE PTR [rax+rax*1]
   140033a3c:	or     dh,BYTE PTR [rdx+rcx*1]
   140033a3f:	add    BYTE PTR [rdx],cl
   140033a41:	jb     0x140033a49
   140033a43:	jo     0x140033a46
   140033a45:	(bad)  
   140033a46:	or     BYTE PTR [rax],al
   140033a48:	(bad)  
   140033a49:	je     0x140033a5b
   140033a4b:	add    BYTE PTR [rdi],dl
   140033a4d:	lldt   WORD PTR fs:[rdi]
   140033a51:	xor    al,0xe
   140033a53:	add    BYTE PTR [rdi],dl
   140033a55:	mov    dl,0x10
   140033a57:	push   rax
   140033a58:	add    DWORD PTR [rcx*1+0x39742400],esp
   140033a5f:	add    BYTE PTR [rsp+riz*2],ah
   140033a62:	(bad)  
   140033a63:	add    BYTE PTR [rsp+rsi*1],ah
   140033a66:	add    BYTE PTR ss:[rcx+rax*1],ah
   140033a6a:	xor    BYTE PTR [rax],al
   140033a6c:	sbb    al,dh
   140033a6e:	(bad)  
   140033a6f:	loopne 0x140033a85
   140033a71:	rcl    BYTE PTR [rdx],1
   140033a73:	rcl    BYTE PTR [rax],0x50
   140033a76:	add    BYTE PTR [rax],al
   140033a78:	sbb    DWORD PTR [rip+0x741f000b],ebp        # 0x1b4223a89
   140033a7e:	(bad)  
   140033a7f:	add    BYTE PTR [rdi],bl
   140033a81:	fs add BYTE PTR es:[rdi],bl
   140033a85:	xor    al,0x25
   140033a87:	add    BYTE PTR [rdi],bl
   140033a89:	add    DWORD PTR [rax],esp
   140033a8b:	add    BYTE PTR [rax+rsi*8],dl
   140033a8e:	adc    ah,al
   140033a90:	adc    BYTE PTR [rax+0x0],dl
   140033a93:	add    BYTE PTR [rax],al
   140033a95:	rol    BYTE PTR [rax],1
   140033a97:	add    al,dh
   140033a99:	add    BYTE PTR [rax],al
   140033a9b:	add    BYTE PTR [rcx],bl
   140033a9d:	sub    DWORD PTR [rcx],ecx
   140033a9f:	add    BYTE PTR [rbx],bl
   140033aa1:	je     0x140033ad0
   140033aa3:	add    BYTE PTR [rbx],bl
   140033aa5:	fs sub al,0x0
   140033aa8:	sbb    esi,DWORD PTR [rbx+rbp*1]
   140033aab:	add    BYTE PTR [rbx],bl
   140033aad:	add    DWORD PTR [rax],ebp
   140033aaf:	add    BYTE PTR [rax],dl
   140033ab1:	push   rax
   140033ab2:	add    BYTE PTR [rax],al
   140033ab4:	add    al,dl
   140033ab6:	add    BYTE PTR [rax],al
   140033ab8:	xor    BYTE PTR [rcx],al
   140033aba:	add    BYTE PTR [rax],al
   140033abc:	add    DWORD PTR [rip+0x7835000f],esi        # 0x1b8383ad1
   140033ac2:	or     eax,0xe682b00
   140033ac7:	add    BYTE PTR [rip+0x1d002634],bl        # 0x15d036101
   140033acd:	add    DWORD PTR [rsi],ebx
   140033acf:	add    BYTE PTR [rdx],dl
   140033ad1:	lock adc al,ah
   140033ad4:	(bad)  
   140033ad5:	ror    BYTE PTR [rax+rax*8],1
   140033ad8:	or     dh,BYTE PTR [rax+0x9]
   140033adb:	(bad)  
   140033adc:	or     BYTE PTR [rax+0x0],dl
   140033adf:	add    BYTE PTR [rcx],al
   140033ae1:	add    al,0x1
   140033ae3:	add    BYTE PTR [rdx+rax*2],al
   140033ae6:	add    BYTE PTR [rax],al
   140033ae8:	add    DWORD PTR [rsi],eax
   140033aea:	add    al,BYTE PTR [rax]
   140033aec:	(bad)  
   140033aed:	jb     0x140033af1
   140033aef:	xor    BYTE PTR [rcx],al
   140033af1:	(bad)  
   140033af2:	add    al,BYTE PTR [rax]
   140033af4:	(bad)  
   140033af5:	xor    al,BYTE PTR [rdx]
   140033af7:	xor    BYTE PTR [rcx],al
   140033af9:	or     eax,0x340d0004
   140033afe:	or     al,0x0
   140033b00:	or     eax,0x1500692
   140033b05:	or     al,BYTE PTR [rax+rax*1]
   140033b08:	or     dh,BYTE PTR [rax+rcx*1]
   140033b0b:	add    BYTE PTR [rdx],cl
   140033b0d:	push   rdx
   140033b0e:	(bad)  
   140033b0f:	jo     0x140033b12
   140033b11:	(bad)  
   140033b12:	add    al,BYTE PTR [rax]
   140033b14:	(bad)  
   140033b15:	xor    al,BYTE PTR [rdx]
   140033b17:	xor    BYTE PTR [rcx],al
   140033b19:	or     eax,0x340d0004
   140033b1e:	(bad)  
   140033b1f:	add    BYTE PTR [rip+0x15006b2],cl        # 0x1415341d7
   140033b25:	adc    al,BYTE PTR [rsi]
   140033b27:	add    BYTE PTR [rdx],dl
   140033b29:	je     0x140033b3a
   140033b2b:	add    BYTE PTR [rdx],dl
   140033b2d:	xor    al,0xe
   140033b2f:	add    BYTE PTR [rdx],dl
   140033b31:	mov    dl,0xb
   140033b33:	push   rax
   140033b34:	add    DWORD PTR [rcx],ebp
   140033b36:	or     eax,0xd682900
   140033b3b:	add    BYTE PTR [rdx],ah
   140033b3d:	and    eax,DWORD PTR fs:[rax]
   140033b40:	and    dh,BYTE PTR [rdx+riz*1]
   140033b43:	add    BYTE PTR [rdx],ah
   140033b45:	add    DWORD PTR [rax+rax*1],ebx
   140033b48:	(bad)  
   140033b49:	lock adc eax,0x11c013e0
   140033b4f:	jo     0x140033b61
   140033b51:	push   rax
   140033b52:	add    BYTE PTR [rax],al
   140033b54:	add    DWORD PTR [rdi],edx
   140033b56:	or     BYTE PTR [rax],al
   140033b58:	(bad)  
   140033b59:	in     al,0x10
   140033b5b:	add    BYTE PTR [rdi],dl
   140033b5d:	lldt   WORD PTR fs:[rdi]
   140033b61:	xor    al,0xe
   140033b63:	add    BYTE PTR [rdi],dl
   140033b65:	mov    dl,0x10
   140033b67:	push   rax
   140033b68:	add    DWORD PTR [rax],ecx
   140033b6a:	add    al,BYTE PTR [rax]
   140033b6c:	or     BYTE PTR [rdx+0xf013004],dl
   140033b72:	(bad)  
   140033b73:	add    BYTE PTR [rdi],cl
   140033b75:	xor    al,0x12
   140033b77:	add    BYTE PTR [rdi],cl
   140033b79:	ror    BYTE PTR [rax],cl
   140033b7b:	jo     0x140033b84
   140033b7d:	(bad)  
   140033b7e:	(bad)  
   140033b7f:	push   rax
   140033b80:	add    DWORD PTR [rdi],edx
   140033b82:	or     BYTE PTR [rax],al
   140033b84:	(bad)  
   140033b85:	je     0x140033b97
   140033b87:	add    BYTE PTR [rdi],dl
   140033b89:	lldt   WORD PTR fs:[rdi]
   140033b8d:	xor    al,0xe
   140033b8f:	add    BYTE PTR [rdi],dl
   140033b91:	mov    dl,0x10
   140033b93:	push   rax
   140033b94:	add    DWORD PTR [rbx],ebx
   140033b96:	or     al,BYTE PTR [rax]
   140033b98:	sbb    esi,DWORD PTR [rsi+rcx*1+0x0]
   140033b9c:	sbb    esp,DWORD PTR [rbp+rcx*1+0x0]
   140033ba0:	sbb    esi,DWORD PTR [rsp+rcx*1]
   140033ba3:	add    BYTE PTR [rbx],bl
   140033ba5:	jb     0x140033bbb
   140033ba7:	lock adc ah,al
   140033baa:	adc    BYTE PTR [rax+0x1],dl
   140033bad:	adc    al,BYTE PTR [rsi]
   140033baf:	add    BYTE PTR [rdx],dl
   140033bb1:	je     0x140033bc0
   140033bb3:	add    BYTE PTR [rdx],dl
   140033bb5:	xor    al,0xc
   140033bb7:	add    BYTE PTR [rdx],dl
   140033bb9:	xchg   edx,eax
   140033bba:	or     edx,DWORD PTR [rax+0x1]
   140033bbd:	(bad)  
   140033bbe:	or     al,BYTE PTR [rax]
   140033bc0:	(bad)  
   140033bc1:	je     0x140033bd9
   140033bc3:	add    BYTE PTR [rsi],bl
   140033bc5:	fs adc eax,0x14341e00
   140033bcb:	add    BYTE PTR [rsi],bl
   140033bcd:	repnz adc al,0xf0
   140033bd0:	adc    ah,al
   140033bd2:	adc    BYTE PTR [rax+0x1],dl
   140033bd5:	and    ecx,DWORD PTR [rip+0x1a742300]        # 0x15a775edb
   140033bdb:	add    BYTE PTR [rbx],ah
   140033bdd:	sbb    DWORD PTR fs:[rax],eax
   140033be0:	and    esi,DWORD PTR [rax+rbx*1]
   140033be3:	add    BYTE PTR [rbx],ah
   140033be5:	add    DWORD PTR [rdx],edx
   140033be7:	add    BYTE PTR [rax],bl
   140033be9:	lock (bad) 
   140033beb:	loopne 0x140033c01
   140033bed:	rcl    BYTE PTR [rdx],1
   140033bef:	rcl    BYTE PTR [rax],0x50
   140033bf2:	add    BYTE PTR [rax],al
   140033bf4:	add    DWORD PTR [rsi],eax
   140033bf6:	add    al,BYTE PTR [rax]
   140033bf8:	(bad)  
   140033bf9:	push   rdx
   140033bfa:	add    dh,BYTE PTR [rax]
   140033bfc:	add    DWORD PTR [rdi],ecx
   140033bfe:	(bad)  
   140033bff:	add    BYTE PTR [rdi],cl
   140033c01:	fs or  eax,0xc340f00
   140033c07:	add    BYTE PTR [rdi],cl
   140033c09:	xchg   edx,eax
   140033c0a:	or     esi,DWORD PTR [rax+0x1]
   140033c0d:	adc    al,BYTE PTR [rsi]
   140033c0f:	add    BYTE PTR [rdx],dl
   140033c11:	je     0x140033c20
   140033c13:	add    BYTE PTR [rdx],dl
   140033c15:	xor    al,0xc
   140033c17:	add    BYTE PTR [rdx],dl
   140033c19:	xchg   edx,eax
   140033c1a:	or     edx,DWORD PTR [rax+0x1]
   140033c1d:	adc    BYTE PTR [rsi],al
   140033c1f:	add    BYTE PTR [rax],dl
   140033c21:	or     DWORD PTR fs:[rax],eax
   140033c24:	adc    BYTE PTR [rax+rcx*1],dh
   140033c27:	add    BYTE PTR [rax],dl
   140033c29:	push   rdx
   140033c2a:	or     al,0x70
   140033c2c:	add    DWORD PTR [rsi],eax
   140033c2e:	add    al,BYTE PTR [rax]
   140033c30:	(bad)  
   140033c31:	xor    al,BYTE PTR [rdx]
   140033c33:	xor    BYTE PTR [rcx],al
   140033c35:	or     al,BYTE PTR [rax+rax*1]
   140033c38:	or     dh,BYTE PTR [rsp+rcx*1]
   140033c3b:	add    BYTE PTR [rdx],cl
   140033c3d:	xchg   edx,eax
   140033c3e:	(bad)  
   140033c3f:	jo     0x140033c42
   140033c41:	or     BYTE PTR [rdx],al
   140033c43:	add    BYTE PTR [rax],cl
   140033c45:	xchg   edx,eax
   140033c46:	add    al,0x30
   140033c48:	add    DWORD PTR [rax],ecx
   140033c4a:	add    al,BYTE PTR [rax]
   140033c4c:	or     BYTE PTR [rdx+0x6013004],dl
   140033c52:	add    al,BYTE PTR [rax]
   140033c54:	(bad)  
   140033c55:	xor    al,BYTE PTR [rdx]
   140033c57:	xor    BYTE PTR [rcx],al
   140033c59:	(bad)  
   140033c5a:	add    al,BYTE PTR [rax]
   140033c5c:	(bad)  
   140033c5d:	xor    al,BYTE PTR [rdx]
   140033c5f:	xor    BYTE PTR [rcx],al
   140033c61:	(bad)  
   140033c62:	add    al,BYTE PTR [rax]
   140033c64:	(bad)  
   140033c65:	xor    al,BYTE PTR [rdx]
   140033c67:	xor    BYTE PTR [rcx],al
   140033c69:	(bad)  
   140033c6a:	or     BYTE PTR [rax],al
   140033c6c:	(bad)  
   140033c6d:	je     0x140033c7f
   140033c6f:	add    BYTE PTR [rdi],dl
   140033c71:	lldt   WORD PTR fs:[rdi]
   140033c75:	xor    al,0xe
   140033c77:	add    BYTE PTR [rdi],dl
   140033c79:	mov    dl,0x10
   140033c7b:	push   rax
   140033c7c:	add    DWORD PTR [rsi],eax
   140033c7e:	add    al,BYTE PTR [rax]
   140033c80:	(bad)  
   140033c81:	xor    al,BYTE PTR [rdx]
   140033c83:	xor    BYTE PTR [rcx],al
   140033c85:	(bad)  
   140033c86:	add    al,BYTE PTR [rax]
   140033c88:	(bad)  
   140033c89:	xor    al,BYTE PTR [rdx]
   140033c8b:	xor    BYTE PTR [rcx],al
   140033c8d:	(bad)  
   140033c8e:	add    al,BYTE PTR [rax]
   140033c90:	(bad)  
   140033c91:	xor    al,BYTE PTR [rdx]
   140033c93:	xor    BYTE PTR [rcx],al
   140033c95:	adc    al,BYTE PTR [rsi]
   140033c97:	add    BYTE PTR [rdx],dl
   140033c99:	je     0x140033cac
   140033c9b:	add    BYTE PTR [rdx],dl
   140033c9d:	xor    al,0x10
   140033c9f:	add    BYTE PTR [rdx],dl
   140033ca1:	ror    BYTE PTR [rbx],cl
   140033ca3:	push   rax
   140033ca4:	add    DWORD PTR [rsi],eax
   140033ca6:	add    al,BYTE PTR [rax]
   140033ca8:	(bad)  
   140033ca9:	xor    al,BYTE PTR [rdx]
   140033cab:	xor    BYTE PTR [rcx],al
   140033cad:	(bad)  
   140033cae:	add    al,BYTE PTR [rax]
   140033cb0:	(bad)  
   140033cb1:	push   rdx
   140033cb2:	add    dh,BYTE PTR [rax]
   140033cb4:	add    DWORD PTR [rsi],eax
   140033cb6:	add    al,BYTE PTR [rax]
   140033cb8:	(bad)  
   140033cb9:	xor    al,BYTE PTR [rdx]
   140033cbb:	xor    BYTE PTR [rcx],al
   140033cbd:	(bad)  
   140033cbe:	add    al,BYTE PTR [rax]
   140033cc0:	(bad)  
   140033cc1:	jb     0x140033cc5
   140033cc3:	xor    BYTE PTR [rcx],al
   140033cc5:	or     eax,0x340d0004
   140033cca:	adc    BYTE PTR [rax],al
   140033ccc:	or     eax,0x15006d2
   140033cd1:	clts   
   140033cd3:	add    BYTE PTR [rdi],cl
   140033cd5:	fs (bad) 
   140033cd7:	add    BYTE PTR [rdi],cl
   140033cd9:	xor    al,0x6
   140033cdb:	add    BYTE PTR [rdi],cl
   140033cdd:	xor    cl,BYTE PTR [rbx]
   140033cdf:	jo     0x140033ce2
   140033ce1:	add    al,0x1
   140033ce3:	add    BYTE PTR [rdx+rax*2],al
   140033ce6:	add    BYTE PTR [rax],al
   140033ce8:	add    DWORD PTR [rcx+rax*1],eax
   140033ceb:	add    BYTE PTR [rdx+rax*2],al
   140033cee:	add    BYTE PTR [rax],al
   140033cf0:	add    DWORD PTR [rcx+rax*1],eax
   140033cf3:	add    BYTE PTR [rdx+rax*2],al
   140033cf6:	add    BYTE PTR [rax],al
   140033cf8:	add    DWORD PTR [rdi],ecx
   140033cfa:	(bad)  
   140033cfb:	add    BYTE PTR [rdi],cl
   140033cfd:	fs (bad) 
   140033cff:	add    BYTE PTR [rdi],cl
   140033d01:	xor    al,0x6
   140033d03:	add    BYTE PTR [rdi],cl
   140033d05:	xor    cl,BYTE PTR [rbx]
   140033d07:	jo     0x140033d0a
   140033d09:	(bad)  
   140033d0a:	add    al,BYTE PTR [rax]
   140033d0c:	(bad)  
   140033d0d:	xor    al,BYTE PTR [rdx]
   140033d0f:	xor    BYTE PTR [rcx],al
   140033d11:	or     al,BYTE PTR [rax+rax*1]
   140033d14:	or     dh,BYTE PTR [rsi+rax*1]
   140033d17:	add    BYTE PTR [rdx],cl
   140033d19:	xor    al,BYTE PTR [rsi]
   140033d1b:	jo     0x140033d1e
   140033d1d:	(bad)  
   140033d1e:	add    al,BYTE PTR [rax]
   140033d20:	(bad)  
   140033d21:	jb     0x140033d25
   140033d23:	xor    BYTE PTR [rcx],al
   140033d25:	(bad)  
   140033d26:	add    al,BYTE PTR [rax]
   140033d28:	(bad)  
   140033d29:	jb     0x140033d2d
   140033d2b:	xor    BYTE PTR [rcx],al
   140033d2d:	(bad)  
   140033d2e:	add    al,BYTE PTR [rax]
   140033d30:	(bad)  
   140033d31:	jb     0x140033d35
   140033d33:	xor    BYTE PTR [rcx],al
   140033d35:	(bad)  
   140033d36:	add    al,BYTE PTR [rax]
   140033d38:	(bad)  
   140033d39:	jb     0x140033d3d
   140033d3b:	xor    BYTE PTR [rcx],al
   140033d3d:	(bad)  
   140033d3e:	add    al,BYTE PTR [rax]
   140033d40:	(bad)  
   140033d41:	jb     0x140033d45
   140033d43:	xor    BYTE PTR [rcx],al
   140033d45:	(bad)  
   140033d46:	add    al,BYTE PTR [rax]
   140033d48:	(bad)  
   140033d49:	jb     0x140033d4d
   140033d4b:	xor    BYTE PTR [rcx],al
   140033d4d:	(bad)  
   140033d4e:	add    al,BYTE PTR [rax]
   140033d50:	(bad)  
   140033d51:	jb     0x140033d55
   140033d53:	xor    BYTE PTR [rcx],al
   140033d55:	(bad)  
   140033d56:	add    al,BYTE PTR [rax]
   140033d58:	(bad)  
   140033d59:	jb     0x140033d5d
   140033d5b:	xor    BYTE PTR [rcx],al
   140033d5d:	(bad)  
   140033d5e:	add    al,BYTE PTR [rax]
   140033d60:	(bad)  
   140033d61:	jb     0x140033d65
   140033d63:	xor    BYTE PTR [rcx],al
   140033d65:	(bad)  
   140033d66:	add    al,BYTE PTR [rax]
   140033d68:	(bad)  
   140033d69:	jb     0x140033d6d
   140033d6b:	xor    BYTE PTR [rcx],al
   140033d6d:	(bad)  
   140033d6e:	add    al,BYTE PTR [rax]
   140033d70:	(bad)  
   140033d71:	jb     0x140033d75
   140033d73:	xor    BYTE PTR [rcx],al
   140033d75:	(bad)  
   140033d76:	add    al,BYTE PTR [rax]
   140033d78:	(bad)  
   140033d79:	jb     0x140033d7d
   140033d7b:	xor    BYTE PTR [rcx],al
   140033d7d:	(bad)  
   140033d7e:	add    al,BYTE PTR [rax]
   140033d80:	(bad)  
   140033d81:	jb     0x140033d85
   140033d83:	xor    BYTE PTR [rcx],al
   140033d85:	(bad)  
   140033d86:	add    al,BYTE PTR [rax]
   140033d88:	(bad)  
   140033d89:	jb     0x140033d8d
   140033d8b:	xor    BYTE PTR [rcx],al
   140033d8d:	(bad)  
   140033d8e:	add    al,BYTE PTR [rax]
   140033d90:	(bad)  
   140033d91:	jb     0x140033d95
   140033d93:	xor    BYTE PTR [rcx],al
   140033d95:	(bad)  
   140033d96:	add    al,BYTE PTR [rax]
   140033d98:	(bad)  
   140033d99:	jb     0x140033d9d
   140033d9b:	xor    BYTE PTR [rcx],al
   140033d9d:	(bad)  
   140033d9e:	add    al,BYTE PTR [rax]
   140033da0:	(bad)  
   140033da1:	jb     0x140033da5
   140033da3:	xor    BYTE PTR [rcx],al
   140033da5:	(bad)  
   140033da6:	add    al,BYTE PTR [rax]
   140033da8:	(bad)  
   140033da9:	jb     0x140033dad
   140033dab:	xor    BYTE PTR [rcx],al
   140033dad:	(bad)  
   140033dae:	add    al,BYTE PTR [rax]
   140033db0:	(bad)  
   140033db1:	jb     0x140033db5
   140033db3:	xor    BYTE PTR [rcx],al
   140033db5:	(bad)  
   140033db6:	add    al,BYTE PTR [rax]
   140033db8:	(bad)  
   140033db9:	jb     0x140033dbd
   140033dbb:	xor    BYTE PTR [rcx],al
   140033dbd:	(bad)  
   140033dbe:	add    al,BYTE PTR [rax]
   140033dc0:	(bad)  
   140033dc1:	jb     0x140033dc5
   140033dc3:	xor    BYTE PTR [rcx],al
   140033dc5:	(bad)  
   140033dc6:	add    al,BYTE PTR [rax]
   140033dc8:	(bad)  
   140033dc9:	jb     0x140033dcd
   140033dcb:	xor    BYTE PTR [rcx],al
   140033dcd:	(bad)  
   140033dce:	add    al,BYTE PTR [rax]
   140033dd0:	(bad)  
   140033dd1:	jb     0x140033dd5
   140033dd3:	xor    BYTE PTR [rcx],al
   140033dd5:	(bad)  
   140033dd6:	add    al,BYTE PTR [rax]
   140033dd8:	(bad)  
   140033dd9:	xor    al,BYTE PTR [rdx]
   140033ddb:	xor    BYTE PTR [rcx],al
   140033ddd:	(bad)  
   140033dde:	add    al,BYTE PTR [rax]
   140033de0:	(bad)  
   140033de1:	xor    al,BYTE PTR [rdx]
   140033de3:	xor    BYTE PTR [rcx],al
   140033de5:	(bad)  
   140033de6:	add    al,BYTE PTR [rax]
   140033de8:	(bad)  
   140033de9:	jb     0x140033ded
   140033deb:	xor    BYTE PTR [rcx],al
   140033ded:	(bad)  
   140033dee:	add    al,BYTE PTR [rax]
   140033df0:	(bad)  
   140033df1:	jb     0x140033df5
   140033df3:	xor    BYTE PTR [rcx],al
   140033df5:	adc    al,BYTE PTR [rsi]
   140033df7:	add    BYTE PTR [rdx],dl
   140033df9:	in     al,0x13
   140033dfb:	add    BYTE PTR [rdx],dl
   140033dfd:	je     0x140033e10
   140033dff:	add    BYTE PTR [rdx],dl
   140033e01:	ror    BYTE PTR [rbx],cl
   140033e03:	push   rax
   140033e04:	add    DWORD PTR [rcx+rax*1],eax
   140033e07:	add    BYTE PTR [rdx+riz*1],al
   140033e0a:	add    BYTE PTR [rax],al
   140033e0c:	add    DWORD PTR [rdx],ecx
   140033e0e:	add    al,0x0
   140033e10:	or     dh,BYTE PTR [rsi+rax*1]
   140033e13:	add    BYTE PTR [rdx],cl
   140033e15:	xor    al,BYTE PTR [rsi]
   140033e17:	jo     0x140033e32
   140033e19:	sbb    al,0x4
   140033e1b:	add    BYTE PTR [rip+0xd001434],cl        # 0x14d035255
   140033e21:	repnz (bad) 
   140033e23:	jo     0x140033e25
   140033e25:	rol    BYTE PTR [rax],1
   140033e27:	add    BYTE PTR [rax+0x0],bh
   140033e2a:	add    BYTE PTR [rax],al
   140033e2c:	sbb    DWORD PTR [rsp+rax*1],ebx
   140033e2f:	add    BYTE PTR [rip+0xd001434],cl        # 0x14d035269
   140033e35:	repnz (bad) 
   140033e37:	jo     0x140033e39
   140033e39:	rol    BYTE PTR [rax],1
   140033e3b:	add    BYTE PTR [rax+0x0],bh
   140033e3e:	add    BYTE PTR [rax],al
   140033e40:	sbb    DWORD PTR [rdx],ebx
   140033e42:	add    al,0x0
   140033e44:	or     esi,edx
   140033e46:	add    al,0x70
   140033e48:	add    esp,DWORD PTR [rax+0x2]
   140033e4b:	xor    BYTE PTR [rax],al
   140033e4d:	rol    BYTE PTR [rax],1
   140033e4f:	add    BYTE PTR [rax+0x0],bh
   140033e52:	add    BYTE PTR [rax],al
   140033e54:	sbb    DWORD PTR [rdi],ebx
   140033e56:	(bad)  
   140033e57:	add    BYTE PTR [rcx],dl
   140033e59:	add    DWORD PTR [rcx],edx
   140033e5b:	add    BYTE PTR [rip+0x3600470],al        # 0x1436342d1
   140033e61:	xor    BYTE PTR [rdx],al
   140033e63:	push   rax
   140033e64:	add    al,dl
   140033e66:	add    BYTE PTR [rax],al
   140033e68:	jo     0x140033e6a
   140033e6a:	add    BYTE PTR [rax],al
   140033e6c:	add    DWORD PTR [rip+0x34050002],eax        # 0x174083e74
   140033e72:	add    DWORD PTR [rax],eax
   140033e74:	add    DWORD PTR [rsi],eax
   140033e76:	add    al,BYTE PTR [rax]
   140033e78:	(bad)  
   140033e79:	xor    al,BYTE PTR [rdx]
   140033e7b:	xor    BYTE PTR [rcx],al
   140033e7d:	or     al,BYTE PTR [rax+rax*1]
   140033e80:	or     dh,BYTE PTR [rdx+rcx*1]
   140033e83:	add    BYTE PTR [rdx],cl
   140033e85:	jb     0x140033e8d
   140033e87:	jo     0x140033e8a
   140033e89:	clts   
   140033e8b:	add    BYTE PTR [rdi],cl
   140033e8d:	or     eax,DWORD PTR fs:[rax]
   140033e90:	sysenter 
   140033e92:	or     al,BYTE PTR [rax]
   140033e94:	(bad)  
   140033e96:	or     esi,DWORD PTR [rax+0x1]
   140033e99:	add    al,0x1
   140033e9b:	add    BYTE PTR [rdx+rdx*1],al
   140033e9e:	add    BYTE PTR [rax],al
   140033ea0:	add    DWORD PTR [rdi],ebx
   140033ea2:	or     al,0x0
   140033ea4:	(bad)  
   140033ea5:	je     0x140033eb7
   140033ea7:	add    BYTE PTR [rdi],bl
   140033ea9:	ltr    WORD PTR fs:[rdi]
   140033ead:	xor    al,0xe
   140033eaf:	add    BYTE PTR [rdi],bl
   140033eb1:	jb     0x140033ecb
   140033eb3:	lock (bad) 
   140033eb5:	loopne 0x140033ecb
   140033eb7:	rcl    BYTE PTR [rdx],1
   140033eb9:	rcl    BYTE PTR [rax],0x50
   140033ebc:	add    DWORD PTR [rsi],ecx
   140033ebe:	add    al,BYTE PTR [rax]
   140033ec0:	(bad)  
   140033ec1:	xor    cl,BYTE PTR [rdx]
   140033ec3:	xor    BYTE PTR [rcx],al
   140033ec5:	sbb    al,0xc
   140033ec7:	add    BYTE PTR [rsp+riz*2],bl
   140033eca:	adc    BYTE PTR [rax],al
   140033ecc:	sbb    al,0x54
   140033ece:	ltr    WORD PTR [rsp+rsi*1]
   140033ed2:	(bad)  
   140033ed3:	add    BYTE PTR [rdx+rsi*2],bl
   140033ed6:	sbb    al,dh
   140033ed8:	(bad)  
   140033ed9:	loopne 0x140033eef
   140033edb:	rcl    BYTE PTR [rdx],1
   140033edd:	rcl    BYTE PTR [rax],0x70
   140033ee0:	add    DWORD PTR [rdx],ecx
   140033ee2:	add    al,BYTE PTR [rax]
   140033ee4:	or     dh,BYTE PTR [rdx]
   140033ee6:	(bad)  
   140033ee7:	xor    BYTE PTR [rcx],al
   140033ee9:	clts   
   140033eeb:	add    BYTE PTR [rdi],cl
   140033eed:	push   rsp
   140033eee:	(bad)  
   140033eef:	add    BYTE PTR [rdi],cl
   140033ef1:	xor    al,0x6
   140033ef3:	add    BYTE PTR [rdi],cl
   140033ef5:	xor    cl,BYTE PTR [rbx]
   140033ef7:	jo     0x140033efa
   140033ef9:	sbb    ecx,DWORD PTR [rdx]
   140033efb:	add    BYTE PTR [rbx],bl
   140033efd:	in     al,0xd
   140033eff:	add    BYTE PTR [rbx],bl
   140033f01:	je     0x140033f0f
   140033f03:	add    BYTE PTR [rbx],bl
   140033f05:	or     eax,DWORD PTR fs:[rax]
   140033f08:	sbb    esi,DWORD PTR [rdx+rcx*1]
   140033f0b:	add    BYTE PTR [rbx],bl
   140033f0d:	jb     0x140033f23
   140033f0f:	push   rax
   140033f10:	add    DWORD PTR [rsi],ecx
   140033f12:	add    al,BYTE PTR [rax]
   140033f14:	(bad)  
   140033f15:	xor    cl,BYTE PTR [rdx]
   140033f17:	xor    BYTE PTR [rcx],al
   140033f19:	add    al,0x1
   140033f1b:	add    BYTE PTR [rdx+rax*2],al
   140033f1e:	add    BYTE PTR [rax],al
   140033f20:	add    DWORD PTR [rcx+rax*1],eax
   140033f23:	add    BYTE PTR [rdx+rax*2],al
   140033f26:	add    BYTE PTR [rax],al
   140033f28:	adc    DWORD PTR [rdi],ecx
   140033f2a:	(bad)  
   140033f2b:	add    BYTE PTR [rdi],cl
   140033f2d:	or     DWORD PTR fs:[rax],eax
   140033f30:	sysenter 
   140033f32:	or     BYTE PTR [rax],al
   140033f34:	rsqrtps xmm1,XMMWORD PTR [rbx]
   140033f37:	jo     0x140033f49
   140033f39:	add    DWORD PTR [rax],0x100
   140033f3f:	add    BYTE PTR [rsi],dh
   140033f41:	mov    eax,0xb8a80001
   140033f46:	add    DWORD PTR [rax],eax
   140033f48:	sbb    eax,0x268
   140033f4d:	add    BYTE PTR [rax],al
   140033f4f:	add    BYTE PTR [rcx],al
   140033f51:	(bad)  
   140033f52:	add    al,BYTE PTR [rax]
   140033f54:	(bad)  
   140033f55:	xor    al,BYTE PTR [rdx]
   140033f57:	push   rax
   140033f58:	adc    DWORD PTR [rcx],edx
   140033f5a:	(bad)  
   140033f5b:	add    BYTE PTR [rcx],dl
   140033f5d:	xor    al,0xa
   140033f5f:	add    BYTE PTR [rcx],dl
   140033f61:	xor    cl,BYTE PTR [rip+0xa700be0]        # 0x14a734b47
   140033f67:	(bad)  
   140033f68:	adc    BYTE PTR [rcx+0x10000],al
   140033f6e:	add    BYTE PTR [rax],al
   140033f70:	sub    edi,DWORD PTR [rcx-0x4690ffff]
   140033f76:	add    DWORD PTR [rax],eax
   140033f78:	ss push 0x2
   140033f7e:	add    BYTE PTR [rax],al
   140033f80:	add    DWORD PTR [rsi],eax
   140033f82:	add    al,BYTE PTR [rax]
   140033f84:	(bad)  
   140033f85:	xor    al,BYTE PTR [rdx]
   140033f87:	push   rax
   140033f88:	adc    DWORD PTR [rip+0x34150008],edx        # 0x174183f96
   140033f8e:	or     eax,DWORD PTR [rax]
   140033f90:	adc    eax,0xff01132
   140033f95:	loopne 0x140033fa4
   140033f97:	ror    BYTE PTR [rbx],0x70
   140033f9a:	or     ah,BYTE PTR [rax+0x10]
   140033f9d:	add    DWORD PTR [rax],0x100
   140033fa3:	add    BYTE PTR [rdx],dl
   140033fa5:	mov    edx,0xba450001
   140033faa:	add    DWORD PTR [rax],eax
   140033fac:	rex.WRB push 0x2
   140033fb2:	add    BYTE PTR [rax],al
   140033fb4:	add    DWORD PTR [rsi],eax
   140033fb6:	add    al,BYTE PTR [rax]
   140033fb8:	(bad)  
   140033fb9:	xor    al,BYTE PTR [rdx]
   140033fbb:	push   rax
   140033fbc:	sbb    DWORD PTR [rsi],esi
   140033fbe:	or     eax,DWORD PTR [rax]
   140033fc0:	and    eax,0x25037334
   140033fc5:	add    DWORD PTR [rax+0x3],ebp
   140033fc8:	adc    al,dh
   140033fca:	(bad)  
   140033fcb:	loopne 0x140033fd9
   140033fcd:	ror    BYTE PTR [rdx],1
   140033fcf:	ror    BYTE PTR [rax],0x70
   140033fd2:	(bad)  
   140033fd3:	(bad)  
   140033fd4:	(bad)  
   140033fd5:	push   rax
   140033fd6:	add    BYTE PTR [rax],al
   140033fd8:	add    al,dl
   140033fda:	add    BYTE PTR [rax],al
   140033fdc:	xor    BYTE PTR [rbx],bl
   140033fde:	add    BYTE PTR [rax],al
   140033fe0:	add    DWORD PTR [rax],edx
   140033fe2:	(bad)  
   140033fe3:	add    BYTE PTR [rax],dl
   140033fe5:	adc    DWORD PTR fs:[rax],eax
   140033fe8:	adc    BYTE PTR [rdx+0x7007e009],dh
   140033fee:	(bad)  
   140033fef:	push   rax
   140033ff0:	add    DWORD PTR [rsi],eax
   140033ff2:	add    al,BYTE PTR [rax]
   140033ff4:	(bad)  
   140033ff5:	xor    al,BYTE PTR [rdx]
   140033ff7:	xor    BYTE PTR [rcx],dl
   140033ff9:	or     al,BYTE PTR [rax+rax*1]
   140033ffc:	or     dh,BYTE PTR [rsi+rax*1]
   140033fff:	add    BYTE PTR [rdx],cl
   140034001:	xor    al,BYTE PTR [rsi]
   140034003:	jo     0x140034015
   140034005:	add    DWORD PTR [rax],0x200
   14003400b:	add    BYTE PTR [rax],dh
   14003400d:	rol    BYTE PTR [rcx],1
   14003400f:	add    BYTE PTR [rcx],bh
   140034011:	rol    BYTE PTR [rcx],1
   140034013:	add    BYTE PTR [rsi+0x268],dl
   140034019:	add    BYTE PTR [rax],al
   14003401b:	add    BYTE PTR [rax-0x30],dl
   14003401e:	add    DWORD PTR [rax],eax
   140034020:	push   rdi
   140034021:	rol    BYTE PTR [rcx],1
   140034023:	add    BYTE PTR [rdi+0x268],ch
   140034029:	add    BYTE PTR [rax],al
   14003402b:	add    BYTE PTR [rcx],al
   14003402d:	(bad)  
   14003402e:	add    al,BYTE PTR [rax]
   140034030:	(bad)  
   140034031:	xor    al,BYTE PTR [rdx]
   140034033:	push   rax
   140034034:	add    DWORD PTR [rsi],eax
   140034036:	add    al,BYTE PTR [rax]
   140034038:	(bad)  
   140034039:	xor    al,BYTE PTR [rdx]
   14003403b:	push   rax
   14003403c:	sbb    DWORD PTR [rbx],ebx
   14003403e:	add    eax,DWORD PTR [rax]
   140034040:	or     DWORD PTR [rcx],eax
   140034042:	sub    al,BYTE PTR [rax]
   140034044:	add    dh,BYTE PTR [rax]
   140034046:	add    BYTE PTR [rax],al
   140034048:	add    al,dl
   14003404a:	add    BYTE PTR [rax],al
   14003404c:	rex add DWORD PTR [rax],eax
   14003404f:	add    BYTE PTR [rcx],dl
   140034051:	(bad)  
   140034052:	add    al,BYTE PTR [rax]
   140034054:	(bad)  
   140034055:	xor    cl,BYTE PTR [rdx]
   140034057:	xor    BYTE PTR [rax],dl
   140034059:	add    DWORD PTR [rax],0x200
   14003405f:	add    BYTE PTR [rax-0x31],dl
   140034062:	add    DWORD PTR [rax],eax
   140034064:	je     0x140034035
   140034066:	add    DWORD PTR [rax],eax
   140034068:	fs push 0x2
   14003406e:	add    BYTE PTR [rax],al
   140034070:	(bad)  
   140034071:	iret   
   140034072:	add    DWORD PTR [rax],eax
   140034074:	mov    dh,0xcf
   140034076:	add    DWORD PTR [rax],eax
   140034078:	jge    0x1400340e2
   14003407a:	add    al,BYTE PTR [rax]
   14003407c:	add    BYTE PTR [rax],al
   14003407e:	add    BYTE PTR [rax],al
   140034080:	add    DWORD PTR [rsi],eax
   140034082:	add    al,BYTE PTR [rax]
   140034084:	(bad)  
   140034085:	xor    al,BYTE PTR [rdx]
   140034087:	push   rax
   140034088:	add    DWORD PTR [rsi],eax
   14003408a:	add    al,BYTE PTR [rax]
   14003408c:	(bad)  
   14003408d:	xor    al,BYTE PTR [rdx]
   14003408f:	push   rax
   140034090:	adc    DWORD PTR [rcx],ebx
   140034092:	or     al,BYTE PTR [rax]
   140034094:	sbb    DWORD PTR [rbp+rcx*1+0x0],esi
   140034098:	sbb    DWORD PTR [rbx+rcx*1+0x0],esp
   14003409c:	sbb    DWORD PTR [rdx+rcx*1],esi
   14003409f:	add    BYTE PTR [rcx],bl
   1400340a1:	push   rdx
   1400340a2:	adc    eax,0x11e013f0
   1400340a7:	rcl    BYTE PTR [rax],0x81
   1400340aa:	add    BYTE PTR [rax],al
   1400340ac:	add    eax,DWORD PTR [rax]
   1400340ae:	add    BYTE PTR [rax],al
   1400340b0:	push   rax
   1400340b1:	rol    BYTE PTR [rcx],cl
   1400340b3:	add    BYTE PTR [rbx-0x2e],ah
   1400340b6:	add    DWORD PTR [rax],eax
   1400340b8:	loope  0x140034122
   1400340ba:	add    al,BYTE PTR [rax]
   1400340bc:	add    BYTE PTR [rax],al
   1400340be:	add    BYTE PTR [rax],al
   1400340c0:	retf   
   1400340c1:	rol    BYTE PTR [rcx],cl
   1400340c3:	add    BYTE PTR [rsi],ch
   1400340c5:	rol    DWORD PTR [rcx],cl
   1400340c7:	add    ah,bh
   1400340c9:	push   0x2
   1400340ce:	add    BYTE PTR [rax],al
   1400340d0:	sub    dl,dl
   1400340d2:	add    DWORD PTR [rax],eax
   1400340d4:	rex.WXB rol QWORD PTR [r9],cl
   1400340d7:	add    BYTE PTR [rdi],dl
   1400340d9:	imul   eax,DWORD PTR [rdx],0x0
   1400340df:	add    BYTE PTR [rcx],al
   1400340e1:	(bad)  
   1400340e2:	add    al,BYTE PTR [rax]
   1400340e4:	(bad)  
   1400340e5:	xor    al,BYTE PTR [rdx]
   1400340e7:	push   rax
   1400340e8:	add    DWORD PTR [rsi],eax
   1400340ea:	add    al,BYTE PTR [rax]
   1400340ec:	(bad)  
   1400340ed:	xor    al,BYTE PTR [rdx]
   1400340ef:	push   rax
   1400340f0:	add    DWORD PTR [rsi],eax
   1400340f2:	add    al,BYTE PTR [rax]
   1400340f4:	(bad)  
   1400340f5:	xor    al,BYTE PTR [rdx]
   1400340f7:	push   rax
   1400340f8:	add    DWORD PTR [rax+rcx*1],edx
   1400340fb:	add    BYTE PTR [rsp+riz*2],dl
   1400340fe:	or     BYTE PTR [rax],al
   140034100:	adc    al,0x54
   140034102:	(bad)  
   140034103:	add    BYTE PTR [rsp+rsi*1],dl
   140034106:	(bad)  
   140034107:	add    BYTE PTR [rdx+rsi*1],dl
   14003410a:	adc    BYTE PTR [rax+0x1],dh
   14003410d:	clts   
   14003410f:	add    BYTE PTR [rdi],cl
   140034111:	or     DWORD PTR fs:[rax],eax
   140034114:	sysenter 
   140034116:	or     BYTE PTR [rax],al
   140034118:	rsqrtps xmm1,XMMWORD PTR [rbx]
   14003411b:	jo     0x14003412e
   14003411d:	(bad)  
   14003411e:	add    al,BYTE PTR [rax]
   140034120:	(bad)  
   140034121:	xor    al,BYTE PTR [rdx]
   140034123:	jo     0x140034135
   140034125:	add    DWORD PTR [rax],0x100
   14003412b:	add    BYTE PTR [rcx-0x58fffe3a],dl
   140034131:	mov    BYTE PTR [rcx],0x0
   140034134:	enter  0x268,0x0
   140034138:	add    BYTE PTR [rax],al
   14003413a:	add    BYTE PTR [rax],al
   14003413c:	add    DWORD PTR [rsi],eax
   14003413e:	add    al,BYTE PTR [rax]
   140034140:	(bad)  
   140034141:	xor    al,BYTE PTR [rdx]
   140034143:	push   rax
   140034144:	sbb    DWORD PTR [rip+0x11c000a],ebp        # 0x1411f4154
   14003414a:	rex.WB add BYTE PTR [rip+0x9e00bf0],cl        # 0x149e34d41
   140034151:	rol    BYTE PTR [rdi],1
   140034153:	rol    BYTE PTR [rip+0x3600470],0x30        # 0x1436345ca
   14003415a:	add    dl,BYTE PTR [rax+0x0]
   14003415d:	rol    BYTE PTR [rax],1
   14003415f:	add    BYTE PTR [rax],dh
   140034161:	add    al,BYTE PTR [rax]
   140034163:	add    BYTE PTR [rcx],al
   140034165:	(bad)  
   140034166:	add    eax,0x13621700
   14003416b:	jo     0x14003417f
   14003416d:	(bad)  
   14003416e:	adc    DWORD PTR [rax+0x10],edx
   140034171:	xor    BYTE PTR [rax],al
   140034173:	add    BYTE PTR [rcx],al
   140034175:	adc    al,0x8
   140034177:	add    BYTE PTR [rsp+riz*2],dl
   14003417a:	or     al,BYTE PTR [rax]
   14003417c:	adc    al,0x54
   14003417e:	or     DWORD PTR [rax],eax
   140034180:	adc    al,0x34
   140034182:	or     BYTE PTR [rax],al
   140034184:	adc    al,0x52
   140034186:	adc    BYTE PTR [rax+0x1],dh
   140034189:	sbb    BYTE PTR [rdx],cl
   14003418b:	add    BYTE PTR [rax],bl
   14003418d:	fs or  al,0x0
   140034190:	sbb    BYTE PTR [rbx+rcx*1+0x0],dl
   140034194:	sbb    BYTE PTR [rdx+rcx*1],dh
   140034197:	add    BYTE PTR [rax],bl
   140034199:	push   rdx
   14003419a:	adc    al,0xf0
   14003419c:	adc    ah,al
   14003419e:	adc    BYTE PTR [rax+0x19],dh
   1400341a1:	xor    BYTE PTR [rbx],cl
   1400341a3:	add    BYTE PTR [rdi],bl
   1400341a5:	xor    al,0x71
   1400341a7:	add    BYTE PTR [rdi],bl
   1400341a9:	add    DWORD PTR [rsi+0x0],esp
   1400341ac:	adc    al,dh
   1400341ae:	(bad)  
   1400341af:	loopne 0x1400341bd
   1400341b1:	ror    BYTE PTR [rdx],1
   1400341b3:	ror    BYTE PTR [rax],0x70
   1400341b6:	(bad)  
   1400341b7:	(bad)  
   1400341b8:	(bad)  
   1400341b9:	push   rax
   1400341ba:	add    BYTE PTR [rax],al
   1400341bc:	add    al,dl
   1400341be:	add    BYTE PTR [rax],al
   1400341c0:	and    BYTE PTR [rbx],al
   1400341c2:	add    BYTE PTR [rax],al
   1400341c4:	add    DWORD PTR [rsp+rcx*1],ebx
   1400341c7:	add    BYTE PTR [rsp+riz*2],bl
   1400341ca:	(bad)  
   1400341cb:	add    BYTE PTR [rsp+rdx*2],bl
   1400341ce:	or     eax,0xc341c00
   1400341d3:	add    BYTE PTR [rdx+rdx*2],bl
   1400341d6:	sbb    al,dh
   1400341d8:	(bad)  
   1400341d9:	loopne 0x1400341ef
   1400341db:	rcl    BYTE PTR [rdx],1
   1400341dd:	rcl    BYTE PTR [rax],0x70
   1400341e0:	sbb    DWORD PTR [rcx],ebp
   1400341e2:	or     eax,DWORD PTR [rax]
   1400341e4:	(bad)  
   1400341e5:	xor    al,0x4b
   1400341e7:	add    BYTE PTR [rdi],dl
   1400341e9:	add    DWORD PTR [rax+0x0],eax
   1400341ec:	adc    al,dh
   1400341ee:	(bad)  
   1400341ef:	loopne 0x1400341fd
   1400341f1:	ror    BYTE PTR [rdx],1
   1400341f3:	ror    BYTE PTR [rax],0x70
   1400341f6:	(bad)  
   1400341f7:	(bad)  
   1400341f8:	(bad)  
   1400341f9:	push   rax
   1400341fa:	add    BYTE PTR [rax],al
   1400341fc:	add    al,dl
   1400341fe:	add    BYTE PTR [rax],al
   140034200:	lock add DWORD PTR [rax],eax
   140034203:	add    BYTE PTR [rcx],al
   140034205:	add    al,0x1
   140034207:	add    BYTE PTR [rdx+rax*2],al
   14003420a:	add    BYTE PTR [rax],al
   14003420c:	add    DWORD PTR [rsi],eax
   14003420e:	add    al,BYTE PTR [rax]
   140034210:	(bad)  
   140034211:	xor    al,BYTE PTR [rdx]
   140034213:	xor    BYTE PTR [rcx],al
   140034215:	(bad)  
   140034216:	add    al,BYTE PTR [rax]
   140034218:	(bad)  
   140034219:	xor    al,BYTE PTR [rdx]
   14003421b:	xor    BYTE PTR [rcx],al
   14003421d:	(bad)  
   14003421e:	add    al,BYTE PTR [rax]
   140034220:	(bad)  
   140034221:	xor    al,BYTE PTR [rdx]
   140034223:	xor    BYTE PTR [rcx],al
   140034225:	(bad)  
   140034226:	add    al,BYTE PTR [rax]
   140034228:	(bad)  
   140034229:	xor    al,BYTE PTR [rdx]
   14003422b:	xor    BYTE PTR [rcx],al
   14003422d:	(bad)  
   14003422e:	add    al,BYTE PTR [rax]
   140034230:	(bad)  
   140034231:	jb     0x140034235
   140034233:	xor    BYTE PTR [rcx],al
   140034235:	(bad)  
   140034236:	add    al,BYTE PTR [rax]
   140034238:	(bad)  
   140034239:	jb     0x14003423d
   14003423b:	xor    BYTE PTR [rcx],bl
   14003423d:	sub    eax,0x741f000c
   140034242:	adc    eax,0x14641f00
   140034247:	add    BYTE PTR [rdi],bl
   140034249:	xor    al,0x12
   14003424b:	add    BYTE PTR [rdi],bl
   14003424d:	mov    dl,0x18
   14003424f:	lock (bad) 
   140034251:	loopne 0x140034267
   140034253:	rcl    BYTE PTR [rdx],1
   140034255:	rcl    BYTE PTR [rax],0x50
   140034258:	add    al,dl
   14003425a:	add    BYTE PTR [rax],al
   14003425c:	pop    rax
   14003425d:	add    BYTE PTR [rax],al
   14003425f:	add    BYTE PTR [rcx],bl
   140034261:	sub    eax,0x741f000c
   140034266:	adc    eax,0x14641f00
   14003426b:	add    BYTE PTR [rdi],bl
   14003426d:	xor    al,0x12
   14003426f:	add    BYTE PTR [rdi],bl
   140034271:	mov    dl,0x18
   140034273:	lock (bad) 
   140034275:	loopne 0x14003428b
   140034277:	rcl    BYTE PTR [rdx],1
   140034279:	rcl    BYTE PTR [rax],0x50
   14003427c:	add    al,dl
   14003427e:	add    BYTE PTR [rax],al
   140034280:	pop    rax
   140034281:	add    BYTE PTR [rax],al
   140034283:	add    BYTE PTR [rcx],bl
   140034285:	(bad)  
   140034286:	(bad)  
   140034287:	add    BYTE PTR [rdi],cl
   140034289:	push   rsp
   14003428a:	or     BYTE PTR [rax],al
   14003428c:	sysenter 
   14003428e:	(bad)  
   14003428f:	add    BYTE PTR [rdi],cl
   140034291:	xor    cl,BYTE PTR [rbx]
   140034293:	jo     0x140034295
   140034295:	rol    BYTE PTR [rax],1
   140034297:	add    BYTE PTR [rax],dl
   140034299:	add    BYTE PTR [rax],al
   14003429b:	add    BYTE PTR [rcx],al
   14003429d:	sbb    BYTE PTR [rdx],cl
   14003429f:	add    BYTE PTR [rax],bl
   1400342a1:	or     al,BYTE PTR fs:[rax]
   1400342a4:	sbb    BYTE PTR [rcx+rcx*1+0x0],dl
   1400342a8:	sbb    BYTE PTR [rax+rcx*1],dh
   1400342ab:	add    BYTE PTR [rax],bl
   1400342ad:	xor    dl,BYTE PTR [rax+rsi*8]
   1400342b0:	adc    ah,al
   1400342b2:	adc    BYTE PTR [rax+0x1],dh
   1400342b5:	adc    ecx,DWORD PTR [rax]
   1400342b7:	add    BYTE PTR [rbx],dl
   1400342b9:	je     0x1400342bf
   1400342bb:	add    BYTE PTR [rdi],cl
   1400342bd:	add    eax,DWORD PTR fs:[rax]
   1400342c0:	or     edx,DWORD PTR [rdx+rax*1+0x0]
   1400342c4:	(bad)  
   1400342c5:	xor    al,0x1
   1400342c7:	add    BYTE PTR [rcx],bl
   1400342c9:	and    eax,0x3417000a
   1400342ce:	(bad)  
   1400342cf:	add    BYTE PTR [rdi],dl
   1400342d1:	rcl    BYTE PTR [rax],cl
   1400342d3:	lock (bad) 
   1400342d5:	loopne 0x1400342e3
   1400342d7:	ror    BYTE PTR [rdx],1
   1400342d9:	ror    BYTE PTR [rax],0x70
   1400342dc:	(bad)  
   1400342dd:	(bad)  
   1400342de:	(bad)  
   1400342df:	push   rax
   1400342e0:	add    al,dl
   1400342e2:	add    BYTE PTR [rax],al
   1400342e4:	(bad)  
   1400342e5:	add    BYTE PTR [rax],al
   1400342e7:	add    BYTE PTR [rcx],bl
   1400342e9:	sub    cl,BYTE PTR [rbx]
   1400342eb:	add    BYTE PTR [rsp+rsi*1],bl
   1400342ee:	(bad)  
   1400342ef:	add    BYTE PTR [rcx+rax*1],bl
   1400342f2:	adc    al,0x0
   1400342f4:	adc    al,dh
   1400342f6:	(bad)  
   1400342f7:	loopne 0x140034305
   1400342f9:	ror    BYTE PTR [rdx],1
   1400342fb:	ror    BYTE PTR [rax],0x70
   1400342fe:	(bad)  
   1400342ff:	(bad)  
   140034300:	(bad)  
   140034301:	push   rax
   140034302:	add    BYTE PTR [rax],al
   140034304:	add    al,dl
   140034306:	add    BYTE PTR [rax],al
   140034308:	cwde   
   140034309:	add    BYTE PTR [rax],al
   14003430b:	add    BYTE PTR [rcx],bl
   14003430d:	sbb    DWORD PTR [rax+rax*1],eax
   140034310:	or     dh,BYTE PTR [rcx+rdx*1]
   140034313:	add    BYTE PTR [rdx],cl
   140034315:	mov    dl,0x6
   140034317:	jo     0x140034319
   140034319:	rol    BYTE PTR [rax],1
   14003431b:	add    BYTE PTR [rax+0x0],dl
   14003431e:	add    BYTE PTR [rax],al
   140034320:	sbb    DWORD PTR [rip+0x7427000c],esi        # 0x1b42a4332
   140034326:	adc    eax,DWORD PTR [rax]
   140034328:	(bad)  
   140034329:	adc    al,BYTE PTR fs:[rax]
   14003432c:	(bad)  
   14003432d:	xor    al,0x11
   14003432f:	add    BYTE PTR [rdi],ah
   140034331:	xchg   edx,eax
   140034332:	and    al,dh
   140034334:	(bad)  
   140034335:	loopne 0x140034353
   140034337:	rcr    BYTE PTR [rdx],1
   140034339:	rcr    BYTE PTR [rax],0x50
   14003433c:	add    al,dl
   14003433e:	add    BYTE PTR [rax],al
   140034340:	rex.W add BYTE PTR [rax],al
   140034343:	add    BYTE PTR [rcx],bl
   140034345:	sub    eax,0x741f000c
   14003434a:	ltr    WORD PTR [rdi]
   14003434d:	fs (bad) 
   14003434f:	add    BYTE PTR [rdi],bl
   140034351:	xor    al,0xd
   140034353:	add    BYTE PTR [rdi],bl
   140034355:	push   rdx
   140034356:	sbb    al,dh
   140034358:	(bad)  
   140034359:	loopne 0x14003436f
   14003435b:	rcl    BYTE PTR [rdx],1
   14003435d:	rcl    BYTE PTR [rax],0x50
   140034360:	add    al,dl
   140034362:	add    BYTE PTR [rax],al
   140034364:	and    BYTE PTR [rax],al
   140034366:	add    BYTE PTR [rax],al
   140034368:	sbb    DWORD PTR [rdx],ebp
   14003436a:	or     eax,DWORD PTR [rax]
   14003436c:	sbb    al,0x34
   14003436e:	and    DWORD PTR [rax],eax
   140034370:	sbb    al,0x1
   140034372:	sbb    BYTE PTR [rax],al
   140034374:	adc    al,dh
   140034376:	(bad)  
   140034377:	loopne 0x140034385
   140034379:	ror    BYTE PTR [rdx],1
   14003437b:	ror    BYTE PTR [rax],0x70
   14003437e:	(bad)  
   14003437f:	(bad)  
   140034380:	(bad)  
   140034381:	push   rax
   140034382:	add    BYTE PTR [rax],al
   140034384:	add    al,dl
   140034386:	add    BYTE PTR [rax],al
   140034388:	mov    al,0x0
   14003438a:	add    BYTE PTR [rax],al
   14003438c:	adc    DWORD PTR [rdi],ecx
   14003438e:	add    al,0x0
   140034390:	sysenter 
   140034392:	(bad)  
   140034393:	add    BYTE PTR [rdi],cl
   140034395:	xor    cl,BYTE PTR [rbx]
   140034397:	jo     0x1400343a9
   140034399:	add    DWORD PTR [rax],0x100
   14003439f:	add    BYTE PTR [rdi-0x46fffdf2],ch
   1400343a5:	(bad)  
   1400343a6:	add    al,BYTE PTR [rax]
   1400343a8:	xor    ch,BYTE PTR [rcx+0x2]
   1400343ab:	add    BYTE PTR [rax],al
   1400343ad:	add    BYTE PTR [rax],al
   1400343af:	add    BYTE PTR [rcx],al
   1400343b1:	(bad)  
   1400343b2:	add    al,BYTE PTR [rax]
   1400343b4:	(bad)  
   1400343b5:	xor    al,BYTE PTR [rdx]
   1400343b7:	push   rax
   1400343b8:	add    DWORD PTR [rdx],ecx
   1400343ba:	add    al,0x0
   1400343bc:	or     dh,BYTE PTR [rsi+rax*1]
   1400343bf:	add    BYTE PTR [rdx],cl
   1400343c1:	xor    al,BYTE PTR [rsi]
   1400343c3:	jo     0x1400343d6
   1400343c5:	sbb    eax,0xc41d000c
   1400343ca:	or     eax,0xc741d00
   1400343cf:	add    BYTE PTR [rip+0x1d000b64],bl        # 0x15d034f39
   1400343d5:	xor    al,0xa
   1400343d7:	add    BYTE PTR [rip+0x17f01952],bl        # 0x157f35d2f
   1400343dd:	loopne 0x1400343f4
   1400343df:	rcl    BYTE PTR [rax],1
   1400343e1:	add    DWORD PTR [rax],0x200
   1400343e7:	add    BYTE PTR [rcx],cl
   1400343e9:	adc    BYTE PTR [rdx],al
   1400343eb:	add    BYTE PTR [rbx],ah
   1400343ed:	adc    BYTE PTR [rdx],al
   1400343ef:	add    BYTE PTR [rbx+0x69],ah
   1400343f2:	add    al,BYTE PTR [rax]
   1400343f4:	add    BYTE PTR [rax],al
   1400343f6:	add    BYTE PTR [rax],al
   1400343f8:	scas   al,BYTE PTR es:[rdi]
   1400343f9:	lar    eax,WORD PTR [rax]
   1400343fc:	xor    eax,0x7e000211
   140034401:	imul   eax,DWORD PTR [rdx],0x0
   140034407:	add    BYTE PTR [rcx],al
   140034409:	(bad)  
   14003440a:	add    al,BYTE PTR [rax]
   14003440c:	(bad)  
   14003440d:	xor    al,BYTE PTR [rdx]
   14003440f:	push   rax
   140034410:	add    DWORD PTR [rsi],eax
   140034412:	add    al,BYTE PTR [rax]
   140034414:	(bad)  
   140034415:	xor    al,BYTE PTR [rdx]
   140034417:	push   rax
   140034418:	add    DWORD PTR [rax],edx
   14003441a:	(bad)  
   14003441b:	add    BYTE PTR [rax],dl
   14003441d:	je     0x140034426
   14003441f:	add    BYTE PTR [rax],dl
   140034421:	xor    al,0x6
   140034423:	add    BYTE PTR [rax],dl
   140034425:	xor    cl,BYTE PTR [rax+riz*8]
   140034428:	add    DWORD PTR [rip+0x74150008],edx        # 0x1b4184436
   14003442e:	or     BYTE PTR [rax],al
   140034430:	adc    eax,0x15000764
   140034435:	xor    al,0x6
   140034437:	add    BYTE PTR [rip+0x11e01132],dl        # 0x151e3556f
   14003443d:	adc    eax,0x74150008
   140034442:	or     BYTE PTR [rax],al
   140034444:	adc    eax,0x15000764
   140034449:	xor    al,0x6
   14003444b:	add    BYTE PTR [rip+0x10f01132],dl        # 0x150f35583
   140034451:	add    DWORD PTR [rax],0x100
   140034457:	add    BYTE PTR [rbx],dl
   140034459:	lar    eax,WORD PTR [rax]
   14003445c:	xor    cl,BYTE PTR [rdi]
   14003445e:	add    al,BYTE PTR [rax]
   140034460:	rex.WX imul rax,QWORD PTR [rdx],0x0
   140034467:	add    BYTE PTR [rcx],al
   140034469:	(bad)  
   14003446a:	add    al,BYTE PTR [rax]
   14003446c:	(bad)  
   14003446d:	xor    al,BYTE PTR [rdx]
   14003446f:	push   rax
   140034470:	add    DWORD PTR [rcx+rax*1],eax
   140034473:	add    BYTE PTR [rdx+rax*2],al
   140034476:	add    BYTE PTR [rax],al
   140034478:	adc    DWORD PTR [rip+0x74150008],edx        # 0x1b4184486
   14003447e:	or     eax,DWORD PTR [rax]
   140034480:	adc    eax,0x15000a64
   140034485:	xor    al,0x8
   140034487:	add    BYTE PTR [rip+0x10e01152],dl        # 0x150e355df
   14003448d:	add    DWORD PTR [rax],0x100
   140034493:	add    BYTE PTR [rbx+rdx*1],dl
   140034496:	add    al,BYTE PTR [rax]
   140034498:	pop    rbx
   140034499:	adc    eax,DWORD PTR [rdx]
   14003449b:	add    BYTE PTR [rdi+0x269],dl
   1400344a1:	add    BYTE PTR [rax],al
   1400344a3:	add    BYTE PTR [rcx],al
   1400344a5:	(bad)  
   1400344a6:	add    al,BYTE PTR [rax]
   1400344a8:	(bad)  
   1400344a9:	xor    al,BYTE PTR [rdx]
   1400344ab:	push   rax
   1400344ac:	adc    DWORD PTR [rip+0x34150008],edx        # 0x1741844ba
   1400344b2:	or     eax,DWORD PTR [rax]
   1400344b4:	adc    eax,0xff01132
   1400344b9:	loopne 0x1400344c8
   1400344bb:	ror    BYTE PTR [rbx],0x70
   1400344be:	or     ah,BYTE PTR [rax+0x10]
   1400344c1:	add    DWORD PTR [rax],0x100
   1400344c7:	add    dh,cl
   1400344c9:	adc    al,0x2
   1400344cb:	add    BYTE PTR [rbx],al
   1400344cd:	adc    eax,0x69d80002
   1400344d2:	add    al,BYTE PTR [rax]
   1400344d4:	add    BYTE PTR [rax],al
   1400344d6:	add    BYTE PTR [rax],al
   1400344d8:	add    DWORD PTR [rsi],eax
   1400344da:	add    al,BYTE PTR [rax]
   1400344dc:	(bad)  
   1400344dd:	xor    al,BYTE PTR [rdx]
   1400344df:	push   rax
   1400344e0:	add    DWORD PTR [rdi],ecx
   1400344e2:	(bad)  
   1400344e3:	add    BYTE PTR [rdi],cl
   1400344e5:	fs (bad) 
   1400344e7:	add    BYTE PTR [rdi],cl
   1400344e9:	xor    al,0x6
   1400344eb:	add    BYTE PTR [rdi],cl
   1400344ed:	xor    cl,BYTE PTR [rbx]
   1400344ef:	jo     0x1400344f2
   1400344f1:	sbb    DWORD PTR [rdx],ecx
   1400344f3:	add    BYTE PTR [rcx],bl
   1400344f5:	je     0x140034506
   1400344f7:	add    BYTE PTR [rcx],bl
   1400344f9:	fs (bad) 
   1400344fb:	add    BYTE PTR [rcx],bl
   1400344fd:	push   rsp
   1400344fe:	or     eax,0xc341900
   140034503:	add    BYTE PTR [rcx],bl
   140034505:	xchg   edx,eax
   140034506:	adc    eax,0x20611e0
   14003450b:	add    BYTE PTR [rsi],al
   14003450d:	xor    al,BYTE PTR [rdx]
   14003450f:	xor    BYTE PTR [rax],dl
   140034511:	add    DWORD PTR [rax],0x100
   140034517:	add    BYTE PTR [rdi+rdx*1+0x2],al
   14003451b:	add    BYTE PTR [rdi+0x17],cl
   14003451e:	add    al,BYTE PTR [rax]
   140034520:	out    dx,eax
   140034521:	imul   eax,DWORD PTR [rdx],0x0
   140034527:	add    BYTE PTR [rcx],al
   140034529:	(bad)  
   14003452a:	add    al,BYTE PTR [rax]
   14003452c:	(bad)  
   14003452d:	xor    al,BYTE PTR [rdx]
   14003452f:	push   rax
   140034530:	add    DWORD PTR [rcx],ecx
   140034532:	add    DWORD PTR [rax],eax
   140034534:	or     DWORD PTR [rdx+0x0],esp
   140034537:	add    BYTE PTR [rcx],al
   140034539:	add    al,0x1
   14003453b:	add    BYTE PTR [rdx+riz*2],al
   14003453e:	add    BYTE PTR [rax],al
   140034540:	add    DWORD PTR [rcx+rax*1],eax
   140034543:	add    BYTE PTR [rdx+riz*2],al
   140034546:	add    BYTE PTR [rax],al
   140034548:	add    DWORD PTR [rcx+rax*1],eax
   14003454b:	add    BYTE PTR [rdx+riz*2],al
   14003454e:	add    BYTE PTR [rax],al
   140034550:	add    DWORD PTR [rcx+rax*1],eax
   140034553:	add    BYTE PTR [rdx+riz*2],al
   140034556:	add    BYTE PTR [rax],al
   140034558:	add    DWORD PTR [rcx+rax*1],eax
   14003455b:	add    BYTE PTR [rdx+riz*2],al
   14003455e:	add    BYTE PTR [rax],al
   140034560:	add    DWORD PTR [rcx+rax*1],eax
   140034563:	add    BYTE PTR [rdx+riz*2],al
   140034566:	add    BYTE PTR [rax],al
   140034568:	add    DWORD PTR [rcx+rax*1],eax
   14003456b:	add    BYTE PTR [rdx+rax*2],al
   14003456e:	add    BYTE PTR [rax],al
   140034570:	add    DWORD PTR [rcx+rax*1],eax
   140034573:	add    BYTE PTR [rdx+rax*2],al
   140034576:	add    BYTE PTR [rax],al
   140034578:	add    DWORD PTR [rsp+rcx*1],ebx
   14003457b:	add    BYTE PTR [rsp+riz*2],bl
   14003457e:	adc    DWORD PTR [rax],eax
   140034580:	sbb    al,0x54
   140034582:	adc    BYTE PTR [rax],al
   140034584:	sbb    al,0x34
   140034586:	(bad)  
   140034587:	add    BYTE PTR [rdx+rsi*2],bl
   14003458a:	sbb    al,dh
   14003458c:	(bad)  
   14003458d:	loopne 0x1400345a3
   14003458f:	rcl    BYTE PTR [rdx],1
   140034591:	rcl    BYTE PTR [rax],0x70
   140034594:	add    DWORD PTR [rcx+rax*1],eax
   140034597:	add    BYTE PTR [rdx+riz*2],al
   14003459a:	add    BYTE PTR [rax],al
   14003459c:	add    DWORD PTR [rcx+rax*1],eax
   14003459f:	add    BYTE PTR [rdx+riz*2],al
   1400345a2:	add    BYTE PTR [rax],al
   1400345a4:	add    DWORD PTR [rcx+rax*1],eax
   1400345a7:	add    BYTE PTR [rdx+riz*2],al
   1400345aa:	add    BYTE PTR [rax],al
   1400345ac:	add    DWORD PTR [rcx+rax*1],eax
   1400345af:	add    BYTE PTR [rdx+riz*2],al
   1400345b2:	add    BYTE PTR [rax],al
   1400345b4:	add    DWORD PTR [rcx+rax*1],eax
   1400345b7:	add    BYTE PTR [rdx+riz*2],al
   1400345ba:	add    BYTE PTR [rax],al
   1400345bc:	add    DWORD PTR [rcx+rax*1],eax
   1400345bf:	add    BYTE PTR [rdx+riz*2],al
   1400345c2:	add    BYTE PTR [rax],al
   1400345c4:	add    DWORD PTR [rsi],edx
   1400345c6:	or     al,BYTE PTR [rax]
   1400345c8:	(bad)  
   1400345c9:	push   rsp
   1400345ca:	adc    BYTE PTR [rax],al
   1400345cc:	(bad)  
   1400345cd:	xor    al,0xe
   1400345cf:	add    BYTE PTR [rsi],dl
   1400345d1:	jb     0x1400345e5
   1400345d3:	lock adc al,ah
   1400345d6:	(bad)  
   1400345d7:	ror    BYTE PTR [rax+rsi*2],0xb
   1400345db:	(bad)  
   1400345dc:	add    DWORD PTR [rcx+rax*1],eax
   1400345df:	add    BYTE PTR [rdx+rax*2],al
   1400345e2:	add    BYTE PTR [rax],al
   1400345e4:	add    DWORD PTR [rcx+rax*1],eax
   1400345e7:	add    BYTE PTR [rdx+rax*2],al
   1400345ea:	add    BYTE PTR [rax],al
   1400345ec:	add    DWORD PTR [rcx+rax*1],eax
   1400345ef:	add    BYTE PTR [rdx+rax*2],al
   1400345f2:	add    BYTE PTR [rax],al
   1400345f4:	add    DWORD PTR [rcx+rax*1],eax
   1400345f7:	add    BYTE PTR [rdx+rax*2],al
   1400345fa:	add    BYTE PTR [rax],al
   1400345fc:	sbb    DWORD PTR [rcx],esi
   1400345fe:	or     eax,0x1b641f00
   140034603:	add    BYTE PTR [rdi],bl
   140034605:	push   rsp
   140034606:	sbb    al,BYTE PTR [rax]
   140034608:	(bad)  
   140034609:	xor    al,0x19
   14003460b:	add    BYTE PTR [rdi],bl
   14003460d:	add    DWORD PTR [rdx],edx
   14003460f:	add    BYTE PTR [rax],bl
   140034611:	lock (bad) 
   140034613:	loopne 0x140034629
   140034615:	rcl    BYTE PTR [rdx],1
   140034617:	rcl    BYTE PTR [rax],0x70
   14003461a:	add    BYTE PTR [rax],al
   14003461c:	add    al,dl
   14003461e:	add    BYTE PTR [rax],al
   140034620:	mov    BYTE PTR [rax],al
   140034622:	add    BYTE PTR [rax],al
   140034624:	add    BYTE PTR [rax],al
   140034626:	add    BYTE PTR [rax],al
   140034628:	add    DWORD PTR [rax],eax
   14003462a:	add    BYTE PTR [rax],al
   14003462c:	sbb    DWORD PTR [rcx+rcx*1],esp
   14003462f:	add    BYTE PTR [rdx],dl
   140034631:	add    DWORD PTR [rsi],ebx
   140034633:	add    BYTE PTR [rbx],cl
   140034635:	lock or eax,esp
   140034638:	(bad)  
   140034639:	rol    BYTE PTR [rip+0x3600470],0x50        # 0x143634ab0
   140034640:	add    dh,BYTE PTR [rax]
   140034642:	add    BYTE PTR [rax],al
   140034644:	add    al,dl
   140034646:	add    BYTE PTR [rax],al
   140034648:	loopne 0x14003464a
   14003464a:	add    BYTE PTR [rax],al
   14003464c:	add    DWORD PTR [rip+0x741d000c],ebx        # 0x1b420465e
   140034652:	or     eax,DWORD PTR [rax]
   140034654:	sbb    eax,0x1d000a64
   140034659:	push   rsp
   14003465a:	or     DWORD PTR [rax],eax
   14003465c:	sbb    eax,0x1d000834
   140034661:	xor    bl,BYTE PTR [rcx]
   140034663:	lock (bad) 
   140034665:	loopne 0x14003467c
   140034667:	rol    BYTE PTR [rcx],0x6
   14003466a:	add    al,BYTE PTR [rax]
   14003466c:	(bad)  
   14003466d:	xor    al,BYTE PTR [rdx]
   14003466f:	xor    BYTE PTR [rcx],bl
   140034671:	(bad)  
   140034672:	or     DWORD PTR [rax],eax
   140034674:	adc    eax,0x15001e54
   140034679:	xor    al,0x1d
   14003467b:	add    BYTE PTR [rip+0xe001801],dl        # 0x14e035e82
   140034681:	loopne 0x14003468f
   140034683:	jo     0x140034690
   140034685:	(bad)  
   140034686:	add    BYTE PTR [rax],al
   140034688:	add    al,dl
   14003468a:	add    BYTE PTR [rax],al
   14003468c:	mov    al,0x0
   14003468e:	add    BYTE PTR [rax],al
   140034690:	add    DWORD PTR [rsi],eax
   140034692:	add    al,BYTE PTR [rax]
   140034694:	(bad)  
   140034695:	xor    al,BYTE PTR [rdx]
   140034697:	xor    BYTE PTR [rcx],bl
   140034699:	(bad)  
   14003469a:	add    eax,0x29340d00
   14003469f:	add    BYTE PTR [rip+0x6002601],cl        # 0x146036ca6
   1400346a5:	jo     0x1400346a7
   1400346a7:	add    BYTE PTR [rax],al
   1400346a9:	rol    BYTE PTR [rax],1
   1400346ab:	add    BYTE PTR [rax],ah
   1400346ad:	add    DWORD PTR [rax],eax
   1400346af:	add    BYTE PTR [rcx],bl
   1400346b1:	sbb    eax,DWORD PTR [rbx]
   1400346b3:	add    BYTE PTR [rcx],cl
   1400346b5:	add    DWORD PTR [rsi],ebx
   1400346b7:	add    BYTE PTR [rdx],al
   1400346b9:	xor    BYTE PTR [rax],al
   1400346bb:	add    BYTE PTR [rax],al
   1400346bd:	rol    BYTE PTR [rax],1
   1400346bf:	add    al,ah
   1400346c1:	add    BYTE PTR [rax],al
   1400346c3:	add    BYTE PTR [rcx],al
   1400346c5:	clts   
   1400346c7:	add    BYTE PTR [rdi],cl
   1400346c9:	or     BYTE PTR fs:[rax],al
   1400346cc:	sysenter 
   1400346ce:	(bad)  
   1400346cf:	add    BYTE PTR [rdi],cl
   1400346d1:	xor    cl,BYTE PTR [rbx]
   1400346d3:	jo     0x1400346ee
   1400346d5:	sbb    DWORD PTR [rax+rax*1],eax
   1400346d8:	or     dh,BYTE PTR [rbx+rcx*1]
   1400346db:	add    BYTE PTR [rdx],cl
   1400346dd:	jb     0x1400346e5
   1400346df:	jo     0x1400346e1
   1400346e1:	rol    BYTE PTR [rax],1
   1400346e3:	add    BYTE PTR [rax],bh
   1400346e5:	add    BYTE PTR [rax],al
   1400346e7:	add    BYTE PTR [rcx],al
   1400346e9:	clts   
   1400346eb:	add    BYTE PTR [rdi],cl
   1400346ed:	fs (bad) 
   1400346ef:	add    BYTE PTR [rdi],cl
   1400346f1:	xor    al,0x6
   1400346f3:	add    BYTE PTR [rdi],cl
   1400346f5:	xor    cl,BYTE PTR [rbx]
   1400346f7:	jo     0x140034712
   1400346f9:	and    BYTE PTR [rax],cl
   1400346fb:	add    BYTE PTR [rdx],dl
   1400346fd:	jb     0x14003470a
   1400346ff:	lock or eax,esp
   140034702:	(bad)  
   140034703:	rol    BYTE PTR [rip+0x3600470],0x30        # 0x143634b7a
   14003470a:	add    dl,BYTE PTR [rax+0x0]
   14003470d:	rol    BYTE PTR [rax],1
   14003470f:	add    BYTE PTR [rax],dh
   140034711:	add    BYTE PTR [rax],al
   140034713:	add    BYTE PTR [rcx],al
   140034715:	sbb    eax,0x741d000c
   14003471a:	or     eax,DWORD PTR [rax]
   14003471c:	sbb    eax,0x1d000a64
   140034721:	push   rsp
   140034722:	or     DWORD PTR [rax],eax
   140034724:	sbb    eax,0x1d000834
   140034729:	xor    bl,BYTE PTR [rcx]
   14003472b:	lock (bad) 
   14003472d:	loopne 0x140034744
   14003472f:	rol    BYTE PTR [rcx],0xa
   140034732:	add    al,0x0
   140034734:	or     dh,BYTE PTR [rsi+rax*1]
   140034737:	add    BYTE PTR [rdx],cl
   140034739:	xor    al,BYTE PTR [rsi]
   14003473b:	jo     0x140034756
   14003473d:	sub    cl,BYTE PTR [rcx]
   14003473f:	add    BYTE PTR [rax],bl
   140034741:	je     0x14003476c
   140034743:	add    BYTE PTR [rax],bl
   140034745:	sub    BYTE PTR fs:[rax],al
   140034748:	sbb    BYTE PTR [rdi+riz*1],dh
   14003474b:	add    BYTE PTR [rax],bl
   14003474d:	add    DWORD PTR [rax+rax*1],esp
   140034750:	adc    eax,esp
   140034752:	add    BYTE PTR [rax],al
   140034754:	add    al,dl
   140034756:	add    BYTE PTR [rax],al
   140034758:	adc    BYTE PTR [rcx],al
   14003475a:	add    BYTE PTR [rax],al
   14003475c:	add    DWORD PTR [rdx],ecx
   14003475e:	add    al,0x0
   140034760:	or     dh,BYTE PTR [rsi+rax*1]
   140034763:	add    BYTE PTR [rdx],cl
   140034765:	xor    al,BYTE PTR [rsi]
   140034767:	jo     0x140034782
   140034769:	and    al,0x7
   14003476b:	add    BYTE PTR [rdx],dl
   14003476d:	sub    BYTE PTR fs:[rax],al
   140034770:	adc    dh,BYTE PTR [rdi+riz*1]
   140034773:	add    BYTE PTR [rdx],dl
   140034775:	add    DWORD PTR [rax+rax*1],esp
   140034778:	or     esi,DWORD PTR [rax+0x0]
   14003477b:	add    BYTE PTR [rax],al
   14003477d:	rol    BYTE PTR [rax],1
   14003477f:	add    BYTE PTR [rax],dl
   140034781:	add    DWORD PTR [rax],eax
   140034783:	add    BYTE PTR [rcx],al
   140034785:	or     al,BYTE PTR [rax+rax*1]
   140034788:	or     dh,BYTE PTR [rsi+rax*1]
   14003478b:	add    BYTE PTR [rdx],cl
   14003478d:	xor    al,BYTE PTR [rsi]
   14003478f:	jo     0x1400347aa
   140034791:	sub    DWORD PTR [rcx],ecx
   140034793:	add    BYTE PTR [rdi],dl
   140034795:	sub    DWORD PTR fs:[rax],eax
   140034798:	(bad)  
   140034799:	push   rsp
   14003479a:	sub    BYTE PTR [rax],al
   14003479c:	(bad)  
   14003479d:	xor    al,0x27
   14003479f:	add    BYTE PTR [rdi],dl
   1400347a1:	add    DWORD PTR [rax+rax*1],esp
   1400347a4:	adc    BYTE PTR [rax+0x0],dh
   1400347a7:	add    BYTE PTR [rax],al
   1400347a9:	rol    BYTE PTR [rax],1
   1400347ab:	add    BYTE PTR [rax],dl
   1400347ad:	add    DWORD PTR [rax],eax
   1400347af:	add    BYTE PTR [rcx],al
   1400347b1:	(bad)  
   1400347b2:	add    al,BYTE PTR [rax]
   1400347b4:	(bad)  
   1400347b5:	xor    al,BYTE PTR [rdx]
   1400347b7:	xor    BYTE PTR [rcx],al
   1400347b9:	clts   
   1400347bb:	add    BYTE PTR [rdi],cl
   1400347bd:	or     BYTE PTR fs:[rax],al
   1400347c0:	sysenter 
   1400347c2:	(bad)  
   1400347c3:	add    BYTE PTR [rdi],cl
   1400347c5:	xor    cl,BYTE PTR [rbx]
   1400347c7:	jo     0x1400347ca
   1400347c9:	adc    al,0x8
   1400347cb:	add    BYTE PTR [rsp+riz*2],dl
   1400347ce:	or     DWORD PTR [rax],eax
   1400347d0:	adc    al,0x54
   1400347d2:	or     BYTE PTR [rax],al
   1400347d4:	adc    al,0x34
   1400347d6:	(bad)  
   1400347d7:	add    BYTE PTR [rdx+rsi*1],dl
   1400347da:	adc    BYTE PTR [rax+0x1],dh
   1400347dd:	or     al,BYTE PTR [rdx]
   1400347df:	add    BYTE PTR [rdx],cl
   1400347e1:	xor    al,BYTE PTR [rsi]
   1400347e3:	xor    BYTE PTR [rcx],al
   1400347e5:	sbb    BYTE PTR [rdx],cl
   1400347e7:	add    BYTE PTR [rax],bl
   1400347e9:	or     BYTE PTR fs:[rax],al
   1400347ec:	sbb    BYTE PTR [rdi+rax*1+0x0],dl
   1400347f0:	sbb    BYTE PTR [rsi+rax*1],dh
   1400347f3:	add    BYTE PTR [rax],bl
   1400347f5:	adc    dl,BYTE PTR [rax+riz*8]
   1400347f8:	adc    al,al
   1400347fa:	adc    BYTE PTR [rax+0x11],dh
   1400347fd:	adc    DWORD PTR [rsi],eax
   1400347ff:	add    BYTE PTR [rcx],dl
   140034801:	xor    al,0xa
   140034803:	add    BYTE PTR [rcx],dl
   140034805:	xor    cl,BYTE PTR [rip+0xa700be0]        # 0x14a7353eb
   14003480b:	(bad)  
   14003480c:	adc    BYTE PTR [rcx+0x10000],al
   140034812:	add    BYTE PTR [rax],al
   140034814:	mov    edi,0xe300023e
   140034819:	add    al,BYTE PTR ds:[rax]
   14003481c:	or     BYTE PTR [rdx+0x2],ch
   14003481f:	add    BYTE PTR [rax],al
   140034821:	add    BYTE PTR [rax],al
   140034823:	add    BYTE PTR [rcx],al
   140034825:	(bad)  
   140034826:	add    al,BYTE PTR [rax]
   140034828:	(bad)  
   140034829:	xor    al,BYTE PTR [rdx]
   14003482b:	push   rax
   14003482c:	add    DWORD PTR [rdx],ecx
   14003482e:	add    al,0x0
   140034830:	or     dh,BYTE PTR [rsi+rax*1]
   140034833:	add    BYTE PTR [rdx],cl
   140034835:	xor    al,BYTE PTR [rsi]
   140034837:	jo     0x14003483a
   140034839:	(bad)  
   14003483a:	add    al,BYTE PTR [rax]
   14003483c:	(bad)  
   14003483d:	xor    al,BYTE PTR [rdx]
   14003483f:	xor    BYTE PTR [rcx],al
   140034841:	add    al,0x1
   140034843:	add    BYTE PTR [rdx+rax*4],al
   140034846:	add    BYTE PTR [rax],al
   140034848:	add    DWORD PTR [rcx+rax*1],eax
   14003484b:	add    BYTE PTR [rdx+rax*2],al
   14003484e:	add    BYTE PTR [rax],al
   140034850:	sbb    DWORD PTR [rbx],esp
   140034852:	or     BYTE PTR [rax],al
   140034854:	adc    al,0x68
   140034856:	(bad)  
   140034857:	add    BYTE PTR [rdi],cl
   140034859:	adc    eax,DWORD PTR fs:[rax]
   14003485c:	sysenter 
   14003485e:	adc    al,BYTE PTR [rax]
   140034860:	psrld  mm1,QWORD PTR [rbx]
   140034863:	jo     0x140034865
   140034865:	rol    BYTE PTR [rax],1
   140034867:	add    BYTE PTR [rax+0x0],bl
   14003486a:	add    BYTE PTR [rax],al
   14003486c:	add    DWORD PTR [rcx+rax*1],eax
   14003486f:	add    BYTE PTR [rdx+riz*2],al
   140034872:	add    BYTE PTR [rax],al
   140034874:	add    DWORD PTR [rcx+rax*1],eax
   140034877:	add    BYTE PTR [rdx+riz*2],al
   14003487a:	add    BYTE PTR [rax],al
   14003487c:	add    DWORD PTR [rcx+rax*1],eax
   14003487f:	add    BYTE PTR [rdx+riz*2],al
   140034882:	add    BYTE PTR [rax],al
   140034884:	add    DWORD PTR [rcx+rax*1],eax
   140034887:	add    BYTE PTR [rdx+riz*2],al
   14003488a:	add    BYTE PTR [rax],al
   14003488c:	add    DWORD PTR [rcx+rax*1],eax
   14003488f:	add    BYTE PTR [rdx+riz*2],al
   140034892:	add    BYTE PTR [rax],al
   140034894:	add    DWORD PTR [rax+rcx*1],edx
   140034897:	add    BYTE PTR [rsp+riz*2],dl
   14003489a:	or     BYTE PTR [rax],al
   14003489c:	adc    al,0x54
   14003489e:	(bad)  
   14003489f:	add    BYTE PTR [rsp+rsi*1],dl
   1400348a2:	(bad)  
   1400348a3:	add    BYTE PTR [rdx+rsi*1],dl
   1400348a6:	adc    BYTE PTR [rax+0x1],dh
   1400348a9:	adc    al,0x8
   1400348ab:	add    BYTE PTR [rsp+riz*2],dl
   1400348ae:	or     BYTE PTR [rax],al
   1400348b0:	adc    al,0x54
   1400348b2:	(bad)  
   1400348b3:	add    BYTE PTR [rsp+rsi*1],dl
   1400348b6:	(bad)  
   1400348b7:	add    BYTE PTR [rdx+rsi*1],dl
   1400348ba:	adc    BYTE PTR [rax+0x1],dh
   1400348bd:	add    al,0x1
   1400348bf:	add    BYTE PTR [rdx+riz*1],al
   1400348c2:	add    BYTE PTR [rax],al
   1400348c4:	add    DWORD PTR [rcx+rax*1],eax
   1400348c7:	add    BYTE PTR [rdx+rax*2],al
   1400348ca:	add    BYTE PTR [rax],al
   1400348cc:	add    DWORD PTR [rax+rcx*1],edx
   1400348cf:	add    BYTE PTR [rsp+riz*2],dl
   1400348d2:	or     al,0x0
   1400348d4:	adc    al,0x54
   1400348d6:	or     eax,DWORD PTR [rax]
   1400348d8:	adc    al,0x34
   1400348da:	or     al,BYTE PTR [rax]
   1400348dc:	adc    al,0x72
   1400348de:	adc    BYTE PTR [rax+0x1],dh
   1400348e1:	add    al,0x1
   1400348e3:	add    BYTE PTR [rdx+rax*2],al
   1400348e6:	add    BYTE PTR [rax],al
   1400348e8:	add    DWORD PTR [rcx],ebx
   1400348ea:	or     al,BYTE PTR [rax]
   1400348ec:	sbb    DWORD PTR [rbp+rcx*1+0x0],esi
   1400348f0:	sbb    DWORD PTR [rsp+rcx*1+0x0],esp
   1400348f4:	sbb    DWORD PTR [rbx+rcx*1+0x0],edx
   1400348f8:	sbb    DWORD PTR [rdx+rcx*1],esi
   1400348fb:	add    BYTE PTR [rcx],bl
   1400348fd:	jb     0x140034914
   1400348ff:	loopne 0x14003491a
   140034901:	sbb    eax,0x340e0006
   140034906:	adc    eax,0xad20e00
   14003490b:	jo     0x140034916
   14003490d:	(bad)  
   14003490e:	or     BYTE PTR [rax+0x0],dl
   140034911:	rol    BYTE PTR [rax],1
   140034913:	add    BYTE PTR [rax+0x0],ah
   140034916:	add    BYTE PTR [rax],al
   140034918:	add    DWORD PTR [rcx],ebx
   14003491a:	or     al,BYTE PTR [rax]
   14003491c:	sbb    DWORD PTR [rsi+rcx*1],esi
   14003491f:	add    BYTE PTR [rcx],bl
   140034921:	xor    dl,BYTE PTR [rip+0x11e013f0]        # 0x151e35d17
   140034927:	ror    BYTE PTR [rdi],1
   140034929:	ror    BYTE PTR [rip+0xb600c70],0x50        # 0x14b6355a0
   140034930:	add    DWORD PTR [rcx+rax*1],eax
   140034933:	add    BYTE PTR [rdx+riz*2],al
   140034936:	add    BYTE PTR [rax],al
   140034938:	add    DWORD PTR [rcx+rax*1],eax
   14003493b:	add    BYTE PTR [rdx+riz*2],al
   14003493e:	add    BYTE PTR [rax],al
   140034940:	add    DWORD PTR [rbx],edx
   140034942:	or     BYTE PTR [rax],al
   140034944:	adc    edx,DWORD PTR [rdi+rcx*1+0x0]
   140034948:	adc    esi,DWORD PTR [rsi+rcx*1]
   14003494b:	add    BYTE PTR [rbx],dl
   14003494d:	xchg   edx,eax
   14003494e:	pavgb  mm1,QWORD PTR [rip+0x1600c70]        # 0x1416355c5
   140034955:	add    al,0x1
   140034957:	add    BYTE PTR [rdx+riz*2],al
   14003495a:	add    BYTE PTR [rax],al
   14003495c:	add    DWORD PTR [rcx+rax*1],eax
   14003495f:	add    BYTE PTR [rdx+riz*2],al
   140034962:	add    BYTE PTR [rax],al
   140034964:	add    DWORD PTR [rcx+rax*1],eax
   140034967:	add    BYTE PTR [rdx+riz*2],al
   14003496a:	add    BYTE PTR [rax],al
   14003496c:	add    DWORD PTR [rcx+rax*1],eax
   14003496f:	add    BYTE PTR [rdx+riz*2],al
   140034972:	add    BYTE PTR [rax],al
   140034974:	add    DWORD PTR [rcx],ebx
   140034976:	or     al,BYTE PTR [rax]
   140034978:	sbb    DWORD PTR [rax+rdx*1],esi
   14003497b:	add    BYTE PTR [rcx],bl
   14003497d:	jb     0x140034994
   14003497f:	lock adc esp,eax
   140034982:	adc    eax,edx
   140034984:	xadd   BYTE PTR [rip+0xb600c70],cl        # 0x14b6355fb
   14003498b:	push   rax
   14003498c:	add    DWORD PTR [rcx+rax*1],eax
   14003498f:	add    BYTE PTR [rdx+riz*2],al
   140034992:	add    BYTE PTR [rax],al
   140034994:	add    DWORD PTR [rcx+rax*1],eax
   140034997:	add    BYTE PTR [rdx+riz*2],al
   14003499a:	add    BYTE PTR [rax],al
   14003499c:	add    DWORD PTR [rdx],edx
   14003499e:	add    al,0x0
   1400349a0:	adc    dh,BYTE PTR [rcx*1+0xb921200]
   1400349a7:	push   rax
   1400349a8:	sbb    DWORD PTR [rbx],esp
   1400349aa:	or     BYTE PTR [rax],al
   1400349ac:	adc    al,0x68
   1400349ae:	(bad)  
   1400349af:	add    BYTE PTR [rdi],cl
   1400349b1:	adc    eax,DWORD PTR fs:[rax]
   1400349b4:	sysenter 
   1400349b6:	adc    al,BYTE PTR [rax]
   1400349b8:	psrld  mm1,QWORD PTR [rbx]
   1400349bb:	jo     0x1400349bd
   1400349bd:	rol    BYTE PTR [rax],1
   1400349bf:	add    BYTE PTR [rax+0x0],bl
   1400349c2:	add    BYTE PTR [rax],al
   1400349c4:	add    DWORD PTR [rdi],ecx
   1400349c6:	(bad)  
   1400349c7:	add    BYTE PTR [rdi],cl
   1400349c9:	or     DWORD PTR fs:[rax],eax
   1400349cc:	sysenter 
   1400349ce:	or     BYTE PTR [rax],al
   1400349d0:	rsqrtps xmm1,XMMWORD PTR [rbx]
   1400349d3:	jo     0x1400349ee
   1400349d5:	sbb    eax,0x340e0006
   1400349da:	adc    eax,0xad20e00
   1400349df:	jo     0x1400349ea
   1400349e1:	(bad)  
   1400349e2:	or     BYTE PTR [rax+0x0],dl
   1400349e5:	rol    BYTE PTR [rax],1
   1400349e7:	add    BYTE PTR [rax+0x0],ah
   1400349ea:	add    BYTE PTR [rax],al
   1400349ec:	sbb    DWORD PTR [rdx],ebp
   1400349ee:	or     eax,DWORD PTR [rax]
   1400349f0:	sbb    al,0x34
   1400349f2:	(bad)  
   1400349f3:	add    BYTE PTR [rcx+rax*1],bl
   1400349f6:	adc    al,0x0
   1400349f8:	adc    al,dh
   1400349fa:	(bad)  
   1400349fb:	loopne 0x140034a09
   1400349fd:	ror    BYTE PTR [rdx],1
   1400349ff:	ror    BYTE PTR [rax],0x70
   140034a02:	(bad)  
   140034a03:	(bad)  
   140034a04:	(bad)  
   140034a05:	push   rax
   140034a06:	add    BYTE PTR [rax],al
   140034a08:	add    al,dl
   140034a0a:	add    BYTE PTR [rax],al
   140034a0c:	cwde   
   140034a0d:	add    BYTE PTR [rax],al
   140034a0f:	add    BYTE PTR [rcx],bl
   140034a11:	sbb    DWORD PTR [rax+rax*1],eax
   140034a14:	or     dh,BYTE PTR [rcx+rdx*1]
   140034a17:	add    BYTE PTR [rdx],cl
   140034a19:	mov    dl,0x6
   140034a1b:	jo     0x140034a1d
   140034a1d:	rol    BYTE PTR [rax],1
   140034a1f:	add    BYTE PTR [rax+0x0],dl
	...
   140034a2a:	add    BYTE PTR [rax],al
   140034a2c:	or     BYTE PTR [rsi+0x0],0x0
   140034a30:	add    BYTE PTR [rax],al
   140034a32:	add    BYTE PTR [rax],al
   140034a34:	rex.W
   140034a35:	rex.WX add rax,QWORD PTR [rax]
	...
   140034a48:	add    al,BYTE PTR [rax]
   140034a4a:	add    BYTE PTR [rax],al
   140034a4c:	(bad)  
   140034a4d:	rex.WX add rax,QWORD PTR [rax]
   140034a50:	mov    BYTE PTR [rdx+0x3],cl
	...
   140034a5f:	add    BYTE PTR [rax],dl
   140034a61:	add    BYTE PTR [rax],al
   140034a63:	add    BYTE PTR [rax+0x79],dh
   140034a66:	add    eax,DWORD PTR [rax]
   140034a68:	add    BYTE PTR [rax],al
   140034a6a:	add    BYTE PTR [rax],al
   140034a6c:	(bad)  
   140034a6d:	(bad)  
   140034a6e:	(bad)  
   140034a6f:	inc    DWORD PTR [rax]
   140034a71:	add    BYTE PTR [rax],al
   140034a73:	add    BYTE PTR [rax],bl
   140034a75:	add    BYTE PTR [rax],al
   140034a77:	add    BYTE PTR [rbx+rcx*2+0x0],al
	...
   140034a8a:	add    BYTE PTR [rax],al
   140034a8c:	cwde   
   140034a8d:	jns    0x140034a92
   140034a8f:	add    BYTE PTR [rax],al
   140034a91:	add    BYTE PTR [rax],al
   140034a93:	add    bh,bh
   140034a95:	(bad)  
   140034a96:	(bad)  
   140034a97:	inc    DWORD PTR [rax]
   140034a99:	add    BYTE PTR [rax],al
   140034a9b:	add    BYTE PTR [rax],bl
   140034a9d:	add    BYTE PTR [rax],al
   140034a9f:	add    BYTE PTR [rcx+rdi*2],cl
	...
   140034ab2:	add    BYTE PTR [rax],al
   140034ab4:	cwde   
   140034ab5:	rex.WRX add BYTE PTR [rax],r8b
   140034ab8:	add    BYTE PTR [rax],al
   140034aba:	add    BYTE PTR [rax],al
   140034abc:	ror    BYTE PTR [rdx+0x3],1
	...
   140034acf:	add    BYTE PTR [rbx],al
   140034ad1:	add    BYTE PTR [rax],al
   140034ad3:	add    al,dh
   140034ad5:	rex.WX add rax,QWORD PTR [rax]
   140034ad8:	sbb    BYTE PTR [rbx+0x3],cl
   140034adb:	add    BYTE PTR [rax+0x34a],cl
	...
   140034af1:	add    BYTE PTR [rax],al
   140034af3:	add    al,al
   140034af5:	jns    0x140034afa
   140034af7:	add    BYTE PTR [rax],al
   140034af9:	add    BYTE PTR [rax],al
   140034afb:	add    bh,bh
   140034afd:	(bad)  
   140034afe:	(bad)  
   140034aff:	inc    DWORD PTR [rax]
   140034b01:	add    BYTE PTR [rax],al
   140034b03:	add    BYTE PTR [rax],bl
   140034b05:	add    BYTE PTR [rax],al
   140034b07:	add    BYTE PTR [rax],ch
   140034b09:	rex.WR add BYTE PTR [rax],r8b
	...
   140034b1c:	lock jns 0x140034b22
   140034b1f:	add    BYTE PTR [rax],al
   140034b21:	add    BYTE PTR [rax],al
   140034b23:	add    bh,bh
   140034b25:	(bad)  
   140034b26:	(bad)  
   140034b27:	inc    DWORD PTR [rax]
   140034b29:	add    BYTE PTR [rax],al
   140034b2b:	add    BYTE PTR [rax],bl
   140034b2d:	add    BYTE PTR [rax],al
   140034b2f:	add    al,cl
   140034b31:	rex.WR add BYTE PTR [rax],r8b
	...
   140034b44:	movabs al,ds:0x600000000000004e
   140034b4d:	rex.WXB add rax,QWORD PTR [r8]
	...
   140034b60:	add    eax,DWORD PTR [rax]
   140034b62:	add    BYTE PTR [rax],al
   140034b64:	or     BYTE PTR [rbx+0x3],0x0
   140034b68:	sbb    BYTE PTR [rbx+0x3],cl
   140034b6b:	add    BYTE PTR [rax+0x34a],cl
	...
   140034b81:	add    BYTE PTR [rax],al
   140034b83:	add    BYTE PTR [rax],bl
   140034b85:	jp     0x140034b8a
   140034b87:	add    BYTE PTR [rax],al
   140034b89:	add    BYTE PTR [rax],al
   140034b8b:	add    bh,bh
   140034b8d:	(bad)  
   140034b8e:	(bad)  
   140034b8f:	inc    DWORD PTR [rax]
   140034b91:	add    BYTE PTR [rax],al
   140034b93:	add    BYTE PTR [rax],bl
   140034b95:	add    BYTE PTR [rax],al
   140034b97:	add    BYTE PTR [rax+0x4c],bh
	...
   140034baa:	add    BYTE PTR [rax],al
   140034bac:	mov    al,0x4e
   140034bae:	add    BYTE PTR [rax],al
   140034bb0:	add    BYTE PTR [rax],al
   140034bb2:	add    BYTE PTR [rax],al
   140034bb4:	enter  0x34b,0x0
	...
   140034bc8:	add    eax,DWORD PTR [rax]
   140034bca:	add    BYTE PTR [rax],al
   140034bcc:	call   0x158034f1c
   140034bd1:	rex.WXB add rax,QWORD PTR [r8]
   140034bd4:	mov    BYTE PTR [rdx+0x3],cl
	...
   140034beb:	add    BYTE PTR [rax+0x7a],al
   140034bee:	add    eax,DWORD PTR [rax]
   140034bf0:	add    BYTE PTR [rax],al
   140034bf2:	add    BYTE PTR [rax],al
   140034bf4:	(bad)  
   140034bf5:	(bad)  
   140034bf6:	(bad)  
   140034bf7:	inc    DWORD PTR [rax]
   140034bf9:	add    BYTE PTR [rax],al
   140034bfb:	add    BYTE PTR [rax],bl
   140034bfd:	add    BYTE PTR [rax],al
   140034bff:	add    BYTE PTR [rax],bl
   140034c01:	rex.WRB add BYTE PTR [r8],r8b
	...
   140034c14:	mov    eax,0x4e
   140034c19:	add    BYTE PTR [rax],al
   140034c1b:	add    BYTE PTR [rax],dh
   140034c1d:	add    r8,QWORD PTR [rax]
	...
   140034c30:	add    eax,DWORD PTR [rax]
   140034c32:	add    BYTE PTR [rax],al
   140034c34:	push   rax
   140034c35:	add    r8,QWORD PTR [rax]
   140034c38:	js     0x140034c86
   140034c3a:	add    eax,DWORD PTR [rax]
   140034c3c:	mov    BYTE PTR [rdx+0x3],cl
	...
   140034c53:	add    BYTE PTR [rax+0x7a],ch
   140034c56:	add    eax,DWORD PTR [rax]
   140034c58:	add    BYTE PTR [rax],al
   140034c5a:	add    BYTE PTR [rax],al
   140034c5c:	(bad)  
   140034c5d:	(bad)  
   140034c5e:	(bad)  
   140034c5f:	inc    DWORD PTR [rax]
   140034c61:	add    BYTE PTR [rax],al
   140034c63:	add    BYTE PTR [rax],bl
   140034c65:	add    BYTE PTR [rax],al
   140034c67:	add    BYTE PTR [rax+0x4d],ch
	...
   140034c7a:	add    BYTE PTR [rax],al
   140034c7c:	cwde   
   140034c7d:	jp     0x140034c82
   140034c7f:	add    BYTE PTR [rax],al
   140034c81:	add    BYTE PTR [rax],al
   140034c83:	add    bh,bh
   140034c85:	(bad)  
   140034c86:	(bad)  
   140034c87:	inc    DWORD PTR [rax]
   140034c89:	add    BYTE PTR [rax],al
   140034c8b:	add    BYTE PTR [rax],bl
   140034c8d:	add    BYTE PTR [rax],al
   140034c8f:	add    BYTE PTR [rax],dh
   140034c91:	rex.WRX add BYTE PTR [rax],r8b
	...
   140034ca4:	enter  0x4e,0x0
   140034ca8:	add    BYTE PTR [rax],al
   140034caa:	add    BYTE PTR [rax],al
   140034cac:	ror    BYTE PTR [rbx+rax*1+0x0],0x0
	...
   140034cbd:	add    BYTE PTR [rax],al
   140034cbf:	add    BYTE PTR [rdx],al
   140034cc1:	add    BYTE PTR [rax],al
   140034cc3:	add    BYTE PTR [rax+0x4c],bh
   140034cc6:	add    eax,DWORD PTR [rax]
   140034cc8:	mov    BYTE PTR [rdx+0x3],cl
	...
   140034cdb:	add    BYTE PTR [rax+0x4e],dl
   140034ce1:	add    BYTE PTR [rax],al
   140034ce3:	add    al,bh
   140034ce5:	add    r8,QWORD PTR [rax]
	...
   140034cf8:	add    al,BYTE PTR [rax]
   140034cfa:	add    BYTE PTR [rax],al
   140034cfc:	adc    BYTE PTR [rbp+0x3],cl
   140034cff:	add    BYTE PTR [rax+0x34a],cl
	...
   140034d11:	add    BYTE PTR [rax],al
   140034d13:	add    al,al
   140034d15:	jp     0x140034d1a
   140034d17:	add    BYTE PTR [rax],al
   140034d19:	add    BYTE PTR [rax],al
   140034d1b:	add    bh,bh
   140034d1d:	(bad)  
   140034d1e:	(bad)  
   140034d1f:	inc    DWORD PTR [rax]
   140034d21:	add    BYTE PTR [rax],al
   140034d23:	add    BYTE PTR [rax],bl
   140034d25:	add    BYTE PTR [rax],al
   140034d27:	add    al,ah
   140034d29:	rex.WXB add BYTE PTR [r8],al
	...
   140034d3c:	ror    BYTE PTR [rsi+0x0],0x0
   140034d40:	add    BYTE PTR [rax],al
   140034d42:	add    BYTE PTR [rax],al
   140034d44:	pop    rax
   140034d45:	add    r8,QWORD PTR [r8]
	...
   140034d58:	add    eax,DWORD PTR [rax]
   140034d5a:	add    BYTE PTR [rax],al
   140034d5c:	js     0x140034dab
   140034d5e:	add    eax,DWORD PTR [rax]
   140034d60:	js     0x140034dae
   140034d62:	add    eax,DWORD PTR [rax]
   140034d64:	mov    BYTE PTR [rdx+0x3],cl
	...
   140034d7b:	add    al,dh
   140034d7d:	jp     0x140034d82
   140034d7f:	add    BYTE PTR [rax],al
   140034d81:	add    BYTE PTR [rax],al
   140034d83:	add    bh,bh
   140034d85:	(bad)  
   140034d86:	(bad)  
   140034d87:	inc    DWORD PTR [rax]
   140034d89:	add    BYTE PTR [rax],al
   140034d8b:	add    BYTE PTR [rax],ah
   140034d8d:	add    BYTE PTR [rax],al
   140034d8f:	add    BYTE PTR [rax+0x4d],bh
	...
   140034da1:	add    BYTE PTR [rax],al
   140034da3:	add    BYTE PTR [rsp+rsi*4+0x0],bl
   140034da7:	add    BYTE PTR [rax],al
   140034da9:	add    BYTE PTR [rax],al
   140034dab:	add    al,al
   140034dad:	add    r8,QWORD PTR [r8]
	...
   140034dc0:	add    al,BYTE PTR [rax]
   140034dc2:	add    BYTE PTR [rax],al
   140034dc4:	fmul   DWORD PTR [rbp+0x3]
   140034dc7:	add    BYTE PTR [rax+0x34a],cl
	...
   140034dd9:	add    BYTE PTR [rax],al
   140034ddb:	add    BYTE PTR [rax+0x37b],bh
   140034de1:	add    BYTE PTR [rax],al
   140034de3:	add    bh,bh
   140034de5:	(bad)  
   140034de6:	(bad)  
   140034de7:	inc    DWORD PTR [rax]
   140034de9:	add    BYTE PTR [rax],al
   140034deb:	add    BYTE PTR [rax],bl
   140034ded:	add    BYTE PTR [rax],al
   140034def:	add    BYTE PTR [rsp+rsi*4],cl
	...
   140034e02:	add    BYTE PTR [rax],al
   140034e04:	fsubr  DWORD PTR [rcx]
   140034e06:	mov    ebx,DWORD PTR [rax+0x0]
   140034e09:	add    BYTE PTR [rax],al
   140034e0b:	add    BYTE PTR [rsi+0x4e],al
   140034e0e:	add    eax,DWORD PTR [rax]
   140034e10:	add    DWORD PTR [rax],eax
   140034e12:	add    BYTE PTR [rax],al
   140034e14:	add    eax,DWORD PTR [rax]
   140034e16:	add    BYTE PTR [rax],al
   140034e18:	add    eax,DWORD PTR [rax]
   140034e1a:	add    BYTE PTR [rax],al
   140034e1c:	sub    BYTE PTR [rsi+0x3],cl
   140034e1f:	add    BYTE PTR [rsi+rcx*2],dh
   140034e22:	add    eax,DWORD PTR [rax]
   140034e24:	rex
   140034e25:	rex.WRX add r8,QWORD PTR [rax]
   140034e28:	shl    BYTE PTR [rax+0x3],0x0
   140034e2c:	enter  0x360,0x0
   140034e30:	mov    eax,0x62000360
   140034e35:	rex.WRX add r8,QWORD PTR [rax]
   140034e38:	test   DWORD PTR [rsi+0x3],ecx
   140034e3b:	add    BYTE PTR [rbx+0x34e],ch
   140034e41:	add    BYTE PTR [rcx],al
   140034e43:	add    BYTE PTR [rdx],al
   140034e45:	add    BYTE PTR [rcx+0x6e],ch
   140034e48:	jae    0x140034ebe
   140034e4a:	(bad)  
   140034e4b:	ins    BYTE PTR es:[rdi],dx
   140034e4c:	ins    BYTE PTR es:[rdi],dx
   140034e4d:	pop    rdi
   140034e4e:	jae    0x140034ec5
   140034e50:	jo     0x140034ec2
   140034e52:	outs   dx,DWORD PTR ds:[rsi]
   140034e53:	jb     0x140034ec9
   140034e55:	jae    0x140034ec6
   140034e57:	data16 je 0x140034ed1
   140034e5a:	(bad)  
   140034e5b:	jb     0x140034ec2
   140034e5d:	cs gs js 0x140034ec6
   140034e61:	add    BYTE PTR [rcx+0x6e],ch
   140034e64:	jae    0x140034eda
   140034e66:	(bad)  
   140034e67:	ins    BYTE PTR es:[rdi],dx
   140034e68:	ins    BYTE PTR es:[rdi],dx
   140034e69:	pop    rdi
   140034e6a:	jae    0x140034ee1
   140034e6c:	jo     0x140034ede
   140034e6e:	outs   dx,DWORD PTR ds:[rsi]
   140034e6f:	jb     0x140034ee5
   140034e71:	jae    0x140034ee2
   140034e73:	data16 je 0x140034eed
   140034e76:	(bad)  
   140034e77:	jb     0x140034ede
   140034e79:	pop    rdi
   140034e7a:	(bad)  
   140034e7b:	jne    0x140034ee6
   140034e7d:	ins    BYTE PTR es:[rdi],dx
   140034e7e:	fs pop rdi
   140034e80:	fs (bad) 
   140034e82:	je     0x140034ee9
   140034e84:	add    BYTE PTR [rcx+0x6e],ch
   140034e87:	jae    0x140034efd
   140034e89:	(bad)  
   140034e8a:	ins    BYTE PTR es:[rdi],dx
   140034e8b:	ins    BYTE PTR es:[rdi],dx
   140034e8c:	pop    rdi
   140034e8d:	jae    0x140034f04
   140034e8f:	jo     0x140034f01
   140034e91:	outs   dx,DWORD PTR ds:[rsi]
   140034e92:	jb     0x140034f08
   140034e94:	jae    0x140034f05
   140034e96:	data16 je 0x140034f10
   140034e99:	(bad)  
   140034e9a:	jb     0x140034f01
   140034e9c:	pop    rdi
   140034e9d:	jb     0x140034f04
   140034e9f:	ins    BYTE PTR es:[rdi],dx
   140034ea0:	(bad)  
   140034ea1:	je     0x140034f0c
   140034ea3:	jbe    0x140034f0a
   140034ea5:	pop    rdi
   140034ea6:	jo     0x140034f09
   140034ea8:	je     0x140034f12
   140034eaa:	add    BYTE PTR [rcx+0x6e],ch
   140034ead:	jae    0x140034f23
   140034eaf:	(bad)  
   140034eb0:	ins    BYTE PTR es:[rdi],dx
   140034eb1:	ins    BYTE PTR es:[rdi],dx
   140034eb2:	pop    rdi
   140034eb3:	jae    0x140034f2a
   140034eb5:	jo     0x140034f27
   140034eb7:	outs   dx,DWORD PTR ds:[rsi]
   140034eb8:	jb     0x140034f2e
   140034eba:	jae    0x140034f2b
   140034ebc:	data16 je 0x140034f36
   140034ebf:	(bad)  
   140034ec0:	jb     0x140034f27
   140034ec2:	pop    rdi
   140034ec3:	jbe    0x140034f2a
   140034ec5:	jb     0x140034f3a
   140034ec7:	imul   ebp,DWORD PTR [rdi+0x6e],0x4f400000
   140034ece:	add    eax,DWORD PTR [rax]
	...
   140034ed8:	xchg   edx,eax
   140034ed9:	push   rdx
   140034eda:	add    eax,DWORD PTR [rax]
   140034edc:	and    BYTE PTR [rax+0x2],dh
   140034edf:	add    al,bh
   140034ee1:	push   rcx
   140034ee2:	add    eax,DWORD PTR [rax]
	...
   140034eec:	mov    esp,0xd8000352
   140034ef1:	jb     0x140034ef5
   140034ef3:	add    BYTE PTR [rax],ah
   140034ef5:	rex.WRXB add r8,QWORD PTR [r8]
	...
   140034f00:	cli    
   140034f01:	push   rdx
   140034f02:	add    eax,DWORD PTR [rax]
   140034f04:	add    BYTE PTR [rax+0x2],dh
	...
   140034f1f:	add    dh,dl
   140034f21:	push   rdx
   140034f22:	add    eax,DWORD PTR [rax]
   140034f24:	add    BYTE PTR [rax],al
   140034f26:	add    BYTE PTR [rax],al
   140034f28:	enter  0x352,0x0
   140034f2c:	add    BYTE PTR [rax],al
   140034f2e:	add    BYTE PTR [rax],al
   140034f30:	out    0x52,al
   140034f32:	add    eax,DWORD PTR [rax]
	...
   140034f40:	pop    rsi
   140034f41:	push   rdx
   140034f42:	add    eax,DWORD PTR [rax]
   140034f44:	add    BYTE PTR [rax],al
   140034f46:	add    BYTE PTR [rax],al
   140034f48:	je     0x140034f9c
   140034f4a:	add    eax,DWORD PTR [rax]
   140034f4c:	add    BYTE PTR [rax],al
   140034f4e:	add    BYTE PTR [rax],al
   140034f50:	xchg   BYTE PTR [rdx+0x3],dl
   140034f53:	add    BYTE PTR [rax],al
   140034f55:	add    BYTE PTR [rax],al
   140034f57:	add    BYTE PTR [rax+0x52],dl
   140034f5a:	add    eax,DWORD PTR [rax]
   140034f5c:	add    BYTE PTR [rax],al
   140034f5e:	add    BYTE PTR [rax],al
   140034f60:	scas   al,BYTE PTR es:[rdi]
   140034f61:	pop    rax
   140034f62:	add    eax,DWORD PTR [rax]
   140034f64:	add    BYTE PTR [rax],al
   140034f66:	add    BYTE PTR [rax],al
   140034f68:	(bad)  
   140034f69:	pop    rax
   140034f6a:	add    eax,DWORD PTR [rax]
   140034f6c:	add    BYTE PTR [rax],al
   140034f6e:	add    BYTE PTR [rax],al
   140034f70:	mov    bl,BYTE PTR [rax+0x3]
   140034f73:	add    BYTE PTR [rax],al
   140034f75:	add    BYTE PTR [rax],al
   140034f77:	add    BYTE PTR [rdx],bh
   140034f79:	push   rdx
   140034f7a:	add    eax,DWORD PTR [rax]
   140034f7c:	add    BYTE PTR [rax],al
   140034f7e:	add    BYTE PTR [rax],al
   140034f80:	and    dl,BYTE PTR [rdx+0x3]
   140034f83:	add    BYTE PTR [rax],al
   140034f85:	add    BYTE PTR [rax],al
   140034f87:	add    BYTE PTR [rax],dl
   140034f89:	push   rdx
   140034f8a:	add    eax,DWORD PTR [rax]
   140034f8c:	add    BYTE PTR [rax],al
   140034f8e:	add    BYTE PTR [rax],al
   140034f90:	or     BYTE PTR [rbx+0x3],dl
   140034f93:	add    BYTE PTR [rax],al
   140034f95:	add    BYTE PTR [rax],al
   140034f97:	add    BYTE PTR [rax],bl
   140034f99:	push   rbx
   140034f9a:	add    eax,DWORD PTR [rax]
   140034f9c:	add    BYTE PTR [rax],al
   140034f9e:	add    BYTE PTR [rax],al
   140034fa0:	sub    BYTE PTR [rbx+0x3],dl
   140034fa3:	add    BYTE PTR [rax],al
   140034fa5:	add    BYTE PTR [rax],al
   140034fa7:	add    BYTE PTR [rax],bh
   140034fa9:	push   rbx
   140034faa:	add    eax,DWORD PTR [rax]
   140034fac:	add    BYTE PTR [rax],al
   140034fae:	add    BYTE PTR [rax],al
   140034fb0:	rex.RX push rbx
   140034fb2:	add    eax,DWORD PTR [rax]
   140034fb4:	add    BYTE PTR [rax],al
   140034fb6:	add    BYTE PTR [rax],al
   140034fb8:	pop    rsp
   140034fb9:	push   rbx
   140034fba:	add    eax,DWORD PTR [rax]
   140034fbc:	add    BYTE PTR [rax],al
   140034fbe:	add    BYTE PTR [rax],al
   140034fc0:	outs   dx,BYTE PTR ds:[rsi]
   140034fc1:	push   rbx
   140034fc2:	add    eax,DWORD PTR [rax]
   140034fc4:	add    BYTE PTR [rax],al
   140034fc6:	add    BYTE PTR [rax],al
   140034fc8:	adc    BYTE PTR [rbx+0x3],0x0
   140034fcc:	add    BYTE PTR [rax],al
   140034fce:	add    BYTE PTR [rax],al
   140034fd0:	xchg   esi,eax
   140034fd1:	push   rbx
   140034fd2:	add    eax,DWORD PTR [rax]
   140034fd4:	add    BYTE PTR [rax],al
   140034fd6:	add    BYTE PTR [rax],al
   140034fd8:	lods   al,BYTE PTR ds:[rsi]
   140034fd9:	push   rbx
   140034fda:	add    eax,DWORD PTR [rax]
   140034fdc:	add    BYTE PTR [rax],al
   140034fde:	add    BYTE PTR [rax],al
   140034fe0:	mov    eax,0x353
   140034fe5:	add    BYTE PTR [rax],al
   140034fe7:	add    ah,al
   140034fe9:	push   rbx
   140034fea:	add    eax,DWORD PTR [rax]
   140034fec:	add    BYTE PTR [rax],al
   140034fee:	add    BYTE PTR [rax],al
   140034ff0:	fcom   DWORD PTR [rbx+0x3]
   140034ff3:	add    BYTE PTR [rax],al
   140034ff5:	add    BYTE PTR [rax],al
   140034ff7:	add    dl,ch
   140034ff9:	push   rbx
   140034ffa:	add    eax,DWORD PTR [rax]
   140034ffc:	add    BYTE PTR [rax],al
   140034ffe:	add    BYTE PTR [rax],al
   140035000:	add    al,0x54
   140035002:	add    eax,DWORD PTR [rax]
   140035004:	add    BYTE PTR [rax],al
   140035006:	add    BYTE PTR [rax],al
   140035008:	adc    dl,BYTE PTR [rbx+rax*1+0x0]
   14003500c:	add    BYTE PTR [rax],al
   14003500e:	add    BYTE PTR [rax],al
   140035010:	and    al,0x54
   140035012:	add    eax,DWORD PTR [rax]
   140035014:	add    BYTE PTR [rax],al
   140035016:	add    BYTE PTR [rax],al
   140035018:	rex push rsp
   14003501a:	add    eax,DWORD PTR [rax]
   14003501c:	add    BYTE PTR [rax],al
   14003501e:	add    BYTE PTR [rax],al
   140035020:	rex.WR push rsp
   140035022:	add    eax,DWORD PTR [rax]
   140035024:	add    BYTE PTR [rax],al
   140035026:	add    BYTE PTR [rax],al
   140035028:	(bad)  
   140035029:	push   rsp
   14003502a:	add    eax,DWORD PTR [rax]
   14003502c:	add    BYTE PTR [rax],al
   14003502e:	add    BYTE PTR [rax],al
   140035030:	js     0x140035086
   140035032:	add    eax,DWORD PTR [rax]
   140035034:	add    BYTE PTR [rax],al
   140035036:	add    BYTE PTR [rax],al
   140035038:	nop
   140035039:	push   rsp
   14003503a:	add    eax,DWORD PTR [rax]
   14003503c:	add    BYTE PTR [rax],al
   14003503e:	add    BYTE PTR [rax],al
   140035040:	test   al,0x54
   140035042:	add    eax,DWORD PTR [rax]
   140035044:	add    BYTE PTR [rax],al
   140035046:	add    BYTE PTR [rax],al
   140035048:	mov    eax,0x354
   14003504d:	add    BYTE PTR [rax],al
   14003504f:	add    ah,cl
   140035051:	push   rsp
   140035052:	add    eax,DWORD PTR [rax]
   140035054:	add    BYTE PTR [rax],al
   140035056:	add    BYTE PTR [rax],al
   140035058:	loopne 0x1400350ae
   14003505a:	add    eax,DWORD PTR [rax]
   14003505c:	add    BYTE PTR [rax],al
   14003505e:	add    BYTE PTR [rax],al
   140035060:	cld    
   140035061:	push   rsp
   140035062:	add    eax,DWORD PTR [rax]
   140035064:	add    BYTE PTR [rax],al
   140035066:	add    BYTE PTR [rax],al
   140035068:	sbb    dl,BYTE PTR [rbp+0x3]
   14003506b:	add    BYTE PTR [rax],al
   14003506d:	add    BYTE PTR [rax],al
   14003506f:	add    BYTE PTR [rdx],ch
   140035071:	push   rbp
   140035072:	add    eax,DWORD PTR [rax]
   140035074:	add    BYTE PTR [rax],al
   140035076:	add    BYTE PTR [rax],al
   140035078:	push   rdx
   140035079:	push   rbp
   14003507a:	add    eax,DWORD PTR [rax]
   14003507c:	add    BYTE PTR [rax],al
   14003507e:	add    BYTE PTR [rax],al
   140035080:	(bad)  
   140035081:	push   rbp
   140035082:	add    eax,DWORD PTR [rax]
   140035084:	add    BYTE PTR [rax],al
   140035086:	add    BYTE PTR [rax],al
   140035088:	push   0x55
   14003508a:	add    eax,DWORD PTR [rax]
   14003508c:	add    BYTE PTR [rax],al
   14003508e:	add    BYTE PTR [rax],al
   140035090:	jle    0x1400350e7
   140035092:	add    eax,DWORD PTR [rax]
   140035094:	add    BYTE PTR [rax],al
   140035096:	add    BYTE PTR [rax],al
   140035098:	xchg   edx,eax
   140035099:	push   rbp
   14003509a:	add    eax,DWORD PTR [rax]
   14003509c:	add    BYTE PTR [rax],al
   14003509e:	add    BYTE PTR [rax],al
   1400350a0:	sahf   
   1400350a1:	push   rbp
   1400350a2:	add    eax,DWORD PTR [rax]
   1400350a4:	add    BYTE PTR [rax],al
   1400350a6:	add    BYTE PTR [rax],al
   1400350a8:	lods   al,BYTE PTR ds:[rsi]
   1400350a9:	push   rbp
   1400350aa:	add    eax,DWORD PTR [rax]
   1400350ac:	add    BYTE PTR [rax],al
   1400350ae:	add    BYTE PTR [rax],al
   1400350b0:	mov    edx,0x355
   1400350b5:	add    BYTE PTR [rax],al
   1400350b7:	add    ah,al
   1400350b9:	push   rbp
   1400350ba:	add    eax,DWORD PTR [rax]
   1400350bc:	add    BYTE PTR [rax],al
   1400350be:	add    BYTE PTR [rax],al
   1400350c0:	(bad)  
   1400350c1:	push   rbp
   1400350c2:	add    eax,DWORD PTR [rax]
   1400350c4:	add    BYTE PTR [rax],al
   1400350c6:	add    BYTE PTR [rax],al
   1400350c8:	out    0x55,al
   1400350ca:	add    eax,DWORD PTR [rax]
   1400350cc:	add    BYTE PTR [rax],al
   1400350ce:	add    BYTE PTR [rax],al
   1400350d0:	cli    
   1400350d1:	push   rbp
   1400350d2:	add    eax,DWORD PTR [rax]
   1400350d4:	add    BYTE PTR [rax],al
   1400350d6:	add    BYTE PTR [rax],al
   1400350d8:	(bad)  
   1400350d9:	push   rsi
   1400350da:	add    eax,DWORD PTR [rax]
   1400350dc:	add    BYTE PTR [rax],al
   1400350de:	add    BYTE PTR [rax],al
   1400350e0:	(bad)  
   1400350e1:	push   rsi
   1400350e2:	add    eax,DWORD PTR [rax]
   1400350e4:	add    BYTE PTR [rax],al
   1400350e6:	add    BYTE PTR [rax],al
   1400350e8:	sub    dl,BYTE PTR [rsi+0x3]
   1400350eb:	add    BYTE PTR [rax],al
   1400350ed:	add    BYTE PTR [rax],al
   1400350ef:	add    BYTE PTR [rax+0x56],al
   1400350f2:	add    eax,DWORD PTR [rax]
   1400350f4:	add    BYTE PTR [rax],al
   1400350f6:	add    BYTE PTR [rax],al
   1400350f8:	pop    rax
   1400350f9:	push   rsi
   1400350fa:	add    eax,DWORD PTR [rax]
   1400350fc:	add    BYTE PTR [rax],al
   1400350fe:	add    BYTE PTR [rax],al
   140035100:	push   si
   140035102:	add    eax,DWORD PTR [rax]
   140035104:	add    BYTE PTR [rax],al
   140035106:	add    BYTE PTR [rax],al
   140035108:	js     0x140035160
   14003510a:	add    eax,DWORD PTR [rax]
   14003510c:	add    BYTE PTR [rax],al
   14003510e:	add    BYTE PTR [rax],al
   140035110:	mov    dl,BYTE PTR [rsi+0x3]
   140035113:	add    BYTE PTR [rax],al
   140035115:	add    BYTE PTR [rax],al
   140035117:	add    BYTE PTR [rsi+rdx*2+0x3],dl
   14003511e:	add    BYTE PTR [rax],al
   140035120:	movabs al,ds:0xac00000000000356
   140035129:	push   rsi
   14003512a:	add    eax,DWORD PTR [rax]
   14003512c:	add    BYTE PTR [rax],al
   14003512e:	add    BYTE PTR [rax],al
   140035130:	mov    esi,0x356
   140035135:	add    BYTE PTR [rax],al
   140035137:	add    dl,dl
   140035139:	push   rsi
   14003513a:	add    eax,DWORD PTR [rax]
   14003513c:	add    BYTE PTR [rax],al
   14003513e:	add    BYTE PTR [rax],al
   140035140:	call   0x14003549b
   140035145:	add    BYTE PTR [rax],al
   140035147:	add    dh,dh
   140035149:	push   rsi
   14003514a:	add    eax,DWORD PTR [rax]
   14003514c:	add    BYTE PTR [rax],al
   14003514e:	add    BYTE PTR [rax],al
   140035150:	or     al,0x57
   140035152:	add    eax,DWORD PTR [rax]
   140035154:	add    BYTE PTR [rax],al
   140035156:	add    BYTE PTR [rax],al
   140035158:	es push rdi
   14003515a:	add    eax,DWORD PTR [rax]
   14003515c:	add    BYTE PTR [rax],al
   14003515e:	add    BYTE PTR [rax],al
   140035160:	cmp    al,0x57
   140035162:	add    eax,DWORD PTR [rax]
   140035164:	add    BYTE PTR [rax],al
   140035166:	add    BYTE PTR [rax],al
   140035168:	push   rsi
   140035169:	push   rdi
   14003516a:	add    eax,DWORD PTR [rax]
   14003516c:	add    BYTE PTR [rax],al
   14003516e:	add    BYTE PTR [rax],al
   140035170:	jo     0x1400351c9
   140035172:	add    eax,DWORD PTR [rax]
   140035174:	add    BYTE PTR [rax],al
   140035176:	add    BYTE PTR [rax],al
   140035178:	mov    dl,BYTE PTR [rdi+0x3]
   14003517b:	add    BYTE PTR [rax],al
   14003517d:	add    BYTE PTR [rax],al
   14003517f:	add    BYTE PTR [rdi+rdx*2+0x3],bl
   140035186:	add    BYTE PTR [rax],al
   140035188:	scas   al,BYTE PTR es:[rdi]
   140035189:	push   rdi
   14003518a:	add    eax,DWORD PTR [rax]
   14003518c:	add    BYTE PTR [rax],al
   14003518e:	add    BYTE PTR [rax],al
   140035190:	rcl    BYTE PTR [rdi+0x3],0x0
   140035194:	add    BYTE PTR [rax],al
   140035196:	add    BYTE PTR [rax],al
   140035198:	rcl    BYTE PTR [rdi+0x3],1
   14003519b:	add    BYTE PTR [rax],al
   14003519d:	add    BYTE PTR [rax],al
   14003519f:	add    dl,ah
   1400351a1:	push   rdi
   1400351a2:	add    eax,DWORD PTR [rax]
   1400351a4:	add    BYTE PTR [rax],al
   1400351a6:	add    BYTE PTR [rax],al
   1400351a8:	repnz push rdi
   1400351aa:	add    eax,DWORD PTR [rax]
   1400351ac:	add    BYTE PTR [rax],al
   1400351ae:	add    BYTE PTR [rax],al
   1400351b0:	or     BYTE PTR [rax+0x3],bl
   1400351b3:	add    BYTE PTR [rax],al
   1400351b5:	add    BYTE PTR [rax],al
   1400351b7:	add    BYTE PTR [rsi],bl
   1400351b9:	pop    rax
   1400351ba:	add    eax,DWORD PTR [rax]
   1400351bc:	add    BYTE PTR [rax],al
   1400351be:	add    BYTE PTR [rax],al
   1400351c0:	sub    al,0x58
   1400351c2:	add    eax,DWORD PTR [rax]
   1400351c4:	add    BYTE PTR [rax],al
   1400351c6:	add    BYTE PTR [rax],al
   1400351c8:	rex.X pop rax
   1400351ca:	add    eax,DWORD PTR [rax]
   1400351cc:	add    BYTE PTR [rax],al
   1400351ce:	add    BYTE PTR [rax],al
   1400351d0:	push   rsp
   1400351d1:	pop    rax
   1400351d2:	add    eax,DWORD PTR [rax]
   1400351d4:	add    BYTE PTR [rax],al
   1400351d6:	add    BYTE PTR [rax],al
   1400351d8:	push   0x358
   1400351dd:	add    BYTE PTR [rax],al
   1400351df:	add    BYTE PTR [rax+0x58],bh
   1400351e2:	add    eax,DWORD PTR [rax]
   1400351e4:	add    BYTE PTR [rax],al
   1400351e6:	add    BYTE PTR [rax],al
   1400351e8:	mov    esi,0x358
	...
   1400351f5:	add    BYTE PTR [rax],al
   1400351f7:	add    BYTE PTR [rax+0x352],ah
   1400351fd:	add    BYTE PTR [rax],al
   1400351ff:	add    BYTE PTR [rsi+0x352],ch
	...
   14003520d:	add    BYTE PTR [rax],al
   14003520f:	add    bh,cl
   140035211:	add    DWORD PTR [rdi+0x65],eax
   140035214:	je     0x140035259
   140035216:	outs   dx,DWORD PTR ds:[rsi]
   140035217:	ins    DWORD PTR es:[rdi],dx
   140035218:	ins    DWORD PTR es:[rdi],dx
   140035219:	(bad)  
   14003521a:	outs   dx,BYTE PTR ds:[rsi]
   14003521b:	imul   r13,QWORD PTR fs:[rsi+0x65],0x2090057
   140035224:	rex.RXB
   140035225:	gs je  0x14003526b
   140035228:	jne    0x14003529c
   14003522a:	jb     0x140035291
   14003522c:	outs   dx,BYTE PTR ds:[rsi]
   14003522d:	je     0x140035273
   14003522f:	imul   esi,DWORD PTR [rdx+0x65],0x726f7463
   140035236:	jns    0x14003528f
   140035238:	add    BYTE PTR [rax],al
   14003523a:	cmp    al,0x2
   14003523c:	rex.RXB
   14003523d:	gs je  0x140035286
   140035240:	imul   ebp,DWORD PTR [rbp+riz*2+0x41],0x69727474
   140035248:	(bad)  
   140035249:	jne    0x1400352bf
   14003524b:	gs jae 0x1400352a5
   14003524e:	add    BYTE PTR [rax],al
   140035250:	jg     0x140035252
   140035252:	rex.XB ins BYTE PTR es:[rdi],dx
   140035254:	outs   dx,DWORD PTR ds:[rsi]
   140035255:	jae    0x1400352bc
   140035257:	rex.W (bad) 
   140035259:	outs   dx,BYTE PTR ds:[rsi]
   14003525a:	fs ins BYTE PTR es:[rdi],dx
   14003525c:	add    BYTE PTR gs:[rbx+0x69615705],bh
   140035263:	je     0x1400352ab
   140035265:	outs   dx,DWORD PTR ds:[rsi]
   140035266:	jb     0x1400352bb
   140035268:	imul   ebp,DWORD PTR [rsi+0x67],0x624f656c
   14003526f:	push   0x65
   140035271:	movsxd esi,DWORD PTR [rax+rax*1-0x25]
   140035275:	add    BYTE PTR [rbx+0x72],al
   140035278:	gs (bad) 
   14003527a:	je     0x1400352e1
   14003527c:	push   rax
   14003527d:	jb     0x1400352ee
   14003527f:	movsxd esp,DWORD PTR [rbp+0x73]
   140035282:	jae    0x1400352db
   140035284:	add    BYTE PTR [rax],al
   140035286:	(bad)  
   140035287:	(bad)  
   140035288:	ins    BYTE PTR es:[rdi],dx
   140035289:	jae    0x1400352ff
   14003528b:	jb     0x1400352f0
   14003528d:	ins    DWORD PTR es:[rdi],dx
   14003528e:	jo     0x1400352f9
   140035290:	push   rdi
   140035291:	add    BYTE PTR [rbx+0x45],cl
   140035294:	push   rdx
   140035295:	rex.WRX
   140035296:	rex.RB
   140035297:	xor    r14,QWORD PTR [rdx]
   14003529a:	cs fs ins BYTE PTR es:[rdi],dx
   14003529d:	ins    BYTE PTR es:[rdi],dx
   14003529e:	add    BYTE PTR [rax],al
   1400352a0:	xor    al,0x2
   1400352a2:	rex.WR outs dx,DWORD PTR ds:[rsi]
   1400352a4:	(bad)  
   1400352a5:	fs push rbx
   1400352a7:	je     0x14003531b
   1400352a9:	imul   ebp,DWORD PTR [rsi+0x67],0x2510057
   1400352b0:	rex.WRB
   1400352b1:	gs jae 0x140035327
   1400352b4:	(bad)  
   1400352b5:	rex.X outs dx,DWORD PTR gs:[esi]
   1400352b9:	js     0x140035312
   1400352bb:	add    BYTE PTR [rbp+0x53],dl
   1400352be:	rex.RB push r10
   1400352c0:	xor    esi,DWORD PTR [rdx]
   1400352c2:	cs fs ins BYTE PTR es:[rdi],dx
   1400352c5:	ins    BYTE PTR es:[rdi],dx
   1400352c6:	add    BYTE PTR [rax],al
   1400352c8:	push   rsp
   1400352c9:	add    dl,BYTE PTR [rdx+0x65]
   1400352cc:	rex.XB ins BYTE PTR es:[edi],dx
   1400352cf:	outs   dx,DWORD PTR ds:[rsi]
   1400352d0:	jae    0x140035337
   1400352d2:	rex.WXB
   1400352d3:	gs jns 0x1400352d6
   1400352d6:	test   DWORD PTR [rdx],eax
   1400352d8:	push   rdx
   1400352d9:	gs addr32 rex.WRXB jo 0x140035343
   1400352de:	outs   dx,BYTE PTR ds:[rsi]
   1400352df:	rex.WXB
   1400352e0:	gs jns 0x140035328
   1400352e3:	js     0x14003533c
   1400352e5:	add    BYTE PTR [rdx+0x67655202],dl
   1400352eb:	push   rcx
   1400352ec:	jne    0x140035353
   1400352ee:	jb     0x140035369
   1400352f0:	push   rsi
   1400352f1:	(bad)  
   1400352f2:	ins    BYTE PTR es:[rdi],dx
   1400352f3:	jne    0x14003535a
   1400352f5:	rex.RB js 0x14003534f
   1400352f8:	add    BYTE PTR [rax],al
   1400352fa:	rex.B
   1400352fb:	rex.R push rsi
   1400352fd:	push   r8
   1400352ff:	xor    rsi,QWORD PTR [r10]
   140035302:	cs fs ins BYTE PTR es:[rdi],dx
   140035305:	ins    BYTE PTR es:[rdi],dx
   140035306:	add    BYTE PTR [rax],al
   140035308:	and    eax,0x636e4501
   14003530d:	outs   dx,DWORD PTR ds:[rsi]
   14003530e:	fs gs push rax
   140035311:	outs   dx,DWORD PTR ds:[rsi]
   140035312:	imul   ebp,DWORD PTR [rsi+0x74],0xff007265
   140035319:	add    BYTE PTR [rbp+riz*2+0x63],al
   14003531d:	outs   dx,DWORD PTR ds:[rsi]
   14003531e:	fs gs push rax
   140035321:	outs   dx,DWORD PTR ds:[rsi]
   140035322:	imul   ebp,DWORD PTR [rsi+0x74],0x56007265
   140035329:	add    al,BYTE PTR [rdi+0x65]
   14003532c:	je     0x14003537a
   14003532e:	(bad)  
   14003532f:	jae    0x1400353a5
   140035331:	rex.RB jb 0x1400353a6
   140035334:	outs   dx,DWORD PTR ds:[rsi]
   140035335:	jb     0x140035337
   140035337:	add    BYTE PTR [rdi+0x1],dl
   14003533a:	rex.RB js 0x1400353a6
   14003533d:	je     0x14003538f
   14003533f:	jb     0x1400353b0
   140035341:	movsxd esp,DWORD PTR [rbp+0x73]
   140035344:	jae    0x140035346
   140035346:	ins    BYTE PTR es:[rdi],dx
   140035347:	add    al,BYTE PTR [rdi+0x65]
   14003534a:	je     0x140035399
   14003534c:	outs   dx,DWORD PTR ds:[rsi]
   14003534d:	fs jne 0x1400353bc
   140035350:	gs rex.W (bad) 
   140035353:	outs   dx,BYTE PTR ds:[rsi]
   140035354:	fs ins BYTE PTR es:[rdi],dx
   140035356:	gs rex.RB js 0x1400353b1
   14003535a:	add    BYTE PTR [rax],al
   14003535c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14003535d:	add    al,BYTE PTR [rdi+0x65]
   140035360:	je     0x1400353b2
   140035362:	jb     0x1400353d3
   140035364:	movsxd eax,DWORD PTR [rcx+0x64]
   140035367:	fs jb  0x1400353cf
   14003536a:	jae    0x1400353df
   14003536c:	add    BYTE PTR [rax],al
   14003536e:	sbb    eax,DWORD PTR [rax]
   140035370:	rex.B jb 0x1400353d8
   140035373:	imul   r13d,DWORD PTR [rbp+r12*2+0x41],0x41736970
   14003537c:	rex.WRX push rbx
   14003537e:	rex.WB add r12b,dl
   140035381:	add    ecx,DWORD PTR [rbp+0x75]
   140035384:	ins    BYTE PTR es:[rdi],dx
   140035385:	je     0x1400353f0
   140035387:	rex.X jns 0x1400353fe
   14003538a:	gs push rsp
   14003538c:	outs   dx,DWORD PTR ds:[rsi]
   14003538d:	push   rdi
   14003538e:	imul   esp,DWORD PTR [rbp+riz*2+0x43],0x726168
   140035396:	fld    QWORD PTR [rip+0x65646957]        # 0x1a567bcf3
   14003539c:	rex.XB push 0x6f547261
   1400353a2:	rex.WRB jne 0x140035411
   1400353a5:	je     0x140035410
   1400353a7:	rex.X jns 0x14003541e
   1400353aa:	add    BYTE PTR gs:[rbx+rax*1],bh
   1400353ae:	rex.W
   1400353af:	gs (bad) 
   1400353b1:	jo     0x1400353f9
   1400353b3:	jb     0x14003541a
   1400353b5:	add    BYTE PTR gs:[rax],al
   1400353b8:	cmp    BYTE PTR [rbx],al
   1400353ba:	rex.W
   1400353bb:	gs (bad) 
   1400353bd:	jo     0x140035400
   1400353bf:	ins    BYTE PTR es:[rdi],dx
   1400353c0:	ins    BYTE PTR es:[rdi],dx
   1400353c1:	outs   dx,DWORD PTR ds:[rsi]
   1400353c2:	movsxd eax,DWORD PTR [rax]
   1400353c4:	mov    bh,0x4
   1400353c6:	push   rdx
   1400353c7:	je     0x140035435
   1400353c9:	push   rax
   1400353ca:	movsxd edx,DWORD PTR [rdi+rbp*2+0x46]
   1400353ce:	imul   ebp,DWORD PTR [rbp+riz*2+0x48],0x65646165
   1400353d6:	jb     0x1400353d8
   1400353d8:	rex.R add al,0x52
   1400353db:	(bad)  
   1400353dc:	imul   esi,DWORD PTR [rbx+0x65],0x65637845
   1400353e3:	jo     0x140035459
   1400353e5:	imul   ebp,DWORD PTR [rdi+0x6e],0x4b50000
   1400353ec:	push   rdx
   1400353ed:	je     0x14003545b
   1400353ef:	rex.WR outs dx,DWORD PTR ds:[rsi]
   1400353f1:	outs   dx,DWORD PTR ds:[rsi]
   1400353f2:	imul   esi,DWORD PTR [rbp+0x70],0x46
   1400353f6:	jne    0x140035466
   1400353f8:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   1400353fc:	outs   dx,BYTE PTR ds:[rsi]
   1400353fd:	rex.RB outs dx,BYTE PTR ds:[rsi]
   1400353ff:	je     0x140035473
   140035401:	jns    0x140035403
   140035403:	add    BYTE PTR [rbx+0x6c745204],bh
   140035409:	push   rbp
   14003540a:	outs   dx,BYTE PTR ds:[rsi]
   14003540b:	ja     0x140035476
   14003540d:	outs   dx,BYTE PTR ds:[rsi]
   14003540e:	fs rex.RB js 0x140035412
   140035412:	(bad)  
   140035413:	add    DWORD PTR [rdi+0x65],eax
   140035416:	je     0x14003545b
   140035418:	outs   dx,DWORD PTR ds:[rsi]
   140035419:	ins    DWORD PTR es:[rdi],dx
   14003541a:	ins    DWORD PTR es:[rdi],dx
   14003541b:	(bad)  
   14003541c:	outs   dx,BYTE PTR ds:[rsi]
   14003541d:	imul   r13,QWORD PTR fs:[rsi+0x65],0x3700041
   140035426:	rex.WB jae 0x140035479
   140035429:	jb     0x14003549a
   14003542b:	movsxd esp,DWORD PTR [rbp+0x73]
   14003542e:	jae    0x14003549f
   140035430:	jb     0x140035478
   140035432:	gs (bad) 
   140035434:	je     0x1400354ab
   140035436:	jb     0x14003549d
   140035438:	push   rax
   140035439:	jb     0x1400354a0
   14003543b:	jae    0x1400354a2
   14003543d:	outs   dx,BYTE PTR ds:[rsi]
   14003543e:	je     0x140035440
   140035440:	add    ecx,DWORD PTR [r8+0x65]
   140035444:	(bad)  
   140035445:	jo     0x14003549a
   140035447:	imul   edi,DWORD PTR [rdx+0x65],0x36a0000
   14003544e:	rex.WB jae 0x140035495
   140035451:	gs (bad) 
   140035453:	jne    0x1400354bc
   140035455:	addr32 gs jb 0x1400354a9
   140035459:	jb     0x1400354c0
   14003545b:	jae    0x1400354c2
   14003545d:	outs   dx,BYTE PTR ds:[rsi]
   14003545e:	je     0x140035460
   140035460:	sub    DWORD PTR [rcx],eax
   140035462:	rex.RB outs dx,BYTE PTR ds:[rsi]
   140035464:	je     0x1400354cb
   140035466:	jb     0x1400354ab
   140035468:	jb     0x1400354d3
   14003546a:	je     0x1400354d5
   14003546c:	movsxd esp,DWORD PTR [rcx+0x6c]
   14003546f:	push   rbx
   140035470:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140035475:	outs   dx,BYTE PTR ds:[rsi]
   140035476:	add    BYTE PTR [rax],al
   140035478:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140035479:	add    ecx,DWORD PTR [rbp+riz*2+0x61]
   14003547d:	jbe    0x1400354e4
   14003547f:	rex.XB jb 0x1400354eb
   140035482:	je     0x1400354ed
   140035484:	movsxd esp,DWORD PTR [rcx+0x6c]
   140035487:	push   rbx
   140035488:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14003548d:	outs   dx,BYTE PTR ds:[rsi]
   14003548e:	add    BYTE PTR [rax],al
   140035490:	(bad)  
   140035491:	add    DWORD PTR [rbp+riz*2+0x6c],eax
   140035495:	gs je  0x1400354fd
   140035498:	rex.XB jb 0x140035504
   14003549b:	je     0x140035506
   14003549d:	movsxd esp,DWORD PTR [rcx+0x6c]
   1400354a0:	push   rbx
   1400354a1:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   1400354a6:	outs   dx,BYTE PTR ds:[rsi]
   1400354a7:	add    BYTE PTR [rsi+0x1],bl
   1400354aa:	rex.RX (bad) 
   1400354ac:	je     0x14003550f
   1400354ae:	ins    BYTE PTR es:[rdi],dx
   1400354af:	rex.B jo 0x140035522
   1400354b2:	rex.RB js 0x14003551e
   1400354b5:	je     0x1400354f8
   1400354b7:	add    BYTE PTR [rsi+0x6c745204],ch
   1400354bd:	rex.XB (bad) 
   1400354bf:	jo     0x140035535
   1400354c1:	jne    0x140035535
   1400354c3:	rex.XB outs dx,DWORD PTR gs:[rsi]
   1400354c6:	outs   dx,BYTE PTR ds:[rsi]
   1400354c7:	je     0x14003552e
   1400354c9:	js     0x14003553f
   1400354cb:	add    BYTE PTR [rsp+rax*1+0x566c7452],bh
   1400354d2:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
   1400354d9:	outs   dx,BYTE PTR ds:[rsi]
   1400354da:	ja     0x140035545
   1400354dc:	outs   dx,BYTE PTR ds:[rsi]
   1400354dd:	add    BYTE PTR fs:[rax],al
   1400354e0:	xchg   edx,eax
   1400354e1:	add    eax,0x61686e55
   1400354e6:	outs   dx,BYTE PTR ds:[rsi]
   1400354e7:	fs ins BYTE PTR es:[rdi],dx
   1400354e9:	gs fs rex.RB js 0x140035551
   1400354ee:	gs jo  0x140035565
   1400354f1:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   1400354f8:	gs jb  0x1400354fb
   1400354fb:	add    BYTE PTR [rdx+0x5],dl
   1400354fe:	push   rbx
   1400354ff:	gs je  0x140035557
   140035502:	outs   dx,BYTE PTR ds:[rsi]
   140035503:	push   0x6c646e61
   140035508:	gs fs rex.RB js 0x140035570
   14003550d:	gs jo  0x140035584
   140035510:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   140035517:	gs jb  0x14003551a
   14003551a:	sbb    DWORD PTR [rip+0x4c746553],eax        # 0x18c77ba73
   140035520:	(bad)  
   140035521:	jae    0x140035597
   140035523:	rex.RB jb 0x140035598
   140035526:	outs   dx,DWORD PTR ds:[rsi]
   140035527:	jb     0x140035529
   140035529:	add    BYTE PTR [rcx+0x3],dl
   14003552c:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14003552e:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   140035536:	rex.XB jb 0x1400355a2
   140035539:	je     0x1400355a4
   14003553b:	movsxd esp,DWORD PTR [rcx+0x6c]
   14003553e:	push   rbx
   14003553f:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140035544:	outs   dx,BYTE PTR ds:[rsi]
   140035545:	rex.B outs dx,BYTE PTR ds:[rsi]
   140035547:	fs push rbx
   140035549:	jo     0x1400355b4
   14003554b:	outs   dx,BYTE PTR ds:[rsi]
   14003554c:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14003554e:	jne    0x1400355be
   140035550:	je     0x140035552
   140035552:	mov    dh,0x0
   140035554:	rex.XB jb 0x1400355bc
   140035557:	(bad)  
   140035558:	je     0x1400355bf
   14003555a:	rex.RB jbe 0x1400355c2
   14003555d:	outs   dx,BYTE PTR ds:[rsi]
   14003555e:	je     0x1400355b7
   140035560:	add    BYTE PTR [rax],al
   140035562:	(bad)  
   140035563:	add    eax,0x65656c53
   140035568:	jo     0x14003556a
   14003556a:	lar    eax,WORD PTR [rdi+0x65]
   14003556e:	je     0x1400355b3
   140035570:	jne    0x1400355e4
   140035572:	jb     0x1400355d9
   140035574:	outs   dx,BYTE PTR ds:[rsi]
   140035575:	je     0x1400355c7
   140035577:	jb     0x1400355e8
   140035579:	movsxd esp,DWORD PTR [rbp+0x73]
   14003557c:	jae    0x14003557e
   14003557e:	jo     0x140035585
   140035580:	push   rsp
   140035581:	gs jb  0x1400355f1
   140035584:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
   14003558b:	outs   dx,DWORD PTR ds:[rsi]
   14003558c:	movsxd esp,DWORD PTR [rbp+0x73]
   14003558f:	jae    0x140035591
   140035591:	add    BYTE PTR [rdx+0x736c5405],al
   140035597:	rex.B ins BYTE PTR es:[rdi],dx
   140035599:	ins    BYTE PTR es:[rdi],dx
   14003559a:	outs   dx,DWORD PTR ds:[rsi]
   14003559b:	movsxd eax,DWORD PTR [rax]
   14003559d:	add    BYTE PTR [rbp+rax*1+0x47736c54],al
   1400355a4:	gs je  0x1400355fd
   1400355a7:	(bad)  
   1400355a8:	ins    BYTE PTR es:[rdi],dx
   1400355a9:	jne    0x140035610
   1400355ab:	add    BYTE PTR [rbp+0x736c5405],al
   1400355b1:	push   rbx
   1400355b2:	gs je  0x14003560b
   1400355b5:	(bad)  
   1400355b6:	ins    BYTE PTR es:[rdi],dx
   1400355b7:	jne    0x14003561e
   1400355b9:	add    BYTE PTR [rbx+0x736c5405],al
   1400355bf:	rex.RX jb 0x140035627
   1400355c2:	gs add ch,al
   1400355c5:	add    al,BYTE PTR [rdi+0x65]
   1400355c8:	je     0x14003561d
   1400355ca:	je     0x14003562d
   1400355cc:	jb     0x140035642
   1400355ce:	jne    0x140035640
   1400355d0:	rex.WB outs dx,BYTE PTR ds:[rsi]
   1400355d2:	outs   dx,WORD PTR ds:[rsi]
   1400355d4:	push   rdi
   1400355d5:	add    cl,bh
   1400355d7:	add    al,BYTE PTR [rdi+0x65]
   1400355da:	je     0x140035630
   1400355dc:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
   1400355e3:	je     0x1400355e5
   1400355e5:	add    BYTE PTR [rbp+0x2],ch
   1400355e8:	rex.RXB
   1400355e9:	gs je  0x140035639
   1400355ec:	outs   dx,DWORD PTR ds:[rsi]
   1400355ed:	fs jne 0x14003565c
   1400355f0:	gs rex.W (bad) 
   1400355f3:	outs   dx,BYTE PTR ds:[rsi]
   1400355f4:	fs ins BYTE PTR es:[rdi],dx
   1400355f6:	gs push rdi
   1400355f8:	add    BYTE PTR [rax],al
   1400355fa:	loope  0x1400355fc
   1400355fc:	rex.XB jb 0x140035664
   1400355ff:	(bad)  
   140035600:	je     0x140035667
   140035602:	push   rbx
   140035603:	gs ins DWORD PTR es:[rdi],dx
   140035605:	(bad)  
   140035606:	jo     0x140035670
   140035608:	outs   dx,DWORD PTR ds:[rsi]
   140035609:	jb     0x140035670
   14003560b:	push   rdi
   14003560c:	add    BYTE PTR [rax],al
   14003560e:	mov    DWORD PTR [rdx],0x53746547
   140035614:	je     0x14003567a
   140035616:	rex.W (bad) 
   140035618:	outs   dx,BYTE PTR ds:[rsi]
   140035619:	fs ins BYTE PTR es:[rdi],dx
   14003561b:	add    BYTE PTR gs:[rax],al
   14003561e:	icebp  
   14003561f:	add    eax,0x74697257
   140035624:	imul   r13d,DWORD PTR gs:[rbp+r12*2+0x0],0x65470269
   14003562e:	je     0x14003567d
   140035630:	outs   dx,DWORD PTR ds:[rsi]
   140035631:	fs jne 0x1400356a0
   140035634:	imul   r13d,DWORD PTR gs:[rbp+r12*2+0x4e],0x57656d61
   14003563e:	add    BYTE PTR [rax],al
   140035640:	rol    BYTE PTR [rbx+rdx*2],cl
   140035643:	gs je  0x140035689
   140035646:	outs   dx,DWORD PTR ds:[rsi]
   140035647:	outs   dx,BYTE PTR ds:[rsi]
   140035648:	jae    0x1400356b9
   14003564a:	ins    BYTE PTR es:[rdi],dx
   14003564b:	gs rex.XB je 0x1400356c1
   14003564f:	ins    BYTE PTR es:[rdi],dx
   140035650:	rex.W (bad) 
   140035652:	outs   dx,BYTE PTR ds:[rsi]
   140035653:	fs ins BYTE PTR es:[rdi],dx
   140035655:	gs jb  0x140035658
   140035658:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140035659:	add    DWORD PTR [rsi+0x72],eax
   14003565c:	gs imul r12,QWORD PTR gs:[rdx+0x72],0x797261
   140035666:	stos   BYTE PTR es:[rdi],al
   140035667:	add    ecx,DWORD PTR [rdi+rbp*2+0x61]
   14003566b:	imul   r12,QWORD PTR fs:[rdx+0x72],0x45797261
   140035674:	js     0x1400356cd
   140035676:	add    BYTE PTR [rax],al
   140035678:	jne    0x14003567d
   14003567a:	rex.WB jae 0x1400356d3
   14003567d:	(bad)  
   14003567e:	ins    BYTE PTR es:[rdi],dx
   14003567f:	imul   esp,DWORD PTR [rbx+rax*2+0x6f],0x61506564
   140035687:	add    BYTE PTR gs:[edx+0x74654701],ch
   14003568f:	rex.B
   140035690:	rex.XB push r8
   140035692:	add    BYTE PTR [rax],al
   140035694:	lea    eax,[rdx]
   140035696:	rex.RXB
   140035697:	gs je  0x1400356e9
   14003569a:	rex.RB
   14003569b:	rex.WRB
   14003569c:	rex.XB push r8
   14003569e:	add    BYTE PTR [rax],al
   1400356a0:	mov    ecx,0x74654701
   1400356a5:	rex.XB push r8
   1400356a7:	rex.WB outs dx,BYTE PTR ds:[rsi]
   1400356a9:	outs   dx,WORD PTR ds:[rsi]
   1400356ab:	add    BYTE PTR [rcx+0x74654702],ch
   1400356b1:	push   rax
   1400356b2:	jb     0x140035723
   1400356b4:	movsxd esp,DWORD PTR [rbp+0x73]
   1400356b7:	jae    0x140035701
   1400356b9:	gs (bad) 
   1400356bb:	jo     0x1400356bd
   1400356bd:	add    BYTE PTR [rbx],dl
   1400356bf:	add    al,BYTE PTR [rdi+0x65]
   1400356c2:	je     0x140035707
   1400356c4:	jne    0x140035738
   1400356c6:	jb     0x14003572d
   1400356c8:	outs   dx,BYTE PTR ds:[rsi]
   1400356c9:	je     0x14003571f
   1400356cb:	push   0x64616572
   1400356d0:	add    BYTE PTR [rax],al
   1400356d2:	adc    al,0x2
   1400356d4:	rex.RXB
   1400356d5:	gs je  0x14003571b
   1400356d8:	jne    0x14003574c
   1400356da:	jb     0x140035741
   1400356dc:	outs   dx,BYTE PTR ds:[rsi]
   1400356dd:	je     0x140035733
   1400356df:	push   0x64616572
   1400356e4:	rex.WB
   1400356e5:	add    BYTE PTR fs:[rax],al
   1400356e8:	add    r8b,BYTE PTR [r15+0x65]
   1400356ec:	je     0x140035734
   1400356ee:	imul   ebp,DWORD PTR [rbp+riz*2+0x54],0x657079
   1400356f6:	push   0x74654702
   1400356fb:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   1400356fd:	fs jne 0x14003576c
   140035700:	imul   r13d,DWORD PTR gs:[rbp+r12*2+0x4e],0x41656d61
   14003570a:	add    BYTE PTR [rax],al
   14003570c:	xor    BYTE PTR [rcx+rdx*2],al
   14003570f:	jne    0x140035776
   140035711:	jb     0x14003578c
   140035713:	push   rax
   140035714:	gs jb  0x14003577d
   140035717:	outs   dx,DWORD PTR ds:[rsi]
   140035718:	jb     0x140035787
   14003571a:	(bad)  
   14003571b:	outs   dx,BYTE PTR ds:[rsi]
   14003571c:	movsxd esp,DWORD PTR [rbp+0x43]
   14003571f:	outs   dx,DWORD PTR ds:[rsi]
   140035720:	jne    0x140035790
   140035722:	je     0x140035789
   140035724:	jb     0x140035726
   140035726:	adc    BYTE PTR [rdx],al
   140035728:	rex.RXB
   140035729:	gs je  0x14003576f
   14003572c:	jne    0x1400357a0
   14003572e:	jb     0x140035795
   140035730:	outs   dx,BYTE PTR ds:[rsi]
   140035731:	je     0x140035783
   140035733:	jb     0x1400357a4
   140035735:	movsxd esp,DWORD PTR [rbp+0x73]
   140035738:	jae    0x140035783
   14003573a:	fs add ch,bl
   14003573d:	add    al,BYTE PTR [rdi+0x65]
   140035740:	je     0x140035795
   140035742:	jns    0x1400357b7
   140035744:	je     0x1400357ab
   140035746:	ins    DWORD PTR es:[rdi],dx
   140035747:	push   rsp
   140035748:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
   14003574f:	ins    BYTE PTR es:[rdi],dx
   140035750:	gs push rsp
   140035752:	imul   ebp,DWORD PTR [rbp+0x65],0x47022e00
   140035759:	gs je  0x1400357a1
   14003575c:	outs   dx,BYTE PTR ds:[rsi]
   14003575d:	jbe    0x1400357c8
   14003575f:	jb     0x1400357d0
   140035761:	outs   dx,BYTE PTR ds:[rsi]
   140035762:	ins    DWORD PTR es:[rdi],dx
   140035763:	outs   dx,BYTE PTR gs:[rsi]
   140035765:	je     0x1400357ba
   140035767:	je     0x1400357db
   140035769:	imul   ebp,DWORD PTR [rsi+0x67],0x5773
   140035770:	movabs ds:0x766e456565724601,eax
   140035779:	imul   esi,DWORD PTR [rdx+0x6f],0x6e656d6e
   140035780:	je     0x1400357d5
   140035782:	je     0x1400357f6
   140035784:	imul   ebp,DWORD PTR [rsi+0x67],0x1a005773
   14003578b:	add    al,BYTE PTR [rdi+0x65]
   14003578e:	je     0x1400357d4
   140035790:	(bad)  
   140035791:	je     0x1400357f8
   140035793:	rex.RX outs dx,DWORD PTR ds:[rsi]
   140035795:	jb     0x140035804
   140035797:	(bad)  
   140035798:	je     0x1400357f1
   14003579a:	add    BYTE PTR [rax],al
   14003579c:	inc    BYTE PTR [rdx]
   14003579e:	rex.RXB
   14003579f:	gs je  0x1400357f6
   1400357a2:	imul   ebp,DWORD PTR [rbp+0x65],0x6d726f46
   1400357a9:	(bad)  
   1400357aa:	je     0x140035803
   1400357ac:	add    BYTE PTR [rax],al
   1400357ae:	xchg   ebx,eax
   1400357af:	add    BYTE PTR [rbx+0x6f],al
   1400357b2:	ins    DWORD PTR es:[rdi],dx
   1400357b3:	jo     0x140035816
   1400357b5:	jb     0x14003581c
   1400357b7:	push   rbx
   1400357b8:	je     0x14003582c
   1400357ba:	imul   ebp,DWORD PTR [rsi+0x67],0x99000057
   1400357c1:	add    ecx,DWORD PTR [rbx+rax*2+0x4d]
   1400357c5:	(bad)  
   1400357c6:	jo     0x14003581b
   1400357c8:	je     0x14003583c
   1400357ca:	imul   ebp,DWORD PTR [rsi+0x67],0x5a000057
   1400357d1:	add    al,BYTE PTR [rdi+0x65]
   1400357d4:	je     0x140035822
   1400357d6:	outs   dx,DWORD PTR ds:[rsi]
   1400357d7:	movsxd esp,DWORD PTR [rcx+0x6c]
   1400357da:	rex.WB outs dx,BYTE PTR gs:[rsi]
   1400357dd:	outs   dx,WORD PTR ds:[rsi]
   1400357df:	push   rdi
   1400357e0:	add    BYTE PTR [rax],al
   1400357e2:	ja     0x1400357e7
   1400357e4:	rex.WB jae 0x14003583d
   1400357e7:	(bad)  
   1400357e8:	ins    BYTE PTR es:[rdi],dx
   1400357e9:	imul   esp,DWORD PTR [rsp+rcx*2+0x6f],0x656c6163
   1400357f1:	add    BYTE PTR [rip+0x74654703],al        # 0x1b4689efa
   1400357f7:	push   rbp
   1400357f8:	jae    0x14003585f
   1400357fa:	jb     0x140035840
   1400357fc:	gs data16 (bad) 
   1400357ff:	jne    0x14003586d
   140035801:	je     0x14003584f
   140035803:	rex.XB
   140035804:	rex.WB
   140035805:	add    BYTE PTR [rax],r8b
   140035808:	add    QWORD PTR [rbp+0x6e],r8
   14003580c:	jne    0x14003587b
   14003580e:	push   rbx
   14003580f:	jns    0x140035884
   140035811:	je     0x140035878
   140035813:	ins    DWORD PTR es:[rdi],dx
   140035814:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140035816:	movsxd esp,DWORD PTR [rcx+0x6c]
   140035819:	gs jae 0x140035873
   14003581c:	add    BYTE PTR [rax],al
   14003581e:	(bad)  
   14003581f:	add    ecx,DWORD PTR [rax+0x65]
   140035822:	(bad)  
   140035823:	jo     0x140035877
   140035825:	gs rex.B ins BYTE PTR es:[rdi],dx
   140035828:	ins    BYTE PTR es:[rdi],dx
   140035829:	outs   dx,DWORD PTR ds:[rsi]
   14003582a:	movsxd eax,DWORD PTR [rax]
   14003582c:	std    
   14003582d:	add    ecx,DWORD PTR [rdi+0x75]
   140035830:	je     0x1400358a2
   140035832:	jne    0x1400358a8
   140035834:	rex.R
   140035835:	gs (bad) 
   140035837:	jne    0x1400358a0
   140035839:	push   rbx
   14003583a:	je     0x1400358ae
   14003583c:	imul   ebp,DWORD PTR [rsi+0x67],0xcc000057
   140035843:	add    al,BYTE PTR [rdi+0x65]
   140035846:	je     0x14003589b
   140035848:	je     0x1400358bc
   14003584a:	imul   ebp,DWORD PTR [rsi+0x67],0x65707954
   140035851:	push   rdi
   140035852:	add    BYTE PTR [rax],al
   140035854:	cwde   
   140035855:	add    DWORD PTR [rsi+0x6c],eax
   140035858:	jne    0x1400358cd
   14003585a:	push   0x656c6946
   14003585f:	rex.X jne 0x1400358c8
   140035862:	data16 gs jb 0x1400358d9
   140035866:	add    BYTE PTR [rax],al
   140035868:	loop   0x14003586b
   14003586a:	rex.RXB
   14003586b:	gs je  0x1400358b1
   14003586e:	outs   dx,DWORD PTR ds:[rsi]
   14003586f:	outs   dx,BYTE PTR ds:[rsi]
   140035870:	jae    0x1400358e1
   140035872:	ins    BYTE PTR es:[rdi],dx
   140035873:	gs rex.XB push r8
   140035876:	add    BYTE PTR [rax],al
   140035878:	hlt    
   140035879:	add    DWORD PTR [rdi+0x65],eax
   14003587c:	je     0x1400358c1
   14003587e:	outs   dx,DWORD PTR ds:[rsi]
   14003587f:	outs   dx,BYTE PTR ds:[rsi]
   140035880:	jae    0x1400358f1
   140035882:	ins    BYTE PTR es:[rdi],dx
   140035883:	rex.WRB outs dx,DWORD PTR gs:[rsi]
   140035886:	fs add BYTE PTR gs:[rax],al
   14003588a:	xor    BYTE PTR [rip+0x53746553],al        # 0x19377bde3
   140035890:	je     0x1400358f6
   140035892:	rex.W (bad) 
   140035894:	outs   dx,BYTE PTR ds:[rsi]
   140035895:	fs ins BYTE PTR es:[rdi],dx
   140035897:	add    BYTE PTR gs:[rax],al
   14003589a:	or     al,0x5
   14003589c:	push   rbx
   14003589d:	gs je  0x1400358e6
   1400358a0:	imul   ebp,DWORD PTR [rbp+riz*2+0x50],0x746e696f
   1400358a8:	gs jb  0x1400358f0
   1400358ab:	js     0x1400358ad
   1400358ad:	add    al,dh
   1400358af:	add    eax,0x74697257
   1400358b4:	rex.XB outs dx,DWORD PTR gs:[rsi]
   1400358b7:	outs   dx,BYTE PTR ds:[rsi]
   1400358b8:	jae    0x140035929
   1400358ba:	ins    BYTE PTR es:[rdi],dx
   1400358bb:	gs push rdi
   1400358bd:	add    dl,al
   1400358bf:	add    BYTE PTR [rbx+0x72],al
   1400358c2:	gs (bad) 
   1400358c4:	je     0x14003592b
   1400358c6:	rex.RX
   1400358c7:	.byte 0x69
   1400358c8:	ins    BYTE PTR es:[rdi],dx
   1400358c9:	gs push rdi
	...

Disassembly of section .data:

0000000140036000 <.data>:
   140036000:	rex jne 0x140036005
   140036003:	rex add DWORD PTR [rax],eax
   140036006:	add    BYTE PTR [rax],al
   140036008:	nop
   140036009:	jne    0x14003600d
   14003600b:	rex add DWORD PTR [rax],eax
   14003600e:	add    BYTE PTR [rax],al
   140036010:	lock jne 0x140036015
   140036013:	rex add DWORD PTR [rax],eax
	...
   14003602e:	add    BYTE PTR [rax],al
   140036030:	(bad)  
	...
   14003604d:	add    BYTE PTR [rax],al
   14003604f:	add    BYTE PTR [rdi],al
	...
   14003606d:	add    BYTE PTR [rax],al
   14003606f:	add    BYTE PTR [rdi],al
	...
   14003608d:	add    BYTE PTR [rax],al
   14003608f:	add    BYTE PTR [rdi],al
	...
   1400360ad:	add    BYTE PTR [rax],al
   1400360af:	add    BYTE PTR [rdi],al
   1400360b1:	add    BYTE PTR [rax],al
   1400360b3:	add    BYTE PTR [rax],al
   1400360b5:	add    BYTE PTR [rax],al
   1400360b7:	add    al,ah
   1400360b9:	js     0x1400360bd
   1400360bb:	rex add DWORD PTR [rax],eax
   1400360be:	add    BYTE PTR [rax],al
   1400360c0:	lock js 0x1400360c5
   1400360c3:	rex add DWORD PTR [rax],eax
   1400360c6:	add    BYTE PTR [rax],al
   1400360c8:	add    BYTE PTR [rcx+0x2],bh
   1400360cb:	rex add DWORD PTR [rax],eax
   1400360ce:	add    BYTE PTR [rax],al
   1400360d0:	jne    0x14003606a
   1400360d2:	add    BYTE PTR [rax],al
   1400360d4:	jae    0x14003606e
	...
   1400360de:	add    BYTE PTR [rax],al
   1400360e0:	add    al,BYTE PTR [rax]
   1400360e2:	add    BYTE PTR [rax],al
   1400360e4:	add    DWORD PTR [rax],eax
   1400360e6:	add    BYTE PTR [rax],al
   1400360e8:	add    al,BYTE PTR [rax]
	...
   1400360f6:	add    BYTE PTR [rax],al
   1400360f8:	add    DWORD PTR [rax],eax
	...
   140036106:	add    BYTE PTR [rax],al
   140036108:	add    DWORD PTR [rax],eax
	...
   140036126:	add    BYTE PTR [rax],al
   140036128:	add    DWORD PTR [rax],eax
	...
   140036136:	add    BYTE PTR [rax],al
   140036138:	add    DWORD PTR [rax],eax
	...
   140036156:	add    BYTE PTR [rax],al
   140036158:	add    DWORD PTR [rax],eax
	...
   140036166:	add    BYTE PTR [rax],al
   140036168:	add    DWORD PTR [rax],eax
	...
   140036176:	add    BYTE PTR [rax],al
   140036178:	add    DWORD PTR [rax],eax
	...
   140036196:	add    BYTE PTR [rax],al
   140036198:	add    DWORD PTR [rax],eax
	...
   1400361b6:	add    BYTE PTR [rax],al
   1400361b8:	add    DWORD PTR [rax],eax
	...
   1400361c6:	add    BYTE PTR [rax],al
   1400361c8:	add    DWORD PTR [rax],eax
	...
   1400361d6:	add    BYTE PTR [rax],al
   1400361d8:	add    DWORD PTR [rax],eax
	...
   1400361f6:	add    BYTE PTR [rax],al
   1400361f8:	add    DWORD PTR [rax],eax
	...
   140036206:	add    BYTE PTR [rax],al
   140036208:	add    DWORD PTR [rax],eax
	...
   140036216:	add    BYTE PTR [rax],al
   140036218:	add    DWORD PTR [rax],eax
	...
   14003632e:	add    BYTE PTR [rax],al
   140036330:	(bad)  
   140036331:	(bad)  
   140036332:	(bad)  
   140036333:	inc    DWORD PTR [rax]
	...
   14003633d:	add    BYTE PTR [rax],al
   14003633f:	add    BYTE PTR [rcx],al
   140036341:	add    BYTE PTR [rax],al
   140036343:	add    BYTE PTR [rsi],dl
   140036345:	add    BYTE PTR [rax],al
   140036347:	add    BYTE PTR [rdx],al
   140036349:	add    BYTE PTR [rax],al
   14003634b:	add    BYTE PTR [rdx],al
   14003634d:	add    BYTE PTR [rax],al
   14003634f:	add    BYTE PTR [rbx],al
   140036351:	add    BYTE PTR [rax],al
   140036353:	add    BYTE PTR [rdx],al
   140036355:	add    BYTE PTR [rax],al
   140036357:	add    BYTE PTR [rax+rax*1],al
   14003635a:	add    BYTE PTR [rax],al
   14003635c:	sbb    BYTE PTR [rax],al
   14003635e:	add    BYTE PTR [rax],al
   140036360:	add    eax,0xd000000
   140036365:	add    BYTE PTR [rax],al
   140036367:	add    BYTE PTR [rsi],al
   140036369:	add    BYTE PTR [rax],al
   14003636b:	add    BYTE PTR [rcx],cl
   14003636d:	add    BYTE PTR [rax],al
   14003636f:	add    BYTE PTR [rdi],al
   140036371:	add    BYTE PTR [rax],al
   140036373:	add    BYTE PTR [rax+rax*1],cl
   140036376:	add    BYTE PTR [rax],al
   140036378:	or     BYTE PTR [rax],al
   14003637a:	add    BYTE PTR [rax],al
   14003637c:	or     al,0x0
   14003637e:	add    BYTE PTR [rax],al
   140036380:	or     DWORD PTR [rax],eax
   140036382:	add    BYTE PTR [rax],al
   140036384:	or     al,0x0
   140036386:	add    BYTE PTR [rax],al
   140036388:	or     al,BYTE PTR [rax]
   14003638a:	add    BYTE PTR [rax],al
   14003638c:	(bad)  
   14003638d:	add    BYTE PTR [rax],al
   14003638f:	add    BYTE PTR [rbx],cl
   140036391:	add    BYTE PTR [rax],al
   140036393:	add    BYTE PTR [rax],cl
   140036395:	add    BYTE PTR [rax],al
   140036397:	add    BYTE PTR [rax+rax*1],cl
   14003639a:	add    BYTE PTR [rax],al
   14003639c:	(bad)  
   14003639d:	add    BYTE PTR [rax],al
   14003639f:	add    BYTE PTR [rip+0x16000000],cl        # 0x1560363a5
   1400363a5:	add    BYTE PTR [rax],al
   1400363a7:	add    BYTE PTR [rdi],cl
   1400363a9:	add    BYTE PTR [rax],al
   1400363ab:	add    BYTE PTR [rdx],al
   1400363ad:	add    BYTE PTR [rax],al
   1400363af:	add    BYTE PTR [rax],dl
   1400363b1:	add    BYTE PTR [rax],al
   1400363b3:	add    BYTE PTR [rip+0x11000000],cl        # 0x1510363b9
   1400363b9:	add    BYTE PTR [rax],al
   1400363bb:	add    BYTE PTR [rdx],dl
   1400363bd:	add    BYTE PTR [rax],al
   1400363bf:	add    BYTE PTR [rdx],dl
   1400363c1:	add    BYTE PTR [rax],al
   1400363c3:	add    BYTE PTR [rdx],al
   1400363c5:	add    BYTE PTR [rax],al
   1400363c7:	add    BYTE PTR [rcx],ah
   1400363c9:	add    BYTE PTR [rax],al
   1400363cb:	add    BYTE PTR [rip+0x35000000],cl        # 0x1750363d1
   1400363d1:	add    BYTE PTR [rax],al
   1400363d3:	add    BYTE PTR [rdx],al
   1400363d5:	add    BYTE PTR [rax],al
   1400363d7:	add    BYTE PTR [rcx+0x0],al
   1400363da:	add    BYTE PTR [rax],al
   1400363dc:	or     eax,0x43000000
   1400363e1:	add    BYTE PTR [rax],al
   1400363e3:	add    BYTE PTR [rdx],al
   1400363e5:	add    BYTE PTR [rax],al
   1400363e7:	add    BYTE PTR [rax+0x0],dl
   1400363ea:	add    BYTE PTR [rax],al
   1400363ec:	adc    DWORD PTR [rax],eax
   1400363ee:	add    BYTE PTR [rax],al
   1400363f0:	push   rdx
   1400363f1:	add    BYTE PTR [rax],al
   1400363f3:	add    BYTE PTR [rip+0x53000000],cl        # 0x1930363f9
   1400363f9:	add    BYTE PTR [rax],al
   1400363fb:	add    BYTE PTR [rip+0x57000000],cl        # 0x197036401
   140036401:	add    BYTE PTR [rax],al
   140036403:	add    BYTE PTR [rsi],dl
   140036405:	add    BYTE PTR [rax],al
   140036407:	add    BYTE PTR [rcx+0x0],bl
   14003640a:	add    BYTE PTR [rax],al
   14003640c:	or     eax,DWORD PTR [rax]
   14003640e:	add    BYTE PTR [rax],al
   140036410:	ins    BYTE PTR es:[rdi],dx
   140036411:	add    BYTE PTR [rax],al
   140036413:	add    BYTE PTR [rip+0x6d000000],cl        # 0x1ad036419
   140036419:	add    BYTE PTR [rax],al
   14003641b:	add    BYTE PTR [rax],ah
   14003641d:	add    BYTE PTR [rax],al
   14003641f:	add    BYTE PTR [rax+0x0],dh
   140036422:	add    BYTE PTR [rax],al
   140036424:	sbb    al,0x0
   140036426:	add    BYTE PTR [rax],al
   140036428:	jb     0x14003642a
   14003642a:	add    BYTE PTR [rax],al
   14003642c:	or     DWORD PTR [rax],eax
   14003642e:	add    BYTE PTR [rax],al
   140036430:	(bad)  
   140036431:	add    BYTE PTR [rax],al
   140036433:	add    BYTE PTR [rsi],dl
   140036435:	add    BYTE PTR [rax],al
   140036437:	add    BYTE PTR [rax+0xa000000],al
   14003643d:	add    BYTE PTR [rax],al
   14003643f:	add    BYTE PTR [rcx+0xa000000],al
   140036445:	add    BYTE PTR [rax],al
   140036447:	add    BYTE PTR [rdx+0x9000000],al
   14003644d:	add    BYTE PTR [rax],al
   14003644f:	add    BYTE PTR [rbx+0x16000000],al
   140036455:	add    BYTE PTR [rax],al
   140036457:	add    BYTE PTR [rax+rax*1+0xd0000],al
   14003645e:	add    BYTE PTR [rax],al
   140036460:	xchg   ecx,eax
   140036461:	add    BYTE PTR [rax],al
   140036463:	add    BYTE PTR [rcx],ch
   140036465:	add    BYTE PTR [rax],al
   140036467:	add    BYTE PTR [rsi+0xd000000],bl
   14003646d:	add    BYTE PTR [rax],al
   14003646f:	add    BYTE PTR [rcx+0x2000000],ah
   140036475:	add    BYTE PTR [rax],al
   140036477:	add    BYTE PTR [rax+rax*1+0xb0000],ah
   14003647e:	add    BYTE PTR [rax],al
   140036480:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140036481:	add    BYTE PTR [rax],al
   140036483:	add    BYTE PTR [rip+0xffffffffb7000000],cl        # 0xf7036489
   140036489:	add    BYTE PTR [rax],al
   14003648b:	add    BYTE PTR [rcx],dl
   14003648d:	add    BYTE PTR [rax],al
   14003648f:	add    dh,cl
   140036491:	add    BYTE PTR [rax],al
   140036493:	add    BYTE PTR [rdx],al
   140036495:	add    BYTE PTR [rax],al
   140036497:	add    bh,dl
   140036499:	add    BYTE PTR [rax],al
   14003649b:	add    BYTE PTR [rbx],cl
   14003649d:	add    BYTE PTR [rax],al
   14003649f:	add    BYTE PTR [rax],bl
   1400364a1:	(bad)  
   1400364a2:	add    BYTE PTR [rax],al
   1400364a4:	or     al,0x0
   1400364a6:	add    BYTE PTR [rax],al
   1400364a8:	or     al,0x0
   1400364aa:	add    BYTE PTR [rax],al
   1400364ac:	or     BYTE PTR [rax],al
   1400364ae:	add    BYTE PTR [rax],al
   1400364b0:	and    ch,bh
   1400364b2:	add    BYTE PTR [rax+0x1],al
   1400364b5:	add    BYTE PTR [rax],al
   1400364b7:	add    BYTE PTR [rax],ah
   1400364b9:	std    
   1400364ba:	add    BYTE PTR [rax+0x1],al
   1400364bd:	add    BYTE PTR [rax],al
   1400364bf:	add    BYTE PTR [rax],ah
   1400364c1:	std    
   1400364c2:	add    BYTE PTR [rax+0x1],al
   1400364c5:	add    BYTE PTR [rax],al
   1400364c7:	add    BYTE PTR [rax],ah
   1400364c9:	std    
   1400364ca:	add    BYTE PTR [rax+0x1],al
   1400364cd:	add    BYTE PTR [rax],al
   1400364cf:	add    BYTE PTR [rax],ah
   1400364d1:	std    
   1400364d2:	add    BYTE PTR [rax+0x1],al
   1400364d5:	add    BYTE PTR [rax],al
   1400364d7:	add    BYTE PTR [rax],ah
   1400364d9:	std    
   1400364da:	add    BYTE PTR [rax+0x1],al
   1400364dd:	add    BYTE PTR [rax],al
   1400364df:	add    BYTE PTR [rax],ah
   1400364e1:	std    
   1400364e2:	add    BYTE PTR [rax+0x1],al
   1400364e5:	add    BYTE PTR [rax],al
   1400364e7:	add    BYTE PTR [rax],ah
   1400364e9:	std    
   1400364ea:	add    BYTE PTR [rax+0x1],al
   1400364ed:	add    BYTE PTR [rax],al
   1400364ef:	add    BYTE PTR [rax],ah
   1400364f1:	std    
   1400364f2:	add    BYTE PTR [rax+0x1],al
   1400364f5:	add    BYTE PTR [rax],al
   1400364f7:	add    BYTE PTR [rax],ah
   1400364f9:	std    
   1400364fa:	add    BYTE PTR [rax+0x1],al
	...
   140036541:	add    BYTE PTR [rax],dl
   140036543:	adc    BYTE PTR [rax],dl
   140036545:	adc    BYTE PTR [rax],dl
   140036547:	adc    BYTE PTR [rax],dl
   140036549:	adc    BYTE PTR [rax],dl
   14003654b:	adc    BYTE PTR [rax],dl
   14003654d:	adc    BYTE PTR [rax],dl
   14003654f:	adc    BYTE PTR [rax],dl
   140036551:	adc    BYTE PTR [rax],dl
   140036553:	adc    BYTE PTR [rax],dl
   140036555:	adc    BYTE PTR [rax],dl
   140036557:	adc    BYTE PTR [rax],dl
   140036559:	adc    BYTE PTR [rax],dl
   14003655b:	adc    BYTE PTR [rax],al
   14003655d:	add    BYTE PTR [rax],al
   14003655f:	add    BYTE PTR [rax],al
   140036561:	add    BYTE PTR [rax],ah
   140036563:	and    BYTE PTR [rax],ah
   140036565:	and    BYTE PTR [rax],ah
   140036567:	and    BYTE PTR [rax],ah
   140036569:	and    BYTE PTR [rax],ah
   14003656b:	and    BYTE PTR [rax],ah
   14003656d:	and    BYTE PTR [rax],ah
   14003656f:	and    BYTE PTR [rax],ah
   140036571:	and    BYTE PTR [rax],ah
   140036573:	and    BYTE PTR [rax],ah
   140036575:	and    BYTE PTR [rax],ah
   140036577:	and    BYTE PTR [rax],ah
   140036579:	and    BYTE PTR [rax],ah
   14003657b:	and    BYTE PTR [rax],al
	...
   140036651:	(bad)  
   140036652:	(bad)
   140036657:	addr32 push 0x6c6b6a69
   14003665d:	ins    DWORD PTR es:[rdi],dx
   14003665e:	outs   dx,BYTE PTR ds:[rsi]
   14003665f:	outs   dx,DWORD PTR ds:[rsi]
   140036660:	jo     0x1400366d3
   140036662:	jb     0x1400366d7
   140036664:	je     0x1400366db
   140036666:	jbe    0x1400366df
   140036668:	js     0x1400366e3
   14003666a:	jp     0x14003666c
   14003666c:	add    BYTE PTR [rax],al
   14003666e:	add    BYTE PTR [rax],al
   140036670:	add    BYTE PTR [rcx+0x42],al
   140036673:	rex.XB
   140036674:	rex.R
   140036675:	rex.RB
   140036676:	rex.RX
   140036677:	rex.RXB
   140036678:	rex.W
   140036679:	rex.WB
   14003667a:	rex.WX
   14003667b:	rex.WXB
   14003667c:	rex.WR
   14003667d:	rex.WRB
   14003667e:	rex.WRX
   14003667f:	rex.WRXB push r8
   140036681:	push   rcx
   140036682:	push   rdx
   140036683:	push   rbx
   140036684:	push   rsp
   140036685:	push   rbp
   140036686:	push   rsi
   140036687:	push   rdi
   140036688:	pop    rax
   140036689:	pop    rcx
   14003668a:	pop    rdx
	...
   140036767:	add    BYTE PTR [rax],al
   140036769:	add    BYTE PTR [rax],dl
   14003676b:	adc    BYTE PTR [rax],dl
   14003676d:	adc    BYTE PTR [rax],dl
   14003676f:	adc    BYTE PTR [rax],dl
   140036771:	adc    BYTE PTR [rax],dl
   140036773:	adc    BYTE PTR [rax],dl
   140036775:	adc    BYTE PTR [rax],dl
   140036777:	adc    BYTE PTR [rax],dl
   140036779:	adc    BYTE PTR [rax],dl
   14003677b:	adc    BYTE PTR [rax],dl
   14003677d:	adc    BYTE PTR [rax],dl
   14003677f:	adc    BYTE PTR [rax],dl
   140036781:	adc    BYTE PTR [rax],dl
   140036783:	adc    BYTE PTR [rax],al
   140036785:	add    BYTE PTR [rax],al
   140036787:	add    BYTE PTR [rax],al
   140036789:	add    BYTE PTR [rax],ah
   14003678b:	and    BYTE PTR [rax],ah
   14003678d:	and    BYTE PTR [rax],ah
   14003678f:	and    BYTE PTR [rax],ah
   140036791:	and    BYTE PTR [rax],ah
   140036793:	and    BYTE PTR [rax],ah
   140036795:	and    BYTE PTR [rax],ah
   140036797:	and    BYTE PTR [rax],ah
   140036799:	and    BYTE PTR [rax],ah
   14003679b:	and    BYTE PTR [rax],ah
   14003679d:	and    BYTE PTR [rax],ah
   14003679f:	and    BYTE PTR [rax],ah
   1400367a1:	and    BYTE PTR [rax],ah
   1400367a3:	and    BYTE PTR [rax],al
	...
   140036869:	add    BYTE PTR [rcx+0x62],ah
   14003686c:	movsxd esp,DWORD PTR [rbp+riz*2+0x66]
   140036870:	addr32 push 0x6c6b6a69
   140036876:	ins    DWORD PTR es:[rdi],dx
   140036877:	outs   dx,BYTE PTR ds:[rsi]
   140036878:	outs   dx,DWORD PTR ds:[rsi]
   140036879:	jo     0x1400368ec
   14003687b:	jb     0x1400368f0
   14003687d:	je     0x1400368f4
   14003687f:	jbe    0x1400368f8
   140036881:	js     0x1400368fc
   140036883:	jp     0x140036885
   140036885:	add    BYTE PTR [rax],al
   140036887:	add    BYTE PTR [rax],al
   140036889:	add    BYTE PTR [rcx+0x42],al
   14003688c:	rex.XB
   14003688d:	rex.R
   14003688e:	rex.RB
   14003688f:	rex.RX
   140036890:	rex.RXB
   140036891:	rex.W
   140036892:	rex.WB
   140036893:	rex.WX
   140036894:	rex.WXB
   140036895:	rex.WR
   140036896:	rex.WRB
   140036897:	rex.WRX
   140036898:	rex.WRXB push r8
   14003689a:	push   rcx
   14003689b:	push   rdx
   14003689c:	push   rbx
   14003689d:	push   rsp
   14003689e:	push   rbp
   14003689f:	push   rsi
   1400368a0:	push   rdi
   1400368a1:	pop    rax
   1400368a2:	pop    rcx
   1400368a3:	pop    rdx
	...
   140036938:	add    DWORD PTR [rdx],eax
   14003693a:	add    al,0x8
   14003693c:	add    BYTE PTR [rax],al
   14003693e:	add    BYTE PTR [rax],al
   140036940:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140036941:	add    eax,DWORD PTR [rax]
   140036943:	add    BYTE PTR [rax-0x7e],ah
   140036946:	jns    0x1400368ca
   140036948:	and    DWORD PTR [rax],eax
   14003694a:	add    BYTE PTR [rax],al
   14003694c:	add    BYTE PTR [rax],al
   14003694e:	add    BYTE PTR [rax],al
   140036950:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140036951:	fild   WORD PTR [rax]
   140036953:	add    BYTE PTR [rax],al
   140036955:	add    BYTE PTR [rax],al
   140036957:	add    BYTE PTR [rcx+0xa5],ah
   14003695d:	add    BYTE PTR [rax],al
   14003695f:	add    BYTE PTR [rcx+0xfce09f],al
   140036965:	add    BYTE PTR [rax],al
   140036967:	add    BYTE PTR [rax+0x7e],al
   14003696a:	cmp    ah,0x0
   14003696d:	add    BYTE PTR [rax],al
   14003696f:	add    BYTE PTR [rax-0x3efffffd],ch
   140036975:	movabs ds:0x20a3da,eax
	...
   14003698e:	add    BYTE PTR [rax],al
   140036990:	cmp    esi,0x0
   140036996:	add    BYTE PTR [rax],al
   140036998:	rex inc BYTE PTR [rax]
   14003699b:	add    BYTE PTR [rax],al
   14003699d:	add    BYTE PTR [rax],al
   14003699f:	add    BYTE PTR [rbp-0x3efffffd],dh
   1400369a5:	movabs ds:0x20a3da,eax
	...
   1400369be:	add    BYTE PTR [rax],al
   1400369c0:	cmp    esi,0x0
   1400369c6:	add    BYTE PTR [rax],al
   1400369c8:	inc    BYTE PTR [r8]
   1400369cb:	add    BYTE PTR [rax],al
   1400369cd:	add    BYTE PTR [rax],al
   1400369cf:	add    BYTE PTR [rsi-0x30fffffd],dh
   1400369d5:	movabs ds:0xa2e8a2e5001aa2e4,al
   1400369de:	pop    rbx
	...
   1400369ef:	add    BYTE PTR [rcx+0xfe],al
   1400369f5:	add    BYTE PTR [rax],al
   1400369f7:	add    BYTE PTR [rax+0x7e],al
   1400369fa:	movabs eax,ds:0x55100000000fe
   140036a03:	add    BYTE PTR [rcx-0x26],dl
   140036a06:	pop    rsi
   140036a07:	fisub  DWORD PTR [rax]
   140036a09:	add    BYTE PTR [rdi-0x26],bl
   140036a0c:	push   0xffffffffffffffda
   140036a0e:	xor    al,BYTE PTR [rax]
	...
   140036a20:	adc    ebx,0xf9e0ded8
   140036a26:	add    BYTE PTR [rax],al
   140036a28:	xor    DWORD PTR [rsi-0x7f],edi
   140036a2b:	inc    BYTE PTR [rax]
   140036a2d:	add    BYTE PTR [rax],al
   140036a2f:	add    BYTE PTR [rax],dl
   140036a31:	add    eax,DWORD PTR [eax+0x1]
   140036a35:	add    BYTE PTR [rax],al
   140036a37:	add    BYTE PTR [rcx],al
   140036a39:	add    BYTE PTR [rax],al
   140036a3b:	add    bh,bh
   140036a3d:	(bad)  
   140036a3e:	(bad)  
   140036a3f:	push   QWORD PTR [rdx]
   140036a41:	movabs ds:0x5dcd00002b992ddf,al
   140036a4a:	and    dl,dl
   140036a4c:	data16 (bad) 
   140036a4e:	(bad)  
   140036a4f:	(bad)  
   140036a50:	(bad)  
   140036a51:	(bad)  
   140036a52:	(bad)  
   140036a53:	(bad)  
   140036a54:	(bad)  
   140036a55:	(bad)  
   140036a56:	(bad)  
   140036a57:	inc    DWORD PTR [rax+0xa]
	...
   140036aad:	add    BYTE PTR [rax],al
   140036aaf:	add    BYTE PTR [rcx],al
   140036ab1:	add    BYTE PTR [rax],al
   140036ab3:	add    BYTE PTR [rbx+0x0],al
	...
   140036abe:	add    BYTE PTR [rax],al
   140036ac0:	call   0x141436da2
   140036ac5:	add    BYTE PTR [rax],al
   140036ac7:	add    ah,ch
   140036ac9:	fld    QWORD PTR [rdx]
   140036acb:	rex add DWORD PTR [rax],eax
   140036ace:	add    BYTE PTR [rax],al
   140036ad0:	lock fld QWORD PTR [rdx]
   140036ad3:	rex add DWORD PTR [rax],eax
   140036ad6:	add    BYTE PTR [rax],al
   140036ad8:	hlt    
   140036ad9:	fld    QWORD PTR [rdx]
   140036adb:	rex add DWORD PTR [rax],eax
   140036ade:	add    BYTE PTR [rax],al
   140036ae0:	clc    
   140036ae1:	fld    QWORD PTR [rdx]
   140036ae3:	rex add DWORD PTR [rax],eax
   140036ae6:	add    BYTE PTR [rax],al
   140036ae8:	cld    
   140036ae9:	fld    QWORD PTR [rdx]
   140036aeb:	rex add DWORD PTR [rax],eax
   140036aee:	add    BYTE PTR [rax],al
   140036af0:	add    dh,bl
   140036af2:	add    al,BYTE PTR [rax+0x1]
   140036af5:	add    BYTE PTR [rax],al
   140036af7:	add    BYTE PTR [rsi+rbx*8],al
   140036afa:	add    al,BYTE PTR [rax+0x1]
   140036afd:	add    BYTE PTR [rax],al
   140036aff:	add    BYTE PTR [rsi+rbx*8],cl
   140036b02:	add    al,BYTE PTR [rax+0x1]
   140036b05:	add    BYTE PTR [rax],al
   140036b07:	add    BYTE PTR [rax],bl
   140036b09:	fiadd  WORD PTR [rdx]
   140036b0b:	rex add DWORD PTR [rax],eax
   140036b0e:	add    BYTE PTR [rax],al
   140036b10:	and    dh,bl
   140036b12:	add    al,BYTE PTR [rax+0x1]
   140036b15:	add    BYTE PTR [rax],al
   140036b17:	add    BYTE PTR [rax],dh
   140036b19:	fiadd  WORD PTR [rdx]
   140036b1b:	rex add DWORD PTR [rax],eax
   140036b1e:	add    BYTE PTR [rax],al
   140036b20:	cmp    al,0xde
   140036b22:	add    al,BYTE PTR [rax+0x1]
   140036b25:	add    BYTE PTR [rax],al
   140036b27:	add    BYTE PTR [rax-0x22],cl
   140036b2a:	add    al,BYTE PTR [rax+0x1]
   140036b2d:	add    BYTE PTR [rax],al
   140036b2f:	add    BYTE PTR [rsi+rbx*8+0x2],dl
   140036b33:	rex add DWORD PTR [rax],eax
   140036b36:	add    BYTE PTR [rax],al
   140036b38:	pop    rax
   140036b39:	fiadd  WORD PTR [rdx]
   140036b3b:	rex add DWORD PTR [rax],eax
   140036b3e:	add    BYTE PTR [rax],al
   140036b40:	pop    rsp
   140036b41:	fiadd  WORD PTR [rdx]
   140036b43:	rex add DWORD PTR [rax],eax
   140036b46:	add    BYTE PTR [rax],al
   140036b48:	(bad)  
   140036b49:	fiadd  WORD PTR [rdx]
   140036b4b:	rex add DWORD PTR [rax],eax
   140036b4e:	add    BYTE PTR [rax],al
   140036b50:	fiadd  WORD PTR fs:[rdx]
   140036b53:	rex add DWORD PTR [rax],eax
   140036b56:	add    BYTE PTR [rax],al
   140036b58:	push   0x14002de
   140036b5d:	add    BYTE PTR [rax],al
   140036b5f:	add    BYTE PTR [rsi+rbx*8+0x2],ch
   140036b63:	rex add DWORD PTR [rax],eax
   140036b66:	add    BYTE PTR [rax],al
   140036b68:	jo     0x140036b48
   140036b6a:	add    al,BYTE PTR [rax+0x1]
   140036b6d:	add    BYTE PTR [rax],al
   140036b6f:	add    BYTE PTR [rsi+rbx*8+0x2],dh
   140036b73:	rex add DWORD PTR [rax],eax
   140036b76:	add    BYTE PTR [rax],al
   140036b78:	js     0x140036b58
   140036b7a:	add    al,BYTE PTR [rax+0x1]
   140036b7d:	add    BYTE PTR [rax],al
   140036b7f:	add    BYTE PTR [rsi+rbx*8+0x2],bh
   140036b83:	rex add DWORD PTR [rax],eax
   140036b86:	add    BYTE PTR [rax],al
   140036b88:	sbb    dh,0x2
   140036b8b:	rex add DWORD PTR [rax],eax
   140036b8e:	add    BYTE PTR [rax],al
   140036b90:	mov    dh,bl
   140036b92:	add    al,BYTE PTR [rax+0x1]
   140036b95:	add    BYTE PTR [rax],al
   140036b97:	add    BYTE PTR [rax+0x14002de],dl
   140036b9d:	add    BYTE PTR [rax],al
   140036b9f:	add    BYTE PTR [rsi+rbx*8+0x14002],bl
   140036ba6:	add    BYTE PTR [rax],al
   140036ba8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140036ba9:	fiadd  WORD PTR [rdx]
   140036bab:	rex add DWORD PTR [rax],eax
   140036bae:	add    BYTE PTR [rax],al
   140036bb0:	fiadd  WORD PTR fs:[rdx]
   140036bb3:	rex add DWORD PTR [rax],eax
   140036bb6:	add    BYTE PTR [rax],al
   140036bb8:	lods   al,BYTE PTR ds:[rsi]
   140036bb9:	fiadd  WORD PTR [rdx]
   140036bbb:	rex add DWORD PTR [rax],eax
   140036bbe:	add    BYTE PTR [rax],al
   140036bc0:	mov    ah,0xde
   140036bc2:	add    al,BYTE PTR [rax+0x1]
   140036bc5:	add    BYTE PTR [rax],al
   140036bc7:	add    BYTE PTR [rsi+rbx*8+0x14002],bh
   140036bce:	add    BYTE PTR [rax],al
   140036bd0:	enter  0x2de,0x40
   140036bd4:	add    DWORD PTR [rax],eax
   140036bd6:	add    BYTE PTR [rax],al
   140036bd8:	fcomp  st(6)
   140036bda:	add    al,BYTE PTR [rax+0x1]
   140036bdd:	add    BYTE PTR [rax],al
   140036bdf:	add    al,ah
   140036be1:	fiadd  WORD PTR [rdx]
   140036be3:	rex add DWORD PTR [rax],eax
   140036be6:	add    BYTE PTR [rax],al
   140036be8:	lock fiadd WORD PTR [rdx]
   140036beb:	rex add DWORD PTR [rax],eax
   140036bee:	add    BYTE PTR [rax],al
   140036bf0:	cld    
   140036bf1:	fiadd  WORD PTR [rdx]
   140036bf3:	rex add DWORD PTR [rax],eax
   140036bf6:	add    BYTE PTR [rax],al
   140036bf8:	add    bh,bl
   140036bfa:	add    al,BYTE PTR [rax+0x1]
   140036bfd:	add    BYTE PTR [rax],al
   140036bff:	add    BYTE PTR [rax],cl
   140036c01:	fild   WORD PTR [rdx]
   140036c03:	rex add DWORD PTR [rax],eax
   140036c06:	add    BYTE PTR [rax],al
   140036c08:	sbb    bh,bl
   140036c0a:	add    al,BYTE PTR [rax+0x1]
   140036c0d:	add    BYTE PTR [rax],al
   140036c0f:	add    BYTE PTR [rax],dh
   140036c11:	fild   WORD PTR [rdx]
   140036c13:	rex add DWORD PTR [rax],eax
   140036c16:	add    BYTE PTR [rax],al
   140036c18:	add    DWORD PTR [rax],eax
   140036c1a:	add    BYTE PTR [rax],al
   140036c1c:	add    BYTE PTR [rax],al
   140036c1e:	add    BYTE PTR [rax],al
   140036c20:	rex fild WORD PTR [rdx]
   140036c23:	rex add DWORD PTR [rax],eax
   140036c26:	add    BYTE PTR [rax],al
   140036c28:	rex.W fild WORD PTR [rdx]
   140036c2b:	rex add DWORD PTR [rax],eax
   140036c2e:	add    BYTE PTR [rax],al
   140036c30:	push   rax
   140036c31:	fild   WORD PTR [rdx]
   140036c33:	rex add DWORD PTR [rax],eax
   140036c36:	add    BYTE PTR [rax],al
   140036c38:	pop    rax
   140036c39:	fild   WORD PTR [rdx]
   140036c3b:	rex add DWORD PTR [rax],eax
   140036c3e:	add    BYTE PTR [rax],al
   140036c40:	(bad)  
   140036c41:	fild   WORD PTR [rdx]
   140036c43:	rex add DWORD PTR [rax],eax
   140036c46:	add    BYTE PTR [rax],al
   140036c48:	push   0x14002df
   140036c4d:	add    BYTE PTR [rax],al
   140036c4f:	add    BYTE PTR [rax-0x21],dh
   140036c52:	add    al,BYTE PTR [rax+0x1]
   140036c55:	add    BYTE PTR [rax],al
   140036c57:	add    BYTE PTR [rax-0x21],bh
   140036c5a:	add    al,BYTE PTR [rax+0x1]
   140036c5d:	add    BYTE PTR [rax],al
   140036c5f:	add    BYTE PTR [rax+0x14002df],cl
   140036c65:	add    BYTE PTR [rax],al
   140036c67:	add    BYTE PTR [rax+0x14002df],bl
   140036c6d:	add    BYTE PTR [rax],al
   140036c6f:	add    BYTE PTR [rax+0x14002df],ch
   140036c75:	add    BYTE PTR [rax],al
   140036c77:	add    al,al
   140036c79:	fild   WORD PTR [rdx]
   140036c7b:	rex add DWORD PTR [rax],eax
   140036c7e:	add    BYTE PTR [rax],al
   140036c80:	fcomp  st(7)
   140036c82:	add    al,BYTE PTR [rax+0x1]
   140036c85:	add    BYTE PTR [rax],al
   140036c87:	add    al,ch
   140036c89:	fild   WORD PTR [rdx]
   140036c8b:	rex add DWORD PTR [rax],eax
   140036c8e:	add    BYTE PTR [rax],al
   140036c90:	add    al,ah
   140036c92:	add    al,BYTE PTR [rax+0x1]
   140036c95:	add    BYTE PTR [rax],al
   140036c97:	add    BYTE PTR [rax],cl
   140036c99:	loopne 0x140036c9d
   140036c9b:	rex add DWORD PTR [rax],eax
   140036c9e:	add    BYTE PTR [rax],al
   140036ca0:	adc    al,ah
   140036ca2:	add    al,BYTE PTR [rax+0x1]
   140036ca5:	add    BYTE PTR [rax],al
   140036ca7:	add    BYTE PTR [rax],bl
   140036ca9:	loopne 0x140036cad
   140036cab:	rex add DWORD PTR [rax],eax
   140036cae:	add    BYTE PTR [rax],al
   140036cb0:	and    al,ah
   140036cb2:	add    al,BYTE PTR [rax+0x1]
   140036cb5:	add    BYTE PTR [rax],al
   140036cb7:	add    BYTE PTR [rax],ch
   140036cb9:	loopne 0x140036cbd
   140036cbb:	rex add DWORD PTR [rax],eax
   140036cbe:	add    BYTE PTR [rax],al
   140036cc0:	xor    al,ah
   140036cc2:	add    al,BYTE PTR [rax+0x1]
   140036cc5:	add    BYTE PTR [rax],al
   140036cc7:	add    BYTE PTR [rax],bh
   140036cc9:	loopne 0x140036ccd
   140036ccb:	rex add DWORD PTR [rax],eax
   140036cce:	add    BYTE PTR [rax],al
   140036cd0:	rex loopne 0x140036cd5
   140036cd3:	rex add DWORD PTR [rax],eax
   140036cd6:	add    BYTE PTR [rax],al
   140036cd8:	rex.W loopne 0x140036cdd
   140036cdb:	rex add DWORD PTR [rax],eax
   140036cde:	add    BYTE PTR [rax],al
   140036ce0:	push   rax
   140036ce1:	loopne 0x140036ce5
   140036ce3:	rex add DWORD PTR [rax],eax
   140036ce6:	add    BYTE PTR [rax],al
   140036ce8:	pop    rax
   140036ce9:	loopne 0x140036ced
   140036ceb:	rex add DWORD PTR [rax],eax
   140036cee:	add    BYTE PTR [rax],al
   140036cf0:	(bad)  
   140036cf1:	loopne 0x140036cf5
   140036cf3:	rex add DWORD PTR [rax],eax
   140036cf6:	add    BYTE PTR [rax],al
   140036cf8:	jo     0x140036cda
   140036cfa:	add    al,BYTE PTR [rax+0x1]
   140036cfd:	add    BYTE PTR [rax],al
   140036cff:	add    BYTE PTR [rax+0x14002e0],cl
   140036d05:	add    BYTE PTR [rax],al
   140036d07:	add    BYTE PTR [rax+0x14002e0],bl
   140036d0d:	add    BYTE PTR [rax],al
   140036d0f:	add    BYTE PTR [rax],ah
   140036d11:	loopne 0x140036d15
   140036d13:	rex add DWORD PTR [rax],eax
   140036d16:	add    BYTE PTR [rax],al
   140036d18:	test   al,0xe0
   140036d1a:	add    al,BYTE PTR [rax+0x1]
   140036d1d:	add    BYTE PTR [rax],al
   140036d1f:	add    BYTE PTR [rax+0x14002e0],bh
   140036d25:	add    BYTE PTR [rax],al
   140036d27:	add    al,cl
   140036d29:	loopne 0x140036d2d
   140036d2b:	rex add DWORD PTR [rax],eax
   140036d2e:	add    BYTE PTR [rax],al
   140036d30:	fsub   st,st(0)
   140036d32:	add    al,BYTE PTR [rax+0x1]
   140036d35:	add    BYTE PTR [rax],al
   140036d37:	add    al,dh
   140036d39:	loopne 0x140036d3d
   140036d3b:	rex add DWORD PTR [rax],eax
   140036d3e:	add    BYTE PTR [rax],al
   140036d40:	add    cl,ah
   140036d42:	add    al,BYTE PTR [rax+0x1]
   140036d45:	add    BYTE PTR [rax],al
   140036d47:	add    BYTE PTR [rax],bl
   140036d49:	loope  0x140036d4d
   140036d4b:	rex add DWORD PTR [rax],eax
   140036d4e:	add    BYTE PTR [rax],al
   140036d50:	sub    al,0xe1
   140036d52:	add    al,BYTE PTR [rax+0x1]
   140036d55:	add    BYTE PTR [rax],al
   140036d57:	add    BYTE PTR [rcx+riz*8],dh
   140036d5a:	add    al,BYTE PTR [rax+0x1]
   140036d5d:	add    BYTE PTR [rax],al
   140036d5f:	add    BYTE PTR [rax-0x1f],al
   140036d62:	add    al,BYTE PTR [rax+0x1]
   140036d65:	add    BYTE PTR [rax],al
   140036d67:	add    BYTE PTR [rax-0x1f],bl
   140036d6a:	add    al,BYTE PTR [rax+0x1]
   140036d6d:	add    BYTE PTR [rax],al
   140036d6f:	add    BYTE PTR [rax+0x14002e1],al
   140036d75:	add    BYTE PTR [rax],al
   140036d77:	add    BYTE PTR [rax-0x37],ch
   140036d7a:	add    al,BYTE PTR [rax+0x1]
   140036d7d:	add    BYTE PTR [rax],al
   140036d7f:	add    BYTE PTR [rax+0x140036d],dl
	...
   140036d8d:	add    BYTE PTR [rax],al
   140036d8f:	add    BYTE PTR [rcx],al
	...
   140036dc5:	add    BYTE PTR [rax],al
   140036dc7:	add    BYTE PTR [rdx+rbp*2+0x14003],dh
	...
   140036de6:	add    BYTE PTR [rax],al
   140036de8:	mov    ah,0x6a
   140036dea:	add    eax,DWORD PTR [rax+0x1]
	...
   140036e05:	add    BYTE PTR [rax],al
   140036e07:	add    BYTE PTR [rdx+rbp*2+0x14003],dh
	...
   140036e26:	add    BYTE PTR [rax],al
   140036e28:	mov    ah,0x6a
   140036e2a:	add    eax,DWORD PTR [rax+0x1]
	...
   140036e45:	add    BYTE PTR [rax],al
   140036e47:	add    BYTE PTR [rdx+rbp*2+0x14003],dh
	...
   140036e5e:	add    BYTE PTR [rax],al
   140036e60:	add    DWORD PTR [rax],eax
   140036e62:	add    BYTE PTR [rax],al
   140036e64:	add    DWORD PTR [rax],eax
	...
   140036e7e:	add    BYTE PTR [rax],al
   140036e80:	movabs al,ds:0x1400374
	...
   140036e95:	add    BYTE PTR [rax],al
   140036e97:	add    BYTE PTR [rax+0x14002f1],al
   140036e9d:	add    BYTE PTR [rax],al
   140036e9f:	add    BYTE PTR [rax],dl
   140036ea1:	test   BYTE PTR [rdx],0x40
   140036ea4:	add    DWORD PTR [rax],eax
   140036ea6:	add    BYTE PTR [rax],al
   140036ea8:	nop
   140036ea9:	test   DWORD PTR [rdx],0x140
   140036eaf:	add    al,al
   140036eb1:	push   0x3
   140036eb3:	rex add DWORD PTR [rax],eax
	...
   140036ee6:	add    BYTE PTR [rax],al
   140036ee8:	nop
   140036ee9:	ins    DWORD PTR es:[rdi],dx
   140036eea:	add    eax,DWORD PTR [rax+0x1]
   140036eed:	add    BYTE PTR [rax],al
   140036eef:	add    BYTE PTR [rax],dl
   140036ef1:	add    eax,DWORD PTR [eax+0x1]
   140036ef5:	add    BYTE PTR [rax],al
   140036ef7:	add    dh,bh
   140036ef9:	(bad)  
   140036efa:	(bad)  
   140036efb:	inc    DWORD PTR [rax]
   140036efd:	add    BYTE PTR [rax],al
   140036eff:	add    BYTE PTR [rax-0x70],al
   140036f02:	add    eax,DWORD PTR [rax+0x1]
	...
   140036f0d:	add    BYTE PTR [rax],al
   140036f0f:	add    BYTE PTR [rax-0x70],al
   140036f12:	add    eax,DWORD PTR [rax+0x1]
   140036f15:	add    BYTE PTR [rax],al
   140036f17:	add    BYTE PTR [rcx],al
   140036f19:	add    DWORD PTR [rax],eax
	...
   140036f23:	add    BYTE PTR [rax],al
   140036f25:	adc    BYTE PTR [rax],al
	...
   140036f47:	add    BYTE PTR [rdx],al
   140036f49:	add    BYTE PTR [rax],al
   140036f4b:	add    BYTE PTR [rcx],al
	...
   140036f75:	add    BYTE PTR [rax],al
   140036f77:	add    BYTE PTR [rdx],al
   140036f79:	add    BYTE PTR [rax],al
   140036f7b:	add    BYTE PTR [rdx],al
	...
   1400372bd:	add    BYTE PTR [rax],al
   1400372bf:	add    BYTE PTR [rax+rax*1],dl
   1400372c2:	add    BYTE PTR [rax],al
   1400372c4:	add    BYTE PTR [rax],al
   1400372c6:	add    BYTE PTR [rax],al
   1400372c8:	mov    al,0xe1
   1400372ca:	add    al,BYTE PTR [rax+0x1]
   1400372cd:	add    BYTE PTR [rax],al
   1400372cf:	add    BYTE PTR [rip+0x0],bl        # 0x1400372d5
   1400372d5:	add    BYTE PTR [rax],al
   1400372d7:	add    BYTE PTR [rcx+riz*8+0x14002],dh
   1400372de:	add    BYTE PTR [rax],al
   1400372e0:	sbb    al,BYTE PTR [rax]
   1400372e2:	add    BYTE PTR [rax],al
   1400372e4:	add    BYTE PTR [rax],al
   1400372e6:	add    BYTE PTR [rax],al
   1400372e8:	mov    eax,0x14002e1
   1400372ed:	add    BYTE PTR [rax],al
   1400372ef:	add    BYTE PTR [rbx],bl
   1400372f1:	add    BYTE PTR [rax],al
   1400372f3:	add    BYTE PTR [rax],al
   1400372f5:	add    BYTE PTR [rax],al
   1400372f7:	add    BYTE PTR [rcx+riz*8+0x14002],bh
   1400372fe:	add    BYTE PTR [rax],al
   140037300:	(bad)  
   140037301:	add    BYTE PTR [rax],al
   140037303:	add    BYTE PTR [rax],al
   140037305:	add    BYTE PTR [rax],al
   140037307:	add    ah,al
   140037309:	loope  0x14003730d
   14003730b:	rex add DWORD PTR [rax],eax
   14003730e:	add    BYTE PTR [rax],al
   140037310:	adc    eax,DWORD PTR [rax]
   140037312:	add    BYTE PTR [rax],al
   140037314:	add    BYTE PTR [rax],al
   140037316:	add    BYTE PTR [rax],al
   140037318:	int3   
   140037319:	loope  0x14003731d
   14003731b:	rex add DWORD PTR [rax],eax
   14003731e:	add    BYTE PTR [rax],al
   140037320:	and    DWORD PTR [rax],eax
   140037322:	add    BYTE PTR [rax],al
   140037324:	add    BYTE PTR [rax],al
   140037326:	add    BYTE PTR [rax],al
   140037328:	(bad)  
   140037329:	loope  0x14003732d
   14003732b:	rex add DWORD PTR [rax],eax
   14003732e:	add    BYTE PTR [rax],al
   140037330:	(bad)  
   140037331:	add    BYTE PTR [rax],al
   140037333:	add    BYTE PTR [rax],al
   140037335:	add    BYTE PTR [rax],al
   140037337:	add    ah,bl
   140037339:	loope  0x14003733d
   14003733b:	rex add DWORD PTR [rax],eax
   14003733e:	add    BYTE PTR [rax],al
   140037340:	or     eax,0x0
   140037345:	add    BYTE PTR [rax],al
   140037347:	add    ah,ah
   140037349:	loope  0x14003734d
   14003734b:	rex add DWORD PTR [rax],eax
   14003734e:	add    BYTE PTR [rax],al
   140037350:	sldt   WORD PTR [rax]
   140037353:	add    BYTE PTR [rax],al
   140037355:	add    BYTE PTR [rax],al
   140037357:	add    ah,ch
   140037359:	loope  0x14003735d
   14003735b:	rex add DWORD PTR [rax],eax
   14003735e:	add    BYTE PTR [rax],al
   140037360:	adc    BYTE PTR [rax],al
   140037362:	add    BYTE PTR [rax],al
   140037364:	add    BYTE PTR [rax],al
   140037366:	add    BYTE PTR [rax],al
   140037368:	hlt    
   140037369:	loope  0x14003736d
   14003736b:	rex add DWORD PTR [rax],eax
   14003736e:	add    BYTE PTR [rax],al
   140037370:	add    eax,0x0
   140037375:	add    BYTE PTR [rax],al
   140037377:	add    ah,bh
   140037379:	loope  0x14003737d
   14003737b:	rex add DWORD PTR [rax],eax
   14003737e:	add    BYTE PTR [rax],al
   140037380:	(bad)  
   140037381:	add    BYTE PTR [rax],al
   140037383:	add    BYTE PTR [rax],al
   140037385:	add    BYTE PTR [rax],al
   140037387:	add    BYTE PTR [rdx+riz*8],al
   14003738a:	add    al,BYTE PTR [rax+0x1]
   14003738d:	add    BYTE PTR [rax],al
   14003738f:	add    BYTE PTR [rdx],dl
   140037391:	add    BYTE PTR [rax],al
   140037393:	add    BYTE PTR [rax],al
   140037395:	add    BYTE PTR [rax],al
   140037397:	add    BYTE PTR [rax],cl
   140037399:	loop   0x14003739d
   14003739b:	rex add DWORD PTR [rax],eax
   14003739e:	add    BYTE PTR [rax],al
   1400373a0:	and    BYTE PTR [rax],al
   1400373a2:	add    BYTE PTR [rax],al
   1400373a4:	add    BYTE PTR [rax],al
   1400373a6:	add    BYTE PTR [rax],al
   1400373a8:	or     al,0xe2
   1400373aa:	add    al,BYTE PTR [rax+0x1]
   1400373ad:	add    BYTE PTR [rax],al
   1400373af:	add    BYTE PTR [rax+rax*1],cl
   1400373b2:	add    BYTE PTR [rax],al
   1400373b4:	add    BYTE PTR [rax],al
   1400373b6:	add    BYTE PTR [rax],al
   1400373b8:	adc    dl,ah
   1400373ba:	add    al,BYTE PTR [rax+0x1]
   1400373bd:	add    BYTE PTR [rax],al
   1400373bf:	add    BYTE PTR [rbx],cl
   1400373c1:	add    BYTE PTR [rax],al
   1400373c3:	add    BYTE PTR [rax],al
   1400373c5:	add    BYTE PTR [rax],al
   1400373c7:	add    BYTE PTR [rax],bl
   1400373c9:	loop   0x1400373cd
   1400373cb:	rex add DWORD PTR [rax],eax
   1400373ce:	add    BYTE PTR [rax],al
   1400373d0:	adc    eax,0x0
   1400373d5:	add    BYTE PTR [rax],al
   1400373d7:	add    BYTE PTR [rax],ah
   1400373d9:	loop   0x1400373dd
   1400373db:	rex add DWORD PTR [rax],eax
   1400373de:	add    BYTE PTR [rax],al
   1400373e0:	sbb    al,0x0
   1400373e2:	add    BYTE PTR [rax],al
   1400373e4:	add    BYTE PTR [rax],al
   1400373e6:	add    BYTE PTR [rax],al
   1400373e8:	sub    dl,ah
   1400373ea:	add    al,BYTE PTR [rax+0x1]
   1400373ed:	add    BYTE PTR [rax],al
   1400373ef:	add    BYTE PTR [rcx],bl
   1400373f1:	add    BYTE PTR [rax],al
   1400373f3:	add    BYTE PTR [rax],al
   1400373f5:	add    BYTE PTR [rax],al
   1400373f7:	add    BYTE PTR [rax],dh
   1400373f9:	loop   0x1400373fd
   1400373fb:	rex add DWORD PTR [rax],eax
   1400373fe:	add    BYTE PTR [rax],al
   140037400:	adc    DWORD PTR [rax],eax
   140037402:	add    BYTE PTR [rax],al
   140037404:	add    BYTE PTR [rax],al
   140037406:	add    BYTE PTR [rax],al
   140037408:	cmp    dl,ah
   14003740a:	add    al,BYTE PTR [rax+0x1]
   14003740d:	add    BYTE PTR [rax],al
   14003740f:	add    BYTE PTR [rax],bl
   140037411:	add    BYTE PTR [rax],al
   140037413:	add    BYTE PTR [rax],al
   140037415:	add    BYTE PTR [rax],al
   140037417:	add    BYTE PTR [rax-0x68],ch
   14003741a:	add    al,BYTE PTR [rax+0x1]
   14003741d:	add    BYTE PTR [rax],al
   14003741f:	add    BYTE PTR [rsi],dl
   140037421:	add    BYTE PTR [rax],al
   140037423:	add    BYTE PTR [rax],al
   140037425:	add    BYTE PTR [rax],al
   140037427:	add    BYTE PTR [rax-0x1e],al
   14003742a:	add    al,BYTE PTR [rax+0x1]
   14003742d:	add    BYTE PTR [rax],al
   14003742f:	add    BYTE PTR [rdi],dl
   140037431:	add    BYTE PTR [rax],al
   140037433:	add    BYTE PTR [rax],al
   140037435:	add    BYTE PTR [rax],al
   140037437:	add    BYTE PTR [rax-0x1e],cl
   14003743a:	add    al,BYTE PTR [rax+0x1]
   14003743d:	add    BYTE PTR [rax],al
   14003743f:	add    BYTE PTR [rdx],ah
   140037441:	add    BYTE PTR [rax],al
   140037443:	add    BYTE PTR [rax],al
   140037445:	add    BYTE PTR [rax],al
   140037447:	add    BYTE PTR [rax-0x1e],dl
   14003744a:	add    al,BYTE PTR [rax+0x1]
   14003744d:	add    BYTE PTR [rax],al
   14003744f:	add    BYTE PTR [rbx],ah
   140037451:	add    BYTE PTR [rax],al
   140037453:	add    BYTE PTR [rax],al
   140037455:	add    BYTE PTR [rax],al
   140037457:	add    BYTE PTR [rdx+riz*8+0x2],dl
   14003745b:	rex add DWORD PTR [rax],eax
   14003745e:	add    BYTE PTR [rax],al
   140037460:	and    al,0x0
   140037462:	add    BYTE PTR [rax],al
   140037464:	add    BYTE PTR [rax],al
   140037466:	add    BYTE PTR [rax],al
   140037468:	pop    rax
   140037469:	loop   0x14003746d
   14003746b:	rex add DWORD PTR [rax],eax
   14003746e:	add    BYTE PTR [rax],al
   140037470:	and    eax,0x0
   140037475:	add    BYTE PTR [rax],al
   140037477:	add    BYTE PTR [rdx+riz*8+0x2],bl
   14003747b:	rex add DWORD PTR [rax],eax
   14003747e:	add    BYTE PTR [rax],al
   140037480:	add    BYTE PTR es:[rax],al
   140037483:	add    BYTE PTR [rax],al
   140037485:	add    BYTE PTR [rax],al
   140037487:	add    BYTE PTR [rax-0x1e],ch
   14003748a:	add    al,BYTE PTR [rax+0x1]
   14003748d:	add    BYTE PTR [rax],al
   14003748f:	add    BYTE PTR [rsi+riz*1+0x0],dl
	...
   14003749e:	add    BYTE PTR [rax],al
   1400374a0:	cmp    BYTE PTR [rbp+0x3],dh
   1400374a3:	rex add DWORD PTR [rax],eax
   1400374a6:	add    BYTE PTR [rax],al
   1400374a8:	sbb    BYTE PTR [rax+0x14003],dl
   1400374ae:	add    BYTE PTR [rax],al
   1400374b0:	sbb    BYTE PTR [rax+0x14003],dl
   1400374b6:	add    BYTE PTR [rax],al
   1400374b8:	sbb    BYTE PTR [rax+0x14003],dl
   1400374be:	add    BYTE PTR [rax],al
   1400374c0:	sbb    BYTE PTR [rax+0x14003],dl
   1400374c6:	add    BYTE PTR [rax],al
   1400374c8:	sbb    BYTE PTR [rax+0x14003],dl
   1400374ce:	add    BYTE PTR [rax],al
   1400374d0:	sbb    BYTE PTR [rax+0x14003],dl
   1400374d6:	add    BYTE PTR [rax],al
   1400374d8:	sbb    BYTE PTR [rax+0x14003],dl
   1400374de:	add    BYTE PTR [rax],al
   1400374e0:	sbb    BYTE PTR [rax+0x14003],dl
   1400374e6:	add    BYTE PTR [rax],al
   1400374e8:	sbb    BYTE PTR [rax+0x14003],dl
   1400374ee:	add    BYTE PTR [rax],al
   1400374f0:	jg     0x140037571
   1400374f2:	jg     0x140037573
   1400374f4:	jg     0x140037575
   1400374f6:	jg     0x140037577
   1400374f8:	cmp    al,0x75
   1400374fa:	add    eax,DWORD PTR [rax+0x1]
   1400374fd:	add    BYTE PTR [rax],al
   1400374ff:	add    BYTE PTR [rax+rdx*4],bl
   140037502:	add    eax,DWORD PTR [rax+0x1]
   140037505:	add    BYTE PTR [rax],al
   140037507:	add    BYTE PTR [rax+rdx*4],bl
   14003750a:	add    eax,DWORD PTR [rax+0x1]
   14003750d:	add    BYTE PTR [rax],al
   14003750f:	add    BYTE PTR [rax+rdx*4],bl
   140037512:	add    eax,DWORD PTR [rax+0x1]
   140037515:	add    BYTE PTR [rax],al
   140037517:	add    BYTE PTR [rax+rdx*4],bl
   14003751a:	add    eax,DWORD PTR [rax+0x1]
   14003751d:	add    BYTE PTR [rax],al
   14003751f:	add    BYTE PTR [rax+rdx*4],bl
   140037522:	add    eax,DWORD PTR [rax+0x1]
   140037525:	add    BYTE PTR [rax],al
   140037527:	add    BYTE PTR [rax+rdx*4],bl
   14003752a:	add    eax,DWORD PTR [rax+0x1]
   14003752d:	add    BYTE PTR [rax],al
   14003752f:	add    BYTE PTR [rax+rdx*4],bl
   140037532:	add    eax,DWORD PTR [rax+0x1]
   140037535:	add    BYTE PTR [rax],al
   140037537:	add    BYTE PTR [rsi],ch
   140037539:	add    BYTE PTR [rax],al
   14003753b:	add    BYTE PTR [rsi],ch
   14003753d:	add    BYTE PTR [rax],al
   14003753f:	add    BYTE PTR [rax+0x1400374],ah
   140037545:	add    BYTE PTR [rax],al
   140037547:	add    BYTE PTR [rax+0x14002f1],al
   14003754d:	add    BYTE PTR [rax],al
   14003754f:	add    BYTE PTR [rdx+0x14002f3],al
	...
   14003755d:	add    al,dh
   14003755f:	jg     0x140037561
   140037561:	add    BYTE PTR [rax],al
   140037563:	add    BYTE PTR [rax],al
   140037565:	add    al,bh
   140037567:	(bad)  
   140037568:	(bad)  
   140037569:	(bad)  
   14003756a:	(bad)  
   14003756b:	(bad)  
   14003756c:	(bad)  
   14003756d:	(bad)  
   14003756e:	out    dx,eax
   14003756f:	jg     0x140037571
   140037571:	add    BYTE PTR [rax],al
   140037573:	add    BYTE PTR [rax],al
   140037575:	add    BYTE PTR [rax],dl
	...
   14003757f:	add    BYTE PTR [rbx+rsi*8+0x14002],0x0
   140037587:	add    BYTE PTR [rax],al
   140037589:	add    al,0x0
   14003758b:	add    BYTE PTR [rcx],al
   14003758d:	cld    
   14003758e:	(bad)  
   14003758f:	push   QWORD PTR [rip+0xb000000]        # 0x14b037595
   140037595:	add    BYTE PTR [rax],al
   140037597:	add    BYTE PTR [rax+0x0],al
   14003759a:	add    BYTE PTR [rax],al
   14003759c:	inc    DWORD PTR [rbx]
   14003759e:	add    BYTE PTR [rax],al
   1400375a0:	add    BYTE PTR [rax],0x0
   1400375a3:	add    BYTE PTR [rcx+0x18ffffff],al
   1400375a9:	add    BYTE PTR [rax],al
   1400375ab:	add    BYTE PTR [rax],cl
   1400375ad:	add    BYTE PTR [rax],al
   1400375af:	add    BYTE PTR [rax],ah
   1400375b1:	add    BYTE PTR [rax],al
   1400375b3:	add    BYTE PTR [rdi+0x0],bh
	...
   1400375c6:	add    BYTE PTR [rax],al
   1400375c8:	add    BYTE PTR [rax+0x4002],ah
   1400375ce:	add    BYTE PTR [rax],al
   1400375d0:	add    BYTE PTR [rax],al
   1400375d2:	add    BYTE PTR [rax],al
   1400375d4:	add    al,cl
   1400375d6:	add    eax,0x40
   1400375db:	add    BYTE PTR [rax],al
   1400375dd:	add    BYTE PTR [rax],al
   1400375df:	add    BYTE PTR [rax],al
   1400375e1:	cli    
   1400375e2:	or     BYTE PTR [rax+0x0],al
   1400375e5:	add    BYTE PTR [rax],al
   1400375e7:	add    BYTE PTR [rax],al
   1400375e9:	add    BYTE PTR [rax],al
   1400375eb:	add    BYTE PTR [rax-0x64],al
   1400375ee:	or     al,0x40
	...
   1400375f8:	push   rax
   1400375f9:	ret    
   1400375fa:	cmovo  eax,DWORD PTR [rax]
   1400375fd:	add    BYTE PTR [rax],al
   1400375ff:	add    BYTE PTR [rax],al
   140037601:	add    BYTE PTR [rax],al
   140037603:	add    BYTE PTR [rsp+rsi*8],ah
   140037606:	adc    al,BYTE PTR [rax+0x0]
   140037609:	add    BYTE PTR [rax],al
   14003760b:	add    BYTE PTR [rax],al
   14003760d:	add    BYTE PTR [rax],al
   14003760f:	adc    BYTE PTR [rsi+0x401698],0x0
   140037616:	add    BYTE PTR [rax],al
   140037618:	add    BYTE PTR [rax],al
   14003761a:	add    BYTE PTR [rax],ah
   14003761c:	mov    esp,0x4019be
   140037621:	add    BYTE PTR [rax],al
   140037623:	add    BYTE PTR [rax],al
   140037625:	add    al,0xbf
   140037627:	leave  
   140037628:	sbb    ecx,DWORD PTR [rsi+0x4034]
   14003762e:	add    BYTE PTR [rcx+0x1bcecced],ah
   140037634:	ret    0x4ed3
   140037637:	and    al,sil
   14003763a:	sahf   
   14003763b:	mov    ch,0x70
   14003763d:	sub    ebp,DWORD PTR [rax+0x699dc5ad]
   140037643:	rex rcr BYTE PTR [rbp-0x3],1
   140037647:	and    eax,0x4f8e1ae5
   14003764c:	sbb    ebx,ebp
   14003764e:	add    DWORD PTR [rax+0x71],0xffffff96
   140037652:	xlat   BYTE PTR ds:[rbx]
   140037653:	xchg   ebp,eax
   140037654:	rex.XB (bad) 
   140037656:	add    eax,0x9eaf298d
   14003765b:	rex stc 
   14003765d:	mov    edi,0x81ed44a0
   140037662:	adc    cl,BYTE PTR [rdi+0x40b98281]
   140037668:	mov    edi,0xcfa6d53c
   14003766d:	dec    DWORD PTR [rcx+0x1f]
   140037670:	js     0x140037634
   140037672:	rol    DWORD PTR [rax+0x6f],cl
   140037675:	(bad)  
   140037676:	loopne 0x140037604
   140037678:	jmp    0xfa4b3ffd
   14003767d:	xchg   ebx,eax
   14003767e:	test   al,0x41
   140037680:	mov    esp,0x27556b85
   140037685:	cmp    DWORD PTR [rbp+0x7ce070f7],ecx
   14003768b:	rex.X mov esp,0xf9de8edd
   140037691:	popf   
   140037692:	sti    
   140037693:	jmp    0x140037713
   140037695:	stos   BYTE PTR es:[rdi],al
   140037696:	push   rcx
   140037697:	rex.XB movabs eax,ds:0x842f29f2cce376e6
   1400376a1:	and    DWORD PTR [rsi],0x17102844
   1400376a7:	stos   BYTE PTR es:[rdi],al
   1400376a8:	clc    
   1400376a9:	scas   al,BYTE PTR es:[rdi]
   1400376aa:	adc    bl,ah
   1400376ac:	(bad)
   1400376af:	rex.R jmp 0x140037659
   1400376b2:	(bad)  
   1400376b3:	repz imul ebx
   1400376b6:	loope  0x140037702
   1400376b8:	jp     0x14003764f
   1400376ba:	iret   
   1400376bb:	rex.RB
   1400376bc:	gs int3 
   1400376be:	(bad)  
   1400376bf:	xchg   ecx,eax
   1400376c0:	(bad)  
   1400376c1:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400376c2:	scas   al,BYTE PTR es:[rdi]
   1400376c3:	movabs al,ds:0xc17650d46a3e319
   1400376cc:	jne    0x14003764f
   1400376ce:	xchg   BYTE PTR [rbp+0x76],dh
   1400376d1:	leave  
   1400376d2:	rex.W
   1400376d3:	rex.WRB pop r8
   1400376d5:	rex.X in al,0xa7
   1400376d8:	xchg   ebx,eax
   1400376d9:	cmp    DWORD PTR [rbx],edi
   1400376db:	xor    eax,0x53edb2b8
   1400376e0:	rex.WRB cmps QWORD PTR ds:[rsi],QWORD PTR es:[rdi]
   1400376e2:	in     eax,0x5d
   1400376e4:	cmp    eax,0x8b3b5dc5
   1400376e9:	sahf   
   1400376ea:	xchg   edx,eax
   1400376eb:	pop    rdx
   1400376ec:	call   FWORD PTR [rbp-0x5a]
   1400376ef:	lock movabs eax,ds:0xd161378ca554c020
   1400376f9:	std    
   1400376fa:	mov    ebx,DWORD PTR [rdx-0x75]
   1400376fd:	fsub   DWORD PTR [rip+0xffffffffdbf9895d]        # 0x11bfd0060
   140037703:	stos   BYTE PTR es:[edi],al
   140037705:	xchg   ebp,eax
   140037706:	clc    
   140037707:	repz (bad) 
   140037709:	mov    edi,0xdd5dc8a2
   14003770e:	sub    BYTE PTR [rsi+0x4c],0xc9
   140037712:	fwait
   140037713:	xchg   edi,eax
   140037714:	and    BYTE PTR [rdx-0x3b9fadfe],cl
   14003771a:	and    eax,0x75
   14003771f:	add    ch,cl
   140037721:	int3   
   140037722:	int    0xcc
   140037724:	int3   
   140037725:	int3   
   140037726:	int3   
   140037727:	int3   
   140037728:	int3   
   140037729:	int3   
   14003772a:	sti    
   14003772b:	(bad)  
   14003772c:	jno    0x14003776b
   14003772e:	or     dl,bh
   140037730:	movabs ds:0x5a3ff8a3d70a3d70,eax
   140037739:	fs cmp ebx,edi
   14003773c:	rex.WRXB lea r10,[r15-0xa7ced92]
   140037743:	(bad)  
   140037744:	ret    
   140037745:	shr    DWORD PTR [riz*2+0x1758e219],cl
   14003774c:	mov    bh,0xd1
   14003774e:	icebp  
   14003774f:	(bad)  
   140037750:	ror    BYTE PTR [rdi],1
   140037752:	and    eax,DWORD PTR [rdi+rax*2-0x3a53b8e5]
   140037759:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14003775a:	out    dx,al
   14003775b:	(bad)  
   14003775c:	rex cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14003775e:	mov    dh,0x69
   140037760:	ins    BYTE PTR es:[rdi],dx
   140037761:	scas   eax,DWORD PTR es:[rdi]
   140037762:	add    eax,0xeb8637bd
   140037767:	(bad)  
   140037768:	xor    edi,DWORD PTR [rip+0xffffffffe57a42bc]        # 0x1257dba2a
   14003776e:	(bad)  
   14003776f:	xchg   esp,eax
   140037770:	mov    edi,0xc23fe7d6
   140037775:	std    
   140037776:	std    
   140037777:	(bad)  
   140037778:	(bad)  
   140037779:	test   BYTE PTR [rcx],dl
   14003777b:	ja     0x140037749
   14003777d:	stos   DWORD PTR es:[rdi],eax
   14003777e:	in     al,0x3f
   140037780:	(bad)  
   140037781:	rex.WR pop rbx
   140037783:	loope  0x1400377d2
   140037785:	(bad)  
   140037786:	mov    esi,0xc9e69594
   14003778b:	(bad)  
   14003778c:	xchg   edx,eax
   14003778d:	(bad)  
   14003778e:	push   rbx
   14003778f:	cmp    esi,DWORD PTR [rbp+0x44]
   140037792:	int    0x14
   140037794:	mov    esi,0xde3faf9a
   140037799:	addr32 mov edx,0xad453994
   14003779f:	(bad)  
   1400377a0:	mov    cl,0xcf
   1400377a2:	xchg   esp,eax
   1400377a3:	(bad)  
   1400377a4:	and    al,0x23
   1400377a6:	(bad)  
   1400377a7:	loop   0x140037765
   1400377a9:	mov    edx,0x8b61313b
   1400377ae:	jp     0x1400377ef
   1400377b0:	(bad)  
   1400377b1:	push   rbp
   1400377b2:	pop    rcx
   1400377b3:	sar    DWORD PTR [rsi-0x4f],0x53
   1400377b7:	jl     0x1400377cb
   1400377b9:	mov    ebx,0xeed73f5f
   1400377be:	(bad)  
   1400377bf:	lea    eax,[rsi]
   1400377c1:	mov    esi,0xfb158592
   1400377c6:	rex.R (bad) 
   1400377c8:	and    al,0x3f
   1400377ca:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400377cb:	jmp    0x12a2b1d09
   1400377d0:	jg     0x14003777a
   1400377d2:	sub    bh,BYTE PTR [rdi]
   1400377d4:	jge    0x140037782
   1400377d6:	movabs eax,ds:0x55ddd0467c64bce4
   1400377df:	movsxd edi,DWORD PTR ds:[rbx+0x6]
   1400377e3:	int3   
   1400377e4:	and    edx,DWORD PTR [rdi+rsi*2-0x7d]
   1400377e8:	call   QWORD PTR [rcx-0x56ec27f]
   1400377ee:	cmp    bl,BYTE PTR [rcx]
   1400377f0:	jp     0x140037855
   1400377f2:	and    eax,0xacc03143
   1400377f7:	cmp    al,0x21
   1400377f9:	mov    ecx,edx
   1400377fb:	cmp    BYTE PTR [rdx+0xb89747],al
   140037801:	std    
   140037802:	xlat   BYTE PTR ds:[rbx]
   140037803:	cmp    ebx,esp
   140037805:	mov    BYTE PTR [rax+0x8],bl
   140037808:	sbb    esi,DWORD PTR [rcx-0x59791c18]
   14003780e:	add    edi,DWORD PTR [rbx]
   140037810:	mov    BYTE PTR [rbp+rax*2-0x6649f8be],0x75
   140037818:	(bad)  
   140037819:	fld    TBYTE PTR [rsi]
   14003781b:	cmp    dh,BYTE PTR [rbx]
   14003781d:	jno    0x14003783b
   14003781f:	shl    BYTE PTR [rbx],cl
   140037821:	(bad)  [rdx]
   140037823:	out    dx,al
   140037824:	xchg   r8,rax
   140037826:	pop    rdx
   140037827:	cmp    DWORD PTR [rsi+0x57c0be87],esp
   14003782d:	fisub  DWORD PTR [rbp-0x4a5d597e]
   140037833:	xor    ah,dl
   140037835:	push   0x52a711b2
   14003783a:	lahf   
   14003783b:	rex.R pop rcx
   14003783d:	mov    bh,0x10
   14003783f:	sub    al,0x25
   140037841:	rex.WB in al,0x2d
   140037844:	ss xor al,0x4f
   140037847:	push   rbx
   140037848:	scas   al,BYTE PTR es:[rdi]
   140037849:	(bad)  
   14003784a:	imul   esp,DWORD PTR [rip+0xffffffffa404598f],0xffffffc0        # 0xe407d1e0
   140037851:	faddp  st(2),st
   140037853:	jge    0x140037850
   140037855:	call   0x127a19720
   14003785a:	mov    BYTE PTR [rdx+0x57],bl
   14003785d:	xchg   ecx,eax
   14003785e:	cmp    al,0xbf
   140037860:	push   rax
   140037861:	and    DWORD PTR [rdx],0x18
   140037864:	rex.WRX
   140037865:	rex.WXB
   140037866:	gs (bad) 
   140037868:	std    
   140037869:	or     DWORD PTR [rdi+0x7d9406af],0x11
   140037870:	in     al,0x2d
   140037872:	ficomp WORD PTR [rdi+0x4c8d2ce]
   140037878:	frstor [rsi+0xad8]
   14003787e:	add    BYTE PTR [rax],al
   140037880:	(bad)  
   140037881:	(bad)  
   140037882:	(bad)  
   140037883:	(bad)  
   140037884:	(bad)  
   140037885:	(bad)  
   140037886:	(bad)  
   140037887:	inc    DWORD PTR [rax]
	...
   140037895:	add    al,dh
   140037897:	jg     0x140037819
   140037899:	cdq    
   14003789a:	add    al,BYTE PTR [rax+0x1]
	...
   1400378a5:	add    BYTE PTR [rax],al
   1400378a7:	add    BYTE PTR [rsi],ch
   1400378a9:	(bad)  
   1400378aa:	push   r14
   1400378ac:	gs jb  0x140037921
   1400378af:	outs   dx,DWORD PTR ds:[rsi]
   1400378b0:	jb     0x140037911
   1400378b2:	movsxd esp,DWORD PTR [rcx+0x74]
   1400378b5:	outs   dx,DWORD PTR gs:[esi]
   1400378b8:	jb     0x140037933
   1400378ba:	rex jae 0x140037931
   1400378bd:	fs rex
   1400378bf:	add    BYTE PTR [rax],al
   1400378c2:	add    BYTE PTR [rax],al
   1400378c4:	add    BYTE PTR [rax],al
   1400378c6:	add    BYTE PTR [rax],al
   1400378c8:	sbb    BYTE PTR [rcx+0x14002],0x0
	...
   1400378d7:	add    BYTE PTR [rsi],ch
   1400378d9:	(bad)  
   1400378da:	push   r14
   1400378dc:	pop    rdi
   1400378dd:	rex.RXB
   1400378de:	outs   dx,BYTE PTR gs:[rsi]
   1400378e0:	gs jb  0x14003794c
   1400378e3:	movsxd ebx,DWORD PTR [rdi+0x65]
   1400378e6:	jb     0x14003795a
   1400378e8:	outs   dx,DWORD PTR ds:[rsi]
   1400378e9:	jb     0x14003794a
   1400378eb:	movsxd esp,DWORD PTR [rcx+0x74]
   1400378ee:	outs   dx,DWORD PTR gs:[esi]
   1400378f1:	jb     0x14003796c
   1400378f3:	rex jae 0x14003796a
   1400378f6:	fs rex
   1400378f8:	add    BYTE PTR [rax],al
   1400378fb:	add    BYTE PTR [rax],al
   1400378fd:	add    BYTE PTR [rax],al
   1400378ff:	add    BYTE PTR [rax+0x1400299],al
	...
   14003790d:	add    BYTE PTR [rax],al
   14003790f:	add    BYTE PTR [rsi],ch
   140037911:	(bad)  
   140037912:	push   r14
   140037914:	pop    rdi
   140037915:	rex.WB outs dx,DWORD PTR ds:[rsi]
   140037917:	jae    0x14003798d
   140037919:	jb     0x140037980
   14003791b:	(bad)  
   14003791c:	ins    DWORD PTR es:[rdi],dx
   14003791d:	pop    rdi
   14003791e:	gs jb  0x140037993
   140037921:	outs   dx,DWORD PTR ds:[rsi]
   140037922:	jb     0x140037983
   140037924:	movsxd esp,DWORD PTR [rcx+0x74]
   140037927:	outs   dx,DWORD PTR gs:[esi]
   14003792a:	jb     0x1400379a5
   14003792c:	rex jae 0x1400379a3
   14003792f:	fs rex
   140037931:	add    BYTE PTR [rax],al
   140037934:	add    BYTE PTR [rax],al
   140037936:	add    BYTE PTR [rax],al
   140037938:	sbb    BYTE PTR [rcx+0x14002],0x0
	...
   140037947:	add    BYTE PTR [rsi],ch
   140037949:	(bad)  
   14003794a:	push   r14
   14003794c:	pop    rdi
   14003794d:	push   rbx
   14003794e:	jns    0x1400379c3
   140037950:	je     0x1400379b7
   140037952:	ins    DWORD PTR es:[rdi],dx
   140037953:	pop    rdi
   140037954:	gs jb  0x1400379c9
   140037957:	outs   dx,DWORD PTR ds:[rsi]
   140037958:	jb     0x1400379b9
   14003795a:	movsxd esp,DWORD PTR [rcx+0x74]
   14003795d:	outs   dx,DWORD PTR gs:[esi]
   140037960:	jb     0x1400379db
   140037962:	rex jae 0x1400379d9
   140037965:	fs rex
   140037967:	add    BYTE PTR [rax],al
   14003796a:	add    BYTE PTR [rax],al
   14003796c:	add    BYTE PTR [rax],al
   14003796e:	add    BYTE PTR [rax],al
   140037970:	sbb    BYTE PTR [rcx+0x14002],0x0
	...
   14003797f:	add    BYTE PTR [rsi],ch
   140037981:	(bad)  
   140037982:	push   r14
   140037984:	(bad)
   140037989:	ins    BYTE PTR es:[rdi],dx
   14003798a:	ins    BYTE PTR es:[rdi],dx
   14003798b:	outs   dx,DWORD PTR ds:[rsi]
   14003798c:	movsxd eax,DWORD PTR [rax+0x73]
   14003798f:	je     0x1400379f5
   140037991:	rex
   140037992:	add    BYTE PTR [rax],al
   140037995:	add    BYTE PTR [rax],al
   140037997:	add    BYTE PTR [rax+0x1400299],al
	...
   1400379a5:	add    BYTE PTR [rax],al
   1400379a7:	add    BYTE PTR [rsi],ch
   1400379a9:	(bad)  
   1400379aa:	push   r14
   1400379ac:	gs js  0x140037a12
   1400379af:	gs jo  0x140037a26
   1400379b2:	imul   ebp,DWORD PTR [rdi+0x6e],0x64747340
   1400379b9:	rex
   1400379ba:	add    BYTE PTR [rax],al
   1400379bd:	add    BYTE PTR [rax],al
   1400379bf:	add    BYTE PTR [rax+0x1400299],al
	...
   1400379cd:	add    BYTE PTR [rax],al
   1400379cf:	add    BYTE PTR [rsi],ch
   1400379d1:	(bad)  
   1400379d2:	push   r14
   1400379d4:	imul   ebp,DWORD PTR [rsi+0x76],0x64696c61
   1400379db:	pop    rdi
   1400379dc:	(bad)  
   1400379dd:	jb     0x140037a46
   1400379df:	jne    0x140037a4e
   1400379e1:	outs   dx,BYTE PTR gs:[rsi]
   1400379e3:	je     0x140037a25
   1400379e5:	jae    0x140037a5b
   1400379e7:	fs rex
   1400379e9:	add    BYTE PTR [rax],al
   1400379ec:	add    BYTE PTR [rax],al
   1400379ee:	add    BYTE PTR [rax],al
   1400379f0:	sbb    BYTE PTR [rcx+0x14002],0x0
	...
   1400379ff:	add    BYTE PTR [rsi],ch
   140037a01:	(bad)  
   140037a02:	push   r14
   140037a04:	ins    BYTE PTR es:[rdi],dx
   140037a05:	outs   dx,DWORD PTR ds:[rsi]
   140037a06:	imul   esp,DWORD PTR [ebx+0x5f],0x6f727265
   140037a0e:	jb     0x140037a50
   140037a10:	jae    0x140037a86
   140037a12:	fs rex
   140037a14:	add    BYTE PTR [rax],al
   140037a17:	add    BYTE PTR [rax+0x1400299],al
	...
   140037a25:	add    BYTE PTR [rax],al
   140037a27:	add    BYTE PTR [rsi],ch
   140037a29:	(bad)  
   140037a2a:	push   r14
   140037a2c:	ins    BYTE PTR es:[rdi],dx
   140037a2d:	outs   dx,BYTE PTR gs:[rsi]
   140037a2f:	addr32 je 0x140037a9a
   140037a32:	pop    rdi
   140037a33:	gs jb  0x140037aa8
   140037a36:	outs   dx,DWORD PTR ds:[rsi]
   140037a37:	jb     0x140037a79
   140037a39:	jae    0x140037aaf
   140037a3b:	fs rex
   140037a3d:	add    BYTE PTR [rax],al
   140037a40:	sbb    BYTE PTR [rcx+0x14002],0x0
	...
   140037a4f:	add    BYTE PTR [rsi],ch
   140037a51:	(bad)  
   140037a52:	push   r14
   140037a54:	outs   dx,DWORD PTR ds:[rsi]
   140037a55:	jne    0x140037acb
   140037a57:	pop    rdi
   140037a58:	outs   dx,DWORD PTR ds:[rsi]
   140037a59:	pop    di
   140037a5b:	jb     0x140037abe
   140037a5d:	outs   dx,BYTE PTR ds:[rsi]
   140037a5e:	addr32 gs rex jae 0x140037ad7
   140037a63:	fs rex
   140037a65:	add    BYTE PTR [rax],al
   140037a68:	sbb    BYTE PTR [rcx+0x14002],0x0
	...
   140037a77:	add    BYTE PTR [rsi],ch
   140037a79:	(bad)  
   140037a7a:	push   r14
   140037a7c:	outs   dx,DWORD PTR ds:[rsi]
   140037a7d:	jbe    0x140037ae4
   140037a7f:	jb     0x140037ae7
   140037a81:	ins    BYTE PTR es:[rdi],dx
   140037a82:	outs   dx,DWORD PTR ds:[rsi]
   140037a83:	ja     0x140037ae4
   140037a85:	gs jb  0x140037afa
   140037a88:	outs   dx,DWORD PTR ds:[rsi]
   140037a89:	jb     0x140037acb
   140037a8b:	jae    0x140037b01
   140037a8d:	fs rex
   140037a8f:	add    BYTE PTR [rax],al
   140037a92:	add    BYTE PTR [rax],al
   140037a94:	add    BYTE PTR [rax],al
   140037a96:	add    BYTE PTR [rax],al
   140037a98:	sbb    BYTE PTR [rcx+0x14002],0x0
	...
   140037aa7:	add    BYTE PTR [rsi],ch
   140037aa9:	(bad)  
   140037aaa:	push   r14
   140037aac:	jb     0x140037b23
   140037aae:	outs   dx,BYTE PTR ds:[rsi]
   140037aaf:	je     0x140037b1a
   140037ab1:	ins    DWORD PTR es:[rdi],dx
   140037ab2:	gs pop rdi
   140037ab4:	gs jb  0x140037b29
   140037ab7:	outs   dx,DWORD PTR ds:[rsi]
   140037ab8:	jb     0x140037afa
   140037aba:	jae    0x140037b30
   140037abc:	fs rex
   140037abe:	add    BYTE PTR [rax+0x1400299],al
	...
   140037acd:	add    BYTE PTR [rax],al
   140037acf:	add    BYTE PTR [rsi],ch
   140037ad1:	(bad)  
   140037ad2:	push   r14
   140037ad4:	(bad)
   140037ad9:	jne    0x140037b49
   140037adb:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   140037adf:	outs   dx,BYTE PTR ds:[rsi]
   140037ae0:	pop    rdi
   140037ae1:	movsxd esp,DWORD PTR [rcx+0x6c]
   140037ae4:	ins    BYTE PTR es:[rdi],dx
   140037ae5:	rex jae 0x140037b5c
   140037ae8:	fs rex
   140037aea:	add    BYTE PTR [rax],al
   140037aed:	add    BYTE PTR [rax],al
   140037aef:	add    BYTE PTR [rax+0x1400299],al
	...
   140037afd:	add    BYTE PTR [rax],al
   140037aff:	add    BYTE PTR [rsi],ch
   140037b01:	(bad)  
   140037b02:	push   r14
   140037b04:	jb     0x140037b6b
   140037b06:	addr32 gs js 0x140037b69
   140037b0a:	gs jb  0x140037b7f
   140037b0d:	outs   dx,DWORD PTR ds:[rsi]
   140037b0e:	jb     0x140037b50
   140037b10:	jae    0x140037b86
   140037b12:	fs rex
   140037b14:	add    BYTE PTR [rax],al
   140037b17:	add    BYTE PTR [rax+0x1400299],al
	...
   140037b25:	add    BYTE PTR [rax],al
   140037b27:	add    BYTE PTR [rsi],ch
   140037b29:	(bad)  
   140037b2a:	push   r14
   140037b2c:	je     0x140037ba7
   140037b2e:	jo     0x140037b95
   140037b30:	pop    rdi
   140037b31:	imul   ebp,DWORD PTR [rsi+0x66],0x40406f
   140037b38:	sbb    BYTE PTR [rcx+0x14002],0x0
	...
   140037b47:	add    BYTE PTR [rsi],ch
   140037b49:	(bad)  
   140037b4a:	push   r14
   140037b4c:	(bad)
   140037b51:	(bad)  
   140037b52:	jae    0x140037bc8
   140037b54:	rex jae 0x140037bcb
   140037b57:	fs rex
   140037b59:	add    BYTE PTR [rax],al
   140037b5c:	add    BYTE PTR [rax],al
   140037b5e:	add    BYTE PTR [rax],al
   140037b60:	sbb    BYTE PTR [rcx+0x14002],0x0
	...
   140037b6f:	add    BYTE PTR [rsi],ch
   140037b71:	(bad)  
   140037b72:	push   r14
   140037b74:	(bad)
   140037b79:	jns    0x140037beb
   140037b7b:	imul   esp,DWORD PTR gs:[rax+rax*2+0x73],0x40406474
   140037b84:	add    BYTE PTR [rax],al
   140037b86:	add    BYTE PTR [rax],al
   140037b88:	sbb    BYTE PTR [rcx+0x14002],0x0
	...
   140037b97:	add    BYTE PTR [rsi],ch
   140037b99:	(bad)  
   140037b9a:	push   r14
   140037b9c:	pop    rdi
   140037b9d:	pop    rdi
   140037b9e:	outs   dx,BYTE PTR ds:[rsi]
   140037b9f:	outs   dx,DWORD PTR ds:[rsi]
   140037ba0:	outs   dx,BYTE PTR ds:[rsi]
   140037ba1:	pop    rdi
   140037ba2:	jb     0x140037c18
   140037ba4:	je     0x140037c0f
   140037ba6:	pop    rdi
   140037ba7:	outs   dx,DWORD PTR ds:[rsi]
   140037ba8:	(bad)  
   140037ba9:	push   0x65
   140037bab:	movsxd esi,DWORD PTR [rax+rax*2+0x73]
   140037baf:	je     0x140037c15
   140037bb1:	rex
   140037bb2:	add    BYTE PTR [rax],al
   140037bb5:	add    BYTE PTR [rax],al
   140037bb7:	add    BYTE PTR [rax+0x1400299],al
	...
   140037bc5:	add    BYTE PTR [rax],al
   140037bc7:	add    BYTE PTR [rsi],ch
   140037bc9:	(bad)  
   140037bca:	push   r14
   140037bcc:	(bad)
   140037bd1:	js     0x140037c36
   140037bd3:	gs jo  0x140037c4a
   140037bd6:	imul   ebp,DWORD PTR [rdi+0x6e],0x64747340
   140037bdd:	rex
   140037bde:	add    BYTE PTR [rax+0x1400299],al
	...
   140037bed:	add    BYTE PTR [rax],al
   140037bef:	add    BYTE PTR [rsi],ch
   140037bf1:	(bad)  
   140037bf2:	push   r14
   140037bf4:	rex.R
   140037bf5:	rex.WRX (bad) 
   140037bf7:	ins    DWORD PTR es:[rdi],dx
   140037bf8:	rex.WRX outs dx,DWORD PTR gs:[rsi]
   140037bfb:	fs gs rex
   140037bfe:	add    BYTE PTR [rax+0x1400299],al
	...
   140037c0d:	add    BYTE PTR [rax],al
   140037c0f:	add    BYTE PTR [rsi],ch
   140037c11:	(bad)  
   140037c12:	push   r14
   140037c14:	movsxd ebp,DWORD PTR [rax+0x61]
   140037c17:	jb     0x140037c67
   140037c19:	outs   dx,DWORD PTR ds:[rsi]
   140037c1a:	fs gs rex
   140037c1d:	add    BYTE PTR [rax],al
   140037c20:	sbb    BYTE PTR [rcx+0x14002],0x0
	...
   140037c2f:	add    BYTE PTR [rsi],ch
   140037c31:	(bad)  
   140037c32:	push   r14
   140037c34:	jo     0x140037c99
   140037c36:	push   0x6f4e7261
   140037c3b:	fs gs rex
   140037c3e:	add    BYTE PTR [rax+0x1400299],al
	...
   140037c4d:	add    BYTE PTR [rax],al
   140037c4f:	add    BYTE PTR [rsi],ch
   140037c51:	(bad)  
   140037c52:	push   r14
   140037c54:	jo     0x140037c9a
   140037c56:	rex.WRX (bad) 
   140037c58:	ins    DWORD PTR es:[rdi],dx
   140037c59:	rex.WRX outs dx,DWORD PTR gs:[rsi]
   140037c5c:	fs gs rex
   140037c5f:	add    BYTE PTR [rax],al
   140037c62:	add    BYTE PTR [rax],al
   140037c64:	add    BYTE PTR [rax],al
   140037c66:	add    BYTE PTR [rax],al
   140037c68:	sbb    BYTE PTR [rcx+0x14002],0x0
	...
   140037c77:	add    BYTE PTR [rsi],ch
   140037c79:	(bad)  
   140037c7a:	push   r14
   140037c7c:	rex.R
   140037c7d:	rex.WRX (bad) 
   140037c7f:	ins    DWORD PTR es:[rdi],dx
   140037c80:	gs push rbx
   140037c82:	je     0x140037ce5
   140037c84:	je     0x140037cfb
   140037c86:	jae    0x140037cd6
   140037c88:	outs   dx,DWORD PTR ds:[rsi]
   140037c89:	fs gs rex
   140037c8c:	add    BYTE PTR [rax],al
   140037c8f:	add    BYTE PTR [rax+0x1400299],al
	...
   140037c9d:	add    BYTE PTR [rax],al
   140037c9f:	add    BYTE PTR [rsi],ch
   140037ca1:	(bad)  
   140037ca2:	push   r14
   140037ca4:	jo     0x140037d07
   140037ca6:	imul   esi,DWORD PTR [rdx+0x4e],0x4065646f
   140037cad:	add    BYTE PTR [rax],al
	...

Disassembly of section .pdata:

000000014003b000 <.pdata>:
   14003b000:	push   rax
   14003b001:	adc    BYTE PTR [rax],al
   14003b003:	add    BYTE PTR [rbp+0x10],bh
   14003b006:	add    BYTE PTR [rax],al
   14003b008:	or     al,0x20
   14003b00a:	add    eax,DWORD PTR [rax]
   14003b00c:	lock adc BYTE PTR [rax],al
   14003b00f:	add    BYTE PTR [rsi],bl
   14003b011:	adc    DWORD PTR [rax],eax
   14003b013:	add    BYTE PTR [rax+riz*1+0x11500003],bh
   14003b01a:	add    BYTE PTR [rax],al
   14003b01c:	mov    ebp,0x7c000011
   14003b021:	and    DWORD PTR [rbx],eax
   14003b023:	add    al,al
   14003b025:	adc    DWORD PTR [rax],eax
   14003b027:	add    BYTE PTR [rbx],ah
   14003b029:	adc    al,BYTE PTR [rax]
   14003b02b:	add    BYTE PTR [rax+0x21],dh
   14003b02e:	add    eax,DWORD PTR [rax]
   14003b030:	xor    BYTE PTR [rdx],dl
   14003b032:	add    BYTE PTR [rax],al
   14003b034:	push   rsi
   14003b035:	adc    al,BYTE PTR [rax]
   14003b037:	add    BYTE PTR [rax+0x22],bl
   14003b03a:	add    eax,DWORD PTR [rax]
   14003b03c:	(bad)  
   14003b03d:	adc    al,BYTE PTR [rax]
   14003b03f:	add    BYTE PTR [rdx+0x60000012],dl
   14003b045:	and    al,BYTE PTR [rbx]
   14003b047:	add    BYTE PTR [rax-0x17ffffee],ah
   14003b04d:	adc    eax,DWORD PTR [rax]
   14003b04f:	add    BYTE PTR [rax+0x22],ch
   14003b052:	add    eax,DWORD PTR [rax]
   14003b054:	adc    al,0x0
   14003b057:	add    BYTE PTR [rsp+rdx*1+0x22500000],al
   14003b05e:	add    eax,DWORD PTR [rax]
   14003b060:	push   rax
   14003b061:	(bad)  
   14003b062:	add    BYTE PTR [rax],al
   14003b064:	mov    WORD PTR [rsi],ss
   14003b066:	add    BYTE PTR [rax],al
   14003b068:	pop    rax
   14003b069:	sbb    BYTE PTR [rbx],al
   14003b06b:	add    BYTE PTR [rax-0x47ffffea],dl
   14003b071:	(bad)  
   14003b072:	add    BYTE PTR [rax],al
   14003b074:	rcr    BYTE PTR [rdx],0x3
   14003b077:	add    al,al
   14003b079:	(bad)  
   14003b07a:	add    BYTE PTR [rax],al
   14003b07c:	out    dx,eax
   14003b07d:	(bad)  
   14003b07e:	add    BYTE PTR [rax],al
   14003b080:	mov    al,0x1a
   14003b082:	add    eax,DWORD PTR [rax]
   14003b084:	lock (bad) 
   14003b086:	add    BYTE PTR [rax],al
   14003b088:	cmp    DWORD PTR [rdi],edx
   14003b08a:	add    BYTE PTR [rax],al
   14003b08c:	mov    eax,0xc000031a
   14003b091:	(bad)  
   14003b092:	add    BYTE PTR [rax],al
   14003b094:	icebp  
   14003b095:	(bad)  
   14003b096:	add    BYTE PTR [rax],al
   14003b098:	(bad)  
   14003b099:	sbb    BYTE PTR [rbx],al
   14003b09b:	add    BYTE PTR [rax],al
   14003b09d:	sbb    BYTE PTR [rax],al
   14003b09f:	add    BYTE PTR [rdi],ch
   14003b0a1:	sbb    BYTE PTR [rax],al
   14003b0a3:	add    ah,ah
   14003b0a5:	sbb    al,BYTE PTR [rbx]
   14003b0a7:	add    BYTE PTR [rax-0x21ffffe8],dl
   14003b0ad:	sbb    BYTE PTR [rax],al
   14003b0af:	add    al,cl
   14003b0b1:	sbb    al,BYTE PTR [rbx]
   14003b0b3:	add    al,dl
   14003b0b5:	sbb    DWORD PTR [rax],eax
   14003b0b7:	add    dh,dh
   14003b0b9:	sbb    DWORD PTR [rax],eax
   14003b0bb:	add    BYTE PTR [rax+0x1a],ch
   14003b0be:	add    eax,DWORD PTR [rax]
   14003b0c0:	add    BYTE PTR [rdx],bl
   14003b0c2:	add    BYTE PTR [rax],al
   14003b0c4:	sbb    al,BYTE PTR es:[rax]
   14003b0c7:	add    BYTE PTR [rax+0x1a],bh
   14003b0ca:	add    eax,DWORD PTR [rax]
   14003b0cc:	xor    BYTE PTR [rdx],bl
   14003b0ce:	add    BYTE PTR [rax],al
   14003b0d0:	push   rsi
   14003b0d1:	sbb    al,BYTE PTR [rax]
   14003b0d3:	add    BYTE PTR [rax+0x6000031a],bl
   14003b0d9:	sbb    al,BYTE PTR [rax]
   14003b0db:	add    BYTE PTR [rsi+0x5400001a],al
   14003b0e1:	sbb    al,BYTE PTR [rbx]
   14003b0e3:	add    BYTE PTR [rax+0xe00001a],ah
   14003b0e9:	sbb    eax,DWORD PTR [rax]
   14003b0eb:	add    ah,dl
   14003b0ed:	sbb    al,BYTE PTR [rbx]
   14003b0ef:	add    BYTE PTR [rax],ah
   14003b0f1:	sbb    eax,DWORD PTR [rax]
   14003b0f3:	add    BYTE PTR [rax+0x1b],ch
   14003b0f6:	add    BYTE PTR [rax],al
   14003b0f8:	movabs al,ds:0x8100001b8000031d
   14003b101:	sbb    al,0x0
   14003b103:	add    BYTE PTR [rax-0x6ffffce8],ah
   14003b109:	sbb    al,0x0
   14003b10b:	add    BYTE PTR [rbx-0x53ffffe3],ch
   14003b111:	sbb    eax,0x1e100003
   14003b116:	add    BYTE PTR [rax],al
   14003b118:	cs (bad) 
   14003b11a:	add    BYTE PTR [rax],al
   14003b11c:	xchg   esp,eax
   14003b11d:	sbb    DWORD PTR [rbx],eax
   14003b11f:	add    BYTE PTR [rsi],ch
   14003b121:	(bad)  
   14003b122:	add    BYTE PTR [rax],al
   14003b124:	push   rax
   14003b125:	(bad)  
   14003b126:	add    BYTE PTR [rax],al
   14003b128:	movabs al,ds:0x6600001e50000319
   14003b131:	(bad)  
   14003b132:	add    BYTE PTR [rax],al
   14003b134:	mov    ah,0x19
   14003b136:	add    eax,DWORD PTR [rax]
   14003b138:	data16 (bad) 
   14003b13a:	add    BYTE PTR [rax],al
   14003b13c:	mov    ebx,DWORD PTR [rsi]
   14003b13e:	add    BYTE PTR [rax],al
   14003b140:	enter  0x319,0x0
   14003b144:	mov    ebx,DWORD PTR [rsi]
   14003b146:	add    BYTE PTR [rax],al
   14003b148:	movabs ds:0xa2000319dc00001e,al
   14003b151:	(bad)  
   14003b152:	add    BYTE PTR [rax],al
   14003b154:	int    0x1e
   14003b156:	add    BYTE PTR [rax],al
   14003b158:	in     al,dx
   14003b159:	sbb    DWORD PTR [rbx],eax
   14003b15b:	add    ch,cl
   14003b15d:	(bad)  
   14003b15e:	add    BYTE PTR [rax],al
   14003b160:	ficomp DWORD PTR [rsi]
   14003b162:	add    BYTE PTR [rax],al
   14003b164:	cld    
   14003b165:	sbb    DWORD PTR [rbx],eax
   14003b167:	add    al,ah
   14003b169:	(bad)  
   14003b16a:	add    BYTE PTR [rax],al
   14003b16c:	(bad)  
   14003b16d:	(bad)  
   14003b16e:	add    BYTE PTR [rax],al
   14003b170:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14003b171:	(bad)  
   14003b172:	add    eax,DWORD PTR [rax]
   14003b174:	(bad)  
   14003b175:	(bad)  
   14003b176:	add    BYTE PTR [rax],al
   14003b178:	sub    DWORD PTR [rdi],ebx
   14003b17a:	add    BYTE PTR [rax],al
   14003b17c:	mov    al,0x1e
   14003b17e:	add    eax,DWORD PTR [rax]
   14003b180:	sub    DWORD PTR [rdi],ebx
   14003b182:	add    BYTE PTR [rax],al
   14003b184:	(bad)  
   14003b185:	(bad)  
   14003b186:	add    BYTE PTR [rax],al
   14003b188:	(bad)  
   14003b189:	(bad)  
   14003b18a:	add    eax,DWORD PTR [rax]
   14003b18c:	(bad)  
   14003b18d:	(bad)  
   14003b18e:	add    BYTE PTR [rax],al
   14003b190:	gs (bad) 
   14003b192:	add    BYTE PTR [rax],al
   14003b194:	fcomp  DWORD PTR [rsi]
   14003b196:	add    eax,DWORD PTR [rax]
   14003b198:	gs (bad) 
   14003b19a:	add    BYTE PTR [rax],al
   14003b19c:	jge    0x14003b1bd
   14003b19e:	add    BYTE PTR [rax],al
   14003b1a0:	in     al,dx
   14003b1a1:	(bad)  
   14003b1a2:	add    eax,DWORD PTR [rax]
   14003b1a4:	jge    0x14003b1c5
   14003b1a6:	add    BYTE PTR [rax],al
   14003b1a8:	test   al,0x1f
   14003b1aa:	add    BYTE PTR [rax],al
   14003b1ac:	cld    
   14003b1ad:	(bad)  
   14003b1ae:	add    eax,DWORD PTR [rax]
   14003b1b0:	test   al,0x1f
   14003b1b2:	add    BYTE PTR [rax],al
   14003b1b4:	mov    ch,0x1f
   14003b1b6:	add    BYTE PTR [rax],al
   14003b1b8:	or     al,0x1f
   14003b1ba:	add    eax,DWORD PTR [rax]
   14003b1bc:	movabs al,ds:0xc000020bb000020
   14003b1c5:	sbb    al,BYTE PTR [rbx]
   14003b1c7:	add    BYTE PTR [rbx-0x22ffffe0],bh
   14003b1cd:	and    BYTE PTR [rax],al
   14003b1cf:	add    BYTE PTR [rax],bl
   14003b1d1:	sbb    al,BYTE PTR [rbx]
   14003b1d3:	add    ch,bl
   14003b1d5:	and    BYTE PTR [rax],al
   14003b1d7:	add    al,bh
   14003b1d9:	and    BYTE PTR [rax],al
   14003b1db:	add    BYTE PTR [rdx+rbx*1],ch
   14003b1de:	add    eax,DWORD PTR [rax]
   14003b1e0:	add    BYTE PTR [rcx],ah
   14003b1e2:	add    BYTE PTR [rax],al
   14003b1e4:	sbb    esp,DWORD PTR [rcx]
   14003b1e6:	add    BYTE PTR [rax],al
   14003b1e8:	sbb    al,0x1f
   14003b1ea:	add    eax,DWORD PTR [rax]
   14003b1ec:	sbb    esp,DWORD PTR [rcx]
   14003b1ee:	add    BYTE PTR [rax],al
   14003b1f0:	rex and DWORD PTR [rax],eax
   14003b1f3:	add    BYTE PTR [rax],ch
   14003b1f5:	(bad)  
   14003b1f6:	add    eax,DWORD PTR [rax]
   14003b1f8:	rex and DWORD PTR [rax],eax
   14003b1fb:	add    BYTE PTR [rbp+0x21],bl
   14003b1fe:	add    BYTE PTR [rax],al
   14003b200:	cmp    al,0x1f
   14003b202:	add    eax,DWORD PTR [rax]
   14003b204:	(bad)  
   14003b205:	and    DWORD PTR [rax],eax
   14003b207:	add    BYTE PTR [rcx+0x21],dh
   14003b20a:	add    BYTE PTR [rax],al
   14003b20c:	cmp    al,0x1a
   14003b20e:	add    eax,DWORD PTR [rax]
   14003b210:	and    BYTE PTR [rcx],0x0
   14003b213:	add    BYTE PTR [rcx+0x4c000021],dl
   14003b219:	(bad)  
   14003b21a:	add    eax,DWORD PTR [rax]
   14003b21c:	movabs al,ds:0x44000021b1000021
   14003b225:	sbb    al,BYTE PTR [rbx]
   14003b227:	add    al,al
   14003b229:	and    DWORD PTR [rax],eax
   14003b22b:	add    cl,dl
   14003b22d:	and    DWORD PTR [rax],eax
   14003b22f:	add    BYTE PTR [rdi+rbx*1+0x3],dl
   14003b233:	add    al,ah
   14003b235:	and    DWORD PTR [rax],eax
   14003b237:	add    BYTE PTR [rcx],cl
   14003b239:	and    al,BYTE PTR [rax]
   14003b23b:	add    BYTE PTR [rax+0x18],dl
   14003b23e:	add    eax,DWORD PTR [rax]
   14003b240:	adc    BYTE PTR [rdx],ah
   14003b242:	add    BYTE PTR [rax],al
   14003b244:	rex.XB and al,BYTE PTR [r8]
   14003b247:	add    BYTE PTR [rax+0x5000031a],ch
   14003b24d:	and    al,BYTE PTR [rax]
   14003b24f:	add    BYTE PTR [rcx+0x22],bh
   14003b252:	add    BYTE PTR [rax],al
   14003b254:	rex.W sbb BYTE PTR [rbx],al
   14003b257:	add    BYTE PTR [rax-0x4cffffde],al
   14003b25d:	and    al,BYTE PTR [rax]
   14003b25f:	add    BYTE PTR [rax-0x2ffffce6],ah
   14003b265:	and    al,BYTE PTR [rax]
   14003b267:	add    BYTE PTR [rbx+riz*1],bl
   14003b26a:	add    BYTE PTR [rax],al
   14003b26c:	in     al,dx
   14003b26d:	sbb    al,BYTE PTR [rbx]
   14003b26f:	add    BYTE PTR [rbx+riz*1],bl
   14003b272:	add    BYTE PTR [rax],al
   14003b274:	in     eax,0x23
   14003b276:	add    BYTE PTR [rax],al
   14003b278:	add    BYTE PTR [rbx],bl
   14003b27a:	add    eax,DWORD PTR [rax]
   14003b27c:	in     eax,0x23
   14003b27e:	add    BYTE PTR [rax],al
   14003b280:	jmp    QWORD PTR [rbx]
   14003b282:	add    BYTE PTR [rax],al
   14003b284:	adc    al,0x1b
   14003b286:	add    eax,DWORD PTR [rax]
   14003b288:	jmp    QWORD PTR [rbx]
   14003b28a:	add    BYTE PTR [rax],al
   14003b28c:	or     al,0x24
   14003b28e:	add    BYTE PTR [rax],al
   14003b290:	and    al,0x1b
   14003b292:	add    eax,DWORD PTR [rax]
   14003b294:	and    al,0x0
   14003b297:	add    ah,dl
   14003b299:	and    al,0x0
   14003b29b:	add    BYTE PTR [rax],bh
   14003b29d:	sbb    eax,DWORD PTR [rbx]
   14003b29f:	add    ah,dl
   14003b2a1:	and    al,0x0
   14003b2a3:	add    BYTE PTR [rbp+0x48000025],cl
   14003b2a9:	sbb    eax,DWORD PTR [rbx]
   14003b2ab:	add    BYTE PTR [rbp-0x65ffffdb],cl
   14003b2b1:	and    eax,0x1b5c0000
   14003b2b6:	add    eax,DWORD PTR [rax]
   14003b2b8:	(bad)  
   14003b2b9:	and    eax,0x25a70000
   14003b2be:	add    BYTE PTR [rax],al
   14003b2c0:	ins    BYTE PTR es:[rdi],dx
   14003b2c1:	sbb    eax,DWORD PTR [rbx]
   14003b2c3:	add    BYTE PTR [rax-0x21ffffdb],dh
   14003b2c9:	and    eax,0x1b800000
   14003b2ce:	add    eax,DWORD PTR [rax]
   14003b2d0:	fisub  WORD PTR [rip+0x266b0000]        # 0x1666eb2d6
   14003b2d6:	add    BYTE PTR [rax],al
   14003b2d8:	nop
   14003b2d9:	sbb    eax,DWORD PTR [rbx]
   14003b2db:	add    BYTE PTR [rbx+0x26],ch
   14003b2de:	add    BYTE PTR [rax],al
   14003b2e0:	lea    esp,[rsi]
   14003b2e2:	add    BYTE PTR [rax],al
   14003b2e4:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14003b2e5:	sbb    eax,DWORD PTR [rbx]
   14003b2e7:	add    BYTE PTR [rbp-0x40ffffda],cl
   14003b2ed:	add    BYTE PTR es:[rax],al
   14003b2f0:	mov    eax,0xbf00031b
   14003b2f5:	add    BYTE PTR es:[rax],al
   14003b2f8:	int3   
   14003b2f9:	add    BYTE PTR es:[rax],al
   14003b2fc:	enter  0x31b,0x0
   14003b300:	int3   
   14003b301:	add    BYTE PTR es:[rax],al
   14003b304:	fldenv [rsi]
   14003b306:	add    BYTE PTR [rax],al
   14003b308:	fcomp  DWORD PTR [rbx]
   14003b30a:	add    eax,DWORD PTR [rax]
   14003b30c:	loopne 0x14003b334
   14003b30e:	add    BYTE PTR [rax],al
   14003b310:	or     ebp,DWORD PTR [rax]
   14003b312:	add    BYTE PTR [rax],al
   14003b314:	push   0x30000318
   14003b319:	sub    BYTE PTR [rax],al
   14003b31b:	add    BYTE PTR [rdx+0x29],ah
   14003b31e:	add    BYTE PTR [rax],al
   14003b320:	jl     0x14003b33a
   14003b322:	add    eax,DWORD PTR [rax]
   14003b324:	jo     0x14003b34f
   14003b326:	add    BYTE PTR [rax],al
   14003b328:	mov    bl,0x2a
   14003b32a:	add    BYTE PTR [rax],al
   14003b32c:	in     al,dx
   14003b32d:	sbb    eax,DWORD PTR [rbx]
   14003b32f:	add    al,dh
   14003b331:	sub    al,BYTE PTR [rax]
   14003b333:	add    BYTE PTR [rdx],bh
   14003b335:	sub    al,0x0
   14003b337:	add    BYTE PTR [rax],al
   14003b339:	sbb    al,0x3
   14003b33b:	add    BYTE PTR [rax+0x2c],dl
   14003b33e:	add    BYTE PTR [rax],al
   14003b340:	pop    rsp
   14003b341:	sub    al,0x0
   14003b343:	add    BYTE PTR [rax+rbx*1],dl
   14003b346:	add    eax,DWORD PTR [rax]
   14003b348:	pop    rsp
   14003b349:	sub    al,0x0
   14003b34b:	add    BYTE PTR [rcx+0x2c],dh
   14003b34e:	add    BYTE PTR [rax],al
   14003b350:	sbb    al,0x18
   14003b352:	add    eax,DWORD PTR [rax]
   14003b354:	jno    0x14003b382
   14003b356:	add    BYTE PTR [rax],al
   14003b358:	jns    0x14003b386
   14003b35a:	add    BYTE PTR [rax],al
   14003b35c:	xor    BYTE PTR [rax],bl
   14003b35e:	add    eax,DWORD PTR [rax]
   14003b360:	loopne 0x14003b38e
   14003b362:	add    BYTE PTR [rax],al
   14003b364:	cld    
   14003b365:	sub    al,0x0
   14003b367:	add    BYTE PTR [rax+0x18],al
   14003b36a:	add    eax,DWORD PTR [rax]
   14003b36c:	add    BYTE PTR [rip+0x2d1f0000],ch        # 0x16d22b372
   14003b372:	add    BYTE PTR [rax],al
   14003b374:	or     al,0x18
   14003b376:	add    eax,DWORD PTR [rax]
   14003b378:	(bad)  
   14003b379:	sub    eax,0x2d9f0000
   14003b37e:	add    BYTE PTR [rax],al
   14003b380:	mov    WORD PTR [rdx],ds
   14003b382:	add    eax,DWORD PTR [rax]
   14003b384:	mov    al,0x2d
   14003b386:	add    BYTE PTR [rax],al
   14003b388:	shr    DWORD PTR [rip+0x20400000],1        # 0x16043b38e
   14003b38e:	add    eax,DWORD PTR [rax]
   14003b390:	rex
   14003b391:	add    BYTE PTR cs:[rax],al
   14003b394:	ja     0x14003b3c4
   14003b396:	add    BYTE PTR [rax],al
   14003b398:	rex.WR sbb r8b,BYTE PTR [rbx]
   14003b39b:	add    BYTE PTR [rax+0x4b00002e],al
   14003b3a1:	(bad)  
   14003b3a2:	add    BYTE PTR [rax],al
   14003b3a4:	xchg   esp,eax
   14003b3a5:	sbb    BYTE PTR [rbx],al
   14003b3a7:	add    BYTE PTR [rax+0x2f],dl
   14003b3aa:	add    BYTE PTR [rax],al
   14003b3ac:	lea    ebp,[rdi]
   14003b3ae:	add    BYTE PTR [rax],al
   14003b3b0:	mov    WORD PTR [rax],ds
   14003b3b2:	add    eax,DWORD PTR [rax]
   14003b3b4:	nop
   14003b3b5:	(bad)  
   14003b3b6:	add    BYTE PTR [rax],al
   14003b3b8:	cmp    eax,0xbc000030
   14003b3bd:	sbb    al,0x3
   14003b3bf:	add    BYTE PTR [rax+0x30],al
   14003b3c2:	add    BYTE PTR [rax],al
   14003b3c4:	test   DWORD PTR [rax],esi
   14003b3c6:	add    BYTE PTR [rax],al
   14003b3c8:	mov    ah,0x1c
   14003b3ca:	add    eax,DWORD PTR [rax]
   14003b3cc:	nop
   14003b3cd:	xor    BYTE PTR [rax],al
   14003b3cf:	add    BYTE PTR [rbp+0x48000030],ah
   14003b3d5:	and    BYTE PTR [rbx],al
   14003b3d7:	add    al,al
   14003b3d9:	xor    BYTE PTR [rax],al
   14003b3db:	add    cl,cl
   14003b3dd:	xor    eax,0x20c40000
   14003b3e2:	add    eax,DWORD PTR [rax]
   14003b3e4:	shl    BYTE PTR [rip+0x37180000],1        # 0x1771bb3ea
   14003b3ea:	add    BYTE PTR [rax],al
   14003b3ec:	push   rax
   14003b3ed:	and    BYTE PTR [rbx],al
   14003b3ef:	add    BYTE PTR [rax],ah
   14003b3f1:	(bad)  
   14003b3f2:	add    BYTE PTR [rax],al
   14003b3f4:	mov    eax,0x88000038
   14003b3f9:	and    DWORD PTR [rbx],eax
   14003b3fb:	add    al,al
   14003b3fd:	cmp    BYTE PTR [rax],al
   14003b3ff:	add    BYTE PTR [rbx-0x53ffffc7],ah
   14003b405:	and    BYTE PTR [rbx],al
   14003b407:	add    BYTE PTR [rax-0x18ffffc7],dh
   14003b40d:	cmp    DWORD PTR [rax],eax
   14003b40f:	add    BYTE PTR [rax],dl
   14003b411:	sbb    al,0x3
   14003b413:	add    bh,ah
   14003b415:	cmp    DWORD PTR [rax],eax
   14003b417:	add    BYTE PTR [rcx],dl
   14003b419:	cmp    al,BYTE PTR [rax]
   14003b41b:	add    BYTE PTR [rax],ah
   14003b41d:	sbb    al,0x3
   14003b41f:	add    BYTE PTR [rcx],dl
   14003b421:	cmp    al,BYTE PTR [rax]
   14003b423:	add    bh,bh
   14003b425:	cmp    al,BYTE PTR [rax]
   14003b427:	add    BYTE PTR [rsp+rbx*1],dh
   14003b42a:	add    eax,DWORD PTR [rax]
   14003b42c:	(bad)  
   14003b42d:	cmp    al,BYTE PTR [rax]
   14003b42f:	add    BYTE PTR [rsi],dl
   14003b431:	cmp    eax,DWORD PTR [rax]
   14003b433:	add    BYTE PTR [rax+0x1c],cl
   14003b436:	add    eax,DWORD PTR [rax]
   14003b438:	(bad)  
   14003b439:	cmp    eax,DWORD PTR [rax]
   14003b43b:	add    BYTE PTR [rbx],ah
   14003b43d:	cmp    eax,DWORD PTR [rax]
   14003b43f:	add    BYTE PTR [rax+0x1c],bl
   14003b442:	add    eax,DWORD PTR [rax]
   14003b444:	and    edi,DWORD PTR [rbx]
   14003b446:	add    BYTE PTR [rax],al
   14003b448:	xor    BYTE PTR [rbx],bh
   14003b44a:	add    BYTE PTR [rax],al
   14003b44c:	ins    BYTE PTR es:[rdi],dx
   14003b44d:	sbb    al,0x3
   14003b44f:	add    BYTE PTR [rax],dh
   14003b451:	cmp    eax,DWORD PTR [rax]
   14003b453:	add    ch,dl
   14003b455:	cmp    eax,DWORD PTR [rax]
   14003b457:	add    BYTE PTR [rsp+rbx*1+0x3],bh
   14003b45b:	add    ch,dl
   14003b45d:	cmp    eax,DWORD PTR [rax]
   14003b45f:	add    BYTE PTR [rdi+0x3c],ch
   14003b462:	add    BYTE PTR [rax],al
   14003b464:	nop
   14003b465:	sbb    al,0x3
   14003b467:	add    BYTE PTR [rdi+0x3c],ch
   14003b46a:	add    BYTE PTR [rax],al
   14003b46c:	movabs ds:0xe000031ca400003c,al
   14003b475:	cmp    al,0x0
   14003b477:	add    BYTE PTR [rdi+rdi*1+0x0],bl
   14003b47b:	add    BYTE PTR [rax],al
   14003b47d:	and    al,BYTE PTR [rbx]
   14003b47f:	add    BYTE PTR [rax],ah
   14003b481:	add    BYTE PTR [rax],al
   14003b484:	(bad)  
   14003b485:	add    BYTE PTR [rax],al
   14003b488:	pop    rsp
   14003b489:	sbb    al,BYTE PTR [rbx]
   14003b48b:	add    BYTE PTR [rax-0x22ffffc0],dl
   14003b491:	add    BYTE PTR [rax],al
   14003b494:	jo     0x14003b4b0
   14003b496:	add    eax,DWORD PTR [rax]
   14003b498:	loopne 0x14003b4da
   14003b49a:	add    BYTE PTR [rax],al
   14003b49c:	rex.X
   14003b49d:	add    BYTE PTR [r8],al
   14003b4a0:	sbb    BYTE PTR [rdx],0x3
   14003b4a3:	add    BYTE PTR [rax+0x54000041],dh
   14003b4a9:	rex.X add BYTE PTR [rax],al
   14003b4ac:	mov    WORD PTR [rip+0x42600003],ds        # 0x18263b4b5
   14003b4b2:	add    BYTE PTR [rax],al
   14003b4b4:	xchg   edi,eax
   14003b4b5:	rex.X add BYTE PTR [rax],al
   14003b4b8:	enter  0x31c,0x0
   14003b4bc:	xchg   edi,eax
   14003b4bd:	rex.X add BYTE PTR [rax],al
   14003b4c0:	ret    0x45
   14003b4c3:	add    al,bl
   14003b4c5:	sbb    al,0x3
   14003b4c7:	add    dl,al
   14003b4c9:	add    BYTE PTR [r8],r8b
   14003b4cc:	iret   
   14003b4cd:	add    BYTE PTR [r8],r8b
   14003b4d0:	hlt    
   14003b4d1:	sbb    al,0x3
   14003b4d3:	add    bh,cl
   14003b4d5:	add    BYTE PTR [r8],r8b
   14003b4d8:	fadd   QWORD PTR [rbp+0x0]
   14003b4db:	add    BYTE PTR [rbx*1+0x45e00003],cl
   14003b4e2:	add    BYTE PTR [rax],al
   14003b4e4:	ja     0x14003b52c
   14003b4e6:	add    BYTE PTR [rax],al
   14003b4e8:	sbb    al,0x1d
   14003b4ea:	add    eax,DWORD PTR [rax]
   14003b4ec:	ja     0x14003b534
   14003b4ee:	add    BYTE PTR [rax],al
   14003b4f0:	std    
   14003b4f1:	rex.RXB add BYTE PTR [r8],r8b
   14003b4f4:	sub    al,0x1d
   14003b4f6:	add    eax,DWORD PTR [rax]
   14003b4f8:	std    
   14003b4f9:	rex.RXB add BYTE PTR [r8],r8b
   14003b4fc:	or     cl,BYTE PTR [rax+0x0]
   14003b4ff:	add    BYTE PTR [rax+0x1d],cl
   14003b502:	add    eax,DWORD PTR [rax]
   14003b504:	or     cl,BYTE PTR [rax+0x0]
   14003b507:	add    BYTE PTR [rdi],dl
   14003b509:	rex.W add BYTE PTR [rax],al
   14003b50c:	pop    rax
   14003b50d:	sbb    eax,0x48170003
   14003b512:	add    BYTE PTR [rax],al
   14003b514:	and    al,0x48
   14003b516:	add    BYTE PTR [rax],al
   14003b518:	jo     0x14003b537
   14003b51a:	add    eax,DWORD PTR [rax]
   14003b51c:	xor    BYTE PTR [rax+0x0],cl
   14003b51f:	add    BYTE PTR [rdi+0x48],dh
   14003b522:	add    BYTE PTR [rax],al
   14003b524:	xchg   esp,eax
   14003b525:	sbb    eax,0x48b00003
   14003b52a:	add    BYTE PTR [rax],al
   14003b52c:	sbb    BYTE PTR [rcx+0x0],cl
   14003b52f:	add    BYTE PTR [rax+0x70000320],ah
   14003b535:	rex.WB add BYTE PTR [r8],al
   14003b538:	cdq    
   14003b539:	rex.WX add BYTE PTR [rax],al
   14003b53c:	lock and DWORD PTR [rbx],eax
   14003b53f:	add    BYTE PTR [rax-0x3effffb6],ah
   14003b545:	rex.WX add BYTE PTR [rax],al
   14003b548:	rcl    BYTE PTR [rdi],1
   14003b54a:	add    eax,DWORD PTR [rax]
   14003b54c:	loopne 0x14003b598
   14003b54e:	add    BYTE PTR [rax],al
   14003b550:	cli    
   14003b551:	rex.WX add BYTE PTR [rax],al
   14003b554:	fcom   DWORD PTR [rdi]
   14003b556:	add    eax,DWORD PTR [rax]
   14003b558:	adc    BYTE PTR [rbx+0x0],cl
   14003b55b:	add    BYTE PTR [rbx+rcx*2],bl
   14003b55e:	add    BYTE PTR [rax],al
   14003b560:	loopne 0x14003b579
   14003b562:	add    eax,DWORD PTR [rax]
   14003b564:	sbb    al,0x4b
   14003b566:	add    BYTE PTR [rax],al
   14003b568:	xor    BYTE PTR [rbx+0x0],cl
   14003b56b:	add    al,ch
   14003b56d:	(bad)  
   14003b56e:	add    eax,DWORD PTR [rax]
   14003b570:	xor    BYTE PTR [rbx+0x0],cl
   14003b573:	add    BYTE PTR [rax],bh
   14003b575:	rex.WXB add BYTE PTR [r8],al
   14003b578:	cld    
   14003b579:	(bad)  
   14003b57a:	add    eax,DWORD PTR [rax]
   14003b57c:	test   BYTE PTR [rbx+0x0],cl
   14003b57f:	add    BYTE PTR [rbp+0x400004b],ah
   14003b585:	and    eax,DWORD PTR [rbx]
   14003b587:	add    BYTE PTR [rax-0x1fffffb5],ch
   14003b58d:	rex.WXB add BYTE PTR [r8],al
   14003b590:	cld    
   14003b591:	and    al,BYTE PTR [rbx]
   14003b593:	add    al,ah
   14003b595:	rex.WXB add BYTE PTR [r8],al
   14003b598:	add    DWORD PTR [rax+rax*1+0x0],ecx
   14003b59c:	clc    
   14003b59d:	and    eax,DWORD PTR [rbx]
   14003b59f:	add    BYTE PTR [rsp+rcx*2],al
   14003b5a2:	add    BYTE PTR [rax],al
   14003b5a4:	and    eax,0xf000004c
   14003b5a9:	and    eax,DWORD PTR [rbx]
   14003b5ab:	add    BYTE PTR [rax],ch
   14003b5ad:	rex.WR add BYTE PTR [rax],r8b
   14003b5b0:	rex.WB
   14003b5b1:	rex.WR add BYTE PTR [rax],r8b
   14003b5b4:	ins    BYTE PTR es:[rdi],dx
   14003b5b5:	and    eax,DWORD PTR [rbx]
   14003b5b7:	add    BYTE PTR [rsp+rcx*2+0x0],cl
   14003b5bb:	add    BYTE PTR [rdi+0x4c],dh
   14003b5be:	add    BYTE PTR [rax],al
   14003b5c0:	and    eax,DWORD PTR fs:[rbx]
   14003b5c3:	add    BYTE PTR [rax+0x4c],bh
   14003b5c6:	add    BYTE PTR [rax],al
   14003b5c8:	cdq    
   14003b5c9:	rex.WR add BYTE PTR [rax],r8b
   14003b5cc:	mov    BYTE PTR [rbx],ah
   14003b5ce:	add    eax,DWORD PTR [rax]
   14003b5d0:	pushf  
   14003b5d1:	rex.WR add BYTE PTR [rax],r8b
   14003b5d4:	(bad)  
   14003b5d5:	rex.WR add BYTE PTR [rax],r8b
   14003b5d8:	and    BYTE PTR [rbx],0x3
   14003b5db:	add    al,cl
   14003b5dd:	rex.WR add BYTE PTR [rax],r8b
   14003b5e0:	jmp    0x19003b631
   14003b5e5:	and    eax,DWORD PTR [rbx]
   14003b5e7:	add    ah,ch
   14003b5e9:	rex.WR add BYTE PTR [rax],r8b
   14003b5ec:	(bad)  
   14003b5ed:	rex.WRB add BYTE PTR [r8],r8b
   14003b5f0:	and    rax,QWORD PTR [rbx]
   14003b5f3:	add    BYTE PTR [rax],bl
   14003b5f5:	rex.WRB add BYTE PTR [r8],r8b
   14003b5f8:	cmp    DWORD PTR [rbp+0x0],ecx
   14003b5fb:	add    BYTE PTR [rbx+riz*1+0x4d3c0003],ah
   14003b602:	add    BYTE PTR [rax],al
   14003b604:	rex.WRB add BYTE PTR [r8d],r8b
   14003b608:	pushf  
   14003b609:	and    eax,DWORD PTR [rbx]
   14003b60b:	add    BYTE PTR [rax+0x4d],ch
   14003b60e:	add    BYTE PTR [rax],al
   14003b610:	mov    DWORD PTR [rbp+0x0],ecx
   14003b613:	add    ah,bl
   14003b615:	and    eax,DWORD PTR [rbx]
   14003b617:	add    BYTE PTR [rbp+rcx*2+0x4db70000],cl
   14003b61e:	add    BYTE PTR [rax],al
   14003b620:	(bad)  
   14003b621:	and    eax,DWORD PTR [rbx]
   14003b623:	add    BYTE PTR [rax-0x14ffffb3],bh
   14003b629:	rex.WRB add BYTE PTR [r8],r8b
   14003b62c:	sub    BYTE PTR [rbx+rax*1],ah
   14003b62f:	add    ah,ch
   14003b631:	rex.WRB add BYTE PTR [r8],r8b
   14003b634:	(bad)  
   14003b635:	rex.WRX add BYTE PTR [rax],r8b
   14003b638:	sbb    al,0x24
   14003b63a:	add    eax,DWORD PTR [rax]
   14003b63c:	xor    BYTE PTR [rsi+0x0],cl
   14003b63f:	add    BYTE PTR [rcx+0x4e],dl
   14003b642:	add    BYTE PTR [rax],al
   14003b644:	shl    BYTE PTR [rbx],0x3
   14003b647:	add    BYTE PTR [rsi+rcx*2+0x0],dl
   14003b64b:	add    BYTE PTR [rsi+0x4e],bh
   14003b64e:	add    BYTE PTR [rax],al
   14003b650:	mov    eax,0xd0000323
   14003b655:	rex.WRX add BYTE PTR [rax],r8b
   14003b658:	or     DWORD PTR [rdi+0x0],ecx
   14003b65b:	add    BYTE PTR [rbx+riz*1],cl
   14003b65e:	add    eax,DWORD PTR [rax]
   14003b660:	or     al,0x4f
   14003b662:	add    BYTE PTR [rax],al
   14003b664:	cmp    ecx,DWORD PTR [rdi+0x0]
   14003b667:	add    BYTE PTR [rax],al
   14003b669:	and    al,0x3
   14003b66b:	add    BYTE PTR [rdi+rcx*2],bh
   14003b66e:	add    BYTE PTR [rax],al
   14003b670:	imul   ecx,DWORD PTR [rdi+0x0],0x0
   14003b674:	je     0x14003b699
   14003b676:	add    eax,DWORD PTR [rax]
   14003b678:	ins    BYTE PTR es:[rdi],dx
   14003b679:	rex.WRXB add BYTE PTR [r8],r8b
   14003b67c:	fwait
   14003b67d:	rex.WRXB add BYTE PTR [r8],r8b
   14003b680:	nop
   14003b681:	and    eax,DWORD PTR [rbx]
   14003b683:	add    BYTE PTR [rdi+rcx*2+0x4fcb0000],bl
   14003b68a:	add    BYTE PTR [rax],al
   14003b68c:	pop    rax
   14003b68d:	and    eax,DWORD PTR [rbx]
   14003b68f:	add    ah,cl
   14003b691:	rex.WRXB add BYTE PTR [r8],r8b
   14003b694:	sti    
   14003b695:	rex.WRXB add BYTE PTR [r8],r8b
   14003b698:	lods   al,BYTE PTR ds:[rsi]
   14003b699:	and    eax,DWORD PTR [rbx]
   14003b69b:	add    ah,bh
   14003b69d:	rex.WRXB add BYTE PTR [r8],r8b
   14003b6a0:	sub    edx,DWORD PTR [rax+0x0]
   14003b6a3:	add    ah,ah
   14003b6a5:	and    eax,DWORD PTR [rbx]
   14003b6a7:	add    BYTE PTR [rax+rdx*2],ch
   14003b6aa:	add    BYTE PTR [rax],al
   14003b6ac:	pop    rbx
   14003b6ad:	push   rax
   14003b6ae:	add    BYTE PTR [rax],al
   14003b6b0:	xor    al,0x24
   14003b6b2:	add    eax,DWORD PTR [rax]
   14003b6b4:	pop    rsp
   14003b6b5:	push   rax
   14003b6b6:	add    BYTE PTR [rax],al
   14003b6b8:	mov    edx,DWORD PTR [rax+0x0]
   14003b6bb:	add    al,cl
   14003b6bd:	and    eax,DWORD PTR [rbx]
   14003b6bf:	add    BYTE PTR [rcx+rdx*2+0x0],cl
   14003b6c3:	add    BYTE PTR [rdi+0x18000051],cl
   14003b6c9:	and    eax,DWORD PTR [rbx]
   14003b6cb:	add    BYTE PTR [rax-0x43ffffaf],dl
   14003b6d1:	push   rcx
   14003b6d2:	add    BYTE PTR [rax],al
   14003b6d4:	or     al,0x24
   14003b6d6:	add    eax,DWORD PTR [rax]
   14003b6d8:	mov    esp,0xf2000051
   14003b6dd:	push   rcx
   14003b6de:	add    BYTE PTR [rax],al
   14003b6e0:	and    BYTE PTR [rbx],ah
   14003b6e2:	add    eax,DWORD PTR [rax]
   14003b6e4:	hlt    
   14003b6e5:	push   rcx
   14003b6e6:	add    BYTE PTR [rax],al
   14003b6e8:	sub    dl,BYTE PTR [rdx+0x0]
   14003b6eb:	add    BYTE PTR [rax],ch
   14003b6ed:	and    eax,DWORD PTR [rbx]
   14003b6ef:	add    BYTE PTR [rdx+rdx*2],ch
   14003b6f2:	add    BYTE PTR [rax],al
   14003b6f4:	(bad)  
   14003b6f6:	add    BYTE PTR [rax],al
   14003b6f8:	xor    BYTE PTR [rbx],ah
   14003b6fa:	add    eax,DWORD PTR [rax]
   14003b6fc:	fs push rdx
   14003b6fe:	add    BYTE PTR [rax],al
   14003b700:	(bad)  
   14003b701:	push   rdx
   14003b702:	add    BYTE PTR [rax],al
   14003b704:	cmp    BYTE PTR [rbx],ah
   14003b706:	add    eax,DWORD PTR [rax]
   14003b708:	pushf  
   14003b709:	push   rdx
   14003b70a:	add    BYTE PTR [rax],al
   14003b70c:	fist   WORD PTR [rdx+0x0]
   14003b70f:	add    BYTE PTR [rsp],dl
   14003b712:	add    eax,DWORD PTR [rax]
   14003b714:	loopne 0x14003b768
   14003b716:	add    BYTE PTR [rax],al
   14003b718:	(bad)  
   14003b719:	push   rbx
   14003b71a:	add    BYTE PTR [rax],al
   14003b71c:	rex and eax,DWORD PTR [rbx]
   14003b71f:	add    BYTE PTR [rax-0x55ffffad],al
   14003b725:	push   rbx
   14003b726:	add    BYTE PTR [rax],al
   14003b728:	rex.WR and al,0x3
   14003b72b:	add    BYTE PTR [rbx+rdx*2+0x53e70000],ch
   14003b732:	add    BYTE PTR [rax],al
   14003b734:	and    al,0x3
   14003b737:	add    al,ch
   14003b739:	push   rbx
   14003b73a:	add    BYTE PTR [rax],al
   14003b73c:	push   rcx
   14003b73d:	push   rsp
   14003b73e:	add    BYTE PTR [rax],al
   14003b740:	push   rsp
   14003b741:	and    al,0x3
   14003b743:	add    BYTE PTR [rsp+rdx*2+0x0],bl
   14003b747:	add    BYTE PTR [rdi-0x63ffffac],bl
   14003b74d:	and    al,0x3
   14003b74f:	add    BYTE PTR [rax-0x55ffffac],ah
   14003b755:	push   rbp
   14003b756:	add    BYTE PTR [rax],al
   14003b758:	fs and al,0x3
   14003b75b:	add    BYTE PTR [rbp+rdx*2+0x56a00000],ch
   14003b762:	add    BYTE PTR [rax],al
   14003b764:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14003b765:	and    al,0x3
   14003b767:	add    BYTE PTR [rax-0x48ffffaa],ah
   14003b76d:	push   rsi
   14003b76e:	add    BYTE PTR [rax],al
   14003b770:	pop    rsp
   14003b771:	and    al,0x3
   14003b773:	add    al,dl
   14003b775:	push   rsi
   14003b776:	add    BYTE PTR [rax],al
   14003b778:	xor    eax,0xc000005c
   14003b77d:	and    al,0x3
   14003b77f:	add    BYTE PTR [rax],bh
   14003b781:	pop    rsp
   14003b782:	add    BYTE PTR [rax],al
   14003b784:	cmp    BYTE PTR [rbp+0x0],bl
   14003b787:	add    al,bh
   14003b789:	and    al,0x3
   14003b78b:	add    BYTE PTR [rax],bh
   14003b78d:	pop    rbp
   14003b78e:	add    BYTE PTR [rax],al
   14003b790:	rex.WRB pop r14
   14003b792:	add    BYTE PTR [rax],al
   14003b794:	adc    BYTE PTR [rip+0x5e500003],ah        # 0x19e53b79d
   14003b79a:	add    BYTE PTR [rax],al
   14003b79c:	xchg   ecx,eax
   14003b79d:	pop    rsi
   14003b79e:	add    BYTE PTR [rax],al
   14003b7a0:	(bad)  
   14003b7a1:	and    al,0x3
   14003b7a3:	add    BYTE PTR [rsi+rbx*2+0x5eaa0000],dl
   14003b7aa:	add    BYTE PTR [rax],al
   14003b7ac:	int3   
   14003b7ad:	and    al,0x3
   14003b7af:	add    BYTE PTR [rsi+rbx*2+0x5ff20000],ch
   14003b7b6:	add    BYTE PTR [rax],al
   14003b7b8:	in     al,0x24
   14003b7ba:	add    eax,DWORD PTR [rax]
   14003b7bc:	hlt    
   14003b7bd:	pop    rdi
   14003b7be:	add    BYTE PTR [rax],al
   14003b7c0:	sbb    ah,BYTE PTR [rax+0x0]
   14003b7c3:	add    ah,al
   14003b7c5:	and    al,0x3
   14003b7c7:	add    BYTE PTR [rax+riz*2],bh
   14003b7ca:	add    BYTE PTR [rax],al
   14003b7cc:	shl    BYTE PTR [rax+0x0],cl
   14003b7cf:	add    ah,bl
   14003b7d1:	and    al,0x3
   14003b7d3:	add    ah,ch
   14003b7d5:	(bad)  
   14003b7d6:	add    BYTE PTR [rax],al
   14003b7d8:	and    ah,BYTE PTR [rcx+0x0]
   14003b7db:	add    BYTE PTR [rax],ch
   14003b7dd:	and    eax,0x61240003
   14003b7e2:	add    BYTE PTR [rax],al
   14003b7e4:	pop    rdx
   14003b7e5:	(bad)  
   14003b7e6:	add    BYTE PTR [rax],al
   14003b7e8:	xor    BYTE PTR [rip+0x615c0003],ah        # 0x1a15fb7f1
   14003b7ee:	add    BYTE PTR [rax],al
   14003b7f0:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14003b7f1:	(bad)  
   14003b7f2:	add    BYTE PTR [rax],al
   14003b7f4:	lock and al,0x3
   14003b7f7:	add    BYTE PTR [rax+0x8000061],ch
   14003b7fd:	(bad)  
   14003b7fe:	add    BYTE PTR [rax],al
   14003b800:	cmp    BYTE PTR [rip+0x62080003],ah        # 0x1a20bb809
   14003b806:	add    BYTE PTR [rax],al
   14003b808:	rex.B (bad) 
   14003b80a:	add    BYTE PTR [rax],al
   14003b80c:	rex.WR and rax,0x625c0003
   14003b812:	add    BYTE PTR [rax],al
   14003b814:	icebp  
   14003b815:	movsxd eax,DWORD PTR [rax]
   14003b817:	add    BYTE PTR [rax+0x25],bl
   14003b81a:	add    eax,DWORD PTR [rax]
   14003b81c:	add    BYTE PTR [rax+rax*1+0x0],ah
   14003b820:	rex.B
   14003b821:	add    BYTE PTR fs:[rax],al
   14003b824:	nop
   14003b825:	and    eax,0x64440003
   14003b82a:	add    BYTE PTR [rax],al
   14003b82c:	and    DWORD PTR [rax+rax*1+0x0],0x32598
   14003b834:	test   BYTE PTR [rax+rax*1+0x0],ah
   14003b838:	(bad)  
   14003b839:	add    BYTE PTR fs:[rax],al
   14003b83c:	mov    al,0x25
   14003b83e:	add    eax,DWORD PTR [rax]
   14003b840:	(bad)  
   14003b841:	add    BYTE PTR fs:[rax],al
   14003b844:	mov    ah,BYTE PTR [rbp+0x0]
   14003b847:	add    BYTE PTR [rax-0x73fffcdb],ah
   14003b84d:	add    BYTE PTR gs:[rax],al
   14003b850:	out    dx,al
   14003b851:	add    BYTE PTR [eax],al
   14003b854:	mov    eax,0xf0000325
   14003b859:	add    BYTE PTR [eax],al
   14003b85c:	(bad)  
   14003b85d:	push   0x25c00000
   14003b862:	add    eax,DWORD PTR [rax]
   14003b864:	xchg   esp,eax
   14003b865:	push   0x69590000
   14003b86a:	add    BYTE PTR [rax],al
   14003b86c:	enter  0x325,0x0
   14003b870:	pop    rsp
   14003b871:	imul   eax,DWORD PTR [rax],0x69b500
   14003b877:	add    BYTE PTR [rsi+riz*1+0x69b80003],ch
   14003b87e:	add    BYTE PTR [rax],al
   14003b880:	cs push 0x0
   14003b883:	add    al,bl
   14003b885:	and    eax,0x6a300003
   14003b88a:	add    BYTE PTR [rax],al
   14003b88c:	stc    
   14003b88d:	push   0x0
   14003b88f:	add    BYTE PTR [rsi+riz*1+0x6afc0003],dl
   14003b896:	add    BYTE PTR [rax],al
   14003b898:	sub    BYTE PTR [rax+rax*1+0x0],ch
   14003b89c:	js     0x14003b8c4
   14003b89e:	add    eax,DWORD PTR [rax]
   14003b8a0:	sub    BYTE PTR [rax+rax*1+0x0],ch
   14003b8a4:	mov    esp,0xec00006c
   14003b8a9:	and    eax,0x6cbc0003
   14003b8ae:	add    BYTE PTR [rax],al
   14003b8b0:	pop    rbp
   14003b8b1:	ins    DWORD PTR es:[rdi],dx
   14003b8b2:	add    BYTE PTR [rax],al
   14003b8b4:	fsub   QWORD PTR [rsi]
   14003b8b6:	add    eax,DWORD PTR [rax]
   14003b8b8:	(bad)  
   14003b8b9:	ins    DWORD PTR es:[rdi],dx
   14003b8ba:	add    BYTE PTR [rax],al
   14003b8bc:	mov    cl,0x6d
   14003b8be:	add    BYTE PTR [rax],al
   14003b8c0:	xor    BYTE PTR [rsi],ah
   14003b8c2:	add    eax,DWORD PTR [rax]
   14003b8c4:	mov    ah,0x6d
   14003b8c6:	add    BYTE PTR [rax],al
   14003b8c8:	imul   DWORD PTR [rbp+0x0]
   14003b8cb:	add    BYTE PTR [rsi+riz*1],cl
   14003b8ce:	add    eax,DWORD PTR [rax]
   14003b8d0:	clc    
   14003b8d1:	ins    DWORD PTR es:[rdi],dx
   14003b8d2:	add    BYTE PTR [rax],al
   14003b8d4:	push   rsi
   14003b8d5:	outs   dx,BYTE PTR ds:[rsi]
   14003b8d6:	add    BYTE PTR [rax],al
   14003b8d8:	add    BYTE PTR [rsi],ah
   14003b8da:	add    eax,DWORD PTR [rax]
   14003b8dc:	pop    rax
   14003b8dd:	outs   dx,BYTE PTR ds:[rsi]
   14003b8de:	add    BYTE PTR [rax],al
   14003b8e0:	ins    DWORD PTR es:[rdi],dx
   14003b8e1:	outs   dx,BYTE PTR ds:[rsi]
   14003b8e2:	add    BYTE PTR [rax],al
   14003b8e4:	pop    rax
   14003b8e5:	add    eax,DWORD PTR es:[rax]
   14003b8e8:	jo     0x14003b958
   14003b8ea:	add    BYTE PTR [rax],al
   14003b8ec:	test   DWORD PTR [rsi+0x0],ebp
   14003b8ef:	add    BYTE PTR [rax+0x26],ah
   14003b8f2:	add    eax,DWORD PTR [rax]
   14003b8f4:	mov    BYTE PTR [rsi+0x0],ch
   14003b8f7:	add    BYTE PTR [rdx+0x1400006e],bh
   14003b8fd:	add    eax,DWORD PTR es:[rax]
   14003b900:	enter  0x6e,0x0
   14003b904:	jrcxz  0x14003b974
   14003b906:	add    BYTE PTR [rax],al
   14003b908:	push   0xffffffffe4000326
   14003b90d:	outs   dx,BYTE PTR ds:[rsi]
   14003b90e:	add    BYTE PTR [rax],al
   14003b910:	jmp    FWORD PTR [rsi+0x0]
   14003b913:	add    BYTE PTR [rax+0x26],dh
   14003b916:	add    eax,DWORD PTR [rax]
   14003b918:	add    BYTE PTR [rdi+0x0],ch
   14003b91b:	add    BYTE PTR [rcx],ah
   14003b91d:	jo     0x14003b91f
   14003b91f:	add    BYTE PTR [rsi+riz*1],bl
   14003b922:	add    eax,DWORD PTR [rax]
   14003b924:	and    al,0x70
   14003b926:	add    BYTE PTR [rax],al
   14003b928:	stos   DWORD PTR es:[rdi],eax
   14003b929:	jo     0x14003b92b
   14003b92b:	add    ah,cl
   14003b92d:	add    eax,DWORD PTR es:[rax]
   14003b930:	mov    ah,0x70
   14003b932:	add    BYTE PTR [rax],al
   14003b934:	cmp    esi,DWORD PTR [rcx+0x0]
   14003b937:	add    BYTE PTR [rsi+riz*1+0x71500003],bh
   14003b93e:	add    BYTE PTR [rax],al
   14003b940:	jp     0x14003b9b5
   14003b942:	add    BYTE PTR [rax],al
   14003b944:	lock add eax,DWORD PTR es:[rax]
   14003b948:	movabs al,ds:0xf4000073be000073
   14003b951:	add    eax,DWORD PTR es:[rax]
   14003b954:	shl    BYTE PTR [rbx+0x0],0x0
   14003b958:	fidiv  WORD PTR [rbx+0x0]
   14003b95b:	add    ah,bh
   14003b95d:	add    eax,DWORD PTR es:[rax]
   14003b960:	loopne 0x14003b9d5
   14003b962:	add    BYTE PTR [rax],al
   14003b964:	sbb    DWORD PTR [rax+rax*1+0x0],esi
   14003b968:	or     al,0x27
   14003b96a:	add    eax,DWORD PTR [rax]
   14003b96c:	sub    al,0x74
   14003b96e:	add    BYTE PTR [rax],al
   14003b970:	rex.WX je 0x14003b973
   14003b973:	add    BYTE PTR [rdi+riz*1],al
   14003b976:	add    eax,DWORD PTR [rax]
   14003b978:	cld    
   14003b979:	je     0x14003b97b
   14003b97b:	add    BYTE PTR [rsi],cl
   14003b97d:	jne    0x14003b97f
   14003b97f:	add    BYTE PTR [rax+0x27],dl
   14003b982:	add    eax,DWORD PTR [rax]
   14003b984:	adc    BYTE PTR [rbp+0x0],dh
   14003b987:	add    BYTE PTR [rcx+0x20000076],bl
   14003b98d:	(bad)  
   14003b98e:	add    eax,DWORD PTR [rax]
   14003b990:	call   0x15403ba0b
   14003b995:	ja     0x14003b997
   14003b997:	add    BYTE PTR [rax],bl
   14003b999:	(bad)  
   14003b99a:	add    eax,DWORD PTR [rax]
   14003b99c:	xor    BYTE PTR [rdi+0x0],dh
   14003b99f:	add    al,bl
   14003b9a1:	ja     0x14003b9a3
   14003b9a3:	add    BYTE PTR [rax+0x27],bl
   14003b9a6:	add    eax,DWORD PTR [rax]
   14003b9a8:	fdiv   DWORD PTR [rdi+0x0]
   14003b9ab:	add    cl,bh
   14003b9ad:	ja     0x14003b9af
   14003b9af:	add    ah,bl
   14003b9b1:	(bad)  
   14003b9b2:	add    eax,DWORD PTR [rax]
   14003b9b4:	cld    
   14003b9b5:	ja     0x14003b9b7
   14003b9b7:	add    BYTE PTR [rip+0xffffffffd4000078],bl        # 0x11403ba35
   14003b9bd:	(bad)  
   14003b9be:	add    eax,DWORD PTR [rax]
   14003b9c0:	and    BYTE PTR [rax+0x0],bh
   14003b9c3:	add    BYTE PTR [rcx+0x78],al
   14003b9c6:	add    BYTE PTR [rax],al
   14003b9c8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14003b9c9:	(bad)  
   14003b9ca:	add    eax,DWORD PTR [rax]
   14003b9cc:	rex.R js 0x14003b9cf
   14003b9cf:	add    BYTE PTR [rsi+0x78],ch
   14003b9d2:	add    BYTE PTR [rax],al
   14003b9d4:	pushf  
   14003b9d5:	(bad)  
   14003b9d6:	add    eax,DWORD PTR [rax]
   14003b9d8:	jo     0x14003ba52
   14003b9da:	add    BYTE PTR [rax],al
   14003b9dc:	xchg   ecx,eax
   14003b9dd:	js     0x14003b9df
   14003b9df:	add    al,al
   14003b9e1:	(bad)  
   14003b9e2:	add    eax,DWORD PTR [rax]
   14003b9e4:	xchg   esp,eax
   14003b9e5:	js     0x14003b9e7
   14003b9e7:	add    BYTE PTR [rsi-0x47ffff88],bh
   14003b9ed:	(bad)  
   14003b9ee:	add    eax,DWORD PTR [rax]
   14003b9f0:	sar    BYTE PTR [rax+0x0],0x0
   14003b9f4:	in     eax,dx
   14003b9f5:	js     0x14003b9f7
   14003b9f7:	add    BYTE PTR [rdi+riz*1+0x3],bl
   14003b9fb:	add    BYTE PTR [rcx+rdi*2],cl
   14003b9fe:	add    BYTE PTR [rax],al
   14003ba00:	ss jns 0x14003ba03
   14003ba03:	add    BYTE PTR [rdi+riz*1+0x3],ah
   14003ba07:	add    BYTE PTR [rax-0x2bffff87],dl
   14003ba0d:	jns    0x14003ba0f
   14003ba0f:	add    BYTE PTR [rdi+riz*1+0x3],ch
   14003ba13:	add    ah,dl
   14003ba15:	jns    0x14003ba17
   14003ba17:	add    BYTE PTR [rip+0xffffffffe400007a],cl        # 0x12403ba97
   14003ba1d:	(bad)  
   14003ba1e:	add    eax,DWORD PTR [rax]
   14003ba20:	adc    BYTE PTR [rdx+0x0],bh
   14003ba23:	add    BYTE PTR [rcx+0x7a],cl
   14003ba26:	add    BYTE PTR [rax],al
   14003ba28:	lods   al,BYTE PTR ds:[rsi]
   14003ba29:	(bad)  
   14003ba2a:	add    eax,DWORD PTR [rax]
   14003ba2c:	rex.WR jp 0x14003ba2f
   14003ba2f:	add    BYTE PTR [rbp-0x37ffff86],al
   14003ba35:	(bad)  
   14003ba36:	add    eax,DWORD PTR [rax]
   14003ba38:	mov    BYTE PTR [rdx+0x0],bh
   14003ba3b:	add    cl,al
   14003ba3d:	jp     0x14003ba3f
   14003ba3f:	add    BYTE PTR [rax-0x3bfffcd9],dl
   14003ba45:	jp     0x14003ba47
   14003ba47:	add    BYTE PTR [rsi],bl
   14003ba49:	jnp    0x14003ba4b
   14003ba4b:	add    BYTE PTR [rax+0x27],bh
   14003ba4e:	add    eax,DWORD PTR [rax]
   14003ba50:	and    BYTE PTR [rbx+0x0],bh
   14003ba53:	add    BYTE PTR [rdi+0x7b],al
   14003ba56:	add    BYTE PTR [rax],al
   14003ba58:	mov    BYTE PTR [rdi],ah
   14003ba5a:	add    eax,DWORD PTR [rax]
   14003ba5c:	js     0x14003bad9
   14003ba5e:	add    BYTE PTR [rax],al
   14003ba60:	int    0x7b
   14003ba62:	add    BYTE PTR [rax],al
   14003ba64:	lock (bad) 
   14003ba66:	add    eax,DWORD PTR [rax]
   14003ba68:	sar    BYTE PTR [rbx+0x0],1
   14003ba6b:	add    BYTE PTR [rbp-0x7ffff83],dh
   14003ba71:	(bad)  
   14003ba72:	add    eax,DWORD PTR [rax]
   14003ba74:	sar    BYTE PTR [rbp+0x0],0x0
   14003ba78:	icebp  
   14003ba79:	jge    0x14003ba7b
   14003ba7b:	add    BYTE PTR [rax],bl
   14003ba7d:	sub    BYTE PTR [rbx],al
   14003ba7f:	add    BYTE PTR [rsi+rdi*2],cl
   14003ba82:	add    BYTE PTR [rax],al
   14003ba84:	pop    rbx
   14003ba85:	jle    0x14003ba87
   14003ba87:	add    BYTE PTR [rax],ch
   14003ba89:	sub    BYTE PTR [rbx],al
   14003ba8b:	add    BYTE PTR [rsi+rdi*2+0x0],bl
   14003ba8f:	add    BYTE PTR [rdi+0x2000007e],cl
   14003ba95:	sub    BYTE PTR [rbx],al
   14003ba97:	add    BYTE PTR [rax-0x2effff82],bl
   14003ba9d:	jle    0x14003ba9f
   14003ba9f:	add    BYTE PTR [rax+rbp*1],dh
   14003baa2:	add    eax,DWORD PTR [rax]
   14003baa4:	(bad)  
   14003baa5:	jle    0x14003baa7
   14003baa7:	add    BYTE PTR [rbx+0x7f],dl
   14003baaa:	add    BYTE PTR [rax],al
   14003baac:	pop    rsp
   14003baad:	sub    BYTE PTR [rbx],al
   14003baaf:	add    BYTE PTR [rdi+rdi*2+0x0],dl
   14003bab3:	add    dh,cl
   14003bab5:	jg     0x14003bab7
   14003bab7:	add    BYTE PTR [rax+rbp*1+0x3],al
   14003babb:	add    al,dl
   14003babd:	jg     0x14003babf
   14003babf:	add    BYTE PTR [rcx-0x80],dl
   14003bac2:	add    BYTE PTR [rax],al
   14003bac4:	je     0x14003baee
   14003bac6:	add    eax,DWORD PTR [rax]
   14003bac8:	push   rsp
   14003bac9:	add    BYTE PTR [rax],0x0
   14003bacc:	fadd   DWORD PTR [rax+0x288c0000]
   14003bad2:	add    eax,DWORD PTR [rax]
   14003bad4:	call   0x14f03bb59
   14003bad9:	add    DWORD PTR [rax],0x3283c00
   14003badf:	add    BYTE PTR [rax],dl
   14003bae1:	add    DWORD PTR [rax],0x82f100
   14003bae7:	add    BYTE PTR [rax+rbp*1-0x7d0bfffd],ah
   14003baee:	add    BYTE PTR [rax],al
   14003baf0:	cwde   
   14003baf1:	test   BYTE PTR [rax],al
   14003baf3:	add    al,al
   14003baf5:	sub    BYTE PTR [rbx],al
   14003baf7:	add    BYTE PTR [rax-0x4bffff7c],ah
   14003bafd:	test   BYTE PTR [rax],al
   14003baff:	add    BYTE PTR [rcx+rbp*1],ch
   14003bb02:	add    eax,DWORD PTR [rax]
   14003bb04:	mov    ah,0x84
   14003bb06:	add    BYTE PTR [rax],al
   14003bb08:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14003bb09:	test   DWORD PTR [rax],eax
   14003bb0b:	add    ah,ch
   14003bb0d:	sub    BYTE PTR [rbx],al
   14003bb0f:	add    al,al
   14003bb11:	test   DWORD PTR [rax],eax
   14003bb13:	add    BYTE PTR [rip+0x18000086],ah        # 0x15803bb9f
   14003bb19:	sub    DWORD PTR [rbx],eax
   14003bb1b:	add    BYTE PTR [rax],ch
   14003bb1d:	xchg   BYTE PTR [rax],al
   14003bb1f:	add    BYTE PTR [rsi-0x7a],al
   14003bb22:	add    BYTE PTR [rax],al
   14003bb24:	(bad)  
   14003bb25:	sub    BYTE PTR [rbx],al
   14003bb27:	add    BYTE PTR [rax-0x7a],cl
   14003bb2a:	add    BYTE PTR [rax],al
   14003bb2c:	ja     0x14003bab4
   14003bb2e:	add    BYTE PTR [rax],al
   14003bb30:	fsubr  QWORD PTR [rax]
   14003bb32:	add    eax,DWORD PTR [rax]
   14003bb34:	js     0x14003babc
   14003bb36:	add    BYTE PTR [rax],al
   14003bb38:	mov    bl,0x86
   14003bb3a:	add    BYTE PTR [rax],al
   14003bb3c:	in     al,0x28
   14003bb3e:	add    eax,DWORD PTR [rax]
   14003bb40:	mov    ah,0x86
   14003bb42:	add    BYTE PTR [rax],al
   14003bb44:	out    dx,eax
   14003bb45:	xchg   BYTE PTR [rax],al
   14003bb47:	add    BYTE PTR [rcx+rbp*1],cl
   14003bb4a:	add    eax,DWORD PTR [rax]
   14003bb4c:	lock xchg BYTE PTR [rax],al
   14003bb4f:	add    BYTE PTR [rax],ch
   14003bb51:	xchg   DWORD PTR [rax],eax
   14003bb53:	add    BYTE PTR [rcx+rbp*1],dh
   14003bb56:	add    eax,DWORD PTR [rax]
   14003bb58:	sub    BYTE PTR [rdi-0x78a00000],al
   14003bb5e:	add    BYTE PTR [rax],al
   14003bb60:	rex sub DWORD PTR [rbx],eax
   14003bb63:	add    BYTE PTR [rax-0x79],ah
   14003bb66:	add    BYTE PTR [rax],al
   14003bb68:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14003bb69:	xchg   DWORD PTR [rax],eax
   14003bb6b:	add    BYTE PTR [rcx+rbp*1+0x3],cl
   14003bb6f:	add    BYTE PTR [rdi+rax*4-0x78300000],ah
   14003bb76:	add    BYTE PTR [rax],al
   14003bb78:	lods   al,BYTE PTR ds:[rsi]
   14003bb79:	sub    DWORD PTR [rbx],eax
   14003bb7b:	add    al,dl
   14003bb7d:	xchg   DWORD PTR [rax],eax
   14003bb7f:	add    BYTE PTR [rdi-0x78],dl
   14003bb82:	add    BYTE PTR [rax],al
   14003bb84:	cwde   
   14003bb85:	sub    DWORD PTR [rbx],eax
   14003bb87:	add    BYTE PTR [rax-0x78],bl
   14003bb8a:	add    BYTE PTR [rax],al
   14003bb8c:	adc    eax,0x58000089
   14003bb91:	sub    DWORD PTR [rbx],eax
   14003bb93:	add    BYTE PTR [rax],bl
   14003bb95:	mov    DWORD PTR [rax],eax
   14003bb97:	add    BYTE PTR [rcx-0x77],bh
   14003bb9a:	add    BYTE PTR [rax],al
   14003bb9c:	mov    BYTE PTR [rcx],ch
   14003bb9e:	add    eax,DWORD PTR [rax]
   14003bba0:	xchg   esp,eax
   14003bba1:	mov    DWORD PTR [rax],eax
   14003bba3:	add    cl,cl
   14003bba5:	mov    DWORD PTR [rax],eax
   14003bba7:	add    BYTE PTR [rdx+rbp*1+0x3],bl
   14003bbab:	add    ah,cl
   14003bbad:	mov    DWORD PTR [rax],eax
   14003bbaf:	add    BYTE PTR [rcx],bh
   14003bbb1:	mov    al,BYTE PTR [rax]
   14003bbb3:	add    ah,dl
   14003bbb5:	sub    DWORD PTR [rbx],eax
   14003bbb7:	add    BYTE PTR [rdx+rcx*4],bh
   14003bbba:	add    BYTE PTR [rax],al
   14003bbbc:	lods   eax,DWORD PTR ds:[rsi]
   14003bbbd:	mov    al,BYTE PTR [rax]
   14003bbbf:	add    al,ah
   14003bbc1:	sub    DWORD PTR [rbx],eax
   14003bbc3:	add    BYTE PTR [rax-0x34ffff76],dh
   14003bbc9:	mov    al,BYTE PTR [rax]
   14003bbcb:	add    BYTE PTR [rdx+rbp*1],al
   14003bbce:	add    eax,DWORD PTR [rax]
   14003bbd0:	int3   
   14003bbd1:	mov    al,BYTE PTR [rax]
   14003bbd3:	add    bh,ah
   14003bbd5:	mov    al,BYTE PTR [rax]
   14003bbd7:	add    BYTE PTR [rdx+rbp*1],dl
   14003bbda:	add    eax,DWORD PTR [rax]
   14003bbdc:	xor    BYTE PTR [rbx-0x74a30000],cl
   14003bbe2:	add    BYTE PTR [rax],al
   14003bbe4:	xor    al,0x2a
   14003bbe6:	add    eax,DWORD PTR [rax]
   14003bbe8:	add    BYTE PTR [rax+rax*1+0x8c1b00],cl
   14003bbef:	add    BYTE PTR [rdx+rbp*1],bl
   14003bbf2:	add    eax,DWORD PTR [rax]
   14003bbf4:	sbb    al,0x8c
   14003bbf6:	add    BYTE PTR [rax],al
   14003bbf8:	(bad)  
   14003bbf9:	mov    WORD PTR [rax],es
   14003bbfb:	add    BYTE PTR [rdx+rbp*1],ah
   14003bbfe:	add    eax,DWORD PTR [rax]
   14003bc00:	push   rax
   14003bc01:	mov    WORD PTR [rax],es
   14003bc03:	add    BYTE PTR [rbp-0x74],bh
   14003bc06:	add    BYTE PTR [rax],al
   14003bc08:	cmp    al,0x2a
   14003bc0a:	add    eax,DWORD PTR [rax]
   14003bc0c:	or     BYTE PTR [rax+rax*1+0x8cad00],0x0
   14003bc14:	sub    al,0x2a
   14003bc16:	add    eax,DWORD PTR [rax]
   14003bc18:	mov    al,0x8c
   14003bc1a:	add    BYTE PTR [rax],al
   14003bc1c:	fmul   QWORD PTR [rax+rax*1+0x329bc00]
   14003bc23:	add    ah,bl
   14003bc25:	mov    WORD PTR [rax],es
   14003bc27:	add    BYTE PTR [rcx*4+0x2a4c0000],al
   14003bc2e:	add    eax,DWORD PTR [rax]
   14003bc30:	add    al,0x8d
   14003bc32:	add    BYTE PTR [rax],al
   14003bc34:	(bad)  
   14003bc35:	lea    eax,[rax]
   14003bc37:	add    ah,ch
   14003bc39:	sub    DWORD PTR [rbx],eax
   14003bc3b:	add    BYTE PTR [rax],dh
   14003bc3d:	lea    eax,[rax]
   14003bc3f:	add    BYTE PTR [rbp+rcx*4+0x0],bh
   14003bc43:	add    BYTE PTR [rcx+rbp*1-0x7283fffd],dh
   14003bc4a:	add    BYTE PTR [rax],al
   14003bc4c:	jbe    0x14003bbdf
   14003bc4e:	add    BYTE PTR [rax],al
   14003bc50:	push   rsp
   14003bc51:	sub    al,BYTE PTR [rbx]
   14003bc53:	add    BYTE PTR [rax-0x6f],bh
   14003bc56:	add    BYTE PTR [rax],al
   14003bc58:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14003bc59:	xchg   ecx,eax
   14003bc5a:	add    BYTE PTR [rax],al
   14003bc5c:	sub    r8b,BYTE PTR [rbx]
   14003bc5f:	add    al,al
   14003bc61:	xchg   ecx,eax
   14003bc62:	add    BYTE PTR [rax],al
   14003bc64:	fist   DWORD PTR [rcx+0x29f40000]
   14003bc6a:	add    eax,DWORD PTR [rax]
   14003bc6c:	fcom   QWORD PTR [rcx-0x6e090000]
   14003bc72:	add    BYTE PTR [rax],al
   14003bc74:	or     al,0x2a
   14003bc76:	add    eax,DWORD PTR [rax]
   14003bc78:	or     BYTE PTR [rdx-0x6dd90000],dl
   14003bc7e:	add    BYTE PTR [rax],al
   14003bc80:	int3   
   14003bc81:	sub    DWORD PTR [rbx],eax
   14003bc83:	add    BYTE PTR [rax],ch
   14003bc85:	xchg   edx,eax
   14003bc86:	add    BYTE PTR [rax],al
   14003bc88:	xchg   rdx,rax
   14003bc8a:	add    BYTE PTR [rax],al
   14003bc8c:	(bad)  
   14003bc8d:	sub    DWORD PTR [rbx],eax
   14003bc8f:	add    BYTE PTR [rax-0x6e],cl
   14003bc92:	add    BYTE PTR [rax],al
   14003bc94:	movsxd edx,DWORD PTR [rdx+0x29fc0000]
   14003bc9a:	add    eax,DWORD PTR [rax]
   14003bc9c:	fs xchg edx,eax
   14003bc9e:	add    BYTE PTR [rax],al
   14003bca0:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14003bca1:	xchg   edx,eax
   14003bca2:	add    BYTE PTR [rax],al
   14003bca4:	sub    al,BYTE PTR fs:[rbx]
   14003bca7:	add    al,bl
   14003bca9:	xchg   edx,eax
   14003bcaa:	add    BYTE PTR [rax],al
   14003bcac:	rex.RXB xchg r13d,eax
   14003bcae:	add    BYTE PTR [rax],al
   14003bcb0:	ins    BYTE PTR es:[rdi],dx
   14003bcb1:	sub    al,BYTE PTR [rbx]
   14003bcb3:	add    BYTE PTR [rax-0x6b],cl
   14003bcb6:	add    BYTE PTR [rax],al
   14003bcb8:	push   0xffffffffa8000095
   14003bcbd:	sub    al,BYTE PTR [rbx]
   14003bcbf:	add    BYTE PTR [rax-0x6b],ch
   14003bcc2:	add    BYTE PTR [rax],al
   14003bcc4:	mov    dh,0x95
   14003bcc6:	add    BYTE PTR [rax],al
   14003bcc8:	shr    BYTE PTR [rdx],0x3
   14003bccb:	add    BYTE PTR [rax-0x27ffff6b],bh
   14003bcd1:	xchg   ebp,eax
   14003bcd2:	add    BYTE PTR [rax],al
   14003bcd4:	nop
   14003bcd5:	sub    al,BYTE PTR [rbx]
   14003bcd7:	add    al,bl
   14003bcd9:	xchg   ebp,eax
   14003bcda:	add    BYTE PTR [rax],al
   14003bcdc:	adc    edx,DWORD PTR [rsi+0x2ab80000]
   14003bce2:	add    eax,DWORD PTR [rax]
   14003bce4:	adc    al,0x96
   14003bce6:	add    BYTE PTR [rax],al
   14003bce8:	rex.WRXB xchg r14,rax
   14003bcea:	add    BYTE PTR [rax],al
   14003bcec:	movabs al,ds:0xda000096a000032a
   14003bcf5:	xchg   esi,eax
   14003bcf6:	add    BYTE PTR [rax],al
   14003bcf8:	mov    al,0x2a
   14003bcfa:	add    eax,DWORD PTR [rax]
   14003bcfc:	fcom   QWORD PTR [rsi-0x68ea0000]
   14003bd02:	add    BYTE PTR [rax],al
   14003bd04:	cwde   
   14003bd05:	sub    al,BYTE PTR [rbx]
   14003bd07:	add    BYTE PTR [rax-0x69],dh
   14003bd0a:	add    BYTE PTR [rax],al
   14003bd0c:	mov    ebp,0xcc000097
   14003bd11:	sub    al,BYTE PTR [rbx]
   14003bd13:	add    al,dh
   14003bd15:	xchg   edi,eax
   14003bd16:	add    BYTE PTR [rax],al
   14003bd18:	sub    DWORD PTR [rax+0x2af80000],ebx
   14003bd1e:	add    eax,DWORD PTR [rax]
   14003bd20:	sub    al,0x98
   14003bd22:	add    BYTE PTR [rax],al
   14003bd24:	rex.WR cdqe 
   14003bd26:	add    BYTE PTR [rax],al
   14003bd28:	sub    al,0x2b
   14003bd2a:	add    eax,DWORD PTR [rax]
   14003bd2c:	rex.WR cdqe 
   14003bd2e:	add    BYTE PTR [rax],al
   14003bd30:	imul   ebx,DWORD PTR [rax+0x2b040000],0x3
   14003bd37:	add    BYTE PTR [rax+rbx*4+0x0],ch
   14003bd3b:	add    BYTE PTR [rcx+0x24000098],cl
   14003bd41:	sub    eax,DWORD PTR [rbx]
   14003bd43:	add    BYTE PTR [rax+rbx*4-0x67570000],cl
   14003bd4a:	add    BYTE PTR [rax],al
   14003bd4c:	sub    r8,QWORD PTR [rbx]
   14003bd4f:	add    BYTE PTR [rax+rbx*4-0x67400000],ch
   14003bd56:	add    BYTE PTR [rax],al
   14003bd58:	push   rsp
   14003bd59:	sub    eax,DWORD PTR [rbx]
   14003bd5b:	add    al,dl
   14003bd5d:	cwde   
   14003bd5e:	add    BYTE PTR [rax],al
   14003bd60:	in     al,0x98
   14003bd62:	add    BYTE PTR [rax],al
   14003bd64:	pop    rsp
   14003bd65:	sub    eax,DWORD PTR [rbx]
   14003bd67:	add    BYTE PTR [rcx+rbx*4],al
   14003bd6a:	add    BYTE PTR [rax],al
   14003bd6c:	xchg   esi,eax
   14003bd6d:	cdq    
   14003bd6e:	add    BYTE PTR [rax],al
   14003bd70:	shr    BYTE PTR [rbx],1
   14003bd72:	add    eax,DWORD PTR [rax]
   14003bd74:	cwde   
   14003bd75:	cdq    
   14003bd76:	add    BYTE PTR [rax],al
   14003bd78:	retf   
   14003bd79:	fwait
   14003bd7a:	add    BYTE PTR [rax],al
   14003bd7c:	cwde   
   14003bd7d:	sub    eax,DWORD PTR [rbx]
   14003bd7f:	add    BYTE PTR [rax],cl
   14003bd81:	pushf  
   14003bd82:	add    BYTE PTR [rax],al
   14003bd84:	xchg   ebx,eax
   14003bd85:	sahf   
   14003bd86:	add    BYTE PTR [rax],al
   14003bd88:	sub    eax,DWORD PTR fs:[rbx]
   14003bd8b:	add    BYTE PTR [rsi+rbx*4-0x602a0000],bl
   14003bd92:	add    BYTE PTR [rax],al
   14003bd94:	add    BYTE PTR [rbx+rax*1],ch
   14003bd97:	add    al,bl
   14003bd99:	lahf   
   14003bd9a:	add    BYTE PTR [rax],al
   14003bd9c:	add    BYTE PTR [rax+0x2c800000],ah
   14003bda2:	add    eax,DWORD PTR [rax]
   14003bda4:	add    BYTE PTR [rax-0x5f580000],ah
   14003bdaa:	add    BYTE PTR [rax],al
   14003bdac:	mov    BYTE PTR [rbx+rax*1],ch
   14003bdaf:	add    ah,bh
   14003bdb1:	movabs al,ds:0x2cb00000a1790000
   14003bdba:	add    eax,DWORD PTR [rax]
   14003bdbc:	jl     0x14003bd5f
   14003bdbe:	add    BYTE PTR [rax],al
   14003bdc0:	or     ah,BYTE PTR [rdx+0x2cb80000]
   14003bdc6:	add    eax,DWORD PTR [rax]
   14003bdc8:	or     al,0xa2
   14003bdca:	add    BYTE PTR [rax],al
   14003bdcc:	in     eax,dx
   14003bdcd:	movabs ds:0xa3f000032ccc0000,eax
   14003bdd6:	add    BYTE PTR [rax],al
   14003bdd8:	stos   BYTE PTR es:[rdi],al
   14003bdd9:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14003bdda:	add    BYTE PTR [rax],al
   14003bddc:	adc    al,0x2c
   14003bdde:	add    eax,DWORD PTR [rax]
   14003bde0:	lods   al,BYTE PTR ds:[rsi]
   14003bde1:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14003bde2:	add    BYTE PTR [rax],al
   14003bde4:	out    0xa4,al
   14003bde6:	add    BYTE PTR [rax],al
   14003bde8:	js     0x14003be16
   14003bdea:	add    eax,DWORD PTR [rax]
   14003bdec:	call   0x16c03be95
   14003bdf1:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14003bdf2:	add    BYTE PTR [rax],al
   14003bdf4:	sub    al,0x3
   14003bdf7:	add    BYTE PTR [rdi+riz*4],ch
   14003bdfa:	add    BYTE PTR [rax],al
   14003bdfc:	fisubr DWORD PTR [rcx+0x2c900000]
   14003be02:	add    eax,DWORD PTR [rax]
   14003be04:	fsubr  QWORD PTR [rcx-0x55ed0000]
   14003be0a:	add    BYTE PTR [rax],al
   14003be0c:	clc    
   14003be0d:	sub    al,0x3
   14003be0f:	add    BYTE PTR [rdx+rbp*4],dl
   14003be12:	add    BYTE PTR [rax],al
   14003be14:	jrcxz  0x14003bdc0
   14003be16:	add    BYTE PTR [rax],al
   14003be18:	call   0x12403c149
   14003be1d:	stos   BYTE PTR es:[rdi],al
   14003be1e:	add    BYTE PTR [rax],al
   14003be20:	jle    0x14003bdcd
   14003be22:	add    BYTE PTR [rax],al
   14003be24:	add    BYTE PTR [rip+0xffffffffab880003],ch        # 0xeb8bbe2d
   14003be2a:	add    BYTE PTR [rax],al
   14003be2c:	test   al,0xab
   14003be2e:	add    BYTE PTR [rax],al
   14003be30:	or     al,0x2d
   14003be32:	add    eax,DWORD PTR [rax]
   14003be34:	mov    ah,0xab
   14003be36:	add    BYTE PTR [rax],al
   14003be38:	shr    DWORD PTR [rbx+0x2d140000],1
   14003be3e:	add    eax,DWORD PTR [rax]
   14003be40:	(bad)  
   14003be41:	stos   DWORD PTR es:[rdi],eax
   14003be42:	add    BYTE PTR [rax],al
   14003be44:	push   rax
   14003be45:	lods   al,BYTE PTR ds:[rsi]
   14003be46:	add    BYTE PTR [rax],al
   14003be48:	sbb    al,0x2d
   14003be4a:	add    eax,DWORD PTR [rax]
   14003be4c:	push   rax
   14003be4d:	lods   al,BYTE PTR ds:[rsi]
   14003be4e:	add    BYTE PTR [rax],al
   14003be50:	outs   dx,DWORD PTR ds:[rsi]
   14003be51:	lods   al,BYTE PTR ds:[rsi]
   14003be52:	add    BYTE PTR [rax],al
   14003be54:	push   rsp
   14003be55:	sub    eax,0xac700003
   14003be5a:	add    BYTE PTR [rax],al
   14003be5c:	sub    DWORD PTR [rax+rax*1+0x32d4c00],0xac8400
   14003be67:	add    cl,ch
   14003be69:	lods   al,BYTE PTR ds:[rsi]
   14003be6a:	add    BYTE PTR [rax],al
   14003be6c:	pop    rsp
   14003be6d:	sub    eax,0xacec0003
   14003be72:	add    BYTE PTR [rax],al
   14003be74:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14003be75:	lods   eax,DWORD PTR ds:[rsi]
   14003be76:	add    BYTE PTR [rax],al
   14003be78:	fs sub eax,0xada80003
   14003be7e:	add    BYTE PTR [rax],al
   14003be80:	iret   
   14003be81:	scas   al,BYTE PTR es:[rdi]
   14003be82:	add    BYTE PTR [rax],al
   14003be84:	xchg   esp,eax
   14003be85:	sub    eax,0xaed00003
   14003be8a:	add    BYTE PTR [rax],al
   14003be8c:	add    esi,DWORD PTR [rax+0x2d740000]
   14003be92:	add    eax,DWORD PTR [rax]
   14003be94:	sbb    al,0xb0
   14003be96:	add    BYTE PTR [rax],al
   14003be98:	rex.WRXB mov r9b,0x0
   14003be9b:	add    al,cl
   14003be9d:	sub    eax,0xb1500003
   14003bea2:	add    BYTE PTR [rax],al
   14003bea4:	mov    WORD PTR [rcx+0x2e0c0000],?
   14003beaa:	add    eax,DWORD PTR [rax]
   14003beac:	mov    WORD PTR [rcx-0x4e500000],?
   14003beb2:	add    BYTE PTR [rax],al
   14003beb4:	mov    ah,0x2d
   14003beb6:	add    eax,DWORD PTR [rax]
   14003beb8:	mov    al,0xb1
   14003beba:	add    BYTE PTR [rax],al
   14003bebc:	xor    dh,BYTE PTR [rdx+0x2dbc0000]
   14003bec2:	add    eax,DWORD PTR [rax]
   14003bec4:	xor    al,0xb2
   14003bec6:	add    BYTE PTR [rax],al
   14003bec8:	div    BYTE PTR [rdx+0x2e140000]
   14003bece:	add    eax,DWORD PTR [rax]
   14003bed0:	clc    
   14003bed1:	mov    dl,0x0
   14003bed3:	add    BYTE PTR [rdi-0x4d],dh
   14003bed6:	add    BYTE PTR [rax],al
   14003bed8:	pop    rax
   14003bed9:	add    eax,DWORD PTR cs:[rax]
   14003bedc:	js     0x14003be91
   14003bede:	add    BYTE PTR [rax],al
   14003bee0:	pushf  
   14003bee1:	mov    bl,0x0
   14003bee3:	add    BYTE PTR [rax+0x2e],ah
   14003bee6:	add    eax,DWORD PTR [rax]
   14003bee8:	pushf  
   14003bee9:	mov    bl,0x0
   14003beeb:	add    BYTE PTR [rdx],cl
   14003beed:	mov    ah,0x0
   14003beef:	add    BYTE PTR [rax+0x30],dl
   14003bef2:	add    eax,DWORD PTR [rax]
   14003bef4:	or     al,0xb4
   14003bef6:	add    BYTE PTR [rax],al
   14003bef8:	sub    eax,0x3c0000b4
   14003befd:	(bad)  
   14003befe:	add    eax,DWORD PTR [rax]
   14003bf00:	xor    BYTE PTR [rax+rax*1+0xb45a00],dh
   14003bf07:	add    BYTE PTR [rdi+rbp*1],dh
   14003bf0a:	add    eax,DWORD PTR [rax]
   14003bf0c:	ins    BYTE PTR es:[rdi],dx
   14003bf0d:	mov    ah,0x0
   14003bf0f:	add    BYTE PTR [rbp+0x440000b4],ah
   14003bf15:	(bad)  
   14003bf16:	add    eax,DWORD PTR [rax]
   14003bf18:	test   al,0xb4
   14003bf1a:	add    BYTE PTR [rax],al
   14003bf1c:	imul   esi,DWORD PTR [rbp+0x2fb80000],0xb56c0003
   14003bf26:	add    BYTE PTR [rax],al
   14003bf28:	cmc    
   14003bf29:	mov    ch,0x0
   14003bf2b:	add    BYTE PTR [rax+rsi*1+0x3],al
   14003bf2f:	add    al,bh
   14003bf31:	mov    ch,0x0
   14003bf33:	add    BYTE PTR [rdx+rdi*4+0x2f9c0000],ch
   14003bf3a:	add    eax,DWORD PTR [rax]
   14003bf3c:	lods   al,BYTE PTR ds:[rsi]
   14003bf3d:	mov    edx,0xbd110000
   14003bf42:	add    BYTE PTR [rax],al
   14003bf44:	and    al,0x30
   14003bf46:	add    eax,DWORD PTR [rax]
   14003bf48:	adc    al,0xbd
   14003bf4a:	add    BYTE PTR [rax],al
   14003bf4c:	jmp    0x14003bf0b
   14003bf4e:	add    BYTE PTR [rax],al
   14003bf50:	js     0x14003bf82
   14003bf52:	add    eax,DWORD PTR [rax]
   14003bf54:	in     al,dx
   14003bf55:	mov    ebp,0xbe730000
   14003bf5a:	add    BYTE PTR [rax],al
   14003bf5c:	xchg   esp,eax
   14003bf5d:	xor    BYTE PTR [rbx],al
   14003bf5f:	add    BYTE PTR [rax-0x5effff42],cl
   14003bf65:	mov    esi,0x2ed80000
   14003bf6a:	add    eax,DWORD PTR [rax]
   14003bf6c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14003bf6d:	mov    esi,0xbf630000
   14003bf72:	add    BYTE PTR [rax],al
   14003bf74:	shr    BYTE PTR [rsi],0x3
   14003bf77:	add    BYTE PTR [rax+0x460000bf],dl
   14003bf7d:	rol    BYTE PTR [rax],0x0
   14003bf80:	shr    BYTE PTR [rdi],1
   14003bf82:	add    eax,DWORD PTR [rax]
   14003bf84:	rex.W rol BYTE PTR [rax],0x0
   14003bf88:	xchg   edi,eax
   14003bf89:	ret    0x0
   14003bf8c:	shl    BYTE PTR [rax],0x3
   14003bf8f:	add    BYTE PTR [rax-0x64ffff3e],bl
   14003bf95:	(bad)  
   14003bf96:	add    BYTE PTR [rax],al
   14003bf98:	loopne 0x14003bfc8
   14003bf9a:	add    eax,DWORD PTR [rax]
   14003bf9c:	pushf  
   14003bf9d:	(bad)  
   14003bf9e:	add    BYTE PTR [rax],al
   14003bfa0:	jrcxz  0x14003bf66
   14003bfa2:	add    BYTE PTR [rax],al
   14003bfa4:	lods   al,BYTE PTR ds:[rsi]
   14003bfa5:	add    eax,DWORD PTR cs:[rax]
   14003bfa8:	in     al,0xc4
   14003bfaa:	add    BYTE PTR [rax],al
   14003bfac:	fcmovb st,st(6)
   14003bfae:	add    BYTE PTR [rax],al
   14003bfb0:	push   0xffffffffe400032e
   14003bfb5:	mov    BYTE PTR [rax],0x0
   14003bfb8:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14003bfb9:	mov    DWORD PTR [rax],0x32ea000
   14003bfbf:	add    BYTE PTR [rax-0xffff39],ch
   14003bfc5:	enter  0x0,0xb4
   14003bfc9:	add    eax,DWORD PTR cs:[rax]
   14003bfcc:	add    cl,cl
   14003bfce:	add    BYTE PTR [rax],al
   14003bfd0:	push   rbx
   14003bfd1:	leave  
   14003bfd2:	add    BYTE PTR [rax],al
   14003bfd4:	cmp    al,0x30
   14003bfd6:	add    eax,DWORD PTR [rax]
   14003bfd8:	push   rsp
   14003bfd9:	leave  
   14003bfda:	add    BYTE PTR [rax],al
   14003bfdc:	out    0xca,al
   14003bfde:	add    BYTE PTR [rax],al
   14003bfe0:	push   rax
   14003bfe1:	(bad)  
   14003bfe2:	add    eax,DWORD PTR [rax]
   14003bfe4:	call   0x1b903c0b3
   14003bfe9:	retf   
   14003bfea:	add    BYTE PTR [rax],al
   14003bfec:	adc    al,0x30
   14003bfee:	add    eax,DWORD PTR [rax]
   14003bff0:	jl     0x14003bfbd
   14003bff2:	add    BYTE PTR [rax],al
   14003bff4:	movabs al,ds:0xa0000330a80000cd
   14003bffd:	int    0x0
   14003bfff:	add    ch,cl
   14003c001:	(bad)  
   14003c002:	add    BYTE PTR [rax],al
   14003c004:	cld    
   14003c005:	(bad)  
   14003c006:	add    eax,DWORD PTR [rax]
   14003c008:	ror    dh,1
   14003c00a:	add    BYTE PTR [rax],al
   14003c00c:	test   esi,0x30f00000
   14003c012:	add    eax,DWORD PTR [rax]
   14003c014:	clc    
   14003c015:	(bad)  
   14003c016:	add    BYTE PTR [rax],al
   14003c018:	and    edi,ecx
   14003c01a:	add    BYTE PTR [rax],al
   14003c01c:	add    al,0x31
   14003c01e:	add    eax,DWORD PTR [rax]
   14003c020:	xor    bh,cl
   14003c022:	add    BYTE PTR [rax],al
   14003c024:	imul   ecx,edi,0x0
   14003c027:	add    al,bh
   14003c029:	xor    BYTE PTR [rbx],al
   14003c02b:	add    BYTE PTR [rdi+rcx*8+0x0],dh
   14003c02f:	add    BYTE PTR [rax],al
   14003c031:	rol    BYTE PTR [rax],1
   14003c033:	add    BYTE PTR [rcx+rsi*1],cl
   14003c036:	add    eax,DWORD PTR [rax]
   14003c038:	add    al,dl
   14003c03a:	add    BYTE PTR [rax],al
   14003c03c:	sbb    eax,0x280000d0
   14003c041:	xor    DWORD PTR [rbx],eax
   14003c043:	add    BYTE PTR [rax],ah
   14003c045:	rol    BYTE PTR [rax],1
   14003c047:	add    BYTE PTR [rbx+0x200000d0],al
   14003c04d:	xor    DWORD PTR [rbx],eax
   14003c04f:	add    BYTE PTR [rax-0x40ffff30],ah
   14003c055:	rol    BYTE PTR [rax],1
   14003c057:	add    BYTE PTR [rax],dh
   14003c059:	xor    DWORD PTR [rbx],eax
   14003c05b:	add    al,dl
   14003c05d:	rol    BYTE PTR [rax],1
   14003c05f:	add    BYTE PTR [rdi],dh
   14003c061:	rol    DWORD PTR [rax],1
   14003c063:	add    BYTE PTR [rax],bh
   14003c065:	xor    DWORD PTR [rbx],eax
   14003c067:	add    BYTE PTR [rax],bh
   14003c069:	rol    DWORD PTR [rax],1
   14003c06b:	add    BYTE PTR [rdx+rdx*8+0x0],ch
   14003c06f:	add    BYTE PTR [rcx+rsi*1],bh
   14003c072:	add    eax,DWORD PTR [rax]
   14003c074:	ins    BYTE PTR es:[rdi],dx
   14003c075:	rol    BYTE PTR [rax],cl
   14003c077:	add    ch,al
   14003c079:	rol    DWORD PTR [rax],cl
   14003c07b:	add    BYTE PTR [rcx+rsi*1-0x2c37fffd],bl
   14003c082:	add    BYTE PTR [rax],al
   14003c084:	xor    al,0xd4
   14003c086:	add    BYTE PTR [rax],al
   14003c088:	je     0x14003c0bb
   14003c08a:	add    eax,DWORD PTR [rax]
   14003c08c:	xor    al,0xd4
   14003c08e:	add    BYTE PTR [rax],al
   14003c090:	movabs al,ds:0xa0000331e40000d4
   14003c099:	(bad)  
   14003c09a:	add    BYTE PTR [rax],al
   14003c09c:	out    dx,eax
   14003c09d:	(bad)  
   14003c09e:	add    BYTE PTR [rax],al
   14003c0a0:	adc    al,0x32
   14003c0a2:	add    eax,DWORD PTR [rax]
   14003c0a4:	lock (bad) 
   14003c0a6:	add    BYTE PTR [rax],al
   14003c0a8:	and    eax,0xc0000d5
   14003c0ad:	xor    al,BYTE PTR [rbx]
   14003c0af:	add    BYTE PTR [rax],dh
   14003c0b1:	(bad)  
   14003c0b2:	add    BYTE PTR [rax],al
   14003c0b4:	push   rsp
   14003c0b5:	(bad)  
   14003c0b6:	add    BYTE PTR [rax],al
   14003c0b8:	pop    rax
   14003c0b9:	xor    al,BYTE PTR [rbx]
   14003c0bb:	add    BYTE PTR [rbp+rdx*8+0x0],dl
   14003c0bf:	add    dl,dl
   14003c0c1:	(bad)  
   14003c0c2:	add    BYTE PTR [rax],al
   14003c0c4:	(bad)  
   14003c0c5:	xor    al,BYTE PTR [rbx]
   14003c0c7:	add    ah,dl
   14003c0c9:	(bad)  
   14003c0ca:	add    BYTE PTR [rax],al
   14003c0cc:	lock (bad) 
   14003c0ce:	add    BYTE PTR [rax],al
   14003c0d0:	rex.W xor al,BYTE PTR [rbx]
   14003c0d3:	add    al,dh
   14003c0d5:	(bad)  
   14003c0d6:	add    BYTE PTR [rax],al
   14003c0d8:	movabs al,ds:0xa0000332c00000d9
   14003c0e1:	fld    DWORD PTR [rax]
   14003c0e3:	add    BYTE PTR [rcx+rbx*8+0x32400000],bh
   14003c0ea:	add    eax,DWORD PTR [rax]
   14003c0ec:	mov    esp,0xb50000d9
   14003c0f1:	fild   DWORD PTR [rax]
   14003c0f3:	add    BYTE PTR [rdx+rsi*1-0x2447fffd],cl
   14003c0fa:	add    BYTE PTR [rax],al
   14003c0fc:	scas   eax,DWORD PTR es:[rdi]
   14003c0fd:	fadd   QWORD PTR [rax]
   14003c0ff:	add    BYTE PTR [rax-0x4ffffcce],ch
   14003c105:	fadd   QWORD PTR [rax]
   14003c107:	add    ah,al
   14003c109:	fadd   QWORD PTR [rax]
   14003c10b:	add    BYTE PTR [rax+0x32],dl
   14003c10e:	add    eax,DWORD PTR [rax]
   14003c110:	(bad)  
   14003c111:	fadd   QWORD PTR [rax]
   14003c113:	add    BYTE PTR [rip+0xffffffffdc0000de],ah        # 0x11c03c1f7
   14003c119:	xor    al,BYTE PTR [rbx]
   14003c11b:	add    BYTE PTR [rax],ch
   14003c11d:	fiadd  WORD PTR [rax]
   14003c11f:	add    cl,bh
   14003c121:	fiadd  WORD PTR [rax]
   14003c123:	add    ah,dh
   14003c125:	xor    al,BYTE PTR [rbx]
   14003c127:	add    ah,bh
   14003c129:	fiadd  WORD PTR [rax]
   14003c12b:	add    BYTE PTR [rax],bl
   14003c12d:	fild   WORD PTR [rax]
   14003c12f:	add    BYTE PTR [rbx+rsi*1],ah
   14003c132:	add    eax,DWORD PTR [rax]
   14003c134:	sbb    bh,bl
   14003c136:	add    BYTE PTR [rax],al
   14003c138:	rex.WR loopne 0x14003c13b
   14003c13b:	add    BYTE PTR [rbx+rsi*1],cl
   14003c13e:	add    eax,DWORD PTR [rax]
   14003c140:	push   rsp
   14003c141:	loopne 0x14003c143
   14003c143:	add    dl,ch
   14003c145:	loopne 0x14003c147
   14003c147:	add    BYTE PTR [rax+0x32],ch
   14003c14a:	add    eax,DWORD PTR [rax]
   14003c14c:	hlt    
   14003c14d:	loopne 0x14003c14f
   14003c14f:	add    BYTE PTR [rcx+riz*8],dh
   14003c152:	add    BYTE PTR [rax],al
   14003c154:	jo     0x14003c188
   14003c156:	add    eax,DWORD PTR [rax]
   14003c158:	cmp    al,0xe1
   14003c15a:	add    BYTE PTR [rax],al
   14003c15c:	mov    ebx,0x780000e1
   14003c161:	xor    al,BYTE PTR [rbx]
   14003c163:	add    al,dl
   14003c165:	loope  0x14003c167
   14003c167:	add    BYTE PTR [rdx+riz*8],al
   14003c16a:	add    BYTE PTR [rax],al
   14003c16c:	xor    BYTE PTR [rdx],0x3
   14003c16f:	add    BYTE PTR [rdx+riz*8],al
   14003c172:	add    BYTE PTR [rax],al
   14003c174:	cmp    al,0xe2
   14003c176:	add    BYTE PTR [rax],al
   14003c178:	sub    al,0x33
   14003c17a:	add    eax,DWORD PTR [rax]
   14003c17c:	cmp    al,0xe2
   14003c17e:	add    BYTE PTR [rax],al
   14003c180:	push   rbx
   14003c181:	loop   0x14003c183
   14003c183:	add    BYTE PTR [rbx+rsi*1],dh
   14003c186:	add    eax,DWORD PTR [rax]
   14003c188:	push   rsp
   14003c189:	loop   0x14003c18b
   14003c18b:	add    BYTE PTR [rax],ah
   14003c18d:	in     al,0x0
   14003c18f:	add    BYTE PTR [rbx+rsi*1],bh
   14003c192:	add    eax,DWORD PTR [rax]
   14003c194:	fs in  al,0x0
   14003c197:	add    BYTE PTR [rcx+0x500000e7],dl
   14003c19d:	xor    eax,DWORD PTR [rbx]
   14003c19f:	add    BYTE PTR [rdi+riz*8-0x17f90000],dl
   14003c1a6:	add    BYTE PTR [rax],al
   14003c1a8:	movabs al,ds:0x30000e810000333
   14003c1b1:	jmp    0x173b3c1b6
   14003c1b6:	add    eax,DWORD PTR [rax]
   14003c1b8:	add    al,0xe9
   14003c1ba:	add    BYTE PTR [rax],al
   14003c1bc:	retf   
   14003c1bd:	(bad)  
   14003c1be:	add    BYTE PTR [rax],al
   14003c1c0:	shl    BYTE PTR [rbx],0x3
   14003c1c3:	add    ah,cl
   14003c1c5:	(bad)  
   14003c1c6:	add    BYTE PTR [rax],al
   14003c1c8:	std    
   14003c1c9:	jmp    0x14003c1cb
   14003c1cb:	add    ah,bl
   14003c1cd:	xor    eax,DWORD PTR [rbx]
   14003c1cf:	add    BYTE PTR [rax],cl
   14003c1d1:	in     al,dx
   14003c1d2:	add    BYTE PTR [rax],al
   14003c1d4:	rex.W in al,dx
   14003c1d6:	add    BYTE PTR [rax],al
   14003c1d8:	lock xor eax,DWORD PTR [rbx]
   14003c1db:	add    BYTE PTR [rax-0x14],cl
   14003c1de:	add    BYTE PTR [rax],al
   14003c1e0:	hlt    
   14003c1e1:	in     al,dx
   14003c1e2:	add    BYTE PTR [rax],al
   14003c1e4:	clc    
   14003c1e5:	xor    eax,DWORD PTR [rbx]
   14003c1e7:	add    ah,dh
   14003c1e9:	in     al,dx
   14003c1ea:	add    BYTE PTR [rax],al
   14003c1ec:	call   0x14403c2de
   14003c1f1:	xor    al,0x3
   14003c1f3:	add    al,ch
   14003c1f5:	in     eax,dx
   14003c1f6:	add    BYTE PTR [rax],al
   14003c1f8:	(bad)  
   14003c1f9:	out    dx,al
   14003c1fa:	add    BYTE PTR [rax],al
   14003c1fc:	sbb    al,0x34
   14003c1fe:	add    eax,DWORD PTR [rax]
   14003c200:	fs out dx,al
   14003c202:	add    BYTE PTR [rax],al
   14003c204:	(bad)
   14003c207:	add    BYTE PTR [rax],ch
   14003c209:	xor    al,0x3
   14003c20b:	add    al,cl
   14003c20d:	out    dx,al
   14003c20e:	add    BYTE PTR [rax],al
   14003c210:	test   bh,ch
   14003c212:	add    BYTE PTR [rax],al
   14003c214:	xor    BYTE PTR [rbx+rax*1],dh
   14003c217:	add    BYTE PTR [rdi+rbp*8-0xf120000],al
   14003c21e:	add    BYTE PTR [rax],al
   14003c220:	push   rax
   14003c221:	xor    al,0x3
   14003c223:	add    BYTE PTR [rax],dl
   14003c225:	icebp  
   14003c226:	add    BYTE PTR [rax],al
   14003c228:	jbe    0x14003c21b
   14003c22a:	add    BYTE PTR [rax],al
   14003c22c:	cmp    BYTE PTR [rbx+rax*1],dh
   14003c22f:	add    BYTE PTR [rax-0xf],bh
   14003c232:	add    BYTE PTR [rax],al
   14003c234:	xchg   edi,eax
   14003c235:	icebp  
   14003c236:	add    BYTE PTR [rax],al
   14003c238:	rex.W xor al,0x3
   14003c23b:	add    ah,bl
   14003c23d:	icebp  
   14003c23e:	add    BYTE PTR [rax],al
   14003c240:	data16 repnz add BYTE PTR [rax],al
   14003c244:	add    BYTE PTR [rip+0xfffffffff2680003],dh        # 0x1326bc24d
   14003c24a:	add    BYTE PTR [rax],al
   14003c24c:	div    edx
   14003c24e:	add    BYTE PTR [rax],al
   14003c250:	xchg   esp,eax
   14003c251:	xor    al,0x3
   14003c253:	add    al,bh
   14003c255:	repnz add BYTE PTR [rax],al
   14003c258:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14003c259:	repz add BYTE PTR [rax],al
   14003c25c:	xor    BYTE PTR [rbx+rax*1],0x0
   14003c260:	test   al,0xf3
   14003c262:	add    BYTE PTR [rax],al
   14003c264:	(bad)  
   14003c266:	add    BYTE PTR [rax],al
   14003c268:	js     0x14003c29e
   14003c26a:	add    eax,DWORD PTR [rax]
   14003c26c:	call   0x16c03c364
   14003c271:	hlt    
   14003c272:	add    BYTE PTR [rax],al
   14003c274:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14003c275:	xor    al,0x3
   14003c277:	add    BYTE PTR [rsp+rsi*8],ch
   14003c27a:	add    BYTE PTR [rax],al
   14003c27c:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14003c27d:	hlt    
   14003c27e:	add    BYTE PTR [rax],al
   14003c280:	lods   al,BYTE PTR ds:[rsi]
   14003c281:	xor    al,0x3
   14003c283:	add    BYTE PTR [rax-0x7ffff0c],ch
   14003c289:	hlt    
   14003c28a:	add    BYTE PTR [rax],al
   14003c28c:	mov    esp,0xf8000334
   14003c291:	hlt    
   14003c292:	add    BYTE PTR [rax],al
   14003c294:	ins    DWORD PTR es:[rdi],dx
   14003c295:	cmc    
   14003c296:	add    BYTE PTR [rax],al
   14003c298:	int3   
   14003c299:	xor    al,0x3
   14003c29b:	add    BYTE PTR [rax-0xb],dh
   14003c29e:	add    BYTE PTR [rax],al
   14003c2a0:	mov    cl,0xf5
   14003c2a2:	add    BYTE PTR [rax],al
   14003c2a4:	fdiv   QWORD PTR [rbx+rax*1]
   14003c2a7:	add    BYTE PTR [rbp+rsi*8-0xa1a0000],dh
   14003c2ae:	add    BYTE PTR [rax],al
   14003c2b0:	call   0x12803c5e9
   14003c2b5:	cmc    
   14003c2b6:	add    BYTE PTR [rax],al
   14003c2b8:	ja     0x14003c2b0
   14003c2ba:	add    BYTE PTR [rax],al
   14003c2bc:	lock xor al,0x3
   14003c2bf:	add    al,dl
   14003c2c1:	test   BYTE PTR [rax],0x0
   14003c2c4:	movabs ds:0xa4000335180000f7,eax
   14003c2cd:	test   DWORD PTR [rax],0xf82a00
   14003c2d3:	add    BYTE PTR [rax],ch
   14003c2d5:	xor    eax,0xf8400003
   14003c2da:	add    BYTE PTR [rax],al
   14003c2dc:	fs clc 
   14003c2de:	add    BYTE PTR [rax],al
   14003c2e0:	cmp    BYTE PTR [rip+0xfffffffff8700003],dh        # 0x13873c2e9
   14003c2e6:	add    BYTE PTR [rax],al
   14003c2e8:	mov    al,bh
   14003c2ea:	add    BYTE PTR [rax],al
   14003c2ec:	rex xor eax,0xf8900003
   14003c2f2:	add    BYTE PTR [rax],al
   14003c2f4:	xchg   ecx,eax
   14003c2f5:	clc    
   14003c2f6:	add    BYTE PTR [rax],al
   14003c2f8:	rex.R xor eax,0xf8a00003
   14003c2fe:	add    BYTE PTR [rax],al
   14003c300:	movabs eax,ds:0xac000335480000f8
   14003c309:	clc    
   14003c30a:	add    BYTE PTR [rax],al
   14003c30c:	xor    ecx,edi
   14003c30e:	add    BYTE PTR [rax],al
   14003c310:	rex.WR xor rax,0xfffffffff9340003
   14003c316:	add    BYTE PTR [rax],al
   14003c318:	lahf   
   14003c319:	stc    
   14003c31a:	add    BYTE PTR [rax],al
   14003c31c:	push   rsp
   14003c31d:	xor    eax,0xf9bc0003
   14003c322:	add    BYTE PTR [rax],al
   14003c324:	mov    dl,bh
   14003c326:	add    BYTE PTR [rax],al
   14003c328:	pop    rsp
   14003c329:	xor    eax,0xfa880003
   14003c32e:	add    BYTE PTR [rax],al
   14003c330:	sti    
   14003c331:	cld    
   14003c332:	add    BYTE PTR [rax],al
   14003c334:	fs xor eax,0xfcfc0003
   14003c33a:	add    BYTE PTR [rax],al
   14003c33c:	and    ch,bh
   14003c33e:	add    BYTE PTR [rax],al
   14003c340:	xor    BYTE PTR [rip+0xfffffffffdb80003],0x0        # 0x13dbbc34a
   14003c347:	add    BYTE PTR [rsi-0x1],cl
   14003c34a:	add    BYTE PTR [rax],al
   14003c34c:	mov    al,0x35
   14003c34e:	add    eax,DWORD PTR [rax]
   14003c350:	hlt    
   14003c351:	inc    DWORD PTR [rax]
   14003c353:	add    BYTE PTR [rcx+0x0],ch
   14003c356:	add    DWORD PTR [rax],eax
   14003c358:	mov    BYTE PTR [rip+0x6c0003],dh        # 0x1406fc361
   14003c35e:	add    DWORD PTR [rax],eax
   14003c360:	(bad)  
   14003c361:	add    BYTE PTR [rcx],al
   14003c363:	add    ah,al
   14003c365:	xor    eax,0xd00003
   14003c36a:	add    DWORD PTR [rax],eax
   14003c36c:	mov    esp,0xe0000103
   14003c371:	xor    eax,0x3d80003
   14003c376:	add    DWORD PTR [rax],eax
   14003c378:	outs   dx,BYTE PTR ds:[rsi]
   14003c379:	add    al,0x1
   14003c37b:	add    al,dl
   14003c37d:	xor    eax,0x4700003
   14003c382:	add    DWORD PTR [rax],eax
   14003c384:	out    0x5,al
   14003c386:	add    DWORD PTR [rax],eax
   14003c388:	sbb    BYTE PTR [rsi],dh
   14003c38a:	add    eax,DWORD PTR [rax]
   14003c38c:	call   0x1a403c496
   14003c391:	(bad)  
   14003c392:	add    DWORD PTR [rax],eax
   14003c394:	or     BYTE PTR [rsi],dh
   14003c396:	add    eax,DWORD PTR [rax]
   14003c398:	fs (bad) 
   14003c39a:	add    DWORD PTR [rax],eax
   14003c39c:	cld    
   14003c39d:	(bad)  
   14003c39e:	add    DWORD PTR [rax],eax
   14003c3a0:	push   rax
   14003c3a1:	add    eax,DWORD PTR ss:[rax]
   14003c3a4:	cld    
   14003c3a5:	(bad)  
   14003c3a6:	add    DWORD PTR [rax],eax
   14003c3a8:	sub    al,0x7
   14003c3aa:	add    DWORD PTR [rax],eax
   14003c3ac:	pop    rsp
   14003c3ad:	add    eax,DWORD PTR ss:[rax]
   14003c3b0:	xor    al,0x7
   14003c3b2:	add    DWORD PTR [rax],eax
   14003c3b4:	cdq    
   14003c3b5:	(bad)  
   14003c3b6:	add    DWORD PTR [rax],eax
   14003c3b8:	rex
   14003c3b9:	add    eax,DWORD PTR ss:[rax]
   14003c3bc:	pushf  
   14003c3bd:	(bad)  
   14003c3be:	add    DWORD PTR [rax],eax
   14003c3c0:	int    0x7
   14003c3c2:	add    DWORD PTR [rax],eax
   14003c3c4:	rex.W
   14003c3c5:	add    eax,DWORD PTR ss:[rax]
   14003c3c8:	or     BYTE PTR [rcx],al
   14003c3cb:	add    BYTE PTR [rsi+0x8],ah
   14003c3ce:	add    DWORD PTR [rax],eax
   14003c3d0:	fs add eax,DWORD PTR ss:[rax]
   14003c3d4:	push   0xffffffffc7000108
   14003c3d9:	or     BYTE PTR [rcx],al
   14003c3db:	add    BYTE PTR [rsi+rsi*1+0x3],ch
   14003c3df:	add    al,cl
   14003c3e1:	or     BYTE PTR [rcx],al
   14003c3e3:	add    BYTE PTR [rcx+rcx*1],dl
   14003c3e6:	add    DWORD PTR [rax],eax
   14003c3e8:	movabs al,ds:0x8d00010914000336
   14003c3f1:	or     DWORD PTR [rcx],eax
   14003c3f3:	add    BYTE PTR [rax-0x63fffcca],ch
   14003c3f9:	or     DWORD PTR [rcx],eax
   14003c3fb:	add    bh,bl
   14003c3fd:	or     DWORD PTR [rcx],eax
   14003c3ff:	add    BYTE PTR [rsi+rsi*1+0x3],dh
   14003c403:	add    al,ah
   14003c405:	or     DWORD PTR [rcx],eax
   14003c407:	add    dh,al
   14003c409:	or     al,BYTE PTR [rcx]
   14003c40b:	add    BYTE PTR [rax-0x1ffffcca],bh
   14003c411:	or     al,BYTE PTR [rcx]
   14003c413:	add    al,dh
   14003c415:	or     al,BYTE PTR [rcx]
   14003c417:	add    BYTE PTR [rax],cl
   14003c419:	(bad)  
   14003c41a:	add    eax,DWORD PTR [rax]
   14003c41c:	je     0x14003c429
   14003c41e:	add    DWORD PTR [rax],eax
   14003c420:	movsxd ecx,DWORD PTR [rcx+rax*1]
   14003c423:	add    BYTE PTR [rax],dl
   14003c425:	(bad)  
   14003c426:	add    eax,DWORD PTR [rax]
   14003c428:	fs or  al,0x1
   14003c42b:	add    BYTE PTR [rax+0xd],ch
   14003c42e:	add    DWORD PTR [rax],eax
   14003c430:	xor    BYTE PTR [rdi],dh
   14003c432:	add    eax,DWORD PTR [rax]
   14003c434:	pushf  
   14003c435:	or     eax,0xffe0001
   14003c43a:	add    DWORD PTR [rax],eax
   14003c43c:	je     0x14003c475
   14003c43e:	add    eax,DWORD PTR [rax]
   14003c440:	add    BYTE PTR [rax],dl
   14003c442:	add    DWORD PTR [rax],eax
   14003c444:	pop    rdi
   14003c445:	adc    BYTE PTR [rcx],al
   14003c447:	add    BYTE PTR [rdi+rsi*1+0x3],dl
   14003c44b:	add    BYTE PTR [rax+0x10],ah
   14003c44e:	add    DWORD PTR [rax],eax
   14003c450:	ret    
   14003c451:	adc    BYTE PTR [rcx],al
   14003c453:	add    BYTE PTR [rax+0x37],ah
   14003c456:	add    eax,DWORD PTR [rax]
   14003c458:	(bad)  
   14003c459:	adc    BYTE PTR [rcx],al
   14003c45b:	add    bl,ch
   14003c45d:	adc    BYTE PTR [rcx],al
   14003c45f:	add    BYTE PTR [rax-0x13fffcc9],bl
   14003c465:	adc    BYTE PTR [rcx],al
   14003c467:	add    bh,ch
   14003c469:	adc    eax,DWORD PTR [rcx]
   14003c46b:	add    BYTE PTR [rax-0xffffcc9],ch
   14003c471:	adc    eax,DWORD PTR [rcx]
   14003c473:	add    BYTE PTR [rdx],bl
   14003c475:	adc    al,0x1
   14003c477:	add    BYTE PTR [rax+0x1c000337],dl
   14003c47d:	adc    al,0x1
   14003c47f:	add    BYTE PTR [rdx+0x14],cl
   14003c482:	add    DWORD PTR [rax],eax
   14003c484:	ins    BYTE PTR es:[rdi],dx
   14003c485:	(bad)  
   14003c486:	add    eax,DWORD PTR [rax]
   14003c488:	rex.WR adc al,0x1
   14003c48b:	add    BYTE PTR [rax],ah
   14003c48d:	adc    eax,0x37a00001
   14003c492:	add    eax,DWORD PTR [rax]
   14003c494:	(bad)  
   14003c495:	adc    eax,0x15a00001
   14003c49a:	add    DWORD PTR [rax],eax
   14003c49c:	shl    BYTE PTR [rdi],0x3
   14003c49f:	add    BYTE PTR [rax-0xefffeeb],ch
   14003c4a5:	adc    eax,0x37e00001
   14003c4aa:	add    eax,DWORD PTR [rax]
   14003c4ac:	hlt    
   14003c4ad:	adc    eax,0x16c50001
   14003c4b2:	add    DWORD PTR [rax],eax
   14003c4b4:	call   0x10803c7f0
   14003c4b9:	(bad)  
   14003c4ba:	add    DWORD PTR [rax],eax
   14003c4bc:	fist   DWORD PTR [rsi]
   14003c4be:	add    DWORD PTR [rax],eax
   14003c4c0:	fdiv   DWORD PTR [rdi]
   14003c4c2:	add    eax,DWORD PTR [rax]
   14003c4c4:	fcom   QWORD PTR [rsi]
   14003c4c6:	add    DWORD PTR [rax],eax
   14003c4c8:	ja     0x14003c4e1
   14003c4ca:	add    DWORD PTR [rax],eax
   14003c4cc:	enter  0x337,0x0
   14003c4d0:	js     0x14003c4e9
   14003c4d2:	add    DWORD PTR [rax],eax
   14003c4d4:	xchg   BYTE PTR [rax],bl
   14003c4d6:	add    DWORD PTR [rax],eax
   14003c4d8:	shl    BYTE PTR [rdi],1
   14003c4da:	add    eax,DWORD PTR [rax]
   14003c4dc:	nop
   14003c4dd:	sbb    BYTE PTR [rcx],al
   14003c4df:	add    BYTE PTR [rax+0x19],dh
   14003c4e2:	add    DWORD PTR [rax],eax
   14003c4e4:	mov    BYTE PTR [rax],bh
   14003c4e6:	add    eax,DWORD PTR [rax]
   14003c4e8:	jl     0x14003c503
   14003c4ea:	add    DWORD PTR [rax],eax
   14003c4ec:	mov    ah,0x19
   14003c4ee:	add    DWORD PTR [rax],eax
   14003c4f0:	js     0x14003c52a
   14003c4f2:	add    eax,DWORD PTR [rax]
   14003c4f4:	mov    ah,0x19
   14003c4f6:	add    DWORD PTR [rax],eax
   14003c4f8:	cmp    DWORD PTR [rdx],ebx
   14003c4fa:	add    DWORD PTR [rax],eax
   14003c4fc:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14003c4fd:	cmp    BYTE PTR [rbx],al
   14003c4ff:	add    BYTE PTR [rdx+rbx*1],bh
   14003c502:	add    DWORD PTR [rax],eax
   14003c504:	sbb    DWORD PTR [rdx],0x1
   14003c507:	add    BYTE PTR [rax-0x7bfffcc8],al
   14003c50d:	sbb    al,BYTE PTR [rcx]
   14003c50f:	add    bl,dl
   14003c511:	sbb    al,BYTE PTR [rcx]
   14003c513:	add    BYTE PTR [rax-0x17fffcc8],bl
   14003c519:	sbb    al,BYTE PTR [rcx]
   14003c51b:	add    BYTE PTR [rcx-0x3bfffee5],dl
   14003c521:	cmp    BYTE PTR [rbx],al
   14003c523:	add    BYTE PTR [rbx+rbx*1+0x1c230001],dl
   14003c52a:	add    DWORD PTR [rax],eax
   14003c52c:	mov    ah,0x38
   14003c52e:	add    eax,DWORD PTR [rax]
   14003c530:	sub    al,0x1d
   14003c532:	add    DWORD PTR [rax],eax
   14003c534:	mov    bl,0x1d
   14003c536:	add    DWORD PTR [rax],eax
   14003c538:	sar    BYTE PTR [rbx+rax*1],1
   14003c53b:	add    al,dl
   14003c53d:	sbb    eax,0x1e080001
   14003c542:	add    DWORD PTR [rax],eax
   14003c544:	push   rax
   14003c545:	cmp    DWORD PTR [rbx],eax
   14003c547:	add    BYTE PTR [rax],cl
   14003c549:	(bad)  
   14003c54a:	add    DWORD PTR [rax],eax
   14003c54c:	mov    ds,WORD PTR [rsi]
   14003c54e:	add    DWORD PTR [rax],eax
   14003c550:	pop    rax
   14003c551:	cmp    DWORD PTR [rbx],eax
   14003c553:	add    BYTE PTR [rax-0x32fffee2],dl
   14003c559:	(bad)  
   14003c55a:	add    DWORD PTR [rax],eax
   14003c55c:	cmp    QWORD PTR [rbx],rax
   14003c55f:	add    al,dl
   14003c561:	(bad)  
   14003c562:	add    DWORD PTR [rax],eax
   14003c564:	or     al,0x1f
   14003c566:	add    DWORD PTR [rax],eax
   14003c568:	push   0xc000339
   14003c56d:	(bad)  
   14003c56e:	add    DWORD PTR [rax],eax
   14003c570:	push   rbx
   14003c571:	(bad)  
   14003c572:	add    DWORD PTR [rax],eax
   14003c574:	mov    esp,0x54000339
   14003c579:	(bad)  
   14003c57a:	add    DWORD PTR [rax],eax
   14003c57c:	and    QWORD PTR [rcx],rax
   14003c57f:	add    ah,al
   14003c581:	cmp    al,0x3
   14003c583:	add    BYTE PTR [rax+0x21],cl
   14003c586:	add    DWORD PTR [rax],eax
   14003c588:	(bad)  
   14003c589:	and    DWORD PTR [rcx],eax
   14003c58b:	add    BYTE PTR [rax+0x39],dh
   14003c58e:	add    eax,DWORD PTR [rax]
   14003c590:	test   BYTE PTR [rcx],ah
   14003c592:	add    DWORD PTR [rax],eax
   14003c594:	mov    esi,0x7c000121
   14003c599:	cmp    DWORD PTR [rbx],eax
   14003c59b:	add    al,al
   14003c59d:	and    DWORD PTR [rcx],eax
   14003c59f:	add    dl,bh
   14003c5a1:	and    DWORD PTR [rcx],eax
   14003c5a3:	add    BYTE PTR [rax-0x3fffcc7],cl
   14003c5a9:	and    DWORD PTR [rcx],eax
   14003c5ab:	add    BYTE PTR [rax],ah
   14003c5ad:	and    al,BYTE PTR [rcx]
   14003c5af:	add    ah,ch
   14003c5b1:	cmp    BYTE PTR [rbx],al
   14003c5b3:	add    BYTE PTR [rax],ah
   14003c5b5:	and    al,BYTE PTR [rcx]
   14003c5b7:	add    BYTE PTR [rdx+riz*1+0x1],al
   14003c5bb:	add    ah,dh
   14003c5bd:	cmp    BYTE PTR [rbx],al
   14003c5bf:	add    BYTE PTR [rdx+riz*1+0x1],al
   14003c5c3:	add    BYTE PTR [rax+0x22],ch
   14003c5c6:	add    DWORD PTR [rax],eax
   14003c5c8:	cld    
   14003c5c9:	cmp    BYTE PTR [rbx],al
   14003c5cb:	add    BYTE PTR [rax+0x22],ch
   14003c5ce:	add    DWORD PTR [rax],eax
   14003c5d0:	mov    WORD PTR [rdx],fs
   14003c5d2:	add    DWORD PTR [rax],eax
   14003c5d4:	in     al,0x38
   14003c5d6:	add    eax,DWORD PTR [rax]
   14003c5d8:	mov    WORD PTR [rdx],fs
   14003c5da:	add    DWORD PTR [rax],eax
   14003c5dc:	mov    al,0x22
   14003c5de:	add    DWORD PTR [rax],eax
   14003c5e0:	add    al,0x39
   14003c5e2:	add    eax,DWORD PTR [rax]
   14003c5e4:	mov    al,0x22
   14003c5e6:	add    DWORD PTR [rax],eax
   14003c5e8:	lock and al,BYTE PTR [rcx]
   14003c5eb:	add    BYTE PTR [rax+0x39],al
   14003c5ee:	add    eax,DWORD PTR [rax]
   14003c5f0:	lock and al,BYTE PTR [rcx]
   14003c5f3:	add    BYTE PTR [rbx+riz*1+0x1],dh
   14003c5f7:	add    BYTE PTR [rcx+rdi*1],cl
   14003c5fa:	add    eax,DWORD PTR [rax]
   14003c5fc:	je     0x14003c621
   14003c5fe:	add    DWORD PTR [rax],eax
   14003c600:	or     DWORD PTR [rcx+rax*1],esp
   14003c603:	add    BYTE PTR [rax],ch
   14003c605:	cmp    DWORD PTR [rbx],eax
   14003c607:	add    BYTE PTR [rsp],cl
   14003c60a:	add    DWORD PTR [rax],eax
   14003c60c:	xchg   esi,eax
   14003c60d:	and    al,0x1
   14003c60f:	add    BYTE PTR [rax],bl
   14003c611:	cmp    DWORD PTR [rbx],eax
   14003c613:	add    BYTE PTR [rax-0x24fffedc],bl
   14003c619:	and    al,0x1
   14003c61b:	add    BYTE PTR [rax],bh
   14003c61d:	cmp    DWORD PTR [rbx],eax
   14003c61f:	add    ah,bl
   14003c621:	and    al,0x1
   14003c623:	add    BYTE PTR [rdx],bh
   14003c625:	and    eax,0x39b00001
   14003c62a:	add    eax,DWORD PTR [rax]
   14003c62c:	push   0xffffffffa6000125
   14003c631:	and    eax,0x38700001
   14003c636:	add    eax,DWORD PTR [rax]
   14003c638:	enter  0x125,0x0
   14003c63c:	sub    esp,DWORD PTR [rsi]
   14003c63e:	add    DWORD PTR [rax],eax
   14003c640:	xchg   esp,eax
   14003c641:	cmp    DWORD PTR [rbx],eax
   14003c643:	add    BYTE PTR [rsi+riz*1],ch
   14003c646:	add    DWORD PTR [rax],eax
   14003c648:	mov    al,0x33
   14003c64a:	add    DWORD PTR [rax],eax
   14003c64c:	mov    esp,0x4800033a
   14003c651:	xor    al,0x1
   14003c653:	add    ah,dh
   14003c655:	xor    al,0x1
   14003c657:	add    BYTE PTR [rax+0x50000339],ah
   14003c65d:	xor    eax,0x36920001
   14003c662:	add    DWORD PTR [rax],eax
   14003c664:	cld    
   14003c665:	cmp    eax,DWORD PTR [rbx]
   14003c667:	add    BYTE PTR [rsi+rsi*1+0x378e0001],dl
   14003c66e:	add    DWORD PTR [rax],eax
   14003c670:	hlt    
   14003c671:	cmp    eax,DWORD PTR [rbx]
   14003c673:	add    BYTE PTR [rax-0x2efffec9],dl
   14003c679:	cmp    DWORD PTR [rcx],eax
   14003c67b:	add    BYTE PTR [rbx+rdi*1+0x39d40003],bh
   14003c682:	add    DWORD PTR [rax],eax
   14003c684:	xchg   ecx,eax
   14003c685:	cmp    al,BYTE PTR [rcx]
   14003c687:	add    al,ch
   14003c689:	cmp    al,BYTE PTR [rbx]
   14003c68b:	add    BYTE PTR [rdx+rdi*1+0x3ea40001],dl
   14003c692:	add    DWORD PTR [rax],eax
   14003c694:	jo     0x14003c6d1
   14003c696:	add    eax,DWORD PTR [rax]
   14003c698:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14003c699:	add    DWORD PTR ds:[rax],eax
   14003c69c:	mov    ebp,0x8400013e
   14003c6a1:	cmp    al,0x3
   14003c6a3:	add    al,al
   14003c6a5:	add    DWORD PTR ds:[rax],eax
   14003c6a8:	mov    edi,0x400013f
   14003c6ad:	cmp    eax,DWORD PTR [rbx]
   14003c6af:	add    al,al
   14003c6b1:	(bad)  
   14003c6b2:	add    DWORD PTR [rax],eax
   14003c6b4:	mov    ah,0x46
   14003c6b6:	add    DWORD PTR [rax],eax
   14003c6b8:	xor    al,0x3b
   14003c6ba:	add    eax,DWORD PTR [rax]
   14003c6bc:	mov    ah,0x46
   14003c6be:	add    DWORD PTR [rax],eax
   14003c6c0:	cli    
   14003c6c1:	rex.RX add DWORD PTR [rax],r8d
   14003c6c4:	push   0xfffffffffc00033b
   14003c6c9:	rex.RX add DWORD PTR [rax],r8d
   14003c6cc:	fiadd  WORD PTR [rdi+0x1]
   14003c6cf:	add    BYTE PTR [rax],bl
   14003c6d1:	cmp    eax,DWORD PTR [rbx]
   14003c6d3:	add    al,ah
   14003c6d5:	rex.RXB add DWORD PTR [r8],r8d
   14003c6d8:	push   rdx
   14003c6d9:	rex.WX add QWORD PTR [rax],rax
   14003c6dc:	(bad)  
   14003c6dd:	cmp    DWORD PTR [rbx],eax
   14003c6df:	add    BYTE PTR [rdx+rcx*2+0x1],dl
   14003c6e3:	add    BYTE PTR [rax+0x4400014b],dh
   14003c6e9:	cmp    al,BYTE PTR [rbx]
   14003c6eb:	add    BYTE PTR [rax+0x1200014b],dh
   14003c6f1:	add    QWORD PTR [rax],r8
   14003c6f4:	sub    al,0x3c
   14003c6f6:	add    eax,DWORD PTR [rax]
   14003c6f8:	adc    al,0x4c
   14003c6fa:	add    DWORD PTR [rax],eax
   14003c6fc:	sub    eax,0x7c00014c
   14003c701:	cmp    al,0x3
   14003c703:	add    BYTE PTR [rax],dh
   14003c705:	add    QWORD PTR [rax],r8
   14003c708:	lea    ecx,[rbp+0x1]
   14003c70b:	add    BYTE PTR [rax-0x6ffffcc5],al
   14003c711:	add    QWORD PTR [r8],r8
   14003c714:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14003c715:	add    QWORD PTR [r8],r8
   14003c718:	lock cmp al,BYTE PTR [rbx]
   14003c71b:	add    BYTE PTR [rax-0x71fffeb3],ch
   14003c721:	rex.WRX add QWORD PTR [rax],r8
   14003c724:	clc    
   14003c725:	cmp    al,BYTE PTR [rbx]
   14003c727:	add    BYTE PTR [rax-0x24fffeb2],dl
   14003c72d:	push   rax
   14003c72e:	add    DWORD PTR [rax],eax
   14003c730:	push   rsp
   14003c731:	cmp    eax,DWORD PTR [rbx]
   14003c733:	add    ah,bl
   14003c735:	push   rax
   14003c736:	add    DWORD PTR [rax],eax
   14003c738:	scas   al,BYTE PTR es:[rdi]
   14003c739:	push   rcx
   14003c73a:	add    DWORD PTR [rax],eax
   14003c73c:	push   0xffffffffb000033c
   14003c741:	push   rcx
   14003c742:	add    DWORD PTR [rax],eax
   14003c744:	mov    dh,0x56
   14003c746:	add    DWORD PTR [rax],eax
   14003c748:	(bad)  
   14003c749:	cmp    eax,DWORD PTR [rbx]
   14003c74b:	add    BYTE PTR [rax-0x2efffeaa],bh
   14003c751:	push   rsi
   14003c752:	add    DWORD PTR [rax],eax
   14003c754:	mov    WORD PTR [rbx+rax*1],?
   14003c757:	add    al,bh
   14003c759:	push   rsi
   14003c75a:	add    DWORD PTR [rax],eax
   14003c75c:	sbb    dl,BYTE PTR [rdi+0x1]
   14003c75f:	add    al,ch
   14003c761:	cmp    al,0x3
   14003c763:	add    BYTE PTR [rdi+rdx*2],bl
   14003c766:	add    DWORD PTR [rax],eax
   14003c768:	rex.XB push r15
   14003c76a:	add    DWORD PTR [rax],eax
   14003c76c:	or     BYTE PTR [rip+0x57580003],bh        # 0x1975bc775
   14003c772:	add    DWORD PTR [rax],eax
   14003c774:	mov    bh,0x57
   14003c776:	add    DWORD PTR [rax],eax
   14003c778:	xor    al,0x3c
   14003c77a:	add    eax,DWORD PTR [rax]
   14003c77c:	mov    eax,0x68000157
   14003c781:	pop    rax
   14003c782:	add    DWORD PTR [rax],eax
   14003c784:	(bad)  
   14003c785:	cmp    BYTE PTR [rbx],al
   14003c787:	add    ah,bl
   14003c789:	pop    rax
   14003c78a:	add    DWORD PTR [rax],eax
   14003c78c:	mov    bh,0x5f
   14003c78e:	add    DWORD PTR [rax],eax
   14003c790:	clc    
   14003c791:	cmp    DWORD PTR [rbx],eax
   14003c793:	add    BYTE PTR [rax-0x29fffea1],bh
   14003c799:	pop    rdi
   14003c79a:	add    DWORD PTR [rax],eax
   14003c79c:	push   rax
   14003c79d:	cmp    al,0x3
   14003c79f:	add    al,bl
   14003c7a1:	pop    rdi
   14003c7a2:	add    DWORD PTR [rax],eax
   14003c7a4:	neg    BYTE PTR [rdi+0x1]
   14003c7a7:	add    BYTE PTR [rax+0x3c],bl
   14003c7aa:	add    eax,DWORD PTR [rax]
   14003c7ac:	clc    
   14003c7ad:	pop    rdi
   14003c7ae:	add    DWORD PTR [rax],eax
   14003c7b0:	or     eax,0x24000162
   14003c7b5:	cmp    eax,DWORD PTR [rbx]
   14003c7b7:	add    BYTE PTR [rax],dl
   14003c7b9:	(bad)  
   14003c7bb:	add    BYTE PTR [rdi],dl
   14003c7bd:	movsxd eax,DWORD PTR [rcx]
   14003c7bf:	add    BYTE PTR [rbx+rdi*1+0x63180003],ch
   14003c7c6:	add    DWORD PTR [rax],eax
   14003c7c8:	rex.WB
   14003c7c9:	add    DWORD PTR fs:[rax],eax
   14003c7cc:	xchg   esp,eax
   14003c7cd:	cmp    eax,DWORD PTR [rbx]
   14003c7cf:	add    BYTE PTR [rsp+riz*2+0x1],cl
   14003c7d3:	add    BYTE PTR [rbx+0x64],ah
   14003c7d6:	add    DWORD PTR [rax],eax
   14003c7d8:	(bad)  
   14003c7d9:	cmp    al,0x3
   14003c7db:	add    BYTE PTR [rsp+riz*2+0x1],ah
   14003c7df:	add    BYTE PTR [rbx+0x1c000165],cl
   14003c7e5:	cmp    al,0x3
   14003c7e7:	add    BYTE PTR [rbp+riz*2+0x65c00001],cl
   14003c7ee:	add    DWORD PTR [rax],eax
   14003c7f0:	adc    BYTE PTR [rbx],bh
   14003c7f2:	add    eax,DWORD PTR [rax]
   14003c7f4:	shl    BYTE PTR [rbp+0x1],0x0
   14003c7f8:	mov    dl,0x6a
   14003c7fa:	add    DWORD PTR [rax],eax
   14003c7fc:	adc    BYTE PTR [rdx],bh
   14003c7fe:	add    eax,DWORD PTR [rax]
   14003c800:	mov    ah,0x6a
   14003c802:	add    DWORD PTR [rax],eax
   14003c804:	int3   
   14003c805:	imul   eax,DWORD PTR [rcx],0x0
   14003c808:	sub    al,0x3a
   14003c80a:	add    eax,DWORD PTR [rax]
   14003c80c:	int3   
   14003c80d:	imul   eax,DWORD PTR [rcx],0x0
   14003c810:	rex.W ins BYTE PTR es:[rdi],dx
   14003c812:	add    DWORD PTR [rax],eax
   14003c814:	cmp    BYTE PTR [rdx],bh
   14003c816:	add    eax,DWORD PTR [rax]
   14003c818:	rex.W ins BYTE PTR es:[rdi],dx
   14003c81a:	add    DWORD PTR [rax],eax
   14003c81c:	mov    gs,WORD PTR [rcx+rax*1+0x0]
   14003c820:	cmp    al,0x3
   14003c823:	add    BYTE PTR [rsp+rbp*2+0x6d2b0001],ah
   14003c82a:	add    DWORD PTR [rax],eax
   14003c82c:	(bad)  
   14003c82d:	cmp    BYTE PTR [rbx],al
   14003c82f:	add    BYTE PTR [rbp+rbp*2+0x6daa0001],al
   14003c836:	add    DWORD PTR [rax],eax
   14003c838:	lock cmp al,0x3
   14003c83b:	add    BYTE PTR [rbp+rbp*2+0x6de70001],ch
   14003c842:	add    DWORD PTR [rax],eax
   14003c844:	adc    BYTE PTR [rip+0x6e200003],bh        # 0x1ae23c84d
   14003c84a:	add    DWORD PTR [rax],eax
   14003c84c:	fild   QWORD PTR [rsi+0x1]
   14003c84f:	add    BYTE PTR [rsp+rdi*1+0x6f0c0003],bh
   14003c856:	add    DWORD PTR [rax],eax
   14003c858:	pop    rax
   14003c859:	outs   dx,DWORD PTR ds:[rsi]
   14003c85a:	add    DWORD PTR [rax],eax
   14003c85c:	(bad)  
   14003c85d:	cmp    DWORD PTR [rbx],eax
   14003c85f:	add    BYTE PTR [rax+0x6f],bl
   14003c862:	add    DWORD PTR [rax],eax
   14003c864:	rex.X jb 0x14003c868
   14003c867:	add    BYTE PTR [rax+0x3a],bh
   14003c86a:	add    eax,DWORD PTR [rax]
   14003c86c:	rex.R jb 0x14003c870
   14003c86f:	add    BYTE PTR [rbp-0x63fffe8b],bh
   14003c875:	cmp    al,BYTE PTR [rbx]
   14003c877:	add    al,al
   14003c879:	jne    0x14003c87c
   14003c87b:	add    BYTE PTR [rsi+0x58000177],cl
   14003c881:	cmp    al,BYTE PTR [rbx]
   14003c883:	add    BYTE PTR [rax-0x28fffe89],dl
   14003c889:	ja     0x14003c88c
   14003c88b:	add    BYTE PTR [rax+0x3c],cl
   14003c88e:	add    eax,DWORD PTR [rax]
   14003c890:	fdiv   DWORD PTR [rdi+0x1]
   14003c893:	add    BYTE PTR [rbx+0xc000178],bl
   14003c899:	cmp    al,0x3
   14003c89b:	add    BYTE PTR [rax+rdi*2+0x7d7b0001],bl
   14003c8a2:	add    DWORD PTR [rax],eax
   14003c8a4:	loopne 0x14003c8e0
   14003c8a6:	add    eax,DWORD PTR [rax]
   14003c8a8:	jl     0x14003c927
   14003c8aa:	add    DWORD PTR [rax],eax
   14003c8ac:	enter  0x17d,0x0
   14003c8b0:	mov    ah,0x3c
   14003c8b2:	add    eax,DWORD PTR [rax]
   14003c8b4:	enter  0x17d,0x0
   14003c8b8:	fistp  QWORD PTR [rbp+0x1]
   14003c8bb:	add    BYTE PTR [rsp+rdi*1+0x7de00003],ah
   14003c8c2:	add    DWORD PTR [rax],eax
   14003c8c4:	cmp    bh,BYTE PTR [rsi+0x1]
   14003c8c7:	add    BYTE PTR [rsp+rdi*1+0x7e3c0003],ch
   14003c8ce:	add    DWORD PTR [rax],eax
   14003c8d0:	or     eax,DWORD PTR [rax+0x3c940001]
   14003c8d6:	add    eax,DWORD PTR [rax]
   14003c8d8:	or     al,0x80
   14003c8da:	add    DWORD PTR [rax],eax
   14003c8dc:	test   BYTE PTR [rdx+0x39dc0001],al
   14003c8e2:	add    eax,DWORD PTR [rax]
   14003c8e4:	rex.WR add QWORD PTR [rcx],0x0
   14003c8e8:	ins    DWORD PTR es:[rdi],dx
   14003c8e9:	add    DWORD PTR [rcx],0x0
   14003c8ec:	loopne 0x14003c92a
   14003c8ee:	add    eax,DWORD PTR [rax]
   14003c8f0:	jo     0x14003c875
   14003c8f2:	add    DWORD PTR [rax],eax
   14003c8f4:	mov    bh,0x83
   14003c8f6:	add    DWORD PTR [rax],eax
   14003c8f8:	clc    
   14003c8f9:	cmp    al,0x3
   14003c8fb:	add    al,ch
   14003c8fd:	test   BYTE PTR [rcx],al
   14003c8ff:	add    al,ch
   14003c901:	test   DWORD PTR [rcx],eax
   14003c903:	add    al,dh
   14003c905:	(bad)  
   14003c906:	add    eax,DWORD PTR [rax]
   14003c908:	call   0x12e03ca92
   14003c90d:	xchg   BYTE PTR [rcx],al
   14003c90f:	add    BYTE PTR [rax],ch
   14003c911:	cmp    BYTE PTR [rbx],al
   14003c913:	add    ah,bh
   14003c915:	xchg   BYTE PTR [rcx],al
   14003c917:	add    BYTE PTR [rdi+rax*4],ah
   14003c91a:	add    DWORD PTR [rax],eax
   14003c91c:	fdivr  QWORD PTR [rip+0xffffffff87240003]        # 0xc727c925
   14003c922:	add    DWORD PTR [rax],eax
   14003c924:	xchg   QWORD PTR [r9],rax
   14003c927:	add    ah,dl
   14003c929:	cmp    eax,0x87540003
   14003c92e:	add    DWORD PTR [rax],eax
   14003c930:	mov    dh,0x87
   14003c932:	add    DWORD PTR [rax],eax
   14003c934:	pushf  
   14003c935:	cmp    eax,0x87b80003
   14003c93a:	add    DWORD PTR [rax],eax
   14003c93c:	sbb    cl,BYTE PTR [rax+0x3d240001]
   14003c942:	add    eax,DWORD PTR [rax]
   14003c944:	sbb    al,0x88
   14003c946:	add    DWORD PTR [rax],eax
   14003c948:	mov    DWORD PTR [rax+0x3d8c0001],ecx
   14003c94e:	add    eax,DWORD PTR [rax]
   14003c950:	mov    WORD PTR [rax-0x7714ffff],cs
   14003c956:	add    DWORD PTR [rax],eax
   14003c958:	int3   
   14003c959:	cmp    eax,0x88ec0003
   14003c95e:	add    DWORD PTR [rax],eax
   14003c960:	pop    rbp
   14003c961:	mov    DWORD PTR [rcx],eax
   14003c963:	add    ah,ch
   14003c965:	cmp    eax,0x89600003
   14003c96a:	add    DWORD PTR [rax],eax
   14003c96c:	ror    DWORD PTR [rcx+0x3de40001],1
   14003c972:	add    eax,DWORD PTR [rax]
   14003c974:	(bad)  
   14003c975:	mov    DWORD PTR [rcx],eax
   14003c977:	add    BYTE PTR [rbx],dh
   14003c979:	mov    al,BYTE PTR [rcx]
   14003c97b:	add    BYTE PTR [rbp+rdi*1+0x3],dl
   14003c97f:	add    BYTE PTR [rdx+rcx*4],dh
   14003c982:	add    DWORD PTR [rax],eax
   14003c984:	xchg   esi,eax
   14003c985:	mov    al,BYTE PTR [rcx]
   14003c987:	add    BYTE PTR [rbp+rdi*1-0x7567fffd],bh
   14003c98e:	add    DWORD PTR [rax],eax
   14003c990:	test   DWORD PTR [rdx+0x3d440001],0x8af80003
   14003c99a:	add    DWORD PTR [rax],eax
   14003c99c:	pop    rdx
   14003c99d:	mov    eax,DWORD PTR [rcx]
   14003c99f:	add    BYTE PTR [rbp+rdi*1-0x74a3fffd],ch
   14003c9a6:	add    DWORD PTR [rax],eax
   14003c9a8:	mov    ebx,0x8400018b
   14003c9ad:	cmp    eax,0x8bbc0003
   14003c9b2:	add    DWORD PTR [rax],eax
   14003c9b4:	sbb    ecx,DWORD PTR [rcx+rax*1+0x33d7400]
   14003c9bb:	add    BYTE PTR [rsp+rcx*4],bl
   14003c9be:	add    DWORD PTR [rax],eax
   14003c9c0:	jnp    0x14003c94e
   14003c9c2:	add    DWORD PTR [rax],eax
   14003c9c4:	xor    al,0x3d
   14003c9c6:	add    eax,DWORD PTR [rax]
   14003c9c8:	jl     0x14003c956
   14003c9ca:	add    DWORD PTR [rax],eax
   14003c9cc:	fimul  WORD PTR [rcx+rax*1+0x33d6400]
   14003c9d3:	add    al,ah
   14003c9d5:	mov    WORD PTR [rcx],es
   14003c9d7:	add    BYTE PTR [rdi-0x73],bl
   14003c9da:	add    DWORD PTR [rax],eax
   14003c9dc:	xchg   esp,eax
   14003c9dd:	cmp    eax,0x8d600003
   14003c9e2:	add    DWORD PTR [rax],eax
   14003c9e4:	fisttp WORD PTR [rbp+0x3d1c0001]
   14003c9ea:	add    eax,DWORD PTR [rax]
   14003c9ec:	adc    BYTE PTR [rsi-0x7175ffff],cl
   14003c9f2:	add    DWORD PTR [rax],eax
   14003c9f4:	(bad)  
   14003c9f5:	cmp    eax,0x8e8c0003
   14003c9fa:	add    DWORD PTR [rax],eax
   14003c9fc:	(bad)  
   14003c9fd:	pop    QWORD PTR [rcx]
   14003c9ff:	add    BYTE PTR [rbp+rdi*1+0x3],cl
   14003ca03:	add    BYTE PTR [rax],cl
   14003ca05:	pop    QWORD PTR [rcx]
   14003ca07:	add    BYTE PTR [rdi-0x4bfffe71],al
   14003ca0d:	cmp    eax,0x8f880003
   14003ca12:	add    DWORD PTR [rax],eax
   14003ca14:	add    dl,BYTE PTR [rax+0x3d3c0001]
   14003ca1a:	add    eax,DWORD PTR [rax]
   14003ca1c:	add    al,0x90
   14003ca1e:	add    DWORD PTR [rax],eax
   14003ca20:	adc    DWORD PTR [rax+0x3da40001],0x3
   14003ca27:	add    BYTE PTR [rax+rdx*4-0x6f01ffff],al
   14003ca2e:	add    DWORD PTR [rax],eax
   14003ca30:	jl     0x14003ca6f
   14003ca32:	add    eax,DWORD PTR [rax]
   14003ca34:	add    BYTE PTR [rcx-0x6e85ffff],dl
   14003ca3a:	add    DWORD PTR [rax],eax
   14003ca3c:	ins    BYTE PTR es:[rdi],dx
   14003ca3d:	cmp    eax,0x917c0003
   14003ca42:	add    DWORD PTR [rax],eax
   14003ca44:	not    BYTE PTR [rcx+0x3d2c0001]
   14003ca4a:	add    eax,DWORD PTR [rax]
   14003ca4c:	clc    
   14003ca4d:	xchg   ecx,eax
   14003ca4e:	add    DWORD PTR [rax],eax
   14003ca50:	ja     0x14003c9e4
   14003ca52:	add    DWORD PTR [rax],eax
   14003ca54:	pop    rsp
   14003ca55:	cmp    eax,0x927c0003
   14003ca5a:	add    DWORD PTR [rax],eax
   14003ca5c:	(bad)  
   14003ca5d:	xchg   ebx,eax
   14003ca5e:	add    DWORD PTR [rax],eax
   14003ca60:	hlt    
   14003ca61:	cmp    eax,0x93f00003
   14003ca66:	add    DWORD PTR [rax],eax
   14003ca68:	xor    al,0x95
   14003ca6a:	add    DWORD PTR [rax],eax
   14003ca6c:	add    al,0x3e
   14003ca6e:	add    eax,DWORD PTR [rax]
   14003ca70:	xor    al,0x95
   14003ca72:	add    DWORD PTR [rax],eax
   14003ca74:	call   QWORD PTR [rbp+0x3e0c0001]
   14003ca7a:	add    eax,DWORD PTR [rax]
   14003ca7c:	add    BYTE PTR [rsi-0x6930ffff],dl
   14003ca82:	add    DWORD PTR [rax],eax
   14003ca84:	rex
   14003ca85:	add    eax,DWORD PTR ds:[rax]
   14003ca88:	fcom   DWORD PTR [rsi-0x6860ffff]
   14003ca8e:	add    DWORD PTR [rax],eax
   14003ca90:	sbb    BYTE PTR [rsi],bh
   14003ca92:	add    eax,DWORD PTR [rax]
   14003ca94:	mov    esp,0x86000197
   14003ca99:	cwde   
   14003ca9a:	add    DWORD PTR [rax],eax
   14003ca9c:	sub    al,0x3e
   14003ca9e:	add    eax,DWORD PTR [rax]
   14003caa0:	mov    BYTE PTR [rax-0x66aaffff],bl
   14003caa6:	add    DWORD PTR [rax],eax
   14003caa8:	ins    BYTE PTR es:[rdi],dx
   14003caa9:	add    eax,DWORD PTR ds:[rax]
   14003caac:	pop    rax
   14003caad:	cdq    
   14003caae:	add    DWORD PTR [rax],eax
   14003cab0:	setp   BYTE PTR [rcx]
   14003cab3:	add    BYTE PTR [rsi+rdi*1+0x3],dl
   14003cab7:	add    BYTE PTR [rax],bl
   14003cab9:	(bad)  
   14003caba:	add    DWORD PTR [rax],eax
   14003cabc:	rex.WR (bad) 
   14003cabe:	add    DWORD PTR [rax],eax
   14003cac0:	je     0x14003cb00
   14003cac2:	add    eax,DWORD PTR [rax]
   14003cac4:	rex.WR (bad) 
   14003cac6:	add    DWORD PTR [rax],eax
   14003cac8:	(bad)
   14003cacb:	add    BYTE PTR [rax-0x2bfffcc2],cl
   14003cad1:	fwait
   14003cad2:	add    DWORD PTR [rax],eax
   14003cad4:	cmp    DWORD PTR [rcx+rax*1+0x33e7c00],ebx
   14003cadb:	add    BYTE PTR [rax-0x63],ah
   14003cade:	add    DWORD PTR [rax],eax
   14003cae0:	scas   al,BYTE PTR es:[rdi]
   14003cae1:	popf   
   14003cae2:	add    DWORD PTR [rax],eax
   14003cae4:	cwde   
   14003cae5:	add    eax,DWORD PTR ds:[rax]
   14003cae8:	rcr    BYTE PTR [rbp-0x6125ffff],1
   14003caee:	add    DWORD PTR [rax],eax
   14003caf0:	mov    esp,0xdc00033e
   14003caf5:	sahf   
   14003caf6:	add    DWORD PTR [rax],eax
   14003caf8:	fsub   QWORD PTR [rbx+0x3ea00001]
   14003cafe:	add    eax,DWORD PTR [rax]
   14003cb00:	sbb    BYTE PTR [rcx+rax*1+0x1a48400],ah
   14003cb07:	add    al,ah
   14003cb09:	add    eax,DWORD PTR ds:[rax]
   14003cb0c:	test   BYTE PTR [rcx+rax*1+0x1a74a00],ah
   14003cb13:	add    ah,al
   14003cb15:	add    eax,DWORD PTR ds:[rax]
   14003cb18:	mov    BYTE PTR [rdi-0x547dffff],ah
   14003cb1e:	add    DWORD PTR [rax],eax
   14003cb20:	adc    BYTE PTR [rdi],bh
   14003cb22:	add    eax,DWORD PTR [rax]
   14003cb24:	test   BYTE PTR [rbx-0x53deffff],ch
   14003cb2a:	add    DWORD PTR [rax],eax
   14003cb2c:	call   0x16403ce6f
   14003cb31:	lods   al,BYTE PTR ds:[rsi]
   14003cb32:	add    DWORD PTR [rax],eax
   14003cb34:	popf   
   14003cb35:	mov    bh,0x1
   14003cb37:	add    al,bh
   14003cb39:	add    eax,DWORD PTR ds:[rax]
   14003cb3c:	movabs al,ds:0x180001b7d80001b7
   14003cb45:	(bad)  
   14003cb46:	add    eax,DWORD PTR [rax]
   14003cb48:	fdiv   DWORD PTR [rdi-0x47ecffff]
   14003cb4e:	add    DWORD PTR [rax],eax
   14003cb50:	and    BYTE PTR [rdi],bh
   14003cb52:	add    eax,DWORD PTR [rax]
   14003cb54:	sbb    al,0xb8
   14003cb56:	add    DWORD PTR [rax],eax
   14003cb58:	(bad)  
   14003cb59:	mov    eax,0x3f280001
   14003cb5e:	add    eax,DWORD PTR [rax]
   14003cb60:	(bad)  
   14003cb61:	mov    eax,0xb99b0001
   14003cb66:	add    DWORD PTR [rax],eax
   14003cb68:	pop    rax
   14003cb69:	(bad)  
   14003cb6a:	add    eax,DWORD PTR [rax]
   14003cb6c:	pushf  
   14003cb6d:	mov    ecx,0xba7d0001
   14003cb72:	add    DWORD PTR [rax],eax
   14003cb74:	mov    BYTE PTR [rdi],bh
   14003cb76:	add    eax,DWORD PTR [rax]
   14003cb78:	cmp    BYTE PTR [rdx-0x3d8effff],0x1
   14003cb7f:	add    BYTE PTR [rdi+rdi*1-0x3a6ffffd],bh
   14003cb86:	add    DWORD PTR [rax],eax
   14003cb88:	imul   eax,esi,0x1
   14003cb8b:	add    al,ah
   14003cb8d:	(bad)  
   14003cb8e:	add    eax,DWORD PTR [rax]
   14003cb90:	jo     0x14003cb58
   14003cb92:	add    DWORD PTR [rax],eax
   14003cb94:	mov    bh,0xc6
   14003cb96:	add    DWORD PTR [rax],eax
   14003cb98:	sbb    al,0x41
   14003cb9a:	add    eax,DWORD PTR [rax]
   14003cb9c:	enter  0x1c6,0x0
   14003cba0:	rex.WX mov QWORD PTR [rcx],0x3410c00
   14003cba7:	add    BYTE PTR [rdi+rax*8+0x1],ah
   14003cbab:	add    BYTE PTR [rsi],al
   14003cbad:	enter  0x1,0x74
   14003cbb1:	add    eax,DWORD PTR [r8]
   14003cbb4:	or     al,cl
   14003cbb6:	add    DWORD PTR [rax],eax
   14003cbb8:	mov    ebp,0x880001c9
   14003cbbd:	add    eax,DWORD PTR [r8]
   14003cbc0:	ror    cl,0x1
   14003cbc3:	add    BYTE PTR [rcx],ch
   14003cbc5:	retf   0x1
   14003cbc8:	lock (bad) 
   14003cbca:	add    eax,DWORD PTR [rax]
   14003cbcc:	sub    al,0xca
   14003cbce:	add    DWORD PTR [rax],eax
   14003cbd0:	call   0x14403cd9f
   14003cbd5:	rex.X add eax,DWORD PTR [rax]
   14003cbd8:	call   0x19f03cda7
   14003cbdd:	retf   
   14003cbde:	add    DWORD PTR [rax],eax
   14003cbe0:	cmp    al,0x40
   14003cbe2:	add    eax,DWORD PTR [rax]
   14003cbe4:	(bad)  
   14003cbe5:	retf   
   14003cbe6:	add    DWORD PTR [rax],eax
   14003cbe8:	xor    cl,bh
   14003cbea:	add    DWORD PTR [rax],eax
   14003cbec:	rex.R
   14003cbed:	add    eax,DWORD PTR [r8]
   14003cbf0:	xor    al,0xcf
   14003cbf2:	add    DWORD PTR [rax],eax
   14003cbf4:	(bad)  
   14003cbf5:	iret   
   14003cbf6:	add    DWORD PTR [rax],eax
   14003cbf8:	push   rax
   14003cbf9:	rex add eax,DWORD PTR [rax]
   14003cbfc:	ror    bh,1
   14003cbfe:	add    DWORD PTR [rax],eax
   14003cc00:	ins    BYTE PTR es:[rdi],dx
   14003cc01:	rol    BYTE PTR [rcx],1
   14003cc03:	add    al,bh
   14003cc05:	(bad)  
   14003cc06:	add    eax,DWORD PTR [rax]
   14003cc08:	ins    BYTE PTR es:[rdi],dx
   14003cc09:	rol    BYTE PTR [rcx],1
   14003cc0b:	add    BYTE PTR [rbx-0x2f],ch
   14003cc0e:	add    DWORD PTR [rax],eax
   14003cc10:	clc    
   14003cc11:	rex add eax,DWORD PTR [rax]
   14003cc14:	ins    BYTE PTR es:[rdi],dx
   14003cc15:	rol    DWORD PTR [rcx],1
   14003cc17:	add    cl,dl
   14003cc19:	rol    DWORD PTR [rcx],1
   14003cc1b:	add    BYTE PTR [rcx+rax*2+0x3],ah
   14003cc1f:	add    ah,dl
   14003cc21:	rol    DWORD PTR [rcx],1
   14003cc23:	add    BYTE PTR [rdi-0x2d],ch
   14003cc26:	add    DWORD PTR [rax],eax
   14003cc28:	nop
   14003cc29:	rex add eax,DWORD PTR [rax]
   14003cc2c:	jo     0x14003cc01
   14003cc2e:	add    DWORD PTR [rax],eax
   14003cc30:	rex.R (bad) 
   14003cc32:	add    DWORD PTR [rax],eax
   14003cc34:	(bad)
   14003cc38:	rex.R (bad) 
   14003cc3a:	add    DWORD PTR [rax],eax
   14003cc3c:	scas   al,BYTE PTR es:[rdi]
   14003cc3d:	xlat   BYTE PTR ds:[rbx]
   14003cc3e:	add    DWORD PTR [rax],eax
   14003cc40:	loopne 0x14003cc83
   14003cc42:	add    eax,DWORD PTR [rax]
   14003cc44:	mov    al,0xd7
   14003cc46:	add    DWORD PTR [rax],eax
   14003cc48:	mov    esi,0xa00001da
   14003cc4d:	add    eax,DWORD PTR [r8]
   14003cc50:	lock fiadd DWORD PTR [rcx]
   14003cc53:	add    BYTE PTR [rbx+rbx*8],bl
   14003cc56:	add    DWORD PTR [rax],eax
   14003cc58:	sbb    al,0x42
   14003cc5a:	add    eax,DWORD PTR [rax]
   14003cc5c:	sbb    al,0xdb
   14003cc5e:	add    DWORD PTR [rax],eax
   14003cc60:	rex.W fild DWORD PTR [rcx]
   14003cc63:	add    BYTE PTR [rdx+rax*2],cl
   14003cc66:	add    eax,DWORD PTR [rax]
   14003cc68:	rex.W fild DWORD PTR [rcx]
   14003cc6b:	add    BYTE PTR [rbx+0x340001db],cl
   14003cc71:	rex.X add eax,DWORD PTR [rax]
   14003cc74:	enter  0x1db,0x0
   14003cc78:	hlt    
   14003cc79:	fild   DWORD PTR [rcx]
   14003cc7b:	add    BYTE PTR [rdx+rax*2],ah
   14003cc7e:	add    eax,DWORD PTR [rax]
   14003cc80:	hlt    
   14003cc81:	fild   DWORD PTR [rcx]
   14003cc83:	add    BYTE PTR [rax],ah
   14003cc85:	fadd   QWORD PTR [rcx]
   14003cc87:	add    BYTE PTR [rdx+rax*2],dl
   14003cc8a:	add    eax,DWORD PTR [rax]
   14003cc8c:	sbb    ah,0x1
   14003cc8f:	add    ch,al
   14003cc91:	fadd   QWORD PTR [rcx]
   14003cc93:	add    BYTE PTR [rdx+rax*2],ch
   14003cc96:	add    eax,DWORD PTR [rax]
   14003cc98:	xor    dh,bl
   14003cc9a:	add    DWORD PTR [rax],eax
   14003cc9c:	data16 fild WORD PTR [rcx]
   14003cc9f:	add    BYTE PTR [rdx+rax*2-0x2097fffd],bl
   14003cca6:	add    DWORD PTR [rax],eax
   14003cca8:	adc    eax,esp
   14003ccaa:	add    DWORD PTR [rax],eax
   14003ccac:	mov    ah,0x42
   14003ccae:	add    eax,DWORD PTR [rax]
   14003ccb0:	and    al,0x1
   14003ccb3:	add    BYTE PTR [rsi+riz*8],ah
   14003ccb6:	add    DWORD PTR [rax],eax
   14003ccb8:	enter  0x342,0x0
   14003ccbc:	and    al,0xe6
   14003ccbe:	add    DWORD PTR [rax],eax
   14003ccc0:	(bad)  
   14003ccc2:	add    DWORD PTR [rax],eax
   14003ccc4:	cmp    al,0x42
   14003ccc6:	add    eax,DWORD PTR [rax]
   14003ccc8:	fsub   st(3),st
   14003ccca:	add    DWORD PTR [rax],eax
   14003cccc:	xchg   edx,eax
   14003cccd:	icebp  
   14003ccce:	add    DWORD PTR [rax],eax
   14003ccd0:	(bad)  
   14003ccd1:	rex.X add eax,DWORD PTR [rax]
   14003ccd4:	xchg   esp,eax
   14003ccd5:	icebp  
   14003ccd6:	add    DWORD PTR [rax],eax
   14003ccd8:	jg     0x14003cccc
   14003ccda:	add    DWORD PTR [rax],eax
   14003ccdc:	test   BYTE PTR [rdx+0x3],al
   14003ccdf:	add    BYTE PTR [rax-0xafffe0e],al
   14003cce5:	repnz add DWORD PTR [rax],eax
   14003cce8:	or     al,0x43
   14003ccea:	add    eax,DWORD PTR [rax]
   14003ccec:	clc    
   14003cced:	repnz add DWORD PTR [rax],eax
   14003ccf0:	and    eax,0x440001f6
   14003ccf5:	rex.XB add eax,DWORD PTR [r8]
   14003ccf8:	sub    dh,dh
   14003ccfa:	add    DWORD PTR [rax],eax
   14003ccfc:	fdiv   st(1),st
   14003ccfe:	add    DWORD PTR [rax],eax
   14003cd00:	and    BYTE PTR [rbx+0x3],al
   14003cd03:	add    BYTE PTR [rdx+rdi*8],dh
   14003cd06:	add    DWORD PTR [rax],eax
   14003cd08:	xchg   ebp,eax
   14003cd09:	add    al,BYTE PTR [rdx]
   14003cd0b:	add    al,ch
   14003cd0d:	rex.X add eax,DWORD PTR [rax]
   14003cd10:	cwde   
   14003cd11:	add    al,BYTE PTR [rdx]
   14003cd13:	add    BYTE PTR [rax+0xd],dh
   14003cd16:	add    al,BYTE PTR [rax]
   14003cd18:	push   0xffffffffec000343
   14003cd1d:	or     eax,0xe660002
   14003cd22:	add    al,BYTE PTR [rax]
   14003cd24:	mov    eax,0x68000343
   14003cd29:	(bad)  
   14003cd2a:	add    al,BYTE PTR [rax]
   14003cd2c:	(bad)  
   14003cd2d:	(bad)  
   14003cd2e:	add    al,BYTE PTR [rax]
   14003cd30:	mov    WORD PTR [rbx+0x3],es
   14003cd33:	add    al,dl
   14003cd35:	(bad)  
   14003cd36:	add    al,BYTE PTR [rax]
   14003cd38:	push   0x3c00020f
   14003cd3d:	add    r8d,DWORD PTR [rax]
   14003cd40:	push   0x6000020f
   14003cd45:	adc    DWORD PTR [rdx],eax
   14003cd47:	add    ah,al
   14003cd49:	rex.XB add eax,DWORD PTR [r8]
   14003cd4c:	(bad)  
   14003cd4d:	adc    DWORD PTR [rdx],eax
   14003cd4f:	add    BYTE PTR [rdx],cl
   14003cd51:	adc    al,BYTE PTR [rdx]
   14003cd53:	add    BYTE PTR [rax],bl
   14003cd55:	add    r8d,DWORD PTR [rax]
   14003cd58:	or     al,0x12
   14003cd5a:	add    al,BYTE PTR [rax]
   14003cd5c:	adc    BYTE PTR [rdx],0x2
   14003cd5f:	add    BYTE PTR [rax+0x44],dh
   14003cd62:	add    eax,DWORD PTR [rax]
   14003cd64:	adc    BYTE PTR [rdx],0x2
   14003cd67:	add    BYTE PTR [rdx+0x13],bh
   14003cd6a:	add    al,BYTE PTR [rax]
   14003cd6c:	js     0x14003cdb2
   14003cd6e:	add    eax,DWORD PTR [rax]
   14003cd70:	jl     0x14003cd85
   14003cd72:	add    al,BYTE PTR [rax]
   14003cd74:	sub    DWORD PTR [rdx+rax*1],edx
   14003cd77:	add    BYTE PTR [rax],ch
   14003cd79:	add    r8d,DWORD PTR [rax]
   14003cd7c:	pop    rax
   14003cd7d:	adc    al,0x2
   14003cd7f:	add    BYTE PTR [rip+0xffffffffac000215],bh        # 0xec03cf9a
   14003cd85:	add    r8d,DWORD PTR [rax]
   14003cd88:	rex adc eax,0x15d30002
   14003cd8e:	add    al,BYTE PTR [rax]
   14003cd90:	loopne 0x14003cdd6
   14003cd92:	add    eax,DWORD PTR [rax]
   14003cd94:	(bad)  
   14003cd95:	adc    eax,0x17250002
   14003cd9a:	add    al,BYTE PTR [rax]
   14003cd9c:	lock add r8d,DWORD PTR [rax]
   14003cda0:	xor    BYTE PTR [rdi],dl
   14003cda2:	add    al,BYTE PTR [rax]
   14003cda4:	(bad)  
   14003cda5:	(bad)  
   14003cda6:	add    al,BYTE PTR [rax]
   14003cda8:	or     BYTE PTR [rbp+0x3],al
   14003cdab:	add    BYTE PTR [rdi+rdx*1+0x2],ah
   14003cdaf:	add    BYTE PTR [rbp+0x30000217],bh
   14003cdb5:	add    r8d,DWORD PTR [r8]
   14003cdb8:	rcl    BYTE PTR [rdi],0x2
   14003cdbb:	add    BYTE PTR [rip+0x7800021a],cl        # 0x1b803cfdb
   14003cdc1:	add    r8d,DWORD PTR [r8]
   14003cdc4:	adc    BYTE PTR [rdx],bl
   14003cdc6:	add    al,BYTE PTR [rax]
   14003cdc8:	(bad)  
   14003cdc9:	sbb    al,BYTE PTR [rdx]
   14003cdcb:	add    BYTE PTR [rax+0x45],dh
   14003cdce:	add    eax,DWORD PTR [rax]
   14003cdd0:	xor    BYTE PTR [rdx],bl
   14003cdd2:	add    al,BYTE PTR [rax]
   14003cdd4:	(bad)  
   14003cdd5:	sbb    al,BYTE PTR [rdx]
   14003cdd7:	add    BYTE PTR [rax],bh
   14003cdd9:	add    r8d,DWORD PTR [r8]
   14003cddc:	(bad)  
   14003cddd:	sbb    al,BYTE PTR [rdx]
   14003cddf:	add    BYTE PTR [rdx+0x4000021a],al
   14003cde5:	add    r8d,DWORD PTR [r8]
   14003cde8:	test   BYTE PTR [rdx],bl
   14003cdea:	add    al,BYTE PTR [rax]
   14003cdec:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14003cded:	sbb    al,BYTE PTR [rdx]
   14003cdef:	add    BYTE PTR [rbp+rax*2+0x1ab00003],dl
   14003cdf6:	add    al,BYTE PTR [rax]
   14003cdf8:	rcr    BYTE PTR [rdx],cl
   14003cdfa:	add    al,BYTE PTR [rax]
   14003cdfc:	pop    rax
   14003cdfd:	add    r8d,DWORD PTR [r8]
   14003ce00:	(bad)  
   14003ce01:	sbb    al,BYTE PTR [rdx]
   14003ce03:	add    BYTE PTR [rdi],al
   14003ce05:	sbb    eax,DWORD PTR [rdx]
   14003ce07:	add    BYTE PTR [rax+0x45],cl
   14003ce0a:	add    eax,DWORD PTR [rax]
   14003ce0c:	or     BYTE PTR [rbx],bl
   14003ce0e:	add    al,BYTE PTR [rax]
   14003ce10:	sub    eax,0x5000021b
   14003ce15:	add    r8d,DWORD PTR [r8]
   14003ce18:	xor    BYTE PTR [rbx],bl
   14003ce1a:	add    al,BYTE PTR [rax]
   14003ce1c:	push   rbp
   14003ce1d:	sbb    eax,DWORD PTR [rdx]
   14003ce1f:	add    BYTE PTR [rax+0x45],ah
   14003ce22:	add    eax,DWORD PTR [rax]
   14003ce24:	pop    rax
   14003ce25:	sbb    eax,DWORD PTR [rdx]
   14003ce27:	add    BYTE PTR [rbp+0x1b],bh
   14003ce2a:	add    al,BYTE PTR [rax]
   14003ce2c:	pushf  
   14003ce2d:	add    r8d,DWORD PTR [r8]
   14003ce30:	sbb    BYTE PTR [rbx],0x2
   14003ce33:	add    BYTE PTR [rdx+0x6800021b],ah
   14003ce39:	add    r8d,DWORD PTR [r8]
   14003ce3c:	int3   
   14003ce3d:	sbb    eax,DWORD PTR [rdx]
   14003ce3f:	add    BYTE PTR [rax],cl
   14003ce41:	(bad)  
   14003ce42:	add    al,BYTE PTR [rax]
   14003ce44:	(bad)  
   14003ce45:	add    r8d,DWORD PTR [r8]
   14003ce48:	or     BYTE PTR [rsi],bl
   14003ce4a:	add    al,BYTE PTR [rax]
   14003ce4c:	sub    bl,BYTE PTR [rsi]
   14003ce4e:	add    al,BYTE PTR [rax]
   14003ce50:	lods   al,BYTE PTR ds:[rsi]
   14003ce51:	add    r8d,DWORD PTR [r8]
   14003ce54:	sub    al,0x1e
   14003ce56:	add    al,BYTE PTR [rax]
   14003ce58:	push   rcx
   14003ce59:	(bad)  
   14003ce5a:	add    al,BYTE PTR [rax]
   14003ce5c:	mov    esp,0x54000345
   14003ce61:	(bad)  
   14003ce62:	add    al,BYTE PTR [rax]
   14003ce64:	test   BYTE PTR [rsi],bl
   14003ce66:	add    al,BYTE PTR [rax]
   14003ce68:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14003ce69:	add    r8d,DWORD PTR [r8]
   14003ce6c:	test   BYTE PTR [rsi],bl
   14003ce6e:	add    al,BYTE PTR [rax]
   14003ce70:	mov    bh,0x1e
   14003ce72:	add    al,BYTE PTR [rax]
   14003ce74:	mov    ah,0x45
   14003ce76:	add    eax,DWORD PTR [rax]
   14003ce78:	mov    esp,0xf300021e
   14003ce7d:	(bad)  
   14003ce7e:	add    al,BYTE PTR [rax]
   14003ce80:	in     al,dx
   14003ce81:	add    r8d,DWORD PTR [r8]
   14003ce84:	hlt    
   14003ce85:	(bad)  
   14003ce86:	add    al,BYTE PTR [rax]
   14003ce88:	sub    ebx,DWORD PTR [rdi]
   14003ce8a:	add    al,BYTE PTR [rax]
   14003ce8c:	hlt    
   14003ce8d:	add    r8d,DWORD PTR [r8]
   14003ce90:	sub    al,0x1f
   14003ce92:	add    al,BYTE PTR [rax]
   14003ce94:	addr32 (bad) 
   14003ce96:	add    al,BYTE PTR [rax]
   14003ce98:	in     al,0x45
   14003ce9a:	add    eax,DWORD PTR [rax]
   14003ce9c:	push   0xffffffffa200021f
   14003cea1:	(bad)  
   14003cea2:	add    al,BYTE PTR [rax]
   14003cea4:	fadd   QWORD PTR [rbp+0x3]
   14003cea7:	add    BYTE PTR [rax-0x24fffde1],bh
   14003cead:	and    eax,DWORD PTR [rdx]
   14003ceaf:	add    ah,bh
   14003ceb1:	add    r8d,DWORD PTR [r8]
   14003ceb4:	lock and eax,DWORD PTR [rdx]
   14003ceb7:	add    BYTE PTR [rdi+0x28000224],dh
   14003cebd:	rex.RX add r8d,DWORD PTR [rax]
   14003cec0:	cwde   
   14003cec1:	and    eax,0x26280002
   14003cec6:	add    al,BYTE PTR [rax]
   14003cec8:	mov    al,0x46
   14003ceca:	add    eax,DWORD PTR [rax]
   14003cecc:	sub    BYTE PTR [rsi],ah
   14003cece:	add    al,BYTE PTR [rax]
   14003ced0:	fsub   DWORD PTR [rsi]
   14003ced2:	add    al,BYTE PTR [rax]
   14003ced4:	push   0xffffffffd8000346
   14003ced9:	add    al,BYTE PTR es:[rax]
   14003cedc:	pop    rdi
   14003cedd:	(bad)  
   14003cede:	add    al,BYTE PTR [rax]
   14003cee0:	nop
   14003cee1:	rex.RX add r8d,DWORD PTR [rax]
   14003cee4:	nop
   14003cee5:	(bad)  
   14003cee6:	add    al,BYTE PTR [rax]
   14003cee8:	sbb    ebp,DWORD PTR [rbx]
   14003ceea:	add    al,BYTE PTR [rax]
   14003ceec:	jo     0x14003cf34
   14003ceee:	add    eax,DWORD PTR [rax]
   14003cef0:	sbb    al,0x2b
   14003cef2:	add    al,BYTE PTR [rax]
   14003cef4:	stc    
   14003cef5:	sub    eax,DWORD PTR [rdx]
   14003cef7:	add    BYTE PTR [rax-0x3fffcba],bl
   14003cefd:	sub    eax,DWORD PTR [rdx]
   14003ceff:	add    BYTE PTR [rax-0x3bfffdd4],dh
   14003cf05:	rex.RX add r8d,DWORD PTR [rax]
   14003cf08:	mov    al,0x2c
   14003cf0a:	add    al,BYTE PTR [rax]
   14003cf0c:	sbb    BYTE PTR [rip+0x46d40002],ch        # 0x186d7cf14
   14003cf12:	add    eax,DWORD PTR [rax]
   14003cf14:	sbb    BYTE PTR [rip+0x2d860002],ch        # 0x16d89cf1c
   14003cf1a:	add    al,BYTE PTR [rax]
   14003cf1c:	call   0xc803d267
   14003cf21:	sub    eax,0x2e210002
   14003cf26:	add    al,BYTE PTR [rax]
   14003cf28:	rex.WR
   14003cf29:	rex.RX add r8d,DWORD PTR [rax]
   14003cf2c:	and    al,0x2e
   14003cf2e:	add    al,BYTE PTR [rax]
   14003cf30:	mov    al,0x30
   14003cf32:	add    al,BYTE PTR [rax]
   14003cf34:	sub    al,0x46
   14003cf36:	add    eax,DWORD PTR [rax]
   14003cf38:	mov    al,0x30
   14003cf3a:	add    al,BYTE PTR [rax]
   14003cf3c:	pushf  
   14003cf3d:	xor    DWORD PTR [rdx],eax
   14003cf3f:	add    BYTE PTR [rax-0x63fffcb9],dl
   14003cf45:	xor    DWORD PTR [rdx],eax
   14003cf47:	add    cl,dh
   14003cf49:	xor    DWORD PTR [rdx],eax
   14003cf4b:	add    BYTE PTR [rdi+rax*2+0x31f40003],al
   14003cf52:	add    al,BYTE PTR [rax]
   14003cf54:	adc    eax,0xb0000232
   14003cf59:	rex.RXB add r8d,DWORD PTR [r8]
   14003cf5c:	sbb    BYTE PTR [rdx],dh
   14003cf5e:	add    al,BYTE PTR [rax]
   14003cf60:	int3   
   14003cf61:	xor    al,BYTE PTR [rdx]
   14003cf63:	add    BYTE PTR [rax],dh
   14003cf65:	rex.RXB add r8d,DWORD PTR [r8]
   14003cf68:	int3   
   14003cf69:	xor    al,BYTE PTR [rdx]
   14003cf6b:	add    BYTE PTR [rdi+0x33],bl
   14003cf6e:	add    al,BYTE PTR [rax]
   14003cf70:	pop    rsp
   14003cf71:	rex.RXB add r8d,DWORD PTR [r8]
   14003cf74:	mov    BYTE PTR [rbx],dh
   14003cf76:	add    al,BYTE PTR [rax]
   14003cf78:	mov    ch,0x35
   14003cf7a:	add    al,BYTE PTR [rax]
   14003cf7c:	cmp    al,0x47
   14003cf7e:	add    eax,DWORD PTR [rax]
   14003cf80:	mov    eax,0xb4000235
   14003cf85:	add    al,BYTE PTR ss:[rax]
   14003cf88:	push   0x4000347
   14003cf8d:	(bad)  
   14003cf8e:	add    al,BYTE PTR [rax]
   14003cf90:	mov    dl,0x37
   14003cf92:	add    al,BYTE PTR [rax]
   14003cf94:	mov    eax,0xdc000347
   14003cf99:	(bad)  
   14003cf9a:	add    al,BYTE PTR [rax]
   14003cf9c:	cmp    DWORD PTR [rax],0x47c80002
   14003cfa2:	add    eax,DWORD PTR [rax]
   14003cfa4:	test   BYTE PTR [rax],bh
   14003cfa6:	add    al,BYTE PTR [rax]
   14003cfa8:	sbb    eax,0x14000239
   14003cfad:	rex.RXB add r8d,DWORD PTR [r8]
   14003cfb0:	and    BYTE PTR [rcx],bh
   14003cfb2:	add    al,BYTE PTR [rax]
   14003cfb4:	mov    dh,0x3b
   14003cfb6:	add    al,BYTE PTR [rax]
   14003cfb8:	clc    
   14003cfb9:	rex.RX add r8d,DWORD PTR [rax]
   14003cfbc:	enter  0x23b,0x0
   14003cfc0:	cs cmp al,0x2
   14003cfc3:	add    ah,bl
   14003cfc5:	rex.RXB add r8d,DWORD PTR [r8]
   14003cfc8:	xor    BYTE PTR [rdx+rax*1],bh
   14003cfcb:	add    BYTE PTR [rdx+0x3e],dl
   14003cfce:	add    al,BYTE PTR [rax]
   14003cfd0:	in     al,0x47
   14003cfd2:	add    eax,DWORD PTR [rax]
   14003cfd4:	push   rsp
   14003cfd5:	add    al,BYTE PTR ds:[rax]
   14003cfd8:	(bad)  
   14003cfd9:	(bad)  
   14003cfda:	add    al,BYTE PTR [rax]
   14003cfdc:	cld    
   14003cfdd:	rex.RXB add r8d,DWORD PTR [r8]
   14003cfe0:	sbb    BYTE PTR [rdi],bh
   14003cfe2:	add    al,BYTE PTR [rax]
   14003cfe4:	sar    BYTE PTR [rdi],cl
   14003cfe6:	add    al,BYTE PTR [rax]
   14003cfe8:	sub    al,0x48
   14003cfea:	add    eax,DWORD PTR [rax]
   14003cfec:	(bad)  
   14003cfed:	(bad)  
   14003cfee:	add    al,BYTE PTR [rax]
   14003cff0:	or     eax,DWORD PTR [rax+0x2]
   14003cff3:	add    BYTE PTR [rax],bh
   14003cff5:	add    rax,QWORD PTR [rax]
   14003cff8:	or     al,0x40
   14003cffa:	add    al,BYTE PTR [rax]
   14003cffc:	sub    al,0x40
   14003cffe:	add    al,BYTE PTR [rax]
   14003d000:	rex.W
   14003d001:	add    rax,QWORD PTR [rax]
   14003d004:	sub    al,0x40
   14003d006:	add    al,BYTE PTR [rax]
   14003d008:	add    al,BYTE PTR [eax]
   14003d00c:	rex
   14003d00d:	add    rax,QWORD PTR [rax]
   14003d010:	push   0xffffffffbc000240
   14003d015:	add    al,BYTE PTR [r8]
   14003d018:	push   rax
   14003d019:	add    rax,QWORD PTR [rax]
   14003d01c:	(bad)
   14003d020:	out    0x41,eax
   14003d022:	add    al,BYTE PTR [rax]
   14003d024:	test   BYTE PTR [rax+0x3],cl
   14003d027:	add    al,ch
   14003d029:	add    al,BYTE PTR [r8]
   14003d02c:	cmovb  eax,DWORD PTR [rdx]
   14003d02f:	add    BYTE PTR [rax+rcx*2+0x3],ch
   14003d033:	add    BYTE PTR [rax],dl
   14003d035:	rex.X add al,BYTE PTR [rax]
   14003d038:	xor    al,BYTE PTR [rdx+0x2]
   14003d03b:	add    BYTE PTR [rax+rcx*2+0x3],dh
   14003d03f:	add    BYTE PTR [rdx+rax*2],dh
   14003d042:	add    al,BYTE PTR [rax]
   14003d044:	rex.RXB
   14003d045:	rex.X add al,BYTE PTR [rax]
   14003d048:	mov    WORD PTR [rax+0x3],cs
   14003d04b:	add    BYTE PTR [rax+0x42],cl
   14003d04e:	add    al,BYTE PTR [rax]
   14003d050:	pop    rbx
   14003d051:	rex.X add al,BYTE PTR [rax]
   14003d054:	jl     0x14003d09e
   14003d056:	add    eax,DWORD PTR [rax]
   14003d058:	pop    rsp
   14003d059:	rex.X add al,BYTE PTR [rax]
   14003d05c:	ins    DWORD PTR es:[rdi],dx
   14003d05d:	rex.XB add al,BYTE PTR [r8]
   14003d060:	test   al,0x48
   14003d062:	add    eax,DWORD PTR [rax]
   14003d064:	jo     0x14003d0a9
   14003d066:	add    al,BYTE PTR [rax]
   14003d068:	add    BYTE PTR [rdx+rax*1+0x0],0x94
   14003d06d:	add    rax,QWORD PTR [rax]
   14003d070:	lock add r8b,BYTE PTR [rax]
   14003d074:	jl     0x14003d0bb
   14003d076:	add    al,BYTE PTR [rax]
   14003d078:	mov    esp,0x7c000348
   14003d07d:	add    r8b,BYTE PTR [r8]
   14003d080:	add    BYTE PTR [rsi+0x2],al
   14003d083:	add    ah,al
   14003d085:	add    rax,QWORD PTR [rax]
   14003d088:	add    BYTE PTR [rsi+0x2],al
   14003d08b:	add    ch,ch
   14003d08d:	rex.RX add r8b,BYTE PTR [rax]
   14003d090:	int3   
   14003d091:	add    rax,QWORD PTR [rax]
   14003d094:	lock rex.RX add r8b,BYTE PTR [rax]
   14003d098:	xchg   DWORD PTR [rdi+0x2],eax
   14003d09b:	add    al,ah
   14003d09d:	add    rax,QWORD PTR [rax]
   14003d0a0:	mov    BYTE PTR [rdi+0x2],al
   14003d0a3:	add    BYTE PTR [rsi-0x17fffdb8],bl
   14003d0a9:	add    rax,QWORD PTR [rax]
   14003d0ac:	movabs al,ds:0x24961000248
   14003d0b5:	add    rax,QWORD PTR [r8]
   14003d0b8:	jo     0x14003d103
   14003d0ba:	add    al,BYTE PTR [rax]
   14003d0bc:	pop    rax
   14003d0bd:	rex.WXB add al,BYTE PTR [r8]
   14003d0c0:	sbb    BYTE PTR [rcx+0x3],cl
   14003d0c3:	add    BYTE PTR [rax-0x1afffdb5],al
   14003d0c9:	rex.WRB add r8b,BYTE PTR [r8]
   14003d0cc:	je     0x14003d117
   14003d0ce:	add    eax,DWORD PTR [rax]
   14003d0d0:	call   0x13603d322
   14003d0d5:	rex.WRX add r8b,BYTE PTR [rax]
   14003d0d8:	rex
   14003d0d9:	add    rax,QWORD PTR [r8]
   14003d0dc:	clc    
   14003d0dd:	rex.WRX add r8b,BYTE PTR [rax]
   14003d0e0:	sub    BYTE PTR [rdi+0x2],cl
   14003d0e3:	add    BYTE PTR [rcx+rcx*2+0x3],dl
   14003d0e7:	add    BYTE PTR [rax],ch
   14003d0e9:	rex.WRXB add r8b,BYTE PTR [r8]
   14003d0ec:	rex.WX
   14003d0ed:	rex.WRXB add r8b,BYTE PTR [r8]
   14003d0f0:	pop    rsp
   14003d0f1:	add    rax,QWORD PTR [r8]
   14003d0f4:	rex.WR
   14003d0f5:	rex.WRXB add r8b,BYTE PTR [r8]
   14003d0f8:	outs   dx,BYTE PTR ds:[rsi]
   14003d0f9:	rex.WRXB add r8b,BYTE PTR [r8]
   14003d0fc:	mov    WORD PTR [rcx+0x3],cs
   14003d0ff:	add    BYTE PTR [rax+0x4f],bh
   14003d102:	add    al,BYTE PTR [rax]
   14003d104:	(bad)  
   14003d105:	rex.WRXB add r8b,BYTE PTR [r8]
   14003d108:	xor    BYTE PTR [rcx+0x3],cl
   14003d10b:	add    BYTE PTR [rdi+rcx*2+0x4fcf0002],bl
   14003d112:	add    al,BYTE PTR [rax]
   14003d114:	add    rax,QWORD PTR fs:[r8]
   14003d118:	ror    BYTE PTR [rdi+0x2],1
   14003d11b:	add    ch,dh
   14003d11d:	rex.WRXB add r8b,BYTE PTR [r8]
   14003d120:	ins    BYTE PTR es:[rdi],dx
   14003d121:	add    rax,QWORD PTR [r8]
   14003d124:	clc    
   14003d125:	rex.WRXB add r8b,BYTE PTR [r8]
   14003d128:	sbb    eax,0x38000250
   14003d12d:	add    rax,QWORD PTR [r8]
   14003d130:	and    BYTE PTR [rax+0x2],dl
   14003d133:	add    BYTE PTR [rbp+0x50],al
   14003d136:	add    al,BYTE PTR [rax]
   14003d138:	xchg   esp,eax
   14003d139:	add    rax,QWORD PTR [r8]
   14003d13c:	js     0x14003d18e
   14003d13e:	add    al,BYTE PTR [rax]
   14003d140:	rex.X push rcx
   14003d142:	add    al,BYTE PTR [rax]
   14003d144:	pushf  
   14003d145:	add    rax,QWORD PTR [r8]
   14003d148:	in     al,0x52
   14003d14a:	add    al,BYTE PTR [rax]
   14003d14c:	adc    edx,DWORD PTR [rdx+rax*1+0x0]
   14003d150:	test   al,0x49
   14003d152:	add    eax,DWORD PTR [rax]
   14003d154:	sbb    al,0x54
   14003d156:	add    al,BYTE PTR [rax]
   14003d158:	gs push rsp
   14003d15a:	add    al,BYTE PTR [rax]
   14003d15c:	(bad)  
   14003d15d:	add    rax,QWORD PTR [r8]
   14003d160:	push   0x2e000254
   14003d165:	push   rbp
   14003d166:	add    al,BYTE PTR [rax]
   14003d168:	(bad)  
   14003d169:	add    rax,QWORD PTR [r8]
   14003d16c:	xor    BYTE PTR [rbp+0x2],dl
   14003d16f:	add    BYTE PTR [rbp+0x10000255],ah
   14003d175:	rex.WX add rax,QWORD PTR [rax]
   14003d178:	test   al,0x55
   14003d17a:	add    al,BYTE PTR [rax]
   14003d17c:	and    DWORD PTR [rdi+0x2],ebx
   14003d17f:	add    ah,ch
   14003d181:	add    rax,QWORD PTR [r8]
   14003d184:	add    BYTE PTR [rcx+0x2],ah
   14003d187:	add    BYTE PTR [rax+0x61],al
   14003d18a:	add    al,BYTE PTR [rax]
   14003d18c:	call   0x18003d4b3
   14003d191:	(bad)  
   14003d192:	add    al,BYTE PTR [rax]
   14003d194:	and    DWORD PTR [rcx+0x2],0x0
   14003d198:	jo     0x14003d1b3
   14003d19a:	add    eax,DWORD PTR [rax]
   14003d19c:	and    DWORD PTR [rcx+0x2],0x0
   14003d1a0:	shl    DWORD PTR [rcx+0x2],0x0
   14003d1a4:	sbb    BYTE PTR [rcx],0x3
   14003d1a7:	add    al,dl
   14003d1a9:	(bad)  
   14003d1aa:	add    al,BYTE PTR [rax]
   14003d1ac:	(bad)  
   14003d1ad:	(bad)  
   14003d1af:	add    BYTE PTR [rax+0x1f00031e],al
   14003d1b5:	(bad)  
   14003d1b7:	add    BYTE PTR [rdi+0x62],bl
   14003d1ba:	add    al,BYTE PTR [rax]
   14003d1bc:	nop
   14003d1bd:	(bad)  
   14003d1be:	add    eax,DWORD PTR [rax]
   14003d1c0:	mov    eax,0xe1000262
   14003d1c5:	(bad)  
   14003d1c7:	add    al,ch
   14003d1c9:	and    DWORD PTR [rbx],eax
   14003d1cb:	add    BYTE PTR [rax],cl
   14003d1cd:	movsxd eax,DWORD PTR [rdx]
   14003d1cf:	add    BYTE PTR [rbx+riz*2],bl
   14003d1d2:	add    al,BYTE PTR [rax]
   14003d1d4:	xchg   esp,eax
   14003d1d5:	and    al,0x3
   14003d1d7:	add    BYTE PTR [rbx+riz*2],bl
   14003d1da:	add    al,BYTE PTR [rax]
   14003d1dc:	rex movsxd eax,DWORD PTR [rdx]
   14003d1df:	add    BYTE PTR [rax+0x40000325],cl
   14003d1e5:	movsxd eax,DWORD PTR [rdx]
   14003d1e7:	add    BYTE PTR [rsi+0x50000263],al
   14003d1ed:	add    eax,DWORD PTR es:[rax]
   14003d1f0:	xchg   BYTE PTR [rbx+0x2],ah
   14003d1f3:	add    BYTE PTR [rbx+riz*2+0x27480002],ah
   14003d1fa:	add    eax,DWORD PTR [rax]
   14003d1fc:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14003d1fd:	movsxd eax,DWORD PTR [rdx]
   14003d1ff:	add    cl,al
   14003d201:	movsxd eax,DWORD PTR [rdx]
   14003d203:	add    BYTE PTR [rax-0x2ffffcd7],al
   14003d209:	movsxd eax,DWORD PTR [rdx]
   14003d20b:	add    al,dh
   14003d20d:	movsxd eax,DWORD PTR [rdx]
   14003d20f:	add    al,dh
   14003d211:	sub    al,BYTE PTR [rbx]
   14003d213:	add    al,dh
   14003d215:	movsxd eax,DWORD PTR [rdx]
   14003d217:	add    BYTE PTR [rsi],al
   14003d219:	add    al,BYTE PTR fs:[rax]
   14003d21c:	clc    
   14003d21d:	sub    eax,DWORD PTR [rbx]
   14003d21f:	add    BYTE PTR [rsi],al
   14003d221:	add    al,BYTE PTR fs:[rax]
   14003d224:	and    al,0x64
   14003d226:	add    al,BYTE PTR [rax]
   14003d228:	enter  0x32b,0x0
   14003d22c:	and    al,0x64
   14003d22e:	add    al,BYTE PTR [rax]
   14003d230:	cmp    ah,BYTE PTR [rdx+rax*1+0x0]
   14003d234:	nop
   14003d235:	sub    eax,DWORD PTR [rbx]
   14003d237:	add    BYTE PTR [rdx],bh
   14003d239:	add    al,BYTE PTR fs:[rax]
   14003d23c:	push   rbx
   14003d23d:	add    al,BYTE PTR fs:[rax]
   14003d240:	cmp    BYTE PTR [rbx+rax*1],ch
   14003d243:	add    BYTE PTR [rbx+0x64],dl
   14003d246:	add    al,BYTE PTR [rax]
   14003d248:	ins    BYTE PTR es:[rdi],dx
   14003d249:	add    al,BYTE PTR fs:[rax]
   14003d24c:	jo     0x14003d27a
   14003d24e:	add    eax,DWORD PTR [rax]
   14003d250:	ins    BYTE PTR es:[rdi],dx
   14003d251:	add    al,BYTE PTR fs:[rax]
   14003d254:	cwde   
   14003d255:	add    al,BYTE PTR fs:[rax]
   14003d258:	rex.R sub eax,0x64980003
   14003d25e:	add    al,BYTE PTR [rax]
   14003d260:	mov    cl,0x64
   14003d262:	add    al,BYTE PTR [rax]
   14003d264:	cld    
   14003d265:	sub    eax,0x64b10003
   14003d26a:	add    al,BYTE PTR [rax]
   14003d26c:	retf   0x264
   14003d26f:	add    BYTE PTR [rsi+rbp*1],al
   14003d272:	add    eax,DWORD PTR [rax]
   14003d274:	retf   0x264
   14003d277:	add    bl,ah
   14003d279:	add    al,BYTE PTR fs:[rax]
   14003d27c:	rex.W
   14003d27d:	add    eax,DWORD PTR cs:[rax]
   14003d280:	jrcxz  0x14003d2e6
   14003d282:	add    al,BYTE PTR [rax]
   14003d284:	cld    
   14003d285:	add    al,BYTE PTR fs:[rax]
   14003d288:	push   rax
   14003d289:	add    eax,DWORD PTR cs:[rax]
   14003d28c:	cld    
   14003d28d:	add    al,BYTE PTR fs:[rax]
   14003d290:	lock add al,BYTE PTR gs:[rax]
   14003d294:	and    BYTE PTR [rdi],ch
   14003d296:	add    eax,DWORD PTR [rax]
   14003d298:	lock add al,BYTE PTR gs:[rax]
   14003d29c:	outs   dx,BYTE PTR ds:[rsi]
   14003d29d:	data16 add al,BYTE PTR [rax]
   14003d2a0:	sub    BYTE PTR [rdi],ch
   14003d2a2:	add    eax,DWORD PTR [rax]
   14003d2a4:	outs   dx,BYTE PTR ds:[rsi]
   14003d2a5:	data16 add al,BYTE PTR [rax]
   14003d2a8:	mov    BYTE PTR [rsi+0x2],ah
   14003d2ab:	add    BYTE PTR [rax-0x77fffcd2],bl
   14003d2b1:	data16 add al,BYTE PTR [rax]
   14003d2b4:	movabs al,ds:0xa000033070000266
   14003d2bd:	data16 add al,BYTE PTR [rax]
   14003d2c0:	mov    dh,0x66
   14003d2c2:	add    al,BYTE PTR [rax]
   14003d2c4:	mov    WORD PTR [rdi],gs
   14003d2c6:	add    eax,DWORD PTR [rax]
   14003d2c8:	mov    dh,0x66
   14003d2ca:	add    al,BYTE PTR [rax]
   14003d2cc:	fbld   TBYTE PTR [rsi+0x2]
   14003d2cf:	add    BYTE PTR [rdi+rbp*1+0x66df0003],dl
   14003d2d6:	add    al,BYTE PTR [rax]
   14003d2d8:	clc    
   14003d2d9:	data16 add al,BYTE PTR [rax]
   14003d2dc:	ins    BYTE PTR es:[rdi],dx
   14003d2dd:	xor    DWORD PTR [rbx],eax
   14003d2df:	add    al,bh
   14003d2e1:	data16 add al,BYTE PTR [rax]
   14003d2e4:	adc    esp,DWORD PTR [rdi+0x2]
   14003d2e7:	add    ah,bl
   14003d2e9:	xor    DWORD PTR [rbx],eax
   14003d2eb:	add    BYTE PTR [rbx],dl
   14003d2ed:	add    al,BYTE PTR [eax]
   14003d2f0:	sub    al,0x67
   14003d2f2:	add    al,BYTE PTR [rax]
   14003d2f4:	xchg   esp,eax
   14003d2f5:	xor    DWORD PTR [rbx],eax
   14003d2f7:	add    BYTE PTR [rdi+riz*2],ch
   14003d2fa:	add    al,BYTE PTR [rax]
   14003d2fc:	rex.RB
   14003d2fd:	add    al,BYTE PTR [eax]
   14003d300:	add    al,0x32
   14003d302:	add    eax,DWORD PTR [rax]
   14003d304:	rex.RB
   14003d305:	add    al,BYTE PTR [eax]
   14003d308:	pop    rsi
   14003d309:	add    al,BYTE PTR [eax]
   14003d30c:	cmp    BYTE PTR [rdx],dh
   14003d30e:	add    eax,DWORD PTR [rax]
   14003d310:	pop    rsi
   14003d311:	add    al,BYTE PTR [eax]
   14003d314:	jns    0x14003d37d
   14003d316:	add    al,BYTE PTR [rax]
   14003d318:	cwde   
   14003d319:	xor    eax,DWORD PTR [rbx]
   14003d31b:	add    BYTE PTR [rcx+0x67],bh
   14003d31e:	add    al,BYTE PTR [rax]
   14003d320:	xchg   edx,eax
   14003d321:	add    al,BYTE PTR [eax]
   14003d324:	test   al,0x35
   14003d326:	add    eax,DWORD PTR [rax]
   14003d328:	xchg   edx,eax
   14003d329:	add    al,BYTE PTR [eax]
   14003d32c:	stos   BYTE PTR es:[rdi],al
   14003d32d:	add    al,BYTE PTR [eax]
   14003d330:	cwde   
   14003d331:	add    eax,DWORD PTR ss:[rax]
   14003d334:	stos   BYTE PTR es:[rdi],al
   14003d335:	add    al,BYTE PTR [eax]
   14003d338:	shl    BYTE PTR [rdi+0x2],cl
   14003d33b:	add    al,bh
   14003d33d:	add    eax,DWORD PTR ss:[rax]
   14003d340:	shl    BYTE PTR [rdi+0x2],cl
   14003d343:	add    bl,ch
   14003d345:	add    al,BYTE PTR [eax]
   14003d348:	add    BYTE PTR [rdi],dh
   14003d34a:	add    eax,DWORD PTR [rax]
   14003d34c:	jmp    0x14003d3b5
   14003d34e:	add    al,BYTE PTR [rax]
   14003d350:	add    al,0x68
   14003d352:	add    al,BYTE PTR [rax]
   14003d354:	and    BYTE PTR [rax],bh
   14003d356:	add    eax,DWORD PTR [rax]
   14003d358:	add    al,0x68
   14003d35a:	add    al,BYTE PTR [rax]
   14003d35c:	sbb    eax,0x58000268
   14003d361:	cmp    BYTE PTR [rbx],al
   14003d363:	add    BYTE PTR [rip+0x36000268],bl        # 0x17603d5d1
   14003d369:	push   0x3f500002
   14003d36e:	add    eax,DWORD PTR [rax]
   14003d370:	ss push 0x684d0002
   14003d376:	add    al,BYTE PTR [rax]
   14003d378:	cmp    BYTE PTR [rdi],0x3
   14003d37b:	add    BYTE PTR [rbp+0x68],cl
   14003d37e:	add    al,BYTE PTR [rax]
   14003d380:	fs push 0x3fb40002
   14003d386:	add    eax,DWORD PTR [rax]
   14003d388:	fs push 0x687d0002
   14003d38e:	add    al,BYTE PTR [rax]
   14003d390:	add    BYTE PTR [rax+0x3],0x0
   14003d394:	jge    0x14003d3fe
   14003d396:	add    al,BYTE PTR [rax]
   14003d398:	xchg   esi,eax
   14003d399:	push   0x40880002
   14003d39e:	add    eax,DWORD PTR [rax]
   14003d3a0:	xchg   esi,eax
   14003d3a1:	push   0x68af0002
   14003d3a6:	add    al,BYTE PTR [rax]
   14003d3a8:	sub    al,0x40
   14003d3aa:	add    eax,DWORD PTR [rax]
   14003d3ac:	scas   eax,DWORD PTR es:[rdi]
   14003d3ad:	push   0x68c80002
   14003d3b2:	add    al,BYTE PTR [rax]
   14003d3b4:	xor    al,0x40
   14003d3b6:	add    eax,DWORD PTR [rax]
   14003d3b8:	enter  0x268,0x0
   14003d3bc:	loope  0x14003d426
   14003d3be:	add    al,BYTE PTR [rax]
   14003d3c0:	cmp    al,0x41
   14003d3c2:	add    eax,DWORD PTR [rax]
   14003d3c4:	loope  0x14003d42e
   14003d3c6:	add    al,BYTE PTR [rax]
   14003d3c8:	cld    
   14003d3c9:	push   0x40e00002
   14003d3ce:	add    eax,DWORD PTR [rax]
   14003d3d0:	cld    
   14003d3d1:	push   0x69170002
   14003d3d6:	add    al,BYTE PTR [rax]
   14003d3d8:	call   0x15703d71d
   14003d3dd:	imul   eax,DWORD PTR [rdx],0x2693200
   14003d3e3:	add    al,dh
   14003d3e5:	rex add eax,DWORD PTR [rax]
   14003d3e8:	xor    ch,BYTE PTR [rcx+0x2]
   14003d3eb:	add    BYTE PTR [rdx+0x69],cl
   14003d3ee:	add    al,BYTE PTR [rax]
   14003d3f0:	mov    al,0x43
   14003d3f2:	add    eax,DWORD PTR [rax]
   14003d3f4:	rex.WX imul rax,QWORD PTR [rdx],0x2696300
   14003d3fb:	add    BYTE PTR [rax+0x44],ch
   14003d3fe:	add    eax,DWORD PTR [rax]
   14003d400:	movsxd ebp,DWORD PTR [rcx+0x2]
   14003d403:	add    BYTE PTR [rsi+0x69],bh
   14003d406:	add    al,BYTE PTR [rax]
   14003d408:	or     BYTE PTR [rbx+rax*1+0x0],al
   14003d40c:	jle    0x14003d477
   14003d40e:	add    al,BYTE PTR [rax]
   14003d410:	xchg   edi,eax
   14003d411:	imul   eax,DWORD PTR [rdx],0x3441000
   14003d417:	add    BYTE PTR [rdi-0x27fffd97],dl
   14003d41d:	imul   eax,DWORD PTR [rdx],0x344a400
   14003d423:	add    al,bl
   14003d425:	imul   eax,DWORD PTR [rdx],0x269ef00
   14003d42b:	add    al,bl
   14003d42d:	add    r8d,DWORD PTR [rax]
   14003d430:	out    dx,eax
   14003d431:	imul   eax,DWORD PTR [rdx],0x26a0800
   14003d437:	add    BYTE PTR [rax],ch
   14003d439:	add    r8d,DWORD PTR [r8]
   14003d43c:	or     BYTE PTR [rdx+0x2],ch
   14003d43f:	add    BYTE PTR [rdi],bl
   14003d441:	push   0x2
   14003d443:	add    BYTE PTR [rax+rcx*2],ah
   14003d446:	add    eax,DWORD PTR [rax]
   14003d448:	push   rax
   14003d449:	push   0x2
   14003d44b:	add    BYTE PTR [rbx+0x6a],ah
   14003d44e:	add    al,BYTE PTR [rax]
   14003d450:	mov    BYTE PTR [rdi],bl
   14003d452:	add    eax,DWORD PTR [rax]
   14003d454:	movsxd ebp,DWORD PTR [rdx+0x2]
   14003d457:	add    BYTE PTR [rdx+rbp*2+0x1f900002],bl
   14003d45e:	add    eax,DWORD PTR [rax]
   14003d460:	pushf  
   14003d461:	push   0x2
   14003d463:	add    BYTE PTR [rdx+rbp*2+0x1fa40002],bh
   14003d46a:	add    eax,DWORD PTR [rax]
   14003d46c:	shr    BYTE PTR [rdx+0x2],0x0
   14003d470:	shr    DWORD PTR [rdx+0x2],cl
   14003d473:	add    al,ah
   14003d475:	(bad)  
   14003d476:	add    eax,DWORD PTR [rax]
   14003d478:	shr    DWORD PTR [rdx+0x2],cl
   14003d47b:	add    BYTE PTR [rbx+rbp*2],cl
   14003d47e:	add    al,BYTE PTR [rax]
   14003d480:	call   0x14c03d7a4
   14003d485:	imul   eax,DWORD PTR [rdx],0x0
   14003d488:	sub    al,0x6b
   14003d48a:	add    al,BYTE PTR [rax]
   14003d48c:	cld    
   14003d48d:	(bad)  
   14003d48e:	add    eax,DWORD PTR [rax]
   14003d490:	xor    BYTE PTR [rbx+0x2],ch
   14003d493:	add    BYTE PTR [rbx+0x6b],al
   14003d496:	add    al,BYTE PTR [rax]
   14003d498:	adc    al,0x20
   14003d49a:	add    eax,DWORD PTR [rax]
   14003d49c:	rex.XB imul eax,DWORD PTR [r10],0x0
   14003d4a0:	jl     0x14003d50d
   14003d4a2:	add    al,BYTE PTR [rax]
   14003d4a4:	sbb    al,0x20
   14003d4a6:	add    eax,DWORD PTR [rax]
   14003d4a8:	jl     0x14003d515
   14003d4aa:	add    al,BYTE PTR [rax]
   14003d4ac:	pushf  
   14003d4ad:	imul   eax,DWORD PTR [rdx],0x0
   14003d4b0:	xor    BYTE PTR [rax],ah
   14003d4b2:	add    eax,DWORD PTR [rax]
   14003d4b4:	movabs al,ds:0xb400026bb300026b
   14003d4bd:	(bad)  
   14003d4be:	add    eax,DWORD PTR [rax]
   14003d4c0:	mov    bl,0x6b
   14003d4c2:	add    al,BYTE PTR [rax]
   14003d4c4:	in     al,dx
   14003d4c5:	imul   eax,DWORD PTR [rdx],0x0
   14003d4c8:	mov    esp,0xec00031f
   14003d4cd:	imul   eax,DWORD PTR [rdx],0x0
   14003d4d0:	or     al,0x6c
   14003d4d2:	add    al,BYTE PTR [rax]
   14003d4d4:	rcr    BYTE PTR [rdi],1
   14003d4d6:	add    eax,DWORD PTR [rax]
   14003d4d8:	adc    BYTE PTR [rdx+rax*1+0x0],ch
   14003d4dc:	and    ebp,DWORD PTR [rdx+rax*1+0x0]
   14003d4e0:	pop    rsp
   14003d4e1:	(bad)  
   14003d4e2:	add    eax,DWORD PTR [rax]
   14003d4e4:	and    ebp,DWORD PTR [rdx+rax*1+0x0]
   14003d4e8:	pop    rsp
   14003d4e9:	ins    BYTE PTR es:[rdi],dx
   14003d4ea:	add    al,BYTE PTR [rax]
   14003d4ec:	fs (bad) 
   14003d4ee:	add    eax,DWORD PTR [rax]
   14003d4f0:	pop    rsp
   14003d4f1:	ins    BYTE PTR es:[rdi],dx
   14003d4f2:	add    al,BYTE PTR [rax]
   14003d4f4:	jl     0x14003d562
   14003d4f6:	add    al,BYTE PTR [rax]
   14003d4f8:	js     0x14003d519
   14003d4fa:	add    eax,DWORD PTR [rax]

Disassembly of section .rsrc:

000000014003e000 <.rsrc>:
	...
   14003e00c:	add    BYTE PTR [rax],al
   14003e00e:	add    eax,0x300
   14003e013:	add    BYTE PTR [rax],bh
   14003e015:	add    BYTE PTR [rax],al
   14003e017:	add    BYTE PTR [rsi],0x0
   14003e01a:	add    BYTE PTR [rax],al
   14003e01c:	add    BYTE PTR [rax],0x0
   14003e01f:	or     BYTE PTR [rsi],0x0
   14003e022:	add    BYTE PTR [rax],al
   14003e024:	movabs al,ds:0xb800000010800000
   14003e02d:	add    BYTE PTR [rax],al
   14003e02f:	sbb    BYTE PTR [rax],0x0
   14003e032:	add    BYTE PTR [rax],al
   14003e034:	rol    BYTE PTR [rax],1
   14003e036:	add    BYTE PTR [rax+0x0],al
	...
   14003e044:	add    BYTE PTR [rax],al
   14003e046:	(bad)  
   14003e047:	add    BYTE PTR [rcx],al
   14003e049:	add    BYTE PTR [rax],al
   14003e04b:	add    al,ch
   14003e04d:	add    BYTE PTR [rax],al
   14003e04f:	add    BYTE PTR [rdx],0x0
   14003e052:	add    BYTE PTR [rax],al
   14003e054:	add    BYTE PTR [rcx],al
   14003e056:	add    BYTE PTR [rax+0x3],al
   14003e05c:	sbb    BYTE PTR [rcx],al
   14003e05e:	add    BYTE PTR [rax+0x4],al
   14003e064:	xor    BYTE PTR [rcx],al
   14003e066:	add    BYTE PTR [rax+0x5],al
   14003e06c:	add    QWORD PTR [rax],rax
   14003e06f:	add    BYTE PTR [rsi],0x0
   14003e072:	add    BYTE PTR [rax],al
   14003e074:	(bad)  
   14003e075:	add    DWORD PTR [rax],eax
   14003e077:	add    BYTE PTR [rdi],0x0
   14003e07a:	add    BYTE PTR [rax],al
   14003e07c:	js     0x14003e07f
   14003e07e:	add    BYTE PTR [rax+0x0],al
	...
   14003e08c:	add    BYTE PTR [rax],al
   14003e08e:	add    al,BYTE PTR [rax]
   14003e090:	(bad)  
   14003e091:	add    BYTE PTR [rax],al
   14003e093:	add    BYTE PTR [rax+0x8800001],dl
   14003e099:	add    BYTE PTR [rax],al
   14003e09b:	add    BYTE PTR [rax+0x800001],dh
	...
   14003e0a9:	add    BYTE PTR [rax],al
   14003e0ab:	add    BYTE PTR [rcx],al
   14003e0ad:	add    BYTE PTR [rax],al
   14003e0af:	add    al,bh
   14003e0b1:	add    al,BYTE PTR [rax]
   14003e0b3:	adc    al,0x1
   14003e0b6:	add    BYTE PTR [rax+0x0],al
	...
   14003e0c4:	add    BYTE PTR [rax],al
   14003e0c6:	add    DWORD PTR [rax],eax
   14003e0c8:	add    DWORD PTR [rax],eax
   14003e0ca:	add    BYTE PTR [rax],al
   14003e0cc:	call   0x14083e0d2
	...
   14003e0dd:	add    BYTE PTR [rcx],al
   14003e0df:	add    BYTE PTR [rcx],al
   14003e0e1:	add    BYTE PTR [rax],al
   14003e0e3:	add    BYTE PTR [rax],al
   14003e0e5:	add    al,BYTE PTR [rax]
   14003e0e7:	add    BYTE PTR [rax],0x0
	...
   14003e0f6:	add    DWORD PTR [rax],eax
   14003e0f8:	or     DWORD PTR [rax+rax*1],eax
   14003e0fb:	add    BYTE PTR [rax],bl
   14003e0fd:	add    al,BYTE PTR [rax]
	...
   14003e10b:	add    BYTE PTR [rax],al
   14003e10d:	add    BYTE PTR [rcx],al
   14003e10f:	add    BYTE PTR [rcx],cl
   14003e111:	add    al,0x0
   14003e113:	add    BYTE PTR [rax],ch
   14003e115:	add    al,BYTE PTR [rax]
	...
   14003e123:	add    BYTE PTR [rax],al
   14003e125:	add    BYTE PTR [rcx],al
   14003e127:	add    BYTE PTR [rcx],cl
   14003e129:	add    al,0x0
   14003e12b:	add    BYTE PTR [rax],bh
   14003e12d:	add    al,BYTE PTR [rax]
	...
   14003e13b:	add    BYTE PTR [rax],al
   14003e13d:	add    BYTE PTR [rcx],al
   14003e13f:	add    BYTE PTR [rcx],cl
   14003e141:	add    al,0x0
   14003e143:	add    BYTE PTR [rax+0x2],cl
	...
   14003e156:	add    DWORD PTR [rax],eax
   14003e158:	or     DWORD PTR [rax+rax*1],eax
   14003e15b:	add    BYTE PTR [rax+0x2],bl
	...
   14003e16e:	add    DWORD PTR [rax],eax
   14003e170:	or     DWORD PTR [rax+rax*1],eax
   14003e173:	add    BYTE PTR [rax+0x2],ch
	...
   14003e186:	add    DWORD PTR [rax],eax
   14003e188:	or     DWORD PTR [rax+rax*1],eax
   14003e18b:	add    BYTE PTR [rax+0x2],bh
	...
   14003e19e:	add    al,BYTE PTR [rax]
   14003e1a0:	or     DWORD PTR [rax+rax*1],eax
   14003e1a3:	add    BYTE PTR [rax+0x11000002],cl
   14003e1a9:	add    al,0x0
   14003e1ab:	add    BYTE PTR [rax+0x2],bl
	...
   14003e1bd:	add    BYTE PTR [rdx],al
   14003e1bf:	add    BYTE PTR [rcx],cl
   14003e1c1:	add    al,0x0
   14003e1c3:	add    BYTE PTR [rax+0x11000002],ch
   14003e1c9:	add    al,0x0
   14003e1cb:	add    BYTE PTR [rax+0x2],bh
	...
   14003e1dd:	add    BYTE PTR [rcx],al
   14003e1df:	add    BYTE PTR [rcx],cl
   14003e1e1:	add    al,0x0
   14003e1e3:	add    al,cl
   14003e1e5:	add    al,BYTE PTR [rax]
	...
   14003e1f3:	add    BYTE PTR [rax],al
   14003e1f5:	add    BYTE PTR [rcx],al
   14003e1f7:	add    BYTE PTR [rcx],cl
   14003e1f9:	add    al,0x0
   14003e1fb:	add    al,bl
   14003e1fd:	add    al,BYTE PTR [rax]
	...
   14003e20b:	add    BYTE PTR [rax],al
   14003e20d:	add    BYTE PTR [rcx],al
   14003e20f:	add    BYTE PTR [rcx],cl
   14003e211:	add    al,0x0
   14003e213:	add    al,ch
   14003e215:	add    al,BYTE PTR [rax]
   14003e217:	add    BYTE PTR [rax],bl
   14003e219:	in     al,dx
   14003e21a:	add    eax,DWORD PTR [rax]
   14003e21c:	sub    BYTE PTR [rip+0x0],al        # 0x14003e222
   14003e222:	add    BYTE PTR [rax],al
   14003e224:	add    BYTE PTR [rax],al
   14003e226:	add    BYTE PTR [rax],al
   14003e228:	rex icebp 
   14003e22a:	add    eax,DWORD PTR [rax]
   14003e22c:	push   0xb
   14003e231:	add    BYTE PTR [rax],al
   14003e233:	add    BYTE PTR [rax],al
   14003e235:	add    BYTE PTR [rax],al
   14003e237:	add    BYTE PTR [rax+0x280003fc],ch
   14003e23d:	adc    al,0x0
	...
   14003e247:	add    al,dl
   14003e249:	adc    BYTE PTR [rax+rax*1],al
   14003e24c:	sub    BYTE PTR [rip+0x0],ch        # 0x14003e252
   14003e252:	add    BYTE PTR [rax],al
   14003e254:	add    BYTE PTR [rax],al
   14003e256:	add    BYTE PTR [rax],al
   14003e258:	clc    
   14003e259:	cmp    eax,0x50280004
	...
   14003e266:	add    BYTE PTR [rax],al
   14003e268:	and    BYTE PTR [rsi+0x40280004],cl
   14003e26e:	add    DWORD PTR [rax],eax
	...
   14003e278:	rex.W (bad) 
   14003e27a:	add    eax,0x704700
	...
   14003e287:	add    al,bh
   14003e289:	ds (bad) 
   14003e28b:	add    BYTE PTR [rdx+0x1],ch
	...
   14003e296:	add    BYTE PTR [rax],al
   14003e298:	pop    rax
   14003e299:	rex.X (bad) 
   14003e29b:	add    BYTE PTR [rdx+0x1],ch
	...
   14003e2a6:	add    BYTE PTR [rax],al
   14003e2a8:	push   0xffffffffee000640
   14003e2ad:	add    DWORD PTR [rax],eax
	...
   14003e2b7:	add    al,cl
   14003e2b9:	rex.XB (bad) 
   14003e2bb:	add    dh,ch
   14003e2bd:	add    DWORD PTR [rax],eax
	...
   14003e2c7:	add    BYTE PTR [rax+0x6800063e],dl
	...
   14003e2d5:	add    BYTE PTR [rax],al
   14003e2d7:	add    al,ah
   14003e2d9:	call   0x1433be2e1
	...
   14003e2e6:	add    BYTE PTR [rax],al
   14003e2e8:	adc    bl,ah
   14003e2ea:	add    eax,DWORD PTR [rax]
   14003e2ec:	rol    BYTE PTR [rip+0x0],1        # 0x14003e2f2
   14003e2f2:	add    BYTE PTR [rax],al
   14003e2f4:	add    BYTE PTR [rax],al
   14003e2f6:	add    BYTE PTR [rax],al
   14003e2f8:	or     DWORD PTR [rax],eax
   14003e2fa:	rex.WB add BYTE PTR [r8+rax*1+0x49],al
   14003e2ff:	add    BYTE PTR [rdi+0x0],bl
   14003e302:	rex.WB add BYTE PTR [r11+0x0],al
   14003e306:	rex.WRXB add BYTE PTR [r14+0x0],r9b
   14003e30a:	xor    DWORD PTR [rax],eax
   14003e30c:	add    BYTE PTR [rax],al
   14003e30e:	add    BYTE PTR [rax],al
   14003e310:	cmp    al,0x3f
   14003e312:	js     0x14003e381
   14003e314:	ins    BYTE PTR es:[rdi],dx
   14003e315:	and    BYTE PTR [rsi+0x65],dh
   14003e318:	jb     0x14003e38d
   14003e31a:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   14003e321:	xor    BYTE PTR [rdx],ah
   14003e323:	and    BYTE PTR [rbp+0x6e],ah
   14003e326:	movsxd ebp,DWORD PTR [rdi+0x64]
   14003e329:	imul   ebp,DWORD PTR [rsi+0x67],0x5455223d
   14003e330:	rex.RX sub eax,0x73202238
   14003e336:	je     0x14003e399
   14003e338:	outs   dx,BYTE PTR ds:[rsi]
   14003e339:	fs (bad) 
   14003e33b:	ins    BYTE PTR es:[rdi],dx
   14003e33c:	outs   dx,DWORD PTR ds:[rsi]
   14003e33d:	outs   dx,BYTE PTR ds:[rsi]
   14003e33e:	gs cmp eax,0x73657922
   14003e344:	and    bh,BYTE PTR [rdi]
   14003e346:	or     bh,BYTE PTR ds:[rcx+riz*2]
   14003e34a:	jae    0x14003e3bf
   14003e34c:	gs ins DWORD PTR es:[rdi],dx
   14003e34e:	(bad)  
   14003e34f:	ins    BYTE PTR es:[rdi],dx
   14003e350:	jns    0x14003e372
   14003e352:	js     0x14003e3c1
   14003e354:	ins    BYTE PTR es:[rdi],dx
   14003e355:	outs   dx,BYTE PTR ds:[rsi]
   14003e356:	jae    0x14003e395
   14003e358:	and    dh,BYTE PTR [rbp+0x72]
   14003e35b:	outs   dx,BYTE PTR ds:[rsi]
   14003e35c:	cmp    dh,BYTE PTR [rbx+0x63]
   14003e35f:	push   0x73616d65
   14003e364:	sub    eax,0x7263696d
   14003e369:	outs   dx,DWORD PTR ds:[rsi]
   14003e36a:	jae    0x14003e3db
   14003e36c:	data16 je 0x14003e39c
   14003e36f:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14003e372:	cmp    ah,BYTE PTR [rcx+0x73]
   14003e375:	ins    DWORD PTR es:[rdi],dx
   14003e376:	cs jbe 0x14003e3aa
   14003e379:	and    ah,BYTE PTR [rax]
   14003e37b:	ins    DWORD PTR es:[rdi],dx
   14003e37c:	(bad)  
   14003e37d:	outs   dx,BYTE PTR ds:[rsi]
   14003e37e:	imul   esp,DWORD PTR [rsi+0x65],0x65567473
   14003e385:	jb     0x14003e3fa
   14003e387:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   14003e38e:	xor    BYTE PTR [rdx],ah
   14003e390:	or     cl,BYTE PTR ds:[rdx]
   14003e393:	and    BYTE PTR [rax],ah
   14003e395:	cmp    al,0x64
   14003e397:	gs jae 0x14003e3fd
   14003e39a:	jb     0x14003e405
   14003e39c:	jo     0x14003e412
   14003e39e:	imul   ebp,DWORD PTR [rdi+0x6e],0x74614d3e
   14003e3a5:	push   0x6b726f57
   14003e3aa:	jae    0x14003e3cc
   14003e3ac:	imul   ebp,DWORD PTR [rsi+0x73],0x6c6c6174
   14003e3b3:	pop    rdi
   14003e3b4:	jae    0x14003e42b
   14003e3b6:	jo     0x14003e428
   14003e3b8:	outs   dx,DWORD PTR ds:[rsi]
   14003e3b9:	jb     0x14003e42f
   14003e3bb:	jae    0x14003e42c
   14003e3bd:	data16 je 0x14003e437
   14003e3c0:	(bad)  
   14003e3c1:	jb     0x14003e428
   14003e3c3:	cmp    al,0x2f
   14003e3c5:	fs gs jae 0x14003e42c
   14003e3c9:	jb     0x14003e434
   14003e3cb:	jo     0x14003e441
   14003e3cd:	imul   ebp,DWORD PTR [rdi+0x6e],0x20200a3e
   14003e3d4:	cmp    al,0x21
   14003e3d6:	sub    eax,0x6449202d
   14003e3db:	outs   dx,BYTE PTR gs:[rsi]
   14003e3dd:	je     0x14003e448
   14003e3df:	data16 jns 0x14003e402
   14003e3e2:	je     0x14003e44c
   14003e3e4:	and    BYTE PTR gs:[rcx+0x70],ah
   14003e3e8:	jo     0x14003e456
   14003e3ea:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   14003e3f1:	and    BYTE PTR [rbx+0x65],dh
   14003e3f4:	movsxd esi,DWORD PTR [rbp+0x72]
   14003e3f7:	imul   esi,DWORD PTR [rcx+rdi*2+0x20],0x75716572
   14003e3ff:	imul   esi,DWORD PTR [rdx+0x65],0x746e656d
   14003e406:	jae    0x14003e436
   14003e408:	and    BYTE PTR [rip+0x200a3e2d],ch        # 0x1600e223b
   14003e40e:	and    BYTE PTR [rbp*2+0x73615f73],bh
   14003e415:	ins    DWORD PTR es:[rdi],dx
   14003e416:	jbe    0x14003e44a
   14003e418:	cmp    dh,BYTE PTR [rdx+rsi*2+0x75]
   14003e41c:	jae    0x14003e492
   14003e41e:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14003e420:	outs   dx,WORD PTR ds:[rsi]
   14003e422:	and    BYTE PTR [rax+0x6d],bh
   14003e425:	ins    BYTE PTR es:[rdi],dx
   14003e426:	outs   dx,BYTE PTR ds:[rsi]
   14003e427:	jae    0x14003e463
   14003e429:	ins    DWORD PTR es:[rdi],dx
   14003e42a:	jae    0x14003e48b
   14003e42c:	(bad)  
   14003e42d:	jae    0x14003e49c
   14003e42f:	jbe    0x14003e463
   14003e431:	cmp    eax,0x6e727522
   14003e436:	cmp    dh,BYTE PTR [rbx+0x63]
   14003e439:	push   0x73616d65
   14003e43e:	sub    eax,0x7263696d
   14003e443:	outs   dx,DWORD PTR ds:[rsi]
   14003e444:	jae    0x14003e4b5
   14003e446:	data16 je 0x14003e476
   14003e449:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14003e44c:	cmp    ah,BYTE PTR [rcx+0x73]
   14003e44f:	ins    DWORD PTR es:[rdi],dx
   14003e450:	cs jbe 0x14003e485
   14003e453:	and    bh,BYTE PTR [rsi]
   14003e455:	or     ah,BYTE PTR [rax]
   14003e457:	and    BYTE PTR [rax],ah
   14003e459:	and    BYTE PTR [rbp*2+0x73615f73],bh
   14003e460:	ins    DWORD PTR es:[rdi],dx
   14003e461:	jbe    0x14003e495
   14003e463:	cmp    dh,BYTE PTR [rbx+0x65]
   14003e466:	movsxd esi,DWORD PTR [rbp+0x72]
   14003e469:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x2020200a
   14003e471:	and    BYTE PTR [rax],ah
   14003e473:	and    BYTE PTR [rbp*2+0x73615f73],bh
   14003e47a:	ins    DWORD PTR es:[rdi],dx
   14003e47b:	jbe    0x14003e4af
   14003e47d:	cmp    dh,BYTE PTR [rdx+0x65]
   14003e480:	jno    0x14003e4f7
   14003e482:	gs jae 0x14003e4f9
   14003e485:	gs fs push rax
   14003e488:	jb     0x14003e4f3
   14003e48a:	jbe    0x14003e4f5
   14003e48c:	ins    BYTE PTR es:[rdi],dx
   14003e48d:	gs addr32 gs jae 0x14003e4d0
   14003e492:	or     ah,BYTE PTR [rax]
   14003e494:	and    BYTE PTR [rax],ah
   14003e496:	and    BYTE PTR [rax],ah
   14003e498:	and    BYTE PTR [rax],ah
   14003e49a:	and    BYTE PTR [rbp*2+0x73615f73],bh
   14003e4a1:	ins    DWORD PTR es:[rdi],dx
   14003e4a2:	jbe    0x14003e4d6
   14003e4a4:	cmp    dh,BYTE PTR [rdx+0x65]
   14003e4a7:	jno    0x14003e51e
   14003e4a9:	gs jae 0x14003e520
   14003e4ac:	gs fs rex.RB js 0x14003e516
   14003e4b1:	movsxd esi,DWORD PTR [rbp+0x74]
   14003e4b4:	imul   ebp,DWORD PTR [rdi+0x6e],0x6576654c
   14003e4bb:	ins    BYTE PTR es:[rdi],dx
   14003e4bc:	and    BYTE PTR [rbp+riz*2+0x76],ch
   14003e4c0:	gs ins BYTE PTR es:[rdi],dx
   14003e4c2:	cmp    eax,0x49736122
   14003e4c7:	outs   dx,BYTE PTR ds:[rsi]
   14003e4c8:	jbe    0x14003e539
   14003e4ca:	imul   esp,DWORD PTR [rbp+0x72],0x22
   14003e4ce:	or     ah,BYTE PTR [rax]
   14003e4d0:	and    BYTE PTR [rax],ah
   14003e4d2:	and    BYTE PTR [rax],ah
   14003e4d4:	and    BYTE PTR [rax],ah
   14003e4d6:	and    BYTE PTR [rax],ah
   14003e4d8:	and    BYTE PTR [rbp+0x69],dh
   14003e4db:	movsxd esp,DWORD PTR [r11+0x65]
   14003e4df:	jae    0x14003e554
   14003e4e1:	cmp    eax,0x6c616622
   14003e4e6:	jae    0x14003e54d
   14003e4e8:	and    bh,BYTE PTR [rsi]
   14003e4ea:	or     ah,BYTE PTR [rax]
   14003e4ec:	and    BYTE PTR [rax],ah
   14003e4ee:	and    BYTE PTR [rax],ah
   14003e4f0:	and    BYTE PTR [rax],ah
   14003e4f2:	and    BYTE PTR [rdi+rbp*1],bh
   14003e4f5:	ins    DWORD PTR es:[rdi],dx
   14003e4f6:	jae    0x14003e557
   14003e4f8:	(bad)  
   14003e4f9:	jae    0x14003e568
   14003e4fb:	jbe    0x14003e52f
   14003e4fd:	cmp    dh,BYTE PTR [rdx+0x65]
   14003e500:	jno    0x14003e577
   14003e502:	gs jae 0x14003e579
   14003e505:	gs fs rex.RB js 0x14003e56f
   14003e50a:	movsxd esi,DWORD PTR [rbp+0x74]
   14003e50d:	imul   ebp,DWORD PTR [rdi+0x6e],0x6576654c
   14003e514:	ins    BYTE PTR es:[rdi],dx
   14003e515:	or     ah,BYTE PTR ds:[rax]
   14003e518:	and    BYTE PTR [rax],ah
   14003e51a:	and    BYTE PTR [rax],ah
   14003e51c:	and    BYTE PTR [rdi+rbp*1],bh
   14003e51f:	ins    DWORD PTR es:[rdi],dx
   14003e520:	jae    0x14003e581
   14003e522:	(bad)  
   14003e523:	jae    0x14003e592
   14003e525:	jbe    0x14003e559
   14003e527:	cmp    dh,BYTE PTR [rdx+0x65]
   14003e52a:	jno    0x14003e5a1
   14003e52c:	gs jae 0x14003e5a3
   14003e52f:	gs fs push rax
   14003e532:	jb     0x14003e59d
   14003e534:	jbe    0x14003e59f
   14003e536:	ins    BYTE PTR es:[rdi],dx
   14003e537:	gs addr32 gs jae 0x14003e57a
   14003e53c:	or     ah,BYTE PTR [rax]
   14003e53e:	and    BYTE PTR [rax],ah
   14003e540:	and    BYTE PTR [rdi+rbp*1],bh
   14003e543:	ins    DWORD PTR es:[rdi],dx
   14003e544:	jae    0x14003e5a5
   14003e546:	(bad)  
   14003e547:	jae    0x14003e5b6
   14003e549:	jbe    0x14003e57d
   14003e54b:	cmp    dh,BYTE PTR [rbx+0x65]
   14003e54e:	movsxd esi,DWORD PTR [rbp+0x72]
   14003e551:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x3c20200a
   14003e559:	(bad)  
   14003e55a:	ins    DWORD PTR es:[rdi],dx
   14003e55b:	jae    0x14003e5bc
   14003e55d:	(bad)  
   14003e55e:	jae    0x14003e5cd
   14003e560:	jbe    0x14003e594
   14003e562:	cmp    dh,BYTE PTR [rdx+rsi*2+0x75]
   14003e566:	jae    0x14003e5dc
   14003e568:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14003e56a:	outs   dx,WORD PTR ds:[rsi]
   14003e56c:	or     cl,BYTE PTR ds:[rdx]
   14003e56f:	and    BYTE PTR [rbx+riz*2],bh
   14003e572:	outs   dx,DWORD PTR ds:[rsi]
   14003e573:	ins    DWORD PTR es:[rdi],dx
   14003e574:	jo     0x14003e5d7
   14003e576:	je     0x14003e5e1
   14003e578:	(bad)  
   14003e579:	imul   ebp,DWORD PTR [rcx+rbp*2+0x74],0x6d782079
   14003e581:	ins    BYTE PTR es:[rdi],dx
   14003e582:	outs   dx,BYTE PTR ds:[rsi]
   14003e583:	jae    0x14003e5c2
   14003e585:	and    dh,BYTE PTR [rbp+0x72]
   14003e588:	outs   dx,BYTE PTR ds:[rsi]
   14003e589:	cmp    dh,BYTE PTR [rbx+0x63]
   14003e58c:	push   0x73616d65
   14003e591:	sub    eax,0x7263696d
   14003e596:	outs   dx,DWORD PTR ds:[rsi]
   14003e597:	jae    0x14003e608
   14003e599:	data16 je 0x14003e5c9
   14003e59c:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14003e59f:	cmp    ah,BYTE PTR [rbx+0x6f]
   14003e5a2:	ins    DWORD PTR es:[rdi],dx
   14003e5a3:	jo     0x14003e606
   14003e5a5:	je     0x14003e610
   14003e5a7:	(bad)  
   14003e5a8:	imul   ebp,DWORD PTR [rcx+rbp*2+0x74],0x31762e79
   14003e5b0:	and    bh,BYTE PTR [rsi]
   14003e5b2:	or     ah,BYTE PTR [rax]
   14003e5b4:	and    BYTE PTR [rax],ah
   14003e5b6:	and    BYTE PTR [rcx+riz*2],bh
   14003e5b9:	jo     0x14003e62b
   14003e5bb:	ins    BYTE PTR es:[rdi],dx
   14003e5bc:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   14003e5c3:	or     ah,BYTE PTR ds:[rax]
   14003e5c6:	and    BYTE PTR [rax],ah
   14003e5c8:	and    BYTE PTR [rax],ah
   14003e5ca:	and    BYTE PTR [rcx+riz*1],bh
   14003e5cd:	sub    eax,0x6957202d
   14003e5d2:	outs   dx,BYTE PTR ds:[rsi]
   14003e5d3:	outs   dx,DWORD PTR fs:[rsi]
   14003e5d5:	ja     0x14003e64a
   14003e5d7:	and    BYTE PTR [rsi+0x69],dl
   14003e5da:	jae    0x14003e650
   14003e5dc:	(bad)  
   14003e5dd:	and    BYTE PTR [rip+0x200a3e2d],ch        # 0x1600e2410
   14003e5e3:	and    BYTE PTR [rax],ah
   14003e5e5:	and    BYTE PTR [rax],ah
   14003e5e7:	and    BYTE PTR [rbx+rsi*2],bh
   14003e5ea:	jne    0x14003e65c
   14003e5ec:	jo     0x14003e65d
   14003e5ee:	jb     0x14003e664
   14003e5f0:	gs fs rex.WRXB push r11
   14003e5f4:	and    BYTE PTR [rcx+0x64],cl
   14003e5f7:	cmp    eax,0x32657b22
   14003e5fc:	xor    BYTE PTR [rcx],dh
   14003e5fe:	xor    DWORD PTR [rsi*1+0x35312d37],esi
   14003e605:	xor    al,0x36
   14003e607:	sub    eax,0x35633334
   14003e60c:	sub    eax,0x65663561
   14003e611:	sub    eax,0x64383030
   14003e616:	gs gs xor esp,DWORD PTR gs:[rbx+rsi*1+0x66]
   14003e61d:	xor    BYTE PTR [rbp+0x22],bh
   14003e620:	(bad)  
   14003e621:	or     ah,BYTE PTR ds:[rax]
   14003e624:	and    BYTE PTR [rax],ah
   14003e626:	and    BYTE PTR [rax],ah
   14003e628:	and    BYTE PTR [rcx+riz*1],bh
   14003e62b:	sub    eax,0x6957202d
   14003e630:	outs   dx,BYTE PTR ds:[rsi]
   14003e631:	outs   dx,DWORD PTR fs:[rsi]
   14003e633:	ja     0x14003e6a8
   14003e635:	and    BYTE PTR [rdi],dh
   14003e637:	and    BYTE PTR [rip+0x200a3e2d],ch        # 0x1600e246a
   14003e63d:	and    BYTE PTR [rax],ah
   14003e63f:	and    BYTE PTR [rax],ah
   14003e641:	and    BYTE PTR [rbx+rsi*2],bh
   14003e644:	jne    0x14003e6b6
   14003e646:	jo     0x14003e6b7
   14003e648:	jb     0x14003e6be
   14003e64a:	gs fs rex.WRXB push r11
   14003e64e:	and    BYTE PTR [rcx+0x64],cl
   14003e651:	cmp    eax,0x35337b22
   14003e656:	xor    DWORD PTR [rbx],esi
   14003e658:	cmp    BYTE PTR [rdx+0x39],ah
   14003e65b:	(bad)  
   14003e65c:	sub    eax,0x36396435
   14003e661:	sub    eax,0x64626634
   14003e666:	sub    eax,0x64326538
   14003e66b:	sub    eax,0x34343261
   14003e670:	xor    BYTE PTR [rdx],dh
   14003e672:	xor    dh,BYTE PTR [rip+0x61333966]        # 0x1a1371fde
   14003e678:	jge    0x14003e69c
   14003e67a:	(bad)  
   14003e67b:	or     ah,BYTE PTR ds:[rax]
   14003e67e:	and    BYTE PTR [rax],ah
   14003e680:	and    BYTE PTR [rax],ah
   14003e682:	and    BYTE PTR [rcx+riz*1],bh
   14003e685:	sub    eax,0x6957202d
   14003e68a:	outs   dx,BYTE PTR ds:[rsi]
   14003e68b:	outs   dx,DWORD PTR fs:[rsi]
   14003e68d:	ja     0x14003e702
   14003e68f:	and    BYTE PTR [rax],bh
   14003e691:	and    BYTE PTR [rip+0x200a3e2d],ch        # 0x1600e24c4
   14003e697:	and    BYTE PTR [rax],ah
   14003e699:	and    BYTE PTR [rax],ah
   14003e69b:	and    BYTE PTR [rbx+rsi*2],bh
   14003e69e:	jne    0x14003e710
   14003e6a0:	jo     0x14003e711
   14003e6a2:	jb     0x14003e718
   14003e6a4:	gs fs rex.WRXB push r11
   14003e6a8:	and    BYTE PTR [rcx+0x64],cl
   14003e6ab:	cmp    eax,0x61347b22
   14003e6b0:	xor    ah,BYTE PTR [rsi+0x32]
   14003e6b3:	cmp    BYTE PTR [rbp+0x33],ah
   14003e6b6:	sub    eax,0x39623335
   14003e6bb:	sub    eax,0x31343434
   14003e6c0:	sub    eax,0x63396162
   14003e6c5:	sub    eax,0x64393664
   14003e6ca:	xor    al,0x61
   14003e6cc:	xor    al,0x61
   14003e6ce:	ss xor edi,DWORD PTR gs:[rax]
   14003e6d2:	jge    0x14003e6f6
   14003e6d4:	(bad)  
   14003e6d5:	or     ah,BYTE PTR ds:[rax]
   14003e6d8:	and    BYTE PTR [rax],ah
   14003e6da:	and    BYTE PTR [rax],ah
   14003e6dc:	and    BYTE PTR [rcx+riz*1],bh
   14003e6df:	sub    eax,0x6957202d
   14003e6e4:	outs   dx,BYTE PTR ds:[rsi]
   14003e6e5:	outs   dx,DWORD PTR fs:[rsi]
   14003e6e7:	ja     0x14003e75c
   14003e6e9:	and    BYTE PTR [rax],bh
   14003e6eb:	xor    DWORD PTR cs:[rax],esp
   14003e6ee:	sub    eax,0x200a3e2d
   14003e6f3:	and    BYTE PTR [rax],ah
   14003e6f5:	and    BYTE PTR [rax],ah
   14003e6f7:	and    BYTE PTR [rbx+rsi*2],bh
   14003e6fa:	jne    0x14003e76c
   14003e6fc:	jo     0x14003e76d
   14003e6fe:	jb     0x14003e774
   14003e700:	gs fs rex.WRXB push r11
   14003e704:	and    BYTE PTR [rcx+0x64],cl
   14003e707:	cmp    eax,0x66317b22
   14003e70c:	ss (bad) 
   14003e70e:	movsxd esi,DWORD PTR ss:[rdi]
   14003e711:	ss sub eax,0x31653038
   14003e717:	sub    eax,0x39333234
   14003e71c:	sub    eax,0x62623539
   14003e721:	sub    eax,0x30643338
   14003e726:	data16 ss xor BYTE PTR fs:[rcx+riz*2+0x37],ah
   14003e72d:	cmp    BYTE PTR [rbp+0x22],bh
   14003e730:	(bad)  
   14003e731:	or     ah,BYTE PTR ds:[rax]
   14003e734:	and    BYTE PTR [rax],ah
   14003e736:	and    BYTE PTR [rax],ah
   14003e738:	and    BYTE PTR [rcx+riz*1],bh
   14003e73b:	sub    eax,0x6957202d
   14003e740:	outs   dx,BYTE PTR ds:[rsi]
   14003e741:	outs   dx,DWORD PTR fs:[rsi]
   14003e743:	ja     0x14003e7b8
   14003e745:	and    BYTE PTR [rcx],dh
   14003e747:	xor    BYTE PTR [rax],ah
   14003e749:	sub    eax,0x200a3e2d
   14003e74e:	and    BYTE PTR [rax],ah
   14003e750:	and    BYTE PTR [rax],ah
   14003e752:	and    BYTE PTR [rbx+rsi*2],bh
   14003e755:	jne    0x14003e7c7
   14003e757:	jo     0x14003e7c8
   14003e759:	jb     0x14003e7cf
   14003e75b:	gs fs rex.WRXB push r11
   14003e75f:	and    BYTE PTR [rcx+0x64],cl
   14003e762:	cmp    eax,0x65387b22
   14003e767:	xor    BYTE PTR [rsi+0x37],ah
   14003e76a:	(bad)  
   14003e76b:	xor    DWORD PTR [rdx],esi
   14003e76d:	sub    eax,0x33626662
   14003e772:	sub    eax,0x38656634
   14003e777:	sub    eax,0x35613962
   14003e77c:	sub    eax,0x64663834
   14003e781:	xor    eax,0x35316130
   14003e786:	(bad)  
   14003e787:	cmp    DWORD PTR [rcx+0x7d],esp
   14003e78a:	and    ch,BYTE PTR [rdi]
   14003e78c:	or     ah,BYTE PTR ds:[rax]
   14003e78f:	and    BYTE PTR [rax],ah
   14003e791:	and    BYTE PTR [rdi+rbp*1],bh
   14003e794:	(bad)  
   14003e795:	jo     0x14003e807
   14003e797:	ins    BYTE PTR es:[rdi],dx
   14003e798:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   14003e79f:	or     ah,BYTE PTR ds:[rax]
   14003e7a2:	and    BYTE PTR [rdi+rbp*1],bh
   14003e7a5:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14003e7a8:	jo     0x14003e80b
   14003e7aa:	je     0x14003e815
   14003e7ac:	(bad)  
   14003e7ad:	imul   ebp,DWORD PTR [rcx+rbp*2+0x74],0xa0a3e79
   14003e7b5:	and    BYTE PTR [rax],ah
   14003e7b7:	cmp    al,0x21
   14003e7b9:	sub    eax,0x614d202d
   14003e7be:	imul   esp,DWORD PTR [rbp+0x20],0x74
   14003e7c2:	push   0x70612065
   14003e7c7:	jo     0x14003e835
   14003e7c9:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   14003e7d0:	and    BYTE PTR [rax+rdx*2+0x49],al
   14003e7d4:	and    BYTE PTR [rcx+0x77],ah
   14003e7d7:	(bad)  
   14003e7d8:	jb     0x14003e83f
   14003e7da:	and    BYTE PTR cs:[rip+0x200a3e2d],ch        # 0x1600e260e
   14003e7e1:	and    BYTE PTR [rcx+riz*2],bh
   14003e7e4:	jae    0x14003e853
   14003e7e6:	jbe    0x14003e81b
   14003e7e8:	cmp    ah,BYTE PTR [rcx+0x70]
   14003e7eb:	jo     0x14003e859
   14003e7ed:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   14003e7f4:	and    BYTE PTR [rax+0x6d],bh
   14003e7f7:	ins    BYTE PTR es:[rdi],dx
   14003e7f8:	outs   dx,BYTE PTR ds:[rsi]
   14003e7f9:	jae    0x14003e835
   14003e7fb:	(bad)  
   14003e7fc:	jae    0x14003e86b
   14003e7fe:	jbe    0x14003e833
   14003e800:	cmp    eax,0x6e727522
   14003e805:	cmp    dh,BYTE PTR [rbx+0x63]
   14003e808:	push   0x73616d65
   14003e80d:	sub    eax,0x7263696d
   14003e812:	outs   dx,DWORD PTR ds:[rsi]
   14003e813:	jae    0x14003e884
   14003e815:	data16 je 0x14003e845
   14003e818:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14003e81b:	cmp    ah,BYTE PTR [rcx+0x73]
   14003e81e:	ins    DWORD PTR es:[rdi],dx
   14003e81f:	cs jbe 0x14003e855
   14003e822:	and    bh,BYTE PTR [rsi]
   14003e824:	or     ah,BYTE PTR [rax]
   14003e826:	and    BYTE PTR [rax],ah
   14003e828:	and    BYTE PTR [rcx+riz*2],bh
   14003e82b:	jae    0x14003e89a
   14003e82d:	jbe    0x14003e862
   14003e82f:	cmp    dh,BYTE PTR [rdi+0x69]
   14003e832:	outs   dx,BYTE PTR ds:[rsi]
   14003e833:	outs   dx,DWORD PTR fs:[rsi]
   14003e835:	ja     0x14003e8aa
   14003e837:	push   rbx
   14003e838:	gs je  0x14003e8af
   14003e83b:	imul   ebp,DWORD PTR [rsi+0x67],0x6d782073
   14003e842:	ins    BYTE PTR es:[rdi],dx
   14003e843:	outs   dx,BYTE PTR ds:[rsi]
   14003e844:	jae    0x14003e883
   14003e846:	and    ch,BYTE PTR [rax+0x74]
   14003e849:	je     0x14003e8bb
   14003e84b:	cmp    ch,BYTE PTR [rdi]
   14003e84d:	(bad)  
   14003e84e:	jae    0x14003e8b3
   14003e850:	push   0x73616d65
   14003e855:	cs ins DWORD PTR es:[rdi],dx
   14003e857:	imul   esp,DWORD PTR [rbx+0x72],0x666f736f
   14003e85e:	je     0x14003e88e
   14003e860:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14003e863:	(bad)  
   14003e864:	push   rbx
   14003e865:	rex.WRB
   14003e866:	rex.WB (bad) 
   14003e868:	xor    dh,BYTE PTR [rax]
   14003e86a:	xor    BYTE PTR [rip+0x6e69572f],dh        # 0x1ae6d3f9f
   14003e870:	outs   dx,DWORD PTR fs:[rsi]
   14003e872:	ja     0x14003e8e7
   14003e874:	push   rbx
   14003e875:	gs je  0x14003e8ec
   14003e878:	imul   ebp,DWORD PTR [rsi+0x67],0xa3e2273
   14003e87f:	and    BYTE PTR [rax],ah
   14003e881:	and    BYTE PTR [rax],ah
   14003e883:	and    BYTE PTR [rax],ah
   14003e885:	cmp    al,0x64
   14003e887:	jo     0x14003e8f2
   14003e889:	rex.B ja 0x14003e8ed
   14003e88c:	jb     0x14003e8f3
   14003e88e:	ds je  0x14003e903
   14003e891:	jne    0x14003e8f8
   14003e893:	cmp    al,0x2f
   14003e895:	fs jo  0x14003e901
   14003e898:	rex.B ja 0x14003e8fc
   14003e89b:	jb     0x14003e902
   14003e89d:	or     ah,BYTE PTR ds:[rax]
   14003e8a0:	and    BYTE PTR [rax],ah
   14003e8a2:	and    BYTE PTR [rdi+rbp*1],bh
   14003e8a5:	(bad)  
   14003e8a6:	jae    0x14003e915
   14003e8a8:	jbe    0x14003e8dd
   14003e8aa:	cmp    dh,BYTE PTR [rdi+0x69]
   14003e8ad:	outs   dx,BYTE PTR ds:[rsi]
   14003e8ae:	outs   dx,DWORD PTR fs:[rsi]
   14003e8b0:	ja     0x14003e925
   14003e8b2:	push   rbx
   14003e8b3:	gs je  0x14003e92a
   14003e8b6:	imul   ebp,DWORD PTR [rsi+0x67],0x200a3e73
   14003e8bd:	and    BYTE PTR [rdi+rbp*1],bh
   14003e8c0:	(bad)  
   14003e8c1:	jae    0x14003e930
   14003e8c3:	jbe    0x14003e8f8
   14003e8c5:	cmp    ah,BYTE PTR [rcx+0x70]
   14003e8c8:	jo     0x14003e936
   14003e8ca:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   14003e8d1:	or     bh,BYTE PTR ds:[rdi+rbp*1]
   14003e8d5:	(bad)  
   14003e8d6:	jae    0x14003e94b
   14003e8d8:	gs ins DWORD PTR es:[rdi],dx
   14003e8da:	(bad)  
   14003e8db:	ins    BYTE PTR es:[rdi],dx
   14003e8dc:	jns    0x14003e91c
   14003e8de:	or     cl,BYTE PTR [rdx]
   14003e8e0:	cmp    BYTE PTR [rbx],al
   14003e8e2:	xor    al,0x0
   14003e8e4:	add    BYTE PTR [rax],al
   14003e8e6:	push   rsi
   14003e8e7:	add    BYTE PTR [rbx+0x0],dl
   14003e8ea:	pop    rdi
   14003e8eb:	add    BYTE PTR [rsi+0x0],dl
   14003e8ee:	add    BYTE PTR [r10+0x0],r10b
   14003e8f2:	push   rbx
   14003e8f3:	add    BYTE PTR [rcx+0x0],cl
   14003e8f6:	rex.WRXB add BYTE PTR [r14+0x0],r9b
   14003e8fa:	pop    rdi
   14003e8fb:	add    BYTE PTR [rcx+0x0],cl
   14003e8fe:	rex.WRX add BYTE PTR [rsi+0x0],r8b
   14003e902:	rex.WRXB add BYTE PTR [r8],r8b
   14003e905:	add    BYTE PTR [rax],al
   14003e907:	add    BYTE PTR [rbp+0xfeef04],bh
   14003e90d:	add    BYTE PTR [rcx],al
   14003e90f:	add    BYTE PTR [rax],al
   14003e911:	add    BYTE PTR [rcx],dl
   14003e913:	add    BYTE PTR [rax],al
   14003e915:	add    BYTE PTR [rax],al
   14003e917:	add    BYTE PTR [rax],al
   14003e919:	add    BYTE PTR [rcx],dl
   14003e91b:	add    BYTE PTR [rax],al
   14003e91d:	add    BYTE PTR [rax],al
   14003e91f:	add    BYTE PTR [rdi],bh
   14003e921:	add    BYTE PTR [rax],al
   14003e923:	add    BYTE PTR [rax],al
   14003e925:	add    BYTE PTR [rax],al
   14003e927:	add    BYTE PTR [rax+rax*1],al
   14003e92a:	add    al,0x0
   14003e92c:	add    DWORD PTR [rax],eax
	...
   14003e93a:	add    BYTE PTR [rax],al
   14003e93c:	cwde   
   14003e93d:	add    al,BYTE PTR [rax]
   14003e93f:	add    BYTE PTR [rcx],al
   14003e941:	add    BYTE PTR [rbx+0x0],dl
   14003e944:	je     0x14003e946
   14003e946:	jb     0x14003e948
   14003e948:	imul   eax,DWORD PTR [rax],0x67006e
   14003e94e:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14003e952:	ins    BYTE PTR es:[rdi],dx
   14003e953:	add    BYTE PTR [rbp+0x0],ah
   14003e956:	rex.WB add BYTE PTR [r14+0x0],bpl
   14003e95a:	data16 add BYTE PTR [rdi+0x0],ch
   14003e95e:	add    BYTE PTR [rax],al
   14003e960:	je     0x14003e964
   14003e962:	add    BYTE PTR [rax],al
   14003e964:	add    DWORD PTR [rax],eax
   14003e966:	xor    BYTE PTR [rax],al
   14003e968:	xor    al,0x0
   14003e96a:	xor    BYTE PTR [rax],al
   14003e96c:	cmp    DWORD PTR [rax],eax
   14003e96e:	xor    BYTE PTR [rax],al
   14003e970:	xor    al,0x0
   14003e972:	(bad)  
   14003e973:	add    BYTE PTR [rax],dh
   14003e975:	add    BYTE PTR [rax],al
   14003e977:	add    BYTE PTR [rsi+0x0],al
   14003e97a:	adc    eax,DWORD PTR [rax]
   14003e97c:	add    DWORD PTR [rax],eax
   14003e97e:	rex.XB add BYTE PTR [r15+0x0],bpl
   14003e982:	ins    DWORD PTR es:[rdi],dx
   14003e983:	add    BYTE PTR [rax+0x0],dh
   14003e986:	(bad)  
   14003e987:	add    BYTE PTR [rsi+0x0],ch
   14003e98a:	jns    0x14003e98c
   14003e98c:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   14003e990:	ins    DWORD PTR es:[rdi],dx
   14003e991:	add    BYTE PTR [rbp+0x0],ah
   14003e994:	add    BYTE PTR [rax],al
   14003e996:	add    BYTE PTR [rax],al
   14003e998:	push   rsp
   14003e999:	add    BYTE PTR [rax+0x0],ch
   14003e99c:	add    BYTE PTR gs:[rax],ah
   14003e99f:	add    BYTE PTR [rbp+0x0],cl
   14003e9a2:	(bad)  
   14003e9a3:	add    BYTE PTR [rax+rax*1+0x68],dh
   14003e9a7:	add    BYTE PTR [rdi+0x0],dl
   14003e9aa:	outs   dx,DWORD PTR ds:[rsi]
   14003e9ab:	add    BYTE PTR [rdx+0x0],dh
   14003e9ae:	imul   eax,DWORD PTR [rax],0x73
   14003e9b1:	add    BYTE PTR [rax+rax*1],ch
   14003e9b4:	and    BYTE PTR [rax],al
   14003e9b6:	rex.WB add BYTE PTR [r14+0x0],bpl
   14003e9ba:	movsxd eax,DWORD PTR [rax]
   14003e9bc:	add    BYTE PTR [rax],al
   14003e9be:	add    BYTE PTR [rax],al
   14003e9c0:	pop    rax
   14003e9c1:	add    BYTE PTR [rax],bl
   14003e9c3:	add    BYTE PTR [rcx],al
   14003e9c5:	add    BYTE PTR [rsi+0x0],al
   14003e9c8:	imul   eax,DWORD PTR [rax],0x65006c
   14003e9ce:	add    BYTE PTR [rbp+0x0],r12b
   14003e9d2:	jae    0x14003e9d4
   14003e9d4:	movsxd eax,DWORD PTR [rax]
   14003e9d6:	jb     0x14003e9d8
   14003e9d8:	imul   eax,DWORD PTR [rax],0x740070
   14003e9de:	imul   eax,DWORD PTR [rax],0x6e006f
   14003e9e4:	add    BYTE PTR [rax],al
   14003e9e6:	add    BYTE PTR [rax],al
   14003e9e8:	imul   eax,DWORD PTR [rax],0x73006e
   14003e9ee:	je     0x14003e9f0
   14003e9f0:	(bad)  
   14003e9f1:	add    BYTE PTR [rax+rax*1+0x6c],ch
   14003e9f5:	add    BYTE PTR [rdi+0x0],bl
   14003e9f8:	jae    0x14003e9fa
   14003e9fa:	jne    0x14003e9fc
   14003e9fc:	jo     0x14003e9fe
   14003e9fe:	jo     0x14003ea00
   14003ea00:	outs   dx,DWORD PTR ds:[rsi]
   14003ea01:	add    BYTE PTR [rdx+0x0],dh
   14003ea04:	je     0x14003ea06
   14003ea06:	jae    0x14003ea08
   14003ea08:	outs   dx,DWORD PTR ds:[rsi]
   14003ea09:	add    BYTE PTR [rsi+0x0],ah
   14003ea0c:	je     0x14003ea0e
   14003ea0e:	ja     0x14003ea10
   14003ea10:	(bad)  
   14003ea11:	add    BYTE PTR [rdx+0x0],dh
   14003ea14:	add    BYTE PTR gs:[rax],al
   14003ea17:	add    BYTE PTR [rax],bh
   14003ea19:	add    BYTE PTR [rax+rax*1],cl
   14003ea1c:	add    DWORD PTR [rax],eax
   14003ea1e:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14003ea22:	ins    BYTE PTR es:[rdi],dx
   14003ea23:	add    BYTE PTR [rbp+0x0],ah
   14003ea26:	push   rsi
   14003ea27:	add    BYTE PTR [rbp+0x0],ah
   14003ea2a:	jb     0x14003ea2c
   14003ea2c:	jae    0x14003ea2e
   14003ea2e:	imul   eax,DWORD PTR [rax],0x6e006f
   14003ea34:	add    BYTE PTR [rax],al
   14003ea36:	add    BYTE PTR [rax],al
   14003ea38:	xor    DWORD PTR [rax],eax
   14003ea3a:	(bad)  
   14003ea3b:	add    BYTE PTR [rax+rax*1],ch
   14003ea3e:	and    BYTE PTR [rax],al
   14003ea40:	xor    BYTE PTR [rax],al
   14003ea42:	sub    al,0x0
   14003ea44:	and    BYTE PTR [rax],al
   14003ea46:	xor    BYTE PTR [rax],al
   14003ea48:	sub    al,0x0
   14003ea4a:	and    BYTE PTR [rax],al
   14003ea4c:	xor    BYTE PTR [rax],al
   14003ea4e:	add    BYTE PTR [rax],al
   14003ea50:	push   rax
   14003ea51:	add    BYTE PTR [rax],bl
   14003ea53:	add    BYTE PTR [rcx],al
   14003ea55:	add    BYTE PTR [rcx+0x0],cl
   14003ea58:	outs   dx,BYTE PTR ds:[rsi]
   14003ea59:	add    BYTE PTR [rax+rax*1+0x65],dh
   14003ea5d:	add    BYTE PTR [rdx+0x0],dh
   14003ea60:	outs   dx,BYTE PTR ds:[rsi]
   14003ea61:	add    BYTE PTR [rcx+0x0],ah
   14003ea64:	ins    BYTE PTR es:[rdi],dx
   14003ea65:	add    BYTE PTR [rsi+0x0],cl
   14003ea68:	(bad)  
   14003ea69:	add    BYTE PTR [rbp+0x0],ch
   14003ea6c:	add    BYTE PTR gs:[rax],al
   14003ea6f:	add    BYTE PTR [rcx+0x0],ch
   14003ea72:	outs   dx,BYTE PTR ds:[rsi]
   14003ea73:	add    BYTE PTR [rbx+0x0],dh
   14003ea76:	je     0x14003ea78
   14003ea78:	(bad)  
   14003ea79:	add    BYTE PTR [rax+rax*1+0x6c],ch
   14003ea7d:	add    BYTE PTR [rdi+0x0],bl
   14003ea80:	jae    0x14003ea82
   14003ea82:	jne    0x14003ea84
   14003ea84:	jo     0x14003ea86
   14003ea86:	jo     0x14003ea88
   14003ea88:	outs   dx,DWORD PTR ds:[rsi]
   14003ea89:	add    BYTE PTR [rdx+0x0],dh
   14003ea8c:	je     0x14003ea8e
   14003ea8e:	jae    0x14003ea90
   14003ea90:	outs   dx,DWORD PTR ds:[rsi]
   14003ea91:	add    BYTE PTR [rsi+0x0],ah
   14003ea94:	je     0x14003ea96
   14003ea96:	ja     0x14003ea98
   14003ea98:	(bad)  
   14003ea99:	add    BYTE PTR [rdx+0x0],dh
   14003ea9c:	add    BYTE PTR gs:[rax],al
   14003ea9f:	add    BYTE PTR [rax+0x0],dl
   14003eaa2:	(bad)  
   14003eaa3:	add    BYTE PTR [rcx],al
   14003eaa5:	add    BYTE PTR [rax+rax*1+0x65],cl
   14003eaa9:	add    BYTE PTR [rdi+0x0],ah
   14003eaac:	(bad)  
   14003eaad:	add    BYTE PTR [rax+rax*1+0x43],ch
   14003eab1:	add    BYTE PTR [rdi+0x0],ch
   14003eab4:	jo     0x14003eab6
   14003eab6:	jns    0x14003eab8
   14003eab8:	jb     0x14003eaba
   14003eaba:	imul   eax,DWORD PTR [rax],0x680067
   14003eac0:	je     0x14003eac2
   14003eac2:	add    BYTE PTR [rax],al
   14003eac4:	rex.XB add BYTE PTR [r15+0x0],bpl
   14003eac8:	jo     0x14003eaca
   14003eaca:	jns    0x14003eacc
   14003eacc:	jb     0x14003eace
   14003eace:	imul   eax,DWORD PTR [rax],0x680067
   14003ead4:	je     0x14003ead6
   14003ead6:	and    BYTE PTR [rax],al
   14003ead8:	test   eax,0x32002000
   14003eadd:	add    BYTE PTR [rax],dh
   14003eadf:	add    BYTE PTR [rcx],dh
   14003eae1:	add    BYTE PTR [rsi],dh
   14003eae3:	add    BYTE PTR [rip+0x30003200],ch        # 0x170041ce9
   14003eae9:	add    BYTE PTR [rcx],dh
   14003eaeb:	add    BYTE PTR [rdi],dh
   14003eaed:	add    BYTE PTR [rax],al
   14003eaef:	add    BYTE PTR [rax+0x0],bl
   14003eaf2:	sbb    BYTE PTR [rax],al
   14003eaf4:	add    DWORD PTR [rax],eax
   14003eaf6:	rex.WRXB add BYTE PTR [r10+0x0],r14b
   14003eafa:	imul   eax,DWORD PTR [rax],0x690067
   14003eb00:	outs   dx,BYTE PTR ds:[rsi]
   14003eb01:	add    BYTE PTR [rcx+0x0],ah
   14003eb04:	ins    BYTE PTR es:[rdi],dx
   14003eb05:	add    BYTE PTR [rsi+0x0],al
   14003eb08:	imul   eax,DWORD PTR [rax],0x65006c
   14003eb0e:	outs   dx,BYTE PTR ds:[rsi]
   14003eb0f:	add    BYTE PTR [rcx+0x0],ah
   14003eb12:	ins    DWORD PTR es:[rdi],dx
   14003eb13:	add    BYTE PTR [rbp+0x0],ah
   14003eb16:	add    BYTE PTR [rax],al
   14003eb18:	imul   eax,DWORD PTR [rax],0x73006e
   14003eb1e:	je     0x14003eb20
   14003eb20:	(bad)  
   14003eb21:	add    BYTE PTR [rax+rax*1+0x6c],ch
   14003eb25:	add    BYTE PTR [rdi+0x0],bl
   14003eb28:	jae    0x14003eb2a
   14003eb2a:	jne    0x14003eb2c
   14003eb2c:	jo     0x14003eb2e
   14003eb2e:	jo     0x14003eb30
   14003eb30:	outs   dx,DWORD PTR ds:[rsi]
   14003eb31:	add    BYTE PTR [rdx+0x0],dh
   14003eb34:	je     0x14003eb36
   14003eb36:	jae    0x14003eb38
   14003eb38:	outs   dx,DWORD PTR ds:[rsi]
   14003eb39:	add    BYTE PTR [rsi+0x0],ah
   14003eb3c:	je     0x14003eb3e
   14003eb3e:	ja     0x14003eb40
   14003eb40:	(bad)  
   14003eb41:	add    BYTE PTR [rdx+0x0],dh
   14003eb44:	add    BYTE PTR gs:[rax],al
   14003eb47:	add    BYTE PTR [rax+0x0],dl
   14003eb4a:	sbb    BYTE PTR [rax],al
   14003eb4c:	add    DWORD PTR [rax],eax
   14003eb4e:	push   rax
   14003eb4f:	add    BYTE PTR [rdx+0x0],dh
   14003eb52:	outs   dx,DWORD PTR ds:[rsi]
   14003eb53:	add    BYTE PTR [rax+rax*1+0x75],ah
   14003eb57:	add    BYTE PTR [rbx+0x0],ah
   14003eb5a:	je     0x14003eb5c
   14003eb5c:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   14003eb60:	ins    DWORD PTR es:[rdi],dx
   14003eb61:	add    BYTE PTR [rbp+0x0],ah
   14003eb64:	add    BYTE PTR [rax],al
   14003eb66:	add    BYTE PTR [rax],al
   14003eb68:	imul   eax,DWORD PTR [rax],0x73006e
   14003eb6e:	je     0x14003eb70
   14003eb70:	(bad)  
   14003eb71:	add    BYTE PTR [rax+rax*1+0x6c],ch
   14003eb75:	add    BYTE PTR [rdi+0x0],bl
   14003eb78:	jae    0x14003eb7a
   14003eb7a:	jne    0x14003eb7c
   14003eb7c:	jo     0x14003eb7e
   14003eb7e:	jo     0x14003eb80
   14003eb80:	outs   dx,DWORD PTR ds:[rsi]
   14003eb81:	add    BYTE PTR [rdx+0x0],dh
   14003eb84:	je     0x14003eb86
   14003eb86:	jae    0x14003eb88
   14003eb88:	outs   dx,DWORD PTR ds:[rsi]
   14003eb89:	add    BYTE PTR [rsi+0x0],ah
   14003eb8c:	je     0x14003eb8e
   14003eb8e:	ja     0x14003eb90
   14003eb90:	(bad)  
   14003eb91:	add    BYTE PTR [rdx+0x0],dh
   14003eb94:	add    BYTE PTR gs:[rax],al
   14003eb97:	add    BYTE PTR [rax+rax*1],bh
   14003eb9a:	or     al,0x0
   14003eb9c:	add    DWORD PTR [rax],eax
   14003eb9e:	push   rax
   14003eb9f:	add    BYTE PTR [rdx+0x0],dh
   14003eba2:	outs   dx,DWORD PTR ds:[rsi]
   14003eba3:	add    BYTE PTR [rax+rax*1+0x75],ah
   14003eba7:	add    BYTE PTR [rbx+0x0],ah
   14003ebaa:	je     0x14003ebac
   14003ebac:	push   rsi
   14003ebad:	add    BYTE PTR [rbp+0x0],ah
   14003ebb0:	jb     0x14003ebb2
   14003ebb2:	jae    0x14003ebb4
   14003ebb4:	imul   eax,DWORD PTR [rax],0x6e006f
   14003ebba:	add    BYTE PTR [rax],al
   14003ebbc:	xor    DWORD PTR [rax],eax
   14003ebbe:	(bad)  
   14003ebbf:	add    BYTE PTR [rax+rax*1],ch
   14003ebc2:	and    BYTE PTR [rax],al
   14003ebc4:	xor    BYTE PTR [rax],al
   14003ebc6:	sub    al,0x0
   14003ebc8:	and    BYTE PTR [rax],al
   14003ebca:	xor    BYTE PTR [rax],al
   14003ebcc:	sub    al,0x0
   14003ebce:	and    BYTE PTR [rax],al
   14003ebd0:	xor    BYTE PTR [rax],al
   14003ebd2:	add    BYTE PTR [rax],al
   14003ebd4:	add    BYTE PTR [rax],r8b
   14003ebd7:	add    BYTE PTR [rcx],al
   14003ebd9:	add    BYTE PTR [rsi+0x0],dl
   14003ebdc:	(bad)  
   14003ebdd:	add    BYTE PTR [rdx+0x0],dh
   14003ebe0:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14003ebe4:	ins    BYTE PTR es:[rdi],dx
   14003ebe5:	add    BYTE PTR [rbp+0x0],ah
   14003ebe8:	rex.WB add BYTE PTR [r14+0x0],bpl
   14003ebec:	data16 add BYTE PTR [rdi+0x0],ch
   14003ebf0:	add    BYTE PTR [rax],al
   14003ebf2:	add    BYTE PTR [rax],al
   14003ebf4:	and    al,0x0
   14003ebf6:	add    al,0x0
   14003ebf8:	add    BYTE PTR [rax],al
   14003ebfa:	push   rsp
   14003ebfb:	add    BYTE PTR [rdx+0x0],dh
   14003ebfe:	(bad)  
   14003ebff:	add    BYTE PTR [rsi+0x0],ch
   14003ec02:	jae    0x14003ec04
   14003ec04:	ins    BYTE PTR es:[rdi],dx
   14003ec05:	add    BYTE PTR [rcx+0x0],ah
   14003ec08:	je     0x14003ec0a
   14003ec0a:	imul   eax,DWORD PTR [rax],0x6e006f
   14003ec10:	add    BYTE PTR [rax],al
   14003ec12:	add    BYTE PTR [rax],al
   14003ec14:	or     DWORD PTR [rax+rsi*4],eax
   14003ec17:	add    al,0x28
   14003ec19:	add    BYTE PTR [rax],al
   14003ec1b:	add    BYTE PTR [rax],dl
   14003ec1d:	add    BYTE PTR [rax],al
   14003ec1f:	add    BYTE PTR [rax],ah
   14003ec21:	add    BYTE PTR [rax],al
   14003ec23:	add    BYTE PTR [rcx],al
   14003ec25:	add    BYTE PTR [rax],ah
   14003ec27:	add    BYTE PTR [rax],al
   14003ec29:	add    BYTE PTR [rax],al
   14003ec2b:	add    BYTE PTR [rax],al
   14003ec2d:	add    eax,0x0
	...
   14003ec46:	add    BYTE PTR [rax],al
   14003ec48:	nop
   14003ec49:	push   rdx
   14003ec4a:	add    al,0x60
   14003ec4c:	mov    WORD PTR [rax+0x5],ss
   14003ec4f:	out    dx,eax
   14003ec50:	mov    BYTE PTR [rbp+0x5],cl
   14003ec53:	inc    DWORD PTR [rbx+0x7fff064a]
   14003ec59:	rex.W (bad) 
   14003ec5b:	(bad)  
   14003ec5c:	jnp    0x14003eca3
   14003ec5e:	(bad)  
   14003ec5f:	push   QWORD PTR [rdi+0x43]
   14003ec62:	(bad)  
   14003ec63:	push   QWORD PTR [rdx+0x40]
   14003ec66:	or     bh,bh
   14003ec68:	outs   dx,BYTE PTR ds:[rsi]
   14003ec69:	ds or  bh,bh
   14003ec6c:	push   0x3b
   14003ec6e:	or     edi,edi
   14003ec70:	cmp    DWORD PTR [ecx],ecx
   14003ec73:	jmp    QWORD PTR [rsi+0x39]
   14003ec76:	or     edi,edi
   14003ec78:	cmp    WORD PTR [rcx],cx
   14003ec7b:	out    dx,eax
   14003ec7c:	cmp    WORD PTR [rcx],cx
   14003ec7f:	(bad)  
	...
   14003ec88:	xchg   esp,eax
   14003ec89:	push   rbp
   14003ec8a:	add    al,0xef
   14003ec8c:	nop
   14003ec8d:	push   rdx
   14003ec8e:	add    al,0xff
   14003ec90:	mov    WORD PTR [rax+0x5],ss
   14003ec93:	call   QWORD PTR [rdx+0x33]
   14003ec96:	adc    eax,0x153352ff
   14003ec9b:	call   QWORD PTR [rdx+0x33]
   14003ec9e:	adc    eax,0x153352ff
   14003eca3:	call   QWORD PTR [rdx+0x33]
   14003eca6:	adc    eax,0x153352ff
   14003ecab:	call   QWORD PTR [rdx+0x33]
   14003ecae:	adc    eax,0x153352ff
   14003ecb3:	jmp    QWORD PTR [rdi+0x39]
   14003ecb6:	or     edi,edi
   14003ecb8:	cmp    WORD PTR [rcx],cx
   14003ecbb:	jmp    QWORD PTR [rsi+0x39]
   14003ecbe:	or     edi,ebp
   14003ecc0:	add    BYTE PTR [rax],al
   14003ecc2:	add    BYTE PTR [rax],al
   14003ecc4:	(bad)  
   14003ecc5:	pop    rax
   14003ecc6:	add    esp,DWORD PTR [rax]
   14003ecc8:	cwde   
   14003ecc9:	push   rdi
   14003ecca:	add    edi,edi
   14003eccc:	xchg   esp,eax
   14003eccd:	push   rbp
   14003ecce:	add    al,0xff
   14003ecd0:	nop
   14003ecd1:	push   rdx
   14003ecd2:	add    al,0xff
   14003ecd4:	push   rbx
   14003ecd5:	xor    al,0x16
   14003ecd7:	call   rax
   14003ecd9:	scas   al,BYTE PTR es:[rdi]
   14003ecda:	jl     0x14003ecdb
   14003ecdc:	shr    BYTE PTR [rsi-0x512f0084],1
   14003ece2:	jl     0x14003ece3
   14003ece4:	shr    BYTE PTR [rsi-0x512f0084],1
   14003ecea:	jl     0x14003eceb
   14003ecec:	shr    BYTE PTR [rsi+0x3453ff7c],1
   14003ecf2:	(bad)  
   14003ecf3:	jmp    FWORD PTR [rdx+0x3b]
   14003ecf6:	or     edi,edi
   14003ecf8:	cmp    DWORD PTR [ecx],ecx
   14003ecfb:	jmp    QWORD PTR [rsi+0x39]
   14003ecfe:	or     edi,edi
	...
   14003ed08:	popf   
   14003ed09:	pop    rdx
   14003ed0a:	add    edi,edi
   14003ed0c:	cwde   
   14003ed0d:	push   rdi
   14003ed0e:	add    edi,edi
   14003ed10:	xchg   esp,eax
   14003ed11:	push   rbp
   14003ed12:	add    al,0xff
   14003ed14:	push   rsi
   14003ed15:	(bad)  
   14003ed16:	sbb    bh,bh
   14003ed18:	push   rsi
   14003ed19:	(bad)  
   14003ed1a:	sbb    bh,bh
   14003ed1c:	push   rsi
   14003ed1d:	(bad)  
   14003ed1e:	sbb    bh,bh
   14003ed20:	push   rsi
   14003ed21:	(bad)  
   14003ed22:	sbb    bh,bh
   14003ed24:	push   rsi
   14003ed25:	(bad)  
   14003ed26:	sbb    bh,bh
   14003ed28:	push   rsi
   14003ed29:	(bad)  
   14003ed2a:	sbb    bh,bh
   14003ed2c:	push   rsi
   14003ed2d:	(bad)  
   14003ed2e:	sbb    bh,bh
   14003ed30:	push   rsi
   14003ed31:	(bad)  
   14003ed32:	sbb    bh,bh
   14003ed34:	outs   dx,BYTE PTR ds:[rsi]
   14003ed35:	ds or  bh,bh
   14003ed38:	push   0x3b
   14003ed3a:	or     edi,edi
   14003ed3c:	cmp    DWORD PTR [ecx],ecx
   14003ed3f:	inc    DWORD PTR [rax]
   14003ed41:	add    BYTE PTR [rax],al
   14003ed43:	add    BYTE PTR [rax],al
   14003ed45:	add    BYTE PTR [rax],al
   14003ed47:	add    BYTE PTR [rcx-0x6200fda4],ah
   14003ed4d:	pop    rdx
   14003ed4e:	add    edi,edi
   14003ed50:	cwde   
   14003ed51:	push   rdi
   14003ed52:	add    edi,edi
   14003ed54:	xchg   esp,eax
   14003ed55:	push   rbp
   14003ed56:	add    al,0xff
   14003ed58:	jl     0x14003eda4
   14003ed5a:	or     eax,0x224361ff
   14003ed5f:	inc    eax
   14003ed61:	movabs ds:0x4361ff78a2c0ff78,al
   14003ed6a:	and    bh,bh
   14003ed6c:	outs   dx,BYTE PTR ds:[rsi]
   14003ed6d:	ud0    esi,DWORD PTR [r15+0x43]
   14003ed72:	(bad)  
   14003ed73:	push   QWORD PTR [rdx+0x40]
   14003ed76:	or     bh,bh
   14003ed78:	outs   dx,BYTE PTR ds:[rsi]
   14003ed79:	ds or  bh,bh
   14003ed7c:	push   0x3b
   14003ed7e:	or     edi,edi
	...
   14003ed88:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14003ed89:	pop    rdi
   14003ed8a:	add    bh,bh
   14003ed8c:	movabs eax,ds:0x8dff035a9dff025c
   14003ed95:	push   rdx
   14003ed96:	or     bh,bh
   14003ed98:	imul   ecx,DWORD PTR [rax+0x24],0x80a8c4ff
   14003ed9f:	(bad)  
   14003eda0:	fadd   st(0),st
   14003eda2:	xchg   esi,eax
   14003eda3:	(bad)  
   14003eda4:	fadd   st(0),st
   14003eda6:	xchg   esi,eax
   14003eda7:	inc    esp
   14003eda9:	test   al,0x80
   14003edab:	jmp    QWORD PTR [rdi+0x47]
   14003edae:	and    al,0xff
   14003edb0:	jne    0x14003edf6
   14003edb2:	or     edi,edi
   14003edb4:	ja     0x14003edf9
   14003edb6:	(bad)  
   14003edb7:	push   QWORD PTR [rdx+0x40]
   14003edba:	or     bh,bh
   14003edbc:	outs   dx,BYTE PTR ds:[rsi]
   14003edbd:	ds or  bh,bh
	...
   14003edc8:	test   eax,0xa5ff0161
   14003edcd:	pop    rdi
   14003edce:	add    bh,bh
   14003edd0:	popf   
   14003edd1:	pop    rdx
   14003edd2:	add    al,0xff
   14003edd4:	ins    BYTE PTR es:[rdi],dx
   14003edd5:	rex.WR
   14003edd6:	es dec eax
   14003edd9:	scas   al,BYTE PTR es:[rdi]
   14003edda:	mov    bh,bh
   14003eddc:	loopne 0x14003eda5
   14003edde:	movabs al,ds:0xa0c7e0ffa0c7e0ff
   14003ede7:	jmp    rax
   14003ede9:	(bad)  
   14003edea:	movabs al,ds:0x274a6aff88aec8ff
   14003edf3:	(bad)  
   14003edf4:	jns    0x14003ee3b
   14003edf6:	or     bh,bh
   14003edf8:	ja     0x14003ee3d
   14003edfa:	(bad)  
   14003edfb:	push   QWORD PTR [rdx+0x40]
   14003edfe:	or     bh,bh
	...
   14003ee08:	lods   eax,DWORD PTR ds:[rsi]
   14003ee09:	fs add edi,edi
   14003ee0c:	sahf   
   14003ee0d:	pop    rbp
   14003ee0e:	(bad)  
   14003ee0f:	push   QWORD PTR [rcx+0x4a]
   14003ee12:	sbb    eax,0x234564ff
   14003ee17:	jmp    QWORD PTR [rbp+rax*2+0x23]
   14003ee1b:	jmp    QWORD PTR [rbp+rax*2+0x23]
   14003ee1f:	jmp    rsp
   14003ee21:	int    0xa9
   14003ee23:	jmp    rsp
   14003ee25:	int    0xa9
   14003ee27:	jmp    QWORD PTR [rbp+rax*2+0x23]
   14003ee2b:	jmp    QWORD PTR [rbp+rax*2+0x23]
   14003ee2f:	jmp    QWORD PTR [rbp+rax*2+0x23]
   14003ee33:	jmp    FWORD PTR [rcx+0x45]
   14003ee36:	(bad)  
   14003ee37:	(bad)  
   14003ee38:	jnp    0x14003ee7f
   14003ee3a:	(bad)  
   14003ee3b:	push   QWORD PTR [rdi+0x43]
   14003ee3e:	(bad)  
   14003ee3f:	inc    DWORD PTR [rax]
   14003ee41:	add    BYTE PTR [rax],al
   14003ee43:	add    BYTE PTR [rax],al
   14003ee45:	add    BYTE PTR [rax],al
   14003ee47:	add    BYTE PTR [rdx+0x2fff0066],dh
   14003ee4d:	cmp    BYTE PTR [rdi-0x1],cl
   14003ee50:	rex.B cmp al,0x3d
   14003ee53:	jmp    QWORD PTR [rbp-0x5e00fda1]
   14003ee59:	pop    rsp
   14003ee5a:	add    bh,bh
   14003ee5c:	push   0xffffffffe9ff2548
   14003ee61:	(bad)  
   14003ee62:	mov    bl,0xff
   14003ee64:	jmp    0x1a903a23d
   14003ee69:	and    rax,0x5508cff
   14003ee6f:	dec    DWORD PTR [rax-0x7c00fab3]
   14003ee75:	rex.WX (bad) 
   14003ee77:	(bad)  
   14003ee78:	jg     0x14003eec2
   14003ee7a:	(bad)  
   14003ee7b:	(bad)  
   14003ee7c:	jnp    0x14003eec3
   14003ee7e:	(bad)  
   14003ee7f:	inc    DWORD PTR [rax]
   14003ee81:	add    BYTE PTR [rax],al
   14003ee83:	add    BYTE PTR [rax],al
   14003ee85:	add    BYTE PTR [rax],al
   14003ee87:	add    BYTE PTR [rdx+0x4f],dh
   14003ee8a:	sub    edi,edi
   14003ee8c:	sbb    DWORD PTR [rbp-0x5c],eax
   14003ee8f:	call   FWORD PTR [rax]
   14003ee91:	rex.RX stos BYTE PTR es:[rdi],al
   14003ee93:	jmp    QWORD PTR [rcx+0x48]
   14003ee96:	xor    bh,bh
   14003ee98:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14003ee99:	pop    rdi
   14003ee9a:	add    bh,bh
   14003ee9c:	imul   ecx,DWORD PTR [rax+rbp*1-0x1],0xffffffed
   14003eea1:	fstp   TBYTE PTR [rdi+rdi*8-0x432413]
   14003eea8:	imul   ecx,DWORD PTR [rax+rbp*1-0x1],0xffffff90
   14003eead:	push   rdx
   14003eeae:	add    al,0xff
   14003eeb0:	mov    WORD PTR [rax+0x5],ss
   14003eeb3:	dec    DWORD PTR [rax-0x7c00fab3]
   14003eeb9:	rex.WX (bad) 
   14003eebb:	(bad)  
   14003eebc:	jg     0x14003ef06
   14003eebe:	(bad)  
   14003eebf:	push   QWORD PTR [rax+0x40]
   14003eec2:	or     edx,DWORD PTR [rax]
   14003eec4:	cmp    ax,0xaf14
   14003eec8:	cmp    DWORD PTR [rax+0x63],eax
   14003eecb:	jmp    FWORD PTR [rdi]
   14003eecd:	vminsd xmm2{k1},xmm0,xmm9
   14003eed3:	call   QWORD PTR [rbx]
   14003eed5:	cmp    edx,DWORD PTR [rdi+0x4c3e45ff]
   14003eedb:	call   QWORD PTR [rax]
   14003eedd:	sub    esi,DWORD PTR [rdx-0x1]
   14003eee0:	icebp  
   14003eee1:	loope  0x14003eea9
   14003eee3:	push   rcx
   14003eee5:	loope  0x14003eead
   14003eee7:	jmp    FWORD PTR [rdi+0x4f]
   14003eeea:	sub    bh,bh
   14003eeec:	xchg   esp,eax
   14003eeed:	push   rbp
   14003eeee:	add    al,0xff
   14003eef0:	nop
   14003eef1:	push   rdx
   14003eef2:	add    al,0xff
   14003eef4:	mov    WORD PTR [rax+0x5],ss
   14003eef7:	dec    DWORD PTR [rax-0x7c00fab3]
   14003eefd:	rex.WX (bad) 
   14003eeff:	(bad)  
   14003ef00:	jp     0x14003ef49
   14003ef02:	bswap  edi
   14003ef04:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14003ef05:	ja     0x14003ef33
   14003ef07:	dec    DWORD PTR [rbx+0x4eff195a]
   14003ef0d:	pop    rdx
   14003ef0e:	mov    bh,bh
   14003ef10:	cs (bad) 
   14003ef12:	sar    edi,1
   14003ef14:	(bad)  
   14003ef15:	pop    rbx
   14003ef16:	sar    edi,1
   14003ef18:	sbb    eax,0x20ffd053
   14003ef1d:	xor    al,0x76
   14003ef1f:	push   rsi
   14003ef21:	call   0x128faeef5
   14003ef26:	iret   
   14003ef27:	push   QWORD PTR [rdx+0x53]
   14003ef2a:	sub    eax,0x35798ff
   14003ef2f:	call   QWORD PTR [rbp+rdx*2+0x5290ff04]
   14003ef36:	add    al,0xff
   14003ef38:	mov    WORD PTR [rax+0x5],ss
   14003ef3b:	dec    DWORD PTR [rax+0xff054d]
   14003ef41:	add    BYTE PTR [rax],al
   14003ef43:	add    BYTE PTR [rsi-0x6eafebaf],al
   14003ef49:	pop    rbx
   14003ef4a:	sbb    ch,bh
   14003ef4c:	popf   
   14003ef4d:	push   0x20
   14003ef4f:	(bad)  
   14003ef50:	ds (bad) 
   14003ef52:	mov    eax,0xe89162ff
   14003ef57:	jmp    FWORD PTR [rsi]
   14003ef59:	pop    rdx
   14003ef5a:	ret    0x49ff
   14003ef5d:	rex.XB push r15
   14003ef5f:	push   QWORD PTR [rsi+0x56]
   14003ef62:	xor    bh,bh
   14003ef64:	jbe    0x14003efbc
   14003ef66:	xor    bh,bh
   14003ef68:	jbe    0x14003efc0
   14003ef6a:	xor    bh,bh
   14003ef6c:	popf   
   14003ef6d:	pop    rdx
   14003ef6e:	add    edi,edi
   14003ef70:	cwde   
   14003ef71:	push   rdi
   14003ef72:	add    edi,edi
   14003ef74:	xchg   esp,eax
   14003ef75:	push   rbp
   14003ef76:	add    al,0xff
   14003ef78:	nop
   14003ef79:	push   rdx
   14003ef7a:	add    al,0xff
   14003ef7c:	mov    WORD PTR [rax+0x5],ss
   14003ef7f:	out    dx,eax
	...
   14003ef88:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14003ef89:	movsxd ecx,DWORD PTR [rsi]
   14003ef8b:	(bad)  
   14003ef8c:	movabs ds:0x6dff606477ef1e68,eax
   14003ef95:	fwait
   14003ef96:	in     al,dx
   14003ef97:	push   QWORD PTR [rcx]
   14003ef99:	push   rbx
   14003ef9a:	mov    ah,0xff
   14003ef9c:	sahf   
   14003ef9d:	pop    rdi
   14003ef9e:	adc    bh,bh
   14003efa0:	lods   eax,DWORD PTR ds:[rsi]
   14003efa1:	fs add edi,edi
   14003efa4:	test   eax,0xa5ff0161
   14003efa9:	pop    rdi
   14003efaa:	add    bh,bh
   14003efac:	movabs eax,ds:0x98ff035a9dff025c
   14003efb5:	push   rdi
   14003efb6:	add    edi,edi
   14003efb8:	xchg   esp,eax
   14003efb9:	push   rbp
   14003efba:	add    al,0xef
   14003efbc:	nop
   14003efbd:	push   rdx
   14003efbe:	add    al,0x60
	...
   14003efcc:	lods   al,BYTE PTR ds:[rsi]
   14003efcd:	outs   dx,BYTE PTR ds:[rsi]
   14003efce:	and    esi,DWORD PTR [rax]
   14003efd0:	mov    cl,0x73
   14003efd2:	and    eax,0xd19677ef
   14003efd7:	call   FWORD PTR [rsi]
   14003efd9:	cmp    BYTE PTR [rbx+0xbf],ah
	...
   14003f00f:	add    cl,al
   14003f011:	jg     0x14003f03e
   14003f013:	(bad)  
   14003f014:	xchg   esp,eax
   14003f015:	jo     0x14003f06f
   14003f017:	call   QWORD PTR [rdi]
   14003f019:	movabs eax,cs:0x40
	...
   14003f13f:	add    BYTE PTR [rax],ch
   14003f141:	add    BYTE PTR [rax],al
   14003f143:	add    BYTE PTR [rax],bl
   14003f145:	add    BYTE PTR [rax],al
   14003f147:	add    BYTE PTR [rax],dh
   14003f149:	add    BYTE PTR [rax],al
   14003f14b:	add    BYTE PTR [rcx],al
   14003f14d:	add    BYTE PTR [rax],ah
   14003f14f:	add    BYTE PTR [rax],al
   14003f151:	add    BYTE PTR [rax],al
   14003f153:	add    BYTE PTR [rax+0xb],al
	...
   14003f172:	add    BYTE PTR [rax],al
   14003f174:	lea    edx,[rax+0x4]
   14003f177:	jo     0x14003f103
   14003f179:	rex.WRXB add rax,0x54d88ef
   14003f17f:	inc    DWORD PTR [rbp-0x7d00fab5]
   14003f185:	rex.WX (bad) 
   14003f187:	(bad)  
   14003f188:	jg     0x14003f1d2
   14003f18a:	(bad)  
   14003f18b:	(bad)  
   14003f18c:	jge    0x14003f1d5
   14003f18e:	(bad)  
   14003f18f:	(bad)  
   14003f190:	jp     0x14003f1d7
   14003f192:	(bad)  
   14003f193:	(bad)  
   14003f194:	js     0x14003f1d9
   14003f196:	(bad)  
   14003f197:	push   QWORD PTR [rbp+0x42]
   14003f19a:	(bad)  
   14003f19b:	push   QWORD PTR [rdx+0x40]
   14003f19e:	or     bh,bh
   14003f1a0:	outs   dx,DWORD PTR ds:[rsi]
   14003f1a1:	(bad)  
   14003f1a2:	or     bh,bh
   14003f1a4:	ins    DWORD PTR es:[rdi],dx
   14003f1a5:	cmp    eax,0x3b6aff08
   14003f1aa:	or     edi,edi
   14003f1ac:	cmp    cl,BYTE PTR [ecx]
   14003f1af:	jmp    QWORD PTR [rsi+0x39]
   14003f1b2:	or     edi,edi
   14003f1b4:	cmp    WORD PTR [rcx],cx
   14003f1b7:	jmp    QWORD PTR [rsi+0x39]
   14003f1ba:	or     edi,edi
   14003f1bc:	cmp    WORD PTR [rcx],cx
   14003f1bf:	out    dx,eax
   14003f1c0:	cmp    WORD PTR [rcx],cx
   14003f1c3:	jo     0x14003f1c5
	...
   14003f1cd:	add    BYTE PTR [rax],al
   14003f1cf:	add    BYTE PTR [rdx-0x6f8ffbad],dl
   14003f1d5:	push   rdx
   14003f1d6:	add    al,0xff
   14003f1d8:	lea    edx,[rax+0x4]
   14003f1db:	dec    DWORD PTR [rdx-0x7700fab1]
   14003f1e1:	rex.WRB add rax,0x54b85ff
   14003f1e7:	inc    DWORD PTR [rdx+0x7fff064a]
   14003f1ed:	rex.W (bad) 
   14003f1ef:	(bad)  
   14003f1f0:	jge    0x14003f239
   14003f1f2:	(bad)  
   14003f1f3:	(bad)  
   14003f1f4:	jp     0x14003f23b
   14003f1f6:	(bad)  
   14003f1f7:	(bad)  
   14003f1f8:	js     0x14003f23d
   14003f1fa:	(bad)  
   14003f1fb:	push   QWORD PTR [rbp+0x42]
   14003f1fe:	(bad)  
   14003f1ff:	push   QWORD PTR [rdx+0x40]
   14003f202:	or     bh,bh
   14003f204:	outs   dx,DWORD PTR ds:[rsi]
   14003f205:	(bad)  
   14003f206:	or     bh,bh
   14003f208:	ins    DWORD PTR es:[rdi],dx
   14003f209:	cmp    eax,0x3b6aff08
   14003f20e:	or     edi,edi
   14003f210:	cmp    cl,BYTE PTR [ecx]
   14003f213:	jmp    QWORD PTR [rsi+0x39]
   14003f216:	or     edi,edi
   14003f218:	cmp    WORD PTR [rcx],cx
   14003f21b:	jmp    QWORD PTR [rsi+0x39]
   14003f21e:	or     edi,edi
   14003f220:	cmp    WORD PTR [rcx],cx
   14003f223:	jmp    QWORD PTR [rsi+0x39]
   14003f226:	or     DWORD PTR [rax+0x0],esi
   14003f229:	add    BYTE PTR [rax],al
   14003f22b:	add    BYTE PTR [rax],al
   14003f22d:	add    BYTE PTR [rax],al
   14003f22f:	add    BYTE PTR [rbp-0x6d10fbab],dl
   14003f235:	push   rsp
   14003f236:	add    al,0xff
   14003f238:	nop
   14003f239:	push   rdx
   14003f23a:	add    al,0xff
   14003f23c:	lea    edx,[rax+0x4]
   14003f23f:	dec    DWORD PTR [rdx-0x7700fab1]
   14003f245:	rex.WRB add rax,0x153352ff
   14003f24b:	call   QWORD PTR [rdx+0x33]
   14003f24e:	adc    eax,0x153352ff
   14003f253:	call   QWORD PTR [rdx+0x33]
   14003f256:	adc    eax,0x153352ff
   14003f25b:	call   QWORD PTR [rdx+0x33]
   14003f25e:	adc    eax,0x153352ff
   14003f263:	call   QWORD PTR [rdx+0x33]
   14003f266:	adc    eax,0x153352ff
   14003f26b:	call   QWORD PTR [rdx+0x33]
   14003f26e:	adc    eax,0x93b6aff
   14003f273:	jmp    QWORD PTR [rdi+0x3a]
   14003f276:	or     edi,edi
   14003f278:	cmp    WORD PTR [rcx],cx
   14003f27b:	jmp    QWORD PTR [rsi+0x39]
   14003f27e:	or     edi,edi
   14003f280:	cmp    WORD PTR [rcx],cx
   14003f283:	jmp    QWORD PTR [rsi+0x39]
   14003f286:	or     edi,ebp
	...
   14003f290:	cwde   
   14003f291:	push   rdi
   14003f292:	add    edi,edi
   14003f294:	xchg   ebp,eax
   14003f295:	push   rbp
   14003f296:	add    al,0xff
   14003f298:	xchg   edx,eax
   14003f299:	push   rsp
   14003f29a:	add    al,0xff
   14003f29c:	nop
   14003f29d:	push   rdx
   14003f29e:	add    al,0xff
   14003f2a0:	lea    edx,[rax+0x4]
   14003f2a3:	dec    DWORD PTR [rdx+0x52ff054f]
   14003f2a9:	xor    edx,DWORD PTR [rip+0x7caed0ff]        # 0x1bcb2c3ae
   14003f2af:	call   rax
   14003f2b1:	scas   al,BYTE PTR es:[rdi]
   14003f2b2:	jl     0x14003f2b3
   14003f2b4:	shr    BYTE PTR [rsi-0x512f0084],1
   14003f2ba:	jl     0x14003f2bb
   14003f2bc:	shr    BYTE PTR [rsi-0x512f0084],1
   14003f2c2:	jl     0x14003f2c3
   14003f2c4:	shr    BYTE PTR [rsi-0x512f0084],1
   14003f2ca:	jl     0x14003f2cb
   14003f2cc:	push   rdx
   14003f2cd:	xor    edx,DWORD PTR [rip+0x83d6dff]        # 0x1484160d2
   14003f2d3:	jmp    FWORD PTR [rdx+0x3b]
   14003f2d6:	or     edi,edi
   14003f2d8:	cmp    cl,BYTE PTR [ecx]
   14003f2db:	jmp    QWORD PTR [rsi+0x39]
   14003f2de:	or     edi,edi
   14003f2e0:	cmp    WORD PTR [rcx],cx
   14003f2e3:	jmp    QWORD PTR [rsi+0x39]
   14003f2e6:	or     edi,edi
	...
   14003f2f0:	(bad)  
   14003f2f1:	pop    rax
   14003f2f2:	add    edi,edi
   14003f2f4:	cwde   
   14003f2f5:	push   rdi
   14003f2f6:	add    edi,edi
   14003f2f8:	xchg   ebp,eax
   14003f2f9:	push   rbp
   14003f2fa:	add    al,0xff
   14003f2fc:	xchg   edx,eax
   14003f2fd:	push   rsp
   14003f2fe:	add    al,0xff
   14003f300:	nop
   14003f301:	push   rdx
   14003f302:	add    al,0xff
   14003f304:	lea    edx,[rax+0x4]
   14003f307:	call   QWORD PTR [rdx+0x33]
   14003f30a:	adc    eax,0x153352ff
   14003f30f:	call   QWORD PTR [rdx+0x33]
   14003f312:	adc    eax,0x153352ff
   14003f317:	call   QWORD PTR [rdx+0x33]
   14003f31a:	adc    eax,0x153352ff
   14003f31f:	call   QWORD PTR [rdx+0x33]
   14003f322:	adc    eax,0x153352ff
   14003f327:	call   QWORD PTR [rdx+0x33]
   14003f32a:	adc    eax,0x153352ff
   14003f32f:	jmp    FWORD PTR [rdi+0x3f]
   14003f332:	or     bh,bh
   14003f334:	ins    DWORD PTR es:[rdi],dx
   14003f335:	cmp    eax,0x3b6aff08
   14003f33a:	or     edi,edi
   14003f33c:	cmp    cl,BYTE PTR [ecx]
   14003f33f:	jmp    QWORD PTR [rsi+0x39]
   14003f342:	or     edi,edi
   14003f344:	cmp    WORD PTR [rcx],cx
   14003f347:	inc    DWORD PTR [rax]
   14003f349:	add    BYTE PTR [rax],al
   14003f34b:	add    BYTE PTR [rax],al
   14003f34d:	add    BYTE PTR [rax],al
   14003f34f:	add    BYTE PTR [rbp-0x6500fca6],bl
   14003f355:	pop    rax
   14003f356:	add    edi,edi
   14003f358:	cwde   
   14003f359:	push   rdi
   14003f35a:	add    edi,edi
   14003f35c:	xchg   ebp,eax
   14003f35d:	push   rbp
   14003f35e:	add    al,0xff
   14003f360:	xchg   edx,eax
   14003f361:	push   rsp
   14003f362:	add    al,0xff
   14003f364:	nop
   14003f365:	push   rdx
   14003f366:	add    al,0xff
   14003f368:	lea    edx,[rax+0x4]
   14003f36b:	dec    DWORD PTR [rdx+0x77ff054f]
   14003f371:	rex.RX or eax,0x1b3b5aff
   14003f377:	jmp    FWORD PTR [rax-0x57009e77]
   14003f37d:	mov    DWORD PTR [rcx-0x1],esp
   14003f380:	pop    rdx
   14003f381:	cmp    ebx,DWORD PTR [rbx]
   14003f383:	jmp    FWORD PTR [rsi+0x41]
   14003f386:	ud0    edi,DWORD PTR [rax+0x43]
   14003f38a:	(bad)  
   14003f38b:	push   QWORD PTR [rbp+0x42]
   14003f38e:	(bad)  
   14003f38f:	push   QWORD PTR [rdx+0x40]
   14003f392:	or     bh,bh
   14003f394:	outs   dx,DWORD PTR ds:[rsi]
   14003f395:	(bad)  
   14003f396:	or     bh,bh
   14003f398:	ins    DWORD PTR es:[rdi],dx
   14003f399:	cmp    eax,0x3b6aff08
   14003f39e:	or     edi,edi
   14003f3a0:	cmp    cl,BYTE PTR [ecx]
   14003f3a3:	jmp    QWORD PTR [rsi+0x39]
   14003f3a6:	or     edi,edi
	...
   14003f3b0:	movabs al,ds:0x9aff035a9dff025b
   14003f3b9:	pop    rax
   14003f3ba:	add    edi,edi
   14003f3bc:	cwde   
   14003f3bd:	push   rdi
   14003f3be:	add    edi,edi
   14003f3c0:	xchg   ebp,eax
   14003f3c1:	push   rbp
   14003f3c2:	add    al,0xff
   14003f3c4:	xchg   edx,eax
   14003f3c5:	push   rsp
   14003f3c6:	add    al,0xff
   14003f3c8:	nop
   14003f3c9:	push   rdx
   14003f3ca:	add    al,0xff
   14003f3cc:	jle    0x14003f419
   14003f3ce:	or     al,0xff
   14003f3d0:	pop    rbp
   14003f3d1:	ds sbb eax,0x658daaff
   14003f3d7:	(bad)  
   14003f3d8:	fnstcw WORD PTR [rax+rdx*4-0x6f432601]
   14003f3df:	jmp    FWORD PTR [rdx+0x5dff658d]
   14003f3e5:	ds sbb eax,0xe4371ff
   14003f3eb:	(bad)  
   14003f3ec:	js     0x14003f431
   14003f3ee:	(bad)  
   14003f3ef:	push   QWORD PTR [rbp+0x42]
   14003f3f2:	(bad)  
   14003f3f3:	push   QWORD PTR [rdx+0x40]
   14003f3f6:	or     bh,bh
   14003f3f8:	outs   dx,DWORD PTR ds:[rsi]
   14003f3f9:	(bad)  
   14003f3fa:	or     bh,bh
   14003f3fc:	ins    DWORD PTR es:[rdi],dx
   14003f3fd:	cmp    eax,0x3b6aff08
   14003f402:	or     edi,edi
   14003f404:	cmp    cl,BYTE PTR [ecx]
   14003f407:	inc    DWORD PTR [rax]
   14003f409:	add    BYTE PTR [rax],al
   14003f40b:	add    BYTE PTR [rax],al
   14003f40d:	add    BYTE PTR [rax],al
   14003f40f:	add    BYTE PTR [rdx-0x5f00fda3],ah
   14003f415:	pop    rbx
   14003f416:	add    bh,bh
   14003f418:	popf   
   14003f419:	pop    rdx
   14003f41a:	add    edi,edi
   14003f41c:	(bad)  
   14003f41d:	pop    rax
   14003f41e:	add    edi,edi
   14003f420:	cwde   
   14003f421:	push   rdi
   14003f422:	add    edi,edi
   14003f424:	xchg   ebp,eax
   14003f425:	push   rbp
   14003f426:	add    al,0xff
   14003f428:	mov    DWORD PTR [rax+0x9],edx
   14003f42b:	jmp    QWORD PTR [rbx+0x42]
   14003f42e:	(bad)  
   14003f42f:	jmp    FWORD PTR [rbp-0x24009570]
   14003f435:	rcl    BYTE PTR [rsi-0x693f2401],0xff
   14003f43c:	fcmovnb st,st(0)
   14003f43e:	xchg   esi,eax
   14003f43f:	(bad)  
   14003f440:	fcmovnb st,st(0)
   14003f442:	xchg   esi,eax
   14003f443:	jmp    FWORD PTR [rbp+0x62ff6a90]
   14003f449:	rex.B (bad) 
   14003f44b:	push   QWORD PTR [rbp+0x44]
   14003f44e:	or     al,0xff
   14003f450:	js     0x14003f495
   14003f452:	(bad)  
   14003f453:	push   QWORD PTR [rbp+0x42]
   14003f456:	(bad)  
   14003f457:	push   QWORD PTR [rdx+0x40]
   14003f45a:	or     bh,bh
   14003f45c:	outs   dx,DWORD PTR ds:[rsi]
   14003f45d:	(bad)  
   14003f45e:	or     bh,bh
   14003f460:	ins    DWORD PTR es:[rdi],dx
   14003f461:	cmp    eax,0x3b6aff08
   14003f466:	or     edi,edi
	...
   14003f470:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14003f471:	pop    rdi
   14003f472:	add    bh,bh
   14003f474:	movabs ds:0x9dff025ba0ff025d,al
   14003f47d:	pop    rdx
   14003f47e:	add    edi,edi
   14003f480:	(bad)  
   14003f481:	pop    rax
   14003f482:	add    edi,edi
   14003f484:	xchg   ecx,eax
   14003f485:	push   rsp
   14003f486:	(bad)  
   14003f487:	jmp    QWORD PTR [rsi+0x45]
   14003f48a:	and    bh,bh
   14003f48c:	mov    al,0x94
   14003f48e:	outs   dx,BYTE PTR ds:[rsi]
   14003f48f:	(bad)  
   14003f490:	faddp  st(4),st
   14003f492:	pushf  
   14003f493:	(bad)  
   14003f494:	faddp  st(4),st
   14003f496:	pushf  
   14003f497:	(bad)  
   14003f498:	faddp  st(4),st
   14003f49a:	pushf  
   14003f49b:	(bad)  
   14003f49c:	faddp  st(4),st
   14003f49e:	pushf  
   14003f49f:	(bad)  
   14003f4a0:	faddp  st(4),st
   14003f4a2:	pushf  
   14003f4a3:	(bad)  
   14003f4a4:	faddp  st(4),st
   14003f4a6:	pushf  
   14003f4a7:	push   QWORD PTR [rax+0x65ff6e94]
   14003f4ad:	and    dil,r15b
   14003f4b0:	ja     0x14003f4f7
   14003f4b2:	or     bh,bh
   14003f4b4:	js     0x14003f4f9
   14003f4b6:	(bad)  
   14003f4b7:	push   QWORD PTR [rbp+0x42]
   14003f4ba:	(bad)  
   14003f4bb:	push   QWORD PTR [rdx+0x40]
   14003f4be:	or     bh,bh
   14003f4c0:	outs   dx,DWORD PTR ds:[rsi]
   14003f4c1:	(bad)  
   14003f4c2:	or     bh,bh
   14003f4c4:	ins    DWORD PTR es:[rdi],dx
   14003f4c5:	cmp    eax,0xff08
   14003f4ca:	add    BYTE PTR [rax],al
   14003f4cc:	add    BYTE PTR [rax],al
   14003f4ce:	add    BYTE PTR [rax],al
   14003f4d0:	test   al,0x60
   14003f4d2:	add    edi,edi
   14003f4d4:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14003f4d5:	pop    rdi
   14003f4d6:	add    bh,bh
   14003f4d8:	movabs ds:0x9aff025ba0ff025d,al
   14003f4e1:	pop    rcx
   14003f4e2:	add    eax,0x1e4a70ff
   14003f4e7:	push   QWORD PTR [rbx-0x1e008c68]
   14003f4ed:	leave  
   14003f4ee:	movabs ds:0xa2c9e1ffa2c9e1ff,al
   14003f4f7:	jmp    rcx
   14003f4f9:	leave  
   14003f4fa:	movabs ds:0xa2c9e1ffa2c9e1ff,al
   14003f503:	jmp    rcx
   14003f505:	leave  
   14003f506:	movabs ds:0x7398b3ffa2c9e1ff,al
   14003f50f:	jmp    FWORD PTR [rdx+0x47]
   14003f512:	(bad)  
   14003f513:	(bad)  
   14003f514:	jns    0x14003f55b
   14003f516:	or     edi,edi
   14003f518:	js     0x14003f55d
   14003f51a:	(bad)  
   14003f51b:	push   QWORD PTR [rbp+0x42]
   14003f51e:	(bad)  
   14003f51f:	push   QWORD PTR [rdx+0x40]
   14003f522:	or     bh,bh
   14003f524:	outs   dx,DWORD PTR ds:[rsi]
   14003f525:	(bad)  
   14003f526:	or     bh,bh
	...
   14003f530:	stos   BYTE PTR es:[rdi],al
   14003f531:	(bad)  {z}
   14003f536:	add    edi,edi
   14003f538:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14003f539:	pop    rdi
   14003f53a:	add    bh,bh
   14003f53c:	movabs ds:0x69ff204d73ff025d,al
   14003f545:	rex.WX
   14003f546:	jmp    FWORD PTR es:[rcx+0x4a]
   14003f54a:	jmp    FWORD PTR es:[rcx+0x4a]
   14003f54e:	jmp    FWORD PTR es:[rcx+0x4a]
   14003f552:	es jmp rbx
   14003f555:	int    0xa8
   14003f557:	jmp    rbx
   14003f559:	int    0xa8
   14003f55b:	jmp    rbx
   14003f55d:	int    0xa8
   14003f55f:	jmp    rbx
   14003f561:	int    0xa8
   14003f563:	jmp    FWORD PTR [rcx+0x4a]
   14003f566:	jmp    FWORD PTR es:[rcx+0x4a]
   14003f56a:	jmp    FWORD PTR es:[rcx+0x4a]
   14003f56e:	jmp    FWORD PTR es:[rcx+0x4a]
   14003f572:	jmp    FWORD PTR es:[rbp+0x49]
   14003f576:	and    bh,bh
   14003f578:	jp     0x14003f5bf
   14003f57a:	(bad)  
   14003f57b:	(bad)  
   14003f57c:	js     0x14003f5c1
   14003f57e:	(bad)  
   14003f57f:	push   QWORD PTR [rbp+0x42]
   14003f582:	(bad)  
   14003f583:	push   QWORD PTR [rdx+0x40]
   14003f586:	or     bh,bh
	...
   14003f590:	lods   eax,DWORD PTR ds:[rsi]
   14003f591:	movsxd eax,DWORD PTR [rcx]
   14003f593:	jmp    FWORD PTR [rdx-0x5700fe9e]
   14003f599:	(bad)  
   14003f59a:	add    edi,edi
   14003f59c:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14003f59d:	pop    rdi
   14003f59e:	add    bh,bh
   14003f5a0:	movabs ds:0x9dff025ba0ff025d,al
   14003f5a9:	pop    rdx
   14003f5aa:	add    edi,edi
   14003f5ac:	(bad)  
   14003f5ad:	pop    rax
   14003f5ae:	add    edi,edi
   14003f5b0:	ins    BYTE PTR es:[rdi],dx
   14003f5b1:	sub    r15,r15
   14003f5b4:	out    0xd1,al
   14003f5b6:	lods   eax,DWORD PTR ds:[rsi]
   14003f5b7:	jmp    rsi
   14003f5b9:	shr    DWORD PTR [rbp-0x522e1901],1
   14003f5bf:	jmp    rsi
   14003f5c1:	shr    DWORD PTR [rbp+0x294d6cff],1
   14003f5c7:	dec    DWORD PTR [rax-0x7a00fab3]
   14003f5cd:	rex.WXB add rax,0x64a82ff
   14003f5d3:	(bad)  
   14003f5d4:	jg     0x14003f61e
   14003f5d6:	(bad)  
   14003f5d7:	(bad)  
   14003f5d8:	jge    0x14003f621
   14003f5da:	(bad)  
   14003f5db:	(bad)  
   14003f5dc:	jp     0x14003f623
   14003f5de:	(bad)  
   14003f5df:	(bad)  
   14003f5e0:	js     0x14003f625
   14003f5e2:	(bad)  
   14003f5e3:	push   QWORD PTR [rbp+0x42]
   14003f5e6:	(bad)  
   14003f5e7:	inc    DWORD PTR [rax]
   14003f5e9:	add    BYTE PTR [rax],al
   14003f5eb:	add    BYTE PTR [rax],al
   14003f5ed:	add    BYTE PTR [rax],al
   14003f5ef:	add    BYTE PTR [rax-0x5200ff9b],dh
   14003f5f5:	movsxd eax,DWORD PTR [rcx]
   14003f5f7:	jmp    QWORD PTR [rax+0x16ff075e]
   14003f5fd:	sub    eax,0x4967ff51
   14003f602:	and    al,0xff
   14003f604:	movabs ds:0x9dff025ba0ff025d,al
   14003f60d:	pop    rdx
   14003f60e:	add    edi,edi
   14003f610:	outs   dx,DWORD PTR ds:[rsi]
   14003f611:	push   rax
   14003f612:	sub    edi,edi
   14003f614:	jmp    0x12a03a9ee
   14003f619:	(bad)  
   14003f61a:	mov    bl,0xff
   14003f61c:	jmp    0x12a03a9f6
   14003f621:	(bad)  
   14003f622:	mov    bl,0xff
   14003f624:	outs   dx,DWORD PTR ds:[rsi]
   14003f625:	push   rax
   14003f626:	sub    edi,edi
   14003f628:	mov    cl,BYTE PTR [rdi+0x5]
   14003f62b:	dec    DWORD PTR [rax-0x7a00fab3]
   14003f631:	rex.WXB add rax,0x64a82ff
   14003f637:	(bad)  
   14003f638:	jg     0x14003f682
   14003f63a:	(bad)  
   14003f63b:	(bad)  
   14003f63c:	jge    0x14003f685
   14003f63e:	(bad)  
   14003f63f:	(bad)  
   14003f640:	jp     0x14003f687
   14003f642:	(bad)  
   14003f643:	(bad)  
   14003f644:	js     0x14003f689
   14003f646:	(bad)  
   14003f647:	inc    DWORD PTR [rax]
   14003f649:	add    BYTE PTR [rax],al
   14003f64b:	add    BYTE PTR [rax],al
   14003f64d:	add    BYTE PTR [rax],al
   14003f64f:	add    BYTE PTR [rdx-0x4f00ff99],dh
   14003f655:	gs add bh,bh
   14003f658:	pop    rcx
   14003f659:	xor    r15d,r15d
   14003f65c:	adc    BYTE PTR [rbx+rdx*4],bh
   14003f65f:	dec    DWORD PTR [rcx]
   14003f661:	(bad)  
   14003f662:	js     0x14003f663
   14003f664:	xchg   DWORD PTR [rbp+rdx*1-0x1],edx
   14003f668:	movabs ds:0x72ff025ba0ff025d,al
   14003f671:	push   rbx
   14003f672:	sub    eax,0xb9d9ebff
   14003f677:	(bad)  
   14003f678:	jmp    0x14003f653
   14003f67a:	mov    ecx,0xb9d9ebff
   14003f67f:	(bad)  
   14003f680:	jmp    0x14003f65b
   14003f682:	mov    ecx,0x2d5372ff
   14003f687:	dec    DWORD PTR [rbp-0x7500fbb0]
   14003f68d:	rex.WRXB add rax,0x54d88ff
   14003f693:	inc    DWORD PTR [rbp-0x7d00fab5]
   14003f699:	rex.WX (bad) 
   14003f69b:	(bad)  
   14003f69c:	jg     0x14003f6e6
   14003f69e:	(bad)  
   14003f69f:	(bad)  
   14003f6a0:	jge    0x14003f6e9
   14003f6a2:	(bad)  
   14003f6a3:	(bad)  
   14003f6a4:	jp     0x14003f6eb
   14003f6a6:	(bad)  
   14003f6a7:	inc    DWORD PTR [rax]
   14003f6a9:	add    BYTE PTR [rax],al
   14003f6ab:	add    BYTE PTR [rax],al
   14003f6ad:	add    BYTE PTR [rax],al
   14003f6af:	add    BYTE PTR [rbx-0x6d00ff99],dh
   14003f6b5:	pop    rbx
   14003f6b6:	adc    eax,0x713215ff
   14003f6bb:	jmp    QWORD PTR [rip+0x1fffca58]        # 0x16003c119
   14003f6c1:	push   rdx
   14003f6c2:	ret    
   14003f6c3:	call   QWORD PTR [rdx]
   14003f6c5:	cs imul edi,edi,0xffffff87
   14003f6c9:	push   rsp
   14003f6ca:	(bad)  
   14003f6cb:	jmp    QWORD PTR [rdx+0x75ff025d]
   14003f6d1:	push   rbp
   14003f6d2:	xor    bh,bh
   14003f6d4:	out    dx,al
   14003f6d5:	fnstsw WORD PTR [rdi-0x40221101]
   14003f6db:	(bad)  
   14003f6dc:	out    dx,al
   14003f6dd:	fnstsw WORD PTR [rdi-0x40221101]
   14003f6e3:	push   QWORD PTR [rbp+0x55]
   14003f6e6:	xor    bh,bh
   14003f6e8:	nop
   14003f6e9:	push   rdx
   14003f6ea:	add    al,0xff
   14003f6ec:	lea    edx,[rax+0x4]
   14003f6ef:	dec    DWORD PTR [rdx-0x7700fab1]
   14003f6f5:	rex.WRB add rax,0x54b85ff
   14003f6fb:	inc    DWORD PTR [rdx+0x7fff064a]
   14003f701:	rex.W (bad) 
   14003f703:	(bad)  
   14003f704:	jge    0x14003f74d
   14003f706:	(bad)  
   14003f707:	inc    DWORD PTR [rax]
   14003f709:	add    BYTE PTR [rax],al
   14003f70b:	add    BYTE PTR [rax],al
   14003f70d:	add    BYTE PTR [rax],al
   14003f70f:	add    BYTE PTR [rdi+0x1fff0b54],cl
   14003f715:	xor    eax,0x5728ff71
   14003f71a:	mov    edi,0xd15f2cff
   14003f71f:	jmp    QWORD PTR [rdi]
   14003f721:	pop    rsp
   14003f722:	sar    edi,1
   14003f724:	sbb    eax,0x12ffbe4f
   14003f729:	sub    al,0x6c
   14003f72b:	push   QWORD PTR [rsi+rcx*2+0x26]
   14003f72f:	dec    DWORD PTR [rsi+0x46]
   14003f732:	rex.WXB call QWORD PTR [r15]
   14003f735:	xor    al,0x78
   14003f737:	push   rcx
   14003f739:	loope  0x14003f700
   14003f73b:	push   rcx
   14003f73d:	loope  0x14003f704
   14003f73f:	push   rcx
   14003f741:	loope  0x14003f708
   14003f743:	(bad)  
   14003f744:	js     0x14003f79e
   14003f746:	xor    bh,bh
   14003f748:	xchg   edx,eax
   14003f749:	push   rsp
   14003f74a:	add    al,0xff
   14003f74c:	nop
   14003f74d:	push   rdx
   14003f74e:	add    al,0xff
   14003f750:	lea    edx,[rax+0x4]
   14003f753:	dec    DWORD PTR [rdx-0x7700fab1]
   14003f759:	rex.WRB add rax,0x54b85ff
   14003f75f:	inc    DWORD PTR [rdx+0x7fff064a]
   14003f765:	rex.W (bad) 
   14003f767:	push   QWORD PTR [rbx+0x42]
   14003f76a:	or     eax,0xc417130
   14003f76f:	mov    edi,0xff1e6694
   14003f774:	jb     0x14003f7bf
   14003f776:	sbb    bh,bh
   14003f778:	pop    r14
   14003f77a:	test   eax,0xd16230ff
   14003f77f:	jmp    FWORD PTR [rdi+rbx*2]
   14003f782:	sar    edi,1
   14003f784:	es pop rbx
   14003f786:	sar    edi,1
   14003f788:	sbb    al,0x4e
   14003f78a:	sar    bh,0x11
   14003f78d:	cmp    eax,0x360dffa4
   14003f792:	(bad)  
   14003f793:	call   QWORD PTR [rbx+0x64]
   14003f796:	xchg   ebx,eax
   14003f797:	push   rbx
   14003f799:	in     eax,0xcb
   14003f79b:	push   rbx
   14003f79d:	in     eax,0xcb
   14003f79f:	push   rbx
   14003f7a1:	in     eax,0xcb
   14003f7a3:	(bad)  
   14003f7a4:	jnp    0x14003f801
   14003f7a6:	xor    al,0xff
   14003f7a8:	xchg   ebp,eax
   14003f7a9:	push   rbp
   14003f7aa:	add    al,0xff
   14003f7ac:	xchg   edx,eax
   14003f7ad:	push   rsp
   14003f7ae:	add    al,0xff
   14003f7b0:	nop
   14003f7b1:	push   rdx
   14003f7b2:	add    al,0xff
   14003f7b4:	lea    edx,[rax+0x4]
   14003f7b7:	dec    DWORD PTR [rdx-0x7700fab1]
   14003f7bd:	rex.WRB add rax,0x54b85ff
   14003f7c3:	inc    DWORD PTR [rdx+0x7aff064a]
   14003f7c9:	rex.RXB movsx r9d,WORD PTR [r9-0x4400e4a8]
   14003f7d1:	(bad)  
   14003f7d2:	ds (bad) 
   14003f7d4:	mov    edi,0x78ff3994
   14003f7d9:	rex.WXB sbb dil,r15b
   14003f7dc:	rex.X (bad) 
   14003f7de:	stos   DWORD PTR es:[rdi],eax
   14003f7df:	jmp    FWORD PTR [rdi]
   14003f7e1:	vdivsd xmm2{k3},xmm0,xmm9
   14003f7e7:	jmp    QWORD PTR [rcx+rbx*2]
   14003f7ea:	sar    bh,1
   14003f7ec:	sbb    eax,0x11ffd053
   14003f7f1:	cmp    ah,BYTE PTR [rdi+rdi*8-0x4c5e62]
   14003f7f8:	imul   cl
   14003f7fa:	sar    bh,1
   14003f7fc:	imul   cl
   14003f7fe:	sar    bh,1
   14003f800:	imul   cl
   14003f802:	sar    bh,1
   14003f804:	jle    0x14003f864
   14003f806:	call   FWORD PTR ss:[rax-0x6a00fca9]
   14003f80d:	push   rbp
   14003f80e:	add    al,0xff
   14003f810:	xchg   edx,eax
   14003f811:	push   rsp
   14003f812:	add    al,0xff
   14003f814:	nop
   14003f815:	push   rdx
   14003f816:	add    al,0xff
   14003f818:	lea    edx,[rax+0x4]
   14003f81b:	dec    DWORD PTR [rdx-0x7700fab1]
   14003f821:	rex.WRB add rax,0x54b85ff
   14003f827:	inc    DWORD PTR [rax]
   14003f829:	add    BYTE PTR [rax],al
   14003f82b:	add    BYTE PTR [rdx-0x69dfecb2],al
   14003f831:	pop    rcx
   14003f832:	or     al,0xff
   14003f834:	xchg   DWORD PTR [rdx+0x15],edx
   14003f837:	jmp    FWORD PTR [rbp+0x7cff2d7e]
   14003f83d:	push   rdi
   14003f83e:	xor    bh,bh
   14003f840:	xor    al,0x64
   14003f842:	int3   
   14003f843:	(bad)  
   14003f844:	cmp    BYTE PTR [rdx-0x2a],ch
   14003f847:	call   QWORD PTR [rbp+rax*4-0x1d]
   14003f84b:	jmp    QWORD PTR [rcx]
   14003f84d:	push   rdi
   14003f84e:	sar    bh,1
   14003f850:	adc    BYTE PTR [rax],dh
   14003f852:	xchg   ecx,eax
   14003f853:	(bad)  
   14003f854:	jp     0x14003f8b4
   14003f856:	cmp    eax,0x396181ff
   14003f85b:	inc    DWORD PTR [rcx-0x7e00c69f]
   14003f861:	(bad)  
   14003f862:	cmp    edi,edi
   14003f864:	and    DWORD PTR [rcx+0x39],0x3589aff
   14003f86b:	call   FWORD PTR [rax-0x6a00fca9]
   14003f871:	push   rbp
   14003f872:	add    al,0xff
   14003f874:	xchg   edx,eax
   14003f875:	push   rsp
   14003f876:	add    al,0xff
   14003f878:	nop
   14003f879:	push   rdx
   14003f87a:	add    al,0xff
   14003f87c:	lea    edx,[rax+0x4]
   14003f87f:	dec    DWORD PTR [rdx-0x7700fab1]
   14003f885:	rex.WRB add rax,0xff
   14003f88b:	add    BYTE PTR [rax],al
   14003f88d:	add    BYTE PTR [rax],al
   14003f88f:	add    BYTE PTR [rbx-0x5610ff99],dh
   14003f895:	movsxd ecx,DWORD PTR [rax]
   14003f897:	jmp    FWORD PTR [rbx-0x5100d488]
   14003f89d:	jge    0x14003f8c8
   14003f89f:	jmp    QWORD PTR [rbx+0x62]
   14003f8a2:	js     0x14003f8a3
   14003f8a4:	pop    rcx
   14003f8a5:	mov    ebx,esp
   14003f8a7:	jmp    FWORD PTR [rbx-0x66]
   14003f8aa:	in     al,dx
   14003f8ab:	jmp    QWORD PTR [rcx]
   14003f8ad:	push   rcx
   14003f8ae:	(bad)  
   14003f8af:	inc    DWORD PTR [rcx+0x3d]
   14003f8b2:	(bad)  
   14003f8b3:	jmp    FWORD PTR [rdx-0x5700fe9e]
   14003f8b9:	(bad)  
   14003f8ba:	add    edi,edi
   14003f8bc:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14003f8bd:	pop    rdi
   14003f8be:	add    bh,bh
   14003f8c0:	movabs ds:0x9dff025ba0ff025d,al
   14003f8c9:	pop    rdx
   14003f8ca:	add    edi,edi
   14003f8cc:	(bad)  
   14003f8cd:	pop    rax
   14003f8ce:	add    edi,edi
   14003f8d0:	cwde   
   14003f8d1:	push   rdi
   14003f8d2:	add    edi,edi
   14003f8d4:	xchg   ebp,eax
   14003f8d5:	push   rbp
   14003f8d6:	add    al,0xff
   14003f8d8:	xchg   edx,eax
   14003f8d9:	push   rsp
   14003f8da:	add    al,0xff
   14003f8dc:	nop
   14003f8dd:	push   rdx
   14003f8de:	add    al,0xff
   14003f8e0:	lea    edx,[rax+0x4]
   14003f8e3:	dec    DWORD PTR [rdx+0xef054f]
   14003f8e9:	add    BYTE PTR [rax],al
   14003f8eb:	add    BYTE PTR [rax],al
   14003f8ed:	add    BYTE PTR [rax],al
   14003f8ef:	add    BYTE PTR [rbx-0x4c8fff99],dh
   14003f8f5:	addr32 add bh,bh
   14003f8f8:	test   eax,0xa7ff0d65
   14003f8fd:	ins    DWORD PTR es:[rdi],dx
   14003f8fe:	and    bh,bh
   14003f900:	fwait
   14003f901:	data16 sub bh,bh
   14003f904:	pop    rbx
   14003f905:	mov    ah,cl
   14003f907:	jmp    FWORD PTR [rdx+rbx*4-0x14]
   14003f90b:	call   FWORD PTR [rdx+rax*2]
   14003f90e:	scas   eax,DWORD PTR es:[rdi]
   14003f90f:	push   QWORD PTR [rax+rdx*2+0x38]
   14003f913:	jmp    FWORD PTR [rbp-0x5500fe9d]
   14003f919:	(bad)  {z}
   14003f91e:	add    edi,edi
   14003f920:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14003f921:	pop    rdi
   14003f922:	add    bh,bh
   14003f924:	movabs ds:0x9dff025ba0ff025d,al
   14003f92d:	pop    rdx
   14003f92e:	add    edi,edi
   14003f930:	(bad)  
   14003f931:	pop    rax
   14003f932:	add    edi,edi
   14003f934:	cwde   
   14003f935:	push   rdi
   14003f936:	add    edi,edi
   14003f938:	xchg   ebp,eax
   14003f939:	push   rbp
   14003f93a:	add    al,0xff
   14003f93c:	xchg   edx,eax
   14003f93d:	push   rsp
   14003f93e:	add    al,0xff
   14003f940:	nop
   14003f941:	push   rdx
   14003f942:	add    al,0xff
   14003f944:	lea    edx,[rax+0x4]
   14003f947:	jo     0x14003f949
	...
   14003f951:	add    BYTE PTR [rax],al
   14003f953:	add    BYTE PTR [rbx-0x4c8fff99],dh
   14003f959:	addr32 add bh,ch
   14003f95c:	mov    cl,0x69
   14003f95e:	or     edi,edi
   14003f960:	lods   eax,DWORD PTR ds:[rsi]
   14003f961:	outs   dx,DWORD PTR ds:[rsi]
   14003f962:	and    al,0xff
   14003f964:	mov    BYTE PTR [rsi-0x7dad005e],cl
   14003f96a:	loope  0x14003f96b
   14003f96c:	and    BYTE PTR [rsp+rdx*4],dh
   14003f96f:	jmp    FWORD PTR [rax-0x4f00f59d]
   14003f975:	gs add bh,bh
   14003f978:	lods   eax,DWORD PTR ds:[rsi]
   14003f979:	movsxd eax,DWORD PTR [rcx]
   14003f97b:	jmp    FWORD PTR [rdx-0x5700fe9e]
   14003f981:	(bad)  
   14003f982:	add    edi,edi
   14003f984:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14003f985:	pop    rdi
   14003f986:	add    bh,bh
   14003f988:	movabs ds:0x9dff025ba0ff025d,al
   14003f991:	pop    rdx
   14003f992:	add    edi,edi
   14003f994:	(bad)  
   14003f995:	pop    rax
   14003f996:	add    edi,edi
   14003f998:	cwde   
   14003f999:	push   rdi
   14003f99a:	add    edi,edi
   14003f99c:	xchg   ebp,eax
   14003f99d:	push   rbp
   14003f99e:	add    al,0xef
   14003f9a0:	xchg   edx,eax
   14003f9a1:	push   rbx
   14003f9a2:	add    al,0x70
	...
   14003f9c0:	mov    ecx,0x90af2879
   14003f9c5:	jae    0x14003fa24
   14003f9c7:	jmp    QWORD PTR [rsi]
   14003f9c9:	rex.WRXB movabs r15,0x9f9f2d16ff
	...
   14003fa1f:	add    bl,al
   14003fa21:	sub    BYTE PTR [rax+rdx*1],0xc7
   14003fa25:	sub    DWORD PTR [rsi],0xffffffcf
   14003fa28:	jns    0x14003fa8a
   14003fa2a:	push   0xffffffffa22e17ef
   14003fa2f:	and    BYTE PTR [rax],al
	...
   14003fca5:	add    BYTE PTR [rax],al
   14003fca7:	add    BYTE PTR [rax],ch
   14003fca9:	add    BYTE PTR [rax],al
   14003fcab:	add    BYTE PTR [rax],ah
   14003fcad:	add    BYTE PTR [rax],al
   14003fcaf:	add    BYTE PTR [rax+0x0],al
   14003fcb2:	add    BYTE PTR [rax],al
   14003fcb4:	add    DWORD PTR [rax],eax
   14003fcb6:	and    BYTE PTR [rax],al
   14003fcb8:	add    BYTE PTR [rax],al
   14003fcba:	add    BYTE PTR [rax],al
   14003fcbc:	add    BYTE PTR [rax+rax*1],dl
	...
   14003fd63:	add    BYTE PTR [rbp-0x74effbb0],cl
   14003fd69:	rex.WRXB add rax,0x54e898f
   14003fd6f:	out    dx,eax
   14003fd70:	xchg   DWORD PTR [rbp+0x5],ecx
   14003fd73:	inc    DWORD PTR [rbp-0x7c00fab5]
   14003fd79:	rex.WX (bad) 
   14003fd7b:	inc    DWORD PTR [rcx+0x7fff0649]
   14003fd81:	rex.W (bad) 
   14003fd83:	(bad)  
   14003fd84:	jl     0x14003fdcc
   14003fd86:	(bad)  
   14003fd87:	(bad)  
   14003fd88:	jp     0x14003fdcf
   14003fd8a:	(bad)  
   14003fd8b:	(bad)  
   14003fd8c:	js     0x14003fdd2
   14003fd8e:	(bad)  
   14003fd8f:	push   QWORD PTR [rsi+0x43]
   14003fd92:	(bad)  
   14003fd93:	push   QWORD PTR [rcx+rax*2+0x7]
   14003fd97:	push   QWORD PTR [rdx+0x40]
   14003fd9a:	or     bh,bh
   14003fd9c:	jo     0x14003fddd
   14003fd9e:	or     bh,bh
   14003fda0:	outs   dx,BYTE PTR ds:[rsi]
   14003fda1:	ds or  bh,bh
   14003fda4:	ins    BYTE PTR es:[rdi],dx
   14003fda5:	cmp    al,0x8
   14003fda7:	jmp    FWORD PTR [rdx+0x3b]
   14003fdaa:	or     edi,edi
   14003fdac:	push   0x66ff093a
   14003fdb1:	cmp    DWORD PTR [rcx],ecx
   14003fdb3:	jmp    QWORD PTR [rsi+0x39]
   14003fdb6:	or     edi,edi
   14003fdb8:	cmp    WORD PTR [rcx],cx
   14003fdbb:	jmp    QWORD PTR [rsi+0x39]
   14003fdbe:	or     edi,edi
   14003fdc0:	cmp    WORD PTR [rcx],cx
   14003fdc3:	out    dx,eax
   14003fdc4:	cmp    WORD PTR [rcx],cx
   14003fdc7:	(bad)  
   14003fdc8:	cmp    WORD PTR [rcx],cx
   14003fdcb:	adc    BYTE PTR [rax],al
	...
   14003fddd:	add    BYTE PTR [rax],al
   14003fddf:	add    BYTE PTR [rcx-0x70effbad],dl
   14003fde5:	push   rdx
   14003fde6:	add    al,0xcf
   14003fde8:	lea    edx,[rax+0x4]
   14003fdeb:	dec    DWORD PTR [rbx-0x7600fab1]
   14003fdf1:	rex.WRX add rax,0x54d87ff
   14003fdf7:	inc    DWORD PTR [rbp-0x7c00fab5]
   14003fdfd:	rex.WX (bad) 
   14003fdff:	inc    DWORD PTR [rcx+0x7fff0649]
   14003fe05:	rex.W (bad) 
   14003fe07:	(bad)  
   14003fe08:	jl     0x14003fe50
   14003fe0a:	(bad)  
   14003fe0b:	(bad)  
   14003fe0c:	jp     0x14003fe53
   14003fe0e:	(bad)  
   14003fe0f:	(bad)  
   14003fe10:	js     0x14003fe56
   14003fe12:	(bad)  
   14003fe13:	push   QWORD PTR [rsi+0x43]
   14003fe16:	(bad)  
   14003fe17:	push   QWORD PTR [rcx+rax*2+0x7]
   14003fe1b:	push   QWORD PTR [rdx+0x40]
   14003fe1e:	or     bh,bh
   14003fe20:	jo     0x14003fe61
   14003fe22:	or     bh,bh
   14003fe24:	outs   dx,BYTE PTR ds:[rsi]
   14003fe25:	ds or  bh,bh
   14003fe28:	ins    BYTE PTR es:[rdi],dx
   14003fe29:	cmp    al,0x8
   14003fe2b:	jmp    FWORD PTR [rdx+0x3b]
   14003fe2e:	or     edi,edi
   14003fe30:	push   0x66ff093a
   14003fe35:	cmp    DWORD PTR [rcx],ecx
   14003fe37:	jmp    QWORD PTR [rsi+0x39]
   14003fe3a:	or     edi,edi
   14003fe3c:	cmp    WORD PTR [rcx],cx
   14003fe3f:	jmp    QWORD PTR [rsi+0x39]
   14003fe42:	or     edi,edi
   14003fe44:	cmp    WORD PTR [rcx],cx
   14003fe47:	jmp    QWORD PTR [rsi+0x39]
   14003fe4a:	or     edi,ecx
   14003fe4c:	cmp    WORD PTR [rcx],cx
   14003fe4f:	adc    BYTE PTR [rax],al
	...
   14003fe5d:	add    BYTE PTR [rax],al
   14003fe5f:	add    BYTE PTR [rsp+rdx*2+0x53928f04],dl
   14003fe66:	add    al,0xff
   14003fe68:	(bad)  
   14003fe69:	push   rdx
   14003fe6a:	add    al,0xff
   14003fe6c:	lea    edx,[rax+0x4]
   14003fe6f:	dec    DWORD PTR [rbx-0x7600fab1]
   14003fe75:	rex.WRX add rax,0x54d87ff
   14003fe7b:	call   QWORD PTR [rdx+0x33]
   14003fe7e:	adc    eax,0x153352ff
   14003fe83:	call   QWORD PTR [rdx+0x33]
   14003fe86:	adc    eax,0x153352ff
   14003fe8b:	call   QWORD PTR [rdx+0x33]
   14003fe8e:	adc    eax,0x153352ff
   14003fe93:	call   QWORD PTR [rdx+0x33]
   14003fe96:	adc    eax,0x153352ff
   14003fe9b:	call   QWORD PTR [rdx+0x33]
   14003fe9e:	adc    eax,0x153352ff
   14003fea3:	call   QWORD PTR [rdx+0x33]
   14003fea6:	adc    eax,0x153352ff
   14003feab:	call   QWORD PTR [rdx+0x33]
   14003feae:	adc    eax,0x153352ff
   14003feb3:	jmp    FWORD PTR [rax+0x3a]
   14003feb6:	or     edi,edi
   14003feb8:	cmp    WORD PTR [rcx],cx
   14003febb:	jmp    QWORD PTR [rsi+0x39]
   14003febe:	or     edi,edi
   14003fec0:	cmp    WORD PTR [rcx],cx
   14003fec3:	jmp    QWORD PTR [rsi+0x39]
   14003fec6:	or     edi,edi
   14003fec8:	cmp    WORD PTR [rcx],cx
   14003fecb:	jmp    QWORD PTR [rsi+0x39]
   14003fece:	or     DWORD PTR [rdi+0x0],ecx
	...
   14003fee0:	xchg   esi,eax
   14003fee1:	push   rsi
   14003fee2:	add    ebp,edi
   14003fee4:	xchg   esp,eax
   14003fee5:	push   rsp
   14003fee6:	add    al,0xff
   14003fee8:	xchg   edx,eax
   14003fee9:	push   rbx
   14003feea:	add    al,0xff
   14003feec:	(bad)  
   14003feed:	push   rdx
   14003feee:	add    al,0xff
   14003fef0:	lea    edx,[rax+0x4]
   14003fef3:	dec    DWORD PTR [rbx-0x7600fab1]
   14003fef9:	rex.WRX add rax,0x153352ff
   14003feff:	dec    edx
   14003ff01:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14003ff02:	jo     0x14003ff03
   14003ff04:	retf   0x70a5
   14003ff07:	dec    edx
   14003ff09:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14003ff0a:	jo     0x14003ff0b
   14003ff0c:	retf   0x70a5
   14003ff0f:	dec    edx
   14003ff11:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14003ff12:	jo     0x14003ff13
   14003ff14:	retf   0x70a5
   14003ff17:	dec    edx
   14003ff19:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14003ff1a:	jo     0x14003ff1b
   14003ff1c:	retf   0x70a5
   14003ff1f:	dec    edx
   14003ff21:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14003ff22:	jo     0x14003ff23
   14003ff24:	retf   0x70a5
   14003ff27:	dec    edx
   14003ff29:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14003ff2a:	jo     0x14003ff2b
   14003ff2c:	retf   0x70a5
   14003ff2f:	call   QWORD PTR [rdx+0x33]
   14003ff32:	adc    eax,0x93b6aff
   14003ff37:	jmp    FWORD PTR [rax+0x3a]
   14003ff3a:	or     edi,edi
   14003ff3c:	cmp    WORD PTR [rcx],cx
   14003ff3f:	jmp    QWORD PTR [rsi+0x39]
   14003ff42:	or     edi,edi
   14003ff44:	cmp    WORD PTR [rcx],cx
   14003ff47:	jmp    QWORD PTR [rsi+0x39]
   14003ff4a:	or     edi,edi
   14003ff4c:	cmp    WORD PTR [rcx],cx
   14003ff4f:	out    dx,eax
	...
   14003ff60:	cwde   
   14003ff61:	push   rdi
   14003ff62:	add    edi,edi
   14003ff64:	xchg   esi,eax
   14003ff65:	push   rsi
   14003ff66:	add    edi,edi
   14003ff68:	xchg   esp,eax
   14003ff69:	push   rsp
   14003ff6a:	add    al,0xff
   14003ff6c:	xchg   edx,eax
   14003ff6d:	push   rbx
   14003ff6e:	add    al,0xff
   14003ff70:	(bad)  
   14003ff71:	push   rdx
   14003ff72:	add    al,0xff
   14003ff74:	lea    edx,[rax+0x4]
   14003ff77:	dec    DWORD PTR [rbx+0x52ff054f]
   14003ff7d:	xor    edx,DWORD PTR [rip+0x74a8ccff]        # 0x1b4accc82
   14003ff83:	dec    esp
   14003ff85:	test   al,0x74
   14003ff87:	dec    esp
   14003ff89:	test   al,0x74
   14003ff8b:	dec    esp
   14003ff8d:	test   al,0x74
   14003ff8f:	dec    esp
   14003ff91:	test   al,0x74
   14003ff93:	dec    esp
   14003ff95:	test   al,0x74
   14003ff97:	dec    esp
   14003ff99:	test   al,0x74
   14003ff9b:	dec    esp
   14003ff9d:	test   al,0x74
   14003ff9f:	dec    esp
   14003ffa1:	test   al,0x74
   14003ffa3:	dec    esp
   14003ffa5:	test   al,0x74
   14003ffa7:	dec    esp
   14003ffa9:	test   al,0x74
   14003ffab:	dec    esp
   14003ffad:	test   al,0x74
   14003ffaf:	call   QWORD PTR [rdx+0x33]
   14003ffb2:	adc    eax,0x83c6cff
   14003ffb7:	jmp    FWORD PTR [rdx+0x3b]
   14003ffba:	or     edi,edi
   14003ffbc:	push   0x66ff093a
   14003ffc1:	cmp    DWORD PTR [rcx],ecx
   14003ffc3:	jmp    QWORD PTR [rsi+0x39]
   14003ffc6:	or     edi,edi
   14003ffc8:	cmp    WORD PTR [rcx],cx
   14003ffcb:	jmp    QWORD PTR [rsi+0x39]
   14003ffce:	or     edi,edi
	...
   14003ffe0:	(bad)  
   14003ffe1:	pop    rax
   14003ffe2:	add    edi,edi
   14003ffe4:	cwde   
   14003ffe5:	push   rdi
   14003ffe6:	add    edi,edi
   14003ffe8:	xchg   esi,eax
   14003ffe9:	push   rsi
   14003ffea:	add    edi,edi
   14003ffec:	xchg   esp,eax
   14003ffed:	push   rsp
   14003ffee:	add    al,0xff
   14003fff0:	xchg   edx,eax
   14003fff1:	push   rbx
   14003fff2:	add    al,0xff
   14003fff4:	(bad)  
   14003fff5:	push   rdx
   14003fff6:	add    al,0xff
   14003fff8:	lea    edx,[rax+0x4]
   14003fffb:	call   QWORD PTR [rdx+0x33]
   14003fffe:	adc    eax,0x153352ff
   140040003:	call   QWORD PTR [rdx+0x33]
   140040006:	adc    eax,0x153352ff
   14004000b:	call   QWORD PTR [rdx+0x33]
   14004000e:	adc    eax,0x153352ff
   140040013:	call   QWORD PTR [rdx+0x33]
   140040016:	adc    eax,0x153352ff
   14004001b:	call   QWORD PTR [rdx+0x33]
   14004001e:	adc    eax,0x153352ff
   140040023:	call   QWORD PTR [rdx+0x33]
   140040026:	adc    eax,0x153352ff
   14004002b:	call   QWORD PTR [rdx+0x33]
   14004002e:	adc    eax,0x153352ff
   140040033:	jmp    FWORD PTR [rsi+0x3e]
   140040036:	or     bh,bh
   140040038:	ins    BYTE PTR es:[rdi],dx
   140040039:	cmp    al,0x8
   14004003b:	jmp    FWORD PTR [rdx+0x3b]
   14004003e:	or     edi,edi
   140040040:	push   0x66ff093a
   140040045:	cmp    DWORD PTR [rcx],ecx
   140040047:	jmp    QWORD PTR [rsi+0x39]
   14004004a:	or     edi,edi
   14004004c:	cmp    WORD PTR [rcx],cx
   14004004f:	inc    DWORD PTR [rax]
	...
   14004005d:	add    BYTE PTR [rax],al
   14004005f:	add    BYTE PTR [rcx+rbx*2+0x589aff03],bl
   140040066:	add    edi,edi
   140040068:	cwde   
   140040069:	push   rdi
   14004006a:	add    edi,edi
   14004006c:	xchg   esi,eax
   14004006d:	push   rsi
   14004006e:	add    edi,edi
   140040070:	xchg   esp,eax
   140040071:	push   rsp
   140040072:	add    al,0xff
   140040074:	xchg   edx,eax
   140040075:	push   rbx
   140040076:	add    al,0xff
   140040078:	(bad)  
   140040079:	push   rdx
   14004007a:	add    al,0xff
   14004007c:	lea    edx,[rax+0x4]
   14004007f:	dec    DWORD PTR [rbx-0x7600fab1]
   140040085:	rex.WRX add rax,0x54d87ff
   14004008b:	inc    DWORD PTR [rbp+0x71ff054b]
   140040091:	rex.X or al,0xff
   140040094:	push   rbx
   140040095:	xor    al,0x16
   140040097:	call   QWORD PTR [rbx+0x34]
   14004009a:	(bad)  
   14004009b:	jmp    FWORD PTR [rdx+0x3e]
   14004009e:	or     eax,0x7457aff
   1400400a3:	(bad)  
   1400400a4:	js     0x1400400ea
   1400400a6:	(bad)  
   1400400a7:	push   QWORD PTR [rsi+0x43]
   1400400aa:	(bad)  
   1400400ab:	push   QWORD PTR [rcx+rax*2+0x7]
   1400400af:	push   QWORD PTR [rdx+0x40]
   1400400b2:	or     bh,bh
   1400400b4:	jo     0x1400400f5
   1400400b6:	or     bh,bh
   1400400b8:	outs   dx,BYTE PTR ds:[rsi]
   1400400b9:	ds or  bh,bh
   1400400bc:	ins    BYTE PTR es:[rdi],dx
   1400400bd:	cmp    al,0x8
   1400400bf:	jmp    FWORD PTR [rdx+0x3b]
   1400400c2:	or     edi,edi
   1400400c4:	push   0x66ff093a
   1400400c9:	cmp    DWORD PTR [rcx],ecx
   1400400cb:	jmp    QWORD PTR [rsi+0x39]
   1400400ce:	or     edi,edi
	...
   1400400e0:	sahf   
   1400400e1:	pop    rbx
   1400400e2:	add    bh,bh
   1400400e4:	pushf  
   1400400e5:	pop    rcx
   1400400e6:	add    edi,edi
   1400400e8:	(bad)  
   1400400e9:	pop    rax
   1400400ea:	add    edi,edi
   1400400ec:	cwde   
   1400400ed:	push   rdi
   1400400ee:	add    edi,edi
   1400400f0:	xchg   esi,eax
   1400400f1:	push   rsi
   1400400f2:	add    edi,edi
   1400400f4:	xchg   esp,eax
   1400400f5:	push   rsp
   1400400f6:	add    al,0xff
   1400400f8:	xchg   edx,eax
   1400400f9:	push   rbx
   1400400fa:	add    al,0xff
   1400400fc:	(bad)  
   1400400fd:	push   rdx
   1400400fe:	add    al,0xff
   140040100:	lea    edx,[rax+0x4]
   140040103:	dec    DWORD PTR [rbx-0x7600fab1]
   140040109:	rex.WRX add rax,0x9497eff
   14004010f:	call   QWORD PTR [rbp+0x36]
   140040112:	(bad)  
   140040113:	jmp    QWORD PTR [rdx-0x5d00a77e]
   140040119:	(bad)  
   14004011a:	pop    rax
   14004011b:	call   QWORD PTR [rbp+0x36]
   14004011e:	(bad)  
   14004011f:	push   QWORD PTR [rdx+0x42]
   140040122:	or     bh,bh
   140040124:	jp     0x14004016b
   140040126:	(bad)  
   140040127:	(bad)  
   140040128:	js     0x14004016e
   14004012a:	(bad)  
   14004012b:	push   QWORD PTR [rsi+0x43]
   14004012e:	(bad)  
   14004012f:	push   QWORD PTR [rcx+rax*2+0x7]
   140040133:	push   QWORD PTR [rdx+0x40]
   140040136:	or     bh,bh
   140040138:	jo     0x140040179
   14004013a:	or     bh,bh
   14004013c:	outs   dx,BYTE PTR ds:[rsi]
   14004013d:	ds or  bh,bh
   140040140:	ins    BYTE PTR es:[rdi],dx
   140040141:	cmp    al,0x8
   140040143:	jmp    FWORD PTR [rdx+0x3b]
   140040146:	or     edi,edi
   140040148:	push   0x66ff093a
   14004014d:	cmp    DWORD PTR [rcx],ecx
   14004014f:	inc    DWORD PTR [rax]
	...
   14004015d:	add    BYTE PTR [rax],al
   14004015f:	add    BYTE PTR [rax-0x6100fda4],ah
   140040165:	pop    rbx
   140040166:	add    bh,bh
   140040168:	pushf  
   140040169:	pop    rcx
   14004016a:	add    edi,edi
   14004016c:	(bad)  
   14004016d:	pop    rax
   14004016e:	add    edi,edi
   140040170:	cwde   
   140040171:	push   rdi
   140040172:	add    edi,edi
   140040174:	xchg   esi,eax
   140040175:	push   rsi
   140040176:	add    edi,edi
   140040178:	xchg   esp,eax
   140040179:	push   rsp
   14004017a:	add    al,0xff
   14004017c:	xchg   edx,eax
   14004017d:	push   rbx
   14004017e:	add    al,0xff
   140040180:	(bad)  
   140040181:	push   rdx
   140040182:	add    al,0xff
   140040184:	lea    edx,[rax+0x4]
   140040187:	dec    DWORD PTR [rax+0x5aff064e]
   14004018d:	cmp    DWORD PTR [rax],ebx
   14004018f:	call   QWORD PTR [rbp-0x2d00b28b]
   140040195:	mov    dl,0x82
   140040197:	call   rdx
   140040199:	mov    dl,0x82
   14004019b:	call   FWORD PTR [rbp+rdi*2+0x3959ff54]
   1400401a2:	sbb    bh,bh
   1400401a4:	js     0x1400401eb
   1400401a6:	or     edi,edi
   1400401a8:	jp     0x1400401ef
   1400401aa:	(bad)  
   1400401ab:	(bad)  
   1400401ac:	js     0x1400401f2
   1400401ae:	(bad)  
   1400401af:	push   QWORD PTR [rsi+0x43]
   1400401b2:	(bad)  
   1400401b3:	push   QWORD PTR [rcx+rax*2+0x7]
   1400401b7:	push   QWORD PTR [rdx+0x40]
   1400401ba:	or     bh,bh
   1400401bc:	jo     0x1400401fd
   1400401be:	or     bh,bh
   1400401c0:	outs   dx,BYTE PTR ds:[rsi]
   1400401c1:	ds or  bh,bh
   1400401c4:	ins    BYTE PTR es:[rdi],dx
   1400401c5:	cmp    al,0x8
   1400401c7:	jmp    FWORD PTR [rdx+0x3b]
   1400401ca:	or     edi,edi
   1400401cc:	push   0xff093a
	...
   1400401dd:	add    BYTE PTR [rax],al
   1400401df:	add    BYTE PTR [rdx-0x5f00fda3],ah
   1400401e5:	pop    rsp
   1400401e6:	add    bh,bh
   1400401e8:	sahf   
   1400401e9:	pop    rbx
   1400401ea:	add    bh,bh
   1400401ec:	pushf  
   1400401ed:	pop    rcx
   1400401ee:	add    edi,edi
   1400401f0:	(bad)  
   1400401f1:	pop    rax
   1400401f2:	add    edi,edi
   1400401f4:	cwde   
   1400401f5:	push   rdi
   1400401f6:	add    edi,edi
   1400401f8:	xchg   esi,eax
   1400401f9:	push   rsi
   1400401fa:	add    edi,edi
   1400401fc:	xchg   esp,eax
   1400401fd:	push   rsp
   1400401fe:	add    al,0xff
   140040200:	xchg   edx,eax
   140040201:	push   rbx
   140040202:	add    al,0xff
   140040204:	(bad)  
   140040205:	push   rdx
   140040206:	add    al,0xff
   140040208:	movsxd edi,DWORD PTR [rdi]
   14004020a:	(bad)  
   14004020b:	inc    DWORD PTR [rdi-0x2b00bc98]
   140040211:	mov    ah,0x85
   140040213:	call   rsp
   140040215:	mov    ah,0x85
   140040217:	call   rsp
   140040219:	mov    ah,0x85
   14004021b:	call   rsp
   14004021d:	mov    ah,0x85
   14004021f:	inc    DWORD PTR [rdi+0x60ff4368]
   140040225:	cmp    eax,0x467aff17
   14004022a:	(bad)  
   14004022b:	(bad)  
   14004022c:	jp     0x140040273
   14004022e:	(bad)  
   14004022f:	(bad)  
   140040230:	js     0x140040276
   140040232:	(bad)  
   140040233:	push   QWORD PTR [rsi+0x43]
   140040236:	(bad)  
   140040237:	push   QWORD PTR [rcx+rax*2+0x7]
   14004023b:	push   QWORD PTR [rdx+0x40]
   14004023e:	or     bh,bh
   140040240:	jo     0x140040281
   140040242:	or     bh,bh
   140040244:	outs   dx,BYTE PTR ds:[rsi]
   140040245:	ds or  bh,bh
   140040248:	ins    BYTE PTR es:[rdi],dx
   140040249:	cmp    al,0x8
   14004024b:	jmp    FWORD PTR [rdx+0x3b]
   14004024e:	or     edi,edi
	...
   140040260:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140040261:	pop    rsi
   140040262:	add    bh,bh
   140040264:	movabs ds:0x9eff025ca0ff025d,al
   14004026d:	pop    rbx
   14004026e:	add    bh,bh
   140040270:	pushf  
   140040271:	pop    rcx
   140040272:	add    edi,edi
   140040274:	(bad)  
   140040275:	pop    rax
   140040276:	add    edi,edi
   140040278:	cwde   
   140040279:	push   rdi
   14004027a:	add    edi,edi
   14004027c:	xchg   esi,eax
   14004027d:	push   rsi
   14004027e:	add    edi,edi
   140040280:	xchg   esp,eax
   140040281:	push   rsp
   140040282:	add    al,0xff
   140040284:	jo     0x1400402cb
   140040286:	adc    edi,edi
   140040288:	jae    0x1400402de
   14004028a:	xor    edi,edi
   14004028c:	(bad)  
   14004028d:	mov    bh,0x89
   14004028f:	call   rbp
   140040291:	mov    bh,0x89
   140040293:	call   rbp
   140040295:	mov    bh,0x89
   140040297:	call   rbp
   140040299:	mov    bh,0x89
   14004029b:	call   rbp
   14004029d:	mov    bh,0x89
   14004029f:	call   rbp
   1400402a1:	mov    bh,0x89
   1400402a3:	(bad)  
   1400402a4:	jp     0x140040301
   1400402a6:	cmp    bh,bh
   1400402a8:	imul   eax,DWORD PTR [rcx+0x14],0x6467cff
   1400402af:	(bad)  
   1400402b0:	jp     0x1400402f7
   1400402b2:	(bad)  
   1400402b3:	(bad)  
   1400402b4:	js     0x1400402fa
   1400402b6:	(bad)  
   1400402b7:	push   QWORD PTR [rsi+0x43]
   1400402ba:	(bad)  
   1400402bb:	push   QWORD PTR [rcx+rax*2+0x7]
   1400402bf:	push   QWORD PTR [rdx+0x40]
   1400402c2:	or     bh,bh
   1400402c4:	jo     0x140040305
   1400402c6:	or     bh,bh
   1400402c8:	outs   dx,BYTE PTR ds:[rsi]
   1400402c9:	ds or  bh,bh
   1400402cc:	ins    BYTE PTR es:[rdi],dx
   1400402cd:	cmp    al,0x8
   1400402cf:	inc    DWORD PTR [rax]
	...
   1400402dd:	add    BYTE PTR [rax],al
   1400402df:	add    BYTE PTR [rdi-0x5a00fea0],ah
   1400402e5:	pop    rsi
   1400402e6:	add    bh,bh
   1400402e8:	movabs ds:0x9eff025ca0ff025d,al
   1400402f1:	pop    rbx
   1400402f2:	add    bh,bh
   1400402f4:	pushf  
   1400402f5:	pop    rcx
   1400402f6:	add    edi,edi
   1400402f8:	(bad)  
   1400402f9:	pop    rax
   1400402fa:	add    edi,edi
   1400402fc:	cwde   
   1400402fd:	push   rdi
   1400402fe:	add    edi,edi
   140040300:	or     DWORD PTR [rbp+0xd],0x335675ff
   140040307:	dec    edi
   140040309:	mov    cl,0x86
   14004030b:	call   rdi
   14004030d:	mov    ecx,0xb9d7ff8d
   140040312:	(bad)  
   140040313:	call   rdi
   140040315:	mov    ecx,0xb9d7ff8d
   14004031a:	(bad)  
   14004031b:	call   rdi
   14004031d:	mov    ecx,0xb9d7ff8d
   140040322:	(bad)  
   140040323:	dec    edi
   140040325:	mov    cl,0x86
   140040327:	push   QWORD PTR [rbp+0x56]
   14004032a:	xor    edi,edi
   14004032c:	jo     0x140040372
   14004032e:	adc    edi,edi
   140040330:	jl     0x140040378
   140040332:	(bad)  
   140040333:	(bad)  
   140040334:	jp     0x14004037b
   140040336:	(bad)  
   140040337:	(bad)  
   140040338:	js     0x14004037e
   14004033a:	(bad)  
   14004033b:	push   QWORD PTR [rsi+0x43]
   14004033e:	(bad)  
   14004033f:	push   QWORD PTR [rcx+rax*2+0x7]
   140040343:	push   QWORD PTR [rdx+0x40]
   140040346:	or     bh,bh
   140040348:	jo     0x140040389
   14004034a:	or     bh,bh
   14004034c:	outs   dx,BYTE PTR ds:[rsi]
   14004034d:	ds or  bh,bh
	...
   140040360:	test   eax,0xa7ff0161
   140040365:	(bad)  
   140040366:	add    edi,edi
   140040368:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140040369:	pop    rsi
   14004036a:	add    bh,bh
   14004036c:	movabs ds:0x9eff025ca0ff025d,al
   140040375:	pop    rbx
   140040376:	add    bh,bh
   140040378:	pushf  
   140040379:	pop    rcx
   14004037a:	add    edi,edi
   14004037c:	(bad)  
   14004037d:	push   rsp
   14004037e:	or     bh,bh
   140040380:	push   0xffffffffc2ff2749
   140040385:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140040386:	jnp    0x140040387
   140040388:	fnstcw WORD PTR [rax+rdx*4-0x6f432601]
   14004038f:	(bad)  
   140040390:	fnstcw WORD PTR [rax+rdx*4-0x6f432601]
   140040397:	(bad)  
   140040398:	fnstcw WORD PTR [rax+rdx*4-0x6f432601]
   14004039f:	(bad)  
   1400403a0:	fnstcw WORD PTR [rax+rdx*4-0x6f432601]
   1400403a7:	dec    edx
   1400403a9:	lods   al,BYTE PTR ds:[rsi]
   1400403aa:	(bad)  
   1400403ab:	jmp    FWORD PTR [rax+0x49]
   1400403ae:	(bad)  
   1400403af:	push   QWORD PTR [rdi+0x46]
   1400403b2:	or     eax,0x6467cff
   1400403b7:	(bad)  
   1400403b8:	jp     0x1400403ff
   1400403ba:	(bad)  
   1400403bb:	(bad)  
   1400403bc:	js     0x140040402
   1400403be:	(bad)  
   1400403bf:	push   QWORD PTR [rsi+0x43]
   1400403c2:	(bad)  
   1400403c3:	push   QWORD PTR [rcx+rax*2+0x7]
   1400403c7:	push   QWORD PTR [rdx+0x40]
   1400403ca:	or     bh,bh
   1400403cc:	jo     0x14004040d
   1400403ce:	or     bh,bh
	...
   1400403e0:	stos   DWORD PTR es:[rdi],eax
   1400403e1:	(bad)  {k1}{z}
   1400403e6:	add    edi,edi
   1400403e8:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400403e9:	(bad)  
   1400403ea:	add    edi,edi
   1400403ec:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400403ed:	pop    rsi
   1400403ee:	add    bh,bh
   1400403f0:	movabs ds:0x9bff025ca0ff025d,al
   1400403f9:	pop    rcx
   1400403fa:	add    al,0xff
   1400403fc:	data16 and r15b,r15b
   140040400:	(bad)  
   140040401:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140040402:	jle    0x140040403
   140040404:	fidivr DWORD PTR [rsi-0x4125006c]
   14004040a:	xchg   esp,eax
   14004040b:	(bad)  
   14004040c:	fidivr DWORD PTR [rsi-0x4125006c]
   140040412:	xchg   esp,eax
   140040413:	(bad)  
   140040414:	fidivr DWORD PTR [rsi-0x4125006c]
   14004041a:	xchg   esp,eax
   14004041b:	(bad)  
   14004041c:	fidivr DWORD PTR [rsi-0x4125006c]
   140040422:	xchg   esp,eax
   140040423:	(bad)  
   140040424:	fidivr DWORD PTR [rsi-0x4125006c]
   14004042a:	xchg   esp,eax
   14004042b:	inc    esp
   14004042d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004042e:	jle    0x14004042f
   140040430:	gs and dil,r15b
   140040434:	jnp    0x14004047d
   140040436:	or     bh,bh
   140040438:	jl     0x140040480
   14004043a:	(bad)  
   14004043b:	(bad)  
   14004043c:	jp     0x140040483
   14004043e:	(bad)  
   14004043f:	(bad)  
   140040440:	js     0x140040486
   140040442:	(bad)  
   140040443:	push   QWORD PTR [rsi+0x43]
   140040446:	(bad)  
   140040447:	push   QWORD PTR [rcx+rax*2+0x7]
   14004044b:	push   QWORD PTR [rdx+0x40]
   14004044e:	or     bh,bh
	...
   140040460:	lods   eax,DWORD PTR ds:[rsi]
   140040461:	movsxd eax,DWORD PTR [rcx]
   140040463:	jmp    FWORD PTR [rbx-0x5600fe9e]
   140040469:	(bad)  
   14004046a:	add    edi,edi
   14004046c:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004046d:	(bad)  
   14004046e:	add    edi,edi
   140040470:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140040471:	pop    rsi
   140040472:	add    bh,bh
   140040474:	movabs ds:0x65ff1d4a70ff025d,al
   14004047d:	rex.RX and al,0xff
   140040480:	gs rex.RX and al,0xff
   140040484:	gs rex.RX and al,0xff
   140040488:	gs rex.RX and al,0xff
   14004048c:	fadd   st(1),st
   14004048e:	xchg   edi,eax
   14004048f:	(bad)  
   140040490:	fadd   st(1),st
   140040492:	xchg   edi,eax
   140040493:	(bad)  
   140040494:	fadd   st(1),st
   140040496:	xchg   edi,eax
   140040497:	(bad)  
   140040498:	fadd   st(1),st
   14004049a:	xchg   edi,eax
   14004049b:	(bad)  
   14004049c:	fadd   st(1),st
   14004049e:	xchg   edi,eax
   14004049f:	(bad)  
   1400404a0:	fadd   st(1),st
   1400404a2:	xchg   edi,eax
   1400404a3:	jmp    QWORD PTR [rbp+0x46]
   1400404a6:	and    al,0xff
   1400404a8:	gs rex.RX and al,0xff
   1400404ac:	gs rex.RX and al,0xff
   1400404b0:	gs rex.RX and al,0xff
   1400404b4:	push   0x46
   1400404b6:	(bad)  
   1400404b7:	(bad)  
   1400404b8:	jg     0x140040502
   1400404ba:	(bad)  
   1400404bb:	(bad)  
   1400404bc:	jl     0x140040504
   1400404be:	(bad)  
   1400404bf:	(bad)  
   1400404c0:	jp     0x140040507
   1400404c2:	(bad)  
   1400404c3:	(bad)  
   1400404c4:	js     0x14004050a
   1400404c6:	(bad)  
   1400404c7:	push   QWORD PTR [rsi+0x43]
   1400404ca:	(bad)  
   1400404cb:	push   QWORD PTR [rcx+rax*2+0x7]
   1400404cf:	inc    DWORD PTR [rax]
	...
   1400404dd:	add    BYTE PTR [rax],al
   1400404df:	add    BYTE PTR [rdi-0x5200ff9b],ch
   1400404e5:	movsxd eax,DWORD PTR [rcx]
   1400404e7:	jmp    FWORD PTR [rbx-0x5600fe9e]
   1400404ed:	(bad)  
   1400404ee:	add    edi,edi
   1400404f0:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400404f1:	(bad)  
   1400404f2:	add    edi,edi
   1400404f4:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400404f5:	pop    rsi
   1400404f6:	add    bh,bh
   1400404f8:	movabs ds:0x9eff025ca0ff025d,al
   140040501:	pop    rbx
   140040502:	add    bh,bh
   140040504:	pushf  
   140040505:	pop    rcx
   140040506:	add    edi,edi
   140040508:	addr32 and rax,0xffffffff9bc3deff
   14004050f:	(bad)  
   140040510:	faddp  st(3),st
   140040512:	fwait
   140040513:	(bad)  
   140040514:	faddp  st(3),st
   140040516:	fwait
   140040517:	(bad)  
   140040518:	faddp  st(3),st
   14004051a:	fwait
   14004051b:	(bad)  
   14004051c:	faddp  st(3),st
   14004051e:	fwait
   14004051f:	(bad)  
   140040520:	faddp  st(3),st
   140040522:	fwait
   140040523:	jmp    QWORD PTR [rdi+0x48]
   140040526:	and    eax,0x54e89ff
   14004052b:	inc    DWORD PTR [rdi-0x7a00fab3]
   140040531:	rex.WXB add rax,0x64a83ff
   140040537:	inc    DWORD PTR [rcx+0x7fff0649]
   14004053d:	rex.W (bad) 
   14004053f:	(bad)  
   140040540:	jl     0x140040588
   140040542:	(bad)  
   140040543:	(bad)  
   140040544:	jp     0x14004058b
   140040546:	(bad)  
   140040547:	(bad)  
   140040548:	js     0x14004058e
   14004054a:	(bad)  
   14004054b:	push   QWORD PTR [rsi+0x43]
   14004054e:	(bad)  
   14004054f:	inc    DWORD PTR [rax]
	...
   14004055d:	add    BYTE PTR [rax],al
   14004055f:	add    BYTE PTR [rcx-0x5000ff9a],dh
   140040565:	gs add bh,bh
   140040568:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140040569:	(bad)  
   14004056a:	add    edi,edi
   14004056c:	stos   DWORD PTR es:[rdi],eax
   14004056d:	(bad)  {k1}{z}
   140040572:	add    edi,edi
   140040574:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140040575:	(bad)  
   140040576:	add    edi,edi
   140040578:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140040579:	pop    rsi
   14004057a:	add    bh,bh
   14004057c:	movabs ds:0x9eff025ca0ff025d,al
   140040585:	pop    rbx
   140040586:	add    bh,bh
   140040588:	push   0x4a
   14004058a:	(bad)  
   14004058b:	(bad)  
   14004058c:	ffreep st(6)
   14004058e:	sahf   
   14004058f:	(bad)  
   140040590:	ffreep st(6)
   140040592:	sahf   
   140040593:	(bad)  
   140040594:	ffreep st(6)
   140040596:	sahf   
   140040597:	(bad)  
   140040598:	ffreep st(6)
   14004059a:	sahf   
   14004059b:	(bad)  
   14004059c:	ffreep st(6)
   14004059e:	sahf   
   14004059f:	(bad)  
   1400405a0:	ffreep st(6)
   1400405a2:	sahf   
   1400405a3:	jmp    FWORD PTR [rdx+0x4a]
   1400405a6:	(bad)  
   1400405a7:	dec    DWORD PTR [rbx-0x7600fab1]
   1400405ad:	rex.WRX add rax,0x54d87ff
   1400405b3:	inc    DWORD PTR [rbp-0x7c00fab5]
   1400405b9:	rex.WX (bad) 
   1400405bb:	inc    DWORD PTR [rcx+0x7fff0649]
   1400405c1:	rex.W (bad) 
   1400405c3:	(bad)  
   1400405c4:	jl     0x14004060c
   1400405c6:	(bad)  
   1400405c7:	(bad)  
   1400405c8:	jp     0x14004060f
   1400405ca:	(bad)  
   1400405cb:	(bad)  
   1400405cc:	js     0x140040612
   1400405ce:	(bad)  
   1400405cf:	inc    DWORD PTR [rax]
	...
   1400405dd:	add    BYTE PTR [rax],al
   1400405df:	add    BYTE PTR [rbx-0x6500ff99],dh
   1400405e5:	imul   ebx,DWORD PTR [rsi],0xffffffff
   1400405e8:	movabs ss:0x62abff4d7377ffd5,eax
   1400405f2:	add    edi,edi
   1400405f4:	test   eax,0xa7ff0161
   1400405f9:	(bad)  
   1400405fa:	add    edi,edi
   1400405fc:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400405fd:	pop    rsi
   1400405fe:	add    bh,bh
   140040600:	movabs ds:0x6cff025ca0ff025d,al
   140040609:	sub    r15,r15
   14004060c:	loope  0x1400405d6
   14004060e:	movabs ds:0xa2c8e1ffa2c8e1ff,al
   140040617:	jmp    rcx
   140040619:	enter  0xffa2,0xe1
   14004061d:	enter  0xffa2,0xe1
   140040621:	enter  0xffa2,0x6c
   140040625:	sub    r15,r15
   140040628:	lea    edx,[rax+0x4]
   14004062b:	dec    DWORD PTR [rbx-0x7600fab1]
   140040631:	rex.WRX add rax,0x54d87ff
   140040637:	inc    DWORD PTR [rbp-0x7c00fab5]
   14004063d:	rex.WX (bad) 
   14004063f:	inc    DWORD PTR [rcx+0x7fff0649]
   140040645:	rex.W (bad) 
   140040647:	(bad)  
   140040648:	jl     0x140040690
   14004064a:	(bad)  
   14004064b:	(bad)  
   14004064c:	jp     0x140040693
   14004064e:	(bad)  
   14004064f:	inc    DWORD PTR [rax]
	...
   14004065d:	add    BYTE PTR [rax],al
   14004065f:	add    BYTE PTR [rbx+0x5eff0067],dh
   140040665:	mov    dl,BYTE PTR [rsi-0xd54d201]
   14004066b:	jmp    FWORD PTR [rdi]
   14004066d:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004066e:	lock push QWORD PTR [rcx+0x6c]
   140040672:	pop    rcx
   140040673:	jmp    FWORD PTR [rbx-0x5600fe9e]
   140040679:	(bad)  
   14004067a:	add    edi,edi
   14004067c:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004067d:	(bad)  
   14004067e:	add    edi,edi
   140040680:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140040681:	pop    rsi
   140040682:	add    bh,bh
   140040684:	movabs ds:0xe2ff2a4f6eff025d,al
   14004068d:	retf   
   14004068e:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004068f:	jmp    rdx
   140040691:	retf   
   140040692:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140040693:	jmp    rdx
   140040695:	retf   
   140040696:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140040697:	jmp    rdx
   140040699:	retf   
   14004069a:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004069b:	jmp    rdx
   14004069d:	retf   
   14004069e:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004069f:	jmp    rdx
   1400406a1:	retf   
   1400406a2:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400406a3:	jmp    FWORD PTR [rsi+0x4f]
   1400406a6:	sub    bh,bh
   1400406a8:	(bad)  
   1400406a9:	push   rdx
   1400406aa:	add    al,0xff
   1400406ac:	lea    edx,[rax+0x4]
   1400406af:	dec    DWORD PTR [rbx-0x7600fab1]
   1400406b5:	rex.WRX add rax,0x54d87ff
   1400406bb:	inc    DWORD PTR [rbp-0x7c00fab5]
   1400406c1:	rex.WX (bad) 
   1400406c3:	inc    DWORD PTR [rcx+0x7fff0649]
   1400406c9:	rex.W (bad) 
   1400406cb:	(bad)  
   1400406cc:	jl     0x140040714
   1400406ce:	(bad)  
   1400406cf:	inc    DWORD PTR [rax]
	...
   1400406dd:	add    BYTE PTR [rax],al
   1400406df:	add    BYTE PTR [rbx+0x2eff0b5f],ah
   1400406e5:	push   rsi
   1400406e6:	(bad)  
   1400406e7:	jmp    FWORD PTR [rsi]
   1400406e9:	jnp    0x1400406d4
   1400406eb:	jmp    FWORD PTR [rdi]
   1400406ed:	(bad)  
   1400406ee:	jmp    0x1400406ef
   1400406f0:	sub    edi,DWORD PTR [rax-0x16]
   1400406f3:	(bad)  
   1400406f4:	jp     0x14004075b
   1400406f6:	rex.WX jmp FWORD PTR [rbx-0x5600fe9e]
   1400406fd:	(bad)  
   1400406fe:	add    edi,edi
   140040700:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140040701:	(bad)  
   140040702:	add    edi,edi
   140040704:	push   0x64ff4242
   140040709:	rex.WX cmp dil,dil
   14004070c:	in     al,0xcd
   14004070e:	test   eax,0xa9cde4ff
   140040713:	jmp    rsp
   140040715:	int    0xa9
   140040717:	jmp    rsp
   140040719:	int    0xa9
   14004071b:	jmp    rsp
   14004071d:	int    0xa9
   14004071f:	jmp    rsp
   140040721:	int    0xa9
   140040723:	push   QWORD PTR [rcx+0x51]
   140040726:	sub    al,0xff
   140040728:	xchg   edx,eax
   140040729:	push   rbx
   14004072a:	add    al,0xff
   14004072c:	(bad)  
   14004072d:	push   rdx
   14004072e:	add    al,0xff
   140040730:	lea    edx,[rax+0x4]
   140040733:	dec    DWORD PTR [rbx-0x7600fab1]
   140040739:	rex.WRX add rax,0x54d87ff
   14004073f:	inc    DWORD PTR [rbp-0x7c00fab5]
   140040745:	rex.WX (bad) 
   140040747:	inc    DWORD PTR [rcx+0x7fff0649]
   14004074d:	rex.W (bad) 
   14004074f:	inc    DWORD PTR [rax]
   140040751:	add    BYTE PTR [rax],al
   140040753:	add    BYTE PTR [rax],al
   140040755:	add    BYTE PTR [rax],al
   140040757:	add    BYTE PTR [rcx-0x6bbcc48e],bl
   14004075d:	push   0x3a
   14004075f:	jae    0x140040792
   140040761:	and    al,0x5d
   140040763:	call   FWORD PTR [rdi]
   140040765:	and    bl,BYTE PTR [rbx-0x3ccbd901]
   14004076b:	jmp    FWORD PTR [rax]
   14004076d:	push   rdx
   14004076e:	(bad)  
   140040770:	sub    DWORD PTR [rcx-0x18],ebp
   140040773:	push   QWORD PTR [rax]
   140040775:	jbe    0x140040753
   140040777:	push   QWORD PTR [rdi+0x64]
   14004077a:	rex.WX call FWORD PTR [rsi+0x63ff015b]
   140040781:	rex.WX pop rdx
   140040783:	push   QWORD PTR [rbx]
   140040785:	sub    al,0x94
   140040787:	push   QWORD PTR [rbx+0x53]
   14004078a:	cs jmp rsi
   14004078d:	iret   
   14004078e:	lods   al,BYTE PTR ds:[rsi]
   14004078f:	jmp    rsi
   140040791:	iret   
   140040792:	lods   al,BYTE PTR ds:[rsi]
   140040793:	jmp    rsi
   140040795:	iret   
   140040796:	lods   al,BYTE PTR ds:[rsi]
   140040797:	jmp    rsi
   140040799:	iret   
   14004079a:	lods   al,BYTE PTR ds:[rsi]
   14004079b:	jmp    rsi
   14004079d:	iret   
   14004079e:	lods   al,BYTE PTR ds:[rsi]
   14004079f:	jmp    rsi
   1400407a1:	iret   
   1400407a2:	lods   al,BYTE PTR ds:[rsi]
   1400407a3:	push   QWORD PTR [rbx+0x53]
   1400407a6:	call   QWORD PTR cs:[rsp+rdx*2+0x5392ff04]
   1400407ae:	add    al,0xff
   1400407b0:	(bad)  
   1400407b1:	push   rdx
   1400407b2:	add    al,0xff
   1400407b4:	lea    edx,[rax+0x4]
   1400407b7:	dec    DWORD PTR [rbx-0x7600fab1]
   1400407bd:	rex.WRX add rax,0x54d87ff
   1400407c3:	inc    DWORD PTR [rbp-0x7c00fab5]
   1400407c9:	rex.WX (bad) 
   1400407cb:	inc    DWORD PTR [rcx+0xff0649]
   1400407d1:	add    BYTE PTR [rax],al
   1400407d3:	add    eax,0x834788b7
   1400407d8:	xlat   BYTE PTR ds:[rbx]
   1400407d9:	movabs al,ds:0x5478ff5192c6ff53
   1400407e2:	rex.RXB call FWORD PTR [r10]
   1400407e5:	sbb    BYTE PTR [rsi-0x1],ch
   1400407e8:	(bad)  
   1400407e9:	and    DWORD PTR [rdi+rdi*8-0x3dcdda],edx
   1400407f0:	sub    BYTE PTR [rbx+riz*8-0x1],bl
   1400407f4:	sub    dh,BYTE PTR [rbp-0x16]
   1400407f7:	jmp    FWORD PTR [rbx]
   1400407f9:	jge    0x1400407e6
   1400407fb:	jmp    FWORD PTR [rcx]
   1400407fd:	imul   ebp,eax,0xffffffff
   140040800:	es xor eax,0x4a76ffc4
   140040806:	cmp    eax,0x305675ff
   14004080b:	jmp    rdi
   14004080d:	shl    BYTE PTR [rax-0x4f2d1801],cl
   140040813:	jmp    rdi
   140040815:	shl    BYTE PTR [rax-0x4f2d1801],cl
   14004081b:	jmp    rdi
   14004081d:	shl    BYTE PTR [rax-0x4f2d1801],cl
   140040823:	push   QWORD PTR [rbp+0x56]
   140040826:	xor    bh,bh
   140040828:	xchg   esi,eax
   140040829:	push   rsi
   14004082a:	add    edi,edi
   14004082c:	xchg   esp,eax
   14004082d:	push   rsp
   14004082e:	add    al,0xff
   140040830:	xchg   edx,eax
   140040831:	push   rbx
   140040832:	add    al,0xff
   140040834:	(bad)  
   140040835:	push   rdx
   140040836:	add    al,0xff
   140040838:	lea    edx,[rax+0x4]
   14004083b:	dec    DWORD PTR [rbx-0x7600fab1]
   140040841:	rex.WRX add rax,0x54d87ff
   140040847:	inc    DWORD PTR [rbp-0x7c00fab5]
   14004084d:	rex.WX (bad) 
   14004084f:	dec    eax
   140040851:	xchg   ebp,eax
   140040852:	rex.WRB (bad) 
   140040854:	xlat   BYTE PTR ds:[rbx]
   140040855:	movabs al,ds:0x97caff539fd6ff53
   14004085e:	push   rbp
   14004085f:	(bad)  
   140040860:	mov    esp,0x59ff558c
   140040865:	(bad)  
   140040866:	rex.WRB call FWORD PTR [r10]
   140040869:	sbb    dh,BYTE PTR [rdi-0x1]
   14004086c:	and    ah,BYTE PTR [rip+0x5028ffa8]        # 0x1902d081a
   140040872:	(bad)  
   140040874:	sub    dh,BYTE PTR [rbx-0x16]
   140040877:	jmp    FWORD PTR [rbx]
   140040879:	jl     0x140040866
   14004087b:	jmp    FWORD PTR [rax]
   14004087d:	pop    rsp
   14004087e:	loop   0x14004087f
   140040880:	and    ebp,DWORD PTR [rax]
   140040882:	mov    dl,0xff
   140040884:	movabs ds:0xe9ff315878ff0a5e,al
   14004088d:	(bad)  
   14004088e:	mov    ah,0xff
   140040890:	jmp    0x12a03bd69
   140040895:	(bad)  
   140040896:	mov    ah,0xff
   140040898:	jmp    0x12a03bd71
   14004089d:	(bad)  
   14004089e:	mov    ah,0xff
   1400408a0:	jmp    0x1b903bd79
   1400408a5:	pop    rax
   1400408a6:	xor    edi,edi
   1400408a8:	cwde   
   1400408a9:	push   rdi
   1400408aa:	add    edi,edi
   1400408ac:	xchg   esi,eax
   1400408ad:	push   rsi
   1400408ae:	add    edi,edi
   1400408b0:	xchg   esp,eax
   1400408b1:	push   rsp
   1400408b2:	add    al,0xff
   1400408b4:	xchg   edx,eax
   1400408b5:	push   rbx
   1400408b6:	add    al,0xff
   1400408b8:	(bad)  
   1400408b9:	push   rdx
   1400408ba:	add    al,0xff
   1400408bc:	lea    edx,[rax+0x4]
   1400408bf:	dec    DWORD PTR [rbx-0x7600fab1]
   1400408c5:	rex.WRX add rax,0x54d87ff
   1400408cb:	inc    DWORD PTR [rbp-0x2800fab5]
   1400408d1:	movabs al,ds:0x9ed48f53a0d72053
   1400408da:	push   rbx
   1400408db:	out    dx,eax
   1400408dc:	(bad)  
   1400408dd:	xchg   ebp,eax
   1400408de:	push   rbp
   1400408df:	(bad)  
   1400408e0:	mov    ebx,0x8aff508a
   1400408e5:	(bad)  
   1400408e6:	rex.R jmp FWORD PTR [rsi]
   1400408e9:	and    bl,BYTE PTR [rdi+rdi*8+0x1e]
   1400408ed:	and    BYTE PTR [rdx-0x2bb9d801],dl
   1400408f3:	jmp    FWORD PTR [rdx]
   1400408f5:	jno    0x1400408e0
   1400408f7:	jmp    FWORD PTR [rbx]
   1400408f9:	ja     0x1400408e5
   1400408fb:	jmp    QWORD PTR [rdi]
   1400408fd:	rex.WR xlat BYTE PTR ds:[rbx]
   1400408ff:	dec    DWORD PTR [rsi+0x38]
   140040902:	je     0x140040903
   140040904:	lods   eax,DWORD PTR ds:[rsi]
   140040905:	movsxd eax,DWORD PTR [rcx]
   140040907:	(bad)  
   140040908:	jp     0x140040964
   14004090a:	xor    edi,edi
   14004090c:	jp     0x140040968
   14004090e:	xor    edi,edi
   140040910:	jp     0x14004096c
   140040912:	xor    edi,edi
   140040914:	jp     0x140040970
   140040916:	xor    edi,edi
   140040918:	jp     0x140040974
   14004091a:	xor    edi,edi
   14004091c:	jp     0x140040978
   14004091e:	xor    edi,edi
   140040920:	jp     0x14004097c
   140040922:	xor    edi,edi
   140040924:	jp     0x140040980
   140040926:	xor    edi,edi
   140040928:	(bad)  
   140040929:	pop    rax
   14004092a:	add    edi,edi
   14004092c:	cwde   
   14004092d:	push   rdi
   14004092e:	add    edi,edi
   140040930:	xchg   esi,eax
   140040931:	push   rsi
   140040932:	add    edi,edi
   140040934:	xchg   esp,eax
   140040935:	push   rsp
   140040936:	add    al,0xff
   140040938:	xchg   edx,eax
   140040939:	push   rbx
   14004093a:	add    al,0xff
   14004093c:	(bad)  
   14004093d:	push   rdx
   14004093e:	add    al,0xff
   140040940:	lea    edx,[rax+0x4]
   140040943:	dec    DWORD PTR [rbx-0x7600fab1]
   140040949:	rex.WRX add rax,0x54d87ff
   14004094f:	inc    DWORD PTR [rax]
   140040951:	add    BYTE PTR [rax],al
   140040953:	add    BYTE PTR [rax],al
   140040955:	add    BYTE PTR [rax],al
   140040957:	add    bh,cl
   140040959:	(bad)  
   14004095a:	push   rsp
   14004095b:	adc    ch,al
   14004095d:	xchg   edx,eax
   14004095e:	rex.WRXB (bad) 
   140040960:	ins    DWORD PTR es:[rdi],dx
   140040961:	rex.WX
   140040962:	rex out dx,eax
   140040964:	rex.RX sub eax,0x3754ff41
   14004096a:	rex.R call FWORD PTR [rbx]
   14004096d:	sbb    al,0x7e
   14004096f:	jmp    QWORD PTR [rsi]
   140040971:	(bad)  
   140040972:	int3   
   140040973:	jmp    FWORD PTR [rbx]
   140040975:	test   ecx,ebp
   140040977:	jmp    FWORD PTR [rbx]
   140040979:	sub    cl,0xff
   14004097c:	es cmp al,0xc9
   14004097f:	inc    DWORD PTR [rcx+rdx*2+0x65afff32]
   140040986:	add    bh,bh
   140040988:	lods   eax,DWORD PTR ds:[rsi]
   140040989:	movsxd eax,DWORD PTR [rcx]
   14004098b:	jmp    FWORD PTR [rbx-0x5600fe9e]
   140040991:	(bad)  
   140040992:	add    edi,edi
   140040994:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140040995:	(bad)  
   140040996:	add    edi,edi
   140040998:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140040999:	pop    rsi
   14004099a:	add    bh,bh
   14004099c:	movabs ds:0x9eff025ca0ff025d,al
   1400409a5:	pop    rbx
   1400409a6:	add    bh,bh
   1400409a8:	pushf  
   1400409a9:	pop    rcx
   1400409aa:	add    edi,edi
   1400409ac:	(bad)  
   1400409ad:	pop    rax
   1400409ae:	add    edi,edi
   1400409b0:	cwde   
   1400409b1:	push   rdi
   1400409b2:	add    edi,edi
   1400409b4:	xchg   esi,eax
   1400409b5:	push   rsi
   1400409b6:	add    edi,edi
   1400409b8:	xchg   esp,eax
   1400409b9:	push   rsp
   1400409ba:	add    al,0xff
   1400409bc:	xchg   edx,eax
   1400409bd:	push   rbx
   1400409be:	add    al,0xff
   1400409c0:	(bad)  
   1400409c1:	push   rdx
   1400409c2:	add    al,0xff
   1400409c4:	lea    edx,[rax+0x4]
   1400409c7:	dec    DWORD PTR [rbx-0x7600fab1]
   1400409cd:	rex.WRX add rax,0xef
	...
   1400409df:	add    cl,al
   1400409e1:	jle    0x1400409ff
   1400409e3:	pop    rax
   1400409e5:	test   BYTE PTR [rbx],ch
   1400409e7:	call   FWORD PTR [rbx+0x35ff2969]
   1400409ed:	sub    BYTE PTR [rcx-0x1],ah
   1400409f0:	and    eax,0x2dffc137
   1400409f5:	test   al,0xeb
   1400409f7:	jmp    FWORD PTR [rbx]
   1400409f9:	(bad)  
   1400409fd:	xor    ebp,DWORD PTR [rsi+0x67b3ff]
   140040a03:	push   QWORD PTR [rcx-0x5000ff9a]
   140040a09:	gs add bh,bh
   140040a0c:	lods   eax,DWORD PTR ds:[rsi]
   140040a0d:	movsxd eax,DWORD PTR [rcx]
   140040a0f:	jmp    FWORD PTR [rbx-0x5600fe9e]
   140040a15:	(bad)  
   140040a16:	add    edi,edi
   140040a18:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140040a19:	(bad)  
   140040a1a:	add    edi,edi
   140040a1c:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140040a1d:	pop    rsi
   140040a1e:	add    bh,bh
   140040a20:	movabs ds:0x9eff025ca0ff025d,al
   140040a29:	pop    rbx
   140040a2a:	add    bh,bh
   140040a2c:	pushf  
   140040a2d:	pop    rcx
   140040a2e:	add    edi,edi
   140040a30:	(bad)  
   140040a31:	pop    rax
   140040a32:	add    edi,edi
   140040a34:	cwde   
   140040a35:	push   rdi
   140040a36:	add    edi,edi
   140040a38:	xchg   esi,eax
   140040a39:	push   rsi
   140040a3a:	add    edi,edi
   140040a3c:	xchg   esp,eax
   140040a3d:	push   rsp
   140040a3e:	add    al,0xff
   140040a40:	xchg   edx,eax
   140040a41:	push   rbx
   140040a42:	add    al,0xff
   140040a44:	(bad)  
   140040a45:	push   rdx
   140040a46:	add    al,0xff
   140040a48:	lea    edx,[rax+0x4]
   140040a4b:	dec    DWORD PTR [rbx+0x8f054f]
	...
   140040a5d:	add    BYTE PTR [rax],al
   140040a5f:	add    BYTE PTR [rbx-0x56efff99],dh
   140040a65:	(bad)  
   140040a66:	or     bh,cl
   140040a68:	mov    bl,0x71
   140040a6a:	adc    edi,edi
   140040a6c:	jle    0x140040ac4
   140040a6e:	cmp    bh,bh
   140040a70:	and    ch,BYTE PTR [rip+0xffffffffc62fffaf]        # 0x106340a25
   140040a76:	in     al,dx
   140040a77:	jmp    FWORD PTR [rdx+rdx*4]
   140040a7a:	out    0xff,al
   140040a7c:	pop    rcx
   140040a7d:	(bad)  
   140040a7e:	ins    DWORD PTR es:[rdi],dx
   140040a7f:	push   QWORD PTR [rbx-0x4c00ff99]
   140040a85:	addr32 add bh,bh
   140040a88:	mov    cl,0x66
   140040a8a:	add    bh,bh
   140040a8c:	scas   eax,DWORD PTR es:[rdi]
   140040a8d:	gs add bh,bh
   140040a90:	lods   eax,DWORD PTR ds:[rsi]
   140040a91:	movsxd eax,DWORD PTR [rcx]
   140040a93:	jmp    FWORD PTR [rbx-0x5600fe9e]
   140040a99:	(bad)  
   140040a9a:	add    edi,edi
   140040a9c:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140040a9d:	(bad)  
   140040a9e:	add    edi,edi
   140040aa0:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140040aa1:	pop    rsi
   140040aa2:	add    bh,bh
   140040aa4:	movabs ds:0x9eff025ca0ff025d,al
   140040aad:	pop    rbx
   140040aae:	add    bh,bh
   140040ab0:	pushf  
   140040ab1:	pop    rcx
   140040ab2:	add    edi,edi
   140040ab4:	(bad)  
   140040ab5:	pop    rax
   140040ab6:	add    edi,edi
   140040ab8:	cwde   
   140040ab9:	push   rdi
   140040aba:	add    edi,edi
   140040abc:	xchg   esi,eax
   140040abd:	push   rsi
   140040abe:	add    edi,edi
   140040ac0:	xchg   esp,eax
   140040ac1:	push   rsp
   140040ac2:	add    al,0xff
   140040ac4:	xchg   edx,eax
   140040ac5:	push   rbx
   140040ac6:	add    al,0xff
   140040ac8:	(bad)  
   140040ac9:	push   rdx
   140040aca:	add    al,0xcf
   140040acc:	lea    edx,[rax+0x4]
   140040acf:	adc    BYTE PTR [rax],al
	...
   140040ae1:	add    BYTE PTR [rax],al
   140040ae3:	add    BYTE PTR [rbx-0x4cefff99],dh
   140040ae9:	add    BYTE PTR [edi-0x10e98d4f],cl
   140040af0:	sub    al,0x2a
   140040af2:	mov    ?,edi
   140040af4:	xor    ah,cl
   140040af6:	in     al,dx
   140040af7:	jmp    FWORD PTR [rbx]
   140040af9:	sbb    bl,0xff
   140040afc:	test   DWORD PTR [rdx+0x32],edx
   140040aff:	push   QWORD PTR [rbx-0x4c00ff99]
   140040b05:	addr32 add bh,bh
   140040b08:	mov    bl,0x67
   140040b0a:	add    bh,bh
   140040b0c:	mov    cl,0x66
   140040b0e:	add    bh,bh
   140040b10:	scas   eax,DWORD PTR es:[rdi]
   140040b11:	gs add bh,bh
   140040b14:	lods   eax,DWORD PTR ds:[rsi]
   140040b15:	movsxd eax,DWORD PTR [rcx]
   140040b17:	jmp    FWORD PTR [rbx-0x5600fe9e]
   140040b1d:	(bad)  
   140040b1e:	add    edi,edi
   140040b20:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140040b21:	(bad)  
   140040b22:	add    edi,edi
   140040b24:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140040b25:	pop    rsi
   140040b26:	add    bh,bh
   140040b28:	movabs ds:0x9eff025ca0ff025d,al
   140040b31:	pop    rbx
   140040b32:	add    bh,bh
   140040b34:	pushf  
   140040b35:	pop    rcx
   140040b36:	add    edi,edi
   140040b38:	(bad)  
   140040b39:	pop    rax
   140040b3a:	add    edi,edi
   140040b3c:	cwde   
   140040b3d:	push   rdi
   140040b3e:	add    edi,edi
   140040b40:	xchg   esi,eax
   140040b41:	push   rsi
   140040b42:	add    ebp,edi
   140040b44:	xchg   esp,eax
   140040b45:	push   rsp
   140040b46:	add    al,0x8f
   140040b48:	xchg   ecx,eax
   140040b49:	push   rbx
   140040b4a:	add    al,0x10
	...
   140040b6c:	mov    eax,0x5910197b
   140040b71:	rex pop rdi
   140040b73:	out    dx,eax
   140040b74:	cs mov ecx,0x5c27ffe6
   140040b7a:	retf   0xdf
	...
   140040bed:	add    BYTE PTR [rax],al
   140040bef:	add    BYTE PTR [rax+0x25504359],al
   140040bf5:	push   rax
   140040bf6:	mov    eax,0xb53023ef
   140040bfb:	push   rax
	...
   1400410d0:	sub    BYTE PTR [rax],al
   1400410d2:	add    BYTE PTR [rax],al
   1400410d4:	xor    BYTE PTR [rax],al
   1400410d6:	add    BYTE PTR [rax],al
   1400410d8:	(bad)  
   1400410d9:	add    BYTE PTR [rax],al
   1400410db:	add    BYTE PTR [rcx],al
   1400410dd:	add    BYTE PTR [rax],ah
   1400410df:	add    BYTE PTR [rax],al
   1400410e1:	add    BYTE PTR [rax],al
   1400410e3:	add    BYTE PTR [rax],al
   1400410e5:	sub    eax,0x0
	...
   14004129a:	add    BYTE PTR [rax],al
   14004129c:	mov    ecx,DWORD PTR [rdi+0x5]
   14004129f:	and    BYTE PTR [rdx-0x7760fab2],cl
   1400412a5:	rex.WRX add rax,0x54d87ef
   1400412ab:	inc    DWORD PTR [rbp-0x7b00fab4]
   1400412b1:	rex.WXB add rax,0x64a83ff
   1400412b7:	inc    DWORD PTR [rcx-0x7f00f9b7]
   1400412bd:	rex.WB (bad) 
   1400412bf:	(bad)  
   1400412c0:	jle    0x14004130a
   1400412c2:	(bad)  
   1400412c3:	(bad)  
   1400412c4:	jge    0x14004130d
   1400412c6:	(bad)  
   1400412c7:	(bad)  
   1400412c8:	jl     0x140041310
   1400412ca:	(bad)  
   1400412cb:	(bad)  
   1400412cc:	jp     0x140041313
   1400412ce:	(bad)  
   1400412cf:	(bad)  
   1400412d0:	jns    0x140041316
   1400412d2:	(bad)  
   1400412d3:	(bad)  
   1400412d4:	js     0x140041319
   1400412d6:	(bad)  
   1400412d7:	push   QWORD PTR [rsi+0x43]
   1400412da:	(bad)  
   1400412db:	push   QWORD PTR [rdx+rax*2+0x7]
   1400412df:	push   QWORD PTR [rbx+0x41]
   1400412e2:	(bad)  
   1400412e3:	push   QWORD PTR [rdx+0x40]
   1400412e6:	or     bh,bh
   1400412e8:	jo     0x140041329
   1400412ea:	or     bh,bh
   1400412ec:	outs   dx,DWORD PTR ds:[rsi]
   1400412ed:	ds or  bh,bh
   1400412f0:	outs   dx,BYTE PTR ds:[rsi]
   1400412f1:	ds or  bh,bh
   1400412f4:	ins    BYTE PTR es:[rdi],dx
   1400412f5:	cmp    eax,0x3c6bff08
   1400412fa:	or     bh,bh
   1400412fc:	imul   edi,DWORD PTR [rbx],0x3a68ff09
   140041302:	or     edi,edi
   140041304:	cmp    DWORD PTR [ecx],ecx
   140041307:	jmp    QWORD PTR [rsi+0x39]
   14004130a:	or     edi,edi
   14004130c:	cmp    WORD PTR [rcx],cx
   14004130f:	jmp    QWORD PTR [rsi+0x39]
   140041312:	or     edi,edi
   140041314:	cmp    WORD PTR [rcx],cx
   140041317:	jmp    QWORD PTR [rsi+0x39]
   14004131a:	or     edi,edi
   14004131c:	cmp    WORD PTR [rcx],cx
   14004131f:	jmp    QWORD PTR [rsi+0x39]
   140041322:	or     edi,ebp
   140041324:	cmp    WORD PTR [rcx],cx
   140041327:	lahf   
   140041328:	cmp    WORD PTR [rcx],cx
   14004132b:	and    BYTE PTR [rax],al
	...
   140041355:	add    BYTE PTR [rax],al
   140041357:	add    BYTE PTR [rsi-0x739ffbaf],cl
   14004135d:	push   rax
   14004135e:	add    eax,0x54f8bff
   140041363:	dec    DWORD PTR [rdx-0x7700fab2]
   140041369:	rex.WRX add rax,0x54d87ff
   14004136f:	inc    DWORD PTR [rbp-0x7b00fab4]
   140041375:	rex.WXB add rax,0x64a83ff
   14004137b:	inc    DWORD PTR [rcx-0x7f00f9b7]
   140041381:	rex.WB (bad) 
   140041383:	(bad)  
   140041384:	jle    0x1400413ce
   140041386:	(bad)  
   140041387:	(bad)  
   140041388:	jge    0x1400413d1
   14004138a:	(bad)  
   14004138b:	(bad)  
   14004138c:	jl     0x1400413d4
   14004138e:	(bad)  
   14004138f:	(bad)  
   140041390:	jp     0x1400413d7
   140041392:	(bad)  
   140041393:	(bad)  
   140041394:	jns    0x1400413da
   140041396:	(bad)  
   140041397:	(bad)  
   140041398:	js     0x1400413dd
   14004139a:	(bad)  
   14004139b:	push   QWORD PTR [rsi+0x43]
   14004139e:	(bad)  
   14004139f:	push   QWORD PTR [rdx+rax*2+0x7]
   1400413a3:	push   QWORD PTR [rbx+0x41]
   1400413a6:	(bad)  
   1400413a7:	push   QWORD PTR [rdx+0x40]
   1400413aa:	or     bh,bh
   1400413ac:	jo     0x1400413ed
   1400413ae:	or     bh,bh
   1400413b0:	outs   dx,DWORD PTR ds:[rsi]
   1400413b1:	ds or  bh,bh
   1400413b4:	outs   dx,BYTE PTR ds:[rsi]
   1400413b5:	ds or  bh,bh
   1400413b8:	ins    BYTE PTR es:[rdi],dx
   1400413b9:	cmp    eax,0x3c6bff08
   1400413be:	or     bh,bh
   1400413c0:	imul   edi,DWORD PTR [rbx],0x3a68ff09
   1400413c6:	or     edi,edi
   1400413c8:	cmp    DWORD PTR [ecx],ecx
   1400413cb:	jmp    QWORD PTR [rsi+0x39]
   1400413ce:	or     edi,edi
   1400413d0:	cmp    WORD PTR [rcx],cx
   1400413d3:	jmp    QWORD PTR [rsi+0x39]
   1400413d6:	or     edi,edi
   1400413d8:	cmp    WORD PTR [rcx],cx
   1400413db:	jmp    QWORD PTR [rsi+0x39]
   1400413de:	or     edi,edi
   1400413e0:	cmp    WORD PTR [rcx],cx
   1400413e3:	jmp    QWORD PTR [rsi+0x39]
   1400413e6:	or     edi,edi
   1400413e8:	cmp    WORD PTR [rcx],cx
   1400413eb:	jmp    QWORD PTR [rsi+0x39]
   1400413ee:	or     DWORD PTR [rax+0x0],eax
	...
   140041414:	xchg   ecx,eax
   140041415:	push   rdx
   140041416:	add    al,0x60
   140041418:	(bad)  
   140041419:	push   rdx
   14004141a:	add    al,0xff
   14004141c:	mov    ss,WORD PTR [rcx+0x4]
   14004141f:	dec    DWORD PTR [rax+rdx*2+0x4f8bff05]
   140041426:	add    eax,0x54e8aff
   14004142b:	dec    DWORD PTR [rax-0x7800fab2]
   140041431:	rex.WRB add rax,0x54c85ff
   140041437:	inc    DWORD PTR [rbx+rcx*2+0x4a83ff05]
   14004143e:	(bad)  
   14004143f:	inc    DWORD PTR [rcx-0x7f00f9b7]
   140041445:	rex.WB (bad) 
   140041447:	(bad)  
   140041448:	jle    0x140041492
   14004144a:	(bad)  
   14004144b:	(bad)  
   14004144c:	jge    0x140041495
   14004144e:	(bad)  
   14004144f:	(bad)  
   140041450:	jl     0x140041498
   140041452:	(bad)  
   140041453:	(bad)  
   140041454:	jp     0x14004149b
   140041456:	(bad)  
   140041457:	(bad)  
   140041458:	jns    0x14004149e
   14004145a:	(bad)  
   14004145b:	(bad)  
   14004145c:	js     0x1400414a1
   14004145e:	(bad)  
   14004145f:	push   QWORD PTR [rsi+0x43]
   140041462:	(bad)  
   140041463:	push   QWORD PTR [rdx+rax*2+0x7]
   140041467:	push   QWORD PTR [rbx+0x41]
   14004146a:	(bad)  
   14004146b:	push   QWORD PTR [rdx+0x40]
   14004146e:	or     bh,bh
   140041470:	jo     0x1400414b1
   140041472:	or     bh,bh
   140041474:	outs   dx,DWORD PTR ds:[rsi]
   140041475:	ds or  bh,bh
   140041478:	outs   dx,BYTE PTR ds:[rsi]
   140041479:	ds or  bh,bh
   14004147c:	ins    BYTE PTR es:[rdi],dx
   14004147d:	cmp    eax,0x3c6bff08
   140041482:	or     bh,bh
   140041484:	imul   edi,DWORD PTR [rbx],0x3a68ff09
   14004148a:	or     edi,edi
   14004148c:	cmp    DWORD PTR [ecx],ecx
   14004148f:	jmp    QWORD PTR [rsi+0x39]
   140041492:	or     edi,edi
   140041494:	cmp    WORD PTR [rcx],cx
   140041497:	jmp    QWORD PTR [rsi+0x39]
   14004149a:	or     edi,edi
   14004149c:	cmp    WORD PTR [rcx],cx
   14004149f:	jmp    QWORD PTR [rsi+0x39]
   1400414a2:	or     edi,edi
   1400414a4:	cmp    WORD PTR [rcx],cx
   1400414a7:	jmp    QWORD PTR [rsi+0x39]
   1400414aa:	or     edi,edi
   1400414ac:	cmp    WORD PTR [rcx],cx
   1400414af:	jmp    QWORD PTR [rsi+0x39]
   1400414b2:	or     DWORD PTR [rax+0x0],eax
	...
   1400414d0:	xchg   esp,eax
   1400414d1:	push   rsp
   1400414d2:	add    al,0x20
   1400414d4:	xchg   edx,eax
   1400414d5:	push   rbx
   1400414d6:	add    al,0xef
   1400414d8:	xchg   ecx,eax
   1400414d9:	push   rdx
   1400414da:	add    al,0xff
   1400414dc:	(bad)  
   1400414dd:	push   rdx
   1400414de:	add    al,0xff
   1400414e0:	mov    ss,WORD PTR [rcx+0x4]
   1400414e3:	dec    DWORD PTR [rax+rdx*2+0x4f8bff05]
   1400414ea:	add    eax,0x54e8aff
   1400414ef:	dec    DWORD PTR [rax-0x7800fab2]
   1400414f5:	rex.WRB add rax,0x54c85ff
   1400414fb:	call   QWORD PTR [rdx+0x33]
   1400414fe:	adc    eax,0x153352ff
   140041503:	call   QWORD PTR [rdx+0x33]
   140041506:	adc    eax,0x153352ff
   14004150b:	call   QWORD PTR [rdx+0x33]
   14004150e:	adc    eax,0x153352ff
   140041513:	call   QWORD PTR [rdx+0x33]
   140041516:	adc    eax,0x153352ff
   14004151b:	call   QWORD PTR [rdx+0x33]
   14004151e:	adc    eax,0x153352ff
   140041523:	call   QWORD PTR [rdx+0x33]
   140041526:	adc    eax,0x153352ff
   14004152b:	call   QWORD PTR [rdx+0x33]
   14004152e:	adc    eax,0x153352ff
   140041533:	call   QWORD PTR [rdx+0x33]
   140041536:	adc    eax,0x153352ff
   14004153b:	call   QWORD PTR [rdx+0x33]
   14004153e:	adc    eax,0x153352ff
   140041543:	call   QWORD PTR [rdx+0x33]
   140041546:	adc    eax,0x153352ff
   14004154b:	jmp    FWORD PTR [rax+0x3a]
   14004154e:	or     edi,edi
   140041550:	cmp    DWORD PTR [ecx],ecx
   140041553:	jmp    QWORD PTR [rsi+0x39]
   140041556:	or     edi,edi
   140041558:	cmp    WORD PTR [rcx],cx
   14004155b:	jmp    QWORD PTR [rsi+0x39]
   14004155e:	or     edi,edi
   140041560:	cmp    WORD PTR [rcx],cx
   140041563:	jmp    QWORD PTR [rsi+0x39]
   140041566:	or     edi,edi
   140041568:	cmp    WORD PTR [rcx],cx
   14004156b:	jmp    QWORD PTR [rsi+0x39]
   14004156e:	or     edi,edi
   140041570:	cmp    WORD PTR [rcx],cx
   140041573:	jmp    QWORD PTR [rsi+0x39]
   140041576:	or     DWORD PTR [rax],esi
	...
   140041590:	xchg   ebp,eax
   140041591:	push   rbp
   140041592:	add    al,0x9f
   140041594:	xchg   esp,eax
   140041595:	push   rsp
   140041596:	add    al,0xff
   140041598:	xchg   edx,eax
   140041599:	push   rbx
   14004159a:	add    al,0xff
   14004159c:	xchg   ecx,eax
   14004159d:	push   rdx
   14004159e:	add    al,0xff
   1400415a0:	(bad)  
   1400415a1:	push   rdx
   1400415a2:	add    al,0xff
   1400415a4:	mov    ss,WORD PTR [rcx+0x4]
   1400415a7:	dec    DWORD PTR [rax+rdx*2+0x4f8bff05]
   1400415ae:	add    eax,0x54e8aff
   1400415b3:	dec    DWORD PTR [rax-0x7800fab2]
   1400415b9:	rex.WRB add rax,0x153352ff
   1400415bf:	dec    esi
   1400415c1:	stos   DWORD PTR es:[rdi],eax
   1400415c2:	js     0x1400415c3
   1400415c4:	(bad)  
   1400415c5:	stos   DWORD PTR es:[rdi],eax
   1400415c6:	js     0x1400415c7
   1400415c8:	(bad)  
   1400415c9:	stos   DWORD PTR es:[rdi],eax
   1400415ca:	js     0x1400415cb
   1400415cc:	(bad)  
   1400415cd:	stos   DWORD PTR es:[rdi],eax
   1400415ce:	js     0x1400415cf
   1400415d0:	(bad)  
   1400415d1:	stos   DWORD PTR es:[rdi],eax
   1400415d2:	js     0x1400415d3
   1400415d4:	(bad)  
   1400415d5:	stos   DWORD PTR es:[rdi],eax
   1400415d6:	js     0x1400415d7
   1400415d8:	(bad)  
   1400415d9:	stos   DWORD PTR es:[rdi],eax
   1400415da:	js     0x1400415db
   1400415dc:	(bad)  
   1400415dd:	stos   DWORD PTR es:[rdi],eax
   1400415de:	js     0x1400415df
   1400415e0:	(bad)  
   1400415e1:	stos   DWORD PTR es:[rdi],eax
   1400415e2:	js     0x1400415e3
   1400415e4:	(bad)  
   1400415e5:	stos   DWORD PTR es:[rdi],eax
   1400415e6:	js     0x1400415e7
   1400415e8:	(bad)  
   1400415e9:	stos   DWORD PTR es:[rdi],eax
   1400415ea:	js     0x1400415eb
   1400415ec:	(bad)  
   1400415ed:	stos   DWORD PTR es:[rdi],eax
   1400415ee:	js     0x1400415ef
   1400415f0:	(bad)  
   1400415f1:	stos   DWORD PTR es:[rdi],eax
   1400415f2:	js     0x1400415f3
   1400415f4:	(bad)  
   1400415f5:	stos   DWORD PTR es:[rdi],eax
   1400415f6:	js     0x1400415f7
   1400415f8:	(bad)  
   1400415f9:	stos   DWORD PTR es:[rdi],eax
   1400415fa:	js     0x1400415fb
   1400415fc:	(bad)  
   1400415fd:	stos   DWORD PTR es:[rdi],eax
   1400415fe:	js     0x1400415ff
   140041600:	(bad)  
   140041601:	stos   DWORD PTR es:[rdi],eax
   140041602:	js     0x140041603
   140041604:	(bad)  
   140041605:	stos   DWORD PTR es:[rdi],eax
   140041606:	js     0x140041607
   140041608:	push   rdx
   140041609:	xor    edx,DWORD PTR [rip+0x93b69ff]        # 0x1493f800e
   14004160f:	jmp    FWORD PTR [rax+0x3a]
   140041612:	or     edi,edi
   140041614:	cmp    DWORD PTR [ecx],ecx
   140041617:	jmp    QWORD PTR [rsi+0x39]
   14004161a:	or     edi,edi
   14004161c:	cmp    WORD PTR [rcx],cx
   14004161f:	jmp    QWORD PTR [rsi+0x39]
   140041622:	or     edi,edi
   140041624:	cmp    WORD PTR [rcx],cx
   140041627:	jmp    QWORD PTR [rsi+0x39]
   14004162a:	or     edi,edi
   14004162c:	cmp    WORD PTR [rcx],cx
   14004162f:	jmp    QWORD PTR [rsi+0x39]
   140041632:	or     edi,edi
   140041634:	cmp    WORD PTR [rcx],cx
   140041637:	lahf   
	...
   140041650:	xchg   esi,eax
   140041651:	push   rsi
   140041652:	add    ebx,edi
   140041654:	xchg   ebp,eax
   140041655:	push   rbp
   140041656:	add    al,0xff
   140041658:	xchg   esp,eax
   140041659:	push   rsp
   14004165a:	add    al,0xff
   14004165c:	xchg   edx,eax
   14004165d:	push   rbx
   14004165e:	add    al,0xff
   140041660:	xchg   ecx,eax
   140041661:	push   rdx
   140041662:	add    al,0xff
   140041664:	(bad)  
   140041665:	push   rdx
   140041666:	add    al,0xff
   140041668:	mov    ss,WORD PTR [rcx+0x4]
   14004166b:	dec    DWORD PTR [rax+rdx*2+0x4f8bff05]
   140041672:	add    eax,0x54e8aff
   140041677:	dec    DWORD PTR [rax+0x52ff054e]
   14004167d:	xor    edx,DWORD PTR [rip+0x7badcfff]        # 0x1bbb1e682
   140041683:	dec    edi
   140041685:	lods   eax,DWORD PTR ds:[rsi]
   140041686:	jnp    0x140041687
   140041688:	iret   
   140041689:	lods   eax,DWORD PTR ds:[rsi]
   14004168a:	jnp    0x14004168b
   14004168c:	iret   
   14004168d:	lods   eax,DWORD PTR ds:[rsi]
   14004168e:	jnp    0x14004168f
   140041690:	iret   
   140041691:	lods   eax,DWORD PTR ds:[rsi]
   140041692:	jnp    0x140041693
   140041694:	iret   
   140041695:	lods   eax,DWORD PTR ds:[rsi]
   140041696:	jnp    0x140041697
   140041698:	iret   
   140041699:	lods   eax,DWORD PTR ds:[rsi]
   14004169a:	jnp    0x14004169b
   14004169c:	iret   
   14004169d:	lods   eax,DWORD PTR ds:[rsi]
   14004169e:	jnp    0x14004169f
   1400416a0:	iret   
   1400416a1:	lods   eax,DWORD PTR ds:[rsi]
   1400416a2:	jnp    0x1400416a3
   1400416a4:	iret   
   1400416a5:	lods   eax,DWORD PTR ds:[rsi]
   1400416a6:	jnp    0x1400416a7
   1400416a8:	iret   
   1400416a9:	lods   eax,DWORD PTR ds:[rsi]
   1400416aa:	jnp    0x1400416ab
   1400416ac:	iret   
   1400416ad:	lods   eax,DWORD PTR ds:[rsi]
   1400416ae:	jnp    0x1400416af
   1400416b0:	iret   
   1400416b1:	lods   eax,DWORD PTR ds:[rsi]
   1400416b2:	jnp    0x1400416b3
   1400416b4:	iret   
   1400416b5:	lods   eax,DWORD PTR ds:[rsi]
   1400416b6:	jnp    0x1400416b7
   1400416b8:	iret   
   1400416b9:	lods   eax,DWORD PTR ds:[rsi]
   1400416ba:	jnp    0x1400416bb
   1400416bc:	iret   
   1400416bd:	lods   eax,DWORD PTR ds:[rsi]
   1400416be:	jnp    0x1400416bf
   1400416c0:	iret   
   1400416c1:	lods   eax,DWORD PTR ds:[rsi]
   1400416c2:	jnp    0x1400416c3
   1400416c4:	iret   
   1400416c5:	lods   eax,DWORD PTR ds:[rsi]
   1400416c6:	jnp    0x1400416c7
   1400416c8:	push   rdx
   1400416c9:	xor    edx,DWORD PTR [rip+0x83c6bff]        # 0x1484082ce
   1400416cf:	jmp    FWORD PTR [rcx+0x3b]
   1400416d2:	or     edi,edi
   1400416d4:	push   0x67ff093a
   1400416d9:	cmp    DWORD PTR [rcx],ecx
   1400416db:	jmp    QWORD PTR [rsi+0x39]
   1400416de:	or     edi,edi
   1400416e0:	cmp    WORD PTR [rcx],cx
   1400416e3:	jmp    QWORD PTR [rsi+0x39]
   1400416e6:	or     edi,edi
   1400416e8:	cmp    WORD PTR [rcx],cx
   1400416eb:	jmp    QWORD PTR [rsi+0x39]
   1400416ee:	or     edi,edi
   1400416f0:	cmp    WORD PTR [rcx],cx
   1400416f3:	jmp    QWORD PTR [rsi+0x39]
   1400416f6:	or     edi,edi
	...
   140041710:	cwde   
   140041711:	push   rdi
   140041712:	add    edi,edi
   140041714:	xchg   esi,eax
   140041715:	push   rsi
   140041716:	add    edi,edi
   140041718:	xchg   ebp,eax
   140041719:	push   rbp
   14004171a:	add    al,0xff
   14004171c:	xchg   esp,eax
   14004171d:	push   rsp
   14004171e:	add    al,0xff
   140041720:	xchg   edx,eax
   140041721:	push   rbx
   140041722:	add    al,0xff
   140041724:	xchg   ecx,eax
   140041725:	push   rdx
   140041726:	add    al,0xff
   140041728:	(bad)  
   140041729:	push   rdx
   14004172a:	add    al,0xff
   14004172c:	mov    ss,WORD PTR [rcx+0x4]
   14004172f:	dec    DWORD PTR [rax+rdx*2+0x4f8bff05]
   140041736:	add    eax,0x54e8aff
   14004173b:	call   QWORD PTR [rdx+0x33]
   14004173e:	adc    eax,0x7eafd0ff
   140041743:	call   rax
   140041745:	scas   eax,DWORD PTR es:[rdi]
   140041746:	jle    0x140041747
   140041748:	shr    BYTE PTR [rdi-0x502f0082],1
   14004174e:	jle    0x14004174f
   140041750:	shr    BYTE PTR [rdi-0x502f0082],1
   140041756:	jle    0x140041757
   140041758:	shr    BYTE PTR [rdi-0x502f0082],1
   14004175e:	jle    0x14004175f
   140041760:	shr    BYTE PTR [rdi-0x502f0082],1
   140041766:	jle    0x140041767
   140041768:	shr    BYTE PTR [rdi-0x502f0082],1
   14004176e:	jle    0x14004176f
   140041770:	shr    BYTE PTR [rdi-0x502f0082],1
   140041776:	jle    0x140041777
   140041778:	shr    BYTE PTR [rdi-0x502f0082],1
   14004177e:	jle    0x14004177f
   140041780:	shr    BYTE PTR [rdi-0x502f0082],1
   140041786:	jle    0x140041787
   140041788:	push   rdx
   140041789:	xor    edx,DWORD PTR [rip+0x83d6cff]        # 0x14841848e
   14004178f:	jmp    FWORD PTR [rbx+0x3c]
   140041792:	or     bh,bh
   140041794:	imul   edi,DWORD PTR [rbx],0x3a68ff09
   14004179a:	or     edi,edi
   14004179c:	cmp    DWORD PTR [ecx],ecx
   14004179f:	jmp    QWORD PTR [rsi+0x39]
   1400417a2:	or     edi,edi
   1400417a4:	cmp    WORD PTR [rcx],cx
   1400417a7:	jmp    QWORD PTR [rsi+0x39]
   1400417aa:	or     edi,edi
   1400417ac:	cmp    WORD PTR [rcx],cx
   1400417af:	jmp    QWORD PTR [rsi+0x39]
   1400417b2:	or     edi,edi
   1400417b4:	cmp    WORD PTR [rcx],cx
   1400417b7:	inc    DWORD PTR [rax]
	...
   1400417cd:	add    BYTE PTR [rax],al
   1400417cf:	add    BYTE PTR [rcx-0x6700fca9],bl
   1400417d5:	push   rdi
   1400417d6:	add    edi,edi
   1400417d8:	xchg   esi,eax
   1400417d9:	push   rsi
   1400417da:	add    edi,edi
   1400417dc:	xchg   ebp,eax
   1400417dd:	push   rbp
   1400417de:	add    al,0xff
   1400417e0:	xchg   esp,eax
   1400417e1:	push   rsp
   1400417e2:	add    al,0xff
   1400417e4:	xchg   edx,eax
   1400417e5:	push   rbx
   1400417e6:	add    al,0xff
   1400417e8:	xchg   ecx,eax
   1400417e9:	push   rdx
   1400417ea:	add    al,0xff
   1400417ec:	(bad)  
   1400417ed:	push   rdx
   1400417ee:	add    al,0xff
   1400417f0:	mov    ss,WORD PTR [rcx+0x4]
   1400417f3:	dec    DWORD PTR [rax+rdx*2+0x4f8bff05]
   1400417fa:	add    eax,0x163453ff
   1400417ff:	call   QWORD PTR [rbx+0x34]
   140041802:	(bad)  
   140041803:	call   QWORD PTR [rbx+0x34]
   140041806:	(bad)  
   140041807:	call   QWORD PTR [rbx+0x34]
   14004180a:	(bad)  
   14004180b:	call   QWORD PTR [rbx+0x34]
   14004180e:	(bad)  
   14004180f:	call   QWORD PTR [rbx+0x34]
   140041812:	(bad)  
   140041813:	call   QWORD PTR [rbx+0x34]
   140041816:	(bad)  
   140041817:	call   QWORD PTR [rbx+0x34]
   14004181a:	(bad)  
   14004181b:	call   QWORD PTR [rbx+0x34]
   14004181e:	(bad)  
   14004181f:	call   QWORD PTR [rbx+0x34]
   140041822:	(bad)  
   140041823:	call   QWORD PTR [rbx+0x34]
   140041826:	(bad)  
   140041827:	call   QWORD PTR [rbx+0x34]
   14004182a:	(bad)  
   14004182b:	call   QWORD PTR [rbx+0x34]
   14004182e:	(bad)  
   14004182f:	call   QWORD PTR [rbx+0x34]
   140041832:	(bad)  
   140041833:	call   QWORD PTR [rbx+0x34]
   140041836:	(bad)  
   140041837:	call   QWORD PTR [rbx+0x34]
   14004183a:	(bad)  
   14004183b:	call   QWORD PTR [rbx+0x34]
   14004183e:	(bad)  
   14004183f:	call   QWORD PTR [rbx+0x34]
   140041842:	(bad)  
   140041843:	call   QWORD PTR [rbx+0x34]
   140041846:	(bad)  
   140041847:	call   QWORD PTR [rbx+0x34]
   14004184a:	(bad)  
   14004184b:	jmp    FWORD PTR [rsi+0x3e]
   14004184e:	or     bh,bh
   140041850:	ins    BYTE PTR es:[rdi],dx
   140041851:	cmp    eax,0x3c6bff08
   140041856:	or     bh,bh
   140041858:	imul   edi,DWORD PTR [rbx],0x3a68ff09
   14004185e:	or     edi,edi
   140041860:	cmp    DWORD PTR [ecx],ecx
   140041863:	jmp    QWORD PTR [rsi+0x39]
   140041866:	or     edi,edi
   140041868:	cmp    WORD PTR [rcx],cx
   14004186b:	jmp    QWORD PTR [rsi+0x39]
   14004186e:	or     edi,edi
   140041870:	cmp    WORD PTR [rcx],cx
   140041873:	jmp    QWORD PTR [rsi+0x39]
   140041876:	or     edi,edi
	...
   140041890:	fwait
   140041891:	pop    rax
   140041892:	add    edi,edi
   140041894:	cdq    
   140041895:	push   rdi
   140041896:	add    edi,edi
   140041898:	cwde   
   140041899:	push   rdi
   14004189a:	add    edi,edi
   14004189c:	xchg   esi,eax
   14004189d:	push   rsi
   14004189e:	add    edi,edi
   1400418a0:	xchg   ebp,eax
   1400418a1:	push   rbp
   1400418a2:	add    al,0xff
   1400418a4:	xchg   esp,eax
   1400418a5:	push   rsp
   1400418a6:	add    al,0xff
   1400418a8:	xchg   edx,eax
   1400418a9:	push   rbx
   1400418aa:	add    al,0xff
   1400418ac:	xchg   ecx,eax
   1400418ad:	push   rdx
   1400418ae:	add    al,0xff
   1400418b0:	(bad)  
   1400418b1:	push   rdx
   1400418b2:	add    al,0xff
   1400418b4:	mov    ss,WORD PTR [rcx+0x4]
   1400418b7:	dec    DWORD PTR [rax+rdx*2+0x4f8bff05]
   1400418be:	add    eax,0x54e8aff
   1400418c3:	dec    DWORD PTR [rax-0x7800fab2]
   1400418c9:	rex.WRB add rax,0x54c85ff
   1400418cf:	inc    DWORD PTR [rbx+rcx*2+0x4a83ff05]
   1400418d6:	(bad)  
   1400418d7:	inc    DWORD PTR [rcx-0x7f00f9b7]
   1400418dd:	rex.WB (bad) 
   1400418df:	jmp    QWORD PTR [rsp+rdi*1+0x11]
   1400418e3:	jmp    QWORD PTR [rcx+0x3b]
   1400418e6:	adc    bh,bh
   1400418e8:	jl     0x140041930
   1400418ea:	(bad)  
   1400418eb:	(bad)  
   1400418ec:	jp     0x140041933
   1400418ee:	(bad)  
   1400418ef:	(bad)  
   1400418f0:	jns    0x140041936
   1400418f2:	(bad)  
   1400418f3:	(bad)  
   1400418f4:	js     0x140041939
   1400418f6:	(bad)  
   1400418f7:	push   QWORD PTR [rsi+0x43]
   1400418fa:	(bad)  
   1400418fb:	push   QWORD PTR [rdx+rax*2+0x7]
   1400418ff:	push   QWORD PTR [rbx+0x41]
   140041902:	(bad)  
   140041903:	push   QWORD PTR [rdx+0x40]
   140041906:	or     bh,bh
   140041908:	jo     0x140041949
   14004190a:	or     bh,bh
   14004190c:	outs   dx,DWORD PTR ds:[rsi]
   14004190d:	ds or  bh,bh
   140041910:	outs   dx,BYTE PTR ds:[rsi]
   140041911:	ds or  bh,bh
   140041914:	ins    BYTE PTR es:[rdi],dx
   140041915:	cmp    eax,0x3c6bff08
   14004191a:	or     bh,bh
   14004191c:	imul   edi,DWORD PTR [rbx],0x3a68ff09
   140041922:	or     edi,edi
   140041924:	cmp    DWORD PTR [ecx],ecx
   140041927:	jmp    QWORD PTR [rsi+0x39]
   14004192a:	or     edi,edi
   14004192c:	cmp    WORD PTR [rcx],cx
   14004192f:	jmp    QWORD PTR [rsi+0x39]
   140041932:	or     edi,edi
   140041934:	cmp    WORD PTR [rcx],cx
   140041937:	inc    DWORD PTR [rax]
	...
   14004194d:	add    BYTE PTR [rax],al
   14004194f:	add    BYTE PTR [rcx+rbx*2+0x589bff03],bl
   140041956:	add    edi,edi
   140041958:	cdq    
   140041959:	push   rdi
   14004195a:	add    edi,edi
   14004195c:	cwde   
   14004195d:	push   rdi
   14004195e:	add    edi,edi
   140041960:	xchg   esi,eax
   140041961:	push   rsi
   140041962:	add    edi,edi
   140041964:	xchg   ebp,eax
   140041965:	push   rbp
   140041966:	add    al,0xff
   140041968:	xchg   esp,eax
   140041969:	push   rsp
   14004196a:	add    al,0xff
   14004196c:	xchg   edx,eax
   14004196d:	push   rbx
   14004196e:	add    al,0xff
   140041970:	xchg   ecx,eax
   140041971:	push   rdx
   140041972:	add    al,0xff
   140041974:	(bad)  
   140041975:	push   rdx
   140041976:	add    al,0xff
   140041978:	mov    ss,WORD PTR [rcx+0x4]
   14004197b:	dec    DWORD PTR [rax+rdx*2+0x4f8bff05]
   140041982:	add    eax,0x54e8aff
   140041987:	dec    DWORD PTR [rax-0x7800fab2]
   14004198d:	rex.WRB add rax,0x54c85ff
   140041993:	inc    DWORD PTR [rbx+rcx*2+0x4a83ff05]
   14004199a:	(bad)  
   14004199b:	jmp    FWORD PTR [rdi+0x41]
   14004199e:	(bad)  
   14004199f:	call   QWORD PTR [rsi+0x37]
   1400419a2:	sbb    bh,bh
   1400419a4:	push   rsi
   1400419a5:	(bad)  
   1400419a6:	sbb    bh,bh
   1400419a8:	gs cmp eax,0x467cff11
   1400419ae:	(bad)  
   1400419af:	(bad)  
   1400419b0:	jp     0x1400419f7
   1400419b2:	(bad)  
   1400419b3:	(bad)  
   1400419b4:	jns    0x1400419fa
   1400419b6:	(bad)  
   1400419b7:	(bad)  
   1400419b8:	js     0x1400419fd
   1400419ba:	(bad)  
   1400419bb:	push   QWORD PTR [rsi+0x43]
   1400419be:	(bad)  
   1400419bf:	push   QWORD PTR [rdx+rax*2+0x7]
   1400419c3:	push   QWORD PTR [rbx+0x41]
   1400419c6:	(bad)  
   1400419c7:	push   QWORD PTR [rdx+0x40]
   1400419ca:	or     bh,bh
   1400419cc:	jo     0x140041a0d
   1400419ce:	or     bh,bh
   1400419d0:	outs   dx,DWORD PTR ds:[rsi]
   1400419d1:	ds or  bh,bh
   1400419d4:	outs   dx,BYTE PTR ds:[rsi]
   1400419d5:	ds or  bh,bh
   1400419d8:	ins    BYTE PTR es:[rdi],dx
   1400419d9:	cmp    eax,0x3c6bff08
   1400419de:	or     bh,bh
   1400419e0:	imul   edi,DWORD PTR [rbx],0x3a68ff09
   1400419e6:	or     edi,edi
   1400419e8:	cmp    DWORD PTR [ecx],ecx
   1400419eb:	jmp    QWORD PTR [rsi+0x39]
   1400419ee:	or     edi,edi
   1400419f0:	cmp    WORD PTR [rcx],cx
   1400419f3:	jmp    QWORD PTR [rsi+0x39]
   1400419f6:	or     edi,edi
	...
   140041a10:	popf   
   140041a11:	pop    rdx
   140041a12:	add    edi,edi
   140041a14:	pushf  
   140041a15:	pop    rcx
   140041a16:	add    edi,edi
   140041a18:	fwait
   140041a19:	pop    rax
   140041a1a:	add    edi,edi
   140041a1c:	cdq    
   140041a1d:	push   rdi
   140041a1e:	add    edi,edi
   140041a20:	cwde   
   140041a21:	push   rdi
   140041a22:	add    edi,edi
   140041a24:	xchg   esi,eax
   140041a25:	push   rsi
   140041a26:	add    edi,edi
   140041a28:	xchg   ebp,eax
   140041a29:	push   rbp
   140041a2a:	add    al,0xff
   140041a2c:	xchg   esp,eax
   140041a2d:	push   rsp
   140041a2e:	add    al,0xff
   140041a30:	xchg   edx,eax
   140041a31:	push   rbx
   140041a32:	add    al,0xff
   140041a34:	xchg   ecx,eax
   140041a35:	push   rdx
   140041a36:	add    al,0xff
   140041a38:	(bad)  
   140041a39:	push   rdx
   140041a3a:	add    al,0xff
   140041a3c:	mov    ss,WORD PTR [rcx+0x4]
   140041a3f:	dec    DWORD PTR [rax+rdx*2+0x4f8bff05]
   140041a46:	add    eax,0x54e8aff
   140041a4b:	dec    DWORD PTR [rax-0x7800fab2]
   140041a51:	rex.WRB add rax,0x54c85ff
   140041a57:	push   QWORD PTR [rbx+0x44]
   140041a5a:	or     eax,0x193858ff
   140041a5f:	jmp    QWORD PTR [rsi-0x5900a079]
   140041a65:	xchg   DWORD PTR [rdi-0x1],ebx
   140041a68:	pop    rax
   140041a69:	cmp    BYTE PTR [rcx],bl
   140041a6b:	jmp    FWORD PTR [rdi+0x41]
   140041a6e:	or     eax,0x6467cff
   140041a73:	(bad)  
   140041a74:	jp     0x140041abb
   140041a76:	(bad)  
   140041a77:	(bad)  
   140041a78:	jns    0x140041abe
   140041a7a:	(bad)  
   140041a7b:	(bad)  
   140041a7c:	js     0x140041ac1
   140041a7e:	(bad)  
   140041a7f:	push   QWORD PTR [rsi+0x43]
   140041a82:	(bad)  
   140041a83:	push   QWORD PTR [rdx+rax*2+0x7]
   140041a87:	push   QWORD PTR [rbx+0x41]
   140041a8a:	(bad)  
   140041a8b:	push   QWORD PTR [rdx+0x40]
   140041a8e:	or     bh,bh
   140041a90:	jo     0x140041ad1
   140041a92:	or     bh,bh
   140041a94:	outs   dx,DWORD PTR ds:[rsi]
   140041a95:	ds or  bh,bh
   140041a98:	outs   dx,BYTE PTR ds:[rsi]
   140041a99:	ds or  bh,bh
   140041a9c:	ins    BYTE PTR es:[rdi],dx
   140041a9d:	cmp    eax,0x3c6bff08
   140041aa2:	or     bh,bh
   140041aa4:	imul   edi,DWORD PTR [rbx],0x3a68ff09
   140041aaa:	or     edi,edi
   140041aac:	cmp    DWORD PTR [ecx],ecx
   140041aaf:	jmp    QWORD PTR [rsi+0x39]
   140041ab2:	or     edi,edi
   140041ab4:	cmp    WORD PTR [rcx],cx
   140041ab7:	inc    DWORD PTR [rax]
	...
   140041acd:	add    BYTE PTR [rax],al
   140041acf:	add    BYTE PTR [rdi-0x6200fda5],bl
   140041ad5:	pop    rdx
   140041ad6:	add    edi,edi
   140041ad8:	pushf  
   140041ad9:	pop    rcx
   140041ada:	add    edi,edi
   140041adc:	fwait
   140041add:	pop    rax
   140041ade:	add    edi,edi
   140041ae0:	cdq    
   140041ae1:	push   rdi
   140041ae2:	add    edi,edi
   140041ae4:	cwde   
   140041ae5:	push   rdi
   140041ae6:	add    edi,edi
   140041ae8:	xchg   esi,eax
   140041ae9:	push   rsi
   140041aea:	add    edi,edi
   140041aec:	xchg   ebp,eax
   140041aed:	push   rbp
   140041aee:	add    al,0xff
   140041af0:	xchg   esp,eax
   140041af1:	push   rsp
   140041af2:	add    al,0xff
   140041af4:	xchg   edx,eax
   140041af5:	push   rbx
   140041af6:	add    al,0xff
   140041af8:	xchg   ecx,eax
   140041af9:	push   rdx
   140041afa:	add    al,0xff
   140041afc:	(bad)  
   140041afd:	push   rdx
   140041afe:	add    al,0xff
   140041b00:	mov    ss,WORD PTR [rcx+0x4]
   140041b03:	dec    DWORD PTR [rax+rdx*2+0x4f8bff05]
   140041b0a:	add    eax,0x54e8aff
   140041b0f:	dec    DWORD PTR [rax+0x7eff054e]
   140041b15:	or     r15,rdi
   140041b18:	pop    rcx
   140041b19:	cmp    bl,BYTE PTR [rdx]
   140041b1b:	jmp    QWORD PTR [rax-0x2800a57f]
   140041b21:	mov    ecx,0xb9d7ff8c
   140041b26:	mov    edi,?
   140041b28:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140041b29:	mov    DWORD PTR [rcx-0x1],esp
   140041b2c:	pop    rcx
   140041b2d:	cmp    bl,BYTE PTR [rdx]
   140041b2f:	push   QWORD PTR [rsp+rax*2+0xb]
   140041b33:	(bad)  
   140041b34:	jl     0x140041b7c
   140041b36:	(bad)  
   140041b37:	(bad)  
   140041b38:	jp     0x140041b7f
   140041b3a:	(bad)  
   140041b3b:	(bad)  
   140041b3c:	jns    0x140041b82
   140041b3e:	(bad)  
   140041b3f:	(bad)  
   140041b40:	js     0x140041b85
   140041b42:	(bad)  
   140041b43:	push   QWORD PTR [rsi+0x43]
   140041b46:	(bad)  
   140041b47:	push   QWORD PTR [rdx+rax*2+0x7]
   140041b4b:	push   QWORD PTR [rbx+0x41]
   140041b4e:	(bad)  
   140041b4f:	push   QWORD PTR [rdx+0x40]
   140041b52:	or     bh,bh
   140041b54:	jo     0x140041b95
   140041b56:	or     bh,bh
   140041b58:	outs   dx,DWORD PTR ds:[rsi]
   140041b59:	ds or  bh,bh
   140041b5c:	outs   dx,BYTE PTR ds:[rsi]
   140041b5d:	ds or  bh,bh
   140041b60:	ins    BYTE PTR es:[rdi],dx
   140041b61:	cmp    eax,0x3c6bff08
   140041b66:	or     bh,bh
   140041b68:	imul   edi,DWORD PTR [rbx],0x3a68ff09
   140041b6e:	or     edi,edi
   140041b70:	cmp    DWORD PTR [ecx],ecx
   140041b73:	jmp    QWORD PTR [rsi+0x39]
   140041b76:	or     edi,edi
	...
   140041b90:	movabs al,ds:0x9dff025b9fff025c
   140041b99:	pop    rdx
   140041b9a:	add    edi,edi
   140041b9c:	pushf  
   140041b9d:	pop    rcx
   140041b9e:	add    edi,edi
   140041ba0:	fwait
   140041ba1:	pop    rax
   140041ba2:	add    edi,edi
   140041ba4:	cdq    
   140041ba5:	push   rdi
   140041ba6:	add    edi,edi
   140041ba8:	cwde   
   140041ba9:	push   rdi
   140041baa:	add    edi,edi
   140041bac:	xchg   esi,eax
   140041bad:	push   rsi
   140041bae:	add    edi,edi
   140041bb0:	xchg   ebp,eax
   140041bb1:	push   rbp
   140041bb2:	add    al,0xff
   140041bb4:	xchg   esp,eax
   140041bb5:	push   rsp
   140041bb6:	add    al,0xff
   140041bb8:	xchg   edx,eax
   140041bb9:	push   rbx
   140041bba:	add    al,0xff
   140041bbc:	xchg   ecx,eax
   140041bbd:	push   rdx
   140041bbe:	add    al,0xff
   140041bc0:	(bad)  
   140041bc1:	push   rdx
   140041bc2:	add    al,0xff
   140041bc4:	mov    ss,WORD PTR [rcx+0x4]
   140041bc7:	dec    DWORD PTR [rax+rdx*2+0x4f8bff05]
   140041bce:	add    eax,0x94b81ff
   140041bd3:	call   FWORD PTR [rbp+0x3c]
   140041bd6:	sbb    bh,bh
   140041bd8:	mov    DWORD PTR [rbx+0x47],ebp
   140041bdb:	(bad)  
   140041bdc:	fdivr  DWORD PTR [rbx-0x44270071]
   140041be2:	(bad)  
   140041be3:	(bad)  
   140041be4:	fdivr  DWORD PTR [rbx-0x44270071]
   140041bea:	(bad)  
   140041beb:	call   FWORD PTR [rcx+0x5cff557b]
   140041bf1:	cmp    al,0x1a
   140041bf3:	push   QWORD PTR [rsi+0x45]
   140041bf6:	or     bh,bh
   140041bf8:	jl     0x140041c40
   140041bfa:	(bad)  
   140041bfb:	(bad)  
   140041bfc:	jp     0x140041c43
   140041bfe:	(bad)  
   140041bff:	(bad)  
   140041c00:	jns    0x140041c46
   140041c02:	(bad)  
   140041c03:	(bad)  
   140041c04:	js     0x140041c49
   140041c06:	(bad)  
   140041c07:	push   QWORD PTR [rsi+0x43]
   140041c0a:	(bad)  
   140041c0b:	push   QWORD PTR [rdx+rax*2+0x7]
   140041c0f:	push   QWORD PTR [rbx+0x41]
   140041c12:	(bad)  
   140041c13:	push   QWORD PTR [rdx+0x40]
   140041c16:	or     bh,bh
   140041c18:	jo     0x140041c59
   140041c1a:	or     bh,bh
   140041c1c:	outs   dx,DWORD PTR ds:[rsi]
   140041c1d:	ds or  bh,bh
   140041c20:	outs   dx,BYTE PTR ds:[rsi]
   140041c21:	ds or  bh,bh
   140041c24:	ins    BYTE PTR es:[rdi],dx
   140041c25:	cmp    eax,0x3c6bff08
   140041c2a:	or     bh,bh
   140041c2c:	imul   edi,DWORD PTR [rbx],0x3a68ff09
   140041c32:	or     edi,edi
   140041c34:	cmp    DWORD PTR [ecx],ecx
   140041c37:	inc    DWORD PTR [rax]
	...
   140041c4d:	add    BYTE PTR [rax],al
   140041c4f:	add    BYTE PTR [rcx-0x5f00fda3],ah
   140041c55:	pop    rsp
   140041c56:	add    bh,bh
   140041c58:	lahf   
   140041c59:	pop    rbx
   140041c5a:	add    bh,bh
   140041c5c:	popf   
   140041c5d:	pop    rdx
   140041c5e:	add    edi,edi
   140041c60:	pushf  
   140041c61:	pop    rcx
   140041c62:	add    edi,edi
   140041c64:	fwait
   140041c65:	pop    rax
   140041c66:	add    edi,edi
   140041c68:	cdq    
   140041c69:	push   rdi
   140041c6a:	add    edi,edi
   140041c6c:	cwde   
   140041c6d:	push   rdi
   140041c6e:	add    edi,edi
   140041c70:	xchg   esi,eax
   140041c71:	push   rsi
   140041c72:	add    edi,edi
   140041c74:	xchg   ebp,eax
   140041c75:	push   rbp
   140041c76:	add    al,0xff
   140041c78:	xchg   esp,eax
   140041c79:	push   rsp
   140041c7a:	add    al,0xff
   140041c7c:	xchg   edx,eax
   140041c7d:	push   rbx
   140041c7e:	add    al,0xff
   140041c80:	xchg   ecx,eax
   140041c81:	push   rdx
   140041c82:	add    al,0xff
   140041c84:	(bad)  
   140041c85:	push   rdx
   140041c86:	add    al,0xff
   140041c88:	mov    ss,WORD PTR [rcx+0x4]
   140041c8b:	dec    DWORD PTR [rcx+0x65ff064f]
   140041c91:	sbb    dil,dil
   140041c94:	mov    ebp,DWORD PTR [rbp+0x48]
   140041c97:	(bad)  
   140041c98:	fnstcw WORD PTR [rbp-0x4226006e]
   140041c9e:	xchg   edx,eax
   140041c9f:	(bad)  
   140041ca0:	fnstcw WORD PTR [rbp-0x4226006e]
   140041ca6:	xchg   edx,eax
   140041ca7:	(bad)  
   140041ca8:	fnstcw WORD PTR [rbp-0x4226006e]
   140041cae:	xchg   edx,eax
   140041caf:	dec    DWORD PTR [rbx+0x60ff486d]
   140041cb5:	ds sbb edi,edi
   140041cb8:	jnp    0x140041d00
   140041cba:	(bad)  
   140041cbb:	(bad)  
   140041cbc:	jl     0x140041d04
   140041cbe:	(bad)  
   140041cbf:	(bad)  
   140041cc0:	jp     0x140041d07
   140041cc2:	(bad)  
   140041cc3:	(bad)  
   140041cc4:	jns    0x140041d0a
   140041cc6:	(bad)  
   140041cc7:	(bad)  
   140041cc8:	js     0x140041d0d
   140041cca:	(bad)  
   140041ccb:	push   QWORD PTR [rsi+0x43]
   140041cce:	(bad)  
   140041ccf:	push   QWORD PTR [rdx+rax*2+0x7]
   140041cd3:	push   QWORD PTR [rbx+0x41]
   140041cd6:	(bad)  
   140041cd7:	push   QWORD PTR [rdx+0x40]
   140041cda:	or     bh,bh
   140041cdc:	jo     0x140041d1d
   140041cde:	or     bh,bh
   140041ce0:	outs   dx,DWORD PTR ds:[rsi]
   140041ce1:	ds or  bh,bh
   140041ce4:	outs   dx,BYTE PTR ds:[rsi]
   140041ce5:	ds or  bh,bh
   140041ce8:	ins    BYTE PTR es:[rdi],dx
   140041ce9:	cmp    eax,0x3c6bff08
   140041cee:	or     bh,bh
   140041cf0:	imul   edi,DWORD PTR [rbx],0x3a68ff09
   140041cf6:	or     edi,edi
	...
   140041d10:	movabs ds:0xa0ff025da1ff025d,eax
   140041d19:	pop    rsp
   140041d1a:	add    bh,bh
   140041d1c:	lahf   
   140041d1d:	pop    rbx
   140041d1e:	add    bh,bh
   140041d20:	popf   
   140041d21:	pop    rdx
   140041d22:	add    edi,edi
   140041d24:	pushf  
   140041d25:	pop    rcx
   140041d26:	add    edi,edi
   140041d28:	fwait
   140041d29:	pop    rax
   140041d2a:	add    edi,edi
   140041d2c:	cdq    
   140041d2d:	push   rdi
   140041d2e:	add    edi,edi
   140041d30:	cwde   
   140041d31:	push   rdi
   140041d32:	add    edi,edi
   140041d34:	xchg   esi,eax
   140041d35:	push   rsi
   140041d36:	add    edi,edi
   140041d38:	xchg   ebp,eax
   140041d39:	push   rbp
   140041d3a:	add    al,0xff
   140041d3c:	xchg   esp,eax
   140041d3d:	push   rsp
   140041d3e:	add    al,0xff
   140041d40:	xchg   edx,eax
   140041d41:	push   rbx
   140041d42:	add    al,0xff
   140041d44:	xchg   ecx,eax
   140041d45:	push   rdx
   140041d46:	add    al,0xff
   140041d48:	(bad)  
   140041d49:	push   rdx
   140041d4a:	add    al,0xff
   140041d4c:	data16 sbb r15b,dil
   140041d50:	test   BYTE PTR [rsi+0x43],ah
   140041d53:	(bad)  
   140041d54:	fstp   TBYTE PTR [rdi-0x4024006b]
   140041d5a:	xchg   ebp,eax
   140041d5b:	(bad)  
   140041d5c:	fstp   TBYTE PTR [rdi-0x4024006b]
   140041d62:	xchg   ebp,eax
   140041d63:	(bad)  
   140041d64:	fstp   TBYTE PTR [rdi-0x4024006b]
   140041d6a:	xchg   ebp,eax
   140041d6b:	(bad)  
   140041d6c:	fstp   TBYTE PTR [rdi-0x4024006b]
   140041d72:	xchg   ebp,eax
   140041d73:	dec    DWORD PTR [rsi+rbp*2+0x3f63ff4a]
   140041d7a:	sbb    edi,edi
   140041d7c:	jnp    0x140041dc4
   140041d7e:	(bad)  
   140041d7f:	(bad)  
   140041d80:	jl     0x140041dc8
   140041d82:	(bad)  
   140041d83:	(bad)  
   140041d84:	jp     0x140041dcb
   140041d86:	(bad)  
   140041d87:	(bad)  
   140041d88:	jns    0x140041dce
   140041d8a:	(bad)  
   140041d8b:	(bad)  
   140041d8c:	js     0x140041dd1
   140041d8e:	(bad)  
   140041d8f:	push   QWORD PTR [rsi+0x43]
   140041d92:	(bad)  
   140041d93:	push   QWORD PTR [rdx+rax*2+0x7]
   140041d97:	push   QWORD PTR [rbx+0x41]
   140041d9a:	(bad)  
   140041d9b:	push   QWORD PTR [rdx+0x40]
   140041d9e:	or     bh,bh
   140041da0:	jo     0x140041de1
   140041da2:	or     bh,bh
   140041da4:	outs   dx,DWORD PTR ds:[rsi]
   140041da5:	ds or  bh,bh
   140041da8:	outs   dx,BYTE PTR ds:[rsi]
   140041da9:	ds or  bh,bh
   140041dac:	ins    BYTE PTR es:[rdi],dx
   140041dad:	cmp    eax,0x3c6bff08
   140041db2:	or     bh,bh
   140041db4:	imul   edi,DWORD PTR [rbx],0xff09
	...
   140041dce:	add    BYTE PTR [rax],al
   140041dd0:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140041dd1:	pop    rsi
   140041dd2:	add    bh,bh
   140041dd4:	movabs ds:0xa0ff025da1ff025d,eax
   140041ddd:	pop    rsp
   140041dde:	add    bh,bh
   140041de0:	lahf   
   140041de1:	pop    rbx
   140041de2:	add    bh,bh
   140041de4:	popf   
   140041de5:	pop    rdx
   140041de6:	add    edi,edi
   140041de8:	pushf  
   140041de9:	pop    rcx
   140041dea:	add    edi,edi
   140041dec:	fwait
   140041ded:	pop    rax
   140041dee:	add    edi,edi
   140041df0:	cdq    
   140041df1:	push   rdi
   140041df2:	add    edi,edi
   140041df4:	cwde   
   140041df5:	push   rdi
   140041df6:	add    edi,edi
   140041df8:	xchg   esi,eax
   140041df9:	push   rsi
   140041dfa:	add    edi,edi
   140041dfc:	xchg   ebp,eax
   140041dfd:	push   rbp
   140041dfe:	add    al,0xff
   140041e00:	xchg   esp,eax
   140041e01:	push   rsp
   140041e02:	add    al,0xff
   140041e04:	xchg   edx,eax
   140041e05:	push   rbx
   140041e06:	add    al,0xff
   140041e08:	jno    0x140041e50
   140041e0a:	adc    eax,0x355776ff
   140041e0f:	call   rsp
   140041e11:	mov    ecx,0xc1dcff90
   140041e16:	cwde   
   140041e17:	(bad)  
   140041e18:	fadd   st(1),st
   140041e1a:	cwde   
   140041e1b:	(bad)  
   140041e1c:	fadd   st(1),st
   140041e1e:	cwde   
   140041e1f:	(bad)  
   140041e20:	fadd   st(1),st
   140041e22:	cwde   
   140041e23:	(bad)  
   140041e24:	fadd   st(1),st
   140041e26:	cwde   
   140041e27:	(bad)  
   140041e28:	fadd   st(1),st
   140041e2a:	cwde   
   140041e2b:	(bad)  
   140041e2c:	fadd   st(1),st
   140041e2e:	cwde   
   140041e2f:	(bad)  
   140041e30:	fadd   st(1),st
   140041e32:	cwde   
   140041e33:	(bad)  
   140041e34:	fadd   st(1),st
   140041e36:	cwde   
   140041e37:	push   QWORD PTR [rsi+0x57]
   140041e3a:	xor    eax,0x15426aff
   140041e3f:	(bad)  
   140041e40:	jge    0x140041e89
   140041e42:	(bad)  
   140041e43:	(bad)  
   140041e44:	jl     0x140041e8c
   140041e46:	(bad)  
   140041e47:	(bad)  
   140041e48:	jp     0x140041e8f
   140041e4a:	(bad)  
   140041e4b:	(bad)  
   140041e4c:	jns    0x140041e92
   140041e4e:	(bad)  
   140041e4f:	(bad)  
   140041e50:	js     0x140041e95
   140041e52:	(bad)  
   140041e53:	push   QWORD PTR [rsi+0x43]
   140041e56:	(bad)  
   140041e57:	push   QWORD PTR [rdx+rax*2+0x7]
   140041e5b:	push   QWORD PTR [rbx+0x41]
   140041e5e:	(bad)  
   140041e5f:	push   QWORD PTR [rdx+0x40]
   140041e62:	or     bh,bh
   140041e64:	jo     0x140041ea5
   140041e66:	or     bh,bh
   140041e68:	outs   dx,DWORD PTR ds:[rsi]
   140041e69:	ds or  bh,bh
   140041e6c:	outs   dx,BYTE PTR ds:[rsi]
   140041e6d:	ds or  bh,bh
   140041e70:	ins    BYTE PTR es:[rdi],dx
   140041e71:	cmp    eax,0x3c6bff08
   140041e76:	or     bh,bh
	...
   140041e90:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140041e91:	pop    rdi
   140041e92:	add    bh,bh
   140041e94:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140041e95:	pop    rsi
   140041e96:	add    bh,bh
   140041e98:	movabs ds:0xa0ff025da1ff025d,eax
   140041ea1:	pop    rsp
   140041ea2:	add    bh,bh
   140041ea4:	lahf   
   140041ea5:	pop    rbx
   140041ea6:	add    bh,bh
   140041ea8:	popf   
   140041ea9:	pop    rdx
   140041eaa:	add    edi,edi
   140041eac:	pushf  
   140041ead:	pop    rcx
   140041eae:	add    edi,edi
   140041eb0:	fwait
   140041eb1:	pop    rax
   140041eb2:	add    edi,edi
   140041eb4:	cdq    
   140041eb5:	push   rdi
   140041eb6:	add    edi,edi
   140041eb8:	cwde   
   140041eb9:	push   rdi
   140041eba:	add    edi,edi
   140041ebc:	xchg   esi,eax
   140041ebd:	push   rsi
   140041ebe:	add    edi,edi
   140041ec0:	xchg   ebp,eax
   140041ec1:	push   rbp
   140041ec2:	add    al,0xff
   140041ec4:	jp     0x140041f10
   140041ec6:	adc    bh,bh
   140041ec8:	ja     0x140041f23
   140041eca:	(bad)  
   140041ecb:	call   rsi
   140041ecd:	mov    ebx,0xc3deff93
   140041ed2:	fwait
   140041ed3:	(bad)  
   140041ed4:	faddp  st(3),st
   140041ed6:	fwait
   140041ed7:	(bad)  
   140041ed8:	faddp  st(3),st
   140041eda:	fwait
   140041edb:	(bad)  
   140041edc:	faddp  st(3),st
   140041ede:	fwait
   140041edf:	(bad)  
   140041ee0:	faddp  st(3),st
   140041ee2:	fwait
   140041ee3:	(bad)  
   140041ee4:	faddp  st(3),st
   140041ee6:	fwait
   140041ee7:	(bad)  
   140041ee8:	faddp  st(3),st
   140041eea:	fwait
   140041eeb:	(bad)  
   140041eec:	faddp  st(3),st
   140041eee:	fwait
   140041eef:	(bad)  
   140041ef0:	faddp  st(3),st
   140041ef2:	fwait
   140041ef3:	(bad)  
   140041ef4:	faddp  st(3),st
   140041ef6:	fwait
   140041ef7:	call   rsi
   140041ef9:	mov    ebx,0x5977ff93
   140041efe:	(bad)  
   140041eff:	jmp    FWORD PTR [rbp+0x43]
   140041f02:	adc    al,0xff
   140041f04:	jge    0x140041f4d
   140041f06:	(bad)  
   140041f07:	(bad)  
   140041f08:	jl     0x140041f50
   140041f0a:	(bad)  
   140041f0b:	(bad)  
   140041f0c:	jp     0x140041f53
   140041f0e:	(bad)  
   140041f0f:	(bad)  
   140041f10:	jns    0x140041f56
   140041f12:	(bad)  
   140041f13:	(bad)  
   140041f14:	js     0x140041f59
   140041f16:	(bad)  
   140041f17:	push   QWORD PTR [rsi+0x43]
   140041f1a:	(bad)  
   140041f1b:	push   QWORD PTR [rdx+rax*2+0x7]
   140041f1f:	push   QWORD PTR [rbx+0x41]
   140041f22:	(bad)  
   140041f23:	push   QWORD PTR [rdx+0x40]
   140041f26:	or     bh,bh
   140041f28:	jo     0x140041f69
   140041f2a:	or     bh,bh
   140041f2c:	outs   dx,DWORD PTR ds:[rsi]
   140041f2d:	ds or  bh,bh
   140041f30:	outs   dx,BYTE PTR ds:[rsi]
   140041f31:	ds or  bh,bh
   140041f34:	ins    BYTE PTR es:[rdi],dx
   140041f35:	cmp    eax,0xff08
	...
   140041f4e:	add    BYTE PTR [rax],al
   140041f50:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140041f51:	(bad)  
   140041f52:	add    edi,edi
   140041f54:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140041f55:	pop    rdi
   140041f56:	add    bh,bh
   140041f58:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140041f59:	pop    rsi
   140041f5a:	add    bh,bh
   140041f5c:	movabs ds:0xa0ff025da1ff025d,eax
   140041f65:	pop    rsp
   140041f66:	add    bh,bh
   140041f68:	lahf   
   140041f69:	pop    rbx
   140041f6a:	add    bh,bh
   140041f6c:	popf   
   140041f6d:	pop    rdx
   140041f6e:	add    edi,edi
   140041f70:	pushf  
   140041f71:	pop    rcx
   140041f72:	add    edi,edi
   140041f74:	fwait
   140041f75:	pop    rax
   140041f76:	add    edi,edi
   140041f78:	cdq    
   140041f79:	push   rdi
   140041f7a:	add    edi,edi
   140041f7c:	cwde   
   140041f7d:	push   rdi
   140041f7e:	add    edi,edi
   140041f80:	(bad)  
   140041f81:	rex.WRX (bad) 
   140041f83:	push   QWORD PTR [rcx+0x52]
   140041f86:	xor    bh,bh
   140041f88:	xlat   BYTE PTR ds:[rbx]
   140041f89:	mov    ebp,0xc6dfff96
   140041f8e:	sahf   
   140041f8f:	(bad)  
   140041f90:	ffreep st(6)
   140041f92:	sahf   
   140041f93:	(bad)  
   140041f94:	ffreep st(6)
   140041f96:	sahf   
   140041f97:	(bad)  
   140041f98:	ffreep st(6)
   140041f9a:	sahf   
   140041f9b:	(bad)  
   140041f9c:	ffreep st(6)
   140041f9e:	sahf   
   140041f9f:	(bad)  
   140041fa0:	ffreep st(6)
   140041fa2:	sahf   
   140041fa3:	(bad)  
   140041fa4:	ffreep st(6)
   140041fa6:	sahf   
   140041fa7:	(bad)  
   140041fa8:	ffreep st(6)
   140041faa:	sahf   
   140041fab:	(bad)  
   140041fac:	ffreep st(6)
   140041fae:	sahf   
   140041faf:	(bad)  
   140041fb0:	ffreep st(6)
   140041fb2:	sahf   
   140041fb3:	(bad)  
   140041fb4:	ffreep st(6)
   140041fb6:	sahf   
   140041fb7:	(bad)  
   140041fb8:	ffreep st(6)
   140041fba:	sahf   
   140041fbb:	call   rdi
   140041fbd:	mov    ebp,0x5a78ff96
   140041fc2:	cmp    bh,bh
   140041fc4:	jae    0x14004200b
   140041fc6:	adc    bh,bh
   140041fc8:	jge    0x140042011
   140041fca:	(bad)  
   140041fcb:	(bad)  
   140041fcc:	jl     0x140042014
   140041fce:	(bad)  
   140041fcf:	(bad)  
   140041fd0:	jp     0x140042017
   140041fd2:	(bad)  
   140041fd3:	(bad)  
   140041fd4:	jns    0x14004201a
   140041fd6:	(bad)  
   140041fd7:	(bad)  
   140041fd8:	js     0x14004201d
   140041fda:	(bad)  
   140041fdb:	push   QWORD PTR [rsi+0x43]
   140041fde:	(bad)  
   140041fdf:	push   QWORD PTR [rdx+rax*2+0x7]
   140041fe3:	push   QWORD PTR [rbx+0x41]
   140041fe6:	(bad)  
   140041fe7:	push   QWORD PTR [rdx+0x40]
   140041fea:	or     bh,bh
   140041fec:	jo     0x14004202d
   140041fee:	or     bh,bh
   140041ff0:	outs   dx,DWORD PTR ds:[rsi]
   140041ff1:	ds or  bh,bh
   140041ff4:	outs   dx,BYTE PTR ds:[rsi]
   140041ff5:	ds or  bh,bh
	...
   140042010:	test   eax,0xa7ff0161
   140042015:	(bad)  
   140042016:	add    edi,edi
   140042018:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140042019:	pop    rdi
   14004201a:	add    bh,bh
   14004201c:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004201d:	pop    rsi
   14004201e:	add    bh,bh
   140042020:	movabs ds:0xa0ff025da1ff025d,eax
   140042029:	pop    rsp
   14004202a:	add    bh,bh
   14004202c:	lahf   
   14004202d:	pop    rbx
   14004202e:	add    bh,bh
   140042030:	popf   
   140042031:	pop    rdx
   140042032:	add    edi,edi
   140042034:	pushf  
   140042035:	pop    rcx
   140042036:	add    edi,edi
   140042038:	fwait
   140042039:	pop    rax
   14004203a:	add    edi,edi
   14004203c:	(bad)  
   14004203d:	push   rsp
   14004203e:	or     edi,edi
   140042040:	push   0x4b
   140042042:	sub    edi,edi
   140042044:	leave  
   140042045:	scas   eax,DWORD PTR es:[rdi]
   140042046:	mov    edi,edi
   140042048:	loopne 0x140042012
   14004204a:	movabs eax,ds:0xa1c8e0ffa1c8e0ff
   140042053:	jmp    rax
   140042055:	enter  0xffa1,0xe0
   140042059:	enter  0xffa1,0xe0
   14004205d:	enter  0xffa1,0xe0
   140042061:	enter  0xffa1,0xe0
   140042065:	enter  0xffa1,0xe0
   140042069:	enter  0xffa1,0xe0
   14004206d:	enter  0xffa1,0xe0
   140042071:	enter  0xffa1,0xe0
   140042075:	enter  0xffa1,0xe0
   140042079:	enter  0xffa1,0xe0
   14004207d:	enter  0xffa1,0xc9
   140042081:	scas   eax,DWORD PTR es:[rdi]
   140042082:	mov    edi,edi
   140042084:	push   0x4b
   140042086:	sub    edi,edi
   140042088:	ja     0x1400420d0
   14004208a:	or     eax,0x6477dff
   14004208f:	(bad)  
   140042090:	jl     0x1400420d8
   140042092:	(bad)  
   140042093:	(bad)  
   140042094:	jp     0x1400420db
   140042096:	(bad)  
   140042097:	(bad)  
   140042098:	jns    0x1400420de
   14004209a:	(bad)  
   14004209b:	(bad)  
   14004209c:	js     0x1400420e1
   14004209e:	(bad)  
   14004209f:	push   QWORD PTR [rsi+0x43]
   1400420a2:	(bad)  
   1400420a3:	push   QWORD PTR [rdx+rax*2+0x7]
   1400420a7:	push   QWORD PTR [rbx+0x41]
   1400420aa:	(bad)  
   1400420ab:	push   QWORD PTR [rdx+0x40]
   1400420ae:	or     bh,bh
   1400420b0:	jo     0x1400420f1
   1400420b2:	or     bh,bh
   1400420b4:	outs   dx,DWORD PTR ds:[rsi]
   1400420b5:	ds or  bh,bh
	...
   1400420d0:	stos   BYTE PTR es:[rdi],al
   1400420d1:	(bad)  {k1}{z}
   1400420d6:	add    edi,edi
   1400420d8:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400420d9:	(bad)  
   1400420da:	add    edi,edi
   1400420dc:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400420dd:	pop    rdi
   1400420de:	add    bh,bh
   1400420e0:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400420e1:	pop    rsi
   1400420e2:	add    bh,bh
   1400420e4:	movabs ds:0xa0ff025da1ff025d,eax
   1400420ed:	pop    rsp
   1400420ee:	add    bh,bh
   1400420f0:	lahf   
   1400420f1:	pop    rbx
   1400420f2:	add    bh,bh
   1400420f4:	popf   
   1400420f5:	pop    rdx
   1400420f6:	add    edi,edi
   1400420f8:	xchg   ecx,eax
   1400420f9:	push   rbp
   1400420fa:	or     edi,edi
   1400420fc:	outs   dx,DWORD PTR ds:[rsi]
   1400420fd:	rex.WRX sub dil,r15b
   140042100:	retf   0x8cb1
   140042103:	jmp    rdx
   140042105:	retf   0xffa4
   140042108:	loop   0x1400420d4
   14004210a:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004210b:	jmp    rdx
   14004210d:	retf   0xffa4
   140042110:	loop   0x1400420dc
   140042112:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140042113:	jmp    rdx
   140042115:	retf   0xffa4
   140042118:	loop   0x1400420e4
   14004211a:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004211b:	jmp    rdx
   14004211d:	retf   0xffa4
   140042120:	loop   0x1400420ec
   140042122:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140042123:	jmp    rdx
   140042125:	retf   0xffa4
   140042128:	loop   0x1400420f4
   14004212a:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004212b:	jmp    rdx
   14004212d:	retf   0xffa4
   140042130:	loop   0x1400420fc
   140042132:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140042133:	jmp    rdx
   140042135:	retf   0xffa4
   140042138:	loop   0x140042104
   14004213a:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004213b:	jmp    rdx
   14004213d:	retf   0xffa4
   140042140:	loop   0x14004210c
   140042142:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140042143:	dec    edx
   140042145:	mov    cl,0x8c
   140042147:	jmp    FWORD PTR [rbp+0x4d]
   14004214a:	sub    edi,edi
   14004214c:	jns    0x140042195
   14004214e:	or     edi,edi
   140042150:	jge    0x140042199
   140042152:	(bad)  
   140042153:	(bad)  
   140042154:	jl     0x14004219c
   140042156:	(bad)  
   140042157:	(bad)  
   140042158:	jp     0x14004219f
   14004215a:	(bad)  
   14004215b:	(bad)  
   14004215c:	jns    0x1400421a2
   14004215e:	(bad)  
   14004215f:	(bad)  
   140042160:	js     0x1400421a5
   140042162:	(bad)  
   140042163:	push   QWORD PTR [rsi+0x43]
   140042166:	(bad)  
   140042167:	push   QWORD PTR [rdx+rax*2+0x7]
   14004216b:	push   QWORD PTR [rbx+0x41]
   14004216e:	(bad)  
   14004216f:	push   QWORD PTR [rdx+0x40]
   140042172:	or     bh,bh
   140042174:	jo     0x1400421b5
   140042176:	or     bh,bh
	...
   140042190:	stos   DWORD PTR es:[rdi],eax
   140042191:	(bad)  {k2}{z}
   140042196:	add    edi,edi
   140042198:	test   eax,0xa7ff0161
   14004219d:	(bad)  
   14004219e:	add    edi,edi
   1400421a0:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400421a1:	pop    rdi
   1400421a2:	add    bh,bh
   1400421a4:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400421a5:	pop    rsi
   1400421a6:	add    bh,bh
   1400421a8:	movabs ds:0xa0ff025da1ff025d,eax
   1400421b1:	pop    rsp
   1400421b2:	add    bh,bh
   1400421b4:	fwait
   1400421b5:	pop    rdx
   1400421b6:	add    al,0xff
   1400421b8:	outs   dx,DWORD PTR ds:[rsi]
   1400421b9:	rex.WB sbb rax,0xffffffff8eb2ccff
   1400421bf:	jmp    rbx
   1400421c1:	int3   
   1400421c2:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400421c3:	jmp    rbx
   1400421c5:	int3   
   1400421c6:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400421c7:	jmp    rbx
   1400421c9:	int3   
   1400421ca:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400421cb:	jmp    rbx
   1400421cd:	int3   
   1400421ce:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400421cf:	jmp    rbx
   1400421d1:	int3   
   1400421d2:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400421d3:	jmp    rbx
   1400421d5:	int3   
   1400421d6:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400421d7:	jmp    rbx
   1400421d9:	int3   
   1400421da:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400421db:	jmp    rbx
   1400421dd:	int3   
   1400421de:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400421df:	jmp    rbx
   1400421e1:	int3   
   1400421e2:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400421e3:	jmp    rbx
   1400421e5:	int3   
   1400421e6:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400421e7:	jmp    rbx
   1400421e9:	int3   
   1400421ea:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400421eb:	jmp    rbx
   1400421ed:	int3   
   1400421ee:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400421ef:	jmp    rbx
   1400421f1:	int3   
   1400421f2:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400421f3:	jmp    rbx
   1400421f5:	int3   
   1400421f6:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400421f7:	jmp    rbx
   1400421f9:	int3   
   1400421fa:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400421fb:	jmp    rbx
   1400421fd:	int3   
   1400421fe:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400421ff:	jmp    rbx
   140042201:	int3   
   140042202:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140042203:	jmp    rbx
   140042205:	int3   
   140042206:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140042207:	dec    esp
   140042209:	mov    dl,0x8e
   14004220b:	jmp    FWORD PTR [rax+0x46]
   14004220e:	and    bh,bh
   140042210:	jge    0x14004225a
   140042212:	or     bh,bh
   140042214:	jge    0x14004225d
   140042216:	(bad)  
   140042217:	(bad)  
   140042218:	jl     0x140042260
   14004221a:	(bad)  
   14004221b:	(bad)  
   14004221c:	jp     0x140042263
   14004221e:	(bad)  
   14004221f:	(bad)  
   140042220:	jns    0x140042266
   140042222:	(bad)  
   140042223:	(bad)  
   140042224:	js     0x140042269
   140042226:	(bad)  
   140042227:	push   QWORD PTR [rsi+0x43]
   14004222a:	(bad)  
   14004222b:	push   QWORD PTR [rdx+rax*2+0x7]
   14004222f:	push   QWORD PTR [rbx+0x41]
   140042232:	(bad)  
   140042233:	push   QWORD PTR [rdx+0x40]
   140042236:	or     bh,bh
	...
   140042250:	lods   eax,DWORD PTR ds:[rsi]
   140042251:	movsxd eax,DWORD PTR [rcx]
   140042253:	jmp    FWORD PTR [rbx-0x5500fe9e]
   140042259:	(bad)  {k1}{z}
   14004225e:	add    edi,edi
   140042260:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140042261:	(bad)  
   140042262:	add    edi,edi
   140042264:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140042265:	pop    rdi
   140042266:	add    bh,bh
   140042268:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140042269:	pop    rsi
   14004226a:	add    bh,bh
   14004226c:	movabs ds:0x71ff025da1ff025d,eax
   140042275:	rex.WXB (bad) 
   140042277:	jmp    QWORD PTR [rsi+0x47]
   14004227a:	and    al,0xff
   14004227c:	data16 rex.RXB and al,0xff
   140042280:	data16 rex.RXB and al,0xff
   140042284:	data16 rex.RXB and al,0xff
   140042288:	data16 rex.RXB and al,0xff
   14004228c:	data16 rex.RXB and al,0xff
   140042290:	in     eax,0xce
   140042292:	stos   BYTE PTR es:[rdi],al
   140042293:	jmp    rbp
   140042295:	(bad)  
   140042296:	stos   BYTE PTR es:[rdi],al
   140042297:	jmp    rbp
   140042299:	(bad)  
   14004229a:	stos   BYTE PTR es:[rdi],al
   14004229b:	jmp    rbp
   14004229d:	(bad)  
   14004229e:	stos   BYTE PTR es:[rdi],al
   14004229f:	jmp    rbp
   1400422a1:	(bad)  
   1400422a2:	stos   BYTE PTR es:[rdi],al
   1400422a3:	jmp    rbp
   1400422a5:	(bad)  
   1400422a6:	stos   BYTE PTR es:[rdi],al
   1400422a7:	jmp    rbp
   1400422a9:	(bad)  
   1400422aa:	stos   BYTE PTR es:[rdi],al
   1400422ab:	jmp    rbp
   1400422ad:	(bad)  
   1400422ae:	stos   BYTE PTR es:[rdi],al
   1400422af:	jmp    rbp
   1400422b1:	(bad)  
   1400422b2:	stos   BYTE PTR es:[rdi],al
   1400422b3:	jmp    rbp
   1400422b5:	(bad)  
   1400422b6:	stos   BYTE PTR es:[rdi],al
   1400422b7:	jmp    QWORD PTR [rsi+0x47]
   1400422ba:	and    al,0xff
   1400422bc:	data16 rex.RXB and al,0xff
   1400422c0:	data16 rex.RXB and al,0xff
   1400422c4:	data16 rex.RXB and al,0xff
   1400422c8:	data16 rex.RXB and al,0xff
   1400422cc:	data16 rex.RXB and al,0xff
   1400422d0:	imul   eax,DWORD PTR [rdi+0x1f],0xffffffff
   1400422d4:	jle    0x14004231e
   1400422d6:	(bad)  
   1400422d7:	(bad)  
   1400422d8:	jge    0x140042321
   1400422da:	(bad)  
   1400422db:	(bad)  
   1400422dc:	jl     0x140042324
   1400422de:	(bad)  
   1400422df:	(bad)  
   1400422e0:	jp     0x140042327
   1400422e2:	(bad)  
   1400422e3:	(bad)  
   1400422e4:	jns    0x14004232a
   1400422e6:	(bad)  
   1400422e7:	(bad)  
   1400422e8:	js     0x14004232d
   1400422ea:	(bad)  
   1400422eb:	push   QWORD PTR [rsi+0x43]
   1400422ee:	(bad)  
   1400422ef:	push   QWORD PTR [rdx+rax*2+0x7]
   1400422f3:	push   QWORD PTR [rbx+0x41]
   1400422f6:	(bad)  
   1400422f7:	inc    DWORD PTR [rax]
	...
   14004230d:	add    BYTE PTR [rax],al
   14004230f:	add    BYTE PTR [rsi-0x5200fe9c],ch
   140042315:	movsxd eax,DWORD PTR [rcx]
   140042317:	jmp    FWORD PTR [rbx-0x5500fe9e]
   14004231d:	(bad)  {k1}{z}
   140042322:	add    edi,edi
   140042324:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140042325:	(bad)  
   140042326:	add    edi,edi
   140042328:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140042329:	pop    rdi
   14004232a:	add    bh,bh
   14004232c:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004232d:	pop    rsi
   14004232e:	add    bh,bh
   140042330:	movabs ds:0xa0ff025da1ff025d,eax
   140042339:	pop    rsp
   14004233a:	add    bh,bh
   14004233c:	lahf   
   14004233d:	pop    rbx
   14004233e:	add    bh,bh
   140042340:	popf   
   140042341:	pop    rdx
   140042342:	add    edi,edi
   140042344:	pushf  
   140042345:	pop    rcx
   140042346:	add    edi,edi
   140042348:	fwait
   140042349:	pop    rax
   14004234a:	add    edi,edi
   14004234c:	push   0xffffffffe6ff2548
   140042351:	shr    BYTE PTR [rbp-0x522f1901],1
   140042357:	jmp    rsi
   140042359:	shr    BYTE PTR [rbp-0x522f1901],1
   14004235f:	jmp    rsi
   140042361:	shr    BYTE PTR [rbp-0x522f1901],1
   140042367:	jmp    rsi
   140042369:	shr    BYTE PTR [rbp-0x522f1901],1
   14004236f:	jmp    rsi
   140042371:	shr    BYTE PTR [rbp-0x522f1901],1
   140042377:	jmp    FWORD PTR [rax+0x48]
   14004237a:	and    eax,0x54e88ff
   14004237f:	inc    DWORD PTR [rdi-0x7a00fab3]
   140042385:	rex.WR add rax,0x54b84ff
   14004238b:	inc    DWORD PTR [rbx-0x7e00f9b6]
   140042391:	rex.WB (bad) 
   140042393:	inc    DWORD PTR [rax+0x7eff0649]
   140042399:	rex.W (bad) 
   14004239b:	(bad)  
   14004239c:	jge    0x1400423e5
   14004239e:	(bad)  
   14004239f:	(bad)  
   1400423a0:	jl     0x1400423e8
   1400423a2:	(bad)  
   1400423a3:	(bad)  
   1400423a4:	jp     0x1400423eb
   1400423a6:	(bad)  
   1400423a7:	(bad)  
   1400423a8:	jns    0x1400423ee
   1400423aa:	(bad)  
   1400423ab:	(bad)  
   1400423ac:	js     0x1400423f1
   1400423ae:	(bad)  
   1400423af:	push   QWORD PTR [rsi+0x43]
   1400423b2:	(bad)  
   1400423b3:	push   QWORD PTR [rdx+rax*2+0x7]
   1400423b7:	inc    DWORD PTR [rax]
	...
   1400423cd:	add    BYTE PTR [rax],al
   1400423cf:	add    BYTE PTR [rax-0x5100ff9b],dh
   1400423d5:	fs add edi,edi
   1400423d8:	lods   eax,DWORD PTR ds:[rsi]
   1400423d9:	movsxd eax,DWORD PTR [rcx]
   1400423db:	jmp    FWORD PTR [rbx-0x5500fe9e]
   1400423e1:	(bad)  {k1}{z}
   1400423e6:	add    edi,edi
   1400423e8:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400423e9:	(bad)  
   1400423ea:	add    edi,edi
   1400423ec:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400423ed:	pop    rdi
   1400423ee:	add    bh,bh
   1400423f0:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400423f1:	pop    rsi
   1400423f2:	add    bh,bh
   1400423f4:	movabs ds:0xa0ff025da1ff025d,eax
   1400423fd:	pop    rsp
   1400423fe:	add    bh,bh
   140042400:	lahf   
   140042401:	pop    rbx
   140042402:	add    bh,bh
   140042404:	popf   
   140042405:	pop    rdx
   140042406:	add    edi,edi
   140042408:	pushf  
   140042409:	pop    rcx
   14004240a:	add    edi,edi
   14004240c:	imul   ecx,DWORD PTR [rdx+0x26],0xb0d2e7ff
   140042413:	jmp    rdi
   140042415:	shl    BYTE PTR [rax-0x4f2d1801],cl
   14004241b:	jmp    rdi
   14004241d:	shl    BYTE PTR [rax-0x4f2d1801],cl
   140042423:	jmp    rdi
   140042425:	shl    BYTE PTR [rax-0x4f2d1801],cl
   14004242b:	jmp    rdi
   14004242d:	shl    BYTE PTR [rax-0x4f2d1801],cl
   140042433:	jmp    rdi
   140042435:	shl    BYTE PTR [rax+0x264a69ff],cl
   14004243b:	dec    DWORD PTR [rdx-0x7700fab2]
   140042441:	rex.WRX add rax,0x54d87ff
   140042447:	inc    DWORD PTR [rbp-0x7b00fab4]
   14004244d:	rex.WXB add rax,0x64a83ff
   140042453:	inc    DWORD PTR [rcx-0x7f00f9b7]
   140042459:	rex.WB (bad) 
   14004245b:	(bad)  
   14004245c:	jle    0x1400424a6
   14004245e:	(bad)  
   14004245f:	(bad)  
   140042460:	jge    0x1400424a9
   140042462:	(bad)  
   140042463:	(bad)  
   140042464:	jl     0x1400424ac
   140042466:	(bad)  
   140042467:	(bad)  
   140042468:	jp     0x1400424af
   14004246a:	(bad)  
   14004246b:	(bad)  
   14004246c:	jns    0x1400424b2
   14004246e:	(bad)  
   14004246f:	(bad)  
   140042470:	js     0x1400424b5
   140042472:	(bad)  
   140042473:	push   QWORD PTR [rsi+0x43]
   140042476:	(bad)  
   140042477:	inc    DWORD PTR [rax]
	...
   14004248d:	add    BYTE PTR [rax],al
   14004248f:	add    BYTE PTR [rcx-0x4f00ff9a],dh
   140042495:	gs add bh,bh
   140042498:	scas   al,BYTE PTR es:[rdi]
   140042499:	fs add edi,edi
   14004249c:	movabs ds:0xaaff0162abff015e,eax
   1400424a5:	(bad)  {k1}{z}
   1400424aa:	add    edi,edi
   1400424ac:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400424ad:	(bad)  
   1400424ae:	add    edi,edi
   1400424b0:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400424b1:	pop    rdi
   1400424b2:	add    bh,bh
   1400424b4:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400424b5:	pop    rsi
   1400424b6:	add    bh,bh
   1400424b8:	movabs ds:0xa0ff025da1ff025d,eax
   1400424c1:	pop    rsp
   1400424c2:	add    bh,bh
   1400424c4:	lahf   
   1400424c5:	pop    rbx
   1400424c6:	add    bh,bh
   1400424c8:	popf   
   1400424c9:	pop    rdx
   1400424ca:	add    edi,edi
   1400424cc:	push   0x4b
   1400424ce:	(bad)  
   1400424cf:	(bad)  
   1400424d0:	jmp    0x12a03d8a9
   1400424d5:	(bad)  
   1400424d6:	mov    bl,0xff
   1400424d8:	jmp    0x12a03d8b1
   1400424dd:	(bad)  
   1400424de:	mov    bl,0xff
   1400424e0:	jmp    0x12a03d8b9
   1400424e5:	(bad)  
   1400424e6:	mov    bl,0xff
   1400424e8:	jmp    0x12a03d8c1
   1400424ed:	(bad)  
   1400424ee:	mov    bl,0xff
   1400424f0:	jmp    0x12a03d8c9
   1400424f5:	(bad)  
   1400424f6:	mov    bl,0xff
   1400424f8:	push   0x4b
   1400424fa:	(bad)  
   1400424fb:	dec    DWORD PTR [rbx-0x7500fab1]
   140042501:	rex.WRX add rax,0x54e88ff
   140042507:	inc    DWORD PTR [rdi-0x7a00fab3]
   14004250d:	rex.WR add rax,0x54b84ff
   140042513:	inc    DWORD PTR [rbx-0x7e00f9b6]
   140042519:	rex.WB (bad) 
   14004251b:	inc    DWORD PTR [rax+0x7eff0649]
   140042521:	rex.W (bad) 
   140042523:	(bad)  
   140042524:	jge    0x14004256d
   140042526:	(bad)  
   140042527:	(bad)  
   140042528:	jl     0x140042570
   14004252a:	(bad)  
   14004252b:	(bad)  
   14004252c:	jp     0x140042573
   14004252e:	(bad)  
   14004252f:	(bad)  
   140042530:	jns    0x140042576
   140042532:	(bad)  
   140042533:	(bad)  
   140042534:	js     0x140042579
   140042536:	(bad)  
   140042537:	inc    DWORD PTR [rax]
	...
   14004254d:	add    BYTE PTR [rax],al
   14004254f:	add    BYTE PTR [rdx-0x4e00ff99],dh
   140042555:	data16 add bh,bh
   140042558:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140042559:	push   0xffffffff963fff0f
   14004255e:	mov    bh,0xff
   140042560:	pop    rsp
   140042561:	cmp    BYTE PTR [rdx-0x1],0xa2
   140042565:	pop    rbp
   140042566:	add    edi,edi
   140042568:	stos   BYTE PTR es:[rdi],al
   140042569:	(bad)  {k1}{z}
   14004256e:	add    edi,edi
   140042570:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140042571:	(bad)  
   140042572:	add    edi,edi
   140042574:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140042575:	pop    rdi
   140042576:	add    bh,bh
   140042578:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140042579:	pop    rsi
   14004257a:	add    bh,bh
   14004257c:	movabs ds:0xa0ff025da1ff025d,eax
   140042585:	pop    rsp
   140042586:	add    bh,bh
   140042588:	lahf   
   140042589:	pop    rbx
   14004258a:	add    bh,bh
   14004258c:	ins    BYTE PTR es:[rdi],dx
   14004258d:	rex.WR sub dil,r15b
   140042590:	(bad)  
   140042591:	(bad)  
   140042592:	mov    dh,0xff
   140042594:	(bad)  
   140042595:	(bad)  
   140042596:	mov    dh,0xff
   140042598:	(bad)  
   140042599:	(bad)  
   14004259a:	mov    dh,0xff
   14004259c:	(bad)  
   14004259d:	(bad)  
   14004259e:	mov    dh,0xff
   1400425a0:	(bad)  
   1400425a1:	(bad)  
   1400425a2:	mov    dh,0xff
   1400425a4:	(bad)  
   1400425a5:	(bad)  
   1400425a6:	mov    dh,0xff
   1400425a8:	(bad)  
   1400425a9:	(bad)  
   1400425aa:	mov    dh,0xff
   1400425ac:	(bad)  
   1400425ad:	(bad)  
   1400425ae:	mov    dh,0xff
   1400425b0:	(bad)  
   1400425b1:	(bad)  
   1400425b2:	mov    dh,0xff
   1400425b4:	(bad)  
   1400425b5:	(bad)  
   1400425b6:	mov    dh,0xff
   1400425b8:	ins    BYTE PTR es:[rdi],dx
   1400425b9:	rex.WR sub dil,r15b
   1400425bc:	mov    WORD PTR [rax+0x5],ss
   1400425bf:	dec    DWORD PTR [rbx-0x7500fab1]
   1400425c5:	rex.WRX add rax,0x54e88ff
   1400425cb:	inc    DWORD PTR [rdi-0x7a00fab3]
   1400425d1:	rex.WR add rax,0x54b84ff
   1400425d7:	inc    DWORD PTR [rbx-0x7e00f9b6]
   1400425dd:	rex.WB (bad) 
   1400425df:	inc    DWORD PTR [rax+0x7eff0649]
   1400425e5:	rex.W (bad) 
   1400425e7:	(bad)  
   1400425e8:	jge    0x140042631
   1400425ea:	(bad)  
   1400425eb:	(bad)  
   1400425ec:	jl     0x140042634
   1400425ee:	(bad)  
   1400425ef:	(bad)  
   1400425f0:	jp     0x140042637
   1400425f2:	(bad)  
   1400425f3:	(bad)  
   1400425f4:	jns    0x14004263a
   1400425f6:	(bad)  
   1400425f7:	inc    DWORD PTR [rax]
	...
   14004260d:	add    BYTE PTR [rax],al
   14004260f:	add    BYTE PTR [rbx-0x4d00ff99],dh
   140042615:	addr32 add bh,bh
   140042618:	jb     0x140042694
   14004261a:	pop    rbx
   14004261b:	jmp    FWORD PTR [rax+rsi*4]
   14004261e:	repz jmp FWORD PTR [rax+rsi*4]
   140042622:	repz (bad) 
   140042624:	(bad)  
   140042625:	xchg   edi,eax
   140042626:	(bad)  
   140042627:	call   FWORD PTR [rbp-0x5500ef9e]
   14004262d:	(bad)  {k1}{z}
   140042632:	add    edi,edi
   140042634:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140042635:	(bad)  
   140042636:	add    edi,edi
   140042638:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140042639:	pop    rdi
   14004263a:	add    bh,bh
   14004263c:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004263d:	pop    rsi
   14004263e:	add    bh,bh
   140042640:	movabs ds:0xa0ff025da1ff025d,eax
   140042649:	pop    rsp
   14004264a:	add    bh,bh
   14004264c:	ins    DWORD PTR es:[rdi],dx
   14004264d:	rex.WRX sub rdi,r15
   140042650:	in     al,dx
   140042651:	fnstcw WORD PTR [rcx-0x46261301]
   140042657:	(bad)  
   140042658:	in     al,dx
   140042659:	fnstcw WORD PTR [rcx-0x46261301]
   14004265f:	(bad)  
   140042660:	in     al,dx
   140042661:	fnstcw WORD PTR [rcx-0x46261301]
   140042667:	(bad)  
   140042668:	in     al,dx
   140042669:	fnstcw WORD PTR [rcx-0x46261301]
   14004266f:	(bad)  
   140042670:	in     al,dx
   140042671:	fnstcw WORD PTR [rcx-0x46261301]
   140042677:	jmp    FWORD PTR [rbp+0x4e]
   14004267a:	sub    edi,edi
   14004267c:	mov    ss,WORD PTR [rcx+0x4]
   14004267f:	dec    DWORD PTR [rax+rdx*2+0x4f8bff05]
   140042686:	add    eax,0x54e8aff
   14004268b:	dec    DWORD PTR [rax-0x7800fab2]
   140042691:	rex.WRB add rax,0x54c85ff
   140042697:	inc    DWORD PTR [rbx+rcx*2+0x4a83ff05]
   14004269e:	(bad)  
   14004269f:	inc    DWORD PTR [rcx-0x7f00f9b7]
   1400426a5:	rex.WB (bad) 
   1400426a7:	(bad)  
   1400426a8:	jle    0x1400426f2
   1400426aa:	(bad)  
   1400426ab:	(bad)  
   1400426ac:	jge    0x1400426f5
   1400426ae:	(bad)  
   1400426af:	(bad)  
   1400426b0:	jl     0x1400426f8
   1400426b2:	(bad)  
   1400426b3:	(bad)  
   1400426b4:	jp     0x1400426fb
   1400426b6:	(bad)  
   1400426b7:	inc    DWORD PTR [rax]
	...
   1400426cd:	add    BYTE PTR [rax],al
   1400426cf:	add    BYTE PTR [rbx-0x4f00ff99],dh
   1400426d5:	gs add bh,bh
   1400426d8:	ds xchg esp,eax
   1400426da:	sar    edi,1
   1400426dc:	(bad)  
   1400426dd:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400426de:	icebp  
   1400426df:	jmp    FWORD PTR [rsi]
   1400426e1:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400426e2:	icebp  
   1400426e3:	push   QWORD PTR [rcx]
   1400426e5:	sahf   
   1400426e6:	out    dx,eax
   1400426e7:	inc    DWORD PTR [rdx-0x7f]
   1400426ea:	sar    bh,0xa2
   1400426ed:	pop    rbp
   1400426ee:	add    edi,edi
   1400426f0:	stos   BYTE PTR es:[rdi],al
   1400426f1:	(bad)  {k1}{z}
   1400426f6:	add    edi,edi
   1400426f8:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400426f9:	(bad)  
   1400426fa:	add    edi,edi
   1400426fc:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400426fd:	pop    rdi
   1400426fe:	add    bh,bh
   140042700:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140042701:	pop    rsi
   140042702:	add    bh,bh
   140042704:	movabs ds:0x6fff025da1ff025d,eax
   14004270d:	rex.WRXB sub r15b,r15b
   140042710:	in     eax,dx
   140042711:	fstp   TBYTE PTR [rdi+rdi*8-0x432413]
   140042718:	in     eax,dx
   140042719:	fstp   TBYTE PTR [rdi+rdi*8-0x432413]
   140042720:	in     eax,dx
   140042721:	fstp   TBYTE PTR [rdi+rdi*8-0x432413]
   140042728:	in     eax,dx
   140042729:	fstp   TBYTE PTR [rdi+rdi*8-0x432413]
   140042730:	in     eax,dx
   140042731:	fstp   TBYTE PTR [rdi+rdi*8-0x432413]
   140042738:	outs   dx,DWORD PTR ds:[rsi]
   140042739:	rex.WRXB sub r15b,r15b
   14004273c:	(bad)  
   14004273d:	push   rdx
   14004273e:	add    al,0xff
   140042740:	mov    ss,WORD PTR [rcx+0x4]
   140042743:	dec    DWORD PTR [rax+rdx*2+0x4f8bff05]
   14004274a:	add    eax,0x54e8aff
   14004274f:	dec    DWORD PTR [rax-0x7800fab2]
   140042755:	rex.WRB add rax,0x54c85ff
   14004275b:	inc    DWORD PTR [rbx+rcx*2+0x4a83ff05]
   140042762:	(bad)  
   140042763:	inc    DWORD PTR [rcx-0x7f00f9b7]
   140042769:	rex.WB (bad) 
   14004276b:	(bad)  
   14004276c:	jle    0x1400427b6
   14004276e:	(bad)  
   14004276f:	(bad)  
   140042770:	jge    0x1400427b9
   140042772:	(bad)  
   140042773:	(bad)  
   140042774:	jl     0x1400427bc
   140042776:	(bad)  
   140042777:	inc    DWORD PTR [rax]
	...
   14004278d:	add    BYTE PTR [rax],al
   14004278f:	add    BYTE PTR [rbx+0x78ff0067],dh
   140042795:	pop    rdx
   140042796:	push   rdx
   140042797:	jmp    FWORD PTR [rbx]
   140042799:	addr32 in eax,0xff
   14004279c:	xor    BYTE PTR [rbx-0x6fcd0015],al
   1400427a2:	in     al,dx
   1400427a3:	push   QWORD PTR [rcx]
   1400427a5:	mov    ch,bl
   1400427a7:	jmp    FWORD PTR [rdx+rdi*2]
   1400427aa:	(bad)  
   1400427ab:	dec    DWORD PTR [rsi+0x6a]
   1400427ae:	xchg   ebx,eax
   1400427af:	jmp    FWORD PTR [rax-0x5500fe9f]
   1400427b5:	(bad)  {k1}{z}
   1400427ba:	add    edi,edi
   1400427bc:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400427bd:	(bad)  
   1400427be:	add    edi,edi
   1400427c0:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400427c1:	pop    rdi
   1400427c2:	add    bh,bh
   1400427c4:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400427c5:	pop    rsi
   1400427c6:	add    bh,bh
   1400427c8:	jg     0x140042816
   1400427ca:	and    edi,edi
   1400427cc:	(bad)  
   1400427cd:	rex.W cmp dil,dil
   1400427d0:	out    dx,al
   1400427d1:	fnstsw WORD PTR [rdi-0x40221101]
   1400427d7:	(bad)  
   1400427d8:	out    dx,al
   1400427d9:	fnstsw WORD PTR [rdi-0x40221101]
   1400427df:	(bad)  
   1400427e0:	out    dx,al
   1400427e1:	fnstsw WORD PTR [rdi-0x40221101]
   1400427e7:	(bad)  
   1400427e8:	out    dx,al
   1400427e9:	fnstsw WORD PTR [rdi-0x40221101]
   1400427ef:	(bad)  
   1400427f0:	out    dx,al
   1400427f1:	fnstsw WORD PTR [rdi-0x40221101]
   1400427f7:	push   QWORD PTR [rax+0x50]
   1400427fa:	sub    edi,edi
   1400427fc:	xchg   ecx,eax
   1400427fd:	push   rdx
   1400427fe:	add    al,0xff
   140042800:	(bad)  
   140042801:	push   rdx
   140042802:	add    al,0xff
   140042804:	mov    ss,WORD PTR [rcx+0x4]
   140042807:	dec    DWORD PTR [rax+rdx*2+0x4f8bff05]
   14004280e:	add    eax,0x54e8aff
   140042813:	dec    DWORD PTR [rax-0x7800fab2]
   140042819:	rex.WRB add rax,0x54c85ff
   14004281f:	inc    DWORD PTR [rbx+rcx*2+0x4a83ff05]
   140042826:	(bad)  
   140042827:	inc    DWORD PTR [rcx-0x7f00f9b7]
   14004282d:	rex.WB (bad) 
   14004282f:	(bad)  
   140042830:	jle    0x14004287a
   140042832:	(bad)  
   140042833:	(bad)  
   140042834:	jge    0x14004287d
   140042836:	(bad)  
   140042837:	inc    DWORD PTR [rax]
	...
   14004284d:	add    BYTE PTR [rax],al
   14004284f:	add    BYTE PTR [rbx+0x30ff085e],ah
   140042855:	sub    cl,BYTE PTR [rbp-0x3fceda01]
   14004285b:	jmp    QWORD PTR [rdi]
   14004285d:	rex.RB (bad) 
   14004285f:	jmp    FWORD PTR [rax]
   140042861:	pop    rax
   140042862:	loope  0x140042863
   140042864:	sub    DWORD PTR [rdi+riz*8-0x1],esp
   140042868:	sub    DWORD PTR [rcx+rbp*8-0x1],ebp
   14004286c:	sub    dh,BYTE PTR [rdx+rbp*8-0x1]
   140042870:	push   rdi
   140042871:	push   0xffffffffffffff85
   140042873:	jmp    FWORD PTR [rax-0x5500fe9f]
   140042879:	(bad)  {k1}{z}
   14004287e:	add    edi,edi
   140042880:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140042881:	(bad)  
   140042882:	add    edi,edi
   140042884:	js     0x1400428ce
   140042886:	and    al,0xff
   140042888:	(bad)  
   140042889:	sub    DWORD PTR [rbx+0x334f6cff],edx
   14004288f:	push   rax
   140042891:	ffreep st(2)
   140042893:	push   rax
   140042895:	ffreep st(2)
   140042897:	push   rax
   140042899:	ffreep st(2)
   14004289b:	push   rax
   14004289d:	ffreep st(2)
   14004289f:	push   rax
   1400428a1:	ffreep st(2)
   1400428a3:	push   rax
   1400428a5:	ffreep st(2)
   1400428a7:	push   rax
   1400428a9:	ffreep st(2)
   1400428ab:	push   rax
   1400428ad:	ffreep st(2)
   1400428af:	push   rax
   1400428b1:	ffreep st(2)
   1400428b3:	push   rax
   1400428b5:	ffreep st(2)
   1400428b7:	push   QWORD PTR [rcx+0x52]
   1400428ba:	sub    eax,0x45392ff
   1400428bf:	call   QWORD PTR [rcx-0x7000fbae]
   1400428c5:	push   rdx
   1400428c6:	add    al,0xff
   1400428c8:	mov    ss,WORD PTR [rcx+0x4]
   1400428cb:	dec    DWORD PTR [rax+rdx*2+0x4f8bff05]
   1400428d2:	add    eax,0x54e8aff
   1400428d7:	dec    DWORD PTR [rax-0x7800fab2]
   1400428dd:	rex.WRB add rax,0x54c85ff
   1400428e3:	inc    DWORD PTR [rbx+rcx*2+0x4a83ff05]
   1400428ea:	(bad)  
   1400428eb:	inc    DWORD PTR [rcx-0x7f00f9b7]
   1400428f1:	rex.WB (bad) 
   1400428f3:	(bad)  
   1400428f4:	jle    0x14004293e
   1400428f6:	(bad)  
   1400428f7:	inc    DWORD PTR [rax]
	...
   140042901:	add    BYTE PTR [rax],al
   140042903:	add    BYTE PTR [rcx+0x48],ah
   140042906:	and    ebx,DWORD PTR es:[rsi+0x7b963e76]
   14004290d:	push   rsp
   14004290e:	sub    DWORD PTR [rbp+0x42],edi
   140042911:	sub    al,BYTE PTR [rax-0x1]
   140042914:	sbb    bl,BYTE PTR [rdx]
   140042916:	js     0x140042917
   140042918:	(bad)  
   140042919:	and    BYTE PTR [rcx-0x4fd9dc01],dl
   14004291f:	jmp    QWORD PTR [rdi]
   140042921:	ss (bad) 
   140042923:	jmp    QWORD PTR [rdi]
   140042925:	rex.WRX (bad) 
   140042928:	sub    BYTE PTR [rdx-0x19],ah
   14004292b:	jmp    FWORD PTR [rdx]
   14004292d:	outs   dx,BYTE PTR ds:[rsi]
   14004292e:	jmp    0x12b7e5532
   140042933:	dec    DWORD PTR [rsi+0x6c]
   140042936:	xchg   ebx,eax
   140042937:	call   QWORD PTR [rbx-0x6500efa5]
   14004293d:	pop    rax
   14004293e:	add    edi,edi
   140042940:	(bad)  
   140042941:	rex.WR pop rsi
   140042943:	jmp    FWORD PTR [rdx]
   140042945:	sub    ch,BYTE PTR [rdi+rdi*8-0x9ac6ae]
   14004294c:	jae    0x1400429a1
   14004294e:	cs push rcx
   140042951:	loope  0x140042918
   140042953:	push   rcx
   140042955:	loope  0x14004291c
   140042957:	push   rcx
   140042959:	loope  0x140042920
   14004295b:	push   rcx
   14004295d:	loope  0x140042924
   14004295f:	push   rcx
   140042961:	loope  0x140042928
   140042963:	push   rcx
   140042965:	loope  0x14004292c
   140042967:	push   rcx
   140042969:	loope  0x140042930
   14004296b:	push   rcx
   14004296d:	loope  0x140042934
   14004296f:	push   rcx
   140042971:	loope  0x140042938
   140042973:	push   rcx
   140042975:	loope  0x14004293c
   140042977:	push   QWORD PTR [rbx+0x53]
   14004297a:	call   QWORD PTR cs:[rsp+rdx*2+0x5392ff04]
   140042982:	add    al,0xff
   140042984:	xchg   ecx,eax
   140042985:	push   rdx
   140042986:	add    al,0xff
   140042988:	(bad)  
   140042989:	push   rdx
   14004298a:	add    al,0xff
   14004298c:	mov    ss,WORD PTR [rcx+0x4]
   14004298f:	dec    DWORD PTR [rax+rdx*2+0x4f8bff05]
   140042996:	add    eax,0x54e8aff
   14004299b:	dec    DWORD PTR [rax-0x7800fab2]
   1400429a1:	rex.WRB add rax,0x54c85ff
   1400429a7:	inc    DWORD PTR [rbx+rcx*2+0x4a83ff05]
   1400429ae:	(bad)  
   1400429af:	inc    DWORD PTR [rcx-0x7f00f9b7]
   1400429b5:	rex.WB (bad) 
   1400429b7:	inc    DWORD PTR [rax]
   1400429b9:	add    BYTE PTR [rax],al
   1400429bb:	add    BYTE PTR [rax],al
   1400429bd:	add    BYTE PTR [rax],al
   1400429bf:	add    eax,0x4d346486
   1400429c4:	(bad)  
   1400429c5:	cdq    
   1400429c6:	push   rax
   1400429c7:	jmp    0x13f58c8a0
   1400429cc:	(bad)  
   1400429cd:	xchg   ebx,eax
   1400429ce:	push   rcx
   1400429cf:	dec    DWORD PTR [rdi+0x22ff4064]
   1400429d5:	sbb    bl,BYTE PTR [rdi+rdi*8+0x1a]
   1400429d9:	sbb    DWORD PTR [rbp-0x1],esi
   1400429dc:	sbb    eax,0x23ff8d20
   1400429e1:	and    eax,0x3827ffae
   1400429e6:	leave  
   1400429e7:	jmp    FWORD PTR [rax]
   1400429e9:	push   rsi
   1400429ea:	loope  0x1400429eb
   1400429ec:	sub    DWORD PTR [rcx-0x18],ebp
   1400429ef:	jmp    FWORD PTR [rbx]
   1400429f1:	js     0x1400429dd
   1400429f3:	jmp    FWORD PTR [rbx]
   1400429f5:	jge    0x1400429e2
   1400429f7:	push   QWORD PTR [rax]
   1400429f9:	ja     0x1400429d7
   1400429fb:	push   QWORD PTR [rbx]
   1400429fd:	(bad)  
   1400429fe:	retf   0x27ff
   140042a01:	ds (bad) 
   140042a03:	jmp    QWORD PTR [rbx]
   140042a05:	and    al,0xac
   140042a07:	dec    DWORD PTR [rsi+0x74ff1e54]
   140042a0d:	push   rsp
   140042a0e:	(bad)  
   140042a0f:	push   rbx
   140042a11:	jrcxz  0x1400429db
   140042a13:	push   rbx
   140042a15:	jrcxz  0x1400429df
   140042a17:	push   rbx
   140042a19:	jrcxz  0x1400429e3
   140042a1b:	push   rbx
   140042a1d:	jrcxz  0x1400429e7
   140042a1f:	push   rbx
   140042a21:	jrcxz  0x1400429eb
   140042a23:	push   rbx
   140042a25:	jrcxz  0x1400429ef
   140042a27:	push   rbx
   140042a29:	jrcxz  0x1400429f3
   140042a2b:	push   rbx
   140042a2d:	jrcxz  0x1400429f7
   140042a2f:	push   rbx
   140042a31:	jrcxz  0x1400429fb
   140042a33:	push   rbx
   140042a35:	jrcxz  0x1400429ff
   140042a37:	push   QWORD PTR [rsp+rdx*2+0x2f]
   140042a3b:	call   QWORD PTR [rbp-0x6b00fbab]
   140042a41:	push   rsp
   140042a42:	add    al,0xff
   140042a44:	xchg   edx,eax
   140042a45:	push   rbx
   140042a46:	add    al,0xff
   140042a48:	xchg   ecx,eax
   140042a49:	push   rdx
   140042a4a:	add    al,0xff
   140042a4c:	(bad)  
   140042a4d:	push   rdx
   140042a4e:	add    al,0xff
   140042a50:	mov    ss,WORD PTR [rcx+0x4]
   140042a53:	dec    DWORD PTR [rax+rdx*2+0x4f8bff05]
   140042a5a:	add    eax,0x54e8aff
   140042a5f:	dec    DWORD PTR [rax-0x7800fab2]
   140042a65:	rex.WRB add rax,0x54c85ff
   140042a6b:	inc    DWORD PTR [rbx+rcx*2+0x4a83ff05]
   140042a72:	(bad)  
   140042a73:	inc    DWORD PTR [rcx+0xff0649]
   140042a79:	add    BYTE PTR [rax],al
   140042a7b:	(bad)  
   140042a7c:	mov    ch,0x87
   140042a7e:	rex.RX cwde 
   140042a80:	xlat   BYTE PTR ds:[rbx]
   140042a81:	movabs al,ds:0x9dd2ff53a0d7ff53
   140042a8a:	push   rsp
   140042a8b:	dec    eax
   140042a8d:	xchg   esi,eax
   140042a8e:	push   rbp
   140042a8f:	(bad)  
   140042a90:	mov    esi,0x89ff558d
   140042a95:	pop    rdi
   140042a96:	call   FWORD PTR [rsi+r10*1]
   140042a9a:	(bad)  
   140042a9b:	call   FWORD PTR [rdx]
   140042a9d:	sbb    bh,BYTE PTR [rcx-0x1]
   140042aa0:	(bad)  
   140042aa1:	and    DWORD PTR [rbp-0x46d5da01],edx
   140042aa7:	jmp    QWORD PTR [rdi]
   140042aa9:	rex.WX xlat BYTE PTR ds:[rbx]
   140042aab:	jmp    FWORD PTR [rcx]
   140042aad:	call   0x56b0
   140042ab1:	jbe    0x140042a9d
   140042ab3:	jmp    FWORD PTR [rbx]
   140042ab5:	jge    0x140042aa2
   140042ab7:	jmp    FWORD PTR [rbx]
   140042ab9:	ja     0x140042aa5
   140042abb:	jmp    FWORD PTR [rax]
   140042abd:	pop    rbx
   140042abe:	jrcxz  0x140042abf
   140042ac0:	es xor cl,al
   140042ac3:	(bad)  
   140042ac4:	cmp    ch,BYTE PTR [rdi]
   140042ac6:	test   bh,bh
   140042ac8:	test   eax,0x75ff0161
   140042acd:	push   rsi
   140042ace:	xor    bh,bh
   140042ad0:	hlt    
   140042ad1:	in     eax,0xcb
   140042ad3:	push   rsp
   140042ad5:	in     eax,0xcb
   140042ad7:	push   rsp
   140042ad9:	in     eax,0xcb
   140042adb:	push   rsp
   140042add:	in     eax,0xcb
   140042adf:	push   rsp
   140042ae1:	in     eax,0xcb
   140042ae3:	push   rsp
   140042ae5:	in     eax,0xcb
   140042ae7:	push   rsp
   140042ae9:	in     eax,0xcb
   140042aeb:	push   rsp
   140042aed:	in     eax,0xcb
   140042aef:	push   rsp
   140042af1:	in     eax,0xcb
   140042af3:	push   rsp
   140042af5:	in     eax,0xcb
   140042af7:	push   QWORD PTR [rbp+0x56]
   140042afa:	xor    bh,bh
   140042afc:	xchg   esi,eax
   140042afd:	push   rsi
   140042afe:	add    edi,edi
   140042b00:	xchg   ebp,eax
   140042b01:	push   rbp
   140042b02:	add    al,0xff
   140042b04:	xchg   esp,eax
   140042b05:	push   rsp
   140042b06:	add    al,0xff
   140042b08:	xchg   edx,eax
   140042b09:	push   rbx
   140042b0a:	add    al,0xff
   140042b0c:	xchg   ecx,eax
   140042b0d:	push   rdx
   140042b0e:	add    al,0xff
   140042b10:	(bad)  
   140042b11:	push   rdx
   140042b12:	add    al,0xff
   140042b14:	mov    ss,WORD PTR [rcx+0x4]
   140042b17:	dec    DWORD PTR [rax+rdx*2+0x4f8bff05]
   140042b1e:	add    eax,0x54e8aff
   140042b23:	dec    DWORD PTR [rax-0x7800fab2]
   140042b29:	rex.WRB add rax,0x54c85ff
   140042b2f:	inc    DWORD PTR [rbx+rcx*2+0x4a83ff05]
   140042b36:	(bad)  
   140042b37:	inc    ebx
   140042b39:	xchg   ecx,eax
   140042b3a:	rex.WXB rcl r15,cl
   140042b3d:	movabs al,ds:0xa0d7ff53a0d7ff53
   140042b46:	push   rbx
   140042b47:	call   rax
   140042b49:	fwait
   140042b4a:	push   rsp
   140042b4b:	inc    edi
   140042b4d:	xchg   esp,eax
   140042b4e:	push   rsi
   140042b4f:	(bad)  
   140042b50:	mov    ebp,0xb0ff578d
   140042b55:	adc    DWORD PTR [rdi+rdi*8+0x64],0x44
   140042b5a:	rex.RB call FWORD PTR [r9]
   140042b5d:	(bad)  
   140042b5e:	imul   edi,edi,0xff831d1b
   140042b64:	and    ah,BYTE PTR [rcx+rbp*4]
   140042b67:	jmp    QWORD PTR [rdi]
   140042b69:	(bad)  
   140042b6a:	iret   
   140042b6b:	jmp    FWORD PTR [rcx]
   140042b6d:	movsxd esp,edi
   140042b6f:	jmp    FWORD PTR [rbx]
   140042b71:	jne    0x140042b5d
   140042b73:	jmp    FWORD PTR [rbx]
   140042b75:	jl     0x140042b62
   140042b77:	jmp    FWORD PTR [rdx]
   140042b79:	jno    0x140042b64
   140042b7b:	jmp    FWORD PTR [rax]
   140042b7d:	rex.WRXB (bad) 
   140042b80:	and    al,0x28
   140042b82:	mov    dh,0xff
   140042b84:	outs   dx,BYTE PTR ds:[rsi]
   140042b85:	rex.RX
   140042b86:	rex.RB jmp FWORD PTR [r10+0x77ff0162]
   140042b8d:	push   rdi
   140042b8e:	xor    edi,edi
   140042b90:	cmc    
   140042b91:	out    0xce,eax
   140042b93:	push   rbp
   140042b95:	out    0xce,eax
   140042b97:	push   rbp
   140042b99:	out    0xce,eax
   140042b9b:	push   rbp
   140042b9d:	out    0xce,eax
   140042b9f:	push   rbp
   140042ba1:	out    0xce,eax
   140042ba3:	push   rbp
   140042ba5:	out    0xce,eax
   140042ba7:	push   rbp
   140042ba9:	out    0xce,eax
   140042bab:	push   rbp
   140042bad:	out    0xce,eax
   140042baf:	push   rbp
   140042bb1:	out    0xce,eax
   140042bb3:	push   rbp
   140042bb5:	out    0xce,eax
   140042bb7:	push   QWORD PTR [rdi+0x57]
   140042bba:	xor    edi,edi
   140042bbc:	cwde   
   140042bbd:	push   rdi
   140042bbe:	add    edi,edi
   140042bc0:	xchg   esi,eax
   140042bc1:	push   rsi
   140042bc2:	add    edi,edi
   140042bc4:	xchg   ebp,eax
   140042bc5:	push   rbp
   140042bc6:	add    al,0xff
   140042bc8:	xchg   esp,eax
   140042bc9:	push   rsp
   140042bca:	add    al,0xff
   140042bcc:	xchg   edx,eax
   140042bcd:	push   rbx
   140042bce:	add    al,0xff
   140042bd0:	xchg   ecx,eax
   140042bd1:	push   rdx
   140042bd2:	add    al,0xff
   140042bd4:	(bad)  
   140042bd5:	push   rdx
   140042bd6:	add    al,0xff
   140042bd8:	mov    ss,WORD PTR [rcx+0x4]
   140042bdb:	dec    DWORD PTR [rax+rdx*2+0x4f8bff05]
   140042be2:	add    eax,0x54e8aff
   140042be7:	dec    DWORD PTR [rax-0x7800fab2]
   140042bed:	rex.WRB add rax,0x54c85ff
   140042bf3:	inc    DWORD PTR [rbx+rcx*2-0x5f2800fb]
   140042bfa:	push   rbx
   140042bfb:	adc    bh,dl
   140042bfd:	movabs al,ds:0xa0d6df53a0d77053
   140042c06:	push   rbx
   140042c07:	dec    edi
   140042c09:	(bad)  
   140042c0a:	push   rsp
   140042c0b:	inc    ebp
   140042c0d:	xchg   ebx,eax
   140042c0e:	push   rsi
   140042c0f:	(bad)  
   140042c10:	mov    ebx,0xb8ff578c
   140042c15:	xchg   DWORD PTR [rsi-0x1],ecx
   140042c18:	test   eax,0x35ff3775
   140042c1d:	and    eax,0x1a1aff53
   140042c22:	jbe    0x140042c23
   140042c24:	(bad)  
   140042c25:	and    bl,BYTE PTR [rdx-0x37c8d901]
   140042c2b:	jmp    FWORD PTR [rcx]
   140042c2d:	(bad)  
   140042c2e:	out    0xff,al
   140042c30:	sub    dh,BYTE PTR [rbx-0x16]
   140042c33:	jmp    FWORD PTR [rbx]
   140042c35:	jns    0x140042c21
   140042c37:	jmp    FWORD PTR [rcx]
   140042c39:	imul   ebp,ecx,0xffffffff
   140042c3c:	(bad)  
   140042c3d:	sar    r15b,1
   140042c40:	and    ah,BYTE PTR [rbx+rbp*4]
   140042c43:	jmp    QWORD PTR [rdi+rbx*2+0x62abff0b]
   140042c4a:	add    edi,edi
   140042c4c:	js     0x140042ca6
   140042c4e:	xor    bh,bh
   140042c50:	imul   ecx
   140042c52:	sar    edi,1
   140042c54:	imul   ecx
   140042c56:	sar    edi,1
   140042c58:	imul   ecx
   140042c5a:	sar    edi,1
   140042c5c:	imul   ecx
   140042c5e:	sar    edi,1
   140042c60:	imul   ecx
   140042c62:	sar    edi,1
   140042c64:	imul   ecx
   140042c66:	sar    edi,1
   140042c68:	imul   ecx
   140042c6a:	sar    edi,1
   140042c6c:	imul   ecx
   140042c6e:	sar    edi,1
   140042c70:	imul   ecx
   140042c72:	sar    edi,1
   140042c74:	imul   ecx
   140042c76:	sar    edi,1
   140042c78:	js     0x140042cd2
   140042c7a:	xor    bh,bh
   140042c7c:	cdq    
   140042c7d:	push   rdi
   140042c7e:	add    edi,edi
   140042c80:	cwde   
   140042c81:	push   rdi
   140042c82:	add    edi,edi
   140042c84:	xchg   esi,eax
   140042c85:	push   rsi
   140042c86:	add    edi,edi
   140042c88:	xchg   ebp,eax
   140042c89:	push   rbp
   140042c8a:	add    al,0xff
   140042c8c:	xchg   esp,eax
   140042c8d:	push   rsp
   140042c8e:	add    al,0xff
   140042c90:	xchg   edx,eax
   140042c91:	push   rbx
   140042c92:	add    al,0xff
   140042c94:	xchg   ecx,eax
   140042c95:	push   rdx
   140042c96:	add    al,0xff
   140042c98:	(bad)  
   140042c99:	push   rdx
   140042c9a:	add    al,0xff
   140042c9c:	mov    ss,WORD PTR [rcx+0x4]
   140042c9f:	dec    DWORD PTR [rax+rdx*2+0x4f8bff05]
   140042ca6:	add    eax,0x54e8aff
   140042cab:	dec    DWORD PTR [rax-0x7800fab2]
   140042cb1:	rex.WRB add rax,0x54c85ff
   140042cb7:	inc    DWORD PTR [rax]
	...
   140042cc1:	add    BYTE PTR [rax],al
   140042cc3:	add    ch,dl
   140042cc5:	lahf   
   140042cc6:	push   rbx
   140042cc7:	rex int 0x99
   140042cca:	push   rbp
   140042ccb:	lahf   
   140042ccc:	ret    
   140042ccd:	xchg   edx,eax
   140042cce:	push   rsi
   140042ccf:	inc    edx
   140042cd1:	mov    eax,DWORD PTR [rdx-0x1]
   140042cd4:	mov    bl,BYTE PTR [rdi+0x38]
   140042cd7:	jmp    FWORD PTR [rdx]
   140042cd9:	sbb    eax,DWORD PTR [rbp-0x1]
   140042cdc:	pop    rsi
   140042cdd:	rex call FWORD PTR ds:[rbx]
   140042ce1:	(bad)  
   140042ce2:	call   DWORD PTR [rip+0x26ff8d1f]        # 0x16703ba08
   140042ce9:	xor    ecx,eax
   140042ceb:	jmp    FWORD PTR [rax]
   140042ced:	pop    rsi
   140042cee:	in     eax,0xff
   140042cf0:	sub    bh,BYTE PTR [rdx+rbp*8-0x1]
   140042cf4:	sub    edi,DWORD PTR [rsi-0x16]
   140042cf7:	jmp    FWORD PTR [rcx]
   140042cf9:	fs out 0xff,al
   140042cfc:	es xor eax,0x384effc5
   140042d02:	jno    0x140042d03
   140042d04:	scas   al,BYTE PTR es:[rdi]
   140042d05:	fs add edi,edi
   140042d08:	lods   eax,DWORD PTR ds:[rsi]
   140042d09:	movsxd eax,DWORD PTR [rcx]
   140042d0b:	(bad)  
   140042d0c:	jns    0x140042d68
   140042d0e:	xor    edi,edi
   140042d10:	jns    0x140042d6c
   140042d12:	xor    edi,edi
   140042d14:	jns    0x140042d70
   140042d16:	xor    edi,edi
   140042d18:	jns    0x140042d74
   140042d1a:	xor    edi,edi
   140042d1c:	jns    0x140042d78
   140042d1e:	xor    edi,edi
   140042d20:	jns    0x140042d7c
   140042d22:	xor    edi,edi
   140042d24:	jns    0x140042d80
   140042d26:	xor    edi,edi
   140042d28:	jns    0x140042d84
   140042d2a:	xor    edi,edi
   140042d2c:	jns    0x140042d88
   140042d2e:	xor    edi,edi
   140042d30:	jns    0x140042d8c
   140042d32:	xor    edi,edi
   140042d34:	jns    0x140042d90
   140042d36:	xor    edi,edi
   140042d38:	jns    0x140042d94
   140042d3a:	xor    edi,edi
   140042d3c:	fwait
   140042d3d:	pop    rax
   140042d3e:	add    edi,edi
   140042d40:	cdq    
   140042d41:	push   rdi
   140042d42:	add    edi,edi
   140042d44:	cwde   
   140042d45:	push   rdi
   140042d46:	add    edi,edi
   140042d48:	xchg   esi,eax
   140042d49:	push   rsi
   140042d4a:	add    edi,edi
   140042d4c:	xchg   ebp,eax
   140042d4d:	push   rbp
   140042d4e:	add    al,0xff
   140042d50:	xchg   esp,eax
   140042d51:	push   rsp
   140042d52:	add    al,0xff
   140042d54:	xchg   edx,eax
   140042d55:	push   rbx
   140042d56:	add    al,0xff
   140042d58:	xchg   ecx,eax
   140042d59:	push   rdx
   140042d5a:	add    al,0xff
   140042d5c:	(bad)  
   140042d5d:	push   rdx
   140042d5e:	add    al,0xff
   140042d60:	mov    ss,WORD PTR [rcx+0x4]
   140042d63:	dec    DWORD PTR [rax+rdx*2+0x4f8bff05]
   140042d6a:	add    eax,0x54e8aff
   140042d6f:	dec    DWORD PTR [rax-0x7800fab2]
   140042d75:	rex.WRB add rax,0xff
	...
   140042d8b:	add    al,cl
   140042d8d:	mov    dh,BYTE PTR [rax]
   140042d8f:	and    BYTE PTR [rax+0x3c],ah
   140042d92:	fist   WORD PTR ss:[rdi+0x38]
   140042d96:	notrack call QWORD PTR [rax+0x33]
   140042d9a:	call   QWORD PTR [r14+rsi*1+0x41]
   140042d9f:	inc    DWORD PTR [rbp+0x30]
   140042da2:	rex.WRB call FWORD PTR [r11]
   140042da5:	sbb    al,0x80
   140042da7:	jmp    QWORD PTR [rip+0x28ffb92d]        # 0x16903e6da
   140042dad:	pop    rsp
   140042dae:	jrcxz  0x140042daf
   140042db0:	sub    al,0x97
   140042db2:	(bad)  
   140042db3:	jmp    FWORD PTR [rbx]
   140042db5:	(bad)  
   140042db9:	pop    rsp
   140042dba:	jrcxz  0x140042dbb
   140042dbc:	and    eax,0x7affb92b
   140042dc1:	cmp    r15,rdi
   140042dc4:	mov    al,0x65
   140042dc6:	add    bh,bh
   140042dc8:	scas   al,BYTE PTR es:[rdi]
   140042dc9:	fs add edi,edi
   140042dcc:	lods   eax,DWORD PTR ds:[rsi]
   140042dcd:	movsxd eax,DWORD PTR [rcx]
   140042dcf:	jmp    FWORD PTR [rbx-0x5500fe9e]
   140042dd5:	(bad)  {k1}{z}
   140042dda:	add    edi,edi
   140042ddc:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140042ddd:	(bad)  
   140042dde:	add    edi,edi
   140042de0:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140042de1:	pop    rdi
   140042de2:	add    bh,bh
   140042de4:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140042de5:	pop    rsi
   140042de6:	add    bh,bh
   140042de8:	movabs ds:0xa0ff025da1ff025d,eax
   140042df1:	pop    rsp
   140042df2:	add    bh,bh
   140042df4:	lahf   
   140042df5:	pop    rbx
   140042df6:	add    bh,bh
   140042df8:	popf   
   140042df9:	pop    rdx
   140042dfa:	add    edi,edi
   140042dfc:	pushf  
   140042dfd:	pop    rcx
   140042dfe:	add    edi,edi
   140042e00:	fwait
   140042e01:	pop    rax
   140042e02:	add    edi,edi
   140042e04:	cdq    
   140042e05:	push   rdi
   140042e06:	add    edi,edi
   140042e08:	cwde   
   140042e09:	push   rdi
   140042e0a:	add    edi,edi
   140042e0c:	xchg   esi,eax
   140042e0d:	push   rsi
   140042e0e:	add    edi,edi
   140042e10:	xchg   ebp,eax
   140042e11:	push   rbp
   140042e12:	add    al,0xff
   140042e14:	xchg   esp,eax
   140042e15:	push   rsp
   140042e16:	add    al,0xff
   140042e18:	xchg   edx,eax
   140042e19:	push   rbx
   140042e1a:	add    al,0xff
   140042e1c:	xchg   ecx,eax
   140042e1d:	push   rdx
   140042e1e:	add    al,0xff
   140042e20:	(bad)  
   140042e21:	push   rdx
   140042e22:	add    al,0xff
   140042e24:	mov    ss,WORD PTR [rcx+0x4]
   140042e27:	dec    DWORD PTR [rax+rdx*2+0x4f8bff05]
   140042e2e:	add    eax,0x54e8aff
   140042e33:	dec    DWORD PTR [rax+0xff054e]
	...
   140042e4d:	add    BYTE PTR [rax],al
   140042e4f:	add    BYTE PTR [rdx+rbp*2-0x7c3d60fc],dh
   140042e56:	jmp    FWORD PTR es:[rdi-0x7700d288]
   140042e5d:	pop    rbx
   140042e5e:	sub    eax,0x395179ff
   140042e63:	call   FWORD PTR [rbx]
   140042e65:	sbb    DWORD PTR [rsi-0x1],ebp
   140042e68:	and    esp,DWORD PTR [rdi]
   140042e6a:	scas   al,BYTE PTR es:[rdi]
   140042e6b:	jmp    FWORD PTR [rax]
   140042e6d:	pop    rdi
   140042e6e:	loope  0x140042e6f
   140042e70:	cs mov cl,0xeb
   140042e73:	jmp    FWORD PTR [rip+0x28ffeaa2]        # 0x16904191b
   140042e79:	push   rbx
   140042e7a:	(bad)  
   140042e7c:	and    ah,BYTE PTR [rip+0x62a9ffac]        # 0x1a2ae2e2e
   140042e82:	or     edi,edi
   140042e84:	mov    cl,0x66
   140042e86:	add    bh,bh
   140042e88:	mov    al,0x65
   140042e8a:	add    bh,bh
   140042e8c:	scas   al,BYTE PTR es:[rdi]
   140042e8d:	fs add edi,edi
   140042e90:	lods   eax,DWORD PTR ds:[rsi]
   140042e91:	movsxd eax,DWORD PTR [rcx]
   140042e93:	jmp    FWORD PTR [rbx-0x5500fe9e]
   140042e99:	(bad)  {k1}{z}
   140042e9e:	add    edi,edi
   140042ea0:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140042ea1:	(bad)  
   140042ea2:	add    edi,edi
   140042ea4:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140042ea5:	pop    rdi
   140042ea6:	add    bh,bh
   140042ea8:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140042ea9:	pop    rsi
   140042eaa:	add    bh,bh
   140042eac:	movabs ds:0xa0ff025da1ff025d,eax
   140042eb5:	pop    rsp
   140042eb6:	add    bh,bh
   140042eb8:	lahf   
   140042eb9:	pop    rbx
   140042eba:	add    bh,bh
   140042ebc:	popf   
   140042ebd:	pop    rdx
   140042ebe:	add    edi,edi
   140042ec0:	pushf  
   140042ec1:	pop    rcx
   140042ec2:	add    edi,edi
   140042ec4:	fwait
   140042ec5:	pop    rax
   140042ec6:	add    edi,edi
   140042ec8:	cdq    
   140042ec9:	push   rdi
   140042eca:	add    edi,edi
   140042ecc:	cwde   
   140042ecd:	push   rdi
   140042ece:	add    edi,edi
   140042ed0:	xchg   esi,eax
   140042ed1:	push   rsi
   140042ed2:	add    edi,edi
   140042ed4:	xchg   ebp,eax
   140042ed5:	push   rbp
   140042ed6:	add    al,0xff
   140042ed8:	xchg   esp,eax
   140042ed9:	push   rsp
   140042eda:	add    al,0xff
   140042edc:	xchg   edx,eax
   140042edd:	push   rbx
   140042ede:	add    al,0xff
   140042ee0:	xchg   ecx,eax
   140042ee1:	push   rdx
   140042ee2:	add    al,0xff
   140042ee4:	(bad)  
   140042ee5:	push   rdx
   140042ee6:	add    al,0xff
   140042ee8:	mov    ss,WORD PTR [rcx+0x4]
   140042eeb:	dec    DWORD PTR [rax+rdx*2+0x4f8bff05]
   140042ef2:	add    eax,0x54e8aff
   140042ef7:	lahf   
	...
   140042f10:	mov    bl,0x67
   140042f12:	add    BYTE PTR [rax],ah
   140042f14:	mov    ch,0x6a
   140042f16:	add    edi,edi
   140042f18:	mov    ah,0x75
   140042f1a:	sbb    edi,edi
   140042f1c:	mov    ah,0x78
   140042f1e:	sbb    edi,edi
   140042f20:	test   eax,0x3fff2271
   140042f25:	sub    eax,0x2320ff55
   140042f2a:	movabs al,ds:0xecc830ffdd6129ff
   140042f33:	jmp    FWORD PTR [rsi]
   140042f35:	scas   al,BYTE PTR es:[rdi]
   140042f36:	jmp    0x140042f37
   140042f38:	(bad)  
   140042f39:	rex.RX (bad) 
   140042f3b:	call   FWORD PTR [rax+0x3d]
   140042f3e:	push   0x67b3ff
   140042f43:	push   QWORD PTR [rdx-0x4e00ff99]
   140042f49:	data16 add bh,bh
   140042f4c:	mov    al,0x65
   140042f4e:	add    bh,bh
   140042f50:	scas   al,BYTE PTR es:[rdi]
   140042f51:	fs add edi,edi
   140042f54:	lods   eax,DWORD PTR ds:[rsi]
   140042f55:	movsxd eax,DWORD PTR [rcx]
   140042f57:	jmp    FWORD PTR [rbx-0x5500fe9e]
   140042f5d:	(bad)  {k1}{z}
   140042f62:	add    edi,edi
   140042f64:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140042f65:	(bad)  
   140042f66:	add    edi,edi
   140042f68:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140042f69:	pop    rdi
   140042f6a:	add    bh,bh
   140042f6c:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140042f6d:	pop    rsi
   140042f6e:	add    bh,bh
   140042f70:	movabs ds:0xa0ff025da1ff025d,eax
   140042f79:	pop    rsp
   140042f7a:	add    bh,bh
   140042f7c:	lahf   
   140042f7d:	pop    rbx
   140042f7e:	add    bh,bh
   140042f80:	popf   
   140042f81:	pop    rdx
   140042f82:	add    edi,edi
   140042f84:	pushf  
   140042f85:	pop    rcx
   140042f86:	add    edi,edi
   140042f88:	fwait
   140042f89:	pop    rax
   140042f8a:	add    edi,edi
   140042f8c:	cdq    
   140042f8d:	push   rdi
   140042f8e:	add    edi,edi
   140042f90:	cwde   
   140042f91:	push   rdi
   140042f92:	add    edi,edi
   140042f94:	xchg   esi,eax
   140042f95:	push   rsi
   140042f96:	add    edi,edi
   140042f98:	xchg   ebp,eax
   140042f99:	push   rbp
   140042f9a:	add    al,0xff
   140042f9c:	xchg   esp,eax
   140042f9d:	push   rsp
   140042f9e:	add    al,0xff
   140042fa0:	xchg   edx,eax
   140042fa1:	push   rbx
   140042fa2:	add    al,0xff
   140042fa4:	xchg   ecx,eax
   140042fa5:	push   rdx
   140042fa6:	add    al,0xff
   140042fa8:	(bad)  
   140042fa9:	push   rdx
   140042faa:	add    al,0xff
   140042fac:	mov    ss,WORD PTR [rcx+0x4]
   140042faf:	dec    DWORD PTR [rax+rdx*2+0x4f8bff05]
   140042fb6:	add    eax,0x30
	...
   140042fd3:	add    BYTE PTR [rbx-0x4c9fff99],dh
   140042fd9:	addr32 add bh,bh
   140042fdc:	scas   eax,DWORD PTR es:[rdi]
   140042fdd:	addr32 add eax,0x1477b7ff
   140042fe3:	inc    DWORD PTR [rbp+0x1eff335a]
   140042fe9:	(bad)  
   140042fea:	mov    ?,edi
   140042fec:	sub    DWORD PTR [rbp-0x29],ebx
   140042fef:	push   QWORD PTR [rcx]
   140042ff1:	fldlg2 
   140042ff3:	jmp    FWORD PTR [rsi]
   140042ff5:	mov    dl,0xeb
   140042ff7:	jmp    QWORD PTR [rsi]
   140042ff9:	cmp    esi,eax
   140042ffb:	inc    DWORD PTR [rbp-0x4c00ceaf]
   140043001:	addr32 add bh,bh
   140043004:	mov    bl,0x67
   140043006:	add    bh,bh
   140043008:	mov    dl,0x67
   14004300a:	add    bh,bh
   14004300c:	mov    cl,0x66
   14004300e:	add    bh,bh
   140043010:	mov    al,0x65
   140043012:	add    bh,bh
   140043014:	scas   al,BYTE PTR es:[rdi]
   140043015:	fs add edi,edi
   140043018:	lods   eax,DWORD PTR ds:[rsi]
   140043019:	movsxd eax,DWORD PTR [rcx]
   14004301b:	jmp    FWORD PTR [rbx-0x5500fe9e]
   140043021:	(bad)  {k1}{z}
   140043026:	add    edi,edi
   140043028:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140043029:	(bad)  
   14004302a:	add    edi,edi
   14004302c:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004302d:	pop    rdi
   14004302e:	add    bh,bh
   140043030:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140043031:	pop    rsi
   140043032:	add    bh,bh
   140043034:	movabs ds:0xa0ff025da1ff025d,eax
   14004303d:	pop    rsp
   14004303e:	add    bh,bh
   140043040:	lahf   
   140043041:	pop    rbx
   140043042:	add    bh,bh
   140043044:	popf   
   140043045:	pop    rdx
   140043046:	add    edi,edi
   140043048:	pushf  
   140043049:	pop    rcx
   14004304a:	add    edi,edi
   14004304c:	fwait
   14004304d:	pop    rax
   14004304e:	add    edi,edi
   140043050:	cdq    
   140043051:	push   rdi
   140043052:	add    edi,edi
   140043054:	cwde   
   140043055:	push   rdi
   140043056:	add    edi,edi
   140043058:	xchg   esi,eax
   140043059:	push   rsi
   14004305a:	add    edi,edi
   14004305c:	xchg   ebp,eax
   14004305d:	push   rbp
   14004305e:	add    al,0xff
   140043060:	xchg   esp,eax
   140043061:	push   rsp
   140043062:	add    al,0xff
   140043064:	xchg   edx,eax
   140043065:	push   rbx
   140043066:	add    al,0xff
   140043068:	xchg   ecx,eax
   140043069:	push   rdx
   14004306a:	add    al,0xff
   14004306c:	(bad)  
   14004306d:	push   rdx
   14004306e:	add    al,0xff
   140043070:	mov    ss,WORD PTR [rcx+0x4]
   140043073:	add    BYTE PTR [rax],0x0
	...
   140043096:	add    BYTE PTR [rax],al
   140043098:	mov    bl,0x67
   14004309a:	add    BYTE PTR [rax-0x4d],ah
   14004309d:	addr32 add bh,bh
   1400430a0:	mov    bl,0x68
   1400430a2:	add    bh,bh
   1400430a4:	mov    ah,0x78
   1400430a6:	(bad)  
   1400430a7:	jmp    FWORD PTR [rdi]
   1400430a9:	(bad)  
   1400430aa:	jo     0x1400430ab
   1400430ac:	sub    BYTE PTR [rbp-0x31],dl
   1400430af:	push   QWORD PTR [rcx]
   1400430b1:	fsubp  st(4),st
   1400430b3:	jmp    FWORD PTR [rip+0x2cffe9a9]        # 0x16d041a62
   1400430b9:	(bad)  
   1400430ba:	test   eax,0x67b3ff
   1400430bf:	push   QWORD PTR [rbx-0x4c00ff99]
   1400430c5:	addr32 add bh,bh
   1400430c8:	mov    bl,0x67
   1400430ca:	add    bh,bh
   1400430cc:	mov    dl,0x67
   1400430ce:	add    bh,bh
   1400430d0:	mov    cl,0x66
   1400430d2:	add    bh,bh
   1400430d4:	mov    al,0x65
   1400430d6:	add    bh,bh
   1400430d8:	scas   al,BYTE PTR es:[rdi]
   1400430d9:	fs add edi,edi
   1400430dc:	lods   eax,DWORD PTR ds:[rsi]
   1400430dd:	movsxd eax,DWORD PTR [rcx]
   1400430df:	jmp    FWORD PTR [rbx-0x5500fe9e]
   1400430e5:	(bad)  {k1}{z}
   1400430ea:	add    edi,edi
   1400430ec:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400430ed:	(bad)  
   1400430ee:	add    edi,edi
   1400430f0:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400430f1:	pop    rdi
   1400430f2:	add    bh,bh
   1400430f4:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400430f5:	pop    rsi
   1400430f6:	add    bh,bh
   1400430f8:	movabs ds:0xa0ff025da1ff025d,eax
   140043101:	pop    rsp
   140043102:	add    bh,bh
   140043104:	lahf   
   140043105:	pop    rbx
   140043106:	add    bh,bh
   140043108:	popf   
   140043109:	pop    rdx
   14004310a:	add    edi,edi
   14004310c:	pushf  
   14004310d:	pop    rcx
   14004310e:	add    edi,edi
   140043110:	fwait
   140043111:	pop    rax
   140043112:	add    edi,edi
   140043114:	cdq    
   140043115:	push   rdi
   140043116:	add    edi,edi
   140043118:	cwde   
   140043119:	push   rdi
   14004311a:	add    edi,edi
   14004311c:	xchg   esi,eax
   14004311d:	push   rsi
   14004311e:	add    edi,edi
   140043120:	xchg   ebp,eax
   140043121:	push   rbp
   140043122:	add    al,0xff
   140043124:	xchg   esp,eax
   140043125:	push   rsp
   140043126:	add    al,0xff
   140043128:	xchg   edx,eax
   140043129:	push   rbx
   14004312a:	add    al,0xff
   14004312c:	xchg   ecx,eax
   14004312d:	push   rdx
   14004312e:	add    al,0x80
	...
   14004315c:	mov    bl,0x67
   14004315e:	add    BYTE PTR [rax],ah
   140043160:	mov    bl,0x67
   140043162:	add    BYTE PTR [rdi-0x10f8934c],bl
   140043168:	push   0x26ff4948
   14004316d:	rex.WX ret 
   14004316f:	push   QWORD PTR [rcx]
   140043171:	fsubp  st(4),st
   140043173:	jmp    FWORD PTR [rcx*4+0x4161ffe1]
   14004317a:	pop    rdi
   14004317b:	push   QWORD PTR [rbx-0x4c00ff99]
   140043181:	addr32 add bh,bh
   140043184:	mov    bl,0x67
   140043186:	add    bh,bh
   140043188:	mov    bl,0x67
   14004318a:	add    bh,bh
   14004318c:	mov    bl,0x67
   14004318e:	add    bh,bh
   140043190:	mov    dl,0x67
   140043192:	add    bh,bh
   140043194:	mov    cl,0x66
   140043196:	add    bh,bh
   140043198:	mov    al,0x65
   14004319a:	add    bh,bh
   14004319c:	scas   al,BYTE PTR es:[rdi]
   14004319d:	fs add edi,edi
   1400431a0:	lods   eax,DWORD PTR ds:[rsi]
   1400431a1:	movsxd eax,DWORD PTR [rcx]
   1400431a3:	jmp    FWORD PTR [rbx-0x5500fe9e]
   1400431a9:	(bad)  {k1}{z}
   1400431ae:	add    edi,edi
   1400431b0:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400431b1:	(bad)  
   1400431b2:	add    edi,edi
   1400431b4:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400431b5:	pop    rdi
   1400431b6:	add    bh,bh
   1400431b8:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400431b9:	pop    rsi
   1400431ba:	add    bh,bh
   1400431bc:	movabs ds:0xa0ff025da1ff025d,eax
   1400431c5:	pop    rsp
   1400431c6:	add    bh,bh
   1400431c8:	lahf   
   1400431c9:	pop    rbx
   1400431ca:	add    bh,bh
   1400431cc:	popf   
   1400431cd:	pop    rdx
   1400431ce:	add    edi,edi
   1400431d0:	pushf  
   1400431d1:	pop    rcx
   1400431d2:	add    edi,edi
   1400431d4:	fwait
   1400431d5:	pop    rax
   1400431d6:	add    edi,edi
   1400431d8:	cdq    
   1400431d9:	push   rdi
   1400431da:	add    edi,edi
   1400431dc:	cwde   
   1400431dd:	push   rdi
   1400431de:	add    edi,edi
   1400431e0:	xchg   esi,eax
   1400431e1:	push   rsi
   1400431e2:	add    ebp,edi
   1400431e4:	xchg   ebp,eax
   1400431e5:	push   rbp
   1400431e6:	add    al,0x9f
   1400431e8:	xchg   esp,eax
   1400431e9:	push   rsp
   1400431ea:	add    al,0x30
	...
   140043228:	xchg   ebx,eax
   140043229:	(bad)  
   14004322a:	cs lahf 
   14004322c:	and    ebp,DWORD PTR [rdi]
   14004322e:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004322f:	push   QWORD PTR [rcx]
   140043231:	fldlg2 
   140043233:	jmp    FWORD PTR [rax]
   140043235:	pop    rbx
   140043236:	(bad)  
   140043237:	call   FWORD PTR [rdi]
   140043239:	and    bl,BYTE PTR [rax+riz*1+0x0]
	...
   1400432e8:	int3   
   1400432e9:	lea    ebp,[rsi]
   1400432eb:	adc    BYTE PTR [rdi+0x3b],cl
   1400432ee:	push   0xffffffffd86f2aef
   1400432f3:	jmp    QWORD PTR [rax+rsi*1]
   1400432f6:	mov    eax,0x8f
	...
   1400433ab:	add    BYTE PTR [rbp+0x3f],bl
   1400433ae:	xor    BYTE PTR [rip+0x70831d],r11b        # 0x14074b6d2
	...
   140043df5:	add    BYTE PTR [rax],al
   140043df7:	add    BYTE PTR [rax],ch
   140043df9:	add    BYTE PTR [rax],al
   140043dfb:	add    BYTE PTR [rax+0x0],al
   140043dfe:	add    BYTE PTR [rax],al
   140043e00:	add    BYTE PTR [rax],0x0
   140043e03:	add    BYTE PTR [rcx],al
   140043e05:	add    BYTE PTR [rax],ah
   140043e07:	add    BYTE PTR [rax],al
   140043e09:	add    BYTE PTR [rax],al
   140043e0b:	add    BYTE PTR [rax],al
   140043e0d:	push   rax
	...
   140044052:	add    BYTE PTR [rax],al
   140044054:	mov    cl,BYTE PTR [rdi+0x5]
   140044057:	rex mov DWORD PTR [rsi+0x5],ecx
   14004405b:	lahf   
   14004405c:	mov    BYTE PTR [rbp+0x5],cl
   14004405f:	out    dx,eax
   140044060:	xchg   DWORD PTR [rbp+rax*1-0x1],ecx
   140044064:	xchg   BYTE PTR [rbp+rax*1-0x1],cl
   140044068:	test   BYTE PTR [rbx+0x5],cl
   14004406b:	inc    DWORD PTR [rbx+rcx*2+0x4a82ff06]
   140044072:	(bad)  
   140044073:	inc    DWORD PTR [rcx-0x7f00f9b7]
   140044079:	rex.WB (bad) 
   14004407b:	(bad)  
   14004407c:	jg     0x1400440c6
   14004407e:	(bad)  
   14004407f:	(bad)  
   140044080:	jle    0x1400440c9
   140044082:	(bad)  
   140044083:	(bad)  
   140044084:	jge    0x1400440cd
   140044086:	(bad)  
   140044087:	(bad)  
   140044088:	jl     0x1400440d0
   14004408a:	(bad)  
   14004408b:	(bad)  
   14004408c:	jnp    0x1400440d4
   14004408e:	(bad)  
   14004408f:	(bad)  
   140044090:	jp     0x1400440d7
   140044092:	(bad)  
   140044093:	(bad)  
   140044094:	jns    0x1400440da
   140044096:	(bad)  
   140044097:	(bad)  
   140044098:	js     0x1400440de
   14004409a:	(bad)  
   14004409b:	push   QWORD PTR [rdi+0x43]
   14004409e:	(bad)  
   14004409f:	push   QWORD PTR [rsi+0x43]
   1400440a2:	(bad)  
   1400440a3:	push   QWORD PTR [rbp+0x42]
   1400440a6:	(bad)  
   1400440a7:	push   QWORD PTR [rcx+rax*2+0x7]
   1400440ab:	push   QWORD PTR [rbx+0x41]
   1400440ae:	or     bh,bh
   1400440b0:	jb     0x1400440f2
   1400440b2:	or     bh,bh
   1400440b4:	jno    0x1400440f5
   1400440b6:	or     bh,bh
   1400440b8:	jo     0x1400440f9
   1400440ba:	or     bh,bh
   1400440bc:	outs   dx,BYTE PTR ds:[rsi]
   1400440bd:	ds or  bh,bh
   1400440c0:	outs   dx,BYTE PTR ds:[rsi]
   1400440c1:	ds or  bh,bh
   1400440c4:	ins    BYTE PTR es:[rdi],dx
   1400440c5:	cmp    eax,0x3c6bff08
   1400440ca:	or     bh,bh
   1400440cc:	push   0x3c
   1400440ce:	or     edi,edi
   1400440d0:	imul   edi,DWORD PTR [rbx],0x3a68ff09
   1400440d6:	or     edi,edi
   1400440d8:	cmp    cl,BYTE PTR [ecx]
   1400440db:	jmp    QWORD PTR [rsi+0x39]
   1400440de:	or     edi,edi
   1400440e0:	cmp    WORD PTR [rcx],cx
   1400440e3:	jmp    QWORD PTR [rsi+0x39]
   1400440e6:	or     edi,edi
   1400440e8:	cmp    WORD PTR [rcx],cx
   1400440eb:	jmp    QWORD PTR [rsi+0x39]
   1400440ee:	or     edi,edi
   1400440f0:	cmp    WORD PTR [rcx],cx
   1400440f3:	jmp    QWORD PTR [rsi+0x39]
   1400440f6:	or     edi,edi
   1400440f8:	cmp    WORD PTR [rcx],cx
   1400440fb:	jmp    QWORD PTR [rsi+0x39]
   1400440fe:	or     edi,edi
   140044100:	cmp    WORD PTR [rcx],cx
   140044103:	out    dx,eax
   140044104:	cmp    WORD PTR [rcx],cx
   140044107:	lahf   
   140044108:	cmp    WORD PTR [rcx],cx
   14004410b:	add    BYTE PTR [rax],al
	...
   14004414a:	add    BYTE PTR [rax],al
   14004414c:	lea    edx,[rax+0x4]
   14004414f:	adc    BYTE PTR [rax+rdx*2+0x4f8baf05],cl
   140044156:	add    eax,0x54e8aff
   14004415b:	dec    DWORD PTR [rcx-0x7700fab2]
   140044161:	rex.WRB add rax,0x54c87ff
   140044167:	inc    DWORD PTR [rsi-0x7b00fab4]
   14004416d:	rex.WXB add rax,0x64b84ff
   140044173:	inc    DWORD PTR [rdx-0x7e00f9b6]
   140044179:	rex.WB (bad) 
   14004417b:	inc    DWORD PTR [rax+0x7fff0649]
   140044181:	rex.W (bad) 
   140044183:	(bad)  
   140044184:	jle    0x1400441cd
   140044186:	(bad)  
   140044187:	(bad)  
   140044188:	jge    0x1400441d1
   14004418a:	(bad)  
   14004418b:	(bad)  
   14004418c:	jl     0x1400441d4
   14004418e:	(bad)  
   14004418f:	(bad)  
   140044190:	jnp    0x1400441d8
   140044192:	(bad)  
   140044193:	(bad)  
   140044194:	jp     0x1400441db
   140044196:	(bad)  
   140044197:	(bad)  
   140044198:	jns    0x1400441de
   14004419a:	(bad)  
   14004419b:	(bad)  
   14004419c:	js     0x1400441e2
   14004419e:	(bad)  
   14004419f:	push   QWORD PTR [rdi+0x43]
   1400441a2:	(bad)  
   1400441a3:	push   QWORD PTR [rsi+0x43]
   1400441a6:	(bad)  
   1400441a7:	push   QWORD PTR [rbp+0x42]
   1400441aa:	(bad)  
   1400441ab:	push   QWORD PTR [rcx+rax*2+0x7]
   1400441af:	push   QWORD PTR [rbx+0x41]
   1400441b2:	or     bh,bh
   1400441b4:	jb     0x1400441f6
   1400441b6:	or     bh,bh
   1400441b8:	jno    0x1400441f9
   1400441ba:	or     bh,bh
   1400441bc:	jo     0x1400441fd
   1400441be:	or     bh,bh
   1400441c0:	outs   dx,BYTE PTR ds:[rsi]
   1400441c1:	ds or  bh,bh
   1400441c4:	outs   dx,BYTE PTR ds:[rsi]
   1400441c5:	ds or  bh,bh
   1400441c8:	ins    BYTE PTR es:[rdi],dx
   1400441c9:	cmp    eax,0x3c6bff08
   1400441ce:	or     bh,bh
   1400441d0:	push   0x3c
   1400441d2:	or     edi,edi
   1400441d4:	imul   edi,DWORD PTR [rbx],0x3a68ff09
   1400441da:	or     edi,edi
   1400441dc:	cmp    cl,BYTE PTR [ecx]
   1400441df:	jmp    QWORD PTR [rsi+0x39]
   1400441e2:	or     edi,edi
   1400441e4:	cmp    WORD PTR [rcx],cx
   1400441e7:	jmp    QWORD PTR [rsi+0x39]
   1400441ea:	or     edi,edi
   1400441ec:	cmp    WORD PTR [rcx],cx
   1400441ef:	jmp    QWORD PTR [rsi+0x39]
   1400441f2:	or     edi,edi
   1400441f4:	cmp    WORD PTR [rcx],cx
   1400441f7:	jmp    QWORD PTR [rsi+0x39]
   1400441fa:	or     edi,edi
   1400441fc:	cmp    WORD PTR [rcx],cx
   1400441ff:	jmp    QWORD PTR [rsi+0x39]
   140044202:	or     edi,edi
   140044204:	cmp    WORD PTR [rcx],cx
   140044207:	jmp    QWORD PTR [rsi+0x39]
   14004420a:	or     edi,edi
   14004420c:	cmp    WORD PTR [rcx],cx
   14004420f:	scas   eax,DWORD PTR es:[rdi]
   140044210:	cmp    WORD PTR [rcx],cx
   140044213:	adc    BYTE PTR [rax],al
	...
   140044245:	add    BYTE PTR [rax],al
   140044247:	add    BYTE PTR [rdi-0x71cffbae],cl
   14004424d:	push   rcx
   14004424e:	add    al,0xef
   140044250:	lea    edx,[rax+0x4]
   140044253:	dec    DWORD PTR [rax+rdx*2+0x4f8bff05]
   14004425a:	add    eax,0x54e8aff
   14004425f:	dec    DWORD PTR [rcx-0x7700fab2]
   140044265:	rex.WRB add rax,0x54c87ff
   14004426b:	inc    DWORD PTR [rsi-0x7b00fab4]
   140044271:	rex.WXB add rax,0x64b84ff
   140044277:	inc    DWORD PTR [rdx-0x7e00f9b6]
   14004427d:	rex.WB (bad) 
   14004427f:	inc    DWORD PTR [rax+0x7fff0649]
   140044285:	rex.W (bad) 
   140044287:	(bad)  
   140044288:	jle    0x1400442d1
   14004428a:	(bad)  
   14004428b:	(bad)  
   14004428c:	jge    0x1400442d5
   14004428e:	(bad)  
   14004428f:	(bad)  
   140044290:	jl     0x1400442d8
   140044292:	(bad)  
   140044293:	(bad)  
   140044294:	jnp    0x1400442dc
   140044296:	(bad)  
   140044297:	(bad)  
   140044298:	jp     0x1400442df
   14004429a:	(bad)  
   14004429b:	(bad)  
   14004429c:	jns    0x1400442e2
   14004429e:	(bad)  
   14004429f:	(bad)  
   1400442a0:	js     0x1400442e6
   1400442a2:	(bad)  
   1400442a3:	push   QWORD PTR [rdi+0x43]
   1400442a6:	(bad)  
   1400442a7:	push   QWORD PTR [rsi+0x43]
   1400442aa:	(bad)  
   1400442ab:	push   QWORD PTR [rbp+0x42]
   1400442ae:	(bad)  
   1400442af:	push   QWORD PTR [rcx+rax*2+0x7]
   1400442b3:	push   QWORD PTR [rbx+0x41]
   1400442b6:	or     bh,bh
   1400442b8:	jb     0x1400442fa
   1400442ba:	or     bh,bh
   1400442bc:	jno    0x1400442fd
   1400442be:	or     bh,bh
   1400442c0:	jo     0x140044301
   1400442c2:	or     bh,bh
   1400442c4:	outs   dx,BYTE PTR ds:[rsi]
   1400442c5:	ds or  bh,bh
   1400442c8:	outs   dx,BYTE PTR ds:[rsi]
   1400442c9:	ds or  bh,bh
   1400442cc:	ins    BYTE PTR es:[rdi],dx
   1400442cd:	cmp    eax,0x3c6bff08
   1400442d2:	or     bh,bh
   1400442d4:	push   0x3c
   1400442d6:	or     edi,edi
   1400442d8:	imul   edi,DWORD PTR [rbx],0x3a68ff09
   1400442de:	or     edi,edi
   1400442e0:	cmp    cl,BYTE PTR [ecx]
   1400442e3:	jmp    QWORD PTR [rsi+0x39]
   1400442e6:	or     edi,edi
   1400442e8:	cmp    WORD PTR [rcx],cx
   1400442eb:	jmp    QWORD PTR [rsi+0x39]
   1400442ee:	or     edi,edi
   1400442f0:	cmp    WORD PTR [rcx],cx
   1400442f3:	jmp    QWORD PTR [rsi+0x39]
   1400442f6:	or     edi,edi
   1400442f8:	cmp    WORD PTR [rcx],cx
   1400442fb:	jmp    QWORD PTR [rsi+0x39]
   1400442fe:	or     edi,edi
   140044300:	cmp    WORD PTR [rcx],cx
   140044303:	jmp    QWORD PTR [rsi+0x39]
   140044306:	or     edi,edi
   140044308:	cmp    WORD PTR [rcx],cx
   14004430b:	jmp    QWORD PTR [rsi+0x39]
   14004430e:	or     edi,edi
   140044310:	cmp    WORD PTR [rcx],cx
   140044313:	out    dx,eax
   140044314:	cmp    WORD PTR [rcx],cx
   140044317:	xor    BYTE PTR [rax],al
	...
   140044341:	add    BYTE PTR [rax],al
   140044343:	add    BYTE PTR [rcx-0x6feffbad],dl
   140044349:	push   rdx
   14004434a:	add    al,0xef
   14004434c:	(bad)  
   14004434d:	push   rdx
   14004434e:	add    al,0xff
   140044350:	mov    ss,WORD PTR [rcx+0x4]
   140044353:	dec    DWORD PTR [rbp-0x7300fbb0]
   140044359:	push   rax
   14004435a:	add    eax,0x54f8bff
   14004435f:	dec    DWORD PTR [rdx-0x7600fab2]
   140044365:	rex.WRX add rax,0x54d88ff
   14004436b:	inc    DWORD PTR [rdi-0x7900fab4]
   140044371:	rex.WR add rax,0x54b84ff
   140044377:	inc    DWORD PTR [rbx+rcx*2+0x4a82ff06]
   14004437e:	(bad)  
   14004437f:	inc    DWORD PTR [rcx-0x7f00f9b7]
   140044385:	rex.WB (bad) 
   140044387:	(bad)  
   140044388:	jg     0x1400443d2
   14004438a:	(bad)  
   14004438b:	(bad)  
   14004438c:	jle    0x1400443d5
   14004438e:	(bad)  
   14004438f:	(bad)  
   140044390:	jge    0x1400443d9
   140044392:	(bad)  
   140044393:	(bad)  
   140044394:	jl     0x1400443dc
   140044396:	(bad)  
   140044397:	(bad)  
   140044398:	jnp    0x1400443e0
   14004439a:	(bad)  
   14004439b:	(bad)  
   14004439c:	jp     0x1400443e3
   14004439e:	(bad)  
   14004439f:	(bad)  
   1400443a0:	jns    0x1400443e6
   1400443a2:	(bad)  
   1400443a3:	(bad)  
   1400443a4:	js     0x1400443ea
   1400443a6:	(bad)  
   1400443a7:	push   QWORD PTR [rdi+0x43]
   1400443aa:	(bad)  
   1400443ab:	push   QWORD PTR [rsi+0x43]
   1400443ae:	(bad)  
   1400443af:	push   QWORD PTR [rbp+0x42]
   1400443b2:	(bad)  
   1400443b3:	push   QWORD PTR [rcx+rax*2+0x7]
   1400443b7:	push   QWORD PTR [rbx+0x41]
   1400443ba:	or     bh,bh
   1400443bc:	jb     0x1400443fe
   1400443be:	or     bh,bh
   1400443c0:	jno    0x140044401
   1400443c2:	or     bh,bh
   1400443c4:	jo     0x140044405
   1400443c6:	or     bh,bh
   1400443c8:	outs   dx,BYTE PTR ds:[rsi]
   1400443c9:	ds or  bh,bh
   1400443cc:	outs   dx,BYTE PTR ds:[rsi]
   1400443cd:	ds or  bh,bh
   1400443d0:	ins    BYTE PTR es:[rdi],dx
   1400443d1:	cmp    eax,0x3c6bff08
   1400443d6:	or     bh,bh
   1400443d8:	push   0x3c
   1400443da:	or     edi,edi
   1400443dc:	imul   edi,DWORD PTR [rbx],0x3a68ff09
   1400443e2:	or     edi,edi
   1400443e4:	cmp    cl,BYTE PTR [ecx]
   1400443e7:	jmp    QWORD PTR [rsi+0x39]
   1400443ea:	or     edi,edi
   1400443ec:	cmp    WORD PTR [rcx],cx
   1400443ef:	jmp    QWORD PTR [rsi+0x39]
   1400443f2:	or     edi,edi
   1400443f4:	cmp    WORD PTR [rcx],cx
   1400443f7:	jmp    QWORD PTR [rsi+0x39]
   1400443fa:	or     edi,edi
   1400443fc:	cmp    WORD PTR [rcx],cx
   1400443ff:	jmp    QWORD PTR [rsi+0x39]
   140044402:	or     edi,edi
   140044404:	cmp    WORD PTR [rcx],cx
   140044407:	jmp    QWORD PTR [rsi+0x39]
   14004440a:	or     edi,edi
   14004440c:	cmp    WORD PTR [rcx],cx
   14004440f:	jmp    QWORD PTR [rsi+0x39]
   140044412:	or     edi,edi
   140044414:	cmp    WORD PTR [rcx],cx
   140044417:	out    dx,eax
   140044418:	cmp    WORD PTR [rcx],cx
   14004441b:	adc    BYTE PTR [rax],al
	...
   140044441:	add    BYTE PTR [rax],al
   140044443:	add    BYTE PTR [rdx-0x6e50fbac],dl
   140044449:	push   rbx
   14004444a:	add    al,0xff
   14004444c:	nop
   14004444d:	push   rdx
   14004444e:	add    al,0xff
   140044450:	(bad)  
   140044451:	push   rdx
   140044452:	add    al,0xff
   140044454:	mov    ss,WORD PTR [rcx+0x4]
   140044457:	dec    DWORD PTR [rbp-0x7300fbb0]
   14004445d:	push   rax
   14004445e:	add    eax,0x54f8bff
   140044463:	dec    DWORD PTR [rdx-0x7600fab2]
   140044469:	rex.WRX add rax,0x54d88ff
   14004446f:	inc    DWORD PTR [rdi-0x7900fab4]
   140044475:	rex.WR add rax,0x153352ff
   14004447b:	call   QWORD PTR [rdx+0x33]
   14004447e:	adc    eax,0x153352ff
   140044483:	call   QWORD PTR [rdx+0x33]
   140044486:	adc    eax,0x153352ff
   14004448b:	call   QWORD PTR [rdx+0x33]
   14004448e:	adc    eax,0x153352ff
   140044493:	call   QWORD PTR [rdx+0x33]
   140044496:	adc    eax,0x153352ff
   14004449b:	call   QWORD PTR [rdx+0x33]
   14004449e:	adc    eax,0x153352ff
   1400444a3:	call   QWORD PTR [rdx+0x33]
   1400444a6:	adc    eax,0x153352ff
   1400444ab:	call   QWORD PTR [rdx+0x33]
   1400444ae:	adc    eax,0x153352ff
   1400444b3:	call   QWORD PTR [rdx+0x33]
   1400444b6:	adc    eax,0x153352ff
   1400444bb:	call   QWORD PTR [rdx+0x33]
   1400444be:	adc    eax,0x153352ff
   1400444c3:	call   QWORD PTR [rdx+0x33]
   1400444c6:	adc    eax,0x153352ff
   1400444cb:	call   QWORD PTR [rdx+0x33]
   1400444ce:	adc    eax,0x153352ff
   1400444d3:	call   QWORD PTR [rdx+0x33]
   1400444d6:	adc    eax,0x153352ff
   1400444db:	call   QWORD PTR [rdx+0x33]
   1400444de:	adc    eax,0x153352ff
   1400444e3:	call   QWORD PTR [rdx+0x33]
   1400444e6:	adc    eax,0x93a67ff
   1400444eb:	jmp    QWORD PTR [rsi+0x39]
   1400444ee:	or     edi,edi
   1400444f0:	cmp    WORD PTR [rcx],cx
   1400444f3:	jmp    QWORD PTR [rsi+0x39]
   1400444f6:	or     edi,edi
   1400444f8:	cmp    WORD PTR [rcx],cx
   1400444fb:	jmp    QWORD PTR [rsi+0x39]
   1400444fe:	or     edi,edi
   140044500:	cmp    WORD PTR [rcx],cx
   140044503:	jmp    QWORD PTR [rsi+0x39]
   140044506:	or     edi,edi
   140044508:	cmp    WORD PTR [rcx],cx
   14004450b:	jmp    QWORD PTR [rsi+0x39]
   14004450e:	or     edi,edi
   140044510:	cmp    WORD PTR [rcx],cx
   140044513:	jmp    QWORD PTR [rsi+0x39]
   140044516:	or     edi,edi
   140044518:	cmp    WORD PTR [rcx],cx
   14004451b:	scas   eax,DWORD PTR es:[rdi]
	...
   140044540:	xchg   ebp,eax
   140044541:	push   rbp
   140044542:	add    al,0x40
   140044544:	xchg   ebx,eax
   140044545:	push   rsp
   140044546:	add    al,0xff
   140044548:	xchg   edx,eax
   140044549:	push   rsp
   14004454a:	add    al,0xff
   14004454c:	xchg   ecx,eax
   14004454d:	push   rbx
   14004454e:	add    al,0xff
   140044550:	nop
   140044551:	push   rdx
   140044552:	add    al,0xff
   140044554:	(bad)  
   140044555:	push   rdx
   140044556:	add    al,0xff
   140044558:	mov    ss,WORD PTR [rcx+0x4]
   14004455b:	dec    DWORD PTR [rbp-0x7300fbb0]
   140044561:	push   rax
   140044562:	add    eax,0x54f8bff
   140044567:	dec    DWORD PTR [rdx-0x7600fab2]
   14004456d:	rex.WRX add rax,0x54d88ff
   140044573:	inc    DWORD PTR [rdi+0x52ff054c]
   140044579:	xor    edx,DWORD PTR [rip+0x153352ff]        # 0x15537987e
   14004457f:	call   QWORD PTR [rdx+0x33]
   140044582:	adc    eax,0x153352ff
   140044587:	call   QWORD PTR [rdx+0x33]
   14004458a:	adc    eax,0x153352ff
   14004458f:	call   QWORD PTR [rdx+0x33]
   140044592:	adc    eax,0x153352ff
   140044597:	call   QWORD PTR [rdx+0x33]
   14004459a:	adc    eax,0x153352ff
   14004459f:	call   QWORD PTR [rdx+0x33]
   1400445a2:	adc    eax,0x153352ff
   1400445a7:	call   QWORD PTR [rdx+0x33]
   1400445aa:	adc    eax,0x153352ff
   1400445af:	call   QWORD PTR [rdx+0x33]
   1400445b2:	adc    eax,0x153352ff
   1400445b7:	call   QWORD PTR [rdx+0x33]
   1400445ba:	adc    eax,0x153352ff
   1400445bf:	call   QWORD PTR [rdx+0x33]
   1400445c2:	adc    eax,0x153352ff
   1400445c7:	call   QWORD PTR [rdx+0x33]
   1400445ca:	adc    eax,0x153352ff
   1400445cf:	call   QWORD PTR [rdx+0x33]
   1400445d2:	adc    eax,0x153352ff
   1400445d7:	call   QWORD PTR [rdx+0x33]
   1400445da:	adc    eax,0x153352ff
   1400445df:	call   QWORD PTR [rdx+0x33]
   1400445e2:	adc    eax,0x153352ff
   1400445e7:	jmp    FWORD PTR [rax+0x3a]
   1400445ea:	or     edi,edi
   1400445ec:	cmp    cl,BYTE PTR [ecx]
   1400445ef:	jmp    QWORD PTR [rsi+0x39]
   1400445f2:	or     edi,edi
   1400445f4:	cmp    WORD PTR [rcx],cx
   1400445f7:	jmp    QWORD PTR [rsi+0x39]
   1400445fa:	or     edi,edi
   1400445fc:	cmp    WORD PTR [rcx],cx
   1400445ff:	jmp    QWORD PTR [rsi+0x39]
   140044602:	or     edi,edi
   140044604:	cmp    WORD PTR [rcx],cx
   140044607:	jmp    QWORD PTR [rsi+0x39]
   14004460a:	or     edi,edi
   14004460c:	cmp    WORD PTR [rcx],cx
   14004460f:	jmp    QWORD PTR [rsi+0x39]
   140044612:	or     edi,edi
   140044614:	cmp    WORD PTR [rcx],cx
   140044617:	jmp    QWORD PTR [rsi+0x39]
   14004461a:	or     edi,edi
   14004461c:	cmp    WORD PTR [rcx],cx
   14004461f:	add    BYTE PTR [rax],al
	...
   14004463e:	add    BYTE PTR [rax],al
   140044640:	xchg   ebp,eax
   140044641:	push   rbp
   140044642:	add    ebx,DWORD PTR [rdi-0xfbaa6b]
   140044648:	xchg   ebx,eax
   140044649:	push   rsp
   14004464a:	add    al,0xff
   14004464c:	xchg   edx,eax
   14004464d:	push   rsp
   14004464e:	add    al,0xff
   140044650:	xchg   ecx,eax
   140044651:	push   rbx
   140044652:	add    al,0xff
   140044654:	nop
   140044655:	push   rdx
   140044656:	add    al,0xff
   140044658:	(bad)  
   140044659:	push   rdx
   14004465a:	add    al,0xff
   14004465c:	mov    ss,WORD PTR [rcx+0x4]
   14004465f:	dec    DWORD PTR [rbp-0x7300fbb0]
   140044665:	push   rax
   140044666:	add    eax,0x54f8bff
   14004466b:	dec    DWORD PTR [rdx-0x7600fab2]
   140044671:	rex.WRX add rax,0x54d88ff
   140044677:	call   QWORD PTR [rdx+0x33]
   14004467a:	adc    eax,0x153352ff
   14004467f:	dec    ecx
   140044681:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140044682:	outs   dx,DWORD PTR ds:[rsi]
   140044683:	dec    ecx
   140044685:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140044686:	outs   dx,DWORD PTR ds:[rsi]
   140044687:	dec    ecx
   140044689:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004468a:	outs   dx,DWORD PTR ds:[rsi]
   14004468b:	dec    ecx
   14004468d:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004468e:	outs   dx,DWORD PTR ds:[rsi]
   14004468f:	dec    ecx
   140044691:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140044692:	outs   dx,DWORD PTR ds:[rsi]
   140044693:	dec    ecx
   140044695:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140044696:	outs   dx,DWORD PTR ds:[rsi]
   140044697:	dec    ecx
   140044699:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004469a:	outs   dx,DWORD PTR ds:[rsi]
   14004469b:	dec    ecx
   14004469d:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004469e:	outs   dx,DWORD PTR ds:[rsi]
   14004469f:	dec    ecx
   1400446a1:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400446a2:	outs   dx,DWORD PTR ds:[rsi]
   1400446a3:	dec    ecx
   1400446a5:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400446a6:	outs   dx,DWORD PTR ds:[rsi]
   1400446a7:	dec    ecx
   1400446a9:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400446aa:	outs   dx,DWORD PTR ds:[rsi]
   1400446ab:	dec    ecx
   1400446ad:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400446ae:	outs   dx,DWORD PTR ds:[rsi]
   1400446af:	dec    ecx
   1400446b1:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400446b2:	outs   dx,DWORD PTR ds:[rsi]
   1400446b3:	dec    ecx
   1400446b5:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400446b6:	outs   dx,DWORD PTR ds:[rsi]
   1400446b7:	dec    ecx
   1400446b9:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400446ba:	outs   dx,DWORD PTR ds:[rsi]
   1400446bb:	dec    ecx
   1400446bd:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400446be:	outs   dx,DWORD PTR ds:[rsi]
   1400446bf:	dec    ecx
   1400446c1:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400446c2:	outs   dx,DWORD PTR ds:[rsi]
   1400446c3:	dec    ecx
   1400446c5:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400446c6:	outs   dx,DWORD PTR ds:[rsi]
   1400446c7:	dec    ecx
   1400446c9:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400446ca:	outs   dx,DWORD PTR ds:[rsi]
   1400446cb:	dec    ecx
   1400446cd:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400446ce:	outs   dx,DWORD PTR ds:[rsi]
   1400446cf:	dec    ecx
   1400446d1:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400446d2:	outs   dx,DWORD PTR ds:[rsi]
   1400446d3:	dec    ecx
   1400446d5:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400446d6:	outs   dx,DWORD PTR ds:[rsi]
   1400446d7:	dec    ecx
   1400446d9:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400446da:	outs   dx,DWORD PTR ds:[rsi]
   1400446db:	dec    ecx
   1400446dd:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400446de:	outs   dx,DWORD PTR ds:[rsi]
   1400446df:	call   QWORD PTR [rdx+0x33]
   1400446e2:	adc    eax,0x153352ff
   1400446e7:	jmp    FWORD PTR [rcx+0x3b]
   1400446ea:	or     edi,edi
   1400446ec:	push   0x67ff093a
   1400446f1:	cmp    cl,BYTE PTR [rcx]
   1400446f3:	jmp    QWORD PTR [rsi+0x39]
   1400446f6:	or     edi,edi
   1400446f8:	cmp    WORD PTR [rcx],cx
   1400446fb:	jmp    QWORD PTR [rsi+0x39]
   1400446fe:	or     edi,edi
   140044700:	cmp    WORD PTR [rcx],cx
   140044703:	jmp    QWORD PTR [rsi+0x39]
   140044706:	or     edi,edi
   140044708:	cmp    WORD PTR [rcx],cx
   14004470b:	jmp    QWORD PTR [rsi+0x39]
   14004470e:	or     edi,edi
   140044710:	cmp    WORD PTR [rcx],cx
   140044713:	jmp    QWORD PTR [rsi+0x39]
   140044716:	or     edi,edi
   140044718:	cmp    WORD PTR [rcx],cx
   14004471b:	jmp    QWORD PTR [rsi+0x39]
   14004471e:	or     DWORD PTR [rdi+0x0],ebx
	...
   140044740:	xchg   edi,eax
   140044741:	push   rsi
   140044742:	add    ebp,edi
   140044744:	xchg   ebp,eax
   140044745:	push   rbp
   140044746:	add    edi,edi
   140044748:	xchg   ebp,eax
   140044749:	push   rbp
   14004474a:	add    al,0xff
   14004474c:	xchg   ebx,eax
   14004474d:	push   rsp
   14004474e:	add    al,0xff
   140044750:	xchg   edx,eax
   140044751:	push   rsp
   140044752:	add    al,0xff
   140044754:	xchg   ecx,eax
   140044755:	push   rbx
   140044756:	add    al,0xff
   140044758:	nop
   140044759:	push   rdx
   14004475a:	add    al,0xff
   14004475c:	(bad)  
   14004475d:	push   rdx
   14004475e:	add    al,0xff
   140044760:	mov    ss,WORD PTR [rcx+0x4]
   140044763:	dec    DWORD PTR [rbp-0x7300fbb0]
   140044769:	push   rax
   14004476a:	add    eax,0x54f8bff
   14004476f:	dec    DWORD PTR [rdx-0x7600fab2]
   140044775:	rex.WRX add rax,0x153352ff
   14004477b:	call   QWORD PTR [rdx+0x33]
   14004477e:	adc    eax,0x71a6caff
   140044783:	dec    edx
   140044785:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140044786:	jno    0x140044787
   140044788:	retf   0x71a6
   14004478b:	dec    edx
   14004478d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004478e:	jno    0x14004478f
   140044790:	retf   0x71a6
   140044793:	dec    edx
   140044795:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140044796:	jno    0x140044797
   140044798:	retf   0x71a6
   14004479b:	dec    edx
   14004479d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004479e:	jno    0x14004479f
   1400447a0:	retf   0x71a6
   1400447a3:	dec    edx
   1400447a5:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400447a6:	jno    0x1400447a7
   1400447a8:	retf   0x71a6
   1400447ab:	dec    edx
   1400447ad:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400447ae:	jno    0x1400447af
   1400447b0:	retf   0x71a6
   1400447b3:	dec    edx
   1400447b5:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400447b6:	jno    0x1400447b7
   1400447b8:	retf   0x71a6
   1400447bb:	dec    edx
   1400447bd:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400447be:	jno    0x1400447bf
   1400447c0:	retf   0x71a6
   1400447c3:	dec    edx
   1400447c5:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400447c6:	jno    0x1400447c7
   1400447c8:	retf   0x71a6
   1400447cb:	dec    edx
   1400447cd:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400447ce:	jno    0x1400447cf
   1400447d0:	retf   0x71a6
   1400447d3:	dec    edx
   1400447d5:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400447d6:	jno    0x1400447d7
   1400447d8:	retf   0x71a6
   1400447db:	dec    edx
   1400447dd:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400447de:	jno    0x1400447df
   1400447e0:	push   rdx
   1400447e1:	xor    edx,DWORD PTR [rip+0x153352ff]        # 0x155379ae6
   1400447e7:	jmp    FWORD PTR [rdx+0x3c]
   1400447ea:	or     edi,edi
   1400447ec:	imul   edi,DWORD PTR [rbx],0x3a68ff09
   1400447f2:	or     edi,edi
   1400447f4:	cmp    cl,BYTE PTR [ecx]
   1400447f7:	jmp    QWORD PTR [rsi+0x39]
   1400447fa:	or     edi,edi
   1400447fc:	cmp    WORD PTR [rcx],cx
   1400447ff:	jmp    QWORD PTR [rsi+0x39]
   140044802:	or     edi,edi
   140044804:	cmp    WORD PTR [rcx],cx
   140044807:	jmp    QWORD PTR [rsi+0x39]
   14004480a:	or     edi,edi
   14004480c:	cmp    WORD PTR [rcx],cx
   14004480f:	jmp    QWORD PTR [rsi+0x39]
   140044812:	or     edi,edi
   140044814:	cmp    WORD PTR [rcx],cx
   140044817:	jmp    QWORD PTR [rsi+0x39]
   14004481a:	or     edi,edi
   14004481c:	cmp    WORD PTR [rcx],cx
   14004481f:	out    dx,eax
	...
   140044840:	cwde   
   140044841:	push   rdi
   140044842:	add    edi,edi
   140044844:	xchg   edi,eax
   140044845:	push   rsi
   140044846:	add    edi,edi
   140044848:	xchg   ebp,eax
   140044849:	push   rbp
   14004484a:	add    edi,edi
   14004484c:	xchg   ebp,eax
   14004484d:	push   rbp
   14004484e:	add    al,0xff
   140044850:	xchg   ebx,eax
   140044851:	push   rsp
   140044852:	add    al,0xff
   140044854:	xchg   edx,eax
   140044855:	push   rsp
   140044856:	add    al,0xff
   140044858:	xchg   ecx,eax
   140044859:	push   rbx
   14004485a:	add    al,0xff
   14004485c:	nop
   14004485d:	push   rdx
   14004485e:	add    al,0xff
   140044860:	(bad)  
   140044861:	push   rdx
   140044862:	add    al,0xff
   140044864:	mov    ss,WORD PTR [rcx+0x4]
   140044867:	dec    DWORD PTR [rbp-0x7300fbb0]
   14004486d:	push   rax
   14004486e:	add    eax,0x54f8bff
   140044873:	dec    DWORD PTR [rdx+0x52ff054e]
   140044879:	xor    edx,DWORD PTR [rip+0x153352ff]        # 0x155379b7e
   14004487f:	dec    ebx
   140044881:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140044882:	jae    0x140044883
   140044884:	retf   
   140044885:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140044886:	jae    0x140044887
   140044888:	retf   
   140044889:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004488a:	jae    0x14004488b
   14004488c:	retf   
   14004488d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004488e:	jae    0x14004488f
   140044890:	retf   
   140044891:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140044892:	jae    0x140044893
   140044894:	retf   
   140044895:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140044896:	jae    0x140044897
   140044898:	retf   
   140044899:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004489a:	jae    0x14004489b
   14004489c:	retf   
   14004489d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004489e:	jae    0x14004489f
   1400448a0:	retf   
   1400448a1:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400448a2:	jae    0x1400448a3
   1400448a4:	retf   
   1400448a5:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400448a6:	jae    0x1400448a7
   1400448a8:	retf   
   1400448a9:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400448aa:	jae    0x1400448ab
   1400448ac:	retf   
   1400448ad:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400448ae:	jae    0x1400448af
   1400448b0:	retf   
   1400448b1:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400448b2:	jae    0x1400448b3
   1400448b4:	retf   
   1400448b5:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400448b6:	jae    0x1400448b7
   1400448b8:	retf   
   1400448b9:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400448ba:	jae    0x1400448bb
   1400448bc:	retf   
   1400448bd:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400448be:	jae    0x1400448bf
   1400448c0:	retf   
   1400448c1:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400448c2:	jae    0x1400448c3
   1400448c4:	retf   
   1400448c5:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400448c6:	jae    0x1400448c7
   1400448c8:	retf   
   1400448c9:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400448ca:	jae    0x1400448cb
   1400448cc:	retf   
   1400448cd:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400448ce:	jae    0x1400448cf
   1400448d0:	retf   
   1400448d1:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400448d2:	jae    0x1400448d3
   1400448d4:	retf   
   1400448d5:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400448d6:	jae    0x1400448d7
   1400448d8:	retf   
   1400448d9:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400448da:	jae    0x1400448db
   1400448dc:	retf   
   1400448dd:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400448de:	jae    0x1400448df
   1400448e0:	push   rdx
   1400448e1:	xor    edx,DWORD PTR [rip+0x153352ff]        # 0x155379be6
   1400448e7:	jmp    FWORD PTR [rbx+0x3c]
   1400448ea:	or     bh,bh
   1400448ec:	push   0x3c
   1400448ee:	or     edi,edi
   1400448f0:	imul   edi,DWORD PTR [rbx],0x3a68ff09
   1400448f6:	or     edi,edi
   1400448f8:	cmp    cl,BYTE PTR [ecx]
   1400448fb:	jmp    QWORD PTR [rsi+0x39]
   1400448fe:	or     edi,edi
   140044900:	cmp    WORD PTR [rcx],cx
   140044903:	jmp    QWORD PTR [rsi+0x39]
   140044906:	or     edi,edi
   140044908:	cmp    WORD PTR [rcx],cx
   14004490b:	jmp    QWORD PTR [rsi+0x39]
   14004490e:	or     edi,edi
   140044910:	cmp    WORD PTR [rcx],cx
   140044913:	jmp    QWORD PTR [rsi+0x39]
   140044916:	or     edi,edi
   140044918:	cmp    WORD PTR [rcx],cx
   14004491b:	jmp    QWORD PTR [rsi+0x39]
   14004491e:	or     edi,edi
	...
   140044940:	cdq    
   140044941:	push   rdi
   140044942:	add    edi,edi
   140044944:	cwde   
   140044945:	push   rdi
   140044946:	add    edi,edi
   140044948:	xchg   edi,eax
   140044949:	push   rsi
   14004494a:	add    edi,edi
   14004494c:	xchg   ebp,eax
   14004494d:	push   rbp
   14004494e:	add    edi,edi
   140044950:	xchg   ebp,eax
   140044951:	push   rbp
   140044952:	add    al,0xff
   140044954:	xchg   ebx,eax
   140044955:	push   rsp
   140044956:	add    al,0xff
   140044958:	xchg   edx,eax
   140044959:	push   rsp
   14004495a:	add    al,0xff
   14004495c:	xchg   ecx,eax
   14004495d:	push   rbx
   14004495e:	add    al,0xff
   140044960:	nop
   140044961:	push   rdx
   140044962:	add    al,0xff
   140044964:	(bad)  
   140044965:	push   rdx
   140044966:	add    al,0xff
   140044968:	mov    ss,WORD PTR [rcx+0x4]
   14004496b:	dec    DWORD PTR [rbp-0x7300fbb0]
   140044971:	push   rax
   140044972:	add    eax,0x54f8bff
   140044977:	call   QWORD PTR [rdx+0x33]
   14004497a:	adc    eax,0x153352ff
   14004497f:	dec    esp
   140044981:	test   al,0x74
   140044983:	dec    esp
   140044985:	test   al,0x74
   140044987:	dec    esp
   140044989:	test   al,0x74
   14004498b:	dec    esp
   14004498d:	test   al,0x74
   14004498f:	dec    esp
   140044991:	test   al,0x74
   140044993:	dec    esp
   140044995:	test   al,0x74
   140044997:	dec    esp
   140044999:	test   al,0x74
   14004499b:	dec    esp
   14004499d:	test   al,0x74
   14004499f:	dec    esp
   1400449a1:	test   al,0x74
   1400449a3:	dec    esp
   1400449a5:	test   al,0x74
   1400449a7:	dec    esp
   1400449a9:	test   al,0x74
   1400449ab:	dec    esp
   1400449ad:	test   al,0x74
   1400449af:	dec    esp
   1400449b1:	test   al,0x74
   1400449b3:	dec    esp
   1400449b5:	test   al,0x74
   1400449b7:	dec    esp
   1400449b9:	test   al,0x74
   1400449bb:	dec    esp
   1400449bd:	test   al,0x74
   1400449bf:	dec    esp
   1400449c1:	test   al,0x74
   1400449c3:	dec    esp
   1400449c5:	test   al,0x74
   1400449c7:	dec    esp
   1400449c9:	test   al,0x74
   1400449cb:	dec    esp
   1400449cd:	test   al,0x74
   1400449cf:	dec    esp
   1400449d1:	test   al,0x74
   1400449d3:	dec    esp
   1400449d5:	test   al,0x74
   1400449d7:	dec    esp
   1400449d9:	test   al,0x74
   1400449db:	dec    esp
   1400449dd:	test   al,0x74
   1400449df:	call   QWORD PTR [rdx+0x33]
   1400449e2:	adc    eax,0x153352ff
   1400449e7:	jmp    FWORD PTR [rbp+rdi*1+0x8]
   1400449eb:	jmp    FWORD PTR [rbx+0x3c]
   1400449ee:	or     bh,bh
   1400449f0:	push   0x3c
   1400449f2:	or     edi,edi
   1400449f4:	imul   edi,DWORD PTR [rbx],0x3a68ff09
   1400449fa:	or     edi,edi
   1400449fc:	cmp    cl,BYTE PTR [ecx]
   1400449ff:	jmp    QWORD PTR [rsi+0x39]
   140044a02:	or     edi,edi
   140044a04:	cmp    WORD PTR [rcx],cx
   140044a07:	jmp    QWORD PTR [rsi+0x39]
   140044a0a:	or     edi,edi
   140044a0c:	cmp    WORD PTR [rcx],cx
   140044a0f:	jmp    QWORD PTR [rsi+0x39]
   140044a12:	or     edi,edi
   140044a14:	cmp    WORD PTR [rcx],cx
   140044a17:	jmp    QWORD PTR [rsi+0x39]
   140044a1a:	or     edi,edi
   140044a1c:	cmp    WORD PTR [rcx],cx
   140044a1f:	inc    DWORD PTR [rax]
	...
   140044a3d:	add    BYTE PTR [rax],al
   140044a3f:	add    BYTE PTR [rdx-0x6600fca8],bl
   140044a45:	push   rdi
   140044a46:	add    edi,edi
   140044a48:	cwde   
   140044a49:	push   rdi
   140044a4a:	add    edi,edi
   140044a4c:	xchg   edi,eax
   140044a4d:	push   rsi
   140044a4e:	add    edi,edi
   140044a50:	xchg   ebp,eax
   140044a51:	push   rbp
   140044a52:	add    edi,edi
   140044a54:	xchg   ebp,eax
   140044a55:	push   rbp
   140044a56:	add    al,0xff
   140044a58:	xchg   ebx,eax
   140044a59:	push   rsp
   140044a5a:	add    al,0xff
   140044a5c:	xchg   edx,eax
   140044a5d:	push   rsp
   140044a5e:	add    al,0xff
   140044a60:	xchg   ecx,eax
   140044a61:	push   rbx
   140044a62:	add    al,0xff
   140044a64:	nop
   140044a65:	push   rdx
   140044a66:	add    al,0xff
   140044a68:	(bad)  
   140044a69:	push   rdx
   140044a6a:	add    al,0xff
   140044a6c:	mov    ss,WORD PTR [rcx+0x4]
   140044a6f:	dec    DWORD PTR [rbp-0x7300fbb0]
   140044a75:	push   rax
   140044a76:	add    eax,0x153352ff
   140044a7b:	call   QWORD PTR [rdx+0x33]
   140044a7e:	adc    eax,0x153352ff
   140044a83:	call   QWORD PTR [rdx+0x33]
   140044a86:	adc    eax,0x153352ff
   140044a8b:	call   QWORD PTR [rdx+0x33]
   140044a8e:	adc    eax,0x153352ff
   140044a93:	call   QWORD PTR [rdx+0x33]
   140044a96:	adc    eax,0x153352ff
   140044a9b:	call   QWORD PTR [rdx+0x33]
   140044a9e:	adc    eax,0x153352ff
   140044aa3:	call   QWORD PTR [rdx+0x33]
   140044aa6:	adc    eax,0x153352ff
   140044aab:	call   QWORD PTR [rdx+0x33]
   140044aae:	adc    eax,0x153352ff
   140044ab3:	call   QWORD PTR [rdx+0x33]
   140044ab6:	adc    eax,0x153352ff
   140044abb:	call   QWORD PTR [rdx+0x33]
   140044abe:	adc    eax,0x153352ff
   140044ac3:	call   QWORD PTR [rdx+0x33]
   140044ac6:	adc    eax,0x153352ff
   140044acb:	call   QWORD PTR [rdx+0x33]
   140044ace:	adc    eax,0x153352ff
   140044ad3:	call   QWORD PTR [rdx+0x33]
   140044ad6:	adc    eax,0x153352ff
   140044adb:	call   QWORD PTR [rdx+0x33]
   140044ade:	adc    eax,0x153352ff
   140044ae3:	call   QWORD PTR [rdx+0x33]
   140044ae6:	adc    eax,0x83e6eff
   140044aeb:	jmp    FWORD PTR [rbp+rdi*1+0x8]
   140044aef:	jmp    FWORD PTR [rbx+0x3c]
   140044af2:	or     bh,bh
   140044af4:	push   0x3c
   140044af6:	or     edi,edi
   140044af8:	imul   edi,DWORD PTR [rbx],0x3a68ff09
   140044afe:	or     edi,edi
   140044b00:	cmp    cl,BYTE PTR [ecx]
   140044b03:	jmp    QWORD PTR [rsi+0x39]
   140044b06:	or     edi,edi
   140044b08:	cmp    WORD PTR [rcx],cx
   140044b0b:	jmp    QWORD PTR [rsi+0x39]
   140044b0e:	or     edi,edi
   140044b10:	cmp    WORD PTR [rcx],cx
   140044b13:	jmp    QWORD PTR [rsi+0x39]
   140044b16:	or     edi,edi
   140044b18:	cmp    WORD PTR [rcx],cx
   140044b1b:	jmp    QWORD PTR [rsi+0x39]
   140044b1e:	or     edi,edi
	...
   140044b40:	fwait
   140044b41:	pop    rcx
   140044b42:	add    edi,edi
   140044b44:	(bad)  
   140044b45:	pop    rax
   140044b46:	add    edi,edi
   140044b48:	cdq    
   140044b49:	push   rdi
   140044b4a:	add    edi,edi
   140044b4c:	cwde   
   140044b4d:	push   rdi
   140044b4e:	add    edi,edi
   140044b50:	xchg   edi,eax
   140044b51:	push   rsi
   140044b52:	add    edi,edi
   140044b54:	xchg   ebp,eax
   140044b55:	push   rbp
   140044b56:	add    edi,edi
   140044b58:	xchg   ebp,eax
   140044b59:	push   rbp
   140044b5a:	add    al,0xff
   140044b5c:	xchg   ebx,eax
   140044b5d:	push   rsp
   140044b5e:	add    al,0xff
   140044b60:	xchg   edx,eax
   140044b61:	push   rsp
   140044b62:	add    al,0xff
   140044b64:	xchg   ecx,eax
   140044b65:	push   rbx
   140044b66:	add    al,0xff
   140044b68:	nop
   140044b69:	push   rdx
   140044b6a:	add    al,0xff
   140044b6c:	(bad)  
   140044b6d:	push   rdx
   140044b6e:	add    al,0xff
   140044b70:	mov    ss,WORD PTR [rcx+0x4]
   140044b73:	dec    DWORD PTR [rbp+0x52ff0450]
   140044b79:	xor    edx,DWORD PTR [rip+0x153352ff]        # 0x155379e7e
   140044b7f:	call   QWORD PTR [rdx+0x33]
   140044b82:	adc    eax,0x153352ff
   140044b87:	call   QWORD PTR [rdx+0x33]
   140044b8a:	adc    eax,0x153352ff
   140044b8f:	call   QWORD PTR [rdx+0x33]
   140044b92:	adc    eax,0x153352ff
   140044b97:	call   QWORD PTR [rdx+0x33]
   140044b9a:	adc    eax,0x153352ff
   140044b9f:	call   QWORD PTR [rdx+0x33]
   140044ba2:	adc    eax,0x153352ff
   140044ba7:	call   QWORD PTR [rdx+0x33]
   140044baa:	adc    eax,0x153352ff
   140044baf:	call   QWORD PTR [rdx+0x33]
   140044bb2:	adc    eax,0x153352ff
   140044bb7:	call   QWORD PTR [rdx+0x33]
   140044bba:	adc    eax,0x153352ff
   140044bbf:	call   QWORD PTR [rdx+0x33]
   140044bc2:	adc    eax,0x153352ff
   140044bc7:	call   QWORD PTR [rdx+0x33]
   140044bca:	adc    eax,0x153352ff
   140044bcf:	call   QWORD PTR [rdx+0x33]
   140044bd2:	adc    eax,0x153352ff
   140044bd7:	call   QWORD PTR [rdx+0x33]
   140044bda:	adc    eax,0x153352ff
   140044bdf:	call   QWORD PTR [rdx+0x33]
   140044be2:	adc    eax,0x153352ff
   140044be7:	jmp    FWORD PTR [rsi+0x3e]
   140044bea:	or     bh,bh
   140044bec:	outs   dx,BYTE PTR ds:[rsi]
   140044bed:	ds or  bh,bh
   140044bf0:	ins    BYTE PTR es:[rdi],dx
   140044bf1:	cmp    eax,0x3c6bff08
   140044bf6:	or     bh,bh
   140044bf8:	push   0x3c
   140044bfa:	or     edi,edi
   140044bfc:	imul   edi,DWORD PTR [rbx],0x3a68ff09
   140044c02:	or     edi,edi
   140044c04:	cmp    cl,BYTE PTR [ecx]
   140044c07:	jmp    QWORD PTR [rsi+0x39]
   140044c0a:	or     edi,edi
   140044c0c:	cmp    WORD PTR [rcx],cx
   140044c0f:	jmp    QWORD PTR [rsi+0x39]
   140044c12:	or     edi,edi
   140044c14:	cmp    WORD PTR [rcx],cx
   140044c17:	jmp    QWORD PTR [rsi+0x39]
   140044c1a:	or     edi,edi
   140044c1c:	cmp    WORD PTR [rcx],cx
   140044c1f:	inc    DWORD PTR [rax]
	...
   140044c3d:	add    BYTE PTR [rax],al
   140044c3f:	add    BYTE PTR [rcx+rbx*2+0x599bff03],bl
   140044c46:	add    edi,edi
   140044c48:	(bad)  
   140044c49:	pop    rax
   140044c4a:	add    edi,edi
   140044c4c:	cdq    
   140044c4d:	push   rdi
   140044c4e:	add    edi,edi
   140044c50:	cwde   
   140044c51:	push   rdi
   140044c52:	add    edi,edi
   140044c54:	xchg   edi,eax
   140044c55:	push   rsi
   140044c56:	add    edi,edi
   140044c58:	xchg   ebp,eax
   140044c59:	push   rbp
   140044c5a:	add    edi,edi
   140044c5c:	xchg   ebp,eax
   140044c5d:	push   rbp
   140044c5e:	add    al,0xff
   140044c60:	xchg   ebx,eax
   140044c61:	push   rsp
   140044c62:	add    al,0xff
   140044c64:	xchg   edx,eax
   140044c65:	push   rsp
   140044c66:	add    al,0xff
   140044c68:	xchg   ecx,eax
   140044c69:	push   rbx
   140044c6a:	add    al,0xff
   140044c6c:	nop
   140044c6d:	push   rdx
   140044c6e:	add    al,0xff
   140044c70:	(bad)  
   140044c71:	push   rdx
   140044c72:	add    al,0xff
   140044c74:	mov    ss,WORD PTR [rcx+0x4]
   140044c77:	dec    DWORD PTR [rbp-0x7300fbb0]
   140044c7d:	push   rax
   140044c7e:	add    eax,0x54f8bff
   140044c83:	dec    DWORD PTR [rdx-0x7600fab2]
   140044c89:	rex.WRX add rax,0x54d88ff
   140044c8f:	inc    DWORD PTR [rdi-0x7900fab4]
   140044c95:	rex.WR add rax,0x54b84ff
   140044c9b:	inc    DWORD PTR [rbx+rcx*2+0x4a82ff06]
   140044ca2:	(bad)  
   140044ca3:	(bad)  
   140044ca4:	jns    0x140044ceb
   140044ca6:	or     edi,edi
   140044ca8:	push   rdx
   140044ca9:	xor    edx,DWORD PTR [rip+0x153352ff]        # 0x155379fae
   140044caf:	call   QWORD PTR [rdx+0x33]
   140044cb2:	adc    eax,0x153352ff
   140044cb7:	push   QWORD PTR [rcx+0x41]
   140044cba:	or     bh,bh
   140044cbc:	jnp    0x140044d04
   140044cbe:	(bad)  
   140044cbf:	(bad)  
   140044cc0:	jp     0x140044d07
   140044cc2:	(bad)  
   140044cc3:	(bad)  
   140044cc4:	jns    0x140044d0a
   140044cc6:	(bad)  
   140044cc7:	(bad)  
   140044cc8:	js     0x140044d0e
   140044cca:	(bad)  
   140044ccb:	push   QWORD PTR [rdi+0x43]
   140044cce:	(bad)  
   140044ccf:	push   QWORD PTR [rsi+0x43]
   140044cd2:	(bad)  
   140044cd3:	push   QWORD PTR [rbp+0x42]
   140044cd6:	(bad)  
   140044cd7:	push   QWORD PTR [rcx+rax*2+0x7]
   140044cdb:	push   QWORD PTR [rbx+0x41]
   140044cde:	or     bh,bh
   140044ce0:	jb     0x140044d22
   140044ce2:	or     bh,bh
   140044ce4:	jno    0x140044d25
   140044ce6:	or     bh,bh
   140044ce8:	jo     0x140044d29
   140044cea:	or     bh,bh
   140044cec:	outs   dx,BYTE PTR ds:[rsi]
   140044ced:	ds or  bh,bh
   140044cf0:	outs   dx,BYTE PTR ds:[rsi]
   140044cf1:	ds or  bh,bh
   140044cf4:	ins    BYTE PTR es:[rdi],dx
   140044cf5:	cmp    eax,0x3c6bff08
   140044cfa:	or     bh,bh
   140044cfc:	push   0x3c
   140044cfe:	or     edi,edi
   140044d00:	imul   edi,DWORD PTR [rbx],0x3a68ff09
   140044d06:	or     edi,edi
   140044d08:	cmp    cl,BYTE PTR [ecx]
   140044d0b:	jmp    QWORD PTR [rsi+0x39]
   140044d0e:	or     edi,edi
   140044d10:	cmp    WORD PTR [rcx],cx
   140044d13:	jmp    QWORD PTR [rsi+0x39]
   140044d16:	or     edi,edi
   140044d18:	cmp    WORD PTR [rcx],cx
   140044d1b:	jmp    QWORD PTR [rsi+0x39]
   140044d1e:	or     edi,edi
	...
   140044d40:	popf   
   140044d41:	pop    rdx
   140044d42:	add    edi,edi
   140044d44:	pushf  
   140044d45:	pop    rcx
   140044d46:	add    edi,edi
   140044d48:	fwait
   140044d49:	pop    rcx
   140044d4a:	add    edi,edi
   140044d4c:	(bad)  
   140044d4d:	pop    rax
   140044d4e:	add    edi,edi
   140044d50:	cdq    
   140044d51:	push   rdi
   140044d52:	add    edi,edi
   140044d54:	cwde   
   140044d55:	push   rdi
   140044d56:	add    edi,edi
   140044d58:	xchg   edi,eax
   140044d59:	push   rsi
   140044d5a:	add    edi,edi
   140044d5c:	xchg   ebp,eax
   140044d5d:	push   rbp
   140044d5e:	add    edi,edi
   140044d60:	xchg   ebp,eax
   140044d61:	push   rbp
   140044d62:	add    al,0xff
   140044d64:	xchg   ebx,eax
   140044d65:	push   rsp
   140044d66:	add    al,0xff
   140044d68:	xchg   edx,eax
   140044d69:	push   rsp
   140044d6a:	add    al,0xff
   140044d6c:	xchg   ecx,eax
   140044d6d:	push   rbx
   140044d6e:	add    al,0xff
   140044d70:	nop
   140044d71:	push   rdx
   140044d72:	add    al,0xff
   140044d74:	(bad)  
   140044d75:	push   rdx
   140044d76:	add    al,0xff
   140044d78:	mov    ss,WORD PTR [rcx+0x4]
   140044d7b:	dec    DWORD PTR [rbp-0x7300fbb0]
   140044d81:	push   rax
   140044d82:	add    eax,0x54f8bff
   140044d87:	dec    DWORD PTR [rdx-0x7600fab2]
   140044d8d:	rex.WRX add rax,0x54d88ff
   140044d93:	inc    DWORD PTR [rdi-0x7900fab4]
   140044d99:	rex.WR add rax,0x54b84ff
   140044d9f:	inc    DWORD PTR [rcx+0x56ff0749]
   140044da5:	xor    eax,0x3453ff15
   140044daa:	(bad)  
   140044dab:	call   QWORD PTR [rbx+0x34]
   140044dae:	(bad)  
   140044daf:	call   QWORD PTR [rbx+0x34]
   140044db2:	(bad)  
   140044db3:	call   QWORD PTR [rbx+0x34]
   140044db6:	(bad)  
   140044db7:	call   QWORD PTR [rsi+0x35]
   140044dba:	adc    eax,0x84477ff
   140044dbf:	(bad)  
   140044dc0:	jnp    0x140044e08
   140044dc2:	(bad)  
   140044dc3:	(bad)  
   140044dc4:	jp     0x140044e0b
   140044dc6:	(bad)  
   140044dc7:	(bad)  
   140044dc8:	jns    0x140044e0e
   140044dca:	(bad)  
   140044dcb:	(bad)  
   140044dcc:	js     0x140044e12
   140044dce:	(bad)  
   140044dcf:	push   QWORD PTR [rdi+0x43]
   140044dd2:	(bad)  
   140044dd3:	push   QWORD PTR [rsi+0x43]
   140044dd6:	(bad)  
   140044dd7:	push   QWORD PTR [rbp+0x42]
   140044dda:	(bad)  
   140044ddb:	push   QWORD PTR [rcx+rax*2+0x7]
   140044ddf:	push   QWORD PTR [rbx+0x41]
   140044de2:	or     bh,bh
   140044de4:	jb     0x140044e26
   140044de6:	or     bh,bh
   140044de8:	jno    0x140044e29
   140044dea:	or     bh,bh
   140044dec:	jo     0x140044e2d
   140044dee:	or     bh,bh
   140044df0:	outs   dx,BYTE PTR ds:[rsi]
   140044df1:	ds or  bh,bh
   140044df4:	outs   dx,BYTE PTR ds:[rsi]
   140044df5:	ds or  bh,bh
   140044df8:	ins    BYTE PTR es:[rdi],dx
   140044df9:	cmp    eax,0x3c6bff08
   140044dfe:	or     bh,bh
   140044e00:	push   0x3c
   140044e02:	or     edi,edi
   140044e04:	imul   edi,DWORD PTR [rbx],0x3a68ff09
   140044e0a:	or     edi,edi
   140044e0c:	cmp    cl,BYTE PTR [ecx]
   140044e0f:	jmp    QWORD PTR [rsi+0x39]
   140044e12:	or     edi,edi
   140044e14:	cmp    WORD PTR [rcx],cx
   140044e17:	jmp    QWORD PTR [rsi+0x39]
   140044e1a:	or     edi,edi
   140044e1c:	cmp    WORD PTR [rcx],cx
   140044e1f:	inc    DWORD PTR [rax]
	...
   140044e3d:	add    BYTE PTR [rax],al
   140044e3f:	add    BYTE PTR [rsi-0x6200fda6],bl
   140044e45:	pop    rdx
   140044e46:	add    edi,edi
   140044e48:	pushf  
   140044e49:	pop    rcx
   140044e4a:	add    edi,edi
   140044e4c:	fwait
   140044e4d:	pop    rcx
   140044e4e:	add    edi,edi
   140044e50:	(bad)  
   140044e51:	pop    rax
   140044e52:	add    edi,edi
   140044e54:	cdq    
   140044e55:	push   rdi
   140044e56:	add    edi,edi
   140044e58:	cwde   
   140044e59:	push   rdi
   140044e5a:	add    edi,edi
   140044e5c:	xchg   edi,eax
   140044e5d:	push   rsi
   140044e5e:	add    edi,edi
   140044e60:	xchg   ebp,eax
   140044e61:	push   rbp
   140044e62:	add    edi,edi
   140044e64:	xchg   ebp,eax
   140044e65:	push   rbp
   140044e66:	add    al,0xff
   140044e68:	xchg   ebx,eax
   140044e69:	push   rsp
   140044e6a:	add    al,0xff
   140044e6c:	xchg   edx,eax
   140044e6d:	push   rsp
   140044e6e:	add    al,0xff
   140044e70:	xchg   ecx,eax
   140044e71:	push   rbx
   140044e72:	add    al,0xff
   140044e74:	nop
   140044e75:	push   rdx
   140044e76:	add    al,0xff
   140044e78:	(bad)  
   140044e79:	push   rdx
   140044e7a:	add    al,0xff
   140044e7c:	mov    ss,WORD PTR [rcx+0x4]
   140044e7f:	dec    DWORD PTR [rbp-0x7300fbb0]
   140044e85:	push   rax
   140044e86:	add    eax,0x54f8bff
   140044e8b:	dec    DWORD PTR [rdx-0x7600fab2]
   140044e91:	rex.WRX add rax,0x54d88ff
   140044e97:	inc    DWORD PTR [rdi-0x7900fab4]
   140044e9d:	rex.WR add rax,0x14395dff
   140044ea3:	call   QWORD PTR [rbp+rsi*1+0x17]
   140044ea7:	call   QWORD PTR [rbp+rsi*1+0x17]
   140044eab:	jmp    QWORD PTR [rdx-0x5d00a87f]
   140044eb1:	adc    DWORD PTR [rdi-0x1],0xff173554
   140044eb8:	push   rsp
   140044eb9:	xor    eax,0x395cff17
   140044ebe:	adc    al,0xff
   140044ec0:	jp     0x140044f07
   140044ec2:	(bad)  
   140044ec3:	(bad)  
   140044ec4:	jnp    0x140044f0c
   140044ec6:	(bad)  
   140044ec7:	(bad)  
   140044ec8:	jp     0x140044f0f
   140044eca:	(bad)  
   140044ecb:	(bad)  
   140044ecc:	jns    0x140044f12
   140044ece:	(bad)  
   140044ecf:	(bad)  
   140044ed0:	js     0x140044f16
   140044ed2:	(bad)  
   140044ed3:	push   QWORD PTR [rdi+0x43]
   140044ed6:	(bad)  
   140044ed7:	push   QWORD PTR [rsi+0x43]
   140044eda:	(bad)  
   140044edb:	push   QWORD PTR [rbp+0x42]
   140044ede:	(bad)  
   140044edf:	push   QWORD PTR [rcx+rax*2+0x7]
   140044ee3:	push   QWORD PTR [rbx+0x41]
   140044ee6:	or     bh,bh
   140044ee8:	jb     0x140044f2a
   140044eea:	or     bh,bh
   140044eec:	jno    0x140044f2d
   140044eee:	or     bh,bh
   140044ef0:	jo     0x140044f31
   140044ef2:	or     bh,bh
   140044ef4:	outs   dx,BYTE PTR ds:[rsi]
   140044ef5:	ds or  bh,bh
   140044ef8:	outs   dx,BYTE PTR ds:[rsi]
   140044ef9:	ds or  bh,bh
   140044efc:	ins    BYTE PTR es:[rdi],dx
   140044efd:	cmp    eax,0x3c6bff08
   140044f02:	or     bh,bh
   140044f04:	push   0x3c
   140044f06:	or     edi,edi
   140044f08:	imul   edi,DWORD PTR [rbx],0x3a68ff09
   140044f0e:	or     edi,edi
   140044f10:	cmp    cl,BYTE PTR [ecx]
   140044f13:	jmp    QWORD PTR [rsi+0x39]
   140044f16:	or     edi,edi
   140044f18:	cmp    WORD PTR [rcx],cx
   140044f1b:	jmp    QWORD PTR [rsi+0x39]
   140044f1e:	or     edi,edi
	...
   140044f40:	lahf   
   140044f41:	pop    rbx
   140044f42:	add    bh,bh
   140044f44:	sahf   
   140044f45:	pop    rdx
   140044f46:	add    bh,bh
   140044f48:	popf   
   140044f49:	pop    rdx
   140044f4a:	add    edi,edi
   140044f4c:	pushf  
   140044f4d:	pop    rcx
   140044f4e:	add    edi,edi
   140044f50:	fwait
   140044f51:	pop    rcx
   140044f52:	add    edi,edi
   140044f54:	(bad)  
   140044f55:	pop    rax
   140044f56:	add    edi,edi
   140044f58:	cdq    
   140044f59:	push   rdi
   140044f5a:	add    edi,edi
   140044f5c:	cwde   
   140044f5d:	push   rdi
   140044f5e:	add    edi,edi
   140044f60:	xchg   edi,eax
   140044f61:	push   rsi
   140044f62:	add    edi,edi
   140044f64:	xchg   ebp,eax
   140044f65:	push   rbp
   140044f66:	add    edi,edi
   140044f68:	xchg   ebp,eax
   140044f69:	push   rbp
   140044f6a:	add    al,0xff
   140044f6c:	xchg   ebx,eax
   140044f6d:	push   rsp
   140044f6e:	add    al,0xff
   140044f70:	xchg   edx,eax
   140044f71:	push   rsp
   140044f72:	add    al,0xff
   140044f74:	xchg   ecx,eax
   140044f75:	push   rbx
   140044f76:	add    al,0xff
   140044f78:	nop
   140044f79:	push   rdx
   140044f7a:	add    al,0xff
   140044f7c:	(bad)  
   140044f7d:	push   rdx
   140044f7e:	add    al,0xff
   140044f80:	mov    ss,WORD PTR [rcx+0x4]
   140044f83:	dec    DWORD PTR [rbp-0x7300fbb0]
   140044f89:	push   rax
   140044f8a:	add    eax,0x54f8bff
   140044f8f:	dec    DWORD PTR [rdx-0x7600fab2]
   140044f95:	rex.WRX add rax,0x54d88ff
   140044f9b:	jmp    FWORD PTR [rax+0x3f]
   140044f9e:	adc    edi,edi
   140044fa0:	push   rbp
   140044fa1:	ss sbb bh,bh
   140044fa4:	push   rbp
   140044fa5:	ss sbb bh,bh
   140044fa8:	xchg   ebx,eax
   140044fa9:	jae    0x140044ff6
   140044fab:	call   rcx
   140044fad:	mov    al,0x7f
   140044faf:	call   rcx
   140044fb1:	mov    al,0x7f
   140044fb3:	call   FWORD PTR [rbx+0x55ff527b]
   140044fb9:	ss sbb bh,bh
   140044fbc:	push   rbp
   140044fbd:	ss sbb bh,bh
   140044fc0:	fs cmp eax,0x467cff11
   140044fc6:	(bad)  
   140044fc7:	(bad)  
   140044fc8:	jnp    0x140045010
   140044fca:	(bad)  
   140044fcb:	(bad)  
   140044fcc:	jp     0x140045013
   140044fce:	(bad)  
   140044fcf:	(bad)  
   140044fd0:	jns    0x140045016
   140044fd2:	(bad)  
   140044fd3:	(bad)  
   140044fd4:	js     0x14004501a
   140044fd6:	(bad)  
   140044fd7:	push   QWORD PTR [rdi+0x43]
   140044fda:	(bad)  
   140044fdb:	push   QWORD PTR [rsi+0x43]
   140044fde:	(bad)  
   140044fdf:	push   QWORD PTR [rbp+0x42]
   140044fe2:	(bad)  
   140044fe3:	push   QWORD PTR [rcx+rax*2+0x7]
   140044fe7:	push   QWORD PTR [rbx+0x41]
   140044fea:	or     bh,bh
   140044fec:	jb     0x14004502e
   140044fee:	or     bh,bh
   140044ff0:	jno    0x140045031
   140044ff2:	or     bh,bh
   140044ff4:	jo     0x140045035
   140044ff6:	or     bh,bh
   140044ff8:	outs   dx,BYTE PTR ds:[rsi]
   140044ff9:	ds or  bh,bh
   140044ffc:	outs   dx,BYTE PTR ds:[rsi]
   140044ffd:	ds or  bh,bh
   140045000:	ins    BYTE PTR es:[rdi],dx
   140045001:	cmp    eax,0x3c6bff08
   140045006:	or     bh,bh
   140045008:	push   0x3c
   14004500a:	or     edi,edi
   14004500c:	imul   edi,DWORD PTR [rbx],0x3a68ff09
   140045012:	or     edi,edi
   140045014:	cmp    cl,BYTE PTR [ecx]
   140045017:	jmp    QWORD PTR [rsi+0x39]
   14004501a:	or     edi,edi
   14004501c:	cmp    WORD PTR [rcx],cx
   14004501f:	inc    DWORD PTR [rax]
	...
   14004503d:	add    BYTE PTR [rax],al
   14004503f:	add    BYTE PTR [rax-0x6000fda4],ah
   140045045:	pop    rbx
   140045046:	add    bh,bh
   140045048:	sahf   
   140045049:	pop    rdx
   14004504a:	add    bh,bh
   14004504c:	popf   
   14004504d:	pop    rdx
   14004504e:	add    edi,edi
   140045050:	pushf  
   140045051:	pop    rcx
   140045052:	add    edi,edi
   140045054:	fwait
   140045055:	pop    rcx
   140045056:	add    edi,edi
   140045058:	(bad)  
   140045059:	pop    rax
   14004505a:	add    edi,edi
   14004505c:	cdq    
   14004505d:	push   rdi
   14004505e:	add    edi,edi
   140045060:	cwde   
   140045061:	push   rdi
   140045062:	add    edi,edi
   140045064:	xchg   edi,eax
   140045065:	push   rsi
   140045066:	add    edi,edi
   140045068:	xchg   ebp,eax
   140045069:	push   rbp
   14004506a:	add    edi,edi
   14004506c:	xchg   ebp,eax
   14004506d:	push   rbp
   14004506e:	add    al,0xff
   140045070:	xchg   ebx,eax
   140045071:	push   rsp
   140045072:	add    al,0xff
   140045074:	xchg   edx,eax
   140045075:	push   rsp
   140045076:	add    al,0xff
   140045078:	xchg   ecx,eax
   140045079:	push   rbx
   14004507a:	add    al,0xff
   14004507c:	nop
   14004507d:	push   rdx
   14004507e:	add    al,0xff
   140045080:	(bad)  
   140045081:	push   rdx
   140045082:	add    al,0xff
   140045084:	mov    ss,WORD PTR [rcx+0x4]
   140045087:	dec    DWORD PTR [rbp-0x7300fbb0]
   14004508d:	push   rax
   14004508e:	add    eax,0x54f8bff
   140045093:	dec    DWORD PTR [rdx+0x76ff054e]
   140045099:	rex.RX or al,0xff
   14004509c:	push   rdi
   14004509d:	cmp    BYTE PTR [rax],bl
   14004509f:	call   QWORD PTR [rdi+0x38]
   1400450a2:	sbb    bh,bh
   1400450a4:	test   DWORD PTR [rbp+0x3f],esp
   1400450a7:	call   rdx
   1400450a9:	mov    cl,0x81
   1400450ab:	call   rdx
   1400450ad:	mov    cl,0x81
   1400450af:	call   rdx
   1400450b1:	mov    cl,0x81
   1400450b3:	call   rdx
   1400450b5:	mov    cl,0x81
   1400450b7:	inc    DWORD PTR [rbp+0x57ff3f65]
   1400450bd:	cmp    BYTE PTR [rax],bl
   1400450bf:	call   QWORD PTR [rdi+0x38]
   1400450c2:	sbb    bh,bh
   1400450c4:	ins    BYTE PTR es:[rdi],dx
   1400450c5:	rex (bad) 
   1400450c7:	(bad)  
   1400450c8:	jl     0x140045110
   1400450ca:	(bad)  
   1400450cb:	(bad)  
   1400450cc:	jnp    0x140045114
   1400450ce:	(bad)  
   1400450cf:	(bad)  
   1400450d0:	jp     0x140045117
   1400450d2:	(bad)  
   1400450d3:	(bad)  
   1400450d4:	jns    0x14004511a
   1400450d6:	(bad)  
   1400450d7:	(bad)  
   1400450d8:	js     0x14004511e
   1400450da:	(bad)  
   1400450db:	push   QWORD PTR [rdi+0x43]
   1400450de:	(bad)  
   1400450df:	push   QWORD PTR [rsi+0x43]
   1400450e2:	(bad)  
   1400450e3:	push   QWORD PTR [rbp+0x42]
   1400450e6:	(bad)  
   1400450e7:	push   QWORD PTR [rcx+rax*2+0x7]
   1400450eb:	push   QWORD PTR [rbx+0x41]
   1400450ee:	or     bh,bh
   1400450f0:	jb     0x140045132
   1400450f2:	or     bh,bh
   1400450f4:	jno    0x140045135
   1400450f6:	or     bh,bh
   1400450f8:	jo     0x140045139
   1400450fa:	or     bh,bh
   1400450fc:	outs   dx,BYTE PTR ds:[rsi]
   1400450fd:	ds or  bh,bh
   140045100:	outs   dx,BYTE PTR ds:[rsi]
   140045101:	ds or  bh,bh
   140045104:	ins    BYTE PTR es:[rdi],dx
   140045105:	cmp    eax,0x3c6bff08
   14004510a:	or     bh,bh
   14004510c:	push   0x3c
   14004510e:	or     edi,edi
   140045110:	imul   edi,DWORD PTR [rbx],0x3a68ff09
   140045116:	or     edi,edi
   140045118:	cmp    cl,BYTE PTR [ecx]
   14004511b:	jmp    QWORD PTR [rsi+0x39]
   14004511e:	or     edi,edi
	...
   140045140:	movabs eax,ds:0x9fff025ca0ff025c
   140045149:	pop    rbx
   14004514a:	add    bh,bh
   14004514c:	sahf   
   14004514d:	pop    rdx
   14004514e:	add    bh,bh
   140045150:	popf   
   140045151:	pop    rdx
   140045152:	add    edi,edi
   140045154:	pushf  
   140045155:	pop    rcx
   140045156:	add    edi,edi
   140045158:	fwait
   140045159:	pop    rcx
   14004515a:	add    edi,edi
   14004515c:	(bad)  
   14004515d:	pop    rax
   14004515e:	add    edi,edi
   140045160:	cdq    
   140045161:	push   rdi
   140045162:	add    edi,edi
   140045164:	cwde   
   140045165:	push   rdi
   140045166:	add    edi,edi
   140045168:	xchg   edi,eax
   140045169:	push   rsi
   14004516a:	add    edi,edi
   14004516c:	xchg   ebp,eax
   14004516d:	push   rbp
   14004516e:	add    edi,edi
   140045170:	xchg   ebp,eax
   140045171:	push   rbp
   140045172:	add    al,0xff
   140045174:	xchg   ebx,eax
   140045175:	push   rsp
   140045176:	add    al,0xff
   140045178:	xchg   edx,eax
   140045179:	push   rsp
   14004517a:	add    al,0xff
   14004517c:	xchg   ecx,eax
   14004517d:	push   rbx
   14004517e:	add    al,0xff
   140045180:	nop
   140045181:	push   rdx
   140045182:	add    al,0xff
   140045184:	(bad)  
   140045185:	push   rdx
   140045186:	add    al,0xff
   140045188:	mov    ss,WORD PTR [rcx+0x4]
   14004518b:	dec    DWORD PTR [rbp-0x7300fbb0]
   140045191:	push   rax
   140045192:	add    eax,0x94b81ff
   140045197:	call   FWORD PTR [rax+0x39]
   14004519a:	sbb    edi,edi
   14004519c:	pop    rax
   14004519d:	cmp    DWORD PTR [rcx],ebx
   14004519f:	jmp    FWORD PTR [rdi+0x4f]
   1400451a2:	sub    eax,0x83b2d2ff
   1400451a7:	call   rdx
   1400451a9:	mov    dl,0x83
   1400451ab:	call   rdx
   1400451ad:	mov    dl,0x83
   1400451af:	call   rdx
   1400451b1:	mov    dl,0x83
   1400451b3:	call   rdx
   1400451b5:	mov    dl,0x83
   1400451b7:	call   rdx
   1400451b9:	mov    dl,0x83
   1400451bb:	push   QWORD PTR [rsi+0x57]
   1400451be:	xor    al,0xff
   1400451c0:	pop    rax
   1400451c1:	cmp    DWORD PTR [rcx],ebx
   1400451c3:	call   FWORD PTR [rax+0x39]
   1400451c6:	sbb    edi,edi
   1400451c8:	je     0x14004520d
   1400451ca:	or     edi,edi
   1400451cc:	jl     0x140045214
   1400451ce:	(bad)  
   1400451cf:	(bad)  
   1400451d0:	jnp    0x140045218
   1400451d2:	(bad)  
   1400451d3:	(bad)  
   1400451d4:	jp     0x14004521b
   1400451d6:	(bad)  
   1400451d7:	(bad)  
   1400451d8:	jns    0x14004521e
   1400451da:	(bad)  
   1400451db:	(bad)  
   1400451dc:	js     0x140045222
   1400451de:	(bad)  
   1400451df:	push   QWORD PTR [rdi+0x43]
   1400451e2:	(bad)  
   1400451e3:	push   QWORD PTR [rsi+0x43]
   1400451e6:	(bad)  
   1400451e7:	push   QWORD PTR [rbp+0x42]
   1400451ea:	(bad)  
   1400451eb:	push   QWORD PTR [rcx+rax*2+0x7]
   1400451ef:	push   QWORD PTR [rbx+0x41]
   1400451f2:	or     bh,bh
   1400451f4:	jb     0x140045236
   1400451f6:	or     bh,bh
   1400451f8:	jno    0x140045239
   1400451fa:	or     bh,bh
   1400451fc:	jo     0x14004523d
   1400451fe:	or     bh,bh
   140045200:	outs   dx,BYTE PTR ds:[rsi]
   140045201:	ds or  bh,bh
   140045204:	outs   dx,BYTE PTR ds:[rsi]
   140045205:	ds or  bh,bh
   140045208:	ins    BYTE PTR es:[rdi],dx
   140045209:	cmp    eax,0x3c6bff08
   14004520e:	or     bh,bh
   140045210:	push   0x3c
   140045212:	or     edi,edi
   140045214:	imul   edi,DWORD PTR [rbx],0x3a68ff09
   14004521a:	or     edi,edi
   14004521c:	cmp    cl,BYTE PTR [ecx]
   14004521f:	inc    DWORD PTR [rax]
	...
   14004523d:	add    BYTE PTR [rax],al
   14004523f:	add    BYTE PTR [rdx-0x5e00fda3],ah
   140045245:	pop    rsp
   140045246:	add    bh,bh
   140045248:	movabs al,ds:0x9eff025b9fff025c
   140045251:	pop    rdx
   140045252:	add    bh,bh
   140045254:	popf   
   140045255:	pop    rdx
   140045256:	add    edi,edi
   140045258:	pushf  
   140045259:	pop    rcx
   14004525a:	add    edi,edi
   14004525c:	fwait
   14004525d:	pop    rcx
   14004525e:	add    edi,edi
   140045260:	(bad)  
   140045261:	pop    rax
   140045262:	add    edi,edi
   140045264:	cdq    
   140045265:	push   rdi
   140045266:	add    edi,edi
   140045268:	cwde   
   140045269:	push   rdi
   14004526a:	add    edi,edi
   14004526c:	xchg   edi,eax
   14004526d:	push   rsi
   14004526e:	add    edi,edi
   140045270:	xchg   ebp,eax
   140045271:	push   rbp
   140045272:	add    edi,edi
   140045274:	xchg   ebp,eax
   140045275:	push   rbp
   140045276:	add    al,0xff
   140045278:	xchg   ebx,eax
   140045279:	push   rsp
   14004527a:	add    al,0xff
   14004527c:	xchg   edx,eax
   14004527d:	push   rsp
   14004527e:	add    al,0xff
   140045280:	xchg   ecx,eax
   140045281:	push   rbx
   140045282:	add    al,0xff
   140045284:	nop
   140045285:	push   rdx
   140045286:	add    al,0xff
   140045288:	(bad)  
   140045289:	push   rdx
   14004528a:	add    al,0xff
   14004528c:	mov    ss,WORD PTR [rcx+0x4]
   14004528f:	dec    DWORD PTR [rdx+0x5cff054f]
   140045295:	cmp    ebx,DWORD PTR [rcx]
   140045297:	call   FWORD PTR [rcx+0x3a]
   14004529a:	sbb    bh,bh
   14004529c:	jo     0x1400452ef
   14004529e:	cs dec ebx
   1400452a1:	lods   al,BYTE PTR ds:[rsi]
   1400452a2:	jge    0x1400452a3
   1400452a4:	shl    DWORD PTR [rsp+rax*4-0x7b4b2c01],cl
   1400452ab:	call   rbx
   1400452ad:	mov    ah,0x84
   1400452af:	call   rbx
   1400452b1:	mov    ah,0x84
   1400452b3:	call   rbx
   1400452b5:	mov    ah,0x84
   1400452b7:	call   rbx
   1400452b9:	mov    ah,0x84
   1400452bb:	dec    ebx
   1400452bd:	lods   al,BYTE PTR ds:[rsi]
   1400452be:	jge    0x1400452bf
   1400452c0:	jo     0x140045313
   1400452c2:	call   FWORD PTR cs:[rcx+0x3a]
   1400452c6:	sbb    bh,bh
   1400452c8:	pop    rbx
   1400452c9:	cmp    ebx,DWORD PTR [rcx]
   1400452cb:	(bad)  
   1400452cc:	jns    0x140045313
   1400452ce:	or     edi,edi
   1400452d0:	jl     0x140045318
   1400452d2:	(bad)  
   1400452d3:	(bad)  
   1400452d4:	jnp    0x14004531c
   1400452d6:	(bad)  
   1400452d7:	(bad)  
   1400452d8:	jp     0x14004531f
   1400452da:	(bad)  
   1400452db:	(bad)  
   1400452dc:	jns    0x140045322
   1400452de:	(bad)  
   1400452df:	(bad)  
   1400452e0:	js     0x140045326
   1400452e2:	(bad)  
   1400452e3:	push   QWORD PTR [rdi+0x43]
   1400452e6:	(bad)  
   1400452e7:	push   QWORD PTR [rsi+0x43]
   1400452ea:	(bad)  
   1400452eb:	push   QWORD PTR [rbp+0x42]
   1400452ee:	(bad)  
   1400452ef:	push   QWORD PTR [rcx+rax*2+0x7]
   1400452f3:	push   QWORD PTR [rbx+0x41]
   1400452f6:	or     bh,bh
   1400452f8:	jb     0x14004533a
   1400452fa:	or     bh,bh
   1400452fc:	jno    0x14004533d
   1400452fe:	or     bh,bh
   140045300:	jo     0x140045341
   140045302:	or     bh,bh
   140045304:	outs   dx,BYTE PTR ds:[rsi]
   140045305:	ds or  bh,bh
   140045308:	outs   dx,BYTE PTR ds:[rsi]
   140045309:	ds or  bh,bh
   14004530c:	ins    BYTE PTR es:[rdi],dx
   14004530d:	cmp    eax,0x3c6bff08
   140045312:	or     bh,bh
   140045314:	push   0x3c
   140045316:	or     edi,edi
   140045318:	imul   edi,DWORD PTR [rbx],0x3a68ff09
   14004531e:	or     edi,edi
	...
   140045340:	movabs ds:0xa1ff025da2ff025e,eax
   140045349:	pop    rsp
   14004534a:	add    bh,bh
   14004534c:	movabs al,ds:0x9eff025b9fff025c
   140045355:	pop    rdx
   140045356:	add    bh,bh
   140045358:	popf   
   140045359:	pop    rdx
   14004535a:	add    edi,edi
   14004535c:	pushf  
   14004535d:	pop    rcx
   14004535e:	add    edi,edi
   140045360:	fwait
   140045361:	pop    rcx
   140045362:	add    edi,edi
   140045364:	(bad)  
   140045365:	pop    rax
   140045366:	add    edi,edi
   140045368:	cdq    
   140045369:	push   rdi
   14004536a:	add    edi,edi
   14004536c:	cwde   
   14004536d:	push   rdi
   14004536e:	add    edi,edi
   140045370:	xchg   edi,eax
   140045371:	push   rsi
   140045372:	add    edi,edi
   140045374:	xchg   ebp,eax
   140045375:	push   rbp
   140045376:	add    edi,edi
   140045378:	xchg   ebp,eax
   140045379:	push   rbp
   14004537a:	add    al,0xff
   14004537c:	xchg   ebx,eax
   14004537d:	push   rsp
   14004537e:	add    al,0xff
   140045380:	xchg   edx,eax
   140045381:	push   rsp
   140045382:	add    al,0xff
   140045384:	xchg   ecx,eax
   140045385:	push   rbx
   140045386:	add    al,0xff
   140045388:	nop
   140045389:	push   rdx
   14004538a:	add    al,0xff
   14004538c:	(bad)  
   14004538d:	push   rdx
   14004538e:	add    al,0xff
   140045390:	fs (bad) 
   140045392:	(bad)  
   140045393:	call   FWORD PTR [rdx+0x3b]
   140045396:	sbb    edi,edi
   140045398:	(bad)  
   14004539a:	and    bh,bh
   14004539c:	mov    ebp,0xd4ff729e
   1400453a1:	mov    ch,0x86
   1400453a3:	call   rsp
   1400453a5:	mov    ch,0x86
   1400453a7:	call   rsp
   1400453a9:	mov    ch,0x86
   1400453ab:	call   rsp
   1400453ad:	mov    ch,0x86
   1400453af:	call   rsp
   1400453b1:	mov    ch,0x86
   1400453b3:	call   rsp
   1400453b5:	mov    ch,0x86
   1400453b7:	call   rsp
   1400453b9:	mov    ch,0x86
   1400453bb:	call   rsp
   1400453bd:	mov    ch,0x86
   1400453bf:	inc    ebp
   1400453c1:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400453c2:	js     0x1400453c3
   1400453c4:	(bad)  
   1400453c6:	and    bh,bh
   1400453c8:	pop    rdx
   1400453c9:	cmp    ebx,DWORD PTR [rbx]
   1400453cb:	jmp    QWORD PTR [rcx+0x3d]
   1400453ce:	(bad)  
   1400453cf:	(bad)  
   1400453d0:	jnp    0x140045418
   1400453d2:	(bad)  
   1400453d3:	(bad)  
   1400453d4:	jl     0x14004541c
   1400453d6:	(bad)  
   1400453d7:	(bad)  
   1400453d8:	jnp    0x140045420
   1400453da:	(bad)  
   1400453db:	(bad)  
   1400453dc:	jp     0x140045423
   1400453de:	(bad)  
   1400453df:	(bad)  
   1400453e0:	jns    0x140045426
   1400453e2:	(bad)  
   1400453e3:	(bad)  
   1400453e4:	js     0x14004542a
   1400453e6:	(bad)  
   1400453e7:	push   QWORD PTR [rdi+0x43]
   1400453ea:	(bad)  
   1400453eb:	push   QWORD PTR [rsi+0x43]
   1400453ee:	(bad)  
   1400453ef:	push   QWORD PTR [rbp+0x42]
   1400453f2:	(bad)  
   1400453f3:	push   QWORD PTR [rcx+rax*2+0x7]
   1400453f7:	push   QWORD PTR [rbx+0x41]
   1400453fa:	or     bh,bh
   1400453fc:	jb     0x14004543e
   1400453fe:	or     bh,bh
   140045400:	jno    0x140045441
   140045402:	or     bh,bh
   140045404:	jo     0x140045445
   140045406:	or     bh,bh
   140045408:	outs   dx,BYTE PTR ds:[rsi]
   140045409:	ds or  bh,bh
   14004540c:	outs   dx,BYTE PTR ds:[rsi]
   14004540d:	ds or  bh,bh
   140045410:	ins    BYTE PTR es:[rdi],dx
   140045411:	cmp    eax,0x3c6bff08
   140045416:	or     bh,bh
   140045418:	push   0x3c
   14004541a:	or     edi,edi
   14004541c:	imul   edi,DWORD PTR [rbx],0xff09
	...
   14004543e:	add    BYTE PTR [rax],al
   140045440:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140045441:	pop    rsi
   140045442:	add    bh,bh
   140045444:	movabs ds:0xa1ff025da2ff025e,eax
   14004544d:	pop    rsp
   14004544e:	add    bh,bh
   140045450:	movabs al,ds:0x9eff025b9fff025c
   140045459:	pop    rdx
   14004545a:	add    bh,bh
   14004545c:	popf   
   14004545d:	pop    rdx
   14004545e:	add    edi,edi
   140045460:	pushf  
   140045461:	pop    rcx
   140045462:	add    edi,edi
   140045464:	fwait
   140045465:	pop    rcx
   140045466:	add    edi,edi
   140045468:	(bad)  
   140045469:	pop    rax
   14004546a:	add    edi,edi
   14004546c:	cdq    
   14004546d:	push   rdi
   14004546e:	add    edi,edi
   140045470:	cwde   
   140045471:	push   rdi
   140045472:	add    edi,edi
   140045474:	xchg   edi,eax
   140045475:	push   rsi
   140045476:	add    edi,edi
   140045478:	xchg   ebp,eax
   140045479:	push   rbp
   14004547a:	add    edi,edi
   14004547c:	xchg   ebp,eax
   14004547d:	push   rbp
   14004547e:	add    al,0xff
   140045480:	xchg   ebx,eax
   140045481:	push   rsp
   140045482:	add    al,0xff
   140045484:	xchg   edx,eax
   140045485:	push   rsp
   140045486:	add    al,0xff
   140045488:	xchg   ecx,eax
   140045489:	push   rbx
   14004548a:	add    al,0xff
   14004548c:	outs   dx,DWORD PTR ds:[rsi]
   14004548d:	adc    r15d,edi
   140045490:	pop    rbx
   140045491:	cmp    al,0x1c
   140045493:	call   FWORD PTR [rbx+0x3c]
   140045496:	sbb    al,0xff
   140045498:	mov    esi,0xd5ff739f
   14004549d:	mov    dh,0x88
   14004549f:	call   rbp
   1400454a1:	mov    dh,0x88
   1400454a3:	call   rbp
   1400454a5:	mov    dh,0x88
   1400454a7:	call   rbp
   1400454a9:	mov    dh,0x88
   1400454ab:	call   rbp
   1400454ad:	mov    dh,0x88
   1400454af:	call   rbp
   1400454b1:	mov    dh,0x88
   1400454b3:	call   rbp
   1400454b5:	mov    dh,0x88
   1400454b7:	call   rbp
   1400454b9:	mov    dh,0x88
   1400454bb:	call   rbp
   1400454bd:	mov    dh,0x88
   1400454bf:	call   rbp
   1400454c1:	mov    dh,0x88
   1400454c3:	(bad)  
   1400454c4:	mov    esi,0x63ff739f
   1400454c9:	and    r15d,edi
   1400454cc:	pop    rbx
   1400454cd:	cmp    al,0x1c
   1400454cf:	jmp    FWORD PTR [rax+0x40]
   1400454d2:	adc    al,0xff
   1400454d4:	jge    0x14004551d
   1400454d6:	(bad)  
   1400454d7:	(bad)  
   1400454d8:	jl     0x140045520
   1400454da:	(bad)  
   1400454db:	(bad)  
   1400454dc:	jnp    0x140045524
   1400454de:	(bad)  
   1400454df:	(bad)  
   1400454e0:	jp     0x140045527
   1400454e2:	(bad)  
   1400454e3:	(bad)  
   1400454e4:	jns    0x14004552a
   1400454e6:	(bad)  
   1400454e7:	(bad)  
   1400454e8:	js     0x14004552e
   1400454ea:	(bad)  
   1400454eb:	push   QWORD PTR [rdi+0x43]
   1400454ee:	(bad)  
   1400454ef:	push   QWORD PTR [rsi+0x43]
   1400454f2:	(bad)  
   1400454f3:	push   QWORD PTR [rbp+0x42]
   1400454f6:	(bad)  
   1400454f7:	push   QWORD PTR [rcx+rax*2+0x7]
   1400454fb:	push   QWORD PTR [rbx+0x41]
   1400454fe:	or     bh,bh
   140045500:	jb     0x140045542
   140045502:	or     bh,bh
   140045504:	jno    0x140045545
   140045506:	or     bh,bh
   140045508:	jo     0x140045549
   14004550a:	or     bh,bh
   14004550c:	outs   dx,BYTE PTR ds:[rsi]
   14004550d:	ds or  bh,bh
   140045510:	outs   dx,BYTE PTR ds:[rsi]
   140045511:	ds or  bh,bh
   140045514:	ins    BYTE PTR es:[rdi],dx
   140045515:	cmp    eax,0x3c6bff08
   14004551a:	or     bh,bh
   14004551c:	push   0x3c
   14004551e:	or     edi,edi
	...
   140045540:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140045541:	pop    rdi
   140045542:	add    bh,bh
   140045544:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140045545:	pop    rsi
   140045546:	add    bh,bh
   140045548:	movabs ds:0xa1ff025da2ff025e,eax
   140045551:	pop    rsp
   140045552:	add    bh,bh
   140045554:	movabs al,ds:0x9eff025b9fff025c
   14004555d:	pop    rdx
   14004555e:	add    bh,bh
   140045560:	popf   
   140045561:	pop    rdx
   140045562:	add    edi,edi
   140045564:	pushf  
   140045565:	pop    rcx
   140045566:	add    edi,edi
   140045568:	fwait
   140045569:	pop    rcx
   14004556a:	add    edi,edi
   14004556c:	(bad)  
   14004556d:	pop    rax
   14004556e:	add    edi,edi
   140045570:	cdq    
   140045571:	push   rdi
   140045572:	add    edi,edi
   140045574:	cwde   
   140045575:	push   rdi
   140045576:	add    edi,edi
   140045578:	xchg   edi,eax
   140045579:	push   rsi
   14004557a:	add    edi,edi
   14004557c:	xchg   ebp,eax
   14004557d:	push   rbp
   14004557e:	add    edi,edi
   140045580:	xchg   ebp,eax
   140045581:	push   rbp
   140045582:	add    al,0xff
   140045584:	xchg   ebx,eax
   140045585:	push   rsp
   140045586:	add    al,0xff
   140045588:	jle    0x1400455d5
   14004558a:	or     eax,0x1d3d5cff
   14004558f:	call   FWORD PTR [rbp+rdi*1+0x1d]
   140045593:	jmp    FWORD PTR [rax-0x29009e76]
   140045599:	mov    bh,0x8a
   14004559b:	call   rsi
   14004559d:	mov    bh,0x8a
   14004559f:	call   rsi
   1400455a1:	mov    bh,0x8a
   1400455a3:	call   rsi
   1400455a5:	mov    bh,0x8a
   1400455a7:	call   rsi
   1400455a9:	mov    bh,0x8a
   1400455ab:	call   rsi
   1400455ad:	mov    bh,0x8a
   1400455af:	call   rsi
   1400455b1:	mov    bh,0x8a
   1400455b3:	call   rsi
   1400455b5:	mov    bh,0x8a
   1400455b7:	call   rsi
   1400455b9:	mov    bh,0x8a
   1400455bb:	call   rsi
   1400455bd:	mov    bh,0x8a
   1400455bf:	call   rsi
   1400455c1:	mov    bh,0x8a
   1400455c3:	call   rsi
   1400455c5:	mov    bh,0x8a
   1400455c7:	jmp    FWORD PTR [rax+0x5cff618a]
   1400455cd:	cmp    eax,0x3d5cff1d
   1400455d2:	sbb    eax,0x10436fff
   1400455d7:	(bad)  
   1400455d8:	jge    0x140045621
   1400455da:	(bad)  
   1400455db:	(bad)  
   1400455dc:	jl     0x140045624
   1400455de:	(bad)  
   1400455df:	(bad)  
   1400455e0:	jnp    0x140045628
   1400455e2:	(bad)  
   1400455e3:	(bad)  
   1400455e4:	jp     0x14004562b
   1400455e6:	(bad)  
   1400455e7:	(bad)  
   1400455e8:	jns    0x14004562e
   1400455ea:	(bad)  
   1400455eb:	(bad)  
   1400455ec:	js     0x140045632
   1400455ee:	(bad)  
   1400455ef:	push   QWORD PTR [rdi+0x43]
   1400455f2:	(bad)  
   1400455f3:	push   QWORD PTR [rsi+0x43]
   1400455f6:	(bad)  
   1400455f7:	push   QWORD PTR [rbp+0x42]
   1400455fa:	(bad)  
   1400455fb:	push   QWORD PTR [rcx+rax*2+0x7]
   1400455ff:	push   QWORD PTR [rbx+0x41]
   140045602:	or     bh,bh
   140045604:	jb     0x140045646
   140045606:	or     bh,bh
   140045608:	jno    0x140045649
   14004560a:	or     bh,bh
   14004560c:	jo     0x14004564d
   14004560e:	or     bh,bh
   140045610:	outs   dx,BYTE PTR ds:[rsi]
   140045611:	ds or  bh,bh
   140045614:	outs   dx,BYTE PTR ds:[rsi]
   140045615:	ds or  bh,bh
   140045618:	ins    BYTE PTR es:[rdi],dx
   140045619:	cmp    eax,0x3c6bff08
   14004561e:	or     bh,bh
	...
   140045640:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140045641:	pop    rdi
   140045642:	add    edi,edi
   140045644:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140045645:	pop    rdi
   140045646:	add    bh,bh
   140045648:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140045649:	pop    rsi
   14004564a:	add    bh,bh
   14004564c:	movabs ds:0xa1ff025da2ff025e,eax
   140045655:	pop    rsp
   140045656:	add    bh,bh
   140045658:	movabs al,ds:0x9eff025b9fff025c
   140045661:	pop    rdx
   140045662:	add    bh,bh
   140045664:	popf   
   140045665:	pop    rdx
   140045666:	add    edi,edi
   140045668:	pushf  
   140045669:	pop    rcx
   14004566a:	add    edi,edi
   14004566c:	fwait
   14004566d:	pop    rcx
   14004566e:	add    edi,edi
   140045670:	(bad)  
   140045671:	pop    rax
   140045672:	add    edi,edi
   140045674:	cdq    
   140045675:	push   rdi
   140045676:	add    edi,edi
   140045678:	cwde   
   140045679:	push   rdi
   14004567a:	add    edi,edi
   14004567c:	xchg   edi,eax
   14004567d:	push   rsi
   14004567e:	add    edi,edi
   140045680:	xchg   ebp,eax
   140045681:	push   rbp
   140045682:	add    edi,edi
   140045684:	mov    dl,BYTE PTR [rcx+0x9]
   140045687:	call   FWORD PTR [rsi+0x3e]
   14004568a:	(bad)  
   14004568b:	call   FWORD PTR [rsi+0x3e]
   14004568e:	(bad)  
   14004568f:	call   FWORD PTR [rdx-0x2900ab85]
   140045695:	mov    ecx,0xb9d6ff8b
   14004569a:	mov    edi,edi
   14004569c:	(bad)  
   14004569d:	mov    ecx,0xb9d6ff8b
   1400456a2:	mov    edi,edi
   1400456a4:	(bad)  
   1400456a5:	mov    ecx,0xb9d6ff8b
   1400456aa:	mov    edi,edi
   1400456ac:	(bad)  
   1400456ad:	mov    ecx,0xb9d6ff8b
   1400456b2:	mov    edi,edi
   1400456b4:	(bad)  
   1400456b5:	mov    ecx,0xb9d6ff8b
   1400456ba:	mov    edi,edi
   1400456bc:	(bad)  
   1400456bd:	mov    ecx,0xb9d6ff8b
   1400456c2:	mov    edi,edi
   1400456c4:	(bad)  
   1400456c5:	mov    ecx,0xb9d6ff8b
   1400456ca:	mov    edi,edi
   1400456cc:	movabs eax,ds:0x5eff1e3e5eff5b83
   1400456d5:	ds (bad) 
   1400456d7:	push   QWORD PTR [rsi+0x45]
   1400456da:	or     al,0xff
   1400456dc:	jge    0x140045725
   1400456de:	(bad)  
   1400456df:	(bad)  
   1400456e0:	jl     0x140045728
   1400456e2:	(bad)  
   1400456e3:	(bad)  
   1400456e4:	jnp    0x14004572c
   1400456e6:	(bad)  
   1400456e7:	(bad)  
   1400456e8:	jp     0x14004572f
   1400456ea:	(bad)  
   1400456eb:	(bad)  
   1400456ec:	jns    0x140045732
   1400456ee:	(bad)  
   1400456ef:	(bad)  
   1400456f0:	js     0x140045736
   1400456f2:	(bad)  
   1400456f3:	push   QWORD PTR [rdi+0x43]
   1400456f6:	(bad)  
   1400456f7:	push   QWORD PTR [rsi+0x43]
   1400456fa:	(bad)  
   1400456fb:	push   QWORD PTR [rbp+0x42]
   1400456fe:	(bad)  
   1400456ff:	push   QWORD PTR [rcx+rax*2+0x7]
   140045703:	push   QWORD PTR [rbx+0x41]
   140045706:	or     bh,bh
   140045708:	jb     0x14004574a
   14004570a:	or     bh,bh
   14004570c:	jno    0x14004574d
   14004570e:	or     bh,bh
   140045710:	jo     0x140045751
   140045712:	or     bh,bh
   140045714:	outs   dx,BYTE PTR ds:[rsi]
   140045715:	ds or  bh,bh
   140045718:	outs   dx,BYTE PTR ds:[rsi]
   140045719:	ds or  bh,bh
   14004571c:	ins    BYTE PTR es:[rdi],dx
   14004571d:	cmp    eax,0xff08
	...
   14004573e:	add    BYTE PTR [rax],al
   140045740:	test   al,0x60
   140045742:	add    edi,edi
   140045744:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140045745:	pop    rdi
   140045746:	add    edi,edi
   140045748:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140045749:	pop    rdi
   14004574a:	add    bh,bh
   14004574c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004574d:	pop    rsi
   14004574e:	add    bh,bh
   140045750:	movabs ds:0xa1ff025da2ff025e,eax
   140045759:	pop    rsp
   14004575a:	add    bh,bh
   14004575c:	movabs al,ds:0x9eff025b9fff025c
   140045765:	pop    rdx
   140045766:	add    bh,bh
   140045768:	popf   
   140045769:	pop    rdx
   14004576a:	add    edi,edi
   14004576c:	pushf  
   14004576d:	pop    rcx
   14004576e:	add    edi,edi
   140045770:	fwait
   140045771:	pop    rcx
   140045772:	add    edi,edi
   140045774:	(bad)  
   140045775:	pop    rax
   140045776:	add    edi,edi
   140045778:	cdq    
   140045779:	push   rdi
   14004577a:	add    edi,edi
   14004577c:	cwde   
   14004577d:	push   rdi
   14004577e:	add    edi,edi
   140045780:	xchg   ebx,eax
   140045781:	push   rbp
   140045782:	add    eax,0x1d4162ff
   140045787:	call   FWORD PTR [rdi+0x3f]
   14004578a:	(bad)  
   14004578b:	dec    DWORD PTR [rbp+rbp*2-0x452800b8]
   140045792:	(bad)  
   140045793:	call   rdi
   140045795:	mov    edx,0xbad7ff8d
   14004579a:	(bad)  
   14004579b:	call   rdi
   14004579d:	mov    edx,0xbad7ff8d
   1400457a2:	(bad)  
   1400457a3:	call   rdi
   1400457a5:	mov    edx,0xbad7ff8d
   1400457aa:	(bad)  
   1400457ab:	call   rdi
   1400457ad:	mov    edx,0xbad7ff8d
   1400457b2:	(bad)  
   1400457b3:	call   rdi
   1400457b5:	mov    edx,0xbad7ff8d
   1400457ba:	(bad)  
   1400457bb:	call   rdi
   1400457bd:	mov    edx,0xbad7ff8d
   1400457c2:	(bad)  
   1400457c3:	call   rdi
   1400457c5:	mov    edx,0xbad7ff8d
   1400457ca:	(bad)  
   1400457cb:	call   rdi
   1400457cd:	mov    edx,0x6d8cff8d
   1400457d2:	rex.W call FWORD PTR [rdi+0x3f]
   1400457d6:	(bad)  
   1400457d7:	jmp    QWORD PTR [rcx+0x40]
   1400457da:	sbb    eax,0x9467aff
   1400457df:	(bad)  
   1400457e0:	jge    0x140045829
   1400457e2:	(bad)  
   1400457e3:	(bad)  
   1400457e4:	jl     0x14004582c
   1400457e6:	(bad)  
   1400457e7:	(bad)  
   1400457e8:	jnp    0x140045830
   1400457ea:	(bad)  
   1400457eb:	(bad)  
   1400457ec:	jp     0x140045833
   1400457ee:	(bad)  
   1400457ef:	(bad)  
   1400457f0:	jns    0x140045836
   1400457f2:	(bad)  
   1400457f3:	(bad)  
   1400457f4:	js     0x14004583a
   1400457f6:	(bad)  
   1400457f7:	push   QWORD PTR [rdi+0x43]
   1400457fa:	(bad)  
   1400457fb:	push   QWORD PTR [rsi+0x43]
   1400457fe:	(bad)  
   1400457ff:	push   QWORD PTR [rbp+0x42]
   140045802:	(bad)  
   140045803:	push   QWORD PTR [rcx+rax*2+0x7]
   140045807:	push   QWORD PTR [rbx+0x41]
   14004580a:	or     bh,bh
   14004580c:	jb     0x14004584e
   14004580e:	or     bh,bh
   140045810:	jno    0x140045851
   140045812:	or     bh,bh
   140045814:	jo     0x140045855
   140045816:	or     bh,bh
   140045818:	outs   dx,BYTE PTR ds:[rsi]
   140045819:	ds or  bh,bh
   14004581c:	outs   dx,BYTE PTR ds:[rsi]
   14004581d:	ds or  bh,bh
	...
   140045840:	test   al,0x61
   140045842:	add    edi,edi
   140045844:	test   al,0x60
   140045846:	add    edi,edi
   140045848:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140045849:	pop    rdi
   14004584a:	add    edi,edi
   14004584c:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004584d:	pop    rdi
   14004584e:	add    bh,bh
   140045850:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140045851:	pop    rsi
   140045852:	add    bh,bh
   140045854:	movabs ds:0xa1ff025da2ff025e,eax
   14004585d:	pop    rsp
   14004585e:	add    bh,bh
   140045860:	movabs al,ds:0x9eff025b9fff025c
   140045869:	pop    rdx
   14004586a:	add    bh,bh
   14004586c:	popf   
   14004586d:	pop    rdx
   14004586e:	add    edi,edi
   140045870:	pushf  
   140045871:	pop    rcx
   140045872:	add    edi,edi
   140045874:	fwait
   140045875:	pop    rcx
   140045876:	add    edi,edi
   140045878:	(bad)  
   140045879:	pop    rax
   14004587a:	add    edi,edi
   14004587c:	cdq    
   14004587d:	push   rdi
   14004587e:	add    edi,edi
   140045880:	push   0x45
   140045882:	sbb    bh,bh
   140045884:	(bad)  
   140045885:	rex.B (bad) 
   140045887:	push   QWORD PTR [rsi+0x57]
   14004588a:	xor    al,0xff
   14004588c:	fdivr  DWORD PTR [rbx-0x44270071]
   140045892:	(bad)  
   140045893:	(bad)  
   140045894:	fdivr  DWORD PTR [rbx-0x44270071]
   14004589a:	(bad)  
   14004589b:	(bad)  
   14004589c:	fdivr  DWORD PTR [rbx-0x44270071]
   1400458a2:	(bad)  
   1400458a3:	(bad)  
   1400458a4:	fdivr  DWORD PTR [rbx-0x44270071]
   1400458aa:	(bad)  
   1400458ab:	(bad)  
   1400458ac:	fdivr  DWORD PTR [rbx-0x44270071]
   1400458b2:	(bad)  
   1400458b3:	(bad)  
   1400458b4:	fdivr  DWORD PTR [rbx-0x44270071]
   1400458ba:	(bad)  
   1400458bb:	(bad)  
   1400458bc:	fdivr  DWORD PTR [rbx-0x44270071]
   1400458c2:	(bad)  
   1400458c3:	(bad)  
   1400458c4:	fdivr  DWORD PTR [rbx-0x44270071]
   1400458ca:	(bad)  
   1400458cb:	(bad)  
   1400458cc:	fdivr  DWORD PTR [rbx-0x44270071]
   1400458d2:	(bad)  
   1400458d3:	(bad)  
   1400458d4:	jle    0x140045935
   1400458d6:	cmp    edi,edi
   1400458d8:	(bad)  
   1400458d9:	rex.B (bad) 
   1400458db:	jmp    QWORD PTR [rsi+0x42]
   1400458de:	sbb    edi,edi
   1400458e0:	jl     0x140045929
   1400458e2:	or     bh,bh
   1400458e4:	jge    0x14004592d
   1400458e6:	(bad)  
   1400458e7:	(bad)  
   1400458e8:	jl     0x140045930
   1400458ea:	(bad)  
   1400458eb:	(bad)  
   1400458ec:	jnp    0x140045934
   1400458ee:	(bad)  
   1400458ef:	(bad)  
   1400458f0:	jp     0x140045937
   1400458f2:	(bad)  
   1400458f3:	(bad)  
   1400458f4:	jns    0x14004593a
   1400458f6:	(bad)  
   1400458f7:	(bad)  
   1400458f8:	js     0x14004593e
   1400458fa:	(bad)  
   1400458fb:	push   QWORD PTR [rdi+0x43]
   1400458fe:	(bad)  
   1400458ff:	push   QWORD PTR [rsi+0x43]
   140045902:	(bad)  
   140045903:	push   QWORD PTR [rbp+0x42]
   140045906:	(bad)  
   140045907:	push   QWORD PTR [rcx+rax*2+0x7]
   14004590b:	push   QWORD PTR [rbx+0x41]
   14004590e:	or     bh,bh
   140045910:	jb     0x140045952
   140045912:	or     bh,bh
   140045914:	jno    0x140045955
   140045916:	or     bh,bh
   140045918:	jo     0x140045959
   14004591a:	or     bh,bh
   14004591c:	outs   dx,BYTE PTR ds:[rsi]
   14004591d:	ds or  bh,bh
	...
   140045940:	stos   BYTE PTR es:[rdi],al
   140045941:	(bad)  
   140045942:	add    edi,edi
   140045944:	test   al,0x61
   140045946:	add    edi,edi
   140045948:	test   al,0x60
   14004594a:	add    edi,edi
   14004594c:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004594d:	pop    rdi
   14004594e:	add    edi,edi
   140045950:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140045951:	pop    rdi
   140045952:	add    bh,bh
   140045954:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140045955:	pop    rsi
   140045956:	add    bh,bh
   140045958:	movabs ds:0xa1ff025da2ff025e,eax
   140045961:	pop    rsp
   140045962:	add    bh,bh
   140045964:	movabs al,ds:0x9eff025b9fff025c
   14004596d:	pop    rdx
   14004596e:	add    bh,bh
   140045970:	popf   
   140045971:	pop    rdx
   140045972:	add    edi,edi
   140045974:	pushf  
   140045975:	pop    rcx
   140045976:	add    edi,edi
   140045978:	fwait
   140045979:	pop    rcx
   14004597a:	add    edi,edi
   14004597c:	jbe    0x1400459c8
   14004597e:	adc    eax,0x204261ff
   140045983:	push   QWORD PTR [rdi+0x59]
   140045986:	xor    eax,0x8ab5d1ff
   14004598b:	(bad)  
   14004598c:	fnstcw WORD PTR [rcx+rdx*4-0x6e432601]
   140045993:	(bad)  
   140045994:	fnstcw WORD PTR [rcx+rdx*4-0x6e432601]
   14004599b:	(bad)  
   14004599c:	fnstcw WORD PTR [rcx+rdx*4-0x6e432601]
   1400459a3:	(bad)  
   1400459a4:	fnstcw WORD PTR [rcx+rdx*4-0x6e432601]
   1400459ab:	(bad)  
   1400459ac:	fnstcw WORD PTR [rcx+rdx*4-0x6e432601]
   1400459b3:	(bad)  
   1400459b4:	fnstcw WORD PTR [rcx+rdx*4-0x6e432601]
   1400459bb:	(bad)  
   1400459bc:	fnstcw WORD PTR [rcx+rdx*4-0x6e432601]
   1400459c3:	(bad)  
   1400459c4:	fnstcw WORD PTR [rcx+rdx*4-0x6e432601]
   1400459cb:	(bad)  
   1400459cc:	fnstcw WORD PTR [rcx+rdx*4-0x6e432601]
   1400459d3:	call   rcx
   1400459d5:	mov    ch,0x8a
   1400459d7:	push   QWORD PTR [rdi+0x59]
   1400459da:	xor    eax,0x204261ff
   1400459df:	jmp    FWORD PTR [rsp+rax*2+0x16]
   1400459e3:	(bad)  
   1400459e4:	jle    0x140045a2d
   1400459e6:	(bad)  
   1400459e7:	(bad)  
   1400459e8:	jge    0x140045a31
   1400459ea:	(bad)  
   1400459eb:	(bad)  
   1400459ec:	jl     0x140045a34
   1400459ee:	(bad)  
   1400459ef:	(bad)  
   1400459f0:	jnp    0x140045a38
   1400459f2:	(bad)  
   1400459f3:	(bad)  
   1400459f4:	jp     0x140045a3b
   1400459f6:	(bad)  
   1400459f7:	(bad)  
   1400459f8:	jns    0x140045a3e
   1400459fa:	(bad)  
   1400459fb:	(bad)  
   1400459fc:	js     0x140045a42
   1400459fe:	(bad)  
   1400459ff:	push   QWORD PTR [rdi+0x43]
   140045a02:	(bad)  
   140045a03:	push   QWORD PTR [rsi+0x43]
   140045a06:	(bad)  
   140045a07:	push   QWORD PTR [rbp+0x42]
   140045a0a:	(bad)  
   140045a0b:	push   QWORD PTR [rcx+rax*2+0x7]
   140045a0f:	push   QWORD PTR [rbx+0x41]
   140045a12:	or     bh,bh
   140045a14:	jb     0x140045a56
   140045a16:	or     bh,bh
   140045a18:	jno    0x140045a59
   140045a1a:	or     bh,bh
   140045a1c:	jo     0x140045a5d
   140045a1e:	or     bh,bh
	...
   140045a40:	stos   DWORD PTR es:[rdi],eax
   140045a41:	(bad)  {k2}{z}
   140045a46:	add    edi,edi
   140045a48:	test   al,0x61
   140045a4a:	add    edi,edi
   140045a4c:	test   al,0x60
   140045a4e:	add    edi,edi
   140045a50:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140045a51:	pop    rdi
   140045a52:	add    edi,edi
   140045a54:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140045a55:	pop    rdi
   140045a56:	add    bh,bh
   140045a58:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140045a59:	pop    rsi
   140045a5a:	add    bh,bh
   140045a5c:	movabs ds:0xa1ff025da2ff025e,eax
   140045a65:	pop    rsp
   140045a66:	add    bh,bh
   140045a68:	movabs al,ds:0x9eff025b9fff025c
   140045a71:	pop    rdx
   140045a72:	add    bh,bh
   140045a74:	popf   
   140045a75:	pop    rdx
   140045a76:	add    edi,edi
   140045a78:	xchg   BYTE PTR [rcx+0xe],dl
   140045a7b:	jmp    QWORD PTR [rdx+0x43]
   140045a7e:	and    edi,edi
   140045a80:	push   0x4a
   140045a82:	sub    bh,bh
   140045a84:	ret    
   140045a85:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140045a86:	jge    0x140045a87
   140045a88:	fidivr DWORD PTR [rbp-0x4225006e]
   140045a8e:	xchg   edx,eax
   140045a8f:	(bad)  
   140045a90:	fidivr DWORD PTR [rbp-0x4225006e]
   140045a96:	xchg   edx,eax
   140045a97:	(bad)  
   140045a98:	fidivr DWORD PTR [rbp-0x4225006e]
   140045a9e:	xchg   edx,eax
   140045a9f:	(bad)  
   140045aa0:	fidivr DWORD PTR [rbp-0x4225006e]
   140045aa6:	xchg   edx,eax
   140045aa7:	(bad)  
   140045aa8:	fidivr DWORD PTR [rbp-0x4225006e]
   140045aae:	xchg   edx,eax
   140045aaf:	(bad)  
   140045ab0:	fidivr DWORD PTR [rbp-0x4225006e]
   140045ab6:	xchg   edx,eax
   140045ab7:	(bad)  
   140045ab8:	fidivr DWORD PTR [rbp-0x4225006e]
   140045abe:	xchg   edx,eax
   140045abf:	(bad)  
   140045ac0:	fidivr DWORD PTR [rbp-0x4225006e]
   140045ac6:	xchg   edx,eax
   140045ac7:	(bad)  
   140045ac8:	fidivr DWORD PTR [rbp-0x4225006e]
   140045ace:	xchg   edx,eax
   140045acf:	(bad)  
   140045ad0:	fidivr DWORD PTR [rbp-0x4225006e]
   140045ad6:	xchg   edx,eax
   140045ad7:	dec    ebx
   140045ad9:	scas   al,BYTE PTR es:[rdi]
   140045ada:	test   bh,bh
   140045adc:	push   0x4a
   140045ade:	sub    bh,bh
   140045ae0:	(bad)  
   140045ae2:	and    edi,edi
   140045ae4:	jb     0x140045b2c
   140045ae6:	adc    bh,bh
   140045ae8:	jle    0x140045b31
   140045aea:	(bad)  
   140045aeb:	(bad)  
   140045aec:	jge    0x140045b35
   140045aee:	(bad)  
   140045aef:	(bad)  
   140045af0:	jl     0x140045b38
   140045af2:	(bad)  
   140045af3:	(bad)  
   140045af4:	jnp    0x140045b3c
   140045af6:	(bad)  
   140045af7:	(bad)  
   140045af8:	jp     0x140045b3f
   140045afa:	(bad)  
   140045afb:	(bad)  
   140045afc:	jns    0x140045b42
   140045afe:	(bad)  
   140045aff:	(bad)  
   140045b00:	js     0x140045b46
   140045b02:	(bad)  
   140045b03:	push   QWORD PTR [rdi+0x43]
   140045b06:	(bad)  
   140045b07:	push   QWORD PTR [rsi+0x43]
   140045b0a:	(bad)  
   140045b0b:	push   QWORD PTR [rbp+0x42]
   140045b0e:	(bad)  
   140045b0f:	push   QWORD PTR [rcx+rax*2+0x7]
   140045b13:	push   QWORD PTR [rbx+0x41]
   140045b16:	or     bh,bh
   140045b18:	jb     0x140045b5a
   140045b1a:	or     bh,bh
   140045b1c:	jno    0x140045b5d
   140045b1e:	or     bh,bh
	...
   140045b40:	lods   al,BYTE PTR ds:[rsi]
   140045b41:	movsxd eax,DWORD PTR [rcx]
   140045b43:	jmp    FWORD PTR [rbx-0x5500fe9e]
   140045b49:	(bad)  
   140045b4a:	add    edi,edi
   140045b4c:	test   al,0x61
   140045b4e:	add    edi,edi
   140045b50:	test   al,0x60
   140045b52:	add    edi,edi
   140045b54:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140045b55:	pop    rdi
   140045b56:	add    edi,edi
   140045b58:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140045b59:	pop    rdi
   140045b5a:	add    bh,bh
   140045b5c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140045b5d:	pop    rsi
   140045b5e:	add    bh,bh
   140045b60:	movabs ds:0xa1ff025da2ff025e,eax
   140045b69:	pop    rsp
   140045b6a:	add    bh,bh
   140045b6c:	movabs al,ds:0x93ff025b9fff025c
   140045b75:	push   rsi
   140045b76:	or     bh,bh
   140045b78:	movsxd eax,DWORD PTR [rdx+riz*1-0x1]
   140045b7c:	movsxd eax,DWORD PTR [rdx+riz*1-0x1]
   140045b80:	(bad)  
   140045b81:	test   al,0x7f
   140045b83:	(bad)  
   140045b84:	fstp   TBYTE PTR [rdi-0x4024006c]
   140045b8a:	xchg   esp,eax
   140045b8b:	(bad)  
   140045b8c:	fstp   TBYTE PTR [rdi-0x4024006c]
   140045b92:	xchg   esp,eax
   140045b93:	(bad)  
   140045b94:	fstp   TBYTE PTR [rdi-0x4024006c]
   140045b9a:	xchg   esp,eax
   140045b9b:	(bad)  
   140045b9c:	fstp   TBYTE PTR [rdi-0x4024006c]
   140045ba2:	xchg   esp,eax
   140045ba3:	(bad)  
   140045ba4:	fstp   TBYTE PTR [rdi-0x4024006c]
   140045baa:	xchg   esp,eax
   140045bab:	(bad)  
   140045bac:	fstp   TBYTE PTR [rdi-0x4024006c]
   140045bb2:	xchg   esp,eax
   140045bb3:	(bad)  
   140045bb4:	fstp   TBYTE PTR [rdi-0x4024006c]
   140045bba:	xchg   esp,eax
   140045bbb:	(bad)  
   140045bbc:	fstp   TBYTE PTR [rdi-0x4024006c]
   140045bc2:	xchg   esp,eax
   140045bc3:	(bad)  
   140045bc4:	fstp   TBYTE PTR [rdi-0x4024006c]
   140045bca:	xchg   esp,eax
   140045bcb:	(bad)  
   140045bcc:	fstp   TBYTE PTR [rdi-0x4024006c]
   140045bd2:	xchg   esp,eax
   140045bd3:	(bad)  
   140045bd4:	fstp   TBYTE PTR [rdi-0x4024006c]
   140045bda:	xchg   esp,eax
   140045bdb:	inc    esp
   140045bdd:	test   al,0x7f
   140045bdf:	jmp    QWORD PTR [rbx+0x44]
   140045be2:	and    bh,bh
   140045be4:	movsxd eax,DWORD PTR [rdx+riz*1-0x1]
   140045be8:	js     0x140045c31
   140045bea:	or     eax,0x6477eff
   140045bef:	(bad)  
   140045bf0:	jge    0x140045c39
   140045bf2:	(bad)  
   140045bf3:	(bad)  
   140045bf4:	jl     0x140045c3c
   140045bf6:	(bad)  
   140045bf7:	(bad)  
   140045bf8:	jnp    0x140045c40
   140045bfa:	(bad)  
   140045bfb:	(bad)  
   140045bfc:	jp     0x140045c43
   140045bfe:	(bad)  
   140045bff:	(bad)  
   140045c00:	jns    0x140045c46
   140045c02:	(bad)  
   140045c03:	(bad)  
   140045c04:	js     0x140045c4a
   140045c06:	(bad)  
   140045c07:	push   QWORD PTR [rdi+0x43]
   140045c0a:	(bad)  
   140045c0b:	push   QWORD PTR [rsi+0x43]
   140045c0e:	(bad)  
   140045c0f:	push   QWORD PTR [rbp+0x42]
   140045c12:	(bad)  
   140045c13:	push   QWORD PTR [rcx+rax*2+0x7]
   140045c17:	push   QWORD PTR [rbx+0x41]
   140045c1a:	or     bh,bh
   140045c1c:	jb     0x140045c5e
   140045c1e:	or     bh,bh
	...
   140045c40:	lods   eax,DWORD PTR ds:[rsi]
   140045c41:	movsxd eax,DWORD PTR [rcx]
   140045c43:	jmp    FWORD PTR [rbx+riz*2+0x62abff01]
   140045c4a:	add    edi,edi
   140045c4c:	stos   BYTE PTR es:[rdi],al
   140045c4d:	(bad)  
   140045c4e:	add    edi,edi
   140045c50:	test   al,0x61
   140045c52:	add    edi,edi
   140045c54:	test   al,0x60
   140045c56:	add    edi,edi
   140045c58:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140045c59:	pop    rdi
   140045c5a:	add    edi,edi
   140045c5c:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140045c5d:	pop    rdi
   140045c5e:	add    bh,bh
   140045c60:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140045c61:	pop    rsi
   140045c62:	add    bh,bh
   140045c64:	movabs ds:0xa1ff025da2ff025e,eax
   140045c6d:	pop    rsp
   140045c6e:	add    bh,bh
   140045c70:	pushf  
   140045c71:	pop    rdx
   140045c72:	add    al,0xff
   140045c74:	push   0x64ff2146
   140045c79:	and    r15d,r15d
   140045c7c:	fs and r15d,r15d
   140045c80:	fs and r15d,r15d
   140045c84:	fs and r15d,r15d
   140045c88:	fs and r15d,r15d
   140045c8c:	fs and r15d,r15d
   140045c90:	fs and r15d,r15d
   140045c94:	fs and r15d,r15d
   140045c98:	fcmovnb st,st(0)
   140045c9a:	xchg   esi,eax
   140045c9b:	(bad)  
   140045c9c:	fcmovnb st,st(0)
   140045c9e:	xchg   esi,eax
   140045c9f:	(bad)  
   140045ca0:	fcmovnb st,st(0)
   140045ca2:	xchg   esi,eax
   140045ca3:	(bad)  
   140045ca4:	fcmovnb st,st(0)
   140045ca6:	xchg   esi,eax
   140045ca7:	(bad)  
   140045ca8:	fcmovnb st,st(0)
   140045caa:	xchg   esi,eax
   140045cab:	(bad)  
   140045cac:	fcmovnb st,st(0)
   140045cae:	xchg   esi,eax
   140045caf:	(bad)  
   140045cb0:	fcmovnb st,st(0)
   140045cb2:	xchg   esi,eax
   140045cb3:	(bad)  
   140045cb4:	fcmovnb st,st(0)
   140045cb6:	xchg   esi,eax
   140045cb7:	(bad)  
   140045cb8:	fcmovnb st,st(0)
   140045cba:	xchg   esi,eax
   140045cbb:	(bad)  
   140045cbc:	fcmovnb st,st(0)
   140045cbe:	xchg   esi,eax
   140045cbf:	(bad)  
   140045cc0:	fcmovnb st,st(0)
   140045cc2:	xchg   esi,eax
   140045cc3:	(bad)  
   140045cc4:	fcmovnb st,st(0)
   140045cc6:	xchg   esi,eax
   140045cc7:	jmp    QWORD PTR [rbp+rax*2+0x23]
   140045ccb:	jmp    QWORD PTR [rbp+rax*2+0x23]
   140045ccf:	jmp    QWORD PTR [rbp+rax*2+0x23]
   140045cd3:	jmp    QWORD PTR [rbp+rax*2+0x23]
   140045cd7:	jmp    QWORD PTR [rbp+rax*2+0x23]
   140045cdb:	jmp    QWORD PTR [rbp+rax*2+0x23]
   140045cdf:	jmp    QWORD PTR [rbp+rax*2+0x23]
   140045ce3:	jmp    QWORD PTR [rbp+rax*2+0x23]
   140045ce7:	jmp    QWORD PTR [rsi+0x45]
   140045cea:	and    edi,edi
   140045cec:	jl     0x140045d36
   140045cee:	or     bh,bh
   140045cf0:	jle    0x140045d39
   140045cf2:	(bad)  
   140045cf3:	(bad)  
   140045cf4:	jge    0x140045d3d
   140045cf6:	(bad)  
   140045cf7:	(bad)  
   140045cf8:	jl     0x140045d40
   140045cfa:	(bad)  
   140045cfb:	(bad)  
   140045cfc:	jnp    0x140045d44
   140045cfe:	(bad)  
   140045cff:	(bad)  
   140045d00:	jp     0x140045d47
   140045d02:	(bad)  
   140045d03:	(bad)  
   140045d04:	jns    0x140045d4a
   140045d06:	(bad)  
   140045d07:	(bad)  
   140045d08:	js     0x140045d4e
   140045d0a:	(bad)  
   140045d0b:	push   QWORD PTR [rdi+0x43]
   140045d0e:	(bad)  
   140045d0f:	push   QWORD PTR [rsi+0x43]
   140045d12:	(bad)  
   140045d13:	push   QWORD PTR [rbp+0x42]
   140045d16:	(bad)  
   140045d17:	push   QWORD PTR [rcx+rax*2+0x7]
   140045d1b:	push   QWORD PTR [rbx+0x41]
   140045d1e:	or     bh,bh
	...
   140045d40:	scas   al,BYTE PTR es:[rdi]
   140045d41:	fs add edi,edi
   140045d44:	lods   eax,DWORD PTR ds:[rsi]
   140045d45:	movsxd eax,DWORD PTR [rcx]
   140045d47:	jmp    FWORD PTR [rbx+riz*2+0x62abff01]
   140045d4e:	add    edi,edi
   140045d50:	stos   BYTE PTR es:[rdi],al
   140045d51:	(bad)  
   140045d52:	add    edi,edi
   140045d54:	test   al,0x61
   140045d56:	add    edi,edi
   140045d58:	test   al,0x60
   140045d5a:	add    edi,edi
   140045d5c:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140045d5d:	pop    rdi
   140045d5e:	add    edi,edi
   140045d60:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140045d61:	pop    rdi
   140045d62:	add    bh,bh
   140045d64:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140045d65:	pop    rsi
   140045d66:	add    bh,bh
   140045d68:	movabs ds:0x71ff025da2ff025e,eax
   140045d71:	rex.WX (bad) 
   140045d73:	jmp    QWORD PTR [rsi+0x46]
   140045d76:	and    al,0xff
   140045d78:	data16 rex.RX and al,0xff
   140045d7c:	data16 rex.RX and al,0xff
   140045d80:	data16 rex.RX and al,0xff
   140045d84:	data16 rex.RX and al,0xff
   140045d88:	data16 rex.RX and al,0xff
   140045d8c:	data16 rex.RX and al,0xff
   140045d90:	data16 rex.RX and al,0xff
   140045d94:	data16 rex.RX and al,0xff
   140045d98:	fadd   st(1),st
   140045d9a:	cwde   
   140045d9b:	(bad)  
   140045d9c:	fadd   st(1),st
   140045d9e:	cwde   
   140045d9f:	(bad)  
   140045da0:	fadd   st(1),st
   140045da2:	cwde   
   140045da3:	(bad)  
   140045da4:	fadd   st(1),st
   140045da6:	cwde   
   140045da7:	(bad)  
   140045da8:	fadd   st(1),st
   140045daa:	cwde   
   140045dab:	(bad)  
   140045dac:	fadd   st(1),st
   140045dae:	cwde   
   140045daf:	(bad)  
   140045db0:	fadd   st(1),st
   140045db2:	cwde   
   140045db3:	(bad)  
   140045db4:	fadd   st(1),st
   140045db6:	cwde   
   140045db7:	(bad)  
   140045db8:	fadd   st(1),st
   140045dba:	cwde   
   140045dbb:	(bad)  
   140045dbc:	fadd   st(1),st
   140045dbe:	cwde   
   140045dbf:	(bad)  
   140045dc0:	fadd   st(1),st
   140045dc2:	cwde   
   140045dc3:	(bad)  
   140045dc4:	fadd   st(1),st
   140045dc6:	cwde   
   140045dc7:	jmp    QWORD PTR [rsi+0x46]
   140045dca:	and    al,0xff
   140045dcc:	data16 rex.RX and al,0xff
   140045dd0:	data16 rex.RX and al,0xff
   140045dd4:	data16 rex.RX and al,0xff
   140045dd8:	data16 rex.RX and al,0xff
   140045ddc:	data16 rex.RX and al,0xff
   140045de0:	data16 rex.RX and al,0xff
   140045de4:	data16 rex.RX and al,0xff
   140045de8:	data16 rex.RX and al,0xff
   140045dec:	imul   eax,DWORD PTR [rdi+0x1e],0xffffffff
   140045df0:	jg     0x140045e3a
   140045df2:	(bad)  
   140045df3:	(bad)  
   140045df4:	jle    0x140045e3d
   140045df6:	(bad)  
   140045df7:	(bad)  
   140045df8:	jge    0x140045e41
   140045dfa:	(bad)  
   140045dfb:	(bad)  
   140045dfc:	jl     0x140045e44
   140045dfe:	(bad)  
   140045dff:	(bad)  
   140045e00:	jnp    0x140045e48
   140045e02:	(bad)  
   140045e03:	(bad)  
   140045e04:	jp     0x140045e4b
   140045e06:	(bad)  
   140045e07:	(bad)  
   140045e08:	jns    0x140045e4e
   140045e0a:	(bad)  
   140045e0b:	(bad)  
   140045e0c:	js     0x140045e52
   140045e0e:	(bad)  
   140045e0f:	push   QWORD PTR [rdi+0x43]
   140045e12:	(bad)  
   140045e13:	push   QWORD PTR [rsi+0x43]
   140045e16:	(bad)  
   140045e17:	push   QWORD PTR [rbp+0x42]
   140045e1a:	(bad)  
   140045e1b:	push   QWORD PTR [rcx+rax*2+0x7]
   140045e1f:	inc    DWORD PTR [rax]
	...
   140045e3d:	add    BYTE PTR [rax],al
   140045e3f:	add    BYTE PTR [rdi-0x5100ff9c],ch
   140045e45:	fs add edi,edi
   140045e48:	lods   eax,DWORD PTR ds:[rsi]
   140045e49:	movsxd eax,DWORD PTR [rcx]
   140045e4b:	jmp    FWORD PTR [rbx+riz*2+0x62abff01]
   140045e52:	add    edi,edi
   140045e54:	stos   BYTE PTR es:[rdi],al
   140045e55:	(bad)  
   140045e56:	add    edi,edi
   140045e58:	test   al,0x61
   140045e5a:	add    edi,edi
   140045e5c:	test   al,0x60
   140045e5e:	add    edi,edi
   140045e60:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140045e61:	pop    rdi
   140045e62:	add    edi,edi
   140045e64:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140045e65:	pop    rdi
   140045e66:	add    bh,bh
   140045e68:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140045e69:	pop    rsi
   140045e6a:	add    bh,bh
   140045e6c:	movabs ds:0xa1ff025da2ff025e,eax
   140045e75:	pop    rsp
   140045e76:	add    bh,bh
   140045e78:	movabs al,ds:0x9eff025b9fff025c
   140045e81:	pop    rdx
   140045e82:	add    bh,bh
   140045e84:	popf   
   140045e85:	pop    rdx
   140045e86:	add    edi,edi
   140045e88:	pushf  
   140045e89:	pop    rcx
   140045e8a:	add    edi,edi
   140045e8c:	fwait
   140045e8d:	pop    rcx
   140045e8e:	add    edi,edi
   140045e90:	addr32 rex.RXB and eax,0x254767ff
   140045e97:	(bad)  
   140045e98:	ffree  st(2)
   140045e9a:	(bad)  
   140045e9b:	(bad)  
   140045e9c:	ffree  st(2)
   140045e9e:	(bad)  
   140045e9f:	(bad)  
   140045ea0:	ffree  st(2)
   140045ea2:	(bad)  
   140045ea3:	(bad)  
   140045ea4:	ffree  st(2)
   140045ea6:	(bad)  
   140045ea7:	(bad)  
   140045ea8:	ffree  st(2)
   140045eaa:	(bad)  
   140045eab:	(bad)  
   140045eac:	ffree  st(2)
   140045eae:	(bad)  
   140045eaf:	(bad)  
   140045eb0:	ffree  st(2)
   140045eb2:	(bad)  
   140045eb3:	(bad)  
   140045eb4:	ffree  st(2)
   140045eb6:	(bad)  
   140045eb7:	(bad)  
   140045eb8:	ffree  st(2)
   140045eba:	(bad)  
   140045ebb:	(bad)  
   140045ebc:	ffree  st(2)
   140045ebe:	(bad)  
   140045ebf:	(bad)  
   140045ec0:	ffree  st(2)
   140045ec2:	(bad)  
   140045ec3:	(bad)  
   140045ec4:	ffree  st(2)
   140045ec6:	(bad)  
   140045ec7:	jmp    QWORD PTR [rdi+0x47]
   140045eca:	and    eax,0x254767ff
   140045ecf:	dec    DWORD PTR [rcx-0x7700fab2]
   140045ed5:	rex.WRB add rax,0x54c87ff
   140045edb:	inc    DWORD PTR [rsi-0x7b00fab4]
   140045ee1:	rex.WXB add rax,0x64b84ff
   140045ee7:	inc    DWORD PTR [rdx-0x7e00f9b6]
   140045eed:	rex.WB (bad) 
   140045eef:	inc    DWORD PTR [rax+0x7fff0649]
   140045ef5:	rex.W (bad) 
   140045ef7:	(bad)  
   140045ef8:	jle    0x140045f41
   140045efa:	(bad)  
   140045efb:	(bad)  
   140045efc:	jge    0x140045f45
   140045efe:	(bad)  
   140045eff:	(bad)  
   140045f00:	jl     0x140045f48
   140045f02:	(bad)  
   140045f03:	(bad)  
   140045f04:	jnp    0x140045f4c
   140045f06:	(bad)  
   140045f07:	(bad)  
   140045f08:	jp     0x140045f4f
   140045f0a:	(bad)  
   140045f0b:	(bad)  
   140045f0c:	jns    0x140045f52
   140045f0e:	(bad)  
   140045f0f:	(bad)  
   140045f10:	js     0x140045f56
   140045f12:	(bad)  
   140045f13:	push   QWORD PTR [rdi+0x43]
   140045f16:	(bad)  
   140045f17:	push   QWORD PTR [rsi+0x43]
   140045f1a:	(bad)  
   140045f1b:	push   QWORD PTR [rbp+0x42]
   140045f1e:	(bad)  
   140045f1f:	inc    DWORD PTR [rax]
	...
   140045f3d:	add    BYTE PTR [rax],al
   140045f3f:	add    BYTE PTR [rax-0x5000ff9b],dh
   140045f45:	fs add bh,bh
   140045f48:	scas   al,BYTE PTR es:[rdi]
   140045f49:	fs add edi,edi
   140045f4c:	lods   eax,DWORD PTR ds:[rsi]
   140045f4d:	movsxd eax,DWORD PTR [rcx]
   140045f4f:	jmp    FWORD PTR [rbx+riz*2+0x62abff01]
   140045f56:	add    edi,edi
   140045f58:	stos   BYTE PTR es:[rdi],al
   140045f59:	(bad)  
   140045f5a:	add    edi,edi
   140045f5c:	test   al,0x61
   140045f5e:	add    edi,edi
   140045f60:	test   al,0x60
   140045f62:	add    edi,edi
   140045f64:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140045f65:	pop    rdi
   140045f66:	add    edi,edi
   140045f68:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140045f69:	pop    rdi
   140045f6a:	add    bh,bh
   140045f6c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140045f6d:	pop    rsi
   140045f6e:	add    bh,bh
   140045f70:	movabs ds:0xa1ff025da2ff025e,eax
   140045f79:	pop    rsp
   140045f7a:	add    bh,bh
   140045f7c:	movabs al,ds:0x9eff025b9fff025c
   140045f85:	pop    rdx
   140045f86:	add    bh,bh
   140045f88:	popf   
   140045f89:	pop    rdx
   140045f8a:	add    edi,edi
   140045f8c:	pushf  
   140045f8d:	pop    rcx
   140045f8e:	add    edi,edi
   140045f90:	push   0x68ff2548
   140045f95:	and    rax,0xffffffff9bc4deff
   140045f9b:	(bad)  
   140045f9c:	faddp  st(4),st
   140045f9e:	fwait
   140045f9f:	(bad)  
   140045fa0:	faddp  st(4),st
   140045fa2:	fwait
   140045fa3:	(bad)  
   140045fa4:	faddp  st(4),st
   140045fa6:	fwait
   140045fa7:	(bad)  
   140045fa8:	faddp  st(4),st
   140045faa:	fwait
   140045fab:	(bad)  
   140045fac:	faddp  st(4),st
   140045fae:	fwait
   140045faf:	(bad)  
   140045fb0:	faddp  st(4),st
   140045fb2:	fwait
   140045fb3:	(bad)  
   140045fb4:	faddp  st(4),st
   140045fb6:	fwait
   140045fb7:	(bad)  
   140045fb8:	faddp  st(4),st
   140045fba:	fwait
   140045fbb:	(bad)  
   140045fbc:	faddp  st(4),st
   140045fbe:	fwait
   140045fbf:	(bad)  
   140045fc0:	faddp  st(4),st
   140045fc2:	fwait
   140045fc3:	(bad)  
   140045fc4:	faddp  st(4),st
   140045fc6:	fwait
   140045fc7:	jmp    FWORD PTR [rax+0x48]
   140045fca:	and    eax,0x254868ff
   140045fcf:	dec    DWORD PTR [rdx-0x7600fab2]
   140045fd5:	rex.WRX add rax,0x54d88ff
   140045fdb:	inc    DWORD PTR [rdi-0x7900fab4]
   140045fe1:	rex.WR add rax,0x54b84ff
   140045fe7:	inc    DWORD PTR [rbx+rcx*2+0x4a82ff06]
   140045fee:	(bad)  
   140045fef:	inc    DWORD PTR [rcx-0x7f00f9b7]
   140045ff5:	rex.WB (bad) 
   140045ff7:	(bad)  
   140045ff8:	jg     0x140046042
   140045ffa:	(bad)  
   140045ffb:	(bad)  
   140045ffc:	jle    0x140046045
   140045ffe:	(bad)  
   140045fff:	(bad)  
   140046000:	jge    0x140046049
   140046002:	(bad)  
   140046003:	(bad)  
   140046004:	jl     0x14004604c
   140046006:	(bad)  
   140046007:	(bad)  
   140046008:	jnp    0x140046050
   14004600a:	(bad)  
   14004600b:	(bad)  
   14004600c:	jp     0x140046053
   14004600e:	(bad)  
   14004600f:	(bad)  
   140046010:	jns    0x140046056
   140046012:	(bad)  
   140046013:	(bad)  
   140046014:	js     0x14004605a
   140046016:	(bad)  
   140046017:	push   QWORD PTR [rdi+0x43]
   14004601a:	(bad)  
   14004601b:	push   QWORD PTR [rsi+0x43]
   14004601e:	(bad)  
   14004601f:	inc    DWORD PTR [rax]
	...
   14004603d:	add    BYTE PTR [rax],al
   14004603f:	add    BYTE PTR [rcx-0x4f00ff9a],dh
   140046045:	gs add bh,bh
   140046048:	scas   eax,DWORD PTR es:[rdi]
   140046049:	fs add bh,bh
   14004604c:	scas   al,BYTE PTR es:[rdi]
   14004604d:	fs add edi,edi
   140046050:	lods   eax,DWORD PTR ds:[rsi]
   140046051:	movsxd eax,DWORD PTR [rcx]
   140046053:	jmp    FWORD PTR [rbx+riz*2+0x62abff01]
   14004605a:	add    edi,edi
   14004605c:	stos   BYTE PTR es:[rdi],al
   14004605d:	(bad)  
   14004605e:	add    edi,edi
   140046060:	test   al,0x61
   140046062:	add    edi,edi
   140046064:	test   al,0x60
   140046066:	add    edi,edi
   140046068:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140046069:	pop    rdi
   14004606a:	add    edi,edi
   14004606c:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004606d:	pop    rdi
   14004606e:	add    bh,bh
   140046070:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140046071:	pop    rsi
   140046072:	add    bh,bh
   140046074:	movabs ds:0xa1ff025da2ff025e,eax
   14004607d:	pop    rsp
   14004607e:	add    bh,bh
   140046080:	movabs al,ds:0x9eff025b9fff025c
   140046089:	pop    rdx
   14004608a:	add    bh,bh
   14004608c:	popf   
   14004608d:	pop    rdx
   14004608e:	add    edi,edi
   140046090:	imul   ecx,DWORD PTR [rdx+0x26],0x264a69ff
   140046097:	(bad)  
   140046098:	ffreep st(5)
   14004609a:	popf   
   14004609b:	(bad)  
   14004609c:	ffreep st(5)
   14004609e:	popf   
   14004609f:	(bad)  
   1400460a0:	ffreep st(5)
   1400460a2:	popf   
   1400460a3:	(bad)  
   1400460a4:	ffreep st(5)
   1400460a6:	popf   
   1400460a7:	(bad)  
   1400460a8:	ffreep st(5)
   1400460aa:	popf   
   1400460ab:	(bad)  
   1400460ac:	ffreep st(5)
   1400460ae:	popf   
   1400460af:	(bad)  
   1400460b0:	ffreep st(5)
   1400460b2:	popf   
   1400460b3:	(bad)  
   1400460b4:	ffreep st(5)
   1400460b6:	popf   
   1400460b7:	(bad)  
   1400460b8:	ffreep st(5)
   1400460ba:	popf   
   1400460bb:	(bad)  
   1400460bc:	ffreep st(5)
   1400460be:	popf   
   1400460bf:	(bad)  
   1400460c0:	ffreep st(5)
   1400460c2:	popf   
   1400460c3:	(bad)  
   1400460c4:	ffreep st(5)
   1400460c6:	popf   
   1400460c7:	jmp    FWORD PTR [rcx+0x4a]
   1400460ca:	jmp    FWORD PTR es:[rcx+0x4a]
   1400460ce:	dec    DWORD PTR es:[rbx-0x7500fab1]
   1400460d5:	rex.WRX add rax,0x54e89ff
   1400460db:	dec    DWORD PTR [rax-0x7800fab3]
   1400460e1:	rex.WR add rax,0x54c86ff
   1400460e7:	inc    DWORD PTR [rbx+rcx*2+0x4b84ff05]
   1400460ee:	(bad)  
   1400460ef:	inc    DWORD PTR [rdx-0x7e00f9b6]
   1400460f5:	rex.WB (bad) 
   1400460f7:	inc    DWORD PTR [rax+0x7fff0649]
   1400460fd:	rex.W (bad) 
   1400460ff:	(bad)  
   140046100:	jle    0x140046149
   140046102:	(bad)  
   140046103:	(bad)  
   140046104:	jge    0x14004614d
   140046106:	(bad)  
   140046107:	(bad)  
   140046108:	jl     0x140046150
   14004610a:	(bad)  
   14004610b:	(bad)  
   14004610c:	jnp    0x140046154
   14004610e:	(bad)  
   14004610f:	(bad)  
   140046110:	jp     0x140046157
   140046112:	(bad)  
   140046113:	(bad)  
   140046114:	jns    0x14004615a
   140046116:	(bad)  
   140046117:	(bad)  
   140046118:	js     0x14004615e
   14004611a:	(bad)  
   14004611b:	push   QWORD PTR [rdi+0x43]
   14004611e:	(bad)  
   14004611f:	inc    DWORD PTR [rax]
	...
   14004613d:	add    BYTE PTR [rax],al
   14004613f:	add    BYTE PTR [rdx-0x4e00ff9a],dh
   140046145:	data16 add bh,bh
   140046148:	mov    al,0x65
   14004614a:	add    bh,bh
   14004614c:	scas   eax,DWORD PTR es:[rdi]
   14004614d:	fs add bh,bh
   140046150:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140046151:	pop    rsi
   140046152:	add    edi,edi
   140046154:	lods   eax,DWORD PTR ds:[rsi]
   140046155:	movsxd eax,DWORD PTR [rcx]
   140046157:	jmp    FWORD PTR [rbx+riz*2+0x62abff01]
   14004615e:	add    edi,edi
   140046160:	stos   BYTE PTR es:[rdi],al
   140046161:	(bad)  
   140046162:	add    edi,edi
   140046164:	test   al,0x61
   140046166:	add    edi,edi
   140046168:	test   al,0x60
   14004616a:	add    edi,edi
   14004616c:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004616d:	pop    rdi
   14004616e:	add    edi,edi
   140046170:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140046171:	pop    rdi
   140046172:	add    bh,bh
   140046174:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140046175:	pop    rsi
   140046176:	add    bh,bh
   140046178:	movabs ds:0xa1ff025da2ff025e,eax
   140046181:	pop    rsp
   140046182:	add    bh,bh
   140046184:	movabs al,ds:0x9eff025b9fff025c
   14004618d:	pop    rdx
   14004618e:	add    bh,bh
   140046190:	push   0x4b
   140046192:	(bad)  
   140046193:	jmp    FWORD PTR [rdx+0x4b]
   140046196:	(bad)  
   140046197:	(bad)  
   140046198:	ffreep st(6)
   14004619a:	lahf   
   14004619b:	(bad)  
   14004619c:	ffreep st(6)
   14004619e:	lahf   
   14004619f:	(bad)  
   1400461a0:	ffreep st(6)
   1400461a2:	lahf   
   1400461a3:	(bad)  
   1400461a4:	ffreep st(6)
   1400461a6:	lahf   
   1400461a7:	(bad)  
   1400461a8:	ffreep st(6)
   1400461aa:	lahf   
   1400461ab:	(bad)  
   1400461ac:	ffreep st(6)
   1400461ae:	lahf   
   1400461af:	(bad)  
   1400461b0:	ffreep st(6)
   1400461b2:	lahf   
   1400461b3:	(bad)  
   1400461b4:	ffreep st(6)
   1400461b6:	lahf   
   1400461b7:	(bad)  
   1400461b8:	ffreep st(6)
   1400461ba:	lahf   
   1400461bb:	(bad)  
   1400461bc:	ffreep st(6)
   1400461be:	lahf   
   1400461bf:	(bad)  
   1400461c0:	ffreep st(6)
   1400461c2:	lahf   
   1400461c3:	(bad)  
   1400461c4:	ffreep st(6)
   1400461c6:	lahf   
   1400461c7:	jmp    FWORD PTR [rdx+0x4b]
   1400461ca:	(bad)  
   1400461cb:	jmp    FWORD PTR [rdx+0x4b]
   1400461ce:	(bad)  
   1400461cf:	dec    DWORD PTR [rax+rdx*2+0x4f8bff05]
   1400461d6:	add    eax,0x54e8aff
   1400461db:	dec    DWORD PTR [rcx-0x7700fab2]
   1400461e1:	rex.WRB add rax,0x54c87ff
   1400461e7:	inc    DWORD PTR [rsi-0x7b00fab4]
   1400461ed:	rex.WXB add rax,0x64b84ff
   1400461f3:	inc    DWORD PTR [rdx-0x7e00f9b6]
   1400461f9:	rex.WB (bad) 
   1400461fb:	inc    DWORD PTR [rax+0x7fff0649]
   140046201:	rex.W (bad) 
   140046203:	(bad)  
   140046204:	jle    0x14004624d
   140046206:	(bad)  
   140046207:	(bad)  
   140046208:	jge    0x140046251
   14004620a:	(bad)  
   14004620b:	(bad)  
   14004620c:	jl     0x140046254
   14004620e:	(bad)  
   14004620f:	(bad)  
   140046210:	jnp    0x140046258
   140046212:	(bad)  
   140046213:	(bad)  
   140046214:	jp     0x14004625b
   140046216:	(bad)  
   140046217:	(bad)  
   140046218:	jns    0x14004625e
   14004621a:	(bad)  
   14004621b:	(bad)  
   14004621c:	js     0x140046262
   14004621e:	(bad)  
   14004621f:	inc    DWORD PTR [rax]
	...
   14004623d:	add    BYTE PTR [rax],al
   14004623f:	add    BYTE PTR [rbx-0x4d00ff99],dh
   140046245:	data16 add bh,bh
   140046248:	mov    cl,0x66
   14004624a:	add    bh,bh
   14004624c:	test   eax,0x44ff0061
   140046251:	(bad)  
   140046252:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140046253:	jmp    QWORD PTR [rbx+0x71]
   140046256:	pop    rsp
   140046257:	call   FWORD PTR [rcx-0x5300fea8]
   14004625d:	movsxd eax,DWORD PTR [rcx]
   14004625f:	jmp    FWORD PTR [rbx-0x5500fe9e]
   140046265:	(bad)  
   140046266:	add    edi,edi
   140046268:	test   al,0x61
   14004626a:	add    edi,edi
   14004626c:	test   al,0x60
   14004626e:	add    edi,edi
   140046270:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140046271:	pop    rdi
   140046272:	add    edi,edi
   140046274:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140046275:	pop    rdi
   140046276:	add    bh,bh
   140046278:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140046279:	pop    rsi
   14004627a:	add    bh,bh
   14004627c:	movabs ds:0xa1ff025da2ff025e,eax
   140046285:	pop    rsp
   140046286:	add    bh,bh
   140046288:	movabs al,ds:0x6bff025b9fff025c
   140046291:	rex.WR sub dil,r15b
   140046294:	imul   ecx,DWORD PTR [rax+rbp*1-0x1],0xffffffe0
   140046299:	(bad)  
   14004629a:	movabs eax,ds:0xa1c7e0ffa1c7e0ff
   1400462a3:	jmp    rax
   1400462a5:	(bad)  
   1400462a6:	movabs eax,ds:0xa1c7e0ffa1c7e0ff
   1400462af:	jmp    rax
   1400462b1:	(bad)  
   1400462b2:	movabs eax,ds:0xa1c7e0ffa1c7e0ff
   1400462bb:	jmp    rax
   1400462bd:	(bad)  
   1400462be:	movabs eax,ds:0xa1c7e0ffa1c7e0ff
   1400462c7:	jmp    FWORD PTR [rbx+0x4c]
   1400462ca:	sub    bh,bh
   1400462cc:	imul   ecx,DWORD PTR [rax+rbp*1-0x1],0xffffff8d
   1400462d1:	push   rax
   1400462d2:	add    al,0xff
   1400462d4:	mov    WORD PTR [rax+0x5],ss
   1400462d7:	dec    DWORD PTR [rbx-0x7500fab1]
   1400462dd:	rex.WRX add rax,0x54e89ff
   1400462e3:	dec    DWORD PTR [rax-0x7800fab3]
   1400462e9:	rex.WR add rax,0x54c86ff
   1400462ef:	inc    DWORD PTR [rbx+rcx*2+0x4b84ff05]
   1400462f6:	(bad)  
   1400462f7:	inc    DWORD PTR [rdx-0x7e00f9b6]
   1400462fd:	rex.WB (bad) 
   1400462ff:	inc    DWORD PTR [rax+0x7fff0649]
   140046305:	rex.W (bad) 
   140046307:	(bad)  
   140046308:	jle    0x140046351
   14004630a:	(bad)  
   14004630b:	(bad)  
   14004630c:	jge    0x140046355
   14004630e:	(bad)  
   14004630f:	(bad)  
   140046310:	jl     0x140046358
   140046312:	(bad)  
   140046313:	(bad)  
   140046314:	jnp    0x14004635c
   140046316:	(bad)  
   140046317:	(bad)  
   140046318:	jp     0x14004635f
   14004631a:	(bad)  
   14004631b:	(bad)  
   14004631c:	jns    0x140046362
   14004631e:	(bad)  
   14004631f:	inc    DWORD PTR [rax]
	...
   14004633d:	add    BYTE PTR [rax],al
   14004633f:	add    BYTE PTR [rbx-0x4c00ff99],dh
   140046345:	addr32 add bh,bh
   140046348:	mov    dl,0x66
   14004634a:	add    bh,bh
   14004634c:	jne    0x1400463ca
   14004634e:	pop    rbx
   14004634f:	jmp    FWORD PTR [rax+rsi*4]
   140046352:	repz jmp FWORD PTR [rax+rsi*4]
   140046356:	repz push QWORD PTR [rsi]
   140046359:	movabs ds:0x63acff2e637effd5,al
   140046362:	add    edi,edi
   140046364:	stos   DWORD PTR es:[rdi],eax
   140046365:	(bad)  {k2}{z}
   14004636a:	add    edi,edi
   14004636c:	test   al,0x61
   14004636e:	add    edi,edi
   140046370:	test   al,0x60
   140046372:	add    edi,edi
   140046374:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140046375:	pop    rdi
   140046376:	add    edi,edi
   140046378:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140046379:	pop    rdi
   14004637a:	add    bh,bh
   14004637c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004637d:	pop    rsi
   14004637e:	add    bh,bh
   140046380:	movabs ds:0xa1ff025da2ff025e,eax
   140046389:	pop    rsp
   14004638a:	add    bh,bh
   14004638c:	movabs al,ds:0x6dff294d6dff025c
   140046395:	sub    r15,r15
   140046398:	loope  0x140046363
   14004639a:	movabs ds:0xa2c9e1ffa2c9e1ff,al
   1400463a3:	jmp    rcx
   1400463a5:	leave  
   1400463a6:	movabs ds:0xa2c9e1ffa2c9e1ff,al
   1400463af:	jmp    rcx
   1400463b1:	leave  
   1400463b2:	movabs ds:0xa2c9e1ffa2c9e1ff,al
   1400463bb:	jmp    rcx
   1400463bd:	leave  
   1400463be:	movabs ds:0xa2c9e1ffa2c9e1ff,al
   1400463c7:	jmp    FWORD PTR [rbp+0x4d]
   1400463ca:	sub    edi,edi
   1400463cc:	ins    DWORD PTR es:[rdi],dx
   1400463cd:	sub    r15,r15
   1400463d0:	mov    ss,WORD PTR [rcx+0x4]
   1400463d3:	dec    DWORD PTR [rbp-0x7300fbb0]
   1400463d9:	push   rax
   1400463da:	add    eax,0x54f8bff
   1400463df:	dec    DWORD PTR [rdx-0x7600fab2]
   1400463e5:	rex.WRX add rax,0x54d88ff
   1400463eb:	inc    DWORD PTR [rdi-0x7900fab4]
   1400463f1:	rex.WR add rax,0x54b84ff
   1400463f7:	inc    DWORD PTR [rbx+rcx*2+0x4a82ff06]
   1400463fe:	(bad)  
   1400463ff:	inc    DWORD PTR [rcx-0x7f00f9b7]
   140046405:	rex.WB (bad) 
   140046407:	(bad)  
   140046408:	jg     0x140046452
   14004640a:	(bad)  
   14004640b:	(bad)  
   14004640c:	jle    0x140046455
   14004640e:	(bad)  
   14004640f:	(bad)  
   140046410:	jge    0x140046459
   140046412:	(bad)  
   140046413:	(bad)  
   140046414:	jl     0x14004645c
   140046416:	(bad)  
   140046417:	(bad)  
   140046418:	jnp    0x140046460
   14004641a:	(bad)  
   14004641b:	(bad)  
   14004641c:	jp     0x140046463
   14004641e:	(bad)  
   14004641f:	inc    DWORD PTR [rax]
	...
   14004643d:	add    BYTE PTR [rax],al
   14004643f:	add    BYTE PTR [rbx-0x4c00ff99],dh
   140046445:	addr32 add bh,bh
   140046448:	scas   eax,DWORD PTR es:[rdi]
   140046449:	gs add bh,bh
   14004644c:	rex.R xchg ebp,eax
   14004644e:	mov    dh,0xff
   140046450:	sub    al,0xaf
   140046452:	repz jmp FWORD PTR [rdi+rbp*4]
   140046456:	repz jmp FWORD PTR [rip+0x35fff2ac]        # 0x176045709
   14004645d:	pushf  
   14004645e:	loope  0x14004645f
   140046460:	jg     0x1400464c1
   140046462:	sub    eax,0x163acff
   140046467:	jmp    FWORD PTR [rbx-0x5500fe9e]
   14004646d:	(bad)  
   14004646e:	add    edi,edi
   140046470:	test   al,0x61
   140046472:	add    edi,edi
   140046474:	test   al,0x60
   140046476:	add    edi,edi
   140046478:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140046479:	pop    rdi
   14004647a:	add    edi,edi
   14004647c:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004647d:	pop    rdi
   14004647e:	add    bh,bh
   140046480:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140046481:	pop    rsi
   140046482:	add    bh,bh
   140046484:	movabs ds:0xa1ff025da2ff025e,eax
   14004648d:	pop    rsp
   14004648e:	add    bh,bh
   140046490:	outs   dx,BYTE PTR ds:[rsi]
   140046491:	rex.WRX sub r15b,dil
   140046494:	outs   dx,BYTE PTR ds:[rsi]
   140046495:	rex.WRX sub r15b,dil
   140046498:	loop   0x140046464
   14004649a:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004649b:	jmp    rdx
   14004649d:	retf   0xffa4
   1400464a0:	loop   0x14004646c
   1400464a2:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400464a3:	jmp    rdx
   1400464a5:	retf   0xffa4
   1400464a8:	loop   0x140046474
   1400464aa:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400464ab:	jmp    rdx
   1400464ad:	retf   0xffa4
   1400464b0:	loop   0x14004647c
   1400464b2:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400464b3:	jmp    rdx
   1400464b5:	retf   0xffa4
   1400464b8:	loop   0x140046484
   1400464ba:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400464bb:	jmp    rdx
   1400464bd:	retf   0xffa4
   1400464c0:	loop   0x14004648c
   1400464c2:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400464c3:	jmp    rdx
   1400464c5:	retf   0xffa4
   1400464c8:	outs   dx,BYTE PTR ds:[rsi]
   1400464c9:	rex.WRX sub r15b,dil
   1400464cc:	outs   dx,BYTE PTR ds:[rsi]
   1400464cd:	rex.WRX sub r15b,dil
   1400464d0:	(bad)  
   1400464d1:	push   rdx
   1400464d2:	add    al,0xff
   1400464d4:	mov    ss,WORD PTR [rcx+0x4]
   1400464d7:	dec    DWORD PTR [rbp-0x7300fbb0]
   1400464dd:	push   rax
   1400464de:	add    eax,0x54f8bff
   1400464e3:	dec    DWORD PTR [rdx-0x7600fab2]
   1400464e9:	rex.WRX add rax,0x54d88ff
   1400464ef:	inc    DWORD PTR [rdi-0x7900fab4]
   1400464f5:	rex.WR add rax,0x54b84ff
   1400464fb:	inc    DWORD PTR [rbx+rcx*2+0x4a82ff06]
   140046502:	(bad)  
   140046503:	inc    DWORD PTR [rcx-0x7f00f9b7]
   140046509:	rex.WB (bad) 
   14004650b:	(bad)  
   14004650c:	jg     0x140046556
   14004650e:	(bad)  
   14004650f:	(bad)  
   140046510:	jle    0x140046559
   140046512:	(bad)  
   140046513:	(bad)  
   140046514:	jge    0x14004655d
   140046516:	(bad)  
   140046517:	(bad)  
   140046518:	jl     0x140046560
   14004651a:	(bad)  
   14004651b:	(bad)  
   14004651c:	jnp    0x140046564
   14004651e:	(bad)  
   14004651f:	inc    DWORD PTR [rax]
	...
   14004653d:	add    BYTE PTR [rax],al
   14004653f:	add    BYTE PTR [rbx-0x4c00ff99],dh
   140046545:	addr32 add bh,bh
   140046548:	mov    BYTE PTR [rdx+0x3b],ch
   14004654b:	push   QWORD PTR [rdx]
   14004654d:	fwait
   14004654e:	out    dx,eax
   14004654f:	push   QWORD PTR [rax]
   140046551:	movabs ds:0xa230fff1a52ffff0,eax
   14004655a:	lock push QWORD PTR [rdx]
   14004655d:	(bad)  
   14004655e:	out    dx,al
   14004655f:	push   QWORD PTR [rsi]
   140046561:	xchg   ebp,ebx
   140046563:	inc    DWORD PTR [rdi+rbx*2+0x63acff2d]
   14004656a:	add    edi,edi
   14004656c:	stos   DWORD PTR es:[rdi],eax
   14004656d:	(bad)  {k2}{z}
   140046572:	add    edi,edi
   140046574:	test   al,0x61
   140046576:	add    edi,edi
   140046578:	test   al,0x60
   14004657a:	add    edi,edi
   14004657c:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004657d:	pop    rdi
   14004657e:	add    edi,edi
   140046580:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140046581:	pop    rdi
   140046582:	add    bh,bh
   140046584:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140046585:	pop    rsi
   140046586:	add    bh,bh
   140046588:	movabs ds:0x6fff025da2ff025e,eax
   140046591:	rex.WRXB sub r15,r15
   140046594:	outs   dx,DWORD PTR ds:[rsi]
   140046595:	rex.WRXB sub r15,r15
   140046598:	jrcxz  0x140046565
   14004659a:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004659b:	jmp    rbx
   14004659d:	retf   
   14004659e:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004659f:	jmp    rbx
   1400465a1:	retf   
   1400465a2:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400465a3:	jmp    rbx
   1400465a5:	retf   
   1400465a6:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400465a7:	jmp    rbx
   1400465a9:	retf   
   1400465aa:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400465ab:	jmp    rbx
   1400465ad:	retf   
   1400465ae:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400465af:	jmp    rbx
   1400465b1:	retf   
   1400465b2:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400465b3:	jmp    rbx
   1400465b5:	retf   
   1400465b6:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400465b7:	jmp    rbx
   1400465b9:	retf   
   1400465ba:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400465bb:	jmp    rbx
   1400465bd:	retf   
   1400465be:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400465bf:	jmp    rbx
   1400465c1:	retf   
   1400465c2:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400465c3:	jmp    rbx
   1400465c5:	retf   
   1400465c6:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400465c7:	jmp    FWORD PTR [rdi+0x4f]
   1400465ca:	sub    edi,edi
   1400465cc:	outs   dx,DWORD PTR ds:[rsi]
   1400465cd:	rex.WRXB sub r15,r15
   1400465d0:	nop
   1400465d1:	push   rdx
   1400465d2:	add    al,0xff
   1400465d4:	(bad)  
   1400465d5:	push   rdx
   1400465d6:	add    al,0xff
   1400465d8:	mov    ss,WORD PTR [rcx+0x4]
   1400465db:	dec    DWORD PTR [rbp-0x7300fbb0]
   1400465e1:	push   rax
   1400465e2:	add    eax,0x54f8bff
   1400465e7:	dec    DWORD PTR [rdx-0x7600fab2]
   1400465ed:	rex.WRX add rax,0x54d88ff
   1400465f3:	inc    DWORD PTR [rdi-0x7900fab4]
   1400465f9:	rex.WR add rax,0x54b84ff
   1400465ff:	inc    DWORD PTR [rbx+rcx*2+0x4a82ff06]
   140046606:	(bad)  
   140046607:	inc    DWORD PTR [rcx-0x7f00f9b7]
   14004660d:	rex.WB (bad) 
   14004660f:	(bad)  
   140046610:	jg     0x14004665a
   140046612:	(bad)  
   140046613:	(bad)  
   140046614:	jle    0x14004665d
   140046616:	(bad)  
   140046617:	(bad)  
   140046618:	jge    0x140046661
   14004661a:	(bad)  
   14004661b:	(bad)  
   14004661c:	jl     0x140046664
   14004661e:	(bad)  
   14004661f:	inc    DWORD PTR [rax]
	...
   14004663d:	add    BYTE PTR [rax],al
   14004663f:	add    BYTE PTR [rbx-0x4c00ff99],dh
   140046645:	addr32 add bh,bh
   140046648:	rex.WRXB pop r9
   14004664a:	mov    ?,edi
   14004664c:	sub    al,0x71
   14004664e:	call   0x12b8d9852
   140046653:	push   QWORD PTR [rbx]
   140046655:	xchg   esp,eax
   140046656:	in     eax,dx
   140046657:	push   QWORD PTR [rbx]
   140046659:	xchg   esp,eax
   14004665a:	in     eax,dx
   14004665b:	push   QWORD PTR [rdx]
   14004665d:	(bad)  
   14004665e:	in     al,dx
   14004665f:	jmp    FWORD PTR [rbx+rdi*2]
   140046662:	(bad)  
   140046663:	(bad)  
   140046664:	cmp    dh,BYTE PTR [rax-0x41]
   140046667:	call   QWORD PTR [rbx+rbx*2+0x63acff10]
   14004666e:	add    edi,edi
   140046670:	stos   DWORD PTR es:[rdi],eax
   140046671:	(bad)  {k2}{z}
   140046676:	add    edi,edi
   140046678:	test   al,0x61
   14004667a:	add    edi,edi
   14004667c:	test   al,0x60
   14004667e:	add    edi,edi
   140046680:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140046681:	pop    rdi
   140046682:	add    edi,edi
   140046684:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140046685:	pop    rdi
   140046686:	add    bh,bh
   140046688:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140046689:	pop    rsi
   14004668a:	add    bh,bh
   14004668c:	mov    WORD PTR [rcx+0xc],ss
   14004668f:	call   QWORD PTR [rbx+0x3f]
   140046692:	rex.RB push QWORD PTR [r8+0x50]
   140046696:	sub    al,0xff
   140046698:	jrcxz  0x140046666
   14004669a:	test   al,0xff
   14004669c:	jrcxz  0x14004666a
   14004669e:	test   al,0xff
   1400466a0:	jrcxz  0x14004666e
   1400466a2:	test   al,0xff
   1400466a4:	jrcxz  0x140046672
   1400466a6:	test   al,0xff
   1400466a8:	jrcxz  0x140046676
   1400466aa:	test   al,0xff
   1400466ac:	jrcxz  0x14004667a
   1400466ae:	test   al,0xff
   1400466b0:	jrcxz  0x14004667e
   1400466b2:	test   al,0xff
   1400466b4:	jrcxz  0x140046682
   1400466b6:	test   al,0xff
   1400466b8:	jrcxz  0x140046686
   1400466ba:	test   al,0xff
   1400466bc:	jrcxz  0x14004668a
   1400466be:	test   al,0xff
   1400466c0:	jrcxz  0x14004668e
   1400466c2:	test   al,0xff
   1400466c4:	jrcxz  0x140046692
   1400466c6:	test   al,0xff
   1400466c8:	jo     0x14004671a
   1400466ca:	sub    al,0xff
   1400466cc:	jo     0x14004671e
   1400466ce:	sub    al,0xff
   1400466d0:	xchg   ecx,eax
   1400466d1:	push   rbx
   1400466d2:	add    al,0xff
   1400466d4:	nop
   1400466d5:	push   rdx
   1400466d6:	add    al,0xff
   1400466d8:	(bad)  
   1400466d9:	push   rdx
   1400466da:	add    al,0xff
   1400466dc:	mov    ss,WORD PTR [rcx+0x4]
   1400466df:	dec    DWORD PTR [rbp-0x7300fbb0]
   1400466e5:	push   rax
   1400466e6:	add    eax,0x54f8bff
   1400466eb:	dec    DWORD PTR [rdx-0x7600fab2]
   1400466f1:	rex.WRX add rax,0x54d88ff
   1400466f7:	inc    DWORD PTR [rdi-0x7900fab4]
   1400466fd:	rex.WR add rax,0x54b84ff
   140046703:	inc    DWORD PTR [rbx+rcx*2+0x4a82ff06]
   14004670a:	(bad)  
   14004670b:	inc    DWORD PTR [rcx-0x7f00f9b7]
   140046711:	rex.WB (bad) 
   140046713:	(bad)  
   140046714:	jg     0x14004675e
   140046716:	(bad)  
   140046717:	(bad)  
   140046718:	jle    0x140046761
   14004671a:	(bad)  
   14004671b:	(bad)  
   14004671c:	jge    0x140046765
   14004671e:	(bad)  
   14004671f:	inc    DWORD PTR [rax]
	...
   14004673d:	add    BYTE PTR [rax],al
   14004673f:	add    BYTE PTR [rbx-0x7800ff99],dh
   140046745:	push   rcx
   140046746:	(bad)  
   140046747:	jmp    QWORD PTR [rsi]
   140046749:	xor    edx,eax
   14004674b:	jmp    QWORD PTR [rdi]
   14004674d:	rex.XB sar r15b,cl
   140046750:	sub    BYTE PTR [rbx-0x22],dl
   140046753:	jmp    FWORD PTR [rdx]
   140046755:	(bad)  
   140046756:	in     eax,0xff
   140046758:	sub    ebp,DWORD PTR [rbx-0x18]
   14004675b:	jmp    FWORD PTR [rdx]
   14004675d:	ins    BYTE PTR es:[rdi],dx
   14004675e:	jmp    0x129739262
   140046763:	jmp    FWORD PTR [rdx]
   140046765:	je     0x140046751
   140046767:	(bad)  
   140046768:	cmp    dh,BYTE PTR [rax-0x41]
   14004676b:	jmp    QWORD PTR [rbx-0x5300fea2]
   140046771:	movsxd eax,DWORD PTR [rcx]
   140046773:	jmp    FWORD PTR [rbx-0x5500fe9e]
   140046779:	(bad)  
   14004677a:	add    edi,edi
   14004677c:	test   al,0x61
   14004677e:	add    edi,edi
   140046780:	test   al,0x60
   140046782:	add    edi,edi
   140046784:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140046785:	pop    rdi
   140046786:	add    edi,edi
   140046788:	jg     0x1400467d5
   14004678a:	sbb    bh,bh
   14004678c:	xor    BYTE PTR [rcx],ch
   14004678e:	xchg   bh,bh
   140046790:	addr32 rex.WR cmp r15b,dil
   140046794:	jno    0x1400467e8
   140046796:	sub    al,0xff
   140046798:	in     al,0xce
   14004679a:	stos   BYTE PTR es:[rdi],al
   14004679b:	jmp    rsp
   14004679d:	(bad)  
   14004679e:	stos   BYTE PTR es:[rdi],al
   14004679f:	jmp    rsp
   1400467a1:	(bad)  
   1400467a2:	stos   BYTE PTR es:[rdi],al
   1400467a3:	jmp    rsp
   1400467a5:	(bad)  
   1400467a6:	stos   BYTE PTR es:[rdi],al
   1400467a7:	jmp    rsp
   1400467a9:	(bad)  
   1400467aa:	stos   BYTE PTR es:[rdi],al
   1400467ab:	jmp    rsp
   1400467ad:	(bad)  
   1400467ae:	stos   BYTE PTR es:[rdi],al
   1400467af:	jmp    rsp
   1400467b1:	(bad)  
   1400467b2:	stos   BYTE PTR es:[rdi],al
   1400467b3:	jmp    rsp
   1400467b5:	(bad)  
   1400467b6:	stos   BYTE PTR es:[rdi],al
   1400467b7:	jmp    rsp
   1400467b9:	(bad)  
   1400467ba:	stos   BYTE PTR es:[rdi],al
   1400467bb:	jmp    rsp
   1400467bd:	(bad)  
   1400467be:	stos   BYTE PTR es:[rdi],al
   1400467bf:	jmp    rsp
   1400467c1:	(bad)  
   1400467c2:	stos   BYTE PTR es:[rdi],al
   1400467c3:	jmp    rsp
   1400467c5:	(bad)  
   1400467c6:	stos   BYTE PTR es:[rdi],al
   1400467c7:	push   QWORD PTR [rcx+0x52]
   1400467ca:	sub    al,0xff
   1400467cc:	jno    0x140046820
   1400467ce:	sub    al,0xff
   1400467d0:	xchg   edx,eax
   1400467d1:	push   rsp
   1400467d2:	add    al,0xff
   1400467d4:	xchg   ecx,eax
   1400467d5:	push   rbx
   1400467d6:	add    al,0xff
   1400467d8:	nop
   1400467d9:	push   rdx
   1400467da:	add    al,0xff
   1400467dc:	(bad)  
   1400467dd:	push   rdx
   1400467de:	add    al,0xff
   1400467e0:	mov    ss,WORD PTR [rcx+0x4]
   1400467e3:	dec    DWORD PTR [rbp-0x7300fbb0]
   1400467e9:	push   rax
   1400467ea:	add    eax,0x54f8bff
   1400467ef:	dec    DWORD PTR [rdx-0x7600fab2]
   1400467f5:	rex.WRX add rax,0x54d88ff
   1400467fb:	inc    DWORD PTR [rdi-0x7900fab4]
   140046801:	rex.WR add rax,0x54b84ff
   140046807:	inc    DWORD PTR [rbx+rcx*2+0x4a82ff06]
   14004680e:	(bad)  
   14004680f:	inc    DWORD PTR [rcx-0x7f00f9b7]
   140046815:	rex.WB (bad) 
   140046817:	(bad)  
   140046818:	jg     0x140046862
   14004681a:	(bad)  
   14004681b:	(bad)  
   14004681c:	jle    0x140046865
   14004681e:	(bad)  
   14004681f:	inc    DWORD PTR [rax]
	...
   140046835:	add    BYTE PTR [rax],al
   140046837:	add    eax,0xe000000
   14004683c:	add    BYTE PTR [rax],al
   14004683e:	add    BYTE PTR [rax],al
   140046840:	cdq    
   140046841:	pop    rax
   140046842:	(bad)  
   140046843:	jmp    FWORD PTR [rsi]
   140046845:	and    eax,0x211fff69
   14004684a:	xchg   edi,eax
   14004684b:	jmp    QWORD PTR [rbx]
   14004684d:	es mov cl,0xff
   140046850:	es xor al,ah
   140046853:	jmp    QWORD PTR [rdi]
   140046855:	rex.X sar edi,1
   140046858:	sub    BYTE PTR [rcx-0x23],dl
   14004685b:	jmp    FWORD PTR [rax]
   14004685d:	pop    rdi
   14004685e:	out    0xff,al
   140046860:	sub    DWORD PTR [rsi-0x18],esp
   140046863:	jmp    FWORD PTR [rdx]
   140046865:	outs   dx,BYTE PTR ds:[rsi]
   140046866:	jmp    0x12a7a946a
   14004686b:	dec    DWORD PTR [rdx+rbp*2-0x6d]
   14004686f:	jmp    QWORD PTR [rax-0x5300fea4]
   140046875:	movsxd eax,DWORD PTR [rcx]
   140046877:	jmp    FWORD PTR [rbx-0x5500fe9e]
   14004687d:	(bad)  
   14004687e:	add    edi,edi
   140046880:	test   al,0x61
   140046882:	add    edi,edi
   140046884:	jns    0x1400468d0
   140046886:	and    eax,0xa72729ff
   14004688b:	dec    DWORD PTR [rdx+0x35]
   14004688e:	outs   dx,DWORD PTR ds:[rsi]
   14004688f:	push   QWORD PTR [rdx+0x53]
   140046892:	sub    eax,0x2d5372ff
   140046897:	jmp    rbp
   140046899:	iret   
   14004689a:	stos   DWORD PTR es:[rdi],eax
   14004689b:	jmp    rbp
   14004689d:	iret   
   14004689e:	stos   DWORD PTR es:[rdi],eax
   14004689f:	jmp    rbp
   1400468a1:	iret   
   1400468a2:	stos   DWORD PTR es:[rdi],eax
   1400468a3:	jmp    rbp
   1400468a5:	iret   
   1400468a6:	stos   DWORD PTR es:[rdi],eax
   1400468a7:	jmp    rbp
   1400468a9:	iret   
   1400468aa:	stos   DWORD PTR es:[rdi],eax
   1400468ab:	jmp    rbp
   1400468ad:	iret   
   1400468ae:	stos   DWORD PTR es:[rdi],eax
   1400468af:	jmp    rbp
   1400468b1:	iret   
   1400468b2:	stos   DWORD PTR es:[rdi],eax
   1400468b3:	jmp    rbp
   1400468b5:	iret   
   1400468b6:	stos   DWORD PTR es:[rdi],eax
   1400468b7:	jmp    rbp
   1400468b9:	iret   
   1400468ba:	stos   DWORD PTR es:[rdi],eax
   1400468bb:	jmp    rbp
   1400468bd:	iret   
   1400468be:	stos   DWORD PTR es:[rdi],eax
   1400468bf:	jmp    rbp
   1400468c1:	iret   
   1400468c2:	stos   DWORD PTR es:[rdi],eax
   1400468c3:	jmp    rbp
   1400468c5:	iret   
   1400468c6:	stos   DWORD PTR es:[rdi],eax
   1400468c7:	push   QWORD PTR [rdx+0x53]
   1400468ca:	sub    eax,0x2d5372ff
   1400468cf:	call   QWORD PTR [rbx-0x6d00fbac]
   1400468d5:	push   rsp
   1400468d6:	add    al,0xff
   1400468d8:	xchg   ecx,eax
   1400468d9:	push   rbx
   1400468da:	add    al,0xff
   1400468dc:	nop
   1400468dd:	push   rdx
   1400468de:	add    al,0xff
   1400468e0:	(bad)  
   1400468e1:	push   rdx
   1400468e2:	add    al,0xff
   1400468e4:	mov    ss,WORD PTR [rcx+0x4]
   1400468e7:	dec    DWORD PTR [rbp-0x7300fbb0]
   1400468ed:	push   rax
   1400468ee:	add    eax,0x54f8bff
   1400468f3:	dec    DWORD PTR [rdx-0x7600fab2]
   1400468f9:	rex.WRX add rax,0x54d88ff
   1400468ff:	inc    DWORD PTR [rdi-0x7900fab4]
   140046905:	rex.WR add rax,0x54b84ff
   14004690b:	inc    DWORD PTR [rbx+rcx*2+0x4a82ff06]
   140046912:	(bad)  
   140046913:	inc    DWORD PTR [rcx-0x7f00f9b7]
   140046919:	rex.WB (bad) 
   14004691b:	(bad)  
   14004691c:	jg     0x140046966
   14004691e:	(bad)  
   14004691f:	inc    DWORD PTR [rax]
	...
   140046931:	add    BYTE PTR [rax],al
   140046933:	adc    esp,DWORD PTR [rbp-0x4a6ebf85]
   140046939:	xchg   BYTE PTR [rdi-0x39],al
   14004693c:	jnp    0x140046992
   14004693e:	sub    DWORD PTR [rsi-0xb9dac7],esp
   140046944:	sbb    DWORD PTR [rdi],edx
   140046946:	ins    BYTE PTR es:[rdi],dx
   140046947:	call   FWORD PTR [rbx]
   140046949:	sbb    edi,DWORD PTR [rdi+rdi*8+0x1d]
   14004694d:	and    BYTE PTR [rsi-0x59dbde01],cl
   140046953:	jmp    QWORD PTR [rip+0x27ffbc2a]        # 0x168042583
   140046959:	cmp    ecx,ebx
   14004695b:	jmp    QWORD PTR [rdi]
   14004695d:	rex.WRX (bad) 
   140046960:	sub    BYTE PTR [rdi-0x1a],bl
   140046963:	jmp    FWORD PTR [rcx]
   140046965:	imul   ebp,eax,0xea722aff
   14004696b:	jmp    FWORD PTR [rbx]
   14004696d:	jnp    0x14004695a
   14004696f:	(bad)  
   140046970:	(bad)  
   140046971:	outs   dx,DWORD PTR ds:[rsi]
   140046972:	mov    cl,0xff
   140046974:	(bad)  
   140046975:	push   rdi
   140046976:	(bad)  
   140046977:	call   FWORD PTR [rdi-0x6800fea5]
   14004697d:	push   rdi
   14004697e:	add    edi,edi
   140046980:	addr32 rex.WX
   140046982:	rex.XB jmp FWORD PTR [r11]
   140046985:	(bad)  
   140046986:	mov    ah,0xff
   140046988:	and    ah,BYTE PTR [rax+rbp*4]
   14004698b:	inc    DWORD PTR [rbp+0x73ff2850]
   140046991:	push   rsp
   140046992:	push   QWORD PTR cs:[rbx+0x54]
   140046996:	cs jmp rsi
   140046999:	shr    BYTE PTR [rbp-0x522f1901],1
   14004699f:	jmp    rsi
   1400469a1:	shr    BYTE PTR [rbp-0x522f1901],1
   1400469a7:	jmp    rsi
   1400469a9:	shr    BYTE PTR [rbp-0x522f1901],1
   1400469af:	jmp    rsi
   1400469b1:	shr    BYTE PTR [rbp-0x522f1901],1
   1400469b7:	jmp    rsi
   1400469b9:	shr    BYTE PTR [rbp-0x522f1901],1
   1400469bf:	jmp    rsi
   1400469c1:	shr    BYTE PTR [rbp-0x522f1901],1
   1400469c7:	push   QWORD PTR [rbx+0x54]
   1400469ca:	push   QWORD PTR cs:[rbx+0x54]
   1400469ce:	call   QWORD PTR cs:[rbp-0x6c00fbab]
   1400469d5:	push   rsp
   1400469d6:	add    al,0xff
   1400469d8:	xchg   edx,eax
   1400469d9:	push   rsp
   1400469da:	add    al,0xff
   1400469dc:	xchg   ecx,eax
   1400469dd:	push   rbx
   1400469de:	add    al,0xff
   1400469e0:	nop
   1400469e1:	push   rdx
   1400469e2:	add    al,0xff
   1400469e4:	(bad)  
   1400469e5:	push   rdx
   1400469e6:	add    al,0xff
   1400469e8:	mov    ss,WORD PTR [rcx+0x4]
   1400469eb:	dec    DWORD PTR [rbp-0x7300fbb0]
   1400469f1:	push   rax
   1400469f2:	add    eax,0x54f8bff
   1400469f7:	dec    DWORD PTR [rdx-0x7600fab2]
   1400469fd:	rex.WRX add rax,0x54d88ff
   140046a03:	inc    DWORD PTR [rdi-0x7900fab4]
   140046a09:	rex.WR add rax,0x54b84ff
   140046a0f:	inc    DWORD PTR [rbx+rcx*2+0x4a82ff06]
   140046a16:	(bad)  
   140046a17:	inc    DWORD PTR [rcx-0x7f00f9b7]
   140046a1d:	rex.WB (bad) 
   140046a1f:	inc    DWORD PTR [rax]
	...
   140046a29:	add    BYTE PTR [rax],al
   140046a2b:	add    BYTE PTR [rbp+0x33],al
   140046a2e:	sbb    esi,DWORD PTR [rdx]
   140046a30:	ret    
   140046a31:	xchg   ecx,eax
   140046a32:	rex.WXB rcl r14,cl
   140046a35:	lahf   
   140046a36:	push   rbx
   140046a37:	call   rax
   140046a39:	fwait
   140046a3a:	push   rsp
   140046a3b:	inc    esp
   140046a3d:	xchg   ecx,eax
   140046a3e:	rex.WRXB call QWORD PTR [r9+0x2dff3a63]
   140046a45:	(bad)  
   140046a46:	push   rbx
   140046a47:	call   FWORD PTR [rcx]
   140046a49:	(bad)  
   140046a4a:	push   0xffffffffffffffff
   140046a4c:	sbb    bl,BYTE PTR [rbx]
   140046a4e:	jp     0x140046a4f
   140046a50:	sbb    eax,0x21ff8c1f
   140046a55:	and    esp,DWORD PTR [rdi+rdi*8-0x43d5db]
   140046a5c:	(bad)  
   140046a5d:	ds (bad) 
   140046a5f:	jmp    FWORD PTR [rax]
   140046a61:	push   rsp
   140046a62:	(bad)  
   140046a64:	sub    DWORD PTR [rax+rbp*8-0x1],esp
   140046a68:	sub    ch,BYTE PTR [rdi-0x17]
   140046a6b:	jmp    FWORD PTR [rbx]
   140046a6d:	jp     0x140046a5a
   140046a6f:	jmp    FWORD PTR [rbx]
   140046a71:	jge    0x140046a5e
   140046a73:	jmp    FWORD PTR [rbx]
   140046a75:	jge    0x140046a62
   140046a77:	(bad)  
   140046a78:	ds push 0x5d32ffb0
   140046a7e:	retf   0x27ff
   140046a81:	rex.XB sar r15d,1
   140046a84:	and    eax,0x31ffb727
   140046a89:	sub    ecx,DWORD PTR [rdi+rdi*8-0xfe9f58]
   140046a90:	jne    0x140046ae7
   140046a92:	(bad)  
   140046a93:	push   QWORD PTR [rbp+0x55]
   140046a96:	(bad)  
   140046a97:	jmp    rdi
   140046a99:	shr    DWORD PTR [rdi-0x502e1801],1
   140046a9f:	jmp    rdi
   140046aa1:	shr    DWORD PTR [rdi-0x502e1801],1
   140046aa7:	jmp    rdi
   140046aa9:	shr    DWORD PTR [rdi-0x502e1801],1
   140046aaf:	jmp    rdi
   140046ab1:	shr    DWORD PTR [rdi-0x502e1801],1
   140046ab7:	jmp    rdi
   140046ab9:	shr    DWORD PTR [rdi-0x502e1801],1
   140046abf:	jmp    rdi
   140046ac1:	shr    DWORD PTR [rdi-0x502e1801],1
   140046ac7:	push   QWORD PTR [rbp+0x55]
   140046aca:	(bad)  
   140046acb:	push   QWORD PTR [rbp+0x55]
   140046ace:	(bad)  
   140046acf:	call   QWORD PTR [rbp-0x6a00fcab]
   140046ad5:	push   rbp
   140046ad6:	add    al,0xff
   140046ad8:	xchg   ebx,eax
   140046ad9:	push   rsp
   140046ada:	add    al,0xff
   140046adc:	xchg   edx,eax
   140046add:	push   rsp
   140046ade:	add    al,0xff
   140046ae0:	xchg   ecx,eax
   140046ae1:	push   rbx
   140046ae2:	add    al,0xff
   140046ae4:	nop
   140046ae5:	push   rdx
   140046ae6:	add    al,0xff
   140046ae8:	(bad)  
   140046ae9:	push   rdx
   140046aea:	add    al,0xff
   140046aec:	mov    ss,WORD PTR [rcx+0x4]
   140046aef:	dec    DWORD PTR [rbp-0x7300fbb0]
   140046af5:	push   rax
   140046af6:	add    eax,0x54f8bff
   140046afb:	dec    DWORD PTR [rdx-0x7600fab2]
   140046b01:	rex.WRX add rax,0x54d88ff
   140046b07:	inc    DWORD PTR [rdi-0x7900fab4]
   140046b0d:	rex.WR add rax,0x54b84ff
   140046b13:	inc    DWORD PTR [rbx+rcx*2+0x4a82ff06]
   140046b1a:	(bad)  
   140046b1b:	inc    DWORD PTR [rcx+0xff0649]
   140046b21:	add    BYTE PTR [rax],al
   140046b23:	add    BYTE PTR [rax],al
   140046b25:	add    BYTE PTR [rax],al
   140046b27:	or     dl,BYTE PTR [rcx-0x2c89c794]
   140046b2d:	popf   
   140046b2e:	push   rcx
   140046b2f:	hlt    
   140046b30:	xlat   BYTE PTR ds:[rbx]
   140046b31:	movabs al,ds:0x9aceff539fd5ff53
   140046b3a:	push   rsp
   140046b3b:	inc    edi
   140046b3d:	xchg   ebp,eax
   140046b3e:	push   rsi
   140046b3f:	inc    ecx
   140046b41:	(bad)  
   140046b42:	push   rsp
   140046b43:	call   FWORD PTR [rbx+0x27ff3d6c]
   140046b49:	sbb    edx,DWORD PTR [rbp-0x1]
   140046b4c:	sbb    DWORD PTR [rdi],edx
   140046b4e:	ins    BYTE PTR es:[rdi],dx
   140046b4f:	call   FWORD PTR [rbx]
   140046b51:	sbb    edi,DWORD PTR [rdi+rdi*8+0x1d]
   140046b55:	and    BYTE PTR [rax-0x55dbdd01],dl
   140046b5b:	jmp    QWORD PTR [rsi]
   140046b5d:	xor    bl,al
   140046b5f:	jmp    QWORD PTR [rdi]
   140046b61:	rex.WX xlat BYTE PTR ds:[rbx]
   140046b63:	jmp    FWORD PTR [rax]
   140046b65:	(bad)  
   140046b66:	out    0xff,eax
   140046b68:	sub    ch,BYTE PTR [rbp-0x17]
   140046b6b:	jmp    FWORD PTR [rbx]
   140046b6d:	jns    0x140046b5a
   140046b6f:	jmp    FWORD PTR [rbx]
   140046b71:	jge    0x140046b5e
   140046b73:	jmp    FWORD PTR [rbx]
   140046b75:	jl     0x140046b62
   140046b77:	jmp    FWORD PTR [rdx]
   140046b79:	outs   dx,DWORD PTR ds:[rsi]
   140046b7a:	jmp    0x1225c947e
   140046b7f:	jmp    QWORD PTR [rdi]
   140046b81:	ss enter 0x23ff,0x25
   140046b86:	scas   al,BYTE PTR es:[rdi]
   140046b87:	jmp    FWORD PTR [rbp+0x46]
   140046b8a:	rex.RB jmp FWORD PTR [r8+0x76ff0161]
   140046b91:	push   rsi
   140046b92:	xor    bh,bh
   140046b94:	jbe    0x140046bec
   140046b96:	xor    bh,bh
   140046b98:	call   0x129041d6f
   140046b9d:	shl    BYTE PTR [rcx-0x4e2d1701],cl
   140046ba3:	(bad)  
   140046ba4:	call   0x129041d7b
   140046ba9:	shl    BYTE PTR [rcx-0x4e2d1701],cl
   140046baf:	(bad)  
   140046bb0:	call   0x129041d87
   140046bb5:	shl    BYTE PTR [rcx-0x4e2d1701],cl
   140046bbb:	(bad)  
   140046bbc:	call   0x129041d93
   140046bc1:	shl    BYTE PTR [rcx-0x4e2d1701],cl
   140046bc7:	push   QWORD PTR [rsi+0x56]
   140046bca:	xor    bh,bh
   140046bcc:	jbe    0x140046c24
   140046bce:	xor    bh,bh
   140046bd0:	xchg   edi,eax
   140046bd1:	push   rsi
   140046bd2:	add    edi,edi
   140046bd4:	xchg   ebp,eax
   140046bd5:	push   rbp
   140046bd6:	add    edi,edi
   140046bd8:	xchg   ebp,eax
   140046bd9:	push   rbp
   140046bda:	add    al,0xff
   140046bdc:	xchg   ebx,eax
   140046bdd:	push   rsp
   140046bde:	add    al,0xff
   140046be0:	xchg   edx,eax
   140046be1:	push   rsp
   140046be2:	add    al,0xff
   140046be4:	xchg   ecx,eax
   140046be5:	push   rbx
   140046be6:	add    al,0xff
   140046be8:	nop
   140046be9:	push   rdx
   140046bea:	add    al,0xff
   140046bec:	(bad)  
   140046bed:	push   rdx
   140046bee:	add    al,0xff
   140046bf0:	mov    ss,WORD PTR [rcx+0x4]
   140046bf3:	dec    DWORD PTR [rbp-0x7300fbb0]
   140046bf9:	push   rax
   140046bfa:	add    eax,0x54f8bff
   140046bff:	dec    DWORD PTR [rdx-0x7600fab2]
   140046c05:	rex.WRX add rax,0x54d88ff
   140046c0b:	inc    DWORD PTR [rdi-0x7900fab4]
   140046c11:	rex.WR add rax,0x54b84ff
   140046c17:	inc    DWORD PTR [rbx+rcx*2+0x4a82ff06]
   140046c1e:	(bad)  
   140046c1f:	call   QWORD PTR [rsi+0x40]
   140046c22:	and    DWORD PTR [rax],ebp
   140046c24:	mov    bl,0x85
   140046c26:	rex.RB lods al,BYTE PTR ds:[rsi]
   140046c28:	xlat   BYTE PTR ds:[rbx]
   140046c29:	movabs al,ds:0xa0d7ff53a0d7ff53
   140046c32:	push   rbx
   140046c33:	call   rsp
   140046c35:	sahf   
   140046c36:	push   rbx
   140046c37:	dec    ebp
   140046c39:	cdq    
   140046c3a:	push   rbp
   140046c3b:	inc    esi
   140046c3d:	xchg   esp,eax
   140046c3e:	push   rsi
   140046c3f:	(bad)  
   140046c40:	mov    esi,0xb3ff578f
   140046c45:	test   DWORD PTR [rdi+rdi*8-0x7e],edx
   140046c49:	pop    rcx
   140046c4a:	cmp    eax,0x5c161dff
   140046c4f:	call   FWORD PTR [rcx]
   140046c51:	sbb    BYTE PTR [rax-0x1],dh
   140046c54:	sbb    ebx,DWORD PTR [rip+0x221fff82]        # 0x162246bdc
   140046c5a:	(bad)  
   140046c5b:	jmp    QWORD PTR [rip+0x27ffb828]        # 0x168042489
   140046c61:	sar    dil,1
   140046c64:	sub    BYTE PTR [rbp-0x1b],bl
   140046c67:	jmp    FWORD PTR [rdx]
   140046c69:	imul   ebp,ecx,0xffffffff
   140046c6c:	sub    edi,DWORD PTR [rax-0x15]
   140046c6f:	jmp    FWORD PTR [rbx]
   140046c71:	jge    0x140046c5e
   140046c73:	jmp    FWORD PTR [rbx]
   140046c75:	jp     0x140046c62
   140046c77:	jmp    FWORD PTR [rcx]
   140046c79:	imul   ebp,ecx,0xda4e27ff
   140046c7f:	jmp    QWORD PTR [rsi]
   140046c81:	sub    eax,0x2321ffbf
   140046c86:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140046c87:	call   FWORD PTR [rcx-0x5500eba6]
   140046c8d:	(bad)  
   140046c8e:	add    edi,edi
   140046c90:	ja     0x140046ce9
   140046c92:	xor    edi,edi
   140046c94:	ja     0x140046ced
   140046c96:	xor    edi,edi
   140046c98:	call   0x129041f71
   140046c9d:	(bad)  
   140046c9e:	mov    dl,0xff
   140046ca0:	call   0x129041f79
   140046ca5:	(bad)  
   140046ca6:	mov    dl,0xff
   140046ca8:	call   0x129041f81
   140046cad:	(bad)  
   140046cae:	mov    dl,0xff
   140046cb0:	call   0x129041f89
   140046cb5:	(bad)  
   140046cb6:	mov    dl,0xff
   140046cb8:	call   0x129041f91
   140046cbd:	(bad)  
   140046cbe:	mov    dl,0xff
   140046cc0:	call   0x129041f99
   140046cc5:	(bad)  
   140046cc6:	mov    dl,0xff
   140046cc8:	ja     0x140046d21
   140046cca:	xor    edi,edi
   140046ccc:	ja     0x140046d25
   140046cce:	xor    edi,edi
   140046cd0:	cwde   
   140046cd1:	push   rdi
   140046cd2:	add    edi,edi
   140046cd4:	xchg   edi,eax
   140046cd5:	push   rsi
   140046cd6:	add    edi,edi
   140046cd8:	xchg   ebp,eax
   140046cd9:	push   rbp
   140046cda:	add    edi,edi
   140046cdc:	xchg   ebp,eax
   140046cdd:	push   rbp
   140046cde:	add    al,0xff
   140046ce0:	xchg   ebx,eax
   140046ce1:	push   rsp
   140046ce2:	add    al,0xff
   140046ce4:	xchg   edx,eax
   140046ce5:	push   rsp
   140046ce6:	add    al,0xff
   140046ce8:	xchg   ecx,eax
   140046ce9:	push   rbx
   140046cea:	add    al,0xff
   140046cec:	nop
   140046ced:	push   rdx
   140046cee:	add    al,0xff
   140046cf0:	(bad)  
   140046cf1:	push   rdx
   140046cf2:	add    al,0xff
   140046cf4:	mov    ss,WORD PTR [rcx+0x4]
   140046cf7:	dec    DWORD PTR [rbp-0x7300fbb0]
   140046cfd:	push   rax
   140046cfe:	add    eax,0x54f8bff
   140046d03:	dec    DWORD PTR [rdx-0x7600fab2]
   140046d09:	rex.WRX add rax,0x54d88ff
   140046d0f:	inc    DWORD PTR [rdi-0x7900fab4]
   140046d15:	rex.WR add rax,0x54b84ff
   140046d1b:	inc    DWORD PTR [rbx+rcx*2-0x673200fa]
   140046d22:	rex.WRXB leave 
   140046d24:	xlat   BYTE PTR ds:[rbx]
   140046d25:	movabs al,ds:0xa0d7ff53a0d7ff53
   140046d2e:	push   rbx
   140046d2f:	call   rdi
   140046d31:	movabs al,ds:0x98ccff549dd3ff53
   140046d3a:	push   rbp
   140046d3b:	inc    esp
   140046d3d:	xchg   ebx,eax
   140046d3e:	push   rsi
   140046d3f:	(bad)  
   140046d40:	mov    ebp,0xb6ff578e
   140046d45:	mov    BYTE PTR [rax-0x1],bl
   140046d48:	lods   eax,DWORD PTR ds:[rsi]
   140046d49:	jg     0x140046d9b
   140046d4b:	call   FWORD PTR [rdi+0x40]
   140046d4e:	rex.XB call FWORD PTR [r9]
   140046d51:	adc    eax,0x1a1aff64
   140046d56:	js     0x140046d57
   140046d58:	sbb    eax,0x23ff8c1f
   140046d5d:	and    al,0xac
   140046d5f:	jmp    QWORD PTR [rdi]
   140046d61:	cmp    edx,ecx
   140046d63:	jmp    FWORD PTR [rax]
   140046d65:	pop    rcx
   140046d66:	loop   0x140046d67
   140046d68:	sub    DWORD PTR [rdx-0x17],ebp
   140046d6b:	jmp    FWORD PTR [rbx]
   140046d6d:	ja     0x140046d59
   140046d6f:	jmp    FWORD PTR [rbx]
   140046d71:	jl     0x140046d5e
   140046d73:	jmp    FWORD PTR [rbx]
   140046d75:	ja     0x140046d61
   140046d77:	jmp    FWORD PTR [rcx]
   140046d79:	fs out 0xff,eax
   140046d7c:	(bad)  
   140046d7d:	rex.XB sar r15b,cl
   140046d80:	and    eax,0x4cffb627
   140046d85:	(bad)  
   140046d86:	outs   dx,DWORD PTR ds:[rsi]
   140046d87:	jmp    FWORD PTR [rbx+riz*2+0x62abff01]
   140046d8e:	add    edi,edi
   140046d90:	js     0x140046dea
   140046d92:	xor    bh,bh
   140046d94:	js     0x140046dee
   140046d96:	xor    bh,bh
   140046d98:	jmp    0x12a042272
   140046d9d:	(bad)  
   140046d9e:	mov    ah,0xff
   140046da0:	jmp    0x12a04227a
   140046da5:	(bad)  
   140046da6:	mov    ah,0xff
   140046da8:	jmp    0x12a042282
   140046dad:	(bad)  
   140046dae:	mov    ah,0xff
   140046db0:	jmp    0x12a04228a
   140046db5:	(bad)  
   140046db6:	mov    ah,0xff
   140046db8:	jmp    0x12a042292
   140046dbd:	(bad)  
   140046dbe:	mov    ah,0xff
   140046dc0:	jmp    0x12a04229a
   140046dc5:	(bad)  
   140046dc6:	mov    ah,0xff
   140046dc8:	js     0x140046e22
   140046dca:	xor    bh,bh
   140046dcc:	js     0x140046e26
   140046dce:	xor    bh,bh
   140046dd0:	cdq    
   140046dd1:	push   rdi
   140046dd2:	add    edi,edi
   140046dd4:	cwde   
   140046dd5:	push   rdi
   140046dd6:	add    edi,edi
   140046dd8:	xchg   edi,eax
   140046dd9:	push   rsi
   140046dda:	add    edi,edi
   140046ddc:	xchg   ebp,eax
   140046ddd:	push   rbp
   140046dde:	add    edi,edi
   140046de0:	xchg   ebp,eax
   140046de1:	push   rbp
   140046de2:	add    al,0xff
   140046de4:	xchg   ebx,eax
   140046de5:	push   rsp
   140046de6:	add    al,0xff
   140046de8:	xchg   edx,eax
   140046de9:	push   rsp
   140046dea:	add    al,0xff
   140046dec:	xchg   ecx,eax
   140046ded:	push   rbx
   140046dee:	add    al,0xff
   140046df0:	nop
   140046df1:	push   rdx
   140046df2:	add    al,0xff
   140046df4:	(bad)  
   140046df5:	push   rdx
   140046df6:	add    al,0xff
   140046df8:	mov    ss,WORD PTR [rcx+0x4]
   140046dfb:	dec    DWORD PTR [rbp-0x7300fbb0]
   140046e01:	push   rax
   140046e02:	add    eax,0x54f8bff
   140046e07:	dec    DWORD PTR [rdx-0x7600fab2]
   140046e0d:	rex.WRX add rax,0x54d88ff
   140046e13:	inc    DWORD PTR [rdi-0x7900fab4]
   140046e19:	rex.WR add rax,0x54b84ff
   140046e1f:	inc    DWORD PTR [rax]
   140046e21:	add    BYTE PTR [rax],al
   140046e23:	add    bh,dl
   140046e25:	movabs al,ds:0xa0d7bf53a0d76053
   140046e2e:	push   rbx
   140046e2f:	call   rdi
   140046e31:	movabs al,ds:0x97cbff549cd2ff53
   140046e3a:	push   rbp
   140046e3b:	inc    ebx
   140046e3d:	xchg   edx,eax
   140046e3e:	push   rsi
   140046e3f:	(bad)  
   140046e40:	mov    esp,0xb4ff578d
   140046e45:	mov    BYTE PTR [rax-0x1],bl
   140046e48:	mov    ch,0x85
   140046e4a:	rex.WRX jmp FWORD PTR [rax+0x32ff3674]
   140046e51:	and    dl,BYTE PTR [rcx-0x1]
   140046e54:	sbb    DWORD PTR [rdi],edx
   140046e56:	ins    DWORD PTR es:[rdi],dx
   140046e57:	call   FWORD PTR [rbx]
   140046e59:	sbb    eax,0x2321ff82
   140046e5e:	movabs eax,ds:0xdf5528ffc43226ff
   140046e67:	jmp    FWORD PTR [rcx]
   140046e69:	imul   ebp,ecx,0xea752bff
   140046e6f:	jmp    FWORD PTR [rbx]
   140046e71:	jp     0x140046e5e
   140046e73:	jmp    FWORD PTR [rdx]
   140046e75:	je     0x140046e61
   140046e77:	jmp    FWORD PTR [rax]
   140046e79:	pop    rbp
   140046e7a:	in     al,0xff
   140046e7c:	(bad)  
   140046e7d:	cmp    edx,ecx
   140046e7f:	jmp    QWORD PTR [rbx]
   140046e81:	and    eax,0x4b78ffae
   140046e86:	cmp    edi,edi
   140046e88:	lods   eax,DWORD PTR ds:[rsi]
   140046e89:	movsxd eax,DWORD PTR [rcx]
   140046e8b:	jmp    FWORD PTR [rbx+riz*2+0x5979ff01]
   140046e92:	xor    bh,bh
   140046e94:	jns    0x140046eef
   140046e96:	xor    bh,bh
   140046e98:	jns    0x140046ef3
   140046e9a:	xor    bh,bh
   140046e9c:	jns    0x140046ef7
   140046e9e:	xor    bh,bh
   140046ea0:	jns    0x140046efb
   140046ea2:	xor    bh,bh
   140046ea4:	jns    0x140046eff
   140046ea6:	xor    bh,bh
   140046ea8:	jns    0x140046f03
   140046eaa:	xor    bh,bh
   140046eac:	jns    0x140046f07
   140046eae:	xor    bh,bh
   140046eb0:	jns    0x140046f0b
   140046eb2:	xor    bh,bh
   140046eb4:	jns    0x140046f0f
   140046eb6:	xor    bh,bh
   140046eb8:	jns    0x140046f13
   140046eba:	xor    bh,bh
   140046ebc:	jns    0x140046f17
   140046ebe:	xor    bh,bh
   140046ec0:	jns    0x140046f1b
   140046ec2:	xor    bh,bh
   140046ec4:	jns    0x140046f1f
   140046ec6:	xor    bh,bh
   140046ec8:	jns    0x140046f23
   140046eca:	xor    bh,bh
   140046ecc:	jns    0x140046f27
   140046ece:	xor    bh,bh
   140046ed0:	(bad)  
   140046ed1:	pop    rax
   140046ed2:	add    edi,edi
   140046ed4:	cdq    
   140046ed5:	push   rdi
   140046ed6:	add    edi,edi
   140046ed8:	cwde   
   140046ed9:	push   rdi
   140046eda:	add    edi,edi
   140046edc:	xchg   edi,eax
   140046edd:	push   rsi
   140046ede:	add    edi,edi
   140046ee0:	xchg   ebp,eax
   140046ee1:	push   rbp
   140046ee2:	add    edi,edi
   140046ee4:	xchg   ebp,eax
   140046ee5:	push   rbp
   140046ee6:	add    al,0xff
   140046ee8:	xchg   ebx,eax
   140046ee9:	push   rsp
   140046eea:	add    al,0xff
   140046eec:	xchg   edx,eax
   140046eed:	push   rsp
   140046eee:	add    al,0xff
   140046ef0:	xchg   ecx,eax
   140046ef1:	push   rbx
   140046ef2:	add    al,0xff
   140046ef4:	nop
   140046ef5:	push   rdx
   140046ef6:	add    al,0xff
   140046ef8:	(bad)  
   140046ef9:	push   rdx
   140046efa:	add    al,0xff
   140046efc:	mov    ss,WORD PTR [rcx+0x4]
   140046eff:	dec    DWORD PTR [rbp-0x7300fbb0]
   140046f05:	push   rax
   140046f06:	add    eax,0x54f8bff
   140046f0b:	dec    DWORD PTR [rdx-0x7600fab2]
   140046f11:	rex.WRX add rax,0x54d88ff
   140046f17:	inc    DWORD PTR [rdi-0x7900fab4]
   140046f1d:	rex.WR add rax,0xff
	...
   140046f2b:	add    bh,dl
   140046f2d:	movabs al,ds:0x9bd09f53a0d72053
   140046f36:	push   rsp
   140046f37:	out    dx,eax
   140046f38:	leave  
   140046f39:	xchg   esi,eax
   140046f3a:	push   rbp
   140046f3b:	inc    edx
   140046f3d:	xchg   ecx,eax
   140046f3e:	push   rsi
   140046f3f:	(bad)  
   140046f40:	mov    ebx,0xbeff578c
   140046f45:	mov    BYTE PTR [rdx-0x1],al
   140046f48:	mov    fs,WORD PTR [rdx+0x38]
   140046f4b:	jmp    FWORD PTR [rip+0x70ff451d]        # 0x1b103b46e
   140046f51:	rex.WXB cmp rax,0x5f161bff
   140046f57:	call   FWORD PTR [rdx]
   140046f59:	sbb    edi,DWORD PTR [rcx-0x1]
   140046f5c:	(bad)  
   140046f5d:	and    DWORD PTR [rdi-0x40d1d901],edx
   140046f63:	jmp    FWORD PTR [rax]
   140046f65:	push   rdx
   140046f66:	(bad)  
   140046f68:	sub    DWORD PTR [rax-0x18],ebp
   140046f6b:	jmp    FWORD PTR [rdx]
   140046f6d:	jbe    0x140046f59
   140046f6f:	jmp    FWORD PTR [rbx]
   140046f71:	jns    0x140046f5d
   140046f73:	jmp    FWORD PTR [rdx]
   140046f75:	jo     0x140046f60
   140046f77:	jmp    FWORD PTR [rax]
   140046f79:	push   rbp
   140046f7a:	loopne 0x140046f7b
   140046f7c:	es (bad) 
   140046f7e:	sar    edi,0x21
   140046f81:	and    esp,DWORD PTR [rbp+0xa60a6ff]
   140046f87:	jmp    FWORD PTR [rsi-0x5200fe9c]
   140046f8d:	movsxd eax,DWORD PTR [rcx]
   140046f8f:	(bad)  
   140046f90:	jp     0x140046fed
   140046f92:	xor    edi,edi
   140046f94:	jp     0x140046ff1
   140046f96:	xor    edi,edi
   140046f98:	jp     0x140046ff5
   140046f9a:	xor    edi,edi
   140046f9c:	jp     0x140046ff9
   140046f9e:	xor    edi,edi
   140046fa0:	jp     0x140046ffd
   140046fa2:	xor    edi,edi
   140046fa4:	jp     0x140047001
   140046fa6:	xor    edi,edi
   140046fa8:	jp     0x140047005
   140046faa:	xor    edi,edi
   140046fac:	jp     0x140047009
   140046fae:	xor    edi,edi
   140046fb0:	jp     0x14004700d
   140046fb2:	xor    edi,edi
   140046fb4:	jp     0x140047011
   140046fb6:	xor    edi,edi
   140046fb8:	jp     0x140047015
   140046fba:	xor    edi,edi
   140046fbc:	jp     0x140047019
   140046fbe:	xor    edi,edi
   140046fc0:	jp     0x14004701d
   140046fc2:	xor    edi,edi
   140046fc4:	jp     0x140047021
   140046fc6:	xor    edi,edi
   140046fc8:	jp     0x140047025
   140046fca:	xor    edi,edi
   140046fcc:	jp     0x140047029
   140046fce:	xor    edi,edi
   140046fd0:	fwait
   140046fd1:	pop    rcx
   140046fd2:	add    edi,edi
   140046fd4:	(bad)  
   140046fd5:	pop    rax
   140046fd6:	add    edi,edi
   140046fd8:	cdq    
   140046fd9:	push   rdi
   140046fda:	add    edi,edi
   140046fdc:	cwde   
   140046fdd:	push   rdi
   140046fde:	add    edi,edi
   140046fe0:	xchg   edi,eax
   140046fe1:	push   rsi
   140046fe2:	add    edi,edi
   140046fe4:	xchg   ebp,eax
   140046fe5:	push   rbp
   140046fe6:	add    edi,edi
   140046fe8:	xchg   ebp,eax
   140046fe9:	push   rbp
   140046fea:	add    al,0xff
   140046fec:	xchg   ebx,eax
   140046fed:	push   rsp
   140046fee:	add    al,0xff
   140046ff0:	xchg   edx,eax
   140046ff1:	push   rsp
   140046ff2:	add    al,0xff
   140046ff4:	xchg   ecx,eax
   140046ff5:	push   rbx
   140046ff6:	add    al,0xff
   140046ff8:	nop
   140046ff9:	push   rdx
   140046ffa:	add    al,0xff
   140046ffc:	(bad)  
   140046ffd:	push   rdx
   140046ffe:	add    al,0xff
   140047000:	mov    ss,WORD PTR [rcx+0x4]
   140047003:	dec    DWORD PTR [rbp-0x7300fbb0]
   140047009:	push   rax
   14004700a:	add    eax,0x54f8bff
   14004700f:	dec    DWORD PTR [rdx-0x7600fab2]
   140047015:	rex.WRX add rax,0x54d88ff
   14004701b:	inc    DWORD PTR [rdi+0xff054c]
	...
   140047031:	add    BYTE PTR [rax],al
   140047033:	add    ch,cl
   140047035:	cdq    
   140047036:	push   rbp
   140047037:	adc    al,cl
   140047039:	xchg   ebp,eax
   14004703a:	push   rbp
   14004703b:	(bad)  
   14004703c:	ret    0x518f
   14004703f:	iret   
   140047040:	sahf   
   140047041:	outs   dx,DWORD PTR ds:[rsi]
   140047042:	cmp    al,0xff
   140047044:	(bad)  
   140047045:	rex.X (bad) 
   140047047:	jmp    FWORD PTR [rax]
   140047049:	sbb    DWORD PTR [rsi-0x1],eax
   14004704c:	sub    BYTE PTR [rcx],bl
   14004704e:	rex.RX dec DWORD PTR [rax+0x2f]
   140047052:	dec    DWORD PTR [r8+0x31]
   140047056:	rex.WX call FWORD PTR [rcx]
   140047059:	sbb    BYTE PTR [rdi-0x1],ch
   14004705c:	sbb    eax,0x25ff8e20
   140047061:	sub    bh,BYTE PTR [rax-0x24b0d701]
   140047067:	jmp    FWORD PTR [rcx]
   140047069:	push   0xffffffff882bffe8
   14004706e:	(bad)  
   14004706f:	jmp    FWORD PTR [rbx]
   140047071:	sub    edx,0xffffffff
   140047074:	sub    DWORD PTR [rcx+rbp*8-0x1],ebp
   140047078:	(bad)  
   140047079:	rex.WR fcos 
   14004707c:	and    eax,0x57ffb829
   140047081:	cmp    al,0x64
   140047083:	push   QWORD PTR [rax-0x5000ff9b]
   140047089:	fs add bh,bh
   14004708c:	scas   al,BYTE PTR es:[rdi]
   14004708d:	fs add edi,edi
   140047090:	lods   eax,DWORD PTR ds:[rsi]
   140047091:	movsxd eax,DWORD PTR [rcx]
   140047093:	jmp    FWORD PTR [rbx+riz*2+0x62abff01]
   14004709a:	add    edi,edi
   14004709c:	stos   BYTE PTR es:[rdi],al
   14004709d:	(bad)  
   14004709e:	add    edi,edi
   1400470a0:	test   al,0x61
   1400470a2:	add    edi,edi
   1400470a4:	test   al,0x60
   1400470a6:	add    edi,edi
   1400470a8:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400470a9:	pop    rdi
   1400470aa:	add    edi,edi
   1400470ac:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400470ad:	pop    rdi
   1400470ae:	add    bh,bh
   1400470b0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400470b1:	pop    rsi
   1400470b2:	add    bh,bh
   1400470b4:	movabs ds:0xa1ff025da2ff025e,eax
   1400470bd:	pop    rsp
   1400470be:	add    bh,bh
   1400470c0:	movabs al,ds:0x9eff025b9fff025c
   1400470c9:	pop    rdx
   1400470ca:	add    bh,bh
   1400470cc:	popf   
   1400470cd:	pop    rdx
   1400470ce:	add    edi,edi
   1400470d0:	pushf  
   1400470d1:	pop    rcx
   1400470d2:	add    edi,edi
   1400470d4:	fwait
   1400470d5:	pop    rcx
   1400470d6:	add    edi,edi
   1400470d8:	(bad)  
   1400470d9:	pop    rax
   1400470da:	add    edi,edi
   1400470dc:	cdq    
   1400470dd:	push   rdi
   1400470de:	add    edi,edi
   1400470e0:	cwde   
   1400470e1:	push   rdi
   1400470e2:	add    edi,edi
   1400470e4:	xchg   edi,eax
   1400470e5:	push   rsi
   1400470e6:	add    edi,edi
   1400470e8:	xchg   ebp,eax
   1400470e9:	push   rbp
   1400470ea:	add    edi,edi
   1400470ec:	xchg   ebp,eax
   1400470ed:	push   rbp
   1400470ee:	add    al,0xff
   1400470f0:	xchg   ebx,eax
   1400470f1:	push   rsp
   1400470f2:	add    al,0xff
   1400470f4:	xchg   edx,eax
   1400470f5:	push   rsp
   1400470f6:	add    al,0xff
   1400470f8:	xchg   ecx,eax
   1400470f9:	push   rbx
   1400470fa:	add    al,0xff
   1400470fc:	nop
   1400470fd:	push   rdx
   1400470fe:	add    al,0xff
   140047100:	(bad)  
   140047101:	push   rdx
   140047102:	add    al,0xff
   140047104:	mov    ss,WORD PTR [rcx+0x4]
   140047107:	dec    DWORD PTR [rbp-0x7300fbb0]
   14004710d:	push   rax
   14004710e:	add    eax,0x54f8bff
   140047113:	dec    DWORD PTR [rdx-0x7600fab2]
   140047119:	rex.WRX add rax,0x54d88ff
   14004711f:	out    dx,eax
	...
   140047140:	fs (bad) 
   140047142:	(bad)  
   140047143:	lahf   
   140047144:	(bad)  
   140047145:	(bad)  
   140047146:	cmp    al,0xff
   140047148:	pop    rbx
   140047149:	cmp    edi,DWORD PTR [rsi]
   14004714b:	call   QWORD PTR [rsi+rsi*1+0x40]
   14004714f:	dec    DWORD PTR [rbx+0x2f]
   140047152:	rex.XB push QWORD PTR [r14+0x4f]
   140047156:	cmp    al,0xff
   140047158:	sbb    eax,0x1cff5f17
   14004715d:	sbb    eax,0x2723ff84
   140047162:	mov    cl,0xff
   140047164:	(bad)  
   140047165:	rex.WXB fdivr st,st(7)
   140047168:	sub    DWORD PTR [rdi-0x18],ebp
   14004716b:	jmp    FWORD PTR [rdi+rbx*4]
   14004716e:	(bad)  
   14004716f:	jmp    FWORD PTR [rbx+rdx*4]
   140047172:	(bad)  
   140047173:	jmp    FWORD PTR [rcx]
   140047175:	imul   ebp,eax,0xd14327ff
   14004717b:	jmp    QWORD PTR [rbx]
   14004717d:	and    eax,0x5184ffae
   140047182:	xor    bh,bh
   140047184:	mov    cl,0x66
   140047186:	add    bh,bh
   140047188:	mov    al,0x65
   14004718a:	add    bh,bh
   14004718c:	scas   eax,DWORD PTR es:[rdi]
   14004718d:	fs add bh,bh
   140047190:	scas   al,BYTE PTR es:[rdi]
   140047191:	fs add edi,edi
   140047194:	lods   eax,DWORD PTR ds:[rsi]
   140047195:	movsxd eax,DWORD PTR [rcx]
   140047197:	jmp    FWORD PTR [rbx+riz*2+0x62abff01]
   14004719e:	add    edi,edi
   1400471a0:	stos   BYTE PTR es:[rdi],al
   1400471a1:	(bad)  
   1400471a2:	add    edi,edi
   1400471a4:	test   al,0x61
   1400471a6:	add    edi,edi
   1400471a8:	test   al,0x60
   1400471aa:	add    edi,edi
   1400471ac:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400471ad:	pop    rdi
   1400471ae:	add    edi,edi
   1400471b0:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400471b1:	pop    rdi
   1400471b2:	add    bh,bh
   1400471b4:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400471b5:	pop    rsi
   1400471b6:	add    bh,bh
   1400471b8:	movabs ds:0xa1ff025da2ff025e,eax
   1400471c1:	pop    rsp
   1400471c2:	add    bh,bh
   1400471c4:	movabs al,ds:0x9eff025b9fff025c
   1400471cd:	pop    rdx
   1400471ce:	add    bh,bh
   1400471d0:	popf   
   1400471d1:	pop    rdx
   1400471d2:	add    edi,edi
   1400471d4:	pushf  
   1400471d5:	pop    rcx
   1400471d6:	add    edi,edi
   1400471d8:	fwait
   1400471d9:	pop    rcx
   1400471da:	add    edi,edi
   1400471dc:	(bad)  
   1400471dd:	pop    rax
   1400471de:	add    edi,edi
   1400471e0:	cdq    
   1400471e1:	push   rdi
   1400471e2:	add    edi,edi
   1400471e4:	cwde   
   1400471e5:	push   rdi
   1400471e6:	add    edi,edi
   1400471e8:	xchg   edi,eax
   1400471e9:	push   rsi
   1400471ea:	add    edi,edi
   1400471ec:	xchg   ebp,eax
   1400471ed:	push   rbp
   1400471ee:	add    edi,edi
   1400471f0:	xchg   ebp,eax
   1400471f1:	push   rbp
   1400471f2:	add    al,0xff
   1400471f4:	xchg   ebx,eax
   1400471f5:	push   rsp
   1400471f6:	add    al,0xff
   1400471f8:	xchg   edx,eax
   1400471f9:	push   rsp
   1400471fa:	add    al,0xff
   1400471fc:	xchg   ecx,eax
   1400471fd:	push   rbx
   1400471fe:	add    al,0xff
   140047200:	nop
   140047201:	push   rdx
   140047202:	add    al,0xff
   140047204:	(bad)  
   140047205:	push   rdx
   140047206:	add    al,0xff
   140047208:	mov    ss,WORD PTR [rcx+0x4]
   14004720b:	dec    DWORD PTR [rbp-0x7300fbb0]
   140047211:	push   rax
   140047212:	add    eax,0x54f8bff
   140047217:	dec    DWORD PTR [rdx-0x7600fab2]
   14004721d:	rex.WRX add rax,0x9f
	...
   14004723f:	add    BYTE PTR [rbx-0x3ebfff99],dh
   140047245:	and    DWORD PTR [rcx],0x2e7fb7ff
   14004724b:	call   FWORD PTR [rdx+0x7cff2b68]
   140047251:	push   rbx
   140047252:	xor    bh,bh
   140047254:	jbe    0x1400472a5
   140047256:	cmp    bh,bh
   140047258:	rex.WRX xor rax,0x1a1aff49
   14004725e:	js     0x14004725f
   140047260:	and    ah,BYTE PTR [rax+rbp*4]
   140047263:	jmp    QWORD PTR [rdi]
   140047265:	rex.RB (bad) 
   140047267:	jmp    FWORD PTR [rdx]
   140047269:	jl     0x140047254
   14004726b:	jmp    FWORD PTR [rsi]
   14004726d:	mov    dl,0xec
   14004726f:	jmp    FWORD PTR [rip+0x29ffeaa2]        # 0x16a045d17
   140047275:	out    0xff,ax
   140047278:	es cmp cl,cl
   14004727b:	jmp    FWORD PTR [rdx]
   14004727d:	sub    BYTE PTR [rbx+0x67b3ff],bl
   140047283:	push   QWORD PTR [rdx-0x4e00ff9a]
   140047289:	data16 add bh,bh
   14004728c:	mov    al,0x65
   14004728e:	add    bh,bh
   140047290:	scas   eax,DWORD PTR es:[rdi]
   140047291:	fs add bh,bh
   140047294:	scas   al,BYTE PTR es:[rdi]
   140047295:	fs add edi,edi
   140047298:	lods   eax,DWORD PTR ds:[rsi]
   140047299:	movsxd eax,DWORD PTR [rcx]
   14004729b:	jmp    FWORD PTR [rbx+riz*2+0x62abff01]
   1400472a2:	add    edi,edi
   1400472a4:	stos   BYTE PTR es:[rdi],al
   1400472a5:	(bad)  
   1400472a6:	add    edi,edi
   1400472a8:	test   al,0x61
   1400472aa:	add    edi,edi
   1400472ac:	test   al,0x60
   1400472ae:	add    edi,edi
   1400472b0:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400472b1:	pop    rdi
   1400472b2:	add    edi,edi
   1400472b4:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400472b5:	pop    rdi
   1400472b6:	add    bh,bh
   1400472b8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400472b9:	pop    rsi
   1400472ba:	add    bh,bh
   1400472bc:	movabs ds:0xa1ff025da2ff025e,eax
   1400472c5:	pop    rsp
   1400472c6:	add    bh,bh
   1400472c8:	movabs al,ds:0x9eff025b9fff025c
   1400472d1:	pop    rdx
   1400472d2:	add    bh,bh
   1400472d4:	popf   
   1400472d5:	pop    rdx
   1400472d6:	add    edi,edi
   1400472d8:	pushf  
   1400472d9:	pop    rcx
   1400472da:	add    edi,edi
   1400472dc:	fwait
   1400472dd:	pop    rcx
   1400472de:	add    edi,edi
   1400472e0:	(bad)  
   1400472e1:	pop    rax
   1400472e2:	add    edi,edi
   1400472e4:	cdq    
   1400472e5:	push   rdi
   1400472e6:	add    edi,edi
   1400472e8:	cwde   
   1400472e9:	push   rdi
   1400472ea:	add    edi,edi
   1400472ec:	xchg   edi,eax
   1400472ed:	push   rsi
   1400472ee:	add    edi,edi
   1400472f0:	xchg   ebp,eax
   1400472f1:	push   rbp
   1400472f2:	add    edi,edi
   1400472f4:	xchg   ebp,eax
   1400472f5:	push   rbp
   1400472f6:	add    al,0xff
   1400472f8:	xchg   ebx,eax
   1400472f9:	push   rsp
   1400472fa:	add    al,0xff
   1400472fc:	xchg   edx,eax
   1400472fd:	push   rsp
   1400472fe:	add    al,0xff
   140047300:	xchg   ecx,eax
   140047301:	push   rbx
   140047302:	add    al,0xff
   140047304:	nop
   140047305:	push   rdx
   140047306:	add    al,0xff
   140047308:	(bad)  
   140047309:	push   rdx
   14004730a:	add    al,0xff
   14004730c:	mov    ss,WORD PTR [rcx+0x4]
   14004730f:	dec    DWORD PTR [rbp-0x7300fbb0]
   140047315:	push   rax
   140047316:	add    eax,0x54f8bff
   14004731b:	dec    DWORD PTR [rdx+0x40054f]
	...
   140047341:	add    BYTE PTR [rax],al
   140047343:	add    BYTE PTR [rsi-0x3a50fa95],dh
   140047349:	and    DWORD PTR [rdx],0xffffffff
   14004734c:	(bad)
   14004734f:	push   QWORD PTR [rcx+rdi*2+0x6799ff1e]
   140047356:	inc    DWORD PTR es:[rcx+rbx*2+0x181cff37]
   14004735e:	imul   edi,edi,0xff9d2220
   140047364:	(bad)  
   140047365:	ds (bad) 
   140047367:	jmp    FWORD PTR [rbx]
   140047369:	mov    ch,cl
   14004736b:	jmp    FWORD PTR [rdi]
   14004736d:	ret    
   14004736e:	in     al,dx
   14004736f:	jmp    FWORD PTR [rsi]
   140047371:	scas   eax,DWORD PTR es:[rdi]
   140047372:	jmp    0x140047373
   140047374:	sub    BYTE PTR [rbx-0x1c],ah
   140047377:	jmp    QWORD PTR [rip+0x57ffbf30]        # 0x1980432ad
   14004737d:	cmp    al,0x63
   14004737f:	push   QWORD PTR [rbx-0x4c00ff99]
   140047385:	addr32 add bh,bh
   140047388:	mov    dl,0x66
   14004738a:	add    bh,bh
   14004738c:	mov    cl,0x66
   14004738e:	add    bh,bh
   140047390:	mov    al,0x65
   140047392:	add    bh,bh
   140047394:	scas   eax,DWORD PTR es:[rdi]
   140047395:	fs add bh,bh
   140047398:	scas   al,BYTE PTR es:[rdi]
   140047399:	fs add edi,edi
   14004739c:	lods   eax,DWORD PTR ds:[rsi]
   14004739d:	movsxd eax,DWORD PTR [rcx]
   14004739f:	jmp    FWORD PTR [rbx+riz*2+0x62abff01]
   1400473a6:	add    edi,edi
   1400473a8:	stos   BYTE PTR es:[rdi],al
   1400473a9:	(bad)  
   1400473aa:	add    edi,edi
   1400473ac:	test   al,0x61
   1400473ae:	add    edi,edi
   1400473b0:	test   al,0x60
   1400473b2:	add    edi,edi
   1400473b4:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400473b5:	pop    rdi
   1400473b6:	add    edi,edi
   1400473b8:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400473b9:	pop    rdi
   1400473ba:	add    bh,bh
   1400473bc:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400473bd:	pop    rsi
   1400473be:	add    bh,bh
   1400473c0:	movabs ds:0xa1ff025da2ff025e,eax
   1400473c9:	pop    rsp
   1400473ca:	add    bh,bh
   1400473cc:	movabs al,ds:0x9eff025b9fff025c
   1400473d5:	pop    rdx
   1400473d6:	add    bh,bh
   1400473d8:	popf   
   1400473d9:	pop    rdx
   1400473da:	add    edi,edi
   1400473dc:	pushf  
   1400473dd:	pop    rcx
   1400473de:	add    edi,edi
   1400473e0:	fwait
   1400473e1:	pop    rcx
   1400473e2:	add    edi,edi
   1400473e4:	(bad)  
   1400473e5:	pop    rax
   1400473e6:	add    edi,edi
   1400473e8:	cdq    
   1400473e9:	push   rdi
   1400473ea:	add    edi,edi
   1400473ec:	cwde   
   1400473ed:	push   rdi
   1400473ee:	add    edi,edi
   1400473f0:	xchg   edi,eax
   1400473f1:	push   rsi
   1400473f2:	add    edi,edi
   1400473f4:	xchg   ebp,eax
   1400473f5:	push   rbp
   1400473f6:	add    edi,edi
   1400473f8:	xchg   ebp,eax
   1400473f9:	push   rbp
   1400473fa:	add    al,0xff
   1400473fc:	xchg   ebx,eax
   1400473fd:	push   rsp
   1400473fe:	add    al,0xff
   140047400:	xchg   edx,eax
   140047401:	push   rsp
   140047402:	add    al,0xff
   140047404:	xchg   ecx,eax
   140047405:	push   rbx
   140047406:	add    al,0xff
   140047408:	nop
   140047409:	push   rdx
   14004740a:	add    al,0xff
   14004740c:	(bad)  
   14004740d:	push   rdx
   14004740e:	add    al,0xff
   140047410:	mov    ss,WORD PTR [rcx+0x4]
   140047413:	dec    DWORD PTR [rbp-0x7300fbb0]
   140047419:	push   rax
   14004741a:	add    eax,0xaf
	...
   140047443:	add    BYTE PTR [rbx-0x4cefff99],dh
   140047449:	addr32 add bh,ch
   14004744c:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004744d:	(bad)  
   14004744e:	or     bh,bh
   140047450:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140047451:	push   0x16
   140047453:	push   QWORD PTR [rbp-0x5400e587]
   140047459:	jae    0x140047480
   14004745b:	(bad)  
   14004745c:	cmp    al,0x2a
   14004745e:	push   rdx
   14004745f:	call   FWORD PTR [rsi]
   140047461:	and    BYTE PTR [rcx-0x38c8d901],dl
   140047467:	jmp    FWORD PTR [rsp+rdx*4]
   14004746a:	jmp    0x12cd9a56e
   14004746f:	jmp    FWORD PTR [rsi]
   140047471:	mov    bh,0xeb
   140047473:	jmp    FWORD PTR [rax]
   140047475:	pop    rsp
   140047476:	(bad)  
   140047478:	and    al,0x28
   14004747a:	mov    bl,0xff
   14004747c:	test   DWORD PTR [rcx+0x30],edx
   14004747f:	push   QWORD PTR [rbx-0x4c00ff99]
   140047485:	addr32 add bh,bh
   140047488:	mov    bl,0x67
   14004748a:	add    bh,bh
   14004748c:	mov    dl,0x66
   14004748e:	add    bh,bh
   140047490:	mov    cl,0x66
   140047492:	add    bh,bh
   140047494:	mov    al,0x65
   140047496:	add    bh,bh
   140047498:	scas   eax,DWORD PTR es:[rdi]
   140047499:	fs add bh,bh
   14004749c:	scas   al,BYTE PTR es:[rdi]
   14004749d:	fs add edi,edi
   1400474a0:	lods   eax,DWORD PTR ds:[rsi]
   1400474a1:	movsxd eax,DWORD PTR [rcx]
   1400474a3:	jmp    FWORD PTR [rbx+riz*2+0x62abff01]
   1400474aa:	add    edi,edi
   1400474ac:	stos   BYTE PTR es:[rdi],al
   1400474ad:	(bad)  
   1400474ae:	add    edi,edi
   1400474b0:	test   al,0x61
   1400474b2:	add    edi,edi
   1400474b4:	test   al,0x60
   1400474b6:	add    edi,edi
   1400474b8:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400474b9:	pop    rdi
   1400474ba:	add    edi,edi
   1400474bc:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400474bd:	pop    rdi
   1400474be:	add    bh,bh
   1400474c0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400474c1:	pop    rsi
   1400474c2:	add    bh,bh
   1400474c4:	movabs ds:0xa1ff025da2ff025e,eax
   1400474cd:	pop    rsp
   1400474ce:	add    bh,bh
   1400474d0:	movabs al,ds:0x9eff025b9fff025c
   1400474d9:	pop    rdx
   1400474da:	add    bh,bh
   1400474dc:	popf   
   1400474dd:	pop    rdx
   1400474de:	add    edi,edi
   1400474e0:	pushf  
   1400474e1:	pop    rcx
   1400474e2:	add    edi,edi
   1400474e4:	fwait
   1400474e5:	pop    rcx
   1400474e6:	add    edi,edi
   1400474e8:	(bad)  
   1400474e9:	pop    rax
   1400474ea:	add    edi,edi
   1400474ec:	cdq    
   1400474ed:	push   rdi
   1400474ee:	add    edi,edi
   1400474f0:	cwde   
   1400474f1:	push   rdi
   1400474f2:	add    edi,edi
   1400474f4:	xchg   edi,eax
   1400474f5:	push   rsi
   1400474f6:	add    edi,edi
   1400474f8:	xchg   ebp,eax
   1400474f9:	push   rbp
   1400474fa:	add    edi,edi
   1400474fc:	xchg   ebp,eax
   1400474fd:	push   rbp
   1400474fe:	add    al,0xff
   140047500:	xchg   ebx,eax
   140047501:	push   rsp
   140047502:	add    al,0xff
   140047504:	xchg   edx,eax
   140047505:	push   rsp
   140047506:	add    al,0xff
   140047508:	xchg   ecx,eax
   140047509:	push   rbx
   14004750a:	add    al,0xff
   14004750c:	nop
   14004750d:	push   rdx
   14004750e:	add    al,0xff
   140047510:	(bad)  
   140047511:	push   rdx
   140047512:	add    al,0xff
   140047514:	mov    ss,WORD PTR [rcx+0x4]
   140047517:	out    dx,eax
   140047518:	lea    edx,[rax+0x4]
   14004751b:	adc    BYTE PTR [rax],al
	...
   140047545:	add    BYTE PTR [rax],al
   140047547:	add    BYTE PTR [rbx-0x4ccfff99],dh
   14004754d:	addr32 add bh,ch
   140047550:	mov    bl,0x67
   140047552:	add    bh,bh
   140047554:	mov    dl,0x6c
   140047556:	or     edi,edi
   140047558:	mov    dh,0x7a
   14004755a:	sbb    bh,bh
   14004755c:	adc    BYTE PTR [rdi+0x38],0xff
   140047560:	sbb    al,0x1c
   140047562:	cmp    bh,0x25
   140047565:	xor    BYTE PTR [rsi-0x1763d201],bh
   14004756b:	push   QWORD PTR [rcx]
   14004756d:	loopne 0x14004755b
   14004756f:	jmp    FWORD PTR [rsi]
   140047571:	mov    edx,0x4e27ffec
   140047576:	xlat   BYTE PTR ds:[rbx]
   140047577:	jmp    FWORD PTR [rbx]
   140047579:	sub    BYTE PTR [rbp+0x67b3ff],bl
   14004757f:	push   QWORD PTR [rbx-0x4c00ff99]
   140047585:	addr32 add bh,bh
   140047588:	mov    bl,0x67
   14004758a:	add    bh,bh
   14004758c:	mov    bl,0x67
   14004758e:	add    bh,bh
   140047590:	mov    dl,0x66
   140047592:	add    bh,bh
   140047594:	mov    cl,0x66
   140047596:	add    bh,bh
   140047598:	mov    al,0x65
   14004759a:	add    bh,bh
   14004759c:	scas   eax,DWORD PTR es:[rdi]
   14004759d:	fs add bh,bh
   1400475a0:	scas   al,BYTE PTR es:[rdi]
   1400475a1:	fs add edi,edi
   1400475a4:	lods   eax,DWORD PTR ds:[rsi]
   1400475a5:	movsxd eax,DWORD PTR [rcx]
   1400475a7:	jmp    FWORD PTR [rbx+riz*2+0x62abff01]
   1400475ae:	add    edi,edi
   1400475b0:	stos   BYTE PTR es:[rdi],al
   1400475b1:	(bad)  
   1400475b2:	add    edi,edi
   1400475b4:	test   al,0x61
   1400475b6:	add    edi,edi
   1400475b8:	test   al,0x60
   1400475ba:	add    edi,edi
   1400475bc:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400475bd:	pop    rdi
   1400475be:	add    edi,edi
   1400475c0:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400475c1:	pop    rdi
   1400475c2:	add    bh,bh
   1400475c4:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400475c5:	pop    rsi
   1400475c6:	add    bh,bh
   1400475c8:	movabs ds:0xa1ff025da2ff025e,eax
   1400475d1:	pop    rsp
   1400475d2:	add    bh,bh
   1400475d4:	movabs al,ds:0x9eff025b9fff025c
   1400475dd:	pop    rdx
   1400475de:	add    bh,bh
   1400475e0:	popf   
   1400475e1:	pop    rdx
   1400475e2:	add    edi,edi
   1400475e4:	pushf  
   1400475e5:	pop    rcx
   1400475e6:	add    edi,edi
   1400475e8:	fwait
   1400475e9:	pop    rcx
   1400475ea:	add    edi,edi
   1400475ec:	(bad)  
   1400475ed:	pop    rax
   1400475ee:	add    edi,edi
   1400475f0:	cdq    
   1400475f1:	push   rdi
   1400475f2:	add    edi,edi
   1400475f4:	cwde   
   1400475f5:	push   rdi
   1400475f6:	add    edi,edi
   1400475f8:	xchg   edi,eax
   1400475f9:	push   rsi
   1400475fa:	add    edi,edi
   1400475fc:	xchg   ebp,eax
   1400475fd:	push   rbp
   1400475fe:	add    edi,edi
   140047600:	xchg   ebp,eax
   140047601:	push   rbp
   140047602:	add    al,0xff
   140047604:	xchg   ebx,eax
   140047605:	push   rsp
   140047606:	add    al,0xff
   140047608:	xchg   edx,eax
   140047609:	push   rsp
   14004760a:	add    al,0xff
   14004760c:	xchg   ecx,eax
   14004760d:	push   rbx
   14004760e:	add    al,0xff
   140047610:	nop
   140047611:	push   rdx
   140047612:	add    al,0xef
   140047614:	(bad)  
   140047615:	push   rdx
   140047616:	add    al,0x30
	...
   14004764c:	mov    bl,0x67
   14004764e:	add    BYTE PTR [rax],dl
   140047650:	mov    bl,0x67
   140047652:	add    BYTE PTR [rdi-0xff984d],ch
   140047658:	mov    ch,0x6f
   14004765a:	or     edi,edi
   14004765c:	mov    dh,0x7b
   14004765e:	and    bh,bh
   140047660:	sub    ah,BYTE PTR [rcx]
   140047662:	jmp    QWORD PTR [edx+ebp*1]
   140047666:	mov    bl,0xff
   140047668:	sub    eax,0x31ffe79e
   14004766d:	loope  0x14004765b
   14004766f:	jmp    FWORD PTR [rsi]
   140047671:	mov    bh,0xeb
   140047673:	jmp    QWORD PTR [rsi]
   140047675:	cmp    al,0xca
   140047677:	jmp    QWORD PTR [rcx+0x41]
   14004767a:	pop    rdx
   14004767b:	push   QWORD PTR [rbx-0x4c00ff99]
   140047681:	addr32 add bh,bh
   140047684:	mov    bl,0x67
   140047686:	add    bh,bh
   140047688:	mov    bl,0x67
   14004768a:	add    bh,bh
   14004768c:	mov    bl,0x67
   14004768e:	add    bh,bh
   140047690:	mov    bl,0x67
   140047692:	add    bh,bh
   140047694:	mov    dl,0x66
   140047696:	add    bh,bh
   140047698:	mov    cl,0x66
   14004769a:	add    bh,bh
   14004769c:	mov    al,0x65
   14004769e:	add    bh,bh
   1400476a0:	scas   eax,DWORD PTR es:[rdi]
   1400476a1:	fs add bh,bh
   1400476a4:	scas   al,BYTE PTR es:[rdi]
   1400476a5:	fs add edi,edi
   1400476a8:	lods   eax,DWORD PTR ds:[rsi]
   1400476a9:	movsxd eax,DWORD PTR [rcx]
   1400476ab:	jmp    FWORD PTR [rbx+riz*2+0x62abff01]
   1400476b2:	add    edi,edi
   1400476b4:	stos   BYTE PTR es:[rdi],al
   1400476b5:	(bad)  
   1400476b6:	add    edi,edi
   1400476b8:	test   al,0x61
   1400476ba:	add    edi,edi
   1400476bc:	test   al,0x60
   1400476be:	add    edi,edi
   1400476c0:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400476c1:	pop    rdi
   1400476c2:	add    edi,edi
   1400476c4:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400476c5:	pop    rdi
   1400476c6:	add    bh,bh
   1400476c8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400476c9:	pop    rsi
   1400476ca:	add    bh,bh
   1400476cc:	movabs ds:0xa1ff025da2ff025e,eax
   1400476d5:	pop    rsp
   1400476d6:	add    bh,bh
   1400476d8:	movabs al,ds:0x9eff025b9fff025c
   1400476e1:	pop    rdx
   1400476e2:	add    bh,bh
   1400476e4:	popf   
   1400476e5:	pop    rdx
   1400476e6:	add    edi,edi
   1400476e8:	pushf  
   1400476e9:	pop    rcx
   1400476ea:	add    edi,edi
   1400476ec:	fwait
   1400476ed:	pop    rcx
   1400476ee:	add    edi,edi
   1400476f0:	(bad)  
   1400476f1:	pop    rax
   1400476f2:	add    edi,edi
   1400476f4:	cdq    
   1400476f5:	push   rdi
   1400476f6:	add    edi,edi
   1400476f8:	cwde   
   1400476f9:	push   rdi
   1400476fa:	add    edi,edi
   1400476fc:	xchg   edi,eax
   1400476fd:	push   rsi
   1400476fe:	add    edi,edi
   140047700:	xchg   ebp,eax
   140047701:	push   rbp
   140047702:	add    edi,edi
   140047704:	xchg   ebp,eax
   140047705:	push   rbp
   140047706:	add    al,0xff
   140047708:	xchg   ebx,eax
   140047709:	push   rsp
   14004770a:	add    al,0xff
   14004770c:	xchg   edx,eax
   14004770d:	push   rsp
   14004770e:	add    al,0xaf
   140047710:	xchg   ecx,eax
   140047711:	push   rbx
   140047712:	add    al,0x10
	...
   140047754:	mov    bl,0x67
   140047756:	add    BYTE PTR [rax-0x4d],al
   140047759:	add    BYTE PTR [edi-0x10ed8c4c],bl
   140047760:	data16 rex.RX
   140047762:	rex.RX jmp QWORD PTR [rcx]
   140047765:	and    eax,0x9a2dffa6
   14004776a:	in     eax,0xff
   14004776c:	xor    ecx,esp
   14004776e:	in     al,dx
   14004776f:	jmp    FWORD PTR [rip+0x24ffe9a6]        # 0x16504611b
   140047775:	sub    eax,0x5a97ffb8
   14004777a:	sbb    al,0xff
   14004777c:	mov    bl,0x67
   14004777e:	add    bh,bh
   140047780:	mov    bl,0x67
   140047782:	add    bh,bh
   140047784:	mov    bl,0x67
   140047786:	add    bh,bh
   140047788:	mov    bl,0x67
   14004778a:	add    bh,bh
   14004778c:	mov    bl,0x67
   14004778e:	add    bh,bh
   140047790:	mov    bl,0x67
   140047792:	add    bh,bh
   140047794:	mov    bl,0x67
   140047796:	add    bh,bh
   140047798:	mov    dl,0x66
   14004779a:	add    bh,bh
   14004779c:	mov    cl,0x66
   14004779e:	add    bh,bh
   1400477a0:	mov    al,0x65
   1400477a2:	add    bh,bh
   1400477a4:	scas   eax,DWORD PTR es:[rdi]
   1400477a5:	fs add bh,bh
   1400477a8:	scas   al,BYTE PTR es:[rdi]
   1400477a9:	fs add edi,edi
   1400477ac:	lods   eax,DWORD PTR ds:[rsi]
   1400477ad:	movsxd eax,DWORD PTR [rcx]
   1400477af:	jmp    FWORD PTR [rbx+riz*2+0x62abff01]
   1400477b6:	add    edi,edi
   1400477b8:	stos   BYTE PTR es:[rdi],al
   1400477b9:	(bad)  
   1400477ba:	add    edi,edi
   1400477bc:	test   al,0x61
   1400477be:	add    edi,edi
   1400477c0:	test   al,0x60
   1400477c2:	add    edi,edi
   1400477c4:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400477c5:	pop    rdi
   1400477c6:	add    edi,edi
   1400477c8:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400477c9:	pop    rdi
   1400477ca:	add    bh,bh
   1400477cc:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400477cd:	pop    rsi
   1400477ce:	add    bh,bh
   1400477d0:	movabs ds:0xa1ff025da2ff025e,eax
   1400477d9:	pop    rsp
   1400477da:	add    bh,bh
   1400477dc:	movabs al,ds:0x9eff025b9fff025c
   1400477e5:	pop    rdx
   1400477e6:	add    bh,bh
   1400477e8:	popf   
   1400477e9:	pop    rdx
   1400477ea:	add    edi,edi
   1400477ec:	pushf  
   1400477ed:	pop    rcx
   1400477ee:	add    edi,edi
   1400477f0:	fwait
   1400477f1:	pop    rcx
   1400477f2:	add    edi,edi
   1400477f4:	(bad)  
   1400477f5:	pop    rax
   1400477f6:	add    edi,edi
   1400477f8:	cdq    
   1400477f9:	push   rdi
   1400477fa:	add    edi,edi
   1400477fc:	cwde   
   1400477fd:	push   rdi
   1400477fe:	add    edi,edi
   140047800:	xchg   edi,eax
   140047801:	push   rsi
   140047802:	add    ebp,edi
   140047804:	xchg   ebp,eax
   140047805:	push   rbp
   140047806:	add    ebx,DWORD PTR [rdi+0x40045595]
	...
   14004785c:	mov    eax,0x9b10197b
   140047861:	addr32 sub al,0xef
   140047864:	and    BYTE PTR [rdi],bl
   140047866:	mov    edi,?
   140047868:	sub    eax,DWORD PTR [rsi-0x1ece0022]
   14004786e:	in     al,dx
   14004786f:	jmp    FWORD PTR [rbx]
   140047871:	test   cl,ah
   140047873:	jmp    QWORD PTR [rdx]
   140047875:	and    eax,0xbfab
	...
   14004795e:	add    BYTE PTR [rax],al
   140047960:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140047961:	ins    BYTE PTR es:[rdi],dx
   140047962:	and    DWORD PTR [rax+0x49],esi
   140047965:	ss movsxd edi,edi
   140047968:	sub    DWORD PTR [rbp-0x2f],esp
   14004796b:	push   QWORD PTR [rcx]
   14004796d:	fsub   st(4),st
   14004796f:	jmp    FWORD PTR [rax]
   140047971:	push   rcx
   140047972:	sar    bh,1
   140047974:	and    BYTE PTR [rbx],ah
   140047976:	movabs al,ds:0x40
	...
   140047a63:	add    BYTE PTR [rdx+0x23cf3b58],al
   140047a69:	xor    ch,BYTE PTR [rdi+rdi*8-0x1b77d5]
   140047a70:	and    al,0x2e
   140047a72:	mov    dh,0xbf
	...
   140047b64:	ret    0x3086
   140047b67:	and    BYTE PTR [rax],dh
   140047b69:	and    eax,0x2421bf68
   140047b6e:	movabs ds:0x10a72422bf,al
	...
   140048e1f:	add    BYTE PTR [rax],ch
   140048e21:	add    BYTE PTR [rax],al
   140048e23:	add    BYTE PTR [rax+0x0],al
   140048e29:	add    DWORD PTR [rax],eax
   140048e2b:	add    BYTE PTR [rcx],al
   140048e2d:	add    BYTE PTR [rax],ah
   140048e2f:	add    BYTE PTR [rax],al
   140048e31:	add    BYTE PTR [rax],al
   140048e33:	add    BYTE PTR [rax],al
   140048e35:	rex add DWORD PTR [rax],eax
	...
   1400496bc:	mov    BYTE PTR [rsi+0x5],cl
   1400496bf:	mov    BYTE PTR [rbp+0x5],cl
   1400496c3:	pop    QWORD PTR [rdi-0x7840fab3]
   1400496c9:	rex.WR add rax,0x54c86ff
   1400496cf:	inc    DWORD PTR [rbp-0x7a00fab4]
   1400496d5:	rex.WR add rax,0x54b84ff
   1400496db:	inc    DWORD PTR [rbx+rcx*2+0x4a83ff06]
   1400496e2:	(bad)  
   1400496e3:	inc    DWORD PTR [rbx-0x7d00f9b6]
   1400496e9:	rex.WX (bad) 
   1400496eb:	inc    DWORD PTR [rdx-0x7e00f9b6]
   1400496f1:	rex.WB (bad) 
   1400496f3:	inc    DWORD PTR [rcx-0x7f00f9b7]
   1400496f9:	rex.WB (bad) 
   1400496fb:	inc    DWORD PTR [rax+0x7fff0648]
   140049701:	rex.W (bad) 
   140049703:	(bad)  
   140049704:	jg     0x14004974e
   140049706:	(bad)  
   140049707:	(bad)  
   140049708:	jle    0x140049751
   14004970a:	(bad)  
   14004970b:	(bad)  
   14004970c:	jle    0x140049755
   14004970e:	(bad)  
   14004970f:	(bad)  
   140049710:	jge    0x140049759
   140049712:	(bad)  
   140049713:	(bad)  
   140049714:	jge    0x14004975d
   140049716:	(bad)  
   140049717:	(bad)  
   140049718:	jl     0x140049760
   14004971a:	(bad)  
   14004971b:	(bad)  
   14004971c:	jnp    0x140049764
   14004971e:	(bad)  
   14004971f:	(bad)  
   140049720:	jnp    0x140049768
   140049722:	(bad)  
   140049723:	(bad)  
   140049724:	jnp    0x14004976b
   140049726:	(bad)  
   140049727:	(bad)  
   140049728:	jp     0x14004976f
   14004972a:	(bad)  
   14004972b:	(bad)  
   14004972c:	jns    0x140049773
   14004972e:	(bad)  
   14004972f:	(bad)  
   140049730:	jns    0x140049776
   140049732:	(bad)  
   140049733:	(bad)  
   140049734:	js     0x14004977a
   140049736:	(bad)  
   140049737:	(bad)  
   140049738:	js     0x14004977e
   14004973a:	(bad)  
   14004973b:	push   QWORD PTR [rdi+0x43]
   14004973e:	(bad)  
   14004973f:	push   QWORD PTR [rdi+0x43]
   140049742:	(bad)  
   140049743:	push   QWORD PTR [rsi+0x43]
   140049746:	(bad)  
   140049747:	push   QWORD PTR [rsi+0x42]
   14004974a:	(bad)  
   14004974b:	push   QWORD PTR [rbp+0x42]
   14004974e:	(bad)  
   14004974f:	push   QWORD PTR [rbp+0x42]
   140049752:	(bad)  
   140049753:	push   QWORD PTR [rcx+rax*2+0x7]
   140049757:	push   QWORD PTR [rcx+rax*2+0x7]
   14004975b:	push   QWORD PTR [rbx+0x41]
   14004975e:	(bad)  
   14004975f:	push   QWORD PTR [rbx+0x41]
   140049762:	or     bh,bh
   140049764:	jb     0x1400497a6
   140049766:	or     bh,bh
   140049768:	jno    0x1400497aa
   14004976a:	or     bh,bh
   14004976c:	jno    0x1400497ad
   14004976e:	or     bh,bh
   140049770:	jno    0x1400497b1
   140049772:	or     bh,bh
   140049774:	jo     0x1400497b5
   140049776:	or     bh,bh
   140049778:	outs   dx,DWORD PTR ds:[rsi]
   140049779:	(bad)  
   14004977a:	or     bh,bh
   14004977c:	outs   dx,DWORD PTR ds:[rsi]
   14004977d:	ds or  bh,bh
   140049780:	outs   dx,BYTE PTR ds:[rsi]
   140049781:	ds or  bh,bh
   140049784:	outs   dx,BYTE PTR ds:[rsi]
   140049785:	ds or  bh,bh
   140049788:	ins    DWORD PTR es:[rdi],dx
   140049789:	cmp    eax,0x3d6dff08
   14004978e:	or     bh,bh
   140049790:	ins    BYTE PTR es:[rdi],dx
   140049791:	cmp    eax,0x3c6cff08
   140049796:	or     bh,bh
   140049798:	imul   edi,DWORD PTR [rax+rcx*1],0xffffffff
   14004979c:	imul   edi,DWORD PTR [rax+rcx*1],0xffffffff
   1400497a0:	push   0x3c
   1400497a2:	or     edi,edi
   1400497a4:	push   0x3b
   1400497a6:	or     edi,edi
   1400497a8:	imul   edi,DWORD PTR [rbx],0x3b69ff09
   1400497ae:	or     edi,edi
   1400497b0:	push   0x68ff093a
   1400497b5:	cmp    cl,BYTE PTR [rcx]
   1400497b7:	jmp    QWORD PTR [rdi+0x3a]
   1400497ba:	or     edi,edi
   1400497bc:	cmp    DWORD PTR [ecx],ecx
   1400497bf:	jmp    QWORD PTR [rsi+0x39]
   1400497c2:	or     edi,edi
   1400497c4:	cmp    WORD PTR [rcx],cx
   1400497c7:	jmp    QWORD PTR [rsi+0x39]
   1400497ca:	or     edi,edi
   1400497cc:	cmp    WORD PTR [rcx],cx
   1400497cf:	jmp    QWORD PTR [rsi+0x39]
   1400497d2:	or     edi,edi
   1400497d4:	cmp    WORD PTR [rcx],cx
   1400497d7:	jmp    QWORD PTR [rsi+0x39]
   1400497da:	or     edi,edi
   1400497dc:	cmp    WORD PTR [rcx],cx
   1400497df:	jmp    QWORD PTR [rsi+0x39]
   1400497e2:	or     edi,edi
   1400497e4:	cmp    WORD PTR [rcx],cx
   1400497e7:	jmp    QWORD PTR [rsi+0x39]
   1400497ea:	or     edi,edi
   1400497ec:	cmp    WORD PTR [rcx],cx
   1400497ef:	jmp    QWORD PTR [rsi+0x39]
   1400497f2:	or     edi,edi
   1400497f4:	cmp    WORD PTR [rcx],cx
   1400497f7:	jmp    QWORD PTR [rsi+0x39]
   1400497fa:	or     edi,edi
   1400497fc:	cmp    WORD PTR [rcx],cx
   1400497ff:	jmp    QWORD PTR [rsi+0x39]
   140049802:	or     edi,edi
   140049804:	cmp    WORD PTR [rcx],cx
   140049807:	jmp    QWORD PTR [rsi+0x39]
   14004980a:	or     DWORD PTR [rdi-0x70f6c69a],edi
   140049810:	cmp    WORD PTR [rcx],cx
   140049813:	add    BYTE PTR [rax],al
	...
   1400498ae:	add    BYTE PTR [rax],al
   1400498b0:	mov    cl,BYTE PTR [rdi+0x5]
   1400498b3:	adc    BYTE PTR [rdx-0x767ffab2],cl
   1400498b9:	rex.WRX add rax,0x54e89df
   1400498bf:	dec    DWORD PTR [rax-0x7700fab3]
   1400498c5:	rex.WRB add rax,0x54d87ff
   1400498cb:	inc    DWORD PTR [rdi-0x7900fab4]
   1400498d1:	rex.WR add rax,0x54c85ff
   1400498d7:	inc    DWORD PTR [rbp-0x7b00fab4]
   1400498dd:	rex.WXB add rax,0x64b84ff
   1400498e3:	inc    DWORD PTR [rbx-0x7c00f9b6]
   1400498e9:	rex.WX (bad) 
   1400498eb:	inc    DWORD PTR [rdx-0x7d00f9b6]
   1400498f1:	rex.WX (bad) 
   1400498f3:	inc    DWORD PTR [rcx-0x7e00f9b7]
   1400498f9:	rex.WB (bad) 
   1400498fb:	inc    DWORD PTR [rax-0x7f00f9b7]
   140049901:	rex.W (bad) 
   140049903:	(bad)  
   140049904:	jg     0x14004994e
   140049906:	(bad)  
   140049907:	(bad)  
   140049908:	jg     0x140049952
   14004990a:	(bad)  
   14004990b:	(bad)  
   14004990c:	jle    0x140049955
   14004990e:	(bad)  
   14004990f:	(bad)  
   140049910:	jle    0x140049959
   140049912:	(bad)  
   140049913:	(bad)  
   140049914:	jge    0x14004995d
   140049916:	(bad)  
   140049917:	(bad)  
   140049918:	jge    0x140049961
   14004991a:	(bad)  
   14004991b:	(bad)  
   14004991c:	jl     0x140049964
   14004991e:	(bad)  
   14004991f:	(bad)  
   140049920:	jnp    0x140049968
   140049922:	(bad)  
   140049923:	(bad)  
   140049924:	jnp    0x14004996c
   140049926:	(bad)  
   140049927:	(bad)  
   140049928:	jnp    0x14004996f
   14004992a:	(bad)  
   14004992b:	(bad)  
   14004992c:	jp     0x140049973
   14004992e:	(bad)  
   14004992f:	(bad)  
   140049930:	jns    0x140049977
   140049932:	(bad)  
   140049933:	(bad)  
   140049934:	jns    0x14004997a
   140049936:	(bad)  
   140049937:	(bad)  
   140049938:	js     0x14004997e
   14004993a:	(bad)  
   14004993b:	(bad)  
   14004993c:	js     0x140049982
   14004993e:	(bad)  
   14004993f:	push   QWORD PTR [rdi+0x43]
   140049942:	(bad)  
   140049943:	push   QWORD PTR [rdi+0x43]
   140049946:	(bad)  
   140049947:	push   QWORD PTR [rsi+0x43]
   14004994a:	(bad)  
   14004994b:	push   QWORD PTR [rsi+0x42]
   14004994e:	(bad)  
   14004994f:	push   QWORD PTR [rbp+0x42]
   140049952:	(bad)  
   140049953:	push   QWORD PTR [rbp+0x42]
   140049956:	(bad)  
   140049957:	push   QWORD PTR [rcx+rax*2+0x7]
   14004995b:	push   QWORD PTR [rcx+rax*2+0x7]
   14004995f:	push   QWORD PTR [rbx+0x41]
   140049962:	(bad)  
   140049963:	push   QWORD PTR [rbx+0x41]
   140049966:	or     bh,bh
   140049968:	jb     0x1400499aa
   14004996a:	or     bh,bh
   14004996c:	jno    0x1400499ae
   14004996e:	or     bh,bh
   140049970:	jno    0x1400499b1
   140049972:	or     bh,bh
   140049974:	jno    0x1400499b5
   140049976:	or     bh,bh
   140049978:	jo     0x1400499b9
   14004997a:	or     bh,bh
   14004997c:	outs   dx,DWORD PTR ds:[rsi]
   14004997d:	(bad)  
   14004997e:	or     bh,bh
   140049980:	outs   dx,DWORD PTR ds:[rsi]
   140049981:	ds or  bh,bh
   140049984:	outs   dx,BYTE PTR ds:[rsi]
   140049985:	ds or  bh,bh
   140049988:	outs   dx,BYTE PTR ds:[rsi]
   140049989:	ds or  bh,bh
   14004998c:	ins    DWORD PTR es:[rdi],dx
   14004998d:	cmp    eax,0x3d6dff08
   140049992:	or     bh,bh
   140049994:	ins    BYTE PTR es:[rdi],dx
   140049995:	cmp    eax,0x3c6cff08
   14004999a:	or     bh,bh
   14004999c:	imul   edi,DWORD PTR [rax+rcx*1],0xffffffff
   1400499a0:	imul   edi,DWORD PTR [rax+rcx*1],0xffffffff
   1400499a4:	push   0x3c
   1400499a6:	or     edi,edi
   1400499a8:	push   0x3b
   1400499aa:	or     edi,edi
   1400499ac:	imul   edi,DWORD PTR [rbx],0x3b69ff09
   1400499b2:	or     edi,edi
   1400499b4:	push   0x68ff093a
   1400499b9:	cmp    cl,BYTE PTR [rcx]
   1400499bb:	jmp    QWORD PTR [rdi+0x3a]
   1400499be:	or     edi,edi
   1400499c0:	cmp    DWORD PTR [ecx],ecx
   1400499c3:	jmp    QWORD PTR [rsi+0x39]
   1400499c6:	or     edi,edi
   1400499c8:	cmp    WORD PTR [rcx],cx
   1400499cb:	jmp    QWORD PTR [rsi+0x39]
   1400499ce:	or     edi,edi
   1400499d0:	cmp    WORD PTR [rcx],cx
   1400499d3:	jmp    QWORD PTR [rsi+0x39]
   1400499d6:	or     edi,edi
   1400499d8:	cmp    WORD PTR [rcx],cx
   1400499db:	jmp    QWORD PTR [rsi+0x39]
   1400499de:	or     edi,edi
   1400499e0:	cmp    WORD PTR [rcx],cx
   1400499e3:	jmp    QWORD PTR [rsi+0x39]
   1400499e6:	or     edi,edi
   1400499e8:	cmp    WORD PTR [rcx],cx
   1400499eb:	jmp    QWORD PTR [rsi+0x39]
   1400499ee:	or     edi,edi
   1400499f0:	cmp    WORD PTR [rcx],cx
   1400499f3:	jmp    QWORD PTR [rsi+0x39]
   1400499f6:	or     edi,edi
   1400499f8:	cmp    WORD PTR [rcx],cx
   1400499fb:	jmp    QWORD PTR [rsi+0x39]
   1400499fe:	or     edi,edi
   140049a00:	cmp    WORD PTR [rcx],cx
   140049a03:	jmp    QWORD PTR [rsi+0x39]
   140049a06:	or     edi,edi
   140049a08:	cmp    WORD PTR [rcx],cx
   140049a0b:	jmp    QWORD PTR [rsi+0x39]
   140049a0e:	or     edi,edi
   140049a10:	cmp    WORD PTR [rcx],cx
   140049a13:	jmp    QWORD PTR [rsi+0x39]
   140049a16:	or     edi,ebx
   140049a18:	cmp    WORD PTR [rcx],cx
   140049a1b:	and    BYTE PTR [rsi+0x39],0x9
   140049a1f:	adc    BYTE PTR [rax],al
	...
   140049aa9:	add    BYTE PTR [rax],al
   140049aab:	add    BYTE PTR [rbx-0x747ffab1],cl
   140049ab1:	rex.WRXB add rax,0x54f8aef
   140049ab7:	dec    DWORD PTR [rdx-0x7600fab2]
   140049abd:	rex.WRX add rax,0x54e89ff
   140049ac3:	dec    DWORD PTR [rax-0x7700fab3]
   140049ac9:	rex.WRB add rax,0x54d87ff
   140049acf:	inc    DWORD PTR [rdi-0x7900fab4]
   140049ad5:	rex.WR add rax,0x54c85ff
   140049adb:	inc    DWORD PTR [rbp-0x7b00fab4]
   140049ae1:	rex.WXB add rax,0x64b84ff
   140049ae7:	inc    DWORD PTR [rbx-0x7c00f9b6]
   140049aed:	rex.WX (bad) 
   140049aef:	inc    DWORD PTR [rdx-0x7d00f9b6]
   140049af5:	rex.WX (bad) 
   140049af7:	inc    DWORD PTR [rcx-0x7e00f9b7]
   140049afd:	rex.WB (bad) 
   140049aff:	inc    DWORD PTR [rax-0x7f00f9b7]
   140049b05:	rex.W (bad) 
   140049b07:	(bad)  
   140049b08:	jg     0x140049b52
   140049b0a:	(bad)  
   140049b0b:	(bad)  
   140049b0c:	jg     0x140049b56
   140049b0e:	(bad)  
   140049b0f:	(bad)  
   140049b10:	jle    0x140049b59
   140049b12:	(bad)  
   140049b13:	(bad)  
   140049b14:	jle    0x140049b5d
   140049b16:	(bad)  
   140049b17:	(bad)  
   140049b18:	jge    0x140049b61
   140049b1a:	(bad)  
   140049b1b:	(bad)  
   140049b1c:	jge    0x140049b65
   140049b1e:	(bad)  
   140049b1f:	(bad)  
   140049b20:	jl     0x140049b68
   140049b22:	(bad)  
   140049b23:	(bad)  
   140049b24:	jnp    0x140049b6c
   140049b26:	(bad)  
   140049b27:	(bad)  
   140049b28:	jnp    0x140049b70
   140049b2a:	(bad)  
   140049b2b:	(bad)  
   140049b2c:	jnp    0x140049b73
   140049b2e:	(bad)  
   140049b2f:	(bad)  
   140049b30:	jp     0x140049b77
   140049b32:	(bad)  
   140049b33:	(bad)  
   140049b34:	jns    0x140049b7b
   140049b36:	(bad)  
   140049b37:	(bad)  
   140049b38:	jns    0x140049b7e
   140049b3a:	(bad)  
   140049b3b:	(bad)  
   140049b3c:	js     0x140049b82
   140049b3e:	(bad)  
   140049b3f:	(bad)  
   140049b40:	js     0x140049b86
   140049b42:	(bad)  
   140049b43:	push   QWORD PTR [rdi+0x43]
   140049b46:	(bad)  
   140049b47:	push   QWORD PTR [rdi+0x43]
   140049b4a:	(bad)  
   140049b4b:	push   QWORD PTR [rsi+0x43]
   140049b4e:	(bad)  
   140049b4f:	push   QWORD PTR [rsi+0x42]
   140049b52:	(bad)  
   140049b53:	push   QWORD PTR [rbp+0x42]
   140049b56:	(bad)  
   140049b57:	push   QWORD PTR [rbp+0x42]
   140049b5a:	(bad)  
   140049b5b:	push   QWORD PTR [rcx+rax*2+0x7]
   140049b5f:	push   QWORD PTR [rcx+rax*2+0x7]
   140049b63:	push   QWORD PTR [rbx+0x41]
   140049b66:	(bad)  
   140049b67:	push   QWORD PTR [rbx+0x41]
   140049b6a:	or     bh,bh
   140049b6c:	jb     0x140049bae
   140049b6e:	or     bh,bh
   140049b70:	jno    0x140049bb2
   140049b72:	or     bh,bh
   140049b74:	jno    0x140049bb5
   140049b76:	or     bh,bh
   140049b78:	jno    0x140049bb9
   140049b7a:	or     bh,bh
   140049b7c:	jo     0x140049bbd
   140049b7e:	or     bh,bh
   140049b80:	outs   dx,DWORD PTR ds:[rsi]
   140049b81:	(bad)  
   140049b82:	or     bh,bh
   140049b84:	outs   dx,DWORD PTR ds:[rsi]
   140049b85:	ds or  bh,bh
   140049b88:	outs   dx,BYTE PTR ds:[rsi]
   140049b89:	ds or  bh,bh
   140049b8c:	outs   dx,BYTE PTR ds:[rsi]
   140049b8d:	ds or  bh,bh
   140049b90:	ins    DWORD PTR es:[rdi],dx
   140049b91:	cmp    eax,0x3d6dff08
   140049b96:	or     bh,bh
   140049b98:	ins    BYTE PTR es:[rdi],dx
   140049b99:	cmp    eax,0x3c6cff08
   140049b9e:	or     bh,bh
   140049ba0:	imul   edi,DWORD PTR [rax+rcx*1],0xffffffff
   140049ba4:	imul   edi,DWORD PTR [rax+rcx*1],0xffffffff
   140049ba8:	push   0x3c
   140049baa:	or     edi,edi
   140049bac:	push   0x3b
   140049bae:	or     edi,edi
   140049bb0:	imul   edi,DWORD PTR [rbx],0x3b69ff09
   140049bb6:	or     edi,edi
   140049bb8:	push   0x68ff093a
   140049bbd:	cmp    cl,BYTE PTR [rcx]
   140049bbf:	jmp    QWORD PTR [rdi+0x3a]
   140049bc2:	or     edi,edi
   140049bc4:	cmp    DWORD PTR [ecx],ecx
   140049bc7:	jmp    QWORD PTR [rsi+0x39]
   140049bca:	or     edi,edi
   140049bcc:	cmp    WORD PTR [rcx],cx
   140049bcf:	jmp    QWORD PTR [rsi+0x39]
   140049bd2:	or     edi,edi
   140049bd4:	cmp    WORD PTR [rcx],cx
   140049bd7:	jmp    QWORD PTR [rsi+0x39]
   140049bda:	or     edi,edi
   140049bdc:	cmp    WORD PTR [rcx],cx
   140049bdf:	jmp    QWORD PTR [rsi+0x39]
   140049be2:	or     edi,edi
   140049be4:	cmp    WORD PTR [rcx],cx
   140049be7:	jmp    QWORD PTR [rsi+0x39]
   140049bea:	or     edi,edi
   140049bec:	cmp    WORD PTR [rcx],cx
   140049bef:	jmp    QWORD PTR [rsi+0x39]
   140049bf2:	or     edi,edi
   140049bf4:	cmp    WORD PTR [rcx],cx
   140049bf7:	jmp    QWORD PTR [rsi+0x39]
   140049bfa:	or     edi,edi
   140049bfc:	cmp    WORD PTR [rcx],cx
   140049bff:	jmp    QWORD PTR [rsi+0x39]
   140049c02:	or     edi,edi
   140049c04:	cmp    WORD PTR [rcx],cx
   140049c07:	jmp    QWORD PTR [rsi+0x39]
   140049c0a:	or     edi,edi
   140049c0c:	cmp    WORD PTR [rcx],cx
   140049c0f:	jmp    QWORD PTR [rsi+0x39]
   140049c12:	or     edi,edi
   140049c14:	cmp    WORD PTR [rcx],cx
   140049c17:	jmp    QWORD PTR [rsi+0x39]
   140049c1a:	or     edi,edi
   140049c1c:	cmp    WORD PTR [rcx],cx
   140049c1f:	out    dx,eax
   140049c20:	cmp    WORD PTR [rcx],cx
   140049c23:	add    BYTE PTR [rax],0x0
	...
   140049ca2:	add    BYTE PTR [rax],al
   140049ca4:	lea    edx,[rax+0x4]
   140049ca7:	xor    BYTE PTR [rax+rdx*2+0x508ccf05],cl
   140049cae:	add    eax,0x54f8bff
   140049cb3:	dec    DWORD PTR [rbx-0x7500fab1]
   140049cb9:	rex.WRXB add rax,0x54e8aff
   140049cbf:	dec    DWORD PTR [rcx-0x7600fab2]
   140049cc5:	rex.WRX add rax,0x54d88ff
   140049ccb:	dec    DWORD PTR [rax-0x7800fab3]
   140049cd1:	rex.WRB add rax,0x54c87ff
   140049cd7:	inc    DWORD PTR [rsi-0x7a00fab4]
   140049cdd:	rex.WR add rax,0x54c85ff
   140049ce3:	inc    DWORD PTR [rbx+rcx*2+0x4b84ff05]
   140049cea:	(bad)  
   140049ceb:	inc    DWORD PTR [rbx-0x7c00f9b6]
   140049cf1:	rex.WX (bad) 
   140049cf3:	inc    DWORD PTR [rdx-0x7d00f9b6]
   140049cf9:	rex.WX (bad) 
   140049cfb:	inc    DWORD PTR [rcx-0x7e00f9b7]
   140049d01:	rex.WB (bad) 
   140049d03:	inc    DWORD PTR [rax-0x7f00f9b7]
   140049d09:	rex.W (bad) 
   140049d0b:	(bad)  
   140049d0c:	jg     0x140049d56
   140049d0e:	(bad)  
   140049d0f:	(bad)  
   140049d10:	jg     0x140049d5a
   140049d12:	(bad)  
   140049d13:	(bad)  
   140049d14:	jle    0x140049d5d
   140049d16:	(bad)  
   140049d17:	(bad)  
   140049d18:	jle    0x140049d61
   140049d1a:	(bad)  
   140049d1b:	(bad)  
   140049d1c:	jge    0x140049d65
   140049d1e:	(bad)  
   140049d1f:	(bad)  
   140049d20:	jge    0x140049d69
   140049d22:	(bad)  
   140049d23:	(bad)  
   140049d24:	jl     0x140049d6c
   140049d26:	(bad)  
   140049d27:	(bad)  
   140049d28:	jnp    0x140049d70
   140049d2a:	(bad)  
   140049d2b:	(bad)  
   140049d2c:	jnp    0x140049d74
   140049d2e:	(bad)  
   140049d2f:	(bad)  
   140049d30:	jnp    0x140049d77
   140049d32:	(bad)  
   140049d33:	(bad)  
   140049d34:	jp     0x140049d7b
   140049d36:	(bad)  
   140049d37:	(bad)  
   140049d38:	jns    0x140049d7f
   140049d3a:	(bad)  
   140049d3b:	(bad)  
   140049d3c:	jns    0x140049d82
   140049d3e:	(bad)  
   140049d3f:	(bad)  
   140049d40:	js     0x140049d86
   140049d42:	(bad)  
   140049d43:	(bad)  
   140049d44:	js     0x140049d8a
   140049d46:	(bad)  
   140049d47:	push   QWORD PTR [rdi+0x43]
   140049d4a:	(bad)  
   140049d4b:	push   QWORD PTR [rdi+0x43]
   140049d4e:	(bad)  
   140049d4f:	push   QWORD PTR [rsi+0x43]
   140049d52:	(bad)  
   140049d53:	push   QWORD PTR [rsi+0x42]
   140049d56:	(bad)  
   140049d57:	push   QWORD PTR [rbp+0x42]
   140049d5a:	(bad)  
   140049d5b:	push   QWORD PTR [rbp+0x42]
   140049d5e:	(bad)  
   140049d5f:	push   QWORD PTR [rcx+rax*2+0x7]
   140049d63:	push   QWORD PTR [rcx+rax*2+0x7]
   140049d67:	push   QWORD PTR [rbx+0x41]
   140049d6a:	(bad)  
   140049d6b:	push   QWORD PTR [rbx+0x41]
   140049d6e:	or     bh,bh
   140049d70:	jb     0x140049db2
   140049d72:	or     bh,bh
   140049d74:	jno    0x140049db6
   140049d76:	or     bh,bh
   140049d78:	jno    0x140049db9
   140049d7a:	or     bh,bh
   140049d7c:	jno    0x140049dbd
   140049d7e:	or     bh,bh
   140049d80:	jo     0x140049dc1
   140049d82:	or     bh,bh
   140049d84:	outs   dx,DWORD PTR ds:[rsi]
   140049d85:	(bad)  
   140049d86:	or     bh,bh
   140049d88:	outs   dx,DWORD PTR ds:[rsi]
   140049d89:	ds or  bh,bh
   140049d8c:	outs   dx,BYTE PTR ds:[rsi]
   140049d8d:	ds or  bh,bh
   140049d90:	outs   dx,BYTE PTR ds:[rsi]
   140049d91:	ds or  bh,bh
   140049d94:	ins    DWORD PTR es:[rdi],dx
   140049d95:	cmp    eax,0x3d6dff08
   140049d9a:	or     bh,bh
   140049d9c:	ins    BYTE PTR es:[rdi],dx
   140049d9d:	cmp    eax,0x3c6cff08
   140049da2:	or     bh,bh
   140049da4:	imul   edi,DWORD PTR [rax+rcx*1],0xffffffff
   140049da8:	imul   edi,DWORD PTR [rax+rcx*1],0xffffffff
   140049dac:	push   0x3c
   140049dae:	or     edi,edi
   140049db0:	push   0x3b
   140049db2:	or     edi,edi
   140049db4:	imul   edi,DWORD PTR [rbx],0x3b69ff09
   140049dba:	or     edi,edi
   140049dbc:	push   0x68ff093a
   140049dc1:	cmp    cl,BYTE PTR [rcx]
   140049dc3:	jmp    QWORD PTR [rdi+0x3a]
   140049dc6:	or     edi,edi
   140049dc8:	cmp    DWORD PTR [ecx],ecx
   140049dcb:	jmp    QWORD PTR [rsi+0x39]
   140049dce:	or     edi,edi
   140049dd0:	cmp    WORD PTR [rcx],cx
   140049dd3:	jmp    QWORD PTR [rsi+0x39]
   140049dd6:	or     edi,edi
   140049dd8:	cmp    WORD PTR [rcx],cx
   140049ddb:	jmp    QWORD PTR [rsi+0x39]
   140049dde:	or     edi,edi
   140049de0:	cmp    WORD PTR [rcx],cx
   140049de3:	jmp    QWORD PTR [rsi+0x39]
   140049de6:	or     edi,edi
   140049de8:	cmp    WORD PTR [rcx],cx
   140049deb:	jmp    QWORD PTR [rsi+0x39]
   140049dee:	or     edi,edi
   140049df0:	cmp    WORD PTR [rcx],cx
   140049df3:	jmp    QWORD PTR [rsi+0x39]
   140049df6:	or     edi,edi
   140049df8:	cmp    WORD PTR [rcx],cx
   140049dfb:	jmp    QWORD PTR [rsi+0x39]
   140049dfe:	or     edi,edi
   140049e00:	cmp    WORD PTR [rcx],cx
   140049e03:	jmp    QWORD PTR [rsi+0x39]
   140049e06:	or     edi,edi
   140049e08:	cmp    WORD PTR [rcx],cx
   140049e0b:	jmp    QWORD PTR [rsi+0x39]
   140049e0e:	or     edi,edi
   140049e10:	cmp    WORD PTR [rcx],cx
   140049e13:	jmp    QWORD PTR [rsi+0x39]
   140049e16:	or     edi,edi
   140049e18:	cmp    WORD PTR [rcx],cx
   140049e1b:	jmp    QWORD PTR [rsi+0x39]
   140049e1e:	or     edi,edi
   140049e20:	cmp    WORD PTR [rcx],cx
   140049e23:	jmp    QWORD PTR [rsi+0x39]
   140049e26:	or     edi,ecx
   140049e28:	cmp    WORD PTR [rcx],cx
   140049e2b:	xor    BYTE PTR [rax],al
	...
   140049e9d:	add    BYTE PTR [rax],al
   140049e9f:	add    BYTE PTR [rsi-0x719ffbaf],cl
   140049ea5:	push   rcx
   140049ea6:	add    al,0xef
   140049ea8:	lea    edx,[rax+0x4]
   140049eab:	dec    DWORD PTR [rax+rdx*2+0x508cff05]
   140049eb2:	add    eax,0x54f8bff
   140049eb7:	dec    DWORD PTR [rbx-0x7500fab1]
   140049ebd:	rex.WRXB add rax,0x54e8aff
   140049ec3:	dec    DWORD PTR [rcx-0x7600fab2]
   140049ec9:	rex.WRX add rax,0x54d88ff
   140049ecf:	dec    DWORD PTR [rax-0x7800fab3]
   140049ed5:	rex.WRB add rax,0x54c87ff
   140049edb:	inc    DWORD PTR [rsi-0x7a00fab4]
   140049ee1:	rex.WR add rax,0x54c85ff
   140049ee7:	inc    DWORD PTR [rbx+rcx*2+0x4b84ff05]
   140049eee:	(bad)  
   140049eef:	inc    DWORD PTR [rbx-0x7c00f9b6]
   140049ef5:	rex.WX (bad) 
   140049ef7:	inc    DWORD PTR [rdx-0x7d00f9b6]
   140049efd:	rex.WX (bad) 
   140049eff:	inc    DWORD PTR [rcx-0x7e00f9b7]
   140049f05:	rex.WB (bad) 
   140049f07:	inc    DWORD PTR [rax-0x7f00f9b7]
   140049f0d:	rex.W (bad) 
   140049f0f:	(bad)  
   140049f10:	jg     0x140049f5a
   140049f12:	(bad)  
   140049f13:	(bad)  
   140049f14:	jg     0x140049f5e
   140049f16:	(bad)  
   140049f17:	(bad)  
   140049f18:	jle    0x140049f61
   140049f1a:	(bad)  
   140049f1b:	(bad)  
   140049f1c:	jle    0x140049f65
   140049f1e:	(bad)  
   140049f1f:	(bad)  
   140049f20:	jge    0x140049f69
   140049f22:	(bad)  
   140049f23:	(bad)  
   140049f24:	jge    0x140049f6d
   140049f26:	(bad)  
   140049f27:	(bad)  
   140049f28:	jl     0x140049f70
   140049f2a:	(bad)  
   140049f2b:	(bad)  
   140049f2c:	jnp    0x140049f74
   140049f2e:	(bad)  
   140049f2f:	(bad)  
   140049f30:	jnp    0x140049f78
   140049f32:	(bad)  
   140049f33:	(bad)  
   140049f34:	jnp    0x140049f7b
   140049f36:	(bad)  
   140049f37:	(bad)  
   140049f38:	jp     0x140049f7f
   140049f3a:	(bad)  
   140049f3b:	(bad)  
   140049f3c:	jns    0x140049f83
   140049f3e:	(bad)  
   140049f3f:	(bad)  
   140049f40:	jns    0x140049f86
   140049f42:	(bad)  
   140049f43:	(bad)  
   140049f44:	js     0x140049f8a
   140049f46:	(bad)  
   140049f47:	(bad)  
   140049f48:	js     0x140049f8e
   140049f4a:	(bad)  
   140049f4b:	push   QWORD PTR [rdi+0x43]
   140049f4e:	(bad)  
   140049f4f:	push   QWORD PTR [rdi+0x43]
   140049f52:	(bad)  
   140049f53:	push   QWORD PTR [rsi+0x43]
   140049f56:	(bad)  
   140049f57:	push   QWORD PTR [rsi+0x42]
   140049f5a:	(bad)  
   140049f5b:	push   QWORD PTR [rbp+0x42]
   140049f5e:	(bad)  
   140049f5f:	push   QWORD PTR [rbp+0x42]
   140049f62:	(bad)  
   140049f63:	push   QWORD PTR [rcx+rax*2+0x7]
   140049f67:	push   QWORD PTR [rcx+rax*2+0x7]
   140049f6b:	push   QWORD PTR [rbx+0x41]
   140049f6e:	(bad)  
   140049f6f:	push   QWORD PTR [rbx+0x41]
   140049f72:	or     bh,bh
   140049f74:	jb     0x140049fb6
   140049f76:	or     bh,bh
   140049f78:	jno    0x140049fba
   140049f7a:	or     bh,bh
   140049f7c:	jno    0x140049fbd
   140049f7e:	or     bh,bh
   140049f80:	jno    0x140049fc1
   140049f82:	or     bh,bh
   140049f84:	jo     0x140049fc5
   140049f86:	or     bh,bh
   140049f88:	outs   dx,DWORD PTR ds:[rsi]
   140049f89:	(bad)  
   140049f8a:	or     bh,bh
   140049f8c:	outs   dx,DWORD PTR ds:[rsi]
   140049f8d:	ds or  bh,bh
   140049f90:	outs   dx,BYTE PTR ds:[rsi]
   140049f91:	ds or  bh,bh
   140049f94:	outs   dx,BYTE PTR ds:[rsi]
   140049f95:	ds or  bh,bh
   140049f98:	ins    DWORD PTR es:[rdi],dx
   140049f99:	cmp    eax,0x3d6dff08
   140049f9e:	or     bh,bh
   140049fa0:	ins    BYTE PTR es:[rdi],dx
   140049fa1:	cmp    eax,0x3c6cff08
   140049fa6:	or     bh,bh
   140049fa8:	imul   edi,DWORD PTR [rax+rcx*1],0xffffffff
   140049fac:	imul   edi,DWORD PTR [rax+rcx*1],0xffffffff
   140049fb0:	push   0x3c
   140049fb2:	or     edi,edi
   140049fb4:	push   0x3b
   140049fb6:	or     edi,edi
   140049fb8:	imul   edi,DWORD PTR [rbx],0x3b69ff09
   140049fbe:	or     edi,edi
   140049fc0:	push   0x68ff093a
   140049fc5:	cmp    cl,BYTE PTR [rcx]
   140049fc7:	jmp    QWORD PTR [rdi+0x3a]
   140049fca:	or     edi,edi
   140049fcc:	cmp    DWORD PTR [ecx],ecx
   140049fcf:	jmp    QWORD PTR [rsi+0x39]
   140049fd2:	or     edi,edi
   140049fd4:	cmp    WORD PTR [rcx],cx
   140049fd7:	jmp    QWORD PTR [rsi+0x39]
   140049fda:	or     edi,edi
   140049fdc:	cmp    WORD PTR [rcx],cx
   140049fdf:	jmp    QWORD PTR [rsi+0x39]
   140049fe2:	or     edi,edi
   140049fe4:	cmp    WORD PTR [rcx],cx
   140049fe7:	jmp    QWORD PTR [rsi+0x39]
   140049fea:	or     edi,edi
   140049fec:	cmp    WORD PTR [rcx],cx
   140049fef:	jmp    QWORD PTR [rsi+0x39]
   140049ff2:	or     edi,edi
   140049ff4:	cmp    WORD PTR [rcx],cx
   140049ff7:	jmp    QWORD PTR [rsi+0x39]
   140049ffa:	or     edi,edi
   140049ffc:	cmp    WORD PTR [rcx],cx
   140049fff:	jmp    QWORD PTR [rsi+0x39]
   14004a002:	or     edi,edi
   14004a004:	cmp    WORD PTR [rcx],cx
   14004a007:	jmp    QWORD PTR [rsi+0x39]
   14004a00a:	or     edi,edi
   14004a00c:	cmp    WORD PTR [rcx],cx
   14004a00f:	jmp    QWORD PTR [rsi+0x39]
   14004a012:	or     edi,edi
   14004a014:	cmp    WORD PTR [rcx],cx
   14004a017:	jmp    QWORD PTR [rsi+0x39]
   14004a01a:	or     edi,edi
   14004a01c:	cmp    WORD PTR [rcx],cx
   14004a01f:	jmp    QWORD PTR [rsi+0x39]
   14004a022:	or     edi,edi
   14004a024:	cmp    WORD PTR [rcx],cx
   14004a027:	jmp    QWORD PTR [rsi+0x39]
   14004a02a:	or     edi,ebp
   14004a02c:	cmp    WORD PTR [rcx],cx
   14004a02f:	(bad)  
	...
   14004a09c:	(bad)  
   14004a09d:	push   rdx
   14004a09e:	add    al,0x60
   14004a0a0:	mov    ss,WORD PTR [rcx+0x4]
   14004a0a3:	dec    DWORD PTR [rsi-0x7100fbaf]
   14004a0a9:	push   rcx
   14004a0aa:	add    al,0xff
   14004a0ac:	lea    edx,[rax+0x4]
   14004a0af:	dec    DWORD PTR [rax+rdx*2+0x508cff05]
   14004a0b6:	add    eax,0x54f8bff
   14004a0bb:	dec    DWORD PTR [rbx-0x7500fab1]
   14004a0c1:	rex.WRXB add rax,0x54e8aff
   14004a0c7:	dec    DWORD PTR [rcx-0x7600fab2]
   14004a0cd:	rex.WRX add rax,0x54d88ff
   14004a0d3:	dec    DWORD PTR [rax-0x7800fab3]
   14004a0d9:	rex.WRB add rax,0x54c87ff
   14004a0df:	inc    DWORD PTR [rsi-0x7a00fab4]
   14004a0e5:	rex.WR add rax,0x54c85ff
   14004a0eb:	inc    DWORD PTR [rbx+rcx*2+0x4b84ff05]
   14004a0f2:	(bad)  
   14004a0f3:	inc    DWORD PTR [rbx-0x7c00f9b6]
   14004a0f9:	rex.WX (bad) 
   14004a0fb:	inc    DWORD PTR [rdx-0x7d00f9b6]
   14004a101:	rex.WX (bad) 
   14004a103:	inc    DWORD PTR [rcx-0x7e00f9b7]
   14004a109:	rex.WB (bad) 
   14004a10b:	inc    DWORD PTR [rax-0x7f00f9b7]
   14004a111:	rex.W (bad) 
   14004a113:	(bad)  
   14004a114:	jg     0x14004a15e
   14004a116:	(bad)  
   14004a117:	(bad)  
   14004a118:	jg     0x14004a162
   14004a11a:	(bad)  
   14004a11b:	(bad)  
   14004a11c:	jle    0x14004a165
   14004a11e:	(bad)  
   14004a11f:	(bad)  
   14004a120:	jle    0x14004a169
   14004a122:	(bad)  
   14004a123:	(bad)  
   14004a124:	jge    0x14004a16d
   14004a126:	(bad)  
   14004a127:	(bad)  
   14004a128:	jge    0x14004a171
   14004a12a:	(bad)  
   14004a12b:	(bad)  
   14004a12c:	jl     0x14004a174
   14004a12e:	(bad)  
   14004a12f:	(bad)  
   14004a130:	jnp    0x14004a178
   14004a132:	(bad)  
   14004a133:	(bad)  
   14004a134:	jnp    0x14004a17c
   14004a136:	(bad)  
   14004a137:	(bad)  
   14004a138:	jnp    0x14004a17f
   14004a13a:	(bad)  
   14004a13b:	(bad)  
   14004a13c:	jp     0x14004a183
   14004a13e:	(bad)  
   14004a13f:	(bad)  
   14004a140:	jns    0x14004a187
   14004a142:	(bad)  
   14004a143:	(bad)  
   14004a144:	jns    0x14004a18a
   14004a146:	(bad)  
   14004a147:	(bad)  
   14004a148:	js     0x14004a18e
   14004a14a:	(bad)  
   14004a14b:	(bad)  
   14004a14c:	js     0x14004a192
   14004a14e:	(bad)  
   14004a14f:	push   QWORD PTR [rdi+0x43]
   14004a152:	(bad)  
   14004a153:	push   QWORD PTR [rdi+0x43]
   14004a156:	(bad)  
   14004a157:	push   QWORD PTR [rsi+0x43]
   14004a15a:	(bad)  
   14004a15b:	push   QWORD PTR [rsi+0x42]
   14004a15e:	(bad)  
   14004a15f:	push   QWORD PTR [rbp+0x42]
   14004a162:	(bad)  
   14004a163:	push   QWORD PTR [rbp+0x42]
   14004a166:	(bad)  
   14004a167:	push   QWORD PTR [rcx+rax*2+0x7]
   14004a16b:	push   QWORD PTR [rcx+rax*2+0x7]
   14004a16f:	push   QWORD PTR [rbx+0x41]
   14004a172:	(bad)  
   14004a173:	push   QWORD PTR [rbx+0x41]
   14004a176:	or     bh,bh
   14004a178:	jb     0x14004a1ba
   14004a17a:	or     bh,bh
   14004a17c:	jno    0x14004a1be
   14004a17e:	or     bh,bh
   14004a180:	jno    0x14004a1c1
   14004a182:	or     bh,bh
   14004a184:	jno    0x14004a1c5
   14004a186:	or     bh,bh
   14004a188:	jo     0x14004a1c9
   14004a18a:	or     bh,bh
   14004a18c:	outs   dx,DWORD PTR ds:[rsi]
   14004a18d:	(bad)  
   14004a18e:	or     bh,bh
   14004a190:	outs   dx,DWORD PTR ds:[rsi]
   14004a191:	ds or  bh,bh
   14004a194:	outs   dx,BYTE PTR ds:[rsi]
   14004a195:	ds or  bh,bh
   14004a198:	outs   dx,BYTE PTR ds:[rsi]
   14004a199:	ds or  bh,bh
   14004a19c:	ins    DWORD PTR es:[rdi],dx
   14004a19d:	cmp    eax,0x3d6dff08
   14004a1a2:	or     bh,bh
   14004a1a4:	ins    BYTE PTR es:[rdi],dx
   14004a1a5:	cmp    eax,0x3c6cff08
   14004a1aa:	or     bh,bh
   14004a1ac:	imul   edi,DWORD PTR [rax+rcx*1],0xffffffff
   14004a1b0:	imul   edi,DWORD PTR [rax+rcx*1],0xffffffff
   14004a1b4:	push   0x3c
   14004a1b6:	or     edi,edi
   14004a1b8:	push   0x3b
   14004a1ba:	or     edi,edi
   14004a1bc:	imul   edi,DWORD PTR [rbx],0x3b69ff09
   14004a1c2:	or     edi,edi
   14004a1c4:	push   0x68ff093a
   14004a1c9:	cmp    cl,BYTE PTR [rcx]
   14004a1cb:	jmp    QWORD PTR [rdi+0x3a]
   14004a1ce:	or     edi,edi
   14004a1d0:	cmp    DWORD PTR [ecx],ecx
   14004a1d3:	jmp    QWORD PTR [rsi+0x39]
   14004a1d6:	or     edi,edi
   14004a1d8:	cmp    WORD PTR [rcx],cx
   14004a1db:	jmp    QWORD PTR [rsi+0x39]
   14004a1de:	or     edi,edi
   14004a1e0:	cmp    WORD PTR [rcx],cx
   14004a1e3:	jmp    QWORD PTR [rsi+0x39]
   14004a1e6:	or     edi,edi
   14004a1e8:	cmp    WORD PTR [rcx],cx
   14004a1eb:	jmp    QWORD PTR [rsi+0x39]
   14004a1ee:	or     edi,edi
   14004a1f0:	cmp    WORD PTR [rcx],cx
   14004a1f3:	jmp    QWORD PTR [rsi+0x39]
   14004a1f6:	or     edi,edi
   14004a1f8:	cmp    WORD PTR [rcx],cx
   14004a1fb:	jmp    QWORD PTR [rsi+0x39]
   14004a1fe:	or     edi,edi
   14004a200:	cmp    WORD PTR [rcx],cx
   14004a203:	jmp    QWORD PTR [rsi+0x39]
   14004a206:	or     edi,edi
   14004a208:	cmp    WORD PTR [rcx],cx
   14004a20b:	jmp    QWORD PTR [rsi+0x39]
   14004a20e:	or     edi,edi
   14004a210:	cmp    WORD PTR [rcx],cx
   14004a213:	jmp    QWORD PTR [rsi+0x39]
   14004a216:	or     edi,edi
   14004a218:	cmp    WORD PTR [rcx],cx
   14004a21b:	jmp    QWORD PTR [rsi+0x39]
   14004a21e:	or     edi,edi
   14004a220:	cmp    WORD PTR [rcx],cx
   14004a223:	jmp    QWORD PTR [rsi+0x39]
   14004a226:	or     edi,edi
   14004a228:	cmp    WORD PTR [rcx],cx
   14004a22b:	jmp    QWORD PTR [rsi+0x39]
   14004a22e:	or     edi,edi
   14004a230:	cmp    WORD PTR [rcx],cx
   14004a233:	(bad)  
	...
   14004a298:	nop
   14004a299:	push   rdx
   14004a29a:	add    al,0x60
   14004a29c:	nop
   14004a29d:	push   rdx
   14004a29e:	add    al,0xff
   14004a2a0:	(bad)  
   14004a2a1:	push   rdx
   14004a2a2:	add    al,0xff
   14004a2a4:	mov    ss,WORD PTR [rcx+0x4]
   14004a2a7:	dec    DWORD PTR [rsi-0x7100fbaf]
   14004a2ad:	push   rcx
   14004a2ae:	add    al,0xff
   14004a2b0:	lea    edx,[rax+0x4]
   14004a2b3:	dec    DWORD PTR [rax+rdx*2+0x508cff05]
   14004a2ba:	add    eax,0x54f8bff
   14004a2bf:	dec    DWORD PTR [rbx-0x7500fab1]
   14004a2c5:	rex.WRXB add rax,0x54e8aff
   14004a2cb:	dec    DWORD PTR [rcx-0x7600fab2]
   14004a2d1:	rex.WRX add rax,0x54d88ff
   14004a2d7:	dec    DWORD PTR [rax-0x7800fab3]
   14004a2dd:	rex.WRB add rax,0x54c87ff
   14004a2e3:	inc    DWORD PTR [rsi-0x7a00fab4]
   14004a2e9:	rex.WR add rax,0x54c85ff
   14004a2ef:	inc    DWORD PTR [rbx+rcx*2+0x4b84ff05]
   14004a2f6:	(bad)  
   14004a2f7:	inc    DWORD PTR [rbx-0x7c00f9b6]
   14004a2fd:	rex.WX (bad) 
   14004a2ff:	inc    DWORD PTR [rdx-0x7d00f9b6]
   14004a305:	rex.WX (bad) 
   14004a307:	inc    DWORD PTR [rcx-0x7e00f9b7]
   14004a30d:	rex.WB (bad) 
   14004a30f:	inc    DWORD PTR [rax-0x7f00f9b7]
   14004a315:	rex.W (bad) 
   14004a317:	(bad)  
   14004a318:	jg     0x14004a362
   14004a31a:	(bad)  
   14004a31b:	(bad)  
   14004a31c:	jg     0x14004a366
   14004a31e:	(bad)  
   14004a31f:	(bad)  
   14004a320:	jle    0x14004a369
   14004a322:	(bad)  
   14004a323:	(bad)  
   14004a324:	jle    0x14004a36d
   14004a326:	(bad)  
   14004a327:	(bad)  
   14004a328:	jge    0x14004a371
   14004a32a:	(bad)  
   14004a32b:	(bad)  
   14004a32c:	jge    0x14004a375
   14004a32e:	(bad)  
   14004a32f:	(bad)  
   14004a330:	jl     0x14004a378
   14004a332:	(bad)  
   14004a333:	(bad)  
   14004a334:	jnp    0x14004a37c
   14004a336:	(bad)  
   14004a337:	(bad)  
   14004a338:	jnp    0x14004a380
   14004a33a:	(bad)  
   14004a33b:	(bad)  
   14004a33c:	jnp    0x14004a383
   14004a33e:	(bad)  
   14004a33f:	(bad)  
   14004a340:	jp     0x14004a387
   14004a342:	(bad)  
   14004a343:	(bad)  
   14004a344:	jns    0x14004a38b
   14004a346:	(bad)  
   14004a347:	(bad)  
   14004a348:	jns    0x14004a38e
   14004a34a:	(bad)  
   14004a34b:	(bad)  
   14004a34c:	js     0x14004a392
   14004a34e:	(bad)  
   14004a34f:	(bad)  
   14004a350:	js     0x14004a396
   14004a352:	(bad)  
   14004a353:	push   QWORD PTR [rdi+0x43]
   14004a356:	(bad)  
   14004a357:	push   QWORD PTR [rdi+0x43]
   14004a35a:	(bad)  
   14004a35b:	push   QWORD PTR [rsi+0x43]
   14004a35e:	(bad)  
   14004a35f:	push   QWORD PTR [rsi+0x42]
   14004a362:	(bad)  
   14004a363:	push   QWORD PTR [rbp+0x42]
   14004a366:	(bad)  
   14004a367:	push   QWORD PTR [rbp+0x42]
   14004a36a:	(bad)  
   14004a36b:	push   QWORD PTR [rcx+rax*2+0x7]
   14004a36f:	push   QWORD PTR [rcx+rax*2+0x7]
   14004a373:	push   QWORD PTR [rbx+0x41]
   14004a376:	(bad)  
   14004a377:	push   QWORD PTR [rbx+0x41]
   14004a37a:	or     bh,bh
   14004a37c:	jb     0x14004a3be
   14004a37e:	or     bh,bh
   14004a380:	jno    0x14004a3c2
   14004a382:	or     bh,bh
   14004a384:	jno    0x14004a3c5
   14004a386:	or     bh,bh
   14004a388:	jno    0x14004a3c9
   14004a38a:	or     bh,bh
   14004a38c:	jo     0x14004a3cd
   14004a38e:	or     bh,bh
   14004a390:	outs   dx,DWORD PTR ds:[rsi]
   14004a391:	(bad)  
   14004a392:	or     bh,bh
   14004a394:	outs   dx,DWORD PTR ds:[rsi]
   14004a395:	ds or  bh,bh
   14004a398:	outs   dx,BYTE PTR ds:[rsi]
   14004a399:	ds or  bh,bh
   14004a39c:	outs   dx,BYTE PTR ds:[rsi]
   14004a39d:	ds or  bh,bh
   14004a3a0:	ins    DWORD PTR es:[rdi],dx
   14004a3a1:	cmp    eax,0x3d6dff08
   14004a3a6:	or     bh,bh
   14004a3a8:	ins    BYTE PTR es:[rdi],dx
   14004a3a9:	cmp    eax,0x3c6cff08
   14004a3ae:	or     bh,bh
   14004a3b0:	imul   edi,DWORD PTR [rax+rcx*1],0xffffffff
   14004a3b4:	imul   edi,DWORD PTR [rax+rcx*1],0xffffffff
   14004a3b8:	push   0x3c
   14004a3ba:	or     edi,edi
   14004a3bc:	push   0x3b
   14004a3be:	or     edi,edi
   14004a3c0:	imul   edi,DWORD PTR [rbx],0x3b69ff09
   14004a3c6:	or     edi,edi
   14004a3c8:	push   0x68ff093a
   14004a3cd:	cmp    cl,BYTE PTR [rcx]
   14004a3cf:	jmp    QWORD PTR [rdi+0x3a]
   14004a3d2:	or     edi,edi
   14004a3d4:	cmp    DWORD PTR [ecx],ecx
   14004a3d7:	jmp    QWORD PTR [rsi+0x39]
   14004a3da:	or     edi,edi
   14004a3dc:	cmp    WORD PTR [rcx],cx
   14004a3df:	jmp    QWORD PTR [rsi+0x39]
   14004a3e2:	or     edi,edi
   14004a3e4:	cmp    WORD PTR [rcx],cx
   14004a3e7:	jmp    QWORD PTR [rsi+0x39]
   14004a3ea:	or     edi,edi
   14004a3ec:	cmp    WORD PTR [rcx],cx
   14004a3ef:	jmp    QWORD PTR [rsi+0x39]
   14004a3f2:	or     edi,edi
   14004a3f4:	cmp    WORD PTR [rcx],cx
   14004a3f7:	jmp    QWORD PTR [rsi+0x39]
   14004a3fa:	or     edi,edi
   14004a3fc:	cmp    WORD PTR [rcx],cx
   14004a3ff:	jmp    QWORD PTR [rsi+0x39]
   14004a402:	or     edi,edi
   14004a404:	cmp    WORD PTR [rcx],cx
   14004a407:	jmp    QWORD PTR [rsi+0x39]
   14004a40a:	or     edi,edi
   14004a40c:	cmp    WORD PTR [rcx],cx
   14004a40f:	jmp    QWORD PTR [rsi+0x39]
   14004a412:	or     edi,edi
   14004a414:	cmp    WORD PTR [rcx],cx
   14004a417:	jmp    QWORD PTR [rsi+0x39]
   14004a41a:	or     edi,edi
   14004a41c:	cmp    WORD PTR [rcx],cx
   14004a41f:	jmp    QWORD PTR [rsi+0x39]
   14004a422:	or     edi,edi
   14004a424:	cmp    WORD PTR [rcx],cx
   14004a427:	jmp    QWORD PTR [rsi+0x39]
   14004a42a:	or     edi,edi
   14004a42c:	cmp    WORD PTR [rcx],cx
   14004a42f:	jmp    QWORD PTR [rsi+0x39]
   14004a432:	or     edi,edi
   14004a434:	cmp    WORD PTR [rcx],cx
   14004a437:	(bad)  
	...
   14004a494:	xchg   ecx,eax
   14004a495:	push   rbx
   14004a496:	add    al,0x30
   14004a498:	xchg   ecx,eax
   14004a499:	push   rdx
   14004a49a:	add    al,0xef
   14004a49c:	nop
   14004a49d:	push   rdx
   14004a49e:	add    al,0xff
   14004a4a0:	nop
   14004a4a1:	push   rdx
   14004a4a2:	add    al,0xff
   14004a4a4:	(bad)  
   14004a4a5:	push   rdx
   14004a4a6:	add    al,0xff
   14004a4a8:	mov    ss,WORD PTR [rcx+0x4]
   14004a4ab:	dec    DWORD PTR [rsi-0x7100fbaf]
   14004a4b1:	push   rcx
   14004a4b2:	add    al,0xff
   14004a4b4:	lea    edx,[rax+0x4]
   14004a4b7:	dec    DWORD PTR [rax+rdx*2+0x508cff05]
   14004a4be:	add    eax,0x54f8bff
   14004a4c3:	dec    DWORD PTR [rbx-0x7500fab1]
   14004a4c9:	rex.WRXB add rax,0x54e8aff
   14004a4cf:	dec    DWORD PTR [rcx-0x7600fab2]
   14004a4d5:	rex.WRX add rax,0x54d88ff
   14004a4db:	dec    DWORD PTR [rax-0x7800fab3]
   14004a4e1:	rex.WRB add rax,0x54c87ff
   14004a4e7:	inc    DWORD PTR [rsi-0x7a00fab4]
   14004a4ed:	rex.WR add rax,0x54c85ff
   14004a4f3:	inc    DWORD PTR [rbx+rcx*2+0x4b84ff05]
   14004a4fa:	(bad)  
   14004a4fb:	inc    DWORD PTR [rbx-0x7c00f9b6]
   14004a501:	rex.WX (bad) 
   14004a503:	inc    DWORD PTR [rdx-0x7d00f9b6]
   14004a509:	rex.WX (bad) 
   14004a50b:	inc    DWORD PTR [rcx-0x7e00f9b7]
   14004a511:	rex.WB (bad) 
   14004a513:	inc    DWORD PTR [rax-0x7f00f9b7]
   14004a519:	rex.W (bad) 
   14004a51b:	(bad)  
   14004a51c:	jg     0x14004a566
   14004a51e:	(bad)  
   14004a51f:	(bad)  
   14004a520:	jg     0x14004a56a
   14004a522:	(bad)  
   14004a523:	(bad)  
   14004a524:	jle    0x14004a56d
   14004a526:	(bad)  
   14004a527:	(bad)  
   14004a528:	jle    0x14004a571
   14004a52a:	(bad)  
   14004a52b:	(bad)  
   14004a52c:	jge    0x14004a575
   14004a52e:	(bad)  
   14004a52f:	(bad)  
   14004a530:	jge    0x14004a579
   14004a532:	(bad)  
   14004a533:	(bad)  
   14004a534:	jl     0x14004a57c
   14004a536:	(bad)  
   14004a537:	(bad)  
   14004a538:	jnp    0x14004a580
   14004a53a:	(bad)  
   14004a53b:	(bad)  
   14004a53c:	jnp    0x14004a584
   14004a53e:	(bad)  
   14004a53f:	(bad)  
   14004a540:	jnp    0x14004a587
   14004a542:	(bad)  
   14004a543:	(bad)  
   14004a544:	jp     0x14004a58b
   14004a546:	(bad)  
   14004a547:	(bad)  
   14004a548:	jns    0x14004a58f
   14004a54a:	(bad)  
   14004a54b:	(bad)  
   14004a54c:	jns    0x14004a592
   14004a54e:	(bad)  
   14004a54f:	(bad)  
   14004a550:	js     0x14004a596
   14004a552:	(bad)  
   14004a553:	(bad)  
   14004a554:	js     0x14004a59a
   14004a556:	(bad)  
   14004a557:	push   QWORD PTR [rdi+0x43]
   14004a55a:	(bad)  
   14004a55b:	push   QWORD PTR [rdi+0x43]
   14004a55e:	(bad)  
   14004a55f:	push   QWORD PTR [rsi+0x43]
   14004a562:	(bad)  
   14004a563:	push   QWORD PTR [rsi+0x42]
   14004a566:	(bad)  
   14004a567:	push   QWORD PTR [rbp+0x42]
   14004a56a:	(bad)  
   14004a56b:	push   QWORD PTR [rbp+0x42]
   14004a56e:	(bad)  
   14004a56f:	push   QWORD PTR [rcx+rax*2+0x7]
   14004a573:	push   QWORD PTR [rcx+rax*2+0x7]
   14004a577:	push   QWORD PTR [rbx+0x41]
   14004a57a:	(bad)  
   14004a57b:	push   QWORD PTR [rbx+0x41]
   14004a57e:	or     bh,bh
   14004a580:	jb     0x14004a5c2
   14004a582:	or     bh,bh
   14004a584:	jno    0x14004a5c6
   14004a586:	or     bh,bh
   14004a588:	jno    0x14004a5c9
   14004a58a:	or     bh,bh
   14004a58c:	jno    0x14004a5cd
   14004a58e:	or     bh,bh
   14004a590:	jo     0x14004a5d1
   14004a592:	or     bh,bh
   14004a594:	outs   dx,DWORD PTR ds:[rsi]
   14004a595:	(bad)  
   14004a596:	or     bh,bh
   14004a598:	outs   dx,DWORD PTR ds:[rsi]
   14004a599:	ds or  bh,bh
   14004a59c:	outs   dx,BYTE PTR ds:[rsi]
   14004a59d:	ds or  bh,bh
   14004a5a0:	outs   dx,BYTE PTR ds:[rsi]
   14004a5a1:	ds or  bh,bh
   14004a5a4:	ins    DWORD PTR es:[rdi],dx
   14004a5a5:	cmp    eax,0x3d6dff08
   14004a5aa:	or     bh,bh
   14004a5ac:	ins    BYTE PTR es:[rdi],dx
   14004a5ad:	cmp    eax,0x3c6cff08
   14004a5b2:	or     bh,bh
   14004a5b4:	imul   edi,DWORD PTR [rax+rcx*1],0xffffffff
   14004a5b8:	imul   edi,DWORD PTR [rax+rcx*1],0xffffffff
   14004a5bc:	push   0x3c
   14004a5be:	or     edi,edi
   14004a5c0:	push   0x3b
   14004a5c2:	or     edi,edi
   14004a5c4:	imul   edi,DWORD PTR [rbx],0x3b69ff09
   14004a5ca:	or     edi,edi
   14004a5cc:	push   0x68ff093a
   14004a5d1:	cmp    cl,BYTE PTR [rcx]
   14004a5d3:	jmp    QWORD PTR [rdi+0x3a]
   14004a5d6:	or     edi,edi
   14004a5d8:	cmp    DWORD PTR [ecx],ecx
   14004a5db:	jmp    QWORD PTR [rsi+0x39]
   14004a5de:	or     edi,edi
   14004a5e0:	cmp    WORD PTR [rcx],cx
   14004a5e3:	jmp    QWORD PTR [rsi+0x39]
   14004a5e6:	or     edi,edi
   14004a5e8:	cmp    WORD PTR [rcx],cx
   14004a5eb:	jmp    QWORD PTR [rsi+0x39]
   14004a5ee:	or     edi,edi
   14004a5f0:	cmp    WORD PTR [rcx],cx
   14004a5f3:	jmp    QWORD PTR [rsi+0x39]
   14004a5f6:	or     edi,edi
   14004a5f8:	cmp    WORD PTR [rcx],cx
   14004a5fb:	jmp    QWORD PTR [rsi+0x39]
   14004a5fe:	or     edi,edi
   14004a600:	cmp    WORD PTR [rcx],cx
   14004a603:	jmp    QWORD PTR [rsi+0x39]
   14004a606:	or     edi,edi
   14004a608:	cmp    WORD PTR [rcx],cx
   14004a60b:	jmp    QWORD PTR [rsi+0x39]
   14004a60e:	or     edi,edi
   14004a610:	cmp    WORD PTR [rcx],cx
   14004a613:	jmp    QWORD PTR [rsi+0x39]
   14004a616:	or     edi,edi
   14004a618:	cmp    WORD PTR [rcx],cx
   14004a61b:	jmp    QWORD PTR [rsi+0x39]
   14004a61e:	or     edi,edi
   14004a620:	cmp    WORD PTR [rcx],cx
   14004a623:	jmp    QWORD PTR [rsi+0x39]
   14004a626:	or     edi,edi
   14004a628:	cmp    WORD PTR [rcx],cx
   14004a62b:	jmp    QWORD PTR [rsi+0x39]
   14004a62e:	or     edi,edi
   14004a630:	cmp    WORD PTR [rcx],cx
   14004a633:	jmp    QWORD PTR [rsi+0x39]
   14004a636:	or     edi,ebp
   14004a638:	cmp    WORD PTR [rcx],cx
   14004a63b:	xor    BYTE PTR [rax],al
	...
   14004a691:	add    BYTE PTR [rax],al
   14004a693:	add    BYTE PTR [rdx-0x6e30fbad],dl
   14004a699:	push   rbx
   14004a69a:	add    al,0xff
   14004a69c:	xchg   ecx,eax
   14004a69d:	push   rdx
   14004a69e:	add    al,0xff
   14004a6a0:	nop
   14004a6a1:	push   rdx
   14004a6a2:	add    al,0xff
   14004a6a4:	nop
   14004a6a5:	push   rdx
   14004a6a6:	add    al,0xff
   14004a6a8:	(bad)  
   14004a6a9:	push   rdx
   14004a6aa:	add    al,0xff
   14004a6ac:	mov    ss,WORD PTR [rcx+0x4]
   14004a6af:	dec    DWORD PTR [rsi-0x7100fbaf]
   14004a6b5:	push   rcx
   14004a6b6:	add    al,0xff
   14004a6b8:	lea    edx,[rax+0x4]
   14004a6bb:	dec    DWORD PTR [rax+rdx*2+0x508cff05]
   14004a6c2:	add    eax,0x54f8bff
   14004a6c7:	dec    DWORD PTR [rbx-0x7500fab1]
   14004a6cd:	rex.WRXB add rax,0x54e8aff
   14004a6d3:	dec    DWORD PTR [rcx-0x7600fab2]
   14004a6d9:	rex.WRX add rax,0x54d88ff
   14004a6df:	dec    DWORD PTR [rax-0x7800fab3]
   14004a6e5:	rex.WRB add rax,0x54c87ff
   14004a6eb:	inc    DWORD PTR [rsi-0x7a00fab4]
   14004a6f1:	rex.WR add rax,0x54c85ff
   14004a6f7:	inc    DWORD PTR [rbx+rcx*2+0x4b84ff05]
   14004a6fe:	(bad)  
   14004a6ff:	inc    DWORD PTR [rbx-0x7c00f9b6]
   14004a705:	rex.WX (bad) 
   14004a707:	inc    DWORD PTR [rdx-0x7d00f9b6]
   14004a70d:	rex.WX (bad) 
   14004a70f:	inc    DWORD PTR [rcx-0x7e00f9b7]
   14004a715:	rex.WB (bad) 
   14004a717:	inc    DWORD PTR [rax-0x7f00f9b7]
   14004a71d:	rex.W (bad) 
   14004a71f:	(bad)  
   14004a720:	jg     0x14004a76a
   14004a722:	(bad)  
   14004a723:	(bad)  
   14004a724:	jg     0x14004a76e
   14004a726:	(bad)  
   14004a727:	(bad)  
   14004a728:	jle    0x14004a771
   14004a72a:	(bad)  
   14004a72b:	(bad)  
   14004a72c:	jle    0x14004a775
   14004a72e:	(bad)  
   14004a72f:	(bad)  
   14004a730:	jge    0x14004a779
   14004a732:	(bad)  
   14004a733:	(bad)  
   14004a734:	jge    0x14004a77d
   14004a736:	(bad)  
   14004a737:	(bad)  
   14004a738:	jl     0x14004a780
   14004a73a:	(bad)  
   14004a73b:	(bad)  
   14004a73c:	jnp    0x14004a784
   14004a73e:	(bad)  
   14004a73f:	(bad)  
   14004a740:	jnp    0x14004a788
   14004a742:	(bad)  
   14004a743:	(bad)  
   14004a744:	jnp    0x14004a78b
   14004a746:	(bad)  
   14004a747:	(bad)  
   14004a748:	jp     0x14004a78f
   14004a74a:	(bad)  
   14004a74b:	(bad)  
   14004a74c:	jns    0x14004a793
   14004a74e:	(bad)  
   14004a74f:	(bad)  
   14004a750:	jns    0x14004a796
   14004a752:	(bad)  
   14004a753:	(bad)  
   14004a754:	js     0x14004a79a
   14004a756:	(bad)  
   14004a757:	(bad)  
   14004a758:	js     0x14004a79e
   14004a75a:	(bad)  
   14004a75b:	push   QWORD PTR [rdi+0x43]
   14004a75e:	(bad)  
   14004a75f:	push   QWORD PTR [rdi+0x43]
   14004a762:	(bad)  
   14004a763:	push   QWORD PTR [rsi+0x43]
   14004a766:	(bad)  
   14004a767:	push   QWORD PTR [rsi+0x42]
   14004a76a:	(bad)  
   14004a76b:	push   QWORD PTR [rbp+0x42]
   14004a76e:	(bad)  
   14004a76f:	push   QWORD PTR [rbp+0x42]
   14004a772:	(bad)  
   14004a773:	push   QWORD PTR [rcx+rax*2+0x7]
   14004a777:	push   QWORD PTR [rcx+rax*2+0x7]
   14004a77b:	push   QWORD PTR [rbx+0x41]
   14004a77e:	(bad)  
   14004a77f:	push   QWORD PTR [rbx+0x41]
   14004a782:	or     bh,bh
   14004a784:	jb     0x14004a7c6
   14004a786:	or     bh,bh
   14004a788:	jno    0x14004a7ca
   14004a78a:	or     bh,bh
   14004a78c:	jno    0x14004a7cd
   14004a78e:	or     bh,bh
   14004a790:	jno    0x14004a7d1
   14004a792:	or     bh,bh
   14004a794:	jo     0x14004a7d5
   14004a796:	or     bh,bh
   14004a798:	outs   dx,DWORD PTR ds:[rsi]
   14004a799:	(bad)  
   14004a79a:	or     bh,bh
   14004a79c:	outs   dx,DWORD PTR ds:[rsi]
   14004a79d:	ds or  bh,bh
   14004a7a0:	outs   dx,BYTE PTR ds:[rsi]
   14004a7a1:	ds or  bh,bh
   14004a7a4:	outs   dx,BYTE PTR ds:[rsi]
   14004a7a5:	ds or  bh,bh
   14004a7a8:	ins    DWORD PTR es:[rdi],dx
   14004a7a9:	cmp    eax,0x3d6dff08
   14004a7ae:	or     bh,bh
   14004a7b0:	ins    BYTE PTR es:[rdi],dx
   14004a7b1:	cmp    eax,0x3c6cff08
   14004a7b6:	or     bh,bh
   14004a7b8:	imul   edi,DWORD PTR [rax+rcx*1],0xffffffff
   14004a7bc:	imul   edi,DWORD PTR [rax+rcx*1],0xffffffff
   14004a7c0:	push   0x3c
   14004a7c2:	or     edi,edi
   14004a7c4:	push   0x3b
   14004a7c6:	or     edi,edi
   14004a7c8:	imul   edi,DWORD PTR [rbx],0x3b69ff09
   14004a7ce:	or     edi,edi
   14004a7d0:	push   0x68ff093a
   14004a7d5:	cmp    cl,BYTE PTR [rcx]
   14004a7d7:	jmp    QWORD PTR [rdi+0x3a]
   14004a7da:	or     edi,edi
   14004a7dc:	cmp    DWORD PTR [ecx],ecx
   14004a7df:	jmp    QWORD PTR [rsi+0x39]
   14004a7e2:	or     edi,edi
   14004a7e4:	cmp    WORD PTR [rcx],cx
   14004a7e7:	jmp    QWORD PTR [rsi+0x39]
   14004a7ea:	or     edi,edi
   14004a7ec:	cmp    WORD PTR [rcx],cx
   14004a7ef:	jmp    QWORD PTR [rsi+0x39]
   14004a7f2:	or     edi,edi
   14004a7f4:	cmp    WORD PTR [rcx],cx
   14004a7f7:	jmp    QWORD PTR [rsi+0x39]
   14004a7fa:	or     edi,edi
   14004a7fc:	cmp    WORD PTR [rcx],cx
   14004a7ff:	jmp    QWORD PTR [rsi+0x39]
   14004a802:	or     edi,edi
   14004a804:	cmp    WORD PTR [rcx],cx
   14004a807:	jmp    QWORD PTR [rsi+0x39]
   14004a80a:	or     edi,edi
   14004a80c:	cmp    WORD PTR [rcx],cx
   14004a80f:	jmp    QWORD PTR [rsi+0x39]
   14004a812:	or     edi,edi
   14004a814:	cmp    WORD PTR [rcx],cx
   14004a817:	jmp    QWORD PTR [rsi+0x39]
   14004a81a:	or     edi,edi
   14004a81c:	cmp    WORD PTR [rcx],cx
   14004a81f:	jmp    QWORD PTR [rsi+0x39]
   14004a822:	or     edi,edi
   14004a824:	cmp    WORD PTR [rcx],cx
   14004a827:	jmp    QWORD PTR [rsi+0x39]
   14004a82a:	or     edi,edi
   14004a82c:	cmp    WORD PTR [rcx],cx
   14004a82f:	jmp    QWORD PTR [rsi+0x39]
   14004a832:	or     edi,edi
   14004a834:	cmp    WORD PTR [rcx],cx
   14004a837:	jmp    QWORD PTR [rsi+0x39]
   14004a83a:	or     edi,ecx
	...
   14004a890:	xchg   ebx,eax
   14004a891:	push   rsp
   14004a892:	add    al,0x80
   14004a894:	xchg   edx,eax
   14004a895:	push   rbx
   14004a896:	add    al,0xff
   14004a898:	xchg   edx,eax
   14004a899:	push   rbx
   14004a89a:	add    al,0xff
   14004a89c:	xchg   ecx,eax
   14004a89d:	push   rbx
   14004a89e:	add    al,0xff
   14004a8a0:	xchg   ecx,eax
   14004a8a1:	push   rdx
   14004a8a2:	add    al,0xff
   14004a8a4:	nop
   14004a8a5:	push   rdx
   14004a8a6:	add    al,0xff
   14004a8a8:	nop
   14004a8a9:	push   rdx
   14004a8aa:	add    al,0xff
   14004a8ac:	(bad)  
   14004a8ad:	push   rdx
   14004a8ae:	add    al,0xff
   14004a8b0:	mov    ss,WORD PTR [rcx+0x4]
   14004a8b3:	dec    DWORD PTR [rsi-0x7100fbaf]
   14004a8b9:	push   rcx
   14004a8ba:	add    al,0xff
   14004a8bc:	lea    edx,[rax+0x4]
   14004a8bf:	dec    DWORD PTR [rax+rdx*2+0x508cff05]
   14004a8c6:	add    eax,0x54f8bff
   14004a8cb:	dec    DWORD PTR [rbx-0x7500fab1]
   14004a8d1:	rex.WRXB add rax,0x54e8aff
   14004a8d7:	dec    DWORD PTR [rcx-0x7600fab2]
   14004a8dd:	rex.WRX add rax,0x54d88ff
   14004a8e3:	dec    DWORD PTR [rax-0x7800fab3]
   14004a8e9:	rex.WRB add rax,0x54c87ff
   14004a8ef:	inc    DWORD PTR [rsi-0x7a00fab4]
   14004a8f5:	rex.WR add rax,0x54c85ff
   14004a8fb:	inc    DWORD PTR [rbx+rcx*2+0x4b84ff05]
   14004a902:	(bad)  
   14004a903:	inc    DWORD PTR [rbx-0x7c00f9b6]
   14004a909:	rex.WX (bad) 
   14004a90b:	inc    DWORD PTR [rdx-0x7d00f9b6]
   14004a911:	rex.WX (bad) 
   14004a913:	inc    DWORD PTR [rcx-0x7e00f9b7]
   14004a919:	rex.WB (bad) 
   14004a91b:	inc    DWORD PTR [rax-0x7f00f9b7]
   14004a921:	rex.W (bad) 
   14004a923:	(bad)  
   14004a924:	jg     0x14004a96e
   14004a926:	(bad)  
   14004a927:	(bad)  
   14004a928:	jg     0x14004a972
   14004a92a:	(bad)  
   14004a92b:	(bad)  
   14004a92c:	jle    0x14004a975
   14004a92e:	(bad)  
   14004a92f:	(bad)  
   14004a930:	jle    0x14004a979
   14004a932:	(bad)  
   14004a933:	(bad)  
   14004a934:	jge    0x14004a97d
   14004a936:	(bad)  
   14004a937:	(bad)  
   14004a938:	jge    0x14004a981
   14004a93a:	(bad)  
   14004a93b:	(bad)  
   14004a93c:	jl     0x14004a984
   14004a93e:	(bad)  
   14004a93f:	(bad)  
   14004a940:	jnp    0x14004a988
   14004a942:	(bad)  
   14004a943:	(bad)  
   14004a944:	jnp    0x14004a98c
   14004a946:	(bad)  
   14004a947:	(bad)  
   14004a948:	jnp    0x14004a98f
   14004a94a:	(bad)  
   14004a94b:	(bad)  
   14004a94c:	jp     0x14004a993
   14004a94e:	(bad)  
   14004a94f:	(bad)  
   14004a950:	jns    0x14004a997
   14004a952:	(bad)  
   14004a953:	(bad)  
   14004a954:	jns    0x14004a99a
   14004a956:	(bad)  
   14004a957:	(bad)  
   14004a958:	js     0x14004a99e
   14004a95a:	(bad)  
   14004a95b:	(bad)  
   14004a95c:	js     0x14004a9a2
   14004a95e:	(bad)  
   14004a95f:	push   QWORD PTR [rdi+0x43]
   14004a962:	(bad)  
   14004a963:	push   QWORD PTR [rdi+0x43]
   14004a966:	(bad)  
   14004a967:	push   QWORD PTR [rsi+0x43]
   14004a96a:	(bad)  
   14004a96b:	push   QWORD PTR [rsi+0x42]
   14004a96e:	(bad)  
   14004a96f:	push   QWORD PTR [rbp+0x42]
   14004a972:	(bad)  
   14004a973:	push   QWORD PTR [rbp+0x42]
   14004a976:	(bad)  
   14004a977:	push   QWORD PTR [rcx+rax*2+0x7]
   14004a97b:	push   QWORD PTR [rcx+rax*2+0x7]
   14004a97f:	push   QWORD PTR [rbx+0x41]
   14004a982:	(bad)  
   14004a983:	push   QWORD PTR [rbx+0x41]
   14004a986:	or     bh,bh
   14004a988:	jb     0x14004a9ca
   14004a98a:	or     bh,bh
   14004a98c:	jno    0x14004a9ce
   14004a98e:	or     bh,bh
   14004a990:	jno    0x14004a9d1
   14004a992:	or     bh,bh
   14004a994:	jno    0x14004a9d5
   14004a996:	or     bh,bh
   14004a998:	jo     0x14004a9d9
   14004a99a:	or     bh,bh
   14004a99c:	outs   dx,DWORD PTR ds:[rsi]
   14004a99d:	(bad)  
   14004a99e:	or     bh,bh
   14004a9a0:	outs   dx,DWORD PTR ds:[rsi]
   14004a9a1:	ds or  bh,bh
   14004a9a4:	outs   dx,BYTE PTR ds:[rsi]
   14004a9a5:	ds or  bh,bh
   14004a9a8:	outs   dx,BYTE PTR ds:[rsi]
   14004a9a9:	ds or  bh,bh
   14004a9ac:	ins    DWORD PTR es:[rdi],dx
   14004a9ad:	cmp    eax,0x3d6dff08
   14004a9b2:	or     bh,bh
   14004a9b4:	ins    BYTE PTR es:[rdi],dx
   14004a9b5:	cmp    eax,0x3c6cff08
   14004a9ba:	or     bh,bh
   14004a9bc:	imul   edi,DWORD PTR [rax+rcx*1],0xffffffff
   14004a9c0:	imul   edi,DWORD PTR [rax+rcx*1],0xffffffff
   14004a9c4:	push   0x3c
   14004a9c6:	or     edi,edi
   14004a9c8:	push   0x3b
   14004a9ca:	or     edi,edi
   14004a9cc:	imul   edi,DWORD PTR [rbx],0x3b69ff09
   14004a9d2:	or     edi,edi
   14004a9d4:	push   0x68ff093a
   14004a9d9:	cmp    cl,BYTE PTR [rcx]
   14004a9db:	jmp    QWORD PTR [rdi+0x3a]
   14004a9de:	or     edi,edi
   14004a9e0:	cmp    DWORD PTR [ecx],ecx
   14004a9e3:	jmp    QWORD PTR [rsi+0x39]
   14004a9e6:	or     edi,edi
   14004a9e8:	cmp    WORD PTR [rcx],cx
   14004a9eb:	jmp    QWORD PTR [rsi+0x39]
   14004a9ee:	or     edi,edi
   14004a9f0:	cmp    WORD PTR [rcx],cx
   14004a9f3:	jmp    QWORD PTR [rsi+0x39]
   14004a9f6:	or     edi,edi
   14004a9f8:	cmp    WORD PTR [rcx],cx
   14004a9fb:	jmp    QWORD PTR [rsi+0x39]
   14004a9fe:	or     edi,edi
   14004aa00:	cmp    WORD PTR [rcx],cx
   14004aa03:	jmp    QWORD PTR [rsi+0x39]
   14004aa06:	or     edi,edi
   14004aa08:	cmp    WORD PTR [rcx],cx
   14004aa0b:	jmp    QWORD PTR [rsi+0x39]
   14004aa0e:	or     edi,edi
   14004aa10:	cmp    WORD PTR [rcx],cx
   14004aa13:	jmp    QWORD PTR [rsi+0x39]
   14004aa16:	or     edi,edi
   14004aa18:	cmp    WORD PTR [rcx],cx
   14004aa1b:	jmp    QWORD PTR [rsi+0x39]
   14004aa1e:	or     edi,edi
   14004aa20:	cmp    WORD PTR [rcx],cx
   14004aa23:	jmp    QWORD PTR [rsi+0x39]
   14004aa26:	or     edi,edi
   14004aa28:	cmp    WORD PTR [rcx],cx
   14004aa2b:	jmp    QWORD PTR [rsi+0x39]
   14004aa2e:	or     edi,edi
   14004aa30:	cmp    WORD PTR [rcx],cx
   14004aa33:	jmp    QWORD PTR [rsi+0x39]
   14004aa36:	or     edi,edi
   14004aa38:	cmp    WORD PTR [rcx],cx
   14004aa3b:	jmp    QWORD PTR [rsi+0x39]
   14004aa3e:	or     DWORD PTR [rax+0x0],eax
	...
   14004aa8c:	xchg   esp,eax
   14004aa8d:	push   rsp
   14004aa8e:	add    al,0x10
   14004aa90:	xchg   ebx,eax
   14004aa91:	push   rsp
   14004aa92:	add    al,0xef
   14004aa94:	xchg   ebx,eax
   14004aa95:	push   rsp
   14004aa96:	add    al,0xff
   14004aa98:	xchg   edx,eax
   14004aa99:	push   rbx
   14004aa9a:	add    al,0xff
   14004aa9c:	xchg   edx,eax
   14004aa9d:	push   rbx
   14004aa9e:	add    al,0xff
   14004aaa0:	xchg   ecx,eax
   14004aaa1:	push   rbx
   14004aaa2:	add    al,0xff
   14004aaa4:	xchg   ecx,eax
   14004aaa5:	push   rdx
   14004aaa6:	add    al,0xff
   14004aaa8:	nop
   14004aaa9:	push   rdx
   14004aaaa:	add    al,0xff
   14004aaac:	nop
   14004aaad:	push   rdx
   14004aaae:	add    al,0xff
   14004aab0:	(bad)  
   14004aab1:	push   rdx
   14004aab2:	add    al,0xff
   14004aab4:	mov    ss,WORD PTR [rcx+0x4]
   14004aab7:	dec    DWORD PTR [rsi-0x7100fbaf]
   14004aabd:	push   rcx
   14004aabe:	add    al,0xff
   14004aac0:	lea    edx,[rax+0x4]
   14004aac3:	dec    DWORD PTR [rax+rdx*2+0x508cff05]
   14004aaca:	add    eax,0x54f8bff
   14004aacf:	dec    DWORD PTR [rbx-0x7500fab1]
   14004aad5:	rex.WRXB add rax,0x54e8aff
   14004aadb:	dec    DWORD PTR [rcx-0x7600fab2]
   14004aae1:	rex.WRX add rax,0x54d88ff
   14004aae7:	dec    DWORD PTR [rax-0x7800fab3]
   14004aaed:	rex.WRB add rax,0x54c87ff
   14004aaf3:	inc    DWORD PTR [rsi-0x7a00fab4]
   14004aaf9:	rex.WR add rax,0x54c85ff
   14004aaff:	inc    DWORD PTR [rbx+rcx*2+0x4578ff05]
   14004ab06:	or     bh,bh
   14004ab08:	ja     0x14004ab4e
   14004ab0a:	or     bh,bh
   14004ab0c:	ja     0x14004ab52
   14004ab0e:	or     bh,bh
   14004ab10:	jbe    0x14004ab56
   14004ab12:	or     bh,bh
   14004ab14:	jbe    0x14004ab5a
   14004ab16:	or     bh,bh
   14004ab18:	jne    0x14004ab5e
   14004ab1a:	or     bh,bh
   14004ab1c:	jne    0x14004ab62
   14004ab1e:	or     bh,bh
   14004ab20:	jne    0x14004ab66
   14004ab22:	or     bh,bh
   14004ab24:	je     0x14004ab69
   14004ab26:	or     bh,bh
   14004ab28:	je     0x14004ab6d
   14004ab2a:	or     bh,bh
   14004ab2c:	jae    0x14004ab71
   14004ab2e:	or     bh,bh
   14004ab30:	jae    0x14004ab74
   14004ab32:	or     bh,bh
   14004ab34:	jae    0x14004ab78
   14004ab36:	or     bh,bh
   14004ab38:	jb     0x14004ab7c
   14004ab3a:	or     bh,bh
   14004ab3c:	jb     0x14004ab80
   14004ab3e:	or     bh,bh
   14004ab40:	jb     0x14004ab83
   14004ab42:	or     bh,bh
   14004ab44:	jno    0x14004ab87
   14004ab46:	or     bh,bh
   14004ab48:	jno    0x14004ab8b
   14004ab4a:	or     edi,edi
   14004ab4c:	jo     0x14004ab8f
   14004ab4e:	or     edi,edi
   14004ab50:	jo     0x14004ab93
   14004ab52:	or     edi,edi
   14004ab54:	outs   dx,DWORD PTR ds:[rsi]
   14004ab55:	rex or edi,edi
   14004ab58:	outs   dx,DWORD PTR ds:[rsi]
   14004ab59:	rex or edi,edi
   14004ab5c:	outs   dx,DWORD PTR ds:[rsi]
   14004ab5d:	rex or edi,edi
   14004ab60:	outs   dx,DWORD PTR ds:[rsi]
   14004ab61:	rex or edi,edi
   14004ab64:	outs   dx,BYTE PTR ds:[rsi]
   14004ab65:	(bad)  
   14004ab66:	or     edi,edi
   14004ab68:	outs   dx,BYTE PTR ds:[rsi]
   14004ab69:	(bad)  
   14004ab6a:	or     edi,edi
   14004ab6c:	ins    DWORD PTR es:[rdi],dx
   14004ab6d:	(bad)  
   14004ab6e:	or     edi,edi
   14004ab70:	ins    DWORD PTR es:[rdi],dx
   14004ab71:	ds or  edi,edi
   14004ab74:	ins    BYTE PTR es:[rdi],dx
   14004ab75:	ds or  edi,edi
   14004ab78:	ins    BYTE PTR es:[rdi],dx
   14004ab79:	ds or  edi,edi
   14004ab7c:	ins    BYTE PTR es:[rdi],dx
   14004ab7d:	ds or  edi,edi
   14004ab80:	imul   edi,DWORD PTR [rsi],0xb
   14004ab83:	jmp    FWORD PTR [rbx+0x3e]
   14004ab86:	or     edi,edi
   14004ab88:	push   0x3d
   14004ab8a:	or     edi,edi
   14004ab8c:	push   0x3d
   14004ab8e:	or     edi,edi
   14004ab90:	imul   edi,DWORD PTR [rip+0x3c69ff0b],0x3c69ff0b        # 0x17c6eaaa5
   14004ab9a:	or     edi,edi
   14004ab9c:	imul   edi,DWORD PTR [rbx+rcx*1],0xb3c68ff
   14004aba3:	jmp    FWORD PTR [rax+0x3b]
   14004aba6:	or     edi,edi
   14004aba8:	cmp    ecx,DWORD PTR [ebx]
   14004abab:	jmp    QWORD PTR [rdi+0x3b]
   14004abae:	or     edi,edi
   14004abb0:	cmp    cx,WORD PTR [rbx]
   14004abb3:	jmp    QWORD PTR [rsi+0x3b]
   14004abb6:	or     edi,edi
   14004abb8:	data16 cmp cl,BYTE PTR [rbx]
   14004abbb:	jmp    QWORD PTR [rbp+0x3a]
   14004abbe:	or     edi,edi
   14004abc0:	cmp    cl,BYTE PTR gs:[rbx]
   14004abc3:	jmp    QWORD PTR [rbp+0x3a]
   14004abc6:	or     edi,edi
   14004abc8:	cmp    DWORD PTR fs:[rdi+rdi*8],ecx
   14004abcc:	push   0x3b
   14004abce:	or     edi,edi
   14004abd0:	imul   edi,DWORD PTR [rbx],0x3b69ff09
   14004abd6:	or     edi,edi
   14004abd8:	push   0x68ff093a
   14004abdd:	cmp    cl,BYTE PTR [rcx]
   14004abdf:	jmp    QWORD PTR [rdi+0x3a]
   14004abe2:	or     edi,edi
   14004abe4:	cmp    DWORD PTR [ecx],ecx
   14004abe7:	jmp    QWORD PTR [rsi+0x39]
   14004abea:	or     edi,edi
   14004abec:	cmp    WORD PTR [rcx],cx
   14004abef:	jmp    QWORD PTR [rsi+0x39]
   14004abf2:	or     edi,edi
   14004abf4:	cmp    WORD PTR [rcx],cx
   14004abf7:	jmp    QWORD PTR [rsi+0x39]
   14004abfa:	or     edi,edi
   14004abfc:	cmp    WORD PTR [rcx],cx
   14004abff:	jmp    QWORD PTR [rsi+0x39]
   14004ac02:	or     edi,edi
   14004ac04:	cmp    WORD PTR [rcx],cx
   14004ac07:	jmp    QWORD PTR [rsi+0x39]
   14004ac0a:	or     edi,edi
   14004ac0c:	cmp    WORD PTR [rcx],cx
   14004ac0f:	jmp    QWORD PTR [rsi+0x39]
   14004ac12:	or     edi,edi
   14004ac14:	cmp    WORD PTR [rcx],cx
   14004ac17:	jmp    QWORD PTR [rsi+0x39]
   14004ac1a:	or     edi,edi
   14004ac1c:	cmp    WORD PTR [rcx],cx
   14004ac1f:	jmp    QWORD PTR [rsi+0x39]
   14004ac22:	or     edi,edi
   14004ac24:	cmp    WORD PTR [rcx],cx
   14004ac27:	jmp    QWORD PTR [rsi+0x39]
   14004ac2a:	or     edi,edi
   14004ac2c:	cmp    WORD PTR [rcx],cx
   14004ac2f:	jmp    QWORD PTR [rsi+0x39]
   14004ac32:	or     edi,edi
   14004ac34:	cmp    WORD PTR [rcx],cx
   14004ac37:	jmp    QWORD PTR [rsi+0x39]
   14004ac3a:	or     edi,edi
   14004ac3c:	cmp    WORD PTR [rcx],cx
   14004ac3f:	out    dx,eax
   14004ac40:	cmp    WORD PTR [rcx],cx
   14004ac43:	adc    BYTE PTR [rax],al
	...
   14004ac89:	add    BYTE PTR [rax],al
   14004ac8b:	add    BYTE PTR [rbp+rdx*2+0x54948004],dl
   14004ac92:	add    al,0xff
   14004ac94:	xchg   ebx,eax
   14004ac95:	push   rsp
   14004ac96:	add    al,0xff
   14004ac98:	xchg   ebx,eax
   14004ac99:	push   rsp
   14004ac9a:	add    al,0xff
   14004ac9c:	xchg   edx,eax
   14004ac9d:	push   rbx
   14004ac9e:	add    al,0xff
   14004aca0:	xchg   edx,eax
   14004aca1:	push   rbx
   14004aca2:	add    al,0xff
   14004aca4:	xchg   ecx,eax
   14004aca5:	push   rbx
   14004aca6:	add    al,0xff
   14004aca8:	xchg   ecx,eax
   14004aca9:	push   rdx
   14004acaa:	add    al,0xff
   14004acac:	nop
   14004acad:	push   rdx
   14004acae:	add    al,0xff
   14004acb0:	nop
   14004acb1:	push   rdx
   14004acb2:	add    al,0xff
   14004acb4:	(bad)  
   14004acb5:	push   rdx
   14004acb6:	add    al,0xff
   14004acb8:	mov    ss,WORD PTR [rcx+0x4]
   14004acbb:	dec    DWORD PTR [rsi-0x7100fbaf]
   14004acc1:	push   rcx
   14004acc2:	add    al,0xff
   14004acc4:	lea    edx,[rax+0x4]
   14004acc7:	dec    DWORD PTR [rax+rdx*2+0x508cff05]
   14004acce:	add    eax,0x54f8bff
   14004acd3:	dec    DWORD PTR [rbx-0x7500fab1]
   14004acd9:	rex.WRXB add rax,0x54e8aff
   14004acdf:	dec    DWORD PTR [rcx-0x7600fab2]
   14004ace5:	rex.WRX add rax,0x54d88ff
   14004aceb:	dec    DWORD PTR [rax-0x7800fab3]
   14004acf1:	rex.WRB add rax,0x54c87ff
   14004acf7:	inc    DWORD PTR [rsi-0x7a00fab4]
   14004acfd:	rex.WR add rax,0x54c85ff
   14004ad03:	call   QWORD PTR [rdx+0x33]
   14004ad06:	adc    eax,0x153352ff
   14004ad0b:	call   QWORD PTR [rdx+0x33]
   14004ad0e:	adc    eax,0x153352ff
   14004ad13:	call   QWORD PTR [rdx+0x33]
   14004ad16:	adc    eax,0x153352ff
   14004ad1b:	call   QWORD PTR [rdx+0x33]
   14004ad1e:	adc    eax,0x153352ff
   14004ad23:	call   QWORD PTR [rdx+0x33]
   14004ad26:	adc    eax,0x153352ff
   14004ad2b:	call   QWORD PTR [rdx+0x33]
   14004ad2e:	adc    eax,0x153352ff
   14004ad33:	call   QWORD PTR [rdx+0x33]
   14004ad36:	adc    eax,0x153352ff
   14004ad3b:	call   QWORD PTR [rdx+0x33]
   14004ad3e:	adc    eax,0x153352ff
   14004ad43:	call   QWORD PTR [rdx+0x33]
   14004ad46:	adc    eax,0x153352ff
   14004ad4b:	call   QWORD PTR [rdx+0x33]
   14004ad4e:	adc    eax,0x153352ff
   14004ad53:	call   QWORD PTR [rdx+0x33]
   14004ad56:	adc    eax,0x153352ff
   14004ad5b:	call   QWORD PTR [rdx+0x33]
   14004ad5e:	adc    eax,0x153352ff
   14004ad63:	call   QWORD PTR [rdx+0x33]
   14004ad66:	adc    eax,0x153352ff
   14004ad6b:	call   QWORD PTR [rdx+0x33]
   14004ad6e:	adc    eax,0x153352ff
   14004ad73:	call   QWORD PTR [rdx+0x33]
   14004ad76:	adc    eax,0x153352ff
   14004ad7b:	call   QWORD PTR [rdx+0x33]
   14004ad7e:	adc    eax,0x153352ff
   14004ad83:	call   QWORD PTR [rdx+0x33]
   14004ad86:	adc    eax,0x153352ff
   14004ad8b:	call   QWORD PTR [rdx+0x33]
   14004ad8e:	adc    eax,0x153352ff
   14004ad93:	call   QWORD PTR [rdx+0x33]
   14004ad96:	adc    eax,0x153352ff
   14004ad9b:	call   QWORD PTR [rdx+0x33]
   14004ad9e:	adc    eax,0x153352ff
   14004ada3:	call   QWORD PTR [rdx+0x33]
   14004ada6:	adc    eax,0x153352ff
   14004adab:	call   QWORD PTR [rdx+0x33]
   14004adae:	adc    eax,0x153352ff
   14004adb3:	call   QWORD PTR [rdx+0x33]
   14004adb6:	adc    eax,0x153352ff
   14004adbb:	call   QWORD PTR [rdx+0x33]
   14004adbe:	adc    eax,0x153352ff
   14004adc3:	call   QWORD PTR [rdx+0x33]
   14004adc6:	adc    eax,0x153352ff
   14004adcb:	jmp    FWORD PTR [rdx+0x3c]
   14004adce:	or     edi,edi
   14004add0:	push   0x3b
   14004add2:	or     edi,edi
   14004add4:	imul   edi,DWORD PTR [rbx],0x3b69ff09
   14004adda:	or     edi,edi
   14004addc:	push   0x68ff093a
   14004ade1:	cmp    cl,BYTE PTR [rcx]
   14004ade3:	jmp    QWORD PTR [rdi+0x3a]
   14004ade6:	or     edi,edi
   14004ade8:	cmp    DWORD PTR [ecx],ecx
   14004adeb:	jmp    QWORD PTR [rsi+0x39]
   14004adee:	or     edi,edi
   14004adf0:	cmp    WORD PTR [rcx],cx
   14004adf3:	jmp    QWORD PTR [rsi+0x39]
   14004adf6:	or     edi,edi
   14004adf8:	cmp    WORD PTR [rcx],cx
   14004adfb:	jmp    QWORD PTR [rsi+0x39]
   14004adfe:	or     edi,edi
   14004ae00:	cmp    WORD PTR [rcx],cx
   14004ae03:	jmp    QWORD PTR [rsi+0x39]
   14004ae06:	or     edi,edi
   14004ae08:	cmp    WORD PTR [rcx],cx
   14004ae0b:	jmp    QWORD PTR [rsi+0x39]
   14004ae0e:	or     edi,edi
   14004ae10:	cmp    WORD PTR [rcx],cx
   14004ae13:	jmp    QWORD PTR [rsi+0x39]
   14004ae16:	or     edi,edi
   14004ae18:	cmp    WORD PTR [rcx],cx
   14004ae1b:	jmp    QWORD PTR [rsi+0x39]
   14004ae1e:	or     edi,edi
   14004ae20:	cmp    WORD PTR [rcx],cx
   14004ae23:	jmp    QWORD PTR [rsi+0x39]
   14004ae26:	or     edi,edi
   14004ae28:	cmp    WORD PTR [rcx],cx
   14004ae2b:	jmp    QWORD PTR [rsi+0x39]
   14004ae2e:	or     edi,edi
   14004ae30:	cmp    WORD PTR [rcx],cx
   14004ae33:	jmp    QWORD PTR [rsi+0x39]
   14004ae36:	or     edi,edi
   14004ae38:	cmp    WORD PTR [rcx],cx
   14004ae3b:	jmp    QWORD PTR [rsi+0x39]
   14004ae3e:	or     edi,edi
   14004ae40:	cmp    WORD PTR [rcx],cx
   14004ae43:	add    BYTE PTR [rax],0x0
	...
   14004ae8a:	add    BYTE PTR [rax],al
   14004ae8c:	xchg   ebp,eax
   14004ae8d:	push   rbp
   14004ae8e:	add    al,0xdf
   14004ae90:	xchg   esp,eax
   14004ae91:	push   rbp
   14004ae92:	add    al,0xff
   14004ae94:	xchg   esp,eax
   14004ae95:	push   rsp
   14004ae96:	add    al,0xff
   14004ae98:	xchg   ebx,eax
   14004ae99:	push   rsp
   14004ae9a:	add    al,0xff
   14004ae9c:	xchg   ebx,eax
   14004ae9d:	push   rsp
   14004ae9e:	add    al,0xff
   14004aea0:	xchg   edx,eax
   14004aea1:	push   rbx
   14004aea2:	add    al,0xff
   14004aea4:	xchg   edx,eax
   14004aea5:	push   rbx
   14004aea6:	add    al,0xff
   14004aea8:	xchg   ecx,eax
   14004aea9:	push   rbx
   14004aeaa:	add    al,0xff
   14004aeac:	xchg   ecx,eax
   14004aead:	push   rdx
   14004aeae:	add    al,0xff
   14004aeb0:	nop
   14004aeb1:	push   rdx
   14004aeb2:	add    al,0xff
   14004aeb4:	nop
   14004aeb5:	push   rdx
   14004aeb6:	add    al,0xff
   14004aeb8:	(bad)  
   14004aeb9:	push   rdx
   14004aeba:	add    al,0xff
   14004aebc:	mov    ss,WORD PTR [rcx+0x4]
   14004aebf:	dec    DWORD PTR [rsi-0x7100fbaf]
   14004aec5:	push   rcx
   14004aec6:	add    al,0xff
   14004aec8:	lea    edx,[rax+0x4]
   14004aecb:	dec    DWORD PTR [rax+rdx*2+0x508cff05]
   14004aed2:	add    eax,0x54f8bff
   14004aed7:	dec    DWORD PTR [rbx-0x7500fab1]
   14004aedd:	rex.WRXB add rax,0x54e8aff
   14004aee3:	dec    DWORD PTR [rcx-0x7600fab2]
   14004aee9:	rex.WRX add rax,0x54d88ff
   14004aeef:	dec    DWORD PTR [rax-0x7800fab3]
   14004aef5:	rex.WRB add rax,0x54c87ff
   14004aefb:	inc    DWORD PTR [rsi-0x7a00fab4]
   14004af01:	rex.WR add rax,0x153352ff
   14004af07:	dec    ebp
   14004af09:	stos   BYTE PTR es:[rdi],al
   14004af0a:	ja     0x14004af0b
   14004af0c:	int    0xaa
   14004af0e:	ja     0x14004af0f
   14004af10:	int    0xaa
   14004af12:	ja     0x14004af13
   14004af14:	int    0xaa
   14004af16:	ja     0x14004af17
   14004af18:	int    0xaa
   14004af1a:	ja     0x14004af1b
   14004af1c:	int    0xaa
   14004af1e:	ja     0x14004af1f
   14004af20:	int    0xaa
   14004af22:	ja     0x14004af23
   14004af24:	int    0xaa
   14004af26:	ja     0x14004af27
   14004af28:	int    0xaa
   14004af2a:	ja     0x14004af2b
   14004af2c:	int    0xaa
   14004af2e:	ja     0x14004af2f
   14004af30:	int    0xaa
   14004af32:	ja     0x14004af33
   14004af34:	int    0xaa
   14004af36:	ja     0x14004af37
   14004af38:	int    0xaa
   14004af3a:	ja     0x14004af3b
   14004af3c:	int    0xaa
   14004af3e:	ja     0x14004af3f
   14004af40:	int    0xaa
   14004af42:	ja     0x14004af43
   14004af44:	int    0xaa
   14004af46:	ja     0x14004af47
   14004af48:	int    0xaa
   14004af4a:	ja     0x14004af4b
   14004af4c:	int    0xaa
   14004af4e:	ja     0x14004af4f
   14004af50:	int    0xaa
   14004af52:	ja     0x14004af53
   14004af54:	int    0xaa
   14004af56:	ja     0x14004af57
   14004af58:	int    0xaa
   14004af5a:	ja     0x14004af5b
   14004af5c:	int    0xaa
   14004af5e:	ja     0x14004af5f
   14004af60:	int    0xaa
   14004af62:	ja     0x14004af63
   14004af64:	int    0xaa
   14004af66:	ja     0x14004af67
   14004af68:	int    0xaa
   14004af6a:	ja     0x14004af6b
   14004af6c:	int    0xaa
   14004af6e:	ja     0x14004af6f
   14004af70:	int    0xaa
   14004af72:	ja     0x14004af73
   14004af74:	int    0xaa
   14004af76:	ja     0x14004af77
   14004af78:	int    0xaa
   14004af7a:	ja     0x14004af7b
   14004af7c:	int    0xaa
   14004af7e:	ja     0x14004af7f
   14004af80:	int    0xaa
   14004af82:	ja     0x14004af83
   14004af84:	int    0xaa
   14004af86:	ja     0x14004af87
   14004af88:	int    0xaa
   14004af8a:	ja     0x14004af8b
   14004af8c:	int    0xaa
   14004af8e:	ja     0x14004af8f
   14004af90:	int    0xaa
   14004af92:	ja     0x14004af93
   14004af94:	int    0xaa
   14004af96:	ja     0x14004af97
   14004af98:	int    0xaa
   14004af9a:	ja     0x14004af9b
   14004af9c:	int    0xaa
   14004af9e:	ja     0x14004af9f
   14004afa0:	int    0xaa
   14004afa2:	ja     0x14004afa3
   14004afa4:	int    0xaa
   14004afa6:	ja     0x14004afa7
   14004afa8:	int    0xaa
   14004afaa:	ja     0x14004afab
   14004afac:	int    0xaa
   14004afae:	ja     0x14004afaf
   14004afb0:	int    0xaa
   14004afb2:	ja     0x14004afb3
   14004afb4:	int    0xaa
   14004afb6:	ja     0x14004afb7
   14004afb8:	int    0xaa
   14004afba:	ja     0x14004afbb
   14004afbc:	int    0xaa
   14004afbe:	ja     0x14004afbf
   14004afc0:	int    0xaa
   14004afc2:	ja     0x14004afc3
   14004afc4:	int    0xaa
   14004afc6:	ja     0x14004afc7
   14004afc8:	push   rdx
   14004afc9:	xor    edx,DWORD PTR [rip+0x83c6bff]        # 0x148411bce
   14004afcf:	jmp    FWORD PTR [rdx+0x3c]
   14004afd2:	or     edi,edi
   14004afd4:	push   0x3b
   14004afd6:	or     edi,edi
   14004afd8:	imul   edi,DWORD PTR [rbx],0x3b69ff09
   14004afde:	or     edi,edi
   14004afe0:	push   0x68ff093a
   14004afe5:	cmp    cl,BYTE PTR [rcx]
   14004afe7:	jmp    QWORD PTR [rdi+0x3a]
   14004afea:	or     edi,edi
   14004afec:	cmp    DWORD PTR [ecx],ecx
   14004afef:	jmp    QWORD PTR [rsi+0x39]
   14004aff2:	or     edi,edi
   14004aff4:	cmp    WORD PTR [rcx],cx
   14004aff7:	jmp    QWORD PTR [rsi+0x39]
   14004affa:	or     edi,edi
   14004affc:	cmp    WORD PTR [rcx],cx
   14004afff:	jmp    QWORD PTR [rsi+0x39]
   14004b002:	or     edi,edi
   14004b004:	cmp    WORD PTR [rcx],cx
   14004b007:	jmp    QWORD PTR [rsi+0x39]
   14004b00a:	or     edi,edi
   14004b00c:	cmp    WORD PTR [rcx],cx
   14004b00f:	jmp    QWORD PTR [rsi+0x39]
   14004b012:	or     edi,edi
   14004b014:	cmp    WORD PTR [rcx],cx
   14004b017:	jmp    QWORD PTR [rsi+0x39]
   14004b01a:	or     edi,edi
   14004b01c:	cmp    WORD PTR [rcx],cx
   14004b01f:	jmp    QWORD PTR [rsi+0x39]
   14004b022:	or     edi,edi
   14004b024:	cmp    WORD PTR [rcx],cx
   14004b027:	jmp    QWORD PTR [rsi+0x39]
   14004b02a:	or     edi,edi
   14004b02c:	cmp    WORD PTR [rcx],cx
   14004b02f:	jmp    QWORD PTR [rsi+0x39]
   14004b032:	or     edi,edi
   14004b034:	cmp    WORD PTR [rcx],cx
   14004b037:	jmp    QWORD PTR [rsi+0x39]
   14004b03a:	or     edi,edi
   14004b03c:	cmp    WORD PTR [rcx],cx
   14004b03f:	jmp    QWORD PTR [rsi+0x39]
   14004b042:	or     edi,ebx
	...
   14004b088:	xchg   esi,eax
   14004b089:	push   rsi
   14004b08a:	add    eax,DWORD PTR [rax-0x6b]
   14004b08d:	push   rbp
   14004b08e:	add    edi,edi
   14004b090:	xchg   ebp,eax
   14004b091:	push   rbp
   14004b092:	add    al,0xff
   14004b094:	xchg   esp,eax
   14004b095:	push   rbp
   14004b096:	add    al,0xff
   14004b098:	xchg   esp,eax
   14004b099:	push   rsp
   14004b09a:	add    al,0xff
   14004b09c:	xchg   ebx,eax
   14004b09d:	push   rsp
   14004b09e:	add    al,0xff
   14004b0a0:	xchg   ebx,eax
   14004b0a1:	push   rsp
   14004b0a2:	add    al,0xff
   14004b0a4:	xchg   edx,eax
   14004b0a5:	push   rbx
   14004b0a6:	add    al,0xff
   14004b0a8:	xchg   edx,eax
   14004b0a9:	push   rbx
   14004b0aa:	add    al,0xff
   14004b0ac:	xchg   ecx,eax
   14004b0ad:	push   rbx
   14004b0ae:	add    al,0xff
   14004b0b0:	xchg   ecx,eax
   14004b0b1:	push   rdx
   14004b0b2:	add    al,0xff
   14004b0b4:	nop
   14004b0b5:	push   rdx
   14004b0b6:	add    al,0xff
   14004b0b8:	nop
   14004b0b9:	push   rdx
   14004b0ba:	add    al,0xff
   14004b0bc:	(bad)  
   14004b0bd:	push   rdx
   14004b0be:	add    al,0xff
   14004b0c0:	mov    ss,WORD PTR [rcx+0x4]
   14004b0c3:	dec    DWORD PTR [rsi-0x7100fbaf]
   14004b0c9:	push   rcx
   14004b0ca:	add    al,0xff
   14004b0cc:	lea    edx,[rax+0x4]
   14004b0cf:	dec    DWORD PTR [rax+rdx*2+0x508cff05]
   14004b0d6:	add    eax,0x54f8bff
   14004b0db:	dec    DWORD PTR [rbx-0x7500fab1]
   14004b0e1:	rex.WRXB add rax,0x54e8aff
   14004b0e7:	dec    DWORD PTR [rcx-0x7600fab2]
   14004b0ed:	rex.WRX add rax,0x54d88ff
   14004b0f3:	dec    DWORD PTR [rax-0x7800fab3]
   14004b0f9:	rex.WRB add rax,0x54c87ff
   14004b0ff:	inc    DWORD PTR [rsi+0x52ff054c]
   14004b105:	xor    edx,DWORD PTR [rip+0x78abceff]        # 0x1b8b0800a
   14004b10b:	dec    esi
   14004b10d:	stos   DWORD PTR es:[rdi],eax
   14004b10e:	js     0x14004b10f
   14004b110:	(bad)  
   14004b111:	stos   DWORD PTR es:[rdi],eax
   14004b112:	js     0x14004b113
   14004b114:	(bad)  
   14004b115:	stos   DWORD PTR es:[rdi],eax
   14004b116:	js     0x14004b117
   14004b118:	(bad)  
   14004b119:	stos   DWORD PTR es:[rdi],eax
   14004b11a:	js     0x14004b11b
   14004b11c:	(bad)  
   14004b11d:	stos   DWORD PTR es:[rdi],eax
   14004b11e:	js     0x14004b11f
   14004b120:	(bad)  
   14004b121:	stos   DWORD PTR es:[rdi],eax
   14004b122:	js     0x14004b123
   14004b124:	(bad)  
   14004b125:	stos   DWORD PTR es:[rdi],eax
   14004b126:	js     0x14004b127
   14004b128:	(bad)  
   14004b129:	stos   DWORD PTR es:[rdi],eax
   14004b12a:	js     0x14004b12b
   14004b12c:	(bad)  
   14004b12d:	stos   DWORD PTR es:[rdi],eax
   14004b12e:	js     0x14004b12f
   14004b130:	(bad)  
   14004b131:	stos   DWORD PTR es:[rdi],eax
   14004b132:	js     0x14004b133
   14004b134:	(bad)  
   14004b135:	stos   DWORD PTR es:[rdi],eax
   14004b136:	js     0x14004b137
   14004b138:	(bad)  
   14004b139:	stos   DWORD PTR es:[rdi],eax
   14004b13a:	js     0x14004b13b
   14004b13c:	(bad)  
   14004b13d:	stos   DWORD PTR es:[rdi],eax
   14004b13e:	js     0x14004b13f
   14004b140:	(bad)  
   14004b141:	stos   DWORD PTR es:[rdi],eax
   14004b142:	js     0x14004b143
   14004b144:	(bad)  
   14004b145:	stos   DWORD PTR es:[rdi],eax
   14004b146:	js     0x14004b147
   14004b148:	(bad)  
   14004b149:	stos   DWORD PTR es:[rdi],eax
   14004b14a:	js     0x14004b14b
   14004b14c:	(bad)  
   14004b14d:	stos   DWORD PTR es:[rdi],eax
   14004b14e:	js     0x14004b14f
   14004b150:	(bad)  
   14004b151:	stos   DWORD PTR es:[rdi],eax
   14004b152:	js     0x14004b153
   14004b154:	(bad)  
   14004b155:	stos   DWORD PTR es:[rdi],eax
   14004b156:	js     0x14004b157
   14004b158:	(bad)  
   14004b159:	stos   DWORD PTR es:[rdi],eax
   14004b15a:	js     0x14004b15b
   14004b15c:	(bad)  
   14004b15d:	stos   DWORD PTR es:[rdi],eax
   14004b15e:	js     0x14004b15f
   14004b160:	(bad)  
   14004b161:	stos   DWORD PTR es:[rdi],eax
   14004b162:	js     0x14004b163
   14004b164:	(bad)  
   14004b165:	stos   DWORD PTR es:[rdi],eax
   14004b166:	js     0x14004b167
   14004b168:	(bad)  
   14004b169:	stos   DWORD PTR es:[rdi],eax
   14004b16a:	js     0x14004b16b
   14004b16c:	(bad)  
   14004b16d:	stos   DWORD PTR es:[rdi],eax
   14004b16e:	js     0x14004b16f
   14004b170:	(bad)  
   14004b171:	stos   DWORD PTR es:[rdi],eax
   14004b172:	js     0x14004b173
   14004b174:	(bad)  
   14004b175:	stos   DWORD PTR es:[rdi],eax
   14004b176:	js     0x14004b177
   14004b178:	(bad)  
   14004b179:	stos   DWORD PTR es:[rdi],eax
   14004b17a:	js     0x14004b17b
   14004b17c:	(bad)  
   14004b17d:	stos   DWORD PTR es:[rdi],eax
   14004b17e:	js     0x14004b17f
   14004b180:	(bad)  
   14004b181:	stos   DWORD PTR es:[rdi],eax
   14004b182:	js     0x14004b183
   14004b184:	(bad)  
   14004b185:	stos   DWORD PTR es:[rdi],eax
   14004b186:	js     0x14004b187
   14004b188:	(bad)  
   14004b189:	stos   DWORD PTR es:[rdi],eax
   14004b18a:	js     0x14004b18b
   14004b18c:	(bad)  
   14004b18d:	stos   DWORD PTR es:[rdi],eax
   14004b18e:	js     0x14004b18f
   14004b190:	(bad)  
   14004b191:	stos   DWORD PTR es:[rdi],eax
   14004b192:	js     0x14004b193
   14004b194:	(bad)  
   14004b195:	stos   DWORD PTR es:[rdi],eax
   14004b196:	js     0x14004b197
   14004b198:	(bad)  
   14004b199:	stos   DWORD PTR es:[rdi],eax
   14004b19a:	js     0x14004b19b
   14004b19c:	(bad)  
   14004b19d:	stos   DWORD PTR es:[rdi],eax
   14004b19e:	js     0x14004b19f
   14004b1a0:	(bad)  
   14004b1a1:	stos   DWORD PTR es:[rdi],eax
   14004b1a2:	js     0x14004b1a3
   14004b1a4:	(bad)  
   14004b1a5:	stos   DWORD PTR es:[rdi],eax
   14004b1a6:	js     0x14004b1a7
   14004b1a8:	(bad)  
   14004b1a9:	stos   DWORD PTR es:[rdi],eax
   14004b1aa:	js     0x14004b1ab
   14004b1ac:	(bad)  
   14004b1ad:	stos   DWORD PTR es:[rdi],eax
   14004b1ae:	js     0x14004b1af
   14004b1b0:	(bad)  
   14004b1b1:	stos   DWORD PTR es:[rdi],eax
   14004b1b2:	js     0x14004b1b3
   14004b1b4:	(bad)  
   14004b1b5:	stos   DWORD PTR es:[rdi],eax
   14004b1b6:	js     0x14004b1b7
   14004b1b8:	(bad)  
   14004b1b9:	stos   DWORD PTR es:[rdi],eax
   14004b1ba:	js     0x14004b1bb
   14004b1bc:	(bad)  
   14004b1bd:	stos   DWORD PTR es:[rdi],eax
   14004b1be:	js     0x14004b1bf
   14004b1c0:	(bad)  
   14004b1c1:	stos   DWORD PTR es:[rdi],eax
   14004b1c2:	js     0x14004b1c3
   14004b1c4:	(bad)  
   14004b1c5:	stos   DWORD PTR es:[rdi],eax
   14004b1c6:	js     0x14004b1c7
   14004b1c8:	push   rdx
   14004b1c9:	xor    edx,DWORD PTR [rip+0x83c6bff]        # 0x148411dce
   14004b1cf:	jmp    FWORD PTR [rbx+0x3c]
   14004b1d2:	or     bh,bh
   14004b1d4:	push   0x3c
   14004b1d6:	or     edi,edi
   14004b1d8:	push   0x3b
   14004b1da:	or     edi,edi
   14004b1dc:	imul   edi,DWORD PTR [rbx],0x3b69ff09
   14004b1e2:	or     edi,edi
   14004b1e4:	push   0x68ff093a
   14004b1e9:	cmp    cl,BYTE PTR [rcx]
   14004b1eb:	jmp    QWORD PTR [rdi+0x3a]
   14004b1ee:	or     edi,edi
   14004b1f0:	cmp    DWORD PTR [ecx],ecx
   14004b1f3:	jmp    QWORD PTR [rsi+0x39]
   14004b1f6:	or     edi,edi
   14004b1f8:	cmp    WORD PTR [rcx],cx
   14004b1fb:	jmp    QWORD PTR [rsi+0x39]
   14004b1fe:	or     edi,edi
   14004b200:	cmp    WORD PTR [rcx],cx
   14004b203:	jmp    QWORD PTR [rsi+0x39]
   14004b206:	or     edi,edi
   14004b208:	cmp    WORD PTR [rcx],cx
   14004b20b:	jmp    QWORD PTR [rsi+0x39]
   14004b20e:	or     edi,edi
   14004b210:	cmp    WORD PTR [rcx],cx
   14004b213:	jmp    QWORD PTR [rsi+0x39]
   14004b216:	or     edi,edi
   14004b218:	cmp    WORD PTR [rcx],cx
   14004b21b:	jmp    QWORD PTR [rsi+0x39]
   14004b21e:	or     edi,edi
   14004b220:	cmp    WORD PTR [rcx],cx
   14004b223:	jmp    QWORD PTR [rsi+0x39]
   14004b226:	or     edi,edi
   14004b228:	cmp    WORD PTR [rcx],cx
   14004b22b:	jmp    QWORD PTR [rsi+0x39]
   14004b22e:	or     edi,edi
   14004b230:	cmp    WORD PTR [rcx],cx
   14004b233:	jmp    QWORD PTR [rsi+0x39]
   14004b236:	or     edi,edi
   14004b238:	cmp    WORD PTR [rcx],cx
   14004b23b:	jmp    QWORD PTR [rsi+0x39]
   14004b23e:	or     edi,edi
   14004b240:	cmp    WORD PTR [rcx],cx
   14004b243:	jmp    QWORD PTR [rsi+0x39]
   14004b246:	or     DWORD PTR [rax+0x0],eax
	...
   14004b285:	add    BYTE PTR [rax],al
   14004b287:	add    BYTE PTR [rsi-0x6970fcaa],dl
   14004b28d:	push   rsi
   14004b28e:	add    edi,edi
   14004b290:	xchg   ebp,eax
   14004b291:	push   rbp
   14004b292:	add    edi,edi
   14004b294:	xchg   ebp,eax
   14004b295:	push   rbp
   14004b296:	add    al,0xff
   14004b298:	xchg   esp,eax
   14004b299:	push   rbp
   14004b29a:	add    al,0xff
   14004b29c:	xchg   esp,eax
   14004b29d:	push   rsp
   14004b29e:	add    al,0xff
   14004b2a0:	xchg   ebx,eax
   14004b2a1:	push   rsp
   14004b2a2:	add    al,0xff
   14004b2a4:	xchg   ebx,eax
   14004b2a5:	push   rsp
   14004b2a6:	add    al,0xff
   14004b2a8:	xchg   edx,eax
   14004b2a9:	push   rbx
   14004b2aa:	add    al,0xff
   14004b2ac:	xchg   edx,eax
   14004b2ad:	push   rbx
   14004b2ae:	add    al,0xff
   14004b2b0:	xchg   ecx,eax
   14004b2b1:	push   rbx
   14004b2b2:	add    al,0xff
   14004b2b4:	xchg   ecx,eax
   14004b2b5:	push   rdx
   14004b2b6:	add    al,0xff
   14004b2b8:	nop
   14004b2b9:	push   rdx
   14004b2ba:	add    al,0xff
   14004b2bc:	nop
   14004b2bd:	push   rdx
   14004b2be:	add    al,0xff
   14004b2c0:	(bad)  
   14004b2c1:	push   rdx
   14004b2c2:	add    al,0xff
   14004b2c4:	mov    ss,WORD PTR [rcx+0x4]
   14004b2c7:	dec    DWORD PTR [rsi-0x7100fbaf]
   14004b2cd:	push   rcx
   14004b2ce:	add    al,0xff
   14004b2d0:	lea    edx,[rax+0x4]
   14004b2d3:	dec    DWORD PTR [rax+rdx*2+0x508cff05]
   14004b2da:	add    eax,0x54f8bff
   14004b2df:	dec    DWORD PTR [rbx-0x7500fab1]
   14004b2e5:	rex.WRXB add rax,0x54e8aff
   14004b2eb:	dec    DWORD PTR [rcx-0x7600fab2]
   14004b2f1:	rex.WRX add rax,0x54d88ff
   14004b2f7:	dec    DWORD PTR [rax-0x7800fab3]
   14004b2fd:	rex.WRB add rax,0x54c87ff
   14004b303:	call   QWORD PTR [rdx+0x33]
   14004b306:	adc    eax,0x79acceff
   14004b30b:	dec    esi
   14004b30d:	lods   al,BYTE PTR ds:[rsi]
   14004b30e:	jns    0x14004b30f
   14004b310:	(bad)  
   14004b311:	lods   al,BYTE PTR ds:[rsi]
   14004b312:	jns    0x14004b313
   14004b314:	(bad)  
   14004b315:	lods   al,BYTE PTR ds:[rsi]
   14004b316:	jns    0x14004b317
   14004b318:	(bad)  
   14004b319:	lods   al,BYTE PTR ds:[rsi]
   14004b31a:	jns    0x14004b31b
   14004b31c:	(bad)  
   14004b31d:	lods   al,BYTE PTR ds:[rsi]
   14004b31e:	jns    0x14004b31f
   14004b320:	(bad)  
   14004b321:	lods   al,BYTE PTR ds:[rsi]
   14004b322:	jns    0x14004b323
   14004b324:	(bad)  
   14004b325:	lods   al,BYTE PTR ds:[rsi]
   14004b326:	jns    0x14004b327
   14004b328:	(bad)  
   14004b329:	lods   al,BYTE PTR ds:[rsi]
   14004b32a:	jns    0x14004b32b
   14004b32c:	(bad)  
   14004b32d:	lods   al,BYTE PTR ds:[rsi]
   14004b32e:	jns    0x14004b32f
   14004b330:	(bad)  
   14004b331:	lods   al,BYTE PTR ds:[rsi]
   14004b332:	jns    0x14004b333
   14004b334:	(bad)  
   14004b335:	lods   al,BYTE PTR ds:[rsi]
   14004b336:	jns    0x14004b337
   14004b338:	(bad)  
   14004b339:	lods   al,BYTE PTR ds:[rsi]
   14004b33a:	jns    0x14004b33b
   14004b33c:	(bad)  
   14004b33d:	lods   al,BYTE PTR ds:[rsi]
   14004b33e:	jns    0x14004b33f
   14004b340:	(bad)  
   14004b341:	lods   al,BYTE PTR ds:[rsi]
   14004b342:	jns    0x14004b343
   14004b344:	(bad)  
   14004b345:	lods   al,BYTE PTR ds:[rsi]
   14004b346:	jns    0x14004b347
   14004b348:	(bad)  
   14004b349:	lods   al,BYTE PTR ds:[rsi]
   14004b34a:	jns    0x14004b34b
   14004b34c:	(bad)  
   14004b34d:	lods   al,BYTE PTR ds:[rsi]
   14004b34e:	jns    0x14004b34f
   14004b350:	(bad)  
   14004b351:	lods   al,BYTE PTR ds:[rsi]
   14004b352:	jns    0x14004b353
   14004b354:	(bad)  
   14004b355:	lods   al,BYTE PTR ds:[rsi]
   14004b356:	jns    0x14004b357
   14004b358:	(bad)  
   14004b359:	lods   al,BYTE PTR ds:[rsi]
   14004b35a:	jns    0x14004b35b
   14004b35c:	(bad)  
   14004b35d:	lods   al,BYTE PTR ds:[rsi]
   14004b35e:	jns    0x14004b35f
   14004b360:	(bad)  
   14004b361:	lods   al,BYTE PTR ds:[rsi]
   14004b362:	jns    0x14004b363
   14004b364:	(bad)  
   14004b365:	lods   al,BYTE PTR ds:[rsi]
   14004b366:	jns    0x14004b367
   14004b368:	(bad)  
   14004b369:	lods   al,BYTE PTR ds:[rsi]
   14004b36a:	jns    0x14004b36b
   14004b36c:	(bad)  
   14004b36d:	lods   al,BYTE PTR ds:[rsi]
   14004b36e:	jns    0x14004b36f
   14004b370:	(bad)  
   14004b371:	lods   al,BYTE PTR ds:[rsi]
   14004b372:	jns    0x14004b373
   14004b374:	(bad)  
   14004b375:	lods   al,BYTE PTR ds:[rsi]
   14004b376:	jns    0x14004b377
   14004b378:	(bad)  
   14004b379:	lods   al,BYTE PTR ds:[rsi]
   14004b37a:	jns    0x14004b37b
   14004b37c:	(bad)  
   14004b37d:	lods   al,BYTE PTR ds:[rsi]
   14004b37e:	jns    0x14004b37f
   14004b380:	(bad)  
   14004b381:	lods   al,BYTE PTR ds:[rsi]
   14004b382:	jns    0x14004b383
   14004b384:	(bad)  
   14004b385:	lods   al,BYTE PTR ds:[rsi]
   14004b386:	jns    0x14004b387
   14004b388:	(bad)  
   14004b389:	lods   al,BYTE PTR ds:[rsi]
   14004b38a:	jns    0x14004b38b
   14004b38c:	(bad)  
   14004b38d:	lods   al,BYTE PTR ds:[rsi]
   14004b38e:	jns    0x14004b38f
   14004b390:	(bad)  
   14004b391:	lods   al,BYTE PTR ds:[rsi]
   14004b392:	jns    0x14004b393
   14004b394:	(bad)  
   14004b395:	lods   al,BYTE PTR ds:[rsi]
   14004b396:	jns    0x14004b397
   14004b398:	(bad)  
   14004b399:	lods   al,BYTE PTR ds:[rsi]
   14004b39a:	jns    0x14004b39b
   14004b39c:	(bad)  
   14004b39d:	lods   al,BYTE PTR ds:[rsi]
   14004b39e:	jns    0x14004b39f
   14004b3a0:	(bad)  
   14004b3a1:	lods   al,BYTE PTR ds:[rsi]
   14004b3a2:	jns    0x14004b3a3
   14004b3a4:	(bad)  
   14004b3a5:	lods   al,BYTE PTR ds:[rsi]
   14004b3a6:	jns    0x14004b3a7
   14004b3a8:	(bad)  
   14004b3a9:	lods   al,BYTE PTR ds:[rsi]
   14004b3aa:	jns    0x14004b3ab
   14004b3ac:	(bad)  
   14004b3ad:	lods   al,BYTE PTR ds:[rsi]
   14004b3ae:	jns    0x14004b3af
   14004b3b0:	(bad)  
   14004b3b1:	lods   al,BYTE PTR ds:[rsi]
   14004b3b2:	jns    0x14004b3b3
   14004b3b4:	(bad)  
   14004b3b5:	lods   al,BYTE PTR ds:[rsi]
   14004b3b6:	jns    0x14004b3b7
   14004b3b8:	(bad)  
   14004b3b9:	lods   al,BYTE PTR ds:[rsi]
   14004b3ba:	jns    0x14004b3bb
   14004b3bc:	(bad)  
   14004b3bd:	lods   al,BYTE PTR ds:[rsi]
   14004b3be:	jns    0x14004b3bf
   14004b3c0:	(bad)  
   14004b3c1:	lods   al,BYTE PTR ds:[rsi]
   14004b3c2:	jns    0x14004b3c3
   14004b3c4:	(bad)  
   14004b3c5:	lods   al,BYTE PTR ds:[rsi]
   14004b3c6:	jns    0x14004b3c7
   14004b3c8:	push   rdx
   14004b3c9:	xor    edx,DWORD PTR [rip+0x83c6cff]        # 0x1484120ce
   14004b3cf:	jmp    FWORD PTR [rbx+0x3c]
   14004b3d2:	or     bh,bh
   14004b3d4:	imul   edi,DWORD PTR [rax+rcx*1],0xffffffff
   14004b3d8:	push   0x3c
   14004b3da:	or     edi,edi
   14004b3dc:	push   0x3b
   14004b3de:	or     edi,edi
   14004b3e0:	imul   edi,DWORD PTR [rbx],0x3b69ff09
   14004b3e6:	or     edi,edi
   14004b3e8:	push   0x68ff093a
   14004b3ed:	cmp    cl,BYTE PTR [rcx]
   14004b3ef:	jmp    QWORD PTR [rdi+0x3a]
   14004b3f2:	or     edi,edi
   14004b3f4:	cmp    DWORD PTR [ecx],ecx
   14004b3f7:	jmp    QWORD PTR [rsi+0x39]
   14004b3fa:	or     edi,edi
   14004b3fc:	cmp    WORD PTR [rcx],cx
   14004b3ff:	jmp    QWORD PTR [rsi+0x39]
   14004b402:	or     edi,edi
   14004b404:	cmp    WORD PTR [rcx],cx
   14004b407:	jmp    QWORD PTR [rsi+0x39]
   14004b40a:	or     edi,edi
   14004b40c:	cmp    WORD PTR [rcx],cx
   14004b40f:	jmp    QWORD PTR [rsi+0x39]
   14004b412:	or     edi,edi
   14004b414:	cmp    WORD PTR [rcx],cx
   14004b417:	jmp    QWORD PTR [rsi+0x39]
   14004b41a:	or     edi,edi
   14004b41c:	cmp    WORD PTR [rcx],cx
   14004b41f:	jmp    QWORD PTR [rsi+0x39]
   14004b422:	or     edi,edi
   14004b424:	cmp    WORD PTR [rcx],cx
   14004b427:	jmp    QWORD PTR [rsi+0x39]
   14004b42a:	or     edi,edi
   14004b42c:	cmp    WORD PTR [rcx],cx
   14004b42f:	jmp    QWORD PTR [rsi+0x39]
   14004b432:	or     edi,edi
   14004b434:	cmp    WORD PTR [rcx],cx
   14004b437:	jmp    QWORD PTR [rsi+0x39]
   14004b43a:	or     edi,edi
   14004b43c:	cmp    WORD PTR [rcx],cx
   14004b43f:	jmp    QWORD PTR [rsi+0x39]
   14004b442:	or     edi,edi
   14004b444:	cmp    WORD PTR [rcx],cx
   14004b447:	pop    QWORD PTR [rax]
	...
   14004b485:	add    BYTE PTR [rax],al
   14004b487:	add    BYTE PTR [rdi-0x6940fcaa],dl
   14004b48d:	push   rsi
   14004b48e:	add    edi,edi
   14004b490:	xchg   esi,eax
   14004b491:	push   rsi
   14004b492:	add    edi,edi
   14004b494:	xchg   ebp,eax
   14004b495:	push   rbp
   14004b496:	add    edi,edi
   14004b498:	xchg   ebp,eax
   14004b499:	push   rbp
   14004b49a:	add    al,0xff
   14004b49c:	xchg   esp,eax
   14004b49d:	push   rbp
   14004b49e:	add    al,0xff
   14004b4a0:	xchg   esp,eax
   14004b4a1:	push   rsp
   14004b4a2:	add    al,0xff
   14004b4a4:	xchg   ebx,eax
   14004b4a5:	push   rsp
   14004b4a6:	add    al,0xff
   14004b4a8:	xchg   ebx,eax
   14004b4a9:	push   rsp
   14004b4aa:	add    al,0xff
   14004b4ac:	xchg   edx,eax
   14004b4ad:	push   rbx
   14004b4ae:	add    al,0xff
   14004b4b0:	xchg   edx,eax
   14004b4b1:	push   rbx
   14004b4b2:	add    al,0xff
   14004b4b4:	xchg   ecx,eax
   14004b4b5:	push   rbx
   14004b4b6:	add    al,0xff
   14004b4b8:	xchg   ecx,eax
   14004b4b9:	push   rdx
   14004b4ba:	add    al,0xff
   14004b4bc:	nop
   14004b4bd:	push   rdx
   14004b4be:	add    al,0xff
   14004b4c0:	nop
   14004b4c1:	push   rdx
   14004b4c2:	add    al,0xff
   14004b4c4:	(bad)  
   14004b4c5:	push   rdx
   14004b4c6:	add    al,0xff
   14004b4c8:	mov    ss,WORD PTR [rcx+0x4]
   14004b4cb:	dec    DWORD PTR [rsi-0x7100fbaf]
   14004b4d1:	push   rcx
   14004b4d2:	add    al,0xff
   14004b4d4:	lea    edx,[rax+0x4]
   14004b4d7:	dec    DWORD PTR [rax+rdx*2+0x508cff05]
   14004b4de:	add    eax,0x54f8bff
   14004b4e3:	dec    DWORD PTR [rbx-0x7500fab1]
   14004b4e9:	rex.WRXB add rax,0x54e8aff
   14004b4ef:	dec    DWORD PTR [rcx-0x7600fab2]
   14004b4f5:	rex.WRX add rax,0x54d88ff
   14004b4fb:	dec    DWORD PTR [rax-0x7800fab3]
   14004b501:	rex.WRB add rax,0x153352ff
   14004b507:	dec    edi
   14004b509:	lods   eax,DWORD PTR ds:[rsi]
   14004b50a:	jp     0x14004b50b
   14004b50c:	iret   
   14004b50d:	lods   eax,DWORD PTR ds:[rsi]
   14004b50e:	jp     0x14004b50f
   14004b510:	iret   
   14004b511:	lods   eax,DWORD PTR ds:[rsi]
   14004b512:	jp     0x14004b513
   14004b514:	iret   
   14004b515:	lods   eax,DWORD PTR ds:[rsi]
   14004b516:	jp     0x14004b517
   14004b518:	iret   
   14004b519:	lods   eax,DWORD PTR ds:[rsi]
   14004b51a:	jp     0x14004b51b
   14004b51c:	iret   
   14004b51d:	lods   eax,DWORD PTR ds:[rsi]
   14004b51e:	jp     0x14004b51f
   14004b520:	iret   
   14004b521:	lods   eax,DWORD PTR ds:[rsi]
   14004b522:	jp     0x14004b523
   14004b524:	iret   
   14004b525:	lods   eax,DWORD PTR ds:[rsi]
   14004b526:	jp     0x14004b527
   14004b528:	iret   
   14004b529:	lods   eax,DWORD PTR ds:[rsi]
   14004b52a:	jp     0x14004b52b
   14004b52c:	iret   
   14004b52d:	lods   eax,DWORD PTR ds:[rsi]
   14004b52e:	jp     0x14004b52f
   14004b530:	iret   
   14004b531:	lods   eax,DWORD PTR ds:[rsi]
   14004b532:	jp     0x14004b533
   14004b534:	iret   
   14004b535:	lods   eax,DWORD PTR ds:[rsi]
   14004b536:	jp     0x14004b537
   14004b538:	iret   
   14004b539:	lods   eax,DWORD PTR ds:[rsi]
   14004b53a:	jp     0x14004b53b
   14004b53c:	iret   
   14004b53d:	lods   eax,DWORD PTR ds:[rsi]
   14004b53e:	jp     0x14004b53f
   14004b540:	iret   
   14004b541:	lods   eax,DWORD PTR ds:[rsi]
   14004b542:	jp     0x14004b543
   14004b544:	iret   
   14004b545:	lods   eax,DWORD PTR ds:[rsi]
   14004b546:	jp     0x14004b547
   14004b548:	iret   
   14004b549:	lods   eax,DWORD PTR ds:[rsi]
   14004b54a:	jp     0x14004b54b
   14004b54c:	iret   
   14004b54d:	lods   eax,DWORD PTR ds:[rsi]
   14004b54e:	jp     0x14004b54f
   14004b550:	iret   
   14004b551:	lods   eax,DWORD PTR ds:[rsi]
   14004b552:	jp     0x14004b553
   14004b554:	iret   
   14004b555:	lods   eax,DWORD PTR ds:[rsi]
   14004b556:	jp     0x14004b557
   14004b558:	iret   
   14004b559:	lods   eax,DWORD PTR ds:[rsi]
   14004b55a:	jp     0x14004b55b
   14004b55c:	iret   
   14004b55d:	lods   eax,DWORD PTR ds:[rsi]
   14004b55e:	jp     0x14004b55f
   14004b560:	iret   
   14004b561:	lods   eax,DWORD PTR ds:[rsi]
   14004b562:	jp     0x14004b563
   14004b564:	iret   
   14004b565:	lods   eax,DWORD PTR ds:[rsi]
   14004b566:	jp     0x14004b567
   14004b568:	iret   
   14004b569:	lods   eax,DWORD PTR ds:[rsi]
   14004b56a:	jp     0x14004b56b
   14004b56c:	iret   
   14004b56d:	lods   eax,DWORD PTR ds:[rsi]
   14004b56e:	jp     0x14004b56f
   14004b570:	iret   
   14004b571:	lods   eax,DWORD PTR ds:[rsi]
   14004b572:	jp     0x14004b573
   14004b574:	iret   
   14004b575:	lods   eax,DWORD PTR ds:[rsi]
   14004b576:	jp     0x14004b577
   14004b578:	iret   
   14004b579:	lods   eax,DWORD PTR ds:[rsi]
   14004b57a:	jp     0x14004b57b
   14004b57c:	iret   
   14004b57d:	lods   eax,DWORD PTR ds:[rsi]
   14004b57e:	jp     0x14004b57f
   14004b580:	iret   
   14004b581:	lods   eax,DWORD PTR ds:[rsi]
   14004b582:	jp     0x14004b583
   14004b584:	iret   
   14004b585:	lods   eax,DWORD PTR ds:[rsi]
   14004b586:	jp     0x14004b587
   14004b588:	iret   
   14004b589:	lods   eax,DWORD PTR ds:[rsi]
   14004b58a:	jp     0x14004b58b
   14004b58c:	iret   
   14004b58d:	lods   eax,DWORD PTR ds:[rsi]
   14004b58e:	jp     0x14004b58f
   14004b590:	iret   
   14004b591:	lods   eax,DWORD PTR ds:[rsi]
   14004b592:	jp     0x14004b593
   14004b594:	iret   
   14004b595:	lods   eax,DWORD PTR ds:[rsi]
   14004b596:	jp     0x14004b597
   14004b598:	iret   
   14004b599:	lods   eax,DWORD PTR ds:[rsi]
   14004b59a:	jp     0x14004b59b
   14004b59c:	iret   
   14004b59d:	lods   eax,DWORD PTR ds:[rsi]
   14004b59e:	jp     0x14004b59f
   14004b5a0:	iret   
   14004b5a1:	lods   eax,DWORD PTR ds:[rsi]
   14004b5a2:	jp     0x14004b5a3
   14004b5a4:	iret   
   14004b5a5:	lods   eax,DWORD PTR ds:[rsi]
   14004b5a6:	jp     0x14004b5a7
   14004b5a8:	iret   
   14004b5a9:	lods   eax,DWORD PTR ds:[rsi]
   14004b5aa:	jp     0x14004b5ab
   14004b5ac:	iret   
   14004b5ad:	lods   eax,DWORD PTR ds:[rsi]
   14004b5ae:	jp     0x14004b5af
   14004b5b0:	iret   
   14004b5b1:	lods   eax,DWORD PTR ds:[rsi]
   14004b5b2:	jp     0x14004b5b3
   14004b5b4:	iret   
   14004b5b5:	lods   eax,DWORD PTR ds:[rsi]
   14004b5b6:	jp     0x14004b5b7
   14004b5b8:	iret   
   14004b5b9:	lods   eax,DWORD PTR ds:[rsi]
   14004b5ba:	jp     0x14004b5bb
   14004b5bc:	iret   
   14004b5bd:	lods   eax,DWORD PTR ds:[rsi]
   14004b5be:	jp     0x14004b5bf
   14004b5c0:	iret   
   14004b5c1:	lods   eax,DWORD PTR ds:[rsi]
   14004b5c2:	jp     0x14004b5c3
   14004b5c4:	iret   
   14004b5c5:	lods   eax,DWORD PTR ds:[rsi]
   14004b5c6:	jp     0x14004b5c7
   14004b5c8:	push   rdx
   14004b5c9:	xor    edx,DWORD PTR [rip+0x83d6cff]        # 0x1484222ce
   14004b5cf:	jmp    FWORD PTR [rsp+rdi*1+0x8]
   14004b5d3:	jmp    FWORD PTR [rbx+0x3c]
   14004b5d6:	or     bh,bh
   14004b5d8:	imul   edi,DWORD PTR [rax+rcx*1],0xffffffff
   14004b5dc:	push   0x3c
   14004b5de:	or     edi,edi
   14004b5e0:	push   0x3b
   14004b5e2:	or     edi,edi
   14004b5e4:	imul   edi,DWORD PTR [rbx],0x3b69ff09
   14004b5ea:	or     edi,edi
   14004b5ec:	push   0x68ff093a
   14004b5f1:	cmp    cl,BYTE PTR [rcx]
   14004b5f3:	jmp    QWORD PTR [rdi+0x3a]
   14004b5f6:	or     edi,edi
   14004b5f8:	cmp    DWORD PTR [ecx],ecx
   14004b5fb:	jmp    QWORD PTR [rsi+0x39]
   14004b5fe:	or     edi,edi
   14004b600:	cmp    WORD PTR [rcx],cx
   14004b603:	jmp    QWORD PTR [rsi+0x39]
   14004b606:	or     edi,edi
   14004b608:	cmp    WORD PTR [rcx],cx
   14004b60b:	jmp    QWORD PTR [rsi+0x39]
   14004b60e:	or     edi,edi
   14004b610:	cmp    WORD PTR [rcx],cx
   14004b613:	jmp    QWORD PTR [rsi+0x39]
   14004b616:	or     edi,edi
   14004b618:	cmp    WORD PTR [rcx],cx
   14004b61b:	jmp    QWORD PTR [rsi+0x39]
   14004b61e:	or     edi,edi
   14004b620:	cmp    WORD PTR [rcx],cx
   14004b623:	jmp    QWORD PTR [rsi+0x39]
   14004b626:	or     edi,edi
   14004b628:	cmp    WORD PTR [rcx],cx
   14004b62b:	jmp    QWORD PTR [rsi+0x39]
   14004b62e:	or     edi,edi
   14004b630:	cmp    WORD PTR [rcx],cx
   14004b633:	jmp    QWORD PTR [rsi+0x39]
   14004b636:	or     edi,edi
   14004b638:	cmp    WORD PTR [rcx],cx
   14004b63b:	jmp    QWORD PTR [rsi+0x39]
   14004b63e:	or     edi,edi
   14004b640:	cmp    WORD PTR [rcx],cx
   14004b643:	jmp    QWORD PTR [rsi+0x39]
   14004b646:	or     DWORD PTR [rdi+0x0],edi
	...
   14004b688:	cwde   
   14004b689:	push   rdi
   14004b68a:	add    edi,edi
   14004b68c:	xchg   edi,eax
   14004b68d:	push   rsi
   14004b68e:	add    edi,edi
   14004b690:	xchg   esi,eax
   14004b691:	push   rsi
   14004b692:	add    edi,edi
   14004b694:	xchg   esi,eax
   14004b695:	push   rsi
   14004b696:	add    edi,edi
   14004b698:	xchg   ebp,eax
   14004b699:	push   rbp
   14004b69a:	add    edi,edi
   14004b69c:	xchg   ebp,eax
   14004b69d:	push   rbp
   14004b69e:	add    al,0xff
   14004b6a0:	xchg   esp,eax
   14004b6a1:	push   rbp
   14004b6a2:	add    al,0xff
   14004b6a4:	xchg   esp,eax
   14004b6a5:	push   rsp
   14004b6a6:	add    al,0xff
   14004b6a8:	xchg   ebx,eax
   14004b6a9:	push   rsp
   14004b6aa:	add    al,0xff
   14004b6ac:	xchg   ebx,eax
   14004b6ad:	push   rsp
   14004b6ae:	add    al,0xff
   14004b6b0:	xchg   edx,eax
   14004b6b1:	push   rbx
   14004b6b2:	add    al,0xff
   14004b6b4:	xchg   edx,eax
   14004b6b5:	push   rbx
   14004b6b6:	add    al,0xff
   14004b6b8:	xchg   ecx,eax
   14004b6b9:	push   rbx
   14004b6ba:	add    al,0xff
   14004b6bc:	xchg   ecx,eax
   14004b6bd:	push   rdx
   14004b6be:	add    al,0xff
   14004b6c0:	nop
   14004b6c1:	push   rdx
   14004b6c2:	add    al,0xff
   14004b6c4:	nop
   14004b6c5:	push   rdx
   14004b6c6:	add    al,0xff
   14004b6c8:	(bad)  
   14004b6c9:	push   rdx
   14004b6ca:	add    al,0xff
   14004b6cc:	mov    ss,WORD PTR [rcx+0x4]
   14004b6cf:	dec    DWORD PTR [rsi-0x7100fbaf]
   14004b6d5:	push   rcx
   14004b6d6:	add    al,0xff
   14004b6d8:	lea    edx,[rax+0x4]
   14004b6db:	dec    DWORD PTR [rax+rdx*2+0x508cff05]
   14004b6e2:	add    eax,0x54f8bff
   14004b6e7:	dec    DWORD PTR [rbx-0x7500fab1]
   14004b6ed:	rex.WRXB add rax,0x54e8aff
   14004b6f3:	dec    DWORD PTR [rcx-0x7600fab2]
   14004b6f9:	rex.WRX add rax,0x54d88ff
   14004b6ff:	dec    DWORD PTR [rax+0x52ff054d]
   14004b705:	xor    edx,DWORD PTR [rip+0x7badcfff]        # 0x1bbb2870a
   14004b70b:	dec    edi
   14004b70d:	lods   eax,DWORD PTR ds:[rsi]
   14004b70e:	jnp    0x14004b70f
   14004b710:	iret   
   14004b711:	lods   eax,DWORD PTR ds:[rsi]
   14004b712:	jnp    0x14004b713
   14004b714:	iret   
   14004b715:	lods   eax,DWORD PTR ds:[rsi]
   14004b716:	jnp    0x14004b717
   14004b718:	iret   
   14004b719:	lods   eax,DWORD PTR ds:[rsi]
   14004b71a:	jnp    0x14004b71b
   14004b71c:	iret   
   14004b71d:	lods   eax,DWORD PTR ds:[rsi]
   14004b71e:	jnp    0x14004b71f
   14004b720:	iret   
   14004b721:	lods   eax,DWORD PTR ds:[rsi]
   14004b722:	jnp    0x14004b723
   14004b724:	iret   
   14004b725:	lods   eax,DWORD PTR ds:[rsi]
   14004b726:	jnp    0x14004b727
   14004b728:	iret   
   14004b729:	lods   eax,DWORD PTR ds:[rsi]
   14004b72a:	jnp    0x14004b72b
   14004b72c:	iret   
   14004b72d:	lods   eax,DWORD PTR ds:[rsi]
   14004b72e:	jnp    0x14004b72f
   14004b730:	iret   
   14004b731:	lods   eax,DWORD PTR ds:[rsi]
   14004b732:	jnp    0x14004b733
   14004b734:	iret   
   14004b735:	lods   eax,DWORD PTR ds:[rsi]
   14004b736:	jnp    0x14004b737
   14004b738:	iret   
   14004b739:	lods   eax,DWORD PTR ds:[rsi]
   14004b73a:	jnp    0x14004b73b
   14004b73c:	iret   
   14004b73d:	lods   eax,DWORD PTR ds:[rsi]
   14004b73e:	jnp    0x14004b73f
   14004b740:	iret   
   14004b741:	lods   eax,DWORD PTR ds:[rsi]
   14004b742:	jnp    0x14004b743
   14004b744:	iret   
   14004b745:	lods   eax,DWORD PTR ds:[rsi]
   14004b746:	jnp    0x14004b747
   14004b748:	iret   
   14004b749:	lods   eax,DWORD PTR ds:[rsi]
   14004b74a:	jnp    0x14004b74b
   14004b74c:	iret   
   14004b74d:	lods   eax,DWORD PTR ds:[rsi]
   14004b74e:	jnp    0x14004b74f
   14004b750:	iret   
   14004b751:	lods   eax,DWORD PTR ds:[rsi]
   14004b752:	jnp    0x14004b753
   14004b754:	iret   
   14004b755:	lods   eax,DWORD PTR ds:[rsi]
   14004b756:	jnp    0x14004b757
   14004b758:	iret   
   14004b759:	lods   eax,DWORD PTR ds:[rsi]
   14004b75a:	jnp    0x14004b75b
   14004b75c:	iret   
   14004b75d:	lods   eax,DWORD PTR ds:[rsi]
   14004b75e:	jnp    0x14004b75f
   14004b760:	iret   
   14004b761:	lods   eax,DWORD PTR ds:[rsi]
   14004b762:	jnp    0x14004b763
   14004b764:	iret   
   14004b765:	lods   eax,DWORD PTR ds:[rsi]
   14004b766:	jnp    0x14004b767
   14004b768:	iret   
   14004b769:	lods   eax,DWORD PTR ds:[rsi]
   14004b76a:	jnp    0x14004b76b
   14004b76c:	iret   
   14004b76d:	lods   eax,DWORD PTR ds:[rsi]
   14004b76e:	jnp    0x14004b76f
   14004b770:	iret   
   14004b771:	lods   eax,DWORD PTR ds:[rsi]
   14004b772:	jnp    0x14004b773
   14004b774:	iret   
   14004b775:	lods   eax,DWORD PTR ds:[rsi]
   14004b776:	jnp    0x14004b777
   14004b778:	iret   
   14004b779:	lods   eax,DWORD PTR ds:[rsi]
   14004b77a:	jnp    0x14004b77b
   14004b77c:	iret   
   14004b77d:	lods   eax,DWORD PTR ds:[rsi]
   14004b77e:	jnp    0x14004b77f
   14004b780:	iret   
   14004b781:	lods   eax,DWORD PTR ds:[rsi]
   14004b782:	jnp    0x14004b783
   14004b784:	iret   
   14004b785:	lods   eax,DWORD PTR ds:[rsi]
   14004b786:	jnp    0x14004b787
   14004b788:	iret   
   14004b789:	lods   eax,DWORD PTR ds:[rsi]
   14004b78a:	jnp    0x14004b78b
   14004b78c:	iret   
   14004b78d:	lods   eax,DWORD PTR ds:[rsi]
   14004b78e:	jnp    0x14004b78f
   14004b790:	iret   
   14004b791:	lods   eax,DWORD PTR ds:[rsi]
   14004b792:	jnp    0x14004b793
   14004b794:	iret   
   14004b795:	lods   eax,DWORD PTR ds:[rsi]
   14004b796:	jnp    0x14004b797
   14004b798:	iret   
   14004b799:	lods   eax,DWORD PTR ds:[rsi]
   14004b79a:	jnp    0x14004b79b
   14004b79c:	iret   
   14004b79d:	lods   eax,DWORD PTR ds:[rsi]
   14004b79e:	jnp    0x14004b79f
   14004b7a0:	iret   
   14004b7a1:	lods   eax,DWORD PTR ds:[rsi]
   14004b7a2:	jnp    0x14004b7a3
   14004b7a4:	iret   
   14004b7a5:	lods   eax,DWORD PTR ds:[rsi]
   14004b7a6:	jnp    0x14004b7a7
   14004b7a8:	iret   
   14004b7a9:	lods   eax,DWORD PTR ds:[rsi]
   14004b7aa:	jnp    0x14004b7ab
   14004b7ac:	iret   
   14004b7ad:	lods   eax,DWORD PTR ds:[rsi]
   14004b7ae:	jnp    0x14004b7af
   14004b7b0:	iret   
   14004b7b1:	lods   eax,DWORD PTR ds:[rsi]
   14004b7b2:	jnp    0x14004b7b3
   14004b7b4:	iret   
   14004b7b5:	lods   eax,DWORD PTR ds:[rsi]
   14004b7b6:	jnp    0x14004b7b7
   14004b7b8:	iret   
   14004b7b9:	lods   eax,DWORD PTR ds:[rsi]
   14004b7ba:	jnp    0x14004b7bb
   14004b7bc:	iret   
   14004b7bd:	lods   eax,DWORD PTR ds:[rsi]
   14004b7be:	jnp    0x14004b7bf
   14004b7c0:	iret   
   14004b7c1:	lods   eax,DWORD PTR ds:[rsi]
   14004b7c2:	jnp    0x14004b7c3
   14004b7c4:	iret   
   14004b7c5:	lods   eax,DWORD PTR ds:[rsi]
   14004b7c6:	jnp    0x14004b7c7
   14004b7c8:	push   rdx
   14004b7c9:	xor    edx,DWORD PTR [rip+0x83d6dff]        # 0x1484225ce
   14004b7cf:	jmp    FWORD PTR [rbp+rdi*1+0x8]
   14004b7d3:	jmp    FWORD PTR [rsp+rdi*1+0x8]
   14004b7d7:	jmp    FWORD PTR [rbx+0x3c]
   14004b7da:	or     bh,bh
   14004b7dc:	imul   edi,DWORD PTR [rax+rcx*1],0xffffffff
   14004b7e0:	push   0x3c
   14004b7e2:	or     edi,edi
   14004b7e4:	push   0x3b
   14004b7e6:	or     edi,edi
   14004b7e8:	imul   edi,DWORD PTR [rbx],0x3b69ff09
   14004b7ee:	or     edi,edi
   14004b7f0:	push   0x68ff093a
   14004b7f5:	cmp    cl,BYTE PTR [rcx]
   14004b7f7:	jmp    QWORD PTR [rdi+0x3a]
   14004b7fa:	or     edi,edi
   14004b7fc:	cmp    DWORD PTR [ecx],ecx
   14004b7ff:	jmp    QWORD PTR [rsi+0x39]
   14004b802:	or     edi,edi
   14004b804:	cmp    WORD PTR [rcx],cx
   14004b807:	jmp    QWORD PTR [rsi+0x39]
   14004b80a:	or     edi,edi
   14004b80c:	cmp    WORD PTR [rcx],cx
   14004b80f:	jmp    QWORD PTR [rsi+0x39]
   14004b812:	or     edi,edi
   14004b814:	cmp    WORD PTR [rcx],cx
   14004b817:	jmp    QWORD PTR [rsi+0x39]
   14004b81a:	or     edi,edi
   14004b81c:	cmp    WORD PTR [rcx],cx
   14004b81f:	jmp    QWORD PTR [rsi+0x39]
   14004b822:	or     edi,edi
   14004b824:	cmp    WORD PTR [rcx],cx
   14004b827:	jmp    QWORD PTR [rsi+0x39]
   14004b82a:	or     edi,edi
   14004b82c:	cmp    WORD PTR [rcx],cx
   14004b82f:	jmp    QWORD PTR [rsi+0x39]
   14004b832:	or     edi,edi
   14004b834:	cmp    WORD PTR [rcx],cx
   14004b837:	jmp    QWORD PTR [rsi+0x39]
   14004b83a:	or     edi,edi
   14004b83c:	cmp    WORD PTR [rcx],cx
   14004b83f:	jmp    QWORD PTR [rsi+0x39]
   14004b842:	or     edi,edi
   14004b844:	cmp    WORD PTR [rcx],cx
   14004b847:	inc    DWORD PTR [rax]
	...
   14004b885:	add    BYTE PTR [rax],al
   14004b887:	add    BYTE PTR [rax-0x6700fca9],bl
   14004b88d:	push   rdi
   14004b88e:	add    edi,edi
   14004b890:	xchg   edi,eax
   14004b891:	push   rsi
   14004b892:	add    edi,edi
   14004b894:	xchg   esi,eax
   14004b895:	push   rsi
   14004b896:	add    edi,edi
   14004b898:	xchg   esi,eax
   14004b899:	push   rsi
   14004b89a:	add    edi,edi
   14004b89c:	xchg   ebp,eax
   14004b89d:	push   rbp
   14004b89e:	add    edi,edi
   14004b8a0:	xchg   ebp,eax
   14004b8a1:	push   rbp
   14004b8a2:	add    al,0xff
   14004b8a4:	xchg   esp,eax
   14004b8a5:	push   rbp
   14004b8a6:	add    al,0xff
   14004b8a8:	xchg   esp,eax
   14004b8a9:	push   rsp
   14004b8aa:	add    al,0xff
   14004b8ac:	xchg   ebx,eax
   14004b8ad:	push   rsp
   14004b8ae:	add    al,0xff
   14004b8b0:	xchg   ebx,eax
   14004b8b1:	push   rsp
   14004b8b2:	add    al,0xff
   14004b8b4:	xchg   edx,eax
   14004b8b5:	push   rbx
   14004b8b6:	add    al,0xff
   14004b8b8:	xchg   edx,eax
   14004b8b9:	push   rbx
   14004b8ba:	add    al,0xff
   14004b8bc:	xchg   ecx,eax
   14004b8bd:	push   rbx
   14004b8be:	add    al,0xff
   14004b8c0:	xchg   ecx,eax
   14004b8c1:	push   rdx
   14004b8c2:	add    al,0xff
   14004b8c4:	nop
   14004b8c5:	push   rdx
   14004b8c6:	add    al,0xff
   14004b8c8:	nop
   14004b8c9:	push   rdx
   14004b8ca:	add    al,0xff
   14004b8cc:	(bad)  
   14004b8cd:	push   rdx
   14004b8ce:	add    al,0xff
   14004b8d0:	mov    ss,WORD PTR [rcx+0x4]
   14004b8d3:	dec    DWORD PTR [rsi-0x7100fbaf]
   14004b8d9:	push   rcx
   14004b8da:	add    al,0xff
   14004b8dc:	lea    edx,[rax+0x4]
   14004b8df:	dec    DWORD PTR [rax+rdx*2+0x508cff05]
   14004b8e6:	add    eax,0x54f8bff
   14004b8eb:	dec    DWORD PTR [rbx-0x7500fab1]
   14004b8f1:	rex.WRXB add rax,0x54e8aff
   14004b8f7:	dec    DWORD PTR [rcx-0x7600fab2]
   14004b8fd:	rex.WRX add rax,0x54d88ff
   14004b903:	call   QWORD PTR [rdx+0x33]
   14004b906:	adc    eax,0x7caed0ff
   14004b90b:	call   rax
   14004b90d:	scas   al,BYTE PTR es:[rdi]
   14004b90e:	jl     0x14004b90f
   14004b910:	shr    BYTE PTR [rsi-0x512f0084],1
   14004b916:	jl     0x14004b917
   14004b918:	shr    BYTE PTR [rsi-0x512f0084],1
   14004b91e:	jl     0x14004b91f
   14004b920:	shr    BYTE PTR [rsi-0x512f0084],1
   14004b926:	jl     0x14004b927
   14004b928:	shr    BYTE PTR [rsi-0x512f0084],1
   14004b92e:	jl     0x14004b92f
   14004b930:	shr    BYTE PTR [rsi-0x512f0084],1
   14004b936:	jl     0x14004b937
   14004b938:	shr    BYTE PTR [rsi-0x512f0084],1
   14004b93e:	jl     0x14004b93f
   14004b940:	shr    BYTE PTR [rsi-0x512f0084],1
   14004b946:	jl     0x14004b947
   14004b948:	shr    BYTE PTR [rsi-0x512f0084],1
   14004b94e:	jl     0x14004b94f
   14004b950:	shr    BYTE PTR [rsi-0x512f0084],1
   14004b956:	jl     0x14004b957
   14004b958:	shr    BYTE PTR [rsi-0x512f0084],1
   14004b95e:	jl     0x14004b95f
   14004b960:	shr    BYTE PTR [rsi-0x512f0084],1
   14004b966:	jl     0x14004b967
   14004b968:	shr    BYTE PTR [rsi-0x512f0084],1
   14004b96e:	jl     0x14004b96f
   14004b970:	shr    BYTE PTR [rsi-0x512f0084],1
   14004b976:	jl     0x14004b977
   14004b978:	shr    BYTE PTR [rsi-0x512f0084],1
   14004b97e:	jl     0x14004b97f
   14004b980:	shr    BYTE PTR [rsi-0x512f0084],1
   14004b986:	jl     0x14004b987
   14004b988:	shr    BYTE PTR [rsi-0x512f0084],1
   14004b98e:	jl     0x14004b98f
   14004b990:	shr    BYTE PTR [rsi-0x512f0084],1
   14004b996:	jl     0x14004b997
   14004b998:	shr    BYTE PTR [rsi-0x512f0084],1
   14004b99e:	jl     0x14004b99f
   14004b9a0:	shr    BYTE PTR [rsi-0x512f0084],1
   14004b9a6:	jl     0x14004b9a7
   14004b9a8:	shr    BYTE PTR [rsi-0x512f0084],1
   14004b9ae:	jl     0x14004b9af
   14004b9b0:	shr    BYTE PTR [rsi-0x512f0084],1
   14004b9b6:	jl     0x14004b9b7
   14004b9b8:	shr    BYTE PTR [rsi-0x512f0084],1
   14004b9be:	jl     0x14004b9bf
   14004b9c0:	shr    BYTE PTR [rsi-0x512f0084],1
   14004b9c6:	jl     0x14004b9c7
   14004b9c8:	push   rdx
   14004b9c9:	xor    edx,DWORD PTR [rip+0x83d6dff]        # 0x1484227ce
   14004b9cf:	jmp    FWORD PTR [rbp+0x3d]
   14004b9d2:	or     bh,bh
   14004b9d4:	ins    BYTE PTR es:[rdi],dx
   14004b9d5:	cmp    eax,0x3c6cff08
   14004b9da:	or     bh,bh
   14004b9dc:	imul   edi,DWORD PTR [rax+rcx*1],0xffffffff
   14004b9e0:	imul   edi,DWORD PTR [rax+rcx*1],0xffffffff
   14004b9e4:	push   0x3c
   14004b9e6:	or     edi,edi
   14004b9e8:	push   0x3b
   14004b9ea:	or     edi,edi
   14004b9ec:	imul   edi,DWORD PTR [rbx],0x3b69ff09
   14004b9f2:	or     edi,edi
   14004b9f4:	push   0x68ff093a
   14004b9f9:	cmp    cl,BYTE PTR [rcx]
   14004b9fb:	jmp    QWORD PTR [rdi+0x3a]
   14004b9fe:	or     edi,edi
   14004ba00:	cmp    DWORD PTR [ecx],ecx
   14004ba03:	jmp    QWORD PTR [rsi+0x39]
   14004ba06:	or     edi,edi
   14004ba08:	cmp    WORD PTR [rcx],cx
   14004ba0b:	jmp    QWORD PTR [rsi+0x39]
   14004ba0e:	or     edi,edi
   14004ba10:	cmp    WORD PTR [rcx],cx
   14004ba13:	jmp    QWORD PTR [rsi+0x39]
   14004ba16:	or     edi,edi
   14004ba18:	cmp    WORD PTR [rcx],cx
   14004ba1b:	jmp    QWORD PTR [rsi+0x39]
   14004ba1e:	or     edi,edi
   14004ba20:	cmp    WORD PTR [rcx],cx
   14004ba23:	jmp    QWORD PTR [rsi+0x39]
   14004ba26:	or     edi,edi
   14004ba28:	cmp    WORD PTR [rcx],cx
   14004ba2b:	jmp    QWORD PTR [rsi+0x39]
   14004ba2e:	or     edi,edi
   14004ba30:	cmp    WORD PTR [rcx],cx
   14004ba33:	jmp    QWORD PTR [rsi+0x39]
   14004ba36:	or     edi,edi
   14004ba38:	cmp    WORD PTR [rcx],cx
   14004ba3b:	jmp    QWORD PTR [rsi+0x39]
   14004ba3e:	or     edi,edi
   14004ba40:	cmp    WORD PTR [rcx],cx
   14004ba43:	jmp    QWORD PTR [rsi+0x39]
   14004ba46:	or     edi,edi
	...
   14004ba88:	cwde   
   14004ba89:	push   rdi
   14004ba8a:	add    edi,edi
   14004ba8c:	cwde   
   14004ba8d:	push   rdi
   14004ba8e:	add    edi,edi
   14004ba90:	cwde   
   14004ba91:	push   rdi
   14004ba92:	add    edi,edi
   14004ba94:	xchg   edi,eax
   14004ba95:	push   rsi
   14004ba96:	add    edi,edi
   14004ba98:	xchg   esi,eax
   14004ba99:	push   rsi
   14004ba9a:	add    edi,edi
   14004ba9c:	xchg   esi,eax
   14004ba9d:	push   rsi
   14004ba9e:	add    edi,edi
   14004baa0:	xchg   ebp,eax
   14004baa1:	push   rbp
   14004baa2:	add    edi,edi
   14004baa4:	xchg   ebp,eax
   14004baa5:	push   rbp
   14004baa6:	add    al,0xff
   14004baa8:	xchg   esp,eax
   14004baa9:	push   rbp
   14004baaa:	add    al,0xff
   14004baac:	xchg   esp,eax
   14004baad:	push   rsp
   14004baae:	add    al,0xff
   14004bab0:	xchg   ebx,eax
   14004bab1:	push   rsp
   14004bab2:	add    al,0xff
   14004bab4:	xchg   ebx,eax
   14004bab5:	push   rsp
   14004bab6:	add    al,0xff
   14004bab8:	xchg   edx,eax
   14004bab9:	push   rbx
   14004baba:	add    al,0xff
   14004babc:	xchg   edx,eax
   14004babd:	push   rbx
   14004babe:	add    al,0xff
   14004bac0:	xchg   ecx,eax
   14004bac1:	push   rbx
   14004bac2:	add    al,0xff
   14004bac4:	xchg   ecx,eax
   14004bac5:	push   rdx
   14004bac6:	add    al,0xff
   14004bac8:	nop
   14004bac9:	push   rdx
   14004baca:	add    al,0xff
   14004bacc:	nop
   14004bacd:	push   rdx
   14004bace:	add    al,0xff
   14004bad0:	(bad)  
   14004bad1:	push   rdx
   14004bad2:	add    al,0xff
   14004bad4:	mov    ss,WORD PTR [rcx+0x4]
   14004bad7:	dec    DWORD PTR [rsi-0x7100fbaf]
   14004badd:	push   rcx
   14004bade:	add    al,0xff
   14004bae0:	lea    edx,[rax+0x4]
   14004bae3:	dec    DWORD PTR [rax+rdx*2+0x508cff05]
   14004baea:	add    eax,0x54f8bff
   14004baef:	dec    DWORD PTR [rbx-0x7500fab1]
   14004baf5:	rex.WRXB add rax,0x54e8aff
   14004bafb:	dec    DWORD PTR [rcx-0x7600fab2]
   14004bb01:	rex.WRX add rax,0x153352ff
   14004bb07:	call   rax
   14004bb09:	scas   eax,DWORD PTR es:[rdi]
   14004bb0a:	jle    0x14004bb0b
   14004bb0c:	shr    BYTE PTR [rdi-0x502f0082],1
   14004bb12:	jle    0x14004bb13
   14004bb14:	shr    BYTE PTR [rdi-0x502f0082],1
   14004bb1a:	jle    0x14004bb1b
   14004bb1c:	shr    BYTE PTR [rdi-0x502f0082],1
   14004bb22:	jle    0x14004bb23
   14004bb24:	shr    BYTE PTR [rdi-0x502f0082],1
   14004bb2a:	jle    0x14004bb2b
   14004bb2c:	shr    BYTE PTR [rdi-0x502f0082],1
   14004bb32:	jle    0x14004bb33
   14004bb34:	shr    BYTE PTR [rdi-0x502f0082],1
   14004bb3a:	jle    0x14004bb3b
   14004bb3c:	shr    BYTE PTR [rdi-0x502f0082],1
   14004bb42:	jle    0x14004bb43
   14004bb44:	shr    BYTE PTR [rdi-0x502f0082],1
   14004bb4a:	jle    0x14004bb4b
   14004bb4c:	shr    BYTE PTR [rdi-0x502f0082],1
   14004bb52:	jle    0x14004bb53
   14004bb54:	shr    BYTE PTR [rdi-0x502f0082],1
   14004bb5a:	jle    0x14004bb5b
   14004bb5c:	shr    BYTE PTR [rdi-0x502f0082],1
   14004bb62:	jle    0x14004bb63
   14004bb64:	shr    BYTE PTR [rdi-0x502f0082],1
   14004bb6a:	jle    0x14004bb6b
   14004bb6c:	shr    BYTE PTR [rdi-0x502f0082],1
   14004bb72:	jle    0x14004bb73
   14004bb74:	shr    BYTE PTR [rdi-0x502f0082],1
   14004bb7a:	jle    0x14004bb7b
   14004bb7c:	shr    BYTE PTR [rdi-0x502f0082],1
   14004bb82:	jle    0x14004bb83
   14004bb84:	shr    BYTE PTR [rdi-0x502f0082],1
   14004bb8a:	jle    0x14004bb8b
   14004bb8c:	shr    BYTE PTR [rdi-0x502f0082],1
   14004bb92:	jle    0x14004bb93
   14004bb94:	shr    BYTE PTR [rdi-0x502f0082],1
   14004bb9a:	jle    0x14004bb9b
   14004bb9c:	shr    BYTE PTR [rdi-0x502f0082],1
   14004bba2:	jle    0x14004bba3
   14004bba4:	shr    BYTE PTR [rdi-0x502f0082],1
   14004bbaa:	jle    0x14004bbab
   14004bbac:	shr    BYTE PTR [rdi-0x502f0082],1
   14004bbb2:	jle    0x14004bbb3
   14004bbb4:	shr    BYTE PTR [rdi-0x502f0082],1
   14004bbba:	jle    0x14004bbbb
   14004bbbc:	shr    BYTE PTR [rdi-0x502f0082],1
   14004bbc2:	jle    0x14004bbc3
   14004bbc4:	shr    BYTE PTR [rdi+0x3352ff7e],1
   14004bbca:	adc    eax,0x83e6eff
   14004bbcf:	jmp    FWORD PTR [rbp+0x3d]
   14004bbd2:	or     bh,bh
   14004bbd4:	ins    DWORD PTR es:[rdi],dx
   14004bbd5:	cmp    eax,0x3d6cff08
   14004bbda:	or     bh,bh
   14004bbdc:	ins    BYTE PTR es:[rdi],dx
   14004bbdd:	cmp    al,0x8
   14004bbdf:	jmp    FWORD PTR [rbx+0x3c]
   14004bbe2:	or     bh,bh
   14004bbe4:	imul   edi,DWORD PTR [rax+rcx*1],0xffffffff
   14004bbe8:	push   0x3c
   14004bbea:	or     edi,edi
   14004bbec:	push   0x3b
   14004bbee:	or     edi,edi
   14004bbf0:	imul   edi,DWORD PTR [rbx],0x3b69ff09
   14004bbf6:	or     edi,edi
   14004bbf8:	push   0x68ff093a
   14004bbfd:	cmp    cl,BYTE PTR [rcx]
   14004bbff:	jmp    QWORD PTR [rdi+0x3a]
   14004bc02:	or     edi,edi
   14004bc04:	cmp    DWORD PTR [ecx],ecx
   14004bc07:	jmp    QWORD PTR [rsi+0x39]
   14004bc0a:	or     edi,edi
   14004bc0c:	cmp    WORD PTR [rcx],cx
   14004bc0f:	jmp    QWORD PTR [rsi+0x39]
   14004bc12:	or     edi,edi
   14004bc14:	cmp    WORD PTR [rcx],cx
   14004bc17:	jmp    QWORD PTR [rsi+0x39]
   14004bc1a:	or     edi,edi
   14004bc1c:	cmp    WORD PTR [rcx],cx
   14004bc1f:	jmp    QWORD PTR [rsi+0x39]
   14004bc22:	or     edi,edi
   14004bc24:	cmp    WORD PTR [rcx],cx
   14004bc27:	jmp    QWORD PTR [rsi+0x39]
   14004bc2a:	or     edi,edi
   14004bc2c:	cmp    WORD PTR [rcx],cx
   14004bc2f:	jmp    QWORD PTR [rsi+0x39]
   14004bc32:	or     edi,edi
   14004bc34:	cmp    WORD PTR [rcx],cx
   14004bc37:	jmp    QWORD PTR [rsi+0x39]
   14004bc3a:	or     edi,edi
   14004bc3c:	cmp    WORD PTR [rcx],cx
   14004bc3f:	jmp    QWORD PTR [rsi+0x39]
   14004bc42:	or     edi,edi
   14004bc44:	cmp    WORD PTR [rcx],cx
   14004bc47:	inc    DWORD PTR [rax]
	...
   14004bc85:	add    BYTE PTR [rax],al
   14004bc87:	add    BYTE PTR [rcx-0x6700fca9],bl
   14004bc8d:	push   rdi
   14004bc8e:	add    edi,edi
   14004bc90:	cwde   
   14004bc91:	push   rdi
   14004bc92:	add    edi,edi
   14004bc94:	cwde   
   14004bc95:	push   rdi
   14004bc96:	add    edi,edi
   14004bc98:	xchg   edi,eax
   14004bc99:	push   rsi
   14004bc9a:	add    edi,edi
   14004bc9c:	xchg   esi,eax
   14004bc9d:	push   rsi
   14004bc9e:	add    edi,edi
   14004bca0:	xchg   esi,eax
   14004bca1:	push   rsi
   14004bca2:	add    edi,edi
   14004bca4:	xchg   ebp,eax
   14004bca5:	push   rbp
   14004bca6:	add    edi,edi
   14004bca8:	xchg   ebp,eax
   14004bca9:	push   rbp
   14004bcaa:	add    al,0xff
   14004bcac:	xchg   esp,eax
   14004bcad:	push   rbp
   14004bcae:	add    al,0xff
   14004bcb0:	xchg   esp,eax
   14004bcb1:	push   rsp
   14004bcb2:	add    al,0xff
   14004bcb4:	xchg   ebx,eax
   14004bcb5:	push   rsp
   14004bcb6:	add    al,0xff
   14004bcb8:	xchg   ebx,eax
   14004bcb9:	push   rsp
   14004bcba:	add    al,0xff
   14004bcbc:	xchg   edx,eax
   14004bcbd:	push   rbx
   14004bcbe:	add    al,0xff
   14004bcc0:	xchg   edx,eax
   14004bcc1:	push   rbx
   14004bcc2:	add    al,0xff
   14004bcc4:	xchg   ecx,eax
   14004bcc5:	push   rbx
   14004bcc6:	add    al,0xff
   14004bcc8:	xchg   ecx,eax
   14004bcc9:	push   rdx
   14004bcca:	add    al,0xff
   14004bccc:	nop
   14004bccd:	push   rdx
   14004bcce:	add    al,0xff
   14004bcd0:	nop
   14004bcd1:	push   rdx
   14004bcd2:	add    al,0xff
   14004bcd4:	(bad)  
   14004bcd5:	push   rdx
   14004bcd6:	add    al,0xff
   14004bcd8:	mov    ss,WORD PTR [rcx+0x4]
   14004bcdb:	dec    DWORD PTR [rsi-0x7100fbaf]
   14004bce1:	push   rcx
   14004bce2:	add    al,0xff
   14004bce4:	lea    edx,[rax+0x4]
   14004bce7:	dec    DWORD PTR [rax+rdx*2+0x508cff05]
   14004bcee:	add    eax,0x54f8bff
   14004bcf3:	dec    DWORD PTR [rbx-0x7500fab1]
   14004bcf9:	rex.WRXB add rax,0x54e8aff
   14004bcff:	dec    DWORD PTR [rcx+0x52ff054e]
   14004bd05:	xor    edx,DWORD PTR [rip+0x7fb0d1ff]        # 0x1bfb58f0a
   14004bd0b:	call   rcx
   14004bd0d:	mov    al,0x7f
   14004bd0f:	call   rcx
   14004bd11:	mov    al,0x7f
   14004bd13:	call   rcx
   14004bd15:	mov    al,0x7f
   14004bd17:	call   rcx
   14004bd19:	mov    al,0x7f
   14004bd1b:	call   rcx
   14004bd1d:	mov    al,0x7f
   14004bd1f:	call   rcx
   14004bd21:	mov    al,0x7f
   14004bd23:	call   rcx
   14004bd25:	mov    al,0x7f
   14004bd27:	call   rcx
   14004bd29:	mov    al,0x7f
   14004bd2b:	call   rcx
   14004bd2d:	mov    al,0x7f
   14004bd2f:	call   rcx
   14004bd31:	mov    al,0x7f
   14004bd33:	call   rcx
   14004bd35:	mov    al,0x7f
   14004bd37:	call   rcx
   14004bd39:	mov    al,0x7f
   14004bd3b:	call   rcx
   14004bd3d:	mov    al,0x7f
   14004bd3f:	call   rcx
   14004bd41:	mov    al,0x7f
   14004bd43:	call   rcx
   14004bd45:	mov    al,0x7f
   14004bd47:	call   rcx
   14004bd49:	mov    al,0x7f
   14004bd4b:	call   rcx
   14004bd4d:	mov    al,0x7f
   14004bd4f:	call   rcx
   14004bd51:	mov    al,0x7f
   14004bd53:	call   rcx
   14004bd55:	mov    al,0x7f
   14004bd57:	call   rcx
   14004bd59:	mov    al,0x7f
   14004bd5b:	call   rcx
   14004bd5d:	mov    al,0x7f
   14004bd5f:	call   rcx
   14004bd61:	mov    al,0x7f
   14004bd63:	call   rcx
   14004bd65:	mov    al,0x7f
   14004bd67:	call   rcx
   14004bd69:	mov    al,0x7f
   14004bd6b:	call   rcx
   14004bd6d:	mov    al,0x7f
   14004bd6f:	call   rcx
   14004bd71:	mov    al,0x7f
   14004bd73:	call   rcx
   14004bd75:	mov    al,0x7f
   14004bd77:	call   rcx
   14004bd79:	mov    al,0x7f
   14004bd7b:	call   rcx
   14004bd7d:	mov    al,0x7f
   14004bd7f:	call   rcx
   14004bd81:	mov    al,0x7f
   14004bd83:	call   rcx
   14004bd85:	mov    al,0x7f
   14004bd87:	call   rcx
   14004bd89:	mov    al,0x7f
   14004bd8b:	call   rcx
   14004bd8d:	mov    al,0x7f
   14004bd8f:	call   rcx
   14004bd91:	mov    al,0x7f
   14004bd93:	call   rcx
   14004bd95:	mov    al,0x7f
   14004bd97:	call   rcx
   14004bd99:	mov    al,0x7f
   14004bd9b:	call   rcx
   14004bd9d:	mov    al,0x7f
   14004bd9f:	call   rcx
   14004bda1:	mov    al,0x7f
   14004bda3:	call   rcx
   14004bda5:	mov    al,0x7f
   14004bda7:	call   rcx
   14004bda9:	mov    al,0x7f
   14004bdab:	call   rcx
   14004bdad:	mov    al,0x7f
   14004bdaf:	call   rcx
   14004bdb1:	mov    al,0x7f
   14004bdb3:	call   rcx
   14004bdb5:	mov    al,0x7f
   14004bdb7:	call   rcx
   14004bdb9:	mov    al,0x7f
   14004bdbb:	call   rcx
   14004bdbd:	mov    al,0x7f
   14004bdbf:	call   rcx
   14004bdc1:	mov    al,0x7f
   14004bdc3:	call   rcx
   14004bdc5:	mov    al,0x7f
   14004bdc7:	call   QWORD PTR [rdx+0x33]
   14004bdca:	adc    eax,0x83e6eff
   14004bdcf:	jmp    FWORD PTR [rsi+0x3e]
   14004bdd2:	or     bh,bh
   14004bdd4:	ins    DWORD PTR es:[rdi],dx
   14004bdd5:	cmp    eax,0x3d6dff08
   14004bdda:	or     bh,bh
   14004bddc:	ins    BYTE PTR es:[rdi],dx
   14004bddd:	cmp    eax,0x3c6cff08
   14004bde2:	or     bh,bh
   14004bde4:	imul   edi,DWORD PTR [rax+rcx*1],0xffffffff
   14004bde8:	imul   edi,DWORD PTR [rax+rcx*1],0xffffffff
   14004bdec:	push   0x3c
   14004bdee:	or     edi,edi
   14004bdf0:	push   0x3b
   14004bdf2:	or     edi,edi
   14004bdf4:	imul   edi,DWORD PTR [rbx],0x3b69ff09
   14004bdfa:	or     edi,edi
   14004bdfc:	push   0x68ff093a
   14004be01:	cmp    cl,BYTE PTR [rcx]
   14004be03:	jmp    QWORD PTR [rdi+0x3a]
   14004be06:	or     edi,edi
   14004be08:	cmp    DWORD PTR [ecx],ecx
   14004be0b:	jmp    QWORD PTR [rsi+0x39]
   14004be0e:	or     edi,edi
   14004be10:	cmp    WORD PTR [rcx],cx
   14004be13:	jmp    QWORD PTR [rsi+0x39]
   14004be16:	or     edi,edi
   14004be18:	cmp    WORD PTR [rcx],cx
   14004be1b:	jmp    QWORD PTR [rsi+0x39]
   14004be1e:	or     edi,edi
   14004be20:	cmp    WORD PTR [rcx],cx
   14004be23:	jmp    QWORD PTR [rsi+0x39]
   14004be26:	or     edi,edi
   14004be28:	cmp    WORD PTR [rcx],cx
   14004be2b:	jmp    QWORD PTR [rsi+0x39]
   14004be2e:	or     edi,edi
   14004be30:	cmp    WORD PTR [rcx],cx
   14004be33:	jmp    QWORD PTR [rsi+0x39]
   14004be36:	or     edi,edi
   14004be38:	cmp    WORD PTR [rcx],cx
   14004be3b:	jmp    QWORD PTR [rsi+0x39]
   14004be3e:	or     edi,edi
   14004be40:	cmp    WORD PTR [rcx],cx
   14004be43:	jmp    QWORD PTR [rsi+0x39]
   14004be46:	or     edi,edi
	...
   14004be88:	(bad)  
   14004be89:	pop    rax
   14004be8a:	add    edi,edi
   14004be8c:	cdq    
   14004be8d:	push   rdi
   14004be8e:	add    edi,edi
   14004be90:	cwde   
   14004be91:	push   rdi
   14004be92:	add    edi,edi
   14004be94:	cwde   
   14004be95:	push   rdi
   14004be96:	add    edi,edi
   14004be98:	cwde   
   14004be99:	push   rdi
   14004be9a:	add    edi,edi
   14004be9c:	xchg   edi,eax
   14004be9d:	push   rsi
   14004be9e:	add    edi,edi
   14004bea0:	xchg   esi,eax
   14004bea1:	push   rsi
   14004bea2:	add    edi,edi
   14004bea4:	xchg   esi,eax
   14004bea5:	push   rsi
   14004bea6:	add    edi,edi
   14004bea8:	xchg   ebp,eax
   14004bea9:	push   rbp
   14004beaa:	add    edi,edi
   14004beac:	xchg   ebp,eax
   14004bead:	push   rbp
   14004beae:	add    al,0xff
   14004beb0:	xchg   esp,eax
   14004beb1:	push   rbp
   14004beb2:	add    al,0xff
   14004beb4:	xchg   esp,eax
   14004beb5:	push   rsp
   14004beb6:	add    al,0xff
   14004beb8:	xchg   ebx,eax
   14004beb9:	push   rsp
   14004beba:	add    al,0xff
   14004bebc:	xchg   ebx,eax
   14004bebd:	push   rsp
   14004bebe:	add    al,0xff
   14004bec0:	xchg   edx,eax
   14004bec1:	push   rbx
   14004bec2:	add    al,0xff
   14004bec4:	xchg   edx,eax
   14004bec5:	push   rbx
   14004bec6:	add    al,0xff
   14004bec8:	xchg   ecx,eax
   14004bec9:	push   rbx
   14004beca:	add    al,0xff
   14004becc:	xchg   ecx,eax
   14004becd:	push   rdx
   14004bece:	add    al,0xff
   14004bed0:	nop
   14004bed1:	push   rdx
   14004bed2:	add    al,0xff
   14004bed4:	nop
   14004bed5:	push   rdx
   14004bed6:	add    al,0xff
   14004bed8:	(bad)  
   14004bed9:	push   rdx
   14004beda:	add    al,0xff
   14004bedc:	mov    ss,WORD PTR [rcx+0x4]
   14004bedf:	dec    DWORD PTR [rsi-0x7100fbaf]
   14004bee5:	push   rcx
   14004bee6:	add    al,0xff
   14004bee8:	lea    edx,[rax+0x4]
   14004beeb:	dec    DWORD PTR [rax+rdx*2+0x508cff05]
   14004bef2:	add    eax,0x54f8bff
   14004bef7:	dec    DWORD PTR [rbx-0x7500fab1]
   14004befd:	rex.WRXB add rax,0x54e8aff
   14004bf03:	call   QWORD PTR [rdx+0x33]
   14004bf06:	adc    eax,0x153352ff
   14004bf0b:	call   QWORD PTR [rdx+0x33]
   14004bf0e:	adc    eax,0x153352ff
   14004bf13:	call   QWORD PTR [rdx+0x33]
   14004bf16:	adc    eax,0x153352ff
   14004bf1b:	call   QWORD PTR [rdx+0x33]
   14004bf1e:	adc    eax,0x153352ff
   14004bf23:	call   QWORD PTR [rdx+0x33]
   14004bf26:	adc    eax,0x153352ff
   14004bf2b:	call   QWORD PTR [rdx+0x33]
   14004bf2e:	adc    eax,0x153352ff
   14004bf33:	call   QWORD PTR [rdx+0x33]
   14004bf36:	adc    eax,0x153352ff
   14004bf3b:	call   QWORD PTR [rdx+0x33]
   14004bf3e:	adc    eax,0x153352ff
   14004bf43:	call   QWORD PTR [rdx+0x33]
   14004bf46:	adc    eax,0x153352ff
   14004bf4b:	call   QWORD PTR [rdx+0x33]
   14004bf4e:	adc    eax,0x153352ff
   14004bf53:	call   QWORD PTR [rdx+0x33]
   14004bf56:	adc    eax,0x153352ff
   14004bf5b:	call   QWORD PTR [rdx+0x33]
   14004bf5e:	adc    eax,0x153352ff
   14004bf63:	call   QWORD PTR [rdx+0x33]
   14004bf66:	adc    eax,0x153352ff
   14004bf6b:	call   QWORD PTR [rdx+0x33]
   14004bf6e:	adc    eax,0x153352ff
   14004bf73:	call   QWORD PTR [rdx+0x33]
   14004bf76:	adc    eax,0x153352ff
   14004bf7b:	call   QWORD PTR [rdx+0x33]
   14004bf7e:	adc    eax,0x153352ff
   14004bf83:	call   QWORD PTR [rdx+0x33]
   14004bf86:	adc    eax,0x153352ff
   14004bf8b:	call   QWORD PTR [rdx+0x33]
   14004bf8e:	adc    eax,0x153352ff
   14004bf93:	call   QWORD PTR [rdx+0x33]
   14004bf96:	adc    eax,0x153352ff
   14004bf9b:	call   QWORD PTR [rdx+0x33]
   14004bf9e:	adc    eax,0x153352ff
   14004bfa3:	call   QWORD PTR [rdx+0x33]
   14004bfa6:	adc    eax,0x153352ff
   14004bfab:	call   QWORD PTR [rdx+0x33]
   14004bfae:	adc    eax,0x153352ff
   14004bfb3:	call   QWORD PTR [rdx+0x33]
   14004bfb6:	adc    eax,0x153352ff
   14004bfbb:	call   QWORD PTR [rdx+0x33]
   14004bfbe:	adc    eax,0x153352ff
   14004bfc3:	call   QWORD PTR [rdx+0x33]
   14004bfc6:	adc    eax,0x153352ff
   14004bfcb:	jmp    FWORD PTR [rdi+0x3e]
   14004bfce:	or     bh,bh
   14004bfd0:	outs   dx,BYTE PTR ds:[rsi]
   14004bfd1:	ds or  bh,bh
   14004bfd4:	outs   dx,BYTE PTR ds:[rsi]
   14004bfd5:	ds or  bh,bh
   14004bfd8:	ins    DWORD PTR es:[rdi],dx
   14004bfd9:	cmp    eax,0x3d6dff08
   14004bfde:	or     bh,bh
   14004bfe0:	ins    BYTE PTR es:[rdi],dx
   14004bfe1:	cmp    eax,0x3c6cff08
   14004bfe6:	or     bh,bh
   14004bfe8:	imul   edi,DWORD PTR [rax+rcx*1],0xffffffff
   14004bfec:	imul   edi,DWORD PTR [rax+rcx*1],0xffffffff
   14004bff0:	push   0x3c
   14004bff2:	or     edi,edi
   14004bff4:	push   0x3b
   14004bff6:	or     edi,edi
   14004bff8:	imul   edi,DWORD PTR [rbx],0x3b69ff09
   14004bffe:	or     edi,edi
   14004c000:	push   0x68ff093a
   14004c005:	cmp    cl,BYTE PTR [rcx]
   14004c007:	jmp    QWORD PTR [rdi+0x3a]
   14004c00a:	or     edi,edi
   14004c00c:	cmp    DWORD PTR [ecx],ecx
   14004c00f:	jmp    QWORD PTR [rsi+0x39]
   14004c012:	or     edi,edi
   14004c014:	cmp    WORD PTR [rcx],cx
   14004c017:	jmp    QWORD PTR [rsi+0x39]
   14004c01a:	or     edi,edi
   14004c01c:	cmp    WORD PTR [rcx],cx
   14004c01f:	jmp    QWORD PTR [rsi+0x39]
   14004c022:	or     edi,edi
   14004c024:	cmp    WORD PTR [rcx],cx
   14004c027:	jmp    QWORD PTR [rsi+0x39]
   14004c02a:	or     edi,edi
   14004c02c:	cmp    WORD PTR [rcx],cx
   14004c02f:	jmp    QWORD PTR [rsi+0x39]
   14004c032:	or     edi,edi
   14004c034:	cmp    WORD PTR [rcx],cx
   14004c037:	jmp    QWORD PTR [rsi+0x39]
   14004c03a:	or     edi,edi
   14004c03c:	cmp    WORD PTR [rcx],cx
   14004c03f:	jmp    QWORD PTR [rsi+0x39]
   14004c042:	or     edi,edi
   14004c044:	cmp    WORD PTR [rcx],cx
   14004c047:	inc    DWORD PTR [rax]
	...
   14004c085:	add    BYTE PTR [rax],al
   14004c087:	add    BYTE PTR [rdx-0x6500fca8],bl
   14004c08d:	pop    rax
   14004c08e:	add    edi,edi
   14004c090:	cdq    
   14004c091:	push   rdi
   14004c092:	add    edi,edi
   14004c094:	cwde   
   14004c095:	push   rdi
   14004c096:	add    edi,edi
   14004c098:	cwde   
   14004c099:	push   rdi
   14004c09a:	add    edi,edi
   14004c09c:	cwde   
   14004c09d:	push   rdi
   14004c09e:	add    edi,edi
   14004c0a0:	xchg   edi,eax
   14004c0a1:	push   rsi
   14004c0a2:	add    edi,edi
   14004c0a4:	xchg   esi,eax
   14004c0a5:	push   rsi
   14004c0a6:	add    edi,edi
   14004c0a8:	xchg   esi,eax
   14004c0a9:	push   rsi
   14004c0aa:	add    edi,edi
   14004c0ac:	xchg   ebp,eax
   14004c0ad:	push   rbp
   14004c0ae:	add    edi,edi
   14004c0b0:	xchg   ebp,eax
   14004c0b1:	push   rbp
   14004c0b2:	add    al,0xff
   14004c0b4:	xchg   esp,eax
   14004c0b5:	push   rbp
   14004c0b6:	add    al,0xff
   14004c0b8:	xchg   esp,eax
   14004c0b9:	push   rsp
   14004c0ba:	add    al,0xff
   14004c0bc:	xchg   ebx,eax
   14004c0bd:	push   rsp
   14004c0be:	add    al,0xff
   14004c0c0:	xchg   ebx,eax
   14004c0c1:	push   rsp
   14004c0c2:	add    al,0xff
   14004c0c4:	xchg   edx,eax
   14004c0c5:	push   rbx
   14004c0c6:	add    al,0xff
   14004c0c8:	xchg   edx,eax
   14004c0c9:	push   rbx
   14004c0ca:	add    al,0xff
   14004c0cc:	xchg   ecx,eax
   14004c0cd:	push   rbx
   14004c0ce:	add    al,0xff
   14004c0d0:	xchg   ecx,eax
   14004c0d1:	push   rdx
   14004c0d2:	add    al,0xff
   14004c0d4:	nop
   14004c0d5:	push   rdx
   14004c0d6:	add    al,0xff
   14004c0d8:	nop
   14004c0d9:	push   rdx
   14004c0da:	add    al,0xff
   14004c0dc:	(bad)  
   14004c0dd:	push   rdx
   14004c0de:	add    al,0xff
   14004c0e0:	mov    ss,WORD PTR [rcx+0x4]
   14004c0e3:	dec    DWORD PTR [rsi-0x7100fbaf]
   14004c0e9:	push   rcx
   14004c0ea:	add    al,0xff
   14004c0ec:	lea    edx,[rax+0x4]
   14004c0ef:	dec    DWORD PTR [rax+rdx*2+0x508cff05]
   14004c0f6:	add    eax,0x54f8bff
   14004c0fb:	dec    DWORD PTR [rbx-0x7500fab1]
   14004c101:	rex.WRXB add rax,0x54e8aff
   14004c107:	dec    DWORD PTR [rcx-0x7600fab2]
   14004c10d:	rex.WRX add rax,0x54d88ff
   14004c113:	dec    DWORD PTR [rax-0x7800fab3]
   14004c119:	rex.WRB add rax,0x54c87ff
   14004c11f:	inc    DWORD PTR [rsi-0x7a00fab4]
   14004c125:	rex.WR add rax,0x54c85ff
   14004c12b:	inc    DWORD PTR [rbx+rcx*2+0x4b84ff05]
   14004c132:	(bad)  
   14004c133:	inc    DWORD PTR [rbx-0x7c00f9b6]
   14004c139:	rex.WX (bad) 
   14004c13b:	inc    DWORD PTR [rdx-0x7d00f9b6]
   14004c141:	rex.WX (bad) 
   14004c143:	inc    DWORD PTR [rcx-0x7e00f9b7]
   14004c149:	rex.WB (bad) 
   14004c14b:	inc    DWORD PTR [rax-0x7f00f9b7]
   14004c151:	rex.W (bad) 
   14004c153:	(bad)  
   14004c154:	jg     0x14004c19e
   14004c156:	(bad)  
   14004c157:	(bad)  
   14004c158:	jg     0x14004c1a2
   14004c15a:	(bad)  
   14004c15b:	(bad)  
   14004c15c:	jle    0x14004c1a5
   14004c15e:	(bad)  
   14004c15f:	(bad)  
   14004c160:	jle    0x14004c1a9
   14004c162:	(bad)  
   14004c163:	(bad)  
   14004c164:	jge    0x14004c1ad
   14004c166:	(bad)  
   14004c167:	(bad)  
   14004c168:	jge    0x14004c1b1
   14004c16a:	(bad)  
   14004c16b:	(bad)  
   14004c16c:	jl     0x14004c1b4
   14004c16e:	(bad)  
   14004c16f:	(bad)  
   14004c170:	jnp    0x14004c1b8
   14004c172:	(bad)  
   14004c173:	(bad)  
   14004c174:	jnp    0x14004c1bc
   14004c176:	(bad)  
   14004c177:	(bad)  
   14004c178:	jnp    0x14004c1bf
   14004c17a:	(bad)  
   14004c17b:	(bad)  
   14004c17c:	jp     0x14004c1c3
   14004c17e:	(bad)  
   14004c17f:	(bad)  
   14004c180:	jns    0x14004c1c7
   14004c182:	(bad)  
   14004c183:	(bad)  
   14004c184:	jns    0x14004c1ca
   14004c186:	(bad)  
   14004c187:	(bad)  
   14004c188:	js     0x14004c1ce
   14004c18a:	(bad)  
   14004c18b:	(bad)  
   14004c18c:	js     0x14004c1d2
   14004c18e:	(bad)  
   14004c18f:	push   QWORD PTR [rdi+0x43]
   14004c192:	(bad)  
   14004c193:	push   QWORD PTR [rdi+0x43]
   14004c196:	(bad)  
   14004c197:	push   QWORD PTR [rsi+0x43]
   14004c19a:	(bad)  
   14004c19b:	push   QWORD PTR [rsi+0x42]
   14004c19e:	(bad)  
   14004c19f:	push   QWORD PTR [rbp+0x42]
   14004c1a2:	(bad)  
   14004c1a3:	push   QWORD PTR [rbp+0x42]
   14004c1a6:	(bad)  
   14004c1a7:	push   QWORD PTR [rcx+rax*2+0x7]
   14004c1ab:	push   QWORD PTR [rcx+rax*2+0x7]
   14004c1af:	push   QWORD PTR [rbx+0x41]
   14004c1b2:	(bad)  
   14004c1b3:	push   QWORD PTR [rbx+0x41]
   14004c1b6:	or     bh,bh
   14004c1b8:	jb     0x14004c1fa
   14004c1ba:	or     bh,bh
   14004c1bc:	jno    0x14004c1fe
   14004c1be:	or     bh,bh
   14004c1c0:	jno    0x14004c201
   14004c1c2:	or     bh,bh
   14004c1c4:	jno    0x14004c205
   14004c1c6:	or     bh,bh
   14004c1c8:	jo     0x14004c209
   14004c1ca:	or     bh,bh
   14004c1cc:	outs   dx,DWORD PTR ds:[rsi]
   14004c1cd:	(bad)  
   14004c1ce:	or     bh,bh
   14004c1d0:	outs   dx,DWORD PTR ds:[rsi]
   14004c1d1:	ds or  bh,bh
   14004c1d4:	outs   dx,BYTE PTR ds:[rsi]
   14004c1d5:	ds or  bh,bh
   14004c1d8:	outs   dx,BYTE PTR ds:[rsi]
   14004c1d9:	ds or  bh,bh
   14004c1dc:	ins    DWORD PTR es:[rdi],dx
   14004c1dd:	cmp    eax,0x3d6dff08
   14004c1e2:	or     bh,bh
   14004c1e4:	ins    BYTE PTR es:[rdi],dx
   14004c1e5:	cmp    eax,0x3c6cff08
   14004c1ea:	or     bh,bh
   14004c1ec:	imul   edi,DWORD PTR [rax+rcx*1],0xffffffff
   14004c1f0:	imul   edi,DWORD PTR [rax+rcx*1],0xffffffff
   14004c1f4:	push   0x3c
   14004c1f6:	or     edi,edi
   14004c1f8:	push   0x3b
   14004c1fa:	or     edi,edi
   14004c1fc:	imul   edi,DWORD PTR [rbx],0x3b69ff09
   14004c202:	or     edi,edi
   14004c204:	push   0x68ff093a
   14004c209:	cmp    cl,BYTE PTR [rcx]
   14004c20b:	jmp    QWORD PTR [rdi+0x3a]
   14004c20e:	or     edi,edi
   14004c210:	cmp    DWORD PTR [ecx],ecx
   14004c213:	jmp    QWORD PTR [rsi+0x39]
   14004c216:	or     edi,edi
   14004c218:	cmp    WORD PTR [rcx],cx
   14004c21b:	jmp    QWORD PTR [rsi+0x39]
   14004c21e:	or     edi,edi
   14004c220:	cmp    WORD PTR [rcx],cx
   14004c223:	jmp    QWORD PTR [rsi+0x39]
   14004c226:	or     edi,edi
   14004c228:	cmp    WORD PTR [rcx],cx
   14004c22b:	jmp    QWORD PTR [rsi+0x39]
   14004c22e:	or     edi,edi
   14004c230:	cmp    WORD PTR [rcx],cx
   14004c233:	jmp    QWORD PTR [rsi+0x39]
   14004c236:	or     edi,edi
   14004c238:	cmp    WORD PTR [rcx],cx
   14004c23b:	jmp    QWORD PTR [rsi+0x39]
   14004c23e:	or     edi,edi
   14004c240:	cmp    WORD PTR [rcx],cx
   14004c243:	jmp    QWORD PTR [rsi+0x39]
   14004c246:	or     edi,edi
	...
   14004c288:	fwait
   14004c289:	pop    rax
   14004c28a:	add    edi,edi
   14004c28c:	(bad)  
   14004c28d:	pop    rax
   14004c28e:	add    edi,edi
   14004c290:	(bad)  
   14004c291:	pop    rax
   14004c292:	add    edi,edi
   14004c294:	cdq    
   14004c295:	push   rdi
   14004c296:	add    edi,edi
   14004c298:	cwde   
   14004c299:	push   rdi
   14004c29a:	add    edi,edi
   14004c29c:	cwde   
   14004c29d:	push   rdi
   14004c29e:	add    edi,edi
   14004c2a0:	cwde   
   14004c2a1:	push   rdi
   14004c2a2:	add    edi,edi
   14004c2a4:	xchg   edi,eax
   14004c2a5:	push   rsi
   14004c2a6:	add    edi,edi
   14004c2a8:	xchg   esi,eax
   14004c2a9:	push   rsi
   14004c2aa:	add    edi,edi
   14004c2ac:	xchg   esi,eax
   14004c2ad:	push   rsi
   14004c2ae:	add    edi,edi
   14004c2b0:	xchg   ebp,eax
   14004c2b1:	push   rbp
   14004c2b2:	add    edi,edi
   14004c2b4:	xchg   ebp,eax
   14004c2b5:	push   rbp
   14004c2b6:	add    al,0xff
   14004c2b8:	xchg   esp,eax
   14004c2b9:	push   rbp
   14004c2ba:	add    al,0xff
   14004c2bc:	xchg   esp,eax
   14004c2bd:	push   rsp
   14004c2be:	add    al,0xff
   14004c2c0:	xchg   ebx,eax
   14004c2c1:	push   rsp
   14004c2c2:	add    al,0xff
   14004c2c4:	xchg   ebx,eax
   14004c2c5:	push   rsp
   14004c2c6:	add    al,0xff
   14004c2c8:	xchg   edx,eax
   14004c2c9:	push   rbx
   14004c2ca:	add    al,0xff
   14004c2cc:	xchg   edx,eax
   14004c2cd:	push   rbx
   14004c2ce:	add    al,0xff
   14004c2d0:	xchg   ecx,eax
   14004c2d1:	push   rbx
   14004c2d2:	add    al,0xff
   14004c2d4:	xchg   ecx,eax
   14004c2d5:	push   rdx
   14004c2d6:	add    al,0xff
   14004c2d8:	nop
   14004c2d9:	push   rdx
   14004c2da:	add    al,0xff
   14004c2dc:	nop
   14004c2dd:	push   rdx
   14004c2de:	add    al,0xff
   14004c2e0:	(bad)  
   14004c2e1:	push   rdx
   14004c2e2:	add    al,0xff
   14004c2e4:	mov    ss,WORD PTR [rcx+0x4]
   14004c2e7:	dec    DWORD PTR [rsi-0x7100fbaf]
   14004c2ed:	push   rcx
   14004c2ee:	add    al,0xff
   14004c2f0:	lea    edx,[rax+0x4]
   14004c2f3:	dec    DWORD PTR [rax+rdx*2+0x508cff05]
   14004c2fa:	add    eax,0x54f8bff
   14004c2ff:	dec    DWORD PTR [rbx-0x7500fab1]
   14004c305:	rex.WRXB add rax,0x54e8aff
   14004c30b:	dec    DWORD PTR [rcx-0x7600fab2]
   14004c311:	rex.WRX add rax,0x54d88ff
   14004c317:	dec    DWORD PTR [rax-0x7800fab3]
   14004c31d:	rex.WRB add rax,0x54c87ff
   14004c323:	inc    DWORD PTR [rsi-0x7a00fab4]
   14004c329:	rex.WR add rax,0x54c85ff
   14004c32f:	inc    DWORD PTR [rbx+rcx*2+0x4b84ff05]
   14004c336:	(bad)  
   14004c337:	inc    DWORD PTR [rbx-0x7c00f9b6]
   14004c33d:	rex.WX (bad) 
   14004c33f:	inc    DWORD PTR [rdx-0x7d00f9b6]
   14004c345:	rex.WX (bad) 
   14004c347:	inc    DWORD PTR [rcx-0x7e00f9b7]
   14004c34d:	rex.WB (bad) 
   14004c34f:	inc    DWORD PTR [rax-0x7f00f9b7]
   14004c355:	rex.W (bad) 
   14004c357:	(bad)  
   14004c358:	jg     0x14004c3a2
   14004c35a:	(bad)  
   14004c35b:	(bad)  
   14004c35c:	jg     0x14004c3a6
   14004c35e:	(bad)  
   14004c35f:	(bad)  
   14004c360:	jle    0x14004c3a9
   14004c362:	(bad)  
   14004c363:	(bad)  
   14004c364:	jle    0x14004c3ad
   14004c366:	(bad)  
   14004c367:	(bad)  
   14004c368:	jge    0x14004c3b1
   14004c36a:	(bad)  
   14004c36b:	(bad)  
   14004c36c:	jge    0x14004c3b5
   14004c36e:	(bad)  
   14004c36f:	(bad)  
   14004c370:	jl     0x14004c3b8
   14004c372:	(bad)  
   14004c373:	(bad)  
   14004c374:	jnp    0x14004c3bc
   14004c376:	(bad)  
   14004c377:	(bad)  
   14004c378:	jnp    0x14004c3c0
   14004c37a:	(bad)  
   14004c37b:	(bad)  
   14004c37c:	jnp    0x14004c3c3
   14004c37e:	(bad)  
   14004c37f:	(bad)  
   14004c380:	jp     0x14004c3c7
   14004c382:	(bad)  
   14004c383:	(bad)  
   14004c384:	jns    0x14004c3cb
   14004c386:	(bad)  
   14004c387:	(bad)  
   14004c388:	jns    0x14004c3ce
   14004c38a:	(bad)  
   14004c38b:	(bad)  
   14004c38c:	js     0x14004c3d2
   14004c38e:	(bad)  
   14004c38f:	(bad)  
   14004c390:	js     0x14004c3d6
   14004c392:	(bad)  
   14004c393:	push   QWORD PTR [rdi+0x43]
   14004c396:	(bad)  
   14004c397:	push   QWORD PTR [rdi+0x43]
   14004c39a:	(bad)  
   14004c39b:	push   QWORD PTR [rsi+0x43]
   14004c39e:	(bad)  
   14004c39f:	push   QWORD PTR [rsi+0x42]
   14004c3a2:	(bad)  
   14004c3a3:	push   QWORD PTR [rbp+0x42]
   14004c3a6:	(bad)  
   14004c3a7:	push   QWORD PTR [rbp+0x42]
   14004c3aa:	(bad)  
   14004c3ab:	push   QWORD PTR [rcx+rax*2+0x7]
   14004c3af:	push   QWORD PTR [rcx+rax*2+0x7]
   14004c3b3:	push   QWORD PTR [rbx+0x41]
   14004c3b6:	(bad)  
   14004c3b7:	push   QWORD PTR [rbx+0x41]
   14004c3ba:	or     bh,bh
   14004c3bc:	jb     0x14004c3fe
   14004c3be:	or     bh,bh
   14004c3c0:	jno    0x14004c402
   14004c3c2:	or     bh,bh
   14004c3c4:	jno    0x14004c405
   14004c3c6:	or     bh,bh
   14004c3c8:	jno    0x14004c409
   14004c3ca:	or     bh,bh
   14004c3cc:	jo     0x14004c40d
   14004c3ce:	or     bh,bh
   14004c3d0:	outs   dx,DWORD PTR ds:[rsi]
   14004c3d1:	(bad)  
   14004c3d2:	or     bh,bh
   14004c3d4:	outs   dx,DWORD PTR ds:[rsi]
   14004c3d5:	ds or  bh,bh
   14004c3d8:	outs   dx,BYTE PTR ds:[rsi]
   14004c3d9:	ds or  bh,bh
   14004c3dc:	outs   dx,BYTE PTR ds:[rsi]
   14004c3dd:	ds or  bh,bh
   14004c3e0:	ins    DWORD PTR es:[rdi],dx
   14004c3e1:	cmp    eax,0x3d6dff08
   14004c3e6:	or     bh,bh
   14004c3e8:	ins    BYTE PTR es:[rdi],dx
   14004c3e9:	cmp    eax,0x3c6cff08
   14004c3ee:	or     bh,bh
   14004c3f0:	imul   edi,DWORD PTR [rax+rcx*1],0xffffffff
   14004c3f4:	imul   edi,DWORD PTR [rax+rcx*1],0xffffffff
   14004c3f8:	push   0x3c
   14004c3fa:	or     edi,edi
   14004c3fc:	push   0x3b
   14004c3fe:	or     edi,edi
   14004c400:	imul   edi,DWORD PTR [rbx],0x3b69ff09
   14004c406:	or     edi,edi
   14004c408:	push   0x68ff093a
   14004c40d:	cmp    cl,BYTE PTR [rcx]
   14004c40f:	jmp    QWORD PTR [rdi+0x3a]
   14004c412:	or     edi,edi
   14004c414:	cmp    DWORD PTR [ecx],ecx
   14004c417:	jmp    QWORD PTR [rsi+0x39]
   14004c41a:	or     edi,edi
   14004c41c:	cmp    WORD PTR [rcx],cx
   14004c41f:	jmp    QWORD PTR [rsi+0x39]
   14004c422:	or     edi,edi
   14004c424:	cmp    WORD PTR [rcx],cx
   14004c427:	jmp    QWORD PTR [rsi+0x39]
   14004c42a:	or     edi,edi
   14004c42c:	cmp    WORD PTR [rcx],cx
   14004c42f:	jmp    QWORD PTR [rsi+0x39]
   14004c432:	or     edi,edi
   14004c434:	cmp    WORD PTR [rcx],cx
   14004c437:	jmp    QWORD PTR [rsi+0x39]
   14004c43a:	or     edi,edi
   14004c43c:	cmp    WORD PTR [rcx],cx
   14004c43f:	jmp    QWORD PTR [rsi+0x39]
   14004c442:	or     edi,edi
   14004c444:	cmp    WORD PTR [rcx],cx
   14004c447:	inc    DWORD PTR [rax]
	...
   14004c485:	add    BYTE PTR [rax],al
   14004c487:	add    BYTE PTR [rbx-0x6400fca7],bl
   14004c48d:	pop    rax
   14004c48e:	add    edi,edi
   14004c490:	(bad)  
   14004c491:	pop    rax
   14004c492:	add    edi,edi
   14004c494:	(bad)  
   14004c495:	pop    rax
   14004c496:	add    edi,edi
   14004c498:	cdq    
   14004c499:	push   rdi
   14004c49a:	add    edi,edi
   14004c49c:	cwde   
   14004c49d:	push   rdi
   14004c49e:	add    edi,edi
   14004c4a0:	cwde   
   14004c4a1:	push   rdi
   14004c4a2:	add    edi,edi
   14004c4a4:	cwde   
   14004c4a5:	push   rdi
   14004c4a6:	add    edi,edi
   14004c4a8:	xchg   edi,eax
   14004c4a9:	push   rsi
   14004c4aa:	add    edi,edi
   14004c4ac:	xchg   esi,eax
   14004c4ad:	push   rsi
   14004c4ae:	add    edi,edi
   14004c4b0:	xchg   esi,eax
   14004c4b1:	push   rsi
   14004c4b2:	add    edi,edi
   14004c4b4:	xchg   ebp,eax
   14004c4b5:	push   rbp
   14004c4b6:	add    edi,edi
   14004c4b8:	xchg   ebp,eax
   14004c4b9:	push   rbp
   14004c4ba:	add    al,0xff
   14004c4bc:	xchg   esp,eax
   14004c4bd:	push   rbp
   14004c4be:	add    al,0xff
   14004c4c0:	xchg   esp,eax
   14004c4c1:	push   rsp
   14004c4c2:	add    al,0xff
   14004c4c4:	xchg   ebx,eax
   14004c4c5:	push   rsp
   14004c4c6:	add    al,0xff
   14004c4c8:	xchg   ebx,eax
   14004c4c9:	push   rsp
   14004c4ca:	add    al,0xff
   14004c4cc:	xchg   edx,eax
   14004c4cd:	push   rbx
   14004c4ce:	add    al,0xff
   14004c4d0:	xchg   edx,eax
   14004c4d1:	push   rbx
   14004c4d2:	add    al,0xff
   14004c4d4:	xchg   ecx,eax
   14004c4d5:	push   rbx
   14004c4d6:	add    al,0xff
   14004c4d8:	xchg   ecx,eax
   14004c4d9:	push   rdx
   14004c4da:	add    al,0xff
   14004c4dc:	nop
   14004c4dd:	push   rdx
   14004c4de:	add    al,0xff
   14004c4e0:	nop
   14004c4e1:	push   rdx
   14004c4e2:	add    al,0xff
   14004c4e4:	(bad)  
   14004c4e5:	push   rdx
   14004c4e6:	add    al,0xff
   14004c4e8:	mov    ss,WORD PTR [rcx+0x4]
   14004c4eb:	dec    DWORD PTR [rsi-0x7100fbaf]
   14004c4f1:	push   rcx
   14004c4f2:	add    al,0xff
   14004c4f4:	lea    edx,[rax+0x4]
   14004c4f7:	dec    DWORD PTR [rax+rdx*2+0x508cff05]
   14004c4fe:	add    eax,0x54f8bff
   14004c503:	dec    DWORD PTR [rbx-0x7500fab1]
   14004c509:	rex.WRXB add rax,0x54e8aff
   14004c50f:	dec    DWORD PTR [rcx-0x7600fab2]
   14004c515:	rex.WRX add rax,0x54d88ff
   14004c51b:	dec    DWORD PTR [rax-0x7800fab3]
   14004c521:	rex.WRB add rax,0x54c87ff
   14004c527:	inc    DWORD PTR [rsi-0x7a00fab4]
   14004c52d:	rex.WR add rax,0x54c85ff
   14004c533:	inc    DWORD PTR [rbx+rcx*2+0x4b84ff05]
   14004c53a:	(bad)  
   14004c53b:	inc    DWORD PTR [rbx-0x7c00f9b6]
   14004c541:	rex.WX (bad) 
   14004c543:	inc    DWORD PTR [rdx-0x7d00f9b6]
   14004c549:	rex.WX (bad) 
   14004c54b:	inc    DWORD PTR [rcx-0x7e00f9b7]
   14004c551:	rex.WB (bad) 
   14004c553:	inc    DWORD PTR [rax-0x7f00f9b7]
   14004c559:	rex.W (bad) 
   14004c55b:	(bad)  
   14004c55c:	jg     0x14004c5a6
   14004c55e:	(bad)  
   14004c55f:	(bad)  
   14004c560:	jg     0x14004c5aa
   14004c562:	(bad)  
   14004c563:	(bad)  
   14004c564:	jle    0x14004c5ad
   14004c566:	(bad)  
   14004c567:	(bad)  
   14004c568:	jle    0x14004c5b1
   14004c56a:	(bad)  
   14004c56b:	(bad)  
   14004c56c:	jge    0x14004c5b5
   14004c56e:	(bad)  
   14004c56f:	(bad)  
   14004c570:	jge    0x14004c5b9
   14004c572:	(bad)  
   14004c573:	(bad)  
   14004c574:	jl     0x14004c5bc
   14004c576:	(bad)  
   14004c577:	(bad)  
   14004c578:	jnp    0x14004c5c0
   14004c57a:	(bad)  
   14004c57b:	(bad)  
   14004c57c:	jnp    0x14004c5c4
   14004c57e:	(bad)  
   14004c57f:	(bad)  
   14004c580:	jnp    0x14004c5c7
   14004c582:	(bad)  
   14004c583:	(bad)  
   14004c584:	jp     0x14004c5cb
   14004c586:	(bad)  
   14004c587:	(bad)  
   14004c588:	jns    0x14004c5cf
   14004c58a:	(bad)  
   14004c58b:	(bad)  
   14004c58c:	jns    0x14004c5d2
   14004c58e:	(bad)  
   14004c58f:	(bad)  
   14004c590:	js     0x14004c5d6
   14004c592:	(bad)  
   14004c593:	(bad)  
   14004c594:	js     0x14004c5da
   14004c596:	(bad)  
   14004c597:	push   QWORD PTR [rdi+0x43]
   14004c59a:	(bad)  
   14004c59b:	push   QWORD PTR [rdi+0x43]
   14004c59e:	(bad)  
   14004c59f:	push   QWORD PTR [rsi+0x43]
   14004c5a2:	(bad)  
   14004c5a3:	push   QWORD PTR [rsi+0x42]
   14004c5a6:	(bad)  
   14004c5a7:	push   QWORD PTR [rbp+0x42]
   14004c5aa:	(bad)  
   14004c5ab:	push   QWORD PTR [rbp+0x42]
   14004c5ae:	(bad)  
   14004c5af:	push   QWORD PTR [rcx+rax*2+0x7]
   14004c5b3:	push   QWORD PTR [rcx+rax*2+0x7]
   14004c5b7:	push   QWORD PTR [rbx+0x41]
   14004c5ba:	(bad)  
   14004c5bb:	push   QWORD PTR [rbx+0x41]
   14004c5be:	or     bh,bh
   14004c5c0:	jb     0x14004c602
   14004c5c2:	or     bh,bh
   14004c5c4:	jno    0x14004c606
   14004c5c6:	or     bh,bh
   14004c5c8:	jno    0x14004c609
   14004c5ca:	or     bh,bh
   14004c5cc:	jno    0x14004c60d
   14004c5ce:	or     bh,bh
   14004c5d0:	jo     0x14004c611
   14004c5d2:	or     bh,bh
   14004c5d4:	outs   dx,DWORD PTR ds:[rsi]
   14004c5d5:	(bad)  
   14004c5d6:	or     bh,bh
   14004c5d8:	outs   dx,DWORD PTR ds:[rsi]
   14004c5d9:	ds or  bh,bh
   14004c5dc:	outs   dx,BYTE PTR ds:[rsi]
   14004c5dd:	ds or  bh,bh
   14004c5e0:	outs   dx,BYTE PTR ds:[rsi]
   14004c5e1:	ds or  bh,bh
   14004c5e4:	ins    DWORD PTR es:[rdi],dx
   14004c5e5:	cmp    eax,0x3d6dff08
   14004c5ea:	or     bh,bh
   14004c5ec:	ins    BYTE PTR es:[rdi],dx
   14004c5ed:	cmp    eax,0x3c6cff08
   14004c5f2:	or     bh,bh
   14004c5f4:	imul   edi,DWORD PTR [rax+rcx*1],0xffffffff
   14004c5f8:	imul   edi,DWORD PTR [rax+rcx*1],0xffffffff
   14004c5fc:	push   0x3c
   14004c5fe:	or     edi,edi
   14004c600:	push   0x3b
   14004c602:	or     edi,edi
   14004c604:	imul   edi,DWORD PTR [rbx],0x3b69ff09
   14004c60a:	or     edi,edi
   14004c60c:	push   0x68ff093a
   14004c611:	cmp    cl,BYTE PTR [rcx]
   14004c613:	jmp    QWORD PTR [rdi+0x3a]
   14004c616:	or     edi,edi
   14004c618:	cmp    DWORD PTR [ecx],ecx
   14004c61b:	jmp    QWORD PTR [rsi+0x39]
   14004c61e:	or     edi,edi
   14004c620:	cmp    WORD PTR [rcx],cx
   14004c623:	jmp    QWORD PTR [rsi+0x39]
   14004c626:	or     edi,edi
   14004c628:	cmp    WORD PTR [rcx],cx
   14004c62b:	jmp    QWORD PTR [rsi+0x39]
   14004c62e:	or     edi,edi
   14004c630:	cmp    WORD PTR [rcx],cx
   14004c633:	jmp    QWORD PTR [rsi+0x39]
   14004c636:	or     edi,edi
   14004c638:	cmp    WORD PTR [rcx],cx
   14004c63b:	jmp    QWORD PTR [rsi+0x39]
   14004c63e:	or     edi,edi
   14004c640:	cmp    WORD PTR [rcx],cx
   14004c643:	jmp    QWORD PTR [rsi+0x39]
   14004c646:	or     edi,edi
	...
   14004c688:	pushf  
   14004c689:	pop    rcx
   14004c68a:	add    edi,edi
   14004c68c:	fwait
   14004c68d:	pop    rcx
   14004c68e:	add    edi,edi
   14004c690:	fwait
   14004c691:	pop    rax
   14004c692:	add    edi,edi
   14004c694:	(bad)  
   14004c695:	pop    rax
   14004c696:	add    edi,edi
   14004c698:	(bad)  
   14004c699:	pop    rax
   14004c69a:	add    edi,edi
   14004c69c:	cdq    
   14004c69d:	push   rdi
   14004c69e:	add    edi,edi
   14004c6a0:	cwde   
   14004c6a1:	push   rdi
   14004c6a2:	add    edi,edi
   14004c6a4:	cwde   
   14004c6a5:	push   rdi
   14004c6a6:	add    edi,edi
   14004c6a8:	cwde   
   14004c6a9:	push   rdi
   14004c6aa:	add    edi,edi
   14004c6ac:	xchg   edi,eax
   14004c6ad:	push   rsi
   14004c6ae:	add    edi,edi
   14004c6b0:	xchg   esi,eax
   14004c6b1:	push   rsi
   14004c6b2:	add    edi,edi
   14004c6b4:	xchg   esi,eax
   14004c6b5:	push   rsi
   14004c6b6:	add    edi,edi
   14004c6b8:	xchg   ebp,eax
   14004c6b9:	push   rbp
   14004c6ba:	add    edi,edi
   14004c6bc:	xchg   ebp,eax
   14004c6bd:	push   rbp
   14004c6be:	add    al,0xff
   14004c6c0:	xchg   esp,eax
   14004c6c1:	push   rbp
   14004c6c2:	add    al,0xff
   14004c6c4:	xchg   esp,eax
   14004c6c5:	push   rsp
   14004c6c6:	add    al,0xff
   14004c6c8:	xchg   ebx,eax
   14004c6c9:	push   rsp
   14004c6ca:	add    al,0xff
   14004c6cc:	xchg   ebx,eax
   14004c6cd:	push   rsp
   14004c6ce:	add    al,0xff
   14004c6d0:	xchg   edx,eax
   14004c6d1:	push   rbx
   14004c6d2:	add    al,0xff
   14004c6d4:	xchg   edx,eax
   14004c6d5:	push   rbx
   14004c6d6:	add    al,0xff
   14004c6d8:	xchg   ecx,eax
   14004c6d9:	push   rbx
   14004c6da:	add    al,0xff
   14004c6dc:	xchg   ecx,eax
   14004c6dd:	push   rdx
   14004c6de:	add    al,0xff
   14004c6e0:	nop
   14004c6e1:	push   rdx
   14004c6e2:	add    al,0xff
   14004c6e4:	nop
   14004c6e5:	push   rdx
   14004c6e6:	add    al,0xff
   14004c6e8:	(bad)  
   14004c6e9:	push   rdx
   14004c6ea:	add    al,0xff
   14004c6ec:	mov    ss,WORD PTR [rcx+0x4]
   14004c6ef:	dec    DWORD PTR [rsi-0x7100fbaf]
   14004c6f5:	push   rcx
   14004c6f6:	add    al,0xff
   14004c6f8:	lea    edx,[rax+0x4]
   14004c6fb:	dec    DWORD PTR [rax+rdx*2+0x508cff05]
   14004c702:	add    eax,0x54f8bff
   14004c707:	dec    DWORD PTR [rbx-0x7500fab1]
   14004c70d:	rex.WRXB add rax,0x54e8aff
   14004c713:	dec    DWORD PTR [rcx-0x7600fab2]
   14004c719:	rex.WRX add rax,0x54d88ff
   14004c71f:	dec    DWORD PTR [rax-0x7800fab3]
   14004c725:	rex.WRB add rax,0x54c87ff
   14004c72b:	inc    DWORD PTR [rsi-0x7a00fab4]
   14004c731:	rex.WR add rax,0x54c85ff
   14004c737:	inc    DWORD PTR [rbx+rcx*2+0x4b84ff05]
   14004c73e:	(bad)  
   14004c73f:	inc    DWORD PTR [rbx-0x7c00f9b6]
   14004c745:	rex.WX (bad) 
   14004c747:	inc    DWORD PTR [rdx-0x7d00f9b6]
   14004c74d:	rex.WX (bad) 
   14004c74f:	inc    DWORD PTR [rcx-0x7e00f9b7]
   14004c755:	rex.WB (bad) 
   14004c757:	inc    DWORD PTR [rax-0x7f00f9b7]
   14004c75d:	rex.W (bad) 
   14004c75f:	(bad)  
   14004c760:	jg     0x14004c7aa
   14004c762:	(bad)  
   14004c763:	(bad)  
   14004c764:	jg     0x14004c7ae
   14004c766:	(bad)  
   14004c767:	(bad)  
   14004c768:	jle    0x14004c7b1
   14004c76a:	(bad)  
   14004c76b:	(bad)  
   14004c76c:	jle    0x14004c7b5
   14004c76e:	(bad)  
   14004c76f:	(bad)  
   14004c770:	jge    0x14004c7b9
   14004c772:	(bad)  
   14004c773:	(bad)  
   14004c774:	jge    0x14004c7bd
   14004c776:	(bad)  
   14004c777:	(bad)  
   14004c778:	jl     0x14004c7c0
   14004c77a:	(bad)  
   14004c77b:	(bad)  
   14004c77c:	jnp    0x14004c7c4
   14004c77e:	(bad)  
   14004c77f:	(bad)  
   14004c780:	jnp    0x14004c7c8
   14004c782:	(bad)  
   14004c783:	(bad)  
   14004c784:	jnp    0x14004c7cb
   14004c786:	(bad)  
   14004c787:	(bad)  
   14004c788:	jp     0x14004c7cf
   14004c78a:	(bad)  
   14004c78b:	(bad)  
   14004c78c:	jns    0x14004c7d3
   14004c78e:	(bad)  
   14004c78f:	(bad)  
   14004c790:	jns    0x14004c7d6
   14004c792:	(bad)  
   14004c793:	(bad)  
   14004c794:	js     0x14004c7da
   14004c796:	(bad)  
   14004c797:	(bad)  
   14004c798:	js     0x14004c7de
   14004c79a:	(bad)  
   14004c79b:	push   QWORD PTR [rdi+0x43]
   14004c79e:	(bad)  
   14004c79f:	push   QWORD PTR [rdi+0x43]
   14004c7a2:	(bad)  
   14004c7a3:	push   QWORD PTR [rsi+0x43]
   14004c7a6:	(bad)  
   14004c7a7:	push   QWORD PTR [rsi+0x42]
   14004c7aa:	(bad)  
   14004c7ab:	push   QWORD PTR [rbp+0x42]
   14004c7ae:	(bad)  
   14004c7af:	push   QWORD PTR [rbp+0x42]
   14004c7b2:	(bad)  
   14004c7b3:	push   QWORD PTR [rcx+rax*2+0x7]
   14004c7b7:	push   QWORD PTR [rcx+rax*2+0x7]
   14004c7bb:	push   QWORD PTR [rbx+0x41]
   14004c7be:	(bad)  
   14004c7bf:	push   QWORD PTR [rbx+0x41]
   14004c7c2:	or     bh,bh
   14004c7c4:	jb     0x14004c806
   14004c7c6:	or     bh,bh
   14004c7c8:	jno    0x14004c80a
   14004c7ca:	or     bh,bh
   14004c7cc:	jno    0x14004c80d
   14004c7ce:	or     bh,bh
   14004c7d0:	jno    0x14004c811
   14004c7d2:	or     bh,bh
   14004c7d4:	jo     0x14004c815
   14004c7d6:	or     bh,bh
   14004c7d8:	outs   dx,DWORD PTR ds:[rsi]
   14004c7d9:	(bad)  
   14004c7da:	or     bh,bh
   14004c7dc:	outs   dx,DWORD PTR ds:[rsi]
   14004c7dd:	ds or  bh,bh
   14004c7e0:	outs   dx,BYTE PTR ds:[rsi]
   14004c7e1:	ds or  bh,bh
   14004c7e4:	outs   dx,BYTE PTR ds:[rsi]
   14004c7e5:	ds or  bh,bh
   14004c7e8:	ins    DWORD PTR es:[rdi],dx
   14004c7e9:	cmp    eax,0x3d6dff08
   14004c7ee:	or     bh,bh
   14004c7f0:	ins    BYTE PTR es:[rdi],dx
   14004c7f1:	cmp    eax,0x3c6cff08
   14004c7f6:	or     bh,bh
   14004c7f8:	imul   edi,DWORD PTR [rax+rcx*1],0xffffffff
   14004c7fc:	imul   edi,DWORD PTR [rax+rcx*1],0xffffffff
   14004c800:	push   0x3c
   14004c802:	or     edi,edi
   14004c804:	push   0x3b
   14004c806:	or     edi,edi
   14004c808:	imul   edi,DWORD PTR [rbx],0x3b69ff09
   14004c80e:	or     edi,edi
   14004c810:	push   0x68ff093a
   14004c815:	cmp    cl,BYTE PTR [rcx]
   14004c817:	jmp    QWORD PTR [rdi+0x3a]
   14004c81a:	or     edi,edi
   14004c81c:	cmp    DWORD PTR [ecx],ecx
   14004c81f:	jmp    QWORD PTR [rsi+0x39]
   14004c822:	or     edi,edi
   14004c824:	cmp    WORD PTR [rcx],cx
   14004c827:	jmp    QWORD PTR [rsi+0x39]
   14004c82a:	or     edi,edi
   14004c82c:	cmp    WORD PTR [rcx],cx
   14004c82f:	jmp    QWORD PTR [rsi+0x39]
   14004c832:	or     edi,edi
   14004c834:	cmp    WORD PTR [rcx],cx
   14004c837:	jmp    QWORD PTR [rsi+0x39]
   14004c83a:	or     edi,edi
   14004c83c:	cmp    WORD PTR [rcx],cx
   14004c83f:	jmp    QWORD PTR [rsi+0x39]
   14004c842:	or     edi,edi
   14004c844:	cmp    WORD PTR [rcx],cx
   14004c847:	inc    DWORD PTR [rax]
	...
   14004c885:	add    BYTE PTR [rax],al
   14004c887:	add    BYTE PTR [rcx+rbx*2+0x599cff03],bl
   14004c88e:	add    edi,edi
   14004c890:	fwait
   14004c891:	pop    rcx
   14004c892:	add    edi,edi
   14004c894:	fwait
   14004c895:	pop    rax
   14004c896:	add    edi,edi
   14004c898:	(bad)  
   14004c899:	pop    rax
   14004c89a:	add    edi,edi
   14004c89c:	(bad)  
   14004c89d:	pop    rax
   14004c89e:	add    edi,edi
   14004c8a0:	cdq    
   14004c8a1:	push   rdi
   14004c8a2:	add    edi,edi
   14004c8a4:	cwde   
   14004c8a5:	push   rdi
   14004c8a6:	add    edi,edi
   14004c8a8:	cwde   
   14004c8a9:	push   rdi
   14004c8aa:	add    edi,edi
   14004c8ac:	cwde   
   14004c8ad:	push   rdi
   14004c8ae:	add    edi,edi
   14004c8b0:	xchg   edi,eax
   14004c8b1:	push   rsi
   14004c8b2:	add    edi,edi
   14004c8b4:	xchg   esi,eax
   14004c8b5:	push   rsi
   14004c8b6:	add    edi,edi
   14004c8b8:	xchg   esi,eax
   14004c8b9:	push   rsi
   14004c8ba:	add    edi,edi
   14004c8bc:	xchg   ebp,eax
   14004c8bd:	push   rbp
   14004c8be:	add    edi,edi
   14004c8c0:	xchg   ebp,eax
   14004c8c1:	push   rbp
   14004c8c2:	add    al,0xff
   14004c8c4:	xchg   esp,eax
   14004c8c5:	push   rbp
   14004c8c6:	add    al,0xff
   14004c8c8:	xchg   esp,eax
   14004c8c9:	push   rsp
   14004c8ca:	add    al,0xff
   14004c8cc:	xchg   ebx,eax
   14004c8cd:	push   rsp
   14004c8ce:	add    al,0xff
   14004c8d0:	xchg   ebx,eax
   14004c8d1:	push   rsp
   14004c8d2:	add    al,0xff
   14004c8d4:	xchg   edx,eax
   14004c8d5:	push   rbx
   14004c8d6:	add    al,0xff
   14004c8d8:	xchg   edx,eax
   14004c8d9:	push   rbx
   14004c8da:	add    al,0xff
   14004c8dc:	xchg   ecx,eax
   14004c8dd:	push   rbx
   14004c8de:	add    al,0xff
   14004c8e0:	xchg   ecx,eax
   14004c8e1:	push   rdx
   14004c8e2:	add    al,0xff
   14004c8e4:	nop
   14004c8e5:	push   rdx
   14004c8e6:	add    al,0xff
   14004c8e8:	nop
   14004c8e9:	push   rdx
   14004c8ea:	add    al,0xff
   14004c8ec:	(bad)  
   14004c8ed:	push   rdx
   14004c8ee:	add    al,0xff
   14004c8f0:	mov    ss,WORD PTR [rcx+0x4]
   14004c8f3:	dec    DWORD PTR [rsi-0x7100fbaf]
   14004c8f9:	push   rcx
   14004c8fa:	add    al,0xff
   14004c8fc:	lea    edx,[rax+0x4]
   14004c8ff:	dec    DWORD PTR [rax+rdx*2+0x508cff05]
   14004c906:	add    eax,0x54f8bff
   14004c90b:	dec    DWORD PTR [rbx-0x7500fab1]
   14004c911:	rex.WRXB add rax,0x54e8aff
   14004c917:	dec    DWORD PTR [rcx-0x7600fab2]
   14004c91d:	rex.WRX add rax,0x54d88ff
   14004c923:	dec    DWORD PTR [rax-0x7800fab3]
   14004c929:	rex.WRB add rax,0x54c87ff
   14004c92f:	inc    DWORD PTR [rsi-0x7a00fab4]
   14004c935:	rex.WR add rax,0x54c85ff
   14004c93b:	inc    DWORD PTR [rbx+rcx*2+0x4b84ff05]
   14004c942:	(bad)  
   14004c943:	inc    DWORD PTR [rbx-0x7c00f9b6]
   14004c949:	rex.WX (bad) 
   14004c94b:	inc    DWORD PTR [rdx-0x7d00f9b6]
   14004c951:	rex.WX (bad) 
   14004c953:	inc    DWORD PTR [rcx-0x7e00f9b7]
   14004c959:	rex.WB (bad) 
   14004c95b:	inc    DWORD PTR [rax-0x7f00f9b7]
   14004c961:	rex.W (bad) 
   14004c963:	jmp    QWORD PTR [rbx+0x3b]
   14004c966:	ud0    esp,DWORD PTR [rbx+0x3b]
   14004c96a:	ud0    edi,DWORD PTR [rsi+0x47]
   14004c96e:	(bad)  
   14004c96f:	(bad)  
   14004c970:	jle    0x14004c9b9
   14004c972:	(bad)  
   14004c973:	(bad)  
   14004c974:	jge    0x14004c9bd
   14004c976:	(bad)  
   14004c977:	(bad)  
   14004c978:	jge    0x14004c9c1
   14004c97a:	(bad)  
   14004c97b:	(bad)  
   14004c97c:	jl     0x14004c9c4
   14004c97e:	(bad)  
   14004c97f:	(bad)  
   14004c980:	jnp    0x14004c9c8
   14004c982:	(bad)  
   14004c983:	(bad)  
   14004c984:	jnp    0x14004c9cc
   14004c986:	(bad)  
   14004c987:	(bad)  
   14004c988:	jnp    0x14004c9cf
   14004c98a:	(bad)  
   14004c98b:	(bad)  
   14004c98c:	jp     0x14004c9d3
   14004c98e:	(bad)  
   14004c98f:	(bad)  
   14004c990:	jns    0x14004c9d7
   14004c992:	(bad)  
   14004c993:	(bad)  
   14004c994:	jns    0x14004c9da
   14004c996:	(bad)  
   14004c997:	(bad)  
   14004c998:	js     0x14004c9de
   14004c99a:	(bad)  
   14004c99b:	(bad)  
   14004c99c:	js     0x14004c9e2
   14004c99e:	(bad)  
   14004c99f:	push   QWORD PTR [rdi+0x43]
   14004c9a2:	(bad)  
   14004c9a3:	push   QWORD PTR [rdi+0x43]
   14004c9a6:	(bad)  
   14004c9a7:	push   QWORD PTR [rsi+0x43]
   14004c9aa:	(bad)  
   14004c9ab:	push   QWORD PTR [rsi+0x42]
   14004c9ae:	(bad)  
   14004c9af:	push   QWORD PTR [rbp+0x42]
   14004c9b2:	(bad)  
   14004c9b3:	push   QWORD PTR [rbp+0x42]
   14004c9b6:	(bad)  
   14004c9b7:	push   QWORD PTR [rcx+rax*2+0x7]
   14004c9bb:	push   QWORD PTR [rcx+rax*2+0x7]
   14004c9bf:	push   QWORD PTR [rbx+0x41]
   14004c9c2:	(bad)  
   14004c9c3:	push   QWORD PTR [rbx+0x41]
   14004c9c6:	or     bh,bh
   14004c9c8:	jb     0x14004ca0a
   14004c9ca:	or     bh,bh
   14004c9cc:	jno    0x14004ca0e
   14004c9ce:	or     bh,bh
   14004c9d0:	jno    0x14004ca11
   14004c9d2:	or     bh,bh
   14004c9d4:	jno    0x14004ca15
   14004c9d6:	or     bh,bh
   14004c9d8:	jo     0x14004ca19
   14004c9da:	or     bh,bh
   14004c9dc:	outs   dx,DWORD PTR ds:[rsi]
   14004c9dd:	(bad)  
   14004c9de:	or     bh,bh
   14004c9e0:	outs   dx,DWORD PTR ds:[rsi]
   14004c9e1:	ds or  bh,bh
   14004c9e4:	outs   dx,BYTE PTR ds:[rsi]
   14004c9e5:	ds or  bh,bh
   14004c9e8:	outs   dx,BYTE PTR ds:[rsi]
   14004c9e9:	ds or  bh,bh
   14004c9ec:	ins    DWORD PTR es:[rdi],dx
   14004c9ed:	cmp    eax,0x3d6dff08
   14004c9f2:	or     bh,bh
   14004c9f4:	ins    BYTE PTR es:[rdi],dx
   14004c9f5:	cmp    eax,0x3c6cff08
   14004c9fa:	or     bh,bh
   14004c9fc:	imul   edi,DWORD PTR [rax+rcx*1],0xffffffff
   14004ca00:	imul   edi,DWORD PTR [rax+rcx*1],0xffffffff
   14004ca04:	push   0x3c
   14004ca06:	or     edi,edi
   14004ca08:	push   0x3b
   14004ca0a:	or     edi,edi
   14004ca0c:	imul   edi,DWORD PTR [rbx],0x3b69ff09
   14004ca12:	or     edi,edi
   14004ca14:	push   0x68ff093a
   14004ca19:	cmp    cl,BYTE PTR [rcx]
   14004ca1b:	jmp    QWORD PTR [rdi+0x3a]
   14004ca1e:	or     edi,edi
   14004ca20:	cmp    DWORD PTR [ecx],ecx
   14004ca23:	jmp    QWORD PTR [rsi+0x39]
   14004ca26:	or     edi,edi
   14004ca28:	cmp    WORD PTR [rcx],cx
   14004ca2b:	jmp    QWORD PTR [rsi+0x39]
   14004ca2e:	or     edi,edi
   14004ca30:	cmp    WORD PTR [rcx],cx
   14004ca33:	jmp    QWORD PTR [rsi+0x39]
   14004ca36:	or     edi,edi
   14004ca38:	cmp    WORD PTR [rcx],cx
   14004ca3b:	jmp    QWORD PTR [rsi+0x39]
   14004ca3e:	or     edi,edi
   14004ca40:	cmp    WORD PTR [rcx],cx
   14004ca43:	jmp    QWORD PTR [rsi+0x39]
   14004ca46:	or     edi,edi
	...
   14004ca88:	popf   
   14004ca89:	pop    rdx
   14004ca8a:	add    edi,edi
   14004ca8c:	pushf  
   14004ca8d:	pop    rcx
   14004ca8e:	add    edi,edi
   14004ca90:	pushf  
   14004ca91:	pop    rcx
   14004ca92:	add    edi,edi
   14004ca94:	fwait
   14004ca95:	pop    rcx
   14004ca96:	add    edi,edi
   14004ca98:	fwait
   14004ca99:	pop    rax
   14004ca9a:	add    edi,edi
   14004ca9c:	(bad)  
   14004ca9d:	pop    rax
   14004ca9e:	add    edi,edi
   14004caa0:	(bad)  
   14004caa1:	pop    rax
   14004caa2:	add    edi,edi
   14004caa4:	cdq    
   14004caa5:	push   rdi
   14004caa6:	add    edi,edi
   14004caa8:	cwde   
   14004caa9:	push   rdi
   14004caaa:	add    edi,edi
   14004caac:	cwde   
   14004caad:	push   rdi
   14004caae:	add    edi,edi
   14004cab0:	cwde   
   14004cab1:	push   rdi
   14004cab2:	add    edi,edi
   14004cab4:	xchg   edi,eax
   14004cab5:	push   rsi
   14004cab6:	add    edi,edi
   14004cab8:	xchg   esi,eax
   14004cab9:	push   rsi
   14004caba:	add    edi,edi
   14004cabc:	xchg   esi,eax
   14004cabd:	push   rsi
   14004cabe:	add    edi,edi
   14004cac0:	xchg   ebp,eax
   14004cac1:	push   rbp
   14004cac2:	add    edi,edi
   14004cac4:	xchg   ebp,eax
   14004cac5:	push   rbp
   14004cac6:	add    al,0xff
   14004cac8:	xchg   esp,eax
   14004cac9:	push   rbp
   14004caca:	add    al,0xff
   14004cacc:	xchg   esp,eax
   14004cacd:	push   rsp
   14004cace:	add    al,0xff
   14004cad0:	xchg   ebx,eax
   14004cad1:	push   rsp
   14004cad2:	add    al,0xff
   14004cad4:	xchg   ebx,eax
   14004cad5:	push   rsp
   14004cad6:	add    al,0xff
   14004cad8:	xchg   edx,eax
   14004cad9:	push   rbx
   14004cada:	add    al,0xff
   14004cadc:	xchg   edx,eax
   14004cadd:	push   rbx
   14004cade:	add    al,0xff
   14004cae0:	xchg   ecx,eax
   14004cae1:	push   rbx
   14004cae2:	add    al,0xff
   14004cae4:	xchg   ecx,eax
   14004cae5:	push   rdx
   14004cae6:	add    al,0xff
   14004cae8:	nop
   14004cae9:	push   rdx
   14004caea:	add    al,0xff
   14004caec:	nop
   14004caed:	push   rdx
   14004caee:	add    al,0xff
   14004caf0:	(bad)  
   14004caf1:	push   rdx
   14004caf2:	add    al,0xff
   14004caf4:	mov    ss,WORD PTR [rcx+0x4]
   14004caf7:	dec    DWORD PTR [rsi-0x7100fbaf]
   14004cafd:	push   rcx
   14004cafe:	add    al,0xff
   14004cb00:	lea    edx,[rax+0x4]
   14004cb03:	dec    DWORD PTR [rax+rdx*2+0x508cff05]
   14004cb0a:	add    eax,0x54f8bff
   14004cb0f:	dec    DWORD PTR [rbx-0x7500fab1]
   14004cb15:	rex.WRXB add rax,0x54e8aff
   14004cb1b:	dec    DWORD PTR [rcx-0x7600fab2]
   14004cb21:	rex.WRX add rax,0x54d88ff
   14004cb27:	dec    DWORD PTR [rax-0x7800fab3]
   14004cb2d:	rex.WRB add rax,0x54c87ff
   14004cb33:	inc    DWORD PTR [rsi-0x7a00fab4]
   14004cb39:	rex.WR add rax,0x54c85ff
   14004cb3f:	inc    DWORD PTR [rbx+rcx*2+0x4b84ff05]
   14004cb46:	(bad)  
   14004cb47:	inc    DWORD PTR [rbx-0x7c00f9b6]
   14004cb4d:	rex.WX (bad) 
   14004cb4f:	inc    DWORD PTR [rdx-0x7d00f9b6]
   14004cb55:	rex.WX (bad) 
   14004cb57:	inc    DWORD PTR [rcx-0x7e00f9b7]
   14004cb5d:	rex.WB (bad) 
   14004cb5f:	jmp    FWORD PTR [rcx+0x3e]
   14004cb62:	(bad)  
   14004cb63:	call   FWORD PTR [rdx+0x3b]
   14004cb66:	sbb    al,0xff
   14004cb68:	pop    rdx
   14004cb69:	cmp    ebx,DWORD PTR [rdi+rdi*8]
   14004cb6c:	push   0x7eff0e3d
   14004cb71:	rex.RXB (bad) 
   14004cb73:	(bad)  
   14004cb74:	jle    0x14004cbbd
   14004cb76:	(bad)  
   14004cb77:	(bad)  
   14004cb78:	jge    0x14004cbc1
   14004cb7a:	(bad)  
   14004cb7b:	(bad)  
   14004cb7c:	jge    0x14004cbc5
   14004cb7e:	(bad)  
   14004cb7f:	(bad)  
   14004cb80:	jl     0x14004cbc8
   14004cb82:	(bad)  
   14004cb83:	(bad)  
   14004cb84:	jnp    0x14004cbcc
   14004cb86:	(bad)  
   14004cb87:	(bad)  
   14004cb88:	jnp    0x14004cbd0
   14004cb8a:	(bad)  
   14004cb8b:	(bad)  
   14004cb8c:	jnp    0x14004cbd3
   14004cb8e:	(bad)  
   14004cb8f:	(bad)  
   14004cb90:	jp     0x14004cbd7
   14004cb92:	(bad)  
   14004cb93:	(bad)  
   14004cb94:	jns    0x14004cbdb
   14004cb96:	(bad)  
   14004cb97:	(bad)  
   14004cb98:	jns    0x14004cbde
   14004cb9a:	(bad)  
   14004cb9b:	(bad)  
   14004cb9c:	js     0x14004cbe2
   14004cb9e:	(bad)  
   14004cb9f:	(bad)  
   14004cba0:	js     0x14004cbe6
   14004cba2:	(bad)  
   14004cba3:	push   QWORD PTR [rdi+0x43]
   14004cba6:	(bad)  
   14004cba7:	push   QWORD PTR [rdi+0x43]
   14004cbaa:	(bad)  
   14004cbab:	push   QWORD PTR [rsi+0x43]
   14004cbae:	(bad)  
   14004cbaf:	push   QWORD PTR [rsi+0x42]
   14004cbb2:	(bad)  
   14004cbb3:	push   QWORD PTR [rbp+0x42]
   14004cbb6:	(bad)  
   14004cbb7:	push   QWORD PTR [rbp+0x42]
   14004cbba:	(bad)  
   14004cbbb:	push   QWORD PTR [rcx+rax*2+0x7]
   14004cbbf:	push   QWORD PTR [rcx+rax*2+0x7]
   14004cbc3:	push   QWORD PTR [rbx+0x41]
   14004cbc6:	(bad)  
   14004cbc7:	push   QWORD PTR [rbx+0x41]
   14004cbca:	or     bh,bh
   14004cbcc:	jb     0x14004cc0e
   14004cbce:	or     bh,bh
   14004cbd0:	jno    0x14004cc12
   14004cbd2:	or     bh,bh
   14004cbd4:	jno    0x14004cc15
   14004cbd6:	or     bh,bh
   14004cbd8:	jno    0x14004cc19
   14004cbda:	or     bh,bh
   14004cbdc:	jo     0x14004cc1d
   14004cbde:	or     bh,bh
   14004cbe0:	outs   dx,DWORD PTR ds:[rsi]
   14004cbe1:	(bad)  
   14004cbe2:	or     bh,bh
   14004cbe4:	outs   dx,DWORD PTR ds:[rsi]
   14004cbe5:	ds or  bh,bh
   14004cbe8:	outs   dx,BYTE PTR ds:[rsi]
   14004cbe9:	ds or  bh,bh
   14004cbec:	outs   dx,BYTE PTR ds:[rsi]
   14004cbed:	ds or  bh,bh
   14004cbf0:	ins    DWORD PTR es:[rdi],dx
   14004cbf1:	cmp    eax,0x3d6dff08
   14004cbf6:	or     bh,bh
   14004cbf8:	ins    BYTE PTR es:[rdi],dx
   14004cbf9:	cmp    eax,0x3c6cff08
   14004cbfe:	or     bh,bh
   14004cc00:	imul   edi,DWORD PTR [rax+rcx*1],0xffffffff
   14004cc04:	imul   edi,DWORD PTR [rax+rcx*1],0xffffffff
   14004cc08:	push   0x3c
   14004cc0a:	or     edi,edi
   14004cc0c:	push   0x3b
   14004cc0e:	or     edi,edi
   14004cc10:	imul   edi,DWORD PTR [rbx],0x3b69ff09
   14004cc16:	or     edi,edi
   14004cc18:	push   0x68ff093a
   14004cc1d:	cmp    cl,BYTE PTR [rcx]
   14004cc1f:	jmp    QWORD PTR [rdi+0x3a]
   14004cc22:	or     edi,edi
   14004cc24:	cmp    DWORD PTR [ecx],ecx
   14004cc27:	jmp    QWORD PTR [rsi+0x39]
   14004cc2a:	or     edi,edi
   14004cc2c:	cmp    WORD PTR [rcx],cx
   14004cc2f:	jmp    QWORD PTR [rsi+0x39]
   14004cc32:	or     edi,edi
   14004cc34:	cmp    WORD PTR [rcx],cx
   14004cc37:	jmp    QWORD PTR [rsi+0x39]
   14004cc3a:	or     edi,edi
   14004cc3c:	cmp    WORD PTR [rcx],cx
   14004cc3f:	jmp    QWORD PTR [rsi+0x39]
   14004cc42:	or     edi,edi
   14004cc44:	cmp    WORD PTR [rcx],cx
   14004cc47:	inc    DWORD PTR [rax]
	...
   14004cc85:	add    BYTE PTR [rax],al
   14004cc87:	add    BYTE PTR [rbp-0x6200fca6],bl
   14004cc8d:	pop    rdx
   14004cc8e:	add    edi,edi
   14004cc90:	pushf  
   14004cc91:	pop    rcx
   14004cc92:	add    edi,edi
   14004cc94:	pushf  
   14004cc95:	pop    rcx
   14004cc96:	add    edi,edi
   14004cc98:	fwait
   14004cc99:	pop    rcx
   14004cc9a:	add    edi,edi
   14004cc9c:	fwait
   14004cc9d:	pop    rax
   14004cc9e:	add    edi,edi
   14004cca0:	(bad)  
   14004cca1:	pop    rax
   14004cca2:	add    edi,edi
   14004cca4:	(bad)  
   14004cca5:	pop    rax
   14004cca6:	add    edi,edi
   14004cca8:	cdq    
   14004cca9:	push   rdi
   14004ccaa:	add    edi,edi
   14004ccac:	cwde   
   14004ccad:	push   rdi
   14004ccae:	add    edi,edi
   14004ccb0:	cwde   
   14004ccb1:	push   rdi
   14004ccb2:	add    edi,edi
   14004ccb4:	cwde   
   14004ccb5:	push   rdi
   14004ccb6:	add    edi,edi
   14004ccb8:	xchg   edi,eax
   14004ccb9:	push   rsi
   14004ccba:	add    edi,edi
   14004ccbc:	xchg   esi,eax
   14004ccbd:	push   rsi
   14004ccbe:	add    edi,edi
   14004ccc0:	xchg   esi,eax
   14004ccc1:	push   rsi
   14004ccc2:	add    edi,edi
   14004ccc4:	xchg   ebp,eax
   14004ccc5:	push   rbp
   14004ccc6:	add    edi,edi
   14004ccc8:	xchg   ebp,eax
   14004ccc9:	push   rbp
   14004ccca:	add    al,0xff
   14004cccc:	xchg   esp,eax
   14004cccd:	push   rbp
   14004ccce:	add    al,0xff
   14004ccd0:	xchg   esp,eax
   14004ccd1:	push   rsp
   14004ccd2:	add    al,0xff
   14004ccd4:	xchg   ebx,eax
   14004ccd5:	push   rsp
   14004ccd6:	add    al,0xff
   14004ccd8:	xchg   ebx,eax
   14004ccd9:	push   rsp
   14004ccda:	add    al,0xff
   14004ccdc:	xchg   edx,eax
   14004ccdd:	push   rbx
   14004ccde:	add    al,0xff
   14004cce0:	xchg   edx,eax
   14004cce1:	push   rbx
   14004cce2:	add    al,0xff
   14004cce4:	xchg   ecx,eax
   14004cce5:	push   rbx
   14004cce6:	add    al,0xff
   14004cce8:	xchg   ecx,eax
   14004cce9:	push   rdx
   14004ccea:	add    al,0xff
   14004ccec:	nop
   14004cced:	push   rdx
   14004ccee:	add    al,0xff
   14004ccf0:	nop
   14004ccf1:	push   rdx
   14004ccf2:	add    al,0xff
   14004ccf4:	(bad)  
   14004ccf5:	push   rdx
   14004ccf6:	add    al,0xff
   14004ccf8:	mov    ss,WORD PTR [rcx+0x4]
   14004ccfb:	dec    DWORD PTR [rsi-0x7100fbaf]
   14004cd01:	push   rcx
   14004cd02:	add    al,0xff
   14004cd04:	lea    edx,[rax+0x4]
   14004cd07:	dec    DWORD PTR [rax+rdx*2+0x508cff05]
   14004cd0e:	add    eax,0x54f8bff
   14004cd13:	dec    DWORD PTR [rbx-0x7500fab1]
   14004cd19:	rex.WRXB add rax,0x54e8aff
   14004cd1f:	dec    DWORD PTR [rcx-0x7600fab2]
   14004cd25:	rex.WRX add rax,0x54d88ff
   14004cd2b:	dec    DWORD PTR [rax-0x7800fab3]
   14004cd31:	rex.WRB add rax,0x54c87ff
   14004cd37:	inc    DWORD PTR [rsi-0x7a00fab4]
   14004cd3d:	rex.WR add rax,0x54c85ff
   14004cd43:	inc    DWORD PTR [rbx+rcx*2+0x4b84ff05]
   14004cd4a:	(bad)  
   14004cd4b:	inc    DWORD PTR [rbx-0x7c00f9b6]
   14004cd51:	rex.WX (bad) 
   14004cd53:	inc    DWORD PTR [rdx-0x7d00f9b6]
   14004cd59:	rex.WX (bad) 
   14004cd5b:	jmp    FWORD PTR [rdi+0x41]
   14004cd5e:	or     al,0xff
   14004cd60:	push   rdx
   14004cd61:	xor    edx,DWORD PTR [rip+0x729dbcff]        # 0x1b2a28a66
   14004cd67:	(bad)  
   14004cd68:	mov    esp,0x52ff729d
   14004cd6d:	xor    edx,DWORD PTR [rip+0xc406eff]        # 0x14c453c72
   14004cd73:	(bad)  
   14004cd74:	jle    0x14004cdbd
   14004cd76:	(bad)  
   14004cd77:	(bad)  
   14004cd78:	jle    0x14004cdc1
   14004cd7a:	(bad)  
   14004cd7b:	(bad)  
   14004cd7c:	jge    0x14004cdc5
   14004cd7e:	(bad)  
   14004cd7f:	(bad)  
   14004cd80:	jge    0x14004cdc9
   14004cd82:	(bad)  
   14004cd83:	(bad)  
   14004cd84:	jl     0x14004cdcc
   14004cd86:	(bad)  
   14004cd87:	(bad)  
   14004cd88:	jnp    0x14004cdd0
   14004cd8a:	(bad)  
   14004cd8b:	(bad)  
   14004cd8c:	jnp    0x14004cdd4
   14004cd8e:	(bad)  
   14004cd8f:	(bad)  
   14004cd90:	jnp    0x14004cdd7
   14004cd92:	(bad)  
   14004cd93:	(bad)  
   14004cd94:	jp     0x14004cddb
   14004cd96:	(bad)  
   14004cd97:	(bad)  
   14004cd98:	jns    0x14004cddf
   14004cd9a:	(bad)  
   14004cd9b:	(bad)  
   14004cd9c:	jns    0x14004cde2
   14004cd9e:	(bad)  
   14004cd9f:	(bad)  
   14004cda0:	js     0x14004cde6
   14004cda2:	(bad)  
   14004cda3:	(bad)  
   14004cda4:	js     0x14004cdea
   14004cda6:	(bad)  
   14004cda7:	push   QWORD PTR [rdi+0x43]
   14004cdaa:	(bad)  
   14004cdab:	push   QWORD PTR [rdi+0x43]
   14004cdae:	(bad)  
   14004cdaf:	push   QWORD PTR [rsi+0x43]
   14004cdb2:	(bad)  
   14004cdb3:	push   QWORD PTR [rsi+0x42]
   14004cdb6:	(bad)  
   14004cdb7:	push   QWORD PTR [rbp+0x42]
   14004cdba:	(bad)  
   14004cdbb:	push   QWORD PTR [rbp+0x42]
   14004cdbe:	(bad)  
   14004cdbf:	push   QWORD PTR [rcx+rax*2+0x7]
   14004cdc3:	push   QWORD PTR [rcx+rax*2+0x7]
   14004cdc7:	push   QWORD PTR [rbx+0x41]
   14004cdca:	(bad)  
   14004cdcb:	push   QWORD PTR [rbx+0x41]
   14004cdce:	or     bh,bh
   14004cdd0:	jb     0x14004ce12
   14004cdd2:	or     bh,bh
   14004cdd4:	jno    0x14004ce16
   14004cdd6:	or     bh,bh
   14004cdd8:	jno    0x14004ce19
   14004cdda:	or     bh,bh
   14004cddc:	jno    0x14004ce1d
   14004cdde:	or     bh,bh
   14004cde0:	jo     0x14004ce21
   14004cde2:	or     bh,bh
   14004cde4:	outs   dx,DWORD PTR ds:[rsi]
   14004cde5:	(bad)  
   14004cde6:	or     bh,bh
   14004cde8:	outs   dx,DWORD PTR ds:[rsi]
   14004cde9:	ds or  bh,bh
   14004cdec:	outs   dx,BYTE PTR ds:[rsi]
   14004cded:	ds or  bh,bh
   14004cdf0:	outs   dx,BYTE PTR ds:[rsi]
   14004cdf1:	ds or  bh,bh
   14004cdf4:	ins    DWORD PTR es:[rdi],dx
   14004cdf5:	cmp    eax,0x3d6dff08
   14004cdfa:	or     bh,bh
   14004cdfc:	ins    BYTE PTR es:[rdi],dx
   14004cdfd:	cmp    eax,0x3c6cff08
   14004ce02:	or     bh,bh
   14004ce04:	imul   edi,DWORD PTR [rax+rcx*1],0xffffffff
   14004ce08:	imul   edi,DWORD PTR [rax+rcx*1],0xffffffff
   14004ce0c:	push   0x3c
   14004ce0e:	or     edi,edi
   14004ce10:	push   0x3b
   14004ce12:	or     edi,edi
   14004ce14:	imul   edi,DWORD PTR [rbx],0x3b69ff09
   14004ce1a:	or     edi,edi
   14004ce1c:	push   0x68ff093a
   14004ce21:	cmp    cl,BYTE PTR [rcx]
   14004ce23:	jmp    QWORD PTR [rdi+0x3a]
   14004ce26:	or     edi,edi
   14004ce28:	cmp    DWORD PTR [ecx],ecx
   14004ce2b:	jmp    QWORD PTR [rsi+0x39]
   14004ce2e:	or     edi,edi
   14004ce30:	cmp    WORD PTR [rcx],cx
   14004ce33:	jmp    QWORD PTR [rsi+0x39]
   14004ce36:	or     edi,edi
   14004ce38:	cmp    WORD PTR [rcx],cx
   14004ce3b:	jmp    QWORD PTR [rsi+0x39]
   14004ce3e:	or     edi,edi
   14004ce40:	cmp    WORD PTR [rcx],cx
   14004ce43:	jmp    QWORD PTR [rsi+0x39]
   14004ce46:	or     edi,edi
	...
   14004ce88:	sahf   
   14004ce89:	pop    rdx
   14004ce8a:	add    bh,bh
   14004ce8c:	popf   
   14004ce8d:	pop    rdx
   14004ce8e:	add    edi,edi
   14004ce90:	popf   
   14004ce91:	pop    rdx
   14004ce92:	add    edi,edi
   14004ce94:	pushf  
   14004ce95:	pop    rcx
   14004ce96:	add    edi,edi
   14004ce98:	pushf  
   14004ce99:	pop    rcx
   14004ce9a:	add    edi,edi
   14004ce9c:	fwait
   14004ce9d:	pop    rcx
   14004ce9e:	add    edi,edi
   14004cea0:	fwait
   14004cea1:	pop    rax
   14004cea2:	add    edi,edi
   14004cea4:	(bad)  
   14004cea5:	pop    rax
   14004cea6:	add    edi,edi
   14004cea8:	(bad)  
   14004cea9:	pop    rax
   14004ceaa:	add    edi,edi
   14004ceac:	cdq    
   14004cead:	push   rdi
   14004ceae:	add    edi,edi
   14004ceb0:	cwde   
   14004ceb1:	push   rdi
   14004ceb2:	add    edi,edi
   14004ceb4:	cwde   
   14004ceb5:	push   rdi
   14004ceb6:	add    edi,edi
   14004ceb8:	cwde   
   14004ceb9:	push   rdi
   14004ceba:	add    edi,edi
   14004cebc:	xchg   edi,eax
   14004cebd:	push   rsi
   14004cebe:	add    edi,edi
   14004cec0:	xchg   esi,eax
   14004cec1:	push   rsi
   14004cec2:	add    edi,edi
   14004cec4:	xchg   esi,eax
   14004cec5:	push   rsi
   14004cec6:	add    edi,edi
   14004cec8:	xchg   ebp,eax
   14004cec9:	push   rbp
   14004ceca:	add    edi,edi
   14004cecc:	xchg   ebp,eax
   14004cecd:	push   rbp
   14004cece:	add    al,0xff
   14004ced0:	xchg   esp,eax
   14004ced1:	push   rbp
   14004ced2:	add    al,0xff
   14004ced4:	xchg   esp,eax
   14004ced5:	push   rsp
   14004ced6:	add    al,0xff
   14004ced8:	xchg   ebx,eax
   14004ced9:	push   rsp
   14004ceda:	add    al,0xff
   14004cedc:	xchg   ebx,eax
   14004cedd:	push   rsp
   14004cede:	add    al,0xff
   14004cee0:	xchg   edx,eax
   14004cee1:	push   rbx
   14004cee2:	add    al,0xff
   14004cee4:	xchg   edx,eax
   14004cee5:	push   rbx
   14004cee6:	add    al,0xff
   14004cee8:	xchg   ecx,eax
   14004cee9:	push   rbx
   14004ceea:	add    al,0xff
   14004ceec:	xchg   ecx,eax
   14004ceed:	push   rdx
   14004ceee:	add    al,0xff
   14004cef0:	nop
   14004cef1:	push   rdx
   14004cef2:	add    al,0xff
   14004cef4:	nop
   14004cef5:	push   rdx
   14004cef6:	add    al,0xff
   14004cef8:	(bad)  
   14004cef9:	push   rdx
   14004cefa:	add    al,0xff
   14004cefc:	mov    ss,WORD PTR [rcx+0x4]
   14004ceff:	dec    DWORD PTR [rsi-0x7100fbaf]
   14004cf05:	push   rcx
   14004cf06:	add    al,0xff
   14004cf08:	lea    edx,[rax+0x4]
   14004cf0b:	dec    DWORD PTR [rax+rdx*2+0x508cff05]
   14004cf12:	add    eax,0x54f8bff
   14004cf17:	dec    DWORD PTR [rbx-0x7500fab1]
   14004cf1d:	rex.WRXB add rax,0x54e8aff
   14004cf23:	dec    DWORD PTR [rcx-0x7600fab2]
   14004cf29:	rex.WRX add rax,0x54d88ff
   14004cf2f:	dec    DWORD PTR [rax-0x7800fab3]
   14004cf35:	rex.WRB add rax,0x54c87ff
   14004cf3b:	inc    DWORD PTR [rsi-0x7a00fab4]
   14004cf41:	rex.WR add rax,0x54c85ff
   14004cf47:	inc    DWORD PTR [rbx+rcx*2+0x4b84ff05]
   14004cf4e:	(bad)  
   14004cf4f:	inc    DWORD PTR [rbx-0x7c00f9b6]
   14004cf55:	rex.WX (bad) 
   14004cf57:	(bad)  
   14004cf58:	jns    0x14004cfa0
   14004cf5a:	or     edi,edi
   14004cf5c:	push   rdx
   14004cf5d:	xor    edx,DWORD PTR [rip+0x5d85a4ff]        # 0x19d8a7462
   14004cf63:	call   rbp
   14004cf65:	mov    bh,0x89
   14004cf67:	call   rbp
   14004cf69:	mov    bh,0x89
   14004cf6b:	jmp    QWORD PTR [rbp+rax*4+0x3352ff5d]
   14004cf72:	adc    eax,0x94476ff
   14004cf77:	(bad)  
   14004cf78:	jle    0x14004cfc1
   14004cf7a:	(bad)  
   14004cf7b:	(bad)  
   14004cf7c:	jle    0x14004cfc5
   14004cf7e:	(bad)  
   14004cf7f:	(bad)  
   14004cf80:	jge    0x14004cfc9
   14004cf82:	(bad)  
   14004cf83:	(bad)  
   14004cf84:	jge    0x14004cfcd
   14004cf86:	(bad)  
   14004cf87:	(bad)  
   14004cf88:	jl     0x14004cfd0
   14004cf8a:	(bad)  
   14004cf8b:	(bad)  
   14004cf8c:	jnp    0x14004cfd4
   14004cf8e:	(bad)  
   14004cf8f:	(bad)  
   14004cf90:	jnp    0x14004cfd8
   14004cf92:	(bad)  
   14004cf93:	(bad)  
   14004cf94:	jnp    0x14004cfdb
   14004cf96:	(bad)  
   14004cf97:	(bad)  
   14004cf98:	jp     0x14004cfdf
   14004cf9a:	(bad)  
   14004cf9b:	(bad)  
   14004cf9c:	jns    0x14004cfe3
   14004cf9e:	(bad)  
   14004cf9f:	(bad)  
   14004cfa0:	jns    0x14004cfe6
   14004cfa2:	(bad)  
   14004cfa3:	(bad)  
   14004cfa4:	js     0x14004cfea
   14004cfa6:	(bad)  
   14004cfa7:	(bad)  
   14004cfa8:	js     0x14004cfee
   14004cfaa:	(bad)  
   14004cfab:	push   QWORD PTR [rdi+0x43]
   14004cfae:	(bad)  
   14004cfaf:	push   QWORD PTR [rdi+0x43]
   14004cfb2:	(bad)  
   14004cfb3:	push   QWORD PTR [rsi+0x43]
   14004cfb6:	(bad)  
   14004cfb7:	push   QWORD PTR [rsi+0x42]
   14004cfba:	(bad)  
   14004cfbb:	push   QWORD PTR [rbp+0x42]
   14004cfbe:	(bad)  
   14004cfbf:	push   QWORD PTR [rbp+0x42]
   14004cfc2:	(bad)  
   14004cfc3:	push   QWORD PTR [rcx+rax*2+0x7]
   14004cfc7:	push   QWORD PTR [rcx+rax*2+0x7]
   14004cfcb:	push   QWORD PTR [rbx+0x41]
   14004cfce:	(bad)  
   14004cfcf:	push   QWORD PTR [rbx+0x41]
   14004cfd2:	or     bh,bh
   14004cfd4:	jb     0x14004d016
   14004cfd6:	or     bh,bh
   14004cfd8:	jno    0x14004d01a
   14004cfda:	or     bh,bh
   14004cfdc:	jno    0x14004d01d
   14004cfde:	or     bh,bh
   14004cfe0:	jno    0x14004d021
   14004cfe2:	or     bh,bh
   14004cfe4:	jo     0x14004d025
   14004cfe6:	or     bh,bh
   14004cfe8:	outs   dx,DWORD PTR ds:[rsi]
   14004cfe9:	(bad)  
   14004cfea:	or     bh,bh
   14004cfec:	outs   dx,DWORD PTR ds:[rsi]
   14004cfed:	ds or  bh,bh
   14004cff0:	outs   dx,BYTE PTR ds:[rsi]
   14004cff1:	ds or  bh,bh
   14004cff4:	outs   dx,BYTE PTR ds:[rsi]
   14004cff5:	ds or  bh,bh
   14004cff8:	ins    DWORD PTR es:[rdi],dx
   14004cff9:	cmp    eax,0x3d6dff08
   14004cffe:	or     bh,bh
   14004d000:	ins    BYTE PTR es:[rdi],dx
   14004d001:	cmp    eax,0x3c6cff08
   14004d006:	or     bh,bh
   14004d008:	imul   edi,DWORD PTR [rax+rcx*1],0xffffffff
   14004d00c:	imul   edi,DWORD PTR [rax+rcx*1],0xffffffff
   14004d010:	push   0x3c
   14004d012:	or     edi,edi
   14004d014:	push   0x3b
   14004d016:	or     edi,edi
   14004d018:	imul   edi,DWORD PTR [rbx],0x3b69ff09
   14004d01e:	or     edi,edi
   14004d020:	push   0x68ff093a
   14004d025:	cmp    cl,BYTE PTR [rcx]
   14004d027:	jmp    QWORD PTR [rdi+0x3a]
   14004d02a:	or     edi,edi
   14004d02c:	cmp    DWORD PTR [ecx],ecx
   14004d02f:	jmp    QWORD PTR [rsi+0x39]
   14004d032:	or     edi,edi
   14004d034:	cmp    WORD PTR [rcx],cx
   14004d037:	jmp    QWORD PTR [rsi+0x39]
   14004d03a:	or     edi,edi
   14004d03c:	cmp    WORD PTR [rcx],cx
   14004d03f:	jmp    QWORD PTR [rsi+0x39]
   14004d042:	or     edi,edi
   14004d044:	cmp    WORD PTR [rcx],cx
   14004d047:	inc    DWORD PTR [rax]
	...
   14004d085:	add    BYTE PTR [rax],al
   14004d087:	add    BYTE PTR [rsi-0x6100fda5],bl
   14004d08d:	pop    rdx
   14004d08e:	add    bh,bh
   14004d090:	popf   
   14004d091:	pop    rdx
   14004d092:	add    edi,edi
   14004d094:	popf   
   14004d095:	pop    rdx
   14004d096:	add    edi,edi
   14004d098:	pushf  
   14004d099:	pop    rcx
   14004d09a:	add    edi,edi
   14004d09c:	pushf  
   14004d09d:	pop    rcx
   14004d09e:	add    edi,edi
   14004d0a0:	fwait
   14004d0a1:	pop    rcx
   14004d0a2:	add    edi,edi
   14004d0a4:	fwait
   14004d0a5:	pop    rax
   14004d0a6:	add    edi,edi
   14004d0a8:	(bad)  
   14004d0a9:	pop    rax
   14004d0aa:	add    edi,edi
   14004d0ac:	(bad)  
   14004d0ad:	pop    rax
   14004d0ae:	add    edi,edi
   14004d0b0:	cdq    
   14004d0b1:	push   rdi
   14004d0b2:	add    edi,edi
   14004d0b4:	cwde   
   14004d0b5:	push   rdi
   14004d0b6:	add    edi,edi
   14004d0b8:	cwde   
   14004d0b9:	push   rdi
   14004d0ba:	add    edi,edi
   14004d0bc:	cwde   
   14004d0bd:	push   rdi
   14004d0be:	add    edi,edi
   14004d0c0:	xchg   edi,eax
   14004d0c1:	push   rsi
   14004d0c2:	add    edi,edi
   14004d0c4:	xchg   esi,eax
   14004d0c5:	push   rsi
   14004d0c6:	add    edi,edi
   14004d0c8:	xchg   esi,eax
   14004d0c9:	push   rsi
   14004d0ca:	add    edi,edi
   14004d0cc:	xchg   ebp,eax
   14004d0cd:	push   rbp
   14004d0ce:	add    edi,edi
   14004d0d0:	xchg   ebp,eax
   14004d0d1:	push   rbp
   14004d0d2:	add    al,0xff
   14004d0d4:	xchg   esp,eax
   14004d0d5:	push   rbp
   14004d0d6:	add    al,0xff
   14004d0d8:	xchg   esp,eax
   14004d0d9:	push   rsp
   14004d0da:	add    al,0xff
   14004d0dc:	xchg   ebx,eax
   14004d0dd:	push   rsp
   14004d0de:	add    al,0xff
   14004d0e0:	xchg   ebx,eax
   14004d0e1:	push   rsp
   14004d0e2:	add    al,0xff
   14004d0e4:	xchg   edx,eax
   14004d0e5:	push   rbx
   14004d0e6:	add    al,0xff
   14004d0e8:	xchg   edx,eax
   14004d0e9:	push   rbx
   14004d0ea:	add    al,0xff
   14004d0ec:	xchg   ecx,eax
   14004d0ed:	push   rbx
   14004d0ee:	add    al,0xff
   14004d0f0:	xchg   ecx,eax
   14004d0f1:	push   rdx
   14004d0f2:	add    al,0xff
   14004d0f4:	nop
   14004d0f5:	push   rdx
   14004d0f6:	add    al,0xff
   14004d0f8:	nop
   14004d0f9:	push   rdx
   14004d0fa:	add    al,0xff
   14004d0fc:	(bad)  
   14004d0fd:	push   rdx
   14004d0fe:	add    al,0xff
   14004d100:	mov    ss,WORD PTR [rcx+0x4]
   14004d103:	dec    DWORD PTR [rsi-0x7100fbaf]
   14004d109:	push   rcx
   14004d10a:	add    al,0xff
   14004d10c:	lea    edx,[rax+0x4]
   14004d10f:	dec    DWORD PTR [rax+rdx*2+0x508cff05]
   14004d116:	add    eax,0x54f8bff
   14004d11b:	dec    DWORD PTR [rbx-0x7500fab1]
   14004d121:	rex.WRXB add rax,0x54e8aff
   14004d127:	dec    DWORD PTR [rcx-0x7600fab2]
   14004d12d:	rex.WRX add rax,0x54d88ff
   14004d133:	dec    DWORD PTR [rax-0x7800fab3]
   14004d139:	rex.WRB add rax,0x54c87ff
   14004d13f:	inc    DWORD PTR [rsi-0x7a00fab4]
   14004d145:	rex.WR add rax,0x54c85ff
   14004d14b:	inc    DWORD PTR [rbx+rcx*2+0x4b84ff05]
   14004d152:	(bad)  
   14004d153:	(bad)  
   14004d154:	jge    0x14004d19e
   14004d156:	or     bh,bh
   14004d158:	push   rbp
   14004d159:	xor    al,0x14
   14004d15b:	dec    DWORD PTR [rbp+rbp*2-0x472900b8]
   14004d162:	mov    bh,bh
   14004d164:	(bad)  
   14004d165:	mov    eax,0xb8d6ff8a
   14004d16a:	mov    bh,bh
   14004d16c:	(bad)  
   14004d16d:	mov    eax,0x6d8cff8a
   14004d172:	rex.W call QWORD PTR [rbp+0x34]
   14004d176:	adc    al,0xff
   14004d178:	jns    0x14004d1bf
   14004d17a:	or     bh,bh
   14004d17c:	jle    0x14004d1c5
   14004d17e:	(bad)  
   14004d17f:	(bad)  
   14004d180:	jle    0x14004d1c9
   14004d182:	(bad)  
   14004d183:	(bad)  
   14004d184:	jge    0x14004d1cd
   14004d186:	(bad)  
   14004d187:	(bad)  
   14004d188:	jge    0x14004d1d1
   14004d18a:	(bad)  
   14004d18b:	(bad)  
   14004d18c:	jl     0x14004d1d4
   14004d18e:	(bad)  
   14004d18f:	(bad)  
   14004d190:	jnp    0x14004d1d8
   14004d192:	(bad)  
   14004d193:	(bad)  
   14004d194:	jnp    0x14004d1dc
   14004d196:	(bad)  
   14004d197:	(bad)  
   14004d198:	jnp    0x14004d1df
   14004d19a:	(bad)  
   14004d19b:	(bad)  
   14004d19c:	jp     0x14004d1e3
   14004d19e:	(bad)  
   14004d19f:	(bad)  
   14004d1a0:	jns    0x14004d1e7
   14004d1a2:	(bad)  
   14004d1a3:	(bad)  
   14004d1a4:	jns    0x14004d1ea
   14004d1a6:	(bad)  
   14004d1a7:	(bad)  
   14004d1a8:	js     0x14004d1ee
   14004d1aa:	(bad)  
   14004d1ab:	(bad)  
   14004d1ac:	js     0x14004d1f2
   14004d1ae:	(bad)  
   14004d1af:	push   QWORD PTR [rdi+0x43]
   14004d1b2:	(bad)  
   14004d1b3:	push   QWORD PTR [rdi+0x43]
   14004d1b6:	(bad)  
   14004d1b7:	push   QWORD PTR [rsi+0x43]
   14004d1ba:	(bad)  
   14004d1bb:	push   QWORD PTR [rsi+0x42]
   14004d1be:	(bad)  
   14004d1bf:	push   QWORD PTR [rbp+0x42]
   14004d1c2:	(bad)  
   14004d1c3:	push   QWORD PTR [rbp+0x42]
   14004d1c6:	(bad)  
   14004d1c7:	push   QWORD PTR [rcx+rax*2+0x7]
   14004d1cb:	push   QWORD PTR [rcx+rax*2+0x7]
   14004d1cf:	push   QWORD PTR [rbx+0x41]
   14004d1d2:	(bad)  
   14004d1d3:	push   QWORD PTR [rbx+0x41]
   14004d1d6:	or     bh,bh
   14004d1d8:	jb     0x14004d21a
   14004d1da:	or     bh,bh
   14004d1dc:	jno    0x14004d21e
   14004d1de:	or     bh,bh
   14004d1e0:	jno    0x14004d221
   14004d1e2:	or     bh,bh
   14004d1e4:	jno    0x14004d225
   14004d1e6:	or     bh,bh
   14004d1e8:	jo     0x14004d229
   14004d1ea:	or     bh,bh
   14004d1ec:	outs   dx,DWORD PTR ds:[rsi]
   14004d1ed:	(bad)  
   14004d1ee:	or     bh,bh
   14004d1f0:	outs   dx,DWORD PTR ds:[rsi]
   14004d1f1:	ds or  bh,bh
   14004d1f4:	outs   dx,BYTE PTR ds:[rsi]
   14004d1f5:	ds or  bh,bh
   14004d1f8:	outs   dx,BYTE PTR ds:[rsi]
   14004d1f9:	ds or  bh,bh
   14004d1fc:	ins    DWORD PTR es:[rdi],dx
   14004d1fd:	cmp    eax,0x3d6dff08
   14004d202:	or     bh,bh
   14004d204:	ins    BYTE PTR es:[rdi],dx
   14004d205:	cmp    eax,0x3c6cff08
   14004d20a:	or     bh,bh
   14004d20c:	imul   edi,DWORD PTR [rax+rcx*1],0xffffffff
   14004d210:	imul   edi,DWORD PTR [rax+rcx*1],0xffffffff
   14004d214:	push   0x3c
   14004d216:	or     edi,edi
   14004d218:	push   0x3b
   14004d21a:	or     edi,edi
   14004d21c:	imul   edi,DWORD PTR [rbx],0x3b69ff09
   14004d222:	or     edi,edi
   14004d224:	push   0x68ff093a
   14004d229:	cmp    cl,BYTE PTR [rcx]
   14004d22b:	jmp    QWORD PTR [rdi+0x3a]
   14004d22e:	or     edi,edi
   14004d230:	cmp    DWORD PTR [ecx],ecx
   14004d233:	jmp    QWORD PTR [rsi+0x39]
   14004d236:	or     edi,edi
   14004d238:	cmp    WORD PTR [rcx],cx
   14004d23b:	jmp    QWORD PTR [rsi+0x39]
   14004d23e:	or     edi,edi
   14004d240:	cmp    WORD PTR [rcx],cx
   14004d243:	jmp    QWORD PTR [rsi+0x39]
   14004d246:	or     edi,edi
	...
   14004d288:	lahf   
   14004d289:	pop    rbx
   14004d28a:	add    bh,bh
   14004d28c:	sahf   
   14004d28d:	pop    rbx
   14004d28e:	add    bh,bh
   14004d290:	sahf   
   14004d291:	pop    rdx
   14004d292:	add    bh,bh
   14004d294:	popf   
   14004d295:	pop    rdx
   14004d296:	add    edi,edi
   14004d298:	popf   
   14004d299:	pop    rdx
   14004d29a:	add    edi,edi
   14004d29c:	pushf  
   14004d29d:	pop    rcx
   14004d29e:	add    edi,edi
   14004d2a0:	pushf  
   14004d2a1:	pop    rcx
   14004d2a2:	add    edi,edi
   14004d2a4:	fwait
   14004d2a5:	pop    rcx
   14004d2a6:	add    edi,edi
   14004d2a8:	fwait
   14004d2a9:	pop    rax
   14004d2aa:	add    edi,edi
   14004d2ac:	(bad)  
   14004d2ad:	pop    rax
   14004d2ae:	add    edi,edi
   14004d2b0:	(bad)  
   14004d2b1:	pop    rax
   14004d2b2:	add    edi,edi
   14004d2b4:	cdq    
   14004d2b5:	push   rdi
   14004d2b6:	add    edi,edi
   14004d2b8:	cwde   
   14004d2b9:	push   rdi
   14004d2ba:	add    edi,edi
   14004d2bc:	cwde   
   14004d2bd:	push   rdi
   14004d2be:	add    edi,edi
   14004d2c0:	cwde   
   14004d2c1:	push   rdi
   14004d2c2:	add    edi,edi
   14004d2c4:	xchg   edi,eax
   14004d2c5:	push   rsi
   14004d2c6:	add    edi,edi
   14004d2c8:	xchg   esi,eax
   14004d2c9:	push   rsi
   14004d2ca:	add    edi,edi
   14004d2cc:	xchg   esi,eax
   14004d2cd:	push   rsi
   14004d2ce:	add    edi,edi
   14004d2d0:	xchg   ebp,eax
   14004d2d1:	push   rbp
   14004d2d2:	add    edi,edi
   14004d2d4:	xchg   ebp,eax
   14004d2d5:	push   rbp
   14004d2d6:	add    al,0xff
   14004d2d8:	xchg   esp,eax
   14004d2d9:	push   rbp
   14004d2da:	add    al,0xff
   14004d2dc:	xchg   esp,eax
   14004d2dd:	push   rsp
   14004d2de:	add    al,0xff
   14004d2e0:	xchg   ebx,eax
   14004d2e1:	push   rsp
   14004d2e2:	add    al,0xff
   14004d2e4:	xchg   ebx,eax
   14004d2e5:	push   rsp
   14004d2e6:	add    al,0xff
   14004d2e8:	xchg   edx,eax
   14004d2e9:	push   rbx
   14004d2ea:	add    al,0xff
   14004d2ec:	xchg   edx,eax
   14004d2ed:	push   rbx
   14004d2ee:	add    al,0xff
   14004d2f0:	xchg   ecx,eax
   14004d2f1:	push   rbx
   14004d2f2:	add    al,0xff
   14004d2f4:	xchg   ecx,eax
   14004d2f5:	push   rdx
   14004d2f6:	add    al,0xff
   14004d2f8:	nop
   14004d2f9:	push   rdx
   14004d2fa:	add    al,0xff
   14004d2fc:	nop
   14004d2fd:	push   rdx
   14004d2fe:	add    al,0xff
   14004d300:	(bad)  
   14004d301:	push   rdx
   14004d302:	add    al,0xff
   14004d304:	mov    ss,WORD PTR [rcx+0x4]
   14004d307:	dec    DWORD PTR [rsi-0x7100fbaf]
   14004d30d:	push   rcx
   14004d30e:	add    al,0xff
   14004d310:	lea    edx,[rax+0x4]
   14004d313:	dec    DWORD PTR [rax+rdx*2+0x508cff05]
   14004d31a:	add    eax,0x54f8bff
   14004d31f:	dec    DWORD PTR [rbx-0x7500fab1]
   14004d325:	rex.WRXB add rax,0x54e8aff
   14004d32b:	dec    DWORD PTR [rcx-0x7600fab2]
   14004d331:	rex.WRX add rax,0x54d88ff
   14004d337:	dec    DWORD PTR [rax-0x7800fab3]
   14004d33d:	rex.WRB add rax,0x54c87ff
   14004d343:	inc    DWORD PTR [rsi-0x7a00fab4]
   14004d349:	rex.WR add rax,0x54c85ff
   14004d34f:	inc    DWORD PTR [rcx+0x5bff064a]
   14004d355:	cmp    BYTE PTR [rdx],dl
   14004d357:	(bad)  
   14004d358:	jnp    0x14004d3b7
   14004d35a:	cmp    bh,bh
   14004d35c:	(bad)  
   14004d35d:	mov    eax,0xb8d6ff8b
   14004d362:	mov    edi,edi
   14004d364:	(bad)  
   14004d365:	mov    eax,0xb8d6ff8b
   14004d36a:	mov    edi,edi
   14004d36c:	(bad)  
   14004d36d:	mov    eax,0xb8d6ff8b
   14004d372:	mov    edi,edi
   14004d374:	jnp    0x14004d3d3
   14004d376:	cmp    bh,bh
   14004d378:	pop    rdx
   14004d379:	(bad)  
   14004d37a:	adc    bh,bh
   14004d37c:	jl     0x14004d3c5
   14004d37e:	(bad)  
   14004d37f:	(bad)  
   14004d380:	jle    0x14004d3c9
   14004d382:	(bad)  
   14004d383:	(bad)  
   14004d384:	jle    0x14004d3cd
   14004d386:	(bad)  
   14004d387:	(bad)  
   14004d388:	jge    0x14004d3d1
   14004d38a:	(bad)  
   14004d38b:	(bad)  
   14004d38c:	jge    0x14004d3d5
   14004d38e:	(bad)  
   14004d38f:	(bad)  
   14004d390:	jl     0x14004d3d8
   14004d392:	(bad)  
   14004d393:	(bad)  
   14004d394:	jnp    0x14004d3dc
   14004d396:	(bad)  
   14004d397:	(bad)  
   14004d398:	jnp    0x14004d3e0
   14004d39a:	(bad)  
   14004d39b:	(bad)  
   14004d39c:	jnp    0x14004d3e3
   14004d39e:	(bad)  
   14004d39f:	(bad)  
   14004d3a0:	jp     0x14004d3e7
   14004d3a2:	(bad)  
   14004d3a3:	(bad)  
   14004d3a4:	jns    0x14004d3eb
   14004d3a6:	(bad)  
   14004d3a7:	(bad)  
   14004d3a8:	jns    0x14004d3ee
   14004d3aa:	(bad)  
   14004d3ab:	(bad)  
   14004d3ac:	js     0x14004d3f2
   14004d3ae:	(bad)  
   14004d3af:	(bad)  
   14004d3b0:	js     0x14004d3f6
   14004d3b2:	(bad)  
   14004d3b3:	push   QWORD PTR [rdi+0x43]
   14004d3b6:	(bad)  
   14004d3b7:	push   QWORD PTR [rdi+0x43]
   14004d3ba:	(bad)  
   14004d3bb:	push   QWORD PTR [rsi+0x43]
   14004d3be:	(bad)  
   14004d3bf:	push   QWORD PTR [rsi+0x42]
   14004d3c2:	(bad)  
   14004d3c3:	push   QWORD PTR [rbp+0x42]
   14004d3c6:	(bad)  
   14004d3c7:	push   QWORD PTR [rbp+0x42]
   14004d3ca:	(bad)  
   14004d3cb:	push   QWORD PTR [rcx+rax*2+0x7]
   14004d3cf:	push   QWORD PTR [rcx+rax*2+0x7]
   14004d3d3:	push   QWORD PTR [rbx+0x41]
   14004d3d6:	(bad)  
   14004d3d7:	push   QWORD PTR [rbx+0x41]
   14004d3da:	or     bh,bh
   14004d3dc:	jb     0x14004d41e
   14004d3de:	or     bh,bh
   14004d3e0:	jno    0x14004d422
   14004d3e2:	or     bh,bh
   14004d3e4:	jno    0x14004d425
   14004d3e6:	or     bh,bh
   14004d3e8:	jno    0x14004d429
   14004d3ea:	or     bh,bh
   14004d3ec:	jo     0x14004d42d
   14004d3ee:	or     bh,bh
   14004d3f0:	outs   dx,DWORD PTR ds:[rsi]
   14004d3f1:	(bad)  
   14004d3f2:	or     bh,bh
   14004d3f4:	outs   dx,DWORD PTR ds:[rsi]
   14004d3f5:	ds or  bh,bh
   14004d3f8:	outs   dx,BYTE PTR ds:[rsi]
   14004d3f9:	ds or  bh,bh
   14004d3fc:	outs   dx,BYTE PTR ds:[rsi]
   14004d3fd:	ds or  bh,bh
   14004d400:	ins    DWORD PTR es:[rdi],dx
   14004d401:	cmp    eax,0x3d6dff08
   14004d406:	or     bh,bh
   14004d408:	ins    BYTE PTR es:[rdi],dx
   14004d409:	cmp    eax,0x3c6cff08
   14004d40e:	or     bh,bh
   14004d410:	imul   edi,DWORD PTR [rax+rcx*1],0xffffffff
   14004d414:	imul   edi,DWORD PTR [rax+rcx*1],0xffffffff
   14004d418:	push   0x3c
   14004d41a:	or     edi,edi
   14004d41c:	push   0x3b
   14004d41e:	or     edi,edi
   14004d420:	imul   edi,DWORD PTR [rbx],0x3b69ff09
   14004d426:	or     edi,edi
   14004d428:	push   0x68ff093a
   14004d42d:	cmp    cl,BYTE PTR [rcx]
   14004d42f:	jmp    QWORD PTR [rdi+0x3a]
   14004d432:	or     edi,edi
   14004d434:	cmp    DWORD PTR [ecx],ecx
   14004d437:	jmp    QWORD PTR [rsi+0x39]
   14004d43a:	or     edi,edi
   14004d43c:	cmp    WORD PTR [rcx],cx
   14004d43f:	jmp    QWORD PTR [rsi+0x39]
   14004d442:	or     edi,edi
   14004d444:	cmp    WORD PTR [rcx],cx
   14004d447:	inc    DWORD PTR [rax]
	...
   14004d485:	add    BYTE PTR [rax],al
   14004d487:	add    BYTE PTR [rdi-0x6000fda5],bl
   14004d48d:	pop    rbx
   14004d48e:	add    bh,bh
   14004d490:	sahf   
   14004d491:	pop    rbx
   14004d492:	add    bh,bh
   14004d494:	sahf   
   14004d495:	pop    rdx
   14004d496:	add    bh,bh
   14004d498:	popf   
   14004d499:	pop    rdx
   14004d49a:	add    edi,edi
   14004d49c:	popf   
   14004d49d:	pop    rdx
   14004d49e:	add    edi,edi
   14004d4a0:	pushf  
   14004d4a1:	pop    rcx
   14004d4a2:	add    edi,edi
   14004d4a4:	pushf  
   14004d4a5:	pop    rcx
   14004d4a6:	add    edi,edi
   14004d4a8:	fwait
   14004d4a9:	pop    rcx
   14004d4aa:	add    edi,edi
   14004d4ac:	fwait
   14004d4ad:	pop    rax
   14004d4ae:	add    edi,edi
   14004d4b0:	(bad)  
   14004d4b1:	pop    rax
   14004d4b2:	add    edi,edi
   14004d4b4:	(bad)  
   14004d4b5:	pop    rax
   14004d4b6:	add    edi,edi
   14004d4b8:	cdq    
   14004d4b9:	push   rdi
   14004d4ba:	add    edi,edi
   14004d4bc:	cwde   
   14004d4bd:	push   rdi
   14004d4be:	add    edi,edi
   14004d4c0:	cwde   
   14004d4c1:	push   rdi
   14004d4c2:	add    edi,edi
   14004d4c4:	cwde   
   14004d4c5:	push   rdi
   14004d4c6:	add    edi,edi
   14004d4c8:	xchg   edi,eax
   14004d4c9:	push   rsi
   14004d4ca:	add    edi,edi
   14004d4cc:	xchg   esi,eax
   14004d4cd:	push   rsi
   14004d4ce:	add    edi,edi
   14004d4d0:	xchg   esi,eax
   14004d4d1:	push   rsi
   14004d4d2:	add    edi,edi
   14004d4d4:	xchg   ebp,eax
   14004d4d5:	push   rbp
   14004d4d6:	add    edi,edi
   14004d4d8:	xchg   ebp,eax
   14004d4d9:	push   rbp
   14004d4da:	add    al,0xff
   14004d4dc:	xchg   esp,eax
   14004d4dd:	push   rbp
   14004d4de:	add    al,0xff
   14004d4e0:	xchg   esp,eax
   14004d4e1:	push   rsp
   14004d4e2:	add    al,0xff
   14004d4e4:	xchg   ebx,eax
   14004d4e5:	push   rsp
   14004d4e6:	add    al,0xff
   14004d4e8:	xchg   ebx,eax
   14004d4e9:	push   rsp
   14004d4ea:	add    al,0xff
   14004d4ec:	xchg   edx,eax
   14004d4ed:	push   rbx
   14004d4ee:	add    al,0xff
   14004d4f0:	xchg   edx,eax
   14004d4f1:	push   rbx
   14004d4f2:	add    al,0xff
   14004d4f4:	xchg   ecx,eax
   14004d4f5:	push   rbx
   14004d4f6:	add    al,0xff
   14004d4f8:	xchg   ecx,eax
   14004d4f9:	push   rdx
   14004d4fa:	add    al,0xff
   14004d4fc:	nop
   14004d4fd:	push   rdx
   14004d4fe:	add    al,0xff
   14004d500:	nop
   14004d501:	push   rdx
   14004d502:	add    al,0xff
   14004d504:	(bad)  
   14004d505:	push   rdx
   14004d506:	add    al,0xff
   14004d508:	mov    ss,WORD PTR [rcx+0x4]
   14004d50b:	dec    DWORD PTR [rsi-0x7100fbaf]
   14004d511:	push   rcx
   14004d512:	add    al,0xff
   14004d514:	lea    edx,[rax+0x4]
   14004d517:	dec    DWORD PTR [rax+rdx*2+0x508cff05]
   14004d51e:	add    eax,0x54f8bff
   14004d523:	dec    DWORD PTR [rbx-0x7500fab1]
   14004d529:	rex.WRXB add rax,0x54e8aff
   14004d52f:	dec    DWORD PTR [rcx-0x7600fab2]
   14004d535:	rex.WRX add rax,0x54d88ff
   14004d53b:	dec    DWORD PTR [rax-0x7800fab3]
   14004d541:	rex.WRB add rax,0x54c87ff
   14004d547:	inc    DWORD PTR [rsi-0x7a00fab4]
   14004d54d:	rex.WR add rax,0x113a5fff
   14004d553:	jmp    FWORD PTR [rbx+0x4c]
   14004d556:	sub    al,0xff
   14004d558:	iret   
   14004d559:	mov    cl,0x85
   14004d55b:	call   rdi
   14004d55d:	mov    ecx,0xb9d7ff8c
   14004d562:	mov    edi,?
   14004d564:	xlat   BYTE PTR ds:[rbx]
   14004d565:	mov    ecx,0xb9d7ff8c
   14004d56a:	mov    edi,?
   14004d56c:	xlat   BYTE PTR ds:[rbx]
   14004d56d:	mov    ecx,0xb9d7ff8c
   14004d572:	mov    edi,?
   14004d574:	iret   
   14004d575:	mov    cl,0x85
   14004d577:	jmp    FWORD PTR [rbx+0x4c]
   14004d57a:	sub    al,0xff
   14004d57c:	pop    rsi
   14004d57d:	cmp    DWORD PTR [rdx],edx
   14004d57f:	(bad)  
   14004d580:	jg     0x14004d5ca
   14004d582:	(bad)  
   14004d583:	(bad)  
   14004d584:	jle    0x14004d5cd
   14004d586:	(bad)  
   14004d587:	(bad)  
   14004d588:	jle    0x14004d5d1
   14004d58a:	(bad)  
   14004d58b:	(bad)  
   14004d58c:	jge    0x14004d5d5
   14004d58e:	(bad)  
   14004d58f:	(bad)  
   14004d590:	jge    0x14004d5d9
   14004d592:	(bad)  
   14004d593:	(bad)  
   14004d594:	jl     0x14004d5dc
   14004d596:	(bad)  
   14004d597:	(bad)  
   14004d598:	jnp    0x14004d5e0
   14004d59a:	(bad)  
   14004d59b:	(bad)  
   14004d59c:	jnp    0x14004d5e4
   14004d59e:	(bad)  
   14004d59f:	(bad)  
   14004d5a0:	jnp    0x14004d5e7
   14004d5a2:	(bad)  
   14004d5a3:	(bad)  
   14004d5a4:	jp     0x14004d5eb
   14004d5a6:	(bad)  
   14004d5a7:	(bad)  
   14004d5a8:	jns    0x14004d5ef
   14004d5aa:	(bad)  
   14004d5ab:	(bad)  
   14004d5ac:	jns    0x14004d5f2
   14004d5ae:	(bad)  
   14004d5af:	(bad)  
   14004d5b0:	js     0x14004d5f6
   14004d5b2:	(bad)  
   14004d5b3:	(bad)  
   14004d5b4:	js     0x14004d5fa
   14004d5b6:	(bad)  
   14004d5b7:	push   QWORD PTR [rdi+0x43]
   14004d5ba:	(bad)  
   14004d5bb:	push   QWORD PTR [rdi+0x43]
   14004d5be:	(bad)  
   14004d5bf:	push   QWORD PTR [rsi+0x43]
   14004d5c2:	(bad)  
   14004d5c3:	push   QWORD PTR [rsi+0x42]
   14004d5c6:	(bad)  
   14004d5c7:	push   QWORD PTR [rbp+0x42]
   14004d5ca:	(bad)  
   14004d5cb:	push   QWORD PTR [rbp+0x42]
   14004d5ce:	(bad)  
   14004d5cf:	push   QWORD PTR [rcx+rax*2+0x7]
   14004d5d3:	push   QWORD PTR [rcx+rax*2+0x7]
   14004d5d7:	push   QWORD PTR [rbx+0x41]
   14004d5da:	(bad)  
   14004d5db:	push   QWORD PTR [rbx+0x41]
   14004d5de:	or     bh,bh
   14004d5e0:	jb     0x14004d622
   14004d5e2:	or     bh,bh
   14004d5e4:	jno    0x14004d626
   14004d5e6:	or     bh,bh
   14004d5e8:	jno    0x14004d629
   14004d5ea:	or     bh,bh
   14004d5ec:	jno    0x14004d62d
   14004d5ee:	or     bh,bh
   14004d5f0:	jo     0x14004d631
   14004d5f2:	or     bh,bh
   14004d5f4:	outs   dx,DWORD PTR ds:[rsi]
   14004d5f5:	(bad)  
   14004d5f6:	or     bh,bh
   14004d5f8:	outs   dx,DWORD PTR ds:[rsi]
   14004d5f9:	ds or  bh,bh
   14004d5fc:	outs   dx,BYTE PTR ds:[rsi]
   14004d5fd:	ds or  bh,bh
   14004d600:	outs   dx,BYTE PTR ds:[rsi]
   14004d601:	ds or  bh,bh
   14004d604:	ins    DWORD PTR es:[rdi],dx
   14004d605:	cmp    eax,0x3d6dff08
   14004d60a:	or     bh,bh
   14004d60c:	ins    BYTE PTR es:[rdi],dx
   14004d60d:	cmp    eax,0x3c6cff08
   14004d612:	or     bh,bh
   14004d614:	imul   edi,DWORD PTR [rax+rcx*1],0xffffffff
   14004d618:	imul   edi,DWORD PTR [rax+rcx*1],0xffffffff
   14004d61c:	push   0x3c
   14004d61e:	or     edi,edi
   14004d620:	push   0x3b
   14004d622:	or     edi,edi
   14004d624:	imul   edi,DWORD PTR [rbx],0x3b69ff09
   14004d62a:	or     edi,edi
   14004d62c:	push   0x68ff093a
   14004d631:	cmp    cl,BYTE PTR [rcx]
   14004d633:	jmp    QWORD PTR [rdi+0x3a]
   14004d636:	or     edi,edi
   14004d638:	cmp    DWORD PTR [ecx],ecx
   14004d63b:	jmp    QWORD PTR [rsi+0x39]
   14004d63e:	or     edi,edi
   14004d640:	cmp    WORD PTR [rcx],cx
   14004d643:	jmp    QWORD PTR [rsi+0x39]
   14004d646:	or     edi,edi
	...
   14004d688:	movabs al,ds:0x9fff025b9fff025c
   14004d691:	pop    rbx
   14004d692:	add    bh,bh
   14004d694:	sahf   
   14004d695:	pop    rbx
   14004d696:	add    bh,bh
   14004d698:	sahf   
   14004d699:	pop    rdx
   14004d69a:	add    bh,bh
   14004d69c:	popf   
   14004d69d:	pop    rdx
   14004d69e:	add    edi,edi
   14004d6a0:	popf   
   14004d6a1:	pop    rdx
   14004d6a2:	add    edi,edi
   14004d6a4:	pushf  
   14004d6a5:	pop    rcx
   14004d6a6:	add    edi,edi
   14004d6a8:	pushf  
   14004d6a9:	pop    rcx
   14004d6aa:	add    edi,edi
   14004d6ac:	fwait
   14004d6ad:	pop    rcx
   14004d6ae:	add    edi,edi
   14004d6b0:	fwait
   14004d6b1:	pop    rax
   14004d6b2:	add    edi,edi
   14004d6b4:	(bad)  
   14004d6b5:	pop    rax
   14004d6b6:	add    edi,edi
   14004d6b8:	(bad)  
   14004d6b9:	pop    rax
   14004d6ba:	add    edi,edi
   14004d6bc:	cdq    
   14004d6bd:	push   rdi
   14004d6be:	add    edi,edi
   14004d6c0:	cwde   
   14004d6c1:	push   rdi
   14004d6c2:	add    edi,edi
   14004d6c4:	cwde   
   14004d6c5:	push   rdi
   14004d6c6:	add    edi,edi
   14004d6c8:	cwde   
   14004d6c9:	push   rdi
   14004d6ca:	add    edi,edi
   14004d6cc:	xchg   edi,eax
   14004d6cd:	push   rsi
   14004d6ce:	add    edi,edi
   14004d6d0:	xchg   esi,eax
   14004d6d1:	push   rsi
   14004d6d2:	add    edi,edi
   14004d6d4:	xchg   esi,eax
   14004d6d5:	push   rsi
   14004d6d6:	add    edi,edi
   14004d6d8:	xchg   ebp,eax
   14004d6d9:	push   rbp
   14004d6da:	add    edi,edi
   14004d6dc:	xchg   ebp,eax
   14004d6dd:	push   rbp
   14004d6de:	add    al,0xff
   14004d6e0:	xchg   esp,eax
   14004d6e1:	push   rbp
   14004d6e2:	add    al,0xff
   14004d6e4:	xchg   esp,eax
   14004d6e5:	push   rsp
   14004d6e6:	add    al,0xff
   14004d6e8:	xchg   ebx,eax
   14004d6e9:	push   rsp
   14004d6ea:	add    al,0xff
   14004d6ec:	xchg   ebx,eax
   14004d6ed:	push   rsp
   14004d6ee:	add    al,0xff
   14004d6f0:	xchg   edx,eax
   14004d6f1:	push   rbx
   14004d6f2:	add    al,0xff
   14004d6f4:	xchg   edx,eax
   14004d6f5:	push   rbx
   14004d6f6:	add    al,0xff
   14004d6f8:	xchg   ecx,eax
   14004d6f9:	push   rbx
   14004d6fa:	add    al,0xff
   14004d6fc:	xchg   ecx,eax
   14004d6fd:	push   rdx
   14004d6fe:	add    al,0xff
   14004d700:	nop
   14004d701:	push   rdx
   14004d702:	add    al,0xff
   14004d704:	nop
   14004d705:	push   rdx
   14004d706:	add    al,0xff
   14004d708:	(bad)  
   14004d709:	push   rdx
   14004d70a:	add    al,0xff
   14004d70c:	mov    ss,WORD PTR [rcx+0x4]
   14004d70f:	dec    DWORD PTR [rsi-0x7100fbaf]
   14004d715:	push   rcx
   14004d716:	add    al,0xff
   14004d718:	lea    edx,[rax+0x4]
   14004d71b:	dec    DWORD PTR [rax+rdx*2+0x508cff05]
   14004d722:	add    eax,0x54f8bff
   14004d727:	dec    DWORD PTR [rbx-0x7500fab1]
   14004d72d:	rex.WRXB add rax,0x54e8aff
   14004d733:	dec    DWORD PTR [rcx-0x7600fab2]
   14004d739:	rex.WRX add rax,0x54d88ff
   14004d73f:	dec    DWORD PTR [rax-0x7800fab3]
   14004d745:	rex.WRB add rax,0x54c87ff
   14004d74b:	jmp    QWORD PTR [rsi+0x3d]
   14004d74e:	adc    bh,bh
   14004d750:	pop    rbx
   14004d751:	cmp    al,0x1e
   14004d753:	inc    edi
   14004d755:	test   eax,0xbad7ff7e
   14004d75a:	(bad)  
   14004d75b:	call   rdi
   14004d75d:	mov    edx,0xbad7ff8d
   14004d762:	(bad)  
   14004d763:	call   rdi
   14004d765:	mov    edx,0xbad7ff8d
   14004d76a:	(bad)  
   14004d76b:	call   rdi
   14004d76d:	mov    edx,0xbad7ff8d
   14004d772:	(bad)  
   14004d773:	call   rdi
   14004d775:	mov    edx,0xa9c7ff8d
   14004d77a:	jle    0x14004d77b
   14004d77c:	pop    rbx
   14004d77d:	cmp    al,0x1e
   14004d77f:	jmp    QWORD PTR [rsp+rdi*1+0x10]
   14004d783:	(bad)  
   14004d784:	jg     0x14004d7ce
   14004d786:	(bad)  
   14004d787:	(bad)  
   14004d788:	jle    0x14004d7d1
   14004d78a:	(bad)  
   14004d78b:	(bad)  
   14004d78c:	jle    0x14004d7d5
   14004d78e:	(bad)  
   14004d78f:	(bad)  
   14004d790:	jge    0x14004d7d9
   14004d792:	(bad)  
   14004d793:	(bad)  
   14004d794:	jge    0x14004d7dd
   14004d796:	(bad)  
   14004d797:	(bad)  
   14004d798:	jl     0x14004d7e0
   14004d79a:	(bad)  
   14004d79b:	(bad)  
   14004d79c:	jnp    0x14004d7e4
   14004d79e:	(bad)  
   14004d79f:	(bad)  
   14004d7a0:	jnp    0x14004d7e8
   14004d7a2:	(bad)  
   14004d7a3:	(bad)  
   14004d7a4:	jnp    0x14004d7eb
   14004d7a6:	(bad)  
   14004d7a7:	(bad)  
   14004d7a8:	jp     0x14004d7ef
   14004d7aa:	(bad)  
   14004d7ab:	(bad)  
   14004d7ac:	jns    0x14004d7f3
   14004d7ae:	(bad)  
   14004d7af:	(bad)  
   14004d7b0:	jns    0x14004d7f6
   14004d7b2:	(bad)  
   14004d7b3:	(bad)  
   14004d7b4:	js     0x14004d7fa
   14004d7b6:	(bad)  
   14004d7b7:	(bad)  
   14004d7b8:	js     0x14004d7fe
   14004d7ba:	(bad)  
   14004d7bb:	push   QWORD PTR [rdi+0x43]
   14004d7be:	(bad)  
   14004d7bf:	push   QWORD PTR [rdi+0x43]
   14004d7c2:	(bad)  
   14004d7c3:	push   QWORD PTR [rsi+0x43]
   14004d7c6:	(bad)  
   14004d7c7:	push   QWORD PTR [rsi+0x42]
   14004d7ca:	(bad)  
   14004d7cb:	push   QWORD PTR [rbp+0x42]
   14004d7ce:	(bad)  
   14004d7cf:	push   QWORD PTR [rbp+0x42]
   14004d7d2:	(bad)  
   14004d7d3:	push   QWORD PTR [rcx+rax*2+0x7]
   14004d7d7:	push   QWORD PTR [rcx+rax*2+0x7]
   14004d7db:	push   QWORD PTR [rbx+0x41]
   14004d7de:	(bad)  
   14004d7df:	push   QWORD PTR [rbx+0x41]
   14004d7e2:	or     bh,bh
   14004d7e4:	jb     0x14004d826
   14004d7e6:	or     bh,bh
   14004d7e8:	jno    0x14004d82a
   14004d7ea:	or     bh,bh
   14004d7ec:	jno    0x14004d82d
   14004d7ee:	or     bh,bh
   14004d7f0:	jno    0x14004d831
   14004d7f2:	or     bh,bh
   14004d7f4:	jo     0x14004d835
   14004d7f6:	or     bh,bh
   14004d7f8:	outs   dx,DWORD PTR ds:[rsi]
   14004d7f9:	(bad)  
   14004d7fa:	or     bh,bh
   14004d7fc:	outs   dx,DWORD PTR ds:[rsi]
   14004d7fd:	ds or  bh,bh
   14004d800:	outs   dx,BYTE PTR ds:[rsi]
   14004d801:	ds or  bh,bh
   14004d804:	outs   dx,BYTE PTR ds:[rsi]
   14004d805:	ds or  bh,bh
   14004d808:	ins    DWORD PTR es:[rdi],dx
   14004d809:	cmp    eax,0x3d6dff08
   14004d80e:	or     bh,bh
   14004d810:	ins    BYTE PTR es:[rdi],dx
   14004d811:	cmp    eax,0x3c6cff08
   14004d816:	or     bh,bh
   14004d818:	imul   edi,DWORD PTR [rax+rcx*1],0xffffffff
   14004d81c:	imul   edi,DWORD PTR [rax+rcx*1],0xffffffff
   14004d820:	push   0x3c
   14004d822:	or     edi,edi
   14004d824:	push   0x3b
   14004d826:	or     edi,edi
   14004d828:	imul   edi,DWORD PTR [rbx],0x3b69ff09
   14004d82e:	or     edi,edi
   14004d830:	push   0x68ff093a
   14004d835:	cmp    cl,BYTE PTR [rcx]
   14004d837:	jmp    QWORD PTR [rdi+0x3a]
   14004d83a:	or     edi,edi
   14004d83c:	cmp    DWORD PTR [ecx],ecx
   14004d83f:	jmp    QWORD PTR [rsi+0x39]
   14004d842:	or     edi,edi
   14004d844:	cmp    WORD PTR [rcx],cx
   14004d847:	inc    DWORD PTR [rax]
	...
   14004d885:	add    BYTE PTR [rax],al
   14004d887:	add    BYTE PTR [rax-0x5f00fda4],ah
   14004d88d:	pop    rsp
   14004d88e:	add    bh,bh
   14004d890:	lahf   
   14004d891:	pop    rbx
   14004d892:	add    bh,bh
   14004d894:	lahf   
   14004d895:	pop    rbx
   14004d896:	add    bh,bh
   14004d898:	sahf   
   14004d899:	pop    rbx
   14004d89a:	add    bh,bh
   14004d89c:	sahf   
   14004d89d:	pop    rdx
   14004d89e:	add    bh,bh
   14004d8a0:	popf   
   14004d8a1:	pop    rdx
   14004d8a2:	add    edi,edi
   14004d8a4:	popf   
   14004d8a5:	pop    rdx
   14004d8a6:	add    edi,edi
   14004d8a8:	pushf  
   14004d8a9:	pop    rcx
   14004d8aa:	add    edi,edi
   14004d8ac:	pushf  
   14004d8ad:	pop    rcx
   14004d8ae:	add    edi,edi
   14004d8b0:	fwait
   14004d8b1:	pop    rcx
   14004d8b2:	add    edi,edi
   14004d8b4:	fwait
   14004d8b5:	pop    rax
   14004d8b6:	add    edi,edi
   14004d8b8:	(bad)  
   14004d8b9:	pop    rax
   14004d8ba:	add    edi,edi
   14004d8bc:	(bad)  
   14004d8bd:	pop    rax
   14004d8be:	add    edi,edi
   14004d8c0:	cdq    
   14004d8c1:	push   rdi
   14004d8c2:	add    edi,edi
   14004d8c4:	cwde   
   14004d8c5:	push   rdi
   14004d8c6:	add    edi,edi
   14004d8c8:	cwde   
   14004d8c9:	push   rdi
   14004d8ca:	add    edi,edi
   14004d8cc:	cwde   
   14004d8cd:	push   rdi
   14004d8ce:	add    edi,edi
   14004d8d0:	xchg   edi,eax
   14004d8d1:	push   rsi
   14004d8d2:	add    edi,edi
   14004d8d4:	xchg   esi,eax
   14004d8d5:	push   rsi
   14004d8d6:	add    edi,edi
   14004d8d8:	xchg   esi,eax
   14004d8d9:	push   rsi
   14004d8da:	add    edi,edi
   14004d8dc:	xchg   ebp,eax
   14004d8dd:	push   rbp
   14004d8de:	add    edi,edi
   14004d8e0:	xchg   ebp,eax
   14004d8e1:	push   rbp
   14004d8e2:	add    al,0xff
   14004d8e4:	xchg   esp,eax
   14004d8e5:	push   rbp
   14004d8e6:	add    al,0xff
   14004d8e8:	xchg   esp,eax
   14004d8e9:	push   rsp
   14004d8ea:	add    al,0xff
   14004d8ec:	xchg   ebx,eax
   14004d8ed:	push   rsp
   14004d8ee:	add    al,0xff
   14004d8f0:	xchg   ebx,eax
   14004d8f1:	push   rsp
   14004d8f2:	add    al,0xff
   14004d8f4:	xchg   edx,eax
   14004d8f5:	push   rbx
   14004d8f6:	add    al,0xff
   14004d8f8:	xchg   edx,eax
   14004d8f9:	push   rbx
   14004d8fa:	add    al,0xff
   14004d8fc:	xchg   ecx,eax
   14004d8fd:	push   rbx
   14004d8fe:	add    al,0xff
   14004d900:	xchg   ecx,eax
   14004d901:	push   rdx
   14004d902:	add    al,0xff
   14004d904:	nop
   14004d905:	push   rdx
   14004d906:	add    al,0xff
   14004d908:	nop
   14004d909:	push   rdx
   14004d90a:	add    al,0xff
   14004d90c:	(bad)  
   14004d90d:	push   rdx
   14004d90e:	add    al,0xff
   14004d910:	mov    ss,WORD PTR [rcx+0x4]
   14004d913:	dec    DWORD PTR [rsi-0x7100fbaf]
   14004d919:	push   rcx
   14004d91a:	add    al,0xff
   14004d91c:	lea    edx,[rax+0x4]
   14004d91f:	dec    DWORD PTR [rax+rdx*2+0x508cff05]
   14004d926:	add    eax,0x54f8bff
   14004d92b:	dec    DWORD PTR [rbx-0x7500fab1]
   14004d931:	rex.WRXB add rax,0x54e8aff
   14004d937:	dec    DWORD PTR [rcx-0x7600fab2]
   14004d93d:	rex.WRX add rax,0x54d88ff
   14004d943:	dec    DWORD PTR [rax+0x71ff054d]
   14004d949:	rex.X or al,0xff
   14004d94c:	push   rsp
   14004d94d:	xor    eax,0xa2bfff16
   14004d952:	js     0x14004d953
   14004d954:	fdivr  DWORD PTR [rbx-0x44270071]
   14004d95a:	(bad)  
   14004d95b:	(bad)  
   14004d95c:	fdivr  DWORD PTR [rbx-0x44270071]
   14004d962:	(bad)  
   14004d963:	(bad)  
   14004d964:	fdivr  DWORD PTR [rbx-0x44270071]
   14004d96a:	(bad)  
   14004d96b:	(bad)  
   14004d96c:	fdivr  DWORD PTR [rbx-0x44270071]
   14004d972:	(bad)  
   14004d973:	(bad)  
   14004d974:	fdivr  DWORD PTR [rbx-0x44270071]
   14004d97a:	(bad)  
   14004d97b:	(bad)  
   14004d97c:	mov    edi,0x54ff78a2
   14004d981:	xor    eax,0x406cff16
   14004d986:	or     eax,0x6487fff
   14004d98b:	(bad)  
   14004d98c:	jle    0x14004d9d5
   14004d98e:	(bad)  
   14004d98f:	(bad)  
   14004d990:	jle    0x14004d9d9
   14004d992:	(bad)  
   14004d993:	(bad)  
   14004d994:	jge    0x14004d9dd
   14004d996:	(bad)  
   14004d997:	(bad)  
   14004d998:	jge    0x14004d9e1
   14004d99a:	(bad)  
   14004d99b:	(bad)  
   14004d99c:	jl     0x14004d9e4
   14004d99e:	(bad)  
   14004d99f:	(bad)  
   14004d9a0:	jnp    0x14004d9e8
   14004d9a2:	(bad)  
   14004d9a3:	(bad)  
   14004d9a4:	jnp    0x14004d9ec
   14004d9a6:	(bad)  
   14004d9a7:	(bad)  
   14004d9a8:	jnp    0x14004d9ef
   14004d9aa:	(bad)  
   14004d9ab:	(bad)  
   14004d9ac:	jp     0x14004d9f3
   14004d9ae:	(bad)  
   14004d9af:	(bad)  
   14004d9b0:	jns    0x14004d9f7
   14004d9b2:	(bad)  
   14004d9b3:	(bad)  
   14004d9b4:	jns    0x14004d9fa
   14004d9b6:	(bad)  
   14004d9b7:	(bad)  
   14004d9b8:	js     0x14004d9fe
   14004d9ba:	(bad)  
   14004d9bb:	(bad)  
   14004d9bc:	js     0x14004da02
   14004d9be:	(bad)  
   14004d9bf:	push   QWORD PTR [rdi+0x43]
   14004d9c2:	(bad)  
   14004d9c3:	push   QWORD PTR [rdi+0x43]
   14004d9c6:	(bad)  
   14004d9c7:	push   QWORD PTR [rsi+0x43]
   14004d9ca:	(bad)  
   14004d9cb:	push   QWORD PTR [rsi+0x42]
   14004d9ce:	(bad)  
   14004d9cf:	push   QWORD PTR [rbp+0x42]
   14004d9d2:	(bad)  
   14004d9d3:	push   QWORD PTR [rbp+0x42]
   14004d9d6:	(bad)  
   14004d9d7:	push   QWORD PTR [rcx+rax*2+0x7]
   14004d9db:	push   QWORD PTR [rcx+rax*2+0x7]
   14004d9df:	push   QWORD PTR [rbx+0x41]
   14004d9e2:	(bad)  
   14004d9e3:	push   QWORD PTR [rbx+0x41]
   14004d9e6:	or     bh,bh
   14004d9e8:	jb     0x14004da2a
   14004d9ea:	or     bh,bh
   14004d9ec:	jno    0x14004da2e
   14004d9ee:	or     bh,bh
   14004d9f0:	jno    0x14004da31
   14004d9f2:	or     bh,bh
   14004d9f4:	jno    0x14004da35
   14004d9f6:	or     bh,bh
   14004d9f8:	jo     0x14004da39
   14004d9fa:	or     bh,bh
   14004d9fc:	outs   dx,DWORD PTR ds:[rsi]
   14004d9fd:	(bad)  
   14004d9fe:	or     bh,bh
   14004da00:	outs   dx,DWORD PTR ds:[rsi]
   14004da01:	ds or  bh,bh
   14004da04:	outs   dx,BYTE PTR ds:[rsi]
   14004da05:	ds or  bh,bh
   14004da08:	outs   dx,BYTE PTR ds:[rsi]
   14004da09:	ds or  bh,bh
   14004da0c:	ins    DWORD PTR es:[rdi],dx
   14004da0d:	cmp    eax,0x3d6dff08
   14004da12:	or     bh,bh
   14004da14:	ins    BYTE PTR es:[rdi],dx
   14004da15:	cmp    eax,0x3c6cff08
   14004da1a:	or     bh,bh
   14004da1c:	imul   edi,DWORD PTR [rax+rcx*1],0xffffffff
   14004da20:	imul   edi,DWORD PTR [rax+rcx*1],0xffffffff
   14004da24:	push   0x3c
   14004da26:	or     edi,edi
   14004da28:	push   0x3b
   14004da2a:	or     edi,edi
   14004da2c:	imul   edi,DWORD PTR [rbx],0x3b69ff09
   14004da32:	or     edi,edi
   14004da34:	push   0x68ff093a
   14004da39:	cmp    cl,BYTE PTR [rcx]
   14004da3b:	jmp    QWORD PTR [rdi+0x3a]
   14004da3e:	or     edi,edi
   14004da40:	cmp    DWORD PTR [ecx],ecx
   14004da43:	jmp    QWORD PTR [rsi+0x39]
   14004da46:	or     edi,edi
	...
   14004da88:	movabs eax,ds:0xa0ff025ca0ff025c
   14004da91:	pop    rsp
   14004da92:	add    bh,bh
   14004da94:	lahf   
   14004da95:	pop    rbx
   14004da96:	add    bh,bh
   14004da98:	lahf   
   14004da99:	pop    rbx
   14004da9a:	add    bh,bh
   14004da9c:	sahf   
   14004da9d:	pop    rbx
   14004da9e:	add    bh,bh
   14004daa0:	sahf   
   14004daa1:	pop    rdx
   14004daa2:	add    bh,bh
   14004daa4:	popf   
   14004daa5:	pop    rdx
   14004daa6:	add    edi,edi
   14004daa8:	popf   
   14004daa9:	pop    rdx
   14004daaa:	add    edi,edi
   14004daac:	pushf  
   14004daad:	pop    rcx
   14004daae:	add    edi,edi
   14004dab0:	pushf  
   14004dab1:	pop    rcx
   14004dab2:	add    edi,edi
   14004dab4:	fwait
   14004dab5:	pop    rcx
   14004dab6:	add    edi,edi
   14004dab8:	fwait
   14004dab9:	pop    rax
   14004daba:	add    edi,edi
   14004dabc:	(bad)  
   14004dabd:	pop    rax
   14004dabe:	add    edi,edi
   14004dac0:	(bad)  
   14004dac1:	pop    rax
   14004dac2:	add    edi,edi
   14004dac4:	cdq    
   14004dac5:	push   rdi
   14004dac6:	add    edi,edi
   14004dac8:	cwde   
   14004dac9:	push   rdi
   14004daca:	add    edi,edi
   14004dacc:	cwde   
   14004dacd:	push   rdi
   14004dace:	add    edi,edi
   14004dad0:	cwde   
   14004dad1:	push   rdi
   14004dad2:	add    edi,edi
   14004dad4:	xchg   edi,eax
   14004dad5:	push   rsi
   14004dad6:	add    edi,edi
   14004dad8:	xchg   esi,eax
   14004dad9:	push   rsi
   14004dada:	add    edi,edi
   14004dadc:	xchg   esi,eax
   14004dadd:	push   rsi
   14004dade:	add    edi,edi
   14004dae0:	xchg   ebp,eax
   14004dae1:	push   rbp
   14004dae2:	add    edi,edi
   14004dae4:	xchg   ebp,eax
   14004dae5:	push   rbp
   14004dae6:	add    al,0xff
   14004dae8:	xchg   esp,eax
   14004dae9:	push   rbp
   14004daea:	add    al,0xff
   14004daec:	xchg   esp,eax
   14004daed:	push   rsp
   14004daee:	add    al,0xff
   14004daf0:	xchg   ebx,eax
   14004daf1:	push   rsp
   14004daf2:	add    al,0xff
   14004daf4:	xchg   ebx,eax
   14004daf5:	push   rsp
   14004daf6:	add    al,0xff
   14004daf8:	xchg   edx,eax
   14004daf9:	push   rbx
   14004dafa:	add    al,0xff
   14004dafc:	xchg   edx,eax
   14004dafd:	push   rbx
   14004dafe:	add    al,0xff
   14004db00:	xchg   ecx,eax
   14004db01:	push   rbx
   14004db02:	add    al,0xff
   14004db04:	xchg   ecx,eax
   14004db05:	push   rdx
   14004db06:	add    al,0xff
   14004db08:	nop
   14004db09:	push   rdx
   14004db0a:	add    al,0xff
   14004db0c:	nop
   14004db0d:	push   rdx
   14004db0e:	add    al,0xff
   14004db10:	(bad)  
   14004db11:	push   rdx
   14004db12:	add    al,0xff
   14004db14:	mov    ss,WORD PTR [rcx+0x4]
   14004db17:	dec    DWORD PTR [rsi-0x7100fbaf]
   14004db1d:	push   rcx
   14004db1e:	add    al,0xff
   14004db20:	lea    edx,[rax+0x4]
   14004db23:	dec    DWORD PTR [rax+rdx*2+0x508cff05]
   14004db2a:	add    eax,0x54f8bff
   14004db2f:	dec    DWORD PTR [rbx-0x7500fab1]
   14004db35:	rex.WRXB add rax,0x54e8aff
   14004db3b:	dec    DWORD PTR [rcx-0x7600fab2]
   14004db41:	rex.WRX add rax,0xb4678ff
   14004db47:	call   QWORD PTR [rbp+rsi*1+0x17]
   14004db4b:	jmp    QWORD PTR [rdi-0x27009d77]
   14004db51:	mov    ebx,0xbbd8ff90
   14004db56:	nop
   14004db57:	(bad)  
   14004db58:	fdivr  DWORD PTR [rbx-0x44270070]
   14004db5e:	nop
   14004db5f:	(bad)  
   14004db60:	fdivr  DWORD PTR [rbx-0x44270070]
   14004db66:	nop
   14004db67:	(bad)  
   14004db68:	fdivr  DWORD PTR [rbx-0x44270070]
   14004db6e:	nop
   14004db6f:	(bad)  
   14004db70:	fdivr  DWORD PTR [rbx-0x44270070]
   14004db76:	nop
   14004db77:	(bad)  
   14004db78:	fdivr  DWORD PTR [rbx-0x44270070]
   14004db7e:	nop
   14004db7f:	jmp    QWORD PTR [rdi+0x54ff6289]
   14004db85:	xor    eax,0x4272ff17
   14004db8a:	or     edi,edi
   14004db8c:	jg     0x14004dbd6
   14004db8e:	(bad)  
   14004db8f:	(bad)  
   14004db90:	jle    0x14004dbd9
   14004db92:	(bad)  
   14004db93:	(bad)  
   14004db94:	jle    0x14004dbdd
   14004db96:	(bad)  
   14004db97:	(bad)  
   14004db98:	jge    0x14004dbe1
   14004db9a:	(bad)  
   14004db9b:	(bad)  
   14004db9c:	jge    0x14004dbe5
   14004db9e:	(bad)  
   14004db9f:	(bad)  
   14004dba0:	jl     0x14004dbe8
   14004dba2:	(bad)  
   14004dba3:	(bad)  
   14004dba4:	jnp    0x14004dbec
   14004dba6:	(bad)  
   14004dba7:	(bad)  
   14004dba8:	jnp    0x14004dbf0
   14004dbaa:	(bad)  
   14004dbab:	(bad)  
   14004dbac:	jnp    0x14004dbf3
   14004dbae:	(bad)  
   14004dbaf:	(bad)  
   14004dbb0:	jp     0x14004dbf7
   14004dbb2:	(bad)  
   14004dbb3:	(bad)  
   14004dbb4:	jns    0x14004dbfb
   14004dbb6:	(bad)  
   14004dbb7:	(bad)  
   14004dbb8:	jns    0x14004dbfe
   14004dbba:	(bad)  
   14004dbbb:	(bad)  
   14004dbbc:	js     0x14004dc02
   14004dbbe:	(bad)  
   14004dbbf:	(bad)  
   14004dbc0:	js     0x14004dc06
   14004dbc2:	(bad)  
   14004dbc3:	push   QWORD PTR [rdi+0x43]
   14004dbc6:	(bad)  
   14004dbc7:	push   QWORD PTR [rdi+0x43]
   14004dbca:	(bad)  
   14004dbcb:	push   QWORD PTR [rsi+0x43]
   14004dbce:	(bad)  
   14004dbcf:	push   QWORD PTR [rsi+0x42]
   14004dbd2:	(bad)  
   14004dbd3:	push   QWORD PTR [rbp+0x42]
   14004dbd6:	(bad)  
   14004dbd7:	push   QWORD PTR [rbp+0x42]
   14004dbda:	(bad)  
   14004dbdb:	push   QWORD PTR [rcx+rax*2+0x7]
   14004dbdf:	push   QWORD PTR [rcx+rax*2+0x7]
   14004dbe3:	push   QWORD PTR [rbx+0x41]
   14004dbe6:	(bad)  
   14004dbe7:	push   QWORD PTR [rbx+0x41]
   14004dbea:	or     bh,bh
   14004dbec:	jb     0x14004dc2e
   14004dbee:	or     bh,bh
   14004dbf0:	jno    0x14004dc32
   14004dbf2:	or     bh,bh
   14004dbf4:	jno    0x14004dc35
   14004dbf6:	or     bh,bh
   14004dbf8:	jno    0x14004dc39
   14004dbfa:	or     bh,bh
   14004dbfc:	jo     0x14004dc3d
   14004dbfe:	or     bh,bh
   14004dc00:	outs   dx,DWORD PTR ds:[rsi]
   14004dc01:	(bad)  
   14004dc02:	or     bh,bh
   14004dc04:	outs   dx,DWORD PTR ds:[rsi]
   14004dc05:	ds or  bh,bh
   14004dc08:	outs   dx,BYTE PTR ds:[rsi]
   14004dc09:	ds or  bh,bh
   14004dc0c:	outs   dx,BYTE PTR ds:[rsi]
   14004dc0d:	ds or  bh,bh
   14004dc10:	ins    DWORD PTR es:[rdi],dx
   14004dc11:	cmp    eax,0x3d6dff08
   14004dc16:	or     bh,bh
   14004dc18:	ins    BYTE PTR es:[rdi],dx
   14004dc19:	cmp    eax,0x3c6cff08
   14004dc1e:	or     bh,bh
   14004dc20:	imul   edi,DWORD PTR [rax+rcx*1],0xffffffff
   14004dc24:	imul   edi,DWORD PTR [rax+rcx*1],0xffffffff
   14004dc28:	push   0x3c
   14004dc2a:	or     edi,edi
   14004dc2c:	push   0x3b
   14004dc2e:	or     edi,edi
   14004dc30:	imul   edi,DWORD PTR [rbx],0x3b69ff09
   14004dc36:	or     edi,edi
   14004dc38:	push   0x68ff093a
   14004dc3d:	cmp    cl,BYTE PTR [rcx]
   14004dc3f:	jmp    QWORD PTR [rdi+0x3a]
   14004dc42:	or     edi,edi
   14004dc44:	cmp    DWORD PTR [ecx],ecx
   14004dc47:	inc    DWORD PTR [rax]
	...
   14004dc85:	add    BYTE PTR [rax],al
   14004dc87:	add    BYTE PTR [rcx-0x5e00fda3],ah
   14004dc8d:	pop    rsp
   14004dc8e:	add    bh,bh
   14004dc90:	movabs al,ds:0x9fff025ca0ff025c
   14004dc99:	pop    rbx
   14004dc9a:	add    bh,bh
   14004dc9c:	lahf   
   14004dc9d:	pop    rbx
   14004dc9e:	add    bh,bh
   14004dca0:	sahf   
   14004dca1:	pop    rbx
   14004dca2:	add    bh,bh
   14004dca4:	sahf   
   14004dca5:	pop    rdx
   14004dca6:	add    bh,bh
   14004dca8:	popf   
   14004dca9:	pop    rdx
   14004dcaa:	add    edi,edi
   14004dcac:	popf   
   14004dcad:	pop    rdx
   14004dcae:	add    edi,edi
   14004dcb0:	pushf  
   14004dcb1:	pop    rcx
   14004dcb2:	add    edi,edi
   14004dcb4:	pushf  
   14004dcb5:	pop    rcx
   14004dcb6:	add    edi,edi
   14004dcb8:	fwait
   14004dcb9:	pop    rcx
   14004dcba:	add    edi,edi
   14004dcbc:	fwait
   14004dcbd:	pop    rax
   14004dcbe:	add    edi,edi
   14004dcc0:	(bad)  
   14004dcc1:	pop    rax
   14004dcc2:	add    edi,edi
   14004dcc4:	(bad)  
   14004dcc5:	pop    rax
   14004dcc6:	add    edi,edi
   14004dcc8:	cdq    
   14004dcc9:	push   rdi
   14004dcca:	add    edi,edi
   14004dccc:	cwde   
   14004dccd:	push   rdi
   14004dcce:	add    edi,edi
   14004dcd0:	cwde   
   14004dcd1:	push   rdi
   14004dcd2:	add    edi,edi
   14004dcd4:	cwde   
   14004dcd5:	push   rdi
   14004dcd6:	add    edi,edi
   14004dcd8:	xchg   edi,eax
   14004dcd9:	push   rsi
   14004dcda:	add    edi,edi
   14004dcdc:	xchg   esi,eax
   14004dcdd:	push   rsi
   14004dcde:	add    edi,edi
   14004dce0:	xchg   esi,eax
   14004dce1:	push   rsi
   14004dce2:	add    edi,edi
   14004dce4:	xchg   ebp,eax
   14004dce5:	push   rbp
   14004dce6:	add    edi,edi
   14004dce8:	xchg   ebp,eax
   14004dce9:	push   rbp
   14004dcea:	add    al,0xff
   14004dcec:	xchg   esp,eax
   14004dced:	push   rbp
   14004dcee:	add    al,0xff
   14004dcf0:	xchg   esp,eax
   14004dcf1:	push   rsp
   14004dcf2:	add    al,0xff
   14004dcf4:	xchg   ebx,eax
   14004dcf5:	push   rsp
   14004dcf6:	add    al,0xff
   14004dcf8:	xchg   ebx,eax
   14004dcf9:	push   rsp
   14004dcfa:	add    al,0xff
   14004dcfc:	xchg   edx,eax
   14004dcfd:	push   rbx
   14004dcfe:	add    al,0xff
   14004dd00:	xchg   edx,eax
   14004dd01:	push   rbx
   14004dd02:	add    al,0xff
   14004dd04:	xchg   ecx,eax
   14004dd05:	push   rbx
   14004dd06:	add    al,0xff
   14004dd08:	xchg   ecx,eax
   14004dd09:	push   rdx
   14004dd0a:	add    al,0xff
   14004dd0c:	nop
   14004dd0d:	push   rdx
   14004dd0e:	add    al,0xff
   14004dd10:	nop
   14004dd11:	push   rdx
   14004dd12:	add    al,0xff
   14004dd14:	(bad)  
   14004dd15:	push   rdx
   14004dd16:	add    al,0xff
   14004dd18:	mov    ss,WORD PTR [rcx+0x4]
   14004dd1b:	dec    DWORD PTR [rsi-0x7100fbaf]
   14004dd21:	push   rcx
   14004dd22:	add    al,0xff
   14004dd24:	lea    edx,[rax+0x4]
   14004dd27:	dec    DWORD PTR [rax+rdx*2+0x508cff05]
   14004dd2e:	add    eax,0x54f8bff
   14004dd33:	dec    DWORD PTR [rbx-0x7500fab1]
   14004dd39:	rex.WRXB add rax,0x54e8aff
   14004dd3f:	(bad)  
   14004dd40:	jg     0x14004dd8c
   14004dd42:	or     bh,bh
   14004dd44:	pop    rax
   14004dd45:	(bad)  
   14004dd46:	(bad)  
   14004dd47:	call   QWORD PTR [rdi-0x2600ab87]
   14004dd4d:	mov    esp,0xbcd9ff91
   14004dd52:	xchg   ecx,eax
   14004dd53:	(bad)  
   14004dd54:	fnstcw WORD PTR [rcx+rdx*4-0x6e432601]
   14004dd5b:	(bad)  
   14004dd5c:	fnstcw WORD PTR [rcx+rdx*4-0x6e432601]
   14004dd63:	(bad)  
   14004dd64:	fnstcw WORD PTR [rcx+rdx*4-0x6e432601]
   14004dd6b:	(bad)  
   14004dd6c:	fnstcw WORD PTR [rcx+rdx*4-0x6e432601]
   14004dd73:	(bad)  
   14004dd74:	fnstcw WORD PTR [rcx+rdx*4-0x6e432601]
   14004dd7b:	(bad)  
   14004dd7c:	fnstcw WORD PTR [rcx+rdx*4-0x6e432601]
   14004dd83:	call   QWORD PTR [rdi+0x57ff5479]
   14004dd89:	(bad)  
   14004dd8a:	(bad)  
   14004dd8b:	push   QWORD PTR [rdi+0x45]
   14004dd8e:	or     edi,edi
   14004dd90:	jg     0x14004ddda
   14004dd92:	(bad)  
   14004dd93:	(bad)  
   14004dd94:	jle    0x14004dddd
   14004dd96:	(bad)  
   14004dd97:	(bad)  
   14004dd98:	jle    0x14004dde1
   14004dd9a:	(bad)  
   14004dd9b:	(bad)  
   14004dd9c:	jge    0x14004dde5
   14004dd9e:	(bad)  
   14004dd9f:	(bad)  
   14004dda0:	jge    0x14004dde9
   14004dda2:	(bad)  
   14004dda3:	(bad)  
   14004dda4:	jl     0x14004ddec
   14004dda6:	(bad)  
   14004dda7:	(bad)  
   14004dda8:	jnp    0x14004ddf0
   14004ddaa:	(bad)  
   14004ddab:	(bad)  
   14004ddac:	jnp    0x14004ddf4
   14004ddae:	(bad)  
   14004ddaf:	(bad)  
   14004ddb0:	jnp    0x14004ddf7
   14004ddb2:	(bad)  
   14004ddb3:	(bad)  
   14004ddb4:	jp     0x14004ddfb
   14004ddb6:	(bad)  
   14004ddb7:	(bad)  
   14004ddb8:	jns    0x14004ddff
   14004ddba:	(bad)  
   14004ddbb:	(bad)  
   14004ddbc:	jns    0x14004de02
   14004ddbe:	(bad)  
   14004ddbf:	(bad)  
   14004ddc0:	js     0x14004de06
   14004ddc2:	(bad)  
   14004ddc3:	(bad)  
   14004ddc4:	js     0x14004de0a
   14004ddc6:	(bad)  
   14004ddc7:	push   QWORD PTR [rdi+0x43]
   14004ddca:	(bad)  
   14004ddcb:	push   QWORD PTR [rdi+0x43]
   14004ddce:	(bad)  
   14004ddcf:	push   QWORD PTR [rsi+0x43]
   14004ddd2:	(bad)  
   14004ddd3:	push   QWORD PTR [rsi+0x42]
   14004ddd6:	(bad)  
   14004ddd7:	push   QWORD PTR [rbp+0x42]
   14004ddda:	(bad)  
   14004dddb:	push   QWORD PTR [rbp+0x42]
   14004ddde:	(bad)  
   14004dddf:	push   QWORD PTR [rcx+rax*2+0x7]
   14004dde3:	push   QWORD PTR [rcx+rax*2+0x7]
   14004dde7:	push   QWORD PTR [rbx+0x41]
   14004ddea:	(bad)  
   14004ddeb:	push   QWORD PTR [rbx+0x41]
   14004ddee:	or     bh,bh
   14004ddf0:	jb     0x14004de32
   14004ddf2:	or     bh,bh
   14004ddf4:	jno    0x14004de36
   14004ddf6:	or     bh,bh
   14004ddf8:	jno    0x14004de39
   14004ddfa:	or     bh,bh
   14004ddfc:	jno    0x14004de3d
   14004ddfe:	or     bh,bh
   14004de00:	jo     0x14004de41
   14004de02:	or     bh,bh
   14004de04:	outs   dx,DWORD PTR ds:[rsi]
   14004de05:	(bad)  
   14004de06:	or     bh,bh
   14004de08:	outs   dx,DWORD PTR ds:[rsi]
   14004de09:	ds or  bh,bh
   14004de0c:	outs   dx,BYTE PTR ds:[rsi]
   14004de0d:	ds or  bh,bh
   14004de10:	outs   dx,BYTE PTR ds:[rsi]
   14004de11:	ds or  bh,bh
   14004de14:	ins    DWORD PTR es:[rdi],dx
   14004de15:	cmp    eax,0x3d6dff08
   14004de1a:	or     bh,bh
   14004de1c:	ins    BYTE PTR es:[rdi],dx
   14004de1d:	cmp    eax,0x3c6cff08
   14004de22:	or     bh,bh
   14004de24:	imul   edi,DWORD PTR [rax+rcx*1],0xffffffff
   14004de28:	imul   edi,DWORD PTR [rax+rcx*1],0xffffffff
   14004de2c:	push   0x3c
   14004de2e:	or     edi,edi
   14004de30:	push   0x3b
   14004de32:	or     edi,edi
   14004de34:	imul   edi,DWORD PTR [rbx],0x3b69ff09
   14004de3a:	or     edi,edi
   14004de3c:	push   0x68ff093a
   14004de41:	cmp    cl,BYTE PTR [rcx]
   14004de43:	jmp    QWORD PTR [rdi+0x3a]
   14004de46:	or     edi,edi
	...
   14004de88:	movabs ds:0xa1ff025da1ff025d,al
   14004de91:	pop    rsp
   14004de92:	add    bh,bh
   14004de94:	movabs al,ds:0x9fff025ca0ff025c
   14004de9d:	pop    rbx
   14004de9e:	add    bh,bh
   14004dea0:	lahf   
   14004dea1:	pop    rbx
   14004dea2:	add    bh,bh
   14004dea4:	sahf   
   14004dea5:	pop    rbx
   14004dea6:	add    bh,bh
   14004dea8:	sahf   
   14004dea9:	pop    rdx
   14004deaa:	add    bh,bh
   14004deac:	popf   
   14004dead:	pop    rdx
   14004deae:	add    edi,edi
   14004deb0:	popf   
   14004deb1:	pop    rdx
   14004deb2:	add    edi,edi
   14004deb4:	pushf  
   14004deb5:	pop    rcx
   14004deb6:	add    edi,edi
   14004deb8:	pushf  
   14004deb9:	pop    rcx
   14004deba:	add    edi,edi
   14004debc:	fwait
   14004debd:	pop    rcx
   14004debe:	add    edi,edi
   14004dec0:	fwait
   14004dec1:	pop    rax
   14004dec2:	add    edi,edi
   14004dec4:	(bad)  
   14004dec5:	pop    rax
   14004dec6:	add    edi,edi
   14004dec8:	(bad)  
   14004dec9:	pop    rax
   14004deca:	add    edi,edi
   14004decc:	cdq    
   14004decd:	push   rdi
   14004dece:	add    edi,edi
   14004ded0:	cwde   
   14004ded1:	push   rdi
   14004ded2:	add    edi,edi
   14004ded4:	cwde   
   14004ded5:	push   rdi
   14004ded6:	add    edi,edi
   14004ded8:	cwde   
   14004ded9:	push   rdi
   14004deda:	add    edi,edi
   14004dedc:	xchg   edi,eax
   14004dedd:	push   rsi
   14004dede:	add    edi,edi
   14004dee0:	xchg   esi,eax
   14004dee1:	push   rsi
   14004dee2:	add    edi,edi
   14004dee4:	xchg   esi,eax
   14004dee5:	push   rsi
   14004dee6:	add    edi,edi
   14004dee8:	xchg   ebp,eax
   14004dee9:	push   rbp
   14004deea:	add    edi,edi
   14004deec:	xchg   ebp,eax
   14004deed:	push   rbp
   14004deee:	add    al,0xff
   14004def0:	xchg   esp,eax
   14004def1:	push   rbp
   14004def2:	add    al,0xff
   14004def4:	xchg   esp,eax
   14004def5:	push   rsp
   14004def6:	add    al,0xff
   14004def8:	xchg   ebx,eax
   14004def9:	push   rsp
   14004defa:	add    al,0xff
   14004defc:	xchg   ebx,eax
   14004defd:	push   rsp
   14004defe:	add    al,0xff
   14004df00:	xchg   edx,eax
   14004df01:	push   rbx
   14004df02:	add    al,0xff
   14004df04:	xchg   edx,eax
   14004df05:	push   rbx
   14004df06:	add    al,0xff
   14004df08:	xchg   ecx,eax
   14004df09:	push   rbx
   14004df0a:	add    al,0xff
   14004df0c:	xchg   ecx,eax
   14004df0d:	push   rdx
   14004df0e:	add    al,0xff
   14004df10:	nop
   14004df11:	push   rdx
   14004df12:	add    al,0xff
   14004df14:	nop
   14004df15:	push   rdx
   14004df16:	add    al,0xff
   14004df18:	(bad)  
   14004df19:	push   rdx
   14004df1a:	add    al,0xff
   14004df1c:	mov    ss,WORD PTR [rcx+0x4]
   14004df1f:	dec    DWORD PTR [rsi-0x7100fbaf]
   14004df25:	push   rcx
   14004df26:	add    al,0xff
   14004df28:	lea    edx,[rax+0x4]
   14004df2b:	dec    DWORD PTR [rax+rdx*2+0x508cff05]
   14004df32:	add    eax,0x54f8bff
   14004df37:	dec    DWORD PTR [rbx-0x7800fab1]
   14004df3d:	rex.WRB (bad) 
   14004df3f:	call   FWORD PTR [rax+0x38]
   14004df42:	(bad)  
   14004df43:	inc    DWORD PTR [rdi-0x2600ba97]
   14004df49:	mov    ebp,0xbdd9ff92
   14004df4e:	xchg   edx,eax
   14004df4f:	(bad)  
   14004df50:	fnstcw WORD PTR [rbp-0x4226006e]
   14004df56:	xchg   edx,eax
   14004df57:	(bad)  
   14004df58:	fnstcw WORD PTR [rbp-0x4226006e]
   14004df5e:	xchg   edx,eax
   14004df5f:	(bad)  
   14004df60:	fnstcw WORD PTR [rbp-0x4226006e]
   14004df66:	xchg   edx,eax
   14004df67:	(bad)  
   14004df68:	fnstcw WORD PTR [rbp-0x4226006e]
   14004df6e:	xchg   edx,eax
   14004df6f:	(bad)  
   14004df70:	fnstcw WORD PTR [rbp-0x4226006e]
   14004df76:	xchg   edx,eax
   14004df77:	(bad)  
   14004df78:	fnstcw WORD PTR [rbp-0x4226006e]
   14004df7e:	xchg   edx,eax
   14004df7f:	(bad)  
   14004df80:	fnstcw WORD PTR [rbp-0x4226006e]
   14004df86:	xchg   edx,eax
   14004df87:	inc    DWORD PTR [rdi+0x58ff4569]
   14004df8d:	(bad)  
   14004df8e:	(bad)  
   14004df8f:	(bad)  
   14004df90:	jl     0x14004dfd9
   14004df92:	(bad)  
   14004df93:	(bad)  
   14004df94:	jg     0x14004dfde
   14004df96:	(bad)  
   14004df97:	(bad)  
   14004df98:	jle    0x14004dfe1
   14004df9a:	(bad)  
   14004df9b:	(bad)  
   14004df9c:	jle    0x14004dfe5
   14004df9e:	(bad)  
   14004df9f:	(bad)  
   14004dfa0:	jge    0x14004dfe9
   14004dfa2:	(bad)  
   14004dfa3:	(bad)  
   14004dfa4:	jge    0x14004dfed
   14004dfa6:	(bad)  
   14004dfa7:	(bad)  
   14004dfa8:	jl     0x14004dff0
   14004dfaa:	(bad)  
   14004dfab:	(bad)  
   14004dfac:	jnp    0x14004dff4
   14004dfae:	(bad)  
   14004dfaf:	(bad)  
   14004dfb0:	jnp    0x14004dff8
   14004dfb2:	(bad)  
   14004dfb3:	(bad)  
   14004dfb4:	jnp    0x14004dffb
   14004dfb6:	(bad)  
   14004dfb7:	(bad)  
   14004dfb8:	jp     0x14004dfff
   14004dfba:	(bad)  
   14004dfbb:	(bad)  
   14004dfbc:	jns    0x14004e003
   14004dfbe:	(bad)  
   14004dfbf:	(bad)  
   14004dfc0:	jns    0x14004e006
   14004dfc2:	(bad)  
   14004dfc3:	(bad)  
   14004dfc4:	js     0x14004e00a
   14004dfc6:	(bad)  
   14004dfc7:	(bad)  
   14004dfc8:	js     0x14004e00e
   14004dfca:	(bad)  
   14004dfcb:	push   QWORD PTR [rdi+0x43]
   14004dfce:	(bad)  
   14004dfcf:	push   QWORD PTR [rdi+0x43]
   14004dfd2:	(bad)  
   14004dfd3:	push   QWORD PTR [rsi+0x43]
   14004dfd6:	(bad)  
   14004dfd7:	push   QWORD PTR [rsi+0x42]
   14004dfda:	(bad)  
   14004dfdb:	push   QWORD PTR [rbp+0x42]
   14004dfde:	(bad)  
   14004dfdf:	push   QWORD PTR [rbp+0x42]
   14004dfe2:	(bad)  
   14004dfe3:	push   QWORD PTR [rcx+rax*2+0x7]
   14004dfe7:	push   QWORD PTR [rcx+rax*2+0x7]
   14004dfeb:	push   QWORD PTR [rbx+0x41]
   14004dfee:	(bad)  
   14004dfef:	push   QWORD PTR [rbx+0x41]
   14004dff2:	or     bh,bh
   14004dff4:	jb     0x14004e036
   14004dff6:	or     bh,bh
   14004dff8:	jno    0x14004e03a
   14004dffa:	or     bh,bh
   14004dffc:	jno    0x14004e03d
   14004dffe:	or     bh,bh
   14004e000:	jno    0x14004e041
   14004e002:	or     bh,bh
   14004e004:	jo     0x14004e045
   14004e006:	or     bh,bh
   14004e008:	outs   dx,DWORD PTR ds:[rsi]
   14004e009:	(bad)  
   14004e00a:	or     bh,bh
   14004e00c:	outs   dx,DWORD PTR ds:[rsi]
   14004e00d:	ds or  bh,bh
   14004e010:	outs   dx,BYTE PTR ds:[rsi]
   14004e011:	ds or  bh,bh
   14004e014:	outs   dx,BYTE PTR ds:[rsi]
   14004e015:	ds or  bh,bh
   14004e018:	ins    DWORD PTR es:[rdi],dx
   14004e019:	cmp    eax,0x3d6dff08
   14004e01e:	or     bh,bh
   14004e020:	ins    BYTE PTR es:[rdi],dx
   14004e021:	cmp    eax,0x3c6cff08
   14004e026:	or     bh,bh
   14004e028:	imul   edi,DWORD PTR [rax+rcx*1],0xffffffff
   14004e02c:	imul   edi,DWORD PTR [rax+rcx*1],0xffffffff
   14004e030:	push   0x3c
   14004e032:	or     edi,edi
   14004e034:	push   0x3b
   14004e036:	or     edi,edi
   14004e038:	imul   edi,DWORD PTR [rbx],0x3b69ff09
   14004e03e:	or     edi,edi
   14004e040:	push   0x68ff093a
   14004e045:	cmp    cl,BYTE PTR [rcx]
   14004e047:	inc    DWORD PTR [rax]
	...
   14004e085:	add    BYTE PTR [rax],al
   14004e087:	add    BYTE PTR [rdx-0x5d00fda3],ah
   14004e08d:	pop    rbp
   14004e08e:	add    bh,bh
   14004e090:	movabs eax,ds:0xa0ff025ca1ff025d
   14004e099:	pop    rsp
   14004e09a:	add    bh,bh
   14004e09c:	movabs al,ds:0x9fff025b9fff025c
   14004e0a5:	pop    rbx
   14004e0a6:	add    bh,bh
   14004e0a8:	sahf   
   14004e0a9:	pop    rbx
   14004e0aa:	add    bh,bh
   14004e0ac:	sahf   
   14004e0ad:	pop    rdx
   14004e0ae:	add    bh,bh
   14004e0b0:	popf   
   14004e0b1:	pop    rdx
   14004e0b2:	add    edi,edi
   14004e0b4:	popf   
   14004e0b5:	pop    rdx
   14004e0b6:	add    edi,edi
   14004e0b8:	pushf  
   14004e0b9:	pop    rcx
   14004e0ba:	add    edi,edi
   14004e0bc:	pushf  
   14004e0bd:	pop    rcx
   14004e0be:	add    edi,edi
   14004e0c0:	fwait
   14004e0c1:	pop    rcx
   14004e0c2:	add    edi,edi
   14004e0c4:	fwait
   14004e0c5:	pop    rax
   14004e0c6:	add    edi,edi
   14004e0c8:	(bad)  
   14004e0c9:	pop    rax
   14004e0ca:	add    edi,edi
   14004e0cc:	(bad)  
   14004e0cd:	pop    rax
   14004e0ce:	add    edi,edi
   14004e0d0:	cdq    
   14004e0d1:	push   rdi
   14004e0d2:	add    edi,edi
   14004e0d4:	cwde   
   14004e0d5:	push   rdi
   14004e0d6:	add    edi,edi
   14004e0d8:	cwde   
   14004e0d9:	push   rdi
   14004e0da:	add    edi,edi
   14004e0dc:	cwde   
   14004e0dd:	push   rdi
   14004e0de:	add    edi,edi
   14004e0e0:	xchg   edi,eax
   14004e0e1:	push   rsi
   14004e0e2:	add    edi,edi
   14004e0e4:	xchg   esi,eax
   14004e0e5:	push   rsi
   14004e0e6:	add    edi,edi
   14004e0e8:	xchg   esi,eax
   14004e0e9:	push   rsi
   14004e0ea:	add    edi,edi
   14004e0ec:	xchg   ebp,eax
   14004e0ed:	push   rbp
   14004e0ee:	add    edi,edi
   14004e0f0:	xchg   ebp,eax
   14004e0f1:	push   rbp
   14004e0f2:	add    al,0xff
   14004e0f4:	xchg   esp,eax
   14004e0f5:	push   rbp
   14004e0f6:	add    al,0xff
   14004e0f8:	xchg   esp,eax
   14004e0f9:	push   rsp
   14004e0fa:	add    al,0xff
   14004e0fc:	xchg   ebx,eax
   14004e0fd:	push   rsp
   14004e0fe:	add    al,0xff
   14004e100:	xchg   ebx,eax
   14004e101:	push   rsp
   14004e102:	add    al,0xff
   14004e104:	xchg   edx,eax
   14004e105:	push   rbx
   14004e106:	add    al,0xff
   14004e108:	xchg   edx,eax
   14004e109:	push   rbx
   14004e10a:	add    al,0xff
   14004e10c:	xchg   ecx,eax
   14004e10d:	push   rbx
   14004e10e:	add    al,0xff
   14004e110:	xchg   ecx,eax
   14004e111:	push   rdx
   14004e112:	add    al,0xff
   14004e114:	nop
   14004e115:	push   rdx
   14004e116:	add    al,0xff
   14004e118:	nop
   14004e119:	push   rdx
   14004e11a:	add    al,0xff
   14004e11c:	(bad)  
   14004e11d:	push   rdx
   14004e11e:	add    al,0xff
   14004e120:	mov    ss,WORD PTR [rcx+0x4]
   14004e123:	dec    DWORD PTR [rsi-0x7100fbaf]
   14004e129:	push   rcx
   14004e12a:	add    al,0xff
   14004e12c:	lea    edx,[rax+0x4]
   14004e12f:	dec    DWORD PTR [rax+rdx*2+0x508cff05]
   14004e136:	add    eax,0x64e88ff
   14004e13b:	jmp    QWORD PTR [rax+0x3b]
   14004e13e:	adc    al,0xff
   14004e140:	outs   dx,DWORD PTR ds:[rsi]
   14004e141:	push   rax
   14004e142:	(bad)  
   14004e143:	call   rdx
   14004e145:	mov    ch,0x8b
   14004e147:	(bad)  
   14004e148:	fidivr DWORD PTR [rsi-0x4125006d]
   14004e14e:	xchg   ebx,eax
   14004e14f:	(bad)  
   14004e150:	fidivr DWORD PTR [rsi-0x4125006d]
   14004e156:	xchg   ebx,eax
   14004e157:	(bad)  
   14004e158:	fidivr DWORD PTR [rsi-0x4125006d]
   14004e15e:	xchg   ebx,eax
   14004e15f:	(bad)  
   14004e160:	fidivr DWORD PTR [rsi-0x4125006d]
   14004e166:	xchg   ebx,eax
   14004e167:	(bad)  
   14004e168:	fidivr DWORD PTR [rsi-0x4125006d]
   14004e16e:	xchg   ebx,eax
   14004e16f:	(bad)  
   14004e170:	fidivr DWORD PTR [rsi-0x4125006d]
   14004e176:	xchg   ebx,eax
   14004e177:	(bad)  
   14004e178:	fidivr DWORD PTR [rsi-0x4125006d]
   14004e17e:	xchg   ebx,eax
   14004e17f:	(bad)  
   14004e180:	fidivr DWORD PTR [rsi-0x4125006d]
   14004e186:	xchg   ebx,eax
   14004e187:	call   rdx
   14004e189:	mov    ch,0x8b
   14004e18b:	jmp    FWORD PTR [rdi+0x50]
   14004e18e:	(bad)  
   14004e18f:	call   FWORD PTR [rsi+0x3a]
   14004e192:	adc    eax,0x7477cff
   14004e197:	(bad)  
   14004e198:	jg     0x14004e1e2
   14004e19a:	(bad)  
   14004e19b:	(bad)  
   14004e19c:	jle    0x14004e1e5
   14004e19e:	(bad)  
   14004e19f:	(bad)  
   14004e1a0:	jle    0x14004e1e9
   14004e1a2:	(bad)  
   14004e1a3:	(bad)  
   14004e1a4:	jge    0x14004e1ed
   14004e1a6:	(bad)  
   14004e1a7:	(bad)  
   14004e1a8:	jge    0x14004e1f1
   14004e1aa:	(bad)  
   14004e1ab:	(bad)  
   14004e1ac:	jl     0x14004e1f4
   14004e1ae:	(bad)  
   14004e1af:	(bad)  
   14004e1b0:	jnp    0x14004e1f8
   14004e1b2:	(bad)  
   14004e1b3:	(bad)  
   14004e1b4:	jnp    0x14004e1fc
   14004e1b6:	(bad)  
   14004e1b7:	(bad)  
   14004e1b8:	jnp    0x14004e1ff
   14004e1ba:	(bad)  
   14004e1bb:	(bad)  
   14004e1bc:	jp     0x14004e203
   14004e1be:	(bad)  
   14004e1bf:	(bad)  
   14004e1c0:	jns    0x14004e207
   14004e1c2:	(bad)  
   14004e1c3:	(bad)  
   14004e1c4:	jns    0x14004e20a
   14004e1c6:	(bad)  
   14004e1c7:	(bad)  
   14004e1c8:	js     0x14004e20e
   14004e1ca:	(bad)  
   14004e1cb:	(bad)  
   14004e1cc:	js     0x14004e212
   14004e1ce:	(bad)  
   14004e1cf:	push   QWORD PTR [rdi+0x43]
   14004e1d2:	(bad)  
   14004e1d3:	push   QWORD PTR [rdi+0x43]
   14004e1d6:	(bad)  
   14004e1d7:	push   QWORD PTR [rsi+0x43]
   14004e1da:	(bad)  
   14004e1db:	push   QWORD PTR [rsi+0x42]
   14004e1de:	(bad)  
   14004e1df:	push   QWORD PTR [rbp+0x42]
   14004e1e2:	(bad)  
   14004e1e3:	push   QWORD PTR [rbp+0x42]
   14004e1e6:	(bad)  
   14004e1e7:	push   QWORD PTR [rcx+rax*2+0x7]
   14004e1eb:	push   QWORD PTR [rcx+rax*2+0x7]
   14004e1ef:	push   QWORD PTR [rbx+0x41]
   14004e1f2:	(bad)  
   14004e1f3:	push   QWORD PTR [rbx+0x41]
   14004e1f6:	or     bh,bh
   14004e1f8:	jb     0x14004e23a
   14004e1fa:	or     bh,bh
   14004e1fc:	jno    0x14004e23e
   14004e1fe:	or     bh,bh
   14004e200:	jno    0x14004e241
   14004e202:	or     bh,bh
   14004e204:	jno    0x14004e245
   14004e206:	or     bh,bh
   14004e208:	jo     0x14004e249
   14004e20a:	or     bh,bh
   14004e20c:	outs   dx,DWORD PTR ds:[rsi]
   14004e20d:	(bad)  
   14004e20e:	or     bh,bh
   14004e210:	outs   dx,DWORD PTR ds:[rsi]
   14004e211:	ds or  bh,bh
   14004e214:	outs   dx,BYTE PTR ds:[rsi]
   14004e215:	ds or  bh,bh
   14004e218:	outs   dx,BYTE PTR ds:[rsi]
   14004e219:	ds or  bh,bh
   14004e21c:	ins    DWORD PTR es:[rdi],dx
   14004e21d:	cmp    eax,0x3d6dff08
   14004e222:	or     bh,bh
   14004e224:	ins    BYTE PTR es:[rdi],dx
   14004e225:	cmp    eax,0x3c6cff08
   14004e22a:	or     bh,bh
   14004e22c:	imul   edi,DWORD PTR [rax+rcx*1],0xffffffff
   14004e230:	imul   edi,DWORD PTR [rax+rcx*1],0xffffffff
   14004e234:	push   0x3c
   14004e236:	or     edi,edi
   14004e238:	push   0x3b
   14004e23a:	or     edi,edi
   14004e23c:	imul   edi,DWORD PTR [rbx],0x3b69ff09
   14004e242:	or     edi,edi
   14004e244:	push   0xff093a
	...
   14004e285:	add    BYTE PTR [rax],al
   14004e287:	add    BYTE PTR [rbx-0x5d00fda3],ah
   14004e28d:	pop    rbp
   14004e28e:	add    bh,bh
   14004e290:	movabs ds:0xa1ff025da1ff025d,al
   14004e299:	pop    rsp
   14004e29a:	add    bh,bh
   14004e29c:	movabs al,ds:0x9fff025ca0ff025c
   14004e2a5:	pop    rbx
   14004e2a6:	add    bh,bh
   14004e2a8:	lahf   
   14004e2a9:	pop    rbx
   14004e2aa:	add    bh,bh
   14004e2ac:	sahf   
   14004e2ad:	pop    rbx
   14004e2ae:	add    bh,bh
   14004e2b0:	sahf   
   14004e2b1:	pop    rdx
   14004e2b2:	add    bh,bh
   14004e2b4:	popf   
   14004e2b5:	pop    rdx
   14004e2b6:	add    edi,edi
   14004e2b8:	popf   
   14004e2b9:	pop    rdx
   14004e2ba:	add    edi,edi
   14004e2bc:	pushf  
   14004e2bd:	pop    rcx
   14004e2be:	add    edi,edi
   14004e2c0:	pushf  
   14004e2c1:	pop    rcx
   14004e2c2:	add    edi,edi
   14004e2c4:	fwait
   14004e2c5:	pop    rcx
   14004e2c6:	add    edi,edi
   14004e2c8:	fwait
   14004e2c9:	pop    rax
   14004e2ca:	add    edi,edi
   14004e2cc:	(bad)  
   14004e2cd:	pop    rax
   14004e2ce:	add    edi,edi
   14004e2d0:	(bad)  
   14004e2d1:	pop    rax
   14004e2d2:	add    edi,edi
   14004e2d4:	cdq    
   14004e2d5:	push   rdi
   14004e2d6:	add    edi,edi
   14004e2d8:	cwde   
   14004e2d9:	push   rdi
   14004e2da:	add    edi,edi
   14004e2dc:	cwde   
   14004e2dd:	push   rdi
   14004e2de:	add    edi,edi
   14004e2e0:	cwde   
   14004e2e1:	push   rdi
   14004e2e2:	add    edi,edi
   14004e2e4:	xchg   edi,eax
   14004e2e5:	push   rsi
   14004e2e6:	add    edi,edi
   14004e2e8:	xchg   esi,eax
   14004e2e9:	push   rsi
   14004e2ea:	add    edi,edi
   14004e2ec:	xchg   esi,eax
   14004e2ed:	push   rsi
   14004e2ee:	add    edi,edi
   14004e2f0:	xchg   ebp,eax
   14004e2f1:	push   rbp
   14004e2f2:	add    edi,edi
   14004e2f4:	xchg   ebp,eax
   14004e2f5:	push   rbp
   14004e2f6:	add    al,0xff
   14004e2f8:	xchg   esp,eax
   14004e2f9:	push   rbp
   14004e2fa:	add    al,0xff
   14004e2fc:	xchg   esp,eax
   14004e2fd:	push   rsp
   14004e2fe:	add    al,0xff
   14004e300:	xchg   ebx,eax
   14004e301:	push   rsp
   14004e302:	add    al,0xff
   14004e304:	xchg   ebx,eax
   14004e305:	push   rsp
   14004e306:	add    al,0xff
   14004e308:	xchg   edx,eax
   14004e309:	push   rbx
   14004e30a:	add    al,0xff
   14004e30c:	xchg   edx,eax
   14004e30d:	push   rbx
   14004e30e:	add    al,0xff
   14004e310:	xchg   ecx,eax
   14004e311:	push   rbx
   14004e312:	add    al,0xff
   14004e314:	xchg   ecx,eax
   14004e315:	push   rdx
   14004e316:	add    al,0xff
   14004e318:	nop
   14004e319:	push   rdx
   14004e31a:	add    al,0xff
   14004e31c:	nop
   14004e31d:	push   rdx
   14004e31e:	add    al,0xff
   14004e320:	(bad)  
   14004e321:	push   rdx
   14004e322:	add    al,0xff
   14004e324:	mov    ss,WORD PTR [rcx+0x4]
   14004e327:	dec    DWORD PTR [rsi-0x7100fbaf]
   14004e32d:	push   rcx
   14004e32e:	add    al,0xff
   14004e330:	lea    edx,[rax+0x4]
   14004e333:	dec    DWORD PTR [rax+rdx*2+0x406aff05]
   14004e33a:	adc    edi,edi
   14004e33c:	pop    rsi
   14004e33d:	and    dil,dil
   14004e340:	shl    BYTE PTR [rsi-0x40250074],cl
   14004e346:	xchg   esp,eax
   14004e347:	(bad)  
   14004e348:	fidivr DWORD PTR [rdi-0x4025006c]
   14004e34e:	xchg   esp,eax
   14004e34f:	(bad)  
   14004e350:	fidivr DWORD PTR [rdi-0x4025006c]
   14004e356:	xchg   esp,eax
   14004e357:	(bad)  
   14004e358:	fidivr DWORD PTR [rdi-0x4025006c]
   14004e35e:	xchg   esp,eax
   14004e35f:	(bad)  
   14004e360:	fidivr DWORD PTR [rdi-0x4025006c]
   14004e366:	xchg   esp,eax
   14004e367:	(bad)  
   14004e368:	fidivr DWORD PTR [rdi-0x4025006c]
   14004e36e:	xchg   esp,eax
   14004e36f:	(bad)  
   14004e370:	fidivr DWORD PTR [rdi-0x4025006c]
   14004e376:	xchg   esp,eax
   14004e377:	(bad)  
   14004e378:	fidivr DWORD PTR [rdi-0x4025006c]
   14004e37e:	xchg   esp,eax
   14004e37f:	(bad)  
   14004e380:	fidivr DWORD PTR [rdi-0x4025006c]
   14004e386:	xchg   esp,eax
   14004e387:	(bad)  
   14004e388:	fidivr DWORD PTR [rdi-0x492d006c]
   14004e38e:	mov    edi,?
   14004e390:	pop    rsi
   14004e391:	and    dil,dil
   14004e394:	cmp    ax,0xff11
   14004e398:	jg     0x14004e3e2
   14004e39a:	(bad)  
   14004e39b:	(bad)  
   14004e39c:	jg     0x14004e3e6
   14004e39e:	(bad)  
   14004e39f:	(bad)  
   14004e3a0:	jle    0x14004e3e9
   14004e3a2:	(bad)  
   14004e3a3:	(bad)  
   14004e3a4:	jle    0x14004e3ed
   14004e3a6:	(bad)  
   14004e3a7:	(bad)  
   14004e3a8:	jge    0x14004e3f1
   14004e3aa:	(bad)  
   14004e3ab:	(bad)  
   14004e3ac:	jge    0x14004e3f5
   14004e3ae:	(bad)  
   14004e3af:	(bad)  
   14004e3b0:	jl     0x14004e3f8
   14004e3b2:	(bad)  
   14004e3b3:	(bad)  
   14004e3b4:	jnp    0x14004e3fc
   14004e3b6:	(bad)  
   14004e3b7:	(bad)  
   14004e3b8:	jnp    0x14004e400
   14004e3ba:	(bad)  
   14004e3bb:	(bad)  
   14004e3bc:	jnp    0x14004e403
   14004e3be:	(bad)  
   14004e3bf:	(bad)  
   14004e3c0:	jp     0x14004e407
   14004e3c2:	(bad)  
   14004e3c3:	(bad)  
   14004e3c4:	jns    0x14004e40b
   14004e3c6:	(bad)  
   14004e3c7:	(bad)  
   14004e3c8:	jns    0x14004e40e
   14004e3ca:	(bad)  
   14004e3cb:	(bad)  
   14004e3cc:	js     0x14004e412
   14004e3ce:	(bad)  
   14004e3cf:	(bad)  
   14004e3d0:	js     0x14004e416
   14004e3d2:	(bad)  
   14004e3d3:	push   QWORD PTR [rdi+0x43]
   14004e3d6:	(bad)  
   14004e3d7:	push   QWORD PTR [rdi+0x43]
   14004e3da:	(bad)  
   14004e3db:	push   QWORD PTR [rsi+0x43]
   14004e3de:	(bad)  
   14004e3df:	push   QWORD PTR [rsi+0x42]
   14004e3e2:	(bad)  
   14004e3e3:	push   QWORD PTR [rbp+0x42]
   14004e3e6:	(bad)  
   14004e3e7:	push   QWORD PTR [rbp+0x42]
   14004e3ea:	(bad)  
   14004e3eb:	push   QWORD PTR [rcx+rax*2+0x7]
   14004e3ef:	push   QWORD PTR [rcx+rax*2+0x7]
   14004e3f3:	push   QWORD PTR [rbx+0x41]
   14004e3f6:	(bad)  
   14004e3f7:	push   QWORD PTR [rbx+0x41]
   14004e3fa:	or     bh,bh
   14004e3fc:	jb     0x14004e43e
   14004e3fe:	or     bh,bh
   14004e400:	jno    0x14004e442
   14004e402:	or     bh,bh
   14004e404:	jno    0x14004e445
   14004e406:	or     bh,bh
   14004e408:	jno    0x14004e449
   14004e40a:	or     bh,bh
   14004e40c:	jo     0x14004e44d
   14004e40e:	or     bh,bh
   14004e410:	outs   dx,DWORD PTR ds:[rsi]
   14004e411:	(bad)  
   14004e412:	or     bh,bh
   14004e414:	outs   dx,DWORD PTR ds:[rsi]
   14004e415:	ds or  bh,bh
   14004e418:	outs   dx,BYTE PTR ds:[rsi]
   14004e419:	ds or  bh,bh
   14004e41c:	outs   dx,BYTE PTR ds:[rsi]
   14004e41d:	ds or  bh,bh
   14004e420:	ins    DWORD PTR es:[rdi],dx
   14004e421:	cmp    eax,0x3d6dff08
   14004e426:	or     bh,bh
   14004e428:	ins    BYTE PTR es:[rdi],dx
   14004e429:	cmp    eax,0x3c6cff08
   14004e42e:	or     bh,bh
   14004e430:	imul   edi,DWORD PTR [rax+rcx*1],0xffffffff
   14004e434:	imul   edi,DWORD PTR [rax+rcx*1],0xffffffff
   14004e438:	push   0x3c
   14004e43a:	or     edi,edi
   14004e43c:	push   0x3b
   14004e43e:	or     edi,edi
   14004e440:	imul   edi,DWORD PTR [rbx],0x3b69ff09
   14004e446:	or     edi,edi
	...
   14004e488:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004e489:	pop    rsi
   14004e48a:	add    bh,bh
   14004e48c:	movabs ds:0xa2ff025da2ff025d,eax
   14004e495:	pop    rbp
   14004e496:	add    bh,bh
   14004e498:	movabs eax,ds:0xa0ff025ca1ff025d
   14004e4a1:	pop    rsp
   14004e4a2:	add    bh,bh
   14004e4a4:	movabs al,ds:0x9fff025b9fff025c
   14004e4ad:	pop    rbx
   14004e4ae:	add    bh,bh
   14004e4b0:	sahf   
   14004e4b1:	pop    rbx
   14004e4b2:	add    bh,bh
   14004e4b4:	sahf   
   14004e4b5:	pop    rdx
   14004e4b6:	add    bh,bh
   14004e4b8:	popf   
   14004e4b9:	pop    rdx
   14004e4ba:	add    edi,edi
   14004e4bc:	popf   
   14004e4bd:	pop    rdx
   14004e4be:	add    edi,edi
   14004e4c0:	pushf  
   14004e4c1:	pop    rcx
   14004e4c2:	add    edi,edi
   14004e4c4:	pushf  
   14004e4c5:	pop    rcx
   14004e4c6:	add    edi,edi
   14004e4c8:	fwait
   14004e4c9:	pop    rcx
   14004e4ca:	add    edi,edi
   14004e4cc:	fwait
   14004e4cd:	pop    rax
   14004e4ce:	add    edi,edi
   14004e4d0:	(bad)  
   14004e4d1:	pop    rax
   14004e4d2:	add    edi,edi
   14004e4d4:	(bad)  
   14004e4d5:	pop    rax
   14004e4d6:	add    edi,edi
   14004e4d8:	cdq    
   14004e4d9:	push   rdi
   14004e4da:	add    edi,edi
   14004e4dc:	cwde   
   14004e4dd:	push   rdi
   14004e4de:	add    edi,edi
   14004e4e0:	cwde   
   14004e4e1:	push   rdi
   14004e4e2:	add    edi,edi
   14004e4e4:	cwde   
   14004e4e5:	push   rdi
   14004e4e6:	add    edi,edi
   14004e4e8:	xchg   edi,eax
   14004e4e9:	push   rsi
   14004e4ea:	add    edi,edi
   14004e4ec:	xchg   esi,eax
   14004e4ed:	push   rsi
   14004e4ee:	add    edi,edi
   14004e4f0:	xchg   esi,eax
   14004e4f1:	push   rsi
   14004e4f2:	add    edi,edi
   14004e4f4:	xchg   ebp,eax
   14004e4f5:	push   rbp
   14004e4f6:	add    edi,edi
   14004e4f8:	xchg   ebp,eax
   14004e4f9:	push   rbp
   14004e4fa:	add    al,0xff
   14004e4fc:	xchg   esp,eax
   14004e4fd:	push   rbp
   14004e4fe:	add    al,0xff
   14004e500:	xchg   esp,eax
   14004e501:	push   rsp
   14004e502:	add    al,0xff
   14004e504:	xchg   ebx,eax
   14004e505:	push   rsp
   14004e506:	add    al,0xff
   14004e508:	xchg   ebx,eax
   14004e509:	push   rsp
   14004e50a:	add    al,0xff
   14004e50c:	xchg   edx,eax
   14004e50d:	push   rbx
   14004e50e:	add    al,0xff
   14004e510:	xchg   edx,eax
   14004e511:	push   rbx
   14004e512:	add    al,0xff
   14004e514:	xchg   ecx,eax
   14004e515:	push   rbx
   14004e516:	add    al,0xff
   14004e518:	xchg   ecx,eax
   14004e519:	push   rdx
   14004e51a:	add    al,0xff
   14004e51c:	nop
   14004e51d:	push   rdx
   14004e51e:	add    al,0xff
   14004e520:	nop
   14004e521:	push   rdx
   14004e522:	add    al,0xff
   14004e524:	(bad)  
   14004e525:	push   rdx
   14004e526:	add    al,0xff
   14004e528:	mov    ss,WORD PTR [rcx+0x4]
   14004e52b:	dec    DWORD PTR [rsi-0x7100fbaf]
   14004e531:	push   rcx
   14004e532:	add    al,0xff
   14004e534:	outs   dx,DWORD PTR ds:[rsi]
   14004e535:	rex.X adc dil,dil
   14004e538:	pop    rdi
   14004e539:	and    dil,dil
   14004e53c:	ret    0x7ea6
   14004e53f:	(bad)  
   14004e540:	fstp   TBYTE PTR [rdi-0x4024006b]
   14004e546:	xchg   ebp,eax
   14004e547:	(bad)  
   14004e548:	fstp   TBYTE PTR [rdi-0x4024006b]
   14004e54e:	xchg   ebp,eax
   14004e54f:	(bad)  
   14004e550:	fstp   TBYTE PTR [rdi-0x4024006b]
   14004e556:	xchg   ebp,eax
   14004e557:	(bad)  
   14004e558:	fstp   TBYTE PTR [rdi-0x4024006b]
   14004e55e:	xchg   ebp,eax
   14004e55f:	(bad)  
   14004e560:	fstp   TBYTE PTR [rdi-0x4024006b]
   14004e566:	xchg   ebp,eax
   14004e567:	(bad)  
   14004e568:	fstp   TBYTE PTR [rdi-0x4024006b]
   14004e56e:	xchg   ebp,eax
   14004e56f:	(bad)  
   14004e570:	fstp   TBYTE PTR [rdi-0x4024006b]
   14004e576:	xchg   ebp,eax
   14004e577:	(bad)  
   14004e578:	fstp   TBYTE PTR [rdi-0x4024006b]
   14004e57e:	xchg   ebp,eax
   14004e57f:	(bad)  
   14004e580:	fstp   TBYTE PTR [rdi-0x4024006b]
   14004e586:	xchg   ebp,eax
   14004e587:	(bad)  
   14004e588:	fstp   TBYTE PTR [rdi-0x4024006b]
   14004e58e:	xchg   ebp,eax
   14004e58f:	inc    edx
   14004e591:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004e592:	jle    0x14004e593
   14004e594:	pop    rdi
   14004e595:	and    dil,dil
   14004e598:	imul   edi,DWORD PTR [rdi],0x487fff11
   14004e59e:	(bad)  
   14004e59f:	(bad)  
   14004e5a0:	jg     0x14004e5ea
   14004e5a2:	(bad)  
   14004e5a3:	(bad)  
   14004e5a4:	jle    0x14004e5ed
   14004e5a6:	(bad)  
   14004e5a7:	(bad)  
   14004e5a8:	jle    0x14004e5f1
   14004e5aa:	(bad)  
   14004e5ab:	(bad)  
   14004e5ac:	jge    0x14004e5f5
   14004e5ae:	(bad)  
   14004e5af:	(bad)  
   14004e5b0:	jge    0x14004e5f9
   14004e5b2:	(bad)  
   14004e5b3:	(bad)  
   14004e5b4:	jl     0x14004e5fc
   14004e5b6:	(bad)  
   14004e5b7:	(bad)  
   14004e5b8:	jnp    0x14004e600
   14004e5ba:	(bad)  
   14004e5bb:	(bad)  
   14004e5bc:	jnp    0x14004e604
   14004e5be:	(bad)  
   14004e5bf:	(bad)  
   14004e5c0:	jnp    0x14004e607
   14004e5c2:	(bad)  
   14004e5c3:	(bad)  
   14004e5c4:	jp     0x14004e60b
   14004e5c6:	(bad)  
   14004e5c7:	(bad)  
   14004e5c8:	jns    0x14004e60f
   14004e5ca:	(bad)  
   14004e5cb:	(bad)  
   14004e5cc:	jns    0x14004e612
   14004e5ce:	(bad)  
   14004e5cf:	(bad)  
   14004e5d0:	js     0x14004e616
   14004e5d2:	(bad)  
   14004e5d3:	(bad)  
   14004e5d4:	js     0x14004e61a
   14004e5d6:	(bad)  
   14004e5d7:	push   QWORD PTR [rdi+0x43]
   14004e5da:	(bad)  
   14004e5db:	push   QWORD PTR [rdi+0x43]
   14004e5de:	(bad)  
   14004e5df:	push   QWORD PTR [rsi+0x43]
   14004e5e2:	(bad)  
   14004e5e3:	push   QWORD PTR [rsi+0x42]
   14004e5e6:	(bad)  
   14004e5e7:	push   QWORD PTR [rbp+0x42]
   14004e5ea:	(bad)  
   14004e5eb:	push   QWORD PTR [rbp+0x42]
   14004e5ee:	(bad)  
   14004e5ef:	push   QWORD PTR [rcx+rax*2+0x7]
   14004e5f3:	push   QWORD PTR [rcx+rax*2+0x7]
   14004e5f7:	push   QWORD PTR [rbx+0x41]
   14004e5fa:	(bad)  
   14004e5fb:	push   QWORD PTR [rbx+0x41]
   14004e5fe:	or     bh,bh
   14004e600:	jb     0x14004e642
   14004e602:	or     bh,bh
   14004e604:	jno    0x14004e646
   14004e606:	or     bh,bh
   14004e608:	jno    0x14004e649
   14004e60a:	or     bh,bh
   14004e60c:	jno    0x14004e64d
   14004e60e:	or     bh,bh
   14004e610:	jo     0x14004e651
   14004e612:	or     bh,bh
   14004e614:	outs   dx,DWORD PTR ds:[rsi]
   14004e615:	(bad)  
   14004e616:	or     bh,bh
   14004e618:	outs   dx,DWORD PTR ds:[rsi]
   14004e619:	ds or  bh,bh
   14004e61c:	outs   dx,BYTE PTR ds:[rsi]
   14004e61d:	ds or  bh,bh
   14004e620:	outs   dx,BYTE PTR ds:[rsi]
   14004e621:	ds or  bh,bh
   14004e624:	ins    DWORD PTR es:[rdi],dx
   14004e625:	cmp    eax,0x3d6dff08
   14004e62a:	or     bh,bh
   14004e62c:	ins    BYTE PTR es:[rdi],dx
   14004e62d:	cmp    eax,0x3c6cff08
   14004e632:	or     bh,bh
   14004e634:	imul   edi,DWORD PTR [rax+rcx*1],0xffffffff
   14004e638:	imul   edi,DWORD PTR [rax+rcx*1],0xffffffff
   14004e63c:	push   0x3c
   14004e63e:	or     edi,edi
   14004e640:	push   0x3b
   14004e642:	or     edi,edi
   14004e644:	imul   edi,DWORD PTR [rbx],0xff09
	...
   14004e686:	add    BYTE PTR [rax],al
   14004e688:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004e689:	pop    rsi
   14004e68a:	add    bh,bh
   14004e68c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004e68d:	pop    rsi
   14004e68e:	add    bh,bh
   14004e690:	movabs ds:0xa2ff025da2ff025d,eax
   14004e699:	pop    rbp
   14004e69a:	add    bh,bh
   14004e69c:	movabs eax,ds:0xa0ff025ca1ff025d
   14004e6a5:	pop    rsp
   14004e6a6:	add    bh,bh
   14004e6a8:	movabs al,ds:0x9fff025b9fff025c
   14004e6b1:	pop    rbx
   14004e6b2:	add    bh,bh
   14004e6b4:	sahf   
   14004e6b5:	pop    rbx
   14004e6b6:	add    bh,bh
   14004e6b8:	sahf   
   14004e6b9:	pop    rdx
   14004e6ba:	add    bh,bh
   14004e6bc:	popf   
   14004e6bd:	pop    rdx
   14004e6be:	add    edi,edi
   14004e6c0:	popf   
   14004e6c1:	pop    rdx
   14004e6c2:	add    edi,edi
   14004e6c4:	pushf  
   14004e6c5:	pop    rcx
   14004e6c6:	add    edi,edi
   14004e6c8:	pushf  
   14004e6c9:	pop    rcx
   14004e6ca:	add    edi,edi
   14004e6cc:	fwait
   14004e6cd:	pop    rcx
   14004e6ce:	add    edi,edi
   14004e6d0:	fwait
   14004e6d1:	pop    rax
   14004e6d2:	add    edi,edi
   14004e6d4:	(bad)  
   14004e6d5:	pop    rax
   14004e6d6:	add    edi,edi
   14004e6d8:	(bad)  
   14004e6d9:	pop    rax
   14004e6da:	add    edi,edi
   14004e6dc:	cdq    
   14004e6dd:	push   rdi
   14004e6de:	add    edi,edi
   14004e6e0:	cwde   
   14004e6e1:	push   rdi
   14004e6e2:	add    edi,edi
   14004e6e4:	cwde   
   14004e6e5:	push   rdi
   14004e6e6:	add    edi,edi
   14004e6e8:	cwde   
   14004e6e9:	push   rdi
   14004e6ea:	add    edi,edi
   14004e6ec:	xchg   edi,eax
   14004e6ed:	push   rsi
   14004e6ee:	add    edi,edi
   14004e6f0:	xchg   esi,eax
   14004e6f1:	push   rsi
   14004e6f2:	add    edi,edi
   14004e6f4:	xchg   esi,eax
   14004e6f5:	push   rsi
   14004e6f6:	add    edi,edi
   14004e6f8:	xchg   ebp,eax
   14004e6f9:	push   rbp
   14004e6fa:	add    edi,edi
   14004e6fc:	xchg   ebp,eax
   14004e6fd:	push   rbp
   14004e6fe:	add    al,0xff
   14004e700:	xchg   esp,eax
   14004e701:	push   rbp
   14004e702:	add    al,0xff
   14004e704:	xchg   esp,eax
   14004e705:	push   rsp
   14004e706:	add    al,0xff
   14004e708:	xchg   ebx,eax
   14004e709:	push   rsp
   14004e70a:	add    al,0xff
   14004e70c:	xchg   ebx,eax
   14004e70d:	push   rsp
   14004e70e:	add    al,0xff
   14004e710:	xchg   edx,eax
   14004e711:	push   rbx
   14004e712:	add    al,0xff
   14004e714:	xchg   edx,eax
   14004e715:	push   rbx
   14004e716:	add    al,0xff
   14004e718:	xchg   ecx,eax
   14004e719:	push   rbx
   14004e71a:	add    al,0xff
   14004e71c:	xchg   ecx,eax
   14004e71d:	push   rdx
   14004e71e:	add    al,0xff
   14004e720:	nop
   14004e721:	push   rdx
   14004e722:	add    al,0xff
   14004e724:	nop
   14004e725:	push   rdx
   14004e726:	add    al,0xff
   14004e728:	(bad)  
   14004e729:	push   rdx
   14004e72a:	add    al,0xff
   14004e72c:	mov    ss,WORD PTR [rcx+0x4]
   14004e72f:	(bad)  
   14004e730:	jns    0x14004e77a
   14004e732:	or     al,0xff
   14004e734:	push   rdi
   14004e735:	cmp    BYTE PTR [rcx],bl
   14004e737:	jmp    FWORD PTR [rdx-0x24009873]
   14004e73d:	rcl    BYTE PTR [rsi-0x693f2401],0xff
   14004e744:	fcmovnb st,st(0)
   14004e746:	xchg   esi,eax
   14004e747:	(bad)  
   14004e748:	fcmovnb st,st(0)
   14004e74a:	xchg   esi,eax
   14004e74b:	(bad)  
   14004e74c:	fcmovnb st,st(0)
   14004e74e:	xchg   esi,eax
   14004e74f:	(bad)  
   14004e750:	fcmovnb st,st(0)
   14004e752:	xchg   esi,eax
   14004e753:	(bad)  
   14004e754:	fcmovnb st,st(0)
   14004e756:	xchg   esi,eax
   14004e757:	(bad)  
   14004e758:	fcmovnb st,st(0)
   14004e75a:	xchg   esi,eax
   14004e75b:	(bad)  
   14004e75c:	fcmovnb st,st(0)
   14004e75e:	xchg   esi,eax
   14004e75f:	(bad)  
   14004e760:	fcmovnb st,st(0)
   14004e762:	xchg   esi,eax
   14004e763:	(bad)  
   14004e764:	fcmovnb st,st(0)
   14004e766:	xchg   esi,eax
   14004e767:	(bad)  
   14004e768:	fcmovnb st,st(0)
   14004e76a:	xchg   esi,eax
   14004e76b:	(bad)  
   14004e76c:	fcmovnb st,st(0)
   14004e76e:	xchg   esi,eax
   14004e76f:	(bad)  
   14004e770:	fcmovnb st,st(0)
   14004e772:	xchg   esi,eax
   14004e773:	(bad)  
   14004e774:	fcmovnb st,st(0)
   14004e776:	xchg   esi,eax
   14004e777:	(bad)  
   14004e778:	fcmovnb st,st(0)
   14004e77a:	xchg   esi,eax
   14004e77b:	(bad)  
   14004e77c:	fcmovnb st,st(0)
   14004e77e:	xchg   esi,eax
   14004e77f:	(bad)  
   14004e780:	fcmovnb st,st(0)
   14004e782:	xchg   esi,eax
   14004e783:	(bad)  
   14004e784:	fcmovnb st,st(0)
   14004e786:	xchg   esi,eax
   14004e787:	(bad)  
   14004e788:	fcmovnb st,st(0)
   14004e78a:	xchg   esi,eax
   14004e78b:	(bad)  
   14004e78c:	fcmovnb st,st(0)
   14004e78e:	xchg   esi,eax
   14004e78f:	(bad)  
   14004e790:	fcmovnb st,st(0)
   14004e792:	xchg   esi,eax
   14004e793:	jmp    FWORD PTR [rdx+0x57ff678d]
   14004e799:	cmp    BYTE PTR [rcx],bl
   14004e79b:	push   QWORD PTR [rax+0x42]
   14004e79e:	or     eax,0x6487fff
   14004e7a3:	(bad)  
   14004e7a4:	jg     0x14004e7ee
   14004e7a6:	(bad)  
   14004e7a7:	(bad)  
   14004e7a8:	jle    0x14004e7f1
   14004e7aa:	(bad)  
   14004e7ab:	(bad)  
   14004e7ac:	jle    0x14004e7f5
   14004e7ae:	(bad)  
   14004e7af:	(bad)  
   14004e7b0:	jge    0x14004e7f9
   14004e7b2:	(bad)  
   14004e7b3:	(bad)  
   14004e7b4:	jge    0x14004e7fd
   14004e7b6:	(bad)  
   14004e7b7:	(bad)  
   14004e7b8:	jl     0x14004e800
   14004e7ba:	(bad)  
   14004e7bb:	(bad)  
   14004e7bc:	jnp    0x14004e804
   14004e7be:	(bad)  
   14004e7bf:	(bad)  
   14004e7c0:	jnp    0x14004e808
   14004e7c2:	(bad)  
   14004e7c3:	(bad)  
   14004e7c4:	jnp    0x14004e80b
   14004e7c6:	(bad)  
   14004e7c7:	(bad)  
   14004e7c8:	jp     0x14004e80f
   14004e7ca:	(bad)  
   14004e7cb:	(bad)  
   14004e7cc:	jns    0x14004e813
   14004e7ce:	(bad)  
   14004e7cf:	(bad)  
   14004e7d0:	jns    0x14004e816
   14004e7d2:	(bad)  
   14004e7d3:	(bad)  
   14004e7d4:	js     0x14004e81a
   14004e7d6:	(bad)  
   14004e7d7:	(bad)  
   14004e7d8:	js     0x14004e81e
   14004e7da:	(bad)  
   14004e7db:	push   QWORD PTR [rdi+0x43]
   14004e7de:	(bad)  
   14004e7df:	push   QWORD PTR [rdi+0x43]
   14004e7e2:	(bad)  
   14004e7e3:	push   QWORD PTR [rsi+0x43]
   14004e7e6:	(bad)  
   14004e7e7:	push   QWORD PTR [rsi+0x42]
   14004e7ea:	(bad)  
   14004e7eb:	push   QWORD PTR [rbp+0x42]
   14004e7ee:	(bad)  
   14004e7ef:	push   QWORD PTR [rbp+0x42]
   14004e7f2:	(bad)  
   14004e7f3:	push   QWORD PTR [rcx+rax*2+0x7]
   14004e7f7:	push   QWORD PTR [rcx+rax*2+0x7]
   14004e7fb:	push   QWORD PTR [rbx+0x41]
   14004e7fe:	(bad)  
   14004e7ff:	push   QWORD PTR [rbx+0x41]
   14004e802:	or     bh,bh
   14004e804:	jb     0x14004e846
   14004e806:	or     bh,bh
   14004e808:	jno    0x14004e84a
   14004e80a:	or     bh,bh
   14004e80c:	jno    0x14004e84d
   14004e80e:	or     bh,bh
   14004e810:	jno    0x14004e851
   14004e812:	or     bh,bh
   14004e814:	jo     0x14004e855
   14004e816:	or     bh,bh
   14004e818:	outs   dx,DWORD PTR ds:[rsi]
   14004e819:	(bad)  
   14004e81a:	or     bh,bh
   14004e81c:	outs   dx,DWORD PTR ds:[rsi]
   14004e81d:	ds or  bh,bh
   14004e820:	outs   dx,BYTE PTR ds:[rsi]
   14004e821:	ds or  bh,bh
   14004e824:	outs   dx,BYTE PTR ds:[rsi]
   14004e825:	ds or  bh,bh
   14004e828:	ins    DWORD PTR es:[rdi],dx
   14004e829:	cmp    eax,0x3d6dff08
   14004e82e:	or     bh,bh
   14004e830:	ins    BYTE PTR es:[rdi],dx
   14004e831:	cmp    eax,0x3c6cff08
   14004e836:	or     bh,bh
   14004e838:	imul   edi,DWORD PTR [rax+rcx*1],0xffffffff
   14004e83c:	imul   edi,DWORD PTR [rax+rcx*1],0xffffffff
   14004e840:	push   0x3c
   14004e842:	or     edi,edi
   14004e844:	push   0x3b
   14004e846:	or     edi,edi
	...
   14004e888:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004e889:	pop    rsi
   14004e88a:	add    bh,bh
   14004e88c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004e88d:	pop    rsi
   14004e88e:	add    bh,bh
   14004e890:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004e891:	pop    rsi
   14004e892:	add    bh,bh
   14004e894:	movabs ds:0xa2ff025da2ff025d,eax
   14004e89d:	pop    rbp
   14004e89e:	add    bh,bh
   14004e8a0:	movabs eax,ds:0xa0ff025ca1ff025d
   14004e8a9:	pop    rsp
   14004e8aa:	add    bh,bh
   14004e8ac:	movabs al,ds:0x9fff025b9fff025c
   14004e8b5:	pop    rbx
   14004e8b6:	add    bh,bh
   14004e8b8:	sahf   
   14004e8b9:	pop    rbx
   14004e8ba:	add    bh,bh
   14004e8bc:	sahf   
   14004e8bd:	pop    rdx
   14004e8be:	add    bh,bh
   14004e8c0:	popf   
   14004e8c1:	pop    rdx
   14004e8c2:	add    edi,edi
   14004e8c4:	popf   
   14004e8c5:	pop    rdx
   14004e8c6:	add    edi,edi
   14004e8c8:	pushf  
   14004e8c9:	pop    rcx
   14004e8ca:	add    edi,edi
   14004e8cc:	pushf  
   14004e8cd:	pop    rcx
   14004e8ce:	add    edi,edi
   14004e8d0:	fwait
   14004e8d1:	pop    rcx
   14004e8d2:	add    edi,edi
   14004e8d4:	fwait
   14004e8d5:	pop    rax
   14004e8d6:	add    edi,edi
   14004e8d8:	(bad)  
   14004e8d9:	pop    rax
   14004e8da:	add    edi,edi
   14004e8dc:	(bad)  
   14004e8dd:	pop    rax
   14004e8de:	add    edi,edi
   14004e8e0:	cdq    
   14004e8e1:	push   rdi
   14004e8e2:	add    edi,edi
   14004e8e4:	cwde   
   14004e8e5:	push   rdi
   14004e8e6:	add    edi,edi
   14004e8e8:	cwde   
   14004e8e9:	push   rdi
   14004e8ea:	add    edi,edi
   14004e8ec:	cwde   
   14004e8ed:	push   rdi
   14004e8ee:	add    edi,edi
   14004e8f0:	xchg   edi,eax
   14004e8f1:	push   rsi
   14004e8f2:	add    edi,edi
   14004e8f4:	xchg   esi,eax
   14004e8f5:	push   rsi
   14004e8f6:	add    edi,edi
   14004e8f8:	xchg   esi,eax
   14004e8f9:	push   rsi
   14004e8fa:	add    edi,edi
   14004e8fc:	xchg   ebp,eax
   14004e8fd:	push   rbp
   14004e8fe:	add    edi,edi
   14004e900:	xchg   ebp,eax
   14004e901:	push   rbp
   14004e902:	add    al,0xff
   14004e904:	xchg   esp,eax
   14004e905:	push   rbp
   14004e906:	add    al,0xff
   14004e908:	xchg   esp,eax
   14004e909:	push   rsp
   14004e90a:	add    al,0xff
   14004e90c:	xchg   ebx,eax
   14004e90d:	push   rsp
   14004e90e:	add    al,0xff
   14004e910:	xchg   ebx,eax
   14004e911:	push   rsp
   14004e912:	add    al,0xff
   14004e914:	xchg   edx,eax
   14004e915:	push   rbx
   14004e916:	add    al,0xff
   14004e918:	xchg   edx,eax
   14004e919:	push   rbx
   14004e91a:	add    al,0xff
   14004e91c:	xchg   ecx,eax
   14004e91d:	push   rbx
   14004e91e:	add    al,0xff
   14004e920:	xchg   ecx,eax
   14004e921:	push   rdx
   14004e922:	add    al,0xff
   14004e924:	nop
   14004e925:	push   rdx
   14004e926:	add    al,0xff
   14004e928:	nop
   14004e929:	push   rdx
   14004e92a:	add    al,0xff
   14004e92c:	or     DWORD PTR [rbx+0x9],0x193958ff
   14004e933:	call   FWORD PTR [rdx-0x2300a783]
   14004e939:	rcl    DWORD PTR [rdi-0x683e2301],0xff
   14004e940:	fadd   st(1),st
   14004e942:	xchg   edi,eax
   14004e943:	(bad)  
   14004e944:	fadd   st(1),st
   14004e946:	xchg   edi,eax
   14004e947:	(bad)  
   14004e948:	fadd   st(1),st
   14004e94a:	xchg   edi,eax
   14004e94b:	(bad)  
   14004e94c:	fadd   st(1),st
   14004e94e:	xchg   edi,eax
   14004e94f:	(bad)  
   14004e950:	fadd   st(1),st
   14004e952:	xchg   edi,eax
   14004e953:	(bad)  
   14004e954:	fadd   st(1),st
   14004e956:	xchg   edi,eax
   14004e957:	(bad)  
   14004e958:	fadd   st(1),st
   14004e95a:	xchg   edi,eax
   14004e95b:	(bad)  
   14004e95c:	fadd   st(1),st
   14004e95e:	xchg   edi,eax
   14004e95f:	(bad)  
   14004e960:	fadd   st(1),st
   14004e962:	xchg   edi,eax
   14004e963:	(bad)  
   14004e964:	fadd   st(1),st
   14004e966:	xchg   edi,eax
   14004e967:	(bad)  
   14004e968:	fadd   st(1),st
   14004e96a:	xchg   edi,eax
   14004e96b:	(bad)  
   14004e96c:	fadd   st(1),st
   14004e96e:	xchg   edi,eax
   14004e96f:	(bad)  
   14004e970:	fadd   st(1),st
   14004e972:	xchg   edi,eax
   14004e973:	(bad)  
   14004e974:	fadd   st(1),st
   14004e976:	xchg   edi,eax
   14004e977:	(bad)  
   14004e978:	fadd   st(1),st
   14004e97a:	xchg   edi,eax
   14004e97b:	(bad)  
   14004e97c:	fadd   st(1),st
   14004e97e:	xchg   edi,eax
   14004e97f:	(bad)  
   14004e980:	fadd   st(1),st
   14004e982:	xchg   edi,eax
   14004e983:	(bad)  
   14004e984:	fadd   st(1),st
   14004e986:	xchg   edi,eax
   14004e987:	(bad)  
   14004e988:	fadd   st(1),st
   14004e98a:	xchg   edi,eax
   14004e98b:	(bad)  
   14004e98c:	fadd   st(1),st
   14004e98e:	xchg   edi,eax
   14004e98f:	(bad)  
   14004e990:	fadd   st(1),st
   14004e992:	xchg   edi,eax
   14004e993:	(bad)  
   14004e994:	fadd   st(1),st
   14004e996:	xchg   edi,eax
   14004e997:	call   FWORD PTR [rdx+0x58ff587d]
   14004e99d:	cmp    DWORD PTR [rcx],ebx
   14004e99f:	push   QWORD PTR [rsi+0x44]
   14004e9a2:	or     edi,edi
   14004e9a4:	jg     0x14004e9ee
   14004e9a6:	(bad)  
   14004e9a7:	(bad)  
   14004e9a8:	jg     0x14004e9f2
   14004e9aa:	(bad)  
   14004e9ab:	(bad)  
   14004e9ac:	jle    0x14004e9f5
   14004e9ae:	(bad)  
   14004e9af:	(bad)  
   14004e9b0:	jle    0x14004e9f9
   14004e9b2:	(bad)  
   14004e9b3:	(bad)  
   14004e9b4:	jge    0x14004e9fd
   14004e9b6:	(bad)  
   14004e9b7:	(bad)  
   14004e9b8:	jge    0x14004ea01
   14004e9ba:	(bad)  
   14004e9bb:	(bad)  
   14004e9bc:	jl     0x14004ea04
   14004e9be:	(bad)  
   14004e9bf:	(bad)  
   14004e9c0:	jnp    0x14004ea08
   14004e9c2:	(bad)  
   14004e9c3:	(bad)  
   14004e9c4:	jnp    0x14004ea0c
   14004e9c6:	(bad)  
   14004e9c7:	(bad)  
   14004e9c8:	jnp    0x14004ea0f
   14004e9ca:	(bad)  
   14004e9cb:	(bad)  
   14004e9cc:	jp     0x14004ea13
   14004e9ce:	(bad)  
   14004e9cf:	(bad)  
   14004e9d0:	jns    0x14004ea17
   14004e9d2:	(bad)  
   14004e9d3:	(bad)  
   14004e9d4:	jns    0x14004ea1a
   14004e9d6:	(bad)  
   14004e9d7:	(bad)  
   14004e9d8:	js     0x14004ea1e
   14004e9da:	(bad)  
   14004e9db:	(bad)  
   14004e9dc:	js     0x14004ea22
   14004e9de:	(bad)  
   14004e9df:	push   QWORD PTR [rdi+0x43]
   14004e9e2:	(bad)  
   14004e9e3:	push   QWORD PTR [rdi+0x43]
   14004e9e6:	(bad)  
   14004e9e7:	push   QWORD PTR [rsi+0x43]
   14004e9ea:	(bad)  
   14004e9eb:	push   QWORD PTR [rsi+0x42]
   14004e9ee:	(bad)  
   14004e9ef:	push   QWORD PTR [rbp+0x42]
   14004e9f2:	(bad)  
   14004e9f3:	push   QWORD PTR [rbp+0x42]
   14004e9f6:	(bad)  
   14004e9f7:	push   QWORD PTR [rcx+rax*2+0x7]
   14004e9fb:	push   QWORD PTR [rcx+rax*2+0x7]
   14004e9ff:	push   QWORD PTR [rbx+0x41]
   14004ea02:	(bad)  
   14004ea03:	push   QWORD PTR [rbx+0x41]
   14004ea06:	or     bh,bh
   14004ea08:	jb     0x14004ea4a
   14004ea0a:	or     bh,bh
   14004ea0c:	jno    0x14004ea4e
   14004ea0e:	or     bh,bh
   14004ea10:	jno    0x14004ea51
   14004ea12:	or     bh,bh
   14004ea14:	jno    0x14004ea55
   14004ea16:	or     bh,bh
   14004ea18:	jo     0x14004ea59
   14004ea1a:	or     bh,bh
   14004ea1c:	outs   dx,DWORD PTR ds:[rsi]
   14004ea1d:	(bad)  
   14004ea1e:	or     bh,bh
   14004ea20:	outs   dx,DWORD PTR ds:[rsi]
   14004ea21:	ds or  bh,bh
   14004ea24:	outs   dx,BYTE PTR ds:[rsi]
   14004ea25:	ds or  bh,bh
   14004ea28:	outs   dx,BYTE PTR ds:[rsi]
   14004ea29:	ds or  bh,bh
   14004ea2c:	ins    DWORD PTR es:[rdi],dx
   14004ea2d:	cmp    eax,0x3d6dff08
   14004ea32:	or     bh,bh
   14004ea34:	ins    BYTE PTR es:[rdi],dx
   14004ea35:	cmp    eax,0x3c6cff08
   14004ea3a:	or     bh,bh
   14004ea3c:	imul   edi,DWORD PTR [rax+rcx*1],0xffffffff
   14004ea40:	imul   edi,DWORD PTR [rax+rcx*1],0xffffffff
   14004ea44:	push   0x3c
   14004ea46:	or     edi,edi
	...
   14004ea88:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004ea89:	pop    rdi
   14004ea8a:	add    bh,bh
   14004ea8c:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004ea8d:	pop    rsi
   14004ea8e:	add    bh,bh
   14004ea90:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004ea91:	pop    rsi
   14004ea92:	add    bh,bh
   14004ea94:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004ea95:	pop    rsi
   14004ea96:	add    bh,bh
   14004ea98:	movabs ds:0xa2ff025da2ff025d,eax
   14004eaa1:	pop    rbp
   14004eaa2:	add    bh,bh
   14004eaa4:	movabs eax,ds:0xa0ff025ca1ff025d
   14004eaad:	pop    rsp
   14004eaae:	add    bh,bh
   14004eab0:	movabs al,ds:0x9fff025b9fff025c
   14004eab9:	pop    rbx
   14004eaba:	add    bh,bh
   14004eabc:	sahf   
   14004eabd:	pop    rbx
   14004eabe:	add    bh,bh
   14004eac0:	sahf   
   14004eac1:	pop    rdx
   14004eac2:	add    bh,bh
   14004eac4:	popf   
   14004eac5:	pop    rdx
   14004eac6:	add    edi,edi
   14004eac8:	popf   
   14004eac9:	pop    rdx
   14004eaca:	add    edi,edi
   14004eacc:	pushf  
   14004eacd:	pop    rcx
   14004eace:	add    edi,edi
   14004ead0:	pushf  
   14004ead1:	pop    rcx
   14004ead2:	add    edi,edi
   14004ead4:	fwait
   14004ead5:	pop    rcx
   14004ead6:	add    edi,edi
   14004ead8:	fwait
   14004ead9:	pop    rax
   14004eada:	add    edi,edi
   14004eadc:	(bad)  
   14004eadd:	pop    rax
   14004eade:	add    edi,edi
   14004eae0:	(bad)  
   14004eae1:	pop    rax
   14004eae2:	add    edi,edi
   14004eae4:	cdq    
   14004eae5:	push   rdi
   14004eae6:	add    edi,edi
   14004eae8:	cwde   
   14004eae9:	push   rdi
   14004eaea:	add    edi,edi
   14004eaec:	cwde   
   14004eaed:	push   rdi
   14004eaee:	add    edi,edi
   14004eaf0:	cwde   
   14004eaf1:	push   rdi
   14004eaf2:	add    edi,edi
   14004eaf4:	xchg   edi,eax
   14004eaf5:	push   rsi
   14004eaf6:	add    edi,edi
   14004eaf8:	xchg   esi,eax
   14004eaf9:	push   rsi
   14004eafa:	add    edi,edi
   14004eafc:	xchg   esi,eax
   14004eafd:	push   rsi
   14004eafe:	add    edi,edi
   14004eb00:	xchg   ebp,eax
   14004eb01:	push   rbp
   14004eb02:	add    edi,edi
   14004eb04:	xchg   ebp,eax
   14004eb05:	push   rbp
   14004eb06:	add    al,0xff
   14004eb08:	xchg   esp,eax
   14004eb09:	push   rbp
   14004eb0a:	add    al,0xff
   14004eb0c:	xchg   esp,eax
   14004eb0d:	push   rsp
   14004eb0e:	add    al,0xff
   14004eb10:	xchg   ebx,eax
   14004eb11:	push   rsp
   14004eb12:	add    al,0xff
   14004eb14:	xchg   ebx,eax
   14004eb15:	push   rsp
   14004eb16:	add    al,0xff
   14004eb18:	xchg   edx,eax
   14004eb19:	push   rbx
   14004eb1a:	add    al,0xff
   14004eb1c:	xchg   edx,eax
   14004eb1d:	push   rbx
   14004eb1e:	add    al,0xff
   14004eb20:	xchg   ecx,eax
   14004eb21:	push   rbx
   14004eb22:	add    al,0xff
   14004eb24:	xchg   ecx,eax
   14004eb25:	push   rdx
   14004eb26:	add    al,0xff
   14004eb28:	xchg   BYTE PTR [rbp+0x8],cl
   14004eb2b:	call   FWORD PTR [rbx+rdi*1+0x18]
   14004eb2f:	dec    DWORD PTR [rdx-0x2300b694]
   14004eb35:	ret    0xff98
   14004eb38:	fadd   st(2),st
   14004eb3a:	cwde   
   14004eb3b:	(bad)  
   14004eb3c:	fadd   st(2),st
   14004eb3e:	cwde   
   14004eb3f:	(bad)  
   14004eb40:	fadd   st(2),st
   14004eb42:	cwde   
   14004eb43:	(bad)  
   14004eb44:	fadd   st(2),st
   14004eb46:	cwde   
   14004eb47:	(bad)  
   14004eb48:	fadd   st(2),st
   14004eb4a:	cwde   
   14004eb4b:	(bad)  
   14004eb4c:	fadd   st(2),st
   14004eb4e:	cwde   
   14004eb4f:	(bad)  
   14004eb50:	fadd   st(2),st
   14004eb52:	cwde   
   14004eb53:	(bad)  
   14004eb54:	fadd   st(2),st
   14004eb56:	cwde   
   14004eb57:	(bad)  
   14004eb58:	fadd   st(2),st
   14004eb5a:	cwde   
   14004eb5b:	(bad)  
   14004eb5c:	fadd   st(2),st
   14004eb5e:	cwde   
   14004eb5f:	(bad)  
   14004eb60:	fadd   st(2),st
   14004eb62:	cwde   
   14004eb63:	(bad)  
   14004eb64:	fadd   st(2),st
   14004eb66:	cwde   
   14004eb67:	(bad)  
   14004eb68:	fadd   st(2),st
   14004eb6a:	cwde   
   14004eb6b:	(bad)  
   14004eb6c:	fadd   st(2),st
   14004eb6e:	cwde   
   14004eb6f:	(bad)  
   14004eb70:	fadd   st(2),st
   14004eb72:	cwde   
   14004eb73:	(bad)  
   14004eb74:	fadd   st(2),st
   14004eb76:	cwde   
   14004eb77:	(bad)  
   14004eb78:	fadd   st(2),st
   14004eb7a:	cwde   
   14004eb7b:	(bad)  
   14004eb7c:	fadd   st(2),st
   14004eb7e:	cwde   
   14004eb7f:	(bad)  
   14004eb80:	fadd   st(2),st
   14004eb82:	cwde   
   14004eb83:	(bad)  
   14004eb84:	fadd   st(2),st
   14004eb86:	cwde   
   14004eb87:	(bad)  
   14004eb88:	fadd   st(2),st
   14004eb8a:	cwde   
   14004eb8b:	(bad)  
   14004eb8c:	fadd   st(2),st
   14004eb8e:	cwde   
   14004eb8f:	(bad)  
   14004eb90:	fadd   st(2),st
   14004eb92:	cwde   
   14004eb93:	(bad)  
   14004eb94:	fadd   st(2),st
   14004eb96:	cwde   
   14004eb97:	(bad)  
   14004eb98:	fadd   st(2),st
   14004eb9a:	cwde   
   14004eb9b:	dec    DWORD PTR [rdx+0x5bff496c]
   14004eba1:	cmp    bl,BYTE PTR [rcx]
   14004eba3:	(bad)  
   14004eba4:	js     0x14004ebeb
   14004eba6:	or     bh,bh
   14004eba8:	jg     0x14004ebf2
   14004ebaa:	(bad)  
   14004ebab:	(bad)  
   14004ebac:	jg     0x14004ebf6
   14004ebae:	(bad)  
   14004ebaf:	(bad)  
   14004ebb0:	jle    0x14004ebf9
   14004ebb2:	(bad)  
   14004ebb3:	(bad)  
   14004ebb4:	jle    0x14004ebfd
   14004ebb6:	(bad)  
   14004ebb7:	(bad)  
   14004ebb8:	jge    0x14004ec01
   14004ebba:	(bad)  
   14004ebbb:	(bad)  
   14004ebbc:	jge    0x14004ec05
   14004ebbe:	(bad)  
   14004ebbf:	(bad)  
   14004ebc0:	jl     0x14004ec08
   14004ebc2:	(bad)  
   14004ebc3:	(bad)  
   14004ebc4:	jnp    0x14004ec0c
   14004ebc6:	(bad)  
   14004ebc7:	(bad)  
   14004ebc8:	jnp    0x14004ec10
   14004ebca:	(bad)  
   14004ebcb:	(bad)  
   14004ebcc:	jnp    0x14004ec13
   14004ebce:	(bad)  
   14004ebcf:	(bad)  
   14004ebd0:	jp     0x14004ec17
   14004ebd2:	(bad)  
   14004ebd3:	(bad)  
   14004ebd4:	jns    0x14004ec1b
   14004ebd6:	(bad)  
   14004ebd7:	(bad)  
   14004ebd8:	jns    0x14004ec1e
   14004ebda:	(bad)  
   14004ebdb:	(bad)  
   14004ebdc:	js     0x14004ec22
   14004ebde:	(bad)  
   14004ebdf:	(bad)  
   14004ebe0:	js     0x14004ec26
   14004ebe2:	(bad)  
   14004ebe3:	push   QWORD PTR [rdi+0x43]
   14004ebe6:	(bad)  
   14004ebe7:	push   QWORD PTR [rdi+0x43]
   14004ebea:	(bad)  
   14004ebeb:	push   QWORD PTR [rsi+0x43]
   14004ebee:	(bad)  
   14004ebef:	push   QWORD PTR [rsi+0x42]
   14004ebf2:	(bad)  
   14004ebf3:	push   QWORD PTR [rbp+0x42]
   14004ebf6:	(bad)  
   14004ebf7:	push   QWORD PTR [rbp+0x42]
   14004ebfa:	(bad)  
   14004ebfb:	push   QWORD PTR [rcx+rax*2+0x7]
   14004ebff:	push   QWORD PTR [rcx+rax*2+0x7]
   14004ec03:	push   QWORD PTR [rbx+0x41]
   14004ec06:	(bad)  
   14004ec07:	push   QWORD PTR [rbx+0x41]
   14004ec0a:	or     bh,bh
   14004ec0c:	jb     0x14004ec4e
   14004ec0e:	or     bh,bh
   14004ec10:	jno    0x14004ec52
   14004ec12:	or     bh,bh
   14004ec14:	jno    0x14004ec55
   14004ec16:	or     bh,bh
   14004ec18:	jno    0x14004ec59
   14004ec1a:	or     bh,bh
   14004ec1c:	jo     0x14004ec5d
   14004ec1e:	or     bh,bh
   14004ec20:	outs   dx,DWORD PTR ds:[rsi]
   14004ec21:	(bad)  
   14004ec22:	or     bh,bh
   14004ec24:	outs   dx,DWORD PTR ds:[rsi]
   14004ec25:	ds or  bh,bh
   14004ec28:	outs   dx,BYTE PTR ds:[rsi]
   14004ec29:	ds or  bh,bh
   14004ec2c:	outs   dx,BYTE PTR ds:[rsi]
   14004ec2d:	ds or  bh,bh
   14004ec30:	ins    DWORD PTR es:[rdi],dx
   14004ec31:	cmp    eax,0x3d6dff08
   14004ec36:	or     bh,bh
   14004ec38:	ins    BYTE PTR es:[rdi],dx
   14004ec39:	cmp    eax,0x3c6cff08
   14004ec3e:	or     bh,bh
   14004ec40:	imul   edi,DWORD PTR [rax+rcx*1],0xffffffff
   14004ec44:	imul   edi,DWORD PTR [rax+rcx*1],0xffffffff
	...
   14004ec88:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004ec89:	pop    rdi
   14004ec8a:	add    bh,bh
   14004ec8c:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004ec8d:	pop    rdi
   14004ec8e:	add    bh,bh
   14004ec90:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004ec91:	pop    rsi
   14004ec92:	add    bh,bh
   14004ec94:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004ec95:	pop    rsi
   14004ec96:	add    bh,bh
   14004ec98:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004ec99:	pop    rsi
   14004ec9a:	add    bh,bh
   14004ec9c:	movabs ds:0xa2ff025da2ff025d,eax
   14004eca5:	pop    rbp
   14004eca6:	add    bh,bh
   14004eca8:	movabs eax,ds:0xa0ff025ca1ff025d
   14004ecb1:	pop    rsp
   14004ecb2:	add    bh,bh
   14004ecb4:	movabs al,ds:0x9fff025b9fff025c
   14004ecbd:	pop    rbx
   14004ecbe:	add    bh,bh
   14004ecc0:	sahf   
   14004ecc1:	pop    rbx
   14004ecc2:	add    bh,bh
   14004ecc4:	sahf   
   14004ecc5:	pop    rdx
   14004ecc6:	add    bh,bh
   14004ecc8:	popf   
   14004ecc9:	pop    rdx
   14004ecca:	add    edi,edi
   14004eccc:	popf   
   14004eccd:	pop    rdx
   14004ecce:	add    edi,edi
   14004ecd0:	pushf  
   14004ecd1:	pop    rcx
   14004ecd2:	add    edi,edi
   14004ecd4:	pushf  
   14004ecd5:	pop    rcx
   14004ecd6:	add    edi,edi
   14004ecd8:	fwait
   14004ecd9:	pop    rcx
   14004ecda:	add    edi,edi
   14004ecdc:	fwait
   14004ecdd:	pop    rax
   14004ecde:	add    edi,edi
   14004ece0:	(bad)  
   14004ece1:	pop    rax
   14004ece2:	add    edi,edi
   14004ece4:	(bad)  
   14004ece5:	pop    rax
   14004ece6:	add    edi,edi
   14004ece8:	cdq    
   14004ece9:	push   rdi
   14004ecea:	add    edi,edi
   14004ecec:	cwde   
   14004eced:	push   rdi
   14004ecee:	add    edi,edi
   14004ecf0:	cwde   
   14004ecf1:	push   rdi
   14004ecf2:	add    edi,edi
   14004ecf4:	cwde   
   14004ecf5:	push   rdi
   14004ecf6:	add    edi,edi
   14004ecf8:	xchg   edi,eax
   14004ecf9:	push   rsi
   14004ecfa:	add    edi,edi
   14004ecfc:	xchg   esi,eax
   14004ecfd:	push   rsi
   14004ecfe:	add    edi,edi
   14004ed00:	xchg   esi,eax
   14004ed01:	push   rsi
   14004ed02:	add    edi,edi
   14004ed04:	xchg   ebp,eax
   14004ed05:	push   rbp
   14004ed06:	add    edi,edi
   14004ed08:	xchg   ebp,eax
   14004ed09:	push   rbp
   14004ed0a:	add    al,0xff
   14004ed0c:	xchg   esp,eax
   14004ed0d:	push   rbp
   14004ed0e:	add    al,0xff
   14004ed10:	xchg   esp,eax
   14004ed11:	push   rsp
   14004ed12:	add    al,0xff
   14004ed14:	xchg   ebx,eax
   14004ed15:	push   rsp
   14004ed16:	add    al,0xff
   14004ed18:	xchg   ebx,eax
   14004ed19:	push   rsp
   14004ed1a:	add    al,0xff
   14004ed1c:	xchg   edx,eax
   14004ed1d:	push   rbx
   14004ed1e:	add    al,0xff
   14004ed20:	xchg   edx,eax
   14004ed21:	push   rbx
   14004ed22:	add    al,0xff
   14004ed24:	mov    ss,WORD PTR [rcx+0x5]
   14004ed27:	jmp    QWORD PTR [rbx+0x3e]
   14004ed2a:	(bad)  
   14004ed2b:	push   QWORD PTR [rdx+0x53]
   14004ed2e:	xor    bh,bh
   14004ed30:	(bad)  
   14004ed31:	mov    edx,0xc2ddff92
   14004ed36:	(bad)  
   14004ed37:	(bad)  
   14004ed38:	ffree  st(2)
   14004ed3a:	(bad)  
   14004ed3b:	(bad)  
   14004ed3c:	ffree  st(2)
   14004ed3e:	(bad)  
   14004ed3f:	(bad)  
   14004ed40:	ffree  st(2)
   14004ed42:	(bad)  
   14004ed43:	(bad)  
   14004ed44:	ffree  st(2)
   14004ed46:	(bad)  
   14004ed47:	(bad)  
   14004ed48:	ffree  st(2)
   14004ed4a:	(bad)  
   14004ed4b:	(bad)  
   14004ed4c:	ffree  st(2)
   14004ed4e:	(bad)  
   14004ed4f:	(bad)  
   14004ed50:	ffree  st(2)
   14004ed52:	(bad)  
   14004ed53:	(bad)  
   14004ed54:	ffree  st(2)
   14004ed56:	(bad)  
   14004ed57:	(bad)  
   14004ed58:	ffree  st(2)
   14004ed5a:	(bad)  
   14004ed5b:	(bad)  
   14004ed5c:	ffree  st(2)
   14004ed5e:	(bad)  
   14004ed5f:	(bad)  
   14004ed60:	ffree  st(2)
   14004ed62:	(bad)  
   14004ed63:	(bad)  
   14004ed64:	ffree  st(2)
   14004ed66:	(bad)  
   14004ed67:	(bad)  
   14004ed68:	ffree  st(2)
   14004ed6a:	(bad)  
   14004ed6b:	(bad)  
   14004ed6c:	ffree  st(2)
   14004ed6e:	(bad)  
   14004ed6f:	(bad)  
   14004ed70:	ffree  st(2)
   14004ed72:	(bad)  
   14004ed73:	(bad)  
   14004ed74:	ffree  st(2)
   14004ed76:	(bad)  
   14004ed77:	(bad)  
   14004ed78:	ffree  st(2)
   14004ed7a:	(bad)  
   14004ed7b:	(bad)  
   14004ed7c:	ffree  st(2)
   14004ed7e:	(bad)  
   14004ed7f:	(bad)  
   14004ed80:	ffree  st(2)
   14004ed82:	(bad)  
   14004ed83:	(bad)  
   14004ed84:	ffree  st(2)
   14004ed86:	(bad)  
   14004ed87:	(bad)  
   14004ed88:	ffree  st(2)
   14004ed8a:	(bad)  
   14004ed8b:	(bad)  
   14004ed8c:	ffree  st(2)
   14004ed8e:	(bad)  
   14004ed8f:	(bad)  
   14004ed90:	ffree  st(2)
   14004ed92:	(bad)  
   14004ed93:	(bad)  
   14004ed94:	ffree  st(2)
   14004ed96:	(bad)  
   14004ed97:	(bad)  
   14004ed98:	ffree  st(2)
   14004ed9a:	(bad)  
   14004ed9b:	call   rbp
   14004ed9d:	mov    edx,0x5372ff92
   14004eda2:	xor    bh,bh
   14004eda4:	(bad)  
   14004eda5:	cmp    eax,0x477dff16
   14004edaa:	(bad)  
   14004edab:	(bad)  
   14004edac:	jg     0x14004edf6
   14004edae:	(bad)  
   14004edaf:	(bad)  
   14004edb0:	jg     0x14004edfa
   14004edb2:	(bad)  
   14004edb3:	(bad)  
   14004edb4:	jle    0x14004edfd
   14004edb6:	(bad)  
   14004edb7:	(bad)  
   14004edb8:	jle    0x14004ee01
   14004edba:	(bad)  
   14004edbb:	(bad)  
   14004edbc:	jge    0x14004ee05
   14004edbe:	(bad)  
   14004edbf:	(bad)  
   14004edc0:	jge    0x14004ee09
   14004edc2:	(bad)  
   14004edc3:	(bad)  
   14004edc4:	jl     0x14004ee0c
   14004edc6:	(bad)  
   14004edc7:	(bad)  
   14004edc8:	jnp    0x14004ee10
   14004edca:	(bad)  
   14004edcb:	(bad)  
   14004edcc:	jnp    0x14004ee14
   14004edce:	(bad)  
   14004edcf:	(bad)  
   14004edd0:	jnp    0x14004ee17
   14004edd2:	(bad)  
   14004edd3:	(bad)  
   14004edd4:	jp     0x14004ee1b
   14004edd6:	(bad)  
   14004edd7:	(bad)  
   14004edd8:	jns    0x14004ee1f
   14004edda:	(bad)  
   14004eddb:	(bad)  
   14004eddc:	jns    0x14004ee22
   14004edde:	(bad)  
   14004eddf:	(bad)  
   14004ede0:	js     0x14004ee26
   14004ede2:	(bad)  
   14004ede3:	(bad)  
   14004ede4:	js     0x14004ee2a
   14004ede6:	(bad)  
   14004ede7:	push   QWORD PTR [rdi+0x43]
   14004edea:	(bad)  
   14004edeb:	push   QWORD PTR [rdi+0x43]
   14004edee:	(bad)  
   14004edef:	push   QWORD PTR [rsi+0x43]
   14004edf2:	(bad)  
   14004edf3:	push   QWORD PTR [rsi+0x42]
   14004edf6:	(bad)  
   14004edf7:	push   QWORD PTR [rbp+0x42]
   14004edfa:	(bad)  
   14004edfb:	push   QWORD PTR [rbp+0x42]
   14004edfe:	(bad)  
   14004edff:	push   QWORD PTR [rcx+rax*2+0x7]
   14004ee03:	push   QWORD PTR [rcx+rax*2+0x7]
   14004ee07:	push   QWORD PTR [rbx+0x41]
   14004ee0a:	(bad)  
   14004ee0b:	push   QWORD PTR [rbx+0x41]
   14004ee0e:	or     bh,bh
   14004ee10:	jb     0x14004ee52
   14004ee12:	or     bh,bh
   14004ee14:	jno    0x14004ee56
   14004ee16:	or     bh,bh
   14004ee18:	jno    0x14004ee59
   14004ee1a:	or     bh,bh
   14004ee1c:	jno    0x14004ee5d
   14004ee1e:	or     bh,bh
   14004ee20:	jo     0x14004ee61
   14004ee22:	or     bh,bh
   14004ee24:	outs   dx,DWORD PTR ds:[rsi]
   14004ee25:	(bad)  
   14004ee26:	or     bh,bh
   14004ee28:	outs   dx,DWORD PTR ds:[rsi]
   14004ee29:	ds or  bh,bh
   14004ee2c:	outs   dx,BYTE PTR ds:[rsi]
   14004ee2d:	ds or  bh,bh
   14004ee30:	outs   dx,BYTE PTR ds:[rsi]
   14004ee31:	ds or  bh,bh
   14004ee34:	ins    DWORD PTR es:[rdi],dx
   14004ee35:	cmp    eax,0x3d6dff08
   14004ee3a:	or     bh,bh
   14004ee3c:	ins    BYTE PTR es:[rdi],dx
   14004ee3d:	cmp    eax,0x3c6cff08
   14004ee42:	or     bh,bh
   14004ee44:	imul   edi,DWORD PTR [rax+rcx*1],0xffffffff
	...
   14004ee88:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004ee89:	pop    rdi
   14004ee8a:	add    edi,edi
   14004ee8c:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004ee8d:	pop    rdi
   14004ee8e:	add    bh,bh
   14004ee90:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004ee91:	pop    rdi
   14004ee92:	add    bh,bh
   14004ee94:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004ee95:	pop    rsi
   14004ee96:	add    bh,bh
   14004ee98:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004ee99:	pop    rsi
   14004ee9a:	add    bh,bh
   14004ee9c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004ee9d:	pop    rsi
   14004ee9e:	add    bh,bh
   14004eea0:	movabs ds:0xa2ff025da2ff025d,eax
   14004eea9:	pop    rbp
   14004eeaa:	add    bh,bh
   14004eeac:	movabs eax,ds:0xa0ff025ca1ff025d
   14004eeb5:	pop    rsp
   14004eeb6:	add    bh,bh
   14004eeb8:	movabs al,ds:0x9fff025b9fff025c
   14004eec1:	pop    rbx
   14004eec2:	add    bh,bh
   14004eec4:	sahf   
   14004eec5:	pop    rbx
   14004eec6:	add    bh,bh
   14004eec8:	sahf   
   14004eec9:	pop    rdx
   14004eeca:	add    bh,bh
   14004eecc:	popf   
   14004eecd:	pop    rdx
   14004eece:	add    edi,edi
   14004eed0:	popf   
   14004eed1:	pop    rdx
   14004eed2:	add    edi,edi
   14004eed4:	pushf  
   14004eed5:	pop    rcx
   14004eed6:	add    edi,edi
   14004eed8:	pushf  
   14004eed9:	pop    rcx
   14004eeda:	add    edi,edi
   14004eedc:	fwait
   14004eedd:	pop    rcx
   14004eede:	add    edi,edi
   14004eee0:	fwait
   14004eee1:	pop    rax
   14004eee2:	add    edi,edi
   14004eee4:	(bad)  
   14004eee5:	pop    rax
   14004eee6:	add    edi,edi
   14004eee8:	(bad)  
   14004eee9:	pop    rax
   14004eeea:	add    edi,edi
   14004eeec:	cdq    
   14004eeed:	push   rdi
   14004eeee:	add    edi,edi
   14004eef0:	cwde   
   14004eef1:	push   rdi
   14004eef2:	add    edi,edi
   14004eef4:	cwde   
   14004eef5:	push   rdi
   14004eef6:	add    edi,edi
   14004eef8:	cwde   
   14004eef9:	push   rdi
   14004eefa:	add    edi,edi
   14004eefc:	xchg   edi,eax
   14004eefd:	push   rsi
   14004eefe:	add    edi,edi
   14004ef00:	xchg   esi,eax
   14004ef01:	push   rsi
   14004ef02:	add    edi,edi
   14004ef04:	xchg   esi,eax
   14004ef05:	push   rsi
   14004ef06:	add    edi,edi
   14004ef08:	xchg   ebp,eax
   14004ef09:	push   rbp
   14004ef0a:	add    edi,edi
   14004ef0c:	xchg   ebp,eax
   14004ef0d:	push   rbp
   14004ef0e:	add    al,0xff
   14004ef10:	xchg   esp,eax
   14004ef11:	push   rbp
   14004ef12:	add    al,0xff
   14004ef14:	xchg   esp,eax
   14004ef15:	push   rsp
   14004ef16:	add    al,0xff
   14004ef18:	xchg   ebx,eax
   14004ef19:	push   rsp
   14004ef1a:	add    al,0xff
   14004ef1c:	xchg   ebx,eax
   14004ef1d:	push   rsp
   14004ef1e:	add    al,0xff
   14004ef20:	xchg   edx,eax
   14004ef21:	push   rbx
   14004ef22:	add    al,0xff
   14004ef24:	fs (bad) 
   14004ef26:	(bad)  
   14004ef27:	jmp    FWORD PTR [rdx+0x4b]
   14004ef2a:	sub    bh,bh
   14004ef2c:	(bad)  
   14004ef2d:	mov    edx,0xc3ddff93
   14004ef32:	fwait
   14004ef33:	(bad)  
   14004ef34:	ffree  st(3)
   14004ef36:	fwait
   14004ef37:	(bad)  
   14004ef38:	ffree  st(3)
   14004ef3a:	fwait
   14004ef3b:	(bad)  
   14004ef3c:	ffree  st(3)
   14004ef3e:	fwait
   14004ef3f:	(bad)  
   14004ef40:	ffree  st(3)
   14004ef42:	fwait
   14004ef43:	(bad)  
   14004ef44:	ffree  st(3)
   14004ef46:	fwait
   14004ef47:	(bad)  
   14004ef48:	ffree  st(3)
   14004ef4a:	fwait
   14004ef4b:	(bad)  
   14004ef4c:	ffree  st(3)
   14004ef4e:	fwait
   14004ef4f:	(bad)  
   14004ef50:	ffree  st(3)
   14004ef52:	fwait
   14004ef53:	(bad)  
   14004ef54:	ffree  st(3)
   14004ef56:	fwait
   14004ef57:	(bad)  
   14004ef58:	ffree  st(3)
   14004ef5a:	fwait
   14004ef5b:	(bad)  
   14004ef5c:	ffree  st(3)
   14004ef5e:	fwait
   14004ef5f:	(bad)  
   14004ef60:	ffree  st(3)
   14004ef62:	fwait
   14004ef63:	(bad)  
   14004ef64:	ffree  st(3)
   14004ef66:	fwait
   14004ef67:	(bad)  
   14004ef68:	ffree  st(3)
   14004ef6a:	fwait
   14004ef6b:	(bad)  
   14004ef6c:	ffree  st(3)
   14004ef6e:	fwait
   14004ef6f:	(bad)  
   14004ef70:	ffree  st(3)
   14004ef72:	fwait
   14004ef73:	(bad)  
   14004ef74:	ffree  st(3)
   14004ef76:	fwait
   14004ef77:	(bad)  
   14004ef78:	ffree  st(3)
   14004ef7a:	fwait
   14004ef7b:	(bad)  
   14004ef7c:	ffree  st(3)
   14004ef7e:	fwait
   14004ef7f:	(bad)  
   14004ef80:	ffree  st(3)
   14004ef82:	fwait
   14004ef83:	(bad)  
   14004ef84:	ffree  st(3)
   14004ef86:	fwait
   14004ef87:	(bad)  
   14004ef88:	ffree  st(3)
   14004ef8a:	fwait
   14004ef8b:	(bad)  
   14004ef8c:	ffree  st(3)
   14004ef8e:	fwait
   14004ef8f:	(bad)  
   14004ef90:	ffree  st(3)
   14004ef92:	fwait
   14004ef93:	(bad)  
   14004ef94:	ffree  st(3)
   14004ef96:	fwait
   14004ef97:	(bad)  
   14004ef98:	ffree  st(3)
   14004ef9a:	fwait
   14004ef9b:	(bad)  
   14004ef9c:	ffree  st(3)
   14004ef9e:	fwait
   14004ef9f:	call   rbp
   14004efa1:	mov    edx,0x4b6aff93
   14004efa6:	sub    bh,bh
   14004efa8:	(bad)  
   14004efa9:	cmp    eax,0x4880ff17
   14004efae:	(bad)  
   14004efaf:	(bad)  
   14004efb0:	jg     0x14004effa
   14004efb2:	(bad)  
   14004efb3:	(bad)  
   14004efb4:	jg     0x14004effe
   14004efb6:	(bad)  
   14004efb7:	(bad)  
   14004efb8:	jle    0x14004f001
   14004efba:	(bad)  
   14004efbb:	(bad)  
   14004efbc:	jle    0x14004f005
   14004efbe:	(bad)  
   14004efbf:	(bad)  
   14004efc0:	jge    0x14004f009
   14004efc2:	(bad)  
   14004efc3:	(bad)  
   14004efc4:	jge    0x14004f00d
   14004efc6:	(bad)  
   14004efc7:	(bad)  
   14004efc8:	jl     0x14004f010
   14004efca:	(bad)  
   14004efcb:	(bad)  
   14004efcc:	jnp    0x14004f014
   14004efce:	(bad)  
   14004efcf:	(bad)  
   14004efd0:	jnp    0x14004f018
   14004efd2:	(bad)  
   14004efd3:	(bad)  
   14004efd4:	jnp    0x14004f01b
   14004efd6:	(bad)  
   14004efd7:	(bad)  
   14004efd8:	jp     0x14004f01f
   14004efda:	(bad)  
   14004efdb:	(bad)  
   14004efdc:	jns    0x14004f023
   14004efde:	(bad)  
   14004efdf:	(bad)  
   14004efe0:	jns    0x14004f026
   14004efe2:	(bad)  
   14004efe3:	(bad)  
   14004efe4:	js     0x14004f02a
   14004efe6:	(bad)  
   14004efe7:	(bad)  
   14004efe8:	js     0x14004f02e
   14004efea:	(bad)  
   14004efeb:	push   QWORD PTR [rdi+0x43]
   14004efee:	(bad)  
   14004efef:	push   QWORD PTR [rdi+0x43]
   14004eff2:	(bad)  
   14004eff3:	push   QWORD PTR [rsi+0x43]
   14004eff6:	(bad)  
   14004eff7:	push   QWORD PTR [rsi+0x42]
   14004effa:	(bad)  
   14004effb:	push   QWORD PTR [rbp+0x42]
   14004effe:	(bad)  
   14004efff:	push   QWORD PTR [rbp+0x42]
   14004f002:	(bad)  
   14004f003:	push   QWORD PTR [rcx+rax*2+0x7]
   14004f007:	push   QWORD PTR [rcx+rax*2+0x7]
   14004f00b:	push   QWORD PTR [rbx+0x41]
   14004f00e:	(bad)  
   14004f00f:	push   QWORD PTR [rbx+0x41]
   14004f012:	or     bh,bh
   14004f014:	jb     0x14004f056
   14004f016:	or     bh,bh
   14004f018:	jno    0x14004f05a
   14004f01a:	or     bh,bh
   14004f01c:	jno    0x14004f05d
   14004f01e:	or     bh,bh
   14004f020:	jno    0x14004f061
   14004f022:	or     bh,bh
   14004f024:	jo     0x14004f065
   14004f026:	or     bh,bh
   14004f028:	outs   dx,DWORD PTR ds:[rsi]
   14004f029:	(bad)  
   14004f02a:	or     bh,bh
   14004f02c:	outs   dx,DWORD PTR ds:[rsi]
   14004f02d:	ds or  bh,bh
   14004f030:	outs   dx,BYTE PTR ds:[rsi]
   14004f031:	ds or  bh,bh
   14004f034:	outs   dx,BYTE PTR ds:[rsi]
   14004f035:	ds or  bh,bh
   14004f038:	ins    DWORD PTR es:[rdi],dx
   14004f039:	cmp    eax,0x3d6dff08
   14004f03e:	or     bh,bh
   14004f040:	ins    BYTE PTR es:[rdi],dx
   14004f041:	cmp    eax,0x3c6cff08
   14004f046:	or     bh,bh
	...
   14004f088:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004f089:	(bad)  
   14004f08a:	add    edi,edi
   14004f08c:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004f08d:	pop    rdi
   14004f08e:	add    edi,edi
   14004f090:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004f091:	pop    rdi
   14004f092:	add    bh,bh
   14004f094:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004f095:	pop    rdi
   14004f096:	add    bh,bh
   14004f098:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004f099:	pop    rsi
   14004f09a:	add    bh,bh
   14004f09c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004f09d:	pop    rsi
   14004f09e:	add    bh,bh
   14004f0a0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004f0a1:	pop    rsi
   14004f0a2:	add    bh,bh
   14004f0a4:	movabs ds:0xa2ff025da2ff025d,eax
   14004f0ad:	pop    rbp
   14004f0ae:	add    bh,bh
   14004f0b0:	movabs eax,ds:0xa0ff025ca1ff025d
   14004f0b9:	pop    rsp
   14004f0ba:	add    bh,bh
   14004f0bc:	movabs al,ds:0x9fff025b9fff025c
   14004f0c5:	pop    rbx
   14004f0c6:	add    bh,bh
   14004f0c8:	sahf   
   14004f0c9:	pop    rbx
   14004f0ca:	add    bh,bh
   14004f0cc:	sahf   
   14004f0cd:	pop    rdx
   14004f0ce:	add    bh,bh
   14004f0d0:	popf   
   14004f0d1:	pop    rdx
   14004f0d2:	add    edi,edi
   14004f0d4:	popf   
   14004f0d5:	pop    rdx
   14004f0d6:	add    edi,edi
   14004f0d8:	pushf  
   14004f0d9:	pop    rcx
   14004f0da:	add    edi,edi
   14004f0dc:	pushf  
   14004f0dd:	pop    rcx
   14004f0de:	add    edi,edi
   14004f0e0:	fwait
   14004f0e1:	pop    rcx
   14004f0e2:	add    edi,edi
   14004f0e4:	fwait
   14004f0e5:	pop    rax
   14004f0e6:	add    edi,edi
   14004f0e8:	(bad)  
   14004f0e9:	pop    rax
   14004f0ea:	add    edi,edi
   14004f0ec:	(bad)  
   14004f0ed:	pop    rax
   14004f0ee:	add    edi,edi
   14004f0f0:	cdq    
   14004f0f1:	push   rdi
   14004f0f2:	add    edi,edi
   14004f0f4:	cwde   
   14004f0f5:	push   rdi
   14004f0f6:	add    edi,edi
   14004f0f8:	cwde   
   14004f0f9:	push   rdi
   14004f0fa:	add    edi,edi
   14004f0fc:	cwde   
   14004f0fd:	push   rdi
   14004f0fe:	add    edi,edi
   14004f100:	xchg   edi,eax
   14004f101:	push   rsi
   14004f102:	add    edi,edi
   14004f104:	xchg   esi,eax
   14004f105:	push   rsi
   14004f106:	add    edi,edi
   14004f108:	xchg   esi,eax
   14004f109:	push   rsi
   14004f10a:	add    edi,edi
   14004f10c:	xchg   ebp,eax
   14004f10d:	push   rbp
   14004f10e:	add    edi,edi
   14004f110:	xchg   ebp,eax
   14004f111:	push   rbp
   14004f112:	add    al,0xff
   14004f114:	xchg   esp,eax
   14004f115:	push   rbp
   14004f116:	add    al,0xff
   14004f118:	xchg   esp,eax
   14004f119:	push   rsp
   14004f11a:	add    al,0xff
   14004f11c:	xchg   ebx,eax
   14004f11d:	push   rsp
   14004f11e:	add    al,0xff
   14004f120:	outs   dx,DWORD PTR ds:[rsi]
   14004f121:	adc    r15b,dil
   14004f124:	(bad)  
   14004f126:	and    edi,edi
   14004f128:	(bad)
   14004f12b:	(bad)  
   14004f12c:	faddp  st(4),st
   14004f12e:	pushf  
   14004f12f:	(bad)  
   14004f130:	faddp  st(4),st
   14004f132:	pushf  
   14004f133:	(bad)  
   14004f134:	faddp  st(4),st
   14004f136:	pushf  
   14004f137:	(bad)  
   14004f138:	faddp  st(4),st
   14004f13a:	pushf  
   14004f13b:	(bad)  
   14004f13c:	faddp  st(4),st
   14004f13e:	pushf  
   14004f13f:	(bad)  
   14004f140:	faddp  st(4),st
   14004f142:	pushf  
   14004f143:	(bad)  
   14004f144:	faddp  st(4),st
   14004f146:	pushf  
   14004f147:	(bad)  
   14004f148:	faddp  st(4),st
   14004f14a:	pushf  
   14004f14b:	(bad)  
   14004f14c:	faddp  st(4),st
   14004f14e:	pushf  
   14004f14f:	(bad)  
   14004f150:	faddp  st(4),st
   14004f152:	pushf  
   14004f153:	(bad)  
   14004f154:	faddp  st(4),st
   14004f156:	pushf  
   14004f157:	(bad)  
   14004f158:	faddp  st(4),st
   14004f15a:	pushf  
   14004f15b:	(bad)  
   14004f15c:	faddp  st(4),st
   14004f15e:	pushf  
   14004f15f:	(bad)  
   14004f160:	faddp  st(4),st
   14004f162:	pushf  
   14004f163:	(bad)  
   14004f164:	faddp  st(4),st
   14004f166:	pushf  
   14004f167:	(bad)  
   14004f168:	faddp  st(4),st
   14004f16a:	pushf  
   14004f16b:	(bad)  
   14004f16c:	faddp  st(4),st
   14004f16e:	pushf  
   14004f16f:	(bad)  
   14004f170:	faddp  st(4),st
   14004f172:	pushf  
   14004f173:	(bad)  
   14004f174:	faddp  st(4),st
   14004f176:	pushf  
   14004f177:	(bad)  
   14004f178:	faddp  st(4),st
   14004f17a:	pushf  
   14004f17b:	(bad)  
   14004f17c:	faddp  st(4),st
   14004f17e:	pushf  
   14004f17f:	(bad)  
   14004f180:	faddp  st(4),st
   14004f182:	pushf  
   14004f183:	(bad)  
   14004f184:	faddp  st(4),st
   14004f186:	pushf  
   14004f187:	(bad)  
   14004f188:	faddp  st(4),st
   14004f18a:	pushf  
   14004f18b:	(bad)  
   14004f18c:	faddp  st(4),st
   14004f18e:	pushf  
   14004f18f:	(bad)  
   14004f190:	faddp  st(4),st
   14004f192:	pushf  
   14004f193:	(bad)  
   14004f194:	faddp  st(4),st
   14004f196:	pushf  
   14004f197:	(bad)  
   14004f198:	faddp  st(4),st
   14004f19a:	pushf  
   14004f19b:	(bad)  
   14004f19c:	faddp  st(4),st
   14004f19e:	pushf  
   14004f19f:	(bad)  
   14004f1a0:	faddp  st(4),st
   14004f1a2:	pushf  
   14004f1a3:	inc    ebp
   14004f1a5:	stos   BYTE PTR es:[rdi],al
   14004f1a6:	test   bh,bh
   14004f1a8:	(bad)  
   14004f1aa:	and    edi,edi
   14004f1ac:	push   0xffffffff80ff1340
   14004f1b1:	rex.W (bad) 
   14004f1b3:	(bad)  
   14004f1b4:	jg     0x14004f1fe
   14004f1b6:	(bad)  
   14004f1b7:	(bad)  
   14004f1b8:	jg     0x14004f202
   14004f1ba:	(bad)  
   14004f1bb:	(bad)  
   14004f1bc:	jle    0x14004f205
   14004f1be:	(bad)  
   14004f1bf:	(bad)  
   14004f1c0:	jle    0x14004f209
   14004f1c2:	(bad)  
   14004f1c3:	(bad)  
   14004f1c4:	jge    0x14004f20d
   14004f1c6:	(bad)  
   14004f1c7:	(bad)  
   14004f1c8:	jge    0x14004f211
   14004f1ca:	(bad)  
   14004f1cb:	(bad)  
   14004f1cc:	jl     0x14004f214
   14004f1ce:	(bad)  
   14004f1cf:	(bad)  
   14004f1d0:	jnp    0x14004f218
   14004f1d2:	(bad)  
   14004f1d3:	(bad)  
   14004f1d4:	jnp    0x14004f21c
   14004f1d6:	(bad)  
   14004f1d7:	(bad)  
   14004f1d8:	jnp    0x14004f21f
   14004f1da:	(bad)  
   14004f1db:	(bad)  
   14004f1dc:	jp     0x14004f223
   14004f1de:	(bad)  
   14004f1df:	(bad)  
   14004f1e0:	jns    0x14004f227
   14004f1e2:	(bad)  
   14004f1e3:	(bad)  
   14004f1e4:	jns    0x14004f22a
   14004f1e6:	(bad)  
   14004f1e7:	(bad)  
   14004f1e8:	js     0x14004f22e
   14004f1ea:	(bad)  
   14004f1eb:	(bad)  
   14004f1ec:	js     0x14004f232
   14004f1ee:	(bad)  
   14004f1ef:	push   QWORD PTR [rdi+0x43]
   14004f1f2:	(bad)  
   14004f1f3:	push   QWORD PTR [rdi+0x43]
   14004f1f6:	(bad)  
   14004f1f7:	push   QWORD PTR [rsi+0x43]
   14004f1fa:	(bad)  
   14004f1fb:	push   QWORD PTR [rsi+0x42]
   14004f1fe:	(bad)  
   14004f1ff:	push   QWORD PTR [rbp+0x42]
   14004f202:	(bad)  
   14004f203:	push   QWORD PTR [rbp+0x42]
   14004f206:	(bad)  
   14004f207:	push   QWORD PTR [rcx+rax*2+0x7]
   14004f20b:	push   QWORD PTR [rcx+rax*2+0x7]
   14004f20f:	push   QWORD PTR [rbx+0x41]
   14004f212:	(bad)  
   14004f213:	push   QWORD PTR [rbx+0x41]
   14004f216:	or     bh,bh
   14004f218:	jb     0x14004f25a
   14004f21a:	or     bh,bh
   14004f21c:	jno    0x14004f25e
   14004f21e:	or     bh,bh
   14004f220:	jno    0x14004f261
   14004f222:	or     bh,bh
   14004f224:	jno    0x14004f265
   14004f226:	or     bh,bh
   14004f228:	jo     0x14004f269
   14004f22a:	or     bh,bh
   14004f22c:	outs   dx,DWORD PTR ds:[rsi]
   14004f22d:	(bad)  
   14004f22e:	or     bh,bh
   14004f230:	outs   dx,DWORD PTR ds:[rsi]
   14004f231:	ds or  bh,bh
   14004f234:	outs   dx,BYTE PTR ds:[rsi]
   14004f235:	ds or  bh,bh
   14004f238:	outs   dx,BYTE PTR ds:[rsi]
   14004f239:	ds or  bh,bh
   14004f23c:	ins    DWORD PTR es:[rdi],dx
   14004f23d:	cmp    eax,0x3d6dff08
   14004f242:	or     bh,bh
   14004f244:	ins    BYTE PTR es:[rdi],dx
   14004f245:	cmp    eax,0xff08
	...
   14004f286:	add    BYTE PTR [rax],al
   14004f288:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004f289:	(bad)  
   14004f28a:	add    edi,edi
   14004f28c:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004f28d:	(bad)  
   14004f28e:	add    edi,edi
   14004f290:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004f291:	pop    rdi
   14004f292:	add    edi,edi
   14004f294:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004f295:	pop    rdi
   14004f296:	add    bh,bh
   14004f298:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004f299:	pop    rdi
   14004f29a:	add    bh,bh
   14004f29c:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004f29d:	pop    rsi
   14004f29e:	add    bh,bh
   14004f2a0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004f2a1:	pop    rsi
   14004f2a2:	add    bh,bh
   14004f2a4:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004f2a5:	pop    rsi
   14004f2a6:	add    bh,bh
   14004f2a8:	movabs ds:0xa2ff025da2ff025d,eax
   14004f2b1:	pop    rbp
   14004f2b2:	add    bh,bh
   14004f2b4:	movabs eax,ds:0xa0ff025ca1ff025d
   14004f2bd:	pop    rsp
   14004f2be:	add    bh,bh
   14004f2c0:	movabs al,ds:0x9fff025b9fff025c
   14004f2c9:	pop    rbx
   14004f2ca:	add    bh,bh
   14004f2cc:	sahf   
   14004f2cd:	pop    rbx
   14004f2ce:	add    bh,bh
   14004f2d0:	sahf   
   14004f2d1:	pop    rdx
   14004f2d2:	add    bh,bh
   14004f2d4:	popf   
   14004f2d5:	pop    rdx
   14004f2d6:	add    edi,edi
   14004f2d8:	popf   
   14004f2d9:	pop    rdx
   14004f2da:	add    edi,edi
   14004f2dc:	pushf  
   14004f2dd:	pop    rcx
   14004f2de:	add    edi,edi
   14004f2e0:	pushf  
   14004f2e1:	pop    rcx
   14004f2e2:	add    edi,edi
   14004f2e4:	fwait
   14004f2e5:	pop    rcx
   14004f2e6:	add    edi,edi
   14004f2e8:	fwait
   14004f2e9:	pop    rax
   14004f2ea:	add    edi,edi
   14004f2ec:	(bad)  
   14004f2ed:	pop    rax
   14004f2ee:	add    edi,edi
   14004f2f0:	(bad)  
   14004f2f1:	pop    rax
   14004f2f2:	add    edi,edi
   14004f2f4:	cdq    
   14004f2f5:	push   rdi
   14004f2f6:	add    edi,edi
   14004f2f8:	cwde   
   14004f2f9:	push   rdi
   14004f2fa:	add    edi,edi
   14004f2fc:	cwde   
   14004f2fd:	push   rdi
   14004f2fe:	add    edi,edi
   14004f300:	cwde   
   14004f301:	push   rdi
   14004f302:	add    edi,edi
   14004f304:	xchg   edi,eax
   14004f305:	push   rsi
   14004f306:	add    edi,edi
   14004f308:	xchg   esi,eax
   14004f309:	push   rsi
   14004f30a:	add    edi,edi
   14004f30c:	xchg   esi,eax
   14004f30d:	push   rsi
   14004f30e:	add    edi,edi
   14004f310:	xchg   ebp,eax
   14004f311:	push   rbp
   14004f312:	add    edi,edi
   14004f314:	xchg   ebp,eax
   14004f315:	push   rbp
   14004f316:	add    al,0xff
   14004f318:	xchg   esp,eax
   14004f319:	push   rbp
   14004f31a:	add    al,0xff
   14004f31c:	jnp    0x14004f367
   14004f31e:	(bad)  
   14004f31f:	call   FWORD PTR [rdx+0x3b]
   14004f322:	sbb    edi,edi
   14004f324:	mov    ch,0x9a
   14004f326:	je     0x14004f327
   14004f328:	faddp  st(5),st
   14004f32a:	popf   
   14004f32b:	(bad)  
   14004f32c:	faddp  st(5),st
   14004f32e:	popf   
   14004f32f:	(bad)  
   14004f330:	faddp  st(5),st
   14004f332:	popf   
   14004f333:	(bad)  
   14004f334:	faddp  st(5),st
   14004f336:	popf   
   14004f337:	(bad)  
   14004f338:	faddp  st(5),st
   14004f33a:	popf   
   14004f33b:	(bad)  
   14004f33c:	faddp  st(5),st
   14004f33e:	popf   
   14004f33f:	(bad)  
   14004f340:	faddp  st(5),st
   14004f342:	popf   
   14004f343:	(bad)  
   14004f344:	faddp  st(5),st
   14004f346:	popf   
   14004f347:	(bad)  
   14004f348:	faddp  st(5),st
   14004f34a:	popf   
   14004f34b:	(bad)  
   14004f34c:	faddp  st(5),st
   14004f34e:	popf   
   14004f34f:	(bad)  
   14004f350:	faddp  st(5),st
   14004f352:	popf   
   14004f353:	(bad)  
   14004f354:	faddp  st(5),st
   14004f356:	popf   
   14004f357:	(bad)  
   14004f358:	faddp  st(5),st
   14004f35a:	popf   
   14004f35b:	(bad)  
   14004f35c:	faddp  st(5),st
   14004f35e:	popf   
   14004f35f:	(bad)  
   14004f360:	faddp  st(5),st
   14004f362:	popf   
   14004f363:	(bad)  
   14004f364:	faddp  st(5),st
   14004f366:	popf   
   14004f367:	(bad)  
   14004f368:	faddp  st(5),st
   14004f36a:	popf   
   14004f36b:	(bad)  
   14004f36c:	faddp  st(5),st
   14004f36e:	popf   
   14004f36f:	(bad)  
   14004f370:	faddp  st(5),st
   14004f372:	popf   
   14004f373:	(bad)  
   14004f374:	faddp  st(5),st
   14004f376:	popf   
   14004f377:	(bad)  
   14004f378:	faddp  st(5),st
   14004f37a:	popf   
   14004f37b:	(bad)  
   14004f37c:	faddp  st(5),st
   14004f37e:	popf   
   14004f37f:	(bad)  
   14004f380:	faddp  st(5),st
   14004f382:	popf   
   14004f383:	(bad)  
   14004f384:	faddp  st(5),st
   14004f386:	popf   
   14004f387:	(bad)  
   14004f388:	faddp  st(5),st
   14004f38a:	popf   
   14004f38b:	(bad)  
   14004f38c:	faddp  st(5),st
   14004f38e:	popf   
   14004f38f:	(bad)  
   14004f390:	faddp  st(5),st
   14004f392:	popf   
   14004f393:	(bad)  
   14004f394:	faddp  st(5),st
   14004f396:	popf   
   14004f397:	(bad)  
   14004f398:	faddp  st(5),st
   14004f39a:	popf   
   14004f39b:	(bad)  
   14004f39c:	faddp  st(5),st
   14004f39e:	popf   
   14004f39f:	(bad)  
   14004f3a0:	faddp  st(5),st
   14004f3a2:	popf   
   14004f3a3:	(bad)  
   14004f3a4:	faddp  st(5),st
   14004f3a6:	popf   
   14004f3a7:	push   QWORD PTR [rbp+0x5aff749a]
   14004f3ad:	cmp    ebx,DWORD PTR [rbx]
   14004f3af:	jmp    FWORD PTR [rdi+0x43]
   14004f3b2:	ud0    eax,DWORD PTR [rax+0x7fff0648]
   14004f3b9:	rex.W (bad) 
   14004f3bb:	(bad)  
   14004f3bc:	jg     0x14004f406
   14004f3be:	(bad)  
   14004f3bf:	(bad)  
   14004f3c0:	jle    0x14004f409
   14004f3c2:	(bad)  
   14004f3c3:	(bad)  
   14004f3c4:	jle    0x14004f40d
   14004f3c6:	(bad)  
   14004f3c7:	(bad)  
   14004f3c8:	jge    0x14004f411
   14004f3ca:	(bad)  
   14004f3cb:	(bad)  
   14004f3cc:	jge    0x14004f415
   14004f3ce:	(bad)  
   14004f3cf:	(bad)  
   14004f3d0:	jl     0x14004f418
   14004f3d2:	(bad)  
   14004f3d3:	(bad)  
   14004f3d4:	jnp    0x14004f41c
   14004f3d6:	(bad)  
   14004f3d7:	(bad)  
   14004f3d8:	jnp    0x14004f420
   14004f3da:	(bad)  
   14004f3db:	(bad)  
   14004f3dc:	jnp    0x14004f423
   14004f3de:	(bad)  
   14004f3df:	(bad)  
   14004f3e0:	jp     0x14004f427
   14004f3e2:	(bad)  
   14004f3e3:	(bad)  
   14004f3e4:	jns    0x14004f42b
   14004f3e6:	(bad)  
   14004f3e7:	(bad)  
   14004f3e8:	jns    0x14004f42e
   14004f3ea:	(bad)  
   14004f3eb:	(bad)  
   14004f3ec:	js     0x14004f432
   14004f3ee:	(bad)  
   14004f3ef:	(bad)  
   14004f3f0:	js     0x14004f436
   14004f3f2:	(bad)  
   14004f3f3:	push   QWORD PTR [rdi+0x43]
   14004f3f6:	(bad)  
   14004f3f7:	push   QWORD PTR [rdi+0x43]
   14004f3fa:	(bad)  
   14004f3fb:	push   QWORD PTR [rsi+0x43]
   14004f3fe:	(bad)  
   14004f3ff:	push   QWORD PTR [rsi+0x42]
   14004f402:	(bad)  
   14004f403:	push   QWORD PTR [rbp+0x42]
   14004f406:	(bad)  
   14004f407:	push   QWORD PTR [rbp+0x42]
   14004f40a:	(bad)  
   14004f40b:	push   QWORD PTR [rcx+rax*2+0x7]
   14004f40f:	push   QWORD PTR [rcx+rax*2+0x7]
   14004f413:	push   QWORD PTR [rbx+0x41]
   14004f416:	(bad)  
   14004f417:	push   QWORD PTR [rbx+0x41]
   14004f41a:	or     bh,bh
   14004f41c:	jb     0x14004f45e
   14004f41e:	or     bh,bh
   14004f420:	jno    0x14004f462
   14004f422:	or     bh,bh
   14004f424:	jno    0x14004f465
   14004f426:	or     bh,bh
   14004f428:	jno    0x14004f469
   14004f42a:	or     bh,bh
   14004f42c:	jo     0x14004f46d
   14004f42e:	or     bh,bh
   14004f430:	outs   dx,DWORD PTR ds:[rsi]
   14004f431:	(bad)  
   14004f432:	or     bh,bh
   14004f434:	outs   dx,DWORD PTR ds:[rsi]
   14004f435:	ds or  bh,bh
   14004f438:	outs   dx,BYTE PTR ds:[rsi]
   14004f439:	ds or  bh,bh
   14004f43c:	outs   dx,BYTE PTR ds:[rsi]
   14004f43d:	ds or  bh,bh
   14004f440:	ins    DWORD PTR es:[rdi],dx
   14004f441:	cmp    eax,0x3d6dff08
   14004f446:	or     bh,bh
	...
   14004f488:	test   al,0x60
   14004f48a:	add    edi,edi
   14004f48c:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004f48d:	(bad)  
   14004f48e:	add    edi,edi
   14004f490:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004f491:	(bad)  
   14004f492:	add    edi,edi
   14004f494:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004f495:	pop    rdi
   14004f496:	add    edi,edi
   14004f498:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004f499:	pop    rdi
   14004f49a:	add    bh,bh
   14004f49c:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004f49d:	pop    rdi
   14004f49e:	add    bh,bh
   14004f4a0:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004f4a1:	pop    rsi
   14004f4a2:	add    bh,bh
   14004f4a4:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004f4a5:	pop    rsi
   14004f4a6:	add    bh,bh
   14004f4a8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004f4a9:	pop    rsi
   14004f4aa:	add    bh,bh
   14004f4ac:	movabs ds:0xa2ff025da2ff025d,eax
   14004f4b5:	pop    rbp
   14004f4b6:	add    bh,bh
   14004f4b8:	movabs eax,ds:0xa0ff025ca1ff025d
   14004f4c1:	pop    rsp
   14004f4c2:	add    bh,bh
   14004f4c4:	movabs al,ds:0x9fff025b9fff025c
   14004f4cd:	pop    rbx
   14004f4ce:	add    bh,bh
   14004f4d0:	sahf   
   14004f4d1:	pop    rbx
   14004f4d2:	add    bh,bh
   14004f4d4:	sahf   
   14004f4d5:	pop    rdx
   14004f4d6:	add    bh,bh
   14004f4d8:	popf   
   14004f4d9:	pop    rdx
   14004f4da:	add    edi,edi
   14004f4dc:	popf   
   14004f4dd:	pop    rdx
   14004f4de:	add    edi,edi
   14004f4e0:	pushf  
   14004f4e1:	pop    rcx
   14004f4e2:	add    edi,edi
   14004f4e4:	pushf  
   14004f4e5:	pop    rcx
   14004f4e6:	add    edi,edi
   14004f4e8:	fwait
   14004f4e9:	pop    rcx
   14004f4ea:	add    edi,edi
   14004f4ec:	fwait
   14004f4ed:	pop    rax
   14004f4ee:	add    edi,edi
   14004f4f0:	(bad)  
   14004f4f1:	pop    rax
   14004f4f2:	add    edi,edi
   14004f4f4:	(bad)  
   14004f4f5:	pop    rax
   14004f4f6:	add    edi,edi
   14004f4f8:	cdq    
   14004f4f9:	push   rdi
   14004f4fa:	add    edi,edi
   14004f4fc:	cwde   
   14004f4fd:	push   rdi
   14004f4fe:	add    edi,edi
   14004f500:	cwde   
   14004f501:	push   rdi
   14004f502:	add    edi,edi
   14004f504:	cwde   
   14004f505:	push   rdi
   14004f506:	add    edi,edi
   14004f508:	xchg   edi,eax
   14004f509:	push   rsi
   14004f50a:	add    edi,edi
   14004f50c:	xchg   esi,eax
   14004f50d:	push   rsi
   14004f50e:	add    edi,edi
   14004f510:	xchg   esi,eax
   14004f511:	push   rsi
   14004f512:	add    edi,edi
   14004f514:	xchg   ebp,eax
   14004f515:	push   rbp
   14004f516:	add    edi,edi
   14004f518:	jg     0x14004f566
   14004f51a:	or     eax,0x1c3c5bff
   14004f51f:	jmp    QWORD PTR [rbp-0x20009a77]
   14004f525:	(bad)  
   14004f526:	sahf   
   14004f527:	(bad)  
   14004f528:	ffreep st(6)
   14004f52a:	sahf   
   14004f52b:	(bad)  
   14004f52c:	ffreep st(6)
   14004f52e:	sahf   
   14004f52f:	(bad)  
   14004f530:	ffreep st(6)
   14004f532:	sahf   
   14004f533:	(bad)  
   14004f534:	ffreep st(6)
   14004f536:	sahf   
   14004f537:	(bad)  
   14004f538:	ffreep st(6)
   14004f53a:	sahf   
   14004f53b:	(bad)  
   14004f53c:	ffreep st(6)
   14004f53e:	sahf   
   14004f53f:	(bad)  
   14004f540:	ffreep st(6)
   14004f542:	sahf   
   14004f543:	(bad)  
   14004f544:	ffreep st(6)
   14004f546:	sahf   
   14004f547:	(bad)  
   14004f548:	ffreep st(6)
   14004f54a:	sahf   
   14004f54b:	(bad)  
   14004f54c:	ffreep st(6)
   14004f54e:	sahf   
   14004f54f:	(bad)  
   14004f550:	ffreep st(6)
   14004f552:	sahf   
   14004f553:	(bad)  
   14004f554:	ffreep st(6)
   14004f556:	sahf   
   14004f557:	(bad)  
   14004f558:	ffreep st(6)
   14004f55a:	sahf   
   14004f55b:	(bad)  
   14004f55c:	ffreep st(6)
   14004f55e:	sahf   
   14004f55f:	(bad)  
   14004f560:	ffreep st(6)
   14004f562:	sahf   
   14004f563:	(bad)  
   14004f564:	ffreep st(6)
   14004f566:	sahf   
   14004f567:	(bad)  
   14004f568:	ffreep st(6)
   14004f56a:	sahf   
   14004f56b:	(bad)  
   14004f56c:	ffreep st(6)
   14004f56e:	sahf   
   14004f56f:	(bad)  
   14004f570:	ffreep st(6)
   14004f572:	sahf   
   14004f573:	(bad)  
   14004f574:	ffreep st(6)
   14004f576:	sahf   
   14004f577:	(bad)  
   14004f578:	ffreep st(6)
   14004f57a:	sahf   
   14004f57b:	(bad)  
   14004f57c:	ffreep st(6)
   14004f57e:	sahf   
   14004f57f:	(bad)  
   14004f580:	ffreep st(6)
   14004f582:	sahf   
   14004f583:	(bad)  
   14004f584:	ffreep st(6)
   14004f586:	sahf   
   14004f587:	(bad)  
   14004f588:	ffreep st(6)
   14004f58a:	sahf   
   14004f58b:	(bad)  
   14004f58c:	ffreep st(6)
   14004f58e:	sahf   
   14004f58f:	(bad)  
   14004f590:	ffreep st(6)
   14004f592:	sahf   
   14004f593:	(bad)  
   14004f594:	ffreep st(6)
   14004f596:	sahf   
   14004f597:	(bad)  
   14004f598:	ffreep st(6)
   14004f59a:	sahf   
   14004f59b:	(bad)  
   14004f59c:	ffreep st(6)
   14004f59e:	sahf   
   14004f59f:	(bad)  
   14004f5a0:	ffreep st(6)
   14004f5a2:	sahf   
   14004f5a3:	(bad)  
   14004f5a4:	ffreep st(6)
   14004f5a6:	sahf   
   14004f5a7:	(bad)  
   14004f5a8:	ffreep st(6)
   14004f5aa:	sahf   
   14004f5ab:	jmp    QWORD PTR [rbp+0x5bff6589]
   14004f5b1:	cmp    al,0x1c
   14004f5b3:	push   QWORD PTR [rdx+0x44]
   14004f5b6:	(bad)  
   14004f5b7:	inc    DWORD PTR [rax+0x7fff0648]
   14004f5bd:	rex.W (bad) 
   14004f5bf:	(bad)  
   14004f5c0:	jg     0x14004f60a
   14004f5c2:	(bad)  
   14004f5c3:	(bad)  
   14004f5c4:	jle    0x14004f60d
   14004f5c6:	(bad)  
   14004f5c7:	(bad)  
   14004f5c8:	jle    0x14004f611
   14004f5ca:	(bad)  
   14004f5cb:	(bad)  
   14004f5cc:	jge    0x14004f615
   14004f5ce:	(bad)  
   14004f5cf:	(bad)  
   14004f5d0:	jge    0x14004f619
   14004f5d2:	(bad)  
   14004f5d3:	(bad)  
   14004f5d4:	jl     0x14004f61c
   14004f5d6:	(bad)  
   14004f5d7:	(bad)  
   14004f5d8:	jnp    0x14004f620
   14004f5da:	(bad)  
   14004f5db:	(bad)  
   14004f5dc:	jnp    0x14004f624
   14004f5de:	(bad)  
   14004f5df:	(bad)  
   14004f5e0:	jnp    0x14004f627
   14004f5e2:	(bad)  
   14004f5e3:	(bad)  
   14004f5e4:	jp     0x14004f62b
   14004f5e6:	(bad)  
   14004f5e7:	(bad)  
   14004f5e8:	jns    0x14004f62f
   14004f5ea:	(bad)  
   14004f5eb:	(bad)  
   14004f5ec:	jns    0x14004f632
   14004f5ee:	(bad)  
   14004f5ef:	(bad)  
   14004f5f0:	js     0x14004f636
   14004f5f2:	(bad)  
   14004f5f3:	(bad)  
   14004f5f4:	js     0x14004f63a
   14004f5f6:	(bad)  
   14004f5f7:	push   QWORD PTR [rdi+0x43]
   14004f5fa:	(bad)  
   14004f5fb:	push   QWORD PTR [rdi+0x43]
   14004f5fe:	(bad)  
   14004f5ff:	push   QWORD PTR [rsi+0x43]
   14004f602:	(bad)  
   14004f603:	push   QWORD PTR [rsi+0x42]
   14004f606:	(bad)  
   14004f607:	push   QWORD PTR [rbp+0x42]
   14004f60a:	(bad)  
   14004f60b:	push   QWORD PTR [rbp+0x42]
   14004f60e:	(bad)  
   14004f60f:	push   QWORD PTR [rcx+rax*2+0x7]
   14004f613:	push   QWORD PTR [rcx+rax*2+0x7]
   14004f617:	push   QWORD PTR [rbx+0x41]
   14004f61a:	(bad)  
   14004f61b:	push   QWORD PTR [rbx+0x41]
   14004f61e:	or     bh,bh
   14004f620:	jb     0x14004f662
   14004f622:	or     bh,bh
   14004f624:	jno    0x14004f666
   14004f626:	or     bh,bh
   14004f628:	jno    0x14004f669
   14004f62a:	or     bh,bh
   14004f62c:	jno    0x14004f66d
   14004f62e:	or     bh,bh
   14004f630:	jo     0x14004f671
   14004f632:	or     bh,bh
   14004f634:	outs   dx,DWORD PTR ds:[rsi]
   14004f635:	(bad)  
   14004f636:	or     bh,bh
   14004f638:	outs   dx,DWORD PTR ds:[rsi]
   14004f639:	ds or  bh,bh
   14004f63c:	outs   dx,BYTE PTR ds:[rsi]
   14004f63d:	ds or  bh,bh
   14004f640:	outs   dx,BYTE PTR ds:[rsi]
   14004f641:	ds or  bh,bh
   14004f644:	ins    DWORD PTR es:[rdi],dx
   14004f645:	cmp    eax,0xff08
	...
   14004f686:	add    BYTE PTR [rax],al
   14004f688:	test   al,0x61
   14004f68a:	add    edi,edi
   14004f68c:	test   al,0x60
   14004f68e:	add    edi,edi
   14004f690:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004f691:	(bad)  
   14004f692:	add    edi,edi
   14004f694:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004f695:	(bad)  
   14004f696:	add    edi,edi
   14004f698:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004f699:	pop    rdi
   14004f69a:	add    edi,edi
   14004f69c:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004f69d:	pop    rdi
   14004f69e:	add    bh,bh
   14004f6a0:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004f6a1:	pop    rdi
   14004f6a2:	add    bh,bh
   14004f6a4:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004f6a5:	pop    rsi
   14004f6a6:	add    bh,bh
   14004f6a8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004f6a9:	pop    rsi
   14004f6aa:	add    bh,bh
   14004f6ac:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004f6ad:	pop    rsi
   14004f6ae:	add    bh,bh
   14004f6b0:	movabs ds:0xa2ff025da2ff025d,eax
   14004f6b9:	pop    rbp
   14004f6ba:	add    bh,bh
   14004f6bc:	movabs eax,ds:0xa0ff025ca1ff025d
   14004f6c5:	pop    rsp
   14004f6c6:	add    bh,bh
   14004f6c8:	movabs al,ds:0x9fff025b9fff025c
   14004f6d1:	pop    rbx
   14004f6d2:	add    bh,bh
   14004f6d4:	sahf   
   14004f6d5:	pop    rbx
   14004f6d6:	add    bh,bh
   14004f6d8:	sahf   
   14004f6d9:	pop    rdx
   14004f6da:	add    bh,bh
   14004f6dc:	popf   
   14004f6dd:	pop    rdx
   14004f6de:	add    edi,edi
   14004f6e0:	popf   
   14004f6e1:	pop    rdx
   14004f6e2:	add    edi,edi
   14004f6e4:	pushf  
   14004f6e5:	pop    rcx
   14004f6e6:	add    edi,edi
   14004f6e8:	pushf  
   14004f6e9:	pop    rcx
   14004f6ea:	add    edi,edi
   14004f6ec:	fwait
   14004f6ed:	pop    rcx
   14004f6ee:	add    edi,edi
   14004f6f0:	fwait
   14004f6f1:	pop    rax
   14004f6f2:	add    edi,edi
   14004f6f4:	(bad)  
   14004f6f5:	pop    rax
   14004f6f6:	add    edi,edi
   14004f6f8:	(bad)  
   14004f6f9:	pop    rax
   14004f6fa:	add    edi,edi
   14004f6fc:	cdq    
   14004f6fd:	push   rdi
   14004f6fe:	add    edi,edi
   14004f700:	cwde   
   14004f701:	push   rdi
   14004f702:	add    edi,edi
   14004f704:	cwde   
   14004f705:	push   rdi
   14004f706:	add    edi,edi
   14004f708:	cwde   
   14004f709:	push   rdi
   14004f70a:	add    edi,edi
   14004f70c:	xchg   edi,eax
   14004f70d:	push   rsi
   14004f70e:	add    edi,edi
   14004f710:	xchg   esi,eax
   14004f711:	push   rsi
   14004f712:	add    edi,edi
   14004f714:	mov    edx,DWORD PTR [rcx+0x8]
   14004f717:	call   FWORD PTR [rdi+0x3e]
   14004f71a:	sbb    bh,bh
   14004f71c:	lea    esi,[rax+0x4d]
   14004f71f:	jmp    rax
   14004f721:	(bad)  
   14004f722:	lahf   
   14004f723:	jmp    rax
   14004f725:	(bad)  
   14004f726:	lahf   
   14004f727:	jmp    rax
   14004f729:	(bad)  
   14004f72a:	lahf   
   14004f72b:	jmp    rax
   14004f72d:	(bad)  
   14004f72e:	lahf   
   14004f72f:	jmp    rax
   14004f731:	(bad)  
   14004f732:	lahf   
   14004f733:	jmp    rax
   14004f735:	(bad)  
   14004f736:	lahf   
   14004f737:	jmp    rax
   14004f739:	(bad)  
   14004f73a:	lahf   
   14004f73b:	jmp    rax
   14004f73d:	(bad)  
   14004f73e:	lahf   
   14004f73f:	jmp    rax
   14004f741:	(bad)  
   14004f742:	lahf   
   14004f743:	jmp    rax
   14004f745:	(bad)  
   14004f746:	lahf   
   14004f747:	jmp    rax
   14004f749:	(bad)  
   14004f74a:	lahf   
   14004f74b:	jmp    rax
   14004f74d:	(bad)  
   14004f74e:	lahf   
   14004f74f:	jmp    rax
   14004f751:	(bad)  
   14004f752:	lahf   
   14004f753:	jmp    rax
   14004f755:	(bad)  
   14004f756:	lahf   
   14004f757:	jmp    rax
   14004f759:	(bad)  
   14004f75a:	lahf   
   14004f75b:	jmp    rax
   14004f75d:	(bad)  
   14004f75e:	lahf   
   14004f75f:	jmp    rax
   14004f761:	(bad)  
   14004f762:	lahf   
   14004f763:	jmp    rax
   14004f765:	(bad)  
   14004f766:	lahf   
   14004f767:	jmp    rax
   14004f769:	(bad)  
   14004f76a:	lahf   
   14004f76b:	jmp    rax
   14004f76d:	(bad)  
   14004f76e:	lahf   
   14004f76f:	jmp    rax
   14004f771:	(bad)  
   14004f772:	lahf   
   14004f773:	jmp    rax
   14004f775:	(bad)  
   14004f776:	lahf   
   14004f777:	jmp    rax
   14004f779:	(bad)  
   14004f77a:	lahf   
   14004f77b:	jmp    rax
   14004f77d:	(bad)  
   14004f77e:	lahf   
   14004f77f:	jmp    rax
   14004f781:	(bad)  
   14004f782:	lahf   
   14004f783:	jmp    rax
   14004f785:	(bad)  
   14004f786:	lahf   
   14004f787:	jmp    rax
   14004f789:	(bad)  
   14004f78a:	lahf   
   14004f78b:	jmp    rax
   14004f78d:	(bad)  
   14004f78e:	lahf   
   14004f78f:	jmp    rax
   14004f791:	(bad)  
   14004f792:	lahf   
   14004f793:	jmp    rax
   14004f795:	(bad)  
   14004f796:	lahf   
   14004f797:	jmp    rax
   14004f799:	(bad)  
   14004f79a:	lahf   
   14004f79b:	jmp    rax
   14004f79d:	(bad)  
   14004f79e:	lahf   
   14004f79f:	jmp    rax
   14004f7a1:	(bad)  
   14004f7a2:	lahf   
   14004f7a3:	jmp    rax
   14004f7a5:	(bad)  
   14004f7a6:	lahf   
   14004f7a7:	jmp    rax
   14004f7a9:	(bad)  
   14004f7aa:	lahf   
   14004f7ab:	jmp    rax
   14004f7ad:	(bad)  
   14004f7ae:	lahf   
   14004f7af:	dec    DWORD PTR [rbp+0x5dff4d70]
   14004f7b5:	cmp    eax,0x4779ff1b
   14004f7ba:	or     bh,bh
   14004f7bc:	or     BYTE PTR [rax+0x6],0xff
   14004f7c0:	jg     0x14004f80a
   14004f7c2:	(bad)  
   14004f7c3:	(bad)  
   14004f7c4:	jg     0x14004f80e
   14004f7c6:	(bad)  
   14004f7c7:	(bad)  
   14004f7c8:	jle    0x14004f811
   14004f7ca:	(bad)  
   14004f7cb:	(bad)  
   14004f7cc:	jle    0x14004f815
   14004f7ce:	(bad)  
   14004f7cf:	(bad)  
   14004f7d0:	jge    0x14004f819
   14004f7d2:	(bad)  
   14004f7d3:	(bad)  
   14004f7d4:	jge    0x14004f81d
   14004f7d6:	(bad)  
   14004f7d7:	(bad)  
   14004f7d8:	jl     0x14004f820
   14004f7da:	(bad)  
   14004f7db:	(bad)  
   14004f7dc:	jnp    0x14004f824
   14004f7de:	(bad)  
   14004f7df:	(bad)  
   14004f7e0:	jnp    0x14004f828
   14004f7e2:	(bad)  
   14004f7e3:	(bad)  
   14004f7e4:	jnp    0x14004f82b
   14004f7e6:	(bad)  
   14004f7e7:	(bad)  
   14004f7e8:	jp     0x14004f82f
   14004f7ea:	(bad)  
   14004f7eb:	(bad)  
   14004f7ec:	jns    0x14004f833
   14004f7ee:	(bad)  
   14004f7ef:	(bad)  
   14004f7f0:	jns    0x14004f836
   14004f7f2:	(bad)  
   14004f7f3:	(bad)  
   14004f7f4:	js     0x14004f83a
   14004f7f6:	(bad)  
   14004f7f7:	(bad)  
   14004f7f8:	js     0x14004f83e
   14004f7fa:	(bad)  
   14004f7fb:	push   QWORD PTR [rdi+0x43]
   14004f7fe:	(bad)  
   14004f7ff:	push   QWORD PTR [rdi+0x43]
   14004f802:	(bad)  
   14004f803:	push   QWORD PTR [rsi+0x43]
   14004f806:	(bad)  
   14004f807:	push   QWORD PTR [rsi+0x42]
   14004f80a:	(bad)  
   14004f80b:	push   QWORD PTR [rbp+0x42]
   14004f80e:	(bad)  
   14004f80f:	push   QWORD PTR [rbp+0x42]
   14004f812:	(bad)  
   14004f813:	push   QWORD PTR [rcx+rax*2+0x7]
   14004f817:	push   QWORD PTR [rcx+rax*2+0x7]
   14004f81b:	push   QWORD PTR [rbx+0x41]
   14004f81e:	(bad)  
   14004f81f:	push   QWORD PTR [rbx+0x41]
   14004f822:	or     bh,bh
   14004f824:	jb     0x14004f866
   14004f826:	or     bh,bh
   14004f828:	jno    0x14004f86a
   14004f82a:	or     bh,bh
   14004f82c:	jno    0x14004f86d
   14004f82e:	or     bh,bh
   14004f830:	jno    0x14004f871
   14004f832:	or     bh,bh
   14004f834:	jo     0x14004f875
   14004f836:	or     bh,bh
   14004f838:	outs   dx,DWORD PTR ds:[rsi]
   14004f839:	(bad)  
   14004f83a:	or     bh,bh
   14004f83c:	outs   dx,DWORD PTR ds:[rsi]
   14004f83d:	ds or  bh,bh
   14004f840:	outs   dx,BYTE PTR ds:[rsi]
   14004f841:	ds or  bh,bh
   14004f844:	outs   dx,BYTE PTR ds:[rsi]
   14004f845:	ds or  bh,bh
	...
   14004f888:	test   eax,0xa8ff0161
   14004f88d:	(bad)  
   14004f88e:	add    edi,edi
   14004f890:	test   al,0x60
   14004f892:	add    edi,edi
   14004f894:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004f895:	(bad)  
   14004f896:	add    edi,edi
   14004f898:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004f899:	(bad)  
   14004f89a:	add    edi,edi
   14004f89c:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004f89d:	pop    rdi
   14004f89e:	add    edi,edi
   14004f8a0:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004f8a1:	pop    rdi
   14004f8a2:	add    bh,bh
   14004f8a4:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004f8a5:	pop    rdi
   14004f8a6:	add    bh,bh
   14004f8a8:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004f8a9:	pop    rsi
   14004f8aa:	add    bh,bh
   14004f8ac:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004f8ad:	pop    rsi
   14004f8ae:	add    bh,bh
   14004f8b0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004f8b1:	pop    rsi
   14004f8b2:	add    bh,bh
   14004f8b4:	movabs ds:0xa2ff025da2ff025d,eax
   14004f8bd:	pop    rbp
   14004f8be:	add    bh,bh
   14004f8c0:	movabs eax,ds:0xa0ff025ca1ff025d
   14004f8c9:	pop    rsp
   14004f8ca:	add    bh,bh
   14004f8cc:	movabs al,ds:0x9fff025b9fff025c
   14004f8d5:	pop    rbx
   14004f8d6:	add    bh,bh
   14004f8d8:	sahf   
   14004f8d9:	pop    rbx
   14004f8da:	add    bh,bh
   14004f8dc:	sahf   
   14004f8dd:	pop    rdx
   14004f8de:	add    bh,bh
   14004f8e0:	popf   
   14004f8e1:	pop    rdx
   14004f8e2:	add    edi,edi
   14004f8e4:	popf   
   14004f8e5:	pop    rdx
   14004f8e6:	add    edi,edi
   14004f8e8:	pushf  
   14004f8e9:	pop    rcx
   14004f8ea:	add    edi,edi
   14004f8ec:	pushf  
   14004f8ed:	pop    rcx
   14004f8ee:	add    edi,edi
   14004f8f0:	fwait
   14004f8f1:	pop    rcx
   14004f8f2:	add    edi,edi
   14004f8f4:	fwait
   14004f8f5:	pop    rax
   14004f8f6:	add    edi,edi
   14004f8f8:	(bad)  
   14004f8f9:	pop    rax
   14004f8fa:	add    edi,edi
   14004f8fc:	(bad)  
   14004f8fd:	pop    rax
   14004f8fe:	add    edi,edi
   14004f900:	cdq    
   14004f901:	push   rdi
   14004f902:	add    edi,edi
   14004f904:	cwde   
   14004f905:	push   rdi
   14004f906:	add    edi,edi
   14004f908:	cwde   
   14004f909:	push   rdi
   14004f90a:	add    edi,edi
   14004f90c:	cwde   
   14004f90d:	push   rdi
   14004f90e:	add    edi,edi
   14004f910:	nop
   14004f911:	push   rbx
   14004f912:	(bad)  
   14004f913:	jmp    QWORD PTR [rax+0x3e]
   14004f916:	sbb    bh,bh
   14004f918:	jne    0x14004f970
   14004f91a:	xor    eax,0xa0c7e0ff
   14004f91f:	jmp    rax
   14004f921:	(bad)  
   14004f922:	movabs al,ds:0xa0c7e0ffa0c7e0ff
   14004f92b:	jmp    rax
   14004f92d:	(bad)  
   14004f92e:	movabs al,ds:0xa0c7e0ffa0c7e0ff
   14004f937:	jmp    rax
   14004f939:	(bad)  
   14004f93a:	movabs al,ds:0xa0c7e0ffa0c7e0ff
   14004f943:	jmp    rax
   14004f945:	(bad)  
   14004f946:	movabs al,ds:0xa0c7e0ffa0c7e0ff
   14004f94f:	jmp    rax
   14004f951:	(bad)  
   14004f952:	movabs al,ds:0xa0c7e0ffa0c7e0ff
   14004f95b:	jmp    rax
   14004f95d:	(bad)  
   14004f95e:	movabs al,ds:0xa0c7e0ffa0c7e0ff
   14004f967:	jmp    rax
   14004f969:	(bad)  
   14004f96a:	movabs al,ds:0xa0c7e0ffa0c7e0ff
   14004f973:	jmp    rax
   14004f975:	(bad)  
   14004f976:	movabs al,ds:0xa0c7e0ffa0c7e0ff
   14004f97f:	jmp    rax
   14004f981:	(bad)  
   14004f982:	movabs al,ds:0xa0c7e0ffa0c7e0ff
   14004f98b:	jmp    rax
   14004f98d:	(bad)  
   14004f98e:	movabs al,ds:0xa0c7e0ffa0c7e0ff
   14004f997:	jmp    rax
   14004f999:	(bad)  
   14004f99a:	movabs al,ds:0xa0c7e0ffa0c7e0ff
   14004f9a3:	jmp    rax
   14004f9a5:	(bad)  
   14004f9a6:	movabs al,ds:0xa0c7e0ffa0c7e0ff
   14004f9af:	jmp    rax
   14004f9b1:	(bad)  
   14004f9b2:	movabs al,ds:0x1b3d5eff355675ff
   14004f9bb:	(bad)  
   14004f9bc:	jl     0x14004fa06
   14004f9be:	or     edi,edi
   14004f9c0:	or     BYTE PTR [rax+0x6],0xff
   14004f9c4:	jg     0x14004fa0e
   14004f9c6:	(bad)  
   14004f9c7:	(bad)  
   14004f9c8:	jg     0x14004fa12
   14004f9ca:	(bad)  
   14004f9cb:	(bad)  
   14004f9cc:	jle    0x14004fa15
   14004f9ce:	(bad)  
   14004f9cf:	(bad)  
   14004f9d0:	jle    0x14004fa19
   14004f9d2:	(bad)  
   14004f9d3:	(bad)  
   14004f9d4:	jge    0x14004fa1d
   14004f9d6:	(bad)  
   14004f9d7:	(bad)  
   14004f9d8:	jge    0x14004fa21
   14004f9da:	(bad)  
   14004f9db:	(bad)  
   14004f9dc:	jl     0x14004fa24
   14004f9de:	(bad)  
   14004f9df:	(bad)  
   14004f9e0:	jnp    0x14004fa28
   14004f9e2:	(bad)  
   14004f9e3:	(bad)  
   14004f9e4:	jnp    0x14004fa2c
   14004f9e6:	(bad)  
   14004f9e7:	(bad)  
   14004f9e8:	jnp    0x14004fa2f
   14004f9ea:	(bad)  
   14004f9eb:	(bad)  
   14004f9ec:	jp     0x14004fa33
   14004f9ee:	(bad)  
   14004f9ef:	(bad)  
   14004f9f0:	jns    0x14004fa37
   14004f9f2:	(bad)  
   14004f9f3:	(bad)  
   14004f9f4:	jns    0x14004fa3a
   14004f9f6:	(bad)  
   14004f9f7:	(bad)  
   14004f9f8:	js     0x14004fa3e
   14004f9fa:	(bad)  
   14004f9fb:	(bad)  
   14004f9fc:	js     0x14004fa42
   14004f9fe:	(bad)  
   14004f9ff:	push   QWORD PTR [rdi+0x43]
   14004fa02:	(bad)  
   14004fa03:	push   QWORD PTR [rdi+0x43]
   14004fa06:	(bad)  
   14004fa07:	push   QWORD PTR [rsi+0x43]
   14004fa0a:	(bad)  
   14004fa0b:	push   QWORD PTR [rsi+0x42]
   14004fa0e:	(bad)  
   14004fa0f:	push   QWORD PTR [rbp+0x42]
   14004fa12:	(bad)  
   14004fa13:	push   QWORD PTR [rbp+0x42]
   14004fa16:	(bad)  
   14004fa17:	push   QWORD PTR [rcx+rax*2+0x7]
   14004fa1b:	push   QWORD PTR [rcx+rax*2+0x7]
   14004fa1f:	push   QWORD PTR [rbx+0x41]
   14004fa22:	(bad)  
   14004fa23:	push   QWORD PTR [rbx+0x41]
   14004fa26:	or     bh,bh
   14004fa28:	jb     0x14004fa6a
   14004fa2a:	or     bh,bh
   14004fa2c:	jno    0x14004fa6e
   14004fa2e:	or     bh,bh
   14004fa30:	jno    0x14004fa71
   14004fa32:	or     bh,bh
   14004fa34:	jno    0x14004fa75
   14004fa36:	or     bh,bh
   14004fa38:	jo     0x14004fa79
   14004fa3a:	or     bh,bh
   14004fa3c:	outs   dx,DWORD PTR ds:[rsi]
   14004fa3d:	(bad)  
   14004fa3e:	or     bh,bh
   14004fa40:	outs   dx,DWORD PTR ds:[rsi]
   14004fa41:	ds or  bh,bh
   14004fa44:	outs   dx,BYTE PTR ds:[rsi]
   14004fa45:	ds or  bh,bh
	...
   14004fa88:	test   eax,0xa9ff0161
   14004fa8d:	(bad)  
   14004fa8e:	add    edi,edi
   14004fa90:	test   al,0x61
   14004fa92:	add    edi,edi
   14004fa94:	test   al,0x60
   14004fa96:	add    edi,edi
   14004fa98:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004fa99:	(bad)  
   14004fa9a:	add    edi,edi
   14004fa9c:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004fa9d:	(bad)  
   14004fa9e:	add    edi,edi
   14004faa0:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004faa1:	pop    rdi
   14004faa2:	add    edi,edi
   14004faa4:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004faa5:	pop    rdi
   14004faa6:	add    bh,bh
   14004faa8:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004faa9:	pop    rdi
   14004faaa:	add    bh,bh
   14004faac:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004faad:	pop    rsi
   14004faae:	add    bh,bh
   14004fab0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004fab1:	pop    rsi
   14004fab2:	add    bh,bh
   14004fab4:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004fab5:	pop    rsi
   14004fab6:	add    bh,bh
   14004fab8:	movabs ds:0xa2ff025da2ff025d,eax
   14004fac1:	pop    rbp
   14004fac2:	add    bh,bh
   14004fac4:	movabs eax,ds:0xa0ff025ca1ff025d
   14004facd:	pop    rsp
   14004face:	add    bh,bh
   14004fad0:	movabs al,ds:0x9fff025b9fff025c
   14004fad9:	pop    rbx
   14004fada:	add    bh,bh
   14004fadc:	sahf   
   14004fadd:	pop    rbx
   14004fade:	add    bh,bh
   14004fae0:	sahf   
   14004fae1:	pop    rdx
   14004fae2:	add    bh,bh
   14004fae4:	popf   
   14004fae5:	pop    rdx
   14004fae6:	add    edi,edi
   14004fae8:	popf   
   14004fae9:	pop    rdx
   14004faea:	add    edi,edi
   14004faec:	pushf  
   14004faed:	pop    rcx
   14004faee:	add    edi,edi
   14004faf0:	pushf  
   14004faf1:	pop    rcx
   14004faf2:	add    edi,edi
   14004faf4:	fwait
   14004faf5:	pop    rcx
   14004faf6:	add    edi,edi
   14004faf8:	fwait
   14004faf9:	pop    rax
   14004fafa:	add    edi,edi
   14004fafc:	(bad)  
   14004fafd:	pop    rax
   14004fafe:	add    edi,edi
   14004fb00:	(bad)  
   14004fb01:	pop    rax
   14004fb02:	add    edi,edi
   14004fb04:	cdq    
   14004fb05:	push   rdi
   14004fb06:	add    edi,edi
   14004fb08:	cwde   
   14004fb09:	push   rdi
   14004fb0a:	add    edi,edi
   14004fb0c:	xchg   esp,eax
   14004fb0d:	push   rbp
   14004fb0e:	add    eax,0x184267ff
   14004fb13:	jmp    FWORD PTR [rbp+0x4e]
   14004fb16:	cs (bad) 
   14004fb18:	fdivr  DWORD PTR [rdi-0x371e0067]
   14004fb1e:	movabs eax,ds:0xa1c8e1ffa1c8e1ff
   14004fb27:	jmp    rcx
   14004fb29:	enter  0xffa1,0xe1
   14004fb2d:	enter  0xffa1,0xe1
   14004fb31:	enter  0xffa1,0xe1
   14004fb35:	enter  0xffa1,0xe1
   14004fb39:	enter  0xffa1,0xe1
   14004fb3d:	enter  0xffa1,0xe1
   14004fb41:	enter  0xffa1,0xe1
   14004fb45:	enter  0xffa1,0xe1
   14004fb49:	enter  0xffa1,0xe1
   14004fb4d:	enter  0xffa1,0xe1
   14004fb51:	enter  0xffa1,0xe1
   14004fb55:	enter  0xffa1,0xe1
   14004fb59:	enter  0xffa1,0xe1
   14004fb5d:	enter  0xffa1,0xe1
   14004fb61:	enter  0xffa1,0xe1
   14004fb65:	enter  0xffa1,0xe1
   14004fb69:	enter  0xffa1,0xe1
   14004fb6d:	enter  0xffa1,0xe1
   14004fb71:	enter  0xffa1,0xe1
   14004fb75:	enter  0xffa1,0xe1
   14004fb79:	enter  0xffa1,0xe1
   14004fb7d:	enter  0xffa1,0xe1
   14004fb81:	enter  0xffa1,0xe1
   14004fb85:	enter  0xffa1,0xe1
   14004fb89:	enter  0xffa1,0xe1
   14004fb8d:	enter  0xffa1,0xe1
   14004fb91:	enter  0xffa1,0xe1
   14004fb95:	enter  0xffa1,0xe1
   14004fb99:	enter  0xffa1,0xe1
   14004fb9d:	enter  0xffa1,0xe1
   14004fba1:	enter  0xffa1,0xe1
   14004fba5:	enter  0xffa1,0xe1
   14004fba9:	enter  0xffa1,0xe1
   14004fbad:	enter  0xffa1,0xe1
   14004fbb1:	enter  0xffa1,0xd8
   14004fbb5:	mov    edi,0x4e6dff99
   14004fbba:	jmp    QWORD PTR cs:[rbx+0x3f]
   14004fbbe:	sbb    edi,edi
   14004fbc0:	jle    0x14004fc0a
   14004fbc2:	(bad)  
   14004fbc3:	inc    DWORD PTR [rax+0x7fff0648]
   14004fbc9:	rex.W (bad) 
   14004fbcb:	(bad)  
   14004fbcc:	jg     0x14004fc16
   14004fbce:	(bad)  
   14004fbcf:	(bad)  
   14004fbd0:	jle    0x14004fc19
   14004fbd2:	(bad)  
   14004fbd3:	(bad)  
   14004fbd4:	jle    0x14004fc1d
   14004fbd6:	(bad)  
   14004fbd7:	(bad)  
   14004fbd8:	jge    0x14004fc21
   14004fbda:	(bad)  
   14004fbdb:	(bad)  
   14004fbdc:	jge    0x14004fc25
   14004fbde:	(bad)  
   14004fbdf:	(bad)  
   14004fbe0:	jl     0x14004fc28
   14004fbe2:	(bad)  
   14004fbe3:	(bad)  
   14004fbe4:	jnp    0x14004fc2c
   14004fbe6:	(bad)  
   14004fbe7:	(bad)  
   14004fbe8:	jnp    0x14004fc30
   14004fbea:	(bad)  
   14004fbeb:	(bad)  
   14004fbec:	jnp    0x14004fc33
   14004fbee:	(bad)  
   14004fbef:	(bad)  
   14004fbf0:	jp     0x14004fc37
   14004fbf2:	(bad)  
   14004fbf3:	(bad)  
   14004fbf4:	jns    0x14004fc3b
   14004fbf6:	(bad)  
   14004fbf7:	(bad)  
   14004fbf8:	jns    0x14004fc3e
   14004fbfa:	(bad)  
   14004fbfb:	(bad)  
   14004fbfc:	js     0x14004fc42
   14004fbfe:	(bad)  
   14004fbff:	(bad)  
   14004fc00:	js     0x14004fc46
   14004fc02:	(bad)  
   14004fc03:	push   QWORD PTR [rdi+0x43]
   14004fc06:	(bad)  
   14004fc07:	push   QWORD PTR [rdi+0x43]
   14004fc0a:	(bad)  
   14004fc0b:	push   QWORD PTR [rsi+0x43]
   14004fc0e:	(bad)  
   14004fc0f:	push   QWORD PTR [rsi+0x42]
   14004fc12:	(bad)  
   14004fc13:	push   QWORD PTR [rbp+0x42]
   14004fc16:	(bad)  
   14004fc17:	push   QWORD PTR [rbp+0x42]
   14004fc1a:	(bad)  
   14004fc1b:	push   QWORD PTR [rcx+rax*2+0x7]
   14004fc1f:	push   QWORD PTR [rcx+rax*2+0x7]
   14004fc23:	push   QWORD PTR [rbx+0x41]
   14004fc26:	(bad)  
   14004fc27:	push   QWORD PTR [rbx+0x41]
   14004fc2a:	or     bh,bh
   14004fc2c:	jb     0x14004fc6e
   14004fc2e:	or     bh,bh
   14004fc30:	jno    0x14004fc72
   14004fc32:	or     bh,bh
   14004fc34:	jno    0x14004fc75
   14004fc36:	or     bh,bh
   14004fc38:	jno    0x14004fc79
   14004fc3a:	or     bh,bh
   14004fc3c:	jo     0x14004fc7d
   14004fc3e:	or     bh,bh
   14004fc40:	outs   dx,DWORD PTR ds:[rsi]
   14004fc41:	(bad)  
   14004fc42:	or     bh,bh
   14004fc44:	outs   dx,DWORD PTR ds:[rsi]
   14004fc45:	ds or  bh,bh
	...
   14004fc88:	stos   BYTE PTR es:[rdi],al
   14004fc89:	(bad)  {k1}{z}
   14004fc8e:	add    edi,edi
   14004fc90:	test   eax,0xa8ff0161
   14004fc95:	(bad)  
   14004fc96:	add    edi,edi
   14004fc98:	test   al,0x60
   14004fc9a:	add    edi,edi
   14004fc9c:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004fc9d:	(bad)  
   14004fc9e:	add    edi,edi
   14004fca0:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004fca1:	(bad)  
   14004fca2:	add    edi,edi
   14004fca4:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004fca5:	pop    rdi
   14004fca6:	add    edi,edi
   14004fca8:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004fca9:	pop    rdi
   14004fcaa:	add    bh,bh
   14004fcac:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004fcad:	pop    rdi
   14004fcae:	add    bh,bh
   14004fcb0:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004fcb1:	pop    rsi
   14004fcb2:	add    bh,bh
   14004fcb4:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004fcb5:	pop    rsi
   14004fcb6:	add    bh,bh
   14004fcb8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004fcb9:	pop    rsi
   14004fcba:	add    bh,bh
   14004fcbc:	movabs ds:0xa2ff025da2ff025d,eax
   14004fcc5:	pop    rbp
   14004fcc6:	add    bh,bh
   14004fcc8:	movabs eax,ds:0xa0ff025ca1ff025d
   14004fcd1:	pop    rsp
   14004fcd2:	add    bh,bh
   14004fcd4:	movabs al,ds:0x9fff025b9fff025c
   14004fcdd:	pop    rbx
   14004fcde:	add    bh,bh
   14004fce0:	sahf   
   14004fce1:	pop    rbx
   14004fce2:	add    bh,bh
   14004fce4:	sahf   
   14004fce5:	pop    rdx
   14004fce6:	add    bh,bh
   14004fce8:	popf   
   14004fce9:	pop    rdx
   14004fcea:	add    edi,edi
   14004fcec:	popf   
   14004fced:	pop    rdx
   14004fcee:	add    edi,edi
   14004fcf0:	pushf  
   14004fcf1:	pop    rcx
   14004fcf2:	add    edi,edi
   14004fcf4:	pushf  
   14004fcf5:	pop    rcx
   14004fcf6:	add    edi,edi
   14004fcf8:	fwait
   14004fcf9:	pop    rcx
   14004fcfa:	add    edi,edi
   14004fcfc:	fwait
   14004fcfd:	pop    rax
   14004fcfe:	add    edi,edi
   14004fd00:	(bad)  
   14004fd01:	pop    rax
   14004fd02:	add    edi,edi
   14004fd04:	(bad)  
   14004fd05:	pop    rax
   14004fd06:	add    edi,edi
   14004fd08:	cdq    
   14004fd09:	push   rdi
   14004fd0a:	add    edi,edi
   14004fd0c:	jo     0x14004fd54
   14004fd0e:	adc    eax,0x254665ff
   14004fd13:	dec    eax
   14004fd15:	scas   al,BYTE PTR es:[rdi]
   14004fd16:	mov    edi,edi
   14004fd18:	loope  0x14004fce3
   14004fd1a:	movabs ds:0xa2c9e1ffa2c9e1ff,al
   14004fd23:	jmp    rcx
   14004fd25:	leave  
   14004fd26:	movabs ds:0xa2c9e1ffa2c9e1ff,al
   14004fd2f:	jmp    rcx
   14004fd31:	leave  
   14004fd32:	movabs ds:0xa2c9e1ffa2c9e1ff,al
   14004fd3b:	jmp    rcx
   14004fd3d:	leave  
   14004fd3e:	movabs ds:0xa2c9e1ffa2c9e1ff,al
   14004fd47:	jmp    rcx
   14004fd49:	leave  
   14004fd4a:	movabs ds:0xa2c9e1ffa2c9e1ff,al
   14004fd53:	jmp    rcx
   14004fd55:	leave  
   14004fd56:	movabs ds:0xa2c9e1ffa2c9e1ff,al
   14004fd5f:	jmp    rcx
   14004fd61:	leave  
   14004fd62:	movabs ds:0xa2c9e1ffa2c9e1ff,al
   14004fd6b:	jmp    rcx
   14004fd6d:	leave  
   14004fd6e:	movabs ds:0xa2c9e1ffa2c9e1ff,al
   14004fd77:	jmp    rcx
   14004fd79:	leave  
   14004fd7a:	movabs ds:0xa2c9e1ffa2c9e1ff,al
   14004fd83:	jmp    rcx
   14004fd85:	leave  
   14004fd86:	movabs ds:0xa2c9e1ffa2c9e1ff,al
   14004fd8f:	jmp    rcx
   14004fd91:	leave  
   14004fd92:	movabs ds:0xa2c9e1ffa2c9e1ff,al
   14004fd9b:	jmp    rcx
   14004fd9d:	leave  
   14004fd9e:	movabs ds:0xa2c9e1ffa2c9e1ff,al
   14004fda7:	jmp    rcx
   14004fda9:	leave  
   14004fdaa:	movabs ds:0xa2c9e1ffa2c9e1ff,al
   14004fdb3:	jmp    rcx
   14004fdb5:	leave  
   14004fdb6:	movabs ds:0x254665ff89aec8ff,al
   14004fdbf:	jmp    FWORD PTR [rax+0x41]
   14004fdc2:	(bad)  
   14004fdc3:	inc    DWORD PTR [rax-0x7f00f9b7]
   14004fdc9:	rex.W (bad) 
   14004fdcb:	(bad)  
   14004fdcc:	jg     0x14004fe16
   14004fdce:	(bad)  
   14004fdcf:	(bad)  
   14004fdd0:	jg     0x14004fe1a
   14004fdd2:	(bad)  
   14004fdd3:	(bad)  
   14004fdd4:	jle    0x14004fe1d
   14004fdd6:	(bad)  
   14004fdd7:	(bad)  
   14004fdd8:	jle    0x14004fe21
   14004fdda:	(bad)  
   14004fddb:	(bad)  
   14004fddc:	jge    0x14004fe25
   14004fdde:	(bad)  
   14004fddf:	(bad)  
   14004fde0:	jge    0x14004fe29
   14004fde2:	(bad)  
   14004fde3:	(bad)  
   14004fde4:	jl     0x14004fe2c
   14004fde6:	(bad)  
   14004fde7:	(bad)  
   14004fde8:	jnp    0x14004fe30
   14004fdea:	(bad)  
   14004fdeb:	(bad)  
   14004fdec:	jnp    0x14004fe34
   14004fdee:	(bad)  
   14004fdef:	(bad)  
   14004fdf0:	jnp    0x14004fe37
   14004fdf2:	(bad)  
   14004fdf3:	(bad)  
   14004fdf4:	jp     0x14004fe3b
   14004fdf6:	(bad)  
   14004fdf7:	(bad)  
   14004fdf8:	jns    0x14004fe3f
   14004fdfa:	(bad)  
   14004fdfb:	(bad)  
   14004fdfc:	jns    0x14004fe42
   14004fdfe:	(bad)  
   14004fdff:	(bad)  
   14004fe00:	js     0x14004fe46
   14004fe02:	(bad)  
   14004fe03:	(bad)  
   14004fe04:	js     0x14004fe4a
   14004fe06:	(bad)  
   14004fe07:	push   QWORD PTR [rdi+0x43]
   14004fe0a:	(bad)  
   14004fe0b:	push   QWORD PTR [rdi+0x43]
   14004fe0e:	(bad)  
   14004fe0f:	push   QWORD PTR [rsi+0x43]
   14004fe12:	(bad)  
   14004fe13:	push   QWORD PTR [rsi+0x42]
   14004fe16:	(bad)  
   14004fe17:	push   QWORD PTR [rbp+0x42]
   14004fe1a:	(bad)  
   14004fe1b:	push   QWORD PTR [rbp+0x42]
   14004fe1e:	(bad)  
   14004fe1f:	push   QWORD PTR [rcx+rax*2+0x7]
   14004fe23:	push   QWORD PTR [rcx+rax*2+0x7]
   14004fe27:	push   QWORD PTR [rbx+0x41]
   14004fe2a:	(bad)  
   14004fe2b:	push   QWORD PTR [rbx+0x41]
   14004fe2e:	or     bh,bh
   14004fe30:	jb     0x14004fe72
   14004fe32:	or     bh,bh
   14004fe34:	jno    0x14004fe76
   14004fe36:	or     bh,bh
   14004fe38:	jno    0x14004fe79
   14004fe3a:	or     bh,bh
   14004fe3c:	jno    0x14004fe7d
   14004fe3e:	or     bh,bh
   14004fe40:	jo     0x14004fe81
   14004fe42:	or     bh,bh
   14004fe44:	outs   dx,DWORD PTR ds:[rsi]
   14004fe45:	(bad)  
   14004fe46:	or     bh,bh
	...
   14004fe88:	stos   DWORD PTR es:[rdi],eax
   14004fe89:	(bad)  {k2}{z}
   14004fe8e:	add    edi,edi
   14004fe90:	test   eax,0xa9ff0161
   14004fe95:	(bad)  
   14004fe96:	add    edi,edi
   14004fe98:	test   al,0x61
   14004fe9a:	add    edi,edi
   14004fe9c:	test   al,0x60
   14004fe9e:	add    edi,edi
   14004fea0:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004fea1:	(bad)  
   14004fea2:	add    edi,edi
   14004fea4:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004fea5:	(bad)  
   14004fea6:	add    edi,edi
   14004fea8:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004fea9:	pop    rdi
   14004feaa:	add    edi,edi
   14004feac:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004fead:	pop    rdi
   14004feae:	add    bh,bh
   14004feb0:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004feb1:	pop    rdi
   14004feb2:	add    bh,bh
   14004feb4:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004feb5:	pop    rsi
   14004feb6:	add    bh,bh
   14004feb8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004feb9:	pop    rsi
   14004feba:	add    bh,bh
   14004febc:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004febd:	pop    rsi
   14004febe:	add    bh,bh
   14004fec0:	movabs ds:0xa2ff025da2ff025d,eax
   14004fec9:	pop    rbp
   14004feca:	add    bh,bh
   14004fecc:	movabs eax,ds:0xa0ff025ca1ff025d
   14004fed5:	pop    rsp
   14004fed6:	add    bh,bh
   14004fed8:	movabs al,ds:0x9fff025b9fff025c
   14004fee1:	pop    rbx
   14004fee2:	add    bh,bh
   14004fee4:	sahf   
   14004fee5:	pop    rbx
   14004fee6:	add    bh,bh
   14004fee8:	sahf   
   14004fee9:	pop    rdx
   14004feea:	add    bh,bh
   14004feec:	popf   
   14004feed:	pop    rdx
   14004feee:	add    edi,edi
   14004fef0:	popf   
   14004fef1:	pop    rdx
   14004fef2:	add    edi,edi
   14004fef4:	pushf  
   14004fef5:	pop    rcx
   14004fef6:	add    edi,edi
   14004fef8:	pushf  
   14004fef9:	pop    rcx
   14004fefa:	add    edi,edi
   14004fefc:	fwait
   14004fefd:	pop    rcx
   14004fefe:	add    edi,edi
   14004ff00:	fwait
   14004ff01:	pop    rax
   14004ff02:	add    edi,edi
   14004ff04:	(bad)  
   14004ff05:	pop    rax
   14004ff06:	add    edi,edi
   14004ff08:	je     0x14004ff52
   14004ff0a:	adc    al,0xff
   14004ff0c:	pop    rbp
   14004ff0d:	ds (bad) 
   14004ff0f:	(bad)  
   14004ff10:	mov    eax,0xe2ff7a9e
   14004ff15:	leave  
   14004ff16:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004ff17:	jmp    rdx
   14004ff19:	leave  
   14004ff1a:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004ff1b:	jmp    rdx
   14004ff1d:	leave  
   14004ff1e:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004ff1f:	jmp    rdx
   14004ff21:	leave  
   14004ff22:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004ff23:	jmp    rdx
   14004ff25:	leave  
   14004ff26:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004ff27:	jmp    rdx
   14004ff29:	leave  
   14004ff2a:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004ff2b:	jmp    rdx
   14004ff2d:	leave  
   14004ff2e:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004ff2f:	jmp    rdx
   14004ff31:	leave  
   14004ff32:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004ff33:	jmp    rdx
   14004ff35:	leave  
   14004ff36:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004ff37:	jmp    rdx
   14004ff39:	leave  
   14004ff3a:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004ff3b:	jmp    rdx
   14004ff3d:	leave  
   14004ff3e:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004ff3f:	jmp    rdx
   14004ff41:	leave  
   14004ff42:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004ff43:	jmp    rdx
   14004ff45:	leave  
   14004ff46:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004ff47:	jmp    rdx
   14004ff49:	leave  
   14004ff4a:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004ff4b:	jmp    rdx
   14004ff4d:	leave  
   14004ff4e:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004ff4f:	jmp    rdx
   14004ff51:	leave  
   14004ff52:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004ff53:	jmp    rdx
   14004ff55:	leave  
   14004ff56:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004ff57:	jmp    rdx
   14004ff59:	leave  
   14004ff5a:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004ff5b:	jmp    rdx
   14004ff5d:	leave  
   14004ff5e:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004ff5f:	jmp    rdx
   14004ff61:	leave  
   14004ff62:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004ff63:	jmp    rdx
   14004ff65:	leave  
   14004ff66:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004ff67:	jmp    rdx
   14004ff69:	leave  
   14004ff6a:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004ff6b:	jmp    rdx
   14004ff6d:	leave  
   14004ff6e:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004ff6f:	jmp    rdx
   14004ff71:	leave  
   14004ff72:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004ff73:	jmp    rdx
   14004ff75:	leave  
   14004ff76:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004ff77:	jmp    rdx
   14004ff79:	leave  
   14004ff7a:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004ff7b:	jmp    rdx
   14004ff7d:	leave  
   14004ff7e:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004ff7f:	jmp    rdx
   14004ff81:	leave  
   14004ff82:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004ff83:	jmp    rdx
   14004ff85:	leave  
   14004ff86:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004ff87:	jmp    rdx
   14004ff89:	leave  
   14004ff8a:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004ff8b:	jmp    rdx
   14004ff8d:	leave  
   14004ff8e:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004ff8f:	jmp    rdx
   14004ff91:	leave  
   14004ff92:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004ff93:	jmp    rdx
   14004ff95:	leave  
   14004ff96:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004ff97:	jmp    rdx
   14004ff99:	leave  
   14004ff9a:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004ff9b:	jmp    rdx
   14004ff9d:	leave  
   14004ff9e:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004ff9f:	jmp    rdx
   14004ffa1:	leave  
   14004ffa2:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004ffa3:	jmp    rdx
   14004ffa5:	leave  
   14004ffa6:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004ffa7:	jmp    rdx
   14004ffa9:	leave  
   14004ffaa:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004ffab:	jmp    rdx
   14004ffad:	leave  
   14004ffae:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004ffaf:	jmp    rdx
   14004ffb1:	leave  
   14004ffb2:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004ffb3:	jmp    rdx
   14004ffb5:	leave  
   14004ffb6:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004ffb7:	jmp    rdx
   14004ffb9:	leave  
   14004ffba:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004ffbb:	(bad)  
   14004ffbc:	mov    eax,0x5dff7a9e
   14004ffc1:	ds (bad) 
   14004ffc3:	jmp    FWORD PTR [rdx+0x42]
   14004ffc6:	adc    eax,0x64980ff
   14004ffcb:	inc    DWORD PTR [rax+0x7fff0648]
   14004ffd1:	rex.W (bad) 
   14004ffd3:	(bad)  
   14004ffd4:	jg     0x14005001e
   14004ffd6:	(bad)  
   14004ffd7:	(bad)  
   14004ffd8:	jle    0x140050021
   14004ffda:	(bad)  
   14004ffdb:	(bad)  
   14004ffdc:	jle    0x140050025
   14004ffde:	(bad)  
   14004ffdf:	(bad)  
   14004ffe0:	jge    0x140050029
   14004ffe2:	(bad)  
   14004ffe3:	(bad)  
   14004ffe4:	jge    0x14005002d
   14004ffe6:	(bad)  
   14004ffe7:	(bad)  
   14004ffe8:	jl     0x140050030
   14004ffea:	(bad)  
   14004ffeb:	(bad)  
   14004ffec:	jnp    0x140050034
   14004ffee:	(bad)  
   14004ffef:	(bad)  
   14004fff0:	jnp    0x140050038
   14004fff2:	(bad)  
   14004fff3:	(bad)  
   14004fff4:	jnp    0x14005003b
   14004fff6:	(bad)  
   14004fff7:	(bad)  
   14004fff8:	jp     0x14005003f
   14004fffa:	(bad)  
   14004fffb:	(bad)  
   14004fffc:	jns    0x140050043
   14004fffe:	(bad)  
   14004ffff:	(bad)  
   140050000:	jns    0x140050046
   140050002:	(bad)  
   140050003:	(bad)  
   140050004:	js     0x14005004a
   140050006:	(bad)  
   140050007:	(bad)  
   140050008:	js     0x14005004e
   14005000a:	(bad)  
   14005000b:	push   QWORD PTR [rdi+0x43]
   14005000e:	(bad)  
   14005000f:	push   QWORD PTR [rdi+0x43]
   140050012:	(bad)  
   140050013:	push   QWORD PTR [rsi+0x43]
   140050016:	(bad)  
   140050017:	push   QWORD PTR [rsi+0x42]
   14005001a:	(bad)  
   14005001b:	push   QWORD PTR [rbp+0x42]
   14005001e:	(bad)  
   14005001f:	push   QWORD PTR [rbp+0x42]
   140050022:	(bad)  
   140050023:	push   QWORD PTR [rcx+rax*2+0x7]
   140050027:	push   QWORD PTR [rcx+rax*2+0x7]
   14005002b:	push   QWORD PTR [rbx+0x41]
   14005002e:	(bad)  
   14005002f:	push   QWORD PTR [rbx+0x41]
   140050032:	or     bh,bh
   140050034:	jb     0x140050076
   140050036:	or     bh,bh
   140050038:	jno    0x14005007a
   14005003a:	or     bh,bh
   14005003c:	jno    0x14005007d
   14005003e:	or     bh,bh
   140050040:	jno    0x140050081
   140050042:	or     bh,bh
   140050044:	jo     0x140050085
   140050046:	or     bh,bh
	...
   140050088:	stos   DWORD PTR es:[rdi],eax
   140050089:	(bad)  {k3}{z}
   14005008e:	add    edi,edi
   140050090:	stos   BYTE PTR es:[rdi],al
   140050091:	(bad)  {k1}{z}
   140050096:	add    edi,edi
   140050098:	test   eax,0xa8ff0161
   14005009d:	(bad)  
   14005009e:	add    edi,edi
   1400500a0:	test   al,0x60
   1400500a2:	add    edi,edi
   1400500a4:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400500a5:	(bad)  
   1400500a6:	add    edi,edi
   1400500a8:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400500a9:	(bad)  
   1400500aa:	add    edi,edi
   1400500ac:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400500ad:	pop    rdi
   1400500ae:	add    edi,edi
   1400500b0:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400500b1:	pop    rdi
   1400500b2:	add    bh,bh
   1400500b4:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400500b5:	pop    rdi
   1400500b6:	add    bh,bh
   1400500b8:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400500b9:	pop    rsi
   1400500ba:	add    bh,bh
   1400500bc:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400500bd:	pop    rsi
   1400500be:	add    bh,bh
   1400500c0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400500c1:	pop    rsi
   1400500c2:	add    bh,bh
   1400500c4:	movabs ds:0xa2ff025da2ff025d,eax
   1400500cd:	pop    rbp
   1400500ce:	add    bh,bh
   1400500d0:	movabs eax,ds:0xa0ff025ca1ff025d
   1400500d9:	pop    rsp
   1400500da:	add    bh,bh
   1400500dc:	movabs al,ds:0x9fff025b9fff025c
   1400500e5:	pop    rbx
   1400500e6:	add    bh,bh
   1400500e8:	sahf   
   1400500e9:	pop    rbx
   1400500ea:	add    bh,bh
   1400500ec:	sahf   
   1400500ed:	pop    rdx
   1400500ee:	add    bh,bh
   1400500f0:	popf   
   1400500f1:	pop    rdx
   1400500f2:	add    edi,edi
   1400500f4:	popf   
   1400500f5:	pop    rdx
   1400500f6:	add    edi,edi
   1400500f8:	pushf  
   1400500f9:	pop    rcx
   1400500fa:	add    edi,edi
   1400500fc:	pushf  
   1400500fd:	pop    rcx
   1400500fe:	add    edi,edi
   140050100:	fwait
   140050101:	pop    rcx
   140050102:	add    edi,edi
   140050104:	test   BYTE PTR [rdi+0xd],cl
   140050107:	call   FWORD PTR [rsi+0x3f]
   14005010a:	(bad)  
   14005010b:	push   QWORD PTR [rcx-0x1d008d6a]
   140050111:	retf   0xffa5
   140050114:	loop   0x1400500e0
   140050116:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140050117:	jmp    rdx
   140050119:	retf   0xffa5
   14005011c:	loop   0x1400500e8
   14005011e:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14005011f:	jmp    rdx
   140050121:	retf   0xffa5
   140050124:	loop   0x1400500f0
   140050126:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140050127:	jmp    rdx
   140050129:	retf   0xffa5
   14005012c:	loop   0x1400500f8
   14005012e:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14005012f:	jmp    rdx
   140050131:	retf   0xffa5
   140050134:	loop   0x140050100
   140050136:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140050137:	jmp    rdx
   140050139:	retf   0xffa5
   14005013c:	loop   0x140050108
   14005013e:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14005013f:	jmp    rdx
   140050141:	retf   0xffa5
   140050144:	loop   0x140050110
   140050146:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140050147:	jmp    rdx
   140050149:	retf   0xffa5
   14005014c:	loop   0x140050118
   14005014e:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14005014f:	jmp    rdx
   140050151:	retf   0xffa5
   140050154:	loop   0x140050120
   140050156:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140050157:	jmp    rdx
   140050159:	retf   0xffa5
   14005015c:	loop   0x140050128
   14005015e:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14005015f:	jmp    rdx
   140050161:	retf   0xffa5
   140050164:	loop   0x140050130
   140050166:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140050167:	jmp    rdx
   140050169:	retf   0xffa5
   14005016c:	loop   0x140050138
   14005016e:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14005016f:	jmp    rdx
   140050171:	retf   0xffa5
   140050174:	loop   0x140050140
   140050176:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140050177:	jmp    rdx
   140050179:	retf   0xffa5
   14005017c:	loop   0x140050148
   14005017e:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14005017f:	jmp    rdx
   140050181:	retf   0xffa5
   140050184:	loop   0x140050150
   140050186:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140050187:	jmp    rdx
   140050189:	retf   0xffa5
   14005018c:	loop   0x140050158
   14005018e:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14005018f:	jmp    rdx
   140050191:	retf   0xffa5
   140050194:	loop   0x140050160
   140050196:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140050197:	jmp    rdx
   140050199:	retf   0xffa5
   14005019c:	loop   0x140050168
   14005019e:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14005019f:	jmp    rdx
   1400501a1:	retf   0xffa5
   1400501a4:	loop   0x140050170
   1400501a6:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400501a7:	jmp    rdx
   1400501a9:	retf   0xffa5
   1400501ac:	loop   0x140050178
   1400501ae:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400501af:	jmp    rdx
   1400501b1:	retf   0xffa5
   1400501b4:	loop   0x140050180
   1400501b6:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400501b7:	jmp    rdx
   1400501b9:	retf   0xffa5
   1400501bc:	loop   0x140050188
   1400501be:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400501bf:	push   QWORD PTR [rcx+0x5eff7296]
   1400501c5:	(bad)  
   1400501c6:	(bad)  
   1400501c7:	push   QWORD PTR [rbp+rax*2+0xf]
   1400501cb:	inc    DWORD PTR [rax-0x7f00f9b7]
   1400501d1:	rex.W (bad) 
   1400501d3:	(bad)  
   1400501d4:	jg     0x14005021e
   1400501d6:	(bad)  
   1400501d7:	(bad)  
   1400501d8:	jg     0x140050222
   1400501da:	(bad)  
   1400501db:	(bad)  
   1400501dc:	jle    0x140050225
   1400501de:	(bad)  
   1400501df:	(bad)  
   1400501e0:	jle    0x140050229
   1400501e2:	(bad)  
   1400501e3:	(bad)  
   1400501e4:	jge    0x14005022d
   1400501e6:	(bad)  
   1400501e7:	(bad)  
   1400501e8:	jge    0x140050231
   1400501ea:	(bad)  
   1400501eb:	(bad)  
   1400501ec:	jl     0x140050234
   1400501ee:	(bad)  
   1400501ef:	(bad)  
   1400501f0:	jnp    0x140050238
   1400501f2:	(bad)  
   1400501f3:	(bad)  
   1400501f4:	jnp    0x14005023c
   1400501f6:	(bad)  
   1400501f7:	(bad)  
   1400501f8:	jnp    0x14005023f
   1400501fa:	(bad)  
   1400501fb:	(bad)  
   1400501fc:	jp     0x140050243
   1400501fe:	(bad)  
   1400501ff:	(bad)  
   140050200:	jns    0x140050247
   140050202:	(bad)  
   140050203:	(bad)  
   140050204:	jns    0x14005024a
   140050206:	(bad)  
   140050207:	(bad)  
   140050208:	js     0x14005024e
   14005020a:	(bad)  
   14005020b:	(bad)  
   14005020c:	js     0x140050252
   14005020e:	(bad)  
   14005020f:	push   QWORD PTR [rdi+0x43]
   140050212:	(bad)  
   140050213:	push   QWORD PTR [rdi+0x43]
   140050216:	(bad)  
   140050217:	push   QWORD PTR [rsi+0x43]
   14005021a:	(bad)  
   14005021b:	push   QWORD PTR [rsi+0x42]
   14005021e:	(bad)  
   14005021f:	push   QWORD PTR [rbp+0x42]
   140050222:	(bad)  
   140050223:	push   QWORD PTR [rbp+0x42]
   140050226:	(bad)  
   140050227:	push   QWORD PTR [rcx+rax*2+0x7]
   14005022b:	push   QWORD PTR [rcx+rax*2+0x7]
   14005022f:	push   QWORD PTR [rbx+0x41]
   140050232:	(bad)  
   140050233:	push   QWORD PTR [rbx+0x41]
   140050236:	or     bh,bh
   140050238:	jb     0x14005027a
   14005023a:	or     bh,bh
   14005023c:	jno    0x14005027e
   14005023e:	or     bh,bh
   140050240:	jno    0x140050281
   140050242:	or     bh,bh
   140050244:	jno    0x140050285
   140050246:	or     bh,bh
	...
   140050288:	stos   DWORD PTR es:[rdi],eax
   140050289:	(bad)  {k3}{z}
   14005028e:	add    edi,edi
   140050290:	stos   DWORD PTR es:[rdi],eax
   140050291:	(bad)  {k2}{z}
   140050296:	add    edi,edi
   140050298:	test   eax,0xa9ff0161
   14005029d:	(bad)  
   14005029e:	add    edi,edi
   1400502a0:	test   al,0x61
   1400502a2:	add    edi,edi
   1400502a4:	test   al,0x60
   1400502a6:	add    edi,edi
   1400502a8:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400502a9:	(bad)  
   1400502aa:	add    edi,edi
   1400502ac:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400502ad:	(bad)  
   1400502ae:	add    edi,edi
   1400502b0:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400502b1:	pop    rdi
   1400502b2:	add    edi,edi
   1400502b4:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400502b5:	pop    rdi
   1400502b6:	add    bh,bh
   1400502b8:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400502b9:	pop    rdi
   1400502ba:	add    bh,bh
   1400502bc:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400502bd:	pop    rsi
   1400502be:	add    bh,bh
   1400502c0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400502c1:	pop    rsi
   1400502c2:	add    bh,bh
   1400502c4:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400502c5:	pop    rsi
   1400502c6:	add    bh,bh
   1400502c8:	movabs ds:0xa2ff025da2ff025d,eax
   1400502d1:	pop    rbp
   1400502d2:	add    bh,bh
   1400502d4:	movabs eax,ds:0xa0ff025ca1ff025d
   1400502dd:	pop    rsp
   1400502de:	add    bh,bh
   1400502e0:	movabs al,ds:0x9fff025b9fff025c
   1400502e9:	pop    rbx
   1400502ea:	add    bh,bh
   1400502ec:	sahf   
   1400502ed:	pop    rbx
   1400502ee:	add    bh,bh
   1400502f0:	sahf   
   1400502f1:	pop    rdx
   1400502f2:	add    bh,bh
   1400502f4:	popf   
   1400502f5:	pop    rdx
   1400502f6:	add    edi,edi
   1400502f8:	popf   
   1400502f9:	pop    rdx
   1400502fa:	add    edi,edi
   1400502fc:	pushf  
   1400502fd:	pop    rcx
   1400502fe:	add    edi,edi
   140050300:	mov    WORD PTR [rbx+0xa],ss
   140050303:	call   FWORD PTR [rsi+0x3f]
   140050306:	(bad)  
   140050307:	call   QWORD PTR [rax-0x1c00ae8c]
   14005030d:	retf   
   14005030e:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14005030f:	jmp    rbx
   140050311:	retf   
   140050312:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140050313:	jmp    rbx
   140050315:	retf   
   140050316:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140050317:	jmp    rbx
   140050319:	retf   
   14005031a:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14005031b:	jmp    rbx
   14005031d:	retf   
   14005031e:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14005031f:	jmp    rbx
   140050321:	retf   
   140050322:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140050323:	jmp    rbx
   140050325:	retf   
   140050326:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140050327:	jmp    rbx
   140050329:	retf   
   14005032a:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14005032b:	jmp    rbx
   14005032d:	retf   
   14005032e:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14005032f:	jmp    rbx
   140050331:	retf   
   140050332:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140050333:	jmp    rbx
   140050335:	retf   
   140050336:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140050337:	jmp    rbx
   140050339:	retf   
   14005033a:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14005033b:	jmp    rbx
   14005033d:	retf   
   14005033e:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14005033f:	jmp    rbx
   140050341:	retf   
   140050342:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140050343:	jmp    rbx
   140050345:	retf   
   140050346:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140050347:	jmp    rbx
   140050349:	retf   
   14005034a:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14005034b:	jmp    rbx
   14005034d:	retf   
   14005034e:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14005034f:	jmp    rbx
   140050351:	retf   
   140050352:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140050353:	jmp    rbx
   140050355:	retf   
   140050356:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140050357:	jmp    rbx
   140050359:	retf   
   14005035a:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14005035b:	jmp    rbx
   14005035d:	retf   
   14005035e:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14005035f:	jmp    rbx
   140050361:	retf   
   140050362:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140050363:	jmp    rbx
   140050365:	retf   
   140050366:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140050367:	jmp    rbx
   140050369:	retf   
   14005036a:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14005036b:	jmp    rbx
   14005036d:	retf   
   14005036e:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14005036f:	jmp    rbx
   140050371:	retf   
   140050372:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140050373:	jmp    rbx
   140050375:	retf   
   140050376:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140050377:	jmp    rbx
   140050379:	retf   
   14005037a:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14005037b:	jmp    rbx
   14005037d:	retf   
   14005037e:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14005037f:	jmp    rbx
   140050381:	retf   
   140050382:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140050383:	jmp    rbx
   140050385:	retf   
   140050386:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140050387:	jmp    rbx
   140050389:	retf   
   14005038a:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14005038b:	jmp    rbx
   14005038d:	retf   
   14005038e:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14005038f:	jmp    rbx
   140050391:	retf   
   140050392:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140050393:	jmp    rbx
   140050395:	retf   
   140050396:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140050397:	jmp    rbx
   140050399:	retf   
   14005039a:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14005039b:	jmp    rbx
   14005039d:	retf   
   14005039e:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14005039f:	jmp    rbx
   1400503a1:	retf   
   1400503a2:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400503a3:	jmp    rbx
   1400503a5:	retf   
   1400503a6:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400503a7:	jmp    rbx
   1400503a9:	retf   
   1400503aa:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400503ab:	jmp    rbx
   1400503ad:	retf   
   1400503ae:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400503af:	jmp    rbx
   1400503b1:	retf   
   1400503b2:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400503b3:	jmp    rbx
   1400503b5:	retf   
   1400503b6:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400503b7:	jmp    rbx
   1400503b9:	retf   
   1400503ba:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400503bb:	jmp    rbx
   1400503bd:	retf   
   1400503be:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400503bf:	jmp    rbx
   1400503c1:	retf   
   1400503c2:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400503c3:	call   QWORD PTR [rax+0x5eff5174]
   1400503c9:	(bad)  
   1400503ca:	(bad)  
   1400503cb:	(bad)  
   1400503cc:	js     0x140050415
   1400503ce:	or     al,0xff
   1400503d0:	or     BYTE PTR [rcx+0x6],0xff
   1400503d4:	or     BYTE PTR [rax+0x6],0xff
   1400503d8:	jg     0x140050422
   1400503da:	(bad)  
   1400503db:	(bad)  
   1400503dc:	jg     0x140050426
   1400503de:	(bad)  
   1400503df:	(bad)  
   1400503e0:	jle    0x140050429
   1400503e2:	(bad)  
   1400503e3:	(bad)  
   1400503e4:	jle    0x14005042d
   1400503e6:	(bad)  
   1400503e7:	(bad)  
   1400503e8:	jge    0x140050431
   1400503ea:	(bad)  
   1400503eb:	(bad)  
   1400503ec:	jge    0x140050435
   1400503ee:	(bad)  
   1400503ef:	(bad)  
   1400503f0:	jl     0x140050438
   1400503f2:	(bad)  
   1400503f3:	(bad)  
   1400503f4:	jnp    0x14005043c
   1400503f6:	(bad)  
   1400503f7:	(bad)  
   1400503f8:	jnp    0x140050440
   1400503fa:	(bad)  
   1400503fb:	(bad)  
   1400503fc:	jnp    0x140050443
   1400503fe:	(bad)  
   1400503ff:	(bad)  
   140050400:	jp     0x140050447
   140050402:	(bad)  
   140050403:	(bad)  
   140050404:	jns    0x14005044b
   140050406:	(bad)  
   140050407:	(bad)  
   140050408:	jns    0x14005044e
   14005040a:	(bad)  
   14005040b:	(bad)  
   14005040c:	js     0x140050452
   14005040e:	(bad)  
   14005040f:	(bad)  
   140050410:	js     0x140050456
   140050412:	(bad)  
   140050413:	push   QWORD PTR [rdi+0x43]
   140050416:	(bad)  
   140050417:	push   QWORD PTR [rdi+0x43]
   14005041a:	(bad)  
   14005041b:	push   QWORD PTR [rsi+0x43]
   14005041e:	(bad)  
   14005041f:	push   QWORD PTR [rsi+0x42]
   140050422:	(bad)  
   140050423:	push   QWORD PTR [rbp+0x42]
   140050426:	(bad)  
   140050427:	push   QWORD PTR [rbp+0x42]
   14005042a:	(bad)  
   14005042b:	push   QWORD PTR [rcx+rax*2+0x7]
   14005042f:	push   QWORD PTR [rcx+rax*2+0x7]
   140050433:	push   QWORD PTR [rbx+0x41]
   140050436:	(bad)  
   140050437:	push   QWORD PTR [rbx+0x41]
   14005043a:	or     bh,bh
   14005043c:	jb     0x14005047e
   14005043e:	or     bh,bh
   140050440:	jno    0x140050482
   140050442:	or     bh,bh
   140050444:	jno    0x140050485
   140050446:	or     bh,bh
	...
   140050488:	lods   al,BYTE PTR ds:[rsi]
   140050489:	movsxd eax,DWORD PTR [rcx]
   14005048b:	jmp    FWORD PTR [rbx-0x5400fe9e]
   140050491:	(bad)  {k3}{z}
   140050496:	add    edi,edi
   140050498:	stos   BYTE PTR es:[rdi],al
   140050499:	(bad)  {k1}{z}
   14005049e:	add    edi,edi
   1400504a0:	test   eax,0xa8ff0161
   1400504a5:	(bad)  
   1400504a6:	add    edi,edi
   1400504a8:	test   al,0x60
   1400504aa:	add    edi,edi
   1400504ac:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400504ad:	(bad)  
   1400504ae:	add    edi,edi
   1400504b0:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400504b1:	(bad)  
   1400504b2:	add    edi,edi
   1400504b4:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400504b5:	pop    rdi
   1400504b6:	add    edi,edi
   1400504b8:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400504b9:	pop    rdi
   1400504ba:	add    bh,bh
   1400504bc:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400504bd:	pop    rdi
   1400504be:	add    bh,bh
   1400504c0:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400504c1:	pop    rsi
   1400504c2:	add    bh,bh
   1400504c4:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400504c5:	pop    rsi
   1400504c6:	add    bh,bh
   1400504c8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400504c9:	pop    rsi
   1400504ca:	add    bh,bh
   1400504cc:	movabs ds:0xa2ff025da2ff025d,eax
   1400504d5:	pop    rbp
   1400504d6:	add    bh,bh
   1400504d8:	movabs eax,ds:0xa0ff025ca1ff025d
   1400504e1:	pop    rsp
   1400504e2:	add    bh,bh
   1400504e4:	movabs al,ds:0x9fff025b9fff025c
   1400504ed:	pop    rbx
   1400504ee:	add    bh,bh
   1400504f0:	sahf   
   1400504f1:	pop    rbx
   1400504f2:	add    bh,bh
   1400504f4:	sahf   
   1400504f5:	pop    rdx
   1400504f6:	add    bh,bh
   1400504f8:	popf   
   1400504f9:	pop    rdx
   1400504fa:	add    edi,edi
   1400504fc:	xchg   ecx,eax
   1400504fd:	push   rbp
   1400504fe:	or     bh,bh
   140050500:	movsxd eax,DWORD PTR [rcx+0x1d]
   140050503:	inc    DWORD PTR [rax-0x1c00be9d]
   140050509:	int3   
   14005050a:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14005050b:	jmp    rbx
   14005050d:	int3   
   14005050e:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14005050f:	jmp    rbx
   140050511:	int3   
   140050512:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140050513:	jmp    rbx
   140050515:	int3   
   140050516:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140050517:	jmp    rbx
   140050519:	int3   
   14005051a:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14005051b:	jmp    rbx
   14005051d:	int3   
   14005051e:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14005051f:	jmp    rbx
   140050521:	int3   
   140050522:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140050523:	jmp    rbx
   140050525:	int3   
   140050526:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140050527:	jmp    rbx
   140050529:	int3   
   14005052a:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14005052b:	jmp    rbx
   14005052d:	int3   
   14005052e:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14005052f:	jmp    rbx
   140050531:	int3   
   140050532:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140050533:	jmp    rbx
   140050535:	int3   
   140050536:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140050537:	jmp    rbx
   140050539:	int3   
   14005053a:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14005053b:	jmp    rbx
   14005053d:	int3   
   14005053e:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14005053f:	jmp    rbx
   140050541:	int3   
   140050542:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140050543:	jmp    rbx
   140050545:	int3   
   140050546:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140050547:	jmp    rbx
   140050549:	int3   
   14005054a:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14005054b:	jmp    rbx
   14005054d:	int3   
   14005054e:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14005054f:	jmp    rbx
   140050551:	int3   
   140050552:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140050553:	jmp    rbx
   140050555:	int3   
   140050556:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140050557:	jmp    rbx
   140050559:	int3   
   14005055a:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14005055b:	jmp    rbx
   14005055d:	int3   
   14005055e:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14005055f:	jmp    rbx
   140050561:	int3   
   140050562:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140050563:	jmp    rbx
   140050565:	int3   
   140050566:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140050567:	jmp    rbx
   140050569:	int3   
   14005056a:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14005056b:	jmp    rbx
   14005056d:	int3   
   14005056e:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14005056f:	jmp    rbx
   140050571:	int3   
   140050572:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140050573:	jmp    rbx
   140050575:	int3   
   140050576:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140050577:	jmp    rbx
   140050579:	int3   
   14005057a:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14005057b:	jmp    rbx
   14005057d:	int3   
   14005057e:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14005057f:	jmp    rbx
   140050581:	int3   
   140050582:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140050583:	jmp    rbx
   140050585:	int3   
   140050586:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140050587:	jmp    rbx
   140050589:	int3   
   14005058a:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14005058b:	jmp    rbx
   14005058d:	int3   
   14005058e:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14005058f:	jmp    rbx
   140050591:	int3   
   140050592:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140050593:	jmp    rbx
   140050595:	int3   
   140050596:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140050597:	jmp    rbx
   140050599:	int3   
   14005059a:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14005059b:	jmp    rbx
   14005059d:	int3   
   14005059e:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14005059f:	jmp    rbx
   1400505a1:	int3   
   1400505a2:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400505a3:	jmp    rbx
   1400505a5:	int3   
   1400505a6:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400505a7:	jmp    rbx
   1400505a9:	int3   
   1400505aa:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400505ab:	jmp    rbx
   1400505ad:	int3   
   1400505ae:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400505af:	jmp    rbx
   1400505b1:	int3   
   1400505b2:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400505b3:	jmp    rbx
   1400505b5:	int3   
   1400505b6:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400505b7:	jmp    rbx
   1400505b9:	int3   
   1400505ba:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400505bb:	jmp    rbx
   1400505bd:	int3   
   1400505be:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400505bf:	jmp    rbx
   1400505c1:	int3   
   1400505c2:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400505c3:	jmp    rbx
   1400505c5:	int3   
   1400505c6:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400505c7:	inc    DWORD PTR [rax+0x61ff4163]
   1400505cd:	rex sbb eax,0xb477bff
   1400505d3:	inc    DWORD PTR [rax-0x7f00f9b7]
   1400505d9:	rex.W (bad) 
   1400505db:	(bad)  
   1400505dc:	jg     0x140050626
   1400505de:	(bad)  
   1400505df:	(bad)  
   1400505e0:	jg     0x14005062a
   1400505e2:	(bad)  
   1400505e3:	(bad)  
   1400505e4:	jle    0x14005062d
   1400505e6:	(bad)  
   1400505e7:	(bad)  
   1400505e8:	jle    0x140050631
   1400505ea:	(bad)  
   1400505eb:	(bad)  
   1400505ec:	jge    0x140050635
   1400505ee:	(bad)  
   1400505ef:	(bad)  
   1400505f0:	jge    0x140050639
   1400505f2:	(bad)  
   1400505f3:	(bad)  
   1400505f4:	jl     0x14005063c
   1400505f6:	(bad)  
   1400505f7:	(bad)  
   1400505f8:	jnp    0x140050640
   1400505fa:	(bad)  
   1400505fb:	(bad)  
   1400505fc:	jnp    0x140050644
   1400505fe:	(bad)  
   1400505ff:	(bad)  
   140050600:	jnp    0x140050647
   140050602:	(bad)  
   140050603:	(bad)  
   140050604:	jp     0x14005064b
   140050606:	(bad)  
   140050607:	(bad)  
   140050608:	jns    0x14005064f
   14005060a:	(bad)  
   14005060b:	(bad)  
   14005060c:	jns    0x140050652
   14005060e:	(bad)  
   14005060f:	(bad)  
   140050610:	js     0x140050656
   140050612:	(bad)  
   140050613:	(bad)  
   140050614:	js     0x14005065a
   140050616:	(bad)  
   140050617:	push   QWORD PTR [rdi+0x43]
   14005061a:	(bad)  
   14005061b:	push   QWORD PTR [rdi+0x43]
   14005061e:	(bad)  
   14005061f:	push   QWORD PTR [rsi+0x43]
   140050622:	(bad)  
   140050623:	push   QWORD PTR [rsi+0x42]
   140050626:	(bad)  
   140050627:	push   QWORD PTR [rbp+0x42]
   14005062a:	(bad)  
   14005062b:	push   QWORD PTR [rbp+0x42]
   14005062e:	(bad)  
   14005062f:	push   QWORD PTR [rcx+rax*2+0x7]
   140050633:	push   QWORD PTR [rcx+rax*2+0x7]
   140050637:	push   QWORD PTR [rbx+0x41]
   14005063a:	(bad)  
   14005063b:	push   QWORD PTR [rbx+0x41]
   14005063e:	or     bh,bh
   140050640:	jb     0x140050682
   140050642:	or     bh,bh
   140050644:	jno    0x140050686
   140050646:	or     bh,bh
	...
   140050688:	lods   eax,DWORD PTR ds:[rsi]
   140050689:	movsxd eax,DWORD PTR [rcx]
   14005068b:	jmp    FWORD PTR [rbx+riz*2+0x62abff01]
   140050692:	add    edi,edi
   140050694:	stos   DWORD PTR es:[rdi],eax
   140050695:	(bad)  {k3}{z}
   14005069a:	add    edi,edi
   14005069c:	stos   BYTE PTR es:[rdi],al
   14005069d:	(bad)  {k1}{z}
   1400506a2:	add    edi,edi
   1400506a4:	test   eax,0xa8ff0161
   1400506a9:	(bad)  
   1400506aa:	add    edi,edi
   1400506ac:	test   al,0x60
   1400506ae:	add    edi,edi
   1400506b0:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400506b1:	(bad)  
   1400506b2:	add    edi,edi
   1400506b4:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400506b5:	(bad)  
   1400506b6:	add    edi,edi
   1400506b8:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400506b9:	pop    rdi
   1400506ba:	add    edi,edi
   1400506bc:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400506bd:	pop    rdi
   1400506be:	add    bh,bh
   1400506c0:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400506c1:	pop    rdi
   1400506c2:	add    bh,bh
   1400506c4:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400506c5:	pop    rsi
   1400506c6:	add    bh,bh
   1400506c8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400506c9:	pop    rsi
   1400506ca:	add    bh,bh
   1400506cc:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400506cd:	pop    rsi
   1400506ce:	add    bh,bh
   1400506d0:	movabs ds:0xa2ff025da2ff025d,eax
   1400506d9:	pop    rbp
   1400506da:	add    bh,bh
   1400506dc:	movabs eax,ds:0xa0ff025ca1ff025d
   1400506e5:	pop    rsp
   1400506e6:	add    bh,bh
   1400506e8:	movabs al,ds:0x9fff025b9fff025c
   1400506f1:	pop    rbx
   1400506f2:	add    bh,bh
   1400506f4:	sahf   
   1400506f5:	pop    rbx
   1400506f6:	add    bh,bh
   1400506f8:	(bad)  
   1400506f9:	pop    rcx
   1400506fa:	add    al,0xff
   1400506fc:	addr32 rex.XB sbb al,0xff
   140050700:	js     0x14005075c
   140050702:	cmp    edi,edi
   140050704:	fcmovnb st,st(4)
   140050706:	lahf   
   140050707:	jmp    rsp
   140050709:	int3   
   14005070a:	test   al,0xff
   14005070c:	in     al,0xcc
   14005070e:	test   al,0xff
   140050710:	in     al,0xcc
   140050712:	test   al,0xff
   140050714:	in     al,0xcc
   140050716:	test   al,0xff
   140050718:	in     al,0xcc
   14005071a:	test   al,0xff
   14005071c:	in     al,0xcc
   14005071e:	test   al,0xff
   140050720:	in     al,0xcc
   140050722:	test   al,0xff
   140050724:	in     al,0xcc
   140050726:	test   al,0xff
   140050728:	in     al,0xcc
   14005072a:	test   al,0xff
   14005072c:	in     al,0xcc
   14005072e:	test   al,0xff
   140050730:	in     al,0xcc
   140050732:	test   al,0xff
   140050734:	in     al,0xcc
   140050736:	test   al,0xff
   140050738:	in     al,0xcc
   14005073a:	test   al,0xff
   14005073c:	in     al,0xcc
   14005073e:	test   al,0xff
   140050740:	in     al,0xcc
   140050742:	test   al,0xff
   140050744:	in     al,0xcc
   140050746:	test   al,0xff
   140050748:	in     al,0xcc
   14005074a:	test   al,0xff
   14005074c:	in     al,0xcc
   14005074e:	test   al,0xff
   140050750:	in     al,0xcc
   140050752:	test   al,0xff
   140050754:	in     al,0xcc
   140050756:	test   al,0xff
   140050758:	in     al,0xcc
   14005075a:	test   al,0xff
   14005075c:	in     al,0xcc
   14005075e:	test   al,0xff
   140050760:	in     al,0xcc
   140050762:	test   al,0xff
   140050764:	in     al,0xcc
   140050766:	test   al,0xff
   140050768:	in     al,0xcc
   14005076a:	test   al,0xff
   14005076c:	in     al,0xcc
   14005076e:	test   al,0xff
   140050770:	in     al,0xcc
   140050772:	test   al,0xff
   140050774:	in     al,0xcc
   140050776:	test   al,0xff
   140050778:	in     al,0xcc
   14005077a:	test   al,0xff
   14005077c:	in     al,0xcc
   14005077e:	test   al,0xff
   140050780:	in     al,0xcc
   140050782:	test   al,0xff
   140050784:	in     al,0xcc
   140050786:	test   al,0xff
   140050788:	in     al,0xcc
   14005078a:	test   al,0xff
   14005078c:	in     al,0xcc
   14005078e:	test   al,0xff
   140050790:	in     al,0xcc
   140050792:	test   al,0xff
   140050794:	in     al,0xcc
   140050796:	test   al,0xff
   140050798:	in     al,0xcc
   14005079a:	test   al,0xff
   14005079c:	in     al,0xcc
   14005079e:	test   al,0xff
   1400507a0:	in     al,0xcc
   1400507a2:	test   al,0xff
   1400507a4:	in     al,0xcc
   1400507a6:	test   al,0xff
   1400507a8:	in     al,0xcc
   1400507aa:	test   al,0xff
   1400507ac:	in     al,0xcc
   1400507ae:	test   al,0xff
   1400507b0:	in     al,0xcc
   1400507b2:	test   al,0xff
   1400507b4:	in     al,0xcc
   1400507b6:	test   al,0xff
   1400507b8:	in     al,0xcc
   1400507ba:	test   al,0xff
   1400507bc:	in     al,0xcc
   1400507be:	test   al,0xff
   1400507c0:	in     al,0xcc
   1400507c2:	test   al,0xff
   1400507c4:	in     al,0xcc
   1400507c6:	test   al,0xff
   1400507c8:	fcmovnb st,st(4)
   1400507ca:	lahf   
   1400507cb:	(bad)  
   1400507cc:	js     0x140050828
   1400507ce:	cmp    edi,edi
   1400507d0:	movsxd eax,DWORD PTR [rcx+0x1c]
   1400507d3:	(bad)  
   1400507d4:	jg     0x14005081e
   1400507d6:	or     bh,bh
   1400507d8:	or     BYTE PTR [rcx+0x6],0xff
   1400507dc:	or     BYTE PTR [rax+0x6],0xff
   1400507e0:	jg     0x14005082a
   1400507e2:	(bad)  
   1400507e3:	(bad)  
   1400507e4:	jg     0x14005082e
   1400507e6:	(bad)  
   1400507e7:	(bad)  
   1400507e8:	jle    0x140050831
   1400507ea:	(bad)  
   1400507eb:	(bad)  
   1400507ec:	jle    0x140050835
   1400507ee:	(bad)  
   1400507ef:	(bad)  
   1400507f0:	jge    0x140050839
   1400507f2:	(bad)  
   1400507f3:	(bad)  
   1400507f4:	jge    0x14005083d
   1400507f6:	(bad)  
   1400507f7:	(bad)  
   1400507f8:	jl     0x140050840
   1400507fa:	(bad)  
   1400507fb:	(bad)  
   1400507fc:	jnp    0x140050844
   1400507fe:	(bad)  
   1400507ff:	(bad)  
   140050800:	jnp    0x140050848
   140050802:	(bad)  
   140050803:	(bad)  
   140050804:	jnp    0x14005084b
   140050806:	(bad)  
   140050807:	(bad)  
   140050808:	jp     0x14005084f
   14005080a:	(bad)  
   14005080b:	(bad)  
   14005080c:	jns    0x140050853
   14005080e:	(bad)  
   14005080f:	(bad)  
   140050810:	jns    0x140050856
   140050812:	(bad)  
   140050813:	(bad)  
   140050814:	js     0x14005085a
   140050816:	(bad)  
   140050817:	(bad)  
   140050818:	js     0x14005085e
   14005081a:	(bad)  
   14005081b:	push   QWORD PTR [rdi+0x43]
   14005081e:	(bad)  
   14005081f:	push   QWORD PTR [rdi+0x43]
   140050822:	(bad)  
   140050823:	push   QWORD PTR [rsi+0x43]
   140050826:	(bad)  
   140050827:	push   QWORD PTR [rsi+0x42]
   14005082a:	(bad)  
   14005082b:	push   QWORD PTR [rbp+0x42]
   14005082e:	(bad)  
   14005082f:	push   QWORD PTR [rbp+0x42]
   140050832:	(bad)  
   140050833:	push   QWORD PTR [rcx+rax*2+0x7]
   140050837:	push   QWORD PTR [rcx+rax*2+0x7]
   14005083b:	push   QWORD PTR [rbx+0x41]
   14005083e:	(bad)  
   14005083f:	push   QWORD PTR [rbx+0x41]
   140050842:	or     bh,bh
   140050844:	jb     0x140050886
   140050846:	or     bh,bh
	...
   140050888:	lods   eax,DWORD PTR ds:[rsi]
   140050889:	movsxd eax,DWORD PTR [rcx]
   14005088b:	jmp    FWORD PTR [rbp-0x5300fe9d]
   140050891:	movsxd eax,DWORD PTR [rcx]
   140050893:	jmp    FWORD PTR [rbx-0x5400fe9e]
   140050899:	(bad)  {k3}{z}
   14005089e:	add    edi,edi
   1400508a0:	stos   BYTE PTR es:[rdi],al
   1400508a1:	(bad)  {k1}{z}
   1400508a6:	add    edi,edi
   1400508a8:	test   eax,0xa8ff0161
   1400508ad:	(bad)  
   1400508ae:	add    edi,edi
   1400508b0:	test   al,0x60
   1400508b2:	add    edi,edi
   1400508b4:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400508b5:	(bad)  
   1400508b6:	add    edi,edi
   1400508b8:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400508b9:	(bad)  
   1400508ba:	add    edi,edi
   1400508bc:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400508bd:	pop    rdi
   1400508be:	add    edi,edi
   1400508c0:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400508c1:	pop    rdi
   1400508c2:	add    bh,bh
   1400508c4:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400508c5:	pop    rdi
   1400508c6:	add    bh,bh
   1400508c8:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400508c9:	pop    rsi
   1400508ca:	add    bh,bh
   1400508cc:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400508cd:	pop    rsi
   1400508ce:	add    bh,bh
   1400508d0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400508d1:	pop    rsi
   1400508d2:	add    bh,bh
   1400508d4:	movabs ds:0xa2ff025da2ff025d,eax
   1400508dd:	pop    rbp
   1400508de:	add    bh,bh
   1400508e0:	movabs eax,ds:0xa0ff025ca1ff025d
   1400508e9:	pop    rsp
   1400508ea:	add    bh,bh
   1400508ec:	movabs al,ds:0x9fff025b9fff025c
   1400508f5:	pop    rbx
   1400508f6:	add    bh,bh
   1400508f8:	ins    BYTE PTR es:[rdi],dx
   1400508f9:	rex.RX sbb r15b,dil
   1400508fc:	(bad)  
   1400508fd:	rex.B (bad) 
   1400508ff:	jmp    QWORD PTR [rax+0x41]
   140050902:	(bad)  
   140050903:	jmp    QWORD PTR [rax+0x41]
   140050906:	(bad)  
   140050907:	jmp    QWORD PTR [rax+0x41]
   14005090a:	(bad)  
   14005090b:	jmp    QWORD PTR [rax+0x41]
   14005090e:	(bad)  
   14005090f:	jmp    QWORD PTR [rax+0x41]
   140050912:	(bad)  
   140050913:	jmp    QWORD PTR [rax+0x41]
   140050916:	(bad)  
   140050917:	jmp    QWORD PTR [rax+0x41]
   14005091a:	(bad)  
   14005091b:	jmp    QWORD PTR [rax+0x41]
   14005091e:	(bad)  
   14005091f:	jmp    QWORD PTR [rax+0x41]
   140050922:	(bad)  
   140050923:	jmp    QWORD PTR [rax+0x41]
   140050926:	(bad)  
   140050927:	jmp    QWORD PTR [rax+0x41]
   14005092a:	(bad)  
   14005092b:	jmp    QWORD PTR [rax+0x41]
   14005092e:	(bad)  
   14005092f:	jmp    QWORD PTR [rax+0x41]
   140050932:	(bad)  
   140050933:	jmp    rsp
   140050935:	int    0xa9
   140050937:	jmp    rsp
   140050939:	int    0xa9
   14005093b:	jmp    rsp
   14005093d:	int    0xa9
   14005093f:	jmp    rsp
   140050941:	int    0xa9
   140050943:	jmp    rsp
   140050945:	int    0xa9
   140050947:	jmp    rsp
   140050949:	int    0xa9
   14005094b:	jmp    rsp
   14005094d:	int    0xa9
   14005094f:	jmp    rsp
   140050951:	int    0xa9
   140050953:	jmp    rsp
   140050955:	int    0xa9
   140050957:	jmp    rsp
   140050959:	int    0xa9
   14005095b:	jmp    rsp
   14005095d:	int    0xa9
   14005095f:	jmp    rsp
   140050961:	int    0xa9
   140050963:	jmp    rsp
   140050965:	int    0xa9
   140050967:	jmp    rsp
   140050969:	int    0xa9
   14005096b:	jmp    rsp
   14005096d:	int    0xa9
   14005096f:	jmp    rsp
   140050971:	int    0xa9
   140050973:	jmp    rsp
   140050975:	int    0xa9
   140050977:	jmp    rsp
   140050979:	int    0xa9
   14005097b:	jmp    rsp
   14005097d:	int    0xa9
   14005097f:	jmp    rsp
   140050981:	int    0xa9
   140050983:	jmp    rsp
   140050985:	int    0xa9
   140050987:	jmp    rsp
   140050989:	int    0xa9
   14005098b:	jmp    rsp
   14005098d:	int    0xa9
   14005098f:	jmp    rsp
   140050991:	int    0xa9
   140050993:	jmp    rsp
   140050995:	int    0xa9
   140050997:	jmp    QWORD PTR [rax+0x41]
   14005099a:	(bad)  
   14005099b:	jmp    QWORD PTR [rax+0x41]
   14005099e:	(bad)  
   14005099f:	jmp    QWORD PTR [rax+0x41]
   1400509a2:	(bad)  
   1400509a3:	jmp    QWORD PTR [rax+0x41]
   1400509a6:	(bad)  
   1400509a7:	jmp    QWORD PTR [rax+0x41]
   1400509aa:	(bad)  
   1400509ab:	jmp    QWORD PTR [rax+0x41]
   1400509ae:	(bad)  
   1400509af:	jmp    QWORD PTR [rax+0x41]
   1400509b2:	(bad)  
   1400509b3:	jmp    QWORD PTR [rax+0x41]
   1400509b6:	(bad)  
   1400509b7:	jmp    QWORD PTR [rax+0x41]
   1400509ba:	(bad)  
   1400509bb:	jmp    QWORD PTR [rax+0x41]
   1400509be:	(bad)  
   1400509bf:	jmp    QWORD PTR [rax+0x41]
   1400509c2:	(bad)  
   1400509c3:	jmp    QWORD PTR [rax+0x41]
   1400509c6:	(bad)  
   1400509c7:	jmp    QWORD PTR [rax+0x41]
   1400509ca:	(bad)  
   1400509cb:	jmp    QWORD PTR [rax+0x41]
   1400509ce:	(bad)  
   1400509cf:	jmp    QWORD PTR [rax+0x41]
   1400509d2:	(bad)  
   1400509d3:	jmp    QWORD PTR [rsi+0x42]
   1400509d6:	sbb    edi,edi
   1400509d8:	or     DWORD PTR [rcx+0x6],0x64980ff
   1400509df:	inc    DWORD PTR [rax+0x7fff0648]
   1400509e5:	rex.W (bad) 
   1400509e7:	(bad)  
   1400509e8:	jg     0x140050a32
   1400509ea:	(bad)  
   1400509eb:	(bad)  
   1400509ec:	jle    0x140050a35
   1400509ee:	(bad)  
   1400509ef:	(bad)  
   1400509f0:	jle    0x140050a39
   1400509f2:	(bad)  
   1400509f3:	(bad)  
   1400509f4:	jge    0x140050a3d
   1400509f6:	(bad)  
   1400509f7:	(bad)  
   1400509f8:	jge    0x140050a41
   1400509fa:	(bad)  
   1400509fb:	(bad)  
   1400509fc:	jl     0x140050a44
   1400509fe:	(bad)  
   1400509ff:	(bad)  
   140050a00:	jnp    0x140050a48
   140050a02:	(bad)  
   140050a03:	(bad)  
   140050a04:	jnp    0x140050a4c
   140050a06:	(bad)  
   140050a07:	(bad)  
   140050a08:	jnp    0x140050a4f
   140050a0a:	(bad)  
   140050a0b:	(bad)  
   140050a0c:	jp     0x140050a53
   140050a0e:	(bad)  
   140050a0f:	(bad)  
   140050a10:	jns    0x140050a57
   140050a12:	(bad)  
   140050a13:	(bad)  
   140050a14:	jns    0x140050a5a
   140050a16:	(bad)  
   140050a17:	(bad)  
   140050a18:	js     0x140050a5e
   140050a1a:	(bad)  
   140050a1b:	(bad)  
   140050a1c:	js     0x140050a62
   140050a1e:	(bad)  
   140050a1f:	push   QWORD PTR [rdi+0x43]
   140050a22:	(bad)  
   140050a23:	push   QWORD PTR [rdi+0x43]
   140050a26:	(bad)  
   140050a27:	push   QWORD PTR [rsi+0x43]
   140050a2a:	(bad)  
   140050a2b:	push   QWORD PTR [rsi+0x42]
   140050a2e:	(bad)  
   140050a2f:	push   QWORD PTR [rbp+0x42]
   140050a32:	(bad)  
   140050a33:	push   QWORD PTR [rbp+0x42]
   140050a36:	(bad)  
   140050a37:	push   QWORD PTR [rcx+rax*2+0x7]
   140050a3b:	push   QWORD PTR [rcx+rax*2+0x7]
   140050a3f:	push   QWORD PTR [rbx+0x41]
   140050a42:	(bad)  
   140050a43:	push   QWORD PTR [rbx+0x41]
   140050a46:	or     bh,bh
	...
   140050a88:	scas   al,BYTE PTR es:[rdi]
   140050a89:	fs add edi,edi
   140050a8c:	lods   eax,DWORD PTR ds:[rsi]
   140050a8d:	movsxd eax,DWORD PTR [rcx]
   140050a8f:	jmp    FWORD PTR [rbp-0x5300fe9d]
   140050a95:	movsxd eax,DWORD PTR [rcx]
   140050a97:	jmp    FWORD PTR [rbx-0x5400fe9e]
   140050a9d:	(bad)  {k3}{z}
   140050aa2:	add    edi,edi
   140050aa4:	stos   BYTE PTR es:[rdi],al
   140050aa5:	(bad)  {k1}{z}
   140050aaa:	add    edi,edi
   140050aac:	test   eax,0xa8ff0161
   140050ab1:	(bad)  
   140050ab2:	add    edi,edi
   140050ab4:	test   al,0x60
   140050ab6:	add    edi,edi
   140050ab8:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140050ab9:	(bad)  
   140050aba:	add    edi,edi
   140050abc:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140050abd:	(bad)  
   140050abe:	add    edi,edi
   140050ac0:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140050ac1:	pop    rdi
   140050ac2:	add    edi,edi
   140050ac4:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140050ac5:	pop    rdi
   140050ac6:	add    bh,bh
   140050ac8:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140050ac9:	pop    rdi
   140050aca:	add    bh,bh
   140050acc:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140050acd:	pop    rsi
   140050ace:	add    bh,bh
   140050ad0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140050ad1:	pop    rsi
   140050ad2:	add    bh,bh
   140050ad4:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140050ad5:	pop    rsi
   140050ad6:	add    bh,bh
   140050ad8:	movabs ds:0xa2ff025da2ff025d,eax
   140050ae1:	pop    rbp
   140050ae2:	add    bh,bh
   140050ae4:	movabs eax,ds:0xa0ff025ca1ff025d
   140050aed:	pop    rsp
   140050aee:	add    bh,bh
   140050af0:	movabs al,ds:0x9fff025b9fff025c
   140050af9:	pop    rbx
   140050afa:	add    bh,bh
   140050afc:	sahf   
   140050afd:	pop    rbx
   140050afe:	add    bh,bh
   140050b00:	sahf   
   140050b01:	pop    rdx
   140050b02:	add    bh,bh
   140050b04:	popf   
   140050b05:	pop    rdx
   140050b06:	add    edi,edi
   140050b08:	popf   
   140050b09:	pop    rdx
   140050b0a:	add    edi,edi
   140050b0c:	pushf  
   140050b0d:	pop    rcx
   140050b0e:	add    edi,edi
   140050b10:	pushf  
   140050b11:	pop    rcx
   140050b12:	add    edi,edi
   140050b14:	fwait
   140050b15:	pop    rcx
   140050b16:	add    edi,edi
   140050b18:	fwait
   140050b19:	pop    rax
   140050b1a:	add    edi,edi
   140050b1c:	(bad)  
   140050b1d:	pop    rax
   140050b1e:	add    edi,edi
   140050b20:	(bad)  
   140050b21:	pop    rax
   140050b22:	add    edi,edi
   140050b24:	cdq    
   140050b25:	push   rdi
   140050b26:	add    edi,edi
   140050b28:	cwde   
   140050b29:	push   rdi
   140050b2a:	add    edi,edi
   140050b2c:	cwde   
   140050b2d:	push   rdi
   140050b2e:	add    edi,edi
   140050b30:	(bad)  
   140050b31:	and    r15b,dil
   140050b34:	in     eax,0xce
   140050b36:	stos   BYTE PTR es:[rdi],al
   140050b37:	jmp    rbp
   140050b39:	(bad)  
   140050b3a:	stos   BYTE PTR es:[rdi],al
   140050b3b:	jmp    rbp
   140050b3d:	(bad)  
   140050b3e:	stos   BYTE PTR es:[rdi],al
   140050b3f:	jmp    rbp
   140050b41:	(bad)  
   140050b42:	stos   BYTE PTR es:[rdi],al
   140050b43:	jmp    rbp
   140050b45:	(bad)  
   140050b46:	stos   BYTE PTR es:[rdi],al
   140050b47:	jmp    rbp
   140050b49:	(bad)  
   140050b4a:	stos   BYTE PTR es:[rdi],al
   140050b4b:	jmp    rbp
   140050b4d:	(bad)  
   140050b4e:	stos   BYTE PTR es:[rdi],al
   140050b4f:	jmp    rbp
   140050b51:	(bad)  
   140050b52:	stos   BYTE PTR es:[rdi],al
   140050b53:	jmp    rbp
   140050b55:	(bad)  
   140050b56:	stos   BYTE PTR es:[rdi],al
   140050b57:	jmp    rbp
   140050b59:	(bad)  
   140050b5a:	stos   BYTE PTR es:[rdi],al
   140050b5b:	jmp    rbp
   140050b5d:	(bad)  
   140050b5e:	stos   BYTE PTR es:[rdi],al
   140050b5f:	jmp    rbp
   140050b61:	(bad)  
   140050b62:	stos   BYTE PTR es:[rdi],al
   140050b63:	jmp    rbp
   140050b65:	(bad)  
   140050b66:	stos   BYTE PTR es:[rdi],al
   140050b67:	jmp    rbp
   140050b69:	(bad)  
   140050b6a:	stos   BYTE PTR es:[rdi],al
   140050b6b:	jmp    rbp
   140050b6d:	(bad)  
   140050b6e:	stos   BYTE PTR es:[rdi],al
   140050b6f:	jmp    rbp
   140050b71:	(bad)  
   140050b72:	stos   BYTE PTR es:[rdi],al
   140050b73:	jmp    rbp
   140050b75:	(bad)  
   140050b76:	stos   BYTE PTR es:[rdi],al
   140050b77:	jmp    rbp
   140050b79:	(bad)  
   140050b7a:	stos   BYTE PTR es:[rdi],al
   140050b7b:	jmp    rbp
   140050b7d:	(bad)  
   140050b7e:	stos   BYTE PTR es:[rdi],al
   140050b7f:	jmp    rbp
   140050b81:	(bad)  
   140050b82:	stos   BYTE PTR es:[rdi],al
   140050b83:	jmp    rbp
   140050b85:	(bad)  
   140050b86:	stos   BYTE PTR es:[rdi],al
   140050b87:	jmp    rbp
   140050b89:	(bad)  
   140050b8a:	stos   BYTE PTR es:[rdi],al
   140050b8b:	jmp    rbp
   140050b8d:	(bad)  
   140050b8e:	stos   BYTE PTR es:[rdi],al
   140050b8f:	jmp    rbp
   140050b91:	(bad)  
   140050b92:	stos   BYTE PTR es:[rdi],al
   140050b93:	jmp    rbp
   140050b95:	(bad)  
   140050b96:	stos   BYTE PTR es:[rdi],al
   140050b97:	jmp    QWORD PTR [rax+0x41]
   140050b9a:	and    bh,bh
   140050b9c:	mov    DWORD PTR [rsi+0x5],ecx
   140050b9f:	dec    DWORD PTR [rcx-0x7700fab2]
   140050ba5:	rex.WRB add rax,0x54d88ff
   140050bab:	inc    DWORD PTR [rdi-0x7800fab3]
   140050bb1:	rex.WR add rax,0x54c86ff
   140050bb7:	inc    DWORD PTR [rbp-0x7a00fab4]
   140050bbd:	rex.WR add rax,0x54b84ff
   140050bc3:	inc    DWORD PTR [rbx+rcx*2+0x4a83ff06]
   140050bca:	(bad)  
   140050bcb:	inc    DWORD PTR [rbx-0x7d00f9b6]
   140050bd1:	rex.WX (bad) 
   140050bd3:	inc    DWORD PTR [rdx-0x7e00f9b6]
   140050bd9:	rex.WB (bad) 
   140050bdb:	inc    DWORD PTR [rcx-0x7f00f9b7]
   140050be1:	rex.WB (bad) 
   140050be3:	inc    DWORD PTR [rax+0x7fff0648]
   140050be9:	rex.W (bad) 
   140050beb:	(bad)  
   140050bec:	jg     0x140050c36
   140050bee:	(bad)  
   140050bef:	(bad)  
   140050bf0:	jle    0x140050c39
   140050bf2:	(bad)  
   140050bf3:	(bad)  
   140050bf4:	jle    0x140050c3d
   140050bf6:	(bad)  
   140050bf7:	(bad)  
   140050bf8:	jge    0x140050c41
   140050bfa:	(bad)  
   140050bfb:	(bad)  
   140050bfc:	jge    0x140050c45
   140050bfe:	(bad)  
   140050bff:	(bad)  
   140050c00:	jl     0x140050c48
   140050c02:	(bad)  
   140050c03:	(bad)  
   140050c04:	jnp    0x140050c4c
   140050c06:	(bad)  
   140050c07:	(bad)  
   140050c08:	jnp    0x140050c50
   140050c0a:	(bad)  
   140050c0b:	(bad)  
   140050c0c:	jnp    0x140050c53
   140050c0e:	(bad)  
   140050c0f:	(bad)  
   140050c10:	jp     0x140050c57
   140050c12:	(bad)  
   140050c13:	(bad)  
   140050c14:	jns    0x140050c5b
   140050c16:	(bad)  
   140050c17:	(bad)  
   140050c18:	jns    0x140050c5e
   140050c1a:	(bad)  
   140050c1b:	(bad)  
   140050c1c:	js     0x140050c62
   140050c1e:	(bad)  
   140050c1f:	(bad)  
   140050c20:	js     0x140050c66
   140050c22:	(bad)  
   140050c23:	push   QWORD PTR [rdi+0x43]
   140050c26:	(bad)  
   140050c27:	push   QWORD PTR [rdi+0x43]
   140050c2a:	(bad)  
   140050c2b:	push   QWORD PTR [rsi+0x43]
   140050c2e:	(bad)  
   140050c2f:	push   QWORD PTR [rsi+0x42]
   140050c32:	(bad)  
   140050c33:	push   QWORD PTR [rbp+0x42]
   140050c36:	(bad)  
   140050c37:	push   QWORD PTR [rbp+0x42]
   140050c3a:	(bad)  
   140050c3b:	push   QWORD PTR [rcx+rax*2+0x7]
   140050c3f:	push   QWORD PTR [rcx+rax*2+0x7]
   140050c43:	push   QWORD PTR [rbx+0x41]
   140050c46:	(bad)  
   140050c47:	inc    DWORD PTR [rax]
	...
   140050c85:	add    BYTE PTR [rax],al
   140050c87:	add    BYTE PTR [rsi-0x5100fe9c],ch
   140050c8d:	fs add edi,edi
   140050c90:	lods   eax,DWORD PTR ds:[rsi]
   140050c91:	movsxd eax,DWORD PTR [rcx]
   140050c93:	jmp    FWORD PTR [rbp-0x5300fe9d]
   140050c99:	movsxd eax,DWORD PTR [rcx]
   140050c9b:	jmp    FWORD PTR [rbx-0x5400fe9e]
   140050ca1:	(bad)  {k3}{z}
   140050ca6:	add    edi,edi
   140050ca8:	stos   BYTE PTR es:[rdi],al
   140050ca9:	(bad)  {k1}{z}
   140050cae:	add    edi,edi
   140050cb0:	test   eax,0xa8ff0161
   140050cb5:	(bad)  
   140050cb6:	add    edi,edi
   140050cb8:	test   al,0x60
   140050cba:	add    edi,edi
   140050cbc:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140050cbd:	(bad)  
   140050cbe:	add    edi,edi
   140050cc0:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140050cc1:	(bad)  
   140050cc2:	add    edi,edi
   140050cc4:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140050cc5:	pop    rdi
   140050cc6:	add    edi,edi
   140050cc8:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140050cc9:	pop    rdi
   140050cca:	add    bh,bh
   140050ccc:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140050ccd:	pop    rdi
   140050cce:	add    bh,bh
   140050cd0:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140050cd1:	pop    rsi
   140050cd2:	add    bh,bh
   140050cd4:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140050cd5:	pop    rsi
   140050cd6:	add    bh,bh
   140050cd8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140050cd9:	pop    rsi
   140050cda:	add    bh,bh
   140050cdc:	movabs ds:0xa2ff025da2ff025d,eax
   140050ce5:	pop    rbp
   140050ce6:	add    bh,bh
   140050ce8:	movabs eax,ds:0xa0ff025ca1ff025d
   140050cf1:	pop    rsp
   140050cf2:	add    bh,bh
   140050cf4:	movabs al,ds:0x9fff025b9fff025c
   140050cfd:	pop    rbx
   140050cfe:	add    bh,bh
   140050d00:	sahf   
   140050d01:	pop    rbx
   140050d02:	add    bh,bh
   140050d04:	sahf   
   140050d05:	pop    rdx
   140050d06:	add    bh,bh
   140050d08:	popf   
   140050d09:	pop    rdx
   140050d0a:	add    edi,edi
   140050d0c:	popf   
   140050d0d:	pop    rdx
   140050d0e:	add    edi,edi
   140050d10:	pushf  
   140050d11:	pop    rcx
   140050d12:	add    edi,edi
   140050d14:	pushf  
   140050d15:	pop    rcx
   140050d16:	add    edi,edi
   140050d18:	fwait
   140050d19:	pop    rcx
   140050d1a:	add    edi,edi
   140050d1c:	fwait
   140050d1d:	pop    rax
   140050d1e:	add    edi,edi
   140050d20:	(bad)  
   140050d21:	pop    rax
   140050d22:	add    edi,edi
   140050d24:	(bad)  
   140050d25:	pop    rax
   140050d26:	add    edi,edi
   140050d28:	cdq    
   140050d29:	push   rdi
   140050d2a:	add    edi,edi
   140050d2c:	cwde   
   140050d2d:	push   rdi
   140050d2e:	add    edi,edi
   140050d30:	(bad)  
   140050d31:	rex.X and dil,dil
   140050d34:	in     eax,0xcf
   140050d36:	stos   DWORD PTR es:[rdi],eax
   140050d37:	jmp    rbp
   140050d39:	iret   
   140050d3a:	stos   DWORD PTR es:[rdi],eax
   140050d3b:	jmp    rbp
   140050d3d:	iret   
   140050d3e:	stos   DWORD PTR es:[rdi],eax
   140050d3f:	jmp    rbp
   140050d41:	iret   
   140050d42:	stos   DWORD PTR es:[rdi],eax
   140050d43:	jmp    rbp
   140050d45:	iret   
   140050d46:	stos   DWORD PTR es:[rdi],eax
   140050d47:	jmp    rbp
   140050d49:	iret   
   140050d4a:	stos   DWORD PTR es:[rdi],eax
   140050d4b:	jmp    rbp
   140050d4d:	iret   
   140050d4e:	stos   DWORD PTR es:[rdi],eax
   140050d4f:	jmp    rbp
   140050d51:	iret   
   140050d52:	stos   DWORD PTR es:[rdi],eax
   140050d53:	jmp    rbp
   140050d55:	iret   
   140050d56:	stos   DWORD PTR es:[rdi],eax
   140050d57:	jmp    rbp
   140050d59:	iret   
   140050d5a:	stos   DWORD PTR es:[rdi],eax
   140050d5b:	jmp    rbp
   140050d5d:	iret   
   140050d5e:	stos   DWORD PTR es:[rdi],eax
   140050d5f:	jmp    rbp
   140050d61:	iret   
   140050d62:	stos   DWORD PTR es:[rdi],eax
   140050d63:	jmp    rbp
   140050d65:	iret   
   140050d66:	stos   DWORD PTR es:[rdi],eax
   140050d67:	jmp    rbp
   140050d69:	iret   
   140050d6a:	stos   DWORD PTR es:[rdi],eax
   140050d6b:	jmp    rbp
   140050d6d:	iret   
   140050d6e:	stos   DWORD PTR es:[rdi],eax
   140050d6f:	jmp    rbp
   140050d71:	iret   
   140050d72:	stos   DWORD PTR es:[rdi],eax
   140050d73:	jmp    rbp
   140050d75:	iret   
   140050d76:	stos   DWORD PTR es:[rdi],eax
   140050d77:	jmp    rbp
   140050d79:	iret   
   140050d7a:	stos   DWORD PTR es:[rdi],eax
   140050d7b:	jmp    rbp
   140050d7d:	iret   
   140050d7e:	stos   DWORD PTR es:[rdi],eax
   140050d7f:	jmp    rbp
   140050d81:	iret   
   140050d82:	stos   DWORD PTR es:[rdi],eax
   140050d83:	jmp    rbp
   140050d85:	iret   
   140050d86:	stos   DWORD PTR es:[rdi],eax
   140050d87:	jmp    rbp
   140050d89:	iret   
   140050d8a:	stos   DWORD PTR es:[rdi],eax
   140050d8b:	jmp    rbp
   140050d8d:	iret   
   140050d8e:	stos   DWORD PTR es:[rdi],eax
   140050d8f:	jmp    rbp
   140050d91:	iret   
   140050d92:	stos   DWORD PTR es:[rdi],eax
   140050d93:	jmp    rbp
   140050d95:	iret   
   140050d96:	stos   DWORD PTR es:[rdi],eax
   140050d97:	jmp    QWORD PTR [rcx+0x42]
   140050d9a:	and    bh,bh
   140050d9c:	mov    cl,BYTE PTR [rsi+0x5]
   140050d9f:	dec    DWORD PTR [rcx-0x7600fab2]
   140050da5:	rex.WRX add rax,0x54d88ff
   140050dab:	dec    DWORD PTR [rax-0x7800fab3]
   140050db1:	rex.WRB add rax,0x54c87ff
   140050db7:	inc    DWORD PTR [rsi-0x7a00fab4]
   140050dbd:	rex.WR add rax,0x54c85ff
   140050dc3:	inc    DWORD PTR [rbx+rcx*2+0x4b84ff05]
   140050dca:	(bad)  
   140050dcb:	inc    DWORD PTR [rbx-0x7c00f9b6]
   140050dd1:	rex.WX (bad) 
   140050dd3:	inc    DWORD PTR [rdx-0x7d00f9b6]
   140050dd9:	rex.WX (bad) 
   140050ddb:	inc    DWORD PTR [rcx-0x7e00f9b7]
   140050de1:	rex.WB (bad) 
   140050de3:	inc    DWORD PTR [rax-0x7f00f9b7]
   140050de9:	rex.W (bad) 
   140050deb:	(bad)  
   140050dec:	jg     0x140050e36
   140050dee:	(bad)  
   140050def:	(bad)  
   140050df0:	jg     0x140050e3a
   140050df2:	(bad)  
   140050df3:	(bad)  
   140050df4:	jle    0x140050e3d
   140050df6:	(bad)  
   140050df7:	(bad)  
   140050df8:	jle    0x140050e41
   140050dfa:	(bad)  
   140050dfb:	(bad)  
   140050dfc:	jge    0x140050e45
   140050dfe:	(bad)  
   140050dff:	(bad)  
   140050e00:	jge    0x140050e49
   140050e02:	(bad)  
   140050e03:	(bad)  
   140050e04:	jl     0x140050e4c
   140050e06:	(bad)  
   140050e07:	(bad)  
   140050e08:	jnp    0x140050e50
   140050e0a:	(bad)  
   140050e0b:	(bad)  
   140050e0c:	jnp    0x140050e54
   140050e0e:	(bad)  
   140050e0f:	(bad)  
   140050e10:	jnp    0x140050e57
   140050e12:	(bad)  
   140050e13:	(bad)  
   140050e14:	jp     0x140050e5b
   140050e16:	(bad)  
   140050e17:	(bad)  
   140050e18:	jns    0x140050e5f
   140050e1a:	(bad)  
   140050e1b:	(bad)  
   140050e1c:	jns    0x140050e62
   140050e1e:	(bad)  
   140050e1f:	(bad)  
   140050e20:	js     0x140050e66
   140050e22:	(bad)  
   140050e23:	(bad)  
   140050e24:	js     0x140050e6a
   140050e26:	(bad)  
   140050e27:	push   QWORD PTR [rdi+0x43]
   140050e2a:	(bad)  
   140050e2b:	push   QWORD PTR [rdi+0x43]
   140050e2e:	(bad)  
   140050e2f:	push   QWORD PTR [rsi+0x43]
   140050e32:	(bad)  
   140050e33:	push   QWORD PTR [rsi+0x42]
   140050e36:	(bad)  
   140050e37:	push   QWORD PTR [rbp+0x42]
   140050e3a:	(bad)  
   140050e3b:	push   QWORD PTR [rbp+0x42]
   140050e3e:	(bad)  
   140050e3f:	push   QWORD PTR [rcx+rax*2+0x7]
   140050e43:	push   QWORD PTR [rcx+rax*2+0x7]
   140050e47:	inc    DWORD PTR [rax]
	...
   140050e85:	add    BYTE PTR [rax],al
   140050e87:	add    BYTE PTR [rdi-0x5100ff9c],ch
   140050e8d:	fs add edi,edi
   140050e90:	scas   al,BYTE PTR es:[rdi]
   140050e91:	fs add edi,edi
   140050e94:	lods   eax,DWORD PTR ds:[rsi]
   140050e95:	movsxd eax,DWORD PTR [rcx]
   140050e97:	jmp    FWORD PTR [rbp-0x5300fe9d]
   140050e9d:	movsxd eax,DWORD PTR [rcx]
   140050e9f:	jmp    FWORD PTR [rbx-0x5400fe9e]
   140050ea5:	(bad)  {k3}{z}
   140050eaa:	add    edi,edi
   140050eac:	stos   BYTE PTR es:[rdi],al
   140050ead:	(bad)  {k1}{z}
   140050eb2:	add    edi,edi
   140050eb4:	test   eax,0xa8ff0161
   140050eb9:	(bad)  
   140050eba:	add    edi,edi
   140050ebc:	test   al,0x60
   140050ebe:	add    edi,edi
   140050ec0:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140050ec1:	(bad)  
   140050ec2:	add    edi,edi
   140050ec4:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140050ec5:	(bad)  
   140050ec6:	add    edi,edi
   140050ec8:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140050ec9:	pop    rdi
   140050eca:	add    edi,edi
   140050ecc:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140050ecd:	pop    rdi
   140050ece:	add    bh,bh
   140050ed0:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140050ed1:	pop    rdi
   140050ed2:	add    bh,bh
   140050ed4:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140050ed5:	pop    rsi
   140050ed6:	add    bh,bh
   140050ed8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140050ed9:	pop    rsi
   140050eda:	add    bh,bh
   140050edc:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140050edd:	pop    rsi
   140050ede:	add    bh,bh
   140050ee0:	movabs ds:0xa2ff025da2ff025d,eax
   140050ee9:	pop    rbp
   140050eea:	add    bh,bh
   140050eec:	movabs eax,ds:0xa0ff025ca1ff025d
   140050ef5:	pop    rsp
   140050ef6:	add    bh,bh
   140050ef8:	movabs al,ds:0x9fff025b9fff025c
   140050f01:	pop    rbx
   140050f02:	add    bh,bh
   140050f04:	sahf   
   140050f05:	pop    rbx
   140050f06:	add    bh,bh
   140050f08:	sahf   
   140050f09:	pop    rdx
   140050f0a:	add    bh,bh
   140050f0c:	popf   
   140050f0d:	pop    rdx
   140050f0e:	add    edi,edi
   140050f10:	popf   
   140050f11:	pop    rdx
   140050f12:	add    edi,edi
   140050f14:	pushf  
   140050f15:	pop    rcx
   140050f16:	add    edi,edi
   140050f18:	pushf  
   140050f19:	pop    rcx
   140050f1a:	add    edi,edi
   140050f1c:	fwait
   140050f1d:	pop    rcx
   140050f1e:	add    edi,edi
   140050f20:	fwait
   140050f21:	pop    rax
   140050f22:	add    edi,edi
   140050f24:	(bad)  
   140050f25:	pop    rax
   140050f26:	add    edi,edi
   140050f28:	(bad)  
   140050f29:	pop    rax
   140050f2a:	add    edi,edi
   140050f2c:	cdq    
   140050f2d:	push   rdi
   140050f2e:	add    edi,edi
   140050f30:	(bad)  
   140050f31:	rex.X and edi,edi
   140050f34:	out    0xd0,al
   140050f36:	lods   al,BYTE PTR ds:[rsi]
   140050f37:	jmp    rsi
   140050f39:	shr    BYTE PTR [rdi+rdi*8-0x532f1a],1
   140050f40:	out    0xd0,al
   140050f42:	lods   al,BYTE PTR ds:[rsi]
   140050f43:	jmp    rsi
   140050f45:	shr    BYTE PTR [rdi+rdi*8-0x532f1a],1
   140050f4c:	out    0xd0,al
   140050f4e:	lods   al,BYTE PTR ds:[rsi]
   140050f4f:	jmp    rsi
   140050f51:	shr    BYTE PTR [rdi+rdi*8-0x532f1a],1
   140050f58:	out    0xd0,al
   140050f5a:	lods   al,BYTE PTR ds:[rsi]
   140050f5b:	jmp    rsi
   140050f5d:	shr    BYTE PTR [rdi+rdi*8-0x532f1a],1
   140050f64:	out    0xd0,al
   140050f66:	lods   al,BYTE PTR ds:[rsi]
   140050f67:	jmp    rsi
   140050f69:	shr    BYTE PTR [rdi+rdi*8-0x532f1a],1
   140050f70:	out    0xd0,al
   140050f72:	lods   al,BYTE PTR ds:[rsi]
   140050f73:	jmp    rsi
   140050f75:	shr    BYTE PTR [rdi+rdi*8-0x532f1a],1
   140050f7c:	out    0xd0,al
   140050f7e:	lods   al,BYTE PTR ds:[rsi]
   140050f7f:	jmp    rsi
   140050f81:	shr    BYTE PTR [rdi+rdi*8-0x532f1a],1
   140050f88:	out    0xd0,al
   140050f8a:	lods   al,BYTE PTR ds:[rsi]
   140050f8b:	jmp    rsi
   140050f8d:	shr    BYTE PTR [rdi+rdi*8-0x532f1a],1
   140050f94:	out    0xd0,al
   140050f96:	lods   al,BYTE PTR ds:[rsi]
   140050f97:	jmp    QWORD PTR [rcx+0x42]
   140050f9a:	and    edi,edi
   140050f9c:	mov    cl,BYTE PTR [rdi+0x5]
   140050f9f:	dec    DWORD PTR [rdx-0x7600fab2]
   140050fa5:	rex.WRX add rax,0x54e89ff
   140050fab:	dec    DWORD PTR [rax-0x7700fab3]
   140050fb1:	rex.WRB add rax,0x54d87ff
   140050fb7:	inc    DWORD PTR [rdi-0x7900fab4]
   140050fbd:	rex.WR add rax,0x54c85ff
   140050fc3:	inc    DWORD PTR [rbp-0x7b00fab4]
   140050fc9:	rex.WXB add rax,0x64b84ff
   140050fcf:	inc    DWORD PTR [rbx-0x7c00f9b6]
   140050fd5:	rex.WX (bad) 
   140050fd7:	inc    DWORD PTR [rdx-0x7d00f9b6]
   140050fdd:	rex.WX (bad) 
   140050fdf:	inc    DWORD PTR [rcx-0x7e00f9b7]
   140050fe5:	rex.WB (bad) 
   140050fe7:	inc    DWORD PTR [rax-0x7f00f9b7]
   140050fed:	rex.W (bad) 
   140050fef:	(bad)  
   140050ff0:	jg     0x14005103a
   140050ff2:	(bad)  
   140050ff3:	(bad)  
   140050ff4:	jg     0x14005103e
   140050ff6:	(bad)  
   140050ff7:	(bad)  
   140050ff8:	jle    0x140051041
   140050ffa:	(bad)  
   140050ffb:	(bad)  
   140050ffc:	jle    0x140051045
   140050ffe:	(bad)  
   140050fff:	(bad)  
   140051000:	jge    0x140051049
   140051002:	(bad)  
   140051003:	(bad)  
   140051004:	jge    0x14005104d
   140051006:	(bad)  
   140051007:	(bad)  
   140051008:	jl     0x140051050
   14005100a:	(bad)  
   14005100b:	(bad)  
   14005100c:	jnp    0x140051054
   14005100e:	(bad)  
   14005100f:	(bad)  
   140051010:	jnp    0x140051058
   140051012:	(bad)  
   140051013:	(bad)  
   140051014:	jnp    0x14005105b
   140051016:	(bad)  
   140051017:	(bad)  
   140051018:	jp     0x14005105f
   14005101a:	(bad)  
   14005101b:	(bad)  
   14005101c:	jns    0x140051063
   14005101e:	(bad)  
   14005101f:	(bad)  
   140051020:	jns    0x140051066
   140051022:	(bad)  
   140051023:	(bad)  
   140051024:	js     0x14005106a
   140051026:	(bad)  
   140051027:	(bad)  
   140051028:	js     0x14005106e
   14005102a:	(bad)  
   14005102b:	push   QWORD PTR [rdi+0x43]
   14005102e:	(bad)  
   14005102f:	push   QWORD PTR [rdi+0x43]
   140051032:	(bad)  
   140051033:	push   QWORD PTR [rsi+0x43]
   140051036:	(bad)  
   140051037:	push   QWORD PTR [rsi+0x42]
   14005103a:	(bad)  
   14005103b:	push   QWORD PTR [rbp+0x42]
   14005103e:	(bad)  
   14005103f:	push   QWORD PTR [rbp+0x42]
   140051042:	(bad)  
   140051043:	push   QWORD PTR [rcx+rax*2+0x7]
   140051047:	inc    DWORD PTR [rax]
	...
   140051085:	add    BYTE PTR [rax],al
   140051087:	add    BYTE PTR [rdi-0x5000ff9b],ch
   14005108d:	fs add bh,bh
   140051090:	scas   al,BYTE PTR es:[rdi]
   140051091:	fs add edi,edi
   140051094:	scas   al,BYTE PTR es:[rdi]
   140051095:	fs add edi,edi
   140051098:	lods   eax,DWORD PTR ds:[rsi]
   140051099:	movsxd eax,DWORD PTR [rcx]
   14005109b:	jmp    FWORD PTR [rbp-0x5300fe9d]
   1400510a1:	movsxd eax,DWORD PTR [rcx]
   1400510a3:	jmp    FWORD PTR [rbx-0x5400fe9e]
   1400510a9:	(bad)  {k3}{z}
   1400510ae:	add    edi,edi
   1400510b0:	stos   BYTE PTR es:[rdi],al
   1400510b1:	(bad)  {k1}{z}
   1400510b6:	add    edi,edi
   1400510b8:	test   eax,0xa8ff0161
   1400510bd:	(bad)  
   1400510be:	add    edi,edi
   1400510c0:	test   al,0x60
   1400510c2:	add    edi,edi
   1400510c4:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400510c5:	(bad)  
   1400510c6:	add    edi,edi
   1400510c8:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400510c9:	(bad)  
   1400510ca:	add    edi,edi
   1400510cc:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400510cd:	pop    rdi
   1400510ce:	add    edi,edi
   1400510d0:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400510d1:	pop    rdi
   1400510d2:	add    bh,bh
   1400510d4:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400510d5:	pop    rdi
   1400510d6:	add    bh,bh
   1400510d8:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400510d9:	pop    rsi
   1400510da:	add    bh,bh
   1400510dc:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400510dd:	pop    rsi
   1400510de:	add    bh,bh
   1400510e0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400510e1:	pop    rsi
   1400510e2:	add    bh,bh
   1400510e4:	movabs ds:0xa2ff025da2ff025d,eax
   1400510ed:	pop    rbp
   1400510ee:	add    bh,bh
   1400510f0:	movabs eax,ds:0xa0ff025ca1ff025d
   1400510f9:	pop    rsp
   1400510fa:	add    bh,bh
   1400510fc:	movabs al,ds:0x9fff025b9fff025c
   140051105:	pop    rbx
   140051106:	add    bh,bh
   140051108:	sahf   
   140051109:	pop    rbx
   14005110a:	add    bh,bh
   14005110c:	sahf   
   14005110d:	pop    rdx
   14005110e:	add    bh,bh
   140051110:	popf   
   140051111:	pop    rdx
   140051112:	add    edi,edi
   140051114:	popf   
   140051115:	pop    rdx
   140051116:	add    edi,edi
   140051118:	pushf  
   140051119:	pop    rcx
   14005111a:	add    edi,edi
   14005111c:	pushf  
   14005111d:	pop    rcx
   14005111e:	add    edi,edi
   140051120:	fwait
   140051121:	pop    rcx
   140051122:	add    edi,edi
   140051124:	fwait
   140051125:	pop    rax
   140051126:	add    edi,edi
   140051128:	(bad)  
   140051129:	pop    rax
   14005112a:	add    edi,edi
   14005112c:	(bad)  
   14005112d:	pop    rax
   14005112e:	add    edi,edi
   140051130:	(bad)  
   140051132:	and    edi,edi
   140051134:	out    0xd0,al
   140051136:	scas   al,BYTE PTR es:[rdi]
   140051137:	jmp    rsi
   140051139:	shr    BYTE PTR [rsi-0x512f1901],1
   14005113f:	jmp    rsi
   140051141:	shr    BYTE PTR [rsi-0x512f1901],1
   140051147:	jmp    rsi
   140051149:	shr    BYTE PTR [rsi-0x512f1901],1
   14005114f:	jmp    rsi
   140051151:	shr    BYTE PTR [rsi-0x512f1901],1
   140051157:	jmp    rsi
   140051159:	shr    BYTE PTR [rsi-0x512f1901],1
   14005115f:	jmp    rsi
   140051161:	shr    BYTE PTR [rsi-0x512f1901],1
   140051167:	jmp    rsi
   140051169:	shr    BYTE PTR [rsi-0x512f1901],1
   14005116f:	jmp    rsi
   140051171:	shr    BYTE PTR [rsi-0x512f1901],1
   140051177:	jmp    rsi
   140051179:	shr    BYTE PTR [rsi-0x512f1901],1
   14005117f:	jmp    rsi
   140051181:	shr    BYTE PTR [rsi-0x512f1901],1
   140051187:	jmp    rsi
   140051189:	shr    BYTE PTR [rsi-0x512f1901],1
   14005118f:	jmp    rsi
   140051191:	shr    BYTE PTR [rsi-0x512f1901],1
   140051197:	jmp    QWORD PTR [rdx+0x43]
   14005119a:	and    edi,edi
   14005119c:	mov    ecx,DWORD PTR [rdi+0x5]
   14005119f:	dec    DWORD PTR [rdx-0x7500fab1]
   1400511a5:	rex.WRX add rax,0x54e89ff
   1400511ab:	dec    DWORD PTR [rcx-0x7700fab2]
   1400511b1:	rex.WRB add rax,0x54d88ff
   1400511b7:	inc    DWORD PTR [rdi-0x7800fab3]
   1400511bd:	rex.WR add rax,0x54c86ff
   1400511c3:	inc    DWORD PTR [rbp-0x7a00fab4]
   1400511c9:	rex.WR add rax,0x54b84ff
   1400511cf:	inc    DWORD PTR [rbx+rcx*2+0x4a83ff06]
   1400511d6:	(bad)  
   1400511d7:	inc    DWORD PTR [rbx-0x7d00f9b6]
   1400511dd:	rex.WX (bad) 
   1400511df:	inc    DWORD PTR [rdx-0x7e00f9b6]
   1400511e5:	rex.WB (bad) 
   1400511e7:	inc    DWORD PTR [rcx-0x7f00f9b7]
   1400511ed:	rex.WB (bad) 
   1400511ef:	inc    DWORD PTR [rax+0x7fff0648]
   1400511f5:	rex.W (bad) 
   1400511f7:	(bad)  
   1400511f8:	jg     0x140051242
   1400511fa:	(bad)  
   1400511fb:	(bad)  
   1400511fc:	jle    0x140051245
   1400511fe:	(bad)  
   1400511ff:	(bad)  
   140051200:	jle    0x140051249
   140051202:	(bad)  
   140051203:	(bad)  
   140051204:	jge    0x14005124d
   140051206:	(bad)  
   140051207:	(bad)  
   140051208:	jge    0x140051251
   14005120a:	(bad)  
   14005120b:	(bad)  
   14005120c:	jl     0x140051254
   14005120e:	(bad)  
   14005120f:	(bad)  
   140051210:	jnp    0x140051258
   140051212:	(bad)  
   140051213:	(bad)  
   140051214:	jnp    0x14005125c
   140051216:	(bad)  
   140051217:	(bad)  
   140051218:	jnp    0x14005125f
   14005121a:	(bad)  
   14005121b:	(bad)  
   14005121c:	jp     0x140051263
   14005121e:	(bad)  
   14005121f:	(bad)  
   140051220:	jns    0x140051267
   140051222:	(bad)  
   140051223:	(bad)  
   140051224:	jns    0x14005126a
   140051226:	(bad)  
   140051227:	(bad)  
   140051228:	js     0x14005126e
   14005122a:	(bad)  
   14005122b:	(bad)  
   14005122c:	js     0x140051272
   14005122e:	(bad)  
   14005122f:	push   QWORD PTR [rdi+0x43]
   140051232:	(bad)  
   140051233:	push   QWORD PTR [rdi+0x43]
   140051236:	(bad)  
   140051237:	push   QWORD PTR [rsi+0x43]
   14005123a:	(bad)  
   14005123b:	push   QWORD PTR [rsi+0x42]
   14005123e:	(bad)  
   14005123f:	push   QWORD PTR [rbp+0x42]
   140051242:	(bad)  
   140051243:	push   QWORD PTR [rbp+0x42]
   140051246:	(bad)  
   140051247:	inc    DWORD PTR [rax]
	...
   140051285:	add    BYTE PTR [rax],al
   140051287:	add    BYTE PTR [rax-0x5000ff9b],dh
   14005128d:	gs add bh,bh
   140051290:	scas   eax,DWORD PTR es:[rdi]
   140051291:	fs add bh,bh
   140051294:	scas   al,BYTE PTR es:[rdi]
   140051295:	fs add edi,edi
   140051298:	scas   al,BYTE PTR es:[rdi]
   140051299:	fs add edi,edi
   14005129c:	lods   eax,DWORD PTR ds:[rsi]
   14005129d:	movsxd eax,DWORD PTR [rcx]
   14005129f:	jmp    FWORD PTR [rbp-0x5300fe9d]
   1400512a5:	movsxd eax,DWORD PTR [rcx]
   1400512a7:	jmp    FWORD PTR [rbx-0x5400fe9e]
   1400512ad:	(bad)  {k3}{z}
   1400512b2:	add    edi,edi
   1400512b4:	stos   BYTE PTR es:[rdi],al
   1400512b5:	(bad)  {k1}{z}
   1400512ba:	add    edi,edi
   1400512bc:	test   eax,0xa8ff0161
   1400512c1:	(bad)  
   1400512c2:	add    edi,edi
   1400512c4:	test   al,0x60
   1400512c6:	add    edi,edi
   1400512c8:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400512c9:	(bad)  
   1400512ca:	add    edi,edi
   1400512cc:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400512cd:	(bad)  
   1400512ce:	add    edi,edi
   1400512d0:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400512d1:	pop    rdi
   1400512d2:	add    edi,edi
   1400512d4:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400512d5:	pop    rdi
   1400512d6:	add    bh,bh
   1400512d8:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400512d9:	pop    rdi
   1400512da:	add    bh,bh
   1400512dc:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400512dd:	pop    rsi
   1400512de:	add    bh,bh
   1400512e0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400512e1:	pop    rsi
   1400512e2:	add    bh,bh
   1400512e4:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400512e5:	pop    rsi
   1400512e6:	add    bh,bh
   1400512e8:	movabs ds:0xa2ff025da2ff025d,eax
   1400512f1:	pop    rbp
   1400512f2:	add    bh,bh
   1400512f4:	movabs eax,ds:0xa0ff025ca1ff025d
   1400512fd:	pop    rsp
   1400512fe:	add    bh,bh
   140051300:	movabs al,ds:0x9fff025b9fff025c
   140051309:	pop    rbx
   14005130a:	add    bh,bh
   14005130c:	sahf   
   14005130d:	pop    rbx
   14005130e:	add    bh,bh
   140051310:	sahf   
   140051311:	pop    rdx
   140051312:	add    bh,bh
   140051314:	popf   
   140051315:	pop    rdx
   140051316:	add    edi,edi
   140051318:	popf   
   140051319:	pop    rdx
   14005131a:	add    edi,edi
   14005131c:	pushf  
   14005131d:	pop    rcx
   14005131e:	add    edi,edi
   140051320:	pushf  
   140051321:	pop    rcx
   140051322:	add    edi,edi
   140051324:	fwait
   140051325:	pop    rcx
   140051326:	add    edi,edi
   140051328:	fwait
   140051329:	pop    rax
   14005132a:	add    edi,edi
   14005132c:	(bad)  
   14005132d:	pop    rax
   14005132e:	add    edi,edi
   140051330:	(bad)  
   140051332:	and    edi,edi
   140051334:	out    0xd1,eax
   140051336:	scas   eax,DWORD PTR es:[rdi]
   140051337:	jmp    rdi
   140051339:	shr    DWORD PTR [rdi-0x502e1801],1
   14005133f:	jmp    rdi
   140051341:	shr    DWORD PTR [rdi-0x502e1801],1
   140051347:	jmp    rdi
   140051349:	shr    DWORD PTR [rdi-0x502e1801],1
   14005134f:	jmp    rdi
   140051351:	shr    DWORD PTR [rdi-0x502e1801],1
   140051357:	jmp    rdi
   140051359:	shr    DWORD PTR [rdi-0x502e1801],1
   14005135f:	jmp    rdi
   140051361:	shr    DWORD PTR [rdi-0x502e1801],1
   140051367:	jmp    rdi
   140051369:	shr    DWORD PTR [rdi-0x502e1801],1
   14005136f:	jmp    rdi
   140051371:	shr    DWORD PTR [rdi-0x502e1801],1
   140051377:	jmp    rdi
   140051379:	shr    DWORD PTR [rdi-0x502e1801],1
   14005137f:	jmp    rdi
   140051381:	shr    DWORD PTR [rdi-0x502e1801],1
   140051387:	jmp    rdi
   140051389:	shr    DWORD PTR [rdi-0x502e1801],1
   14005138f:	jmp    rdi
   140051391:	shr    DWORD PTR [rdi-0x502e1801],1
   140051397:	jmp    QWORD PTR [rdx+0x43]
   14005139a:	and    edi,edi
   14005139c:	mov    ecx,DWORD PTR [rdi+0x5]
   14005139f:	dec    DWORD PTR [rbx-0x7500fab1]
   1400513a5:	rex.WRXB add rax,0x54e8aff
   1400513ab:	dec    DWORD PTR [rcx-0x7600fab2]
   1400513b1:	rex.WRX add rax,0x54d88ff
   1400513b7:	dec    DWORD PTR [rax-0x7800fab3]
   1400513bd:	rex.WRB add rax,0x54c87ff
   1400513c3:	inc    DWORD PTR [rsi-0x7a00fab4]
   1400513c9:	rex.WR add rax,0x54c85ff
   1400513cf:	inc    DWORD PTR [rbx+rcx*2+0x4b84ff05]
   1400513d6:	(bad)  
   1400513d7:	inc    DWORD PTR [rbx-0x7c00f9b6]
   1400513dd:	rex.WX (bad) 
   1400513df:	inc    DWORD PTR [rdx-0x7d00f9b6]
   1400513e5:	rex.WX (bad) 
   1400513e7:	inc    DWORD PTR [rcx-0x7e00f9b7]
   1400513ed:	rex.WB (bad) 
   1400513ef:	inc    DWORD PTR [rax-0x7f00f9b7]
   1400513f5:	rex.W (bad) 
   1400513f7:	(bad)  
   1400513f8:	jg     0x140051442
   1400513fa:	(bad)  
   1400513fb:	(bad)  
   1400513fc:	jg     0x140051446
   1400513fe:	(bad)  
   1400513ff:	(bad)  
   140051400:	jle    0x140051449
   140051402:	(bad)  
   140051403:	(bad)  
   140051404:	jle    0x14005144d
   140051406:	(bad)  
   140051407:	(bad)  
   140051408:	jge    0x140051451
   14005140a:	(bad)  
   14005140b:	(bad)  
   14005140c:	jge    0x140051455
   14005140e:	(bad)  
   14005140f:	(bad)  
   140051410:	jl     0x140051458
   140051412:	(bad)  
   140051413:	(bad)  
   140051414:	jnp    0x14005145c
   140051416:	(bad)  
   140051417:	(bad)  
   140051418:	jnp    0x140051460
   14005141a:	(bad)  
   14005141b:	(bad)  
   14005141c:	jnp    0x140051463
   14005141e:	(bad)  
   14005141f:	(bad)  
   140051420:	jp     0x140051467
   140051422:	(bad)  
   140051423:	(bad)  
   140051424:	jns    0x14005146b
   140051426:	(bad)  
   140051427:	(bad)  
   140051428:	jns    0x14005146e
   14005142a:	(bad)  
   14005142b:	(bad)  
   14005142c:	js     0x140051472
   14005142e:	(bad)  
   14005142f:	(bad)  
   140051430:	js     0x140051476
   140051432:	(bad)  
   140051433:	push   QWORD PTR [rdi+0x43]
   140051436:	(bad)  
   140051437:	push   QWORD PTR [rdi+0x43]
   14005143a:	(bad)  
   14005143b:	push   QWORD PTR [rsi+0x43]
   14005143e:	(bad)  
   14005143f:	push   QWORD PTR [rsi+0x42]
   140051442:	(bad)  
   140051443:	push   QWORD PTR [rbp+0x42]
   140051446:	(bad)  
   140051447:	inc    DWORD PTR [rax]
	...
   140051485:	add    BYTE PTR [rax],al
   140051487:	add    BYTE PTR [rax-0x4f00ff9b],dh
   14005148d:	gs add bh,bh
   140051490:	scas   eax,DWORD PTR es:[rdi]
   140051491:	gs add bh,bh
   140051494:	scas   eax,DWORD PTR es:[rdi]
   140051495:	fs add bh,bh
   140051498:	scas   al,BYTE PTR es:[rdi]
   140051499:	fs add edi,edi
   14005149c:	scas   al,BYTE PTR es:[rdi]
   14005149d:	fs add edi,edi
   1400514a0:	lods   eax,DWORD PTR ds:[rsi]
   1400514a1:	movsxd eax,DWORD PTR [rcx]
   1400514a3:	jmp    FWORD PTR [rbp-0x5300fe9d]
   1400514a9:	movsxd eax,DWORD PTR [rcx]
   1400514ab:	jmp    FWORD PTR [rbx-0x5400fe9e]
   1400514b1:	(bad)  {k3}{z}
   1400514b6:	add    edi,edi
   1400514b8:	stos   BYTE PTR es:[rdi],al
   1400514b9:	(bad)  {k1}{z}
   1400514be:	add    edi,edi
   1400514c0:	test   eax,0xa8ff0161
   1400514c5:	(bad)  
   1400514c6:	add    edi,edi
   1400514c8:	test   al,0x60
   1400514ca:	add    edi,edi
   1400514cc:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400514cd:	(bad)  
   1400514ce:	add    edi,edi
   1400514d0:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400514d1:	(bad)  
   1400514d2:	add    edi,edi
   1400514d4:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400514d5:	pop    rdi
   1400514d6:	add    edi,edi
   1400514d8:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400514d9:	pop    rdi
   1400514da:	add    bh,bh
   1400514dc:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400514dd:	pop    rdi
   1400514de:	add    bh,bh
   1400514e0:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400514e1:	pop    rsi
   1400514e2:	add    bh,bh
   1400514e4:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400514e5:	pop    rsi
   1400514e6:	add    bh,bh
   1400514e8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400514e9:	pop    rsi
   1400514ea:	add    bh,bh
   1400514ec:	movabs ds:0xa2ff025da2ff025d,eax
   1400514f5:	pop    rbp
   1400514f6:	add    bh,bh
   1400514f8:	movabs eax,ds:0xa0ff025ca1ff025d
   140051501:	pop    rsp
   140051502:	add    bh,bh
   140051504:	movabs al,ds:0x9fff025b9fff025c
   14005150d:	pop    rbx
   14005150e:	add    bh,bh
   140051510:	sahf   
   140051511:	pop    rbx
   140051512:	add    bh,bh
   140051514:	sahf   
   140051515:	pop    rdx
   140051516:	add    bh,bh
   140051518:	popf   
   140051519:	pop    rdx
   14005151a:	add    edi,edi
   14005151c:	popf   
   14005151d:	pop    rdx
   14005151e:	add    edi,edi
   140051520:	pushf  
   140051521:	pop    rcx
   140051522:	add    edi,edi
   140051524:	pushf  
   140051525:	pop    rcx
   140051526:	add    edi,edi
   140051528:	fwait
   140051529:	pop    rcx
   14005152a:	add    edi,edi
   14005152c:	fwait
   14005152d:	pop    rax
   14005152e:	add    edi,edi
   140051530:	movsxd eax,DWORD PTR [rdx+riz*1-0x1]
   140051534:	out    0xd2,eax
   140051536:	mov    al,0xff
   140051538:	out    0xd2,eax
   14005153a:	mov    al,0xff
   14005153c:	out    0xd2,eax
   14005153e:	mov    al,0xff
   140051540:	out    0xd2,eax
   140051542:	mov    al,0xff
   140051544:	out    0xd2,eax
   140051546:	mov    al,0xff
   140051548:	out    0xd2,eax
   14005154a:	mov    al,0xff
   14005154c:	out    0xd2,eax
   14005154e:	mov    al,0xff
   140051550:	out    0xd2,eax
   140051552:	mov    al,0xff
   140051554:	out    0xd2,eax
   140051556:	mov    al,0xff
   140051558:	out    0xd2,eax
   14005155a:	mov    al,0xff
   14005155c:	out    0xd2,eax
   14005155e:	mov    al,0xff
   140051560:	out    0xd2,eax
   140051562:	mov    al,0xff
   140051564:	out    0xd2,eax
   140051566:	mov    al,0xff
   140051568:	out    0xd2,eax
   14005156a:	mov    al,0xff
   14005156c:	out    0xd2,eax
   14005156e:	mov    al,0xff
   140051570:	out    0xd2,eax
   140051572:	mov    al,0xff
   140051574:	out    0xd2,eax
   140051576:	mov    al,0xff
   140051578:	out    0xd2,eax
   14005157a:	mov    al,0xff
   14005157c:	out    0xd2,eax
   14005157e:	mov    al,0xff
   140051580:	out    0xd2,eax
   140051582:	mov    al,0xff
   140051584:	out    0xd2,eax
   140051586:	mov    al,0xff
   140051588:	out    0xd2,eax
   14005158a:	mov    al,0xff
   14005158c:	out    0xd2,eax
   14005158e:	mov    al,0xff
   140051590:	out    0xd2,eax
   140051592:	mov    al,0xff
   140051594:	out    0xd2,eax
   140051596:	mov    al,0xff
   140051598:	movsxd eax,DWORD PTR [rdx+riz*1-0x1]
   14005159c:	mov    WORD PTR [rax+0x5],ss
   14005159f:	dec    DWORD PTR [rbx-0x7400fab1]
   1400515a5:	rex.WRXB add rax,0x54f8aff
   1400515ab:	dec    DWORD PTR [rdx-0x7600fab2]
   1400515b1:	rex.WRX add rax,0x54e89ff
   1400515b7:	dec    DWORD PTR [rax-0x7700fab3]
   1400515bd:	rex.WRB add rax,0x54d87ff
   1400515c3:	inc    DWORD PTR [rdi-0x7900fab4]
   1400515c9:	rex.WR add rax,0x54c85ff
   1400515cf:	inc    DWORD PTR [rbp-0x7b00fab4]
   1400515d5:	rex.WXB add rax,0x64b84ff
   1400515db:	inc    DWORD PTR [rbx-0x7c00f9b6]
   1400515e1:	rex.WX (bad) 
   1400515e3:	inc    DWORD PTR [rdx-0x7d00f9b6]
   1400515e9:	rex.WX (bad) 
   1400515eb:	inc    DWORD PTR [rcx-0x7e00f9b7]
   1400515f1:	rex.WB (bad) 
   1400515f3:	inc    DWORD PTR [rax-0x7f00f9b7]
   1400515f9:	rex.W (bad) 
   1400515fb:	(bad)  
   1400515fc:	jg     0x140051646
   1400515fe:	(bad)  
   1400515ff:	(bad)  
   140051600:	jg     0x14005164a
   140051602:	(bad)  
   140051603:	(bad)  
   140051604:	jle    0x14005164d
   140051606:	(bad)  
   140051607:	(bad)  
   140051608:	jle    0x140051651
   14005160a:	(bad)  
   14005160b:	(bad)  
   14005160c:	jge    0x140051655
   14005160e:	(bad)  
   14005160f:	(bad)  
   140051610:	jge    0x140051659
   140051612:	(bad)  
   140051613:	(bad)  
   140051614:	jl     0x14005165c
   140051616:	(bad)  
   140051617:	(bad)  
   140051618:	jnp    0x140051660
   14005161a:	(bad)  
   14005161b:	(bad)  
   14005161c:	jnp    0x140051664
   14005161e:	(bad)  
   14005161f:	(bad)  
   140051620:	jnp    0x140051667
   140051622:	(bad)  
   140051623:	(bad)  
   140051624:	jp     0x14005166b
   140051626:	(bad)  
   140051627:	(bad)  
   140051628:	jns    0x14005166f
   14005162a:	(bad)  
   14005162b:	(bad)  
   14005162c:	jns    0x140051672
   14005162e:	(bad)  
   14005162f:	(bad)  
   140051630:	js     0x140051676
   140051632:	(bad)  
   140051633:	(bad)  
   140051634:	js     0x14005167a
   140051636:	(bad)  
   140051637:	push   QWORD PTR [rdi+0x43]
   14005163a:	(bad)  
   14005163b:	push   QWORD PTR [rdi+0x43]
   14005163e:	(bad)  
   14005163f:	push   QWORD PTR [rsi+0x43]
   140051642:	(bad)  
   140051643:	push   QWORD PTR [rsi+0x42]
   140051646:	(bad)  
   140051647:	inc    DWORD PTR [rax]
	...
   140051685:	add    BYTE PTR [rax],al
   140051687:	add    BYTE PTR [rcx-0x4f00ff9a],dh
   14005168d:	gs add bh,bh
   140051690:	mov    al,0x65
   140051692:	add    bh,bh
   140051694:	scas   eax,DWORD PTR es:[rdi]
   140051695:	gs add bh,bh
   140051698:	scas   eax,DWORD PTR es:[rdi]
   140051699:	fs add bh,bh
   14005169c:	scas   al,BYTE PTR es:[rdi]
   14005169d:	fs add edi,edi
   1400516a0:	scas   al,BYTE PTR es:[rdi]
   1400516a1:	fs add edi,edi
   1400516a4:	lods   eax,DWORD PTR ds:[rsi]
   1400516a5:	movsxd eax,DWORD PTR [rcx]
   1400516a7:	jmp    FWORD PTR [rbp-0x5300fe9d]
   1400516ad:	movsxd eax,DWORD PTR [rcx]
   1400516af:	jmp    FWORD PTR [rbx-0x5400fe9e]
   1400516b5:	(bad)  {k3}{z}
   1400516ba:	add    edi,edi
   1400516bc:	stos   BYTE PTR es:[rdi],al
   1400516bd:	(bad)  {k1}{z}
   1400516c2:	add    edi,edi
   1400516c4:	test   eax,0xa8ff0161
   1400516c9:	(bad)  
   1400516ca:	add    edi,edi
   1400516cc:	test   al,0x60
   1400516ce:	add    edi,edi
   1400516d0:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400516d1:	(bad)  
   1400516d2:	add    edi,edi
   1400516d4:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400516d5:	(bad)  
   1400516d6:	add    edi,edi
   1400516d8:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400516d9:	pop    rdi
   1400516da:	add    edi,edi
   1400516dc:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400516dd:	pop    rdi
   1400516de:	add    bh,bh
   1400516e0:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400516e1:	pop    rdi
   1400516e2:	add    bh,bh
   1400516e4:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400516e5:	pop    rsi
   1400516e6:	add    bh,bh
   1400516e8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400516e9:	pop    rsi
   1400516ea:	add    bh,bh
   1400516ec:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400516ed:	pop    rsi
   1400516ee:	add    bh,bh
   1400516f0:	movabs ds:0xa2ff025da2ff025d,eax
   1400516f9:	pop    rbp
   1400516fa:	add    bh,bh
   1400516fc:	movabs eax,ds:0xa0ff025ca1ff025d
   140051705:	pop    rsp
   140051706:	add    bh,bh
   140051708:	movabs al,ds:0x9fff025b9fff025c
   140051711:	pop    rbx
   140051712:	add    bh,bh
   140051714:	sahf   
   140051715:	pop    rbx
   140051716:	add    bh,bh
   140051718:	sahf   
   140051719:	pop    rdx
   14005171a:	add    bh,bh
   14005171c:	popf   
   14005171d:	pop    rdx
   14005171e:	add    edi,edi
   140051720:	popf   
   140051721:	pop    rdx
   140051722:	add    edi,edi
   140051724:	pushf  
   140051725:	pop    rcx
   140051726:	add    edi,edi
   140051728:	pushf  
   140051729:	pop    rcx
   14005172a:	add    edi,edi
   14005172c:	fwait
   14005172d:	pop    rcx
   14005172e:	add    edi,edi
   140051730:	movsxd eax,DWORD PTR [rdx+riz*1-0x1]
   140051734:	call   0x12904c90c
   140051739:	shl    DWORD PTR [rcx-0x4e2c1701],cl
   14005173f:	(bad)  
   140051740:	call   0x12904c918
   140051745:	shl    DWORD PTR [rcx-0x4e2c1701],cl
   14005174b:	(bad)  
   14005174c:	call   0x12904c924
   140051751:	shl    DWORD PTR [rcx-0x4e2c1701],cl
   140051757:	(bad)  
   140051758:	call   0x12904c930
   14005175d:	shl    DWORD PTR [rcx-0x4e2c1701],cl
   140051763:	(bad)  
   140051764:	call   0x12904c93c
   140051769:	shl    DWORD PTR [rcx-0x4e2c1701],cl
   14005176f:	(bad)  
   140051770:	call   0x12904c948
   140051775:	shl    DWORD PTR [rcx-0x4e2c1701],cl
   14005177b:	(bad)  
   14005177c:	call   0x12904c954
   140051781:	shl    DWORD PTR [rcx-0x4e2c1701],cl
   140051787:	(bad)  
   140051788:	call   0x12904c960
   14005178d:	shl    DWORD PTR [rcx-0x4e2c1701],cl
   140051793:	(bad)  
   140051794:	call   0x1a404c96c
   140051799:	and    r15b,dil
   14005179c:	mov    WORD PTR [rax+0x5],ss
   14005179f:	dec    DWORD PTR [rax+rdx*2+0x4f8bff05]
   1400517a6:	add    eax,0x54f8bff
   1400517ab:	dec    DWORD PTR [rdx-0x7500fab1]
   1400517b1:	rex.WRX add rax,0x54e89ff
   1400517b7:	dec    DWORD PTR [rcx-0x7700fab2]
   1400517bd:	rex.WRB add rax,0x54d88ff
   1400517c3:	inc    DWORD PTR [rdi-0x7800fab3]
   1400517c9:	rex.WR add rax,0x54c86ff
   1400517cf:	inc    DWORD PTR [rbp-0x7a00fab4]
   1400517d5:	rex.WR add rax,0x54b84ff
   1400517db:	inc    DWORD PTR [rbx+rcx*2+0x4a83ff06]
   1400517e2:	(bad)  
   1400517e3:	inc    DWORD PTR [rbx-0x7d00f9b6]
   1400517e9:	rex.WX (bad) 
   1400517eb:	inc    DWORD PTR [rdx-0x7e00f9b6]
   1400517f1:	rex.WB (bad) 
   1400517f3:	inc    DWORD PTR [rcx-0x7f00f9b7]
   1400517f9:	rex.WB (bad) 
   1400517fb:	inc    DWORD PTR [rax+0x7fff0648]
   140051801:	rex.W (bad) 
   140051803:	(bad)  
   140051804:	jg     0x14005184e
   140051806:	(bad)  
   140051807:	(bad)  
   140051808:	jle    0x140051851
   14005180a:	(bad)  
   14005180b:	(bad)  
   14005180c:	jle    0x140051855
   14005180e:	(bad)  
   14005180f:	(bad)  
   140051810:	jge    0x140051859
   140051812:	(bad)  
   140051813:	(bad)  
   140051814:	jge    0x14005185d
   140051816:	(bad)  
   140051817:	(bad)  
   140051818:	jl     0x140051860
   14005181a:	(bad)  
   14005181b:	(bad)  
   14005181c:	jnp    0x140051864
   14005181e:	(bad)  
   14005181f:	(bad)  
   140051820:	jnp    0x140051868
   140051822:	(bad)  
   140051823:	(bad)  
   140051824:	jnp    0x14005186b
   140051826:	(bad)  
   140051827:	(bad)  
   140051828:	jp     0x14005186f
   14005182a:	(bad)  
   14005182b:	(bad)  
   14005182c:	jns    0x140051873
   14005182e:	(bad)  
   14005182f:	(bad)  
   140051830:	jns    0x140051876
   140051832:	(bad)  
   140051833:	(bad)  
   140051834:	js     0x14005187a
   140051836:	(bad)  
   140051837:	(bad)  
   140051838:	js     0x14005187e
   14005183a:	(bad)  
   14005183b:	push   QWORD PTR [rdi+0x43]
   14005183e:	(bad)  
   14005183f:	push   QWORD PTR [rdi+0x43]
   140051842:	(bad)  
   140051843:	push   QWORD PTR [rsi+0x43]
   140051846:	(bad)  
   140051847:	inc    DWORD PTR [rax]
	...
   140051885:	add    BYTE PTR [rax],al
   140051887:	add    BYTE PTR [rcx-0x4e00ff9a],dh
   14005188d:	data16 add bh,bh
   140051890:	mov    al,0x65
   140051892:	add    bh,bh
   140051894:	mov    al,0x65
   140051896:	add    bh,bh
   140051898:	scas   eax,DWORD PTR es:[rdi]
   140051899:	gs add bh,bh
   14005189c:	scas   eax,DWORD PTR es:[rdi]
   14005189d:	fs add bh,bh
   1400518a0:	scas   al,BYTE PTR es:[rdi]
   1400518a1:	fs add edi,edi
   1400518a4:	scas   al,BYTE PTR es:[rdi]
   1400518a5:	fs add edi,edi
   1400518a8:	lods   eax,DWORD PTR ds:[rsi]
   1400518a9:	movsxd eax,DWORD PTR [rcx]
   1400518ab:	jmp    FWORD PTR [rbp-0x5300fe9d]
   1400518b1:	movsxd eax,DWORD PTR [rcx]
   1400518b3:	jmp    FWORD PTR [rbx-0x5400fe9e]
   1400518b9:	(bad)  {k3}{z}
   1400518be:	add    edi,edi
   1400518c0:	stos   BYTE PTR es:[rdi],al
   1400518c1:	(bad)  {k1}{z}
   1400518c6:	add    edi,edi
   1400518c8:	test   eax,0xa8ff0161
   1400518cd:	(bad)  
   1400518ce:	add    edi,edi
   1400518d0:	test   al,0x60
   1400518d2:	add    edi,edi
   1400518d4:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400518d5:	(bad)  
   1400518d6:	add    edi,edi
   1400518d8:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400518d9:	(bad)  
   1400518da:	add    edi,edi
   1400518dc:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400518dd:	pop    rdi
   1400518de:	add    edi,edi
   1400518e0:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400518e1:	pop    rdi
   1400518e2:	add    bh,bh
   1400518e4:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400518e5:	pop    rdi
   1400518e6:	add    bh,bh
   1400518e8:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400518e9:	pop    rsi
   1400518ea:	add    bh,bh
   1400518ec:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400518ed:	pop    rsi
   1400518ee:	add    bh,bh
   1400518f0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400518f1:	pop    rsi
   1400518f2:	add    bh,bh
   1400518f4:	movabs ds:0xa2ff025da2ff025d,eax
   1400518fd:	pop    rbp
   1400518fe:	add    bh,bh
   140051900:	movabs eax,ds:0xa0ff025ca1ff025d
   140051909:	pop    rsp
   14005190a:	add    bh,bh
   14005190c:	movabs al,ds:0x9fff025b9fff025c
   140051915:	pop    rbx
   140051916:	add    bh,bh
   140051918:	sahf   
   140051919:	pop    rbx
   14005191a:	add    bh,bh
   14005191c:	sahf   
   14005191d:	pop    rdx
   14005191e:	add    bh,bh
   140051920:	popf   
   140051921:	pop    rdx
   140051922:	add    edi,edi
   140051924:	popf   
   140051925:	pop    rdx
   140051926:	add    edi,edi
   140051928:	pushf  
   140051929:	pop    rcx
   14005192a:	add    edi,edi
   14005192c:	pushf  
   14005192d:	pop    rcx
   14005192e:	add    edi,edi
   140051930:	fs and r15d,r15d
   140051934:	call   0x12904cc0c
   140051939:	shl    DWORD PTR [rdx-0x4d2c1701],cl
   14005193f:	(bad)  
   140051940:	call   0x12904cc18
   140051945:	shl    DWORD PTR [rdx-0x4d2c1701],cl
   14005194b:	(bad)  
   14005194c:	call   0x12904cc24
   140051951:	shl    DWORD PTR [rdx-0x4d2c1701],cl
   140051957:	(bad)  
   140051958:	call   0x12904cc30
   14005195d:	shl    DWORD PTR [rdx-0x4d2c1701],cl
   140051963:	(bad)  
   140051964:	call   0x12904cc3c
   140051969:	shl    DWORD PTR [rdx-0x4d2c1701],cl
   14005196f:	(bad)  
   140051970:	call   0x12904cc48
   140051975:	shl    DWORD PTR [rdx-0x4d2c1701],cl
   14005197b:	(bad)  
   14005197c:	call   0x12904cc54
   140051981:	shl    DWORD PTR [rdx-0x4d2c1701],cl
   140051987:	(bad)  
   140051988:	call   0x12904cc60
   14005198d:	shl    DWORD PTR [rdx-0x4d2c1701],cl
   140051993:	(bad)  
   140051994:	call   0x1a504cc6c
   140051999:	and    r15d,r15d
   14005199c:	lea    edx,[rax+0x4]
   14005199f:	dec    DWORD PTR [rax+rdx*2+0x508cff05]
   1400519a6:	add    eax,0x54f8bff
   1400519ab:	dec    DWORD PTR [rbx-0x7500fab1]
   1400519b1:	rex.WRXB add rax,0x54e8aff
   1400519b7:	dec    DWORD PTR [rcx-0x7600fab2]
   1400519bd:	rex.WRX add rax,0x54d88ff
   1400519c3:	dec    DWORD PTR [rax-0x7800fab3]
   1400519c9:	rex.WRB add rax,0x54c87ff
   1400519cf:	inc    DWORD PTR [rsi-0x7a00fab4]
   1400519d5:	rex.WR add rax,0x54c85ff
   1400519db:	inc    DWORD PTR [rbx+rcx*2+0x4b84ff05]
   1400519e2:	(bad)  
   1400519e3:	inc    DWORD PTR [rbx-0x7c00f9b6]
   1400519e9:	rex.WX (bad) 
   1400519eb:	inc    DWORD PTR [rdx-0x7d00f9b6]
   1400519f1:	rex.WX (bad) 
   1400519f3:	inc    DWORD PTR [rcx-0x7e00f9b7]
   1400519f9:	rex.WB (bad) 
   1400519fb:	inc    DWORD PTR [rax-0x7f00f9b7]
   140051a01:	rex.W (bad) 
   140051a03:	(bad)  
   140051a04:	jg     0x140051a4e
   140051a06:	(bad)  
   140051a07:	(bad)  
   140051a08:	jg     0x140051a52
   140051a0a:	(bad)  
   140051a0b:	(bad)  
   140051a0c:	jle    0x140051a55
   140051a0e:	(bad)  
   140051a0f:	(bad)  
   140051a10:	jle    0x140051a59
   140051a12:	(bad)  
   140051a13:	(bad)  
   140051a14:	jge    0x140051a5d
   140051a16:	(bad)  
   140051a17:	(bad)  
   140051a18:	jge    0x140051a61
   140051a1a:	(bad)  
   140051a1b:	(bad)  
   140051a1c:	jl     0x140051a64
   140051a1e:	(bad)  
   140051a1f:	(bad)  
   140051a20:	jnp    0x140051a68
   140051a22:	(bad)  
   140051a23:	(bad)  
   140051a24:	jnp    0x140051a6c
   140051a26:	(bad)  
   140051a27:	(bad)  
   140051a28:	jnp    0x140051a6f
   140051a2a:	(bad)  
   140051a2b:	(bad)  
   140051a2c:	jp     0x140051a73
   140051a2e:	(bad)  
   140051a2f:	(bad)  
   140051a30:	jns    0x140051a77
   140051a32:	(bad)  
   140051a33:	(bad)  
   140051a34:	jns    0x140051a7a
   140051a36:	(bad)  
   140051a37:	(bad)  
   140051a38:	js     0x140051a7e
   140051a3a:	(bad)  
   140051a3b:	(bad)  
   140051a3c:	js     0x140051a82
   140051a3e:	(bad)  
   140051a3f:	push   QWORD PTR [rdi+0x43]
   140051a42:	(bad)  
   140051a43:	push   QWORD PTR [rdi+0x43]
   140051a46:	(bad)  
   140051a47:	inc    DWORD PTR [rax]
	...
   140051a85:	add    BYTE PTR [rax],al
   140051a87:	add    BYTE PTR [rdx-0x4e00ff9a],dh
   140051a8d:	data16 add bh,bh
   140051a90:	mov    cl,0x66
   140051a92:	add    bh,bh
   140051a94:	mov    al,0x65
   140051a96:	add    bh,bh
   140051a98:	mov    al,0x65
   140051a9a:	add    bh,bh
   140051a9c:	scas   eax,DWORD PTR es:[rdi]
   140051a9d:	gs add bh,bh
   140051aa0:	scas   eax,DWORD PTR es:[rdi]
   140051aa1:	fs add bh,bh
   140051aa4:	scas   al,BYTE PTR es:[rdi]
   140051aa5:	fs add edi,edi
   140051aa8:	scas   al,BYTE PTR es:[rdi]
   140051aa9:	fs add edi,edi
   140051aac:	lods   eax,DWORD PTR ds:[rsi]
   140051aad:	movsxd eax,DWORD PTR [rcx]
   140051aaf:	jmp    FWORD PTR [rbp-0x5300fe9d]
   140051ab5:	movsxd eax,DWORD PTR [rcx]
   140051ab7:	jmp    FWORD PTR [rbx-0x5400fe9e]
   140051abd:	(bad)  {k3}{z}
   140051ac2:	add    edi,edi
   140051ac4:	stos   BYTE PTR es:[rdi],al
   140051ac5:	(bad)  {k1}{z}
   140051aca:	add    edi,edi
   140051acc:	test   eax,0xa8ff0161
   140051ad1:	(bad)  
   140051ad2:	add    edi,edi
   140051ad4:	test   al,0x60
   140051ad6:	add    edi,edi
   140051ad8:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140051ad9:	(bad)  
   140051ada:	add    edi,edi
   140051adc:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140051add:	(bad)  
   140051ade:	add    edi,edi
   140051ae0:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140051ae1:	pop    rdi
   140051ae2:	add    edi,edi
   140051ae4:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140051ae5:	pop    rdi
   140051ae6:	add    bh,bh
   140051ae8:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140051ae9:	pop    rdi
   140051aea:	add    bh,bh
   140051aec:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140051aed:	pop    rsi
   140051aee:	add    bh,bh
   140051af0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140051af1:	pop    rsi
   140051af2:	add    bh,bh
   140051af4:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140051af5:	pop    rsi
   140051af6:	add    bh,bh
   140051af8:	movabs ds:0xa2ff025da2ff025d,eax
   140051b01:	pop    rbp
   140051b02:	add    bh,bh
   140051b04:	movabs eax,ds:0xa0ff025ca1ff025d
   140051b0d:	pop    rsp
   140051b0e:	add    bh,bh
   140051b10:	movabs al,ds:0x9fff025b9fff025c
   140051b19:	pop    rbx
   140051b1a:	add    bh,bh
   140051b1c:	sahf   
   140051b1d:	pop    rbx
   140051b1e:	add    bh,bh
   140051b20:	sahf   
   140051b21:	pop    rdx
   140051b22:	add    bh,bh
   140051b24:	popf   
   140051b25:	pop    rdx
   140051b26:	add    edi,edi
   140051b28:	popf   
   140051b29:	pop    rdx
   140051b2a:	add    edi,edi
   140051b2c:	pushf  
   140051b2d:	pop    rcx
   140051b2e:	add    edi,edi
   140051b30:	fs and r15d,r15d
   140051b34:	jmp    0x12a04cf0d
   140051b39:	(bad)  
   140051b3a:	mov    bl,0xff
   140051b3c:	jmp    0x12a04cf15
   140051b41:	(bad)  
   140051b42:	mov    bl,0xff
   140051b44:	jmp    0x12a04cf1d
   140051b49:	(bad)  
   140051b4a:	mov    bl,0xff
   140051b4c:	jmp    0x12a04cf25
   140051b51:	(bad)  
   140051b52:	mov    bl,0xff
   140051b54:	jmp    0x12a04cf2d
   140051b59:	(bad)  
   140051b5a:	mov    bl,0xff
   140051b5c:	jmp    0x12a04cf35
   140051b61:	(bad)  
   140051b62:	mov    bl,0xff
   140051b64:	jmp    0x12a04cf3d
   140051b69:	(bad)  
   140051b6a:	mov    bl,0xff
   140051b6c:	jmp    0x12a04cf45
   140051b71:	(bad)  
   140051b72:	mov    bl,0xff
   140051b74:	jmp    0x12a04cf4d
   140051b79:	(bad)  
   140051b7a:	mov    bl,0xff
   140051b7c:	jmp    0x12a04cf55
   140051b81:	(bad)  
   140051b82:	mov    bl,0xff
   140051b84:	jmp    0x12a04cf5d
   140051b89:	(bad)  
   140051b8a:	mov    bl,0xff
   140051b8c:	jmp    0x12a04cf65
   140051b91:	(bad)  
   140051b92:	mov    bl,0xff
   140051b94:	jmp    0x1a504cf6d
   140051b99:	and    r15d,r15d
   140051b9c:	mov    ss,WORD PTR [rcx+0x4]
   140051b9f:	dec    DWORD PTR [rbp-0x7300fbb0]
   140051ba5:	push   rax
   140051ba6:	add    eax,0x5508cff
   140051bab:	dec    DWORD PTR [rbx-0x7400fab1]
   140051bb1:	rex.WRXB add rax,0x54f8aff
   140051bb7:	dec    DWORD PTR [rdx-0x7600fab2]
   140051bbd:	rex.WRX add rax,0x54e89ff
   140051bc3:	dec    DWORD PTR [rax-0x7700fab3]
   140051bc9:	rex.WRB add rax,0x54d87ff
   140051bcf:	inc    DWORD PTR [rdi-0x7900fab4]
   140051bd5:	rex.WR add rax,0x54c85ff
   140051bdb:	inc    DWORD PTR [rbp-0x7b00fab4]
   140051be1:	rex.WXB add rax,0x64b84ff
   140051be7:	inc    DWORD PTR [rbx-0x7c00f9b6]
   140051bed:	rex.WX (bad) 
   140051bef:	inc    DWORD PTR [rdx-0x7d00f9b6]
   140051bf5:	rex.WX (bad) 
   140051bf7:	inc    DWORD PTR [rcx-0x7e00f9b7]
   140051bfd:	rex.WB (bad) 
   140051bff:	inc    DWORD PTR [rax-0x7f00f9b7]
   140051c05:	rex.W (bad) 
   140051c07:	(bad)  
   140051c08:	jg     0x140051c52
   140051c0a:	(bad)  
   140051c0b:	(bad)  
   140051c0c:	jg     0x140051c56
   140051c0e:	(bad)  
   140051c0f:	(bad)  
   140051c10:	jle    0x140051c59
   140051c12:	(bad)  
   140051c13:	(bad)  
   140051c14:	jle    0x140051c5d
   140051c16:	(bad)  
   140051c17:	(bad)  
   140051c18:	jge    0x140051c61
   140051c1a:	(bad)  
   140051c1b:	(bad)  
   140051c1c:	jge    0x140051c65
   140051c1e:	(bad)  
   140051c1f:	(bad)  
   140051c20:	jl     0x140051c68
   140051c22:	(bad)  
   140051c23:	(bad)  
   140051c24:	jnp    0x140051c6c
   140051c26:	(bad)  
   140051c27:	(bad)  
   140051c28:	jnp    0x140051c70
   140051c2a:	(bad)  
   140051c2b:	(bad)  
   140051c2c:	jnp    0x140051c73
   140051c2e:	(bad)  
   140051c2f:	(bad)  
   140051c30:	jp     0x140051c77
   140051c32:	(bad)  
   140051c33:	(bad)  
   140051c34:	jns    0x140051c7b
   140051c36:	(bad)  
   140051c37:	(bad)  
   140051c38:	jns    0x140051c7e
   140051c3a:	(bad)  
   140051c3b:	(bad)  
   140051c3c:	js     0x140051c82
   140051c3e:	(bad)  
   140051c3f:	(bad)  
   140051c40:	js     0x140051c86
   140051c42:	(bad)  
   140051c43:	push   QWORD PTR [rdi+0x43]
   140051c46:	(bad)  
   140051c47:	inc    DWORD PTR [rax]
	...
   140051c85:	add    BYTE PTR [rax],al
   140051c87:	add    BYTE PTR [rdx-0x4d00ff99],dh
   140051c8d:	data16 add bh,bh
   140051c90:	mov    cl,0x66
   140051c92:	add    bh,bh
   140051c94:	mov    cl,0x66
   140051c96:	add    bh,bh
   140051c98:	mov    al,0x65
   140051c9a:	add    bh,bh
   140051c9c:	mov    al,0x65
   140051c9e:	add    bh,bh
   140051ca0:	scas   eax,DWORD PTR es:[rdi]
   140051ca1:	gs add bh,bh
   140051ca4:	scas   eax,DWORD PTR es:[rdi]
   140051ca5:	fs add bh,bh
   140051ca8:	scas   al,BYTE PTR es:[rdi]
   140051ca9:	fs add edi,edi
   140051cac:	scas   al,BYTE PTR es:[rdi]
   140051cad:	fs add edi,edi
   140051cb0:	lods   eax,DWORD PTR ds:[rsi]
   140051cb1:	movsxd eax,DWORD PTR [rcx]
   140051cb3:	jmp    FWORD PTR [rbp-0x5300fe9d]
   140051cb9:	movsxd eax,DWORD PTR [rcx]
   140051cbb:	jmp    FWORD PTR [rbx-0x5400fe9e]
   140051cc1:	(bad)  {k3}{z}
   140051cc6:	add    edi,edi
   140051cc8:	stos   BYTE PTR es:[rdi],al
   140051cc9:	(bad)  {k1}{z}
   140051cce:	add    edi,edi
   140051cd0:	test   eax,0xa8ff0161
   140051cd5:	(bad)  
   140051cd6:	add    edi,edi
   140051cd8:	test   al,0x60
   140051cda:	add    edi,edi
   140051cdc:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140051cdd:	(bad)  
   140051cde:	add    edi,edi
   140051ce0:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140051ce1:	(bad)  
   140051ce2:	add    edi,edi
   140051ce4:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140051ce5:	pop    rdi
   140051ce6:	add    edi,edi
   140051ce8:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140051ce9:	pop    rdi
   140051cea:	add    bh,bh
   140051cec:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140051ced:	pop    rdi
   140051cee:	add    bh,bh
   140051cf0:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140051cf1:	pop    rsi
   140051cf2:	add    bh,bh
   140051cf4:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140051cf5:	pop    rsi
   140051cf6:	add    bh,bh
   140051cf8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140051cf9:	pop    rsi
   140051cfa:	add    bh,bh
   140051cfc:	movabs ds:0xa2ff025da2ff025d,eax
   140051d05:	pop    rbp
   140051d06:	add    bh,bh
   140051d08:	movabs eax,ds:0xa0ff025ca1ff025d
   140051d11:	pop    rsp
   140051d12:	add    bh,bh
   140051d14:	movabs al,ds:0x9fff025b9fff025c
   140051d1d:	pop    rbx
   140051d1e:	add    bh,bh
   140051d20:	sahf   
   140051d21:	pop    rbx
   140051d22:	add    bh,bh
   140051d24:	sahf   
   140051d25:	pop    rdx
   140051d26:	add    bh,bh
   140051d28:	popf   
   140051d29:	pop    rdx
   140051d2a:	add    edi,edi
   140051d2c:	popf   
   140051d2d:	pop    rdx
   140051d2e:	add    edi,edi
   140051d30:	gs rex.RX and r15d,edi
   140051d34:	jmp    0x12a04d20e
   140051d39:	(bad)  
   140051d3a:	mov    ah,0xff
   140051d3c:	jmp    0x12a04d216
   140051d41:	(bad)  
   140051d42:	mov    ah,0xff
   140051d44:	jmp    0x12a04d21e
   140051d49:	(bad)  
   140051d4a:	mov    ah,0xff
   140051d4c:	jmp    0x12a04d226
   140051d51:	(bad)  
   140051d52:	mov    ah,0xff
   140051d54:	jmp    0x12a04d22e
   140051d59:	(bad)  
   140051d5a:	mov    ah,0xff
   140051d5c:	jmp    0x12a04d236
   140051d61:	(bad)  
   140051d62:	mov    ah,0xff
   140051d64:	jmp    0x12a04d23e
   140051d69:	(bad)  
   140051d6a:	mov    ah,0xff
   140051d6c:	jmp    0x12a04d246
   140051d71:	(bad)  
   140051d72:	mov    ah,0xff
   140051d74:	jmp    0x12a04d24e
   140051d79:	(bad)  
   140051d7a:	mov    ah,0xff
   140051d7c:	jmp    0x12a04d256
   140051d81:	(bad)  
   140051d82:	mov    ah,0xff
   140051d84:	jmp    0x12a04d25e
   140051d89:	(bad)  
   140051d8a:	mov    ah,0xff
   140051d8c:	jmp    0x12a04d266
   140051d91:	(bad)  
   140051d92:	mov    ah,0xff
   140051d94:	jmp    0x1a604d26e
   140051d99:	rex.RX and r15d,edi
   140051d9c:	mov    ss,WORD PTR [rcx+0x4]
   140051d9f:	dec    DWORD PTR [rsi-0x7200fbaf]
   140051da5:	push   rax
   140051da6:	add    al,0xff
   140051da8:	mov    WORD PTR [rax+0x5],ss
   140051dab:	dec    DWORD PTR [rax+rdx*2+0x4f8bff05]
   140051db2:	add    eax,0x54f8bff
   140051db7:	dec    DWORD PTR [rdx-0x7500fab1]
   140051dbd:	rex.WRX add rax,0x54e89ff
   140051dc3:	dec    DWORD PTR [rcx-0x7700fab2]
   140051dc9:	rex.WRB add rax,0x54d88ff
   140051dcf:	inc    DWORD PTR [rdi-0x7800fab3]
   140051dd5:	rex.WR add rax,0x54c86ff
   140051ddb:	inc    DWORD PTR [rbp-0x7a00fab4]
   140051de1:	rex.WR add rax,0x54b84ff
   140051de7:	inc    DWORD PTR [rbx+rcx*2+0x4a83ff06]
   140051dee:	(bad)  
   140051def:	inc    DWORD PTR [rbx-0x7d00f9b6]
   140051df5:	rex.WX (bad) 
   140051df7:	inc    DWORD PTR [rdx-0x7e00f9b6]
   140051dfd:	rex.WB (bad) 
   140051dff:	inc    DWORD PTR [rcx-0x7f00f9b7]
   140051e05:	rex.WB (bad) 
   140051e07:	inc    DWORD PTR [rax+0x7fff0648]
   140051e0d:	rex.W (bad) 
   140051e0f:	(bad)  
   140051e10:	jg     0x140051e5a
   140051e12:	(bad)  
   140051e13:	(bad)  
   140051e14:	jle    0x140051e5d
   140051e16:	(bad)  
   140051e17:	(bad)  
   140051e18:	jle    0x140051e61
   140051e1a:	(bad)  
   140051e1b:	(bad)  
   140051e1c:	jge    0x140051e65
   140051e1e:	(bad)  
   140051e1f:	(bad)  
   140051e20:	jge    0x140051e69
   140051e22:	(bad)  
   140051e23:	(bad)  
   140051e24:	jl     0x140051e6c
   140051e26:	(bad)  
   140051e27:	(bad)  
   140051e28:	jnp    0x140051e70
   140051e2a:	(bad)  
   140051e2b:	(bad)  
   140051e2c:	jnp    0x140051e74
   140051e2e:	(bad)  
   140051e2f:	(bad)  
   140051e30:	jnp    0x140051e77
   140051e32:	(bad)  
   140051e33:	(bad)  
   140051e34:	jp     0x140051e7b
   140051e36:	(bad)  
   140051e37:	(bad)  
   140051e38:	jns    0x140051e7f
   140051e3a:	(bad)  
   140051e3b:	(bad)  
   140051e3c:	jns    0x140051e82
   140051e3e:	(bad)  
   140051e3f:	(bad)  
   140051e40:	js     0x140051e86
   140051e42:	(bad)  
   140051e43:	(bad)  
   140051e44:	js     0x140051e8a
   140051e46:	(bad)  
   140051e47:	inc    DWORD PTR [rax]
	...
   140051e85:	add    BYTE PTR [rax],al
   140051e87:	add    BYTE PTR [rbx-0x4d00ff99],dh
   140051e8d:	addr32 add bh,bh
   140051e90:	mov    dl,0x66
   140051e92:	add    bh,bh
   140051e94:	mov    cl,0x66
   140051e96:	add    bh,bh
   140051e98:	mov    cl,0x66
   140051e9a:	add    bh,bh
   140051e9c:	mov    al,0x65
   140051e9e:	add    bh,bh
   140051ea0:	mov    al,0x65
   140051ea2:	add    bh,bh
   140051ea4:	scas   eax,DWORD PTR es:[rdi]
   140051ea5:	gs add bh,bh
   140051ea8:	xchg   esp,eax
   140051ea9:	push   rbp
   140051eaa:	add    bh,bh
   140051eac:	mov    cl,BYTE PTR [rdi+0x1]
   140051eaf:	call   FWORD PTR [rdx-0x5200fea7]
   140051eb5:	movsxd eax,DWORD PTR [rcx]
   140051eb7:	jmp    FWORD PTR [rbp-0x5300fe9d]
   140051ebd:	movsxd eax,DWORD PTR [rcx]
   140051ebf:	jmp    FWORD PTR [rbx-0x5400fe9e]
   140051ec5:	(bad)  {k3}{z}
   140051eca:	add    edi,edi
   140051ecc:	stos   BYTE PTR es:[rdi],al
   140051ecd:	(bad)  {k1}{z}
   140051ed2:	add    edi,edi
   140051ed4:	test   eax,0xa8ff0161
   140051ed9:	(bad)  
   140051eda:	add    edi,edi
   140051edc:	test   al,0x60
   140051ede:	add    edi,edi
   140051ee0:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140051ee1:	(bad)  
   140051ee2:	add    edi,edi
   140051ee4:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140051ee5:	(bad)  
   140051ee6:	add    edi,edi
   140051ee8:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140051ee9:	pop    rdi
   140051eea:	add    edi,edi
   140051eec:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140051eed:	pop    rdi
   140051eee:	add    bh,bh
   140051ef0:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140051ef1:	pop    rdi
   140051ef2:	add    bh,bh
   140051ef4:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140051ef5:	pop    rsi
   140051ef6:	add    bh,bh
   140051ef8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140051ef9:	pop    rsi
   140051efa:	add    bh,bh
   140051efc:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140051efd:	pop    rsi
   140051efe:	add    bh,bh
   140051f00:	movabs ds:0xa2ff025da2ff025d,eax
   140051f09:	pop    rbp
   140051f0a:	add    bh,bh
   140051f0c:	movabs eax,ds:0xa0ff025ca1ff025d
   140051f15:	pop    rsp
   140051f16:	add    bh,bh
   140051f18:	movabs al,ds:0x9fff025b9fff025c
   140051f21:	pop    rbx
   140051f22:	add    bh,bh
   140051f24:	sahf   
   140051f25:	pop    rbx
   140051f26:	add    bh,bh
   140051f28:	sahf   
   140051f29:	pop    rdx
   140051f2a:	add    bh,bh
   140051f2c:	popf   
   140051f2d:	pop    rdx
   140051f2e:	add    edi,edi
   140051f30:	gs rex.RX and al,0xff
   140051f34:	(bad)  
   140051f35:	(bad)  
   140051f36:	mov    ch,0xff
   140051f38:	(bad)  
   140051f39:	(bad)  
   140051f3a:	mov    ch,0xff
   140051f3c:	(bad)  
   140051f3d:	(bad)  
   140051f3e:	mov    ch,0xff
   140051f40:	(bad)  
   140051f41:	(bad)  
   140051f42:	mov    ch,0xff
   140051f44:	(bad)  
   140051f45:	(bad)  
   140051f46:	mov    ch,0xff
   140051f48:	(bad)  
   140051f49:	(bad)  
   140051f4a:	mov    ch,0xff
   140051f4c:	(bad)  
   140051f4d:	(bad)  
   140051f4e:	mov    ch,0xff
   140051f50:	(bad)  
   140051f51:	(bad)  
   140051f52:	mov    ch,0xff
   140051f54:	(bad)  
   140051f55:	(bad)  
   140051f56:	mov    ch,0xff
   140051f58:	(bad)  
   140051f59:	(bad)  
   140051f5a:	mov    ch,0xff
   140051f5c:	(bad)  
   140051f5d:	(bad)  
   140051f5e:	mov    ch,0xff
   140051f60:	(bad)  
   140051f61:	(bad)  
   140051f62:	mov    ch,0xff
   140051f64:	(bad)  
   140051f65:	(bad)  
   140051f66:	mov    ch,0xff
   140051f68:	(bad)  
   140051f69:	(bad)  
   140051f6a:	mov    ch,0xff
   140051f6c:	(bad)  
   140051f6d:	(bad)  
   140051f6e:	mov    ch,0xff
   140051f70:	(bad)  
   140051f71:	(bad)  
   140051f72:	mov    ch,0xff
   140051f74:	(bad)  
   140051f75:	(bad)  
   140051f76:	mov    ch,0xff
   140051f78:	(bad)  
   140051f79:	(bad)  
   140051f7a:	mov    ch,0xff
   140051f7c:	(bad)  
   140051f7d:	(bad)  
   140051f7e:	mov    ch,0xff
   140051f80:	(bad)  
   140051f81:	(bad)  
   140051f82:	mov    ch,0xff
   140051f84:	(bad)  
   140051f85:	(bad)  
   140051f86:	mov    ch,0xff
   140051f88:	(bad)  
   140051f89:	(bad)  
   140051f8a:	mov    ch,0xff
   140051f8c:	(bad)  
   140051f8d:	(bad)  
   140051f8e:	mov    ch,0xff
   140051f90:	(bad)  
   140051f91:	(bad)  
   140051f92:	mov    ch,0xff
   140051f94:	(bad)  
   140051f95:	(bad)  
   140051f96:	mov    ch,0xff
   140051f98:	gs rex.RX and al,0xff
   140051f9c:	mov    ss,WORD PTR [rcx+0x4]
   140051f9f:	dec    DWORD PTR [rsi-0x7100fbaf]
   140051fa5:	push   rcx
   140051fa6:	add    al,0xff
   140051fa8:	lea    edx,[rax+0x4]
   140051fab:	dec    DWORD PTR [rax+rdx*2+0x508cff05]
   140051fb2:	add    eax,0x54f8bff
   140051fb7:	dec    DWORD PTR [rbx-0x7500fab1]
   140051fbd:	rex.WRXB add rax,0x54e8aff
   140051fc3:	dec    DWORD PTR [rcx-0x7600fab2]
   140051fc9:	rex.WRX add rax,0x54d88ff
   140051fcf:	dec    DWORD PTR [rax-0x7800fab3]
   140051fd5:	rex.WRB add rax,0x54c87ff
   140051fdb:	inc    DWORD PTR [rsi-0x7a00fab4]
   140051fe1:	rex.WR add rax,0x54c85ff
   140051fe7:	inc    DWORD PTR [rbx+rcx*2+0x4b84ff05]
   140051fee:	(bad)  
   140051fef:	inc    DWORD PTR [rbx-0x7c00f9b6]
   140051ff5:	rex.WX (bad) 
   140051ff7:	inc    DWORD PTR [rdx-0x7d00f9b6]
   140051ffd:	rex.WX (bad) 
   140051fff:	inc    DWORD PTR [rcx-0x7e00f9b7]
   140052005:	rex.WB (bad) 
   140052007:	inc    DWORD PTR [rax-0x7f00f9b7]
   14005200d:	rex.W (bad) 
   14005200f:	(bad)  
   140052010:	jg     0x14005205a
   140052012:	(bad)  
   140052013:	(bad)  
   140052014:	jg     0x14005205e
   140052016:	(bad)  
   140052017:	(bad)  
   140052018:	jle    0x140052061
   14005201a:	(bad)  
   14005201b:	(bad)  
   14005201c:	jle    0x140052065
   14005201e:	(bad)  
   14005201f:	(bad)  
   140052020:	jge    0x140052069
   140052022:	(bad)  
   140052023:	(bad)  
   140052024:	jge    0x14005206d
   140052026:	(bad)  
   140052027:	(bad)  
   140052028:	jl     0x140052070
   14005202a:	(bad)  
   14005202b:	(bad)  
   14005202c:	jnp    0x140052074
   14005202e:	(bad)  
   14005202f:	(bad)  
   140052030:	jnp    0x140052078
   140052032:	(bad)  
   140052033:	(bad)  
   140052034:	jnp    0x14005207b
   140052036:	(bad)  
   140052037:	(bad)  
   140052038:	jp     0x14005207f
   14005203a:	(bad)  
   14005203b:	(bad)  
   14005203c:	jns    0x140052083
   14005203e:	(bad)  
   14005203f:	(bad)  
   140052040:	jns    0x140052086
   140052042:	(bad)  
   140052043:	(bad)  
   140052044:	js     0x14005208a
   140052046:	(bad)  
   140052047:	inc    DWORD PTR [rax]
	...
   140052085:	add    BYTE PTR [rax],al
   140052087:	add    BYTE PTR [rbx-0x4c00ff99],dh
   14005208d:	addr32 add bh,bh
   140052090:	mov    dl,0x67
   140052092:	add    bh,bh
   140052094:	mov    dl,0x66
   140052096:	add    bh,bh
   140052098:	mov    cl,0x66
   14005209a:	add    bh,bh
   14005209c:	mov    cl,0x66
   14005209e:	add    bh,bh
   1400520a0:	mov    al,0x65
   1400520a2:	add    bh,bh
   1400520a4:	test   eax,0x53ff0061
   1400520a9:	jnp    0x140052125
   1400520ab:	inc    DWORD PTR [rdi+rcx*4-0x59]
   1400520af:	call   FWORD PTR [rsi+rbp*2+0x5c]
   1400520b3:	inc    DWORD PTR [rax-0x5f00feb6]
   1400520b9:	pop    rsp
   1400520ba:	add    edi,edi
   1400520bc:	lods   eax,DWORD PTR ds:[rsi]
   1400520bd:	movsxd eax,DWORD PTR [rcx]
   1400520bf:	jmp    FWORD PTR [rbx+riz*2+0x62abff01]
   1400520c6:	add    edi,edi
   1400520c8:	stos   DWORD PTR es:[rdi],eax
   1400520c9:	(bad)  {k3}{z}
   1400520ce:	add    edi,edi
   1400520d0:	stos   BYTE PTR es:[rdi],al
   1400520d1:	(bad)  {k1}{z}
   1400520d6:	add    edi,edi
   1400520d8:	test   eax,0xa8ff0161
   1400520dd:	(bad)  
   1400520de:	add    edi,edi
   1400520e0:	test   al,0x60
   1400520e2:	add    edi,edi
   1400520e4:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400520e5:	(bad)  
   1400520e6:	add    edi,edi
   1400520e8:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400520e9:	(bad)  
   1400520ea:	add    edi,edi
   1400520ec:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400520ed:	pop    rdi
   1400520ee:	add    edi,edi
   1400520f0:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400520f1:	pop    rdi
   1400520f2:	add    bh,bh
   1400520f4:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400520f5:	pop    rdi
   1400520f6:	add    bh,bh
   1400520f8:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400520f9:	pop    rsi
   1400520fa:	add    bh,bh
   1400520fc:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400520fd:	pop    rsi
   1400520fe:	add    bh,bh
   140052100:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140052101:	pop    rsi
   140052102:	add    bh,bh
   140052104:	movabs ds:0xa2ff025da2ff025d,eax
   14005210d:	pop    rbp
   14005210e:	add    bh,bh
   140052110:	movabs eax,ds:0xa0ff025ca1ff025d
   140052119:	pop    rsp
   14005211a:	add    bh,bh
   14005211c:	movabs al,ds:0x9fff025b9fff025c
   140052125:	pop    rbx
   140052126:	add    bh,bh
   140052128:	sahf   
   140052129:	pop    rbx
   14005212a:	add    bh,bh
   14005212c:	sahf   
   14005212d:	pop    rdx
   14005212e:	add    bh,bh
   140052130:	data16 rex.RXB and al,0xff
   140052134:	(bad)  
   140052135:	xlat   BYTE PTR ds:[rbx]
   140052136:	mov    dh,0xff
   140052138:	(bad)  
   140052139:	xlat   BYTE PTR ds:[rbx]
   14005213a:	mov    dh,0xff
   14005213c:	(bad)  
   14005213d:	xlat   BYTE PTR ds:[rbx]
   14005213e:	mov    dh,0xff
   140052140:	(bad)  
   140052141:	xlat   BYTE PTR ds:[rbx]
   140052142:	mov    dh,0xff
   140052144:	(bad)  
   140052145:	xlat   BYTE PTR ds:[rbx]
   140052146:	mov    dh,0xff
   140052148:	(bad)  
   140052149:	xlat   BYTE PTR ds:[rbx]
   14005214a:	mov    dh,0xff
   14005214c:	(bad)  
   14005214d:	xlat   BYTE PTR ds:[rbx]
   14005214e:	mov    dh,0xff
   140052150:	(bad)  
   140052151:	xlat   BYTE PTR ds:[rbx]
   140052152:	mov    dh,0xff
   140052154:	(bad)  
   140052155:	xlat   BYTE PTR ds:[rbx]
   140052156:	mov    dh,0xff
   140052158:	(bad)  
   140052159:	xlat   BYTE PTR ds:[rbx]
   14005215a:	mov    dh,0xff
   14005215c:	(bad)  
   14005215d:	xlat   BYTE PTR ds:[rbx]
   14005215e:	mov    dh,0xff
   140052160:	(bad)  
   140052161:	xlat   BYTE PTR ds:[rbx]
   140052162:	mov    dh,0xff
   140052164:	(bad)  
   140052165:	xlat   BYTE PTR ds:[rbx]
   140052166:	mov    dh,0xff
   140052168:	(bad)  
   140052169:	xlat   BYTE PTR ds:[rbx]
   14005216a:	mov    dh,0xff
   14005216c:	(bad)  
   14005216d:	xlat   BYTE PTR ds:[rbx]
   14005216e:	mov    dh,0xff
   140052170:	(bad)  
   140052171:	xlat   BYTE PTR ds:[rbx]
   140052172:	mov    dh,0xff
   140052174:	(bad)  
   140052175:	xlat   BYTE PTR ds:[rbx]
   140052176:	mov    dh,0xff
   140052178:	(bad)  
   140052179:	xlat   BYTE PTR ds:[rbx]
   14005217a:	mov    dh,0xff
   14005217c:	(bad)  
   14005217d:	xlat   BYTE PTR ds:[rbx]
   14005217e:	mov    dh,0xff
   140052180:	(bad)  
   140052181:	xlat   BYTE PTR ds:[rbx]
   140052182:	mov    dh,0xff
   140052184:	(bad)  
   140052185:	xlat   BYTE PTR ds:[rbx]
   140052186:	mov    dh,0xff
   140052188:	(bad)  
   140052189:	xlat   BYTE PTR ds:[rbx]
   14005218a:	mov    dh,0xff
   14005218c:	(bad)  
   14005218d:	xlat   BYTE PTR ds:[rbx]
   14005218e:	mov    dh,0xff
   140052190:	(bad)  
   140052191:	xlat   BYTE PTR ds:[rbx]
   140052192:	mov    dh,0xff
   140052194:	(bad)  
   140052195:	xlat   BYTE PTR ds:[rbx]
   140052196:	mov    dh,0xff
   140052198:	data16 rex.RXB and al,0xff
   14005219c:	(bad)  
   14005219d:	push   rdx
   14005219e:	add    al,0xff
   1400521a0:	mov    ss,WORD PTR [rcx+0x4]
   1400521a3:	dec    DWORD PTR [rsi-0x7100fbaf]
   1400521a9:	push   rcx
   1400521aa:	add    al,0xff
   1400521ac:	lea    edx,[rax+0x4]
   1400521af:	dec    DWORD PTR [rax+rdx*2+0x508cff05]
   1400521b6:	add    eax,0x54f8bff
   1400521bb:	dec    DWORD PTR [rbx-0x7500fab1]
   1400521c1:	rex.WRXB add rax,0x54e8aff
   1400521c7:	dec    DWORD PTR [rcx-0x7600fab2]
   1400521cd:	rex.WRX add rax,0x54d88ff
   1400521d3:	dec    DWORD PTR [rax-0x7800fab3]
   1400521d9:	rex.WRB add rax,0x54c87ff
   1400521df:	inc    DWORD PTR [rsi-0x7a00fab4]
   1400521e5:	rex.WR add rax,0x54c85ff
   1400521eb:	inc    DWORD PTR [rbx+rcx*2+0x4b84ff05]
   1400521f2:	(bad)  
   1400521f3:	inc    DWORD PTR [rbx-0x7c00f9b6]
   1400521f9:	rex.WX (bad) 
   1400521fb:	inc    DWORD PTR [rdx-0x7d00f9b6]
   140052201:	rex.WX (bad) 
   140052203:	inc    DWORD PTR [rcx-0x7e00f9b7]
   140052209:	rex.WB (bad) 
   14005220b:	inc    DWORD PTR [rax-0x7f00f9b7]
   140052211:	rex.W (bad) 
   140052213:	(bad)  
   140052214:	jg     0x14005225e
   140052216:	(bad)  
   140052217:	(bad)  
   140052218:	jg     0x140052262
   14005221a:	(bad)  
   14005221b:	(bad)  
   14005221c:	jle    0x140052265
   14005221e:	(bad)  
   14005221f:	(bad)  
   140052220:	jle    0x140052269
   140052222:	(bad)  
   140052223:	(bad)  
   140052224:	jge    0x14005226d
   140052226:	(bad)  
   140052227:	(bad)  
   140052228:	jge    0x140052271
   14005222a:	(bad)  
   14005222b:	(bad)  
   14005222c:	jl     0x140052274
   14005222e:	(bad)  
   14005222f:	(bad)  
   140052230:	jnp    0x140052278
   140052232:	(bad)  
   140052233:	(bad)  
   140052234:	jnp    0x14005227c
   140052236:	(bad)  
   140052237:	(bad)  
   140052238:	jnp    0x14005227f
   14005223a:	(bad)  
   14005223b:	(bad)  
   14005223c:	jp     0x140052283
   14005223e:	(bad)  
   14005223f:	(bad)  
   140052240:	jns    0x140052287
   140052242:	(bad)  
   140052243:	(bad)  
   140052244:	jns    0x14005228a
   140052246:	(bad)  
   140052247:	inc    DWORD PTR [rax]
	...
   140052285:	add    BYTE PTR [rax],al
   140052287:	add    BYTE PTR [rbx-0x4c00ff99],dh
   14005228d:	addr32 add bh,bh
   140052290:	mov    bl,0x67
   140052292:	add    bh,bh
   140052294:	mov    dl,0x67
   140052296:	add    bh,bh
   140052298:	mov    dl,0x66
   14005229a:	add    bh,bh
   14005229c:	mov    cl,0x66
   14005229e:	add    bh,bh
   1400522a0:	mov    cl,0x66
   1400522a2:	add    bh,bh
   1400522a4:	mov    WORD PTR [rbx+0x1e],fs
   1400522a7:	jmp    FWORD PTR [rax+rsi*4]
   1400522aa:	repz jmp FWORD PTR [rax+rsi*4]
   1400522ae:	repz jmp FWORD PTR [rax+rsi*4]
   1400522b2:	repz push QWORD PTR [rsi]
   1400522b5:	movabs ds:0x4f89ff3e6166ffd5,eax
   1400522be:	add    edi,edi
   1400522c0:	test   eax,0xacff0161
   1400522c5:	movsxd eax,DWORD PTR [rcx]
   1400522c7:	jmp    FWORD PTR [rbx-0x5400fe9e]
   1400522cd:	(bad)  {k3}{z}
   1400522d2:	add    edi,edi
   1400522d4:	stos   BYTE PTR es:[rdi],al
   1400522d5:	(bad)  {k1}{z}
   1400522da:	add    edi,edi
   1400522dc:	test   eax,0xa8ff0161
   1400522e1:	(bad)  
   1400522e2:	add    edi,edi
   1400522e4:	test   al,0x60
   1400522e6:	add    edi,edi
   1400522e8:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400522e9:	(bad)  
   1400522ea:	add    edi,edi
   1400522ec:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400522ed:	(bad)  
   1400522ee:	add    edi,edi
   1400522f0:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400522f1:	pop    rdi
   1400522f2:	add    edi,edi
   1400522f4:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400522f5:	pop    rdi
   1400522f6:	add    bh,bh
   1400522f8:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400522f9:	pop    rdi
   1400522fa:	add    bh,bh
   1400522fc:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400522fd:	pop    rsi
   1400522fe:	add    bh,bh
   140052300:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140052301:	pop    rsi
   140052302:	add    bh,bh
   140052304:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140052305:	pop    rsi
   140052306:	add    bh,bh
   140052308:	movabs ds:0xa2ff025da2ff025d,eax
   140052311:	pop    rbp
   140052312:	add    bh,bh
   140052314:	movabs eax,ds:0xa0ff025ca1ff025d
   14005231d:	pop    rsp
   14005231e:	add    bh,bh
   140052320:	movabs al,ds:0x9fff025b9fff025c
   140052329:	pop    rbx
   14005232a:	add    bh,bh
   14005232c:	sahf   
   14005232d:	pop    rbx
   14005232e:	add    bh,bh
   140052330:	addr32 rex.RXB and al,0xff
   140052334:	jmp    0x14005230d
   140052336:	mov    eax,0xb8d7ebff
   14005233b:	(bad)  
   14005233c:	jmp    0x140052315
   14005233e:	mov    eax,0xb8d7ebff
   140052343:	(bad)  
   140052344:	jmp    0x14005231d
   140052346:	mov    eax,0xb8d7ebff
   14005234b:	(bad)  
   14005234c:	jmp    0x140052325
   14005234e:	mov    eax,0xb8d7ebff
   140052353:	(bad)  
   140052354:	jmp    0x14005232d
   140052356:	mov    eax,0xb8d7ebff
   14005235b:	(bad)  
   14005235c:	jmp    0x140052335
   14005235e:	mov    eax,0xb8d7ebff
   140052363:	(bad)  
   140052364:	jmp    0x14005233d
   140052366:	mov    eax,0xb8d7ebff
   14005236b:	(bad)  
   14005236c:	jmp    0x140052345
   14005236e:	mov    eax,0xb8d7ebff
   140052373:	(bad)  
   140052374:	jmp    0x14005234d
   140052376:	mov    eax,0xb8d7ebff
   14005237b:	(bad)  
   14005237c:	jmp    0x140052355
   14005237e:	mov    eax,0xb8d7ebff
   140052383:	(bad)  
   140052384:	jmp    0x14005235d
   140052386:	mov    eax,0xb8d7ebff
   14005238b:	(bad)  
   14005238c:	jmp    0x140052365
   14005238e:	mov    eax,0xb8d7ebff
   140052393:	(bad)  
   140052394:	jmp    0x14005236d
   140052396:	mov    eax,0x244767ff
   14005239b:	call   QWORD PTR [rax-0x7000fbae]
   1400523a1:	push   rdx
   1400523a2:	add    al,0xff
   1400523a4:	mov    ss,WORD PTR [rcx+0x4]
   1400523a7:	dec    DWORD PTR [rsi-0x7100fbaf]
   1400523ad:	push   rcx
   1400523ae:	add    al,0xff
   1400523b0:	lea    edx,[rax+0x4]
   1400523b3:	dec    DWORD PTR [rax+rdx*2+0x508cff05]
   1400523ba:	add    eax,0x54f8bff
   1400523bf:	dec    DWORD PTR [rbx-0x7500fab1]
   1400523c5:	rex.WRXB add rax,0x54e8aff
   1400523cb:	dec    DWORD PTR [rcx-0x7600fab2]
   1400523d1:	rex.WRX add rax,0x54d88ff
   1400523d7:	dec    DWORD PTR [rax-0x7800fab3]
   1400523dd:	rex.WRB add rax,0x54c87ff
   1400523e3:	inc    DWORD PTR [rsi-0x7a00fab4]
   1400523e9:	rex.WR add rax,0x54c85ff
   1400523ef:	inc    DWORD PTR [rbx+rcx*2+0x4b84ff05]
   1400523f6:	(bad)  
   1400523f7:	inc    DWORD PTR [rbx-0x7c00f9b6]
   1400523fd:	rex.WX (bad) 
   1400523ff:	inc    DWORD PTR [rdx-0x7d00f9b6]
   140052405:	rex.WX (bad) 
   140052407:	inc    DWORD PTR [rcx-0x7e00f9b7]
   14005240d:	rex.WB (bad) 
   14005240f:	inc    DWORD PTR [rax-0x7f00f9b7]
   140052415:	rex.W (bad) 
   140052417:	(bad)  
   140052418:	jg     0x140052462
   14005241a:	(bad)  
   14005241b:	(bad)  
   14005241c:	jg     0x140052466
   14005241e:	(bad)  
   14005241f:	(bad)  
   140052420:	jle    0x140052469
   140052422:	(bad)  
   140052423:	(bad)  
   140052424:	jle    0x14005246d
   140052426:	(bad)  
   140052427:	(bad)  
   140052428:	jge    0x140052471
   14005242a:	(bad)  
   14005242b:	(bad)  
   14005242c:	jge    0x140052475
   14005242e:	(bad)  
   14005242f:	(bad)  
   140052430:	jl     0x140052478
   140052432:	(bad)  
   140052433:	(bad)  
   140052434:	jnp    0x14005247c
   140052436:	(bad)  
   140052437:	(bad)  
   140052438:	jnp    0x140052480
   14005243a:	(bad)  
   14005243b:	(bad)  
   14005243c:	jnp    0x140052483
   14005243e:	(bad)  
   14005243f:	(bad)  
   140052440:	jp     0x140052487
   140052442:	(bad)  
   140052443:	(bad)  
   140052444:	jns    0x14005248b
   140052446:	(bad)  
   140052447:	inc    DWORD PTR [rax]
	...
   140052485:	add    BYTE PTR [rax],al
   140052487:	add    BYTE PTR [rbx-0x4c00ff99],dh
   14005248d:	addr32 add bh,bh
   140052490:	mov    bl,0x67
   140052492:	add    bh,bh
   140052494:	mov    bl,0x67
   140052496:	add    bh,bh
   140052498:	mov    dl,0x67
   14005249a:	add    bh,bh
   14005249c:	mov    dl,0x66
   14005249e:	add    bh,bh
   1400524a0:	mov    cl,0x66
   1400524a2:	add    bh,bh
   1400524a4:	push   rdi
   1400524a5:	jge    0x140052521
   1400524a7:	jmp    FWORD PTR [rax+rsi*4]
   1400524aa:	repz jmp FWORD PTR [rax+rsi*4]
   1400524ae:	repz jmp FWORD PTR [rax+rsi*4]
   1400524b2:	repz jmp FWORD PTR [rax+rsi*4]
   1400524b6:	repz jmp FWORD PTR [rax+rsi*4]
   1400524ba:	repz inc DWORD PTR [rsi+rcx*4-0x59]
   1400524bf:	(bad)  
   1400524c0:	jle    0x140052513
   1400524c2:	adc    bh,bh
   1400524c4:	test   eax,0xacff0161
   1400524c9:	movsxd eax,DWORD PTR [rcx]
   1400524cb:	jmp    FWORD PTR [rbx-0x5400fe9e]
   1400524d1:	(bad)  {k3}{z}
   1400524d6:	add    edi,edi
   1400524d8:	stos   BYTE PTR es:[rdi],al
   1400524d9:	(bad)  {k1}{z}
   1400524de:	add    edi,edi
   1400524e0:	test   eax,0xa8ff0161
   1400524e5:	(bad)  
   1400524e6:	add    edi,edi
   1400524e8:	test   al,0x60
   1400524ea:	add    edi,edi
   1400524ec:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400524ed:	(bad)  
   1400524ee:	add    edi,edi
   1400524f0:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400524f1:	(bad)  
   1400524f2:	add    edi,edi
   1400524f4:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400524f5:	pop    rdi
   1400524f6:	add    edi,edi
   1400524f8:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400524f9:	pop    rdi
   1400524fa:	add    bh,bh
   1400524fc:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400524fd:	pop    rdi
   1400524fe:	add    bh,bh
   140052500:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140052501:	pop    rsi
   140052502:	add    bh,bh
   140052504:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140052505:	pop    rsi
   140052506:	add    bh,bh
   140052508:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140052509:	pop    rsi
   14005250a:	add    bh,bh
   14005250c:	movabs ds:0xa2ff025da2ff025d,eax
   140052515:	pop    rbp
   140052516:	add    bh,bh
   140052518:	movabs eax,ds:0xa0ff025ca1ff025d
   140052521:	pop    rsp
   140052522:	add    bh,bh
   140052524:	movabs al,ds:0x9fff025b9fff025c
   14005252d:	pop    rbx
   14005252e:	add    bh,bh
   140052530:	addr32 and rax,0xffffffffb9d8ebff
   140052537:	(bad)  
   140052538:	jmp    0x140052512
   14005253a:	mov    ecx,0xb9d8ebff
   14005253f:	(bad)  
   140052540:	jmp    0x14005251a
   140052542:	mov    ecx,0xb9d8ebff
   140052547:	(bad)  
   140052548:	jmp    0x140052522
   14005254a:	mov    ecx,0xb9d8ebff
   14005254f:	(bad)  
   140052550:	jmp    0x14005252a
   140052552:	mov    ecx,0xb9d8ebff
   140052557:	(bad)  
   140052558:	jmp    0x140052532
   14005255a:	mov    ecx,0xb9d8ebff
   14005255f:	(bad)  
   140052560:	jmp    0x14005253a
   140052562:	mov    ecx,0xb9d8ebff
   140052567:	(bad)  
   140052568:	jmp    0x140052542
   14005256a:	mov    ecx,0xb9d8ebff
   14005256f:	(bad)  
   140052570:	jmp    0x14005254a
   140052572:	mov    ecx,0xb9d8ebff
   140052577:	(bad)  
   140052578:	jmp    0x140052552
   14005257a:	mov    ecx,0xb9d8ebff
   14005257f:	(bad)  
   140052580:	jmp    0x14005255a
   140052582:	mov    ecx,0xb9d8ebff
   140052587:	(bad)  
   140052588:	jmp    0x140052562
   14005258a:	mov    ecx,0xb9d8ebff
   14005258f:	(bad)  
   140052590:	jmp    0x14005256a
   140052592:	mov    ecx,0xb9d8ebff
   140052597:	jmp    QWORD PTR [rdi+0x48]
   14005259a:	and    eax,0x45290ff
   14005259f:	call   QWORD PTR [rax-0x7000fbae]
   1400525a5:	push   rdx
   1400525a6:	add    al,0xff
   1400525a8:	mov    ss,WORD PTR [rcx+0x4]
   1400525ab:	dec    DWORD PTR [rsi-0x7100fbaf]
   1400525b1:	push   rcx
   1400525b2:	add    al,0xff
   1400525b4:	lea    edx,[rax+0x4]
   1400525b7:	dec    DWORD PTR [rax+rdx*2+0x508cff05]
   1400525be:	add    eax,0x54f8bff
   1400525c3:	dec    DWORD PTR [rbx-0x7500fab1]
   1400525c9:	rex.WRXB add rax,0x54e8aff
   1400525cf:	dec    DWORD PTR [rcx-0x7600fab2]
   1400525d5:	rex.WRX add rax,0x54d88ff
   1400525db:	dec    DWORD PTR [rax-0x7800fab3]
   1400525e1:	rex.WRB add rax,0x54c87ff
   1400525e7:	inc    DWORD PTR [rsi-0x7a00fab4]
   1400525ed:	rex.WR add rax,0x54c85ff
   1400525f3:	inc    DWORD PTR [rbx+rcx*2+0x4b84ff05]
   1400525fa:	(bad)  
   1400525fb:	inc    DWORD PTR [rbx-0x7c00f9b6]
   140052601:	rex.WX (bad) 
   140052603:	inc    DWORD PTR [rdx-0x7d00f9b6]
   140052609:	rex.WX (bad) 
   14005260b:	inc    DWORD PTR [rcx-0x7e00f9b7]
   140052611:	rex.WB (bad) 
   140052613:	inc    DWORD PTR [rax-0x7f00f9b7]
   140052619:	rex.W (bad) 
   14005261b:	(bad)  
   14005261c:	jg     0x140052666
   14005261e:	(bad)  
   14005261f:	(bad)  
   140052620:	jg     0x14005266a
   140052622:	(bad)  
   140052623:	(bad)  
   140052624:	jle    0x14005266d
   140052626:	(bad)  
   140052627:	(bad)  
   140052628:	jle    0x140052671
   14005262a:	(bad)  
   14005262b:	(bad)  
   14005262c:	jge    0x140052675
   14005262e:	(bad)  
   14005262f:	(bad)  
   140052630:	jge    0x140052679
   140052632:	(bad)  
   140052633:	(bad)  
   140052634:	jl     0x14005267c
   140052636:	(bad)  
   140052637:	(bad)  
   140052638:	jnp    0x140052680
   14005263a:	(bad)  
   14005263b:	(bad)  
   14005263c:	jnp    0x140052684
   14005263e:	(bad)  
   14005263f:	(bad)  
   140052640:	jnp    0x140052687
   140052642:	(bad)  
   140052643:	(bad)  
   140052644:	jp     0x14005268b
   140052646:	(bad)  
   140052647:	inc    DWORD PTR [rax]
	...
   140052685:	add    BYTE PTR [rax],al
   140052687:	add    BYTE PTR [rbx-0x4c00ff99],dh
   14005268d:	addr32 add bh,bh
   140052690:	mov    bl,0x67
   140052692:	add    bh,bh
   140052694:	mov    bl,0x67
   140052696:	add    bh,bh
   140052698:	mov    bl,0x67
   14005269a:	add    bh,bh
   14005269c:	mov    dl,0x67
   14005269e:	add    bh,bh
   1400526a0:	sahf   
   1400526a1:	pop    rdx
   1400526a2:	add    bh,bh
   1400526a4:	xor    DWORD PTR [rcx-0x4fd3001c],ebp
   1400526aa:	repz jmp FWORD PTR [rax+rsi*4]
   1400526ae:	repz jmp FWORD PTR [rax+rsi*4]
   1400526b2:	repz jmp FWORD PTR [rax+rsi*4]
   1400526b6:	repz jmp FWORD PTR [rax+rsi*4]
   1400526ba:	repz jmp FWORD PTR [rip+0x3dfff2ad]        # 0x17e05196e
   1400526c1:	xchg   ebp,eax
   1400526c2:	(bad)  
   1400526c3:	(bad)  
   1400526c4:	jnp    0x140052715
   1400526c6:	adc    bh,bh
   1400526c8:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400526c9:	pop    rdi
   1400526ca:	add    edi,edi
   1400526cc:	lods   al,BYTE PTR ds:[rsi]
   1400526cd:	movsxd eax,DWORD PTR [rcx]
   1400526cf:	jmp    FWORD PTR [rbx-0x5400fe9e]
   1400526d5:	(bad)  {k3}{z}
   1400526da:	add    edi,edi
   1400526dc:	stos   BYTE PTR es:[rdi],al
   1400526dd:	(bad)  {k1}{z}
   1400526e2:	add    edi,edi
   1400526e4:	test   eax,0xa8ff0161
   1400526e9:	(bad)  
   1400526ea:	add    edi,edi
   1400526ec:	test   al,0x60
   1400526ee:	add    edi,edi
   1400526f0:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400526f1:	(bad)  
   1400526f2:	add    edi,edi
   1400526f4:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400526f5:	(bad)  
   1400526f6:	add    edi,edi
   1400526f8:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400526f9:	pop    rdi
   1400526fa:	add    edi,edi
   1400526fc:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400526fd:	pop    rdi
   1400526fe:	add    bh,bh
   140052700:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140052701:	pop    rdi
   140052702:	add    bh,bh
   140052704:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140052705:	pop    rsi
   140052706:	add    bh,bh
   140052708:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140052709:	pop    rsi
   14005270a:	add    bh,bh
   14005270c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14005270d:	pop    rsi
   14005270e:	add    bh,bh
   140052710:	movabs ds:0xa2ff025da2ff025d,eax
   140052719:	pop    rbp
   14005271a:	add    bh,bh
   14005271c:	movabs eax,ds:0xa0ff025ca1ff025d
   140052725:	pop    rsp
   140052726:	add    bh,bh
   140052728:	movabs al,ds:0x67ff025b9fff025c
   140052731:	and    rax,0xffffffffbad9ecff
   140052737:	(bad)  
   140052738:	in     al,dx
   140052739:	fnstcw WORD PTR [rdx-0x45261301]
   14005273f:	(bad)  
   140052740:	in     al,dx
   140052741:	fnstcw WORD PTR [rdx-0x45261301]
   140052747:	(bad)  
   140052748:	in     al,dx
   140052749:	fnstcw WORD PTR [rdx-0x45261301]
   14005274f:	(bad)  
   140052750:	in     al,dx
   140052751:	fnstcw WORD PTR [rdx-0x45261301]
   140052757:	(bad)  
   140052758:	in     al,dx
   140052759:	fnstcw WORD PTR [rdx-0x45261301]
   14005275f:	(bad)  
   140052760:	in     al,dx
   140052761:	fnstcw WORD PTR [rdx-0x45261301]
   140052767:	(bad)  
   140052768:	in     al,dx
   140052769:	fnstcw WORD PTR [rdx-0x45261301]
   14005276f:	(bad)  
   140052770:	in     al,dx
   140052771:	fnstcw WORD PTR [rdx-0x45261301]
   140052777:	(bad)  
   140052778:	in     al,dx
   140052779:	fnstcw WORD PTR [rdx-0x45261301]
   14005277f:	(bad)  
   140052780:	in     al,dx
   140052781:	fnstcw WORD PTR [rdx-0x45261301]
   140052787:	(bad)  
   140052788:	in     al,dx
   140052789:	fnstcw WORD PTR [rdx-0x45261301]
   14005278f:	(bad)  
   140052790:	in     al,dx
   140052791:	fnstcw WORD PTR [rdx-0x45261301]
   140052797:	jmp    QWORD PTR [rdi+0x48]
   14005279a:	and    eax,0x45291ff
   14005279f:	call   QWORD PTR [rax-0x6f00fbae]
   1400527a5:	push   rdx
   1400527a6:	add    al,0xff
   1400527a8:	(bad)  
   1400527a9:	push   rdx
   1400527aa:	add    al,0xff
   1400527ac:	mov    ss,WORD PTR [rcx+0x4]
   1400527af:	dec    DWORD PTR [rsi-0x7100fbaf]
   1400527b5:	push   rcx
   1400527b6:	add    al,0xff
   1400527b8:	lea    edx,[rax+0x4]
   1400527bb:	dec    DWORD PTR [rax+rdx*2+0x508cff05]
   1400527c2:	add    eax,0x54f8bff
   1400527c7:	dec    DWORD PTR [rbx-0x7500fab1]
   1400527cd:	rex.WRXB add rax,0x54e8aff
   1400527d3:	dec    DWORD PTR [rcx-0x7600fab2]
   1400527d9:	rex.WRX add rax,0x54d88ff
   1400527df:	dec    DWORD PTR [rax-0x7800fab3]
   1400527e5:	rex.WRB add rax,0x54c87ff
   1400527eb:	inc    DWORD PTR [rsi-0x7a00fab4]
   1400527f1:	rex.WR add rax,0x54c85ff
   1400527f7:	inc    DWORD PTR [rbx+rcx*2+0x4b84ff05]
   1400527fe:	(bad)  
   1400527ff:	inc    DWORD PTR [rbx-0x7c00f9b6]
   140052805:	rex.WX (bad) 
   140052807:	inc    DWORD PTR [rdx-0x7d00f9b6]
   14005280d:	rex.WX (bad) 
   14005280f:	inc    DWORD PTR [rcx-0x7e00f9b7]
   140052815:	rex.WB (bad) 
   140052817:	inc    DWORD PTR [rax-0x7f00f9b7]
   14005281d:	rex.W (bad) 
   14005281f:	(bad)  
   140052820:	jg     0x14005286a
   140052822:	(bad)  
   140052823:	(bad)  
   140052824:	jg     0x14005286e
   140052826:	(bad)  
   140052827:	(bad)  
   140052828:	jle    0x140052871
   14005282a:	(bad)  
   14005282b:	(bad)  
   14005282c:	jle    0x140052875
   14005282e:	(bad)  
   14005282f:	(bad)  
   140052830:	jge    0x140052879
   140052832:	(bad)  
   140052833:	(bad)  
   140052834:	jge    0x14005287d
   140052836:	(bad)  
   140052837:	(bad)  
   140052838:	jl     0x140052880
   14005283a:	(bad)  
   14005283b:	(bad)  
   14005283c:	jnp    0x140052884
   14005283e:	(bad)  
   14005283f:	(bad)  
   140052840:	jnp    0x140052888
   140052842:	(bad)  
   140052843:	(bad)  
   140052844:	jnp    0x14005288b
   140052846:	(bad)  
   140052847:	inc    DWORD PTR [rax]
	...
   140052885:	add    BYTE PTR [rax],al
   140052887:	add    BYTE PTR [rbx-0x4c00ff99],dh
   14005288d:	addr32 add bh,bh
   140052890:	mov    bl,0x67
   140052892:	add    bh,bh
   140052894:	mov    bl,0x67
   140052896:	add    bh,bh
   140052898:	mov    bl,0x67
   14005289a:	add    bh,bh
   14005289c:	mov    bl,0x67
   14005289e:	add    bh,bh
   1400528a0:	imul   esi,DWORD PTR [rbx+0x5b],0xf2ae2cff
   1400528a7:	jmp    FWORD PTR [rax+rsi*4]
   1400528aa:	repz jmp FWORD PTR [rax+rsi*4]
   1400528ae:	repz jmp FWORD PTR [rax+rsi*4]
   1400528b2:	repz jmp FWORD PTR [rax+rsi*4]
   1400528b6:	repz jmp FWORD PTR [rsi+rbp*4]
   1400528ba:	repnz jmp FWORD PTR [rsi]
   1400528bd:	test   eax,0xa42ffff2
   1400528c2:	icebp  
   1400528c3:	(bad)  
   1400528c4:	cmp    edx,DWORD PTR [rdx+0x557affd1]
   1400528ca:	(bad)  
   1400528cb:	jmp    FWORD PTR [rcx-0x5300fe9f]
   1400528d1:	movsxd eax,DWORD PTR [rcx]
   1400528d3:	jmp    FWORD PTR [rbx-0x5400fe9e]
   1400528d9:	(bad)  {k3}{z}
   1400528de:	add    edi,edi
   1400528e0:	stos   BYTE PTR es:[rdi],al
   1400528e1:	(bad)  {k1}{z}
   1400528e6:	add    edi,edi
   1400528e8:	test   eax,0xa8ff0161
   1400528ed:	(bad)  
   1400528ee:	add    edi,edi
   1400528f0:	test   al,0x60
   1400528f2:	add    edi,edi
   1400528f4:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400528f5:	(bad)  
   1400528f6:	add    edi,edi
   1400528f8:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400528f9:	(bad)  
   1400528fa:	add    edi,edi
   1400528fc:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400528fd:	pop    rdi
   1400528fe:	add    edi,edi
   140052900:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140052901:	pop    rdi
   140052902:	add    bh,bh
   140052904:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140052905:	pop    rdi
   140052906:	add    bh,bh
   140052908:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140052909:	pop    rsi
   14005290a:	add    bh,bh
   14005290c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14005290d:	pop    rsi
   14005290e:	add    bh,bh
   140052910:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140052911:	pop    rsi
   140052912:	add    bh,bh
   140052914:	movabs ds:0xa2ff025da2ff025d,eax
   14005291d:	pop    rbp
   14005291e:	add    bh,bh
   140052920:	movabs eax,ds:0xa0ff025ca1ff025d
   140052929:	pop    rsp
   14005292a:	add    bh,bh
   14005292c:	movabs al,ds:0xecff264968ff025c
   140052935:	fidivr DWORD PTR [rbx-0x44251301]
   14005293b:	(bad)  
   14005293c:	in     al,dx
   14005293d:	fidivr DWORD PTR [rbx-0x44251301]
   140052943:	(bad)  
   140052944:	in     al,dx
   140052945:	fidivr DWORD PTR [rbx-0x44251301]
   14005294b:	(bad)  
   14005294c:	in     al,dx
   14005294d:	fidivr DWORD PTR [rbx-0x44251301]
   140052953:	(bad)  
   140052954:	in     al,dx
   140052955:	fidivr DWORD PTR [rbx-0x44251301]
   14005295b:	(bad)  
   14005295c:	in     al,dx
   14005295d:	fidivr DWORD PTR [rbx-0x44251301]
   140052963:	(bad)  
   140052964:	in     al,dx
   140052965:	fidivr DWORD PTR [rbx-0x44251301]
   14005296b:	(bad)  
   14005296c:	in     al,dx
   14005296d:	fidivr DWORD PTR [rbx-0x44251301]
   140052973:	(bad)  
   140052974:	in     al,dx
   140052975:	fidivr DWORD PTR [rbx-0x44251301]
   14005297b:	(bad)  
   14005297c:	in     al,dx
   14005297d:	fidivr DWORD PTR [rbx-0x44251301]
   140052983:	(bad)  
   140052984:	in     al,dx
   140052985:	fidivr DWORD PTR [rbx-0x44251301]
   14005298b:	(bad)  
   14005298c:	in     al,dx
   14005298d:	fidivr DWORD PTR [rbx-0x44251301]
   140052993:	(bad)  
   140052994:	in     al,dx
   140052995:	fidivr DWORD PTR [rbx+0x264968ff]
   14005299b:	call   QWORD PTR [rcx-0x6e00fbad]
   1400529a1:	push   rdx
   1400529a2:	add    al,0xff
   1400529a4:	nop
   1400529a5:	push   rdx
   1400529a6:	add    al,0xff
   1400529a8:	nop
   1400529a9:	push   rdx
   1400529aa:	add    al,0xff
   1400529ac:	(bad)  
   1400529ad:	push   rdx
   1400529ae:	add    al,0xff
   1400529b0:	mov    ss,WORD PTR [rcx+0x4]
   1400529b3:	dec    DWORD PTR [rsi-0x7100fbaf]
   1400529b9:	push   rcx
   1400529ba:	add    al,0xff
   1400529bc:	lea    edx,[rax+0x4]
   1400529bf:	dec    DWORD PTR [rax+rdx*2+0x508cff05]
   1400529c6:	add    eax,0x54f8bff
   1400529cb:	dec    DWORD PTR [rbx-0x7500fab1]
   1400529d1:	rex.WRXB add rax,0x54e8aff
   1400529d7:	dec    DWORD PTR [rcx-0x7600fab2]
   1400529dd:	rex.WRX add rax,0x54d88ff
   1400529e3:	dec    DWORD PTR [rax-0x7800fab3]
   1400529e9:	rex.WRB add rax,0x54c87ff
   1400529ef:	inc    DWORD PTR [rsi-0x7a00fab4]
   1400529f5:	rex.WR add rax,0x54c85ff
   1400529fb:	inc    DWORD PTR [rbx+rcx*2+0x4b84ff05]
   140052a02:	(bad)  
   140052a03:	inc    DWORD PTR [rbx-0x7c00f9b6]
   140052a09:	rex.WX (bad) 
   140052a0b:	inc    DWORD PTR [rdx-0x7d00f9b6]
   140052a11:	rex.WX (bad) 
   140052a13:	inc    DWORD PTR [rcx-0x7e00f9b7]
   140052a19:	rex.WB (bad) 
   140052a1b:	inc    DWORD PTR [rax-0x7f00f9b7]
   140052a21:	rex.W (bad) 
   140052a23:	(bad)  
   140052a24:	jg     0x140052a6e
   140052a26:	(bad)  
   140052a27:	(bad)  
   140052a28:	jg     0x140052a72
   140052a2a:	(bad)  
   140052a2b:	(bad)  
   140052a2c:	jle    0x140052a75
   140052a2e:	(bad)  
   140052a2f:	(bad)  
   140052a30:	jle    0x140052a79
   140052a32:	(bad)  
   140052a33:	(bad)  
   140052a34:	jge    0x140052a7d
   140052a36:	(bad)  
   140052a37:	(bad)  
   140052a38:	jge    0x140052a81
   140052a3a:	(bad)  
   140052a3b:	(bad)  
   140052a3c:	jl     0x140052a84
   140052a3e:	(bad)  
   140052a3f:	(bad)  
   140052a40:	jnp    0x140052a88
   140052a42:	(bad)  
   140052a43:	(bad)  
   140052a44:	jnp    0x140052a8c
   140052a46:	(bad)  
   140052a47:	inc    DWORD PTR [rax]
	...
   140052a85:	add    BYTE PTR [rax],al
   140052a87:	add    BYTE PTR [rbx-0x4c00ff99],dh
   140052a8d:	addr32 add bh,bh
   140052a90:	mov    bl,0x67
   140052a92:	add    bh,bh
   140052a94:	mov    bl,0x67
   140052a96:	add    bh,bh
   140052a98:	mov    bl,0x67
   140052a9a:	add    bh,bh
   140052a9c:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140052a9d:	pop    rdi
   140052a9e:	add    bh,bh
   140052aa0:	(bad)  
   140052aa1:	nop
   140052aa2:	ret    
   140052aa3:	jmp    FWORD PTR [rdi]
   140052aa5:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140052aa6:	icebp  
   140052aa7:	jmp    FWORD PTR [rsi]
   140052aa9:	test   eax,0xab2dfff2
   140052aae:	repnz jmp FWORD PTR [rip+0x2dfff2ac]        # 0x16e051d61
   140052ab5:	stos   DWORD PTR es:[rdi],eax
   140052ab6:	repnz jmp FWORD PTR [rsi]
   140052ab9:	test   al,0xf1
   140052abb:	jmp    FWORD PTR [rdi]
   140052abd:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140052abe:	icebp  
   140052abf:	push   QWORD PTR [rax]
   140052ac1:	movabs al,ds:0x8540ffee9a33fff0
   140052aca:	sar    edi,0x7e
   140052acd:	rex.WRXB adc r15b,r15b
   140052ad0:	test   eax,0xacff0161
   140052ad5:	movsxd eax,DWORD PTR [rcx]
   140052ad7:	jmp    FWORD PTR [rbx-0x5400fe9e]
   140052add:	(bad)  {k3}{z}
   140052ae2:	add    edi,edi
   140052ae4:	stos   BYTE PTR es:[rdi],al
   140052ae5:	(bad)  {k1}{z}
   140052aea:	add    edi,edi
   140052aec:	test   eax,0xa8ff0161
   140052af1:	(bad)  
   140052af2:	add    edi,edi
   140052af4:	test   al,0x60
   140052af6:	add    edi,edi
   140052af8:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140052af9:	(bad)  
   140052afa:	add    edi,edi
   140052afc:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140052afd:	(bad)  
   140052afe:	add    edi,edi
   140052b00:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140052b01:	pop    rdi
   140052b02:	add    edi,edi
   140052b04:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140052b05:	pop    rdi
   140052b06:	add    bh,bh
   140052b08:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140052b09:	pop    rdi
   140052b0a:	add    bh,bh
   140052b0c:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140052b0d:	pop    rsi
   140052b0e:	add    bh,bh
   140052b10:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140052b11:	pop    rsi
   140052b12:	add    bh,bh
   140052b14:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140052b15:	pop    rsi
   140052b16:	add    bh,bh
   140052b18:	movabs ds:0xa2ff025da2ff025d,eax
   140052b21:	pop    rbp
   140052b22:	add    bh,bh
   140052b24:	movabs eax,ds:0xa0ff025ca1ff025d
   140052b2d:	pop    rsp
   140052b2e:	add    bh,bh
   140052b30:	imul   ecx,DWORD PTR [rcx+0x26],0xbcdaedff
   140052b37:	(bad)  
   140052b38:	in     eax,dx
   140052b39:	fidivr DWORD PTR [rdi+rdi*8-0x432513]
   140052b40:	in     eax,dx
   140052b41:	fidivr DWORD PTR [rdi+rdi*8-0x432513]
   140052b48:	in     eax,dx
   140052b49:	fidivr DWORD PTR [rdi+rdi*8-0x432513]
   140052b50:	in     eax,dx
   140052b51:	fidivr DWORD PTR [rdi+rdi*8-0x432513]
   140052b58:	in     eax,dx
   140052b59:	fidivr DWORD PTR [rdi+rdi*8-0x432513]
   140052b60:	in     eax,dx
   140052b61:	fidivr DWORD PTR [rdi+rdi*8-0x432513]
   140052b68:	in     eax,dx
   140052b69:	fidivr DWORD PTR [rdi+rdi*8-0x432513]
   140052b70:	in     eax,dx
   140052b71:	fidivr DWORD PTR [rdi+rdi*8-0x432513]
   140052b78:	in     eax,dx
   140052b79:	fidivr DWORD PTR [rdi+rdi*8-0x432513]
   140052b80:	in     eax,dx
   140052b81:	fidivr DWORD PTR [rdi+rdi*8-0x432513]
   140052b88:	in     eax,dx
   140052b89:	fidivr DWORD PTR [rdi+rdi*8-0x432513]
   140052b90:	in     eax,dx
   140052b91:	fidivr DWORD PTR [rdi+rdi*8-0x432513]
   140052b98:	imul   ecx,DWORD PTR [rcx+0x26],0x45392ff
   140052b9f:	call   QWORD PTR [rcx-0x6e00fbad]
   140052ba5:	push   rdx
   140052ba6:	add    al,0xff
   140052ba8:	nop
   140052ba9:	push   rdx
   140052baa:	add    al,0xff
   140052bac:	nop
   140052bad:	push   rdx
   140052bae:	add    al,0xff
   140052bb0:	(bad)  
   140052bb1:	push   rdx
   140052bb2:	add    al,0xff
   140052bb4:	mov    ss,WORD PTR [rcx+0x4]
   140052bb7:	dec    DWORD PTR [rsi-0x7100fbaf]
   140052bbd:	push   rcx
   140052bbe:	add    al,0xff
   140052bc0:	lea    edx,[rax+0x4]
   140052bc3:	dec    DWORD PTR [rax+rdx*2+0x508cff05]
   140052bca:	add    eax,0x54f8bff
   140052bcf:	dec    DWORD PTR [rbx-0x7500fab1]
   140052bd5:	rex.WRXB add rax,0x54e8aff
   140052bdb:	dec    DWORD PTR [rcx-0x7600fab2]
   140052be1:	rex.WRX add rax,0x54d88ff
   140052be7:	dec    DWORD PTR [rax-0x7800fab3]
   140052bed:	rex.WRB add rax,0x54c87ff
   140052bf3:	inc    DWORD PTR [rsi-0x7a00fab4]
   140052bf9:	rex.WR add rax,0x54c85ff
   140052bff:	inc    DWORD PTR [rbx+rcx*2+0x4b84ff05]
   140052c06:	(bad)  
   140052c07:	inc    DWORD PTR [rbx-0x7c00f9b6]
   140052c0d:	rex.WX (bad) 
   140052c0f:	inc    DWORD PTR [rdx-0x7d00f9b6]
   140052c15:	rex.WX (bad) 
   140052c17:	inc    DWORD PTR [rcx-0x7e00f9b7]
   140052c1d:	rex.WB (bad) 
   140052c1f:	inc    DWORD PTR [rax-0x7f00f9b7]
   140052c25:	rex.W (bad) 
   140052c27:	(bad)  
   140052c28:	jg     0x140052c72
   140052c2a:	(bad)  
   140052c2b:	(bad)  
   140052c2c:	jg     0x140052c76
   140052c2e:	(bad)  
   140052c2f:	(bad)  
   140052c30:	jle    0x140052c79
   140052c32:	(bad)  
   140052c33:	(bad)  
   140052c34:	jle    0x140052c7d
   140052c36:	(bad)  
   140052c37:	(bad)  
   140052c38:	jge    0x140052c81
   140052c3a:	(bad)  
   140052c3b:	(bad)  
   140052c3c:	jge    0x140052c85
   140052c3e:	(bad)  
   140052c3f:	(bad)  
   140052c40:	jl     0x140052c88
   140052c42:	(bad)  
   140052c43:	(bad)  
   140052c44:	jnp    0x140052c8c
   140052c46:	(bad)  
   140052c47:	inc    DWORD PTR [rax]
	...
   140052c85:	add    BYTE PTR [rax],al
   140052c87:	add    BYTE PTR [rbx-0x4c00ff99],dh
   140052c8d:	addr32 add bh,bh
   140052c90:	mov    bl,0x67
   140052c92:	add    bh,bh
   140052c94:	mov    bl,0x67
   140052c96:	add    bh,bh
   140052c98:	mov    bl,0x67
   140052c9a:	add    bh,bh
   140052c9c:	jnp    0x140052d02
   140052c9e:	cmp    edi,edi
   140052ca0:	xor    edx,DWORD PTR [rdi-0x63cd0012]
   140052ca6:	out    dx,eax
   140052ca7:	push   QWORD PTR [rax]
   140052ca9:	movabs al,ds:0xa42ffff1a330fff0
   140052cb2:	icebp  
   140052cb3:	jmp    FWORD PTR [rdi]
   140052cb5:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140052cb6:	icebp  
   140052cb7:	push   QWORD PTR [rax]
   140052cb9:	movabs ds:0x9b32fff0a031fff0,eax
   140052cc2:	out    dx,eax
   140052cc3:	push   QWORD PTR [rbx]
   140052cc5:	xchg   esi,eax
   140052cc6:	out    dx,al
   140052cc7:	push   QWORD PTR [rbx]
   140052cc9:	(bad)  
   140052cca:	in     al,dx
   140052ccb:	(bad)  
   140052ccc:	cmp    al,0x78
   140052cce:	mov    edi,0x105284ff
   140052cd3:	jmp    FWORD PTR [rbp-0x5300fe9d]
   140052cd9:	movsxd eax,DWORD PTR [rcx]
   140052cdb:	jmp    FWORD PTR [rbx-0x5400fe9e]
   140052ce1:	(bad)  {k3}{z}
   140052ce6:	add    edi,edi
   140052ce8:	stos   BYTE PTR es:[rdi],al
   140052ce9:	(bad)  {k1}{z}
   140052cee:	add    edi,edi
   140052cf0:	test   eax,0xa8ff0161
   140052cf5:	(bad)  
   140052cf6:	add    edi,edi
   140052cf8:	test   al,0x60
   140052cfa:	add    edi,edi
   140052cfc:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140052cfd:	(bad)  
   140052cfe:	add    edi,edi
   140052d00:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140052d01:	(bad)  
   140052d02:	add    edi,edi
   140052d04:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140052d05:	pop    rdi
   140052d06:	add    edi,edi
   140052d08:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140052d09:	pop    rdi
   140052d0a:	add    bh,bh
   140052d0c:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140052d0d:	pop    rdi
   140052d0e:	add    bh,bh
   140052d10:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140052d11:	pop    rsi
   140052d12:	add    bh,bh
   140052d14:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140052d15:	pop    rsi
   140052d16:	add    bh,bh
   140052d18:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140052d19:	pop    rsi
   140052d1a:	add    bh,bh
   140052d1c:	movabs ds:0xa2ff025da2ff025d,eax
   140052d25:	pop    rbp
   140052d26:	add    bh,bh
   140052d28:	movabs eax,ds:0x69ff025ca1ff025d
   140052d31:	rex.WX
   140052d32:	es (bad) 
   140052d34:	in     eax,dx
   140052d35:	fstp   TBYTE PTR [rbp-0x42241201]
   140052d3b:	(bad)  
   140052d3c:	in     eax,dx
   140052d3d:	fstp   TBYTE PTR [rbp-0x42241201]
   140052d43:	(bad)  
   140052d44:	in     eax,dx
   140052d45:	fstp   TBYTE PTR [rbp-0x42241201]
   140052d4b:	(bad)  
   140052d4c:	in     eax,dx
   140052d4d:	fstp   TBYTE PTR [rbp-0x42241201]
   140052d53:	(bad)  
   140052d54:	in     eax,dx
   140052d55:	fstp   TBYTE PTR [rbp-0x42241201]
   140052d5b:	(bad)  
   140052d5c:	in     eax,dx
   140052d5d:	fstp   TBYTE PTR [rbp-0x42241201]
   140052d63:	(bad)  
   140052d64:	in     eax,dx
   140052d65:	fstp   TBYTE PTR [rbp-0x42241201]
   140052d6b:	(bad)  
   140052d6c:	in     eax,dx
   140052d6d:	fstp   TBYTE PTR [rbp-0x42241201]
   140052d73:	(bad)  
   140052d74:	in     eax,dx
   140052d75:	fstp   TBYTE PTR [rbp-0x42241201]
   140052d7b:	(bad)  
   140052d7c:	in     eax,dx
   140052d7d:	fstp   TBYTE PTR [rbp-0x42241201]
   140052d83:	(bad)  
   140052d84:	in     eax,dx
   140052d85:	fstp   TBYTE PTR [rbp-0x42241201]
   140052d8b:	(bad)  
   140052d8c:	in     eax,dx
   140052d8d:	fstp   TBYTE PTR [rbp-0x42241201]
   140052d93:	(bad)  
   140052d94:	in     eax,dx
   140052d95:	fstp   TBYTE PTR [rbp+0x264a69ff]
   140052d9b:	call   QWORD PTR [rdx-0x6d00fbad]
   140052da1:	push   rbx
   140052da2:	add    al,0xff
   140052da4:	xchg   ecx,eax
   140052da5:	push   rbx
   140052da6:	add    al,0xff
   140052da8:	xchg   ecx,eax
   140052da9:	push   rdx
   140052daa:	add    al,0xff
   140052dac:	nop
   140052dad:	push   rdx
   140052dae:	add    al,0xff
   140052db0:	nop
   140052db1:	push   rdx
   140052db2:	add    al,0xff
   140052db4:	(bad)  
   140052db5:	push   rdx
   140052db6:	add    al,0xff
   140052db8:	mov    ss,WORD PTR [rcx+0x4]
   140052dbb:	dec    DWORD PTR [rsi-0x7100fbaf]
   140052dc1:	push   rcx
   140052dc2:	add    al,0xff
   140052dc4:	lea    edx,[rax+0x4]
   140052dc7:	dec    DWORD PTR [rax+rdx*2+0x508cff05]
   140052dce:	add    eax,0x54f8bff
   140052dd3:	dec    DWORD PTR [rbx-0x7500fab1]
   140052dd9:	rex.WRXB add rax,0x54e8aff
   140052ddf:	dec    DWORD PTR [rcx-0x7600fab2]
   140052de5:	rex.WRX add rax,0x54d88ff
   140052deb:	dec    DWORD PTR [rax-0x7800fab3]
   140052df1:	rex.WRB add rax,0x54c87ff
   140052df7:	inc    DWORD PTR [rsi-0x7a00fab4]
   140052dfd:	rex.WR add rax,0x54c85ff
   140052e03:	inc    DWORD PTR [rbx+rcx*2+0x4b84ff05]
   140052e0a:	(bad)  
   140052e0b:	inc    DWORD PTR [rbx-0x7c00f9b6]
   140052e11:	rex.WX (bad) 
   140052e13:	inc    DWORD PTR [rdx-0x7d00f9b6]
   140052e19:	rex.WX (bad) 
   140052e1b:	inc    DWORD PTR [rcx-0x7e00f9b7]
   140052e21:	rex.WB (bad) 
   140052e23:	inc    DWORD PTR [rax-0x7f00f9b7]
   140052e29:	rex.W (bad) 
   140052e2b:	(bad)  
   140052e2c:	jg     0x140052e76
   140052e2e:	(bad)  
   140052e2f:	(bad)  
   140052e30:	jg     0x140052e7a
   140052e32:	(bad)  
   140052e33:	(bad)  
   140052e34:	jle    0x140052e7d
   140052e36:	(bad)  
   140052e37:	(bad)  
   140052e38:	jle    0x140052e81
   140052e3a:	(bad)  
   140052e3b:	(bad)  
   140052e3c:	jge    0x140052e85
   140052e3e:	(bad)  
   140052e3f:	(bad)  
   140052e40:	jge    0x140052e89
   140052e42:	(bad)  
   140052e43:	(bad)  
   140052e44:	jl     0x140052e8c
   140052e46:	(bad)  
   140052e47:	inc    DWORD PTR [rax]
	...
   140052e85:	add    BYTE PTR [rax],al
   140052e87:	add    BYTE PTR [rbx-0x4c00ff99],dh
   140052e8d:	addr32 add bh,bh
   140052e90:	mov    bl,0x67
   140052e92:	add    bh,bh
   140052e94:	mov    bl,0x67
   140052e96:	add    bh,bh
   140052e98:	lods   al,BYTE PTR ds:[rsi]
   140052e99:	movsxd eax,DWORD PTR [rax]
   140052e9b:	inc    DWORD PTR [rbp+0x65]
   140052e9e:	movabs al,ds:0xec9233ffea8531ff
   140052ea7:	push   QWORD PTR [rbx]
   140052ea9:	xchg   edi,eax
   140052eaa:	out    dx,al
   140052eab:	push   QWORD PTR [rdx]
   140052ead:	(bad)  
   140052eae:	out    dx,al
   140052eaf:	push   QWORD PTR [rdx]
   140052eb1:	pushf  
   140052eb2:	out    dx,eax
   140052eb3:	push   QWORD PTR [rdx]
   140052eb5:	popf   
   140052eb6:	out    dx,eax
   140052eb7:	push   QWORD PTR [rdx]
   140052eb9:	pushf  
   140052eba:	out    dx,eax
   140052ebb:	push   QWORD PTR [rbx]
   140052ebd:	cdq    
   140052ebe:	out    dx,al
   140052ebf:	push   QWORD PTR [rbx]
   140052ec1:	xchg   esi,eax
   140052ec2:	out    dx,al
   140052ec3:	push   QWORD PTR [rbx]
   140052ec5:	xchg   ecx,eax
   140052ec6:	in     al,dx
   140052ec7:	push   QWORD PTR [rcx]
   140052ec9:	mov    ebx,ebp
   140052ecb:	jmp    FWORD PTR [rbx]
   140052ecd:	jge    0x140052eba
   140052ecf:	inc    DWORD PTR [rbx+0x6b]
   140052ed2:	movabs ds:0x163adff01518dff,al
   140052edb:	jmp    FWORD PTR [rbx+riz*2+0x62abff01]
   140052ee2:	add    edi,edi
   140052ee4:	stos   DWORD PTR es:[rdi],eax
   140052ee5:	(bad)  {k3}{z}
   140052eea:	add    edi,edi
   140052eec:	stos   BYTE PTR es:[rdi],al
   140052eed:	(bad)  {k1}{z}
   140052ef2:	add    edi,edi
   140052ef4:	test   eax,0xa8ff0161
   140052ef9:	(bad)  
   140052efa:	add    edi,edi
   140052efc:	test   al,0x60
   140052efe:	add    edi,edi
   140052f00:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140052f01:	(bad)  
   140052f02:	add    edi,edi
   140052f04:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140052f05:	(bad)  
   140052f06:	add    edi,edi
   140052f08:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140052f09:	pop    rdi
   140052f0a:	add    edi,edi
   140052f0c:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140052f0d:	pop    rdi
   140052f0e:	add    bh,bh
   140052f10:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140052f11:	pop    rdi
   140052f12:	add    bh,bh
   140052f14:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140052f15:	pop    rsi
   140052f16:	add    bh,bh
   140052f18:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140052f19:	pop    rsi
   140052f1a:	add    bh,bh
   140052f1c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140052f1d:	pop    rsi
   140052f1e:	add    bh,bh
   140052f20:	movabs ds:0x9fff025da2ff025d,eax
   140052f29:	pop    rbx
   140052f2a:	add    bh,bh
   140052f2c:	movabs eax,ds:0xeeff274a6aff025d
   140052f35:	fdivr  QWORD PTR [rsi-0x41231101]
   140052f3b:	(bad)  
   140052f3c:	out    dx,al
   140052f3d:	fdivr  QWORD PTR [rsi-0x41231101]
   140052f43:	(bad)  
   140052f44:	out    dx,al
   140052f45:	fdivr  QWORD PTR [rsi-0x41231101]
   140052f4b:	(bad)  
   140052f4c:	out    dx,al
   140052f4d:	fdivr  QWORD PTR [rsi-0x41231101]
   140052f53:	(bad)  
   140052f54:	out    dx,al
   140052f55:	fdivr  QWORD PTR [rsi-0x41231101]
   140052f5b:	(bad)  
   140052f5c:	out    dx,al
   140052f5d:	fdivr  QWORD PTR [rsi-0x41231101]
   140052f63:	(bad)  
   140052f64:	out    dx,al
   140052f65:	fdivr  QWORD PTR [rsi-0x41231101]
   140052f6b:	(bad)  
   140052f6c:	out    dx,al
   140052f6d:	fdivr  QWORD PTR [rsi-0x41231101]
   140052f73:	(bad)  
   140052f74:	out    dx,al
   140052f75:	fdivr  QWORD PTR [rsi-0x41231101]
   140052f7b:	(bad)  
   140052f7c:	out    dx,al
   140052f7d:	fdivr  QWORD PTR [rsi-0x41231101]
   140052f83:	(bad)  
   140052f84:	out    dx,al
   140052f85:	fdivr  QWORD PTR [rsi-0x41231101]
   140052f8b:	(bad)  
   140052f8c:	out    dx,al
   140052f8d:	fdivr  QWORD PTR [rsi-0x41231101]
   140052f93:	(bad)  
   140052f94:	out    dx,al
   140052f95:	fdivr  QWORD PTR [rsi+0x274a6aff]
   140052f9b:	call   QWORD PTR [rbx-0x6d00fbac]
   140052fa1:	push   rbx
   140052fa2:	add    al,0xff
   140052fa4:	xchg   edx,eax
   140052fa5:	push   rbx
   140052fa6:	add    al,0xff
   140052fa8:	xchg   ecx,eax
   140052fa9:	push   rbx
   140052faa:	add    al,0xff
   140052fac:	xchg   ecx,eax
   140052fad:	push   rdx
   140052fae:	add    al,0xff
   140052fb0:	nop
   140052fb1:	push   rdx
   140052fb2:	add    al,0xff
   140052fb4:	nop
   140052fb5:	push   rdx
   140052fb6:	add    al,0xff
   140052fb8:	(bad)  
   140052fb9:	push   rdx
   140052fba:	add    al,0xff
   140052fbc:	mov    ss,WORD PTR [rcx+0x4]
   140052fbf:	dec    DWORD PTR [rsi-0x7100fbaf]
   140052fc5:	push   rcx
   140052fc6:	add    al,0xff
   140052fc8:	lea    edx,[rax+0x4]
   140052fcb:	dec    DWORD PTR [rax+rdx*2+0x508cff05]
   140052fd2:	add    eax,0x54f8bff
   140052fd7:	dec    DWORD PTR [rbx-0x7500fab1]
   140052fdd:	rex.WRXB add rax,0x54e8aff
   140052fe3:	dec    DWORD PTR [rcx-0x7600fab2]
   140052fe9:	rex.WRX add rax,0x54d88ff
   140052fef:	dec    DWORD PTR [rax-0x7800fab3]
   140052ff5:	rex.WRB add rax,0x54c87ff
   140052ffb:	inc    DWORD PTR [rsi-0x7a00fab4]
   140053001:	rex.WR add rax,0x54c85ff
   140053007:	inc    DWORD PTR [rbx+rcx*2+0x4b84ff05]
   14005300e:	(bad)  
   14005300f:	inc    DWORD PTR [rbx-0x7c00f9b6]
   140053015:	rex.WX (bad) 
   140053017:	inc    DWORD PTR [rdx-0x7d00f9b6]
   14005301d:	rex.WX (bad) 
   14005301f:	inc    DWORD PTR [rcx-0x7e00f9b7]
   140053025:	rex.WB (bad) 
   140053027:	inc    DWORD PTR [rax-0x7f00f9b7]
   14005302d:	rex.W (bad) 
   14005302f:	(bad)  
   140053030:	jg     0x14005307a
   140053032:	(bad)  
   140053033:	(bad)  
   140053034:	jg     0x14005307e
   140053036:	(bad)  
   140053037:	(bad)  
   140053038:	jle    0x140053081
   14005303a:	(bad)  
   14005303b:	(bad)  
   14005303c:	jle    0x140053085
   14005303e:	(bad)  
   14005303f:	(bad)  
   140053040:	jge    0x140053089
   140053042:	(bad)  
   140053043:	(bad)  
   140053044:	jge    0x14005308d
   140053046:	(bad)  
   140053047:	inc    DWORD PTR [rax]
	...
   140053085:	add    BYTE PTR [rax],al
   140053087:	add    BYTE PTR [rbx-0x4c00ff99],dh
   14005308d:	addr32 add bh,bh
   140053090:	mov    bl,0x67
   140053092:	add    bh,bh
   140053094:	mov    bl,0x67
   140053096:	add    bh,bh
   140053098:	xchg   DWORD PTR [rbp+0x1c],edx
   14005309b:	jmp    FWORD PTR [rax]
   14005309d:	pop    rdi
   14005309e:	out    0xff,al
   1400530a0:	sub    DWORD PTR [rax+rbp*8-0x1],esp
   1400530a4:	sub    al,0x72
   1400530a6:	call   0x12a8a62aa
   1400530ab:	push   QWORD PTR [rbx]
   1400530ad:	nop
   1400530ae:	in     al,dx
   1400530af:	push   QWORD PTR [rbx]
   1400530b1:	xchg   ebx,eax
   1400530b2:	in     eax,dx
   1400530b3:	push   QWORD PTR [rbx]
   1400530b5:	xchg   ebp,eax
   1400530b6:	in     eax,dx
   1400530b7:	push   QWORD PTR [rbx]
   1400530b9:	xchg   esp,eax
   1400530ba:	in     eax,dx
   1400530bb:	push   QWORD PTR [rbx]
   1400530bd:	xchg   ebx,eax
   1400530be:	in     eax,dx
   1400530bf:	push   QWORD PTR [rbx]
   1400530c1:	nop
   1400530c2:	in     al,dx
   1400530c3:	push   QWORD PTR [rdx]
   1400530c5:	mov    edx,ebp
   1400530c7:	jmp    FWORD PTR [rdx+rdi*2]
   1400530ca:	(bad)  
   1400530cb:	jmp    FWORD PTR [rbx]
   1400530cd:	js     0x1400530b9
   1400530cf:	jmp    FWORD PTR [rbx]
   1400530d1:	jns    0x1400530be
   1400530d3:	dec    DWORD PTR [rax+0x67]
   1400530d6:	xchg   ebx,eax
   1400530d7:	call   FWORD PTR [rdx-0x5200fea8]
   1400530dd:	movsxd eax,DWORD PTR [rcx]
   1400530df:	jmp    FWORD PTR [rbx+riz*2+0x62abff01]
   1400530e6:	add    edi,edi
   1400530e8:	stos   DWORD PTR es:[rdi],eax
   1400530e9:	(bad)  {k3}{z}
   1400530ee:	add    edi,edi
   1400530f0:	stos   BYTE PTR es:[rdi],al
   1400530f1:	(bad)  {k1}{z}
   1400530f6:	add    edi,edi
   1400530f8:	test   eax,0xa8ff0161
   1400530fd:	(bad)  
   1400530fe:	add    edi,edi
   140053100:	test   al,0x60
   140053102:	add    edi,edi
   140053104:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140053105:	(bad)  
   140053106:	add    edi,edi
   140053108:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140053109:	(bad)  
   14005310a:	add    edi,edi
   14005310c:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14005310d:	pop    rdi
   14005310e:	add    edi,edi
   140053110:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140053111:	pop    rdi
   140053112:	add    bh,bh
   140053114:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140053115:	pop    rdi
   140053116:	add    bh,bh
   140053118:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140053119:	pop    rsi
   14005311a:	add    bh,bh
   14005311c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14005311d:	pop    rsi
   14005311e:	add    bh,bh
   140053120:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140053121:	pop    rsi
   140053122:	add    bh,bh
   140053124:	xchg   DWORD PTR [rsi+0x1],ecx
   140053127:	dec    DWORD PTR [rax-0x5d00f3b1]
   14005312d:	pop    rbp
   14005312e:	add    bh,bh
   140053130:	push   0x4b
   140053132:	(bad)  
   140053133:	(bad)  
   140053134:	out    dx,al
   140053135:	fnstsw WORD PTR [rdi-0x40221101]
   14005313b:	(bad)  
   14005313c:	out    dx,al
   14005313d:	fnstsw WORD PTR [rdi-0x40221101]
   140053143:	(bad)  
   140053144:	out    dx,al
   140053145:	fnstsw WORD PTR [rdi-0x40221101]
   14005314b:	(bad)  
   14005314c:	out    dx,al
   14005314d:	fnstsw WORD PTR [rdi-0x40221101]
   140053153:	(bad)  
   140053154:	out    dx,al
   140053155:	fnstsw WORD PTR [rdi-0x40221101]
   14005315b:	(bad)  
   14005315c:	out    dx,al
   14005315d:	fnstsw WORD PTR [rdi-0x40221101]
   140053163:	(bad)  
   140053164:	out    dx,al
   140053165:	fnstsw WORD PTR [rdi-0x40221101]
   14005316b:	(bad)  
   14005316c:	out    dx,al
   14005316d:	fnstsw WORD PTR [rdi-0x40221101]
   140053173:	(bad)  
   140053174:	out    dx,al
   140053175:	fnstsw WORD PTR [rdi-0x40221101]
   14005317b:	(bad)  
   14005317c:	out    dx,al
   14005317d:	fnstsw WORD PTR [rdi-0x40221101]
   140053183:	(bad)  
   140053184:	out    dx,al
   140053185:	fnstsw WORD PTR [rdi-0x40221101]
   14005318b:	(bad)  
   14005318c:	out    dx,al
   14005318d:	fnstsw WORD PTR [rdi-0x40221101]
   140053193:	(bad)  
   140053194:	out    dx,al
   140053195:	fnstsw WORD PTR [rdi+0x274b6aff]
   14005319b:	call   QWORD PTR [rbx-0x6c00fbac]
   1400531a1:	push   rsp
   1400531a2:	add    al,0xff
   1400531a4:	xchg   edx,eax
   1400531a5:	push   rbx
   1400531a6:	add    al,0xff
   1400531a8:	xchg   edx,eax
   1400531a9:	push   rbx
   1400531aa:	add    al,0xff
   1400531ac:	xchg   ecx,eax
   1400531ad:	push   rbx
   1400531ae:	add    al,0xff
   1400531b0:	xchg   ecx,eax
   1400531b1:	push   rdx
   1400531b2:	add    al,0xff
   1400531b4:	nop
   1400531b5:	push   rdx
   1400531b6:	add    al,0xff
   1400531b8:	nop
   1400531b9:	push   rdx
   1400531ba:	add    al,0xff
   1400531bc:	(bad)  
   1400531bd:	push   rdx
   1400531be:	add    al,0xff
   1400531c0:	mov    ss,WORD PTR [rcx+0x4]
   1400531c3:	dec    DWORD PTR [rsi-0x7100fbaf]
   1400531c9:	push   rcx
   1400531ca:	add    al,0xff
   1400531cc:	lea    edx,[rax+0x4]
   1400531cf:	dec    DWORD PTR [rax+rdx*2+0x508cff05]
   1400531d6:	add    eax,0x54f8bff
   1400531db:	dec    DWORD PTR [rbx-0x7500fab1]
   1400531e1:	rex.WRXB add rax,0x54e8aff
   1400531e7:	dec    DWORD PTR [rcx-0x7600fab2]
   1400531ed:	rex.WRX add rax,0x54d88ff
   1400531f3:	dec    DWORD PTR [rax-0x7800fab3]
   1400531f9:	rex.WRB add rax,0x54c87ff
   1400531ff:	inc    DWORD PTR [rsi-0x7a00fab4]
   140053205:	rex.WR add rax,0x54c85ff
   14005320b:	inc    DWORD PTR [rbx+rcx*2+0x4b84ff05]
   140053212:	(bad)  
   140053213:	inc    DWORD PTR [rbx-0x7c00f9b6]
   140053219:	rex.WX (bad) 
   14005321b:	inc    DWORD PTR [rdx-0x7d00f9b6]
   140053221:	rex.WX (bad) 
   140053223:	inc    DWORD PTR [rcx-0x7e00f9b7]
   140053229:	rex.WB (bad) 
   14005322b:	inc    DWORD PTR [rax-0x7f00f9b7]
   140053231:	rex.W (bad) 
   140053233:	(bad)  
   140053234:	jg     0x14005327e
   140053236:	(bad)  
   140053237:	(bad)  
   140053238:	jg     0x140053282
   14005323a:	(bad)  
   14005323b:	(bad)  
   14005323c:	jle    0x140053285
   14005323e:	(bad)  
   14005323f:	(bad)  
   140053240:	jle    0x140053289
   140053242:	(bad)  
   140053243:	(bad)  
   140053244:	jge    0x14005328d
   140053246:	(bad)  
   140053247:	inc    DWORD PTR [rax]
	...
   140053285:	add    BYTE PTR [rax],al
   140053287:	add    BYTE PTR [rbx-0x4c00ff99],dh
   14005328d:	addr32 add bh,bh
   140053290:	mov    bl,0x67
   140053292:	add    bh,bh
   140053294:	lods   al,BYTE PTR ds:[rsi]
   140053295:	movsxd eax,DWORD PTR [rax]
   140053297:	inc    DWORD PTR [rdi+0x43]
   14005329a:	cmp    edi,0xffd64927
   1400532a0:	sub    BYTE PTR [rcx-0x23],dl
   1400532a3:	jmp    FWORD PTR [rax]
   1400532a5:	pop    rcx
   1400532a6:	jrcxz  0x1400532a7
   1400532a8:	sub    BYTE PTR [rdi-0x1a],bl
   1400532ab:	jmp    FWORD PTR [rbx]
   1400532ad:	imul   ebp,eax,0xffffffff
   1400532b0:	cs js  0x14005329c
   1400532b3:	push   QWORD PTR [rcx]
   1400532b5:	(bad)  
   1400532b6:	(bad)  
   1400532b7:	push   QWORD PTR [rdx]
   1400532b9:	test   edx,ebp
   1400532bb:	push   QWORD PTR [rcx]
   1400532bd:	sub    edx,0xffffffff
   1400532c0:	cs jl  0x1400532ac
   1400532c3:	jmp    FWORD PTR [rbx]
   1400532c5:	jae    0x1400532b0
   1400532c7:	jmp    FWORD PTR [rdx]
   1400532c9:	jb     0x1400532b5
   1400532cb:	jmp    FWORD PTR [rdx]
   1400532cd:	jae    0x1400532b9
   1400532cf:	jmp    FWORD PTR [rbx]
   1400532d1:	jne    0x1400532bd
   1400532d3:	jmp    FWORD PTR [rbx]
   1400532d5:	js     0x1400532c1
   1400532d7:	call   FWORD PTR [rcx+rbx*2+0x59]
   1400532db:	call   FWORD PTR [rbp-0x5200fea6]
   1400532e1:	movsxd eax,DWORD PTR [rcx]
   1400532e3:	jmp    FWORD PTR [rbx+riz*2+0x62abff01]
   1400532ea:	add    edi,edi
   1400532ec:	stos   DWORD PTR es:[rdi],eax
   1400532ed:	(bad)  {k3}{z}
   1400532f2:	add    edi,edi
   1400532f4:	stos   BYTE PTR es:[rdi],al
   1400532f5:	(bad)  {k1}{z}
   1400532fa:	add    edi,edi
   1400532fc:	test   eax,0xa8ff0161
   140053301:	(bad)  
   140053302:	add    edi,edi
   140053304:	test   al,0x60
   140053306:	add    edi,edi
   140053308:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140053309:	(bad)  
   14005330a:	add    edi,edi
   14005330c:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14005330d:	(bad)  
   14005330e:	add    edi,edi
   140053310:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140053311:	pop    rdi
   140053312:	add    edi,edi
   140053314:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140053315:	pop    rdi
   140053316:	add    bh,bh
   140053318:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140053319:	pop    rdi
   14005331a:	add    bh,bh
   14005331c:	movabs ds:0x44ff014d85ff025d,al
   140053325:	xor    DWORD PTR [rdi+rdi*8+0x72],ebx
   140053329:	rex.RXB cmp al,0xff
   14005332c:	movabs ds:0xefff274b6bff025d,al
   140053335:	ffree  st(0)
   140053337:	(bad)  
   140053338:	out    dx,eax
   140053339:	ffree  st(0)
   14005333b:	(bad)  
   14005333c:	out    dx,eax
   14005333d:	ffree  st(0)
   14005333f:	(bad)  
   140053340:	out    dx,eax
   140053341:	ffree  st(0)
   140053343:	(bad)  
   140053344:	out    dx,eax
   140053345:	ffree  st(0)
   140053347:	(bad)  
   140053348:	out    dx,eax
   140053349:	ffree  st(0)
   14005334b:	(bad)  
   14005334c:	out    dx,eax
   14005334d:	ffree  st(0)
   14005334f:	(bad)  
   140053350:	out    dx,eax
   140053351:	ffree  st(0)
   140053353:	(bad)  
   140053354:	out    dx,eax
   140053355:	ffree  st(0)
   140053357:	(bad)  
   140053358:	out    dx,eax
   140053359:	ffree  st(0)
   14005335b:	(bad)  
   14005335c:	out    dx,eax
   14005335d:	ffree  st(0)
   14005335f:	(bad)  
   140053360:	out    dx,eax
   140053361:	ffree  st(0)
   140053363:	(bad)  
   140053364:	out    dx,eax
   140053365:	ffree  st(0)
   140053367:	(bad)  
   140053368:	out    dx,eax
   140053369:	ffree  st(0)
   14005336b:	(bad)  
   14005336c:	out    dx,eax
   14005336d:	ffree  st(0)
   14005336f:	(bad)  
   140053370:	out    dx,eax
   140053371:	ffree  st(0)
   140053373:	(bad)  
   140053374:	out    dx,eax
   140053375:	ffree  st(0)
   140053377:	(bad)  
   140053378:	out    dx,eax
   140053379:	ffree  st(0)
   14005337b:	(bad)  
   14005337c:	out    dx,eax
   14005337d:	ffree  st(0)
   14005337f:	(bad)  
   140053380:	out    dx,eax
   140053381:	ffree  st(0)
   140053383:	(bad)  
   140053384:	out    dx,eax
   140053385:	ffree  st(0)
   140053387:	(bad)  
   140053388:	out    dx,eax
   140053389:	ffree  st(0)
   14005338b:	(bad)  
   14005338c:	out    dx,eax
   14005338d:	ffree  st(0)
   14005338f:	(bad)  
   140053390:	out    dx,eax
   140053391:	ffree  st(0)
   140053393:	(bad)  
   140053394:	out    dx,eax
   140053395:	ffree  st(0)
   140053397:	jmp    FWORD PTR [rbx+0x4b]
   14005339a:	(bad)  
   14005339b:	call   QWORD PTR [rsp+rdx*2+0x5493ff04]
   1400533a2:	add    al,0xff
   1400533a4:	xchg   ebx,eax
   1400533a5:	push   rsp
   1400533a6:	add    al,0xff
   1400533a8:	xchg   edx,eax
   1400533a9:	push   rbx
   1400533aa:	add    al,0xff
   1400533ac:	xchg   edx,eax
   1400533ad:	push   rbx
   1400533ae:	add    al,0xff
   1400533b0:	xchg   ecx,eax
   1400533b1:	push   rbx
   1400533b2:	add    al,0xff
   1400533b4:	xchg   ecx,eax
   1400533b5:	push   rdx
   1400533b6:	add    al,0xff
   1400533b8:	nop
   1400533b9:	push   rdx
   1400533ba:	add    al,0xff
   1400533bc:	nop
   1400533bd:	push   rdx
   1400533be:	add    al,0xff
   1400533c0:	(bad)  
   1400533c1:	push   rdx
   1400533c2:	add    al,0xff
   1400533c4:	mov    ss,WORD PTR [rcx+0x4]
   1400533c7:	dec    DWORD PTR [rsi-0x7100fbaf]
   1400533cd:	push   rcx
   1400533ce:	add    al,0xff
   1400533d0:	lea    edx,[rax+0x4]
   1400533d3:	dec    DWORD PTR [rax+rdx*2+0x508cff05]
   1400533da:	add    eax,0x54f8bff
   1400533df:	dec    DWORD PTR [rbx-0x7500fab1]
   1400533e5:	rex.WRXB add rax,0x54e8aff
   1400533eb:	dec    DWORD PTR [rcx-0x7600fab2]
   1400533f1:	rex.WRX add rax,0x54d88ff
   1400533f7:	dec    DWORD PTR [rax-0x7800fab3]
   1400533fd:	rex.WRB add rax,0x54c87ff
   140053403:	inc    DWORD PTR [rsi-0x7a00fab4]
   140053409:	rex.WR add rax,0x54c85ff
   14005340f:	inc    DWORD PTR [rbx+rcx*2+0x4b84ff05]
   140053416:	(bad)  
   140053417:	inc    DWORD PTR [rbx-0x7c00f9b6]
   14005341d:	rex.WX (bad) 
   14005341f:	inc    DWORD PTR [rdx-0x7d00f9b6]
   140053425:	rex.WX (bad) 
   140053427:	inc    DWORD PTR [rcx-0x7e00f9b7]
   14005342d:	rex.WB (bad) 
   14005342f:	inc    DWORD PTR [rax-0x7f00f9b7]
   140053435:	rex.W (bad) 
   140053437:	(bad)  
   140053438:	jg     0x140053482
   14005343a:	(bad)  
   14005343b:	(bad)  
   14005343c:	jg     0x140053486
   14005343e:	(bad)  
   14005343f:	(bad)  
   140053440:	jle    0x140053489
   140053442:	(bad)  
   140053443:	(bad)  
   140053444:	jle    0x14005348d
   140053446:	(bad)  
   140053447:	inc    DWORD PTR [rax]
	...
   140053485:	add    BYTE PTR [rax],al
   140053487:	add    BYTE PTR [rbx-0x4c00ff99],dh
   14005348d:	addr32 add bh,bh
   140053490:	mov    bl,0x67
   140053492:	add    bh,bh
   140053494:	or     DWORD PTR [rbp+0x16],0xffffffff
   140053498:	and    eax,0x26ffba29
   14005349d:	xor    al,ah
   14005349f:	jmp    QWORD PTR [rdi]
   1400534a1:	cmp    al,0xcc
   1400534a3:	jmp    QWORD PTR [rdi]
   1400534a5:	rex.RB sar r15d,cl
   1400534a8:	(bad)  
   1400534a9:	rex.WRB (bad) 
   1400534ac:	sub    BYTE PTR [rbp-0x20],dl
   1400534af:	jmp    FWORD PTR [rax]
   1400534b1:	pop    rbx
   1400534b2:	in     al,0xff
   1400534b4:	sub    BYTE PTR [rax-0x19],ah
   1400534b7:	jmp    FWORD PTR [rcx]
   1400534b9:	fs call 0x1286b5ebe
   1400534bf:	jmp    FWORD PTR [rcx]
   1400534c1:	imul   ebp,eax,0xe96b29ff
   1400534c7:	jmp    FWORD PTR [rdx]
   1400534c9:	ins    DWORD PTR es:[rdi],dx
   1400534ca:	jmp    0x129745fce
   1400534cf:	jmp    FWORD PTR [rdx]
   1400534d1:	jb     0x1400534bd
   1400534d3:	jmp    FWORD PTR [rdx]
   1400534d5:	jne    0x1400534c1
   1400534d7:	jmp    FWORD PTR [rbx]
   1400534d9:	js     0x1400534c5
   1400534db:	jmp    QWORD PTR [rax+rbx*2+0x4a]
   1400534df:	jmp    QWORD PTR [rbx-0x5200fea2]
   1400534e5:	movsxd eax,DWORD PTR [rcx]
   1400534e7:	jmp    FWORD PTR [rbx+riz*2+0x62abff01]
   1400534ee:	add    edi,edi
   1400534f0:	stos   DWORD PTR es:[rdi],eax
   1400534f1:	(bad)  {k3}{z}
   1400534f6:	add    edi,edi
   1400534f8:	stos   BYTE PTR es:[rdi],al
   1400534f9:	(bad)  {k1}{z}
   1400534fe:	add    edi,edi
   140053500:	test   eax,0xa8ff0161
   140053505:	(bad)  
   140053506:	add    edi,edi
   140053508:	test   al,0x60
   14005350a:	add    edi,edi
   14005350c:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14005350d:	(bad)  
   14005350e:	add    edi,edi
   140053510:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140053511:	(bad)  
   140053512:	add    edi,edi
   140053514:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140053515:	pop    rdi
   140053516:	add    edi,edi
   140053518:	movabs ds:0x40ff0c4677ff025d,eax
   140053521:	(bad)  
   140053522:	imul   edi,edi,0xff962628
   140053528:	fwait
   140053529:	pop    rdx
   14005352a:	or     al,0xff
   14005352c:	movabs ds:0xefff284c6bff025d,eax
   140053535:	faddp  st(2),st
   140053537:	(bad)  
   140053538:	out    dx,eax
   140053539:	faddp  st(2),st
   14005353b:	(bad)  
   14005353c:	out    dx,eax
   14005353d:	faddp  st(2),st
   14005353f:	(bad)  
   140053540:	out    dx,eax
   140053541:	faddp  st(2),st
   140053543:	(bad)  
   140053544:	out    dx,eax
   140053545:	faddp  st(2),st
   140053547:	(bad)  
   140053548:	out    dx,eax
   140053549:	faddp  st(2),st
   14005354b:	(bad)  
   14005354c:	out    dx,eax
   14005354d:	faddp  st(2),st
   14005354f:	(bad)  
   140053550:	out    dx,eax
   140053551:	faddp  st(2),st
   140053553:	(bad)  
   140053554:	out    dx,eax
   140053555:	faddp  st(2),st
   140053557:	(bad)  
   140053558:	out    dx,eax
   140053559:	faddp  st(2),st
   14005355b:	(bad)  
   14005355c:	out    dx,eax
   14005355d:	faddp  st(2),st
   14005355f:	(bad)  
   140053560:	out    dx,eax
   140053561:	faddp  st(2),st
   140053563:	(bad)  
   140053564:	out    dx,eax
   140053565:	faddp  st(2),st
   140053567:	(bad)  
   140053568:	out    dx,eax
   140053569:	faddp  st(2),st
   14005356b:	(bad)  
   14005356c:	out    dx,eax
   14005356d:	faddp  st(2),st
   14005356f:	(bad)  
   140053570:	out    dx,eax
   140053571:	faddp  st(2),st
   140053573:	(bad)  
   140053574:	out    dx,eax
   140053575:	faddp  st(2),st
   140053577:	(bad)  
   140053578:	out    dx,eax
   140053579:	faddp  st(2),st
   14005357b:	(bad)  
   14005357c:	out    dx,eax
   14005357d:	faddp  st(2),st
   14005357f:	(bad)  
   140053580:	out    dx,eax
   140053581:	faddp  st(2),st
   140053583:	(bad)  
   140053584:	out    dx,eax
   140053585:	faddp  st(2),st
   140053587:	(bad)  
   140053588:	out    dx,eax
   140053589:	faddp  st(2),st
   14005358b:	(bad)  
   14005358c:	out    dx,eax
   14005358d:	faddp  st(2),st
   14005358f:	(bad)  
   140053590:	out    dx,eax
   140053591:	faddp  st(2),st
   140053593:	(bad)  
   140053594:	out    dx,eax
   140053595:	faddp  st(2),st
   140053597:	jmp    FWORD PTR [rbx+0x4c]
   14005359a:	sub    bh,bh
   14005359c:	xchg   esp,eax
   14005359d:	push   rbp
   14005359e:	add    al,0xff
   1400535a0:	xchg   esp,eax
   1400535a1:	push   rsp
   1400535a2:	add    al,0xff
   1400535a4:	xchg   ebx,eax
   1400535a5:	push   rsp
   1400535a6:	add    al,0xff
   1400535a8:	xchg   ebx,eax
   1400535a9:	push   rsp
   1400535aa:	add    al,0xff
   1400535ac:	xchg   edx,eax
   1400535ad:	push   rbx
   1400535ae:	add    al,0xff
   1400535b0:	xchg   edx,eax
   1400535b1:	push   rbx
   1400535b2:	add    al,0xff
   1400535b4:	xchg   ecx,eax
   1400535b5:	push   rbx
   1400535b6:	add    al,0xff
   1400535b8:	xchg   ecx,eax
   1400535b9:	push   rdx
   1400535ba:	add    al,0xff
   1400535bc:	nop
   1400535bd:	push   rdx
   1400535be:	add    al,0xff
   1400535c0:	nop
   1400535c1:	push   rdx
   1400535c2:	add    al,0xff
   1400535c4:	(bad)  
   1400535c5:	push   rdx
   1400535c6:	add    al,0xff
   1400535c8:	mov    ss,WORD PTR [rcx+0x4]
   1400535cb:	dec    DWORD PTR [rsi-0x7100fbaf]
   1400535d1:	push   rcx
   1400535d2:	add    al,0xff
   1400535d4:	lea    edx,[rax+0x4]
   1400535d7:	dec    DWORD PTR [rax+rdx*2+0x508cff05]
   1400535de:	add    eax,0x54f8bff
   1400535e3:	dec    DWORD PTR [rbx-0x7500fab1]
   1400535e9:	rex.WRXB add rax,0x54e8aff
   1400535ef:	dec    DWORD PTR [rcx-0x7600fab2]
   1400535f5:	rex.WRX add rax,0x54d88ff
   1400535fb:	dec    DWORD PTR [rax-0x7800fab3]
   140053601:	rex.WRB add rax,0x54c87ff
   140053607:	inc    DWORD PTR [rsi-0x7a00fab4]
   14005360d:	rex.WR add rax,0x54c85ff
   140053613:	inc    DWORD PTR [rbx+rcx*2+0x4b84ff05]
   14005361a:	(bad)  
   14005361b:	inc    DWORD PTR [rbx-0x7c00f9b6]
   140053621:	rex.WX (bad) 
   140053623:	inc    DWORD PTR [rdx-0x7d00f9b6]
   140053629:	rex.WX (bad) 
   14005362b:	inc    DWORD PTR [rcx-0x7e00f9b7]
   140053631:	rex.WB (bad) 
   140053633:	inc    DWORD PTR [rax-0x7f00f9b7]
   140053639:	rex.W (bad) 
   14005363b:	(bad)  
   14005363c:	jg     0x140053686
   14005363e:	(bad)  
   14005363f:	(bad)  
   140053640:	jg     0x14005368a
   140053642:	(bad)  
   140053643:	(bad)  
   140053644:	jle    0x14005368d
   140053646:	(bad)  
   140053647:	inc    DWORD PTR [rax]
	...
   140053685:	add    BYTE PTR [rax],al
   140053687:	add    BYTE PTR [rbx-0x4c00ff99],dh
   14005368d:	addr32 add bh,bh
   140053690:	lahf   
   140053691:	pop    rbx
   140053692:	add    bh,bh
   140053694:	cmp    al,0x2d
   140053696:	jmp    WORD PTR [rcx]
   140053699:	and    esp,DWORD PTR [rbx-0x4edadb01]
   14005369f:	jmp    QWORD PTR [rip+0x26ffbc2a]        # 0x16704f2cf
   1400536a5:	xor    al,ah
   1400536a7:	jmp    QWORD PTR [rdi]
   1400536a9:	cmp    ecx,ebx
   1400536ab:	jmp    QWORD PTR [rdi]
   1400536ad:	rex.XB sar r15b,cl
   1400536b0:	(bad)  
   1400536b1:	rex.WXB fdivr st,st(7)
   1400536b4:	sub    BYTE PTR [rdx-0x22],dl
   1400536b7:	jmp    FWORD PTR [rax]
   1400536b9:	pop    rcx
   1400536ba:	jrcxz  0x1400536bb
   1400536bc:	sub    BYTE PTR [rdi-0x19],bl
   1400536bf:	jmp    FWORD PTR [rcx]
   1400536c1:	movsxd ebp,eax
   1400536c3:	jmp    FWORD PTR [rcx]
   1400536c5:	call   0x60c8
   1400536c9:	push   0x6b29ffe8
   1400536ce:	jmp    0x1297361d2
   1400536d3:	jmp    FWORD PTR [rdx]
   1400536d5:	jb     0x1400536c1
   1400536d7:	jmp    FWORD PTR [rbx]
   1400536d9:	jbe    0x1400536c5
   1400536db:	push   QWORD PTR [rax]
   1400536dd:	jbe    0x1400536bb
   1400536df:	jmp    FWORD PTR [rsi+0x52]
   1400536e2:	sub    eax,0x15ea3ff
   1400536e7:	jmp    FWORD PTR [rbp-0x5300fe9d]
   1400536ed:	movsxd eax,DWORD PTR [rcx]
   1400536ef:	jmp    FWORD PTR [rbx-0x5400fe9e]
   1400536f5:	(bad)  {k3}{z}
   1400536fa:	add    edi,edi
   1400536fc:	stos   BYTE PTR es:[rdi],al
   1400536fd:	(bad)  {k1}{z}
   140053702:	add    edi,edi
   140053704:	test   eax,0xa8ff0161
   140053709:	(bad)  
   14005370a:	add    edi,edi
   14005370c:	test   al,0x60
   14005370e:	add    edi,edi
   140053710:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140053711:	(bad)  
   140053712:	add    edi,edi
   140053714:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140053715:	pop    rsi
   140053716:	add    edi,edi
   140053718:	jns    0x140053760
   14005371a:	or     al,0xff
   14005371c:	xor    ch,BYTE PTR [rdx]
   14005371e:	mov    ?,edi
   140053720:	and    DWORD PTR [rbx],esp
   140053722:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140053723:	call   FWORD PTR [rdx+0x3c]
   140053726:	pop    rcx
   140053727:	jmp    QWORD PTR [rsi+rbx*2+0x5ea4ff02]
   14005372e:	add    bh,bh
   140053730:	ins    BYTE PTR es:[rdi],dx
   140053731:	rex.WR sub dil,r15b
   140053734:	lock ffreep st(3)
   140053737:	push   rax
   140053739:	ffreep st(3)
   14005373b:	push   rax
   14005373d:	ffreep st(3)
   14005373f:	push   rax
   140053741:	ffreep st(3)
   140053743:	push   rax
   140053745:	ffreep st(3)
   140053747:	push   rax
   140053749:	ffreep st(3)
   14005374b:	push   rax
   14005374d:	ffreep st(3)
   14005374f:	push   rax
   140053751:	ffreep st(3)
   140053753:	push   rax
   140053755:	ffreep st(3)
   140053757:	push   rax
   140053759:	ffreep st(3)
   14005375b:	push   rax
   14005375d:	ffreep st(3)
   14005375f:	push   rax
   140053761:	ffreep st(3)
   140053763:	push   rax
   140053765:	ffreep st(3)
   140053767:	push   rax
   140053769:	ffreep st(3)
   14005376b:	push   rax
   14005376d:	ffreep st(3)
   14005376f:	push   rax
   140053771:	ffreep st(3)
   140053773:	push   rax
   140053775:	ffreep st(3)
   140053777:	push   rax
   140053779:	ffreep st(3)
   14005377b:	push   rax
   14005377d:	ffreep st(3)
   14005377f:	push   rax
   140053781:	ffreep st(3)
   140053783:	push   rax
   140053785:	ffreep st(3)
   140053787:	push   rax
   140053789:	ffreep st(3)
   14005378b:	push   rax
   14005378d:	ffreep st(3)
   14005378f:	push   rax
   140053791:	ffreep st(3)
   140053793:	push   rax
   140053795:	ffreep st(3)
   140053797:	jmp    FWORD PTR [rsp+rcx*2+0x28]
   14005379b:	call   QWORD PTR [rbp-0x6b00fbab]
   1400537a1:	push   rbp
   1400537a2:	add    al,0xff
   1400537a4:	xchg   esp,eax
   1400537a5:	push   rsp
   1400537a6:	add    al,0xff
   1400537a8:	xchg   ebx,eax
   1400537a9:	push   rsp
   1400537aa:	add    al,0xff
   1400537ac:	xchg   ebx,eax
   1400537ad:	push   rsp
   1400537ae:	add    al,0xff
   1400537b0:	xchg   edx,eax
   1400537b1:	push   rbx
   1400537b2:	add    al,0xff
   1400537b4:	xchg   edx,eax
   1400537b5:	push   rbx
   1400537b6:	add    al,0xff
   1400537b8:	xchg   ecx,eax
   1400537b9:	push   rbx
   1400537ba:	add    al,0xff
   1400537bc:	xchg   ecx,eax
   1400537bd:	push   rdx
   1400537be:	add    al,0xff
   1400537c0:	nop
   1400537c1:	push   rdx
   1400537c2:	add    al,0xff
   1400537c4:	nop
   1400537c5:	push   rdx
   1400537c6:	add    al,0xff
   1400537c8:	(bad)  
   1400537c9:	push   rdx
   1400537ca:	add    al,0xff
   1400537cc:	mov    ss,WORD PTR [rcx+0x4]
   1400537cf:	dec    DWORD PTR [rsi-0x7100fbaf]
   1400537d5:	push   rcx
   1400537d6:	add    al,0xff
   1400537d8:	lea    edx,[rax+0x4]
   1400537db:	dec    DWORD PTR [rax+rdx*2+0x508cff05]
   1400537e2:	add    eax,0x54f8bff
   1400537e7:	dec    DWORD PTR [rbx-0x7500fab1]
   1400537ed:	rex.WRXB add rax,0x54e8aff
   1400537f3:	dec    DWORD PTR [rcx-0x7600fab2]
   1400537f9:	rex.WRX add rax,0x54d88ff
   1400537ff:	dec    DWORD PTR [rax-0x7800fab3]
   140053805:	rex.WRB add rax,0x54c87ff
   14005380b:	inc    DWORD PTR [rsi-0x7a00fab4]
   140053811:	rex.WR add rax,0x54c85ff
   140053817:	inc    DWORD PTR [rbx+rcx*2+0x4b84ff05]
   14005381e:	(bad)  
   14005381f:	inc    DWORD PTR [rbx-0x7c00f9b6]
   140053825:	rex.WX (bad) 
   140053827:	inc    DWORD PTR [rdx-0x7d00f9b6]
   14005382d:	rex.WX (bad) 
   14005382f:	inc    DWORD PTR [rcx-0x7e00f9b7]
   140053835:	rex.WB (bad) 
   140053837:	inc    DWORD PTR [rax-0x7f00f9b7]
   14005383d:	rex.W (bad) 
   14005383f:	(bad)  
   140053840:	jg     0x14005388a
   140053842:	(bad)  
   140053843:	(bad)  
   140053844:	jg     0x14005388e
   140053846:	(bad)  
   140053847:	inc    DWORD PTR [rax]
	...
   140053885:	add    BYTE PTR [rax],al
   140053887:	add    BYTE PTR [rbx-0x5600ff99],dh
   14005388d:	(bad)  
   14005388e:	add    bh,bh
   140053890:	pop    rax
   140053891:	(bad)  
   140053892:	call   FWORD PTR cs:[rbx]
   140053895:	sbb    eax,0x201dff83
   14005389a:	mov    edi,?
   14005389c:	(bad)  
   14005389d:	and    bl,BYTE PTR [rdx-0x57dbdd01]
   1400538a3:	jmp    QWORD PTR [rsi+riz*1]
   1400538a6:	mov    ch,0xff
   1400538a8:	sub    edi,DWORD PTR es:[rsi-0x3accd801]
   1400538af:	jmp    QWORD PTR [rdi]
   1400538b1:	cmp    al,0xcc
   1400538b3:	jmp    QWORD PTR [rdi]
   1400538b5:	rex.R sar dil,cl
   1400538b8:	(bad)  
   1400538b9:	rex.WR fdivr st,st(7)
   1400538bc:	sub    BYTE PTR [rdi+rbx*8-0x1],dl
   1400538c0:	sub    BYTE PTR [rbx-0x1b],bl
   1400538c3:	jmp    FWORD PTR [rax]
   1400538c5:	(bad)  
   1400538c6:	out    0xff,eax
   1400538c8:	sub    DWORD PTR [rax+rbp*8-0x1],esp
   1400538cc:	sub    DWORD PTR [rdi-0x18],esp
   1400538cf:	jmp    FWORD PTR [rcx]
   1400538d1:	imul   ebp,ecx,0xffffffff
   1400538d4:	sub    ch,BYTE PTR [rdi-0x17]
   1400538d7:	jmp    FWORD PTR [rdx]
   1400538d9:	jae    0x1400538c5
   1400538db:	jmp    FWORD PTR [rbx]
   1400538dd:	ja     0x1400538c9
   1400538df:	push   QWORD PTR [rax]
   1400538e1:	jns    0x1400538bf
   1400538e3:	jmp    FWORD PTR [rsi+0x52]
   1400538e6:	sub    eax,0x15ea3ff
   1400538eb:	jmp    FWORD PTR [rbp-0x5300fe9d]
   1400538f1:	movsxd eax,DWORD PTR [rcx]
   1400538f3:	jmp    FWORD PTR [rbx-0x5400fe9e]
   1400538f9:	(bad)  {k3}{z}
   1400538fe:	add    edi,edi
   140053900:	stos   BYTE PTR es:[rdi],al
   140053901:	(bad)  {k1}{z}
   140053906:	add    edi,edi
   140053908:	test   eax,0xa8ff0161
   14005390d:	(bad)  
   14005390e:	add    edi,edi
   140053910:	sahf   
   140053911:	pop    rbx
   140053912:	add    edi,edi
   140053914:	jbe    0x14005395b
   140053916:	or     eax,0x932b33ff
   14005391b:	jmp    QWORD PTR [rdx]
   14005391d:	and    al,0xaa
   14005391f:	jmp    QWORD PTR [rax]
   140053921:	and    ebx,DWORD PTR [rdi+0x155794ff]
   140053927:	jmp    QWORD PTR [rbp-0x5b00fda2]
   14005392d:	pop    rsi
   14005392e:	add    bh,bh
   140053930:	ins    BYTE PTR es:[rdi],dx
   140053931:	sub    r15,r15
   140053934:	lock loopne 0x1400538fb
   140053937:	push   rax
   140053939:	loopne 0x1400538ff
   14005393b:	push   rax
   14005393d:	loopne 0x140053903
   14005393f:	push   rax
   140053941:	loopne 0x140053907
   140053943:	push   rax
   140053945:	loopne 0x14005390b
   140053947:	push   rax
   140053949:	loopne 0x14005390f
   14005394b:	push   rax
   14005394d:	loopne 0x140053913
   14005394f:	push   rax
   140053951:	loopne 0x140053917
   140053953:	push   rax
   140053955:	loopne 0x14005391b
   140053957:	push   rax
   140053959:	loopne 0x14005391f
   14005395b:	push   rax
   14005395d:	loopne 0x140053923
   14005395f:	push   rax
   140053961:	loopne 0x140053927
   140053963:	push   rax
   140053965:	loopne 0x14005392b
   140053967:	push   rax
   140053969:	loopne 0x14005392f
   14005396b:	push   rax
   14005396d:	loopne 0x140053933
   14005396f:	push   rax
   140053971:	loopne 0x140053937
   140053973:	push   rax
   140053975:	loopne 0x14005393b
   140053977:	push   rax
   140053979:	loopne 0x14005393f
   14005397b:	push   rax
   14005397d:	loopne 0x140053943
   14005397f:	push   rax
   140053981:	loopne 0x140053947
   140053983:	push   rax
   140053985:	loopne 0x14005394b
   140053987:	push   rax
   140053989:	loopne 0x14005394f
   14005398b:	push   rax
   14005398d:	loopne 0x140053953
   14005398f:	push   rax
   140053991:	loopne 0x140053957
   140053993:	push   rax
   140053995:	loopne 0x14005395b
   140053997:	jmp    FWORD PTR [rbp+rcx*2+0x29]
   14005399b:	call   QWORD PTR [rbp-0x6a00fcab]
   1400539a1:	push   rbp
   1400539a2:	add    al,0xff
   1400539a4:	xchg   esp,eax
   1400539a5:	push   rbp
   1400539a6:	add    al,0xff
   1400539a8:	xchg   esp,eax
   1400539a9:	push   rsp
   1400539aa:	add    al,0xff
   1400539ac:	xchg   ebx,eax
   1400539ad:	push   rsp
   1400539ae:	add    al,0xff
   1400539b0:	xchg   ebx,eax
   1400539b1:	push   rsp
   1400539b2:	add    al,0xff
   1400539b4:	xchg   edx,eax
   1400539b5:	push   rbx
   1400539b6:	add    al,0xff
   1400539b8:	xchg   edx,eax
   1400539b9:	push   rbx
   1400539ba:	add    al,0xff
   1400539bc:	xchg   ecx,eax
   1400539bd:	push   rbx
   1400539be:	add    al,0xff
   1400539c0:	xchg   ecx,eax
   1400539c1:	push   rdx
   1400539c2:	add    al,0xff
   1400539c4:	nop
   1400539c5:	push   rdx
   1400539c6:	add    al,0xff
   1400539c8:	nop
   1400539c9:	push   rdx
   1400539ca:	add    al,0xff
   1400539cc:	(bad)  
   1400539cd:	push   rdx
   1400539ce:	add    al,0xff
   1400539d0:	mov    ss,WORD PTR [rcx+0x4]
   1400539d3:	dec    DWORD PTR [rsi-0x7100fbaf]
   1400539d9:	push   rcx
   1400539da:	add    al,0xff
   1400539dc:	lea    edx,[rax+0x4]
   1400539df:	dec    DWORD PTR [rax+rdx*2+0x508cff05]
   1400539e6:	add    eax,0x54f8bff
   1400539eb:	dec    DWORD PTR [rbx-0x7500fab1]
   1400539f1:	rex.WRXB add rax,0x54e8aff
   1400539f7:	dec    DWORD PTR [rcx-0x7600fab2]
   1400539fd:	rex.WRX add rax,0x54d88ff
   140053a03:	dec    DWORD PTR [rax-0x7800fab3]
   140053a09:	rex.WRB add rax,0x54c87ff
   140053a0f:	inc    DWORD PTR [rsi-0x7a00fab4]
   140053a15:	rex.WR add rax,0x54c85ff
   140053a1b:	inc    DWORD PTR [rbx+rcx*2+0x4b84ff05]
   140053a22:	(bad)  
   140053a23:	inc    DWORD PTR [rbx-0x7c00f9b6]
   140053a29:	rex.WX (bad) 
   140053a2b:	inc    DWORD PTR [rdx-0x7d00f9b6]
   140053a31:	rex.WX (bad) 
   140053a33:	inc    DWORD PTR [rcx-0x7e00f9b7]
   140053a39:	rex.WB (bad) 
   140053a3b:	inc    DWORD PTR [rax-0x7f00f9b7]
   140053a41:	rex.W (bad) 
   140053a43:	(bad)  
   140053a44:	jg     0x140053a8e
   140053a46:	(bad)  
   140053a47:	inc    DWORD PTR [rax]
	...
   140053a75:	add    BYTE PTR [rax],al
   140053a77:	(bad)  
   140053a78:	add    BYTE PTR [rax],al
   140053a7a:	add    BYTE PTR [rbx+0x0],al
   140053a7d:	add    BYTE PTR [rax],al
   140053a7f:	(bad)  
   140053a80:	add    BYTE PTR [rax],al
   140053a82:	add    BYTE PTR [rdx],cl
   140053a84:	add    BYTE PTR [rax],al
   140053a86:	add    BYTE PTR [rdx],cl
   140053a88:	cwde   
   140053a89:	pop    rax
   140053a8a:	add    bh,bh
   140053a8c:	push   0x3f
   140053a8e:	adc    al,0xff
   140053a90:	sbb    DWORD PTR [rax],ebx
   140053a92:	jo     0x140053a93
   140053a94:	sbb    bl,BYTE PTR [rdx]
   140053a96:	js     0x140053a97
   140053a98:	sbb    ebx,DWORD PTR [rax+rax*4]
   140053a9b:	call   FWORD PTR [rdi+rbx*1]
   140053a9e:	mov    bh,bh
   140053aa0:	(bad)  
   140053aa1:	and    DWORD PTR [rdi+rdi*8-0x5ddcdf],edx
   140053aa8:	and    esp,DWORD PTR [rip+0x2725ffae]        # 0x1672b3a5c
   140053aae:	mov    ecx,0xc12e26ff
   140053ab3:	jmp    QWORD PTR [rdi]
   140053ab5:	(bad)  
   140053ab6:	enter  0x27ff,0x3f
   140053aba:	iret   
   140053abb:	jmp    QWORD PTR [rdi]
   140053abd:	rex.W (bad) 
   140053abf:	jmp    FWORD PTR [rax]
   140053ac1:	push   rcx
   140053ac2:	(bad)  
   140053ac4:	sub    BYTE PTR [rcx-0x1d],bl
   140053ac7:	jmp    FWORD PTR [rax]
   140053ac9:	(bad)  
   140053aca:	out    0xff,eax
   140053acc:	sub    DWORD PTR [rax+rbp*8-0x1],esp
   140053ad0:	sub    DWORD PTR [rax-0x18],ebp
   140053ad3:	jmp    FWORD PTR [rdx]
   140053ad5:	ins    DWORD PTR es:[rdi],dx
   140053ad6:	jmp    0x1297665da
   140053adb:	jmp    FWORD PTR [rbx]
   140053add:	jbe    0x140053ac9
   140053adf:	jmp    FWORD PTR [rbx]
   140053ae1:	jnp    0x140053ace
   140053ae3:	push   QWORD PTR [rax]
   140053ae5:	jp     0x140053ac3
   140053ae7:	jmp    FWORD PTR [rsi+0x52]
   140053aea:	sub    eax,0x15a9dff
   140053aef:	jmp    FWORD PTR [rbp-0x5300fe9d]
   140053af5:	movsxd eax,DWORD PTR [rcx]
   140053af7:	jmp    FWORD PTR [rbx-0x5400fe9e]
   140053afd:	(bad)  {k3}{z}
   140053b02:	add    edi,edi
   140053b04:	stos   BYTE PTR es:[rdi],al
   140053b05:	(bad)  {k1}{z}
   140053b0a:	add    edi,edi
   140053b0c:	cdq    
   140053b0d:	pop    rax
   140053b0e:	add    edi,edi
   140053b10:	push   0x42
   140053b12:	push   QWORD PTR es:[rax]
   140053b15:	sub    esp,DWORD PTR [rdi+rdi*8-0x4fdadd]
   140053b1c:	and    DWORD PTR [rbx],esp
   140053b1e:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140053b1f:	dec    DWORD PTR [rcx+0x35]
   140053b22:	imul   edi,edi,0xffffffa6
   140053b25:	pop    rdi
   140053b26:	add    bh,bh
   140053b28:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140053b29:	pop    rdi
   140053b2a:	add    bh,bh
   140053b2c:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140053b2d:	pop    rsi
   140053b2e:	add    bh,bh
   140053b30:	ins    DWORD PTR es:[rdi],dx
   140053b31:	sub    r15,r15
   140053b34:	icebp  
   140053b35:	loope  0x140053afc
   140053b37:	push   rcx
   140053b39:	loope  0x140053b00
   140053b3b:	push   rcx
   140053b3d:	loope  0x140053b04
   140053b3f:	push   rcx
   140053b41:	loope  0x140053b08
   140053b43:	push   rcx
   140053b45:	loope  0x140053b0c
   140053b47:	push   rcx
   140053b49:	loope  0x140053b10
   140053b4b:	push   rcx
   140053b4d:	loope  0x140053b14
   140053b4f:	push   rcx
   140053b51:	loope  0x140053b18
   140053b53:	push   rcx
   140053b55:	loope  0x140053b1c
   140053b57:	push   rcx
   140053b59:	loope  0x140053b20
   140053b5b:	push   rcx
   140053b5d:	loope  0x140053b24
   140053b5f:	push   rcx
   140053b61:	loope  0x140053b28
   140053b63:	push   rcx
   140053b65:	loope  0x140053b2c
   140053b67:	push   rcx
   140053b69:	loope  0x140053b30
   140053b6b:	push   rcx
   140053b6d:	loope  0x140053b34
   140053b6f:	push   rcx
   140053b71:	loope  0x140053b38
   140053b73:	push   rcx
   140053b75:	loope  0x140053b3c
   140053b77:	push   rcx
   140053b79:	loope  0x140053b40
   140053b7b:	push   rcx
   140053b7d:	loope  0x140053b44
   140053b7f:	push   rcx
   140053b81:	loope  0x140053b48
   140053b83:	push   rcx
   140053b85:	loope  0x140053b4c
   140053b87:	push   rcx
   140053b89:	loope  0x140053b50
   140053b8b:	push   rcx
   140053b8d:	loope  0x140053b54
   140053b8f:	push   rcx
   140053b91:	loope  0x140053b58
   140053b93:	push   rcx
   140053b95:	loope  0x140053b5c
   140053b97:	jmp    FWORD PTR [rbp+0x4d]
   140053b9a:	sub    edi,edi
   140053b9c:	xchg   esi,eax
   140053b9d:	push   rsi
   140053b9e:	add    edi,edi
   140053ba0:	xchg   ebp,eax
   140053ba1:	push   rbp
   140053ba2:	add    edi,edi
   140053ba4:	xchg   ebp,eax
   140053ba5:	push   rbp
   140053ba6:	add    al,0xff
   140053ba8:	xchg   esp,eax
   140053ba9:	push   rbp
   140053baa:	add    al,0xff
   140053bac:	xchg   esp,eax
   140053bad:	push   rsp
   140053bae:	add    al,0xff
   140053bb0:	xchg   ebx,eax
   140053bb1:	push   rsp
   140053bb2:	add    al,0xff
   140053bb4:	xchg   ebx,eax
   140053bb5:	push   rsp
   140053bb6:	add    al,0xff
   140053bb8:	xchg   edx,eax
   140053bb9:	push   rbx
   140053bba:	add    al,0xff
   140053bbc:	xchg   edx,eax
   140053bbd:	push   rbx
   140053bbe:	add    al,0xff
   140053bc0:	xchg   ecx,eax
   140053bc1:	push   rbx
   140053bc2:	add    al,0xff
   140053bc4:	xchg   ecx,eax
   140053bc5:	push   rdx
   140053bc6:	add    al,0xff
   140053bc8:	nop
   140053bc9:	push   rdx
   140053bca:	add    al,0xff
   140053bcc:	nop
   140053bcd:	push   rdx
   140053bce:	add    al,0xff
   140053bd0:	(bad)  
   140053bd1:	push   rdx
   140053bd2:	add    al,0xff
   140053bd4:	mov    ss,WORD PTR [rcx+0x4]
   140053bd7:	dec    DWORD PTR [rsi-0x7100fbaf]
   140053bdd:	push   rcx
   140053bde:	add    al,0xff
   140053be0:	lea    edx,[rax+0x4]
   140053be3:	dec    DWORD PTR [rax+rdx*2+0x508cff05]
   140053bea:	add    eax,0x54f8bff
   140053bef:	dec    DWORD PTR [rbx-0x7500fab1]
   140053bf5:	rex.WRXB add rax,0x54e8aff
   140053bfb:	dec    DWORD PTR [rcx-0x7600fab2]
   140053c01:	rex.WRX add rax,0x54d88ff
   140053c07:	dec    DWORD PTR [rax-0x7800fab3]
   140053c0d:	rex.WRB add rax,0x54c87ff
   140053c13:	inc    DWORD PTR [rsi-0x7a00fab4]
   140053c19:	rex.WR add rax,0x54c85ff
   140053c1f:	inc    DWORD PTR [rbx+rcx*2+0x4b84ff05]
   140053c26:	(bad)  
   140053c27:	inc    DWORD PTR [rbx-0x7c00f9b6]
   140053c2d:	rex.WX (bad) 
   140053c2f:	inc    DWORD PTR [rdx-0x7d00f9b6]
   140053c35:	rex.WX (bad) 
   140053c37:	inc    DWORD PTR [rcx-0x7e00f9b7]
   140053c3d:	rex.WB (bad) 
   140053c3f:	inc    DWORD PTR [rax-0x7f00f9b7]
   140053c45:	rex.W (bad) 
   140053c47:	inc    DWORD PTR [rax]
	...
   140053c6d:	add    BYTE PTR [rax],al
   140053c6f:	or     al,BYTE PTR [rax]
   140053c71:	add    BYTE PTR [rax],al
   140053c73:	(bad)  
   140053c74:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140053c75:	jp     0x140053cb7
   140053c77:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140053c78:	retf   0x5096
   140053c7b:	jmp    0xe643ad17
   140053c80:	cmp    DWORD PTR [rdi],esp
   140053c82:	adc    BYTE PTR [rbx+0x29],ah
   140053c85:	sbb    al,0x13
   140053c87:	movsxd ebx,DWORD PTR [rbp+0x37]
   140053c8a:	and    al,0xff
   140053c8c:	sbb    dl,BYTE PTR [rbx*2+0x661518ff]
   140053c93:	call   FWORD PTR [rcx]
   140053c95:	sbb    BYTE PTR [rsi-0x1],ch
   140053c98:	sbb    bl,BYTE PTR [rdx]
   140053c9a:	jbe    0x140053c9b
   140053c9c:	sbb    ebx,DWORD PTR [rsi+rdi*2]
   140053c9f:	call   FWORD PTR [rsi+rbx*1]
   140053ca2:	xchg   bh,bh
   140053ca4:	sbb    eax,0x20ff9020
   140053ca9:	and    bl,BYTE PTR [rbp-0x55dbdd01]
   140053caf:	jmp    QWORD PTR [rsi+riz*1]
   140053cb2:	mov    ch,0xff
   140053cb4:	sub    edi,DWORD PTR es:[rdi-0x39cbd801]
   140053cbb:	jmp    QWORD PTR [rdi]
   140053cbd:	cmp    eax,0x4727ffcd
   140053cc2:	(bad)  
   140053cc3:	jmp    FWORD PTR [rax]
   140053cc5:	push   rcx
   140053cc6:	fdiv   st(7),st
   140053cc8:	sub    BYTE PTR [rdx-0x1c],bl
   140053ccb:	jmp    FWORD PTR [rax]
   140053ccd:	(bad)  
   140053cce:	out    0xff,eax
   140053cd0:	sub    DWORD PTR [rsi-0x18],esp
   140053cd3:	jmp    FWORD PTR [rcx]
   140053cd5:	push   0xffffffffffffffe9
   140053cd7:	jmp    FWORD PTR [rdx]
   140053cd9:	outs   dx,DWORD PTR ds:[rsi]
   140053cda:	jmp    0x12a7967de
   140053cdf:	jmp    FWORD PTR [rbx]
   140053ce1:	jns    0x140053cce
   140053ce3:	jmp    FWORD PTR [rbx]
   140053ce5:	jge    0x140053cd2
   140053ce7:	push   QWORD PTR [rax]
   140053ce9:	jp     0x140053cc7
   140053ceb:	jmp    QWORD PTR [rcx+0x57]
   140053cee:	rex.WX dec QWORD PTR [rcx-0x5c00feb1]
   140053cf5:	pop    rbp
   140053cf6:	add    edi,edi
   140053cf8:	lods   al,BYTE PTR ds:[rsi]
   140053cf9:	movsxd eax,DWORD PTR [rcx]
   140053cfb:	jmp    FWORD PTR [rbx-0x5400fe9e]
   140053d01:	vdivsd xmm24{k4}{z},xmm16,QWORD PTR [r9]
   140053d07:	inc    DWORD PTR [rdi+0x5eff014d]
   140053d0d:	rex.X
   140053d0e:	jmp    FWORD PTR [r11]
   140053d11:	xor    dh,BYTE PTR [rdi-0x48d9da01]
   140053d17:	jmp    QWORD PTR [rdx]
   140053d19:	and    al,0xab
   140053d1b:	jmp    QWORD PTR [rax]
   140053d1d:	and    esp,DWORD PTR [rax+0x304d7cff]
   140053d23:	jmp    QWORD PTR [rsi-0x5900fea1]
   140053d29:	pop    rdi
   140053d2a:	add    bh,bh
   140053d2c:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140053d2d:	pop    rdi
   140053d2e:	add    bh,bh
   140053d30:	ins    DWORD PTR es:[rdi],dx
   140053d31:	rex.WRX sub rdi,r15
   140053d34:	icebp  
   140053d35:	loope  0x140053cfd
   140053d37:	push   rcx
   140053d39:	loope  0x140053d01
   140053d3b:	push   rcx
   140053d3d:	loope  0x140053d05
   140053d3f:	push   rcx
   140053d41:	loope  0x140053d09
   140053d43:	push   rcx
   140053d45:	loope  0x140053d0d
   140053d47:	push   rcx
   140053d49:	loope  0x140053d11
   140053d4b:	push   rcx
   140053d4d:	loope  0x140053d15
   140053d4f:	push   rcx
   140053d51:	loope  0x140053d19
   140053d53:	push   rcx
   140053d55:	loope  0x140053d1d
   140053d57:	push   rcx
   140053d59:	loope  0x140053d21
   140053d5b:	push   rcx
   140053d5d:	loope  0x140053d25
   140053d5f:	push   rcx
   140053d61:	loope  0x140053d29
   140053d63:	push   rcx
   140053d65:	loope  0x140053d2d
   140053d67:	push   rcx
   140053d69:	loope  0x140053d31
   140053d6b:	push   rcx
   140053d6d:	loope  0x140053d35
   140053d6f:	push   rcx
   140053d71:	loope  0x140053d39
   140053d73:	push   rcx
   140053d75:	loope  0x140053d3d
   140053d77:	push   rcx
   140053d79:	loope  0x140053d41
   140053d7b:	push   rcx
   140053d7d:	loope  0x140053d45
   140053d7f:	push   rcx
   140053d81:	loope  0x140053d49
   140053d83:	push   rcx
   140053d85:	loope  0x140053d4d
   140053d87:	push   rcx
   140053d89:	loope  0x140053d51
   140053d8b:	push   rcx
   140053d8d:	loope  0x140053d55
   140053d8f:	push   rcx
   140053d91:	loope  0x140053d59
   140053d93:	push   rcx
   140053d95:	loope  0x140053d5d
   140053d97:	jmp    FWORD PTR [rbp+0x4e]
   140053d9a:	sub    edi,edi
   140053d9c:	xchg   esi,eax
   140053d9d:	push   rsi
   140053d9e:	add    edi,edi
   140053da0:	xchg   esi,eax
   140053da1:	push   rsi
   140053da2:	add    edi,edi
   140053da4:	xchg   ebp,eax
   140053da5:	push   rbp
   140053da6:	add    edi,edi
   140053da8:	xchg   ebp,eax
   140053da9:	push   rbp
   140053daa:	add    al,0xff
   140053dac:	xchg   esp,eax
   140053dad:	push   rbp
   140053dae:	add    al,0xff
   140053db0:	xchg   esp,eax
   140053db1:	push   rsp
   140053db2:	add    al,0xff
   140053db4:	xchg   ebx,eax
   140053db5:	push   rsp
   140053db6:	add    al,0xff
   140053db8:	xchg   ebx,eax
   140053db9:	push   rsp
   140053dba:	add    al,0xff
   140053dbc:	xchg   edx,eax
   140053dbd:	push   rbx
   140053dbe:	add    al,0xff
   140053dc0:	xchg   edx,eax
   140053dc1:	push   rbx
   140053dc2:	add    al,0xff
   140053dc4:	xchg   ecx,eax
   140053dc5:	push   rbx
   140053dc6:	add    al,0xff
   140053dc8:	xchg   ecx,eax
   140053dc9:	push   rdx
   140053dca:	add    al,0xff
   140053dcc:	nop
   140053dcd:	push   rdx
   140053dce:	add    al,0xff
   140053dd0:	nop
   140053dd1:	push   rdx
   140053dd2:	add    al,0xff
   140053dd4:	(bad)  
   140053dd5:	push   rdx
   140053dd6:	add    al,0xff
   140053dd8:	mov    ss,WORD PTR [rcx+0x4]
   140053ddb:	dec    DWORD PTR [rsi-0x7100fbaf]
   140053de1:	push   rcx
   140053de2:	add    al,0xff
   140053de4:	lea    edx,[rax+0x4]
   140053de7:	dec    DWORD PTR [rax+rdx*2+0x508cff05]
   140053dee:	add    eax,0x54f8bff
   140053df3:	dec    DWORD PTR [rbx-0x7500fab1]
   140053df9:	rex.WRXB add rax,0x54e8aff
   140053dff:	dec    DWORD PTR [rcx-0x7600fab2]
   140053e05:	rex.WRX add rax,0x54d88ff
   140053e0b:	dec    DWORD PTR [rax-0x7800fab3]
   140053e11:	rex.WRB add rax,0x54c87ff
   140053e17:	inc    DWORD PTR [rsi-0x7a00fab4]
   140053e1d:	rex.WR add rax,0x54c85ff
   140053e23:	inc    DWORD PTR [rbx+rcx*2+0x4b84ff05]
   140053e2a:	(bad)  
   140053e2b:	inc    DWORD PTR [rbx-0x7c00f9b6]
   140053e31:	rex.WX (bad) 
   140053e33:	inc    DWORD PTR [rdx-0x7d00f9b6]
   140053e39:	rex.WX (bad) 
   140053e3b:	inc    DWORD PTR [rcx-0x7e00f9b7]
   140053e41:	rex.WB (bad) 
   140053e43:	inc    DWORD PTR [rax+0xff0649]
	...
   140053e69:	add    BYTE PTR [rax],al
   140053e6b:	sbb    eax,0x5e1c3649
   140053e70:	leave  
   140053e71:	xchg   esi,eax
   140053e72:	rex.WRX (bad) 
   140053e75:	lahf   
   140053e76:	push   rbx
   140053e77:	call   rdx
   140053e79:	pushf  
   140053e7a:	push   rsp
   140053e7b:	dec    esi
   140053e7d:	(bad)  
   140053e7e:	push   rsp
   140053e7f:	push   QWORD PTR [rdx+rax*4+0x7db5ff48]
   140053e86:	xor    al,0xff
   140053e88:	test   DWORD PTR [rdx+0x39],ebx
   140053e8b:	inc    DWORD PTR [rax+0x29]
   140053e8e:	rex.RXB call FWORD PTR [r10*1+0x1518ff5a]
   140053e96:	call   FWORD PTR fs:[rcx]
   140053e99:	(bad)  
   140053e9a:	ins    DWORD PTR es:[rdi],dx
   140053e9b:	call   FWORD PTR [rdx]
   140053e9d:	sbb    DWORD PTR [rbp-0x1],esi
   140053ea0:	sbb    ebx,DWORD PTR [rbx]
   140053ea2:	jge    0x140053ea3
   140053ea4:	sbb    ebx,DWORD PTR [rsi]
   140053ea6:	test   edi,edi
   140053ea8:	sbb    eax,0x1fff8e20
   140053ead:	and    bl,BYTE PTR [rbx-0x57dbdd01]
   140053eb3:	jmp    QWORD PTR [rsi+riz*1]
   140053eb6:	mov    ah,0xff
   140053eb8:	sub    bh,BYTE PTR es:[rsi-0x39cbd801]
   140053ebf:	jmp    QWORD PTR [rdi]
   140053ec1:	ds (bad) 
   140053ec3:	jmp    QWORD PTR [rdi]
   140053ec5:	rex.WB (bad) 
   140053ec7:	jmp    FWORD PTR [rax]
   140053ec9:	push   rbx
   140053eca:	(bad)  
   140053ecc:	sub    BYTE PTR [rsi-0x1a],bl
   140053ecf:	jmp    FWORD PTR [rcx]
   140053ed1:	movsxd ebp,eax
   140053ed3:	jmp    FWORD PTR [rcx]
   140053ed5:	push   0x6d2affe8
   140053eda:	jmp    0x12a7869de
   140053edf:	jmp    FWORD PTR [rbx]
   140053ee1:	js     0x140053ecd
   140053ee3:	jmp    FWORD PTR [rbx]
   140053ee5:	jge    0x140053ed2
   140053ee7:	jmp    FWORD PTR [rbx]
   140053ee9:	jge    0x140053ed6
   140053eeb:	jmp    FWORD PTR [rbx]
   140053eed:	jge    0x140053eda
   140053eef:	inc    DWORD PTR [rbx+0x6c]
   140053ef2:	movabs ds:0x1497fff2d506aff,al
   140053efb:	inc    DWORD PTR [rbp+0x7eff014d]
   140053f01:	add    rdi,rdi
   140053f04:	ins    DWORD PTR es:[rdi],dx
   140053f05:	rex.RXB sbb eax,0x954940ff
   140053f0b:	jmp    QWORD PTR [rdi]
   140053f0d:	cmp    al,0xcd
   140053f0f:	jmp    QWORD PTR [rsi]
   140053f11:	sub    edi,DWORD PTR [rdi-0x4ddadb01]
   140053f17:	jmp    QWORD PTR [rdx]
   140053f19:	and    al,0xa6
   140053f1b:	push   QWORD PTR [rax]
   140053f1d:	sub    cl,BYTE PTR [rax+0x160a7ff]
   140053f23:	jmp    QWORD PTR [rdi-0x5900fea0]
   140053f29:	pop    rdi
   140053f2a:	add    edi,edi
   140053f2c:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140053f2d:	pop    rdi
   140053f2e:	add    bh,bh
   140053f30:	outs   dx,BYTE PTR ds:[rsi]
   140053f31:	rex.WRX sub r15b,dil
   140053f34:	repnz loop 0x140053efe
   140053f37:	push   rdx
   140053f39:	loop   0x140053f02
   140053f3b:	push   rdx
   140053f3d:	loop   0x140053f06
   140053f3f:	push   rdx
   140053f41:	loop   0x140053f0a
   140053f43:	push   rdx
   140053f45:	loop   0x140053f0e
   140053f47:	push   rdx
   140053f49:	loop   0x140053f12
   140053f4b:	push   rdx
   140053f4d:	loop   0x140053f16
   140053f4f:	push   rdx
   140053f51:	loop   0x140053f1a
   140053f53:	push   rdx
   140053f55:	loop   0x140053f1e
   140053f57:	push   rdx
   140053f59:	loop   0x140053f22
   140053f5b:	push   rdx
   140053f5d:	loop   0x140053f26
   140053f5f:	push   rdx
   140053f61:	loop   0x140053f2a
   140053f63:	push   rdx
   140053f65:	loop   0x140053f2e
   140053f67:	push   rdx
   140053f69:	loop   0x140053f32
   140053f6b:	push   rdx
   140053f6d:	loop   0x140053f36
   140053f6f:	push   rdx
   140053f71:	loop   0x140053f3a
   140053f73:	push   rdx
   140053f75:	loop   0x140053f3e
   140053f77:	push   rdx
   140053f79:	loop   0x140053f42
   140053f7b:	push   rdx
   140053f7d:	loop   0x140053f46
   140053f7f:	push   rdx
   140053f81:	loop   0x140053f4a
   140053f83:	push   rdx
   140053f85:	loop   0x140053f4e
   140053f87:	push   rdx
   140053f89:	loop   0x140053f52
   140053f8b:	push   rdx
   140053f8d:	loop   0x140053f56
   140053f8f:	push   rdx
   140053f91:	loop   0x140053f5a
   140053f93:	push   rdx
   140053f95:	loop   0x140053f5e
   140053f97:	jmp    FWORD PTR [rsi+0x4e]
   140053f9a:	sub    bh,bh
   140053f9c:	xchg   edi,eax
   140053f9d:	push   rsi
   140053f9e:	add    edi,edi
   140053fa0:	xchg   esi,eax
   140053fa1:	push   rsi
   140053fa2:	add    edi,edi
   140053fa4:	xchg   esi,eax
   140053fa5:	push   rsi
   140053fa6:	add    edi,edi
   140053fa8:	xchg   ebp,eax
   140053fa9:	push   rbp
   140053faa:	add    edi,edi
   140053fac:	xchg   ebp,eax
   140053fad:	push   rbp
   140053fae:	add    al,0xff
   140053fb0:	xchg   esp,eax
   140053fb1:	push   rbp
   140053fb2:	add    al,0xff
   140053fb4:	xchg   esp,eax
   140053fb5:	push   rsp
   140053fb6:	add    al,0xff
   140053fb8:	xchg   ebx,eax
   140053fb9:	push   rsp
   140053fba:	add    al,0xff
   140053fbc:	xchg   ebx,eax
   140053fbd:	push   rsp
   140053fbe:	add    al,0xff
   140053fc0:	xchg   edx,eax
   140053fc1:	push   rbx
   140053fc2:	add    al,0xff
   140053fc4:	xchg   edx,eax
   140053fc5:	push   rbx
   140053fc6:	add    al,0xff
   140053fc8:	xchg   ecx,eax
   140053fc9:	push   rbx
   140053fca:	add    al,0xff
   140053fcc:	xchg   ecx,eax
   140053fcd:	push   rdx
   140053fce:	add    al,0xff
   140053fd0:	nop
   140053fd1:	push   rdx
   140053fd2:	add    al,0xff
   140053fd4:	nop
   140053fd5:	push   rdx
   140053fd6:	add    al,0xff
   140053fd8:	(bad)  
   140053fd9:	push   rdx
   140053fda:	add    al,0xff
   140053fdc:	mov    ss,WORD PTR [rcx+0x4]
   140053fdf:	dec    DWORD PTR [rsi-0x7100fbaf]
   140053fe5:	push   rcx
   140053fe6:	add    al,0xff
   140053fe8:	lea    edx,[rax+0x4]
   140053feb:	dec    DWORD PTR [rax+rdx*2+0x508cff05]
   140053ff2:	add    eax,0x54f8bff
   140053ff7:	dec    DWORD PTR [rbx-0x7500fab1]
   140053ffd:	rex.WRXB add rax,0x54e8aff
   140054003:	dec    DWORD PTR [rcx-0x7600fab2]
   140054009:	rex.WRX add rax,0x54d88ff
   14005400f:	dec    DWORD PTR [rax-0x7800fab3]
   140054015:	rex.WRB add rax,0x54c87ff
   14005401b:	inc    DWORD PTR [rsi-0x7a00fab4]
   140054021:	rex.WR add rax,0x54c85ff
   140054027:	inc    DWORD PTR [rbx+rcx*2+0x4b84ff05]
   14005402e:	(bad)  
   14005402f:	inc    DWORD PTR [rbx-0x7c00f9b6]
   140054035:	rex.WX (bad) 
   140054037:	inc    DWORD PTR [rdx-0x7d00f9b6]
   14005403d:	rex.WX (bad) 
   14005403f:	inc    DWORD PTR [rcx-0x7e00f9b7]
   140054045:	rex.WB (bad) 
   140054047:	inc    DWORD PTR [rax]
	...
   140054061:	add    BYTE PTR [rax],al
   140054063:	add    eax,0x35000000
   140054068:	(bad)
   14005406c:	rcr    DWORD PTR [rbp-0x5f280baf],cl
   140054072:	push   rbx
   140054073:	call   rbp
   140054075:	lahf   
   140054076:	push   rbx
   140054077:	call   rcx
   140054079:	pushf  
   14005407a:	push   rsp
   14005407b:	dec    esi
   14005407d:	cdq    
   14005407e:	push   rbp
   14005407f:	dec    edx
   140054081:	xchg   edi,eax
   140054082:	push   rbp
   140054083:	(bad)  
   140054084:	mov    edx,0xb7ff5089
   140054089:	cmp    BYTE PTR [rcx],0xff
   14005408c:	xchg   ebx,eax
   14005408d:	fs (bad) 
   14005408f:	inc    DWORD PTR [rbx+rbp*1+0x46]
   140054093:	call   FWORD PTR [rdx*1+0x1518ff5a]
   14005409a:	call   FWORD PTR fs:[rcx]
   14005409d:	(bad)  
   14005409e:	ins    BYTE PTR es:[rdi],dx
   14005409f:	call   FWORD PTR [rdx]
   1400540a1:	sbb    DWORD PTR [rdi+rdi*8+0x1b],esi
   1400540a5:	sbb    edi,DWORD PTR [rdi+rdi*8+0x1b]
   1400540a9:	(bad)  
   1400540aa:	test   edi,edi
   1400540ac:	sbb    eax,0x1fff8e20
   1400540b1:	and    bl,BYTE PTR [rbx-0x57dbdd01]
   1400540b7:	jmp    QWORD PTR [rsi+riz*1]
   1400540ba:	mov    ch,0xff
   1400540bc:	sub    edi,DWORD PTR es:[rdi-0x37c9d801]
   1400540c3:	jmp    QWORD PTR [rdi]
   1400540c5:	sar    r15b,1
   1400540c8:	(bad)  
   1400540c9:	rex.WRB (bad) 
   1400540cc:	sub    BYTE PTR [rcx-0x1d],bl
   1400540cf:	jmp    FWORD PTR [rax]
   1400540d1:	(bad)  
   1400540d2:	out    0xff,eax
   1400540d4:	sub    DWORD PTR [rsi-0x18],esp
   1400540d7:	jmp    FWORD PTR [rcx]
   1400540d9:	ins    BYTE PTR es:[rdi],dx
   1400540da:	jmp    0x129766bde
   1400540df:	jmp    FWORD PTR [rbx]
   1400540e1:	ja     0x1400540cd
   1400540e3:	jmp    FWORD PTR [rbx]
   1400540e5:	jl     0x1400540d2
   1400540e7:	jmp    FWORD PTR [rbx]
   1400540e9:	jge    0x1400540d6
   1400540eb:	jmp    FWORD PTR [rbx]
   1400540ed:	jge    0x1400540da
   1400540ef:	jmp    FWORD PTR [rbx]
   1400540f1:	jge    0x1400540de
   1400540f3:	jmp    FWORD PTR [rbx]
   1400540f5:	jge    0x1400540e2
   1400540f7:	push   QWORD PTR [rip+0x3dffcd71]        # 0x17e050e6e
   1400540fd:	movsxd ebp,DWORD PTR [rdi-0x349fcc01]
   140054103:	jmp    FWORD PTR [rax]
   140054105:	pop    rcx
   140054106:	jrcxz  0x140054107
   140054108:	(bad)  
   140054109:	rex.RXB (bad) 
   14005410b:	jmp    QWORD PTR [rdi]
   14005410d:	ss (bad) 
   14005410f:	jmp    QWORD PTR [rip+0x23ffba27]        # 0x16404fb3c
   140054115:	and    eax,0x2321ffad
   14005411a:	movabs ds:0x160a8ff4d4163ff,al
   140054123:	jmp    QWORD PTR [rdi-0x5800fea0]
   140054129:	(bad)  
   14005412a:	add    edi,edi
   14005412c:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14005412d:	pop    rdi
   14005412e:	add    edi,edi
   140054130:	outs   dx,BYTE PTR ds:[rsi]
   140054131:	rex.WRXB sub r15b,r15b
   140054134:	repnz jrcxz 0x1400540ff
   140054137:	push   rdx
   140054139:	jrcxz  0x140054103
   14005413b:	push   rdx
   14005413d:	jrcxz  0x140054107
   14005413f:	push   rdx
   140054141:	jrcxz  0x14005410b
   140054143:	push   rdx
   140054145:	jrcxz  0x14005410f
   140054147:	push   rdx
   140054149:	jrcxz  0x140054113
   14005414b:	push   rdx
   14005414d:	jrcxz  0x140054117
   14005414f:	push   rdx
   140054151:	jrcxz  0x14005411b
   140054153:	push   rdx
   140054155:	jrcxz  0x14005411f
   140054157:	push   rdx
   140054159:	jrcxz  0x140054123
   14005415b:	push   rdx
   14005415d:	jrcxz  0x140054127
   14005415f:	push   rdx
   140054161:	jrcxz  0x14005412b
   140054163:	push   rdx
   140054165:	jrcxz  0x14005412f
   140054167:	push   rdx
   140054169:	jrcxz  0x140054133
   14005416b:	push   rdx
   14005416d:	jrcxz  0x140054137
   14005416f:	push   rdx
   140054171:	jrcxz  0x14005413b
   140054173:	push   rdx
   140054175:	jrcxz  0x14005413f
   140054177:	push   rdx
   140054179:	jrcxz  0x140054143
   14005417b:	push   rdx
   14005417d:	jrcxz  0x140054147
   14005417f:	push   rdx
   140054181:	jrcxz  0x14005414b
   140054183:	push   rdx
   140054185:	jrcxz  0x14005414f
   140054187:	push   rdx
   140054189:	jrcxz  0x140054153
   14005418b:	push   rdx
   14005418d:	jrcxz  0x140054157
   14005418f:	push   rdx
   140054191:	jrcxz  0x14005415b
   140054193:	push   rdx
   140054195:	jrcxz  0x14005415f
   140054197:	jmp    FWORD PTR [rsi+0x4f]
   14005419a:	sub    bh,bh
   14005419c:	cwde   
   14005419d:	push   rdi
   14005419e:	add    edi,edi
   1400541a0:	xchg   edi,eax
   1400541a1:	push   rsi
   1400541a2:	add    edi,edi
   1400541a4:	xchg   esi,eax
   1400541a5:	push   rsi
   1400541a6:	add    edi,edi
   1400541a8:	xchg   esi,eax
   1400541a9:	push   rsi
   1400541aa:	add    edi,edi
   1400541ac:	xchg   ebp,eax
   1400541ad:	push   rbp
   1400541ae:	add    edi,edi
   1400541b0:	xchg   ebp,eax
   1400541b1:	push   rbp
   1400541b2:	add    al,0xff
   1400541b4:	xchg   esp,eax
   1400541b5:	push   rbp
   1400541b6:	add    al,0xff
   1400541b8:	xchg   esp,eax
   1400541b9:	push   rsp
   1400541ba:	add    al,0xff
   1400541bc:	xchg   ebx,eax
   1400541bd:	push   rsp
   1400541be:	add    al,0xff
   1400541c0:	xchg   ebx,eax
   1400541c1:	push   rsp
   1400541c2:	add    al,0xff
   1400541c4:	xchg   edx,eax
   1400541c5:	push   rbx
   1400541c6:	add    al,0xff
   1400541c8:	xchg   edx,eax
   1400541c9:	push   rbx
   1400541ca:	add    al,0xff
   1400541cc:	xchg   ecx,eax
   1400541cd:	push   rbx
   1400541ce:	add    al,0xff
   1400541d0:	xchg   ecx,eax
   1400541d1:	push   rdx
   1400541d2:	add    al,0xff
   1400541d4:	nop
   1400541d5:	push   rdx
   1400541d6:	add    al,0xff
   1400541d8:	nop
   1400541d9:	push   rdx
   1400541da:	add    al,0xff
   1400541dc:	(bad)  
   1400541dd:	push   rdx
   1400541de:	add    al,0xff
   1400541e0:	mov    ss,WORD PTR [rcx+0x4]
   1400541e3:	dec    DWORD PTR [rsi-0x7100fbaf]
   1400541e9:	push   rcx
   1400541ea:	add    al,0xff
   1400541ec:	lea    edx,[rax+0x4]
   1400541ef:	dec    DWORD PTR [rax+rdx*2+0x508cff05]
   1400541f6:	add    eax,0x54f8bff
   1400541fb:	dec    DWORD PTR [rbx-0x7500fab1]
   140054201:	rex.WRXB add rax,0x54e8aff
   140054207:	dec    DWORD PTR [rcx-0x7600fab2]
   14005420d:	rex.WRX add rax,0x54d88ff
   140054213:	dec    DWORD PTR [rax-0x7800fab3]
   140054219:	rex.WRB add rax,0x54c87ff
   14005421f:	inc    DWORD PTR [rsi-0x7a00fab4]
   140054225:	rex.WR add rax,0x54c85ff
   14005422b:	inc    DWORD PTR [rbx+rcx*2+0x4b84ff05]
   140054232:	(bad)  
   140054233:	inc    DWORD PTR [rbx-0x7c00f9b6]
   140054239:	rex.WX (bad) 
   14005423b:	inc    DWORD PTR [rdx-0x7d00f9b6]
   140054241:	rex.WX (bad) 
   140054243:	inc    DWORD PTR [rcx+0xff0649]
	...
   14005425d:	add    BYTE PTR [rax],al
   14005425f:	adc    ebp,DWORD PTR [rax+riz*1]
   140054262:	adc    DWORD PTR [rdi-0x43],ecx
   140054265:	lea    ecx,[rcx-0x39]
   140054268:	xlat   BYTE PTR ds:[rbx]
   140054269:	movabs al,ds:0xa0d7ff53a0d7ff53
   140054272:	push   rbx
   140054273:	call   rsp
   140054275:	sahf   
   140054276:	push   rbx
   140054277:	call   rcx
   140054279:	fwait
   14005427a:	push   rsp
   14005427b:	dec    ebp
   14005427d:	cdq    
   14005427e:	push   rbp
   14005427f:	dec    ecx
   140054281:	xchg   esi,eax
   140054282:	push   rbp
   140054283:	inc    esi
   140054285:	xchg   esp,eax
   140054286:	push   rsi
   140054287:	(bad)  
   140054288:	mov    ebp,0xa9ff558d
   14005428d:	jne    0x1400542ca
   14005428f:	call   QWORD PTR [rdi+0x41ff3667]
   140054295:	sub    DWORD PTR [rdi-0x1],eax
   140054298:	sbb    edx,DWORD PTR [rip+0x1518ff5a]        # 0x1551e41f8
   14005429e:	call   FWORD PTR fs:[rcx]
   1400542a1:	(bad)  
   1400542a2:	ins    DWORD PTR es:[rdi],dx
   1400542a3:	call   FWORD PTR [rdx]
   1400542a5:	sbb    DWORD PTR [rbp-0x1],esi
   1400542a8:	sbb    ebx,DWORD PTR [rdi*2-0x7ae1e301]
   1400542af:	call   FWORD PTR [rip+0x20ff9020]        # 0x16104d2d5
   1400542b5:	and    bl,BYTE PTR [rbp-0x54dbdd01]
   1400542bb:	jmp    QWORD PTR [rip+0x26ffb826]        # 0x16704fae7
   1400542c1:	(bad)  
   1400542c2:	ret    0x27ff
   1400542c5:	cmp    ecx,ebx
   1400542c7:	jmp    QWORD PTR [rdi]
   1400542c9:	rex.RXB (bad) 
   1400542cb:	jmp    FWORD PTR [rax]
   1400542cd:	push   rsp
   1400542ce:	(bad)  
   1400542d0:	sub    BYTE PTR [rdi-0x19],bl
   1400542d3:	jmp    FWORD PTR [rcx]
   1400542d5:	gs call 0x1296f6cda
   1400542db:	jmp    FWORD PTR [rdx]
   1400542dd:	jo     0x1400542c8
   1400542df:	jmp    FWORD PTR [rbx]
   1400542e1:	jbe    0x1400542cd
   1400542e3:	jmp    FWORD PTR [rbx]
   1400542e5:	jl     0x1400542d2
   1400542e7:	jmp    FWORD PTR [rbx]
   1400542e9:	jge    0x1400542d6
   1400542eb:	jmp    FWORD PTR [rbx]
   1400542ed:	jge    0x1400542da
   1400542ef:	jmp    FWORD PTR [rbx]
   1400542f1:	jge    0x1400542de
   1400542f3:	jmp    FWORD PTR [rbx]
   1400542f5:	jl     0x1400542e2
   1400542f7:	jmp    FWORD PTR [rdx]
   1400542f9:	je     0x1400542e5
   1400542fb:	jmp    FWORD PTR [rcx]
   1400542fd:	imul   ebp,ecx,0xffffffff
   140054300:	sub    BYTE PTR [rcx-0x19],ah
   140054303:	jmp    FWORD PTR [rax]
   140054305:	push   rbx
   140054306:	fdivp  st(7),st
   140054308:	(bad)  
   140054309:	sar    r15b,1
   14005430c:	es (bad) 
   14005430e:	ret    0x25ff
   140054311:	es mov ch,0xff
   140054314:	and    ah,BYTE PTR [rcx+rbp*4]
   140054317:	jmp    QWORD PTR [rax]
   140054319:	and    bl,BYTE PTR [rbp+0x145997ff]
   14005431f:	jmp    FWORD PTR [rax-0x5700fe9f]
   140054325:	(bad)  
   140054326:	add    edi,edi
   140054328:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140054329:	(bad)  
   14005432a:	add    edi,edi
   14005432c:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14005432d:	(bad)  
   14005432e:	add    edi,edi
   140054330:	outs   dx,DWORD PTR ds:[rsi]
   140054331:	rex.WRXB sub r15,r15
   140054334:	repz in al,0xc9
   140054337:	push   rbx
   140054339:	in     al,0xc9
   14005433b:	push   rbx
   14005433d:	in     al,0xc9
   14005433f:	push   rbx
   140054341:	in     al,0xc9
   140054343:	push   rbx
   140054345:	in     al,0xc9
   140054347:	push   rbx
   140054349:	in     al,0xc9
   14005434b:	push   rbx
   14005434d:	in     al,0xc9
   14005434f:	push   rbx
   140054351:	in     al,0xc9
   140054353:	push   rbx
   140054355:	in     al,0xc9
   140054357:	push   rbx
   140054359:	in     al,0xc9
   14005435b:	push   rbx
   14005435d:	in     al,0xc9
   14005435f:	push   rbx
   140054361:	in     al,0xc9
   140054363:	push   rbx
   140054365:	in     al,0xc9
   140054367:	push   rbx
   140054369:	in     al,0xc9
   14005436b:	push   rbx
   14005436d:	in     al,0xc9
   14005436f:	push   rbx
   140054371:	in     al,0xc9
   140054373:	push   rbx
   140054375:	in     al,0xc9
   140054377:	push   rbx
   140054379:	in     al,0xc9
   14005437b:	push   rbx
   14005437d:	in     al,0xc9
   14005437f:	push   rbx
   140054381:	in     al,0xc9
   140054383:	push   rbx
   140054385:	in     al,0xc9
   140054387:	push   rbx
   140054389:	in     al,0xc9
   14005438b:	push   rbx
   14005438d:	in     al,0xc9
   14005438f:	push   rbx
   140054391:	in     al,0xc9
   140054393:	push   rbx
   140054395:	in     al,0xc9
   140054397:	jmp    FWORD PTR [rdi+0x4f]
   14005439a:	sub    edi,edi
   14005439c:	cwde   
   14005439d:	push   rdi
   14005439e:	add    edi,edi
   1400543a0:	cwde   
   1400543a1:	push   rdi
   1400543a2:	add    edi,edi
   1400543a4:	xchg   edi,eax
   1400543a5:	push   rsi
   1400543a6:	add    edi,edi
   1400543a8:	xchg   esi,eax
   1400543a9:	push   rsi
   1400543aa:	add    edi,edi
   1400543ac:	xchg   esi,eax
   1400543ad:	push   rsi
   1400543ae:	add    edi,edi
   1400543b0:	xchg   ebp,eax
   1400543b1:	push   rbp
   1400543b2:	add    edi,edi
   1400543b4:	xchg   ebp,eax
   1400543b5:	push   rbp
   1400543b6:	add    al,0xff
   1400543b8:	xchg   esp,eax
   1400543b9:	push   rbp
   1400543ba:	add    al,0xff
   1400543bc:	xchg   esp,eax
   1400543bd:	push   rsp
   1400543be:	add    al,0xff
   1400543c0:	xchg   ebx,eax
   1400543c1:	push   rsp
   1400543c2:	add    al,0xff
   1400543c4:	xchg   ebx,eax
   1400543c5:	push   rsp
   1400543c6:	add    al,0xff
   1400543c8:	xchg   edx,eax
   1400543c9:	push   rbx
   1400543ca:	add    al,0xff
   1400543cc:	xchg   edx,eax
   1400543cd:	push   rbx
   1400543ce:	add    al,0xff
   1400543d0:	xchg   ecx,eax
   1400543d1:	push   rbx
   1400543d2:	add    al,0xff
   1400543d4:	xchg   ecx,eax
   1400543d5:	push   rdx
   1400543d6:	add    al,0xff
   1400543d8:	nop
   1400543d9:	push   rdx
   1400543da:	add    al,0xff
   1400543dc:	nop
   1400543dd:	push   rdx
   1400543de:	add    al,0xff
   1400543e0:	(bad)  
   1400543e1:	push   rdx
   1400543e2:	add    al,0xff
   1400543e4:	mov    ss,WORD PTR [rcx+0x4]
   1400543e7:	dec    DWORD PTR [rsi-0x7100fbaf]
   1400543ed:	push   rcx
   1400543ee:	add    al,0xff
   1400543f0:	lea    edx,[rax+0x4]
   1400543f3:	dec    DWORD PTR [rax+rdx*2+0x508cff05]
   1400543fa:	add    eax,0x54f8bff
   1400543ff:	dec    DWORD PTR [rbx-0x7500fab1]
   140054405:	rex.WRXB add rax,0x54e8aff
   14005440b:	dec    DWORD PTR [rcx-0x7600fab2]
   140054411:	rex.WRX add rax,0x54d88ff
   140054417:	dec    DWORD PTR [rax-0x7800fab3]
   14005441d:	rex.WRB add rax,0x54c87ff
   140054423:	inc    DWORD PTR [rsi-0x7a00fab4]
   140054429:	rex.WR add rax,0x54c85ff
   14005442f:	inc    DWORD PTR [rbx+rcx*2+0x4b84ff05]
   140054436:	(bad)  
   140054437:	inc    DWORD PTR [rbx-0x7c00f9b6]
   14005443d:	rex.WX (bad) 
   14005443f:	inc    DWORD PTR [rdx-0x7d00f9b6]
   140054445:	rex.WX (bad) 
   140054447:	inc    DWORD PTR [rax]
	...
   140054459:	add    BYTE PTR [rax],al
   14005445b:	(bad)  
   14005445c:	jno    0x1400544b2
   14005445e:	sub    al,0x7a
   140054460:	(bad)  
   140054461:	cdq    
   140054462:	push   rax
   140054463:	jmp    0x13f58e53f
   140054468:	xlat   BYTE PTR ds:[rbx]
   140054469:	movabs al,ds:0xa0d7ff53a0d7ff53
   140054472:	push   rbx
   140054473:	call   rsp
   140054475:	sahf   
   140054476:	push   rsp
   140054477:	call   rax
   140054479:	fwait
   14005447a:	push   rsp
   14005447b:	dec    esp
   14005447d:	cwde   
   14005447e:	push   rbp
   14005447f:	dec    ecx
   140054481:	xchg   esi,eax
   140054482:	push   rbp
   140054483:	inc    ebp
   140054485:	xchg   ebx,eax
   140054486:	push   rsi
   140054487:	inc    ecx
   140054489:	xchg   ecx,eax
   14005448a:	push   rsi
   14005448b:	push   QWORD PTR [rdi-0x4a00a977]
   140054491:	add    DWORD PTR [rax-0x1],0xff376494
   140054498:	cmp    ah,BYTE PTR [rip+0x141aff49]        # 0x1542043e7
   14005449e:	pop    rsp
   14005449f:	call   FWORD PTR [rax]
   1400544a1:	adc    eax,0x1719ff66
   1400544a6:	outs   dx,BYTE PTR ds:[rsi]
   1400544a7:	call   FWORD PTR [rdx]
   1400544a9:	sbb    dh,BYTE PTR [rdi-0x1]
   1400544ac:	sbb    ebx,DWORD PTR [rdi+rdi*2]
   1400544af:	call   FWORD PTR [rsi+rbx*1]
   1400544b2:	xchg   edi,edi
   1400544b4:	(bad)  
   1400544b5:	and    DWORD PTR [rbx-0x5edcde01],edx
   1400544bb:	jmp    QWORD PTR [rbx]
   1400544bd:	and    eax,0x2926ffaf
   1400544c2:	mov    esp,0xc63427ff
   1400544c7:	jmp    QWORD PTR [rdi]
   1400544c9:	sar    r15b,1
   1400544cc:	(bad)  
   1400544cd:	rex.WRX (bad) 
   1400544d0:	sub    BYTE PTR [rbp+riz*8-0x1],bl
   1400544d4:	sub    DWORD PTR [rbx-0x18],esp
   1400544d7:	jmp    FWORD PTR [rcx]
   1400544d9:	imul   ebp,eax,0xe96f2aff
   1400544df:	jmp    FWORD PTR [rbx]
   1400544e1:	jbe    0x1400544cd
   1400544e3:	jmp    FWORD PTR [rbx]
   1400544e5:	jl     0x1400544d2
   1400544e7:	jmp    FWORD PTR [rbx]
   1400544e9:	jge    0x1400544d6
   1400544eb:	jmp    FWORD PTR [rbx]
   1400544ed:	jge    0x1400544da
   1400544ef:	jmp    FWORD PTR [rbx]
   1400544f1:	jge    0x1400544de
   1400544f3:	jmp    FWORD PTR [rbx]
   1400544f5:	jnp    0x1400544e2
   1400544f7:	jmp    FWORD PTR [rdx]
   1400544f9:	jb     0x1400544e5
   1400544fb:	jmp    FWORD PTR [rcx]
   1400544fd:	push   0x5d28ffe8
   140054502:	out    0xff,al
   140054504:	(bad)  
   140054505:	rex.WRB fcos 
   140054508:	(bad)  
   140054509:	cmp    ecx,ebx
   14005450b:	jmp    QWORD PTR [rsi]
   14005450d:	sub    bh,BYTE PTR [rsi-0x4edadb01]
   140054513:	jmp    QWORD PTR [rcx]
   140054515:	and    esp,DWORD PTR [rbp+0x6a364aff]
   14005451b:	jmp    FWORD PTR [rcx-0x5600fe9f]
   140054521:	(bad)  
   140054522:	add    edi,edi
   140054524:	test   al,0x61
   140054526:	add    edi,edi
   140054528:	test   al,0x60
   14005452a:	add    edi,edi
   14005452c:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14005452d:	(bad)  
   14005452e:	add    edi,edi
   140054530:	outs   dx,DWORD PTR ds:[rsi]
   140054531:	push   rax
   140054532:	sub    edi,edi
   140054534:	repz in al,0xca
   140054537:	push   rbx
   140054539:	in     al,0xca
   14005453b:	push   rbx
   14005453d:	in     al,0xca
   14005453f:	push   rbx
   140054541:	in     al,0xca
   140054543:	push   rbx
   140054545:	in     al,0xca
   140054547:	push   rbx
   140054549:	in     al,0xca
   14005454b:	push   rbx
   14005454d:	in     al,0xca
   14005454f:	push   rbx
   140054551:	in     al,0xca
   140054553:	push   rbx
   140054555:	in     al,0xca
   140054557:	push   rbx
   140054559:	in     al,0xca
   14005455b:	push   rbx
   14005455d:	in     al,0xca
   14005455f:	push   rbx
   140054561:	in     al,0xca
   140054563:	push   rbx
   140054565:	in     al,0xca
   140054567:	push   rbx
   140054569:	in     al,0xca
   14005456b:	push   rbx
   14005456d:	in     al,0xca
   14005456f:	push   rbx
   140054571:	in     al,0xca
   140054573:	push   rbx
   140054575:	in     al,0xca
   140054577:	push   rbx
   140054579:	in     al,0xca
   14005457b:	push   rbx
   14005457d:	in     al,0xca
   14005457f:	push   rbx
   140054581:	in     al,0xca
   140054583:	push   rbx
   140054585:	in     al,0xca
   140054587:	push   rbx
   140054589:	in     al,0xca
   14005458b:	push   rbx
   14005458d:	in     al,0xca
   14005458f:	push   rbx
   140054591:	in     al,0xca
   140054593:	push   rbx
   140054595:	in     al,0xca
   140054597:	jmp    FWORD PTR [rdi+0x50]
   14005459a:	sub    edi,edi
   14005459c:	cwde   
   14005459d:	push   rdi
   14005459e:	add    edi,edi
   1400545a0:	cwde   
   1400545a1:	push   rdi
   1400545a2:	add    edi,edi
   1400545a4:	cwde   
   1400545a5:	push   rdi
   1400545a6:	add    edi,edi
   1400545a8:	xchg   edi,eax
   1400545a9:	push   rsi
   1400545aa:	add    edi,edi
   1400545ac:	xchg   esi,eax
   1400545ad:	push   rsi
   1400545ae:	add    edi,edi
   1400545b0:	xchg   esi,eax
   1400545b1:	push   rsi
   1400545b2:	add    edi,edi
   1400545b4:	xchg   ebp,eax
   1400545b5:	push   rbp
   1400545b6:	add    edi,edi
   1400545b8:	xchg   ebp,eax
   1400545b9:	push   rbp
   1400545ba:	add    al,0xff
   1400545bc:	xchg   esp,eax
   1400545bd:	push   rbp
   1400545be:	add    al,0xff
   1400545c0:	xchg   esp,eax
   1400545c1:	push   rsp
   1400545c2:	add    al,0xff
   1400545c4:	xchg   ebx,eax
   1400545c5:	push   rsp
   1400545c6:	add    al,0xff
   1400545c8:	xchg   ebx,eax
   1400545c9:	push   rsp
   1400545ca:	add    al,0xff
   1400545cc:	xchg   edx,eax
   1400545cd:	push   rbx
   1400545ce:	add    al,0xff
   1400545d0:	xchg   edx,eax
   1400545d1:	push   rbx
   1400545d2:	add    al,0xff
   1400545d4:	xchg   ecx,eax
   1400545d5:	push   rbx
   1400545d6:	add    al,0xff
   1400545d8:	xchg   ecx,eax
   1400545d9:	push   rdx
   1400545da:	add    al,0xff
   1400545dc:	nop
   1400545dd:	push   rdx
   1400545de:	add    al,0xff
   1400545e0:	nop
   1400545e1:	push   rdx
   1400545e2:	add    al,0xff
   1400545e4:	(bad)  
   1400545e5:	push   rdx
   1400545e6:	add    al,0xff
   1400545e8:	mov    ss,WORD PTR [rcx+0x4]
   1400545eb:	dec    DWORD PTR [rsi-0x7100fbaf]
   1400545f1:	push   rcx
   1400545f2:	add    al,0xff
   1400545f4:	lea    edx,[rax+0x4]
   1400545f7:	dec    DWORD PTR [rax+rdx*2+0x508cff05]
   1400545fe:	add    eax,0x54f8bff
   140054603:	dec    DWORD PTR [rbx-0x7500fab1]
   140054609:	rex.WRXB add rax,0x54e8aff
   14005460f:	dec    DWORD PTR [rcx-0x7600fab2]
   140054615:	rex.WRX add rax,0x54d88ff
   14005461b:	dec    DWORD PTR [rax-0x7800fab3]
   140054621:	rex.WRB add rax,0x54c87ff
   140054627:	inc    DWORD PTR [rsi-0x7a00fab4]
   14005462d:	rex.WR add rax,0x54c85ff
   140054633:	inc    DWORD PTR [rbx+rcx*2+0x4b84ff05]
   14005463a:	(bad)  
   14005463b:	inc    DWORD PTR [rbx-0x7c00f9b6]
   140054641:	rex.WX (bad) 
   140054643:	inc    DWORD PTR [rdx+0xff064a]
	...
   140054651:	add    BYTE PTR [rax],al
   140054653:	or     al,BYTE PTR [rax]
   140054655:	add    BYTE PTR [rax],al
   140054657:	(bad)  
   140054658:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140054659:	jnp    0x14005469b
   14005465b:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14005465c:	xlat   BYTE PTR ds:[rbx]
   14005465d:	movabs al,ds:0xa0d7ff53a0d7ff53
   140054666:	push   rbx
   140054667:	call   rdi
   140054669:	movabs al,ds:0xa0d6ff53a0d7ff53
   140054672:	push   rbx
   140054673:	call   rbx
   140054675:	popf   
   140054676:	push   rsp
   140054677:	dec    edi
   140054679:	(bad)  
   14005467a:	push   rsp
   14005467b:	dec    esp
   14005467d:	cwde   
   14005467e:	push   rbp
   14005467f:	dec    eax
   140054681:	xchg   ebp,eax
   140054682:	push   rbp
   140054683:	inc    esp
   140054685:	xchg   ebx,eax
   140054686:	push   rsi
   140054687:	inc    ecx
   140054689:	nop
   14005468a:	push   rdi
   14005468b:	(bad)  
   14005468c:	mov    ebp,0xb9ff578d
   140054691:	mov    ebx,DWORD PTR [rax-0x1]
   140054694:	stos   BYTE PTR es:[rdi],al
   140054695:	ja     0x1400546d4
   140054697:	dec    DWORD PTR [rcx+0x2fff385c]
   14005469d:	(bad)  
   14005469e:	rex.WRB call FWORD PTR [r8]
   1400546a1:	adc    al,0x5e
   1400546a3:	call   FWORD PTR [rcx]
   1400546a5:	(bad)  
   1400546a6:	push   0x701819ff
   1400546ab:	call   FWORD PTR [rdx]
   1400546ad:	sbb    bh,BYTE PTR [rcx-0x1]
   1400546b0:	sbb    ebx,DWORD PTR [rip+0x1f1cff81]        # 0x15f224637
   1400546b6:	mov    bh,bh
   1400546b8:	(bad)  
   1400546b9:	and    bl,BYTE PTR [rax-0x58dbdd01]
   1400546bf:	jmp    QWORD PTR [rip+0x26ffb626]        # 0x16704fceb
   1400546c5:	cs sar edi,0x27
   1400546c9:	cmp    al,0xcc
   1400546cb:	jmp    QWORD PTR [rdi]
   1400546cd:	rex.WX xlat BYTE PTR ds:[rbx]
   1400546cf:	jmp    FWORD PTR [rax]
   1400546d1:	pop    rcx
   1400546d2:	jrcxz  0x1400546d3
   1400546d4:	sub    BYTE PTR [rdx-0x18],ah
   1400546d7:	jmp    FWORD PTR [rcx]
   1400546d9:	push   0x6e2affe8
   1400546de:	jmp    0x12a7a72e2
   1400546e3:	jmp    FWORD PTR [rbx]
   1400546e5:	jnp    0x1400546d2
   1400546e7:	jmp    FWORD PTR [rbx]
   1400546e9:	jge    0x1400546d6
   1400546eb:	jmp    FWORD PTR [rbx]
   1400546ed:	jge    0x1400546da
   1400546ef:	jmp    FWORD PTR [rbx]
   1400546f1:	jge    0x1400546de
   1400546f3:	jmp    FWORD PTR [rbx]
   1400546f5:	jns    0x1400546e1
   1400546f7:	jmp    FWORD PTR [rdx]
   1400546f9:	outs   dx,DWORD PTR ds:[rsi]
   1400546fa:	jmp    0x1286a70fe
   1400546ff:	jmp    FWORD PTR [rax]
   140054701:	pop    rcx
   140054702:	jrcxz  0x140054703
   140054704:	(bad)  
   140054705:	rex.RXB (bad) 
   140054707:	jmp    QWORD PTR [rdi]
   140054709:	xor    eax,0x2725ffc7
   14005470e:	mov    ecx,0xad2423ff
   140054713:	jmp    QWORD PTR [rax]
   140054715:	and    esp,DWORD PTR [rax+0x304e7fff]
   14005471b:	jmp    FWORD PTR [rdx-0x5600fe9e]
   140054721:	(bad)  
   140054722:	add    edi,edi
   140054724:	test   eax,0xa8ff0161
   140054729:	(bad)  
   14005472a:	add    edi,edi
   14005472c:	test   al,0x60
   14005472e:	add    edi,edi
   140054730:	jo     0x140054782
   140054732:	sub    edi,edi
   140054734:	hlt    
   140054735:	in     eax,0xcc
   140054737:	push   rsp
   140054739:	in     eax,0xcc
   14005473b:	push   rsp
   14005473d:	in     eax,0xcc
   14005473f:	push   rsp
   140054741:	in     eax,0xcc
   140054743:	push   rsp
   140054745:	in     eax,0xcc
   140054747:	push   rsp
   140054749:	in     eax,0xcc
   14005474b:	push   rsp
   14005474d:	in     eax,0xcc
   14005474f:	push   rsp
   140054751:	in     eax,0xcc
   140054753:	push   rsp
   140054755:	in     eax,0xcc
   140054757:	push   rsp
   140054759:	in     eax,0xcc
   14005475b:	push   rsp
   14005475d:	in     eax,0xcc
   14005475f:	push   rsp
   140054761:	in     eax,0xcc
   140054763:	push   rsp
   140054765:	in     eax,0xcc
   140054767:	push   rsp
   140054769:	in     eax,0xcc
   14005476b:	push   rsp
   14005476d:	in     eax,0xcc
   14005476f:	push   rsp
   140054771:	in     eax,0xcc
   140054773:	push   rsp
   140054775:	in     eax,0xcc
   140054777:	push   rsp
   140054779:	in     eax,0xcc
   14005477b:	push   rsp
   14005477d:	in     eax,0xcc
   14005477f:	push   rsp
   140054781:	in     eax,0xcc
   140054783:	push   rsp
   140054785:	in     eax,0xcc
   140054787:	push   rsp
   140054789:	in     eax,0xcc
   14005478b:	push   rsp
   14005478d:	in     eax,0xcc
   14005478f:	push   rsp
   140054791:	in     eax,0xcc
   140054793:	push   rsp
   140054795:	in     eax,0xcc
   140054797:	push   QWORD PTR [rax+0x50]
   14005479a:	sub    edi,edi
   14005479c:	cdq    
   14005479d:	push   rdi
   14005479e:	add    edi,edi
   1400547a0:	cwde   
   1400547a1:	push   rdi
   1400547a2:	add    edi,edi
   1400547a4:	cwde   
   1400547a5:	push   rdi
   1400547a6:	add    edi,edi
   1400547a8:	cwde   
   1400547a9:	push   rdi
   1400547aa:	add    edi,edi
   1400547ac:	xchg   edi,eax
   1400547ad:	push   rsi
   1400547ae:	add    edi,edi
   1400547b0:	xchg   esi,eax
   1400547b1:	push   rsi
   1400547b2:	add    edi,edi
   1400547b4:	xchg   esi,eax
   1400547b5:	push   rsi
   1400547b6:	add    edi,edi
   1400547b8:	xchg   ebp,eax
   1400547b9:	push   rbp
   1400547ba:	add    edi,edi
   1400547bc:	xchg   ebp,eax
   1400547bd:	push   rbp
   1400547be:	add    al,0xff
   1400547c0:	xchg   esp,eax
   1400547c1:	push   rbp
   1400547c2:	add    al,0xff
   1400547c4:	xchg   esp,eax
   1400547c5:	push   rsp
   1400547c6:	add    al,0xff
   1400547c8:	xchg   ebx,eax
   1400547c9:	push   rsp
   1400547ca:	add    al,0xff
   1400547cc:	xchg   ebx,eax
   1400547cd:	push   rsp
   1400547ce:	add    al,0xff
   1400547d0:	xchg   edx,eax
   1400547d1:	push   rbx
   1400547d2:	add    al,0xff
   1400547d4:	xchg   edx,eax
   1400547d5:	push   rbx
   1400547d6:	add    al,0xff
   1400547d8:	xchg   ecx,eax
   1400547d9:	push   rbx
   1400547da:	add    al,0xff
   1400547dc:	xchg   ecx,eax
   1400547dd:	push   rdx
   1400547de:	add    al,0xff
   1400547e0:	nop
   1400547e1:	push   rdx
   1400547e2:	add    al,0xff
   1400547e4:	nop
   1400547e5:	push   rdx
   1400547e6:	add    al,0xff
   1400547e8:	(bad)  
   1400547e9:	push   rdx
   1400547ea:	add    al,0xff
   1400547ec:	mov    ss,WORD PTR [rcx+0x4]
   1400547ef:	dec    DWORD PTR [rsi-0x7100fbaf]
   1400547f5:	push   rcx
   1400547f6:	add    al,0xff
   1400547f8:	lea    edx,[rax+0x4]
   1400547fb:	dec    DWORD PTR [rax+rdx*2+0x508cff05]
   140054802:	add    eax,0x54f8bff
   140054807:	dec    DWORD PTR [rbx-0x7500fab1]
   14005480d:	rex.WRXB add rax,0x54e8aff
   140054813:	dec    DWORD PTR [rcx-0x7600fab2]
   140054819:	rex.WRX add rax,0x54d88ff
   14005481f:	dec    DWORD PTR [rax-0x7800fab3]
   140054825:	rex.WRB add rax,0x54c87ff
   14005482b:	inc    DWORD PTR [rsi-0x7a00fab4]
   140054831:	rex.WR add rax,0x54c85ff
   140054837:	inc    DWORD PTR [rbx+rcx*2+0x4b84ff05]
   14005483e:	(bad)  
   14005483f:	inc    DWORD PTR [rbx-0x7c00f9b6]
   140054845:	rex.WX (bad) 
   140054847:	inc    DWORD PTR [rax]
   140054849:	add    BYTE PTR [rax],al
   14005484b:	add    BYTE PTR [rax],al
   14005484d:	add    BYTE PTR [rax],al
   14005484f:	sbb    eax,0x5e1c3649
   140054854:	leave  
   140054855:	xchg   esi,eax
   140054856:	rex.WRX (bad) 
   140054859:	movabs al,ds:0xa0d7ff53a0d7ff53
   140054862:	push   rbx
   140054863:	call   rdi
   140054865:	movabs al,ds:0xa0d7ff53a0d7ff53
   14005486e:	push   rbx
   14005486f:	call   rsi
   140054871:	lahf   
   140054872:	push   rbx
   140054873:	call   rdx
   140054875:	popf   
   140054876:	push   rsp
   140054877:	dec    edi
   140054879:	(bad)  
   14005487a:	push   rsp
   14005487b:	dec    ebx
   14005487d:	xchg   edi,eax
   14005487e:	push   rbp
   14005487f:	inc    edi
   140054881:	xchg   ebp,eax
   140054882:	push   rsi
   140054883:	inc    esp
   140054885:	xchg   edx,eax
   140054886:	push   rsi
   140054887:	inc    eax
   140054889:	nop
   14005488a:	push   rdi
   14005488b:	(bad)  
   14005488c:	mov    esp,0xb9ff578d
   140054891:	mov    bl,BYTE PTR [rax-0x1]
   140054894:	mov    al,0x84
   140054896:	push   rdi
   140054897:	push   QWORD PTR [rax+0x73ff3a7b]
   14005489d:	rex.WRB cmp al,0xff
   1400548a0:	and    eax,0x18ff5219
   1400548a5:	adc    al,0x61
   1400548a7:	call   FWORD PTR [rcx]
   1400548a9:	(bad)  
   1400548aa:	push   0xffffffffffffffff
   1400548ac:	sbb    bl,BYTE PTR [rcx]
   1400548ae:	jae    0x1400548af
   1400548b0:	sbb    ebx,DWORD PTR [rbx]
   1400548b2:	jl     0x1400548b3
   1400548b4:	sbb    al,0x1e
   1400548b6:	test   edi,edi
   1400548b8:	sbb    eax,0x20ff9020
   1400548bd:	and    ebx,DWORD PTR [rdi-0x50dadc01]
   1400548c3:	jmp    QWORD PTR [rsi]
   1400548c5:	sub    DWORD PTR [rbp-0x37c8d801],edi
   1400548cb:	jmp    QWORD PTR [rdi]
   1400548cd:	rex.RX (bad) 
   1400548cf:	jmp    FWORD PTR [rax]
   1400548d1:	push   rsi
   1400548d2:	loope  0x1400548d3
   1400548d4:	sub    BYTE PTR [rcx-0x19],ah
   1400548d7:	jmp    FWORD PTR [rcx]
   1400548d9:	addr32 call 0x1297373de
   1400548df:	jmp    FWORD PTR [rdx]
   1400548e1:	je     0x1400548cd
   1400548e3:	jmp    FWORD PTR [rbx]
   1400548e5:	jnp    0x1400548d2
   1400548e7:	jmp    FWORD PTR [rbx]
   1400548e9:	jge    0x1400548d6
   1400548eb:	jmp    FWORD PTR [rbx]
   1400548ed:	jge    0x1400548da
   1400548ef:	jmp    FWORD PTR [rbx]
   1400548f1:	jl     0x1400548de
   1400548f3:	jmp    FWORD PTR [rbx]
   1400548f5:	jbe    0x1400548e1
   1400548f7:	jmp    FWORD PTR [rdx]
   1400548f9:	ins    BYTE PTR es:[rdi],dx
   1400548fa:	jmp    0x1276771fe
   1400548ff:	jmp    FWORD PTR [rax]
   140054901:	push   rbx
   140054902:	fdivp  st(7),st
   140054904:	(bad)  
   140054905:	sar    r15b,1
   140054908:	es (bad) 
   14005490a:	ret    0x24ff
   14005490d:	es mov ch,0xff
   140054910:	and    ah,BYTE PTR [rax+rbp*4]
   140054913:	jmp    FWORD PTR [rax]
   140054915:	es xchg edx,eax
   140054917:	jmp    FWORD PTR [rbx-0x5400fe9e]
   14005491d:	(bad)  {k2}{z}
   140054922:	add    edi,edi
   140054924:	test   eax,0xa9ff0161
   140054929:	(bad)  
   14005492a:	add    edi,edi
   14005492c:	test   al,0x61
   14005492e:	add    edi,edi
   140054930:	jo     0x140054983
   140054932:	sub    al,0xff
   140054934:	hlt    
   140054935:	out    0xcd,al
   140054937:	push   rsp
   140054939:	out    0xcd,al
   14005493b:	push   rsp
   14005493d:	out    0xcd,al
   14005493f:	push   rsp
   140054941:	out    0xcd,al
   140054943:	push   rsp
   140054945:	out    0xcd,al
   140054947:	push   rsp
   140054949:	out    0xcd,al
   14005494b:	push   rsp
   14005494d:	out    0xcd,al
   14005494f:	push   rsp
   140054951:	out    0xcd,al
   140054953:	push   rsp
   140054955:	out    0xcd,al
   140054957:	push   rsp
   140054959:	out    0xcd,al
   14005495b:	push   rsp
   14005495d:	out    0xcd,al
   14005495f:	push   rsp
   140054961:	out    0xcd,al
   140054963:	push   rsp
   140054965:	out    0xcd,al
   140054967:	push   rsp
   140054969:	out    0xcd,al
   14005496b:	push   rsp
   14005496d:	out    0xcd,al
   14005496f:	push   rsp
   140054971:	out    0xcd,al
   140054973:	push   rsp
   140054975:	out    0xcd,al
   140054977:	push   rsp
   140054979:	out    0xcd,al
   14005497b:	push   rsp
   14005497d:	out    0xcd,al
   14005497f:	push   rsp
   140054981:	out    0xcd,al
   140054983:	push   rsp
   140054985:	out    0xcd,al
   140054987:	push   rsp
   140054989:	out    0xcd,al
   14005498b:	push   rsp
   14005498d:	out    0xcd,al
   14005498f:	push   rsp
   140054991:	out    0xcd,al
   140054993:	push   rsp
   140054995:	out    0xcd,al
   140054997:	push   QWORD PTR [rax+0x51]
   14005499a:	sub    al,0xff
   14005499c:	(bad)  
   14005499d:	pop    rax
   14005499e:	add    edi,edi
   1400549a0:	cdq    
   1400549a1:	push   rdi
   1400549a2:	add    edi,edi
   1400549a4:	cwde   
   1400549a5:	push   rdi
   1400549a6:	add    edi,edi
   1400549a8:	cwde   
   1400549a9:	push   rdi
   1400549aa:	add    edi,edi
   1400549ac:	cwde   
   1400549ad:	push   rdi
   1400549ae:	add    edi,edi
   1400549b0:	xchg   edi,eax
   1400549b1:	push   rsi
   1400549b2:	add    edi,edi
   1400549b4:	xchg   esi,eax
   1400549b5:	push   rsi
   1400549b6:	add    edi,edi
   1400549b8:	xchg   esi,eax
   1400549b9:	push   rsi
   1400549ba:	add    edi,edi
   1400549bc:	xchg   ebp,eax
   1400549bd:	push   rbp
   1400549be:	add    edi,edi
   1400549c0:	xchg   ebp,eax
   1400549c1:	push   rbp
   1400549c2:	add    al,0xff
   1400549c4:	xchg   esp,eax
   1400549c5:	push   rbp
   1400549c6:	add    al,0xff
   1400549c8:	xchg   esp,eax
   1400549c9:	push   rsp
   1400549ca:	add    al,0xff
   1400549cc:	xchg   ebx,eax
   1400549cd:	push   rsp
   1400549ce:	add    al,0xff
   1400549d0:	xchg   ebx,eax
   1400549d1:	push   rsp
   1400549d2:	add    al,0xff
   1400549d4:	xchg   edx,eax
   1400549d5:	push   rbx
   1400549d6:	add    al,0xff
   1400549d8:	xchg   edx,eax
   1400549d9:	push   rbx
   1400549da:	add    al,0xff
   1400549dc:	xchg   ecx,eax
   1400549dd:	push   rbx
   1400549de:	add    al,0xff
   1400549e0:	xchg   ecx,eax
   1400549e1:	push   rdx
   1400549e2:	add    al,0xff
   1400549e4:	nop
   1400549e5:	push   rdx
   1400549e6:	add    al,0xff
   1400549e8:	nop
   1400549e9:	push   rdx
   1400549ea:	add    al,0xff
   1400549ec:	(bad)  
   1400549ed:	push   rdx
   1400549ee:	add    al,0xff
   1400549f0:	mov    ss,WORD PTR [rcx+0x4]
   1400549f3:	dec    DWORD PTR [rsi-0x7100fbaf]
   1400549f9:	push   rcx
   1400549fa:	add    al,0xff
   1400549fc:	lea    edx,[rax+0x4]
   1400549ff:	dec    DWORD PTR [rax+rdx*2+0x508cff05]
   140054a06:	add    eax,0x54f8bff
   140054a0b:	dec    DWORD PTR [rbx-0x7500fab1]
   140054a11:	rex.WRXB add rax,0x54e8aff
   140054a17:	dec    DWORD PTR [rcx-0x7600fab2]
   140054a1d:	rex.WRX add rax,0x54d88ff
   140054a23:	dec    DWORD PTR [rax-0x7800fab3]
   140054a29:	rex.WRB add rax,0x54c87ff
   140054a2f:	inc    DWORD PTR [rsi-0x7a00fab4]
   140054a35:	rex.WR add rax,0x54c85ff
   140054a3b:	inc    DWORD PTR [rbx+rcx*2+0x4b84ff05]
   140054a42:	(bad)  
   140054a43:	inc    DWORD PTR [rbx+0xff064a]
   140054a49:	add    BYTE PTR [rax],al
   140054a4b:	xor    BYTE PTR [rdi-0x2c6fc896],cl
   140054a51:	popf   
   140054a52:	push   rcx
   140054a53:	hlt    
   140054a54:	xlat   BYTE PTR ds:[rbx]
   140054a55:	movabs al,ds:0xa0d7ff53a0d7ff53
   140054a5e:	push   rbx
   140054a5f:	call   rdi
   140054a61:	movabs al,ds:0xa0d7ff53a0d7ff53
   140054a6a:	push   rbx
   140054a6b:	call   rdi
   140054a6d:	movabs al,ds:0x9cd2ff539fd6ff53
   140054a76:	push   rsp
   140054a77:	dec    esi
   140054a79:	(bad)  
   140054a7a:	push   rsp
   140054a7b:	dec    edx
   140054a7d:	xchg   edi,eax
   140054a7e:	push   rbp
   140054a7f:	inc    edi
   140054a81:	xchg   esp,eax
   140054a82:	push   rsi
   140054a83:	inc    ebx
   140054a85:	xchg   edx,eax
   140054a86:	push   rsi
   140054a87:	(bad)  
   140054a88:	mov    edi,0xbcff578f
   140054a8d:	lea    edx,[rdi-0x1]
   140054a90:	mov    eax,0xb4ff588a
   140054a95:	xchg   DWORD PTR [rax-0x1],ebx
   140054a98:	stos   BYTE PTR es:[rdi],al
   140054a99:	jg     0x140054af0
   140054a9b:	jmp    FWORD PTR [rdi+0x55ff3579]
   140054aa1:	cmp    BYTE PTR [rdx-0x1],al
   140054aa4:	(bad)  
   140054aa5:	adc    eax,0x1518ff58
   140054aaa:	call   FWORD PTR fs:[rcx]
   140054aad:	(bad)  
   140054aae:	ins    DWORD PTR es:[rdi],dx
   140054aaf:	call   FWORD PTR [rdx]
   140054ab1:	sbb    dh,BYTE PTR [rdi-0x1]
   140054ab4:	sbb    ebx,DWORD PTR [rax+rax*4]
   140054ab7:	call   FWORD PTR [rdi+rbx*1]
   140054aba:	mov    edi,edi
   140054abc:	(bad)  
   140054abd:	and    bl,BYTE PTR [rax-0x57dbdd01]
   140054ac3:	jmp    QWORD PTR [rip+0x26ffb827]        # 0x1670502f0
   140054ac9:	xor    eax,ebp
   140054acb:	jmp    QWORD PTR [rdi]
   140054acd:	rex.X sar edi,1
   140054ad0:	sub    BYTE PTR [rbx-0x22],dl
   140054ad3:	jmp    FWORD PTR [rax]
   140054ad5:	(bad)  
   140054ad6:	out    0xff,eax
   140054ad8:	sub    DWORD PTR [rsi-0x18],esp
   140054adb:	jmp    FWORD PTR [rdx]
   140054add:	ins    DWORD PTR es:[rdi],dx
   140054ade:	jmp    0x12a7975e2
   140054ae3:	jmp    FWORD PTR [rbx]
   140054ae5:	jp     0x140054ad2
   140054ae7:	jmp    FWORD PTR [rbx]
   140054ae9:	jge    0x140054ad6
   140054aeb:	jmp    FWORD PTR [rbx]
   140054aed:	jge    0x140054ada
   140054aef:	jmp    FWORD PTR [rbx]
   140054af1:	jnp    0x140054ade
   140054af3:	jmp    FWORD PTR [rdx]
   140054af5:	je     0x140054ae1
   140054af7:	jmp    FWORD PTR [rcx]
   140054af9:	push   0xffffffffffffffe9
   140054afb:	jmp    FWORD PTR [rax]
   140054afd:	pop    rdi
   140054afe:	out    0xff,al
   140054b00:	(bad)  
   140054b01:	rex.WRX (bad) 
   140054b04:	(bad)  
   140054b05:	cmp    ecx,esp
   140054b07:	jmp    QWORD PTR [rsi]
   140054b09:	sub    bh,BYTE PTR [rsi-0x4edadb01]
   140054b0f:	jmp    QWORD PTR [rcx]
   140054b11:	and    esp,DWORD PTR [rdi+rdi*8-0x9fc5ac]
   140054b18:	stos   DWORD PTR es:[rdi],eax
   140054b19:	(bad)  {k3}{z}
   140054b1e:	add    edi,edi
   140054b20:	stos   DWORD PTR es:[rdi],eax
   140054b21:	(bad)  {k2}{z}
   140054b26:	add    edi,edi
   140054b28:	test   eax,0xa9ff0161
   140054b2d:	(bad)  
   140054b2e:	add    edi,edi
   140054b30:	jno    0x140054b83
   140054b32:	sub    al,0xff
   140054b34:	cmc    
   140054b35:	out    0xce,eax
   140054b37:	push   rbp
   140054b39:	out    0xce,eax
   140054b3b:	push   rbp
   140054b3d:	out    0xce,eax
   140054b3f:	push   rbp
   140054b41:	out    0xce,eax
   140054b43:	push   rbp
   140054b45:	out    0xce,eax
   140054b47:	push   rbp
   140054b49:	out    0xce,eax
   140054b4b:	push   rbp
   140054b4d:	out    0xce,eax
   140054b4f:	push   rbp
   140054b51:	out    0xce,eax
   140054b53:	push   rbp
   140054b55:	out    0xce,eax
   140054b57:	push   rbp
   140054b59:	out    0xce,eax
   140054b5b:	push   rbp
   140054b5d:	out    0xce,eax
   140054b5f:	push   rbp
   140054b61:	out    0xce,eax
   140054b63:	push   rbp
   140054b65:	out    0xce,eax
   140054b67:	push   rbp
   140054b69:	out    0xce,eax
   140054b6b:	push   rbp
   140054b6d:	out    0xce,eax
   140054b6f:	push   rbp
   140054b71:	out    0xce,eax
   140054b73:	push   rbp
   140054b75:	out    0xce,eax
   140054b77:	push   rbp
   140054b79:	out    0xce,eax
   140054b7b:	push   rbp
   140054b7d:	out    0xce,eax
   140054b7f:	push   rbp
   140054b81:	out    0xce,eax
   140054b83:	push   rbp
   140054b85:	out    0xce,eax
   140054b87:	push   rbp
   140054b89:	out    0xce,eax
   140054b8b:	push   rbp
   140054b8d:	out    0xce,eax
   140054b8f:	push   rbp
   140054b91:	out    0xce,eax
   140054b93:	push   rbp
   140054b95:	out    0xce,eax
   140054b97:	push   QWORD PTR [rcx+0x51]
   140054b9a:	sub    al,0xff
   140054b9c:	(bad)  
   140054b9d:	pop    rax
   140054b9e:	add    edi,edi
   140054ba0:	(bad)  
   140054ba1:	pop    rax
   140054ba2:	add    edi,edi
   140054ba4:	cdq    
   140054ba5:	push   rdi
   140054ba6:	add    edi,edi
   140054ba8:	cwde   
   140054ba9:	push   rdi
   140054baa:	add    edi,edi
   140054bac:	cwde   
   140054bad:	push   rdi
   140054bae:	add    edi,edi
   140054bb0:	cwde   
   140054bb1:	push   rdi
   140054bb2:	add    edi,edi
   140054bb4:	xchg   edi,eax
   140054bb5:	push   rsi
   140054bb6:	add    edi,edi
   140054bb8:	xchg   esi,eax
   140054bb9:	push   rsi
   140054bba:	add    edi,edi
   140054bbc:	xchg   esi,eax
   140054bbd:	push   rsi
   140054bbe:	add    edi,edi
   140054bc0:	xchg   ebp,eax
   140054bc1:	push   rbp
   140054bc2:	add    edi,edi
   140054bc4:	xchg   ebp,eax
   140054bc5:	push   rbp
   140054bc6:	add    al,0xff
   140054bc8:	xchg   esp,eax
   140054bc9:	push   rbp
   140054bca:	add    al,0xff
   140054bcc:	xchg   esp,eax
   140054bcd:	push   rsp
   140054bce:	add    al,0xff
   140054bd0:	xchg   ebx,eax
   140054bd1:	push   rsp
   140054bd2:	add    al,0xff
   140054bd4:	xchg   ebx,eax
   140054bd5:	push   rsp
   140054bd6:	add    al,0xff
   140054bd8:	xchg   edx,eax
   140054bd9:	push   rbx
   140054bda:	add    al,0xff
   140054bdc:	xchg   edx,eax
   140054bdd:	push   rbx
   140054bde:	add    al,0xff
   140054be0:	xchg   ecx,eax
   140054be1:	push   rbx
   140054be2:	add    al,0xff
   140054be4:	xchg   ecx,eax
   140054be5:	push   rdx
   140054be6:	add    al,0xff
   140054be8:	nop
   140054be9:	push   rdx
   140054bea:	add    al,0xff
   140054bec:	nop
   140054bed:	push   rdx
   140054bee:	add    al,0xff
   140054bf0:	(bad)  
   140054bf1:	push   rdx
   140054bf2:	add    al,0xff
   140054bf4:	mov    ss,WORD PTR [rcx+0x4]
   140054bf7:	dec    DWORD PTR [rsi-0x7100fbaf]
   140054bfd:	push   rcx
   140054bfe:	add    al,0xff
   140054c00:	lea    edx,[rax+0x4]
   140054c03:	dec    DWORD PTR [rax+rdx*2+0x508cff05]
   140054c0a:	add    eax,0x54f8bff
   140054c0f:	dec    DWORD PTR [rbx-0x7500fab1]
   140054c15:	rex.WRXB add rax,0x54e8aff
   140054c1b:	dec    DWORD PTR [rcx-0x7600fab2]
   140054c21:	rex.WRX add rax,0x54d88ff
   140054c27:	dec    DWORD PTR [rax-0x7800fab3]
   140054c2d:	rex.WRB add rax,0x54c87ff
   140054c33:	inc    DWORD PTR [rsi-0x7a00fab4]
   140054c39:	rex.WR add rax,0x54c85ff
   140054c3f:	inc    DWORD PTR [rbx+rcx*2+0x4b84ff05]
   140054c46:	(bad)  
   140054c47:	call   rdi
   140054c49:	movabs al,ds:0xa0d7ff53a0d79f53
   140054c52:	push   rbx
   140054c53:	call   rdi
   140054c55:	movabs al,ds:0xa0d7ff53a0d7ff53
   140054c5e:	push   rbx
   140054c5f:	call   rdi
   140054c61:	movabs al,ds:0xa0d7ff53a0d7ff53
   140054c6a:	push   rbx
   140054c6b:	call   rdi
   140054c6d:	movabs al,ds:0x9cd1ff539ed5ff53
   140054c76:	push   rsp
   140054c77:	dec    ebp
   140054c79:	cdq    
   140054c7a:	push   rbp
   140054c7b:	dec    edx
   140054c7d:	xchg   edi,eax
   140054c7e:	push   rbp
   140054c7f:	inc    esi
   140054c81:	xchg   esp,eax
   140054c82:	push   rsi
   140054c83:	inc    edx
   140054c85:	xchg   ecx,eax
   140054c86:	push   rsi
   140054c87:	(bad)  
   140054c88:	mov    edi,0xbbff578f
   140054c8d:	mov    WORD PTR [rdi-0x1],ss
   140054c90:	mov    bh,0x89
   140054c92:	pop    rax
   140054c93:	push   QWORD PTR [rdi+rax*4-0x7b4f00a7]
   140054c9a:	pop    rcx
   140054c9b:	jmp    QWORD PTR [rax+rdi*2+0x71a6ff4f]
   140054ca2:	xor    al,0xff
   140054ca4:	cmp    DWORD PTR [rip+0x1419ff49],esp        # 0x1541f4bf3
   140054caa:	pop    rbp
   140054cab:	call   FWORD PTR [rcx]
   140054cad:	(bad)  
   140054cae:	call   FWORD PTR [edx]
   140054cb1:	sbb    BYTE PTR [rcx-0x1],dh
   140054cb4:	sbb    ebx,DWORD PTR [rbx]
   140054cb6:	jnp    0x140054cb7
   140054cb8:	sbb    ebx,DWORD PTR [rsi]
   140054cba:	test   bh,bh
   140054cbc:	sbb    eax,0x21ff9121
   140054cc1:	and    esp,DWORD PTR [rdx-0x4cdadb01]
   140054cc7:	jmp    QWORD PTR [rsi]
   140054cc9:	(bad)  
   140054cca:	ret    0x27ff
   140054ccd:	(bad)  
   140054cce:	iret   
   140054ccf:	jmp    FWORD PTR [rax]
   140054cd1:	push   rax
   140054cd2:	fdiv   st(7),st
   140054cd4:	sub    BYTE PTR [rdi-0x1a],bl
   140054cd7:	jmp    FWORD PTR [rcx]
   140054cd9:	call   0x77dc
   140054cdd:	ins    DWORD PTR es:[rdi],dx
   140054cde:	jmp    0x12a7877e2
   140054ce3:	jmp    FWORD PTR [rbx]
   140054ce5:	jns    0x140054cd2
   140054ce7:	jmp    FWORD PTR [rbx]
   140054ce9:	jl     0x140054cd6
   140054ceb:	jmp    FWORD PTR [rbx]
   140054ced:	jl     0x140054cda
   140054cef:	jmp    FWORD PTR [rbx]
   140054cf1:	jns    0x140054cde
   140054cf3:	jmp    FWORD PTR [rdx]
   140054cf5:	jb     0x140054ce1
   140054cf7:	jmp    FWORD PTR [rcx]
   140054cf9:	addr32 call 0x1246075fe
   140054cff:	jmp    QWORD PTR [rdi]
   140054d01:	rex.W (bad) 
   140054d03:	jmp    QWORD PTR [rdi]
   140054d05:	ss enter 0x25ff,0x27
   140054d0a:	mov    edx,0xad2523ff
   140054d0f:	jmp    QWORD PTR [rax]
   140054d11:	and    esp,DWORD PTR [rax+0x275389ff]
   140054d17:	jmp    FWORD PTR [rbx+riz*2+0x62abff01]
   140054d1e:	add    edi,edi
   140054d20:	stos   DWORD PTR es:[rdi],eax
   140054d21:	(bad)  {k3}{z}
   140054d26:	add    edi,edi
   140054d28:	stos   BYTE PTR es:[rdi],al
   140054d29:	(bad)  {k1}{z}
   140054d2e:	add    edi,edi
   140054d30:	jno    0x140054d84
   140054d32:	sub    al,0xff
   140054d34:	cmc    
   140054d35:	call   0x128fb4d09
   140054d3a:	iret   
   140054d3b:	push   rbp
   140054d3d:	call   0x128fb4d11
   140054d42:	iret   
   140054d43:	push   rbp
   140054d45:	call   0x128fb4d19
   140054d4a:	iret   
   140054d4b:	push   rbp
   140054d4d:	call   0x128fb4d21
   140054d52:	iret   
   140054d53:	push   rbp
   140054d55:	call   0x128fb4d29
   140054d5a:	iret   
   140054d5b:	push   rbp
   140054d5d:	call   0x128fb4d31
   140054d62:	iret   
   140054d63:	push   rbp
   140054d65:	call   0x128fb4d39
   140054d6a:	iret   
   140054d6b:	push   rbp
   140054d6d:	call   0x128fb4d41
   140054d72:	iret   
   140054d73:	push   rbp
   140054d75:	call   0x128fb4d49
   140054d7a:	iret   
   140054d7b:	push   rbp
   140054d7d:	call   0x128fb4d51
   140054d82:	iret   
   140054d83:	push   rbp
   140054d85:	call   0x128fb4d59
   140054d8a:	iret   
   140054d8b:	push   rbp
   140054d8d:	call   0x128fb4d61
   140054d92:	iret   
   140054d93:	push   rbp
   140054d95:	call   0x192774d69
   140054d9a:	sub    al,0xff
   140054d9c:	fwait
   140054d9d:	pop    rax
   140054d9e:	add    edi,edi
   140054da0:	(bad)  
   140054da1:	pop    rax
   140054da2:	add    edi,edi
   140054da4:	(bad)  
   140054da5:	pop    rax
   140054da6:	add    edi,edi
   140054da8:	cdq    
   140054da9:	push   rdi
   140054daa:	add    edi,edi
   140054dac:	cwde   
   140054dad:	push   rdi
   140054dae:	add    edi,edi
   140054db0:	cwde   
   140054db1:	push   rdi
   140054db2:	add    edi,edi
   140054db4:	cwde   
   140054db5:	push   rdi
   140054db6:	add    edi,edi
   140054db8:	xchg   edi,eax
   140054db9:	push   rsi
   140054dba:	add    edi,edi
   140054dbc:	xchg   esi,eax
   140054dbd:	push   rsi
   140054dbe:	add    edi,edi
   140054dc0:	xchg   esi,eax
   140054dc1:	push   rsi
   140054dc2:	add    edi,edi
   140054dc4:	xchg   ebp,eax
   140054dc5:	push   rbp
   140054dc6:	add    edi,edi
   140054dc8:	xchg   ebp,eax
   140054dc9:	push   rbp
   140054dca:	add    al,0xff
   140054dcc:	xchg   esp,eax
   140054dcd:	push   rbp
   140054dce:	add    al,0xff
   140054dd0:	xchg   esp,eax
   140054dd1:	push   rsp
   140054dd2:	add    al,0xff
   140054dd4:	xchg   ebx,eax
   140054dd5:	push   rsp
   140054dd6:	add    al,0xff
   140054dd8:	xchg   ebx,eax
   140054dd9:	push   rsp
   140054dda:	add    al,0xff
   140054ddc:	xchg   edx,eax
   140054ddd:	push   rbx
   140054dde:	add    al,0xff
   140054de0:	xchg   edx,eax
   140054de1:	push   rbx
   140054de2:	add    al,0xff
   140054de4:	xchg   ecx,eax
   140054de5:	push   rbx
   140054de6:	add    al,0xff
   140054de8:	xchg   ecx,eax
   140054de9:	push   rdx
   140054dea:	add    al,0xff
   140054dec:	nop
   140054ded:	push   rdx
   140054dee:	add    al,0xff
   140054df0:	nop
   140054df1:	push   rdx
   140054df2:	add    al,0xff
   140054df4:	(bad)  
   140054df5:	push   rdx
   140054df6:	add    al,0xff
   140054df8:	mov    ss,WORD PTR [rcx+0x4]
   140054dfb:	dec    DWORD PTR [rsi-0x7100fbaf]
   140054e01:	push   rcx
   140054e02:	add    al,0xff
   140054e04:	lea    edx,[rax+0x4]
   140054e07:	dec    DWORD PTR [rax+rdx*2+0x508cff05]
   140054e0e:	add    eax,0x54f8bff
   140054e13:	dec    DWORD PTR [rbx-0x7500fab1]
   140054e19:	rex.WRXB add rax,0x54e8aff
   140054e1f:	dec    DWORD PTR [rcx-0x7600fab2]
   140054e25:	rex.WRX add rax,0x54d88ff
   140054e2b:	dec    DWORD PTR [rax-0x7800fab3]
   140054e31:	rex.WRB add rax,0x54c87ff
   140054e37:	inc    DWORD PTR [rsi-0x7a00fab4]
   140054e3d:	rex.WR add rax,0x54c85ff
   140054e43:	inc    DWORD PTR [rbx+rcx*2-0x5f2800fb]
   140054e4a:	push   rbx
   140054e4b:	adc    bh,dl
   140054e4d:	movabs al,ds:0xa0d7df53a0d77053
   140054e56:	push   rbx
   140054e57:	call   rdi
   140054e59:	movabs al,ds:0xa0d7ff53a0d7ff53
   140054e62:	push   rbx
   140054e63:	call   rdi
   140054e65:	movabs al,ds:0xa0d7ff53a0d7ff53
   140054e6e:	push   rbx
   140054e6f:	call   rsp
   140054e71:	sahf   
   140054e72:	push   rbx
   140054e73:	call   rcx
   140054e75:	fwait
   140054e76:	push   rsp
   140054e77:	dec    ebp
   140054e79:	cdq    
   140054e7a:	push   rbp
   140054e7b:	dec    ecx
   140054e7d:	xchg   esi,eax
   140054e7e:	push   rbp
   140054e7f:	inc    ebp
   140054e81:	xchg   ebx,eax
   140054e82:	push   rsi
   140054e83:	inc    edx
   140054e85:	xchg   ecx,eax
   140054e86:	push   rsi
   140054e87:	(bad)  
   140054e88:	mov    esi,0xbaff578e
   140054e8d:	mov    WORD PTR [rax-0x1],ds
   140054e90:	mov    bh,0x89
   140054e92:	pop    rax
   140054e93:	push   QWORD PTR [rbx-0x5000a67a]
   140054e99:	test   BYTE PTR [rcx-0x1],bl
   140054e9c:	stos   DWORD PTR es:[rdi],eax
   140054e9d:	sbb    DWORD PTR [rdx-0x1],0xff4074a5
   140054ea4:	xchg   BYTE PTR [rdx+0x39],bl
   140054ea7:	jmp    QWORD PTR [rsi]
   140054ea9:	sbb    DWORD PTR [rcx-0x1],edx
   140054eac:	sbb    BYTE PTR [rcx+riz*2],dl
   140054eaf:	call   FWORD PTR [rcx]
   140054eb1:	(bad)  
   140054eb2:	ins    BYTE PTR es:[rdi],dx
   140054eb3:	call   FWORD PTR [rdx]
   140054eb5:	sbb    dh,BYTE PTR [rsi-0x1]
   140054eb8:	sbb    ebx,DWORD PTR [rax+rax*4]
   140054ebb:	call   FWORD PTR [rdi+rbx*1]
   140054ebe:	mov    bh,bh
   140054ec0:	(bad)  
   140054ec1:	and    bl,BYTE PTR [rdi+rdi*8-0x51dadd]
   140054ec8:	sub    edi,DWORD PTR es:[rdi-0x33c3d801]
   140054ecf:	jmp    QWORD PTR [rdi]
   140054ed1:	rex.WRB (bad) 
   140054ed4:	sub    BYTE PTR [rbp-0x1a],bl
   140054ed7:	jmp    FWORD PTR [rcx]
   140054ed9:	gs call 0x1297179de
   140054edf:	jmp    FWORD PTR [rdx]
   140054ee1:	jae    0x140054ecd
   140054ee3:	jmp    FWORD PTR [rbx]
   140054ee5:	jns    0x140054ed1
   140054ee7:	jmp    FWORD PTR [rbx]
   140054ee9:	jnp    0x140054ed6
   140054eeb:	jmp    FWORD PTR [rbx]
   140054eed:	jp     0x140054eda
   140054eef:	jmp    FWORD PTR [rbx]
   140054ef1:	js     0x140054edd
   140054ef3:	jmp    FWORD PTR [rdx]
   140054ef5:	jo     0x140054ee0
   140054ef7:	jmp    FWORD PTR [rcx]
   140054ef9:	gs call 0x1215b77fe
   140054eff:	jmp    QWORD PTR [rdi]
   140054f01:	rex.XB sar r15b,cl
   140054f04:	es xor ebx,eax
   140054f07:	jmp    QWORD PTR [rip+0x22ffb626]        # 0x163050533
   140054f0d:	and    al,0xa8
   140054f0f:	push   QWORD PTR [rcx]
   140054f11:	sub    cl,BYTE PTR [rcx+0x163adff]
   140054f17:	jmp    FWORD PTR [rbp-0x5300fe9d]
   140054f1d:	movsxd eax,DWORD PTR [rcx]
   140054f1f:	jmp    FWORD PTR [rbx-0x5400fe9e]
   140054f25:	(bad)  {k3}{z}
   140054f2a:	add    edi,edi
   140054f2c:	stos   BYTE PTR es:[rdi],al
   140054f2d:	(bad)  {k2}
   140054f32:	sub    eax,0xd0e8f6ff
   140054f37:	push   rsi
   140054f39:	call   0x128fc4f0e
   140054f3e:	sar    bh,1
   140054f40:	imul   al
   140054f42:	sar    bh,1
   140054f44:	imul   al
   140054f46:	sar    bh,1
   140054f48:	imul   al
   140054f4a:	sar    bh,1
   140054f4c:	imul   al
   140054f4e:	sar    bh,1
   140054f50:	imul   al
   140054f52:	sar    bh,1
   140054f54:	imul   al
   140054f56:	sar    bh,1
   140054f58:	imul   al
   140054f5a:	sar    bh,1
   140054f5c:	imul   al
   140054f5e:	sar    bh,1
   140054f60:	imul   al
   140054f62:	sar    bh,1
   140054f64:	imul   al
   140054f66:	sar    bh,1
   140054f68:	imul   al
   140054f6a:	sar    bh,1
   140054f6c:	imul   al
   140054f6e:	sar    bh,1
   140054f70:	imul   al
   140054f72:	sar    bh,1
   140054f74:	imul   al
   140054f76:	sar    bh,1
   140054f78:	imul   al
   140054f7a:	sar    bh,1
   140054f7c:	imul   al
   140054f7e:	sar    bh,1
   140054f80:	imul   al
   140054f82:	sar    bh,1
   140054f84:	imul   al
   140054f86:	sar    bh,1
   140054f88:	imul   al
   140054f8a:	sar    bh,1
   140054f8c:	imul   al
   140054f8e:	sar    bh,1
   140054f90:	imul   al
   140054f92:	sar    bh,1
   140054f94:	imul   al
   140054f96:	sar    bh,1
   140054f98:	jb     0x140054fec
   140054f9a:	sub    eax,0x3599bff
   140054f9f:	call   FWORD PTR [rbx-0x6500fca8]
   140054fa5:	pop    rax
   140054fa6:	add    edi,edi
   140054fa8:	(bad)  
   140054fa9:	pop    rax
   140054faa:	add    edi,edi
   140054fac:	cdq    
   140054fad:	push   rdi
   140054fae:	add    edi,edi
   140054fb0:	cwde   
   140054fb1:	push   rdi
   140054fb2:	add    edi,edi
   140054fb4:	cwde   
   140054fb5:	push   rdi
   140054fb6:	add    edi,edi
   140054fb8:	cwde   
   140054fb9:	push   rdi
   140054fba:	add    edi,edi
   140054fbc:	xchg   edi,eax
   140054fbd:	push   rsi
   140054fbe:	add    edi,edi
   140054fc0:	xchg   esi,eax
   140054fc1:	push   rsi
   140054fc2:	add    edi,edi
   140054fc4:	xchg   esi,eax
   140054fc5:	push   rsi
   140054fc6:	add    edi,edi
   140054fc8:	xchg   ebp,eax
   140054fc9:	push   rbp
   140054fca:	add    edi,edi
   140054fcc:	xchg   ebp,eax
   140054fcd:	push   rbp
   140054fce:	add    al,0xff
   140054fd0:	xchg   esp,eax
   140054fd1:	push   rbp
   140054fd2:	add    al,0xff
   140054fd4:	xchg   esp,eax
   140054fd5:	push   rsp
   140054fd6:	add    al,0xff
   140054fd8:	xchg   ebx,eax
   140054fd9:	push   rsp
   140054fda:	add    al,0xff
   140054fdc:	xchg   ebx,eax
   140054fdd:	push   rsp
   140054fde:	add    al,0xff
   140054fe0:	xchg   edx,eax
   140054fe1:	push   rbx
   140054fe2:	add    al,0xff
   140054fe4:	xchg   edx,eax
   140054fe5:	push   rbx
   140054fe6:	add    al,0xff
   140054fe8:	xchg   ecx,eax
   140054fe9:	push   rbx
   140054fea:	add    al,0xff
   140054fec:	xchg   ecx,eax
   140054fed:	push   rdx
   140054fee:	add    al,0xff
   140054ff0:	nop
   140054ff1:	push   rdx
   140054ff2:	add    al,0xff
   140054ff4:	nop
   140054ff5:	push   rdx
   140054ff6:	add    al,0xff
   140054ff8:	(bad)  
   140054ff9:	push   rdx
   140054ffa:	add    al,0xff
   140054ffc:	mov    ss,WORD PTR [rcx+0x4]
   140054fff:	dec    DWORD PTR [rsi-0x7100fbaf]
   140055005:	push   rcx
   140055006:	add    al,0xff
   140055008:	lea    edx,[rax+0x4]
   14005500b:	dec    DWORD PTR [rax+rdx*2+0x508cff05]
   140055012:	add    eax,0x54f8bff
   140055017:	dec    DWORD PTR [rbx-0x7500fab1]
   14005501d:	rex.WRXB add rax,0x54e8aff
   140055023:	dec    DWORD PTR [rcx-0x7600fab2]
   140055029:	rex.WRX add rax,0x54d88ff
   14005502f:	dec    DWORD PTR [rax-0x7800fab3]
   140055035:	rex.WRB add rax,0x54c87ff
   14005503b:	inc    DWORD PTR [rsi-0x7a00fab4]
   140055041:	rex.WR add rax,0x54c85ff
   140055047:	inc    DWORD PTR [rax]
	...
   140055051:	add    BYTE PTR [rax],al
   140055053:	add    bh,dl
   140055055:	movabs al,ds:0xa0d79f53a0d74053
   14005505e:	push   rbx
   14005505f:	call   rdi
   140055061:	movabs al,ds:0xa0d7ff53a0d7ff53
   14005506a:	push   rbx
   14005506b:	call   rdi
   14005506d:	movabs al,ds:0x9bd0ff549ed3ff53
   140055076:	push   rsp
   140055077:	dec    esp
   140055079:	cwde   
   14005507a:	push   rbp
   14005507b:	dec    ecx
   14005507d:	xchg   esi,eax
   14005507e:	push   rbp
   14005507f:	inc    ebp
   140055081:	xchg   ebx,eax
   140055082:	push   rsi
   140055083:	inc    ecx
   140055085:	nop
   140055086:	push   rsi
   140055087:	(bad)  
   140055088:	mov    ebp,0xbaff578e
   14005508d:	mov    ebx,DWORD PTR [rax-0x1]
   140055090:	mov    dh,0x89
   140055092:	pop    rax
   140055093:	push   QWORD PTR [rdx-0x5000a67a]
   140055099:	sbb    DWORD PTR [rcx-0x1],0xffffffb6
   14005509d:	test   DWORD PTR [rbx-0x1],ecx
   1400550a0:	rol    DWORD PTR [rsi+0x79b0ff33],0x33
   1400550a7:	call   QWORD PTR [rbp+0x38]
   1400550aa:	rex.X call FWORD PTR [rip+0x18ff5915]        # 0x15904a9c6
   1400550b1:	adc    eax,0x181aff66
   1400550b6:	jno    0x1400550b7
   1400550b8:	sbb    ebx,DWORD PTR [rbx]
   1400550ba:	jl     0x1400550bb
   1400550bc:	sbb    al,0x1e
   1400550be:	xchg   bh,bh
   1400550c0:	(bad)  
   1400550c1:	and    DWORD PTR [rbp-0x56dbdd01],edx
   1400550c7:	jmp    QWORD PTR [rsi]
   1400550c9:	sub    DWORD PTR [rdi+rdi*8-0x35c6d9],edi
   1400550d0:	(bad)  
   1400550d1:	rex.WXB fdivr st,st(7)
   1400550d4:	sub    BYTE PTR [rbp+riz*8-0x1],bl
   1400550d8:	sub    DWORD PTR [rbp-0x18],esp
   1400550db:	jmp    FWORD PTR [rdx]
   1400550dd:	ins    BYTE PTR es:[rdi],dx
   1400550de:	jmp    0x12a777be2
   1400550e3:	jmp    FWORD PTR [rbx]
   1400550e5:	js     0x1400550d1
   1400550e7:	jmp    FWORD PTR [rbx]
   1400550e9:	jp     0x1400550d6
   1400550eb:	jmp    FWORD PTR [rbx]
   1400550ed:	jns    0x1400550d9
   1400550ef:	jmp    FWORD PTR [rbx]
   1400550f1:	jbe    0x1400550dd
   1400550f3:	jmp    FWORD PTR [rdx]
   1400550f5:	outs   dx,BYTE PTR ds:[rsi]
   1400550f6:	jmp    0x1276779fa
   1400550fb:	jmp    FWORD PTR [rax]
   1400550fd:	push   rcx
   1400550fe:	(bad)  
   140055100:	(bad)  
   140055101:	ds (bad) 
   140055103:	jmp    QWORD PTR [rsi]
   140055105:	sub    al,0xbf
   140055107:	jmp    QWORD PTR ds:0x2321ffb1
   14005510e:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14005510f:	call   FWORD PTR [rbp+0x3f]
   140055112:	push   rdi
   140055113:	jmp    FWORD PTR [rsi-0x5200fe9c]
   140055119:	movsxd eax,DWORD PTR [rcx]
   14005511b:	jmp    FWORD PTR [rbp-0x5300fe9d]
   140055121:	movsxd eax,DWORD PTR [rcx]
   140055123:	jmp    FWORD PTR [rbx-0x5400fe9e]
   140055129:	(bad)  {k3}{z}
   14005512e:	add    edi,edi
   140055130:	jb     0x140055185
   140055132:	sub    eax,0xd1e9f6ff
   140055137:	push   rsi
   140055139:	jmp    0x129fc510f
   14005513e:	sar    edi,1
   140055140:	imul   cl
   140055142:	sar    edi,1
   140055144:	imul   cl
   140055146:	sar    edi,1
   140055148:	imul   cl
   14005514a:	sar    edi,1
   14005514c:	imul   cl
   14005514e:	sar    edi,1
   140055150:	imul   cl
   140055152:	sar    edi,1
   140055154:	imul   cl
   140055156:	sar    edi,1
   140055158:	imul   cl
   14005515a:	sar    edi,1
   14005515c:	imul   cl
   14005515e:	sar    edi,1
   140055160:	imul   cl
   140055162:	sar    edi,1
   140055164:	imul   cl
   140055166:	sar    edi,1
   140055168:	imul   cl
   14005516a:	sar    edi,1
   14005516c:	imul   cl
   14005516e:	sar    edi,1
   140055170:	imul   cl
   140055172:	sar    edi,1
   140055174:	imul   cl
   140055176:	sar    edi,1
   140055178:	imul   cl
   14005517a:	sar    edi,1
   14005517c:	imul   cl
   14005517e:	sar    edi,1
   140055180:	imul   cl
   140055182:	sar    edi,1
   140055184:	imul   cl
   140055186:	sar    edi,1
   140055188:	imul   cl
   14005518a:	sar    edi,1
   14005518c:	imul   cl
   14005518e:	sar    edi,1
   140055190:	imul   cl
   140055192:	sar    edi,1
   140055194:	imul   cl
   140055196:	sar    edi,1
   140055198:	jb     0x1400551ed
   14005519a:	sub    eax,0x3599cff
   14005519f:	call   FWORD PTR [rbx-0x6400fca7]
   1400551a5:	pop    rax
   1400551a6:	add    edi,edi
   1400551a8:	(bad)  
   1400551a9:	pop    rax
   1400551aa:	add    edi,edi
   1400551ac:	(bad)  
   1400551ad:	pop    rax
   1400551ae:	add    edi,edi
   1400551b0:	cdq    
   1400551b1:	push   rdi
   1400551b2:	add    edi,edi
   1400551b4:	cwde   
   1400551b5:	push   rdi
   1400551b6:	add    edi,edi
   1400551b8:	cwde   
   1400551b9:	push   rdi
   1400551ba:	add    edi,edi
   1400551bc:	cwde   
   1400551bd:	push   rdi
   1400551be:	add    edi,edi
   1400551c0:	xchg   edi,eax
   1400551c1:	push   rsi
   1400551c2:	add    edi,edi
   1400551c4:	xchg   esi,eax
   1400551c5:	push   rsi
   1400551c6:	add    edi,edi
   1400551c8:	xchg   esi,eax
   1400551c9:	push   rsi
   1400551ca:	add    edi,edi
   1400551cc:	xchg   ebp,eax
   1400551cd:	push   rbp
   1400551ce:	add    edi,edi
   1400551d0:	xchg   ebp,eax
   1400551d1:	push   rbp
   1400551d2:	add    al,0xff
   1400551d4:	xchg   esp,eax
   1400551d5:	push   rbp
   1400551d6:	add    al,0xff
   1400551d8:	xchg   esp,eax
   1400551d9:	push   rsp
   1400551da:	add    al,0xff
   1400551dc:	xchg   ebx,eax
   1400551dd:	push   rsp
   1400551de:	add    al,0xff
   1400551e0:	xchg   ebx,eax
   1400551e1:	push   rsp
   1400551e2:	add    al,0xff
   1400551e4:	xchg   edx,eax
   1400551e5:	push   rbx
   1400551e6:	add    al,0xff
   1400551e8:	xchg   edx,eax
   1400551e9:	push   rbx
   1400551ea:	add    al,0xff
   1400551ec:	xchg   ecx,eax
   1400551ed:	push   rbx
   1400551ee:	add    al,0xff
   1400551f0:	xchg   ecx,eax
   1400551f1:	push   rdx
   1400551f2:	add    al,0xff
   1400551f4:	nop
   1400551f5:	push   rdx
   1400551f6:	add    al,0xff
   1400551f8:	nop
   1400551f9:	push   rdx
   1400551fa:	add    al,0xff
   1400551fc:	(bad)  
   1400551fd:	push   rdx
   1400551fe:	add    al,0xff
   140055200:	mov    ss,WORD PTR [rcx+0x4]
   140055203:	dec    DWORD PTR [rsi-0x7100fbaf]
   140055209:	push   rcx
   14005520a:	add    al,0xff
   14005520c:	lea    edx,[rax+0x4]
   14005520f:	dec    DWORD PTR [rax+rdx*2+0x508cff05]
   140055216:	add    eax,0x54f8bff
   14005521b:	dec    DWORD PTR [rbx-0x7500fab1]
   140055221:	rex.WRXB add rax,0x54e8aff
   140055227:	dec    DWORD PTR [rcx-0x7600fab2]
   14005522d:	rex.WRX add rax,0x54d88ff
   140055233:	dec    DWORD PTR [rax-0x7800fab3]
   140055239:	rex.WRB add rax,0x54c87ff
   14005523f:	inc    DWORD PTR [rsi-0x7a00fab4]
   140055245:	rex.WR add rax,0xff
	...
   14005525b:	add    bh,dl
   14005525d:	movabs al,ds:0xa0d77053a0d71053
   140055266:	push   rbx
   140055267:	(bad)  
   140055269:	movabs al,ds:0x9dd3ff53a0d6ff53
   140055272:	push   rsp
   140055273:	dec    edi
   140055275:	(bad)  
   140055276:	push   rsp
   140055277:	dec    esp
   140055279:	cwde   
   14005527a:	push   rbp
   14005527b:	dec    eax
   14005527d:	xchg   ebp,eax
   14005527e:	push   rbp
   14005527f:	inc    esp
   140055281:	xchg   ebx,eax
   140055282:	push   rsi
   140055283:	inc    eax
   140055285:	nop
   140055286:	push   rdi
   140055287:	(bad)  
   140055288:	mov    ebp,0xb9ff578d
   14005528d:	mov    ebx,DWORD PTR [rax-0x1]
   140055290:	mov    ch,0x88
   140055292:	pop    rax
   140055293:	push   QWORD PTR [rbx-0x3e00a97a]
   140055299:	mov    DWORD PTR [rip+0x2f8bc8ff],edi        # 0x16f911b9e
   14005529f:	call   QWORD PTR [rbx+0x50ff3866]
   1400552a5:	xor    eax,0x6da0ff41
   1400552aa:	xor    eax,0x4c1f31ff
   1400552af:	call   FWORD PTR [rcx]
   1400552b1:	adc    al,0x5f
   1400552b3:	call   FWORD PTR [rcx]
   1400552b5:	(bad)  
   1400552b6:	imul   edi,edi,0x1a
   1400552b9:	sbb    dh,BYTE PTR [rdi-0x1]
   1400552bc:	sbb    ebx,DWORD PTR [rip+0x201dff82]        # 0x160235244
   1400552c2:	(bad)  
   1400552c3:	jmp    QWORD PTR [rcx]
   1400552c5:	and    esp,DWORD PTR [rdi+rdi*8-0x47d8db]
   1400552cc:	(bad)  
   1400552cd:	ss (bad) 
   1400552cf:	jmp    QWORD PTR [rdi]
   1400552d1:	rex.W (bad) 
   1400552d3:	jmp    FWORD PTR [rax]
   1400552d5:	pop    rbx
   1400552d6:	in     al,0xff
   1400552d8:	sub    DWORD PTR [rax+rbp*8-0x1],esp
   1400552dc:	sub    DWORD PTR [rbx-0x17],ebp
   1400552df:	jmp    FWORD PTR [rdx]
   1400552e1:	jb     0x1400552cd
   1400552e3:	jmp    FWORD PTR [rbx]
   1400552e5:	ja     0x1400552d1
   1400552e7:	jmp    FWORD PTR [rbx]
   1400552e9:	jns    0x1400552d5
   1400552eb:	jmp    FWORD PTR [rbx]
   1400552ed:	js     0x1400552d9
   1400552ef:	jmp    FWORD PTR [rdx]
   1400552f1:	je     0x1400552dd
   1400552f3:	jmp    FWORD PTR [rdx]
   1400552f5:	ins    BYTE PTR es:[rdi],dx
   1400552f6:	jmp    0x126647bfa
   1400552fb:	jmp    QWORD PTR [rdi]
   1400552fd:	rex.WR fcos 
   140055300:	(bad)  
   140055301:	cmp    edx,ecx
   140055303:	jmp    QWORD PTR [rip+0x23ffbb28]        # 0x164050e31
   140055309:	and    eax,0x2320ffad
   14005530e:	lahf   
   14005530f:	call   FWORD PTR [rbp-0x5100eca4]
   140055315:	fs add edi,edi
   140055318:	scas   al,BYTE PTR es:[rdi]
   140055319:	fs add edi,edi
   14005531c:	lods   eax,DWORD PTR ds:[rsi]
   14005531d:	movsxd eax,DWORD PTR [rcx]
   14005531f:	jmp    FWORD PTR [rbp-0x5300fe9d]
   140055325:	movsxd eax,DWORD PTR [rcx]
   140055327:	jmp    FWORD PTR [rbx-0x5400fe9e]
   14005532d:	(bad)  {k3}
   140055332:	cs push rdi
   140055335:	(bad)  
   140055336:	sar    bh,cl
   140055338:	imul   edx
   14005533a:	sar    bh,cl
   14005533c:	imul   edx
   14005533e:	sar    bh,cl
   140055340:	imul   edx
   140055342:	sar    bh,cl
   140055344:	imul   edx
   140055346:	sar    bh,cl
   140055348:	imul   edx
   14005534a:	sar    bh,cl
   14005534c:	imul   edx
   14005534e:	sar    bh,cl
   140055350:	imul   edx
   140055352:	sar    bh,cl
   140055354:	imul   edx
   140055356:	sar    bh,cl
   140055358:	imul   edx
   14005535a:	sar    bh,cl
   14005535c:	imul   edx
   14005535e:	sar    bh,cl
   140055360:	imul   edx
   140055362:	sar    bh,cl
   140055364:	imul   edx
   140055366:	sar    bh,cl
   140055368:	imul   edx
   14005536a:	sar    bh,cl
   14005536c:	imul   edx
   14005536e:	sar    bh,cl
   140055370:	imul   edx
   140055372:	sar    bh,cl
   140055374:	imul   edx
   140055376:	sar    bh,cl
   140055378:	imul   edx
   14005537a:	sar    bh,cl
   14005537c:	imul   edx
   14005537e:	sar    bh,cl
   140055380:	imul   edx
   140055382:	sar    bh,cl
   140055384:	imul   edx
   140055386:	sar    bh,cl
   140055388:	imul   edx
   14005538a:	sar    bh,cl
   14005538c:	imul   edx
   14005538e:	sar    bh,cl
   140055390:	imul   edx
   140055392:	sar    bh,cl
   140055394:	imul   edx
   140055396:	sar    bh,cl
   140055398:	jae    0x1400553ed
   14005539a:	call   FWORD PTR cs:[rcx+rbx*2+0x599cff03]
   1400553a2:	add    edi,edi
   1400553a4:	fwait
   1400553a5:	pop    rcx
   1400553a6:	add    edi,edi
   1400553a8:	fwait
   1400553a9:	pop    rax
   1400553aa:	add    edi,edi
   1400553ac:	(bad)  
   1400553ad:	pop    rax
   1400553ae:	add    edi,edi
   1400553b0:	(bad)  
   1400553b1:	pop    rax
   1400553b2:	add    edi,edi
   1400553b4:	cdq    
   1400553b5:	push   rdi
   1400553b6:	add    edi,edi
   1400553b8:	cwde   
   1400553b9:	push   rdi
   1400553ba:	add    edi,edi
   1400553bc:	cwde   
   1400553bd:	push   rdi
   1400553be:	add    edi,edi
   1400553c0:	cwde   
   1400553c1:	push   rdi
   1400553c2:	add    edi,edi
   1400553c4:	xchg   edi,eax
   1400553c5:	push   rsi
   1400553c6:	add    edi,edi
   1400553c8:	xchg   esi,eax
   1400553c9:	push   rsi
   1400553ca:	add    edi,edi
   1400553cc:	xchg   esi,eax
   1400553cd:	push   rsi
   1400553ce:	add    edi,edi
   1400553d0:	xchg   ebp,eax
   1400553d1:	push   rbp
   1400553d2:	add    edi,edi
   1400553d4:	xchg   ebp,eax
   1400553d5:	push   rbp
   1400553d6:	add    al,0xff
   1400553d8:	xchg   esp,eax
   1400553d9:	push   rbp
   1400553da:	add    al,0xff
   1400553dc:	xchg   esp,eax
   1400553dd:	push   rsp
   1400553de:	add    al,0xff
   1400553e0:	xchg   ebx,eax
   1400553e1:	push   rsp
   1400553e2:	add    al,0xff
   1400553e4:	xchg   ebx,eax
   1400553e5:	push   rsp
   1400553e6:	add    al,0xff
   1400553e8:	xchg   edx,eax
   1400553e9:	push   rbx
   1400553ea:	add    al,0xff
   1400553ec:	xchg   edx,eax
   1400553ed:	push   rbx
   1400553ee:	add    al,0xff
   1400553f0:	xchg   ecx,eax
   1400553f1:	push   rbx
   1400553f2:	add    al,0xff
   1400553f4:	xchg   ecx,eax
   1400553f5:	push   rdx
   1400553f6:	add    al,0xff
   1400553f8:	nop
   1400553f9:	push   rdx
   1400553fa:	add    al,0xff
   1400553fc:	nop
   1400553fd:	push   rdx
   1400553fe:	add    al,0xff
   140055400:	(bad)  
   140055401:	push   rdx
   140055402:	add    al,0xff
   140055404:	mov    ss,WORD PTR [rcx+0x4]
   140055407:	dec    DWORD PTR [rsi-0x7100fbaf]
   14005540d:	push   rcx
   14005540e:	add    al,0xff
   140055410:	lea    edx,[rax+0x4]
   140055413:	dec    DWORD PTR [rax+rdx*2+0x508cff05]
   14005541a:	add    eax,0x54f8bff
   14005541f:	dec    DWORD PTR [rbx-0x7500fab1]
   140055425:	rex.WRXB add rax,0x54e8aff
   14005542b:	dec    DWORD PTR [rcx-0x7600fab2]
   140055431:	rex.WRX add rax,0x54d88ff
   140055437:	dec    DWORD PTR [rax-0x7800fab3]
   14005543d:	rex.WRB add rax,0x54c87ff
   140055443:	inc    DWORD PTR [rsi+0xff054c]
	...
   140055465:	add    BYTE PTR [rax],al
   140055467:	add    bh,dl
   140055469:	movabs al,ds:0x9dd2af539fd65053
   140055472:	push   rsp
   140055473:	dec    edi
   140055475:	(bad)  
   140055476:	push   rsp
   140055477:	dec    ebx
   140055479:	xchg   edi,eax
   14005547a:	push   rbp
   14005547b:	inc    edi
   14005547d:	xchg   ebp,eax
   14005547e:	push   rsi
   14005547f:	inc    esp
   140055481:	xchg   edx,eax
   140055482:	push   rsi
   140055483:	inc    eax
   140055485:	nop
   140055486:	push   rdi
   140055487:	(bad)  
   140055488:	mov    esp,0xb8ff578d
   14005548d:	mov    bl,BYTE PTR [rax-0x1]
   140055490:	mov    edx,0xc7ff4f89
   140055495:	mov    esi,DWORD PTR [rdi+rdi*8]
   140055498:	mov    edi,0x67ff3184
   14005549d:	rex.RXB
   14005549e:	notrack jmp QWORD PTR [rbx]
   1400554a1:	(bad)  
   1400554a2:	rex.RX jmp QWORD PTR [rbx]
   1400554a5:	(bad)  
   1400554a6:	rex.RX push QWORD PTR [rbx+0x4d]
   1400554aa:	cmp    edi,edi
   1400554ac:	jno    0x1400554f9
   1400554ae:	cmp    eax,0x551721ff
   1400554b3:	call   FWORD PTR [rax]
   1400554b5:	adc    eax,0x181aff65
   1400554ba:	jb     0x1400554bb
   1400554bc:	sbb    ebx,DWORD PTR [rsi+rdi*2]
   1400554bf:	call   FWORD PTR [rdi+rbx*1]
   1400554c2:	mov    edi,edi
   1400554c4:	and    BYTE PTR [rbx],ah
   1400554c6:	lahf   
   1400554c7:	jmp    QWORD PTR [rsi+riz*1]
   1400554ca:	mov    ah,0xff
   1400554cc:	(bad)  
   1400554cd:	xor    eax,ebp
   1400554cf:	jmp    QWORD PTR [rdi]
   1400554d1:	rex.RX (bad) 
   1400554d3:	jmp    FWORD PTR [rax]
   1400554d5:	pop    rcx
   1400554d6:	jrcxz  0x1400554d7
   1400554d8:	sub    DWORD PTR [rax+rbp*8-0x1],esp
   1400554dc:	sub    DWORD PTR [rbx-0x17],ebp
   1400554df:	jmp    FWORD PTR [rdx]
   1400554e1:	jb     0x1400554cc
   1400554e3:	jmp    FWORD PTR [rbx]
   1400554e5:	jnp    0x1400554d1
   1400554e7:	jmp    FWORD PTR [rbx]
   1400554e9:	jp     0x1400554d5
   1400554eb:	jmp    FWORD PTR [rbx]
   1400554ed:	ja     0x1400554d9
   1400554ef:	jmp    FWORD PTR [rdx]
   1400554f1:	jae    0x1400554dd
   1400554f3:	jmp    FWORD PTR [rcx]
   1400554f5:	imul   ebp,ecx,0xe45b28ff
   1400554fb:	jmp    QWORD PTR [rdi]
   1400554fd:	rex.RXB (bad) 
   1400554ff:	jmp    QWORD PTR [rsi]
   140055501:	xor    eax,ebp
   140055503:	jmp    QWORD PTR [rip+0x22ffb726]        # 0x163050c2f
   140055509:	and    al,0xa8
   14005550b:	(bad)  
   14005550c:	cmp    ch,BYTE PTR [rdi]
   14005550e:	jg     0x14005550f
   140055510:	scas   eax,DWORD PTR es:[rdi]
   140055511:	gs add bh,bh
   140055514:	scas   eax,DWORD PTR es:[rdi]
   140055515:	fs add bh,bh
   140055518:	scas   al,BYTE PTR es:[rdi]
   140055519:	fs add edi,edi
   14005551c:	scas   al,BYTE PTR es:[rdi]
   14005551d:	fs add edi,edi
   140055520:	lods   eax,DWORD PTR ds:[rsi]
   140055521:	movsxd eax,DWORD PTR [rcx]
   140055523:	jmp    FWORD PTR [rbp-0x5300fe9d]
   140055529:	movsxd eax,DWORD PTR [rcx]
   14005552b:	jmp    FWORD PTR [rbx+0x73ff0162]
   140055531:	push   rsp
   140055532:	push   QWORD PTR cs:[rbx+0x54]
   140055536:	push   QWORD PTR cs:[rbx+0x54]
   14005553a:	push   QWORD PTR cs:[rbx+0x54]
   14005553e:	push   QWORD PTR cs:[rbx+0x54]
   140055542:	push   QWORD PTR cs:[rbx+0x54]
   140055546:	push   QWORD PTR cs:[rbx+0x54]
   14005554a:	push   QWORD PTR cs:[rbx+0x54]
   14005554e:	push   QWORD PTR cs:[rbx+0x54]
   140055552:	push   QWORD PTR cs:[rbx+0x54]
   140055556:	push   QWORD PTR cs:[rbx+0x54]
   14005555a:	push   QWORD PTR cs:[rbx+0x54]
   14005555e:	push   QWORD PTR cs:[rbx+0x54]
   140055562:	push   QWORD PTR cs:[rbx+0x54]
   140055566:	push   QWORD PTR cs:[rbx+0x54]
   14005556a:	push   QWORD PTR cs:[rbx+0x54]
   14005556e:	push   QWORD PTR cs:[rbx+0x54]
   140055572:	push   QWORD PTR cs:[rbx+0x54]
   140055576:	push   QWORD PTR cs:[rbx+0x54]
   14005557a:	push   QWORD PTR cs:[rbx+0x54]
   14005557e:	push   QWORD PTR cs:[rbx+0x54]
   140055582:	push   QWORD PTR cs:[rbx+0x54]
   140055586:	push   QWORD PTR cs:[rbx+0x54]
   14005558a:	push   QWORD PTR cs:[rbx+0x54]
   14005558e:	push   QWORD PTR cs:[rbx+0x54]
   140055592:	push   QWORD PTR cs:[rbx+0x54]
   140055596:	push   QWORD PTR cs:[rbx+0x54]
   14005559a:	call   FWORD PTR cs:[rbp-0x6300fca6]
   1400555a1:	pop    rcx
   1400555a2:	add    edi,edi
   1400555a4:	pushf  
   1400555a5:	pop    rcx
   1400555a6:	add    edi,edi
   1400555a8:	fwait
   1400555a9:	pop    rcx
   1400555aa:	add    edi,edi
   1400555ac:	fwait
   1400555ad:	pop    rax
   1400555ae:	add    edi,edi
   1400555b0:	(bad)  
   1400555b1:	pop    rax
   1400555b2:	add    edi,edi
   1400555b4:	(bad)  
   1400555b5:	pop    rax
   1400555b6:	add    edi,edi
   1400555b8:	cdq    
   1400555b9:	push   rdi
   1400555ba:	add    edi,edi
   1400555bc:	cwde   
   1400555bd:	push   rdi
   1400555be:	add    edi,edi
   1400555c0:	cwde   
   1400555c1:	push   rdi
   1400555c2:	add    edi,edi
   1400555c4:	cwde   
   1400555c5:	push   rdi
   1400555c6:	add    edi,edi
   1400555c8:	xchg   edi,eax
   1400555c9:	push   rsi
   1400555ca:	add    edi,edi
   1400555cc:	xchg   esi,eax
   1400555cd:	push   rsi
   1400555ce:	add    edi,edi
   1400555d0:	xchg   esi,eax
   1400555d1:	push   rsi
   1400555d2:	add    edi,edi
   1400555d4:	xchg   ebp,eax
   1400555d5:	push   rbp
   1400555d6:	add    edi,edi
   1400555d8:	xchg   ebp,eax
   1400555d9:	push   rbp
   1400555da:	add    al,0xff
   1400555dc:	xchg   esp,eax
   1400555dd:	push   rbp
   1400555de:	add    al,0xff
   1400555e0:	xchg   esp,eax
   1400555e1:	push   rsp
   1400555e2:	add    al,0xff
   1400555e4:	xchg   ebx,eax
   1400555e5:	push   rsp
   1400555e6:	add    al,0xff
   1400555e8:	xchg   ebx,eax
   1400555e9:	push   rsp
   1400555ea:	add    al,0xff
   1400555ec:	xchg   edx,eax
   1400555ed:	push   rbx
   1400555ee:	add    al,0xff
   1400555f0:	xchg   edx,eax
   1400555f1:	push   rbx
   1400555f2:	add    al,0xff
   1400555f4:	xchg   ecx,eax
   1400555f5:	push   rbx
   1400555f6:	add    al,0xff
   1400555f8:	xchg   ecx,eax
   1400555f9:	push   rdx
   1400555fa:	add    al,0xff
   1400555fc:	nop
   1400555fd:	push   rdx
   1400555fe:	add    al,0xff
   140055600:	nop
   140055601:	push   rdx
   140055602:	add    al,0xff
   140055604:	(bad)  
   140055605:	push   rdx
   140055606:	add    al,0xff
   140055608:	mov    ss,WORD PTR [rcx+0x4]
   14005560b:	dec    DWORD PTR [rsi-0x7100fbaf]
   140055611:	push   rcx
   140055612:	add    al,0xff
   140055614:	lea    edx,[rax+0x4]
   140055617:	dec    DWORD PTR [rax+rdx*2+0x508cff05]
   14005561e:	add    eax,0x54f8bff
   140055623:	dec    DWORD PTR [rbx-0x7500fab1]
   140055629:	rex.WRXB add rax,0x54e8aff
   14005562f:	dec    DWORD PTR [rcx-0x7600fab2]
   140055635:	rex.WRX add rax,0x54d88ff
   14005563b:	dec    DWORD PTR [rax-0x7800fab3]
   140055641:	rex.WRB add rax,0x54c87ff
   140055647:	inc    DWORD PTR [rax]
	...
   14005566d:	add    BYTE PTR [rax],al
   14005566f:	add    cl,dl
   140055671:	pushf  
   140055672:	push   rsp
   140055673:	and    dh,cl
   140055675:	cdq    
   140055676:	push   rsp
   140055677:	or     dl,0x97
   14005567a:	push   rbp
   14005567b:	ffreep st(7)
   14005567d:	xchg   esp,eax
   14005567e:	push   rsi
   14005567f:	inc    ebx
   140055681:	xchg   edx,eax
   140055682:	push   rsi
   140055683:	(bad)  
   140055684:	mov    edi,0xbbff578f
   140055689:	lea    edx,[rdi-0x1]
   14005568c:	ror    DWORD PTR [rbx-0x733500bc],0x2f
   140055693:	jmp    QWORD PTR [rdx+0x3eff3670]
   140055699:	sub    DWORD PTR [rbx-0x1],eax
   14005569c:	and    edx,DWORD PTR [rsi]
   14005569e:	rex.RX jmp QWORD PTR [rbx]
   1400556a1:	(bad)  
   1400556a2:	rex.RX jmp QWORD PTR [rbx]
   1400556a5:	(bad)  
   1400556a6:	rex.RX jmp FWORD PTR [rax]
   1400556a9:	sbb    DWORD PTR [rbp-0x1],eax
   1400556ac:	popf   
   1400556ad:	imul   esi,DWORD PTR [rip+0x48273dff],0xffffffff        # 0x1882c94b3
   1400556b4:	sbb    dl,BYTE PTR [rbx*2+0x6c1719ff]
   1400556bb:	call   FWORD PTR [rdx]
   1400556bd:	sbb    edi,DWORD PTR [rdx-0x1]
   1400556c0:	sbb    al,0x1e
   1400556c2:	xchg   bh,bh
   1400556c4:	(bad)  
   1400556c5:	and    bl,BYTE PTR [rdx-0x4fdadb01]
   1400556cb:	jmp    QWORD PTR [rsi]
   1400556cd:	xor    bl,al
   1400556cf:	jmp    QWORD PTR [rdi]
   1400556d1:	rex.R sar edi,cl
   1400556d4:	sub    BYTE PTR [rax-0x1e],bl
   1400556d7:	jmp    FWORD PTR [rcx]
   1400556d9:	movsxd ebp,eax
   1400556db:	jmp    FWORD PTR [rcx]
   1400556dd:	push   0xffffffffffffffe9
   1400556df:	jmp    FWORD PTR [rdx]
   1400556e1:	ja     0x1400556cc
   1400556e3:	jmp    FWORD PTR [rbx]
   1400556e5:	xchg   edx,ebp
   1400556e7:	jmp    FWORD PTR [rbx]
   1400556e9:	(bad)  
   1400556ea:	(bad)  
   1400556eb:	jmp    FWORD PTR [rbx]
   1400556ed:	jbe    0x1400556d9
   1400556ef:	jmp    FWORD PTR [rdx]
   1400556f1:	jno    0x1400556dc
   1400556f3:	jmp    FWORD PTR [rcx]
   1400556f5:	addr32 call 0x1225c7ffa
   1400556fb:	jmp    QWORD PTR [rdi]
   1400556fd:	rex.X sar edi,1
   140055700:	es sub eax,0x2524ffc0
   140055706:	mov    dl,0xff
   140055708:	and    DWORD PTR [rbx],esp
   14005570a:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14005570b:	push   QWORD PTR [rcx+0x48]
   14005570e:	rex.XB push QWORD PTR [r8-0x5000ff9b]
   140055715:	gs add bh,bh
   140055718:	scas   eax,DWORD PTR es:[rdi]
   140055719:	fs add bh,bh
   14005571c:	scas   al,BYTE PTR es:[rdi]
   14005571d:	fs add edi,edi
   140055720:	scas   al,BYTE PTR es:[rdi]
   140055721:	fs add edi,edi
   140055724:	lods   eax,DWORD PTR ds:[rsi]
   140055725:	movsxd eax,DWORD PTR [rcx]
   140055727:	jmp    FWORD PTR [rbp-0x5300fe9d]
   14005572d:	movsxd eax,DWORD PTR [rcx]
   14005572f:	jmp    FWORD PTR [rbx-0x5400fe9e]
   140055735:	(bad)  {k3}{z}
   14005573a:	add    edi,edi
   14005573c:	stos   BYTE PTR es:[rdi],al
   14005573d:	(bad)  {k1}{z}
   140055742:	add    edi,edi
   140055744:	test   eax,0xa8ff0161
   140055749:	(bad)  
   14005574a:	add    edi,edi
   14005574c:	test   al,0x60
   14005574e:	add    edi,edi
   140055750:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140055751:	(bad)  
   140055752:	add    edi,edi
   140055754:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140055755:	(bad)  
   140055756:	add    edi,edi
   140055758:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140055759:	pop    rdi
   14005575a:	add    edi,edi
   14005575c:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14005575d:	pop    rdi
   14005575e:	add    bh,bh
   140055760:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140055761:	pop    rdi
   140055762:	add    bh,bh
   140055764:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140055765:	pop    rsi
   140055766:	add    bh,bh
   140055768:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140055769:	pop    rsi
   14005576a:	add    bh,bh
   14005576c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14005576d:	pop    rsi
   14005576e:	add    bh,bh
   140055770:	movabs ds:0xa2ff025da2ff025d,eax
   140055779:	pop    rbp
   14005577a:	add    bh,bh
   14005577c:	movabs eax,ds:0xa0ff025ca1ff025d
   140055785:	pop    rsp
   140055786:	add    bh,bh
   140055788:	movabs al,ds:0x9fff025b9fff025c
   140055791:	pop    rbx
   140055792:	add    bh,bh
   140055794:	sahf   
   140055795:	pop    rbx
   140055796:	add    bh,bh
   140055798:	sahf   
   140055799:	pop    rdx
   14005579a:	add    bh,bh
   14005579c:	popf   
   14005579d:	pop    rdx
   14005579e:	add    edi,edi
   1400557a0:	popf   
   1400557a1:	pop    rdx
   1400557a2:	add    edi,edi
   1400557a4:	pushf  
   1400557a5:	pop    rcx
   1400557a6:	add    edi,edi
   1400557a8:	pushf  
   1400557a9:	pop    rcx
   1400557aa:	add    edi,edi
   1400557ac:	fwait
   1400557ad:	pop    rcx
   1400557ae:	add    edi,edi
   1400557b0:	fwait
   1400557b1:	pop    rax
   1400557b2:	add    edi,edi
   1400557b4:	(bad)  
   1400557b5:	pop    rax
   1400557b6:	add    edi,edi
   1400557b8:	(bad)  
   1400557b9:	pop    rax
   1400557ba:	add    edi,edi
   1400557bc:	cdq    
   1400557bd:	push   rdi
   1400557be:	add    edi,edi
   1400557c0:	cwde   
   1400557c1:	push   rdi
   1400557c2:	add    edi,edi
   1400557c4:	cwde   
   1400557c5:	push   rdi
   1400557c6:	add    edi,edi
   1400557c8:	cwde   
   1400557c9:	push   rdi
   1400557ca:	add    edi,edi
   1400557cc:	xchg   edi,eax
   1400557cd:	push   rsi
   1400557ce:	add    edi,edi
   1400557d0:	xchg   esi,eax
   1400557d1:	push   rsi
   1400557d2:	add    edi,edi
   1400557d4:	xchg   esi,eax
   1400557d5:	push   rsi
   1400557d6:	add    edi,edi
   1400557d8:	xchg   ebp,eax
   1400557d9:	push   rbp
   1400557da:	add    edi,edi
   1400557dc:	xchg   ebp,eax
   1400557dd:	push   rbp
   1400557de:	add    al,0xff
   1400557e0:	xchg   esp,eax
   1400557e1:	push   rbp
   1400557e2:	add    al,0xff
   1400557e4:	xchg   esp,eax
   1400557e5:	push   rsp
   1400557e6:	add    al,0xff
   1400557e8:	xchg   ebx,eax
   1400557e9:	push   rsp
   1400557ea:	add    al,0xff
   1400557ec:	xchg   ebx,eax
   1400557ed:	push   rsp
   1400557ee:	add    al,0xff
   1400557f0:	xchg   edx,eax
   1400557f1:	push   rbx
   1400557f2:	add    al,0xff
   1400557f4:	xchg   edx,eax
   1400557f5:	push   rbx
   1400557f6:	add    al,0xff
   1400557f8:	xchg   ecx,eax
   1400557f9:	push   rbx
   1400557fa:	add    al,0xff
   1400557fc:	xchg   ecx,eax
   1400557fd:	push   rdx
   1400557fe:	add    al,0xff
   140055800:	nop
   140055801:	push   rdx
   140055802:	add    al,0xff
   140055804:	nop
   140055805:	push   rdx
   140055806:	add    al,0xff
   140055808:	(bad)  
   140055809:	push   rdx
   14005580a:	add    al,0xff
   14005580c:	mov    ss,WORD PTR [rcx+0x4]
   14005580f:	dec    DWORD PTR [rsi-0x7100fbaf]
   140055815:	push   rcx
   140055816:	add    al,0xff
   140055818:	lea    edx,[rax+0x4]
   14005581b:	dec    DWORD PTR [rax+rdx*2+0x508cff05]
   140055822:	add    eax,0x54f8bff
   140055827:	dec    DWORD PTR [rbx-0x7500fab1]
   14005582d:	rex.WRXB add rax,0x54e8aff
   140055833:	dec    DWORD PTR [rcx-0x7600fab2]
   140055839:	rex.WRX add rax,0x54d88ff
   14005583f:	dec    DWORD PTR [rax-0x7800fab3]
   140055845:	rex.WRB add rax,0xbf
	...
   14005587b:	add    dh,al
   14005587d:	xchg   esp,eax
   14005587e:	push   rsi
   14005587f:	push   rax
   140055880:	ret    0x5691
   140055883:	mov    edi,0xff528ec0
   140055888:	(bad)  
   140055889:	mov    WORD PTR [rax],?
   14005588b:	inc    esp
   14005588d:	mov    BYTE PTR [rax],dh
   14005588f:	push   QWORD PTR [rbp+0x50]
   140055892:	cmp    al,0xff
   140055894:	sub    DWORD PTR [rdx],ebx
   140055896:	rex.RX jmp QWORD PTR [rdi+r10*1]
   14005589a:	rex.RX jmp QWORD PTR [rdi+r10*1]
   14005589e:	rex.RX jmp QWORD PTR [rdi+r10*1]
   1400558a2:	rex.RX jmp QWORD PTR [rdi+r10*1]
   1400558a6:	rex.RX jmp QWORD PTR [rdi+r10*1]
   1400558aa:	rex.RX call QWORD PTR [rbx+0x38]
   1400558ae:	rex inc DWORD PTR [rbp+0x24ff3959]
   1400558b5:	sbb    BYTE PTR [rdx-0x1],dl
   1400558b8:	sbb    BYTE PTR [rip+0x191aff65],dl        # 0x159205823
   1400558be:	je     0x1400558bf
   1400558c0:	sbb    ebx,DWORD PTR [rip+0x211eff83]        # 0x161245849
   1400558c6:	xchg   ebp,eax
   1400558c7:	jmp    QWORD PTR [rbx]
   1400558c9:	and    al,0xac
   1400558cb:	jmp    QWORD PTR [rsi]
   1400558cd:	sub    eax,0x4227ffc1
   1400558d2:	sar    edi,1
   1400558d4:	sub    BYTE PTR [rdi-0x1f],dl
   1400558d7:	jmp    FWORD PTR [rcx]
   1400558d9:	movsxd ebp,eax
   1400558db:	jmp    FWORD PTR [rcx]
   1400558dd:	imul   ebp,ecx,0xffffffff
   1400558e0:	sub    al,BYTE PTR [rbp-0x6dd40017]
   1400558e6:	(bad)  
   1400558e7:	jmp    FWORD PTR [rbx]
   1400558e9:	(bad)  
   1400558ea:	(bad)  
   1400558eb:	jmp    FWORD PTR [rdx]
   1400558ed:	jns    0x1400558d9
   1400558ef:	jmp    FWORD PTR [rdx]
   1400558f1:	outs   dx,DWORD PTR ds:[rsi]
   1400558f2:	jmp    0x1286a82f6
   1400558f7:	jmp    FWORD PTR [rax]
   1400558f9:	push   rbx
   1400558fa:	fdivp  st(7),st
   1400558fc:	(bad)  
   1400558fd:	cmp    eax,0x2925ffcd
   140055902:	mov    esp,0xad2523ff
   140055907:	jmp    QWORD PTR [rax]
   140055909:	and    bl,BYTE PTR [rdi+0x962a8ff]
   14005590f:	push   QWORD PTR [rax-0x4f00ff9b]
   140055915:	gs add bh,bh
   140055918:	scas   eax,DWORD PTR es:[rdi]
   140055919:	gs add bh,bh
   14005591c:	scas   eax,DWORD PTR es:[rdi]
   14005591d:	fs add bh,bh
   140055920:	scas   al,BYTE PTR es:[rdi]
   140055921:	fs add edi,edi
   140055924:	scas   al,BYTE PTR es:[rdi]
   140055925:	fs add edi,edi
   140055928:	lods   eax,DWORD PTR ds:[rsi]
   140055929:	movsxd eax,DWORD PTR [rcx]
   14005592b:	jmp    FWORD PTR [rbp-0x5300fe9d]
   140055931:	movsxd eax,DWORD PTR [rcx]
   140055933:	jmp    FWORD PTR [rbx-0x5400fe9e]
   140055939:	(bad)  {k3}{z}
   14005593e:	add    edi,edi
   140055940:	stos   BYTE PTR es:[rdi],al
   140055941:	(bad)  {k1}{z}
   140055946:	add    edi,edi
   140055948:	test   eax,0xa8ff0161
   14005594d:	(bad)  
   14005594e:	add    edi,edi
   140055950:	test   al,0x60
   140055952:	add    edi,edi
   140055954:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140055955:	(bad)  
   140055956:	add    edi,edi
   140055958:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140055959:	(bad)  
   14005595a:	add    edi,edi
   14005595c:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14005595d:	pop    rdi
   14005595e:	add    edi,edi
   140055960:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140055961:	pop    rdi
   140055962:	add    bh,bh
   140055964:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140055965:	pop    rdi
   140055966:	add    bh,bh
   140055968:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140055969:	pop    rsi
   14005596a:	add    bh,bh
   14005596c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14005596d:	pop    rsi
   14005596e:	add    bh,bh
   140055970:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140055971:	pop    rsi
   140055972:	add    bh,bh
   140055974:	movabs ds:0xa2ff025da2ff025d,eax
   14005597d:	pop    rbp
   14005597e:	add    bh,bh
   140055980:	movabs eax,ds:0xa0ff025ca1ff025d
   140055989:	pop    rsp
   14005598a:	add    bh,bh
   14005598c:	movabs al,ds:0x9fff025b9fff025c
   140055995:	pop    rbx
   140055996:	add    bh,bh
   140055998:	sahf   
   140055999:	pop    rbx
   14005599a:	add    bh,bh
   14005599c:	sahf   
   14005599d:	pop    rdx
   14005599e:	add    bh,bh
   1400559a0:	popf   
   1400559a1:	pop    rdx
   1400559a2:	add    edi,edi
   1400559a4:	popf   
   1400559a5:	pop    rdx
   1400559a6:	add    edi,edi
   1400559a8:	pushf  
   1400559a9:	pop    rcx
   1400559aa:	add    edi,edi
   1400559ac:	pushf  
   1400559ad:	pop    rcx
   1400559ae:	add    edi,edi
   1400559b0:	fwait
   1400559b1:	pop    rcx
   1400559b2:	add    edi,edi
   1400559b4:	fwait
   1400559b5:	pop    rax
   1400559b6:	add    edi,edi
   1400559b8:	(bad)  
   1400559b9:	pop    rax
   1400559ba:	add    edi,edi
   1400559bc:	(bad)  
   1400559bd:	pop    rax
   1400559be:	add    edi,edi
   1400559c0:	cdq    
   1400559c1:	push   rdi
   1400559c2:	add    edi,edi
   1400559c4:	cwde   
   1400559c5:	push   rdi
   1400559c6:	add    edi,edi
   1400559c8:	cwde   
   1400559c9:	push   rdi
   1400559ca:	add    edi,edi
   1400559cc:	cwde   
   1400559cd:	push   rdi
   1400559ce:	add    edi,edi
   1400559d0:	xchg   edi,eax
   1400559d1:	push   rsi
   1400559d2:	add    edi,edi
   1400559d4:	xchg   esi,eax
   1400559d5:	push   rsi
   1400559d6:	add    edi,edi
   1400559d8:	xchg   esi,eax
   1400559d9:	push   rsi
   1400559da:	add    edi,edi
   1400559dc:	xchg   ebp,eax
   1400559dd:	push   rbp
   1400559de:	add    edi,edi
   1400559e0:	xchg   ebp,eax
   1400559e1:	push   rbp
   1400559e2:	add    al,0xff
   1400559e4:	xchg   esp,eax
   1400559e5:	push   rbp
   1400559e6:	add    al,0xff
   1400559e8:	xchg   esp,eax
   1400559e9:	push   rsp
   1400559ea:	add    al,0xff
   1400559ec:	xchg   ebx,eax
   1400559ed:	push   rsp
   1400559ee:	add    al,0xff
   1400559f0:	xchg   ebx,eax
   1400559f1:	push   rsp
   1400559f2:	add    al,0xff
   1400559f4:	xchg   edx,eax
   1400559f5:	push   rbx
   1400559f6:	add    al,0xff
   1400559f8:	xchg   edx,eax
   1400559f9:	push   rbx
   1400559fa:	add    al,0xff
   1400559fc:	xchg   ecx,eax
   1400559fd:	push   rbx
   1400559fe:	add    al,0xff
   140055a00:	xchg   ecx,eax
   140055a01:	push   rdx
   140055a02:	add    al,0xff
   140055a04:	nop
   140055a05:	push   rdx
   140055a06:	add    al,0xff
   140055a08:	nop
   140055a09:	push   rdx
   140055a0a:	add    al,0xff
   140055a0c:	(bad)  
   140055a0d:	push   rdx
   140055a0e:	add    al,0xff
   140055a10:	mov    ss,WORD PTR [rcx+0x4]
   140055a13:	dec    DWORD PTR [rsi-0x7100fbaf]
   140055a19:	push   rcx
   140055a1a:	add    al,0xff
   140055a1c:	lea    edx,[rax+0x4]
   140055a1f:	dec    DWORD PTR [rax+rdx*2+0x508cff05]
   140055a26:	add    eax,0x54f8bff
   140055a2b:	dec    DWORD PTR [rbx-0x7500fab1]
   140055a31:	rex.WRXB add rax,0x54e8aff
   140055a37:	dec    DWORD PTR [rcx-0x7600fab2]
   140055a3d:	rex.WRX add rax,0x54d88ff
   140055a43:	dec    DWORD PTR [rax+0x8f054d]
	...
   140055a81:	add    BYTE PTR [rax],al
   140055a83:	add    dl,cl
   140055a85:	mov    WORD PTR [rdi],gs
   140055a87:	and    BYTE PTR [rcx+0x3b],bl
   140055a8a:	rex mov edi,0xff462236
   140055a90:	cmp    BYTE PTR [rbx],ah
   140055a92:	rex.RX (bad) 
   140055a94:	cmp    ah,BYTE PTR [rsi+rax*2]
   140055a97:	(bad)  
   140055a98:	cmp    ah,BYTE PTR [rsi+rax*2]
   140055a9b:	(bad)  
   140055a9c:	cmp    ah,BYTE PTR [rsi+rax*2]
   140055a9f:	(bad)  
   140055aa0:	cmp    DWORD PTR [rbx],esp
   140055aa2:	rex.RX push QWORD PTR [rdi]
   140055aa5:	and    al,BYTE PTR [rsi-0x1]
   140055aa8:	xor    eax,0x32ff4621
   140055aad:	(bad)  
   140055aae:	rex.RX call QWORD PTR [rbp+r12*2+0x2f48ff37]
   140055ab6:	rex.RB call FWORD PTR [r11]
   140055ab9:	adc    eax,0x1719ff5c
   140055abe:	outs   dx,BYTE PTR ds:[rsi]
   140055abf:	call   FWORD PTR [rbx]
   140055ac1:	sbb    al,0x7e
   140055ac3:	call   FWORD PTR [rip+0x22ff8f20]        # 0x16304e9e9
   140055ac9:	and    al,0xa8
   140055acb:	jmp    QWORD PTR [rsi]
   140055acd:	sub    edi,DWORD PTR [rsi-0x30bfd801]
   140055ad3:	jmp    FWORD PTR [rax]
   140055ad5:	push   rsi
   140055ad6:	loope  0x140055ad7
   140055ad8:	sub    DWORD PTR [rdx-0x18],esp
   140055adb:	jmp    FWORD PTR [rcx]
   140055add:	jo     0x140055ac7
   140055adf:	jmp    FWORD PTR [rbx]
   140055ae1:	xchg   ecx,eax
   140055ae2:	(bad)  
   140055ae3:	jmp    FWORD PTR [rsp+rbx*4]
   140055ae6:	(bad)  
   140055ae7:	jmp    FWORD PTR [rsi+rdx*4]
   140055aea:	(bad)  
   140055aeb:	jmp    FWORD PTR [rdx]
   140055aed:	sub    dl,0xff
   140055af0:	sub    ch,BYTE PTR [rbp-0x17]
   140055af3:	jmp    FWORD PTR [rcx]
   140055af5:	(bad)  
   140055af6:	out    0xff,eax
   140055af8:	(bad)  
   140055af9:	rex.WRXB (bad) 
   140055afc:	(bad)  
   140055afd:	(bad)  
   140055afe:	enter  0x25ff,0x26
   140055b02:	mov    bh,0xff
   140055b04:	and    ah,BYTE PTR [rax+rbp*4]
   140055b07:	dec    DWORD PTR [rbp+0x37]
   140055b0a:	imul   edi,edi,0xffffffb1
   140055b0d:	data16 add bh,bh
   140055b10:	mov    cl,0x66
   140055b12:	add    bh,bh
   140055b14:	mov    al,0x65
   140055b16:	add    bh,bh
   140055b18:	mov    al,0x65
   140055b1a:	add    bh,bh
   140055b1c:	scas   eax,DWORD PTR es:[rdi]
   140055b1d:	gs add bh,bh
   140055b20:	scas   eax,DWORD PTR es:[rdi]
   140055b21:	fs add bh,bh
   140055b24:	scas   al,BYTE PTR es:[rdi]
   140055b25:	fs add edi,edi
   140055b28:	scas   al,BYTE PTR es:[rdi]
   140055b29:	fs add edi,edi
   140055b2c:	lods   eax,DWORD PTR ds:[rsi]
   140055b2d:	movsxd eax,DWORD PTR [rcx]
   140055b2f:	jmp    FWORD PTR [rbp-0x5300fe9d]
   140055b35:	movsxd eax,DWORD PTR [rcx]
   140055b37:	jmp    FWORD PTR [rbx-0x5400fe9e]
   140055b3d:	(bad)  {k3}{z}
   140055b42:	add    edi,edi
   140055b44:	stos   BYTE PTR es:[rdi],al
   140055b45:	(bad)  {k1}{z}
   140055b4a:	add    edi,edi
   140055b4c:	test   eax,0xa8ff0161
   140055b51:	(bad)  
   140055b52:	add    edi,edi
   140055b54:	test   al,0x60
   140055b56:	add    edi,edi
   140055b58:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140055b59:	(bad)  
   140055b5a:	add    edi,edi
   140055b5c:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140055b5d:	(bad)  
   140055b5e:	add    edi,edi
   140055b60:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140055b61:	pop    rdi
   140055b62:	add    edi,edi
   140055b64:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140055b65:	pop    rdi
   140055b66:	add    bh,bh
   140055b68:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140055b69:	pop    rdi
   140055b6a:	add    bh,bh
   140055b6c:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140055b6d:	pop    rsi
   140055b6e:	add    bh,bh
   140055b70:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140055b71:	pop    rsi
   140055b72:	add    bh,bh
   140055b74:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140055b75:	pop    rsi
   140055b76:	add    bh,bh
   140055b78:	movabs ds:0xa2ff025da2ff025d,eax
   140055b81:	pop    rbp
   140055b82:	add    bh,bh
   140055b84:	movabs eax,ds:0xa0ff025ca1ff025d
   140055b8d:	pop    rsp
   140055b8e:	add    bh,bh
   140055b90:	movabs al,ds:0x9fff025b9fff025c
   140055b99:	pop    rbx
   140055b9a:	add    bh,bh
   140055b9c:	sahf   
   140055b9d:	pop    rbx
   140055b9e:	add    bh,bh
   140055ba0:	sahf   
   140055ba1:	pop    rdx
   140055ba2:	add    bh,bh
   140055ba4:	popf   
   140055ba5:	pop    rdx
   140055ba6:	add    edi,edi
   140055ba8:	popf   
   140055ba9:	pop    rdx
   140055baa:	add    edi,edi
   140055bac:	pushf  
   140055bad:	pop    rcx
   140055bae:	add    edi,edi
   140055bb0:	pushf  
   140055bb1:	pop    rcx
   140055bb2:	add    edi,edi
   140055bb4:	fwait
   140055bb5:	pop    rcx
   140055bb6:	add    edi,edi
   140055bb8:	fwait
   140055bb9:	pop    rax
   140055bba:	add    edi,edi
   140055bbc:	(bad)  
   140055bbd:	pop    rax
   140055bbe:	add    edi,edi
   140055bc0:	(bad)  
   140055bc1:	pop    rax
   140055bc2:	add    edi,edi
   140055bc4:	cdq    
   140055bc5:	push   rdi
   140055bc6:	add    edi,edi
   140055bc8:	cwde   
   140055bc9:	push   rdi
   140055bca:	add    edi,edi
   140055bcc:	cwde   
   140055bcd:	push   rdi
   140055bce:	add    edi,edi
   140055bd0:	cwde   
   140055bd1:	push   rdi
   140055bd2:	add    edi,edi
   140055bd4:	xchg   edi,eax
   140055bd5:	push   rsi
   140055bd6:	add    edi,edi
   140055bd8:	xchg   esi,eax
   140055bd9:	push   rsi
   140055bda:	add    edi,edi
   140055bdc:	xchg   esi,eax
   140055bdd:	push   rsi
   140055bde:	add    edi,edi
   140055be0:	xchg   ebp,eax
   140055be1:	push   rbp
   140055be2:	add    edi,edi
   140055be4:	xchg   ebp,eax
   140055be5:	push   rbp
   140055be6:	add    al,0xff
   140055be8:	xchg   esp,eax
   140055be9:	push   rbp
   140055bea:	add    al,0xff
   140055bec:	xchg   esp,eax
   140055bed:	push   rsp
   140055bee:	add    al,0xff
   140055bf0:	xchg   ebx,eax
   140055bf1:	push   rsp
   140055bf2:	add    al,0xff
   140055bf4:	xchg   ebx,eax
   140055bf5:	push   rsp
   140055bf6:	add    al,0xff
   140055bf8:	xchg   edx,eax
   140055bf9:	push   rbx
   140055bfa:	add    al,0xff
   140055bfc:	xchg   edx,eax
   140055bfd:	push   rbx
   140055bfe:	add    al,0xff
   140055c00:	xchg   ecx,eax
   140055c01:	push   rbx
   140055c02:	add    al,0xff
   140055c04:	xchg   ecx,eax
   140055c05:	push   rdx
   140055c06:	add    al,0xff
   140055c08:	nop
   140055c09:	push   rdx
   140055c0a:	add    al,0xff
   140055c0c:	nop
   140055c0d:	push   rdx
   140055c0e:	add    al,0xff
   140055c10:	(bad)  
   140055c11:	push   rdx
   140055c12:	add    al,0xff
   140055c14:	mov    ss,WORD PTR [rcx+0x4]
   140055c17:	dec    DWORD PTR [rsi-0x7100fbaf]
   140055c1d:	push   rcx
   140055c1e:	add    al,0xff
   140055c20:	lea    edx,[rax+0x4]
   140055c23:	dec    DWORD PTR [rax+rdx*2+0x508cff05]
   140055c2a:	add    eax,0x54f8bff
   140055c2f:	dec    DWORD PTR [rbx-0x7500fab1]
   140055c35:	rex.WRXB add rax,0x54e8aff
   140055c3b:	dec    DWORD PTR [rcx-0x7600fab2]
   140055c41:	rex.WRX add rax,0x54e88ff
   140055c47:	add    BYTE PTR [rax],al
	...
   140055c86:	add    BYTE PTR [rax],al
   140055c88:	rex.WRX xor BYTE PTR [rax+r10*1+0x61],r8b
   140055c8d:	cmp    eax,0x3c5cdf3a
   140055c92:	call   FWORD PTR ds:[rbx+0x3b]
   140055c96:	call   FWORD PTR ds:[rax+0x39]
   140055c9a:	(bad)  
   140055c9b:	call   QWORD PTR [rbp+0x36]
   140055c9e:	call   QWORD PTR [r10+0x34]
   140055ca2:	rex.X dec DWORD PTR [rsi+0x31]
   140055ca6:	rex.XB dec DWORD PTR [r10+0x2e]
   140055caa:	rex.R inc DWORD PTR [rsi+0x2b]
   140055cae:	rex.RB call QWORD PTR [r15+0x38]
   140055cb2:	call   QWORD PTR [r9+0x27ff3763]
   140055cb9:	sbb    dl,BYTE PTR [rcx-0x1]
   140055cbc:	sbb    BYTE PTR [rsi],dl
   140055cbe:	call   FWORD PTR [edx]
   140055cc1:	sbb    bh,BYTE PTR [rcx-0x1]
   140055cc4:	sbb    al,0x1f
   140055cc6:	mov    edi,edi
   140055cc8:	and    DWORD PTR [rbx],esp
   140055cca:	movabs ds:0xcd3d27ffbb2925ff,eax
   140055cd3:	jmp    FWORD PTR [rax]
   140055cd5:	push   rsp
   140055cd6:	(bad)  
   140055cd8:	sub    BYTE PTR [rdx-0x18],ah
   140055cdb:	jmp    FWORD PTR [rdx]
   140055cdd:	jnp    0x140055cc7
   140055cdf:	jmp    FWORD PTR [rsp+rbx*4]
   140055ce2:	(bad)  
   140055ce3:	jmp    FWORD PTR [rip+0x2cffeaa5]        # 0x16d05478e
   140055ce9:	sahf   
   140055cea:	(bad)  
   140055ceb:	jmp    FWORD PTR [rbx]
   140055ced:	mov    ecx,ebp
   140055cef:	jmp    FWORD PTR [rcx]
   140055cf1:	ins    BYTE PTR es:[rdi],dx
   140055cf2:	jmp    0x1266585f6
   140055cf7:	jmp    QWORD PTR [rdi]
   140055cf9:	rex.WX xlat BYTE PTR ds:[rbx]
   140055cfb:	jmp    QWORD PTR [rsi]
   140055cfd:	xor    esp,eax
   140055cff:	jmp    QWORD PTR ds:0x2321ffb2
   140055d06:	movabs ds:0x66b2ff394d7bff,eax
   140055d0f:	push   QWORD PTR [rcx-0x4e00ff9a]
   140055d15:	data16 add bh,bh
   140055d18:	mov    al,0x65
   140055d1a:	add    bh,bh
   140055d1c:	mov    al,0x65
   140055d1e:	add    bh,bh
   140055d20:	scas   eax,DWORD PTR es:[rdi]
   140055d21:	gs add bh,bh
   140055d24:	scas   eax,DWORD PTR es:[rdi]
   140055d25:	fs add bh,bh
   140055d28:	scas   al,BYTE PTR es:[rdi]
   140055d29:	fs add edi,edi
   140055d2c:	scas   al,BYTE PTR es:[rdi]
   140055d2d:	fs add edi,edi
   140055d30:	lods   eax,DWORD PTR ds:[rsi]
   140055d31:	movsxd eax,DWORD PTR [rcx]
   140055d33:	jmp    FWORD PTR [rbp-0x5300fe9d]
   140055d39:	movsxd eax,DWORD PTR [rcx]
   140055d3b:	jmp    FWORD PTR [rbx-0x5400fe9e]
   140055d41:	(bad)  {k3}{z}
   140055d46:	add    edi,edi
   140055d48:	stos   BYTE PTR es:[rdi],al
   140055d49:	(bad)  {k1}{z}
   140055d4e:	add    edi,edi
   140055d50:	test   eax,0xa8ff0161
   140055d55:	(bad)  
   140055d56:	add    edi,edi
   140055d58:	test   al,0x60
   140055d5a:	add    edi,edi
   140055d5c:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140055d5d:	(bad)  
   140055d5e:	add    edi,edi
   140055d60:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140055d61:	(bad)  
   140055d62:	add    edi,edi
   140055d64:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140055d65:	pop    rdi
   140055d66:	add    edi,edi
   140055d68:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140055d69:	pop    rdi
   140055d6a:	add    bh,bh
   140055d6c:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140055d6d:	pop    rdi
   140055d6e:	add    bh,bh
   140055d70:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140055d71:	pop    rsi
   140055d72:	add    bh,bh
   140055d74:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140055d75:	pop    rsi
   140055d76:	add    bh,bh
   140055d78:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140055d79:	pop    rsi
   140055d7a:	add    bh,bh
   140055d7c:	movabs ds:0xa2ff025da2ff025d,eax
   140055d85:	pop    rbp
   140055d86:	add    bh,bh
   140055d88:	movabs eax,ds:0xa0ff025ca1ff025d
   140055d91:	pop    rsp
   140055d92:	add    bh,bh
   140055d94:	movabs al,ds:0x9fff025b9fff025c
   140055d9d:	pop    rbx
   140055d9e:	add    bh,bh
   140055da0:	sahf   
   140055da1:	pop    rbx
   140055da2:	add    bh,bh
   140055da4:	sahf   
   140055da5:	pop    rdx
   140055da6:	add    bh,bh
   140055da8:	popf   
   140055da9:	pop    rdx
   140055daa:	add    edi,edi
   140055dac:	popf   
   140055dad:	pop    rdx
   140055dae:	add    edi,edi
   140055db0:	pushf  
   140055db1:	pop    rcx
   140055db2:	add    edi,edi
   140055db4:	pushf  
   140055db5:	pop    rcx
   140055db6:	add    edi,edi
   140055db8:	fwait
   140055db9:	pop    rcx
   140055dba:	add    edi,edi
   140055dbc:	fwait
   140055dbd:	pop    rax
   140055dbe:	add    edi,edi
   140055dc0:	(bad)  
   140055dc1:	pop    rax
   140055dc2:	add    edi,edi
   140055dc4:	(bad)  
   140055dc5:	pop    rax
   140055dc6:	add    edi,edi
   140055dc8:	cdq    
   140055dc9:	push   rdi
   140055dca:	add    edi,edi
   140055dcc:	cwde   
   140055dcd:	push   rdi
   140055dce:	add    edi,edi
   140055dd0:	cwde   
   140055dd1:	push   rdi
   140055dd2:	add    edi,edi
   140055dd4:	cwde   
   140055dd5:	push   rdi
   140055dd6:	add    edi,edi
   140055dd8:	xchg   edi,eax
   140055dd9:	push   rsi
   140055dda:	add    edi,edi
   140055ddc:	xchg   esi,eax
   140055ddd:	push   rsi
   140055dde:	add    edi,edi
   140055de0:	xchg   esi,eax
   140055de1:	push   rsi
   140055de2:	add    edi,edi
   140055de4:	xchg   ebp,eax
   140055de5:	push   rbp
   140055de6:	add    edi,edi
   140055de8:	xchg   ebp,eax
   140055de9:	push   rbp
   140055dea:	add    al,0xff
   140055dec:	xchg   esp,eax
   140055ded:	push   rbp
   140055dee:	add    al,0xff
   140055df0:	xchg   esp,eax
   140055df1:	push   rsp
   140055df2:	add    al,0xff
   140055df4:	xchg   ebx,eax
   140055df5:	push   rsp
   140055df6:	add    al,0xff
   140055df8:	xchg   ebx,eax
   140055df9:	push   rsp
   140055dfa:	add    al,0xff
   140055dfc:	xchg   edx,eax
   140055dfd:	push   rbx
   140055dfe:	add    al,0xff
   140055e00:	xchg   edx,eax
   140055e01:	push   rbx
   140055e02:	add    al,0xff
   140055e04:	xchg   ecx,eax
   140055e05:	push   rbx
   140055e06:	add    al,0xff
   140055e08:	xchg   ecx,eax
   140055e09:	push   rdx
   140055e0a:	add    al,0xff
   140055e0c:	nop
   140055e0d:	push   rdx
   140055e0e:	add    al,0xff
   140055e10:	nop
   140055e11:	push   rdx
   140055e12:	add    al,0xff
   140055e14:	(bad)  
   140055e15:	push   rdx
   140055e16:	add    al,0xff
   140055e18:	mov    ss,WORD PTR [rcx+0x4]
   140055e1b:	dec    DWORD PTR [rsi-0x7100fbaf]
   140055e21:	push   rcx
   140055e22:	add    al,0xff
   140055e24:	lea    edx,[rax+0x4]
   140055e27:	dec    DWORD PTR [rax+rdx*2+0x508cff05]
   140055e2e:	add    eax,0x54f8bff
   140055e33:	dec    DWORD PTR [rbx-0x7500fab1]
   140055e39:	rex.WRXB add rax,0x54e8aff
   140055e3f:	dec    DWORD PTR [rcx+0xdf054e]
	...
   140055e89:	add    BYTE PTR [rax],al
   140055e8b:	add    BYTE PTR [rsi-0x717feca0],bl
   140055e91:	pop    rsi
   140055e92:	sub    bh,bh
   140055e94:	xchg   BYTE PTR [rdx+0x2f],bl
   140055e97:	(bad)  
   140055e98:	jp     0x140055eec
   140055e9a:	xor    edi,edi
   140055e9c:	jae    0x140055eeb
   140055e9e:	xor    eax,0x38486dff
   140055ea3:	jmp    QWORD PTR [rdi+0x44]
   140055ea6:	cmp    bh,bh
   140055ea8:	(bad)  
   140055ea9:	(bad)  
   140055eaa:	cmp    al,0xff
   140055eac:	pop    rdx
   140055ead:	cmp    bh,BYTE PTR [rdi]
   140055eaf:	call   QWORD PTR [rbp+rsi*1+0x41]
   140055eb3:	call   QWORD PTR [rbx+0x4eff3763]
   140055eb9:	xor    eax,DWORD PTR [rdi+rdi*8+0x1a]
   140055ebd:	adc    eax,0x191aff5e
   140055ec2:	jae    0x140055ec3
   140055ec4:	sbb    al,0x1e
   140055ec6:	xchg   bh,bh
   140055ec8:	and    BYTE PTR [rdx],ah
   140055eca:	sahf   
   140055ecb:	jmp    QWORD PTR [rip+0x27ffb727]        # 0x1680515f8
   140055ed1:	cmp    cl,bl
   140055ed3:	jmp    FWORD PTR [rax]
   140055ed5:	push   rdx
   140055ed6:	(bad)  
   140055ed8:	sub    BYTE PTR [rdx-0x19],ah
   140055edb:	jmp    FWORD PTR [rbx]
   140055edd:	mov    cl,ch
   140055edf:	jmp    FWORD PTR [rip+0x2effeaa5]        # 0x16f05498a
   140055ee5:	scas   al,BYTE PTR es:[rdi]
   140055ee6:	jmp    0x140055ee7
   140055ee8:	sub    eax,0x2bffeaa5
   140055eed:	(bad)  
   140055ef1:	ins    BYTE PTR es:[rdi],dx
   140055ef2:	jmp    0x1256187f6
   140055ef7:	jmp    QWORD PTR [rdi]
   140055ef9:	rex.RB sar r15d,cl
   140055efc:	es sub al,0xbf
   140055eff:	jmp    QWORD PTR [rbx]
   140055f01:	and    eax,0x2220ffae
   140055f06:	sahf   
   140055f07:	jmp    FWORD PTR [rdx-0x4d00f69d]
   140055f0d:	addr32 add bh,bh
   140055f10:	mov    dl,0x66
   140055f12:	add    bh,bh
   140055f14:	mov    cl,0x66
   140055f16:	add    bh,bh
   140055f18:	mov    cl,0x66
   140055f1a:	add    bh,bh
   140055f1c:	mov    al,0x65
   140055f1e:	add    bh,bh
   140055f20:	mov    al,0x65
   140055f22:	add    bh,bh
   140055f24:	scas   eax,DWORD PTR es:[rdi]
   140055f25:	gs add bh,bh
   140055f28:	scas   eax,DWORD PTR es:[rdi]
   140055f29:	fs add bh,bh
   140055f2c:	scas   al,BYTE PTR es:[rdi]
   140055f2d:	fs add edi,edi
   140055f30:	scas   al,BYTE PTR es:[rdi]
   140055f31:	fs add edi,edi
   140055f34:	lods   eax,DWORD PTR ds:[rsi]
   140055f35:	movsxd eax,DWORD PTR [rcx]
   140055f37:	jmp    FWORD PTR [rbp-0x5300fe9d]
   140055f3d:	movsxd eax,DWORD PTR [rcx]
   140055f3f:	jmp    FWORD PTR [rbx-0x5400fe9e]
   140055f45:	(bad)  {k3}{z}
   140055f4a:	add    edi,edi
   140055f4c:	stos   BYTE PTR es:[rdi],al
   140055f4d:	(bad)  {k1}{z}
   140055f52:	add    edi,edi
   140055f54:	test   eax,0xa8ff0161
   140055f59:	(bad)  
   140055f5a:	add    edi,edi
   140055f5c:	test   al,0x60
   140055f5e:	add    edi,edi
   140055f60:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140055f61:	(bad)  
   140055f62:	add    edi,edi
   140055f64:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140055f65:	(bad)  
   140055f66:	add    edi,edi
   140055f68:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140055f69:	pop    rdi
   140055f6a:	add    edi,edi
   140055f6c:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140055f6d:	pop    rdi
   140055f6e:	add    bh,bh
   140055f70:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140055f71:	pop    rdi
   140055f72:	add    bh,bh
   140055f74:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140055f75:	pop    rsi
   140055f76:	add    bh,bh
   140055f78:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140055f79:	pop    rsi
   140055f7a:	add    bh,bh
   140055f7c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140055f7d:	pop    rsi
   140055f7e:	add    bh,bh
   140055f80:	movabs ds:0xa2ff025da2ff025d,eax
   140055f89:	pop    rbp
   140055f8a:	add    bh,bh
   140055f8c:	movabs eax,ds:0xa0ff025ca1ff025d
   140055f95:	pop    rsp
   140055f96:	add    bh,bh
   140055f98:	movabs al,ds:0x9fff025b9fff025c
   140055fa1:	pop    rbx
   140055fa2:	add    bh,bh
   140055fa4:	sahf   
   140055fa5:	pop    rbx
   140055fa6:	add    bh,bh
   140055fa8:	sahf   
   140055fa9:	pop    rdx
   140055faa:	add    bh,bh
   140055fac:	popf   
   140055fad:	pop    rdx
   140055fae:	add    edi,edi
   140055fb0:	popf   
   140055fb1:	pop    rdx
   140055fb2:	add    edi,edi
   140055fb4:	pushf  
   140055fb5:	pop    rcx
   140055fb6:	add    edi,edi
   140055fb8:	pushf  
   140055fb9:	pop    rcx
   140055fba:	add    edi,edi
   140055fbc:	fwait
   140055fbd:	pop    rcx
   140055fbe:	add    edi,edi
   140055fc0:	fwait
   140055fc1:	pop    rax
   140055fc2:	add    edi,edi
   140055fc4:	(bad)  
   140055fc5:	pop    rax
   140055fc6:	add    edi,edi
   140055fc8:	(bad)  
   140055fc9:	pop    rax
   140055fca:	add    edi,edi
   140055fcc:	cdq    
   140055fcd:	push   rdi
   140055fce:	add    edi,edi
   140055fd0:	cwde   
   140055fd1:	push   rdi
   140055fd2:	add    edi,edi
   140055fd4:	cwde   
   140055fd5:	push   rdi
   140055fd6:	add    edi,edi
   140055fd8:	cwde   
   140055fd9:	push   rdi
   140055fda:	add    edi,edi
   140055fdc:	xchg   edi,eax
   140055fdd:	push   rsi
   140055fde:	add    edi,edi
   140055fe0:	xchg   esi,eax
   140055fe1:	push   rsi
   140055fe2:	add    edi,edi
   140055fe4:	xchg   esi,eax
   140055fe5:	push   rsi
   140055fe6:	add    edi,edi
   140055fe8:	xchg   ebp,eax
   140055fe9:	push   rbp
   140055fea:	add    edi,edi
   140055fec:	xchg   ebp,eax
   140055fed:	push   rbp
   140055fee:	add    al,0xff
   140055ff0:	xchg   esp,eax
   140055ff1:	push   rbp
   140055ff2:	add    al,0xff
   140055ff4:	xchg   esp,eax
   140055ff5:	push   rsp
   140055ff6:	add    al,0xff
   140055ff8:	xchg   ebx,eax
   140055ff9:	push   rsp
   140055ffa:	add    al,0xff
   140055ffc:	xchg   ebx,eax
   140055ffd:	push   rsp
   140055ffe:	add    al,0xff
   140056000:	xchg   edx,eax
   140056001:	push   rbx
   140056002:	add    al,0xff
   140056004:	xchg   edx,eax
   140056005:	push   rbx
   140056006:	add    al,0xff
   140056008:	xchg   ecx,eax
   140056009:	push   rbx
   14005600a:	add    al,0xff
   14005600c:	xchg   ecx,eax
   14005600d:	push   rdx
   14005600e:	add    al,0xff
   140056010:	nop
   140056011:	push   rdx
   140056012:	add    al,0xff
   140056014:	nop
   140056015:	push   rdx
   140056016:	add    al,0xff
   140056018:	(bad)  
   140056019:	push   rdx
   14005601a:	add    al,0xff
   14005601c:	mov    ss,WORD PTR [rcx+0x4]
   14005601f:	dec    DWORD PTR [rsi-0x7100fbaf]
   140056025:	push   rcx
   140056026:	add    al,0xff
   140056028:	lea    edx,[rax+0x4]
   14005602b:	dec    DWORD PTR [rax+rdx*2+0x508cff05]
   140056032:	add    eax,0x54f8bff
   140056037:	dec    DWORD PTR [rbx-0x7500fab1]
   14005603d:	rex.WRXB add rax,0x54e8aff
   140056043:	add    BYTE PTR [rax],0x0
	...
   14005608a:	add    BYTE PTR [rax],al
   14005608c:	mov    bl,0x67
   14005608e:	add    BYTE PTR [rax],dl
   140056090:	mov    ecx,0xc8ef0e72
   140056095:	mov    ebp,DWORD PTR [rsi]
   140056097:	inc    ecx
   140056099:	test   DWORD PTR [rdx],ebp
   14005609b:	jmp    FWORD PTR [rbp-0x6900d88a]
   1400560a1:	gs sub edi,edi
   1400560a4:	test   DWORD PTR [rdx+0x2e],ebx
   1400560a7:	(bad)  
   1400560a8:	jp     0x1400560fd
   1400560aa:	xor    bh,bh
   1400560ac:	jno    0x1400560f9
   1400560ae:	jmp    FWORD PTR ss:[rax+0x45]
   1400560b2:	cmp    edi,edi
   1400560b4:	ins    DWORD PTR es:[rdi],dx
   1400560b5:	cmp    rdi,rdi
   1400560b8:	xchg   ecx,eax
   1400560b9:	(bad)  
   1400560ba:	(bad)  
   1400560bb:	jmp    QWORD PTR [rbx]
   1400560bd:	sbb    BYTE PTR [rbx-0x1],dl
   1400560c0:	sbb    DWORD PTR [rdi],edx
   1400560c2:	imul   edi,edi,0x1b
   1400560c5:	sbb    eax,0x221fff81
   1400560ca:	cwde   
   1400560cb:	jmp    QWORD PTR [rsi+riz*1]
   1400560ce:	mov    dl,0xff
   1400560d0:	(bad)  
   1400560d1:	ss enter 0x28ff,0x4f
   1400560d6:	fdiv   st(7),st
   1400560d8:	sub    BYTE PTR [rdi+riz*8-0x1],ah
   1400560dc:	sub    edx,DWORD PTR [rdx+rbp*8-0x1451d101]
   1400560e3:	jmp    FWORD PTR [rdi]
   1400560e5:	mov    ch,0xec
   1400560e7:	jmp    FWORD PTR [rsi]
   1400560e9:	lods   al,BYTE PTR ds:[rsi]
   1400560ea:	jmp    0x1400560eb
   1400560ec:	sub    al,0x96
   1400560ee:	(bad)  
   1400560ef:	jmp    FWORD PTR [rcx]
   1400560f1:	ins    DWORD PTR es:[rdi],dx
   1400560f2:	call   0x1225e89f6
   1400560f7:	jmp    QWORD PTR [rdi]
   1400560f9:	(bad)  
   1400560fa:	iret   
   1400560fb:	jmp    QWORD PTR [rip+0x22ffbb29]        # 0x163051c2a
   140056101:	and    al,0xa9
   140056103:	dec    DWORD PTR [rbp+0x38]
   140056106:	push   0xffffffffffffffff
   140056108:	mov    bl,0x67
   14005610a:	add    bh,bh
   14005610c:	mov    bl,0x67
   14005610e:	add    bh,bh
   140056110:	mov    dl,0x67
   140056112:	add    bh,bh
   140056114:	mov    dl,0x66
   140056116:	add    bh,bh
   140056118:	mov    cl,0x66
   14005611a:	add    bh,bh
   14005611c:	mov    cl,0x66
   14005611e:	add    bh,bh
   140056120:	mov    al,0x65
   140056122:	add    bh,bh
   140056124:	mov    al,0x65
   140056126:	add    bh,bh
   140056128:	scas   eax,DWORD PTR es:[rdi]
   140056129:	gs add bh,bh
   14005612c:	scas   eax,DWORD PTR es:[rdi]
   14005612d:	fs add bh,bh
   140056130:	scas   al,BYTE PTR es:[rdi]
   140056131:	fs add edi,edi
   140056134:	scas   al,BYTE PTR es:[rdi]
   140056135:	fs add edi,edi
   140056138:	lods   eax,DWORD PTR ds:[rsi]
   140056139:	movsxd eax,DWORD PTR [rcx]
   14005613b:	jmp    FWORD PTR [rbp-0x5300fe9d]
   140056141:	movsxd eax,DWORD PTR [rcx]
   140056143:	jmp    FWORD PTR [rbx-0x5400fe9e]
   140056149:	(bad)  {k3}{z}
   14005614e:	add    edi,edi
   140056150:	stos   BYTE PTR es:[rdi],al
   140056151:	(bad)  {k1}{z}
   140056156:	add    edi,edi
   140056158:	test   eax,0xa8ff0161
   14005615d:	(bad)  
   14005615e:	add    edi,edi
   140056160:	test   al,0x60
   140056162:	add    edi,edi
   140056164:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140056165:	(bad)  
   140056166:	add    edi,edi
   140056168:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140056169:	(bad)  
   14005616a:	add    edi,edi
   14005616c:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14005616d:	pop    rdi
   14005616e:	add    edi,edi
   140056170:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140056171:	pop    rdi
   140056172:	add    bh,bh
   140056174:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140056175:	pop    rdi
   140056176:	add    bh,bh
   140056178:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140056179:	pop    rsi
   14005617a:	add    bh,bh
   14005617c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14005617d:	pop    rsi
   14005617e:	add    bh,bh
   140056180:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140056181:	pop    rsi
   140056182:	add    bh,bh
   140056184:	movabs ds:0xa2ff025da2ff025d,eax
   14005618d:	pop    rbp
   14005618e:	add    bh,bh
   140056190:	movabs eax,ds:0xa0ff025ca1ff025d
   140056199:	pop    rsp
   14005619a:	add    bh,bh
   14005619c:	movabs al,ds:0x9fff025b9fff025c
   1400561a5:	pop    rbx
   1400561a6:	add    bh,bh
   1400561a8:	sahf   
   1400561a9:	pop    rbx
   1400561aa:	add    bh,bh
   1400561ac:	sahf   
   1400561ad:	pop    rdx
   1400561ae:	add    bh,bh
   1400561b0:	popf   
   1400561b1:	pop    rdx
   1400561b2:	add    edi,edi
   1400561b4:	popf   
   1400561b5:	pop    rdx
   1400561b6:	add    edi,edi
   1400561b8:	pushf  
   1400561b9:	pop    rcx
   1400561ba:	add    edi,edi
   1400561bc:	pushf  
   1400561bd:	pop    rcx
   1400561be:	add    edi,edi
   1400561c0:	fwait
   1400561c1:	pop    rcx
   1400561c2:	add    edi,edi
   1400561c4:	fwait
   1400561c5:	pop    rax
   1400561c6:	add    edi,edi
   1400561c8:	(bad)  
   1400561c9:	pop    rax
   1400561ca:	add    edi,edi
   1400561cc:	(bad)  
   1400561cd:	pop    rax
   1400561ce:	add    edi,edi
   1400561d0:	cdq    
   1400561d1:	push   rdi
   1400561d2:	add    edi,edi
   1400561d4:	cwde   
   1400561d5:	push   rdi
   1400561d6:	add    edi,edi
   1400561d8:	cwde   
   1400561d9:	push   rdi
   1400561da:	add    edi,edi
   1400561dc:	cwde   
   1400561dd:	push   rdi
   1400561de:	add    edi,edi
   1400561e0:	xchg   edi,eax
   1400561e1:	push   rsi
   1400561e2:	add    edi,edi
   1400561e4:	xchg   esi,eax
   1400561e5:	push   rsi
   1400561e6:	add    edi,edi
   1400561e8:	xchg   esi,eax
   1400561e9:	push   rsi
   1400561ea:	add    edi,edi
   1400561ec:	xchg   ebp,eax
   1400561ed:	push   rbp
   1400561ee:	add    edi,edi
   1400561f0:	xchg   ebp,eax
   1400561f1:	push   rbp
   1400561f2:	add    al,0xff
   1400561f4:	xchg   esp,eax
   1400561f5:	push   rbp
   1400561f6:	add    al,0xff
   1400561f8:	xchg   esp,eax
   1400561f9:	push   rsp
   1400561fa:	add    al,0xff
   1400561fc:	xchg   ebx,eax
   1400561fd:	push   rsp
   1400561fe:	add    al,0xff
   140056200:	xchg   ebx,eax
   140056201:	push   rsp
   140056202:	add    al,0xff
   140056204:	xchg   edx,eax
   140056205:	push   rbx
   140056206:	add    al,0xff
   140056208:	xchg   edx,eax
   140056209:	push   rbx
   14005620a:	add    al,0xff
   14005620c:	xchg   ecx,eax
   14005620d:	push   rbx
   14005620e:	add    al,0xff
   140056210:	xchg   ecx,eax
   140056211:	push   rdx
   140056212:	add    al,0xff
   140056214:	nop
   140056215:	push   rdx
   140056216:	add    al,0xff
   140056218:	nop
   140056219:	push   rdx
   14005621a:	add    al,0xff
   14005621c:	(bad)  
   14005621d:	push   rdx
   14005621e:	add    al,0xff
   140056220:	mov    ss,WORD PTR [rcx+0x4]
   140056223:	dec    DWORD PTR [rsi-0x7100fbaf]
   140056229:	push   rcx
   14005622a:	add    al,0xff
   14005622c:	lea    edx,[rax+0x4]
   14005622f:	dec    DWORD PTR [rax+rdx*2+0x508cff05]
   140056236:	add    eax,0x54f8bff
   14005623b:	dec    DWORD PTR [rbx-0x7510fab1]
   140056241:	rex.WRXB add rax,0x10
	...
   14005628f:	add    BYTE PTR [rbx-0x427fff99],dh
   140056295:	ja     0x1400562ab
   140056297:	dec    esi
   140056299:	xchg   edx,eax
   14005629a:	ss dec ebp
   14005629d:	xchg   ecx,eax
   14005629e:	xor    eax,0x2c89c6ff
   1400562a3:	push   QWORD PTR [rbp-0x6100dc85]
   1400562a9:	push   0x25
   1400562ab:	dec    DWORD PTR [rsi+0x7fff2a5f]
   1400562b1:	push   rsi
   1400562b2:	xor    bh,bh
   1400562b4:	jb     0x140056303
   1400562b6:	jmp    QWORD PTR ss:[rax+0x43ff346d]
   1400562bd:	sub    al,0x47
   1400562bf:	call   FWORD PTR [rcx]
   1400562c1:	adc    eax,0x1b1aff62
   1400562c6:	jnp    0x1400562c7
   1400562c8:	(bad)  
   1400562c9:	and    DWORD PTR [rbx-0x51dadc01],edx
   1400562cf:	jmp    QWORD PTR [rsi]
   1400562d1:	xor    al,ch
   1400562d3:	jmp    QWORD PTR [rdi]
   1400562d5:	rex.WR fcos 
   1400562d8:	sub    BYTE PTR [rax-0x19],ch
   1400562db:	jmp    FWORD PTR [rbx*4-0x49d00016]
   1400562e2:	in     al,dx
   1400562e3:	jmp    FWORD PTR [rdi]
   1400562e5:	mov    esi,0xb22effec
   1400562ea:	jmp    0x1400562eb
   1400562ec:	sub    al,0x9b
   1400562ee:	(bad)  
   1400562ef:	jmp    FWORD PTR [rcx]
   1400562f1:	ins    DWORD PTR es:[rdi],dx
   1400562f2:	call   0x1205a8bf6
   1400562f7:	jmp    QWORD PTR [rdi]
   1400562f9:	cmp    cl,dl
   1400562fb:	jmp    QWORD PTR [rip+0x21ffb626]        # 0x162051927
   140056301:	and    esp,DWORD PTR [rbx+0x394d7bff]
   140056307:	push   QWORD PTR [rbx-0x4c00ff99]
   14005630d:	addr32 add bh,bh
   140056310:	mov    bl,0x67
   140056312:	add    bh,bh
   140056314:	mov    dl,0x67
   140056316:	add    bh,bh
   140056318:	mov    dl,0x66
   14005631a:	add    bh,bh
   14005631c:	mov    cl,0x66
   14005631e:	add    bh,bh
   140056320:	mov    cl,0x66
   140056322:	add    bh,bh
   140056324:	mov    al,0x65
   140056326:	add    bh,bh
   140056328:	mov    al,0x65
   14005632a:	add    bh,bh
   14005632c:	scas   eax,DWORD PTR es:[rdi]
   14005632d:	gs add bh,bh
   140056330:	scas   eax,DWORD PTR es:[rdi]
   140056331:	fs add bh,bh
   140056334:	scas   al,BYTE PTR es:[rdi]
   140056335:	fs add edi,edi
   140056338:	scas   al,BYTE PTR es:[rdi]
   140056339:	fs add edi,edi
   14005633c:	lods   eax,DWORD PTR ds:[rsi]
   14005633d:	movsxd eax,DWORD PTR [rcx]
   14005633f:	jmp    FWORD PTR [rbp-0x5300fe9d]
   140056345:	movsxd eax,DWORD PTR [rcx]
   140056347:	jmp    FWORD PTR [rbx-0x5400fe9e]
   14005634d:	(bad)  {k3}{z}
   140056352:	add    edi,edi
   140056354:	stos   BYTE PTR es:[rdi],al
   140056355:	(bad)  {k1}{z}
   14005635a:	add    edi,edi
   14005635c:	test   eax,0xa8ff0161
   140056361:	(bad)  
   140056362:	add    edi,edi
   140056364:	test   al,0x60
   140056366:	add    edi,edi
   140056368:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140056369:	(bad)  
   14005636a:	add    edi,edi
   14005636c:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14005636d:	(bad)  
   14005636e:	add    edi,edi
   140056370:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140056371:	pop    rdi
   140056372:	add    edi,edi
   140056374:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140056375:	pop    rdi
   140056376:	add    bh,bh
   140056378:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140056379:	pop    rdi
   14005637a:	add    bh,bh
   14005637c:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14005637d:	pop    rsi
   14005637e:	add    bh,bh
   140056380:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140056381:	pop    rsi
   140056382:	add    bh,bh
   140056384:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140056385:	pop    rsi
   140056386:	add    bh,bh
   140056388:	movabs ds:0xa2ff025da2ff025d,eax
   140056391:	pop    rbp
   140056392:	add    bh,bh
   140056394:	movabs eax,ds:0xa0ff025ca1ff025d
   14005639d:	pop    rsp
   14005639e:	add    bh,bh
   1400563a0:	movabs al,ds:0x9fff025b9fff025c
   1400563a9:	pop    rbx
   1400563aa:	add    bh,bh
   1400563ac:	sahf   
   1400563ad:	pop    rbx
   1400563ae:	add    bh,bh
   1400563b0:	sahf   
   1400563b1:	pop    rdx
   1400563b2:	add    bh,bh
   1400563b4:	popf   
   1400563b5:	pop    rdx
   1400563b6:	add    edi,edi
   1400563b8:	popf   
   1400563b9:	pop    rdx
   1400563ba:	add    edi,edi
   1400563bc:	pushf  
   1400563bd:	pop    rcx
   1400563be:	add    edi,edi
   1400563c0:	pushf  
   1400563c1:	pop    rcx
   1400563c2:	add    edi,edi
   1400563c4:	fwait
   1400563c5:	pop    rcx
   1400563c6:	add    edi,edi
   1400563c8:	fwait
   1400563c9:	pop    rax
   1400563ca:	add    edi,edi
   1400563cc:	(bad)  
   1400563cd:	pop    rax
   1400563ce:	add    edi,edi
   1400563d0:	(bad)  
   1400563d1:	pop    rax
   1400563d2:	add    edi,edi
   1400563d4:	cdq    
   1400563d5:	push   rdi
   1400563d6:	add    edi,edi
   1400563d8:	cwde   
   1400563d9:	push   rdi
   1400563da:	add    edi,edi
   1400563dc:	cwde   
   1400563dd:	push   rdi
   1400563de:	add    edi,edi
   1400563e0:	cwde   
   1400563e1:	push   rdi
   1400563e2:	add    edi,edi
   1400563e4:	xchg   edi,eax
   1400563e5:	push   rsi
   1400563e6:	add    edi,edi
   1400563e8:	xchg   esi,eax
   1400563e9:	push   rsi
   1400563ea:	add    edi,edi
   1400563ec:	xchg   esi,eax
   1400563ed:	push   rsi
   1400563ee:	add    edi,edi
   1400563f0:	xchg   ebp,eax
   1400563f1:	push   rbp
   1400563f2:	add    edi,edi
   1400563f4:	xchg   ebp,eax
   1400563f5:	push   rbp
   1400563f6:	add    al,0xff
   1400563f8:	xchg   esp,eax
   1400563f9:	push   rbp
   1400563fa:	add    al,0xff
   1400563fc:	xchg   esp,eax
   1400563fd:	push   rsp
   1400563fe:	add    al,0xff
   140056400:	xchg   ebx,eax
   140056401:	push   rsp
   140056402:	add    al,0xff
   140056404:	xchg   ebx,eax
   140056405:	push   rsp
   140056406:	add    al,0xff
   140056408:	xchg   edx,eax
   140056409:	push   rbx
   14005640a:	add    al,0xff
   14005640c:	xchg   edx,eax
   14005640d:	push   rbx
   14005640e:	add    al,0xff
   140056410:	xchg   ecx,eax
   140056411:	push   rbx
   140056412:	add    al,0xff
   140056414:	xchg   ecx,eax
   140056415:	push   rdx
   140056416:	add    al,0xff
   140056418:	nop
   140056419:	push   rdx
   14005641a:	add    al,0xff
   14005641c:	nop
   14005641d:	push   rdx
   14005641e:	add    al,0xff
   140056420:	(bad)  
   140056421:	push   rdx
   140056422:	add    al,0xff
   140056424:	mov    ss,WORD PTR [rcx+0x4]
   140056427:	dec    DWORD PTR [rsi-0x7100fbaf]
   14005642d:	push   rcx
   14005642e:	add    al,0xff
   140056430:	lea    edx,[rax+0x4]
   140056433:	dec    DWORD PTR [rax+rdx*2+0x508cff05]
   14005643a:	add    eax,0x54f8bff
   14005643f:	add    BYTE PTR [rax],0x0
	...
   140056492:	add    BYTE PTR [rax],al
   140056494:	mov    bl,0x67
   140056496:	add    bh,cl
   140056498:	mov    esp,0xc7ff1376
   14005649d:	mov    ch,BYTE PTR [rdi+rdi*8]
   1400564a0:	(bad)  
   1400564a1:	mov    ch,BYTE PTR [rip+0x2786c3ff]        # 0x1678c28a6
   1400564a7:	(bad)  
   1400564a8:	mov    edx,0xabff207d
   1400564ad:	jae    0x1400564ce
   1400564af:	call   FWORD PTR [rbx-0x7500da98]
   1400564b5:	pop    rbp
   1400564b6:	sub    al,0xff
   1400564b8:	mov    BYTE PTR [rbx+0x33],bl
   1400564bb:	inc    DWORD PTR [rbp+0x1fff395a]
   1400564c1:	(bad)  
   1400564c2:	push   rdi
   1400564c3:	call   FWORD PTR [rdx]
   1400564c5:	sbb    DWORD PTR [rbx-0x1],esi
   1400564c8:	sbb    eax,0x22ff8d20
   1400564cd:	and    al,0xa8
   1400564cf:	jmp    QWORD PTR [rsi]
   1400564d1:	cs sar edi,0x27
   1400564d5:	rex.WB (bad) 
   1400564d7:	jmp    FWORD PTR [rcx]
   1400564d9:	ins    DWORD PTR es:[rdi],dx
   1400564da:	out    0xff,eax
   1400564dc:	sub    eax,0x2fffeaa5
   1400564e1:	mov    esi,0xc62fffec
   1400564e6:	in     al,dx
   1400564e7:	jmp    FWORD PTR [rdi]
   1400564e9:	mov    eax,0x9e2cffec
   1400564ee:	(bad)  
   1400564ef:	jmp    FWORD PTR [rcx]
   1400564f1:	ins    DWORD PTR es:[rdi],dx
   1400564f2:	call   0x11c558df6
   1400564f7:	jmp    QWORD PTR [rdi]
   1400564f9:	xor    eax,ebp
   1400564fb:	jmp    QWORD PTR [rbx]
   1400564fd:	and    eax,0x2729ffb0
   140056502:	xchg   esp,eax
   140056503:	push   QWORD PTR [rbx-0x4c00ff99]
   140056509:	addr32 add bh,bh
   14005650c:	mov    bl,0x67
   14005650e:	add    bh,bh
   140056510:	mov    bl,0x67
   140056512:	add    bh,bh
   140056514:	mov    bl,0x67
   140056516:	add    bh,bh
   140056518:	mov    dl,0x67
   14005651a:	add    bh,bh
   14005651c:	mov    dl,0x66
   14005651e:	add    bh,bh
   140056520:	mov    cl,0x66
   140056522:	add    bh,bh
   140056524:	mov    cl,0x66
   140056526:	add    bh,bh
   140056528:	mov    al,0x65
   14005652a:	add    bh,bh
   14005652c:	mov    al,0x65
   14005652e:	add    bh,bh
   140056530:	scas   eax,DWORD PTR es:[rdi]
   140056531:	gs add bh,bh
   140056534:	scas   eax,DWORD PTR es:[rdi]
   140056535:	fs add bh,bh
   140056538:	scas   al,BYTE PTR es:[rdi]
   140056539:	fs add edi,edi
   14005653c:	scas   al,BYTE PTR es:[rdi]
   14005653d:	fs add edi,edi
   140056540:	lods   eax,DWORD PTR ds:[rsi]
   140056541:	movsxd eax,DWORD PTR [rcx]
   140056543:	jmp    FWORD PTR [rbp-0x5300fe9d]
   140056549:	movsxd eax,DWORD PTR [rcx]
   14005654b:	jmp    FWORD PTR [rbx-0x5400fe9e]
   140056551:	(bad)  {k3}{z}
   140056556:	add    edi,edi
   140056558:	stos   BYTE PTR es:[rdi],al
   140056559:	(bad)  {k1}{z}
   14005655e:	add    edi,edi
   140056560:	test   eax,0xa8ff0161
   140056565:	(bad)  
   140056566:	add    edi,edi
   140056568:	test   al,0x60
   14005656a:	add    edi,edi
   14005656c:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14005656d:	(bad)  
   14005656e:	add    edi,edi
   140056570:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140056571:	(bad)  
   140056572:	add    edi,edi
   140056574:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140056575:	pop    rdi
   140056576:	add    edi,edi
   140056578:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140056579:	pop    rdi
   14005657a:	add    bh,bh
   14005657c:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14005657d:	pop    rdi
   14005657e:	add    bh,bh
   140056580:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140056581:	pop    rsi
   140056582:	add    bh,bh
   140056584:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140056585:	pop    rsi
   140056586:	add    bh,bh
   140056588:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140056589:	pop    rsi
   14005658a:	add    bh,bh
   14005658c:	movabs ds:0xa2ff025da2ff025d,eax
   140056595:	pop    rbp
   140056596:	add    bh,bh
   140056598:	movabs eax,ds:0xa0ff025ca1ff025d
   1400565a1:	pop    rsp
   1400565a2:	add    bh,bh
   1400565a4:	movabs al,ds:0x9fff025b9fff025c
   1400565ad:	pop    rbx
   1400565ae:	add    bh,bh
   1400565b0:	sahf   
   1400565b1:	pop    rbx
   1400565b2:	add    bh,bh
   1400565b4:	sahf   
   1400565b5:	pop    rdx
   1400565b6:	add    bh,bh
   1400565b8:	popf   
   1400565b9:	pop    rdx
   1400565ba:	add    edi,edi
   1400565bc:	popf   
   1400565bd:	pop    rdx
   1400565be:	add    edi,edi
   1400565c0:	pushf  
   1400565c1:	pop    rcx
   1400565c2:	add    edi,edi
   1400565c4:	pushf  
   1400565c5:	pop    rcx
   1400565c6:	add    edi,edi
   1400565c8:	fwait
   1400565c9:	pop    rcx
   1400565ca:	add    edi,edi
   1400565cc:	fwait
   1400565cd:	pop    rax
   1400565ce:	add    edi,edi
   1400565d0:	(bad)  
   1400565d1:	pop    rax
   1400565d2:	add    edi,edi
   1400565d4:	(bad)  
   1400565d5:	pop    rax
   1400565d6:	add    edi,edi
   1400565d8:	cdq    
   1400565d9:	push   rdi
   1400565da:	add    edi,edi
   1400565dc:	cwde   
   1400565dd:	push   rdi
   1400565de:	add    edi,edi
   1400565e0:	cwde   
   1400565e1:	push   rdi
   1400565e2:	add    edi,edi
   1400565e4:	cwde   
   1400565e5:	push   rdi
   1400565e6:	add    edi,edi
   1400565e8:	xchg   edi,eax
   1400565e9:	push   rsi
   1400565ea:	add    edi,edi
   1400565ec:	xchg   esi,eax
   1400565ed:	push   rsi
   1400565ee:	add    edi,edi
   1400565f0:	xchg   esi,eax
   1400565f1:	push   rsi
   1400565f2:	add    edi,edi
   1400565f4:	xchg   ebp,eax
   1400565f5:	push   rbp
   1400565f6:	add    edi,edi
   1400565f8:	xchg   ebp,eax
   1400565f9:	push   rbp
   1400565fa:	add    al,0xff
   1400565fc:	xchg   esp,eax
   1400565fd:	push   rbp
   1400565fe:	add    al,0xff
   140056600:	xchg   esp,eax
   140056601:	push   rsp
   140056602:	add    al,0xff
   140056604:	xchg   ebx,eax
   140056605:	push   rsp
   140056606:	add    al,0xff
   140056608:	xchg   ebx,eax
   140056609:	push   rsp
   14005660a:	add    al,0xff
   14005660c:	xchg   edx,eax
   14005660d:	push   rbx
   14005660e:	add    al,0xff
   140056610:	xchg   edx,eax
   140056611:	push   rbx
   140056612:	add    al,0xff
   140056614:	xchg   ecx,eax
   140056615:	push   rbx
   140056616:	add    al,0xff
   140056618:	xchg   ecx,eax
   140056619:	push   rdx
   14005661a:	add    al,0xff
   14005661c:	nop
   14005661d:	push   rdx
   14005661e:	add    al,0xff
   140056620:	nop
   140056621:	push   rdx
   140056622:	add    al,0xff
   140056624:	(bad)  
   140056625:	push   rdx
   140056626:	add    al,0xff
   140056628:	mov    ss,WORD PTR [rcx+0x4]
   14005662b:	dec    DWORD PTR [rsi-0x7100fbaf]
   140056631:	push   rcx
   140056632:	add    al,0xff
   140056634:	lea    edx,[rax+0x4]
   140056637:	dec    DWORD PTR [rax+rdx*2+0xcf05]
	...
   140056692:	add    BYTE PTR [rax],al
   140056694:	mov    bl,0x67
   140056696:	add    BYTE PTR [rax],dh
   140056698:	mov    bl,0x67
   14005669a:	add    bh,ch
   14005669c:	mov    ah,0x6a
   14005669e:	add    al,0xff
   1400566a0:	cwde   
   1400566a1:	pop    rdi
   1400566a2:	(bad)  
   1400566a3:	dec    DWORD PTR [rsi-0x5700d5a2]
   1400566a9:	jno    0x1400566cb
   1400566ab:	push   QWORD PTR [rdi-0x4c00e586]
   1400566b1:	js     0x1400566ce
   1400566b3:	jmp    QWORD PTR [rbx-0x7000de92]
   1400566b9:	(bad)  
   1400566ba:	sub    bh,bh
   1400566bc:	stos   BYTE PTR es:[rdi],al
   1400566bd:	je     0x1400566f1
   1400566bf:	push   QWORD PTR [rsi]
   1400566c1:	and    ecx,DWORD PTR [rbx-0x1]
   1400566c4:	sbb    DWORD PTR [rsi],edx
   1400566c6:	imul   edi,edi,0xff861e1c
   1400566cc:	and    DWORD PTR [rbx],esp
   1400566ce:	movabs ds:0xd44527ffbd2b26ff,al
   1400566d7:	jmp    FWORD PTR [rcx]
   1400566d9:	jno    0x1400566c2
   1400566db:	jmp    FWORD PTR [rsi]
   1400566dd:	lods   al,BYTE PTR ds:[rsi]
   1400566de:	jmp    0x1400566df
   1400566e0:	xor    bh,al
   1400566e2:	in     al,dx
   1400566e3:	push   QWORD PTR [rax]
   1400566e5:	(bad)  
   1400566e6:	in     al,dx
   1400566e7:	jmp    FWORD PTR [rdi]
   1400566e9:	mov    ebp,0xa12dffec
   1400566ee:	(bad)  
   1400566ef:	jmp    FWORD PTR [rcx]
   1400566f1:	imul   esp,edi,0xffffffff
   1400566f4:	(bad)  
   1400566f5:	rex.WX xlat BYTE PTR ds:[rbx]
   1400566f7:	jmp    QWORD PTR [rsi]
   1400566f9:	sub    eax,0x2422ffc0
   1400566fe:	stos   BYTE PTR es:[rdi],al
   1400566ff:	call   QWORD PTR [rdi+0x3c]
   140056702:	(bad)  
   140056703:	push   QWORD PTR [rbx-0x4c00ff99]
   140056709:	addr32 add bh,bh
   14005670c:	mov    bl,0x67
   14005670e:	add    bh,bh
   140056710:	mov    bl,0x67
   140056712:	add    bh,bh
   140056714:	mov    bl,0x67
   140056716:	add    bh,bh
   140056718:	mov    bl,0x67
   14005671a:	add    bh,bh
   14005671c:	mov    dl,0x67
   14005671e:	add    bh,bh
   140056720:	mov    dl,0x66
   140056722:	add    bh,bh
   140056724:	mov    cl,0x66
   140056726:	add    bh,bh
   140056728:	mov    cl,0x66
   14005672a:	add    bh,bh
   14005672c:	mov    al,0x65
   14005672e:	add    bh,bh
   140056730:	mov    al,0x65
   140056732:	add    bh,bh
   140056734:	scas   eax,DWORD PTR es:[rdi]
   140056735:	gs add bh,bh
   140056738:	scas   eax,DWORD PTR es:[rdi]
   140056739:	fs add bh,bh
   14005673c:	scas   al,BYTE PTR es:[rdi]
   14005673d:	fs add edi,edi
   140056740:	scas   al,BYTE PTR es:[rdi]
   140056741:	fs add edi,edi
   140056744:	lods   eax,DWORD PTR ds:[rsi]
   140056745:	movsxd eax,DWORD PTR [rcx]
   140056747:	jmp    FWORD PTR [rbp-0x5300fe9d]
   14005674d:	movsxd eax,DWORD PTR [rcx]
   14005674f:	jmp    FWORD PTR [rbx-0x5400fe9e]
   140056755:	(bad)  {k3}{z}
   14005675a:	add    edi,edi
   14005675c:	stos   BYTE PTR es:[rdi],al
   14005675d:	(bad)  {k1}{z}
   140056762:	add    edi,edi
   140056764:	test   eax,0xa8ff0161
   140056769:	(bad)  
   14005676a:	add    edi,edi
   14005676c:	test   al,0x60
   14005676e:	add    edi,edi
   140056770:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140056771:	(bad)  
   140056772:	add    edi,edi
   140056774:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140056775:	(bad)  
   140056776:	add    edi,edi
   140056778:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140056779:	pop    rdi
   14005677a:	add    edi,edi
   14005677c:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14005677d:	pop    rdi
   14005677e:	add    bh,bh
   140056780:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140056781:	pop    rdi
   140056782:	add    bh,bh
   140056784:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140056785:	pop    rsi
   140056786:	add    bh,bh
   140056788:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140056789:	pop    rsi
   14005678a:	add    bh,bh
   14005678c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14005678d:	pop    rsi
   14005678e:	add    bh,bh
   140056790:	movabs ds:0xa2ff025da2ff025d,eax
   140056799:	pop    rbp
   14005679a:	add    bh,bh
   14005679c:	movabs eax,ds:0xa0ff025ca1ff025d
   1400567a5:	pop    rsp
   1400567a6:	add    bh,bh
   1400567a8:	movabs al,ds:0x9fff025b9fff025c
   1400567b1:	pop    rbx
   1400567b2:	add    bh,bh
   1400567b4:	sahf   
   1400567b5:	pop    rbx
   1400567b6:	add    bh,bh
   1400567b8:	sahf   
   1400567b9:	pop    rdx
   1400567ba:	add    bh,bh
   1400567bc:	popf   
   1400567bd:	pop    rdx
   1400567be:	add    edi,edi
   1400567c0:	popf   
   1400567c1:	pop    rdx
   1400567c2:	add    edi,edi
   1400567c4:	pushf  
   1400567c5:	pop    rcx
   1400567c6:	add    edi,edi
   1400567c8:	pushf  
   1400567c9:	pop    rcx
   1400567ca:	add    edi,edi
   1400567cc:	fwait
   1400567cd:	pop    rcx
   1400567ce:	add    edi,edi
   1400567d0:	fwait
   1400567d1:	pop    rax
   1400567d2:	add    edi,edi
   1400567d4:	(bad)  
   1400567d5:	pop    rax
   1400567d6:	add    edi,edi
   1400567d8:	(bad)  
   1400567d9:	pop    rax
   1400567da:	add    edi,edi
   1400567dc:	cdq    
   1400567dd:	push   rdi
   1400567de:	add    edi,edi
   1400567e0:	cwde   
   1400567e1:	push   rdi
   1400567e2:	add    edi,edi
   1400567e4:	cwde   
   1400567e5:	push   rdi
   1400567e6:	add    edi,edi
   1400567e8:	cwde   
   1400567e9:	push   rdi
   1400567ea:	add    edi,edi
   1400567ec:	xchg   edi,eax
   1400567ed:	push   rsi
   1400567ee:	add    edi,edi
   1400567f0:	xchg   esi,eax
   1400567f1:	push   rsi
   1400567f2:	add    edi,edi
   1400567f4:	xchg   esi,eax
   1400567f5:	push   rsi
   1400567f6:	add    edi,edi
   1400567f8:	xchg   ebp,eax
   1400567f9:	push   rbp
   1400567fa:	add    edi,edi
   1400567fc:	xchg   ebp,eax
   1400567fd:	push   rbp
   1400567fe:	add    al,0xff
   140056800:	xchg   esp,eax
   140056801:	push   rbp
   140056802:	add    al,0xff
   140056804:	xchg   esp,eax
   140056805:	push   rsp
   140056806:	add    al,0xff
   140056808:	xchg   ebx,eax
   140056809:	push   rsp
   14005680a:	add    al,0xff
   14005680c:	xchg   ebx,eax
   14005680d:	push   rsp
   14005680e:	add    al,0xff
   140056810:	xchg   edx,eax
   140056811:	push   rbx
   140056812:	add    al,0xff
   140056814:	xchg   edx,eax
   140056815:	push   rbx
   140056816:	add    al,0xff
   140056818:	xchg   ecx,eax
   140056819:	push   rbx
   14005681a:	add    al,0xff
   14005681c:	xchg   ecx,eax
   14005681d:	push   rdx
   14005681e:	add    al,0xff
   140056820:	nop
   140056821:	push   rdx
   140056822:	add    al,0xff
   140056824:	nop
   140056825:	push   rdx
   140056826:	add    al,0xff
   140056828:	(bad)  
   140056829:	push   rdx
   14005682a:	add    al,0xff
   14005682c:	mov    ss,WORD PTR [rcx+0x4]
   14005682f:	dec    DWORD PTR [rsi-0x7100fbaf]
   140056835:	push   rcx
   140056836:	add    al,0xef
   140056838:	lea    edx,[rax+0x4]
   14005683b:	xor    BYTE PTR [rax],al
	...
   140056895:	add    BYTE PTR [rax],al
   140056897:	add    BYTE PTR [rbx-0x4c9fff99],dh
   14005689d:	addr32 add bh,bh
   1400568a0:	mov    bl,0x67
   1400568a2:	add    bh,bh
   1400568a4:	mov    bl,0x67
   1400568a6:	add    bh,bh
   1400568a8:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400568a9:	(bad)  
   1400568aa:	or     eax,0x1e679eff
   1400568af:	push   QWORD PTR [rsi-0x4a00e587]
   1400568b5:	jns    0x1400568d1
   1400568b7:	jmp    QWORD PTR [rdi+rbp*2+0x6da0ff21]
   1400568be:	sub    al,0xff
   1400568c0:	je     0x140056910
   1400568c2:	cmp    eax,0x5e161cff
   1400568c7:	call   FWORD PTR [rbx]
   1400568c9:	sbb    al,0x7f
   1400568cb:	jmp    QWORD PTR [rax]
   1400568cd:	and    bl,BYTE PTR [rbp-0x47d7da01]
   1400568d3:	jmp    QWORD PTR [rdi]
   1400568d5:	sar    r15b,1
   1400568d8:	sub    dh,BYTE PTR [rsi+riz*8-0x1]
   1400568dc:	cs mov dl,0xeb
   1400568df:	push   QWORD PTR [rax]
   1400568e1:	shr    ah,1
   1400568e3:	push   QWORD PTR [rax]
   1400568e5:	(bad)  
   1400568e6:	in     al,dx
   1400568e7:	jmp    FWORD PTR [rdi]
   1400568e9:	ret    0xffec
   1400568ec:	sub    eax,0x29ffeaa2
   1400568f1:	push   0x4327ffe6
   1400568f6:	sar    bh,cl
   1400568f8:	and    eax,0x21ffba29
   1400568fd:	and    esp,DWORD PTR [rdi+rdi*8-0xd0ae7b]
   140056904:	mov    bl,0x67
   140056906:	add    bh,bh
   140056908:	mov    bl,0x67
   14005690a:	add    bh,bh
   14005690c:	mov    bl,0x67
   14005690e:	add    bh,bh
   140056910:	mov    bl,0x67
   140056912:	add    bh,bh
   140056914:	mov    bl,0x67
   140056916:	add    bh,bh
   140056918:	mov    bl,0x67
   14005691a:	add    bh,bh
   14005691c:	mov    bl,0x67
   14005691e:	add    bh,bh
   140056920:	mov    dl,0x67
   140056922:	add    bh,bh
   140056924:	mov    dl,0x66
   140056926:	add    bh,bh
   140056928:	mov    cl,0x66
   14005692a:	add    bh,bh
   14005692c:	mov    cl,0x66
   14005692e:	add    bh,bh
   140056930:	mov    al,0x65
   140056932:	add    bh,bh
   140056934:	mov    al,0x65
   140056936:	add    bh,bh
   140056938:	scas   eax,DWORD PTR es:[rdi]
   140056939:	gs add bh,bh
   14005693c:	scas   eax,DWORD PTR es:[rdi]
   14005693d:	fs add bh,bh
   140056940:	scas   al,BYTE PTR es:[rdi]
   140056941:	fs add edi,edi
   140056944:	scas   al,BYTE PTR es:[rdi]
   140056945:	fs add edi,edi
   140056948:	lods   eax,DWORD PTR ds:[rsi]
   140056949:	movsxd eax,DWORD PTR [rcx]
   14005694b:	jmp    FWORD PTR [rbp-0x5300fe9d]
   140056951:	movsxd eax,DWORD PTR [rcx]
   140056953:	jmp    FWORD PTR [rbx-0x5400fe9e]
   140056959:	(bad)  {k3}{z}
   14005695e:	add    edi,edi
   140056960:	stos   BYTE PTR es:[rdi],al
   140056961:	(bad)  {k1}{z}
   140056966:	add    edi,edi
   140056968:	test   eax,0xa8ff0161
   14005696d:	(bad)  
   14005696e:	add    edi,edi
   140056970:	test   al,0x60
   140056972:	add    edi,edi
   140056974:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140056975:	(bad)  
   140056976:	add    edi,edi
   140056978:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140056979:	(bad)  
   14005697a:	add    edi,edi
   14005697c:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14005697d:	pop    rdi
   14005697e:	add    edi,edi
   140056980:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140056981:	pop    rdi
   140056982:	add    bh,bh
   140056984:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140056985:	pop    rdi
   140056986:	add    bh,bh
   140056988:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140056989:	pop    rsi
   14005698a:	add    bh,bh
   14005698c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14005698d:	pop    rsi
   14005698e:	add    bh,bh
   140056990:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140056991:	pop    rsi
   140056992:	add    bh,bh
   140056994:	movabs ds:0xa2ff025da2ff025d,eax
   14005699d:	pop    rbp
   14005699e:	add    bh,bh
   1400569a0:	movabs eax,ds:0xa0ff025ca1ff025d
   1400569a9:	pop    rsp
   1400569aa:	add    bh,bh
   1400569ac:	movabs al,ds:0x9fff025b9fff025c
   1400569b5:	pop    rbx
   1400569b6:	add    bh,bh
   1400569b8:	sahf   
   1400569b9:	pop    rbx
   1400569ba:	add    bh,bh
   1400569bc:	sahf   
   1400569bd:	pop    rdx
   1400569be:	add    bh,bh
   1400569c0:	popf   
   1400569c1:	pop    rdx
   1400569c2:	add    edi,edi
   1400569c4:	popf   
   1400569c5:	pop    rdx
   1400569c6:	add    edi,edi
   1400569c8:	pushf  
   1400569c9:	pop    rcx
   1400569ca:	add    edi,edi
   1400569cc:	pushf  
   1400569cd:	pop    rcx
   1400569ce:	add    edi,edi
   1400569d0:	fwait
   1400569d1:	pop    rcx
   1400569d2:	add    edi,edi
   1400569d4:	fwait
   1400569d5:	pop    rax
   1400569d6:	add    edi,edi
   1400569d8:	(bad)  
   1400569d9:	pop    rax
   1400569da:	add    edi,edi
   1400569dc:	(bad)  
   1400569dd:	pop    rax
   1400569de:	add    edi,edi
   1400569e0:	cdq    
   1400569e1:	push   rdi
   1400569e2:	add    edi,edi
   1400569e4:	cwde   
   1400569e5:	push   rdi
   1400569e6:	add    edi,edi
   1400569e8:	cwde   
   1400569e9:	push   rdi
   1400569ea:	add    edi,edi
   1400569ec:	cwde   
   1400569ed:	push   rdi
   1400569ee:	add    edi,edi
   1400569f0:	xchg   edi,eax
   1400569f1:	push   rsi
   1400569f2:	add    edi,edi
   1400569f4:	xchg   esi,eax
   1400569f5:	push   rsi
   1400569f6:	add    edi,edi
   1400569f8:	xchg   esi,eax
   1400569f9:	push   rsi
   1400569fa:	add    edi,edi
   1400569fc:	xchg   ebp,eax
   1400569fd:	push   rbp
   1400569fe:	add    edi,edi
   140056a00:	xchg   ebp,eax
   140056a01:	push   rbp
   140056a02:	add    al,0xff
   140056a04:	xchg   esp,eax
   140056a05:	push   rbp
   140056a06:	add    al,0xff
   140056a08:	xchg   esp,eax
   140056a09:	push   rsp
   140056a0a:	add    al,0xff
   140056a0c:	xchg   ebx,eax
   140056a0d:	push   rsp
   140056a0e:	add    al,0xff
   140056a10:	xchg   ebx,eax
   140056a11:	push   rsp
   140056a12:	add    al,0xff
   140056a14:	xchg   edx,eax
   140056a15:	push   rbx
   140056a16:	add    al,0xff
   140056a18:	xchg   edx,eax
   140056a19:	push   rbx
   140056a1a:	add    al,0xff
   140056a1c:	xchg   ecx,eax
   140056a1d:	push   rbx
   140056a1e:	add    al,0xff
   140056a20:	xchg   ecx,eax
   140056a21:	push   rdx
   140056a22:	add    al,0xff
   140056a24:	nop
   140056a25:	push   rdx
   140056a26:	add    al,0xff
   140056a28:	nop
   140056a29:	push   rdx
   140056a2a:	add    al,0xff
   140056a2c:	(bad)  
   140056a2d:	push   rdx
   140056a2e:	add    al,0xff
   140056a30:	mov    ss,WORD PTR [rcx+0x4]
   140056a33:	dec    DWORD PTR [rsi+0x600451]
	...
   140056a99:	add    BYTE PTR [rax],al
   140056a9b:	add    BYTE PTR [rbx-0x4c9fff99],dh
   140056aa1:	addr32 add bh,bh
   140056aa4:	mov    bl,0x67
   140056aa6:	add    bh,bh
   140056aa8:	mov    bl,0x67
   140056aaa:	add    bh,bh
   140056aac:	scas   al,BYTE PTR es:[rdi]
   140056aad:	gs add al,0xff
   140056ab0:	movabs ds:0xb4ff1a79b6ff1767,eax
   140056ab9:	jns    0x140056ad5
   140056abb:	jmp    QWORD PTR [rbx-0x5600de92]
   140056ac1:	je     0x140056af5
   140056ac3:	jmp    FWORD PTR [rcx]
   140056ac5:	sbb    edx,DWORD PTR [rcx-0x1]
   140056ac8:	sbb    bl,BYTE PTR [rcx]
   140056aca:	jbe    0x140056acb
   140056acc:	(bad)  
   140056acd:	and    DWORD PTR [rsi-0x4cd9db01],edx
   140056ad3:	jmp    QWORD PTR [rdi]
   140056ad5:	cmp    al,0xcd
   140056ad7:	jmp    FWORD PTR [rdx]
   140056ad9:	jbe    0x140056ac0
   140056adb:	jmp    FWORD PTR [rdi]
   140056add:	mov    eax,0xd831ffec
   140056ae2:	in     al,dx
   140056ae3:	push   QWORD PTR [rcx]
   140056ae5:	fucomp st(4)
   140056ae7:	push   QWORD PTR [rax]
   140056ae9:	(bad)  
   140056aea:	in     al,dx
   140056aeb:	jmp    FWORD PTR [rip+0x28ffeaa3]        # 0x169055594
   140056af1:	(bad)  {k7}
   140056af6:	int3   
   140056af7:	jmp    QWORD PTR [rsi+riz*1]
   140056afa:	mov    bl,0xff
   140056afc:	sub    DWORD PTR [rdi],esp
   140056afe:	xchg   esp,eax
   140056aff:	push   QWORD PTR [rbx-0x4c00ff99]
   140056b05:	addr32 add bh,bh
   140056b08:	mov    bl,0x67
   140056b0a:	add    bh,bh
   140056b0c:	mov    bl,0x67
   140056b0e:	add    bh,bh
   140056b10:	mov    bl,0x67
   140056b12:	add    bh,bh
   140056b14:	mov    bl,0x67
   140056b16:	add    bh,bh
   140056b18:	mov    bl,0x67
   140056b1a:	add    bh,bh
   140056b1c:	mov    bl,0x67
   140056b1e:	add    bh,bh
   140056b20:	mov    bl,0x67
   140056b22:	add    bh,bh
   140056b24:	mov    dl,0x67
   140056b26:	add    bh,bh
   140056b28:	mov    dl,0x66
   140056b2a:	add    bh,bh
   140056b2c:	mov    cl,0x66
   140056b2e:	add    bh,bh
   140056b30:	mov    cl,0x66
   140056b32:	add    bh,bh
   140056b34:	mov    al,0x65
   140056b36:	add    bh,bh
   140056b38:	mov    al,0x65
   140056b3a:	add    bh,bh
   140056b3c:	scas   eax,DWORD PTR es:[rdi]
   140056b3d:	gs add bh,bh
   140056b40:	scas   eax,DWORD PTR es:[rdi]
   140056b41:	fs add bh,bh
   140056b44:	scas   al,BYTE PTR es:[rdi]
   140056b45:	fs add edi,edi
   140056b48:	scas   al,BYTE PTR es:[rdi]
   140056b49:	fs add edi,edi
   140056b4c:	lods   eax,DWORD PTR ds:[rsi]
   140056b4d:	movsxd eax,DWORD PTR [rcx]
   140056b4f:	jmp    FWORD PTR [rbp-0x5300fe9d]
   140056b55:	movsxd eax,DWORD PTR [rcx]
   140056b57:	jmp    FWORD PTR [rbx-0x5400fe9e]
   140056b5d:	(bad)  {k3}{z}
   140056b62:	add    edi,edi
   140056b64:	stos   BYTE PTR es:[rdi],al
   140056b65:	(bad)  {k1}{z}
   140056b6a:	add    edi,edi
   140056b6c:	test   eax,0xa8ff0161
   140056b71:	(bad)  
   140056b72:	add    edi,edi
   140056b74:	test   al,0x60
   140056b76:	add    edi,edi
   140056b78:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140056b79:	(bad)  
   140056b7a:	add    edi,edi
   140056b7c:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140056b7d:	(bad)  
   140056b7e:	add    edi,edi
   140056b80:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140056b81:	pop    rdi
   140056b82:	add    edi,edi
   140056b84:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140056b85:	pop    rdi
   140056b86:	add    bh,bh
   140056b88:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140056b89:	pop    rdi
   140056b8a:	add    bh,bh
   140056b8c:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140056b8d:	pop    rsi
   140056b8e:	add    bh,bh
   140056b90:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140056b91:	pop    rsi
   140056b92:	add    bh,bh
   140056b94:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140056b95:	pop    rsi
   140056b96:	add    bh,bh
   140056b98:	movabs ds:0xa2ff025da2ff025d,eax
   140056ba1:	pop    rbp
   140056ba2:	add    bh,bh
   140056ba4:	movabs eax,ds:0xa0ff025ca1ff025d
   140056bad:	pop    rsp
   140056bae:	add    bh,bh
   140056bb0:	movabs al,ds:0x9fff025b9fff025c
   140056bb9:	pop    rbx
   140056bba:	add    bh,bh
   140056bbc:	sahf   
   140056bbd:	pop    rbx
   140056bbe:	add    bh,bh
   140056bc0:	sahf   
   140056bc1:	pop    rdx
   140056bc2:	add    bh,bh
   140056bc4:	popf   
   140056bc5:	pop    rdx
   140056bc6:	add    edi,edi
   140056bc8:	popf   
   140056bc9:	pop    rdx
   140056bca:	add    edi,edi
   140056bcc:	pushf  
   140056bcd:	pop    rcx
   140056bce:	add    edi,edi
   140056bd0:	pushf  
   140056bd1:	pop    rcx
   140056bd2:	add    edi,edi
   140056bd4:	fwait
   140056bd5:	pop    rcx
   140056bd6:	add    edi,edi
   140056bd8:	fwait
   140056bd9:	pop    rax
   140056bda:	add    edi,edi
   140056bdc:	(bad)  
   140056bdd:	pop    rax
   140056bde:	add    edi,edi
   140056be0:	(bad)  
   140056be1:	pop    rax
   140056be2:	add    edi,edi
   140056be4:	cdq    
   140056be5:	push   rdi
   140056be6:	add    edi,edi
   140056be8:	cwde   
   140056be9:	push   rdi
   140056bea:	add    edi,edi
   140056bec:	cwde   
   140056bed:	push   rdi
   140056bee:	add    edi,edi
   140056bf0:	cwde   
   140056bf1:	push   rdi
   140056bf2:	add    edi,edi
   140056bf4:	xchg   edi,eax
   140056bf5:	push   rsi
   140056bf6:	add    edi,edi
   140056bf8:	xchg   esi,eax
   140056bf9:	push   rsi
   140056bfa:	add    edi,edi
   140056bfc:	xchg   esi,eax
   140056bfd:	push   rsi
   140056bfe:	add    edi,edi
   140056c00:	xchg   ebp,eax
   140056c01:	push   rbp
   140056c02:	add    edi,edi
   140056c04:	xchg   ebp,eax
   140056c05:	push   rbp
   140056c06:	add    al,0xff
   140056c08:	xchg   esp,eax
   140056c09:	push   rbp
   140056c0a:	add    al,0xff
   140056c0c:	xchg   esp,eax
   140056c0d:	push   rsp
   140056c0e:	add    al,0xff
   140056c10:	xchg   ebx,eax
   140056c11:	push   rsp
   140056c12:	add    al,0xff
   140056c14:	xchg   ebx,eax
   140056c15:	push   rsp
   140056c16:	add    al,0xff
   140056c18:	xchg   edx,eax
   140056c19:	push   rbx
   140056c1a:	add    al,0xff
   140056c1c:	xchg   edx,eax
   140056c1d:	push   rbx
   140056c1e:	add    al,0xff
   140056c20:	xchg   ecx,eax
   140056c21:	push   rbx
   140056c22:	add    al,0xff
   140056c24:	xchg   ecx,eax
   140056c25:	push   rdx
   140056c26:	add    al,0xff
   140056c28:	nop
   140056c29:	push   rdx
   140056c2a:	add    al,0xff
   140056c2c:	nop
   140056c2d:	push   rdx
   140056c2e:	add    al,0xff
   140056c30:	(bad)  
   140056c31:	push   rdx
   140056c32:	add    al,0x60
	...
   140056ca0:	mov    bl,0x67
   140056ca2:	add    BYTE PTR [rax-0x4d],ah
   140056ca5:	addr32 add bh,ch
   140056ca8:	mov    bl,0x67
   140056caa:	add    bh,bh
   140056cac:	mov    bl,0x67
   140056cae:	add    bh,bh
   140056cb0:	mov    bl,0x67
   140056cb2:	add    bh,bh
   140056cb4:	mov    dl,0x6d
   140056cb6:	or     bh,bh
   140056cb8:	mov    bh,0x7a
   140056cba:	sbb    edi,edi
   140056cbc:	mov    ah,0x78
   140056cbe:	sbb    bh,bh
   140056cc0:	mov    dl,0x79
   140056cc2:	sub    bh,bh
   140056cc4:	pop    rsi
   140056cc5:	(bad)  
   140056cc6:	rex.X call FWORD PTR [rdx]
   140056cc9:	(bad)  
   140056cca:	imul   edi,edi,0xff90201d
   140056cd0:	and    esp,DWORD PTR [rip+0x3727ffad]        # 0x1772d6c83
   140056cd6:	leave  
   140056cd7:	jmp    FWORD PTR [rdx]
   140056cd9:	jbe    0x140056cbf
   140056cdb:	jmp    FWORD PTR [rdi]
   140056cdd:	mov    ebp,0xde31ffec
   140056ce2:	in     al,dx
   140056ce3:	push   QWORD PTR [rcx]
   140056ce5:	loopne 0x140056cd3
   140056ce7:	push   QWORD PTR [rax]
   140056ce9:	enter  0xffec,0x2d
   140056ced:	movabs eax,ds:0x3326ffe05a28ffea
   140056cf6:	(bad)  
   140056cf9:	and    al,0xac
   140056cfb:	call   QWORD PTR [rsi+0x3c]
   140056cfe:	(bad)  
   140056cff:	push   QWORD PTR [rbx-0x4c00ff99]
   140056d05:	addr32 add bh,bh
   140056d08:	mov    bl,0x67
   140056d0a:	add    bh,bh
   140056d0c:	mov    bl,0x67
   140056d0e:	add    bh,bh
   140056d10:	mov    bl,0x67
   140056d12:	add    bh,bh
   140056d14:	mov    bl,0x67
   140056d16:	add    bh,bh
   140056d18:	mov    bl,0x67
   140056d1a:	add    bh,bh
   140056d1c:	mov    bl,0x67
   140056d1e:	add    bh,bh
   140056d20:	mov    bl,0x67
   140056d22:	add    bh,bh
   140056d24:	mov    bl,0x67
   140056d26:	add    bh,bh
   140056d28:	mov    dl,0x67
   140056d2a:	add    bh,bh
   140056d2c:	mov    dl,0x66
   140056d2e:	add    bh,bh
   140056d30:	mov    cl,0x66
   140056d32:	add    bh,bh
   140056d34:	mov    cl,0x66
   140056d36:	add    bh,bh
   140056d38:	mov    al,0x65
   140056d3a:	add    bh,bh
   140056d3c:	mov    al,0x65
   140056d3e:	add    bh,bh
   140056d40:	scas   eax,DWORD PTR es:[rdi]
   140056d41:	gs add bh,bh
   140056d44:	scas   eax,DWORD PTR es:[rdi]
   140056d45:	fs add bh,bh
   140056d48:	scas   al,BYTE PTR es:[rdi]
   140056d49:	fs add edi,edi
   140056d4c:	scas   al,BYTE PTR es:[rdi]
   140056d4d:	fs add edi,edi
   140056d50:	lods   eax,DWORD PTR ds:[rsi]
   140056d51:	movsxd eax,DWORD PTR [rcx]
   140056d53:	jmp    FWORD PTR [rbp-0x5300fe9d]
   140056d59:	movsxd eax,DWORD PTR [rcx]
   140056d5b:	jmp    FWORD PTR [rbx-0x5400fe9e]
   140056d61:	(bad)  {k3}{z}
   140056d66:	add    edi,edi
   140056d68:	stos   BYTE PTR es:[rdi],al
   140056d69:	(bad)  {k1}{z}
   140056d6e:	add    edi,edi
   140056d70:	test   eax,0xa8ff0161
   140056d75:	(bad)  
   140056d76:	add    edi,edi
   140056d78:	test   al,0x60
   140056d7a:	add    edi,edi
   140056d7c:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140056d7d:	(bad)  
   140056d7e:	add    edi,edi
   140056d80:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140056d81:	(bad)  
   140056d82:	add    edi,edi
   140056d84:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140056d85:	pop    rdi
   140056d86:	add    edi,edi
   140056d88:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140056d89:	pop    rdi
   140056d8a:	add    bh,bh
   140056d8c:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140056d8d:	pop    rdi
   140056d8e:	add    bh,bh
   140056d90:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140056d91:	pop    rsi
   140056d92:	add    bh,bh
   140056d94:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140056d95:	pop    rsi
   140056d96:	add    bh,bh
   140056d98:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140056d99:	pop    rsi
   140056d9a:	add    bh,bh
   140056d9c:	movabs ds:0xa2ff025da2ff025d,eax
   140056da5:	pop    rbp
   140056da6:	add    bh,bh
   140056da8:	movabs eax,ds:0xa0ff025ca1ff025d
   140056db1:	pop    rsp
   140056db2:	add    bh,bh
   140056db4:	movabs al,ds:0x9fff025b9fff025c
   140056dbd:	pop    rbx
   140056dbe:	add    bh,bh
   140056dc0:	sahf   
   140056dc1:	pop    rbx
   140056dc2:	add    bh,bh
   140056dc4:	sahf   
   140056dc5:	pop    rdx
   140056dc6:	add    bh,bh
   140056dc8:	popf   
   140056dc9:	pop    rdx
   140056dca:	add    edi,edi
   140056dcc:	popf   
   140056dcd:	pop    rdx
   140056dce:	add    edi,edi
   140056dd0:	pushf  
   140056dd1:	pop    rcx
   140056dd2:	add    edi,edi
   140056dd4:	pushf  
   140056dd5:	pop    rcx
   140056dd6:	add    edi,edi
   140056dd8:	fwait
   140056dd9:	pop    rcx
   140056dda:	add    edi,edi
   140056ddc:	fwait
   140056ddd:	pop    rax
   140056dde:	add    edi,edi
   140056de0:	(bad)  
   140056de1:	pop    rax
   140056de2:	add    edi,edi
   140056de4:	(bad)  
   140056de5:	pop    rax
   140056de6:	add    edi,edi
   140056de8:	cdq    
   140056de9:	push   rdi
   140056dea:	add    edi,edi
   140056dec:	cwde   
   140056ded:	push   rdi
   140056dee:	add    edi,edi
   140056df0:	cwde   
   140056df1:	push   rdi
   140056df2:	add    edi,edi
   140056df4:	cwde   
   140056df5:	push   rdi
   140056df6:	add    edi,edi
   140056df8:	xchg   edi,eax
   140056df9:	push   rsi
   140056dfa:	add    edi,edi
   140056dfc:	xchg   esi,eax
   140056dfd:	push   rsi
   140056dfe:	add    edi,edi
   140056e00:	xchg   esi,eax
   140056e01:	push   rsi
   140056e02:	add    edi,edi
   140056e04:	xchg   ebp,eax
   140056e05:	push   rbp
   140056e06:	add    edi,edi
   140056e08:	xchg   ebp,eax
   140056e09:	push   rbp
   140056e0a:	add    al,0xff
   140056e0c:	xchg   esp,eax
   140056e0d:	push   rbp
   140056e0e:	add    al,0xff
   140056e10:	xchg   esp,eax
   140056e11:	push   rsp
   140056e12:	add    al,0xff
   140056e14:	xchg   ebx,eax
   140056e15:	push   rsp
   140056e16:	add    al,0xff
   140056e18:	xchg   ebx,eax
   140056e19:	push   rsp
   140056e1a:	add    al,0xff
   140056e1c:	xchg   edx,eax
   140056e1d:	push   rbx
   140056e1e:	add    al,0xff
   140056e20:	xchg   edx,eax
   140056e21:	push   rbx
   140056e22:	add    al,0xff
   140056e24:	xchg   ecx,eax
   140056e25:	push   rbx
   140056e26:	add    al,0xff
   140056e28:	xchg   ecx,eax
   140056e29:	push   rdx
   140056e2a:	add    al,0xef
   140056e2c:	nop
   140056e2d:	push   rdx
   140056e2e:	add    al,0x60
	...
   140056ea4:	mov    bl,0x67
   140056ea6:	add    BYTE PTR [rax],dh
   140056ea8:	mov    bl,0x67
   140056eaa:	add    bh,cl
   140056eac:	mov    bl,0x67
   140056eae:	add    bh,bh
   140056eb0:	mov    bl,0x67
   140056eb2:	add    bh,bh
   140056eb4:	mov    bl,0x67
   140056eb6:	add    bh,bh
   140056eb8:	mov    al,0x70
   140056eba:	adc    bh,bh
   140056ebc:	mov    bh,0x7a
   140056ebe:	sbb    edi,edi
   140056ec0:	mov    bl,0x78
   140056ec2:	sbb    al,0xff
   140056ec4:	movabs al,ds:0x1cff5a1821ff346d
   140056ecd:	(bad)  
   140056ece:	xchg   edi,edi
   140056ed0:	and    ah,BYTE PTR [rdi+riz*4]
   140056ed3:	jmp    QWORD PTR [rsi]
   140056ed5:	xor    al,ah
   140056ed7:	jmp    FWORD PTR [rcx]
   140056ed9:	jae    0x140056ebd
   140056edb:	jmp    FWORD PTR [rdi]
   140056edd:	ret    0xffec
   140056ee0:	xor    eax,esp
   140056ee2:	in     al,dx
   140056ee3:	push   QWORD PTR [rcx]
   140056ee5:	loope  0x140056ed3
   140056ee7:	push   QWORD PTR [rax]
   140056ee9:	leave  
   140056eea:	in     al,dx
   140056eeb:	jmp    FWORD PTR [rbx*4+0x4f27ffea]
   140056ef2:	(bad)  
   140056ef4:	es sub al,0xbd
   140056ef7:	jmp    QWORD PTR [rcx]
   140056ef9:	and    esp,DWORD PTR [rdi+rdi*8-0xd0ae7c]
   140056f00:	mov    bl,0x67
   140056f02:	add    bh,bh
   140056f04:	mov    bl,0x67
   140056f06:	add    bh,bh
   140056f08:	mov    bl,0x67
   140056f0a:	add    bh,bh
   140056f0c:	mov    bl,0x67
   140056f0e:	add    bh,bh
   140056f10:	mov    bl,0x67
   140056f12:	add    bh,bh
   140056f14:	mov    bl,0x67
   140056f16:	add    bh,bh
   140056f18:	mov    bl,0x67
   140056f1a:	add    bh,bh
   140056f1c:	mov    bl,0x67
   140056f1e:	add    bh,bh
   140056f20:	mov    bl,0x67
   140056f22:	add    bh,bh
   140056f24:	mov    bl,0x67
   140056f26:	add    bh,bh
   140056f28:	mov    bl,0x67
   140056f2a:	add    bh,bh
   140056f2c:	mov    dl,0x67
   140056f2e:	add    bh,bh
   140056f30:	mov    dl,0x66
   140056f32:	add    bh,bh
   140056f34:	mov    cl,0x66
   140056f36:	add    bh,bh
   140056f38:	mov    cl,0x66
   140056f3a:	add    bh,bh
   140056f3c:	mov    al,0x65
   140056f3e:	add    bh,bh
   140056f40:	mov    al,0x65
   140056f42:	add    bh,bh
   140056f44:	scas   eax,DWORD PTR es:[rdi]
   140056f45:	gs add bh,bh
   140056f48:	scas   eax,DWORD PTR es:[rdi]
   140056f49:	fs add bh,bh
   140056f4c:	scas   al,BYTE PTR es:[rdi]
   140056f4d:	fs add edi,edi
   140056f50:	scas   al,BYTE PTR es:[rdi]
   140056f51:	fs add edi,edi
   140056f54:	lods   eax,DWORD PTR ds:[rsi]
   140056f55:	movsxd eax,DWORD PTR [rcx]
   140056f57:	jmp    FWORD PTR [rbp-0x5300fe9d]
   140056f5d:	movsxd eax,DWORD PTR [rcx]
   140056f5f:	jmp    FWORD PTR [rbx-0x5400fe9e]
   140056f65:	(bad)  {k3}{z}
   140056f6a:	add    edi,edi
   140056f6c:	stos   BYTE PTR es:[rdi],al
   140056f6d:	(bad)  {k1}{z}
   140056f72:	add    edi,edi
   140056f74:	test   eax,0xa8ff0161
   140056f79:	(bad)  
   140056f7a:	add    edi,edi
   140056f7c:	test   al,0x60
   140056f7e:	add    edi,edi
   140056f80:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140056f81:	(bad)  
   140056f82:	add    edi,edi
   140056f84:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140056f85:	(bad)  
   140056f86:	add    edi,edi
   140056f88:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140056f89:	pop    rdi
   140056f8a:	add    edi,edi
   140056f8c:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140056f8d:	pop    rdi
   140056f8e:	add    bh,bh
   140056f90:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140056f91:	pop    rdi
   140056f92:	add    bh,bh
   140056f94:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140056f95:	pop    rsi
   140056f96:	add    bh,bh
   140056f98:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140056f99:	pop    rsi
   140056f9a:	add    bh,bh
   140056f9c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140056f9d:	pop    rsi
   140056f9e:	add    bh,bh
   140056fa0:	movabs ds:0xa2ff025da2ff025d,eax
   140056fa9:	pop    rbp
   140056faa:	add    bh,bh
   140056fac:	movabs eax,ds:0xa0ff025ca1ff025d
   140056fb5:	pop    rsp
   140056fb6:	add    bh,bh
   140056fb8:	movabs al,ds:0x9fff025b9fff025c
   140056fc1:	pop    rbx
   140056fc2:	add    bh,bh
   140056fc4:	sahf   
   140056fc5:	pop    rbx
   140056fc6:	add    bh,bh
   140056fc8:	sahf   
   140056fc9:	pop    rdx
   140056fca:	add    bh,bh
   140056fcc:	popf   
   140056fcd:	pop    rdx
   140056fce:	add    edi,edi
   140056fd0:	popf   
   140056fd1:	pop    rdx
   140056fd2:	add    edi,edi
   140056fd4:	pushf  
   140056fd5:	pop    rcx
   140056fd6:	add    edi,edi
   140056fd8:	pushf  
   140056fd9:	pop    rcx
   140056fda:	add    edi,edi
   140056fdc:	fwait
   140056fdd:	pop    rcx
   140056fde:	add    edi,edi
   140056fe0:	fwait
   140056fe1:	pop    rax
   140056fe2:	add    edi,edi
   140056fe4:	(bad)  
   140056fe5:	pop    rax
   140056fe6:	add    edi,edi
   140056fe8:	(bad)  
   140056fe9:	pop    rax
   140056fea:	add    edi,edi
   140056fec:	cdq    
   140056fed:	push   rdi
   140056fee:	add    edi,edi
   140056ff0:	cwde   
   140056ff1:	push   rdi
   140056ff2:	add    edi,edi
   140056ff4:	cwde   
   140056ff5:	push   rdi
   140056ff6:	add    edi,edi
   140056ff8:	cwde   
   140056ff9:	push   rdi
   140056ffa:	add    edi,edi
   140056ffc:	xchg   edi,eax
   140056ffd:	push   rsi
   140056ffe:	add    edi,edi
   140057000:	xchg   esi,eax
   140057001:	push   rsi
   140057002:	add    edi,edi
   140057004:	xchg   esi,eax
   140057005:	push   rsi
   140057006:	add    edi,edi
   140057008:	xchg   ebp,eax
   140057009:	push   rbp
   14005700a:	add    edi,edi
   14005700c:	xchg   ebp,eax
   14005700d:	push   rbp
   14005700e:	add    al,0xff
   140057010:	xchg   esp,eax
   140057011:	push   rbp
   140057012:	add    al,0xff
   140057014:	xchg   esp,eax
   140057015:	push   rsp
   140057016:	add    al,0xff
   140057018:	xchg   ebx,eax
   140057019:	push   rsp
   14005701a:	add    al,0xff
   14005701c:	xchg   ebx,eax
   14005701d:	push   rsp
   14005701e:	add    al,0xff
   140057020:	xchg   edx,eax
   140057021:	push   rbx
   140057022:	add    al,0xff
   140057024:	xchg   edx,eax
   140057025:	push   rbx
   140057026:	add    al,0xcf
   140057028:	xchg   ecx,eax
   140057029:	push   rbx
   14005702a:	add    al,0x30
	...
   1400570ac:	mov    bl,0x67
   1400570ae:	add    BYTE PTR [rax-0x10ff984d],al
   1400570b4:	mov    bl,0x67
   1400570b6:	add    bh,bh
   1400570b8:	mov    bl,0x67
   1400570ba:	add    bh,bh
   1400570bc:	mov    ah,0x73
   1400570be:	adc    bh,bh
   1400570c0:	mov    bh,0x7a
   1400570c2:	sbb    edi,edi
   1400570c4:	mov    ebx,0x47ff287f
   1400570c9:	(bad)  
   1400570ca:	rex.WB call FWORD PTR [r10]
   1400570cd:	sbb    edi,DWORD PTR [rdx-0x1]
   1400570d0:	and    BYTE PTR [rbx],ah
   1400570d2:	movabs eax,ds:0xe06f29ffbf2e26ff
   1400570db:	jmp    FWORD PTR [rdi]
   1400570dd:	(bad)
   1400570e0:	xor    ecx,esp
   1400570e2:	in     al,dx
   1400570e3:	push   QWORD PTR [rcx]
   1400570e5:	loope  0x1400570d3
   1400570e7:	push   QWORD PTR [rax]
   1400570e9:	leave  
   1400570ea:	in     al,dx
   1400570eb:	jmp    FWORD PTR [rbx]
   1400570ed:	xchg   esp,eax
   1400570ee:	jmp    0x1134998f2
   1400570f3:	jmp    QWORD PTR [rdi+riz*1]
   1400570f6:	mov    ch,0xff
   1400570f8:	xor    ch,BYTE PTR [rbx]
   1400570fa:	mov    bh,bh
   1400570fc:	mov    bl,0x67
   1400570fe:	add    bh,bh
   140057100:	mov    bl,0x67
   140057102:	add    bh,bh
   140057104:	mov    bl,0x67
   140057106:	add    bh,bh
   140057108:	mov    bl,0x67
   14005710a:	add    bh,bh
   14005710c:	mov    bl,0x67
   14005710e:	add    bh,bh
   140057110:	mov    bl,0x67
   140057112:	add    bh,bh
   140057114:	mov    bl,0x67
   140057116:	add    bh,bh
   140057118:	mov    bl,0x67
   14005711a:	add    bh,bh
   14005711c:	mov    bl,0x67
   14005711e:	add    bh,bh
   140057120:	mov    bl,0x67
   140057122:	add    bh,bh
   140057124:	mov    bl,0x67
   140057126:	add    bh,bh
   140057128:	mov    bl,0x67
   14005712a:	add    bh,bh
   14005712c:	mov    bl,0x67
   14005712e:	add    bh,bh
   140057130:	mov    dl,0x67
   140057132:	add    bh,bh
   140057134:	mov    dl,0x66
   140057136:	add    bh,bh
   140057138:	mov    cl,0x66
   14005713a:	add    bh,bh
   14005713c:	mov    cl,0x66
   14005713e:	add    bh,bh
   140057140:	mov    al,0x65
   140057142:	add    bh,bh
   140057144:	mov    al,0x65
   140057146:	add    bh,bh
   140057148:	scas   eax,DWORD PTR es:[rdi]
   140057149:	gs add bh,bh
   14005714c:	scas   eax,DWORD PTR es:[rdi]
   14005714d:	fs add bh,bh
   140057150:	scas   al,BYTE PTR es:[rdi]
   140057151:	fs add edi,edi
   140057154:	scas   al,BYTE PTR es:[rdi]
   140057155:	fs add edi,edi
   140057158:	lods   eax,DWORD PTR ds:[rsi]
   140057159:	movsxd eax,DWORD PTR [rcx]
   14005715b:	jmp    FWORD PTR [rbp-0x5300fe9d]
   140057161:	movsxd eax,DWORD PTR [rcx]
   140057163:	jmp    FWORD PTR [rbx-0x5400fe9e]
   140057169:	(bad)  {k3}{z}
   14005716e:	add    edi,edi
   140057170:	stos   BYTE PTR es:[rdi],al
   140057171:	(bad)  {k1}{z}
   140057176:	add    edi,edi
   140057178:	test   eax,0xa8ff0161
   14005717d:	(bad)  
   14005717e:	add    edi,edi
   140057180:	test   al,0x60
   140057182:	add    edi,edi
   140057184:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140057185:	(bad)  
   140057186:	add    edi,edi
   140057188:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140057189:	(bad)  
   14005718a:	add    edi,edi
   14005718c:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14005718d:	pop    rdi
   14005718e:	add    edi,edi
   140057190:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140057191:	pop    rdi
   140057192:	add    bh,bh
   140057194:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140057195:	pop    rdi
   140057196:	add    bh,bh
   140057198:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140057199:	pop    rsi
   14005719a:	add    bh,bh
   14005719c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14005719d:	pop    rsi
   14005719e:	add    bh,bh
   1400571a0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400571a1:	pop    rsi
   1400571a2:	add    bh,bh
   1400571a4:	movabs ds:0xa2ff025da2ff025d,eax
   1400571ad:	pop    rbp
   1400571ae:	add    bh,bh
   1400571b0:	movabs eax,ds:0xa0ff025ca1ff025d
   1400571b9:	pop    rsp
   1400571ba:	add    bh,bh
   1400571bc:	movabs al,ds:0x9fff025b9fff025c
   1400571c5:	pop    rbx
   1400571c6:	add    bh,bh
   1400571c8:	sahf   
   1400571c9:	pop    rbx
   1400571ca:	add    bh,bh
   1400571cc:	sahf   
   1400571cd:	pop    rdx
   1400571ce:	add    bh,bh
   1400571d0:	popf   
   1400571d1:	pop    rdx
   1400571d2:	add    edi,edi
   1400571d4:	popf   
   1400571d5:	pop    rdx
   1400571d6:	add    edi,edi
   1400571d8:	pushf  
   1400571d9:	pop    rcx
   1400571da:	add    edi,edi
   1400571dc:	pushf  
   1400571dd:	pop    rcx
   1400571de:	add    edi,edi
   1400571e0:	fwait
   1400571e1:	pop    rcx
   1400571e2:	add    edi,edi
   1400571e4:	fwait
   1400571e5:	pop    rax
   1400571e6:	add    edi,edi
   1400571e8:	(bad)  
   1400571e9:	pop    rax
   1400571ea:	add    edi,edi
   1400571ec:	(bad)  
   1400571ed:	pop    rax
   1400571ee:	add    edi,edi
   1400571f0:	cdq    
   1400571f1:	push   rdi
   1400571f2:	add    edi,edi
   1400571f4:	cwde   
   1400571f5:	push   rdi
   1400571f6:	add    edi,edi
   1400571f8:	cwde   
   1400571f9:	push   rdi
   1400571fa:	add    edi,edi
   1400571fc:	cwde   
   1400571fd:	push   rdi
   1400571fe:	add    edi,edi
   140057200:	xchg   edi,eax
   140057201:	push   rsi
   140057202:	add    edi,edi
   140057204:	xchg   esi,eax
   140057205:	push   rsi
   140057206:	add    edi,edi
   140057208:	xchg   esi,eax
   140057209:	push   rsi
   14005720a:	add    edi,edi
   14005720c:	xchg   ebp,eax
   14005720d:	push   rbp
   14005720e:	add    edi,edi
   140057210:	xchg   ebp,eax
   140057211:	push   rbp
   140057212:	add    al,0xff
   140057214:	xchg   esp,eax
   140057215:	push   rbp
   140057216:	add    al,0xff
   140057218:	xchg   esp,eax
   140057219:	push   rsp
   14005721a:	add    al,0xff
   14005721c:	xchg   ebx,eax
   14005721d:	push   rsp
   14005721e:	add    al,0xef
   140057220:	xchg   ebx,eax
   140057221:	push   rsp
   140057222:	add    al,0x80
	...
   1400572b0:	mov    bl,0x67
   1400572b2:	add    BYTE PTR [rax],dl
   1400572b4:	mov    bl,0x67
   1400572b6:	add    BYTE PTR [rax-0x20ff984d],al
   1400572bc:	mov    bl,0x68
   1400572be:	add    bh,bh
   1400572c0:	mov    bh,0x78
   1400572c2:	(bad)  
   1400572c3:	push   QWORD PTR [rbx-0x7400e188]
   1400572c9:	pop    rsi
   1400572ca:	cmp    edi,edi
   1400572cc:	sbb    al,0x18
   1400572ce:	imul   edi,edi,0xff99221f
   1400572d4:	and    eax,0x29ffba2a
   1400572d9:	imul   ebx,esi,0xecc730ff
   1400572df:	push   QWORD PTR [rcx]
   1400572e1:	loope  0x1400572cf
   1400572e3:	push   QWORD PTR [rcx]
   1400572e5:	loope  0x1400572d3
   1400572e7:	jmp    FWORD PTR [rdi]
   1400572e9:	(bad)  
   1400572ea:	in     al,dx
   1400572eb:	jmp    FWORD PTR [rbx]
   1400572ed:	test   edi,esp
   1400572ef:	jmp    QWORD PTR [rdi]
   1400572f1:	cmp    edx,ecx
   1400572f3:	jmp    QWORD PTR [rbx]
   1400572f5:	and    al,0xad
   1400572f7:	jmp    QWORD PTR [rax+0x40]
   1400572fa:	push   rsi
   1400572fb:	push   QWORD PTR [rbx-0x4c00ff99]
   140057301:	addr32 add bh,bh
   140057304:	mov    bl,0x67
   140057306:	add    bh,bh
   140057308:	mov    bl,0x67
   14005730a:	add    bh,bh
   14005730c:	mov    bl,0x67
   14005730e:	add    bh,bh
   140057310:	mov    bl,0x67
   140057312:	add    bh,bh
   140057314:	mov    bl,0x67
   140057316:	add    bh,bh
   140057318:	mov    bl,0x67
   14005731a:	add    bh,bh
   14005731c:	mov    bl,0x67
   14005731e:	add    bh,bh
   140057320:	mov    bl,0x67
   140057322:	add    bh,bh
   140057324:	mov    bl,0x67
   140057326:	add    bh,bh
   140057328:	mov    bl,0x67
   14005732a:	add    bh,bh
   14005732c:	mov    bl,0x67
   14005732e:	add    bh,bh
   140057330:	mov    bl,0x67
   140057332:	add    bh,bh
   140057334:	mov    dl,0x67
   140057336:	add    bh,bh
   140057338:	mov    dl,0x66
   14005733a:	add    bh,bh
   14005733c:	mov    cl,0x66
   14005733e:	add    bh,bh
   140057340:	mov    cl,0x66
   140057342:	add    bh,bh
   140057344:	mov    al,0x65
   140057346:	add    bh,bh
   140057348:	mov    al,0x65
   14005734a:	add    bh,bh
   14005734c:	scas   eax,DWORD PTR es:[rdi]
   14005734d:	gs add bh,bh
   140057350:	scas   eax,DWORD PTR es:[rdi]
   140057351:	fs add bh,bh
   140057354:	scas   al,BYTE PTR es:[rdi]
   140057355:	fs add edi,edi
   140057358:	scas   al,BYTE PTR es:[rdi]
   140057359:	fs add edi,edi
   14005735c:	lods   eax,DWORD PTR ds:[rsi]
   14005735d:	movsxd eax,DWORD PTR [rcx]
   14005735f:	jmp    FWORD PTR [rbp-0x5300fe9d]
   140057365:	movsxd eax,DWORD PTR [rcx]
   140057367:	jmp    FWORD PTR [rbx-0x5400fe9e]
   14005736d:	(bad)  {k3}{z}
   140057372:	add    edi,edi
   140057374:	stos   BYTE PTR es:[rdi],al
   140057375:	(bad)  {k1}{z}
   14005737a:	add    edi,edi
   14005737c:	test   eax,0xa8ff0161
   140057381:	(bad)  
   140057382:	add    edi,edi
   140057384:	test   al,0x60
   140057386:	add    edi,edi
   140057388:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140057389:	(bad)  
   14005738a:	add    edi,edi
   14005738c:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14005738d:	(bad)  
   14005738e:	add    edi,edi
   140057390:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140057391:	pop    rdi
   140057392:	add    edi,edi
   140057394:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140057395:	pop    rdi
   140057396:	add    bh,bh
   140057398:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140057399:	pop    rdi
   14005739a:	add    bh,bh
   14005739c:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14005739d:	pop    rsi
   14005739e:	add    bh,bh
   1400573a0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400573a1:	pop    rsi
   1400573a2:	add    bh,bh
   1400573a4:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400573a5:	pop    rsi
   1400573a6:	add    bh,bh
   1400573a8:	movabs ds:0xa2ff025da2ff025d,eax
   1400573b1:	pop    rbp
   1400573b2:	add    bh,bh
   1400573b4:	movabs eax,ds:0xa0ff025ca1ff025d
   1400573bd:	pop    rsp
   1400573be:	add    bh,bh
   1400573c0:	movabs al,ds:0x9fff025b9fff025c
   1400573c9:	pop    rbx
   1400573ca:	add    bh,bh
   1400573cc:	sahf   
   1400573cd:	pop    rbx
   1400573ce:	add    bh,bh
   1400573d0:	sahf   
   1400573d1:	pop    rdx
   1400573d2:	add    bh,bh
   1400573d4:	popf   
   1400573d5:	pop    rdx
   1400573d6:	add    edi,edi
   1400573d8:	popf   
   1400573d9:	pop    rdx
   1400573da:	add    edi,edi
   1400573dc:	pushf  
   1400573dd:	pop    rcx
   1400573de:	add    edi,edi
   1400573e0:	pushf  
   1400573e1:	pop    rcx
   1400573e2:	add    edi,edi
   1400573e4:	fwait
   1400573e5:	pop    rcx
   1400573e6:	add    edi,edi
   1400573e8:	fwait
   1400573e9:	pop    rax
   1400573ea:	add    edi,edi
   1400573ec:	(bad)  
   1400573ed:	pop    rax
   1400573ee:	add    edi,edi
   1400573f0:	(bad)  
   1400573f1:	pop    rax
   1400573f2:	add    edi,edi
   1400573f4:	cdq    
   1400573f5:	push   rdi
   1400573f6:	add    edi,edi
   1400573f8:	cwde   
   1400573f9:	push   rdi
   1400573fa:	add    edi,edi
   1400573fc:	cwde   
   1400573fd:	push   rdi
   1400573fe:	add    edi,edi
   140057400:	cwde   
   140057401:	push   rdi
   140057402:	add    edi,edi
   140057404:	xchg   edi,eax
   140057405:	push   rsi
   140057406:	add    edi,edi
   140057408:	xchg   esi,eax
   140057409:	push   rsi
   14005740a:	add    edi,edi
   14005740c:	xchg   esi,eax
   14005740d:	push   rsi
   14005740e:	add    edi,edi
   140057410:	xchg   ebp,eax
   140057411:	push   rbp
   140057412:	add    edi,edi
   140057414:	xchg   ebp,eax
   140057415:	push   rbp
   140057416:	add    al,0xdf
   140057418:	xchg   esp,eax
   140057419:	push   rbp
   14005741a:	add    al,0x80
   14005741c:	xchg   esp,eax
   14005741d:	push   rsp
   14005741e:	add    al,0x10
	...
   1400574bc:	mov    bl,0x67
   1400574be:	add    BYTE PTR [rax-0x4b],al
   1400574c1:	outs   dx,DWORD PTR ds:[rsi]
   1400574c2:	or     ecx,DWORD PTR [rdi-0xe6874c]
   1400574c8:	mov    dl,0x79
   1400574ca:	sub    eax,0x532130ff
   1400574cf:	call   FWORD PTR [rip+0x24ff8f20]        # 0x1650503f5
   1400574d5:	(bad)  
   1400574d6:	mov    ah,0xff
   1400574d8:	sub    BYTE PTR [rdi-0x26],bl
   1400574db:	jmp    FWORD PTR [rdi]
   1400574dd:	enter  0xffec,0x31
   1400574e1:	loope  0x1400574cf
   1400574e3:	push   QWORD PTR [rcx]
   1400574e5:	loope  0x1400574d3
   1400574e7:	jmp    FWORD PTR [rdi]
   1400574e9:	ret    
   1400574ea:	in     al,dx
   1400574eb:	jmp    FWORD PTR [rcx]
   1400574ed:	jno    0x1400574d1
   1400574ef:	jmp    QWORD PTR [rsi]
   1400574f1:	(bad)  
   1400574f2:	sar    bh,0x21
   1400574f5:	and    esp,DWORD PTR [rbx+0x135ea0ff]
   1400574fb:	push   QWORD PTR [rbx-0x4c00ff99]
   140057501:	addr32 add bh,bh
   140057504:	mov    bl,0x67
   140057506:	add    bh,bh
   140057508:	mov    bl,0x67
   14005750a:	add    bh,bh
   14005750c:	mov    bl,0x67
   14005750e:	add    bh,bh
   140057510:	mov    bl,0x67
   140057512:	add    bh,bh
   140057514:	mov    bl,0x67
   140057516:	add    bh,bh
   140057518:	mov    bl,0x67
   14005751a:	add    bh,bh
   14005751c:	mov    bl,0x67
   14005751e:	add    bh,bh
   140057520:	mov    bl,0x67
   140057522:	add    bh,bh
   140057524:	mov    bl,0x67
   140057526:	add    bh,bh
   140057528:	mov    bl,0x67
   14005752a:	add    bh,bh
   14005752c:	mov    bl,0x67
   14005752e:	add    bh,bh
   140057530:	mov    bl,0x67
   140057532:	add    bh,bh
   140057534:	mov    bl,0x67
   140057536:	add    bh,bh
   140057538:	mov    dl,0x67
   14005753a:	add    bh,bh
   14005753c:	mov    dl,0x66
   14005753e:	add    bh,bh
   140057540:	mov    cl,0x66
   140057542:	add    bh,bh
   140057544:	mov    cl,0x66
   140057546:	add    bh,bh
   140057548:	mov    al,0x65
   14005754a:	add    bh,bh
   14005754c:	mov    al,0x65
   14005754e:	add    bh,bh
   140057550:	scas   eax,DWORD PTR es:[rdi]
   140057551:	gs add bh,bh
   140057554:	scas   eax,DWORD PTR es:[rdi]
   140057555:	fs add bh,bh
   140057558:	scas   al,BYTE PTR es:[rdi]
   140057559:	fs add edi,edi
   14005755c:	scas   al,BYTE PTR es:[rdi]
   14005755d:	fs add edi,edi
   140057560:	lods   eax,DWORD PTR ds:[rsi]
   140057561:	movsxd eax,DWORD PTR [rcx]
   140057563:	jmp    FWORD PTR [rbp-0x5300fe9d]
   140057569:	movsxd eax,DWORD PTR [rcx]
   14005756b:	jmp    FWORD PTR [rbx-0x5400fe9e]
   140057571:	(bad)  {k3}{z}
   140057576:	add    edi,edi
   140057578:	stos   BYTE PTR es:[rdi],al
   140057579:	(bad)  {k1}{z}
   14005757e:	add    edi,edi
   140057580:	test   eax,0xa8ff0161
   140057585:	(bad)  
   140057586:	add    edi,edi
   140057588:	test   al,0x60
   14005758a:	add    edi,edi
   14005758c:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14005758d:	(bad)  
   14005758e:	add    edi,edi
   140057590:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140057591:	(bad)  
   140057592:	add    edi,edi
   140057594:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140057595:	pop    rdi
   140057596:	add    edi,edi
   140057598:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140057599:	pop    rdi
   14005759a:	add    bh,bh
   14005759c:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14005759d:	pop    rdi
   14005759e:	add    bh,bh
   1400575a0:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400575a1:	pop    rsi
   1400575a2:	add    bh,bh
   1400575a4:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400575a5:	pop    rsi
   1400575a6:	add    bh,bh
   1400575a8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400575a9:	pop    rsi
   1400575aa:	add    bh,bh
   1400575ac:	movabs ds:0xa2ff025da2ff025d,eax
   1400575b5:	pop    rbp
   1400575b6:	add    bh,bh
   1400575b8:	movabs eax,ds:0xa0ff025ca1ff025d
   1400575c1:	pop    rsp
   1400575c2:	add    bh,bh
   1400575c4:	movabs al,ds:0x9fff025b9fff025c
   1400575cd:	pop    rbx
   1400575ce:	add    bh,bh
   1400575d0:	sahf   
   1400575d1:	pop    rbx
   1400575d2:	add    bh,bh
   1400575d4:	sahf   
   1400575d5:	pop    rdx
   1400575d6:	add    bh,bh
   1400575d8:	popf   
   1400575d9:	pop    rdx
   1400575da:	add    edi,edi
   1400575dc:	popf   
   1400575dd:	pop    rdx
   1400575de:	add    edi,edi
   1400575e0:	pushf  
   1400575e1:	pop    rcx
   1400575e2:	add    edi,edi
   1400575e4:	pushf  
   1400575e5:	pop    rcx
   1400575e6:	add    edi,edi
   1400575e8:	fwait
   1400575e9:	pop    rcx
   1400575ea:	add    edi,edi
   1400575ec:	fwait
   1400575ed:	pop    rax
   1400575ee:	add    edi,edi
   1400575f0:	(bad)  
   1400575f1:	pop    rax
   1400575f2:	add    edi,edi
   1400575f4:	(bad)  
   1400575f5:	pop    rax
   1400575f6:	add    edi,edi
   1400575f8:	cdq    
   1400575f9:	push   rdi
   1400575fa:	add    edi,edi
   1400575fc:	cwde   
   1400575fd:	push   rdi
   1400575fe:	add    edi,edi
   140057600:	cwde   
   140057601:	push   rdi
   140057602:	add    edi,edi
   140057604:	cwde   
   140057605:	push   rdi
   140057606:	add    edi,edi
   140057608:	xchg   edi,eax
   140057609:	push   rsi
   14005760a:	add    edi,DWORD PTR [rdi-0x70fca96a]
   140057610:	xchg   esi,eax
   140057611:	push   rsi
   140057612:	add    eax,DWORD PTR [rax+0x0]
	...
   1400576c1:	add    BYTE PTR [rax],al
   1400576c3:	add    BYTE PTR [rdi-0x5570e685],dh
   1400576c9:	jo     0x1400576ec
   1400576cb:	jmp    FWORD PTR [rsi+0x4a]
   1400576ce:	(bad)  
   1400576cf:	call   FWORD PTR [rbx]
   1400576d1:	sbb    al,0x7f
   1400576d3:	jmp    QWORD PTR [rbx]
   1400576d5:	and    al,0xac
   1400576d7:	jmp    FWORD PTR [rax]
   1400576d9:	push   rcx
   1400576da:	(bad)  
   1400576db:	jmp    FWORD PTR [rdi]
   1400576dd:	(bad)  
   1400576de:	in     al,dx
   1400576df:	push   QWORD PTR [rcx]
   1400576e1:	loope  0x1400576cf
   1400576e3:	push   QWORD PTR [rcx]
   1400576e5:	loopne 0x1400576d3
   1400576e7:	jmp    FWORD PTR [rdi]
   1400576e9:	mov    edx,0x5928ffeb
   1400576ee:	(bad)  
   1400576f0:	and    eax,0x20ffb628
   1400576f5:	and    bl,BYTE PTR [rbp+0xaf]
	...
   1400578c7:	add    BYTE PTR [rdi-0x5820e599],bl
   1400578cd:	jb     0x140057903
   1400578cf:	jmp    QWORD PTR [rdx]
   1400578d1:	sbb    al,0x68
   1400578d3:	jmp    QWORD PTR [rcx]
   1400578d5:	and    esp,DWORD PTR [rbx-0x33bfd801]
   1400578db:	jmp    FWORD PTR [rdi]
   1400578dd:	shr    ah,0xff
   1400578e0:	xor    ecx,esp
   1400578e2:	in     al,dx
   1400578e3:	push   QWORD PTR [rcx]
   1400578e5:	fucomip st,st(4)
   1400578e7:	jmp    FWORD PTR [rip+0x27ffeba9]        # 0x168056496
   1400578ed:	rex iret 
   1400578ef:	jmp    QWORD PTR [rdx]
   1400578f1:	and    al,0xab
   1400578f3:	call   FWORD PTR [rdi]
   1400578f5:	and    dl,BYTE PTR [rdi+0x40]
	...
   140057ac7:	add    BYTE PTR [rdi-0x50bfe7a0],dl
   140057acd:	jne    0x140057af7
   140057acf:	dec    DWORD PTR [rax+0x31]
   140057ad2:	rex.WR call FWORD PTR [rsi]
   140057ad5:	and    DWORD PTR [rsi-0x3ecdd901],edx
   140057adb:	jmp    FWORD PTR [rsi]
   140057add:	mov    cl,0xea
   140057adf:	push   QWORD PTR [rcx]
   140057ae1:	loope  0x140057acf
   140057ae3:	push   QWORD PTR [rcx]
   140057ae5:	(bad)  
   140057ae7:	jmp    FWORD PTR [rbx]
   140057ae9:	xchg   esi,esp
   140057aeb:	jmp    QWORD PTR [rsi]
   140057aed:	xor    al,bl
   140057aef:	jmp    QWORD PTR [rax]
   140057af1:	and    ebx,DWORD PTR [rdi+0xdf]
	...
   140057ccb:	add    BYTE PTR [rbx-0x7360db95],ah
   140057cd1:	pop    rdi
   140057cd2:	cmp    edi,edi
   140057cd4:	sbb    eax,0x24ff7d1c
   140057cd9:	sub    DWORD PTR [rdi+rdi*8-0x1a6ed4],esi
   140057ce0:	xor    ecx,esp
   140057ce2:	in     al,dx
   140057ce3:	push   QWORD PTR [rax]
   140057ce5:	int    0xec
   140057ce7:	jmp    FWORD PTR [rcx]
   140057ce9:	pop    rdi
   140057cea:	fdiv   st(7),st
   140057cec:	and    al,0x28
   140057cee:	mov    ah,0xff
   140057cf0:	(bad)  
   140057cf1:	and    dl,BYTE PTR [rdi+0x60]
	...
   140057ecb:	add    BYTE PTR [rdi-0x45dfe8ad],al
   140057ed1:	jg     0x140057f02
   140057ed3:	out    dx,eax
   140057ed4:	xor    ah,BYTE PTR [rdx+rbx*2]
   140057ed7:	jmp    QWORD PTR [rcx]
   140057ed9:	and    esp,DWORD PTR [rdi+rdi*8-0x259ad7]
   140057ee0:	xor    bl,dl
   140057ee2:	in     al,dx
   140057ee3:	jmp    FWORD PTR [rip+0x27ffeaa3]        # 0x16805698c
   140057ee9:	cmp    eax,0x2421ffcc
   140057eee:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140057eef:	mov    edi,0x0
	...
   1400580d0:	ret    0x2b85
   1400580d3:	jo     0x14005814d
   1400580d5:	push   rcx
   1400580d6:	cmp    eax,0x861e1eff
   1400580db:	jmp    QWORD PTR [rip+0x2bffc236]        # 0x16c054317
   1400580e1:	mov    gs,eax
   1400580e3:	jmp    FWORD PTR [rax]
   1400580e5:	pop    rdi
   1400580e6:	fdivp  st(7),st
   1400580e8:	and    al,0x2b
   1400580ea:	mov    dh,0xff
   1400580ec:	(bad)  
   1400580ed:	and    bl,BYTE PTR [rax+0x30]
	...
   1400582d3:	add    BYTE PTR [rcx+0x34bf317f],bh
   1400582d9:	and    eax,0x2320ff59
   1400582de:	lahf   
   1400582df:	jmp    QWORD PTR [rsi]
   1400582e1:	xor    al,0xc3
   1400582e3:	jmp    QWORD PTR [rsi]
   1400582e5:	xor    al,al
   1400582e7:	jmp    QWORD PTR [rdx]
   1400582e9:	and    al,0xa7
   1400582eb:	(bad)  
	...
   1400584d4:	int3   
   1400584d5:	lea    ebp,[rsi]
   1400584d7:	adc    BYTE PTR [rbp+0x54],bh
   1400584da:	cmp    ebp,DWORD PTR [rdi-0x98e3de]
   1400584e0:	sbb    eax,0x20ff8c1f
   1400584e5:	and    bl,BYTE PTR [rbp+0x60]
	...
   1400586db:	add    BYTE PTR [rax],ch
   1400586dd:	sbb    cl,BYTE PTR [rdi+0x10]
   1400586e0:	and    DWORD PTR [rdi],edx
   1400586e2:	push   rsp
   1400586e3:	adc    BYTE PTR [rax],al
	...
   14005ce45:	add    BYTE PTR [rax],al
   14005ce47:	add    BYTE PTR [rcx+0xd474e50],cl
   14005ce4d:	or     bl,BYTE PTR [rdx]
   14005ce4f:	or     al,BYTE PTR [rax]
   14005ce51:	add    BYTE PTR [rax],al
   14005ce53:	or     eax,0x52444849
   14005ce58:	add    BYTE PTR [rax],al
   14005ce5a:	add    DWORD PTR [rax],eax
   14005ce5c:	add    BYTE PTR [rax],al
   14005ce5e:	add    DWORD PTR [rax],eax
   14005ce60:	or     BYTE PTR [rsi],al
   14005ce62:	add    BYTE PTR [rax],al
   14005ce64:	add    BYTE PTR [rdx+rsi*2-0x58],bl
   14005ce68:	data16 add BYTE PTR [rax],al
   14005ce6b:	add    BYTE PTR [rcx],al
   14005ce6d:	jae    0x14005cec1
   14005ce6f:	rex.RXB
   14005ce70:	rex.X add BYTE PTR [rsi+0xe91cce],bpl
   14005ce77:	add    BYTE PTR [rax+0x0],al
   14005ce7a:	rex.WB
   14005ce7b:	rex.R
   14005ce7c:	push   r12
   14005ce7e:	js     0x14005ce81
   14005ce80:	in     al,dx
   14005ce81:	mov    ebp,0x4766b009
   14005ce86:	jne    0x14005ceae
   14005ce88:	cwde   
   14005ce89:	outs   dx,DWORD PTR ds:[rsi]
   14005ce8a:	fild   QWORD PTR [rdx+0x5f]
   14005ce8d:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14005ce8e:	rcl    BYTE PTR [rdx+0x52],cl
   14005ce91:	imul   eax,DWORD PTR [rbx-0x38],0x1a685402
   14005ce98:	mov    bl,0xb4
   14005ce9a:	fst    QWORD PTR [rsi]
   14005ce9c:	jbe    0x14005ce59
   14005ce9e:	and    esp,DWORD PTR [rsi-0x3a]
   14005cea1:	(bad)  
   14005cea2:	sbb    DWORD PTR [rdi+rcx*2+0x30],ebp
   14005cea6:	sbb    eax,0x77475413
   14005ceab:	add    al,0xd1
   14005cead:	int    0x8c
   14005ceaf:	(bad)
   14005ceb2:	iret   
   14005ceb3:	mov    eax,0x3c21d1db
   14005ceb8:	xor    ebp,DWORD PTR [rbp-0x45]
   14005cebb:	in     eax,dx
   14005cebc:	out    dx,al
   14005cebd:	xchg   ecx,eax
   14005cebe:	shl    DWORD PTR [rsi],0xb6
   14005cec1:	(bad)  
   14005cec2:	fadd   st(2),st
   14005cec4:	ss ret 0x8118
   14005cec8:	add    BYTE PTR [rbx],cl
   14005ceca:	int3   
   14005cecb:	(bad)  
   14005cecc:	xor    BYTE PTR [rax],bl
   14005cece:	mov    cl,0x8
   14005ced0:	rex.WB push 0xffffffffa49b0b41
   14005ced6:	sub    ch,BYTE PTR [rip+0xffffffff952548b5]        # 0xd52b1791
   14005cedc:	push   0x7d
   14005cede:	scas   eax,DWORD PTR es:[rdi]
   14005cedf:	fisubr WORD PTR [rbx-0x62083349]
   14005cee5:	int3   
   14005cee6:	cld    
   14005cee7:	out    dx,al
   14005cee8:	leave  
   14005cee9:	jnp    0x14005ceea
   14005ceeb:	imul   DWORD PTR [rdx+0x51]
   14005ceee:	push   rbp
   14005ceef:	mov    ebp,0x59babdff
   14005cef4:	jne    0x14005cef5
   14005cef6:	cmp    al,0x5b
   14005cef8:	sahf   
   14005cef9:	cmp    al,0x79
   14005cefb:	xor    cl,BYTE PTR [rdi+0x66]
   14005cefe:	fdivrp st(5),st
   14005cf00:	test   eax,edx
   14005cf02:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14005cf03:	(bad)  
   14005cf04:	add    ebp,DWORD PTR [rbp-0x4bf0a5f9]
   14005cf0a:	(bad)  
   14005cf0b:	push   0xffffffffa07ad03d
   14005cf10:	cmc    
   14005cf11:	rex jmp 0x14005ce95
   14005cf14:	(bad)  
   14005cf15:	add    ebp,DWORD PTR [rbp-0x4bf0a5f9]
   14005cf1b:	(bad)  
   14005cf1c:	push   0xffffffffa07ad03d
   14005cf21:	cmc    
   14005cf22:	rex jmp 0x14005cea6
   14005cf25:	(bad)  
   14005cf26:	add    ebp,DWORD PTR [rbp-0x4bf0a5f9]
   14005cf2c:	(bad)  
   14005cf2d:	push   0xffffffffa07ad03d
   14005cf32:	cmc    
   14005cf33:	rex jmp 0x14005ceb7
   14005cf36:	(bad)  
   14005cf37:	add    ebp,DWORD PTR [rbp-0x4bf0a5f9]
   14005cf3d:	(bad)  
   14005cf3e:	push   0xffffffffa07ad03d
   14005cf43:	cmc    
   14005cf44:	rex jmp 0x14005cec8
   14005cf47:	(bad)  
   14005cf48:	add    ebp,DWORD PTR [rbp-0x63f0a5f9]
   14005cf4e:	rex.WXB (bad) 
   14005cf50:	js     0x14005cf1d
   14005cf52:	rex.RB (bad) 
   14005cf54:	mov    cl,0xe5
   14005cf56:	pop    rsp
   14005cf57:	push   0x6f
   14005cf59:	fcmovnbe st,st(6)
   14005cf5b:	in     eax,0xef
   14005cf5d:	sbb    DWORD PTR [rsi-0x683b201b],0x6c37c2df
   14005cf67:	mov    ebx,0xeeabbde5
   14005cf6c:	mov    ecx,0x5ff3a6f3
   14005cf71:	clc    
   14005cf72:	icebp  
   14005cf73:	(bad)  
   14005cf74:	or     eax,0xed6133bd
   14005cf79:	rex iret 
   14005cf7b:	xchg   DWORD PTR [rdi-0x6],eax
   14005cf7e:	jp     0x14005cffe
   14005cf80:	repz fucomip st,st(6)
   14005cf83:	js     0x14005cffb
   14005cf85:	(bad)  
   14005cf86:	retf   
   14005cf87:	xlat   BYTE PTR ds:[rbx]
   14005cf88:	fisubr WORD PTR [rdx+0x68]
   14005cf8b:	cmp    eax,0x681e78b0
   14005cf90:	(bad)  
   14005cf91:	add    BYTE PTR [rip+0xffffffffff9aff7c],0x72        # 0x13fa0cf14
   14005cf98:	fistp  WORD PTR [rdx+0x7dcffdfe]
   14005cf9e:	jne    0x14005cf6d
   14005cfa0:	xchg   edi,eax
   14005cfa1:	outs   dx,BYTE PTR ds:[rsi]
   14005cfa2:	fnstsw WORD PTR [rdx-0x3d883887]
   14005cfa8:	push   rbp
   14005cfa9:	xor    DWORD PTR [rbx+0x61],0x7d
   14005cfad:	jg     0x14005d01e
   14005cfaf:	sbb    dl,ch
   14005cfb1:	in     eax,dx
   14005cfb2:	or     eax,0xfb7373b3
   14005cfb7:	addr32 rex.X js 0x14005cfae
   14005cfbb:	mov    ebx,0xc1ea7c9e
   14005cfc0:	add    eax,0xd6acb454
   14005cfc5:	add    ebx,DWORD PTR [rbp-0x13]
   14005cfc8:	sbb    esi,0x116eb6ae
   14005cfce:	lea    esp,[rbx-0x10]
   14005cfd1:	test   esp,0xe4757f4c
   14005cfd7:	loope  0x14005cf94
   14005cfd9:	mov    dh,0xae
   14005cfdb:	jg     0x14005cfd7
   14005cfdd:	movabs eax,ds:0x3fa060b86ce0e570
   14005cfe6:	pushf  
   14005cfe7:	fistp  QWORD PTR [rdi]
   14005cfe9:	adc    BYTE PTR [rsi],ch
   14005cfeb:	sbb    al,0x18
   14005cfed:	or     BYTE PTR [rdi],dl
   14005cfef:	or     eax,0xd359ae0e
   14005cff4:	fcomi  st,st(7)
   14005cff6:	(bad)  
   14005cff7:	minps  xmm7,XMMWORD PTR [rsi-0x17]
   14005cffb:	(bad)  
   14005cffc:	rex.RB xor al,0xb3
   14005cfff:	lods   eax,DWORD PTR ds:[rsi]
   14005d000:	mov    edx,0xf2cbc0f5
   14005d005:	rex cmp eax,DWORD PTR [rcx]
   14005d008:	int3   
   14005d009:	out    dx,eax
   14005d00a:	mov    esi,0x3cf6075b
   14005d00f:	mov    ecx,0x7763d575
   14005d014:	test   DWORD PTR [rbx+0x7b],ecx
   14005d017:	mov    bl,0x79
   14005d01a:	or     dh,bh
   14005d01c:	jne    0x14005d09b
   14005d01e:	jge    0x14005d081
   14005d020:	rcr    DWORD PTR [rdx],cl
   14005d022:	sbb    al,0x17
   14005d024:	hlt    
   14005d025:	xchg   BYTE PTR [rbp+0x79c37beb],cl
   14005d02b:	ret    
   14005d02c:	std    
   14005d02d:	imul   eax,DWORD PTR [rsi+0x7b],0x7a
   14005d031:	mov    edi,0x5d97c7fa
   14005d036:	mov    dl,0x66
   14005d038:	jle    0x14005d06f
   14005d03a:	sub    eax,0xf740f5a7
   14005d03f:	jp     0x14005cfe1
   14005d041:	mov    edi,0x3c5b4d7b
   14005d046:	retf   
   14005d047:	scas   al,BYTE PTR es:[rdi]
   14005d048:	cld    
   14005d049:	cmc    
   14005d04a:	cmp    ebx,edi
   14005d04c:	shl    DWORD PTR [rbx],cl
   14005d04e:	cmp    eax,0xc3e8e375
   14005d053:	pop    rdi
   14005d054:	bndstx [rsi],bnd1
   14005d057:	out    dx,al
   14005d058:	or     al,0x17
   14005d05a:	or     eax,0xbdd586f7
   14005d05f:	jge    0x14005d0c2
   14005d061:	std    
   14005d062:	mov    bh,BYTE PTR [rsi-0x424a1e90]
   14005d068:	(bad)  
   14005d069:	(bad)  
   14005d06a:	ins    DWORD PTR es:[rdi],dx
   14005d06b:	rex.WRXB cdqe 
   14005d06d:	js     0x14005d0d9
   14005d06f:	cs add al,0x9c
   14005d072:	rex lods eax,DWORD PTR ds:[rsi]
   14005d074:	fwait
   14005d075:	out    dx,al
   14005d076:	pop    rdi
   14005d077:	jae    0x14005d0ed
   14005d079:	push   0xffffffffffffffee
   14005d07b:	push   rbx
   14005d07c:	mov    al,0xf6
   14005d07e:	int    0x8b
   14005d080:	addr32 jno 0x14005d0de
   14005d083:	jae    0x14005d070
   14005d085:	adc    DWORD PTR [rbx-0xd],0xa803bb40
   14005d08c:	stc    
   14005d08d:	in     eax,dx
   14005d08e:	cld    
   14005d08f:	pop    rdi
   14005d090:	(bad)  
   14005d091:	popf   
   14005d092:	sub    eax,0xde376bc3
   14005d097:	cmp    al,0xb0
   14005d099:	sti    
   14005d09a:	leave  
   14005d09b:	xor    BYTE PTR [rsi-0x464f3e03],dh
   14005d0a1:	out    dx,eax
   14005d0a2:	pop    rax
   14005d0a3:	pop    rax
   14005d0a4:	test   eax,esp
   14005d0a6:	pop    rdi
   14005d0a7:	xor    ebx,0xf7178dfe
   14005d0ad:	test   cl,dl
   14005d0af:	(bad)  
   14005d0b0:	hlt    
   14005d0b1:	xchg   ecx,eax
   14005d0b3:	lahf   
   14005d0b4:	in     al,dx
   14005d0b5:	packsswb mm2,mm7
   14005d0b8:	hlt    
   14005d0b9:	xchg   BYTE PTR [rip+0x395843ab],dl        # 0x1795e146a
   14005d0bf:	ficom  DWORD PTR [rbx]
   14005d0c1:	push   rsi
   14005d0c2:	div    dh
   14005d0c4:	fdivrp st(0),st
   14005d0c6:	rex.RXB xchg r15d,eax
   14005d0c8:	pop    rbp
   14005d0c9:	repnz sahf 
   14005d0cb:	(bad)  
   14005d0cc:	stos   BYTE PTR es:[rdi],al
   14005d0cd:	(bad)  
   14005d0ce:	ins    DWORD PTR es:[rdi],dx
   14005d0cf:	cmp    eax,0x681ef5d0
   14005d0d4:	(bad)  
   14005d0d5:	sbb    BYTE PTR [rdx+0x17],0xad
   14005d0d9:	mov    esp,0xfa5b8ae4
   14005d0de:	jp     0x14005d0a2
   14005d0e0:	(bad)  
   14005d0e1:	xchg   ecx,eax
   14005d0e2:	(bad)  
   14005d0e3:	jl     0x14005d10c
   14005d0e5:	lods   al,BYTE PTR ds:[rsi]
   14005d0e6:	(bad)  
   14005d0e7:	cld    
   14005d0e8:	sbb    al,0xb6
   14005d0ea:	(bad)  
   14005d0eb:	mov    ebp,0xbfc11461
   14005d0f0:	jb     0x14005d106
   14005d0f2:	(bad)  
   14005d0f3:	push   rbp
   14005d0f4:	mov    ebp,0xbe8af7a1
   14005d0f9:	rol    BYTE PTR [rbx+0x7d55ffa3],1
   14005d0ff:	(bad)  
   14005d100:	and    esp,DWORD PTR fs:[rsi]
   14005d103:	test   BYTE PTR [rip+0x3f55613d],dl        # 0x17f5b3246
   14005d109:	loopne 0x14005d0a9
   14005d10b:	ficomp WORD PTR [rbx-0x19268021]
   14005d111:	not    BYTE PTR [rax+riz*4-0x1a]
   14005d115:	iret   
   14005d116:	(bad)  
   14005d117:	in     eax,dx
   14005d118:	outs   dx,BYTE PTR ds:[rsi]
   14005d119:	lfs    edx,FWORD PTR [rbx]
   14005d11c:	sub    bl,0x9f
   14005d11f:	repz (bad) 
   14005d122:	(bad)  [rdi]
   14005d124:	or     al,0xaf
   14005d126:	fnsave [rax+0x63]
   14005d129:	dec    DWORD PTR [rbx+0x53e8c2bb]
   14005d12f:	fisttp WORD PTR [rbx]
   14005d131:	(bad)  
   14005d132:	hlt    
   14005d133:	rex.WRX pop rcx
   14005d135:	lock and edi,DWORD PTR [rax+0x3d958ac3]
   14005d13c:	(bad)  
   14005d13d:	add    BYTE PTR [rcx-0x413bd1e1],al
   14005d143:	(bad)  
   14005d144:	mov    esp,0x3173d09e
   14005d149:	out    dx,al
   14005d14a:	(bad)  
   14005d14b:	(bad)  
   14005d14c:	rex.X sbb BYTE PTR [rcx],bl
   14005d14f:	or     esp,DWORD PTR [rcx+0x74]
   14005d152:	mov    eax,0x35843b87
   14005d157:	add    esp,DWORD PTR [rcx-0x5158e919]
   14005d15d:	add    eax,0xbd740f5b
   14005d162:	(bad)  
   14005d163:	fimul  DWORD PTR [rcx]
   14005d165:	shl    BYTE PTR [rbp-0x2f],0xe8
   14005d169:	(bad)  
   14005d16a:	mov    ch,0xb7
   14005d16c:	test   BYTE PTR [rsi+0x4f4308ac],0x3e
   14005d173:	adc    al,0x56
   14005d175:	out    dx,eax
   14005d176:	fist   WORD PTR [rip+0x70f40c36]        # 0x1b0f9ddb2
   14005d17c:	gs (bad) 
   14005d17f:	out    0x1f,eax
   14005d181:	(bad)  
   14005d182:	ss hlt 
   14005d184:	test   BYTE PTR [rsi+0x5c],bl
   14005d187:	cld    
   14005d188:	add    eax,ecx
   14005d18a:	(bad)  
   14005d18b:	std    
   14005d18c:	ret    
   14005d18d:	cli    
   14005d18e:	sahf   
   14005d18f:	shl    BYTE PTR [rdi+0x59],1
   14005d192:	pop    rdi
   14005d193:	sbb    BYTE PTR [rsi+0x7],bl
   14005d196:	sbb    DWORD PTR [rsi+rax*1-0x3d963f54],ebx
   14005d19d:	jo     0x14005d20e
   14005d19f:	out    dx,eax
   14005d1a0:	mov    dh,0x3f
   14005d1a2:	mov    esp,0x4e2d92ec
   14005d1a7:	or     esi,DWORD PTR gs:[rsi+0xf6ae81e]
   14005d1ae:	mov    ah,0x13
   14005d1b0:	rex (bad) 
   14005d1b2:	(bad)  
   14005d1b3:	lods   al,BYTE PTR ds:[rsi]
   14005d1b4:	(bad)  
   14005d1b5:	out    dx,eax
   14005d1b6:	sbb    DWORD PTR [rdx+0x7f],ebx
   14005d1b9:	ficom  WORD PTR [rsi+0x6103f1de]
   14005d1bf:	in     al,0xc9
   14005d1c1:	(bad)  
   14005d1c2:	ret    
   14005d1c3:	xchg   BYTE PTR [rcx+0x1fef3b09],bh
   14005d1c9:	(bad)  
   14005d1ca:	jmp    0x17d8994d8
   14005d1cf:	(bad)  
   14005d1d0:	mov    BYTE PTR [rbx+0x3f046afe],ch
   14005d1d6:	add    DWORD PTR ss:[rsi+0x1273eab0],edx
   14005d1dd:	sbb    ah,bl
   14005d1df:	mov    WORD PTR [rbp-0x3cf7b740],ds
   14005d1e5:	cwde   
   14005d1e6:	sub    al,0x70
   14005d1e8:	rex.RXB and r12b,r14b
   14005d1eb:	div    esp
   14005d1ed:	fcomp  QWORD PTR [rsp+0x40f5acda]
   14005d1f4:	xlat   BYTE PTR ds:[rbx]
   14005d1f5:	jnp    0x14005d197
   14005d1f7:	popf   
   14005d1f8:	add    al,dl
   14005d1fa:	rex.RB
   14005d1fb:	fdivp  st(1),st
   14005d1fe:	rex.RXB imul r15d,r10d,0x7
   14005d202:	(bad)  
   14005d203:	outs   dx,BYTE PTR ds:[rsi]
   14005d204:	(bad)  
   14005d205:	pop    rdx
   14005d206:	ja     0x14005d266
   14005d208:	sbb    ah,bl
   14005d20a:	stc    
   14005d20b:	js     0x14005d225
   14005d20d:	(bad)  
   14005d20f:	fs fcomp st(0)
   14005d212:	(bad)  
   14005d213:	(bad)  
   14005d214:	sbb    ah,bh
   14005d216:	cmp    DWORD PTR [rax+rdx*1],0xffffffec
   14005d21a:	sbb    DWORD PTR [rax+0x55e11000],0xffffff87
   14005d221:	(bad)  
   14005d223:	call   0x11f865b81
   14005d228:	mov    ecx,cs
   14005d22a:	(bad)  
   14005d22b:	xor    al,0x84
   14005d22d:	movabs eax,ds:0xeedf200098024c61
   14005d236:	add    ch,BYTE PTR [rdx]
   14005d238:	(bad)  
   14005d239:	mov    ch,0x50
   14005d23b:	xchg   edi,eax
   14005d23c:	jnp    0x14005d1de
   14005d23e:	popf   
   14005d23f:	add    al,bl
   14005d241:	rex.B cmp eax,0xaf0cb7bd
   14005d247:	pop    rax
   14005d248:	mov    ch,0x26
   14005d24a:	jo     0x14005d267
   14005d24c:	(bad)  
   14005d24d:	clc    
   14005d24e:	std    
   14005d24f:	(bad)  
   14005d250:	int    0xe4
   14005d252:	xor    DWORD PTR [rax-0x633e704e],0xfa10a18e
   14005d25c:	jno    0x14005d268
   14005d25e:	adc    BYTE PTR [rax-0x207ef6e9],dl
   14005d264:	mov    ebx,0xf0003b0e
   14005d269:	cmp    BYTE PTR [rcx+0xc],cl
   14005d26c:	cmc    
   14005d26d:	(bad)  
   14005d26e:	mov    bh,0x80
   14005d270:	or     DWORD PTR [rbx],eax
   14005d272:	jae    0x14005d2b7
   14005d274:	mov    ebx,0xd51c280b
   14005d279:	and    bl,ch
   14005d27b:	(bad)  
   14005d27c:	xor    DWORD PTR [rbx+0x7e],0xffe0b802
   14005d283:	mov    esp,0x373086f3
   14005d288:	mov    ebx,0xa6c3646d
   14005d28d:	sar    bh,1
   14005d28f:	shl    BYTE PTR [rbx+0x61],cl
   14005d292:	hlt    
   14005d293:	(bad)  
   14005d295:	xchg   DWORD PTR [rbp+0x3d],esi
   14005d298:	sar    DWORD PTR [rax],cl
   14005d29a:	lahf   
   14005d29b:	mov    DWORD PTR [rbp+0x3f],0xa200f304
   14005d2a2:	jns    0x14005d2b4
   14005d2a4:	pop    rbx
   14005d2a5:	cld    
   14005d2a6:	sahf   
   14005d2a7:	(bad)  
   14005d2a8:	jo     0x14005d2ff
   14005d2aa:	std    
   14005d2ab:	test   eax,0xa4c2189
   14005d2b0:	mov    eax,0x3e78300b
   14005d2b5:	or     cl,BYTE PTR es:[rsi+rcx*1-0x7d]
   14005d2ba:	std    
   14005d2bb:	add    BYTE PTR [rbx],0x9e
   14005d2be:	adc    eax,eax
   14005d2c0:	cs loopne 0x14005d2d2
   14005d2c3:	fisubr DWORD PTR [rbx+0x1]
   14005d2c6:	fnstsw WORD PTR [rdx]
   14005d2c8:	out    0x5b,al
   14005d2ca:	mov    ebx,0xe9ce079c
   14005d2cf:	or     eax,esp
   14005d2d1:	(bad)  
   14005d2d2:	(bad)  
   14005d2d4:	ret    0x309a
   14005d2d7:	(bad)  
   14005d2d8:	ja     0x14005d345
   14005d2da:	(bad)  
   14005d2dc:	je     0x14005d2c6
   14005d2de:	pop    rbx
   14005d2df:	mov    bl,0x3e
   14005d2e1:	or     al,0xee
   14005d2e3:	js     0x14005d309
   14005d2e5:	lods   al,BYTE PTR ds:[rsi]
   14005d2e6:	cmp    BYTE PTR [rax+0x2061ac27],bh
   14005d2ec:	xor    edi,eax
   14005d2ee:	icebp  
   14005d2ef:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14005d2f0:	iret   
   14005d2f1:	add    al,ah
   14005d2f3:	add    DWORD PTR [rcx+rdi*2],eax
   14005d2f6:	(bad)  
   14005d2f8:	add    esp,eax
   14005d2fa:	jbe    0x14005d295
   14005d2fc:	js     0x14005d318
   14005d2fe:	adc    BYTE PTR [rbp-0x11831041],0x0
   14005d305:	xor    BYTE PTR [rcx],al
   14005d307:	or     al,0xe2
   14005d309:	rex mov ecx,0xc01cec21
   14005d30f:	mov    edx,0xb16e14a9
   14005d314:	(bad)  
   14005d315:	add    ebx,ebp
   14005d317:	out    0x81,eax
   14005d319:	cli    
   14005d31a:	(bad)  
   14005d31b:	(bad)  
   14005d31c:	jge    0x14005d334
   14005d31e:	sahf   
   14005d31f:	or     DWORD PTR [rbx-0x10d88a22],ecx
   14005d325:	xlat   BYTE PTR ds:[rbx]
   14005d326:	outs   dx,DWORD PTR ds:[rsi]
   14005d327:	cmp    eax,0xd3773d36
   14005d32c:	rcl    ah,0xe4
   14005d32f:	xchg   esi,eax
   14005d330:	xor    esp,ebp
   14005d332:	(bad)  
   14005d333:	icebp  
   14005d334:	fdivr  QWORD PTR [rdi+0x18]
   14005d337:	jns    0x14005d31b
   14005d339:	(bad)  
   14005d33a:	mov    al,0x6a
   14005d33c:	data16 and cl,BYTE PTR [rdx+riz*8-0x152605e]
   14005d344:	or     dh,ah
   14005d346:	jle    0x14005d3c0
   14005d348:	test   al,0x7f
   14005d34a:	and    eax,0x2f9171a4
   14005d34f:	(bad)  
   14005d350:	push   rdi
   14005d351:	push   rax
   14005d352:	and    al,0x4e
   14005d354:	or     BYTE PTR [rax-0x7],bl
   14005d357:	jns    0x14005d3ca
   14005d359:	jo     0x14005d363
   14005d35b:	(bad)  
   14005d35c:	loopne 0x14005d39c
   14005d35e:	rex.WR add bl,r12b
   14005d361:	sub    BYTE PTR [rbx],bh
   14005d363:	xlat   BYTE PTR ds:[rbx]
   14005d364:	adc    esp,DWORD PTR [rsi+0x33df4606]
   14005d36a:	repnz (bad) 
   14005d36c:	(bad)  
   14005d36d:	(bad)  
   14005d36e:	sahf   
   14005d36f:	mov    DWORD PTR [rsi-0x32],edi
   14005d372:	sbb    al,0x8b
   14005d374:	cdq    
   14005d375:	(bad)
   14005d37a:	sbb    al,0x90
   14005d37c:	call   0x14b4217e3
   14005d381:	(bad)  
   14005d382:	fcom   QWORD PTR [rbx+0x549c4e1]
   14005d388:	pushf  
   14005d389:	mov    bl,BYTE PTR [rdx-0x27]
   14005d38c:	mov    ecx,0x1bcbee1a
   14005d391:	retf   
   14005d392:	repz sbb eax,0xea00502c
   14005d398:	cwde   
   14005d399:	jrcxz  0x14005d31e
   14005d39b:	xchg   esi,eax
   14005d39c:	cs jns 0x14005d3bd
   14005d39f:	leave  
   14005d3a0:	(bad)  
   14005d3a1:	(bad)  
   14005d3a2:	sub    eax,esp
   14005d3a4:	and    cl,BYTE PTR [rcx]
   14005d3a6:	rex.W in eax,0x3d
   14005d3a9:	iret   
   14005d3aa:	xchg   ebp,eax
   14005d3ab:	xchg   ebp,eax
   14005d3ac:	cwde   
   14005d3ad:	or     BYTE PTR [rdx+0x2f],0x48
   14005d3b1:	push   rbp
   14005d3b2:	std    
   14005d3b3:	mov    ?,WORD PTR [rdi+0x52]
   14005d3b6:	ins    DWORD PTR es:[rdi],dx
   14005d3b7:	rex.WR jne 0x14005d363
   14005d3ba:	mov    eax,0x3ce0fd80
   14005d3bf:	mov    BYTE PTR [rbx+0x3f],ah
   14005d3c2:	(bad)  
   14005d3c4:	adc    dl,dh
   14005d3c6:	scas   eax,DWORD PTR es:[rdi]
   14005d3c7:	adc    DWORD PTR [rdi+0x26bff8f9],ebx
   14005d3cd:	std    
   14005d3ce:	lods   al,BYTE PTR ds:[rsi]
   14005d3cf:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14005d3d0:	jae    0x14005d439
   14005d3d2:	add    bh,BYTE PTR [rax-0x29]
   14005d3d5:	popf   
   14005d3d6:	pop    rbx
   14005d3d7:	loope  0x14005d3b2
   14005d3d9:	sbb    esi,DWORD PTR [rcx-0x44]
   14005d3dc:	adc    eax,0x441d6c7
   14005d3e1:	xor    al,0x1e
   14005d3e3:	out    dx,eax
   14005d3e4:	(bad)  
   14005d3e6:	(bad)  
   14005d3e7:	mov    es,WORD PTR [rcx+riz*4-0x3f3d6473]
   14005d3ee:	sahf   
   14005d3ef:	in     eax,dx
   14005d3f0:	(bad)  
   14005d3f1:	in     al,dx
   14005d3f2:	mov    ecx,0xdfd4f027
   14005d3f7:	sub    al,0xce
   14005d3f9:	in     eax,0xf1
   14005d3fb:	movabs al,ds:0xe43f43f4571fba0f
   14005d404:	cli    
   14005d405:	(bad)  
   14005d406:	xor    BYTE PTR [rax+rsi*4],dl
   14005d409:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14005d40a:	(bad)  
   14005d40b:	adc    ah,BYTE PTR [rdi]
   14005d40d:	add    ah,ch
   14005d40f:	adc    BYTE PTR [rdx+0x70],bh
   14005d412:	imul   esi,DWORD PTR [rax+0x0],0xffffffb7
   14005d416:	add    eax,DWORD PTR [rdi]
   14005d418:	jbe    0x14005d3e7
   14005d41a:	loope  0x14005d3b0
   14005d41c:	add    ecx,edi
   14005d41e:	ins    BYTE PTR es:[rdi],dx
   14005d41f:	rex.WRXB pop r8
   14005d421:	cmp    eax,0xf75c3473
   14005d426:	cld    
   14005d427:	rex.XB loope 0x14005d418
   14005d42a:	or     ebx,edi
   14005d42c:	shr    BYTE PTR [rax],1
   14005d42e:	jbe    0x14005d426
   14005d430:	or     BYTE PTR [rcx-0x40],ch
   14005d433:	imul   ebx,esp,0xcc268809
   14005d439:	(bad)  
   14005d43a:	cwde   
   14005d43b:	and    esi,edx
   14005d43d:	(bad)  
   14005d43e:	jg     0x14005d42e
   14005d440:	and    eax,0xfcf9b3e7
   14005d445:	rex.RB push r9
   14005d447:	adc    esi,DWORD PTR [rbx-0x4e]
   14005d44a:	push   rsi
   14005d44b:	sbb    al,0xb8
   14005d44d:	rex.W add cl,al
   14005d450:	pop    rcx
   14005d451:	and    ebx,0x6
   14005d454:	rex.WRX jb 0x14005d49f
   14005d457:	sbb    al,0x93
   14005d459:	(bad)  
   14005d45a:	push   rbx
   14005d45b:	mov    al,0xef
   14005d45d:	push   rdi
   14005d45e:	(bad)  
   14005d45f:	lock and al,ah
   14005d462:	iret   
   14005d463:	cmp    dh,0xe9
   14005d466:	cdq    
   14005d467:	fcmovnu st,st(7)
   14005d469:	rex.WRB clc 
   14005d46b:	mov    WORD PTR [rdi-0x3bfec21b],fs
   14005d471:	xchg   ebp,eax
   14005d472:	jle    0x14005d48f
   14005d474:	mov    esp,0x16f8edc8
   14005d479:	sbb    al,0x96
   14005d47b:	mov    eax,0x8959af90
   14005d480:	mov    BYTE PTR [rsi+0x7],al
   14005d483:	lock mov dh,0x7e
   14005d486:	(bad)  
   14005d487:	sahf   
   14005d488:	jmp    0x114018daa
   14005d48d:	(bad)  
   14005d48e:	mov    WORD PTR [rdi],ss
   14005d490:	(bad)  
   14005d491:	cmp    BYTE PTR [rcx],dh
   14005d493:	in     al,0xe0
   14005d495:	addr32 fadd st(3),st
   14005d498:	rex.XB jge 0x14005d513
   14005d49b:	fsub   DWORD PTR [rdi-0x41fffb1d]
   14005d4a1:	pop    rbp
   14005d4a2:	(bad)  
   14005d4a3:	ror    BYTE PTR [rsi+0x139fa1],0x76
   14005d4aa:	add    edi,DWORD PTR [rax+0x51]
   14005d4ad:	xor    BYTE PTR [rsp+rbx*1],cl
   14005d4b0:	jrcxz  0x14005d467
   14005d4b2:	sbb    BYTE PTR [rsi+0x7f4f73f0],0x75
   14005d4b9:	adc    DWORD PTR [rdi],esp
   14005d4bb:	xor    BYTE PTR [rax+riz*8],0x34
   14005d4bf:	out    dx,al
   14005d4c0:	add    al,0x44
   14005d4c2:	(bad)  
   14005d4c3:	int3   
   14005d4c4:	(bad)  
   14005d4c5:	cwde   
   14005d4c6:	and    esi,edx
   14005d4c8:	(bad)  
   14005d4c9:	jg     0x14005d53f
   14005d4cb:	xchg   ecx,eax
   14005d4cc:	mov    ebx,DWORD PTR [rsi+0x1b]
   14005d4cf:	sub    ebx,DWORD PTR [rcx-0x5ea7e366]
   14005d4d5:	out    0xda,al
   14005d4d7:	(bad)  
   14005d4d8:	jg     0x14005d4f3
   14005d4da:	stc    
   14005d4db:	and    cl,BYTE PTR [rcx]
   14005d4dd:	jo     0x14005d544
   14005d4df:	cmp    al,0x4d
   14005d4e1:	lock push rsi
   14005d4e3:	mov    ecx,cs
   14005d4e5:	lods   eax,DWORD PTR ds:[rsi]
   14005d4e6:	adc    BYTE PTR [rdx-0x1a81047],bh
   14005d4ec:	push   0xfffffffffbd78607
   14005d4f1:	add    BYTE PTR [rdi+0x78],bh
   14005d4f4:	cli    
   14005d4f5:	div    BYTE PTR [rdi-0x11]
   14005d4f8:	scas   eax,DWORD PTR es:[rdi]
   14005d4f9:	or     bl,BYTE PTR [rsi+0x567ea85e]
   14005d4ff:	jnp    0x14005d57b
   14005d501:	mov    ch,0x2f
   14005d503:	xchg   esi,eax
   14005d504:	mov    dh,0x77
   14005d506:	fnstsw WORD PTR [rcx-0x311443db]
   14005d50c:	pop    rbx
   14005d50d:	push   rcx
   14005d50e:	std    
   14005d50f:	rex.WXB cmp BYTE PTR [r14-0x3f],bpl
   14005d513:	mov    cl,0x5
   14005d515:	xchg   edx,edx
   14005d517:	push   0x4
   14005d519:	(bad)  
   14005d51a:	xacquire xchg DWORD PTR cs:[rax-0x351f0093],eax
   14005d522:	(bad)  
   14005d523:	movabs eax,ds:0xc247e9f4610be0ef
   14005d52c:	fcomp  st(4)
   14005d52e:	push   rsp
   14005d52f:	sbb    cl,al
   14005d531:	in     al,dx
   14005d532:	(bad)  
   14005d533:	sub    edi,DWORD PTR [rdi]
   14005d535:	ret    0xfa0
   14005d538:	xor    BYTE PTR [rsi],dh
   14005d53a:	add    esp,DWORD PTR [rcx-0x270618e9]
   14005d540:	or     al,0x74
   14005d542:	rex.WRX fcomp QWORD PTR [rcx]
   14005d545:	and    al,ch
   14005d547:	jnp    0x14005d5ba
   14005d549:	or     ah,BYTE PTR [rax+0x13]
   14005d54c:	add    BYTE PTR [rsi],ch
   14005d54e:	or     al,0xf2
   14005d550:	hlt    
   14005d551:	cmp    DWORD PTR [rdx],0x33b43b2e
   14005d557:	pop    rsp
   14005d558:	cmc    
   14005d559:	ror    BYTE PTR [rdi-0x5cc468c5],cl
   14005d55f:	(bad)  
   14005d560:	xor    al,0xa0
   14005d562:	xor    al,0xae
   14005d564:	add    al,0xc4
   14005d566:	pop    rdx
   14005d567:	fneni(8087 only) 
   14005d569:	xchg   DWORD PTR [rdi],ebx
   14005d56b:	mov    esp,0x557f2a4f
   14005d570:	fucomp st(4)
   14005d572:	clc    
   14005d573:	repz stc 
   14005d575:	mov    ebx,esi
   14005d577:	xor    al,0x31
   14005d579:	(bad)  
   14005d57a:	imul   ebx,DWORD PTR [rsi],0x6
   14005d57d:	cs xchg edx,eax
   14005d57f:	add    bl,ah
   14005d581:	rex.R mov sil,0xa7
   14005d584:	cmp    eax,ebx
   14005d586:	(bad)  
   14005d587:	add    edi,DWORD PTR [rbx]
   14005d589:	mov    dh,0x40
   14005d58b:	(bad)  
   14005d58c:	movsxd esi,DWORD PTR [rdi-0x12]
   14005d58f:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14005d590:	(bad)  
   14005d591:	pop    rdi
   14005d592:	inc    bl
   14005d594:	pop    rbx
   14005d595:	jno    0x14005d5a7
   14005d597:	(bad)  
   14005d598:	in     eax,dx
   14005d599:	imul   edi,DWORD PTR [rcx+0x4d],0x6fe05500
   14005d5a0:	xchg   DWORD PTR [rdi-0x290d8a4a],esp
   14005d5a6:	fmul   DWORD PTR [rax-0x51]
   14005d5a9:	cmp    eax,0xef5e43d8
   14005d5ae:	mov    cl,0xa9
   14005d5b0:	adc    BYTE PTR [rdi],0x7f
   14005d5b3:	in     al,dx
   14005d5b4:	(bad)  
   14005d5b5:	(bad)  
   14005d5b7:	shl    edi,0xf1
   14005d5ba:	loopne 0x14005d5cb
   14005d5bc:	out    dx,al
   14005d5bd:	std    
   14005d5be:	jae    0x14005d5c2
   14005d5c0:	rex
   14005d5c1:	lock movsxd esp,DWORD PTR [rdi+0x1f]
   14005d5c5:	lock imul BYTE PTR [rdi-0x64]
   14005d5c9:	add    BYTE PTR [rax-0x5],bh
   14005d5cc:	(bad)  
   14005d5cd:	and    eax,ebx
   14005d5cf:	jne    0x14005d5e1
   14005d5d1:	retf   
   14005d5d2:	sbb    ecx,DWORD PTR [rip+0xfffffffff5c81ef4]        # 0x135cdf4cc
   14005d5d8:	loopne 0x14005d5f3
   14005d5da:	add    DWORD PTR [rcx],0xe00c2a9c
   14005d5e0:	rex.X movabs al,ds:0xc6f044e00260069d
   14005d5ea:	popf   
   14005d5eb:	ja     0x14005d588
   14005d5ed:	call   0x1434fd1cb
   14005d5f2:	rex.WX jrcxz 0x14005d63f
   14005d5f5:	xor    al,0xa1
   14005d5f8:	fiadd  WORD PTR [rsi-0x29deadc4]
   14005d5fe:	scas   al,BYTE PTR es:[rdi]
   14005d5ff:	cld    
   14005d600:	mov    ecx,0xe6cf9c97
   14005d605:	repz (bad) 
   14005d607:	rex.RB
   14005d608:	rex.WRB int3 
   14005d60a:	leave  
   14005d60b:	pop    rdx
   14005d60c:	jno    0x14005d5ee
   14005d60e:	and    cl,BYTE PTR [rcx]
   14005d610:	enter  0x6b8a,0x63
   14005d614:	enter  0x5df1,0x3d
   14005d618:	sbb    al,0x6a
   14005d61a:	xor    DWORD PTR [rcx-0x29],ecx
   14005d61d:	ss adc al,0xdc
   14005d620:	fdivp  st(7),st
   14005d622:	retf   
   14005d623:	jg     0x14005d5a5
   14005d625:	mov    eax,esp
   14005d627:	movzx  esp,BYTE PTR [rsi+riz*8]
   14005d62b:	imul   ecx,ecx,0xf004cf96
   14005d631:	scas   al,BYTE PTR es:[rdi]
   14005d632:	cmp    ebx,edi
   14005d634:	or     ecx,DWORD PTR [rdi+0x1b63803c]
   14005d63a:	mov    cs,WORD PTR [rsi+0x56f4b789]
   14005d640:	(bad)  
   14005d641:	add    cl,al
   14005d643:	sbb    eax,0x8b8634
   14005d648:	mov    esp,0xa3fa37f8
   14005d64d:	jnp    0x14005d611
   14005d64f:	or     BYTE PTR [rsi],ch
   14005d651:	dec    BYTE PTR [rbp-0x21e2030f]
   14005d657:	out    0xea,eax
   14005d659:	lea    edx,[rdi+0x7e]
   14005d65c:	ins    BYTE PTR es:[rdi],dx
   14005d65d:	add    ah,al
   14005d65f:	and    al,0xd0
   14005d661:	sub    DWORD PTR [rip+0xed9a5be],0x6a        # 0x14edf7c26
   14005d668:	leave  
   14005d669:	rex.X cmp esp,ebp
   14005d66c:	stc    
   14005d66d:	jno    0x14005d61c
   14005d66f:	add    cl,al
   14005d671:	iret   
   14005d672:	sbb    al,0xa7
   14005d674:	or     eax,0xc7408936
   14005d679:	(bad)  
   14005d67a:	fdivp  st(5),st
   14005d67c:	popf   
   14005d67d:	xor    BYTE PTR [rdx],dh
   14005d67f:	cmp    eax,0x99e0a1d1
   14005d684:	and    BYTE PTR [rbp+0x2571a501],ah
   14005d68a:	and    BYTE PTR [rsi-0x1a],dl
   14005d68d:	(bad)  
   14005d68e:	pop    rcx
   14005d68f:	and    ch,BYTE PTR [rax]
   14005d691:	imul   eax,DWORD PTR [rbx-0xc7808c1],0xffffffd9
   14005d698:	jl     0x14005d698
   14005d69a:	movabs ds:0x245c0e2b593989a8,al
   14005d6a3:	add    DWORD PTR [rcx+0x31],ebx
   14005d6a6:	js     0x14005d646
   14005d6a8:	out    0x60,al
   14005d6aa:	rex.RXB
   14005d6ab:	rex.WRXB and r13,QWORD PTR [rip+0x1112056]        # 0x14116f708
   14005d6b2:	fcmovnb st,st(0)
   14005d6b4:	js     0x14005d656
   14005d6b6:	call   QWORD PTR [rdi-0x1ba10021]
   14005d6bc:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14005d6bd:	and    eax,0x8009fd2d
   14005d6c2:	(bad)  
   14005d6c3:	neg    esi
   14005d6c5:	jne    0x14005d6ee
   14005d6c7:	add    edi,edi
   14005d6c9:	data16 sbb al,0x6b
   14005d6cc:	out    0xf3,al
   14005d6ce:	mov    bl,BYTE PTR [rbp+0x1e76e3f7]
   14005d6d4:	jae    0x14005d6fc
   14005d6d6:	(bad)  
   14005d6d7:	(bad)  
   14005d6d8:	rcr    al,1
   14005d6da:	stos   BYTE PTR es:[rdi],al
   14005d6db:	xor    al,bh
   14005d6dd:	int3   
   14005d6de:	test   ebx,0x874f0bf0
   14005d6e4:	sar    DWORD PTR [rcx-0x7e601088],1
   14005d6ea:	mov    ebx,DWORD PTR [rax-0x12496749]
   14005d6f0:	(bad)  
   14005d6f1:	(bad)  
   14005d6f2:	cmp    BYTE PTR [rbp+riz*4+0x64],0xbe
   14005d6f7:	or     DWORD PTR [rax-0x2e333ba2],eax
   14005d6fd:	(bad)  
   14005d6fe:	std    
   14005d6ff:	mov    dh,0x3
   14005d701:	loopne 0x14005d731
   14005d703:	and    ch,ch
   14005d705:	add    BYTE PTR [rax-0x30fce871],ch
   14005d70b:	jl     0x14005d757
   14005d70d:	add    DWORD PTR [rbx+riz*2+0x45],0x40
   14005d712:	lods   al,BYTE PTR ds:[rsi]
   14005d713:	fimul  DWORD PTR [rip+0xffffffffd65044b2]        # 0x116561bcb
   14005d719:	(bad)  
   14005d71a:	jg     0x14005d70a
   14005d71c:	sbb    eax,0xfcf9b3e7
   14005d721:	rex.RB push r9
   14005d723:	adc    esi,DWORD PTR [rbx-0x4e]
   14005d726:	push   rsi
   14005d727:	sbb    al,0xb8
   14005d729:	rex.W add sil,BYTE PTR [rdx-0x3ee2c1e]
   14005d730:	rex.WB xlat BYTE PTR ds:[rbx]
   14005d732:	sbb    al,0x6e
   14005d734:	pop    rbp
   14005d735:	xchg   DWORD PTR [rbx-0x1012005],ebx
   14005d73b:	(bad)  
   14005d73c:	cli    
   14005d73d:	(bad)  
   14005d73f:	ds pop rsi
   14005d741:	(bad)  
   14005d742:	js     0x14005d79d
   14005d744:	imul   ebp,DWORD PTR [rcx+0x4f],0xf3baef00
   14005d74b:	cmp    eax,0xff833d68
   14005d750:	mov    eax,0x3a3b588e
   14005d755:	mov    edx,DWORD PTR [rbp-0x7b725e67]
   14005d75b:	(bad)  
   14005d75c:	sbb    eax,0xbd0e9d99
   14005d761:	js     0x14005d7e1
   14005d763:	ja     0x14005d759
   14005d765:	mov    cl,0x6f
   14005d767:	xchg   BYTE PTR [rcx+0x1461c3a9],dl
   14005d76d:	lods   al,BYTE PTR ds:[rsi]
   14005d76e:	rex.B int3 
   14005d770:	(bad)  
   14005d771:	jge    0x14005d77b
   14005d773:	pop    rsp
   14005d774:	fild   DWORD PTR [rcx]
   14005d776:	jo     0x14005d78f
   14005d778:	adc    BYTE PTR [rbp+0x4fc197bd],0x2f
   14005d77f:	mov    cl,0x4f
   14005d781:	cmp    DWORD PTR [rcx],eax
   14005d783:	clc    
   14005d784:	mov    esi,0x2edb0cd
   14005d789:	and    BYTE PTR [rsi+0x18be001d],al
   14005d78f:	xchg   BYTE PTR [rcx+0x0],cl
   14005d792:	cmp    dl,BYTE PTR [rax-0x7a]
   14005d795:	jp     0x14005d7cf
   14005d797:	adc    esp,edi
   14005d799:	in     al,dx
   14005d79a:	push   rbx
   14005d79b:	pop    rdi
   14005d79c:	rex.RB shl DWORD PTR [r11],0x99
   14005d7a0:	xchg   edx,eax
   14005d7a1:	and    ecx,ebx
   14005d7a3:	sahf   
   14005d7a4:	ret    0xd448
   14005d7a7:	cmp    ebx,edi
   14005d7a9:	(bad)  
   14005d7aa:	xchg   BYTE PTR [rbx+rbx*1-0x4],bh
   14005d7ae:	mov    ecx,0xf9bce45f
   14005d7b3:	std    
   14005d7b4:	rex.RB push r9
   14005d7b6:	adc    esi,DWORD PTR [rbx-0x4e]
   14005d7b9:	push   rsi
   14005d7ba:	sbb    al,0xb8
   14005d7bc:	rex.W add sil,BYTE PTR [rdx-0x38c1651e]
   14005d7c3:	ja     0x14005d7c2
   14005d7c5:	jb     0x14005d763
   14005d7c7:	xchg   ebp,eax
   14005d7c8:	(bad)  
   14005d7c9:	jmp    0xd8e7c1f8
   14005d7ce:	out    0x24,eax
   14005d7d0:	rcr    BYTE PTR [rax],0x38
   14005d7d3:	in     eax,0x94
   14005d7d5:	xlat   BYTE PTR ds:[rbx]
   14005d7d6:	mov    dh,0x53
   14005d7d8:	push   rsi
   14005d7d9:	mov    al,0x28
   14005d7db:	add    eax,0x5bfdd5e3
   14005d7e0:	push   rcx
   14005d7e1:	test   DWORD PTR [rbp-0x1500add9],0x3c3099c1
   14005d7eb:	xor    al,0x68
   14005d7ed:	icebp  
   14005d7ee:	rex.WXB stc 
   14005d7f0:	mov    esi,0x1bec5c19
   14005d7f5:	(bad)  
   14005d7f6:	or     DWORD PTR [rbx],eax
   14005d7f8:	iret   
   14005d7f9:	(bad)  
   14005d7fa:	adc    eax,DWORD PTR [rsi+0x76]
   14005d7fd:	(bad)  
   14005d7fe:	sub    BYTE PTR [rdi+rcx*8],cl
   14005d801:	add    ah,bh
   14005d803:	(bad)  
   14005d804:	jg     0x14005d80c
   14005d806:	mov    edi,0x113800ed
   14005d80b:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14005d80c:	repz jg 0x14005d7dd
   14005d80f:	sbb    esp,ebp
   14005d811:	sbb    eax,0x9e5bf6
   14005d816:	stos   BYTE PTR es:[rdi],al
   14005d817:	fiadd  WORD PTR [rdx]
   14005d819:	adc    DWORD PTR [rcx+0x1ede0238],ecx
   14005d81f:	or     al,dl
   14005d821:	(bad)
   14005d824:	cmp    DWORD PTR [rcx-0x2faf030],0xc217d433
   14005d82e:	xchg   esi,eax
   14005d82f:	ret    
   14005d830:	cmp    eax,ebx
   14005d832:	mov    edx,0xbec31789
   14005d837:	xchg   ecx,eax
   14005d838:	cmc    
   14005d839:	xchg   esp,eax
   14005d83a:	ds int 0x29
   14005d83d:	or     eax,0x91b994a8
   14005d842:	sbb    bl,ch
   14005d844:	jno    0x14005d7c9
   14005d846:	sub    al,0x11
   14005d848:	xchg   esp,eax
   14005d849:	mov    ch,0xc1
   14005d84b:	lahf   
   14005d84c:	mov    ebx,0x5abce42
   14005d851:	sub    edi,ecx
   14005d853:	sahf   
   14005d854:	push   rdi
   14005d855:	ret    
   14005d856:	lods   eax,DWORD PTR ds:[rsi]
   14005d857:	cmp    al,bh
   14005d859:	adc    dl,BYTE PTR [rcx]
   14005d85b:	(bad)  
   14005d85c:	pushf  
   14005d85d:	enter  0x34f6,0x7
   14005d861:	mov    ebx,0x1386a97e
   14005d866:	clc    
   14005d867:	adc    dl,BYTE PTR [rcx]
   14005d869:	nop
   14005d86a:	je     0x14005d839
   14005d86c:	retf   
   14005d86d:	mov    ebx,0xef6dffa5
   14005d872:	sti    
   14005d873:	sbb    DWORD PTR [rsp+rdi*8],edx
   14005d876:	(bad)  
   14005d877:	shl    DWORD PTR [rdi-0x44],cl
   14005d87a:	addr32 jg 0x14005d8d2
   14005d87d:	icebp  
   14005d87e:	mov    DWORD PTR [rcx+0x4b],eax
   14005d881:	outs   dx,DWORD PTR ds:[rsi]
   14005d882:	(bad)  
   14005d883:	adc    BYTE PTR [rbx-0x21975401],al
   14005d889:	or     DWORD PTR [rip+0xffffffffe9fe8aff],eax        # 0x12a04638e
   14005d88f:	mov    al,0x62
   14005d891:	lods   al,BYTE PTR ds:[rsi]
   14005d892:	(bad)  
   14005d893:	int3   
   14005d894:	and    DWORD PTR [rax-0x7098b1d3],edi
   14005d89a:	test   ecx,eax
   14005d89c:	movsxd eax,DWORD PTR [rdi+0x43]
   14005d89f:	fucomip st,st(0)
   14005d8a1:	stos   BYTE PTR es:[rdi],al
   14005d8a2:	xor    dl,dh
   14005d8a4:	std    
   14005d8a5:	outs   dx,DWORD PTR ds:[rsi]
   14005d8a6:	xchg   DWORD PTR [rcx+0x1861fd89],esp
   14005d8ac:	xchg   ecx,eax
   14005d8ad:	ins    DWORD PTR es:[rdi],dx
   14005d8ae:	(bad)  
   14005d8af:	jmp    QWORD PTR [rax]
   14005d8b1:	rol    al,0xb7
   14005d8b4:	loopne 0x14005d87d
   14005d8b6:	outs   dx,BYTE PTR ds:[rsi]
   14005d8b7:	add    bh,bl
   14005d8b9:	add    DWORD PTR [rcx+0x682c808b],esi
   14005d8bf:	std    
   14005d8c0:	(bad)
   14005d8c3:	lahf   
   14005d8c4:	(bad)  
   14005d8c5:	in     al,0x3e
   14005d8c7:	add    bl,BYTE PTR [rdi]
   14005d8c9:	ud0    eax,DWORD PTR [rbp-0x13d3a3e2]
   14005d8d0:	jrcxz  0x14005d907
   14005d8d2:	add    ah,ch
   14005d8d4:	add    ch,ah
   14005d8d6:	loopne 0x14005d85c
   14005d8d8:	xchg   edx,eax
   14005d8d9:	es xchg ebp,eax
   14005d8db:	jmp    0x14005d87b
   14005d8dd:	(bad)  
   14005d8de:	fimul  WORD PTR [rcx+0x4949c8f5]
   14005d8e4:	and    eax,0xd51db203
   14005d8e9:	call   0x160e23377
   14005d8ee:	rex.WXB add al,0x65
   14005d8f1:	ins    DWORD PTR es:[rdi],dx
   14005d8f2:	lock addr32 rex.RXB retf 
   14005d8f6:	jns    0x14005d8a1
   14005d8f8:	xchg   ebx,eax
   14005d8f9:	xor    ebx,DWORD PTR [rbp+0x70d5e7b9]
   14005d8ff:	adc    eax,DWORD PTR [rbx]
   14005d901:	pop    rdi
   14005d902:	and    al,BYTE PTR [rdx]
   14005d904:	mov    WORD PTR [rbx],ss
   14005d906:	fstp   DWORD PTR [rsi+0x2fd760e6]
   14005d90c:	sbb    BYTE PTR [rdx],bh
   14005d90e:	sub    DWORD PTR [rcx-0x38feeed1],eax
   14005d914:	out    0x99,eax
   14005d916:	call   0xebe73c37
   14005d91b:	std    
   14005d91c:	outs   dx,DWORD PTR ds:[rsi]
   14005d91d:	sti    
   14005d91e:	std    
   14005d91f:	xor    eax,0xe689db59
   14005d924:	rex.WXB imul rax,QWORD PTR [r10],0xffffffffffffff88
   14005d928:	psllq  mm3,QWORD PTR [rax+rdx*8+0x180e9f96]
   14005d930:	(bad)  
   14005d931:	(bad)  
   14005d932:	cld    
   14005d933:	xlat   BYTE PTR ds:[rbx]
   14005d934:	loopne 0x14005d971
   14005d936:	jle    0x14005d9ab
   14005d938:	cmp    al,0x99
   14005d93a:	rex.RXB (bad) 
   14005d93c:	cdq    
   14005d93d:	popf   
   14005d93e:	or     DWORD PTR [rbx],eax
   14005d940:	rex.RXB (bad) 
   14005d942:	icebp  
   14005d943:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14005d944:	fbld   TBYTE PTR [rax-0x18]
   14005d947:	cmp    esi,DWORD PTR [rdx+0x7f6c8c3f]
   14005d94d:	sub    BYTE PTR [rcx*2+0x3fadc51f],cl
   14005d954:	cmp    eax,DWORD PTR [rbp+0x10fe178f]
   14005d95a:	in     eax,dx
   14005d95b:	jbe    0x14005d95e
   14005d95d:	xor    BYTE PTR [rip+0x4b01273f],al        # 0x18b0700a2
   14005d963:	or     al,0x7c
   14005d965:	jl     0x14005d96e
   14005d967:	fmul   QWORD PTR [rsi-0x69e276b8]
   14005d96d:	sti    
   14005d96e:	mov    bh,BYTE PTR [rip+0xfbfd589]        # 0x14fc5aefd
   14005d974:	ror    edi,0xa3
   14005d977:	lahf   
   14005d978:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14005d979:	add    DWORD PTR [rax+0x3e0a53e5],esp
   14005d97f:	adc    esi,DWORD PTR [rax+0x7a]
   14005d982:	push   rbx
   14005d983:	stos   BYTE PTR es:[rdi],al
   14005d984:	cmp    bh,dl
   14005d986:	pop    rdi
   14005d987:	lea    ebx,[rsi+0x641b8d58]
   14005d98d:	mov    DWORD PTR [rax-0x2301f254],esp
   14005d993:	adc    esi,DWORD PTR [rdx+0x1e]
   14005d996:	cli    
   14005d997:	rol    cl,cl
   14005d999:	(bad)  
   14005d99a:	jbe    0x14005d954
   14005d99c:	or     DWORD PTR [rsi],0x4917ccf
   14005d9a2:	vhsubpd ymm9,ymm9,YMMWORD PTR fs:[rsi+0x4d39eaef]
   14005d9ab:	rcr    DWORD PTR [rdi+0x4a8adceb],0x1f
   14005d9b2:	call   0x10833b536
   14005d9b7:	rex.WRXB cmp al,0xe5
   14005d9ba:	loope  0x14005da39
   14005d9bc:	loop   0x14005d9e3
   14005d9be:	(bad)  
   14005d9bf:	rex.WXB xor al,BYTE PTR [r14]
   14005d9c2:	call   QWORD PTR [rdi+0x51]
   14005d9c5:	std    
   14005d9c6:	xchg   esi,eax
   14005d9c7:	adc    esi,DWORD PTR [rcx]
   14005d9c9:	(bad)  
   14005d9ca:	cmc    
   14005d9cb:	in     al,dx
   14005d9cc:	loope  0x14005d97e
   14005d9ce:	(bad)  
   14005d9cf:	scas   eax,DWORD PTR es:[rdi]
   14005d9d0:	jmp    0x14005d9a0
   14005d9d2:	xor    bl,BYTE PTR [rdx]
   14005d9d4:	xchg   ecx,eax
   14005d9d5:	sub    al,0xf8
   14005d9d7:	(bad)  
   14005d9d8:	pop    QWORD PTR [rsi+rdi*8+0x6fa1e363]
   14005d9df:	(bad)  
   14005d9e0:	cli    
   14005d9e1:	xor    ah,dh
   14005d9e3:	jrcxz  0x14005d9d4
   14005d9e5:	xchg   BYTE PTR [rcx],ah
   14005d9e7:	fdiv   st(2),st
   14005d9e9:	sbb    ebx,DWORD PTR [rsi-0x5499c5]
   14005d9ef:	cmp    dil,dil
   14005d9f2:	xlat   BYTE PTR ds:[rbx]
   14005d9f3:	(bad)  
   14005d9f4:	add    BYTE PTR [rbx+0x6],dh
   14005d9f7:	cmp    DWORD PTR [rdi-0x26f2a879],0x7f
   14005d9fe:	(bad)  
   14005d9ff:	add    BYTE PTR [rdi+riz*2+0x26],bh
   14005da03:	cmp    cl,BYTE PTR [rcx-0x14]
   14005da06:	rex.WRB xchg r14,rax
   14005da08:	leave  
   14005da09:	ja     0x14005da0c
   14005da0b:	mov    al,0xf7
   14005da0d:	out    0x35,eax
   14005da0f:	test   BYTE PTR [rax+0x37],bh
   14005da12:	add    BYTE PTR [rdi],bl
   14005da14:	adc    DWORD PTR [rdx],edi
   14005da16:	mov    edx,0xe87c5c2f
   14005da1b:	pop    rcx
   14005da1c:	or     BYTE PTR [rbp-0x6f936b72],bl
   14005da22:	sub    DWORD PTR [rdx],eax
   14005da24:	movabs ds:0xfc1b594112c83772,al
   14005da2d:	fcos   
   14005da2f:	(bad)  
   14005da30:	addr32 repz stc 
   14005da33:	mov    esp,DWORD PTR [rdx-0x529b19da]
   14005da39:	cmp    BYTE PTR [rax-0x6f],dh
   14005da3c:	add    al,0x64
   14005da3e:	(bad)
   14005da41:	(bad)  
   14005da42:	sbb    DWORD PTR [rip+0x7f0734fd],0x36        # 0x1bf0d0f46
   14005da49:	je     0x14005da56
   14005da4b:	sub    BYTE PTR [rdi-0x762d000a],0x4f
   14005da52:	add    cl,BYTE PTR [rbx+0x63]
   14005da55:	add    cl,BYTE PTR [rax-0x5eb00125]
   14005da5b:	jno    0x14005da84
   14005da5d:	mov    ah,0xc5
   14005da5f:	fnstenv [rax-0x14]
   14005da62:	(bad)
   14005da65:	push   rbp
   14005da66:	fiadd  DWORD PTR [rdi-0x407cef5d]
   14005da6c:	jg     0x14005da78
   14005da6e:	or     DWORD PTR [rdi-0xc84e79d],0x30d9d99e
   14005da78:	cli    
   14005da79:	ret    
   14005da7a:	jnp    0x14005da2c
   14005da7c:	cli    
   14005da7d:	rex.WRXB loopne 0x14005da45
   14005da80:	sbb    eax,0x2f0bbe3c
   14005da85:	jo     0x14005da3c
   14005da87:	out    0xf9,al
   14005da89:	cmp    dl,BYTE PTR [rdi-0x1]
   14005da8c:	pop    rsi
   14005da8d:	(bad)  
   14005da8e:	or     al,0x66
   14005da90:	sbb    al,0xd8
   14005da92:	sar    DWORD PTR [rbx+0x399d0009],0xd
   14005da99:	pushf  
   14005da9a:	xchg   ebx,eax
   14005da9b:	add    ebx,edi
   14005da9d:	xchg   ebp,eax
   14005da9e:	cmp    eax,DWORD PTR [rdx-0x2c4bfcf4]
   14005daa4:	add    BYTE PTR [rax],ch
   14005daa6:	jmp    0x149f9baf0
   14005daab:	rex.X mov ebx,0xb6f2881d
   14005dab1:	or     eax,DWORD PTR [rax+0x3aec37ce]
   14005dab7:	sbb    eax,0x1a404cf
   14005dabc:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14005dabd:	jno    0x14005dae4
   14005dabf:	add    BYTE PTR [rsi],dl
   14005dac1:	and    BYTE PTR [rcx-0x35f769bf],bh
   14005dac7:	(bad)  
   14005dac9:	(bad)  
   14005daca:	scas   al,BYTE PTR es:[rdi]
   14005dacb:	mov    BYTE PTR [rbp-0x3061f69],bl
   14005dad1:	rex.RB mov r14b,0xb9
   14005dad4:	mov    dh,0xe6
   14005dad6:	pop    rdi
   14005dad7:	adc    al,BYTE PTR [rbp+0x12]
   14005dada:	nop
   14005dadb:	adc    eax,0xf8effcd7
   14005dae0:	scas   al,BYTE PTR es:[rdi]
   14005dae1:	sahf   
   14005dae2:	xor    edx,DWORD PTR [rsp+rdi*8]
   14005dae5:	rol    DWORD PTR [rsi-0x233739c7],1
   14005daeb:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14005daec:	cli    
   14005daed:	jg     0x14005dad8
   14005daef:	(bad)  
   14005daf0:	cmp    eax,0xfee958a1
   14005daf5:	or     DWORD PTR [rax+0x52dfe73a],esp
   14005dafb:	jns    0x14005dab6
   14005dafd:	xor    edx,esp
   14005daff:	(bad)  
   14005db00:	sub    edi,ebx
   14005db02:	fwait
   14005db03:	(bad)  
   14005db04:	sahf   
   14005db05:	or     DWORD PTR [rbx+0x6b],esp
   14005db08:	rex.RX ret 0xbf34
   14005db0c:	rol    BYTE PTR [rcx-0x60109f3c],cl
   14005db12:	(bad)  
   14005db13:	or     BYTE PTR [rbx],al
   14005db15:	xchg   ebx,eax
   14005db16:	jrcxz  0x14005db79
   14005db18:	add    BYTE PTR [rbx],dl
   14005db1a:	rex call FWORD PTR [rdx-0x2c2f3d0d]
   14005db21:	pop    QWORD PTR [rbp+0x99f17e1]
   14005db27:	xor    DWORD PTR [rbx],0xffffff93
   14005db2a:	jno    0x14005db21
   14005db2c:	rex.RXB xchg r12d,eax
   14005db2e:	(bad)  [rsi+0x396a411f]
   14005db34:	jp     0x14005dade
   14005db36:	(bad)  
   14005db37:	pop    rbp
   14005db38:	add    esp,DWORD PTR [rax+0x50]
   14005db3b:	pop    rbx
   14005db3c:	nop
   14005db3d:	xor    edx,eax
   14005db3f:	sbb    esp,edi
   14005db41:	cmp    al,0x8e
   14005db43:	loope  0x14005daf5
   14005db45:	rol    DWORD PTR [rcx+0x3f721834],cl
   14005db4b:	rex.XB xchg r14d,eax
   14005db4d:	mov    bh,0xc
   14005db4f:	in     eax,dx
   14005db50:	icebp  
   14005db51:	(bad)  
   14005db52:	sahf   
   14005db53:	or     dl,BYTE PTR [rax]
   14005db55:	rex.WRX cmp r15b,BYTE PTR [rcx+0x2d]
   14005db59:	loopne 0x14005db10
   14005db5b:	(bad)  
   14005db5c:	sti    
   14005db5d:	cmp    al,BYTE PTR [rax-0x56]
   14005db60:	sub    bh,dl
   14005db62:	push   rdi
   14005db63:	lea    eax,[rax+rbx*1-0x7c]
   14005db67:	in     al,0x6
   14005db69:	pop    rcx
   14005db6a:	and    ch,BYTE PTR [rax]
   14005db6c:	imul   eax,DWORD PTR [rbx+0x45c2ba3f],0xffffffef
   14005db73:	cld    
   14005db74:	(bad)  
   14005db75:	movabs ds:0x8b81854e8e58f9a8,al
   14005db7e:	and    al,0x20
   14005db80:	sub    ebp,DWORD PTR [rsi-0x28838c17]
   14005db86:	(bad)  
   14005db87:	addr32 cmp al,bh
   14005db8a:	mov    bl,0xe1
   14005db8c:	pop    rbx
   14005db8d:	add    BYTE PTR [rax+0x27],ah
   14005db90:	jo     0x14005db8e
   14005db92:	rex.WB movabs al,ds:0x8e63456e108027fb
   14005db9c:	jnp    0x14005dbfc
   14005db9e:	mov    bl,0x6a
   14005dba0:	repnz movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14005dba2:	jo     0x14005db79
   14005dba4:	clc    
   14005dba5:	pop    QWORD PTR [rbx-0x11]
   14005dba8:	xchg   BYTE PTR [rip+0x5f30d8e1],cl        # 0x19f36b48f
   14005dbae:	fild   WORD PTR [rbx+0x30]
   14005dbb1:	(bad)  
   14005dbb2:	(bad)
   14005dbb5:	scas   eax,DWORD PTR es:[rdi]
   14005dbb6:	inc    BYTE PTR [rbx-0x70f02c24]
   14005dbbc:	xchg   BYTE PTR [rcx+0xb85bec7],dl
   14005dbc2:	and    ebx,0xc66f9178
   14005dbc8:	outs   dx,BYTE PTR ds:[rsi]
   14005dbc9:	std    
   14005dbca:	(bad)
   14005dbcd:	scas   al,BYTE PTR es:[rdi]
   14005dbce:	(bad)  
   14005dbcf:	icebp  
   14005dbd0:	mov    al,0xe0
   14005dbd2:	out    0xea,eax
   14005dbd4:	iret   
   14005dbd5:	and    BYTE PTR [rsi-0x71],0x21
   14005dbd9:	clc    
   14005dbda:	out    0x66,eax
   14005dbdc:	shl    DWORD PTR [rcx+0x49b7a0c],1
   14005dbe2:	add    BYTE PTR [rbx],dh
   14005dbe4:	iret   
   14005dbe5:	xlat   BYTE PTR ds:[rbx]
   14005dbe6:	add    al,0x80
   14005dbe8:	pop    rdx
   14005dbe9:	(bad)  
   14005dbea:	push   rbx
   14005dbeb:	sbb    ch,ah
   14005dbed:	clc    
   14005dbee:	lock adc BYTE PTR [rdi],cl
   14005dbf1:	mov    esi,0x89c7c448
   14005dbf6:	rex.WRB (bad) 
   14005dbf8:	(bad)  
   14005dbf9:	pop    rdi
   14005dbfa:	fisubr WORD PTR [rcx+0x0]
   14005dbfd:	sub    ah,BYTE PTR [rcx+0x4a]
   14005dc00:	cdq    
   14005dc01:	add    edx,DWORD PTR [rdx]
   14005dc03:	pop    rbp
   14005dc04:	mov    WORD PTR [rax-0x246fbe99],cs
   14005dc0a:	loopne 0x14005dc5b
   14005dc0c:	cs leave 
   14005dc0e:	ds and edx,ebp
   14005dc11:	(bad)  
   14005dc12:	xor    dh,BYTE PTR [rdx-0x63]
   14005dc15:	dec    DWORD PTR [rsp+rsi*2]
   14005dc18:	mov    eax,0x49170009
   14005dc1d:	sub    al,0xca
   14005dc20:	fild   WORD PTR [rdx-0x61]
   14005dc23:	jrcxz  0x14005dc60
   14005dc25:	cli    
   14005dc26:	pop    rcx
   14005dc27:	or     bh,dh
   14005dc29:	ins    BYTE PTR es:[rdi],dx
   14005dc2a:	adc    ebx,edi
   14005dc2c:	sub    edi,DWORD PTR [rax-0x1a0cdccb]
   14005dc32:	fnstsw WORD PTR [rip+0xfffffffffcfbc401]        # 0x13d01a039
   14005dc38:	(bad)  
   14005dc39:	(bad)  
   14005dc3a:	addr32 cmp al,0xe9
   14005dc3d:	fadd   st(6),st
   14005dc3f:	outs   dx,DWORD PTR ds:[rsi]
   14005dc40:	cmp    eax,edi
   14005dc42:	jrcxz  0x14005dbf4
   14005dc44:	jns    0x14005dc34
   14005dc46:	test   DWORD PTR [rax-0x1c],esi
   14005dc49:	ret    0x112b
   14005dc4c:	cld    
   14005dc4d:	sub    ecx,DWORD PTR [rsp+rdi*4+0x67]
   14005dc51:	cs scas al,BYTE PTR es:[rdi]
   14005dc53:	cld    
   14005dc54:	or     al,0xfe
   14005dc56:	jle    0x14005dbf6
   14005dc58:	sti    
   14005dc59:	repz adc al,0x60
   14005dc5c:	sub    eax,0x67b1fa3e
   14005dc61:	rex.RXB sbb r14b,r11b
   14005dc64:	std    
   14005dc65:	js     0x14005dc7f
   14005dc67:	(bad)  
   14005dc68:	(bad)
   14005dc6b:	test   edi,0xf6e9fe4f
   14005dc71:	(bad)  
   14005dc72:	push   rdi
   14005dc73:	ins    BYTE PTR es:[rdi],dx
   14005dc74:	js     0x14005dc3b
   14005dc76:	out    dx,al
   14005dc77:	add    BYTE PTR [rax],dh
   14005dc79:	scas   eax,DWORD PTR es:[edi]
   14005dc7b:	int    0xa0
   14005dc7d:	rex.XB jae 0x14005dc30
   14005dc80:	out    0x5d,eax
   14005dc82:	shl    BYTE PTR [rdx+riz*4+0x71],0x62
   14005dc87:	sar    bh,0x9c
   14005dc8a:	cmp    BYTE PTR [rcx-0x10],ch
   14005dc8d:	(bad)  
   14005dc8e:	xchg   r11d,eax
   14005dc90:	add    BYTE PTR [rcx-0x16],ah
   14005dc93:	rex.WR movabs rbx,0x40aa4069d29e378c
   14005dc9d:	cmc    
   14005dc9e:	or     BYTE PTR [rax-0x69be452b],cl
   14005dca4:	or     dl,cl
   14005dca6:	(bad)  
   14005dca8:	iret   
   14005dca9:	cmp    eax,0x9f367ce3
   14005dcae:	mov    edi,0x4e626a28
   14005dcb3:	(bad)  
   14005dcb4:	mov    al,BYTE PTR [rbx]
   14005dcb6:	(bad)  
   14005dcb7:	rex.WB
   14005dcb8:	rex push rsi
   14005dcba:	fmul   QWORD PTR [rbp-0x4592603f]
   14005dcc0:	mov    cl,0xff
   14005dcc2:	(bad)  
   14005dcc3:	push   rdx
   14005dcc5:	sahf   
   14005dcc6:	retf   0x26d0
   14005dcc9:	(bad)  
   14005dcca:	mov    ebp,0xe8bc4013
   14005dccf:	ja     0x14005dd1c
   14005dcd1:	shl    esp,cl
   14005dcd3:	adc    dh,dl
   14005dcd5:	(bad)  
   14005dcd6:	fcom   QWORD PTR [rip+0x40f3d8ae]        # 0x180f9b58a
   14005dcdc:	js     0x14005dcb3
   14005dcde:	repz test DWORD PTR [rsi-0x38e1d855],0xc36b789b
   14005dce9:	dec    BYTE PTR [rbx]
   14005dceb:	scas   al,BYTE PTR es:[rdi]
   14005dcec:	or     al,0xd3
   14005dcee:	add    edi,eax
   14005dcf0:	sub    al,BYTE PTR [rdi]
   14005dcf2:	xchg   edx,eax
   14005dcf3:	popf   
   14005dcf4:	repz rex.WRXB
   14005dcf6:	rex.WRX test BYTE PTR [rsi+0x5c],r15b
   14005dcfa:	icebp  
   14005dcfb:	(bad)  
   14005dcfc:	rex
   14005dcfd:	lock jae 0x14005dceb
   14005dd00:	(bad)  
   14005dd01:	mov    BYTE PTR [rsi-0x61],cl
   14005dd04:	pop    rbp
   14005dd05:	mov    ebp,0xdfd6ed1
   14005dd0a:	rex.WRX (bad) 
   14005dd0c:	add    cl,BYTE PTR [rsi-0x11f77e25]
   14005dd12:	clc    
   14005dd13:	ror    BYTE PTR [rdi],1
   14005dd15:	(bad)  
   14005dd16:	adc    al,0x1
   14005dd18:	fisubr DWORD PTR [rbx+0x47]
   14005dd1b:	or     bh,BYTE PTR [rsi+0x4]
   14005dd1e:	scas   al,BYTE PTR es:[rdi]
   14005dd1f:	jbe    0x14005dd21
   14005dd21:	jle    0x14005dcd8
   14005dd23:	(bad)  
   14005dd24:	xchg   BYTE PTR [rcx],al
   14005dd26:	rcl    BYTE PTR [rbx+0x0],0x4f
   14005dd2a:	retf   
   14005dd2b:	xlat   BYTE PTR ds:[rbx]
   14005dd2c:	add    DWORD PTR [rax],edi
   14005dd2e:	xor    BYTE PTR ss:[rbx-0x50],ah
   14005dd32:	pushf  
   14005dd33:	ins    DWORD PTR es:[rdi],dx
   14005dd34:	push   rbx
   14005dd36:	jmp    0x11683e77b
   14005dd3b:	mov    ch,0xf5
   14005dd3d:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14005dd3e:	rex.WRXB add r10,r10
   14005dd41:	adc    bl,0xb8
   14005dd44:	adc    eax,eax
   14005dd46:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14005dd47:	out    0x8e,al
   14005dd49:	mov    ?,WORD PTR [rax+0x24]
   14005dd4c:	sbb    BYTE PTR [rdx+0x6d],r12b
   14005dd50:	lock addr32 mov bh,0x38
   14005dd54:	lahf   
   14005dd55:	popf   
   14005dd56:	cmp    eax,ecx
   14005dd58:	lahf   
   14005dd59:	sbb    edi,DWORD PTR [rdi-0x35]
   14005dd5c:	ror    BYTE PTR [rbp+0x1dde79ff],0x34
   14005dd63:	xchg   BYTE PTR [rax-0x29],ch
   14005dd66:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14005dd67:	pop    rbx
   14005dd68:	jmp    0x14005dd00
   14005dd6a:	(bad)  
   14005dd6b:	hlt    
   14005dd6c:	int    0x86
   14005dd6e:	repz (bad) 
   14005dd70:	lahf   
   14005dd71:	packsswb mm4,QWORD PTR [rbx]
   14005dd74:	xchg   ebx,eax
   14005dd75:	(bad)  
   14005dd76:	in     ax,dx
   14005dd78:	test   DWORD PTR [rcx+0x62],esp
   14005dd7b:	(bad)  
   14005dd7c:	xor    al,0x4c
   14005dd7e:	loope  0x14005dd13
   14005dd80:	mov    esp,0x5b7cfd33
   14005dd85:	(bad)  
   14005dd86:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14005dd87:	ficomp WORD PTR [rcx-0x2031899d]
   14005dd8d:	iret   
   14005dd8e:	or     DWORD PTR [rax+0xedbfab],eax
   14005dd94:	mov    BYTE PTR [rbx-0x31],0xa6
   14005dd98:	retf   
   14005dd99:	add    edi,esi
   14005dd9b:	shr    BYTE PTR [rdi+0x18],cl
   14005dd9e:	jns    0x14005dd9a
   14005dda0:	sar    DWORD PTR [rax+0x1f4a63fa],1
   14005dda6:	shl    BYTE PTR [rdx],0x9f
   14005dda9:	outs   dx,DWORD PTR ds:[rsi]
   14005ddaa:	(bad)  
   14005ddab:	and    esi,ebx
   14005ddad:	mov    ecx,0xdad5b77b
   14005ddb2:	add    BYTE PTR cs:[rdx+0x25],dh
   14005ddb6:	mov    ecx,0x129e000d
   14005ddbc:	(bad)  
   14005ddbd:	movabs ds:0x1850698a91f1ccc3,eax
   14005ddc6:	cld    
   14005ddc7:	rex.WR jns 0x14005dddc
   14005ddca:	loopne 0x14005ddd0
   14005ddcc:	rol    BYTE PTR [rbx+0x3ddb6c09],0xe0
   14005ddd3:	jl     0x14005dd77
   14005ddd5:	mov    bh,0xf
   14005ddd7:	out    dx,eax
   14005ddd8:	js     0x14005de4d
   14005ddda:	(bad)  
   14005dddb:	add    BYTE PTR [rdx+0x3c87181d],bl
   14005dde1:	or     eax,0xd1e0d78
   14005dde6:	(bad)  
   14005dde7:	fidivr WORD PTR [rcx-0x29]
   14005ddea:	rex.RB stc 
   14005ddec:	add    eax,0xd5c0d37f
   14005ddf1:	clc    
   14005ddf2:	adc    eax,0x37cd4b10
   14005ddf7:	cwde   
   14005ddf8:	and    esi,edx
   14005ddfa:	(bad)  
   14005ddfb:	jg     0x14005de73
   14005ddfd:	lods   al,BYTE PTR ds:[rsi]
   14005ddfe:	repz fnstcw WORD PTR [rsi+rdi*8-0x5e]
   14005de03:	test   al,0x89
   14005de05:	cmp    DWORD PTR [rcx+0x2b],ebx
   14005de08:	(bad)  
   14005de09:	pop    rsp
   14005de0a:	and    al,0x1
   14005de0c:	pop    rcx
   14005de0d:	xor    DWORD PTR [rax-0x62],edi
   14005de10:	out    0x60,al
   14005de12:	rex.RXB out 0xf8,eax
   14005de15:	mov    DWORD PTR [rcx],ecx
   14005de17:	jl     0x14005dda2
   14005de19:	or     BYTE PTR [rax],bh
   14005de1b:	ds iret 
   14005de1d:	rex.R mov ebp,0x3c1b83bc
   14005de23:	test   al,0x73
   14005de25:	jne    0x14005de7a
   14005de27:	jns    0x14005de43
   14005de29:	(bad)  
   14005de2a:	mov    bh,0x2
   14005de2c:	jl     0x14005de5b
   14005de2e:	icebp  
   14005de2f:	jp     0x14005de1b
   14005de31:	(bad)  
   14005de32:	sbb    eax,0x47b17c40
   14005de37:	mov    bl,0x16
   14005de39:	iret   
   14005de3a:	movabs ds:0x7570b92e1c37582f,eax
   14005de43:	sbb    BYTE PTR [rdx+0x7d30aaec],bh
   14005de49:	stc    
   14005de4a:	imul   eax,edx,0xffffffec
   14005de4d:	add    eax,0x759e8457
   14005de52:	out    0x87,eax
   14005de54:	jle    0x14005dec2
   14005de56:	stc    
   14005de57:	mov    ecx,0x1f55c772
   14005de5c:	sub    edi,ebp
   14005de5e:	clc    
   14005de5f:	shl    DWORD PTR [rax],0x38
   14005de62:	adc    DWORD PTR [rip+0xffffffffdc21e8fe],0x3871e7f3        # 0x11c27c76a
   14005de6c:	or     al,0xe0
   14005de6e:	mov    ecx,0x9b8dd9ff
   14005de73:	ret    
   14005de74:	lock pxor mm1,QWORD PTR [rbx]
   14005de78:	add    DWORD PTR [rdi+0x7f8bb45f],0xffffffbc
   14005de7f:	in     eax,dx
   14005de80:	(bad)  
   14005de81:	in     eax,dx
   14005de82:	(bad)  
   14005de83:	add    esi,DWORD PTR [rbx+0xbb8049a]
   14005de89:	adc    bl,0x18
   14005de8c:	clc    
   14005de8d:	stc    
   14005de8e:	(bad)  
   14005de8f:	psrld  mm5,0xe7
   14005de93:	imul   eax,DWORD PTR [rax],0x76879e03
   14005de99:	add    DWORD PTR [rax-0x38dc0fa7],esp
   14005de9f:	(bad)  
   14005dea0:	fadd   st(1),st
   14005dea2:	sub    al,0xcb
   14005dea4:	rex.WB add r9b,0xdf
   14005dea8:	or     esp,ebp
   14005deaa:	jns    0x14005dea7
   14005deac:	lahf   
   14005dead:	repz adc ebx,ebx
   14005deb0:	add    eax,0x53a56150
   14005deb5:	retf   0xb523
   14005deb8:	rcl    ecx,1
   14005deba:	loop   0x14005de5f
   14005debc:	pop    rax
   14005debd:	sbb    edi,esp
   14005debf:	jb     0x14005df13
   14005dec1:	(bad)  
   14005dec2:	out    0xf7,al
   14005dec4:	(bad)  
   14005dec5:	and    eax,0xdfc9d5cc
   14005deca:	sub    al,BYTE PTR [rcx]
   14005decc:	pop    rsp
   14005decd:	and    al,0x1
   14005decf:	loop   0x14005de67
   14005ded1:	and    esi,0x39002ef8
   14005ded7:	je     0x14005df3b
   14005ded9:	pop    rdx
   14005deda:	rex.W xlat BYTE PTR ds:[rbx]
   14005dedc:	add    bh,BYTE PTR [rbx+rdx*2]
   14005dedf:	jmp    0x14005df55
   14005dee1:	push   rdi
   14005dee2:	(bad)  
   14005dee3:	jne    0x14005de9b
   14005dee5:	(bad)  
   14005dee7:	int    0x7a
   14005dee9:	fnstsw WORD PTR [rax]
   14005deeb:	fmul   DWORD PTR [rdx-0x5c843fa3]
   14005def1:	sub    eax,0x69862fe5
   14005def6:	xchg   edi,eax
   14005def7:	and    eax,0xbeebd2be
   14005defc:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14005defd:	xlat   BYTE PTR ds:[rbx]
   14005defe:	xchg   DWORD PTR [rbx],edx
   14005df00:	repnz stos DWORD PTR es:[rdi],eax
   14005df02:	(bad)  
   14005df03:	pop    rcx
   14005df04:	(bad)  
   14005df05:	fdivr  QWORD PTR cs:[rax-0x720bb0e6]
   14005df0c:	(bad)  
   14005df0d:	cmc    
   14005df0e:	(bad)  
   14005df0f:	or     DWORD PTR [rbx],esp
   14005df11:	rex.XB
   14005df12:	rex.XB clc 
   14005df14:	add    BYTE PTR [rdi+0x3f],ah
   14005df17:	(bad)  
   14005df18:	lods   al,BYTE PTR ds:[rsi]
   14005df19:	(bad)  
   14005df1a:	shr    DWORD PTR cs:[rdx],0x3b
   14005df1e:	test   ebx,esi
   14005df20:	jns    0x14005df9e
   14005df22:	iret   
   14005df23:	jg     0x14005df2d
   14005df25:	(bad)  
   14005df26:	loopne 0x14005df2c
   14005df28:	(bad)  
   14005df29:	add    BYTE PTR [rbx-0x7df87f9f],0xbf
   14005df30:	(bad)  
   14005df31:	call   0x10f0bdb47
   14005df36:	or     eax,DWORD PTR [rdx+0x2f]
   14005df39:	rex.WRX add rax,0xffffffffffbdf186
   14005df3f:	shr    ecx,0x49
   14005df42:	mov    esp,0x82078fbe
   14005df47:	sar    BYTE PTR [rbx],1
   14005df49:	jno    0x14005dfb0
   14005df4b:	rex.RX add dl,0x55
   14005df4f:	mov    esp,0x7cf197f5
   14005df54:	(bad)  
   14005df55:	adc    BYTE PTR [rbx],0xb
   14005df58:	enter  0xf2da,0xcf
   14005df5c:	in     eax,0x6b
   14005df5e:	add    DWORD PTR [rax*1+0x769024e0],edi
   14005df65:	add    BYTE PTR [rax-0x7dd8e72a],bh
   14005df6b:	fadd   QWORD PTR [rcx]
   14005df6d:	sub    BYTE PTR [rbx+0x6be6236f],dl
   14005df73:	add    esp,edx
   14005df75:	rex.WRB
   14005df76:	xor    edi,DWORD PTR [edi-0x13]
   14005df7a:	fsubrp st(3),st
   14005df7c:	cmp    eax,0x5d3a9815
   14005df81:	jge    0x14005dfb2
   14005df83:	add    BYTE PTR [rdx],bl
   14005df85:	nop
   14005df86:	jb     0x14005dfc5
   14005df88:	adc    DWORD PTR [rbx],esp
   14005df8a:	and    DWORD PTR [rdx-0x38],eax
   14005df8d:	pop    rsp
   14005df8e:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14005df8f:	mov    ebp,DWORD PTR [rbx+0x7c]
   14005df92:	test   eax,0xd4ca9010
   14005df97:	lock lods al,BYTE PTR ds:[rsi]
   14005df99:	mov    ebx,DWORD PTR [rbx+riz*2+0x79]
   14005df9d:	mov    esi,0x300a0583
   14005dfa2:	mov    ebx,0x792aaee8
   14005dfa7:	(bad)  
   14005dfa8:	test   eax,0xe021370e
   14005dfad:	and    cl,BYTE PTR [rcx]
   14005dfaf:	(bad)
   14005dfb3:	xchg   ebp,eax
   14005dfb4:	xchg   ebp,eax
   14005dfb5:	cwde   
   14005dfb6:	or     BYTE PTR [rdx+0x2f],0x48
   14005dfba:	push   rbp
   14005dfbb:	std    
   14005dfbc:	mov    ?,WORD PTR [rdi]
   14005dfbe:	lahf   
   14005dfbf:	mov    edi,0x5ac9d6a4
   14005dfc4:	in     eax,dx
   14005dfc5:	rol    BYTE PTR [rbp+0x12],0x60
   14005dfc9:	pushf  
   14005dfca:	enter  0x34f6,0x7
   14005dfce:	mov    ebx,0x243b0a7a
   14005dfd3:	and    ah,BYTE PTR [rax]
   14005dfd5:	jmp    0xc0980ddc
   14005dfda:	enter  0xd433,0xd3
   14005dfde:	sbb    al,0xdc
   14005dfe0:	loopne 0x14005df83
   14005dfe2:	mov    BYTE PTR [rbx+0x718a0a9b],ch
   14005dfe8:	rex ficomp WORD PTR [rsi+rdi*1]
   14005dfec:	jg     0x14005dfe5
   14005dfee:	(bad)  
   14005dfef:	(bad)  
   14005dff1:	rex.X sahf 
   14005dff3:	rex.WRXB fnsave [r15]
   14005dff6:	add    DWORD PTR [rax-0x78b90549],edi
   14005dffc:	(bad)  
   14005dffd:	ret    0x2bd6
   14005e000:	ss loop 0x14005e018
   14005e003:	pop    rsi
   14005e004:	cmp    al,0xb9
   14005e006:	xchg   DWORD PTR [rax-0x19],esp
   14005e009:	or     cl,dl
   14005e00b:	retf   
   14005e00c:	repnz xor esi,DWORD PTR [rbx]
   14005e00f:	xor    esp,DWORD PTR [rcx+0x6a]
   14005e012:	jp     0x14005e04e
   14005e014:	sbb    al,0x9b
   14005e016:	cmp    al,0x1a
   14005e018:	jp     0x14005e029
   14005e01a:	out    dx,al
   14005e01b:	mov    bl,0x55
   14005e01d:	jge    0x14005dfa7
   14005e01f:	sub    edi,DWORD PTR [rdi+0x5c07004d]
   14005e025:	lock jrcxz 0x14005dfea
   14005e028:	(bad)  
   14005e029:	cmps   DWORD PTR fs:[rsi],DWORD PTR es:[rdi]
   14005e02b:	(bad)  
   14005e02c:	mov    esp,0x813d0c2a
   14005e031:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14005e032:	(bad)  
   14005e033:	imul   bh
   14005e035:	(bad)  
   14005e036:	outs   dx,BYTE PTR ds:[rsi]
   14005e037:	add    BYTE PTR [rbx+0x73d8d405],dl
   14005e03d:	call   rax
   14005e03f:	gs rex.B jg 0x13775dbb7
   14005e047:	jmp    rcx
   14005e049:	adc    DWORD PTR [rsi+0xee5de],ebp
   14005e04f:	rex.WR movabs rdi,0xc085e4185f3867fa
   14005e059:	cli    
   14005e05a:	imul   eax,DWORD PTR [rax],0xf8777f57
   14005e060:	or     eax,DWORD PTR [rcx+0x72e1702b]
   14005e066:	(bad)  
   14005e067:	(bad)  
   14005e068:	add    al,0x53
   14005e06a:	rex.RXB cmps DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14005e06c:	int3   
   14005e06d:	lea    edx,[rax-0x714a9028]
   14005e073:	(bad)  
   14005e074:	(bad)  
   14005e075:	repnz rex.RB cmps DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14005e078:	rex.RXB imul r15d,r12d,0xbab27182
   14005e07f:	pop    rax
   14005e080:	(bad)  
   14005e081:	retf   0x60a8
   14005e084:	es nop
   14005e086:	rcr    DWORD PTR [rcx+0x1f],cl
   14005e089:	in     al,dx
   14005e08a:	stos   BYTE PTR es:[rdi],al
   14005e08b:	(bad)  
   14005e08c:	jge    0x14005e0af
   14005e08e:	(bad)  
   14005e08f:	push   r15
   14005e091:	loop   0x14005e0de
   14005e093:	mov    ebp,0x80903200
   14005e098:	(bad)  
   14005e099:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14005e09a:	test   BYTE PTR [rax-0x5935dfda],cl
   14005e0a0:	and    dl,BYTE PTR [rbp-0x3]
   14005e0a3:	mov    ?,WORD PTR [rdi]
   14005e0a5:	lahf   
   14005e0a6:	mov    edi,0x455a9952
   14005e0ab:	mov    ch,0xba
   14005e0ad:	popf   
   14005e0ae:	(bad)  
   14005e0af:	retf   0x1533
   14005e0b2:	cli    
   14005e0b3:	sbb    al,0xdf
   14005e0b5:	ror    DWORD PTR [rbx],1
   14005e0b7:	cmp    esp,DWORD PTR [rdx+riz*1]
   14005e0ba:	and    dl,ch
   14005e0bc:	sub    edx,ebx
   14005e0be:	pop    rax
   14005e0bf:	jrcxz  0x14005e0da
   14005e0c1:	(bad)  
   14005e0c2:	imul   ecx,DWORD PTR [rsi],0x36eaf06e
   14005e0c8:	(bad)  
   14005e0c9:	mov    BYTE PTR [rcx+0x65],0xd7
   14005e0cd:	sbb    cl,BYTE PTR [rax-0x22]
   14005e0d0:	pushf  
   14005e0d1:	sub    dl,BYTE PTR [rdi-0x2a]
   14005e0d4:	pop    rbp
   14005e0d5:	adc    eax,DWORD PTR [rax+0x5c]
   14005e0d8:	std    
   14005e0d9:	mov    bh,0xd1
   14005e0db:	cmp    ch,BYTE PTR [rsi-0x1a9f2804]
   14005e0e1:	addr32 (bad) 
   14005e0e3:	xor    al,0x8b
   14005e0e5:	sti    
   14005e0e6:	stc    
   14005e0e7:	xchg   ebx,eax
   14005e0e8:	push   rbx
   14005e0e9:	push   rbx
   14005e0ea:	(bad)  
   14005e0eb:	(bad)  
   14005e0ed:	and    cl,BYTE PTR [rdi+rcx*4-0x2667871]
   14005e0f4:	jnp    0x14005e0b9
   14005e0f6:	ror    BYTE PTR [rbx],0xcf
   14005e0f9:	xchg   BYTE PTR [rcx+0x10c37b43],ah
   14005e0ff:	(bad)  
   14005e100:	jmp    0x14005e11f
   14005e102:	sbb    bh,BYTE PTR [rdi+0x9]
   14005e105:	sub    edi,DWORD PTR [rdi]
   14005e107:	(bad)  
   14005e108:	jg     0x14005e106
   14005e10a:	adc    BYTE PTR [rsi-0x3],dl
   14005e10d:	ret    
   14005e10e:	movabs eax,ds:0xe0201d70fbfdf70f
   14005e117:	retf   0x3b3f
   14005e11a:	jns    0x14005e134
   14005e11c:	rex.WRXB dec BYTE PTR [rip+0x7106f022]        # 0x1b10cd145
   14005e123:	rex.X (bad) 
   14005e125:	cmp    DWORD PTR [rdi],0xffffffef
   14005e128:	add    BYTE PTR [rax+0x7a3a6da7],bl
   14005e12e:	mov    es,ecx
   14005e130:	outs   dx,DWORD PTR ds:[rsi]
   14005e131:	or     DWORD PTR [rbx],0x470df398
   14005e137:	cmc    
   14005e138:	pushf  
   14005e139:	ins    DWORD PTR es:[rdi],dx
   14005e13a:	stc    
   14005e13b:	loope  0x14005e1b6
   14005e13d:	add    al,0x3e
   14005e13f:	scas   eax,DWORD PTR es:[rdi]
   14005e140:	(bad)  
   14005e141:	push   0xffffffffedb04832
   14005e146:	add    BYTE PTR [rax+0x78dc03b],dh
   14005e14c:	push   rsi
   14005e14d:	test   DWORD PTR [rdx-0x28],esi
   14005e150:	push   rcx
   14005e151:	and    al,0x3d
   14005e153:	mov    dh,0x3
   14005e155:	loopne 0x14005e11c
   14005e157:	rex call 0x113a9063e
   14005e15d:	or     BYTE PTR [rsi+0x5deb00bb],0xd3
   14005e164:	add    DWORD PTR [rcx-0x5c],edx
   14005e167:	test   BYTE PTR [rdi+0x4],al
   14005e16a:	push   0xffffffffd67ccf0d
   14005e16f:	cdq    
   14005e170:	loope  0x14005e19e
   14005e172:	imul   edi,DWORD PTR [rcx],0x18
   14005e175:	sub    ah,BYTE PTR [rdx]
   14005e177:	and    BYTE PTR [rdx-0x34],cl
   14005e17a:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14005e17b:	mov    ebx,DWORD PTR [rbx+rdx*1-0xb]
   14005e17f:	repnz (bad) 
   14005e181:	(bad)  
   14005e182:	sub    al,al
   14005e184:	in     al,dx
   14005e185:	movabs ds:0x84dc3aa479e4aaab,al
   14005e18e:	or     BYTE PTR [rbx-0x8eadfdc],0x3c
   14005e195:	push   rdi
   14005e196:	push   rsi
   14005e197:	(bad)  
   14005e199:	sub    bh,BYTE PTR [rbp+0x3bf55520]
   14005e19f:	dec    BYTE PTR [rcx-0x4b]
   14005e1a2:	xor    ebp,edx
   14005e1a4:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14005e1a5:	loop   0x14005e1a9
   14005e1a7:	xchg   edx,eax
   14005e1a8:	pop    rbp
   14005e1a9:	lods   al,BYTE PTR ds:[rsi]
   14005e1aa:	(bad)  
   14005e1ab:	rcr    DWORD PTR [rsp+rbp*8],cl
   14005e1ae:	call   0x15117ff38
   14005e1b3:	nop
   14005e1b4:	je     0x14005e1b7
   14005e1b6:	(bad)  
   14005e1b7:	rex.WB
   14005e1b8:	in     al,0x19
   14005e1bb:	(bad)  
   14005e1bc:	imul   ecx,DWORD PTR [rsi],0x36eaf06e
   14005e1c2:	(bad)  
   14005e1c3:	mov    BYTE PTR [rcx-0x43aad44d],0x6d
   14005e1ca:	loopne 0x14005e179
   14005e1cc:	mov    edi,0x96c125bb
   14005e1d1:	jne    0x14005e1ae
   14005e1d3:	rex.RB rcr BYTE PTR [r11-0x630ea97],0xaf
   14005e1db:	mov    esi,0x5cd61398
   14005e1e0:	cmp    BYTE PTR [rsi],dh
   14005e1e2:	jge    0x14005e210
   14005e1e4:	rex.WR
   14005e1e5:	rex.WRXB jae 0x14005e1ad
   14005e1e8:	rex.RXB jle 0x14005e1ff
   14005e1eb:	sub    edi,esi
   14005e1ed:	loope  0x14005e186
   14005e1ef:	ret    0x8e00
   14005e1f2:	ds mov esi,0x153d33d0
   14005e1f8:	jp     0x14005e1eb
   14005e1fa:	data16 (bad) 
   14005e1fc:	mov    edi,0x7f8bc3ec
   14005e201:	mov    ebp,0x3df015d8
   14005e206:	jg     0x14005e1c9
   14005e208:	jo     0x14005e1ca
   14005e20a:	clc    
   14005e20b:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14005e20c:	xlat   BYTE PTR ds:[rbx]
   14005e20d:	xchg   cl,al
   14005e20f:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14005e210:	(bad)  
   14005e211:	or     eax,DWORD PTR [rbx+0x78]
   14005e214:	out    0x7f,eax
   14005e216:	shl    BYTE PTR [rsi-0x50ac8701],0x58
   14005e21d:	stc    
   14005e21e:	mov    ecx,0xb3d047fd
   14005e223:	pop    rsi
   14005e224:	or     al,0x23
   14005e226:	lods   eax,DWORD PTR ds:[rsi]
   14005e227:	cld    
   14005e228:	and    BYTE PTR [rax],bl
   14005e22a:	or     al,0x3a
   14005e22c:	dec    BYTE PTR [rax+rax*2-0x40]
   14005e230:	xlat   BYTE PTR ds:[rbx]
   14005e231:	ret    0x2390
   14005e234:	enter  0x1301,0xc7
   14005e238:	outs   dx,DWORD PTR ds:[rsi]
   14005e239:	in     al,dx
   14005e23a:	(bad)  
   14005e23b:	jl     0x14005e297
   14005e23d:	nop
   14005e23e:	ja     0x14005e240
   14005e240:	in     al,dx
   14005e241:	and    al,0xb0
   14005e243:	bnd jne 0x14005e1c6
   14005e246:	mov    eax,0x16d7880b
   14005e24b:	loop   0x14005e1f6
   14005e24d:	(bad)  
   14005e24e:	rex.WRX pop rcx
   14005e250:	shl    bh,0x75
   14005e253:	cmp    BYTE PTR [rdi],0xbf
   14005e256:	xchg   esi,eax
   14005e257:	jp     0x14005e2cb
   14005e259:	rex.WX sbb rax,0x4237329d
   14005e25f:	movabs ds:0x6bf836f92b33a340,al
   14005e268:	ds and al,0x3a
   14005e26b:	lahf   
   14005e26c:	mov    edi,0x21fa78c
   14005e271:	sub    ecx,eax
   14005e273:	lahf   
   14005e274:	repz stc 
   14005e276:	sahf   
   14005e277:	adc    al,BYTE PTR [rbp-0xbe9f6c2]
   14005e27d:	movd   DWORD PTR cs:[rsi],mm6
   14005e281:	(bad)  
   14005e282:	jmp    FWORD PTR [rdi+0x6]
   14005e285:	lock (bad) 
   14005e287:	fsub   DWORD PTR [rsi+riz*1]
   14005e28a:	mov    ?,ebx
   14005e28c:	out    dx,al
   14005e28d:	rex.W icebp 
   14005e28f:	mov    DWORD PTR [rdi-0xc99cb93],edi
   14005e295:	rex.RX pop rsp
   14005e297:	fld    DWORD PTR [rdi+0x60]
   14005e29a:	(bad)  
   14005e29b:	cmp    al,0x7c
   14005e29d:	sub    BYTE PTR [rdx+rbx*8],bl
   14005e2a0:	test   DWORD PTR [rdx-0x68],0xe874f3dc
   14005e2a7:	jge    0x14005e293
   14005e2a9:	sti    
   14005e2aa:	(bad)  
   14005e2ab:	je     0x14005e274
   14005e2ad:	test   edx,0x64f73e8
   14005e2b3:	jle    0x14005e273
   14005e2b5:	imul   ebx,DWORD PTR [rax],0x17
   14005e2b8:	xrelease xchg BYTE PTR [rsi-0x3dc02aa0],cl
   14005e2bf:	sub    eax,0x27f5ce3f
   14005e2c4:	jo     0x14005e275
   14005e2c6:	(bad)  
   14005e2c7:	out    0xfb,eax
   14005e2c9:	jbe    0x14005e32b
   14005e2cb:	in     eax,0xef
   14005e2cd:	ret    
   14005e2ce:	sar    DWORD PTR [rdi+0x73],cl
   14005e2d1:	imul   ecx,edi,0xf
   14005e2d4:	jae    0x14005e2ce
   14005e2d6:	(bad)  
   14005e2d7:	dec    eax
   14005e2d9:	(bad)  
   14005e2da:	jno    0x14005e2cd
   14005e2dc:	outs   dx,DWORD PTR ds:[rsi]
   14005e2dd:	(bad)  
   14005e2de:	rex.W sbb spl,al
   14005e2e1:	imul   edi,DWORD PTR [rdi+0x573fbef9],0x62
   14005e2e8:	sahf   
   14005e2e9:	jrcxz  0x14005e2c6
   14005e2eb:	retf   0x1ccc
   14005e2ee:	push   rcx
   14005e2ef:	retf   
   14005e2f0:	or     eax,DWORD PTR [rax-0x48dc8d4a]
   14005e2f6:	loopne 0x14005e35f
   14005e2f8:	(bad)  
   14005e2f9:	repnz loopne 0x14005e352
   14005e2fc:	jg     0x14005e308
   14005e2fe:	(bad)  
   14005e2ff:	retf   
   14005e300:	sub    edi,DWORD PTR [rsi-0x71dbf923]
   14005e306:	or     DWORD PTR [rcx],esp
   14005e308:	rex.WRXB add BYTE PTR [r14+0x3a],r14b
   14005e30c:	(bad)  
   14005e30d:	(bad)  
   14005e30e:	scas   al,BYTE PTR es:[rdi]
   14005e30f:	add    BYTE PTR es:[rax],ch
   14005e312:	out    0x4,eax
   14005e314:	nop
   14005e315:	scas   eax,DWORD PTR es:[rdi]
   14005e316:	add    edx,DWORD PTR [rax-0x41]
   14005e319:	popf   
   14005e31a:	or     al,BYTE PTR [rax-0x17]
   14005e31d:	retf   0x34e2
   14005e320:	add    ch,ah
   14005e322:	cwde   
   14005e323:	push   rdx
   14005e324:	out    0x80,al
   14005e326:	rex.R (bad) 
   14005e328:	and    esp,edx
   14005e32a:	pop    rcx
   14005e32b:	adc    ah,ah
   14005e32d:	ss clc 
   14005e32f:	xchg   ebx,eax
   14005e330:	rex.WXB mov r10b,0x4f
   14005e333:	mov    BYTE PTR [rsi],dl
   14005e335:	shr    DWORD PTR [rdx-0x7c],0x2c
   14005e339:	xchg   esp,eax
   14005e33a:	pop    rsp
   14005e33b:	fcmovnb st,st(1)
   14005e33d:	lahf   
   14005e33e:	and    cl,BYTE PTR [rcx]
   14005e340:	jo     0x14005e3a7
   14005e342:	cmp    al,0xcd
   14005e344:	shr    DWORD PTR [rsi-0x676cf1e2],0xc0
   14005e34b:	xchg   edi,eax
   14005e34c:	mov    BYTE PTR [rax-0x2bb30c1d],al
   14005e352:	retf   
   14005e353:	cmp    edi,DWORD PTR [rax+0x573a83c1]
   14005e359:	(bad)  
   14005e35a:	xchg   ebp,eax
   14005e35b:	(bad)  
   14005e35c:	jrcxz  0x14005e2fe
   14005e35e:	(bad)  
   14005e35f:	mov    edx,DWORD PTR [rbp-0x46abb6bd]
   14005e365:	ins    DWORD PTR es:[rdi],dx
   14005e366:	loopne 0x14005e395
   14005e368:	dec    DWORD PTR [rcx+0x6ea5abab]
   14005e36e:	fiadd  DWORD PTR [rcx]
   14005e370:	ins    BYTE PTR es:[rdi],dx
   14005e371:	movabs ds:0x9b9f8610bece1745,eax
   14005e37a:	mov    dl,0x0
   14005e37c:	data16 adc bh,dh
   14005e37f:	jb     0x14005e316
   14005e381:	(bad)  
   14005e382:	and    edi,DWORD PTR [rsi-0x3068c7c3]
   14005e388:	cmp    DWORD PTR [rdi+0x21ef13f8],ebp
   14005e38e:	popf   
   14005e38f:	xor    BYTE PTR [rsi-0x42dc3ca2],cl
   14005e395:	(bad)  
   14005e396:	mov    ebx,0xc8e83a00
   14005e39b:	xchg   ebp,eax
   14005e39c:	xlat   BYTE PTR ds:[rbx]
   14005e39d:	jrcxz  0x14005e40e
   14005e39f:	std    
   14005e3a0:	std    
   14005e3a1:	sub    BYTE PTR [rbp*8-0x2912d87],cl
   14005e3a8:	or     eax,0x1fbd44e0
   14005e3ad:	push   rcx
   14005e3ae:	sbb    BYTE PTR [rbx+0x5e8ec11e],al
   14005e3b4:	mov    bl,0x8b
   14005e3b6:	jg     0x14005e428
   14005e3b8:	lahf   
   14005e3b9:	rcr    DWORD PTR [rax+0x3b408],0xf
   14005e3c0:	push   0xfffffffff7ccf84c
   14005e3c5:	fsub   QWORD PTR [rax+rsi*8]
   14005e3c8:	je     0x14005e3c9
   14005e3ca:	lahf   
   14005e3cb:	mov    bh,0x3
   14005e3cd:	lea    ecx,[rcx-0x61]
   14005e3d0:	jb     0x14005e424
   14005e3d2:	enter  0x2d7,0x90
   14005e3d6:	jrcxz  0x14005e3ad
   14005e3d8:	add    bh,BYTE PTR [rbp+rdi*2-0x66c926e8]
   14005e3df:	add    dh,dl
   14005e3e1:	jmp    0x11c1ca1e6
   14005e3e6:	(bad)  
   14005e3e7:	add    DWORD PTR [rbx+0x1dbf80d6],edi
   14005e3ed:	mov    al,0x15
   14005e3ef:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14005e3f0:	add    DWORD PTR [rdi],ecx
   14005e3f2:	popf   
   14005e3f3:	neg    DWORD PTR [rdx+0x1cec4758]
   14005e3f9:	rol    BYTE PTR [rdx],0x12
   14005e3fc:	mov    ebp,0xc83e6786
   14005e401:	rex.RB cmps DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14005e403:	rex.RXB jmp 0x1444b4261
   14005e409:	sub    al,0xac
   14005e40b:	mov    ebx,DWORD PTR [rbx+rdx*1-0xb]
   14005e40f:	repnz (bad) 
   14005e411:	(bad)  
   14005e412:	sub    BYTE PTR [rax],al
   14005e414:	repnz in eax,dx
   14005e416:	cmp    DWORD PTR [rdi+0x74],edi
   14005e419:	sub    bh,bl
   14005e41b:	and    DWORD PTR [rdi],esp
   14005e41d:	clc    
   14005e41e:	rex.RXB
   14005e41f:	adc    dl,BYTE PTR cs:[rax+0x4cf00b98]
   14005e426:	(bad)  
   14005e427:	retf   
   14005e428:	cmp    edi,DWORD PTR [rax+0x5aba83c1]
   14005e42e:	adc    BYTE PTR [rdi],0xe3
   14005e431:	movabs al,ds:0xb01a548943958bc6
   14005e43a:	or     eax,0xaf27dff4
   14005e43f:	fwait
   14005e440:	sbb    BYTE PTR es:[rbx+0x15df1fce],0x2e
   14005e448:	cmp    al,0xbc
   14005e44a:	sbb    eax,0x34fd8441
   14005e44f:	(bad)  
   14005e450:	stc    
   14005e451:	stc    
   14005e452:	sbb    al,0xbf
   14005e454:	add    eax,0xe818f038
   14005e459:	cdq    
   14005e45a:	(bad)  
   14005e45b:	movabs al,ds:0x24f3f831084c59f
   14005e464:	jno    0x14005e4b8
   14005e466:	loopne 0x14005e48c
   14005e468:	xor    BYTE PTR [rip+0x457e2f26],bl        # 0x185841394
   14005e46e:	cwde   
   14005e46f:	sbb    eax,0x7bc36dc3
   14005e474:	xchg   DWORD PTR ds:[rbx-0x7e],ebx
   14005e478:	mov    eax,0xfee78023
   14005e47d:	jrcxz  0x14005e469
   14005e47f:	(bad)  
   14005e480:	push   rbp
   14005e481:	cwde   
   14005e482:	or     DWORD PTR [rdi+0x73939f23],0xed541b
   14005e48c:	shl    BYTE PTR [rax+rax*1],cl
   14005e48f:	mov    esi,0x5dec004d
   14005e494:	cli    
   14005e495:	ins    BYTE PTR es:[rdi],dx
   14005e496:	adc    ch,BYTE PTR [rbx+0x3601763d]
   14005e49c:	or     eax,esp
   14005e49e:	(bad)  
   14005e49f:	ficomp WORD PTR [rbx+riz*1]
   14005e4a2:	popf   
   14005e4a3:	sub    DWORD PTR [rdi+0x201279fc],ebp
   14005e4a9:	cdq    
   14005e4aa:	gs pop rsp
   14005e4ac:	loopne 0x14005e499
   14005e4ae:	(bad)  
   14005e4af:	and    al,ch
   14005e4b1:	mov    ebp,0xa0bc7c08
   14005e4b6:	ins    BYTE PTR es:[rdi],dx
   14005e4b7:	lock fld QWORD PTR ss:[rax]
   14005e4bb:	cmp    ecx,DWORD PTR [rip+0x2f5caa48]        # 0x16f628f09
   14005e4c1:	push   rcx
   14005e4c2:	jae    0x14005e467
   14005e4c4:	movabs ds:0x59a51e9d17c87c5,eax
   14005e4cd:	and    al,0xe2
   14005e4cf:	or     al,0x6d
   14005e4d2:	or     al,0xc
   14005e4d4:	push   rbp
   14005e4d5:	(bad)  
   14005e4d6:	rex.R sbb eax,0xa7168d5e
   14005e4dc:	(bad)  
   14005e4dd:	icebp  
   14005e4de:	fneni(8087 only) 
   14005e4e0:	xchg   edi,eax
   14005e4e1:	(bad)  
   14005e4e2:	(bad)  
   14005e4e4:	xor    DWORD PTR [rip+0xfffffffffb05fbe0],ebp        # 0x13b0be0ca
   14005e4ea:	test   DWORD PTR [rbp+0x6c3d6f9d],esp
   14005e4f0:	fs iret 
   14005e4f2:	movabs ds:0xc05bc6a0e3178968,eax
   14005e4fb:	scas   al,BYTE PTR es:[rdi]
   14005e4fc:	fwait
   14005e4fd:	shr    bl,0xa2
   14005e500:	or     DWORD PTR [rax],eax
   14005e502:	rex.WRXB std 
   14005e504:	lods   eax,DWORD PTR ds:[rsi]
   14005e505:	(bad)  
   14005e506:	jg     0x14005e569
   14005e508:	retf   
   14005e509:	xchg   ebp,eax
   14005e50a:	mov    ebx,0xb460d3ee
   14005e50f:	rex.WB add BYTE PTR [r11],0x8d
   14005e513:	(bad)  
   14005e514:	(bad)  
   14005e515:	popf   
   14005e516:	push   rdi
   14005e517:	fsubr  DWORD PTR [rdx+rax*2+0x48]
   14005e51b:	mov    ecx,0xe2049b70
   14005e520:	add    al,0x61
   14005e522:	push   rdi
   14005e523:	loope  0x14005e4a5
   14005e525:	iret   
   14005e526:	cmc    
   14005e527:	jbe    0xd4053d1e
   14005e52d:	xor    al,bh
   14005e52f:	in     al,dx
   14005e530:	(bad)  
   14005e532:	lock scas al,BYTE PTR es:[rdi]
   14005e534:	(bad)  
   14005e535:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14005e536:	mov    edi,DWORD PTR [rdi+0x78]
   14005e539:	(bad)  
   14005e53a:	rcl    BYTE PTR [rsi-0x1],0xb4
   14005e53e:	add    eax,DWORD PTR [rax+0x14ec07]
   14005e544:	jns    0x14005e502
   14005e546:	or     BYTE PTR [rax],bl
   14005e548:	add    edi,DWORD PTR [rsi]
   14005e54a:	outs   dx,DWORD PTR ds:[rsi]
   14005e54b:	std    
   14005e54c:	jae    0x14005e56c
   14005e54e:	popf   
   14005e54f:	mov    BYTE PTR [rdi-0x14],bl
   14005e552:	add    ah,ch
   14005e554:	xor    al,0x0
   14005e556:	stos   DWORD PTR es:[rdi],eax
   14005e557:	mov    eax,0x7ef64da6
   14005e55c:	ds sub eax,0x3080aee0
   14005e562:	movabs ds:0x4e7c0b0f2703931f,eax
   14005e56b:	add    al,0x76
   14005e56d:	sbb    dl,BYTE PTR [rax]
   14005e56f:	ja     0x14005e58a
   14005e571:	mov    dh,0x3
   14005e573:	sub    BYTE PTR [rax],0x27
   14005e576:	pushf  
   14005e577:	js     0x14005e5b0
   14005e579:	add    BYTE PTR [rbx+0x5dc8d80],bh
   14005e57f:	xchg   esp,eax
   14005e580:	sbb    eax,0xf168ef5b
   14005e585:	and    DWORD PTR [rsi+0x74],edx
   14005e588:	cmp    ch,BYTE PTR [rbx+0x548604b4]
   14005e58e:	or     BYTE PTR [rax-0x54],cl
   14005e591:	sbb    bl,BYTE PTR [rsi+0x9]
   14005e594:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14005e595:	xor    bl,BYTE PTR [rsi+0x28160ef]
   14005e59b:	and    BYTE PTR [rdi+0x551aa5b6],cl
   14005e5a1:	outs   dx,DWORD PTR ds:[rsi]
   14005e5a2:	(bad)  
   14005e5a3:	rex.WRB int3 
   14005e5a5:	leave  
   14005e5a6:	sbb    bl,BYTE PTR [rip+0x520248b8]        # 0x192082e64
   14005e5ac:	or     edi,ecx
   14005e5ae:	and    ebp,DWORD PTR [rcx]
   14005e5b0:	icebp  
   14005e5b1:	and    eax,0x55e0a026
   14005e5b6:	cmc    
   14005e5b7:	cmp    edi,DWORD PTR [rsi+0x63]
   14005e5ba:	lock jnp 0x14005e55b
   14005e5bd:	ror    DWORD PTR [rbp-0x30],cl
   14005e5c0:	adc    bh,al
   14005e5c2:	adc    dl,BYTE PTR [rcx]
   14005e5c4:	nop
   14005e5c5:	cdq    
   14005e5c6:	(bad)  
   14005e5c7:	rex.WRX xchg QWORD PTR [rax],r15
   14005e5ca:	mov    al,0x92
   14005e5cc:	sub    eax,0x405910ec
   14005e5d1:	sub    al,BYTE PTR [rbx]
   14005e5d3:	pop    rsp
   14005e5d4:	and    al,0x1
   14005e5d6:	xchg   ecx,eax
   14005e5d7:	addr32 test al,0xa7
   14005e5da:	cmp    DWORD PTR [rax+0x5a9143c1],edi
   14005e5e0:	sbb    ecx,DWORD PTR [rbx-0x561caf8f]
   14005e5e6:	add    ch,BYTE PTR [rcx-0x6929bfec]
   14005e5ec:	xor    DWORD PTR [rdi+0x63d6cefc],0xfebf37f
   14005e5f6:	jbe    0x14005e5bd
   14005e5f8:	(bad)  
   14005e5f9:	add    BYTE PTR [rdi-0x6507210a],cl
   14005e5ff:	(bad)  
   14005e600:	(bad)  
   14005e601:	fidivr WORD PTR [rsi]
   14005e603:	(bad)  
   14005e604:	rex.RB jmp 0x14005e673
   14005e607:	in     eax,0xcd
   14005e609:	(bad)  
   14005e60a:	cmp    QWORD PTR [rdi],rsp
   14005e60d:	add    cl,BYTE PTR [rbx]
   14005e60f:	jo     0x14005e5f5
   14005e611:	(bad)  
   14005e612:	mov    ?,WORD PTR [rax+rdi*1-0x17079bbf]
   14005e619:	push   rbp
   14005e61a:	xlat   BYTE PTR ds:[rbx]
   14005e61b:	xchg   DWORD PTR [rcx-0x44],ebx
   14005e61e:	or     eax,0x7e578c38
   14005e623:	(bad)  
   14005e624:	jns    0x14005e69d
   14005e626:	add    BYTE PTR [rdi],dl
   14005e628:	jmp    rdx
   14005e62a:	ret    
   14005e62b:	outs   dx,BYTE PTR ds:[rsi]
   14005e62d:	(bad)  
   14005e62e:	rex.RXB and eax,0xe1802a76
   14005e634:	int3   
   14005e635:	sbb    eax,0xa2016e80
   14005e63a:	push   rdi
   14005e63b:	pop    rcx
   14005e63c:	mov    edi,0x70f550d9
   14005e641:	jl     0x14005e659
   14005e643:	adc    BYTE PTR [rbx-0x5fcb100],0x61
   14005e64a:	mov    ecx,DWORD PTR [rcx]
   14005e64c:	add    BYTE PTR [rsi-0x7f],cl
   14005e64f:	(bad)  
   14005e650:	lahf   
   14005e651:	adc    al,0x4
   14005e653:	(bad)  
   14005e654:	(bad)  
   14005e655:	jb     0x14005e637
   14005e657:	div    DWORD PTR [rax-0x45]
   14005e65a:	(bad)  
   14005e65b:	loopne 0x14005e68c
   14005e65d:	rex.WRX add rax,0xffffffffd7613a70
   14005e663:	(bad)  
   14005e664:	and    dl,al
   14005e666:	rex.WB loopne 0x14005e6b6
   14005e669:	mov    ebx,0xe00983be
   14005e66e:	(bad)  
   14005e66f:	sub    al,0x55
   14005e671:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14005e672:	rex.RX
   14005e673:	addr32 (bad) 
   14005e675:	adc    ebp,DWORD PTR [rax+riz*1+0x15]
   14005e679:	popf   
   14005e67a:	scas   al,BYTE PTR es:[rdi]
   14005e67b:	adc    dh,ah
   14005e67d:	rex.WRB
   14005e67e:	rex.RX add al,0x44
   14005e681:	ret    0xba7c
   14005e684:	enter  0x5135,0x2f
   14005e688:	out    dx,eax
   14005e689:	(bad)  
   14005e68a:	add    DWORD PTR [rdx],0x7f06df20
   14005e690:	div    BYTE PTR [rdx+0x35]
   14005e693:	xor    al,0xe0
   14005e695:	(bad)  
   14005e696:	mov    ecx,0x5b124048
   14005e69b:	and    BYTE PTR [rdi-0x5e],0x5e
   14005e69f:	faddp  st(1),st
   14005e6a1:	or     eax,0xf1cafb1e
   14005e6a6:	adc    DWORD PTR [rsi],0x8bc6a0e3
   14005e6ac:	xchg   ebp,eax
   14005e6ad:	rex.XB pop r14
   14005e6af:	rex.RB add al,0x78
   14005e6b2:	mov    ebx,0x1dd2046e
   14005e6b7:	adc    eax,eax
   14005e6b9:	(bad)  
   14005e6ba:	xchg   DWORD PTR [rsi+0x7f],ebp
   14005e6bd:	addr32 (bad) 
   14005e6bf:	cs cli 
   14005e6c1:	adc    eax,0x2c039751
   14005e6c6:	cdq    
   14005e6c7:	pop    rsp
   14005e6c8:	or     eax,0x1d2c3656
   14005e6cd:	and    BYTE PTR [rsi-0x6d],dl
   14005e6d0:	add    DWORD PTR [rdi],esp
   14005e6d2:	add    DWORD PTR [rdi+rbp*8],edi
   14005e6d5:	(bad)  
   14005e6d6:	mov    dl,0x12
   14005e6d8:	stos   DWORD PTR es:[rdi],eax
   14005e6d9:	dec    edi
   14005e6db:	test   BYTE PTR [rcx-0x153c2013],ah
   14005e6e1:	(bad)  
   14005e6e2:	repz jg 0x14005e741
   14005e6e5:	ins    BYTE PTR es:[rdi],dx
   14005e6e6:	sbb    eax,eax
   14005e6e8:	mov    DWORD PTR [rdx-0x42f05c83],edi
   14005e6ee:	data16 fstp TBYTE PTR [rdi-0x18]
   14005e6f2:	mov    WORD PTR [rdi+0x3fdce900],fs
   14005e6f8:	rex.WRB add r15b,BYTE PTR [r10]
   14005e6fb:	inc    edi
   14005e6fd:	mov    eax,es
   14005e6ff:	(bad)  
   14005e700:	add    bh,BYTE PTR gs:[rbx+0x1b]
   14005e704:	(bad)  
   14005e705:	in     eax,dx
   14005e706:	xor    al,0x0
   14005e708:	mov    bh,0x4
   14005e70a:	jnp    0x14005e744
   14005e70c:	fwait
   14005e70d:	clc    
   14005e70e:	push   rbx
   14005e70f:	add    BYTE PTR [rsi-0x5f3e0604],ch
   14005e715:	push   rsp
   14005e716:	(bad)  
   14005e717:	cmp    edi,ebp
   14005e719:	je     0x14005e742
   14005e71b:	add    BYTE PTR [rbp-0x20],dh
   14005e71e:	xchg   ecx,eax
   14005e71f:	loopne 0x14005e6d9
   14005e721:	or     eax,DWORD PTR [rax-0x43]
   14005e724:	nop
   14005e725:	lea    edx,[rbx]
   14005e727:	rex.WRX int3 
   14005e729:	stc    
   14005e72a:	push   rax
   14005e72b:	adc    BYTE PTR [rdi],bh
   14005e72d:	sbb    ebp,DWORD PTR [rsi-0x1727de41]
   14005e733:	int3   
   14005e734:	(bad)  
   14005e735:	jns    0x14005e6ff
   14005e737:	mov    cl,BYTE PTR [rsi+0x47]
   14005e73a:	xchg   ebp,eax
   14005e73b:	xor    ecx,edx
   14005e73d:	(bad)  
   14005e73e:	(bad)  
   14005e73f:	(bad)  
   14005e740:	and    bl,dh
   14005e742:	stc    
   14005e743:	je     0x14005e75e
   14005e745:	rex.WRXB (bad) 
   14005e747:	add    al,0x90
   14005e749:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14005e74a:	(bad)
   14005e74e:	(bad)  
   14005e74f:	jg     0x14005e745
   14005e751:	adc    edi,ebx
   14005e753:	and    DWORD PTR [rdi+0x7f4f7c05],esp
   14005e759:	retf   0x27d
   14005e75c:	(bad)  
   14005e75e:	rex.XB cmp eax,0x1e0dc1cd
   14005e764:	mov    dl,ah
   14005e766:	cli    
   14005e767:	mov    cl,0x18
   14005e769:	(bad)  
   14005e76a:	xor    eax,0x4a902a9e
   14005e76f:	add    ecx,ecx
   14005e771:	push   0x56f491e0
   14005e776:	adc    dh,bl
   14005e778:	mov    ebx,0xeb803ba8
   14005e77d:	(bad)  
   14005e77e:	repz mov ebp,0xdc5ffadb
   14005e784:	cmc    
   14005e785:	(bad)  
   14005e786:	mov    ecx,0x2d8bffbf
   14005e78b:	rcr    eax,cl
   14005e78d:	mov    edx,0x7ebee3f7
   14005e792:	ucomiss xmm7,xmm2
   14005e795:	xchg   ebp,eax
   14005e796:	xchg   edi,eax
   14005e797:	loopne 0x14005e7fa
   14005e799:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14005e79a:	and    dh,BYTE PTR [rcx]
   14005e79c:	mov    bh,0x21
   14005e79e:	(bad)  
   14005e79f:	mov    cl,BYTE PTR [rbp+0x1c398749]
   14005e7a5:	mov    bh,0xfd
   14005e7a7:	pop    rsi
   14005e7a8:	call   QWORD PTR [rsi]
   14005e7aa:	add    al,0xeb
   14005e7ac:	rex.WR sbb cl,r15b
   14005e7af:	loope  0x14005e76e
   14005e7b1:	jbe    0x14005e7a1
   14005e7b3:	lahf   
   14005e7b4:	push   rdi
   14005e7b5:	(bad)  
   14005e7b6:	mov    eax,0xbeab8803
   14005e7bb:	pop    rbp
   14005e7bc:	lock sub DWORD PTR [rdx],0x6
   14005e7c0:	movabs ds:0xbde7c0e6e053fdce,al
   14005e7c9:	jl     0x14005e7b6
   14005e7cb:	jmp    0x132b2c3ac
   14005e7d0:	sub    BYTE PTR [rsi],cl
   14005e7d2:	pop    rsp
   14005e7d3:	or     esi,DWORD PTR [rax+0x3ce904ed]
   14005e7d9:	js     0x14005e7c9
   14005e7db:	lahf   
   14005e7dc:	mov    bh,0xff
   14005e7de:	test   BYTE PTR [rbx],dh
   14005e7e0:	sbb    eax,0x7c942739
   14005e7e5:	add    eax,edx
   14005e7e7:	jbe    0x14005e7eb
   14005e7e9:	fmul   QWORD PTR [rip+0xffffffffbe5f6f40]        # 0xfe65572f
   14005e7ef:	(bad)  
   14005e7f0:	add    BYTE PTR [rcx-0x26],ah
   14005e7f3:	rcr    BYTE PTR [rbx-0x7e],0xdf
   14005e7f7:	mov    esi,0x8e8df5f0
   14005e7fc:	(bad)  
   14005e7fd:	cmp    eax,0x9d15a6c5
   14005e802:	mov    ?,WORD PTR [rdx]
   14005e804:	xor    DWORD PTR [rcx+0x20ce0eed],esi
   14005e80a:	repz mov al,0x90
   14005e80e:	(bad)  
   14005e80f:	sub    ah,bl
   14005e811:	lock rex.WX
   14005e813:	rex.WB
   14005e814:	addr32 jge 0x14005e7e7
   14005e817:	vandnps ymm9,ymm3,ymm1
   14005e81b:	xchg   ebp,eax
   14005e81c:	xor    eax,0x426e1d0
   14005e821:	pop    rsp
   14005e822:	and    al,0x1
   14005e824:	test   eax,0x9491e7b8
   14005e829:	clc    
   14005e82a:	adc    dl,BYTE PTR [rbx]
   14005e82c:	push   rax
   14005e82d:	lock stos BYTE PTR es:[rdi],al
   14005e82f:	cli    
   14005e830:	sbb    eax,0x98daa4ff
   14005e835:	(bad)  
   14005e836:	push   rdx
   14005e837:	jno    0x14005e83a
   14005e839:	fs (bad) 
   14005e83b:	push   rsp
   14005e83c:	call   0x16f4d64b4
   14005e841:	in     al,dx
   14005e842:	nop
   14005e843:	mov    BYTE PTR [rax+0x72cd48ac],al
   14005e849:	stos   BYTE PTR es:[rdi],al
   14005e84b:	sbb    DWORD PTR [rcx-0x7e4f8869],0xe
   14005e852:	(bad)  
   14005e853:	rcl    DWORD PTR [rdx],1
   14005e855:	(bad)  
   14005e856:	mov    BYTE PTR [rcx+0x4f2a2bb3],0xba
   14005e85d:	push   rbp
   14005e85e:	rex.R
   14005e85f:	(bad)
   14005e865:	(bad)  
   14005e866:	jle    0x14005e859
   14005e868:	mov    bh,0xd7
   14005e86a:	pushf  
   14005e86b:	cmc    
   14005e86c:	or     eax,esp
   14005e86e:	push   rdi
   14005e86f:	fistp  QWORD PTR [rdi-0x29]
   14005e872:	(bad)  
   14005e873:	pop    rsp
   14005e874:	loopne 0x14005e851
   14005e876:	xchg   BYTE PTR [rbx-0x4],dh
   14005e879:	ja     0x14005e839
   14005e87b:	cmp    BYTE PTR [rbx],bh
   14005e87d:	mov    ecx,0xbfaef65
   14005e882:	ret    
   14005e883:	rex.WXB movabs r15,0xcedf606ee176ebf2
   14005e88d:	mov    al,0xe2
   14005e88f:	fwait
   14005e890:	lahf   
   14005e891:	or     BYTE PTR [rbx],al
   14005e893:	(bad)  
   14005e894:	fistp  WORD PTR [rdi-0x4b]
   14005e897:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14005e898:	(bad)  
   14005e899:	cld    
   14005e89a:	cdq    
   14005e89b:	shl    DWORD PTR [rcx+0x6de7d3f1],cl
   14005e8a1:	or     DWORD PTR [rbx],edx
   14005e8a3:	scas   eax,DWORD PTR es:[rdi]
   14005e8a4:	jl     0x14005e8e9
   14005e8a6:	sbb    BYTE PTR [rcx-0xc],bh
   14005e8a9:	sbb    esp,DWORD PTR [rcx-0x18]
   14005e8ac:	stc    
   14005e8ad:	in     eax,dx
   14005e8ae:	jbe    0x14005e89e
   14005e8b0:	outs   dx,DWORD PTR ds:[rsi]
   14005e8b1:	stos   DWORD PTR es:[rdi],eax
   14005e8b2:	(bad)  
   14005e8b3:	movabs ds:0x3f2da7d063f05e2c,al
   14005e8bc:	jp     0x14005e870
   14005e8be:	fimul  DWORD PTR [rdx-0x74353fcd]
   14005e8c4:	jg     0x14005e8ff
   14005e8c6:	(bad)  
   14005e8c7:	jae    0x14005e93e
   14005e8c9:	(bad)  
   14005e8ca:	add    esp,ebx
   14005e8cc:	(bad)  
   14005e8cd:	jrcxz  0x14005e903
   14005e8cf:	(bad)  
   14005e8d0:	outs   dx,BYTE PTR ds:[rsi]
   14005e8d1:	adc    BYTE PTR [rcx],al
   14005e8d3:	add    DWORD PTR [r14-0x51],eax
   14005e8d7:	add    eax,0x1e0abc3f
   14005e8dc:	(bad)  
   14005e8dd:	add    eax,0xf6e3f95c
   14005e8e2:	add    DWORD PTR [rdx],esi
   14005e8e4:	loopne 0x14005e8bd
   14005e8e6:	(bad)  
   14005e8e7:	cmp    DWORD PTR [rcx+rax*1+0x32],0x820bc1db
   14005e8ef:	pop    rbx
   14005e8f0:	idiv   DWORD PTR [rsi]
   14005e8f2:	sbb    al,0xbe
   14005e8f4:	jge    0x14005e8b7
   14005e8f6:	rex.WRXB stos BYTE PTR es:[rdi],al
   14005e8f8:	stos   BYTE PTR es:[rdi],al
   14005e8f9:	or     BYTE PTR [rsi+rbx*4-0x458ba9be],ah
   14005e900:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14005e901:	pop    rax
   14005e902:	pop    rcx
   14005e903:	rex.RX add al,0xa4
   14005e906:	movabs ds:0xc1df3c654c12bc35,al
   14005e90f:	add    al,BYTE PTR [rip+0xfffffffffe0dbe40]        # 0x13e13a755
   14005e915:	in     al,dx
   14005e916:	in     eax,0x65
   14005e918:	adc    al,0xfc
   14005e91a:	push   0xffffffffd6f1f592
   14005e91f:	mov    bl,0x36
   14005e921:	add    esp,edi
   14005e923:	(bad)  
   14005e924:	(bad)  
   14005e925:	jle    0x14005e912
   14005e927:	rex.RX or al,0xa6
   14005e92a:	ja     0x14005e90e
   14005e92c:	cmp    al,0xfd
   14005e92e:	rex.RX or r12d,DWORD PTR [rsi]
   14005e931:	(bad)  
   14005e932:	mov    edi,0xac2a67be
   14005e937:	in     al,0xec
   14005e93a:	pushf  
   14005e93b:	ret    
   14005e93c:	pop    rbx
   14005e93d:	jge    0x14005e9b7
   14005e93f:	jg     0x14005e9b7
   14005e941:	push   0xffffffffffffffc3
   14005e943:	and    eax,0xffcfc0e1
   14005e948:	stos   DWORD PTR es:[rdi],eax
   14005e949:	xor    BYTE PTR [rdx-0x1b9ee407],bh
   14005e94f:	sahf   
   14005e950:	mov    edi,0xc2783d0d
   14005e955:	scas   eax,DWORD PTR es:[rdi]
   14005e956:	mov    ecx,0x60eee592
   14005e95b:	sbb    ebx,esp
   14005e95d:	(bad)
   14005e961:	in     al,0xf5
   14005e963:	outs   dx,DWORD PTR ds:[rsi]
   14005e964:	mov    ch,0x7
   14005e966:	test   esp,ebp
   14005e968:	test   eax,0xbfeb7c3f
   14005e96d:	pop    rdx
   14005e96e:	std    
   14005e96f:	stos   DWORD PTR es:[rdi],eax
   14005e970:	rep outs dx,BYTE PTR ds:[rsi]
   14005e972:	pop    rbx
   14005e973:	std    
   14005e974:	mov    ecx,0x4e08c30a
   14005e979:	or     dh,BYTE PTR [rcx+0x37]
   14005e97c:	shl    bl,0xf5
   14005e97f:	adc    al,0xb7
   14005e981:	sub    DWORD PTR [rdi-0x70e155a6],esi
   14005e987:	xchg   ebp,eax
   14005e988:	repnz xor al,0x80
   14005e98b:	mov    ebx,0xd6004c00
   14005e990:	(bad)  
   14005e991:	fwait
   14005e992:	add    BYTE PTR [rax+0x2f12d363],al
   14005e998:	add    BYTE PTR [rdx],ah
   14005e99a:	sbb    DWORD PTR [edi+0x68],esi
   14005e99e:	in     eax,0xe7
   14005e9a0:	and    al,0x84
   14005e9a2:	call   0x19e07bd5e
   14005e9a7:	(bad)  
   14005e9a8:	rex (bad) 
   14005e9aa:	fsub   DWORD PTR [rsp+rax*1+0x1a71ebe1]
   14005e9b1:	mov    al,0x1e
   14005e9b3:	outs   dx,DWORD PTR ds:[rsi]
   14005e9b4:	or     DWORD PTR [rsi-0x7af143c8],edi
   14005e9ba:	cdq    
   14005e9bb:	push   rdx
   14005e9bc:	mov    ebx,0xc6d71aac
   14005e9c1:	enter  0x7c8c,0x91
   14005e9c5:	add    eax,0x89f7ae44
   14005e9ca:	push   rcx
   14005e9cb:	sbb    al,0xdf
   14005e9cd:	rex xchg edi,esp
   14005e9d0:	jp     0x14005e9fa
   14005e9d2:	(bad)  
   14005e9d3:	mov    dl,0x0
   14005e9d5:	rep outs dx,DWORD PTR ds:[rsi]
   14005e9d7:	jmp    0x14a31b8de
   14005e9dc:	pop    rcx
   14005e9dd:	rex.WRB cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14005e9df:	and    r8b,BYTE PTR [rdx]
   14005e9e2:	cmp    dh,al
   14005e9e4:	pop    rsp
   14005e9e5:	pop    rcx
   14005e9e6:	mov    DWORD PTR [rcx],ecx
   14005e9e8:	add    BYTE PTR [rbx],dh
   14005e9ea:	ror    eax,0xaa
   14005e9ed:	cli    
   14005e9ee:	sbb    eax,0x98daa4ff
   14005e9f3:	(bad)  
   14005e9f4:	push   rdx
   14005e9f5:	jno    0x14005e9f8
   14005e9f7:	leave  
   14005e9f8:	cs push rsi
   14005e9fa:	out    0x69,eax
   14005e9fc:	(bad)  
   14005e9fd:	jbe    0x14005e9f3
   14005e9ff:	ret    0x890e
   14005ea02:	or     BYTE PTR [rax-0x46],cl
   14005ea05:	or     BYTE PTR [rbx+0xcf22024],0xf5
   14005ea0c:	xor    al,0x7
   14005ea0e:	(bad)  
   14005ea0f:	js     0x14005ea86
   14005ea11:	fwait
   14005ea12:	call   0x120f5191e
   14005ea17:	push   rsp
   14005ea18:	repz sub ecx,edi
   14005ea1b:	test   BYTE PTR ds:[rbx],bl
   14005ea1e:	(bad)  
   14005ea1f:	call   0x1bf31da28
   14005ea24:	jb     0x14005ea45
   14005ea26:	dec    BYTE PTR [rdx+0x527becc9]
   14005ea2c:	loopne 0x14005ea9d
   14005ea2e:	sub    DWORD PTR [rip+0x6fe2974d],ebx        # 0x1afe88181
   14005ea34:	icebp  
   14005ea35:	(bad)  
   14005ea36:	bsr    esp,DWORD PTR [rip+0xffffffffcfcf0c1c]        # 0x10fd4f659
   14005ea3d:	lea    eax,[rbp+rdi*8+0xcf6aef8]
   14005ea44:	outs   dx,BYTE PTR ds:[rsi]
   14005ea45:	fstp   QWORD PTR [rip+0xffffffffc3e7eebe]        # 0x103edd909
   14005ea4b:	xor    DWORD PTR [rsi+rax*1+0x63],ecx
   14005ea4f:	(bad)  
   14005ea51:	rex.WR call 0x1ab01e4d6
   14005ea57:	loop   0x14005ea9b
   14005ea59:	shl    ah,0xe5
   14005ea5c:	xlat   BYTE PTR ds:[rbx]
   14005ea5d:	xchg   ecx,ecx
   14005ea5f:	rex.WXB scas al,BYTE PTR es:[rdi]
   14005ea61:	or     DWORD PTR [rbx],ebp
   14005ea63:	xor    BYTE PTR [rcx+0xc],dh
   14005ea66:	in     eax,dx
   14005ea67:	ret    
   14005ea68:	and    eax,edx
   14005ea6a:	clc    
   14005ea6b:	loopne 0x14005ea34
   14005ea6d:	add    BYTE PTR [rdi+0x43c0c408],bh
   14005ea73:	push   rbp
   14005ea74:	(bad)  
   14005ea75:	mov    al,0xf3
   14005ea77:	jg     0x14005ea49
   14005ea79:	loop   0x14005eaa5
   14005ea7b:	mov    WORD PTR [rax-0x346f3dc],fs
   14005ea81:	repnz (bad) 
   14005ea83:	sbb    DWORD PTR es:[rcx+riz*1-0x8],0xffffff96
   14005ea89:	call   0x130a78905
   14005ea8e:	(bad)  
   14005ea8f:	and    dh,bh
   14005ea91:	mov    fs,WORD PTR [rax-0x60491beb]
   14005ea97:	ja     0x14005ea9f
   14005ea99:	clc    
   14005ea9a:	adc    BYTE PTR [rdx],sil
   14005ea9d:	mov    al,dh
   14005ea9f:	pop    rbp
   14005eaa0:	add    BYTE PTR [rax+0x20],ah
   14005eaa3:	stc    
   14005eaa4:	add    ah,BYTE PTR [rax-0x7777e643]
   14005eaaa:	mov    bh,0x87
   14005eaac:	(bad)  
   14005eaad:	mov    al,0x5b
   14005eaaf:	mov    al,0x53
   14005eab1:	(bad)  
   14005eab3:	fbld   TBYTE PTR [rsi]
   14005eab5:	and    DWORD PTR [rdx+riz*8-0x26a0fecd],edx
   14005eabc:	jl     0x14005eac1
   14005eabe:	rex.WXB jrcxz 0x14005ea49
   14005eac1:	pop    rcx
   14005eac2:	shr    ecx,1
   14005eac4:	xchg   ecx,eax
   14005eac5:	sbb    bl,BYTE PTR [rcx]
   14005eac7:	rex.WB
   14005eac8:	rex.R mov dl,0x99
   14005eacb:	xchg   DWORD PTR [rcx],eax
   14005eacd:	jnp    0x14005eac8
   14005eacf:	xor    ebx,DWORD PTR [rdi-0x34]
   14005ead2:	fdiv   DWORD PTR [rdx+0x7c6c77ca]
   14005ead8:	movsxd ebp,DWORD PTR [rdi+rcx*4+0xb]
   14005eadc:	retf   0xa844
   14005eadf:	fisubr DWORD PTR [rcx+0x7e]
   14005eae2:	xchg   ecx,eax
   14005eae3:	jae    0x14005eaf7
   14005eae5:	sbb    eax,0x5c0248b8
   14005eaea:	sbb    DWORD PTR [rdi+0x73],ecx
   14005eaed:	mov    al,0xab
   14005eaef:	xchg   DWORD PTR [rbp+0x1a],edi
   14005eaf2:	adc    edi,eax
   14005eaf4:	adc    dl,BYTE PTR [rcx]
   14005eaf6:	jo     0x14005eb74
   14005eaf8:	sahf   
   14005eaf9:	mov    DWORD PTR [rdx+0x79],edi
   14005eafc:	(bad)  
   14005eafd:	(bad)  
   14005eafe:	js     0x14005eb50
   14005eb00:	out    0xea,eax
   14005eb02:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14005eb03:	repnz (bad) 
   14005eb05:	sbb    al,0xd4
   14005eb07:	js     0x14005eaba
   14005eb09:	jb     0x14005eb33
   14005eb0b:	xchg   ecx,eax
   14005eb0c:	rex.WX add QWORD PTR [rcx+0x72414645],rdx
   14005eb13:	enter  0xb85c,0xee
   14005eb17:	mov    WORD PTR [rax+rax*1-0x41],cs
   14005eb1b:	cld    
   14005eb1c:	movabs eax,ds:0x3462dbf41486f07
   14005eb25:	out    dx,al
   14005eb26:	movabs eax,ds:0x9df18654744521b3
   14005eb2f:	mov    esi,0x848ee60b
   14005eb34:	adc    eax,0x7766da78
   14005eb39:	out    dx,eax
   14005eb3a:	rex.WX movabs rsp,0xa61b5f3726183fdf
   14005eb44:	xlat   BYTE PTR ds:[rbx]
   14005eb45:	ins    BYTE PTR es:[rdi],dx
   14005eb46:	or     ah,BYTE PTR [rbx+0xf]
   14005eb49:	(bad)  
   14005eb4a:	jge    0x14005eb64
   14005eb4c:	mov    esi,0x6158f3ef
   14005eb51:	mov    ecx,0x2a25aeff
   14005eb56:	test   BYTE PTR [rbx+0x66],al
   14005eb59:	icebp  
   14005eb5a:	(bad)  
   14005eb5b:	jmp    QWORD PTR [rbx]
   14005eb5d:	outs   dx,DWORD PTR ds:[rsi]
   14005eb5e:	jl     0x14005ebcb
   14005eb60:	sbb    BYTE PTR [rax+0xe],bh
   14005eb63:	pop    rdi
   14005eb64:	sti    
   14005eb65:	rcr    DWORD PTR [rbx],0x7f
   14005eb68:	rex.XB clc 
   14005eb6a:	fcom   QWORD PTR [rdi]
   14005eb6c:	out    dx,eax
   14005eb6d:	sti    
   14005eb6e:	sti    
   14005eb6f:	repz (bad) 
   14005eb71:	mov    eax,0x1f46e6f5
   14005eb76:	imul   eax,DWORD PTR [r15],0x440c0577
   14005eb7d:	loop   0x14005ebe8
   14005eb7f:	(bad)  
   14005eb80:	add    BYTE PTR [rsi],al
   14005eb82:	mov    bh,0xec
   14005eb84:	rex.R sar DWORD PTR es:[rax+rax*1-0x4c],0x44
   14005eb8b:	pushf  
   14005eb8c:	add    DWORD PTR [rdi+0x13],ebp
   14005eb8f:	add    BYTE PTR [rdx+0x16],dh
   14005eb92:	mov    dh,0x6b
   14005eb94:	add    al,cl
   14005eb96:	sub    eax,0x54a6d1ea
   14005eb9b:	xchg   BYTE PTR [rdx-0x14],bh
   14005eb9e:	outs   dx,DWORD PTR ds:[rsi]
   14005eb9f:	adc    DWORD PTR [rax-0x5e],esp
   14005eba2:	mov    BYTE PTR [rdi+0x4774b18],bl
   14005eba8:	push   rax
   14005eba9:	(bad)  
   14005ebaa:	jo     0x14005eb68
   14005ebac:	adc    al,0x27
   14005ebaf:	add    DWORD PTR [rdx-0x7f223c67],ebp
   14005ebb5:	jnp    0x14005ebe7
   14005ebb7:	add    esp,edi
   14005ebb9:	or     al,0x14
   14005ebbb:	push   rcx
   14005ebbc:	(bad)  
   14005ebbd:	(bad)  
   14005ebbe:	loopne 0x14005eb67
   14005ebc0:	xchg   ecx,eax
   14005ebc1:	rex adc ebx,DWORD PTR [rcx+0x40]
   14005ebc5:	xchg   esp,eax
   14005ebc6:	(bad)  
   14005ebc7:	cmp    BYTE PTR [rax],dh
   14005ebc9:	sbb    cl,BYTE PTR [rdx]
   14005ebcb:	xchg   esi,eax
   14005ebcc:	movabs eax,ss:0x2d6e1d0303e746d1
   14005ebd6:	add    eax,0xca80922e
   14005ebdb:	(bad)  
   14005ebdc:	test   DWORD PTR [rsi],edi
   14005ebde:	(bad)  
   14005ebdf:	ja     0x14005ec55
   14005ebe1:	jbe    0x14005ec4a
   14005ebe3:	or     r13,rcx
   14005ebe6:	pop    rdx
   14005ebe7:	and    BYTE PTR [rdi+0x6a],0x9d
   14005ebeb:	out    dx,al
   14005ebec:	retf   0x64a0
   14005ebef:	fwait
   14005ebf0:	out    0xa1,eax
   14005ebf2:	es push rdi
   14005ebf4:	(bad)  
   14005ebf5:	jmp    0x14005ec24
   14005ebf7:	mov    BYTE PTR [rcx-0x73],0x77
   14005ebfb:	jb     0x14005ec73
   14005ebfd:	push   rcx
   14005ebfe:	fcmovbe st,st(5)
   14005ec00:	adc    eax,0xd77d3aed
   14005ec05:	add    dh,bl
   14005ec07:	jle    0x14005ebf4
   14005ec09:	movsxd ebx,DWORD PTR [rbp+rbp*8+0x79]
   14005ec0d:	outs   dx,BYTE PTR ds:[rsi]
   14005ec0e:	jg     0x14005ec23
   14005ec10:	sbb    dh,BYTE PTR [rcx+0xf310d45]
   14005ec16:	loop   0x14005ec3f
   14005ec18:	(bad)  
   14005ec19:	mov    ebx,esi
   14005ec1b:	or     dl,dh
   14005ec1d:	xor    bl,BYTE PTR [rip+0xfffffffff12bd027]        # 0x13131bc4a
   14005ec23:	test   al,0xee
   14005ec25:	lock int3 
   14005ec27:	ds fwait
   14005ec29:	add    al,0x8e
   14005ec2b:	loopne 0x14005ec28
   14005ec2d:	fcmovbe st,st(3)
   14005ec2f:	clc    
   14005ec30:	(bad)  
   14005ec31:	iret   
   14005ec32:	movabs eax,ds:0x8c798f86384b7c9f
   14005ec3b:	jle    0x14005ec30
   14005ec3d:	xchg   ebx,eax
   14005ec3e:	movabs eax,ds:0x89dfb5cdb133ef6f
   14005ec47:	xlat   BYTE PTR ds:[rbx]
   14005ec48:	cld    
   14005ec49:	pop    rsp
   14005ec4a:	cwde   
   14005ec4b:	pop    rcx
   14005ec4c:	mov    ecx,0xe07cac2e
   14005ec51:	sub    esi,esi
   14005ec53:	test   eax,0x6bee7e6f
   14005ec58:	add    bh,cl
   14005ec5a:	or     edx,DWORD PTR [rbx+rbp*4+0x7f]
   14005ec5e:	cmp    ch,bh
   14005ec60:	rex.RXB cmp DWORD PTR [r14+0x2003b6f2],r13d
   14005ec67:	or     al,0xf7
   14005ec69:	sbb    cl,BYTE PTR [rsi]
   14005ec6b:	cwde   
   14005ec6c:	jae    0x14005ecb7
   14005ec6e:	std    
   14005ec6f:	(bad)  
   14005ec70:	xor    eax,0x8480be66
   14005ec75:	icebp  
   14005ec76:	stos   BYTE PTR es:[rdi],al
   14005ec77:	(bad)  
   14005ec78:	(bad)  
   14005ec79:	add    DWORD PTR [rsi-0x61],ecx
   14005ec7c:	je     0x14005ec22
   14005ec7e:	cs (bad) 
   14005ec80:	push   rcx
   14005ec81:	or     DWORD PTR [rax],ecx
   14005ec83:	adc    al,0x4b
   14005ec85:	xchg   DWORD PTR [rbp+0x3],ebx
   14005ec88:	mov    al,0xa0
   14005ec8a:	rex.RXB jge 0x14005ec59
   14005ec8d:	xor    ebx,ebp
   14005ec8f:	hlt    
   14005ec90:	jb     0x14005ece4
   14005ec92:	shr    BYTE PTR [rcx+0x0],0x27
   14005ec96:	mov    esi,0x825d193c
   14005ec9b:	mov    edi,0xfe31741e
   14005eca0:	pushf  
   14005eca1:	clc    
   14005eca2:	mov    bl,0x2b
   14005eca4:	cs rex.X push rcx
   14005eca7:	xlat   BYTE PTR ds:[rbx]
   14005eca8:	push   rcx
   14005eca9:	push   rax
   14005ecaa:	adc    eax,0xb226813
   14005ecaf:	rex.W lods al,BYTE PTR ds:[rsi]
   14005ecb1:	sbb    cl,BYTE PTR [rsi]
   14005ecb3:	(bad)  
   14005ecb4:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14005ecb5:	outs   dx,BYTE PTR ds:[rsi]
   14005ecb6:	sti    
   14005ecb7:	adc    DWORD PTR [rsi+rbp*2+0x69],0x67
   14005ecbc:	mov    edi,0x97ffcff4
   14005ecc1:	jns    0x14005ec9d
   14005ecc3:	call   0x103a659a2
   14005ecc8:	lods   eax,DWORD PTR ds:[rsi]
   14005ecc9:	add    al,0x70
   14005eccb:	xchg   ecx,eax
   14005eccc:	add    al,0x54
   14005ecce:	(bad)  
   14005eccf:	sub    BYTE PTR [rdx+0x3d1df1c9],al
   14005ecd5:	cmc    
   14005ecd6:	ss retf 0xa42c
   14005ecda:	imul   eax,DWORD PTR [rcx],0xffffff9e
   14005ecdd:	test   eax,0x832bba75
   14005ece2:	xchg   edx,eax
   14005ece3:	ins    DWORD PTR es:[rdi],dx
   14005ece4:	sahf   
   14005ece5:	(bad)  
   14005ece6:	push   0x4a
   14005ece8:	mov    esp,0x5e350718
   14005eced:	ins    BYTE PTR es:[rdi],dx
   14005ecee:	or     ah,ah
   14005ecf0:	push   rbp
   14005ecf1:	rex.R
   14005ecf2:	rex push 0xffffffffffffffa3
   14005ecf5:	out    0x91,eax
   14005ecf7:	in     al,0xf8
   14005ecf9:	(bad)  
   14005ecfa:	fcmove st,st(7)
   14005ecfc:	retf   
   14005ecfd:	mov    edi,0xff6f006
   14005ed02:	jg     0x14005ed83
   14005ed04:	sub    esi,DWORD PTR [rbx+rsi*8+0x57dc22c9]
   14005ed0b:	in     al,dx
   14005ed0c:	shl    DWORD PTR [rax+rax*2],0xb7
   14005ed10:	rex.B jns 0x14005ecdd
   14005ed13:	sbb    al,0x0
   14005ed15:	cmp    dl,BYTE PTR [rdx+0x334d1579]
   14005ed1b:	adc    DWORD PTR [rax],esp
   14005ed1d:	jbe    0x14005ed04
   14005ed1f:	sub    al,0xb2
   14005ed21:	enter  0xc01b,0x43
   14005ed25:	(bad)  
   14005ed26:	xchg   edi,eax
   14005ed27:	rex.WRX movabs rdi,0xadf7cf0d1de85e14
   14005ed31:	or     al,0xb3
   14005ed33:	and    DWORD PTR [rbx],0x61
   14005ed36:	add    bl,bl
   14005ed38:	jnp    0x14005ed28
   14005ed3a:	(bad)  
   14005ed3b:	rex.RX (bad) 
   14005ed3d:	cli    
   14005ed3e:	jb     0x14005ed58
   14005ed40:	jp     0x14005ed3a
   14005ed42:	(bad)  
   14005ed43:	mov    bl,ch
   14005ed45:	add    BYTE PTR [rdi],ch
   14005ed47:	cld    
   14005ed48:	lea    ebp,[rdi-0x3]
   14005ed4b:	fnstenv [rax]
   14005ed4d:	mov    ah,0xe3
   14005ed4f:	xchg   ecx,eax
   14005ed50:	xor    BYTE PTR [rdi+rbp*4+0x7f1bdafd],cl
   14005ed57:	mov    eax,0xfeac58a5
   14005ed5c:	push   rax
   14005ed5d:	(bad)  
   14005ed5e:	lahf   
   14005ed5f:	std    
   14005ed60:	shl    BYTE PTR [ebx-0x3b],1
   14005ed64:	in     eax,0xea
   14005ed66:	iret   
   14005ed67:	add    BYTE PTR [rax+rdi*1+0x6a060427],cl
   14005ed6e:	movsxd eax,DWORD PTR [rdx]
   14005ed70:	add    ch,bl
   14005ed72:	push   rdx
   14005ed73:	(bad)  
   14005ed74:	adc    ebp,DWORD PTR [rdx-0x49]
   14005ed77:	add    al,0xed
   14005ed79:	movabs eax,ds:0x1d3941898fcc101f
   14005ed82:	add    BYTE PTR [rax],dl
   14005ed84:	call   0x144f5875d
   14005ed89:	(bad)
   14005ed8d:	pop    rsi
   14005ed8e:	rex (bad) 
   14005ed90:	retf   0xd3fb
   14005ed93:	add    dl,al
   14005ed95:	outs   dx,DWORD PTR ds:[rsi]
   14005ed96:	fdivr  QWORD PTR [rbp+0x4f]
   14005ed99:	clc    
   14005ed9a:	(bad)  
   14005ed9b:	push   rbp
   14005ed9c:	mov    esp,0xa84f5b3d
   14005eda1:	rex.R cmc 
   14005eda3:	or     BYTE PTR [rax+0x46071d42],cl
   14005eda9:	mov    ebp,0x9dc372fc
   14005edae:	(bad)  
   14005edb0:	je     0x14005ed6a
   14005edb2:	xor    eax,0x248b815
   14005edb7:	sub    ah,BYTE PTR [rdi]
   14005edb9:	adc    al,0x3e
   14005edbb:	jae    0x14005ee39
   14005edbd:	rex.RXB
   14005edbe:	addr32 (bad) 
   14005edc0:	(bad)  
   14005edc1:	mov    ah,0x90
   14005edc3:	scas   al,BYTE PTR es:[rdi]
   14005edc4:	add    eax,0xe9d6a678
   14005edc9:	scas   al,BYTE PTR es:[rdi]
   14005edca:	or     al,0x4a
   14005edcc:	mov    dh,0x79
   14005edce:	(bad)  
   14005edcf:	push   0x72
   14005edd1:	jne    0x14005ed86
   14005edd3:	fidiv  WORD PTR [rbx-0x195303f0]
   14005edd9:	(bad)  
   14005edda:	jbe    0x14005eddc
   14005eddc:	or     dl,bh
   14005edde:	xor    eax,0xca91cc28
   14005ede3:	rcr    bh,0x8a
   14005ede6:	movabs ds:0x8c373816d8146296,eax
   14005edef:	and    al,0x6b
   14005edf1:	jae    0x14005edf9
   14005edf3:	jb     0x14005ee03
   14005edf5:	mov    edx,0x10980040
   14005edfa:	pop    rax
   14005edfb:	fs ret 
   14005edfd:	int3   
   14005edfe:	loope  0x14005edb0
   14005ee00:	add    bh,BYTE PTR [rdi-0x4e]
   14005ee03:	sti    
   14005ee04:	fld    DWORD PTR [rcx+0x7f0a6175]
   14005ee0a:	movabs eax,ds:0x6f4de661c5fd6a73
   14005ee13:	cmpxchg8b (bad)
   14005ee14:	(bad)  
   14005ee15:	(bad)  
   14005ee16:	mov    ebx,0xe77e8c34
   14005ee1b:	(bad)  
   14005ee1c:	sar    BYTE PTR [rbx+0x3730f9ff],1
   14005ee22:	xor    BYTE PTR [rsi+rcx*1],dl
   14005ee25:	mov    edi,0x3c786de9
   14005ee2a:	(bad)  
   14005ee2b:	cmp    eax,DWORD PTR [rdi+0x3f8ddfef]
   14005ee31:	repz cmc 
   14005ee33:	xchg   edx,eax
   14005ee34:	(bad)  
   14005ee36:	(bad)  
   14005ee37:	(bad)  
   14005ee38:	add    dh,BYTE PTR [rbx-0x19]
   14005ee3b:	cld    
   14005ee3c:	pop    rsp
   14005ee3d:	in     eax,0x11
   14005ee3f:	test   BYTE PTR [rax+rdx*2],bh
   14005ee42:	xchg   ebp,eax
   14005ee43:	lods   eax,DWORD PTR ds:[rsi]
   14005ee44:	dec    BYTE PTR [rcx]
   14005ee46:	mov    ss,WORD PTR [rbx-0x47f4b100]
   14005ee4c:	sub    ah,BYTE PTR [rbx-0x2ff6c896]
   14005ee52:	es cld 
   14005ee54:	outs   dx,DWORD PTR ds:[rsi]
   14005ee55:	adc    bh,BYTE PTR es:[rcx+0x70]
   14005ee59:	movabs ds:0x67230b29cc145e3,al
   14005ee62:	jge    0x14005ee42
   14005ee64:	fdiv   DWORD PTR [rax+0x401d7cd2]
   14005ee6a:	(bad)  
   14005ee6b:	add    al,0x3b
   14005ee6d:	pushf  
   14005ee6e:	(bad)  
   14005ee6f:	jo     0x14005eea8
   14005ee71:	lock pop rdx
   14005ee73:	fmul   QWORD PTR [rip+0x70004e68]        # 0x1b0063ce1
   14005ee79:	xchg   dh,al
   14005ee7b:	mov    al,BYTE PTR [rax+0x6df66b58]
   14005ee81:	mov    dh,0x1
   14005ee83:	(bad)  
   14005ee84:	cdq    
   14005ee85:	xor    al,0x97
   14005ee87:	add    ecx,esi
   14005ee89:	xchg   esi,eax
   14005ee8a:	shr    BYTE PTR es:[rsi+rax*4-0xd],1
   14005ee8f:	add    DWORD PTR [rcx+0x226b70e],0xd5404917
   14005ee99:	clc    
   14005ee9a:	rex.X movabs eax,ds:0x1124534aee7a3be3
   14005eea4:	add    DWORD PTR [rcx+0x17],ecx
   14005eea7:	jo     0x14005ee3a
   14005eea9:	add    al,0x44
   14005eeab:	sahf   
   14005eeac:	movabs eax,ds:0xdd5c450f06e0e69e
   14005eeb5:	push   rsp
   14005eeb6:	jo     0x14005ee4e
   14005eeb8:	(bad)  
   14005eeb9:	lahf   
   14005eeba:	adc    eax,0x759626db
   14005eebf:	sahf   
   14005eec0:	push   rax
   14005eec1:	rex.X loopne 0x14005ef33
   14005eec4:	and    eax,0xfc1838cd
   14005eeca:	pushf  
   14005eecb:	add    al,0x6a
   14005eecd:	sub    DWORD PTR [rdi+0x4960d77e],ecx
   14005eed3:	(bad)  
   14005eed4:	js     0x14005eeca
   14005eed6:	mov    dl,0x89
   14005eed8:	adc    eax,ecx
   14005eeda:	rex.RXB pop r9
   14005eedc:	outs   dx,BYTE PTR ds:[rsi]
   14005eedd:	sbb    BYTE PTR [rdi],cl
   14005eedf:	lock pop rsp
   14005eee1:	ds stc 
   14005eee3:	pop    rsp
   14005eee4:	fcom   st(3)
   14005eee6:	mov    edi,0x5fefec3a
   14005eeeb:	adc    DWORD PTR [rsi+0x46],esp
   14005eeee:	push   rsi
   14005eeef:	test   ecx,esi
   14005eef1:	lahf   
   14005eef2:	clc    
   14005eef3:	jmp    0xc411bc28
   14005eef8:	idiv   DWORD PTR [rbp+0x2e]
   14005eefb:	rex.WR (bad) 
   14005eefd:	lods   al,BYTE PTR ds:[rsi]
   14005eefe:	or     eax,0x1b5c9753
   14005ef03:	(bad)  
   14005ef04:	out    dx,al
   14005ef05:	call   QWORD PTR [rdx+0x18]
   14005ef08:	fdivrp st(3),st
   14005ef0a:	add    al,0xce
   14005ef0c:	std    
   14005ef0d:	icebp  
   14005ef0e:	ror    BYTE PTR [rdi],1
   14005ef10:	pop    rsi
   14005ef11:	adc    BYTE PTR [rdx+0x39dcfc17],cl
   14005ef17:	ds (bad) 
   14005ef19:	(bad)  
   14005ef1a:	loopne 0x14005eeab
   14005ef1c:	xchg   ebx,eax
   14005ef1d:	mov    r9b,0x3
   14005ef20:	and    BYTE PTR [rdi],cl
   14005ef22:	xchg   DWORD PTR [rsi+0x7f],edx
   14005ef25:	(bad)  
   14005ef26:	or     eax,ecx
   14005ef28:	test   BYTE PTR [rax+rdx*8],0xcc
   14005ef2c:	pushf  
   14005ef2d:	xor    bl,BYTE PTR [rbx+rsi*8+0x229ba6c]
   14005ef34:	rex.X cmp cl,BYTE PTR [rsi]
   14005ef37:	rex.XB test eax,0xf4ff5b93
   14005ef3d:	rex xchg eax,eax
   14005ef3f:	rex.WRB add al,0x9c
   14005ef42:	sbb    ah,bl
   14005ef44:	imul   eax,DWORD PTR [rax],0x3b88da6d
   14005ef4a:	add    edi,edx
   14005ef4c:	(bad)  
   14005ef4d:	adc    ch,BYTE PTR [rax-0x617bf362]
   14005ef53:	lods   al,BYTE PTR ds:[rsi]
   14005ef54:	mov    bh,0x2
   14005ef56:	movabs ds:0xcb85b304e341b505,al
   14005ef5f:	xor    BYTE PTR [rdi+0x1d735233],dl
   14005ef65:	outs   dx,BYTE PTR ds:[rsi]
   14005ef66:	lods   eax,DWORD PTR ds:[rsi]
   14005ef67:	pop    rbp
   14005ef68:	rcr    BYTE PTR [rdi-0x1c],0x17
   14005ef6c:	ds jae 0x14005efd4
   14005ef6f:	sbb    eax,0x55a7773d
   14005ef74:	and    BYTE PTR [rcx],dl
   14005ef76:	add    ecx,ecx
   14005ef78:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14005ef79:	or     edx,esp
   14005ef7b:	movsxd esp,DWORD PTR [rdx+0xdc1de5e]
   14005ef81:	pop    rsi
   14005ef82:	frstor [rsi]
   14005ef84:	(bad)  
   14005ef85:	sbb    DWORD PTR [rdi],ebp
   14005ef87:	out    dx,eax
   14005ef88:	loopne 0x14005efde
   14005ef8a:	repz mov ebx,ebx
   14005ef8d:	(bad)
   14005ef90:	jl     0x14005ef35
   14005ef92:	out    dx,al
   14005ef93:	enter  0xa13b,0x8b
   14005ef97:	or     BYTE PTR [rax],0xfc
   14005ef9a:	ins    DWORD PTR es:[rdi],dx
   14005ef9b:	shl    dh,1
   14005ef9d:	rex.WRX sbb al,0x37
   14005efa0:	loopne 0x14005effa
   14005efa2:	xor    BYTE PTR [rcx+0x2d],dl
   14005efa5:	(bad)  
   14005efa6:	mov    ebp,0x4f9226ea
   14005efab:	or     ecx,DWORD PTR [rdx-0x4dc5d66e]
   14005efb1:	repz out 0x29,eax
   14005efb4:	ret    
   14005efb5:	xchg   ebp,eax
   14005efb6:	icebp  
   14005efb7:	movabs ds:0x6bb037625617da9,al
   14005efc0:	xlat   BYTE PTR ds:[rbx]
   14005efc1:	xchg   DWORD PTR [rcx],ebx
   14005efc3:	cld    
   14005efc4:	test   eax,0x574dc9af
   14005efc9:	test   BYTE PTR [rsi-0x67ab01a9],bl
   14005efcf:	mov    edx,0xb030f2e0
   14005efd4:	sti    
   14005efd5:	or     DWORD PTR [rsp+rbp*8-0x1d],edi
   14005efd9:	mov    esi,0x7edbc430
   14005efde:	clc    
   14005efdf:	fimul  DWORD PTR [rdi-0x24]
   14005efe2:	cli    
   14005efe3:	jae    0x14005efb0
   14005efe5:	lahf   
   14005efe6:	mov    dh,0xd8
   14005efe8:	enter  0xb9e3,0x7e
   14005efec:	pushf  
   14005efed:	add    al,0x72
   14005efef:	lock xor eax,DWORD PTR [rdi+0xc]
   14005eff3:	sbb    cl,bh
   14005eff5:	push   rsi
   14005eff6:	jle    0x14005effe
   14005eff8:	sub    DWORD PTR [rdi],ecx
   14005effa:	fiadd  DWORD PTR [rcx+0x4811e723]
   14005f000:	js     0x14005f063
   14005f002:	jg     0x14005ef89
   14005f004:	mov    al,0x88
   14005f006:	xor    eax,0x57e8a491
   14005f00b:	rol    DWORD PTR [rcx+0x3d],cl
   14005f00e:	sub    al,0xdf
   14005f010:	movsxd edx,DWORD PTR [rdi]
   14005f012:	add    dl,BYTE PTR [rcx+0x17]
   14005f015:	hlt    
   14005f016:	(bad)  
   14005f017:	rol    DWORD PTR [rcx],cl
   14005f019:	out    dx,al
   14005f01a:	cmp    BYTE PTR [rdx+0x2d7cfff3],ch
   14005f020:	xor    BYTE PTR [rsi],0x6d
   14005f023:	jge    0x14005f046
   14005f025:	rex.WRXB add BYTE PTR [r8-0x6c],r10b
   14005f029:	jne    0x14005f080
   14005f02b:	add    BYTE PTR [rbx+0x0],ch
   14005f02e:	pop    rbp
   14005f02f:	mov    WORD PTR [rax+0x6bc8fc17],cs
   14005f035:	mov    BYTE PTR [rcx+rcx*8],ah
   14005f038:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14005f039:	xchg   edi,eax
   14005f03a:	in     eax,0xb6
   14005f03c:	out    0x9c,al
   14005f03e:	in     eax,dx
   14005f03f:	sub    ebx,DWORD PTR [esi+ebp*2]
   14005f043:	lea    eax,[rdx]
   14005f045:	cs xchg edx,eax
   14005f047:	add    bl,ah
   14005f049:	rex.R mov sil,0xa7
   14005f04c:	cmp    eax,ebx
   14005f04e:	cmp    DWORD PTR [rdx-0x7ecea23],ecx
   14005f054:	adc    dl,BYTE PTR [rcx]
   14005f056:	jo     0x14005f0d4
   14005f058:	sahf   
   14005f059:	mov    DWORD PTR [rdx+0x79],edi
   14005f05c:	(bad)  
   14005f05d:	(bad)  
   14005f05e:	js     0x14005f0b0
   14005f060:	out    0xea,eax
   14005f062:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14005f063:	repnz mov bl,0x1d
   14005f066:	cld    
   14005f067:	ins    BYTE PTR es:[rdi],dx
   14005f068:	jrcxz  0x14005f026
   14005f06a:	adc    eax,DWORD PTR [rax+0x5a]
   14005f06d:	in     eax,dx
   14005f06e:	mov    ecx,0xa386dfc5
   14005f073:	ret    
   14005f074:	push   0xf
   14005f076:	(bad)  
   14005f077:	(bad)  
   14005f078:	leave  
   14005f079:	rex.RX (bad) 
   14005f07b:	and    al,0x50
   14005f07d:	mov    eax,DWORD PTR [rbp+0x48]
   14005f080:	hlt    
   14005f081:	test   eax,0x9875605
   14005f086:	or     DWORD PTR [rdi-0x7b600f65],0xc1561953
   14005f090:	push   rbx
   14005f091:	mov    DWORD PTR [rbp-0x2d],edx
   14005f094:	jrcxz  0x14005f10e
   14005f096:	imul   BYTE PTR fs:[rax+0x78]
   14005f09a:	jbe    0x14005f114
   14005f09c:	movsxd edi,DWORD PTR [rax]
   14005f09e:	cmp    bh,BYTE PTR [rcx]
   14005f0a0:	test   DWORD PTR [rdi+0x7e],eax
   14005f0a3:	stc    
   14005f0a4:	std    
   14005f0a5:	(bad)  
   14005f0a6:	cmp    ebx,edi
   14005f0a8:	int3   
   14005f0a9:	div    eax
   14005f0ab:	rex.WXB movabs r11,0x1b3cecfe171fd6e3
   14005f0b5:	repnz pushf 
   14005f0b7:	add    dl,dh
   14005f0b9:	jbe    0x14005f09a
   14005f0bb:	(bad)  
   14005f0bc:	or     rsp,QWORD PTR [rdi]
   14005f0bf:	mov    WORD PTR [rbx-0x7227ff59],es
   14005f0c5:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14005f0c6:	rol    BYTE PTR [rdi-0x13],0x28
   14005f0ca:	adc    ecx,DWORD PTR [rdi+0x3998968]
   14005f0d0:	jle    0x14005f063
   14005f0d2:	mov    dl,0x89
   14005f0d4:	sub    DWORD PTR [rdi-0x14ccecc4],esp
   14005f0da:	movsxd eax,edi
   14005f0dc:	(bad)  
   14005f0dd:	(bad)  
   14005f0de:	rex.WRB in eax,0xc4
   14005f0e1:	adc    al,BYTE PTR [rbx]
   14005f0e3:	(bad)  
   14005f0e4:	cmp    DWORD PTR [rdx],ebp
   14005f0e6:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14005f0e7:	lea    esi,[rsi+0x7c40800b]
   14005f0ed:	(bad)  
   14005f0ee:	and    BYTE PTR [rdi+0x46],cl
   14005f0f1:	jl     0x14005f11b
   14005f0f3:	call   0xebf7e189
   14005f0f8:	mov    bl,0x44
   14005f0fb:	fisttp WORD PTR [rax+0x135a4de9]
   14005f101:	int3   
   14005f102:	rex.WX lods al,BYTE PTR ds:[rsi]
   14005f104:	xchg   esi,eax
   14005f105:	or     cl,BYTE PTR [rdi-0x3143b94b]
   14005f10b:	jb     0x14005f15f
   14005f10d:	retf   
   14005f10e:	(bad)  
   14005f10f:	mov    ah,0x36
   14005f111:	(bad)  
   14005f112:	sbb    ecx,DWORD PTR [rdx]
   14005f114:	pop    rsp
   14005f115:	and    al,0x1
   14005f117:	push   rbp
   14005f118:	xchg   ebx,eax
   14005f119:	or     ebx,DWORD PTR [rdi-0x4c5c41c7]
   14005f11f:	(bad)  [rdx+0x5a]
   14005f122:	rex.W xlat BYTE PTR ds:[rbx]
   14005f124:	add    bh,BYTE PTR [rbx+rdx*2]
   14005f127:	jmp    0x14005f19d
   14005f129:	push   rdi
   14005f12a:	(bad)  
   14005f12b:	and    eax,0x350f3cdb
   14005f130:	mov    ecx,0x62ef59ba
   14005f135:	add    al,0x3f
   14005f137:	jmp    0x14005f1a6
   14005f139:	rex.WR add BYTE PTR [rax],r9b
   14005f13c:	jl     0x14005f1ac
   14005f13e:	out    dx,eax
   14005f13f:	sbb    eax,edi
   14005f141:	(bad)  
   14005f142:	loopne 0x14005f17c
   14005f144:	mov    ecx,0xc33c4794
   14005f149:	rcr    DWORD PTR [rdi-0x24],0xa3
   14005f14d:	xchg   esi,eax
   14005f14e:	stc    
   14005f14f:	js     0x14005f145
   14005f151:	jl     0x14005f0f1
   14005f153:	adc    BYTE PTR [rsi+rbp*4],cl
   14005f156:	push   rdi
   14005f157:	cdq    
   14005f158:	mov    al,cl
   14005f15a:	mov    eax,0x7c6cbfbd
   14005f15f:	addr32 js 0x14005f1dc
   14005f162:	xlat   BYTE PTR ds:[rbx]
   14005f163:	fidiv  WORD PTR [rax-0x18]
   14005f166:	repnz xlat BYTE PTR ds:[rbx]
   14005f168:	xchg   cl,dl
   14005f16a:	xchg   DWORD PTR [rdi-0x7080f472],edi
   14005f170:	(bad)  
   14005f171:	jmp    0x14005f102
   14005f173:	(bad)  
   14005f174:	jge    0x14005f15e
   14005f176:	mov    dh,0x5f
   14005f178:	pop    rsp
   14005f179:	std    
   14005f17a:	mov    ecx,0x47c0c7ea
   14005f17f:	jo     0x14005f122
   14005f181:	ins    BYTE PTR es:[rdi],dx
   14005f182:	jne    0x14005f179
   14005f184:	lahf   
   14005f185:	rol    DWORD PTR [rsi+0x5e],0xe
   14005f189:	cmp    dh,dl
   14005f18b:	(bad)  
   14005f18c:	nop
   14005f18d:	cli    
   14005f18e:	popf   
   14005f18f:	or     ch,0x10
   14005f192:	fst    DWORD PTR [rdx+rbx*4]
   14005f195:	rcl    BYTE PTR [rbx+rsi*8-0x5481ca78],0x26
   14005f19d:	push   rdx
   14005f19e:	and    DWORD PTR [rdx],edi
   14005f1a0:	pushf  
   14005f1a1:	mov    bl,0xc
   14005f1a3:	(bad)  
   14005f1a4:	fwait
   14005f1a5:	add    ah,ch
   14005f1a7:	mov    esp,0x7cf3281f
   14005f1ac:	jo     0x14005f1d0
   14005f1ae:	cwde   
   14005f1af:	movabs eax,ds:0x437c401dc037711d
   14005f1b8:	lock xchg ecx,eax
   14005f1ba:	jo     0x14005f1b3
   14005f1bc:	add    eax,0x85e143af
   14005f1c1:	(bad)  
   14005f1c2:	rex.WRB shl QWORD PTR [r15],0xd1
   14005f1c6:	rex.WX
   14005f1c7:	fidivr WORD PTR ds:[rax+0x6d]
   14005f1cb:	cwde   
   14005f1cc:	mov    eax,0x36b509b4
   14005f1d1:	mov    dh,0x80
   14005f1d4:	test   al,0x66
   14005f1d6:	or     ebp,DWORD PTR [rax-0x65fba626]
   14005f1dc:	jrcxz  0x14005f219
   14005f1de:	jp     0x14005f1b5
   14005f1e0:	lods   eax,DWORD PTR ds:[rsi]
   14005f1e1:	or     ebp,ecx
   14005f1e3:	pop    rdx
   14005f1e4:	and    BYTE PTR [rdi+0x6a],0x9d
   14005f1e8:	out    dx,al
   14005f1e9:	retf   0x64a0
   14005f1ec:	fwait
   14005f1ed:	out    0xc1,eax
   14005f1ef:	xor    al,0x57
   14005f1f1:	(bad)  
   14005f1f2:	or     eax,0xa7e0ac5d
   14005f1f7:	jno    0x14005f22f
   14005f1f9:	add    DWORD PTR [rbp+rdx*8+0x796c1b7e],esp
   14005f200:	(bad)  
   14005f201:	mov    gs,WORD PTR [rip+0xffffffffd13d4e38]        # 0x11143403f
   14005f207:	fwait
   14005f208:	mov    ecx,0x10e780bd
   14005f20d:	fdiv   QWORD PTR [rcx+0x3d]
   14005f210:	int    0xc4
   14005f212:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14005f213:	sbb    dl,cl
   14005f215:	and    bl,BYTE PTR [rsi+0x3cac2c9f]
   14005f21b:	jg     0x14005f28d
   14005f21d:	xor    BYTE PTR [rdx+0x3d15cca8],ah
   14005f223:	hlt    
   14005f224:	cld    
   14005f225:	jae    0x14005f208
   14005f227:	enter  0x3fc5,0x11
   14005f22b:	(bad)  
   14005f22c:	icebp  
   14005f22d:	xchg   ecx,eax
   14005f22e:	movsx  ebp,ch
   14005f231:	(bad)  
   14005f232:	mov    WORD PTR [rdi-0x703d0703],?
   14005f238:	ins    DWORD PTR es:[rdi],dx
   14005f239:	stc    
   14005f23a:	and    DWORD PTR [rsi],ebx
   14005f23c:	mov    bh,0xf8
   14005f23e:	jns    0x14005f252
   14005f240:	rex add BYTE PTR [rcx-0xdcf1d6a],0xa0
   14005f248:	xchg   ecx,eax
   14005f249:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14005f24a:	or     DWORD PTR [rcx+rdx*2+0x6af48f96],esp
   14005f251:	test   DWORD PTR [rsi],eax
   14005f253:	popf   
   14005f254:	push   rbp
   14005f255:	out    0x3,al
   14005f257:	and    ah,BYTE PTR [rsi-0x7a]
   14005f25a:	in     eax,0x1d
   14005f25c:	jle    0x14005f22a
   14005f25e:	cmp    al,0xc8
   14005f260:	sub    edx,ecx
   14005f262:	rex.WRX loop 0x14005f2ae
   14005f265:	(bad)  
   14005f266:	ja     0x14005f296
   14005f268:	adc    DWORD PTR ss:[rax],esp
   14005f26b:	jrcxz  0x14005f27b
   14005f26d:	shr    BYTE PTR [rsi+0x6feb7003],0x13
   14005f274:	add    BYTE PTR [rdx],al
   14005f276:	lahf   
   14005f277:	xor    BYTE PTR [rsi+0x21],ch
   14005f27a:	fisubr DWORD PTR [rcx]
   14005f27c:	or     bl,BYTE PTR [rdx]
   14005f27e:	sbb    ebp,ebp
   14005f280:	mov    WORD PTR [rdi-0xfa088ff],fs
   14005f286:	(bad)  
   14005f287:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14005f288:	(bad)  
   14005f289:	sbb    dl,0xa0
   14005f28c:	sub    DWORD PTR [rdx+riz*2+0x424e71fe],ebx
   14005f293:	add    DWORD PTR [rsi-0x16925688],0x58da1d61
   14005f29d:	mov    cs,WORD PTR [rbp-0x60b2024e]
   14005f2a3:	cmp    DWORD PTR [rsi+0x2bbb0e73],edi
   14005f2a9:	es lock and eax,0x3cf8e022
   14005f2b0:	adc    esi,ebp
   14005f2b2:	repnz (bad) 
   14005f2b4:	outs   dx,BYTE PTR ds:[rsi]
   14005f2b5:	lock movabs al,ds:0xacfc198be54dd5ce
   14005f2bf:	mov    edi,0x1effc11f
   14005f2c4:	in     al,0xb7
   14005f2c6:	adc    BYTE PTR [rcx],bh
   14005f2c8:	mov    ebp,0x14dae89
   14005f2cd:	nop
   14005f2ce:	jge    0x14005f312
   14005f2d0:	xchg   edx,eax
   14005f2d1:	rol    DWORD PTR [rdx],0xaa
   14005f2d4:	sub    cl,BYTE PTR [rbp-0x16e3e03c]
   14005f2da:	rex.WRX add BYTE PTR [rcx-0x2702dd68],r14b
   14005f2e1:	xchg   ecx,eax
   14005f2e2:	ret    
   14005f2e3:	loope  0x14005f29e
   14005f2e5:	xor    DWORD PTR [rsp+riz*8+0x13],edi
   14005f2e9:	(bad)  
   14005f2ea:	cld    
   14005f2eb:	loopne 0x14005f342
   14005f2ed:	call   QWORD PTR [rcx-0x784d61e9]
   14005f2f3:	jle    0x14005f2ef
   14005f2f5:	stc    
   14005f2f6:	(bad)  
   14005f2f7:	(bad)  
   14005f2f8:	rex.R ins BYTE PTR es:[rdi],dx
   14005f2fa:	rex.WXB iretq 
   14005f2fc:	sbb    al,0x3a
   14005f2fe:	loop   0x14005f284
   14005f300:	nop
   14005f301:	push   rsi
   14005f302:	jns    0x14005f308
   14005f304:	and    ah,BYTE PTR [rdi]
   14005f306:	add    cl,dl
   14005f308:	fdiv   st,st(7)
   14005f30a:	add    cl,cl
   14005f30c:	(bad)  
   14005f30d:	(bad)  
   14005f30e:	xchg   ebx,eax
   14005f30f:	add    esp,DWORD PTR [rdx+0x3c1382ce]
   14005f315:	fild   DWORD PTR [rcx]
   14005f317:	xor    bh,ah
   14005f319:	ror    DWORD PTR [rdx-0x6f663813],0x49
   14005f320:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14005f321:	ja     0x14005f303
   14005f323:	push   rcx
   14005f324:	shl    dh,cl
   14005f326:	mov    dl,0xcc
   14005f328:	rex.WRXB cmp r15,r15
   14005f32b:	(bad)  
   14005f32c:	mov    eax,0x9de403ae
   14005f331:	add    bl,ch
   14005f333:	and    eax,0x12343f8c
   14005f338:	ja     0x14005f33a
   14005f33a:	leave  
   14005f33b:	push   rsi
   14005f33c:	cmp    al,ch
   14005f33e:	mov    ch,0x2f
   14005f340:	cmp    al,0x52
   14005f342:	sbb    bl,BYTE PTR ds:[rbx+rbx*1+0x34]
   14005f347:	outs   dx,BYTE PTR ds:[rsi]
   14005f348:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14005f349:	xor    BYTE PTR es:[rbx],bh
   14005f34c:	cwde   
   14005f34d:	(bad)  
   14005f34e:	sub    al,0xd7
   14005f350:	push   rsp
   14005f351:	outs   dx,DWORD PTR ds:[rsi]
   14005f352:	and    esi,DWORD PTR [rax-0x6f]
   14005f355:	add    al,0x54
   14005f357:	lea    ebp,[rdi]
   14005f359:	jl     0x14005f341
   14005f35b:	clc    
   14005f35c:	mov    ds,WORD PTR [rsi+0x75]
   14005f35f:	loope  0x14005f3a3
   14005f361:	mov    edx,0x5a99e016
   14005f366:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14005f367:	mov    ebx,0xbf73a832
   14005f36c:	mov    eax,0x62e869ba
   14005f371:	(bad)  
   14005f372:	(bad)  
   14005f373:	fcmovnu st,st(7)
   14005f375:	sti    
   14005f376:	leave  
   14005f377:	ins    DWORD PTR es:[rdi],dx
   14005f378:	xlat   BYTE PTR ds:[rbx]
   14005f379:	cld    
   14005f37a:	(bad)  
   14005f37b:	(bad)  
   14005f37c:	xchg   ecx,eax
   14005f37d:	add    edi,DWORD PTR [rdi-0x1a1186a5]
   14005f383:	rex.X push rax
   14005f385:	imul   ecx,DWORD PTR [rbx+0x63],0x27
   14005f389:	cmp    eax,0x807a9e35
   14005f38e:	adc    BYTE PTR [rax+0x285058],0xfc
   14005f395:	lahf   
   14005f396:	(bad)
   14005f399:	out    0x8e,eax
   14005f39b:	test   QWORD PTR [rcx],r13
   14005f39e:	jl     0x14005f383
   14005f3a0:	jg     0x14005f386
   14005f3a2:	rex.RXB test DWORD PTR [r13-0x58f0e26f],0x89f97f0b
   14005f3ad:	mov    edi,0x5643eab4
   14005f3b2:	stos   DWORD PTR es:[rdi],eax
   14005f3b3:	ds loopne 0x14005f432
   14005f3b6:	dec    bh
   14005f3b8:	cmp    al,0xff
   14005f3ba:	std    
   14005f3bb:	(bad)  
   14005f3bc:	sahf   
   14005f3bd:	(bad)  
   14005f3be:	fadd   DWORD PTR [rcx+rax*1]
   14005f3c1:	(bad)
   14005f3c4:	pop    rsp
   14005f3c5:	popf   
   14005f3c6:	jns    0x14005f378
   14005f3c8:	ins    BYTE PTR es:[rdi],dx
   14005f3c9:	retf   0x7789
   14005f3cc:	rex.WR xchg rax,rax
   14005f3ce:	push   rcx
   14005f3cf:	and    bl,ah
   14005f3d1:	or     edi,ecx
   14005f3d3:	je     0x14005f36c
   14005f3d5:	fld    TBYTE PTR [rsi]
   14005f3d7:	and    eax,DWORD PTR [rdi]
   14005f3d9:	(bad)  
   14005f3da:	repnz cld 
   14005f3dc:	cmp    al,0x40
   14005f3de:	mov    ah,0x95
   14005f3e0:	adc    edx,DWORD PTR [rdx]
   14005f3e2:	(bad)  
   14005f3e3:	(bad)  
   14005f3e4:	(bad)  
   14005f3e5:	adc    edx,DWORD PTR [rbx]
   14005f3e7:	bnd jmp 0x14005f45a
   14005f3ea:	sub    eax,0xd06d52c0
   14005f3ef:	mov    eax,0x9061df51
   14005f3f4:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14005f3f5:	ror    edx,0x6c
   14005f3f8:	cdq    
   14005f3f9:	sbb    al,0x16
   14005f3fb:	push   rbx
   14005f3fc:	ds (bad) 
   14005f3fe:	movabs ds:0xe8f8d8cc1a1b9c53,al
   14005f407:	cmp    eax,0xf3be3afc
   14005f40c:	gs (bad) 
   14005f40e:	ins    DWORD PTR es:[rdi],dx
   14005f40f:	je     0x14005f465
   14005f411:	(bad)  
   14005f412:	(bad)  
   14005f413:	nop
   14005f414:	or     BYTE PTR [rbx],cl
   14005f416:	lock rex.WR (bad) 
   14005f419:	retf   
   14005f41a:	cmp    edi,DWORD PTR [rax-0x71e65c3f]
   14005f420:	lfs    ebx,FWORD PTR [rbx]
   14005f423:	(bad)  
   14005f424:	lahf   
   14005f425:	(bad)  
   14005f426:	in     al,0x98
   14005f428:	mov    ebx,0xbf77cefc
   14005f42d:	loope  0x14005f44a
   14005f42f:	paddusw mm6,mm6
   14005f432:	pop    rbx
   14005f433:	(bad)  
   14005f434:	int    0x4c
   14005f436:	rex.WRX cmp al,0x4f
   14005f439:	loop   0x14005f406
   14005f43b:	rex.WRB (bad) 
   14005f43d:	push   rsp
   14005f43e:	jns    0x14005f458
   14005f440:	or     BYTE PTR [rbp+0x8],0x22
   14005f444:	cmp    ch,dh
   14005f446:	cdq    
   14005f447:	xchg   edi,eax
   14005f448:	test   QWORD PTR [rax],rcx
   14005f44b:	xchg   ecx,eax
   14005f44c:	mov    dh,BYTE PTR [rax-0x1e420611]
   14005f452:	and    BYTE PTR [rdi+0x603778fe],dh
   14005f458:	sbb    BYTE PTR [rbx],dl
   14005f45a:	shl    al,0x91
   14005f45d:	jge    0x14005f4d5
   14005f45f:	fld    TBYTE PTR [rdi+0x571fe7ba]
   14005f465:	push   rax
   14005f466:	in     eax,dx
   14005f467:	add    dl,BYTE PTR [rax+0x27]
   14005f46a:	sbb    edx,DWORD PTR [rdi+0x97e3d83]
   14005f470:	cwde   
   14005f471:	jg     0x14005f41c
   14005f473:	(bad)  
   14005f474:	(bad)  
   14005f475:	pop    rbx
   14005f476:	fadd   QWORD PTR [rcx]
   14005f478:	(bad)  
   14005f479:	in     eax,dx
   14005f47a:	(bad)  
   14005f47b:	push   rdi
   14005f47c:	push   0xffffffffa934044d
   14005f481:	(bad)  
   14005f482:	cld    
   14005f483:	(bad)  [rsp+rbx*4+0x72ccbb3b]
   14005f48a:	shl    BYTE PTR [rbx],cl
   14005f48c:	(bad)  
   14005f48d:	ret    
   14005f48e:	ins    BYTE PTR es:[rdi],dx
   14005f48f:	xor    edi,edi
   14005f491:	push   rbx
   14005f492:	push   rdi
   14005f493:	retf   0x8759
   14005f496:	(bad)  
   14005f497:	(bad)  
   14005f498:	cmp    DWORD PTR [rcx],ebx
   14005f49a:	in     al,0x83
   14005f49c:	jbe    0x14005f4e0
   14005f49e:	enter  0x4dec,0xf0
   14005f4a2:	sbb    esi,edi
   14005f4a4:	(bad)  
   14005f4a6:	sbb    BYTE PTR [rsi+rbp*2],dh
   14005f4a9:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14005f4aa:	ror    BYTE PTR es:[rdi],1
   14005f4ad:	stos   BYTE PTR es:[rdi],al
   14005f4ae:	or     bl,dh
   14005f4b0:	mov    bh,0x84
   14005f4b2:	xor    ah,BYTE PTR [rbp+0x69]
   14005f4b5:	out    0xd9,al
   14005f4b7:	push   0x34
   14005f4b9:	sub    esp,DWORD PTR [rip+0x24b44850]        # 0x164ba3d0f
   14005f4bf:	and    BYTE PTR [rbx],dl
   14005f4c1:	shl    bl,0x34
   14005f4c4:	(bad)  
   14005f4c5:	cmp    edi,DWORD PTR [rdx]
   14005f4c7:	mov    ebx,0x25f02628
   14005f4cc:	and    ah,al
   14005f4ce:	clc    
   14005f4cf:	cmp    al,0x13
   14005f4d1:	cmc    
   14005f4d2:	repnz (bad) 
   14005f4d4:	outs   dx,BYTE PTR ds:[rsi]
   14005f4d5:	lock movabs al,ds:0xb4fc12dde54dd5ce
   14005f4df:	mov    esp,DWORD PTR [rbx-0x12]
   14005f4e2:	rex.WB sbb al,0x3f
   14005f4e5:	jp     0x14005f4e3
   14005f4e7:	out    dx,eax
   14005f4e8:	(bad)  
   14005f4e9:	jb     0x14005f4e6
   14005f4eb:	push   rdi
   14005f4ec:	call   FWORD PTR [rdi+0x6874dc77]
   14005f4f2:	div    esi
   14005f4f4:	scas   eax,DWORD PTR es:[rdi]
   14005f4f5:	ror    al,1
   14005f4f7:	push   rbx
   14005f4f8:	rex.WRX xchg rbp,rax
   14005f4fa:	ja     0x14005f49d
   14005f4fc:	ret    0x921
   14005f4ff:	mov    ah,0x97
   14005f501:	rex.WXB out 0x99,eax
   14005f504:	adc    BYTE PTR [rdx],bl
   14005f506:	mov    esp,0xbc8e654
   14005f50b:	jnp    0x14005f4d0
   14005f50d:	fimul  WORD PTR [rbp-0x51]
   14005f510:	or     BYTE PTR [rbp-0x5],bh
   14005f513:	test   ah,0xf3
   14005f516:	(bad)  
   14005f517:	(bad)  
   14005f518:	lahf   
   14005f519:	mov    dh,0xb
   14005f51b:	jg     0x14005f599
   14005f51d:	(bad)  
   14005f51e:	(bad)  
   14005f51f:	outs   dx,BYTE PTR ds:[rsi]
   14005f520:	cmc    
   14005f521:	jrcxz  0x14005f56d
   14005f523:	(bad)  
   14005f524:	push   rdi
   14005f525:	cmc    
   14005f526:	mov    ah,0xea
   14005f528:	movabs ds:0xb8ff57399036712c,eax
   14005f531:	add    esp,DWORD PTR [rax]
   14005f533:	(bad)  
   14005f534:	ja     0x14005f536
   14005f536:	mov    dh,0xfa
   14005f538:	xor    ch,BYTE PTR [rax]
   14005f53a:	shl    DWORD PTR [rdi+0x3c0e6578],0xc3
   14005f541:	ds pushw 0x448d
   14005f546:	pop    rdx
   14005f547:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14005f548:	out    0x9c,eax
   14005f54a:	rex.X mov DWORD PTR [rsi+0x1f83179b],ebx
   14005f551:	sbb    r8b,cl
   14005f554:	int3   
   14005f555:	add    bh,BYTE PTR [rsi]
   14005f557:	rex.WRX
   14005f558:	ss sbb DWORD PTR ss:[rcx+rcx*4-0x735fa0d9],esp
   14005f561:	jns    0x14005f517
   14005f563:	in     eax,dx
   14005f564:	xchg   edx,eax
   14005f565:	ret    
   14005f566:	mov    ebx,0x6a8034ec
   14005f56b:	movsxd ebx,DWORD PTR [rdx+0x68]
   14005f56e:	nop
   14005f56f:	cmp    DWORD PTR [rsi+0x978e88d],ebx
   14005f575:	nop
   14005f576:	(bad)  
   14005f577:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14005f578:	jle    0x14005f5ce
   14005f57a:	sub    eax,0x1ad017a0
   14005f57f:	xor    eax,0x8f744055
   14005f584:	mov    cl,0x3d
   14005f586:	int    0xc1
   14005f588:	add    BYTE PTR cs:[rbx+0x225f02ee],ch
   14005f58f:	add    dl,BYTE PTR [rdx+0x267805ae]
   14005f595:	(bad)  
   14005f596:	in     eax,0x1d
   14005f598:	fsubr  st(0),st
   14005f59a:	shl    DWORD PTR [rdi+rax*8+0x7],1
   14005f59e:	fimul  DWORD PTR [rbp-0x3f]
   14005f5a1:	iret   
   14005f5a2:	(bad)  
   14005f5a3:	jb     0x14005f60d
   14005f5a5:	xor    bh,ch
   14005f5a7:	adc    bh,al
   14005f5a9:	(bad)  
   14005f5aa:	sbb    al,0x78
   14005f5ac:	out    0x87,al
   14005f5ae:	jnp    0x14005f56f
   14005f5b0:	hlt    
   14005f5b1:	out    dx,eax
   14005f5b2:	(bad)  
   14005f5b3:	mov    ebx,0xdaff6df7
   14005f5b8:	(bad)  
   14005f5b9:	jg     0x14005f626
   14005f5bb:	jbe    0x14005f623
   14005f5bd:	sbb    bh,BYTE PTR [rdi+0x53]
   14005f5c0:	jmp    0x14005f616
   14005f5c2:	push   rdx
   14005f5c3:	mov    al,BYTE PTR [rdx]
   14005f5c5:	mov    ?,eax
   14005f5c7:	or     al,0x66
   14005f5c9:	xor    eax,0xa9091916
   14005f5ce:	jp     0x14005f5f2
   14005f5d0:	retf   0x7099
   14005f5d3:	(bad)  
   14005f5d4:	int3   
   14005f5d5:	jns    0x14005f626
   14005f5d7:	loopne 0x14005f652
   14005f5d9:	jmp    FWORD PTR [rsi-0x24]
   14005f5dc:	cli    
   14005f5dd:	jrcxz  0x14005f626
   14005f5df:	rex.X ins DWORD PTR es:[rdi],dx
   14005f5e1:	in     eax,0x7f
   14005f5e3:	(bad)  
   14005f5e4:	cmp    eax,DWORD PTR [rax]
   14005f5e6:	cld    
   14005f5e7:	jne    0x14005f5c8
   14005f5e9:	and    DWORD PTR [rdi-0x31],edi
   14005f5ec:	(bad)  
   14005f5ed:	gs jrcxz 0x14005f634
   14005f5f0:	nop
   14005f5f1:	add    bh,BYTE PTR [rbx]
   14005f5f3:	loope  0x14005f673
   14005f5f5:	cmc    
   14005f5f6:	out    0xca,eax
   14005f5f8:	lahf   
   14005f5f9:	scas   eax,DWORD PTR es:[rdi]
   14005f5fa:	adc    esi,eax
   14005f5fc:	retf   0xeda7
   14005f5ff:	add    BYTE PTR [rax],bl
   14005f601:	cld    
   14005f602:	mov    ch,0xc3
   14005f604:	or     ah,BYTE PTR cs:[rsi]
   14005f607:	mov    ebx,0x98f389bd
   14005f60c:	xchg   edi,eax
   14005f60d:	or     eax,0xe6dcf2ad
   14005f612:	pop    rdx
   14005f613:	sahf   
   14005f614:	ja     0x14005f62f
   14005f616:	sbb    eax,0xad900177
   14005f61b:	out    dx,eax
   14005f61c:	add    al,bl
   14005f61e:	xor    DWORD PTR [rdi-0x28],ebp
   14005f621:	sub    DWORD PTR [rdi+0x24],0x5a
   14005f625:	jb     0x14005f5aa
   14005f627:	test   al,0x31
   14005f629:	enter  0x3cea,0x57
   14005f62d:	test   BYTE PTR [rbp+riz*4+0x58e6a47e],ch
   14005f634:	rex.XB (bad) 
   14005f636:	push   rsp
   14005f637:	add    edx,esp
   14005f639:	xchg   esi,eax
   14005f63a:	and    esi,0xab002ef8
   14005f640:	inc    BYTE PTR [rdi+rbx*2]
   14005f643:	and    al,BYTE PTR [rdx]
   14005f645:	sub    al,bh
   14005f647:	mov    DWORD PTR [rax+riz*1],esp
   14005f64a:	repnz or al,0xf5
   14005f64d:	xor    al,0x7
   14005f64f:	(bad)  
   14005f650:	js     0x14005f67a
   14005f652:	loop   0x14005f63e
   14005f654:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14005f655:	(bad)  
   14005f656:	outs   dx,BYTE PTR ds:[rsi]
   14005f657:	or     edi,DWORD PTR [rsi-0x26]
   14005f65a:	xchg   esp,eax
   14005f65b:	(bad)  
   14005f65c:	add    dl,al
   14005f65e:	(bad)  
   14005f65f:	jno    0x14005f6dd
   14005f661:	sbb    eax,0x7ff733c7
   14005f666:	clc    
   14005f667:	out    0xbb,al
   14005f669:	out    dx,eax
   14005f66a:	stc    
   14005f66b:	sar    bh,0x76
   14005f66e:	rcl    ecx,cl
   14005f670:	add    edi,DWORD PTR [rax-0x56d58ae6]
   14005f676:	repnz mov ah,0x95
   14005f679:	mov    dh,0x95
   14005f67b:	mov    ebp,0x28210453
   14005f680:	(bad)
   14005f683:	or     al,0xee
   14005f685:	or     DWORD PTR [rbx-0x260ffc88],esi
   14005f68b:	adc    DWORD PTR [rbx-0x1517271f],0x30
   14005f692:	mov    WORD PTR [rdi-0x40b20f7c],cs
   14005f698:	adc    DWORD PTR [rbp+rsi*8+0x1f],ebx
   14005f69c:	(bad)  
   14005f69d:	xor    eax,DWORD PTR [rcx]
   14005f69f:	xor    eax,esp
   14005f6a1:	rol    DWORD PTR [rbp+0x3d],cl
   14005f6a4:	enter  0xa033,0x33
   14005f6a8:	lea    edi,[rcx]
   14005f6aa:	sbb    eax,esi
   14005f6ac:	xor    DWORD PTR [rax-0x4b],0xfffffffa
   14005f6b0:	(bad)  
   14005f6b1:	pop    rbp
   14005f6b2:	rex
   14005f6b3:	ds sbb eax,0x1ef05bc8
   14005f6b9:	lods   al,BYTE PTR ds:[rsi]
   14005f6ba:	int3   
   14005f6bb:	mov    dh,0xf2
   14005f6bd:	movabs ds:0xf8584e25a9067300,eax
   14005f6c6:	(bad)  
   14005f6c7:	rex.WRB (bad) 
   14005f6c9:	nop
   14005f6ca:	loope  0x14005f710
   14005f6cc:	mov    dl,BYTE PTR [rsi+rcx*8+0x751cb9bf]
   14005f6d3:	and    eax,0x6bf3ba98
   14005f6d8:	sar    DWORD PTR [rcx+0x2759cb6e],0xc4
   14005f6df:	repnz stc 
   14005f6e1:	mov    edi,0x4edba8c1
   14005f6e6:	add    ebp,DWORD PTR [rdx-0x52f9656f]
   14005f6ec:	sbb    esi,DWORD PTR [rbp+rcx*1+0x5e]
   14005f6f0:	or     ah,BYTE PTR gs:[rbp+0x16a1c396]
   14005f6f7:	test   eax,0x2ac402d9
   14005f6fc:	add    ecx,ebp
   14005f6fe:	icebp  
   14005f6ff:	pop    rbp
   14005f700:	add    BYTE PTR [rsi-0x6ea17422],ah
   14005f706:	mov    BYTE PTR [rax+0x48b80ba4],al
   14005f70c:	add    ah,BYTE PTR [rdx]
   14005f70e:	iret   
   14005f70f:	push   rax
   14005f710:	rex.WRXB jae 0x14005f783
   14005f713:	add    edi,0x6a
   14005f716:	sbb    al,0x1f
   14005f718:	push   0x1b3f0637
   14005f71d:	(bad)  
   14005f71e:	mov    cl,0xe6
   14005f720:	adc    ebx,edi
   14005f722:	mov    ecx,0xbdc7107d
   14005f727:	cmp    edi,DWORD PTR [rdi+0x3f3b77fb]
   14005f72d:	ja     0x14005f702
   14005f72f:	rex.WRXB (bad) 
   14005f731:	sti    
   14005f732:	(bad)  
   14005f733:	jg     0x14005f7b1
   14005f735:	call   FWORD PTR [rdi+0x79]
   14005f738:	adc    DWORD PTR [rbx],0x1a3c1986
   14005f73e:	stc    
   14005f73f:	scas   al,BYTE PTR es:[rdi]
   14005f740:	xchg   esp,eax
   14005f741:	cmc    
   14005f742:	rex.R out 0x39,al
   14005f745:	cmp    al,BYTE PTR [rcx-0x39]
   14005f748:	fwait
   14005f749:	ret    
   14005f74a:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14005f74b:	shl    DWORD PTR [rsi-0x13],0x7d
   14005f74f:	sub    DWORD PTR [rax*8-0x1049fea1],ebx
   14005f756:	sti    
   14005f757:	cmp    eax,0xc11840fe
   14005f75c:	fcomip st,st(6)
   14005f75e:	sbb    edi,DWORD PTR [rcx]
   14005f760:	xchg   BYTE PTR [rdi],bh
   14005f762:	add    al,dl
   14005f764:	(bad)  
   14005f765:	std    
   14005f766:	and    BYTE PTR [rsi+0x7c0af2b7],bl
   14005f76c:	shl    dl,1
   14005f76e:	jbe    0x14005f7aa
   14005f770:	repz loop 0x14005f73d
   14005f773:	(bad)  
   14005f774:	push   rdi
   14005f775:	jg     0x14005f764
   14005f777:	add    dl,BYTE PTR [rax+0x51]
   14005f77a:	mov    ch,0xf2
   14005f77c:	jnp    0x14005f7b6
   14005f77e:	(bad)  
   14005f77f:	mov    edi,0x3e4da74c
   14005f784:	cdq    
   14005f785:	jge    0x14005f710
   14005f787:	loopne 0x14005f7ea
   14005f789:	(bad)  
   14005f78a:	sbb    BYTE PTR [r9+r13*8],dil
   14005f78e:	and    BYTE PTR [rdi+rbp*1-0x59],cl
   14005f792:	add    DWORD PTR [rcx],0x1f
   14005f795:	(bad)  
   14005f796:	or     al,0x2
   14005f798:	push   rdx
   14005f799:	cmp    ah,BYTE PTR [rip+0x228149b0]        # 0x16287414f
   14005f79f:	nop
   14005f7a0:	int    0xa7
   14005f7a2:	add    DWORD PTR [rdi+rbx*8],edx
   14005f7a5:	js     0x14005f79b
   14005f7a7:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14005f7a8:	jo     0x14005f77f
   14005f7aa:	(bad)  
   14005f7ab:	(bad)  
   14005f7ac:	add    BYTE PTR [rcx],ah
   14005f7ae:	xor    eax,0x601b9906
   14005f7b3:	add    al,BYTE PTR [rip+0xffffffff97c402a4]        # 0xd7c9fa5d
   14005f7b9:	cli    
   14005f7ba:	rol    esi,0xe7
   14005f7bd:	in     al,0xdb
   14005f7bf:	xchg   edi,eax
   14005f7c0:	push   0xffffffffbe39a045
   14005f7c5:	movabs ds:0x45640444be055d57,eax
   14005f7ce:	repz repz rex.WR (bad) 
   14005f7d2:	retf   
   14005f7d3:	cmp    edi,DWORD PTR [rax+0x573a83c1]
   14005f7d9:	(bad)  
   14005f7da:	xchg   ebp,eax
   14005f7db:	ja     0x14005f848
   14005f7dd:	lock mov bl,0xc1
   14005f7e0:	cmc    
   14005f7e1:	or     DWORD PTR [rax],esp
   14005f7e3:	cmp    DWORD PTR [rbx],esp
   14005f7e5:	in     al,dx
   14005f7e6:	add    eax,esi
   14005f7e8:	jne    0x14005f806
   14005f7ea:	(bad)  
   14005f7eb:	jle    0x14005f7da
   14005f7ed:	(bad)  
   14005f7ee:	(bad)  
   14005f7ef:	repz mov edi,0x840bf93a
   14005f7f5:	xchg   ebp,eax
   14005f7f6:	retf   
   14005f7f7:	mov    bl,0xc2
   14005f7f9:	sbb    ah,bl
   14005f7fb:	(bad)  
   14005f7fc:	sbb    BYTE PTR [rcx],dl
   14005f7fe:	movabs ds:0xf15c2cc07c849826,al
   14005f807:	(bad)  
   14005f809:	int3   
   14005f80a:	(bad)  
   14005f80b:	jo     0x14005f875
   14005f80d:	rcl    DWORD PTR [rbp+0x71fa2ec1],cl
   14005f813:	cmc    
   14005f814:	(bad)  
   14005f815:	(bad)  
   14005f816:	mov    esi,0x7df0a646
   14005f81b:	(bad)  
   14005f81c:	fldenv [rbx+0x69]
   14005f81f:	sub    ecx,edi
   14005f821:	xchg   ebp,eax
   14005f822:	popf   
   14005f823:	xchg   ebx,eax
   14005f824:	rex pushf 
   14005f826:	or     BYTE PTR [rax],bl
   14005f828:	cmp    al,0x16
   14005f82a:	hlt    
   14005f82b:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14005f82c:	loope  0x14005f84e
   14005f82e:	(bad)  
   14005f82f:	sbb    BYTE PTR [rdi],0x80
   14005f832:	fidivr WORD PTR [rbp+rsi*8-0x21]
   14005f836:	jbe    0x14005f83a
   14005f838:	movabs al,ds:0xbc21052f82c00ed9
   14005f841:	shl    BYTE PTR [rax-0xc],0xbb
   14005f845:	add    BYTE PTR [rcx+0x660a3d03],bl
   14005f84b:	call   0xd15ffd05
   14005f850:	(bad)  
   14005f851:	push   rsp
   14005f852:	sbb    ecx,edi
   14005f854:	jbe    0x14005f806
   14005f856:	xor    cl,ah
   14005f858:	cwde   
   14005f859:	xor    ecx,DWORD PTR [rbx+0x511b0f41]
   14005f85f:	pop    rdi
   14005f860:	ds mov esi,es
   14005f863:	jmp    0x14005f866
   14005f865:	adc    BYTE PTR [rsi-0x79],ah
   14005f868:	(bad)
   14005f86c:	loopne 0x14005f8dd
   14005f86e:	in     al,0x69
   14005f870:	rex movsxd edx,DWORD PTR [rax+0x6b2007d5]
   14005f877:	rex.WRX xor al,0x66
   14005f87a:	cmp    BYTE PTR [rax],bh
   14005f87c:	(bad)  
   14005f87d:	xchg   edi,eax
   14005f87e:	ret    
   14005f87f:	(bad)  
   14005f880:	int    0xb2
   14005f882:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14005f883:	(bad)  [rdi]
   14005f885:	sbb    ebx,DWORD PTR [rdx-0x5b]
   14005f888:	and    dl,al
   14005f88a:	sbb    al,0xdf
   14005f88c:	shr    ecx,1
   14005f88e:	(bad)  
   14005f88f:	cwde   
   14005f890:	call   0x1106cffa5
   14005f895:	repnz add eax,0x5465678
   14005f89b:	and    ebp,ebp
   14005f89d:	loopne 0x14005f8a5
   14005f89f:	(bad)  
   14005f8a0:	ins    BYTE PTR es:[rdi],dx
   14005f8a1:	mov    DWORD PTR [rdi],0xcfc1cdda
   14005f8a7:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14005f8a8:	jae    0x14005f856
   14005f8aa:	int    0x97
   14005f8ac:	mov    cl,0xf8
   14005f8af:	(bad)  
   14005f8b0:	mov    ss,WORD PTR [rbx-0x46]
   14005f8b3:	rex push 0x9f7906e
   14005f8b9:	in     al,0xa3
   14005f8bb:	jo     0x14005f91e
   14005f8bd:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14005f8be:	rex.WXB
   14005f8bf:	cs fsubp st(6),st
   14005f8c2:	(bad)  [rbx+0x78384763]
   14005f8c8:	jmp    0x10ec6bc78
   14005f8cd:	mov    ebx,0x840f13f0
   14005f8d3:	loope  0x14005f872
   14005f8d5:	(bad)  
   14005f8d6:	or     al,0xa3
   14005f8d8:	rex.RXB mul r11d
   14005f8db:	pop    rbx
   14005f8dc:	add    ebp,edx
   14005f8de:	sub    eax,0x94620b3f
   14005f8e3:	stos   DWORD PTR es:[rdi],eax
   14005f8e4:	push   rsi
   14005f8e5:	jp     0x14005f8a9
   14005f8e7:	stc    
   14005f8e8:	mov    BYTE PTR [rbx],ch
   14005f8ea:	jle    0x14005f8ea
   14005f8ec:	or     eax,eax
   14005f8ee:	cmp    DWORD PTR [rdi-0x4df3ff95],esi
   14005f8f4:	adc    al,0xf0
   14005f8f6:	mov    dh,0x12
   14005f8f8:	(bad)  
   14005f8f9:	cmp    BYTE PTR [rsi-0x3],ch
   14005f8fc:	and    ecx,edi
   14005f8fe:	add    bl,BYTE PTR [rsi]
   14005f900:	xchg   esi,eax
   14005f901:	jne    0x14005f94f
   14005f903:	(bad)  
   14005f904:	(bad)  
   14005f905:	mov    ?,esp
   14005f907:	rex.WR movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14005f909:	sbb    al,0xe
   14005f90b:	rex.WRB (bad) 
   14005f90d:	(bad)  
   14005f90e:	adc    esp,esp
   14005f910:	push   rsi
   14005f911:	rex.WRXB sahf 
   14005f913:	jl     0x14005f967
   14005f915:	fnsave [rcx+0x2]
   14005f918:	mov    BYTE PTR [rbp+0x38034fe1],bl
   14005f91e:	mov    DWORD PTR [rbp-0x3b],ebp
   14005f921:	pop    rcx
   14005f922:	fmul   DWORD PTR [rax]
   14005f924:	rex.WRX jns 0x14005f8d1
   14005f927:	in     al,0x6
   14005f929:	cwde   
   14005f92a:	rex add DWORD PTR [rdx],edx
   14005f92d:	and    esp,DWORD PTR [rbp+0x39]
   14005f930:	sbb    al,0x6a
   14005f932:	push   rax
   14005f933:	sbb    eax,0xb5cd0228
   14005f938:	(bad)  
   14005f93a:	jmp    0xd7c69231
   14005f93f:	mov    BYTE PTR [rax-0x2bb30c1d],al
   14005f945:	retf   
   14005f946:	cmp    edi,DWORD PTR [rax+0x573a83c1]
   14005f94c:	(bad)  
   14005f94d:	xchg   ebp,eax
   14005f94e:	ja     0x14005f9cb
   14005f950:	lock rol esi,cl
   14005f953:	test   DWORD PTR [rsi],esp
   14005f955:	add    dl,dh
   14005f957:	cdq    
   14005f958:	rex.WRX inc BYTE PTR [rdx]
   14005f95b:	movabs eax,ds:0x822e835347c00f3c
   14005f964:	push   rbp
   14005f965:	(bad)  
   14005f966:	xchg   ebp,eax
   14005f967:	jg     0x14005f938
   14005f969:	mov    gs,ebp
   14005f96b:	loope  0x14005f92d
   14005f96d:	xchg   esi,eax
   14005f96e:	lods   eax,DWORD PTR ds:[rsi]
   14005f96f:	(bad)  
   14005f970:	(bad)  
   14005f971:	iret   
   14005f972:	neg    BYTE PTR [rax]
   14005f974:	cld    
   14005f975:	js     0x14005f94b
   14005f977:	ja     0x14005f9ed
   14005f979:	(bad)  
   14005f97a:	lahf   
   14005f97b:	(bad)  
   14005f97c:	sti    
   14005f97d:	cmc    
   14005f97e:	xor    BYTE PTR [rdi],cl
   14005f980:	mov    bl,BYTE PTR [rdx-0x40]
   14005f983:	movabs ds:0x19cc037797b8be64,eax
   14005f98c:	hlt    
   14005f98d:	stc    
   14005f98e:	loopne 0x14005f9de
   14005f990:	movabs eax,ds:0x39f400e6b2b0049a
   14005f999:	xor    DWORD PTR [rcx],0x1d
   14005f99c:	(bad)  
   14005f99d:	shl    BYTE PTR [rbp+0x4b30f999],0x4f
   14005f9a4:	loopne 0x14005f92d
   14005f9a6:	repnz hlt 
   14005f9a8:	outs   dx,BYTE PTR ds:[rsi]
   14005f9a9:	cmp    ch,ah
   14005f9ab:	xor    al,0x20
   14005f9ad:	jmp    0xf269ef3a
   14005f9b2:	and    DWORD PTR [rcx+0x71],0xa26c9047
   14005f9b9:	cmp    BYTE PTR [rsp+rdi*8+0x69],ah
   14005f9bd:	ror    BYTE PTR [rdx],0xbc
   14005f9c0:	push   QWORD PTR [rax-0x23]
   14005f9c3:	or     ecx,DWORD PTR [rdi+0x3eb0aa6]
   14005f9c9:	nop
   14005f9ca:	and    r11,QWORD PTR fs:[r14+r9*1-0x6d2d99f9]
   14005f9d3:	int3   
   14005f9d4:	gs je  0x14005fa49
   14005f9d7:	xor    DWORD PTR [rip+0xfffffffff8d9b5d9],0x9002e789        # 0x138dfafba
   14005f9e1:	scas   al,BYTE PTR es:[rdi]
   14005f9e2:	mov    cs,WORD PTR [rcx]
   14005f9e4:	mov    dl,0x12
   14005f9e6:	(bad)  
   14005f9e7:	jo     0x14005fa65
   14005f9e9:	sahf   
   14005f9ea:	mov    DWORD PTR [rdx+0x79],edi
   14005f9ed:	(bad)  
   14005f9ee:	(bad)  
   14005f9ef:	js     0x14005fa41
   14005f9f1:	out    0xea,eax
   14005f9f3:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14005f9f4:	repnz movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14005f9f6:	adc    ah,bh
   14005f9f8:	mov    ah,0x99
   14005f9fa:	ret    
   14005f9fb:	repz rex.R ror BYTE PTR [rcx+0x5e],cl
   14005fa00:	and    BYTE PTR [rbx+riz*1+0x3d],cl
   14005fa04:	imul   ebp,DWORD PTR [rsi+0x99e637a],0x1
   14005fa0b:	sub    edi,DWORD PTR [rdi]
   14005fa0d:	cs clc 
   14005fa0f:	in     eax,dx
   14005fa10:	jle    0x14005f9f8
   14005fa12:	fnstenv [rax+0x70]
   14005fa15:	retf   
   14005fa16:	jne    0x14005fa0e
   14005fa18:	imul   ebp,DWORD PTR [rdi+0x69f027a1],0x91ea7af
   14005fa22:	movabs ds:0xfd57e9bc5186f787,eax
   14005fa2b:	pop    rcx
   14005fa2c:	scas   eax,DWORD PTR es:[rdi]
   14005fa2d:	(bad)  
   14005fa2e:	(bad)  
   14005fa2f:	lahf   
   14005fa30:	(bad)  
   14005fa31:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14005fa32:	outs   dx,DWORD PTR ds:[rsi]
   14005fa33:	add    al,0x3f
   14005fa35:	mov    edx,0x3b7fdb80
   14005fa3a:	add    eax,0xba064c0
   14005fa3f:	or     DWORD PTR [rdx+rsi*2],0x89bb7edb
   14005fa46:	and    cl,dl
   14005fa48:	scas   rax,QWORD PTR es:[rdi]
   14005fa4a:	add    dl,BYTE PTR [rip+0x73bb7b46]        # 0x1b3c17596
   14005fa50:	pop    rbx
   14005fa51:	jb     0x14005fa11
   14005fa53:	adc    BYTE PTR [rdi+0x194e2c32],cl
   14005fa59:	jg     0x14005f9ff
   14005fa5b:	leave  
   14005fa5c:	and    dh,dl
   14005fa5e:	(bad)
   14005fa62:	mov    BYTE PTR [rcx+0x34e9044d],bh
   14005fa68:	add    BYTE PTR [rbx+rbp*8-0x68],ah
   14005fa6c:	mov    eax,0x1a7481b
   14005fa71:	(bad)  
   14005fa72:	sub    dh,ch
   14005fa74:	cmp    al,0xa0
   14005fa76:	rcr    DWORD PTR [rcx+0x33638aac],1
   14005fa7c:	(bad)  
   14005fa7d:	mov    esp,0xfe1cb815
   14005fa82:	mov    ecx,0x656da2e6
   14005fa87:	movabs al,ds:0xd02621fa60aca0f9
   14005fa90:	rex.R (bad) 
   14005fa92:	jo     0x14005fb10
   14005fa94:	sahf   
   14005fa95:	mov    DWORD PTR [rdx+0x79],edi
   14005fa98:	(bad)  
   14005fa99:	(bad)  
   14005fa9a:	js     0x14005faec
   14005fa9c:	mov    bh,0x44
   14005fa9e:	sbb    DWORD PTR [rdi+0x9d1388e],0xffffff80
   14005faa5:	mov    dl,0x27
   14005faa7:	ja     0x14005fa2a
   14005faa9:	mov    al,0xea
   14005faab:	add    eax,0xe43f4596
   14005fab0:	rex.W add dl,spl
   14005fab3:	jns    0x14005fa3d
   14005fab5:	xchg   edx,eax
   14005fab6:	jmp    0x137670e5e
   14005fabb:	(bad)  
   14005fabc:	mov    esp,0x2bd173e0
   14005fac1:	ins    DWORD PTR es:[rdi],dx
   14005fac2:	in     eax,0x1f
   14005fac4:	jp     0x14005fab8
   14005fac6:	movabs eax,ds:0x41ec0ec6fd278c30
   14005facf:	lock (bad) 
   14005fad1:	rex.X
   14005fad2:	lock (bad) 
   14005fad4:	(bad)  
   14005fad6:	in     al,0x80
   14005fad8:	(bad)  
   14005fad9:	ja     0x14005fadc
   14005fadb:	imul   eax,DWORD PTR [rdx-0x80],0xff2bcda
   14005fae2:	cli    
   14005fae3:	(bad)  
   14005fae4:	ffreep st(3)
   14005fae6:	or     al,0x30
   14005fae8:	lods   al,BYTE PTR ds:[rsi]
   14005fae9:	mov    edx,0x76b100f8
   14005faee:	add    DWORD PTR [rbp+0x10],edx
   14005faf1:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14005faf2:	in     eax,dx
   14005faf3:	(bad)  
   14005faf4:	cmp    eax,0xc154ce2
   14005faf9:	pop    rdx
   14005fafa:	adc    eax,edx
   14005fafc:	adc    BYTE PTR [rbx],bh
   14005fafe:	outs   dx,BYTE PTR ds:[rsi]
   14005faff:	xor    bh,BYTE PTR [rip+0x4b6fdb71]        # 0x18b75d676
   14005fb05:	mov    ebx,0x69da8e9
   14005fb0a:	and    dl,bl
   14005fb0c:	sub    eax,0x227399f8
   14005fb11:	(bad)  
   14005fb12:	push   rdx
   14005fb13:	pop    rsi
   14005fb14:	or     ecx,eax
   14005fb16:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14005fb17:	add    ch,BYTE PTR [rbx+rdx*8+0x2b]
   14005fb1b:	(bad)  
   14005fb1d:	mov    DWORD PTR [rdi+0x2],esp
   14005fb20:	pop    rsi
   14005fb21:	mov    dl,ch
   14005fb23:	imul   ebp,DWORD PTR [rdx+rcx*1],0xaac801b0
   14005fb2a:	xchg   esi,eax
   14005fb2b:	jge    0x14005fb57
   14005fb2d:	add    ch,BYTE PTR [rbp+0x7b6e7f6c]
   14005fb33:	in     eax,0x7
   14005fb35:	lock and eax,0x2d892022
   14005fb3b:	shl    BYTE PTR [rbx],0x51
   14005fb3e:	(bad)  
   14005fb3f:	out    dx,eax
   14005fb40:	loopne 0x14005fb48
   14005fb42:	pminsw mm1,QWORD PTR [rdx]
   14005fb45:	fwait
   14005fb46:	cmp    BYTE PTR [rsp+rdi*4-0x44],dh
   14005fb4a:	xor    DWORD PTR [rbx+0x2c8be481],0xffffffa0
   14005fb51:	sbb    DWORD PTR [rbp+0x24],0x39
   14005fb55:	mov    esi,0x3ccf0e81
   14005fb5a:	xchg   ecx,eax
   14005fb5b:	and    ah,BYTE PTR [rax+0x2aecd7f6]
   14005fb61:	jne    0x14005fb0c
   14005fb63:	ror    BYTE PTR [rcx+0x4d],1
   14005fb66:	add    BYTE PTR [rcx-0x7e81d8f7],bh
   14005fb6c:	rol    BYTE PTR [rdi-0x74],1
   14005fb6f:	sub    al,0xcb
   14005fb71:	push   0x48
   14005fb73:	mov    bh,dh
   14005fb75:	stc    
   14005fb76:	lahf   
   14005fb77:	jge    0x14005fb77
   14005fb79:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14005fb7a:	jo     0x14005fbf4
   14005fb7c:	std    
   14005fb7d:	out    0x30,al
   14005fb7f:	mov    al,0xb
   14005fb81:	(bad)  
   14005fb82:	cmc    
   14005fb83:	js     0x14005fb77
   14005fb85:	jnp    0x14005fbe8
   14005fb87:	call   0x128c98335
   14005fb8c:	(bad)  
   14005fb8d:	pop    rbp
   14005fb8e:	or     BYTE PTR [rsi-0x4],bh
   14005fb91:	jmp    0xc7f75a05
   14005fb96:	push   0xffffffffe11fce75
   14005fb9b:	mov    r15,QWORD PTR [rcx-0x46]
   14005fb9f:	loopne 0x14005fba8
   14005fba1:	mov    ecx,0x9cf5fc1c
   14005fba6:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14005fba7:	add    BYTE PTR [rsi],dl
   14005fba9:	in     al,dx
   14005fbaa:	(bad)  
   14005fbab:	cld    
   14005fbac:	(bad)  
   14005fbad:	rex.R movabs al,ds:0x3466699328814be0
   14005fbb7:	xor    DWORD PTR [rcx],eax
   14005fbb9:	and    al,0x30
   14005fbbb:	xchg   ecx,eax
   14005fbbc:	js     0x14005fb40
   14005fbbe:	mov    DWORD PTR [rdx-0x2e76bd82],esp
   14005fbc4:	ins    DWORD PTR es:[rdi],dx
   14005fbc5:	mov    ah,0x38
   14005fbc7:	icebp  
   14005fbc8:	and    al,0x9b
   14005fbca:	push   rax
   14005fbcb:	(bad)  
   14005fbcc:	scas   eax,DWORD PTR es:[rdi]
   14005fbcd:	rex.RXB xchg r8d,eax
   14005fbcf:	xchg   esi,eax
   14005fbd0:	out    dx,eax
   14005fbd1:	(bad)  
   14005fbd2:	call   0xf1fafc2b
   14005fbd7:	fcomp  DWORD PTR [rbx-0x14790261]
   14005fbdd:	ret    
   14005fbde:	stos   BYTE PTR es:[rdi],al
   14005fbdf:	add    edi,DWORD PTR [rcx]
   14005fbe1:	add    BYTE PTR [rbx],bh
   14005fbe3:	pop    rcx
   14005fbe4:	(bad)  
   14005fbe5:	(bad)  
   14005fbe6:	pop    rdi
   14005fbe7:	(bad)  
   14005fbe8:	xchg   DWORD PTR [rbx*2-0x24d17f4],edi
   14005fbef:	pop    rcx
   14005fbf0:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14005fbf1:	repnz add ebx,DWORD PTR [rbx]
   14005fbf4:	lahf   
   14005fbf5:	test   eax,0x1611202
   14005fbfa:	sahf   
   14005fbfb:	mov    DWORD PTR [rdx+0x79],edi
   14005fbfe:	(bad)  
   14005fbff:	(bad)  
   14005fc00:	js     0x14005fc52
   14005fc02:	push   rdi
   14005fc03:	fadd   st,st(4)
   14005fc05:	xchg   ecx,eax
   14005fc06:	loope  0x14005fbed
   14005fc08:	sbb    eax,0x5f214d9c
   14005fc0d:	add    DWORD PTR fs:[rip+0xfffffffff1c922ec],ebx        # 0x131cf1f00
   14005fc14:	or     eax,0x89e67874
   14005fc19:	adc    al,0x1
   14005fc1b:	mov    ch,0xbf
   14005fc1d:	push   di
   14005fc1f:	test   eax,0x5eac854b
   14005fc24:	test   bl,al
   14005fc26:	sub    DWORD PTR [rbp+0x6af0817c],esp
   14005fc2c:	cmp    al,0x41
   14005fc2e:	sbb    dh,dh
   14005fc30:	(bad)  
   14005fc31:	loopne 0x14005fbd1
   14005fc33:	fwait
   14005fc34:	pop    rsi
   14005fc35:	jmp    FWORD PTR [rdi+0x6e]
   14005fc38:	stc    
   14005fc39:	push   rdi
   14005fc3a:	sub    ebp,DWORD PTR [rdi]
   14005fc3c:	mov    eax,0x6d2ae7ec
   14005fc41:	xor    al,0xa7
   14005fc43:	lods   al,BYTE PTR ds:[rsi]
   14005fc44:	int3   
   14005fc45:	xchg   esi,eax
   14005fc46:	push   rax
   14005fc47:	jnp    0x14005fc3e
   14005fc49:	(bad)  
   14005fc4a:	cmp    al,0xbc
   14005fc4c:	xor    eax,0xf3ef6473
   14005fc51:	(bad)  
   14005fc52:	(bad)  
   14005fc54:	scas   al,BYTE PTR es:[rdi]
   14005fc55:	cmp    DWORD PTR [rbx-0x7cf031a],esi
   14005fc5b:	int3   
   14005fc5c:	paddsb mm3,QWORD PTR [rax]
   14005fc5f:	ret    0xfd77
   14005fc62:	(bad)  
   14005fc63:	lock pop rcx
   14005fc65:	out    dx,eax
   14005fc66:	mov    cl,0xc9
   14005fc68:	add    edi,eax
   14005fc6a:	cld    
   14005fc6b:	jle    0x14005fc77
   14005fc6d:	jle    0x14005fcb3
   14005fc6f:	or     BYTE PTR [rdi],0x74
   14005fc72:	scas   al,BYTE PTR es:[rdi]
   14005fc73:	mov    dh,ch
   14005fc75:	ffree  st(0)
   14005fc77:	add    BYTE PTR [rsi+rax*1-0x4f],ah
   14005fc7b:	jg     0x14005fce4
   14005fc7d:	loopne 0x14005fc46
   14005fc7f:	and    eax,edx
   14005fc81:	cmp    al,0x5
   14005fc83:	sbb    ah,al
   14005fc85:	movabs eax,ds:0xd80f000762a287e0
   14005fc8e:	xchg   DWORD PTR [rdx],edi
   14005fc90:	rol    DWORD PTR [rax+rax*8],cl
   14005fc93:	push   0xffffffff88157ff2
   14005fc98:	lods   eax,DWORD PTR ds:[rsi]
   14005fc99:	and    BYTE PTR [rbp+0x2de41e3],ch
   14005fc9f:	jmp    0x13846c964
   14005fca4:	(bad)  
   14005fca5:	xor    ebp,0xabc391e1
   14005fcab:	ret    0x6381
   14005fcae:	add    edi,DWORD PTR [rax]
   14005fcb0:	cli    
   14005fcb1:	ret    
   14005fcb2:	out    0xde,al
   14005fcb4:	icebp  
   14005fcb5:	lock adc edi,DWORD PTR [rbp+0x7]
   14005fcb9:	ret    0xfb1b
   14005fcbc:	lock addr32 sar bl,1
   14005fcc0:	pop    rbp
   14005fcc2:	jmp    0x14005fcc4
   14005fcc4:	mov    ah,0x21
   14005fcc6:	sbb    eax,0x3864fc7d
   14005fccb:	jl     0x14005fd21
   14005fccd:	mov    ebp,0x6d1c0c22
   14005fcd2:	jp     0x14005fca7
   14005fcd4:	jae    0x14005fccd
   14005fcd6:	test   DWORD PTR [rdi+0x5c],ecx
   14005fcd9:	icebp  
   14005fcda:	mov    ebp,DWORD PTR [rax+0x1d14f9cd]
   14005fce0:	ins    DWORD PTR es:[rdi],dx
   14005fce1:	test   cl,0x6
   14005fce4:	lock sbb al,0x5b
   14005fce7:	in     al,0xa5
   14005fce9:	or     al,0x34
   14005fceb:	(bad)  
   14005fced:	or     BYTE PTR [rsi-0x60],ch
   14005fcf0:	push   rdi
   14005fcf1:	jle    0x14005fce3
   14005fcf3:	ds jo  0x14005fca8
   14005fcf6:	out    0x83,al
   14005fcf8:	add    eax,0xe5ea2678
   14005fcfd:	sbb    eax,0x9941e0dc
   14005fd02:	stos   DWORD PTR es:[rdi],eax
   14005fd03:	fwait
   14005fd04:	stos   BYTE PTR es:[rdi],al
   14005fd05:	xchg   edi,eax
   14005fd06:	(bad)  
   14005fd07:	lock shr esi,cl
   14005fd0a:	push   rbx
   14005fd0b:	popf   
   14005fd0c:	add    BYTE PTR [rax-0x6a],bl
   14005fd0f:	mov    DWORD PTR [rdi],edx
   14005fd11:	or     BYTE PTR [rdi-0x1d],dh
   14005fd14:	or     edx,eax
   14005fd16:	xlat   BYTE PTR ds:[rbx]
   14005fd17:	icebp  
   14005fd18:	or     edx,eax
   14005fd1a:	jmp    0x14005fcd3
   14005fd1c:	std    
   14005fd1d:	out    0x77,al
   14005fd1f:	cs std 
   14005fd21:	jmp    0x11bdadadd
   14005fd26:	xlat   BYTE PTR ds:[rbx]
   14005fd27:	(bad)  
   14005fd28:	rex.RX
   14005fd29:	es std 
   14005fd2b:	sub    bp,WORD PTR [rdx+0x145d9039]
   14005fd32:	popf   
   14005fd33:	retf   0xfdf3
   14005fd36:	jge    0x14005fd87
   14005fd38:	ins    DWORD PTR es:[rdi],dx
   14005fd39:	psubq  mm2,QWORD PTR [rdi+0x5d]
   14005fd3d:	sub    BYTE PTR [rbx-0x179eac8d],0xa9
   14005fd44:	rex.RXB ret 
   14005fd46:	loopne 0x14005fd16
   14005fd48:	(bad)  
   14005fd49:	fstp   DWORD PTR [rdi-0xd]
   14005fd4c:	sbb    eax,0x1d7f097b
   14005fd51:	push   0xfffffffff2b57f72
   14005fd56:	movsxd ebp,DWORD PTR [rcx]
   14005fd58:	int3   
   14005fd59:	rcr    DWORD PTR [rdi],0x2f
   14005fd5c:	in     al,0xcd
   14005fd5e:	(bad)  
   14005fd5f:	cld    
   14005fd60:	rex.XB
   14005fd61:	cs clc 
   14005fd63:	jae    0x14005fd45
   14005fd65:	jae    0x14005fd99
   14005fd67:	mov    al,0xd5
   14005fd69:	adc    eax,0xf7e0652d
   14005fd6e:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14005fd6f:	fsub   QWORD PTR [rsi]
   14005fd71:	add    eax,eax
   14005fd73:	jbe    0x14005fdb3
   14005fd75:	rex.WRX sbb r12b,BYTE PTR [rsi]
   14005fd78:	add    BYTE PTR [rbx-0x509f418b],dh
   14005fd7e:	rex.RX sbb BYTE PTR [rbx+0x667a60b6],r11b
   14005fd85:	jb     0x14005fdbb
   14005fd87:	cld    
   14005fd88:	fidiv  WORD PTR [rbx-0x403078a9]
   14005fd8e:	mov    ah,0x29
   14005fd90:	sbb    al,0x98
   14005fd92:	xchg   dl,dh
   14005fd94:	pushf  
   14005fd95:	fsub   QWORD PTR [rax+0x2c7bd559]
   14005fd9b:	cld    
   14005fd9c:	mov    bl,0x81
   14005fd9e:	fucom  st(1)
   14005fda0:	fnstsw WORD PTR [rbp-0x5e4f7c1]
   14005fda6:	lock (bad) 
   14005fda8:	adc    ebp,edx
   14005fdaa:	(bad)  
   14005fdab:	iret   
   14005fdac:	(bad)  
   14005fdad:	loopne 0x14005fd71
   14005fdaf:	or     al,0xbe
   14005fdb1:	xor    eax,0xa800a768
   14005fdb6:	shl    DWORD PTR [rsi],cl
   14005fdb8:	or     eax,0x818bc728
   14005fdbd:	jl     0x14005fdf1
   14005fdbf:	lock out dx,al
   14005fdc1:	rex.WRB dec QWORD PTR [r13-0x2c]
   14005fdc5:	(bad)  
   14005fdc6:	pop    rdx
   14005fdc7:	imul   edx,DWORD PTR [rdx-0xc],0x8955556d
   14005fdce:	addr32 cli 
   14005fdd0:	ror    dh,cl
   14005fdd2:	pop    rbp
   14005fdd3:	fwait
   14005fdd4:	pushf  
   14005fdd5:	(bad)  
   14005fdd6:	sub    edi,DWORD PTR [rdi]
   14005fdd8:	sub    BYTE PTR [rdi],0x11
   14005fddb:	add    DWORD PTR [rcx+0x4cf00bc9],ebp
   14005fde1:	(bad)  
   14005fde2:	retf   
   14005fde3:	cmp    edi,DWORD PTR [rax+0x573a83c1]
   14005fde9:	(bad)  
   14005fdea:	xchg   ebp,eax
   14005fdeb:	(bad)  
   14005fdec:	(bad)  
   14005fded:	loopne 0x14005fd96
   14005fdef:	mov    bl,0x30
   14005fdf1:	in     al,dx
   14005fdf2:	pop    rsi
   14005fdf3:	jbe    0x14005fdb7
   14005fdf5:	sbb    bl,BYTE PTR [rsi]
   14005fdf7:	sahf   
   14005fdf8:	(bad)
   14005fdfb:	sti    
   14005fdfc:	shr    DWORD PTR [rdi-0xc4bc5e3],0xf1
   14005fe03:	mov    ebx,0x75f2bc36
   14005fe08:	xchg   edi,eax
   14005fe09:	test   DWORD PTR [rdi],0x47479e8f
   14005fe0f:	test   eax,0xdfc60c73
   14005fe14:	out    dx,al
   14005fe15:	fstp   TBYTE PTR [rcx-0x63e13dd]
   14005fe1b:	(bad)  
   14005fe1c:	loope  0x14005fe2b
   14005fe1e:	xchg   edi,eax
   14005fe1f:	xchg   BYTE PTR [rsi-0x5e79d07d],bh
   14005fe25:	mov    esp,0x794fe3f2
   14005fe2a:	scas   eax,DWORD PTR es:[rdi]
   14005fe2b:	fdivr  DWORD PTR [rdi-0x493b53cd]
   14005fe31:	jg     0x14005fe43
   14005fe33:	pop    rdi
   14005fe34:	fnsetpm(287 only) 
   14005fe36:	mov    bh,BYTE PTR [rsi]
   14005fe38:	and    al,0xe7
   14005fe3b:	(bad)
   14005fe3e:	in     al,0x89
   14005fe40:	and    bh,ah
   14005fe42:	or     BYTE PTR [rsi-0xe],ah
   14005fe45:	and    DWORD PTR [rdi],esi
   14005fe47:	test   BYTE PTR [rbp-0x70e03e61],dl
   14005fe4d:	mov    eax,0xc0c9e7f2
   14005fe52:	(bad)  
   14005fe53:	sub    al,ch
   14005fe55:	add    BYTE PTR [rbp+rbp*8+0x40],ah
   14005fe59:	pop    rcx
   14005fe5a:	shl    DWORD PTR [rcx+0x32],0xe8
   14005fe5e:	xchg   DWORD PTR [rdx-0x65],esi
   14005fe61:	sbb    BYTE PTR [rax-0x31],al
   14005fe64:	rex.WRXB add al,0xda
   14005fe67:	stc    
   14005fe68:	mov    edx,0xb6681e45
   14005fe6d:	(bad)  
   14005fe6e:	rex.RXB jmp 0x14005fed1
   14005fe71:	xchg   DWORD PTR [rbp+0x20],ebx
   14005fe74:	add    al,0x5e
   14005fe76:	pop    rbp
   14005fe77:	sub    BYTE PTR [rdi*2-0xea39],ch
   14005fe7e:	fdivr  DWORD PTR [rsi+0x5d]
   14005fe81:	clc    
   14005fe82:	mov    ch,0x27
   14005fe84:	pop    rsi
   14005fe85:	sbb    ebx,DWORD PTR [rsi]
   14005fe87:	sbb    DWORD PTR [rdi-0x7b],ebx
   14005fe8a:	(bad)  
   14005fe8b:	xchg   DWORD PTR [rbx-0x17],eax
   14005fe8e:	lock (bad) 
   14005fe90:	adc    dh,al
   14005fe92:	lock (bad) 
   14005fe94:	jg     0x14005fedc
   14005fe96:	cwde   
   14005fe97:	scas   eax,DWORD PTR es:[rdi]
   14005fe98:	(bad)  
   14005fe99:	ss gs (bad) 
   14005fe9c:	popfw  
   14005fe9e:	leave  
   14005fe9f:	cdq    
   14005fea0:	f2xm1  
   14005fea2:	fdiv   st,st(4)
   14005fea4:	stos   BYTE PTR es:[rdi],al
   14005fea5:	lock out 0xd3,eax
   14005fea8:	push   rdi
   14005fea9:	fadd   st,st(4)
   14005feab:	jae    0x14005ff22
   14005fead:	shr    cl,0xe
   14005feb0:	(bad)  
   14005feb1:	ja     0x14005fe99
   14005feb3:	pop    rdi
   14005feb4:	rex.X lahf 
   14005feb6:	(bad)
   14005feb9:	sar    WORD PTR [rcx],1
   14005febc:	sbb    al,0x7b
   14005febe:	cld    
   14005febf:	out    dx,al
   14005fec0:	sub    BYTE PTR [rbx+0x1e],dh
   14005fec3:	cld    
   14005fec4:	out    dx,al
   14005fec5:	or     DWORD PTR [rbp+0x0],0x47a0afde
   14005fecc:	scas   al,BYTE PTR es:[rdi]
   14005fecd:	add    DWORD PTR [rcx-0xb],esp
   14005fed0:	cmp    eax,0x6fdbd0e0
   14005fed6:	cld    
   14005fed7:	outs   dx,DWORD PTR ds:[rsi]
   14005fed8:	and    esp,DWORD PTR [rcx-0x77]
   14005fedb:	(bad)  
   14005fedc:	jle    0x14005fed0
   14005fede:	sar    eax,cl
   14005fee0:	fwait
   14005fee1:	adc    BYTE PTR [rax+0x7],cl
   14005fee4:	(bad)  
   14005fee5:	cs stos BYTE PTR es:[rdi],al
   14005fee7:	pop    rdx
   14005fee8:	loop   0x14005feec
   14005feea:	push   rax
   14005feeb:	jrcxz  0x14005fe78
   14005feed:	(bad)  
   14005feee:	movabs ds:0x38049170a8092c93,al
   14005fef7:	push   rcx
   14005fef8:	rex.WRXB jae 0x14005feab
   14005fefb:	or     DWORD PTR [rsi],0x37570967
   14005ff01:	shl    DWORD PTR [rbp-0x204b03e4],1
   14005ff07:	sub    eax,0x394f444f
   14005ff0c:	in     eax,0xb
   14005ff0e:	test   BYTE PTR [rbx-0x10],bh
   14005ff11:	add    al,0xe1
   14005ff13:	push   rsi
   14005ff14:	sbb    al,0xff
   14005ff16:	inc    BYTE PTR [rsi+0x1dedb8df]
   14005ff1c:	jmp    0x14005fecd
   14005ff1e:	fdivr  st,st(2)
   14005ff20:	mov    ds,esp
   14005ff22:	sub    edi,DWORD PTR [rdi+rsi*4+0x60]
   14005ff26:	xlat   BYTE PTR ds:[rbx]
   14005ff27:	push   rdi
   14005ff28:	outs   dx,BYTE PTR ds:[rsi]
   14005ff29:	call   FWORD PTR [rbx-0x48170e3]
   14005ff2f:	out    dx,al
   14005ff30:	cmp    eax,0x3b6bbfdf
   14005ff35:	imul   ebx,edx,0xfffffff4
   14005ff38:	retf   0xba9f
   14005ff3b:	ins    BYTE PTR es:[rdi],dx
   14005ff3c:	in     al,dx
   14005ff3d:	loop   0x14005ff2a
   14005ff3f:	fbstp  TBYTE PTR [rdi+0x29]
   14005ff42:	push   rsi
   14005ff43:	call   QWORD PTR [rbp+0x7]
   14005ff46:	jbe    0x14005fece
   14005ff48:	push   rcx
   14005ff49:	jl     0x14005ff24
   14005ff4b:	add    BYTE PTR [edi+0x77c57106],ah
   14005ff52:	or     DWORD PTR [rsi+0x7e34f6e0],0xa78b52
   14005ff5c:	pop    rsp
   14005ff5d:	fnsave [rbx-0x60]
   14005ff60:	jae    0x14005ff74
   14005ff62:	and    dh,cl
   14005ff64:	pop    rbp
   14005ff65:	add    ch,BYTE PTR [rcx+0x76]
   14005ff68:	(bad)  
   14005ff69:	and    bh,0xd5
   14005ff6c:	or     bh,BYTE PTR [rax-0x18]
   14005ff6f:	loopne 0x14005ffbb
   14005ff71:	pop    rdi
   14005ff72:	sbb    al,0xdc
   14005ff74:	sbb    eax,0x9a829a44
   14005ff79:	add    edi,ecx
   14005ff7b:	push   rcx
   14005ff7c:	(bad)
   14005ff7f:	mov    ah,0xd5
   14005ff81:	ret    
   14005ff82:	(bad)  
   14005ff83:	rex.WRB mov BYTE PTR [r8-0x7c520c08],0x1b
   14005ff8b:	ret    0x7f3b
   14005ff8e:	hlt    
   14005ff8f:	cmp    ch,BYTE PTR [rax+rdi*8-0x7bcf8f54]
   14005ff96:	(bad)  
   14005ff97:	(bad)  
   14005ff98:	and    ch,al
   14005ff9a:	icebp  
   14005ff9b:	and    eax,0x6a316e35
   14005ffa0:	add    esi,0x7c
   14005ffa3:	(bad)  
   14005ffa4:	(bad)  
   14005ffa5:	(bad)  
   14005ffa6:	sbb    al,dh
   14005ffa8:	mul    DWORD PTR [rbx+0x64]
   14005ffab:	out    dx,eax
   14005ffac:	or     bl,BYTE PTR [rdi]
   14005ffae:	cwde   
   14005ffaf:	mov    esi,0x6fba7c3a
   14005ffb4:	jae    0x14005ffae
   14005ffb6:	(bad)  
   14005ffb8:	jnp    0x14005ff7c
   14005ffba:	xchg   esi,eax
   14005ffbb:	mov    esi,0x66b3f1fd
   14005ffc0:	mul    BYTE PTR [rbp-0x3ffc4b60]
   14005ffc6:	enter  0x59a6,0xf1
   14005ffca:	(bad)  
   14005ffcb:	loopne 0x14005ff8b
   14005ffcd:	mov    al,0x6f
   14005ffcf:	push   0xdd9abad
   14005ffd4:	ror    dh,1
   14005ffd6:	movabs al,ds:0x27bb25f3a0065d93
   14005ffdf:	es xor al,0x5c
   14005ffe2:	ins    DWORD PTR es:[rdi],dx
   14005ffe3:	(bad)  
   14005ffe4:	jo     0x140060062
   14005ffe6:	sahf   
   14005ffe7:	mov    DWORD PTR [rdx+0x79],edi
   14005ffea:	(bad)  
   14005ffeb:	(bad)  
   14005ffec:	js     0x14006003e
   14005ffee:	out    0xea,eax
   14005fff0:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14005fff1:	repnz movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14005fff3:	(bad)  
   14005fff4:	cld    
   14005fff5:	hlt    
   14005fff6:	fldl2t 
   14005fff8:	fadd   DWORD PTR [rcx]
   14005fffa:	and    al,0x47
   14005fffc:	pop    rbx
   14005fffd:	jbe    0x140060017
   14005ffff:	mov    edi,0xdeac70bb
   140060004:	jno    0x14005ffdd
   140060006:	sbb    eax,0x723b1c4f
   14006000b:	lock out dx,al
   14006000d:	push   rbp
   14006000e:	(bad)  
   14006000f:	pop    rsi
   140060010:	mov    cl,0xf6
   140060012:	mov    ecx,0xc9f5bf47
   140060017:	jnp    0x140060017
   140060019:	in     al,dx
   14006001a:	(bad)  
   14006001b:	ds lock (bad) 
   14006001e:	fnstsw WORD PTR [rdi+0x73]
   140060021:	jmp    rcx
   140060023:	(bad)  
   140060024:	sahf   
   140060025:	(bad)  
   140060026:	test   al,0x8f
   140060028:	mov    eax,esi
   14006002a:	rex.WXB scas rax,QWORD PTR es:[rdi]
   14006002c:	clc    
   14006002d:	addr32 out dx,eax
   14006002f:	js     0x14006009f
   140060031:	ins    BYTE PTR es:[rdi],dx
   140060032:	rex.XB mov r8d,0xfb0eff64
   140060038:	out    dx,al
   140060039:	pop    rdi
   14006003a:	pop    rsi
   14006003b:	in     eax,dx
   14006003c:	xchg   ebp,eax
   14006003d:	movsxd esp,esp
   14006003f:	jae    0x14005ffd6
   140060041:	out    0x6a,eax
   140060043:	iret   
   140060044:	(bad)  
   140060045:	hlt    
   140060046:	(bad)  
   140060047:	stos   DWORD PTR es:[rdi],eax
   140060048:	jle    0x140060054
   14006004a:	repnz (bad) 
   14006004c:	in     al,0xc3
   14006004e:	mov    ah,bl
   140060050:	jb     0x140060059
   140060052:	ror    BYTE PTR [rcx],0xa0
   140060055:	(bad)  
   140060056:	ror    DWORD PTR [rsi],0x79
   140060059:	(bad)
   14006005d:	stos   DWORD PTR es:[rdi],eax
   14006005e:	leave  
   14006005f:	and    BYTE PTR [rsi],al
   140060061:	cmp    eax,0x39f27f57
   140060066:	sub    DWORD PTR [rax+0x2],esi
   140060069:	loopne 0x140060082
   14006006b:	jnp    0x14006004f
   14006006d:	sahf   
   14006006e:	sbb    esi,esi
   140060070:	adc    edi,eax
   140060072:	xchg   ecx,eax
   140060073:	ja     0x140060078
   140060075:	(bad)  
   140060076:	jae    0x14006008e
   140060078:	enter  0x6af4,0xf4
   14006007c:	fnstenv [rsi-0x61]
   14006007f:	stos   DWORD PTR es:[rdi],eax
   140060080:	(bad)  
   140060081:	and    al,0xf6
   140060083:	cs (bad) 
   140060085:	frstor [rbp+0x5b87a3f8]
   14006008b:	loop   0x1400600d7
   14006008d:	iret   
   14006008e:	rex.X mov bpl,0x41
   140060091:	movabs ds:0xcf2b037600de4a91,eax
   14006009a:	rex.XB
   14006009b:	rex.RB cmp eax,0x63b1d0e1
   1400600a1:	loope  0x140060031
   1400600a3:	mov    esi,0x9217f04b
   1400600a8:	es ret 0xd315
   1400600ac:	(bad)  
   1400600ad:	clc    
   1400600ae:	(bad)  
   1400600af:	mov    gs,ebp
   1400600b1:	imul   rbx,QWORD PTR [r15+r8*4],0xffffffff8c30177e
   1400600b9:	pop    rbp
   1400600ba:	rol    BYTE PTR [rbx-0x15],0xaf
   1400600be:	add    eax,0xa946c995
   1400600c3:	add    esp,edi
   1400600c5:	ret    0x83ea
   1400600c8:	rex.WRXB sbb r15b,r14b
   1400600cb:	mov    dh,0xb7
   1400600cd:	cs (bad) 
   1400600cf:	sbb    eax,0xf99f1dc0
   1400600d4:	(bad)  
   1400600d5:	mov    ch,0xc7
   1400600d7:	jbe    0x1400600d9
   1400600d9:	(bad)  
   1400600da:	xchg   edi,eax
   1400600db:	xchg   ebp,eax
   1400600dc:	sti    
   1400600dd:	loope  0x1400600e2
   1400600df:	mov    ecx,0x9f44041
   1400600e4:	sbb    DWORD PTR [rdx],esp
   1400600e6:	or     DWORD PTR [rax],ebp
   1400600e8:	cld    
   1400600e9:	xchg   ebp,eax
   1400600ea:	add    al,0x91
   1400600ec:	cmp    DWORD PTR [rsi-0x6f58f17f],edi
   1400600f2:	stos   DWORD PTR es:[rdi],eax
   1400600f3:	fwait
   1400600f4:	call   0xf684096b
   1400600f9:	stc    
   1400600fa:	je     0x1400600e9
   1400600fc:	add    al,ch
   1400600fe:	xchg   ebx,eax
   1400600ff:	pushf  
   140060100:	stos   BYTE PTR es:[rdi],al
   140060101:	or     eax,DWORD PTR [rdi+rbx*2-0x387b702]
   140060108:	retf   
   140060109:	(bad)  
   14006010a:	stc    
   14006010b:	lods   eax,DWORD PTR ds:[rsi]
   14006010c:	(bad)  
   14006010d:	loopne 0x14006013d
   14006010f:	(bad)  
   140060110:	cmp    ecx,DWORD PTR [rsi+0x5cf838dd]
   140060116:	add    ebx,edx
   140060118:	stos   BYTE PTR es:[rdi],al
   140060119:	mov    al,0x6a
   14006011b:	push   rbx
   14006011c:	sbb    bh,al
   14006011e:	mov    ebp,0xf2bd2ffe
   140060123:	(bad)  
   140060124:	ret    0x9e9b
   140060127:	stc    
   140060128:	jbe    0x1400600e2
   14006012a:	mul    BYTE PTR [rbp+0x3dab171f]
   140060130:	push   rdi
   140060131:	jle    0x140060191
   140060133:	add    al,0xcb
   140060135:	cmp    eax,DWORD PTR [rax]
   140060137:	rex.WRX or al,0x83
   14006013a:	cwde   
   14006013b:	or     al,0x72
   14006013d:	shl    bl,1
   14006013f:	add    bl,BYTE PTR [rdi+0x71]
   140060142:	ror    DWORD PTR [rdi-0x1aa1baed],1
   140060148:	sbb    eax,esp
   14006014a:	or     esi,ecx
   14006014c:	sbb    DWORD PTR [rsi-0x1b],0xe05bf065
   140060153:	jae    0x1400601a9
   140060155:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140060156:	xor    DWORD PTR [rcx-0x5c413492],0x65
   14006015d:	(bad)  
   14006015e:	or     eax,0x9ed7e9cf
   140060163:	jl     0x1400601d2
   140060165:	clc    
   140060166:	fdiv   st,st(3)
   140060168:	fwait
   140060169:	mov    cl,0xd5
   14006016b:	pop    rdi
   14006016c:	mov    DWORD PTR [rdi],edi
   14006016e:	data16 jo 0x140060176
   140060171:	or     BYTE PTR es:[rdi],dh
   140060174:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140060175:	(bad)  
   140060176:	(bad)  
   140060177:	int    0xbc
   140060179:	or     DWORD PTR [rdi+rdx*8-0x658eb9be],0xfffffff0
   140060181:	ret    0xe113
   140060184:	(bad)  
   140060185:	mov    ?,WORD PTR [rsi+0x56561716]
   14006018b:	test   DWORD PTR [rdi+0x1d],esi
   14006018e:	jnp    0x1400601b4
   140060190:	hlt    
   140060191:	and    edx,esi
   140060193:	test   eax,0xc50e1f8d
   140060198:	jl     0x1400601fa
   14006019a:	mov    bh,0x39
   14006019c:	mov    bh,0xbe
   14006019e:	clc    
   14006019f:	pop    rax
   1400601a0:	mov    eax,0x44c0931d
   1400601a5:	push   QWORD PTR [rax+0x36]
   1400601a8:	and    DWORD PTR [rcx+0x1ab6038d],ebp
   1400601ae:	mov    dh,0x15
   1400601b0:	push   rsp
   1400601b1:	or     DWORD PTR [rsi],ebp
   1400601b3:	cmp    eax,0xbe70ad48
   1400601b8:	fs xchg edi,eax
   1400601ba:	(bad)  
   1400601bb:	add    al,0x6e
   1400601bd:	and    eax,0xe7c78990
   1400601c2:	pop    rcx
   1400601c3:	sbb    DWORD PTR [rip+0x1b83bc84],edx        # 0x15b89be4d
   1400601c9:	cmp    al,0xb2
   1400601cb:	sbb    eax,0x972e81f
   1400601d0:	jle    0x14006020c
   1400601d2:	(bad)  
   1400601d3:	rex.WR
   1400601d4:	rex.WR add spl,r10b
   1400601d7:	retf   
   1400601d8:	hlt    
   1400601d9:	rex.XB sbb al,0xc
   1400601dc:	imul   BYTE PTR [rbx+0x21d6f071]
   1400601e2:	cmovle eax,DWORD PTR [rdx]
   1400601e5:	ds sbb eax,0xc12f6b0c
   1400601eb:	sub    bh,BYTE PTR [rax+0x7e]
   1400601ee:	cwde   
   1400601ef:	(bad)  
   1400601f1:	jrcxz  0x1400601e3
   1400601f3:	in     eax,dx
   1400601f4:	int    0x6f
   1400601f6:	or     al,0x17
   1400601f8:	rex.WRB out dx,al
   1400601fa:	or     edx,DWORD PTR [rdi]
   1400601fc:	loopne 0x1400601f9
   1400601fe:	clc    
   1400601ff:	cmp    eax,esp
   140060201:	jrcxz  0x140060207
   140060203:	add    BYTE PTR [rbx+0x11],al
   140060206:	xchg   ecx,eax
   140060207:	sbb    DWORD PTR [rax+0x34],0x73
   14006020b:	loopne 0x140060240
   14006020d:	pop    QWORD PTR [rcx+0x7400269f]
   140060213:	or     ecx,edi
   140060215:	idiv   DWORD PTR [rcx+0x3d39dbca]
   14006021b:	or     dl,BYTE PTR [rsi+0x70]
   14006021e:	movabs ds:0x6119f95b7c0aaf19,al
   140060227:	pop    rsp
   140060228:	(bad)  
   140060229:	sbb    ecx,esi
   14006022b:	sbb    al,0x59
   14006022d:	xor    BYTE PTR [rbp-0x5c],0xe0
   140060231:	(bad)  
   140060232:	xchg   ebx,eax
   140060233:	add    eax,ebp
   140060235:	rex.WB (bad) 
   140060237:	in     al,0x80
   140060239:	sub    bh,al
   14006023b:	mov    ecx,0x208d5fdd
   140060240:	imul   BYTE PTR [rcx+0x1e166836]
   140060246:	sbb    BYTE PTR fs:[rax-0x24],ah
   14006024a:	scas   al,BYTE PTR es:[rdi]
   14006024b:	ins    BYTE PTR es:[rdi],dx
   14006024c:	mov    edx,0xec5f6f06
   140060251:	or     BYTE PTR [rdi-0x12978600],bl
   140060257:	rex clc 
   140060259:	pop    rdi
   14006025a:	pop    rdi
   14006025b:	mov    esp,0x3029a3f
   140060260:	push   0xffffffffe8feff26
   140060265:	retf   0xc9e9
   140060268:	jo     0x140060287
   14006026a:	cmp    DWORD PTR es:[rbx-0x29c14031],0x7ed36366
   140060275:	jl     0x140060264
   140060277:	cmc    
   140060278:	xor    DWORD PTR [rbx-0x10],ebx
   14006027b:	xchg   esi,eax
   14006027c:	xor    al,dl
   14006027e:	mov    DWORD PTR cs:[rcx],ecx
   140060281:	ins    DWORD PTR es:[rdi],dx
   140060282:	push   rsi
   140060283:	mov    bl,0x5
   140060285:	sbb    al,0x9f
   140060287:	addr32 mov ds:0xdc1de5e,al
   14006028d:	(bad)  
   14006028e:	(bad)  
   14006028f:	(bad)  
   140060290:	cli    
   140060291:	jno    0x1400602cc
   140060293:	add    eax,0xe1c59d3f
   140060298:	jle    0x1400602c0
   14006029a:	adc    edx,DWORD PTR [rdi+0x7a]
   14006029d:	jl     0x140060279
   14006029f:	es cmp al,0x83
   1400602a2:	movabs ds:0x9c2143fdbd55fc1e,eax
   1400602ab:	jg     0x1400602fa
   1400602ad:	cwde   
   1400602ae:	and    BYTE PTR [rbp-0x1e],r15b
   1400602b2:	retf   0x3eff
   1400602b5:	int3   
   1400602b6:	and    bl,BYTE PTR [rax]
   1400602b8:	in     al,dx
   1400602b9:	add    ah,BYTE PTR [rax]
   1400602bb:	lods   al,BYTE PTR ds:[rsi]
   1400602bc:	mov    bl,0xdb
   1400602be:	jnp    0x140060318
   1400602c0:	(bad)  
   1400602c1:	xchg   DWORD PTR [rcx-0x74],esi
   1400602c4:	and    ch,al
   1400602c6:	repz xor DWORD PTR [rdx-0x31fee760],eax
   1400602cd:	movsxd ebx,DWORD PTR [rax]
   1400602cf:	rex.WRXB ror BYTE PTR [r14+r9*1],1
   1400602d3:	loop   0x140060329
   1400602d5:	add    DWORD PTR [rdx+0x6],ebp
   1400602d8:	xchg   DWORD PTR [rax],esi
   1400602da:	and    eax,esp
   1400602dc:	and    BYTE PTR [rax+rax*4],bh
   1400602df:	cwde   
   1400602e0:	xacquire xchg DWORD PTR [rbp-0x7],ebp
   1400602e4:	mov    r11b,0x5d
   1400602e7:	add    BYTE PTR [rsi],ah
   1400602e9:	add    ebx,DWORD PTR [rsi-0xc]
   1400602ec:	movabs ds:0x2dc833e073f82c07,eax
   1400602f5:	lock push rbx
   1400602f7:	mov    ah,0x1b
   1400602f9:	or     al,0x39
   1400602fb:	adc    al,BYTE PTR [rip+0x7f5fe0bb]        # 0x1bf65e3bc
   140060301:	fxch   st(3)
   140060303:	paddd  mm5,mm4
   140060306:	or     DWORD PTR [rsi],ecx
   140060308:	shl    BYTE PTR [rbp+0x5b],0xf0
   14006030c:	adc    esi,esi
   14006030e:	mov    eax,ebx
   140060310:	(bad)  
   140060311:	rex.RXB (bad) 
   140060313:	or     edi,ebp
   140060315:	fdivrp st(4),st
   140060317:	data16 jl 0x140060338
   14006031a:	jl     0x1400602dc
   14006031c:	(bad)  
   14006031d:	lahf   
   14006031e:	out    0x99,al
   140060320:	mov    ecx,0xee9fe1b0
   140060325:	cld    
   140060326:	data16 sub al,0xd1
   140060329:	jno    0x1400602eb
   14006032b:	(bad)  
   14006032c:	in     eax,0xc6
   14006032e:	je     0x140060344
   140060330:	pop    rsp
   140060331:	ret    0x6cbf
   140060334:	rex.WXB push 0xf
   140060337:	fstp   QWORD PTR [rdi]
   140060339:	adc    ecx,DWORD PTR [rax]
   14006033b:	push   0xffffffffffffffa3
   14006033d:	and    bl,0xf3
   140060340:	rex.WR (bad) 
   140060342:	retf   
   140060343:	cmp    edi,DWORD PTR [rax+0x65ba83c1]
   140060349:	(bad)  
   14006034a:	cld    
   14006034b:	je     0x140060365
   14006034d:	(bad)  
   14006034e:	push   rbp
   14006034f:	ja     0x140060375
   140060351:	outs   dx,BYTE PTR ds:[rsi]
   140060352:	popf   
   140060353:	xlat   BYTE PTR ds:[rbx]
   140060354:	pop    rsi
   140060355:	sbb    ah,BYTE PTR [rsi]
   140060357:	jno    0x14006033a
   140060359:	in     al,dx
   14006035a:	mov    gs,WORD PTR [rip+0x1dd58f3f]        # 0x15ddb929f
   140060360:	ror    DWORD PTR [rax+riz*4+0x147f76e3],0x1
   140060368:	ds data16 rex.RXB lahf 
   14006036c:	rol    esp,0xf3
   14006036f:	xor    DWORD PTR [rbp+rbp*2+0x7f0320fe],ecx
   140060376:	sbb    BYTE PTR [rcx],bh
   140060378:	(bad)  
   140060379:	or     edi,DWORD PTR [rbx+rbx*4+0x8]
   14006037d:	cmp    BYTE PTR [rcx],bl
   14006037f:	(bad)
   140060383:	add    al,0xf0
   140060385:	rol    BYTE PTR [rax+rax*8-0x1d41be63],cl
   14006038c:	scas   eax,DWORD PTR es:[rdi]
   14006038d:	stos   DWORD PTR es:[rdi],eax
   14006038e:	cld    
   14006038f:	imul   eax,DWORD PTR [rdx],0x4527cc0
   140060395:	jnp    0x140060333
   140060397:	or     al,0x48
   140060399:	stos   DWORD PTR es:[rdi],eax
   14006039a:	(bad)  
   14006039b:	sahf   
   14006039c:	out    dx,eax
   14006039d:	(bad)  [rsi+0x2bcfc19f]
   1400603a3:	cld    
   1400603a4:	ds (bad) 
   1400603a6:	(bad)  
   1400603a7:	lea    ebx,[rbx]
   1400603a9:	test   eax,0xae837409
   1400603ae:	sbb    al,ch
   1400603b0:	rex.WRX or al,0x7c
   1400603b3:	pop    rsi
   1400603b4:	(bad)  
   1400603b5:	shl    BYTE PTR [rbp+0x57fa2784],0x85
   1400603bc:	jg     0x140060375
   1400603be:	icebp  
   1400603bf:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400603c0:	ret    0xfe04
   1400603c3:	push   rax
   1400603c4:	sub    cl,BYTE PTR [rdi-0x7d]
   1400603c7:	clc    
   1400603c8:	nop
   1400603c9:	adc    BYTE PTR [rdi+0xf],ch
   1400603cc:	pop    rsi
   1400603cd:	jb     0x140060433
   1400603cf:	rex.WRXB js 0x140060397
   1400603d2:	(bad)  
   1400603d3:	in     eax,dx
   1400603d4:	test   al,0xd5
   1400603d6:	jmp    0x14006037a
   1400603d8:	adc    esp,eax
   1400603da:	jrcxz  0x14006042d
   1400603dc:	rex.B cdq 
   1400603de:	mov    dl,0x34
   1400603e0:	rep ins BYTE PTR es:[rdi],dx
   1400603e2:	jne    0x1400603ff
   1400603e4:	cld    
   1400603e5:	in     al,dx
   1400603e6:	pop    rdi
   1400603e7:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400603e8:	add    eax,0x3c7d57c7
   1400603ed:	pop    rax
   1400603ee:	add    DWORD PTR [rbx],ebp
   1400603f0:	(bad)  
   1400603f1:	xchg   DWORD PTR [rdx-0x63],ecx
   1400603f4:	jg     0x1400603d8
   1400603f6:	out    dx,eax
   1400603f7:	add    al,BYTE PTR [rbp+riz*1+0x67]
   1400603fb:	cli    
   1400603fc:	xchg   edi,eax
   1400603fd:	xchg   ebx,eax
   1400603fe:	add    BYTE PTR [rsi+0x2],dh
   140060401:	cmp    edx,DWORD PTR [rsi+0x5e]
   140060404:	adc    al,0xee
   140060406:	f2xm1  
   140060408:	sub    bl,BYTE PTR [rbx-0xb]
   14006040b:	push   rdi
   14006040c:	and    BYTE PTR [rdx],ah
   14006040e:	in     eax,dx
   14006040f:	(bad)  
   140060410:	rol    BYTE PTR [rbx],1
   140060412:	(bad)  
   140060413:	ret    
   140060414:	sar    DWORD PTR [rsp+rax*1+0x57],0x4
   140060419:	movsxd esp,eax
   14006041b:	jrcxz  0x1400603d1
   14006041d:	rol    BYTE PTR [rdx+0x7540939f],0xc
   140060424:	add    BYTE PTR [rsi+0x1bb54193],cl
   14006042a:	loopne 0x14006045a
   14006042c:	fwait
   14006042d:	paddusb mm6,QWORD PTR [rax+0x29]
   140060431:	mov    ch,0xc0
   140060433:	scas   eax,DWORD PTR es:[rdi]
   140060434:	pop    rdi
   140060435:	hlt    
   140060436:	mov    bl,0x20
   140060438:	(bad)  
   140060439:	(bad)  
   14006043a:	lahf   
   14006043b:	or     al,0xc
   14006043d:	(bad)  
   14006043e:	(bad)  
   14006043f:	push   QWORD PTR [rcx-0x4]
   140060442:	fidiv  DWORD PTR [rsi+0x4]
   140060445:	call   FWORD PTR [rsi-0x64]
   140060448:	repz lahf 
   14006044a:	test   eax,0xc63ecfe0
   14006044f:	xor    eax,0x129c1e81
   140060454:	cmp    al,0x39
   140060456:	mov    ah,0x2e
   140060458:	cld    
   140060459:	(bad)  
   14006045a:	jns    0x14006049b
   14006045c:	adc    eax,0xb51fe85e
   140060461:	sbb    eax,0x34017700
   140060466:	sti    
   140060467:	(bad)  
   140060468:	iret   
   140060469:	jg     0x1400604a2
   14006046b:	rex.WXB cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14006046d:	sbb    al,0x9d
   14006046f:	jmp    0x14006046c
   140060471:	xchg   edi,eax
   140060472:	add    esp,DWORD PTR [rbp+0x39]
   140060475:	sbb    al,0x45
   140060477:	sub    edi,DWORD PTR [rbp+0x1b]
   14006047a:	jge    0x1400604df
   14006047c:	sub    DWORD PTR [rax+rax*1-0x4342bb31],esi
   140060483:	sbb    DWORD PTR [rbx],0x3c
   140060486:	stos   BYTE PTR es:[rdi],al
   140060487:	jb     0x140060505
   140060489:	movabs al,ds:0x717f656f4fdb6dcb
   140060492:	js     0x14006050b
   140060494:	push   rdi
   140060495:	loop   0x1400604bb
   140060497:	mov    al,0xf1
   140060499:	adc    eax,0xb71bcbe1
   14006049e:	xchg   cl,cl
   1400604a0:	movabs eax,ds:0x64b1fd5b70056155
   1400604a9:	scas   eax,DWORD PTR es:[rdi]
   1400604aa:	loopne 0x1400604d0
   1400604ac:	add    al,0x1f
   1400604af:	rex.RX ror BYTE PTR [rdi],0xe1
   1400604b3:	movntq QWORD PTR [rdi+rcx*4],mm1
   1400604b7:	xor    bh,al
   1400604b9:	retf   0x980f
   1400604bc:	sar    DWORD PTR [rdi],0xe4
   1400604bf:	setle  BYTE PTR [rdx]
   1400604c2:	jo     0x140060526
   1400604c4:	cmps   QWORD PTR ds:[rsi],QWORD PTR es:[rdi]
   1400604c6:	add    bh,BYTE PTR [rbp+0x8]
   1400604c9:	(bad)  
   1400604ca:	(bad)  
   1400604cb:	add    al,0x3f
   1400604cd:	scas   eax,DWORD PTR es:[rdi]
   1400604ce:	hlt    
   1400604cf:	fcmovnbe st,st(5)
   1400604d1:	jle    0x140060519
   1400604d3:	push   rdx
   1400604d4:	or     dh,ah
   1400604d6:	cmp    BYTE PTR [rcx],ah
   1400604d8:	adc    BYTE PTR [rdi+0x64],al
   1400604db:	sbb    al,BYTE PTR gs:[rax-0x41]
   1400604df:	(bad)  
   1400604e0:	adc    edi,esi
   1400604e2:	fmul   DWORD PTR [rbx-0xfb13065]
   1400604e8:	movsxd eax,DWORD PTR [rax]
   1400604ea:	mov    dl,0xfa
   1400604ec:	xor    BYTE PTR [rax],dh
   1400604ee:	adc    bh,BYTE PTR [rdx-0x32]
   1400604f1:	mov    ebx,0x6dc76c2a
   1400604f6:	mov    edi,0x37fcfdff
   1400604fb:	xchg   DWORD PTR [rdi+0x1768d707],esp
   140060501:	lock (bad) 
   140060503:	lahf   
   140060504:	mov    ebx,0x4c9fac3f
   140060509:	out    dx,eax
   14006050a:	(bad)  
   14006050b:	adc    al,0x83
   14006050d:	lahf   
   14006050e:	add    eax,0x3e6d7bad
   140060513:	loopne 0x140060565
   140060515:	pop    rsi
   140060516:	retf   0x3587
   140060519:	(bad)  
   14006051a:	jle    0x1400604ec
   14006051c:	or     al,ch
   14006051e:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14006051f:	add    ah,0x5e
   140060522:	and    BYTE PTR [rdi-0x5e],0x5e
   140060526:	faddp  st(1),st
   140060528:	or     eax,0xf8e59d1e
   14006052d:	rex xchg edi,eax
   14006052f:	jae    0x140060521
   140060531:	sar    DWORD PTR [rcx-0x23],cl
   140060534:	(bad)  
   140060535:	add    eax,edx
   140060537:	sub    bl,BYTE PTR [rcx+rdx*2-0x61]
   14006053b:	pop    rax
   14006053c:	jae    0x140060587
   14006053e:	clc    
   14006053f:	ret    0xad86
   140060542:	(bad)  
   140060543:	and    eax,0x27257e82
   140060548:	add    esp,ebx
   14006054a:	cld    
   14006054b:	(bad)  
   14006054c:	push   r8
   14006054e:	pavgw  mm1,mm6
   140060551:	pop    rcx
   140060552:	(bad)  
   140060553:	cld    
   140060554:	and    eax,eax
   140060556:	pushf  
   140060557:	or     dl,dh
   140060559:	xor    eax,ecx
   14006055b:	leave  
   14006055c:	shl    BYTE PTR [rsi+0x3],0xcc
   140060560:	jrcxz  0x140060570
   140060562:	rol    BYTE PTR [rdx],0xdf
   140060565:	mov    dh,0xfc
   140060567:	or     BYTE PTR [rbx+rdi*4-0x5e],bh
   14006056b:	or     ch,bh
   14006056d:	mov    dh,0x8c
   14006056f:	(bad)  
   140060570:	cmp    al,0x9f
   140060572:	or     dl,ah
   140060574:	sbb    DWORD PTR [rdi],0xffffff9b
   140060577:	mov    eax,gs
   140060579:	sbb    eax,0xfff8fb2e
   14006057e:	xlat   BYTE PTR ds:[rbx]
   14006057f:	or     BYTE PTR [rsi+0x5e],bh
   140060582:	hlt    
   140060583:	cmp    esp,ebx
   140060585:	sub    edi,DWORD PTR [rdi+0xe]
   140060588:	jle    0x1400605de
   14006058a:	outs   dx,DWORD PTR ds:[rsi]
   14006058b:	leave  
   14006058c:	adc    DWORD PTR es:[rdi-0x7c],0xe1638323
   140060594:	mov    ebp,0x60fc09d8
   140060599:	js     0x1400605de
   14006059b:	xor    al,0x1f
   14006059d:	jbe    0x14006055c
   14006059f:	adc    DWORD PTR [rbx-0x397aba80],edx
   1400605a5:	lods   al,BYTE PTR ds:[rsi]
   1400605a6:	adc    BYTE PTR [rax+rdi*2+0x19],0x65
   1400605ab:	push   0xffffffffffffff9a
   1400605ad:	adc    ah,0x38
   1400605b0:	loopne 0x1400605d4
   1400605b2:	or     DWORD PTR [rax-0x32c2bcc4],ecx
   1400605b8:	ror    DWORD PTR [rip+0x639c8a1e],0xc1        # 0x1a3a28fdd
   1400605bf:	rex.WRXB (bad) 
   1400605c1:	jne    0x1400605aa
   1400605c3:	add    al,0x40
   1400605c5:	retf   
   1400605c6:	push   rsi
   1400605c7:	pop    rdi
   1400605c8:	adc    al,0xbe
   1400605ca:	mov    dh,0xf6
   1400605cc:	(bad)  
   1400605cd:	jo     0x140060647
   1400605cf:	push   0xffffffffe0451865
   1400605d4:	(bad)  
   1400605d5:	loopne 0x1400605b8
   1400605d7:	loop   0x1400605ba
   1400605d9:	xor    DWORD PTR [rsi+0x0],ecx
   1400605dc:	cmp    BYTE PTR [rax],cl
   1400605de:	fild   DWORD PTR [rax+rax*8-0x37]
   1400605e2:	and    BYTE PTR [rsi+0x8],cl
   1400605e5:	pushf  
   1400605e6:	adc    al,0x8
   1400605e8:	jae    0x14006061c
   1400605ea:	loopne 0x1400605c2
   1400605ec:	(bad)  
   1400605ed:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400605ee:	int    0xa1
   1400605f0:	(bad)  
   1400605f1:	xlat   BYTE PTR ds:[rbx]
   1400605f2:	(bad)  
   1400605f3:	sbb    ah,dh
   1400605f5:	(bad)  
   1400605f6:	clc    
   1400605f7:	imul   ebp,ebx,0x263dab6f
   1400605fd:	sbb    BYTE PTR [rax],0xf8
   140060600:	mov    BYTE PTR [rbx+rbx*2-0xb],ch
   140060604:	cdq    
   140060605:	rex.RXB outs dx,DWORD PTR ds:[rsi]
   140060607:	xor    al,dh
   140060609:	sub    eax,0x3db241f8
   14006060e:	(bad)  
   14006060f:	lock rex.RXB (bad) 
   140060612:	scas   al,BYTE PTR es:[rdi]
   140060613:	(bad)  
   140060614:	jmp    rcx
   140060616:	jmp    0x1bf82e772
   14006061b:	ret    
   14006061c:	cdq    
   14006061d:	cmp    edi,esp
   14006061f:	addr32 jnp 0x1400605bb
   140060622:	(bad)  
   140060623:	rcr    DWORD PTR [rdi+0x24db647],0xd7
   14006062a:	test   BYTE PTR [rbx],ah
   14006062c:	fcom   DWORD PTR [rcx]
   14006062e:	std    
   14006062f:	pop    rdi
   140060630:	cwde   
   140060631:	add    al,0xee
   140060633:	pop    rdx
   140060634:	and    DWORD PTR [rdi-0x2d4ced8],0xcf6faefc
   14006063e:	cmp    edi,eax
   140060640:	cmp    DWORD PTR [rsi+0x1d11c397],edx
   140060646:	xchg   ebx,eax
   140060647:	jg     0x1400606a6
   140060649:	add    BYTE PTR [rbx],bl
   14006064b:	mov    DWORD PTR [rbp+0x7467879c],ecx
   140060651:	xor    DWORD PTR [rcx],esp
   140060653:	in     al,0xe0
   140060655:	(bad)  
   140060656:	(bad)  
   140060657:	ins    BYTE PTR es:[rdi],dx
   140060658:	mov    DWORD PTR [rdi],0xfe57dcba
   14006065e:	call   0x15cf93a18
   140060663:	rex (bad) 
   140060665:	std    
   140060666:	jb     0x1400606e7
   140060668:	jns    0x140060694
   14006066a:	or     BYTE PTR [rcx-0x20],0xa3
   14006066e:	sbb    ebx,DWORD PTR [rdi+0x1d]
   140060671:	fidivr WORD PTR [rbx-0xc]
   140060674:	sahf   
   140060675:	loop   0x140060688
   140060677:	pop    rsi
   140060678:	jnp    0x140060614
   14006067a:	(bad)  
   14006067b:	(bad)  
   14006067d:	xchg   DWORD PTR [rax+0x55c348bd],ebx
   140060683:	popf   
   140060684:	ror    ebx,0x13
   140060687:	fs mov ebx,0xb7840882
   14006068d:	adc    al,dh
   14006068f:	lahf   
   140060690:	sub    edi,DWORD PTR [rax]
   140060692:	(bad)  
   140060693:	xor    ah,al
   140060695:	jge    0x1400606cb
   140060697:	fcomp  QWORD PTR [rax-0x19]
   14006069a:	mov    ebp,0xc41c59b4
   14006069f:	sub    eax,0x513391c8
   1400606a4:	es jrcxz 0x1400606fd
   1400606a7:	(bad)  
   1400606a8:	or     dl,dh
   1400606aa:	mov    cs,WORD PTR [ebp-0x3e05a07a]
   1400606b1:	fwait
   1400606b2:	ret    0x6181
   1400606b5:	fsubr  st(6),st
   1400606b7:	pop    rbx
   1400606b8:	jg     0x140060723
   1400606ba:	xchg   esp,eax
   1400606bb:	int    0xbf
   1400606bd:	mov    ch,0x41
   1400606bf:	mov    bl,0xf0
   1400606c1:	and    BYTE PTR [rbx-0x7b],ah
   1400606c4:	sub    DWORD PTR [rcx],ecx
   1400606c6:	adc    al,0x60
   1400606c8:	add    edx,DWORD PTR [rax-0xc36a82b]
   1400606ce:	(bad)
   1400606d2:	jecxz  0x14006072a
   1400606d5:	(bad)  
   1400606d6:	out    dx,al
   1400606d7:	(bad)
   1400606da:	lahf   
   1400606db:	scas   al,BYTE PTR es:[rdi]
   1400606dc:	mov    edi,0x1bedec3e
   1400606e1:	or     eax,0xb1e078bf
   1400606e6:	lock cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400606e8:	out    0x1f,eax
   1400606ea:	or     bh,bl
   1400606ec:	cmp    ch,BYTE PTR [rdi+0x6b]
   1400606ef:	movabs ds:0x48592f22b8907c58,eax
   1400606f8:	outs   dx,BYTE PTR ds:[rsi]
   1400606f9:	adc    BYTE PTR [rax+0x245c029a],dl
   1400606ff:	add    DWORD PTR [rcx+0x39a7a867],edx
   140060705:	mov    eax,0x5a9143c1
   14006070a:	(bad)  
   14006070b:	sahf   
   14006070c:	sub    eax,ecx
   14006070e:	rex.WRXB
   14006070f:	addr32 popf 
   140060711:	leave  
   140060712:	out    0x0,eax
   140060714:	(bad)  
   140060715:	addr32 mov esp,0x1b15df9c
   14006071b:	ret    0x8edf
   14006071e:	pop    rbp
   14006071f:	sbb    eax,0x34781a6e
   140060724:	pop    rsp
   140060725:	fidivr DWORD PTR [rdi+0x24]
   140060728:	ds (bad) 
   14006072a:	retf   
   14006072b:	sti    
   14006072c:	sti    
   14006072d:	mov    al,0x3a
   14006072f:	ffreep st(3)
   140060731:	xlat   BYTE PTR ds:[rbx]
   140060732:	rex.WX
   140060733:	mov    WORD PTR ds:[rax+0x1d],gs
   140060737:	ret    
   140060738:	mov    edx,0x80138388
   14006073d:	popf   
   14006073e:	jmp    0x140060773
   140060740:	nop
   140060741:	push   rbx
   140060742:	mov    dl,0x7e
   140060744:	rex.RXB cld 
   140060746:	iret   
   140060747:	add    r11,QWORD PTR [r10+0x133d099c]
   14006074e:	shl    DWORD PTR [rcx],cl
   140060750:	adc    BYTE PTR [rsi-0x36],ah
   140060753:	xchg   ecx,eax
   140060754:	adc    eax,DWORD PTR [eax+0xc]
   140060758:	jl     0x14006072c
   14006075a:	(bad)  
   14006075b:	(bad)  
   14006075c:	(bad)  
   14006075d:	test   BYTE PTR [rbp-0x71],ch
   140060760:	jrcxz  0x140060753
   140060762:	fidivr WORD PTR [rsi]
   140060764:	cmp    al,0xc7
   140060766:	mov    edi,0x9b28e2f6
   14006076b:	jg     0x1400607d8
   14006076d:	add    esi,0xffffff8d
   140060770:	mov    BYTE PTR [rsi+riz*1],0xdd
   140060774:	es out dx,eax
   140060776:	(bad)  
   140060777:	add    DWORD PTR [rdx],0x1366006c
   14006077d:	movabs ds:0x6d1498e12523cf7a,al
   140060786:	adc    bl,al
   140060788:	mov    bh,0x23
   14006078a:	fdiv   QWORD PTR [rcx]
   14006078c:	test   edx,0x557063b0
   140060792:	clc    
   140060793:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140060794:	iret   
   140060795:	fistp  WORD PTR [rdi+0x4c]
   140060798:	add    BYTE PTR [rdx],cl
   14006079a:	jl     0x140060743
   14006079c:	and    ch,dl
   14006079e:	pop    rsp
   14006079f:	(bad)  
   1400607a0:	mov    edi,0x3e614f6a
   1400607a5:	sbb    ah,BYTE PTR [rdi+0x128809f6]
   1400607ab:	xchg   BYTE PTR [rdx-0x66],bh
   1400607ae:	sbb    DWORD PTR [rbx],0x3c
   1400607b1:	adc    al,0xa9
   1400607b3:	cmc    
   1400607b4:	jrcxz  0x14006076f
   1400607b6:	adc    al,0xfc
   1400607b8:	je     0x140060812
   1400607ba:	ja     0x14006080b
   1400607bc:	add    BYTE PTR [rax+rdx*1+0x1e0f80bb],dh
   1400607c3:	mov    eax,0x7632dc36
   1400607c8:	scas   eax,DWORD PTR es:[rdi]
   1400607c9:	push   rsi
   1400607ca:	jp     0x1400607d1
   1400607cc:	cmp    eax,0x451fd57
   1400607d1:	(bad)
   1400607d4:	out    dx,eax
   1400607d5:	addr32 or al,0x2b
   1400607d8:	and    al,0xb7
   1400607da:	sti    
   1400607db:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400607dc:	and    DWORD PTR [rdx-0x698ca94],ebx
   1400607e2:	xchg   esp,eax
   1400607e3:	lods   al,BYTE PTR ds:[rsi]
   1400607e4:	lahf   
   1400607e5:	xor    DWORD PTR [rax],eax
   1400607e7:	out    0x20,al
   1400607e9:	xor    esi,DWORD PTR [rdi]
   1400607eb:	mov    BYTE PTR [rsi+0x73],ah
   1400607ee:	ret    0xc718
   1400607f1:	and    al,0x70
   1400607f3:	adc    al,0xb3
   1400607f5:	add    dl,BYTE PTR [rbx]
   1400607f7:	and    esi,DWORD PTR [rax]
   1400607f9:	rex.RXB and DWORD PTR [r8+0x2c],r11d
   1400607fd:	iret   
   1400607fe:	jae    0x1400607fe
   140060800:	rex.RXB cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140060802:	jo     0x14006084f
   140060804:	(bad)  
   140060805:	jg     0x14006079b
   140060807:	in     al,0x94
   140060809:	sahf   
   14006080a:	lock xor eax,ebp
   14006080d:	cmc    
   14006080e:	add    DWORD PTR [rax-0x5e],ecx
   140060811:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140060812:	mov    ecx,0xca3aa617
   140060817:	cmp    ebx,ecx
   140060819:	(bad)  
   14006081a:	out    dx,eax
   14006081b:	shr    ebp,0xd2
   14006081e:	or     BYTE PTR [rbx-0x30bc08e5],0xf
   140060825:	(bad)  
   140060826:	ja     0x1400607d3
   140060828:	mov    edi,0x652f5bd3
   14006082d:	rex.RB xchg r15d,eax
   14006082f:	vcvtsd2ss xmm12,xmm14,QWORD PTR [rsi+0x2d8809c6]
   140060837:	xor    edx,esp
   140060839:	rcr    DWORD PTR [rsp+rbx*8],cl
   14006083c:	loopne 0x1400607df
   14006083e:	enter  0x1e39,0xfc
   140060842:	je     0x1400607de
   140060844:	pop    rbx
   140060845:	and    esp,DWORD PTR [rbx+0x17eebb0f]
   14006084b:	mov    ebx,0x61e24f80
   140060850:	ret    0xe189
   140060853:	rcl    eax,0x8f
   140060856:	or     edi,DWORD PTR [rbp+rdi*4-0x48]
   14006085a:	(bad)  
   14006085b:	rol    BYTE PTR [rbx-0x1fbd53dd],1
   140060861:	pop    rdi
   140060862:	xor    al,0x1c
   140060864:	jp     0x140060895
   140060866:	sbb    cl,BYTE PTR [rdx]
   140060868:	jge    0x1400608d5
   14006086a:	sti    
   14006086b:	rex.X (bad) 
   14006086d:	scas   al,BYTE PTR es:[rdi]
   14006086e:	add    eax,esi
   140060870:	mov    esp,0xfc1707bf
   140060875:	jp     0x1400608f0
   140060877:	ror    DWORD PTR [rdi],1
   140060879:	xor    DWORD PTR [rsi-0x28],ecx
   14006087c:	jb     0x140060840
   14006087e:	jmp    0x137e3f84b
   140060883:	lock mov cl,0xc2
   140060886:	adc    eax,0x818ee010
   14006088b:	xchg   ebx,eax
   14006088c:	(bad)  
   14006088d:	cmp    eax,0x6c07c0c1
   140060892:	ror    DWORD PTR [rdi+0x3f9f7ddb],0x70
   140060899:	shr    DWORD PTR [rcx-0x719421c1],1
   14006089f:	lods   al,BYTE PTR ds:[rsi]
   1400608a0:	cmovo  edx,DWORD PTR [rdx]
   1400608a3:	cmp    eax,0x5f83e4ed
   1400608a8:	(bad)
   1400608ab:	jne    0x14006087c
   1400608ad:	cli    
   1400608ae:	retf   
   1400608af:	ret    
   1400608b0:	clc    
   1400608b1:	fs (bad) 
   1400608b3:	sti    
   1400608b4:	sub    eax,0x5b54ebd0
   1400608b9:	cmc    
   1400608ba:	retf   
   1400608bb:	out    dx,al
   1400608bc:	(bad)  
   1400608bd:	mov    bh,0xb1
   1400608bf:	(bad)  
   1400608c0:	pop    rax
   1400608c1:	rex.XB cmp eax,0x1e0dc1cd
   1400608c7:	mov    ebx,0x9e81f1c1
   1400608cc:	imul   ebp,DWORD PTR [rbx],0xffffffbf
   1400608cf:	or     eax,0x6100f80d
   1400608d4:	mov    cl,0x4
   1400608d6:	adc    dh,BYTE PTR [rsi+0x1]
   1400608d9:	(bad)  
   1400608da:	(bad)  
   1400608db:	mov    esp,0xb1dbfc2a
   1400608e0:	(bad)  
   1400608e1:	mov    al,0xbd
   1400608e3:	rex.RXB xchg r12d,eax
   1400608e5:	scas   al,BYTE PTR es:[rdi]
   1400608e6:	sar    DWORD PTR [rbx+0xb5c087e],0xf4
   1400608ed:	adc    al,0xbc
   1400608ef:	mov    dh,0xe2
   1400608f1:	xor    ecx,DWORD PTR [rax-0x6461b503]
   1400608f7:	xchg   BYTE PTR [rsi-0x37ff944a],bh
   1400608fd:	stc    
   1400608fe:	cmp    eax,0xc0eed12
   140060903:	or     BYTE PTR [rbx],0x38
   140060906:	sbb    BYTE PTR [rsi-0x10ff6255],ah
   14006090c:	repz jg 0x1400608fb
   14006090f:	add    eax,0xb8dfebdc
   140060914:	add    eax,0x62aae1f5
   140060919:	rex.WRX mov bpl,0x41
   14006091c:	push   rbx
   14006091d:	rex.R pushf 
   14006091f:	lea    esp,[rdi]
   140060921:	sti    
   140060922:	rex.WB ror BYTE PTR [r14],cl
   140060925:	(bad)  
   140060926:	sub    al,al
   140060928:	(bad)  
   140060929:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14006092a:	test   eax,0x523cf255
   14006092f:	sbb    eax,0x45c0426e
   140060934:	rex.WX add BYTE PTR [rsi+0x31],bl
   140060938:	out    dx,al
   140060939:	sbb    DWORD PTR [rdx+0x11],ebx
   14006093c:	(bad)
   140060940:	xor    al,0xa9
   140060942:	rex.RX mov spl,r12b
   140060945:	and    eax,0xa8f68bfc
   14006094a:	rex.WB add dl,BYTE PTR [r10+0x63]
   14006094e:	cdq    
   14006094f:	jns    0x1400608eb
   140060951:	or     DWORD PTR [rip+0xffffffff9689b874],0xfffffff8        # 0xd68fc1cc
   140060958:	mov    ecx,0x574fc1a
   14006095d:	rex.XB cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14006095f:	sti    
   140060960:	adc    esi,DWORD PTR [rsi+0x1]
   140060963:	(bad)  
   140060964:	cmp    bh,ah
   140060966:	retf   0x7070
   140060969:	(bad)  
   14006096a:	push   0x2b00b9e8
   14006096f:	(bad)  
   140060970:	push   0xffffffffffffffac
   140060972:	clc    
   140060973:	mov    eax,0x7857e7cd
   140060978:	jl     0x1400609bb
   14006097a:	add    al,0xab
   14006097c:	cmp    al,0x9e
   14006097e:	ins    BYTE PTR es:[rdi],dx
   14006097f:	(bad)  
   140060980:	lahf   
   140060981:	(bad)  
   140060982:	mov    DWORD PTR [rax],0x49c01e72
   140060988:	iret   
   140060989:	stos   DWORD PTR es:[rdi],eax
   14006098a:	mov    esp,0xe55cf0ad
   14006098f:	jns    0x140060941
   140060991:	cmc    
   140060992:	cmp    BYTE PTR [rip+0xffffffffc479a7c0],ah        # 0x1047fb158
   140060998:	(bad)  
   140060999:	cld    
   14006099a:	dec    BYTE PTR [rbp-0x17]
   14006099d:	jbe    0x14006097e
   14006099f:	xchg   esi,eax
   1400609a0:	clc    
   1400609a1:	cmp    ch,BYTE PTR [rdi-0xa]
   1400609a4:	rex.WRX and r12,QWORD PTR [rax-0x2fcddf24]
   1400609ab:	loope  0x140060a2b
   1400609ad:	xor    BYTE PTR [rdx-0xa9cffd4],cl
   1400609b3:	lods   al,BYTE PTR gs:[rsi]
   1400609b5:	cld    
   1400609b6:	pop    rsi
   1400609b7:	(bad)  
   1400609b8:	ins    DWORD PTR es:[rdi],dx
   1400609b9:	ret    
   1400609ba:	(bad)
   1400609bd:	sub    DWORD PTR [rbx-0x468d5344],ebx
   1400609c3:	rex.WRXB
   1400609c4:	rex ins BYTE PTR es:[rdi],dx
   1400609c6:	sahf   
   1400609c7:	movabs eax,ds:0xfd6a450f06e0e69e
   1400609d0:	js     0x140060a00
   1400609d2:	(bad)  
   1400609d3:	(bad)  
   1400609d4:	sbb    eax,0x7634b8
   1400609d9:	xor    ah,dh
   1400609db:	ror    BYTE PTR [rdx-0x2cf41e33],0x17
   1400609e2:	xchg   DWORD PTR [rdi-0x74],esi
   1400609e5:	cmp    al,0x1b
   1400609e7:	xor    DWORD PTR [rdi],0xffffffaf
   1400609ea:	cld    
   1400609eb:	mov    ebp,0x811c2608
   1400609f0:	(bad)  
   1400609f1:	mov    esp,0xd0653fab
   1400609f6:	(bad)  
   1400609f7:	mov    bl,0x38
   1400609f9:	lock sahf 
   1400609fb:	cmp    eax,0x145f5693
   140060a00:	fwait
   140060a01:	mov    bl,0xf7
   140060a03:	mov    ebx,?
   140060a05:	ret    0x723
   140060a08:	push   rsi
   140060a09:	fadd   st,st(7)
   140060a0b:	cmp    al,0xec
   140060a0d:	ret    
   140060a0e:	sbb    eax,0x4e4778fc
   140060a13:	mov    ch,0x41
   140060a15:	push   rbx
   140060a16:	rex.R pop rsp
   140060a18:	movsxd edx,DWORD PTR [rax+0x14962119]
   140060a1e:	sub    al,al
   140060a20:	(bad)  
   140060a21:	movabs al,ds:0x99e1c123cf2936ea
   140060a2a:	(bad)  
   140060a2b:	xchg   edx,eax
   140060a2c:	add    bl,ah
   140060a2e:	cwde   
   140060a2f:	ins    BYTE PTR es:[rdi],dx
   140060a30:	add    dl,BYTE PTR [r10-0x56367910]
   140060a37:	(bad)  
   140060a38:	xchg   edx,eax
   140060a39:	retf   
   140060a3a:	(bad)  
   140060a3b:	in     eax,dx
   140060a3c:	repz or eax,0x70179e30
   140060a42:	jo     0x1400609c7
   140060a44:	xchg   DWORD PTR [rdx-0x146358cb],eax
   140060a4a:	ror    edi,0xc1
   140060a4d:	mov    dl,0x34
   140060a4f:	jbe    0x140060a51
   140060a51:	in     al,dx
   140060a52:	hlt    
   140060a53:	xchg   ebp,eax
   140060a54:	fwait
   140060a55:	ret    0x6def
   140060a58:	jg     0x140060abf
   140060a5a:	fdivr  st(6),st
   140060a5c:	fstp   TBYTE PTR [rcx+0xac78c3d]
   140060a62:	fild   WORD PTR [rbx+0x5cfeaf23]
   140060a68:	jmp    0xf815adf8
   140060a6d:	sbb    eax,0x289cf28
   140060a72:	jo     0x140060aa3
   140060a74:	fbstp  TBYTE PTR [rcx+0x61d3ab65]
   140060a7a:	(bad)  
   140060a7b:	or     eax,0x333c9931
   140060a80:	mov    bl,0x22
   140060a82:	cld    
   140060a83:	shl    BYTE PTR [rbx-0x48],cl
   140060a86:	fnsave [rdi]
   140060a88:	cmp    BYTE PTR [rdi],0x44
   140060a8b:	mov    edx,0x52040b7e
   140060a90:	stos   BYTE PTR es:[rdi],al
   140060a91:	or     eax,0xd918451a
   140060a96:	lea    eax,[rcx+0x56]
   140060a99:	(bad)  
   140060a9a:	adc    BYTE PTR [rdx],0x8a
   140060a9d:	retf   0xeba0
   140060aa0:	mov    WORD PTR [rsi],es
   140060aa2:	jg     0x140060a50
   140060aa4:	gs cdq 
   140060aa6:	(bad)  
   140060aa7:	cmp    bl,bh
   140060aa9:	retf   0x9ead
   140060aac:	out    0x60,al
   140060aae:	add    ebx,DWORD PTR [rip+0xffffffffde25f26e]        # 0x11e2bfd22
   140060ab4:	(bad)  
   140060ab5:	jg     0x140060ad3
   140060ab7:	mov    ecx,DWORD PTR [rbx+0x66]
   140060aba:	(bad)  
   140060abb:	shr    BYTE PTR [rbx+0x5cf74ff0],0x18
   140060ac2:	mov    esi,0xf85d7fb9
   140060ac7:	jmp    0x10b663a19
   140060acc:	mov    es,WORD PTR [rsi]
   140060ace:	fmul   st,st(2)
   140060ad0:	(bad)  
   140060ad1:	fsubrp st(5),st
   140060ad3:	or     DWORD PTR [rsi],edi
   140060ad5:	and    cl,bl
   140060ad7:	rex.WRX jmp 0x1a4878f50
   140060add:	mov    cl,0xcb
   140060adf:	jle    0x140060b08
   140060ae1:	sbb    esi,DWORD PTR [rsp+rdi*2+0x63]
   140060ae5:	xchg   esp,eax
   140060ae6:	ret    0x87f8
   140060ae9:	fwait
   140060aea:	rex.WXB movabs r8,0xe99c1cca0053c018
   140060af4:	pxor   mm7,QWORD PTR [rax+rdi*8-0x6]
   140060af9:	jo     0x140060a9b
   140060afb:	ja     0x140060ad2
   140060afd:	ror    BYTE PTR [rsi],cl
   140060aff:	jle    0x140060ab7
   140060b01:	xor    eax,0x216c4ace
   140060b06:	xchg   ecx,eax
   140060b07:	gs nop
   140060b09:	cmp    dh,BYTE PTR [rbx+rax*8-0x2fc9cc4b]
   140060b10:	leave  
   140060b11:	xor    al,0x78
   140060b13:	nop
   140060b14:	test   al,0x4d
   140060b16:	loop   0x140060b85
   140060b18:	lock cmps DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140060b1a:	test   DWORD PTR [rax],ecx
   140060b1c:	mov    esi,0x133a5a
   140060b21:	jnp    0x140060b3d
   140060b23:	(bad)  
   140060b24:	add    edi,edi
   140060b26:	shl    edi,cl
   140060b28:	scas   eax,DWORD PTR es:[rdi]
   140060b29:	or     al,0xff
   140060b2b:	repz repz imul eax,DWORD PTR fs:[rip+0x7a0024e7],0x796c009a        # 0x1ba06301f
   140060b38:	in     eax,0x4
   140060b3a:	nop
   140060b3b:	mov    BYTE PTR [rbx+0xf],0x3
   140060b3f:	(bad)  
   140060b40:	cmp    DWORD PTR [rsi],0x727f07c7
   140060b46:	loopne 0x140060b6f
   140060b48:	jno    0x140060b38
   140060b4a:	add    BYTE PTR [rax],bh
   140060b4c:	or     DWORD PTR [rsp+rax*8],ebx
   140060b4f:	rex.RXB cmp r13d,DWORD PTR [r15-0x44]
   140060b53:	sti    
   140060b54:	jne    0x140060b37
   140060b56:	xchg   ecx,eax
   140060b57:	or     DWORD PTR [rcx+rdi*8+0x37],ebp
   140060b5b:	pop    rbp
   140060b5c:	or     eax,0x40b73cbd
   140060b61:	stos   BYTE PTR es:[rdi],al
   140060b62:	or     eax,0x9e35291a
   140060b67:	jle    0x140060b71
   140060b69:	and    BYTE PTR [rbp-0x2c2ff4f6],ah
   140060b6f:	xchg   edx,eax
   140060b70:	ret    
   140060b71:	rex.WRB mov r14b,0x10
   140060b74:	rex.WX
   140060b75:	rex.RB popf 
   140060b77:	lods   al,BYTE PTR ds:[rsi]
   140060b78:	leave  
   140060b79:	add    BYTE PTR [rdi],dl
   140060b7b:	rex.WB
   140060b7c:	sub    bpl,bpl
   140060b7f:	jns    0x140060bcf
   140060b81:	push   rdi
   140060b82:	adc    cl,bl
   140060b84:	ror    BYTE PTR [rip+0xffffffffa5e953f3],cl        # 0xe5ef5f7d
   140060b8a:	xchg   esi,eax
   140060b8b:	in     eax,0xf6
   140060b8d:	enter  0x236e,0x78
   140060b91:	stos   BYTE PTR es:[rdi],al
   140060b92:	sbb    DWORD PTR [rbx],0x3c
   140060b95:	xchg   esp,eax
   140060b96:	stos   BYTE PTR es:[rdi],al
   140060b97:	cmp    DWORD PTR [rdx-0x7d501f3],esp
   140060b9d:	jmp    0x152d591f5
   140060ba2:	rex.WB call 0x137d4c805
   140060ba8:	lea    eax,[rbx]
   140060baa:	xchg   edi,eax
   140060bab:	test   DWORD PTR [rdi+0x1925e28f],esp
   140060bb1:	(bad)  
   140060bb3:	xchg   ebx,eax
   140060bb4:	(bad)  
   140060bb5:	(bad)  
   140060bb6:	repnz (bad) 
   140060bb9:	(bad)  
   140060bba:	in     eax,dx
   140060bbb:	or     ch,BYTE PTR [rbx+rbx*8-0x31]
   140060bbf:	fld    QWORD PTR [rcx-0x7cbc03a3]
   140060bc5:	rex.B out 0x8e,eax
   140060bc8:	sub    DWORD PTR [rbp-0x67f42833],0x6fbd8bf3
   140060bd2:	stc    
   140060bd3:	(bad)  
   140060bd4:	(bad)  
   140060bd5:	push   rax
   140060bd7:	(bad)  
   140060bd8:	bnd jbe 0x140060c3a
   140060bdb:	ins    DWORD PTR es:[rdi],dx
   140060bdc:	sar    BYTE PTR [rax-0x4fef1398],1
   140060be2:	rcr    BYTE PTR [rbx+0x36014093],1
   140060be8:	add    bl,dh
   140060bea:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140060beb:	and    al,0x8a
   140060bed:	jns    0x140060c0d
   140060bef:	sub    DWORD PTR [rsi],ecx
   140060bf1:	(bad)  
   140060bf2:	add    eax,esp
   140060bf4:	and    cl,BYTE PTR [rcx]
   140060bf6:	mov    BYTE PTR [rbp-0x37],al
   140060bf9:	sub    BYTE PTR [rax+0x9],cl
   140060bfc:	adc    DWORD PTR [rbp+0x40],ecx
   140060bff:	xchg   edx,eax
   140060c00:	pop    rdi
   140060c01:	cwd    
   140060c03:	xor    eax,0xc1d1b7cf
   140060c08:	or     eax,0xeb5eda1e
   140060c0d:	(bad)  
   140060c0e:	ss clc 
   140060c10:	retf   
   140060c11:	loopne 0x140060bfa
   140060c13:	call   0x180192e70
   140060c18:	(bad)  
   140060c19:	push   0xffffffffc868f866
   140060c1e:	out    dx,eax
   140060c1f:	cmp    al,0x84
   140060c21:	(bad)  
   140060c22:	jae    0x140060c9c
   140060c24:	mov    esi,0x5a0f016f
   140060c29:	sbb    DWORD PTR [rcx+0x6c],esp
   140060c2c:	xchg   edi,eax
   140060c2d:	sar    DWORD PTR [rax+0x9a7cfed],1
   140060c33:	cmp    eax,esi
   140060c35:	repz rol DWORD PTR cs:[rdx-0x3efe001],0x87
   140060c3e:	adc    ah,bh
   140060c40:	out    0x41,eax
   140060c42:	(bad)  
   140060c43:	mov    edi,0x1b54cbd6
   140060c48:	xor    al,0x45
   140060c4a:	(bad)  
   140060c4b:	xor    eax,0xcbb25906
   140060c50:	retf   0x6959
   140060c53:	sub    cl,al
   140060c55:	sub    cl,0x2a
   140060c58:	rex.WRB
   140060c59:	repz mov esp,0x32a50a2
   140060c5f:	mov    esi,0xe0740444
   140060c64:	mov    ecx,0x601312b2
   140060c69:	repnz (bad) 
   140060c6b:	xchg   esi,eax
   140060c6c:	ret    
   140060c6d:	xchg   ecx,eax
   140060c6e:	sbb    bl,BYTE PTR [rdi-0x17241d04]
   140060c74:	(bad)  
   140060c75:	add    ebx,DWORD PTR [rip+0xfffffffff129ee6e]        # 0x1312ffae9
   140060c7b:	ss clc 
   140060c7d:	fwait
   140060c7e:	ror    DWORD PTR [rdi-0x59],0x2e
   140060c82:	or     DWORD PTR [rcx],0xee647520
   140060c88:	rex.WRXB movabs r12,0x538384b767d9f829
   140060c92:	mov    eax,0xa9227812
   140060c97:	cwde   
   140060c98:	add    al,0x50
   140060c9a:	add    BYTE PTR [rip+0x17ffb6e6],ch        # 0x15805c386
   140060ca0:	mov    edi,0x91e193f2
   140060ca5:	or     ebx,0x30
   140060ca8:	clc    
   140060ca9:	jmp    0x103f647d5
   140060cae:	leave  
   140060caf:	ins    BYTE PTR es:[rdi],dx
   140060cb0:	leave  
   140060cb1:	(bad)  
   140060cb2:	test   eax,0x98ccd53d
   140060cb7:	or     eax,ecx
   140060cb9:	xor    ecx,eax
   140060cbb:	(bad)  
   140060cbc:	mov    ebx,0xdbc49b54
   140060cc1:	loopne 0x140060cb2
   140060cc3:	sbb    al,0xfc
   140060cc5:	hlt    
   140060cc6:	pop    rax
   140060cc7:	xchg   edi,eax
   140060cc8:	rex.WRXB add BYTE PTR [r9+0x11bfd563],r13b
   140060ccf:	cmp    BYTE PTR [rax],dh
   140060cd1:	jb     0x140060d3c
   140060cd3:	mov    eax,0xb89787ed
   140060cd8:	(bad)  
   140060cd9:	(bad)  
   140060cda:	(bad)  
   140060cdb:	enter  0xd865,0xae
   140060cdf:	adc    ecx,esp
   140060ce1:	test   DWORD PTR [rdi-0x40f35209],eax
   140060ce7:	(bad)
   140060ceb:	xchg   DWORD PTR [rdi],ecx
   140060ced:	loopne 0x140060cc2
   140060cef:	fcmove st,st(3)
   140060cf1:	outs   dx,BYTE PTR ds:[rsi]
   140060cf2:	in     eax,0x97
   140060cf4:	movabs ds:0xaff7c6b55feac596,eax
   140060cfd:	movabs ds:0xf35fc1b58a70e81a,eax
   140060d06:	sar    esp,0xc1
   140060d09:	rex.WRXB ja 0x140060d81
   140060d0c:	icebp  
   140060d0d:	add    al,0x90
   140060d0f:	cmp    dl,BYTE PTR [rsi-0x3]
   140060d12:	sub    eax,DWORD PTR [rax]
   140060d14:	iret   
   140060d15:	jmp    FWORD PTR [rdi+0x8f47f0d]
   140060d1b:	mov    dh,0xed
   140060d1d:	(bad)  
   140060d1e:	xchg   ecx,eax
   140060d1f:	js     0x140060cd2
   140060d21:	lock jae 0x140060d73
   140060d24:	ins    DWORD PTR es:[rdi],dx
   140060d25:	or     bh,BYTE PTR [rdi+0x86fb7f0]
   140060d2b:	pxor   mm3,QWORD PTR [rdi-0x32]
   140060d2f:	ror    DWORD PTR [rdi+0x3f],0xe1
   140060d33:	rex.W fst DWORD PTR [rdx+0x7600d5cf]
   140060d3a:	mov    dh,0x1b
   140060d3c:	add    eax,DWORD PTR [rsi]
   140060d3e:	cmp    bl,ah
   140060d40:	fsub   DWORD PTR [rip+0xbfcaede]        # 0x14c02bc24
   140060d46:	(bad)  
   140060d47:	(bad)  
   140060d48:	std    
   140060d49:	fldenv [rbp+0x48ea4013]
   140060d4f:	cmc    
   140060d50:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140060d51:	add    BYTE PTR [rsi+0x33],dh
   140060d54:	rex.WRXB in al,dx
   140060d56:	ret    
   140060d57:	shl    DWORD PTR [rbx-0x48983c65],cl
   140060d5d:	xlat   BYTE PTR ds:[rbx]
   140060d5e:	mov    esi,0x8db91bc4
   140060d63:	fild   WORD PTR [rbx]
   140060d65:	xchg   ebx,eax
   140060d66:	add    esp,ecx
   140060d68:	xlat   BYTE PTR ds:[rbx]
   140060d69:	mov    edi,0x1ff86d71
   140060d6e:	mov    edi,0xf7f08ff8
   140060d73:	ja     0x140060de5
   140060d75:	stos   DWORD PTR es:[rdi],eax
   140060d76:	outs   dx,DWORD PTR ds:[rsi]
   140060d77:	mov    ecx,0x4dcefcae
   140060d7c:	add    al,0x97
   140060d7e:	ret    
   140060d7f:	push   rcx
   140060d80:	jne    0x140060de8
   140060d82:	lods   eax,DWORD PTR ds:[rsi]
   140060d83:	jno    0x140060e03
   140060d85:	xor    ah,BYTE PTR [rax-0x280d44b0]
   140060d8b:	jl     0x140060dfd
   140060d8d:	cld    
   140060d8e:	loopne 0x140060d37
   140060d90:	or     edi,DWORD PTR [rbx-0x159fc910]
   140060d96:	push   0x3880b7f5
   140060d9b:	(bad)  
   140060d9c:	jb     0x140060de5
   140060d9e:	jrcxz  0x140060df3
   140060da0:	loop   0x140060dc1
   140060da2:	clc    
   140060da3:	fsubrp st(5),st
   140060da5:	loope  0x140060dbe
   140060da7:	fistp  DWORD PTR cs:[rbp-0x73]
   140060dab:	xchg   ecx,eax
   140060dac:	(bad)  
   140060dad:	shr    BYTE PTR [rbp+0x3f],1
   140060db0:	fsubr  DWORD PTR [rcx+rax*8-0x31]
   140060db4:	rex.WB sar r14b,0x52
   140060db8:	nop    edx
   140060dbb:	pop    rcx
   140060dbc:	loop   0x140060d75
   140060dbe:	cli    
   140060dbf:	(bad)  
   140060dc0:	push   0xfffffffffe56c6e7
   140060dc5:	(bad)  
   140060dc6:	test   DWORD PTR [rdx+0xe5d1663],0x9e7735b9
   140060dd0:	xor    DWORD PTR [rcx-0x3512826],edx
   140060dd6:	(bad)  
   140060dd7:	(bad)  
   140060dd8:	cld    
   140060dd9:	je     0x140060e32
   140060ddb:	xchg   edi,eax
   140060ddc:	rex.WRB add r13b,r10b
   140060ddf:	(bad)  
   140060de0:	mov    ?,WORD PTR [rbp-0x47]
   140060de3:	rex
   140060de4:	rex.RXB jrcxz 0x140060e3a
   140060de7:	loop   0x140060e60
   140060de9:	in     eax,dx
   140060dea:	mov    ebp,0xe87d3c32
   140060def:	xor    DWORD PTR [rax-0x37],0x922dfe4a
   140060df6:	xor    bh,BYTE PTR [rbp+0x63]
   140060df9:	xlat   BYTE PTR ds:[rbx]
   140060dfa:	cli    
   140060dfb:	lock fcomi st,st(7)
   140060dfe:	pop    rsp
   140060dff:	sbb    eax,0xfb89daee
   140060e04:	sti    
   140060e05:	or     al,0xf8
   140060e07:	mov    ch,0xf8
   140060e09:	jbe    0x140060e4a
   140060e0b:	mov    edi,0x9e539bb6
   140060e10:	rex.W xor bpl,sil
   140060e13:	push   rdi
   140060e14:	xchg   esp,eax
   140060e15:	(bad)  
   140060e16:	and    BYTE PTR [rbx+0x76],dh
   140060e19:	or     BYTE PTR [rax+riz*2],dl
   140060e1c:	xor    ebp,edi
   140060e1e:	mov    esp,0xc5d0d7c1
   140060e23:	or     al,BYTE PTR [rcx+0x54]
   140060e26:	jno    0x140060e29
   140060e28:	leave  
   140060e29:	adc    cl,bh
   140060e2b:	rex.WXB mov r10b,0x2e
   140060e2e:	jae    0x140060e35
   140060e30:	movabs ds:0xe68d6d67f5cbc49e,eax
   140060e39:	push   rcx
   140060e3a:	outs   dx,BYTE PTR ds:[rsi]
   140060e3b:	or     DWORD PTR [rsi-0x22cce124],esp
   140060e41:	nop
   140060e42:	(bad)  
   140060e43:	(bad)  
   140060e44:	mov    esi,0x836acdf7
   140060e49:	inc    esp
   140060e4b:	sbb    DWORD PTR [rdi+0x268ba963],0xffffff80
   140060e52:	(bad)  
   140060e53:	mov    cl,0xea
   140060e55:	pop    rdi
   140060e56:	add    DWORD PTR [rcx+0x1a231b7f],esi
   140060e5c:	jl     0x140060e4a
   140060e5e:	add    bh,BYTE PTR [rsi-0x15]
   140060e61:	fisubr WORD PTR [rbx-0x1303603d]
   140060e67:	add    ebx,DWORD PTR [rdx]
   140060e69:	add    ebx,DWORD PTR [rcx+rsi*8+0x3f]
   140060e6d:	cli    
   140060e6e:	ret    
   140060e6f:	int    0x31
   140060e71:	lock test eax,0xe2f19f82
   140060e77:	(bad)  
   140060e78:	cmp    al,0xf2
   140060e7a:	stos   BYTE PTR es:[rdi],al
   140060e7b:	rex.WRXB leave 
   140060e7d:	rex.WRX and rax,0x5c7736
   140060e83:	add    BYTE PTR [rdi],ch
   140060e85:	cmc    
   140060e86:	rex.WB
   140060e87:	rex.R
   140060e88:	push   r12
   140060e8a:	mov    edx,0xd6ab06b2
   140060e8f:	xlat   BYTE PTR ds:[rbx]
   140060e90:	in     eax,dx
   140060e91:	(bad)  
   140060e92:	add    DWORD PTR [rdx],0xbe0e574c
   140060e98:	test   al,0xc2
   140060e9a:	rep lods al,BYTE PTR ds:[rsi]
   140060e9c:	mov    dl,0xac
   140060e9e:	cmp    ebp,esp
   140060ea0:	loopne 0x140060eed
   140060ea2:	rex.R
   140060ea3:	rex (bad) 
   140060ea5:	sahf   
   140060ea6:	sub    ebp,DWORD PTR [rbx]
   140060ea8:	xor    DWORD PTR [rcx],eax
   140060eaa:	(bad)  
   140060eab:	sbb    BYTE PTR es:[rcx+0x55],bl
   140060eaf:	jg     0x140060e76
   140060eb1:	scas   eax,DWORD PTR es:[rdi]
   140060eb2:	movabs al,ds:0xab5aa0d667a97aa4
   140060ebb:	push   0xfffffffffffffffd
   140060ebd:	fadd   DWORD PTR [rsi]
   140060ebf:	dec    ecx
   140060ec1:	add    eax,0x9744873f
   140060ec6:	rex.WR add BYTE PTR [rcx+0x2bfd563],r13b
   140060ecd:	loop   0x140060e7f
   140060ecf:	lods   eax,DWORD PTR ds:[rsi]
   140060ed0:	jne    0x140060e86
   140060ed2:	(bad)  
   140060ed3:	(bad)  
   140060ed4:	mov    esi,0xa7b9f817
   140060ed9:	(bad)  
   140060eda:	or     DWORD PTR [rdi+0x7638ef7d],edi
   140060ee0:	add    ah,BYTE PTR [rbx]
   140060ee2:	mov    eax,0xc73f8026
   140060ee7:	int    0xad
   140060ee9:	adc    edi,DWORD PTR ds:[rax-0xa]
   140060eed:	(bad)  
   140060eee:	cmp    ch,ch
   140060ef0:	jne    0x140060ecb
   140060ef2:	rex.W mov dl,0xdf
   140060ef5:	stc    
   140060ef6:	je     0x140060e89
   140060ef8:	imul   edx,ebp,0x2c1dbafa
   140060efe:	push   rax
   140060eff:	add    ah,ah
   140060f01:	xchg   ebx,eax
   140060f02:	ret    
   140060f03:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140060f04:	fdivrp st(3),st
   140060f06:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140060f07:	push   rax
   140060f08:	pop    rsp
   140060f09:	stos   DWORD PTR es:[rdi],eax
   140060f0a:	and    al,BYTE PTR [rdx]
   140060f0d:	adc    bl,BYTE PTR [rdi]
   140060f0f:	js     0x140060f52
   140060f11:	rex.WX mov BYTE PTR [rax+0x2],bpl
   140060f15:	and    BYTE PTR [rdi-0xf],bl
   140060f18:	sbb    al,cl
   140060f1a:	lahf   
   140060f1b:	(bad)
   140060f1e:	push   0x5f
   140060f20:	xchg   edx,eax
   140060f21:	movabs al,ds:0x6d8fd6a3362021da
   140060f2a:	lock lahf 
   140060f2c:	jl     0x140060f1e
   140060f2e:	rcl    DWORD PTR [rcx-0x5bfecfa3],cl
   140060f34:	mov    ss,WORD PTR [rbp-0x1]
   140060f37:	or     ch,al
   140060f39:	fcom   st(1)
   140060f3b:	in     eax,0xe0
   140060f3d:	(bad)  
   140060f3e:	sar    DWORD PTR [rax+rdi*4+0x25],cl
   140060f42:	clc    
   140060f43:	fcomi  st,st(7)
   140060f45:	fiadd  DWORD PTR [rbx-0x2]
   140060f48:	push   rcx
   140060f49:	fidivr WORD PTR [rsi]
   140060f4b:	fmul   QWORD PTR [rcx-0x7fd8c093]
   140060f51:	sbb    al,0x28
   140060f53:	xchg   ecx,eax
   140060f54:	add    esi,DWORD PTR [rsi+riz*4-0x1a720c25]
   140060f5b:	stc    
   140060f5c:	(bad)  
   140060f5d:	(bad)  
   140060f5e:	sub    al,al
   140060f60:	je     0x140060fb7
   140060f62:	rol    edi,0xa
   140060f65:	cmp    al,0xaf
   140060f67:	xchg   BYTE PTR [rbx-0x3],bl
   140060f6a:	loopne 0x140060fb7
   140060f6c:	rex.R xor BYTE PTR [rcx-0x74],0x51
   140060f71:	nop
   140060f72:	adc    ah,BYTE PTR [rdx]
   140060f74:	(bad)  
   140060f75:	sub    BYTE PTR [rdx-0x5556fe2],0x9b
   140060f7c:	cld    
   140060f7d:	in     eax,0xfd
   140060f7f:	sub    BYTE PTR cs:[rdi+0x2f],0xfd
   140060f84:	loopne 0x140060f76
   140060f86:	rex.RX (bad) 
   140060f88:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140060f89:	mov    esi,0x85808890
   140060f8e:	jge    0x140060f2f
   140060f90:	mov    bh,BYTE PTR [rcx+0x1f7c2b4e]
   140060f96:	or     eax,DWORD PTR [rdi+0x5d]
   140060f99:	(bad)  
   140060f9a:	xchg   DWORD PTR [rsi-0x23],eax
   140060f9d:	scas   al,BYTE PTR es:[rdi]
   140060f9e:	scas   al,BYTE PTR es:[rdi]
   140060f9f:	(bad)  
   140060fa0:	rex.WRXB adc rax,0xffffffffac9c2aa4
   140060fa6:	sub    DWORD PTR [rdi],eax
   140060fa8:	pop    rsi
   140060fa9:	nop
   140060faa:	or     al,BYTE PTR [rsp+rdi*1]
   140060fad:	(bad)  
   140060fae:	lahf   
   140060faf:	pop    rdx
   140060fb0:	lock mov bl,0x9a
   140060fb3:	cs cwde 
   140060fb5:	add    BYTE PTR [rax-0x7b],ah
   140060fb8:	fisub  DWORD PTR [rdx]
   140060fba:	rcr    BYTE PTR [rax+rdx*2+0x36],0x92
   140060fbf:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140060fc0:	(bad)  
   140060fc1:	rex.RXB cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140060fc3:	rex.WRX (bad) 
   140060fc5:	shr    DWORD PTR [rip+0x6853d5bd],0x9        # 0x1a859e589
   140060fcc:	ds (bad) 
   140060fce:	(bad)  
   140060fcf:	(bad)  
   140060fd0:	(bad)  
   140060fd1:	ins    DWORD PTR es:[rdi],dx
   140060fd2:	scas   eax,DWORD PTR es:[rdi]
   140060fd3:	idiv   DWORD PTR [rcx]
   140060fd5:	fldcw  WORD PTR [rax+0x1ab0e6a9]
   140060fdb:	(bad)  
   140060fdd:	cli    
   140060fde:	mov    edx,0x80502c1d
   140060fe3:	jmp    0x1bea1b73a
   140060fe8:	iret   
   140060fe9:	stos   DWORD PTR es:[rdi],eax
   140060fea:	jmp    0x1488f8cbd
   140060fef:	xor    BYTE PTR [rsi+0x2520a9b5],cl
   140060ff5:	rex.R xor al,0x1
   140060ff8:	nop
   140060ff9:	scas   eax,DWORD PTR es:[rdi]
   140060ffa:	js     0x140061051
   140060ffc:	std    
   140060ffd:	mov    ds,WORD PTR [rdi+0xc]
   140061000:	mov    ah,BYTE PTR [rsi+rdi*2+0x36b565b9]
   140061007:	push   0x1c
   140061009:	mov    al,0x9d
   14006100b:	xor    eax,0xfc3a6c5e
   140061010:	and    edx,DWORD PTR [rdi]
   140061012:	or     DWORD PTR [rax+0x5e],ecx
   140061015:	icebp  
   140061016:	cmp    al,0x53
   140061018:	nop
   140061019:	call   0x10bda5ce6
   14006101e:	(bad)  
   14006101f:	pop    rax
   140061020:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140061021:	or     BYTE PTR [rax+0x4b751a1f],ch
   140061027:	jo     0x1400610a7
   140061029:	mov    ebx,0x3593a554
   14006102e:	or     eax,DWORD PTR [rax-0x56fd5be9]
   140061034:	jmp    0x1a7e70574
   140061039:	sbb    eax,0xa8013f8b
   14006103e:	ins    DWORD PTR es:[rdi],dx
   14006103f:	add    ah,BYTE PTR [rdx+0x27]
   140061042:	int3   
   140061043:	out    0x50,eax
   140061045:	mov    BYTE PTR [rip+0x7b73ce9d],dl        # 0x1bb79dee8
   14006104b:	(bad)  
   14006104c:	jno    0x14006109c
   14006104e:	mov    dh,0x46
   140061050:	sub    al,BYTE PTR [rsp+rbp*1]
   140061053:	lods   al,BYTE PTR ds:[rsi]
   140061054:	mov    ebx,DWORD PTR [rbx+rdx*1-0xb]
   140061058:	repnz (bad) 
   14006105a:	(bad)  
   14006105b:	sub    al,al
   14006105d:	pushf  
   14006105e:	scas   eax,DWORD PTR es:[rdi]
   14006105f:	rex.WRX (bad) 
   140061061:	in     eax,dx
   140061062:	sahf   
   140061063:	(bad)  
   140061064:	test   esi,eax
   140061066:	mov    DWORD PTR [rdi],edi
   140061068:	loopne 0x1400610b5
   14006106a:	rex.R
   14006106b:	rex loop 0x1400610e9
   14006106e:	sahf   
   14006106f:	sub    ebp,DWORD PTR [rbx]
   140061071:	xor    DWORD PTR [rcx],eax
   140061073:	(bad)  
   140061074:	sbb    BYTE PTR es:[rcx+0x55],bl
   140061078:	mov    edi,0x55fcd7e3
   14006107d:	rex.XB push r11
   14006107f:	jge    0x1400610cc
   140061081:	cmp    al,0xab
   140061083:	xor    eax,0x350718aa
   140061088:	pop    rsi
   140061089:	ins    BYTE PTR es:[rdi],dx
   14006108a:	sub    esp,edi
   14006108c:	and    edx,DWORD PTR [rdi]
   14006108e:	or     DWORD PTR [rax+0x4e],ecx
   140061091:	lock cmp al,0x92
   140061094:	sbb    al,0xdf
   140061096:	rex xchg DWORD PTR [rdi-0x62],esp
   14006109a:	adc    QWORD PTR [rax+0x3f],rdx
   14006109e:	xor    al,0xea
   1400610a0:	xchg   esi,eax
   1400610a1:	and    ah,dl
   1400610a3:	cmp    bh,BYTE PTR [rax]
   1400610a5:	(bad)  
   1400610a6:	lods   al,BYTE PTR ds:[rsi]
   1400610a7:	mov    edx,0x3e7558c
   1400610ac:	(bad)  
   1400610ad:	add    rax,0xfffffffff2f7d352
   1400610b3:	(bad)  
   1400610b4:	lahf   
   1400610b5:	adc    eax,0x6004fe2d
   1400610ba:	rex.WRX pop rcx
   1400610bc:	test   al,0x91
   1400610be:	scas   al,BYTE PTR es:[rdi]
   1400610bf:	jae    0x1400610e1
   1400610c1:	push   rsi
   1400610c2:	je     0x14006107e
   1400610c4:	ja     0x14006106e
   1400610c6:	push   rsp
   1400610c7:	or     BYTE PTR [rax+0x380746dc],cl
   1400610cd:	mov    esi,0x9ef70e81
   1400610d2:	(bad)  
   1400610d3:	pop    rcx
   1400610d4:	cmp    BYTE PTR [rcx],0x5f
   1400610d7:	popf   
   1400610d8:	pop    rsi
   1400610d9:	mov    bh,0xbb
   1400610db:	movabs eax,ds:0xc0d59202e2add92b
   1400610e4:	or     edx,DWORD PTR [rdx+0x42]
   1400610e7:	adc    r8d,DWORD PTR [rax]
   1400610ea:	stc    
   1400610eb:	mov    dl,BYTE PTR [rdi-0x2b]
   1400610ee:	out    dx,eax
   1400610ef:	clc    
   1400610f0:	lea    esi,[rsi]
   1400610f2:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400610f3:	mov    edx,0x22cb4d53
   1400610f8:	stos   DWORD PTR es:[rdi],eax
   1400610f9:	mov    ch,0xb1
   1400610fb:	sbb    BYTE PTR [rdi],al
   1400610fd:	xor    eax,0xfc2f6c5e
   140061102:	and    edx,DWORD PTR [rdi]
   140061104:	or     DWORD PTR [rax-0x52],ecx
   140061107:	lock cmp al,0x92
   14006110a:	sbb    al,0xdf
   14006110c:	rex xchg DWORD PTR [rdi-0x62],esp
   140061110:	adc    QWORD PTR [rax+0x3f],rdx
   140061114:	xor    al,0xea
   140061116:	xchg   esi,eax
   140061117:	and    ah,dl
   140061119:	cmp    bh,BYTE PTR [rax]
   14006111b:	(bad)  
   14006111c:	lods   al,BYTE PTR ds:[rsi]
   14006111d:	mov    edx,0x3e7558c
   140061122:	(bad)  
   140061123:	add    rax,0xfffffffff2f7d352
   140061129:	sbb    DWORD PTR [rdi+0x4c17526],0xffffffb0
   140061130:	push   rax
   140061131:	and    ebp,DWORD PTR [rcx+0x62]
   140061134:	loop   0x140061159
   140061136:	sub    edi,DWORD PTR [rdx]
   140061138:	popf   
   140061139:	sub    al,0x4b
   14006113b:	(bad)  
   14006113c:	test   QWORD PTR [rax-0x6a1e553c],rax
   140061143:	(bad)  
   140061144:	sub    ah,bl
   140061146:	stc    
   140061147:	(bad)  
   140061148:	(bad)  
   140061149:	sub    al,al
   14006114b:	pushf  
   14006114c:	scas   eax,DWORD PTR es:[rdi]
   14006114d:	rex.WRX iretq 
   14006114f:	cmc    
   140061150:	(bad)  
   140061151:	pop    rdx
   140061152:	cmp    ch,al
   140061154:	and    al,BYTE PTR [rbx]
   140061156:	gs push rbp
   140061158:	pop    rsp
   140061159:	sub    spl,cl
   14006115c:	jns    0x1400611a7
   14006115e:	(bad)  
   14006115f:	gs scas al,BYTE PTR es:[rdi]
   140061161:	(bad)  
   140061162:	(bad)  
   140061163:	xchg   ebx,eax
   140061164:	js     0x1400611bb
   140061166:	std    
   140061167:	rex.WRX pop rdi
   140061169:	mov    DWORD PTR [rcx+0x56],0xe5f1606a
   140061170:	xchg   esp,eax
   140061171:	mov    dh,BYTE PTR [rcx-0x30]
   140061174:	mov    cl,0xfd
   140061176:	fidivr WORD PTR [rdi+0x4e657ce]
   14006117c:	iret   
   14006117d:	and    eax,ecx
   14006117f:	icebp  
   140061180:	or     eax,0x89e67874
   140061185:	adc    al,0x1
   140061187:	cmc    
   140061188:	rex.XB movabs ds:0x44fce583ad42096e,eax
   140061192:	mov    bl,0xac
   140061194:	(bad)  
   140061195:	(bad)  
   140061196:	pop    rsi
   140061197:	nop
   140061198:	or     ah,BYTE PTR [rsi+riz*4+0x3f04f4ef]
   14006119f:	int    0xea
   1400611a1:	(bad)  
   1400611a2:	or     DWORD PTR [rax-0x22],eax
   1400611a5:	test   eax,0xe4f49235
   1400611aa:	add    al,0x64
   1400611ac:	rex.RB cmps DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400611ae:	stos   DWORD PTR es:[rdi],eax
   1400611af:	or     BYTE PTR [rax],bl
   1400611b1:	repnz xchg ebx,eax
   1400611b3:	or     al,0x6d
   1400611b6:	je     0x140061138
   1400611b8:	jrcxz  0x1400611d5
   1400611ba:	call   0x1a74f5caf
   1400611bf:	jge    0x140061191
   1400611c1:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400611c2:	rex.WRX (bad) 
   1400611c4:	in     eax,dx
   1400611c5:	scas   al,BYTE PTR es:[rdi]
   1400611c6:	ins    BYTE PTR es:[rdi],dx
   1400611c7:	rex.XB (bad) 
   1400611c9:	add    eax,0x80889440
   1400611ce:	push   0xffffffffb24bc157
   1400611d3:	cs jae 0x1400611db
   1400611d6:	movabs ds:0xb43afa77eaabc49e,eax
   1400611df:	push   rcx
   1400611e0:	and    al,0x27
   1400611e2:	rex.RX adc eax,0x3da9354b
   1400611e8:	test   eax,0xa838c501
   1400611ed:	xor    ecx,DWORD PTR [rbp+0x6]
   1400611f0:	or     eax,0xa405db57
   1400611f5:	rcr    BYTE PTR [rsi+0x1be39247],cl
   1400611fb:	call   0x16919def0
   140061200:	add    ch,dl
   140061202:	xchg   DWORD PTR [rsi-0x23],eax
   140061205:	adc    al,BYTE PTR [rdx+rbx*2+0x559aa707]
   14006120c:	xchg   edi,eax
   14006120d:	mov    cl,0xea
   14006120f:	jl     0x1400611f1
   140061211:	add    eax,0xfa6a40a9
   140061216:	rex.WRX pop rdi
   140061218:	lock shl DWORD PTR [rsi+rbp*8+0x4e1a0099],cl
   140061220:	rex.WXB
   140061221:	rex.WRX
   140061222:	rex push rsi
   140061224:	je     0x1400611e0
   140061226:	ja     0x1400611d0
   140061228:	cld    
   140061229:	and    al,0x20
   14006122b:	jb     0x140061214
   14006122d:	rol    DWORD PTR [rbp-0x52],cl
   140061230:	mov    DWORD PTR [rdx+0x79],edi
   140061233:	(bad)  
   140061234:	or     edx,DWORD PTR [rax+riz*2]
   140061237:	(bad)  
   140061238:	push   rdi
   140061239:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14006123a:	fwait
   14006123b:	jbe    0x14006120c
   14006123d:	xchg   ebx,eax
   14006123e:	rex.X jrcxz 0x140061205
   140061241:	(bad)  
   140061242:	lock and eax,0x3df12022
   140061248:	iret   
   140061249:	xchg   ebp,eax
   14006124a:	xchg   ebp,eax
   14006124b:	cwde   
   14006124c:	add    BYTE PTR [rax],dh
   14006124e:	adc    ecx,DWORD PTR [rsp+rbp*4-0x180e2056]
   140061255:	ins    DWORD PTR es:[rdi],dx
   140061256:	movsxd edx,DWORD PTR [rcx+rsi*2-0x5a11566e]
   14006125d:	(bad)  
   14006125e:	push   rbp
   14006125f:	sub    eax,0xa341c629
   140061264:	std    
   140061265:	leave  
   140061266:	lahf   
   140061267:	adc    dl,BYTE PTR [rdi]
   140061269:	nop
   14006126a:	sbb    cl,BYTE PTR [rsi]
   14006126c:	mov    esp,0x40c43920
   140061271:	xchg   DWORD PTR [rdi+0x41],esp
   140061274:	xchg   ecx,eax
   140061275:	and    ah,BYTE PTR [rax+0x2dd4687e]
   14006127b:	sbb    ebp,DWORD PTR [r15]
   14006127e:	rex.WRB
   14006127f:	rex.WRXB (bad) 
   140061281:	mov    esi,0x4d64e65
   140061286:	adc    DWORD PTR [rdi],0xe9a902a4
   14006128c:	cmp    edi,DWORD PTR [rbp-0x4475303f]
   140061292:	movsxd eax,DWORD PTR [rdx]
   140061294:	cwde   
   140061295:	iret   
   140061296:	movabs eax,ds:0xda77acf2e9d145f0
   14006129f:	rex.X (bad) 
   1400612a1:	movsxd eax,DWORD PTR [rcx]
   1400612a3:	(bad)  
   1400612a4:	(bad)  
   1400612a5:	shl    cl,1
   1400612a7:	or     eax,0xe97e5d5e
   1400612ac:	lods   al,BYTE PTR ds:[rsi]
   1400612ad:	cld    
   1400612ae:	jb     0x1400612fd
   1400612b0:	add    dl,BYTE PTR [rsi-0x743e9825]
   1400612b6:	jno    0x140061288
   1400612b8:	sbb    BYTE PTR [rdi],ch
   1400612ba:	test   eax,0x2b5d4df
   1400612bf:	mov    dl,0x37
   1400612c1:	mov    ah,BYTE PTR [rcx+0x50]
   1400612c4:	and    bl,dh
   1400612c6:	lea    ecx,[rcx]
   1400612c8:	test   eax,0xc72c088
   1400612cd:	jle    0x140061309
   1400612cf:	addr32 icebp 
   1400612d1:	pop    rdi
   1400612d2:	(bad)  
   1400612d3:	push   0x74
   1400612d5:	data16 repnz cmp al,0xb2
   1400612d9:	movabs ds:0xa73ad5e75a5753d3,al
   1400612e2:	(bad)  
   1400612e3:	mov    DWORD PTR [rcx-0x2fc8f1b8],edx
   1400612e9:	loope  0x1400612b6
   1400612eb:	xor    eax,edi
   1400612ed:	jge    0x1400612e2
   1400612ef:	in     al,0x94
   1400612f1:	gs (bad) 
   1400612f3:	xor    al,0xc6
   1400612f5:	or     ebx,ebx
   1400612f7:	xchg   DWORD PTR [rsi+0x5202edab],eax
   1400612fd:	ret    
   1400612fe:	cmp    eax,0x4e26c92f
   140061303:	sub    al,0xe3
   140061305:	in     eax,0x13
   140061307:	sub    al,0x52
   140061309:	add    al,0x96
   14006130b:	imul   esi,eax,0xffffffb3
   14006130e:	std    
   14006130f:	fnsave [rcx-0x6de237fd]
   140061315:	jnp    0x140061328
   140061317:	xchg   BYTE PTR [rbp-0x5d62603f],dh
   14006131d:	ror    DWORD PTR [rax+0x6360ee41],1
   140061323:	cmp    ebx,esp
   140061325:	ror    BYTE PTR [rdx],0xaf
   140061328:	movabs al,ds:0x4db3f68de41967ac
   140061331:	push   0x202b1aa9
   140061336:	xor    eax,0x6c92f3d6
   14006133b:	loop   0x140061301
   14006133d:	xor    bl,BYTE PTR [rsi+0x3e]
   140061340:	shl    DWORD PTR [rdx],0x45
   140061343:	(bad)  
   140061344:	cmp    DWORD PTR [rdi],eax
   140061346:	(bad)  
   140061347:	sbb    eax,0x401345d7
   14006134c:	(bad)  
   14006134d:	add    DWORD PTR [rbp-0x10],ebp
   140061350:	(bad)  
   140061351:	movabs ds:0x29a91afc18d2234,eax
   14006135a:	shl    cl,0xb5
   14006135d:	mov    cl,0x9e
   14006135f:	mov    ch,0x2d
   140061361:	jmp    0x11504e522
   140061366:	xor    rax,0x266a405b
   14006136c:	lock (bad) 
   14006136e:	in     al,0x10
   140061370:	add    ebx,DWORD PTR [rip+0xffffffff8a45059e]        # 0xca4b1914
   140061376:	shl    BYTE PTR [rdx+0xf],0x7e
   14006137a:	cmp    ch,BYTE PTR [rdx-0x1b7fd9b5]
   140061380:	jns    0x1400613e6
   140061382:	ins    DWORD PTR es:[rdi],dx
   140061383:	lock cmps DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140061385:	icebp  
   140061386:	fwait
   140061387:	(bad)  
   140061388:	and    eax,0xd7e0c6d1
   14006138d:	rex.W in eax,dx
   14006138f:	sbb    al,0xfc
   140061391:	sub    al,0xe2
   140061393:	retf   
   140061394:	addr32 xchg ebp,eax
   140061396:	retf   
   140061397:	sub    al,BYTE PTR [rdi+0x106e40f]
   14006139d:	test   eax,0x92479e85
   1400613a2:	jrcxz  0x1400613bf
   1400613a4:	call   0x16919e099
   1400613a9:	add    ah,bh
   1400613ab:	rex.X
   1400613ac:	lock shl DWORD PTR [rbx],cl
   1400613af:	pop    rbp
   1400613b0:	xor    BYTE PTR [rcx],al
   1400613b2:	and    al,0xcf
   1400613b4:	and    ebp,DWORD PTR [rbx-0x7d]
   1400613b7:	lahf   
   1400613b8:	pop    rbp
   1400613b9:	ret    0xd1a4
   1400613bc:	or     al,dl
   1400613be:	ror    DWORD PTR [rip+0xffffffffd0d64d5e],0xca        # 0x110dc6123
   1400613c5:	lahf   
   1400613c6:	es mov esi,0xed1a7fd4
   1400613cc:	rex.WRXB ins DWORD PTR es:[rdi],dx
   1400613ce:	xchg   esi,eax
   1400613cf:	pop    rbx
   1400613d0:	add    al,0xa4
   1400613d2:	xchg   esi,eax
   1400613d3:	add    ch,BYTE PTR [rdi]
   1400613d5:	rex.W (bad) 
   1400613d7:	xor    eax,edx
   1400613d9:	loope  0x140061434
   1400613db:	push   rax
   1400613dc:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400613dd:	or     BYTE PTR [rbx+rbp*1+0x75474fc1],bl
   1400613e4:	rol    DWORD PTR [rax+rax*4],0x7e
   1400613e8:	sbb    edi,0xffffffdb
   1400613eb:	loopne 0x1400613bc
   1400613ed:	xchg   ecx,eax
   1400613ee:	stos   BYTE PTR es:[rdi],al
   1400613ef:	sar    DWORD PTR [rax-0xe],1
   1400613f2:	rcr    DWORD PTR [rdi+0x69747407],0x56
   1400613f9:	mov    eax,0x47f872cc
   1400613fe:	adc    dl,BYTE PTR cs:[rax+0x2479e8da]
   140061405:	cmp    DWORD PTR [rsi+0x3ccf0e81],edi
   14006140b:	xchg   ecx,eax
   14006140c:	and    dh,BYTE PTR [rax+0x2e]
   14006140f:	add    eax,0xf8b43d3f
   140061414:	adc    eax,DWORD PTR [rax]
   140061416:	cld    
   140061417:	fiadd  WORD PTR [rsi]
   140061419:	(bad)  
   14006141a:	mov    ebx,0xf1a34982
   14006141f:	(bad)  
   140061420:	(bad)  
   140061421:	(bad)  
   140061422:	(bad)
   140061425:	test   al,0x72
   140061427:	mov    edi,edi
   140061429:	xchg   esi,eax
   14006142a:	in     eax,dx
   14006142b:	icebp  
   14006142c:	or     eax,0xf2d6392c
   140061431:	(bad)  
   140061432:	in     al,0x10
   140061434:	add    ebx,DWORD PTR [rip+0x5224bd9e]        # 0x1922ad1d8
   14006143a:	add    al,0xce
   14006143c:	mov    ch,0xe0
   14006143e:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14006143f:	sbb    edx,DWORD PTR [rsi]
   140061441:	jge    0x140061445
   140061443:	push   0xffffffffa8473f83
   140061448:	rex.RX jrcxz 0x140061474
   14006144b:	(bad)  
   14006144c:	jg     0x140061424
   14006144e:	(bad)  
   14006144f:	jl     0x14006140a
   140061451:	cmp    eax,0xb8065007
   140061456:	repz xchg ebp,eax
   140061458:	xor    eax,0x7241781a
   14006145d:	mov    BYTE PTR [rcx+0x2282cf0e],al
   140061463:	rex.RB loopne 0x1400614c2
   140061466:	or     al,0x7e
   140061468:	mov    edx,0x27d16e
   14006146d:	jmp    0x14006142e
   14006146f:	loop   0x140061478
   140061471:	sbb    eax,0xb11ceb52
   140061476:	sbb    esp,edi
   140061478:	adc    DWORD PTR [rdx],0x4c
   14006147b:	gs sbb al,0x5e
   14006147e:	sub    ecx,ebp
   140061480:	lods   al,BYTE PTR ds:[rsi]
   140061481:	(bad)  
   140061483:	(bad)  
   140061484:	jmp    0x1ab3195df
   140061489:	movabs al,ds:0xe034c901245f33c3
   140061492:	add    eax,0x9a22129
   140061497:	cmp    BYTE PTR [rbp+rax*8-0x55],0xea
   14006149c:	ja     0x14006149a
   14006149e:	xchg   ebx,eax
   14006149f:	push   0x23
   1400614a1:	stos   DWORD PTR es:[rdi],eax
   1400614a2:	rex.RXB pop r9
   1400614a4:	adc    eax,0x92915017
   1400614a9:	test   DWORD PTR [rbx+0x3e],ecx
   1400614ac:	push   rbx
   1400614ad:	rol    DWORD PTR [rsp+riz*4],cl
   1400614b0:	add    DWORD PTR es:[rdi],ebp
   1400614b3:	rex.W (bad) 
   1400614b5:	xor    eax,edx
   1400614b7:	loope  0x140061512
   1400614b9:	push   rax
   1400614ba:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400614bb:	or     BYTE PTR [rax-0x420be9e1],ch
   1400614c1:	or     bh,BYTE PTR [rcx]
   1400614c3:	push   rdi
   1400614c4:	es (bad) 
   1400614c6:	gs jne 0x140061507
   1400614c9:	lock (bad) 
   1400614cb:	push   rsp
   1400614cc:	and    al,ah
   1400614ce:	jns    0x1400614cc
   1400614d0:	hlt    
   1400614d1:	(bad)  
   1400614d2:	loope  0x14006153b
   1400614d4:	rex.RX pop rdx
   1400614d6:	adc    eax,0x3d153d65
   1400614db:	ss movsxd esi,ecx
   1400614de:	(bad)  
   1400614df:	add    al,0x72
   1400614e1:	out    dx,al
   1400614e2:	xor    al,0x8f
   1400614e4:	leave  
   1400614e5:	pop    rsi
   1400614e6:	add    DWORD PTR [rcx-0x5e],edx
   1400614e9:	jo     0x140061503
   1400614eb:	rex.WB mov gs,WORD PTR [r15-0x60]
   1400614ef:	ret    
   1400614f0:	sbb    edi,DWORD PTR [rdx+rdi*4-0x1f10d04]
   1400614f7:	call   0x12bfefaac
   1400614fc:	sti    
   1400614fd:	cmp    ch,dh
   1400614ff:	imul   eax,DWORD PTR [rcx+0x72],0xcf0e8188
   140061506:	movsxd eax,DWORD PTR [rdx-0x5c]
   140061509:	or     BYTE PTR [rbx+rcx*8-0x15e7303f],bl
   140061510:	movabs ds:0xc21a39d6a43a001d,al
   140061519:	ins    DWORD PTR es:[rdi],dx
   14006151a:	lock ret 
   14006151c:	adc    eax,0xcb724e72
   140061521:	cmp    al,0xfe
   140061523:	rex.WX (bad) 
   140061525:	or     eax,0x4b99c997
   14006152a:	or     al,0x50
   14006152c:	mov    bl,0x5
   14006152e:	je     0x140061598
   140061530:	(bad)  
   140061531:	rex.WB mov gs,WORD PTR [r15-0x60]
   140061535:	ret    
   140061536:	xor    ecx,DWORD PTR [rdi-0x5c]
   140061539:	or     BYTE PTR [rbx+rbp*8+0x75af4fc1],bl
   140061540:	leave  
   140061541:	add    al,0x80
   140061543:	(bad)  
   140061544:	test   eax,0xb38d0e75
   140061549:	(bad)  
   14006154a:	sbb    cl,cl
   14006154c:	adc    cl,BYTE PTR [rbp+riz*2+0x1c]
   140061550:	pop    rsi
   140061551:	sub    ecx,ebp
   140061553:	lods   al,BYTE PTR ds:[rsi]
   140061554:	(bad)  
   140061556:	(bad)  
   140061557:	jmp    0x144b08ead
   14006155c:	cdq    
   14006155d:	test   eax,0x2c8baf1
   140061562:	cs xchg edx,eax
   140061564:	adc    BYTE PTR [rsi+rax*8-0xd],0x92
   140061569:	lods   al,BYTE PTR ds:[rsi]
   14006156a:	retf   
   14006156b:	pop    rsp
   14006156c:	shr    DWORD PTR [rax-0x5550ed9],0x9d
   140061573:	mov    esi,0x52636a93
   140061578:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140061579:	loop   0x14006157d
   14006157b:	enter  0xca40,0x78
   14006157f:	(bad)  
   140061580:	and    esi,DWORD PTR [rbp-0x17]
   140061583:	(bad)  
   140061584:	jbe    0x1400615f0
   140061586:	(bad)  
   140061587:	push   0x621d905
   14006158c:	cmp    bh,BYTE PTR [rbx+rcx*1]
   14006158f:	mov    dl,BYTE PTR [rcx+rax*1]
   140061592:	cmc    
   140061593:	ret    
   140061594:	(bad)  
   140061595:	mov    esi,0xbee72157
   14006159a:	rex.R mov bl,0xac
   14006159d:	(bad)  
   14006159e:	(bad)  
   14006159f:	pop    rsi
   1400615a0:	nop
   1400615a1:	or     al,BYTE PTR [rsp+rdi*1]
   1400615a4:	(bad)  
   1400615a5:	(bad)  
   1400615a6:	fidiv  WORD PTR [rsi+0x1f491b3f]
   1400615ac:	je     0x14006156f
   1400615ae:	add    al,0xe0
   1400615b0:	popf   
   1400615b1:	out    0x1d,al
   1400615b3:	add    al,0xeb
   1400615b5:	or     al,BYTE PTR [rdi-0x20e3f04f]
   1400615bb:	rex xchg DWORD PTR [rdi],esi
   1400615be:	js     0x140061635
   1400615c0:	stc    
   1400615c1:	vpaddd xmm9,xmm14,XMMWORD PTR [rip+0xfffffffff42b7ecf]        # 0x134319498
   1400615c9:	rex.WRXB sbb rax,0x356731a2
   1400615cf:	xor    eax,0x6b56775c
   1400615d4:	(bad)  
   1400615d5:	std    
   1400615d6:	xchg   ebp,eax
   1400615d7:	ins    DWORD PTR es:[rdi],dx
   1400615d8:	fcomp  QWORD PTR [rbx+0x7d]
   1400615db:	stc    
   1400615dc:	stc    
   1400615dd:	hlt    
   1400615de:	imul   ebp,edi,0xffffffac
   1400615e1:	jno    0x14006159d
   1400615e3:	outs   dx,DWORD PTR ds:[rsi]
   1400615e4:	cmp    ah,ch
   1400615e6:	pop    rdi
   1400615e7:	jns    0x140061582
   1400615e9:	movsxd esp,DWORD PTR [rsi+0x7b18d6f1]
   1400615ef:	adc    al,0x1
   1400615f1:	ror    DWORD PTR [rdi],1
   1400615f3:	(bad)  
   1400615f4:	adc    ch,BYTE PTR [rcx+0x8eee58d]
   1400615fa:	jle    0x1400615c2
   1400615fc:	xlat   BYTE PTR ds:[rbx]
   1400615fd:	loop   0x14006165e
   1400615ff:	add    edx,DWORD PTR [rax-0x78bbfb2d]
   140061605:	(bad)  
   140061606:	rex.RX mov al,0xe3
   140061609:	sbb    ebp,eax
   14006160b:	jo     0x1400615fc
   14006160d:	ins    BYTE PTR es:[rdi],dx
   14006160e:	xchg   ecx,eax
   14006160f:	add    eax,0xe335f398
   140061614:	fwait
   140061615:	jbe    0x1400615e6
   140061617:	rex.WXB popf 
   140061619:	(bad)  
   14006161a:	imul   ecx,DWORD PTR [rbp-0x41],0xffffffe0
   14006161e:	rex.WXB
   14006161f:	rex.R
   140061620:	rex (bad) 
   140061622:	sahf   
   140061623:	sub    ebp,DWORD PTR [rbx]
   140061625:	xor    DWORD PTR [rcx],eax
   140061627:	(bad)  
   140061628:	(bad)  
   140061629:	test   DWORD PTR [rbp+0x17],edi
   14006162c:	mov    esi,0x8ff4cc2e
   140061631:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140061632:	mov    dl,0x6d
   140061634:	mov    dh,0x54
   140061636:	cmp    al,0x30
   140061638:	sar    DWORD PTR [rbx],cl
   14006163a:	adc    BYTE PTR [rsi],cl
   14006163c:	lods   al,BYTE PTR ds:[rsi]
   14006163d:	lock jg 0x1400616bf
   140061640:	xor    dh,ch
   140061642:	stos   DWORD PTR es:[rdi],eax
   140061643:	gs mov esi,0xe022d98f
   140061649:	add    eax,0xf3c040a9
   14006164e:	js     0x140061647
   140061650:	add    al,0x3f
   140061652:	sub    eax,0x9482e32f
   140061657:	mov    bl,0x9c
   140061659:	jp     0x140061659
   14006165b:	in     eax,0x27
   14006165d:	jmp    0x14006163d
   14006165f:	stos   DWORD PTR es:[rdi],eax
   140061660:	cmp    DWORD PTR [rsi+rax*1-0x17e5f8c7],ecx
   140061667:	lock (bad) 
   140061669:	scas   eax,DWORD PTR es:[rdi]
   14006166a:	cs mov edi,0x6cbf2b38
   140061670:	xchg   BYTE PTR [rcx-0x53fe27fd],ch
   140061676:	fnstsw WORD PTR [rbp+0x6f]
   140061679:	call   0x12f3cb417
   14006167e:	(bad)  
   14006167f:	in     al,0xeb
   140061681:	pop    rdi
   140061682:	(bad)  
   140061683:	fdivrp st(1),st
   140061685:	(bad)  
   140061686:	std    
   140061687:	clts   
   140061689:	mov    bh,0x3f
   14006168b:	fucom  st(1)
   14006168d:	cmp    DWORD PTR [rdi+0xebfcbfa],0x5ee77cf7
   140061697:	xor    esp,DWORD PTR [rsi+0xe]
   14006169a:	(bad)  
   14006169b:	xchg   esi,eax
   14006169c:	cmp    eax,0xee7e088
   1400616a1:	and    BYTE PTR [rsi+0x631ade34],ah
   1400616a7:	(bad)  
   1400616a8:	pop    rsp
   1400616a9:	adc    BYTE PTR [rbx],dl
   1400616ab:	mov    ebx,0x78088d90
   1400616b0:	sahf   
   1400616b1:	fstp   DWORD PTR [rbp-0x3f]
   1400616b4:	rex.WRXB adc r14,r9
   1400616b7:	rex.RB int 0xc5
   1400616ba:	rex.WRB cmp rax,0x7beaffd7
   1400616c0:	or     ecx,DWORD PTR [rbx]
   1400616c2:	or     al,BYTE PTR [rdi+0x681ce391]
   1400616c8:	movabs al,ds:0x3f07e2fcbabc1bc3
   1400616d1:	addr32 fcomp st(1)
   1400616d4:	mov    esi,0xbc3d30a1
   1400616d9:	cmp    cl,BYTE PTR [rdi+rbx*1]
   1400616dc:	fiadd  WORD PTR [rbp+0x3]
   1400616df:	ret    
   1400616e0:	(bad)  
   1400616e1:	popf   
   1400616e2:	xor    DWORD PTR [rdi+0xdcbcaf2],edi
   1400616e8:	outs   dx,DWORD PTR ds:[rsi]
   1400616e9:	jg     0x140061701
   1400616eb:	xlat   BYTE PTR ds:[rbx]
   1400616ec:	add    ebx,DWORD PTR [rdi-0x8]
   1400616ef:	cld    
   1400616f0:	fild   WORD PTR [rbp+0x2eed7faf]
   1400616f6:	sbb    DWORD PTR [rcx-0x78],esi
   1400616f9:	shr    DWORD PTR [rdi+0x6f1a5b5d],0x8d
   140061700:	mov    cl,0x47
   140061702:	jno    0x140061714
   140061704:	std    
   140061705:	jo     0x140061733
   140061707:	xchg   ecx,eax
   140061708:	scas   al,BYTE PTR es:[rdi]
   140061709:	movd   DWORD PTR [rsi+0x14ff160],mm6
   140061710:	push   0x30cb4e45
   140061715:	clc    
   140061716:	movsxd edx,ebx
   140061718:	out    0xc2,al
   14006171a:	(bad)  
   14006171b:	lock fidiv DWORD PTR [rax+0x70]
   14006171f:	ret    
   140061720:	mov    ch,0x71
   140061722:	shl    BYTE PTR [rax-0x30],0x7c
   140061726:	icebp  
   140061727:	jae    0x140061788
   140061729:	ret    0x738a
   14006172c:	lahf   
   14006172d:	or     eax,0xf6a18e19
   140061732:	pop    rax
   140061733:	sbb    al,0x1f
   140061735:	mov    al,0xf
   140061737:	fcom   DWORD PTR [rdi]
   140061739:	mov    ecx,0x5e8f0e03
   14006173e:	sbb    BYTE PTR [rsi+0x11a68ff5],cl
   140061744:	cdq    
   140061745:	movabs ds:0x502cab1e704b2db,al
   14006174e:	test   eax,0x78f3c040
   140061753:	imul   DWORD PTR [rbp+0x765c79fc]
   140061759:	rol    DWORD PTR [rbp-0x40],0xec
   14006175d:	imul   ebp,edi,0x30
   140061760:	rcr    BYTE PTR [rsi+rbp*2],cl
   140061763:	movabs al,ds:0xfcac777cbabc1bc3
   14006176c:	mov    cl,0x65
   14006176e:	xchg   ebp,eax
   14006176f:	fld    QWORD PTR [rdi+0x57]
   140061772:	pop    rsp
   140061773:	adc    BYTE PTR [rsi],al
   140061775:	(bad)  
   140061776:	imul   BYTE PTR [rcx+0x27]
   140061779:	lock jmp 0x19c2c93ce
   14006177f:	js     0x140061752
   140061781:	test   DWORD PTR [rsi+0x44],esi
   140061784:	fdecstp 
   140061786:	imul   DWORD PTR [rdx+rdi*2+0x60]
   14006178a:	(bad)  
   14006178b:	jbe    0x1400617ef
   14006178d:	in     al,dx
   14006178e:	cmp    DWORD PTR [rsi+rdx*8],0x26
   140061792:	(bad)  
   140061793:	xlat   BYTE PTR ds:[rbx]
   140061794:	test   cl,cl
   140061796:	rcl    ebp,0xc9
   140061799:	test   ah,dl
   14006179b:	outs   dx,DWORD PTR ds:[rsi]
   14006179c:	lea    esi,[rcx+0x55883647]
   1400617a2:	mov    bh,0xaa
   1400617a4:	jl     0x1400617d0
   1400617a6:	or     BYTE PTR [rsi-0xf908999],bl
   1400617ac:	rcr    esi,cl
   1400617ae:	out    dx,al
   1400617af:	fadd   DWORD PTR [rcx]
   1400617b1:	adc    al,0xe
   1400617b3:	movabs ds:0xabc1bc3a0681ce59,eax
   1400617bc:	retf   
   1400617bd:	ja     0x140061826
   1400617bf:	lock out 0x41,eax
   1400617c2:	jno    0x140061834
   1400617c4:	jrcxz  0x14006177b
   1400617c6:	(bad)  
   1400617c7:	jb     0x1400617fd
   1400617c9:	(bad)  
   1400617ca:	xchg   ecx,eax
   1400617cb:	ror    BYTE PTR [rcx-0x7e0f7677],cl
   1400617d1:	idiv   ebp
   1400617d3:	jno    0x140061835
   1400617d5:	fisub  WORD PTR [rsi-0x457e144d]
   1400617db:	out    dx,eax
   1400617dc:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400617dd:	(bad)  
   1400617de:	push   rsi
   1400617df:	xchg   bl,al
   1400617e1:	movsxd edi,esp
   1400617e3:	sti    
   1400617e4:	adc    cl,BYTE PTR [rcx+rbp*2-0x44]
   1400617e8:	xor    eax,0xf9e25ec6
   1400617ed:	loope  0x140061787
   1400617ef:	lods   eax,DWORD PTR gs:[rsi]
   1400617f1:	sbb    al,0x8b
   1400617f3:	jp     0x14006185b
   1400617f5:	ja     0x1400617fe
   1400617f7:	(bad)  
   1400617f8:	rex.WRB pop r15
   1400617fa:	cld    
   1400617fb:	or     DWORD PTR [rax-0x4f8da790],esp
   140061801:	pushf  
   140061802:	pop    rcx
   140061803:	ret    
   140061804:	mov    ebp,0x167e5b3
   140061809:	out    0xfc,al
   14006180b:	repnz stos BYTE PTR es:[rdi],al
   14006180d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14006180e:	out    0xd5,eax
   140061810:	jne    0x140061837
   140061812:	pop    rsp
   140061813:	and    al,BYTE PTR [rdx]
   140061815:	push   rdx
   140061816:	in     eax,dx
   140061817:	ror    BYTE PTR [rbx],0x52
   14006181a:	rex.X
   14006181b:	adc    r8d,DWORD PTR [rax]
   14006181e:	stc    
   14006181f:	mov    dl,BYTE PTR [rdi-0x2b]
   140061822:	out    dx,eax
   140061823:	clc    
   140061824:	mov    ch,0x36
   140061826:	(bad)  
   140061827:	fdiv   st(0),st
   140061829:	adc    esp,DWORD PTR [rcx+0x7a]
   14006182c:	nop
   14006182d:	jg     0x1400617e9
   14006182f:	sub    al,0x58
   140061831:	lock jg 0x140061814
   140061834:	std    
   140061835:	pushf  
   140061836:	add    al,0xc6
   140061838:	movabs eax,ds:0x475f403c3677fda5
   140061841:	lahf   
   140061842:	(bad)  
   140061843:	mov    DWORD PTR [rdi-0x3a3104e9],edx
   140061849:	loopne 0x140061832
   14006184b:	clc    
   14006184c:	pop    rbx
   14006184d:	cld    
   14006184e:	or     DWORD PTR [rax-0x5f06d7aa],eax
   140061854:	and    ecx,edx
   140061856:	loope  0x140061876
   140061858:	(bad)  
   140061859:	pop    rcx
   14006185a:	rcl    BYTE PTR [rdx+0x69b67e09],0xae
   140061861:	mov    bh,0x3f
   140061863:	sbb    al,0x38
   140061865:	(bad)  
   140061866:	cmp    cl,bl
   140061868:	fxch   st(2)
   14006186a:	pop    rbp
   14006186b:	iret   
   14006186c:	out    dx,al
   14006186d:	or     bl,BYTE PTR [rdi-0x3b201b07]
   140061873:	out    0xb2,al
   140061875:	rex.WB in eax,dx
   140061877:	jno    0x1400618bf
   140061879:	jge    0x1400618bb
   14006187b:	pop    rdi
   14006187c:	shl    edi,cl
   14006187e:	rex.WR movabs rsp,0xa563cb66c5687fe2
   140061888:	leave  
   140061889:	(bad)  
   14006188a:	jle    0x140061848
   14006188c:	rex.RB
   14006188d:	rex.WB mov r9b,0xd
   140061890:	lods   eax,DWORD PTR ds:[rsi]
   140061891:	repz mov ecx,DWORD PTR [rcx-0x42]
   140061895:	sti    
   140061896:	push   rdi
   140061897:	(bad)  
   140061898:	fadd   QWORD PTR [rsi-0xff4403b]
   14006189e:	fidivr DWORD PTR [rdi+rdx*1-0x40]
   1400618a2:	(bad)  
   1400618a3:	xor    ecx,ebp
   1400618a5:	jae    0x14006185f
   1400618a7:	xchg   DWORD PTR [rbp+0x16],eax
   1400618aa:	add    cl,dl
   1400618ac:	out    dx,al
   1400618ad:	fdivrp st(6),st
   1400618af:	rex.RXB
   1400618b0:	addr32 xchg edi,eax
   1400618b2:	ins    DWORD PTR es:[rdi],dx
   1400618b3:	(bad)  
   1400618b4:	jmp    0x14006189f
   1400618b6:	rcpps  xmm4,XMMWORD PTR [rbx]
   1400618b9:	jmp    0x14006187e
   1400618bb:	lock xchg ecx,eax
   1400618bd:	out    0x42,eax
   1400618bf:	iret   
   1400618c0:	fsubr  QWORD PTR [rax+riz*8-0x7]
   1400618c4:	sub    bh,ch
   1400618c6:	retf   0x7e5e
   1400618c9:	(bad)  
   1400618ca:	adc    eax,0x9d0b7895
   1400618cf:	jbe    0x1400618e0
   1400618d1:	cld    
   1400618d2:	sbb    eax,0x95dff8ae
   1400618d7:	scas   al,BYTE PTR es:[rdi]
   1400618d8:	clc    
   1400618d9:	fucomi st,st(5)
   1400618db:	mov    esi,0x19869795
   1400618e0:	fsub   QWORD PTR [rbp+0x61b378d1]
   1400618e6:	in     eax,0xc6
   1400618e8:	xchg   esi,eax
   1400618e9:	pop    rcx
   1400618ea:	add    BYTE PTR [rax+riz*1-0x407277eb],bh
   1400618f1:	retf   0xa5d0
   1400618f4:	adc    edi,esp
   1400618f6:	mov    ah,0xb9
   1400618f8:	rex.WXB jbe 0x1400618fb
   1400618fb:	(bad)  
   1400618fc:	movabs eax,ds:0x4b01645e7bdc3a06
   140061905:	xor    bh,al
   140061907:	movsxd edx,DWORD PTR [rbx-0x4fe58f1a]
   14006190d:	and    bl,BYTE PTR [rdx+rbx*2]
   140061910:	test   DWORD PTR [rdx],0x2e46d3b
   140061916:	(bad)
   14006191a:	push   rdx
   14006191b:	mov    eax,0x8da55717
   140061920:	iret   
   140061921:	es mov dh,0xc7
   140061924:	imul   esi,ebp,0x1f4b7d01
   14006192a:	rcl    edi,cl
   14006192c:	cmp    al,0x8e
   14006192e:	mov    WORD PTR [rdi+rbx*4-0x2e2c0a12],ds
   140061935:	leave  
   140061936:	fistp  QWORD PTR [rsi-0x44]
   140061939:	gs (bad) 
   14006193c:	sbb    ebx,DWORD PTR [rdx-0x19]
   14006193f:	push   rbx
   140061940:	xchg   ecx,eax
   140061941:	rcl    dl,cl
   140061943:	or     bh,BYTE PTR [rsi-0x66]
   140061946:	fld    QWORD PTR [rip+0x39c0177]        # 0x143a21ac3
   14006194c:	or     eax,0xb677b874
   140061951:	enter  0xac02,0x17
   140061955:	stos   DWORD PTR es:[rdi],eax
   140061956:	jae    0x1400619c6
   140061958:	ss (bad) 
   14006195a:	repz push 0x38
   14006195d:	push   rcx
   14006195e:	repnz and eax,0x2538c022
   140061964:	(bad)  
   140061965:	leave  
   140061966:	mov    edx,0x7a8c15cc
   14006196b:	adc    ch,BYTE PTR [rdi+0x2be9dfaa]
   140061971:	(bad)  
   140061972:	rex.RB movabs eax,ds:0x67a0677964a9a924
   14006197c:	out    0x58,al
   14006197e:	pop    rax
   14006197f:	mov    cl,0xef
   140061981:	rex.RXB adc al,0xc
   140061984:	jg     0x140061983
   140061986:	xchg   ecx,eax
   140061987:	(bad)  
   140061988:	loope  0x140061938
   14006198a:	rol    BYTE PTR [rip+0xfffffffff3019ded],0xc6        # 0x13307b77e
   140061991:	jmp    0xcb14fb91
   140061996:	mov    esi,0x747c69cd
   14006199b:	push   rbx
   14006199c:	cwde   
   14006199d:	sbb    al,0xc2
   14006199f:	pop    rdi
   1400619a0:	xchg   ebx,eax
   1400619a1:	(bad)  
   1400619a2:	add    eax,edx
   1400619a4:	mov    edx,0x2897eaa4
   1400619a9:	(bad)  
   1400619aa:	mov    esp,0x78081520
   1400619af:	(bad)  
   1400619b0:	pop    rdi
   1400619b1:	jp     0x140061974
   1400619b3:	iret   
   1400619b4:	ss jbe 0x140061980
   1400619b7:	(bad)  
   1400619b8:	and    bh,dh
   1400619ba:	rex.XB jmp 0xd90ff290
   1400619c0:	rex.RXB int3 
   1400619c2:	icebp  
   1400619c3:	loope  0x1400619c1
   1400619c5:	sub    bh,al
   1400619c7:	(bad)  
   1400619c8:	mov    esp,0x65944e1a
   1400619cd:	push   rbp
   1400619ce:	pop    rsp
   1400619cf:	xor    BYTE PTR [rcx+0x4a],0x5e
   1400619d3:	xchg   edx,eax
   1400619d4:	jne    0x14006196f
   1400619d6:	sub    ebx,DWORD PTR [rax]
   1400619d8:	cmc    
   1400619d9:	and    al,0x5e
   1400619db:	push   rbp
   1400619dc:	mov    edi,0x8a0c57d3
   1400619e1:	rex.X
   1400619e2:	rex.WB push r10
   1400619e4:	jrcxz  0x140061a4a
   1400619e6:	leave  
   1400619e7:	xchg   BYTE PTR [rcx+0x13],dl
   1400619ea:	stos   DWORD PTR es:[rdi],eax
   1400619eb:	ss (bad) 
   1400619ed:	rex.WRX add al,0x39
   1400619f0:	std    
   1400619f1:	leave  
   1400619f2:	sti    
   1400619f3:	jmp    QWORD PTR [rsp+rbp*8]
   1400619f6:	fcomi  st,st(7)
   1400619f8:	push   rdx
   1400619f9:	rex.RX (bad) 
   1400619fc:	gs jp  0x14006197f
   1400619ff:	mov    esi,0x62734fa4
   140061a04:	loopne 0x140061a25
   140061a06:	sbb    eax,0xf5340f5e
   140061a0b:	test   DWORD PTR [rbp-0x33],esp
   140061a0e:	jle    0x1400619d9
   140061a10:	in     al,dx
   140061a11:	pop    rax
   140061a12:	scas   al,BYTE PTR es:[rdi]
   140061a13:	(bad)  
   140061a14:	(bad)  
   140061a15:	cli    
   140061a16:	jns    0x140061a81
   140061a18:	(bad)  
   140061a19:	(bad)  
   140061a1a:	fcmovnu st,st(7)
   140061a1c:	sbb    eax,0x3a34013
   140061a21:	pushf  
   140061a22:	mov    bl,0x5
   140061a24:	or     al,BYTE PTR [rax-0x7d83423]
   140061a2a:	repz and BYTE PTR [rbx],bh
   140061a2d:	mov    ah,0xe1
   140061a2f:	sbb    bh,BYTE PTR [rbx]
   140061a31:	and    eax,0x2de360e0
   140061a36:	stos   BYTE PTR es:[rdi],al
   140061a37:	(bad)  
   140061a38:	call   rax
   140061a3a:	xchg   ebx,eax
   140061a3c:	clc    
   140061a3d:	clc    
   140061a3e:	test   BYTE PTR [rsi-0x1290e355],dh
   140061a44:	jno    0x140061a38
   140061a46:	movabs al,ds:0x570675ab7ccbe90f
   140061a50:	cld    
   140061a51:	(bad)  
   140061a52:	mov    WORD PTR [rbp-0x2c],ds
   140061a55:	(bad)  
   140061a56:	(bad)  
   140061a57:	(bad)  
   140061a58:	(bad)  
   140061a59:	(bad)  
   140061a5a:	(bad)  
   140061a5b:	inc    BYTE PTR [rax+riz*2]
   140061a5e:	jno    0x140061acd
   140061a60:	(bad)  
   140061a61:	jno    0x140061a05
   140061a63:	int    0x11
   140061a65:	rex.B
   140061a66:	rex.WR
   140061a67:	add    DWORD PTR fs:[rsi],esi
   140061a6a:	add    ch,BYTE PTR [rdx+0x4a10b795]
   140061a70:	repnz rex.WRX (bad) 
   140061a73:	xor    al,0x2
   140061a75:	(bad)  
   140061a76:	rex.WB xor BYTE PTR [r9-0x74],0x51
   140061a7b:	nop
   140061a7c:	adc    ah,BYTE PTR [rdx]
   140061a7e:	(bad)  
   140061a7f:	or     dl,0x18
   140061a82:	nop
   140061a83:	stos   BYTE PTR es:[rdi],al
   140061a84:	cli    
   140061a85:	sbb    eax,0x4e1158bf
   140061a8a:	int    0xae
   140061a8c:	std    
   140061a8d:	fwait
   140061a8e:	scas   al,BYTE PTR es:[rdi]
   140061a8f:	xlat   BYTE PTR ds:[rbx]
   140061a90:	and    al,0xc0
   140061a92:	sub    eax,0xfb6fc7eb
   140061a97:	imul   esi,DWORD PTR [rbx],0xffffff9d
   140061a9a:	mov    ch,0xb4
   140061a9c:	(bad)  
   140061a9d:	test   eax,0x8c3e80f9
   140061aa2:	(bad)  
   140061aa3:	pop    rax
   140061aa4:	add    ebp,DWORD PTR [rsi]
   140061aa6:	test   BYTE PTR [rip+0xffffffffb6ab8387],0x14        # 0xf6b19e34
   140061aad:	jge    0x140061a98
   140061aaf:	(bad)  
   140061ab0:	(bad)  
   140061ab1:	cmp    ecx,DWORD PTR [rip+0xffffffffdd769e09]        # 0x11d7cb8c0
   140061ab7:	pop    rdx
   140061ab8:	rex.XB cmp BYTE PTR [r10-0x1a],0xd2
   140061abd:	pop    rbp
   140061abe:	stc    
   140061abf:	jae    0x140061adc
   140061ac1:	(bad)  
   140061ac2:	jg     0x140061ac6
   140061ac4:	enter  0x6496,0xe7
   140061ac8:	pop    rbx
   140061ac9:	(bad)  
   140061aca:	sti    
   140061acb:	and    DWORD PTR [rdx+0x7e70e1ce],eax
   140061ad1:	adc    eax,0x5e7ae47c
   140061ad6:	or     eax,0x4be0c2b7
   140061adb:	rex.R xor BYTE PTR [rcx-0x74],0x51
   140061ae0:	nop
   140061ae1:	adc    ah,BYTE PTR [rdx]
   140061ae3:	(bad)  
   140061ae4:	sub    BYTE PTR [rdx-0x5556fe2],0x1d
   140061aeb:	mov    edi,0x3b351418
   140061af0:	rex.WR int3 
   140061af2:	leave  
   140061af3:	cs (bad) 
   140061af5:	(bad)  
   140061af6:	outs   dx,DWORD PTR ds:[rsi]
   140061af7:	(bad)  
   140061af9:	(bad)  
   140061afa:	rcr    BYTE PTR [rcx+rbp*8+0xd1f87d1],0x77
   140061b02:	ficom  WORD PTR [rcx-0x715cab61]
   140061b08:	idiv   BYTE PTR [rax]
   140061b0a:	sbb    DWORD PTR [rdi],ebx
   140061b0c:	shl    BYTE PTR [rdi-0xc],1
   140061b0f:	and    DWORD PTR [rbx],edx
   140061b11:	scas   eax,DWORD PTR es:[rdi]
   140061b12:	clc    
   140061b13:	(bad)  
   140061b14:	pop    rsi
   140061b15:	jno    0x140061b28
   140061b17:	repnz xor al,0xe4
   140061b1a:	(bad)  
   140061b1b:	fld    TBYTE PTR [rdi]
   140061b1d:	push   rsi
   140061b1e:	retf   0xeaca
   140061b21:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140061b22:	call   0x13c25c10e
   140061b27:	hlt    
   140061b28:	gs (bad) 
   140061b2a:	rex.WR add cl,r11b
   140061b2d:	mov    ebp,0xa04482e
   140061b32:	sub    BYTE PTR [rbp-0x4c07c435],0x17
   140061b39:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140061b3a:	(bad)  
   140061b3b:	push   rsi
   140061b3c:	test   BYTE PTR [rbx],al
   140061b3e:	sbb    ebx,DWORD PTR [rdi-0x63]
   140061b41:	shl    eax,1
   140061b43:	lea    edi,[rdi-0x8]
   140061b46:	rex.RX mov eax,0xc00cef8f
   140061b4c:	adc    eax,0x3ee271ed
   140061b51:	movabs al,ds:0x7f5ee30e9cbbe8cf
   140061b5a:	mov    esp,0xd8a07dd
   140061b5f:	sub    esi,DWORD PTR [rdi]
   140061b61:	mov    dh,0x4c
   140061b63:	mov    BYTE PTR [rsi],cl
   140061b65:	(bad)  
   140061b66:	ror    ah,cl
   140061b68:	or     esp,DWORD PTR [rsi+rdx*2]
   140061b6b:	sub    al,0xf6
   140061b6d:	repnz or BYTE PTR [rsi+0x36],bh
   140061b71:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140061b72:	rex.WXB
   140061b73:	es add bh,ah
   140061b76:	ins    BYTE PTR es:[rdi],dx
   140061b77:	add    DWORD PTR [rdx],0xcad5f9cc
   140061b7d:	rex.WXB mov r11b,0x3d
   140061b80:	scas   eax,DWORD PTR es:[rdi]
   140061b81:	xchg   BYTE PTR [rbx],dl
   140061b83:	and    eax,0x8c02225f
   140061b88:	push   rbx
   140061b89:	repnz xchg edx,eax
   140061b8b:	lods   al,BYTE PTR ds:[rsi]
   140061b8c:	retf   
   140061b8d:	pop    rsp
   140061b8e:	shr    DWORD PTR [rax-0x5550ed9],0x9d
   140061b95:	mov    esi,0x94284562
   140061b9a:	and    al,0x35
   140061b9c:	rex.WRX xchg rsi,rax
   140061b9e:	in     al,dx
   140061b9f:	add    eax,0xca3b22ed
   140061ba4:	(bad)  
   140061ba5:	sbb    ebx,DWORD PTR [rsi+0x13]
   140061ba8:	(bad)  
   140061ba9:	lods   eax,DWORD PTR ds:[rsi]
   140061baa:	jg     0x140061c11
   140061bac:	(bad)
   140061bb0:	fcmovnu st,st(0)
   140061bb2:	(bad)  
   140061bb4:	pushf  
   140061bb5:	sub    BYTE PTR [rcx],0x69
   140061bb8:	jg     0x140061b48
   140061bba:	jrcxz  0x140061bbd
   140061bbc:	cli    
   140061bbd:	mov    bh,BYTE PTR [rsi]
   140061bbf:	retf   
   140061bc0:	xor    esp,esi
   140061bc2:	adc    DWORD PTR [rdx+riz*8],edi
   140061bc5:	jnp    0x140061c33
   140061bc7:	and    BYTE PTR [rbp+0x5e2e63e0],bh
   140061bcd:	test   al,0x5f
   140061bcf:	test   al,0xbc
   140061bd1:	(bad)  
   140061bd2:	(bad)  
   140061bd3:	cli    
   140061bd4:	jns    0x140061bcf
   140061bd6:	add    al,0x3f
   140061bd8:	pop    rbx
   140061bd9:	fiadd  DWORD PTR [rip+0xffffffffb6738013]        # 0xf6799bf2
   140061bdf:	rex add esi,edx
   140061be2:	mov    DWORD PTR [rbp-0x10],edx
   140061be5:	(bad)  
   140061be6:	cmp    al,bh
   140061be8:	(bad)  
   140061be9:	pushf  
   140061bea:	sub    al,0xd9
   140061bec:	or     eax,DWORD PTR [rsi]
   140061bee:	sbb    DWORD PTR [rbx+rcx*1-0xf],esp
   140061bf2:	test   BYTE PTR [rax+0x49ea2026],cl
   140061bf8:	(bad)  
   140061bf9:	stos   BYTE PTR es:[rdi],al
   140061bfa:	cli    
   140061bfb:	sbb    eax,0x491418bf
   140061c00:	nop
   140061c01:	sbb    DWORD PTR [rbx+0x4cd93989],edx
   140061c07:	adc    al,0x49
   140061c09:	xor    BYTE PTR [rcx+0x22],0xdb
   140061c0d:	shl    esi,cl
   140061c0f:	jo     0x140061c68
   140061c11:	(bad)  
   140061c12:	push   rbx
   140061c13:	sbb    BYTE PTR [rdi+0x75],bl
   140061c16:	mov    cl,0xa9
   140061c18:	and    ah,bh
   140061c1a:	rex.WRXB inc QWORD PTR [r8]
   140061c1d:	ja     0x140061c25
   140061c1f:	pop    rsi
   140061c20:	fcom   QWORD PTR [rdi-0x3c648b39]
   140061c26:	sub    esp,ebp
   140061c28:	(bad)  
   140061c29:	cli    
   140061c2a:	rex.B (bad) 
   140061c2c:	rcl    DWORD PTR [rdi-0xc],1
   140061c2f:	sbb    DWORD PTR [rdi],ecx
   140061c31:	pop    rsi
   140061c32:	in     eax,dx
   140061c33:	(bad)  
   140061c34:	mov    bh,0xfb
   140061c36:	adc    ah,BYTE PTR [rcx]
   140061c38:	jbe    0x140061c48
   140061c3a:	nop
   140061c3b:	pushf  
   140061c3c:	test   al,0x24
   140061c3e:	ret    
   140061c3f:	int3   
   140061c40:	or     esp,DWORD PTR [rsi+rdx*2]
   140061c43:	and    dh,dh
   140061c45:	repnz or bh,BYTE PTR [rsi+0x36]
   140061c49:	stos   DWORD PTR es:[rdi],eax
   140061c4a:	or     esp,DWORD PTR [rsi]
   140061c4c:	and    ah,0x5d
   140061c4f:	stc    
   140061c50:	pop    rbp
   140061c51:	cmp    BYTE PTR [rcx],0xbf
   140061c54:	or     bh,BYTE PTR [rsi]
   140061c56:	retf   0x5e79
   140061c59:	or     eax,0x4be03537
   140061c5e:	rex.R xor BYTE PTR [rcx-0x74],0x51
   140061c63:	nop
   140061c64:	adc    ah,BYTE PTR [rdx]
   140061c66:	(bad)  
   140061c67:	sub    BYTE PTR [rdx-0x5556fe2],0x1d
   140061c6e:	dec    DWORD PTR [rdi+rax*1]
   140061c71:	jg     0x140061ca5
   140061c73:	cmp    BYTE PTR [rcx+rbx*2],bl
   140061c76:	jnp    0x140061cdd
   140061c78:	cwde   
   140061c79:	(bad)  
   140061c7a:	rex.R rol spl,0xab
   140061c7e:	fdivr  DWORD PTR [rdi-0x7]
   140061c81:	addr32 jg 0x140061cf2
   140061c84:	out    dx,eax
   140061c85:	or     al,0xc4
   140061c87:	rex.RX rcr BYTE PTR [rsi-0x1fc10f0a],cl
   140061c8e:	xor    edi,esi
   140061c90:	rol    DWORD PTR [rdi-0xf],1
   140061c93:	sbb    edi,edi
   140061c95:	sub    esp,ebx
   140061c97:	out    dx,al
   140061c98:	sbb    ebx,DWORD PTR [rdi]
   140061c9a:	mov    edi,esi
   140061c9c:	mov    esp,ebx
   140061c9e:	ret    0xa1f5
   140061ca1:	jns    0x140061cb8
   140061ca3:	js     0x140061ce6
   140061ca5:	sub    dl,BYTE PTR [rax]
   140061ca7:	lock cmp al,0xbe
   140061caa:	cld    
   140061cab:	(bad)  
   140061cac:	lahf   
   140061cad:	cs call 0x1be462641
   140061cb3:	(bad)  
   140061cb4:	(bad)  
   140061cb5:	(bad)  
   140061cb6:	scas   eax,DWORD PTR es:[rdi]
   140061cb7:	(bad)  
   140061cb8:	(bad)  
   140061cb9:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140061cba:	jp     0x140061d1a
   140061cbc:	or     eax,0x44be4a27
   140061cc1:	add    al,0x18
   140061cc3:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140061cc4:	in     al,0x25
   140061cc6:	pop    rcx
   140061cc7:	xchg   edi,eax
   140061cc8:	mov    ecx,0xe24f5182
   140061ccd:	push   rbp
   140061cce:	cmc    
   140061ccf:	cmp    edi,DWORD PTR [rbp-0x3b]
   140061cd2:	movabs al,ds:0x5ec964e35249428
   140061cdb:	in     eax,dx
   140061cdc:	and    bl,bl
   140061cde:	retf   
   140061cdf:	cmp    edi,DWORD PTR [rax]
   140061ce1:	sar    DWORD PTR [rcx],1
   140061ce3:	or     eax,esi
   140061ce5:	mov    DWORD PTR [rcx+0x26],eax
   140061ce8:	pop    rsi
   140061ce9:	int    0xfe
   140061ceb:	retf   
   140061cec:	(bad)  
   140061ced:	sti    
   140061cee:	or     ebp,DWORD PTR [rbx+0x26]
   140061cf1:	and    eax,0x1f4a3db
   140061cf6:	jge    0x140061c9b
   140061cf8:	sub    edi,esi
   140061cfa:	std    
   140061cfb:	ret    
   140061cfc:	ins    DWORD PTR es:[rdi],dx
   140061cfd:	lock lahf 
   140061cff:	rcr    al,0x5b
   140061d02:	cld    
   140061d03:	or     DWORD PTR [rax+0x63],eax
   140061d06:	pop    rsi
   140061d07:	add    BYTE PTR [rip+0x1c7c1545],0xfa        # 0x15c823253
   140061d0e:	sahf   
   140061d0f:	push   rdi
   140061d10:	ret    
   140061d11:	mov    DWORD PTR [rsi],ebp
   140061d13:	fcom   DWORD PTR [rax-0x6c]
   140061d16:	jne    0x140061cdd
   140061d18:	test   DWORD PTR [rax+0x49ea2026],ecx
   140061d1e:	(bad)  
   140061d1f:	stos   BYTE PTR es:[rdi],al
   140061d20:	cli    
   140061d21:	sbb    eax,0x24d608bf
   140061d26:	enter  0xc98c,0xc4
   140061d2a:	pushf  
   140061d2b:	ins    BYTE PTR es:[rdi],dx
   140061d2c:	mov    ah,BYTE PTR es:[rax+rax*8]
   140061d30:	cmp    BYTE PTR [rcx+0x760e69ed],dl
   140061d36:	cmc    
   140061d37:	lock mov es,eax
   140061d3a:	shl    ebx,0xb7
   140061d3d:	(bad)  
   140061d3e:	(bad)  
   140061d3f:	rcl    BYTE PTR [rbx+0x3e113f8f],0xf1
   140061d46:	ror    DWORD PTR [rdi-0x5ba70539],1
   140061d4c:	cmp    eax,0x9f407cc
   140061d51:	jge    0x140061d16
   140061d53:	fs (bad) 
   140061d55:	clc    
   140061d56:	loopne 0x140061dce
   140061d58:	(bad)  
   140061d59:	repz jrcxz 0x140061d53
   140061d5c:	mov    edx,DWORD PTR [rbp+0x71fa72b0]
   140061d62:	(bad)  
   140061d63:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140061d64:	add    bl,BYTE PTR [rbx]
   140061d66:	or     ebp,DWORD PTR [rsi+0x24d2927b]
   140061d6c:	(bad)  
   140061d6d:	xchg   BYTE PTR [rax+0x2],bh
   140061d70:	and    cl,bh
   140061d72:	rcr    BYTE PTR [rdx],1
   140061d74:	sub    eax,0x4978370b
   140061d79:	scas   al,BYTE PTR es:[rdi]
   140061d7a:	adc    BYTE PTR [rdi+0x60bfac48],cl
   140061d80:	rex jg 0x140061de0
   140061d83:	mov    esi,0x1245f03
   140061d88:	push   0x62
   140061d8a:	pop    rsi
   140061d8b:	js     0x140061da3
   140061d8d:	jg     0x140061d91
   140061d8f:	xor    BYTE PTR [rbx+0x7e70819c],dl
   140061d95:	adc    eax,0x5e7a647c
   140061d9a:	or     eax,0x222565cf
   140061d9f:	sar    BYTE PTR [rax],0x56
   140061da2:	mov    dh,0x20
   140061da4:	and    eax,0x55013444
   140061da9:	cmp    eax,0x3bf55520
   140061dae:	jle    0x140061de1
   140061db0:	sub    BYTE PTR [rdx+0x76],ch
   140061db3:	cwde   
   140061db4:	cwde   
   140061db5:	xchg   ebx,eax
   140061db6:	cmp    eax,0xceac5dae
   140061dbb:	retf   
   140061dbc:	cmp    ebx,eax
   140061dbe:	shl    DWORD PTR [rbx-0x7428ce3],1
   140061dc4:	rex.RX popf 
   140061dc6:	jnp    0x140061e43
   140061dc8:	lock mov ebx,0x7817dcf7
   140061dce:	mov    al,0x54
   140061dd0:	jnp    0x140061dd6
   140061dd2:	repz add eax,0x6d4c1fd
   140061dd8:	mov    edi,0x8c0e2179
   140061ddd:	call   0x1be3418f3
   140061de2:	fcomp  QWORD PTR [rax]
   140061de4:	jmp    0x140061d98
   140061de6:	ja     0x140061de9
   140061de8:	(bad)  
   140061dea:	iret   
   140061deb:	sbb    eax,0x7adf8395
   140061df0:	adc    dl,BYTE PTR [rcx-0x32]
   140061df3:	fild   DWORD PTR [rbx+0x1d5dd787]
   140061df9:	push   rsi
   140061dfa:	out    dx,al
   140061dfb:	jge    0x140061dc1
   140061dfd:	rex.R
   140061dfe:	ds icebp 
   140061e00:	sar    DWORD PTR [rdi-0x522994f2],1
   140061e06:	or     eax,0x79715d97
   140061e0b:	cs jb  0x140061e5c
   140061e0e:	out    0xdb,al
   140061e10:	lahf   
   140061e11:	js     0x140061e25
   140061e13:	cmp    esp,DWORD PTR [rdx]
   140061e15:	pop    rsp
   140061e16:	icebp  
   140061e17:	rex.WRXB jmp 0x13111e8e5
   140061e1d:	adc    eax,0xd3cc7c66
   140061e22:	out    0x54,al
   140061e24:	sti    
   140061e25:	leave  
   140061e26:	sub    al,0xe4
   140061e28:	ror    BYTE PTR [rbx],0x52
   140061e2b:	add    DWORD PTR [rax-0x421a0e19],0x74a747f2
   140061e35:	shl    DWORD PTR [rbx+0x0],cl
   140061e38:	jo     0x140061eb8
   140061e3a:	xor    eax,0xeb9e69e8
   140061e3f:	or     al,0x3
   140061e41:	sbb    eax,0x1703d66e
   140061e46:	rex.WB
   140061e47:	rex ins BYTE PTR es:[rdi],dx
   140061e49:	xlat   BYTE PTR ds:[rbx]
   140061e4a:	jl     0x140061e69
   140061e4c:	sub    eax,0x3d550131
   140061e51:	and    BYTE PTR [rbp-0xb],dl
   140061e54:	cmp    edi,DWORD PTR [rsi+0x31]
   140061e57:	sub    BYTE PTR [rax+0x386af3de],ch
   140061e5d:	shl    DWORD PTR [rdx+0x3c6b276e],1
   140061e63:	mov    dl,0x3d
   140061e65:	int    0xc1
   140061e67:	mov    ds,WORD PTR [rsi-0x28]
   140061e6a:	and    DWORD PTR [rcx],edx
   140061e6c:	jl     0x140061ec5
   140061e6e:	jo     0x140061ee4
   140061e70:	cmp    eax,0xaf560c2e
   140061e75:	or     edi,DWORD PTR [rdi+0x4]
   140061e78:	(bad)  
   140061e79:	add    eax,0x83dbe5cf
   140061e7e:	ins    BYTE PTR es:[rdi],dx
   140061e7f:	cmp    edi,DWORD PTR [rbp-0x70]
   140061e82:	sar    eax,cl
   140061e84:	fadd   DWORD PTR [rip+0xffffffffaae0d8e1]        # 0xeae6f76b
   140061e8a:	(bad)  
   140061e8b:	rex.RB jb 0x140061eea
   140061e8e:	(bad)
   140061e93:	shr    al,cl
   140061e95:	(bad)  
   140061e96:	jmp    0x140061e1b
   140061e98:	(bad)
   140061e9d:	or     cl,BYTE PTR [rax-0x5ca5e70b]
   140061ea3:	gs loope 0x140061eac
   140061ea6:	(bad)  
   140061ea7:	leave  
   140061ea8:	adc    eax,0xf58911e2
   140061ead:	(bad)  
   140061eae:	or     al,0xe8
   140061eb0:	scas   eax,DWORD PTR es:[rdi]
   140061eb1:	retf   
   140061eb2:	ja     0x140061e94
   140061eb4:	mov    esp,DWORD PTR [rax+riz*1]
   140061eb7:	mov    ebx,0x3246d1a7
   140061ebc:	mov    edx,0xda014e3
   140061ec1:	jle    0x140061f38
   140061ec3:	sar    BYTE PTR [rcx+rax*8-0x61],cl
   140061ec7:	add    eax,0xe0d6e28e
   140061ecc:	in     al,0x8a
   140061ece:	repz or eax,0x33b8a3d
   140061ed4:	lahf   
   140061ed5:	cld    
   140061ed6:	stos   DWORD PTR es:[rdi],eax
   140061ed7:	(bad)  
   140061ed8:	fistp  DWORD PTR [rip+0xffffffffb9f77602]        # 0xf9fd94e0
   140061ede:	je     0x140061ed0
   140061ee0:	scas   al,BYTE PTR es:[rdi]
   140061ee1:	or     bl,bl
   140061ee3:	rex.WRX (bad) 
   140061ee5:	xor    cl,dh
   140061ee7:	movabs ds:0xfa918c42bef893ab,eax
   140061ef0:	loopne 0x140061ef9
   140061ef2:	pop    rsi
   140061ef3:	nop
   140061ef4:	or     ah,BYTE PTR [rcx+rdx*1-0xfb518e8]
   140061efb:	shr    DWORD PTR [rdi-0x75],cl
   140061efe:	(bad)  
   140061eff:	add    DWORD PTR [rcx+rax*8+0x74b07ecf],esi
   140061f06:	mov    esp,0x73528fe0
   140061f0b:	jbe    0x140061f37
   140061f0d:	rol    BYTE PTR [rdi+0xab89885],0xde
   140061f14:	neg    BYTE PTR [rdi-0x1]
   140061f17:	cld    
   140061f18:	fmul   QWORD PTR [rdx-0x24d03b82]
   140061f1e:	pushf  
   140061f1f:	ja     0x140061f60
   140061f21:	mov    DWORD PTR [rsi],0x3c11c2c6
   140061f27:	out    0xdb,al
   140061f29:	(bad)  
   140061f2a:	(bad)  
   140061f2b:	rex.RXB
   140061f2c:	rex.R ins DWORD PTR es:[rdi],dx
   140061f2e:	jb     0x140061f63
   140061f30:	xchg   edx,eax
   140061f31:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140061f32:	cmp    DWORD PTR [rax],ebx
   140061f34:	loopne 0x140061ed8
   140061f36:	rex.WRXB add r13b,r10b
   140061f39:	movabs al,ds:0x66c9633a766f19af
   140061f42:	jrcxz  0x140061f88
   140061f44:	adc    ah,BYTE PTR [rax-0x64]
   140061f47:	xchg   edx,eax
   140061f48:	xchg   edi,eax
   140061f49:	fs pop rbp
   140061f4b:	out    0xa,al
   140061f4d:	rex.RX cmp eax,0xefd55789
   140061f53:	hlt    
   140061f54:	mov    ecx,0x8ac538ed
   140061f59:	mov    dl,0x26
   140061f5b:	out    0x64,al
   140061f5d:	xor    ebx,DWORD PTR [rdi+0x24]
   140061f60:	add    esi,eax
   140061f62:	mov    DWORD PTR [rdi+rcx*2+0x73],ebp
   140061f66:	mov    al,0xab
   140061f68:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140061f69:	mov    al,0x43
   140061f6b:	and    al,BYTE PTR [rdx]
   140061f6d:	xchg   edx,eax
   140061f6e:	cs loopne 0x140061efa
   140061f71:	je     0x140061fdb
   140061f73:	add    edi,DWORD PTR [rdi-0x1799c7d5]
   140061f79:	xchg   ebx,eax
   140061f7a:	(bad)  
   140061f7b:	(bad)  
   140061f7c:	mov    ebp,edx
   140061f7e:	nop
   140061f7f:	(bad)  
   140061f80:	(bad)  
   140061f81:	popf   
   140061f82:	sbb    edi,edi
   140061f84:	fcom   DWORD PTR [rsi-0x4a]
   140061f87:	cdq    
   140061f88:	scas   al,BYTE PTR es:[rdi]
   140061f89:	cwde   
   140061f8a:	(bad)  
   140061f8b:	stc    
   140061f8c:	(bad)  
   140061f8d:	xchg   ecx,eax
   140061f8e:	push   rbp
   140061f8f:	clc    
   140061f90:	or     edi,DWORD PTR [rsi]
   140061f92:	out    0x97,al
   140061f94:	in     al,0x1c
   140061f96:	jns    0x140061fb6
   140061f98:	js     0x140061fdb
   140061f9a:	sub    dl,BYTE PTR [rax]
   140061f9c:	lock cmp al,0x7e
   140061f9f:	outs   dx,BYTE PTR ds:[rsi]
   140061fa0:	pushf  
   140061fa1:	repz jnp 0x140061f7b
   140061fa4:	sar    BYTE PTR [rcx],1
   140061fa6:	mov    edi,DWORD PTR [rsi]
   140061fa8:	add    eax,ecx
   140061faa:	and    bh,bl
   140061fac:	push   rbx
   140061fad:	(bad)  
   140061fae:	(bad)  
   140061faf:	mov    esi,0x5c052873
   140061fb4:	and    al,0x1
   140061fb6:	test   eax,0x5925e7b8
   140061fbb:	xchg   edi,eax
   140061fbc:	mov    ecx,0xe24f5182
   140061fc1:	adc    eax,0x531a4741
   140061fc6:	xor    DWORD PTR [rax],ebp
   140061fc8:	mov    WORD PTR [rax+0x64],fs
   140061fcb:	sti    
   140061fcc:	mov    cl,0x6a
   140061fce:	(bad)  
   140061fcf:	stos   BYTE PTR es:[rdi],al
   140061fd0:	mov    ebx,0x73ebabce
   140061fd5:	jl     0x14006202e
   140061fd7:	rex.WRXB (bad) 
   140061fd9:	xchg   DWORD PTR [rsp+rax*1-0x5c],eax
   140061fdd:	cli    
   140061fde:	or     DWORD PTR [rbx-0x1df5103c],0x498765b
   140061fe8:	repnz mov eax,DWORD PTR [rbx-0x9]
   140061fec:	(bad)  
   140061fee:	ffree  st(0)
   140061ff0:	movsxd edi,DWORD PTR [rcx+0x5e4edf27]
   140061ff6:	icebp  
   140061ff7:	(bad)  
   140061ff8:	(bad)  
   140061ff9:	rex.WRXB jp 0x140061fc9
   140061ffc:	(bad)  
   140061ffe:	mov    bh,0x91
   140062000:	jae    0x14006203c
   140062002:	clc    
   140062003:	mov    esp,DWORD PTR [rdx+rbx*1+0x3c9ff9df]
   14006200a:	jmp    0x140061f8f
   14006200c:	(bad)
   140062011:	or     cl,BYTE PTR [rax-0x5ca5e70b]
   140062017:	gs loope 0x140062020
   14006201a:	(bad)  
   14006201b:	leave  
   14006201c:	adc    eax,0xf58911e2
   140062021:	(bad)  
   140062022:	mov    edx,cs
   140062024:	xchg   cx,ax
   140062026:	add    eax,0x8f59bac4
   14006202b:	rex.W add dl,BYTE PTR [rdx]
   14006202e:	pop    rbp
   140062030:	cmp    eax,0x4606c1cd
   140062035:	mov    esp,0xd002ee0b
   14006203a:	fmulp  st(6),st
   14006203c:	(bad)  
   14006203d:	mov    ecx,0x27113896
   140062042:	imul   eax,DWORD PTR [rdx],0xffffffc0
   140062045:	or     edx,DWORD PTR [rdx+0x42]
   140062048:	adc    r10d,DWORD PTR [rax-0x2b]
   14006204c:	add    edx,DWORD PTR [rdx+0x11]
   14006204f:	je     0x14006200a
   140062051:	movabs ds:0xdc3a06b2ba2461c2,al
   14006205a:	retf   0x1700
   14006205d:	rex.WB
   14006205e:	rex (bad) 
   140062060:	(bad)  
   140062061:	sahf   
   140062062:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140062063:	cmp    eax,ebx
   140062065:	ror    DWORD PTR [rbx],1
   140062067:	cmp    esp,DWORD PTR [rdx+riz*1]
   14006206a:	and    cl,ch
   14006206c:	add    ch,BYTE PTR [rsi]
   14006206e:	xchg   edx,eax
   14006206f:	xor    BYTE PTR [rax],0x8b
   140062072:	(bad)  
   140062073:	out    dx,eax
   140062074:	loopne 0x1400620ef
   140062076:	scas   eax,DWORD PTR es:[rdi]
   140062077:	(bad)  
   140062078:	stos   DWORD PTR es:[rdi],eax
   140062079:	ja     0x1400620ba
   14006207b:	(bad)  
   14006207c:	jb     0x1400620f5
   14006207e:	loopne 0x1400620de
   140062080:	clc    
   140062081:	lock lock jo 0x14006203d
   140062085:	out    0x55,al
   140062087:	clc    
   140062088:	add    esp,DWORD PTR [rbx+rcx*8]
   14006208b:	xor    BYTE PTR [rbp-0x1],bh
   14006208e:	xchg   ecx,eax
   14006208f:	rex.RXB add r11d,r11d
   140062092:	cwde   
   140062093:	shl    ecx,cl
   140062095:	xor    eax,0xfc598597
   14006209a:	or     eax,0xc49ce73f
   14006209f:	repnz (bad) 
   1400620a1:	and    ch,BYTE PTR [rcx+0x380999f2]
   1400620a7:	call   QWORD PTR [rbx+0x3f06ae77]
   1400620ad:	jge    0x140062080
   1400620af:	add    eax,0x39d7003b
   1400620b4:	(bad)  
   1400620b5:	cmp    bh,BYTE PTR [rsi+rsi*8]
   1400620b8:	xchg   esi,eax
   1400620b9:	jmp    0x14006207a
   1400620bb:	test   DWORD PTR [rax+0x14],edi
   1400620be:	rex.WRX jl 0x14006204a
   1400620c1:	or     DWORD PTR [rax],ebp
   1400620c3:	js     0x14006210a
   1400620c5:	rcr    BYTE PTR [rcx+0x1d],1
   1400620c8:	fs jnp 0x140062124
   1400620cb:	adc    bl,BYTE PTR [rip+0xffffffffadc3a06e]        # 0xedc9c13f
   1400620d1:	or     al,0x70
   1400620d3:	xchg   ecx,eax
   1400620d4:	add    al,0x18
   1400620d6:	(bad)  
   1400620d7:	mov    dl,0x3d
   1400620d9:	int    0xc1
   1400620db:	scas   al,BYTE PTR es:[rdi]
   1400620dc:	sahf   
   1400620dd:	ret    0x890e
   1400620e0:	or     BYTE PTR [rax-0x46],cl
   1400620e3:	or     BYTE PTR [rbx-0x7f0ddfdc],0xce
   1400620ea:	lock cld 
   1400620ec:	ja     0x1400620eb
   1400620ee:	push   rbp
   1400620ef:	ror    cl,0x9b
   1400620f2:	or     esi,DWORD PTR [rdi-0x20]
   1400620f5:	ret    0x3e58
   1400620f8:	(bad)  
   1400620f9:	rex.WRX or r10b,BYTE PTR [rsi-0x4ec939bb]
   140062100:	ins    DWORD PTR es:[rdi],dx
   140062101:	mov    ecx,0x2f2be39d
   140062106:	mov    dl,0xf7
   140062108:	sti    
   140062109:	popf   
   14006210a:	jae    0x14006215e
   14006210c:	cmp    esp,ecx
   14006210e:	xchg   edx,eax
   140062110:	rex.WRB add rax,0xffffffffcfc79e02
   140062116:	in     eax,dx
   140062117:	loopne 0x1400620c0
   140062119:	ret    
   14006211a:	mov    edx,0xfaa80260
   14006211f:	lods   eax,DWORD PTR ds:[rsi]
   140062120:	(bad)  
   140062121:	jae    0x140062183
   140062123:	clc    
   140062124:	(bad)  
   140062125:	hlt    
   140062126:	sbb    eax,0x979e32c7
   14006212b:	jo     0x1400620c4
   14006212d:	xchg   ebp,eax
   14006212e:	mov    edx,0x45645952
   140062133:	rcl    BYTE PTR [rcx-0x62],1
   140062136:	test   eax,0x30461418
   14006213b:	mov    dl,0xfd
   14006213d:	pop    rax
   14006213e:	rcl    DWORD PTR [rsi+rbx*2+0x54],1
   140062142:	loopne 0x140062166
   140062144:	or     DWORD PTR [rax],edx
   140062146:	mov    bh,0xd4
   140062148:	out    0xf8,eax
   14006214a:	scas   al,BYTE PTR es:[rdi]
   14006214b:	sahf   
   14006214c:	ret    0x890e
   14006214f:	or     BYTE PTR [rax-0x46],cl
   140062152:	or     BYTE PTR [rbx+0xcf22024],0x8d
   140062159:	mov    ah,0xc9
   14006215b:	mov    cl,0xf3
   14006215d:	ret    
   14006215e:	(bad)  
   14006215f:	(bad)  
   140062160:	clc    
   140062161:	xchg   edi,eax
   140062162:	ins    BYTE PTR es:[rdi],dx
   140062163:	jns    0x1400621ba
   140062165:	cld    
   140062166:	movabs ds:0x19dfc71819de2b7,eax
   14006216f:	(bad)  
   140062170:	mov    bh,0x1c
   140062172:	(bad)  
   140062173:	mov    dh,0x85
   140062175:	ins    DWORD PTR es:[rdi],dx
   140062176:	retf   0xfc57
   140062179:	(bad)  
   14006217a:	mov    ds,WORD PTR [rsi-0x297959e1]
   140062180:	ret    0x350f
   140062183:	lahf   
   140062184:	int3   
   140062185:	(bad)  
   140062186:	es jb  0x140062158
   140062189:	cmp    bh,bh
   14006218b:	mov    bl,0xac
   14006218d:	cmc    
   14006218e:	rex.B movabs eax,ds:0x3ef8680a858023c2
   140062198:	stos   DWORD PTR es:[rdi],eax
   140062199:	xchg   esi,eax
   14006219a:	mov    al,0x89
   14006219c:	jp     0x140062197
   14006219e:	add    al,0x7b
   1400621a0:	push   rdx
   1400621a1:	push   rdx
   1400621a2:	sbb    al,0xeb
   1400621a4:	(bad)  
   1400621a5:	sbb    BYTE PTR [rbp-0x65],dl
   1400621a8:	rex.R (bad) 
   1400621aa:	nop
   1400621ab:	stos   BYTE PTR es:[rdi],al
   1400621ac:	add    ch,BYTE PTR [rsi]
   1400621ae:	xchg   edx,eax
   1400621af:	add    BYTE PTR [rdi-0x7a],ah
   1400621b2:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400621b3:	cmp    eax,ebx
   1400621b5:	rex xchg DWORD PTR [rbx+0x75140f44],esp
   1400621bc:	mov    DWORD PTR [rax+rdx*8],0xa56b38c1
   1400621c3:	in     al,dx
   1400621c4:	adc    eax,0x2409c1d0
   1400621c9:	and    eax,0x1404c4be
   1400621ce:	mov    esp,0xa692e822
   1400621d3:	xor    bl,BYTE PTR [rax-0x63]
   1400621d6:	sbb    DWORD PTR cs:[rsi+0x57],0x20248a22
   1400621de:	imul   eax,DWORD PTR [rbx+0x60e69e29],0x47
   1400621e5:	(bad)  
   1400621e6:	in     al,dx
   1400621e7:	nop
   1400621e8:	mov    BYTE PTR [rax+0x48b80ba4],al
   1400621ee:	add    ah,BYTE PTR [rdx]
   1400621f0:	iret   
   1400621f1:	push   rax
   1400621f2:	rex.WRXB ret 
   1400621f4:	ja     0x1400621fb
   1400621f6:	xor    DWORD PTR [rcx],eax
   1400621f8:	jo     0x14006221c
   1400621fa:	(bad)  
   1400621fb:	fimul  DWORD PTR [rdi-0x28021f91]
   140062201:	(bad)  
   140062203:	xor    dl,cl
   140062205:	sbb    DWORD PTR cs:[rdi-0x4a],0xffffff85
   14006220a:	ins    DWORD PTR es:[rdi],dx
   14006220b:	(bad)
   140062210:	not    BYTE PTR [rdi-0x3604836b]
   140062216:	add    DWORD PTR [rsi-0x70],ebx
   140062219:	or     ah,BYTE PTR [rcx+rdx*8+0x47f06d2f]
   140062220:	jmp    FWORD PTR [rsi+rdi*8]
   140062223:	add    al,0x60
   140062225:	jbe    0x1400621fb
   140062227:	cmp    ch,BYTE PTR [rbx+0x7885cce8]
   14006222d:	test   eax,0x8e565de3
   140062232:	(bad)  
   140062233:	push   rsp
   140062234:	(bad)  
   140062235:	pop    rcx
   140062236:	adc    DWORD PTR [rsp+rdx*4+0x67],esi
   14006223a:	jb     0x14006227d
   14006223c:	cdq    
   14006223d:	or     BYTE PTR [rcx],dh
   14006223f:	xor    ebx,DWORD PTR [rsi-0x7d25d582]
   140062245:	jbe    0x140062288
   140062247:	lods   al,BYTE PTR ds:[rsi]
   140062248:	shl    bh,1
   14006224a:	in     al,dx
   14006224b:	jbe    0x140062241
   14006224d:	ret    0x890e
   140062250:	or     BYTE PTR [rax+0x75],cl
   140062253:	add    DWORD PTR [rdi],edx
   140062255:	rex.WB
   140062256:	in     al,0x19
   140062259:	(bad)  
   14006225a:	imul   edx,DWORD PTR [rip+0x62738e3c],0xed30129e        # 0x1a279b0a0
   140062264:	fld    DWORD PTR [rbp+0x3ec7f32d]
   14006226a:	outs   dx,BYTE PTR ds:[rsi]
   14006226b:	push   0x28
   14006226d:	mov    cl,0x54
   14006226f:	movzx  eax,BYTE PTR [rcx+0x13e2616d]
   140062276:	jle    0x14006228b
   140062278:	js     0x140062252
   14006227a:	(bad)  
   14006227b:	cmp    edi,eax
   14006227d:	call   0x1a8747a08
   140062282:	repnz popf 
   140062284:	jmp    FWORD PTR [rcx]
   140062286:	fild   DWORD PTR [rsi]
   140062288:	jg     0x1400622fc
   14006228a:	(bad)  
   14006228b:	mov    dl,0xc5
   14006228d:	lahf   
   14006228e:	add    BYTE PTR [rdx+0x33a1de91],ch
   140062294:	mov    ebx,DWORD PTR [rsi-0x73]
   140062297:	sbb    eax,0x86aa905b
   14006229c:	(bad)
   1400622a0:	icebp  
   1400622a1:	mov    ah,BYTE PTR [rax-0x3e6b4ab5]
   1400622a7:	rex.WX movabs ds:0x91700cadc3a06b2b,al
   1400622b1:	add    al,0x64
   1400622b3:	ins    DWORD PTR es:[rdi],dx
   1400622b4:	loopne 0x14006232f
   1400622b6:	(bad)  
   1400622b7:	sbb    DWORD PTR [rip+0x2243b0bd],0x2        # 0x16249d37b
   1400622be:	xchg   edx,eax
   1400622bf:	cs loopne 0x1400622e4
   1400622c2:	or     DWORD PTR [rax-0x32c2bcc4],ecx
   1400622c8:	rol    DWORD PTR [rax],0xed
   1400622cb:	popf   
   1400622cc:	xor    ebx,0xe140855e
   1400622d2:	(bad)  
   1400622d3:	mov    edx,0xdc41e108
   1400622d8:	adc    eax,0xbfd7f6f8
   1400622dd:	(bad)  
   1400622de:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400622df:	ror    DWORD PTR [rbp+riz*4-0x49892f8a],1
   1400622e6:	sub    DWORD PTR [rcx-0x4a],0x5e1c306f
   1400622ed:	jge    0x140062368
   1400622ef:	cmc    
   1400622f0:	rex.WB (bad) 
   1400622f2:	movabs ds:0xf502f112130d87f2,eax
   1400622fb:	int3   
   1400622fc:	ss clc 
   1400622fe:	mov    ecx,0xb294b7ed
   140062303:	cs cwde 
   140062305:	add    BYTE PTR [rdx-0x16628d22],cl
   14006230b:	cmp    ecx,DWORD PTR [rsi+0x520bc032]
   140062311:	rex.X
   140062312:	adc    r10d,DWORD PTR [rax]
   140062315:	gs push rbx
   140062317:	xchg   ecx,eax
   140062318:	and    ch,al
   14006231a:	movsxd rsi,DWORD PTR [rdx+0x41]
   14006231e:	cdq    
   14006231f:	or     BYTE PTR [rcx],dh
   140062321:	xor    ebx,DWORD PTR [rsi+0x515a2a7e]
   140062327:	mov    bh,0xaf
   140062329:	(bad)  
   14006232a:	mov    DWORD PTR [rdx+rdi*8],edx
   14006232d:	sbb    al,0xdf
   14006232f:	ror    DWORD PTR [rbx],1
   140062331:	cmp    esp,DWORD PTR [rdx+riz*1]
   140062334:	and    BYTE PTR [rbx],ch
   140062336:	jb     0x1400623a5
   140062338:	lods   al,BYTE PTR ds:[rsi]
   140062339:	icebp  
   14006233a:	or     al,0xf5
   14006233c:	xor    al,0x7
   14006233e:	cmp    ebx,DWORD PTR [rsi]
   140062340:	outs   dx,DWORD PTR ds:[rsi]
   140062341:	or     ebx,DWORD PTR [rsi]
   140062343:	(bad)  
   140062344:	ja     0x14006234b
   140062346:	addr32 jno 0x1400622d4
   140062349:	mov    esp,fs
   14006234b:	iret   
   14006234c:	jg     0x140062334
   14006234e:	(bad)  
   14006234f:	lock add DWORD PTR [rdi-0x8],0xfffffffe
   140062354:	add    BYTE PTR [rcx+0x66d073a5],dh
   14006235a:	fimul  DWORD PTR [rsi-0x75]
   14006235d:	addr32 icebp 
   14006235f:	sbb    eax,0x97ddbb3f
   140062364:	mov    edi,0x4c5a07e7
   140062369:	loopne 0x1400623bd
   14006236b:	rex test eax,0x78f3c040
   140062371:	sbb    edi,esp
   140062373:	cmc    
   140062374:	loopne 0x14006231d
   140062376:	repz mov edx,0x9df00268
   14006237c:	jmp    0x12bc3b1bc
   140062381:	jns    0x14006238c
   140062383:	ja     0x1400623de
   140062385:	cmp    DWORD PTR [rdx],ecx
   140062387:	push   rdx
   140062388:	pop    rcx
   140062389:	rex.RB rcl BYTE PTR fs:[r9-0x62],1
   14006238e:	test   eax,0x30461418
   140062393:	mov    dl,0xfd
   140062395:	pop    rax
   140062396:	rcl    DWORD PTR [rsi+rbx*2+0x54],1
   14006239a:	loopne 0x1400623be
   14006239c:	or     DWORD PTR [rax],edx
   14006239e:	mov    bh,0xd4
   1400623a0:	out    0xf8,eax
   1400623a2:	scas   al,BYTE PTR es:[rdi]
   1400623a3:	sahf   
   1400623a4:	ret    0x890e
   1400623a7:	or     BYTE PTR [rax-0x46],cl
   1400623aa:	or     BYTE PTR [rbx+0xcf22024],0xf5
   1400623b1:	xor    al,0x7
   1400623b3:	(bad)  
   1400623b4:	js     0x140062392
   1400623b6:	sub    cl,BYTE PTR [rdi+0x3ea81262]
   1400623bc:	sub    esi,esi
   1400623be:	test   eax,0x776edd8f
   1400623c3:	(bad)  
   1400623c4:	push   0x783852d2
   1400623c9:	(bad)
   1400623cc:	addr32 movsxd eax,edi
   1400623cf:	push   rdi
   1400623d0:	loope  0x1400623a1
   1400623d2:	ja     0x140062379
   1400623d4:	pop    rbp
   1400623d5:	lea    esi,[rbx-0x44]
   1400623d8:	repz (bad) 
   1400623da:	test   eax,0x7a8627ce
   1400623df:	mov    esp,0xc14efe0d
   1400623e4:	rex.WRXB (bad) 
   1400623e6:	jne    0x1400623b1
   1400623e8:	add    al,0xc0
   1400623ea:	xchg   ecx,eax
   1400623eb:	rex.WB jae 0x140062386
   1400623ee:	add    al,0x44
   1400623f0:	xchg   esp,eax
   1400623f1:	js     0x140062434
   1400623f3:	rex.WX mov BYTE PTR [rax+0x2],bpl
   1400623f7:	stos   BYTE PTR es:[rdi],al
   1400623f8:	mov    dl,0x20
   1400623fa:	adc    eax,0x95349741
   1400623ff:	ror    DWORD PTR [rdx-0x5e],0x2b
   140062403:	imul   esp,DWORD PTR [rax+0x700cadc3],0xffffff91
   14006240a:	add    al,0x64
   14006240c:	ins    DWORD PTR es:[rdi],dx
   14006240d:	loopne 0x140062488
   14006240f:	(bad)  
   140062410:	sbb    DWORD PTR [rip+0x2243b0bd],0x2        # 0x16249d4d4
   140062417:	xchg   edx,eax
   140062418:	cs loopne 0x14006243d
   14006241b:	or     DWORD PTR [rax-0x32c2bcc4],ecx
   140062421:	ror    DWORD PTR [rip+0xffffffffbaa48a1e],0xa7        # 0xfaaaae46
   140062428:	xchg   DWORD PTR [rsi-0x79],edx
   14006242b:	icebp  
   14006242c:	jne    0x1400623ea
   14006242e:	cmp    eax,0xe162cf88
   140062433:	(bad)  
   140062434:	rol    bh,0x3e
   140062437:	cld    
   140062438:	(bad)  
   140062439:	mov    edx,0x2ec46e8a
   14006243e:	std    
   14006243f:	test   eax,0x72b13adb
   140062444:	xor    ebx,esi
   140062446:	test   BYTE PTR [rdi+rdx*8-0x2e6cd5cb],cl
   14006244d:	jo     0x140062436
   14006244f:	xchg   BYTE PTR [rdx],bl
   140062451:	and    bl,BYTE PTR [rdi]
   140062453:	rex.R stc 
   140062455:	ss clc 
   140062457:	out    0xb,eax
   140062459:	jle    0x140062455
   14006245b:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14006245c:	or     esp,DWORD PTR [rsi]
   14006245e:	add    bh,bl
   140062460:	cdq    
   140062461:	rex.RB scas eax,DWORD PTR es:[rdi]
   140062463:	ret    0xcf3c
   140062466:	movabs ds:0x8af0501312f89b9,eax
   14006246f:	cmp    dl,BYTE PTR [rsi]
   140062471:	movsxd esi,DWORD PTR [rdx+0x41]
   140062474:	cdq    
   140062475:	or     BYTE PTR [rcx],dh
   140062477:	xor    ebx,DWORD PTR [rsi+0x515a2a7e]
   14006247d:	mov    bh,0xaf
   14006247f:	(bad)  
   140062480:	mov    DWORD PTR [rdx+rdi*8],edx
   140062483:	sbb    al,0xdf
   140062485:	ror    DWORD PTR [rbx],1
   140062487:	cmp    esp,DWORD PTR [rdx+riz*1]
   14006248a:	and    BYTE PTR [rbx],ch
   14006248c:	push   rdx
   14006248d:	mov    bl,0x1c
   14006248f:	adc    BYTE PTR [rcx+0x26],bh
   140062492:	(bad)  
   140062493:	in     eax,0x1d
   140062495:	fsubr  st(0),st
   140062497:	movabs eax,ds:0xe236c6a60a9bab88
   1400624a0:	cmp    bh,cl
   1400624a2:	je     0x140062495
   1400624a4:	sub    bh,dl
   1400624a6:	xchg   edi,edi
   1400624a8:	clc    
   1400624a9:	sub    ecx,0xffffffc5
   1400624ac:	movabs eax,ds:0x46d0f82f98647cee
   1400624b5:	jg     0x14006247c
   1400624b7:	jg     0x1400624e3
   1400624b9:	mov    ebp,0xb08d60f3
   1400624be:	(bad)  
   1400624bf:	xor    al,0xdc
   1400624c1:	mov    ecx,0x7cd486a1
   1400624c6:	rol    BYTE PTR [rsi],1
   1400624c8:	inc    DWORD PTR [rdx-0x3f]
   1400624cb:	iret   
   1400624cc:	icebp  
   1400624cd:	mov    dl,0xf8
   1400624cf:	adc    eax,DWORD PTR [rax-0x15bfacc6]
   1400624d5:	jmp    0x140062550
   1400624d7:	cmp    bl,BYTE PTR [rdx+0x62]
   1400624da:	add    ah,BYTE PTR [rax]
   1400624dc:	lahf   
   1400624dd:	(bad)  
   1400624de:	fs rex.RB shl r13b,1
   1400624e2:	push   rcx
   1400624e3:	push   rbx
   1400624e4:	or     ecx,DWORD PTR [rcx+rcx*8]
   1400624e7:	xchg   ebx,eax
   1400624e8:	outs   dx,DWORD PTR ds:[rsi]
   1400624e9:	rex.RB mov r13d,0x491444ae
   1400624ef:	rex (bad) 
   1400624f1:	(bad)  
   1400624f2:	sbb    BYTE PTR [rdx+riz*2-0x48],ah
   1400624f6:	jp     0x140062502
   1400624f8:	cmp    esp,DWORD PTR [rdx+rax*2+0x5c022a40]
   1400624ff:	and    al,0x1
   140062501:	xchg   ecx,eax
   140062502:	addr32 test al,0xa7
   140062505:	cmp    DWORD PTR [rax+0x571143c1],edi
   14006250b:	(bad)  
   14006250c:	adc    eax,0x5f1f8ee4
   140062511:	ja     0x140062578
   140062513:	cmp    BYTE PTR [rsi],dh
   140062515:	mov    dl,0xce
   140062517:	je     0x14006250b
   140062519:	push   0xfffffffffffffffa
   14006251b:	(bad)  
   14006251c:	jno    0x14006257c
   14006251e:	ins    DWORD PTR es:[rdi],dx
   14006251f:	jne    0x140062573
   140062521:	rex.RXB xchg r15d,eax
   140062523:	sbb    eax,0xf15f2db4
   140062528:	(bad)  
   140062529:	ss mov ah,0x2a
   14006252c:	rex.WR lods al,BYTE PTR ds:[rsi]
   14006252e:	mov    esp,0x7eaeecd8
   140062533:	(bad)  
   140062534:	mov    al,0xb5
   140062536:	cmp    eax,0xe6a40a53
   14006253b:	xor    DWORD PTR [rsi],0xfffffff8
   14006253e:	repz sbb BYTE PTR [rax-0x6a031984],ch
   140062545:	(bad)  
   140062546:	retf   
   140062547:	loop   0x140062598
   140062549:	add    dh,dl
   14006254b:	xchg   edi,eax
   14006254c:	(bad)  
   14006254d:	mov    al,0x8c
   14006254f:	(bad)  
   140062550:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140062551:	test   BYTE PTR [rax+0x15d20026],cl
   140062557:	scas   eax,DWORD PTR es:[rdi]
   140062558:	or     BYTE PTR [rdx],bh
   14006255a:	lea    edx,[rcx]
   14006255c:	(bad)  
   14006255d:	rex.WXB movabs ds:0x922e0195b8740dc3,al
   140062567:	sub    BYTE PTR [rbp+rbp*4+0x70c4c831],0x1
   14006256f:	pop    rax
   140062570:	fsub   DWORD PTR [rcx]
   140062572:	adc    eax,0xe0115202
   140062577:	and    cl,BYTE PTR [rcx]
   140062579:	mov    BYTE PTR [rbx+rax*2],bh
   14006257c:	cmp    eax,0x1e0dc1cd
   140062581:	mov    bh,BYTE PTR [rax+0x1d40a9ba]
   140062587:	rex.WRXB add al,0xbc
   14006258a:	jno    0x140062608
   14006258c:	rex.XB and r15b,bl
   14006258f:	(bad)  
   140062590:	jl     0x140062582
   140062592:	mov    esi,0xfdaf86ef
   140062597:	fst    QWORD PTR [rdi-0x15559553]
   14006259d:	xchg   esi,eax
   14006259e:	xor    DWORD PTR [rsi],0xffffffd1
   1400625a1:	cmps   BYTE PTR ss:[rsi],BYTE PTR es:[rdi]
   1400625a3:	cdq    
   1400625a4:	(bad)  
   1400625a5:	xchg   ecx,eax
   1400625a6:	ss clc 
   1400625a8:	stos   DWORD PTR es:[rdi],eax
   1400625a9:	shl    DWORD PTR [rcx+0x3e],0xb1
   1400625ad:	lahf   
   1400625ae:	movabs ds:0x1312031a131e179f,al
   1400625b7:	push   rax
   1400625b8:	mov    WORD PTR [rdi-0x63ff67d2],ss
   1400625be:	(bad)  
   1400625bf:	mov    cl,0x95
   1400625c1:	jno    0x140062617
   1400625c3:	stos   BYTE PTR es:[rdi],al
   1400625c4:	(bad)  [rcx-0x6ffeced1]
   1400625ca:	test   al,0x78
   1400625cc:	rex.RB shl r13b,1
   1400625cf:	mov    dl,0x85
   1400625d1:	ret    
   1400625d2:	rex.W je 0x14006263a
   1400625d5:	or     eax,0x195b874
   1400625da:	cs xchg edx,eax
   1400625dc:	sub    BYTE PTR [rbp+rcx*1-0x4f8cb0c4],0xa3
   1400625e4:	(bad)  
   1400625e5:	jbe    0x14006262f
   1400625e7:	rex.R
   1400625e8:	rol    BYTE PTR [rip+0xffffffff9101245c],cl        # 0xd1074a4b
   1400625ef:	addr32 test al,0xa7
   1400625f2:	cmp    DWORD PTR [rax+0x571143c1],edi
   1400625f8:	(bad)  
   1400625f9:	adc    eax,0x2489e3a8
   1400625fe:	(bad)  
   1400625ff:	out    dx,eax
   140062600:	or     al,0x1c
   140062602:	fnstenv [rax-0x4b]
   140062605:	pop    rsi
   140062606:	sbb    al,0xfa
   140062608:	xchg   DWORD PTR [rdi],ebp
   14006260a:	jge    0x140062645
   14006260c:	cmp    al,0xc4
   14006260e:	(bad)  
   14006260f:	movabs ds:0x93326d0b68382ebe,eax
   140062618:	jno    0x140062611
   14006261a:	(bad)  
   14006261b:	sbb    al,0x6f
   14006261d:	neg    ecx
   14006261f:	idiv   esp
   140062621:	mov    WORD PTR [rdx-0x2c],fs
   140062624:	push   0x305c7a7
   140062629:	sub    BYTE PTR [rax+rdx*8-0x52],bh
   14006262d:	cld    
   14006262e:	sbb    al,BYTE PTR [rbx]
   140062630:	sbb    bh,BYTE PTR [rdx]
   140062632:	add    ch,BYTE PTR [rdx-0x42]
   140062635:	(bad)  
   140062636:	mov    ch,BYTE PTR [rbx+0x0]
   140062639:	rex.RB
   14006263a:	rex.WRXB jbe 0x14006262b
   14006263d:	push   0xffffffffbd802fd9
   140062642:	(bad)  
   140062643:	or     esp,DWORD PTR [rdx]
   140062645:	sub    eax,DWORD PTR [rdx+0x62bab2e]
   14006264b:	add    eax,0x81acae89
   140062650:	(bad)  
   140062651:	mov    bh,0x32
   140062653:	rol    BYTE PTR [rbp+0x12],0x90
   140062657:	mov    ch,0x81
   140062659:	out    0x69,eax
   14006265b:	(bad)  
   14006265c:	jbe    0x140062652
   14006265e:	ret    0x890e
   140062661:	or     BYTE PTR [rax-0x46],cl
   140062664:	or     BYTE PTR [rbx+0xcf22024],0xf5
   14006266b:	xor    al,0x7
   14006266d:	(bad)  
   14006266e:	js     0x140062698
   140062670:	loop   0x14006265c
   140062672:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140062673:	add    dh,BYTE PTR [rbp+0x3c]
   140062676:	xchg   ecx,eax
   140062677:	sbb    ch,BYTE PTR [rdi-0x4a]
   14006267a:	outs   dx,DWORD PTR ds:[rsi]
   14006267b:	sub    BYTE PTR [rsi+rbx*8],bl
   14006267e:	pop    rax
   14006267f:	mov    ebp,0xbfc5f83d
   140062684:	stc    
   140062685:	lods   al,BYTE PTR ds:[rsi]
   140062686:	ins    DWORD PTR es:[rdi],dx
   140062687:	mov    bh,0x17
   140062689:	sti    
   14006268a:	push   0xffffffffffffff80
   14006268c:	popf   
   14006268d:	xchg   esi,eax
   14006268e:	rcl    BYTE PTR [rsi],0x33
   140062691:	cdq    
   140062692:	outs   dx,DWORD PTR ds:[rsi]
   140062693:	imul   DWORD PTR [rbp-0x6112347]
   140062699:	sbb    esp,DWORD PTR [rcx]
   14006269b:	push   rdx
   14006269c:	popf   
   14006269d:	mov    edi,0x1962aa4c
   1400626a2:	(bad)  
   1400626a3:	jl     0x1400626a9
   1400626a5:	(bad)  
   1400626a6:	pop    rdx
   1400626a7:	(bad)  
   1400626a8:	js     0x1400626fc
   1400626aa:	in     eax,0x6c
   1400626ac:	and    QWORD PTR [rcx],0xffffffffffffff9e
   1400626b0:	sub    BYTE PTR [rax+0x2d1ad0cf],0xb
   1400626b7:	(bad)  
   1400626b8:	js     0x140062703
   1400626ba:	scas   al,BYTE PTR es:[rdi]
   1400626bb:	adc    BYTE PTR [rdi+0x60bfac48],cl
   1400626c1:	(bad)  
   1400626c2:	jp     0x140062691
   1400626c4:	(bad)  
   1400626c5:	pop    rax
   1400626c6:	xchg   ebp,eax
   1400626c7:	xor    esp,DWORD PTR [rdx]
   1400626c9:	adc    DWORD PTR [rax],esp
   1400626cb:	scas   eax,DWORD PTR es:[rdi]
   1400626cc:	and    al,BYTE PTR [rdx]
   1400626ce:	mov    dl,0x30
   1400626d0:	js     0x140062670
   1400626d2:	out    0x60,al
   1400626d4:	add    ebx,DWORD PTR [rip+0x31a128e]        # 0x143203968
   1400626da:	and    cl,BYTE PTR [rbx]
   1400626dc:	test   al,0xe9
   1400626de:	mov    edx,ebp
   1400626e0:	mov    ebx,0xdb900760
   1400626e5:	or     DWORD PTR [rbx-0x63],eax
   1400626e8:	lods   eax,DWORD PTR ds:[rsi]
   1400626e9:	rex.X
   1400626ea:	adc    r8d,DWORD PTR [rax+0x56460902]
   1400626f1:	add    al,0x9d
   1400626f3:	push   rsp
   1400626f4:	jns    0x14006274f
   1400626f6:	adc    bl,BYTE PTR [rip+0xffffffffadc3a06e]        # 0xedc9c76a
   1400626fc:	or     al,0x70
   1400626fe:	xchg   ecx,eax
   1400626ff:	add    al,0x64
   140062701:	ins    DWORD PTR es:[rdi],dx
   140062702:	loopne 0x14006277d
   140062704:	(bad)  
   140062705:	sbb    DWORD PTR [rip+0x2243b0bd],0x2        # 0x16249d7c9
   14006270c:	xchg   edx,eax
   14006270d:	cs loopne 0x140062732
   140062710:	or     DWORD PTR [rax-0x32c2bcc4],ecx
   140062716:	ror    DWORD PTR [rip+0xffffffffbab88a1e],0xa9        # 0xfabeb13b
   14006271d:	rex sbb eax,0x23c6a44f
   140062723:	mov    DWORD PTR [rip+0xffffffffc4e0f6f3],edx        # 0x104e71e1c
   140062729:	(bad)  
   14006272a:	rex.WXB or rax,0xffffffffbff6d5e3
   140062730:	clc    
   140062731:	ror    DWORD PTR [rdi],cl
   140062733:	loop   0x140062703
   140062735:	rcl    BYTE PTR [rcx+0x33],0x89
   140062739:	push   rbp
   14006273a:	pushf  
   14006273b:	in     eax,dx
   14006273c:	xor    DWORD PTR [rbp+0x47],0x1b
   140062740:	loop   0x140062799
   140062742:	jge    0x14006273c
   140062744:	(bad)  
   140062745:	shr    ch,cl
   140062747:	jnp    0x1400627c7
   140062749:	and    WORD PTR [rdi+0x60],di
   14006274d:	adc    DWORD PTR [rbp-0xfefd5ae],ecx
   140062753:	cmp    al,0xde
   140062755:	(bad)  
   140062756:	mov    edi,0x22dc80c6
   14006275b:	movabs al,ds:0x6808b86ed0ecabe6
   140062764:	mov    dh,0xc0
   140062766:	push   rax
   140062767:	stos   DWORD PTR es:[edi],eax
   140062769:	adc    cl,dl
   14006276b:	add    al,0x40
   14006276d:	cmp    al,cl
   14006276f:	enter  0xa08a,0x53
   140062773:	fwait
   140062774:	mov    esp,0x370e892c
   140062779:	shl    cl,1
   14006277b:	push   rsi
   14006277c:	(bad)  
   14006277d:	mov    eax,0x36b20248
   140062782:	lock cmp al,0xcd
   140062785:	ror    DWORD PTR [rsi+0x1121d85e],0x1
   14006278c:	rex.WB (bad) 
   14006278e:	jo     0x140062721
   140062790:	add    al,0x44
   140062792:	sahf   
   140062793:	movabs eax,ds:0xdd5c450f06e0e69e
   14006279c:	push   rsp
   14006279d:	movabs al,ds:0x27156491e352278e
   1400627a6:	xchg   ebp,eax
   1400627a7:	push   rbx
   1400627a8:	movabs ds:0x68fc70029024dc1b,eax
   1400627b1:	mov    ah,0x8d
   1400627b3:	xor    ah,BYTE PTR [rdi-0x17]
   1400627b6:	cmp    BYTE PTR [rdx+0x4404f33a],cl
   1400627bc:	or     ebx,DWORD PTR [rcx]
   1400627be:	cld    
   1400627bf:	jl     0x14006278f
   1400627c1:	mov    edi,0xd924304a
   1400627c6:	sbb    al,0x69
   1400627c8:	add    eax,0xdbc79e02
   1400627cd:	loopne 0x1400627a6
   1400627cf:	sbb    BYTE PTR [rax+0x7cd4045b],dl
   1400627d5:	xchg   ebp,eax
   1400627d6:	cmp    eax,0xb05df91c
   1400627db:	add    eax,DWORD PTR [rax+0x2156ce21]
   1400627e1:	movabs ds:0x9d04564609e58009,al
   1400627ea:	(bad)  
   1400627ec:	gs rex.WB je 0x1400627a8
   1400627f0:	or     DWORD PTR [rsi],0x45c032b7
   1400627f6:	adc    dl,BYTE PTR [rax+0x69e781b5]
   1400627fc:	(bad)  
   1400627fd:	jbe    0x1400627f3
   1400627ff:	ret    0x890e
   140062802:	or     BYTE PTR [rax-0x46],cl
   140062805:	or     BYTE PTR [rbx+0xcf22024],0xf5
   14006280c:	xor    al,0x7
   14006280e:	(bad)  
   14006280f:	js     0x140062839
   140062811:	loop   0x1400627fd
   140062813:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140062814:	add    dh,BYTE PTR [rbp+0x3c]
   140062817:	xchg   ecx,eax
   140062818:	sbb    cl,BYTE PTR [rdi+0x2a58ab24]
   14006281e:	and    eax,eax
   140062820:	mov    edi,0xba353436
   140062825:	sar    DWORD PTR [rax+0x1ddaedcf],1
   14006282b:	mov    esi,0xcd67e774
   140062830:	cmp    al,0x72
   140062832:	iret   
   140062833:	(bad)  
   140062834:	sar    DWORD PTR [rdx],0x59
   140062837:	(bad)  
   140062838:	push   rbx
   140062839:	cld    
   14006283a:	sahf   
   14006283b:	fild   WORD PTR [rsi]
   14006283d:	and    ebx,0xf
   140062840:	lods   al,BYTE PTR ds:[rsi]
   140062841:	mov    BYTE PTR [rsi-0x2b7ea5da],ah
   140062847:	fcmovu st,st(1)
   140062849:	(bad)  
   14006284a:	mov    edi,0x24dc80c6
   14006284f:	movabs al,ds:0xf8b647c4e2ecabe6
   140062858:	adc    eax,DWORD PTR [rax+0x2ebd55b3]
   14006285e:	(bad)  
   14006285f:	add    BYTE PTR [rax-0x62],bl
   140062862:	(bad)  
   140062863:	rex.RB shr BYTE PTR fs:[r9+0x44965e4d],1
   14006286b:	xchg   DWORD PTR [rbx],ebx
   14006286d:	call   0x19c0953e2
   140062872:	and    al,0x1
   140062874:	pop    rcx
   140062875:	sbb    edi,DWORD PTR [rax-0x62]
   140062878:	out    0x60,al
   14006287a:	rex.RXB (bad) 
   14006287c:	in     al,dx
   14006287d:	nop
   14006287e:	mov    BYTE PTR [rax+0x48b80ba4],al
   140062884:	add    ah,BYTE PTR [rdx]
   140062886:	iret   
   140062887:	push   rax
   140062888:	rex.WRXB jae 0x1400628fb
   14006288b:	add    DWORD PTR [rdi+0x2a6eae22],0x50
   140062892:	(bad)  
   140062893:	adc    ebp,DWORD PTR [rcx-0x754db70f]
   140062899:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14006289a:	push   rdx
   14006289b:	xor    BYTE PTR [rcx-0x3a],0xd7
   14006289f:	repnz vpsubb xmm0,xmm11,XMMWORD PTR [rdi]
   1400628a4:	xor    edi,DWORD PTR [rdi-0x79102209]
   1400628aa:	scas   eax,DWORD PTR es:[rdi]
   1400628ab:	jrcxz  0x1400628d7
   1400628ad:	jl     0x1400628e3
   1400628af:	xchg   esp,eax
   1400628b0:	jb     0x140062919
   1400628b2:	mul    BYTE PTR [rax+0x5d]
   1400628b5:	lods   al,BYTE PTR ds:[rsi]
   1400628b6:	xchg   ebx,eax
   1400628b7:	leave  
   1400628b8:	pop    rsi
   1400628b9:	lock sub DWORD PTR [rsi-0x9],ebp
   1400628bd:	movabs eax,ds:0x6de3cf0102d4c2ee
   1400628c6:	lock imul ecx,DWORD PTR [rax+rcx*8],0x2d
   1400628cb:	add    ch,BYTE PTR [rdx-0x42]
   1400628ce:	xor    dh,BYTE PTR [rdi-0x1d]
   1400628d1:	(bad)  
   1400628d2:	icebp  
   1400628d3:	sub    eax,0x539aeb
   1400628d8:	sbb    ah,bh
   1400628da:	or     eax,0xc7413873
   1400628df:	sub    eax,DWORD PTR [rdx-0x449b8732]
   1400628e5:	rex.RX sbb r9d,ebp
   1400628e8:	loope  0x140062893
   1400628ea:	movabs eax,ds:0x2540444a20e63459
   1400628f3:	push   rdx
   1400628f4:	call   0x16f4da56c
   1400628f9:	in     al,dx
   1400628fa:	nop
   1400628fb:	mov    BYTE PTR [rax+0x48b80ba4],al
   140062901:	add    ah,BYTE PTR [rdx+rax*4+0x63]
   140062905:	(bad)  
   140062906:	out    0xf8,al
   140062908:	(bad)  
   140062909:	cmp    bl,BYTE PTR [rbp+riz*1-0x2abb22a4]
   140062910:	icebp  
   140062911:	sbb    eax,0x3e992478
   140062916:	test   eax,0xac591010
   14006291b:	or     edi,edi
   14006291d:	imul   edi,DWORD PTR [rdi+0x5dc09346]
   140062924:	pop    rdi
   140062925:	dec    BYTE PTR [rdx]
   140062927:	out    dx,al
   140062928:	or     al,0xdc
   14006292a:	outs   dx,DWORD PTR ds:[rsi]
   14006292b:	(bad)  
   14006292c:	mov    al,0xaa
   14006292e:	xor    esi,DWORD PTR [rbp-0x50]
   140062931:	(bad)  
   140062932:	(bad)  
   140062933:	(bad)
   140062936:	out    0x45,eax
   140062938:	mov    edi,0xabb452a
   14006293d:	mov    esp,0x683e6a42
   140062942:	sbb    DWORD PTR [rdi+0x63],0x0
   140062946:	outs   dx,BYTE PTR ds:[rsi]
   140062947:	mov    ecx,DWORD PTR [rcx+0x40]
   14006294a:	int    0x57
   14006294c:	xor    eax,0xd94589be
   140062951:	(bad)
   140062954:	cwde   
   140062955:	ins    DWORD PTR es:[rdi],dx
   140062956:	leave  
   140062957:	jo     0x140062932
   140062959:	(bad)  
   14006295a:	add    ah,bl
   14006295c:	mov    dl,BYTE PTR [rdi+0x4]
   14006295f:	popf   
   140062960:	(bad)  
   140062962:	gs rex.WB je 0x14006291e
   140062966:	or     DWORD PTR [rsi],0x45c032b7
   14006296c:	adc    dl,BYTE PTR [rax-0x18e32a4b]
   140062972:	clc    
   140062973:	add    BYTE PTR cs:[rbx],cl
   140062976:	cmp    esp,DWORD PTR [rdx+riz*1]
   140062979:	and    cl,ch
   14006297b:	add    ch,BYTE PTR [rsi]
   14006297d:	xchg   edx,eax
   14006297e:	or     al,0x33
   140062981:	(bad)  
   140062982:	rcr    DWORD PTR [rsp+rbx*8],cl
   140062985:	loopne 0x140062928
   140062987:	mov    BYTE PTR [rbx-0xe2bf565],ch
   14006298d:	rex.R push 0x3c
   140062990:	xchg   edx,eax
   140062991:	lods   al,BYTE PTR ds:[rsi]
   140062992:	(bad)  
   140062993:	test   eax,0x34591014
   140062998:	sub    dl,BYTE PTR [rcx+0x5f20f6f8]
   14006299e:	and    DWORD PTR [rsi-0x32],esp
   1400629a1:	hlt    
   1400629a2:	(bad)  
   1400629a4:	(bad)  
   1400629a5:	adc    DWORD PTR [rsi-0x1a48e225],ebx
   1400629ab:	rex.WB clc 
   1400629ad:	mov    ah,0x66
   1400629af:	(bad)  
   1400629b0:	int    0x3a
   1400629b2:	cwde   
   1400629b3:	js     0x140062950
   1400629b5:	(bad)  
   1400629b6:	(bad)  
   1400629b7:	stc    
   1400629b8:	push   rsi
   1400629b9:	mov    bh,0xfb
   1400629bb:	sub    bh,BYTE PTR [rbx-0x44ca5a9e]
   1400629c1:	mov    esi,DWORD PTR [rsi-0x4a]
   1400629c4:	shr    DWORD PTR [rdi+0x9372031],0x98
   1400629cb:	jg     0x140062a19
   1400629cd:	cwde   
   1400629ce:	jrcxz  0x1400629c5
   1400629d0:	movsxd ebp,DWORD PTR [rsi-0x12]
   1400629d3:	(bad)  
   1400629d4:	or     DWORD PTR [rax],esp
   1400629d6:	sbb    DWORD PTR [rsi],ebp
   1400629d8:	sti    
   1400629d9:	add    eax,0x578ac0c0
   1400629de:	add    al,0x9d
   1400629e0:	cdq    
   1400629e1:	rex.WRX mov sil,0x97
   1400629e4:	and    eax,0x3a06e1d1
   1400629e9:	fmul   st(2),st
   1400629eb:	add    BYTE PTR [rdi],dl
   1400629ed:	rex.WB xor BYTE PTR [r9+0x22],0xdb
   1400629f2:	rcr    DWORD PTR [rsp+rbp*8],cl
   1400629f5:	(bad)  
   1400629f6:	sub    esp,ebp
   1400629f8:	nop
   1400629f9:	mov    BYTE PTR [rax+0x48b80ba4],al
   1400629ff:	add    ah,BYTE PTR [rdx]
   140062a01:	iret   
   140062a02:	push   rax
   140062a03:	rex.WRXB jae 0x140062a76
   140062a06:	add    DWORD PTR [rdi+0x2a6eae22],0x50
   140062a0d:	(bad)  
   140062a0e:	adc    ebp,DWORD PTR [rcx-0x754db70f]
   140062a14:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140062a15:	push   rdx
   140062a16:	rex
   140062a17:	shr    DWORD PTR fs:[rax+0x33b8482],1
   140062a1e:	cmp    BYTE PTR [rip+0xffffffffbe36b238],cl        # 0xfe3cdc5c
   140062a24:	xor    eax,DWORD PTR [rax-0x5f]
   140062a27:	fstp   TBYTE PTR [rsi]
   140062a29:	clc    
   140062a2a:	and    DWORD PTR [rbx+0x14],edi
   140062a2d:	xchg   edi,eax
   140062a2e:	stos   BYTE PTR es:[rdi],al
   140062a2f:	rex.WRXB out 0xc1,eax
   140062a32:	(bad)  
   140062a33:	jnp    0x1400629de
   140062a35:	cmp    esp,DWORD PTR [rdi-0x5772238f]
   140062a3b:	scas   al,BYTE PTR es:[rdi]
   140062a3c:	clc    
   140062a3d:	(bad)  
   140062a3e:	in     eax,dx
   140062a3f:	retf   0x9672
   140062a42:	(bad)  
   140062a43:	in     eax,dx
   140062a44:	ins    BYTE PTR es:[rdi],dx
   140062a45:	sbb    DWORD PTR [rdi+0x63],0x40
   140062a49:	jge    0x140062a74
   140062a4b:	(bad)  
   140062a4c:	(bad)  
   140062a4d:	xor    DWORD PTR [rcx+0x47],eax
   140062a50:	(bad)  
   140062a51:	cwde   
   140062a52:	xchg   ebx,eax
   140062a53:	add    eax,0x80260ba9
   140062a58:	ins    BYTE PTR es:[rdi],dx
   140062a59:	cwde   
   140062a5a:	sub    al,0x24
   140062a5c:	adc    BYTE PTR [rsp+rcx*1+0x5d045645],0x64
   140062a64:	jbe    0x140062ace
   140062a66:	test   al,0x6b
   140062a68:	cwde   
   140062a69:	or     DWORD PTR [rsi],0x1244facf
   140062a6f:	nop
   140062a70:	mov    ch,0xd5
   140062a72:	hlt    
   140062a73:	cmp    DWORD PTR [rsi+0x1d857c1b],edi
   140062a79:	adc    dl,BYTE PTR [rcx]
   140062a7b:	nop
   140062a7c:	je     0x140062a7f
   140062a7e:	(bad)  
   140062a7f:	rex.WB
   140062a80:	in     al,0x19
   140062a83:	(bad)  
   140062a84:	imul   ecx,DWORD PTR [rsi],0xc450f06e
   140062a8a:	(bad)  
   140062a8b:	rex.WRB add rax,0x352278ea
   140062a91:	(bad)  
   140062a92:	rex.WB push r14
   140062a94:	mov    cl,0x54
   140062a96:	or     cl,BYTE PTR [rax-0x6faae5d4]
   140062a9c:	sub    ah,BYTE PTR [rdx+rdi*2+0x70]
   140062aa0:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140062aa1:	in     eax,dx
   140062aa2:	add    al,0x28
   140062aa4:	enter  0x735b,0x9f
   140062aa8:	cld    
   140062aa9:	retf   
   140062aaa:	pop    QWORD PTR [rbx+riz*4-0x719486b9]
   140062ab1:	xor    ch,BYTE PTR [rdi]
   140062ab3:	jmp    QWORD PTR [rax-0x22f62cd2]
   140062ab9:	rex.WR jl 0x140062a80
   140062abc:	mov    bh,0x7a
   140062abe:	rol    DWORD PTR [rdi],0xfa
   140062ac1:	sub    edx,DWORD PTR [rbx+0x52]
   140062ac4:	jge    0x140062aec
   140062ac6:	(bad)  
   140062ac7:	jg     0x140062a53
   140062ac9:	jbe    0x140062a81
   140062acb:	shr    DWORD PTR [rdi+0x99f2031],0x80
   140062ad2:	(bad)  
   140062ad3:	sbb    eax,0x9a26172c
   140062ad8:	gs rex.WRB (bad) 
   140062adb:	loop   0x140062b2c
   140062add:	add    BYTE PTR [rdx+0x8354049],dh
   140062ae3:	sub    al,BYTE PTR [rdx-0x2e55c8d2]
   140062aea:	push   rax
   140062aeb:	push   rdi
   140062aec:	(bad)  
   140062aed:	rex xchg DWORD PTR [rbx+0x19],ebx
   140062af1:	loopne 0x140062b15
   140062af3:	or     eax,ecx
   140062af5:	fisubr DWORD PTR [rdx-0x72]
   140062af8:	jae    0x140062b76
   140062afa:	push   rdi
   140062afb:	rex.WRXB (bad) 
   140062afd:	xchg   DWORD PTR [rsp+rax*1+0x24],eax
   140062b01:	pop    rbp
   140062b02:	rol    BYTE PTR [rbp+0x12],0x10
   140062b06:	jns    0x140062a8e
   140062b08:	jp     0x140062aa4
   140062b0a:	sbb    DWORD PTR [rbx],0x3c
   140062b0d:	adc    al,0x71
   140062b0f:	jne    0x140062b64
   140062b11:	cmp    DWORD PTR [rdx],0x478d489e
   140062b17:	xchg   edx,eax
   140062b18:	push   rbp
   140062b19:	sub    al,0x95
   140062b1b:	add    ah,BYTE PTR [rdx]
   140062b1d:	mov    eax,DWORD PTR [rsi+0x15]
   140062b20:	and    al,0x87
   140062b22:	sbb    BYTE PTR [rax-0x4079c4c1],cl
   140062b28:	stos   BYTE PTR es:[rdi],al
   140062b29:	xchg   ebx,eax
   140062b2a:	(bad)  
   140062b2b:	sub    esi,eax
   140062b2d:	lods   eax,DWORD PTR ds:[rsi]
   140062b2e:	cli    
   140062b2f:	out    0x6e,eax
   140062b31:	jmp    QWORD PTR [rbp+rdx*1+0x1ee5fb21]
   140062b38:	(bad)  
   140062b39:	xchg   ebp,eax
   140062b3a:	rex.WRXB sub rax,0xffffffffb8364726
   140062b40:	fstp   TBYTE PTR [rbp-0x30]
   140062b43:	ins    BYTE PTR es:[rdi],dx
   140062b44:	cmc    
   140062b45:	(bad)  
   140062b46:	xor    ecx,DWORD PTR [rbx+0x4]
   140062b49:	cmp    al,0xcf
   140062b4b:	ins    BYTE PTR es:[rdi],dx
   140062b4c:	sbb    DWORD PTR [rdi+0x63],0x40
   140062b50:	outs   dx,BYTE PTR ds:[rsi]
   140062b51:	adc    DWORD PTR [rax-0xd],edx
   140062b54:	push   rbp
   140062b55:	int    0x9f
   140062b57:	es out 0x64,al
   140062b5a:	xor    ebx,DWORD PTR [rbx]
   140062b5c:	stc    
   140062b5d:	loop   0x140062bae
   140062b5f:	add    BYTE PTR [rsi-0x74],ah
   140062b62:	(bad)  
   140062b63:	cs ror eax,0x8a
   140062b67:	movabs al,ds:0xd6574482831746cb
   140062b70:	rex xchg DWORD PTR [rdi-0x23],esp
   140062b74:	and    cl,BYTE PTR [rcx]
   140062b76:	enter  0x6ada,0x8e
   140062b7a:	jae    0x140062bf8
   140062b7c:	push   rdi
   140062b7d:	rex.WRXB (bad) 
   140062b7f:	xchg   DWORD PTR [rsp+rax*1+0x24],eax
   140062b83:	pop    rbp
   140062b84:	rol    BYTE PTR [rbp+0x12],0x10
   140062b88:	jns    0x140062b10
   140062b8a:	jp     0x140062b26
   140062b8c:	sbb    DWORD PTR [rbx],0x3c
   140062b8f:	adc    al,0x71
   140062b91:	jne    0x140062be6
   140062b93:	cmp    DWORD PTR [rdx],0x478d489e
   140062b99:	xchg   edx,eax
   140062b9a:	push   rbp
   140062b9b:	sub    al,0x95
   140062b9d:	add    ah,BYTE PTR [rdx]
   140062b9f:	mov    eax,DWORD PTR [rsi+0x15]
   140062ba2:	and    al,0x87
   140062ba4:	sbb    BYTE PTR [rax-0x1f],bl
   140062ba7:	adc    edi,eax
   140062ba9:	mov    bl,0x63
   140062bab:	pushf  
   140062bac:	or     BYTE PTR [rax+0x63d8f47e],bl
   140062bb2:	loope  0x140062b7f
   140062bb4:	lahf   
   140062bb5:	std    
   140062bb6:	pushf  
   140062bb7:	push   rbp
   140062bb8:	(bad)  
   140062bb9:	sub    cl,BYTE PTR [rdi-0xb]
   140062bbc:	movabs al,ds:0x7ee1f9efb262ea0e
   140062bc5:	jg     0x140062c13
   140062bc7:	push   rsp
   140062bc8:	(bad)  
   140062bc9:	rex retf 
   140062bcb:	or     ah,BYTE PTR [rsi+rdx*2]
   140062bce:	sub    BYTE PTR [rsi+0x1b],dh
   140062bd1:	cld    
   140062bd2:	sbb    al,BYTE PTR [rbx]
   140062bd4:	jb     0x140062b69
   140062bd6:	sbb    BYTE PTR [rdx+0x12d3b2af],0xdf
   140062bdd:	xor    ah,BYTE PTR [rdi]
   140062bdf:	fldcw  WORD PTR [rcx]
   140062be2:	out    dx,eax
   140062be3:	(bad)  
   140062be4:	or     eax,eax
   140062be6:	sbb    edx,DWORD PTR [rdi+0x19]
   140062be9:	pop    rbp
   140062bea:	add    al,0x5d
   140062bec:	ss mov edx,0x595df831
   140062bf2:	add    ebx,DWORD PTR [rip+0xffffffff8b80656e]        # 0xcb869166
   140062bf8:	and    al,0x20
   140062bfa:	imul   ebp,DWORD PTR [rbx+0x5df1ce39],0x3d
   140062c01:	test   DWORD PTR [rip+0x74901112],ebx        # 0x1b4963d19
   140062c07:	add    DWORD PTR [rdi],edx
   140062c09:	rex.WB
   140062c0a:	in     al,0x19
   140062c0d:	(bad)  
   140062c0e:	imul   ecx,DWORD PTR [rsi],0xc450f06e
   140062c14:	(bad)  
   140062c15:	rex.WRB add rax,0x352278ea
   140062c1b:	(bad)  
   140062c1c:	rex.WB push r14
   140062c1e:	mov    cl,0x54
   140062c20:	or     cl,BYTE PTR [rax-0x6faae5d4]
   140062c26:	sbb    al,0x62
   140062c28:	movabs al,ds:0x33bacdaac4e093c3
   140062c31:	jo     0x140062c12
   140062c33:	(bad)  
   140062c34:	mov    edi,0xffbe1e15
   140062c39:	(bad)  
   140062c3a:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140062c3b:	jmp    0x140062c21
   140062c3d:	xor    edx,DWORD PTR [rsi-0x61d9f15b]
   140062c43:	out    dx,eax
   140062c44:	repz (bad) 
   140062c46:	lahf   
   140062c47:	cwde   
   140062c48:	push   rax
   140062c49:	scas   eax,DWORD PTR es:[rdi]
   140062c4a:	scas   eax,DWORD PTR es:[rdi]
   140062c4b:	mov    edx,0x6ced6a44
   140062c50:	sbb    DWORD PTR [rdi+0x63],0x40
   140062c54:	adc    edx,DWORD PTR ds:[rax-0xd]
   140062c58:	push   rbp
   140062c59:	jb     0x140062cca
   140062c5b:	mul    BYTE PTR [rdi-0x3326c677]
   140062c61:	jbe    0x140062cdc
   140062c63:	(bad)  
   140062c64:	rex.WR add cl,r11b
   140062c67:	(bad)  
   140062c68:	sub    BYTE PTR fs:[rdx-0x513b17de],dh
   140062c6f:	(bad)  
   140062c70:	(bad)
   140062c74:	fmul   st(2),st
   140062c76:	add    BYTE PTR [rdi],dl
   140062c78:	rex.WB
   140062c79:	rex (bad) 
   140062c7b:	push   rsi
   140062c7c:	jae    0x140062c1a
   140062c7e:	jrcxz  0x140062c3b
   140062c80:	and    BYTE PTR [rbx],ch
   140062c82:	in     al,dx
   140062c83:	nop
   140062c84:	mov    BYTE PTR [rax+0x48b80ba4],al
   140062c8a:	add    ah,BYTE PTR [rdx]
   140062c8c:	iret   
   140062c8d:	push   rax
   140062c8e:	rex.WRXB jae 0x140062d01
   140062c91:	add    DWORD PTR [rdi+0x2a6eae22],0x50
   140062c98:	(bad)  
   140062c99:	adc    ebp,DWORD PTR [rcx-0x754db70f]
   140062c9f:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140062ca0:	push   rdx
   140062ca1:	rex
   140062ca2:	shr    DWORD PTR fs:[rax+0x310e482],1
   140062ca9:	sbb    eax,0xe241059e
   140062cae:	push   rbp
   140062caf:	stc    
   140062cb0:	ret    
   140062cb1:	clc    
   140062cb2:	nop
   140062cb3:	movabs rsi,0xaf1df6c09fb7f033
   140062cbd:	adc    DWORD PTR [rdi+0x59c5e7ec],ebx
   140062cc3:	xchg   BYTE PTR [rbp-0x33],ah
   140062cc6:	retf   0x8cf4
   140062cc9:	jg     0x140062c87
   140062ccb:	loop   0x140062c9c
   140062ccd:	rex.WX xchg rdx,rax
   140062ccf:	mov    DWORD PTR [rcx+0x3cf011eb],edx
   140062cd5:	mov    bl,0xd
   140062cd7:	jle    0x140062c66
   140062cd9:	add    DWORD PTR [rcx+0x57cd4045],edi
   140062cdf:	(bad)  [rbp-0x6c669077]
   140062ce5:	int    0xec
   140062ce7:	pop    rdx
   140062ce8:	fisub  WORD PTR [rip+0x74654013]        # 0x1b46b6d01
   140062cee:	adc    DWORD PTR [rcx+rbx*8-0x28],esi
   140062cf2:	(bad)  
   140062cf3:	push   rax
   140062cf4:	nop
   140062cf5:	call   0xe1b80314
   140062cfa:	and    BYTE PTR [rdx+0x44],cl
   140062cfd:	rex (bad) 
   140062cff:	push   rsi
   140062d00:	jae    0x140062c9e
   140062d02:	jrcxz  0x140062cbf
   140062d04:	jp     0x140062d10
   140062d06:	cmp    esp,DWORD PTR [rdx+riz*1]
   140062d09:	and    cl,ch
   140062d0b:	add    ch,BYTE PTR [rsi]
   140062d0d:	xchg   edx,eax
   140062d0e:	or     al,0x33
   140062d11:	(bad)  
   140062d12:	rcr    DWORD PTR [rsp+rbx*8],cl
   140062d15:	loopne 0x140062cc8
   140062d17:	rex.WB mov cs,WORD PTR [r15]
   140062d1a:	push   rsp
   140062d1b:	sbb    eax,0x1e356d4f
   140062d20:	rex.WB push r14
   140062d22:	mov    cl,0x8a
   140062d24:	or     BYTE PTR [rax-0x6faae5d4],cl
   140062d2a:	sbb    al,0x62
   140062d2c:	movabs al,ds:0x1883d7848a0b3c3
   140062d35:	mov    ebx,0x49a15ee
   140062d3a:	(bad)  
   140062d3b:	(bad)  
   140062d3c:	(bad)  
   140062d3d:	sti    
   140062d3e:	mov    bl,0x70
   140062d40:	loopne 0x140062ce7
   140062d42:	std    
   140062d43:	div    r9
   140062d46:	xor    ecx,edx
   140062d48:	mov    dl,0xc
   140062d4a:	xchg   ebx,eax
   140062d4b:	jmp    0x17704eb12
   140062d50:	clc    
   140062d51:	xchg   ebx,eax
   140062d52:	fisttp WORD PTR [rdx+0x53d394be]
   140062d58:	jg     0x140062d93
   140062d5a:	sbb    al,0xe2
   140062d5c:	sbb    al,BYTE PTR [rbx]
   140062d5e:	and    cl,BYTE PTR [rbx]
   140062d60:	cmp    BYTE PTR [rbx+rax*4-0x458a956d],0xb1
   140062d68:	cmp    dh,cl
   140062d6a:	and    eax,0x260ba028
   140062d6f:	and    BYTE PTR [rax+rbp*1-0x4e],0x22
   140062d74:	call   0xc693b72b
   140062d79:	mov    edx,0x70e81986
   140062d7e:	sub    eax,DWORD PTR [rbx]
   140062d80:	pop    rsp
   140062d81:	and    al,0x1
   140062d83:	pop    rcx
   140062d84:	pop    rbx
   140062d85:	int    0x71
   140062d87:	mov    gs,edi
   140062d89:	(bad)  
   140062d8a:	sub    esp,ebp
   140062d8c:	nop
   140062d8d:	mov    BYTE PTR [rax+0x48b80ba4],al
   140062d93:	add    ah,BYTE PTR [rdx]
   140062d95:	iret   
   140062d96:	push   rax
   140062d97:	rex.WRXB jae 0x140062e0a
   140062d9a:	add    DWORD PTR [rdi+0x2a6eae22],0x50
   140062da1:	(bad)  
   140062da2:	adc    ebp,DWORD PTR [rcx-0x754db70f]
   140062da8:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140062da9:	push   rdx
   140062daa:	rex
   140062dab:	shr    DWORD PTR fs:[rax+0x310e482],1
   140062db2:	sbb    eax,0x8a45059e
   140062db7:	add    bl,bl
   140062db9:	outs   dx,DWORD PTR ds:[rsi]
   140062dba:	out    dx,eax
   140062dbb:	in     al,0xe3
   140062dbd:	pop    rbx
   140062dbe:	jl     0x140062e0c
   140062dc0:	xchg   ebx,eax
   140062dc1:	rex.RXB pop QWORD PTR [r14+0x1b76dd4f]
   140062dc8:	out    dx,al
   140062dc9:	or     al,0x1c
   140062dcb:	inc    ebp
   140062dcd:	and    edx,ecx
   140062dcf:	push   rax
   140062dd0:	xchg   esi,eax
   140062dd1:	gs cwde 
   140062dd3:	js     0x140062d9a
   140062dd5:	(bad)  
   140062dd6:	fsubp  st(6),st
   140062dd8:	sub    DWORD PTR [rsi-0x2b],0x43
   140062ddc:	rex.WRX add QWORD PTR [rax],0xfffffffff2bb78f5
   140062de3:	imul   ecx,DWORD PTR [rax+rcx*8],0x2d
   140062de7:	add    ch,BYTE PTR [rdx-0x42]
   140062dea:	movabs ds:0x991b2732df12992f,al
   140062df3:	repz (bad) 
   140062df5:	jbe    0x140062db8
   140062df7:	add    al,0x10
   140062df9:	ins    DWORD PTR es:[rdi],dx
   140062dfa:	(bad)  
   140062dfb:	(bad)  
   140062dfc:	cs fwait
   140062dfe:	pop    rbx
   140062dff:	or     al,0xa
   140062e01:	adc    bl,BYTE PTR [rbp-0x3d]
   140062e04:	cmp    dh,BYTE PTR [rsi]
   140062e06:	adc    al,0x44
   140062e08:	mov    DWORD PTR [rax],ecx
   140062e0a:	enter  0x6ada,0x8e
   140062e0e:	jae    0x140062e8c
   140062e10:	push   rdi
   140062e11:	rex.WRXB (bad) 
   140062e13:	xchg   DWORD PTR [rsp+rax*1+0x24],eax
   140062e17:	pop    rbp
   140062e18:	rol    BYTE PTR [rbp+0x12],0x10
   140062e1c:	jns    0x140062da4
   140062e1e:	jp     0x140062dba
   140062e20:	sbb    DWORD PTR [rbx],0x3c
   140062e23:	ss leave 
   140062e25:	icebp  
   140062e26:	sub    DWORD PTR [rdx-0x3952561d],0x562ac923
   140062e30:	adc    DWORD PTR [rcx],eax
   140062e32:	xchg   ecx,eax
   140062e33:	rex.RB movabs ds:0x141678740c43920a,eax
   140062e3d:	sub    DWORD PTR [rdx],eax
   140062e3f:	push   0x3f
   140062e41:	(bad)  
   140062e42:	ds xchg bh,ch
   140062e45:	or     bl,BYTE PTR [rsi]
   140062e47:	(bad)
   140062e4c:	cmp    eax,DWORD PTR [rbx]
   140062e4e:	lahf   
   140062e4f:	cli    
   140062e50:	enter  0x516d,0x3f
   140062e54:	rex.RB out 0x39,eax
   140062e57:	sub    BYTE PTR [rbx+0x59],al
   140062e5a:	es sahf 
   140062e5c:	repz repz retf 
   140062e5f:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140062e61:	int    0xe4
   140062e63:	test   al,0x52
   140062e65:	and    al,BYTE PTR [rax+0x3d]
   140062e68:	fiadd  WORD PTR [rsi]
   140062e6a:	mov    edi,0x22dc80c6
   140062e6f:	movabs al,ds:0x9cc4d3f93ee8abe6
   140062e78:	ins    BYTE PTR es:[rdi],dx
   140062e79:	data16 (bad) 
   140062e7b:	nop
   140062e7c:	(bad)  
   140062e7d:	inc    BYTE PTR [rax+rax*1]
   140062e80:	jnp    0x140062eb7
   140062e82:	call   0x1462eef83
   140062e87:	add    eax,0xd61ae05b
   140062e8c:	mov    cl,0xa1
   140062e8e:	and    BYTE PTR [rdx+0x44],cl
   140062e91:	rex (bad) 
   140062e93:	hlt    
   140062e94:	rex.X lahf 
   140062e96:	jrcxz  0x140062ed3
   140062e98:	jp     0x140062efb
   140062e9a:	xchg   DWORD PTR [rsp+rax*1+0x24],eax
   140062e9e:	pop    rbp
   140062e9f:	rol    BYTE PTR [rbp+0x12],0x10
   140062ea3:	jns    0x140062e2b
   140062ea5:	jp     0x140062e41
   140062ea7:	sbb    DWORD PTR [rbx],0x3c
   140062eaa:	ss leave 
   140062eac:	icebp  
   140062ead:	sub    DWORD PTR [rdx-0x3952561d],0x562ac923
   140062eb7:	adc    DWORD PTR [rcx],eax
   140062eb9:	xchg   ecx,eax
   140062eba:	rex.RB movabs ds:0x141678740c43920a,eax
   140062ec4:	sub    DWORD PTR [rdx],eax
   140062ec6:	push   0xffffffffffffffbf
   140062ec8:	stos   DWORD PTR es:[rdi],eax
   140062ec9:	jnp    0x140062edd
   140062ecb:	(bad)  
   140062ecc:	or     eax,0x8a4fa54d
   140062ed1:	cmp    eax,0xf87b7db3
   140062ed6:	cld    
   140062ed7:	sbb    eax,0xf9d83dbc
   140062edc:	(bad)  
   140062edd:	jns    0x140062e73
   140062edf:	(bad)  
   140062ee0:	stos   BYTE PTR es:[rdi],al
   140062ee1:	pop    rsi
   140062ee2:	lock sub DWORD PTR [rsi-0x2b],0x814e43
   140062eea:	cmc    
   140062eeb:	js     0x140062f08
   140062eed:	cld    
   140062eee:	sbb    al,BYTE PTR [rbx]
   140062ef0:	jb     0x140062e7d
   140062ef2:	sbb    BYTE PTR [rdx-0x59b41751],0xc4
   140062ef9:	mov    bh,0xcc
   140062efb:	leave  
   140062efc:	rex.RX out 0x71,al
   140062eff:	jg     0x140062f18
   140062f01:	jge    0x140062f05
   140062f03:	shl    BYTE PTR [rax+0x36b10dcb],1
   140062f09:	(bad)  
   140062f0a:	sbb    esp,edx
   140062f0c:	lock mov cs,WORD PTR [rip+0x2225105]        # 0x142288018
   140062f13:	stos   BYTE PTR es:[rdi],al
   140062f14:	(bad)  
   140062f15:	xlat   BYTE PTR ds:[rbx]
   140062f16:	(bad)  
   140062f17:	cdq    
   140062f18:	sbb    BYTE PTR [rsi+0x1521d85e],cl
   140062f1e:	add    dl,BYTE PTR [rdx+0x11]
   140062f21:	loopne 0x140062f45
   140062f23:	or     DWORD PTR [rax-0x32c2bcc4],ecx
   140062f29:	ror    DWORD PTR [rip+0xffffffffbab88a1e],0xa9        # 0xfabeb94e
   140062f30:	rex sbb eax,0x23c6a44f
   140062f36:	leave  
   140062f37:	sub    dl,BYTE PTR [rsi+0x4591014a]
   140062f3d:	movabs ds:0x141678740c43920a,eax
   140062f46:	sub    DWORD PTR [rdx],eax
   140062f48:	push   0x7f
   140062f4a:	movabs ds:0x7a67a17c31d9fc6e,eax
   140062f53:	jo     0x140062eda
   140062f55:	(bad)  
   140062f56:	cmc    
   140062f57:	enter  0xffd,0x4
   140062f5b:	(bad)  
   140062f5c:	cmc    
   140062f5d:	in     al,0xe9
   140062f5f:	jl     0x140062f29
   140062f61:	(bad)  
   140062f62:	jle    0x140062f33
   140062f64:	(bad)  
   140062f66:	push   rbp
   140062f67:	cmovnp edx,DWORD PTR [rax+rcx*1]
   140062f6b:	push   rax
   140062f6c:	(bad)  
   140062f6d:	mov    bh,0xc1
   140062f6f:	scas   eax,DWORD PTR es:[rdi]
   140062f70:	xor    DWORD PTR [rax],esp
   140062f72:	mov    bh,0x8
   140062f74:	test   al,0xf9
   140062f76:	sub    bh,BYTE PTR [rbx+0x3f]
   140062f79:	icebp  
   140062f7a:	sub    eax,0x7d99b273
   140062f7f:	add    bh,cl
   140062f81:	movabs ds:0x28317c6746d1004f,al
   140062f8a:	enter  0xbcf5,0x1a
   140062f8e:	outs   dx,BYTE PTR ds:[rsi]
   140062f8f:	test   ecx,eax
   140062f91:	xchg   edi,eax
   140062f92:	mov    BYTE PTR [rax],al
   140062f94:	jrcxz  0x140062fda
   140062f96:	mov    dh,0xa7
   140062f98:	cmp    eax,ebx
   140062f9a:	(bad)  
   140062f9b:	movabs ds:0x2d74901112454fc1,eax
   140062fa4:	shl    BYTE PTR [rbx],0x51
   140062fa7:	(bad)  
   140062fa8:	out    dx,eax
   140062fa9:	loopne 0x140062fb1
   140062fab:	pminsw mm3,QWORD PTR [rbp+rbx*8+0x54]
   140062fb0:	scas   al,BYTE PTR es:[rdi]
   140062fb1:	mov    fs,WORD PTR [rdi]
   140062fb3:	push   rdx
   140062fb4:	jrcxz  0x140062f47
   140062fb6:	fs rex.RX
   140062fb8:	rex.WB movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
   140062fba:	or     al,0x2a
   140062fbd:	ins    BYTE PTR es:[rdi],dx
   140062fbe:	rex.WRX mov dl,0x89
   140062fc1:	adc    ebx,ebx
   140062fc3:	loop   0x140062faa
   140062fc5:	adc    ebp,DWORD PTR [rdx+rdx*2]
   140062fc8:	add    al,0xd4
   140062fca:	inc    BYTE PTR [rsi-0x23]
   140062fcd:	adc    cl,BYTE PTR [rbx+riz*8]
   140062fd0:	stos   DWORD PTR es:[rdi],eax
   140062fd1:	mov    bh,0xd8
   140062fd3:	jne    0x140062fd6
   140062fd5:	stos   BYTE PTR es:[rdi],al
   140062fd6:	inc    dl
   140062fd8:	sbb    eax,0x9fa78477
   140062fdd:	fsubr  QWORD PTR [rsi-0x5a]
   140062fe0:	mov    dl,0x8
   140062fe2:	(bad)  
   140062fe3:	rcr    BYTE PTR [rax-0x38304188],cl
   140062fe9:	jl     0x140063036
   140062feb:	fwait
   140062fec:	leave  
   140062fed:	test   eax,0xdb2b1174
   140062ff2:	fld    DWORD PTR [rsi]
   140062ff4:	mov    edi,0x24dc80c6
   140062ff9:	movabs al,ds:0xcb01181d1ef32be6
   140063002:	pushf  
   140063003:	ins    BYTE PTR es:[rdi],dx
   140063004:	data16 lahf 
   140063006:	(bad)  
   140063007:	fiadd  WORD PTR [rip+0x7e338013]        # 0x1be39b020
   14006300d:	add    DWORD PTR [rcx],0x6ccc1cd8
   140063013:	and    edx,ecx
   140063015:	stos   BYTE PTR es:[rdi],al
   140063016:	mov    eax,0x85e9aa80
   14006301b:	ds (bad) 
   14006301d:	ja     0x140063093
   14006301f:	or     eax,0x2d7505fe
   140063024:	push   rax
   140063025:	(bad)
   140063029:	sub    eax,DWORD PTR [rbx+0x479e6d92]
   14006302f:	xchg   ebx,eax
   140063030:	rex.WXB pop r12
   140063032:	sbb    eax,0x7929cd6f
   140063037:	mov    cl,0x21
   140063039:	movabs al,ds:0x414cf3d1b5202c89
   140063042:	movabs ds:0x2291609f2f513323,al
   14006304b:	movabs al,ds:0xbccd9a9572ecd7f6
   140063054:	mov    cl,bh
   140063056:	rex.WB and BYTE PTR [r14-0x33],bl
   14006305a:	psraw  mm6,QWORD PTR [rbx]
   14006305d:	(bad)  
   14006305e:	std    
   14006305f:	test   al,0x9d
   140063061:	jmp    0x140063056
   140063063:	jl     0x140063004
   140063065:	mov    al,0xd5
   140063067:	sbb    QWORD PTR [rax+r15*1-0x64],r11
   14006306c:	jrcxz  0x1400630cd
   14006306e:	lock push rcx
   140063070:	cmp    eax,0x7ebe31c6
   140063075:	mov    bh,BYTE PTR [rdx+0x18d7e0da]
   14006307b:	nop
   14006307c:	iret   
   14006307d:	add    al,0x98
   14006307f:	out    dx,eax
   140063080:	in     eax,0x37
   140063082:	add    DWORD PTR [rcx+0x1593996f],ecx
   140063088:	inc    esp
   14006308a:	cmp    esi,0xc33d1713
   140063090:	xchg   edx,eax
   140063091:	(bad)
   140063094:	pop    rbp
   140063095:	scas   al,BYTE PTR es:[rdi]
   140063096:	(bad)  
   140063097:	sbb    eax,0x44a20a1b
   14006309c:	add    al,0x54
   14006309e:	rex.RX (bad) 
   1400630a0:	cli    
   1400630a1:	sbb    al,0xdf
   1400630a3:	shl    DWORD PTR [rip+0x2248a9f8],1        # 0x1624edaa1
   1400630a9:	add    dl,BYTE PTR [rdx+0x267805ae]
   1400630af:	(bad)  
   1400630b0:	in     eax,0x1d
   1400630b2:	fsubr  st(0),st
   1400630b4:	mov    cl,0x49
   1400630b6:	mov    cs,WORD PTR [rdi]
   1400630b8:	push   rsp
   1400630b9:	sbb    eax,0x3c6a9acf
   1400630be:	xchg   edx,eax
   1400630bf:	int3   
   1400630c0:	sub    BYTE PTR [rip+0xffffffff85591011],dl        # 0xc55f40d7
   1400630c6:	int    0x49
   1400630c8:	ss jno 0x14006312d
   1400630cb:	pop    rbx
   1400630cc:	mov    esp,0x8a45827c
   1400630d1:	sbb    dl,0xdf
   1400630d4:	test   al,0x5b
   1400630d6:	(bad)  
   1400630d7:	test   DWORD PTR [rbp-0x4],ebx
   1400630da:	sti    
   1400630db:	jl     0x140063124
   1400630dd:	lock test ecx,esp
   1400630e0:	adc    eax,0x57647efb
   1400630e5:	stc    
   1400630e6:	rep stos BYTE PTR es:[rdi],al
   1400630e8:	lahf   
   1400630e9:	scas   eax,DWORD PTR es:[rdi]
   1400630ea:	clc    
   1400630eb:	(bad)  
   1400630ec:	rcr    DWORD PTR [rbx+0x37db385],0x66
   1400630f3:	jbe    0x14006312b
   1400630f5:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400630f6:	xchg   BYTE PTR [rdx+rdi*8],dl
   1400630f9:	enter  0x1b33,0x5c
   1400630fd:	jne    0x1400630a4
   1400630ff:	cmp    al,0x18
   140063101:	loop   0x14006310c
   140063103:	mov    BYTE PTR [rdx-0x4d2e52f3],ch
   140063109:	jo     0x14006308e
   14006310b:	xchg   edi,eax
   14006310c:	in     al,0xa
   14006310e:	icebp  
   14006310f:	mov    ah,al
   140063111:	cli    
   140063112:	or     eax,DWORD PTR [rsi]
   140063114:	hlt    
   140063115:	xlat   BYTE PTR ds:[rbx]
   140063116:	in     eax,0x3b
   140063118:	lock adc r12b,r8b
   14006311c:	(bad)  
   14006311d:	in     al,dx
   14006311e:	imul   ecx,DWORD PTR [rsi],0x28e1d036
   140063124:	movabs eax,ds:0x6960e19800b22031
   14006312d:	rex.WRXB xor al,0xcb
   140063130:	cmp    dh,cl
   140063132:	and    eax,0x77404278
   140063137:	rex.WR add BYTE PTR [rbp+0x7586ba86],r9b
   14006313e:	ins    BYTE PTR es:[rdi],dx
   14006313f:	sub    BYTE PTR [rax+0x35501112],cl
   140063145:	mov    eax,0x8ef8e7d0
   14006314a:	scas   al,BYTE PTR es:[rdi]
   14006314b:	ror    DWORD PTR [rdi+0x45],0x12
   14006314f:	adc    DWORD PTR [rax+0x33c02d74],edx
   140063155:	push   rcx
   140063156:	(bad)  
   140063157:	out    dx,eax
   140063158:	loopne 0x140063160
   14006315a:	pminsw mm3,QWORD PTR [rbp+rbx*8+0x54]
   14006315f:	scas   al,BYTE PTR es:[rdi]
   140063160:	mov    fs,WORD PTR [rdi]
   140063162:	push   rdx
   140063163:	jrcxz  0x1400630f6
   140063165:	fs rex.RX
   140063167:	rex.WB movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
   140063169:	or     al,0x2a
   14006316c:	ins    BYTE PTR es:[rdi],dx
   14006316d:	rex.WRX mov dl,0x89
   140063170:	adc    ebx,ebx
   140063172:	loop   0x140063159
   140063174:	adc    ebp,DWORD PTR [rdx+rdx*2]
   140063177:	add    al,0xd4
   140063179:	inc    BYTE PTR [rsi-0x23]
   14006317c:	adc    ch,ah
   14006317e:	push   0x7cf8b717
   140063183:	pop    rdx
   140063184:	jo     0x14006316a
   140063186:	loopne 0x1400631bb
   140063188:	(bad)  
   140063189:	out    dx,eax
   14006318a:	sahf   
   14006318b:	cmp    eax,0x76ead6b9
   140063190:	lahf   
   140063191:	sub    ebp,DWORD PTR [rsi+0x6d]
   140063194:	nop
   140063195:	add    al,0x80
   140063197:	movabs ds:0x133e40635f836ae,al
   1400631a0:	xor    eax,0x2627655f
   1400631a5:	mov    esi,0xb3364e65
   1400631aa:	rex.WRXB and QWORD PTR [r15-0x4],r11
   1400631ae:	push   rbx
   1400631af:	and    BYTE PTR [rdx+0x50],0xb0
   1400631b3:	add    eax,0x1b1d61ae
   1400631b8:	or     ah,BYTE PTR [rdx+0x4d540444]
   1400631be:	(bad)  
   1400631bf:	hlt    
   1400631c0:	cmp    DWORD PTR [rsi+0x17f06ba3],edi
   1400631c6:	and    esp,0x701b4d64
   1400631cc:	xchg   ecx,eax
   1400631cd:	add    al,0xc4
   1400631cf:	jp     0x1400631dd
   1400631d1:	cmc    
   1400631d2:	xor    al,0x7
   1400631d4:	(bad)  
   1400631d5:	js     0x140063243
   1400631d7:	xchg   edx,eax
   1400631d8:	jrcxz  0x1400631dd
   1400631da:	push   rbp
   1400631db:	(bad)  
   1400631dc:	push   rbx
   1400631dd:	pop    rbx
   1400631de:	lea    eax,[rdi-0x6e]
   1400631e1:	push   rbp
   1400631e2:	lods   al,BYTE PTR ds:[rsi]
   1400631e3:	and    al,BYTE PTR [rdx]
   1400631e5:	and    ch,BYTE PTR [rbx+0x26c939b0]
   1400631eb:	rex.WRX mov spl,0xd7
   1400631ee:	retf   
   1400631ef:	(bad)  
   1400631f0:	pop    rax
   1400631f1:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400631f2:	or     BYTE PTR [rax+0x25ba8dfd],ch
   1400631f8:	cmp    BYTE PTR [rdi+0x6a6ba85d],bh
   1400631fe:	push   0x621c5ead
   140063203:	(bad)  
   140063204:	xchg   ebx,eax
   140063205:	clc    
   140063206:	jmp    0x14006324b
   140063208:	not    BYTE PTR [rdi]
   14006320a:	jl     0x140063268
   14006320c:	jno    0x140063279
   14006320e:	rex.XB mov r14b,0x8b
   140063211:	jns    0x140063264
   140063213:	push   rdi
   140063214:	sbb    edi,esp
   140063216:	sbb    al,BYTE PTR [rbx]
   140063218:	repnz cdq 
   14006321a:	sbb    BYTE PTR [rdx+0x1313b2af],0xdf
   140063221:	xor    ah,BYTE PTR [rdi]
   140063223:	fldenv [rdi+0xec77798]
   14006322a:	rex (bad) 
   14006322c:	mov    ebx,0x286c7586
   140063231:	mov    BYTE PTR [rdx],dl
   140063233:	adc    DWORD PTR [rax+0x2641f5d2],esp
   140063239:	xchg   BYTE PTR [rbx],bl
   14006323b:	jl     0x140063257
   14006323d:	cld    
   14006323e:	and    r13b,r10b
   140063241:	jne    0x140063270
   140063243:	push   rax
   140063244:	(bad)  
   140063248:	(bad)  
   140063249:	(bad)  
   14006324a:	js     0x1400631fc
   14006324c:	rcl    ch,0x4d
   14006324f:	jnp    0x140063225
   140063251:	icebp  
   140063252:	rex.R push 0x3c
   140063255:	xchg   edx,eax
   140063256:	lods   al,BYTE PTR ds:[rsi]
   140063257:	adc    DWORD PTR [rdx+0x29],0x9b0ab220
   14006325e:	xchg   ebx,eax
   14006325f:	ins    BYTE PTR es:[rdi],dx
   140063260:	loop   0x1400631fe
   140063262:	lods   eax,DWORD PTR ds:[rsi]
   140063263:	loopne 0x140063234
   140063265:	cmc    
   140063266:	sbb    al,0x1d
   140063268:	cmp    eax,0x4cccf42f
   14006326d:	pop    rcx
   14006326e:	in     eax,dx
   14006326f:	test   BYTE PTR [rbx],ah
   140063271:	mov    ebp,0xb5232630
   140063276:	jbe    0x14006322e
   140063278:	shr    DWORD PTR [rdi+0x15eea031],0x50
   14006327f:	repz push rbp
   140063281:	jbe    0x1400632e4
   140063283:	loop   0x1400632e0
   140063285:	out    0x64,al
   140063287:	xor    edi,ebx
   140063289:	gs in  al,0x5d
   14006328c:	xor    al,0x1
   14006328e:	mov    eax,0x286c7586
   140063293:	mov    BYTE PTR [rdx],dl
   140063295:	adc    DWORD PTR [rax+0x35],edx
   140063298:	mov    ebp,0x77c72608
   14006329d:	hlt    
   14006329e:	ss clc 
   1400632a0:	xchg   ebx,eax
   1400632a1:	mov    ebx,0xa5224f9c
   1400632a6:	mov    bl,0xbf
   1400632a8:	pushf  
   1400632a9:	jae    0x140063248
   1400632ab:	pop    rax
   1400632ac:	and    eax,0xebeadedb
   1400632b1:	in     al,0xcf
   1400632b3:	retf   0x793f
   1400632b6:	mov    dl,0xac
   1400632b8:	cld    
   1400632b9:	call   0x1498f32d4
   1400632be:	cmp    bl,ch
   1400632c0:	ror    DWORD PTR [rdi-0x45],0x16
   1400632c4:	call   QWORD PTR [rax+rax*8]
   1400632c7:	mov    esp,0x82409de3
   1400632cc:	ret    
   1400632cd:	xor    ebx,DWORD PTR [rdi+0x24]
   1400632d0:	add    esi,eax
   1400632d2:	mov    DWORD PTR [rdi+rcx*2+0x73],ebp
   1400632d6:	mov    al,0x1b
   1400632d8:	call   0x1b72e234a
   1400632dd:	cmp    DWORD PTR [rdi+0x7f674a44],ebx
   1400632e3:	cmp    edi,esp
   1400632e5:	cmp    dh,BYTE PTR [rcx]
   1400632e7:	(bad)  
   1400632e8:	imul   edx,DWORD PTR [rax+riz*8+0x5],0xffffffa9
   1400632ed:	rex push 0x3
   1400632f0:	mov    edx,0x69bbf95d
   1400632f5:	in     eax,0xcf
   1400632f7:	std    
   1400632f8:	fild   DWORD PTR [rip+0x341b8013]        # 0x17421b311
   1400632fe:	(bad)  
   1400632ff:	cmp    bh,BYTE PTR [rcx+rsi*1+0x83ceac8]
   140063306:	adc    al,0x3
   140063308:	(bad)  
   14006330a:	sbb    eax,0xd4fe0dbd
   14006330f:	(bad)  
   140063311:	(bad)  
   140063312:	xchg   ecx,eax
   140063313:	rcr    cl,cl
   140063315:	pop    rdi
   140063316:	rex.WB (bad) 
   140063318:	(bad)  
   140063319:	jne    0x14006337d
   14006331b:	rex.WRX (bad) 
   14006331d:	test   al,0xc0
   14006331f:	or     edx,DWORD PTR [rdx-0x7f]
   140063322:	xor    al,0xfa
   140063324:	(bad)  
   140063327:	adc    cl,dh
   140063329:	or     BYTE PTR [rax-0x5f],ah
   14006332c:	add    dl,BYTE PTR [rsi]
   14006332e:	scas   al,BYTE PTR es:[rdi]
   14006332f:	fwait
   140063330:	pop    rsp
   140063331:	adc    esi,ebp
   140063333:	repnz or esi,esi
   140063336:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140063337:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140063338:	cmp    dh,dl
   14006333a:	pop    rdi
   14006333b:	xor    BYTE PTR [rdx+0x66ebf982],dh
   140063341:	pop    rcx
   140063342:	adc    eax,0xb2ed1011
   140063347:	cli    
   140063348:	cmp    eax,0x3a06c1cd
   14006334d:	sbb    al,0xb2
   14006334f:	fstp   QWORD PTR [rax]
   140063351:	cld    
   140063352:	ins    BYTE PTR es:[rdi],dx
   140063353:	rex.X (bad) 
   140063355:	rex.WR add BYTE PTR [rbx+rax*1],r14b
   140063359:	test   eax,0x288cd383
   14006335e:	(bad)  
   14006335f:	or     cl,BYTE PTR [rax-0x2c39a90e]
   140063365:	sbb    al,0xec
   140063367:	(bad)  
   140063368:	jp     0x140063385
   14006336a:	cld    
   14006336b:	leave  
   14006336c:	pop    rbp
   14006336d:	(bad)  
   14006336e:	(bad)  
   14006336f:	xchg   ecx,eax
   140063370:	rcr    cl,cl
   140063372:	pop    rdi
   140063373:	(bad)  
   140063374:	mov    ecx,0x1ac9cc4e
   140063379:	adc    eax,0x102a4178
   14006337e:	lock cmp al,0xde
   140063381:	scas   al,BYTE PTR es:[rdi]
   140063382:	cld    
   140063383:	fstp   QWORD PTR [rdx]
   140063385:	cld    
   140063386:	in     al,dx
   140063387:	retf   0x98ee
   14006338a:	add    BYTE PTR [rsp+rdi*4-0x8],ch
   14006338e:	rex.B
   14006338f:	rex.XB rol DWORD PTR [r8-0x737fdb75],cl
   140063396:	cwde   
   140063397:	push   0xffffffffffffff83
   140063399:	sub    al,0x93
   14006339b:	std    
   14006339c:	loopne 0x140063409
   14006339e:	cmp    DWORD PTR [rdi+0x7348af93],0xfffffffe
   1400633a5:	sub    al,0xfc
   1400633a7:	cwde   
   1400633a8:	mov    ebp,0x3996f898
   1400633ad:	pop    rcx
   1400633ae:	movsxd eax,DWORD PTR [rbx]
   1400633b0:	(bad)  
   1400633b1:	add    rax,0xffffffffdbc79e02
   1400633b7:	loopne 0x1400633a8
   1400633b9:	out    0xe0,al
   1400633bb:	addr32 ja 0x1400633ec
   1400633be:	inc    BYTE PTR [rax+riz*2]
   1400633c1:	jrcxz  0x140063388
   1400633c3:	bndldx bnd3,[rdx+0x1245c05]
   1400633ca:	fs (bad) 
   1400633cc:	push   rsp
   1400633cd:	sbb    esp,DWORD PTR [rcx+rbx*4-0x14]
   1400633d1:	(bad)  
   1400633d2:	pop    rdi
   1400633d3:	sbb    edi,esp
   1400633d5:	popf   
   1400633d6:	jl     0x14006341d
   1400633d8:	(bad)  
   1400633d9:	repz addr32 loope 0x1400633a4
   1400633dd:	in     al,dx
   1400633de:	(bad)
   1400633e1:	int3   
   1400633e2:	leave  
   1400633e3:	sbb    bl,BYTE PTR [rbx]
   1400633e5:	js     0x140063428
   1400633e7:	sub    dl,BYTE PTR [rax]
   1400633e9:	lock cmp al,0xde
   1400633ec:	(bad)  
   1400633ed:	jg     0x1400633a6
   1400633ef:	(bad)  
   1400633f0:	(bad)  
   1400633f1:	mov    ebx,0x8027f174
   1400633f6:	jb     0x14006343c
   1400633f8:	shl    DWORD PTR [rdi+rdi*1],0xc8
   1400633fc:	cld    
   1400633fd:	xor    BYTE PTR [rdx+0x6418d811],0x89
   140063404:	pop    rdx
   140063405:	rcr    bl,1
   140063407:	loopne 0x1400633f8
   140063409:	in     al,0x2b
   14006340b:	rcr    BYTE PTR [rdi+rdi*1+0x5ecd608b],cl
   140063412:	rex.WR jl 0x1400633e0
   140063415:	pushf  
   140063416:	lods   al,BYTE PTR ds:[rsi]
   140063417:	mov    cl,0x81
   140063419:	(bad)  
   14006341a:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14006341b:	add    ch,BYTE PTR [rcx]
   14006341d:	cld    
   14006341e:	rex.WRXB
   14006341f:	rex.B jmp 0x1400633a5
   140063422:	(bad)
   140063427:	or     cl,BYTE PTR [rax-0x5ca5e7ba]
   14006342d:	gs loope 0x140063436
   140063430:	(bad)  
   140063431:	leave  
   140063432:	adc    eax,0xf58911e2
   140063437:	(bad)  
   140063438:	mov    WORD PTR [rdx+0x480b22fd],gs
   14006343e:	(bad)  
   14006343f:	add    BYTE PTR [rsi],ch
   140063441:	xchg   edx,eax
   140063442:	add    ah,0x63
   140063445:	jno    0x140063496
   140063447:	jae    0x1400633f9
   140063449:	or     DWORD PTR [rsi],0x852e887
   14006344f:	jle    0x140063487
   140063451:	lods   al,BYTE PTR ds:[rsi]
   140063452:	or     esp,DWORD PTR [rsi]
   140063454:	add    BYTE PTR [rdx+0x289c1391],bl
   14006345a:	(bad)  
   14006345b:	or     cl,al
   14006345d:	int3   
   14006345e:	add    eax,0x6d92a03a
   140063463:	cmp    DWORD PTR [rdi],0xffffffb9
   140063466:	stos   DWORD PTR es:[rdi],eax
   140063467:	sbb    BYTE PTR [rsp+riz*4+0x72a3e55],ch
   14006346e:	jb     0x1400634e6
   140063470:	outs   dx,DWORD PTR ds:[rsi]
   140063471:	loop   0x1400634ce
   140063473:	out    0x64,al
   140063475:	lea    ecx,[rip+0x481520bc]        # 0x1881b5537
   14006347b:	movabs ds:0x49b91fe4fe0da5f,eax
   140063484:	(bad)  
   140063485:	jl     0x1400634fc
   140063487:	and    bh,BYTE PTR [rsi+0x266732cf]
   14006348d:	out    dx,eax
   14006348e:	scas   al,BYTE PTR es:[rdi]
   14006348f:	out    0x0,eax
   140063491:	in     al,0x27
   140063493:	add    DWORD PTR [rbp-0x55],edx
   140063496:	mov    eax,DWORD PTR [rcx]
   140063498:	in     eax,dx
   140063499:	clc    
   14006349a:	mov    ?,WORD PTR [rsi-0x32807d6c]
   1400634a0:	(bad)  
   1400634a1:	mov    ebx,0xd0b5b6ab
   1400634a6:	movabs ds:0x1b8364e6d8d0e07b,al
   1400634af:	pop    rbx
   1400634b0:	fldcw  WORD PTR [rdx]
   1400634b2:	(bad)  
   1400634b3:	(bad)  
   1400634b4:	mov    bl,BYTE PTR [rcx-0x6b4bb30]
   1400634ba:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400634bb:	mov    dl,0xf2
   1400634bd:	out    0xa6,eax
   1400634bf:	jne    0x14006348a
   1400634c1:	(bad)  
   1400634c2:	add    BYTE PTR [rsi-0x6c],cl
   1400634c5:	(bad)  
   1400634c6:	add    eax,0xb36b1b64
   1400634cb:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400634cc:	jrcxz  0x140063489
   1400634ce:	mov    ds,WORD PTR [rcx+0x4a]
   1400634d1:	shr    edi,0x1a
   1400634d4:	pop    rbx
   1400634d5:	mov    ch,0xb1
   1400634d7:	test   DWORD PTR [rdx+0x6c6e03c0],edi
   1400634dd:	gs imul ebx,esp,0x18
   1400634e1:	sub    edi,edx
   1400634e3:	int    0x44
   1400634e5:	rex.WXB stc 
   1400634e7:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400634e8:	(bad)  
   1400634e9:	cld    
   1400634ea:	ins    BYTE PTR es:[rdi],dx
   1400634eb:	(bad)  
   1400634ec:	(bad)  
   1400634ed:	in     al,dx
   1400634ee:	add    al,ah
   1400634f0:	rex.R stc 
   1400634f2:	push   rcx
   1400634f3:	rex jbe 0x1400634f5
   1400634f6:	mov    dl,0xf
   1400634f8:	(bad)  
   1400634f9:	jg     0x1400634ee
   1400634fb:	(bad)  
   1400634fc:	outs   dx,BYTE PTR ds:[rsi]
   1400634fd:	scas   al,BYTE PTR es:[rdi]
   1400634fe:	fcmovu st,st(2)
   140063500:	rex.X
   140063501:	fld    QWORD PTR [ebx]
   140063504:	(bad)  
   140063505:	clc    
   140063506:	mov    edi,0x79d5337f
   14006350b:	xor    ah,BYTE PTR [rbx-0x71]
   14006350e:	rex.RB
   14006350f:	rex.WX stc 
   140063511:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140063512:	sbb    ah,bh
   140063514:	ins    BYTE PTR es:[rdi],dx
   140063515:	(bad)
   140063518:	add    dl,dh
   14006351a:	movabs ds:0x256fb3bcd315da00,eax
   140063523:	mov    ebx,0x7e7e57d4
   140063528:	outs   dx,BYTE PTR ds:[rsi]
   140063529:	mov    ebx,0x81e85d4d
   14006352e:	movabs ds:0xbe9870e8191f5c5f,al
   140063537:	push   rsp
   140063538:	sbb    DWORD PTR [rdi+0x539eef5e],0xffffff80
   14006353f:	cli    
   140063540:	sbb    BYTE PTR [rax-0x18d5fc49],bl
   140063546:	(bad)  
   140063547:	cmc    
   140063548:	loopne 0x1400634f9
   14006354a:	(bad)  
   14006354b:	mov    ecx,0x3c4bbc5
   140063550:	repz mov ?,WORD PTR [rip+0x3f8d57da]        # 0x17f938d31
   140063557:	(bad)  
   140063558:	rex.WXB cmp r8,rdi
   14006355b:	imul   edi,edi,0x6a00efe2
   140063561:	(bad)  
   140063562:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140063563:	push   rcx
   140063564:	in     eax,0x55
   140063566:	push   0xffffffffffffffe7
   140063568:	jo     0x140063541
   14006356a:	xor    DWORD PTR [rbx+0x3b],ecx
   14006356d:	clc    
   14006356e:	stos   DWORD PTR es:[rdi],eax
   14006356f:	ss push rbp
   140063571:	nop
   140063572:	mov    ch,0xbc
   140063574:	std    
   140063575:	pop    rcx
   140063576:	ins    BYTE PTR es:[rdi],dx
   140063577:	(bad)  
   140063579:	xor    DWORD PTR [rsi+0x4],edx
   14006357c:	mov    ebx,0x5bd95475
   140063581:	rex.WXB cmp rax,0x2eeae9f8
   140063587:	cwde   
   140063588:	add    BYTE PTR [rdx+0x3d],ch
   14006358b:	outs   dx,DWORD PTR ds:[rsi]
   14006358d:	(bad)  
   14006358e:	push   rsp
   14006358f:	(bad)  
   140063590:	pop    rdi
   140063591:	repnz rcr DWORD PTR [rdi+0x35],0xa5
   140063596:	sbb    BYTE PTR [rbx+0x35],ah
   140063599:	rex.WRXB mov r12b,0xe8
   14006359c:	fdecstp 
   14006359e:	sar    BYTE PTR [rbx+riz*2+0x4ef8868f],0x5b
   1400635a6:	cli    
   1400635a7:	sub    edi,DWORD PTR [rdi+0x76]
   1400635aa:	ins    DWORD PTR es:[rdi],dx
   1400635ab:	(bad)  
   1400635ac:	rex.WR add spl,r15b
   1400635af:	xchg   ebx,eax
   1400635b0:	xor    ebp,DWORD PTR [rbx-0x34]
   1400635b3:	movabs al,ds:0x7e0ab2fe72a03b79
   1400635bc:	sbb    edx,DWORD PTR [rsi+0x55]
   1400635bf:	(bad)  [rdx-0x59]
   1400635c2:	mov    ah,0xf9
   1400635c4:	and    bh,BYTE PTR [rax+0x60]
   1400635c7:	fidiv  WORD PTR [rcx+0x3eca5b47]
   1400635cd:	pop    rdx
   1400635ce:	(bad)  
   1400635cf:	sub    edi,DWORD PTR [rdi-0xe]
   1400635d2:	lock (bad) 
   1400635d4:	outs   dx,BYTE PTR ds:[rsi]
   1400635d5:	cwde   
   1400635d6:	add    BYTE PTR [rsi],bl
   1400635d8:	test   BYTE PTR [rcx],dh
   1400635da:	(bad)  
   1400635db:	pushf  
   1400635dc:	adc    ebx,ebx
   1400635de:	(bad)  
   1400635df:	jb     0x1400635fd
   1400635e1:	(bad)
   1400635e4:	rex.R
   1400635e5:	rex.WXB movabs r13,0x621d701e18b66d3
   1400635ef:	cmp    bl,BYTE PTR [rsi+riz*8]
   1400635f2:	sub    al,0xa3
   1400635f4:	loopne 0x14006359d
   1400635f6:	jae    0x140063617
   1400635f8:	in     al,dx
   1400635f9:	xchg   BYTE PTR [rcx],cl
   1400635fb:	(bad)  
   1400635fc:	(bad)  
   1400635fd:	mov    ecx,0xa0d5fc17
   140063602:	stos   BYTE PTR es:[rdi],al
   140063603:	movabs al,ds:0x5c07a59d6dec18c5
   14006360c:	outs   dx,DWORD PTR ds:[rsi]
   14006360d:	sbb    al,ch
   14006360f:	jo     0x140063619
   140063611:	cs mov bl,0xe0
   140063614:	sar    DWORD PTR [ebx+0x37300760],cl
   14006361b:	not    DWORD PTR [rax]
   14006361d:	or     al,0xb9
   14006361f:	xchg   ecx,eax
   140063620:	(bad)  
   140063621:	adc    al,0x5b
   140063623:	sub    eax,0x5e5b25b7
   140063628:	(bad)  
   14006362a:	jb     0x14006367c
   14006362c:	xchg   ebp,eax
   14006362d:	pop    rax
   14006362e:	hlt    
   14006362f:	rex.X sti 
   140063631:	mov    ebx,0x3d701e18
   140063636:	(bad)  
   140063637:	movabs al,ds:0xf93a7e0c32ce61c3
   140063640:	movabs eax,ds:0x7cdc860d7c01d86e
   140063649:	cs (bad) 
   14006364b:	(bad)  
   14006364c:	jnp    0x1400635ee
   14006364e:	fdiv   st(5),st
   140063650:	sbb    BYTE PTR [rbp+0xf4c59fd],ah
   140063656:	pushf  
   140063657:	cmp    eax,ecx
   140063659:	rex.WRXB (bad) 
   14006365b:	jg     0x14006360a
   14006365d:	sbb    esp,DWORD PTR [rsi]
   14006365f:	add    BYTE PTR [rbx+rax*1+0x70],bl
   140063663:	mov    bl,0xed
   140063665:	mov    ecx,0xe6fbf2b0
   14006366a:	cs out 0x60,al
   14006366d:	outs   dx,DWORD PTR ds:[rsi]
   14006366e:	jmp    0x14006369e
   140063670:	cmp    eax,0x3f056e70
   140063675:	(bad)  
   140063677:	loopne 0x14006361b
   140063679:	(bad)  
   14006367a:	or     BYTE PTR [rbx+rsi*8],dh
   14006367d:	icebp  
   14006367e:	jg     0x14006363d
   140063680:	lahf   
   140063681:	xchg   BYTE PTR [rax+0x4f],bl
   140063684:	pushf  
   140063685:	xor    eax,ecx
   140063687:	out    dx,eax
   140063688:	data16 add BYTE PTR [rbx+0x78],ch
   14006368c:	sti    
   14006368d:	mov    bl,0xe8
   14006368f:	(bad)  
   140063690:	cmp    BYTE PTR [rdi],al
   140063692:	cmp    DWORD PTR [rdi-0x1e],0xffffffdb
   140063696:	(bad)  
   140063697:	in     al,dx
   140063698:	(bad)  
   140063699:	imul   eax,DWORD PTR [rax],0xffffffb1
   14006369c:	out    0x3f,eax
   14006369e:	sub    DWORD PTR [rbp+0x83cd6f0],0xffffff96
   1400636a5:	in     eax,dx
   1400636a6:	cmp    DWORD PTR [rdi-0x79],edi
   1400636a9:	rex.B out 0xe6,al
   1400636ac:	mov    esp,0x5f36fcdc
   1400636b1:	adc    al,0xf
   1400636b3:	xchg   esp,eax
   1400636b4:	xchg   ebx,eax
   1400636b5:	repnz xor bh,BYTE PTR [rip+0xfffffffffd9ef7e7]        # 0x13da52ea3
   1400636bc:	or     al,0x91
   1400636be:	rex.RB fild WORD PTR [r9]
   1400636c1:	cwde   
   1400636c2:	rex.RB jae 0x140063738
   1400636c5:	lahf   
   1400636c6:	(bad)  
   1400636c7:	xchg   esi,eax
   1400636c8:	popf   
   1400636c9:	rex.WXB rcr QWORD PTR [r15],0xdb
   1400636cd:	int3   
   1400636ce:	adc    edi,0x83e78b1e
   1400636d4:	cmp    al,0xf2
   1400636d6:	stos   BYTE PTR es:[rdi],al
   1400636d7:	cld    
   1400636d8:	sbb    al,0x8
   1400636da:	jle    0x140063712
   1400636dc:	(bad)  
   1400636dd:	(bad)  
   1400636de:	scas   al,BYTE PTR es:[rdi]
   1400636df:	sub    esp,DWORD PTR [rsi]
   1400636e1:	sbb    BYTE PTR [rcx+0x53cddfdb],0x80
   1400636e8:	sbb    eax,0x57f04ee7
   1400636ed:	stos   DWORD PTR es:[rdi],eax
   1400636ee:	or     eax,0xb1ed0077
   1400636f3:	js     0x140063733
   1400636f5:	test   al,0xc2
   1400636f7:	ds rex.X out 0x48,eax
   1400636fb:	lock out dx,eax
   1400636fd:	shl    dh,0x9f
   140063700:	xor    edi,edx
   140063702:	and    eax,0x8218003b
   140063707:	loopne 0x140063788
   140063709:	pop    rdi
   14006370a:	in     al,dx
   14006370b:	add    al,BYTE PTR [rsi+0x44]
   14006370e:	test   BYTE PTR [rax+rdx*4],bl
   140063711:	or     BYTE PTR [rbx],cl
   140063713:	lock lods al,BYTE PTR ds:[rsi]
   140063715:	mov    WORD PTR [rdx],cs
   140063717:	rex.X faddp st(1),st
   14006371a:	or     eax,0xf8ed91e
   14006371f:	push   rsp
   140063720:	sbb    eax,0x3c6a9acf
   140063725:	xchg   edx,eax
   140063726:	rex.WR lahf 
   140063728:	mov    cl,BYTE PTR [rax]
   14006372a:	mov    BYTE PTR [rsi+rdx*8],ch
   14006372d:	push   rbp
   14006372e:	nop
   14006372f:	sbb    al,0x62
   140063731:	movabs al,ds:0xc58f6dc8c3414bc3
   14006373a:	icebp  
   14006373b:	rex.B (bad) 
   14006373d:	rex retf 
   14006373f:	xor    al,0x6
   140063741:	(bad)  
   140063742:	pop    rbp
   140063743:	add    ah,BYTE PTR [rax-0x64]
   140063746:	adc    DWORD PTR [rbp+0x28],0xffffffd1
   14006374a:	sub    al,0xeb
   14006374c:	(bad)  
   14006374d:	xchg   edi,eax
   14006374e:	(bad)  
   14006374f:	mov    bh,0x1
   140063751:	sub    esi,edx
   140063753:	sub    al,0xee
   140063755:	mov    edx,0x5ffeb6c3
   14006375a:	stc    
   14006375b:	movabs ds:0x1dd47c554bf2f035,eax
   140063764:	or     bl,BYTE PTR [rsp+0x1]
   140063768:	sar    DWORD PTR [rax+0x43],1
   14006376b:	cmp    eax,0x1e0dc1cd
   140063770:	mov    dl,ah
   140063772:	cmp    dl,BYTE PTR [rbx+0x1d]
   140063775:	rex.WRXB ins DWORD PTR es:[rdi],dx
   140063777:	xor    eax,0x4a902a9e
   14006377c:	add    DWORD PTR [rcx-0x6df55cbb],edx
   140063782:	rex.XB or al,0x74
   140063785:	js     0x14006379d
   140063787:	add    al,0x69
   140063789:	int    0x9e
   14006378b:	out    dx,eax
   14006378c:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14006378d:	repnz ins DWORD PTR es:[rdi],dx
   14006378f:	(bad)  
   140063790:	or     eax,0xb23c381e
   140063795:	sub    DWORD PTR [rdx+0x3012eea1],ebx
   14006379b:	call   FWORD PTR [rax+0x73130960]
   1400637a1:	mov    dl,0xdd
   1400637a3:	rcr    BYTE PTR [rax-0x694f241d],1
   1400637a9:	(bad)  
   1400637aa:	add    BYTE PTR [rcx],ch
   1400637ac:	(bad)  
   1400637ad:	adc    eax,0x643400a7
   1400637b2:	cli    
   1400637b3:	div    BYTE PTR [rdi-0x1d]
   1400637b6:	mov    eax,eax
   1400637b8:	lock (bad) 
   1400637ba:	ret    0x88b5
   1400637bd:	mov    bh,BYTE PTR [rax+0x24c02c7c]
   1400637c3:	fwait
   1400637c4:	sbb    eax,0x3a06f8e0
   1400637c9:	fcom   QWORD PTR [rdi+rdx*4-0x8]
   1400637cd:	(bad)  
   1400637ce:	add    al,0x7f
   1400637d0:	xor    al,0xbc
   1400637d2:	std    
   1400637d3:	in     eax,dx
   1400637d4:	cmp    cl,BYTE PTR [rdi]
   1400637d6:	push   0xffffffff8e580868
   1400637db:	sar    edi,0xe1
   1400637de:	sbb    al,0xfc
   1400637e0:	hlt    
   1400637e1:	jg     0x14006381a
   1400637e3:	cmp    al,0x7
   1400637e5:	loopne 0x1400637ae
   1400637e7:	shr    DWORD PTR [rdi-0x3e],0xe3
   1400637eb:	fstp   TBYTE PTR [rcx+rax*8]
   1400637ee:	es add esi,ebp
   1400637f1:	xchg   DWORD PTR [rax-0x58579dd8],eax
   1400637f7:	cmp    DWORD PTR [rax-0x256ebc3f],edi
   1400637fd:	(bad)  
   1400637fe:	mov    esi,0x173fc178
   140063803:	imul   BYTE PTR [rdi-0x46]
   140063806:	sahf   
   140063807:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140063808:	cmp    eax,0x6ece1da9
   14006380d:	movabs ds:0x2732e02a7366bc38,eax
   140063816:	fwait
   140063817:	retf   
   140063818:	(bad)  
   140063819:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14006381a:	add    ch,BYTE PTR [rcx+0x7afda0f9]
   140063820:	scas   eax,DWORD PTR es:[rdi]
   140063821:	mov    BYTE PTR [rax-0x195fdb24],0xab
   140063828:	call   0x14495539f
   14006382d:	rex.WRB int3 
   14006382f:	leave  
   140063830:	data16 jbe 0x14006382a
   140063833:	out    0x88,eax
   140063835:	mov    cl,0x2a
   140063837:	jne    0x140063806
   140063839:	(bad)  
   14006383a:	and    BYTE PTR [rsi],0x4d
   14006383d:	jg     0x140063821
   14006383f:	jg     0x14006381f
   140063841:	sub    esp,0x825238c3
   140063847:	and    ebp,0xffffffe3
   14006384a:	(bad)  
   14006384b:	mov    edi,0xae49abbd
   140063850:	movabs ds:0xbc11cfbd8aa9c188,eax
   140063859:	xchg   DWORD PTR fs:[rbx+0x3],esi
   14006385d:	mov    esp,0x84e24761
   140063862:	adc    eax,0x5400e4bb
   140063867:	(bad)  
   140063868:	cs rex pop rax
   14006386b:	icebp  
   14006386c:	push   rbx
   14006386d:	cld    
   14006386e:	(bad)  
   14006386f:	pop    rsp
   140063870:	sub    BYTE PTR [rcx+rbp*4-0x7e],0xc4
   140063875:	ins    BYTE PTR es:[rdi],dx
   140063876:	fst    DWORD PTR [rax-0x4e270fe5]
   14006387c:	hlt    
   14006387d:	adc    DWORD PTR [rax+rax*1+0x17],edi
   140063881:	in     al,0x93
   140063883:	pop    rdx
   140063884:	std    
   140063885:	lea    esp,[rsi+rdi*2+0x72e24cf]
   14006388c:	iret   
   14006388d:	in     al,0x69
   14006388f:	stos   BYTE PTR es:[rdi],al
   140063890:	sahf   
   140063891:	pop    rbx
   140063892:	shl    BYTE PTR [rdi+0x2d7cd6ee],cl
   140063898:	jne    0x140063869
   14006389a:	cmp    BYTE PTR [rsi-0x559e5ebd],dh
   1400638a0:	jp     0x14006383d
   1400638a2:	xchg   ebx,eax
   1400638a3:	(bad)  
   1400638a4:	or     al,0x5d
   1400638a6:	push   rdx
   1400638a7:	and    DWORD PTR [rcx-0x1f],esi
   1400638aa:	gs mov ah,0x84
   1400638ad:	jno    0x1400638b1
   1400638af:	(bad)  
   1400638b0:	rex.WB movabs rax,ds:0xa745453930541241
   1400638ba:	ja     0x140063903
   1400638bc:	(bad)  
   1400638bd:	(bad)  
   1400638be:	push   rax
   1400638bf:	(bad)
   1400638c2:	lahf   
   1400638c3:	add    esi,edi
   1400638c5:	rex.RX push rsp
   1400638c7:	loop   0x140063894
   1400638c9:	mov    BYTE PTR [rdi-0x2c238d3b],dl
   1400638cf:	leave  
   1400638d0:	rcr    esi,0xe6
   1400638d3:	fs adc eax,0xcc1e8e9d
   1400638d9:	add    DWORD PTR [rdx+0x9ce6c29],ebx
   1400638df:	cdq    
   1400638e0:	imul   ecx,ebp,0xb3005358
   1400638e6:	xchg   esi,eax
   1400638e7:	in     al,0xf4
   1400638e9:	(bad)  
   1400638ea:	cmc    
   1400638eb:	adc    esi,ecx
   1400638ed:	push   0x3
   1400638ef:	mov    al,0xc0
   1400638f1:	fs xchg edx,eax
   1400638f4:	sti    
   1400638f5:	or     DWORD PTR [rax-0x1a],ebx
   1400638f8:	jp     0x14006394a
   1400638fa:	push   0x3802c32e
   1400638ff:	jl     0x1400638c1
   140063901:	shl    BYTE PTR [rip+0x5e171925],1        # 0x19e1d522c
   140063907:	rex.RX
   140063908:	rex.WXB sbb BYTE PTR [r15],spl
   14006390b:	loopne 0x14006389d
   14006390d:	adc    al,0x1a
   14006390f:	adc    al,0xe2
   140063911:	rol    BYTE PTR [rcx],cl
   140063913:	int3   
   140063914:	mov    fs,WORD PTR [rsi-0x68]
   140063917:	(bad)  
   140063919:	jb     0x1400638a3
   14006391b:	es push rsp
   14006391d:	icebp  
   14006391e:	push   rdi
   14006391f:	icebp  
   140063920:	rex.WRXB
   140063921:	rex.WB
   140063922:	repz mov edi,0x1fcef249
   140063928:	rex.WRX jg 0x1400638c4
   14006392b:	jns    0x1400639a3
   14006392d:	sbb    eax,eax
   14006392f:	stc    
   140063930:	(bad)  
   140063931:	lahf   
   140063932:	sahf   
   140063933:	movabs ds:0xe5fc7965f8ab8e92,al
   14006393c:	(bad)  
   14006393d:	adc    ebp,esi
   14006393f:	sub    dh,ah
   140063941:	add    BYTE PTR [rip+0x36928298],bh        # 0x17698bbdf
   140063947:	mov    ecx,0x1e7ec7a
   14006394c:	rex (bad) 
   14006394e:	sub    BYTE PTR [rsi+rbp*4],ah
   140063951:	cmp    bh,bh
   140063953:	xchg   BYTE PTR [rbx-0x1d],ch
   140063956:	jl     0x140063993
   140063958:	mov    esp,0x9f38f68c
   14006395d:	(bad)  
   14006395e:	adc    dh,BYTE PTR [rsi]
   140063960:	bt     DWORD PTR [rcx-0x38313c23],edi
   140063967:	(bad)  
   140063968:	dec    BYTE PTR [rcx+0x710fd8d5]
   14006396e:	or     eax,0x6316e00b
   140063973:	rcl    al,0x33
   140063976:	popf   
   140063977:	out    dx,al
   140063978:	pop    rsp
   140063979:	js     0x140063994
   14006397b:	xor    al,0x61
   14006397d:	ins    DWORD PTR es:[rdi],dx
   14006397e:	(bad)  
   14006397f:	or     al,0xc2
   140063981:	and    DWORD PTR [rcx],ebp
   140063983:	xor    al,0x48
   140063985:	and    BYTE PTR [rax+0x72],0x8a
   140063989:	mov    cl,BYTE PTR [rsi-0x11]
   14006398c:	mov    ?,WORD PTR [rsi*1+0x730f6481]
   140063993:	shl    DWORD PTR [rcx+0x73],cl
   140063996:	pop    rsp
   140063997:	sbb    dh,BYTE PTR [rbx]
   140063999:	mov    edi,0xbba64c58
   14006399e:	out    dx,al
   14006399f:	sub    eax,ecx
   1400639a1:	xor    al,0x5e
   1400639a3:	adc    eax,0x9c80733f
   1400639a8:	push   rcx
   1400639a9:	rex.W pop rsp
   1400639ab:	jne    0x140063937
   1400639ad:	or     eax,0x76f9c6d7
   1400639b2:	js     0x1400639cd
   1400639b4:	in     eax,dx
   1400639b5:	or     al,ch
   1400639b7:	jg     0x140063a34
   1400639b9:	pop    rbp
   1400639ba:	test   al,0xb3
   1400639bc:	jnp    0x1400639c0
   1400639be:	cwde   
   1400639bf:	(bad)  
   1400639c0:	cld    
   1400639c1:	mul    ecx
   1400639c3:	and    al,0x43
   1400639c5:	sbb    dl,BYTE PTR [rsi]
   1400639c7:	shr    BYTE PTR [rip+0xffffffffbf8980c6],0xc3        # 0xff8fba94
   1400639ce:	movabs eax,ds:0x27498984d065e172
   1400639d7:	(bad)  
   1400639d8:	(bad)  
   1400639d9:	or     cl,BYTE PTR [rip+0xfffffffffc6fe2aa]        # 0x13c761c89
   1400639df:	sbb    BYTE PTR [rbx],bl
   1400639e1:	lods   eax,DWORD PTR ds:[rsi]
   1400639e2:	xor    DWORD PTR [rsi+0x797cf1b4],ecx
   1400639e8:	jnp    0x1400639d9
   1400639ea:	shr    BYTE PTR [rdx+rdi*4+0x1],1
   1400639ee:	(bad)  
   1400639ef:	fsub   QWORD PTR [rdi+0x7f]
   1400639f2:	(bad)  
   1400639f3:	xchg   esi,eax
   1400639f4:	hlt    
   1400639f5:	xchg   DWORD PTR [rsi+0x13],ecx
   1400639f8:	test   DWORD PTR [rsi],edi
   1400639fa:	jo     0x140063a56
   1400639fc:	rex.WXB xchg QWORD PTR [r11+0x60f474e8],rbp
   140063a03:	(bad)  
   140063a04:	ror    BYTE PTR [rcx+riz*1-0x73],1
   140063a08:	rol    DWORD PTR [rdi-0x18e4a3c9],cl
   140063a0e:	fndisi(8087 only) 
   140063a10:	in     eax,0xb4
   140063a12:	mov    cl,0x96
   140063a14:	pop    rsp
   140063a15:	fdiv   QWORD PTR [rbx+0x7fce00dd]
   140063a1b:	jge    0x1400639d1
   140063a1d:	rex.X pushf 
   140063a1f:	rex.RXB sbb r13b,r11b
   140063a22:	mov    al,0x0
   140063a24:	outs   dx,BYTE PTR ds:[rsi]
   140063a25:	xor    DWORD PTR [rsi],eax
   140063a27:	or     al,0x3d
   140063a29:	push   rdx
   140063a2a:	xchg   edx,eax
   140063a2b:	jno    0x140063a0e
   140063a2d:	gs mov al,0x84
   140063a30:	jmp    0x1592c522d
   140063a35:	es jo  0x140063a0b
   140063a38:	add    eax,0x1cdb9865
   140063a3d:	jmp    0x13940bf21
   140063a42:	jmp    0x1400639e1
   140063a44:	mov    edi,0x7cb5d9e5
   140063a49:	cmp    eax,0xb52fe9c2
   140063a4e:	mov    ah,0xf6
   140063a50:	(bad)  
   140063a51:	outs   dx,BYTE PTR ds:[rsi]
   140063a52:	scas   al,BYTE PTR es:[rdi]
   140063a53:	rex.RB
   140063a54:	addr32 (bad) 
   140063a56:	fdivr  QWORD PTR [rcx+0x4502fc7f]
   140063a5c:	ja     0x140063a96
   140063a5e:	test   edx,eax
   140063a60:	(bad)  
   140063a61:	mov    dl,0x5a
   140063a63:	je     0x140063a1f
   140063a65:	cmp    BYTE PTR [rbp-0x501d50fe],ah
   140063a6b:	(bad)  
   140063a6c:	jle    0x140063a54
   140063a6e:	add    BYTE PTR [rbx-0x7b],dl
   140063a71:	ret    0x2f90
   140063a74:	sub    eax,0xc6d70ccf
   140063a79:	stc    
   140063a7a:	rex.WRX
   140063a7b:	movabs r8,0x60a2ef7fc504e914
   140063a85:	addr32 sti 
   140063a87:	add    al,0x30
   140063a89:	add    eax,0xb602afad
   140063a8e:	cmp    DWORD PTR [rcx+0x38b758c5],0x55
   140063a95:	cld    
   140063a96:	sub    DWORD PTR [rcx-0x47480755],esp
   140063a9c:	clc    
   140063a9d:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140063a9e:	data16 ss ds cli 
   140063aa2:	idiv   edx
   140063aa4:	(bad)  
   140063aa5:	std    
   140063aa6:	adc    eax,DWORD PTR [rax-0x8c45fc]
   140063aac:	jmp    0xfe3c9ede
   140063ab1:	sub    DWORD PTR [rax+0x63],edi
   140063ab4:	rex.WRXB hlt 
   140063ab6:	test   BYTE PTR [rax-0x12],0x36
   140063aba:	add    esi,DWORD PTR [rbp-0x40f462bb]
   140063ac0:	(bad)  
   140063ac1:	adc    edx,DWORD PTR [rbx+0x142ec20e]
   140063ac7:	sbb    dl,BYTE PTR [rsi+rbx*2]
   140063aca:	or     esp,ecx
   140063acc:	xlat   BYTE PTR ds:[rbx]
   140063acd:	nop
   140063ace:	jno    0x140063b3e
   140063ad0:	jmp    0x140063a9d
   140063ad2:	and    DWORD PTR [rdx-0x592c9dc0],ebx
   140063ad8:	shl    DWORD PTR fs:[rdi-0x3233f92f],0xa5
   140063ae0:	ret    
   140063ae1:	jo     0x140063b33
   140063ae3:	fwait
   140063ae4:	sbb    eax,0x505307a
   140063ae9:	cwde   
   140063aea:	xlat   BYTE PTR ds:[rbx]
   140063aeb:	stos   DWORD PTR es:[rdi],eax
   140063aec:	clc    
   140063aed:	cdq    
   140063aee:	add    esp,DWORD PTR [rbp+rax*4+0x2c2ae242]
   140063af5:	scas   al,BYTE PTR es:[rdi]
   140063af6:	jno    0x140063ae4
   140063af8:	jl     0x140063b35
   140063afa:	mov    esp,0xa114f69c
   140063aff:	faddp  st(6),st
   140063b01:	jmp    0x161663185
   140063b06:	(bad)  
   140063b07:	loopne 0x140063b12
   140063b09:	add    BYTE PTR [rdi],bh
   140063b0b:	and    ah,dh
   140063b0d:	cld    
   140063b0e:	mov    cl,0xdc
   140063b10:	mov    BYTE PTR [rdx+rcx*8],bh
   140063b13:	enter  0xb8f,0xe3
   140063b17:	rex.WX mov rdx,QWORD PTR [rbx]
   140063b1a:	adc    bl,bh
   140063b1c:	jge    0x140063ad1
   140063b1e:	rex.RXB pop r13
   140063b20:	xchg   ebx,eax
   140063b21:	scas   eax,DWORD PTR es:[rdi]
   140063b22:	fsub   DWORD PTR [rdi+rdi*1-0x76ebeb33]
   140063b29:	cwde   
   140063b2a:	stc    
   140063b2b:	sbb    dh,BYTE PTR [rdx]
   140063b2d:	(bad)  
   140063b2e:	ins    DWORD PTR es:[rdi],dx
   140063b2f:	jge    0x140063b6a
   140063b31:	adc    r13d,DWORD PTR [rdx-0x40621408]
   140063b38:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140063b39:	int3   
   140063b3a:	xor    eax,0xaf2b5ab4
   140063b3f:	push   rbx
   140063b40:	cld    
   140063b41:	adc    bl,bl
   140063b43:	and    dh,BYTE PTR [rsi]
   140063b45:	add    BYTE PTR [rcx],cl
   140063b47:	hlt    
   140063b48:	cld    
   140063b49:	stc    
   140063b4a:	ror    DWORD PTR [rdx],1
   140063b4c:	add    eax,0x3d028078
   140063b51:	adc    eax,0x3f15579d
   140063b56:	sub    cl,ah
   140063b58:	(bad)  
   140063b59:	add    al,0x5a
   140063b5b:	(bad)  
   140063b5c:	in     al,0xdf
   140063b5e:	repnz xchg ebx,eax
   140063b60:	jmp    rax
   140063b62:	movabs ds:0x9561e04c6eb1fa6f,al
   140063b6b:	cmp    DWORD PTR [rcx-0x4108c416],0x8dc0ebc7
   140063b75:	(bad)  
   140063b76:	lock (bad) [rdi+0x7f275f89]
   140063b7d:	adc    eax,0xee01cbbf
   140063b82:	mov    DWORD PTR [rdx+rdx*8],edx
   140063b85:	rex.RX fnstenv [rbx]
   140063b88:	fdiv   QWORD PTR [rax+0x6d]
   140063b8b:	pushf  
   140063b8c:	outs   dx,DWORD PTR ds:[rsi]
   140063b8d:	xchg   DWORD PTR [rdi-0x55ef512d],edx
   140063b93:	adc    al,0xbf
   140063b95:	cmp    al,0x1
   140063b97:	mov    esp,0x2798b5f6
   140063b9c:	cmp    BYTE PTR [rsi+0x47],0xe7
   140063ba0:	(bad)  
   140063ba1:	ds xchg ebx,eax
   140063ba3:	sbb    edi,DWORD PTR [rax+rax*2]
   140063ba6:	icebp  
   140063ba7:	lahf   
   140063ba8:	je     0x140063b45
   140063baa:	mov    ah,0xdc
   140063bac:	cmc    
   140063bad:	or     DWORD PTR [r15],r12d
   140063bb0:	movabs ds:0x34297d72e2c2e418,al
   140063bb9:	sub    BYTE PTR [rax-0x1a],ah
   140063bbc:	imul   ecx,DWORD PTR [rax-0x15],0xffffffe3
   140063bc0:	std    
   140063bc1:	rex.WRB cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140063bc3:	test   eax,0x8749dc09
   140063bc8:	mov    ecx,0x2e39b8e9
   140063bcd:	rex.WRX jmp 0x12884b14f
   140063bd3:	rcl    DWORD PTR [rsp+rdx*4],0x34
   140063bd7:	pop    rsi
   140063bd8:	popf   
   140063bd9:	cld    
   140063bda:	int3   
   140063bdb:	add    edx,edx
   140063bdd:	and    DWORD PTR [rcx+0x15],r14d
   140063be1:	(bad)  
   140063be2:	xlat   BYTE PTR ds:[rbx]
   140063be3:	cmp    BYTE PTR [rsi-0x42],dh
   140063be6:	sbb    eax,0xb52b4e5e
   140063beb:	lock mov ch,0x2f
   140063bef:	mov    bh,0xc7
   140063bf1:	mov    esp,0x4ebdce5d
   140063bf6:	xchg   ecx,eax
   140063bf7:	out    dx,al
   140063bf8:	sbb    al,0x7e
   140063bfa:	neg    DWORD PTR [rax]
   140063bfc:	fimul  DWORD PTR [rdi]
   140063bfe:	pop    rsp
   140063bff:	js     0x140063b82
   140063c01:	xchg   BYTE PTR [rdx],al
   140063c03:	push   rsp
   140063c04:	movabs ds:0x87c2c2f0d2c9b22d,eax
   140063c0d:	mov    ch,0x77
   140063c0f:	mov    cl,BYTE PTR [rdx+0x348eef4e]
   140063c15:	xor    eax,0x730e2481
   140063c1a:	shl    DWORD PTR [rcx+0x73],cl
   140063c1d:	pop    rsp
   140063c1e:	adc    al,BYTE PTR [rdi-0x72a0c646]
   140063c24:	or     eax,0x2505307a
   140063c29:	lea    edx,[rdi-0x3b]
   140063c2c:	iret   
   140063c2d:	sbb    al,0x20
   140063c2f:	rex.WRB adc al,0x12
   140063c32:	push   rdi
   140063c33:	jge    0x140063c16
   140063c35:	or     eax,0x76f9c6d7
   140063c3a:	js     0x140063c75
   140063c3c:	lods   eax,DWORD PTR ds:[rsi]
   140063c3d:	cld    
   140063c3e:	cmp    edi,edi
   140063c40:	ror    ebx,cl
   140063c42:	xchg   bl,cl
   140063c44:	fdivr  QWORD PTR [rbp-0x2228ff14]
   140063c4a:	outs   dx,DWORD PTR ds:[rsi]
   140063c4b:	div    eax
   140063c4d:	fstp   TBYTE PTR [rbp-0x3c]
   140063c50:	lock adc edi,DWORD PTR [rsi]
   140063c53:	ret    
   140063c54:	sub    eax,DWORD PTR [rcx-0x75]
   140063c57:	or     eax,0xa5f5cb8b
   140063c5c:	(bad)  
   140063c5d:	(bad)  
   140063c5e:	jnp    0x140063cac
   140063c60:	rex.WR (bad) 
   140063c62:	push   rdi
   140063c63:	shr    ecx,1
   140063c65:	sbb    eax,0x2409a9a3
   140063c6a:	mov    al,0x8a
   140063c6c:	fistp  QWORD PTR [rax]
   140063c6e:	in     eax,dx
   140063c6f:	lea    edx,[rcx]
   140063c71:	xchg   ebp,eax
   140063c72:	clc    
   140063c73:	(bad)  
   140063c74:	test   al,0x72
   140063c76:	mov    ebp,0x20a59311
   140063c7b:	sub    BYTE PTR [rdx-0x18],cl
   140063c7e:	(bad)  
   140063c7f:	je     0x140063ca1
   140063c81:	pop    rbx
   140063c82:	pop    rdx
   140063c83:	cld    
   140063c84:	sub    ebx,esp
   140063c86:	cli    
   140063c87:	ret    
   140063c88:	(bad)  
   140063c89:	jns    0x140063c6a
   140063c8b:	lahf   
   140063c8c:	rex.W pushf 
   140063c8e:	and    al,0xe6
   140063c90:	out    dx,eax
   140063c91:	fs pop rdx
   140063c93:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140063c94:	test   BYTE PTR [rbp-0x196df620],cl
   140063c9a:	adc    DWORD PTR [rdx+0x1dd35bf],esp
   140063ca0:	adc    al,BYTE PTR [rdi+0x60c143b9]
   140063ca6:	(bad)
   140063caa:	sub    bh,BYTE PTR [rdx]
   140063cac:	mov    ebp,0x81353463
   140063cb1:	in     al,0x85
   140063cb3:	fs int 0x63
   140063cb6:	mov    cl,0x93
   140063cb8:	int    0xeb
   140063cba:	jo     0x140063c41
   140063cbc:	xor    cl,BYTE PTR [rsi]
   140063cbe:	cmp    eax,0xcc028298
   140063cc3:	jmp    0x140063d3a
   140063cc5:	repnz outs dx,DWORD PTR ds:[rsi]
   140063cc7:	(bad)  
   140063cc8:	icebp  
   140063cc9:	lahf   
   140063cca:	and    DWORD PTR [rbx-0x6184e81c],eax
   140063cd0:	mov    eax,0x78b4ba84
   140063cd5:	repz sar BYTE PTR [rip+0xffffffff9ff1d667],cl        # 0xdff81343
   140063cdc:	mov    edi,0xf3797f7f
   140063ce1:	mov    ebp,0x58467f0f
   140063ce6:	mov    dl,0x1
   140063ce8:	in     al,dx
   140063ce9:	imul   edx,DWORD PTR [rip+0x582856b1],0xffffffd4        # 0x1982e93a1
   140063cf0:	rol    BYTE PTR [rbx+0x3a2a29c9],1
   140063cf6:	mov    ebp,0x84d4d23b
   140063cfb:	sub    bh,BYTE PTR [rsi+0x7b]
   140063cfe:	jg     0x140063d0c
   140063d00:	sbb    edx,DWORD PTR [rdx+0x25446bd0]
   140063d06:	mov    esi,0x6f86f88c
   140063d0b:	(bad)  
   140063d0c:	add    al,0x26
   140063d0e:	cmp    BYTE PTR [rbp-0x132a62db],cl
   140063d14:	mov    cl,0xad
   140063d16:	cmp    al,0xf9
   140063d18:	lahf   
   140063d19:	or     DWORD PTR [rcx+0x27fc504f],0x5c55c942
   140063d23:	int3   
   140063d24:	jrcxz  0x140063cd1
   140063d26:	sbb    BYTE PTR [rsi+rbp*1+0x63],ch
   140063d2a:	in     al,dx
   140063d2b:	fdivp  st(5),st
   140063d2d:	(bad)  
   140063d30:	repz cmp edx,esp
   140063d33:	jns    0x140063cf5
   140063d35:	test   BYTE PTR [rax+rsi*2+0x48],ah
   140063d39:	movabs ds:0x91dde9d1514e4790,al
   140063d42:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140063d43:	es nop
   140063d45:	mov    ah,0x90
   140063d47:	lods   al,BYTE PTR ds:[rsi]
   140063d48:	xor    al,BYTE PTR [rcx]
   140063d4a:	sbb    eax,0xcfd93a21
   140063d4f:	rex.WRB mov r15b,0x8c
   140063d52:	rex.XB (bad) 
   140063d55:	movabs al,ds:0xff93b2dfe4eaf1a4
   140063d5e:	sbb    edx,edx
   140063d60:	out    0xb,al
   140063d62:	adc    al,0xfe
   140063d64:	test   eax,0x5e55cfa4
   140063d69:	int3   
   140063d6a:	in     eax,0xab
   140063d6c:	sbb    al,0x74
   140063d6e:	cs movsxd ebp,ebp
   140063d71:	fdivp  st(1),st
   140063d73:	pop    rdx
   140063d74:	sahf   
   140063d75:	(bad)  
   140063d76:	(bad)  
   140063d77:	loopne 0x140063d9c
   140063d79:	scas   eax,DWORD PTR es:[rdi]
   140063d7a:	(bad)  
   140063d7b:	jnp    0x140063dd7
   140063d7d:	(bad)  
   140063d7e:	movabs eax,ds:0xd2357bd3a2a29cae
   140063d87:	(bad)  
   140063d88:	add    al,0x12
   140063d8a:	ss adc al,0x38
   140063d8d:	sbb    eax,0x6662b153
   140063d92:	mov    ebp,0xf9c6d70c
   140063d97:	jbe    0x140063dc5
   140063d99:	cwde   
   140063d9a:	(bad)  
   140063d9b:	xchg   edx,eax
   140063d9c:	(bad)  
   140063d9d:	stos   DWORD PTR es:[rdi],eax
   140063d9e:	loop   0x140063d7f
   140063da0:	xchg   edx,eax
   140063da1:	loop   0x140063de2
   140063da3:	rex.RB push 0x1c
   140063da6:	jrcxz  0x140063dbb
   140063da8:	inc    BYTE PTR [rsi+0x15cba69f]
   140063dae:	jle    0x140063e11
   140063db0:	ds pop rdi
   140063db2:	loope  0x140063d4c
   140063db4:	mov    bl,0x1c
   140063db6:	push   0xfffffffffffffff7
   140063db8:	(bad)  
   140063db9:	push   rdi
   140063dba:	clc    
   140063dbb:	movabs eax,es:0x457b601177c42ffe
   140063dc5:	call   0x1a94b4c5b
   140063dca:	add    eax,0x26c3ac8
   140063dcf:	leave  
   140063dd0:	stos   BYTE PTR es:[rdi],al
   140063dd1:	loop   0x140063dc2
   140063dd3:	int3   
   140063dd4:	pop    rcx
   140063dd5:	mov    ebx,0x9c9af9e
   140063dda:	js     0x140063dbe
   140063ddc:	jb     0x140063da0
   140063dde:	and    BYTE PTR [rip+0x7d68e93e],al        # 0x1bd6f2722
   140063de4:	pushf  
   140063de5:	(bad)  
   140063de6:	xlat   BYTE PTR ds:[rbx]
   140063de7:	ja     0x140063da5
   140063de9:	clc    
   140063dea:	push   rdi
   140063deb:	mov    eax,0x91f0dfc5
   140063df0:	pop    rdi
   140063df1:	loop   0x140063e04
   140063df3:	stc    
   140063df4:	lods   eax,DWORD PTR ds:[rsi]
   140063df5:	pop    rdi
   140063df6:	int3   
   140063df7:	jmp    0xccd97cb3
   140063dfc:	es fdivr st,st(5)
   140063dff:	call   0x10038b74f
   140063e04:	es jo  0x140063dea
   140063e07:	add    esp,DWORD PTR [rsi+riz*8]
   140063e0a:	sti    
   140063e0b:	enter  0xaeb4,0xa3
   140063e0f:	mov    ch,0x84
   140063e11:	movsxd ebx,esi
   140063e13:	xor    eax,0x64854481
   140063e18:	xchg   ebp,eax
   140063e19:	fwait
   140063e1a:	movabs ds:0xb4d997a40b274423,al
   140063e23:	leave  
   140063e24:	cmp    ah,dh
   140063e26:	(bad)  
   140063e27:	or     cl,BYTE PTR [rdx+0x1a]
   140063e2a:	scas   eax,DWORD PTR es:[rdi]
   140063e2b:	rex.WRX (bad) 
   140063e2d:	ja     0x140063dd7
   140063e2f:	clc    
   140063e30:	iret   
   140063e31:	nop
   140063e32:	sbb    ch,BYTE PTR [rbx]
   140063e34:	jl     0x140063dda
   140063e36:	std    
   140063e37:	or     ebx,DWORD PTR [rdi+0x1fc8f897]
   140063e3d:	in     eax,dx
   140063e3e:	adc    BYTE PTR [rbp+0x18a062ae],bh
   140063e44:	sub    BYTE PTR [rsi],al
   140063e46:	mov    al,BYTE PTR [rcx+0x2818a062]
   140063e4c:	(bad)  
   140063e4d:	mov    al,BYTE PTR [rcx+0x2818a062]
   140063e53:	(bad)  
   140063e54:	mov    al,BYTE PTR [rcx+0x2818a062]
   140063e5a:	(bad)  
   140063e5b:	mov    al,BYTE PTR [rcx+0x2818a062]
   140063e61:	(bad)  
   140063e62:	mov    al,BYTE PTR [rcx+0x2818a062]
   140063e68:	(bad)  
   140063e69:	mov    al,BYTE PTR [rcx+0x2818a062]
   140063e6f:	(bad)  
   140063e70:	mov    al,BYTE PTR [rcx+0x2818a062]
   140063e76:	(bad)  
   140063e77:	(bad)
   140063e7b:	leave  
   140063e7c:	sub    eax,0x8efe850b
   140063e81:	or     ebx,DWORD PTR [rcx]
   140063e83:	add    BYTE PTR [rax],al
   140063e85:	add    BYTE PTR [rax],al
   140063e87:	rex.WB
   140063e88:	rex.RB
   140063e89:	rex.WRX
   140063e8a:	rex.R scas al,BYTE PTR es:[rdi]
   140063e8c:	rex.X (bad) 
   140063e8e:	(bad)  
   140063e8f:	add    BYTE PTR [rax],al
   140063e91:	add    BYTE PTR [rcx],al
   140063e93:	add    BYTE PTR [rdi],al
   140063e95:	add    BYTE PTR [rax],dl
   140063e97:	adc    BYTE PTR [rax],al
   140063e99:	add    BYTE PTR [rcx],al
   140063e9b:	add    BYTE PTR [rax],ah
   140063e9d:	add    BYTE PTR [rax],ch
   140063e9f:	add    eax,0x10000
   140063ea4:	sbb    BYTE PTR [rax],bl
   140063ea6:	add    BYTE PTR [rax],al
   140063ea8:	add    DWORD PTR [rax],eax
   140063eaa:	and    BYTE PTR [rax],al
   140063eac:	push   0x200000b
   140063eb1:	add    BYTE PTR [rax],ah
   140063eb3:	and    BYTE PTR [rax],al
   140063eb5:	add    BYTE PTR [rcx],al
   140063eb7:	add    BYTE PTR [rax],ah
   140063eb9:	add    BYTE PTR [rax],ch
   140063ebb:	adc    al,0x0
   140063ebd:	add    BYTE PTR [rbx],al
   140063ebf:	add    BYTE PTR [rax],dh
   140063ec1:	xor    BYTE PTR [rax],al
   140063ec3:	add    BYTE PTR [rcx],al
   140063ec5:	add    BYTE PTR [rax],ah
   140063ec7:	add    BYTE PTR [rax],ch
   140063ec9:	sub    eax,0x40000
   140063ece:	rex
   140063ecf:	add    BYTE PTR [rax],al
   140063ed2:	add    DWORD PTR [rax],eax
   140063ed4:	and    BYTE PTR [rax],al
   140063ed6:	sub    BYTE PTR [rax+0x0],dl
   140063ed9:	add    BYTE PTR [rip+0x808000],al        # 0x14086bedf
   140063edf:	add    BYTE PTR [rcx],al
   140063ee1:	add    BYTE PTR [rax],ah
   140063ee3:	add    BYTE PTR [rax],ch
   140063ee5:	rex add DWORD PTR [rax],eax
   140063ee8:	(bad)  
   140063ee9:	add    BYTE PTR [rax],al
   140063eeb:	add    BYTE PTR [rax],al
   140063eed:	add    BYTE PTR [rcx],al
   140063eef:	add    BYTE PTR [rax],ah
   140063ef1:	add    BYTE PTR [rdi+0x70],al
   140063ef4:	add    BYTE PTR [rax],al
   140063ef6:	(bad)  
	...
   140063f0f:	add    BYTE PTR [rax],al
   140063f11:	add    BYTE PTR [rax],ah
   140063f13:	add    BYTE PTR [rbx+0x0],dl
   140063f16:	jne    0x140063f18
   140063f18:	jo     0x140063f1a
   140063f1a:	jo     0x140063f1c
   140063f1c:	outs   dx,DWORD PTR ds:[rsi]
   140063f1d:	add    BYTE PTR [rdx+0x0],dh
   140063f20:	je     0x140063f22
   140063f22:	and    BYTE PTR [rax],al
   140063f24:	push   rbx
   140063f25:	add    BYTE PTR [rdi+0x0],ch
   140063f28:	data16 add BYTE PTR [rax+rax*1+0x77],dh
   140063f2d:	add    BYTE PTR [rcx+0x0],ah
   140063f30:	jb     0x140063f32
   140063f32:	add    BYTE PTR gs:[rax],ah
   140063f35:	add    BYTE PTR [rcx+0x0],cl
   140063f38:	outs   dx,BYTE PTR ds:[rsi]
   140063f39:	add    BYTE PTR [rbx+0x0],dh
   140063f3c:	je     0x140063f3e
   140063f3e:	(bad)  
   140063f3f:	add    BYTE PTR [rax+rax*1+0x6c],ch
   140063f43:	add    BYTE PTR [rbp+0x0],ah
   140063f46:	jb     0x140063f48
   140063f48:	and    BYTE PTR [rax],al
   140063f4a:	add    BYTE PTR [r10+0x0],r14b
   140063f4e:	jb     0x140063f50
   140063f50:	outs   dx,DWORD PTR ds:[rsi]
   140063f51:	add    BYTE PTR [rdx+0x0],dh
   140063f54:	xor    al,0x0
   140063f56:	push   rsp
   140063f57:	add    BYTE PTR [rax+0x0],ch
   140063f5a:	add    BYTE PTR gs:[rax],ah
   140063f5d:	add    BYTE PTR [rsi+0x0],ah
   140063f60:	outs   dx,DWORD PTR ds:[rsi]
   140063f61:	add    BYTE PTR [rax+rax*1+0x64],ch
   140063f65:	add    BYTE PTR [rbp+0x0],ah
   140063f68:	jb     0x140063f6a
   140063f6a:	and    BYTE PTR [rax],al
   140063f6c:	jo     0x140063f6e
   140063f6e:	jb     0x140063f70
   140063f70:	outs   dx,DWORD PTR ds:[rsi]
   140063f71:	add    BYTE PTR [rsi+0x0],dh
   140063f74:	imul   eax,DWORD PTR [rax],0x650064
   140063f7a:	add    BYTE PTR fs:[rax],ah
   140063f7d:	add    BYTE PTR [rdi+0x0],dh
   140063f80:	imul   eax,DWORD PTR [rax],0x680074
   140063f86:	and    BYTE PTR [rax],al
   140063f88:	sub    eax,0x61006d00
   140063f8d:	add    BYTE PTR [rax+rax*1+0x6c],dh
   140063f91:	add    BYTE PTR [rcx+0x0],ah
   140063f94:	(bad)  
   140063f95:	add    BYTE PTR [rdx+0x0],dh
   140063f98:	outs   dx,DWORD PTR ds:[rsi]
   140063f99:	add    BYTE PTR [rdi+0x0],ch
   140063f9c:	je     0x140063f9e
   140063f9e:	and    BYTE PTR [rax],al
   140063fa0:	add    BYTE PTR fs:[rdi+0x0],ch
   140063fa4:	add    BYTE PTR gs:[rbx+0x0],dh
   140063fa8:	and    BYTE PTR [rax],al
   140063faa:	outs   dx,BYTE PTR ds:[rsi]
   140063fab:	add    BYTE PTR [rdi+0x0],ch
   140063fae:	je     0x140063fb0
   140063fb0:	and    BYTE PTR [rax],al
   140063fb2:	add    BYTE PTR gs:[rax+0x0],bh
   140063fb6:	imul   eax,DWORD PTR [rax],0x740073
   140063fbc:	add    BYTE PTR cs:[rcx+0x0],dl
   140063fc0:	push   rsp
   140063fc1:	add    BYTE PTR [rax+0x0],ch
   140063fc4:	add    BYTE PTR gs:[rax],ah
   140063fc7:	add    BYTE PTR [rsi+0x0],ah
   140063fca:	outs   dx,DWORD PTR ds:[rsi]
   140063fcb:	add    BYTE PTR [rax+rax*1+0x64],ch
   140063fcf:	add    BYTE PTR [rbp+0x0],ah
   140063fd2:	jb     0x140063fd4
   140063fd4:	and    BYTE PTR [rax],al
   140063fd6:	jo     0x140063fd8
   140063fd8:	jb     0x140063fda
   140063fda:	outs   dx,DWORD PTR ds:[rsi]
   140063fdb:	add    BYTE PTR [rsi+0x0],dh
   140063fde:	imul   eax,DWORD PTR [rax],0x650064
   140063fe4:	add    BYTE PTR fs:[rax],ah
   140063fe7:	add    BYTE PTR [rdi+0x0],dh
   140063fea:	imul   eax,DWORD PTR [rax],0x680074
   140063ff0:	and    BYTE PTR [rax],al
   140063ff2:	sub    eax,0x61006d00
   140063ff7:	add    BYTE PTR [rax+rax*1+0x6c],dh
   140063ffb:	add    BYTE PTR [rcx+0x0],ah
   140063ffe:	(bad)  
   140063fff:	add    BYTE PTR [rdx+0x0],dh
   140064002:	outs   dx,DWORD PTR ds:[rsi]
   140064003:	add    BYTE PTR [rdi+0x0],ch
   140064006:	je     0x140064008
   140064008:	and    BYTE PTR [rax],al
   14006400a:	add    BYTE PTR fs:[rdi+0x0],ch
   14006400e:	add    BYTE PTR gs:[rbx+0x0],dh
   140064012:	and    BYTE PTR [rax],al
   140064014:	outs   dx,BYTE PTR ds:[rsi]
   140064015:	add    BYTE PTR [rdi+0x0],ch
   140064018:	je     0x14006401a
   14006401a:	and    BYTE PTR [rax],al
   14006401c:	(bad)  
   14006401d:	add    BYTE PTR [rax+0x0],dh
   140064020:	jo     0x140064022
   140064022:	add    BYTE PTR gs:[rcx+0x0],ah
   140064026:	jb     0x140064028
   140064028:	and    BYTE PTR [rax],al
   14006402a:	je     0x14006402c
   14006402c:	outs   dx,DWORD PTR ds:[rsi]
   14006402d:	add    BYTE PTR [rax],ah
   14006402f:	add    BYTE PTR [rdx+0x0],ah
   140064032:	add    BYTE PTR gs:[rax],ah
   140064035:	add    BYTE PTR [rcx+0x0],ah
   140064038:	and    BYTE PTR [rax],al
   14006403a:	jbe    0x14006403c
   14006403c:	(bad)  
   14006403d:	add    BYTE PTR [rax+rax*1+0x69],ch
   140064041:	add    BYTE PTR [rax+rax*1+0x20],ah
   140064045:	add    BYTE PTR [rbp+0x0],cl
   140064048:	add    BYTE PTR [r8+rax*1+0x4c],dl
   14006404d:	add    BYTE PTR [rcx+0x0],al
   140064050:	rex.X add BYTE PTR [rax],spl
   140064053:	add    BYTE PTR [rsi+0x0],ah
   140064056:	outs   dx,DWORD PTR ds:[rsi]
   140064057:	add    BYTE PTR [rax+rax*1+0x64],ch
   14006405b:	add    BYTE PTR [rbp+0x0],ah
   14006405e:	jb     0x140064060
   140064060:	add    BYTE PTR cs:[rax],al
   140064063:	add    BYTE PTR [rax],al
   140064065:	add    BYTE PTR [rax],al
   140064067:	add    BYTE PTR [rdx],dh
   140064069:	add    BYTE PTR [rax+rax*1+0x68],dl
   14006406d:	add    BYTE PTR [rbp+0x0],ah
   140064070:	and    BYTE PTR [rax],al
   140064072:	data16 add BYTE PTR [rdi+0x0],ch
   140064076:	ins    BYTE PTR es:[rdi],dx
   140064077:	add    BYTE PTR [rax+rax*1+0x65],ah
   14006407b:	add    BYTE PTR [rdx+0x0],dh
   14006407e:	and    BYTE PTR [rax],al
   140064080:	jo     0x140064082
   140064082:	jb     0x140064084
   140064084:	outs   dx,DWORD PTR ds:[rsi]
   140064085:	add    BYTE PTR [rsi+0x0],dh
   140064088:	imul   eax,DWORD PTR [rax],0x650064
   14006408e:	add    BYTE PTR fs:[rax],ah
   140064091:	add    BYTE PTR [rdi+0x0],dh
   140064094:	imul   eax,DWORD PTR [rax],0x680074
   14006409a:	and    BYTE PTR [rax],al
   14006409c:	sub    eax,0x72006100
   1400640a1:	add    BYTE PTR [rbx+0x0],ah
   1400640a4:	push   0x76006900
   1400640a9:	add    BYTE PTR [rbp+0x0],ah
   1400640ac:	jae    0x1400640ae
   1400640ae:	and    BYTE PTR [rax],al
   1400640b0:	add    BYTE PTR fs:[rdi+0x0],ch
   1400640b4:	add    BYTE PTR gs:[rbx+0x0],dh
   1400640b8:	and    BYTE PTR [rax],al
   1400640ba:	outs   dx,BYTE PTR ds:[rsi]
   1400640bb:	add    BYTE PTR [rdi+0x0],ch
   1400640be:	je     0x1400640c0
   1400640c0:	and    BYTE PTR [rax],al
   1400640c2:	add    BYTE PTR gs:[rax+0x0],bh
   1400640c6:	imul   eax,DWORD PTR [rax],0x740073
   1400640cc:	add    BYTE PTR cs:[rbx+0x0],bl
   1400640d0:	push   rbx
   1400640d1:	add    BYTE PTR [rcx+0x0],bh
   1400640d4:	jae    0x1400640d6
   1400640d6:	je     0x1400640d8
   1400640d8:	add    BYTE PTR gs:[rbp+0x0],ch
   1400640dc:	and    BYTE PTR [rax],al
   1400640de:	add    BYTE PTR fs:[rdi+0x0],ch
   1400640e2:	add    BYTE PTR gs:[rbx+0x0],dh
   1400640e6:	and    BYTE PTR [rax],al
   1400640e8:	outs   dx,BYTE PTR ds:[rsi]
   1400640e9:	add    BYTE PTR [rdi+0x0],ch
   1400640ec:	je     0x1400640ee
   1400640ee:	and    BYTE PTR [rax],al
   1400640f0:	push   0x76006100
   1400640f5:	add    BYTE PTR [rbp+0x0],ah
   1400640f8:	and    BYTE PTR [rax],al
   1400640fa:	je     0x1400640fc
   1400640fc:	push   0x20006500
   140064101:	add    BYTE PTR [rdx+0x0],dh
   140064104:	add    BYTE PTR gs:[rcx+0x0],dh
   140064108:	jne    0x14006410a
   14006410a:	imul   eax,DWORD PTR [rax],0x650072
   140064110:	add    BYTE PTR fs:[rax],ah
   140064113:	add    BYTE PTR [rbp+0x0],cl
   140064116:	add    BYTE PTR [r8+rax*1+0x4c],dl
   14006411b:	add    BYTE PTR [rcx+0x0],al
   14006411e:	rex.X add BYTE PTR [rax],spl
   140064121:	add    BYTE PTR [rsi+0x0],dh
   140064124:	add    BYTE PTR gs:[rdx+0x0],dh
   140064128:	jae    0x14006412a
   14006412a:	imul   eax,DWORD PTR [rax],0x6e006f
   140064130:	and    BYTE PTR [rax],al
   140064132:	je     0x140064134
   140064134:	outs   dx,DWORD PTR ds:[rsi]
   140064135:	add    BYTE PTR [rax],ah
   140064137:	add    BYTE PTR [rbx+0x0],dh
   14006413a:	je     0x14006413c
   14006413c:	(bad)  
   14006413d:	add    BYTE PTR [rdx+0x0],dh
   140064140:	je     0x140064142
   140064142:	and    BYTE PTR [rax],al
   140064144:	je     0x140064146
   140064146:	push   0x20006500
   14006414b:	add    BYTE PTR [rbx+0x0],dh
   14006414e:	jne    0x140064150
   140064150:	jo     0x140064152
   140064152:	jo     0x140064154
   140064154:	outs   dx,DWORD PTR ds:[rsi]
   140064155:	add    BYTE PTR [rdx+0x0],dh
   140064158:	je     0x14006415a
   14006415a:	and    BYTE PTR [rax],al
   14006415c:	jo     0x14006415e
   14006415e:	(bad)  
   14006415f:	add    BYTE PTR [rbx+0x0],ah
   140064162:	imul   eax,DWORD PTR [rax],0x61
   140064165:	add    BYTE PTR [rdi+0x0],ah
   140064168:	add    BYTE PTR gs:[rax],ah
   14006416b:	add    BYTE PTR [rcx+0x0],ch
   14006416e:	outs   dx,BYTE PTR ds:[rsi]
   14006416f:	add    BYTE PTR [rbx+0x0],dh
   140064172:	je     0x140064174
   140064174:	(bad)  
   140064175:	add    BYTE PTR [rax+rax*1+0x6c],ch
   140064179:	add    BYTE PTR [rcx+0x0],ah
   14006417c:	je     0x14006417e
   14006417e:	imul   eax,DWORD PTR [rax],0x6e006f
   140064184:	add    BYTE PTR cs:[rip+0x72004500],dh        # 0x1b206868b
   14006418b:	add    BYTE PTR [rdx+0x0],dh
   14006418e:	outs   dx,DWORD PTR ds:[rsi]
   14006418f:	add    BYTE PTR [rdx+0x0],dh
   140064192:	and    BYTE PTR [rax],al
   140064194:	outs   dx,DWORD PTR ds:[rsi]
   140064195:	add    BYTE PTR [rbx+0x0],ah
   140064198:	movsxd eax,DWORD PTR [rax]
   14006419a:	jne    0x14006419c
   14006419c:	jb     0x14006419e
   14006419e:	jb     0x1400641a0
   1400641a0:	add    BYTE PTR gs:[rax+rax*1+0x20],ah
   1400641a5:	add    BYTE PTR [rdi+0x0],dh
   1400641a8:	push   0x6c006900
   1400641ad:	add    BYTE PTR [rbp+0x0],ah
   1400641b0:	and    BYTE PTR [rax],al
   1400641b2:	add    BYTE PTR [ebp+0x0],ah
   1400641b6:	je     0x1400641b8
   1400641b8:	je     0x1400641ba
   1400641ba:	imul   eax,DWORD PTR [rax],0x67006e
   1400641c0:	and    BYTE PTR [rax],al
   1400641c2:	add    BYTE PTR fs:[rbp+0x0],ah
   1400641c6:	data16 add BYTE PTR [rcx+0x0],ah
   1400641ca:	jne    0x1400641cc
   1400641cc:	ins    BYTE PTR es:[rdi],dx
   1400641cd:	add    BYTE PTR [rax+rax*1+0x20],dh
   1400641d1:	add    BYTE PTR [rcx+0x0],ah
   1400641d4:	jb     0x1400641d6
   1400641d6:	movsxd eax,DWORD PTR [rax]
   1400641d8:	push   0x76006900
   1400641dd:	add    BYTE PTR [rbp+0x0],ah
   1400641e0:	jae    0x1400641e2
   1400641e2:	and    BYTE PTR [rax],al
   1400641e4:	data16 add BYTE PTR [rdi+0x0],ch
   1400641e8:	ins    BYTE PTR es:[rdi],dx
   1400641e9:	add    BYTE PTR [rax+rax*1+0x65],ah
   1400641ed:	add    BYTE PTR [rdx+0x0],dh
   1400641f0:	add    BYTE PTR cs:[rip+0x72004500],ah        # 0x1b20686f7
   1400641f7:	add    BYTE PTR [rdx+0x0],dh
   1400641fa:	outs   dx,DWORD PTR ds:[rsi]
   1400641fb:	add    BYTE PTR [rdx+0x0],dh
   1400641fe:	and    BYTE PTR [rax],al
   140064200:	outs   dx,DWORD PTR ds:[rsi]
   140064201:	add    BYTE PTR [rbx+0x0],ah
   140064204:	movsxd eax,DWORD PTR [rax]
   140064206:	jne    0x140064208
   140064208:	jb     0x14006420a
   14006420a:	jb     0x14006420c
   14006420c:	add    BYTE PTR gs:[rax+rax*1+0x20],ah
   140064211:	add    BYTE PTR [rdi+0x0],dh
   140064214:	push   0x6c006900
   140064219:	add    BYTE PTR [rbp+0x0],ah
   14006421c:	and    BYTE PTR [rax],al
   14006421e:	jae    0x140064220
   140064220:	je     0x140064222
   140064222:	(bad)  
   140064223:	add    BYTE PTR [rdx+0x0],dh
   140064226:	je     0x140064228
   140064228:	imul   eax,DWORD PTR [rax],0x67006e
   14006422e:	and    BYTE PTR [rax],al
   140064230:	rex.WRB add BYTE PTR [r9+0x0],r8b
   140064234:	push   rsp
   140064235:	add    BYTE PTR [rax+rax*1+0x41],cl
   140064239:	add    BYTE PTR [rdx+0x0],al
   14006423c:	add    BYTE PTR cs:[rax],al
	...
   14006426f:	add    BYTE PTR [rax],al
   140064271:	add    BYTE PTR [rax],ah
   140064273:	add    BYTE PTR [rbx+0x0],dl
   140064276:	jne    0x140064278
   140064278:	jo     0x14006427a
   14006427a:	jo     0x14006427c
   14006427c:	outs   dx,DWORD PTR ds:[rsi]
   14006427d:	add    BYTE PTR [rdx+0x0],dh
   140064280:	je     0x140064282
   140064282:	and    BYTE PTR [rax],al
   140064284:	push   rbx
   140064285:	add    BYTE PTR [rdi+0x0],ch
   140064288:	data16 add BYTE PTR [rax+rax*1+0x77],dh
   14006428d:	add    BYTE PTR [rcx+0x0],ah
   140064290:	jb     0x140064292
   140064292:	add    BYTE PTR gs:[rax],ah
   140064295:	add    BYTE PTR [rcx+0x0],cl
   140064298:	outs   dx,BYTE PTR ds:[rsi]
   140064299:	add    BYTE PTR [rbx+0x0],dh
   14006429c:	je     0x14006429e
   14006429e:	(bad)  
   14006429f:	add    BYTE PTR [rax+rax*1+0x6c],ch
   1400642a3:	add    BYTE PTR [rbp+0x0],ah
   1400642a6:	jb     0x1400642a8
   1400642a8:	and    BYTE PTR [rax],al
   1400642aa:	add    BYTE PTR [r10+0x0],r14b
   1400642ae:	jb     0x1400642b0
   1400642b0:	outs   dx,DWORD PTR ds:[rsi]
   1400642b1:	add    BYTE PTR [rdx+0x0],dh
   1400642b4:	xor    al,0x0
   1400642b6:	push   rsp
   1400642b7:	add    BYTE PTR [rax+0x0],ch
   1400642ba:	add    BYTE PTR gs:[rax],ah
   1400642bd:	add    BYTE PTR [rsi+0x0],ah
   1400642c0:	outs   dx,DWORD PTR ds:[rsi]
   1400642c1:	add    BYTE PTR [rax+rax*1+0x64],ch
   1400642c5:	add    BYTE PTR [rbp+0x0],ah
   1400642c8:	jb     0x1400642ca
   1400642ca:	and    BYTE PTR [rax],al
   1400642cc:	jo     0x1400642ce
   1400642ce:	jb     0x1400642d0
   1400642d0:	outs   dx,DWORD PTR ds:[rsi]
   1400642d1:	add    BYTE PTR [rsi+0x0],dh
   1400642d4:	imul   eax,DWORD PTR [rax],0x650064
   1400642da:	add    BYTE PTR fs:[rax],ah
   1400642dd:	add    BYTE PTR [rdi+0x0],dh
   1400642e0:	imul   eax,DWORD PTR [rax],0x680074
   1400642e6:	and    BYTE PTR [rax],al
   1400642e8:	sub    eax,0x61006d00
   1400642ed:	add    BYTE PTR [rax+rax*1+0x6c],dh
   1400642f1:	add    BYTE PTR [rcx+0x0],ah
   1400642f4:	(bad)  
   1400642f5:	add    BYTE PTR [rdx+0x0],dh
   1400642f8:	outs   dx,DWORD PTR ds:[rsi]
   1400642f9:	add    BYTE PTR [rdi+0x0],ch
   1400642fc:	je     0x1400642fe
   1400642fe:	and    BYTE PTR [rax],al
   140064300:	add    BYTE PTR fs:[rdi+0x0],ch
   140064304:	add    BYTE PTR gs:[rbx+0x0],dh
   140064308:	and    BYTE PTR [rax],al
   14006430a:	outs   dx,BYTE PTR ds:[rsi]
   14006430b:	add    BYTE PTR [rdi+0x0],ch
   14006430e:	je     0x140064310
   140064310:	and    BYTE PTR [rax],al
   140064312:	add    BYTE PTR gs:[rax+0x0],bh
   140064316:	imul   eax,DWORD PTR [rax],0x740073
   14006431c:	add    BYTE PTR cs:[rcx+0x0],dl
   140064320:	push   rsp
   140064321:	add    BYTE PTR [rax+0x0],ch
   140064324:	add    BYTE PTR gs:[rax],ah
   140064327:	add    BYTE PTR [rsi+0x0],ah
   14006432a:	outs   dx,DWORD PTR ds:[rsi]
   14006432b:	add    BYTE PTR [rax+rax*1+0x64],ch
   14006432f:	add    BYTE PTR [rbp+0x0],ah
   140064332:	jb     0x140064334
   140064334:	and    BYTE PTR [rax],al
   140064336:	jo     0x140064338
   140064338:	jb     0x14006433a
   14006433a:	outs   dx,DWORD PTR ds:[rsi]
   14006433b:	add    BYTE PTR [rsi+0x0],dh
   14006433e:	imul   eax,DWORD PTR [rax],0x650064
   140064344:	add    BYTE PTR fs:[rax],ah
   140064347:	add    BYTE PTR [rdi+0x0],dh
   14006434a:	imul   eax,DWORD PTR [rax],0x680074
   140064350:	and    BYTE PTR [rax],al
   140064352:	sub    eax,0x61006d00
   140064357:	add    BYTE PTR [rax+rax*1+0x6c],dh
   14006435b:	add    BYTE PTR [rcx+0x0],ah
   14006435e:	(bad)  
   14006435f:	add    BYTE PTR [rdx+0x0],dh
   140064362:	outs   dx,DWORD PTR ds:[rsi]
   140064363:	add    BYTE PTR [rdi+0x0],ch
   140064366:	je     0x140064368
   140064368:	and    BYTE PTR [rax],al
   14006436a:	add    BYTE PTR fs:[rdi+0x0],ch
   14006436e:	add    BYTE PTR gs:[rbx+0x0],dh
   140064372:	and    BYTE PTR [rax],al
   140064374:	outs   dx,BYTE PTR ds:[rsi]
   140064375:	add    BYTE PTR [rdi+0x0],ch
   140064378:	je     0x14006437a
   14006437a:	and    BYTE PTR [rax],al
   14006437c:	(bad)  
   14006437d:	add    BYTE PTR [rax+0x0],dh
   140064380:	jo     0x140064382
   140064382:	add    BYTE PTR gs:[rcx+0x0],ah
   140064386:	jb     0x140064388
   140064388:	and    BYTE PTR [rax],al
   14006438a:	je     0x14006438c
   14006438c:	outs   dx,DWORD PTR ds:[rsi]
   14006438d:	add    BYTE PTR [rax],ah
   14006438f:	add    BYTE PTR [rdx+0x0],ah
   140064392:	add    BYTE PTR gs:[rax],ah
   140064395:	add    BYTE PTR [rcx+0x0],ah
   140064398:	and    BYTE PTR [rax],al
   14006439a:	jbe    0x14006439c
   14006439c:	(bad)  
   14006439d:	add    BYTE PTR [rax+rax*1+0x69],ch
   1400643a1:	add    BYTE PTR [rax+rax*1+0x20],ah
   1400643a5:	add    BYTE PTR [rbp+0x0],cl
   1400643a8:	add    BYTE PTR [r8+rax*1+0x4c],dl
   1400643ad:	add    BYTE PTR [rcx+0x0],al
   1400643b0:	rex.X add BYTE PTR [rax],spl
   1400643b3:	add    BYTE PTR [rsi+0x0],ah
   1400643b6:	outs   dx,DWORD PTR ds:[rsi]
   1400643b7:	add    BYTE PTR [rax+rax*1+0x64],ch
   1400643bb:	add    BYTE PTR [rbp+0x0],ah
   1400643be:	jb     0x1400643c0
   1400643c0:	add    BYTE PTR cs:[rax],al
   1400643c3:	add    BYTE PTR [rax],al
   1400643c5:	add    BYTE PTR [rax],al
   1400643c7:	add    BYTE PTR [rdx],dh
   1400643c9:	add    BYTE PTR [rax+rax*1+0x68],dl
   1400643cd:	add    BYTE PTR [rbp+0x0],ah
   1400643d0:	and    BYTE PTR [rax],al
   1400643d2:	data16 add BYTE PTR [rdi+0x0],ch
   1400643d6:	ins    BYTE PTR es:[rdi],dx
   1400643d7:	add    BYTE PTR [rax+rax*1+0x65],ah
   1400643db:	add    BYTE PTR [rdx+0x0],dh
   1400643de:	and    BYTE PTR [rax],al
   1400643e0:	jo     0x1400643e2
   1400643e2:	jb     0x1400643e4
   1400643e4:	outs   dx,DWORD PTR ds:[rsi]
   1400643e5:	add    BYTE PTR [rsi+0x0],dh
   1400643e8:	imul   eax,DWORD PTR [rax],0x650064
   1400643ee:	add    BYTE PTR fs:[rax],ah
   1400643f1:	add    BYTE PTR [rdi+0x0],dh
   1400643f4:	imul   eax,DWORD PTR [rax],0x680074
   1400643fa:	and    BYTE PTR [rax],al
   1400643fc:	sub    eax,0x72006100
   140064401:	add    BYTE PTR [rbx+0x0],ah
   140064404:	push   0x76006900
   140064409:	add    BYTE PTR [rbp+0x0],ah
   14006440c:	jae    0x14006440e
   14006440e:	and    BYTE PTR [rax],al
   140064410:	add    BYTE PTR fs:[rdi+0x0],ch
   140064414:	add    BYTE PTR gs:[rbx+0x0],dh
   140064418:	and    BYTE PTR [rax],al
   14006441a:	outs   dx,BYTE PTR ds:[rsi]
   14006441b:	add    BYTE PTR [rdi+0x0],ch
   14006441e:	je     0x140064420
   140064420:	and    BYTE PTR [rax],al
   140064422:	add    BYTE PTR gs:[rax+0x0],bh
   140064426:	imul   eax,DWORD PTR [rax],0x740073
   14006442c:	add    BYTE PTR cs:[rbx+0x0],bl
   140064430:	push   rbx
   140064431:	add    BYTE PTR [rcx+0x0],bh
   140064434:	jae    0x140064436
   140064436:	je     0x140064438
   140064438:	add    BYTE PTR gs:[rbp+0x0],ch
   14006443c:	and    BYTE PTR [rax],al
   14006443e:	add    BYTE PTR fs:[rdi+0x0],ch
   140064442:	add    BYTE PTR gs:[rbx+0x0],dh
   140064446:	and    BYTE PTR [rax],al
   140064448:	outs   dx,BYTE PTR ds:[rsi]
   140064449:	add    BYTE PTR [rdi+0x0],ch
   14006444c:	je     0x14006444e
   14006444e:	and    BYTE PTR [rax],al
   140064450:	push   0x76006100
   140064455:	add    BYTE PTR [rbp+0x0],ah
   140064458:	and    BYTE PTR [rax],al
   14006445a:	je     0x14006445c
   14006445c:	push   0x20006500
   140064461:	add    BYTE PTR [rdx+0x0],dh
   140064464:	add    BYTE PTR gs:[rcx+0x0],dh
   140064468:	jne    0x14006446a
   14006446a:	imul   eax,DWORD PTR [rax],0x650072
   140064470:	add    BYTE PTR fs:[rax],ah
   140064473:	add    BYTE PTR [rbp+0x0],cl
   140064476:	add    BYTE PTR [r8+rax*1+0x4c],dl
   14006447b:	add    BYTE PTR [rcx+0x0],al
   14006447e:	rex.X add BYTE PTR [rax],spl
   140064481:	add    BYTE PTR [rsi+0x0],dh
   140064484:	add    BYTE PTR gs:[rdx+0x0],dh
   140064488:	jae    0x14006448a
   14006448a:	imul   eax,DWORD PTR [rax],0x6e006f
   140064490:	and    BYTE PTR [rax],al
   140064492:	je     0x140064494
   140064494:	outs   dx,DWORD PTR ds:[rsi]
   140064495:	add    BYTE PTR [rax],ah
   140064497:	add    BYTE PTR [rbx+0x0],dh
   14006449a:	je     0x14006449c
   14006449c:	(bad)  
   14006449d:	add    BYTE PTR [rdx+0x0],dh
   1400644a0:	je     0x1400644a2
   1400644a2:	and    BYTE PTR [rax],al
   1400644a4:	je     0x1400644a6
   1400644a6:	push   0x20006500
   1400644ab:	add    BYTE PTR [rbx+0x0],dh
   1400644ae:	jne    0x1400644b0
   1400644b0:	jo     0x1400644b2
   1400644b2:	jo     0x1400644b4
   1400644b4:	outs   dx,DWORD PTR ds:[rsi]
   1400644b5:	add    BYTE PTR [rdx+0x0],dh
   1400644b8:	je     0x1400644ba
   1400644ba:	and    BYTE PTR [rax],al
   1400644bc:	jo     0x1400644be
   1400644be:	(bad)  
   1400644bf:	add    BYTE PTR [rbx+0x0],ah
   1400644c2:	imul   eax,DWORD PTR [rax],0x61
   1400644c5:	add    BYTE PTR [rdi+0x0],ah
   1400644c8:	add    BYTE PTR gs:[rax],ah
   1400644cb:	add    BYTE PTR [rcx+0x0],ch
   1400644ce:	outs   dx,BYTE PTR ds:[rsi]
   1400644cf:	add    BYTE PTR [rbx+0x0],dh
   1400644d2:	je     0x1400644d4
   1400644d4:	(bad)  
   1400644d5:	add    BYTE PTR [rax+rax*1+0x6c],ch
   1400644d9:	add    BYTE PTR [rcx+0x0],ah
   1400644dc:	je     0x1400644de
   1400644de:	imul   eax,DWORD PTR [rax],0x6e006f
   1400644e4:	add    BYTE PTR cs:[rip+0x72004500],dh        # 0x1b20689eb
   1400644eb:	add    BYTE PTR [rdx+0x0],dh
   1400644ee:	outs   dx,DWORD PTR ds:[rsi]
   1400644ef:	add    BYTE PTR [rdx+0x0],dh
   1400644f2:	and    BYTE PTR [rax],al
   1400644f4:	outs   dx,DWORD PTR ds:[rsi]
   1400644f5:	add    BYTE PTR [rbx+0x0],ah
   1400644f8:	movsxd eax,DWORD PTR [rax]
   1400644fa:	jne    0x1400644fc
   1400644fc:	jb     0x1400644fe
   1400644fe:	jb     0x140064500
   140064500:	add    BYTE PTR gs:[rax+rax*1+0x20],ah
   140064505:	add    BYTE PTR [rdi+0x0],dh
   140064508:	push   0x6c006900
   14006450d:	add    BYTE PTR [rbp+0x0],ah
   140064510:	and    BYTE PTR [rax],al
   140064512:	add    BYTE PTR [ebp+0x0],ah
   140064516:	je     0x140064518
   140064518:	je     0x14006451a
   14006451a:	imul   eax,DWORD PTR [rax],0x67006e
   140064520:	and    BYTE PTR [rax],al
   140064522:	add    BYTE PTR fs:[rbp+0x0],ah
   140064526:	data16 add BYTE PTR [rcx+0x0],ah
   14006452a:	jne    0x14006452c
   14006452c:	ins    BYTE PTR es:[rdi],dx
   14006452d:	add    BYTE PTR [rax+rax*1+0x20],dh
   140064531:	add    BYTE PTR [rcx+0x0],ah
   140064534:	jb     0x140064536
   140064536:	movsxd eax,DWORD PTR [rax]
   140064538:	push   0x76006900
   14006453d:	add    BYTE PTR [rbp+0x0],ah
   140064540:	jae    0x140064542
   140064542:	and    BYTE PTR [rax],al
   140064544:	data16 add BYTE PTR [rdi+0x0],ch
   140064548:	ins    BYTE PTR es:[rdi],dx
   140064549:	add    BYTE PTR [rax+rax*1+0x65],ah
   14006454d:	add    BYTE PTR [rdx+0x0],dh
   140064550:	add    BYTE PTR cs:[rip+0x72004500],ah        # 0x1b2068a57
   140064557:	add    BYTE PTR [rdx+0x0],dh
   14006455a:	outs   dx,DWORD PTR ds:[rsi]
   14006455b:	add    BYTE PTR [rdx+0x0],dh
   14006455e:	and    BYTE PTR [rax],al
   140064560:	outs   dx,DWORD PTR ds:[rsi]
   140064561:	add    BYTE PTR [rbx+0x0],ah
   140064564:	movsxd eax,DWORD PTR [rax]
   140064566:	jne    0x140064568
   140064568:	jb     0x14006456a
   14006456a:	jb     0x14006456c
   14006456c:	add    BYTE PTR gs:[rax+rax*1+0x20],ah
   140064571:	add    BYTE PTR [rdi+0x0],dh
   140064574:	push   0x6c006900
   140064579:	add    BYTE PTR [rbp+0x0],ah
   14006457c:	and    BYTE PTR [rax],al
   14006457e:	jae    0x140064580
   140064580:	je     0x140064582
   140064582:	(bad)  
   140064583:	add    BYTE PTR [rdx+0x0],dh
   140064586:	je     0x140064588
   140064588:	imul   eax,DWORD PTR [rax],0x67006e
   14006458e:	and    BYTE PTR [rax],al
   140064590:	rex.WRB add BYTE PTR [r9+0x0],r8b
   140064594:	push   rsp
   140064595:	add    BYTE PTR [rax+rax*1+0x41],cl
   140064599:	add    BYTE PTR [rdx+0x0],al
   14006459c:	add    BYTE PTR cs:[rax],al
	...
