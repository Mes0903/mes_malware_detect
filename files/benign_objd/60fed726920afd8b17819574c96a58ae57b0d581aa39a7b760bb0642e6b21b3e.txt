
60fed726920afd8b17819574c96a58ae57b0d581aa39a7b760bb0642e6b21b3e.exe:     file format pei-x86-64


Disassembly of section .text:

0000000140001000 <.text>:
   140001000:	lea    rcx,[rip+0x25a19]        # 0x140026a20
   140001007:	jmp    0x1400056a0
   14000100c:	int3   
   14000100d:	int3   
   14000100e:	int3   
   14000100f:	int3   
   140001010:	lea    rcx,[rip+0x25a19]        # 0x140026a30
   140001017:	jmp    0x1400056a0
   14000101c:	int3   
   14000101d:	int3   
   14000101e:	int3   
   14000101f:	int3   
   140001020:	lea    rcx,[rip+0x25a19]        # 0x140026a40
   140001027:	jmp    0x1400056a0
   14000102c:	int3   
   14000102d:	int3   
   14000102e:	int3   
   14000102f:	int3   
   140001030:	lea    rcx,[rip+0x25a19]        # 0x140026a50
   140001037:	jmp    0x1400056a0
   14000103c:	int3   
   14000103d:	int3   
   14000103e:	int3   
   14000103f:	int3   
   140001040:	lea    rcx,[rip+0x25a79]        # 0x140026ac0
   140001047:	jmp    0x1400056a0
   14000104c:	int3   
   14000104d:	int3   
   14000104e:	int3   
   14000104f:	int3   
   140001050:	sub    rsp,0x28
   140001054:	lea    rdx,[rip+0x265d5]        # 0x140027630
   14000105b:	lea    rcx,[rip+0x35036]        # 0x140036098
   140001062:	mov    r8d,0x2d
   140001068:	call   0x140002af0
   14000106d:	lea    rcx,[rip+0x25abc]        # 0x140026b30
   140001074:	add    rsp,0x28
   140001078:	jmp    0x1400056a0
   14000107d:	int3   
   14000107e:	int3   
   14000107f:	int3   
   140001080:	lea    rcx,[rip+0x25b19]        # 0x140026ba0
   140001087:	jmp    0x1400056a0
   14000108c:	int3   
   14000108d:	int3   
   14000108e:	int3   
   14000108f:	int3   
   140001090:	lea    rcx,[rip+0x25b79]        # 0x140026c10
   140001097:	jmp    0x1400056a0
   14000109c:	lea    rcx,[rip+0x25bd9]        # 0x140026c7c
   1400010a3:	jmp    0x1400056a0
   1400010a8:	lea    rcx,[rip+0x25bdd]        # 0x140026c8c
   1400010af:	jmp    0x1400056a0
   1400010b4:	lea    rcx,[rip+0x25be1]        # 0x140026c9c
   1400010bb:	jmp    0x1400056a0
   1400010c0:	lea    rcx,[rip+0x25be5]        # 0x140026cac
   1400010c7:	jmp    0x1400056a0
   1400010cc:	lea    rcx,[rip+0x25be9]        # 0x140026cbc
   1400010d3:	jmp    0x1400056a0
   1400010d8:	lea    rcx,[rip+0x25bed]        # 0x140026ccc
   1400010df:	jmp    0x1400056a0
   1400010e4:	int3   
   1400010e5:	int3   
   1400010e6:	int3   
   1400010e7:	int3   
   1400010e8:	int3   
   1400010e9:	int3   
   1400010ea:	int3   
   1400010eb:	int3   
   1400010ec:	int3   
   1400010ed:	int3   
   1400010ee:	int3   
   1400010ef:	int3   
   1400010f0:	rex push rbx
   1400010f2:	sub    rsp,0x20
   1400010f6:	movzx  r9d,BYTE PTR [rsp+0x30]
   1400010fc:	xor    eax,eax
   1400010fe:	mov    QWORD PTR [rcx+0x18],0x7
   140001106:	mov    QWORD PTR [rcx+0x10],rax
   14000110a:	mov    rbx,rcx
   14000110d:	mov    WORD PTR [rcx],ax
   140001110:	call   0x1400012a0
   140001115:	mov    rax,rbx
   140001118:	add    rsp,0x20
   14000111c:	pop    rbx
   14000111d:	ret    
   14000111e:	int3   
   14000111f:	int3   
   140001120:	mov    al,0x1
   140001122:	ret    
   140001123:	int3   
   140001124:	int3   
   140001125:	int3   
   140001126:	int3   
   140001127:	int3   
   140001128:	int3   
   140001129:	int3   
   14000112a:	int3   
   14000112b:	int3   
   14000112c:	int3   
   14000112d:	int3   
   14000112e:	int3   
   14000112f:	int3   
   140001130:	mov    al,0x1
   140001132:	ret    
   140001133:	int3   
   140001134:	int3   
   140001135:	int3   
   140001136:	int3   
   140001137:	int3   
   140001138:	int3   
   140001139:	int3   
   14000113a:	int3   
   14000113b:	int3   
   14000113c:	int3   
   14000113d:	int3   
   14000113e:	int3   
   14000113f:	int3   
   140001140:	xor    al,al
   140001142:	ret    
   140001143:	int3   
   140001144:	int3   
   140001145:	int3   
   140001146:	int3   
   140001147:	int3   
   140001148:	int3   
   140001149:	int3   
   14000114a:	int3   
   14000114b:	int3   
   14000114c:	int3   
   14000114d:	int3   
   14000114e:	int3   
   14000114f:	int3   
   140001150:	mov    QWORD PTR [rsp+0x8],rbx
   140001155:	push   rdi
   140001156:	sub    rsp,0x30
   14000115a:	xor    edi,edi
   14000115c:	mov    rax,r8
   14000115f:	mov    r9,rdx
   140001162:	mov    rbx,rcx
   140001165:	mov    DWORD PTR [rsp+0x20],edi
   140001169:	cmp    WORD PTR [r8],di
   14000116d:	jne    0x140001174
   14000116f:	mov    r8d,edi
   140001172:	jmp    0x14000118a
   140001174:	or     r8,0xffffffffffffffff
   140001178:	nop    DWORD PTR [rax+rax*1+0x0]
   140001180:	inc    r8
   140001183:	cmp    WORD PTR [rax+r8*2],di
   140001188:	jne    0x140001180
   14000118a:	mov    rdx,rax
   14000118d:	mov    rcx,r9
   140001190:	call   0x140002440
   140001195:	mov    QWORD PTR [rbx+0x18],0x7
   14000119d:	mov    QWORD PTR [rbx+0x10],rdi
   1400011a1:	mov    rcx,rbx
   1400011a4:	mov    rdx,rax
   1400011a7:	mov    WORD PTR [rbx],di
   1400011aa:	call   0x140001aa0
   1400011af:	mov    rax,rbx
   1400011b2:	mov    rbx,QWORD PTR [rsp+0x40]
   1400011b7:	add    rsp,0x30
   1400011bb:	pop    rdi
   1400011bc:	ret    
   1400011bd:	int3   
   1400011be:	int3   
   1400011bf:	int3   
   1400011c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400011c5:	push   rdi
   1400011c6:	sub    rsp,0x30
   1400011ca:	xor    edi,edi
   1400011cc:	mov    rax,r8
   1400011cf:	mov    rbx,rcx
   1400011d2:	mov    DWORD PTR [rsp+0x20],edi
   1400011d6:	cmp    WORD PTR [rdx],di
   1400011d9:	jne    0x1400011e0
   1400011db:	mov    r9d,edi
   1400011de:	jmp    0x1400011ee
   1400011e0:	or     r9,0xffffffffffffffff
   1400011e4:	inc    r9
   1400011e7:	cmp    WORD PTR [rdx+r9*2],di
   1400011ec:	jne    0x1400011e4
   1400011ee:	mov    r8,rdx
   1400011f1:	mov    rcx,rax
   1400011f4:	xor    edx,edx
   1400011f6:	call   0x140003b30
   1400011fb:	mov    QWORD PTR [rbx+0x18],0x7
   140001203:	mov    QWORD PTR [rbx+0x10],rdi
   140001207:	mov    rcx,rbx
   14000120a:	mov    rdx,rax
   14000120d:	mov    WORD PTR [rbx],di
   140001210:	call   0x140001aa0
   140001215:	mov    rax,rbx
   140001218:	mov    rbx,QWORD PTR [rsp+0x40]
   14000121d:	add    rsp,0x30
   140001221:	pop    rdi
   140001222:	ret    
   140001223:	int3   
   140001224:	int3   
   140001225:	int3   
   140001226:	int3   
   140001227:	int3   
   140001228:	int3   
   140001229:	int3   
   14000122a:	int3   
   14000122b:	int3   
   14000122c:	int3   
   14000122d:	int3   
   14000122e:	int3   
   14000122f:	int3   
   140001230:	sub    rsp,0x28
   140001234:	xor    eax,eax
   140001236:	test   rcx,rcx
   140001239:	je     0x14000124b
   14000123b:	cmp    rcx,0xffffffffffffffff
   14000123f:	ja     0x140001250
   140001241:	call   0x1400053e8
   140001246:	test   rax,rax
   140001249:	je     0x140001250
   14000124b:	add    rsp,0x28
   14000124f:	ret    
   140001250:	call   0x14000514c
   140001255:	int3   
   140001256:	int3   
   140001257:	int3   
   140001258:	int3   
   140001259:	int3   
   14000125a:	int3   
   14000125b:	int3   
   14000125c:	int3   
   14000125d:	int3   
   14000125e:	int3   
   14000125f:	int3   
   140001260:	sub    rsp,0x28
   140001264:	xor    eax,eax
   140001266:	test   rcx,rcx
   140001269:	je     0x140001287
   14000126b:	movabs rax,0x7fffffffffffffff
   140001275:	cmp    rcx,rax
   140001278:	ja     0x14000128c
   14000127a:	add    rcx,rcx
   14000127d:	call   0x1400053e8
   140001282:	test   rax,rax
   140001285:	je     0x14000128c
   140001287:	add    rsp,0x28
   14000128b:	ret    
   14000128c:	call   0x14000514c
   140001291:	int3   
   140001292:	int3   
   140001293:	int3   
   140001294:	int3   
   140001295:	int3   
   140001296:	int3   
   140001297:	int3   
   140001298:	int3   
   140001299:	int3   
   14000129a:	int3   
   14000129b:	int3   
   14000129c:	int3   
   14000129d:	int3   
   14000129e:	int3   
   14000129f:	int3   
   1400012a0:	mov    QWORD PTR [rsp+0x8],rcx
   1400012a5:	push   rdi
   1400012a6:	push   r12
   1400012a8:	push   r13
   1400012aa:	push   r14
   1400012ac:	push   r15
   1400012ae:	sub    rsp,0x30
   1400012b2:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400012bb:	mov    QWORD PTR [rsp+0x68],rbx
   1400012c0:	mov    QWORD PTR [rsp+0x70],rsi
   1400012c5:	mov    r12,r8
   1400012c8:	mov    rsi,rdx
   1400012cb:	mov    rbx,rcx
   1400012ce:	mov    rdx,r8
   1400012d1:	sub    rdx,rsi
   1400012d4:	sar    rdx,1
   1400012d7:	mov    rdi,QWORD PTR [rcx+0x10]
   1400012db:	cmp    rdi,rdx
   1400012de:	ja     0x14000130f
   1400012e0:	cmp    QWORD PTR [rcx+0x18],rdx
   1400012e4:	je     0x14000130f
   1400012e6:	mov    r8b,0x1
   1400012e9:	call   0x140001ee0
   1400012ee:	test   al,al
   1400012f0:	je     0x14000130f
   1400012f2:	mov    QWORD PTR [rbx+0x10],rdi
   1400012f6:	cmp    QWORD PTR [rbx+0x18],0x8
   1400012fb:	jb     0x140001302
   1400012fd:	mov    rax,QWORD PTR [rbx]
   140001300:	jmp    0x140001305
   140001302:	mov    rax,rbx
   140001305:	xor    r14d,r14d
   140001308:	mov    WORD PTR [rax+rdi*2],r14w
   14000130d:	jmp    0x140001312
   14000130f:	xor    r14d,r14d
   140001312:	movabs r13,0x7ffffffffffffffe
   14000131c:	nop    DWORD PTR [rax+0x0]
   140001320:	cmp    rsi,r12
   140001323:	je     0x1400013d0
   140001329:	movzx  r15d,WORD PTR [rsi]
   14000132d:	mov    r8,QWORD PTR [rbx+0x10]
   140001331:	or     rax,0xffffffffffffffff
   140001335:	sub    rax,r8
   140001338:	cmp    rax,0x1
   14000133c:	ja     0x14000134a
   14000133e:	lea    rcx,[rip+0x26573]        # 0x1400278b8
   140001345:	call   0x1400051f4
   14000134a:	lea    rdi,[r8+0x1]
   14000134e:	cmp    rdi,r13
   140001351:	jbe    0x14000135f
   140001353:	lea    rcx,[rip+0x2655e]        # 0x1400278b8
   14000135a:	call   0x1400051f4
   14000135f:	mov    rax,QWORD PTR [rbx+0x18]
   140001363:	cmp    rax,rdi
   140001366:	jae    0x140001375
   140001368:	mov    rdx,rdi
   14000136b:	mov    rcx,rbx
   14000136e:	call   0x140001c90
   140001373:	jmp    0x140001392
   140001375:	test   rdi,rdi
   140001378:	jne    0x140001397
   14000137a:	mov    QWORD PTR [rbx+0x10],r14
   14000137e:	cmp    rax,0x8
   140001382:	jb     0x140001389
   140001384:	mov    rax,QWORD PTR [rbx]
   140001387:	jmp    0x14000138c
   140001389:	mov    rax,rbx
   14000138c:	mov    WORD PTR [rax],r14w
   140001390:	jmp    0x1400013c7
   140001392:	test   rdi,rdi
   140001395:	je     0x1400013c7
   140001397:	mov    rcx,QWORD PTR [rbx+0x10]
   14000139b:	cmp    QWORD PTR [rbx+0x18],0x8
   1400013a0:	jb     0x1400013a7
   1400013a2:	mov    rax,QWORD PTR [rbx]
   1400013a5:	jmp    0x1400013aa
   1400013a7:	mov    rax,rbx
   1400013aa:	mov    WORD PTR [rax+rcx*2],r15w
   1400013af:	mov    QWORD PTR [rbx+0x10],rdi
   1400013b3:	cmp    QWORD PTR [rbx+0x18],0x8
   1400013b8:	jb     0x1400013bf
   1400013ba:	mov    rax,QWORD PTR [rbx]
   1400013bd:	jmp    0x1400013c2
   1400013bf:	mov    rax,rbx
   1400013c2:	mov    WORD PTR [rax+rdi*2],r14w
   1400013c7:	add    rsi,0x2
   1400013cb:	jmp    0x140001320
   1400013d0:	mov    rbx,QWORD PTR [rsp+0x68]
   1400013d5:	mov    rsi,QWORD PTR [rsp+0x70]
   1400013da:	add    rsp,0x30
   1400013de:	pop    r15
   1400013e0:	pop    r14
   1400013e2:	pop    r13
   1400013e4:	pop    r12
   1400013e6:	pop    rdi
   1400013e7:	ret    
   1400013e8:	int3   
   1400013e9:	int3   
   1400013ea:	int3   
   1400013eb:	int3   
   1400013ec:	int3   
   1400013ed:	int3   
   1400013ee:	int3   
   1400013ef:	int3   
   1400013f0:	sub    rdx,rcx
   1400013f3:	sar    rdx,1
   1400013f6:	add    QWORD PTR [r8],rdx
   1400013f9:	ret    
   1400013fa:	int3   
   1400013fb:	int3   
   1400013fc:	int3   
   1400013fd:	int3   
   1400013fe:	int3   
   1400013ff:	int3   
   140001400:	sub    rdx,rcx
   140001403:	sar    rdx,1
   140001406:	add    QWORD PTR [r8],rdx
   140001409:	ret    
   14000140a:	int3   
   14000140b:	int3   
   14000140c:	int3   
   14000140d:	int3   
   14000140e:	int3   
   14000140f:	int3   
   140001410:	mov    rax,rcx
   140001413:	ret    
   140001414:	int3   
   140001415:	int3   
   140001416:	int3   
   140001417:	int3   
   140001418:	int3   
   140001419:	int3   
   14000141a:	int3   
   14000141b:	int3   
   14000141c:	int3   
   14000141d:	int3   
   14000141e:	int3   
   14000141f:	int3   
   140001420:	mov    rax,rcx
   140001423:	ret    
   140001424:	int3   
   140001425:	int3   
   140001426:	int3   
   140001427:	int3   
   140001428:	int3   
   140001429:	int3   
   14000142a:	int3   
   14000142b:	int3   
   14000142c:	int3   
   14000142d:	int3   
   14000142e:	int3   
   14000142f:	int3   
   140001430:	mov    rax,rcx
   140001433:	ret    
   140001434:	int3   
   140001435:	int3   
   140001436:	int3   
   140001437:	int3   
   140001438:	int3   
   140001439:	int3   
   14000143a:	int3   
   14000143b:	int3   
   14000143c:	int3   
   14000143d:	int3   
   14000143e:	int3   
   14000143f:	int3   
   140001440:	sub    rsp,0x38
   140001444:	mov    r10,QWORD PTR [rcx+0x18]
   140001448:	cmp    r10,0x8
   14000144c:	jb     0x140001453
   14000144e:	mov    r9,QWORD PTR [rcx]
   140001451:	jmp    0x140001456
   140001453:	mov    r9,rcx
   140001456:	mov    rax,QWORD PTR [rcx+0x10]
   14000145a:	lea    rax,[r9+rax*2]
   14000145e:	cmp    r10,0x8
   140001462:	jb     0x140001469
   140001464:	mov    r10,QWORD PTR [rcx]
   140001467:	jmp    0x14000146c
   140001469:	mov    r10,rcx
   14000146c:	mov    QWORD PTR [rsp+0x20],r8
   140001471:	mov    r9,rdx
   140001474:	mov    r8,rax
   140001477:	mov    rdx,r10
   14000147a:	call   0x1400041b0
   14000147f:	add    rsp,0x38
   140001483:	ret    
   140001484:	int3   
   140001485:	int3   
   140001486:	int3   
   140001487:	int3   
   140001488:	int3   
   140001489:	int3   
   14000148a:	int3   
   14000148b:	int3   
   14000148c:	int3   
   14000148d:	int3   
   14000148e:	int3   
   14000148f:	int3   
   140001490:	test   rdx,rdx
   140001493:	je     0x14000149b
   140001495:	mov    rax,QWORD PTR [r8]
   140001498:	mov    QWORD PTR [rdx],rax
   14000149b:	ret    
   14000149c:	int3   
   14000149d:	int3   
   14000149e:	int3   
   14000149f:	int3   
   1400014a0:	test   rdx,rdx
   1400014a3:	je     0x1400014ab
   1400014a5:	mov    rax,QWORD PTR [r8]
   1400014a8:	mov    QWORD PTR [rdx],rax
   1400014ab:	ret    
   1400014ac:	int3   
   1400014ad:	int3   
   1400014ae:	int3   
   1400014af:	int3   
   1400014b0:	test   rdx,rdx
   1400014b3:	je     0x1400014bb
   1400014b5:	mov    rax,QWORD PTR [r8]
   1400014b8:	mov    QWORD PTR [rdx],rax
   1400014bb:	ret    
   1400014bc:	int3   
   1400014bd:	int3   
   1400014be:	int3   
   1400014bf:	int3   
   1400014c0:	test   rdx,rdx
   1400014c3:	je     0x1400014cb
   1400014c5:	mov    rax,QWORD PTR [r8]
   1400014c8:	mov    QWORD PTR [rdx],rax
   1400014cb:	ret    
   1400014cc:	int3   
   1400014cd:	int3   
   1400014ce:	int3   
   1400014cf:	int3   
   1400014d0:	test   rdx,rdx
   1400014d3:	je     0x1400014db
   1400014d5:	mov    rax,QWORD PTR [r8]
   1400014d8:	mov    QWORD PTR [rdx],rax
   1400014db:	ret    
   1400014dc:	int3   
   1400014dd:	int3   
   1400014de:	int3   
   1400014df:	int3   
   1400014e0:	test   rdx,rdx
   1400014e3:	je     0x1400014eb
   1400014e5:	mov    rax,QWORD PTR [r8]
   1400014e8:	mov    QWORD PTR [rdx],rax
   1400014eb:	ret    
   1400014ec:	int3   
   1400014ed:	int3   
   1400014ee:	int3   
   1400014ef:	int3   
   1400014f0:	ret    0x0
   1400014f3:	int3   
   1400014f4:	int3   
   1400014f5:	int3   
   1400014f6:	int3   
   1400014f7:	int3   
   1400014f8:	int3   
   1400014f9:	int3   
   1400014fa:	int3   
   1400014fb:	int3   
   1400014fc:	int3   
   1400014fd:	int3   
   1400014fe:	int3   
   1400014ff:	int3   
   140001500:	ret    0x0
   140001503:	int3   
   140001504:	int3   
   140001505:	int3   
   140001506:	int3   
   140001507:	int3   
   140001508:	int3   
   140001509:	int3   
   14000150a:	int3   
   14000150b:	int3   
   14000150c:	int3   
   14000150d:	int3   
   14000150e:	int3   
   14000150f:	int3   
   140001510:	ret    0x0
   140001513:	int3   
   140001514:	int3   
   140001515:	int3   
   140001516:	int3   
   140001517:	int3   
   140001518:	int3   
   140001519:	int3   
   14000151a:	int3   
   14000151b:	int3   
   14000151c:	int3   
   14000151d:	int3   
   14000151e:	int3   
   14000151f:	int3   
   140001520:	ret    0x0
   140001523:	int3   
   140001524:	int3   
   140001525:	int3   
   140001526:	int3   
   140001527:	int3   
   140001528:	int3   
   140001529:	int3   
   14000152a:	int3   
   14000152b:	int3   
   14000152c:	int3   
   14000152d:	int3   
   14000152e:	int3   
   14000152f:	int3   
   140001530:	ret    0x0
   140001533:	int3   
   140001534:	int3   
   140001535:	int3   
   140001536:	int3   
   140001537:	int3   
   140001538:	int3   
   140001539:	int3   
   14000153a:	int3   
   14000153b:	int3   
   14000153c:	int3   
   14000153d:	int3   
   14000153e:	int3   
   14000153f:	int3   
   140001540:	ret    0x0
   140001543:	int3   
   140001544:	int3   
   140001545:	int3   
   140001546:	int3   
   140001547:	int3   
   140001548:	int3   
   140001549:	int3   
   14000154a:	int3   
   14000154b:	int3   
   14000154c:	int3   
   14000154d:	int3   
   14000154e:	int3   
   14000154f:	int3   
   140001550:	mov    rax,rcx
   140001553:	ret    
   140001554:	int3   
   140001555:	int3   
   140001556:	int3   
   140001557:	int3   
   140001558:	int3   
   140001559:	int3   
   14000155a:	int3   
   14000155b:	int3   
   14000155c:	int3   
   14000155d:	int3   
   14000155e:	int3   
   14000155f:	int3   
   140001560:	mov    rax,rcx
   140001563:	ret    
   140001564:	int3   
   140001565:	int3   
   140001566:	int3   
   140001567:	int3   
   140001568:	int3   
   140001569:	int3   
   14000156a:	int3   
   14000156b:	int3   
   14000156c:	int3   
   14000156d:	int3   
   14000156e:	int3   
   14000156f:	int3   
   140001570:	mov    rax,rcx
   140001573:	ret    
   140001574:	int3   
   140001575:	int3   
   140001576:	int3   
   140001577:	int3   
   140001578:	int3   
   140001579:	int3   
   14000157a:	int3   
   14000157b:	int3   
   14000157c:	int3   
   14000157d:	int3   
   14000157e:	int3   
   14000157f:	int3   
   140001580:	mov    rax,rcx
   140001583:	ret    
   140001584:	int3   
   140001585:	int3   
   140001586:	int3   
   140001587:	int3   
   140001588:	int3   
   140001589:	int3   
   14000158a:	int3   
   14000158b:	int3   
   14000158c:	int3   
   14000158d:	int3   
   14000158e:	int3   
   14000158f:	int3   
   140001590:	xor    eax,eax
   140001592:	mov    QWORD PTR [rcx+0x10],rax
   140001596:	mov    QWORD PTR [rcx+0x18],rax
   14000159a:	mov    rax,rcx
   14000159d:	ret    
   14000159e:	int3   
   14000159f:	int3   
   1400015a0:	xor    eax,eax
   1400015a2:	mov    QWORD PTR [rcx+0x10],rax
   1400015a6:	mov    QWORD PTR [rcx+0x18],rax
   1400015aa:	mov    rax,rcx
   1400015ad:	ret    
   1400015ae:	int3   
   1400015af:	int3   
   1400015b0:	mov    QWORD PTR [rcx],rdx
   1400015b3:	mov    rax,rcx
   1400015b6:	ret    
   1400015b7:	int3   
   1400015b8:	int3   
   1400015b9:	int3   
   1400015ba:	int3   
   1400015bb:	int3   
   1400015bc:	int3   
   1400015bd:	int3   
   1400015be:	int3   
   1400015bf:	int3   
   1400015c0:	mov    QWORD PTR [rcx],rdx
   1400015c3:	mov    rax,rcx
   1400015c6:	ret    
   1400015c7:	int3   
   1400015c8:	int3   
   1400015c9:	int3   
   1400015ca:	int3   
   1400015cb:	int3   
   1400015cc:	int3   
   1400015cd:	int3   
   1400015ce:	int3   
   1400015cf:	int3   
   1400015d0:	xor    eax,eax
   1400015d2:	mov    QWORD PTR [rcx+0x10],rax
   1400015d6:	mov    QWORD PTR [rcx+0x18],rax
   1400015da:	mov    rax,rcx
   1400015dd:	ret    
   1400015de:	int3   
   1400015df:	int3   
   1400015e0:	xor    eax,eax
   1400015e2:	mov    QWORD PTR [rcx+0x10],rax
   1400015e6:	mov    QWORD PTR [rcx+0x18],rax
   1400015ea:	mov    rax,rcx
   1400015ed:	ret    
   1400015ee:	int3   
   1400015ef:	int3   
   1400015f0:	mov    rax,rcx
   1400015f3:	ret    
   1400015f4:	int3   
   1400015f5:	int3   
   1400015f6:	int3   
   1400015f7:	int3   
   1400015f8:	int3   
   1400015f9:	int3   
   1400015fa:	int3   
   1400015fb:	int3   
   1400015fc:	int3   
   1400015fd:	int3   
   1400015fe:	int3   
   1400015ff:	int3   
   140001600:	mov    rax,rcx
   140001603:	ret    
   140001604:	int3   
   140001605:	int3   
   140001606:	int3   
   140001607:	int3   
   140001608:	int3   
   140001609:	int3   
   14000160a:	int3   
   14000160b:	int3   
   14000160c:	int3   
   14000160d:	int3   
   14000160e:	int3   
   14000160f:	int3   
   140001610:	mov    rax,rcx
   140001613:	ret    
   140001614:	int3   
   140001615:	int3   
   140001616:	int3   
   140001617:	int3   
   140001618:	int3   
   140001619:	int3   
   14000161a:	int3   
   14000161b:	int3   
   14000161c:	int3   
   14000161d:	int3   
   14000161e:	int3   
   14000161f:	int3   
   140001620:	mov    rax,rcx
   140001623:	ret    
   140001624:	int3   
   140001625:	int3   
   140001626:	int3   
   140001627:	int3   
   140001628:	int3   
   140001629:	int3   
   14000162a:	int3   
   14000162b:	int3   
   14000162c:	int3   
   14000162d:	int3   
   14000162e:	int3   
   14000162f:	int3   
   140001630:	mov    rax,rcx
   140001633:	ret    
   140001634:	int3   
   140001635:	int3   
   140001636:	int3   
   140001637:	int3   
   140001638:	int3   
   140001639:	int3   
   14000163a:	int3   
   14000163b:	int3   
   14000163c:	int3   
   14000163d:	int3   
   14000163e:	int3   
   14000163f:	int3   
   140001640:	mov    rax,rcx
   140001643:	ret    
   140001644:	int3   
   140001645:	int3   
   140001646:	int3   
   140001647:	int3   
   140001648:	int3   
   140001649:	int3   
   14000164a:	int3   
   14000164b:	int3   
   14000164c:	int3   
   14000164d:	int3   
   14000164e:	int3   
   14000164f:	int3   
   140001650:	rex push rbx
   140001652:	sub    rsp,0x20
   140001656:	xor    r8d,r8d
   140001659:	mov    QWORD PTR [rcx+0x18],0xf
   140001661:	mov    rbx,rcx
   140001664:	mov    QWORD PTR [rcx+0x10],r8
   140001668:	mov    BYTE PTR [rcx],r8b
   14000166b:	cmp    BYTE PTR [rdx],r8b
   14000166e:	je     0x14000167e
   140001670:	or     r8,0xffffffffffffffff
   140001674:	inc    r8
   140001677:	cmp    BYTE PTR [rdx+r8*1],0x0
   14000167c:	jne    0x140001674
   14000167e:	call   0x140002830
   140001683:	mov    rax,rbx
   140001686:	add    rsp,0x20
   14000168a:	pop    rbx
   14000168b:	ret    
   14000168c:	int3   
   14000168d:	int3   
   14000168e:	int3   
   14000168f:	int3   
   140001690:	rex push rbx
   140001692:	sub    rsp,0x20
   140001696:	xor    eax,eax
   140001698:	mov    QWORD PTR [rcx+0x18],0x7
   1400016a0:	mov    rbx,rcx
   1400016a3:	mov    QWORD PTR [rcx+0x10],rax
   1400016a7:	mov    WORD PTR [rcx],ax
   1400016aa:	call   0x140001aa0
   1400016af:	mov    rax,rbx
   1400016b2:	add    rsp,0x20
   1400016b6:	pop    rbx
   1400016b7:	ret    
   1400016b8:	int3   
   1400016b9:	int3   
   1400016ba:	int3   
   1400016bb:	int3   
   1400016bc:	int3   
   1400016bd:	int3   
   1400016be:	int3   
   1400016bf:	int3   
   1400016c0:	rex push rbx
   1400016c2:	sub    rsp,0x20
   1400016c6:	xor    eax,eax
   1400016c8:	mov    QWORD PTR [rcx+0x18],0x7
   1400016d0:	or     r9,0xffffffffffffffff
   1400016d4:	mov    QWORD PTR [rcx+0x10],rax
   1400016d8:	xor    r8d,r8d
   1400016db:	mov    rbx,rcx
   1400016de:	mov    WORD PTR [rcx],ax
   1400016e1:	call   0x140002970
   1400016e6:	mov    rax,rbx
   1400016e9:	add    rsp,0x20
   1400016ed:	pop    rbx
   1400016ee:	ret    
   1400016ef:	int3   
   1400016f0:	rex push rbx
   1400016f2:	sub    rsp,0x20
   1400016f6:	xor    r8d,r8d
   1400016f9:	mov    QWORD PTR [rcx+0x18],0x7
   140001701:	mov    rbx,rcx
   140001704:	mov    QWORD PTR [rcx+0x10],r8
   140001708:	mov    WORD PTR [rcx],r8w
   14000170c:	cmp    WORD PTR [rdx],r8w
   140001710:	je     0x14000172b
   140001712:	or     r8,0xffffffffffffffff
   140001716:	data16 nop WORD PTR [rax+rax*1+0x0]
   140001720:	inc    r8
   140001723:	cmp    WORD PTR [rdx+r8*2],0x0
   140001729:	jne    0x140001720
   14000172b:	call   0x140002af0
   140001730:	mov    rax,rbx
   140001733:	add    rsp,0x20
   140001737:	pop    rbx
   140001738:	ret    
   140001739:	int3   
   14000173a:	int3   
   14000173b:	int3   
   14000173c:	int3   
   14000173d:	int3   
   14000173e:	int3   
   14000173f:	int3   
   140001740:	xor    eax,eax
   140001742:	mov    QWORD PTR [rcx+0x18],0x7
   14000174a:	mov    QWORD PTR [rcx+0x10],rax
   14000174e:	mov    WORD PTR [rcx],ax
   140001751:	mov    rax,rcx
   140001754:	ret    
   140001755:	int3   
   140001756:	int3   
   140001757:	int3   
   140001758:	int3   
   140001759:	int3   
   14000175a:	int3   
   14000175b:	int3   
   14000175c:	int3   
   14000175d:	int3   
   14000175e:	int3   
   14000175f:	int3   
   140001760:	lea    rax,[rip+0x25dd9]        # 0x140027540
   140001767:	mov    QWORD PTR [rcx],rax
   14000176a:	mov    rax,rcx
   14000176d:	ret    
   14000176e:	int3   
   14000176f:	int3   
   140001770:	lea    rax,[rip+0x25e19]        # 0x140027590
   140001777:	mov    QWORD PTR [rcx],rax
   14000177a:	mov    rax,rcx
   14000177d:	ret    
   14000177e:	int3   
   14000177f:	int3   
   140001780:	lea    rax,[rip+0x25e69]        # 0x1400275f0
   140001787:	mov    QWORD PTR [rcx],rax
   14000178a:	mov    rax,rcx
   14000178d:	ret    
   14000178e:	int3   
   14000178f:	int3   
   140001790:	lea    rax,[rip+0x25d71]        # 0x140027508
   140001797:	mov    QWORD PTR [rcx],rax
   14000179a:	mov    rax,rcx
   14000179d:	ret    
   14000179e:	int3   
   14000179f:	int3   
   1400017a0:	mov    DWORD PTR [rcx],edx
   1400017a2:	mov    QWORD PTR [rcx+0x8],r8
   1400017a6:	mov    rax,rcx
   1400017a9:	ret    
   1400017aa:	int3   
   1400017ab:	int3   
   1400017ac:	int3   
   1400017ad:	int3   
   1400017ae:	int3   
   1400017af:	int3   
   1400017b0:	mov    QWORD PTR [rcx],rdx
   1400017b3:	mov    rax,rcx
   1400017b6:	ret    
   1400017b7:	int3   
   1400017b8:	int3   
   1400017b9:	int3   
   1400017ba:	int3   
   1400017bb:	int3   
   1400017bc:	int3   
   1400017bd:	int3   
   1400017be:	int3   
   1400017bf:	int3   
   1400017c0:	rex push rbx
   1400017c2:	sub    rsp,0x20
   1400017c6:	cmp    QWORD PTR [rcx+0x18],0x10
   1400017cb:	mov    rbx,rcx
   1400017ce:	jb     0x1400017d8
   1400017d0:	mov    rcx,QWORD PTR [rcx]
   1400017d3:	call   0x140005454
   1400017d8:	mov    QWORD PTR [rbx+0x18],0xf
   1400017e0:	mov    QWORD PTR [rbx+0x10],0x0
   1400017e8:	mov    BYTE PTR [rbx],0x0
   1400017eb:	add    rsp,0x20
   1400017ef:	pop    rbx
   1400017f0:	ret    
   1400017f1:	int3   
   1400017f2:	int3   
   1400017f3:	int3   
   1400017f4:	int3   
   1400017f5:	int3   
   1400017f6:	int3   
   1400017f7:	int3   
   1400017f8:	int3   
   1400017f9:	int3   
   1400017fa:	int3   
   1400017fb:	int3   
   1400017fc:	int3   
   1400017fd:	int3   
   1400017fe:	int3   
   1400017ff:	int3   
   140001800:	rex push rbx
   140001802:	sub    rsp,0x20
   140001806:	cmp    QWORD PTR [rcx+0x18],0x8
   14000180b:	mov    rbx,rcx
   14000180e:	jb     0x140001818
   140001810:	mov    rcx,QWORD PTR [rcx]
   140001813:	call   0x140005454
   140001818:	xor    eax,eax
   14000181a:	mov    QWORD PTR [rbx+0x18],0x7
   140001822:	mov    QWORD PTR [rbx+0x10],rax
   140001826:	mov    WORD PTR [rbx],ax
   140001829:	add    rsp,0x20
   14000182d:	pop    rbx
   14000182e:	ret    
   14000182f:	int3   
   140001830:	lea    rax,[rip+0x25cd1]        # 0x140027508
   140001837:	mov    QWORD PTR [rcx],rax
   14000183a:	ret    
   14000183b:	int3   
   14000183c:	int3   
   14000183d:	int3   
   14000183e:	int3   
   14000183f:	int3   
   140001840:	lea    rax,[rip+0x25cc1]        # 0x140027508
   140001847:	mov    QWORD PTR [rcx],rax
   14000184a:	ret    
   14000184b:	int3   
   14000184c:	int3   
   14000184d:	int3   
   14000184e:	int3   
   14000184f:	int3   
   140001850:	lea    rax,[rip+0x25cb1]        # 0x140027508
   140001857:	mov    QWORD PTR [rcx],rax
   14000185a:	ret    
   14000185b:	int3   
   14000185c:	int3   
   14000185d:	int3   
   14000185e:	int3   
   14000185f:	int3   
   140001860:	lea    rax,[rip+0x25ca1]        # 0x140027508
   140001867:	mov    QWORD PTR [rcx],rax
   14000186a:	ret    
   14000186b:	int3   
   14000186c:	int3   
   14000186d:	int3   
   14000186e:	int3   
   14000186f:	int3   
   140001870:	mov    rax,rdx
   140001873:	ret    
   140001874:	int3   
   140001875:	int3   
   140001876:	int3   
   140001877:	int3   
   140001878:	int3   
   140001879:	int3   
   14000187a:	int3   
   14000187b:	int3   
   14000187c:	int3   
   14000187d:	int3   
   14000187e:	int3   
   14000187f:	int3   
   140001880:	ret    0x0
   140001883:	int3   
   140001884:	int3   
   140001885:	int3   
   140001886:	int3   
   140001887:	int3   
   140001888:	int3   
   140001889:	int3   
   14000188a:	int3   
   14000188b:	int3   
   14000188c:	int3   
   14000188d:	int3   
   14000188e:	int3   
   14000188f:	int3   
   140001890:	mov    QWORD PTR [rsp+0x8],rbx
   140001895:	push   rdi
   140001896:	sub    rsp,0x20
   14000189a:	mov    rdi,rdx
   14000189d:	mov    rbx,rcx
   1400018a0:	cmp    rcx,rdx
   1400018a3:	je     0x1400018d0
   1400018a5:	cmp    QWORD PTR [rcx+0x18],0x8
   1400018aa:	jb     0x1400018b4
   1400018ac:	mov    rcx,QWORD PTR [rcx]
   1400018af:	call   0x140005454
   1400018b4:	xor    eax,eax
   1400018b6:	mov    QWORD PTR [rbx+0x18],0x7
   1400018be:	mov    rdx,rdi
   1400018c1:	mov    QWORD PTR [rbx+0x10],rax
   1400018c5:	mov    rcx,rbx
   1400018c8:	mov    WORD PTR [rbx],ax
   1400018cb:	call   0x140001aa0
   1400018d0:	mov    rax,rbx
   1400018d3:	mov    rbx,QWORD PTR [rsp+0x30]
   1400018d8:	add    rsp,0x20
   1400018dc:	pop    rdi
   1400018dd:	ret    
   1400018de:	int3   
   1400018df:	int3   
   1400018e0:	cmp    WORD PTR [rdx],0x0
   1400018e4:	jne    0x1400018ee
   1400018e6:	xor    r8d,r8d
   1400018e9:	jmp    0x140002af0
   1400018ee:	or     r8,0xffffffffffffffff
   1400018f2:	inc    r8
   1400018f5:	cmp    WORD PTR [rdx+r8*2],0x0
   1400018fb:	jne    0x1400018f2
   1400018fd:	jmp    0x140002af0
   140001902:	int3   
   140001903:	int3   
   140001904:	int3   
   140001905:	int3   
   140001906:	int3   
   140001907:	int3   
   140001908:	int3   
   140001909:	int3   
   14000190a:	int3   
   14000190b:	int3   
   14000190c:	int3   
   14000190d:	int3   
   14000190e:	int3   
   14000190f:	int3   
   140001910:	mov    rdx,QWORD PTR [rdx]
   140001913:	cmp    QWORD PTR [rcx],rdx
   140001916:	sete   al
   140001919:	ret    
   14000191a:	int3   
   14000191b:	int3   
   14000191c:	int3   
   14000191d:	int3   
   14000191e:	int3   
   14000191f:	int3   
   140001920:	cmp    rcx,rdx
   140001923:	sete   al
   140001926:	ret    
   140001927:	int3   
   140001928:	int3   
   140001929:	int3   
   14000192a:	int3   
   14000192b:	int3   
   14000192c:	int3   
   14000192d:	int3   
   14000192e:	int3   
   14000192f:	int3   
   140001930:	mov    rax,QWORD PTR [rdx+0x8]
   140001934:	cmp    QWORD PTR [rcx+0x8],rax
   140001938:	jne    0x140001943
   14000193a:	mov    eax,DWORD PTR [rdx]
   14000193c:	cmp    DWORD PTR [rcx],eax
   14000193e:	jne    0x140001943
   140001940:	mov    al,0x1
   140001942:	ret    
   140001943:	xor    al,al
   140001945:	ret    
   140001946:	int3   
   140001947:	int3   
   140001948:	int3   
   140001949:	int3   
   14000194a:	int3   
   14000194b:	int3   
   14000194c:	int3   
   14000194d:	int3   
   14000194e:	int3   
   14000194f:	int3   
   140001950:	mov    rax,QWORD PTR [rcx]
   140001953:	ret    
   140001954:	int3   
   140001955:	int3   
   140001956:	int3   
   140001957:	int3   
   140001958:	int3   
   140001959:	int3   
   14000195a:	int3   
   14000195b:	int3   
   14000195c:	int3   
   14000195d:	int3   
   14000195e:	int3   
   14000195f:	int3   
   140001960:	mov    rax,QWORD PTR [rcx]
   140001963:	ret    
   140001964:	int3   
   140001965:	int3   
   140001966:	int3   
   140001967:	int3   
   140001968:	int3   
   140001969:	int3   
   14000196a:	int3   
   14000196b:	int3   
   14000196c:	int3   
   14000196d:	int3   
   14000196e:	int3   
   14000196f:	int3   
   140001970:	mov    rax,QWORD PTR [rcx]
   140001973:	sub    rax,QWORD PTR [rdx]
   140001976:	sar    rax,1
   140001979:	ret    
   14000197a:	int3   
   14000197b:	int3   
   14000197c:	int3   
   14000197d:	int3   
   14000197e:	int3   
   14000197f:	int3   
   140001980:	mov    rax,QWORD PTR [rcx]
   140001983:	sub    rax,QWORD PTR [rdx]
   140001986:	sar    rax,1
   140001989:	ret    
   14000198a:	int3   
   14000198b:	int3   
   14000198c:	int3   
   14000198d:	int3   
   14000198e:	int3   
   14000198f:	int3   
   140001990:	or     r9,0xffffffffffffffff
   140001994:	xor    r8d,r8d
   140001997:	jmp    0x1400022d0
   14000199c:	int3   
   14000199d:	int3   
   14000199e:	int3   
   14000199f:	int3   
   1400019a0:	cmp    WORD PTR [rdx],0x0
   1400019a4:	jne    0x1400019ae
   1400019a6:	xor    r8d,r8d
   1400019a9:	jmp    0x140002440
   1400019ae:	or     r8,0xffffffffffffffff
   1400019b2:	inc    r8
   1400019b5:	cmp    WORD PTR [rdx+r8*2],0x0
   1400019bb:	jne    0x1400019b2
   1400019bd:	jmp    0x140002440
   1400019c2:	int3   
   1400019c3:	int3   
   1400019c4:	int3   
   1400019c5:	int3   
   1400019c6:	int3   
   1400019c7:	int3   
   1400019c8:	int3   
   1400019c9:	int3   
   1400019ca:	int3   
   1400019cb:	int3   
   1400019cc:	int3   
   1400019cd:	int3   
   1400019ce:	int3   
   1400019cf:	int3   
   1400019d0:	rex push rbx
   1400019d2:	sub    rsp,0x20
   1400019d6:	lea    rax,[rip+0x25b2b]        # 0x140027508
   1400019dd:	mov    rbx,rcx
   1400019e0:	mov    QWORD PTR [rcx],rax
   1400019e3:	test   dl,0x1
   1400019e6:	je     0x1400019ed
   1400019e8:	call   0x140005454
   1400019ed:	mov    rax,rbx
   1400019f0:	add    rsp,0x20
   1400019f4:	pop    rbx
   1400019f5:	ret    
   1400019f6:	int3   
   1400019f7:	int3   
   1400019f8:	int3   
   1400019f9:	int3   
   1400019fa:	int3   
   1400019fb:	int3   
   1400019fc:	int3   
   1400019fd:	int3   
   1400019fe:	int3   
   1400019ff:	int3   
   140001a00:	rex push rbx
   140001a02:	sub    rsp,0x20
   140001a06:	lea    rax,[rip+0x25afb]        # 0x140027508
   140001a0d:	mov    rbx,rcx
   140001a10:	mov    QWORD PTR [rcx],rax
   140001a13:	test   dl,0x1
   140001a16:	je     0x140001a1d
   140001a18:	call   0x140005454
   140001a1d:	mov    rax,rbx
   140001a20:	add    rsp,0x20
   140001a24:	pop    rbx
   140001a25:	ret    
   140001a26:	int3   
   140001a27:	int3   
   140001a28:	int3   
   140001a29:	int3   
   140001a2a:	int3   
   140001a2b:	int3   
   140001a2c:	int3   
   140001a2d:	int3   
   140001a2e:	int3   
   140001a2f:	int3   
   140001a30:	rex push rbx
   140001a32:	sub    rsp,0x20
   140001a36:	lea    rax,[rip+0x25acb]        # 0x140027508
   140001a3d:	mov    rbx,rcx
   140001a40:	mov    QWORD PTR [rcx],rax
   140001a43:	test   dl,0x1
   140001a46:	je     0x140001a4d
   140001a48:	call   0x140005454
   140001a4d:	mov    rax,rbx
   140001a50:	add    rsp,0x20
   140001a54:	pop    rbx
   140001a55:	ret    
   140001a56:	int3   
   140001a57:	int3   
   140001a58:	int3   
   140001a59:	int3   
   140001a5a:	int3   
   140001a5b:	int3   
   140001a5c:	int3   
   140001a5d:	int3   
   140001a5e:	int3   
   140001a5f:	int3   
   140001a60:	rex push rbx
   140001a62:	sub    rsp,0x20
   140001a66:	lea    rax,[rip+0x25a9b]        # 0x140027508
   140001a6d:	mov    rbx,rcx
   140001a70:	mov    QWORD PTR [rcx],rax
   140001a73:	test   dl,0x1
   140001a76:	je     0x140001a7d
   140001a78:	call   0x140005454
   140001a7d:	mov    rax,rbx
   140001a80:	add    rsp,0x20
   140001a84:	pop    rbx
   140001a85:	ret    
   140001a86:	int3   
   140001a87:	int3   
   140001a88:	int3   
   140001a89:	int3   
   140001a8a:	int3   
   140001a8b:	int3   
   140001a8c:	int3   
   140001a8d:	int3   
   140001a8e:	int3   
   140001a8f:	int3   
   140001a90:	ret    0x0
   140001a93:	int3   
   140001a94:	int3   
   140001a95:	int3   
   140001a96:	int3   
   140001a97:	int3   
   140001a98:	int3   
   140001a99:	int3   
   140001a9a:	int3   
   140001a9b:	int3   
   140001a9c:	int3   
   140001a9d:	int3   
   140001a9e:	int3   
   140001a9f:	int3   
   140001aa0:	mov    QWORD PTR [rsp+0x8],rbx
   140001aa5:	mov    QWORD PTR [rsp+0x10],rsi
   140001aaa:	push   rdi
   140001aab:	sub    rsp,0x20
   140001aaf:	xor    esi,esi
   140001ab1:	cmp    QWORD PTR [rdx+0x18],0x8
   140001ab6:	mov    rbx,rdx
   140001ab9:	mov    rdi,rcx
   140001abc:	jae    0x140001ad1
   140001abe:	mov    r8,QWORD PTR [rdx+0x10]
   140001ac2:	inc    r8
   140001ac5:	je     0x140001adf
   140001ac7:	add    r8,r8
   140001aca:	call   0x1400056d0
   140001acf:	jmp    0x140001adf
   140001ad1:	test   rcx,rcx
   140001ad4:	je     0x140001adc
   140001ad6:	mov    rax,QWORD PTR [rdx]
   140001ad9:	mov    QWORD PTR [rcx],rax
   140001adc:	mov    QWORD PTR [rdx],rsi
   140001adf:	mov    rax,QWORD PTR [rbx+0x10]
   140001ae3:	mov    QWORD PTR [rdi+0x10],rax
   140001ae7:	mov    rax,QWORD PTR [rbx+0x18]
   140001aeb:	mov    QWORD PTR [rdi+0x18],rax
   140001aef:	mov    QWORD PTR [rbx+0x10],rsi
   140001af3:	mov    QWORD PTR [rbx+0x18],0x7
   140001afb:	mov    WORD PTR [rbx],si
   140001afe:	mov    rbx,QWORD PTR [rsp+0x30]
   140001b03:	mov    rsi,QWORD PTR [rsp+0x38]
   140001b08:	add    rsp,0x20
   140001b0c:	pop    rdi
   140001b0d:	ret    
   140001b0e:	int3   
   140001b0f:	int3   
   140001b10:	ret    0x0
   140001b13:	int3   
   140001b14:	int3   
   140001b15:	int3   
   140001b16:	int3   
   140001b17:	int3   
   140001b18:	int3   
   140001b19:	int3   
   140001b1a:	int3   
   140001b1b:	int3   
   140001b1c:	int3   
   140001b1d:	int3   
   140001b1e:	int3   
   140001b1f:	int3   
   140001b20:	sub    rsp,0x8
   140001b24:	cmp    r8,0x1
   140001b28:	jne    0x140001b3e
   140001b2a:	cmp    QWORD PTR [rcx+0x18],0x8
   140001b2f:	jb     0x140001b34
   140001b31:	mov    rcx,QWORD PTR [rcx]
   140001b34:	mov    WORD PTR [rcx+rdx*2],r9w
   140001b39:	add    rsp,0x8
   140001b3d:	ret    
   140001b3e:	cmp    QWORD PTR [rcx+0x18],0x8
   140001b43:	mov    QWORD PTR [rsp],rdi
   140001b47:	jb     0x140001b4c
   140001b49:	mov    rcx,QWORD PTR [rcx]
   140001b4c:	lea    rdi,[rcx+rdx*2]
   140001b50:	test   r8,r8
   140001b53:	je     0x140001b5f
   140001b55:	movzx  eax,r9w
   140001b59:	mov    rcx,r8
   140001b5c:	rep stos WORD PTR es:[rdi],ax
   140001b5f:	mov    rdi,QWORD PTR [rsp]
   140001b63:	add    rsp,0x8
   140001b67:	ret    
   140001b68:	int3   
   140001b69:	int3   
   140001b6a:	int3   
   140001b6b:	int3   
   140001b6c:	int3   
   140001b6d:	int3   
   140001b6e:	int3   
   140001b6f:	int3   
   140001b70:	ret    0x0
   140001b73:	int3   
   140001b74:	int3   
   140001b75:	int3   
   140001b76:	int3   
   140001b77:	int3   
   140001b78:	int3   
   140001b79:	int3   
   140001b7a:	int3   
   140001b7b:	int3   
   140001b7c:	int3   
   140001b7d:	int3   
   140001b7e:	int3   
   140001b7f:	int3   
   140001b80:	mov    QWORD PTR [rsp+0x18],r8
   140001b85:	mov    QWORD PTR [rsp+0x10],rdx
   140001b8a:	mov    QWORD PTR [rsp+0x8],rcx
   140001b8f:	push   rbx
   140001b90:	push   rsi
   140001b91:	push   rdi
   140001b92:	push   r14
   140001b94:	sub    rsp,0x38
   140001b98:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140001ba1:	mov    rsi,r8
   140001ba4:	mov    rbx,rcx
   140001ba7:	mov    rdi,rdx
   140001baa:	or     rdi,0xf
   140001bae:	cmp    rdi,0xfffffffffffffffe
   140001bb2:	jbe    0x140001bb9
   140001bb4:	mov    rdi,rdx
   140001bb7:	jmp    0x140001bee
   140001bb9:	mov    r8,QWORD PTR [rcx+0x18]
   140001bbd:	mov    rcx,r8
   140001bc0:	shr    rcx,1
   140001bc3:	movabs rax,0xaaaaaaaaaaaaaaab
   140001bcd:	mul    rdi
   140001bd0:	shr    rdx,1
   140001bd3:	cmp    rcx,rdx
   140001bd6:	jbe    0x140001bee
   140001bd8:	mov    rdi,0xfffffffffffffffe
   140001bdf:	mov    rax,rdi
   140001be2:	sub    rax,rcx
   140001be5:	cmp    r8,rax
   140001be8:	ja     0x140001bee
   140001bea:	lea    rdi,[rcx+r8*1]
   140001bee:	lea    rcx,[rdi+0x1]
   140001bf2:	xor    r14d,r14d
   140001bf5:	test   rcx,rcx
   140001bf8:	je     0x140001c13
   140001bfa:	cmp    rcx,0xffffffffffffffff
   140001bfe:	ja     0x140001c0d
   140001c00:	call   0x1400053e8
   140001c05:	mov    r14,rax
   140001c08:	test   rax,rax
   140001c0b:	jne    0x140001c13
   140001c0d:	call   0x14000514c
   140001c12:	nop
   140001c13:	jmp    0x140001c29
   140001c15:	mov    rbx,QWORD PTR [rsp+0x60]
   140001c1a:	mov    rsi,QWORD PTR [rsp+0x70]
   140001c1f:	mov    rdi,QWORD PTR [rsp+0x68]
   140001c24:	mov    r14,QWORD PTR [rsp+0x78]
   140001c29:	test   rsi,rsi
   140001c2c:	je     0x140001c4d
   140001c2e:	cmp    QWORD PTR [rbx+0x18],0x10
   140001c33:	jb     0x140001c3a
   140001c35:	mov    rdx,QWORD PTR [rbx]
   140001c38:	jmp    0x140001c3d
   140001c3a:	mov    rdx,rbx
   140001c3d:	test   rsi,rsi
   140001c40:	je     0x140001c4d
   140001c42:	mov    r8,rsi
   140001c45:	mov    rcx,r14
   140001c48:	call   0x1400056d0
   140001c4d:	cmp    QWORD PTR [rbx+0x18],0x10
   140001c52:	jb     0x140001c5c
   140001c54:	mov    rcx,QWORD PTR [rbx]
   140001c57:	call   0x140005454
   140001c5c:	mov    BYTE PTR [rbx],0x0
   140001c5f:	mov    QWORD PTR [rbx],r14
   140001c62:	mov    QWORD PTR [rbx+0x18],rdi
   140001c66:	mov    QWORD PTR [rbx+0x10],rsi
   140001c6a:	cmp    rdi,0x10
   140001c6e:	jb     0x140001c73
   140001c70:	mov    rbx,r14
   140001c73:	mov    BYTE PTR [rbx+rsi*1],0x0
   140001c77:	add    rsp,0x38
   140001c7b:	pop    r14
   140001c7d:	pop    rdi
   140001c7e:	pop    rsi
   140001c7f:	pop    rbx
   140001c80:	ret    
   140001c81:	int3   
   140001c82:	int3   
   140001c83:	int3   
   140001c84:	int3   
   140001c85:	int3   
   140001c86:	int3   
   140001c87:	int3   
   140001c88:	int3   
   140001c89:	int3   
   140001c8a:	int3   
   140001c8b:	int3   
   140001c8c:	int3   
   140001c8d:	int3   
   140001c8e:	int3   
   140001c8f:	int3   
   140001c90:	mov    QWORD PTR [rsp+0x18],r8
   140001c95:	mov    QWORD PTR [rsp+0x10],rdx
   140001c9a:	mov    QWORD PTR [rsp+0x8],rcx
   140001c9f:	push   rbx
   140001ca0:	push   rsi
   140001ca1:	push   rdi
   140001ca2:	push   r14
   140001ca4:	push   r15
   140001ca6:	sub    rsp,0x30
   140001caa:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140001cb3:	mov    rsi,r8
   140001cb6:	mov    rbx,rcx
   140001cb9:	mov    rdi,rdx
   140001cbc:	or     rdi,0x7
   140001cc0:	movabs r9,0x7ffffffffffffffe
   140001cca:	cmp    rdi,r9
   140001ccd:	jbe    0x140001cd4
   140001ccf:	mov    rdi,rdx
   140001cd2:	jmp    0x140001d05
   140001cd4:	mov    r8,QWORD PTR [rcx+0x18]
   140001cd8:	mov    rcx,r8
   140001cdb:	shr    rcx,1
   140001cde:	movabs rax,0xaaaaaaaaaaaaaaab
   140001ce8:	mul    rdi
   140001ceb:	shr    rdx,1
   140001cee:	cmp    rcx,rdx
   140001cf1:	jbe    0x140001d05
   140001cf3:	mov    rax,r9
   140001cf6:	sub    rax,rcx
   140001cf9:	cmp    r8,rax
   140001cfc:	lea    rdi,[rcx+r8*1]
   140001d00:	jbe    0x140001d05
   140001d02:	mov    rdi,r9
   140001d05:	lea    rcx,[rdi+0x1]
   140001d09:	xor    r15d,r15d
   140001d0c:	mov    r14d,r15d
   140001d0f:	test   rcx,rcx
   140001d12:	je     0x140001d39
   140001d14:	movabs rax,0x7fffffffffffffff
   140001d1e:	cmp    rcx,rax
   140001d21:	ja     0x140001d33
   140001d23:	add    rcx,rcx
   140001d26:	call   0x1400053e8
   140001d2b:	mov    r14,rax
   140001d2e:	test   rax,rax
   140001d31:	jne    0x140001d39
   140001d33:	call   0x14000514c
   140001d38:	nop
   140001d39:	jmp    0x140001d52
   140001d3b:	xor    r15d,r15d
   140001d3e:	mov    rbx,QWORD PTR [rsp+0x60]
   140001d43:	mov    rsi,QWORD PTR [rsp+0x70]
   140001d48:	mov    rdi,QWORD PTR [rsp+0x68]
   140001d4d:	mov    r14,QWORD PTR [rsp+0x78]
   140001d52:	test   rsi,rsi
   140001d55:	je     0x140001d77
   140001d57:	cmp    QWORD PTR [rbx+0x18],0x8
   140001d5c:	jb     0x140001d63
   140001d5e:	mov    rdx,QWORD PTR [rbx]
   140001d61:	jmp    0x140001d66
   140001d63:	mov    rdx,rbx
   140001d66:	test   rsi,rsi
   140001d69:	je     0x140001d77
   140001d6b:	lea    r8,[rsi+rsi*1]
   140001d6f:	mov    rcx,r14
   140001d72:	call   0x1400056d0
   140001d77:	cmp    QWORD PTR [rbx+0x18],0x8
   140001d7c:	jb     0x140001d86
   140001d7e:	mov    rcx,QWORD PTR [rbx]
   140001d81:	call   0x140005454
   140001d86:	mov    QWORD PTR [rbx],r14
   140001d89:	mov    QWORD PTR [rbx+0x18],rdi
   140001d8d:	mov    QWORD PTR [rbx+0x10],rsi
   140001d91:	cmp    rdi,0x8
   140001d95:	jb     0x140001d9a
   140001d97:	mov    rbx,r14
   140001d9a:	mov    WORD PTR [rbx+rsi*2],r15w
   140001d9f:	add    rsp,0x30
   140001da3:	pop    r15
   140001da5:	pop    r14
   140001da7:	pop    rdi
   140001da8:	pop    rsi
   140001da9:	pop    rbx
   140001daa:	ret    
   140001dab:	int3   
   140001dac:	int3   
   140001dad:	int3   
   140001dae:	int3   
   140001daf:	int3   
   140001db0:	cmp    QWORD PTR [rcx+0x18],0x10
   140001db5:	mov    QWORD PTR [rcx+0x10],rdx
   140001db9:	jb     0x140001dc3
   140001dbb:	mov    rax,QWORD PTR [rcx]
   140001dbe:	mov    BYTE PTR [rax+rdx*1],0x0
   140001dc2:	ret    
   140001dc3:	mov    BYTE PTR [rcx+rdx*1],0x0
   140001dc7:	ret    
   140001dc8:	int3   
   140001dc9:	int3   
   140001dca:	int3   
   140001dcb:	int3   
   140001dcc:	int3   
   140001dcd:	int3   
   140001dce:	int3   
   140001dcf:	int3   
   140001dd0:	cmp    QWORD PTR [rcx+0x18],0x8
   140001dd5:	mov    rax,rcx
   140001dd8:	mov    QWORD PTR [rcx+0x10],rdx
   140001ddc:	jb     0x140001de1
   140001dde:	mov    rax,QWORD PTR [rcx]
   140001de1:	xor    ecx,ecx
   140001de3:	mov    WORD PTR [rax+rdx*2],cx
   140001de7:	ret    
   140001de8:	int3   
   140001de9:	int3   
   140001dea:	int3   
   140001deb:	int3   
   140001dec:	int3   
   140001ded:	int3   
   140001dee:	int3   
   140001def:	int3   
   140001df0:	mov    rax,rdx
   140001df3:	ret    
   140001df4:	int3   
   140001df5:	int3   
   140001df6:	int3   
   140001df7:	int3   
   140001df8:	int3   
   140001df9:	int3   
   140001dfa:	int3   
   140001dfb:	int3   
   140001dfc:	int3   
   140001dfd:	int3   
   140001dfe:	int3   
   140001dff:	int3   
   140001e00:	mov    rax,rdx
   140001e03:	ret    
   140001e04:	int3   
   140001e05:	int3   
   140001e06:	int3   
   140001e07:	int3   
   140001e08:	int3   
   140001e09:	int3   
   140001e0a:	int3   
   140001e0b:	int3   
   140001e0c:	int3   
   140001e0d:	int3   
   140001e0e:	int3   
   140001e0f:	int3   
   140001e10:	mov    QWORD PTR [rsp+0x20],rbx
   140001e15:	push   rdi
   140001e16:	sub    rsp,0x20
   140001e1a:	mov    rdi,rdx
   140001e1d:	mov    rbx,rcx
   140001e20:	cmp    rdx,0xfffffffffffffffe
   140001e24:	ja     0x140001ecd
   140001e2a:	mov    rax,QWORD PTR [rcx+0x18]
   140001e2e:	mov    QWORD PTR [rsp+0x30],rbp
   140001e33:	xor    ebp,ebp
   140001e35:	cmp    rax,rdx
   140001e38:	jae    0x140001e45
   140001e3a:	mov    r8,QWORD PTR [rcx+0x10]
   140001e3e:	call   0x140001b80
   140001e43:	jmp    0x140001eb7
   140001e45:	test   r8b,r8b
   140001e48:	je     0x140001ea2
   140001e4a:	cmp    rdx,0x10
   140001e4e:	jae    0x140001ea2
   140001e50:	mov    QWORD PTR [rsp+0x38],rsi
   140001e55:	mov    rsi,QWORD PTR [rcx+0x10]
   140001e59:	cmp    rdx,rsi
   140001e5c:	cmovb  rsi,rdx
   140001e60:	cmp    rax,0x10
   140001e64:	jb     0x140001e8b
   140001e66:	mov    QWORD PTR [rsp+0x40],r14
   140001e6b:	mov    r14,QWORD PTR [rcx]
   140001e6e:	test   rsi,rsi
   140001e71:	je     0x140001e7e
   140001e73:	mov    r8,rsi
   140001e76:	mov    rdx,r14
   140001e79:	call   0x1400056d0
   140001e7e:	mov    rcx,r14
   140001e81:	call   0x140005454
   140001e86:	mov    r14,QWORD PTR [rsp+0x40]
   140001e8b:	mov    QWORD PTR [rbx+0x10],rsi
   140001e8f:	mov    QWORD PTR [rbx+0x18],0xf
   140001e97:	mov    BYTE PTR [rsi+rbx*1],bpl
   140001e9b:	mov    rsi,QWORD PTR [rsp+0x38]
   140001ea0:	jmp    0x140001eb7
   140001ea2:	test   rdx,rdx
   140001ea5:	jne    0x140001eb7
   140001ea7:	mov    QWORD PTR [rcx+0x10],rbp
   140001eab:	cmp    rax,0x10
   140001eaf:	jb     0x140001eb4
   140001eb1:	mov    rbx,QWORD PTR [rcx]
   140001eb4:	mov    BYTE PTR [rbx],bpl
   140001eb7:	mov    rbp,QWORD PTR [rsp+0x30]
   140001ebc:	mov    rbx,QWORD PTR [rsp+0x48]
   140001ec1:	test   rdi,rdi
   140001ec4:	setne  al
   140001ec7:	add    rsp,0x20
   140001ecb:	pop    rdi
   140001ecc:	ret    
   140001ecd:	lea    rcx,[rip+0x259e4]        # 0x1400278b8
   140001ed4:	call   0x1400051f4
   140001ed9:	int3   
   140001eda:	int3   
   140001edb:	int3   
   140001edc:	int3   
   140001edd:	int3   
   140001ede:	int3   
   140001edf:	int3   
   140001ee0:	mov    QWORD PTR [rsp+0x20],rbx
   140001ee5:	push   rdi
   140001ee6:	sub    rsp,0x20
   140001eea:	movabs rax,0x7ffffffffffffffe
   140001ef4:	mov    rdi,rdx
   140001ef7:	mov    rbx,rcx
   140001efa:	cmp    rdx,rax
   140001efd:	ja     0x140001fa8
   140001f03:	mov    rax,QWORD PTR [rcx+0x18]
   140001f07:	mov    QWORD PTR [rsp+0x38],rsi
   140001f0c:	xor    esi,esi
   140001f0e:	cmp    rax,rdx
   140001f11:	jae    0x140001f1e
   140001f13:	mov    r8,QWORD PTR [rcx+0x10]
   140001f17:	call   0x140001c90
   140001f1c:	jmp    0x140001f92
   140001f1e:	test   r8b,r8b
   140001f21:	je     0x140001f7d
   140001f23:	cmp    rdx,0x8
   140001f27:	jae    0x140001f7d
   140001f29:	mov    QWORD PTR [rsp+0x40],r14
   140001f2e:	mov    r14,QWORD PTR [rcx+0x10]
   140001f32:	cmp    rdx,r14
   140001f35:	cmovb  r14,rdx
   140001f39:	cmp    rax,0x8
   140001f3d:	jb     0x140001f65
   140001f3f:	mov    QWORD PTR [rsp+0x30],rbp
   140001f44:	mov    rbp,QWORD PTR [rcx]
   140001f47:	test   r14,r14
   140001f4a:	je     0x140001f58
   140001f4c:	lea    r8,[r14+r14*1]
   140001f50:	mov    rdx,rbp
   140001f53:	call   0x1400056d0
   140001f58:	mov    rcx,rbp
   140001f5b:	call   0x140005454
   140001f60:	mov    rbp,QWORD PTR [rsp+0x30]
   140001f65:	mov    QWORD PTR [rbx+0x10],r14
   140001f69:	mov    QWORD PTR [rbx+0x18],0x7
   140001f71:	mov    WORD PTR [rbx+r14*2],si
   140001f76:	mov    r14,QWORD PTR [rsp+0x40]
   140001f7b:	jmp    0x140001f92
   140001f7d:	test   rdx,rdx
   140001f80:	jne    0x140001f92
   140001f82:	mov    QWORD PTR [rcx+0x10],rsi
   140001f86:	cmp    rax,0x8
   140001f8a:	jb     0x140001f8f
   140001f8c:	mov    rbx,QWORD PTR [rcx]
   140001f8f:	mov    WORD PTR [rbx],si
   140001f92:	mov    rsi,QWORD PTR [rsp+0x38]
   140001f97:	mov    rbx,QWORD PTR [rsp+0x48]
   140001f9c:	test   rdi,rdi
   140001f9f:	setne  al
   140001fa2:	add    rsp,0x20
   140001fa6:	pop    rdi
   140001fa7:	ret    
   140001fa8:	lea    rcx,[rip+0x25909]        # 0x1400278b8
   140001faf:	call   0x1400051f4
   140001fb4:	int3   
   140001fb5:	int3   
   140001fb6:	int3   
   140001fb7:	int3   
   140001fb8:	int3   
   140001fb9:	int3   
   140001fba:	int3   
   140001fbb:	int3   
   140001fbc:	int3   
   140001fbd:	int3   
   140001fbe:	int3   
   140001fbf:	int3   
   140001fc0:	test   rdx,rdx
   140001fc3:	je     0x140001ffa
   140001fc5:	mov    rax,QWORD PTR [rcx+0x18]
   140001fc9:	cmp    rax,0x10
   140001fcd:	jb     0x140001fd4
   140001fcf:	mov    r8,QWORD PTR [rcx]
   140001fd2:	jmp    0x140001fd7
   140001fd4:	mov    r8,rcx
   140001fd7:	cmp    rdx,r8
   140001fda:	jb     0x140001ffa
   140001fdc:	cmp    rax,0x10
   140001fe0:	jb     0x140001fe7
   140001fe2:	mov    r8,QWORD PTR [rcx]
   140001fe5:	jmp    0x140001fea
   140001fe7:	mov    r8,rcx
   140001fea:	mov    rax,QWORD PTR [rcx+0x10]
   140001fee:	lea    rcx,[r8+rax*1]
   140001ff2:	cmp    rcx,rdx
   140001ff5:	jbe    0x140001ffa
   140001ff7:	mov    al,0x1
   140001ff9:	ret    
   140001ffa:	xor    al,al
   140001ffc:	ret    
   140001ffd:	int3   
   140001ffe:	int3   
   140001fff:	int3   
   140002000:	test   rdx,rdx
   140002003:	je     0x14000203a
   140002005:	mov    rax,QWORD PTR [rcx+0x18]
   140002009:	cmp    rax,0x8
   14000200d:	jb     0x140002014
   14000200f:	mov    r8,QWORD PTR [rcx]
   140002012:	jmp    0x140002017
   140002014:	mov    r8,rcx
   140002017:	cmp    rdx,r8
   14000201a:	jb     0x14000203a
   14000201c:	cmp    rax,0x8
   140002020:	jb     0x140002027
   140002022:	mov    r8,QWORD PTR [rcx]
   140002025:	jmp    0x14000202a
   140002027:	mov    r8,rcx
   14000202a:	mov    rax,QWORD PTR [rcx+0x10]
   14000202e:	lea    rcx,[r8+rax*2]
   140002032:	cmp    rcx,rdx
   140002035:	jbe    0x14000203a
   140002037:	mov    al,0x1
   140002039:	ret    
   14000203a:	xor    al,al
   14000203c:	ret    
   14000203d:	int3   
   14000203e:	int3   
   14000203f:	int3   
   140002040:	cmp    QWORD PTR [rcx+0x18],0x10
   140002045:	jb     0x14000204b
   140002047:	mov    rax,QWORD PTR [rcx]
   14000204a:	ret    
   14000204b:	mov    rax,rcx
   14000204e:	ret    
   14000204f:	int3   
   140002050:	cmp    QWORD PTR [rcx+0x18],0x10
   140002055:	jb     0x14000205b
   140002057:	mov    rax,QWORD PTR [rcx]
   14000205a:	ret    
   14000205b:	mov    rax,rcx
   14000205e:	ret    
   14000205f:	int3   
   140002060:	cmp    QWORD PTR [rcx+0x18],0x8
   140002065:	jb     0x14000206b
   140002067:	mov    rax,QWORD PTR [rcx]
   14000206a:	ret    
   14000206b:	mov    rax,rcx
   14000206e:	ret    
   14000206f:	int3   
   140002070:	cmp    QWORD PTR [rcx+0x18],0x8
   140002075:	jb     0x14000207b
   140002077:	mov    rax,QWORD PTR [rcx]
   14000207a:	ret    
   14000207b:	mov    rax,rcx
   14000207e:	ret    
   14000207f:	int3   
   140002080:	test   rcx,rcx
   140002083:	jne    0x140002088
   140002085:	xor    eax,eax
   140002087:	ret    
   140002088:	sub    rcx,rdx
   14000208b:	sar    rcx,1
   14000208e:	mov    rax,rcx
   140002091:	ret    
   140002092:	int3   
   140002093:	int3   
   140002094:	int3   
   140002095:	int3   
   140002096:	int3   
   140002097:	int3   
   140002098:	int3   
   140002099:	int3   
   14000209a:	int3   
   14000209b:	int3   
   14000209c:	int3   
   14000209d:	int3   
   14000209e:	int3   
   14000209f:	int3   
   1400020a0:	mov    QWORD PTR [rsp+0x10],rbx
   1400020a5:	push   rdi
   1400020a6:	sub    rsp,0x20
   1400020aa:	mov    rdi,r8
   1400020ad:	mov    rbx,rcx
   1400020b0:	test   dl,dl
   1400020b2:	je     0x1400020dd
   1400020b4:	cmp    QWORD PTR [rcx+0x18],0x10
   1400020b9:	jb     0x1400020dd
   1400020bb:	mov    QWORD PTR [rsp+0x30],rsi
   1400020c0:	mov    rsi,QWORD PTR [rcx]
   1400020c3:	test   r8,r8
   1400020c6:	je     0x1400020d0
   1400020c8:	mov    rdx,rsi
   1400020cb:	call   0x1400056d0
   1400020d0:	mov    rcx,rsi
   1400020d3:	call   0x140005454
   1400020d8:	mov    rsi,QWORD PTR [rsp+0x30]
   1400020dd:	mov    QWORD PTR [rbx+0x18],0xf
   1400020e5:	mov    QWORD PTR [rbx+0x10],rdi
   1400020e9:	mov    BYTE PTR [rdi+rbx*1],0x0
   1400020ed:	mov    rbx,QWORD PTR [rsp+0x38]
   1400020f2:	add    rsp,0x20
   1400020f6:	pop    rdi
   1400020f7:	ret    
   1400020f8:	int3   
   1400020f9:	int3   
   1400020fa:	int3   
   1400020fb:	int3   
   1400020fc:	int3   
   1400020fd:	int3   
   1400020fe:	int3   
   1400020ff:	int3   
   140002100:	mov    QWORD PTR [rsp+0x10],rbx
   140002105:	push   rdi
   140002106:	sub    rsp,0x20
   14000210a:	mov    rdi,r8
   14000210d:	mov    rbx,rcx
   140002110:	test   dl,dl
   140002112:	je     0x140002140
   140002114:	cmp    QWORD PTR [rcx+0x18],0x8
   140002119:	jb     0x140002140
   14000211b:	mov    QWORD PTR [rsp+0x30],rsi
   140002120:	mov    rsi,QWORD PTR [rcx]
   140002123:	test   r8,r8
   140002126:	je     0x140002133
   140002128:	add    r8,r8
   14000212b:	mov    rdx,rsi
   14000212e:	call   0x1400056d0
   140002133:	mov    rcx,rsi
   140002136:	call   0x140005454
   14000213b:	mov    rsi,QWORD PTR [rsp+0x30]
   140002140:	mov    QWORD PTR [rbx+0x18],0x7
   140002148:	mov    QWORD PTR [rbx+0x10],rdi
   14000214c:	xor    eax,eax
   14000214e:	mov    WORD PTR [rbx+rdi*2],ax
   140002152:	mov    rbx,QWORD PTR [rsp+0x38]
   140002157:	add    rsp,0x20
   14000215b:	pop    rdi
   14000215c:	ret    
   14000215d:	int3   
   14000215e:	int3   
   14000215f:	int3   
   140002160:	sub    rsp,0x28
   140002164:	lea    rcx,[rip+0x2574d]        # 0x1400278b8
   14000216b:	call   0x1400051f4
   140002170:	int3   
   140002171:	int3   
   140002172:	int3   
   140002173:	int3   
   140002174:	int3   
   140002175:	int3   
   140002176:	int3   
   140002177:	int3   
   140002178:	int3   
   140002179:	int3   
   14000217a:	int3   
   14000217b:	int3   
   14000217c:	int3   
   14000217d:	int3   
   14000217e:	int3   
   14000217f:	int3   
   140002180:	sub    rsp,0x28
   140002184:	lea    rcx,[rip+0x2572d]        # 0x1400278b8
   14000218b:	call   0x1400051f4
   140002190:	int3   
   140002191:	int3   
   140002192:	int3   
   140002193:	int3   
   140002194:	int3   
   140002195:	int3   
   140002196:	int3   
   140002197:	int3   
   140002198:	int3   
   140002199:	int3   
   14000219a:	int3   
   14000219b:	int3   
   14000219c:	int3   
   14000219d:	int3   
   14000219e:	int3   
   14000219f:	int3   
   1400021a0:	sub    rsp,0x28
   1400021a4:	lea    rcx,[rip+0x2571d]        # 0x1400278c8
   1400021ab:	call   0x14000522c
   1400021b0:	int3   
   1400021b1:	int3   
   1400021b2:	int3   
   1400021b3:	int3   
   1400021b4:	int3   
   1400021b5:	int3   
   1400021b6:	int3   
   1400021b7:	int3   
   1400021b8:	int3   
   1400021b9:	int3   
   1400021ba:	int3   
   1400021bb:	int3   
   1400021bc:	int3   
   1400021bd:	int3   
   1400021be:	int3   
   1400021bf:	int3   
   1400021c0:	sub    rsp,0x28
   1400021c4:	lea    rcx,[rip+0x256fd]        # 0x1400278c8
   1400021cb:	call   0x14000522c
   1400021d0:	int3   
   1400021d1:	int3   
   1400021d2:	int3   
   1400021d3:	int3   
   1400021d4:	int3   
   1400021d5:	int3   
   1400021d6:	int3   
   1400021d7:	int3   
   1400021d8:	int3   
   1400021d9:	int3   
   1400021da:	int3   
   1400021db:	int3   
   1400021dc:	int3   
   1400021dd:	int3   
   1400021de:	int3   
   1400021df:	int3   
   1400021e0:	sub    rsp,0x28
   1400021e4:	xor    eax,eax
   1400021e6:	test   rdx,rdx
   1400021e9:	je     0x1400021fe
   1400021eb:	cmp    rdx,0xffffffffffffffff
   1400021ef:	ja     0x140002203
   1400021f1:	mov    rcx,rdx
   1400021f4:	call   0x1400053e8
   1400021f9:	test   rax,rax
   1400021fc:	je     0x140002203
   1400021fe:	add    rsp,0x28
   140002202:	ret    
   140002203:	call   0x14000514c
   140002208:	int3   
   140002209:	int3   
   14000220a:	int3   
   14000220b:	int3   
   14000220c:	int3   
   14000220d:	int3   
   14000220e:	int3   
   14000220f:	int3   
   140002210:	sub    rsp,0x28
   140002214:	xor    eax,eax
   140002216:	test   rdx,rdx
   140002219:	je     0x140002238
   14000221b:	movabs rax,0x7fffffffffffffff
   140002225:	cmp    rdx,rax
   140002228:	ja     0x14000223d
   14000222a:	lea    rcx,[rdx+rdx*1]
   14000222e:	call   0x1400053e8
   140002233:	test   rax,rax
   140002236:	je     0x14000223d
   140002238:	add    rsp,0x28
   14000223c:	ret    
   14000223d:	call   0x14000514c
   140002242:	int3   
   140002243:	int3   
   140002244:	int3   
   140002245:	int3   
   140002246:	int3   
   140002247:	int3   
   140002248:	int3   
   140002249:	int3   
   14000224a:	int3   
   14000224b:	int3   
   14000224c:	int3   
   14000224d:	int3   
   14000224e:	int3   
   14000224f:	int3   
   140002250:	sub    rsp,0x28
   140002254:	xor    eax,eax
   140002256:	test   rdx,rdx
   140002259:	je     0x14000226e
   14000225b:	cmp    rdx,0xffffffffffffffff
   14000225f:	ja     0x140002273
   140002261:	mov    rcx,rdx
   140002264:	call   0x1400053e8
   140002269:	test   rax,rax
   14000226c:	je     0x140002273
   14000226e:	add    rsp,0x28
   140002272:	ret    
   140002273:	call   0x14000514c
   140002278:	int3   
   140002279:	int3   
   14000227a:	int3   
   14000227b:	int3   
   14000227c:	int3   
   14000227d:	int3   
   14000227e:	int3   
   14000227f:	int3   
   140002280:	sub    rsp,0x28
   140002284:	xor    eax,eax
   140002286:	test   rdx,rdx
   140002289:	je     0x1400022a8
   14000228b:	movabs rax,0x7fffffffffffffff
   140002295:	cmp    rdx,rax
   140002298:	ja     0x1400022ad
   14000229a:	lea    rcx,[rdx+rdx*1]
   14000229e:	call   0x1400053e8
   1400022a3:	test   rax,rax
   1400022a6:	je     0x1400022ad
   1400022a8:	add    rsp,0x28
   1400022ac:	ret    
   1400022ad:	call   0x14000514c
   1400022b2:	int3   
   1400022b3:	int3   
   1400022b4:	int3   
   1400022b5:	int3   
   1400022b6:	int3   
   1400022b7:	int3   
   1400022b8:	int3   
   1400022b9:	int3   
   1400022ba:	int3   
   1400022bb:	int3   
   1400022bc:	int3   
   1400022bd:	int3   
   1400022be:	int3   
   1400022bf:	int3   
   1400022c0:	or     r9,0xffffffffffffffff
   1400022c4:	xor    r8d,r8d
   1400022c7:	jmp    0x1400022d0
   1400022cc:	int3   
   1400022cd:	int3   
   1400022ce:	int3   
   1400022cf:	int3   
   1400022d0:	mov    QWORD PTR [rsp+0x10],rbx
   1400022d5:	mov    QWORD PTR [rsp+0x18],rbp
   1400022da:	mov    QWORD PTR [rsp+0x20],rsi
   1400022df:	push   r14
   1400022e1:	sub    rsp,0x20
   1400022e5:	mov    rax,QWORD PTR [rdx+0x10]
   1400022e9:	mov    rsi,r9
   1400022ec:	mov    rbp,r8
   1400022ef:	mov    r14,rdx
   1400022f2:	mov    rbx,rcx
   1400022f5:	cmp    rax,r8
   1400022f8:	jb     0x1400023e5
   1400022fe:	sub    rax,r8
   140002301:	mov    r8,QWORD PTR [rcx+0x10]
   140002305:	cmp    rax,r9
   140002308:	cmovb  rsi,rax
   14000230c:	or     rax,0xffffffffffffffff
   140002310:	sub    rax,r8
   140002313:	cmp    rax,rsi
   140002316:	jbe    0x1400023f2
   14000231c:	mov    QWORD PTR [rsp+0x30],rdi
   140002321:	test   rsi,rsi
   140002324:	je     0x1400023c7
   14000232a:	lea    rdi,[r8+rsi*1]
   14000232e:	movabs rax,0x7ffffffffffffffe
   140002338:	cmp    rdi,rax
   14000233b:	ja     0x1400023ff
   140002341:	mov    rcx,QWORD PTR [rcx+0x18]
   140002345:	cmp    rcx,rdi
   140002348:	jae    0x140002370
   14000234a:	mov    rdx,rdi
   14000234d:	mov    rcx,rbx
   140002350:	call   0x140001c90
   140002355:	test   rdi,rdi
   140002358:	je     0x1400023c7
   14000235a:	cmp    QWORD PTR [r14+0x18],0x8
   14000235f:	jb     0x140002364
   140002361:	mov    r14,QWORD PTR [r14]
   140002364:	cmp    QWORD PTR [rbx+0x18],0x8
   140002369:	jb     0x140002391
   14000236b:	mov    rcx,QWORD PTR [rbx]
   14000236e:	jmp    0x140002394
   140002370:	test   rdi,rdi
   140002373:	jne    0x14000235a
   140002375:	xor    eax,eax
   140002377:	mov    QWORD PTR [rbx+0x10],rax
   14000237b:	cmp    rcx,0x8
   14000237f:	jb     0x140002389
   140002381:	mov    rcx,QWORD PTR [rbx]
   140002384:	mov    WORD PTR [rcx],ax
   140002387:	jmp    0x1400023c7
   140002389:	mov    rcx,rbx
   14000238c:	mov    WORD PTR [rbx],ax
   14000238f:	jmp    0x1400023c7
   140002391:	mov    rcx,rbx
   140002394:	test   rsi,rsi
   140002397:	je     0x1400023ae
   140002399:	mov    rax,QWORD PTR [rbx+0x10]
   14000239d:	lea    r8,[rsi+rsi*1]
   1400023a1:	lea    rdx,[r14+rbp*2]
   1400023a5:	lea    rcx,[rcx+rax*2]
   1400023a9:	call   0x1400056d0
   1400023ae:	cmp    QWORD PTR [rbx+0x18],0x8
   1400023b3:	mov    QWORD PTR [rbx+0x10],rdi
   1400023b7:	jb     0x1400023be
   1400023b9:	mov    rcx,QWORD PTR [rbx]
   1400023bc:	jmp    0x1400023c1
   1400023be:	mov    rcx,rbx
   1400023c1:	xor    eax,eax
   1400023c3:	mov    WORD PTR [rcx+rdi*2],ax
   1400023c7:	mov    rdi,QWORD PTR [rsp+0x30]
   1400023cc:	mov    rbp,QWORD PTR [rsp+0x40]
   1400023d1:	mov    rsi,QWORD PTR [rsp+0x48]
   1400023d6:	mov    rax,rbx
   1400023d9:	mov    rbx,QWORD PTR [rsp+0x38]
   1400023de:	add    rsp,0x20
   1400023e2:	pop    r14
   1400023e4:	ret    
   1400023e5:	lea    rcx,[rip+0x254dc]        # 0x1400278c8
   1400023ec:	call   0x14000522c
   1400023f1:	int3   
   1400023f2:	lea    rcx,[rip+0x254bf]        # 0x1400278b8
   1400023f9:	call   0x1400051f4
   1400023fe:	int3   
   1400023ff:	lea    rcx,[rip+0x254b2]        # 0x1400278b8
   140002406:	call   0x1400051f4
   14000240b:	int3   
   14000240c:	int3   
   14000240d:	int3   
   14000240e:	int3   
   14000240f:	int3   
   140002410:	cmp    WORD PTR [rdx],0x0
   140002414:	jne    0x14000241e
   140002416:	xor    r8d,r8d
   140002419:	jmp    0x140002440
   14000241e:	or     r8,0xffffffffffffffff
   140002422:	inc    r8
   140002425:	cmp    WORD PTR [rdx+r8*2],0x0
   14000242b:	jne    0x140002422
   14000242d:	jmp    0x140002440
   140002432:	int3   
   140002433:	int3   
   140002434:	int3   
   140002435:	int3   
   140002436:	int3   
   140002437:	int3   
   140002438:	int3   
   140002439:	int3   
   14000243a:	int3   
   14000243b:	int3   
   14000243c:	int3   
   14000243d:	int3   
   14000243e:	int3   
   14000243f:	int3   
   140002440:	mov    QWORD PTR [rsp+0x10],rbx
   140002445:	mov    QWORD PTR [rsp+0x18],rsi
   14000244a:	push   r14
   14000244c:	sub    rsp,0x20
   140002450:	mov    r14,r8
   140002453:	mov    rsi,rdx
   140002456:	mov    rbx,rcx
   140002459:	test   rdx,rdx
   14000245c:	je     0x1400024c0
   14000245e:	mov    rdx,QWORD PTR [rcx+0x18]
   140002462:	cmp    rdx,0x8
   140002466:	jb     0x14000246d
   140002468:	mov    rax,QWORD PTR [rcx]
   14000246b:	jmp    0x140002470
   14000246d:	mov    rax,rcx
   140002470:	cmp    rsi,rax
   140002473:	jb     0x1400024c0
   140002475:	cmp    rdx,0x8
   140002479:	jb     0x14000247e
   14000247b:	mov    rcx,QWORD PTR [rcx]
   14000247e:	mov    rax,QWORD PTR [rbx+0x10]
   140002482:	lea    rcx,[rcx+rax*2]
   140002486:	cmp    rcx,rsi
   140002489:	jbe    0x1400024c0
   14000248b:	cmp    rdx,0x8
   14000248f:	jb     0x140002496
   140002491:	mov    rax,QWORD PTR [rbx]
   140002494:	jmp    0x140002499
   140002496:	mov    rax,rbx
   140002499:	sub    rsi,rax
   14000249c:	mov    r9,r8
   14000249f:	mov    rdx,rbx
   1400024a2:	sar    rsi,1
   1400024a5:	mov    rcx,rbx
   1400024a8:	mov    r8,rsi
   1400024ab:	mov    rbx,QWORD PTR [rsp+0x38]
   1400024b0:	mov    rsi,QWORD PTR [rsp+0x40]
   1400024b5:	add    rsp,0x20
   1400024b9:	pop    r14
   1400024bb:	jmp    0x1400022d0
   1400024c0:	mov    r8,QWORD PTR [rbx+0x10]
   1400024c4:	or     rax,0xffffffffffffffff
   1400024c8:	sub    rax,r8
   1400024cb:	cmp    rax,r14
   1400024ce:	jbe    0x14000258d
   1400024d4:	mov    QWORD PTR [rsp+0x30],rdi
   1400024d9:	test   r14,r14
   1400024dc:	je     0x140002574
   1400024e2:	lea    rdi,[r8+r14*1]
   1400024e6:	movabs rax,0x7ffffffffffffffe
   1400024f0:	cmp    rdi,rax
   1400024f3:	ja     0x14000259a
   1400024f9:	mov    rcx,QWORD PTR [rbx+0x18]
   1400024fd:	cmp    rcx,rdi
   140002500:	jae    0x14000251e
   140002502:	mov    rdx,rdi
   140002505:	mov    rcx,rbx
   140002508:	call   0x140001c90
   14000250d:	test   rdi,rdi
   140002510:	je     0x140002574
   140002512:	cmp    QWORD PTR [rbx+0x18],0x8
   140002517:	jb     0x14000253f
   140002519:	mov    rcx,QWORD PTR [rbx]
   14000251c:	jmp    0x140002542
   14000251e:	test   rdi,rdi
   140002521:	jne    0x140002512
   140002523:	xor    eax,eax
   140002525:	mov    QWORD PTR [rbx+0x10],rax
   140002529:	cmp    rcx,0x8
   14000252d:	jb     0x140002537
   14000252f:	mov    rcx,QWORD PTR [rbx]
   140002532:	mov    WORD PTR [rcx],ax
   140002535:	jmp    0x140002574
   140002537:	mov    rcx,rbx
   14000253a:	mov    WORD PTR [rbx],ax
   14000253d:	jmp    0x140002574
   14000253f:	mov    rcx,rbx
   140002542:	test   r14,r14
   140002545:	je     0x14000255b
   140002547:	mov    rax,QWORD PTR [rbx+0x10]
   14000254b:	lea    r8,[r14+r14*1]
   14000254f:	mov    rdx,rsi
   140002552:	lea    rcx,[rcx+rax*2]
   140002556:	call   0x1400056d0
   14000255b:	cmp    QWORD PTR [rbx+0x18],0x8
   140002560:	mov    QWORD PTR [rbx+0x10],rdi
   140002564:	jb     0x14000256b
   140002566:	mov    rcx,QWORD PTR [rbx]
   140002569:	jmp    0x14000256e
   14000256b:	mov    rcx,rbx
   14000256e:	xor    eax,eax
   140002570:	mov    WORD PTR [rcx+rdi*2],ax
   140002574:	mov    rdi,QWORD PTR [rsp+0x30]
   140002579:	mov    rsi,QWORD PTR [rsp+0x40]
   14000257e:	mov    rax,rbx
   140002581:	mov    rbx,QWORD PTR [rsp+0x38]
   140002586:	add    rsp,0x20
   14000258a:	pop    r14
   14000258c:	ret    
   14000258d:	lea    rcx,[rip+0x25324]        # 0x1400278b8
   140002594:	call   0x1400051f4
   140002599:	int3   
   14000259a:	lea    rcx,[rip+0x25317]        # 0x1400278b8
   1400025a1:	call   0x1400051f4
   1400025a6:	int3   
   1400025a7:	int3   
   1400025a8:	int3   
   1400025a9:	int3   
   1400025aa:	int3   
   1400025ab:	int3   
   1400025ac:	int3   
   1400025ad:	int3   
   1400025ae:	int3   
   1400025af:	int3   
   1400025b0:	mov    QWORD PTR [rsp+0x18],rbx
   1400025b5:	mov    QWORD PTR [rsp+0x20],rbp
   1400025ba:	push   r14
   1400025bc:	sub    rsp,0x20
   1400025c0:	or     rax,0xffffffffffffffff
   1400025c4:	movzx  r14d,r8w
   1400025c8:	mov    r8,QWORD PTR [rcx+0x10]
   1400025cc:	sub    rax,r8
   1400025cf:	mov    rbp,rdx
   1400025d2:	mov    rbx,rcx
   1400025d5:	cmp    rax,rdx
   1400025d8:	jbe    0x1400026bf
   1400025de:	mov    QWORD PTR [rsp+0x30],rsi
   1400025e3:	test   rdx,rdx
   1400025e6:	je     0x1400026a6
   1400025ec:	lea    rsi,[r8+rdx*1]
   1400025f0:	movabs rax,0x7ffffffffffffffe
   1400025fa:	cmp    rsi,rax
   1400025fd:	ja     0x1400026cc
   140002603:	mov    rcx,QWORD PTR [rcx+0x18]
   140002607:	cmp    rcx,rsi
   14000260a:	jae    0x14000263b
   14000260c:	mov    rdx,rsi
   14000260f:	mov    rcx,rbx
   140002612:	call   0x140001c90
   140002617:	test   rsi,rsi
   14000261a:	je     0x1400026a6
   140002620:	mov    rcx,QWORD PTR [rbx+0x10]
   140002624:	cmp    rbp,0x1
   140002628:	jne    0x140002666
   14000262a:	cmp    QWORD PTR [rbx+0x18],0x8
   14000262f:	jb     0x14000265c
   140002631:	mov    rax,QWORD PTR [rbx]
   140002634:	mov    WORD PTR [rax+rcx*2],r14w
   140002639:	jmp    0x14000268d
   14000263b:	test   rsi,rsi
   14000263e:	jne    0x140002620
   140002640:	xor    eax,eax
   140002642:	mov    QWORD PTR [rbx+0x10],rax
   140002646:	cmp    rcx,0x8
   14000264a:	jb     0x140002654
   14000264c:	mov    rcx,QWORD PTR [rbx]
   14000264f:	mov    WORD PTR [rcx],ax
   140002652:	jmp    0x1400026a6
   140002654:	mov    rcx,rbx
   140002657:	mov    WORD PTR [rbx],ax
   14000265a:	jmp    0x1400026a6
   14000265c:	mov    rax,rbx
   14000265f:	mov    WORD PTR [rbx+rcx*2],r14w
   140002664:	jmp    0x14000268d
   140002666:	cmp    QWORD PTR [rbx+0x18],0x8
   14000266b:	mov    QWORD PTR [rsp+0x38],rdi
   140002670:	jb     0x140002677
   140002672:	mov    rax,QWORD PTR [rbx]
   140002675:	jmp    0x14000267a
   140002677:	mov    rax,rbx
   14000267a:	lea    rdi,[rax+rcx*2]
   14000267e:	movzx  eax,r14w
   140002682:	mov    rcx,rbp
   140002685:	rep stos WORD PTR es:[rdi],ax
   140002688:	mov    rdi,QWORD PTR [rsp+0x38]
   14000268d:	cmp    QWORD PTR [rbx+0x18],0x8
   140002692:	mov    QWORD PTR [rbx+0x10],rsi
   140002696:	jb     0x14000269d
   140002698:	mov    rcx,QWORD PTR [rbx]
   14000269b:	jmp    0x1400026a0
   14000269d:	mov    rcx,rbx
   1400026a0:	xor    eax,eax
   1400026a2:	mov    WORD PTR [rcx+rsi*2],ax
   1400026a6:	mov    rsi,QWORD PTR [rsp+0x30]
   1400026ab:	mov    rbp,QWORD PTR [rsp+0x48]
   1400026b0:	mov    rax,rbx
   1400026b3:	mov    rbx,QWORD PTR [rsp+0x40]
   1400026b8:	add    rsp,0x20
   1400026bc:	pop    r14
   1400026be:	ret    
   1400026bf:	lea    rcx,[rip+0x251f2]        # 0x1400278b8
   1400026c6:	call   0x1400051f4
   1400026cb:	int3   
   1400026cc:	lea    rcx,[rip+0x251e5]        # 0x1400278b8
   1400026d3:	call   0x1400051f4
   1400026d8:	int3   
   1400026d9:	int3   
   1400026da:	int3   
   1400026db:	int3   
   1400026dc:	int3   
   1400026dd:	int3   
   1400026de:	int3   
   1400026df:	int3   
   1400026e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400026e5:	mov    QWORD PTR [rsp+0x10],rbp
   1400026ea:	mov    QWORD PTR [rsp+0x18],rsi
   1400026ef:	push   rdi
   1400026f0:	sub    rsp,0x20
   1400026f4:	mov    rdi,QWORD PTR [rdx+0x10]
   1400026f8:	mov    rbp,r8
   1400026fb:	mov    rsi,rdx
   1400026fe:	mov    rbx,rcx
   140002701:	cmp    rdi,r8
   140002704:	jb     0x1400027e4
   14000270a:	sub    rdi,r8
   14000270d:	cmp    r9,rdi
   140002710:	cmovb  rdi,r9
   140002714:	cmp    rcx,rdx
   140002717:	jne    0x140002748
   140002719:	lea    rax,[rdi+r8*1]
   14000271d:	cmp    QWORD PTR [rcx+0x10],rax
   140002721:	jb     0x1400027f1
   140002727:	cmp    QWORD PTR [rcx+0x18],0x10
   14000272c:	mov    QWORD PTR [rcx+0x10],rax
   140002730:	jb     0x140002735
   140002732:	mov    rcx,QWORD PTR [rcx]
   140002735:	mov    BYTE PTR [rcx+rax*1],0x0
   140002739:	xor    edx,edx
   14000273b:	mov    rcx,rbx
   14000273e:	call   0x140002e80
   140002743:	jmp    0x1400027cc
   140002748:	cmp    rdi,0xfffffffffffffffe
   14000274c:	ja     0x1400027fe
   140002752:	mov    rax,QWORD PTR [rcx+0x18]
   140002756:	cmp    rax,rdi
   140002759:	jae    0x140002782
   14000275b:	mov    r8,QWORD PTR [rcx+0x10]
   14000275f:	mov    rdx,rdi
   140002762:	call   0x140001b80
   140002767:	test   rdi,rdi
   14000276a:	je     0x1400027cc
   14000276c:	cmp    QWORD PTR [rsi+0x18],0x10
   140002771:	jb     0x140002776
   140002773:	mov    rsi,QWORD PTR [rsi]
   140002776:	cmp    QWORD PTR [rbx+0x18],0x10
   14000277b:	jb     0x1400027a1
   14000277d:	mov    rcx,QWORD PTR [rbx]
   140002780:	jmp    0x1400027a4
   140002782:	test   rdi,rdi
   140002785:	jne    0x14000276c
   140002787:	mov    QWORD PTR [rcx+0x10],rdi
   14000278b:	cmp    rax,0x10
   14000278f:	jb     0x140002799
   140002791:	mov    rax,QWORD PTR [rcx]
   140002794:	mov    BYTE PTR [rax],dil
   140002797:	jmp    0x1400027cc
   140002799:	mov    rax,rcx
   14000279c:	mov    BYTE PTR [rcx],0x0
   14000279f:	jmp    0x1400027cc
   1400027a1:	mov    rcx,rbx
   1400027a4:	test   rdi,rdi
   1400027a7:	je     0x1400027b5
   1400027a9:	lea    rdx,[rsi+rbp*1]
   1400027ad:	mov    r8,rdi
   1400027b0:	call   0x1400056d0
   1400027b5:	cmp    QWORD PTR [rbx+0x18],0x10
   1400027ba:	mov    QWORD PTR [rbx+0x10],rdi
   1400027be:	jb     0x1400027c5
   1400027c0:	mov    rax,QWORD PTR [rbx]
   1400027c3:	jmp    0x1400027c8
   1400027c5:	mov    rax,rbx
   1400027c8:	mov    BYTE PTR [rax+rdi*1],0x0
   1400027cc:	mov    rbp,QWORD PTR [rsp+0x38]
   1400027d1:	mov    rsi,QWORD PTR [rsp+0x40]
   1400027d6:	mov    rax,rbx
   1400027d9:	mov    rbx,QWORD PTR [rsp+0x30]
   1400027de:	add    rsp,0x20
   1400027e2:	pop    rdi
   1400027e3:	ret    
   1400027e4:	lea    rcx,[rip+0x250dd]        # 0x1400278c8
   1400027eb:	call   0x14000522c
   1400027f0:	int3   
   1400027f1:	lea    rcx,[rip+0x250d0]        # 0x1400278c8
   1400027f8:	call   0x14000522c
   1400027fd:	int3   
   1400027fe:	lea    rcx,[rip+0x250b3]        # 0x1400278b8
   140002805:	call   0x1400051f4
   14000280a:	int3   
   14000280b:	int3   
   14000280c:	int3   
   14000280d:	int3   
   14000280e:	int3   
   14000280f:	int3   
   140002810:	cmp    BYTE PTR [rdx],0x0
   140002813:	jne    0x14000281d
   140002815:	xor    r8d,r8d
   140002818:	jmp    0x140002830
   14000281d:	or     r8,0xffffffffffffffff
   140002821:	inc    r8
   140002824:	cmp    BYTE PTR [rdx+r8*1],0x0
   140002829:	jne    0x140002821
   14000282b:	jmp    0x140002830
   140002830:	mov    QWORD PTR [rsp+0x8],rbx
   140002835:	mov    QWORD PTR [rsp+0x10],rsi
   14000283a:	push   rdi
   14000283b:	sub    rsp,0x20
   14000283f:	mov    rdi,r8
   140002842:	mov    rsi,rdx
   140002845:	mov    rbx,rcx
   140002848:	test   rdx,rdx
   14000284b:	je     0x1400028a7
   14000284d:	mov    rdx,QWORD PTR [rcx+0x18]
   140002851:	cmp    rdx,0x10
   140002855:	jb     0x14000285c
   140002857:	mov    rax,QWORD PTR [rcx]
   14000285a:	jmp    0x14000285f
   14000285c:	mov    rax,rcx
   14000285f:	cmp    rsi,rax
   140002862:	jb     0x1400028a7
   140002864:	cmp    rdx,0x10
   140002868:	jb     0x14000286d
   14000286a:	mov    rcx,QWORD PTR [rcx]
   14000286d:	add    rcx,QWORD PTR [rbx+0x10]
   140002871:	cmp    rcx,rsi
   140002874:	jbe    0x1400028a7
   140002876:	cmp    rdx,0x10
   14000287a:	jb     0x140002881
   14000287c:	mov    rax,QWORD PTR [rbx]
   14000287f:	jmp    0x140002884
   140002881:	mov    rax,rbx
   140002884:	sub    rsi,rax
   140002887:	mov    r9,r8
   14000288a:	mov    rdx,rbx
   14000288d:	mov    r8,rsi
   140002890:	mov    rcx,rbx
   140002893:	mov    rbx,QWORD PTR [rsp+0x30]
   140002898:	mov    rsi,QWORD PTR [rsp+0x38]
   14000289d:	add    rsp,0x20
   1400028a1:	pop    rdi
   1400028a2:	jmp    0x1400026e0
   1400028a7:	cmp    r8,0xfffffffffffffffe
   1400028ab:	ja     0x140002955
   1400028b1:	mov    rax,QWORD PTR [rbx+0x18]
   1400028b5:	cmp    rax,r8
   1400028b8:	jae    0x1400028da
   1400028ba:	mov    r8,QWORD PTR [rbx+0x10]
   1400028be:	mov    rdx,rdi
   1400028c1:	mov    rcx,rbx
   1400028c4:	call   0x140001b80
   1400028c9:	test   rdi,rdi
   1400028cc:	je     0x140002942
   1400028ce:	cmp    QWORD PTR [rbx+0x18],0x10
   1400028d3:	jb     0x140002918
   1400028d5:	mov    rcx,QWORD PTR [rbx]
   1400028d8:	jmp    0x14000291b
   1400028da:	test   r8,r8
   1400028dd:	jne    0x1400028c9
   1400028df:	mov    QWORD PTR [rbx+0x10],r8
   1400028e3:	cmp    rax,0x10
   1400028e7:	jb     0x140002902
   1400028e9:	mov    rax,QWORD PTR [rbx]
   1400028ec:	mov    BYTE PTR [rax],r8b
   1400028ef:	mov    rax,rbx
   1400028f2:	mov    rbx,QWORD PTR [rsp+0x30]
   1400028f7:	mov    rsi,QWORD PTR [rsp+0x38]
   1400028fc:	add    rsp,0x20
   140002900:	pop    rdi
   140002901:	ret    
   140002902:	mov    rax,rbx
   140002905:	mov    BYTE PTR [rbx],0x0
   140002908:	mov    rbx,QWORD PTR [rsp+0x30]
   14000290d:	mov    rsi,QWORD PTR [rsp+0x38]
   140002912:	add    rsp,0x20
   140002916:	pop    rdi
   140002917:	ret    
   140002918:	mov    rcx,rbx
   14000291b:	test   rdi,rdi
   14000291e:	je     0x14000292b
   140002920:	mov    r8,rdi
   140002923:	mov    rdx,rsi
   140002926:	call   0x1400056d0
   14000292b:	cmp    QWORD PTR [rbx+0x18],0x10
   140002930:	mov    QWORD PTR [rbx+0x10],rdi
   140002934:	jb     0x14000293b
   140002936:	mov    rax,QWORD PTR [rbx]
   140002939:	jmp    0x14000293e
   14000293b:	mov    rax,rbx
   14000293e:	mov    BYTE PTR [rax+rdi*1],0x0
   140002942:	mov    rsi,QWORD PTR [rsp+0x38]
   140002947:	mov    rax,rbx
   14000294a:	mov    rbx,QWORD PTR [rsp+0x30]
   14000294f:	add    rsp,0x20
   140002953:	pop    rdi
   140002954:	ret    
   140002955:	lea    rcx,[rip+0x24f5c]        # 0x1400278b8
   14000295c:	call   0x1400051f4
   140002961:	int3   
   140002962:	int3   
   140002963:	int3   
   140002964:	int3   
   140002965:	int3   
   140002966:	int3   
   140002967:	int3   
   140002968:	int3   
   140002969:	int3   
   14000296a:	int3   
   14000296b:	int3   
   14000296c:	int3   
   14000296d:	int3   
   14000296e:	int3   
   14000296f:	int3   
   140002970:	mov    QWORD PTR [rsp+0x8],rbx
   140002975:	mov    QWORD PTR [rsp+0x10],rbp
   14000297a:	mov    QWORD PTR [rsp+0x18],rsi
   14000297f:	push   rdi
   140002980:	sub    rsp,0x20
   140002984:	mov    rdi,QWORD PTR [rdx+0x10]
   140002988:	mov    rbp,r8
   14000298b:	mov    rsi,rdx
   14000298e:	mov    rbx,rcx
   140002991:	cmp    rdi,r8
   140002994:	jb     0x140002a8c
   14000299a:	sub    rdi,r8
   14000299d:	cmp    r9,rdi
   1400029a0:	cmovb  rdi,r9
   1400029a4:	cmp    rcx,rdx
   1400029a7:	jne    0x1400029df
   1400029a9:	lea    rcx,[rdi+r8*1]
   1400029ad:	cmp    QWORD PTR [rbx+0x10],rcx
   1400029b1:	jb     0x140002a99
   1400029b7:	cmp    QWORD PTR [rbx+0x18],0x8
   1400029bc:	mov    QWORD PTR [rbx+0x10],rcx
   1400029c0:	jb     0x1400029c7
   1400029c2:	mov    rdx,QWORD PTR [rbx]
   1400029c5:	jmp    0x1400029ca
   1400029c7:	mov    rdx,rbx
   1400029ca:	xor    eax,eax
   1400029cc:	mov    WORD PTR [rdx+rcx*2],ax
   1400029d0:	xor    edx,edx
   1400029d2:	mov    rcx,rbx
   1400029d5:	call   0x140002f90
   1400029da:	jmp    0x140002a74
   1400029df:	movabs rax,0x7ffffffffffffffe
   1400029e9:	cmp    rdi,rax
   1400029ec:	ja     0x140002aa6
   1400029f2:	mov    rcx,QWORD PTR [rcx+0x18]
   1400029f6:	cmp    rcx,rdi
   1400029f9:	jae    0x140002a25
   1400029fb:	mov    r8,QWORD PTR [rbx+0x10]
   1400029ff:	mov    rdx,rdi
   140002a02:	mov    rcx,rbx
   140002a05:	call   0x140001c90
   140002a0a:	test   rdi,rdi
   140002a0d:	je     0x140002a74
   140002a0f:	cmp    QWORD PTR [rsi+0x18],0x8
   140002a14:	jb     0x140002a19
   140002a16:	mov    rsi,QWORD PTR [rsi]
   140002a19:	cmp    QWORD PTR [rbx+0x18],0x8
   140002a1e:	jb     0x140002a46
   140002a20:	mov    rcx,QWORD PTR [rbx]
   140002a23:	jmp    0x140002a49
   140002a25:	test   rdi,rdi
   140002a28:	jne    0x140002a0f
   140002a2a:	xor    eax,eax
   140002a2c:	mov    QWORD PTR [rbx+0x10],rax
   140002a30:	cmp    rcx,0x8
   140002a34:	jb     0x140002a3e
   140002a36:	mov    rcx,QWORD PTR [rbx]
   140002a39:	mov    WORD PTR [rcx],ax
   140002a3c:	jmp    0x140002a74
   140002a3e:	mov    rcx,rbx
   140002a41:	mov    WORD PTR [rbx],ax
   140002a44:	jmp    0x140002a74
   140002a46:	mov    rcx,rbx
   140002a49:	test   rdi,rdi
   140002a4c:	je     0x140002a5b
   140002a4e:	lea    r8,[rdi+rdi*1]
   140002a52:	lea    rdx,[rsi+rbp*2]
   140002a56:	call   0x1400056d0
   140002a5b:	cmp    QWORD PTR [rbx+0x18],0x8
   140002a60:	mov    QWORD PTR [rbx+0x10],rdi
   140002a64:	jb     0x140002a6b
   140002a66:	mov    rcx,QWORD PTR [rbx]
   140002a69:	jmp    0x140002a6e
   140002a6b:	mov    rcx,rbx
   140002a6e:	xor    eax,eax
   140002a70:	mov    WORD PTR [rcx+rdi*2],ax
   140002a74:	mov    rbp,QWORD PTR [rsp+0x38]
   140002a79:	mov    rsi,QWORD PTR [rsp+0x40]
   140002a7e:	mov    rax,rbx
   140002a81:	mov    rbx,QWORD PTR [rsp+0x30]
   140002a86:	add    rsp,0x20
   140002a8a:	pop    rdi
   140002a8b:	ret    
   140002a8c:	lea    rcx,[rip+0x24e35]        # 0x1400278c8
   140002a93:	call   0x14000522c
   140002a98:	int3   
   140002a99:	lea    rcx,[rip+0x24e28]        # 0x1400278c8
   140002aa0:	call   0x14000522c
   140002aa5:	int3   
   140002aa6:	lea    rcx,[rip+0x24e0b]        # 0x1400278b8
   140002aad:	call   0x1400051f4
   140002ab2:	int3   
   140002ab3:	int3   
   140002ab4:	int3   
   140002ab5:	int3   
   140002ab6:	int3   
   140002ab7:	int3   
   140002ab8:	int3   
   140002ab9:	int3   
   140002aba:	int3   
   140002abb:	int3   
   140002abc:	int3   
   140002abd:	int3   
   140002abe:	int3   
   140002abf:	int3   
   140002ac0:	cmp    WORD PTR [rdx],0x0
   140002ac4:	jne    0x140002ace
   140002ac6:	xor    r8d,r8d
   140002ac9:	jmp    0x140002af0
   140002ace:	or     r8,0xffffffffffffffff
   140002ad2:	inc    r8
   140002ad5:	cmp    WORD PTR [rdx+r8*2],0x0
   140002adb:	jne    0x140002ad2
   140002add:	jmp    0x140002af0
   140002ae2:	int3   
   140002ae3:	int3   
   140002ae4:	int3   
   140002ae5:	int3   
   140002ae6:	int3   
   140002ae7:	int3   
   140002ae8:	int3   
   140002ae9:	int3   
   140002aea:	int3   
   140002aeb:	int3   
   140002aec:	int3   
   140002aed:	int3   
   140002aee:	int3   
   140002aef:	int3   
   140002af0:	mov    QWORD PTR [rsp+0x8],rbx
   140002af5:	mov    QWORD PTR [rsp+0x10],rsi
   140002afa:	push   rdi
   140002afb:	sub    rsp,0x20
   140002aff:	mov    rdi,r8
   140002b02:	mov    rsi,rdx
   140002b05:	mov    rbx,rcx
   140002b08:	test   rdx,rdx
   140002b0b:	je     0x140002b6e
   140002b0d:	mov    rdx,QWORD PTR [rcx+0x18]
   140002b11:	cmp    rdx,0x8
   140002b15:	jb     0x140002b1c
   140002b17:	mov    rax,QWORD PTR [rcx]
   140002b1a:	jmp    0x140002b1f
   140002b1c:	mov    rax,rcx
   140002b1f:	cmp    rsi,rax
   140002b22:	jb     0x140002b6e
   140002b24:	cmp    rdx,0x8
   140002b28:	jb     0x140002b2d
   140002b2a:	mov    rcx,QWORD PTR [rcx]
   140002b2d:	mov    rax,QWORD PTR [rbx+0x10]
   140002b31:	lea    rcx,[rcx+rax*2]
   140002b35:	cmp    rcx,rsi
   140002b38:	jbe    0x140002b6e
   140002b3a:	cmp    rdx,0x8
   140002b3e:	jb     0x140002b45
   140002b40:	mov    rax,QWORD PTR [rbx]
   140002b43:	jmp    0x140002b48
   140002b45:	mov    rax,rbx
   140002b48:	sub    rsi,rax
   140002b4b:	mov    r9,r8
   140002b4e:	mov    rdx,rbx
   140002b51:	sar    rsi,1
   140002b54:	mov    rcx,rbx
   140002b57:	mov    r8,rsi
   140002b5a:	mov    rbx,QWORD PTR [rsp+0x30]
   140002b5f:	mov    rsi,QWORD PTR [rsp+0x38]
   140002b64:	add    rsp,0x20
   140002b68:	pop    rdi
   140002b69:	jmp    0x140002970
   140002b6e:	movabs rax,0x7ffffffffffffffe
   140002b78:	cmp    r8,rax
   140002b7b:	ja     0x140002c2d
   140002b81:	mov    rcx,QWORD PTR [rbx+0x18]
   140002b85:	cmp    rcx,r8
   140002b88:	jae    0x140002baa
   140002b8a:	mov    r8,QWORD PTR [rbx+0x10]
   140002b8e:	mov    rdx,rdi
   140002b91:	mov    rcx,rbx
   140002b94:	call   0x140001c90
   140002b99:	test   rdi,rdi
   140002b9c:	je     0x140002c1a
   140002b9e:	cmp    QWORD PTR [rbx+0x18],0x8
   140002ba3:	jb     0x140002bed
   140002ba5:	mov    rcx,QWORD PTR [rbx]
   140002ba8:	jmp    0x140002bf0
   140002baa:	test   r8,r8
   140002bad:	jne    0x140002b99
   140002baf:	xor    eax,eax
   140002bb1:	mov    QWORD PTR [rbx+0x10],rax
   140002bb5:	cmp    rcx,0x8
   140002bb9:	jb     0x140002bd4
   140002bbb:	mov    rcx,QWORD PTR [rbx]
   140002bbe:	mov    WORD PTR [rcx],ax
   140002bc1:	mov    rax,rbx
   140002bc4:	mov    rbx,QWORD PTR [rsp+0x30]
   140002bc9:	mov    rsi,QWORD PTR [rsp+0x38]
   140002bce:	add    rsp,0x20
   140002bd2:	pop    rdi
   140002bd3:	ret    
   140002bd4:	mov    WORD PTR [rbx],ax
   140002bd7:	mov    rcx,rbx
   140002bda:	mov    rax,rbx
   140002bdd:	mov    rbx,QWORD PTR [rsp+0x30]
   140002be2:	mov    rsi,QWORD PTR [rsp+0x38]
   140002be7:	add    rsp,0x20
   140002beb:	pop    rdi
   140002bec:	ret    
   140002bed:	mov    rcx,rbx
   140002bf0:	test   rdi,rdi
   140002bf3:	je     0x140002c01
   140002bf5:	lea    r8,[rdi+rdi*1]
   140002bf9:	mov    rdx,rsi
   140002bfc:	call   0x1400056d0
   140002c01:	cmp    QWORD PTR [rbx+0x18],0x8
   140002c06:	mov    QWORD PTR [rbx+0x10],rdi
   140002c0a:	jb     0x140002c11
   140002c0c:	mov    rcx,QWORD PTR [rbx]
   140002c0f:	jmp    0x140002c14
   140002c11:	mov    rcx,rbx
   140002c14:	xor    eax,eax
   140002c16:	mov    WORD PTR [rcx+rdi*2],ax
   140002c1a:	mov    rsi,QWORD PTR [rsp+0x38]
   140002c1f:	mov    rax,rbx
   140002c22:	mov    rbx,QWORD PTR [rsp+0x30]
   140002c27:	add    rsp,0x20
   140002c2b:	pop    rdi
   140002c2c:	ret    
   140002c2d:	lea    rcx,[rip+0x24c84]        # 0x1400278b8
   140002c34:	call   0x1400051f4
   140002c39:	int3   
   140002c3a:	int3   
   140002c3b:	int3   
   140002c3c:	int3   
   140002c3d:	int3   
   140002c3e:	int3   
   140002c3f:	int3   
   140002c40:	movzx  eax,BYTE PTR [rdx]
   140002c43:	mov    BYTE PTR [rcx],al
   140002c45:	ret    
   140002c46:	int3   
   140002c47:	int3   
   140002c48:	int3   
   140002c49:	int3   
   140002c4a:	int3   
   140002c4b:	int3   
   140002c4c:	int3   
   140002c4d:	int3   
   140002c4e:	int3   
   140002c4f:	int3   
   140002c50:	sub    rsp,0x8
   140002c54:	mov    r9,rcx
   140002c57:	test   rdx,rdx
   140002c5a:	je     0x140002c71
   140002c5c:	mov    QWORD PTR [rsp],rdi
   140002c60:	mov    rdi,rcx
   140002c63:	movzx  eax,r8w
   140002c67:	mov    rcx,rdx
   140002c6a:	rep stos WORD PTR es:[rdi],ax
   140002c6d:	mov    rdi,QWORD PTR [rsp]
   140002c71:	mov    rax,r9
   140002c74:	add    rsp,0x8
   140002c78:	ret    
   140002c79:	int3   
   140002c7a:	int3   
   140002c7b:	int3   
   140002c7c:	int3   
   140002c7d:	int3   
   140002c7e:	int3   
   140002c7f:	int3   
   140002c80:	movzx  eax,WORD PTR [rdx]
   140002c83:	mov    WORD PTR [rcx],ax
   140002c86:	ret    
   140002c87:	int3   
   140002c88:	int3   
   140002c89:	int3   
   140002c8a:	int3   
   140002c8b:	int3   
   140002c8c:	int3   
   140002c8d:	int3   
   140002c8e:	int3   
   140002c8f:	int3   
   140002c90:	cmp    QWORD PTR [rcx+0x18],0x8
   140002c95:	jb     0x140002ca1
   140002c97:	mov    rax,QWORD PTR [rcx]
   140002c9a:	mov    QWORD PTR [rdx],rax
   140002c9d:	mov    rax,rdx
   140002ca0:	ret    
   140002ca1:	mov    QWORD PTR [rdx],rcx
   140002ca4:	mov    rax,rdx
   140002ca7:	ret    
   140002ca8:	int3   
   140002ca9:	int3   
   140002caa:	int3   
   140002cab:	int3   
   140002cac:	int3   
   140002cad:	int3   
   140002cae:	int3   
   140002caf:	int3   
   140002cb0:	cmp    QWORD PTR [rcx+0x18],0x8
   140002cb5:	jb     0x140002cbb
   140002cb7:	mov    rax,QWORD PTR [rcx]
   140002cba:	ret    
   140002cbb:	mov    rax,rcx
   140002cbe:	ret    
   140002cbf:	int3   
   140002cc0:	mov    rax,QWORD PTR [rcx+0x8]
   140002cc4:	ret    
   140002cc5:	int3   
   140002cc6:	int3   
   140002cc7:	int3   
   140002cc8:	int3   
   140002cc9:	int3   
   140002cca:	int3   
   140002ccb:	int3   
   140002ccc:	int3   
   140002ccd:	int3   
   140002cce:	int3   
   140002ccf:	int3   
   140002cd0:	mov    rax,QWORD PTR [rcx+0x8]
   140002cd4:	ret    
   140002cd5:	int3   
   140002cd6:	int3   
   140002cd7:	int3   
   140002cd8:	int3   
   140002cd9:	int3   
   140002cda:	int3   
   140002cdb:	int3   
   140002cdc:	int3   
   140002cdd:	int3   
   140002cde:	int3   
   140002cdf:	int3   
   140002ce0:	rex push rbx
   140002ce2:	sub    rsp,0x20
   140002ce6:	mov    rbx,rcx
   140002ce9:	test   r8,r8
   140002cec:	je     0x140002cf3
   140002cee:	call   0x1400056d0
   140002cf3:	mov    rax,rbx
   140002cf6:	add    rsp,0x20
   140002cfa:	pop    rbx
   140002cfb:	ret    
   140002cfc:	int3   
   140002cfd:	int3   
   140002cfe:	int3   
   140002cff:	int3   
   140002d00:	rex push rbx
   140002d02:	sub    rsp,0x20
   140002d06:	mov    rbx,rcx
   140002d09:	test   r8,r8
   140002d0c:	je     0x140002d16
   140002d0e:	add    r8,r8
   140002d11:	call   0x1400056d0
   140002d16:	mov    rax,rbx
   140002d19:	add    rsp,0x20
   140002d1d:	pop    rbx
   140002d1e:	ret    
   140002d1f:	int3   
   140002d20:	mov    rcx,rdx
   140002d23:	jmp    0x140005454
   140002d28:	int3   
   140002d29:	int3   
   140002d2a:	int3   
   140002d2b:	int3   
   140002d2c:	int3   
   140002d2d:	int3   
   140002d2e:	int3   
   140002d2f:	int3   
   140002d30:	mov    rcx,rdx
   140002d33:	jmp    0x140005454
   140002d38:	int3   
   140002d39:	int3   
   140002d3a:	int3   
   140002d3b:	int3   
   140002d3c:	int3   
   140002d3d:	int3   
   140002d3e:	int3   
   140002d3f:	int3   
   140002d40:	mov    rcx,rdx
   140002d43:	jmp    0x140005454
   140002d48:	int3   
   140002d49:	int3   
   140002d4a:	int3   
   140002d4b:	int3   
   140002d4c:	int3   
   140002d4d:	int3   
   140002d4e:	int3   
   140002d4f:	int3   
   140002d50:	mov    rcx,rdx
   140002d53:	jmp    0x140005454
   140002d58:	int3   
   140002d59:	int3   
   140002d5a:	int3   
   140002d5b:	int3   
   140002d5c:	int3   
   140002d5d:	int3   
   140002d5e:	int3   
   140002d5f:	int3   
   140002d60:	mov    QWORD PTR [rsp+0x8],rbx
   140002d65:	push   rdi
   140002d66:	sub    rsp,0x20
   140002d6a:	mov    ecx,r8d
   140002d6d:	mov    edi,r8d
   140002d70:	mov    rbx,rdx
   140002d73:	call   0x140005320
   140002d78:	mov    DWORD PTR [rbx],edi
   140002d7a:	test   rax,rax
   140002d7d:	lea    rax,[rip+0x3327c]        # 0x140036000
   140002d84:	jne    0x140002d8d
   140002d86:	lea    rax,[rip+0x33283]        # 0x140036010
   140002d8d:	mov    QWORD PTR [rbx+0x8],rax
   140002d91:	mov    rax,rbx
   140002d94:	mov    rbx,QWORD PTR [rsp+0x30]
   140002d99:	add    rsp,0x20
   140002d9d:	pop    rdi
   140002d9e:	ret    
   140002d9f:	int3   
   140002da0:	mov    DWORD PTR [rdx],r8d
   140002da3:	mov    QWORD PTR [rdx+0x8],rcx
   140002da7:	mov    rax,rdx
   140002daa:	ret    
   140002dab:	int3   
   140002dac:	int3   
   140002dad:	int3   
   140002dae:	int3   
   140002daf:	int3   
   140002db0:	sub    rsp,0x28
   140002db4:	call   QWORD PTR [rip+0x2429e]        # 0x140027058
   140002dba:	cmp    eax,0xffffffff
   140002dbd:	je     0x140002dca
   140002dbf:	test   al,0x10
   140002dc1:	je     0x140002dca
   140002dc3:	mov    al,0x1
   140002dc5:	add    rsp,0x28
   140002dc9:	ret    
   140002dca:	xor    al,al
   140002dcc:	add    rsp,0x28
   140002dd0:	ret    
   140002dd1:	int3   
   140002dd2:	int3   
   140002dd3:	int3   
   140002dd4:	int3   
   140002dd5:	int3   
   140002dd6:	int3   
   140002dd7:	int3   
   140002dd8:	int3   
   140002dd9:	int3   
   140002dda:	int3   
   140002ddb:	int3   
   140002ddc:	int3   
   140002ddd:	int3   
   140002dde:	int3   
   140002ddf:	int3   
   140002de0:	xor    eax,eax
   140002de2:	cmp    QWORD PTR [rcx+0x10],rax
   140002de6:	sete   al
   140002de9:	ret    
   140002dea:	int3   
   140002deb:	int3   
   140002dec:	int3   
   140002ded:	int3   
   140002dee:	int3   
   140002def:	int3   
   140002df0:	cmp    QWORD PTR [rcx+0x18],0x8
   140002df5:	jb     0x140002e09
   140002df7:	mov    rax,QWORD PTR [rcx+0x10]
   140002dfb:	mov    r8,QWORD PTR [rcx]
   140002dfe:	lea    rcx,[r8+rax*2]
   140002e02:	mov    rax,rdx
   140002e05:	mov    QWORD PTR [rdx],rcx
   140002e08:	ret    
   140002e09:	mov    rax,QWORD PTR [rcx+0x10]
   140002e0d:	mov    r8,rcx
   140002e10:	lea    rcx,[rcx+rax*2]
   140002e14:	mov    rax,rdx
   140002e17:	mov    QWORD PTR [rdx],rcx
   140002e1a:	ret    
   140002e1b:	int3   
   140002e1c:	int3   
   140002e1d:	int3   
   140002e1e:	int3   
   140002e1f:	int3   
   140002e20:	cmp    rcx,QWORD PTR [rdx+0x8]
   140002e24:	jne    0x140002e2e
   140002e26:	cmp    DWORD PTR [rdx],r8d
   140002e29:	jne    0x140002e2e
   140002e2b:	mov    al,0x1
   140002e2d:	ret    
   140002e2e:	xor    al,al
   140002e30:	ret    
   140002e31:	int3   
   140002e32:	int3   
   140002e33:	int3   
   140002e34:	int3   
   140002e35:	int3   
   140002e36:	int3   
   140002e37:	int3   
   140002e38:	int3   
   140002e39:	int3   
   140002e3a:	int3   
   140002e3b:	int3   
   140002e3c:	int3   
   140002e3d:	int3   
   140002e3e:	int3   
   140002e3f:	int3   
   140002e40:	rex push rbx
   140002e42:	sub    rsp,0x30
   140002e46:	mov    rax,QWORD PTR [rcx]
   140002e49:	mov    rbx,r8
   140002e4c:	mov    r8d,edx
   140002e4f:	lea    rdx,[rsp+0x20]
   140002e54:	call   QWORD PTR [rax+0x18]
   140002e57:	mov    rcx,QWORD PTR [rbx+0x8]
   140002e5b:	cmp    QWORD PTR [rax+0x8],rcx
   140002e5f:	jne    0x140002e6f
   140002e61:	mov    ecx,DWORD PTR [rbx]
   140002e63:	cmp    DWORD PTR [rax],ecx
   140002e65:	jne    0x140002e6f
   140002e67:	mov    al,0x1
   140002e69:	add    rsp,0x30
   140002e6d:	pop    rbx
   140002e6e:	ret    
   140002e6f:	xor    al,al
   140002e71:	add    rsp,0x30
   140002e75:	pop    rbx
   140002e76:	ret    
   140002e77:	int3   
   140002e78:	int3   
   140002e79:	int3   
   140002e7a:	int3   
   140002e7b:	int3   
   140002e7c:	int3   
   140002e7d:	int3   
   140002e7e:	int3   
   140002e7f:	int3   
   140002e80:	mov    QWORD PTR [rsp+0x8],rbx
   140002e85:	push   rdi
   140002e86:	sub    rsp,0x20
   140002e8a:	mov    rdi,QWORD PTR [rcx+0x10]
   140002e8e:	mov    rbx,rcx
   140002e91:	cmp    rdi,rdx
   140002e94:	jb     0x140002f3e
   140002e9a:	mov    rax,rdi
   140002e9d:	sub    rax,rdx
   140002ea0:	cmp    rax,r8
   140002ea3:	ja     0x140002eda
   140002ea5:	cmp    QWORD PTR [rcx+0x18],0x10
   140002eaa:	mov    QWORD PTR [rcx+0x10],rdx
   140002eae:	jb     0x140002ec5
   140002eb0:	mov    rax,QWORD PTR [rcx]
   140002eb3:	mov    BYTE PTR [rax+rdx*1],0x0
   140002eb7:	mov    rax,rcx
   140002eba:	mov    rbx,QWORD PTR [rsp+0x30]
   140002ebf:	add    rsp,0x20
   140002ec3:	pop    rdi
   140002ec4:	ret    
   140002ec5:	mov    rax,rcx
   140002ec8:	mov    BYTE PTR [rcx+rdx*1],0x0
   140002ecc:	mov    rax,rbx
   140002ecf:	mov    rbx,QWORD PTR [rsp+0x30]
   140002ed4:	add    rsp,0x20
   140002ed8:	pop    rdi
   140002ed9:	ret    
   140002eda:	test   r8,r8
   140002edd:	je     0x140002f30
   140002edf:	cmp    QWORD PTR [rcx+0x18],0x10
   140002ee4:	jb     0x140002eeb
   140002ee6:	mov    rax,QWORD PTR [rcx]
   140002ee9:	jmp    0x140002eee
   140002eeb:	mov    rax,rcx
   140002eee:	sub    rdi,r8
   140002ef1:	lea    rcx,[rax+rdx*1]
   140002ef5:	mov    rax,rdi
   140002ef8:	sub    rax,rdx
   140002efb:	je     0x140002f09
   140002efd:	lea    rdx,[rcx+r8*1]
   140002f01:	mov    r8,rax
   140002f04:	call   0x1400056d0
   140002f09:	cmp    QWORD PTR [rbx+0x18],0x10
   140002f0e:	mov    QWORD PTR [rbx+0x10],rdi
   140002f12:	jb     0x140002f29
   140002f14:	mov    rax,QWORD PTR [rbx]
   140002f17:	mov    BYTE PTR [rax+rdi*1],0x0
   140002f1b:	mov    rax,rbx
   140002f1e:	mov    rbx,QWORD PTR [rsp+0x30]
   140002f23:	add    rsp,0x20
   140002f27:	pop    rdi
   140002f28:	ret    
   140002f29:	mov    rax,rbx
   140002f2c:	mov    BYTE PTR [rbx+rdi*1],0x0
   140002f30:	mov    rax,rbx
   140002f33:	mov    rbx,QWORD PTR [rsp+0x30]
   140002f38:	add    rsp,0x20
   140002f3c:	pop    rdi
   140002f3d:	ret    
   140002f3e:	lea    rcx,[rip+0x24983]        # 0x1400278c8
   140002f45:	call   0x14000522c
   140002f4a:	int3   
   140002f4b:	int3   
   140002f4c:	int3   
   140002f4d:	int3   
   140002f4e:	int3   
   140002f4f:	int3   
   140002f50:	sub    rsp,0x28
   140002f54:	cmp    QWORD PTR [rcx+0x10],rdx
   140002f58:	jb     0x140002f80
   140002f5a:	cmp    QWORD PTR [rcx+0x18],0x10
   140002f5f:	mov    QWORD PTR [rcx+0x10],rdx
   140002f63:	jb     0x140002f74
   140002f65:	mov    rax,QWORD PTR [rcx]
   140002f68:	mov    BYTE PTR [rax+rdx*1],0x0
   140002f6c:	mov    rax,rcx
   140002f6f:	add    rsp,0x28
   140002f73:	ret    
   140002f74:	mov    rax,rcx
   140002f77:	mov    BYTE PTR [rcx+rdx*1],0x0
   140002f7b:	add    rsp,0x28
   140002f7f:	ret    
   140002f80:	lea    rcx,[rip+0x24941]        # 0x1400278c8
   140002f87:	call   0x14000522c
   140002f8c:	int3   
   140002f8d:	int3   
   140002f8e:	int3   
   140002f8f:	int3   
   140002f90:	mov    QWORD PTR [rsp+0x8],rbx
   140002f95:	push   rdi
   140002f96:	sub    rsp,0x20
   140002f9a:	mov    rdi,QWORD PTR [rcx+0x10]
   140002f9e:	mov    r9,r8
   140002fa1:	mov    rbx,rcx
   140002fa4:	cmp    rdi,rdx
   140002fa7:	jb     0x140003030
   140002fad:	mov    rax,rdi
   140002fb0:	sub    rax,rdx
   140002fb3:	cmp    rax,r8
   140002fb6:	ja     0x140002fda
   140002fb8:	cmp    QWORD PTR [rcx+0x18],0x8
   140002fbd:	mov    QWORD PTR [rcx+0x10],rdx
   140002fc1:	jb     0x140002fc6
   140002fc3:	mov    rcx,QWORD PTR [rcx]
   140002fc6:	xor    eax,eax
   140002fc8:	mov    WORD PTR [rcx+rdx*2],ax
   140002fcc:	mov    rax,rbx
   140002fcf:	mov    rbx,QWORD PTR [rsp+0x30]
   140002fd4:	add    rsp,0x20
   140002fd8:	pop    rdi
   140002fd9:	ret    
   140002fda:	test   r8,r8
   140002fdd:	je     0x140003022
   140002fdf:	cmp    QWORD PTR [rcx+0x18],0x8
   140002fe4:	jb     0x140002feb
   140002fe6:	mov    rax,QWORD PTR [rcx]
   140002fe9:	jmp    0x140002fee
   140002feb:	mov    rax,rcx
   140002fee:	sub    rdi,r8
   140002ff1:	lea    rcx,[rax+rdx*2]
   140002ff5:	mov    r8,rdi
   140002ff8:	sub    r8,rdx
   140002ffb:	je     0x140003009
   140002ffd:	lea    rdx,[rcx+r9*2]
   140003001:	add    r8,r8
   140003004:	call   0x1400056d0
   140003009:	cmp    QWORD PTR [rbx+0x18],0x8
   14000300e:	mov    QWORD PTR [rbx+0x10],rdi
   140003012:	jb     0x140003019
   140003014:	mov    rcx,QWORD PTR [rbx]
   140003017:	jmp    0x14000301c
   140003019:	mov    rcx,rbx
   14000301c:	xor    eax,eax
   14000301e:	mov    WORD PTR [rcx+rdi*2],ax
   140003022:	mov    rax,rbx
   140003025:	mov    rbx,QWORD PTR [rsp+0x30]
   14000302a:	add    rsp,0x20
   14000302e:	pop    rdi
   14000302f:	ret    
   140003030:	lea    rcx,[rip+0x24891]        # 0x1400278c8
   140003037:	call   0x14000522c
   14000303c:	int3   
   14000303d:	int3   
   14000303e:	int3   
   14000303f:	int3   
   140003040:	sub    rsp,0x28
   140003044:	cmp    QWORD PTR [rcx+0x10],rdx
   140003048:	jb     0x140003078
   14000304a:	cmp    QWORD PTR [rcx+0x18],0x8
   14000304f:	mov    QWORD PTR [rcx+0x10],rdx
   140003053:	jb     0x140003068
   140003055:	mov    rax,QWORD PTR [rcx]
   140003058:	xor    r8d,r8d
   14000305b:	mov    WORD PTR [rax+rdx*2],r8w
   140003060:	mov    rax,rcx
   140003063:	add    rsp,0x28
   140003067:	ret    
   140003068:	xor    r8d,r8d
   14000306b:	mov    rax,rcx
   14000306e:	mov    WORD PTR [rcx+rdx*2],r8w
   140003073:	add    rsp,0x28
   140003077:	ret    
   140003078:	lea    rcx,[rip+0x24849]        # 0x1400278c8
   14000307f:	call   0x14000522c
   140003084:	int3   
   140003085:	int3   
   140003086:	int3   
   140003087:	int3   
   140003088:	int3   
   140003089:	int3   
   14000308a:	int3   
   14000308b:	int3   
   14000308c:	int3   
   14000308d:	int3   
   14000308e:	int3   
   14000308f:	int3   
   140003090:	sub    rsp,0x28
   140003094:	call   QWORD PTR [rip+0x23fbe]        # 0x140027058
   14000309a:	cmp    eax,0xffffffff
   14000309d:	setne  al
   1400030a0:	add    rsp,0x28
   1400030a4:	ret    
   1400030a5:	int3   
   1400030a6:	int3   
   1400030a7:	int3   
   1400030a8:	int3   
   1400030a9:	int3   
   1400030aa:	int3   
   1400030ab:	int3   
   1400030ac:	int3   
   1400030ad:	int3   
   1400030ae:	int3   
   1400030af:	int3   
   1400030b0:	lea    rax,[rip+0x32f49]        # 0x140036000
   1400030b7:	ret    
   1400030b8:	int3   
   1400030b9:	int3   
   1400030ba:	int3   
   1400030bb:	int3   
   1400030bc:	int3   
   1400030bd:	int3   
   1400030be:	int3   
   1400030bf:	int3   
   1400030c0:	mov    rax,rsp
   1400030c3:	push   rbp
   1400030c4:	push   r12
   1400030c6:	push   r13
   1400030c8:	push   r14
   1400030ca:	push   r15
   1400030cc:	lea    rbp,[rax-0x5f]
   1400030d0:	sub    rsp,0xb0
   1400030d7:	mov    QWORD PTR [rbp+0x7],0xfffffffffffffffe
   1400030df:	mov    QWORD PTR [rax+0x10],rbx
   1400030e3:	mov    QWORD PTR [rax+0x18],rsi
   1400030e7:	mov    QWORD PTR [rax+0x20],rdi
   1400030eb:	call   QWORD PTR [rip+0x23f77]        # 0x140027068
   1400030f1:	movzx  ecx,WORD PTR [rax]
   1400030f4:	mov    edx,0x22
   1400030f9:	cmp    dx,cx
   1400030fc:	jne    0x140003126
   1400030fe:	add    rax,0x2
   140003102:	movzx  ecx,WORD PTR [rax]
   140003105:	test   cx,cx
   140003108:	je     0x1400035a8
   14000310e:	xchg   ax,ax
   140003110:	cmp    cx,dx
   140003113:	je     0x140003154
   140003115:	add    rax,0x2
   140003119:	movzx  ecx,WORD PTR [rax]
   14000311c:	test   cx,cx
   14000311f:	jne    0x140003110
   140003121:	jmp    0x1400035a8
   140003126:	test   cx,cx
   140003129:	je     0x1400035a8
   14000312f:	mov    edx,0x20
   140003134:	lea    r8d,[rdx-0x17]
   140003138:	cmp    dx,cx
   14000313b:	je     0x140003154
   14000313d:	cmp    r8w,cx
   140003141:	je     0x140003154
   140003143:	add    rax,0x2
   140003147:	movzx  ecx,WORD PTR [rax]
   14000314a:	test   cx,cx
   14000314d:	jne    0x140003138
   14000314f:	jmp    0x1400035a8
   140003154:	cmp    WORD PTR [rax],0x0
   140003158:	je     0x1400035a8
   14000315e:	add    rax,0x2
   140003162:	mov    QWORD PTR [rbp+0x67],rax
   140003166:	movzx  ecx,WORD PTR [rax]
   140003169:	cmp    cx,0x20
   14000316d:	je     0x14000315e
   14000316f:	cmp    cx,0x9
   140003173:	je     0x14000315e
   140003175:	test   cx,cx
   140003178:	je     0x1400035a8
   14000317e:	lea    rsi,[rip+0x32e93]        # 0x140036018
   140003185:	xor    edi,edi
   140003187:	lea    r14,[rip+0x32eaa]        # 0x140036038
   14000318e:	lea    r15,[rip+0x32ec3]        # 0x140036058
   140003195:	lea    r12,[rip+0x32edc]        # 0x140036078
   14000319c:	lea    r13,[rip+0x32ef5]        # 0x140036098
   1400031a3:	lea    rdx,[rbp+0x67]
   1400031a7:	lea    rcx,[rbp-0x39]
   1400031ab:	call   0x1400038c0
   1400031b0:	nop
   1400031b1:	lea    rcx,[rbp-0x39]
   1400031b5:	cmp    QWORD PTR [rbp-0x21],0x8
   1400031ba:	cmovae rcx,QWORD PTR [rbp-0x39]
   1400031bf:	lea    rdx,[rip+0x244ca]        # 0x140027690
   1400031c6:	call   QWORD PTR [rip+0x23e64]        # 0x140027030
   1400031cc:	test   eax,eax
   1400031ce:	jne    0x1400032c8
   1400031d4:	lea    rdx,[rbp+0x67]
   1400031d8:	lea    rcx,[rbp-0x59]
   1400031dc:	call   0x1400038c0
   1400031e1:	mov    rbx,rax
   1400031e4:	cmp    rsi,rax
   1400031e7:	je     0x140003223
   1400031e9:	cmp    QWORD PTR [rip+0x32e3f],0x8        # 0x140036030
   1400031f1:	jb     0x1400031ff
   1400031f3:	mov    rcx,QWORD PTR [rip+0x32e1e]        # 0x140036018
   1400031fa:	call   0x140005454
   1400031ff:	mov    QWORD PTR [rip+0x32e26],0x7        # 0x140036030
   14000320a:	mov    QWORD PTR [rip+0x32e17],rdi        # 0x140036028
   140003211:	mov    WORD PTR [rip+0x32e00],di        # 0x140036018
   140003218:	mov    rdx,rbx
   14000321b:	mov    rcx,rsi
   14000321e:	call   0x140001aa0
   140003223:	cmp    QWORD PTR [rbp-0x41],0x8
   140003228:	jb     0x140003233
   14000322a:	mov    rcx,QWORD PTR [rbp-0x59]
   14000322e:	call   0x140005454
   140003233:	mov    rcx,rsi
   140003236:	cmp    QWORD PTR [rip+0x32df2],0x8        # 0x140036030
   14000323e:	cmovae rcx,QWORD PTR [rip+0x32dd2]        # 0x140036018
   140003246:	call   QWORD PTR [rip+0x23e0c]        # 0x140027058
   14000324c:	cmp    eax,0xffffffff
   14000324f:	je     0x140003592
   140003255:	test   al,0x10
   140003257:	je     0x140003592
   14000325d:	mov    QWORD PTR [rbp-0x1],0x7
   140003265:	mov    QWORD PTR [rbp-0x9],rdi
   140003269:	mov    WORD PTR [rbp-0x19],di
   14000326d:	or     r9,0xffffffffffffffff
   140003271:	xor    r8d,r8d
   140003274:	mov    rdx,rsi
   140003277:	lea    rcx,[rbp-0x19]
   14000327b:	call   0x140002970
   140003280:	nop
   140003281:	mov    r8d,0xf
   140003287:	lea    rdx,[rip+0x2441a]        # 0x1400276a8
   14000328e:	lea    rcx,[rbp-0x19]
   140003292:	call   0x140002440
   140003297:	lea    rcx,[rbp-0x19]
   14000329b:	cmp    QWORD PTR [rbp-0x1],0x8
   1400032a0:	cmovae rcx,QWORD PTR [rbp-0x19]
   1400032a5:	call   QWORD PTR [rip+0x23dad]        # 0x140027058
   1400032ab:	cmp    eax,0xffffffff
   1400032ae:	je     0x140003587
   1400032b4:	cmp    QWORD PTR [rbp-0x1],0x8
   1400032b9:	jb     0x140003568
   1400032bf:	mov    rcx,QWORD PTR [rbp-0x19]
   1400032c3:	jmp    0x140003562
   1400032c8:	lea    rcx,[rbp-0x39]
   1400032cc:	cmp    QWORD PTR [rbp-0x21],0x8
   1400032d1:	cmovae rcx,QWORD PTR [rbp-0x39]
   1400032d6:	lea    rdx,[rip+0x243eb]        # 0x1400276c8
   1400032dd:	call   QWORD PTR [rip+0x23d4d]        # 0x140027030
   1400032e3:	test   eax,eax
   1400032e5:	jne    0x140003379
   1400032eb:	lea    rdx,[rbp+0x67]
   1400032ef:	lea    rcx,[rbp-0x59]
   1400032f3:	call   0x1400038c0
   1400032f8:	mov    rbx,rax
   1400032fb:	cmp    r14,rax
   1400032fe:	je     0x14000333a
   140003300:	cmp    QWORD PTR [rip+0x32d48],0x8        # 0x140036050
   140003308:	jb     0x140003316
   14000330a:	mov    rcx,QWORD PTR [rip+0x32d27]        # 0x140036038
   140003311:	call   0x140005454
   140003316:	mov    QWORD PTR [rip+0x32d2f],0x7        # 0x140036050
   140003321:	mov    QWORD PTR [rip+0x32d20],rdi        # 0x140036048
   140003328:	mov    WORD PTR [rip+0x32d09],di        # 0x140036038
   14000332f:	mov    rdx,rbx
   140003332:	mov    rcx,r14
   140003335:	call   0x140001aa0
   14000333a:	cmp    QWORD PTR [rbp-0x41],0x8
   14000333f:	jb     0x14000334a
   140003341:	mov    rcx,QWORD PTR [rbp-0x59]
   140003345:	call   0x140005454
   14000334a:	mov    rcx,r14
   14000334d:	cmp    QWORD PTR [rip+0x32cfb],0x8        # 0x140036050
   140003355:	cmovae rcx,QWORD PTR [rip+0x32cdb]        # 0x140036038
   14000335d:	call   QWORD PTR [rip+0x23cf5]        # 0x140027058
   140003363:	cmp    eax,0xffffffff
   140003366:	je     0x14000359d
   14000336c:	test   al,0x10
   14000336e:	je     0x14000359d
   140003374:	jmp    0x140003568
   140003379:	lea    rcx,[rbp-0x39]
   14000337d:	cmp    QWORD PTR [rbp-0x21],0x8
   140003382:	cmovae rcx,QWORD PTR [rbp-0x39]
   140003387:	lea    rdx,[rip+0x24352]        # 0x1400276e0
   14000338e:	call   QWORD PTR [rip+0x23c9c]        # 0x140027030
   140003394:	test   eax,eax
   140003396:	jne    0x1400033fb
   140003398:	lea    rdx,[rbp+0x67]
   14000339c:	lea    rcx,[rbp-0x59]
   1400033a0:	call   0x1400038c0
   1400033a5:	mov    rbx,rax
   1400033a8:	cmp    r15,rax
   1400033ab:	je     0x1400033e7
   1400033ad:	cmp    QWORD PTR [rip+0x32cbb],0x8        # 0x140036070
   1400033b5:	jb     0x1400033c3
   1400033b7:	mov    rcx,QWORD PTR [rip+0x32c9a]        # 0x140036058
   1400033be:	call   0x140005454
   1400033c3:	mov    QWORD PTR [rip+0x32ca2],0x7        # 0x140036070
   1400033ce:	mov    QWORD PTR [rip+0x32c93],rdi        # 0x140036068
   1400033d5:	mov    WORD PTR [rip+0x32c7c],di        # 0x140036058
   1400033dc:	mov    rdx,rbx
   1400033df:	mov    rcx,r15
   1400033e2:	call   0x140001aa0
   1400033e7:	cmp    QWORD PTR [rbp-0x41],0x8
   1400033ec:	jb     0x140003568
   1400033f2:	mov    rcx,QWORD PTR [rbp-0x59]
   1400033f6:	jmp    0x140003562
   1400033fb:	lea    rcx,[rbp-0x39]
   1400033ff:	cmp    QWORD PTR [rbp-0x21],0x8
   140003404:	cmovae rcx,QWORD PTR [rbp-0x39]
   140003409:	lea    rdx,[rip+0x242e8]        # 0x1400276f8
   140003410:	call   QWORD PTR [rip+0x23c1a]        # 0x140027030
   140003416:	test   eax,eax
   140003418:	jne    0x14000347d
   14000341a:	lea    rdx,[rbp+0x67]
   14000341e:	lea    rcx,[rbp-0x59]
   140003422:	call   0x1400038c0
   140003427:	mov    rbx,rax
   14000342a:	cmp    r12,rax
   14000342d:	je     0x140003469
   14000342f:	cmp    QWORD PTR [rip+0x32c59],0x8        # 0x140036090
   140003437:	jb     0x140003445
   140003439:	mov    rcx,QWORD PTR [rip+0x32c38]        # 0x140036078
   140003440:	call   0x140005454
   140003445:	mov    QWORD PTR [rip+0x32c40],0x7        # 0x140036090
   140003450:	mov    QWORD PTR [rip+0x32c31],rdi        # 0x140036088
   140003457:	mov    WORD PTR [rip+0x32c1a],di        # 0x140036078
   14000345e:	mov    rdx,rbx
   140003461:	mov    rcx,r12
   140003464:	call   0x140001aa0
   140003469:	cmp    QWORD PTR [rbp-0x41],0x8
   14000346e:	jb     0x140003568
   140003474:	mov    rcx,QWORD PTR [rbp-0x59]
   140003478:	jmp    0x140003562
   14000347d:	lea    rcx,[rbp-0x39]
   140003481:	cmp    QWORD PTR [rbp-0x21],0x8
   140003486:	cmovae rcx,QWORD PTR [rbp-0x39]
   14000348b:	lea    rdx,[rip+0x24276]        # 0x140027708
   140003492:	call   QWORD PTR [rip+0x23b98]        # 0x140027030
   140003498:	test   eax,eax
   14000349a:	jne    0x140003568
   1400034a0:	lea    rdx,[rbp+0x67]
   1400034a4:	lea    rcx,[rbp+0xf]
   1400034a8:	call   0x1400038c0
   1400034ad:	nop
   1400034ae:	mov    r8,rax
   1400034b1:	lea    rdx,[rip+0x24268]        # 0x140027720
   1400034b8:	lea    rcx,[rbp-0x59]
   1400034bc:	call   0x1400011c0
   1400034c1:	nop
   1400034c2:	lea    r8,[rip+0x24257]        # 0x140027720
   1400034c9:	mov    rdx,rax
   1400034cc:	lea    rcx,[rbp-0x19]
   1400034d0:	call   0x140001150
   1400034d5:	mov    rbx,rax
   1400034d8:	cmp    r13,rax
   1400034db:	je     0x140003517
   1400034dd:	cmp    QWORD PTR [rip+0x32bcb],0x8        # 0x1400360b0
   1400034e5:	jb     0x1400034f3
   1400034e7:	mov    rcx,QWORD PTR [rip+0x32baa]        # 0x140036098
   1400034ee:	call   0x140005454
   1400034f3:	mov    QWORD PTR [rip+0x32bb2],0x7        # 0x1400360b0
   1400034fe:	mov    QWORD PTR [rip+0x32ba3],rdi        # 0x1400360a8
   140003505:	mov    WORD PTR [rip+0x32b8c],di        # 0x140036098
   14000350c:	mov    rdx,rbx
   14000350f:	mov    rcx,r13
   140003512:	call   0x140001aa0
   140003517:	cmp    QWORD PTR [rbp-0x1],0x8
   14000351c:	jb     0x140003527
   14000351e:	mov    rcx,QWORD PTR [rbp-0x19]
   140003522:	call   0x140005454
   140003527:	mov    QWORD PTR [rbp-0x1],0x7
   14000352f:	mov    QWORD PTR [rbp-0x9],rdi
   140003533:	mov    WORD PTR [rbp-0x19],di
   140003537:	cmp    QWORD PTR [rbp-0x41],0x8
   14000353c:	jb     0x140003547
   14000353e:	mov    rcx,QWORD PTR [rbp-0x59]
   140003542:	call   0x140005454
   140003547:	mov    QWORD PTR [rbp-0x41],0x7
   14000354f:	mov    QWORD PTR [rbp-0x49],rdi
   140003553:	mov    WORD PTR [rbp-0x59],di
   140003557:	cmp    QWORD PTR [rbp+0x27],0x8
   14000355c:	jb     0x140003568
   14000355e:	mov    rcx,QWORD PTR [rbp+0xf]
   140003562:	call   0x140005454
   140003567:	nop
   140003568:	cmp    QWORD PTR [rbp-0x21],0x8
   14000356d:	jb     0x140003578
   14000356f:	mov    rcx,QWORD PTR [rbp-0x39]
   140003573:	call   0x140005454
   140003578:	mov    rax,QWORD PTR [rbp+0x67]
   14000357c:	cmp    WORD PTR [rax],0x0
   140003580:	je     0x1400035a8
   140003582:	jmp    0x1400031a3
   140003587:	mov    ecx,0x6f
   14000358c:	call   0x1400048b0
   140003591:	nop
   140003592:	mov    ecx,0x6e
   140003597:	call   0x1400048b0
   14000359c:	int3   
   14000359d:	mov    ecx,0x70
   1400035a2:	call   0x1400048b0
   1400035a7:	nop
   1400035a8:	lea    r11,[rsp+0xb0]
   1400035b0:	mov    rbx,QWORD PTR [r11+0x38]
   1400035b4:	mov    rsi,QWORD PTR [r11+0x40]
   1400035b8:	mov    rdi,QWORD PTR [r11+0x48]
   1400035bc:	mov    rsp,r11
   1400035bf:	pop    r15
   1400035c1:	pop    r14
   1400035c3:	pop    r13
   1400035c5:	pop    r12
   1400035c7:	pop    rbp
   1400035c8:	ret    
   1400035c9:	int3   
   1400035ca:	int3   
   1400035cb:	int3   
   1400035cc:	int3   
   1400035cd:	int3   
   1400035ce:	int3   
   1400035cf:	int3   
   1400035d0:	mov    rax,rsp
   1400035d3:	push   rdi
   1400035d4:	sub    rsp,0x50
   1400035d8:	mov    QWORD PTR [rax-0x30],0xfffffffffffffffe
   1400035e0:	mov    QWORD PTR [rax+0x8],rbx
   1400035e4:	mov    QWORD PTR [rax+0x10],rbp
   1400035e8:	mov    QWORD PTR [rax+0x18],rsi
   1400035ec:	mov    rbx,rcx
   1400035ef:	xor    ebp,ebp
   1400035f1:	mov    DWORD PTR [rsp+0x20],ebp
   1400035f5:	mov    QWORD PTR [rax-0x10],0x7
   1400035fd:	mov    QWORD PTR [rax-0x18],rbp
   140003601:	mov    WORD PTR [rax-0x28],bp
   140003605:	xor    edx,edx
   140003607:	xor    ecx,ecx
   140003609:	call   QWORD PTR [rip+0x23a51]        # 0x140027060
   14000360f:	mov    esi,eax
   140003611:	test   eax,eax
   140003613:	je     0x140003642
   140003615:	mov    ecx,esi
   140003617:	add    rcx,rcx
   14000361a:	call   0x1400064d4
   14000361f:	mov    rdi,rax
   140003622:	test   rax,rax
   140003625:	je     0x1400036b0
   14000362b:	mov    rdx,rax
   14000362e:	mov    ecx,esi
   140003630:	call   QWORD PTR [rip+0x23a2a]        # 0x140027060
   140003636:	test   eax,eax
   140003638:	jne    0x14000367f
   14000363a:	mov    rcx,rdi
   14000363d:	call   0x140006444
   140003642:	mov    QWORD PTR [rbx+0x18],0x7
   14000364a:	mov    QWORD PTR [rbx+0x10],rbp
   14000364e:	mov    WORD PTR [rbx],bp
   140003651:	xor    r8d,r8d
   140003654:	lea    rdx,[rip+0x24031]        # 0x14002768c
   14000365b:	mov    rcx,rbx
   14000365e:	call   0x140002af0
   140003663:	nop
   140003664:	cmp    QWORD PTR [rsp+0x48],0x8
   14000366a:	jb     0x140003700
   140003670:	mov    rcx,QWORD PTR [rsp+0x30]
   140003675:	call   0x140005454
   14000367a:	jmp    0x140003700
   14000367f:	cmp    WORD PTR [rdi],0x0
   140003683:	jne    0x14000368a
   140003685:	mov    r8,rbp
   140003688:	jmp    0x14000369b
   14000368a:	or     r8,0xffffffffffffffff
   14000368e:	xchg   ax,ax
   140003690:	inc    r8
   140003693:	cmp    WORD PTR [rdi+r8*2],0x0
   140003699:	jne    0x140003690
   14000369b:	mov    rdx,rdi
   14000369e:	lea    rcx,[rsp+0x30]
   1400036a3:	call   0x140002af0
   1400036a8:	mov    rcx,rdi
   1400036ab:	call   0x140006444
   1400036b0:	mov    QWORD PTR [rbx+0x18],0x7
   1400036b8:	mov    QWORD PTR [rbx+0x10],rbp
   1400036bc:	mov    WORD PTR [rbx],bp
   1400036bf:	mov    rcx,QWORD PTR [rsp+0x48]
   1400036c4:	cmp    rcx,0x8
   1400036c8:	jae    0x1400036eb
   1400036ca:	mov    r8,QWORD PTR [rsp+0x40]
   1400036cf:	inc    r8
   1400036d2:	je     0x1400036f3
   1400036d4:	add    r8,r8
   1400036d7:	lea    rdx,[rsp+0x30]
   1400036dc:	mov    rcx,rbx
   1400036df:	call   0x1400056d0
   1400036e4:	mov    rcx,QWORD PTR [rsp+0x48]
   1400036e9:	jmp    0x1400036f3
   1400036eb:	mov    rax,QWORD PTR [rsp+0x30]
   1400036f0:	mov    QWORD PTR [rbx],rax
   1400036f3:	mov    rax,QWORD PTR [rsp+0x40]
   1400036f8:	mov    QWORD PTR [rbx+0x10],rax
   1400036fc:	mov    QWORD PTR [rbx+0x18],rcx
   140003700:	mov    rax,rbx
   140003703:	mov    rbx,QWORD PTR [rsp+0x60]
   140003708:	mov    rbp,QWORD PTR [rsp+0x68]
   14000370d:	mov    rsi,QWORD PTR [rsp+0x70]
   140003712:	add    rsp,0x50
   140003716:	pop    rdi
   140003717:	ret    
   140003718:	int3   
   140003719:	int3   
   14000371a:	int3   
   14000371b:	int3   
   14000371c:	int3   
   14000371d:	int3   
   14000371e:	int3   
   14000371f:	int3   
   140003720:	mov    QWORD PTR [rsp+0x8],rcx
   140003725:	push   rbp
   140003726:	push   rbx
   140003727:	push   rsi
   140003728:	push   rdi
   140003729:	push   r14
   14000372b:	mov    rbp,rsp
   14000372e:	sub    rsp,0x80
   140003735:	mov    QWORD PTR [rbp-0x48],0xfffffffffffffffe
   14000373d:	mov    r14,rcx
   140003740:	xor    edi,edi
   140003742:	mov    DWORD PTR [rbp-0x50],edi
   140003745:	mov    QWORD PTR [rbp-0x28],0x7
   14000374d:	mov    QWORD PTR [rbp-0x30],rdi
   140003751:	mov    WORD PTR [rbp-0x40],di
   140003755:	lea    r8d,[rdi+0x3]
   140003759:	lea    rdx,[rip+0x23fc8]        # 0x140027728
   140003760:	lea    rcx,[rbp-0x40]
   140003764:	call   0x140002af0
   140003769:	nop
   14000376a:	lea    r8,[rbp-0x40]
   14000376e:	lea    rdx,[rip+0x23fbb]        # 0x140027730
   140003775:	lea    rcx,[rbp-0x20]
   140003779:	call   0x1400011c0
   14000377e:	nop
   14000377f:	cmp    QWORD PTR [rbp-0x28],0x8
   140003784:	jb     0x14000378f
   140003786:	mov    rcx,QWORD PTR [rbp-0x40]
   14000378a:	call   0x140005454
   14000378f:	mov    QWORD PTR [rbp-0x28],0x7
   140003797:	mov    QWORD PTR [rbp-0x30],rdi
   14000379b:	mov    WORD PTR [rbp-0x40],di
   14000379f:	mov    QWORD PTR [r14+0x18],0x7
   1400037a7:	mov    QWORD PTR [r14+0x10],rdi
   1400037ab:	mov    WORD PTR [r14],di
   1400037af:	mov    DWORD PTR [rbp-0x50],0x1
   1400037b6:	lea    rdx,[rbp-0x20]
   1400037ba:	cmp    QWORD PTR [rbp-0x8],0x8
   1400037bf:	cmovae rdx,QWORD PTR [rbp-0x20]
   1400037c4:	lea    rax,[rbp+0x40]
   1400037c8:	mov    QWORD PTR [rsp+0x20],rax
   1400037cd:	mov    r9d,0x20019
   1400037d3:	xor    r8d,r8d
   1400037d6:	mov    rcx,0xffffffff80000002
   1400037dd:	call   QWORD PTR [rip+0x2381d]        # 0x140027000
   1400037e3:	test   eax,eax
   1400037e5:	jne    0x140003896
   1400037eb:	mov    DWORD PTR [rbp+0x38],edi
   1400037ee:	lea    rax,[rbp+0x38]
   1400037f2:	mov    QWORD PTR [rsp+0x28],rax
   1400037f7:	mov    QWORD PTR [rsp+0x20],rdi
   1400037fc:	xor    r9d,r9d
   1400037ff:	xor    r8d,r8d
   140003802:	lea    rdx,[rip+0x23f5f]        # 0x140027768
   140003809:	mov    rcx,QWORD PTR [rbp+0x40]
   14000380d:	call   QWORD PTR [rip+0x237fd]        # 0x140027010
   140003813:	mov    ebx,eax
   140003815:	mov    ecx,DWORD PTR [rbp+0x38]
   140003818:	add    ecx,0x2
   14000381b:	mov    DWORD PTR [rbp+0x38],ecx
   14000381e:	mov    edx,0x1
   140003823:	call   0x140006400
   140003828:	mov    rsi,rax
   14000382b:	test   ebx,ebx
   14000382d:	jne    0x14000387e
   14000382f:	test   rax,rax
   140003832:	je     0x14000388b
   140003834:	lea    rax,[rbp+0x38]
   140003838:	mov    QWORD PTR [rsp+0x28],rax
   14000383d:	mov    QWORD PTR [rsp+0x20],rsi
   140003842:	xor    r9d,r9d
   140003845:	xor    r8d,r8d
   140003848:	lea    rdx,[rip+0x23f19]        # 0x140027768
   14000384f:	mov    rcx,QWORD PTR [rbp+0x40]
   140003853:	call   QWORD PTR [rip+0x237b7]        # 0x140027010
   140003859:	test   eax,eax
   14000385b:	jne    0x14000387e
   14000385d:	cmp    WORD PTR [rsi],ax
   140003860:	je     0x140003870
   140003862:	or     rdi,0xffffffffffffffff
   140003866:	inc    rdi
   140003869:	cmp    WORD PTR [rsi+rdi*2],0x0
   14000386e:	jne    0x140003866
   140003870:	mov    r8,rdi
   140003873:	mov    rdx,rsi
   140003876:	mov    rcx,r14
   140003879:	call   0x140002af0
   14000387e:	test   rsi,rsi
   140003881:	je     0x14000388b
   140003883:	mov    rcx,rsi
   140003886:	call   0x140006444
   14000388b:	mov    rcx,QWORD PTR [rbp+0x40]
   14000388f:	call   QWORD PTR [rip+0x23773]        # 0x140027008
   140003895:	nop
   140003896:	cmp    QWORD PTR [rbp-0x8],0x8
   14000389b:	jb     0x1400038a6
   14000389d:	mov    rcx,QWORD PTR [rbp-0x20]
   1400038a1:	call   0x140005454
   1400038a6:	mov    rax,r14
   1400038a9:	add    rsp,0x80
   1400038b0:	pop    r14
   1400038b2:	pop    rdi
   1400038b3:	pop    rsi
   1400038b4:	pop    rbx
   1400038b5:	pop    rbp
   1400038b6:	ret    
   1400038b7:	int3   
   1400038b8:	int3   
   1400038b9:	int3   
   1400038ba:	int3   
   1400038bb:	int3   
   1400038bc:	int3   
   1400038bd:	int3   
   1400038be:	int3   
   1400038bf:	int3   
   1400038c0:	mov    QWORD PTR [rsp+0x10],rbx
   1400038c5:	mov    QWORD PTR [rsp+0x18],rsi
   1400038ca:	push   rdi
   1400038cb:	sub    rsp,0x30
   1400038cf:	mov    rbx,QWORD PTR [rdx]
   1400038d2:	xor    r10d,r10d
   1400038d5:	mov    rsi,rdx
   1400038d8:	mov    rdx,rbx
   1400038db:	mov    rdi,rcx
   1400038de:	mov    DWORD PTR [rsp+0x20],r10d
   1400038e3:	mov    r8d,r10d
   1400038e6:	movzx  eax,WORD PTR [rbx]
   1400038e9:	cmp    ax,0x20
   1400038ed:	je     0x1400038f5
   1400038ef:	cmp    ax,0x9
   1400038f3:	jne    0x1400038ff
   1400038f5:	add    rbx,0x2
   1400038f9:	add    rdx,0x2
   1400038fd:	jmp    0x1400038e6
   1400038ff:	movzx  eax,WORD PTR [rbx]
   140003902:	mov    ecx,0x22
   140003907:	cmp    cx,ax
   14000390a:	jne    0x140003940
   14000390c:	movzx  eax,WORD PTR [rbx+0x2]
   140003910:	add    rbx,0x2
   140003914:	add    rdx,0x2
   140003918:	test   ax,ax
   14000391b:	je     0x140003935
   14000391d:	nop    DWORD PTR [rax]
   140003920:	cmp    ax,cx
   140003923:	je     0x14000393a
   140003925:	movzx  eax,WORD PTR [rbx+0x2]
   140003929:	add    rbx,0x2
   14000392d:	inc    r8
   140003930:	test   ax,ax
   140003933:	jne    0x140003920
   140003935:	cmp    WORD PTR [rbx],cx
   140003938:	jne    0x14000396b
   14000393a:	add    rbx,0x2
   14000393e:	jmp    0x14000396b
   140003940:	test   ax,ax
   140003943:	je     0x14000396b
   140003945:	mov    ecx,0x20
   14000394a:	lea    r9d,[rcx-0x17]
   14000394e:	xchg   ax,ax
   140003950:	cmp    cx,ax
   140003953:	je     0x14000396b
   140003955:	cmp    r9w,ax
   140003959:	je     0x14000396b
   14000395b:	movzx  eax,WORD PTR [rbx+0x2]
   14000395f:	add    rbx,0x2
   140003963:	inc    r8
   140003966:	test   ax,ax
   140003969:	jne    0x140003950
   14000396b:	movzx  r9d,BYTE PTR [rsp+0x40]
   140003971:	mov    QWORD PTR [rdi+0x18],0x7
   140003979:	mov    QWORD PTR [rdi+0x10],r10
   14000397d:	lea    r8,[rdx+r8*2]
   140003981:	mov    rcx,rdi
   140003984:	mov    WORD PTR [rdi],r10w
   140003988:	call   0x1400012a0
   14000398d:	mov    QWORD PTR [rsi],rbx
   140003990:	mov    rbx,QWORD PTR [rsp+0x48]
   140003995:	mov    rsi,QWORD PTR [rsp+0x50]
   14000399a:	mov    rax,rdi
   14000399d:	add    rsp,0x30
   1400039a1:	pop    rdi
   1400039a2:	ret    
   1400039a3:	int3   
   1400039a4:	int3   
   1400039a5:	int3   
   1400039a6:	int3   
   1400039a7:	int3   
   1400039a8:	int3   
   1400039a9:	int3   
   1400039aa:	int3   
   1400039ab:	int3   
   1400039ac:	int3   
   1400039ad:	int3   
   1400039ae:	int3   
   1400039af:	int3   
   1400039b0:	mov    QWORD PTR [rsp+0x18],rbx
   1400039b5:	push   rsi
   1400039b6:	push   r14
   1400039b8:	push   r15
   1400039ba:	sub    rsp,0x20
   1400039be:	mov    rbx,rcx
   1400039c1:	mov    rcx,QWORD PTR [rcx+0x10]
   1400039c5:	mov    r14,r9
   1400039c8:	mov    rsi,r8
   1400039cb:	mov    r15,rdx
   1400039ce:	cmp    rcx,rdx
   1400039d1:	jb     0x140003b23
   1400039d7:	mov    rax,QWORD PTR [r8+0x10]
   1400039db:	cmp    rax,r9
   1400039de:	jb     0x140003b23
   1400039e4:	sub    rax,r9
   1400039e7:	mov    QWORD PTR [rsp+0x48],rdi
   1400039ec:	mov    rdi,QWORD PTR [rsp+0x60]
   1400039f1:	cmp    rax,rdi
   1400039f4:	cmovb  rdi,rax
   1400039f8:	or     rax,0xffffffffffffffff
   1400039fc:	sub    rax,rcx
   1400039ff:	cmp    rax,rdi
   140003a02:	jbe    0x140003b16
   140003a08:	test   rdi,rdi
   140003a0b:	je     0x140003aff
   140003a11:	mov    QWORD PTR [rsp+0x40],rbp
   140003a16:	lea    rbp,[rcx+rdi*1]
   140003a1a:	xor    r8d,r8d
   140003a1d:	mov    rdx,rbp
   140003a20:	mov    rcx,rbx
   140003a23:	call   0x140001ee0
   140003a28:	test   al,al
   140003a2a:	je     0x140003afa
   140003a30:	mov    rax,QWORD PTR [rbx+0x18]
   140003a34:	cmp    rax,0x8
   140003a38:	jb     0x140003a3f
   140003a3a:	mov    rdx,QWORD PTR [rbx]
   140003a3d:	jmp    0x140003a42
   140003a3f:	mov    rdx,rbx
   140003a42:	cmp    rax,0x8
   140003a46:	jb     0x140003a4d
   140003a48:	mov    rcx,QWORD PTR [rbx]
   140003a4b:	jmp    0x140003a50
   140003a4d:	mov    rcx,rbx
   140003a50:	mov    r8,QWORD PTR [rbx+0x10]
   140003a54:	sub    r8,r15
   140003a57:	je     0x140003a6d
   140003a59:	lea    rax,[r15+rdi*1]
   140003a5d:	lea    rdx,[rdx+r15*2]
   140003a61:	add    r8,r8
   140003a64:	lea    rcx,[rcx+rax*2]
   140003a68:	call   0x1400056d0
   140003a6d:	cmp    rbx,rsi
   140003a70:	jne    0x140003ab2
   140003a72:	cmp    r15,r14
   140003a75:	jae    0x140003a7a
   140003a77:	add    r14,rdi
   140003a7a:	mov    rax,QWORD PTR [rbx+0x18]
   140003a7e:	cmp    rax,0x8
   140003a82:	jb     0x140003a89
   140003a84:	mov    rcx,QWORD PTR [rbx]
   140003a87:	jmp    0x140003a8c
   140003a89:	mov    rcx,rbx
   140003a8c:	cmp    rax,0x8
   140003a90:	jb     0x140003a97
   140003a92:	mov    rax,QWORD PTR [rbx]
   140003a95:	jmp    0x140003a9a
   140003a97:	mov    rax,rbx
   140003a9a:	test   rdi,rdi
   140003a9d:	je     0x140003ae1
   140003a9f:	lea    rdx,[rcx+r14*2]
   140003aa3:	lea    r8,[rdi+rdi*1]
   140003aa7:	lea    rcx,[rax+r15*2]
   140003aab:	call   0x1400056d0
   140003ab0:	jmp    0x140003ae1
   140003ab2:	cmp    QWORD PTR [rsi+0x18],0x8
   140003ab7:	jb     0x140003abc
   140003ab9:	mov    rsi,QWORD PTR [rsi]
   140003abc:	cmp    QWORD PTR [rbx+0x18],0x8
   140003ac1:	jb     0x140003ac8
   140003ac3:	mov    rax,QWORD PTR [rbx]
   140003ac6:	jmp    0x140003acb
   140003ac8:	mov    rax,rbx
   140003acb:	test   rdi,rdi
   140003ace:	je     0x140003ae1
   140003ad0:	lea    r8,[rdi+rdi*1]
   140003ad4:	lea    rdx,[rsi+r14*2]
   140003ad8:	lea    rcx,[rax+r15*2]
   140003adc:	call   0x1400056d0
   140003ae1:	cmp    QWORD PTR [rbx+0x18],0x8
   140003ae6:	mov    QWORD PTR [rbx+0x10],rbp
   140003aea:	jb     0x140003af1
   140003aec:	mov    rax,QWORD PTR [rbx]
   140003aef:	jmp    0x140003af4
   140003af1:	mov    rax,rbx
   140003af4:	xor    ecx,ecx
   140003af6:	mov    WORD PTR [rax+rbp*2],cx
   140003afa:	mov    rbp,QWORD PTR [rsp+0x40]
   140003aff:	mov    rdi,QWORD PTR [rsp+0x48]
   140003b04:	mov    rax,rbx
   140003b07:	mov    rbx,QWORD PTR [rsp+0x50]
   140003b0c:	add    rsp,0x20
   140003b10:	pop    r15
   140003b12:	pop    r14
   140003b14:	pop    rsi
   140003b15:	ret    
   140003b16:	lea    rcx,[rip+0x23d9b]        # 0x1400278b8
   140003b1d:	call   0x1400051f4
   140003b22:	int3   
   140003b23:	lea    rcx,[rip+0x23d9e]        # 0x1400278c8
   140003b2a:	call   0x14000522c
   140003b2f:	int3   
   140003b30:	mov    QWORD PTR [rsp+0x10],rbx
   140003b35:	mov    QWORD PTR [rsp+0x18],rsi
   140003b3a:	mov    QWORD PTR [rsp+0x20],rdi
   140003b3f:	push   r14
   140003b41:	sub    rsp,0x30
   140003b45:	mov    rsi,r9
   140003b48:	mov    rdi,r8
   140003b4b:	mov    r14,rdx
   140003b4e:	mov    rbx,rcx
   140003b51:	test   r8,r8
   140003b54:	je     0x140003baf
   140003b56:	mov    r8,QWORD PTR [rcx+0x18]
   140003b5a:	cmp    r8,0x8
   140003b5e:	jb     0x140003b65
   140003b60:	mov    rax,QWORD PTR [rcx]
   140003b63:	jmp    0x140003b68
   140003b65:	mov    rax,rcx
   140003b68:	cmp    rdi,rax
   140003b6b:	jb     0x140003baf
   140003b6d:	cmp    r8,0x8
   140003b71:	jb     0x140003b76
   140003b73:	mov    rcx,QWORD PTR [rcx]
   140003b76:	mov    rax,QWORD PTR [rbx+0x10]
   140003b7a:	lea    rcx,[rcx+rax*2]
   140003b7e:	cmp    rcx,rdi
   140003b81:	jbe    0x140003baf
   140003b83:	cmp    r8,0x8
   140003b87:	jb     0x140003b8e
   140003b89:	mov    rax,QWORD PTR [rbx]
   140003b8c:	jmp    0x140003b91
   140003b8e:	mov    rax,rbx
   140003b91:	sub    rdi,rax
   140003b94:	mov    QWORD PTR [rsp+0x20],r9
   140003b99:	mov    r8,rbx
   140003b9c:	sar    rdi,1
   140003b9f:	mov    rcx,rbx
   140003ba2:	mov    r9,rdi
   140003ba5:	call   0x1400039b0
   140003baa:	jmp    0x140003c72
   140003baf:	mov    rcx,QWORD PTR [rbx+0x10]
   140003bb3:	cmp    rcx,rdx
   140003bb6:	jb     0x140003c88
   140003bbc:	or     rax,0xffffffffffffffff
   140003bc0:	sub    rax,rcx
   140003bc3:	cmp    rax,r9
   140003bc6:	jbe    0x140003c95
   140003bcc:	test   r9,r9
   140003bcf:	je     0x140003c6f
   140003bd5:	mov    QWORD PTR [rsp+0x40],rbp
   140003bda:	lea    rbp,[rcx+r9*1]
   140003bde:	xor    r8d,r8d
   140003be1:	mov    rdx,rbp
   140003be4:	mov    rcx,rbx
   140003be7:	call   0x140001ee0
   140003bec:	test   al,al
   140003bee:	je     0x140003c6a
   140003bf0:	mov    rax,QWORD PTR [rbx+0x18]
   140003bf4:	cmp    rax,0x8
   140003bf8:	jb     0x140003bff
   140003bfa:	mov    rdx,QWORD PTR [rbx]
   140003bfd:	jmp    0x140003c02
   140003bff:	mov    rdx,rbx
   140003c02:	cmp    rax,0x8
   140003c06:	jb     0x140003c0d
   140003c08:	mov    rcx,QWORD PTR [rbx]
   140003c0b:	jmp    0x140003c10
   140003c0d:	mov    rcx,rbx
   140003c10:	mov    r8,QWORD PTR [rbx+0x10]
   140003c14:	sub    r8,r14
   140003c17:	je     0x140003c2d
   140003c19:	lea    rax,[r14+rsi*1]
   140003c1d:	lea    rdx,[rdx+r14*2]
   140003c21:	add    r8,r8
   140003c24:	lea    rcx,[rcx+rax*2]
   140003c28:	call   0x1400056d0
   140003c2d:	cmp    QWORD PTR [rbx+0x18],0x8
   140003c32:	jb     0x140003c39
   140003c34:	mov    rax,QWORD PTR [rbx]
   140003c37:	jmp    0x140003c3c
   140003c39:	mov    rax,rbx
   140003c3c:	test   rsi,rsi
   140003c3f:	je     0x140003c51
   140003c41:	lea    r8,[rsi+rsi*1]
   140003c45:	lea    rcx,[rax+r14*2]
   140003c49:	mov    rdx,rdi
   140003c4c:	call   0x1400056d0
   140003c51:	cmp    QWORD PTR [rbx+0x18],0x8
   140003c56:	mov    QWORD PTR [rbx+0x10],rbp
   140003c5a:	jb     0x140003c61
   140003c5c:	mov    rax,QWORD PTR [rbx]
   140003c5f:	jmp    0x140003c64
   140003c61:	mov    rax,rbx
   140003c64:	xor    ecx,ecx
   140003c66:	mov    WORD PTR [rax+rbp*2],cx
   140003c6a:	mov    rbp,QWORD PTR [rsp+0x40]
   140003c6f:	mov    rax,rbx
   140003c72:	mov    rbx,QWORD PTR [rsp+0x48]
   140003c77:	mov    rsi,QWORD PTR [rsp+0x50]
   140003c7c:	mov    rdi,QWORD PTR [rsp+0x58]
   140003c81:	add    rsp,0x30
   140003c85:	pop    r14
   140003c87:	ret    
   140003c88:	lea    rcx,[rip+0x23c39]        # 0x1400278c8
   140003c8f:	call   0x14000522c
   140003c94:	int3   
   140003c95:	lea    rcx,[rip+0x23c1c]        # 0x1400278b8
   140003c9c:	call   0x1400051f4
   140003ca1:	int3   
   140003ca2:	int3   
   140003ca3:	int3   
   140003ca4:	int3   
   140003ca5:	int3   
   140003ca6:	int3   
   140003ca7:	int3   
   140003ca8:	int3   
   140003ca9:	int3   
   140003caa:	int3   
   140003cab:	int3   
   140003cac:	int3   
   140003cad:	int3   
   140003cae:	int3   
   140003caf:	int3   
   140003cb0:	cmp    WORD PTR [r8],0x0
   140003cb5:	jne    0x140003cbf
   140003cb7:	xor    r9d,r9d
   140003cba:	jmp    0x140003b30
   140003cbf:	or     r9,0xffffffffffffffff
   140003cc3:	inc    r9
   140003cc6:	cmp    WORD PTR [r8+r9*2],0x0
   140003ccc:	jne    0x140003cc3
   140003cce:	jmp    0x140003b30
   140003cd3:	int3   
   140003cd4:	int3   
   140003cd5:	int3   
   140003cd6:	int3   
   140003cd7:	int3   
   140003cd8:	int3   
   140003cd9:	int3   
   140003cda:	int3   
   140003cdb:	int3   
   140003cdc:	int3   
   140003cdd:	int3   
   140003cde:	int3   
   140003cdf:	int3   
   140003ce0:	rex push rbp
   140003ce2:	lea    rbp,[rsp-0x20]
   140003ce7:	sub    rsp,0x120
   140003cee:	mov    QWORD PTR [rbp-0x58],0xfffffffffffffffe
   140003cf6:	mov    QWORD PTR [rsp+0x130],rbx
   140003cfe:	xor    edx,edx
   140003d00:	lea    r8d,[rdx+0x68]
   140003d04:	lea    rcx,[rbp-0x50]
   140003d08:	call   0x140007150
   140003d0d:	mov    DWORD PTR [rbp-0x50],0x68
   140003d14:	xor    eax,eax
   140003d16:	mov    QWORD PTR [rbp-0x70],rax
   140003d1a:	mov    QWORD PTR [rbp-0x68],rax
   140003d1e:	mov    QWORD PTR [rbp-0x60],rax
   140003d22:	mov    QWORD PTR [rbp-0x78],0x7
   140003d2a:	xor    ebx,ebx
   140003d2c:	mov    QWORD PTR [rbp-0x80],rbx
   140003d30:	mov    WORD PTR [rsp+0x70],bx
   140003d35:	or     r9,0xffffffffffffffff
   140003d39:	xor    r8d,r8d
   140003d3c:	lea    rdx,[rip+0x322d5]        # 0x140036018
   140003d43:	lea    rcx,[rsp+0x70]
   140003d48:	call   0x140002970
   140003d4d:	nop
   140003d4e:	lea    r8d,[rbx+0xf]
   140003d52:	lea    rdx,[rip+0x2394f]        # 0x1400276a8
   140003d59:	lea    rcx,[rsp+0x70]
   140003d5e:	call   0x140002440
   140003d63:	mov    QWORD PTR [rsp+0x68],0x7
   140003d6c:	mov    QWORD PTR [rsp+0x60],rbx
   140003d71:	mov    WORD PTR [rsp+0x50],bx
   140003d76:	lea    r8d,[rbx+0x7]
   140003d7a:	lea    rdx,[rip+0x239ff]        # 0x140027780
   140003d81:	lea    rcx,[rsp+0x50]
   140003d86:	call   0x140002440
   140003d8b:	cmp    QWORD PTR [rip+0x322d6],rbx        # 0x140036068
   140003d92:	je     0x140003dd6
   140003d94:	lea    r8d,[rbx+0xb]
   140003d98:	lea    rdx,[rip+0x239f1]        # 0x140027790
   140003d9f:	lea    rcx,[rsp+0x50]
   140003da4:	call   0x140002440
   140003da9:	or     r9,0xffffffffffffffff
   140003dad:	xor    r8d,r8d
   140003db0:	lea    rdx,[rip+0x322a1]        # 0x140036058
   140003db7:	lea    rcx,[rsp+0x50]
   140003dbc:	call   0x1400022d0
   140003dc1:	lea    r8d,[rbx+0x1]
   140003dc5:	lea    rdx,[rip+0x239dc]        # 0x1400277a8
   140003dcc:	lea    rcx,[rsp+0x50]
   140003dd1:	call   0x140002440
   140003dd6:	mov    r8d,0x50
   140003ddc:	lea    rdx,[rip+0x239cd]        # 0x1400277b0
   140003de3:	lea    rcx,[rsp+0x50]
   140003de8:	call   0x140002440
   140003ded:	mov    r8d,0x15
   140003df3:	lea    rdx,[rip+0x23a5e]        # 0x140027858
   140003dfa:	lea    rcx,[rsp+0x50]
   140003dff:	call   0x140002440
   140003e04:	or     r9,0xffffffffffffffff
   140003e08:	xor    r8d,r8d
   140003e0b:	lea    rdx,[rip+0x32226]        # 0x140036038
   140003e12:	lea    rcx,[rsp+0x50]
   140003e17:	call   0x1400022d0
   140003e1c:	mov    r8d,0x2
   140003e22:	lea    rdx,[rip+0x23a5b]        # 0x140027884
   140003e29:	lea    rcx,[rsp+0x50]
   140003e2e:	call   0x140002440
   140003e33:	or     r9,0xffffffffffffffff
   140003e37:	xor    r8d,r8d
   140003e3a:	lea    rdx,[rip+0x32257]        # 0x140036098
   140003e41:	lea    rcx,[rsp+0x50]
   140003e46:	call   0x1400022d0
   140003e4b:	mov    r8d,0x2
   140003e51:	lea    rdx,[rip+0x23a34]        # 0x14002788c
   140003e58:	lea    rcx,[rsp+0x50]
   140003e5d:	call   0x140002440
   140003e62:	or     r9,0xffffffffffffffff
   140003e66:	xor    r8d,r8d
   140003e69:	lea    rdx,[rip+0x32208]        # 0x140036078
   140003e70:	lea    rcx,[rsp+0x50]
   140003e75:	call   0x1400022d0
   140003e7a:	mov    r8d,0xd
   140003e80:	lea    rdx,[rip+0x23a11]        # 0x140027898
   140003e87:	lea    rcx,[rsp+0x50]
   140003e8c:	call   0x140002440
   140003e91:	lea    rdx,[rsp+0x50]
   140003e96:	cmp    QWORD PTR [rsp+0x68],0x8
   140003e9c:	cmovae rdx,QWORD PTR [rsp+0x50]
   140003ea2:	lea    rcx,[rsp+0x70]
   140003ea7:	cmp    QWORD PTR [rbp-0x78],0x8
   140003eac:	cmovae rcx,QWORD PTR [rsp+0x70]
   140003eb2:	lea    rax,[rbp-0x70]
   140003eb6:	mov    QWORD PTR [rsp+0x48],rax
   140003ebb:	lea    rax,[rbp-0x50]
   140003ebf:	mov    QWORD PTR [rsp+0x40],rax
   140003ec4:	mov    QWORD PTR [rsp+0x38],rbx
   140003ec9:	mov    QWORD PTR [rsp+0x30],rbx
   140003ece:	mov    DWORD PTR [rsp+0x28],0x8000000
   140003ed6:	mov    DWORD PTR [rsp+0x20],ebx
   140003eda:	xor    r9d,r9d
   140003edd:	xor    r8d,r8d
   140003ee0:	call   QWORD PTR [rip+0x23142]        # 0x140027028
   140003ee6:	test   eax,eax
   140003ee8:	jne    0x140003ef3
   140003eea:	lea    ecx,[rax+0x73]
   140003eed:	call   0x1400048b0
   140003ef2:	int3   
   140003ef3:	or     edx,0xffffffff
   140003ef6:	mov    rcx,QWORD PTR [rbp-0x70]
   140003efa:	call   QWORD PTR [rip+0x23120]        # 0x140027020
   140003f00:	mov    rcx,QWORD PTR [rbp-0x70]
   140003f04:	call   QWORD PTR [rip+0x2312e]        # 0x140027038
   140003f0a:	mov    rcx,QWORD PTR [rbp-0x68]
   140003f0e:	call   QWORD PTR [rip+0x23124]        # 0x140027038
   140003f14:	nop
   140003f15:	cmp    QWORD PTR [rsp+0x68],0x8
   140003f1b:	jb     0x140003f27
   140003f1d:	mov    rcx,QWORD PTR [rsp+0x50]
   140003f22:	call   0x140005454
   140003f27:	mov    QWORD PTR [rsp+0x68],0x7
   140003f30:	mov    QWORD PTR [rsp+0x60],rbx
   140003f35:	mov    WORD PTR [rsp+0x50],bx
   140003f3a:	cmp    QWORD PTR [rbp-0x78],0x8
   140003f3f:	jb     0x140003f4b
   140003f41:	mov    rcx,QWORD PTR [rsp+0x70]
   140003f46:	call   0x140005454
   140003f4b:	mov    rbx,QWORD PTR [rsp+0x130]
   140003f53:	add    rsp,0x120
   140003f5a:	pop    rbp
   140003f5b:	ret    
   140003f5c:	int3   
   140003f5d:	int3   
   140003f5e:	int3   
   140003f5f:	int3   
   140003f60:	cmp    BYTE PTR [rcx],0x0
   140003f63:	jne    0x140003f68
   140003f65:	xor    eax,eax
   140003f67:	ret    
   140003f68:	or     rax,0xffffffffffffffff
   140003f6c:	nop    DWORD PTR [rax+0x0]
   140003f70:	inc    rax
   140003f73:	cmp    BYTE PTR [rcx+rax*1],0x0
   140003f77:	jne    0x140003f70
   140003f79:	ret    
   140003f7a:	int3   
   140003f7b:	int3   
   140003f7c:	int3   
   140003f7d:	int3   
   140003f7e:	int3   
   140003f7f:	int3   
   140003f80:	cmp    WORD PTR [rcx],0x0
   140003f84:	jne    0x140003f89
   140003f86:	xor    eax,eax
   140003f88:	ret    
   140003f89:	or     rax,0xffffffffffffffff
   140003f8d:	nop    DWORD PTR [rax]
   140003f90:	inc    rax
   140003f93:	cmp    WORD PTR [rcx+rax*2],0x0
   140003f98:	jne    0x140003f90
   140003f9a:	ret    
   140003f9b:	int3   
   140003f9c:	int3   
   140003f9d:	int3   
   140003f9e:	int3   
   140003f9f:	int3   
   140003fa0:	or     rax,0xffffffffffffffff
   140003fa4:	ret    
   140003fa5:	int3   
   140003fa6:	int3   
   140003fa7:	int3   
   140003fa8:	int3   
   140003fa9:	int3   
   140003faa:	int3   
   140003fab:	int3   
   140003fac:	int3   
   140003fad:	int3   
   140003fae:	int3   
   140003faf:	int3   
   140003fb0:	movabs rax,0x7fffffffffffffff
   140003fba:	ret    
   140003fbb:	int3   
   140003fbc:	int3   
   140003fbd:	int3   
   140003fbe:	int3   
   140003fbf:	int3   
   140003fc0:	or     rax,0xffffffffffffffff
   140003fc4:	ret    
   140003fc5:	int3   
   140003fc6:	int3   
   140003fc7:	int3   
   140003fc8:	int3   
   140003fc9:	int3   
   140003fca:	int3   
   140003fcb:	int3   
   140003fcc:	int3   
   140003fcd:	int3   
   140003fce:	int3   
   140003fcf:	int3   
   140003fd0:	movabs rax,0x7fffffffffffffff
   140003fda:	ret    
   140003fdb:	int3   
   140003fdc:	int3   
   140003fdd:	int3   
   140003fde:	int3   
   140003fdf:	int3   
   140003fe0:	or     rax,0xffffffffffffffff
   140003fe4:	ret    
   140003fe5:	int3   
   140003fe6:	int3   
   140003fe7:	int3   
   140003fe8:	int3   
   140003fe9:	int3   
   140003fea:	int3   
   140003feb:	int3   
   140003fec:	int3   
   140003fed:	int3   
   140003fee:	int3   
   140003fef:	int3   
   140003ff0:	movabs rax,0x7fffffffffffffff
   140003ffa:	ret    
   140003ffb:	int3   
   140003ffc:	int3   
   140003ffd:	int3   
   140003ffe:	int3   
   140003fff:	int3   
   140004000:	mov    rax,0xfffffffffffffffe
   140004007:	ret    
   140004008:	int3   
   140004009:	int3   
   14000400a:	int3   
   14000400b:	int3   
   14000400c:	int3   
   14000400d:	int3   
   14000400e:	int3   
   14000400f:	int3   
   140004010:	movabs rax,0x7ffffffffffffffe
   14000401a:	ret    
   14000401b:	int3   
   14000401c:	int3   
   14000401d:	int3   
   14000401e:	int3   
   14000401f:	int3   
   140004020:	mov    QWORD PTR [rsp+0x8],rbx
   140004025:	push   rdi
   140004026:	sub    rsp,0x30
   14000402a:	xor    ebx,ebx
   14000402c:	mov    ecx,r8d
   14000402f:	mov    rdi,rdx
   140004032:	mov    DWORD PTR [rsp+0x20],ebx
   140004036:	call   0x140005320
   14000403b:	mov    QWORD PTR [rdi+0x18],0xf
   140004043:	test   rax,rax
   140004046:	mov    QWORD PTR [rdi+0x10],rbx
   14000404a:	lea    rdx,[rip+0x23527]        # 0x140027578
   140004051:	cmovne rdx,rax
   140004055:	mov    BYTE PTR [rdi],bl
   140004057:	cmp    BYTE PTR [rdx],bl
   140004059:	je     0x140004069
   14000405b:	or     rbx,0xffffffffffffffff
   14000405f:	nop
   140004060:	inc    rbx
   140004063:	cmp    BYTE PTR [rdx+rbx*1],0x0
   140004067:	jne    0x140004060
   140004069:	mov    r8,rbx
   14000406c:	mov    rcx,rdi
   14000406f:	call   0x140002830
   140004074:	mov    rbx,QWORD PTR [rsp+0x40]
   140004079:	mov    rax,rdi
   14000407c:	add    rsp,0x30
   140004080:	pop    rdi
   140004081:	ret    
   140004082:	int3   
   140004083:	int3   
   140004084:	int3   
   140004085:	int3   
   140004086:	int3   
   140004087:	int3   
   140004088:	int3   
   140004089:	int3   
   14000408a:	int3   
   14000408b:	int3   
   14000408c:	int3   
   14000408d:	int3   
   14000408e:	int3   
   14000408f:	int3   
   140004090:	rex push rbx
   140004092:	sub    rsp,0x30
   140004096:	xor    eax,eax
   140004098:	mov    rbx,rdx
   14000409b:	mov    DWORD PTR [rsp+0x20],eax
   14000409f:	cmp    r8d,0x1
   1400040a3:	jne    0x1400040cf
   1400040a5:	mov    QWORD PTR [rdx+0x18],0xf
   1400040ad:	mov    QWORD PTR [rdx+0x10],rax
   1400040b1:	mov    BYTE PTR [rdx],al
   1400040b3:	lea    rdx,[rip+0x23516]        # 0x1400275d0
   1400040ba:	lea    r8d,[rax+0x15]
   1400040be:	mov    rcx,rbx
   1400040c1:	call   0x140002830
   1400040c6:	mov    rax,rbx
   1400040c9:	add    rsp,0x30
   1400040cd:	pop    rbx
   1400040ce:	ret    
   1400040cf:	call   0x140004020
   1400040d4:	mov    rax,rbx
   1400040d7:	add    rsp,0x30
   1400040db:	pop    rbx
   1400040dc:	ret    
   1400040dd:	int3   
   1400040de:	int3   
   1400040df:	int3   
   1400040e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400040e5:	push   rdi
   1400040e6:	sub    rsp,0x30
   1400040ea:	xor    ebx,ebx
   1400040ec:	mov    ecx,r8d
   1400040ef:	mov    rdi,rdx
   1400040f2:	mov    DWORD PTR [rsp+0x20],ebx
   1400040f6:	call   0x140005348
   1400040fb:	mov    QWORD PTR [rdi+0x18],0xf
   140004103:	test   rax,rax
   140004106:	mov    QWORD PTR [rdi+0x10],rbx
   14000410a:	lea    rdx,[rip+0x23467]        # 0x140027578
   140004111:	cmovne rdx,rax
   140004115:	mov    BYTE PTR [rdi],bl
   140004117:	cmp    BYTE PTR [rdx],bl
   140004119:	je     0x140004129
   14000411b:	or     rbx,0xffffffffffffffff
   14000411f:	nop
   140004120:	inc    rbx
   140004123:	cmp    BYTE PTR [rdx+rbx*1],0x0
   140004127:	jne    0x140004120
   140004129:	mov    r8,rbx
   14000412c:	mov    rcx,rdi
   14000412f:	call   0x140002830
   140004134:	mov    rbx,QWORD PTR [rsp+0x40]
   140004139:	mov    rax,rdi
   14000413c:	add    rsp,0x30
   140004140:	pop    rdi
   140004141:	ret    
   140004142:	int3   
   140004143:	int3   
   140004144:	int3   
   140004145:	int3   
   140004146:	int3   
   140004147:	int3   
   140004148:	int3   
   140004149:	int3   
   14000414a:	int3   
   14000414b:	int3   
   14000414c:	int3   
   14000414d:	int3   
   14000414e:	int3   
   14000414f:	int3   
   140004150:	test   r8,r8
   140004153:	jne    0x140004159
   140004155:	mov    rax,rcx
   140004158:	ret    
   140004159:	jmp    0x1400056d0
   14000415e:	int3   
   14000415f:	int3   
   140004160:	test   r8,r8
   140004163:	jne    0x140004169
   140004165:	mov    rax,rcx
   140004168:	ret    
   140004169:	add    r8,r8
   14000416c:	jmp    0x1400056d0
   140004171:	int3   
   140004172:	int3   
   140004173:	int3   
   140004174:	int3   
   140004175:	int3   
   140004176:	int3   
   140004177:	int3   
   140004178:	int3   
   140004179:	int3   
   14000417a:	int3   
   14000417b:	int3   
   14000417c:	int3   
   14000417d:	int3   
   14000417e:	int3   
   14000417f:	int3   
   140004180:	lea    rax,[rip+0x233e9]        # 0x140027570
   140004187:	ret    
   140004188:	int3   
   140004189:	int3   
   14000418a:	int3   
   14000418b:	int3   
   14000418c:	int3   
   14000418d:	int3   
   14000418e:	int3   
   14000418f:	int3   
   140004190:	lea    rax,[rip+0x23429]        # 0x1400275c0
   140004197:	ret    
   140004198:	int3   
   140004199:	int3   
   14000419a:	int3   
   14000419b:	int3   
   14000419c:	int3   
   14000419d:	int3   
   14000419e:	int3   
   14000419f:	int3   
   1400041a0:	lea    rax,[rip+0x23479]        # 0x140027620
   1400041a7:	ret    
   1400041a8:	int3   
   1400041a9:	int3   
   1400041aa:	int3   
   1400041ab:	int3   
   1400041ac:	int3   
   1400041ad:	int3   
   1400041ae:	int3   
   1400041af:	int3   
   1400041b0:	rex push rbx
   1400041b2:	sub    rsp,0x30
   1400041b6:	mov    rax,QWORD PTR [rsp+0x60]
   1400041bb:	mov    rbx,rcx
   1400041be:	cmp    r9,rax
   1400041c1:	jne    0x140004206
   1400041c3:	cmp    QWORD PTR [rcx+0x18],0x8
   1400041c8:	jb     0x1400041cf
   1400041ca:	mov    rax,QWORD PTR [rcx]
   1400041cd:	jmp    0x1400041d2
   1400041cf:	mov    rax,rcx
   1400041d2:	xor    ecx,ecx
   1400041d4:	test   r8,r8
   1400041d7:	jne    0x1400041de
   1400041d9:	mov    r8d,ecx
   1400041dc:	jmp    0x1400041e4
   1400041de:	sub    r8,rdx
   1400041e1:	sar    r8,1
   1400041e4:	test   rdx,rdx
   1400041e7:	je     0x1400041f2
   1400041e9:	mov    rcx,rdx
   1400041ec:	sub    rcx,rax
   1400041ef:	sar    rcx,1
   1400041f2:	mov    rdx,rcx
   1400041f5:	mov    rcx,rbx
   1400041f8:	call   0x140002f90
   1400041fd:	mov    rax,rbx
   140004200:	add    rsp,0x30
   140004204:	pop    rbx
   140004205:	ret    
   140004206:	cmp    QWORD PTR [rcx+0x18],0x8
   14000420b:	jb     0x140004212
   14000420d:	mov    r10,QWORD PTR [rcx]
   140004210:	jmp    0x140004215
   140004212:	mov    r10,rcx
   140004215:	xor    ecx,ecx
   140004217:	test   r8,r8
   14000421a:	jne    0x140004221
   14000421c:	mov    r8d,ecx
   14000421f:	jmp    0x140004227
   140004221:	sub    r8,rdx
   140004224:	sar    r8,1
   140004227:	test   rdx,rdx
   14000422a:	je     0x140004235
   14000422c:	mov    rcx,rdx
   14000422f:	sub    rcx,r10
   140004232:	sar    rcx,1
   140004235:	sub    rax,r9
   140004238:	mov    rdx,rcx
   14000423b:	mov    rcx,rbx
   14000423e:	sar    rax,1
   140004241:	mov    QWORD PTR [rsp+0x20],rax
   140004246:	call   0x1400045e0
   14000424b:	mov    rax,rbx
   14000424e:	add    rsp,0x30
   140004252:	pop    rbx
   140004253:	ret    
   140004254:	int3   
   140004255:	int3   
   140004256:	int3   
   140004257:	int3   
   140004258:	int3   
   140004259:	int3   
   14000425a:	int3   
   14000425b:	int3   
   14000425c:	int3   
   14000425d:	int3   
   14000425e:	int3   
   14000425f:	int3   
   140004260:	rex push rbx
   140004262:	push   rbp
   140004263:	push   rsi
   140004264:	push   r12
   140004266:	push   r15
   140004268:	sub    rsp,0x20
   14000426c:	mov    rbx,rcx
   14000426f:	mov    rcx,QWORD PTR [rcx+0x10]
   140004273:	mov    r15,r9
   140004276:	mov    rbp,r8
   140004279:	mov    rsi,rdx
   14000427c:	cmp    rcx,rdx
   14000427f:	jb     0x1400045cf
   140004285:	mov    rax,QWORD PTR [r9+0x10]
   140004289:	mov    r12,QWORD PTR [rsp+0x70]
   14000428e:	cmp    rax,r12
   140004291:	jb     0x1400045cf
   140004297:	mov    QWORD PTR [rsp+0x50],rdi
   14000429c:	mov    rdi,QWORD PTR [rsp+0x78]
   1400042a1:	mov    QWORD PTR [rsp+0x60],r14
   1400042a6:	mov    r14,rcx
   1400042a9:	sub    r14,rdx
   1400042ac:	mov    rdx,rcx
   1400042af:	cmp    r14,r8
   1400042b2:	cmovb  rbp,r14
   1400042b6:	sub    rax,r12
   1400042b9:	cmp    rax,rdi
   1400042bc:	cmovb  rdi,rax
   1400042c0:	or     rax,0xffffffffffffffff
   1400042c4:	sub    rdx,rbp
   1400042c7:	sub    rax,rdi
   1400042ca:	cmp    rax,rdx
   1400042cd:	jbe    0x1400045c2
   1400042d3:	mov    QWORD PTR [rsp+0x58],r13
   1400042d8:	lea    r13,[rdx+rdi*1]
   1400042dc:	sub    r14,rbp
   1400042df:	cmp    rcx,r13
   1400042e2:	jae    0x1400042f2
   1400042e4:	xor    r8d,r8d
   1400042e7:	mov    rdx,r13
   1400042ea:	mov    rcx,rbx
   1400042ed:	call   0x140001ee0
   1400042f2:	mov    rax,QWORD PTR [rbx+0x18]
   1400042f6:	cmp    rbx,r15
   1400042f9:	je     0x14000436d
   1400042fb:	cmp    rax,0x8
   1400042ff:	jb     0x140004306
   140004301:	mov    rdx,QWORD PTR [rbx]
   140004304:	jmp    0x140004309
   140004306:	mov    rdx,rbx
   140004309:	cmp    rax,0x8
   14000430d:	jb     0x140004314
   14000430f:	mov    rcx,QWORD PTR [rbx]
   140004312:	jmp    0x140004317
   140004314:	mov    rcx,rbx
   140004317:	test   r14,r14
   14000431a:	je     0x140004335
   14000431c:	lea    rax,[rsi+rbp*1]
   140004320:	lea    r8,[r14+r14*1]
   140004324:	lea    rdx,[rdx+rax*2]
   140004328:	lea    rax,[rsi+rdi*1]
   14000432c:	lea    rcx,[rcx+rax*2]
   140004330:	call   0x1400056d0
   140004335:	cmp    QWORD PTR [r15+0x18],0x8
   14000433a:	jb     0x14000433f
   14000433c:	mov    r15,QWORD PTR [r15]
   14000433f:	cmp    QWORD PTR [rbx+0x18],0x8
   140004344:	jb     0x14000434b
   140004346:	mov    rax,QWORD PTR [rbx]
   140004349:	jmp    0x14000434e
   14000434b:	mov    rax,rbx
   14000434e:	test   rdi,rdi
   140004351:	je     0x14000458a
   140004357:	lea    r8,[rdi+rdi*1]
   14000435b:	lea    rdx,[r15+r12*2]
   14000435f:	lea    rcx,[rax+rsi*2]
   140004363:	call   0x1400056d0
   140004368:	jmp    0x14000458a
   14000436d:	cmp    rdi,rbp
   140004370:	ja     0x1400043e6
   140004372:	cmp    rax,0x8
   140004376:	jb     0x14000437d
   140004378:	mov    rcx,QWORD PTR [rbx]
   14000437b:	jmp    0x140004380
   14000437d:	mov    rcx,rbx
   140004380:	cmp    rax,0x8
   140004384:	jb     0x14000438b
   140004386:	mov    rax,QWORD PTR [rbx]
   140004389:	jmp    0x14000438e
   14000438b:	mov    rax,rbx
   14000438e:	test   rdi,rdi
   140004391:	je     0x1400043a4
   140004393:	lea    rdx,[rcx+r12*2]
   140004397:	lea    r8,[rdi+rdi*1]
   14000439b:	lea    rcx,[rax+rsi*2]
   14000439f:	call   0x1400056d0
   1400043a4:	mov    rax,QWORD PTR [rbx+0x18]
   1400043a8:	cmp    rax,0x8
   1400043ac:	jb     0x1400043b3
   1400043ae:	mov    rdx,QWORD PTR [rbx]
   1400043b1:	jmp    0x1400043b6
   1400043b3:	mov    rdx,rbx
   1400043b6:	cmp    rax,0x8
   1400043ba:	jb     0x1400043c1
   1400043bc:	mov    rcx,QWORD PTR [rbx]
   1400043bf:	jmp    0x1400043c4
   1400043c1:	mov    rcx,rbx
   1400043c4:	test   r14,r14
   1400043c7:	je     0x14000458a
   1400043cd:	lea    rax,[rsi+rbp*1]
   1400043d1:	lea    r8,[r14+r14*1]
   1400043d5:	lea    rdx,[rdx+rax*2]
   1400043d9:	lea    rax,[rsi+rdi*1]
   1400043dd:	lea    rcx,[rcx+rax*2]
   1400043e1:	jmp    0x140004585
   1400043e6:	cmp    r12,rsi
   1400043e9:	ja     0x14000445f
   1400043eb:	cmp    rax,0x8
   1400043ef:	jb     0x1400043f6
   1400043f1:	mov    rdx,QWORD PTR [rbx]
   1400043f4:	jmp    0x1400043f9
   1400043f6:	mov    rdx,rbx
   1400043f9:	cmp    rax,0x8
   1400043fd:	jb     0x140004404
   1400043ff:	mov    rcx,QWORD PTR [rbx]
   140004402:	jmp    0x140004407
   140004404:	mov    rcx,rbx
   140004407:	test   r14,r14
   14000440a:	je     0x140004425
   14000440c:	lea    rax,[rsi+rbp*1]
   140004410:	lea    r8,[r14+r14*1]
   140004414:	lea    rdx,[rdx+rax*2]
   140004418:	lea    rax,[rsi+rdi*1]
   14000441c:	lea    rcx,[rcx+rax*2]
   140004420:	call   0x1400056d0
   140004425:	mov    rax,QWORD PTR [rbx+0x18]
   140004429:	cmp    rax,0x8
   14000442d:	jb     0x140004434
   14000442f:	mov    rcx,QWORD PTR [rbx]
   140004432:	jmp    0x140004437
   140004434:	mov    rcx,rbx
   140004437:	cmp    rax,0x8
   14000443b:	jb     0x140004442
   14000443d:	mov    rax,QWORD PTR [rbx]
   140004440:	jmp    0x140004445
   140004442:	mov    rax,rbx
   140004445:	test   rdi,rdi
   140004448:	je     0x14000458a
   14000444e:	lea    rdx,[rcx+r12*2]
   140004452:	lea    r8,[rdi+rdi*1]
   140004456:	lea    rcx,[rax+rsi*2]
   14000445a:	jmp    0x140004585
   14000445f:	lea    r15,[rsi+rbp*1]
   140004463:	cmp    r15,r12
   140004466:	ja     0x1400044de
   140004468:	cmp    rax,0x8
   14000446c:	jb     0x140004473
   14000446e:	mov    rdx,QWORD PTR [rbx]
   140004471:	jmp    0x140004476
   140004473:	mov    rdx,rbx
   140004476:	cmp    rax,0x8
   14000447a:	jb     0x140004481
   14000447c:	mov    rcx,QWORD PTR [rbx]
   14000447f:	jmp    0x140004484
   140004481:	mov    rcx,rbx
   140004484:	test   r14,r14
   140004487:	je     0x14000449e
   140004489:	lea    rax,[rsi+rdi*1]
   14000448d:	lea    r8,[r14+r14*1]
   140004491:	lea    rdx,[rdx+r15*2]
   140004495:	lea    rcx,[rcx+rax*2]
   140004499:	call   0x1400056d0
   14000449e:	mov    rax,QWORD PTR [rbx+0x18]
   1400044a2:	cmp    rax,0x8
   1400044a6:	jb     0x1400044ad
   1400044a8:	mov    rcx,QWORD PTR [rbx]
   1400044ab:	jmp    0x1400044b0
   1400044ad:	mov    rcx,rbx
   1400044b0:	cmp    rax,0x8
   1400044b4:	jb     0x1400044bb
   1400044b6:	mov    rax,QWORD PTR [rbx]
   1400044b9:	jmp    0x1400044be
   1400044bb:	mov    rax,rbx
   1400044be:	test   rdi,rdi
   1400044c1:	je     0x14000458a
   1400044c7:	sub    r12,rbp
   1400044ca:	lea    r8,[rdi+rdi*1]
   1400044ce:	add    r12,rdi
   1400044d1:	lea    rdx,[rcx+r12*2]
   1400044d5:	lea    rcx,[rax+rsi*2]
   1400044d9:	jmp    0x140004585
   1400044de:	cmp    rax,0x8
   1400044e2:	jb     0x1400044e9
   1400044e4:	mov    rcx,QWORD PTR [rbx]
   1400044e7:	jmp    0x1400044ec
   1400044e9:	mov    rcx,rbx
   1400044ec:	cmp    rax,0x8
   1400044f0:	jb     0x1400044f7
   1400044f2:	mov    rax,QWORD PTR [rbx]
   1400044f5:	jmp    0x1400044fa
   1400044f7:	mov    rax,rbx
   1400044fa:	test   rbp,rbp
   1400044fd:	je     0x140004514
   1400044ff:	lea    rdx,[rcx+r12*2]
   140004503:	lea    r8,[rbp*2+0x0]
   14000450b:	lea    rcx,[rax+rsi*2]
   14000450f:	call   0x1400056d0
   140004514:	mov    rax,QWORD PTR [rbx+0x18]
   140004518:	cmp    rax,0x8
   14000451c:	jb     0x140004523
   14000451e:	mov    rdx,QWORD PTR [rbx]
   140004521:	jmp    0x140004526
   140004523:	mov    rdx,rbx
   140004526:	cmp    rax,0x8
   14000452a:	jb     0x140004531
   14000452c:	mov    rcx,QWORD PTR [rbx]
   14000452f:	jmp    0x140004534
   140004531:	mov    rcx,rbx
   140004534:	test   r14,r14
   140004537:	je     0x14000454e
   140004539:	lea    rax,[rsi+rdi*1]
   14000453d:	lea    r8,[r14+r14*1]
   140004541:	lea    rdx,[rdx+r15*2]
   140004545:	lea    rcx,[rcx+rax*2]
   140004549:	call   0x1400056d0
   14000454e:	mov    rax,QWORD PTR [rbx+0x18]
   140004552:	cmp    rax,0x8
   140004556:	jb     0x14000455d
   140004558:	mov    rdx,QWORD PTR [rbx]
   14000455b:	jmp    0x140004560
   14000455d:	mov    rdx,rbx
   140004560:	cmp    rax,0x8
   140004564:	jb     0x14000456b
   140004566:	mov    rcx,QWORD PTR [rbx]
   140004569:	jmp    0x14000456e
   14000456b:	mov    rcx,rbx
   14000456e:	mov    r8,rdi
   140004571:	sub    r8,rbp
   140004574:	je     0x14000458a
   140004576:	lea    rax,[r12+rdi*1]
   14000457a:	add    r8,r8
   14000457d:	lea    rcx,[rcx+r15*2]
   140004581:	lea    rdx,[rdx+rax*2]
   140004585:	call   0x1400056d0
   14000458a:	cmp    QWORD PTR [rbx+0x18],0x8
   14000458f:	mov    QWORD PTR [rbx+0x10],r13
   140004593:	jb     0x14000459a
   140004595:	mov    rax,QWORD PTR [rbx]
   140004598:	jmp    0x14000459d
   14000459a:	mov    rax,rbx
   14000459d:	mov    rdi,QWORD PTR [rsp+0x50]
   1400045a2:	mov    r14,QWORD PTR [rsp+0x60]
   1400045a7:	xor    ecx,ecx
   1400045a9:	mov    WORD PTR [rax+r13*2],cx
   1400045ae:	mov    r13,QWORD PTR [rsp+0x58]
   1400045b3:	mov    rax,rbx
   1400045b6:	add    rsp,0x20
   1400045ba:	pop    r15
   1400045bc:	pop    r12
   1400045be:	pop    rsi
   1400045bf:	pop    rbp
   1400045c0:	pop    rbx
   1400045c1:	ret    
   1400045c2:	lea    rcx,[rip+0x232ef]        # 0x1400278b8
   1400045c9:	call   0x1400051f4
   1400045ce:	int3   
   1400045cf:	lea    rcx,[rip+0x232f2]        # 0x1400278c8
   1400045d6:	call   0x14000522c
   1400045db:	int3   
   1400045dc:	int3   
   1400045dd:	int3   
   1400045de:	int3   
   1400045df:	int3   
   1400045e0:	mov    QWORD PTR [rsp+0x20],rbx
   1400045e5:	push   rbp
   1400045e6:	push   rsi
   1400045e7:	push   r12
   1400045e9:	sub    rsp,0x30
   1400045ed:	mov    rbp,r9
   1400045f0:	mov    rsi,r8
   1400045f3:	mov    r12,rdx
   1400045f6:	mov    rbx,rcx
   1400045f9:	test   r9,r9
   1400045fc:	je     0x14000466a
   1400045fe:	mov    r8,QWORD PTR [rcx+0x18]
   140004602:	cmp    r8,0x8
   140004606:	jb     0x14000460d
   140004608:	mov    rax,QWORD PTR [rcx]
   14000460b:	jmp    0x140004610
   14000460d:	mov    rax,rcx
   140004610:	cmp    r9,rax
   140004613:	jb     0x14000466a
   140004615:	cmp    r8,0x8
   140004619:	jb     0x14000461e
   14000461b:	mov    rcx,QWORD PTR [rcx]
   14000461e:	mov    rax,QWORD PTR [rbx+0x10]
   140004622:	lea    rcx,[rcx+rax*2]
   140004626:	cmp    rcx,r9
   140004629:	jbe    0x14000466a
   14000462b:	cmp    r8,0x8
   14000462f:	jb     0x140004636
   140004631:	mov    rax,QWORD PTR [rbx]
   140004634:	jmp    0x140004639
   140004636:	mov    rax,rbx
   140004639:	sub    rbp,rax
   14000463c:	mov    rax,QWORD PTR [rsp+0x70]
   140004641:	mov    r9,rbx
   140004644:	sar    rbp,1
   140004647:	mov    QWORD PTR [rsp+0x28],rax
   14000464c:	mov    r8,rsi
   14000464f:	mov    rcx,rbx
   140004652:	mov    QWORD PTR [rsp+0x20],rbp
   140004657:	call   0x140004260
   14000465c:	mov    rbx,QWORD PTR [rsp+0x68]
   140004661:	add    rsp,0x30
   140004665:	pop    r12
   140004667:	pop    rsi
   140004668:	pop    rbp
   140004669:	ret    
   14000466a:	mov    rcx,QWORD PTR [rbx+0x10]
   14000466e:	cmp    rcx,rdx
   140004671:	jb     0x1400047fd
   140004677:	mov    QWORD PTR [rsp+0x58],r14
   14000467c:	mov    r14,QWORD PTR [rsp+0x70]
   140004681:	mov    QWORD PTR [rsp+0x60],r15
   140004686:	mov    r15,rcx
   140004689:	sub    r15,rdx
   14000468c:	cmp    r15,rsi
   14000468f:	cmovb  rsi,r15
   140004693:	or     rax,0xffffffffffffffff
   140004697:	sub    rax,r14
   14000469a:	sub    rcx,rsi
   14000469d:	cmp    rax,rcx
   1400046a0:	jbe    0x14000480a
   1400046a6:	sub    r15,rsi
   1400046a9:	cmp    r14,rsi
   1400046ac:	jae    0x1400046ec
   1400046ae:	mov    rax,QWORD PTR [rbx+0x18]
   1400046b2:	cmp    rax,0x8
   1400046b6:	jb     0x1400046bd
   1400046b8:	mov    rdx,QWORD PTR [rbx]
   1400046bb:	jmp    0x1400046c0
   1400046bd:	mov    rdx,rbx
   1400046c0:	cmp    rax,0x8
   1400046c4:	jb     0x1400046cb
   1400046c6:	mov    rcx,QWORD PTR [rbx]
   1400046c9:	jmp    0x1400046ce
   1400046cb:	mov    rcx,rbx
   1400046ce:	test   r15,r15
   1400046d1:	je     0x1400046ec
   1400046d3:	lea    rax,[r12+rsi*1]
   1400046d7:	lea    r8,[r15+r15*1]
   1400046db:	lea    rdx,[rdx+rax*2]
   1400046df:	lea    rax,[r12+r14*1]
   1400046e3:	lea    rcx,[rcx+rax*2]
   1400046e7:	call   0x1400056d0
   1400046ec:	mov    QWORD PTR [rsp+0x50],rdi
   1400046f1:	test   r14,r14
   1400046f4:	jne    0x1400046ff
   1400046f6:	test   rsi,rsi
   1400046f9:	je     0x1400047dd
   1400046ff:	mov    r8,QWORD PTR [rbx+0x10]
   140004703:	movabs rax,0x7ffffffffffffffe
   14000470d:	mov    rdi,r8
   140004710:	sub    rdi,rsi
   140004713:	add    rdi,r14
   140004716:	cmp    rdi,rax
   140004719:	ja     0x140004817
   14000471f:	mov    rcx,QWORD PTR [rbx+0x18]
   140004723:	cmp    rcx,rdi
   140004726:	jae    0x140004750
   140004728:	mov    rdx,rdi
   14000472b:	mov    rcx,rbx
   14000472e:	call   0x140001c90
   140004733:	test   rdi,rdi
   140004736:	je     0x1400047dd
   14000473c:	cmp    rsi,r14
   14000473f:	jae    0x1400047a0
   140004741:	mov    rax,QWORD PTR [rbx+0x18]
   140004745:	cmp    rax,0x8
   140004749:	jb     0x140004771
   14000474b:	mov    rdx,QWORD PTR [rbx]
   14000474e:	jmp    0x140004774
   140004750:	test   rdi,rdi
   140004753:	jne    0x14000473c
   140004755:	xor    eax,eax
   140004757:	mov    QWORD PTR [rbx+0x10],rax
   14000475b:	cmp    rcx,0x8
   14000475f:	jb     0x140004769
   140004761:	mov    rcx,QWORD PTR [rbx]
   140004764:	mov    WORD PTR [rcx],ax
   140004767:	jmp    0x1400047dd
   140004769:	mov    rcx,rbx
   14000476c:	mov    WORD PTR [rbx],ax
   14000476f:	jmp    0x1400047dd
   140004771:	mov    rdx,rbx
   140004774:	cmp    rax,0x8
   140004778:	jb     0x14000477f
   14000477a:	mov    rcx,QWORD PTR [rbx]
   14000477d:	jmp    0x140004782
   14000477f:	mov    rcx,rbx
   140004782:	test   r15,r15
   140004785:	je     0x1400047a0
   140004787:	lea    rax,[r12+rsi*1]
   14000478b:	lea    r8,[r15+r15*1]
   14000478f:	lea    rdx,[rdx+rax*2]
   140004793:	lea    rax,[r12+r14*1]
   140004797:	lea    rcx,[rcx+rax*2]
   14000479b:	call   0x1400056d0
   1400047a0:	cmp    QWORD PTR [rbx+0x18],0x8
   1400047a5:	jb     0x1400047ac
   1400047a7:	mov    rax,QWORD PTR [rbx]
   1400047aa:	jmp    0x1400047af
   1400047ac:	mov    rax,rbx
   1400047af:	test   r14,r14
   1400047b2:	je     0x1400047c4
   1400047b4:	lea    r8,[r14+r14*1]
   1400047b8:	lea    rcx,[rax+r12*2]
   1400047bc:	mov    rdx,rbp
   1400047bf:	call   0x1400056d0
   1400047c4:	cmp    QWORD PTR [rbx+0x18],0x8
   1400047c9:	mov    QWORD PTR [rbx+0x10],rdi
   1400047cd:	jb     0x1400047d4
   1400047cf:	mov    rcx,QWORD PTR [rbx]
   1400047d2:	jmp    0x1400047d7
   1400047d4:	mov    rcx,rbx
   1400047d7:	xor    eax,eax
   1400047d9:	mov    WORD PTR [rcx+rdi*2],ax
   1400047dd:	mov    rdi,QWORD PTR [rsp+0x50]
   1400047e2:	mov    r14,QWORD PTR [rsp+0x58]
   1400047e7:	mov    r15,QWORD PTR [rsp+0x60]
   1400047ec:	mov    rax,rbx
   1400047ef:	mov    rbx,QWORD PTR [rsp+0x68]
   1400047f4:	add    rsp,0x30
   1400047f8:	pop    r12
   1400047fa:	pop    rsi
   1400047fb:	pop    rbp
   1400047fc:	ret    
   1400047fd:	lea    rcx,[rip+0x230c4]        # 0x1400278c8
   140004804:	call   0x14000522c
   140004809:	int3   
   14000480a:	lea    rcx,[rip+0x230a7]        # 0x1400278b8
   140004811:	call   0x1400051f4
   140004816:	int3   
   140004817:	lea    rcx,[rip+0x2309a]        # 0x1400278b8
   14000481e:	call   0x1400051f4
   140004823:	int3   
   140004824:	int3   
   140004825:	int3   
   140004826:	int3   
   140004827:	int3   
   140004828:	int3   
   140004829:	int3   
   14000482a:	int3   
   14000482b:	int3   
   14000482c:	int3   
   14000482d:	int3   
   14000482e:	int3   
   14000482f:	int3   
   140004830:	mov    QWORD PTR [rsp+0x8],rbx
   140004835:	push   rdi
   140004836:	sub    rsp,0x20
   14000483a:	mov    rdi,QWORD PTR [rcx+0x10]
   14000483e:	mov    rbx,rcx
   140004841:	cmp    rdi,rdx
   140004844:	ja     0x14000486c
   140004846:	cmp    QWORD PTR [rcx+0x18],rdx
   14000484a:	je     0x14000486c
   14000484c:	mov    r8b,0x1
   14000484f:	call   0x140001ee0
   140004854:	test   al,al
   140004856:	je     0x14000486c
   140004858:	cmp    QWORD PTR [rbx+0x18],0x8
   14000485d:	mov    QWORD PTR [rbx+0x10],rdi
   140004861:	jb     0x140004866
   140004863:	mov    rbx,QWORD PTR [rbx]
   140004866:	xor    eax,eax
   140004868:	mov    WORD PTR [rbx+rdi*2],ax
   14000486c:	mov    rbx,QWORD PTR [rsp+0x30]
   140004871:	add    rsp,0x20
   140004875:	pop    rdi
   140004876:	ret    
   140004877:	int3   
   140004878:	int3   
   140004879:	int3   
   14000487a:	int3   
   14000487b:	int3   
   14000487c:	int3   
   14000487d:	int3   
   14000487e:	int3   
   14000487f:	int3   
   140004880:	mov    rax,rdx
   140004883:	ret    
   140004884:	int3   
   140004885:	int3   
   140004886:	int3   
   140004887:	int3   
   140004888:	int3   
   140004889:	int3   
   14000488a:	int3   
   14000488b:	int3   
   14000488c:	int3   
   14000488d:	int3   
   14000488e:	int3   
   14000488f:	int3   
   140004890:	mov    rax,rdx
   140004893:	ret    
   140004894:	int3   
   140004895:	int3   
   140004896:	int3   
   140004897:	int3   
   140004898:	int3   
   140004899:	int3   
   14000489a:	int3   
   14000489b:	int3   
   14000489c:	int3   
   14000489d:	int3   
   14000489e:	int3   
   14000489f:	int3   
   1400048a0:	mov    rax,rcx
   1400048a3:	ret    
   1400048a4:	int3   
   1400048a5:	int3   
   1400048a6:	int3   
   1400048a7:	int3   
   1400048a8:	int3   
   1400048a9:	int3   
   1400048aa:	int3   
   1400048ab:	int3   
   1400048ac:	int3   
   1400048ad:	int3   
   1400048ae:	int3   
   1400048af:	int3   
   1400048b0:	rex push rbx
   1400048b2:	sub    rsp,0x420
   1400048b9:	mov    ebx,ecx
   1400048bb:	mov    rcx,QWORD PTR [rip+0x333fe]        # 0x140037cc0
   1400048c2:	lea    r8,[rsp+0x20]
   1400048c7:	mov    r9d,0x100
   1400048cd:	mov    edx,0x6d
   1400048d2:	call   QWORD PTR [rip+0x22a00]        # 0x1400272d8
   1400048d8:	mov    rcx,QWORD PTR [rip+0x333e1]        # 0x140037cc0
   1400048df:	lea    r8,[rsp+0x220]
   1400048e7:	mov    r9d,0x100
   1400048ed:	mov    edx,ebx
   1400048ef:	call   QWORD PTR [rip+0x229e3]        # 0x1400272d8
   1400048f5:	lea    r8,[rsp+0x20]
   1400048fa:	lea    rdx,[rsp+0x220]
   140004902:	xor    r9d,r9d
   140004905:	xor    ecx,ecx
   140004907:	call   QWORD PTR [rip+0x229d3]        # 0x1400272e0
   14000490d:	mov    ecx,0x1
   140004912:	call   0x1400063f4
   140004917:	int3   
   140004918:	int3   
   140004919:	int3   
   14000491a:	int3   
   14000491b:	int3   
   14000491c:	int3   
   14000491d:	int3   
   14000491e:	int3   
   14000491f:	int3   
   140004920:	mov    rax,QWORD PTR [rcx+0x10]
   140004924:	ret    
   140004925:	int3   
   140004926:	int3   
   140004927:	int3   
   140004928:	int3   
   140004929:	int3   
   14000492a:	int3   
   14000492b:	int3   
   14000492c:	int3   
   14000492d:	int3   
   14000492e:	int3   
   14000492f:	int3   
   140004930:	mov    rax,QWORD PTR [rcx+0x10]
   140004934:	ret    
   140004935:	int3   
   140004936:	int3   
   140004937:	int3   
   140004938:	int3   
   140004939:	int3   
   14000493a:	int3   
   14000493b:	int3   
   14000493c:	int3   
   14000493d:	int3   
   14000493e:	int3   
   14000493f:	int3   
   140004940:	lea    rax,[rip+0x316c9]        # 0x140036010
   140004947:	ret    
   140004948:	int3   
   140004949:	int3   
   14000494a:	int3   
   14000494b:	int3   
   14000494c:	int3   
   14000494d:	int3   
   14000494e:	int3   
   14000494f:	int3   
   140004950:	mov    eax,DWORD PTR [rcx]
   140004952:	ret    
   140004953:	int3   
   140004954:	int3   
   140004955:	int3   
   140004956:	int3   
   140004957:	int3   
   140004958:	int3   
   140004959:	int3   
   14000495a:	int3   
   14000495b:	int3   
   14000495c:	int3   
   14000495d:	int3   
   14000495e:	int3   
   14000495f:	int3   
   140004960:	mov    eax,DWORD PTR [rcx]
   140004962:	ret    
   140004963:	int3   
   140004964:	int3   
   140004965:	int3   
   140004966:	int3   
   140004967:	int3   
   140004968:	int3   
   140004969:	int3   
   14000496a:	int3   
   14000496b:	int3   
   14000496c:	int3   
   14000496d:	int3   
   14000496e:	int3   
   14000496f:	int3   
   140004970:	mov    QWORD PTR [rsp+0x8],rbx
   140004975:	mov    QWORD PTR [rsp+0x10],rsi
   14000497a:	push   rdi
   14000497b:	sub    rsp,0x40
   14000497f:	xor    edi,edi
   140004981:	cmp    QWORD PTR [rip+0x316a0],rdi        # 0x140036028
   140004988:	jne    0x1400049fc
   14000498a:	lea    rcx,[rsp+0x20]
   14000498f:	call   0x140003720
   140004994:	lea    rsi,[rip+0x3167d]        # 0x140036018
   14000499b:	mov    rbx,rax
   14000499e:	cmp    rsi,rax
   1400049a1:	je     0x1400049dd
   1400049a3:	cmp    QWORD PTR [rip+0x31685],0x8        # 0x140036030
   1400049ab:	jb     0x1400049b9
   1400049ad:	mov    rcx,QWORD PTR [rip+0x31664]        # 0x140036018
   1400049b4:	call   0x140005454
   1400049b9:	mov    rdx,rbx
   1400049bc:	mov    rcx,rsi
   1400049bf:	mov    QWORD PTR [rip+0x31666],0x7        # 0x140036030
   1400049ca:	mov    QWORD PTR [rip+0x31657],rdi        # 0x140036028
   1400049d1:	mov    WORD PTR [rip+0x31640],di        # 0x140036018
   1400049d8:	call   0x140001aa0
   1400049dd:	cmp    QWORD PTR [rsp+0x38],0x8
   1400049e3:	jb     0x1400049ef
   1400049e5:	mov    rcx,QWORD PTR [rsp+0x20]
   1400049ea:	call   0x140005454
   1400049ef:	cmp    QWORD PTR [rip+0x31632],rdi        # 0x140036028
   1400049f6:	je     0x140004a83
   1400049fc:	cmp    QWORD PTR [rip+0x31645],rdi        # 0x140036048
   140004a03:	jne    0x140004a73
   140004a05:	lea    rcx,[rsp+0x20]
   140004a0a:	call   0x1400035d0
   140004a0f:	lea    rsi,[rip+0x31622]        # 0x140036038
   140004a16:	mov    rbx,rax
   140004a19:	cmp    rsi,rax
   140004a1c:	je     0x140004a58
   140004a1e:	cmp    QWORD PTR [rip+0x3162a],0x8        # 0x140036050
   140004a26:	jb     0x140004a34
   140004a28:	mov    rcx,QWORD PTR [rip+0x31609]        # 0x140036038
   140004a2f:	call   0x140005454
   140004a34:	mov    rdx,rbx
   140004a37:	mov    rcx,rsi
   140004a3a:	mov    QWORD PTR [rip+0x3160b],0x7        # 0x140036050
   140004a45:	mov    QWORD PTR [rip+0x315fc],rdi        # 0x140036048
   140004a4c:	mov    WORD PTR [rip+0x315e5],di        # 0x140036038
   140004a53:	call   0x140001aa0
   140004a58:	cmp    QWORD PTR [rsp+0x38],0x8
   140004a5e:	jb     0x140004a6a
   140004a60:	mov    rcx,QWORD PTR [rsp+0x20]
   140004a65:	call   0x140005454
   140004a6a:	cmp    QWORD PTR [rip+0x315d7],rdi        # 0x140036048
   140004a71:	je     0x140004a8e
   140004a73:	mov    rbx,QWORD PTR [rsp+0x50]
   140004a78:	mov    rsi,QWORD PTR [rsp+0x58]
   140004a7d:	add    rsp,0x40
   140004a81:	pop    rdi
   140004a82:	ret    
   140004a83:	mov    ecx,0x71
   140004a88:	call   0x1400048b0
   140004a8d:	int3   
   140004a8e:	mov    ecx,0x72
   140004a93:	call   0x1400048b0
   140004a98:	int3   
   140004a99:	int3   
   140004a9a:	int3   
   140004a9b:	int3   
   140004a9c:	int3   
   140004a9d:	int3   
   140004a9e:	int3   
   140004a9f:	int3   
   140004aa0:	sub    rsp,0x28
   140004aa4:	mov    QWORD PTR [rip+0x33215],rcx        # 0x140037cc0
   140004aab:	call   0x1400030c0
   140004ab0:	call   0x140004970
   140004ab5:	call   0x140003ce0
   140004aba:	xor    eax,eax
   140004abc:	add    rsp,0x28
   140004ac0:	ret    
   140004ac1:	int3   
   140004ac2:	int3   
   140004ac3:	int3   
   140004ac4:	int3   
   140004ac5:	int3   
   140004ac6:	int3   
   140004ac7:	int3   
   140004ac8:	int3   
   140004ac9:	int3   
   140004aca:	int3   
   140004acb:	int3   
   140004acc:	int3   
   140004acd:	int3   
   140004ace:	int3   
   140004acf:	int3   
   140004ad0:	jmp    0x14000658c
   140004ad5:	int3   
   140004ad6:	int3   
   140004ad7:	int3   
   140004ad8:	int3   
   140004ad9:	int3   
   140004ada:	int3   
   140004adb:	int3   
   140004adc:	int3   
   140004add:	int3   
   140004ade:	int3   
   140004adf:	int3   
   140004ae0:	rex push rbx
   140004ae2:	sub    rsp,0x20
   140004ae6:	add    r8,r8
   140004ae9:	mov    rbx,rcx
   140004aec:	call   0x1400056d0
   140004af1:	mov    rax,rbx
   140004af4:	add    rsp,0x20
   140004af8:	pop    rbx
   140004af9:	ret    
   140004afa:	int3   
   140004afb:	int3   
   140004afc:	int3   
   140004afd:	int3   
   140004afe:	int3   
   140004aff:	int3   
   140004b00:	add    r8,r8
   140004b03:	jmp    0x1400056d0
   140004b08:	int3   
   140004b09:	int3   
   140004b0a:	int3   
   140004b0b:	int3   
   140004b0c:	int3   
   140004b0d:	int3   
   140004b0e:	int3   
   140004b0f:	int3   
   140004b10:	sub    rsp,0x8
   140004b14:	mov    r9,rcx
   140004b17:	test   r8,r8
   140004b1a:	je     0x140004b30
   140004b1c:	mov    QWORD PTR [rsp],rdi
   140004b20:	mov    rdi,rcx
   140004b23:	movzx  eax,dx
   140004b26:	mov    rcx,r8
   140004b29:	rep stos WORD PTR es:[rdi],ax
   140004b2c:	mov    rdi,QWORD PTR [rsp]
   140004b30:	mov    rax,r9
   140004b33:	add    rsp,0x8
   140004b37:	ret    
   140004b38:	jmp    QWORD PTR [rip+0x2252a]        # 0x140027068
   140004b3e:	jmp    QWORD PTR [rip+0x2251c]        # 0x140027060
   140004b44:	jmp    QWORD PTR [rip+0x2250e]        # 0x140027058
   140004b4a:	jmp    QWORD PTR [rip+0x224e8]        # 0x140027038
   140004b50:	jmp    QWORD PTR [rip+0x224ca]        # 0x140027020
   140004b56:	jmp    QWORD PTR [rip+0x224cc]        # 0x140027028
   140004b5c:	jmp    QWORD PTR [rip+0x224ce]        # 0x140027030
   140004b62:	jmp    QWORD PTR [rip+0x22770]        # 0x1400272d8
   140004b68:	jmp    QWORD PTR [rip+0x22772]        # 0x1400272e0
   140004b6e:	jmp    QWORD PTR [rip+0x22494]        # 0x140027008
   140004b74:	jmp    QWORD PTR [rip+0x22486]        # 0x140027000
   140004b7a:	jmp    QWORD PTR [rip+0x22490]        # 0x140027010
   140004b80:	mov    rax,rcx
   140004b83:	ret    
   140004b84:	rex push rbx
   140004b86:	sub    rsp,0x20
   140004b8a:	mov    rbx,rcx
   140004b8d:	call   0x14000790c
   140004b92:	lea    rax,[rip+0x2333f]        # 0x140027ed8
   140004b99:	mov    QWORD PTR [rbx],rax
   140004b9c:	mov    rax,rbx
   140004b9f:	add    rsp,0x20
   140004ba3:	pop    rbx
   140004ba4:	ret    
   140004ba5:	int3   
   140004ba6:	int3   
   140004ba7:	int3   
   140004ba8:	rex push rbx
   140004baa:	sub    rsp,0x20
   140004bae:	lea    rax,[rip+0x23333]        # 0x140027ee8
   140004bb5:	lea    rdx,[rsp+0x30]
   140004bba:	mov    r8d,0x1
   140004bc0:	mov    QWORD PTR [rsp+0x30],rax
   140004bc5:	mov    rbx,rcx
   140004bc8:	call   0x1400078f0
   140004bcd:	lea    rax,[rip+0x23304]        # 0x140027ed8
   140004bd4:	mov    QWORD PTR [rbx],rax
   140004bd7:	mov    rax,rbx
   140004bda:	add    rsp,0x20
   140004bde:	pop    rbx
   140004bdf:	ret    
   140004be0:	rex push rbx
   140004be2:	sub    rsp,0x20
   140004be6:	mov    rbx,rcx
   140004be9:	call   0x14000790c
   140004bee:	lea    rax,[rip+0x2339b]        # 0x140027f90
   140004bf5:	mov    QWORD PTR [rbx],rax
   140004bf8:	mov    rax,rbx
   140004bfb:	add    rsp,0x20
   140004bff:	pop    rbx
   140004c00:	ret    
   140004c01:	int3   
   140004c02:	int3   
   140004c03:	int3   
   140004c04:	rex push rbx
   140004c06:	sub    rsp,0x20
   140004c0a:	mov    rbx,rcx
   140004c0d:	call   0x140007938
   140004c12:	lea    rax,[rip+0x23377]        # 0x140027f90
   140004c19:	mov    QWORD PTR [rbx],rax
   140004c1c:	mov    rax,rbx
   140004c1f:	add    rsp,0x20
   140004c23:	pop    rbx
   140004c24:	ret    
   140004c25:	int3   
   140004c26:	int3   
   140004c27:	int3   
   140004c28:	rex push rbx
   140004c2a:	sub    rsp,0x20
   140004c2e:	mov    rbx,rcx
   140004c31:	call   0x14000790c
   140004c36:	lea    rax,[rip+0x232db]        # 0x140027f18
   140004c3d:	mov    QWORD PTR [rbx],rax
   140004c40:	mov    rax,rbx
   140004c43:	add    rsp,0x20
   140004c47:	pop    rbx
   140004c48:	ret    
   140004c49:	int3   
   140004c4a:	int3   
   140004c4b:	int3   
   140004c4c:	rex push rbx
   140004c4e:	sub    rsp,0x20
   140004c52:	mov    QWORD PTR [rsp+0x30],rdx
   140004c57:	lea    rdx,[rsp+0x30]
   140004c5c:	mov    rbx,rcx
   140004c5f:	call   0x1400078c0
   140004c64:	lea    rax,[rip+0x232ad]        # 0x140027f18
   140004c6b:	mov    QWORD PTR [rbx],rax
   140004c6e:	mov    rax,rbx
   140004c71:	add    rsp,0x20
   140004c75:	pop    rbx
   140004c76:	ret    
   140004c77:	int3   
   140004c78:	rex push rbx
   140004c7a:	sub    rsp,0x20
   140004c7e:	mov    rbx,rcx
   140004c81:	call   0x14000790c
   140004c86:	lea    rax,[rip+0x232a3]        # 0x140027f30
   140004c8d:	mov    QWORD PTR [rbx],rax
   140004c90:	mov    rax,rbx
   140004c93:	add    rsp,0x20
   140004c97:	pop    rbx
   140004c98:	ret    
   140004c99:	int3   
   140004c9a:	int3   
   140004c9b:	int3   
   140004c9c:	rex push rbx
   140004c9e:	sub    rsp,0x20
   140004ca2:	mov    QWORD PTR [rsp+0x30],rdx
   140004ca7:	lea    rdx,[rsp+0x30]
   140004cac:	mov    rbx,rcx
   140004caf:	call   0x1400078c0
   140004cb4:	lea    rax,[rip+0x23275]        # 0x140027f30
   140004cbb:	mov    QWORD PTR [rbx],rax
   140004cbe:	mov    rax,rbx
   140004cc1:	add    rsp,0x20
   140004cc5:	pop    rbx
   140004cc6:	ret    
   140004cc7:	int3   
   140004cc8:	rex push rbx
   140004cca:	sub    rsp,0x20
   140004cce:	mov    rbx,rcx
   140004cd1:	call   0x14000790c
   140004cd6:	lea    rax,[rip+0x23223]        # 0x140027f00
   140004cdd:	mov    QWORD PTR [rbx],rax
   140004ce0:	mov    rax,rbx
   140004ce3:	add    rsp,0x20
   140004ce7:	pop    rbx
   140004ce8:	ret    
   140004ce9:	int3   
   140004cea:	int3   
   140004ceb:	int3   
   140004cec:	mov    QWORD PTR [rsp+0x10],rdx
   140004cf1:	push   rbx
   140004cf2:	sub    rsp,0x20
   140004cf6:	lea    rdx,[rsp+0x38]
   140004cfb:	mov    rbx,rcx
   140004cfe:	call   0x1400078c0
   140004d03:	lea    rax,[rip+0x231f6]        # 0x140027f00
   140004d0a:	mov    QWORD PTR [rbx],rax
   140004d0d:	mov    rax,rbx
   140004d10:	add    rsp,0x20
   140004d14:	pop    rbx
   140004d15:	ret    
   140004d16:	int3   
   140004d17:	int3   
   140004d18:	rex push rbx
   140004d1a:	sub    rsp,0x20
   140004d1e:	mov    rbx,rcx
   140004d21:	call   0x14000790c
   140004d26:	lea    rax,[rip+0x2321b]        # 0x140027f48
   140004d2d:	mov    QWORD PTR [rbx],rax
   140004d30:	mov    rax,rbx
   140004d33:	add    rsp,0x20
   140004d37:	pop    rbx
   140004d38:	ret    
   140004d39:	int3   
   140004d3a:	int3   
   140004d3b:	int3   
   140004d3c:	rex push rbx
   140004d3e:	sub    rsp,0x20
   140004d42:	mov    QWORD PTR [rsp+0x30],rdx
   140004d47:	lea    rdx,[rsp+0x30]
   140004d4c:	mov    rbx,rcx
   140004d4f:	call   0x1400078c0
   140004d54:	lea    rax,[rip+0x231ed]        # 0x140027f48
   140004d5b:	mov    QWORD PTR [rbx],rax
   140004d5e:	mov    rax,rbx
   140004d61:	add    rsp,0x20
   140004d65:	pop    rbx
   140004d66:	ret    
   140004d67:	int3   
   140004d68:	rex push rbx
   140004d6a:	sub    rsp,0x20
   140004d6e:	mov    rbx,rcx
   140004d71:	call   0x14000790c
   140004d76:	lea    rax,[rip+0x231fb]        # 0x140027f78
   140004d7d:	mov    QWORD PTR [rbx],rax
   140004d80:	mov    rax,rbx
   140004d83:	add    rsp,0x20
   140004d87:	pop    rbx
   140004d88:	ret    
   140004d89:	int3   
   140004d8a:	int3   
   140004d8b:	int3   
   140004d8c:	rex push rbx
   140004d8e:	sub    rsp,0x20
   140004d92:	mov    QWORD PTR [rsp+0x30],rdx
   140004d97:	lea    rdx,[rsp+0x30]
   140004d9c:	mov    rbx,rcx
   140004d9f:	call   0x1400078c0
   140004da4:	lea    rax,[rip+0x231cd]        # 0x140027f78
   140004dab:	mov    QWORD PTR [rbx],rax
   140004dae:	mov    rax,rbx
   140004db1:	add    rsp,0x20
   140004db5:	pop    rbx
   140004db6:	ret    
   140004db7:	int3   
   140004db8:	mov    QWORD PTR [rsp+0x8],rbx
   140004dbd:	push   rdi
   140004dbe:	sub    rsp,0x20
   140004dc2:	mov    rbx,rdx
   140004dc5:	mov    rdi,rcx
   140004dc8:	call   0x14000790c
   140004dcd:	lea    rax,[rip+0x231ec]        # 0x140027fc0
   140004dd4:	mov    QWORD PTR [rdi],rax
   140004dd7:	mov    eax,DWORD PTR [rbx+0x18]
   140004dda:	mov    rbx,QWORD PTR [rsp+0x30]
   140004ddf:	mov    DWORD PTR [rdi+0x18],eax
   140004de2:	mov    rax,rdi
   140004de5:	add    rsp,0x20
   140004de9:	pop    rdi
   140004dea:	ret    
   140004deb:	int3   
   140004dec:	mov    QWORD PTR [rsp+0x10],rbx
   140004df1:	push   rdi
   140004df2:	sub    rsp,0x20
   140004df6:	mov    rdi,rcx
   140004df9:	mov    ecx,edx
   140004dfb:	mov    ebx,edx
   140004dfd:	call   0x14000508c
   140004e02:	lea    rdx,[rsp+0x30]
   140004e07:	mov    rcx,rdi
   140004e0a:	mov    QWORD PTR [rsp+0x30],rax
   140004e0f:	call   0x1400078c0
   140004e14:	lea    rax,[rip+0x231a5]        # 0x140027fc0
   140004e1b:	mov    QWORD PTR [rdi],rax
   140004e1e:	mov    DWORD PTR [rdi+0x18],ebx
   140004e21:	mov    rbx,QWORD PTR [rsp+0x38]
   140004e26:	mov    rax,rdi
   140004e29:	add    rsp,0x20
   140004e2d:	pop    rdi
   140004e2e:	ret    
   140004e2f:	int3   
   140004e30:	rex push rbx
   140004e32:	sub    rsp,0x20
   140004e36:	mov    rbx,rcx
   140004e39:	call   0x14000790c
   140004e3e:	lea    rax,[rip+0x2311b]        # 0x140027f60
   140004e45:	mov    QWORD PTR [rbx],rax
   140004e48:	mov    rax,rbx
   140004e4b:	add    rsp,0x20
   140004e4f:	pop    rbx
   140004e50:	ret    
   140004e51:	int3   
   140004e52:	int3   
   140004e53:	int3   
   140004e54:	mov    QWORD PTR [rsp+0x10],rdx
   140004e59:	push   rbx
   140004e5a:	sub    rsp,0x20
   140004e5e:	lea    rdx,[rsp+0x38]
   140004e63:	mov    rbx,rcx
   140004e66:	call   0x1400078c0
   140004e6b:	lea    rax,[rip+0x230ee]        # 0x140027f60
   140004e72:	mov    QWORD PTR [rbx],rax
   140004e75:	mov    rax,rbx
   140004e78:	add    rsp,0x20
   140004e7c:	pop    rbx
   140004e7d:	ret    
   140004e7e:	int3   
   140004e7f:	int3   
   140004e80:	lea    rax,[rip+0x23051]        # 0x140027ed8
   140004e87:	mov    QWORD PTR [rcx],rax
   140004e8a:	jmp    0x140007980
   140004e8f:	int3   
   140004e90:	jmp    0x140007980
   140004e95:	int3   
   140004e96:	int3   
   140004e97:	int3   
   140004e98:	jmp    0x140007980
   140004e9d:	int3   
   140004e9e:	int3   
   140004e9f:	int3   
   140004ea0:	jmp    0x140007980
   140004ea5:	int3   
   140004ea6:	int3   
   140004ea7:	int3   
   140004ea8:	jmp    0x140007980
   140004ead:	int3   
   140004eae:	int3   
   140004eaf:	int3   
   140004eb0:	jmp    0x140007980
   140004eb5:	int3   
   140004eb6:	int3   
   140004eb7:	int3   
   140004eb8:	jmp    0x140007980
   140004ebd:	int3   
   140004ebe:	int3   
   140004ebf:	int3   
   140004ec0:	jmp    0x140007980
   140004ec5:	int3   
   140004ec6:	int3   
   140004ec7:	int3   
   140004ec8:	jmp    0x140007980
   140004ecd:	int3   
   140004ece:	int3   
   140004ecf:	int3   
   140004ed0:	mov    QWORD PTR [rsp+0x8],rbx
   140004ed5:	push   rdi
   140004ed6:	sub    rsp,0x20
   140004eda:	lea    rax,[rip+0x22ff7]        # 0x140027ed8
   140004ee1:	mov    ebx,edx
   140004ee3:	mov    rdi,rcx
   140004ee6:	mov    QWORD PTR [rcx],rax
   140004ee9:	call   0x140007980
   140004eee:	test   bl,0x1
   140004ef1:	je     0x140004efb
   140004ef3:	mov    rcx,rdi
   140004ef6:	call   0x140005454
   140004efb:	mov    rax,rdi
   140004efe:	mov    rbx,QWORD PTR [rsp+0x30]
   140004f03:	add    rsp,0x20
   140004f07:	pop    rdi
   140004f08:	ret    
   140004f09:	int3   
   140004f0a:	int3   
   140004f0b:	int3   
   140004f0c:	mov    QWORD PTR [rsp+0x8],rbx
   140004f11:	push   rdi
   140004f12:	sub    rsp,0x20
   140004f16:	mov    ebx,edx
   140004f18:	mov    rdi,rcx
   140004f1b:	call   0x140007980
   140004f20:	test   bl,0x1
   140004f23:	je     0x140004f2d
   140004f25:	mov    rcx,rdi
   140004f28:	call   0x140005454
   140004f2d:	mov    rax,rdi
   140004f30:	mov    rbx,QWORD PTR [rsp+0x30]
   140004f35:	add    rsp,0x20
   140004f39:	pop    rdi
   140004f3a:	ret    
   140004f3b:	int3   
   140004f3c:	mov    QWORD PTR [rsp+0x8],rbx
   140004f41:	push   rdi
   140004f42:	sub    rsp,0x20
   140004f46:	mov    ebx,edx
   140004f48:	mov    rdi,rcx
   140004f4b:	call   0x140007980
   140004f50:	test   bl,0x1
   140004f53:	je     0x140004f5d
   140004f55:	mov    rcx,rdi
   140004f58:	call   0x140005454
   140004f5d:	mov    rax,rdi
   140004f60:	mov    rbx,QWORD PTR [rsp+0x30]
   140004f65:	add    rsp,0x20
   140004f69:	pop    rdi
   140004f6a:	ret    
   140004f6b:	int3   
   140004f6c:	mov    QWORD PTR [rsp+0x8],rbx
   140004f71:	push   rdi
   140004f72:	sub    rsp,0x20
   140004f76:	mov    ebx,edx
   140004f78:	mov    rdi,rcx
   140004f7b:	call   0x140007980
   140004f80:	test   bl,0x1
   140004f83:	je     0x140004f8d
   140004f85:	mov    rcx,rdi
   140004f88:	call   0x140005454
   140004f8d:	mov    rax,rdi
   140004f90:	mov    rbx,QWORD PTR [rsp+0x30]
   140004f95:	add    rsp,0x20
   140004f99:	pop    rdi
   140004f9a:	ret    
   140004f9b:	int3   
   140004f9c:	mov    QWORD PTR [rsp+0x8],rbx
   140004fa1:	push   rdi
   140004fa2:	sub    rsp,0x20
   140004fa6:	mov    ebx,edx
   140004fa8:	mov    rdi,rcx
   140004fab:	call   0x140007980
   140004fb0:	test   bl,0x1
   140004fb3:	je     0x140004fbd
   140004fb5:	mov    rcx,rdi
   140004fb8:	call   0x140005454
   140004fbd:	mov    rax,rdi
   140004fc0:	mov    rbx,QWORD PTR [rsp+0x30]
   140004fc5:	add    rsp,0x20
   140004fc9:	pop    rdi
   140004fca:	ret    
   140004fcb:	int3   
   140004fcc:	mov    QWORD PTR [rsp+0x8],rbx
   140004fd1:	push   rdi
   140004fd2:	sub    rsp,0x20
   140004fd6:	mov    ebx,edx
   140004fd8:	mov    rdi,rcx
   140004fdb:	call   0x140007980
   140004fe0:	test   bl,0x1
   140004fe3:	je     0x140004fed
   140004fe5:	mov    rcx,rdi
   140004fe8:	call   0x140005454
   140004fed:	mov    rax,rdi
   140004ff0:	mov    rbx,QWORD PTR [rsp+0x30]
   140004ff5:	add    rsp,0x20
   140004ff9:	pop    rdi
   140004ffa:	ret    
   140004ffb:	int3   
   140004ffc:	mov    QWORD PTR [rsp+0x8],rbx
   140005001:	push   rdi
   140005002:	sub    rsp,0x20
   140005006:	mov    ebx,edx
   140005008:	mov    rdi,rcx
   14000500b:	call   0x140007980
   140005010:	test   bl,0x1
   140005013:	je     0x14000501d
   140005015:	mov    rcx,rdi
   140005018:	call   0x140005454
   14000501d:	mov    rax,rdi
   140005020:	mov    rbx,QWORD PTR [rsp+0x30]
   140005025:	add    rsp,0x20
   140005029:	pop    rdi
   14000502a:	ret    
   14000502b:	int3   
   14000502c:	mov    QWORD PTR [rsp+0x8],rbx
   140005031:	push   rdi
   140005032:	sub    rsp,0x20
   140005036:	mov    ebx,edx
   140005038:	mov    rdi,rcx
   14000503b:	call   0x140007980
   140005040:	test   bl,0x1
   140005043:	je     0x14000504d
   140005045:	mov    rcx,rdi
   140005048:	call   0x140005454
   14000504d:	mov    rax,rdi
   140005050:	mov    rbx,QWORD PTR [rsp+0x30]
   140005055:	add    rsp,0x20
   140005059:	pop    rdi
   14000505a:	ret    
   14000505b:	int3   
   14000505c:	mov    QWORD PTR [rsp+0x8],rbx
   140005061:	push   rdi
   140005062:	sub    rsp,0x20
   140005066:	mov    ebx,edx
   140005068:	mov    rdi,rcx
   14000506b:	call   0x140007980
   140005070:	test   bl,0x1
   140005073:	je     0x14000507d
   140005075:	mov    rcx,rdi
   140005078:	call   0x140005454
   14000507d:	mov    rax,rdi
   140005080:	mov    rbx,QWORD PTR [rsp+0x30]
   140005085:	add    rsp,0x20
   140005089:	pop    rdi
   14000508a:	ret    
   14000508b:	int3   
   14000508c:	cmp    ecx,0x7
   14000508f:	jg     0x1400050ef
   140005091:	je     0x1400050e7
   140005093:	test   ecx,ecx
   140005095:	je     0x1400050df
   140005097:	dec    ecx
   140005099:	je     0x1400050d7
   14000509b:	dec    ecx
   14000509d:	je     0x1400050cf
   14000509f:	dec    ecx
   1400050a1:	je     0x1400050c7
   1400050a3:	dec    ecx
   1400050a5:	je     0x1400050bf
   1400050a7:	dec    ecx
   1400050a9:	je     0x1400050b7
   1400050ab:	dec    ecx
   1400050ad:	jne    0x14000510c
   1400050af:	lea    rax,[rip+0x2313a]        # 0x1400281f0
   1400050b6:	ret    
   1400050b7:	lea    rax,[rip+0x230e2]        # 0x1400281a0
   1400050be:	ret    
   1400050bf:	lea    rax,[rip+0x2308a]        # 0x140028150
   1400050c6:	ret    
   1400050c7:	lea    rax,[rip+0x23032]        # 0x140028100
   1400050ce:	ret    
   1400050cf:	lea    rax,[rip+0x22fba]        # 0x140028090
   1400050d6:	ret    
   1400050d7:	lea    rax,[rip+0x22f52]        # 0x140028030
   1400050de:	ret    
   1400050df:	lea    rax,[rip+0x22eea]        # 0x140027fd0
   1400050e6:	ret    
   1400050e7:	lea    rax,[rip+0x23152]        # 0x140028240
   1400050ee:	ret    
   1400050ef:	sub    ecx,0x8
   1400050f2:	je     0x140005144
   1400050f4:	dec    ecx
   1400050f6:	je     0x14000513c
   1400050f8:	dec    ecx
   1400050fa:	je     0x140005134
   1400050fc:	dec    ecx
   1400050fe:	je     0x14000512c
   140005100:	dec    ecx
   140005102:	je     0x140005124
   140005104:	dec    ecx
   140005106:	je     0x14000511c
   140005108:	dec    ecx
   14000510a:	je     0x140005114
   14000510c:	lea    rax,[rip+0x23425]        # 0x140028538
   140005113:	ret    
   140005114:	lea    rax,[rip+0x233fd]        # 0x140028518
   14000511b:	ret    
   14000511c:	lea    rax,[rip+0x233d5]        # 0x1400284f8
   140005123:	ret    
   140005124:	lea    rax,[rip+0x23335]        # 0x140028460
   14000512b:	ret    
   14000512c:	lea    rax,[rip+0x232ad]        # 0x1400283e0
   140005133:	ret    
   140005134:	lea    rax,[rip+0x23245]        # 0x140028380
   14000513b:	ret    
   14000513c:	lea    rax,[rip+0x231cd]        # 0x140028310
   140005143:	ret    
   140005144:	lea    rax,[rip+0x23155]        # 0x1400282a0
   14000514b:	ret    
   14000514c:	sub    rsp,0x48
   140005150:	lea    rax,[rip+0x22d91]        # 0x140027ee8
   140005157:	lea    rdx,[rsp+0x50]
   14000515c:	lea    rcx,[rsp+0x20]
   140005161:	mov    r8d,0x1
   140005167:	mov    QWORD PTR [rsp+0x50],rax
   14000516c:	call   0x1400078f0
   140005171:	lea    rax,[rip+0x22d60]        # 0x140027ed8
   140005178:	lea    rdx,[rip+0x2f8a9]        # 0x140034a28
   14000517f:	lea    rcx,[rsp+0x20]
   140005184:	mov    QWORD PTR [rsp+0x20],rax
   140005189:	call   0x140006894
   14000518e:	int3   
   14000518f:	int3   
   140005190:	sub    rsp,0x48
   140005194:	lea    rcx,[rsp+0x20]
   140005199:	call   0x140007938
   14000519e:	lea    rax,[rip+0x22deb]        # 0x140027f90
   1400051a5:	lea    rdx,[rip+0x2fb2c]        # 0x140034cd8
   1400051ac:	lea    rcx,[rsp+0x20]
   1400051b1:	mov    QWORD PTR [rsp+0x20],rax
   1400051b6:	call   0x140006894
   1400051bb:	int3   
   1400051bc:	sub    rsp,0x48
   1400051c0:	mov    QWORD PTR [rsp+0x50],rcx
   1400051c5:	lea    rdx,[rsp+0x50]
   1400051ca:	lea    rcx,[rsp+0x20]
   1400051cf:	call   0x1400078c0
   1400051d4:	lea    rax,[rip+0x22d3d]        # 0x140027f18
   1400051db:	lea    rdx,[rip+0x2f8ce]        # 0x140034ab0
   1400051e2:	lea    rcx,[rsp+0x20]
   1400051e7:	mov    QWORD PTR [rsp+0x20],rax
   1400051ec:	call   0x140006894
   1400051f1:	int3   
   1400051f2:	int3   
   1400051f3:	int3   
   1400051f4:	sub    rsp,0x48
   1400051f8:	mov    QWORD PTR [rsp+0x50],rcx
   1400051fd:	lea    rdx,[rsp+0x50]
   140005202:	lea    rcx,[rsp+0x20]
   140005207:	call   0x1400078c0
   14000520c:	lea    rax,[rip+0x22d1d]        # 0x140027f30
   140005213:	lea    rdx,[rip+0x2f926]        # 0x140034b40
   14000521a:	lea    rcx,[rsp+0x20]
   14000521f:	mov    QWORD PTR [rsp+0x20],rax
   140005224:	call   0x140006894
   140005229:	int3   
   14000522a:	int3   
   14000522b:	int3   
   14000522c:	sub    rsp,0x48
   140005230:	mov    QWORD PTR [rsp+0x50],rcx
   140005235:	lea    rdx,[rsp+0x50]
   14000523a:	lea    rcx,[rsp+0x20]
   14000523f:	call   0x1400078c0
   140005244:	lea    rax,[rip+0x22cfd]        # 0x140027f48
   14000524b:	lea    rdx,[rip+0x2f956]        # 0x140034ba8
   140005252:	lea    rcx,[rsp+0x20]
   140005257:	mov    QWORD PTR [rsp+0x20],rax
   14000525c:	call   0x140006894
   140005261:	int3   
   140005262:	int3   
   140005263:	int3   
   140005264:	sub    rsp,0x48
   140005268:	mov    QWORD PTR [rsp+0x50],rcx
   14000526d:	lea    rdx,[rsp+0x50]
   140005272:	lea    rcx,[rsp+0x20]
   140005277:	call   0x1400078c0
   14000527c:	lea    rax,[rip+0x22cf5]        # 0x140027f78
   140005283:	lea    rdx,[rip+0x2f986]        # 0x140034c10
   14000528a:	lea    rcx,[rsp+0x20]
   14000528f:	mov    QWORD PTR [rsp+0x20],rax
   140005294:	call   0x140006894
   140005299:	int3   
   14000529a:	int3   
   14000529b:	int3   
   14000529c:	rex push rbx
   14000529e:	sub    rsp,0x40
   1400052a2:	mov    ebx,ecx
   1400052a4:	call   0x14000508c
   1400052a9:	lea    rdx,[rsp+0x58]
   1400052ae:	lea    rcx,[rsp+0x20]
   1400052b3:	mov    QWORD PTR [rsp+0x58],rax
   1400052b8:	call   0x1400078c0
   1400052bd:	lea    rax,[rip+0x22cfc]        # 0x140027fc0
   1400052c4:	lea    rdx,[rip+0x2fa6d]        # 0x140034d38
   1400052cb:	lea    rcx,[rsp+0x20]
   1400052d0:	mov    QWORD PTR [rsp+0x20],rax
   1400052d5:	mov    DWORD PTR [rsp+0x38],ebx
   1400052d9:	call   0x140006894
   1400052de:	int3   
   1400052df:	int3   
   1400052e0:	sub    rsp,0x48
   1400052e4:	mov    QWORD PTR [rsp+0x50],rcx
   1400052e9:	lea    rdx,[rsp+0x50]
   1400052ee:	lea    rcx,[rsp+0x20]
   1400052f3:	call   0x1400078c0
   1400052f8:	lea    rax,[rip+0x22c61]        # 0x140027f60
   1400052ff:	lea    rdx,[rip+0x2f99a]        # 0x140034ca0
   140005306:	lea    rcx,[rsp+0x20]
   14000530b:	mov    QWORD PTR [rsp+0x20],rax
   140005310:	call   0x140006894
   140005315:	int3   
   140005316:	int3   
   140005317:	int3   
   140005318:	lea    rax,[rip+0x22c81]        # 0x140027fa0
   14000531f:	ret    
   140005320:	cmp    QWORD PTR [rip+0x236e0],0x0        # 0x140028a08
   140005328:	lea    rax,[rip+0x236d1]        # 0x140028a00
   14000532f:	je     0x140005340
   140005331:	cmp    DWORD PTR [rax],ecx
   140005333:	je     0x140005343
   140005335:	add    rax,0x10
   140005339:	cmp    QWORD PTR [rax+0x8],0x0
   14000533e:	jne    0x140005331
   140005340:	xor    eax,eax
   140005342:	ret    
   140005343:	mov    rax,QWORD PTR [rax+0x8]
   140005347:	ret    
   140005348:	cmp    QWORD PTR [rip+0x23208],0x0        # 0x140028558
   140005350:	lea    rax,[rip+0x231f9]        # 0x140028550
   140005357:	je     0x140005368
   140005359:	cmp    DWORD PTR [rax],ecx
   14000535b:	je     0x14000536b
   14000535d:	add    rax,0x10
   140005361:	cmp    QWORD PTR [rax+0x8],0x0
   140005366:	jne    0x140005359
   140005368:	xor    eax,eax
   14000536a:	ret    
   14000536b:	mov    rax,QWORD PTR [rax+0x8]
   14000536f:	ret    
   140005370:	mov    rcx,QWORD PTR [rip+0x329f1]        # 0x140037d68
   140005377:	rex.W jmp QWORD PTR [rip+0x21cfa]        # 0x140027078
   14000537e:	int3   
   14000537f:	int3   
   140005380:	sub    rsp,0x28
   140005384:	mov    rcx,QWORD PTR [rip+0x329dd]        # 0x140037d68
   14000538b:	call   QWORD PTR [rip+0x21ce7]        # 0x140027078
   140005391:	test   rax,rax
   140005394:	je     0x140005398
   140005396:	call   rax
   140005398:	mov    edx,0x1
   14000539d:	xor    ecx,ecx
   14000539f:	call   0x140007b5c
   1400053a4:	call   0x140007b78
   1400053a9:	int3   
   1400053aa:	int3   
   1400053ab:	int3   
   1400053ac:	mov    QWORD PTR [rsp+0x8],rbx
   1400053b1:	push   rdi
   1400053b2:	sub    rsp,0x20
   1400053b6:	mov    rdi,rcx
   1400053b9:	mov    rcx,QWORD PTR [rip+0x329a8]        # 0x140037d68
   1400053c0:	call   QWORD PTR [rip+0x21cb2]        # 0x140027078
   1400053c6:	mov    rcx,rdi
   1400053c9:	mov    rbx,rax
   1400053cc:	call   QWORD PTR [rip+0x21c9e]        # 0x140027070
   1400053d2:	mov    QWORD PTR [rip+0x3298f],rax        # 0x140037d68
   1400053d9:	mov    rax,rbx
   1400053dc:	mov    rbx,QWORD PTR [rsp+0x30]
   1400053e1:	add    rsp,0x20
   1400053e5:	pop    rdi
   1400053e6:	ret    
   1400053e7:	int3   
   1400053e8:	rex push rbx
   1400053ea:	sub    rsp,0x40
   1400053ee:	mov    rbx,rcx
   1400053f1:	jmp    0x140005402
   1400053f3:	mov    rcx,rbx
   1400053f6:	call   0x140007e5c
   1400053fb:	test   eax,eax
   1400053fd:	je     0x140005412
   1400053ff:	mov    rcx,rbx
   140005402:	call   0x1400064d4
   140005407:	test   rax,rax
   14000540a:	je     0x1400053f3
   14000540c:	add    rsp,0x40
   140005410:	pop    rbx
   140005411:	ret    
   140005412:	lea    rax,[rip+0x22acf]        # 0x140027ee8
   140005419:	lea    rdx,[rsp+0x58]
   14000541e:	lea    rcx,[rsp+0x20]
   140005423:	mov    r8d,0x1
   140005429:	mov    QWORD PTR [rsp+0x58],rax
   14000542e:	call   0x1400078f0
   140005433:	lea    rax,[rip+0x22a9e]        # 0x140027ed8
   14000543a:	lea    rdx,[rip+0x2f5e7]        # 0x140034a28
   140005441:	lea    rcx,[rsp+0x20]
   140005446:	mov    QWORD PTR [rsp+0x20],rax
   14000544b:	call   0x140006894
   140005450:	int3   
   140005451:	int3   
   140005452:	int3   
   140005453:	int3   
   140005454:	jmp    0x140006444
   140005459:	int3   
   14000545a:	int3   
   14000545b:	int3   
   14000545c:	rex push rbx
   14000545e:	sub    rsp,0x20
   140005462:	mov    edx,0x8
   140005467:	lea    ecx,[rdx+0x18]
   14000546a:	call   0x140007ed4
   14000546f:	mov    rcx,rax
   140005472:	mov    rbx,rax
   140005475:	call   QWORD PTR [rip+0x21bf5]        # 0x140027070
   14000547b:	mov    QWORD PTR [rip+0x34cfe],rax        # 0x14003a180
   140005482:	mov    QWORD PTR [rip+0x34cef],rax        # 0x14003a178
   140005489:	test   rbx,rbx
   14000548c:	jne    0x140005493
   14000548e:	lea    eax,[rbx+0x18]
   140005491:	jmp    0x140005499
   140005493:	and    QWORD PTR [rbx],0x0
   140005497:	xor    eax,eax
   140005499:	add    rsp,0x20
   14000549d:	pop    rbx
   14000549e:	ret    
   14000549f:	int3   
   1400054a0:	mov    QWORD PTR [rsp+0x8],rbx
   1400054a5:	mov    QWORD PTR [rsp+0x10],rsi
   1400054aa:	mov    QWORD PTR [rsp+0x18],rdi
   1400054af:	push   r12
   1400054b1:	push   r14
   1400054b3:	push   r15
   1400054b5:	sub    rsp,0x20
   1400054b9:	mov    r12,rcx
   1400054bc:	call   0x140006244
   1400054c1:	nop
   1400054c2:	mov    rcx,QWORD PTR [rip+0x34cb7]        # 0x14003a180
   1400054c9:	call   QWORD PTR [rip+0x21ba9]        # 0x140027078
   1400054cf:	mov    r14,rax
   1400054d2:	mov    rcx,QWORD PTR [rip+0x34c9f]        # 0x14003a178
   1400054d9:	call   QWORD PTR [rip+0x21b99]        # 0x140027078
   1400054df:	mov    rbx,rax
   1400054e2:	cmp    rax,r14
   1400054e5:	jb     0x140005586
   1400054eb:	mov    rdi,rax
   1400054ee:	sub    rdi,r14
   1400054f1:	lea    r15,[rdi+0x8]
   1400054f5:	cmp    r15,0x8
   1400054f9:	jb     0x140005586
   1400054ff:	mov    rcx,r14
   140005502:	call   0x140007e98
   140005507:	mov    rsi,rax
   14000550a:	cmp    rax,r15
   14000550d:	jae    0x140005564
   14000550f:	mov    edx,0x1000
   140005514:	cmp    rax,rdx
   140005517:	cmovb  rdx,rax
   14000551b:	add    rdx,rax
   14000551e:	cmp    rdx,rax
   140005521:	jb     0x140005534
   140005523:	mov    rcx,r14
   140005526:	call   0x140007fd0
   14000552b:	xor    ebx,ebx
   14000552d:	test   rax,rax
   140005530:	jne    0x14000554c
   140005532:	jmp    0x140005536
   140005534:	xor    ebx,ebx
   140005536:	lea    rdx,[rsi+0x20]
   14000553a:	cmp    rdx,rsi
   14000553d:	jb     0x140005588
   14000553f:	mov    rcx,r14
   140005542:	call   0x140007fd0
   140005547:	test   rax,rax
   14000554a:	je     0x140005588
   14000554c:	sar    rdi,0x3
   140005550:	lea    rbx,[rax+rdi*8]
   140005554:	mov    rcx,rax
   140005557:	call   QWORD PTR [rip+0x21b13]        # 0x140027070
   14000555d:	mov    QWORD PTR [rip+0x34c1c],rax        # 0x14003a180
   140005564:	mov    rcx,r12
   140005567:	call   QWORD PTR [rip+0x21b03]        # 0x140027070
   14000556d:	mov    QWORD PTR [rbx],rax
   140005570:	lea    rcx,[rbx+0x8]
   140005574:	call   QWORD PTR [rip+0x21af6]        # 0x140027070
   14000557a:	mov    QWORD PTR [rip+0x34bf7],rax        # 0x14003a178
   140005581:	mov    rbx,r12
   140005584:	jmp    0x140005588
   140005586:	xor    ebx,ebx
   140005588:	call   0x140006250
   14000558d:	mov    rax,rbx
   140005590:	mov    rbx,QWORD PTR [rsp+0x40]
   140005595:	mov    rsi,QWORD PTR [rsp+0x48]
   14000559a:	mov    rdi,QWORD PTR [rsp+0x50]
   14000559f:	add    rsp,0x20
   1400055a3:	pop    r15
   1400055a5:	pop    r14
   1400055a7:	pop    r12
   1400055a9:	ret    
   1400055aa:	int3   
   1400055ab:	int3   
   1400055ac:	mov    QWORD PTR [rsp+0x8],rbx
   1400055b1:	mov    QWORD PTR [rsp+0x10],rbp
   1400055b6:	mov    QWORD PTR [rsp+0x18],rsi
   1400055bb:	push   rdi
   1400055bc:	push   r14
   1400055be:	push   r15
   1400055c0:	sub    rsp,0x20
   1400055c4:	mov    r15,rcx
   1400055c7:	mov    rcx,QWORD PTR [rip+0x34bb2]        # 0x14003a180
   1400055ce:	call   QWORD PTR [rip+0x21aa4]        # 0x140027078
   1400055d4:	mov    rcx,QWORD PTR [rip+0x34b9d]        # 0x14003a178
   1400055db:	mov    rbp,rax
   1400055de:	call   QWORD PTR [rip+0x21a94]        # 0x140027078
   1400055e4:	mov    rsi,rax
   1400055e7:	cmp    rax,rbp
   1400055ea:	jb     0x140005685
   1400055f0:	mov    rbx,rax
   1400055f3:	sub    rbx,rbp
   1400055f6:	lea    r14,[rbx+0x8]
   1400055fa:	cmp    r14,0x8
   1400055fe:	jb     0x140005685
   140005604:	mov    rcx,rbp
   140005607:	call   0x140007e98
   14000560c:	mov    rdi,rax
   14000560f:	cmp    rax,r14
   140005612:	jae    0x140005663
   140005614:	mov    edx,0x1000
   140005619:	cmp    rax,rdx
   14000561c:	cmovb  rdx,rax
   140005620:	add    rdx,rax
   140005623:	cmp    rdx,rax
   140005626:	jb     0x140005635
   140005628:	mov    rcx,rbp
   14000562b:	call   0x140007fd0
   140005630:	test   rax,rax
   140005633:	jne    0x14000564b
   140005635:	lea    rdx,[rdi+0x20]
   140005639:	cmp    rdx,rdi
   14000563c:	jb     0x140005685
   14000563e:	mov    rcx,rbp
   140005641:	call   0x140007fd0
   140005646:	test   rax,rax
   140005649:	je     0x140005685
   14000564b:	sar    rbx,0x3
   14000564f:	mov    rcx,rax
   140005652:	lea    rsi,[rax+rbx*8]
   140005656:	call   QWORD PTR [rip+0x21a14]        # 0x140027070
   14000565c:	mov    QWORD PTR [rip+0x34b1d],rax        # 0x14003a180
   140005663:	mov    rcx,r15
   140005666:	call   QWORD PTR [rip+0x21a04]        # 0x140027070
   14000566c:	lea    rcx,[rsi+0x8]
   140005670:	mov    QWORD PTR [rsi],rax
   140005673:	call   QWORD PTR [rip+0x219f7]        # 0x140027070
   140005679:	mov    QWORD PTR [rip+0x34af8],rax        # 0x14003a178
   140005680:	mov    rax,r15
   140005683:	jmp    0x140005687
   140005685:	xor    eax,eax
   140005687:	mov    rbx,QWORD PTR [rsp+0x40]
   14000568c:	mov    rbp,QWORD PTR [rsp+0x48]
   140005691:	mov    rsi,QWORD PTR [rsp+0x50]
   140005696:	add    rsp,0x20
   14000569a:	pop    r15
   14000569c:	pop    r14
   14000569e:	pop    rdi
   14000569f:	ret    
   1400056a0:	sub    rsp,0x28
   1400056a4:	call   0x1400054a0
   1400056a9:	neg    rax
   1400056ac:	sbb    eax,eax
   1400056ae:	neg    eax
   1400056b0:	dec    eax
   1400056b2:	add    rsp,0x28
   1400056b6:	ret    
   1400056b7:	int3   
   1400056b8:	int3   
   1400056b9:	int3   
   1400056ba:	int3   
   1400056bb:	int3   
   1400056bc:	int3   
   1400056bd:	int3   
   1400056be:	int3   
   1400056bf:	int3   
   1400056c0:	int3   
   1400056c1:	int3   
   1400056c2:	int3   
   1400056c3:	int3   
   1400056c4:	int3   
   1400056c5:	int3   
   1400056c6:	data16 nop WORD PTR [rax+rax*1+0x0]
   1400056d0:	mov    r11,rcx
   1400056d3:	mov    r10,rdx
   1400056d6:	cmp    r8,0x10
   1400056da:	jbe    0x140005799
   1400056e0:	sub    rdx,rcx
   1400056e3:	jae    0x1400056f4
   1400056e5:	mov    rax,r10
   1400056e8:	add    rax,r8
   1400056eb:	cmp    rcx,rax
   1400056ee:	jl     0x140005a8a
   1400056f4:	bt     DWORD PTR [rip+0x32680],0x1        # 0x140037d7c
   1400056fc:	jae    0x140005711
   1400056fe:	push   rdi
   1400056ff:	push   rsi
   140005700:	mov    rdi,rcx
   140005703:	mov    rsi,r10
   140005706:	mov    rcx,r8
   140005709:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000570b:	pop    rsi
   14000570c:	pop    rdi
   14000570d:	mov    rax,r11
   140005710:	ret    
   140005711:	bt     DWORD PTR [rip+0x32663],0x2        # 0x140037d7c
   140005719:	jb     0x140005975
   14000571f:	test   cl,0x7
   140005722:	je     0x14000575a
   140005724:	test   cl,0x1
   140005727:	je     0x140005734
   140005729:	mov    al,BYTE PTR [rdx+rcx*1]
   14000572c:	dec    r8
   14000572f:	mov    BYTE PTR [rcx],al
   140005731:	inc    rcx
   140005734:	test   cl,0x2
   140005737:	je     0x140005748
   140005739:	mov    ax,WORD PTR [rdx+rcx*1]
   14000573d:	sub    r8,0x2
   140005741:	mov    WORD PTR [rcx],ax
   140005744:	add    rcx,0x2
   140005748:	test   cl,0x4
   14000574b:	je     0x14000575a
   14000574d:	mov    eax,DWORD PTR [rdx+rcx*1]
   140005750:	sub    r8,0x4
   140005754:	mov    DWORD PTR [rcx],eax
   140005756:	add    rcx,0x4
   14000575a:	mov    r9,r8
   14000575d:	shr    r9,0x5
   140005761:	jne    0x140005940
   140005767:	mov    r9,r8
   14000576a:	shr    r9,0x3
   14000576e:	je     0x140005784
   140005770:	mov    rax,QWORD PTR [rdx+rcx*1]
   140005774:	mov    QWORD PTR [rcx],rax
   140005777:	add    rcx,0x8
   14000577b:	dec    r9
   14000577e:	jne    0x140005770
   140005780:	and    r8,0x7
   140005784:	test   r8,r8
   140005787:	jne    0x140005790
   140005789:	mov    rax,r11
   14000578c:	ret    
   14000578d:	nop    DWORD PTR [rax]
   140005790:	lea    rdx,[rdx+rcx*1]
   140005794:	mov    r10,rcx
   140005797:	jmp    0x14000579c
   140005799:	mov    r10,r11
   14000579c:	lea    r9,[rip+0xffffffffffffa85d]        # 0x140000000
   1400057a3:	mov    eax,DWORD PTR [r9+r8*4+0x57b0]
   1400057ab:	add    rax,r9
   1400057ae:	jmp    rax
   1400057b0:	hlt    
   1400057b1:	push   rdi
   1400057b2:	add    BYTE PTR [rax],al
   1400057b4:	clc    
   1400057b5:	push   rdi
   1400057b6:	add    BYTE PTR [rax],al
   1400057b8:	add    ebx,DWORD PTR [rax+0x0]
   1400057bb:	add    BYTE PTR [rdi],cl
   1400057bd:	pop    rax
   1400057be:	add    BYTE PTR [rax],al
   1400057c0:	and    al,0x58
   1400057c2:	add    BYTE PTR [rax],al
   1400057c4:	sub    eax,0x3f000058
   1400057c9:	pop    rax
   1400057ca:	add    BYTE PTR [rax],al
   1400057cc:	push   rdx
   1400057cd:	pop    rax
   1400057ce:	add    BYTE PTR [rax],al
   1400057d0:	outs   dx,BYTE PTR ds:[rsi]
   1400057d1:	pop    rax
   1400057d2:	add    BYTE PTR [rax],al
   1400057d4:	js     0x14000582e
   1400057d6:	add    BYTE PTR [rax],al
   1400057d8:	mov    ebx,DWORD PTR [rax+0x0]
   1400057db:	add    BYTE PTR [rdi-0x43ffffa8],bl
   1400057e1:	pop    rax
   1400057e2:	add    BYTE PTR [rax],al
   1400057e4:	int    0x58
   1400057e6:	add    BYTE PTR [rax],al
   1400057e8:	out    0x58,eax
   1400057ea:	add    BYTE PTR [rax],al
   1400057ec:	add    bl,BYTE PTR [rcx+0x0]
   1400057ef:	add    BYTE PTR [rsi],ah
   1400057f1:	pop    rcx
   1400057f2:	add    BYTE PTR [rax],al
   1400057f4:	mov    rax,r11
   1400057f7:	ret    
   1400057f8:	movzx  rax,BYTE PTR [rdx]
   1400057fc:	mov    BYTE PTR [r10],al
   1400057ff:	mov    rax,r11
   140005802:	ret    
   140005803:	movzx  rax,WORD PTR [rdx]
   140005807:	mov    WORD PTR [r10],ax
   14000580b:	mov    rax,r11
   14000580e:	ret    
   14000580f:	movzx  rax,BYTE PTR [rdx]
   140005813:	movzx  rcx,WORD PTR [rdx+0x1]
   140005818:	mov    BYTE PTR [r10],al
   14000581b:	mov    WORD PTR [r10+0x1],cx
   140005820:	mov    rax,r11
   140005823:	ret    
   140005824:	mov    eax,DWORD PTR [rdx]
   140005826:	mov    DWORD PTR [r10],eax
   140005829:	mov    rax,r11
   14000582c:	ret    
   14000582d:	movzx  rax,BYTE PTR [rdx]
   140005831:	mov    ecx,DWORD PTR [rdx+0x1]
   140005834:	mov    BYTE PTR [r10],al
   140005837:	mov    DWORD PTR [r10+0x1],ecx
   14000583b:	mov    rax,r11
   14000583e:	ret    
   14000583f:	movzx  rax,WORD PTR [rdx]
   140005843:	mov    ecx,DWORD PTR [rdx+0x2]
   140005846:	mov    WORD PTR [r10],ax
   14000584a:	mov    DWORD PTR [r10+0x2],ecx
   14000584e:	mov    rax,r11
   140005851:	ret    
   140005852:	movzx  rax,BYTE PTR [rdx]
   140005856:	movzx  rcx,WORD PTR [rdx+0x1]
   14000585b:	mov    edx,DWORD PTR [rdx+0x3]
   14000585e:	mov    BYTE PTR [r10],al
   140005861:	mov    WORD PTR [r10+0x1],cx
   140005866:	mov    DWORD PTR [r10+0x3],edx
   14000586a:	mov    rax,r11
   14000586d:	ret    
   14000586e:	mov    rax,QWORD PTR [rdx]
   140005871:	mov    QWORD PTR [r10],rax
   140005874:	mov    rax,r11
   140005877:	ret    
   140005878:	movzx  rax,BYTE PTR [rdx]
   14000587c:	mov    rcx,QWORD PTR [rdx+0x1]
   140005880:	mov    BYTE PTR [r10],al
   140005883:	mov    QWORD PTR [r10+0x1],rcx
   140005887:	mov    rax,r11
   14000588a:	ret    
   14000588b:	movzx  rax,WORD PTR [rdx]
   14000588f:	mov    rcx,QWORD PTR [rdx+0x2]
   140005893:	mov    WORD PTR [r10],ax
   140005897:	mov    QWORD PTR [r10+0x2],rcx
   14000589b:	mov    rax,r11
   14000589e:	ret    
   14000589f:	movzx  rax,BYTE PTR [rdx]
   1400058a3:	movzx  rcx,WORD PTR [rdx+0x1]
   1400058a8:	mov    rdx,QWORD PTR [rdx+0x3]
   1400058ac:	mov    BYTE PTR [r10],al
   1400058af:	mov    WORD PTR [r10+0x1],cx
   1400058b4:	mov    QWORD PTR [r10+0x3],rdx
   1400058b8:	mov    rax,r11
   1400058bb:	ret    
   1400058bc:	mov    eax,DWORD PTR [rdx]
   1400058be:	mov    rcx,QWORD PTR [rdx+0x4]
   1400058c2:	mov    DWORD PTR [r10],eax
   1400058c5:	mov    QWORD PTR [r10+0x4],rcx
   1400058c9:	mov    rax,r11
   1400058cc:	ret    
   1400058cd:	movzx  rax,BYTE PTR [rdx]
   1400058d1:	mov    ecx,DWORD PTR [rdx+0x1]
   1400058d4:	mov    rdx,QWORD PTR [rdx+0x5]
   1400058d8:	mov    BYTE PTR [r10],al
   1400058db:	mov    DWORD PTR [r10+0x1],ecx
   1400058df:	mov    QWORD PTR [r10+0x5],rdx
   1400058e3:	mov    rax,r11
   1400058e6:	ret    
   1400058e7:	movzx  rax,WORD PTR [rdx]
   1400058eb:	mov    ecx,DWORD PTR [rdx+0x2]
   1400058ee:	mov    rdx,QWORD PTR [rdx+0x6]
   1400058f2:	mov    WORD PTR [r10],ax
   1400058f6:	mov    DWORD PTR [r10+0x2],ecx
   1400058fa:	mov    QWORD PTR [r10+0x6],rdx
   1400058fe:	mov    rax,r11
   140005901:	ret    
   140005902:	movzx  r8,BYTE PTR [rdx]
   140005906:	movzx  rax,WORD PTR [rdx+0x1]
   14000590b:	mov    ecx,DWORD PTR [rdx+0x3]
   14000590e:	mov    rdx,QWORD PTR [rdx+0x7]
   140005912:	mov    BYTE PTR [r10],r8b
   140005915:	mov    WORD PTR [r10+0x1],ax
   14000591a:	mov    DWORD PTR [r10+0x3],ecx
   14000591e:	mov    QWORD PTR [r10+0x7],rdx
   140005922:	mov    rax,r11
   140005925:	ret    
   140005926:	movdqu xmm0,XMMWORD PTR [rdx]
   14000592a:	movdqu XMMWORD PTR [r10],xmm0
   14000592f:	mov    rax,r11
   140005932:	ret    
   140005933:	data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140005940:	mov    rax,QWORD PTR [rdx+rcx*1]
   140005944:	mov    r10,QWORD PTR [rdx+rcx*1+0x8]
   140005949:	add    rcx,0x20
   14000594d:	mov    QWORD PTR [rcx-0x20],rax
   140005951:	mov    QWORD PTR [rcx-0x18],r10
   140005955:	mov    rax,QWORD PTR [rdx+rcx*1-0x10]
   14000595a:	mov    r10,QWORD PTR [rdx+rcx*1-0x8]
   14000595f:	dec    r9
   140005962:	mov    QWORD PTR [rcx-0x10],rax
   140005966:	mov    QWORD PTR [rcx-0x8],r10
   14000596a:	jne    0x140005940
   14000596c:	and    r8,0x1f
   140005970:	jmp    0x140005767
   140005975:	cmp    r8,0x20
   140005979:	jbe    0x140005a60
   14000597f:	test   cl,0xf
   140005982:	jne    0x140005992
   140005984:	movups xmm0,XMMWORD PTR [rdx+rcx*1]
   140005988:	add    rcx,0x10
   14000598c:	sub    r8,0x10
   140005990:	jmp    0x1400059af
   140005992:	movups xmm1,XMMWORD PTR [rdx+rcx*1]
   140005996:	add    rcx,0x20
   14000599a:	and    cl,0xf0
   14000599d:	movups xmm0,XMMWORD PTR [rdx+rcx*1-0x10]
   1400059a2:	movups XMMWORD PTR [r11],xmm1
   1400059a6:	mov    rax,rcx
   1400059a9:	sub    rax,r11
   1400059ac:	sub    r8,rax
   1400059af:	mov    r9,r8
   1400059b2:	shr    r9,0x7
   1400059b6:	je     0x140005a1e
   1400059b8:	movaps XMMWORD PTR [rcx-0x10],xmm0
   1400059bc:	jmp    0x1400059c8
   1400059be:	xchg   ax,ax
   1400059c0:	movaps XMMWORD PTR [rcx-0x20],xmm0
   1400059c4:	movaps XMMWORD PTR [rcx-0x10],xmm1
   1400059c8:	movups xmm0,XMMWORD PTR [rdx+rcx*1]
   1400059cc:	movups xmm1,XMMWORD PTR [rdx+rcx*1+0x10]
   1400059d1:	add    rcx,0x80
   1400059d8:	movaps XMMWORD PTR [rcx-0x80],xmm0
   1400059dc:	movaps XMMWORD PTR [rcx-0x70],xmm1
   1400059e0:	movups xmm0,XMMWORD PTR [rdx+rcx*1-0x60]
   1400059e5:	movups xmm1,XMMWORD PTR [rdx+rcx*1-0x50]
   1400059ea:	dec    r9
   1400059ed:	movaps XMMWORD PTR [rcx-0x60],xmm0
   1400059f1:	movaps XMMWORD PTR [rcx-0x50],xmm1
   1400059f5:	movups xmm0,XMMWORD PTR [rdx+rcx*1-0x40]
   1400059fa:	movups xmm1,XMMWORD PTR [rdx+rcx*1-0x30]
   1400059ff:	movaps XMMWORD PTR [rcx-0x40],xmm0
   140005a03:	movaps XMMWORD PTR [rcx-0x30],xmm1
   140005a07:	movups xmm0,XMMWORD PTR [rdx+rcx*1-0x20]
   140005a0c:	movups xmm1,XMMWORD PTR [rdx+rcx*1-0x10]
   140005a11:	jne    0x1400059c0
   140005a13:	movaps XMMWORD PTR [rcx-0x20],xmm0
   140005a17:	and    r8,0x7f
   140005a1b:	movaps xmm0,xmm1
   140005a1e:	mov    r9,r8
   140005a21:	shr    r9,0x4
   140005a25:	je     0x140005a41
   140005a27:	nop    WORD PTR [rax+rax*1+0x0]
   140005a30:	movaps XMMWORD PTR [rcx-0x10],xmm0
   140005a34:	movups xmm0,XMMWORD PTR [rdx+rcx*1]
   140005a38:	add    rcx,0x10
   140005a3c:	dec    r9
   140005a3f:	jne    0x140005a30
   140005a41:	and    r8,0xf
   140005a45:	je     0x140005a54
   140005a47:	lea    rax,[r8+rcx*1]
   140005a4b:	movups xmm1,XMMWORD PTR [rdx+rax*1-0x10]
   140005a50:	movups XMMWORD PTR [rax-0x10],xmm1
   140005a54:	movaps XMMWORD PTR [rcx-0x10],xmm0
   140005a58:	mov    rax,r11
   140005a5b:	ret    
   140005a5c:	nop    DWORD PTR [rax+0x0]
   140005a60:	movups xmm0,XMMWORD PTR [r10]
   140005a64:	lea    rcx,[r8+rcx*1-0x10]
   140005a69:	movups xmm1,XMMWORD PTR [rdx+rcx*1]
   140005a6d:	movups XMMWORD PTR [r11],xmm0
   140005a71:	movups XMMWORD PTR [rcx],xmm1
   140005a74:	mov    rax,r11
   140005a77:	ret    
   140005a78:	nop    DWORD PTR [rax+rax*1+0x0]
   140005a80:	data16 data16 xchg ax,ax
   140005a84:	data16 data16 xchg ax,ax
   140005a88:	xchg   ax,ax
   140005a8a:	bt     DWORD PTR [rip+0x322ea],0x2        # 0x140037d7c
   140005a92:	jb     0x140005b51
   140005a98:	add    rcx,r8
   140005a9b:	test   cl,0x7
   140005a9e:	je     0x140005ad6
   140005aa0:	test   cl,0x1
   140005aa3:	je     0x140005ab0
   140005aa5:	dec    rcx
   140005aa8:	mov    al,BYTE PTR [rdx+rcx*1]
   140005aab:	dec    r8
   140005aae:	mov    BYTE PTR [rcx],al
   140005ab0:	test   cl,0x2
   140005ab3:	je     0x140005ac4
   140005ab5:	sub    rcx,0x2
   140005ab9:	mov    ax,WORD PTR [rdx+rcx*1]
   140005abd:	sub    r8,0x2
   140005ac1:	mov    WORD PTR [rcx],ax
   140005ac4:	test   cl,0x4
   140005ac7:	je     0x140005ad6
   140005ac9:	sub    rcx,0x4
   140005acd:	mov    eax,DWORD PTR [rdx+rcx*1]
   140005ad0:	sub    r8,0x4
   140005ad4:	mov    DWORD PTR [rcx],eax
   140005ad6:	mov    r9,r8
   140005ad9:	shr    r9,0x5
   140005add:	jne    0x140005b20
   140005adf:	mov    r9,r8
   140005ae2:	shr    r9,0x3
   140005ae6:	je     0x140005afc
   140005ae8:	sub    rcx,0x8
   140005aec:	mov    rax,QWORD PTR [rdx+rcx*1]
   140005af0:	dec    r9
   140005af3:	mov    QWORD PTR [rcx],rax
   140005af6:	jne    0x140005ae8
   140005af8:	and    r8,0x7
   140005afc:	test   r8,r8
   140005aff:	jne    0x140005b10
   140005b01:	mov    rax,r11
   140005b04:	ret    
   140005b05:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140005b10:	sub    rcx,r8
   140005b13:	mov    r10,rcx
   140005b16:	lea    rdx,[rdx+rcx*1]
   140005b1a:	jmp    0x14000579c
   140005b1f:	nop
   140005b20:	mov    rax,QWORD PTR [rdx+rcx*1-0x8]
   140005b25:	mov    r10,QWORD PTR [rdx+rcx*1-0x10]
   140005b2a:	sub    rcx,0x20
   140005b2e:	mov    QWORD PTR [rcx+0x18],rax
   140005b32:	mov    QWORD PTR [rcx+0x10],r10
   140005b36:	mov    rax,QWORD PTR [rdx+rcx*1+0x8]
   140005b3b:	mov    r10,QWORD PTR [rdx+rcx*1]
   140005b3f:	dec    r9
   140005b42:	mov    QWORD PTR [rcx+0x8],rax
   140005b46:	mov    QWORD PTR [rcx],r10
   140005b49:	jne    0x140005b20
   140005b4b:	and    r8,0x1f
   140005b4f:	jmp    0x140005adf
   140005b51:	cmp    r8,0x20
   140005b55:	jbe    0x140005a60
   140005b5b:	add    rcx,r8
   140005b5e:	test   cl,0xf
   140005b61:	jne    0x140005b71
   140005b63:	sub    rcx,0x10
   140005b67:	movups xmm0,XMMWORD PTR [rdx+rcx*1]
   140005b6b:	sub    r8,0x10
   140005b6f:	jmp    0x140005b8c
   140005b71:	sub    rcx,0x10
   140005b75:	movups xmm1,XMMWORD PTR [rdx+rcx*1]
   140005b79:	mov    rax,rcx
   140005b7c:	and    cl,0xf0
   140005b7f:	movups xmm0,XMMWORD PTR [rdx+rcx*1]
   140005b83:	movups XMMWORD PTR [rax],xmm1
   140005b86:	mov    r8,rcx
   140005b89:	sub    r8,r11
   140005b8c:	mov    r9,r8
   140005b8f:	shr    r9,0x7
   140005b93:	je     0x140005bfd
   140005b95:	movaps XMMWORD PTR [rcx],xmm0
   140005b98:	jmp    0x140005ba7
   140005b9a:	nop    WORD PTR [rax+rax*1+0x0]
   140005ba0:	movaps XMMWORD PTR [rcx+0x10],xmm0
   140005ba4:	movaps XMMWORD PTR [rcx],xmm1
   140005ba7:	movups xmm0,XMMWORD PTR [rdx+rcx*1-0x10]
   140005bac:	movups xmm1,XMMWORD PTR [rdx+rcx*1-0x20]
   140005bb1:	sub    rcx,0x80
   140005bb8:	movaps XMMWORD PTR [rcx+0x70],xmm0
   140005bbc:	movaps XMMWORD PTR [rcx+0x60],xmm1
   140005bc0:	movups xmm0,XMMWORD PTR [rdx+rcx*1+0x50]
   140005bc5:	movups xmm1,XMMWORD PTR [rdx+rcx*1+0x40]
   140005bca:	dec    r9
   140005bcd:	movaps XMMWORD PTR [rcx+0x50],xmm0
   140005bd1:	movaps XMMWORD PTR [rcx+0x40],xmm1
   140005bd5:	movups xmm0,XMMWORD PTR [rdx+rcx*1+0x30]
   140005bda:	movups xmm1,XMMWORD PTR [rdx+rcx*1+0x20]
   140005bdf:	movaps XMMWORD PTR [rcx+0x30],xmm0
   140005be3:	movaps XMMWORD PTR [rcx+0x20],xmm1
   140005be7:	movups xmm0,XMMWORD PTR [rdx+rcx*1+0x10]
   140005bec:	movups xmm1,XMMWORD PTR [rdx+rcx*1]
   140005bf0:	jne    0x140005ba0
   140005bf2:	movaps XMMWORD PTR [rcx+0x10],xmm0
   140005bf6:	and    r8,0x7f
   140005bfa:	movaps xmm0,xmm1
   140005bfd:	mov    r9,r8
   140005c00:	shr    r9,0x4
   140005c04:	je     0x140005c20
   140005c06:	data16 nop WORD PTR [rax+rax*1+0x0]
   140005c10:	movaps XMMWORD PTR [rcx],xmm0
   140005c13:	sub    rcx,0x10
   140005c17:	movups xmm0,XMMWORD PTR [rdx+rcx*1]
   140005c1b:	dec    r9
   140005c1e:	jne    0x140005c10
   140005c20:	and    r8,0xf
   140005c24:	je     0x140005c2e
   140005c26:	movups xmm1,XMMWORD PTR [r10]
   140005c2a:	movups XMMWORD PTR [r11],xmm1
   140005c2e:	movaps XMMWORD PTR [rcx],xmm0
   140005c31:	mov    rax,r11
   140005c34:	ret    
   140005c35:	int3   
   140005c36:	int3   
   140005c37:	int3   
   140005c38:	mov    rax,rsp
   140005c3b:	mov    QWORD PTR [rax+0x8],rbx
   140005c3f:	mov    QWORD PTR [rax+0x10],rbp
   140005c43:	mov    QWORD PTR [rax+0x18],rsi
   140005c47:	mov    QWORD PTR [rax+0x20],rdi
   140005c4b:	push   r15
   140005c4d:	sub    rsp,0x30
   140005c51:	xor    edi,edi
   140005c53:	mov    rbx,rdx
   140005c56:	mov    rsi,rcx
   140005c59:	test   rcx,rcx
   140005c5c:	jne    0x140005c76
   140005c5e:	call   0x1400095b8
   140005c63:	mov    ebx,0x16
   140005c68:	mov    DWORD PTR [rax],ebx
   140005c6a:	call   0x140008628
   140005c6f:	mov    eax,ebx
   140005c71:	jmp    0x140005d1d
   140005c76:	test   rdx,rdx
   140005c79:	je     0x140005c5e
   140005c7b:	call   0x140008d30
   140005c80:	mov    r15d,0x1
   140005c86:	test   eax,eax
   140005c88:	jne    0x140005c96
   140005c8a:	call   QWORD PTR [rip+0x21410]        # 0x1400270a0
   140005c90:	test   eax,eax
   140005c92:	cmove  edi,r15d
   140005c96:	and    DWORD PTR [rsp+0x28],0x0
   140005c9b:	and    QWORD PTR [rbx],0x0
   140005c9f:	and    QWORD PTR [rsp+0x20],0x0
   140005ca5:	or     r9d,0xffffffff
   140005ca9:	mov    r8,rsi
   140005cac:	xor    edx,edx
   140005cae:	mov    ecx,edi
   140005cb0:	call   QWORD PTR [rip+0x213f2]        # 0x1400270a8
   140005cb6:	movsxd rbp,eax
   140005cb9:	test   eax,eax
   140005cbb:	jne    0x140005cce
   140005cbd:	call   QWORD PTR [rip+0x213bd]        # 0x140027080
   140005cc3:	mov    ecx,eax
   140005cc5:	call   0x140009568
   140005cca:	xor    eax,eax
   140005ccc:	jmp    0x140005d1d
   140005cce:	mov    rcx,rbp
   140005cd1:	add    rcx,rcx
   140005cd4:	call   0x140007f54
   140005cd9:	mov    QWORD PTR [rbx],rax
   140005cdc:	test   rax,rax
   140005cdf:	je     0x140005cca
   140005ce1:	or     r9d,0xffffffff
   140005ce5:	mov    r8,rsi
   140005ce8:	xor    edx,edx
   140005cea:	mov    ecx,edi
   140005cec:	mov    DWORD PTR [rsp+0x28],ebp
   140005cf0:	mov    QWORD PTR [rsp+0x20],rax
   140005cf5:	call   QWORD PTR [rip+0x213ad]        # 0x1400270a8
   140005cfb:	test   eax,eax
   140005cfd:	jne    0x140005d1a
   140005cff:	call   QWORD PTR [rip+0x2137b]        # 0x140027080
   140005d05:	mov    ecx,eax
   140005d07:	call   0x140009568
   140005d0c:	mov    rcx,QWORD PTR [rbx]
   140005d0f:	call   0x140006444
   140005d14:	and    QWORD PTR [rbx],0x0
   140005d18:	jmp    0x140005cca
   140005d1a:	mov    eax,r15d
   140005d1d:	mov    rbx,QWORD PTR [rsp+0x40]
   140005d22:	mov    rbp,QWORD PTR [rsp+0x48]
   140005d27:	mov    rsi,QWORD PTR [rsp+0x50]
   140005d2c:	mov    rdi,QWORD PTR [rsp+0x58]
   140005d31:	add    rsp,0x30
   140005d35:	pop    r15
   140005d37:	ret    
   140005d38:	mov    rax,rsp
   140005d3b:	mov    QWORD PTR [rax+0x8],rbx
   140005d3f:	mov    QWORD PTR [rax+0x10],rbp
   140005d43:	mov    QWORD PTR [rax+0x18],rsi
   140005d47:	mov    QWORD PTR [rax+0x20],rdi
   140005d4b:	push   r15
   140005d4d:	sub    rsp,0x40
   140005d51:	xor    edi,edi
   140005d53:	mov    rbx,rdx
   140005d56:	mov    rsi,rcx
   140005d59:	test   rcx,rcx
   140005d5c:	jne    0x140005d76
   140005d5e:	call   0x1400095b8
   140005d63:	mov    ebx,0x16
   140005d68:	mov    DWORD PTR [rax],ebx
   140005d6a:	call   0x140008628
   140005d6f:	mov    eax,ebx
   140005d71:	jmp    0x140005e32
   140005d76:	test   rdx,rdx
   140005d79:	je     0x140005d5e
   140005d7b:	call   0x140008d30
   140005d80:	mov    r15d,0x1
   140005d86:	test   eax,eax
   140005d88:	jne    0x140005d96
   140005d8a:	call   QWORD PTR [rip+0x21310]        # 0x1400270a0
   140005d90:	test   eax,eax
   140005d92:	cmove  edi,r15d
   140005d96:	and    QWORD PTR [rsp+0x38],0x0
   140005d9c:	and    QWORD PTR [rsp+0x30],0x0
   140005da2:	and    DWORD PTR [rsp+0x28],0x0
   140005da7:	and    QWORD PTR [rsp+0x20],0x0
   140005dad:	and    QWORD PTR [rbx],0x0
   140005db1:	or     r9d,0xffffffff
   140005db5:	mov    r8,rsi
   140005db8:	xor    edx,edx
   140005dba:	mov    ecx,edi
   140005dbc:	call   QWORD PTR [rip+0x212ee]        # 0x1400270b0
   140005dc2:	movsxd rbp,eax
   140005dc5:	test   eax,eax
   140005dc7:	jne    0x140005dda
   140005dc9:	call   QWORD PTR [rip+0x212b1]        # 0x140027080
   140005dcf:	mov    ecx,eax
   140005dd1:	call   0x140009568
   140005dd6:	xor    eax,eax
   140005dd8:	jmp    0x140005e32
   140005dda:	mov    rcx,rbp
   140005ddd:	call   0x140007f54
   140005de2:	mov    QWORD PTR [rbx],rax
   140005de5:	test   rax,rax
   140005de8:	je     0x140005dd6
   140005dea:	and    QWORD PTR [rsp+0x38],0x0
   140005df0:	and    QWORD PTR [rsp+0x30],0x0
   140005df6:	or     r9d,0xffffffff
   140005dfa:	mov    r8,rsi
   140005dfd:	xor    edx,edx
   140005dff:	mov    ecx,edi
   140005e01:	mov    DWORD PTR [rsp+0x28],ebp
   140005e05:	mov    QWORD PTR [rsp+0x20],rax
   140005e0a:	call   QWORD PTR [rip+0x212a0]        # 0x1400270b0
   140005e10:	test   eax,eax
   140005e12:	jne    0x140005e2f
   140005e14:	call   QWORD PTR [rip+0x21266]        # 0x140027080
   140005e1a:	mov    ecx,eax
   140005e1c:	call   0x140009568
   140005e21:	mov    rcx,QWORD PTR [rbx]
   140005e24:	call   0x140006444
   140005e29:	and    QWORD PTR [rbx],0x0
   140005e2d:	jmp    0x140005dd6
   140005e2f:	mov    eax,r15d
   140005e32:	mov    rbx,QWORD PTR [rsp+0x50]
   140005e37:	mov    rbp,QWORD PTR [rsp+0x58]
   140005e3c:	mov    rsi,QWORD PTR [rsp+0x60]
   140005e41:	mov    rdi,QWORD PTR [rsp+0x68]
   140005e46:	add    rsp,0x40
   140005e4a:	pop    r15
   140005e4c:	ret    
   140005e4d:	int3   
   140005e4e:	int3   
   140005e4f:	int3   
   140005e50:	rex push rbx
   140005e52:	sub    rsp,0x20
   140005e56:	mov    ebx,ecx
   140005e58:	lea    r8,[rsp+0x38]
   140005e5d:	lea    rdx,[rip+0x239dc]        # 0x140029840
   140005e64:	xor    ecx,ecx
   140005e66:	call   QWORD PTR [rip+0x21224]        # 0x140027090
   140005e6c:	test   eax,eax
   140005e6e:	je     0x140005e8b
   140005e70:	mov    rcx,QWORD PTR [rsp+0x38]
   140005e75:	lea    rdx,[rip+0x239dc]        # 0x140029858
   140005e7c:	call   QWORD PTR [rip+0x21216]        # 0x140027098
   140005e82:	test   rax,rax
   140005e85:	je     0x140005e8b
   140005e87:	mov    ecx,ebx
   140005e89:	call   rax
   140005e8b:	add    rsp,0x20
   140005e8f:	pop    rbx
   140005e90:	ret    
   140005e91:	int3   
   140005e92:	int3   
   140005e93:	int3   
   140005e94:	rex push rbx
   140005e96:	sub    rsp,0x20
   140005e9a:	mov    ebx,ecx
   140005e9c:	call   0x140005e50
   140005ea1:	mov    ecx,ebx
   140005ea3:	call   QWORD PTR [rip+0x211df]        # 0x140027088
   140005ea9:	int3   
   140005eaa:	int3   
   140005eab:	int3   
   140005eac:	mov    QWORD PTR [rsp+0x8],rbx
   140005eb1:	push   rdi
   140005eb2:	sub    rsp,0x20
   140005eb6:	mov    rcx,QWORD PTR [rip+0x342c3]        # 0x14003a180
   140005ebd:	call   QWORD PTR [rip+0x211b5]        # 0x140027078
   140005ec3:	mov    rbx,QWORD PTR [rip+0x31e4e]        # 0x140037d18
   140005eca:	mov    rdi,rax
   140005ecd:	test   rbx,rbx
   140005ed0:	je     0x140005eec
   140005ed2:	mov    rcx,QWORD PTR [rbx]
   140005ed5:	test   rcx,rcx
   140005ed8:	je     0x140005ee5
   140005eda:	call   0x140006444
   140005edf:	add    rbx,0x8
   140005ee3:	jne    0x140005ed2
   140005ee5:	mov    rbx,QWORD PTR [rip+0x31e2c]        # 0x140037d18
   140005eec:	mov    rcx,rbx
   140005eef:	call   0x140006444
   140005ef4:	mov    rbx,QWORD PTR [rip+0x31e15]        # 0x140037d10
   140005efb:	and    QWORD PTR [rip+0x31e15],0x0        # 0x140037d18
   140005f03:	test   rbx,rbx
   140005f06:	je     0x140005f22
   140005f08:	mov    rcx,QWORD PTR [rbx]
   140005f0b:	test   rcx,rcx
   140005f0e:	je     0x140005f1b
   140005f10:	call   0x140006444
   140005f15:	add    rbx,0x8
   140005f19:	jne    0x140005f08
   140005f1b:	mov    rbx,QWORD PTR [rip+0x31dee]        # 0x140037d10
   140005f22:	mov    rcx,rbx
   140005f25:	call   0x140006444
   140005f2a:	mov    rcx,QWORD PTR [rip+0x31dd7]        # 0x140037d08
   140005f31:	and    QWORD PTR [rip+0x31dd7],0x0        # 0x140037d10
   140005f39:	call   0x140006444
   140005f3e:	mov    rcx,QWORD PTR [rip+0x31dbb]        # 0x140037d00
   140005f45:	call   0x140006444
   140005f4a:	and    QWORD PTR [rip+0x31db6],0x0        # 0x140037d08
   140005f52:	and    QWORD PTR [rip+0x31da6],0x0        # 0x140037d00
   140005f5a:	or     rbx,0xffffffffffffffff
   140005f5e:	cmp    rdi,rbx
   140005f61:	je     0x140005f75
   140005f63:	cmp    QWORD PTR [rip+0x34215],0x0        # 0x14003a180
   140005f6b:	je     0x140005f75
   140005f6d:	mov    rcx,rdi
   140005f70:	call   0x140006444
   140005f75:	mov    rcx,rbx
   140005f78:	call   QWORD PTR [rip+0x210f2]        # 0x140027070
   140005f7e:	mov    rcx,QWORD PTR [rip+0x326d3]        # 0x140038658
   140005f85:	mov    QWORD PTR [rip+0x341f4],rax        # 0x14003a180
   140005f8c:	test   rcx,rcx
   140005f8f:	je     0x140005f9e
   140005f91:	call   0x140006444
   140005f96:	and    QWORD PTR [rip+0x326ba],0x0        # 0x140038658
   140005f9e:	mov    rcx,QWORD PTR [rip+0x326bb]        # 0x140038660
   140005fa5:	test   rcx,rcx
   140005fa8:	je     0x140005fb7
   140005faa:	call   0x140006444
   140005faf:	and    QWORD PTR [rip+0x326a9],0x0        # 0x140038660
   140005fb7:	mov    rax,QWORD PTR [rip+0x30a72]        # 0x140036a30
   140005fbe:	mov    ecx,ebx
   140005fc0:	lock xadd DWORD PTR [rax],ecx
   140005fc4:	add    ecx,ebx
   140005fc6:	jne    0x140005fe7
   140005fc8:	mov    rcx,QWORD PTR [rip+0x30a61]        # 0x140036a30
   140005fcf:	lea    rbx,[rip+0x3073a]        # 0x140036710
   140005fd6:	cmp    rcx,rbx
   140005fd9:	je     0x140005fe7
   140005fdb:	call   0x140006444
   140005fe0:	mov    QWORD PTR [rip+0x30a49],rbx        # 0x140036a30
   140005fe7:	mov    rbx,QWORD PTR [rsp+0x30]
   140005fec:	add    rsp,0x20
   140005ff0:	pop    rdi
   140005ff1:	ret    
   140005ff2:	int3   
   140005ff3:	int3   
   140005ff4:	rex push rbx
   140005ff6:	sub    rsp,0x20
   140005ffa:	mov    ebx,ecx
   140005ffc:	call   0x140009264
   140006001:	mov    ecx,ebx
   140006003:	call   0x1400092d8
   140006008:	xor    r8d,r8d
   14000600b:	mov    ecx,0xff
   140006010:	lea    edx,[r8+0x1]
   140006014:	call   0x14000625c
   140006019:	int3   
   14000601a:	int3   
   14000601b:	int3   
   14000601c:	mov    edx,0x1
   140006021:	xor    ecx,ecx
   140006023:	mov    r8d,edx
   140006026:	jmp    0x14000625c
   14000602b:	int3   
   14000602c:	xor    edx,edx
   14000602e:	xor    ecx,ecx
   140006030:	lea    r8d,[rdx+0x1]
   140006034:	jmp    0x14000625c
   140006039:	int3   
   14000603a:	int3   
   14000603b:	int3   
   14000603c:	rex push rbx
   14000603e:	sub    rsp,0x20
   140006042:	cmp    QWORD PTR [rip+0x2393e],0x0        # 0x140029988
   14000604a:	mov    ebx,ecx
   14000604c:	je     0x140006066
   14000604e:	lea    rcx,[rip+0x23933]        # 0x140029988
   140006055:	call   0x140009770
   14000605a:	test   eax,eax
   14000605c:	je     0x140006066
   14000605e:	mov    ecx,ebx
   140006060:	call   QWORD PTR [rip+0x23922]        # 0x140029988
   140006066:	call   0x1400097f0
   14000606b:	lea    rdx,[rip+0x212fe]        # 0x140027370
   140006072:	lea    rcx,[rip+0x212c7]        # 0x140027340
   140006079:	call   0x140006208
   14000607e:	test   eax,eax
   140006080:	jne    0x1400060cc
   140006082:	lea    rcx,[rip+0x269f]        # 0x140008728
   140006089:	call   0x1400056a0
   14000608e:	lea    rdx,[rip+0x212a3]        # 0x140027338
   140006095:	lea    rcx,[rip+0x21254]        # 0x1400272f0
   14000609c:	call   0x1400061a8
   1400060a1:	cmp    QWORD PTR [rip+0x340c7],0x0        # 0x14003a170
   1400060a9:	je     0x1400060ca
   1400060ab:	lea    rcx,[rip+0x340be]        # 0x14003a170
   1400060b2:	call   0x140009770
   1400060b7:	test   eax,eax
   1400060b9:	je     0x1400060ca
   1400060bb:	xor    r8d,r8d
   1400060be:	xor    ecx,ecx
   1400060c0:	lea    edx,[r8+0x2]
   1400060c4:	call   QWORD PTR [rip+0x340a6]        # 0x14003a170
   1400060ca:	xor    eax,eax
   1400060cc:	add    rsp,0x20
   1400060d0:	pop    rbx
   1400060d1:	ret    
   1400060d2:	int3   
   1400060d3:	int3   
   1400060d4:	xor    r8d,r8d
   1400060d7:	lea    edx,[r8+0x1]
   1400060db:	jmp    0x14000625c
   1400060e0:	xor    r8d,r8d
   1400060e3:	xor    edx,edx
   1400060e5:	xor    ecx,ecx
   1400060e7:	jmp    0x14000625c
   1400060ec:	sub    rsp,0x28
   1400060f0:	test   rcx,rcx
   1400060f3:	jne    0x14000610c
   1400060f5:	call   0x1400095b8
   1400060fa:	mov    DWORD PTR [rax],0x16
   140006100:	call   0x140008628
   140006105:	mov    eax,0x16
   14000610a:	jmp    0x14000611d
   14000610c:	mov    rax,QWORD PTR [rip+0x31c0d]        # 0x140037d20
   140006113:	test   rax,rax
   140006116:	je     0x1400060f5
   140006118:	mov    QWORD PTR [rcx],rax
   14000611b:	xor    eax,eax
   14000611d:	add    rsp,0x28
   140006121:	ret    
   140006122:	int3   
   140006123:	int3   
   140006124:	sub    rsp,0x28
   140006128:	test   rcx,rcx
   14000612b:	jne    0x140006144
   14000612d:	call   0x1400095b8
   140006132:	mov    DWORD PTR [rax],0x16
   140006138:	call   0x140008628
   14000613d:	mov    eax,0x16
   140006142:	jmp    0x140006155
   140006144:	mov    rax,QWORD PTR [rip+0x31bdd]        # 0x140037d28
   14000614b:	test   rax,rax
   14000614e:	je     0x14000612d
   140006150:	mov    QWORD PTR [rcx],rax
   140006153:	xor    eax,eax
   140006155:	add    rsp,0x28
   140006159:	ret    
   14000615a:	int3   
   14000615b:	int3   
   14000615c:	rex push rbx
   14000615e:	sub    rsp,0x20
   140006162:	xor    ecx,ecx
   140006164:	call   QWORD PTR [rip+0x20f06]        # 0x140027070
   14000616a:	mov    rcx,rax
   14000616d:	mov    rbx,rax
   140006170:	call   0x140007e90
   140006175:	mov    rcx,rbx
   140006178:	call   0x1400085b8
   14000617d:	mov    rcx,rbx
   140006180:	call   0x140007db8
   140006185:	mov    rcx,rbx
   140006188:	call   0x1400098e4
   14000618d:	mov    rcx,rbx
   140006190:	call   0x14000988c
   140006195:	mov    rcx,rbx
   140006198:	call   0x140009e94
   14000619d:	add    rsp,0x20
   1400061a1:	pop    rbx
   1400061a2:	jmp    0x140008d7c
   1400061a7:	int3   
   1400061a8:	mov    QWORD PTR [rsp+0x8],rbx
   1400061ad:	mov    QWORD PTR [rsp+0x10],rbp
   1400061b2:	mov    QWORD PTR [rsp+0x18],rsi
   1400061b7:	push   rdi
   1400061b8:	sub    rsp,0x20
   1400061bc:	xor    ebp,ebp
   1400061be:	mov    rbx,rdx
   1400061c1:	mov    rdi,rcx
   1400061c4:	sub    rbx,rcx
   1400061c7:	mov    esi,ebp
   1400061c9:	add    rbx,0x7
   1400061cd:	shr    rbx,0x3
   1400061d1:	cmp    rcx,rdx
   1400061d4:	cmova  rbx,rbp
   1400061d8:	test   rbx,rbx
   1400061db:	je     0x1400061f3
   1400061dd:	mov    rax,QWORD PTR [rdi]
   1400061e0:	test   rax,rax
   1400061e3:	je     0x1400061e7
   1400061e5:	call   rax
   1400061e7:	inc    rsi
   1400061ea:	add    rdi,0x8
   1400061ee:	cmp    rsi,rbx
   1400061f1:	jb     0x1400061dd
   1400061f3:	mov    rbx,QWORD PTR [rsp+0x30]
   1400061f8:	mov    rbp,QWORD PTR [rsp+0x38]
   1400061fd:	mov    rsi,QWORD PTR [rsp+0x40]
   140006202:	add    rsp,0x20
   140006206:	pop    rdi
   140006207:	ret    
   140006208:	mov    QWORD PTR [rsp+0x8],rbx
   14000620d:	push   rdi
   14000620e:	sub    rsp,0x20
   140006212:	xor    eax,eax
   140006214:	mov    rdi,rdx
   140006217:	mov    rbx,rcx
   14000621a:	cmp    rcx,rdx
   14000621d:	jae    0x140006236
   14000621f:	test   eax,eax
   140006221:	jne    0x140006236
   140006223:	mov    rcx,QWORD PTR [rbx]
   140006226:	test   rcx,rcx
   140006229:	je     0x14000622d
   14000622b:	call   rcx
   14000622d:	add    rbx,0x8
   140006231:	cmp    rbx,rdi
   140006234:	jb     0x14000621f
   140006236:	mov    rbx,QWORD PTR [rsp+0x30]
   14000623b:	add    rsp,0x20
   14000623f:	pop    rdi
   140006240:	ret    
   140006241:	int3   
   140006242:	int3   
   140006243:	int3   
   140006244:	mov    ecx,0x8
   140006249:	jmp    0x140008760
   14000624e:	int3   
   14000624f:	int3   
   140006250:	mov    ecx,0x8
   140006255:	jmp    0x14000897c
   14000625a:	int3   
   14000625b:	int3   
   14000625c:	mov    QWORD PTR [rsp+0x8],rbx
   140006261:	mov    QWORD PTR [rsp+0x10],rsi
   140006266:	mov    DWORD PTR [rsp+0x18],r8d
   14000626b:	push   rdi
   14000626c:	push   r12
   14000626e:	push   r13
   140006270:	push   r14
   140006272:	push   r15
   140006274:	sub    rsp,0x40
   140006278:	mov    r14d,r8d
   14000627b:	mov    ebx,edx
   14000627d:	mov    r13d,ecx
   140006280:	mov    ecx,0x8
   140006285:	call   0x140008760
   14000628a:	nop
   14000628b:	cmp    DWORD PTR [rip+0x31a66],0x1        # 0x140037cf8
   140006292:	je     0x14000639f
   140006298:	mov    DWORD PTR [rip+0x31a96],0x1        # 0x140037d38
   1400062a2:	mov    BYTE PTR [rip+0x31a8b],r14b        # 0x140037d34
   1400062a9:	test   ebx,ebx
   1400062ab:	jne    0x14000638b
   1400062b1:	mov    rcx,QWORD PTR [rip+0x33ec8]        # 0x14003a180
   1400062b8:	call   QWORD PTR [rip+0x20dba]        # 0x140027078
   1400062be:	mov    rsi,rax
   1400062c1:	mov    QWORD PTR [rsp+0x30],rax
   1400062c6:	test   rax,rax
   1400062c9:	je     0x140006378
   1400062cf:	mov    rcx,QWORD PTR [rip+0x33ea2]        # 0x14003a178
   1400062d6:	call   QWORD PTR [rip+0x20d9c]        # 0x140027078
   1400062dc:	mov    rdi,rax
   1400062df:	mov    QWORD PTR [rsp+0x20],rax
   1400062e4:	mov    r12,rsi
   1400062e7:	mov    QWORD PTR [rsp+0x28],rsi
   1400062ec:	mov    r15,rax
   1400062ef:	mov    QWORD PTR [rsp+0x38],rax
   1400062f4:	sub    rdi,0x8
   1400062f8:	mov    QWORD PTR [rsp+0x20],rdi
   1400062fd:	cmp    rdi,rsi
   140006300:	jb     0x140006378
   140006302:	xor    ecx,ecx
   140006304:	call   QWORD PTR [rip+0x20d66]        # 0x140027070
   14000630a:	cmp    QWORD PTR [rdi],rax
   14000630d:	jne    0x140006311
   14000630f:	jmp    0x1400062f4
   140006311:	cmp    rdi,rsi
   140006314:	jb     0x140006378
   140006316:	mov    rcx,QWORD PTR [rdi]
   140006319:	call   QWORD PTR [rip+0x20d59]        # 0x140027078
   14000631f:	mov    rbx,rax
   140006322:	xor    ecx,ecx
   140006324:	call   QWORD PTR [rip+0x20d46]        # 0x140027070
   14000632a:	mov    QWORD PTR [rdi],rax
   14000632d:	call   rbx
   14000632f:	mov    rcx,QWORD PTR [rip+0x33e4a]        # 0x14003a180
   140006336:	call   QWORD PTR [rip+0x20d3c]        # 0x140027078
   14000633c:	mov    rbx,rax
   14000633f:	mov    rcx,QWORD PTR [rip+0x33e32]        # 0x14003a178
   140006346:	call   QWORD PTR [rip+0x20d2c]        # 0x140027078
   14000634c:	cmp    r12,rbx
   14000634f:	jne    0x140006356
   140006351:	cmp    r15,rax
   140006354:	je     0x14000630f
   140006356:	mov    r12,rbx
   140006359:	mov    QWORD PTR [rsp+0x28],rbx
   14000635e:	mov    rsi,rbx
   140006361:	mov    QWORD PTR [rsp+0x30],rbx
   140006366:	mov    r15,rax
   140006369:	mov    QWORD PTR [rsp+0x38],rax
   14000636e:	mov    rdi,rax
   140006371:	mov    QWORD PTR [rsp+0x20],rax
   140006376:	jmp    0x14000630f
   140006378:	lea    rdx,[rip+0x21019]        # 0x140027398
   14000637f:	lea    rcx,[rip+0x20ff2]        # 0x140027378
   140006386:	call   0x1400061a8
   14000638b:	lea    rdx,[rip+0x21016]        # 0x1400273a8
   140006392:	lea    rcx,[rip+0x21007]        # 0x1400273a0
   140006399:	call   0x1400061a8
   14000639e:	nop
   14000639f:	test   r14d,r14d
   1400063a2:	je     0x1400063b3
   1400063a4:	mov    ecx,0x8
   1400063a9:	call   0x14000897c
   1400063ae:	test   r14d,r14d
   1400063b1:	jne    0x1400063d9
   1400063b3:	mov    DWORD PTR [rip+0x3193b],0x1        # 0x140037cf8
   1400063bd:	mov    ecx,0x8
   1400063c2:	call   0x14000897c
   1400063c7:	mov    ecx,r13d
   1400063ca:	call   0x140005e50
   1400063cf:	mov    ecx,r13d
   1400063d2:	call   QWORD PTR [rip+0x20cb0]        # 0x140027088
   1400063d8:	int3   
   1400063d9:	mov    rbx,QWORD PTR [rsp+0x70]
   1400063de:	mov    rsi,QWORD PTR [rsp+0x78]
   1400063e3:	add    rsp,0x40
   1400063e7:	pop    r15
   1400063e9:	pop    r14
   1400063eb:	pop    r13
   1400063ed:	pop    r12
   1400063ef:	pop    rdi
   1400063f0:	ret    
   1400063f1:	int3   
   1400063f2:	int3   
   1400063f3:	int3   
   1400063f4:	xor    r8d,r8d
   1400063f7:	xor    edx,edx
   1400063f9:	jmp    0x14000625c
   1400063fe:	int3   
   1400063ff:	int3   
   140006400:	rex push rbx
   140006402:	sub    rsp,0x20
   140006406:	and    DWORD PTR [rsp+0x40],0x0
   14000640b:	lea    r8,[rsp+0x40]
   140006410:	call   0x14000aae4
   140006415:	mov    rbx,rax
   140006418:	test   rax,rax
   14000641b:	jne    0x140006438
   14000641d:	cmp    DWORD PTR [rsp+0x40],eax
   140006421:	je     0x140006438
   140006423:	call   0x1400095b8
   140006428:	test   rax,rax
   14000642b:	je     0x140006438
   14000642d:	call   0x1400095b8
   140006432:	mov    ecx,DWORD PTR [rsp+0x40]
   140006436:	mov    DWORD PTR [rax],ecx
   140006438:	mov    rax,rbx
   14000643b:	add    rsp,0x20
   14000643f:	pop    rbx
   140006440:	ret    
   140006441:	int3   
   140006442:	int3   
   140006443:	int3   
   140006444:	test   rcx,rcx
   140006447:	je     0x140006480
   140006449:	push   rbx
   14000644a:	sub    rsp,0x20
   14000644e:	mov    r8,rcx
   140006451:	mov    rcx,QWORD PTR [rip+0x32210]        # 0x140038668
   140006458:	xor    edx,edx
   14000645a:	call   QWORD PTR [rip+0x20c58]        # 0x1400270b8
   140006460:	test   eax,eax
   140006462:	jne    0x14000647b
   140006464:	call   0x1400095b8
   140006469:	mov    rbx,rax
   14000646c:	call   QWORD PTR [rip+0x20c0e]        # 0x140027080
   140006472:	mov    ecx,eax
   140006474:	call   0x140009650
   140006479:	mov    DWORD PTR [rbx],eax
   14000647b:	add    rsp,0x20
   14000647f:	pop    rbx
   140006480:	ret    
   140006481:	int3   
   140006482:	int3   
   140006483:	int3   
   140006484:	rex push rbx
   140006486:	sub    rsp,0x20
   14000648a:	mov    rbx,rcx
   14000648d:	mov    rcx,QWORD PTR [rip+0x321d4]        # 0x140038668
   140006494:	test   rcx,rcx
   140006497:	jne    0x1400064b9
   140006499:	call   0x140009264
   14000649e:	mov    ecx,0x1e
   1400064a3:	call   0x1400092d8
   1400064a8:	mov    ecx,0xff
   1400064ad:	call   0x140005e94
   1400064b2:	mov    rcx,QWORD PTR [rip+0x321af]        # 0x140038668
   1400064b9:	test   rbx,rbx
   1400064bc:	mov    r8d,0x1
   1400064c2:	cmovne r8,rbx
   1400064c6:	xor    edx,edx
   1400064c8:	add    rsp,0x20
   1400064cc:	pop    rbx
   1400064cd:	rex.W jmp QWORD PTR [rip+0x20bec]        # 0x1400270c0
   1400064d4:	mov    QWORD PTR [rsp+0x8],rbx
   1400064d9:	mov    QWORD PTR [rsp+0x10],rsi
   1400064de:	push   rdi
   1400064df:	sub    rsp,0x20
   1400064e3:	mov    rbx,rcx
   1400064e6:	cmp    rcx,0xffffffffffffffe0
   1400064ea:	ja     0x140006568
   1400064ec:	mov    edi,0x1
   1400064f1:	test   rcx,rcx
   1400064f4:	cmovne rdi,rcx
   1400064f8:	mov    rcx,QWORD PTR [rip+0x32169]        # 0x140038668
   1400064ff:	test   rcx,rcx
   140006502:	jne    0x140006524
   140006504:	call   0x140009264
   140006509:	mov    ecx,0x1e
   14000650e:	call   0x1400092d8
   140006513:	mov    ecx,0xff
   140006518:	call   0x140005e94
   14000651d:	mov    rcx,QWORD PTR [rip+0x32144]        # 0x140038668
   140006524:	mov    r8,rdi
   140006527:	xor    edx,edx
   140006529:	call   QWORD PTR [rip+0x20b91]        # 0x1400270c0
   14000652f:	mov    rsi,rax
   140006532:	test   rax,rax
   140006535:	jne    0x140006563
   140006537:	cmp    DWORD PTR [rip+0x32133],eax        # 0x140038670
   14000653d:	je     0x14000654d
   14000653f:	mov    rcx,rbx
   140006542:	call   0x140007e5c
   140006547:	test   eax,eax
   140006549:	je     0x140006558
   14000654b:	jmp    0x1400064f8
   14000654d:	call   0x1400095b8
   140006552:	mov    DWORD PTR [rax],0xc
   140006558:	call   0x1400095b8
   14000655d:	mov    DWORD PTR [rax],0xc
   140006563:	mov    rax,rsi
   140006566:	jmp    0x14000657a
   140006568:	call   0x140007e5c
   14000656d:	call   0x1400095b8
   140006572:	mov    DWORD PTR [rax],0xc
   140006578:	xor    eax,eax
   14000657a:	mov    rbx,QWORD PTR [rsp+0x30]
   14000657f:	mov    rsi,QWORD PTR [rsp+0x38]
   140006584:	add    rsp,0x20
   140006588:	pop    rdi
   140006589:	ret    
   14000658a:	int3   
   14000658b:	int3   
   14000658c:	rex push rbx
   14000658e:	sub    rsp,0x50
   140006592:	movsd  QWORD PTR [rsp+0x68],xmm0
   140006598:	movabs rax,0x7fffffffffffffff
   1400065a2:	mov    rcx,QWORD PTR [rsp+0x68]
   1400065a7:	movsd  QWORD PTR [rsp+0x68],xmm1
   1400065ad:	mov    r8,QWORD PTR [rsp+0x68]
   1400065b2:	and    rcx,rax
   1400065b5:	and    r8,rax
   1400065b8:	mov    r9,rcx
   1400065bb:	mov    eax,0x7ff
   1400065c0:	mov    rdx,r8
   1400065c3:	shr    r9,0x34
   1400065c7:	shr    rdx,0x34
   1400065cb:	cmp    r9,rax
   1400065ce:	je     0x14000679c
   1400065d4:	cmp    rdx,rax
   1400065d7:	je     0x14000679c
   1400065dd:	mov    QWORD PTR [rsp+0x68],rcx
   1400065e2:	mov    eax,r9d
   1400065e5:	xor    r10d,r10d
   1400065e8:	movsd  xmm2,QWORD PTR [rsp+0x68]
   1400065ee:	mov    QWORD PTR [rsp+0x68],r8
   1400065f3:	sub    eax,edx
   1400065f5:	movsd  xmm3,QWORD PTR [rsp+0x68]
   1400065fb:	test   rcx,rcx
   1400065fe:	jne    0x140006608
   140006600:	movaps xmm0,xmm3
   140006603:	jmp    0x1400067e8
   140006608:	test   r8,r8
   14000660b:	jne    0x140006615
   14000660d:	movaps xmm0,xmm2
   140006610:	jmp    0x1400067e8
   140006615:	add    eax,0x36
   140006618:	cmp    eax,0x6c
   14000661b:	ja     0x140006793
   140006621:	mov    eax,0x5f3
   140006626:	cmp    r9,rax
   140006629:	ja     0x1400066cb
   14000662f:	cmp    rdx,rax
   140006632:	ja     0x1400066cb
   140006638:	mov    eax,0x20b
   14000663d:	cmp    r9,rax
   140006640:	jb     0x14000664b
   140006642:	cmp    rdx,rax
   140006645:	jae    0x1400066f9
   14000664b:	movsd  xmm0,QWORD PTR [rip+0x23225]        # 0x140029878
   140006653:	movabs rbx,0x2590000000000000
   14000665d:	mov    r10d,0xfffffda8
   140006663:	movabs r11,0x2580000000000000
   14000666d:	test   r9,r9
   140006670:	jne    0x140006692
   140006672:	lea    rax,[rcx+rbx*1]
   140006676:	mov    QWORD PTR [rsp+0x68],rax
   14000667b:	movsd  xmm2,QWORD PTR [rsp+0x68]
   140006681:	addsd  xmm2,xmm0
   140006685:	movsd  QWORD PTR [rsp+0x68],xmm2
   14000668b:	mov    rax,QWORD PTR [rsp+0x68]
   140006690:	jmp    0x1400066a0
   140006692:	add    rcx,r11
   140006695:	mov    QWORD PTR [rsp+0x68],rcx
   14000669a:	movsd  xmm2,QWORD PTR [rsp+0x68]
   1400066a0:	test   rdx,rdx
   1400066a3:	jne    0x1400066c5
   1400066a5:	lea    rax,[r8+rbx*1]
   1400066a9:	mov    QWORD PTR [rsp+0x68],rax
   1400066ae:	movsd  xmm3,QWORD PTR [rsp+0x68]
   1400066b4:	addsd  xmm3,xmm0
   1400066b8:	movsd  QWORD PTR [rsp+0x68],xmm3
   1400066be:	mov    rax,QWORD PTR [rsp+0x68]
   1400066c3:	jmp    0x1400066f9
   1400066c5:	lea    rax,[r8+r11*1]
   1400066c9:	jmp    0x1400066ee
   1400066cb:	movabs rdx,0xda80000000000000
   1400066d5:	mov    r10d,0x258
   1400066db:	lea    rax,[rcx+rdx*1]
   1400066df:	mov    QWORD PTR [rsp+0x68],rax
   1400066e4:	lea    rax,[r8+rdx*1]
   1400066e8:	movsd  xmm2,QWORD PTR [rsp+0x68]
   1400066ee:	mov    QWORD PTR [rsp+0x68],rax
   1400066f3:	movsd  xmm3,QWORD PTR [rsp+0x68]
   1400066f9:	movaps xmm1,xmm2
   1400066fc:	movaps xmm0,xmm3
   1400066ff:	movsxd rax,r10d
   140006702:	add    rax,0x3ff
   140006708:	shl    rax,0x34
   14000670c:	mulsd  xmm1,xmm2
   140006710:	mulsd  xmm0,xmm3
   140006714:	addsd  xmm1,xmm0
   140006718:	movsd  QWORD PTR [rsp+0x70],xmm1
   14000671e:	sqrtsd xmm1,QWORD PTR [rsp+0x70]
   140006724:	movsd  QWORD PTR [rsp+0x60],xmm1
   14000672a:	mov    QWORD PTR [rsp+0x68],rax
   14000672f:	movsd  xmm0,QWORD PTR [rsp+0x68]
   140006735:	movsd  xmm1,QWORD PTR [rsp+0x60]
   14000673b:	mulsd  xmm1,xmm0
   14000673f:	comisd xmm1,QWORD PTR [rip+0x23129]        # 0x140029870
   140006747:	jbe    0x14000678e
   140006749:	mov    DWORD PTR [rsp+0x40],0x2
   140006751:	movsd  QWORD PTR [rsp+0x38],xmm3
   140006757:	movsd  QWORD PTR [rsp+0x30],xmm2
   14000675d:	mov    edx,0x18
   140006762:	lea    rcx,[rip+0x230ff]        # 0x140029868
   140006769:	movabs r8,0x7ff0000000000000
   140006773:	lea    r9d,[rdx-0x15]
   140006777:	mov    DWORD PTR [rsp+0x28],0x22
   14000677f:	mov    DWORD PTR [rsp+0x20],0x11
   140006787:	call   0x14000ada8
   14000678c:	jmp    0x1400067e8
   14000678e:	movaps xmm0,xmm1
   140006791:	jmp    0x1400067e8
   140006793:	addsd  xmm2,xmm3
   140006797:	jmp    0x14000660d
   14000679c:	mulsd  xmm0,xmm0
   1400067a0:	mulsd  xmm1,xmm1
   1400067a4:	movabs r10,0xfffffffffffff
   1400067ae:	addsd  xmm0,xmm1
   1400067b2:	movsd  QWORD PTR [rsp+0x60],xmm0
   1400067b8:	cmp    r9,rax
   1400067bb:	jne    0x1400067c2
   1400067bd:	test   r10,rcx
   1400067c0:	je     0x1400067cc
   1400067c2:	cmp    rdx,rax
   1400067c5:	jne    0x1400067e8
   1400067c7:	test   r10,r8
   1400067ca:	jne    0x1400067e8
   1400067cc:	xor    ecx,ecx
   1400067ce:	call   0x14000ac50
   1400067d3:	movabs rax,0x7ff0000000000000
   1400067dd:	mov    QWORD PTR [rsp+0x68],rax
   1400067e2:	movsd  xmm0,QWORD PTR [rsp+0x68]
   1400067e8:	add    rsp,0x50
   1400067ec:	pop    rbx
   1400067ed:	ret    
   1400067ee:	int3   
   1400067ef:	int3   
   1400067f0:	sub    rsp,0x28
   1400067f4:	xor    eax,eax
   1400067f6:	test   cl,0x1
   1400067f9:	lea    edx,[rax+0x8]
   1400067fc:	cmovne eax,edx
   1400067ff:	test   cl,0x2
   140006802:	je     0x140006807
   140006804:	or     eax,0x10
   140006807:	test   cl,0x4
   14000680a:	je     0x14000680f
   14000680c:	or     eax,0x4
   14000680f:	test   dl,cl
   140006811:	je     0x140006816
   140006813:	or     eax,0x1
   140006816:	test   cl,0x10
   140006819:	je     0x14000681e
   14000681b:	or     eax,0x20
   14000681e:	mov    ecx,eax
   140006820:	call   0x14000ac50
   140006825:	movabs rax,0x7ff0000000000000
   14000682f:	mov    QWORD PTR [rsp+0x38],rax
   140006834:	movsd  xmm0,QWORD PTR [rsp+0x38]
   14000683a:	add    rsp,0x28
   14000683e:	ret    
   14000683f:	int3   
   140006840:	xor    eax,eax
   140006842:	test   cl,0x1
   140006845:	lea    edx,[rax+0x8]
   140006848:	cmovne eax,edx
   14000684b:	test   cl,0x2
   14000684e:	je     0x140006853
   140006850:	or     eax,0x10
   140006853:	test   cl,0x4
   140006856:	je     0x14000685b
   140006858:	or     eax,0x4
   14000685b:	test   dl,cl
   14000685d:	je     0x140006862
   14000685f:	or     eax,0x1
   140006862:	test   cl,0x10
   140006865:	je     0x14000686a
   140006867:	or     eax,0x20
   14000686a:	mov    ecx,eax
   14000686c:	jmp    0x14000ac50
   140006871:	int3   
   140006872:	int3   
   140006873:	int3   
   140006874:	movaps xmm1,xmm0
   140006877:	movsxd rax,edx
   14000687a:	add    rax,0x3ff
   140006880:	shl    rax,0x34
   140006884:	mov    QWORD PTR [rsp+0x8],rax
   140006889:	movsd  xmm0,QWORD PTR [rsp+0x8]
   14000688f:	mulsd  xmm0,xmm1
   140006893:	ret    
   140006894:	mov    QWORD PTR [rsp+0x10],rbx
   140006899:	mov    QWORD PTR [rsp+0x18],rdi
   14000689e:	push   rbp
   14000689f:	mov    rbp,rsp
   1400068a2:	sub    rsp,0x60
   1400068a6:	movaps xmm0,XMMWORD PTR [rip+0x22fd3]        # 0x140029880
   1400068ad:	movaps xmm1,XMMWORD PTR [rip+0x22fdc]        # 0x140029890
   1400068b4:	mov    rbx,rdx
   1400068b7:	mov    rdi,rcx
   1400068ba:	movaps XMMWORD PTR [rbp-0x40],xmm0
   1400068be:	movaps xmm0,XMMWORD PTR [rip+0x22fdb]        # 0x1400298a0
   1400068c5:	movaps XMMWORD PTR [rbp-0x30],xmm1
   1400068c9:	movaps xmm1,XMMWORD PTR [rip+0x22fe0]        # 0x1400298b0
   1400068d0:	movaps XMMWORD PTR [rbp-0x20],xmm0
   1400068d4:	movaps XMMWORD PTR [rbp-0x10],xmm1
   1400068d8:	test   rdx,rdx
   1400068db:	je     0x1400068f3
   1400068dd:	test   BYTE PTR [rdx],0x10
   1400068e0:	je     0x1400068f3
   1400068e2:	mov    rcx,QWORD PTR [rcx]
   1400068e5:	sub    rcx,0x8
   1400068e9:	mov    rax,QWORD PTR [rcx]
   1400068ec:	mov    rbx,QWORD PTR [rax+0x30]
   1400068f0:	call   QWORD PTR [rax+0x40]
   1400068f3:	lea    rdx,[rbp+0x10]
   1400068f7:	mov    rcx,rbx
   1400068fa:	mov    QWORD PTR [rbp-0x18],rdi
   1400068fe:	mov    QWORD PTR [rbp-0x10],rbx
   140006902:	call   QWORD PTR [rip+0x207c0]        # 0x1400270c8
   140006908:	mov    rdx,rax
   14000690b:	mov    QWORD PTR [rbp+0x10],rax
   14000690f:	mov    QWORD PTR [rbp-0x8],rax
   140006913:	test   rbx,rbx
   140006916:	je     0x140006933
   140006918:	test   BYTE PTR [rbx],0x8
   14000691b:	mov    ecx,0x1994000
   140006920:	je     0x140006927
   140006922:	mov    DWORD PTR [rbp-0x20],ecx
   140006925:	jmp    0x140006933
   140006927:	mov    eax,DWORD PTR [rbp-0x20]
   14000692a:	test   rdx,rdx
   14000692d:	cmove  eax,ecx
   140006930:	mov    DWORD PTR [rbp-0x20],eax
   140006933:	mov    r8d,DWORD PTR [rbp-0x28]
   140006937:	mov    edx,DWORD PTR [rbp-0x3c]
   14000693a:	mov    ecx,DWORD PTR [rbp-0x40]
   14000693d:	lea    r9,[rbp-0x20]
   140006941:	call   QWORD PTR [rip+0x20789]        # 0x1400270d0
   140006947:	lea    r11,[rsp+0x60]
   14000694c:	mov    rbx,QWORD PTR [r11+0x18]
   140006950:	mov    rdi,QWORD PTR [r11+0x20]
   140006954:	mov    rsp,r11
   140006957:	pop    rbp
   140006958:	ret    
   140006959:	int3   
   14000695a:	int3   
   14000695b:	int3   
   14000695c:	mov    QWORD PTR [rsp+0x8],rbx
   140006961:	mov    QWORD PTR [rsp+0x10],rsi
   140006966:	push   rdi
   140006967:	sub    rsp,0x20
   14000696b:	mov    ebx,DWORD PTR [rcx+0xc]
   14000696e:	mov    edi,edx
   140006970:	mov    rsi,rcx
   140006973:	test   ebx,ebx
   140006975:	je     0x1400069a3
   140006977:	dec    ebx
   140006979:	call   0x14000b18c
   14000697e:	lea    rcx,[rbx+rbx*4]
   140006982:	mov    rax,QWORD PTR [rax+0x128]
   140006989:	lea    rdx,[rax+rcx*4]
   14000698d:	movsxd rax,DWORD PTR [rsi+0x10]
   140006991:	add    rdx,rax
   140006994:	cmp    edi,DWORD PTR [rdx+0x4]
   140006997:	jle    0x140006973
   140006999:	cmp    edi,DWORD PTR [rdx+0x8]
   14000699c:	jg     0x140006973
   14000699e:	mov    rax,rdx
   1400069a1:	jmp    0x1400069a5
   1400069a3:	xor    eax,eax
   1400069a5:	mov    rbx,QWORD PTR [rsp+0x30]
   1400069aa:	mov    rsi,QWORD PTR [rsp+0x38]
   1400069af:	add    rsp,0x20
   1400069b3:	pop    rdi
   1400069b4:	ret    
   1400069b5:	int3   
   1400069b6:	int3   
   1400069b7:	int3   
   1400069b8:	mov    QWORD PTR [rsp+0x8],rbx
   1400069bd:	mov    QWORD PTR [rsp+0x10],rbp
   1400069c2:	mov    QWORD PTR [rsp+0x18],rsi
   1400069c7:	push   rdi
   1400069c8:	sub    rsp,0x20
   1400069cc:	mov    rsi,rdx
   1400069cf:	mov    rdx,rcx
   1400069d2:	mov    rcx,rsi
   1400069d5:	call   0x14000cf6c
   1400069da:	mov    edi,DWORD PTR [rsi+0xc]
   1400069dd:	xor    ebx,ebx
   1400069df:	mov    ebp,eax
   1400069e1:	jmp    0x140006a0a
   1400069e3:	dec    edi
   1400069e5:	call   0x14000b18c
   1400069ea:	lea    rdx,[rdi+rdi*4]
   1400069ee:	mov    rax,QWORD PTR [rax+0x128]
   1400069f5:	lea    rcx,[rax+rdx*4]
   1400069f9:	movsxd rax,DWORD PTR [rsi+0x10]
   1400069fd:	add    rcx,rax
   140006a00:	cmp    ebp,DWORD PTR [rcx+0x4]
   140006a03:	jle    0x140006a0a
   140006a05:	cmp    ebp,DWORD PTR [rcx+0x8]
   140006a08:	jle    0x140006a11
   140006a0a:	test   edi,edi
   140006a0c:	jne    0x1400069e3
   140006a0e:	mov    rcx,rbx
   140006a11:	mov    rbp,QWORD PTR [rsp+0x38]
   140006a16:	mov    rsi,QWORD PTR [rsp+0x40]
   140006a1b:	test   rcx,rcx
   140006a1e:	setne  bl
   140006a21:	mov    eax,ebx
   140006a23:	mov    rbx,QWORD PTR [rsp+0x30]
   140006a28:	add    rsp,0x20
   140006a2c:	pop    rdi
   140006a2d:	ret    
   140006a2e:	int3   
   140006a2f:	int3   
   140006a30:	mov    QWORD PTR [rsp+0x10],rbx
   140006a35:	mov    QWORD PTR [rsp+0x18],rbp
   140006a3a:	push   rsi
   140006a3b:	push   rdi
   140006a3c:	push   r12
   140006a3e:	push   r14
   140006a40:	push   r15
   140006a42:	sub    rsp,0x20
   140006a46:	mov    edi,DWORD PTR [r8+0xc]
   140006a4a:	mov    r12,rcx
   140006a4d:	mov    rcx,r8
   140006a50:	mov    rsi,r9
   140006a53:	mov    r14,r8
   140006a56:	mov    r15,rdx
   140006a59:	call   0x14000cf6c
   140006a5e:	mov    r10,QWORD PTR [r12]
   140006a62:	mov    QWORD PTR [rsi],r10
   140006a65:	mov    ebp,eax
   140006a67:	test   edi,edi
   140006a69:	je     0x140006adf
   140006a6b:	movsxd rax,DWORD PTR [r14+0x10]
   140006a6f:	dec    edi
   140006a71:	lea    rdx,[rdi+rdi*4]
   140006a75:	lea    rbx,[rax+rdx*4]
   140006a79:	add    rbx,QWORD PTR [r15+0x8]
   140006a7d:	cmp    ebp,DWORD PTR [rbx+0x4]
   140006a80:	jle    0x140006a67
   140006a82:	cmp    ebp,DWORD PTR [rbx+0x8]
   140006a85:	jg     0x140006a67
   140006a87:	mov    rcx,QWORD PTR [r15]
   140006a8a:	lea    rdx,[rsp+0x50]
   140006a8f:	xor    r8d,r8d
   140006a92:	call   QWORD PTR [rip+0x20640]        # 0x1400270d8
   140006a98:	movsxd r8,DWORD PTR [rbx+0x10]
   140006a9c:	mov    r9d,DWORD PTR [rbx+0xc]
   140006aa0:	add    r8,QWORD PTR [rsp+0x50]
   140006aa5:	mov    r10d,DWORD PTR [rax]
   140006aa8:	xor    ecx,ecx
   140006aaa:	test   r9d,r9d
   140006aad:	je     0x140006ac6
   140006aaf:	lea    rdx,[r8+0xc]
   140006ab3:	movsxd rax,DWORD PTR [rdx]
   140006ab6:	cmp    rax,r10
   140006ab9:	je     0x140006ac6
   140006abb:	inc    ecx
   140006abd:	add    rdx,0x14
   140006ac1:	cmp    ecx,r9d
   140006ac4:	jb     0x140006ab3
   140006ac6:	cmp    ecx,r9d
   140006ac9:	jae    0x140006a67
   140006acb:	mov    rax,QWORD PTR [r12]
   140006acf:	lea    rcx,[rcx+rcx*4]
   140006ad3:	movsxd rcx,DWORD PTR [r8+rcx*4+0x10]
   140006ad8:	mov    rcx,QWORD PTR [rcx+rax*1]
   140006adc:	mov    QWORD PTR [rsi],rcx
   140006adf:	mov    rbx,QWORD PTR [rsp+0x58]
   140006ae4:	mov    rbp,QWORD PTR [rsp+0x60]
   140006ae9:	mov    rax,rsi
   140006aec:	add    rsp,0x20
   140006af0:	pop    r15
   140006af2:	pop    r14
   140006af4:	pop    r12
   140006af6:	pop    rdi
   140006af7:	pop    rsi
   140006af8:	ret    
   140006af9:	int3   
   140006afa:	int3   
   140006afb:	int3   
   140006afc:	mov    rax,rsp
   140006aff:	mov    QWORD PTR [rax+0x8],rbx
   140006b03:	mov    QWORD PTR [rax+0x10],rbp
   140006b07:	mov    QWORD PTR [rax+0x18],rsi
   140006b0b:	mov    QWORD PTR [rax+0x20],rdi
   140006b0f:	push   r12
   140006b11:	push   r14
   140006b13:	push   r15
   140006b15:	sub    rsp,0x20
   140006b19:	mov    edi,DWORD PTR [rdx+0xc]
   140006b1c:	mov    rbp,QWORD PTR [rsp+0x70]
   140006b21:	mov    rbx,rdx
   140006b24:	mov    rcx,rbx
   140006b27:	mov    rdx,rbp
   140006b2a:	mov    r12d,r9d
   140006b2d:	xor    esi,esi
   140006b2f:	call   0x14000cf6c
   140006b34:	mov    r14d,eax
   140006b37:	test   edi,edi
   140006b39:	jne    0x140006b40
   140006b3b:	call   0x14000982c
   140006b40:	mov    r10,QWORD PTR [rsp+0x68]
   140006b45:	mov    r8,QWORD PTR [rsp+0x60]
   140006b4a:	mov    edx,edi
   140006b4c:	or     DWORD PTR [r10],0xffffffff
   140006b50:	or     DWORD PTR [r8],0xffffffff
   140006b54:	test   edi,edi
   140006b56:	je     0x140006b82
   140006b58:	mov    r11,QWORD PTR [rbp+0x8]
   140006b5c:	movsxd r15,DWORD PTR [rbx+0x10]
   140006b60:	lea    r9d,[rdx-0x1]
   140006b64:	lea    rcx,[r9+r9*4]
   140006b68:	lea    rax,[r11+rcx*4]
   140006b6c:	cmp    r14d,DWORD PTR [rax+r15*1+0x4]
   140006b71:	jle    0x140006b7a
   140006b73:	cmp    r14d,DWORD PTR [rax+r15*1+0x8]
   140006b78:	jle    0x140006b82
   140006b7a:	mov    edx,r9d
   140006b7d:	test   r9d,r9d
   140006b80:	jne    0x140006b60
   140006b82:	test   edx,edx
   140006b84:	je     0x140006b99
   140006b86:	lea    eax,[rdx-0x1]
   140006b89:	lea    rdx,[rax+rax*4]
   140006b8d:	movsxd rax,DWORD PTR [rbx+0x10]
   140006b91:	lea    rsi,[rax+rdx*4]
   140006b95:	add    rsi,QWORD PTR [rbp+0x8]
   140006b99:	xor    edx,edx
   140006b9b:	test   edi,edi
   140006b9d:	je     0x140006bff
   140006b9f:	xor    r9d,r9d
   140006ba2:	movsxd rcx,DWORD PTR [rbx+0x10]
   140006ba6:	add    rcx,r9
   140006ba9:	add    rcx,QWORD PTR [rbp+0x8]
   140006bad:	test   rsi,rsi
   140006bb0:	je     0x140006bc1
   140006bb2:	mov    eax,DWORD PTR [rsi+0x4]
   140006bb5:	cmp    DWORD PTR [rcx],eax
   140006bb7:	jle    0x140006bdb
   140006bb9:	mov    eax,DWORD PTR [rsi+0x8]
   140006bbc:	cmp    DWORD PTR [rcx+0x4],eax
   140006bbf:	jg     0x140006bdb
   140006bc1:	cmp    r12d,DWORD PTR [rcx]
   140006bc4:	jl     0x140006bdb
   140006bc6:	cmp    r12d,DWORD PTR [rcx+0x4]
   140006bca:	jg     0x140006bdb
   140006bcc:	cmp    DWORD PTR [r8],0xffffffff
   140006bd0:	jne    0x140006bd5
   140006bd2:	mov    DWORD PTR [r8],edx
   140006bd5:	lea    eax,[rdx+0x1]
   140006bd8:	mov    DWORD PTR [r10],eax
   140006bdb:	inc    edx
   140006bdd:	add    r9,0x14
   140006be1:	cmp    edx,edi
   140006be3:	jb     0x140006ba2
   140006be5:	mov    eax,DWORD PTR [r8]
   140006be8:	cmp    eax,0xffffffff
   140006beb:	je     0x140006bff
   140006bed:	lea    rcx,[rax+rax*4]
   140006bf1:	movsxd rax,DWORD PTR [rbx+0x10]
   140006bf5:	lea    rax,[rax+rcx*4]
   140006bf9:	add    rax,QWORD PTR [rbp+0x8]
   140006bfd:	jmp    0x140006c09
   140006bff:	and    DWORD PTR [r8],0x0
   140006c03:	and    DWORD PTR [r10],0x0
   140006c07:	xor    eax,eax
   140006c09:	mov    rbx,QWORD PTR [rsp+0x40]
   140006c0e:	mov    rbp,QWORD PTR [rsp+0x48]
   140006c13:	mov    rsi,QWORD PTR [rsp+0x50]
   140006c18:	mov    rdi,QWORD PTR [rsp+0x58]
   140006c1d:	add    rsp,0x20
   140006c21:	pop    r15
   140006c23:	pop    r14
   140006c25:	pop    r12
   140006c27:	ret    
   140006c28:	mov    QWORD PTR [rsp+0x8],rbx
   140006c2d:	mov    QWORD PTR [rsp+0x10],rbp
   140006c32:	push   rsi
   140006c33:	push   rdi
   140006c34:	push   r14
   140006c36:	sub    rsp,0x20
   140006c3a:	lea    r9,[rsp+0x50]
   140006c3f:	mov    rdi,r8
   140006c42:	mov    rbp,rdx
   140006c45:	call   0x140006a30
   140006c4a:	mov    rdx,rbp
   140006c4d:	mov    rcx,rdi
   140006c50:	mov    r14,rax
   140006c53:	call   0x14000cf6c
   140006c58:	mov    ebx,DWORD PTR [rdi+0xc]
   140006c5b:	mov    esi,eax
   140006c5d:	jmp    0x140006c86
   140006c5f:	dec    ebx
   140006c61:	call   0x14000b18c
   140006c66:	lea    rdx,[rbx+rbx*4]
   140006c6a:	mov    rax,QWORD PTR [rax+0x128]
   140006c71:	lea    rcx,[rax+rdx*4]
   140006c75:	movsxd rax,DWORD PTR [rdi+0x10]
   140006c79:	add    rcx,rax
   140006c7c:	cmp    esi,DWORD PTR [rcx+0x4]
   140006c7f:	jle    0x140006c86
   140006c81:	cmp    esi,DWORD PTR [rcx+0x8]
   140006c84:	jle    0x140006c8c
   140006c86:	test   ebx,ebx
   140006c88:	jne    0x140006c5f
   140006c8a:	xor    ecx,ecx
   140006c8c:	test   rcx,rcx
   140006c8f:	jne    0x140006c97
   140006c91:	or     r9d,0xffffffff
   140006c95:	jmp    0x140006c9b
   140006c97:	mov    r9d,DWORD PTR [rcx+0x4]
   140006c9b:	mov    r8,rdi
   140006c9e:	mov    rdx,rbp
   140006ca1:	mov    rcx,r14
   140006ca4:	call   0x14000c954
   140006ca9:	mov    rbx,QWORD PTR [rsp+0x40]
   140006cae:	mov    rbp,QWORD PTR [rsp+0x48]
   140006cb3:	add    rsp,0x20
   140006cb7:	pop    r14
   140006cb9:	pop    rdi
   140006cba:	pop    rsi
   140006cbb:	ret    
   140006cbc:	mov    QWORD PTR [rsp+0x8],rbx
   140006cc1:	mov    QWORD PTR [rsp+0x10],rbp
   140006cc6:	mov    QWORD PTR [rsp+0x18],rsi
   140006ccb:	push   rdi
   140006ccc:	sub    rsp,0x40
   140006cd0:	mov    rsi,r9
   140006cd3:	mov    rbp,r8
   140006cd6:	mov    rbx,rdx
   140006cd9:	mov    rdi,rcx
   140006cdc:	call   0x14000b18c
   140006ce1:	mov    QWORD PTR [rax+0x138],rbx
   140006ce8:	mov    rbx,QWORD PTR [rdi]
   140006ceb:	call   0x14000b18c
   140006cf0:	mov    rdx,QWORD PTR [rbx+0x38]
   140006cf4:	mov    rcx,QWORD PTR [rsp+0x78]
   140006cf9:	mov    r9,QWORD PTR [rsp+0x70]
   140006cfe:	mov    DWORD PTR [rsp+0x38],0x1
   140006d06:	mov    QWORD PTR [rax+0x130],rdx
   140006d0d:	xor    ebx,ebx
   140006d0f:	mov    QWORD PTR [rsp+0x30],rbx
   140006d14:	mov    DWORD PTR [rsp+0x28],ebx
   140006d18:	mov    QWORD PTR [rsp+0x20],rcx
   140006d1d:	mov    rcx,QWORD PTR [rdi]
   140006d20:	mov    r8,rsi
   140006d23:	mov    rdx,rbp
   140006d26:	call   0x14000cb7c
   140006d2b:	call   0x14000b18c
   140006d30:	mov    rcx,QWORD PTR [rsp+0x80]
   140006d38:	mov    rbp,QWORD PTR [rsp+0x58]
   140006d3d:	mov    rsi,QWORD PTR [rsp+0x60]
   140006d42:	mov    QWORD PTR [rax+0x138],rbx
   140006d49:	lea    eax,[rbx+0x1]
   140006d4c:	mov    rbx,QWORD PTR [rsp+0x50]
   140006d51:	mov    DWORD PTR [rcx],0x1
   140006d57:	add    rsp,0x40
   140006d5b:	pop    rdi
   140006d5c:	ret    
   140006d5d:	int3   
   140006d5e:	int3   
   140006d5f:	int3   
   140006d60:	mov    rax,rsp
   140006d63:	mov    QWORD PTR [rax+0x20],r9
   140006d67:	mov    QWORD PTR [rax+0x18],r8
   140006d6b:	mov    QWORD PTR [rax+0x10],rdx
   140006d6f:	mov    QWORD PTR [rax+0x8],rcx
   140006d73:	push   rbx
   140006d74:	sub    rsp,0x60
   140006d78:	mov    rbx,rcx
   140006d7b:	and    DWORD PTR [rax-0x28],0x0
   140006d7f:	mov    QWORD PTR [rax-0x20],rcx
   140006d83:	mov    QWORD PTR [rax-0x18],r8
   140006d87:	call   0x14000b18c
   140006d8c:	mov    r8,QWORD PTR [rax+0xe0]
   140006d93:	lea    rdx,[rsp+0x48]
   140006d98:	mov    ecx,DWORD PTR [rbx]
   140006d9a:	call   r8
   140006d9d:	mov    DWORD PTR [rsp+0x40],0x0
   140006da5:	jmp    0x140006da7
   140006da7:	mov    eax,DWORD PTR [rsp+0x40]
   140006dab:	add    rsp,0x60
   140006daf:	pop    rbx
   140006db0:	ret    
   140006db1:	int3   
   140006db2:	int3   
   140006db3:	int3   
   140006db4:	rex push rbx
   140006db6:	sub    rsp,0x20
   140006dba:	mov    rbx,rcx
   140006dbd:	mov    QWORD PTR [rcx],rdx
   140006dc0:	call   0x14000b18c
   140006dc5:	cmp    rbx,QWORD PTR [rax+0x120]
   140006dcc:	jae    0x140006ddc
   140006dce:	call   0x14000b18c
   140006dd3:	mov    rcx,QWORD PTR [rax+0x120]
   140006dda:	jmp    0x140006dde
   140006ddc:	xor    ecx,ecx
   140006dde:	mov    QWORD PTR [rbx+0x8],rcx
   140006de2:	call   0x14000b18c
   140006de7:	mov    QWORD PTR [rax+0x120],rbx
   140006dee:	mov    rax,rbx
   140006df1:	add    rsp,0x20
   140006df5:	pop    rbx
   140006df6:	ret    
   140006df7:	int3   
   140006df8:	mov    QWORD PTR [rsp+0x8],rbx
   140006dfd:	push   rdi
   140006dfe:	sub    rsp,0x20
   140006e02:	mov    rdi,rcx
   140006e05:	call   0x14000b18c
   140006e0a:	cmp    rdi,QWORD PTR [rax+0x120]
   140006e11:	je     0x140006e18
   140006e13:	call   0x14000982c
   140006e18:	call   0x14000b18c
   140006e1d:	mov    rbx,QWORD PTR [rax+0x120]
   140006e24:	jmp    0x140006e2f
   140006e26:	cmp    rdi,rbx
   140006e29:	je     0x140006e44
   140006e2b:	mov    rbx,QWORD PTR [rbx+0x8]
   140006e2f:	test   rbx,rbx
   140006e32:	jne    0x140006e26
   140006e34:	call   0x14000982c
   140006e39:	mov    rbx,QWORD PTR [rsp+0x30]
   140006e3e:	add    rsp,0x20
   140006e42:	pop    rdi
   140006e43:	ret    
   140006e44:	call   0x14000b18c
   140006e49:	mov    rcx,QWORD PTR [rbx+0x8]
   140006e4d:	mov    QWORD PTR [rax+0x120],rcx
   140006e54:	jmp    0x140006e39
   140006e56:	int3   
   140006e57:	int3   
   140006e58:	sub    rsp,0x28
   140006e5c:	call   0x14000b18c
   140006e61:	mov    rax,QWORD PTR [rax+0x128]
   140006e68:	add    rsp,0x28
   140006e6c:	ret    
   140006e6d:	int3   
   140006e6e:	int3   
   140006e6f:	int3   
   140006e70:	sub    rsp,0x28
   140006e74:	call   0x14000b18c
   140006e79:	mov    rax,QWORD PTR [rax+0x130]
   140006e80:	add    rsp,0x28
   140006e84:	ret    
   140006e85:	int3   
   140006e86:	int3   
   140006e87:	int3   
   140006e88:	rex push rbx
   140006e8a:	sub    rsp,0x20
   140006e8e:	mov    rbx,rcx
   140006e91:	call   0x14000b18c
   140006e96:	mov    rdx,QWORD PTR [rax+0x120]
   140006e9d:	jmp    0x140006ea8
   140006e9f:	cmp    QWORD PTR [rdx],rbx
   140006ea2:	je     0x140006eb6
   140006ea4:	mov    rdx,QWORD PTR [rdx+0x8]
   140006ea8:	test   rdx,rdx
   140006eab:	jne    0x140006e9f
   140006ead:	lea    eax,[rdx+0x1]
   140006eb0:	add    rsp,0x20
   140006eb4:	pop    rbx
   140006eb5:	ret    
   140006eb6:	xor    eax,eax
   140006eb8:	jmp    0x140006eb0
   140006eba:	int3   
   140006ebb:	int3   
   140006ebc:	mov    r8d,0x4d0
   140006ec2:	jmp    0x1400056d0
   140006ec7:	int3   
   140006ec8:	rex push rbx
   140006eca:	sub    rsp,0x20
   140006ece:	mov    rbx,rcx
   140006ed1:	call   0x14000b18c
   140006ed6:	mov    QWORD PTR [rax+0x128],rbx
   140006edd:	add    rsp,0x20
   140006ee1:	pop    rbx
   140006ee2:	ret    
   140006ee3:	int3   
   140006ee4:	rex push rbx
   140006ee6:	sub    rsp,0x20
   140006eea:	mov    rbx,rcx
   140006eed:	call   0x14000b18c
   140006ef2:	mov    QWORD PTR [rax+0x130],rbx
   140006ef9:	add    rsp,0x20
   140006efd:	pop    rbx
   140006efe:	ret    
   140006eff:	int3   
   140006f00:	rex push rbp
   140006f02:	lea    rbp,[rsp-0x4b0]
   140006f0a:	sub    rsp,0x5b0
   140006f11:	mov    rax,QWORD PTR [rip+0x2fb28]        # 0x140036a40
   140006f18:	xor    rax,rsp
   140006f1b:	mov    QWORD PTR [rbp+0x4a0],rax
   140006f22:	mov    r10,QWORD PTR [rbp+0x4f8]
   140006f29:	lea    rax,[rip+0x229b0]        # 0x1400298e0
   140006f30:	mov    r11,rcx
   140006f33:	lea    rcx,[rsp+0x30]
   140006f38:	movups xmm0,XMMWORD PTR [rax]
   140006f3b:	movups xmm1,XMMWORD PTR [rax+0x10]
   140006f3f:	movups XMMWORD PTR [rcx],xmm0
   140006f42:	movups xmm0,XMMWORD PTR [rax+0x20]
   140006f46:	movups XMMWORD PTR [rcx+0x10],xmm1
   140006f4a:	movups xmm1,XMMWORD PTR [rax+0x30]
   140006f4e:	movups XMMWORD PTR [rcx+0x20],xmm0
   140006f52:	movups xmm0,XMMWORD PTR [rax+0x40]
   140006f56:	movups XMMWORD PTR [rcx+0x30],xmm1
   140006f5a:	movups xmm1,XMMWORD PTR [rax+0x50]
   140006f5e:	movups XMMWORD PTR [rcx+0x40],xmm0
   140006f62:	movups xmm0,XMMWORD PTR [rax+0x60]
   140006f66:	movups XMMWORD PTR [rcx+0x50],xmm1
   140006f6a:	movups xmm1,XMMWORD PTR [rax+0x80]
   140006f71:	movups XMMWORD PTR [rcx+0x60],xmm0
   140006f75:	movups xmm0,XMMWORD PTR [rax+0x70]
   140006f79:	mov    rax,QWORD PTR [rax+0x90]
   140006f80:	movups XMMWORD PTR [rcx+0x70],xmm0
   140006f84:	movups XMMWORD PTR [rcx+0x80],xmm1
   140006f8b:	mov    QWORD PTR [rcx+0x90],rax
   140006f92:	mov    rcx,QWORD PTR [r11]
   140006f95:	lea    rax,[rip+0x52fc]        # 0x14000c298
   140006f9c:	mov    QWORD PTR [rsp+0x50],rax
   140006fa1:	mov    rax,QWORD PTR [rbp+0x4e0]
   140006fa8:	mov    QWORD PTR [rbp-0x80],rdx
   140006fac:	mov    rdx,QWORD PTR [r10]
   140006faf:	mov    QWORD PTR [rsp+0x60],rax
   140006fb4:	movsxd rax,DWORD PTR [rbp+0x4e8]
   140006fbb:	mov    QWORD PTR [rsp+0x68],rax
   140006fc0:	mov    rax,QWORD PTR [rbp+0x4f0]
   140006fc7:	mov    QWORD PTR [rsp+0x70],r8
   140006fcc:	mov    QWORD PTR [rsp+0x78],rax
   140006fd1:	movzx  eax,BYTE PTR [rbp+0x500]
   140006fd8:	mov    QWORD PTR [rsp+0x58],r9
   140006fdd:	mov    QWORD PTR [rbp-0x78],rax
   140006fe1:	mov    rax,QWORD PTR [r10+0x40]
   140006fe5:	lea    r8,[rsp+0x30]
   140006fea:	mov    QWORD PTR [rsp+0x28],rax
   140006fef:	lea    rax,[rbp-0x30]
   140006ff3:	xor    r9d,r9d
   140006ff6:	mov    QWORD PTR [rsp+0x20],rax
   140006ffb:	mov    QWORD PTR [rbp-0x70],0x19930520
   140007003:	call   QWORD PTR [rip+0x200d7]        # 0x1400270e0
   140007009:	mov    rcx,QWORD PTR [rbp+0x4a0]
   140007010:	xor    rcx,rsp
   140007013:	call   0x14000d0a0
   140007018:	add    rsp,0x5b0
   14000701f:	pop    rbp
   140007020:	ret    
   140007021:	int3   
   140007022:	int3   
   140007023:	int3   
   140007024:	mov    QWORD PTR [rsp+0x10],rbx
   140007029:	mov    QWORD PTR [rsp+0x18],rsi
   14000702e:	push   rdi
   14000702f:	sub    rsp,0x40
   140007033:	mov    rbx,r9
   140007036:	mov    rdi,r8
   140007039:	mov    rsi,rcx
   14000703c:	mov    QWORD PTR [rsp+0x50],rdx
   140007041:	call   0x14000b18c
   140007046:	mov    rdx,QWORD PTR [rbx+0x8]
   14000704a:	mov    QWORD PTR [rax+0x128],rdx
   140007051:	call   0x14000b18c
   140007056:	mov    rdx,QWORD PTR [rsi+0x38]
   14000705a:	mov    QWORD PTR [rax+0x130],rdx
   140007061:	call   0x14000b18c
   140007066:	mov    rdx,QWORD PTR [rbx+0x38]
   14000706a:	mov    r8d,DWORD PTR [rdx]
   14000706d:	lea    rdx,[rsp+0x50]
   140007072:	mov    r9,rbx
   140007075:	add    r8,QWORD PTR [rax+0x128]
   14000707c:	xor    eax,eax
   14000707e:	mov    rcx,rsi
   140007081:	mov    DWORD PTR [rsp+0x38],eax
   140007085:	mov    QWORD PTR [rsp+0x30],rax
   14000708a:	mov    DWORD PTR [rsp+0x28],eax
   14000708e:	mov    QWORD PTR [rsp+0x20],r8
   140007093:	mov    r8,rdi
   140007096:	call   0x14000cb7c
   14000709b:	mov    rbx,QWORD PTR [rsp+0x58]
   1400070a0:	mov    rsi,QWORD PTR [rsp+0x60]
   1400070a5:	add    rsp,0x40
   1400070a9:	pop    rdi
   1400070aa:	ret    
   1400070ab:	int3   
   1400070ac:	jmp    0x1400070b4
   1400070b1:	int3   
   1400070b2:	int3   
   1400070b3:	int3   
   1400070b4:	mov    QWORD PTR [rsp+0x10],rbx
   1400070b9:	mov    QWORD PTR [rsp+0x18],rsi
   1400070be:	push   rdi
   1400070bf:	sub    rsp,0x40
   1400070c3:	mov    rbx,r9
   1400070c6:	mov    rdi,r8
   1400070c9:	mov    rsi,rcx
   1400070cc:	mov    QWORD PTR [rsp+0x50],rdx
   1400070d1:	call   0x14000b18c
   1400070d6:	mov    rdx,QWORD PTR [rbx+0x8]
   1400070da:	mov    QWORD PTR [rax+0x128],rdx
   1400070e1:	call   0x14000b18c
   1400070e6:	mov    rdx,QWORD PTR [rsi+0x38]
   1400070ea:	mov    QWORD PTR [rax+0x130],rdx
   1400070f1:	call   0x14000b18c
   1400070f6:	mov    rdx,QWORD PTR [rbx+0x38]
   1400070fa:	mov    r8d,DWORD PTR [rdx]
   1400070fd:	lea    rdx,[rsp+0x50]
   140007102:	mov    r9,rbx
   140007105:	add    r8,QWORD PTR [rax+0x128]
   14000710c:	xor    eax,eax
   14000710e:	mov    rcx,rsi
   140007111:	mov    DWORD PTR [rsp+0x38],eax
   140007115:	mov    QWORD PTR [rsp+0x30],rax
   14000711a:	mov    DWORD PTR [rsp+0x28],eax
   14000711e:	mov    QWORD PTR [rsp+0x20],r8
   140007123:	mov    r8,rdi
   140007126:	call   0x14000cb7c
   14000712b:	mov    rbx,QWORD PTR [rsp+0x58]
   140007130:	mov    rsi,QWORD PTR [rsp+0x60]
   140007135:	add    rsp,0x40
   140007139:	pop    rdi
   14000713a:	ret    
   14000713b:	int3   
   14000713c:	int3   
   14000713d:	int3   
   14000713e:	int3   
   14000713f:	int3   
   140007140:	int3   
   140007141:	int3   
   140007142:	int3   
   140007143:	int3   
   140007144:	int3   
   140007145:	int3   
   140007146:	data16 nop WORD PTR [rax+rax*1+0x0]
   140007150:	mov    r11,rcx
   140007153:	movzx  edx,dl
   140007156:	cmp    r8,0x10
   14000715a:	jb     0x1400072bc
   140007160:	bt     DWORD PTR [rip+0x30c14],0x1        # 0x140037d7c
   140007168:	jae    0x140007178
   14000716a:	push   rdi
   14000716b:	mov    rdi,rcx
   14000716e:	mov    eax,edx
   140007170:	mov    rcx,r8
   140007173:	rep stos BYTE PTR es:[rdi],al
   140007175:	pop    rdi
   140007176:	jmp    0x1400071e5
   140007178:	movabs r9,0x101010101010101
   140007182:	imul   rdx,r9
   140007186:	bt     DWORD PTR [rip+0x30bee],0x2        # 0x140037d7c
   14000718e:	jb     0x140007230
   140007194:	cmp    r8,0x40
   140007198:	jb     0x1400071b8
   14000719a:	neg    rcx
   14000719d:	and    ecx,0x7
   1400071a0:	je     0x1400071a8
   1400071a2:	sub    r8,rcx
   1400071a5:	mov    QWORD PTR [r11],rdx
   1400071a8:	add    rcx,r11
   1400071ab:	mov    r9,r8
   1400071ae:	and    r8,0x3f
   1400071b2:	shr    r9,0x6
   1400071b6:	jne    0x1400071f7
   1400071b8:	mov    r9,r8
   1400071bb:	and    r8,0x7
   1400071bf:	shr    r9,0x3
   1400071c3:	je     0x1400071d6
   1400071c5:	data16 data16 xchg ax,ax
   1400071c9:	nop
   1400071ca:	mov    QWORD PTR [rcx],rdx
   1400071cd:	add    rcx,0x8
   1400071d1:	dec    r9
   1400071d4:	jne    0x1400071ca
   1400071d6:	test   r8,r8
   1400071d9:	je     0x1400071e5
   1400071db:	mov    BYTE PTR [rcx],dl
   1400071dd:	inc    rcx
   1400071e0:	dec    r8
   1400071e3:	jne    0x1400071db
   1400071e5:	mov    rax,r11
   1400071e8:	ret    
   1400071e9:	nop    DWORD PTR [rax+0x0]
   1400071f0:	data16 data16 xchg ax,ax
   1400071f4:	data16 xchg ax,ax
   1400071f7:	mov    QWORD PTR [rcx],rdx
   1400071fa:	mov    QWORD PTR [rcx+0x8],rdx
   1400071fe:	mov    QWORD PTR [rcx+0x10],rdx
   140007202:	add    rcx,0x40
   140007206:	mov    QWORD PTR [rcx-0x28],rdx
   14000720a:	mov    QWORD PTR [rcx-0x20],rdx
   14000720e:	dec    r9
   140007211:	mov    QWORD PTR [rcx-0x18],rdx
   140007215:	mov    QWORD PTR [rcx-0x10],rdx
   140007219:	mov    QWORD PTR [rcx-0x8],rdx
   14000721d:	jne    0x1400071f7
   14000721f:	jmp    0x1400071b8
   140007221:	data16 data16 data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140007230:	movq   xmm0,rdx
   140007235:	punpcklbw xmm0,xmm0
   140007239:	test   cl,0xf
   14000723c:	je     0x140007254
   14000723e:	movups XMMWORD PTR [rcx],xmm0
   140007241:	mov    rax,rcx
   140007244:	and    rax,0xf
   140007248:	add    rcx,0x10
   14000724c:	sub    rcx,rax
   14000724f:	lea    r8,[rax+r8*1-0x10]
   140007254:	mov    r9,r8
   140007257:	shr    r9,0x7
   14000725b:	je     0x14000728f
   14000725d:	jmp    0x140007260
   14000725f:	nop
   140007260:	movaps XMMWORD PTR [rcx],xmm0
   140007263:	movaps XMMWORD PTR [rcx+0x10],xmm0
   140007267:	add    rcx,0x80
   14000726e:	movaps XMMWORD PTR [rcx-0x60],xmm0
   140007272:	movaps XMMWORD PTR [rcx-0x50],xmm0
   140007276:	dec    r9
   140007279:	movaps XMMWORD PTR [rcx-0x40],xmm0
   14000727d:	movaps XMMWORD PTR [rcx-0x30],xmm0
   140007281:	movaps XMMWORD PTR [rcx-0x20],xmm0
   140007285:	movaps XMMWORD PTR [rcx-0x10],xmm0
   140007289:	jne    0x140007260
   14000728b:	and    r8,0x7f
   14000728f:	mov    r9,r8
   140007292:	shr    r9,0x4
   140007296:	je     0x1400072ac
   140007298:	nop    DWORD PTR [rax+rax*1+0x0]
   1400072a0:	movaps XMMWORD PTR [rcx],xmm0
   1400072a3:	add    rcx,0x10
   1400072a7:	dec    r9
   1400072aa:	jne    0x1400072a0
   1400072ac:	and    r8,0xf
   1400072b0:	je     0x1400072b8
   1400072b2:	movups XMMWORD PTR [r8+rcx*1-0x10],xmm0
   1400072b8:	mov    rax,r11
   1400072bb:	ret    
   1400072bc:	movabs r9,0x101010101010101
   1400072c6:	imul   rdx,r9
   1400072ca:	lea    r9,[rip+0xffffffffffff8d2f]        # 0x140000000
   1400072d1:	mov    eax,DWORD PTR [r9+r8*4+0x72e5]
   1400072d9:	add    r9,rax
   1400072dc:	add    rcx,r8
   1400072df:	mov    rax,r11
   1400072e2:	jmp    r9
   1400072e5:	ds jae 0x1400072e8
   1400072e8:	add    BYTE PTR [rbx],bh
   1400072ea:	jae    0x1400072ec
   1400072ec:	add    BYTE PTR [rbx+rsi*2+0x0],cl
   1400072f0:	add    BYTE PTR [rdi],dh
   1400072f2:	jae    0x1400072f4
   1400072f4:	add    BYTE PTR [rax+0x73],ah
   1400072f7:	add    BYTE PTR [rax],al
   1400072f9:	push   rbp
   1400072fa:	jae    0x1400072fc
   1400072fc:	add    BYTE PTR [rcx+0x73],cl
   1400072ff:	add    BYTE PTR [rax],al
   140007301:	xor    al,0x73
   140007303:	add    BYTE PTR [rax],al
   140007305:	jne    0x14000737a
   140007307:	add    BYTE PTR [rax],al
   140007309:	ins    DWORD PTR es:[rdi],dx
   14000730a:	jae    0x14000730c
   14000730c:	add    BYTE PTR [rbx+rsi*2+0x0],ah
   140007310:	add    BYTE PTR [rdi],bh
   140007312:	jae    0x140007314
   140007314:	add    BYTE PTR [rbx+rsi*2+0x0],bl
   140007318:	add    BYTE PTR [rcx+0x73],dl
   14000731b:	add    BYTE PTR [rax],al
   14000731d:	rex.RB jae 0x140007320
   140007320:	add    BYTE PTR [rax],dh
   140007322:	jae    0x140007324
   140007324:	add    BYTE PTR [rsi+0x66],ah
   140007327:	nop    WORD PTR [rax+rax*1+0x0]
   140007330:	mov    QWORD PTR [rcx-0xf],rdx
   140007334:	mov    DWORD PTR [rcx-0x7],edx
   140007337:	mov    WORD PTR [rcx-0x3],dx
   14000733b:	mov    BYTE PTR [rcx-0x1],dl
   14000733e:	ret    
   14000733f:	mov    QWORD PTR [rcx-0xb],rdx
   140007343:	jmp    0x140007337
   140007345:	mov    QWORD PTR [rcx-0xe],rdx
   140007349:	mov    DWORD PTR [rcx-0x6],edx
   14000734c:	mov    WORD PTR [rcx-0x2],dx
   140007350:	ret    
   140007351:	mov    QWORD PTR [rcx-0xd],rdx
   140007355:	mov    DWORD PTR [rcx-0x5],edx
   140007358:	mov    BYTE PTR [rcx-0x1],dl
   14000735b:	ret    
   14000735c:	mov    QWORD PTR [rcx-0xc],rdx
   140007360:	mov    DWORD PTR [rcx-0x4],edx
   140007363:	ret    
   140007364:	mov    QWORD PTR [rcx-0xa],rdx
   140007368:	mov    WORD PTR [rcx-0x2],dx
   14000736c:	ret    
   14000736d:	mov    QWORD PTR [rcx-0x9],rdx
   140007371:	mov    BYTE PTR [rcx-0x1],dl
   140007374:	ret    
   140007375:	mov    QWORD PTR [rcx-0x8],rdx
   140007379:	ret    
   14000737a:	int3   
   14000737b:	int3   
   14000737c:	lea    rax,[rip+0x225fd]        # 0x140029980
   140007383:	mov    QWORD PTR [rcx],rax
   140007386:	mov    rax,rcx
   140007389:	ret    
   14000738a:	int3   
   14000738b:	int3   
   14000738c:	lea    rax,[rip+0x225ed]        # 0x140029980
   140007393:	mov    QWORD PTR [rcx],rax
   140007396:	jmp    0x14000d3c8
   14000739b:	int3   
   14000739c:	mov    rax,rcx
   14000739f:	ret    
   1400073a0:	sub    rsp,0x28
   1400073a4:	mov    rax,rdx
   1400073a7:	lea    rdx,[rcx+0x11]
   1400073ab:	lea    rcx,[rax+0x11]
   1400073af:	call   0x14000d0d0
   1400073b4:	test   eax,eax
   1400073b6:	sete   al
   1400073b9:	add    rsp,0x28
   1400073bd:	ret    
   1400073be:	int3   
   1400073bf:	int3   
   1400073c0:	sub    rsp,0x28
   1400073c4:	mov    rax,rdx
   1400073c7:	lea    rdx,[rcx+0x11]
   1400073cb:	lea    rcx,[rax+0x11]
   1400073cf:	call   0x14000d0d0
   1400073d4:	test   eax,eax
   1400073d6:	setne  al
   1400073d9:	add    rsp,0x28
   1400073dd:	ret    
   1400073de:	int3   
   1400073df:	int3   
   1400073e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400073e5:	push   rdi
   1400073e6:	sub    rsp,0x20
   1400073ea:	lea    rax,[rip+0x2258f]        # 0x140029980
   1400073f1:	mov    ebx,edx
   1400073f3:	mov    rdi,rcx
   1400073f6:	mov    QWORD PTR [rcx],rax
   1400073f9:	call   0x14000d3c8
   1400073fe:	test   bl,0x1
   140007401:	je     0x14000740b
   140007403:	mov    rcx,rdi
   140007406:	call   0x140005454
   14000740b:	mov    rax,rdi
   14000740e:	mov    rbx,QWORD PTR [rsp+0x30]
   140007413:	add    rsp,0x20
   140007417:	pop    rdi
   140007418:	ret    
   140007419:	int3   
   14000741a:	int3   
   14000741b:	int3   
   14000741c:	jmp    0x14000d26c
   140007421:	int3   
   140007422:	int3   
   140007423:	int3   
   140007424:	jmp    0x14000d434
   140007429:	int3   
   14000742a:	int3   
   14000742b:	int3   
   14000742c:	sub    rsp,0x28
   140007430:	mov    rax,rdx
   140007433:	lea    rdx,[rcx+0x11]
   140007437:	lea    rcx,[rax+0x11]
   14000743b:	call   0x14000d0d0
   140007440:	test   eax,eax
   140007442:	setg   al
   140007445:	add    rsp,0x28
   140007449:	ret    
   14000744a:	int3   
   14000744b:	int3   
   14000744c:	jmp    0x14000d138
   140007451:	int3   
   140007452:	int3   
   140007453:	int3   
   140007454:	lea    rax,[rcx+0x10]
   140007458:	ret    
   140007459:	int3   
   14000745a:	int3   
   14000745b:	int3   
   14000745c:	jmp    0x140007474
   140007461:	int3   
   140007462:	int3   
   140007463:	int3   
   140007464:	mov    eax,DWORD PTR [rip+0x308e6]        # 0x140037d50
   14000746a:	mov    DWORD PTR [rip+0x308e0],ecx        # 0x140037d50
   140007470:	ret    
   140007471:	int3   
   140007472:	int3   
   140007473:	int3   
   140007474:	lea    rax,[rip+0x6bd1]        # 0x14000e04c
   14000747b:	lea    rcx,[rip+0x60ae]        # 0x14000d530
   140007482:	mov    QWORD PTR [rip+0x2f02f],rax        # 0x1400364b8
   140007489:	lea    rax,[rip+0x6c5c]        # 0x14000e0ec
   140007490:	mov    QWORD PTR [rip+0x2f019],rcx        # 0x1400364b0
   140007497:	mov    QWORD PTR [rip+0x2f022],rax        # 0x1400364c0
   14000749e:	lea    rax,[rip+0x6c8f]        # 0x14000e134
   1400074a5:	mov    QWORD PTR [rip+0x2f02c],rcx        # 0x1400364d8
   1400074ac:	mov    QWORD PTR [rip+0x2f015],rax        # 0x1400364c8
   1400074b3:	lea    rax,[rip+0x6d02]        # 0x14000e1bc
   1400074ba:	mov    QWORD PTR [rip+0x2f00f],rax        # 0x1400364d0
   1400074c1:	lea    rax,[rip+0x608c]        # 0x14000d554
   1400074c8:	mov    QWORD PTR [rip+0x2f011],rax        # 0x1400364e0
   1400074cf:	lea    rax,[rip+0x6c1e]        # 0x14000e0f4
   1400074d6:	mov    QWORD PTR [rip+0x2f00b],rax        # 0x1400364e8
   1400074dd:	lea    rax,[rip+0x6b70]        # 0x14000e054
   1400074e4:	mov    QWORD PTR [rip+0x2f005],rax        # 0x1400364f0
   1400074eb:	lea    rax,[rip+0x6c4a]        # 0x14000e13c
   1400074f2:	mov    QWORD PTR [rip+0x2efff],rax        # 0x1400364f8
   1400074f9:	ret    
   1400074fa:	int3   
   1400074fb:	int3   
   1400074fc:	sub    rsp,0x28
   140007500:	call   0x14000ec48
   140007505:	add    rsp,0x28
   140007509:	jmp    0x140007510
   14000750e:	int3   
   14000750f:	int3   
   140007510:	mov    QWORD PTR [rsp+0x10],rbx
   140007515:	mov    QWORD PTR [rsp+0x18],rsi
   14000751a:	push   rdi
   14000751b:	sub    rsp,0x30
   14000751f:	call   0x140008cb0
   140007524:	movzx  esi,ax
   140007527:	mov    ecx,0x2
   14000752c:	call   0x14000ec00
   140007531:	mov    eax,0x5a4d
   140007536:	lea    rdi,[rip+0xffffffffffff8ac3]        # 0x140000000
   14000753d:	cmp    WORD PTR [rip+0xffffffffffff8abc],ax        # 0x140000000
   140007544:	je     0x14000754a
   140007546:	xor    ebx,ebx
   140007548:	jmp    0x14000757b
   14000754a:	movsxd rax,DWORD PTR [rip+0xffffffffffff8aeb]        # 0x14000003c
   140007551:	add    rax,rdi
   140007554:	cmp    DWORD PTR [rax],0x4550
   14000755a:	jne    0x140007546
   14000755c:	mov    ecx,0x20b
   140007561:	cmp    WORD PTR [rax+0x18],cx
   140007565:	jne    0x140007546
   140007567:	xor    ebx,ebx
   140007569:	cmp    DWORD PTR [rax+0x84],0xe
   140007570:	jbe    0x14000757b
   140007572:	cmp    DWORD PTR [rax+0xf8],ebx
   140007578:	setne  bl
   14000757b:	mov    DWORD PTR [rsp+0x40],ebx
   14000757f:	call   0x14000ab88
   140007584:	test   eax,eax
   140007586:	jne    0x1400075aa
   140007588:	cmp    DWORD PTR [rip+0x31409],0x1        # 0x140038998
   14000758f:	jne    0x140007596
   140007591:	call   0x140009264
   140007596:	mov    ecx,0x1c
   14000759b:	call   0x1400092d8
   1400075a0:	mov    ecx,0xff
   1400075a5:	call   0x140005e94
   1400075aa:	call   0x14000b2f8
   1400075af:	test   eax,eax
   1400075b1:	jne    0x1400075d5
   1400075b3:	cmp    DWORD PTR [rip+0x313de],0x1        # 0x140038998
   1400075ba:	jne    0x1400075c1
   1400075bc:	call   0x140009264
   1400075c1:	mov    ecx,0x10
   1400075c6:	call   0x1400092d8
   1400075cb:	mov    ecx,0xff
   1400075d0:	call   0x140005e94
   1400075d5:	call   0x1400086f0
   1400075da:	nop
   1400075db:	call   0x14000e464
   1400075e0:	test   eax,eax
   1400075e2:	jns    0x1400075ee
   1400075e4:	mov    ecx,0x1b
   1400075e9:	call   0x1400076e8
   1400075ee:	call   QWORD PTR [rip+0x1faf4]        # 0x1400270e8
   1400075f4:	mov    QWORD PTR [rip+0x32b6d],rax        # 0x14003a168
   1400075fb:	call   0x14000ecf4
   140007600:	mov    QWORD PTR [rip+0x30751],rax        # 0x140037d58
   140007607:	call   0x14000e810
   14000760c:	test   eax,eax
   14000760e:	jns    0x14000761a
   140007610:	mov    ecx,0x8
   140007615:	call   0x140005ff4
   14000761a:	call   0x14000eacc
   14000761f:	test   eax,eax
   140007621:	jns    0x14000762d
   140007623:	mov    ecx,0x9
   140007628:	call   0x140005ff4
   14000762d:	mov    ecx,0x1
   140007632:	call   0x14000603c
   140007637:	test   eax,eax
   140007639:	je     0x140007642
   14000763b:	mov    ecx,eax
   14000763d:	call   0x140005ff4
   140007642:	call   0x14000ede8
   140007647:	movzx  r9d,si
   14000764b:	mov    r8,rax
   14000764e:	xor    edx,edx
   140007650:	mov    rcx,rdi
   140007653:	call   0x140004aa0
   140007658:	mov    edi,eax
   14000765a:	mov    DWORD PTR [rsp+0x20],eax
   14000765e:	test   ebx,ebx
   140007660:	jne    0x140007669
   140007662:	mov    ecx,eax
   140007664:	call   0x1400063f4
   140007669:	call   0x14000602c
   14000766e:	jmp    0x140007687
   140007670:	mov    edi,eax
   140007672:	cmp    DWORD PTR [rsp+0x40],0x0
   140007677:	jne    0x140007681
   140007679:	mov    ecx,eax
   14000767b:	call   0x1400060d4
   140007680:	int3   
   140007681:	call   0x14000601c
   140007686:	nop
   140007687:	mov    eax,edi
   140007689:	mov    rbx,QWORD PTR [rsp+0x48]
   14000768e:	mov    rsi,QWORD PTR [rsp+0x50]
   140007693:	add    rsp,0x30
   140007697:	pop    rdi
   140007698:	ret    
   140007699:	int3   
   14000769a:	int3   
   14000769b:	int3   
   14000769c:	mov    eax,0x5a4d
   1400076a1:	cmp    WORD PTR [rip+0xffffffffffff8958],ax        # 0x140000000
   1400076a8:	je     0x1400076ad
   1400076aa:	xor    eax,eax
   1400076ac:	ret    
   1400076ad:	movsxd rcx,DWORD PTR [rip+0xffffffffffff8988]        # 0x14000003c
   1400076b4:	lea    rax,[rip+0xffffffffffff8945]        # 0x140000000
   1400076bb:	add    rcx,rax
   1400076be:	cmp    DWORD PTR [rcx],0x4550
   1400076c4:	jne    0x1400076aa
   1400076c6:	mov    eax,0x20b
   1400076cb:	cmp    WORD PTR [rcx+0x18],ax
   1400076cf:	jne    0x1400076aa
   1400076d1:	xor    eax,eax
   1400076d3:	cmp    DWORD PTR [rcx+0x84],0xe
   1400076da:	jbe    0x1400076e5
   1400076dc:	cmp    DWORD PTR [rcx+0xf8],eax
   1400076e2:	setne  al
   1400076e5:	ret    
   1400076e6:	int3   
   1400076e7:	int3   
   1400076e8:	rex push rbx
   1400076ea:	sub    rsp,0x20
   1400076ee:	cmp    DWORD PTR [rip+0x312a3],0x1        # 0x140038998
   1400076f5:	mov    ebx,ecx
   1400076f7:	jne    0x1400076fe
   1400076f9:	call   0x140009264
   1400076fe:	mov    ecx,ebx
   140007700:	call   0x1400092d8
   140007705:	mov    ecx,0xff
   14000770a:	add    rsp,0x20
   14000770e:	pop    rbx
   14000770f:	jmp    0x140005e94
   140007714:	int3   
   140007715:	int3   
   140007716:	int3   
   140007717:	int3   
   140007718:	int3   
   140007719:	int3   
   14000771a:	int3   
   14000771b:	int3   
   14000771c:	int3   
   14000771d:	int3   
   14000771e:	int3   
   14000771f:	int3   
   140007720:	int3   
   140007721:	int3   
   140007722:	int3   
   140007723:	int3   
   140007724:	int3   
   140007725:	int3   
   140007726:	data16 nop WORD PTR [rax+rax*1+0x0]
   140007730:	mov    rax,rcx
   140007733:	neg    rcx
   140007736:	test   rax,0x7
   14000773c:	je     0x14000774d
   14000773e:	xchg   ax,ax
   140007740:	mov    dl,BYTE PTR [rax]
   140007742:	inc    rax
   140007745:	test   dl,dl
   140007747:	je     0x1400077a8
   140007749:	test   al,0x7
   14000774b:	jne    0x140007740
   14000774d:	movabs r8,0x7efefefefefefeff
   140007757:	movabs r11,0x8101010101010100
   140007761:	mov    rdx,QWORD PTR [rax]
   140007764:	mov    r9,r8
   140007767:	add    rax,0x8
   14000776b:	add    r9,rdx
   14000776e:	not    rdx
   140007771:	xor    rdx,r9
   140007774:	and    rdx,r11
   140007777:	je     0x140007761
   140007779:	mov    rdx,QWORD PTR [rax-0x8]
   14000777d:	test   dl,dl
   14000777f:	je     0x1400077d2
   140007781:	test   dh,dh
   140007783:	je     0x1400077cc
   140007785:	shr    rdx,0x10
   140007789:	test   dl,dl
   14000778b:	je     0x1400077c6
   14000778d:	test   dh,dh
   14000778f:	je     0x1400077c0
   140007791:	shr    rdx,0x10
   140007795:	test   dl,dl
   140007797:	je     0x1400077ba
   140007799:	test   dh,dh
   14000779b:	je     0x1400077b4
   14000779d:	shr    edx,0x10
   1400077a0:	test   dl,dl
   1400077a2:	je     0x1400077ae
   1400077a4:	test   dh,dh
   1400077a6:	jne    0x140007761
   1400077a8:	lea    rax,[rcx+rax*1-0x1]
   1400077ad:	ret    
   1400077ae:	lea    rax,[rcx+rax*1-0x2]
   1400077b3:	ret    
   1400077b4:	lea    rax,[rcx+rax*1-0x3]
   1400077b9:	ret    
   1400077ba:	lea    rax,[rcx+rax*1-0x4]
   1400077bf:	ret    
   1400077c0:	lea    rax,[rcx+rax*1-0x5]
   1400077c5:	ret    
   1400077c6:	lea    rax,[rcx+rax*1-0x6]
   1400077cb:	ret    
   1400077cc:	lea    rax,[rcx+rax*1-0x7]
   1400077d1:	ret    
   1400077d2:	lea    rax,[rcx+rax*1-0x8]
   1400077d7:	ret    
   1400077d8:	rex push rbx
   1400077da:	sub    rsp,0x20
   1400077de:	mov    rbx,rcx
   1400077e1:	call   0x14000790c
   1400077e6:	lea    rax,[rip+0x2220b]        # 0x1400299f8
   1400077ed:	mov    QWORD PTR [rbx],rax
   1400077f0:	mov    rax,rbx
   1400077f3:	add    rsp,0x20
   1400077f7:	pop    rbx
   1400077f8:	ret    
   1400077f9:	int3   
   1400077fa:	int3   
   1400077fb:	int3   
   1400077fc:	rex push rbx
   1400077fe:	sub    rsp,0x20
   140007802:	mov    rbx,rcx
   140007805:	call   0x140007894
   14000780a:	lea    rax,[rip+0x221e7]        # 0x1400299f8
   140007811:	mov    QWORD PTR [rbx],rax
   140007814:	mov    rax,rbx
   140007817:	add    rsp,0x20
   14000781b:	pop    rbx
   14000781c:	ret    
   14000781d:	int3   
   14000781e:	int3   
   14000781f:	int3   
   140007820:	rex push rbx
   140007822:	sub    rsp,0x20
   140007826:	mov    rbx,rcx
   140007829:	call   0x14000790c
   14000782e:	lea    rax,[rip+0x22193]        # 0x1400299c8
   140007835:	mov    QWORD PTR [rbx],rax
   140007838:	mov    rax,rbx
   14000783b:	add    rsp,0x20
   14000783f:	pop    rbx
   140007840:	ret    
   140007841:	int3   
   140007842:	int3   
   140007843:	int3   
   140007844:	mov    QWORD PTR [rsp+0x10],rdx
   140007849:	push   rbx
   14000784a:	sub    rsp,0x20
   14000784e:	lea    rdx,[rsp+0x38]
   140007853:	mov    rbx,rcx
   140007856:	call   0x1400078c0
   14000785b:	lea    rax,[rip+0x22166]        # 0x1400299c8
   140007862:	mov    QWORD PTR [rbx],rax
   140007865:	mov    rax,rbx
   140007868:	add    rsp,0x20
   14000786c:	pop    rbx
   14000786d:	ret    
   14000786e:	int3   
   14000786f:	int3   
   140007870:	rex push rbx
   140007872:	sub    rsp,0x20
   140007876:	mov    rbx,rcx
   140007879:	call   0x14000790c
   14000787e:	lea    rax,[rip+0x2215b]        # 0x1400299e0
   140007885:	mov    QWORD PTR [rbx],rax
   140007888:	mov    rax,rbx
   14000788b:	add    rsp,0x20
   14000788f:	pop    rbx
   140007890:	ret    
   140007891:	int3   
   140007892:	int3   
   140007893:	int3   
   140007894:	mov    QWORD PTR [rsp+0x10],rdx
   140007899:	push   rbx
   14000789a:	sub    rsp,0x20
   14000789e:	lea    rdx,[rsp+0x38]
   1400078a3:	mov    rbx,rcx
   1400078a6:	call   0x1400078c0
   1400078ab:	lea    rax,[rip+0x2212e]        # 0x1400299e0
   1400078b2:	mov    QWORD PTR [rbx],rax
   1400078b5:	mov    rax,rbx
   1400078b8:	add    rsp,0x20
   1400078bc:	pop    rbx
   1400078bd:	ret    
   1400078be:	int3   
   1400078bf:	int3   
   1400078c0:	rex push rbx
   1400078c2:	sub    rsp,0x20
   1400078c6:	and    QWORD PTR [rcx+0x8],0x0
   1400078cb:	lea    rax,[rip+0x220c6]        # 0x140029998
   1400078d2:	mov    BYTE PTR [rcx+0x10],0x0
   1400078d6:	mov    QWORD PTR [rcx],rax
   1400078d9:	mov    rdx,QWORD PTR [rdx]
   1400078dc:	mov    rbx,rcx
   1400078df:	call   0x140007ac4
   1400078e4:	mov    rax,rbx
   1400078e7:	add    rsp,0x20
   1400078eb:	pop    rbx
   1400078ec:	ret    
   1400078ed:	int3   
   1400078ee:	int3   
   1400078ef:	int3   
   1400078f0:	lea    rax,[rip+0x220a1]        # 0x140029998
   1400078f7:	mov    QWORD PTR [rcx],rax
   1400078fa:	mov    rax,QWORD PTR [rdx]
   1400078fd:	mov    BYTE PTR [rcx+0x10],0x0
   140007901:	mov    QWORD PTR [rcx+0x8],rax
   140007905:	mov    rax,rcx
   140007908:	ret    
   140007909:	int3   
   14000790a:	int3   
   14000790b:	int3   
   14000790c:	rex push rbx
   14000790e:	sub    rsp,0x20
   140007912:	and    QWORD PTR [rcx+0x8],0x0
   140007917:	lea    rax,[rip+0x2207a]        # 0x140029998
   14000791e:	mov    rbx,rcx
   140007921:	mov    QWORD PTR [rcx],rax
   140007924:	mov    BYTE PTR [rcx+0x10],0x0
   140007928:	call   0x140007990
   14000792d:	mov    rax,rbx
   140007930:	add    rsp,0x20
   140007934:	pop    rbx
   140007935:	ret    
   140007936:	int3   
   140007937:	int3   
   140007938:	and    QWORD PTR [rcx+0x8],0x0
   14000793d:	lea    rax,[rip+0x22054]        # 0x140029998
   140007944:	mov    BYTE PTR [rcx+0x10],0x0
   140007948:	mov    QWORD PTR [rcx],rax
   14000794b:	mov    rax,rcx
   14000794e:	ret    
   14000794f:	int3   
   140007950:	lea    rax,[rip+0x22041]        # 0x140029998
   140007957:	mov    QWORD PTR [rcx],rax
   14000795a:	jmp    0x140007b20
   14000795f:	int3   
   140007960:	lea    rax,[rip+0x22031]        # 0x140029998
   140007967:	mov    QWORD PTR [rcx],rax
   14000796a:	jmp    0x140007b20
   14000796f:	int3   
   140007970:	lea    rax,[rip+0x22021]        # 0x140029998
   140007977:	mov    QWORD PTR [rcx],rax
   14000797a:	jmp    0x140007b20
   14000797f:	int3   
   140007980:	lea    rax,[rip+0x22011]        # 0x140029998
   140007987:	mov    QWORD PTR [rcx],rax
   14000798a:	jmp    0x140007b20
   14000798f:	int3   
   140007990:	mov    QWORD PTR [rsp+0x8],rbx
   140007995:	push   rdi
   140007996:	sub    rsp,0x20
   14000799a:	mov    rdi,rdx
   14000799d:	mov    rbx,rcx
   1400079a0:	cmp    rcx,rdx
   1400079a3:	je     0x1400079c6
   1400079a5:	call   0x140007b20
   1400079aa:	cmp    BYTE PTR [rdi+0x10],0x0
   1400079ae:	je     0x1400079be
   1400079b0:	mov    rdx,QWORD PTR [rdi+0x8]
   1400079b4:	mov    rcx,rbx
   1400079b7:	call   0x140007ac4
   1400079bc:	jmp    0x1400079c6
   1400079be:	mov    rax,QWORD PTR [rdi+0x8]
   1400079c2:	mov    QWORD PTR [rbx+0x8],rax
   1400079c6:	mov    rax,rbx
   1400079c9:	mov    rbx,QWORD PTR [rsp+0x30]
   1400079ce:	add    rsp,0x20
   1400079d2:	pop    rdi
   1400079d3:	ret    
   1400079d4:	mov    QWORD PTR [rsp+0x8],rbx
   1400079d9:	push   rdi
   1400079da:	sub    rsp,0x20
   1400079de:	lea    rax,[rip+0x21fb3]        # 0x140029998
   1400079e5:	mov    ebx,edx
   1400079e7:	mov    rdi,rcx
   1400079ea:	mov    QWORD PTR [rcx],rax
   1400079ed:	call   0x140007b20
   1400079f2:	test   bl,0x1
   1400079f5:	je     0x1400079ff
   1400079f7:	mov    rcx,rdi
   1400079fa:	call   0x140005454
   1400079ff:	mov    rax,rdi
   140007a02:	mov    rbx,QWORD PTR [rsp+0x30]
   140007a07:	add    rsp,0x20
   140007a0b:	pop    rdi
   140007a0c:	ret    
   140007a0d:	int3   
   140007a0e:	int3   
   140007a0f:	int3   
   140007a10:	mov    QWORD PTR [rsp+0x8],rbx
   140007a15:	push   rdi
   140007a16:	sub    rsp,0x20
   140007a1a:	lea    rax,[rip+0x21f77]        # 0x140029998
   140007a21:	mov    ebx,edx
   140007a23:	mov    rdi,rcx
   140007a26:	mov    QWORD PTR [rcx],rax
   140007a29:	call   0x140007b20
   140007a2e:	test   bl,0x1
   140007a31:	je     0x140007a3b
   140007a33:	mov    rcx,rdi
   140007a36:	call   0x140005454
   140007a3b:	mov    rax,rdi
   140007a3e:	mov    rbx,QWORD PTR [rsp+0x30]
   140007a43:	add    rsp,0x20
   140007a47:	pop    rdi
   140007a48:	ret    
   140007a49:	int3   
   140007a4a:	int3   
   140007a4b:	int3   
   140007a4c:	mov    QWORD PTR [rsp+0x8],rbx
   140007a51:	push   rdi
   140007a52:	sub    rsp,0x20
   140007a56:	lea    rax,[rip+0x21f3b]        # 0x140029998
   140007a5d:	mov    ebx,edx
   140007a5f:	mov    rdi,rcx
   140007a62:	mov    QWORD PTR [rcx],rax
   140007a65:	call   0x140007b20
   140007a6a:	test   bl,0x1
   140007a6d:	je     0x140007a77
   140007a6f:	mov    rcx,rdi
   140007a72:	call   0x140005454
   140007a77:	mov    rax,rdi
   140007a7a:	mov    rbx,QWORD PTR [rsp+0x30]
   140007a7f:	add    rsp,0x20
   140007a83:	pop    rdi
   140007a84:	ret    
   140007a85:	int3   
   140007a86:	int3   
   140007a87:	int3   
   140007a88:	mov    QWORD PTR [rsp+0x8],rbx
   140007a8d:	push   rdi
   140007a8e:	sub    rsp,0x20
   140007a92:	lea    rax,[rip+0x21eff]        # 0x140029998
   140007a99:	mov    ebx,edx
   140007a9b:	mov    rdi,rcx
   140007a9e:	mov    QWORD PTR [rcx],rax
   140007aa1:	call   0x140007b20
   140007aa6:	test   bl,0x1
   140007aa9:	je     0x140007ab3
   140007aab:	mov    rcx,rdi
   140007aae:	call   0x140005454
   140007ab3:	mov    rax,rdi
   140007ab6:	mov    rbx,QWORD PTR [rsp+0x30]
   140007abb:	add    rsp,0x20
   140007abf:	pop    rdi
   140007ac0:	ret    
   140007ac1:	int3   
   140007ac2:	int3   
   140007ac3:	int3   
   140007ac4:	test   rdx,rdx
   140007ac7:	je     0x140007b1d
   140007ac9:	mov    QWORD PTR [rsp+0x8],rbx
   140007ace:	mov    QWORD PTR [rsp+0x10],rsi
   140007ad3:	push   rdi
   140007ad4:	sub    rsp,0x20
   140007ad8:	mov    rsi,rcx
   140007adb:	mov    rcx,rdx
   140007ade:	mov    rbx,rdx
   140007ae1:	call   0x140007730
   140007ae6:	mov    rdi,rax
   140007ae9:	lea    rcx,[rax+0x1]
   140007aed:	call   0x1400064d4
   140007af2:	mov    QWORD PTR [rsi+0x8],rax
   140007af6:	test   rax,rax
   140007af9:	je     0x140007b0e
   140007afb:	lea    rdx,[rdi+0x1]
   140007aff:	mov    r8,rbx
   140007b02:	mov    rcx,rax
   140007b05:	call   0x14000ee64
   140007b0a:	mov    BYTE PTR [rsi+0x10],0x1
   140007b0e:	mov    rbx,QWORD PTR [rsp+0x30]
   140007b13:	mov    rsi,QWORD PTR [rsp+0x38]
   140007b18:	add    rsp,0x20
   140007b1c:	pop    rdi
   140007b1d:	ret    
   140007b1e:	int3   
   140007b1f:	int3   
   140007b20:	rex push rbx
   140007b22:	sub    rsp,0x20
   140007b26:	cmp    BYTE PTR [rcx+0x10],0x0
   140007b2a:	mov    rbx,rcx
   140007b2d:	je     0x140007b38
   140007b2f:	mov    rcx,QWORD PTR [rcx+0x8]
   140007b33:	call   0x140006444
   140007b38:	and    QWORD PTR [rbx+0x8],0x0
   140007b3d:	mov    BYTE PTR [rbx+0x10],0x0
   140007b41:	add    rsp,0x20
   140007b45:	pop    rbx
   140007b46:	ret    
   140007b47:	int3   
   140007b48:	cmp    QWORD PTR [rcx+0x8],0x0
   140007b4d:	lea    rax,[rip+0x21e54]        # 0x1400299a8
   140007b54:	cmovne rax,QWORD PTR [rcx+0x8]
   140007b59:	ret    
   140007b5a:	int3   
   140007b5b:	int3   
   140007b5c:	mov    eax,DWORD PTR [rip+0x2e57e]        # 0x1400360e0
   140007b62:	mov    r8d,edx
   140007b65:	and    ecx,edx
   140007b67:	not    r8d
   140007b6a:	and    r8d,eax
   140007b6d:	or     r8d,ecx
   140007b70:	mov    DWORD PTR [rip+0x2e569],r8d        # 0x1400360e0
   140007b77:	ret    
   140007b78:	sub    rsp,0x28
   140007b7c:	call   0x1400098c0
   140007b81:	test   rax,rax
   140007b84:	je     0x140007b90
   140007b86:	mov    ecx,0x16
   140007b8b:	call   0x140009998
   140007b90:	test   BYTE PTR [rip+0x2e549],0x2        # 0x1400360e0
   140007b97:	je     0x140007bc2
   140007b99:	mov    ecx,0x17
   140007b9e:	call   0x140025f82
   140007ba3:	test   eax,eax
   140007ba5:	je     0x140007bae
   140007ba7:	mov    ecx,0x7
   140007bac:	int    0x29
   140007bae:	mov    r8d,0x1
   140007bb4:	mov    edx,0x40000015
   140007bb9:	lea    ecx,[r8+0x2]
   140007bbd:	call   0x1400084b4
   140007bc2:	mov    ecx,0x3
   140007bc7:	call   0x1400060d4
   140007bcc:	int3   
   140007bcd:	int3   
   140007bce:	int3   
   140007bcf:	int3   
   140007bd0:	rex push rbx
   140007bd2:	push   rbp
   140007bd3:	push   rsi
   140007bd4:	push   rdi
   140007bd5:	push   r12
   140007bd7:	push   r14
   140007bd9:	push   r15
   140007bdb:	sub    rsp,0xd0
   140007be2:	mov    rax,QWORD PTR [rip+0x2ee57]        # 0x140036a40
   140007be9:	xor    rax,rsp
   140007bec:	mov    QWORD PTR [rsp+0xc0],rax
   140007bf4:	mov    rbx,QWORD PTR [rsp+0x130]
   140007bfc:	mov    esi,r9d
   140007bff:	mov    rbp,r8
   140007c02:	mov    r12,rcx
   140007c05:	cmp    edx,0x1
   140007c08:	jne    0x140007d0c
   140007c0e:	lea    r9,[rsp+0x40]
   140007c13:	mov    r8d,esi
   140007c16:	mov    rdx,rbp
   140007c19:	lea    rdi,[rsp+0x40]
   140007c1e:	xor    r14d,r14d
   140007c21:	mov    DWORD PTR [rsp+0x20],0x80
   140007c29:	call   0x14000f110
   140007c2e:	mov    r15d,eax
   140007c31:	test   eax,eax
   140007c33:	jne    0x140007c94
   140007c35:	call   QWORD PTR [rip+0x1f445]        # 0x140027080
   140007c3b:	cmp    eax,0x7a
   140007c3e:	jne    0x140007cbc
   140007c40:	and    DWORD PTR [rsp+0x20],r14d
   140007c45:	xor    r9d,r9d
   140007c48:	mov    r8d,esi
   140007c4b:	mov    rdx,rbp
   140007c4e:	mov    rcx,r12
   140007c51:	call   0x14000f110
   140007c56:	movsxd r15,eax
   140007c59:	test   eax,eax
   140007c5b:	je     0x140007cbc
   140007c5d:	lea    edx,[r14+0x1]
   140007c61:	mov    rcx,r15
   140007c64:	call   0x140007ed4
   140007c69:	mov    rdi,rax
   140007c6c:	test   rax,rax
   140007c6f:	je     0x140007cbc
   140007c71:	mov    r9,rax
   140007c74:	mov    r8d,esi
   140007c77:	mov    rdx,rbp
   140007c7a:	mov    rcx,r12
   140007c7d:	mov    r14d,0x1
   140007c83:	mov    DWORD PTR [rsp+0x20],r15d
   140007c88:	call   0x14000f110
   140007c8d:	mov    r15d,eax
   140007c90:	test   eax,eax
   140007c92:	je     0x140007cb4
   140007c94:	movsxd rsi,r15d
   140007c97:	mov    edx,0x1
   140007c9c:	mov    rcx,rsi
   140007c9f:	call   0x140007ed4
   140007ca4:	mov    rcx,rax
   140007ca7:	mov    QWORD PTR [rbx],rax
   140007caa:	test   rax,rax
   140007cad:	jne    0x140007ce1
   140007caf:	test   r14d,r14d
   140007cb2:	je     0x140007cbc
   140007cb4:	mov    rcx,rdi
   140007cb7:	call   0x140006444
   140007cbc:	or     eax,0xffffffff
   140007cbf:	mov    rcx,QWORD PTR [rsp+0xc0]
   140007cc7:	xor    rcx,rsp
   140007cca:	call   0x14000d0a0
   140007ccf:	add    rsp,0xd0
   140007cd6:	pop    r15
   140007cd8:	pop    r14
   140007cda:	pop    r12
   140007cdc:	pop    rdi
   140007cdd:	pop    rsi
   140007cde:	pop    rbp
   140007cdf:	pop    rbx
   140007ce0:	ret    
   140007ce1:	lea    eax,[r15-0x1]
   140007ce5:	mov    r8,rdi
   140007ce8:	mov    rdx,rsi
   140007ceb:	movsxd r9,eax
   140007cee:	call   0x14000eec8
   140007cf3:	test   eax,eax
   140007cf5:	jne    0x140007d9f
   140007cfb:	test   r14d,r14d
   140007cfe:	je     0x140007d08
   140007d00:	mov    rcx,rdi
   140007d03:	call   0x140006444
   140007d08:	xor    eax,eax
   140007d0a:	jmp    0x140007cbf
   140007d0c:	mov    r14d,0x2
   140007d12:	cmp    edx,r14d
   140007d15:	jne    0x140007d6a
   140007d17:	and    QWORD PTR [rbx],0x0
   140007d1b:	xor    r9d,r9d
   140007d1e:	xor    r8d,r8d
   140007d21:	mov    edx,esi
   140007d23:	mov    rcx,rbp
   140007d26:	call   0x14000f4a8
   140007d2b:	movsxd rdi,eax
   140007d2e:	test   eax,eax
   140007d30:	je     0x140007d59
   140007d32:	mov    rcx,rdi
   140007d35:	mov    edx,r14d
   140007d38:	call   0x140007ed4
   140007d3d:	mov    QWORD PTR [rbx],rax
   140007d40:	test   rax,rax
   140007d43:	je     0x140007d59
   140007d45:	mov    r9d,edi
   140007d48:	mov    r8,rax
   140007d4b:	mov    edx,esi
   140007d4d:	mov    rcx,rbp
   140007d50:	call   0x14000f4a8
   140007d55:	test   eax,eax
   140007d57:	jne    0x140007d08
   140007d59:	mov    rcx,QWORD PTR [rbx]
   140007d5c:	call   0x140006444
   140007d61:	and    QWORD PTR [rbx],0x0
   140007d65:	jmp    0x140007cbc
   140007d6a:	test   edx,edx
   140007d6c:	jne    0x140007cbc
   140007d72:	and    DWORD PTR [rsp+0x30],edx
   140007d76:	bts    esi,0x1d
   140007d7a:	lea    r8,[rsp+0x30]
   140007d7f:	mov    edx,esi
   140007d81:	mov    r9d,r14d
   140007d84:	mov    rcx,rbp
   140007d87:	call   0x14000f4a8
   140007d8c:	test   eax,eax
   140007d8e:	je     0x140007cbc
   140007d94:	mov    al,BYTE PTR [rsp+0x30]
   140007d98:	mov    BYTE PTR [rbx],al
   140007d9a:	jmp    0x140007d08
   140007d9f:	and    QWORD PTR [rsp+0x20],0x0
   140007da5:	xor    r9d,r9d
   140007da8:	xor    r8d,r8d
   140007dab:	xor    edx,edx
   140007dad:	xor    ecx,ecx
   140007daf:	call   0x140008678
   140007db4:	int3   
   140007db5:	int3   
   140007db6:	int3   
   140007db7:	int3   
   140007db8:	mov    QWORD PTR [rip+0x2ffa9],rcx        # 0x140037d68
   140007dbf:	ret    
   140007dc0:	test   ecx,ecx
   140007dc2:	jne    0x140007dc5
   140007dc4:	ret    
   140007dc5:	push   rbx
   140007dc6:	sub    rsp,0x30
   140007dca:	mov    rax,QWORD PTR [rsp+0x68]
   140007dcf:	mov    r10,r9
   140007dd2:	mov    r9d,DWORD PTR [rsp+0x60]
   140007dd7:	mov    r11,r8
   140007dda:	mov    rbx,rdx
   140007ddd:	mov    r8,r10
   140007de0:	mov    rdx,r11
   140007de3:	mov    rcx,rbx
   140007de6:	mov    QWORD PTR [rsp+0x20],rax
   140007deb:	call   0x140008678
   140007df0:	int3   
   140007df1:	int3   
   140007df2:	int3   
   140007df3:	int3   
   140007df4:	mov    rcx,QWORD PTR [rip+0x2ff75]        # 0x140037d70
   140007dfb:	rex.W jmp QWORD PTR [rip+0x1f276]        # 0x140027078
   140007e02:	int3   
   140007e03:	int3   
   140007e04:	xor    ecx,ecx
   140007e06:	jmp    0x140007e0c
   140007e0b:	int3   
   140007e0c:	mov    QWORD PTR [rsp+0x8],rbx
   140007e11:	push   rdi
   140007e12:	sub    rsp,0x20
   140007e16:	mov    rdi,rcx
   140007e19:	mov    ecx,0x4
   140007e1e:	call   0x140008760
   140007e23:	mov    rcx,QWORD PTR [rip+0x2ff46]        # 0x140037d70
   140007e2a:	call   QWORD PTR [rip+0x1f248]        # 0x140027078
   140007e30:	mov    rcx,rdi
   140007e33:	mov    rbx,rax
   140007e36:	call   QWORD PTR [rip+0x1f234]        # 0x140027070
   140007e3c:	mov    ecx,0x4
   140007e41:	mov    QWORD PTR [rip+0x2ff28],rax        # 0x140037d70
   140007e48:	call   0x14000897c
   140007e4d:	mov    rax,rbx
   140007e50:	mov    rbx,QWORD PTR [rsp+0x30]
   140007e55:	add    rsp,0x20
   140007e59:	pop    rdi
   140007e5a:	ret    
   140007e5b:	int3   
   140007e5c:	rex push rbx
   140007e5e:	sub    rsp,0x20
   140007e62:	mov    rbx,rcx
   140007e65:	mov    rcx,QWORD PTR [rip+0x2ff04]        # 0x140037d70
   140007e6c:	call   QWORD PTR [rip+0x1f206]        # 0x140027078
   140007e72:	test   rax,rax
   140007e75:	je     0x140007e87
   140007e77:	mov    rcx,rbx
   140007e7a:	call   rax
   140007e7c:	test   eax,eax
   140007e7e:	je     0x140007e87
   140007e80:	mov    eax,0x1
   140007e85:	jmp    0x140007e89
   140007e87:	xor    eax,eax
   140007e89:	add    rsp,0x20
   140007e8d:	pop    rbx
   140007e8e:	ret    
   140007e8f:	int3   
   140007e90:	mov    QWORD PTR [rip+0x2fed9],rcx        # 0x140037d70
   140007e97:	ret    
   140007e98:	sub    rsp,0x28
   140007e9c:	test   rcx,rcx
   140007e9f:	jne    0x140007eba
   140007ea1:	call   0x1400095b8
   140007ea6:	mov    DWORD PTR [rax],0x16
   140007eac:	call   0x140008628
   140007eb1:	or     rax,0xffffffffffffffff
   140007eb5:	add    rsp,0x28
   140007eb9:	ret    
   140007eba:	mov    r8,rcx
   140007ebd:	mov    rcx,QWORD PTR [rip+0x307a4]        # 0x140038668
   140007ec4:	xor    edx,edx
   140007ec6:	add    rsp,0x28
   140007eca:	rex.W jmp QWORD PTR [rip+0x1f227]        # 0x1400270f8
   140007ed1:	int3   
   140007ed2:	int3   
   140007ed3:	int3   
   140007ed4:	mov    rax,rsp
   140007ed7:	mov    QWORD PTR [rax+0x8],rbx
   140007edb:	mov    QWORD PTR [rax+0x10],rbp
   140007edf:	mov    QWORD PTR [rax+0x18],rsi
   140007ee3:	mov    QWORD PTR [rax+0x20],rdi
   140007ee7:	push   r14
   140007ee9:	sub    rsp,0x20
   140007eed:	xor    ebx,ebx
   140007eef:	mov    rsi,rdx
   140007ef2:	mov    rbp,rcx
   140007ef5:	or     r14d,0xffffffff
   140007ef9:	xor    r8d,r8d
   140007efc:	mov    rdx,rsi
   140007eff:	mov    rcx,rbp
   140007f02:	call   0x14000aae4
   140007f07:	mov    rdi,rax
   140007f0a:	test   rax,rax
   140007f0d:	jne    0x140007f35
   140007f0f:	cmp    DWORD PTR [rip+0x2fe63],eax        # 0x140037d78
   140007f15:	jbe    0x140007f35
   140007f17:	mov    ecx,ebx
   140007f19:	call   0x140009200
   140007f1e:	lea    ecx,[rbx+0x3e8]
   140007f24:	cmp    ecx,DWORD PTR [rip+0x2fe4e]        # 0x140037d78
   140007f2a:	mov    ebx,ecx
   140007f2c:	cmova  ebx,r14d
   140007f30:	cmp    ebx,r14d
   140007f33:	jne    0x140007ef9
   140007f35:	mov    rbx,QWORD PTR [rsp+0x30]
   140007f3a:	mov    rbp,QWORD PTR [rsp+0x38]
   140007f3f:	mov    rsi,QWORD PTR [rsp+0x40]
   140007f44:	mov    rax,rdi
   140007f47:	mov    rdi,QWORD PTR [rsp+0x48]
   140007f4c:	add    rsp,0x20
   140007f50:	pop    r14
   140007f52:	ret    
   140007f53:	int3   
   140007f54:	mov    rax,rsp
   140007f57:	mov    QWORD PTR [rax+0x8],rbx
   140007f5b:	mov    QWORD PTR [rax+0x10],rbp
   140007f5f:	mov    QWORD PTR [rax+0x18],rsi
   140007f63:	mov    QWORD PTR [rax+0x20],rdi
   140007f67:	push   r14
   140007f69:	sub    rsp,0x20
   140007f6d:	mov    esi,DWORD PTR [rip+0x2fe05]        # 0x140037d78
   140007f73:	xor    ebx,ebx
   140007f75:	mov    rbp,rcx
   140007f78:	or     r14d,0xffffffff
   140007f7c:	mov    rcx,rbp
   140007f7f:	call   0x1400064d4
   140007f84:	mov    rdi,rax
   140007f87:	test   rax,rax
   140007f8a:	jne    0x140007fb0
   140007f8c:	test   esi,esi
   140007f8e:	je     0x140007fb0
   140007f90:	mov    ecx,ebx
   140007f92:	call   0x140009200
   140007f97:	mov    esi,DWORD PTR [rip+0x2fddb]        # 0x140037d78
   140007f9d:	lea    ecx,[rbx+0x3e8]
   140007fa3:	cmp    ecx,esi
   140007fa5:	mov    ebx,ecx
   140007fa7:	cmova  ebx,r14d
   140007fab:	cmp    ebx,r14d
   140007fae:	jne    0x140007f7c
   140007fb0:	mov    rbx,QWORD PTR [rsp+0x30]
   140007fb5:	mov    rbp,QWORD PTR [rsp+0x38]
   140007fba:	mov    rsi,QWORD PTR [rsp+0x40]
   140007fbf:	mov    rax,rdi
   140007fc2:	mov    rdi,QWORD PTR [rsp+0x48]
   140007fc7:	add    rsp,0x20
   140007fcb:	pop    r14
   140007fcd:	ret    
   140007fce:	int3   
   140007fcf:	int3   
   140007fd0:	mov    rax,rsp
   140007fd3:	mov    QWORD PTR [rax+0x8],rbx
   140007fd7:	mov    QWORD PTR [rax+0x10],rbp
   140007fdb:	mov    QWORD PTR [rax+0x18],rsi
   140007fdf:	mov    QWORD PTR [rax+0x20],rdi
   140007fe3:	push   r14
   140007fe5:	sub    rsp,0x20
   140007fe9:	xor    ebx,ebx
   140007feb:	mov    rsi,rdx
   140007fee:	mov    rbp,rcx
   140007ff1:	or     r14d,0xffffffff
   140007ff5:	mov    rdx,rsi
   140007ff8:	mov    rcx,rbp
   140007ffb:	call   0x14000f6d0
   140008000:	mov    rdi,rax
   140008003:	test   rax,rax
   140008006:	jne    0x140008033
   140008008:	test   rsi,rsi
   14000800b:	je     0x140008033
   14000800d:	cmp    DWORD PTR [rip+0x2fd65],eax        # 0x140037d78
   140008013:	jbe    0x140008033
   140008015:	mov    ecx,ebx
   140008017:	call   0x140009200
   14000801c:	lea    ecx,[rbx+0x3e8]
   140008022:	cmp    ecx,DWORD PTR [rip+0x2fd50]        # 0x140037d78
   140008028:	mov    ebx,ecx
   14000802a:	cmova  ebx,r14d
   14000802e:	cmp    ebx,r14d
   140008031:	jne    0x140007ff5
   140008033:	mov    rbx,QWORD PTR [rsp+0x30]
   140008038:	mov    rbp,QWORD PTR [rsp+0x38]
   14000803d:	mov    rsi,QWORD PTR [rsp+0x40]
   140008042:	mov    rax,rdi
   140008045:	mov    rdi,QWORD PTR [rsp+0x48]
   14000804a:	add    rsp,0x20
   14000804e:	pop    r14
   140008050:	ret    
   140008051:	int3   
   140008052:	int3   
   140008053:	int3   
   140008054:	mov    QWORD PTR [rsp+0x8],rbx
   140008059:	mov    QWORD PTR [rsp+0x10],rbp
   14000805e:	mov    QWORD PTR [rsp+0x18],rsi
   140008063:	push   rdi
   140008064:	push   r14
   140008066:	push   r15
   140008068:	sub    rsp,0x20
   14000806c:	xor    ebx,ebx
   14000806e:	mov    rsi,r8
   140008071:	mov    rbp,rdx
   140008074:	or     r15d,0xffffffff
   140008078:	mov    r14,rcx
   14000807b:	mov    r8,rsi
   14000807e:	mov    rdx,rbp
   140008081:	mov    rcx,r14
   140008084:	call   0x14000f7a4
   140008089:	mov    rdi,rax
   14000808c:	test   rax,rax
   14000808f:	jne    0x1400080bc
   140008091:	test   rsi,rsi
   140008094:	je     0x1400080bc
   140008096:	cmp    DWORD PTR [rip+0x2fcdc],eax        # 0x140037d78
   14000809c:	jbe    0x1400080bc
   14000809e:	mov    ecx,ebx
   1400080a0:	call   0x140009200
   1400080a5:	lea    ecx,[rbx+0x3e8]
   1400080ab:	cmp    ecx,DWORD PTR [rip+0x2fcc7]        # 0x140037d78
   1400080b1:	mov    ebx,ecx
   1400080b3:	cmova  ebx,r15d
   1400080b7:	cmp    ebx,r15d
   1400080ba:	jne    0x14000807b
   1400080bc:	mov    rbx,QWORD PTR [rsp+0x40]
   1400080c1:	mov    rbp,QWORD PTR [rsp+0x48]
   1400080c6:	mov    rsi,QWORD PTR [rsp+0x50]
   1400080cb:	mov    rax,rdi
   1400080ce:	add    rsp,0x20
   1400080d2:	pop    r15
   1400080d4:	pop    r14
   1400080d6:	pop    rdi
   1400080d7:	ret    
   1400080d8:	mov    eax,DWORD PTR [rip+0x2fc9a]        # 0x140037d78
   1400080de:	mov    DWORD PTR [rip+0x2fc94],ecx        # 0x140037d78
   1400080e4:	ret    
   1400080e5:	int3   
   1400080e6:	int3   
   1400080e7:	int3   
   1400080e8:	rex push rbx
   1400080ea:	sub    rsp,0x20
   1400080ee:	mov    ebx,ecx
   1400080f0:	call   0x140009200
   1400080f5:	or     eax,0xffffffff
   1400080f8:	add    ebx,0x3e8
   1400080fe:	cmp    ebx,DWORD PTR [rip+0x2fc74]        # 0x140037d78
   140008104:	cmova  ebx,eax
   140008107:	mov    eax,ebx
   140008109:	add    rsp,0x20
   14000810d:	pop    rbx
   14000810e:	ret    
   14000810f:	int3   
   140008110:	mov    rax,rsp
   140008113:	mov    QWORD PTR [rax+0x8],rbx
   140008117:	mov    QWORD PTR [rax+0x10],rbp
   14000811b:	mov    QWORD PTR [rax+0x18],rsi
   14000811f:	push   rdi
   140008120:	push   r12
   140008122:	push   r13
   140008124:	push   r14
   140008126:	push   r15
   140008128:	sub    rsp,0x40
   14000812c:	mov    r12,QWORD PTR [r9+0x8]
   140008130:	mov    r15,QWORD PTR [r9]
   140008133:	mov    rbx,QWORD PTR [r9+0x38]
   140008137:	sub    r15,r12
   14000813a:	test   BYTE PTR [rcx+0x4],0x66
   14000813e:	mov    r14,r9
   140008141:	mov    r13,rdx
   140008144:	mov    rbp,rcx
   140008147:	jne    0x14000822b
   14000814d:	mov    esi,DWORD PTR [r9+0x48]
   140008151:	mov    QWORD PTR [rax-0x38],rcx
   140008155:	mov    QWORD PTR [rax-0x30],r8
   140008159:	cmp    esi,DWORD PTR [rbx]
   14000815b:	jae    0x1400082ce
   140008161:	mov    edi,esi
   140008163:	add    rdi,rdi
   140008166:	mov    eax,DWORD PTR [rbx+rdi*8+0x4]
   14000816a:	cmp    r15,rax
   14000816d:	jb     0x14000821d
   140008173:	mov    eax,DWORD PTR [rbx+rdi*8+0x8]
   140008177:	cmp    r15,rax
   14000817a:	jae    0x14000821d
   140008180:	cmp    DWORD PTR [rbx+rdi*8+0x10],0x0
   140008185:	je     0x14000821d
   14000818b:	cmp    DWORD PTR [rbx+rdi*8+0xc],0x1
   140008190:	je     0x1400081a9
   140008192:	mov    eax,DWORD PTR [rbx+rdi*8+0xc]
   140008196:	lea    rcx,[rsp+0x30]
   14000819b:	mov    rdx,r13
   14000819e:	add    rax,r12
   1400081a1:	call   rax
   1400081a3:	test   eax,eax
   1400081a5:	js     0x140008224
   1400081a7:	jle    0x14000821d
   1400081a9:	cmp    DWORD PTR [rbp+0x0],0xe06d7363
   1400081b0:	jne    0x1400081da
   1400081b2:	cmp    QWORD PTR [rip+0x2277e],0x0        # 0x14002a938
   1400081ba:	je     0x1400081da
   1400081bc:	lea    rcx,[rip+0x22775]        # 0x14002a938
   1400081c3:	call   0x140009770
   1400081c8:	test   eax,eax
   1400081ca:	je     0x1400081da
   1400081cc:	mov    edx,0x1
   1400081d1:	mov    rcx,rbp
   1400081d4:	call   QWORD PTR [rip+0x2275e]        # 0x14002a938
   1400081da:	mov    ecx,DWORD PTR [rbx+rdi*8+0x10]
   1400081de:	mov    r8d,0x1
   1400081e4:	mov    rdx,r13
   1400081e7:	add    rcx,r12
   1400081ea:	call   0x14000f870
   1400081ef:	mov    rax,QWORD PTR [r14+0x40]
   1400081f3:	mov    edx,DWORD PTR [rbx+rdi*8+0x10]
   1400081f7:	mov    r9d,DWORD PTR [rbp+0x0]
   1400081fb:	mov    QWORD PTR [rsp+0x28],rax
   140008200:	mov    rax,QWORD PTR [r14+0x28]
   140008204:	add    rdx,r12
   140008207:	mov    r8,rbp
   14000820a:	mov    rcx,r13
   14000820d:	mov    QWORD PTR [rsp+0x20],rax
   140008212:	call   QWORD PTR [rip+0x1eec8]        # 0x1400270e0
   140008218:	call   0x14000f8a0
   14000821d:	inc    esi
   14000821f:	jmp    0x140008159
   140008224:	xor    eax,eax
   140008226:	jmp    0x1400082d3
   14000822b:	mov    rsi,QWORD PTR [r9+0x20]
   14000822f:	mov    edi,DWORD PTR [r9+0x48]
   140008233:	sub    rsi,r12
   140008236:	jmp    0x1400082c4
   14000823b:	mov    ecx,edi
   14000823d:	add    rcx,rcx
   140008240:	mov    eax,DWORD PTR [rbx+rcx*8+0x4]
   140008244:	cmp    r15,rax
   140008247:	jb     0x1400082c2
   140008249:	mov    eax,DWORD PTR [rbx+rcx*8+0x8]
   14000824d:	cmp    r15,rax
   140008250:	jae    0x1400082c2
   140008252:	test   BYTE PTR [rbp+0x4],0x20
   140008256:	je     0x14000829c
   140008258:	xor    r9d,r9d
   14000825b:	test   edx,edx
   14000825d:	je     0x140008297
   14000825f:	mov    r8d,r9d
   140008262:	add    r8,r8
   140008265:	mov    eax,DWORD PTR [rbx+r8*8+0x4]
   14000826a:	cmp    rsi,rax
   14000826d:	jb     0x14000828f
   14000826f:	mov    eax,DWORD PTR [rbx+r8*8+0x8]
   140008274:	cmp    rsi,rax
   140008277:	jae    0x14000828f
   140008279:	mov    eax,DWORD PTR [rbx+rcx*8+0x10]
   14000827d:	cmp    DWORD PTR [rbx+r8*8+0x10],eax
   140008282:	jne    0x14000828f
   140008284:	mov    eax,DWORD PTR [rbx+rcx*8+0xc]
   140008288:	cmp    DWORD PTR [rbx+r8*8+0xc],eax
   14000828d:	je     0x140008297
   14000828f:	inc    r9d
   140008292:	cmp    r9d,edx
   140008295:	jb     0x14000825f
   140008297:	cmp    r9d,edx
   14000829a:	jne    0x1400082ce
   14000829c:	mov    eax,DWORD PTR [rbx+rcx*8+0x10]
   1400082a0:	test   eax,eax
   1400082a2:	je     0x1400082ab
   1400082a4:	cmp    rsi,rax
   1400082a7:	je     0x1400082ce
   1400082a9:	jmp    0x1400082c2
   1400082ab:	lea    eax,[rdi+0x1]
   1400082ae:	mov    rdx,r13
   1400082b1:	mov    DWORD PTR [r14+0x48],eax
   1400082b5:	mov    r8d,DWORD PTR [rbx+rcx*8+0xc]
   1400082ba:	mov    cl,0x1
   1400082bc:	add    r8,r12
   1400082bf:	call   r8
   1400082c2:	inc    edi
   1400082c4:	mov    edx,DWORD PTR [rbx]
   1400082c6:	cmp    edi,edx
   1400082c8:	jb     0x14000823b
   1400082ce:	mov    eax,0x1
   1400082d3:	lea    r11,[rsp+0x40]
   1400082d8:	mov    rbx,QWORD PTR [r11+0x30]
   1400082dc:	mov    rbp,QWORD PTR [r11+0x38]
   1400082e0:	mov    rsi,QWORD PTR [r11+0x40]
   1400082e4:	mov    rsp,r11
   1400082e7:	pop    r15
   1400082e9:	pop    r14
   1400082eb:	pop    r13
   1400082ed:	pop    r12
   1400082ef:	pop    rdi
   1400082f0:	ret    
   1400082f1:	int3   
   1400082f2:	int3   
   1400082f3:	int3   
   1400082f4:	mov    QWORD PTR [rsp+0x8],rbx
   1400082f9:	mov    QWORD PTR [rsp+0x10],rbp
   1400082fe:	mov    QWORD PTR [rsp+0x18],rsi
   140008303:	push   rdi
   140008304:	sub    rsp,0x10
   140008308:	xor    ecx,ecx
   14000830a:	xor    eax,eax
   14000830c:	xor    edi,edi
   14000830e:	cpuid  
   140008310:	mov    DWORD PTR [rip+0x2ddce],0x2        # 0x1400360e8
   14000831a:	mov    DWORD PTR [rip+0x2ddc0],0x1        # 0x1400360e4
   140008324:	mov    r11d,ebx
   140008327:	mov    ebx,ecx
   140008329:	mov    r8d,edx
   14000832c:	xor    ebx,0x6c65746e
   140008332:	mov    r9d,edx
   140008335:	mov    edx,r11d
   140008338:	xor    r8d,0x49656e69
   14000833f:	xor    edx,0x756e6547
   140008345:	mov    ebp,eax
   140008347:	or     r8d,ebx
   14000834a:	lea    eax,[rdi+0x1]
   14000834d:	or     r8d,edx
   140008350:	sete   r10b
   140008354:	xor    r11d,0x68747541
   14000835b:	xor    r9d,0x69746e65
   140008362:	or     r11d,r9d
   140008365:	xor    ecx,0x444d4163
   14000836b:	or     r11d,ecx
   14000836e:	sete   sil
   140008372:	xor    ecx,ecx
   140008374:	cpuid  
   140008376:	mov    r11d,ecx
   140008379:	mov    r9d,eax
   14000837c:	mov    DWORD PTR [rsp+0x4],ebx
   140008380:	mov    DWORD PTR [rsp+0xc],edx
   140008384:	test   r10b,r10b
   140008387:	je     0x1400083d8
   140008389:	mov    edx,eax
   14000838b:	and    edx,0xfff3ff0
   140008391:	cmp    edx,0x106c0
   140008397:	je     0x1400083c4
   140008399:	cmp    edx,0x20660
   14000839f:	je     0x1400083c4
   1400083a1:	cmp    edx,0x20670
   1400083a7:	je     0x1400083c4
   1400083a9:	add    edx,0xfffcf9b0
   1400083af:	cmp    edx,0x20
   1400083b2:	ja     0x1400083d8
   1400083b4:	movabs rcx,0x100010001
   1400083be:	bt     rcx,rdx
   1400083c2:	jae    0x1400083d8
   1400083c4:	mov    r8d,DWORD PTR [rip+0x2f9b1]        # 0x140037d7c
   1400083cb:	or     r8d,0x1
   1400083cf:	mov    DWORD PTR [rip+0x2f9a6],r8d        # 0x140037d7c
   1400083d6:	jmp    0x1400083df
   1400083d8:	mov    r8d,DWORD PTR [rip+0x2f99d]        # 0x140037d7c
   1400083df:	test   sil,sil
   1400083e2:	je     0x1400083ff
   1400083e4:	and    r9d,0xff00f00
   1400083eb:	cmp    r9d,0x600f00
   1400083f2:	jl     0x1400083ff
   1400083f4:	or     r8d,0x4
   1400083f8:	mov    DWORD PTR [rip+0x2f97d],r8d        # 0x140037d7c
   1400083ff:	mov    eax,0x7
   140008404:	cmp    ebp,eax
   140008406:	jl     0x14000842a
   140008408:	xor    ecx,ecx
   14000840a:	cpuid  
   14000840c:	mov    edi,ebx
   14000840e:	mov    DWORD PTR [rsp],eax
   140008411:	mov    DWORD PTR [rsp+0x8],ecx
   140008415:	mov    DWORD PTR [rsp+0xc],edx
   140008419:	bt     ebx,0x9
   14000841d:	jae    0x14000842a
   14000841f:	or     r8d,0x2
   140008423:	mov    DWORD PTR [rip+0x2f952],r8d        # 0x140037d7c
   14000842a:	bt     r11d,0x14
   14000842f:	jae    0x140008481
   140008431:	mov    DWORD PTR [rip+0x2dca9],0x2        # 0x1400360e4
   14000843b:	mov    DWORD PTR [rip+0x2dca3],0x6        # 0x1400360e8
   140008445:	bt     r11d,0x1b
   14000844a:	jae    0x140008481
   14000844c:	bt     r11d,0x1c
   140008451:	jae    0x140008481
   140008453:	mov    DWORD PTR [rip+0x2dc87],0x3        # 0x1400360e4
   14000845d:	mov    DWORD PTR [rip+0x2dc81],0xe        # 0x1400360e8
   140008467:	test   dil,0x20
   14000846b:	je     0x140008481
   14000846d:	mov    DWORD PTR [rip+0x2dc6d],0x5        # 0x1400360e4
   140008477:	mov    DWORD PTR [rip+0x2dc67],0x2e        # 0x1400360e8
   140008481:	mov    rbx,QWORD PTR [rsp+0x20]
   140008486:	mov    rbp,QWORD PTR [rsp+0x28]
   14000848b:	mov    rsi,QWORD PTR [rsp+0x30]
   140008490:	xor    eax,eax
   140008492:	add    rsp,0x10
   140008496:	pop    rdi
   140008497:	ret    
   140008498:	jmp    0x1400085c0
   14000849d:	int3   
   14000849e:	int3   
   14000849f:	int3   
   1400084a0:	sub    rsp,0x38
   1400084a4:	mov    rax,QWORD PTR [rsp+0x60]
   1400084a9:	mov    QWORD PTR [rsp+0x20],rax
   1400084ae:	call   0x140008678
   1400084b3:	int3   
   1400084b4:	mov    rax,rsp
   1400084b7:	mov    QWORD PTR [rax+0x10],rbx
   1400084bb:	mov    QWORD PTR [rax+0x18],rsi
   1400084bf:	mov    QWORD PTR [rax+0x20],rdi
   1400084c3:	push   rbp
   1400084c4:	lea    rbp,[rax-0x4b8]
   1400084cb:	sub    rsp,0x5b0
   1400084d2:	mov    rax,QWORD PTR [rip+0x2e567]        # 0x140036a40
   1400084d9:	xor    rax,rsp
   1400084dc:	mov    QWORD PTR [rbp+0x4a0],rax
   1400084e3:	mov    edi,r8d
   1400084e6:	mov    esi,edx
   1400084e8:	mov    ebx,ecx
   1400084ea:	cmp    ecx,0xffffffff
   1400084ed:	je     0x1400084f4
   1400084ef:	call   0x14000f8a4
   1400084f4:	and    DWORD PTR [rsp+0x30],0x0
   1400084f9:	lea    rcx,[rsp+0x34]
   1400084fe:	xor    edx,edx
   140008500:	mov    r8d,0x94
   140008506:	call   0x140007150
   14000850b:	lea    rax,[rsp+0x30]
   140008510:	lea    rcx,[rbp-0x30]
   140008514:	mov    QWORD PTR [rsp+0x20],rax
   140008519:	lea    rax,[rbp-0x30]
   14000851d:	mov    QWORD PTR [rsp+0x28],rax
   140008522:	call   0x1400089cc
   140008527:	mov    rax,QWORD PTR [rbp+0x4b8]
   14000852e:	mov    QWORD PTR [rbp+0xc8],rax
   140008535:	lea    rax,[rbp+0x4b8]
   14000853c:	mov    DWORD PTR [rsp+0x30],esi
   140008540:	add    rax,0x8
   140008544:	mov    DWORD PTR [rsp+0x34],edi
   140008548:	mov    QWORD PTR [rbp+0x68],rax
   14000854c:	mov    rax,QWORD PTR [rbp+0x4b8]
   140008553:	mov    QWORD PTR [rsp+0x40],rax
   140008558:	call   QWORD PTR [rip+0x1eba2]        # 0x140027100
   14000855e:	lea    rcx,[rsp+0x20]
   140008563:	mov    edi,eax
   140008565:	call   0x140009228
   14000856a:	test   eax,eax
   14000856c:	jne    0x14000857e
   14000856e:	test   edi,edi
   140008570:	jne    0x14000857e
   140008572:	cmp    ebx,0xffffffff
   140008575:	je     0x14000857e
   140008577:	mov    ecx,ebx
   140008579:	call   0x14000f8a4
   14000857e:	mov    rcx,QWORD PTR [rbp+0x4a0]
   140008585:	xor    rcx,rsp
   140008588:	call   0x14000d0a0
   14000858d:	lea    r11,[rsp+0x5b0]
   140008595:	mov    rbx,QWORD PTR [r11+0x18]
   140008599:	mov    rsi,QWORD PTR [r11+0x20]
   14000859d:	mov    rdi,QWORD PTR [r11+0x28]
   1400085a1:	mov    rsp,r11
   1400085a4:	pop    rbp
   1400085a5:	ret    
   1400085a6:	int3   
   1400085a7:	int3   
   1400085a8:	mov    rcx,QWORD PTR [rip+0x2f7d1]        # 0x140037d80
   1400085af:	rex.W jmp QWORD PTR [rip+0x1eac2]        # 0x140027078
   1400085b6:	int3   
   1400085b7:	int3   
   1400085b8:	mov    QWORD PTR [rip+0x2f7c1],rcx        # 0x140037d80
   1400085bf:	ret    
   1400085c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400085c5:	mov    QWORD PTR [rsp+0x10],rbp
   1400085ca:	mov    QWORD PTR [rsp+0x18],rsi
   1400085cf:	push   rdi
   1400085d0:	sub    rsp,0x30
   1400085d4:	mov    rbp,rcx
   1400085d7:	mov    rcx,QWORD PTR [rip+0x2f7a2]        # 0x140037d80
   1400085de:	mov    ebx,r9d
   1400085e1:	mov    rdi,r8
   1400085e4:	mov    rsi,rdx
   1400085e7:	call   QWORD PTR [rip+0x1ea8b]        # 0x140027078
   1400085ed:	mov    r9d,ebx
   1400085f0:	mov    r8,rdi
   1400085f3:	mov    rdx,rsi
   1400085f6:	mov    rcx,rbp
   1400085f9:	test   rax,rax
   1400085fc:	je     0x140008615
   1400085fe:	mov    rbx,QWORD PTR [rsp+0x40]
   140008603:	mov    rbp,QWORD PTR [rsp+0x48]
   140008608:	mov    rsi,QWORD PTR [rsp+0x50]
   14000860d:	add    rsp,0x30
   140008611:	pop    rdi
   140008612:	rex.W jmp rax
   140008615:	mov    rax,QWORD PTR [rsp+0x60]
   14000861a:	mov    QWORD PTR [rsp+0x20],rax
   14000861f:	call   0x140008678
   140008624:	int3   
   140008625:	int3   
   140008626:	int3   
   140008627:	int3   
   140008628:	sub    rsp,0x38
   14000862c:	and    QWORD PTR [rsp+0x20],0x0
   140008632:	xor    r9d,r9d
   140008635:	xor    r8d,r8d
   140008638:	xor    edx,edx
   14000863a:	xor    ecx,ecx
   14000863c:	call   0x1400085c0
   140008641:	add    rsp,0x38
   140008645:	ret    
   140008646:	int3   
   140008647:	int3   
   140008648:	sub    rsp,0x38
   14000864c:	and    QWORD PTR [rsp+0x20],0x0
   140008652:	xor    r9d,r9d
   140008655:	xor    r8d,r8d
   140008658:	xor    edx,edx
   14000865a:	xor    ecx,ecx
   14000865c:	call   0x1400085c0
   140008661:	and    QWORD PTR [rsp+0x20],0x0
   140008667:	xor    r9d,r9d
   14000866a:	xor    r8d,r8d
   14000866d:	xor    edx,edx
   14000866f:	xor    ecx,ecx
   140008671:	call   0x140008678
   140008676:	int3   
   140008677:	int3   
   140008678:	sub    rsp,0x28
   14000867c:	mov    ecx,0x17
   140008681:	call   0x140025f82
   140008686:	test   eax,eax
   140008688:	je     0x140008691
   14000868a:	mov    ecx,0x5
   14000868f:	int    0x29
   140008691:	mov    r8d,0x1
   140008697:	mov    edx,0xc0000417
   14000869c:	lea    ecx,[r8+0x1]
   1400086a0:	call   0x1400084b4
   1400086a5:	mov    ecx,0xc0000417
   1400086aa:	add    rsp,0x28
   1400086ae:	jmp    0x140009208
   1400086b3:	int3   
   1400086b4:	mov    QWORD PTR [rsp+0x8],rbx
   1400086b9:	push   rdi
   1400086ba:	sub    rsp,0x20
   1400086be:	mov    rdi,rcx
   1400086c1:	mov    rcx,QWORD PTR [rip+0x2f6b8]        # 0x140037d80
   1400086c8:	call   QWORD PTR [rip+0x1e9aa]        # 0x140027078
   1400086ce:	mov    rcx,rdi
   1400086d1:	mov    rbx,rax
   1400086d4:	call   QWORD PTR [rip+0x1e996]        # 0x140027070
   1400086da:	mov    QWORD PTR [rip+0x2f69f],rax        # 0x140037d80
   1400086e1:	mov    rax,rbx
   1400086e4:	mov    rbx,QWORD PTR [rsp+0x30]
   1400086e9:	add    rsp,0x20
   1400086ed:	pop    rdi
   1400086ee:	ret    
   1400086ef:	int3   
   1400086f0:	mov    QWORD PTR [rsp+0x8],rbx
   1400086f5:	push   rdi
   1400086f6:	sub    rsp,0x20
   1400086fa:	lea    rbx,[rip+0x290b7]        # 0x1400317b8
   140008701:	lea    rdi,[rip+0x290b0]        # 0x1400317b8
   140008708:	jmp    0x140008718
   14000870a:	mov    rax,QWORD PTR [rbx]
   14000870d:	test   rax,rax
   140008710:	je     0x140008714
   140008712:	call   rax
   140008714:	add    rbx,0x8
   140008718:	cmp    rbx,rdi
   14000871b:	jb     0x14000870a
   14000871d:	mov    rbx,QWORD PTR [rsp+0x30]
   140008722:	add    rsp,0x20
   140008726:	pop    rdi
   140008727:	ret    
   140008728:	mov    QWORD PTR [rsp+0x8],rbx
   14000872d:	push   rdi
   14000872e:	sub    rsp,0x20
   140008732:	lea    rbx,[rip+0x2908f]        # 0x1400317c8
   140008739:	lea    rdi,[rip+0x29088]        # 0x1400317c8
   140008740:	jmp    0x140008750
   140008742:	mov    rax,QWORD PTR [rbx]
   140008745:	test   rax,rax
   140008748:	je     0x14000874c
   14000874a:	call   rax
   14000874c:	add    rbx,0x8
   140008750:	cmp    rbx,rdi
   140008753:	jb     0x140008742
   140008755:	mov    rbx,QWORD PTR [rsp+0x30]
   14000875a:	add    rsp,0x20
   14000875e:	pop    rdi
   14000875f:	ret    
   140008760:	mov    QWORD PTR [rsp+0x8],rbx
   140008765:	push   rdi
   140008766:	sub    rsp,0x20
   14000876a:	movsxd rbx,ecx
   14000876d:	lea    rdi,[rip+0x2d97c]        # 0x1400360f0
   140008774:	add    rbx,rbx
   140008777:	cmp    QWORD PTR [rdi+rbx*8],0x0
   14000877c:	jne    0x14000878f
   14000877e:	call   0x140008858
   140008783:	test   eax,eax
   140008785:	jne    0x14000878f
   140008787:	lea    ecx,[rax+0x11]
   14000878a:	call   0x140005ff4
   14000878f:	mov    rcx,QWORD PTR [rdi+rbx*8]
   140008793:	mov    rbx,QWORD PTR [rsp+0x30]
   140008798:	add    rsp,0x20
   14000879c:	pop    rdi
   14000879d:	rex.W jmp QWORD PTR [rip+0x1e964]        # 0x140027108
   1400087a4:	rex push rbx
   1400087a6:	sub    rsp,0x20
   1400087aa:	mov    rbx,rcx
   1400087ad:	call   0x140008d30
   1400087b2:	test   eax,eax
   1400087b4:	jne    0x1400087c1
   1400087b6:	mov    rdx,rbx
   1400087b9:	xor    ecx,ecx
   1400087bb:	call   QWORD PTR [rip+0x1e95f]        # 0x140027120
   1400087c1:	mov    ecx,0xff
   1400087c6:	add    rsp,0x20
   1400087ca:	pop    rbx
   1400087cb:	jmp    0x140005e94
   1400087d0:	mov    QWORD PTR [rsp+0x8],rbx
   1400087d5:	mov    QWORD PTR [rsp+0x10],rbp
   1400087da:	mov    QWORD PTR [rsp+0x18],rsi
   1400087df:	push   rdi
   1400087e0:	sub    rsp,0x20
   1400087e4:	mov    edi,0x24
   1400087e9:	lea    rbx,[rip+0x2d900]        # 0x1400360f0
   1400087f0:	mov    ebp,edi
   1400087f2:	mov    rsi,QWORD PTR [rbx]
   1400087f5:	test   rsi,rsi
   1400087f8:	je     0x140008815
   1400087fa:	cmp    DWORD PTR [rbx+0x8],0x1
   1400087fe:	je     0x140008815
   140008800:	mov    rcx,rsi
   140008803:	call   QWORD PTR [rip+0x1e90f]        # 0x140027118
   140008809:	mov    rcx,rsi
   14000880c:	call   0x140006444
   140008811:	and    QWORD PTR [rbx],0x0
   140008815:	add    rbx,0x10
   140008819:	dec    rbp
   14000881c:	jne    0x1400087f2
   14000881e:	lea    rbx,[rip+0x2d8d3]        # 0x1400360f8
   140008825:	mov    rcx,QWORD PTR [rbx-0x8]
   140008829:	test   rcx,rcx
   14000882c:	je     0x140008839
   14000882e:	cmp    DWORD PTR [rbx],0x1
   140008831:	jne    0x140008839
   140008833:	call   QWORD PTR [rip+0x1e8df]        # 0x140027118
   140008839:	add    rbx,0x10
   14000883d:	dec    rdi
   140008840:	jne    0x140008825
   140008842:	mov    rbx,QWORD PTR [rsp+0x30]
   140008847:	mov    rbp,QWORD PTR [rsp+0x38]
   14000884c:	mov    rsi,QWORD PTR [rsp+0x40]
   140008851:	add    rsp,0x20
   140008855:	pop    rdi
   140008856:	ret    
   140008857:	int3   
   140008858:	mov    QWORD PTR [rsp+0x8],rbx
   14000885d:	mov    QWORD PTR [rsp+0x10],rdi
   140008862:	push   r14
   140008864:	sub    rsp,0x20
   140008868:	movsxd rbx,ecx
   14000886b:	cmp    QWORD PTR [rip+0x2fdf5],0x0        # 0x140038668
   140008873:	jne    0x14000888e
   140008875:	call   0x140009264
   14000887a:	mov    ecx,0x1e
   14000887f:	call   0x1400092d8
   140008884:	mov    ecx,0xff
   140008889:	call   0x140005e94
   14000888e:	add    rbx,rbx
   140008891:	lea    r14,[rip+0x2d858]        # 0x1400360f0
   140008898:	cmp    QWORD PTR [r14+rbx*8],0x0
   14000889d:	je     0x1400088a6
   14000889f:	mov    eax,0x1
   1400088a4:	jmp    0x140008904
   1400088a6:	mov    ecx,0x28
   1400088ab:	call   0x140007f54
   1400088b0:	mov    rdi,rax
   1400088b3:	test   rax,rax
   1400088b6:	jne    0x1400088c7
   1400088b8:	call   0x1400095b8
   1400088bd:	mov    DWORD PTR [rax],0xc
   1400088c3:	xor    eax,eax
   1400088c5:	jmp    0x140008904
   1400088c7:	mov    ecx,0xa
   1400088cc:	call   0x140008760
   1400088d1:	nop
   1400088d2:	mov    rcx,rdi
   1400088d5:	cmp    QWORD PTR [r14+rbx*8],0x0
   1400088da:	jne    0x1400088ef
   1400088dc:	xor    r8d,r8d
   1400088df:	mov    edx,0xfa0
   1400088e4:	call   0x140008d04
   1400088e9:	mov    QWORD PTR [r14+rbx*8],rdi
   1400088ed:	jmp    0x1400088f5
   1400088ef:	call   0x140006444
   1400088f4:	nop
   1400088f5:	mov    rcx,QWORD PTR [rip+0x2d894]        # 0x140036190
   1400088fc:	call   QWORD PTR [rip+0x1e80e]        # 0x140027110
   140008902:	jmp    0x14000889f
   140008904:	mov    rbx,QWORD PTR [rsp+0x30]
   140008909:	mov    rdi,QWORD PTR [rsp+0x38]
   14000890e:	add    rsp,0x20
   140008912:	pop    r14
   140008914:	ret    
   140008915:	int3   
   140008916:	int3   
   140008917:	int3   
   140008918:	mov    QWORD PTR [rsp+0x8],rbx
   14000891d:	mov    QWORD PTR [rsp+0x10],rsi
   140008922:	push   rdi
   140008923:	sub    rsp,0x20
   140008927:	xor    esi,esi
   140008929:	lea    rbx,[rip+0x2d7c0]        # 0x1400360f0
   140008930:	lea    edi,[rsi+0x24]
   140008933:	cmp    DWORD PTR [rbx+0x8],0x1
   140008937:	jne    0x14000895d
   140008939:	movsxd rax,esi
   14000893c:	lea    rdx,[rip+0x2f44d]        # 0x140037d90
   140008943:	xor    r8d,r8d
   140008946:	lea    rcx,[rax+rax*4]
   14000894a:	inc    esi
   14000894c:	lea    rcx,[rdx+rcx*8]
   140008950:	mov    edx,0xfa0
   140008955:	mov    QWORD PTR [rbx],rcx
   140008958:	call   0x140008d04
   14000895d:	add    rbx,0x10
   140008961:	dec    rdi
   140008964:	jne    0x140008933
   140008966:	mov    rbx,QWORD PTR [rsp+0x30]
   14000896b:	mov    rsi,QWORD PTR [rsp+0x38]
   140008970:	lea    eax,[rdi+0x1]
   140008973:	add    rsp,0x20
   140008977:	pop    rdi
   140008978:	ret    
   140008979:	int3   
   14000897a:	int3   
   14000897b:	int3   
   14000897c:	movsxd rcx,ecx
   14000897f:	lea    rax,[rip+0x2d76a]        # 0x1400360f0
   140008986:	add    rcx,rcx
   140008989:	mov    rcx,QWORD PTR [rax+rcx*8]
   14000898d:	rex.W jmp QWORD PTR [rip+0x1e77c]        # 0x140027110
   140008994:	sub    rsp,0x28
   140008998:	mov    rax,QWORD PTR [rip+0x317a9]        # 0x14003a148
   14000899f:	and    DWORD PTR [rsp+0x30],0x0
   1400089a4:	xor    rax,QWORD PTR [rip+0x2e095]        # 0x140036a40
   1400089ab:	je     0x1400089c2
   1400089ad:	lea    rcx,[rsp+0x30]
   1400089b2:	xor    edx,edx
   1400089b4:	call   rax
   1400089b6:	cmp    eax,0x7a
   1400089b9:	jne    0x1400089c2
   1400089bb:	mov    eax,0x1
   1400089c0:	jmp    0x1400089c4
   1400089c2:	xor    eax,eax
   1400089c4:	add    rsp,0x28
   1400089c8:	ret    
   1400089c9:	int3   
   1400089ca:	int3   
   1400089cb:	int3   
   1400089cc:	mov    QWORD PTR [rsp+0x20],rbx
   1400089d1:	push   rdi
   1400089d2:	sub    rsp,0x40
   1400089d6:	mov    rbx,rcx
   1400089d9:	call   QWORD PTR [rip+0x1e749]        # 0x140027128
   1400089df:	mov    rdi,QWORD PTR [rbx+0xf8]
   1400089e6:	lea    rdx,[rsp+0x50]
   1400089eb:	xor    r8d,r8d
   1400089ee:	mov    rcx,rdi
   1400089f1:	call   QWORD PTR [rip+0x1e6e1]        # 0x1400270d8
   1400089f7:	test   rax,rax
   1400089fa:	je     0x140008a2e
   1400089fc:	and    QWORD PTR [rsp+0x38],0x0
   140008a02:	mov    rdx,QWORD PTR [rsp+0x50]
   140008a07:	lea    rcx,[rsp+0x58]
   140008a0c:	mov    QWORD PTR [rsp+0x30],rcx
   140008a11:	lea    rcx,[rsp+0x60]
   140008a16:	mov    r9,rax
   140008a19:	mov    QWORD PTR [rsp+0x28],rcx
   140008a1e:	xor    ecx,ecx
   140008a20:	mov    r8,rdi
   140008a23:	mov    QWORD PTR [rsp+0x20],rbx
   140008a28:	call   QWORD PTR [rip+0x1e702]        # 0x140027130
   140008a2e:	mov    rbx,QWORD PTR [rsp+0x68]
   140008a33:	add    rsp,0x40
   140008a37:	pop    rdi
   140008a38:	ret    
   140008a39:	int3   
   140008a3a:	int3   
   140008a3b:	int3   
   140008a3c:	rex push rbx
   140008a3e:	push   rsi
   140008a3f:	push   rdi
   140008a40:	sub    rsp,0x40
   140008a44:	mov    rbx,rcx
   140008a47:	call   QWORD PTR [rip+0x1e6db]        # 0x140027128
   140008a4d:	mov    rsi,QWORD PTR [rbx+0xf8]
   140008a54:	xor    edi,edi
   140008a56:	lea    rdx,[rsp+0x60]
   140008a5b:	xor    r8d,r8d
   140008a5e:	mov    rcx,rsi
   140008a61:	call   QWORD PTR [rip+0x1e671]        # 0x1400270d8
   140008a67:	test   rax,rax
   140008a6a:	je     0x140008aa5
   140008a6c:	and    QWORD PTR [rsp+0x38],0x0
   140008a72:	mov    rdx,QWORD PTR [rsp+0x60]
   140008a77:	lea    rcx,[rsp+0x68]
   140008a7c:	mov    QWORD PTR [rsp+0x30],rcx
   140008a81:	lea    rcx,[rsp+0x70]
   140008a86:	mov    r9,rax
   140008a89:	mov    QWORD PTR [rsp+0x28],rcx
   140008a8e:	xor    ecx,ecx
   140008a90:	mov    r8,rsi
   140008a93:	mov    QWORD PTR [rsp+0x20],rbx
   140008a98:	call   QWORD PTR [rip+0x1e692]        # 0x140027130
   140008a9e:	inc    edi
   140008aa0:	cmp    edi,0x2
   140008aa3:	jl     0x140008a56
   140008aa5:	add    rsp,0x40
   140008aa9:	pop    rdi
   140008aaa:	pop    rsi
   140008aab:	pop    rbx
   140008aac:	ret    
   140008aad:	int3   
   140008aae:	int3   
   140008aaf:	int3   
   140008ab0:	sub    rsp,0x28
   140008ab4:	mov    rax,QWORD PTR [rip+0x315fd]        # 0x14003a0b8
   140008abb:	xor    rax,QWORD PTR [rip+0x2df7e]        # 0x140036a40
   140008ac2:	je     0x140008ac6
   140008ac4:	call   rax
   140008ac6:	add    rsp,0x28
   140008aca:	ret    
   140008acb:	int3   
   140008acc:	sub    rsp,0x28
   140008ad0:	mov    rax,QWORD PTR [rip+0x315f9]        # 0x14003a0d0
   140008ad7:	xor    rax,QWORD PTR [rip+0x2df62]        # 0x140036a40
   140008ade:	je     0x140008ae2
   140008ae0:	call   rax
   140008ae2:	add    rsp,0x28
   140008ae6:	ret    
   140008ae7:	int3   
   140008ae8:	mov    r10,QWORD PTR [rip+0x31599]        # 0x14003a088
   140008aef:	mov    eax,r8d
   140008af2:	xor    r10,QWORD PTR [rip+0x2df47]        # 0x140036a40
   140008af9:	je     0x140008afe
   140008afb:	rex.WB jmp r10
   140008afe:	and    eax,0x1
   140008b01:	mov    r9,rdx
   140008b04:	and    r8d,0x2
   140008b08:	mov    edx,eax
   140008b0a:	rex.W jmp QWORD PTR [rip+0x1e647]        # 0x140027158
   140008b11:	int3   
   140008b12:	int3   
   140008b13:	int3   
   140008b14:	mov    r10,QWORD PTR [rip+0x31575]        # 0x14003a090
   140008b1b:	xor    r10,QWORD PTR [rip+0x2df1e]        # 0x140036a40
   140008b22:	je     0x140008b27
   140008b24:	rex.WB jmp r10
   140008b27:	rex.W jmp QWORD PTR [rip+0x1e682]        # 0x1400271b0
   140008b2e:	int3   
   140008b2f:	int3   
   140008b30:	sub    rsp,0x28
   140008b34:	mov    rax,QWORD PTR [rip+0x315bd]        # 0x14003a0f8
   140008b3b:	xor    rax,QWORD PTR [rip+0x2defe]        # 0x140036a40
   140008b42:	je     0x140008b4b
   140008b44:	add    rsp,0x28
   140008b48:	rex.W jmp rax
   140008b4b:	mov    ecx,0x78
   140008b50:	call   QWORD PTR [rip+0x1e5f2]        # 0x140027148
   140008b56:	xor    al,al
   140008b58:	add    rsp,0x28
   140008b5c:	ret    
   140008b5d:	int3   
   140008b5e:	int3   
   140008b5f:	int3   
   140008b60:	mov    rax,QWORD PTR [rip+0x31539]        # 0x14003a0a0
   140008b67:	xor    rax,QWORD PTR [rip+0x2ded2]        # 0x140036a40
   140008b6e:	je     0x140008b73
   140008b70:	rex.W jmp rax
   140008b73:	xor    eax,eax
   140008b75:	ret    
   140008b76:	int3   
   140008b77:	int3   
   140008b78:	mov    rax,QWORD PTR [rip+0x31541]        # 0x14003a0c0
   140008b7f:	xor    rax,QWORD PTR [rip+0x2deba]        # 0x140036a40
   140008b86:	je     0x140008b8b
   140008b88:	rex.W jmp rax
   140008b8b:	xor    eax,eax
   140008b8d:	ret    
   140008b8e:	int3   
   140008b8f:	int3   
   140008b90:	mov    rax,QWORD PTR [rip+0x314c9]        # 0x14003a060
   140008b97:	xor    rax,QWORD PTR [rip+0x2dea2]        # 0x140036a40
   140008b9e:	je     0x140008ba3
   140008ba0:	rex.W jmp rax
   140008ba3:	rex.W jmp QWORD PTR [rip+0x1e5ce]        # 0x140027178
   140008baa:	int3   
   140008bab:	int3   
   140008bac:	mov    rax,QWORD PTR [rip+0x314b5]        # 0x14003a068
   140008bb3:	xor    rax,QWORD PTR [rip+0x2de86]        # 0x140036a40
   140008bba:	je     0x140008bbf
   140008bbc:	rex.W jmp rax
   140008bbf:	rex.W jmp QWORD PTR [rip+0x1e5ca]        # 0x140027190
   140008bc6:	int3   
   140008bc7:	int3   
   140008bc8:	mov    rax,QWORD PTR [rip+0x314a1]        # 0x14003a070
   140008bcf:	xor    rax,QWORD PTR [rip+0x2de6a]        # 0x140036a40
   140008bd6:	je     0x140008bdb
   140008bd8:	rex.W jmp rax
   140008bdb:	rex.W jmp QWORD PTR [rip+0x1e59e]        # 0x140027180
   140008be2:	int3   
   140008be3:	int3   
   140008be4:	mov    rax,QWORD PTR [rip+0x3148d]        # 0x14003a078
   140008beb:	xor    rax,QWORD PTR [rip+0x2de4e]        # 0x140036a40
   140008bf2:	je     0x140008bf7
   140008bf4:	rex.W jmp rax
   140008bf7:	rex.W jmp QWORD PTR [rip+0x1e58a]        # 0x140027188
   140008bfe:	int3   
   140008bff:	int3   
   140008c00:	sub    rsp,0x28
   140008c04:	mov    rax,QWORD PTR [rip+0x314cd]        # 0x14003a0d8
   140008c0b:	xor    rax,QWORD PTR [rip+0x2de2e]        # 0x140036a40
   140008c12:	je     0x140008c16
   140008c14:	call   rax
   140008c16:	add    rsp,0x28
   140008c1a:	ret    
   140008c1b:	int3   
   140008c1c:	sub    rsp,0x28
   140008c20:	mov    rax,QWORD PTR [rip+0x314b9]        # 0x14003a0e0
   140008c27:	xor    rax,QWORD PTR [rip+0x2de12]        # 0x140036a40
   140008c2e:	je     0x140008c32
   140008c30:	call   rax
   140008c32:	add    rsp,0x28
   140008c36:	ret    
   140008c37:	int3   
   140008c38:	mov    rax,QWORD PTR [rip+0x314a9]        # 0x14003a0e8
   140008c3f:	xor    rax,QWORD PTR [rip+0x2ddfa]        # 0x140036a40
   140008c46:	je     0x140008c4b
   140008c48:	rex.W jmp rax
   140008c4b:	xor    eax,eax
   140008c4d:	ret    
   140008c4e:	int3   
   140008c4f:	int3   
   140008c50:	sub    rsp,0x28
   140008c54:	mov    rax,QWORD PTR [rip+0x314fd]        # 0x14003a158
   140008c5b:	xor    rax,QWORD PTR [rip+0x2ddde]        # 0x140036a40
   140008c62:	je     0x140008c6b
   140008c64:	add    rsp,0x28
   140008c68:	rex.W jmp rax
   140008c6b:	mov    ecx,0x78
   140008c70:	call   QWORD PTR [rip+0x1e4d2]        # 0x140027148
   140008c76:	xor    eax,eax
   140008c78:	add    rsp,0x28
   140008c7c:	ret    
   140008c7d:	int3   
   140008c7e:	int3   
   140008c7f:	int3   
   140008c80:	sub    rsp,0x28
   140008c84:	mov    rax,QWORD PTR [rip+0x31465]        # 0x14003a0f0
   140008c8b:	xor    rax,QWORD PTR [rip+0x2ddae]        # 0x140036a40
   140008c92:	je     0x140008c9b
   140008c94:	add    rsp,0x28
   140008c98:	rex.W jmp rax
   140008c9b:	mov    ecx,0x78
   140008ca0:	call   QWORD PTR [rip+0x1e4a2]        # 0x140027148
   140008ca6:	xor    eax,eax
   140008ca8:	add    rsp,0x28
   140008cac:	ret    
   140008cad:	int3   
   140008cae:	int3   
   140008caf:	int3   
   140008cb0:	sub    rsp,0x98
   140008cb7:	lea    rcx,[rsp+0x20]
   140008cbc:	call   QWORD PTR [rip+0x1e4d6]        # 0x140027198
   140008cc2:	test   BYTE PTR [rsp+0x5c],0x1
   140008cc7:	movzx  ecx,WORD PTR [rsp+0x60]
   140008ccc:	mov    eax,0xa
   140008cd1:	cmovne eax,ecx
   140008cd4:	add    rsp,0x98
   140008cdb:	ret    
   140008cdc:	sub    rsp,0x28
   140008ce0:	mov    rax,QWORD PTR [rip+0x31469]        # 0x14003a150
   140008ce7:	xor    rax,QWORD PTR [rip+0x2dd52]        # 0x140036a40
   140008cee:	je     0x140008cf7
   140008cf0:	add    rsp,0x28
   140008cf4:	rex.W jmp rax
   140008cf7:	call   QWORD PTR [rip+0x1e4a3]        # 0x1400271a0
   140008cfd:	mov    eax,eax
   140008cff:	add    rsp,0x28
   140008d03:	ret    
   140008d04:	sub    rsp,0x28
   140008d08:	mov    rax,QWORD PTR [rip+0x31371]        # 0x14003a080
   140008d0f:	xor    rax,QWORD PTR [rip+0x2dd2a]        # 0x140036a40
   140008d16:	je     0x140008d1f
   140008d18:	add    rsp,0x28
   140008d1c:	rex.W jmp rax
   140008d1f:	call   QWORD PTR [rip+0x1e42b]        # 0x140027150
   140008d25:	mov    eax,0x1
   140008d2a:	add    rsp,0x28
   140008d2e:	ret    
   140008d2f:	int3   
   140008d30:	rex push rbx
   140008d32:	sub    rsp,0x20
   140008d36:	mov    eax,DWORD PTR [rip+0x2d5f4]        # 0x140036330
   140008d3c:	xor    ebx,ebx
   140008d3e:	test   eax,eax
   140008d40:	jns    0x140008d71
   140008d42:	mov    rax,QWORD PTR [rip+0x313ff]        # 0x14003a148
   140008d49:	mov    DWORD PTR [rsp+0x30],ebx
   140008d4d:	xor    rax,QWORD PTR [rip+0x2dcec]        # 0x140036a40
   140008d54:	je     0x140008d67
   140008d56:	lea    rcx,[rsp+0x30]
   140008d5b:	xor    edx,edx
   140008d5d:	call   rax
   140008d5f:	cmp    eax,0x7a
   140008d62:	lea    eax,[rbx+0x1]
   140008d65:	je     0x140008d69
   140008d67:	mov    eax,ebx
   140008d69:	mov    DWORD PTR [rip+0x2d5c1],eax        # 0x140036330
   140008d6f:	test   eax,eax
   140008d71:	setg   bl
   140008d74:	mov    eax,ebx
   140008d76:	add    rsp,0x20
   140008d7a:	pop    rbx
   140008d7b:	ret    
   140008d7c:	rex push rbx
   140008d7e:	sub    rsp,0x20
   140008d82:	lea    rcx,[rip+0x20c7f]        # 0x140029a08
   140008d89:	call   QWORD PTR [rip+0x1e419]        # 0x1400271a8
   140008d8f:	lea    rdx,[rip+0x20c92]        # 0x140029a28
   140008d96:	mov    rcx,rax
   140008d99:	mov    rbx,rax
   140008d9c:	call   QWORD PTR [rip+0x1e2f6]        # 0x140027098
   140008da2:	lea    rdx,[rip+0x20c8f]        # 0x140029a38
   140008da9:	mov    rcx,rbx
   140008dac:	xor    rax,QWORD PTR [rip+0x2dc8d]        # 0x140036a40
   140008db3:	mov    QWORD PTR [rip+0x312a6],rax        # 0x14003a060
   140008dba:	call   QWORD PTR [rip+0x1e2d8]        # 0x140027098
   140008dc0:	lea    rdx,[rip+0x20c79]        # 0x140029a40
   140008dc7:	xor    rax,QWORD PTR [rip+0x2dc72]        # 0x140036a40
   140008dce:	mov    rcx,rbx
   140008dd1:	mov    QWORD PTR [rip+0x31290],rax        # 0x14003a068
   140008dd8:	call   QWORD PTR [rip+0x1e2ba]        # 0x140027098
   140008dde:	lea    rdx,[rip+0x20c6b]        # 0x140029a50
   140008de5:	xor    rax,QWORD PTR [rip+0x2dc54]        # 0x140036a40
   140008dec:	mov    rcx,rbx
   140008def:	mov    QWORD PTR [rip+0x3127a],rax        # 0x14003a070
   140008df6:	call   QWORD PTR [rip+0x1e29c]        # 0x140027098
   140008dfc:	lea    rdx,[rip+0x20c5d]        # 0x140029a60
   140008e03:	xor    rax,QWORD PTR [rip+0x2dc36]        # 0x140036a40
   140008e0a:	mov    rcx,rbx
   140008e0d:	mov    QWORD PTR [rip+0x31264],rax        # 0x14003a078
   140008e14:	call   QWORD PTR [rip+0x1e27e]        # 0x140027098
   140008e1a:	lea    rdx,[rip+0x20c5f]        # 0x140029a80
   140008e21:	xor    rax,QWORD PTR [rip+0x2dc18]        # 0x140036a40
   140008e28:	mov    rcx,rbx
   140008e2b:	mov    QWORD PTR [rip+0x3124e],rax        # 0x14003a080
   140008e32:	call   QWORD PTR [rip+0x1e260]        # 0x140027098
   140008e38:	lea    rdx,[rip+0x20c51]        # 0x140029a90
   140008e3f:	xor    rax,QWORD PTR [rip+0x2dbfa]        # 0x140036a40
   140008e46:	mov    rcx,rbx
   140008e49:	mov    QWORD PTR [rip+0x31238],rax        # 0x14003a088
   140008e50:	call   QWORD PTR [rip+0x1e242]        # 0x140027098
   140008e56:	lea    rdx,[rip+0x20c4b]        # 0x140029aa8
   140008e5d:	xor    rax,QWORD PTR [rip+0x2dbdc]        # 0x140036a40
   140008e64:	mov    rcx,rbx
   140008e67:	mov    QWORD PTR [rip+0x31222],rax        # 0x14003a090
   140008e6e:	call   QWORD PTR [rip+0x1e224]        # 0x140027098
   140008e74:	lea    rdx,[rip+0x20c45]        # 0x140029ac0
   140008e7b:	xor    rax,QWORD PTR [rip+0x2dbbe]        # 0x140036a40
   140008e82:	mov    rcx,rbx
   140008e85:	mov    QWORD PTR [rip+0x3120c],rax        # 0x14003a098
   140008e8c:	call   QWORD PTR [rip+0x1e206]        # 0x140027098
   140008e92:	lea    rdx,[rip+0x20c3f]        # 0x140029ad8
   140008e99:	xor    rax,QWORD PTR [rip+0x2dba0]        # 0x140036a40
   140008ea0:	mov    rcx,rbx
   140008ea3:	mov    QWORD PTR [rip+0x311f6],rax        # 0x14003a0a0
   140008eaa:	call   QWORD PTR [rip+0x1e1e8]        # 0x140027098
   140008eb0:	lea    rdx,[rip+0x20c39]        # 0x140029af0
   140008eb7:	xor    rax,QWORD PTR [rip+0x2db82]        # 0x140036a40
   140008ebe:	mov    rcx,rbx
   140008ec1:	mov    QWORD PTR [rip+0x311e0],rax        # 0x14003a0a8
   140008ec8:	call   QWORD PTR [rip+0x1e1ca]        # 0x140027098
   140008ece:	lea    rdx,[rip+0x20c3b]        # 0x140029b10
   140008ed5:	xor    rax,QWORD PTR [rip+0x2db64]        # 0x140036a40
   140008edc:	mov    rcx,rbx
   140008edf:	mov    QWORD PTR [rip+0x311ca],rax        # 0x14003a0b0
   140008ee6:	call   QWORD PTR [rip+0x1e1ac]        # 0x140027098
   140008eec:	lea    rdx,[rip+0x20c35]        # 0x140029b28
   140008ef3:	xor    rax,QWORD PTR [rip+0x2db46]        # 0x140036a40
   140008efa:	mov    rcx,rbx
   140008efd:	mov    QWORD PTR [rip+0x311b4],rax        # 0x14003a0b8
   140008f04:	call   QWORD PTR [rip+0x1e18e]        # 0x140027098
   140008f0a:	lea    rdx,[rip+0x20c2f]        # 0x140029b40
   140008f11:	xor    rax,QWORD PTR [rip+0x2db28]        # 0x140036a40
   140008f18:	mov    rcx,rbx
   140008f1b:	mov    QWORD PTR [rip+0x3119e],rax        # 0x14003a0c0
   140008f22:	call   QWORD PTR [rip+0x1e170]        # 0x140027098
   140008f28:	lea    rdx,[rip+0x20c29]        # 0x140029b58
   140008f2f:	xor    rax,QWORD PTR [rip+0x2db0a]        # 0x140036a40
   140008f36:	mov    rcx,rbx
   140008f39:	mov    QWORD PTR [rip+0x31188],rax        # 0x14003a0c8
   140008f40:	call   QWORD PTR [rip+0x1e152]        # 0x140027098
   140008f46:	lea    rdx,[rip+0x20c23]        # 0x140029b70
   140008f4d:	xor    rax,QWORD PTR [rip+0x2daec]        # 0x140036a40
   140008f54:	mov    rcx,rbx
   140008f57:	mov    QWORD PTR [rip+0x31172],rax        # 0x14003a0d0
   140008f5e:	call   QWORD PTR [rip+0x1e134]        # 0x140027098
   140008f64:	xor    rax,QWORD PTR [rip+0x2dad5]        # 0x140036a40
   140008f6b:	lea    rdx,[rip+0x20c1e]        # 0x140029b90
   140008f72:	mov    rcx,rbx
   140008f75:	mov    QWORD PTR [rip+0x3115c],rax        # 0x14003a0d8
   140008f7c:	call   QWORD PTR [rip+0x1e116]        # 0x140027098
   140008f82:	lea    rdx,[rip+0x20c27]        # 0x140029bb0
   140008f89:	xor    rax,QWORD PTR [rip+0x2dab0]        # 0x140036a40
   140008f90:	mov    rcx,rbx
   140008f93:	mov    QWORD PTR [rip+0x31146],rax        # 0x14003a0e0
   140008f9a:	call   QWORD PTR [rip+0x1e0f8]        # 0x140027098
   140008fa0:	lea    rdx,[rip+0x20c29]        # 0x140029bd0
   140008fa7:	xor    rax,QWORD PTR [rip+0x2da92]        # 0x140036a40
   140008fae:	mov    rcx,rbx
   140008fb1:	mov    QWORD PTR [rip+0x31130],rax        # 0x14003a0e8
   140008fb8:	call   QWORD PTR [rip+0x1e0da]        # 0x140027098
   140008fbe:	lea    rdx,[rip+0x20c2b]        # 0x140029bf0
   140008fc5:	xor    rax,QWORD PTR [rip+0x2da74]        # 0x140036a40
   140008fcc:	mov    rcx,rbx
   140008fcf:	mov    QWORD PTR [rip+0x3111a],rax        # 0x14003a0f0
   140008fd6:	call   QWORD PTR [rip+0x1e0bc]        # 0x140027098
   140008fdc:	lea    rdx,[rip+0x20c25]        # 0x140029c08
   140008fe3:	xor    rax,QWORD PTR [rip+0x2da56]        # 0x140036a40
   140008fea:	mov    rcx,rbx
   140008fed:	mov    QWORD PTR [rip+0x31104],rax        # 0x14003a0f8
   140008ff4:	call   QWORD PTR [rip+0x1e09e]        # 0x140027098
   140008ffa:	lea    rdx,[rip+0x20c27]        # 0x140029c28
   140009001:	xor    rax,QWORD PTR [rip+0x2da38]        # 0x140036a40
   140009008:	mov    rcx,rbx
   14000900b:	mov    QWORD PTR [rip+0x310ee],rax        # 0x14003a100
   140009012:	call   QWORD PTR [rip+0x1e080]        # 0x140027098
   140009018:	lea    rdx,[rip+0x20c21]        # 0x140029c40
   14000901f:	xor    rax,QWORD PTR [rip+0x2da1a]        # 0x140036a40
   140009026:	mov    rcx,rbx
   140009029:	mov    QWORD PTR [rip+0x310e0],rax        # 0x14003a110
   140009030:	call   QWORD PTR [rip+0x1e062]        # 0x140027098
   140009036:	lea    rdx,[rip+0x20c13]        # 0x140029c50
   14000903d:	xor    rax,QWORD PTR [rip+0x2d9fc]        # 0x140036a40
   140009044:	mov    rcx,rbx
   140009047:	mov    QWORD PTR [rip+0x310ba],rax        # 0x14003a108
   14000904e:	call   QWORD PTR [rip+0x1e044]        # 0x140027098
   140009054:	lea    rdx,[rip+0x20c05]        # 0x140029c60
   14000905b:	xor    rax,QWORD PTR [rip+0x2d9de]        # 0x140036a40
   140009062:	mov    rcx,rbx
   140009065:	mov    QWORD PTR [rip+0x310ac],rax        # 0x14003a118
   14000906c:	call   QWORD PTR [rip+0x1e026]        # 0x140027098
   140009072:	lea    rdx,[rip+0x20bf7]        # 0x140029c70
   140009079:	xor    rax,QWORD PTR [rip+0x2d9c0]        # 0x140036a40
   140009080:	mov    rcx,rbx
   140009083:	mov    QWORD PTR [rip+0x31096],rax        # 0x14003a120
   14000908a:	call   QWORD PTR [rip+0x1e008]        # 0x140027098
   140009090:	lea    rdx,[rip+0x20be9]        # 0x140029c80
   140009097:	xor    rax,QWORD PTR [rip+0x2d9a2]        # 0x140036a40
   14000909e:	mov    rcx,rbx
   1400090a1:	mov    QWORD PTR [rip+0x31080],rax        # 0x14003a128
   1400090a8:	call   QWORD PTR [rip+0x1dfea]        # 0x140027098
   1400090ae:	lea    rdx,[rip+0x20beb]        # 0x140029ca0
   1400090b5:	xor    rax,QWORD PTR [rip+0x2d984]        # 0x140036a40
   1400090bc:	mov    rcx,rbx
   1400090bf:	mov    QWORD PTR [rip+0x3106a],rax        # 0x14003a130
   1400090c6:	call   QWORD PTR [rip+0x1dfcc]        # 0x140027098
   1400090cc:	lea    rdx,[rip+0x20be5]        # 0x140029cb8
   1400090d3:	xor    rax,QWORD PTR [rip+0x2d966]        # 0x140036a40
   1400090da:	mov    rcx,rbx
   1400090dd:	mov    QWORD PTR [rip+0x31054],rax        # 0x14003a138
   1400090e4:	call   QWORD PTR [rip+0x1dfae]        # 0x140027098
   1400090ea:	lea    rdx,[rip+0x20bd7]        # 0x140029cc8
   1400090f1:	xor    rax,QWORD PTR [rip+0x2d948]        # 0x140036a40
   1400090f8:	mov    rcx,rbx
   1400090fb:	mov    QWORD PTR [rip+0x3103e],rax        # 0x14003a140
   140009102:	call   QWORD PTR [rip+0x1df90]        # 0x140027098
   140009108:	lea    rdx,[rip+0x20bd1]        # 0x140029ce0
   14000910f:	xor    rax,QWORD PTR [rip+0x2d92a]        # 0x140036a40
   140009116:	mov    rcx,rbx
   140009119:	mov    QWORD PTR [rip+0x31028],rax        # 0x14003a148
   140009120:	call   QWORD PTR [rip+0x1df72]        # 0x140027098
   140009126:	lea    rdx,[rip+0x20bc3]        # 0x140029cf0
   14000912d:	xor    rax,QWORD PTR [rip+0x2d90c]        # 0x140036a40
   140009134:	mov    rcx,rbx
   140009137:	mov    QWORD PTR [rip+0x31012],rax        # 0x14003a150
   14000913e:	call   QWORD PTR [rip+0x1df54]        # 0x140027098
   140009144:	xor    rax,QWORD PTR [rip+0x2d8f5]        # 0x140036a40
   14000914b:	lea    rdx,[rip+0x20bbe]        # 0x140029d10
   140009152:	mov    rcx,rbx
   140009155:	mov    QWORD PTR [rip+0x30ffc],rax        # 0x14003a158
   14000915c:	call   QWORD PTR [rip+0x1df36]        # 0x140027098
   140009162:	xor    rax,QWORD PTR [rip+0x2d8d7]        # 0x140036a40
   140009169:	mov    QWORD PTR [rip+0x30ff0],rax        # 0x14003a160
   140009170:	add    rsp,0x20
   140009174:	pop    rbx
   140009175:	ret    
   140009176:	int3   
   140009177:	int3   
   140009178:	sub    rsp,0x28
   14000917c:	mov    rax,QWORD PTR [rip+0x30fdd]        # 0x14003a160
   140009183:	xor    rax,QWORD PTR [rip+0x2d8b6]        # 0x140036a40
   14000918a:	je     0x140009193
   14000918c:	add    rsp,0x28
   140009190:	rex.W jmp rax
   140009193:	mov    ecx,0x78
   140009198:	call   QWORD PTR [rip+0x1dfaa]        # 0x140027148
   14000919e:	xor    eax,eax
   1400091a0:	add    rsp,0x28
   1400091a4:	ret    
   1400091a5:	int3   
   1400091a6:	int3   
   1400091a7:	int3   
   1400091a8:	mov    rax,QWORD PTR [rip+0x30ee9]        # 0x14003a098
   1400091af:	xor    rax,QWORD PTR [rip+0x2d88a]        # 0x140036a40
   1400091b6:	je     0x1400091bb
   1400091b8:	rex.W jmp rax
   1400091bb:	xor    eax,eax
   1400091bd:	ret    
   1400091be:	int3   
   1400091bf:	int3   
   1400091c0:	sub    rsp,0x28
   1400091c4:	mov    rax,QWORD PTR [rip+0x30edd]        # 0x14003a0a8
   1400091cb:	xor    rax,QWORD PTR [rip+0x2d86e]        # 0x140036a40
   1400091d2:	je     0x1400091d6
   1400091d4:	call   rax
   1400091d6:	add    rsp,0x28
   1400091da:	ret    
   1400091db:	int3   
   1400091dc:	sub    rsp,0x28
   1400091e0:	mov    rax,QWORD PTR [rip+0x30ee1]        # 0x14003a0c8
   1400091e7:	xor    rax,QWORD PTR [rip+0x2d852]        # 0x140036a40
   1400091ee:	je     0x1400091f2
   1400091f0:	call   rax
   1400091f2:	add    rsp,0x28
   1400091f6:	ret    
   1400091f7:	int3   
   1400091f8:	rex.W jmp QWORD PTR [rip+0x1df41]        # 0x140027140
   1400091ff:	int3   
   140009200:	rex.W jmp QWORD PTR [rip+0x1df59]        # 0x140027160
   140009207:	int3   
   140009208:	rex push rbx
   14000920a:	sub    rsp,0x20
   14000920e:	mov    ebx,ecx
   140009210:	call   QWORD PTR [rip+0x1df52]        # 0x140027168
   140009216:	mov    edx,ebx
   140009218:	mov    rcx,rax
   14000921b:	add    rsp,0x20
   14000921f:	pop    rbx
   140009220:	rex.W jmp QWORD PTR [rip+0x1df49]        # 0x140027170
   140009227:	int3   
   140009228:	rex push rbx
   14000922a:	sub    rsp,0x20
   14000922e:	mov    rbx,rcx
   140009231:	xor    ecx,ecx
   140009233:	call   QWORD PTR [rip+0x1df07]        # 0x140027140
   140009239:	mov    rcx,rbx
   14000923c:	add    rsp,0x20
   140009240:	pop    rbx
   140009241:	rex.W jmp QWORD PTR [rip+0x1def0]        # 0x140027138
   140009248:	sub    rsp,0x28
   14000924c:	mov    rax,QWORD PTR [rip+0x30e5d]        # 0x14003a0b0
   140009253:	xor    rax,QWORD PTR [rip+0x2d7e6]        # 0x140036a40
   14000925a:	je     0x14000925e
   14000925c:	call   rax
   14000925e:	add    rsp,0x28
   140009262:	ret    
   140009263:	int3   
   140009264:	sub    rsp,0x28
   140009268:	mov    ecx,0x3
   14000926d:	call   0x14000ec08
   140009272:	cmp    eax,0x1
   140009275:	je     0x14000928e
   140009277:	mov    ecx,0x3
   14000927c:	call   0x14000ec08
   140009281:	test   eax,eax
   140009283:	jne    0x1400092a2
   140009285:	cmp    DWORD PTR [rip+0x2ed34],0x1        # 0x140037fc0
   14000928c:	jne    0x1400092a2
   14000928e:	mov    ecx,0xfc
   140009293:	call   0x1400092d8
   140009298:	mov    ecx,0xff
   14000929d:	call   0x1400092d8
   1400092a2:	add    rsp,0x28
   1400092a6:	ret    
   1400092a7:	int3   
   1400092a8:	lea    r9,[rip+0x20a81]        # 0x140029d30
   1400092af:	xor    edx,edx
   1400092b1:	mov    r8,r9
   1400092b4:	cmp    ecx,DWORD PTR [r8]
   1400092b7:	je     0x1400092cb
   1400092b9:	inc    edx
   1400092bb:	add    r8,0x10
   1400092bf:	movsxd rax,edx
   1400092c2:	cmp    rax,0x17
   1400092c6:	jb     0x1400092b4
   1400092c8:	xor    eax,eax
   1400092ca:	ret    
   1400092cb:	movsxd rax,edx
   1400092ce:	add    rax,rax
   1400092d1:	mov    rax,QWORD PTR [r9+rax*8+0x8]
   1400092d6:	ret    
   1400092d7:	int3   
   1400092d8:	mov    QWORD PTR [rsp+0x10],rbx
   1400092dd:	mov    QWORD PTR [rsp+0x18],rbp
   1400092e2:	mov    QWORD PTR [rsp+0x20],rsi
   1400092e7:	push   rdi
   1400092e8:	push   r14
   1400092ea:	push   r15
   1400092ec:	sub    rsp,0x250
   1400092f3:	mov    rax,QWORD PTR [rip+0x2d746]        # 0x140036a40
   1400092fa:	xor    rax,rsp
   1400092fd:	mov    QWORD PTR [rsp+0x240],rax
   140009305:	mov    edi,ecx
   140009307:	call   0x1400092a8
   14000930c:	xor    esi,esi
   14000930e:	mov    rbx,rax
   140009311:	test   rax,rax
   140009314:	je     0x1400094b3
   14000931a:	lea    ecx,[rsi+0x3]
   14000931d:	call   0x14000ec08
   140009322:	cmp    eax,0x1
   140009325:	je     0x140009448
   14000932b:	lea    ecx,[rsi+0x3]
   14000932e:	call   0x14000ec08
   140009333:	test   eax,eax
   140009335:	jne    0x140009344
   140009337:	cmp    DWORD PTR [rip+0x2ec82],0x1        # 0x140037fc0
   14000933e:	je     0x140009448
   140009344:	cmp    edi,0xfc
   14000934a:	je     0x1400094b3
   140009350:	lea    rbp,[rip+0x2ec79]        # 0x140037fd0
   140009357:	mov    r15d,0x314
   14000935d:	lea    r8,[rip+0x2146c]        # 0x14002a7d0
   140009364:	mov    rcx,rbp
   140009367:	mov    edx,r15d
   14000936a:	call   0x14000f934
   14000936f:	xor    ecx,ecx
   140009371:	test   eax,eax
   140009373:	jne    0x140009534
   140009379:	lea    r14,[rip+0x2ec82]        # 0x140038002
   140009380:	mov    r8d,0x104
   140009386:	mov    WORD PTR [rip+0x2ee7d],si        # 0x14003820a
   14000938d:	mov    rdx,r14
   140009390:	call   QWORD PTR [rip+0x1de32]        # 0x1400271c8
   140009396:	lea    edi,[r15-0x19]
   14000939a:	test   eax,eax
   14000939c:	jne    0x1400093b7
   14000939e:	lea    r8,[rip+0x21463]        # 0x14002a808
   1400093a5:	mov    edx,edi
   1400093a7:	mov    rcx,r14
   1400093aa:	call   0x14000f934
   1400093af:	test   eax,eax
   1400093b1:	jne    0x1400094e0
   1400093b7:	mov    rcx,r14
   1400093ba:	call   0x14000f9a0
   1400093bf:	inc    rax
   1400093c2:	cmp    rax,0x3c
   1400093c6:	jbe    0x140009401
   1400093c8:	mov    rcx,r14
   1400093cb:	call   0x14000f9a0
   1400093d0:	lea    rcx,[rbp-0x44]
   1400093d4:	lea    r8,[rip+0x2145d]        # 0x14002a838
   1400093db:	lea    rcx,[rcx+rax*2]
   1400093df:	mov    r9d,0x3
   1400093e5:	mov    rax,rcx
   1400093e8:	sub    rax,r14
   1400093eb:	sar    rax,1
   1400093ee:	sub    rdi,rax
   1400093f1:	mov    rdx,rdi
   1400093f4:	call   0x14000f9bc
   1400093f9:	test   eax,eax
   1400093fb:	jne    0x1400094f5
   140009401:	lea    r8,[rip+0x21438]        # 0x14002a840
   140009408:	mov    rdx,r15
   14000940b:	mov    rcx,rbp
   14000940e:	call   0x14000f8ac
   140009413:	test   eax,eax
   140009415:	jne    0x14000951f
   14000941b:	mov    r8,rbx
   14000941e:	mov    rdx,r15
   140009421:	mov    rcx,rbp
   140009424:	call   0x14000f8ac
   140009429:	test   eax,eax
   14000942b:	jne    0x14000950a
   140009431:	lea    rdx,[rip+0x21418]        # 0x14002a850
   140009438:	mov    r8d,0x12010
   14000943e:	mov    rcx,rbp
   140009441:	call   0x14000fa88
   140009446:	jmp    0x1400094b3
   140009448:	mov    ecx,0xfffffff4
   14000944d:	call   QWORD PTR [rip+0x1dd65]        # 0x1400271b8
   140009453:	mov    rdi,rax
   140009456:	lea    rcx,[rax-0x1]
   14000945a:	cmp    rcx,0xfffffffffffffffd
   14000945e:	ja     0x1400094b3
   140009460:	mov    r8d,esi
   140009463:	lea    rdx,[rsp+0x40]
   140009468:	mov    cl,BYTE PTR [rbx]
   14000946a:	mov    BYTE PTR [rdx],cl
   14000946c:	cmp    WORD PTR [rbx],si
   14000946f:	je     0x140009486
   140009471:	inc    r8d
   140009474:	inc    rdx
   140009477:	add    rbx,0x2
   14000947b:	movsxd rax,r8d
   14000947e:	cmp    rax,0x1f4
   140009484:	jb     0x140009468
   140009486:	lea    rcx,[rsp+0x40]
   14000948b:	mov    BYTE PTR [rsp+0x233],sil
   140009493:	call   0x140007730
   140009498:	lea    r9,[rsp+0x30]
   14000949d:	lea    rdx,[rsp+0x40]
   1400094a2:	mov    rcx,rdi
   1400094a5:	mov    r8,rax
   1400094a8:	mov    QWORD PTR [rsp+0x20],rsi
   1400094ad:	call   QWORD PTR [rip+0x1dd0d]        # 0x1400271c0
   1400094b3:	mov    rcx,QWORD PTR [rsp+0x240]
   1400094bb:	xor    rcx,rsp
   1400094be:	call   0x14000d0a0
   1400094c3:	lea    r11,[rsp+0x250]
   1400094cb:	mov    rbx,QWORD PTR [r11+0x28]
   1400094cf:	mov    rbp,QWORD PTR [r11+0x30]
   1400094d3:	mov    rsi,QWORD PTR [r11+0x38]
   1400094d7:	mov    rsp,r11
   1400094da:	pop    r15
   1400094dc:	pop    r14
   1400094de:	pop    rdi
   1400094df:	ret    
   1400094e0:	xor    r9d,r9d
   1400094e3:	xor    r8d,r8d
   1400094e6:	xor    edx,edx
   1400094e8:	xor    ecx,ecx
   1400094ea:	mov    QWORD PTR [rsp+0x20],rsi
   1400094ef:	call   0x140008678
   1400094f4:	int3   
   1400094f5:	xor    r9d,r9d
   1400094f8:	xor    r8d,r8d
   1400094fb:	xor    edx,edx
   1400094fd:	xor    ecx,ecx
   1400094ff:	mov    QWORD PTR [rsp+0x20],rsi
   140009504:	call   0x140008678
   140009509:	int3   
   14000950a:	xor    r9d,r9d
   14000950d:	xor    r8d,r8d
   140009510:	xor    edx,edx
   140009512:	xor    ecx,ecx
   140009514:	mov    QWORD PTR [rsp+0x20],rsi
   140009519:	call   0x140008678
   14000951e:	int3   
   14000951f:	xor    r9d,r9d
   140009522:	xor    r8d,r8d
   140009525:	xor    edx,edx
   140009527:	xor    ecx,ecx
   140009529:	mov    QWORD PTR [rsp+0x20],rsi
   14000952e:	call   0x140008678
   140009533:	int3   
   140009534:	xor    r9d,r9d
   140009537:	xor    r8d,r8d
   14000953a:	xor    edx,edx
   14000953c:	mov    QWORD PTR [rsp+0x20],rsi
   140009541:	call   0x140008678
   140009546:	int3   
   140009547:	int3   
   140009548:	sub    rsp,0x28
   14000954c:	call   0x14000b1b0
   140009551:	test   rax,rax
   140009554:	jne    0x14000955f
   140009556:	lea    rax,[rip+0x2cf4f]        # 0x1400364ac
   14000955d:	jmp    0x140009563
   14000955f:	add    rax,0x14
   140009563:	add    rsp,0x28
   140009567:	ret    
   140009568:	mov    QWORD PTR [rsp+0x8],rbx
   14000956d:	push   rdi
   14000956e:	sub    rsp,0x20
   140009572:	mov    edi,ecx
   140009574:	call   0x14000b1b0
   140009579:	test   rax,rax
   14000957c:	jne    0x140009587
   14000957e:	lea    rax,[rip+0x2cf27]        # 0x1400364ac
   140009585:	jmp    0x14000958b
   140009587:	add    rax,0x14
   14000958b:	mov    DWORD PTR [rax],edi
   14000958d:	call   0x14000b1b0
   140009592:	lea    rbx,[rip+0x2cf0f]        # 0x1400364a8
   140009599:	test   rax,rax
   14000959c:	je     0x1400095a2
   14000959e:	lea    rbx,[rax+0x10]
   1400095a2:	mov    ecx,edi
   1400095a4:	call   0x140009650
   1400095a9:	mov    DWORD PTR [rbx],eax
   1400095ab:	mov    rbx,QWORD PTR [rsp+0x30]
   1400095b0:	add    rsp,0x20
   1400095b4:	pop    rdi
   1400095b5:	ret    
   1400095b6:	int3   
   1400095b7:	int3   
   1400095b8:	sub    rsp,0x28
   1400095bc:	call   0x14000b1b0
   1400095c1:	test   rax,rax
   1400095c4:	jne    0x1400095cf
   1400095c6:	lea    rax,[rip+0x2cedb]        # 0x1400364a8
   1400095cd:	jmp    0x1400095d3
   1400095cf:	add    rax,0x10
   1400095d3:	add    rsp,0x28
   1400095d7:	ret    
   1400095d8:	rex push rbx
   1400095da:	sub    rsp,0x20
   1400095de:	mov    rbx,rcx
   1400095e1:	test   rcx,rcx
   1400095e4:	jne    0x1400095f0
   1400095e6:	call   0x140008628
   1400095eb:	lea    eax,[rbx+0x16]
   1400095ee:	jmp    0x14000960d
   1400095f0:	call   0x14000b1b0
   1400095f5:	test   rax,rax
   1400095f8:	jne    0x140009603
   1400095fa:	lea    rax,[rip+0x2ceab]        # 0x1400364ac
   140009601:	jmp    0x140009607
   140009603:	add    rax,0x14
   140009607:	mov    eax,DWORD PTR [rax]
   140009609:	mov    DWORD PTR [rbx],eax
   14000960b:	xor    eax,eax
   14000960d:	add    rsp,0x20
   140009611:	pop    rbx
   140009612:	ret    
   140009613:	int3   
   140009614:	rex push rbx
   140009616:	sub    rsp,0x20
   14000961a:	mov    rbx,rcx
   14000961d:	test   rcx,rcx
   140009620:	jne    0x14000962c
   140009622:	call   0x140008628
   140009627:	lea    eax,[rbx+0x16]
   14000962a:	jmp    0x140009649
   14000962c:	call   0x14000b1b0
   140009631:	test   rax,rax
   140009634:	jne    0x14000963f
   140009636:	lea    rax,[rip+0x2ce6b]        # 0x1400364a8
   14000963d:	jmp    0x140009643
   14000963f:	add    rax,0x10
   140009643:	mov    eax,DWORD PTR [rax]
   140009645:	mov    DWORD PTR [rbx],eax
   140009647:	xor    eax,eax
   140009649:	add    rsp,0x20
   14000964d:	pop    rbx
   14000964e:	ret    
   14000964f:	int3   
   140009650:	lea    r10,[rip+0x2cce9]        # 0x140036340
   140009657:	xor    edx,edx
   140009659:	mov    r8,r10
   14000965c:	lea    r9d,[rdx+0x8]
   140009660:	cmp    ecx,DWORD PTR [r8]
   140009663:	je     0x140009694
   140009665:	inc    edx
   140009667:	add    r8,r9
   14000966a:	movsxd rax,edx
   14000966d:	cmp    rax,0x2d
   140009671:	jb     0x140009660
   140009673:	lea    eax,[rcx-0x13]
   140009676:	cmp    eax,0x11
   140009679:	ja     0x140009681
   14000967b:	mov    eax,0xd
   140009680:	ret    
   140009681:	add    ecx,0xffffff44
   140009687:	mov    eax,0x16
   14000968c:	cmp    ecx,0xe
   14000968f:	cmovbe eax,r9d
   140009693:	ret    
   140009694:	movsxd rax,edx
   140009697:	mov    eax,DWORD PTR [r10+rax*8+0x4]
   14000969c:	ret    
   14000969d:	int3   
   14000969e:	int3   
   14000969f:	int3   
   1400096a0:	rex push rbx
   1400096a2:	sub    rsp,0x20
   1400096a6:	mov    ebx,ecx
   1400096a8:	call   0x14000b1b0
   1400096ad:	test   rax,rax
   1400096b0:	jne    0x1400096b9
   1400096b2:	mov    eax,0xc
   1400096b7:	jmp    0x1400096d4
   1400096b9:	call   0x14000b1b0
   1400096be:	test   rax,rax
   1400096c1:	jne    0x1400096cc
   1400096c3:	lea    rax,[rip+0x2cde2]        # 0x1400364ac
   1400096ca:	jmp    0x1400096d0
   1400096cc:	add    rax,0x14
   1400096d0:	mov    DWORD PTR [rax],ebx
   1400096d2:	xor    eax,eax
   1400096d4:	add    rsp,0x20
   1400096d8:	pop    rbx
   1400096d9:	ret    
   1400096da:	int3   
   1400096db:	int3   
   1400096dc:	rex push rbx
   1400096de:	sub    rsp,0x20
   1400096e2:	mov    ebx,ecx
   1400096e4:	call   0x14000b1b0
   1400096e9:	test   rax,rax
   1400096ec:	jne    0x1400096f5
   1400096ee:	mov    eax,0xc
   1400096f3:	jmp    0x140009710
   1400096f5:	call   0x14000b1b0
   1400096fa:	test   rax,rax
   1400096fd:	jne    0x140009708
   1400096ff:	lea    rax,[rip+0x2cda2]        # 0x1400364a8
   140009706:	jmp    0x14000970c
   140009708:	add    rax,0x10
   14000970c:	mov    DWORD PTR [rax],ebx
   14000970e:	xor    eax,eax
   140009710:	add    rsp,0x20
   140009714:	pop    rbx
   140009715:	ret    
   140009716:	int3   
   140009717:	int3   
   140009718:	int3   
   140009719:	int3   
   14000971a:	int3   
   14000971b:	int3   
   14000971c:	int3   
   14000971d:	int3   
   14000971e:	int3   
   14000971f:	int3   
   140009720:	movsxd r8,DWORD PTR [rcx+0x3c]
   140009724:	xor    r9d,r9d
   140009727:	mov    r10,rdx
   14000972a:	add    r8,rcx
   14000972d:	movzx  eax,WORD PTR [r8+0x14]
   140009732:	movzx  r11d,WORD PTR [r8+0x6]
   140009737:	add    rax,0x18
   14000973b:	add    rax,r8
   14000973e:	test   r11d,r11d
   140009741:	je     0x140009761
   140009743:	mov    edx,DWORD PTR [rax+0xc]
   140009746:	cmp    r10,rdx
   140009749:	jb     0x140009755
   14000974b:	mov    ecx,DWORD PTR [rax+0x8]
   14000974e:	add    ecx,edx
   140009750:	cmp    r10,rcx
   140009753:	jb     0x140009763
   140009755:	inc    r9d
   140009758:	add    rax,0x28
   14000975c:	cmp    r9d,r11d
   14000975f:	jb     0x140009743
   140009761:	xor    eax,eax
   140009763:	ret    
   140009764:	int3   
   140009765:	int3   
   140009766:	int3   
   140009767:	int3   
   140009768:	int3   
   140009769:	int3   
   14000976a:	int3   
   14000976b:	int3   
   14000976c:	int3   
   14000976d:	int3   
   14000976e:	int3   
   14000976f:	int3   
   140009770:	mov    QWORD PTR [rsp+0x8],rbx
   140009775:	push   rdi
   140009776:	sub    rsp,0x20
   14000977a:	mov    rbx,rcx
   14000977d:	lea    rdi,[rip+0xffffffffffff687c]        # 0x140000000
   140009784:	mov    rcx,rdi
   140009787:	call   0x1400097c0
   14000978c:	test   eax,eax
   14000978e:	je     0x1400097b2
   140009790:	sub    rbx,rdi
   140009793:	mov    rdx,rbx
   140009796:	mov    rcx,rdi
   140009799:	call   0x140009720
   14000979e:	test   rax,rax
   1400097a1:	je     0x1400097b2
   1400097a3:	mov    eax,DWORD PTR [rax+0x24]
   1400097a6:	shr    eax,0x1f
   1400097a9:	not    eax
   1400097ab:	and    eax,0x1
   1400097ae:	jmp    0x1400097b2
   1400097b0:	xor    eax,eax
   1400097b2:	mov    rbx,QWORD PTR [rsp+0x30]
   1400097b7:	add    rsp,0x20
   1400097bb:	pop    rdi
   1400097bc:	ret    
   1400097bd:	int3   
   1400097be:	int3   
   1400097bf:	int3   
   1400097c0:	mov    rax,rcx
   1400097c3:	mov    ecx,0x5a4d
   1400097c8:	cmp    WORD PTR [rax],cx
   1400097cb:	je     0x1400097d0
   1400097cd:	xor    eax,eax
   1400097cf:	ret    
   1400097d0:	movsxd rcx,DWORD PTR [rax+0x3c]
   1400097d4:	add    rcx,rax
   1400097d7:	xor    eax,eax
   1400097d9:	cmp    DWORD PTR [rcx],0x4550
   1400097df:	jne    0x1400097ed
   1400097e1:	mov    edx,0x20b
   1400097e6:	cmp    WORD PTR [rcx+0x18],dx
   1400097ea:	sete   al
   1400097ed:	ret    
   1400097ee:	int3   
   1400097ef:	int3   
   1400097f0:	mov    QWORD PTR [rsp+0x8],rbx
   1400097f5:	push   rdi
   1400097f6:	sub    rsp,0x20
   1400097fa:	xor    edi,edi
   1400097fc:	lea    rbx,[rip+0x2ccad]        # 0x1400364b0
   140009803:	mov    rcx,QWORD PTR [rbx]
   140009806:	call   QWORD PTR [rip+0x1d864]        # 0x140027070
   14000980c:	inc    edi
   14000980e:	mov    QWORD PTR [rbx],rax
   140009811:	movsxd rax,edi
   140009814:	lea    rbx,[rbx+0x8]
   140009818:	cmp    rax,0xa
   14000981c:	jb     0x140009803
   14000981e:	mov    rbx,QWORD PTR [rsp+0x30]
   140009823:	add    rsp,0x20
   140009827:	pop    rdi
   140009828:	ret    
   140009829:	int3   
   14000982a:	int3   
   14000982b:	int3   
   14000982c:	sub    rsp,0x28
   140009830:	mov    rcx,QWORD PTR [rip+0x2edc1]        # 0x1400385f8
   140009837:	call   QWORD PTR [rip+0x1d83b]        # 0x140027078
   14000983d:	test   rax,rax
   140009840:	je     0x140009846
   140009842:	call   rax
   140009844:	jmp    0x140009846
   140009846:	call   0x14000984c
   14000984b:	nop
   14000984c:	sub    rsp,0x28
   140009850:	call   0x14000b18c
   140009855:	mov    rcx,QWORD PTR [rax+0xd0]
   14000985c:	test   rcx,rcx
   14000985f:	je     0x140009865
   140009861:	call   rcx
   140009863:	jmp    0x140009865
   140009865:	call   0x140007b78
   14000986a:	nop
   14000986b:	int3   
   14000986c:	sub    rsp,0x28
   140009870:	call   0x14000b18c
   140009875:	mov    rcx,QWORD PTR [rax+0xd8]
   14000987c:	test   rcx,rcx
   14000987f:	je     0x140009883
   140009881:	call   rcx
   140009883:	call   0x14000984c
   140009888:	int3   
   140009889:	int3   
   14000988a:	int3   
   14000988b:	int3   
   14000988c:	sub    rsp,0x28
   140009890:	lea    rcx,[rip+0xffffffffffffffb5]        # 0x14000984c
   140009897:	call   QWORD PTR [rip+0x1d7d3]        # 0x140027070
   14000989d:	mov    QWORD PTR [rip+0x2ed54],rax        # 0x1400385f8
   1400098a4:	add    rsp,0x28
   1400098a8:	ret    
   1400098a9:	int3   
   1400098aa:	int3   
   1400098ab:	int3   
   1400098ac:	sub    rsp,0x28
   1400098b0:	call   0x14000b18c
   1400098b5:	add    rax,0xb0
   1400098bb:	add    rsp,0x28
   1400098bf:	ret    
   1400098c0:	mov    rcx,QWORD PTR [rip+0x2ed49]        # 0x140038610
   1400098c7:	rex.W jmp QWORD PTR [rip+0x1d7aa]        # 0x140027078
   1400098ce:	int3   
   1400098cf:	int3   
   1400098d0:	sub    rsp,0x28
   1400098d4:	call   0x14000b18c
   1400098d9:	add    rax,0xa8
   1400098df:	add    rsp,0x28
   1400098e3:	ret    
   1400098e4:	mov    QWORD PTR [rip+0x2ed15],rcx        # 0x140038600
   1400098eb:	mov    QWORD PTR [rip+0x2ed16],rcx        # 0x140038608
   1400098f2:	mov    QWORD PTR [rip+0x2ed17],rcx        # 0x140038610
   1400098f9:	mov    QWORD PTR [rip+0x2ed18],rcx        # 0x140038618
   140009900:	ret    
   140009901:	int3   
   140009902:	int3   
   140009903:	int3   
   140009904:	mov    QWORD PTR [rsp+0x8],rbx
   140009909:	mov    QWORD PTR [rsp+0x10],rsi
   14000990e:	push   rdi
   14000990f:	sub    rsp,0x20
   140009913:	mov    ebx,ecx
   140009915:	xor    ecx,ecx
   140009917:	call   0x140008760
   14000991c:	nop
   14000991d:	test   ebx,ebx
   14000991f:	jne    0x14000993a
   140009921:	lea    rdi,[rip+0x2ecd8]        # 0x140038600
   140009928:	mov    rcx,QWORD PTR [rip+0x2ecd1]        # 0x140038600
   14000992f:	call   QWORD PTR [rip+0x1d743]        # 0x140027078
   140009935:	lea    esi,[rbx+0x2]
   140009938:	jmp    0x140009953
   14000993a:	lea    rdi,[rip+0x2ecc7]        # 0x140038608
   140009941:	mov    rcx,QWORD PTR [rip+0x2ecc0]        # 0x140038608
   140009948:	call   QWORD PTR [rip+0x1d72a]        # 0x140027078
   14000994e:	mov    esi,0x15
   140009953:	mov    rbx,rax
   140009956:	cmp    rax,0x2
   14000995a:	jb     0x140009967
   14000995c:	xor    ecx,ecx
   14000995e:	call   QWORD PTR [rip+0x1d70c]        # 0x140027070
   140009964:	mov    QWORD PTR [rdi],rax
   140009967:	xor    ecx,ecx
   140009969:	call   0x14000897c
   14000996e:	test   rbx,rbx
   140009971:	jne    0x140009977
   140009973:	xor    eax,eax
   140009975:	jmp    0x140009986
   140009977:	cmp    rbx,0x1
   14000997b:	je     0x140009981
   14000997d:	mov    ecx,esi
   14000997f:	call   rbx
   140009981:	mov    eax,0x1
   140009986:	mov    rbx,QWORD PTR [rsp+0x30]
   14000998b:	mov    rsi,QWORD PTR [rsp+0x38]
   140009990:	add    rsp,0x20
   140009994:	pop    rdi
   140009995:	ret    
   140009996:	int3   
   140009997:	int3   
   140009998:	mov    QWORD PTR [rsp+0x18],rbx
   14000999d:	mov    QWORD PTR [rsp+0x20],rsi
   1400099a2:	push   rdi
   1400099a3:	push   r12
   1400099a5:	push   r13
   1400099a7:	push   r14
   1400099a9:	push   r15
   1400099ab:	sub    rsp,0x30
   1400099af:	mov    ebx,ecx
   1400099b1:	xor    r13d,r13d
   1400099b4:	and    DWORD PTR [rsp+0x68],r13d
   1400099b9:	xor    edi,edi
   1400099bb:	mov    DWORD PTR [rsp+0x60],edi
   1400099bf:	xor    esi,esi
   1400099c1:	mov    edx,ecx
   1400099c3:	sub    edx,0x2
   1400099c6:	je     0x140009a90
   1400099cc:	sub    edx,0x2
   1400099cf:	je     0x140009a33
   1400099d1:	sub    edx,0x2
   1400099d4:	je     0x140009a23
   1400099d6:	sub    edx,0x2
   1400099d9:	je     0x140009a33
   1400099db:	sub    edx,0x3
   1400099de:	je     0x140009a33
   1400099e0:	sub    edx,0x4
   1400099e3:	je     0x140009a13
   1400099e5:	sub    edx,0x6
   1400099e8:	je     0x140009a00
   1400099ea:	dec    edx
   1400099ec:	je     0x140009a23
   1400099ee:	call   0x1400095b8
   1400099f3:	mov    DWORD PTR [rax],0x16
   1400099f9:	call   0x140008628
   1400099fe:	jmp    0x140009a40
   140009a00:	lea    r14,[rip+0x2ec01]        # 0x140038608
   140009a07:	mov    rcx,QWORD PTR [rip+0x2ebfa]        # 0x140038608
   140009a0e:	jmp    0x140009a9e
   140009a13:	lea    r14,[rip+0x2ebfe]        # 0x140038618
   140009a1a:	mov    rcx,QWORD PTR [rip+0x2ebf7]        # 0x140038618
   140009a21:	jmp    0x140009a9e
   140009a23:	lea    r14,[rip+0x2ebe6]        # 0x140038610
   140009a2a:	mov    rcx,QWORD PTR [rip+0x2ebdf]        # 0x140038610
   140009a31:	jmp    0x140009a9e
   140009a33:	call   0x14000b1b0
   140009a38:	mov    rsi,rax
   140009a3b:	test   rax,rax
   140009a3e:	jne    0x140009a48
   140009a40:	or     eax,0xffffffff
   140009a43:	jmp    0x140009bb3
   140009a48:	mov    rdx,QWORD PTR [rax+0xa0]
   140009a4f:	mov    rcx,rdx
   140009a52:	movsxd r8,DWORD PTR [rip+0x20fe7]        # 0x14002aa40
   140009a59:	cmp    DWORD PTR [rcx+0x4],ebx
   140009a5c:	je     0x140009a71
   140009a5e:	add    rcx,0x10
   140009a62:	mov    rax,r8
   140009a65:	shl    rax,0x4
   140009a69:	add    rax,rdx
   140009a6c:	cmp    rcx,rax
   140009a6f:	jb     0x140009a59
   140009a71:	mov    rax,r8
   140009a74:	shl    rax,0x4
   140009a78:	add    rax,rdx
   140009a7b:	cmp    rcx,rax
   140009a7e:	jae    0x140009a85
   140009a80:	cmp    DWORD PTR [rcx+0x4],ebx
   140009a83:	je     0x140009a87
   140009a85:	xor    ecx,ecx
   140009a87:	lea    r14,[rcx+0x8]
   140009a8b:	mov    r15,QWORD PTR [r14]
   140009a8e:	jmp    0x140009ab0
   140009a90:	lea    r14,[rip+0x2eb69]        # 0x140038600
   140009a97:	mov    rcx,QWORD PTR [rip+0x2eb62]        # 0x140038600
   140009a9e:	mov    edi,0x1
   140009aa3:	mov    DWORD PTR [rsp+0x60],edi
   140009aa7:	call   QWORD PTR [rip+0x1d5cb]        # 0x140027078
   140009aad:	mov    r15,rax
   140009ab0:	cmp    r15,0x1
   140009ab4:	jne    0x140009abd
   140009ab6:	xor    eax,eax
   140009ab8:	jmp    0x140009bb3
   140009abd:	test   r15,r15
   140009ac0:	jne    0x140009acc
   140009ac2:	lea    ecx,[r15+0x3]
   140009ac6:	call   0x1400060d4
   140009acb:	int3   
   140009acc:	test   edi,edi
   140009ace:	je     0x140009ad8
   140009ad0:	xor    ecx,ecx
   140009ad2:	call   0x140008760
   140009ad7:	nop
   140009ad8:	mov    r12d,0x910
   140009ade:	cmp    ebx,0xb
   140009ae1:	ja     0x140009b16
   140009ae3:	bt     r12d,ebx
   140009ae7:	jae    0x140009b16
   140009ae9:	mov    r13,QWORD PTR [rsi+0xa8]
   140009af0:	mov    QWORD PTR [rsp+0x28],r13
   140009af5:	and    QWORD PTR [rsi+0xa8],0x0
   140009afd:	cmp    ebx,0x8
   140009b00:	jne    0x140009b54
   140009b02:	mov    eax,DWORD PTR [rsi+0xb0]
   140009b08:	mov    DWORD PTR [rsp+0x68],eax
   140009b0c:	mov    DWORD PTR [rsi+0xb0],0x8c
   140009b16:	cmp    ebx,0x8
   140009b19:	jne    0x140009b54
   140009b1b:	mov    ecx,DWORD PTR [rip+0x20f27]        # 0x14002aa48
   140009b21:	mov    edx,ecx
   140009b23:	mov    DWORD PTR [rsp+0x20],ecx
   140009b27:	mov    eax,DWORD PTR [rip+0x20f1f]        # 0x14002aa4c
   140009b2d:	add    ecx,eax
   140009b2f:	cmp    edx,ecx
   140009b31:	jge    0x140009b5f
   140009b33:	movsxd rcx,edx
   140009b36:	add    rcx,rcx
   140009b39:	mov    rax,QWORD PTR [rsi+0xa0]
   140009b40:	and    QWORD PTR [rax+rcx*8+0x8],0x0
   140009b46:	inc    edx
   140009b48:	mov    DWORD PTR [rsp+0x20],edx
   140009b4c:	mov    ecx,DWORD PTR [rip+0x20ef6]        # 0x14002aa48
   140009b52:	jmp    0x140009b27
   140009b54:	xor    ecx,ecx
   140009b56:	call   QWORD PTR [rip+0x1d514]        # 0x140027070
   140009b5c:	mov    QWORD PTR [r14],rax
   140009b5f:	test   edi,edi
   140009b61:	je     0x140009b6a
   140009b63:	xor    ecx,ecx
   140009b65:	call   0x14000897c
   140009b6a:	cmp    ebx,0x8
   140009b6d:	jne    0x140009b7c
   140009b6f:	mov    edx,DWORD PTR [rsi+0xb0]
   140009b75:	mov    ecx,ebx
   140009b77:	call   r15
   140009b7a:	jmp    0x140009b81
   140009b7c:	mov    ecx,ebx
   140009b7e:	call   r15
   140009b81:	cmp    ebx,0xb
   140009b84:	ja     0x140009ab6
   140009b8a:	bt     r12d,ebx
   140009b8e:	jae    0x140009ab6
   140009b94:	mov    QWORD PTR [rsi+0xa8],r13
   140009b9b:	cmp    ebx,0x8
   140009b9e:	jne    0x140009ab6
   140009ba4:	mov    eax,DWORD PTR [rsp+0x68]
   140009ba8:	mov    DWORD PTR [rsi+0xb0],eax
   140009bae:	jmp    0x140009ab6
   140009bb3:	mov    rbx,QWORD PTR [rsp+0x70]
   140009bb8:	mov    rsi,QWORD PTR [rsp+0x78]
   140009bbd:	add    rsp,0x30
   140009bc1:	pop    r15
   140009bc3:	pop    r14
   140009bc5:	pop    r13
   140009bc7:	pop    r12
   140009bc9:	pop    rdi
   140009bca:	ret    
   140009bcb:	int3   
   140009bcc:	mov    r9d,ecx
   140009bcf:	movsxd rcx,DWORD PTR [rip+0x20e6a]        # 0x14002aa40
   140009bd6:	mov    rax,rdx
   140009bd9:	cmp    DWORD PTR [rax+0x4],r9d
   140009bdd:	je     0x140009bf2
   140009bdf:	mov    r8,rcx
   140009be2:	add    rax,0x10
   140009be6:	shl    r8,0x4
   140009bea:	add    r8,rdx
   140009bed:	cmp    rax,r8
   140009bf0:	jb     0x140009bd9
   140009bf2:	shl    rcx,0x4
   140009bf6:	add    rcx,rdx
   140009bf9:	cmp    rax,rcx
   140009bfc:	jae    0x140009c04
   140009bfe:	cmp    DWORD PTR [rax+0x4],r9d
   140009c02:	je     0x140009c06
   140009c04:	xor    eax,eax
   140009c06:	ret    
   140009c07:	int3   
   140009c08:	mov    QWORD PTR [rsp+0x8],rbx
   140009c0d:	mov    QWORD PTR [rsp+0x10],rsi
   140009c12:	mov    QWORD PTR [rsp+0x18],rdi
   140009c17:	push   r14
   140009c19:	sub    rsp,0x20
   140009c1d:	mov    rsi,rdx
   140009c20:	mov    edi,ecx
   140009c22:	xor    r14d,r14d
   140009c25:	xor    ebx,ebx
   140009c27:	lea    rax,[rdx-0x3]
   140009c2b:	cmp    rax,0x1
   140009c2f:	jbe    0x140009e5a
   140009c35:	cmp    ecx,0x16
   140009c38:	ja     0x140009d74
   140009c3e:	mov    eax,0x608044
   140009c43:	bt     eax,ecx
   140009c46:	jae    0x140009d74
   140009c4c:	xor    ecx,ecx
   140009c4e:	call   0x140008760
   140009c53:	nop
   140009c54:	cmp    edi,0x2
   140009c57:	je     0x140009c5e
   140009c59:	cmp    edi,0x15
   140009c5c:	jne    0x140009c9b
   140009c5e:	cmp    DWORD PTR [rip+0x2e9bb],0x0        # 0x140038620
   140009c65:	jne    0x140009c9b
   140009c67:	mov    edx,0x1
   140009c6c:	lea    rcx,[rip+0xfffffffffffffc91]        # 0x140009904
   140009c73:	call   QWORD PTR [rip+0x1d557]        # 0x1400271d0
   140009c79:	cmp    eax,0x1
   140009c7c:	jne    0x140009c86
   140009c7e:	mov    DWORD PTR [rip+0x2e99c],eax        # 0x140038620
   140009c84:	jmp    0x140009c9b
   140009c86:	call   0x140009548
   140009c8b:	mov    rbx,rax
   140009c8e:	call   QWORD PTR [rip+0x1d3ec]        # 0x140027080
   140009c94:	mov    DWORD PTR [rbx],eax
   140009c96:	mov    ebx,0x1
   140009c9b:	mov    ecx,edi
   140009c9d:	sub    ecx,0x2
   140009ca0:	je     0x140009d3a
   140009ca6:	sub    ecx,0x4
   140009ca9:	je     0x140009d12
   140009cab:	sub    ecx,0x9
   140009cae:	je     0x140009cea
   140009cb0:	sub    ecx,0x6
   140009cb3:	je     0x140009cbe
   140009cb5:	dec    ecx
   140009cb7:	je     0x140009d12
   140009cb9:	jmp    0x140009d60
   140009cbe:	mov    rcx,QWORD PTR [rip+0x2e943]        # 0x140038608
   140009cc5:	call   QWORD PTR [rip+0x1d3ad]        # 0x140027078
   140009ccb:	mov    r14,rax
   140009cce:	cmp    rsi,0x2
   140009cd2:	je     0x140009d60
   140009cd8:	mov    rcx,rsi
   140009cdb:	call   QWORD PTR [rip+0x1d38f]        # 0x140027070
   140009ce1:	mov    QWORD PTR [rip+0x2e920],rax        # 0x140038608
   140009ce8:	jmp    0x140009d60
   140009cea:	mov    rcx,QWORD PTR [rip+0x2e927]        # 0x140038618
   140009cf1:	call   QWORD PTR [rip+0x1d381]        # 0x140027078
   140009cf7:	mov    r14,rax
   140009cfa:	cmp    rsi,0x2
   140009cfe:	je     0x140009d60
   140009d00:	mov    rcx,rsi
   140009d03:	call   QWORD PTR [rip+0x1d367]        # 0x140027070
   140009d09:	mov    QWORD PTR [rip+0x2e908],rax        # 0x140038618
   140009d10:	jmp    0x140009d60
   140009d12:	mov    rcx,QWORD PTR [rip+0x2e8f7]        # 0x140038610
   140009d19:	call   QWORD PTR [rip+0x1d359]        # 0x140027078
   140009d1f:	mov    r14,rax
   140009d22:	cmp    rsi,0x2
   140009d26:	je     0x140009d60
   140009d28:	mov    rcx,rsi
   140009d2b:	call   QWORD PTR [rip+0x1d33f]        # 0x140027070
   140009d31:	mov    QWORD PTR [rip+0x2e8d8],rax        # 0x140038610
   140009d38:	jmp    0x140009d60
   140009d3a:	mov    rcx,QWORD PTR [rip+0x2e8bf]        # 0x140038600
   140009d41:	call   QWORD PTR [rip+0x1d331]        # 0x140027078
   140009d47:	mov    r14,rax
   140009d4a:	cmp    rsi,0x2
   140009d4e:	je     0x140009d60
   140009d50:	mov    rcx,rsi
   140009d53:	call   QWORD PTR [rip+0x1d317]        # 0x140027070
   140009d59:	mov    QWORD PTR [rip+0x2e8a0],rax        # 0x140038600
   140009d60:	xor    ecx,ecx
   140009d62:	call   0x14000897c
   140009d67:	test   ebx,ebx
   140009d69:	jne    0x140009e5a
   140009d6f:	jmp    0x140009e55
   140009d74:	cmp    ecx,0xb
   140009d77:	ja     0x140009e5a
   140009d7d:	mov    eax,0x910
   140009d82:	bt     eax,ecx
   140009d85:	jae    0x140009e5a
   140009d8b:	call   0x14000b1b0
   140009d90:	mov    rbx,rax
   140009d93:	test   rax,rax
   140009d96:	je     0x140009e5a
   140009d9c:	lea    r14,[rip+0x20bdd]        # 0x14002a980
   140009da3:	cmp    QWORD PTR [rax+0xa0],r14
   140009daa:	jne    0x140009dda
   140009dac:	movsxd rcx,DWORD PTR [rip+0x20c91]        # 0x14002aa44
   140009db3:	call   0x140007f54
   140009db8:	mov    QWORD PTR [rbx+0xa0],rax
   140009dbf:	test   rax,rax
   140009dc2:	je     0x140009e5a
   140009dc8:	movsxd r8,DWORD PTR [rip+0x20c75]        # 0x14002aa44
   140009dcf:	mov    rdx,r14
   140009dd2:	mov    rcx,rax
   140009dd5:	call   0x1400056d0
   140009dda:	mov    rdx,QWORD PTR [rbx+0xa0]
   140009de1:	mov    rcx,rdx
   140009de4:	movsxd r8,DWORD PTR [rip+0x20c55]        # 0x14002aa40
   140009deb:	cmp    DWORD PTR [rcx+0x4],edi
   140009dee:	je     0x140009e03
   140009df0:	add    rcx,0x10
   140009df4:	mov    rax,r8
   140009df7:	shl    rax,0x4
   140009dfb:	add    rax,rdx
   140009dfe:	cmp    rcx,rax
   140009e01:	jb     0x140009deb
   140009e03:	mov    rax,r8
   140009e06:	shl    rax,0x4
   140009e0a:	add    rax,rdx
   140009e0d:	cmp    rcx,rax
   140009e10:	jae    0x140009e17
   140009e12:	cmp    DWORD PTR [rcx+0x4],edi
   140009e15:	je     0x140009e19
   140009e17:	xor    ecx,ecx
   140009e19:	test   rcx,rcx
   140009e1c:	je     0x140009e5a
   140009e1e:	mov    r14,QWORD PTR [rcx+0x8]
   140009e22:	cmp    rsi,0x2
   140009e26:	je     0x140009e55
   140009e28:	lea    rdx,[rcx+0x4]
   140009e2c:	jmp    0x140009e51
   140009e2e:	mov    QWORD PTR [rdx+0x4],rsi
   140009e32:	lea    rdx,[rdx+0x10]
   140009e36:	movsxd rcx,DWORD PTR [rip+0x20c03]        # 0x14002aa40
   140009e3d:	shl    rcx,0x4
   140009e41:	add    rcx,QWORD PTR [rbx+0xa0]
   140009e48:	lea    rax,[rdx-0x4]
   140009e4c:	cmp    rax,rcx
   140009e4f:	jae    0x140009e55
   140009e51:	cmp    DWORD PTR [rdx],edi
   140009e53:	je     0x140009e2e
   140009e55:	mov    rax,r14
   140009e58:	jmp    0x140009e7d
   140009e5a:	cmp    edi,0x11
   140009e5d:	ja     0x140009e69
   140009e5f:	mov    eax,0x3200a
   140009e64:	bt     eax,edi
   140009e67:	jb     0x140009e79
   140009e69:	call   0x1400095b8
   140009e6e:	mov    DWORD PTR [rax],0x16
   140009e74:	call   0x140008628
   140009e79:	or     rax,0xffffffffffffffff
   140009e7d:	mov    rbx,QWORD PTR [rsp+0x30]
   140009e82:	mov    rsi,QWORD PTR [rsp+0x38]
   140009e87:	mov    rdi,QWORD PTR [rsp+0x40]
   140009e8c:	add    rsp,0x20
   140009e90:	pop    r14
   140009e92:	ret    
   140009e93:	int3   
   140009e94:	mov    QWORD PTR [rip+0x2e78d],rcx        # 0x140038628
   140009e9b:	ret    
   140009e9c:	mov    QWORD PTR [rsp+0x8],rbx
   140009ea1:	mov    QWORD PTR [rsp+0x10],rsi
   140009ea6:	mov    QWORD PTR [rsp+0x18],rdi
   140009eab:	push   r14
   140009ead:	sub    rsp,0x20
   140009eb1:	mov    r14,rcx
   140009eb4:	mov    rcx,QWORD PTR [rip+0x2e76d]        # 0x140038628
   140009ebb:	call   QWORD PTR [rip+0x1d1b7]        # 0x140027078
   140009ec1:	mov    rdi,rax
   140009ec4:	test   r14,r14
   140009ec7:	jne    0x140009ee1
   140009ec9:	call   0x1400095b8
   140009ece:	mov    ebx,0x16
   140009ed3:	mov    DWORD PTR [rax],ebx
   140009ed5:	call   0x140008628
   140009eda:	mov    eax,ebx
   140009edc:	jmp    0x140009fc0
   140009ee1:	and    DWORD PTR [r14],0x0
   140009ee5:	test   rax,rax
   140009ee8:	jne    0x140009f9c
   140009eee:	lea    rcx,[rip+0x209ab]        # 0x14002a8a0
   140009ef5:	xor    edx,edx
   140009ef7:	mov    r8d,0x800
   140009efd:	call   QWORD PTR [rip+0x1d2dd]        # 0x1400271e0
   140009f03:	mov    rsi,rax
   140009f06:	test   rax,rax
   140009f09:	jne    0x140009f30
   140009f0b:	call   QWORD PTR [rip+0x1d16f]        # 0x140027080
   140009f11:	cmp    eax,0x57
   140009f14:	jne    0x140009ec9
   140009f16:	lea    rcx,[rip+0x20983]        # 0x14002a8a0
   140009f1d:	xor    r8d,r8d
   140009f20:	xor    edx,edx
   140009f22:	call   QWORD PTR [rip+0x1d2b8]        # 0x1400271e0
   140009f28:	mov    rsi,rax
   140009f2b:	test   rax,rax
   140009f2e:	je     0x140009ec9
   140009f30:	lea    rdx,[rip+0x20989]        # 0x14002a8c0
   140009f37:	mov    rcx,rsi
   140009f3a:	call   QWORD PTR [rip+0x1d158]        # 0x140027098
   140009f40:	mov    rdi,rax
   140009f43:	test   rax,rax
   140009f46:	jne    0x140009f73
   140009f48:	call   0x1400095b8
   140009f4d:	mov    rbx,rax
   140009f50:	call   QWORD PTR [rip+0x1d12a]        # 0x140027080
   140009f56:	mov    ecx,eax
   140009f58:	call   0x140009650
   140009f5d:	mov    DWORD PTR [rbx],eax
   140009f5f:	call   0x140008628
   140009f64:	call   QWORD PTR [rip+0x1d116]        # 0x140027080
   140009f6a:	mov    ecx,eax
   140009f6c:	call   0x140009650
   140009f71:	jmp    0x140009fc0
   140009f73:	mov    rcx,rax
   140009f76:	call   QWORD PTR [rip+0x1d0f4]        # 0x140027070
   140009f7c:	xor    ecx,ecx
   140009f7e:	mov    rbx,rax
   140009f81:	call   QWORD PTR [rip+0x1d0e9]        # 0x140027070
   140009f87:	xchg   QWORD PTR [rip+0x2e69a],rbx        # 0x140038628
   140009f8e:	cmp    rbx,rax
   140009f91:	je     0x140009f9c
   140009f93:	mov    rcx,rsi
   140009f96:	call   QWORD PTR [rip+0x1d23c]        # 0x1400271d8
   140009f9c:	mov    edx,0x4
   140009fa1:	mov    rcx,r14
   140009fa4:	call   rdi
   140009fa6:	test   eax,eax
   140009fa8:	jne    0x140009fbe
   140009faa:	call   0x1400095b8
   140009faf:	mov    DWORD PTR [rax],0xc
   140009fb5:	call   0x1400095b8
   140009fba:	mov    eax,DWORD PTR [rax]
   140009fbc:	jmp    0x140009fc0
   140009fbe:	xor    eax,eax
   140009fc0:	mov    rbx,QWORD PTR [rsp+0x30]
   140009fc5:	mov    rsi,QWORD PTR [rsp+0x38]
   140009fca:	mov    rdi,QWORD PTR [rsp+0x40]
   140009fcf:	add    rsp,0x20
   140009fd3:	pop    r14
   140009fd5:	ret    
   140009fd6:	int3   
   140009fd7:	int3   
   140009fd8:	sub    rsp,0x28
   140009fdc:	cmp    DWORD PTR [rip+0x301a5],0x0        # 0x14003a188
   140009fe3:	jne    0x140009ff9
   140009fe5:	mov    ecx,0xfffffffd
   140009fea:	call   0x14000a4e8
   140009fef:	mov    DWORD PTR [rip+0x3018f],0x1        # 0x14003a188
   140009ff9:	xor    eax,eax
   140009ffb:	add    rsp,0x28
   140009fff:	ret    
   14000a000:	rex push rbx
   14000a002:	sub    rsp,0x20
   14000a006:	mov    rbx,rcx
   14000a009:	mov    BYTE PTR [rcx+0x18],0x0
   14000a00d:	test   rdx,rdx
   14000a010:	jne    0x14000a098
   14000a016:	call   0x14000b18c
   14000a01b:	mov    QWORD PTR [rbx+0x10],rax
   14000a01f:	mov    rdx,QWORD PTR [rax+0xc0]
   14000a026:	mov    QWORD PTR [rbx],rdx
   14000a029:	mov    rcx,QWORD PTR [rax+0xb8]
   14000a030:	mov    QWORD PTR [rbx+0x8],rcx
   14000a034:	cmp    rdx,QWORD PTR [rip+0x2cd45]        # 0x140036d80
   14000a03b:	je     0x14000a053
   14000a03d:	mov    eax,DWORD PTR [rax+0xc8]
   14000a043:	test   DWORD PTR [rip+0x2ceaf],eax        # 0x140036ef8
   14000a049:	jne    0x14000a053
   14000a04b:	call   0x14000fff4
   14000a050:	mov    QWORD PTR [rbx],rax
   14000a053:	mov    rax,QWORD PTR [rip+0x2c9d6]        # 0x140036a30
   14000a05a:	cmp    QWORD PTR [rbx+0x8],rax
   14000a05e:	je     0x14000a07b
   14000a060:	mov    rax,QWORD PTR [rbx+0x10]
   14000a064:	mov    ecx,DWORD PTR [rax+0xc8]
   14000a06a:	test   DWORD PTR [rip+0x2ce88],ecx        # 0x140036ef8
   14000a070:	jne    0x14000a07b
   14000a072:	call   0x14000a3f0
   14000a077:	mov    QWORD PTR [rbx+0x8],rax
   14000a07b:	mov    rcx,QWORD PTR [rbx+0x10]
   14000a07f:	mov    eax,DWORD PTR [rcx+0xc8]
   14000a085:	test   al,0x2
   14000a087:	jne    0x14000a09f
   14000a089:	or     eax,0x2
   14000a08c:	mov    DWORD PTR [rcx+0xc8],eax
   14000a092:	mov    BYTE PTR [rbx+0x18],0x1
   14000a096:	jmp    0x14000a09f
   14000a098:	movups xmm0,XMMWORD PTR [rdx]
   14000a09b:	movdqu XMMWORD PTR [rcx],xmm0
   14000a09f:	mov    rax,rbx
   14000a0a2:	add    rsp,0x20
   14000a0a6:	pop    rbx
   14000a0a7:	ret    
   14000a0a8:	cmp    BYTE PTR [rcx+0x18],0x0
   14000a0ac:	je     0x14000a0b9
   14000a0ae:	mov    rax,QWORD PTR [rcx+0x10]
   14000a0b2:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14000a0b9:	ret    
   14000a0ba:	int3   
   14000a0bb:	int3   
   14000a0bc:	sub    ecx,0x3a4
   14000a0c2:	je     0x14000a0ed
   14000a0c4:	sub    ecx,0x4
   14000a0c7:	je     0x14000a0e5
   14000a0c9:	sub    ecx,0xd
   14000a0cc:	je     0x14000a0dd
   14000a0ce:	dec    ecx
   14000a0d0:	je     0x14000a0d5
   14000a0d2:	xor    eax,eax
   14000a0d4:	ret    
   14000a0d5:	mov    rax,QWORD PTR [rip+0x20814]        # 0x14002a8f0
   14000a0dc:	ret    
   14000a0dd:	mov    rax,QWORD PTR [rip+0x20804]        # 0x14002a8e8
   14000a0e4:	ret    
   14000a0e5:	mov    rax,QWORD PTR [rip+0x207f4]        # 0x14002a8e0
   14000a0ec:	ret    
   14000a0ed:	mov    rax,QWORD PTR [rip+0x207e4]        # 0x14002a8d8
   14000a0f4:	ret    
   14000a0f5:	int3   
   14000a0f6:	int3   
   14000a0f7:	int3   
   14000a0f8:	mov    rax,rcx
   14000a0fb:	ret    
   14000a0fc:	rex push rbx
   14000a0fe:	sub    rsp,0x40
   14000a102:	mov    ebx,ecx
   14000a104:	lea    rcx,[rsp+0x20]
   14000a109:	xor    edx,edx
   14000a10b:	call   0x14000a000
   14000a110:	and    DWORD PTR [rip+0x2e539],0x0        # 0x140038650
   14000a117:	cmp    ebx,0xfffffffe
   14000a11a:	jne    0x14000a12e
   14000a11c:	mov    DWORD PTR [rip+0x2e52a],0x1        # 0x140038650
   14000a126:	call   QWORD PTR [rip+0x1d0cc]        # 0x1400271f8
   14000a12c:	jmp    0x14000a143
   14000a12e:	cmp    ebx,0xfffffffd
   14000a131:	jne    0x14000a147
   14000a133:	mov    DWORD PTR [rip+0x2e513],0x1        # 0x140038650
   14000a13d:	call   QWORD PTR [rip+0x1d0ad]        # 0x1400271f0
   14000a143:	mov    ebx,eax
   14000a145:	jmp    0x14000a15e
   14000a147:	cmp    ebx,0xfffffffc
   14000a14a:	jne    0x14000a15e
   14000a14c:	mov    rax,QWORD PTR [rsp+0x20]
   14000a151:	mov    DWORD PTR [rip+0x2e4f5],0x1        # 0x140038650
   14000a15b:	mov    ebx,DWORD PTR [rax+0x4]
   14000a15e:	cmp    BYTE PTR [rsp+0x38],0x0
   14000a163:	je     0x14000a171
   14000a165:	mov    rcx,QWORD PTR [rsp+0x30]
   14000a16a:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14000a171:	mov    eax,ebx
   14000a173:	add    rsp,0x40
   14000a177:	pop    rbx
   14000a178:	ret    
   14000a179:	int3   
   14000a17a:	int3   
   14000a17b:	int3   
   14000a17c:	mov    QWORD PTR [rsp+0x8],rbx
   14000a181:	mov    QWORD PTR [rsp+0x10],rbp
   14000a186:	mov    QWORD PTR [rsp+0x18],rsi
   14000a18b:	push   rdi
   14000a18c:	sub    rsp,0x20
   14000a190:	lea    rbx,[rcx+0x18]
   14000a194:	mov    rsi,rcx
   14000a197:	mov    ebp,0x101
   14000a19c:	mov    rcx,rbx
   14000a19f:	mov    r8d,ebp
   14000a1a2:	xor    edx,edx
   14000a1a4:	call   0x140007150
   14000a1a9:	xor    eax,eax
   14000a1ab:	lea    rdi,[rsi+0xc]
   14000a1af:	mov    QWORD PTR [rsi+0x4],rax
   14000a1b3:	mov    QWORD PTR [rsi+0x220],rax
   14000a1ba:	mov    ecx,0x6
   14000a1bf:	movzx  eax,ax
   14000a1c2:	rep stos WORD PTR es:[rdi],ax
   14000a1c5:	lea    rdi,[rip+0x2c544]        # 0x140036710
   14000a1cc:	sub    rdi,rsi
   14000a1cf:	mov    al,BYTE PTR [rdi+rbx*1]
   14000a1d2:	mov    BYTE PTR [rbx],al
   14000a1d4:	inc    rbx
   14000a1d7:	dec    rbp
   14000a1da:	jne    0x14000a1cf
   14000a1dc:	lea    rcx,[rsi+0x119]
   14000a1e3:	mov    edx,0x100
   14000a1e8:	mov    al,BYTE PTR [rcx+rdi*1]
   14000a1eb:	mov    BYTE PTR [rcx],al
   14000a1ed:	inc    rcx
   14000a1f0:	dec    rdx
   14000a1f3:	jne    0x14000a1e8
   14000a1f5:	mov    rbx,QWORD PTR [rsp+0x30]
   14000a1fa:	mov    rbp,QWORD PTR [rsp+0x38]
   14000a1ff:	mov    rsi,QWORD PTR [rsp+0x40]
   14000a204:	add    rsp,0x20
   14000a208:	pop    rdi
   14000a209:	ret    
   14000a20a:	int3   
   14000a20b:	int3   
   14000a20c:	mov    QWORD PTR [rsp+0x10],rbx
   14000a211:	mov    QWORD PTR [rsp+0x18],rdi
   14000a216:	push   rbp
   14000a217:	lea    rbp,[rsp-0x480]
   14000a21f:	sub    rsp,0x580
   14000a226:	mov    rax,QWORD PTR [rip+0x2c813]        # 0x140036a40
   14000a22d:	xor    rax,rsp
   14000a230:	mov    QWORD PTR [rbp+0x470],rax
   14000a237:	mov    rdi,rcx
   14000a23a:	mov    ecx,DWORD PTR [rcx+0x4]
   14000a23d:	lea    rdx,[rsp+0x50]
   14000a242:	call   QWORD PTR [rip+0x1cfb8]        # 0x140027200
   14000a248:	mov    ebx,0x100
   14000a24d:	test   eax,eax
   14000a24f:	je     0x14000a38a
   14000a255:	xor    eax,eax
   14000a257:	lea    rcx,[rsp+0x70]
   14000a25c:	mov    BYTE PTR [rcx],al
   14000a25e:	inc    eax
   14000a260:	inc    rcx
   14000a263:	cmp    eax,ebx
   14000a265:	jb     0x14000a25c
   14000a267:	mov    al,BYTE PTR [rsp+0x56]
   14000a26b:	mov    BYTE PTR [rsp+0x70],0x20
   14000a270:	lea    rdx,[rsp+0x56]
   14000a275:	jmp    0x14000a299
   14000a277:	movzx  r8d,BYTE PTR [rdx+0x1]
   14000a27c:	movzx  ecx,al
   14000a27f:	jmp    0x14000a28e
   14000a281:	cmp    ecx,ebx
   14000a283:	jae    0x14000a293
   14000a285:	mov    eax,ecx
   14000a287:	mov    BYTE PTR [rsp+rcx*1+0x70],0x20
   14000a28c:	inc    ecx
   14000a28e:	cmp    ecx,r8d
   14000a291:	jbe    0x14000a281
   14000a293:	add    rdx,0x2
   14000a297:	mov    al,BYTE PTR [rdx]
   14000a299:	test   al,al
   14000a29b:	jne    0x14000a277
   14000a29d:	mov    eax,DWORD PTR [rdi+0x4]
   14000a2a0:	and    DWORD PTR [rsp+0x30],0x0
   14000a2a5:	lea    r8,[rsp+0x70]
   14000a2aa:	mov    DWORD PTR [rsp+0x28],eax
   14000a2ae:	lea    rax,[rbp+0x270]
   14000a2b5:	mov    r9d,ebx
   14000a2b8:	mov    edx,0x1
   14000a2bd:	xor    ecx,ecx
   14000a2bf:	mov    QWORD PTR [rsp+0x20],rax
   14000a2c4:	call   0x1400105e8
   14000a2c9:	and    DWORD PTR [rsp+0x40],0x0
   14000a2ce:	mov    eax,DWORD PTR [rdi+0x4]
   14000a2d1:	mov    rdx,QWORD PTR [rdi+0x220]
   14000a2d8:	mov    DWORD PTR [rsp+0x38],eax
   14000a2dc:	lea    rax,[rbp+0x70]
   14000a2e0:	mov    DWORD PTR [rsp+0x30],ebx
   14000a2e4:	mov    QWORD PTR [rsp+0x28],rax
   14000a2e9:	lea    r9,[rsp+0x70]
   14000a2ee:	mov    r8d,ebx
   14000a2f1:	xor    ecx,ecx
   14000a2f3:	mov    DWORD PTR [rsp+0x20],ebx
   14000a2f7:	call   0x1400103d8
   14000a2fc:	and    DWORD PTR [rsp+0x40],0x0
   14000a301:	mov    eax,DWORD PTR [rdi+0x4]
   14000a304:	mov    rdx,QWORD PTR [rdi+0x220]
   14000a30b:	mov    DWORD PTR [rsp+0x38],eax
   14000a30f:	lea    rax,[rbp+0x170]
   14000a316:	mov    DWORD PTR [rsp+0x30],ebx
   14000a31a:	mov    QWORD PTR [rsp+0x28],rax
   14000a31f:	lea    r9,[rsp+0x70]
   14000a324:	mov    r8d,0x200
   14000a32a:	xor    ecx,ecx
   14000a32c:	mov    DWORD PTR [rsp+0x20],ebx
   14000a330:	call   0x1400103d8
   14000a335:	lea    r8,[rbp+0x70]
   14000a339:	lea    r9,[rbp+0x170]
   14000a340:	sub    r8,rdi
   14000a343:	lea    rdx,[rbp+0x270]
   14000a34a:	lea    rcx,[rdi+0x19]
   14000a34e:	sub    r9,rdi
   14000a351:	test   BYTE PTR [rdx],0x1
   14000a354:	je     0x14000a360
   14000a356:	or     BYTE PTR [rcx],0x10
   14000a359:	mov    al,BYTE PTR [r8+rcx*1-0x19]
   14000a35e:	jmp    0x14000a36d
   14000a360:	test   BYTE PTR [rdx],0x2
   14000a363:	je     0x14000a375
   14000a365:	or     BYTE PTR [rcx],0x20
   14000a368:	mov    al,BYTE PTR [r9+rcx*1-0x19]
   14000a36d:	mov    BYTE PTR [rcx+0x100],al
   14000a373:	jmp    0x14000a37c
   14000a375:	mov    BYTE PTR [rcx+0x100],0x0
   14000a37c:	inc    rcx
   14000a37f:	add    rdx,0x2
   14000a383:	dec    rbx
   14000a386:	jne    0x14000a351
   14000a388:	jmp    0x14000a3c9
   14000a38a:	xor    edx,edx
   14000a38c:	lea    rcx,[rdi+0x19]
   14000a390:	lea    r8d,[rdx-0x61]
   14000a394:	lea    eax,[r8+0x20]
   14000a398:	cmp    eax,0x19
   14000a39b:	ja     0x14000a3a5
   14000a39d:	or     BYTE PTR [rcx],0x10
   14000a3a0:	lea    eax,[rdx+0x20]
   14000a3a3:	jmp    0x14000a3b1
   14000a3a5:	cmp    r8d,0x19
   14000a3a9:	ja     0x14000a3b9
   14000a3ab:	or     BYTE PTR [rcx],0x20
   14000a3ae:	lea    eax,[rdx-0x20]
   14000a3b1:	mov    BYTE PTR [rcx+0x100],al
   14000a3b7:	jmp    0x14000a3c0
   14000a3b9:	mov    BYTE PTR [rcx+0x100],0x0
   14000a3c0:	inc    edx
   14000a3c2:	inc    rcx
   14000a3c5:	cmp    edx,ebx
   14000a3c7:	jb     0x14000a390
   14000a3c9:	mov    rcx,QWORD PTR [rbp+0x470]
   14000a3d0:	xor    rcx,rsp
   14000a3d3:	call   0x14000d0a0
   14000a3d8:	lea    r11,[rsp+0x580]
   14000a3e0:	mov    rbx,QWORD PTR [r11+0x18]
   14000a3e4:	mov    rdi,QWORD PTR [r11+0x20]
   14000a3e8:	mov    rsp,r11
   14000a3eb:	pop    rbp
   14000a3ec:	ret    
   14000a3ed:	int3   
   14000a3ee:	int3   
   14000a3ef:	int3   
   14000a3f0:	mov    QWORD PTR [rsp+0x10],rbx
   14000a3f5:	push   rdi
   14000a3f6:	sub    rsp,0x20
   14000a3fa:	call   0x14000b18c
   14000a3ff:	mov    rdi,rax
   14000a402:	mov    ecx,DWORD PTR [rip+0x2caf0]        # 0x140036ef8
   14000a408:	test   DWORD PTR [rax+0xc8],ecx
   14000a40e:	je     0x14000a423
   14000a410:	cmp    QWORD PTR [rax+0xc0],0x0
   14000a418:	je     0x14000a423
   14000a41a:	mov    rbx,QWORD PTR [rax+0xb8]
   14000a421:	jmp    0x14000a48f
   14000a423:	mov    ecx,0xd
   14000a428:	call   0x140008760
   14000a42d:	nop
   14000a42e:	mov    rbx,QWORD PTR [rdi+0xb8]
   14000a435:	mov    QWORD PTR [rsp+0x30],rbx
   14000a43a:	cmp    rbx,QWORD PTR [rip+0x2c5ef]        # 0x140036a30
   14000a441:	je     0x14000a485
   14000a443:	test   rbx,rbx
   14000a446:	je     0x14000a463
   14000a448:	lock dec DWORD PTR [rbx]
   14000a44b:	jne    0x14000a463
   14000a44d:	lea    rax,[rip+0x2c2bc]        # 0x140036710
   14000a454:	mov    rcx,QWORD PTR [rsp+0x30]
   14000a459:	cmp    rcx,rax
   14000a45c:	je     0x14000a463
   14000a45e:	call   0x140006444
   14000a463:	mov    rax,QWORD PTR [rip+0x2c5c6]        # 0x140036a30
   14000a46a:	mov    QWORD PTR [rdi+0xb8],rax
   14000a471:	mov    rax,QWORD PTR [rip+0x2c5b8]        # 0x140036a30
   14000a478:	mov    QWORD PTR [rsp+0x30],rax
   14000a47d:	lock inc DWORD PTR [rax]
   14000a480:	mov    rbx,QWORD PTR [rsp+0x30]
   14000a485:	mov    ecx,0xd
   14000a48a:	call   0x14000897c
   14000a48f:	test   rbx,rbx
   14000a492:	jne    0x14000a49c
   14000a494:	lea    ecx,[rbx+0x20]
   14000a497:	call   0x140005ff4
   14000a49c:	mov    rax,rbx
   14000a49f:	mov    rbx,QWORD PTR [rsp+0x38]
   14000a4a4:	add    rsp,0x20
   14000a4a8:	pop    rdi
   14000a4a9:	ret    
   14000a4aa:	int3   
   14000a4ab:	int3   
   14000a4ac:	sub    rsp,0x48
   14000a4b0:	lea    rcx,[rsp+0x20]
   14000a4b5:	xor    edx,edx
   14000a4b7:	call   0x14000a000
   14000a4bc:	mov    rax,QWORD PTR [rsp+0x28]
   14000a4c1:	cmp    DWORD PTR [rax+0x8],0x0
   14000a4c5:	je     0x14000a4cc
   14000a4c7:	mov    eax,DWORD PTR [rax+0x4]
   14000a4ca:	jmp    0x14000a4ce
   14000a4cc:	xor    eax,eax
   14000a4ce:	cmp    BYTE PTR [rsp+0x38],0x0
   14000a4d3:	je     0x14000a4e1
   14000a4d5:	mov    rcx,QWORD PTR [rsp+0x30]
   14000a4da:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14000a4e1:	add    rsp,0x48
   14000a4e5:	ret    
   14000a4e6:	int3   
   14000a4e7:	int3   
   14000a4e8:	mov    rax,rsp
   14000a4eb:	mov    QWORD PTR [rax+0x8],rbx
   14000a4ef:	mov    QWORD PTR [rax+0x10],rsi
   14000a4f3:	mov    QWORD PTR [rax+0x18],rdi
   14000a4f7:	mov    QWORD PTR [rax+0x20],r14
   14000a4fb:	push   r15
   14000a4fd:	sub    rsp,0x30
   14000a501:	mov    edi,ecx
   14000a503:	or     r15d,0xffffffff
   14000a507:	call   0x14000b18c
   14000a50c:	mov    rsi,rax
   14000a50f:	call   0x14000a3f0
   14000a514:	mov    rbx,QWORD PTR [rsi+0xb8]
   14000a51b:	mov    ecx,edi
   14000a51d:	call   0x14000a0fc
   14000a522:	mov    r14d,eax
   14000a525:	cmp    eax,DWORD PTR [rbx+0x4]
   14000a528:	je     0x14000a709
   14000a52e:	mov    ecx,0x228
   14000a533:	call   0x140007f54
   14000a538:	mov    rbx,rax
   14000a53b:	xor    edi,edi
   14000a53d:	test   rax,rax
   14000a540:	je     0x14000a70e
   14000a546:	mov    rax,QWORD PTR [rsi+0xb8]
   14000a54d:	mov    rcx,rbx
   14000a550:	lea    edx,[rdi+0x4]
   14000a553:	lea    r8d,[rdx+0x7c]
   14000a557:	movups xmm0,XMMWORD PTR [rax]
   14000a55a:	movups XMMWORD PTR [rcx],xmm0
   14000a55d:	movups xmm1,XMMWORD PTR [rax+0x10]
   14000a561:	movups XMMWORD PTR [rcx+0x10],xmm1
   14000a565:	movups xmm0,XMMWORD PTR [rax+0x20]
   14000a569:	movups XMMWORD PTR [rcx+0x20],xmm0
   14000a56d:	movups xmm1,XMMWORD PTR [rax+0x30]
   14000a571:	movups XMMWORD PTR [rcx+0x30],xmm1
   14000a575:	movups xmm0,XMMWORD PTR [rax+0x40]
   14000a579:	movups XMMWORD PTR [rcx+0x40],xmm0
   14000a57d:	movups xmm1,XMMWORD PTR [rax+0x50]
   14000a581:	movups XMMWORD PTR [rcx+0x50],xmm1
   14000a585:	movups xmm0,XMMWORD PTR [rax+0x60]
   14000a589:	movups XMMWORD PTR [rcx+0x60],xmm0
   14000a58d:	add    rcx,r8
   14000a590:	movups xmm1,XMMWORD PTR [rax+0x70]
   14000a594:	movups XMMWORD PTR [rcx-0x10],xmm1
   14000a598:	add    rax,r8
   14000a59b:	dec    rdx
   14000a59e:	jne    0x14000a557
   14000a5a0:	movups xmm0,XMMWORD PTR [rax]
   14000a5a3:	movups XMMWORD PTR [rcx],xmm0
   14000a5a6:	movups xmm1,XMMWORD PTR [rax+0x10]
   14000a5aa:	movups XMMWORD PTR [rcx+0x10],xmm1
   14000a5ae:	mov    rax,QWORD PTR [rax+0x20]
   14000a5b2:	mov    QWORD PTR [rcx+0x20],rax
   14000a5b6:	mov    DWORD PTR [rbx],edi
   14000a5b8:	mov    rdx,rbx
   14000a5bb:	mov    ecx,r14d
   14000a5be:	call   0x14000a72c
   14000a5c3:	mov    r15d,eax
   14000a5c6:	test   eax,eax
   14000a5c8:	jne    0x14000a6e3
   14000a5ce:	mov    rcx,QWORD PTR [rsi+0xb8]
   14000a5d5:	lea    r14,[rip+0x2c134]        # 0x140036710
   14000a5dc:	lock dec DWORD PTR [rcx]
   14000a5df:	jne    0x14000a5f2
   14000a5e1:	mov    rcx,QWORD PTR [rsi+0xb8]
   14000a5e8:	cmp    rcx,r14
   14000a5eb:	je     0x14000a5f2
   14000a5ed:	call   0x140006444
   14000a5f2:	mov    QWORD PTR [rsi+0xb8],rbx
   14000a5f9:	lock inc DWORD PTR [rbx]
   14000a5fc:	test   BYTE PTR [rsi+0xc8],0x2
   14000a603:	jne    0x14000a70e
   14000a609:	test   BYTE PTR [rip+0x2c8e8],0x1        # 0x140036ef8
   14000a610:	jne    0x14000a70e
   14000a616:	mov    esi,0xd
   14000a61b:	mov    ecx,esi
   14000a61d:	call   0x140008760
   14000a622:	nop
   14000a623:	mov    eax,DWORD PTR [rbx+0x4]
   14000a626:	mov    DWORD PTR [rip+0x2e004],eax        # 0x140038630
   14000a62c:	mov    eax,DWORD PTR [rbx+0x8]
   14000a62f:	mov    DWORD PTR [rip+0x2dfff],eax        # 0x140038634
   14000a635:	mov    rax,QWORD PTR [rbx+0x220]
   14000a63c:	mov    QWORD PTR [rip+0x2e005],rax        # 0x140038648
   14000a643:	mov    edx,edi
   14000a645:	lea    r8,[rip+0xffffffffffff59b4]        # 0x140000000
   14000a64c:	mov    DWORD PTR [rsp+0x20],edx
   14000a650:	cmp    edx,0x5
   14000a653:	jge    0x14000a66a
   14000a655:	movsxd rcx,edx
   14000a658:	movzx  eax,WORD PTR [rbx+rcx*2+0xc]
   14000a65d:	mov    WORD PTR [r8+rcx*2+0x38638],ax
   14000a666:	inc    edx
   14000a668:	jmp    0x14000a64c
   14000a66a:	mov    edx,edi
   14000a66c:	mov    DWORD PTR [rsp+0x20],edx
   14000a670:	cmp    edx,0x101
   14000a676:	jge    0x14000a68b
   14000a678:	movsxd rcx,edx
   14000a67b:	mov    al,BYTE PTR [rcx+rbx*1+0x18]
   14000a67f:	mov    BYTE PTR [rcx+r8*1+0x36500],al
   14000a687:	inc    edx
   14000a689:	jmp    0x14000a66c
   14000a68b:	mov    DWORD PTR [rsp+0x20],edi
   14000a68f:	cmp    edi,0x100
   14000a695:	jge    0x14000a6ad
   14000a697:	movsxd rcx,edi
   14000a69a:	mov    al,BYTE PTR [rcx+rbx*1+0x119]
   14000a6a1:	mov    BYTE PTR [rcx+r8*1+0x36610],al
   14000a6a9:	inc    edi
   14000a6ab:	jmp    0x14000a68b
   14000a6ad:	mov    rcx,QWORD PTR [rip+0x2c37c]        # 0x140036a30
   14000a6b4:	or     eax,0xffffffff
   14000a6b7:	lock xadd DWORD PTR [rcx],eax
   14000a6bb:	dec    eax
   14000a6bd:	jne    0x14000a6d0
   14000a6bf:	mov    rcx,QWORD PTR [rip+0x2c36a]        # 0x140036a30
   14000a6c6:	cmp    rcx,r14
   14000a6c9:	je     0x14000a6d0
   14000a6cb:	call   0x140006444
   14000a6d0:	mov    QWORD PTR [rip+0x2c359],rbx        # 0x140036a30
   14000a6d7:	lock inc DWORD PTR [rbx]
   14000a6da:	mov    ecx,esi
   14000a6dc:	call   0x14000897c
   14000a6e1:	jmp    0x14000a70e
   14000a6e3:	cmp    eax,0xffffffff
   14000a6e6:	jne    0x14000a70e
   14000a6e8:	lea    r14,[rip+0x2c021]        # 0x140036710
   14000a6ef:	cmp    rbx,r14
   14000a6f2:	je     0x14000a6fc
   14000a6f4:	mov    rcx,rbx
   14000a6f7:	call   0x140006444
   14000a6fc:	call   0x1400095b8
   14000a701:	mov    DWORD PTR [rax],0x16
   14000a707:	jmp    0x14000a70e
   14000a709:	xor    edi,edi
   14000a70b:	mov    r15d,edi
   14000a70e:	mov    eax,r15d
   14000a711:	mov    rbx,QWORD PTR [rsp+0x40]
   14000a716:	mov    rsi,QWORD PTR [rsp+0x48]
   14000a71b:	mov    rdi,QWORD PTR [rsp+0x50]
   14000a720:	mov    r14,QWORD PTR [rsp+0x58]
   14000a725:	add    rsp,0x30
   14000a729:	pop    r15
   14000a72b:	ret    
   14000a72c:	mov    QWORD PTR [rsp+0x18],rbx
   14000a731:	mov    QWORD PTR [rsp+0x20],rbp
   14000a736:	push   rsi
   14000a737:	push   rdi
   14000a738:	push   r12
   14000a73a:	push   r14
   14000a73c:	push   r15
   14000a73e:	sub    rsp,0x40
   14000a742:	mov    rax,QWORD PTR [rip+0x2c2f7]        # 0x140036a40
   14000a749:	xor    rax,rsp
   14000a74c:	mov    QWORD PTR [rsp+0x38],rax
   14000a751:	mov    rbx,rdx
   14000a754:	call   0x14000a0fc
   14000a759:	xor    esi,esi
   14000a75b:	mov    edi,eax
   14000a75d:	test   eax,eax
   14000a75f:	jne    0x14000a76e
   14000a761:	mov    rcx,rbx
   14000a764:	call   0x14000a17c
   14000a769:	jmp    0x14000a9b2
   14000a76e:	lea    r12,[rip+0x2c1cb]        # 0x140036940
   14000a775:	mov    ebp,esi
   14000a777:	mov    r15d,0x1
   14000a77d:	mov    rax,r12
   14000a780:	cmp    DWORD PTR [rax],edi
   14000a782:	je     0x14000a8c0
   14000a788:	add    ebp,r15d
   14000a78b:	add    rax,0x30
   14000a78f:	cmp    ebp,0x5
   14000a792:	jb     0x14000a780
   14000a794:	lea    eax,[rdi-0xfde8]
   14000a79a:	cmp    eax,r15d
   14000a79d:	jbe    0x14000a8b8
   14000a7a3:	movzx  ecx,di
   14000a7a6:	call   QWORD PTR [rip+0x1ca3c]        # 0x1400271e8
   14000a7ac:	test   eax,eax
   14000a7ae:	je     0x14000a8b8
   14000a7b4:	lea    rdx,[rsp+0x20]
   14000a7b9:	mov    ecx,edi
   14000a7bb:	call   QWORD PTR [rip+0x1ca3f]        # 0x140027200
   14000a7c1:	test   eax,eax
   14000a7c3:	je     0x14000a8ac
   14000a7c9:	lea    rcx,[rbx+0x18]
   14000a7cd:	xor    edx,edx
   14000a7cf:	mov    r8d,0x101
   14000a7d5:	call   0x140007150
   14000a7da:	mov    DWORD PTR [rbx+0x4],edi
   14000a7dd:	mov    QWORD PTR [rbx+0x220],rsi
   14000a7e4:	cmp    DWORD PTR [rsp+0x20],r15d
   14000a7e9:	jbe    0x14000a895
   14000a7ef:	lea    rdx,[rsp+0x26]
   14000a7f4:	cmp    BYTE PTR [rsp+0x26],sil
   14000a7f9:	je     0x14000a834
   14000a7fb:	cmp    BYTE PTR [rdx+0x1],sil
   14000a7ff:	je     0x14000a834
   14000a801:	movzx  edi,BYTE PTR [rdx+0x1]
   14000a805:	movzx  r8d,BYTE PTR [rdx]
   14000a809:	cmp    r8d,edi
   14000a80c:	ja     0x14000a82b
   14000a80e:	lea    ecx,[r8+0x1]
   14000a812:	lea    rax,[rbx+0x18]
   14000a816:	add    rax,rcx
   14000a819:	sub    edi,r8d
   14000a81c:	lea    ecx,[r15+rdi*1]
   14000a820:	or     BYTE PTR [rax],0x4
   14000a823:	add    rax,r15
   14000a826:	sub    rcx,r15
   14000a829:	jne    0x14000a820
   14000a82b:	add    rdx,0x2
   14000a82f:	cmp    BYTE PTR [rdx],sil
   14000a832:	jne    0x14000a7fb
   14000a834:	lea    rax,[rbx+0x1a]
   14000a838:	mov    ecx,0xfe
   14000a83d:	or     BYTE PTR [rax],0x8
   14000a840:	add    rax,r15
   14000a843:	sub    rcx,r15
   14000a846:	jne    0x14000a83d
   14000a848:	mov    ecx,DWORD PTR [rbx+0x4]
   14000a84b:	sub    ecx,0x3a4
   14000a851:	je     0x14000a881
   14000a853:	sub    ecx,0x4
   14000a856:	je     0x14000a878
   14000a858:	sub    ecx,0xd
   14000a85b:	je     0x14000a86f
   14000a85d:	dec    ecx
   14000a85f:	je     0x14000a866
   14000a861:	mov    rax,rsi
   14000a864:	jmp    0x14000a888
   14000a866:	mov    rax,QWORD PTR [rip+0x20083]        # 0x14002a8f0
   14000a86d:	jmp    0x14000a888
   14000a86f:	mov    rax,QWORD PTR [rip+0x20072]        # 0x14002a8e8
   14000a876:	jmp    0x14000a888
   14000a878:	mov    rax,QWORD PTR [rip+0x20061]        # 0x14002a8e0
   14000a87f:	jmp    0x14000a888
   14000a881:	mov    rax,QWORD PTR [rip+0x20050]        # 0x14002a8d8
   14000a888:	mov    QWORD PTR [rbx+0x220],rax
   14000a88f:	mov    DWORD PTR [rbx+0x8],r15d
   14000a893:	jmp    0x14000a898
   14000a895:	mov    DWORD PTR [rbx+0x8],esi
   14000a898:	lea    rdi,[rbx+0xc]
   14000a89c:	movzx  eax,si
   14000a89f:	mov    ecx,0x6
   14000a8a4:	rep stos WORD PTR es:[rdi],ax
   14000a8a7:	jmp    0x14000a9aa
   14000a8ac:	cmp    DWORD PTR [rip+0x2dd9e],esi        # 0x140038650
   14000a8b2:	jne    0x14000a761
   14000a8b8:	or     eax,0xffffffff
   14000a8bb:	jmp    0x14000a9b4
   14000a8c0:	lea    rcx,[rbx+0x18]
   14000a8c4:	xor    edx,edx
   14000a8c6:	mov    r8d,0x101
   14000a8cc:	call   0x140007150
   14000a8d1:	mov    eax,ebp
   14000a8d3:	lea    r9,[r12+0x10]
   14000a8d8:	lea    r11,[rax+rax*2]
   14000a8dc:	lea    r14,[rip+0x2c055]        # 0x140036938
   14000a8e3:	mov    ebp,0x4
   14000a8e8:	shl    r11,0x4
   14000a8ec:	add    r9,r11
   14000a8ef:	mov    rdx,r9
   14000a8f2:	cmp    BYTE PTR [r9],sil
   14000a8f5:	je     0x14000a937
   14000a8f7:	cmp    BYTE PTR [rdx+0x1],sil
   14000a8fb:	je     0x14000a937
   14000a8fd:	movzx  r8d,BYTE PTR [rdx]
   14000a901:	movzx  eax,BYTE PTR [rdx+0x1]
   14000a905:	cmp    r8d,eax
   14000a908:	ja     0x14000a92e
   14000a90a:	lea    r10d,[r8+0x1]
   14000a90e:	cmp    r10d,0x101
   14000a915:	jae    0x14000a92e
   14000a917:	mov    al,BYTE PTR [r14]
   14000a91a:	add    r8d,r15d
   14000a91d:	or     BYTE PTR [r10+rbx*1+0x18],al
   14000a922:	movzx  eax,BYTE PTR [rdx+0x1]
   14000a926:	add    r10d,r15d
   14000a929:	cmp    r8d,eax
   14000a92c:	jbe    0x14000a90e
   14000a92e:	add    rdx,0x2
   14000a932:	cmp    BYTE PTR [rdx],sil
   14000a935:	jne    0x14000a8f7
   14000a937:	add    r9,0x8
   14000a93b:	add    r14,r15
   14000a93e:	sub    rbp,r15
   14000a941:	jne    0x14000a8ef
   14000a943:	mov    DWORD PTR [rbx+0x4],edi
   14000a946:	mov    DWORD PTR [rbx+0x8],r15d
   14000a94a:	sub    edi,0x3a4
   14000a950:	je     0x14000a97b
   14000a952:	sub    edi,0x4
   14000a955:	je     0x14000a972
   14000a957:	sub    edi,0xd
   14000a95a:	je     0x14000a969
   14000a95c:	dec    edi
   14000a95e:	jne    0x14000a982
   14000a960:	mov    rsi,QWORD PTR [rip+0x1ff89]        # 0x14002a8f0
   14000a967:	jmp    0x14000a982
   14000a969:	mov    rsi,QWORD PTR [rip+0x1ff78]        # 0x14002a8e8
   14000a970:	jmp    0x14000a982
   14000a972:	mov    rsi,QWORD PTR [rip+0x1ff67]        # 0x14002a8e0
   14000a979:	jmp    0x14000a982
   14000a97b:	mov    rsi,QWORD PTR [rip+0x1ff56]        # 0x14002a8d8
   14000a982:	sub    r11,rbx
   14000a985:	mov    QWORD PTR [rbx+0x220],rsi
   14000a98c:	lea    rcx,[rbx+0xc]
   14000a990:	lea    rdi,[r11+r12*1]
   14000a994:	mov    edx,0x6
   14000a999:	movzx  eax,WORD PTR [rdi+rcx*1-0x8]
   14000a99e:	mov    WORD PTR [rcx],ax
   14000a9a1:	lea    rcx,[rcx+0x2]
   14000a9a5:	sub    rdx,r15
   14000a9a8:	jne    0x14000a999
   14000a9aa:	mov    rcx,rbx
   14000a9ad:	call   0x14000a20c
   14000a9b2:	xor    eax,eax
   14000a9b4:	mov    rcx,QWORD PTR [rsp+0x38]
   14000a9b9:	xor    rcx,rsp
   14000a9bc:	call   0x14000d0a0
   14000a9c1:	lea    r11,[rsp+0x40]
   14000a9c6:	mov    rbx,QWORD PTR [r11+0x40]
   14000a9ca:	mov    rbp,QWORD PTR [r11+0x48]
   14000a9ce:	mov    rsp,r11
   14000a9d1:	pop    r15
   14000a9d3:	pop    r14
   14000a9d5:	pop    r12
   14000a9d7:	pop    rdi
   14000a9d8:	pop    rsi
   14000a9d9:	ret    
   14000a9da:	int3   
   14000a9db:	int3   
   14000a9dc:	test   ecx,ecx
   14000a9de:	je     0x14000aa12
   14000a9e0:	push   rbx
   14000a9e1:	sub    rsp,0x20
   14000a9e5:	test   DWORD PTR [rdx+0x18],0x1000
   14000a9ec:	mov    rbx,rdx
   14000a9ef:	je     0x14000aa0d
   14000a9f1:	mov    rcx,rdx
   14000a9f4:	call   0x140010914
   14000a9f9:	and    DWORD PTR [rbx+0x18],0xffffeeff
   14000aa00:	and    DWORD PTR [rbx+0x24],0x0
   14000aa04:	and    QWORD PTR [rbx],0x0
   14000aa08:	and    QWORD PTR [rbx+0x10],0x0
   14000aa0d:	add    rsp,0x20
   14000aa11:	pop    rbx
   14000aa12:	ret    
   14000aa13:	int3   
   14000aa14:	mov    QWORD PTR [rsp+0x8],rbx
   14000aa19:	mov    QWORD PTR [rsp+0x10],rdi
   14000aa1e:	push   r14
   14000aa20:	sub    rsp,0x20
   14000aa24:	mov    rbx,rcx
   14000aa27:	call   0x140010840
   14000aa2c:	mov    ecx,eax
   14000aa2e:	call   0x140010868
   14000aa33:	test   eax,eax
   14000aa35:	je     0x14000aad0
   14000aa3b:	call   0x14001072c
   14000aa40:	add    rax,0x30
   14000aa44:	cmp    rbx,rax
   14000aa47:	jne    0x14000aa4d
   14000aa49:	xor    eax,eax
   14000aa4b:	jmp    0x14000aa60
   14000aa4d:	call   0x14001072c
   14000aa52:	add    rax,0x60
   14000aa56:	cmp    rbx,rax
   14000aa59:	jne    0x14000aad0
   14000aa5b:	mov    eax,0x1
   14000aa60:	inc    DWORD PTR [rip+0x2df6a]        # 0x1400389d0
   14000aa66:	test   DWORD PTR [rbx+0x18],0x10c
   14000aa6d:	jne    0x14000aad0
   14000aa6f:	lea    r14,[rip+0x2dbe2]        # 0x140038658
   14000aa76:	movsxd rdi,eax
   14000aa79:	mov    rax,QWORD PTR [r14+rdi*8]
   14000aa7d:	test   rax,rax
   14000aa80:	jne    0x14000aaad
   14000aa82:	mov    ecx,0x1000
   14000aa87:	call   0x140007f54
   14000aa8c:	mov    QWORD PTR [r14+rdi*8],rax
   14000aa90:	test   rax,rax
   14000aa93:	jne    0x14000aaad
   14000aa95:	lea    rax,[rbx+0x20]
   14000aa99:	mov    QWORD PTR [rbx+0x10],rax
   14000aa9d:	mov    QWORD PTR [rbx],rax
   14000aaa0:	mov    eax,0x2
   14000aaa5:	mov    DWORD PTR [rbx+0x24],eax
   14000aaa8:	mov    DWORD PTR [rbx+0x8],eax
   14000aaab:	jmp    0x14000aac2
   14000aaad:	mov    QWORD PTR [rbx+0x10],rax
   14000aab1:	mov    QWORD PTR [rbx],rax
   14000aab4:	mov    DWORD PTR [rbx+0x24],0x1000
   14000aabb:	mov    DWORD PTR [rbx+0x8],0x1000
   14000aac2:	or     DWORD PTR [rbx+0x18],0x1102
   14000aac9:	mov    eax,0x1
   14000aace:	jmp    0x14000aad2
   14000aad0:	xor    eax,eax
   14000aad2:	mov    rbx,QWORD PTR [rsp+0x30]
   14000aad7:	mov    rdi,QWORD PTR [rsp+0x38]
   14000aadc:	add    rsp,0x20
   14000aae0:	pop    r14
   14000aae2:	ret    
   14000aae3:	int3   
   14000aae4:	mov    QWORD PTR [rsp+0x8],rbx
   14000aae9:	push   rdi
   14000aaea:	sub    rsp,0x20
   14000aaee:	mov    rdi,r8
   14000aaf1:	mov    rbx,rdx
   14000aaf4:	test   rcx,rcx
   14000aaf7:	je     0x14000ab16
   14000aaf9:	xor    edx,edx
   14000aafb:	lea    rax,[rdx-0x20]
   14000aaff:	div    rcx
   14000ab02:	cmp    rax,rbx
   14000ab05:	jae    0x14000ab16
   14000ab07:	call   0x1400095b8
   14000ab0c:	mov    DWORD PTR [rax],0xc
   14000ab12:	xor    eax,eax
   14000ab14:	jmp    0x14000ab73
   14000ab16:	imul   rbx,rcx
   14000ab1a:	mov    eax,0x1
   14000ab1f:	test   rbx,rbx
   14000ab22:	cmove  rbx,rax
   14000ab26:	xor    eax,eax
   14000ab28:	cmp    rbx,0xffffffffffffffe0
   14000ab2c:	ja     0x14000ab46
   14000ab2e:	mov    rcx,QWORD PTR [rip+0x2db33]        # 0x140038668
   14000ab35:	lea    edx,[rax+0x8]
   14000ab38:	mov    r8,rbx
   14000ab3b:	call   QWORD PTR [rip+0x1c57f]        # 0x1400270c0
   14000ab41:	test   rax,rax
   14000ab44:	jne    0x14000ab73
   14000ab46:	cmp    DWORD PTR [rip+0x2db23],0x0        # 0x140038670
   14000ab4d:	je     0x14000ab68
   14000ab4f:	mov    rcx,rbx
   14000ab52:	call   0x140007e5c
   14000ab57:	test   eax,eax
   14000ab59:	jne    0x14000ab26
   14000ab5b:	test   rdi,rdi
   14000ab5e:	je     0x14000ab12
   14000ab60:	mov    DWORD PTR [rdi],0xc
   14000ab66:	jmp    0x14000ab12
   14000ab68:	test   rdi,rdi
   14000ab6b:	je     0x14000ab73
   14000ab6d:	mov    DWORD PTR [rdi],0xc
   14000ab73:	mov    rbx,QWORD PTR [rsp+0x30]
   14000ab78:	add    rsp,0x20
   14000ab7c:	pop    rdi
   14000ab7d:	ret    
   14000ab7e:	int3   
   14000ab7f:	int3   
   14000ab80:	mov    rax,QWORD PTR [rip+0x2dae1]        # 0x140038668
   14000ab87:	ret    
   14000ab88:	sub    rsp,0x28
   14000ab8c:	call   QWORD PTR [rip+0x1c676]        # 0x140027208
   14000ab92:	xor    ecx,ecx
   14000ab94:	test   rax,rax
   14000ab97:	mov    QWORD PTR [rip+0x2daca],rax        # 0x140038668
   14000ab9e:	setne  cl
   14000aba1:	mov    eax,ecx
   14000aba3:	add    rsp,0x28
   14000aba7:	ret    
   14000aba8:	and    QWORD PTR [rip+0x2dab8],0x0        # 0x140038668
   14000abb0:	ret    
   14000abb1:	int3   
   14000abb2:	int3   
   14000abb3:	int3   
   14000abb4:	rex push rbx
   14000abb6:	sub    rsp,0x20
   14000abba:	call   0x140010ae0
   14000abbf:	mov    ebx,eax
   14000abc1:	and    ebx,0x3f
   14000abc4:	call   0x140010afa
   14000abc9:	mov    eax,ebx
   14000abcb:	add    rsp,0x20
   14000abcf:	pop    rbx
   14000abd0:	ret    
   14000abd1:	int3   
   14000abd2:	int3   
   14000abd3:	int3   
   14000abd4:	mov    QWORD PTR [rsp+0x18],rbx
   14000abd9:	mov    QWORD PTR [rsp+0x20],rsi
   14000abde:	push   rdi
   14000abdf:	sub    rsp,0x20
   14000abe3:	mov    rbx,rdx
   14000abe6:	mov    rdi,rcx
   14000abe9:	call   0x140010ae0
   14000abee:	mov    esi,eax
   14000abf0:	mov    DWORD PTR [rsp+0x38],eax
   14000abf4:	mov    ecx,ebx
   14000abf6:	not    ecx
   14000abf8:	or     ecx,0xffff807f
   14000abfe:	and    ecx,eax
   14000ac00:	and    edi,ebx
   14000ac02:	or     ecx,edi
   14000ac04:	mov    DWORD PTR [rsp+0x30],ecx
   14000ac08:	cmp    BYTE PTR [rip+0x2be29],0x0        # 0x140036a38
   14000ac0f:	je     0x14000ac36
   14000ac11:	test   cl,0x40
   14000ac14:	je     0x14000ac36
   14000ac16:	call   0x140010af0
   14000ac1b:	jmp    0x14000ac34
   14000ac1d:	mov    BYTE PTR [rip+0x2be14],0x0        # 0x140036a38
   14000ac24:	mov    ecx,DWORD PTR [rsp+0x30]
   14000ac28:	and    ecx,0xffffffbf
   14000ac2b:	call   0x140010af0
   14000ac30:	mov    esi,DWORD PTR [rsp+0x38]
   14000ac34:	jmp    0x14000ac3e
   14000ac36:	and    ecx,0xffffffbf
   14000ac39:	call   0x140010af0
   14000ac3e:	mov    eax,esi
   14000ac40:	mov    rbx,QWORD PTR [rsp+0x40]
   14000ac45:	mov    rsi,QWORD PTR [rsp+0x48]
   14000ac4a:	add    rsp,0x20
   14000ac4e:	pop    rdi
   14000ac4f:	ret    
   14000ac50:	rex push rbx
   14000ac52:	sub    rsp,0x20
   14000ac56:	mov    rbx,rcx
   14000ac59:	call   0x140010ae0
   14000ac5e:	and    ebx,0x3f
   14000ac61:	or     eax,ebx
   14000ac63:	mov    ecx,eax
   14000ac65:	add    rsp,0x20
   14000ac69:	pop    rbx
   14000ac6a:	jmp    0x140010af0
   14000ac6f:	int3   
   14000ac70:	sub    rsp,0x28
   14000ac74:	call   0x140010ae0
   14000ac79:	and    eax,0x3f
   14000ac7c:	add    rsp,0x28
   14000ac80:	ret    
   14000ac81:	int3   
   14000ac82:	int3   
   14000ac83:	int3   
   14000ac84:	mov    rax,rsp
   14000ac87:	push   rbx
   14000ac88:	sub    rsp,0x50
   14000ac8c:	movsd  xmm0,QWORD PTR [rsp+0x80]
   14000ac95:	movsd  xmm1,QWORD PTR [rsp+0x88]
   14000ac9e:	mov    ebx,ecx
   14000aca0:	mov    DWORD PTR [rax-0x38],ecx
   14000aca3:	mov    rcx,QWORD PTR [rsp+0x90]
   14000acab:	mov    edx,0xffc0
   14000acb0:	movsd  QWORD PTR [rax-0x28],xmm3
   14000acb5:	movsd  QWORD PTR [rax-0x20],xmm0
   14000acba:	movsd  QWORD PTR [rax-0x18],xmm1
   14000acbf:	mov    QWORD PTR [rax-0x30],r8
   14000acc3:	call   0x14000abd4
   14000acc8:	lea    rcx,[rsp+0x20]
   14000accd:	call   0x140011520
   14000acd2:	test   eax,eax
   14000acd4:	jne    0x14000acdd
   14000acd6:	mov    ecx,ebx
   14000acd8:	call   0x14001141c
   14000acdd:	movsd  xmm0,QWORD PTR [rsp+0x40]
   14000ace3:	add    rsp,0x50
   14000ace7:	pop    rbx
   14000ace8:	ret    
   14000ace9:	int3   
   14000acea:	int3   
   14000aceb:	int3   
   14000acec:	mov    QWORD PTR [rsp+0x8],rbx
   14000acf1:	mov    QWORD PTR [rsp+0x10],rsi
   14000acf6:	push   rdi
   14000acf7:	sub    rsp,0x20
   14000acfb:	mov    ebx,ecx
   14000acfd:	mov    rsi,rdx
   14000ad00:	mov    edi,ecx
   14000ad02:	and    ebx,0x1f
   14000ad05:	test   cl,0x8
   14000ad08:	je     0x14000ad1d
   14000ad0a:	test   dl,dl
   14000ad0c:	jns    0x14000ad1d
   14000ad0e:	mov    ecx,0x1
   14000ad13:	call   0x14000ac50
   14000ad18:	and    ebx,0xfffffff7
   14000ad1b:	jmp    0x14000ad74
   14000ad1d:	mov    ecx,0x4
   14000ad22:	test   cl,dil
   14000ad25:	je     0x14000ad38
   14000ad27:	bt     rdx,0x9
   14000ad2c:	jae    0x14000ad38
   14000ad2e:	call   0x14000ac50
   14000ad33:	and    ebx,0xfffffffb
   14000ad36:	jmp    0x14000ad74
   14000ad38:	test   dil,0x1
   14000ad3c:	je     0x14000ad54
   14000ad3e:	bt     rdx,0xa
   14000ad43:	jae    0x14000ad54
   14000ad45:	mov    ecx,0x8
   14000ad4a:	call   0x14000ac50
   14000ad4f:	and    ebx,0xfffffffe
   14000ad52:	jmp    0x14000ad74
   14000ad54:	test   dil,0x2
   14000ad58:	je     0x14000ad74
   14000ad5a:	bt     rdx,0xb
   14000ad5f:	jae    0x14000ad74
   14000ad61:	test   dil,0x10
   14000ad65:	je     0x14000ad71
   14000ad67:	mov    ecx,0x10
   14000ad6c:	call   0x14000ac50
   14000ad71:	and    ebx,0xfffffffd
   14000ad74:	test   dil,0x10
   14000ad78:	je     0x14000ad8e
   14000ad7a:	bt     rsi,0xc
   14000ad7f:	jae    0x14000ad8e
   14000ad81:	mov    ecx,0x20
   14000ad86:	call   0x14000ac50
   14000ad8b:	and    ebx,0xffffffef
   14000ad8e:	mov    rsi,QWORD PTR [rsp+0x38]
   14000ad93:	xor    eax,eax
   14000ad95:	test   ebx,ebx
   14000ad97:	mov    rbx,QWORD PTR [rsp+0x30]
   14000ad9c:	sete   al
   14000ad9f:	add    rsp,0x20
   14000ada3:	pop    rdi
   14000ada4:	ret    
   14000ada5:	int3   
   14000ada6:	int3   
   14000ada7:	int3   
   14000ada8:	mov    rax,rsp
   14000adab:	push   rbp
   14000adac:	push   rbx
   14000adad:	push   rsi
   14000adae:	push   rdi
   14000adaf:	push   r14
   14000adb1:	lea    rbp,[rax-0x37]
   14000adb5:	sub    rsp,0xf0
   14000adbc:	movaps XMMWORD PTR [rax-0x38],xmm6
   14000adc0:	mov    rax,QWORD PTR [rip+0x2bc79]        # 0x140036a40
   14000adc7:	xor    rax,rsp
   14000adca:	mov    QWORD PTR [rbp-0x11],rax
   14000adce:	mov    esi,edx
   14000add0:	mov    r14,rcx
   14000add3:	mov    edx,0xffc0
   14000add8:	mov    ecx,0x1f80
   14000addd:	mov    edi,r9d
   14000ade0:	mov    rbx,r8
   14000ade3:	call   0x14000abd4
   14000ade8:	mov    ecx,DWORD PTR [rbp+0x5f]
   14000adeb:	mov    QWORD PTR [rsp+0x40],rax
   14000adf0:	mov    QWORD PTR [rsp+0x50],rbx
   14000adf5:	movsd  xmm0,QWORD PTR [rsp+0x50]
   14000adfb:	mov    rdx,QWORD PTR [rsp+0x40]
   14000ae00:	movsd  QWORD PTR [rsp+0x48],xmm0
   14000ae06:	call   0x14000acec
   14000ae0b:	movsd  xmm6,QWORD PTR [rbp+0x77]
   14000ae10:	test   eax,eax
   14000ae12:	jne    0x14000ae54
   14000ae14:	cmp    DWORD PTR [rbp+0x7f],0x2
   14000ae18:	jne    0x14000ae2b
   14000ae1a:	mov    eax,DWORD PTR [rbp-0x41]
   14000ae1d:	movsd  QWORD PTR [rbp-0x51],xmm6
   14000ae22:	and    eax,0xffffffe3
   14000ae25:	or     eax,0x3
   14000ae28:	mov    DWORD PTR [rbp-0x41],eax
   14000ae2b:	mov    r8d,DWORD PTR [rbp+0x5f]
   14000ae2f:	lea    rax,[rsp+0x48]
   14000ae34:	lea    rdx,[rsp+0x40]
   14000ae39:	mov    QWORD PTR [rsp+0x28],rax
   14000ae3e:	lea    rax,[rbp+0x6f]
   14000ae42:	lea    rcx,[rsp+0x60]
   14000ae47:	mov    r9d,esi
   14000ae4a:	mov    QWORD PTR [rsp+0x20],rax
   14000ae4f:	call   0x1400110c4
   14000ae54:	cmp    DWORD PTR [rip+0x2c635],0x0        # 0x140037490
   14000ae5b:	jne    0x14000ae91
   14000ae5d:	test   edi,edi
   14000ae5f:	je     0x14000ae91
   14000ae61:	mov    rax,QWORD PTR [rsp+0x40]
   14000ae66:	movsd  xmm0,QWORD PTR [rsp+0x48]
   14000ae6c:	mov    edx,DWORD PTR [rbp+0x67]
   14000ae6f:	movsd  xmm3,QWORD PTR [rbp+0x6f]
   14000ae74:	mov    QWORD PTR [rsp+0x30],rax
   14000ae79:	mov    r8,r14
   14000ae7c:	mov    ecx,edi
   14000ae7e:	movsd  QWORD PTR [rsp+0x28],xmm0
   14000ae84:	movsd  QWORD PTR [rsp+0x20],xmm6
   14000ae8a:	call   0x14000ac84
   14000ae8f:	jmp    0x14000aead
   14000ae91:	mov    ecx,edi
   14000ae93:	call   0x14001141c
   14000ae98:	mov    rcx,QWORD PTR [rsp+0x40]
   14000ae9d:	mov    edx,0xffc0
   14000aea2:	call   0x14000abd4
   14000aea7:	movsd  xmm0,QWORD PTR [rsp+0x48]
   14000aead:	mov    rcx,QWORD PTR [rbp-0x11]
   14000aeb1:	xor    rcx,rsp
   14000aeb4:	call   0x14000d0a0
   14000aeb9:	movaps xmm6,XMMWORD PTR [rsp+0xe0]
   14000aec1:	add    rsp,0xf0
   14000aec8:	pop    r14
   14000aeca:	pop    rdi
   14000aecb:	pop    rsi
   14000aecc:	pop    rbx
   14000aecd:	pop    rbp
   14000aece:	ret    
   14000aecf:	int3   
   14000aed0:	mov    rax,rsp
   14000aed3:	push   rbp
   14000aed4:	push   rbx
   14000aed5:	push   rsi
   14000aed6:	push   rdi
   14000aed7:	push   r14
   14000aed9:	lea    rbp,[rax-0x37]
   14000aedd:	sub    rsp,0xf0
   14000aee4:	movaps XMMWORD PTR [rax-0x38],xmm6
   14000aee8:	mov    rax,QWORD PTR [rip+0x2bb51]        # 0x140036a40
   14000aeef:	xor    rax,rsp
   14000aef2:	mov    QWORD PTR [rbp-0x11],rax
   14000aef6:	mov    esi,edx
   14000aef8:	mov    r14,rcx
   14000aefb:	mov    edx,0xffc0
   14000af00:	mov    ecx,0x1f80
   14000af05:	mov    edi,r9d
   14000af08:	mov    rbx,r8
   14000af0b:	call   0x14000abd4
   14000af10:	mov    ecx,DWORD PTR [rbp+0x5f]
   14000af13:	mov    QWORD PTR [rsp+0x48],rax
   14000af18:	mov    DWORD PTR [rsp+0x50],ebx
   14000af1c:	movss  xmm0,DWORD PTR [rsp+0x50]
   14000af22:	mov    rdx,QWORD PTR [rsp+0x48]
   14000af27:	movss  DWORD PTR [rsp+0x40],xmm0
   14000af2d:	call   0x14000acec
   14000af32:	movss  xmm6,DWORD PTR [rbp+0x77]
   14000af37:	test   eax,eax
   14000af39:	jne    0x14000af7b
   14000af3b:	cmp    DWORD PTR [rbp+0x7f],0x2
   14000af3f:	jne    0x14000af52
   14000af41:	mov    eax,DWORD PTR [rbp-0x41]
   14000af44:	movss  DWORD PTR [rbp-0x51],xmm6
   14000af49:	and    eax,0xffffffe1
   14000af4c:	or     eax,0x1
   14000af4f:	mov    DWORD PTR [rbp-0x41],eax
   14000af52:	mov    r8d,DWORD PTR [rbp+0x5f]
   14000af56:	lea    rax,[rsp+0x40]
   14000af5b:	lea    rdx,[rsp+0x48]
   14000af60:	mov    QWORD PTR [rsp+0x28],rax
   14000af65:	lea    rax,[rbp+0x6f]
   14000af69:	lea    rcx,[rsp+0x60]
   14000af6e:	mov    r9d,esi
   14000af71:	mov    QWORD PTR [rsp+0x20],rax
   14000af76:	call   0x1400113f0
   14000af7b:	cmp    DWORD PTR [rip+0x2c50e],0x0        # 0x140037490
   14000af82:	jne    0x14000afc5
   14000af84:	test   edi,edi
   14000af86:	je     0x14000afc5
   14000af88:	movss  xmm0,DWORD PTR [rsp+0x40]
   14000af8e:	movss  xmm3,DWORD PTR [rbp+0x6f]
   14000af93:	mov    rax,QWORD PTR [rsp+0x48]
   14000af98:	mov    edx,DWORD PTR [rbp+0x67]
   14000af9b:	mov    QWORD PTR [rsp+0x30],rax
   14000afa0:	mov    r8,r14
   14000afa3:	cvtps2pd xmm0,xmm0
   14000afa6:	cvtps2pd xmm1,xmm6
   14000afa9:	cvtps2pd xmm3,xmm3
   14000afac:	mov    ecx,edi
   14000afae:	movsd  QWORD PTR [rsp+0x28],xmm0
   14000afb4:	movsd  QWORD PTR [rsp+0x20],xmm1
   14000afba:	call   0x14000ac84
   14000afbf:	cvtsd2ss xmm0,xmm0
   14000afc3:	jmp    0x14000afe1
   14000afc5:	mov    ecx,edi
   14000afc7:	call   0x14001141c
   14000afcc:	mov    rcx,QWORD PTR [rsp+0x48]
   14000afd1:	mov    edx,0xffc0
   14000afd6:	call   0x14000abd4
   14000afdb:	movss  xmm0,DWORD PTR [rsp+0x40]
   14000afe1:	mov    rcx,QWORD PTR [rbp-0x11]
   14000afe5:	xor    rcx,rsp
   14000afe8:	call   0x14000d0a0
   14000afed:	movaps xmm6,XMMWORD PTR [rsp+0xe0]
   14000aff5:	add    rsp,0xf0
   14000affc:	pop    r14
   14000affe:	pop    rdi
   14000afff:	pop    rsi
   14000b000:	pop    rbx
   14000b001:	pop    rbp
   14000b002:	ret    
   14000b003:	int3   
   14000b004:	mov    eax,DWORD PTR [rip+0x2ba32]        # 0x140036a3c
   14000b00a:	ret    
   14000b00b:	int3   
   14000b00c:	rex.W jmp QWORD PTR [rip+0x1c1fd]        # 0x140027210
   14000b013:	int3   
   14000b014:	rex.W jmp QWORD PTR [rip+0x1c1fd]        # 0x140027218
   14000b01b:	int3   
   14000b01c:	test   rcx,rcx
   14000b01f:	je     0x14000b14e
   14000b025:	mov    QWORD PTR [rsp+0x10],rbx
   14000b02a:	push   rdi
   14000b02b:	sub    rsp,0x20
   14000b02f:	mov    rbx,rcx
   14000b032:	mov    rcx,QWORD PTR [rcx+0x38]
   14000b036:	test   rcx,rcx
   14000b039:	je     0x14000b040
   14000b03b:	call   0x140006444
   14000b040:	mov    rcx,QWORD PTR [rbx+0x48]
   14000b044:	test   rcx,rcx
   14000b047:	je     0x14000b04e
   14000b049:	call   0x140006444
   14000b04e:	mov    rcx,QWORD PTR [rbx+0x58]
   14000b052:	test   rcx,rcx
   14000b055:	je     0x14000b05c
   14000b057:	call   0x140006444
   14000b05c:	mov    rcx,QWORD PTR [rbx+0x68]
   14000b060:	test   rcx,rcx
   14000b063:	je     0x14000b06a
   14000b065:	call   0x140006444
   14000b06a:	mov    rcx,QWORD PTR [rbx+0x70]
   14000b06e:	test   rcx,rcx
   14000b071:	je     0x14000b078
   14000b073:	call   0x140006444
   14000b078:	mov    rcx,QWORD PTR [rbx+0x78]
   14000b07c:	test   rcx,rcx
   14000b07f:	je     0x14000b086
   14000b081:	call   0x140006444
   14000b086:	mov    rcx,QWORD PTR [rbx+0x80]
   14000b08d:	test   rcx,rcx
   14000b090:	je     0x14000b097
   14000b092:	call   0x140006444
   14000b097:	mov    rcx,QWORD PTR [rbx+0xa0]
   14000b09e:	lea    rax,[rip+0x1f8db]        # 0x14002a980
   14000b0a5:	cmp    rcx,rax
   14000b0a8:	je     0x14000b0af
   14000b0aa:	call   0x140006444
   14000b0af:	mov    edi,0xd
   14000b0b4:	mov    ecx,edi
   14000b0b6:	call   0x140008760
   14000b0bb:	nop
   14000b0bc:	mov    rcx,QWORD PTR [rbx+0xb8]
   14000b0c3:	mov    QWORD PTR [rsp+0x30],rcx
   14000b0c8:	test   rcx,rcx
   14000b0cb:	je     0x14000b0e9
   14000b0cd:	lock dec DWORD PTR [rcx]
   14000b0d0:	jne    0x14000b0e9
   14000b0d2:	lea    rax,[rip+0x2b637]        # 0x140036710
   14000b0d9:	mov    rcx,QWORD PTR [rsp+0x30]
   14000b0de:	cmp    rcx,rax
   14000b0e1:	je     0x14000b0e9
   14000b0e3:	call   0x140006444
   14000b0e8:	nop
   14000b0e9:	mov    ecx,edi
   14000b0eb:	call   0x14000897c
   14000b0f0:	mov    ecx,0xc
   14000b0f5:	call   0x140008760
   14000b0fa:	nop
   14000b0fb:	mov    rdi,QWORD PTR [rbx+0xc0]
   14000b102:	test   rdi,rdi
   14000b105:	je     0x14000b132
   14000b107:	mov    rcx,rdi
   14000b10a:	call   0x14000ff50
   14000b10f:	cmp    rdi,QWORD PTR [rip+0x2bc6a]        # 0x140036d80
   14000b116:	je     0x14000b132
   14000b118:	lea    rax,[rip+0x2bc71]        # 0x140036d90
   14000b11f:	cmp    rdi,rax
   14000b122:	je     0x14000b132
   14000b124:	cmp    DWORD PTR [rdi],0x0
   14000b127:	jne    0x14000b132
   14000b129:	mov    rcx,rdi
   14000b12c:	call   0x14000fdb8
   14000b131:	nop
   14000b132:	mov    ecx,0xc
   14000b137:	call   0x14000897c
   14000b13c:	mov    rcx,rbx
   14000b13f:	call   0x140006444
   14000b144:	mov    rbx,QWORD PTR [rsp+0x38]
   14000b149:	add    rsp,0x20
   14000b14d:	pop    rdi
   14000b14e:	ret    
   14000b14f:	int3   
   14000b150:	rex push rbx
   14000b152:	sub    rsp,0x20
   14000b156:	mov    rbx,rcx
   14000b159:	mov    ecx,DWORD PTR [rip+0x2b8dd]        # 0x140036a3c
   14000b15f:	cmp    ecx,0xffffffff
   14000b162:	je     0x14000b186
   14000b164:	test   rbx,rbx
   14000b167:	jne    0x14000b177
   14000b169:	call   0x140008bc8
   14000b16e:	mov    ecx,DWORD PTR [rip+0x2b8c8]        # 0x140036a3c
   14000b174:	mov    rbx,rax
   14000b177:	xor    edx,edx
   14000b179:	call   0x140008be4
   14000b17e:	mov    rcx,rbx
   14000b181:	call   0x14000b01c
   14000b186:	add    rsp,0x20
   14000b18a:	pop    rbx
   14000b18b:	ret    
   14000b18c:	rex push rbx
   14000b18e:	sub    rsp,0x20
   14000b192:	call   0x14000b1b0
   14000b197:	mov    rbx,rax
   14000b19a:	test   rax,rax
   14000b19d:	jne    0x14000b1a7
   14000b19f:	lea    ecx,[rax+0x10]
   14000b1a2:	call   0x140005ff4
   14000b1a7:	mov    rax,rbx
   14000b1aa:	add    rsp,0x20
   14000b1ae:	pop    rbx
   14000b1af:	ret    
   14000b1b0:	mov    QWORD PTR [rsp+0x8],rbx
   14000b1b5:	push   rdi
   14000b1b6:	sub    rsp,0x20
   14000b1ba:	call   QWORD PTR [rip+0x1bec0]        # 0x140027080
   14000b1c0:	mov    ecx,DWORD PTR [rip+0x2b876]        # 0x140036a3c
   14000b1c6:	mov    edi,eax
   14000b1c8:	call   0x140008bc8
   14000b1cd:	mov    rbx,rax
   14000b1d0:	test   rax,rax
   14000b1d3:	jne    0x14000b21c
   14000b1d5:	lea    ecx,[rax+0x1]
   14000b1d8:	mov    edx,0x478
   14000b1dd:	call   0x140007ed4
   14000b1e2:	mov    rbx,rax
   14000b1e5:	test   rax,rax
   14000b1e8:	je     0x14000b21c
   14000b1ea:	mov    ecx,DWORD PTR [rip+0x2b84c]        # 0x140036a3c
   14000b1f0:	mov    rdx,rax
   14000b1f3:	call   0x140008be4
   14000b1f8:	mov    rcx,rbx
   14000b1fb:	test   eax,eax
   14000b1fd:	je     0x14000b215
   14000b1ff:	xor    edx,edx
   14000b201:	call   0x14000b234
   14000b206:	call   QWORD PTR [rip+0x1c00c]        # 0x140027218
   14000b20c:	or     QWORD PTR [rbx+0x8],0xffffffffffffffff
   14000b211:	mov    DWORD PTR [rbx],eax
   14000b213:	jmp    0x14000b21c
   14000b215:	call   0x140006444
   14000b21a:	xor    ebx,ebx
   14000b21c:	mov    ecx,edi
   14000b21e:	call   QWORD PTR [rip+0x1bf24]        # 0x140027148
   14000b224:	mov    rax,rbx
   14000b227:	mov    rbx,QWORD PTR [rsp+0x30]
   14000b22c:	add    rsp,0x20
   14000b230:	pop    rdi
   14000b231:	ret    
   14000b232:	int3   
   14000b233:	int3   
   14000b234:	mov    QWORD PTR [rsp+0x8],rbx
   14000b239:	push   rdi
   14000b23a:	sub    rsp,0x20
   14000b23e:	mov    rdi,rdx
   14000b241:	mov    rbx,rcx
   14000b244:	lea    rax,[rip+0x1f735]        # 0x14002a980
   14000b24b:	mov    QWORD PTR [rcx+0xa0],rax
   14000b252:	and    DWORD PTR [rcx+0x10],0x0
   14000b256:	mov    DWORD PTR [rcx+0x1c],0x1
   14000b25d:	mov    DWORD PTR [rcx+0xc8],0x1
   14000b267:	mov    eax,0x43
   14000b26c:	mov    WORD PTR [rcx+0x164],ax
   14000b273:	mov    WORD PTR [rcx+0x26a],ax
   14000b27a:	lea    rax,[rip+0x2b48f]        # 0x140036710
   14000b281:	mov    QWORD PTR [rcx+0xb8],rax
   14000b288:	and    QWORD PTR [rcx+0x470],0x0
   14000b290:	mov    ecx,0xd
   14000b295:	call   0x140008760
   14000b29a:	nop
   14000b29b:	mov    rax,QWORD PTR [rbx+0xb8]
   14000b2a2:	lock inc DWORD PTR [rax]
   14000b2a5:	mov    ecx,0xd
   14000b2aa:	call   0x14000897c
   14000b2af:	mov    ecx,0xc
   14000b2b4:	call   0x140008760
   14000b2b9:	nop
   14000b2ba:	mov    QWORD PTR [rbx+0xc0],rdi
   14000b2c1:	test   rdi,rdi
   14000b2c4:	jne    0x14000b2d4
   14000b2c6:	mov    rax,QWORD PTR [rip+0x2bab3]        # 0x140036d80
   14000b2cd:	mov    QWORD PTR [rbx+0xc0],rax
   14000b2d4:	mov    rcx,QWORD PTR [rbx+0xc0]
   14000b2db:	call   0x14000fd2c
   14000b2e0:	nop
   14000b2e1:	mov    ecx,0xc
   14000b2e6:	call   0x14000897c
   14000b2eb:	mov    rbx,QWORD PTR [rsp+0x30]
   14000b2f0:	add    rsp,0x20
   14000b2f4:	pop    rdi
   14000b2f5:	ret    
   14000b2f6:	int3   
   14000b2f7:	int3   
   14000b2f8:	rex push rbx
   14000b2fa:	sub    rsp,0x20
   14000b2fe:	call   0x14000615c
   14000b303:	call   0x140008918
   14000b308:	test   eax,eax
   14000b30a:	je     0x14000b36a
   14000b30c:	lea    rcx,[rip+0xfffffffffffffd09]        # 0x14000b01c
   14000b313:	call   0x140008b90
   14000b318:	mov    DWORD PTR [rip+0x2b71e],eax        # 0x140036a3c
   14000b31e:	cmp    eax,0xffffffff
   14000b321:	je     0x14000b36a
   14000b323:	mov    edx,0x478
   14000b328:	mov    ecx,0x1
   14000b32d:	call   0x140007ed4
   14000b332:	mov    rbx,rax
   14000b335:	test   rax,rax
   14000b338:	je     0x14000b36a
   14000b33a:	mov    ecx,DWORD PTR [rip+0x2b6fc]        # 0x140036a3c
   14000b340:	mov    rdx,rax
   14000b343:	call   0x140008be4
   14000b348:	test   eax,eax
   14000b34a:	je     0x14000b36a
   14000b34c:	xor    edx,edx
   14000b34e:	mov    rcx,rbx
   14000b351:	call   0x14000b234
   14000b356:	call   QWORD PTR [rip+0x1bebc]        # 0x140027218
   14000b35c:	or     QWORD PTR [rbx+0x8],0xffffffffffffffff
   14000b361:	mov    DWORD PTR [rbx],eax
   14000b363:	mov    eax,0x1
   14000b368:	jmp    0x14000b371
   14000b36a:	call   0x14000b378
   14000b36f:	xor    eax,eax
   14000b371:	add    rsp,0x20
   14000b375:	pop    rbx
   14000b376:	ret    
   14000b377:	int3   
   14000b378:	sub    rsp,0x28
   14000b37c:	mov    ecx,DWORD PTR [rip+0x2b6ba]        # 0x140036a3c
   14000b382:	cmp    ecx,0xffffffff
   14000b385:	je     0x14000b393
   14000b387:	call   0x140008bac
   14000b38c:	or     DWORD PTR [rip+0x2b6a9],0xffffffff        # 0x140036a3c
   14000b393:	add    rsp,0x28
   14000b397:	jmp    0x1400087d0
   14000b39c:	test   rcx,rcx
   14000b39f:	je     0x14000b409
   14000b3a1:	mov    BYTE PTR [rsp+0x10],dl
   14000b3a5:	sub    rsp,0x28
   14000b3a9:	cmp    DWORD PTR [rcx],0xe06d7363
   14000b3af:	jne    0x14000b405
   14000b3b1:	cmp    DWORD PTR [rcx+0x18],0x4
   14000b3b5:	jne    0x14000b405
   14000b3b7:	mov    eax,DWORD PTR [rcx+0x20]
   14000b3ba:	sub    eax,0x19930520
   14000b3bf:	cmp    eax,0x2
   14000b3c2:	ja     0x14000b405
   14000b3c4:	mov    rax,QWORD PTR [rcx+0x30]
   14000b3c8:	test   rax,rax
   14000b3cb:	je     0x14000b405
   14000b3cd:	movsxd rdx,DWORD PTR [rax+0x4]
   14000b3d1:	test   edx,edx
   14000b3d3:	je     0x14000b3ee
   14000b3d5:	mov    rax,rdx
   14000b3d8:	mov    rdx,QWORD PTR [rcx+0x38]
   14000b3dc:	add    rdx,rax
   14000b3df:	mov    rcx,QWORD PTR [rcx+0x28]
   14000b3e3:	call   rdx
   14000b3e5:	nop
   14000b3e6:	jmp    0x14000b405
   14000b3e8:	call   0x14000984c
   14000b3ed:	nop
   14000b3ee:	test   BYTE PTR [rax],0x10
   14000b3f1:	je     0x14000b405
   14000b3f3:	mov    rax,QWORD PTR [rcx+0x28]
   14000b3f7:	mov    rcx,QWORD PTR [rax]
   14000b3fa:	test   rcx,rcx
   14000b3fd:	je     0x14000b405
   14000b3ff:	mov    rax,QWORD PTR [rcx]
   14000b402:	call   QWORD PTR [rax+0x10]
   14000b405:	add    rsp,0x28
   14000b409:	ret    
   14000b40a:	int3   
   14000b40b:	int3   
   14000b40c:	rex push rbx
   14000b40e:	sub    rsp,0x20
   14000b412:	mov    rbx,rcx
   14000b415:	call   0x14000790c
   14000b41a:	lea    rax,[rip+0x1f527]        # 0x14002a948
   14000b421:	mov    QWORD PTR [rbx],rax
   14000b424:	mov    rax,rbx
   14000b427:	add    rsp,0x20
   14000b42b:	pop    rbx
   14000b42c:	ret    
   14000b42d:	int3   
   14000b42e:	int3   
   14000b42f:	int3   
   14000b430:	mov    QWORD PTR [rsp+0x10],rdx
   14000b435:	push   rbx
   14000b436:	sub    rsp,0x20
   14000b43a:	lea    rdx,[rsp+0x38]
   14000b43f:	mov    rbx,rcx
   14000b442:	call   0x1400078c0
   14000b447:	lea    rax,[rip+0x1f4fa]        # 0x14002a948
   14000b44e:	mov    QWORD PTR [rbx],rax
   14000b451:	mov    rax,rbx
   14000b454:	add    rsp,0x20
   14000b458:	pop    rbx
   14000b459:	ret    
   14000b45a:	int3   
   14000b45b:	int3   
   14000b45c:	lea    rax,[rip+0x1f4e5]        # 0x14002a948
   14000b463:	mov    QWORD PTR [rcx],rax
   14000b466:	jmp    0x140007980
   14000b46b:	int3   
   14000b46c:	mov    QWORD PTR [rsp+0x8],rbx
   14000b471:	push   rdi
   14000b472:	sub    rsp,0x20
   14000b476:	lea    rax,[rip+0x1f4cb]        # 0x14002a948
   14000b47d:	mov    ebx,edx
   14000b47f:	mov    rdi,rcx
   14000b482:	mov    QWORD PTR [rcx],rax
   14000b485:	call   0x140007980
   14000b48a:	test   bl,0x1
   14000b48d:	je     0x14000b497
   14000b48f:	mov    rcx,rdi
   14000b492:	call   0x140005454
   14000b497:	mov    rax,rdi
   14000b49a:	mov    rbx,QWORD PTR [rsp+0x30]
   14000b49f:	add    rsp,0x20
   14000b4a3:	pop    rdi
   14000b4a4:	ret    
   14000b4a5:	int3   
   14000b4a6:	int3   
   14000b4a7:	int3   
   14000b4a8:	mov    rax,rsp
   14000b4ab:	mov    QWORD PTR [rax+0x8],rbx
   14000b4af:	mov    QWORD PTR [rax+0x18],rbp
   14000b4b3:	push   rsi
   14000b4b4:	push   rdi
   14000b4b5:	push   r12
   14000b4b7:	push   r14
   14000b4b9:	push   r15
   14000b4bb:	sub    rsp,0x50
   14000b4bf:	mov    r15,QWORD PTR [rsp+0xa0]
   14000b4c7:	mov    rbp,r9
   14000b4ca:	mov    r14,rdx
   14000b4cd:	mov    r12,r8
   14000b4d0:	mov    rbx,rcx
   14000b4d3:	lea    r9,[rax+0x10]
   14000b4d7:	mov    r8,r15
   14000b4da:	mov    rdx,rbp
   14000b4dd:	mov    rcx,r14
   14000b4e0:	call   0x140006a30
   14000b4e5:	mov    r9,QWORD PTR [rsp+0xb0]
   14000b4ed:	mov    rsi,QWORD PTR [rsp+0xa8]
   14000b4f5:	mov    rdi,rax
   14000b4f8:	test   r9,r9
   14000b4fb:	je     0x14000b50b
   14000b4fd:	mov    r8,rsi
   14000b500:	mov    rdx,rax
   14000b503:	mov    rcx,rbx
   14000b506:	call   0x14000bf90
   14000b50b:	call   0x140006e58
   14000b510:	movsxd rcx,DWORD PTR [rsi+0xc]
   14000b514:	mov    r9,rdi
   14000b517:	add    rax,rcx
   14000b51a:	mov    cl,BYTE PTR [rsp+0xd8]
   14000b521:	mov    r8,r12
   14000b524:	mov    BYTE PTR [rsp+0x40],cl
   14000b528:	mov    rcx,QWORD PTR [rsp+0xb8]
   14000b530:	mov    QWORD PTR [rsp+0x38],rbp
   14000b535:	mov    edx,DWORD PTR [rcx]
   14000b537:	mov    QWORD PTR [rsp+0x30],r15
   14000b53c:	mov    rcx,r14
   14000b53f:	mov    DWORD PTR [rsp+0x28],edx
   14000b543:	mov    rdx,rbx
   14000b546:	mov    QWORD PTR [rsp+0x20],rax
   14000b54b:	call   0x140006f00
   14000b550:	lea    r11,[rsp+0x50]
   14000b555:	mov    rbx,QWORD PTR [r11+0x30]
   14000b559:	mov    rbp,QWORD PTR [r11+0x40]
   14000b55d:	mov    rsp,r11
   14000b560:	pop    r15
   14000b562:	pop    r14
   14000b564:	pop    r12
   14000b566:	pop    rdi
   14000b567:	pop    rsi
   14000b568:	ret    
   14000b569:	int3   
   14000b56a:	int3   
   14000b56b:	int3   
   14000b56c:	mov    QWORD PTR [rsp+0x8],rbx
   14000b571:	push   rdi
   14000b572:	sub    rsp,0x20
   14000b576:	mov    r9,QWORD PTR [rcx]
   14000b579:	and    DWORD PTR [r8],0x0
   14000b57d:	mov    rbx,r8
   14000b580:	mov    r8d,0xe06d7363
   14000b586:	cmp    DWORD PTR [r9],r8d
   14000b589:	jne    0x14000b5e8
   14000b58b:	cmp    DWORD PTR [r9+0x18],0x4
   14000b590:	mov    edi,0x1
   14000b595:	mov    r10d,0x19930520
   14000b59b:	jne    0x14000b5b8
   14000b59d:	mov    eax,DWORD PTR [r9+0x20]
   14000b5a1:	sub    eax,r10d
   14000b5a4:	cmp    eax,0x2
   14000b5a7:	ja     0x14000b5b8
   14000b5a9:	mov    rax,QWORD PTR [rdx+0x28]
   14000b5ad:	mov    ecx,DWORD PTR [rbx]
   14000b5af:	cmp    QWORD PTR [r9+0x28],rax
   14000b5b3:	cmove  ecx,edi
   14000b5b6:	mov    DWORD PTR [rbx],ecx
   14000b5b8:	cmp    DWORD PTR [r9],r8d
   14000b5bb:	jne    0x14000b5e8
   14000b5bd:	cmp    DWORD PTR [r9+0x18],0x4
   14000b5c2:	jne    0x14000b5e8
   14000b5c4:	mov    ecx,DWORD PTR [r9+0x20]
   14000b5c8:	sub    ecx,r10d
   14000b5cb:	cmp    ecx,0x2
   14000b5ce:	ja     0x14000b5e8
   14000b5d0:	cmp    QWORD PTR [r9+0x30],0x0
   14000b5d5:	jne    0x14000b5e8
   14000b5d7:	call   0x14000b18c
   14000b5dc:	mov    DWORD PTR [rax+0x460],edi
   14000b5e2:	mov    DWORD PTR [rbx],edi
   14000b5e4:	mov    eax,edi
   14000b5e6:	jmp    0x14000b5ea
   14000b5e8:	xor    eax,eax
   14000b5ea:	mov    rbx,QWORD PTR [rsp+0x30]
   14000b5ef:	add    rsp,0x20
   14000b5f3:	pop    rdi
   14000b5f4:	ret    
   14000b5f5:	int3   
   14000b5f6:	int3   
   14000b5f7:	int3   
   14000b5f8:	mov    QWORD PTR [rsp+0x10],rbx
   14000b5fd:	mov    QWORD PTR [rsp+0x18],r8
   14000b602:	push   rbp
   14000b603:	push   rsi
   14000b604:	push   rdi
   14000b605:	push   r12
   14000b607:	push   r13
   14000b609:	push   r14
   14000b60b:	push   r15
   14000b60d:	lea    rbp,[rsp-0x7]
   14000b612:	sub    rsp,0xb0
   14000b619:	mov    rbx,QWORD PTR [rbp+0x67]
   14000b61d:	mov    r13,rdx
   14000b620:	mov    rdi,rcx
   14000b623:	xor    r12d,r12d
   14000b626:	mov    rdx,r9
   14000b629:	mov    rcx,rbx
   14000b62c:	mov    r15,r9
   14000b62f:	mov    r14,r8
   14000b632:	mov    BYTE PTR [rbp+0x47],r12b
   14000b636:	mov    BYTE PTR [rbp-0x49],r12b
   14000b63a:	call   0x14000cf6c
   14000b63f:	lea    r9,[rbp-0x21]
   14000b643:	mov    r8,rbx
   14000b646:	mov    rdx,r15
   14000b649:	mov    rcx,r13
   14000b64c:	mov    esi,eax
   14000b64e:	call   0x140006a30
   14000b653:	mov    r8,rbx
   14000b656:	mov    rdx,r15
   14000b659:	mov    rcx,r13
   14000b65c:	call   0x14000cef8
   14000b661:	mov    r8,rbx
   14000b664:	mov    rdx,r15
   14000b667:	cmp    esi,eax
   14000b669:	jle    0x14000b68a
   14000b66b:	lea    rcx,[rbp-0x21]
   14000b66f:	mov    r9d,esi
   14000b672:	call   0x14000cf24
   14000b677:	mov    r9d,esi
   14000b67a:	mov    r8,rbx
   14000b67d:	mov    rdx,r15
   14000b680:	mov    rcx,r13
   14000b683:	call   0x14000cf30
   14000b688:	jmp    0x14000b694
   14000b68a:	mov    rcx,r13
   14000b68d:	call   0x14000cef8
   14000b692:	mov    esi,eax
   14000b694:	cmp    esi,0xffffffff
   14000b697:	jl     0x14000b69e
   14000b699:	cmp    esi,DWORD PTR [rbx+0x4]
   14000b69c:	jl     0x14000b6a3
   14000b69e:	call   0x14000982c
   14000b6a3:	cmp    DWORD PTR [rdi],0xe06d7363
   14000b6a9:	jne    0x14000ba2a
   14000b6af:	cmp    DWORD PTR [rdi+0x18],0x4
   14000b6b3:	jne    0x14000b7f0
   14000b6b9:	mov    eax,DWORD PTR [rdi+0x20]
   14000b6bc:	sub    eax,0x19930520
   14000b6c1:	cmp    eax,0x2
   14000b6c4:	ja     0x14000b7f0
   14000b6ca:	cmp    QWORD PTR [rdi+0x30],r12
   14000b6ce:	jne    0x14000b7f0
   14000b6d4:	call   0x14000b18c
   14000b6d9:	cmp    QWORD PTR [rax+0xf0],r12
   14000b6e0:	je     0x14000ba0f
   14000b6e6:	call   0x14000b18c
   14000b6eb:	mov    rdi,QWORD PTR [rax+0xf0]
   14000b6f2:	call   0x14000b18c
   14000b6f7:	mov    rcx,QWORD PTR [rdi+0x38]
   14000b6fb:	mov    r14,QWORD PTR [rax+0xf8]
   14000b702:	mov    BYTE PTR [rbp+0x47],0x1
   14000b706:	mov    QWORD PTR [rbp+0x57],r14
   14000b70a:	call   0x140006ee4
   14000b70f:	mov    edx,0x1
   14000b714:	mov    rcx,rdi
   14000b717:	call   0x140011530
   14000b71c:	test   eax,eax
   14000b71e:	jne    0x14000b725
   14000b720:	call   0x14000982c
   14000b725:	cmp    DWORD PTR [rdi],0xe06d7363
   14000b72b:	jne    0x14000b74b
   14000b72d:	cmp    DWORD PTR [rdi+0x18],0x4
   14000b731:	jne    0x14000b74b
   14000b733:	mov    eax,DWORD PTR [rdi+0x20]
   14000b736:	sub    eax,0x19930520
   14000b73b:	cmp    eax,0x2
   14000b73e:	ja     0x14000b74b
   14000b740:	cmp    QWORD PTR [rdi+0x30],r12
   14000b744:	jne    0x14000b74b
   14000b746:	call   0x14000982c
   14000b74b:	call   0x14000b18c
   14000b750:	cmp    QWORD PTR [rax+0x108],r12
   14000b757:	je     0x14000b7f0
   14000b75d:	call   0x14000b18c
   14000b762:	mov    r14,QWORD PTR [rax+0x108]
   14000b769:	call   0x14000b18c
   14000b76e:	mov    rdx,r14
   14000b771:	mov    rcx,rdi
   14000b774:	mov    QWORD PTR [rax+0x108],r12
   14000b77b:	call   0x14000bd14
   14000b780:	test   al,al
   14000b782:	jne    0x14000b7ec
   14000b784:	mov    r15d,r12d
   14000b787:	cmp    DWORD PTR [r14],r12d
   14000b78a:	jle    0x14000ba62
   14000b790:	mov    rsi,r12
   14000b793:	call   0x140006e58
   14000b798:	movsxd rcx,DWORD PTR [r14+0x4]
   14000b79c:	add    rax,rsi
   14000b79f:	cmp    DWORD PTR [rcx+rax*1+0x4],r12d
   14000b7a4:	je     0x14000b7c1
   14000b7a6:	call   0x140006e58
   14000b7ab:	movsxd rcx,DWORD PTR [r14+0x4]
   14000b7af:	add    rax,rsi
   14000b7b2:	movsxd rbx,DWORD PTR [rcx+rax*1+0x4]
   14000b7b7:	call   0x140006e58
   14000b7bc:	add    rax,rbx
   14000b7bf:	jmp    0x14000b7c4
   14000b7c1:	mov    rax,r12
   14000b7c4:	lea    rdx,[rip+0x2c3ed]        # 0x140037bb8
   14000b7cb:	mov    rcx,rax
   14000b7ce:	call   0x1400073a0
   14000b7d3:	test   al,al
   14000b7d5:	jne    0x14000ba68
   14000b7db:	inc    r15d
   14000b7de:	add    rsi,0x14
   14000b7e2:	cmp    r15d,DWORD PTR [r14]
   14000b7e5:	jl     0x14000b793
   14000b7e7:	jmp    0x14000ba62
   14000b7ec:	mov    r14,QWORD PTR [rbp+0x57]
   14000b7f0:	cmp    DWORD PTR [rdi],0xe06d7363
   14000b7f6:	jne    0x14000ba2a
   14000b7fc:	cmp    DWORD PTR [rdi+0x18],0x4
   14000b800:	jne    0x14000ba2a
   14000b806:	mov    eax,DWORD PTR [rdi+0x20]
   14000b809:	sub    eax,0x19930520
   14000b80e:	cmp    eax,0x2
   14000b811:	ja     0x14000ba2a
   14000b817:	cmp    DWORD PTR [rbx+0xc],r12d
   14000b81b:	jbe    0x14000b96f
   14000b821:	mov    r8d,DWORD PTR [rbp+0x77]
   14000b825:	lea    rax,[rbp-0x41]
   14000b829:	mov    QWORD PTR [rsp+0x30],r15
   14000b82e:	mov    QWORD PTR [rsp+0x28],rax
   14000b833:	lea    rax,[rbp-0x45]
   14000b837:	mov    r9d,esi
   14000b83a:	mov    rdx,rbx
   14000b83d:	mov    rcx,r13
   14000b840:	mov    QWORD PTR [rsp+0x20],rax
   14000b845:	call   0x140006afc
   14000b84a:	mov    ecx,DWORD PTR [rbp-0x45]
   14000b84d:	mov    edx,DWORD PTR [rbp-0x41]
   14000b850:	cmp    ecx,edx
   14000b852:	jae    0x14000b96f
   14000b858:	lea    r14,[rax+0x10]
   14000b85c:	cmp    DWORD PTR [r14-0x10],esi
   14000b860:	jg     0x14000b951
   14000b866:	cmp    esi,DWORD PTR [r14-0xc]
   14000b86a:	jg     0x14000b951
   14000b870:	call   0x140006e58
   14000b875:	movsxd r12,DWORD PTR [r14]
   14000b878:	add    r12,rax
   14000b87b:	mov    eax,DWORD PTR [r14-0x4]
   14000b87f:	mov    DWORD PTR [rbp-0x3d],eax
   14000b882:	test   eax,eax
   14000b884:	jle    0x14000b94b
   14000b88a:	call   0x140006e70
   14000b88f:	mov    rcx,QWORD PTR [rdi+0x30]
   14000b893:	movsxd rdx,DWORD PTR [rcx+0xc]
   14000b897:	add    rax,0x4
   14000b89b:	add    rax,rdx
   14000b89e:	mov    QWORD PTR [rbp-0x31],rax
   14000b8a2:	call   0x140006e70
   14000b8a7:	mov    rcx,QWORD PTR [rdi+0x30]
   14000b8ab:	movsxd rdx,DWORD PTR [rcx+0xc]
   14000b8af:	mov    ecx,DWORD PTR [rax+rdx*1]
   14000b8b2:	mov    DWORD PTR [rbp-0x39],ecx
   14000b8b5:	test   ecx,ecx
   14000b8b7:	jle    0x14000b8f0
   14000b8b9:	call   0x140006e70
   14000b8be:	mov    rcx,QWORD PTR [rbp-0x31]
   14000b8c2:	mov    r8,QWORD PTR [rdi+0x30]
   14000b8c6:	movsxd rcx,DWORD PTR [rcx]
   14000b8c9:	add    rax,rcx
   14000b8cc:	mov    rcx,r12
   14000b8cf:	mov    rdx,rax
   14000b8d2:	mov    QWORD PTR [rbp-0x29],rax
   14000b8d6:	call   0x14000cda0
   14000b8db:	test   eax,eax
   14000b8dd:	jne    0x14000b8fb
   14000b8df:	mov    eax,DWORD PTR [rbp-0x39]
   14000b8e2:	add    QWORD PTR [rbp-0x31],0x4
   14000b8e7:	dec    eax
   14000b8e9:	mov    DWORD PTR [rbp-0x39],eax
   14000b8ec:	test   eax,eax
   14000b8ee:	jg     0x14000b8b9
   14000b8f0:	mov    eax,DWORD PTR [rbp-0x3d]
   14000b8f3:	dec    eax
   14000b8f5:	add    r12,0x14
   14000b8f9:	jmp    0x14000b87f
   14000b8fb:	mov    al,BYTE PTR [rbp+0x6f]
   14000b8fe:	mov    r8,QWORD PTR [rbp+0x57]
   14000b902:	mov    r9,r15
   14000b905:	mov    BYTE PTR [rsp+0x58],al
   14000b909:	mov    al,BYTE PTR [rbp+0x47]
   14000b90c:	mov    rdx,r13
   14000b90f:	mov    BYTE PTR [rsp+0x50],al
   14000b913:	mov    rax,QWORD PTR [rbp+0x7f]
   14000b917:	mov    rcx,rdi
   14000b91a:	mov    QWORD PTR [rsp+0x48],rax
   14000b91f:	mov    eax,DWORD PTR [rbp+0x77]
   14000b922:	mov    BYTE PTR [rbp-0x49],0x1
   14000b926:	mov    DWORD PTR [rsp+0x40],eax
   14000b92a:	lea    rax,[r14-0x10]
   14000b92e:	mov    QWORD PTR [rsp+0x38],rax
   14000b933:	mov    rax,QWORD PTR [rbp-0x29]
   14000b937:	mov    QWORD PTR [rsp+0x30],rax
   14000b93c:	mov    QWORD PTR [rsp+0x28],r12
   14000b941:	mov    QWORD PTR [rsp+0x20],rbx
   14000b946:	call   0x14000b4a8
   14000b94b:	mov    edx,DWORD PTR [rbp-0x41]
   14000b94e:	mov    ecx,DWORD PTR [rbp-0x45]
   14000b951:	inc    ecx
   14000b953:	add    r14,0x14
   14000b957:	mov    DWORD PTR [rbp-0x45],ecx
   14000b95a:	cmp    ecx,edx
   14000b95c:	jb     0x14000b85c
   14000b962:	xor    r12d,r12d
   14000b965:	cmp    BYTE PTR [rbp-0x49],r12b
   14000b969:	jne    0x14000b9fc
   14000b96f:	mov    eax,DWORD PTR [rbx]
   14000b971:	and    eax,0x1fffffff
   14000b976:	cmp    eax,0x19930521
   14000b97b:	jb     0x14000b9fc
   14000b97d:	mov    esi,DWORD PTR [rbx+0x20]
   14000b980:	test   esi,esi
   14000b982:	je     0x14000b991
   14000b984:	movsxd rsi,esi
   14000b987:	call   0x140006e58
   14000b98c:	add    rax,rsi
   14000b98f:	jmp    0x14000b994
   14000b991:	mov    rax,r12
   14000b994:	test   rax,rax
   14000b997:	je     0x14000b9fc
   14000b999:	test   esi,esi
   14000b99b:	je     0x14000b9ae
   14000b99d:	call   0x140006e58
   14000b9a2:	mov    rdx,rax
   14000b9a5:	movsxd rax,DWORD PTR [rbx+0x20]
   14000b9a9:	add    rdx,rax
   14000b9ac:	jmp    0x14000b9b1
   14000b9ae:	mov    rdx,r12
   14000b9b1:	mov    rcx,rdi
   14000b9b4:	call   0x14000bd14
   14000b9b9:	test   al,al
   14000b9bb:	jne    0x14000b9fc
   14000b9bd:	lea    r9,[rbp+0x47]
   14000b9c1:	mov    r8,rbx
   14000b9c4:	mov    rdx,r15
   14000b9c7:	mov    rcx,r13
   14000b9ca:	call   0x140006a30
   14000b9cf:	mov    cl,BYTE PTR [rbp+0x6f]
   14000b9d2:	mov    r8,QWORD PTR [rbp+0x57]
   14000b9d6:	mov    BYTE PTR [rsp+0x40],cl
   14000b9da:	mov    QWORD PTR [rsp+0x38],r15
   14000b9df:	mov    QWORD PTR [rsp+0x30],rbx
   14000b9e4:	or     DWORD PTR [rsp+0x28],0xffffffff
   14000b9e9:	mov    r9,rax
   14000b9ec:	mov    rdx,rdi
   14000b9ef:	mov    rcx,r13
   14000b9f2:	mov    QWORD PTR [rsp+0x20],r12
   14000b9f7:	call   0x140006f00
   14000b9fc:	call   0x14000b18c
   14000ba01:	cmp    QWORD PTR [rax+0x108],r12
   14000ba08:	je     0x14000ba0f
   14000ba0a:	call   0x14000982c
   14000ba0f:	mov    rbx,QWORD PTR [rsp+0xf8]
   14000ba17:	add    rsp,0xb0
   14000ba1e:	pop    r15
   14000ba20:	pop    r14
   14000ba22:	pop    r13
   14000ba24:	pop    r12
   14000ba26:	pop    rdi
   14000ba27:	pop    rsi
   14000ba28:	pop    rbp
   14000ba29:	ret    
   14000ba2a:	cmp    DWORD PTR [rbx+0xc],r12d
   14000ba2e:	jbe    0x14000b9fc
   14000ba30:	cmp    BYTE PTR [rbp+0x6f],r12b
   14000ba34:	jne    0x14000baa6
   14000ba36:	mov    rax,QWORD PTR [rbp+0x7f]
   14000ba3a:	mov    r9,r15
   14000ba3d:	mov    r8,r14
   14000ba40:	mov    QWORD PTR [rsp+0x38],rax
   14000ba45:	mov    eax,DWORD PTR [rbp+0x77]
   14000ba48:	mov    rdx,r13
   14000ba4b:	mov    DWORD PTR [rsp+0x30],eax
   14000ba4f:	mov    rcx,rdi
   14000ba52:	mov    DWORD PTR [rsp+0x28],esi
   14000ba56:	mov    QWORD PTR [rsp+0x20],rbx
   14000ba5b:	call   0x14000baac
   14000ba60:	jmp    0x14000b9fc
   14000ba62:	call   0x14000984c
   14000ba67:	int3   
   14000ba68:	mov    dl,0x1
   14000ba6a:	mov    rcx,rdi
   14000ba6d:	call   0x14000b39c
   14000ba72:	lea    rax,[rip+0x1eedf]        # 0x14002a958
   14000ba79:	lea    rdx,[rbp+0x47]
   14000ba7d:	lea    rcx,[rbp-0x19]
   14000ba81:	mov    QWORD PTR [rbp+0x47],rax
   14000ba85:	call   0x1400078c0
   14000ba8a:	lea    rax,[rip+0x1eeb7]        # 0x14002a948
   14000ba91:	lea    rdx,[rip+0x29308]        # 0x140034da0
   14000ba98:	lea    rcx,[rbp-0x19]
   14000ba9c:	mov    QWORD PTR [rbp-0x19],rax
   14000baa0:	call   0x140006894
   14000baa5:	int3   
   14000baa6:	call   0x14000984c
   14000baab:	int3   
   14000baac:	mov    QWORD PTR [rsp+0x10],rbx
   14000bab1:	mov    QWORD PTR [rsp+0x18],r8
   14000bab6:	push   rbp
   14000bab7:	push   rsi
   14000bab8:	push   rdi
   14000bab9:	push   r12
   14000babb:	push   r13
   14000babd:	push   r14
   14000babf:	push   r15
   14000bac1:	sub    rsp,0x70
   14000bac5:	cmp    DWORD PTR [rcx],0x80000003
   14000bacb:	mov    r15,r9
   14000bace:	mov    rdi,r8
   14000bad1:	mov    r12,rdx
   14000bad4:	mov    rsi,rcx
   14000bad7:	je     0x14000bcf9
   14000badd:	call   0x14000b18c
   14000bae2:	mov    rbp,QWORD PTR [rsp+0xd0]
   14000baea:	cmp    QWORD PTR [rax+0xe0],0x0
   14000baf2:	je     0x14000bb55
   14000baf4:	xor    ecx,ecx
   14000baf6:	call   QWORD PTR [rip+0x1b574]        # 0x140027070
   14000bafc:	mov    rbx,rax
   14000baff:	call   0x14000b18c
   14000bb04:	cmp    QWORD PTR [rax+0xe0],rbx
   14000bb0b:	je     0x14000bb55
   14000bb0d:	cmp    DWORD PTR [rsi],0xe0434f4d
   14000bb13:	je     0x14000bb55
   14000bb15:	cmp    DWORD PTR [rsi],0xe0434352
   14000bb1b:	mov    ebx,DWORD PTR [rsp+0xe0]
   14000bb22:	je     0x14000bb5c
   14000bb24:	mov    rax,QWORD PTR [rsp+0xe8]
   14000bb2c:	mov    r9,r15
   14000bb2f:	mov    r8,rdi
   14000bb32:	mov    QWORD PTR [rsp+0x30],rax
   14000bb37:	mov    rdx,r12
   14000bb3a:	mov    rcx,rsi
   14000bb3d:	mov    DWORD PTR [rsp+0x28],ebx
   14000bb41:	mov    QWORD PTR [rsp+0x20],rbp
   14000bb46:	call   0x140006d60
   14000bb4b:	test   eax,eax
   14000bb4d:	jne    0x14000bcf9
   14000bb53:	jmp    0x14000bb5c
   14000bb55:	mov    ebx,DWORD PTR [rsp+0xe0]
   14000bb5c:	cmp    DWORD PTR [rbp+0xc],0x0
   14000bb60:	jne    0x14000bb67
   14000bb62:	call   0x14000982c
   14000bb67:	mov    r14d,DWORD PTR [rsp+0xd8]
   14000bb6f:	lea    rax,[rsp+0x60]
   14000bb74:	mov    QWORD PTR [rsp+0x30],r15
   14000bb79:	mov    QWORD PTR [rsp+0x28],rax
   14000bb7e:	lea    rax,[rsp+0xb0]
   14000bb86:	mov    r8d,ebx
   14000bb89:	mov    r9d,r14d
   14000bb8c:	mov    rdx,rbp
   14000bb8f:	mov    rcx,r12
   14000bb92:	mov    QWORD PTR [rsp+0x20],rax
   14000bb97:	call   0x140006afc
   14000bb9c:	mov    ecx,DWORD PTR [rsp+0xb0]
   14000bba3:	cmp    ecx,DWORD PTR [rsp+0x60]
   14000bba7:	jae    0x14000bcf9
   14000bbad:	lea    rdi,[rax+0xc]
   14000bbb1:	lea    r13,[rdi-0xc]
   14000bbb5:	cmp    r14d,DWORD PTR [r13+0x0]
   14000bbb9:	jl     0x14000bce2
   14000bbbf:	cmp    r14d,DWORD PTR [rdi-0x8]
   14000bbc3:	jg     0x14000bce2
   14000bbc9:	call   0x140006e58
   14000bbce:	movsxd rcx,DWORD PTR [rdi]
   14000bbd1:	lea    rdx,[rcx+rcx*4]
   14000bbd5:	movsxd rcx,DWORD PTR [rdi+0x4]
   14000bbd9:	lea    rdx,[rcx+rdx*4]
   14000bbdd:	cmp    DWORD PTR [rax+rdx*1-0x10],0x0
   14000bbe2:	je     0x14000bc07
   14000bbe4:	call   0x140006e58
   14000bbe9:	movsxd rcx,DWORD PTR [rdi]
   14000bbec:	lea    rdx,[rcx+rcx*4]
   14000bbf0:	movsxd rcx,DWORD PTR [rdi+0x4]
   14000bbf4:	lea    rdx,[rcx+rdx*4]
   14000bbf8:	movsxd rbx,DWORD PTR [rax+rdx*1-0x10]
   14000bbfd:	call   0x140006e58
   14000bc02:	add    rax,rbx
   14000bc05:	jmp    0x14000bc09
   14000bc07:	xor    eax,eax
   14000bc09:	test   rax,rax
   14000bc0c:	je     0x14000bc58
   14000bc0e:	call   0x140006e58
   14000bc13:	movsxd rcx,DWORD PTR [rdi]
   14000bc16:	lea    rdx,[rcx+rcx*4]
   14000bc1a:	movsxd rcx,DWORD PTR [rdi+0x4]
   14000bc1e:	lea    rdx,[rcx+rdx*4]
   14000bc22:	cmp    DWORD PTR [rax+rdx*1-0x10],0x0
   14000bc27:	je     0x14000bc4c
   14000bc29:	call   0x140006e58
   14000bc2e:	movsxd rcx,DWORD PTR [rdi]
   14000bc31:	lea    rdx,[rcx+rcx*4]
   14000bc35:	movsxd rcx,DWORD PTR [rdi+0x4]
   14000bc39:	lea    rdx,[rcx+rdx*4]
   14000bc3d:	movsxd rbx,DWORD PTR [rax+rdx*1-0x10]
   14000bc42:	call   0x140006e58
   14000bc47:	add    rax,rbx
   14000bc4a:	jmp    0x14000bc4e
   14000bc4c:	xor    eax,eax
   14000bc4e:	cmp    BYTE PTR [rax+0x10],0x0
   14000bc52:	jne    0x14000bcdb
   14000bc58:	call   0x140006e58
   14000bc5d:	movsxd rcx,DWORD PTR [rdi]
   14000bc60:	lea    rdx,[rcx+rcx*4]
   14000bc64:	movsxd rcx,DWORD PTR [rdi+0x4]
   14000bc68:	lea    rdx,[rcx+rdx*4]
   14000bc6c:	test   BYTE PTR [rax+rdx*1-0x14],0x40
   14000bc71:	jne    0x14000bcdb
   14000bc73:	call   0x140006e58
   14000bc78:	mov    ecx,DWORD PTR [rdi]
   14000bc7a:	mov    r8,QWORD PTR [rsp+0xc0]
   14000bc82:	mov    BYTE PTR [rsp+0x58],0x0
   14000bc87:	mov    BYTE PTR [rsp+0x50],0x1
   14000bc8c:	dec    ecx
   14000bc8e:	movsxd rcx,ecx
   14000bc91:	mov    r9,r15
   14000bc94:	lea    rdx,[rcx+rcx*4]
   14000bc98:	lea    rcx,[rax+rdx*4]
   14000bc9c:	movsxd rax,DWORD PTR [rdi+0x4]
   14000bca0:	mov    rdx,r12
   14000bca3:	add    rcx,rax
   14000bca6:	mov    rax,QWORD PTR [rsp+0xe8]
   14000bcae:	mov    QWORD PTR [rsp+0x48],rax
   14000bcb3:	mov    eax,DWORD PTR [rsp+0xe0]
   14000bcba:	mov    DWORD PTR [rsp+0x40],eax
   14000bcbe:	mov    QWORD PTR [rsp+0x38],r13
   14000bcc3:	and    QWORD PTR [rsp+0x30],0x0
   14000bcc9:	mov    QWORD PTR [rsp+0x28],rcx
   14000bcce:	mov    rcx,rsi
   14000bcd1:	mov    QWORD PTR [rsp+0x20],rbp
   14000bcd6:	call   0x14000b4a8
   14000bcdb:	mov    ecx,DWORD PTR [rsp+0xb0]
   14000bce2:	inc    ecx
   14000bce4:	add    rdi,0x14
   14000bce8:	mov    DWORD PTR [rsp+0xb0],ecx
   14000bcef:	cmp    ecx,DWORD PTR [rsp+0x60]
   14000bcf3:	jb     0x14000bbb1
   14000bcf9:	mov    rbx,QWORD PTR [rsp+0xb8]
   14000bd01:	add    rsp,0x70
   14000bd05:	pop    r15
   14000bd07:	pop    r14
   14000bd09:	pop    r13
   14000bd0b:	pop    r12
   14000bd0d:	pop    rdi
   14000bd0e:	pop    rsi
   14000bd0f:	pop    rbp
   14000bd10:	ret    
   14000bd11:	int3   
   14000bd12:	int3   
   14000bd13:	int3   
   14000bd14:	mov    QWORD PTR [rsp+0x8],rbx
   14000bd19:	mov    QWORD PTR [rsp+0x10],rbp
   14000bd1e:	mov    QWORD PTR [rsp+0x18],rsi
   14000bd23:	push   rdi
   14000bd24:	push   r12
   14000bd26:	push   r13
   14000bd28:	push   r14
   14000bd2a:	push   r15
   14000bd2c:	sub    rsp,0x20
   14000bd30:	mov    rsi,rdx
   14000bd33:	mov    r13,rcx
   14000bd36:	test   rdx,rdx
   14000bd39:	je     0x14000bde0
   14000bd3f:	xor    edi,edi
   14000bd41:	xor    r14b,r14b
   14000bd44:	cmp    DWORD PTR [rdx],edi
   14000bd46:	jle    0x14000bdc0
   14000bd48:	call   0x140006e70
   14000bd4d:	mov    rdx,rax
   14000bd50:	mov    rax,QWORD PTR [r13+0x30]
   14000bd54:	movsxd r15,DWORD PTR [rax+0xc]
   14000bd58:	add    r15,0x4
   14000bd5c:	add    r15,rdx
   14000bd5f:	call   0x140006e70
   14000bd64:	mov    rdx,rax
   14000bd67:	mov    rax,QWORD PTR [r13+0x30]
   14000bd6b:	movsxd rcx,DWORD PTR [rax+0xc]
   14000bd6f:	mov    ebp,DWORD PTR [rdx+rcx*1]
   14000bd72:	test   ebp,ebp
   14000bd74:	jle    0x14000bdba
   14000bd76:	movsxd rax,edi
   14000bd79:	lea    r12,[rax+rax*4]
   14000bd7d:	call   0x140006e70
   14000bd82:	mov    rbx,rax
   14000bd85:	movsxd rax,DWORD PTR [r15]
   14000bd88:	add    rbx,rax
   14000bd8b:	call   0x140006e58
   14000bd90:	movsxd rcx,DWORD PTR [rsi+0x4]
   14000bd94:	mov    r8,QWORD PTR [r13+0x30]
   14000bd98:	lea    rax,[rax+r12*4]
   14000bd9c:	mov    rdx,rbx
   14000bd9f:	add    rcx,rax
   14000bda2:	call   0x14000cda0
   14000bda7:	test   eax,eax
   14000bda9:	jne    0x14000bdb7
   14000bdab:	dec    ebp
   14000bdad:	add    r15,0x4
   14000bdb1:	test   ebp,ebp
   14000bdb3:	jg     0x14000bd7d
   14000bdb5:	jmp    0x14000bdba
   14000bdb7:	mov    r14b,0x1
   14000bdba:	inc    edi
   14000bdbc:	cmp    edi,DWORD PTR [rsi]
   14000bdbe:	jl     0x14000bd48
   14000bdc0:	mov    rbx,QWORD PTR [rsp+0x50]
   14000bdc5:	mov    rbp,QWORD PTR [rsp+0x58]
   14000bdca:	mov    rsi,QWORD PTR [rsp+0x60]
   14000bdcf:	mov    al,r14b
   14000bdd2:	add    rsp,0x20
   14000bdd6:	pop    r15
   14000bdd8:	pop    r14
   14000bdda:	pop    r13
   14000bddc:	pop    r12
   14000bdde:	pop    rdi
   14000bddf:	ret    
   14000bde0:	call   0x14000982c
   14000bde5:	call   0x14000984c
   14000bdea:	int3   
   14000bdeb:	int3   
   14000bdec:	mov    QWORD PTR [rsp+0x8],rbx
   14000bdf1:	mov    QWORD PTR [rsp+0x10],rbp
   14000bdf6:	mov    QWORD PTR [rsp+0x18],rsi
   14000bdfb:	push   rdi
   14000bdfc:	sub    rsp,0x20
   14000be00:	xor    ebp,ebp
   14000be02:	mov    rdi,rcx
   14000be05:	cmp    DWORD PTR [rcx],ebp
   14000be07:	jle    0x14000be58
   14000be09:	xor    esi,esi
   14000be0b:	call   0x140006e58
   14000be10:	movsxd rcx,DWORD PTR [rdi+0x4]
   14000be14:	add    rax,rsi
   14000be17:	cmp    DWORD PTR [rcx+rax*1+0x4],0x0
   14000be1c:	je     0x14000be39
   14000be1e:	call   0x140006e58
   14000be23:	movsxd rcx,DWORD PTR [rdi+0x4]
   14000be27:	add    rax,rsi
   14000be2a:	movsxd rbx,DWORD PTR [rcx+rax*1+0x4]
   14000be2f:	call   0x140006e58
   14000be34:	add    rax,rbx
   14000be37:	jmp    0x14000be3b
   14000be39:	xor    eax,eax
   14000be3b:	lea    rdx,[rip+0x2bd76]        # 0x140037bb8
   14000be42:	mov    rcx,rax
   14000be45:	call   0x1400073a0
   14000be4a:	test   al,al
   14000be4c:	jne    0x14000be6f
   14000be4e:	inc    ebp
   14000be50:	add    rsi,0x14
   14000be54:	cmp    ebp,DWORD PTR [rdi]
   14000be56:	jl     0x14000be0b
   14000be58:	xor    al,al
   14000be5a:	mov    rbx,QWORD PTR [rsp+0x30]
   14000be5f:	mov    rbp,QWORD PTR [rsp+0x38]
   14000be64:	mov    rsi,QWORD PTR [rsp+0x40]
   14000be69:	add    rsp,0x20
   14000be6d:	pop    rdi
   14000be6e:	ret    
   14000be6f:	mov    al,0x1
   14000be71:	jmp    0x14000be5a
   14000be73:	int3   
   14000be74:	mov    r8d,DWORD PTR [rcx+0x18]
   14000be78:	mov    edx,DWORD PTR [rcx+0x4]
   14000be7b:	lea    r9,[rcx+0x20]
   14000be7f:	mov    ecx,DWORD PTR [rcx]
   14000be81:	rex.W jmp QWORD PTR [rip+0x1b248]        # 0x1400270d0
   14000be88:	sub    rsp,0x28
   14000be8c:	call   0x14000b18c
   14000be91:	xor    ecx,ecx
   14000be93:	cmp    DWORD PTR [rax+0x100],ecx
   14000be99:	setne  al
   14000be9c:	add    rsp,0x28
   14000bea0:	ret    
   14000bea1:	int3   
   14000bea2:	int3   
   14000bea3:	int3   
   14000bea4:	mov    rax,rsp
   14000bea7:	mov    QWORD PTR [rax+0x8],rbx
   14000beab:	mov    QWORD PTR [rax+0x10],rbp
   14000beaf:	mov    QWORD PTR [rax+0x18],rsi
   14000beb3:	mov    QWORD PTR [rax+0x20],rdi
   14000beb7:	push   r14
   14000beb9:	sub    rsp,0x20
   14000bebd:	mov    rbx,rdx
   14000bec0:	mov    r14,rcx
   14000bec3:	test   rdx,rdx
   14000bec6:	jne    0x14000becd
   14000bec8:	call   0x14000982c
   14000becd:	mov    rbx,QWORD PTR [rbx]
   14000bed0:	test   rbx,rbx
   14000bed3:	jne    0x14000beda
   14000bed5:	call   0x14000982c
   14000beda:	cmp    DWORD PTR [rbx],0xe06d7363
   14000bee0:	jne    0x14000bef5
   14000bee2:	cmp    DWORD PTR [rbx+0x18],0x4
   14000bee6:	jne    0x14000bef5
   14000bee8:	mov    eax,DWORD PTR [rbx+0x20]
   14000beeb:	sub    eax,0x19930520
   14000bef0:	cmp    eax,0x2
   14000bef3:	jbe    0x14000befa
   14000bef5:	call   0x14000982c
   14000befa:	mov    rbp,QWORD PTR [rbx+0x38]
   14000befe:	mov    rax,QWORD PTR [rbx+0x30]
   14000bf02:	movsxd rcx,DWORD PTR [rax+0xc]
   14000bf06:	lea    rsi,[rbp+0x4]
   14000bf0a:	mov    edi,DWORD PTR [rcx+rbp*1]
   14000bf0d:	add    rsi,rcx
   14000bf10:	jmp    0x14000bf3b
   14000bf12:	movsxd rax,DWORD PTR [rsi]
   14000bf15:	mov    rcx,r14
   14000bf18:	movsxd rbx,DWORD PTR [rax+rbp*1+0x4]
   14000bf1d:	call   0x140007454
   14000bf22:	lea    rdx,[rbp+0x10]
   14000bf26:	mov    rcx,rax
   14000bf29:	add    rdx,rbx
   14000bf2c:	call   0x14000d0d0
   14000bf31:	test   eax,eax
   14000bf33:	je     0x14000bf5c
   14000bf35:	dec    edi
   14000bf37:	add    rsi,0x4
   14000bf3b:	test   edi,edi
   14000bf3d:	jg     0x14000bf12
   14000bf3f:	xor    eax,eax
   14000bf41:	mov    rbx,QWORD PTR [rsp+0x30]
   14000bf46:	mov    rbp,QWORD PTR [rsp+0x38]
   14000bf4b:	mov    rsi,QWORD PTR [rsp+0x40]
   14000bf50:	mov    rdi,QWORD PTR [rsp+0x48]
   14000bf55:	add    rsp,0x20
   14000bf59:	pop    r14
   14000bf5b:	ret    
   14000bf5c:	mov    eax,0x1
   14000bf61:	jmp    0x14000bf41
   14000bf63:	int3   
   14000bf64:	mov    QWORD PTR [rip+0x2c70d],rcx        # 0x140038678
   14000bf6b:	ret    
   14000bf6c:	movsxd rax,DWORD PTR [rdx]
   14000bf6f:	add    rax,rcx
   14000bf72:	cmp    DWORD PTR [rdx+0x4],0x0
   14000bf76:	jl     0x14000bf8e
   14000bf78:	movsxd r9,DWORD PTR [rdx+0x4]
   14000bf7c:	movsxd rdx,DWORD PTR [rdx+0x8]
   14000bf80:	mov    rcx,QWORD PTR [r9+rcx*1]
   14000bf84:	movsxd r8,DWORD PTR [rdx+rcx*1]
   14000bf88:	add    r8,r9
   14000bf8b:	add    rax,r8
   14000bf8e:	ret    
   14000bf8f:	int3   
   14000bf90:	mov    QWORD PTR [rsp+0x8],rbx
   14000bf95:	mov    QWORD PTR [rsp+0x10],rsi
   14000bf9a:	mov    QWORD PTR [rsp+0x18],rdi
   14000bf9f:	push   r14
   14000bfa1:	sub    rsp,0x20
   14000bfa5:	mov    rdi,r9
   14000bfa8:	mov    r14,rcx
   14000bfab:	test   DWORD PTR [r8],0x80000000
   14000bfb2:	je     0x14000bfb9
   14000bfb4:	mov    rsi,rdx
   14000bfb7:	jmp    0x14000bfc0
   14000bfb9:	movsxd rsi,DWORD PTR [r8+0x8]
   14000bfbd:	add    rsi,QWORD PTR [rdx]
   14000bfc0:	call   0x14000c048
   14000bfc5:	dec    eax
   14000bfc7:	je     0x14000c000
   14000bfc9:	dec    eax
   14000bfcb:	jne    0x14000c028
   14000bfcd:	xor    ebx,ebx
   14000bfcf:	cmp    DWORD PTR [rdi+0x18],ebx
   14000bfd2:	je     0x14000bfe3
   14000bfd4:	call   0x140006e70
   14000bfd9:	mov    rbx,rax
   14000bfdc:	movsxd rax,DWORD PTR [rdi+0x18]
   14000bfe0:	add    rbx,rax
   14000bfe3:	lea    rdx,[rdi+0x8]
   14000bfe7:	mov    rcx,QWORD PTR [r14+0x28]
   14000bfeb:	call   0x14000bf6c
   14000bff0:	mov    rdx,rax
   14000bff3:	mov    r8d,0x1
   14000bff9:	mov    rcx,rsi
   14000bffc:	call   rbx
   14000bffe:	jmp    0x14000c028
   14000c000:	xor    ebx,ebx
   14000c002:	cmp    DWORD PTR [rdi+0x18],ebx
   14000c005:	je     0x14000c013
   14000c007:	call   0x140006e70
   14000c00c:	movsxd rbx,DWORD PTR [rdi+0x18]
   14000c010:	add    rbx,rax
   14000c013:	lea    rdx,[rdi+0x8]
   14000c017:	mov    rcx,QWORD PTR [r14+0x28]
   14000c01b:	call   0x14000bf6c
   14000c020:	mov    rdx,rax
   14000c023:	mov    rcx,rsi
   14000c026:	call   rbx
   14000c028:	jmp    0x14000c030
   14000c02a:	call   0x14000984c
   14000c02f:	nop
   14000c030:	mov    rbx,QWORD PTR [rsp+0x30]
   14000c035:	mov    rsi,QWORD PTR [rsp+0x38]
   14000c03a:	mov    rdi,QWORD PTR [rsp+0x40]
   14000c03f:	add    rsp,0x20
   14000c043:	pop    r14
   14000c045:	ret    
   14000c046:	int3   
   14000c047:	int3   
   14000c048:	mov    QWORD PTR [rsp+0x8],rbx
   14000c04d:	mov    QWORD PTR [rsp+0x10],rsi
   14000c052:	mov    QWORD PTR [rsp+0x18],rdi
   14000c057:	push   r13
   14000c059:	push   r14
   14000c05b:	push   r15
   14000c05d:	sub    rsp,0x30
   14000c061:	mov    r14,r9
   14000c064:	mov    rbx,r8
   14000c067:	mov    rsi,rdx
   14000c06a:	mov    r13,rcx
   14000c06d:	xor    edi,edi
   14000c06f:	mov    r15d,DWORD PTR [r8+0x4]
   14000c073:	test   r15d,r15d
   14000c076:	je     0x14000c086
   14000c078:	movsxd r15,r15d
   14000c07b:	call   0x140006e58
   14000c080:	lea    rdx,[r15+rax*1]
   14000c084:	jmp    0x14000c089
   14000c086:	mov    rdx,rdi
   14000c089:	test   rdx,rdx
   14000c08c:	je     0x14000c27b
   14000c092:	test   r15d,r15d
   14000c095:	je     0x14000c0a8
   14000c097:	call   0x140006e58
   14000c09c:	mov    rcx,rax
   14000c09f:	movsxd rax,DWORD PTR [rbx+0x4]
   14000c0a3:	add    rcx,rax
   14000c0a6:	jmp    0x14000c0ab
   14000c0a8:	mov    rcx,rdi
   14000c0ab:	cmp    BYTE PTR [rcx+0x10],dil
   14000c0af:	je     0x14000c27b
   14000c0b5:	cmp    DWORD PTR [rbx+0x8],edi
   14000c0b8:	jne    0x14000c0c6
   14000c0ba:	test   DWORD PTR [rbx],0x80000000
   14000c0c0:	je     0x14000c27b
   14000c0c6:	mov    ecx,DWORD PTR [rbx]
   14000c0c8:	test   ecx,ecx
   14000c0ca:	js     0x14000c0d6
   14000c0cc:	movsxd rax,DWORD PTR [rbx+0x8]
   14000c0d0:	add    rax,QWORD PTR [rsi]
   14000c0d3:	mov    rsi,rax
   14000c0d6:	test   cl,cl
   14000c0d8:	jns    0x14000c131
   14000c0da:	test   BYTE PTR [r14],0x10
   14000c0de:	je     0x14000c131
   14000c0e0:	mov    rax,QWORD PTR [rip+0x2c591]        # 0x140038678
   14000c0e7:	test   rax,rax
   14000c0ea:	je     0x14000c131
   14000c0ec:	call   rax
   14000c0ee:	mov    r15,rax
   14000c0f1:	mov    ebx,0x1
   14000c0f6:	mov    edx,ebx
   14000c0f8:	mov    rcx,rax
   14000c0fb:	call   0x140011530
   14000c100:	test   eax,eax
   14000c102:	je     0x14000c26b
   14000c108:	mov    edx,ebx
   14000c10a:	mov    rcx,rsi
   14000c10d:	call   0x14001153c
   14000c112:	test   eax,eax
   14000c114:	je     0x14000c26b
   14000c11a:	mov    QWORD PTR [rsi],r15
   14000c11d:	mov    rcx,r15
   14000c120:	lea    rdx,[r14+0x8]
   14000c124:	call   0x14000bf6c
   14000c129:	mov    QWORD PTR [rsi],rax
   14000c12c:	jmp    0x14000c271
   14000c131:	mov    ebx,0x1
   14000c136:	test   cl,0x8
   14000c139:	je     0x14000c169
   14000c13b:	mov    edx,ebx
   14000c13d:	mov    rcx,QWORD PTR [r13+0x28]
   14000c141:	call   0x140011530
   14000c146:	test   eax,eax
   14000c148:	je     0x14000c26b
   14000c14e:	mov    edx,ebx
   14000c150:	mov    rcx,rsi
   14000c153:	call   0x14001153c
   14000c158:	test   eax,eax
   14000c15a:	je     0x14000c26b
   14000c160:	mov    rcx,QWORD PTR [r13+0x28]
   14000c164:	mov    QWORD PTR [rsi],rcx
   14000c167:	jmp    0x14000c120
   14000c169:	test   BYTE PTR [r14],bl
   14000c16c:	je     0x14000c1bf
   14000c16e:	mov    edx,ebx
   14000c170:	mov    rcx,QWORD PTR [r13+0x28]
   14000c174:	call   0x140011530
   14000c179:	test   eax,eax
   14000c17b:	je     0x14000c26b
   14000c181:	mov    edx,ebx
   14000c183:	mov    rcx,rsi
   14000c186:	call   0x14001153c
   14000c18b:	test   eax,eax
   14000c18d:	je     0x14000c26b
   14000c193:	movsxd r8,DWORD PTR [r14+0x14]
   14000c197:	mov    rdx,QWORD PTR [r13+0x28]
   14000c19b:	mov    rcx,rsi
   14000c19e:	call   0x1400056d0
   14000c1a3:	cmp    DWORD PTR [r14+0x14],0x8
   14000c1a8:	jne    0x14000c271
   14000c1ae:	cmp    QWORD PTR [rsi],rdi
   14000c1b1:	je     0x14000c271
   14000c1b7:	mov    rcx,QWORD PTR [rsi]
   14000c1ba:	jmp    0x14000c120
   14000c1bf:	cmp    DWORD PTR [r14+0x18],edi
   14000c1c3:	je     0x14000c1d6
   14000c1c5:	call   0x140006e70
   14000c1ca:	mov    rcx,rax
   14000c1cd:	movsxd rax,DWORD PTR [r14+0x18]
   14000c1d1:	add    rcx,rax
   14000c1d4:	jmp    0x14000c1d9
   14000c1d6:	mov    rcx,rdi
   14000c1d9:	mov    edx,ebx
   14000c1db:	test   rcx,rcx
   14000c1de:	mov    rcx,QWORD PTR [r13+0x28]
   14000c1e2:	jne    0x14000c21c
   14000c1e4:	call   0x140011530
   14000c1e9:	test   eax,eax
   14000c1eb:	je     0x14000c26b
   14000c1ed:	mov    edx,ebx
   14000c1ef:	mov    rcx,rsi
   14000c1f2:	call   0x14001153c
   14000c1f7:	test   eax,eax
   14000c1f9:	je     0x14000c26b
   14000c1fb:	movsxd rbx,DWORD PTR [r14+0x14]
   14000c1ff:	lea    rdx,[r14+0x8]
   14000c203:	mov    rcx,QWORD PTR [r13+0x28]
   14000c207:	call   0x14000bf6c
   14000c20c:	mov    rdx,rax
   14000c20f:	mov    r8,rbx
   14000c212:	mov    rcx,rsi
   14000c215:	call   0x1400056d0
   14000c21a:	jmp    0x14000c271
   14000c21c:	call   0x140011530
   14000c221:	test   eax,eax
   14000c223:	je     0x14000c26b
   14000c225:	mov    edx,ebx
   14000c227:	mov    rcx,rsi
   14000c22a:	call   0x14001153c
   14000c22f:	test   eax,eax
   14000c231:	je     0x14000c26b
   14000c233:	cmp    DWORD PTR [r14+0x18],edi
   14000c237:	je     0x14000c24a
   14000c239:	call   0x140006e70
   14000c23e:	mov    rcx,rax
   14000c241:	movsxd rax,DWORD PTR [r14+0x18]
   14000c245:	add    rcx,rax
   14000c248:	jmp    0x14000c24d
   14000c24a:	mov    rcx,rdi
   14000c24d:	call   0x140011524
   14000c252:	test   eax,eax
   14000c254:	je     0x14000c26b
   14000c256:	mov    al,BYTE PTR [r14]
   14000c259:	and    al,0x4
   14000c25b:	neg    al
   14000c25d:	sbb    ecx,ecx
   14000c25f:	neg    ecx
   14000c261:	add    ecx,ebx
   14000c263:	mov    edi,ecx
   14000c265:	mov    DWORD PTR [rsp+0x20],ecx
   14000c269:	jmp    0x14000c271
   14000c26b:	call   0x14000982c
   14000c270:	nop
   14000c271:	mov    eax,edi
   14000c273:	jmp    0x14000c27d
   14000c275:	call   0x14000984c
   14000c27a:	nop
   14000c27b:	xor    eax,eax
   14000c27d:	mov    rbx,QWORD PTR [rsp+0x50]
   14000c282:	mov    rsi,QWORD PTR [rsp+0x58]
   14000c287:	mov    rdi,QWORD PTR [rsp+0x60]
   14000c28c:	add    rsp,0x30
   14000c290:	pop    r15
   14000c292:	pop    r14
   14000c294:	pop    r13
   14000c296:	ret    
   14000c297:	int3   
   14000c298:	rex push rbx
   14000c29a:	push   rsi
   14000c29b:	push   rdi
   14000c29c:	push   r12
   14000c29e:	push   r13
   14000c2a0:	push   r14
   14000c2a2:	push   r15
   14000c2a4:	sub    rsp,0x90
   14000c2ab:	mov    rdi,rcx
   14000c2ae:	xor    r15d,r15d
   14000c2b1:	mov    DWORD PTR [rsp+0x20],r15d
   14000c2b6:	and    DWORD PTR [rsp+0xd0],r15d
   14000c2be:	and    QWORD PTR [rsp+0x40],r15
   14000c2c3:	and    QWORD PTR [rsp+0xe8],r15
   14000c2cb:	call   0x14000b18c
   14000c2d0:	mov    r13,QWORD PTR [rax+0xf8]
   14000c2d7:	mov    QWORD PTR [rsp+0x50],r13
   14000c2dc:	call   0x14000b18c
   14000c2e1:	mov    rax,QWORD PTR [rax+0xf0]
   14000c2e8:	mov    QWORD PTR [rsp+0xe0],rax
   14000c2f0:	mov    rsi,QWORD PTR [rdi+0x50]
   14000c2f4:	mov    QWORD PTR [rsp+0xd8],rsi
   14000c2fc:	mov    rax,QWORD PTR [rdi+0x48]
   14000c300:	mov    QWORD PTR [rsp+0x48],rax
   14000c305:	mov    rbx,QWORD PTR [rdi+0x40]
   14000c309:	mov    rax,QWORD PTR [rdi+0x30]
   14000c30d:	mov    QWORD PTR [rsp+0x58],rax
   14000c312:	mov    r14,QWORD PTR [rdi+0x28]
   14000c316:	mov    QWORD PTR [rsp+0x60],r14
   14000c31b:	call   0x14000b18c
   14000c320:	mov    QWORD PTR [rax+0xf0],rsi
   14000c327:	call   0x14000b18c
   14000c32c:	mov    QWORD PTR [rax+0xf8],rbx
   14000c333:	call   0x14000b18c
   14000c338:	mov    rdx,QWORD PTR [rax+0xf0]
   14000c33f:	mov    rdx,QWORD PTR [rdx+0x28]
   14000c343:	lea    rcx,[rsp+0x78]
   14000c348:	call   0x140006db4
   14000c34d:	mov    r12,rax
   14000c350:	mov    QWORD PTR [rsp+0x38],rax
   14000c355:	cmp    QWORD PTR [rdi+0x58],r15
   14000c359:	je     0x14000c37a
   14000c35b:	mov    DWORD PTR [rsp+0xd0],0x1
   14000c366:	call   0x14000b18c
   14000c36b:	mov    rcx,QWORD PTR [rax+0x138]
   14000c372:	mov    QWORD PTR [rsp+0xe8],rcx
   14000c37a:	mov    r8d,0x100
   14000c380:	mov    rdx,r14
   14000c383:	mov    rcx,QWORD PTR [rsp+0x58]
   14000c388:	call   0x140011560
   14000c38d:	mov    rbx,rax
   14000c390:	mov    QWORD PTR [rsp+0x40],rax
   14000c395:	mov    rdi,QWORD PTR [rsp+0xe0]
   14000c39d:	jmp    0x14000c41a
   14000c39f:	mov    DWORD PTR [rsp+0x20],0x1
   14000c3a7:	call   0x14000b18c
   14000c3ac:	and    DWORD PTR [rax+0x460],0x0
   14000c3b3:	mov    rsi,QWORD PTR [rsp+0xd8]
   14000c3bb:	cmp    DWORD PTR [rsp+0xd0],0x0
   14000c3c3:	je     0x14000c3e6
   14000c3c5:	mov    dl,0x1
   14000c3c7:	mov    rcx,rsi
   14000c3ca:	call   0x14000b39c
   14000c3cf:	mov    rax,QWORD PTR [rsp+0xe8]
   14000c3d7:	lea    r9,[rax+0x20]
   14000c3db:	mov    r8d,DWORD PTR [rax+0x18]
   14000c3df:	mov    edx,DWORD PTR [rax+0x4]
   14000c3e2:	mov    ecx,DWORD PTR [rax]
   14000c3e4:	jmp    0x14000c3f3
   14000c3e6:	lea    r9,[rsi+0x20]
   14000c3ea:	mov    r8d,DWORD PTR [rsi+0x18]
   14000c3ee:	mov    edx,DWORD PTR [rsi+0x4]
   14000c3f1:	mov    ecx,DWORD PTR [rsi]
   14000c3f3:	call   QWORD PTR [rip+0x1acd7]        # 0x1400270d0
   14000c3f9:	mov    r15d,DWORD PTR [rsp+0x20]
   14000c3fe:	mov    rbx,QWORD PTR [rsp+0x40]
   14000c403:	mov    r13,QWORD PTR [rsp+0x50]
   14000c408:	mov    rdi,QWORD PTR [rsp+0xe0]
   14000c410:	mov    r14,QWORD PTR [rsp+0x60]
   14000c415:	mov    r12,QWORD PTR [rsp+0x38]
   14000c41a:	mov    rcx,r12
   14000c41d:	call   0x140006df8
   14000c422:	test   r15d,r15d
   14000c425:	jne    0x14000c459
   14000c427:	cmp    DWORD PTR [rsi],0xe06d7363
   14000c42d:	jne    0x14000c459
   14000c42f:	cmp    DWORD PTR [rsi+0x18],0x4
   14000c433:	jne    0x14000c459
   14000c435:	mov    eax,DWORD PTR [rsi+0x20]
   14000c438:	sub    eax,0x19930520
   14000c43d:	cmp    eax,0x2
   14000c440:	ja     0x14000c459
   14000c442:	mov    rcx,QWORD PTR [rsi+0x28]
   14000c446:	call   0x140006e88
   14000c44b:	test   eax,eax
   14000c44d:	je     0x14000c459
   14000c44f:	mov    dl,0x1
   14000c451:	mov    rcx,rsi
   14000c454:	call   0x14000b39c
   14000c459:	call   0x14000b18c
   14000c45e:	mov    QWORD PTR [rax+0xf0],rdi
   14000c465:	call   0x14000b18c
   14000c46a:	mov    QWORD PTR [rax+0xf8],r13
   14000c471:	mov    rax,QWORD PTR [rsp+0x48]
   14000c476:	movsxd rcx,DWORD PTR [rax+0x1c]
   14000c47a:	mov    rax,QWORD PTR [r14]
   14000c47d:	mov    QWORD PTR [rcx+rax*1],0xfffffffffffffffe
   14000c485:	mov    rax,rbx
   14000c488:	add    rsp,0x90
   14000c48f:	pop    r15
   14000c491:	pop    r14
   14000c493:	pop    r13
   14000c495:	pop    r12
   14000c497:	pop    rdi
   14000c498:	pop    rsi
   14000c499:	pop    rbx
   14000c49a:	ret    
   14000c49b:	int3   
   14000c49c:	sub    rsp,0x28
   14000c4a0:	test   rcx,rcx
   14000c4a3:	je     0x14000c4dc
   14000c4a5:	mov    rcx,QWORD PTR [rcx]
   14000c4a8:	cmp    DWORD PTR [rcx],0xe06d7363
   14000c4ae:	jne    0x14000c4dc
   14000c4b0:	cmp    DWORD PTR [rcx+0x18],0x4
   14000c4b4:	jne    0x14000c4dc
   14000c4b6:	mov    eax,DWORD PTR [rcx+0x20]
   14000c4b9:	sub    eax,0x19930520
   14000c4be:	cmp    eax,0x2
   14000c4c1:	ja     0x14000c4dc
   14000c4c3:	cmp    QWORD PTR [rcx+0x30],0x0
   14000c4c8:	jne    0x14000c4dc
   14000c4ca:	call   0x14000b18c
   14000c4cf:	inc    DWORD PTR [rax+0x100]
   14000c4d5:	mov    eax,0x1
   14000c4da:	jmp    0x14000c4de
   14000c4dc:	xor    eax,eax
   14000c4de:	add    rsp,0x28
   14000c4e2:	ret    
   14000c4e3:	int3   
   14000c4e4:	mov    QWORD PTR [rsp+0x10],rbx
   14000c4e9:	mov    QWORD PTR [rsp+0x18],rsi
   14000c4ee:	mov    QWORD PTR [rsp+0x20],rdi
   14000c4f3:	push   r12
   14000c4f5:	push   r14
   14000c4f7:	push   r15
   14000c4f9:	sub    rsp,0x60
   14000c4fd:	mov    QWORD PTR [rsp+0x38],rsp
   14000c502:	mov    r12,r9
   14000c505:	mov    esi,r8d
   14000c508:	mov    rdi,rdx
   14000c50b:	test   rcx,rcx
   14000c50e:	jne    0x14000c517
   14000c510:	xor    eax,eax
   14000c512:	jmp    0x14000c6bf
   14000c517:	mov    rbx,QWORD PTR [rcx]
   14000c51a:	test   rdx,rdx
   14000c51d:	je     0x14000c525
   14000c51f:	cmp    BYTE PTR [rdx+0x10],0x0
   14000c523:	jne    0x14000c547
   14000c525:	cmp    DWORD PTR [rbx],0xe0434f4d
   14000c52b:	je     0x14000c67a
   14000c531:	cmp    DWORD PTR [rbx],0xe0434352
   14000c537:	je     0x14000c67a
   14000c53d:	test   sil,0x40
   14000c541:	je     0x14000c67a
   14000c547:	cmp    DWORD PTR [rbx],0xe06d7363
   14000c54d:	jne    0x14000c510
   14000c54f:	cmp    DWORD PTR [rbx+0x18],0x4
   14000c553:	jne    0x14000c510
   14000c555:	mov    eax,DWORD PTR [rbx+0x20]
   14000c558:	sub    eax,0x19930520
   14000c55d:	cmp    eax,0x2
   14000c560:	ja     0x14000c510
   14000c562:	cmp    QWORD PTR [rbx+0x30],0x0
   14000c567:	jne    0x14000c584
   14000c569:	call   0x14000b18c
   14000c56e:	cmp    QWORD PTR [rax+0xf0],0x0
   14000c576:	je     0x14000c510
   14000c578:	call   0x14000b18c
   14000c57d:	mov    rbx,QWORD PTR [rax+0xf0]
   14000c584:	call   0x140006e58
   14000c589:	mov    r15,rax
   14000c58c:	mov    QWORD PTR [rsp+0x30],rax
   14000c591:	mov    rcx,QWORD PTR [rbx+0x38]
   14000c595:	call   0x140006ee4
   14000c59a:	nop
   14000c59b:	lea    rdx,[rsp+0x80]
   14000c5a3:	mov    rcx,rdi
   14000c5a6:	call   QWORD PTR [rip+0x1ab1c]        # 0x1400270c8
   14000c5ac:	mov    QWORD PTR [rsp+0x80],rax
   14000c5b4:	mov    rcx,rax
   14000c5b7:	call   0x140006ec8
   14000c5bc:	sub    rdi,QWORD PTR [rsp+0x80]
   14000c5c4:	mov    DWORD PTR [rsp+0x44],edi
   14000c5c8:	mov    DWORD PTR [rsp+0x40],esi
   14000c5cc:	bts    esi,0x1f
   14000c5d0:	mov    DWORD PTR [rsp+0x40],esi
   14000c5d4:	call   0x140006e70
   14000c5d9:	mov    rcx,QWORD PTR [rbx+0x30]
   14000c5dd:	movsxd rsi,DWORD PTR [rcx+0xc]
   14000c5e1:	add    rax,0x4
   14000c5e5:	add    rsi,rax
   14000c5e8:	mov    QWORD PTR [rsp+0x28],rsi
   14000c5ed:	call   0x140006e70
   14000c5f2:	mov    rcx,QWORD PTR [rbx+0x30]
   14000c5f6:	movsxd rdx,DWORD PTR [rcx+0xc]
   14000c5fa:	mov    edi,DWORD PTR [rax+rdx*1]
   14000c5fd:	mov    DWORD PTR [rsp+0x20],edi
   14000c601:	test   edi,edi
   14000c603:	jle    0x14000c66d
   14000c605:	call   0x140006e70
   14000c60a:	mov    r14,rax
   14000c60d:	movsxd rax,DWORD PTR [rsi]
   14000c610:	add    r14,rax
   14000c613:	mov    r8,QWORD PTR [rbx+0x30]
   14000c617:	mov    rdx,r14
   14000c61a:	lea    rcx,[rsp+0x40]
   14000c61f:	call   0x14000cda0
   14000c624:	test   eax,eax
   14000c626:	je     0x14000c65c
   14000c628:	call   0x14000b18c
   14000c62d:	inc    DWORD PTR [rax+0x100]
   14000c633:	test   r12,r12
   14000c636:	je     0x14000c64b
   14000c638:	mov    r9,r14
   14000c63b:	lea    r8,[rsp+0x40]
   14000c640:	mov    rdx,r12
   14000c643:	mov    rcx,rbx
   14000c646:	call   0x14000bf90
   14000c64b:	lea    rdx,[rip+0x68]        # 0x14000c6ba
   14000c652:	mov    rcx,QWORD PTR [rsp+0x38]
   14000c657:	call   0x14000f840
   14000c65c:	dec    edi
   14000c65e:	mov    DWORD PTR [rsp+0x20],edi
   14000c662:	add    rsi,0x4
   14000c666:	mov    QWORD PTR [rsp+0x28],rsi
   14000c66b:	jmp    0x14000c601
   14000c66d:	mov    rcx,r15
   14000c670:	call   0x140006ec8
   14000c675:	jmp    0x14000c510
   14000c67a:	cmp    DWORD PTR [rbx],0xe06d7363
   14000c680:	jne    0x14000c6af
   14000c682:	cmp    DWORD PTR [rbx+0x18],0x4
   14000c686:	jne    0x14000c6af
   14000c688:	mov    eax,DWORD PTR [rbx+0x20]
   14000c68b:	sub    eax,0x19930520
   14000c690:	cmp    eax,0x2
   14000c693:	ja     0x14000c6af
   14000c695:	cmp    QWORD PTR [rbx+0x30],0x0
   14000c69a:	jne    0x14000c6af
   14000c69c:	call   0x14000b18c
   14000c6a1:	cmp    QWORD PTR [rax+0xf0],0x0
   14000c6a9:	je     0x14000c510
   14000c6af:	call   0x14000b18c
   14000c6b4:	inc    DWORD PTR [rax+0x100]
   14000c6ba:	mov    eax,0x1
   14000c6bf:	lea    r11,[rsp+0x60]
   14000c6c4:	mov    rbx,QWORD PTR [r11+0x28]
   14000c6c8:	mov    rsi,QWORD PTR [r11+0x30]
   14000c6cc:	mov    rdi,QWORD PTR [r11+0x38]
   14000c6d0:	mov    rsp,r11
   14000c6d3:	pop    r15
   14000c6d5:	pop    r14
   14000c6d7:	pop    r12
   14000c6d9:	ret    
   14000c6da:	int3   
   14000c6db:	int3   
   14000c6dc:	mov    eax,0x20
   14000c6e1:	ret    
   14000c6e2:	int3   
   14000c6e3:	int3   
   14000c6e4:	mov    QWORD PTR [rsp+0x8],rbx
   14000c6e9:	push   rdi
   14000c6ea:	sub    rsp,0x20
   14000c6ee:	mov    rdi,rdx
   14000c6f1:	test   rcx,rcx
   14000c6f4:	je     0x14000c766
   14000c6f6:	mov    rbx,QWORD PTR [rcx]
   14000c6f9:	test   rbx,rbx
   14000c6fc:	je     0x14000c766
   14000c6fe:	cmp    DWORD PTR [rbx],0xe06d7363
   14000c704:	jne    0x14000c72c
   14000c706:	cmp    DWORD PTR [rbx+0x18],0x4
   14000c70a:	jne    0x14000c72c
   14000c70c:	mov    eax,DWORD PTR [rbx+0x20]
   14000c70f:	sub    eax,0x19930520
   14000c714:	cmp    eax,0x2
   14000c717:	ja     0x14000c72c
   14000c719:	cmp    QWORD PTR [rbx+0x30],0x0
   14000c71e:	jne    0x14000c72c
   14000c720:	call   0x14000b18c
   14000c725:	mov    rbx,QWORD PTR [rax+0xf0]
   14000c72c:	mov    rdx,QWORD PTR [rbx+0x28]
   14000c730:	mov    rcx,rdi
   14000c733:	call   0x140006db4
   14000c738:	call   0x14000b18c
   14000c73d:	mov    rcx,QWORD PTR [rax+0xf0]
   14000c744:	mov    QWORD PTR [rdi+0x10],rcx
   14000c748:	call   0x14000b18c
   14000c74d:	mov    rcx,QWORD PTR [rax+0xf8]
   14000c754:	mov    QWORD PTR [rdi+0x18],rcx
   14000c758:	call   0x14000b18c
   14000c75d:	mov    QWORD PTR [rax+0xf0],rbx
   14000c764:	jmp    0x14000c770
   14000c766:	or     QWORD PTR [rdx+0x10],0xffffffffffffffff
   14000c76b:	or     QWORD PTR [rdx+0x18],0xffffffffffffffff
   14000c770:	call   0x14000b18c
   14000c775:	dec    DWORD PTR [rax+0x100]
   14000c77b:	call   0x14000b18c
   14000c780:	cmp    DWORD PTR [rax+0x100],0x0
   14000c787:	jge    0x14000c795
   14000c789:	call   0x14000b18c
   14000c78e:	and    DWORD PTR [rax+0x100],0x0
   14000c795:	mov    eax,0x1
   14000c79a:	mov    rbx,QWORD PTR [rsp+0x30]
   14000c79f:	add    rsp,0x20
   14000c7a3:	pop    rdi
   14000c7a4:	ret    
   14000c7a5:	int3   
   14000c7a6:	int3   
   14000c7a7:	int3   
   14000c7a8:	mov    QWORD PTR [rsp+0x8],rbx
   14000c7ad:	push   rdi
   14000c7ae:	sub    rsp,0x20
   14000c7b2:	cmp    QWORD PTR [rcx+0x10],0xffffffffffffffff
   14000c7b7:	mov    edi,edx
   14000c7b9:	mov    rbx,rcx
   14000c7bc:	je     0x14000c8f4
   14000c7c2:	call   0x140006df8
   14000c7c7:	test   edi,edi
   14000c7c9:	jne    0x14000c860
   14000c7cf:	call   0x14000b18c
   14000c7d4:	mov    rcx,QWORD PTR [rax+0xf0]
   14000c7db:	cmp    DWORD PTR [rcx],0xe06d7363
   14000c7e1:	jne    0x14000c860
   14000c7e3:	call   0x14000b18c
   14000c7e8:	mov    rcx,QWORD PTR [rax+0xf0]
   14000c7ef:	cmp    DWORD PTR [rcx+0x18],0x4
   14000c7f3:	jne    0x14000c860
   14000c7f5:	call   0x14000b18c
   14000c7fa:	mov    rcx,QWORD PTR [rax+0xf0]
   14000c801:	cmp    DWORD PTR [rcx+0x20],0x19930520
   14000c808:	je     0x14000c834
   14000c80a:	call   0x14000b18c
   14000c80f:	mov    rcx,QWORD PTR [rax+0xf0]
   14000c816:	cmp    DWORD PTR [rcx+0x20],0x19930521
   14000c81d:	je     0x14000c834
   14000c81f:	call   0x14000b18c
   14000c824:	mov    rcx,QWORD PTR [rax+0xf0]
   14000c82b:	cmp    DWORD PTR [rcx+0x20],0x19930522
   14000c832:	jne    0x14000c860
   14000c834:	call   0x14000b18c
   14000c839:	mov    rcx,QWORD PTR [rax+0xf0]
   14000c840:	mov    rcx,QWORD PTR [rcx+0x28]
   14000c844:	call   0x140006e88
   14000c849:	test   eax,eax
   14000c84b:	je     0x14000c860
   14000c84d:	call   0x14000b18c
   14000c852:	mov    dl,0x1
   14000c854:	mov    rcx,QWORD PTR [rax+0xf0]
   14000c85b:	call   0x14000b39c
   14000c860:	call   0x14000b18c
   14000c865:	mov    rcx,QWORD PTR [rax+0xf0]
   14000c86c:	cmp    DWORD PTR [rcx],0xe06d7363
   14000c872:	jne    0x14000c8d4
   14000c874:	call   0x14000b18c
   14000c879:	mov    rcx,QWORD PTR [rax+0xf0]
   14000c880:	cmp    DWORD PTR [rcx+0x18],0x4
   14000c884:	jne    0x14000c8d4
   14000c886:	call   0x14000b18c
   14000c88b:	mov    rcx,QWORD PTR [rax+0xf0]
   14000c892:	cmp    DWORD PTR [rcx+0x20],0x19930520
   14000c899:	je     0x14000c8c5
   14000c89b:	call   0x14000b18c
   14000c8a0:	mov    rcx,QWORD PTR [rax+0xf0]
   14000c8a7:	cmp    DWORD PTR [rcx+0x20],0x19930521
   14000c8ae:	je     0x14000c8c5
   14000c8b0:	call   0x14000b18c
   14000c8b5:	mov    rcx,QWORD PTR [rax+0xf0]
   14000c8bc:	cmp    DWORD PTR [rcx+0x20],0x19930522
   14000c8c3:	jne    0x14000c8d4
   14000c8c5:	test   edi,edi
   14000c8c7:	je     0x14000c8d4
   14000c8c9:	call   0x14000b18c
   14000c8ce:	dec    DWORD PTR [rax+0x100]
   14000c8d4:	call   0x14000b18c
   14000c8d9:	mov    rcx,QWORD PTR [rbx+0x10]
   14000c8dd:	mov    QWORD PTR [rax+0xf0],rcx
   14000c8e4:	call   0x14000b18c
   14000c8e9:	mov    rcx,QWORD PTR [rbx+0x18]
   14000c8ed:	mov    QWORD PTR [rax+0xf8],rcx
   14000c8f4:	mov    rbx,QWORD PTR [rsp+0x30]
   14000c8f9:	add    rsp,0x20
   14000c8fd:	pop    rdi
   14000c8fe:	ret    
   14000c8ff:	int3   
   14000c900:	sub    rsp,0x28
   14000c904:	mov    rax,QWORD PTR [rcx]
   14000c907:	cmp    DWORD PTR [rax],0xe0434352
   14000c90d:	je     0x14000c921
   14000c90f:	cmp    DWORD PTR [rax],0xe0434f4d
   14000c915:	je     0x14000c921
   14000c917:	cmp    DWORD PTR [rax],0xe06d7363
   14000c91d:	jne    0x14000c93a
   14000c91f:	jmp    0x14000c941
   14000c921:	call   0x14000b18c
   14000c926:	cmp    DWORD PTR [rax+0x100],0x0
   14000c92d:	jle    0x14000c93a
   14000c92f:	call   0x14000b18c
   14000c934:	dec    DWORD PTR [rax+0x100]
   14000c93a:	xor    eax,eax
   14000c93c:	add    rsp,0x28
   14000c940:	ret    
   14000c941:	call   0x14000b18c
   14000c946:	and    DWORD PTR [rax+0x100],0x0
   14000c94d:	call   0x14000984c
   14000c952:	int3   
   14000c953:	int3   
   14000c954:	mov    rax,rsp
   14000c957:	mov    DWORD PTR [rax+0x20],r9d
   14000c95b:	mov    QWORD PTR [rax+0x18],r8
   14000c95f:	mov    QWORD PTR [rax+0x10],rdx
   14000c963:	mov    QWORD PTR [rax+0x8],rcx
   14000c967:	push   rbx
   14000c968:	push   rsi
   14000c969:	push   rdi
   14000c96a:	push   r12
   14000c96c:	push   r13
   14000c96e:	push   r14
   14000c970:	push   r15
   14000c972:	sub    rsp,0x30
   14000c976:	mov    r12d,r9d
   14000c979:	mov    rsi,r8
   14000c97c:	mov    r13,rdx
   14000c97f:	mov    r15,rcx
   14000c982:	call   0x140006e58
   14000c987:	mov    QWORD PTR [rsp+0x28],rax
   14000c98c:	mov    r8,rsi
   14000c98f:	mov    rdx,r13
   14000c992:	mov    rcx,r15
   14000c995:	call   0x14000ced0
   14000c99a:	mov    edi,eax
   14000c99c:	call   0x14000b18c
   14000c9a1:	inc    DWORD PTR [rax+0x100]
   14000c9a7:	cmp    edi,0xffffffff
   14000c9aa:	je     0x14000ca9d
   14000c9b0:	cmp    edi,r12d
   14000c9b3:	jle    0x14000ca9d
   14000c9b9:	cmp    edi,0xffffffff
   14000c9bc:	jle    0x14000c9c3
   14000c9be:	cmp    edi,DWORD PTR [rsi+0x4]
   14000c9c1:	jl     0x14000c9c8
   14000c9c3:	call   0x14000982c
   14000c9c8:	movsxd r14,edi
   14000c9cb:	call   0x140006e58
   14000c9d0:	movsxd rcx,DWORD PTR [rsi+0x8]
   14000c9d4:	lea    rax,[rax+r14*8]
   14000c9d8:	mov    edi,DWORD PTR [rcx+rax*1]
   14000c9db:	mov    DWORD PTR [rsp+0x20],edi
   14000c9df:	call   0x140006e58
   14000c9e4:	movsxd rcx,DWORD PTR [rsi+0x8]
   14000c9e8:	lea    rax,[rax+r14*8]
   14000c9ec:	cmp    DWORD PTR [rcx+rax*1+0x4],0x0
   14000c9f1:	je     0x14000ca0f
   14000c9f3:	call   0x140006e58
   14000c9f8:	movsxd rcx,DWORD PTR [rsi+0x8]
   14000c9fc:	lea    rax,[rax+r14*8]
   14000ca00:	movsxd rbx,DWORD PTR [rcx+rax*1+0x4]
   14000ca05:	call   0x140006e58
   14000ca0a:	add    rax,rbx
   14000ca0d:	jmp    0x14000ca11
   14000ca0f:	xor    eax,eax
   14000ca11:	test   rax,rax
   14000ca14:	je     0x14000ca74
   14000ca16:	mov    r9d,edi
   14000ca19:	mov    r8,rsi
   14000ca1c:	mov    rdx,r13
   14000ca1f:	mov    rcx,r15
   14000ca22:	call   0x14000cf24
   14000ca27:	call   0x140006e58
   14000ca2c:	movsxd rcx,DWORD PTR [rsi+0x8]
   14000ca30:	lea    rax,[rax+r14*8]
   14000ca34:	cmp    DWORD PTR [rcx+rax*1+0x4],0x0
   14000ca39:	je     0x14000ca57
   14000ca3b:	call   0x140006e58
   14000ca40:	movsxd rcx,DWORD PTR [rsi+0x8]
   14000ca44:	lea    rax,[rax+r14*8]
   14000ca48:	movsxd rbx,DWORD PTR [rcx+rax*1+0x4]
   14000ca4d:	call   0x140006e58
   14000ca52:	add    rax,rbx
   14000ca55:	jmp    0x14000ca59
   14000ca57:	xor    eax,eax
   14000ca59:	mov    r8d,0x103
   14000ca5f:	mov    rdx,r15
   14000ca62:	mov    rcx,rax
   14000ca65:	call   0x140011560
   14000ca6a:	mov    rcx,QWORD PTR [rsp+0x28]
   14000ca6f:	call   0x140006ec8
   14000ca74:	jmp    0x14000ca94
   14000ca76:	mov    r12d,DWORD PTR [rsp+0x88]
   14000ca7e:	mov    rsi,QWORD PTR [rsp+0x80]
   14000ca86:	mov    r13,QWORD PTR [rsp+0x78]
   14000ca8b:	mov    r15,QWORD PTR [rsp+0x70]
   14000ca90:	mov    edi,DWORD PTR [rsp+0x20]
   14000ca94:	mov    DWORD PTR [rsp+0x24],edi
   14000ca98:	jmp    0x14000c9a7
   14000ca9d:	call   0x14000b18c
   14000caa2:	cmp    DWORD PTR [rax+0x100],0x0
   14000caa9:	jle    0x14000cab6
   14000caab:	call   0x14000b18c
   14000cab0:	dec    DWORD PTR [rax+0x100]
   14000cab6:	cmp    edi,0xffffffff
   14000cab9:	je     0x14000cac5
   14000cabb:	cmp    edi,r12d
   14000cabe:	jle    0x14000cac5
   14000cac0:	call   0x14000982c
   14000cac5:	mov    r9d,edi
   14000cac8:	mov    r8,rsi
   14000cacb:	mov    rdx,r13
   14000cace:	mov    rcx,r15
   14000cad1:	call   0x14000cf24
   14000cad6:	add    rsp,0x30
   14000cada:	pop    r15
   14000cadc:	pop    r14
   14000cade:	pop    r13
   14000cae0:	pop    r12
   14000cae2:	pop    rdi
   14000cae3:	pop    rsi
   14000cae4:	pop    rbx
   14000cae5:	ret    
   14000cae6:	int3   
   14000cae7:	int3   
   14000cae8:	mov    QWORD PTR [rsp+0x8],rbx
   14000caed:	mov    QWORD PTR [rsp+0x10],rsi
   14000caf2:	push   rdi
   14000caf3:	sub    rsp,0x20
   14000caf7:	and    DWORD PTR [rcx],0x0
   14000cafa:	mov    rsi,rcx
   14000cafd:	call   0x14000b18c
   14000cb02:	mov    rax,QWORD PTR [rax+0xf0]
   14000cb09:	test   rax,rax
   14000cb0c:	je     0x14000cb67
   14000cb0e:	mov    rbx,QWORD PTR [rax+0x30]
   14000cb12:	test   rbx,rbx
   14000cb15:	je     0x14000cb29
   14000cb17:	test   BYTE PTR [rbx],0x10
   14000cb1a:	je     0x14000cb29
   14000cb1c:	mov    rax,QWORD PTR [rax+0x28]
   14000cb20:	mov    rax,QWORD PTR [rax]
   14000cb23:	mov    rax,QWORD PTR [rax-0x8]
   14000cb27:	jmp    0x14000cb69
   14000cb29:	call   0x140006e70
   14000cb2e:	movsxd rdi,DWORD PTR [rbx+0xc]
   14000cb32:	add    rax,0x4
   14000cb36:	add    rdi,rax
   14000cb39:	call   0x140006e70
   14000cb3e:	movsxd rcx,DWORD PTR [rbx+0xc]
   14000cb42:	mov    ebx,DWORD PTR [rax+rcx*1]
   14000cb45:	jmp    0x14000cb5b
   14000cb47:	call   0x140006e70
   14000cb4c:	movsxd rcx,DWORD PTR [rdi]
   14000cb4f:	test   BYTE PTR [rax+rcx*1],0x10
   14000cb53:	jne    0x14000cb61
   14000cb55:	dec    ebx
   14000cb57:	add    rdi,0x4
   14000cb5b:	test   ebx,ebx
   14000cb5d:	jg     0x14000cb47
   14000cb5f:	jmp    0x14000cb67
   14000cb61:	mov    DWORD PTR [rsi],0x1
   14000cb67:	xor    eax,eax
   14000cb69:	mov    rbx,QWORD PTR [rsp+0x30]
   14000cb6e:	mov    rsi,QWORD PTR [rsp+0x38]
   14000cb73:	add    rsp,0x20
   14000cb77:	pop    rdi
   14000cb78:	ret    
   14000cb79:	int3   
   14000cb7a:	int3   
   14000cb7b:	int3   
   14000cb7c:	mov    QWORD PTR [rsp+0x8],rbx
   14000cb81:	mov    QWORD PTR [rsp+0x10],rbp
   14000cb86:	mov    QWORD PTR [rsp+0x18],rsi
   14000cb8b:	push   rdi
   14000cb8c:	push   r12
   14000cb8e:	push   r14
   14000cb90:	sub    rsp,0x40
   14000cb94:	mov    rbp,r9
   14000cb97:	mov    r14,r8
   14000cb9a:	mov    rsi,rdx
   14000cb9d:	mov    rbx,rcx
   14000cba0:	call   0x14000b18c
   14000cba5:	mov    rdi,QWORD PTR [rsp+0x80]
   14000cbad:	cmp    DWORD PTR [rax+0x460],0x0
   14000cbb4:	mov    edx,0x1fffffff
   14000cbb9:	mov    r8d,0x80000029
   14000cbbf:	mov    r9d,0x80000026
   14000cbc5:	mov    r12d,0x1
   14000cbcb:	jne    0x14000cc05
   14000cbcd:	cmp    DWORD PTR [rbx],0xe06d7363
   14000cbd3:	je     0x14000cc05
   14000cbd5:	cmp    DWORD PTR [rbx],r8d
   14000cbd8:	jne    0x14000cbea
   14000cbda:	cmp    DWORD PTR [rbx+0x18],0xf
   14000cbde:	jne    0x14000cbea
   14000cbe0:	cmp    QWORD PTR [rbx+0x60],0x19930520
   14000cbe8:	je     0x14000cc05
   14000cbea:	cmp    DWORD PTR [rbx],r9d
   14000cbed:	je     0x14000cc05
   14000cbef:	mov    ecx,DWORD PTR [rdi]
   14000cbf1:	and    ecx,edx
   14000cbf3:	cmp    ecx,0x19930522
   14000cbf9:	jb     0x14000cc05
   14000cbfb:	test   BYTE PTR [rdi+0x24],r12b
   14000cbff:	jne    0x14000cd84
   14000cc05:	mov    eax,DWORD PTR [rbx+0x4]
   14000cc08:	test   al,0x66
   14000cc0a:	je     0x14000cca2
   14000cc10:	cmp    DWORD PTR [rdi+0x4],0x0
   14000cc14:	je     0x14000cd84
   14000cc1a:	cmp    DWORD PTR [rsp+0x88],0x0
   14000cc22:	jne    0x14000cd84
   14000cc28:	and    eax,0x20
   14000cc2b:	je     0x14000cc6b
   14000cc2d:	cmp    DWORD PTR [rbx],r9d
   14000cc30:	jne    0x14000cc6b
   14000cc32:	mov    r8,QWORD PTR [r14+0xf8]
   14000cc39:	mov    rdx,rbp
   14000cc3c:	mov    rcx,rdi
   14000cc3f:	call   0x14000cf74
   14000cc44:	mov    ebx,eax
   14000cc46:	cmp    eax,0xffffffff
   14000cc49:	jl     0x14000cc50
   14000cc4b:	cmp    eax,DWORD PTR [rdi+0x4]
   14000cc4e:	jl     0x14000cc55
   14000cc50:	call   0x14000982c
   14000cc55:	mov    r9d,ebx
   14000cc58:	mov    rcx,rsi
   14000cc5b:	mov    rdx,rbp
   14000cc5e:	mov    r8,rdi
   14000cc61:	call   0x14000c954
   14000cc66:	jmp    0x14000cd84
   14000cc6b:	test   eax,eax
   14000cc6d:	je     0x14000cc8f
   14000cc6f:	cmp    DWORD PTR [rbx],r8d
   14000cc72:	jne    0x14000cc8f
   14000cc74:	mov    esi,DWORD PTR [rbx+0x38]
   14000cc77:	cmp    esi,0xffffffff
   14000cc7a:	jl     0x14000cc81
   14000cc7c:	cmp    esi,DWORD PTR [rdi+0x4]
   14000cc7f:	jl     0x14000cc86
   14000cc81:	call   0x14000982c
   14000cc86:	mov    rcx,QWORD PTR [rbx+0x28]
   14000cc8a:	mov    r9d,esi
   14000cc8d:	jmp    0x14000cc5b
   14000cc8f:	mov    r8,rdi
   14000cc92:	mov    rdx,rbp
   14000cc95:	mov    rcx,rsi
   14000cc98:	call   0x140006c28
   14000cc9d:	jmp    0x14000cd84
   14000cca2:	cmp    DWORD PTR [rdi+0xc],0x0
   14000cca6:	jne    0x14000ccd6
   14000cca8:	mov    eax,DWORD PTR [rdi]
   14000ccaa:	and    eax,edx
   14000ccac:	cmp    eax,0x19930521
   14000ccb1:	jb     0x14000cd84
   14000ccb7:	cmp    DWORD PTR [rdi+0x20],0x0
   14000ccbb:	je     0x14000cccb
   14000ccbd:	call   0x140006e58
   14000ccc2:	movsxd rcx,DWORD PTR [rdi+0x20]
   14000ccc6:	add    rax,rcx
   14000ccc9:	jmp    0x14000cccd
   14000cccb:	xor    eax,eax
   14000cccd:	test   rax,rax
   14000ccd0:	je     0x14000cd84
   14000ccd6:	cmp    DWORD PTR [rbx],0xe06d7363
   14000ccdc:	jne    0x14000cd4b
   14000ccde:	cmp    DWORD PTR [rbx+0x18],0x3
   14000cce2:	jb     0x14000cd4b
   14000cce4:	cmp    DWORD PTR [rbx+0x20],0x19930522
   14000cceb:	jbe    0x14000cd4b
   14000cced:	mov    rax,QWORD PTR [rbx+0x30]
   14000ccf1:	cmp    DWORD PTR [rax+0x8],0x0
   14000ccf5:	je     0x14000cd09
   14000ccf7:	call   0x140006e70
   14000ccfc:	mov    rcx,QWORD PTR [rbx+0x30]
   14000cd00:	movsxd r10,DWORD PTR [rcx+0x8]
   14000cd04:	add    r10,rax
   14000cd07:	jmp    0x14000cd0c
   14000cd09:	xor    r10d,r10d
   14000cd0c:	test   r10,r10
   14000cd0f:	je     0x14000cd4b
   14000cd11:	movzx  eax,BYTE PTR [rsp+0x98]
   14000cd19:	mov    r9,rbp
   14000cd1c:	mov    r8,r14
   14000cd1f:	mov    DWORD PTR [rsp+0x38],eax
   14000cd23:	mov    rax,QWORD PTR [rsp+0x90]
   14000cd2b:	mov    rdx,rsi
   14000cd2e:	mov    QWORD PTR [rsp+0x30],rax
   14000cd33:	mov    eax,DWORD PTR [rsp+0x88]
   14000cd3a:	mov    rcx,rbx
   14000cd3d:	mov    DWORD PTR [rsp+0x28],eax
   14000cd41:	mov    QWORD PTR [rsp+0x20],rdi
   14000cd46:	call   r10
   14000cd49:	jmp    0x14000cd87
   14000cd4b:	mov    rax,QWORD PTR [rsp+0x90]
   14000cd53:	mov    r9,rbp
   14000cd56:	mov    r8,r14
   14000cd59:	mov    QWORD PTR [rsp+0x38],rax
   14000cd5e:	mov    eax,DWORD PTR [rsp+0x88]
   14000cd65:	mov    rdx,rsi
   14000cd68:	mov    DWORD PTR [rsp+0x30],eax
   14000cd6c:	mov    al,BYTE PTR [rsp+0x98]
   14000cd73:	mov    rcx,rbx
   14000cd76:	mov    BYTE PTR [rsp+0x28],al
   14000cd7a:	mov    QWORD PTR [rsp+0x20],rdi
   14000cd7f:	call   0x14000b5f8
   14000cd84:	mov    eax,r12d
   14000cd87:	mov    rbx,QWORD PTR [rsp+0x60]
   14000cd8c:	mov    rbp,QWORD PTR [rsp+0x68]
   14000cd91:	mov    rsi,QWORD PTR [rsp+0x70]
   14000cd96:	add    rsp,0x40
   14000cd9a:	pop    r14
   14000cd9c:	pop    r12
   14000cd9e:	pop    rdi
   14000cd9f:	ret    
   14000cda0:	mov    rax,rsp
   14000cda3:	mov    QWORD PTR [rax+0x8],rbx
   14000cda7:	mov    QWORD PTR [rax+0x10],rbp
   14000cdab:	mov    QWORD PTR [rax+0x18],rsi
   14000cdaf:	mov    QWORD PTR [rax+0x20],rdi
   14000cdb3:	push   r14
   14000cdb5:	sub    rsp,0x20
   14000cdb9:	mov    esi,DWORD PTR [rcx+0x4]
   14000cdbc:	xor    ebx,ebx
   14000cdbe:	mov    r14,r8
   14000cdc1:	mov    rbp,rdx
   14000cdc4:	mov    rdi,rcx
   14000cdc7:	test   esi,esi
   14000cdc9:	je     0x14000cdd9
   14000cdcb:	movsxd rsi,esi
   14000cdce:	call   0x140006e58
   14000cdd3:	lea    rcx,[rsi+rax*1]
   14000cdd7:	jmp    0x14000cddc
   14000cdd9:	mov    rcx,rbx
   14000cddc:	test   rcx,rcx
   14000cddf:	je     0x14000cead
   14000cde5:	test   esi,esi
   14000cde7:	je     0x14000cdf8
   14000cde9:	movsxd rsi,DWORD PTR [rdi+0x4]
   14000cded:	call   0x140006e58
   14000cdf2:	lea    rcx,[rsi+rax*1]
   14000cdf6:	jmp    0x14000cdfb
   14000cdf8:	mov    rcx,rbx
   14000cdfb:	cmp    BYTE PTR [rcx+0x10],bl
   14000cdfe:	je     0x14000cead
   14000ce04:	test   BYTE PTR [rdi],0x80
   14000ce07:	je     0x14000ce13
   14000ce09:	test   BYTE PTR [rbp+0x0],0x10
   14000ce0d:	jne    0x14000cead
   14000ce13:	test   esi,esi
   14000ce15:	je     0x14000ce28
   14000ce17:	call   0x140006e58
   14000ce1c:	mov    rsi,rax
   14000ce1f:	movsxd rax,DWORD PTR [rdi+0x4]
   14000ce23:	add    rsi,rax
   14000ce26:	jmp    0x14000ce2b
   14000ce28:	mov    rsi,rbx
   14000ce2b:	call   0x140006e70
   14000ce30:	mov    rcx,rax
   14000ce33:	movsxd rax,DWORD PTR [rbp+0x4]
   14000ce37:	add    rcx,rax
   14000ce3a:	cmp    rsi,rcx
   14000ce3d:	je     0x14000ce79
   14000ce3f:	cmp    DWORD PTR [rdi+0x4],ebx
   14000ce42:	je     0x14000ce55
   14000ce44:	call   0x140006e58
   14000ce49:	mov    rsi,rax
   14000ce4c:	movsxd rax,DWORD PTR [rdi+0x4]
   14000ce50:	add    rsi,rax
   14000ce53:	jmp    0x14000ce58
   14000ce55:	mov    rsi,rbx
   14000ce58:	call   0x140006e70
   14000ce5d:	movsxd rdx,DWORD PTR [rbp+0x4]
   14000ce61:	lea    rcx,[rsi+0x10]
   14000ce65:	add    rdx,0x10
   14000ce69:	add    rdx,rax
   14000ce6c:	call   0x14000d0d0
   14000ce71:	test   eax,eax
   14000ce73:	je     0x14000ce79
   14000ce75:	xor    eax,eax
   14000ce77:	jmp    0x14000ceb2
   14000ce79:	mov    al,0x2
   14000ce7b:	test   BYTE PTR [rbp+0x0],al
   14000ce7e:	je     0x14000ce85
   14000ce80:	test   BYTE PTR [rdi],0x8
   14000ce83:	je     0x14000cea9
   14000ce85:	test   BYTE PTR [r14],0x1
   14000ce89:	je     0x14000ce90
   14000ce8b:	test   BYTE PTR [rdi],0x1
   14000ce8e:	je     0x14000cea9
   14000ce90:	test   BYTE PTR [r14],0x4
   14000ce94:	je     0x14000ce9b
   14000ce96:	test   BYTE PTR [rdi],0x4
   14000ce99:	je     0x14000cea9
   14000ce9b:	test   BYTE PTR [r14],al
   14000ce9e:	je     0x14000cea4
   14000cea0:	test   BYTE PTR [rdi],al
   14000cea2:	je     0x14000cea9
   14000cea4:	mov    ebx,0x1
   14000cea9:	mov    eax,ebx
   14000ceab:	jmp    0x14000ceb2
   14000cead:	mov    eax,0x1
   14000ceb2:	mov    rbx,QWORD PTR [rsp+0x30]
   14000ceb7:	mov    rbp,QWORD PTR [rsp+0x38]
   14000cebc:	mov    rsi,QWORD PTR [rsp+0x40]
   14000cec1:	mov    rdi,QWORD PTR [rsp+0x48]
   14000cec6:	add    rsp,0x20
   14000ceca:	pop    r14
   14000cecc:	ret    
   14000cecd:	int3   
   14000cece:	int3   
   14000cecf:	int3   
   14000ced0:	sub    rsp,0x28
   14000ced4:	movsxd r9,DWORD PTR [r8+0x1c]
   14000ced8:	mov    rax,QWORD PTR [rcx]
   14000cedb:	mov    r10,r8
   14000cede:	mov    eax,DWORD PTR [r9+rax*1]
   14000cee2:	cmp    eax,0xfffffffe
   14000cee5:	jne    0x14000cef2
   14000cee7:	mov    r8,QWORD PTR [rdx]
   14000ceea:	mov    rcx,r10
   14000ceed:	call   0x14000cf74
   14000cef2:	add    rsp,0x28
   14000cef6:	ret    
   14000cef7:	int3   
   14000cef8:	rex push rbx
   14000cefa:	sub    rsp,0x20
   14000cefe:	lea    r9,[rsp+0x40]
   14000cf03:	mov    rbx,r8
   14000cf06:	call   0x140006a30
   14000cf0b:	mov    rcx,QWORD PTR [rax]
   14000cf0e:	movsxd rax,DWORD PTR [rbx+0x1c]
   14000cf12:	mov    QWORD PTR [rsp+0x40],rcx
   14000cf17:	mov    eax,DWORD PTR [rax+rcx*1+0x4]
   14000cf1b:	add    rsp,0x20
   14000cf1f:	pop    rbx
   14000cf20:	ret    
   14000cf21:	int3   
   14000cf22:	int3   
   14000cf23:	int3   
   14000cf24:	movsxd rdx,DWORD PTR [r8+0x1c]
   14000cf28:	mov    rax,QWORD PTR [rcx]
   14000cf2b:	mov    DWORD PTR [rdx+rax*1],r9d
   14000cf2f:	ret    
   14000cf30:	mov    QWORD PTR [rsp+0x8],rbx
   14000cf35:	push   rdi
   14000cf36:	sub    rsp,0x20
   14000cf3a:	mov    edi,r9d
   14000cf3d:	lea    r9,[rsp+0x40]
   14000cf42:	mov    rbx,r8
   14000cf45:	call   0x140006a30
   14000cf4a:	mov    rcx,QWORD PTR [rax]
   14000cf4d:	movsxd rax,DWORD PTR [rbx+0x1c]
   14000cf51:	mov    QWORD PTR [rsp+0x40],rcx
   14000cf56:	cmp    edi,DWORD PTR [rax+rcx*1+0x4]
   14000cf5a:	jle    0x14000cf60
   14000cf5c:	mov    DWORD PTR [rax+rcx*1+0x4],edi
   14000cf60:	mov    rbx,QWORD PTR [rsp+0x30]
   14000cf65:	add    rsp,0x20
   14000cf69:	pop    rdi
   14000cf6a:	ret    
   14000cf6b:	int3   
   14000cf6c:	mov    r8,QWORD PTR [rdx]
   14000cf6f:	jmp    0x14000cf74
   14000cf74:	mov    QWORD PTR [rsp+0x8],rbx
   14000cf79:	mov    QWORD PTR [rsp+0x10],rbp
   14000cf7e:	mov    QWORD PTR [rsp+0x18],rsi
   14000cf83:	push   rdi
   14000cf84:	sub    rsp,0x20
   14000cf88:	mov    rbp,r8
   14000cf8b:	mov    rsi,rdx
   14000cf8e:	mov    rbx,rcx
   14000cf91:	test   rcx,rcx
   14000cf94:	jne    0x14000cf9b
   14000cf96:	call   0x14000982c
   14000cf9b:	movsxd rax,DWORD PTR [rbx+0x18]
   14000cf9f:	mov    edi,DWORD PTR [rbx+0x14]
   14000cfa2:	add    rax,QWORD PTR [rsi+0x8]
   14000cfa6:	jne    0x14000cfad
   14000cfa8:	call   0x14000982c
   14000cfad:	xor    r8d,r8d
   14000cfb0:	test   edi,edi
   14000cfb2:	je     0x14000cfe8
   14000cfb4:	mov    r9,QWORD PTR [rsi+0x8]
   14000cfb8:	movsxd r10,DWORD PTR [rbx+0x18]
   14000cfbc:	lea    rcx,[r9+r8*8]
   14000cfc0:	movsxd rdx,DWORD PTR [rcx+r10*1]
   14000cfc4:	add    rdx,r9
   14000cfc7:	cmp    rbp,rdx
   14000cfca:	jl     0x14000cfd4
   14000cfcc:	inc    r8d
   14000cfcf:	cmp    r8d,edi
   14000cfd2:	jb     0x14000cfbc
   14000cfd4:	test   r8d,r8d
   14000cfd7:	je     0x14000cfe8
   14000cfd9:	lea    ecx,[r8-0x1]
   14000cfdd:	lea    rax,[r9+rcx*8]
   14000cfe1:	mov    eax,DWORD PTR [rax+r10*1+0x4]
   14000cfe6:	jmp    0x14000cfeb
   14000cfe8:	or     eax,0xffffffff
   14000cfeb:	mov    rbx,QWORD PTR [rsp+0x30]
   14000cff0:	mov    rbp,QWORD PTR [rsp+0x38]
   14000cff5:	mov    rsi,QWORD PTR [rsp+0x40]
   14000cffa:	add    rsp,0x20
   14000cffe:	pop    rdi
   14000cfff:	ret    
   14000d000:	sub    rsp,0x28
   14000d004:	mov    r8,QWORD PTR [r9+0x38]
   14000d008:	mov    rcx,rdx
   14000d00b:	mov    rdx,r9
   14000d00e:	call   0x14000d020
   14000d013:	mov    eax,0x1
   14000d018:	add    rsp,0x28
   14000d01c:	ret    
   14000d01d:	int3   
   14000d01e:	int3   
   14000d01f:	int3   
   14000d020:	rex push rbx
   14000d022:	sub    rsp,0x20
   14000d026:	mov    r11d,DWORD PTR [r8]
   14000d029:	mov    rbx,rdx
   14000d02c:	mov    r9,rcx
   14000d02f:	and    r11d,0xfffffff8
   14000d033:	test   BYTE PTR [r8],0x4
   14000d037:	mov    r10,rcx
   14000d03a:	je     0x14000d04f
   14000d03c:	mov    eax,DWORD PTR [r8+0x8]
   14000d040:	movsxd r10,DWORD PTR [r8+0x4]
   14000d044:	neg    eax
   14000d046:	add    r10,rcx
   14000d049:	movsxd rcx,eax
   14000d04c:	and    r10,rcx
   14000d04f:	movsxd rax,r11d
   14000d052:	mov    rdx,QWORD PTR [rax+r10*1]
   14000d056:	mov    rax,QWORD PTR [rbx+0x10]
   14000d05a:	mov    ecx,DWORD PTR [rax+0x8]
   14000d05d:	add    rcx,QWORD PTR [rbx+0x8]
   14000d061:	test   BYTE PTR [rcx+0x3],0xf
   14000d065:	je     0x14000d073
   14000d067:	movzx  eax,BYTE PTR [rcx+0x3]
   14000d06b:	and    eax,0xfffffff0
   14000d06e:	cdqe   
   14000d070:	add    r9,rax
   14000d073:	xor    r9,rdx
   14000d076:	mov    rcx,r9
   14000d079:	add    rsp,0x20
   14000d07d:	pop    rbx
   14000d07e:	jmp    0x14000d0a0
   14000d083:	int3   
   14000d084:	int3   
   14000d085:	int3   
   14000d086:	int3   
   14000d087:	int3   
   14000d088:	int3   
   14000d089:	int3   
   14000d08a:	int3   
   14000d08b:	int3   
   14000d08c:	int3   
   14000d08d:	int3   
   14000d08e:	int3   
   14000d08f:	int3   
   14000d090:	int3   
   14000d091:	int3   
   14000d092:	int3   
   14000d093:	int3   
   14000d094:	int3   
   14000d095:	int3   
   14000d096:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000d0a0:	cmp    rcx,QWORD PTR [rip+0x29999]        # 0x140036a40
   14000d0a7:	jne    0x14000d0ba
   14000d0a9:	rol    rcx,0x10
   14000d0ad:	test   cx,0xffff
   14000d0b2:	jne    0x14000d0b6
   14000d0b4:	repz ret 
   14000d0b6:	ror    rcx,0x10
   14000d0ba:	jmp    0x1400115f4
   14000d0bf:	int3   
   14000d0c0:	int3   
   14000d0c1:	int3   
   14000d0c2:	int3   
   14000d0c3:	int3   
   14000d0c4:	int3   
   14000d0c5:	int3   
   14000d0c6:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000d0d0:	sub    rdx,rcx
   14000d0d3:	test   cl,0x7
   14000d0d6:	je     0x14000d0ec
   14000d0d8:	movzx  eax,BYTE PTR [rcx]
   14000d0db:	cmp    al,BYTE PTR [rcx+rdx*1]
   14000d0de:	jne    0x14000d12f
   14000d0e0:	inc    rcx
   14000d0e3:	test   al,al
   14000d0e5:	je     0x14000d12c
   14000d0e7:	test   cl,0x7
   14000d0ea:	jne    0x14000d0d8
   14000d0ec:	movabs r11,0x8080808080808080
   14000d0f6:	movabs r10,0xfefefefefefefeff
   14000d100:	lea    eax,[ecx+edx*1]
   14000d104:	and    eax,0xfff
   14000d109:	cmp    eax,0xff8
   14000d10e:	ja     0x14000d0d8
   14000d110:	mov    rax,QWORD PTR [rcx]
   14000d113:	cmp    rax,QWORD PTR [rcx+rdx*1]
   14000d117:	jne    0x14000d0d8
   14000d119:	lea    r9,[r10+rax*1]
   14000d11d:	not    rax
   14000d120:	add    rcx,0x8
   14000d124:	and    rax,r9
   14000d127:	test   r11,rax
   14000d12a:	je     0x14000d100
   14000d12c:	xor    eax,eax
   14000d12e:	ret    
   14000d12f:	sbb    rax,rax
   14000d132:	or     rax,0x1
   14000d136:	ret    
   14000d137:	int3   
   14000d138:	mov    r11,rsp
   14000d13b:	mov    QWORD PTR [r11+0x8],rbx
   14000d13f:	mov    QWORD PTR [r11+0x10],rsi
   14000d143:	mov    QWORD PTR [r11+0x18],rdi
   14000d147:	mov    QWORD PTR [r11+0x20],r14
   14000d14b:	push   r15
   14000d14d:	sub    rsp,0x30
   14000d151:	mov    r15,rdx
   14000d154:	mov    rdi,rcx
   14000d157:	cmp    QWORD PTR [rcx+0x8],0x0
   14000d15c:	jne    0x14000d24d
   14000d162:	mov    eax,0x2800
   14000d167:	lea    rdx,[rcx+0x11]
   14000d16b:	mov    WORD PTR [rsp+0x28],ax
   14000d170:	lea    rax,[rip+0xffffffffffff92cd]        # 0x140006444
   14000d177:	mov    QWORD PTR [r11-0x18],rax
   14000d17b:	lea    r9,[rip+0xffffffffffff9352]        # 0x1400064d4
   14000d182:	xor    r8d,r8d
   14000d185:	xor    ecx,ecx
   14000d187:	call   0x1400184e8
   14000d18c:	mov    r14,rax
   14000d18f:	test   rax,rax
   14000d192:	je     0x14000d251
   14000d198:	mov    rcx,rax
   14000d19b:	call   0x140007730
   14000d1a0:	mov    rbx,rax
   14000d1a3:	test   rax,rax
   14000d1a6:	je     0x14000d1bc
   14000d1a8:	dec    rbx
   14000d1ab:	cmp    BYTE PTR [rbx+r14*1],0x20
   14000d1b0:	jne    0x14000d1bf
   14000d1b2:	mov    BYTE PTR [rbx+r14*1],0x0
   14000d1b7:	test   rbx,rbx
   14000d1ba:	jne    0x14000d1a8
   14000d1bc:	dec    rbx
   14000d1bf:	mov    ecx,0xe
   14000d1c4:	call   0x140008760
   14000d1c9:	nop
   14000d1ca:	cmp    QWORD PTR [rdi+0x8],0x0
   14000d1cf:	jne    0x14000d23a
   14000d1d1:	mov    ecx,0x10
   14000d1d6:	call   0x1400064d4
   14000d1db:	mov    rsi,rax
   14000d1de:	test   rax,rax
   14000d1e1:	je     0x14000d23a
   14000d1e3:	lea    rcx,[rbx+0x2]
   14000d1e7:	call   0x1400064d4
   14000d1ec:	mov    QWORD PTR [rdi+0x8],rax
   14000d1f0:	test   rax,rax
   14000d1f3:	je     0x14000d232
   14000d1f5:	mov    r8,r14
   14000d1f8:	lea    rdx,[rbx+0x2]
   14000d1fc:	mov    rcx,rax
   14000d1ff:	call   0x14000ee64
   14000d204:	test   eax,eax
   14000d206:	jne    0x14000d21d
   14000d208:	mov    rax,QWORD PTR [rdi+0x8]
   14000d20c:	mov    QWORD PTR [rsi],rax
   14000d20f:	mov    rax,QWORD PTR [r15+0x8]
   14000d213:	mov    QWORD PTR [rsi+0x8],rax
   14000d217:	mov    QWORD PTR [r15+0x8],rsi
   14000d21b:	jmp    0x14000d23a
   14000d21d:	and    QWORD PTR [rsp+0x20],0x0
   14000d223:	xor    r9d,r9d
   14000d226:	xor    r8d,r8d
   14000d229:	xor    edx,edx
   14000d22b:	xor    ecx,ecx
   14000d22d:	call   0x140008678
   14000d232:	mov    rcx,rsi
   14000d235:	call   0x140006444
   14000d23a:	mov    rcx,r14
   14000d23d:	call   0x140006444
   14000d242:	nop
   14000d243:	mov    ecx,0xe
   14000d248:	call   0x14000897c
   14000d24d:	mov    rax,QWORD PTR [rdi+0x8]
   14000d251:	mov    rbx,QWORD PTR [rsp+0x40]
   14000d256:	mov    rsi,QWORD PTR [rsp+0x48]
   14000d25b:	mov    rdi,QWORD PTR [rsp+0x50]
   14000d260:	mov    r14,QWORD PTR [rsp+0x58]
   14000d265:	add    rsp,0x30
   14000d269:	pop    r15
   14000d26b:	ret    
   14000d26c:	mov    QWORD PTR [rsp+0x8],rbx
   14000d271:	mov    QWORD PTR [rsp+0x10],rsi
   14000d276:	mov    QWORD PTR [rsp+0x18],rdi
   14000d27b:	push   r12
   14000d27d:	push   r14
   14000d27f:	push   r15
   14000d281:	sub    rsp,0x40
   14000d285:	mov    QWORD PTR [rsp+0x38],rsp
   14000d28a:	mov    r15,rdx
   14000d28d:	mov    rsi,rcx
   14000d290:	cmp    QWORD PTR [rcx+0x8],0x0
   14000d295:	jne    0x14000d3a7
   14000d29b:	mov    ecx,0xe
   14000d2a0:	call   0x140008760
   14000d2a5:	nop
   14000d2a6:	cmp    QWORD PTR [rsi+0x8],0x0
   14000d2ab:	jne    0x14000d39d
   14000d2b1:	mov    eax,0x2800
   14000d2b6:	lea    rdx,[rsi+0x11]
   14000d2ba:	mov    WORD PTR [rsp+0x28],ax
   14000d2bf:	lea    rax,[rip+0xffffffffffff917e]        # 0x140006444
   14000d2c6:	mov    QWORD PTR [rsp+0x20],rax
   14000d2cb:	lea    r9,[rip+0xffffffffffff9202]        # 0x1400064d4
   14000d2d2:	xor    r8d,r8d
   14000d2d5:	xor    ecx,ecx
   14000d2d7:	call   0x1400184e8
   14000d2dc:	mov    r14,rax
   14000d2df:	test   rax,rax
   14000d2e2:	jne    0x14000d2fc
   14000d2e4:	lea    rdx,[rip+0xa]        # 0x14000d2f5
   14000d2eb:	mov    rcx,rsp
   14000d2ee:	call   0x14000f840
   14000d2f3:	nop
   14000d2f4:	nop
   14000d2f5:	xor    eax,eax
   14000d2f7:	jmp    0x14000d3ab
   14000d2fc:	mov    rcx,rax
   14000d2ff:	call   0x140007730
   14000d304:	mov    rbx,rax
   14000d307:	mov    QWORD PTR [rsp+0x30],rax
   14000d30c:	mov    rcx,rbx
   14000d30f:	dec    rbx
   14000d312:	mov    QWORD PTR [rsp+0x30],rbx
   14000d317:	test   rcx,rcx
   14000d31a:	je     0x14000d32a
   14000d31c:	cmp    BYTE PTR [rbx+r14*1],0x20
   14000d321:	jne    0x14000d32a
   14000d323:	mov    BYTE PTR [rbx+r14*1],0x0
   14000d328:	jmp    0x14000d30c
   14000d32a:	mov    ecx,0x10
   14000d32f:	call   0x1400064d4
   14000d334:	mov    rdi,rax
   14000d337:	test   rax,rax
   14000d33a:	je     0x14000d394
   14000d33c:	lea    r12,[rbx+0x2]
   14000d340:	mov    rcx,r12
   14000d343:	call   0x1400064d4
   14000d348:	mov    rbx,rax
   14000d34b:	test   rax,rax
   14000d34e:	je     0x14000d38c
   14000d350:	mov    r8,r14
   14000d353:	mov    rdx,r12
   14000d356:	mov    rcx,rax
   14000d359:	call   0x14000ee64
   14000d35e:	test   eax,eax
   14000d360:	jne    0x14000d377
   14000d362:	mov    QWORD PTR [rsi+0x8],rbx
   14000d366:	mov    QWORD PTR [rdi],rbx
   14000d369:	mov    rax,QWORD PTR [r15+0x8]
   14000d36d:	mov    QWORD PTR [rdi+0x8],rax
   14000d371:	mov    QWORD PTR [r15+0x8],rdi
   14000d375:	jmp    0x14000d394
   14000d377:	and    QWORD PTR [rsp+0x20],0x0
   14000d37d:	xor    r9d,r9d
   14000d380:	xor    r8d,r8d
   14000d383:	xor    edx,edx
   14000d385:	xor    ecx,ecx
   14000d387:	call   0x140008678
   14000d38c:	mov    rcx,rdi
   14000d38f:	call   0x140006444
   14000d394:	mov    rcx,r14
   14000d397:	call   0x140006444
   14000d39c:	nop
   14000d39d:	mov    ecx,0xe
   14000d3a2:	call   0x14000897c
   14000d3a7:	mov    rax,QWORD PTR [rsi+0x8]
   14000d3ab:	mov    rbx,QWORD PTR [rsp+0x60]
   14000d3b0:	mov    rsi,QWORD PTR [rsp+0x68]
   14000d3b5:	mov    rdi,QWORD PTR [rsp+0x70]
   14000d3ba:	add    rsp,0x40
   14000d3be:	pop    r15
   14000d3c0:	pop    r14
   14000d3c2:	pop    r12
   14000d3c4:	ret    
   14000d3c5:	int3   
   14000d3c6:	int3   
   14000d3c7:	int3   
   14000d3c8:	rex push rbx
   14000d3ca:	sub    rsp,0x30
   14000d3ce:	mov    rbx,rcx
   14000d3d1:	mov    ecx,0xe
   14000d3d6:	call   0x140008760
   14000d3db:	nop
   14000d3dc:	mov    rax,QWORD PTR [rbx+0x8]
   14000d3e0:	test   rax,rax
   14000d3e3:	je     0x14000d424
   14000d3e5:	mov    rcx,QWORD PTR [rip+0x2b29c]        # 0x140038688
   14000d3ec:	lea    rdx,[rip+0x2b28d]        # 0x140038680
   14000d3f3:	mov    QWORD PTR [rsp+0x20],rcx
   14000d3f8:	test   rcx,rcx
   14000d3fb:	je     0x14000d416
   14000d3fd:	cmp    QWORD PTR [rcx],rax
   14000d400:	jne    0x14000d411
   14000d402:	mov    rax,QWORD PTR [rcx+0x8]
   14000d406:	mov    QWORD PTR [rdx+0x8],rax
   14000d40a:	call   0x140006444
   14000d40f:	jmp    0x14000d416
   14000d411:	mov    rdx,rcx
   14000d414:	jmp    0x14000d3f3
   14000d416:	mov    rcx,QWORD PTR [rbx+0x8]
   14000d41a:	call   0x140006444
   14000d41f:	and    QWORD PTR [rbx+0x8],0x0
   14000d424:	mov    ecx,0xe
   14000d429:	call   0x14000897c
   14000d42e:	add    rsp,0x30
   14000d432:	pop    rbx
   14000d433:	ret    
   14000d434:	rex push rbx
   14000d436:	sub    rsp,0x30
   14000d43a:	mov    rbx,rcx
   14000d43d:	mov    ecx,0xe
   14000d442:	call   0x140008760
   14000d447:	nop
   14000d448:	mov    rax,QWORD PTR [rbx+0x8]
   14000d44c:	test   rax,rax
   14000d44f:	je     0x14000d490
   14000d451:	mov    rcx,QWORD PTR [rip+0x2b230]        # 0x140038688
   14000d458:	lea    rdx,[rip+0x2b221]        # 0x140038680
   14000d45f:	mov    QWORD PTR [rsp+0x20],rcx
   14000d464:	test   rcx,rcx
   14000d467:	je     0x14000d482
   14000d469:	cmp    QWORD PTR [rcx],rax
   14000d46c:	jne    0x14000d47d
   14000d46e:	mov    rax,QWORD PTR [rcx+0x8]
   14000d472:	mov    QWORD PTR [rdx+0x8],rax
   14000d476:	call   0x140006444
   14000d47b:	jmp    0x14000d482
   14000d47d:	mov    rdx,rcx
   14000d480:	jmp    0x14000d45f
   14000d482:	mov    rcx,QWORD PTR [rbx+0x8]
   14000d486:	call   0x140006444
   14000d48b:	and    QWORD PTR [rbx+0x8],0x0
   14000d490:	mov    ecx,0xe
   14000d495:	call   0x14000897c
   14000d49a:	add    rsp,0x30
   14000d49e:	pop    rbx
   14000d49f:	ret    
   14000d4a0:	mov    QWORD PTR [rsp+0x8],rbx
   14000d4a5:	push   rdi
   14000d4a6:	sub    rsp,0x20
   14000d4aa:	mov    rbx,rcx
   14000d4ad:	mov    ecx,0xe
   14000d4b2:	call   0x140008760
   14000d4b7:	nop
   14000d4b8:	mov    rbx,QWORD PTR [rbx+0x8]
   14000d4bc:	test   rbx,rbx
   14000d4bf:	je     0x14000d4da
   14000d4c1:	mov    rdi,QWORD PTR [rbx+0x8]
   14000d4c5:	mov    rcx,QWORD PTR [rbx]
   14000d4c8:	call   0x140006444
   14000d4cd:	mov    rcx,rbx
   14000d4d0:	call   0x140006444
   14000d4d5:	mov    rbx,rdi
   14000d4d8:	jmp    0x14000d4bc
   14000d4da:	mov    ecx,0xe
   14000d4df:	call   0x14000897c
   14000d4e4:	mov    rbx,QWORD PTR [rsp+0x30]
   14000d4e9:	add    rsp,0x20
   14000d4ed:	pop    rdi
   14000d4ee:	ret    
   14000d4ef:	int3   
   14000d4f0:	sub    rsp,0x38
   14000d4f4:	movzx  eax,r9w
   14000d4f8:	test   r9w,r9w
   14000d4fc:	jne    0x14000d503
   14000d4fe:	mov    eax,0x2800
   14000d503:	mov    WORD PTR [rsp+0x28],ax
   14000d508:	lea    rax,[rip+0xffffffffffff8f35]        # 0x140006444
   14000d50f:	lea    r9,[rip+0xffffffffffff8fbe]        # 0x1400064d4
   14000d516:	mov    QWORD PTR [rsp+0x20],rax
   14000d51b:	call   0x1400184e8
   14000d520:	add    rsp,0x38
   14000d524:	ret    
   14000d525:	int3   
   14000d526:	int3   
   14000d527:	int3   
   14000d528:	jmp    0x1400193f0
   14000d52d:	int3   
   14000d52e:	int3   
   14000d52f:	int3   
   14000d530:	sub    rsp,0x48
   14000d534:	mov    eax,DWORD PTR [rsp+0x78]
   14000d538:	and    QWORD PTR [rsp+0x30],0x0
   14000d53e:	mov    DWORD PTR [rsp+0x28],eax
   14000d542:	mov    eax,DWORD PTR [rsp+0x70]
   14000d546:	mov    DWORD PTR [rsp+0x20],eax
   14000d54a:	call   0x14000d554
   14000d54f:	add    rsp,0x48
   14000d553:	ret    
   14000d554:	sub    rsp,0x38
   14000d558:	lea    eax,[r9-0x45]
   14000d55c:	mov    r10d,0xffffffdf
   14000d562:	test   r10d,eax
   14000d565:	je     0x14000d5b1
   14000d567:	cmp    r9d,0x66
   14000d56b:	jne    0x14000d583
   14000d56d:	mov    rax,QWORD PTR [rsp+0x70]
   14000d572:	mov    r9d,DWORD PTR [rsp+0x60]
   14000d577:	mov    QWORD PTR [rsp+0x20],rax
   14000d57c:	call   0x14000de28
   14000d581:	jmp    0x14000d5cd
   14000d583:	lea    eax,[r9-0x41]
   14000d587:	mov    r9d,DWORD PTR [rsp+0x60]
   14000d58c:	test   r10d,eax
   14000d58f:	mov    rax,QWORD PTR [rsp+0x70]
   14000d594:	mov    QWORD PTR [rsp+0x28],rax
   14000d599:	mov    eax,DWORD PTR [rsp+0x68]
   14000d59d:	mov    DWORD PTR [rsp+0x20],eax
   14000d5a1:	je     0x14000d5aa
   14000d5a3:	call   0x14000df18
   14000d5a8:	jmp    0x14000d5cd
   14000d5aa:	call   0x14000d5f0
   14000d5af:	jmp    0x14000d5cd
   14000d5b1:	mov    rax,QWORD PTR [rsp+0x70]
   14000d5b6:	mov    r9d,DWORD PTR [rsp+0x60]
   14000d5bb:	mov    QWORD PTR [rsp+0x28],rax
   14000d5c0:	mov    eax,DWORD PTR [rsp+0x68]
   14000d5c4:	mov    DWORD PTR [rsp+0x20],eax
   14000d5c8:	call   0x14000dbb8
   14000d5cd:	add    rsp,0x38
   14000d5d1:	ret    
   14000d5d2:	int3   
   14000d5d3:	int3   
   14000d5d4:	sub    rsp,0x38
   14000d5d8:	mov    eax,DWORD PTR [rsp+0x60]
   14000d5dc:	and    QWORD PTR [rsp+0x28],0x0
   14000d5e2:	mov    DWORD PTR [rsp+0x20],eax
   14000d5e6:	call   0x14000d5f0
   14000d5eb:	add    rsp,0x38
   14000d5ef:	ret    
   14000d5f0:	mov    rax,rsp
   14000d5f3:	mov    QWORD PTR [rax+0x8],rbx
   14000d5f7:	mov    QWORD PTR [rax+0x10],rbp
   14000d5fb:	mov    QWORD PTR [rax+0x18],rsi
   14000d5ff:	push   rdi
   14000d600:	push   r12
   14000d602:	push   r13
   14000d604:	push   r14
   14000d606:	push   r15
   14000d608:	sub    rsp,0x50
   14000d60c:	mov    rdi,rdx
   14000d60f:	mov    rdx,QWORD PTR [rsp+0xa8]
   14000d617:	mov    r14,rcx
   14000d61a:	lea    rcx,[rax-0x48]
   14000d61e:	mov    r15d,0x30
   14000d624:	mov    ebx,r9d
   14000d627:	mov    rsi,r8
   14000d62a:	mov    r12d,0x3ff
   14000d630:	movzx  ebp,r15w
   14000d634:	call   0x14000a000
   14000d639:	xor    r9d,r9d
   14000d63c:	test   ebx,ebx
   14000d63e:	cmovs  ebx,r9d
   14000d642:	test   rdi,rdi
   14000d645:	jne    0x14000d653
   14000d647:	call   0x1400095b8
   14000d64c:	mov    ebx,0x16
   14000d651:	jmp    0x14000d670
   14000d653:	test   rsi,rsi
   14000d656:	je     0x14000d647
   14000d658:	lea    eax,[rbx+0xb]
   14000d65b:	mov    BYTE PTR [rdi],r9b
   14000d65e:	movsxd rcx,eax
   14000d661:	cmp    rsi,rcx
   14000d664:	ja     0x14000d67f
   14000d666:	call   0x1400095b8
   14000d66b:	mov    ebx,0x22
   14000d670:	mov    DWORD PTR [rax],ebx
   14000d672:	call   0x140008628
   14000d677:	xor    r9d,r9d
   14000d67a:	jmp    0x14000d96d
   14000d67f:	mov    rax,QWORD PTR [r14]
   14000d682:	mov    ecx,0x7ff
   14000d687:	shr    rax,0x34
   14000d68b:	and    rax,rcx
   14000d68e:	cmp    rax,rcx
   14000d691:	jne    0x14000d729
   14000d697:	mov    QWORD PTR [rsp+0x28],r9
   14000d69c:	mov    DWORD PTR [rsp+0x20],r9d
   14000d6a1:	lea    r8,[rsi-0x2]
   14000d6a5:	cmp    rsi,0xffffffffffffffff
   14000d6a9:	lea    rdx,[rdi+0x2]
   14000d6ad:	mov    r9d,ebx
   14000d6b0:	cmove  r8,rsi
   14000d6b4:	mov    rcx,r14
   14000d6b7:	call   0x14000dbb8
   14000d6bc:	xor    r9d,r9d
   14000d6bf:	mov    ebx,eax
   14000d6c1:	test   eax,eax
   14000d6c3:	je     0x14000d6cd
   14000d6c5:	mov    BYTE PTR [rdi],r9b
   14000d6c8:	jmp    0x14000d96d
   14000d6cd:	cmp    BYTE PTR [rdi+0x2],0x2d
   14000d6d1:	mov    esi,0x1
   14000d6d6:	jne    0x14000d6de
   14000d6d8:	mov    BYTE PTR [rdi],0x2d
   14000d6db:	add    rdi,rsi
   14000d6de:	mov    ebx,DWORD PTR [rsp+0xa0]
   14000d6e5:	mov    BYTE PTR [rdi],r15b
   14000d6e8:	mov    edx,0x65
   14000d6ed:	mov    eax,ebx
   14000d6ef:	neg    eax
   14000d6f1:	sbb    cl,cl
   14000d6f3:	and    cl,0xe0
   14000d6f6:	add    cl,0x78
   14000d6f9:	mov    BYTE PTR [rdi+rsi*1],cl
   14000d6fc:	lea    rcx,[rsi+0x1]
   14000d700:	add    rcx,rdi
   14000d703:	call   0x1400193f0
   14000d708:	xor    r9d,r9d
   14000d70b:	test   rax,rax
   14000d70e:	je     0x14000d96a
   14000d714:	neg    ebx
   14000d716:	sbb    cl,cl
   14000d718:	and    cl,0xe0
   14000d71b:	add    cl,0x70
   14000d71e:	mov    BYTE PTR [rax],cl
   14000d720:	mov    BYTE PTR [rax+0x3],r9b
   14000d724:	jmp    0x14000d96a
   14000d729:	movabs rax,0x8000000000000000
   14000d733:	mov    esi,0x1
   14000d738:	test   QWORD PTR [r14],rax
   14000d73b:	je     0x14000d743
   14000d73d:	mov    BYTE PTR [rdi],0x2d
   14000d740:	add    rdi,rsi
   14000d743:	mov    r13d,DWORD PTR [rsp+0xa0]
   14000d74b:	mov    r10d,r15d
   14000d74e:	movabs r11,0xfffffffffffff
   14000d758:	mov    BYTE PTR [rdi],r10b
   14000d75b:	add    rdi,rsi
   14000d75e:	mov    eax,r13d
   14000d761:	neg    eax
   14000d763:	mov    eax,r13d
   14000d766:	sbb    cl,cl
   14000d768:	and    cl,0xe0
   14000d76b:	add    cl,0x78
   14000d76e:	mov    BYTE PTR [rdi],cl
   14000d770:	add    rdi,rsi
   14000d773:	neg    eax
   14000d775:	sbb    edx,edx
   14000d777:	movabs rax,0x7ff0000000000000
   14000d781:	and    edx,0xffffffe0
   14000d784:	sub    edx,0xffffffd9
   14000d787:	test   QWORD PTR [r14],rax
   14000d78a:	jne    0x14000d7a7
   14000d78c:	mov    BYTE PTR [rdi],r10b
   14000d78f:	mov    rax,QWORD PTR [r14]
   14000d792:	add    rdi,rsi
   14000d795:	and    rax,r11
   14000d798:	neg    rax
   14000d79b:	sbb    r12,r12
   14000d79e:	and    r12d,0x3fe
   14000d7a5:	jmp    0x14000d7ad
   14000d7a7:	mov    BYTE PTR [rdi],0x31
   14000d7aa:	add    rdi,rsi
   14000d7ad:	mov    r15,rdi
   14000d7b0:	add    rdi,rsi
   14000d7b3:	test   ebx,ebx
   14000d7b5:	jne    0x14000d7bc
   14000d7b7:	mov    BYTE PTR [r15],r9b
   14000d7ba:	jmp    0x14000d7d0
   14000d7bc:	mov    rax,QWORD PTR [rsp+0x30]
   14000d7c1:	mov    rcx,QWORD PTR [rax+0xf0]
   14000d7c8:	mov    rax,QWORD PTR [rcx]
   14000d7cb:	mov    cl,BYTE PTR [rax]
   14000d7cd:	mov    BYTE PTR [r15],cl
   14000d7d0:	test   QWORD PTR [r14],r11
   14000d7d3:	jbe    0x14000d861
   14000d7d9:	movabs r8,0xf000000000000
   14000d7e3:	test   ebx,ebx
   14000d7e5:	jle    0x14000d814
   14000d7e7:	mov    rax,QWORD PTR [r14]
   14000d7ea:	mov    cl,bpl
   14000d7ed:	and    rax,r8
   14000d7f0:	and    rax,r11
   14000d7f3:	shr    rax,cl
   14000d7f6:	add    ax,r10w
   14000d7fa:	cmp    ax,0x39
   14000d7fe:	jbe    0x14000d803
   14000d800:	add    ax,dx
   14000d803:	mov    BYTE PTR [rdi],al
   14000d805:	shr    r8,0x4
   14000d809:	sub    ebx,esi
   14000d80b:	add    rdi,rsi
   14000d80e:	add    bp,0xfffc
   14000d812:	jns    0x14000d7e3
   14000d814:	test   bp,bp
   14000d817:	js     0x14000d861
   14000d819:	mov    rax,QWORD PTR [r14]
   14000d81c:	mov    cl,bpl
   14000d81f:	and    rax,r8
   14000d822:	and    rax,r11
   14000d825:	shr    rax,cl
   14000d828:	cmp    ax,0x8
   14000d82c:	jbe    0x14000d861
   14000d82e:	lea    rcx,[rdi-0x1]
   14000d832:	mov    al,BYTE PTR [rcx]
   14000d834:	sub    al,0x46
   14000d836:	test   al,0xdf
   14000d838:	jne    0x14000d842
   14000d83a:	mov    BYTE PTR [rcx],r10b
   14000d83d:	sub    rcx,rsi
   14000d840:	jmp    0x14000d832
   14000d842:	cmp    rcx,r15
   14000d845:	je     0x14000d85b
   14000d847:	mov    al,BYTE PTR [rcx]
   14000d849:	cmp    al,0x39
   14000d84b:	jne    0x14000d854
   14000d84d:	add    dl,0x3a
   14000d850:	mov    BYTE PTR [rcx],dl
   14000d852:	jmp    0x14000d861
   14000d854:	add    al,sil
   14000d857:	mov    BYTE PTR [rcx],al
   14000d859:	jmp    0x14000d861
   14000d85b:	sub    rcx,rsi
   14000d85e:	add    BYTE PTR [rcx],sil
   14000d861:	test   ebx,ebx
   14000d863:	jle    0x14000d87d
   14000d865:	mov    r8,rbx
   14000d868:	mov    dl,r10b
   14000d86b:	mov    rcx,rdi
   14000d86e:	call   0x140007150
   14000d873:	add    rdi,rbx
   14000d876:	xor    r9d,r9d
   14000d879:	lea    r10d,[r9+0x30]
   14000d87d:	cmp    BYTE PTR [r15],r9b
   14000d880:	cmove  rdi,r15
   14000d884:	neg    r13d
   14000d887:	sbb    al,al
   14000d889:	and    al,0xe0
   14000d88b:	add    al,0x70
   14000d88d:	mov    BYTE PTR [rdi],al
   14000d88f:	mov    rcx,QWORD PTR [r14]
   14000d892:	add    rdi,rsi
   14000d895:	shr    rcx,0x34
   14000d899:	and    ecx,0x7ff
   14000d89f:	sub    rcx,r12
   14000d8a2:	js     0x14000d8ac
   14000d8a4:	mov    BYTE PTR [rdi],0x2b
   14000d8a7:	add    rdi,rsi
   14000d8aa:	jmp    0x14000d8b5
   14000d8ac:	mov    BYTE PTR [rdi],0x2d
   14000d8af:	add    rdi,rsi
   14000d8b2:	neg    rcx
   14000d8b5:	mov    r8,rdi
   14000d8b8:	mov    BYTE PTR [rdi],r10b
   14000d8bb:	cmp    rcx,0x3e8
   14000d8c2:	jl     0x14000d8f7
   14000d8c4:	movabs rax,0x20c49ba5e353f7cf
   14000d8ce:	imul   rcx
   14000d8d1:	sar    rdx,0x7
   14000d8d5:	mov    rax,rdx
   14000d8d8:	shr    rax,0x3f
   14000d8dc:	add    rdx,rax
   14000d8df:	lea    eax,[r10+rdx*1]
   14000d8e3:	mov    BYTE PTR [rdi],al
   14000d8e5:	add    rdi,rsi
   14000d8e8:	imul   rax,rdx,0xfffffffffffffc18
   14000d8ef:	add    rcx,rax
   14000d8f2:	cmp    rdi,r8
   14000d8f5:	jne    0x14000d8fd
   14000d8f7:	cmp    rcx,0x64
   14000d8fb:	jl     0x14000d92b
   14000d8fd:	movabs rax,0xa3d70a3d70a3d70b
   14000d907:	imul   rcx
   14000d90a:	add    rdx,rcx
   14000d90d:	sar    rdx,0x6
   14000d911:	mov    rax,rdx
   14000d914:	shr    rax,0x3f
   14000d918:	add    rdx,rax
   14000d91b:	lea    eax,[r10+rdx*1]
   14000d91f:	mov    BYTE PTR [rdi],al
   14000d921:	add    rdi,rsi
   14000d924:	imul   rax,rdx,0xffffffffffffff9c
   14000d928:	add    rcx,rax
   14000d92b:	cmp    rdi,r8
   14000d92e:	jne    0x14000d936
   14000d930:	cmp    rcx,0xa
   14000d934:	jl     0x14000d961
   14000d936:	movabs rax,0x6666666666666667
   14000d940:	imul   rcx
   14000d943:	sar    rdx,0x2
   14000d947:	mov    rax,rdx
   14000d94a:	shr    rax,0x3f
   14000d94e:	add    rdx,rax
   14000d951:	lea    eax,[r10+rdx*1]
   14000d955:	mov    BYTE PTR [rdi],al
   14000d957:	add    rdi,rsi
   14000d95a:	imul   rax,rdx,0xfffffffffffffff6
   14000d95e:	add    rcx,rax
   14000d961:	add    cl,r10b
   14000d964:	mov    BYTE PTR [rdi],cl
   14000d966:	mov    BYTE PTR [rdi+0x1],r9b
   14000d96a:	mov    ebx,r9d
   14000d96d:	cmp    BYTE PTR [rsp+0x48],r9b
   14000d972:	je     0x14000d980
   14000d974:	mov    rcx,QWORD PTR [rsp+0x40]
   14000d979:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14000d980:	lea    r11,[rsp+0x50]
   14000d985:	mov    eax,ebx
   14000d987:	mov    rbx,QWORD PTR [r11+0x30]
   14000d98b:	mov    rbp,QWORD PTR [r11+0x38]
   14000d98f:	mov    rsi,QWORD PTR [r11+0x40]
   14000d993:	mov    rsp,r11
   14000d996:	pop    r15
   14000d998:	pop    r14
   14000d99a:	pop    r13
   14000d99c:	pop    r12
   14000d99e:	pop    rdi
   14000d99f:	ret    
   14000d9a0:	sub    rsp,0x38
   14000d9a4:	mov    eax,DWORD PTR [rsp+0x60]
   14000d9a8:	and    QWORD PTR [rsp+0x28],0x0
   14000d9ae:	mov    DWORD PTR [rsp+0x20],eax
   14000d9b2:	call   0x14000dbb8
   14000d9b7:	add    rsp,0x38
   14000d9bb:	ret    
   14000d9bc:	mov    rax,rsp
   14000d9bf:	mov    QWORD PTR [rax+0x8],rbx
   14000d9c3:	mov    QWORD PTR [rax+0x10],rbp
   14000d9c7:	mov    QWORD PTR [rax+0x18],rsi
   14000d9cb:	mov    QWORD PTR [rax+0x20],rdi
   14000d9cf:	push   r13
   14000d9d1:	push   r14
   14000d9d3:	push   r15
   14000d9d5:	sub    rsp,0x50
   14000d9d9:	mov    r14,rdx
   14000d9dc:	mov    rdx,QWORD PTR [rsp+0xa0]
   14000d9e4:	mov    rdi,rcx
   14000d9e7:	lea    rcx,[rax-0x38]
   14000d9eb:	mov    r13d,r9d
   14000d9ee:	movsxd rsi,r8d
   14000d9f1:	call   0x14000a000
   14000d9f6:	test   rdi,rdi
   14000d9f9:	je     0x14000da00
   14000d9fb:	test   r14,r14
   14000d9fe:	jne    0x14000da0c
   14000da00:	call   0x1400095b8
   14000da05:	mov    ebx,0x16
   14000da0a:	jmp    0x14000da27
   14000da0c:	xor    eax,eax
   14000da0e:	test   esi,esi
   14000da10:	cmovg  eax,esi
   14000da13:	add    eax,0x9
   14000da16:	cdqe   
   14000da18:	cmp    r14,rax
   14000da1b:	ja     0x14000da33
   14000da1d:	call   0x1400095b8
   14000da22:	mov    ebx,0x22
   14000da27:	mov    DWORD PTR [rax],ebx
   14000da29:	call   0x140008628
   14000da2e:	jmp    0x14000db6b
   14000da33:	cmp    BYTE PTR [rsp+0x98],0x0
   14000da3b:	mov    rbp,QWORD PTR [rsp+0x90]
   14000da43:	je     0x14000da79
   14000da45:	xor    ebx,ebx
   14000da47:	cmp    DWORD PTR [rbp+0x0],0x2d
   14000da4b:	sete   bl
   14000da4e:	xor    r15d,r15d
   14000da51:	add    rbx,rdi
   14000da54:	test   esi,esi
   14000da56:	setg   r15b
   14000da5a:	test   r15d,r15d
   14000da5d:	je     0x14000da79
   14000da5f:	mov    rcx,rbx
   14000da62:	call   0x140007730
   14000da67:	movsxd rcx,r15d
   14000da6a:	mov    rdx,rbx
   14000da6d:	lea    r8,[rax+0x1]
   14000da71:	add    rcx,rbx
   14000da74:	call   0x1400056d0
   14000da79:	cmp    DWORD PTR [rbp+0x0],0x2d
   14000da7d:	mov    rdx,rdi
   14000da80:	jne    0x14000da89
   14000da82:	mov    BYTE PTR [rdi],0x2d
   14000da85:	lea    rdx,[rdi+0x1]
   14000da89:	test   esi,esi
   14000da8b:	jle    0x14000daa8
   14000da8d:	mov    al,BYTE PTR [rdx+0x1]
   14000da90:	mov    BYTE PTR [rdx],al
   14000da92:	mov    rax,QWORD PTR [rsp+0x30]
   14000da97:	inc    rdx
   14000da9a:	mov    rcx,QWORD PTR [rax+0xf0]
   14000daa1:	mov    rax,QWORD PTR [rcx]
   14000daa4:	mov    cl,BYTE PTR [rax]
   14000daa6:	mov    BYTE PTR [rdx],cl
   14000daa8:	xor    ecx,ecx
   14000daaa:	lea    rbx,[rdx+rsi*1]
   14000daae:	lea    r8,[rip+0x1ceb3]        # 0x14002a968
   14000dab5:	cmp    BYTE PTR [rsp+0x98],cl
   14000dabc:	sete   cl
   14000dabf:	add    rbx,rcx
   14000dac2:	sub    rdi,rbx
   14000dac5:	cmp    r14,0xffffffffffffffff
   14000dac9:	mov    rcx,rbx
   14000dacc:	lea    rdx,[r14+rdi*1]
   14000dad0:	cmove  rdx,r14
   14000dad4:	call   0x14000ee64
   14000dad9:	test   eax,eax
   14000dadb:	jne    0x14000db9f
   14000dae1:	lea    rcx,[rbx+0x2]
   14000dae5:	test   r13d,r13d
   14000dae8:	je     0x14000daed
   14000daea:	mov    BYTE PTR [rbx],0x45
   14000daed:	mov    rax,QWORD PTR [rbp+0x10]
   14000daf1:	cmp    BYTE PTR [rax],0x30
   14000daf4:	je     0x14000db4c
   14000daf6:	mov    r8d,DWORD PTR [rbp+0x4]
   14000dafa:	dec    r8d
   14000dafd:	jns    0x14000db06
   14000daff:	neg    r8d
   14000db02:	mov    BYTE PTR [rbx+0x1],0x2d
   14000db06:	cmp    r8d,0x64
   14000db0a:	jl     0x14000db27
   14000db0c:	mov    eax,0x51eb851f
   14000db11:	imul   r8d
   14000db14:	sar    edx,0x5
   14000db17:	mov    eax,edx
   14000db19:	shr    eax,0x1f
   14000db1c:	add    edx,eax
   14000db1e:	add    BYTE PTR [rbx+0x2],dl
   14000db21:	imul   eax,edx,0xffffff9c
   14000db24:	add    r8d,eax
   14000db27:	cmp    r8d,0xa
   14000db2b:	jl     0x14000db48
   14000db2d:	mov    eax,0x66666667
   14000db32:	imul   r8d
   14000db35:	sar    edx,0x2
   14000db38:	mov    eax,edx
   14000db3a:	shr    eax,0x1f
   14000db3d:	add    edx,eax
   14000db3f:	add    BYTE PTR [rbx+0x3],dl
   14000db42:	imul   eax,edx,0xfffffff6
   14000db45:	add    r8d,eax
   14000db48:	add    BYTE PTR [rbx+0x4],r8b
   14000db4c:	test   BYTE PTR [rip+0x2b4c1],0x1        # 0x140039014
   14000db53:	je     0x14000db69
   14000db55:	cmp    BYTE PTR [rcx],0x30
   14000db58:	jne    0x14000db69
   14000db5a:	lea    rdx,[rcx+0x1]
   14000db5e:	mov    r8d,0x3
   14000db64:	call   0x1400056d0
   14000db69:	xor    ebx,ebx
   14000db6b:	cmp    BYTE PTR [rsp+0x48],0x0
   14000db70:	je     0x14000db7e
   14000db72:	mov    rcx,QWORD PTR [rsp+0x40]
   14000db77:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14000db7e:	lea    r11,[rsp+0x50]
   14000db83:	mov    eax,ebx
   14000db85:	mov    rbx,QWORD PTR [r11+0x20]
   14000db89:	mov    rbp,QWORD PTR [r11+0x28]
   14000db8d:	mov    rsi,QWORD PTR [r11+0x30]
   14000db91:	mov    rdi,QWORD PTR [r11+0x38]
   14000db95:	mov    rsp,r11
   14000db98:	pop    r15
   14000db9a:	pop    r14
   14000db9c:	pop    r13
   14000db9e:	ret    
   14000db9f:	and    QWORD PTR [rsp+0x20],0x0
   14000dba5:	xor    r9d,r9d
   14000dba8:	xor    r8d,r8d
   14000dbab:	xor    edx,edx
   14000dbad:	xor    ecx,ecx
   14000dbaf:	call   0x140008678
   14000dbb4:	int3   
   14000dbb5:	int3   
   14000dbb6:	int3   
   14000dbb7:	int3   
   14000dbb8:	rex push rbx
   14000dbba:	push   rbp
   14000dbbb:	push   rsi
   14000dbbc:	push   rdi
   14000dbbd:	sub    rsp,0x88
   14000dbc4:	mov    rax,QWORD PTR [rip+0x28e75]        # 0x140036a40
   14000dbcb:	xor    rax,rsp
   14000dbce:	mov    QWORD PTR [rsp+0x70],rax
   14000dbd3:	mov    rcx,QWORD PTR [rcx]
   14000dbd6:	mov    rbx,r8
   14000dbd9:	mov    rdi,rdx
   14000dbdc:	mov    esi,r9d
   14000dbdf:	mov    ebp,0x16
   14000dbe4:	lea    r8,[rsp+0x58]
   14000dbe9:	lea    rdx,[rsp+0x40]
   14000dbee:	mov    r9d,ebp
   14000dbf1:	call   0x140019958
   14000dbf6:	test   rdi,rdi
   14000dbf9:	jne    0x14000dc0e
   14000dbfb:	call   0x1400095b8
   14000dc00:	mov    DWORD PTR [rax],ebp
   14000dc02:	call   0x140008628
   14000dc07:	mov    eax,ebp
   14000dc09:	jmp    0x14000dc96
   14000dc0e:	test   rbx,rbx
   14000dc11:	je     0x14000dbfb
   14000dc13:	or     rdx,0xffffffffffffffff
   14000dc17:	cmp    rbx,rdx
   14000dc1a:	je     0x14000dc36
   14000dc1c:	xor    eax,eax
   14000dc1e:	cmp    DWORD PTR [rsp+0x40],0x2d
   14000dc23:	mov    rdx,rbx
   14000dc26:	sete   al
   14000dc29:	sub    rdx,rax
   14000dc2c:	xor    eax,eax
   14000dc2e:	test   esi,esi
   14000dc30:	setg   al
   14000dc33:	sub    rdx,rax
   14000dc36:	xor    eax,eax
   14000dc38:	cmp    DWORD PTR [rsp+0x40],0x2d
   14000dc3d:	lea    r8d,[rsi+0x1]
   14000dc41:	sete   al
   14000dc44:	xor    ecx,ecx
   14000dc46:	test   esi,esi
   14000dc48:	setg   cl
   14000dc4b:	add    rax,rdi
   14000dc4e:	lea    r9,[rsp+0x40]
   14000dc53:	add    rcx,rax
   14000dc56:	call   0x140019534
   14000dc5b:	test   eax,eax
   14000dc5d:	je     0x14000dc64
   14000dc5f:	mov    BYTE PTR [rdi],0x0
   14000dc62:	jmp    0x14000dc96
   14000dc64:	mov    rax,QWORD PTR [rsp+0xd8]
   14000dc6c:	mov    r9d,DWORD PTR [rsp+0xd0]
   14000dc74:	mov    r8d,esi
   14000dc77:	mov    QWORD PTR [rsp+0x30],rax
   14000dc7c:	lea    rax,[rsp+0x40]
   14000dc81:	mov    rdx,rbx
   14000dc84:	mov    rcx,rdi
   14000dc87:	mov    BYTE PTR [rsp+0x28],0x0
   14000dc8c:	mov    QWORD PTR [rsp+0x20],rax
   14000dc91:	call   0x14000d9bc
   14000dc96:	mov    rcx,QWORD PTR [rsp+0x70]
   14000dc9b:	xor    rcx,rsp
   14000dc9e:	call   0x14000d0a0
   14000dca3:	add    rsp,0x88
   14000dcaa:	pop    rdi
   14000dcab:	pop    rsi
   14000dcac:	pop    rbp
   14000dcad:	pop    rbx
   14000dcae:	ret    
   14000dcaf:	int3   
   14000dcb0:	sub    rsp,0x38
   14000dcb4:	and    QWORD PTR [rsp+0x20],0x0
   14000dcba:	call   0x14000de28
   14000dcbf:	add    rsp,0x38
   14000dcc3:	ret    
   14000dcc4:	mov    rax,rsp
   14000dcc7:	mov    QWORD PTR [rax+0x8],rbx
   14000dccb:	mov    QWORD PTR [rax+0x10],rbp
   14000dccf:	mov    QWORD PTR [rax+0x18],rsi
   14000dcd3:	mov    QWORD PTR [rax+0x20],rdi
   14000dcd7:	push   r14
   14000dcd9:	sub    rsp,0x40
   14000dcdd:	mov    ebx,DWORD PTR [r9+0x4]
   14000dce1:	mov    rsi,rdx
   14000dce4:	mov    rdx,QWORD PTR [rsp+0x78]
   14000dce9:	mov    rdi,rcx
   14000dcec:	lea    rcx,[rax-0x28]
   14000dcf0:	mov    rbp,r9
   14000dcf3:	dec    ebx
   14000dcf5:	mov    r14d,r8d
   14000dcf8:	call   0x14000a000
   14000dcfd:	test   rdi,rdi
   14000dd00:	je     0x14000dd07
   14000dd02:	test   rsi,rsi
   14000dd05:	jne    0x14000dd1d
   14000dd07:	call   0x1400095b8
   14000dd0c:	mov    ebx,0x16
   14000dd11:	mov    DWORD PTR [rax],ebx
   14000dd13:	call   0x140008628
   14000dd18:	jmp    0x14000ddf5
   14000dd1d:	cmp    BYTE PTR [rsp+0x70],0x0
   14000dd22:	je     0x14000dd3e
   14000dd24:	cmp    ebx,r14d
   14000dd27:	jne    0x14000dd3e
   14000dd29:	xor    eax,eax
   14000dd2b:	cmp    DWORD PTR [rbp+0x0],0x2d
   14000dd2f:	movsxd rcx,ebx
   14000dd32:	sete   al
   14000dd35:	add    rax,rdi
   14000dd38:	mov    WORD PTR [rcx+rax*1],0x30
   14000dd3e:	cmp    DWORD PTR [rbp+0x0],0x2d
   14000dd42:	jne    0x14000dd4a
   14000dd44:	mov    BYTE PTR [rdi],0x2d
   14000dd47:	inc    rdi
   14000dd4a:	cmp    DWORD PTR [rbp+0x4],0x0
   14000dd4e:	jg     0x14000dd70
   14000dd50:	mov    rcx,rdi
   14000dd53:	call   0x140007730
   14000dd58:	lea    rcx,[rdi+0x1]
   14000dd5c:	mov    rdx,rdi
   14000dd5f:	lea    r8,[rax+0x1]
   14000dd63:	call   0x1400056d0
   14000dd68:	mov    BYTE PTR [rdi],0x30
   14000dd6b:	inc    rdi
   14000dd6e:	jmp    0x14000dd77
   14000dd70:	movsxd rax,DWORD PTR [rbp+0x4]
   14000dd74:	add    rdi,rax
   14000dd77:	test   r14d,r14d
   14000dd7a:	jle    0x14000ddf3
   14000dd7c:	mov    rcx,rdi
   14000dd7f:	lea    rsi,[rdi+0x1]
   14000dd83:	call   0x140007730
   14000dd88:	mov    rdx,rdi
   14000dd8b:	mov    rcx,rsi
   14000dd8e:	lea    r8,[rax+0x1]
   14000dd92:	call   0x1400056d0
   14000dd97:	mov    rax,QWORD PTR [rsp+0x20]
   14000dd9c:	mov    rcx,QWORD PTR [rax+0xf0]
   14000dda3:	mov    rax,QWORD PTR [rcx]
   14000dda6:	mov    cl,BYTE PTR [rax]
   14000dda8:	mov    BYTE PTR [rdi],cl
   14000ddaa:	mov    ebx,DWORD PTR [rbp+0x4]
   14000ddad:	test   ebx,ebx
   14000ddaf:	jns    0x14000ddf3
   14000ddb1:	neg    ebx
   14000ddb3:	cmp    BYTE PTR [rsp+0x70],0x0
   14000ddb8:	jne    0x14000ddc5
   14000ddba:	mov    eax,ebx
   14000ddbc:	mov    ebx,r14d
   14000ddbf:	cmp    r14d,eax
   14000ddc2:	cmovge ebx,eax
   14000ddc5:	test   ebx,ebx
   14000ddc7:	je     0x14000dde3
   14000ddc9:	mov    rcx,rsi
   14000ddcc:	call   0x140007730
   14000ddd1:	movsxd rcx,ebx
   14000ddd4:	mov    rdx,rsi
   14000ddd7:	lea    r8,[rax+0x1]
   14000dddb:	add    rcx,rsi
   14000ddde:	call   0x1400056d0
   14000dde3:	movsxd r8,ebx
   14000dde6:	mov    edx,0x30
   14000ddeb:	mov    rcx,rsi
   14000ddee:	call   0x140007150
   14000ddf3:	xor    ebx,ebx
   14000ddf5:	cmp    BYTE PTR [rsp+0x38],0x0
   14000ddfa:	je     0x14000de08
   14000ddfc:	mov    rcx,QWORD PTR [rsp+0x30]
   14000de01:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14000de08:	mov    rbp,QWORD PTR [rsp+0x58]
   14000de0d:	mov    rsi,QWORD PTR [rsp+0x60]
   14000de12:	mov    rdi,QWORD PTR [rsp+0x68]
   14000de17:	mov    eax,ebx
   14000de19:	mov    rbx,QWORD PTR [rsp+0x50]
   14000de1e:	add    rsp,0x40
   14000de22:	pop    r14
   14000de24:	ret    
   14000de25:	int3   
   14000de26:	int3   
   14000de27:	int3   
   14000de28:	rex push rbx
   14000de2a:	push   rbp
   14000de2b:	push   rsi
   14000de2c:	push   rdi
   14000de2d:	sub    rsp,0x78
   14000de31:	mov    rax,QWORD PTR [rip+0x28c08]        # 0x140036a40
   14000de38:	xor    rax,rsp
   14000de3b:	mov    QWORD PTR [rsp+0x60],rax
   14000de40:	mov    rcx,QWORD PTR [rcx]
   14000de43:	mov    rbx,r8
   14000de46:	mov    rdi,rdx
   14000de49:	mov    esi,r9d
   14000de4c:	mov    ebp,0x16
   14000de51:	lea    r8,[rsp+0x48]
   14000de56:	lea    rdx,[rsp+0x30]
   14000de5b:	mov    r9d,ebp
   14000de5e:	call   0x140019958
   14000de63:	test   rdi,rdi
   14000de66:	jne    0x14000de78
   14000de68:	call   0x1400095b8
   14000de6d:	mov    DWORD PTR [rax],ebp
   14000de6f:	call   0x140008628
   14000de74:	mov    eax,ebp
   14000de76:	jmp    0x14000dee3
   14000de78:	test   rbx,rbx
   14000de7b:	je     0x14000de68
   14000de7d:	or     rdx,0xffffffffffffffff
   14000de81:	cmp    rbx,rdx
   14000de84:	je     0x14000de96
   14000de86:	xor    eax,eax
   14000de88:	cmp    DWORD PTR [rsp+0x30],0x2d
   14000de8d:	mov    rdx,rbx
   14000de90:	sete   al
   14000de93:	sub    rdx,rax
   14000de96:	mov    r8d,DWORD PTR [rsp+0x34]
   14000de9b:	xor    ecx,ecx
   14000de9d:	lea    r9,[rsp+0x30]
   14000dea2:	add    r8d,esi
   14000dea5:	cmp    DWORD PTR [rsp+0x30],0x2d
   14000deaa:	sete   cl
   14000dead:	add    rcx,rdi
   14000deb0:	call   0x140019534
   14000deb5:	test   eax,eax
   14000deb7:	je     0x14000debe
   14000deb9:	mov    BYTE PTR [rdi],0x0
   14000debc:	jmp    0x14000dee3
   14000debe:	mov    rax,QWORD PTR [rsp+0xc0]
   14000dec6:	lea    r9,[rsp+0x30]
   14000decb:	mov    r8d,esi
   14000dece:	mov    QWORD PTR [rsp+0x28],rax
   14000ded3:	mov    rdx,rbx
   14000ded6:	mov    rcx,rdi
   14000ded9:	mov    BYTE PTR [rsp+0x20],0x0
   14000dede:	call   0x14000dcc4
   14000dee3:	mov    rcx,QWORD PTR [rsp+0x60]
   14000dee8:	xor    rcx,rsp
   14000deeb:	call   0x14000d0a0
   14000def0:	add    rsp,0x78
   14000def4:	pop    rdi
   14000def5:	pop    rsi
   14000def6:	pop    rbp
   14000def7:	pop    rbx
   14000def8:	ret    
   14000def9:	int3   
   14000defa:	int3   
   14000defb:	int3   
   14000defc:	sub    rsp,0x38
   14000df00:	mov    eax,DWORD PTR [rsp+0x60]
   14000df04:	and    QWORD PTR [rsp+0x28],0x0
   14000df0a:	mov    DWORD PTR [rsp+0x20],eax
   14000df0e:	call   0x14000df18
   14000df13:	add    rsp,0x38
   14000df17:	ret    
   14000df18:	rex push rbx
   14000df1a:	push   rbp
   14000df1b:	push   rsi
   14000df1c:	push   rdi
   14000df1d:	push   r14
   14000df1f:	sub    rsp,0x80
   14000df26:	mov    rax,QWORD PTR [rip+0x28b13]        # 0x140036a40
   14000df2d:	xor    rax,rsp
   14000df30:	mov    QWORD PTR [rsp+0x70],rax
   14000df35:	mov    rcx,QWORD PTR [rcx]
   14000df38:	mov    rdi,r8
   14000df3b:	mov    rsi,rdx
   14000df3e:	mov    ebp,r9d
   14000df41:	mov    ebx,0x16
   14000df46:	lea    r8,[rsp+0x58]
   14000df4b:	lea    rdx,[rsp+0x40]
   14000df50:	mov    r9d,ebx
   14000df53:	call   0x140019958
   14000df58:	test   rsi,rsi
   14000df5b:	jne    0x14000df70
   14000df5d:	call   0x1400095b8
   14000df62:	mov    DWORD PTR [rax],ebx
   14000df64:	call   0x140008628
   14000df69:	mov    eax,ebx
   14000df6b:	jmp    0x14000e031
   14000df70:	test   rdi,rdi
   14000df73:	je     0x14000df5d
   14000df75:	mov    r14d,DWORD PTR [rsp+0x44]
   14000df7a:	xor    eax,eax
   14000df7c:	dec    r14d
   14000df7f:	cmp    DWORD PTR [rsp+0x40],0x2d
   14000df84:	sete   al
   14000df87:	or     rdx,0xffffffffffffffff
   14000df8b:	lea    rbx,[rax+rsi*1]
   14000df8f:	cmp    rdi,rdx
   14000df92:	je     0x14000df9a
   14000df94:	mov    rdx,rdi
   14000df97:	sub    rdx,rax
   14000df9a:	lea    r9,[rsp+0x40]
   14000df9f:	mov    r8d,ebp
   14000dfa2:	mov    rcx,rbx
   14000dfa5:	call   0x140019534
   14000dfaa:	test   eax,eax
   14000dfac:	je     0x14000dfb3
   14000dfae:	mov    BYTE PTR [rsi],0x0
   14000dfb1:	jmp    0x14000e031
   14000dfb3:	mov    eax,DWORD PTR [rsp+0x44]
   14000dfb7:	dec    eax
   14000dfb9:	cmp    r14d,eax
   14000dfbc:	setl   cl
   14000dfbf:	cmp    eax,0xfffffffc
   14000dfc2:	jl     0x14000dfff
   14000dfc4:	cmp    eax,ebp
   14000dfc6:	jge    0x14000dfff
   14000dfc8:	test   cl,cl
   14000dfca:	je     0x14000dfd8
   14000dfcc:	mov    al,BYTE PTR [rbx]
   14000dfce:	inc    rbx
   14000dfd1:	test   al,al
   14000dfd3:	jne    0x14000dfcc
   14000dfd5:	mov    BYTE PTR [rbx-0x2],al
   14000dfd8:	mov    rax,QWORD PTR [rsp+0xd8]
   14000dfe0:	lea    r9,[rsp+0x40]
   14000dfe5:	mov    r8d,ebp
   14000dfe8:	mov    QWORD PTR [rsp+0x28],rax
   14000dfed:	mov    rdx,rdi
   14000dff0:	mov    rcx,rsi
   14000dff3:	mov    BYTE PTR [rsp+0x20],0x1
   14000dff8:	call   0x14000dcc4
   14000dffd:	jmp    0x14000e031
   14000dfff:	mov    rax,QWORD PTR [rsp+0xd8]
   14000e007:	mov    r9d,DWORD PTR [rsp+0xd0]
   14000e00f:	mov    r8d,ebp
   14000e012:	mov    QWORD PTR [rsp+0x30],rax
   14000e017:	lea    rax,[rsp+0x40]
   14000e01c:	mov    rdx,rdi
   14000e01f:	mov    rcx,rsi
   14000e022:	mov    BYTE PTR [rsp+0x28],0x1
   14000e027:	mov    QWORD PTR [rsp+0x20],rax
   14000e02c:	call   0x14000d9bc
   14000e031:	mov    rcx,QWORD PTR [rsp+0x70]
   14000e036:	xor    rcx,rsp
   14000e039:	call   0x14000d0a0
   14000e03e:	add    rsp,0x80
   14000e045:	pop    r14
   14000e047:	pop    rdi
   14000e048:	pop    rsi
   14000e049:	pop    rbp
   14000e04a:	pop    rbx
   14000e04b:	ret    
   14000e04c:	xor    edx,edx
   14000e04e:	jmp    0x14000e054
   14000e053:	int3   
   14000e054:	rex push rbx
   14000e056:	sub    rsp,0x40
   14000e05a:	mov    rbx,rcx
   14000e05d:	lea    rcx,[rsp+0x20]
   14000e062:	call   0x14000a000
   14000e067:	mov    cl,BYTE PTR [rbx]
   14000e069:	mov    r8,QWORD PTR [rsp+0x20]
   14000e06e:	test   cl,cl
   14000e070:	je     0x14000e08b
   14000e072:	mov    rax,QWORD PTR [r8+0xf0]
   14000e079:	mov    rdx,QWORD PTR [rax]
   14000e07c:	mov    al,BYTE PTR [rdx]
   14000e07e:	cmp    cl,al
   14000e080:	je     0x14000e08b
   14000e082:	inc    rbx
   14000e085:	mov    cl,BYTE PTR [rbx]
   14000e087:	test   cl,cl
   14000e089:	jne    0x14000e07e
   14000e08b:	mov    al,BYTE PTR [rbx]
   14000e08d:	inc    rbx
   14000e090:	test   al,al
   14000e092:	je     0x14000e0d1
   14000e094:	jmp    0x14000e09f
   14000e096:	sub    al,0x45
   14000e098:	test   al,0xdf
   14000e09a:	je     0x14000e0a5
   14000e09c:	inc    rbx
   14000e09f:	mov    al,BYTE PTR [rbx]
   14000e0a1:	test   al,al
   14000e0a3:	jne    0x14000e096
   14000e0a5:	mov    rdx,rbx
   14000e0a8:	dec    rbx
   14000e0ab:	cmp    BYTE PTR [rbx],0x30
   14000e0ae:	je     0x14000e0a8
   14000e0b0:	mov    rax,QWORD PTR [r8+0xf0]
   14000e0b7:	mov    rcx,QWORD PTR [rax]
   14000e0ba:	mov    al,BYTE PTR [rcx]
   14000e0bc:	cmp    BYTE PTR [rbx],al
   14000e0be:	jne    0x14000e0c3
   14000e0c0:	dec    rbx
   14000e0c3:	mov    al,BYTE PTR [rdx]
   14000e0c5:	inc    rbx
   14000e0c8:	inc    rdx
   14000e0cb:	mov    BYTE PTR [rbx],al
   14000e0cd:	test   al,al
   14000e0cf:	jne    0x14000e0c3
   14000e0d1:	cmp    BYTE PTR [rsp+0x38],0x0
   14000e0d6:	je     0x14000e0e4
   14000e0d8:	mov    rax,QWORD PTR [rsp+0x30]
   14000e0dd:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14000e0e4:	add    rsp,0x40
   14000e0e8:	pop    rbx
   14000e0e9:	ret    
   14000e0ea:	int3   
   14000e0eb:	int3   
   14000e0ec:	xor    r9d,r9d
   14000e0ef:	jmp    0x14000e0f4
   14000e0f4:	rex push rbx
   14000e0f6:	sub    rsp,0x30
   14000e0fa:	mov    rax,r8
   14000e0fd:	mov    rbx,rdx
   14000e100:	mov    r8,r9
   14000e103:	mov    rdx,rax
   14000e106:	test   ecx,ecx
   14000e108:	je     0x14000e11e
   14000e10a:	lea    rcx,[rsp+0x20]
   14000e10f:	call   0x1400196d8
   14000e114:	mov    rax,QWORD PTR [rsp+0x20]
   14000e119:	mov    QWORD PTR [rbx],rax
   14000e11c:	jmp    0x14000e12e
   14000e11e:	lea    rcx,[rsp+0x40]
   14000e123:	call   0x1400197ac
   14000e128:	mov    eax,DWORD PTR [rsp+0x40]
   14000e12c:	mov    DWORD PTR [rbx],eax
   14000e12e:	add    rsp,0x30
   14000e132:	pop    rbx
   14000e133:	ret    
   14000e134:	xor    edx,edx
   14000e136:	jmp    0x14000e13c
   14000e13b:	int3   
   14000e13c:	rex push rbx
   14000e13e:	sub    rsp,0x40
   14000e142:	mov    rbx,rcx
   14000e145:	lea    rcx,[rsp+0x20]
   14000e14a:	call   0x14000a000
   14000e14f:	movsx  ecx,BYTE PTR [rbx]
   14000e152:	call   0x1400193d0
   14000e157:	cmp    eax,0x65
   14000e15a:	je     0x14000e16b
   14000e15c:	inc    rbx
   14000e15f:	movzx  ecx,BYTE PTR [rbx]
   14000e162:	call   0x140018e8c
   14000e167:	test   eax,eax
   14000e169:	jne    0x14000e15c
   14000e16b:	movsx  ecx,BYTE PTR [rbx]
   14000e16e:	call   0x1400193d0
   14000e173:	cmp    eax,0x78
   14000e176:	jne    0x14000e17c
   14000e178:	add    rbx,0x2
   14000e17c:	mov    rax,QWORD PTR [rsp+0x20]
   14000e181:	mov    dl,BYTE PTR [rbx]
   14000e183:	mov    rcx,QWORD PTR [rax+0xf0]
   14000e18a:	mov    rax,QWORD PTR [rcx]
   14000e18d:	mov    cl,BYTE PTR [rax]
   14000e18f:	mov    BYTE PTR [rbx],cl
   14000e191:	inc    rbx
   14000e194:	mov    al,BYTE PTR [rbx]
   14000e196:	mov    BYTE PTR [rbx],dl
   14000e198:	mov    dl,al
   14000e19a:	mov    al,BYTE PTR [rbx]
   14000e19c:	inc    rbx
   14000e19f:	test   al,al
   14000e1a1:	jne    0x14000e194
   14000e1a3:	cmp    BYTE PTR [rsp+0x38],al
   14000e1a7:	je     0x14000e1b5
   14000e1a9:	mov    rax,QWORD PTR [rsp+0x30]
   14000e1ae:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14000e1b5:	add    rsp,0x40
   14000e1b9:	pop    rbx
   14000e1ba:	ret    
   14000e1bb:	int3   
   14000e1bc:	movsd  xmm0,QWORD PTR [rcx]
   14000e1c0:	xor    eax,eax
   14000e1c2:	comisd xmm0,QWORD PTR [rip+0x1c7a6]        # 0x14002a970
   14000e1ca:	setae  al
   14000e1cd:	ret    
   14000e1ce:	int3   
   14000e1cf:	int3   
   14000e1d0:	test   edx,edx
   14000e1d2:	je     0x14000e203
   14000e1d4:	mov    QWORD PTR [rsp+0x8],rbx
   14000e1d9:	push   rdi
   14000e1da:	sub    rsp,0x20
   14000e1de:	movsxd rbx,edx
   14000e1e1:	mov    rdi,rcx
   14000e1e4:	call   0x140007730
   14000e1e9:	lea    rcx,[rdi+rbx*1]
   14000e1ed:	lea    r8,[rax+0x1]
   14000e1f1:	mov    rdx,rdi
   14000e1f4:	call   0x1400056d0
   14000e1f9:	mov    rbx,QWORD PTR [rsp+0x30]
   14000e1fe:	add    rsp,0x20
   14000e202:	pop    rdi
   14000e203:	ret    
   14000e204:	sub    rsp,0x28
   14000e208:	mov    rax,QWORD PTR [rcx]
   14000e20b:	cmp    DWORD PTR [rax],0xe06d7363
   14000e211:	jne    0x14000e22f
   14000e213:	cmp    DWORD PTR [rax+0x18],0x4
   14000e217:	jne    0x14000e22f
   14000e219:	mov    ecx,DWORD PTR [rax+0x20]
   14000e21c:	lea    eax,[rcx-0x19930520]
   14000e222:	cmp    eax,0x2
   14000e225:	jbe    0x14000e236
   14000e227:	cmp    ecx,0x1994000
   14000e22d:	je     0x14000e236
   14000e22f:	xor    eax,eax
   14000e231:	add    rsp,0x28
   14000e235:	ret    
   14000e236:	call   0x14000984c
   14000e23b:	int3   
   14000e23c:	sub    rsp,0x28
   14000e240:	lea    rcx,[rip+0xffffffffffffffbd]        # 0x14000e204
   14000e247:	call   0x1400091f8
   14000e24c:	xor    eax,eax
   14000e24e:	add    rsp,0x28
   14000e252:	ret    
   14000e253:	int3   
   14000e254:	mov    QWORD PTR [rsp+0x8],rbx
   14000e259:	mov    QWORD PTR [rsp+0x10],rbp
   14000e25e:	mov    QWORD PTR [rsp+0x18],rsi
   14000e263:	push   rdi
   14000e264:	sub    rsp,0x20
   14000e268:	mov    rsi,rdx
   14000e26b:	mov    edi,ecx
   14000e26d:	call   0x14000b1b0
   14000e272:	xor    r9d,r9d
   14000e275:	mov    rbx,rax
   14000e278:	test   rax,rax
   14000e27b:	je     0x14000e409
   14000e281:	mov    rdx,QWORD PTR [rax+0xa0]
   14000e288:	mov    rcx,rdx
   14000e28b:	cmp    DWORD PTR [rcx],edi
   14000e28d:	je     0x14000e29f
   14000e28f:	lea    rax,[rdx+0xc0]
   14000e296:	add    rcx,0x10
   14000e29a:	cmp    rcx,rax
   14000e29d:	jb     0x14000e28b
   14000e29f:	lea    rax,[rdx+0xc0]
   14000e2a6:	cmp    rcx,rax
   14000e2a9:	jae    0x14000e2af
   14000e2ab:	cmp    DWORD PTR [rcx],edi
   14000e2ad:	je     0x14000e2b2
   14000e2af:	mov    rcx,r9
   14000e2b2:	test   rcx,rcx
   14000e2b5:	je     0x14000e409
   14000e2bb:	mov    r8,QWORD PTR [rcx+0x8]
   14000e2bf:	test   r8,r8
   14000e2c2:	je     0x14000e409
   14000e2c8:	cmp    r8,0x5
   14000e2cc:	jne    0x14000e2db
   14000e2ce:	mov    QWORD PTR [rcx+0x8],r9
   14000e2d2:	lea    eax,[r8-0x4]
   14000e2d6:	jmp    0x14000e40b
   14000e2db:	cmp    r8,0x1
   14000e2df:	jne    0x14000e2e9
   14000e2e1:	or     eax,0xffffffff
   14000e2e4:	jmp    0x14000e40b
   14000e2e9:	mov    rbp,QWORD PTR [rbx+0xa8]
   14000e2f0:	mov    QWORD PTR [rbx+0xa8],rsi
   14000e2f7:	cmp    DWORD PTR [rcx+0x4],0x8
   14000e2fb:	jne    0x14000e3f3
   14000e301:	mov    edx,0x30
   14000e306:	mov    rax,QWORD PTR [rbx+0xa0]
   14000e30d:	add    rdx,0x10
   14000e311:	mov    QWORD PTR [rdx+rax*1-0x8],r9
   14000e316:	cmp    rdx,0xc0
   14000e31d:	jl     0x14000e306
   14000e31f:	cmp    DWORD PTR [rcx],0xc000008e
   14000e325:	mov    edi,DWORD PTR [rbx+0xb0]
   14000e32b:	jne    0x14000e33c
   14000e32d:	mov    DWORD PTR [rbx+0xb0],0x83
   14000e337:	jmp    0x14000e3dd
   14000e33c:	cmp    DWORD PTR [rcx],0xc0000090
   14000e342:	jne    0x14000e353
   14000e344:	mov    DWORD PTR [rbx+0xb0],0x81
   14000e34e:	jmp    0x14000e3dd
   14000e353:	cmp    DWORD PTR [rcx],0xc0000091
   14000e359:	jne    0x14000e367
   14000e35b:	mov    DWORD PTR [rbx+0xb0],0x84
   14000e365:	jmp    0x14000e3dd
   14000e367:	cmp    DWORD PTR [rcx],0xc0000093
   14000e36d:	jne    0x14000e37b
   14000e36f:	mov    DWORD PTR [rbx+0xb0],0x85
   14000e379:	jmp    0x14000e3dd
   14000e37b:	cmp    DWORD PTR [rcx],0xc000008d
   14000e381:	jne    0x14000e38f
   14000e383:	mov    DWORD PTR [rbx+0xb0],0x82
   14000e38d:	jmp    0x14000e3dd
   14000e38f:	cmp    DWORD PTR [rcx],0xc000008f
   14000e395:	jne    0x14000e3a3
   14000e397:	mov    DWORD PTR [rbx+0xb0],0x86
   14000e3a1:	jmp    0x14000e3dd
   14000e3a3:	cmp    DWORD PTR [rcx],0xc0000092
   14000e3a9:	jne    0x14000e3b7
   14000e3ab:	mov    DWORD PTR [rbx+0xb0],0x8a
   14000e3b5:	jmp    0x14000e3dd
   14000e3b7:	cmp    DWORD PTR [rcx],0xc00002b5
   14000e3bd:	jne    0x14000e3cb
   14000e3bf:	mov    DWORD PTR [rbx+0xb0],0x8d
   14000e3c9:	jmp    0x14000e3dd
   14000e3cb:	cmp    DWORD PTR [rcx],0xc00002b4
   14000e3d1:	jne    0x14000e3dd
   14000e3d3:	mov    DWORD PTR [rbx+0xb0],0x8e
   14000e3dd:	mov    edx,DWORD PTR [rbx+0xb0]
   14000e3e3:	mov    ecx,0x8
   14000e3e8:	call   r8
   14000e3eb:	mov    DWORD PTR [rbx+0xb0],edi
   14000e3f1:	jmp    0x14000e3fd
   14000e3f3:	mov    QWORD PTR [rcx+0x8],r9
   14000e3f7:	mov    ecx,DWORD PTR [rcx+0x4]
   14000e3fa:	call   r8
   14000e3fd:	mov    QWORD PTR [rbx+0xa8],rbp
   14000e404:	jmp    0x14000e2e1
   14000e409:	xor    eax,eax
   14000e40b:	mov    rbx,QWORD PTR [rsp+0x30]
   14000e410:	mov    rbp,QWORD PTR [rsp+0x38]
   14000e415:	mov    rsi,QWORD PTR [rsp+0x40]
   14000e41a:	add    rsp,0x20
   14000e41e:	pop    rdi
   14000e41f:	ret    
   14000e420:	mov    eax,0xe06d7363
   14000e425:	cmp    ecx,eax
   14000e427:	jne    0x14000e430
   14000e429:	mov    ecx,eax
   14000e42b:	jmp    0x14000e254
   14000e430:	xor    eax,eax
   14000e432:	ret    
   14000e433:	int3   
   14000e434:	mov    r9d,ecx
   14000e437:	mov    rax,rdx
   14000e43a:	cmp    DWORD PTR [rax],ecx
   14000e43c:	je     0x14000e44e
   14000e43e:	lea    r8,[rdx+0xc0]
   14000e445:	add    rax,0x10
   14000e449:	cmp    rax,r8
   14000e44c:	jb     0x14000e43a
   14000e44e:	lea    rcx,[rdx+0xc0]
   14000e455:	cmp    rax,rcx
   14000e458:	jae    0x14000e45f
   14000e45a:	cmp    DWORD PTR [rax],r9d
   14000e45d:	je     0x14000e461
   14000e45f:	xor    eax,eax
   14000e461:	ret    
   14000e462:	int3   
   14000e463:	int3   
   14000e464:	mov    rax,rsp
   14000e467:	mov    QWORD PTR [rax+0x8],rbx
   14000e46b:	mov    QWORD PTR [rax+0x10],rsi
   14000e46f:	mov    QWORD PTR [rax+0x18],rdi
   14000e473:	mov    QWORD PTR [rax+0x20],r12
   14000e477:	push   r13
   14000e479:	push   r14
   14000e47b:	push   r15
   14000e47d:	sub    rsp,0xc0
   14000e484:	mov    QWORD PTR [rsp+0x48],rsp
   14000e489:	mov    ecx,0xb
   14000e48e:	call   0x140008760
   14000e493:	nop
   14000e494:	mov    edi,0x58
   14000e499:	mov    edx,edi
   14000e49b:	lea    r13d,[rdi-0x38]
   14000e49f:	mov    ecx,r13d
   14000e4a2:	call   0x140007ed4
   14000e4a7:	mov    rcx,rax
   14000e4aa:	mov    QWORD PTR [rsp+0x28],rax
   14000e4af:	xor    r12d,r12d
   14000e4b2:	test   rax,rax
   14000e4b5:	jne    0x14000e4d0
   14000e4b7:	lea    rdx,[rip+0xa]        # 0x14000e4c8
   14000e4be:	mov    rcx,rsp
   14000e4c1:	call   0x14000f840
   14000e4c6:	nop
   14000e4c7:	nop
   14000e4c8:	or     eax,0xffffffff
   14000e4cb:	jmp    0x14000e76f
   14000e4d0:	mov    QWORD PTR [rip+0x2a1b9],rax        # 0x140038690
   14000e4d7:	mov    DWORD PTR [rip+0x2bb66],r13d        # 0x14003a044
   14000e4de:	add    rax,0xb00
   14000e4e4:	cmp    rcx,rax
   14000e4e7:	jae    0x14000e522
   14000e4e9:	mov    WORD PTR [rcx+0x8],0xa00
   14000e4ef:	or     QWORD PTR [rcx],0xffffffffffffffff
   14000e4f3:	mov    DWORD PTR [rcx+0xc],r12d
   14000e4f7:	and    BYTE PTR [rcx+0x38],0x80
   14000e4fb:	mov    al,BYTE PTR [rcx+0x38]
   14000e4fe:	and    al,0x7f
   14000e500:	mov    BYTE PTR [rcx+0x38],al
   14000e503:	mov    WORD PTR [rcx+0x39],0xa0a
   14000e509:	mov    DWORD PTR [rcx+0x50],r12d
   14000e50d:	mov    BYTE PTR [rcx+0x4c],r12b
   14000e511:	add    rcx,rdi
   14000e514:	mov    QWORD PTR [rsp+0x28],rcx
   14000e519:	mov    rax,QWORD PTR [rip+0x2a170]        # 0x140038690
   14000e520:	jmp    0x14000e4de
   14000e522:	lea    rcx,[rsp+0x50]
   14000e527:	call   QWORD PTR [rip+0x18c6b]        # 0x140027198
   14000e52d:	cmp    WORD PTR [rsp+0x92],r12w
   14000e536:	je     0x14000e67e
   14000e53c:	mov    rax,QWORD PTR [rsp+0x98]
   14000e544:	test   rax,rax
   14000e547:	je     0x14000e67e
   14000e54d:	lea    r14,[rax+0x4]
   14000e551:	mov    QWORD PTR [rsp+0x38],r14
   14000e556:	movsxd rsi,DWORD PTR [rax]
   14000e559:	add    rsi,r14
   14000e55c:	mov    QWORD PTR [rsp+0x40],rsi
   14000e561:	mov    r15d,0x800
   14000e567:	cmp    DWORD PTR [rax],r15d
   14000e56a:	cmovl  r15d,DWORD PTR [rax]
   14000e56e:	mov    ebx,0x1
   14000e573:	mov    DWORD PTR [rsp+0x30],ebx
   14000e577:	cmp    DWORD PTR [rip+0x2bac6],r15d        # 0x14003a044
   14000e57e:	jge    0x14000e5f3
   14000e580:	mov    rdx,rdi
   14000e583:	mov    rcx,r13
   14000e586:	call   0x140007ed4
   14000e58b:	mov    rcx,rax
   14000e58e:	mov    QWORD PTR [rsp+0x28],rax
   14000e593:	test   rax,rax
   14000e596:	jne    0x14000e5a1
   14000e598:	mov    r15d,DWORD PTR [rip+0x2baa5]        # 0x14003a044
   14000e59f:	jmp    0x14000e5f3
   14000e5a1:	movsxd rdx,ebx
   14000e5a4:	lea    r8,[rip+0x2a0e5]        # 0x140038690
   14000e5ab:	mov    QWORD PTR [r8+rdx*8],rax
   14000e5af:	add    DWORD PTR [rip+0x2ba8e],r13d        # 0x14003a044
   14000e5b6:	mov    rax,QWORD PTR [r8+rdx*8]
   14000e5ba:	add    rax,0xb00
   14000e5c0:	cmp    rcx,rax
   14000e5c3:	jae    0x14000e5ef
   14000e5c5:	mov    WORD PTR [rcx+0x8],0xa00
   14000e5cb:	or     QWORD PTR [rcx],0xffffffffffffffff
   14000e5cf:	mov    DWORD PTR [rcx+0xc],r12d
   14000e5d3:	and    BYTE PTR [rcx+0x38],0x80
   14000e5d7:	mov    WORD PTR [rcx+0x39],0xa0a
   14000e5dd:	mov    DWORD PTR [rcx+0x50],r12d
   14000e5e1:	mov    BYTE PTR [rcx+0x4c],r12b
   14000e5e5:	add    rcx,rdi
   14000e5e8:	mov    QWORD PTR [rsp+0x28],rcx
   14000e5ed:	jmp    0x14000e5b6
   14000e5ef:	inc    ebx
   14000e5f1:	jmp    0x14000e573
   14000e5f3:	mov    edi,r12d
   14000e5f6:	mov    DWORD PTR [rsp+0x20],r12d
   14000e5fb:	lea    r13,[rip+0x2a08e]        # 0x140038690
   14000e602:	cmp    edi,r15d
   14000e605:	jge    0x14000e67e
   14000e607:	mov    rcx,QWORD PTR [rsi]
   14000e60a:	lea    rax,[rcx+0x2]
   14000e60e:	cmp    rax,0x1
   14000e612:	jbe    0x14000e665
   14000e614:	test   BYTE PTR [r14],0x1
   14000e618:	je     0x14000e665
   14000e61a:	test   BYTE PTR [r14],0x8
   14000e61e:	jne    0x14000e62a
   14000e620:	call   QWORD PTR [rip+0x18bfa]        # 0x140027220
   14000e626:	test   eax,eax
   14000e628:	je     0x14000e665
   14000e62a:	movsxd rcx,edi
   14000e62d:	mov    rax,rcx
   14000e630:	sar    rax,0x5
   14000e634:	and    ecx,0x1f
   14000e637:	imul   rbx,rcx,0x58
   14000e63b:	add    rbx,QWORD PTR [r13+rax*8+0x0]
   14000e640:	mov    QWORD PTR [rsp+0x28],rbx
   14000e645:	mov    rax,QWORD PTR [rsi]
   14000e648:	mov    QWORD PTR [rbx],rax
   14000e64b:	mov    al,BYTE PTR [r14]
   14000e64e:	mov    BYTE PTR [rbx+0x8],al
   14000e651:	lea    rcx,[rbx+0x10]
   14000e655:	xor    r8d,r8d
   14000e658:	mov    edx,0xfa0
   14000e65d:	call   0x140008d04
   14000e662:	inc    DWORD PTR [rbx+0xc]
   14000e665:	inc    edi
   14000e667:	mov    DWORD PTR [rsp+0x20],edi
   14000e66b:	inc    r14
   14000e66e:	mov    QWORD PTR [rsp+0x38],r14
   14000e673:	add    rsi,0x8
   14000e677:	mov    QWORD PTR [rsp+0x40],rsi
   14000e67c:	jmp    0x14000e602
   14000e67e:	mov    edi,r12d
   14000e681:	mov    DWORD PTR [rsp+0x20],r12d
   14000e686:	mov    r15,0xfffffffffffffffe
   14000e68d:	cmp    edi,0x3
   14000e690:	jge    0x14000e763
   14000e696:	movsxd rsi,edi
   14000e699:	imul   rbx,rsi,0x58
   14000e69d:	add    rbx,QWORD PTR [rip+0x29fec]        # 0x140038690
   14000e6a4:	mov    QWORD PTR [rsp+0x28],rbx
   14000e6a9:	mov    rax,QWORD PTR [rbx]
   14000e6ac:	add    rax,0x2
   14000e6b0:	cmp    rax,0x1
   14000e6b4:	jbe    0x14000e6c6
   14000e6b6:	movsx  eax,BYTE PTR [rbx+0x8]
   14000e6ba:	bts    eax,0x7
   14000e6be:	mov    BYTE PTR [rbx+0x8],al
   14000e6c1:	jmp    0x14000e758
   14000e6c6:	mov    BYTE PTR [rbx+0x8],0x81
   14000e6ca:	lea    eax,[rdi-0x1]
   14000e6cd:	neg    eax
   14000e6cf:	sbb    ecx,ecx
   14000e6d1:	add    ecx,0xfffffff5
   14000e6d4:	mov    eax,0xfffffff6
   14000e6d9:	test   edi,edi
   14000e6db:	cmove  ecx,eax
   14000e6de:	call   QWORD PTR [rip+0x18ad4]        # 0x1400271b8
   14000e6e4:	mov    r14,rax
   14000e6e7:	lea    rcx,[rax+0x1]
   14000e6eb:	cmp    rcx,0x1
   14000e6ef:	jbe    0x14000e737
   14000e6f1:	mov    rcx,rax
   14000e6f4:	call   QWORD PTR [rip+0x18b26]        # 0x140027220
   14000e6fa:	test   eax,eax
   14000e6fc:	je     0x14000e737
   14000e6fe:	mov    QWORD PTR [rbx],r14
   14000e701:	movzx  eax,al
   14000e704:	cmp    eax,0x2
   14000e707:	jne    0x14000e712
   14000e709:	movsx  eax,BYTE PTR [rbx+0x8]
   14000e70d:	or     eax,0x40
   14000e710:	jmp    0x14000e71e
   14000e712:	cmp    eax,0x3
   14000e715:	jne    0x14000e721
   14000e717:	movsx  eax,BYTE PTR [rbx+0x8]
   14000e71b:	or     eax,0x8
   14000e71e:	mov    BYTE PTR [rbx+0x8],al
   14000e721:	lea    rcx,[rbx+0x10]
   14000e725:	xor    r8d,r8d
   14000e728:	mov    edx,0xfa0
   14000e72d:	call   0x140008d04
   14000e732:	inc    DWORD PTR [rbx+0xc]
   14000e735:	jmp    0x14000e758
   14000e737:	movsx  eax,BYTE PTR [rbx+0x8]
   14000e73b:	or     eax,0x40
   14000e73e:	mov    BYTE PTR [rbx+0x8],al
   14000e741:	mov    QWORD PTR [rbx],r15
   14000e744:	mov    rax,QWORD PTR [rip+0x2a8e5]        # 0x140039030
   14000e74b:	test   rax,rax
   14000e74e:	je     0x14000e758
   14000e750:	mov    rax,QWORD PTR [rax+rsi*8]
   14000e754:	mov    DWORD PTR [rax+0x1c],r15d
   14000e758:	inc    edi
   14000e75a:	mov    DWORD PTR [rsp+0x20],edi
   14000e75e:	jmp    0x14000e68d
   14000e763:	mov    ecx,0xb
   14000e768:	call   0x14000897c
   14000e76d:	xor    eax,eax
   14000e76f:	lea    r11,[rsp+0xc0]
   14000e777:	mov    rbx,QWORD PTR [r11+0x20]
   14000e77b:	mov    rsi,QWORD PTR [r11+0x28]
   14000e77f:	mov    rdi,QWORD PTR [r11+0x30]
   14000e783:	mov    r12,QWORD PTR [r11+0x38]
   14000e787:	mov    rsp,r11
   14000e78a:	pop    r15
   14000e78c:	pop    r14
   14000e78e:	pop    r13
   14000e790:	ret    
   14000e791:	int3   
   14000e792:	int3   
   14000e793:	int3   
   14000e794:	mov    QWORD PTR [rsp+0x8],rbx
   14000e799:	mov    QWORD PTR [rsp+0x10],rsi
   14000e79e:	push   rdi
   14000e79f:	sub    rsp,0x20
   14000e7a3:	lea    rdi,[rip+0x29ee6]        # 0x140038690
   14000e7aa:	mov    esi,0x40
   14000e7af:	mov    rbx,QWORD PTR [rdi]
   14000e7b2:	test   rbx,rbx
   14000e7b5:	je     0x14000e7ee
   14000e7b7:	lea    rax,[rbx+0xb00]
   14000e7be:	jmp    0x14000e7dd
   14000e7c0:	cmp    DWORD PTR [rbx+0xc],0x0
   14000e7c4:	je     0x14000e7d0
   14000e7c6:	lea    rcx,[rbx+0x10]
   14000e7ca:	call   QWORD PTR [rip+0x18948]        # 0x140027118
   14000e7d0:	mov    rax,QWORD PTR [rdi]
   14000e7d3:	add    rbx,0x58
   14000e7d7:	add    rax,0xb00
   14000e7dd:	cmp    rbx,rax
   14000e7e0:	jb     0x14000e7c0
   14000e7e2:	mov    rcx,QWORD PTR [rdi]
   14000e7e5:	call   0x140006444
   14000e7ea:	and    QWORD PTR [rdi],0x0
   14000e7ee:	add    rdi,0x8
   14000e7f2:	dec    rsi
   14000e7f5:	jne    0x14000e7af
   14000e7f7:	mov    rbx,QWORD PTR [rsp+0x30]
   14000e7fc:	mov    rsi,QWORD PTR [rsp+0x38]
   14000e801:	add    rsp,0x20
   14000e805:	pop    rdi
   14000e806:	ret    
   14000e807:	int3   
   14000e808:	mov    QWORD PTR [rip+0x29511],rcx        # 0x140037d20
   14000e80f:	ret    
   14000e810:	mov    QWORD PTR [rsp+0x18],rbx
   14000e815:	mov    QWORD PTR [rsp+0x20],rsi
   14000e81a:	push   rdi
   14000e81b:	sub    rsp,0x30
   14000e81f:	cmp    DWORD PTR [rip+0x2b962],0x0        # 0x14003a188
   14000e826:	jne    0x14000e82d
   14000e828:	call   0x140009fd8
   14000e82d:	lea    rdi,[rip+0x2a05c]        # 0x140038890
   14000e834:	mov    r8d,0x104
   14000e83a:	xor    ecx,ecx
   14000e83c:	mov    rdx,rdi
   14000e83f:	mov    BYTE PTR [rip+0x2a14e],0x0        # 0x140038994
   14000e846:	call   QWORD PTR [rip+0x189dc]        # 0x140027228
   14000e84c:	mov    rbx,QWORD PTR [rip+0x2b915]        # 0x14003a168
   14000e853:	mov    QWORD PTR [rip+0x294c6],rdi        # 0x140037d20
   14000e85a:	test   rbx,rbx
   14000e85d:	je     0x14000e864
   14000e85f:	cmp    BYTE PTR [rbx],0x0
   14000e862:	jne    0x14000e867
   14000e864:	mov    rbx,rdi
   14000e867:	lea    rax,[rsp+0x48]
   14000e86c:	lea    r9,[rsp+0x40]
   14000e871:	xor    r8d,r8d
   14000e874:	xor    edx,edx
   14000e876:	mov    rcx,rbx
   14000e879:	mov    QWORD PTR [rsp+0x20],rax
   14000e87e:	call   0x14000e904
   14000e883:	movsxd rsi,DWORD PTR [rsp+0x40]
   14000e888:	movabs rcx,0x1fffffffffffffff
   14000e892:	cmp    rsi,rcx
   14000e895:	jae    0x14000e8f0
   14000e897:	movsxd rcx,DWORD PTR [rsp+0x48]
   14000e89c:	cmp    rcx,0xffffffffffffffff
   14000e8a0:	jae    0x14000e8f0
   14000e8a2:	lea    rdx,[rcx+rsi*8]
   14000e8a6:	cmp    rdx,rcx
   14000e8a9:	jb     0x14000e8f0
   14000e8ab:	mov    rcx,rdx
   14000e8ae:	call   0x140007f54
   14000e8b3:	mov    rdi,rax
   14000e8b6:	test   rax,rax
   14000e8b9:	je     0x14000e8f0
   14000e8bb:	lea    r8,[rax+rsi*8]
   14000e8bf:	lea    rax,[rsp+0x48]
   14000e8c4:	lea    r9,[rsp+0x40]
   14000e8c9:	mov    rdx,rdi
   14000e8cc:	mov    rcx,rbx
   14000e8cf:	mov    QWORD PTR [rsp+0x20],rax
   14000e8d4:	call   0x14000e904
   14000e8d9:	mov    eax,DWORD PTR [rsp+0x40]
   14000e8dd:	mov    QWORD PTR [rip+0x2941c],rdi        # 0x140037d00
   14000e8e4:	dec    eax
   14000e8e6:	mov    DWORD PTR [rip+0x29410],eax        # 0x140037cfc
   14000e8ec:	xor    eax,eax
   14000e8ee:	jmp    0x14000e8f3
   14000e8f0:	or     eax,0xffffffff
   14000e8f3:	mov    rbx,QWORD PTR [rsp+0x50]
   14000e8f8:	mov    rsi,QWORD PTR [rsp+0x58]
   14000e8fd:	add    rsp,0x30
   14000e901:	pop    rdi
   14000e902:	ret    
   14000e903:	int3   
   14000e904:	mov    rax,rsp
   14000e907:	mov    QWORD PTR [rax+0x8],rbx
   14000e90b:	mov    QWORD PTR [rax+0x10],rbp
   14000e90f:	mov    QWORD PTR [rax+0x18],rsi
   14000e913:	mov    QWORD PTR [rax+0x20],rdi
   14000e917:	push   r12
   14000e919:	push   r14
   14000e91b:	push   r15
   14000e91d:	sub    rsp,0x20
   14000e921:	mov    r14,QWORD PTR [rsp+0x60]
   14000e926:	mov    r12,r9
   14000e929:	mov    rdi,r8
   14000e92c:	and    DWORD PTR [r14],0x0
   14000e930:	mov    r15,rdx
   14000e933:	mov    rbx,rcx
   14000e936:	mov    DWORD PTR [r9],0x1
   14000e93d:	test   rdx,rdx
   14000e940:	je     0x14000e949
   14000e942:	mov    QWORD PTR [rdx],r8
   14000e945:	add    r15,0x8
   14000e949:	xor    ebp,ebp
   14000e94b:	cmp    BYTE PTR [rbx],0x22
   14000e94e:	jne    0x14000e961
   14000e950:	xor    eax,eax
   14000e952:	test   ebp,ebp
   14000e954:	mov    sil,0x22
   14000e957:	sete   al
   14000e95a:	inc    rbx
   14000e95d:	mov    ebp,eax
   14000e95f:	jmp    0x14000e998
   14000e961:	inc    DWORD PTR [r14]
   14000e964:	test   rdi,rdi
   14000e967:	je     0x14000e970
   14000e969:	mov    al,BYTE PTR [rbx]
   14000e96b:	mov    BYTE PTR [rdi],al
   14000e96d:	inc    rdi
   14000e970:	movzx  esi,BYTE PTR [rbx]
   14000e973:	inc    rbx
   14000e976:	mov    ecx,esi
   14000e978:	call   0x140019c94
   14000e97d:	test   eax,eax
   14000e97f:	je     0x14000e993
   14000e981:	inc    DWORD PTR [r14]
   14000e984:	test   rdi,rdi
   14000e987:	je     0x14000e990
   14000e989:	mov    al,BYTE PTR [rbx]
   14000e98b:	mov    BYTE PTR [rdi],al
   14000e98d:	inc    rdi
   14000e990:	inc    rbx
   14000e993:	test   sil,sil
   14000e996:	je     0x14000e9b3
   14000e998:	test   ebp,ebp
   14000e99a:	jne    0x14000e94b
   14000e99c:	cmp    sil,0x20
   14000e9a0:	je     0x14000e9a8
   14000e9a2:	cmp    sil,0x9
   14000e9a6:	jne    0x14000e94b
   14000e9a8:	test   rdi,rdi
   14000e9ab:	je     0x14000e9b6
   14000e9ad:	mov    BYTE PTR [rdi-0x1],0x0
   14000e9b1:	jmp    0x14000e9b6
   14000e9b3:	dec    rbx
   14000e9b6:	xor    esi,esi
   14000e9b8:	cmp    BYTE PTR [rbx],0x0
   14000e9bb:	je     0x14000ea9f
   14000e9c1:	cmp    BYTE PTR [rbx],0x20
   14000e9c4:	je     0x14000e9cb
   14000e9c6:	cmp    BYTE PTR [rbx],0x9
   14000e9c9:	jne    0x14000e9d0
   14000e9cb:	inc    rbx
   14000e9ce:	jmp    0x14000e9c1
   14000e9d0:	cmp    BYTE PTR [rbx],0x0
   14000e9d3:	je     0x14000ea9f
   14000e9d9:	test   r15,r15
   14000e9dc:	je     0x14000e9e5
   14000e9de:	mov    QWORD PTR [r15],rdi
   14000e9e1:	add    r15,0x8
   14000e9e5:	inc    DWORD PTR [r12]
   14000e9e9:	mov    edx,0x1
   14000e9ee:	xor    ecx,ecx
   14000e9f0:	jmp    0x14000e9f7
   14000e9f2:	inc    rbx
   14000e9f5:	inc    ecx
   14000e9f7:	cmp    BYTE PTR [rbx],0x5c
   14000e9fa:	je     0x14000e9f2
   14000e9fc:	cmp    BYTE PTR [rbx],0x22
   14000e9ff:	jne    0x14000ea36
   14000ea01:	test   dl,cl
   14000ea03:	jne    0x14000ea22
   14000ea05:	test   esi,esi
   14000ea07:	je     0x14000ea17
   14000ea09:	lea    rax,[rbx+0x1]
   14000ea0d:	cmp    BYTE PTR [rax],0x22
   14000ea10:	jne    0x14000ea17
   14000ea12:	mov    rbx,rax
   14000ea15:	jmp    0x14000ea22
   14000ea17:	xor    eax,eax
   14000ea19:	xor    edx,edx
   14000ea1b:	test   esi,esi
   14000ea1d:	sete   al
   14000ea20:	mov    esi,eax
   14000ea22:	shr    ecx,1
   14000ea24:	jmp    0x14000ea36
   14000ea26:	dec    ecx
   14000ea28:	test   rdi,rdi
   14000ea2b:	je     0x14000ea33
   14000ea2d:	mov    BYTE PTR [rdi],0x5c
   14000ea30:	inc    rdi
   14000ea33:	inc    DWORD PTR [r14]
   14000ea36:	test   ecx,ecx
   14000ea38:	jne    0x14000ea26
   14000ea3a:	mov    al,BYTE PTR [rbx]
   14000ea3c:	test   al,al
   14000ea3e:	je     0x14000ea8c
   14000ea40:	test   esi,esi
   14000ea42:	jne    0x14000ea4c
   14000ea44:	cmp    al,0x20
   14000ea46:	je     0x14000ea8c
   14000ea48:	cmp    al,0x9
   14000ea4a:	je     0x14000ea8c
   14000ea4c:	test   edx,edx
   14000ea4e:	je     0x14000ea84
   14000ea50:	movsx  ecx,al
   14000ea53:	call   0x140019c94
   14000ea58:	test   rdi,rdi
   14000ea5b:	je     0x14000ea77
   14000ea5d:	test   eax,eax
   14000ea5f:	je     0x14000ea6e
   14000ea61:	mov    al,BYTE PTR [rbx]
   14000ea63:	inc    rbx
   14000ea66:	mov    BYTE PTR [rdi],al
   14000ea68:	inc    rdi
   14000ea6b:	inc    DWORD PTR [r14]
   14000ea6e:	mov    al,BYTE PTR [rbx]
   14000ea70:	mov    BYTE PTR [rdi],al
   14000ea72:	inc    rdi
   14000ea75:	jmp    0x14000ea81
   14000ea77:	test   eax,eax
   14000ea79:	je     0x14000ea81
   14000ea7b:	inc    rbx
   14000ea7e:	inc    DWORD PTR [r14]
   14000ea81:	inc    DWORD PTR [r14]
   14000ea84:	inc    rbx
   14000ea87:	jmp    0x14000e9e9
   14000ea8c:	test   rdi,rdi
   14000ea8f:	je     0x14000ea97
   14000ea91:	mov    BYTE PTR [rdi],0x0
   14000ea94:	inc    rdi
   14000ea97:	inc    DWORD PTR [r14]
   14000ea9a:	jmp    0x14000e9b8
   14000ea9f:	test   r15,r15
   14000eaa2:	je     0x14000eaa8
   14000eaa4:	and    QWORD PTR [r15],0x0
   14000eaa8:	inc    DWORD PTR [r12]
   14000eaac:	mov    rbx,QWORD PTR [rsp+0x40]
   14000eab1:	mov    rbp,QWORD PTR [rsp+0x48]
   14000eab6:	mov    rsi,QWORD PTR [rsp+0x50]
   14000eabb:	mov    rdi,QWORD PTR [rsp+0x58]
   14000eac0:	add    rsp,0x20
   14000eac4:	pop    r15
   14000eac6:	pop    r14
   14000eac8:	pop    r12
   14000eaca:	ret    
   14000eacb:	int3   
   14000eacc:	mov    QWORD PTR [rsp+0x8],rbx
   14000ead1:	mov    QWORD PTR [rsp+0x10],rbp
   14000ead6:	mov    QWORD PTR [rsp+0x18],rsi
   14000eadb:	push   rdi
   14000eadc:	sub    rsp,0x30
   14000eae0:	cmp    DWORD PTR [rip+0x2b6a1],0x0        # 0x14003a188
   14000eae7:	jne    0x14000eaee
   14000eae9:	call   0x140009fd8
   14000eaee:	mov    rbx,QWORD PTR [rip+0x29263]        # 0x140037d58
   14000eaf5:	xor    edi,edi
   14000eaf7:	test   rbx,rbx
   14000eafa:	jne    0x14000eb18
   14000eafc:	or     eax,0xffffffff
   14000eaff:	jmp    0x14000ebb9
   14000eb04:	cmp    al,0x3d
   14000eb06:	je     0x14000eb0a
   14000eb08:	inc    edi
   14000eb0a:	mov    rcx,rbx
   14000eb0d:	call   0x140007730
   14000eb12:	inc    rbx
   14000eb15:	add    rbx,rax
   14000eb18:	mov    al,BYTE PTR [rbx]
   14000eb1a:	test   al,al
   14000eb1c:	jne    0x14000eb04
   14000eb1e:	lea    eax,[rdi+0x1]
   14000eb21:	mov    edx,0x8
   14000eb26:	movsxd rcx,eax
   14000eb29:	call   0x140007ed4
   14000eb2e:	mov    rdi,rax
   14000eb31:	mov    QWORD PTR [rip+0x291d8],rax        # 0x140037d10
   14000eb38:	test   rax,rax
   14000eb3b:	je     0x14000eafc
   14000eb3d:	mov    rbx,QWORD PTR [rip+0x29214]        # 0x140037d58
   14000eb44:	cmp    BYTE PTR [rbx],0x0
   14000eb47:	je     0x14000eb99
   14000eb49:	mov    rcx,rbx
   14000eb4c:	call   0x140007730
   14000eb51:	cmp    BYTE PTR [rbx],0x3d
   14000eb54:	lea    esi,[rax+0x1]
   14000eb57:	je     0x14000eb87
   14000eb59:	movsxd rbp,esi
   14000eb5c:	mov    edx,0x1
   14000eb61:	mov    rcx,rbp
   14000eb64:	call   0x140007ed4
   14000eb69:	mov    QWORD PTR [rdi],rax
   14000eb6c:	test   rax,rax
   14000eb6f:	je     0x14000ebce
   14000eb71:	mov    r8,rbx
   14000eb74:	mov    rdx,rbp
   14000eb77:	mov    rcx,rax
   14000eb7a:	call   0x14000ee64
   14000eb7f:	test   eax,eax
   14000eb81:	jne    0x14000ebe7
   14000eb83:	add    rdi,0x8
   14000eb87:	movsxd rax,esi
   14000eb8a:	add    rbx,rax
   14000eb8d:	cmp    BYTE PTR [rbx],0x0
   14000eb90:	jne    0x14000eb49
   14000eb92:	mov    rbx,QWORD PTR [rip+0x291bf]        # 0x140037d58
   14000eb99:	mov    rcx,rbx
   14000eb9c:	call   0x140006444
   14000eba1:	and    QWORD PTR [rip+0x291af],0x0        # 0x140037d58
   14000eba9:	and    QWORD PTR [rdi],0x0
   14000ebad:	mov    DWORD PTR [rip+0x2b5d5],0x1        # 0x14003a18c
   14000ebb7:	xor    eax,eax
   14000ebb9:	mov    rbx,QWORD PTR [rsp+0x40]
   14000ebbe:	mov    rbp,QWORD PTR [rsp+0x48]
   14000ebc3:	mov    rsi,QWORD PTR [rsp+0x50]
   14000ebc8:	add    rsp,0x30
   14000ebcc:	pop    rdi
   14000ebcd:	ret    
   14000ebce:	mov    rcx,QWORD PTR [rip+0x2913b]        # 0x140037d10
   14000ebd5:	call   0x140006444
   14000ebda:	and    QWORD PTR [rip+0x2912e],0x0        # 0x140037d10
   14000ebe2:	jmp    0x14000eafc
   14000ebe7:	and    QWORD PTR [rsp+0x20],0x0
   14000ebed:	xor    r9d,r9d
   14000ebf0:	xor    r8d,r8d
   14000ebf3:	xor    edx,edx
   14000ebf5:	xor    ecx,ecx
   14000ebf7:	call   0x140008678
   14000ebfc:	int3   
   14000ebfd:	int3   
   14000ebfe:	int3   
   14000ebff:	int3   
   14000ec00:	mov    DWORD PTR [rip+0x293ba],ecx        # 0x140037fc0
   14000ec06:	ret    
   14000ec07:	int3   
   14000ec08:	sub    rsp,0x28
   14000ec0c:	test   ecx,ecx
   14000ec0e:	js     0x14000ec30
   14000ec10:	cmp    ecx,0x2
   14000ec13:	jle    0x14000ec22
   14000ec15:	cmp    ecx,0x3
   14000ec18:	jne    0x14000ec30
   14000ec1a:	mov    eax,DWORD PTR [rip+0x29d78]        # 0x140038998
   14000ec20:	jmp    0x14000ec43
   14000ec22:	mov    eax,DWORD PTR [rip+0x29d70]        # 0x140038998
   14000ec28:	mov    DWORD PTR [rip+0x29d6a],ecx        # 0x140038998
   14000ec2e:	jmp    0x14000ec43
   14000ec30:	call   0x1400095b8
   14000ec35:	mov    DWORD PTR [rax],0x16
   14000ec3b:	call   0x140008628
   14000ec40:	or     eax,0xffffffff
   14000ec43:	add    rsp,0x28
   14000ec47:	ret    
   14000ec48:	mov    QWORD PTR [rsp+0x20],rbx
   14000ec4d:	push   rbp
   14000ec4e:	mov    rbp,rsp
   14000ec51:	sub    rsp,0x20
   14000ec55:	mov    rax,QWORD PTR [rip+0x27de4]        # 0x140036a40
   14000ec5c:	and    QWORD PTR [rbp+0x18],0x0
   14000ec61:	movabs rbx,0x2b992ddfa232
   14000ec6b:	cmp    rax,rbx
   14000ec6e:	jne    0x14000ecdf
   14000ec70:	lea    rcx,[rbp+0x18]
   14000ec74:	call   QWORD PTR [rip+0x185c6]        # 0x140027240
   14000ec7a:	mov    rax,QWORD PTR [rbp+0x18]
   14000ec7e:	mov    QWORD PTR [rbp+0x10],rax
   14000ec82:	call   QWORD PTR [rip+0x18590]        # 0x140027218
   14000ec88:	mov    eax,eax
   14000ec8a:	xor    QWORD PTR [rbp+0x10],rax
   14000ec8e:	call   QWORD PTR [rip+0x185a4]        # 0x140027238
   14000ec94:	lea    rcx,[rbp+0x20]
   14000ec98:	mov    eax,eax
   14000ec9a:	xor    QWORD PTR [rbp+0x10],rax
   14000ec9e:	call   QWORD PTR [rip+0x1858c]        # 0x140027230
   14000eca4:	mov    eax,DWORD PTR [rbp+0x20]
   14000eca7:	shl    rax,0x20
   14000ecab:	lea    rcx,[rbp+0x10]
   14000ecaf:	xor    rax,QWORD PTR [rbp+0x20]
   14000ecb3:	xor    rax,QWORD PTR [rbp+0x10]
   14000ecb7:	xor    rax,rcx
   14000ecba:	movabs rcx,0xffffffffffff
   14000ecc4:	and    rax,rcx
   14000ecc7:	movabs rcx,0x2b992ddfa233
   14000ecd1:	cmp    rax,rbx
   14000ecd4:	cmove  rax,rcx
   14000ecd8:	mov    QWORD PTR [rip+0x27d61],rax        # 0x140036a40
   14000ecdf:	mov    rbx,QWORD PTR [rsp+0x48]
   14000ece4:	not    rax
   14000ece7:	mov    QWORD PTR [rip+0x27d5a],rax        # 0x140036a48
   14000ecee:	add    rsp,0x20
   14000ecf2:	pop    rbp
   14000ecf3:	ret    
   14000ecf4:	mov    rax,rsp
   14000ecf7:	mov    QWORD PTR [rax+0x8],rbx
   14000ecfb:	mov    QWORD PTR [rax+0x10],rbp
   14000ecff:	mov    QWORD PTR [rax+0x18],rsi
   14000ed03:	mov    QWORD PTR [rax+0x20],rdi
   14000ed07:	push   r14
   14000ed09:	sub    rsp,0x40
   14000ed0d:	call   QWORD PTR [rip+0x18535]        # 0x140027248
   14000ed13:	xor    r14d,r14d
   14000ed16:	mov    rdi,rax
   14000ed19:	test   rax,rax
   14000ed1c:	je     0x14000edcb
   14000ed22:	mov    rbx,rax
   14000ed25:	cmp    WORD PTR [rax],r14w
   14000ed29:	je     0x14000ed3f
   14000ed2b:	add    rbx,0x2
   14000ed2f:	cmp    WORD PTR [rbx],r14w
   14000ed33:	jne    0x14000ed2b
   14000ed35:	add    rbx,0x2
   14000ed39:	cmp    WORD PTR [rbx],r14w
   14000ed3d:	jne    0x14000ed2b
   14000ed3f:	mov    QWORD PTR [rsp+0x38],r14
   14000ed44:	sub    rbx,rax
   14000ed47:	mov    QWORD PTR [rsp+0x30],r14
   14000ed4c:	sar    rbx,1
   14000ed4f:	mov    r8,rax
   14000ed52:	xor    edx,edx
   14000ed54:	lea    r9d,[rbx+0x1]
   14000ed58:	xor    ecx,ecx
   14000ed5a:	mov    DWORD PTR [rsp+0x28],r14d
   14000ed5f:	mov    QWORD PTR [rsp+0x20],r14
   14000ed64:	call   QWORD PTR [rip+0x18346]        # 0x1400270b0
   14000ed6a:	movsxd rbp,eax
   14000ed6d:	test   eax,eax
   14000ed6f:	je     0x14000edc2
   14000ed71:	mov    rcx,rbp
   14000ed74:	call   0x140007f54
   14000ed79:	mov    rsi,rax
   14000ed7c:	test   rax,rax
   14000ed7f:	je     0x14000edc2
   14000ed81:	mov    QWORD PTR [rsp+0x38],r14
   14000ed86:	mov    QWORD PTR [rsp+0x30],r14
   14000ed8b:	lea    r9d,[rbx+0x1]
   14000ed8f:	mov    r8,rdi
   14000ed92:	xor    edx,edx
   14000ed94:	xor    ecx,ecx
   14000ed96:	mov    DWORD PTR [rsp+0x28],ebp
   14000ed9a:	mov    QWORD PTR [rsp+0x20],rax
   14000ed9f:	call   QWORD PTR [rip+0x1830b]        # 0x1400270b0
   14000eda5:	test   eax,eax
   14000eda7:	jne    0x14000edb4
   14000eda9:	mov    rcx,rsi
   14000edac:	call   0x140006444
   14000edb1:	mov    rsi,r14
   14000edb4:	mov    rcx,rdi
   14000edb7:	call   QWORD PTR [rip+0x18493]        # 0x140027250
   14000edbd:	mov    rax,rsi
   14000edc0:	jmp    0x14000edcd
   14000edc2:	mov    rcx,rdi
   14000edc5:	call   QWORD PTR [rip+0x18485]        # 0x140027250
   14000edcb:	xor    eax,eax
   14000edcd:	mov    rbx,QWORD PTR [rsp+0x50]
   14000edd2:	mov    rbp,QWORD PTR [rsp+0x58]
   14000edd7:	mov    rsi,QWORD PTR [rsp+0x60]
   14000eddc:	mov    rdi,QWORD PTR [rsp+0x68]
   14000ede1:	add    rsp,0x40
   14000ede5:	pop    r14
   14000ede7:	ret    
   14000ede8:	mov    QWORD PTR [rsp+0x8],rbx
   14000eded:	push   rdi
   14000edee:	sub    rsp,0x20
   14000edf2:	xor    edi,edi
   14000edf4:	cmp    DWORD PTR [rip+0x2b38e],edi        # 0x14003a188
   14000edfa:	jne    0x14000ee01
   14000edfc:	call   0x140009fd8
   14000ee01:	mov    rbx,QWORD PTR [rip+0x2b360]        # 0x14003a168
   14000ee08:	lea    rax,[rip+0x1bc41]        # 0x14002aa50
   14000ee0f:	test   rbx,rbx
   14000ee12:	cmove  rbx,rax
   14000ee16:	cmp    BYTE PTR [rbx],0x20
   14000ee19:	ja     0x14000ee24
   14000ee1b:	cmp    BYTE PTR [rbx],0x0
   14000ee1e:	je     0x14000ee53
   14000ee20:	test   edi,edi
   14000ee22:	je     0x14000ee4d
   14000ee24:	cmp    BYTE PTR [rbx],0x22
   14000ee27:	jne    0x14000ee32
   14000ee29:	xor    eax,eax
   14000ee2b:	test   edi,edi
   14000ee2d:	sete   al
   14000ee30:	mov    edi,eax
   14000ee32:	movzx  ecx,BYTE PTR [rbx]
   14000ee35:	call   0x140019c94
   14000ee3a:	test   eax,eax
   14000ee3c:	je     0x14000ee41
   14000ee3e:	inc    rbx
   14000ee41:	inc    rbx
   14000ee44:	jmp    0x14000ee16
   14000ee46:	cmp    al,0x20
   14000ee48:	ja     0x14000ee53
   14000ee4a:	inc    rbx
   14000ee4d:	mov    al,BYTE PTR [rbx]
   14000ee4f:	test   al,al
   14000ee51:	jne    0x14000ee46
   14000ee53:	mov    rax,rbx
   14000ee56:	mov    rbx,QWORD PTR [rsp+0x30]
   14000ee5b:	add    rsp,0x20
   14000ee5f:	pop    rdi
   14000ee60:	ret    
   14000ee61:	int3   
   14000ee62:	int3   
   14000ee63:	int3   
   14000ee64:	rex push rbx
   14000ee66:	sub    rsp,0x20
   14000ee6a:	test   rcx,rcx
   14000ee6d:	je     0x14000ee7c
   14000ee6f:	test   rdx,rdx
   14000ee72:	je     0x14000ee7c
   14000ee74:	test   r8,r8
   14000ee77:	jne    0x14000ee95
   14000ee79:	mov    BYTE PTR [rcx],r8b
   14000ee7c:	call   0x1400095b8
   14000ee81:	mov    ebx,0x16
   14000ee86:	mov    DWORD PTR [rax],ebx
   14000ee88:	call   0x140008628
   14000ee8d:	mov    eax,ebx
   14000ee8f:	add    rsp,0x20
   14000ee93:	pop    rbx
   14000ee94:	ret    
   14000ee95:	mov    r9,rcx
   14000ee98:	sub    r9,r8
   14000ee9b:	mov    al,BYTE PTR [r8]
   14000ee9e:	mov    BYTE PTR [r9+r8*1],al
   14000eea2:	inc    r8
   14000eea5:	test   al,al
   14000eea7:	je     0x14000eeae
   14000eea9:	dec    rdx
   14000eeac:	jne    0x14000ee9b
   14000eeae:	test   rdx,rdx
   14000eeb1:	jne    0x14000eec1
   14000eeb3:	mov    BYTE PTR [rcx],dl
   14000eeb5:	call   0x1400095b8
   14000eeba:	mov    ebx,0x22
   14000eebf:	jmp    0x14000ee86
   14000eec1:	xor    eax,eax
   14000eec3:	jmp    0x14000ee8f
   14000eec5:	int3   
   14000eec6:	int3   
   14000eec7:	int3   
   14000eec8:	rex push rbx
   14000eeca:	sub    rsp,0x20
   14000eece:	xor    ebx,ebx
   14000eed0:	test   r9,r9
   14000eed3:	jne    0x14000eee3
   14000eed5:	test   rcx,rcx
   14000eed8:	jne    0x14000eee8
   14000eeda:	test   rdx,rdx
   14000eedd:	jne    0x14000eefd
   14000eedf:	xor    eax,eax
   14000eee1:	jmp    0x14000ef10
   14000eee3:	test   rcx,rcx
   14000eee6:	je     0x14000eefd
   14000eee8:	test   rdx,rdx
   14000eeeb:	je     0x14000eefd
   14000eeed:	test   r9,r9
   14000eef0:	jne    0x14000eef6
   14000eef2:	mov    BYTE PTR [rcx],bl
   14000eef4:	jmp    0x14000eedf
   14000eef6:	test   r8,r8
   14000eef9:	jne    0x14000ef16
   14000eefb:	mov    BYTE PTR [rcx],bl
   14000eefd:	call   0x1400095b8
   14000ef02:	mov    ebx,0x16
   14000ef07:	mov    DWORD PTR [rax],ebx
   14000ef09:	call   0x140008628
   14000ef0e:	mov    eax,ebx
   14000ef10:	add    rsp,0x20
   14000ef14:	pop    rbx
   14000ef15:	ret    
   14000ef16:	mov    r11,rcx
   14000ef19:	mov    r10,rdx
   14000ef1c:	cmp    r9,0xffffffffffffffff
   14000ef20:	jne    0x14000ef3a
   14000ef22:	sub    r11,r8
   14000ef25:	mov    al,BYTE PTR [r8]
   14000ef28:	mov    BYTE PTR [r11+r8*1],al
   14000ef2c:	inc    r8
   14000ef2f:	test   al,al
   14000ef31:	je     0x14000ef5d
   14000ef33:	dec    r10
   14000ef36:	jne    0x14000ef25
   14000ef38:	jmp    0x14000ef5d
   14000ef3a:	sub    r8,rcx
   14000ef3d:	mov    al,BYTE PTR [r8+r11*1]
   14000ef41:	mov    BYTE PTR [r11],al
   14000ef44:	inc    r11
   14000ef47:	test   al,al
   14000ef49:	je     0x14000ef55
   14000ef4b:	dec    r10
   14000ef4e:	je     0x14000ef55
   14000ef50:	dec    r9
   14000ef53:	jne    0x14000ef3d
   14000ef55:	test   r9,r9
   14000ef58:	jne    0x14000ef5d
   14000ef5a:	mov    BYTE PTR [r11],bl
   14000ef5d:	test   r10,r10
   14000ef60:	jne    0x14000eedf
   14000ef66:	cmp    r9,0xffffffffffffffff
   14000ef6a:	jne    0x14000ef76
   14000ef6c:	mov    BYTE PTR [rcx+rdx*1-0x1],bl
   14000ef70:	lea    eax,[r10+0x50]
   14000ef74:	jmp    0x14000ef10
   14000ef76:	mov    BYTE PTR [rcx],bl
   14000ef78:	call   0x1400095b8
   14000ef7d:	mov    ebx,0x22
   14000ef82:	jmp    0x14000ef07
   14000ef84:	rex push rbp
   14000ef86:	push   r12
   14000ef88:	push   r13
   14000ef8a:	push   r14
   14000ef8c:	push   r15
   14000ef8e:	sub    rsp,0x50
   14000ef92:	lea    rbp,[rsp+0x40]
   14000ef97:	mov    QWORD PTR [rbp+0x40],rbx
   14000ef9b:	mov    QWORD PTR [rbp+0x48],rsi
   14000ef9f:	mov    QWORD PTR [rbp+0x50],rdi
   14000efa3:	mov    rax,QWORD PTR [rip+0x27a96]        # 0x140036a40
   14000efaa:	xor    rax,rbp
   14000efad:	mov    QWORD PTR [rbp+0x0],rax
   14000efb1:	mov    rax,QWORD PTR [rcx]
   14000efb4:	mov    r15d,r8d
   14000efb7:	mov    r12,rdx
   14000efba:	mov    r14d,DWORD PTR [rax+0x4]
   14000efbe:	mov    r13,r9
   14000efc1:	xor    r8d,r8d
   14000efc4:	xor    r9d,r9d
   14000efc7:	mov    edx,r15d
   14000efca:	mov    rcx,r12
   14000efcd:	xor    edi,edi
   14000efcf:	call   0x14000f4a8
   14000efd4:	movsxd rsi,eax
   14000efd7:	test   eax,eax
   14000efd9:	jne    0x14000efe2
   14000efdb:	xor    eax,eax
   14000efdd:	jmp    0x14000f0c8
   14000efe2:	jle    0x14000f05b
   14000efe4:	xor    edx,edx
   14000efe6:	lea    rax,[rdx-0x20]
   14000efea:	div    rsi
   14000efed:	cmp    rax,0x2
   14000eff1:	jb     0x14000f05b
   14000eff3:	lea    rcx,[rsi+rsi*1]
   14000eff7:	lea    rax,[rcx+0x10]
   14000effb:	cmp    rax,rcx
   14000effe:	jbe    0x14000f05b
   14000f000:	lea    rcx,[rsi*2+0x10]
   14000f008:	cmp    rcx,0x400
   14000f00f:	ja     0x14000f042
   14000f011:	lea    rax,[rcx+0xf]
   14000f015:	cmp    rax,rcx
   14000f018:	ja     0x14000f024
   14000f01a:	movabs rax,0xffffffffffffff0
   14000f024:	and    rax,0xfffffffffffffff0
   14000f028:	call   0x140019d60
   14000f02d:	sub    rsp,rax
   14000f030:	lea    rbx,[rsp+0x40]
   14000f035:	test   rbx,rbx
   14000f038:	je     0x14000efdb
   14000f03a:	mov    DWORD PTR [rbx],0xcccc
   14000f040:	jmp    0x14000f055
   14000f042:	call   0x1400064d4
   14000f047:	mov    rbx,rax
   14000f04a:	test   rax,rax
   14000f04d:	je     0x14000f05e
   14000f04f:	mov    DWORD PTR [rax],0xdddd
   14000f055:	add    rbx,0x10
   14000f059:	jmp    0x14000f05e
   14000f05b:	mov    rbx,rdi
   14000f05e:	test   rbx,rbx
   14000f061:	je     0x14000efdb
   14000f067:	mov    r9d,esi
   14000f06a:	mov    r8,rbx
   14000f06d:	mov    edx,r15d
   14000f070:	mov    rcx,r12
   14000f073:	call   0x14000f4a8
   14000f078:	test   eax,eax
   14000f07a:	je     0x14000f0b5
   14000f07c:	mov    eax,DWORD PTR [rbp+0x60]
   14000f07f:	or     r9d,0xffffffff
   14000f083:	xor    edx,edx
   14000f085:	mov    QWORD PTR [rsp+0x38],rdi
   14000f08a:	mov    r8,rbx
   14000f08d:	mov    ecx,r14d
   14000f090:	mov    QWORD PTR [rsp+0x30],rdi
   14000f095:	test   eax,eax
   14000f097:	jne    0x14000f0a4
   14000f099:	mov    DWORD PTR [rsp+0x28],edi
   14000f09d:	mov    QWORD PTR [rsp+0x20],rdi
   14000f0a2:	jmp    0x14000f0ad
   14000f0a4:	mov    DWORD PTR [rsp+0x28],eax
   14000f0a8:	mov    QWORD PTR [rsp+0x20],r13
   14000f0ad:	call   QWORD PTR [rip+0x17ffd]        # 0x1400270b0
   14000f0b3:	mov    edi,eax
   14000f0b5:	lea    rcx,[rbx-0x10]
   14000f0b9:	cmp    DWORD PTR [rcx],0xdddd
   14000f0bf:	jne    0x14000f0c6
   14000f0c1:	call   0x140006444
   14000f0c6:	mov    eax,edi
   14000f0c8:	mov    rcx,QWORD PTR [rbp+0x0]
   14000f0cc:	xor    rcx,rbp
   14000f0cf:	call   0x14000d0a0
   14000f0d4:	mov    rbx,QWORD PTR [rbp+0x40]
   14000f0d8:	mov    rsi,QWORD PTR [rbp+0x48]
   14000f0dc:	mov    rdi,QWORD PTR [rbp+0x50]
   14000f0e0:	lea    rsp,[rbp+0x10]
   14000f0e4:	pop    r15
   14000f0e6:	pop    r14
   14000f0e8:	pop    r13
   14000f0ea:	pop    r12
   14000f0ec:	pop    rbp
   14000f0ed:	ret    
   14000f0ee:	int3   
   14000f0ef:	int3   
   14000f0f0:	xor    eax,eax
   14000f0f2:	lea    rdx,[rcx+0x10]
   14000f0f6:	cmp    rdx,rcx
   14000f0f9:	seta   al
   14000f0fc:	ret    
   14000f0fd:	int3   
   14000f0fe:	int3   
   14000f0ff:	int3   
   14000f100:	test   rcx,rcx
   14000f103:	je     0x14000f10b
   14000f105:	mov    DWORD PTR [rcx],edx
   14000f107:	add    rcx,0x10
   14000f10b:	mov    rax,rcx
   14000f10e:	ret    
   14000f10f:	int3   
   14000f110:	mov    QWORD PTR [rsp+0x8],rbx
   14000f115:	mov    QWORD PTR [rsp+0x10],rsi
   14000f11a:	push   rdi
   14000f11b:	sub    rsp,0x50
   14000f11f:	mov    rsi,rdx
   14000f122:	mov    rdx,rcx
   14000f125:	lea    rcx,[rsp+0x30]
   14000f12a:	mov    rbx,r9
   14000f12d:	mov    edi,r8d
   14000f130:	call   0x14000a000
   14000f135:	mov    eax,DWORD PTR [rsp+0x80]
   14000f13c:	lea    rcx,[rsp+0x30]
   14000f141:	mov    r9,rbx
   14000f144:	mov    r8d,edi
   14000f147:	mov    rdx,rsi
   14000f14a:	mov    DWORD PTR [rsp+0x20],eax
   14000f14e:	call   0x14000ef84
   14000f153:	cmp    BYTE PTR [rsp+0x48],0x0
   14000f158:	je     0x14000f166
   14000f15a:	mov    rcx,QWORD PTR [rsp+0x40]
   14000f15f:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14000f166:	mov    rbx,QWORD PTR [rsp+0x60]
   14000f16b:	mov    rsi,QWORD PTR [rsp+0x68]
   14000f170:	add    rsp,0x50
   14000f174:	pop    rdi
   14000f175:	ret    
   14000f176:	int3   
   14000f177:	int3   
   14000f178:	sub    rsp,0x28
   14000f17c:	test   rcx,rcx
   14000f17f:	je     0x14000f192
   14000f181:	sub    rcx,0x10
   14000f185:	cmp    DWORD PTR [rcx],0xdddd
   14000f18b:	jne    0x14000f192
   14000f18d:	call   0x140006444
   14000f192:	add    rsp,0x28
   14000f196:	ret    
   14000f197:	int3   
   14000f198:	mov    r10d,ecx
   14000f19b:	xor    r8d,r8d
   14000f19e:	mov    r9d,0xe3
   14000f1a4:	lea    eax,[r9+r8*1]
   14000f1a8:	lea    r11,[rip+0x1b8b1]        # 0x14002aa60
   14000f1af:	mov    ecx,r10d
   14000f1b2:	cdq    
   14000f1b3:	sub    eax,edx
   14000f1b5:	sar    eax,1
   14000f1b7:	movsxd rdx,eax
   14000f1ba:	shl    rdx,0x4
   14000f1be:	sub    ecx,DWORD PTR [rdx+r11*1]
   14000f1c2:	je     0x14000f1da
   14000f1c4:	test   ecx,ecx
   14000f1c6:	jns    0x14000f1ce
   14000f1c8:	lea    r9d,[rax-0x1]
   14000f1cc:	jmp    0x14000f1d2
   14000f1ce:	lea    r8d,[rax+0x1]
   14000f1d2:	cmp    r8d,r9d
   14000f1d5:	jle    0x14000f1a4
   14000f1d7:	or     eax,0xffffffff
   14000f1da:	ret    
   14000f1db:	int3   
   14000f1dc:	mov    rax,rsp
   14000f1df:	mov    QWORD PTR [rax+0x8],rbx
   14000f1e3:	mov    QWORD PTR [rax+0x10],rbp
   14000f1e7:	mov    QWORD PTR [rax+0x18],rsi
   14000f1eb:	mov    QWORD PTR [rax+0x20],rdi
   14000f1ef:	push   r14
   14000f1f1:	sub    rsp,0x20
   14000f1f5:	mov    rbp,rcx
   14000f1f8:	xor    edi,edi
   14000f1fa:	mov    esi,0xe3
   14000f1ff:	lea    r14,[rip+0x1c69a]        # 0x14002b8a0
   14000f206:	lea    eax,[rsi+rdi*1]
   14000f209:	mov    r8d,0x55
   14000f20f:	mov    rcx,rbp
   14000f212:	cdq    
   14000f213:	sub    eax,edx
   14000f215:	sar    eax,1
   14000f217:	movsxd rbx,eax
   14000f21a:	mov    rdx,rbx
   14000f21d:	add    rdx,rdx
   14000f220:	mov    rdx,QWORD PTR [r14+rdx*8]
   14000f224:	call   0x14000f678
   14000f229:	test   eax,eax
   14000f22b:	je     0x14000f240
   14000f22d:	jns    0x14000f234
   14000f22f:	lea    esi,[rbx-0x1]
   14000f232:	jmp    0x14000f237
   14000f234:	lea    edi,[rbx+0x1]
   14000f237:	cmp    edi,esi
   14000f239:	jle    0x14000f206
   14000f23b:	or     eax,0xffffffff
   14000f23e:	jmp    0x14000f24b
   14000f240:	mov    rax,rbx
   14000f243:	add    rax,rax
   14000f246:	mov    eax,DWORD PTR [r14+rax*8+0x8]
   14000f24b:	mov    rbx,QWORD PTR [rsp+0x30]
   14000f250:	mov    rbp,QWORD PTR [rsp+0x38]
   14000f255:	mov    rsi,QWORD PTR [rsp+0x40]
   14000f25a:	mov    rdi,QWORD PTR [rsp+0x48]
   14000f25f:	add    rsp,0x20
   14000f263:	pop    r14
   14000f265:	ret    
   14000f266:	int3   
   14000f267:	int3   
   14000f268:	mov    r11,rsp
   14000f26b:	mov    QWORD PTR [r11+0x8],rbx
   14000f26f:	mov    QWORD PTR [r11+0x10],rsi
   14000f273:	push   rdi
   14000f274:	sub    rsp,0x50
   14000f278:	mov    r10,QWORD PTR [rip+0x2ae89]        # 0x14003a108
   14000f27f:	mov    ebx,r9d
   14000f282:	mov    rdi,r8
   14000f285:	xor    r10,QWORD PTR [rip+0x277b4]        # 0x140036a40
   14000f28c:	mov    esi,edx
   14000f28e:	je     0x14000f2ba
   14000f290:	xor    eax,eax
   14000f292:	mov    QWORD PTR [r11-0x18],rax
   14000f296:	mov    QWORD PTR [r11-0x20],rax
   14000f29a:	mov    QWORD PTR [r11-0x28],rax
   14000f29e:	mov    eax,DWORD PTR [rsp+0x88]
   14000f2a5:	mov    DWORD PTR [rsp+0x28],eax
   14000f2a9:	mov    rax,QWORD PTR [rsp+0x80]
   14000f2b1:	mov    QWORD PTR [r11-0x38],rax
   14000f2b5:	call   r10
   14000f2b8:	jmp    0x14000f2e7
   14000f2ba:	call   0x14000f3a8
   14000f2bf:	mov    r9d,ebx
   14000f2c2:	mov    r8,rdi
   14000f2c5:	mov    ecx,eax
   14000f2c7:	mov    eax,DWORD PTR [rsp+0x88]
   14000f2ce:	mov    edx,esi
   14000f2d0:	mov    DWORD PTR [rsp+0x28],eax
   14000f2d4:	mov    rax,QWORD PTR [rsp+0x80]
   14000f2dc:	mov    QWORD PTR [rsp+0x20],rax
   14000f2e1:	call   QWORD PTR [rip+0x17f81]        # 0x140027268
   14000f2e7:	mov    rbx,QWORD PTR [rsp+0x60]
   14000f2ec:	mov    rsi,QWORD PTR [rsp+0x68]
   14000f2f1:	add    rsp,0x50
   14000f2f5:	pop    rdi
   14000f2f6:	ret    
   14000f2f7:	int3   
   14000f2f8:	mov    QWORD PTR [rsp+0x8],rbx
   14000f2fd:	mov    QWORD PTR [rsp+0x10],rbp
   14000f302:	mov    QWORD PTR [rsp+0x18],rsi
   14000f307:	push   rdi
   14000f308:	sub    rsp,0x30
   14000f30c:	movsxd rbx,r8d
   14000f30f:	mov    rsi,rdx
   14000f312:	test   ecx,0xfffff3ff
   14000f318:	jne    0x14000f322
   14000f31a:	cmp    ecx,0xc00
   14000f320:	jne    0x14000f331
   14000f322:	test   rdx,rdx
   14000f325:	jne    0x14000f32c
   14000f327:	test   r8d,r8d
   14000f32a:	jg     0x14000f331
   14000f32c:	test   r8d,r8d
   14000f32f:	jns    0x14000f335
   14000f331:	xor    eax,eax
   14000f333:	jmp    0x14000f37c
   14000f335:	call   0x14000f198
   14000f33a:	test   eax,eax
   14000f33c:	js     0x14000f331
   14000f33e:	cdqe   
   14000f340:	lea    rbp,[rip+0x1b721]        # 0x14002aa68
   14000f347:	mov    edx,0x55
   14000f34c:	add    rax,rax
   14000f34f:	mov    rbp,QWORD PTR [rbp+rax*8+0x0]
   14000f354:	mov    rcx,rbp
   14000f357:	call   0x140019db0
   14000f35c:	mov    rdi,rax
   14000f35f:	test   ebx,ebx
   14000f361:	jle    0x14000f379
   14000f363:	cmp    eax,ebx
   14000f365:	jge    0x14000f331
   14000f367:	mov    rdx,rbx
   14000f36a:	mov    r8,rbp
   14000f36d:	mov    rcx,rsi
   14000f370:	call   0x14000f934
   14000f375:	test   eax,eax
   14000f377:	jne    0x14000f391
   14000f379:	lea    eax,[rdi+0x1]
   14000f37c:	mov    rbx,QWORD PTR [rsp+0x40]
   14000f381:	mov    rbp,QWORD PTR [rsp+0x48]
   14000f386:	mov    rsi,QWORD PTR [rsp+0x50]
   14000f38b:	add    rsp,0x30
   14000f38f:	pop    rdi
   14000f390:	ret    
   14000f391:	and    QWORD PTR [rsp+0x20],0x0
   14000f397:	xor    r9d,r9d
   14000f39a:	xor    r8d,r8d
   14000f39d:	xor    edx,edx
   14000f39f:	xor    ecx,ecx
   14000f3a1:	call   0x140008678
   14000f3a6:	int3   
   14000f3a7:	int3   
   14000f3a8:	sub    rsp,0x28
   14000f3ac:	test   rcx,rcx
   14000f3af:	je     0x14000f3d3
   14000f3b1:	call   0x14000f1dc
   14000f3b6:	test   eax,eax
   14000f3b8:	js     0x14000f3d3
   14000f3ba:	cdqe   
   14000f3bc:	cmp    rax,0xe4
   14000f3c2:	jae    0x14000f3d3
   14000f3c4:	lea    rcx,[rip+0x1b695]        # 0x14002aa60
   14000f3cb:	add    rax,rax
   14000f3ce:	mov    eax,DWORD PTR [rcx+rax*8]
   14000f3d1:	jmp    0x14000f3d5
   14000f3d3:	xor    eax,eax
   14000f3d5:	add    rsp,0x28
   14000f3d9:	ret    
   14000f3da:	int3   
   14000f3db:	int3   
   14000f3dc:	xor    r8d,r8d
   14000f3df:	xor    edx,edx
   14000f3e1:	rex.W jmp QWORD PTR [rip+0x295b8]        # 0x1400389a0
   14000f3e8:	sub    rsp,0x28
   14000f3ec:	mov    rax,QWORD PTR [rip+0x2ad1d]        # 0x14003a110
   14000f3f3:	xor    rax,QWORD PTR [rip+0x27646]        # 0x140036a40
   14000f3fa:	je     0x14000f406
   14000f3fc:	xor    r9d,r9d
   14000f3ff:	add    rsp,0x28
   14000f403:	rex.W jmp rax
   14000f406:	mov    QWORD PTR [rip+0x29593],rcx        # 0x1400389a0
   14000f40d:	lea    rcx,[rip+0xffffffffffffffc8]        # 0x14000f3dc
   14000f414:	mov    edx,0x1
   14000f419:	call   QWORD PTR [rip+0x17e71]        # 0x140027290
   14000f41f:	and    QWORD PTR [rip+0x29579],0x0        # 0x1400389a0
   14000f427:	add    rsp,0x28
   14000f42b:	ret    
   14000f42c:	mov    r11,rsp
   14000f42f:	mov    QWORD PTR [r11+0x8],rbx
   14000f433:	mov    QWORD PTR [r11+0x10],rsi
   14000f437:	push   rdi
   14000f438:	sub    rsp,0x40
   14000f43c:	mov    r10,QWORD PTR [rip+0x2acd5]        # 0x14003a118
   14000f443:	mov    rbx,r9
   14000f446:	mov    rdi,r8
   14000f449:	xor    r10,QWORD PTR [rip+0x275f0]        # 0x140036a40
   14000f450:	mov    esi,edx
   14000f452:	je     0x14000f46f
   14000f454:	and    QWORD PTR [r11-0x18],0x0
   14000f459:	mov    eax,DWORD PTR [rsp+0x78]
   14000f45d:	mov    DWORD PTR [rsp+0x28],eax
   14000f461:	mov    rax,QWORD PTR [rsp+0x70]
   14000f466:	mov    QWORD PTR [r11-0x28],rax
   14000f46a:	call   r10
   14000f46d:	jmp    0x14000f496
   14000f46f:	call   0x14000f3a8
   14000f474:	mov    r9,rbx
   14000f477:	mov    r8,rdi
   14000f47a:	mov    ecx,eax
   14000f47c:	mov    eax,DWORD PTR [rsp+0x78]
   14000f480:	mov    edx,esi
   14000f482:	mov    DWORD PTR [rsp+0x28],eax
   14000f486:	mov    rax,QWORD PTR [rsp+0x70]
   14000f48b:	mov    QWORD PTR [rsp+0x20],rax
   14000f490:	call   QWORD PTR [rip+0x17dc2]        # 0x140027258
   14000f496:	mov    rbx,QWORD PTR [rsp+0x50]
   14000f49b:	mov    rsi,QWORD PTR [rsp+0x58]
   14000f4a0:	add    rsp,0x40
   14000f4a4:	pop    rdi
   14000f4a5:	ret    
   14000f4a6:	int3   
   14000f4a7:	int3   
   14000f4a8:	mov    QWORD PTR [rsp+0x8],rbx
   14000f4ad:	mov    QWORD PTR [rsp+0x10],rsi
   14000f4b2:	push   rdi
   14000f4b3:	sub    rsp,0x20
   14000f4b7:	mov    rax,QWORD PTR [rip+0x2ac62]        # 0x14003a120
   14000f4be:	mov    ebx,r9d
   14000f4c1:	mov    rdi,r8
   14000f4c4:	xor    rax,QWORD PTR [rip+0x27575]        # 0x140036a40
   14000f4cb:	mov    esi,edx
   14000f4cd:	je     0x14000f4d3
   14000f4cf:	call   rax
   14000f4d1:	jmp    0x14000f4e8
   14000f4d3:	call   0x14000f3a8
   14000f4d8:	mov    r9d,ebx
   14000f4db:	mov    r8,rdi
   14000f4de:	mov    ecx,eax
   14000f4e0:	mov    edx,esi
   14000f4e2:	call   QWORD PTR [rip+0x17d90]        # 0x140027278
   14000f4e8:	mov    rbx,QWORD PTR [rsp+0x30]
   14000f4ed:	mov    rsi,QWORD PTR [rsp+0x38]
   14000f4f2:	add    rsp,0x20
   14000f4f6:	pop    rdi
   14000f4f7:	ret    
   14000f4f8:	mov    QWORD PTR [rsp+0x8],rbx
   14000f4fd:	mov    QWORD PTR [rsp+0x10],rsi
   14000f502:	push   rdi
   14000f503:	sub    rsp,0x30
   14000f507:	mov    r10,QWORD PTR [rip+0x2ac1a]        # 0x14003a128
   14000f50e:	mov    rbx,r9
   14000f511:	mov    rdi,r8
   14000f514:	xor    r10,QWORD PTR [rip+0x27525]        # 0x140036a40
   14000f51b:	mov    esi,edx
   14000f51d:	je     0x14000f536
   14000f51f:	mov    eax,DWORD PTR [rsp+0x68]
   14000f523:	mov    DWORD PTR [rsp+0x28],eax
   14000f527:	mov    rax,QWORD PTR [rsp+0x60]
   14000f52c:	mov    QWORD PTR [rsp+0x20],rax
   14000f531:	call   r10
   14000f534:	jmp    0x14000f55d
   14000f536:	call   0x14000f3a8
   14000f53b:	mov    r9,rbx
   14000f53e:	mov    r8,rdi
   14000f541:	mov    ecx,eax
   14000f543:	mov    eax,DWORD PTR [rsp+0x68]
   14000f547:	mov    edx,esi
   14000f549:	mov    DWORD PTR [rsp+0x28],eax
   14000f54d:	mov    rax,QWORD PTR [rsp+0x60]
   14000f552:	mov    QWORD PTR [rsp+0x20],rax
   14000f557:	call   QWORD PTR [rip+0x17d03]        # 0x140027260
   14000f55d:	mov    rbx,QWORD PTR [rsp+0x40]
   14000f562:	mov    rsi,QWORD PTR [rsp+0x48]
   14000f567:	add    rsp,0x30
   14000f56b:	pop    rdi
   14000f56c:	ret    
   14000f56d:	int3   
   14000f56e:	int3   
   14000f56f:	int3   
   14000f570:	mov    QWORD PTR [rsp+0x8],rbx
   14000f575:	push   rdi
   14000f576:	sub    rsp,0x20
   14000f57a:	mov    rax,QWORD PTR [rip+0x2abaf]        # 0x14003a130
   14000f581:	mov    ebx,edx
   14000f583:	mov    rdi,rcx
   14000f586:	xor    rax,QWORD PTR [rip+0x274b3]        # 0x140036a40
   14000f58d:	je     0x14000f593
   14000f58f:	call   rax
   14000f591:	jmp    0x14000f5a6
   14000f593:	call   QWORD PTR [rip+0x17cef]        # 0x140027288
   14000f599:	mov    r8d,ebx
   14000f59c:	mov    rdx,rdi
   14000f59f:	mov    ecx,eax
   14000f5a1:	call   0x14000f2f8
   14000f5a6:	mov    rbx,QWORD PTR [rsp+0x30]
   14000f5ab:	add    rsp,0x20
   14000f5af:	pop    rdi
   14000f5b0:	ret    
   14000f5b1:	int3   
   14000f5b2:	int3   
   14000f5b3:	int3   
   14000f5b4:	sub    rsp,0x28
   14000f5b8:	mov    rax,QWORD PTR [rip+0x2ab79]        # 0x14003a138
   14000f5bf:	xor    rax,QWORD PTR [rip+0x2747a]        # 0x140036a40
   14000f5c6:	je     0x14000f5cf
   14000f5c8:	add    rsp,0x28
   14000f5cc:	rex.W jmp rax
   14000f5cf:	call   0x14000f3a8
   14000f5d4:	mov    edx,0x1
   14000f5d9:	mov    ecx,eax
   14000f5db:	add    rsp,0x28
   14000f5df:	rex.W jmp QWORD PTR [rip+0x17c9a]        # 0x140027280
   14000f5e6:	int3   
   14000f5e7:	int3   
   14000f5e8:	mov    r11,rsp
   14000f5eb:	mov    QWORD PTR [r11+0x8],rbx
   14000f5ef:	mov    QWORD PTR [r11+0x10],rsi
   14000f5f3:	push   rdi
   14000f5f4:	sub    rsp,0x50
   14000f5f8:	mov    r10,QWORD PTR [rip+0x2ab41]        # 0x14003a140
   14000f5ff:	mov    ebx,r9d
   14000f602:	mov    rdi,r8
   14000f605:	xor    r10,QWORD PTR [rip+0x27434]        # 0x140036a40
   14000f60c:	mov    esi,edx
   14000f60e:	je     0x14000f63a
   14000f610:	xor    eax,eax
   14000f612:	mov    QWORD PTR [r11-0x18],rax
   14000f616:	mov    QWORD PTR [r11-0x20],rax
   14000f61a:	mov    QWORD PTR [r11-0x28],rax
   14000f61e:	mov    eax,DWORD PTR [rsp+0x88]
   14000f625:	mov    DWORD PTR [rsp+0x28],eax
   14000f629:	mov    rax,QWORD PTR [rsp+0x80]
   14000f631:	mov    QWORD PTR [r11-0x38],rax
   14000f635:	call   r10
   14000f638:	jmp    0x14000f667
   14000f63a:	call   0x14000f3a8
   14000f63f:	mov    r9d,ebx
   14000f642:	mov    r8,rdi
   14000f645:	mov    ecx,eax
   14000f647:	mov    eax,DWORD PTR [rsp+0x88]
   14000f64e:	mov    edx,esi
   14000f650:	mov    DWORD PTR [rsp+0x28],eax
   14000f654:	mov    rax,QWORD PTR [rsp+0x80]
   14000f65c:	mov    QWORD PTR [rsp+0x20],rax
   14000f661:	call   QWORD PTR [rip+0x17c09]        # 0x140027270
   14000f667:	mov    rbx,QWORD PTR [rsp+0x60]
   14000f66c:	mov    rsi,QWORD PTR [rsp+0x68]
   14000f671:	add    rsp,0x50
   14000f675:	pop    rdi
   14000f676:	ret    
   14000f677:	int3   
   14000f678:	xor    r9d,r9d
   14000f67b:	mov    r10,rdx
   14000f67e:	mov    r11,rcx
   14000f681:	test   r8,r8
   14000f684:	je     0x14000f6c9
   14000f686:	sub    r11,rdx
   14000f689:	movzx  ecx,WORD PTR [r11+r10*1]
   14000f68e:	lea    eax,[rcx-0x41]
   14000f691:	cmp    ax,0x19
   14000f695:	ja     0x14000f69b
   14000f697:	add    cx,0x20
   14000f69b:	movzx  edx,WORD PTR [r10]
   14000f69f:	lea    eax,[rdx-0x41]
   14000f6a2:	cmp    ax,0x19
   14000f6a6:	ja     0x14000f6ac
   14000f6a8:	add    dx,0x20
   14000f6ac:	add    r10,0x2
   14000f6b0:	dec    r8
   14000f6b3:	je     0x14000f6bf
   14000f6b5:	test   cx,cx
   14000f6b8:	je     0x14000f6bf
   14000f6ba:	cmp    cx,dx
   14000f6bd:	je     0x14000f689
   14000f6bf:	movzx  eax,dx
   14000f6c2:	movzx  r9d,cx
   14000f6c6:	sub    r9d,eax
   14000f6c9:	mov    eax,r9d
   14000f6cc:	ret    
   14000f6cd:	int3   
   14000f6ce:	int3   
   14000f6cf:	int3   
   14000f6d0:	mov    QWORD PTR [rsp+0x8],rbx
   14000f6d5:	mov    QWORD PTR [rsp+0x10],rsi
   14000f6da:	push   rdi
   14000f6db:	sub    rsp,0x20
   14000f6df:	mov    rbx,rdx
   14000f6e2:	mov    rdi,rcx
   14000f6e5:	test   rcx,rcx
   14000f6e8:	jne    0x14000f6f4
   14000f6ea:	mov    rcx,rdx
   14000f6ed:	call   0x1400064d4
   14000f6f2:	jmp    0x14000f75e
   14000f6f4:	test   rdx,rdx
   14000f6f7:	jne    0x14000f700
   14000f6f9:	call   0x140006444
   14000f6fe:	jmp    0x14000f75c
   14000f700:	cmp    rdx,0xffffffffffffffe0
   14000f704:	ja     0x14000f749
   14000f706:	mov    rcx,QWORD PTR [rip+0x28f5b]        # 0x140038668
   14000f70d:	mov    eax,0x1
   14000f712:	test   rbx,rbx
   14000f715:	cmove  rbx,rax
   14000f719:	mov    r8,rdi
   14000f71c:	xor    edx,edx
   14000f71e:	mov    r9,rbx
   14000f721:	call   QWORD PTR [rip+0x17b71]        # 0x140027298
   14000f727:	mov    rsi,rax
   14000f72a:	test   rax,rax
   14000f72d:	jne    0x14000f79e
   14000f72f:	cmp    DWORD PTR [rip+0x28f3b],eax        # 0x140038670
   14000f735:	je     0x14000f787
   14000f737:	mov    rcx,rbx
   14000f73a:	call   0x140007e5c
   14000f73f:	test   eax,eax
   14000f741:	je     0x14000f76e
   14000f743:	cmp    rbx,0xffffffffffffffe0
   14000f747:	jbe    0x14000f706
   14000f749:	mov    rcx,rbx
   14000f74c:	call   0x140007e5c
   14000f751:	call   0x1400095b8
   14000f756:	mov    DWORD PTR [rax],0xc
   14000f75c:	xor    eax,eax
   14000f75e:	mov    rbx,QWORD PTR [rsp+0x30]
   14000f763:	mov    rsi,QWORD PTR [rsp+0x38]
   14000f768:	add    rsp,0x20
   14000f76c:	pop    rdi
   14000f76d:	ret    
   14000f76e:	call   0x1400095b8
   14000f773:	mov    rbx,rax
   14000f776:	call   QWORD PTR [rip+0x17904]        # 0x140027080
   14000f77c:	mov    ecx,eax
   14000f77e:	call   0x140009650
   14000f783:	mov    DWORD PTR [rbx],eax
   14000f785:	jmp    0x14000f75c
   14000f787:	call   0x1400095b8
   14000f78c:	mov    rbx,rax
   14000f78f:	call   QWORD PTR [rip+0x178eb]        # 0x140027080
   14000f795:	mov    ecx,eax
   14000f797:	call   0x140009650
   14000f79c:	mov    DWORD PTR [rbx],eax
   14000f79e:	mov    rax,rsi
   14000f7a1:	jmp    0x14000f75e
   14000f7a3:	int3   
   14000f7a4:	mov    QWORD PTR [rsp+0x8],rbx
   14000f7a9:	mov    QWORD PTR [rsp+0x10],rsi
   14000f7ae:	push   rdi
   14000f7af:	sub    rsp,0x20
   14000f7b3:	xor    edi,edi
   14000f7b5:	mov    rbx,rdx
   14000f7b8:	mov    rsi,rcx
   14000f7bb:	test   rdx,rdx
   14000f7be:	je     0x14000f7dd
   14000f7c0:	xor    edx,edx
   14000f7c2:	lea    rax,[rdi-0x20]
   14000f7c6:	div    rbx
   14000f7c9:	cmp    rax,r8
   14000f7cc:	jae    0x14000f7dd
   14000f7ce:	call   0x1400095b8
   14000f7d3:	mov    DWORD PTR [rax],0xc
   14000f7d9:	xor    eax,eax
   14000f7db:	jmp    0x14000f81a
   14000f7dd:	imul   rbx,r8
   14000f7e1:	test   rcx,rcx
   14000f7e4:	je     0x14000f7ee
   14000f7e6:	call   0x140007e98
   14000f7eb:	mov    rdi,rax
   14000f7ee:	mov    rdx,rbx
   14000f7f1:	mov    rcx,rsi
   14000f7f4:	call   0x14000f6d0
   14000f7f9:	mov    rsi,rax
   14000f7fc:	test   rax,rax
   14000f7ff:	je     0x14000f817
   14000f801:	cmp    rdi,rbx
   14000f804:	jae    0x14000f817
   14000f806:	sub    rbx,rdi
   14000f809:	lea    rcx,[rdi+rax*1]
   14000f80d:	xor    edx,edx
   14000f80f:	mov    r8,rbx
   14000f812:	call   0x140007150
   14000f817:	mov    rax,rsi
   14000f81a:	mov    rbx,QWORD PTR [rsp+0x30]
   14000f81f:	mov    rsi,QWORD PTR [rsp+0x38]
   14000f824:	add    rsp,0x20
   14000f828:	pop    rdi
   14000f829:	ret    
   14000f82a:	int3   
   14000f82b:	int3   
   14000f82c:	int3   
   14000f82d:	int3   
   14000f82e:	int3   
   14000f82f:	int3   
   14000f830:	int3   
   14000f831:	int3   
   14000f832:	int3   
   14000f833:	int3   
   14000f834:	int3   
   14000f835:	int3   
   14000f836:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000f840:	sub    rsp,0x4d8
   14000f847:	xor    r8,r8
   14000f84a:	xor    r9,r9
   14000f84d:	mov    QWORD PTR [rsp+0x20],rsp
   14000f852:	mov    QWORD PTR [rsp+0x28],r8
   14000f857:	call   0x140025f76
   14000f85c:	add    rsp,0x4d8
   14000f863:	ret    
   14000f864:	int3   
   14000f865:	int3   
   14000f866:	int3   
   14000f867:	int3   
   14000f868:	int3   
   14000f869:	int3   
   14000f86a:	nop    WORD PTR [rax+rax*1+0x0]
   14000f870:	mov    QWORD PTR [rsp+0x8],rcx
   14000f875:	mov    QWORD PTR [rsp+0x18],rdx
   14000f87a:	mov    DWORD PTR [rsp+0x10],r8d
   14000f87f:	mov    r9,0x19930520
   14000f886:	jmp    0x14000f890
   14000f888:	int3   
   14000f889:	int3   
   14000f88a:	int3   
   14000f88b:	int3   
   14000f88c:	int3   
   14000f88d:	int3   
   14000f88e:	xchg   ax,ax
   14000f890:	ret    
   14000f891:	int3   
   14000f892:	int3   
   14000f893:	int3   
   14000f894:	int3   
   14000f895:	int3   
   14000f896:	int3   
   14000f897:	nop    WORD PTR [rax+rax*1+0x0]
   14000f8a0:	ret    
   14000f8a1:	int3   
   14000f8a2:	int3   
   14000f8a3:	int3   
   14000f8a4:	and    DWORD PTR [rip+0x2a795],0x0        # 0x14003a040
   14000f8ab:	ret    
   14000f8ac:	rex push rbx
   14000f8ae:	sub    rsp,0x20
   14000f8b2:	xor    r10d,r10d
   14000f8b5:	mov    r9,rcx
   14000f8b8:	test   rcx,rcx
   14000f8bb:	je     0x14000f8cb
   14000f8bd:	test   rdx,rdx
   14000f8c0:	je     0x14000f8cb
   14000f8c2:	test   r8,r8
   14000f8c5:	jne    0x14000f8e4
   14000f8c7:	mov    WORD PTR [rcx],r10w
   14000f8cb:	call   0x1400095b8
   14000f8d0:	mov    ebx,0x16
   14000f8d5:	mov    DWORD PTR [rax],ebx
   14000f8d7:	call   0x140008628
   14000f8dc:	mov    eax,ebx
   14000f8de:	add    rsp,0x20
   14000f8e2:	pop    rbx
   14000f8e3:	ret    
   14000f8e4:	cmp    WORD PTR [rcx],r10w
   14000f8e8:	je     0x14000f8f3
   14000f8ea:	add    rcx,0x2
   14000f8ee:	dec    rdx
   14000f8f1:	jne    0x14000f8e4
   14000f8f3:	test   rdx,rdx
   14000f8f6:	jne    0x14000f8fe
   14000f8f8:	mov    WORD PTR [r9],r10w
   14000f8fc:	jmp    0x14000f8cb
   14000f8fe:	sub    rcx,r8
   14000f901:	movzx  eax,WORD PTR [r8]
   14000f905:	mov    WORD PTR [rcx+r8*1],ax
   14000f90a:	lea    r8,[r8+0x2]
   14000f90e:	test   ax,ax
   14000f911:	je     0x14000f918
   14000f913:	dec    rdx
   14000f916:	jne    0x14000f901
   14000f918:	test   rdx,rdx
   14000f91b:	jne    0x14000f92d
   14000f91d:	mov    WORD PTR [r9],r10w
   14000f921:	call   0x1400095b8
   14000f926:	mov    ebx,0x22
   14000f92b:	jmp    0x14000f8d5
   14000f92d:	xor    eax,eax
   14000f92f:	jmp    0x14000f8de
   14000f931:	int3   
   14000f932:	int3   
   14000f933:	int3   
   14000f934:	rex push rbx
   14000f936:	sub    rsp,0x20
   14000f93a:	xor    r10d,r10d
   14000f93d:	test   rcx,rcx
   14000f940:	je     0x14000f950
   14000f942:	test   rdx,rdx
   14000f945:	je     0x14000f950
   14000f947:	test   r8,r8
   14000f94a:	jne    0x14000f969
   14000f94c:	mov    WORD PTR [rcx],r10w
   14000f950:	call   0x1400095b8
   14000f955:	mov    ebx,0x16
   14000f95a:	mov    DWORD PTR [rax],ebx
   14000f95c:	call   0x140008628
   14000f961:	mov    eax,ebx
   14000f963:	add    rsp,0x20
   14000f967:	pop    rbx
   14000f968:	ret    
   14000f969:	mov    r9,rcx
   14000f96c:	sub    r9,r8
   14000f96f:	movzx  eax,WORD PTR [r8]
   14000f973:	mov    WORD PTR [r9+r8*1],ax
   14000f978:	lea    r8,[r8+0x2]
   14000f97c:	test   ax,ax
   14000f97f:	je     0x14000f986
   14000f981:	dec    rdx
   14000f984:	jne    0x14000f96f
   14000f986:	test   rdx,rdx
   14000f989:	jne    0x14000f99b
   14000f98b:	mov    WORD PTR [rcx],r10w
   14000f98f:	call   0x1400095b8
   14000f994:	mov    ebx,0x22
   14000f999:	jmp    0x14000f95a
   14000f99b:	xor    eax,eax
   14000f99d:	jmp    0x14000f963
   14000f99f:	int3   
   14000f9a0:	mov    rax,rcx
   14000f9a3:	movzx  edx,WORD PTR [rax]
   14000f9a6:	add    rax,0x2
   14000f9aa:	test   dx,dx
   14000f9ad:	jne    0x14000f9a3
   14000f9af:	sub    rax,rcx
   14000f9b2:	sar    rax,1
   14000f9b5:	dec    rax
   14000f9b8:	ret    
   14000f9b9:	int3   
   14000f9ba:	int3   
   14000f9bb:	int3   
   14000f9bc:	rex push rbx
   14000f9be:	sub    rsp,0x20
   14000f9c2:	xor    ebx,ebx
   14000f9c4:	test   r9,r9
   14000f9c7:	jne    0x14000f9d7
   14000f9c9:	test   rcx,rcx
   14000f9cc:	jne    0x14000f9dc
   14000f9ce:	test   rdx,rdx
   14000f9d1:	jne    0x14000f9f3
   14000f9d3:	xor    eax,eax
   14000f9d5:	jmp    0x14000fa06
   14000f9d7:	test   rcx,rcx
   14000f9da:	je     0x14000f9f3
   14000f9dc:	test   rdx,rdx
   14000f9df:	je     0x14000f9f3
   14000f9e1:	test   r9,r9
   14000f9e4:	jne    0x14000f9eb
   14000f9e6:	mov    WORD PTR [rcx],bx
   14000f9e9:	jmp    0x14000f9d3
   14000f9eb:	test   r8,r8
   14000f9ee:	jne    0x14000fa0c
   14000f9f0:	mov    WORD PTR [rcx],bx
   14000f9f3:	call   0x1400095b8
   14000f9f8:	mov    ebx,0x16
   14000f9fd:	mov    DWORD PTR [rax],ebx
   14000f9ff:	call   0x140008628
   14000fa04:	mov    eax,ebx
   14000fa06:	add    rsp,0x20
   14000fa0a:	pop    rbx
   14000fa0b:	ret    
   14000fa0c:	mov    r11,rcx
   14000fa0f:	mov    r10,rdx
   14000fa12:	cmp    r9,0xffffffffffffffff
   14000fa16:	jne    0x14000fa34
   14000fa18:	sub    r11,r8
   14000fa1b:	movzx  eax,WORD PTR [r8]
   14000fa1f:	mov    WORD PTR [r11+r8*1],ax
   14000fa24:	lea    r8,[r8+0x2]
   14000fa28:	test   ax,ax
   14000fa2b:	je     0x14000fa5c
   14000fa2d:	dec    r10
   14000fa30:	jne    0x14000fa1b
   14000fa32:	jmp    0x14000fa5c
   14000fa34:	sub    r8,rcx
   14000fa37:	movzx  eax,WORD PTR [r8+r11*1]
   14000fa3c:	mov    WORD PTR [r11],ax
   14000fa40:	lea    r11,[r11+0x2]
   14000fa44:	test   ax,ax
   14000fa47:	je     0x14000fa53
   14000fa49:	dec    r10
   14000fa4c:	je     0x14000fa53
   14000fa4e:	dec    r9
   14000fa51:	jne    0x14000fa37
   14000fa53:	test   r9,r9
   14000fa56:	jne    0x14000fa5c
   14000fa58:	mov    WORD PTR [r11],bx
   14000fa5c:	test   r10,r10
   14000fa5f:	jne    0x14000f9d3
   14000fa65:	cmp    r9,0xffffffffffffffff
   14000fa69:	jne    0x14000fa76
   14000fa6b:	mov    WORD PTR [rcx+rdx*2-0x2],bx
   14000fa70:	lea    eax,[r10+0x50]
   14000fa74:	jmp    0x14000fa06
   14000fa76:	mov    WORD PTR [rcx],bx
   14000fa79:	call   0x1400095b8
   14000fa7e:	mov    ebx,0x22
   14000fa83:	jmp    0x14000f9fd
   14000fa88:	rex push rbx
   14000fa8a:	push   rbp
   14000fa8b:	push   rsi
   14000fa8c:	push   rdi
   14000fa8d:	push   r12
   14000fa8f:	push   r14
   14000fa91:	push   r15
   14000fa93:	sub    rsp,0x50
   14000fa97:	mov    rax,QWORD PTR [rip+0x26fa2]        # 0x140036a40
   14000fa9e:	xor    rax,rsp
   14000faa1:	mov    QWORD PTR [rsp+0x48],rax
   14000faa6:	mov    r15,rcx
   14000faa9:	xor    ecx,ecx
   14000faab:	mov    ebp,r8d
   14000faae:	mov    r12,rdx
   14000fab1:	call   QWORD PTR [rip+0x175b9]        # 0x140027070
   14000fab7:	xor    edi,edi
   14000fab9:	mov    rsi,rax
   14000fabc:	call   0x140008d30
   14000fac1:	cmp    QWORD PTR [rip+0x28ee0],rdi        # 0x1400389a8
   14000fac8:	mov    r14d,eax
   14000facb:	jne    0x14000fbc9
   14000fad1:	lea    rcx,[rip+0x1e288]        # 0x14002dd60
   14000fad8:	xor    edx,edx
   14000fada:	mov    r8d,0x800
   14000fae0:	call   QWORD PTR [rip+0x176fa]        # 0x1400271e0
   14000fae6:	mov    rbx,rax
   14000fae9:	test   rax,rax
   14000faec:	jne    0x14000fb1b
   14000faee:	call   QWORD PTR [rip+0x1758c]        # 0x140027080
   14000faf4:	cmp    eax,0x57
   14000faf7:	jne    0x14000fcdd
   14000fafd:	lea    rcx,[rip+0x1e25c]        # 0x14002dd60
   14000fb04:	xor    r8d,r8d
   14000fb07:	xor    edx,edx
   14000fb09:	call   QWORD PTR [rip+0x176d1]        # 0x1400271e0
   14000fb0f:	mov    rbx,rax
   14000fb12:	test   rax,rax
   14000fb15:	je     0x14000fcdd
   14000fb1b:	lea    rdx,[rip+0x1e256]        # 0x14002dd78
   14000fb22:	mov    rcx,rbx
   14000fb25:	call   QWORD PTR [rip+0x1756d]        # 0x140027098
   14000fb2b:	test   rax,rax
   14000fb2e:	je     0x14000fcdd
   14000fb34:	mov    rcx,rax
   14000fb37:	call   QWORD PTR [rip+0x17533]        # 0x140027070
   14000fb3d:	lea    rdx,[rip+0x1e244]        # 0x14002dd88
   14000fb44:	mov    rcx,rbx
   14000fb47:	mov    QWORD PTR [rip+0x28e5a],rax        # 0x1400389a8
   14000fb4e:	call   QWORD PTR [rip+0x17544]        # 0x140027098
   14000fb54:	mov    rcx,rax
   14000fb57:	call   QWORD PTR [rip+0x17513]        # 0x140027070
   14000fb5d:	lea    rdx,[rip+0x1e234]        # 0x14002dd98
   14000fb64:	mov    rcx,rbx
   14000fb67:	mov    QWORD PTR [rip+0x28e42],rax        # 0x1400389b0
   14000fb6e:	call   QWORD PTR [rip+0x17524]        # 0x140027098
   14000fb74:	mov    rcx,rax
   14000fb77:	call   QWORD PTR [rip+0x174f3]        # 0x140027070
   14000fb7d:	lea    rdx,[rip+0x1e22c]        # 0x14002ddb0
   14000fb84:	mov    rcx,rbx
   14000fb87:	mov    QWORD PTR [rip+0x28e2a],rax        # 0x1400389b8
   14000fb8e:	call   QWORD PTR [rip+0x17504]        # 0x140027098
   14000fb94:	mov    rcx,rax
   14000fb97:	call   QWORD PTR [rip+0x174d3]        # 0x140027070
   14000fb9d:	mov    QWORD PTR [rip+0x28e24],rax        # 0x1400389c8
   14000fba4:	test   rax,rax
   14000fba7:	je     0x14000fbc9
   14000fba9:	lea    rdx,[rip+0x1e220]        # 0x14002ddd0
   14000fbb0:	mov    rcx,rbx
   14000fbb3:	call   QWORD PTR [rip+0x174df]        # 0x140027098
   14000fbb9:	mov    rcx,rax
   14000fbbc:	call   QWORD PTR [rip+0x174ae]        # 0x140027070
   14000fbc2:	mov    QWORD PTR [rip+0x28df7],rax        # 0x1400389c0
   14000fbc9:	call   QWORD PTR [rip+0x17531]        # 0x140027100
   14000fbcf:	test   eax,eax
   14000fbd1:	je     0x14000fbf0
   14000fbd3:	test   r15,r15
   14000fbd6:	je     0x14000fbe1
   14000fbd8:	mov    rcx,r15
   14000fbdb:	call   QWORD PTR [rip+0x176bf]        # 0x1400272a0
   14000fbe1:	test   r14d,r14d
   14000fbe4:	je     0x14000fc0c
   14000fbe6:	mov    eax,0x4
   14000fbeb:	jmp    0x14000fcdf
   14000fbf0:	test   r14d,r14d
   14000fbf3:	je     0x14000fc0c
   14000fbf5:	mov    rcx,QWORD PTR [rip+0x28dac]        # 0x1400389a8
   14000fbfc:	call   QWORD PTR [rip+0x17476]        # 0x140027078
   14000fc02:	mov    eax,0x3
   14000fc07:	jmp    0x14000fcdf
   14000fc0c:	mov    rcx,QWORD PTR [rip+0x28dad]        # 0x1400389c0
   14000fc13:	cmp    rcx,rsi
   14000fc16:	je     0x14000fc7b
   14000fc18:	cmp    QWORD PTR [rip+0x28da9],rsi        # 0x1400389c8
   14000fc1f:	je     0x14000fc7b
   14000fc21:	call   QWORD PTR [rip+0x17451]        # 0x140027078
   14000fc27:	mov    rcx,QWORD PTR [rip+0x28d9a]        # 0x1400389c8
   14000fc2e:	mov    rbx,rax
   14000fc31:	call   QWORD PTR [rip+0x17441]        # 0x140027078
   14000fc37:	mov    r14,rax
   14000fc3a:	test   rbx,rbx
   14000fc3d:	je     0x14000fc7b
   14000fc3f:	test   rax,rax
   14000fc42:	je     0x14000fc7b
   14000fc44:	call   rbx
   14000fc46:	test   rax,rax
   14000fc49:	je     0x14000fc75
   14000fc4b:	lea    rcx,[rsp+0x30]
   14000fc50:	mov    r9d,0xc
   14000fc56:	lea    r8,[rsp+0x38]
   14000fc5b:	mov    QWORD PTR [rsp+0x20],rcx
   14000fc60:	lea    edx,[r9-0xb]
   14000fc64:	mov    rcx,rax
   14000fc67:	call   r14
   14000fc6a:	test   eax,eax
   14000fc6c:	je     0x14000fc75
   14000fc6e:	test   BYTE PTR [rsp+0x40],0x1
   14000fc73:	jne    0x14000fc7b
   14000fc75:	bts    ebp,0x15
   14000fc79:	jmp    0x14000fcbb
   14000fc7b:	mov    rcx,QWORD PTR [rip+0x28d2e]        # 0x1400389b0
   14000fc82:	cmp    rcx,rsi
   14000fc85:	je     0x14000fcbb
   14000fc87:	call   QWORD PTR [rip+0x173eb]        # 0x140027078
   14000fc8d:	test   rax,rax
   14000fc90:	je     0x14000fcbb
   14000fc92:	call   rax
   14000fc94:	mov    rdi,rax
   14000fc97:	test   rax,rax
   14000fc9a:	je     0x14000fcbb
   14000fc9c:	mov    rcx,QWORD PTR [rip+0x28d15]        # 0x1400389b8
   14000fca3:	cmp    rcx,rsi
   14000fca6:	je     0x14000fcbb
   14000fca8:	call   QWORD PTR [rip+0x173ca]        # 0x140027078
   14000fcae:	test   rax,rax
   14000fcb1:	je     0x14000fcbb
   14000fcb3:	mov    rcx,rdi
   14000fcb6:	call   rax
   14000fcb8:	mov    rdi,rax
   14000fcbb:	mov    rcx,QWORD PTR [rip+0x28ce6]        # 0x1400389a8
   14000fcc2:	call   QWORD PTR [rip+0x173b0]        # 0x140027078
   14000fcc8:	test   rax,rax
   14000fccb:	je     0x14000fcdd
   14000fccd:	mov    r9d,ebp
   14000fcd0:	mov    r8,r12
   14000fcd3:	mov    rdx,r15
   14000fcd6:	mov    rcx,rdi
   14000fcd9:	call   rax
   14000fcdb:	jmp    0x14000fcdf
   14000fcdd:	xor    eax,eax
   14000fcdf:	mov    rcx,QWORD PTR [rsp+0x48]
   14000fce4:	xor    rcx,rsp
   14000fce7:	call   0x14000d0a0
   14000fcec:	add    rsp,0x50
   14000fcf0:	pop    r15
   14000fcf2:	pop    r14
   14000fcf4:	pop    r12
   14000fcf6:	pop    rdi
   14000fcf7:	pop    rsi
   14000fcf8:	pop    rbp
   14000fcf9:	pop    rbx
   14000fcfa:	ret    
   14000fcfb:	int3   
   14000fcfc:	rex push rbx
   14000fcfe:	sub    rsp,0x20
   14000fd02:	mov    r9d,DWORD PTR [rcx+0x18]
   14000fd06:	mov    r8,QWORD PTR [rcx+0x10]
   14000fd0a:	mov    rdx,QWORD PTR [rcx+0x8]
   14000fd0e:	mov    rbx,rcx
   14000fd11:	xor    ecx,ecx
   14000fd13:	call   QWORD PTR [rbx]
   14000fd15:	mov    DWORD PTR [rbx+0x1c],eax
   14000fd18:	xor    eax,eax
   14000fd1a:	add    rsp,0x20
   14000fd1e:	pop    rbx
   14000fd1f:	ret    
   14000fd20:	mov    ecx,0x2
   14000fd25:	jmp    0x140005ff4
   14000fd2a:	int3   
   14000fd2b:	int3   
   14000fd2c:	lock inc DWORD PTR [rcx]
   14000fd2f:	mov    rax,QWORD PTR [rcx+0xd8]
   14000fd36:	test   rax,rax
   14000fd39:	je     0x14000fd3e
   14000fd3b:	lock inc DWORD PTR [rax]
   14000fd3e:	mov    rax,QWORD PTR [rcx+0xe8]
   14000fd45:	test   rax,rax
   14000fd48:	je     0x14000fd4d
   14000fd4a:	lock inc DWORD PTR [rax]
   14000fd4d:	mov    rax,QWORD PTR [rcx+0xe0]
   14000fd54:	test   rax,rax
   14000fd57:	je     0x14000fd5c
   14000fd59:	lock inc DWORD PTR [rax]
   14000fd5c:	mov    rax,QWORD PTR [rcx+0xf8]
   14000fd63:	test   rax,rax
   14000fd66:	je     0x14000fd6b
   14000fd68:	lock inc DWORD PTR [rax]
   14000fd6b:	lea    rax,[rcx+0x28]
   14000fd6f:	mov    r8d,0x6
   14000fd75:	lea    rdx,[rip+0x26d38]        # 0x140036ab4
   14000fd7c:	cmp    QWORD PTR [rax-0x10],rdx
   14000fd80:	je     0x14000fd8d
   14000fd82:	mov    rdx,QWORD PTR [rax]
   14000fd85:	test   rdx,rdx
   14000fd88:	je     0x14000fd8d
   14000fd8a:	lock inc DWORD PTR [rdx]
   14000fd8d:	cmp    QWORD PTR [rax-0x18],0x0
   14000fd92:	je     0x14000fda0
   14000fd94:	mov    rdx,QWORD PTR [rax-0x8]
   14000fd98:	test   rdx,rdx
   14000fd9b:	je     0x14000fda0
   14000fd9d:	lock inc DWORD PTR [rdx]
   14000fda0:	add    rax,0x20
   14000fda4:	dec    r8
   14000fda7:	jne    0x14000fd75
   14000fda9:	mov    rax,QWORD PTR [rcx+0x120]
   14000fdb0:	lock inc DWORD PTR [rax+0x15c]
   14000fdb7:	ret    
   14000fdb8:	mov    QWORD PTR [rsp+0x8],rbx
   14000fdbd:	mov    QWORD PTR [rsp+0x10],rbp
   14000fdc2:	mov    QWORD PTR [rsp+0x18],rsi
   14000fdc7:	push   rdi
   14000fdc8:	sub    rsp,0x20
   14000fdcc:	mov    rax,QWORD PTR [rcx+0xf0]
   14000fdd3:	mov    rbx,rcx
   14000fdd6:	test   rax,rax
   14000fdd9:	je     0x14000fe54
   14000fddb:	lea    rcx,[rip+0x276be]        # 0x1400374a0
   14000fde2:	cmp    rax,rcx
   14000fde5:	je     0x14000fe54
   14000fde7:	mov    rax,QWORD PTR [rbx+0xd8]
   14000fdee:	test   rax,rax
   14000fdf1:	je     0x14000fe54
   14000fdf3:	cmp    DWORD PTR [rax],0x0
   14000fdf6:	jne    0x14000fe54
   14000fdf8:	mov    rcx,QWORD PTR [rbx+0xe8]
   14000fdff:	test   rcx,rcx
   14000fe02:	je     0x14000fe1a
   14000fe04:	cmp    DWORD PTR [rcx],0x0
   14000fe07:	jne    0x14000fe1a
   14000fe09:	call   0x140006444
   14000fe0e:	mov    rcx,QWORD PTR [rbx+0xf0]
   14000fe15:	call   0x140019dd0
   14000fe1a:	mov    rcx,QWORD PTR [rbx+0xe0]
   14000fe21:	test   rcx,rcx
   14000fe24:	je     0x14000fe3c
   14000fe26:	cmp    DWORD PTR [rcx],0x0
   14000fe29:	jne    0x14000fe3c
   14000fe2b:	call   0x140006444
   14000fe30:	mov    rcx,QWORD PTR [rbx+0xf0]
   14000fe37:	call   0x14001a418
   14000fe3c:	mov    rcx,QWORD PTR [rbx+0xd8]
   14000fe43:	call   0x140006444
   14000fe48:	mov    rcx,QWORD PTR [rbx+0xf0]
   14000fe4f:	call   0x140006444
   14000fe54:	mov    rax,QWORD PTR [rbx+0xf8]
   14000fe5b:	test   rax,rax
   14000fe5e:	je     0x14000fea7
   14000fe60:	cmp    DWORD PTR [rax],0x0
   14000fe63:	jne    0x14000fea7
   14000fe65:	mov    rcx,QWORD PTR [rbx+0x100]
   14000fe6c:	sub    rcx,0xfe
   14000fe73:	call   0x140006444
   14000fe78:	mov    rcx,QWORD PTR [rbx+0x110]
   14000fe7f:	mov    edi,0x80
   14000fe84:	sub    rcx,rdi
   14000fe87:	call   0x140006444
   14000fe8c:	mov    rcx,QWORD PTR [rbx+0x118]
   14000fe93:	sub    rcx,rdi
   14000fe96:	call   0x140006444
   14000fe9b:	mov    rcx,QWORD PTR [rbx+0xf8]
   14000fea2:	call   0x140006444
   14000fea7:	mov    rcx,QWORD PTR [rbx+0x120]
   14000feae:	lea    rax,[rip+0x26c0b]        # 0x140036ac0
   14000feb5:	cmp    rcx,rax
   14000feb8:	je     0x14000fed4
   14000feba:	cmp    DWORD PTR [rcx+0x15c],0x0
   14000fec1:	jne    0x14000fed4
   14000fec3:	call   0x14001a788
   14000fec8:	mov    rcx,QWORD PTR [rbx+0x120]
   14000fecf:	call   0x140006444
   14000fed4:	lea    rsi,[rbx+0x128]
   14000fedb:	lea    rdi,[rbx+0x28]
   14000fedf:	mov    ebp,0x6
   14000fee4:	lea    rax,[rip+0x26bc9]        # 0x140036ab4
   14000feeb:	cmp    QWORD PTR [rdi-0x10],rax
   14000feef:	je     0x14000ff0b
   14000fef1:	mov    rcx,QWORD PTR [rdi]
   14000fef4:	test   rcx,rcx
   14000fef7:	je     0x14000ff0b
   14000fef9:	cmp    DWORD PTR [rcx],0x0
   14000fefc:	jne    0x14000ff0b
   14000fefe:	call   0x140006444
   14000ff03:	mov    rcx,QWORD PTR [rsi]
   14000ff06:	call   0x140006444
   14000ff0b:	cmp    QWORD PTR [rdi-0x18],0x0
   14000ff10:	je     0x14000ff25
   14000ff12:	mov    rcx,QWORD PTR [rdi-0x8]
   14000ff16:	test   rcx,rcx
   14000ff19:	je     0x14000ff25
   14000ff1b:	cmp    DWORD PTR [rcx],0x0
   14000ff1e:	jne    0x14000ff25
   14000ff20:	call   0x140006444
   14000ff25:	add    rsi,0x8
   14000ff29:	add    rdi,0x20
   14000ff2d:	dec    rbp
   14000ff30:	jne    0x14000fee4
   14000ff32:	mov    rcx,rbx
   14000ff35:	mov    rbx,QWORD PTR [rsp+0x30]
   14000ff3a:	mov    rbp,QWORD PTR [rsp+0x38]
   14000ff3f:	mov    rsi,QWORD PTR [rsp+0x40]
   14000ff44:	add    rsp,0x20
   14000ff48:	pop    rdi
   14000ff49:	jmp    0x140006444
   14000ff4e:	int3   
   14000ff4f:	int3   
   14000ff50:	test   rcx,rcx
   14000ff53:	je     0x14000fff0
   14000ff59:	or     r9d,0xffffffff
   14000ff5d:	lock add DWORD PTR [rcx],r9d
   14000ff61:	mov    rax,QWORD PTR [rcx+0xd8]
   14000ff68:	test   rax,rax
   14000ff6b:	je     0x14000ff71
   14000ff6d:	lock add DWORD PTR [rax],r9d
   14000ff71:	mov    rax,QWORD PTR [rcx+0xe8]
   14000ff78:	test   rax,rax
   14000ff7b:	je     0x14000ff81
   14000ff7d:	lock add DWORD PTR [rax],r9d
   14000ff81:	mov    rax,QWORD PTR [rcx+0xe0]
   14000ff88:	test   rax,rax
   14000ff8b:	je     0x14000ff91
   14000ff8d:	lock add DWORD PTR [rax],r9d
   14000ff91:	mov    rax,QWORD PTR [rcx+0xf8]
   14000ff98:	test   rax,rax
   14000ff9b:	je     0x14000ffa1
   14000ff9d:	lock add DWORD PTR [rax],r9d
   14000ffa1:	lea    rax,[rcx+0x28]
   14000ffa5:	mov    r8d,0x6
   14000ffab:	lea    rdx,[rip+0x26b02]        # 0x140036ab4
   14000ffb2:	cmp    QWORD PTR [rax-0x10],rdx
   14000ffb6:	je     0x14000ffc4
   14000ffb8:	mov    rdx,QWORD PTR [rax]
   14000ffbb:	test   rdx,rdx
   14000ffbe:	je     0x14000ffc4
   14000ffc0:	lock add DWORD PTR [rdx],r9d
   14000ffc4:	cmp    QWORD PTR [rax-0x18],0x0
   14000ffc9:	je     0x14000ffd8
   14000ffcb:	mov    rdx,QWORD PTR [rax-0x8]
   14000ffcf:	test   rdx,rdx
   14000ffd2:	je     0x14000ffd8
   14000ffd4:	lock add DWORD PTR [rdx],r9d
   14000ffd8:	add    rax,0x20
   14000ffdc:	dec    r8
   14000ffdf:	jne    0x14000ffab
   14000ffe1:	mov    rax,QWORD PTR [rcx+0x120]
   14000ffe8:	lock add DWORD PTR [rax+0x15c],r9d
   14000fff0:	mov    rax,rcx
   14000fff3:	ret    
   14000fff4:	rex push rbx
   14000fff6:	sub    rsp,0x20
   14000fffa:	call   0x14000b18c
   14000ffff:	mov    rbx,rax
   140010002:	mov    ecx,DWORD PTR [rip+0x26ef0]        # 0x140036ef8
   140010008:	test   DWORD PTR [rax+0xc8],ecx
   14001000e:	je     0x140010028
   140010010:	cmp    QWORD PTR [rax+0xc0],0x0
   140010018:	je     0x140010028
   14001001a:	call   0x14000b18c
   14001001f:	mov    rbx,QWORD PTR [rax+0xc0]
   140010026:	jmp    0x140010053
   140010028:	mov    ecx,0xc
   14001002d:	call   0x140008760
   140010032:	nop
   140010033:	lea    rcx,[rbx+0xc0]
   14001003a:	mov    rdx,QWORD PTR [rip+0x26d3f]        # 0x140036d80
   140010041:	call   0x14001006c
   140010046:	mov    rbx,rax
   140010049:	mov    ecx,0xc
   14001004e:	call   0x14000897c
   140010053:	test   rbx,rbx
   140010056:	jne    0x140010060
   140010058:	lea    ecx,[rbx+0x20]
   14001005b:	call   0x140005ff4
   140010060:	mov    rax,rbx
   140010063:	add    rsp,0x20
   140010067:	pop    rbx
   140010068:	ret    
   140010069:	int3   
   14001006a:	int3   
   14001006b:	int3   
   14001006c:	mov    QWORD PTR [rsp+0x8],rbx
   140010071:	push   rdi
   140010072:	sub    rsp,0x20
   140010076:	mov    rdi,rdx
   140010079:	test   rdx,rdx
   14001007c:	je     0x1400100c1
   14001007e:	test   rcx,rcx
   140010081:	je     0x1400100c1
   140010083:	mov    rbx,QWORD PTR [rcx]
   140010086:	cmp    rbx,rdx
   140010089:	je     0x1400100bc
   14001008b:	mov    QWORD PTR [rcx],rdx
   14001008e:	mov    rcx,rdx
   140010091:	call   0x14000fd2c
   140010096:	test   rbx,rbx
   140010099:	je     0x1400100bc
   14001009b:	mov    rcx,rbx
   14001009e:	call   0x14000ff50
   1400100a3:	cmp    DWORD PTR [rbx],0x0
   1400100a6:	jne    0x1400100bc
   1400100a8:	lea    rax,[rip+0x26ce1]        # 0x140036d90
   1400100af:	cmp    rbx,rax
   1400100b2:	je     0x1400100bc
   1400100b4:	mov    rcx,rbx
   1400100b7:	call   0x14000fdb8
   1400100bc:	mov    rax,rdi
   1400100bf:	jmp    0x1400100c3
   1400100c1:	xor    eax,eax
   1400100c3:	mov    rbx,QWORD PTR [rsp+0x30]
   1400100c8:	add    rsp,0x20
   1400100cc:	pop    rdi
   1400100cd:	ret    
   1400100ce:	int3   
   1400100cf:	int3   
   1400100d0:	rex push rbp
   1400100d2:	push   r12
   1400100d4:	push   r13
   1400100d6:	push   r14
   1400100d8:	push   r15
   1400100da:	sub    rsp,0x50
   1400100de:	lea    rbp,[rsp+0x40]
   1400100e3:	mov    QWORD PTR [rbp+0x40],rbx
   1400100e7:	mov    QWORD PTR [rbp+0x48],rsi
   1400100eb:	mov    QWORD PTR [rbp+0x50],rdi
   1400100ef:	mov    rax,QWORD PTR [rip+0x2694a]        # 0x140036a40
   1400100f6:	xor    rax,rbp
   1400100f9:	mov    QWORD PTR [rbp+0x8],rax
   1400100fd:	mov    ebx,DWORD PTR [rbp+0x60]
   140010100:	xor    edi,edi
   140010102:	mov    r12,r9
   140010105:	mov    r13d,r8d
   140010108:	mov    QWORD PTR [rbp+0x0],rdx
   14001010c:	test   ebx,ebx
   14001010e:	jle    0x14001013a
   140010110:	mov    r10d,ebx
   140010113:	mov    rax,r9
   140010116:	dec    r10d
   140010119:	cmp    BYTE PTR [rax],dil
   14001011c:	je     0x14001012a
   14001011e:	inc    rax
   140010121:	test   r10d,r10d
   140010124:	jne    0x140010116
   140010126:	or     r10d,0xffffffff
   14001012a:	mov    eax,ebx
   14001012c:	sub    eax,r10d
   14001012f:	dec    eax
   140010131:	cmp    eax,ebx
   140010133:	lea    ebx,[rax+0x1]
   140010136:	jl     0x14001013a
   140010138:	mov    ebx,eax
   14001013a:	mov    r14d,DWORD PTR [rbp+0x78]
   14001013e:	mov    esi,edi
   140010140:	test   r14d,r14d
   140010143:	jne    0x14001014c
   140010145:	mov    rax,QWORD PTR [rcx]
   140010148:	mov    r14d,DWORD PTR [rax+0x4]
   14001014c:	neg    DWORD PTR [rbp+0x80]
   140010152:	mov    r9d,ebx
   140010155:	mov    r8,r12
   140010158:	sbb    edx,edx
   14001015a:	mov    ecx,r14d
   14001015d:	mov    DWORD PTR [rsp+0x28],edi
   140010161:	and    edx,0x8
   140010164:	mov    QWORD PTR [rsp+0x20],rdi
   140010169:	inc    edx
   14001016b:	call   QWORD PTR [rip+0x16f37]        # 0x1400270a8
   140010171:	movsxd r15,eax
   140010174:	test   eax,eax
   140010176:	jne    0x14001017f
   140010178:	xor    eax,eax
   14001017a:	jmp    0x140010396
   14001017f:	movabs r9,0xffffffffffffff0
   140010189:	test   eax,eax
   14001018b:	jle    0x1400101fb
   14001018d:	xor    edx,edx
   14001018f:	lea    rax,[rdx-0x20]
   140010193:	div    r15
   140010196:	cmp    rax,0x2
   14001019a:	jb     0x1400101fb
   14001019c:	lea    rcx,[r15+r15*1]
   1400101a0:	lea    rax,[rcx+0x10]
   1400101a4:	cmp    rax,rcx
   1400101a7:	jbe    0x1400101fb
   1400101a9:	lea    rcx,[r15*2+0x10]
   1400101b1:	cmp    rcx,0x400
   1400101b8:	ja     0x1400101e4
   1400101ba:	lea    rax,[rcx+0xf]
   1400101be:	cmp    rax,rcx
   1400101c1:	ja     0x1400101c6
   1400101c3:	mov    rax,r9
   1400101c6:	and    rax,0xfffffffffffffff0
   1400101ca:	call   0x140019d60
   1400101cf:	sub    rsp,rax
   1400101d2:	lea    rdi,[rsp+0x40]
   1400101d7:	test   rdi,rdi
   1400101da:	je     0x140010178
   1400101dc:	mov    DWORD PTR [rdi],0xcccc
   1400101e2:	jmp    0x1400101f7
   1400101e4:	call   0x1400064d4
   1400101e9:	mov    rdi,rax
   1400101ec:	test   rax,rax
   1400101ef:	je     0x1400101fb
   1400101f1:	mov    DWORD PTR [rax],0xdddd
   1400101f7:	add    rdi,0x10
   1400101fb:	test   rdi,rdi
   1400101fe:	je     0x140010178
   140010204:	mov    r9d,ebx
   140010207:	mov    r8,r12
   14001020a:	mov    edx,0x1
   14001020f:	mov    ecx,r14d
   140010212:	mov    DWORD PTR [rsp+0x28],r15d
   140010217:	mov    QWORD PTR [rsp+0x20],rdi
   14001021c:	call   QWORD PTR [rip+0x16e86]        # 0x1400270a8
   140010222:	test   eax,eax
   140010224:	je     0x140010383
   14001022a:	mov    r12,QWORD PTR [rbp+0x0]
   14001022e:	and    DWORD PTR [rsp+0x28],esi
   140010232:	and    QWORD PTR [rsp+0x20],rsi
   140010237:	mov    rcx,r12
   14001023a:	mov    r9d,r15d
   14001023d:	mov    r8,rdi
   140010240:	mov    edx,r13d
   140010243:	call   0x14000f5e8
   140010248:	movsxd rsi,eax
   14001024b:	test   eax,eax
   14001024d:	je     0x140010383
   140010253:	mov    r9d,0x400
   140010259:	test   r9d,r13d
   14001025c:	je     0x140010294
   14001025e:	mov    ecx,DWORD PTR [rbp+0x70]
   140010261:	test   ecx,ecx
   140010263:	je     0x140010383
   140010269:	cmp    esi,ecx
   14001026b:	jg     0x140010383
   140010271:	mov    rax,QWORD PTR [rbp+0x68]
   140010275:	mov    DWORD PTR [rsp+0x28],ecx
   140010279:	mov    r9d,r15d
   14001027c:	mov    r8,rdi
   14001027f:	mov    edx,r13d
   140010282:	mov    rcx,r12
   140010285:	mov    QWORD PTR [rsp+0x20],rax
   14001028a:	call   0x14000f5e8
   14001028f:	jmp    0x140010383
   140010294:	test   eax,eax
   140010296:	jle    0x14001030f
   140010298:	xor    edx,edx
   14001029a:	lea    rax,[rdx-0x20]
   14001029e:	div    rsi
   1400102a1:	cmp    rax,0x2
   1400102a5:	jb     0x14001030f
   1400102a7:	lea    rcx,[rsi+rsi*1]
   1400102ab:	lea    rax,[rcx+0x10]
   1400102af:	cmp    rax,rcx
   1400102b2:	jbe    0x14001030f
   1400102b4:	lea    rcx,[rsi*2+0x10]
   1400102bc:	cmp    rcx,r9
   1400102bf:	ja     0x1400102f6
   1400102c1:	lea    rax,[rcx+0xf]
   1400102c5:	cmp    rax,rcx
   1400102c8:	ja     0x1400102d4
   1400102ca:	movabs rax,0xffffffffffffff0
   1400102d4:	and    rax,0xfffffffffffffff0
   1400102d8:	call   0x140019d60
   1400102dd:	sub    rsp,rax
   1400102e0:	lea    rbx,[rsp+0x40]
   1400102e5:	test   rbx,rbx
   1400102e8:	je     0x140010383
   1400102ee:	mov    DWORD PTR [rbx],0xcccc
   1400102f4:	jmp    0x140010309
   1400102f6:	call   0x1400064d4
   1400102fb:	mov    rbx,rax
   1400102fe:	test   rax,rax
   140010301:	je     0x140010311
   140010303:	mov    DWORD PTR [rax],0xdddd
   140010309:	add    rbx,0x10
   14001030d:	jmp    0x140010311
   14001030f:	xor    ebx,ebx
   140010311:	test   rbx,rbx
   140010314:	je     0x140010383
   140010316:	mov    r9d,r15d
   140010319:	mov    r8,rdi
   14001031c:	mov    edx,r13d
   14001031f:	mov    rcx,r12
   140010322:	mov    DWORD PTR [rsp+0x28],esi
   140010326:	mov    QWORD PTR [rsp+0x20],rbx
   14001032b:	call   0x14000f5e8
   140010330:	xor    ecx,ecx
   140010332:	test   eax,eax
   140010334:	je     0x140010372
   140010336:	mov    eax,DWORD PTR [rbp+0x70]
   140010339:	xor    edx,edx
   14001033b:	mov    QWORD PTR [rsp+0x38],rcx
   140010340:	mov    r9d,esi
   140010343:	mov    r8,rbx
   140010346:	mov    QWORD PTR [rsp+0x30],rcx
   14001034b:	test   eax,eax
   14001034d:	jne    0x14001035a
   14001034f:	mov    DWORD PTR [rsp+0x28],ecx
   140010353:	mov    QWORD PTR [rsp+0x20],rcx
   140010358:	jmp    0x140010367
   14001035a:	mov    DWORD PTR [rsp+0x28],eax
   14001035e:	mov    rax,QWORD PTR [rbp+0x68]
   140010362:	mov    QWORD PTR [rsp+0x20],rax
   140010367:	mov    ecx,r14d
   14001036a:	call   QWORD PTR [rip+0x16d40]        # 0x1400270b0
   140010370:	mov    esi,eax
   140010372:	lea    rcx,[rbx-0x10]
   140010376:	cmp    DWORD PTR [rcx],0xdddd
   14001037c:	jne    0x140010383
   14001037e:	call   0x140006444
   140010383:	lea    rcx,[rdi-0x10]
   140010387:	cmp    DWORD PTR [rcx],0xdddd
   14001038d:	jne    0x140010394
   14001038f:	call   0x140006444
   140010394:	mov    eax,esi
   140010396:	mov    rcx,QWORD PTR [rbp+0x8]
   14001039a:	xor    rcx,rbp
   14001039d:	call   0x14000d0a0
   1400103a2:	mov    rbx,QWORD PTR [rbp+0x40]
   1400103a6:	mov    rsi,QWORD PTR [rbp+0x48]
   1400103aa:	mov    rdi,QWORD PTR [rbp+0x50]
   1400103ae:	lea    rsp,[rbp+0x10]
   1400103b2:	pop    r15
   1400103b4:	pop    r14
   1400103b6:	pop    r13
   1400103b8:	pop    r12
   1400103ba:	pop    rbp
   1400103bb:	ret    
   1400103bc:	mov    eax,edx
   1400103be:	test   edx,edx
   1400103c0:	je     0x1400103d0
   1400103c2:	dec    eax
   1400103c4:	cmp    BYTE PTR [rcx],0x0
   1400103c7:	je     0x1400103d2
   1400103c9:	inc    rcx
   1400103cc:	test   eax,eax
   1400103ce:	jne    0x1400103c2
   1400103d0:	dec    eax
   1400103d2:	sub    edx,eax
   1400103d4:	lea    eax,[rdx-0x1]
   1400103d7:	ret    
   1400103d8:	mov    QWORD PTR [rsp+0x8],rbx
   1400103dd:	mov    QWORD PTR [rsp+0x10],rsi
   1400103e2:	push   rdi
   1400103e3:	sub    rsp,0x70
   1400103e7:	mov    rsi,rdx
   1400103ea:	mov    rdx,rcx
   1400103ed:	lea    rcx,[rsp+0x50]
   1400103f2:	mov    rbx,r9
   1400103f5:	mov    edi,r8d
   1400103f8:	call   0x14000a000
   1400103fd:	mov    eax,DWORD PTR [rsp+0xc0]
   140010404:	lea    rcx,[rsp+0x50]
   140010409:	mov    r9,rbx
   14001040c:	mov    DWORD PTR [rsp+0x40],eax
   140010410:	mov    eax,DWORD PTR [rsp+0xb8]
   140010417:	mov    r8d,edi
   14001041a:	mov    DWORD PTR [rsp+0x38],eax
   14001041e:	mov    eax,DWORD PTR [rsp+0xb0]
   140010425:	mov    rdx,rsi
   140010428:	mov    DWORD PTR [rsp+0x30],eax
   14001042c:	mov    rax,QWORD PTR [rsp+0xa8]
   140010434:	mov    QWORD PTR [rsp+0x28],rax
   140010439:	mov    eax,DWORD PTR [rsp+0xa0]
   140010440:	mov    DWORD PTR [rsp+0x20],eax
   140010444:	call   0x1400100d0
   140010449:	cmp    BYTE PTR [rsp+0x68],0x0
   14001044e:	je     0x14001045c
   140010450:	mov    rcx,QWORD PTR [rsp+0x60]
   140010455:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14001045c:	lea    r11,[rsp+0x70]
   140010461:	mov    rbx,QWORD PTR [r11+0x10]
   140010465:	mov    rsi,QWORD PTR [r11+0x18]
   140010469:	mov    rsp,r11
   14001046c:	pop    rdi
   14001046d:	ret    
   14001046e:	int3   
   14001046f:	int3   
   140010470:	rex push rbp
   140010472:	push   r12
   140010474:	push   r13
   140010476:	push   r14
   140010478:	push   r15
   14001047a:	sub    rsp,0x40
   14001047e:	lea    rbp,[rsp+0x30]
   140010483:	mov    QWORD PTR [rbp+0x40],rbx
   140010487:	mov    QWORD PTR [rbp+0x48],rsi
   14001048b:	mov    QWORD PTR [rbp+0x50],rdi
   14001048f:	mov    rax,QWORD PTR [rip+0x265aa]        # 0x140036a40
   140010496:	xor    rax,rbp
   140010499:	mov    QWORD PTR [rbp+0x0],rax
   14001049d:	mov    r14d,DWORD PTR [rbp+0x68]
   1400104a1:	xor    edi,edi
   1400104a3:	mov    r15d,r9d
   1400104a6:	mov    r12,r8
   1400104a9:	mov    r13d,edx
   1400104ac:	test   r14d,r14d
   1400104af:	jne    0x1400104b8
   1400104b1:	mov    rax,QWORD PTR [rcx]
   1400104b4:	mov    r14d,DWORD PTR [rax+0x4]
   1400104b8:	neg    DWORD PTR [rbp+0x70]
   1400104bb:	mov    ecx,r14d
   1400104be:	mov    DWORD PTR [rsp+0x28],edi
   1400104c2:	sbb    edx,edx
   1400104c4:	mov    QWORD PTR [rsp+0x20],rdi
   1400104c9:	and    edx,0x8
   1400104cc:	inc    edx
   1400104ce:	call   QWORD PTR [rip+0x16bd4]        # 0x1400270a8
   1400104d4:	movsxd rsi,eax
   1400104d7:	test   eax,eax
   1400104d9:	jne    0x1400104e2
   1400104db:	xor    eax,eax
   1400104dd:	jmp    0x1400105c0
   1400104e2:	jle    0x14001055b
   1400104e4:	movabs rax,0x7ffffffffffffff0
   1400104ee:	cmp    rsi,rax
   1400104f1:	ja     0x14001055b
   1400104f3:	lea    rcx,[rsi+rsi*1]
   1400104f7:	lea    rax,[rcx+0x10]
   1400104fb:	cmp    rax,rcx
   1400104fe:	jbe    0x14001055b
   140010500:	lea    rcx,[rsi*2+0x10]
   140010508:	cmp    rcx,0x400
   14001050f:	ja     0x140010542
   140010511:	lea    rax,[rcx+0xf]
   140010515:	cmp    rax,rcx
   140010518:	ja     0x140010524
   14001051a:	movabs rax,0xffffffffffffff0
   140010524:	and    rax,0xfffffffffffffff0
   140010528:	call   0x140019d60
   14001052d:	sub    rsp,rax
   140010530:	lea    rbx,[rsp+0x30]
   140010535:	test   rbx,rbx
   140010538:	je     0x1400104db
   14001053a:	mov    DWORD PTR [rbx],0xcccc
   140010540:	jmp    0x140010555
   140010542:	call   0x1400064d4
   140010547:	mov    rbx,rax
   14001054a:	test   rax,rax
   14001054d:	je     0x14001055e
   14001054f:	mov    DWORD PTR [rax],0xdddd
   140010555:	add    rbx,0x10
   140010559:	jmp    0x14001055e
   14001055b:	mov    rbx,rdi
   14001055e:	test   rbx,rbx
   140010561:	je     0x1400104db
   140010567:	mov    r8,rsi
   14001056a:	xor    edx,edx
   14001056c:	mov    rcx,rbx
   14001056f:	add    r8,r8
   140010572:	call   0x140007150
   140010577:	mov    r9d,r15d
   14001057a:	mov    r8,r12
   14001057d:	mov    edx,0x1
   140010582:	mov    ecx,r14d
   140010585:	mov    DWORD PTR [rsp+0x28],esi
   140010589:	mov    QWORD PTR [rsp+0x20],rbx
   14001058e:	call   QWORD PTR [rip+0x16b14]        # 0x1400270a8
   140010594:	test   eax,eax
   140010596:	je     0x1400105ad
   140010598:	mov    r9,QWORD PTR [rbp+0x60]
   14001059c:	mov    r8d,eax
   14001059f:	mov    rdx,rbx
   1400105a2:	mov    ecx,r13d
   1400105a5:	call   QWORD PTR [rip+0x16cfd]        # 0x1400272a8
   1400105ab:	mov    edi,eax
   1400105ad:	lea    rcx,[rbx-0x10]
   1400105b1:	cmp    DWORD PTR [rcx],0xdddd
   1400105b7:	jne    0x1400105be
   1400105b9:	call   0x140006444
   1400105be:	mov    eax,edi
   1400105c0:	mov    rcx,QWORD PTR [rbp+0x0]
   1400105c4:	xor    rcx,rbp
   1400105c7:	call   0x14000d0a0
   1400105cc:	mov    rbx,QWORD PTR [rbp+0x40]
   1400105d0:	mov    rsi,QWORD PTR [rbp+0x48]
   1400105d4:	mov    rdi,QWORD PTR [rbp+0x50]
   1400105d8:	lea    rsp,[rbp+0x10]
   1400105dc:	pop    r15
   1400105de:	pop    r14
   1400105e0:	pop    r13
   1400105e2:	pop    r12
   1400105e4:	pop    rbp
   1400105e5:	ret    
   1400105e6:	int3   
   1400105e7:	int3   
   1400105e8:	mov    QWORD PTR [rsp+0x8],rbx
   1400105ed:	mov    QWORD PTR [rsp+0x10],rsi
   1400105f2:	push   rdi
   1400105f3:	sub    rsp,0x60
   1400105f7:	mov    esi,edx
   1400105f9:	mov    rdx,rcx
   1400105fc:	lea    rcx,[rsp+0x40]
   140010601:	mov    ebx,r9d
   140010604:	mov    rdi,r8
   140010607:	call   0x14000a000
   14001060c:	mov    eax,DWORD PTR [rsp+0xa0]
   140010613:	lea    rcx,[rsp+0x40]
   140010618:	mov    r9d,ebx
   14001061b:	mov    DWORD PTR [rsp+0x30],eax
   14001061f:	mov    eax,DWORD PTR [rsp+0x98]
   140010626:	mov    r8,rdi
   140010629:	mov    DWORD PTR [rsp+0x28],eax
   14001062d:	mov    rax,QWORD PTR [rsp+0x90]
   140010635:	mov    edx,esi
   140010637:	mov    QWORD PTR [rsp+0x20],rax
   14001063c:	call   0x140010470
   140010641:	cmp    BYTE PTR [rsp+0x58],0x0
   140010646:	je     0x140010654
   140010648:	mov    rcx,QWORD PTR [rsp+0x50]
   14001064d:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140010654:	mov    rbx,QWORD PTR [rsp+0x70]
   140010659:	mov    rsi,QWORD PTR [rsp+0x78]
   14001065e:	add    rsp,0x60
   140010662:	pop    rdi
   140010663:	ret    
   140010664:	mov    QWORD PTR [rsp+0x8],rbx
   140010669:	push   rdi
   14001066a:	sub    rsp,0x20
   14001066e:	mov    eax,DWORD PTR [rip+0x289c4]        # 0x140039038
   140010674:	xor    ebx,ebx
   140010676:	mov    edi,0x14
   14001067b:	test   eax,eax
   14001067d:	jne    0x140010686
   14001067f:	mov    eax,0x200
   140010684:	jmp    0x14001068b
   140010686:	cmp    eax,edi
   140010688:	cmovl  eax,edi
   14001068b:	movsxd rcx,eax
   14001068e:	mov    edx,0x8
   140010693:	mov    DWORD PTR [rip+0x2899f],eax        # 0x140039038
   140010699:	call   0x140007ed4
   14001069e:	mov    QWORD PTR [rip+0x2898b],rax        # 0x140039030
   1400106a5:	test   rax,rax
   1400106a8:	jne    0x1400106ce
   1400106aa:	lea    edx,[rax+0x8]
   1400106ad:	mov    rcx,rdi
   1400106b0:	mov    DWORD PTR [rip+0x28982],edi        # 0x140039038
   1400106b6:	call   0x140007ed4
   1400106bb:	mov    QWORD PTR [rip+0x2896e],rax        # 0x140039030
   1400106c2:	test   rax,rax
   1400106c5:	jne    0x1400106ce
   1400106c7:	mov    eax,0x1a
   1400106cc:	jmp    0x1400106f1
   1400106ce:	lea    rcx,[rip+0x2682b]        # 0x140036f00
   1400106d5:	mov    QWORD PTR [rbx+rax*1],rcx
   1400106d9:	add    rcx,0x30
   1400106dd:	lea    rbx,[rbx+0x8]
   1400106e1:	dec    rdi
   1400106e4:	je     0x1400106ef
   1400106e6:	mov    rax,QWORD PTR [rip+0x28943]        # 0x140039030
   1400106ed:	jmp    0x1400106d5
   1400106ef:	xor    eax,eax
   1400106f1:	mov    rbx,QWORD PTR [rsp+0x30]
   1400106f6:	add    rsp,0x20
   1400106fa:	pop    rdi
   1400106fb:	ret    
   1400106fc:	sub    rsp,0x28
   140010700:	call   0x140010990
   140010705:	cmp    BYTE PTR [rip+0x27628],0x0        # 0x140037d34
   14001070c:	je     0x140010713
   14001070e:	call   0x14001b81c
   140010713:	mov    rcx,QWORD PTR [rip+0x28916]        # 0x140039030
   14001071a:	call   0x140006444
   14001071f:	and    QWORD PTR [rip+0x28909],0x0        # 0x140039030
   140010727:	add    rsp,0x28
   14001072b:	ret    
   14001072c:	lea    rax,[rip+0x267cd]        # 0x140036f00
   140010733:	ret    
   140010734:	rex push rbx
   140010736:	sub    rsp,0x20
   14001073a:	mov    rbx,rcx
   14001073d:	lea    rcx,[rip+0x267bc]        # 0x140036f00
   140010744:	cmp    rbx,rcx
   140010747:	jb     0x140010789
   140010749:	lea    rax,[rip+0x26b40]        # 0x140037290
   140010750:	cmp    rbx,rax
   140010753:	ja     0x140010789
   140010755:	mov    rdx,rbx
   140010758:	movabs rax,0x2aaaaaaaaaaaaaab
   140010762:	sub    rdx,rcx
   140010765:	imul   rdx
   140010768:	sar    rdx,0x3
   14001076c:	mov    rcx,rdx
   14001076f:	shr    rcx,0x3f
   140010773:	add    rcx,rdx
   140010776:	add    ecx,0x10
   140010779:	call   0x140008760
   14001077e:	bts    DWORD PTR [rbx+0x18],0xf
   140010783:	add    rsp,0x20
   140010787:	pop    rbx
   140010788:	ret    
   140010789:	lea    rcx,[rbx+0x30]
   14001078d:	add    rsp,0x20
   140010791:	pop    rbx
   140010792:	rex.W jmp QWORD PTR [rip+0x1696f]        # 0x140027108
   140010799:	int3   
   14001079a:	int3   
   14001079b:	int3   
   14001079c:	rex push rbx
   14001079e:	sub    rsp,0x20
   1400107a2:	mov    rbx,rdx
   1400107a5:	cmp    ecx,0x14
   1400107a8:	jge    0x1400107bd
   1400107aa:	add    ecx,0x10
   1400107ad:	call   0x140008760
   1400107b2:	bts    DWORD PTR [rbx+0x18],0xf
   1400107b7:	add    rsp,0x20
   1400107bb:	pop    rbx
   1400107bc:	ret    
   1400107bd:	lea    rcx,[rdx+0x30]
   1400107c1:	add    rsp,0x20
   1400107c5:	pop    rbx
   1400107c6:	rex.W jmp QWORD PTR [rip+0x1693b]        # 0x140027108
   1400107cd:	int3   
   1400107ce:	int3   
   1400107cf:	int3   
   1400107d0:	lea    rdx,[rip+0x26729]        # 0x140036f00
   1400107d7:	cmp    rcx,rdx
   1400107da:	jb     0x140010813
   1400107dc:	lea    rax,[rip+0x26aad]        # 0x140037290
   1400107e3:	cmp    rcx,rax
   1400107e6:	ja     0x140010813
   1400107e8:	btr    DWORD PTR [rcx+0x18],0xf
   1400107ed:	sub    rcx,rdx
   1400107f0:	movabs rax,0x2aaaaaaaaaaaaaab
   1400107fa:	imul   rcx
   1400107fd:	sar    rdx,0x3
   140010801:	mov    rcx,rdx
   140010804:	shr    rcx,0x3f
   140010808:	add    rcx,rdx
   14001080b:	add    ecx,0x10
   14001080e:	jmp    0x14000897c
   140010813:	add    rcx,0x30
   140010817:	rex.W jmp QWORD PTR [rip+0x168f2]        # 0x140027110
   14001081e:	int3   
   14001081f:	int3   
   140010820:	cmp    ecx,0x14
   140010823:	jge    0x140010832
   140010825:	btr    DWORD PTR [rdx+0x18],0xf
   14001082a:	add    ecx,0x10
   14001082d:	jmp    0x14000897c
   140010832:	lea    rcx,[rdx+0x30]
   140010836:	rex.W jmp QWORD PTR [rip+0x168d3]        # 0x140027110
   14001083d:	int3   
   14001083e:	int3   
   14001083f:	int3   
   140010840:	sub    rsp,0x28
   140010844:	test   rcx,rcx
   140010847:	jne    0x14001085e
   140010849:	call   0x1400095b8
   14001084e:	mov    DWORD PTR [rax],0x16
   140010854:	call   0x140008628
   140010859:	or     eax,0xffffffff
   14001085c:	jmp    0x140010861
   14001085e:	mov    eax,DWORD PTR [rcx+0x1c]
   140010861:	add    rsp,0x28
   140010865:	ret    
   140010866:	int3   
   140010867:	int3   
   140010868:	sub    rsp,0x28
   14001086c:	cmp    ecx,0xfffffffe
   14001086f:	jne    0x14001087e
   140010871:	call   0x1400095b8
   140010876:	mov    DWORD PTR [rax],0x9
   14001087c:	jmp    0x1400108c0
   14001087e:	test   ecx,ecx
   140010880:	js     0x1400108b0
   140010882:	cmp    ecx,DWORD PTR [rip+0x297bc]        # 0x14003a044
   140010888:	jae    0x1400108b0
   14001088a:	movsxd rcx,ecx
   14001088d:	lea    rdx,[rip+0x27dfc]        # 0x140038690
   140010894:	mov    rax,rcx
   140010897:	and    ecx,0x1f
   14001089a:	sar    rax,0x5
   14001089e:	imul   rcx,rcx,0x58
   1400108a2:	mov    rax,QWORD PTR [rdx+rax*8]
   1400108a6:	movsx  eax,BYTE PTR [rax+rcx*1+0x8]
   1400108ab:	and    eax,0x40
   1400108ae:	jmp    0x1400108c2
   1400108b0:	call   0x1400095b8
   1400108b5:	mov    DWORD PTR [rax],0x9
   1400108bb:	call   0x140008628
   1400108c0:	xor    eax,eax
   1400108c2:	add    rsp,0x28
   1400108c6:	ret    
   1400108c7:	int3   
   1400108c8:	rex push rbx
   1400108ca:	sub    rsp,0x20
   1400108ce:	mov    rbx,rcx
   1400108d1:	test   rcx,rcx
   1400108d4:	jne    0x1400108e0
   1400108d6:	add    rsp,0x20
   1400108da:	pop    rbx
   1400108db:	jmp    0x1400109e0
   1400108e0:	call   0x140010914
   1400108e5:	test   eax,eax
   1400108e7:	je     0x1400108ee
   1400108e9:	or     eax,0xffffffff
   1400108ec:	jmp    0x14001090e
   1400108ee:	test   DWORD PTR [rbx+0x18],0x4000
   1400108f5:	je     0x14001090c
   1400108f7:	mov    rcx,rbx
   1400108fa:	call   0x140010840
   1400108ff:	mov    ecx,eax
   140010901:	call   0x14001b8c4
   140010906:	neg    eax
   140010908:	sbb    eax,eax
   14001090a:	jmp    0x14001090e
   14001090c:	xor    eax,eax
   14001090e:	add    rsp,0x20
   140010912:	pop    rbx
   140010913:	ret    
   140010914:	mov    QWORD PTR [rsp+0x8],rbx
   140010919:	mov    QWORD PTR [rsp+0x10],rsi
   14001091e:	push   rdi
   14001091f:	sub    rsp,0x20
   140010923:	mov    eax,DWORD PTR [rcx+0x18]
   140010926:	xor    esi,esi
   140010928:	mov    rbx,rcx
   14001092b:	and    al,0x3
   14001092d:	cmp    al,0x2
   14001092f:	jne    0x140010970
   140010931:	test   DWORD PTR [rcx+0x18],0x108
   140010938:	je     0x140010970
   14001093a:	mov    edi,DWORD PTR [rcx]
   14001093c:	sub    edi,DWORD PTR [rcx+0x10]
   14001093f:	test   edi,edi
   140010941:	jle    0x140010970
   140010943:	call   0x140010840
   140010948:	mov    rdx,QWORD PTR [rbx+0x10]
   14001094c:	mov    r8d,edi
   14001094f:	mov    ecx,eax
   140010951:	call   0x14001b99c
   140010956:	cmp    eax,edi
   140010958:	jne    0x140010969
   14001095a:	mov    eax,DWORD PTR [rbx+0x18]
   14001095d:	test   al,al
   14001095f:	jns    0x140010970
   140010961:	and    eax,0xfffffffd
   140010964:	mov    DWORD PTR [rbx+0x18],eax
   140010967:	jmp    0x140010970
   140010969:	or     DWORD PTR [rbx+0x18],0x20
   14001096d:	or     esi,0xffffffff
   140010970:	mov    rcx,QWORD PTR [rbx+0x10]
   140010974:	and    DWORD PTR [rbx+0x8],0x0
   140010978:	mov    eax,esi
   14001097a:	mov    rsi,QWORD PTR [rsp+0x38]
   14001097f:	mov    QWORD PTR [rbx],rcx
   140010982:	mov    rbx,QWORD PTR [rsp+0x30]
   140010987:	add    rsp,0x20
   14001098b:	pop    rdi
   14001098c:	ret    
   14001098d:	int3   
   14001098e:	int3   
   14001098f:	int3   
   140010990:	mov    ecx,0x1
   140010995:	jmp    0x1400109e0
   14001099a:	int3   
   14001099b:	int3   
   14001099c:	mov    QWORD PTR [rsp+0x10],rbx
   1400109a1:	mov    QWORD PTR [rsp+0x8],rcx
   1400109a6:	push   rdi
   1400109a7:	sub    rsp,0x20
   1400109ab:	mov    rbx,rcx
   1400109ae:	test   rcx,rcx
   1400109b1:	jne    0x1400109ba
   1400109b3:	call   0x1400109e0
   1400109b8:	jmp    0x1400109d4
   1400109ba:	call   0x140010734
   1400109bf:	nop
   1400109c0:	mov    rcx,rbx
   1400109c3:	call   0x1400108c8
   1400109c8:	mov    edi,eax
   1400109ca:	mov    rcx,rbx
   1400109cd:	call   0x1400107d0
   1400109d2:	mov    eax,edi
   1400109d4:	mov    rbx,QWORD PTR [rsp+0x38]
   1400109d9:	add    rsp,0x20
   1400109dd:	pop    rdi
   1400109de:	ret    
   1400109df:	int3   
   1400109e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400109e5:	mov    QWORD PTR [rsp+0x10],rsi
   1400109ea:	mov    QWORD PTR [rsp+0x18],rdi
   1400109ef:	push   r13
   1400109f1:	push   r14
   1400109f3:	push   r15
   1400109f5:	sub    rsp,0x30
   1400109f9:	mov    r14d,ecx
   1400109fc:	xor    esi,esi
   1400109fe:	xor    edi,edi
   140010a00:	lea    ecx,[rsi+0x1]
   140010a03:	call   0x140008760
   140010a08:	nop
   140010a09:	xor    ebx,ebx
   140010a0b:	or     r13d,0xffffffff
   140010a0f:	mov    DWORD PTR [rsp+0x20],ebx
   140010a13:	cmp    ebx,DWORD PTR [rip+0x2861f]        # 0x140039038
   140010a19:	jge    0x140010a99
   140010a1b:	movsxd r15,ebx
   140010a1e:	mov    rax,QWORD PTR [rip+0x2860b]        # 0x140039030
   140010a25:	mov    rdx,QWORD PTR [rax+r15*8]
   140010a29:	test   rdx,rdx
   140010a2c:	je     0x140010a92
   140010a2e:	test   BYTE PTR [rdx+0x18],0x83
   140010a32:	je     0x140010a92
   140010a34:	mov    ecx,ebx
   140010a36:	call   0x14001079c
   140010a3b:	nop
   140010a3c:	mov    rax,QWORD PTR [rip+0x285ed]        # 0x140039030
   140010a43:	mov    rcx,QWORD PTR [rax+r15*8]
   140010a47:	test   BYTE PTR [rcx+0x18],0x83
   140010a4b:	je     0x140010a80
   140010a4d:	cmp    r14d,0x1
   140010a51:	jne    0x140010a65
   140010a53:	call   0x1400108c8
   140010a58:	cmp    eax,r13d
   140010a5b:	je     0x140010a80
   140010a5d:	inc    esi
   140010a5f:	mov    DWORD PTR [rsp+0x24],esi
   140010a63:	jmp    0x140010a80
   140010a65:	test   r14d,r14d
   140010a68:	jne    0x140010a80
   140010a6a:	test   BYTE PTR [rcx+0x18],0x2
   140010a6e:	je     0x140010a80
   140010a70:	call   0x1400108c8
   140010a75:	cmp    eax,r13d
   140010a78:	cmove  edi,r13d
   140010a7c:	mov    DWORD PTR [rsp+0x28],edi
   140010a80:	mov    rdx,QWORD PTR [rip+0x285a9]        # 0x140039030
   140010a87:	mov    rdx,QWORD PTR [rdx+r15*8]
   140010a8b:	mov    ecx,ebx
   140010a8d:	call   0x140010820
   140010a92:	inc    ebx
   140010a94:	jmp    0x140010a0f
   140010a99:	mov    ecx,0x1
   140010a9e:	call   0x14000897c
   140010aa3:	cmp    r14d,0x1
   140010aa7:	cmove  edi,esi
   140010aaa:	mov    eax,edi
   140010aac:	mov    rbx,QWORD PTR [rsp+0x50]
   140010ab1:	mov    rsi,QWORD PTR [rsp+0x58]
   140010ab6:	mov    rdi,QWORD PTR [rsp+0x60]
   140010abb:	add    rsp,0x30
   140010abf:	pop    r15
   140010ac1:	pop    r14
   140010ac3:	pop    r13
   140010ac5:	ret    
   140010ac6:	int3   
   140010ac7:	int3   
   140010ac8:	int3   
   140010ac9:	int3   
   140010aca:	int3   
   140010acb:	int3   
   140010acc:	int3   
   140010acd:	int3   
   140010ace:	int3   
   140010acf:	int3   
   140010ad0:	int3   
   140010ad1:	int3   
   140010ad2:	int3   
   140010ad3:	int3   
   140010ad4:	int3   
   140010ad5:	int3   
   140010ad6:	data16 nop WORD PTR [rax+rax*1+0x0]
   140010ae0:	sub    rsp,0x8
   140010ae4:	stmxcsr DWORD PTR [rsp]
   140010ae8:	mov    eax,DWORD PTR [rsp]
   140010aeb:	add    rsp,0x8
   140010aef:	ret    
   140010af0:	mov    DWORD PTR [rsp+0x8],ecx
   140010af4:	ldmxcsr DWORD PTR [rsp+0x8]
   140010af9:	ret    
   140010afa:	stmxcsr DWORD PTR [rsp+0x8]
   140010aff:	mov    ecx,0xffffffc0
   140010b04:	and    DWORD PTR [rsp+0x8],ecx
   140010b08:	ldmxcsr DWORD PTR [rsp+0x8]
   140010b0d:	ret    
   140010b0e:	ucomisd xmm0,QWORD PTR [rip+0x1d68a]        # 0x14002e1a0
   140010b16:	jae    0x140010b2c
   140010b18:	ucomisd xmm0,QWORD PTR [rip+0x1d688]        # 0x14002e1a8
   140010b20:	jbe    0x140010b2c
   140010b22:	cvtsd2si rcx,xmm0
   140010b27:	cvtsi2sd xmm0,rcx
   140010b2c:	ret    
   140010b2d:	int3   
   140010b2e:	int3   
   140010b2f:	int3   
   140010b30:	mov    eax,ecx
   140010b32:	test   cl,0x20
   140010b35:	je     0x140010b3e
   140010b37:	mov    ecx,0x5
   140010b3c:	jmp    0x140010b70
   140010b3e:	test   al,0x8
   140010b40:	je     0x140010b49
   140010b42:	mov    ecx,0x1
   140010b47:	jmp    0x140010b70
   140010b49:	test   al,0x4
   140010b4b:	je     0x140010b54
   140010b4d:	mov    ecx,0x2
   140010b52:	jmp    0x140010b70
   140010b54:	mov    ecx,0x1
   140010b59:	test   cl,al
   140010b5b:	je     0x140010b64
   140010b5d:	mov    ecx,0x3
   140010b62:	jmp    0x140010b70
   140010b64:	movzx  eax,al
   140010b67:	mov    ecx,0x2
   140010b6c:	and    ecx,eax
   140010b6e:	add    ecx,ecx
   140010b70:	mov    eax,ecx
   140010b72:	ret    
   140010b73:	int3   
   140010b74:	mov    rax,rsp
   140010b77:	mov    QWORD PTR [rax+0x10],rbx
   140010b7b:	push   rbp
   140010b7c:	push   rsi
   140010b7d:	push   rdi
   140010b7e:	lea    rbp,[rax-0x57]
   140010b82:	sub    rsp,0xe0
   140010b89:	movaps XMMWORD PTR [rax-0x28],xmm6
   140010b8d:	mov    rax,QWORD PTR [rip+0x25eac]        # 0x140036a40
   140010b94:	xor    rax,rsp
   140010b97:	mov    QWORD PTR [rbp+0x1f],rax
   140010b9b:	mov    rbx,QWORD PTR [rbp+0x7f]
   140010b9f:	mov    esi,edx
   140010ba1:	lea    rdx,[rbp-0x61]
   140010ba5:	movsd  QWORD PTR [rbp-0x59],xmm2
   140010baa:	movsd  QWORD PTR [rbp-0x61],xmm3
   140010baf:	movaps xmm6,xmm2
   140010bb2:	mov    r8,rbx
   140010bb5:	mov    edi,ecx
   140010bb7:	call   0x140010d9c
   140010bbc:	test   eax,eax
   140010bbe:	jne    0x140010bf1
   140010bc0:	and    DWORD PTR [rsp+0x30],eax
   140010bc4:	and    DWORD PTR [rbp-0x11],0xfffffffe
   140010bc8:	lea    rax,[rbp-0x61]
   140010bcc:	mov    QWORD PTR [rsp+0x28],rax
   140010bd1:	lea    rax,[rbp-0x59]
   140010bd5:	lea    rdx,[rbp+0x7f]
   140010bd9:	lea    rcx,[rbp-0x51]
   140010bdd:	mov    r9d,esi
   140010be0:	mov    r8d,edi
   140010be3:	mov    QWORD PTR [rsp+0x20],rax
   140010be8:	call   0x1400110ec
   140010bed:	mov    rbx,QWORD PTR [rbp+0x7f]
   140010bf1:	mov    ecx,edi
   140010bf3:	call   0x140010b30
   140010bf8:	cmp    DWORD PTR [rip+0x26891],0x0        # 0x140037490
   140010bff:	jne    0x140010c26
   140010c01:	test   eax,eax
   140010c03:	je     0x140010c26
   140010c05:	movsd  xmm0,QWORD PTR [rbp-0x61]
   140010c0a:	xorps  xmm3,xmm3
   140010c0d:	movaps xmm2,xmm6
   140010c10:	mov    edx,esi
   140010c12:	mov    ecx,eax
   140010c14:	mov    QWORD PTR [rsp+0x28],rbx
   140010c19:	movsd  QWORD PTR [rsp+0x20],xmm0
   140010c1f:	call   0x14001144c
   140010c24:	jmp    0x140010c3f
   140010c26:	mov    ecx,eax
   140010c28:	call   0x14001141c
   140010c2d:	mov    edx,0xffc0
   140010c32:	mov    rcx,rbx
   140010c35:	call   0x14000abd4
   140010c3a:	movsd  xmm0,QWORD PTR [rbp-0x61]
   140010c3f:	mov    rcx,QWORD PTR [rbp+0x1f]
   140010c43:	xor    rcx,rsp
   140010c46:	call   0x14000d0a0
   140010c4b:	lea    r11,[rsp+0xe0]
   140010c53:	mov    rbx,QWORD PTR [r11+0x28]
   140010c57:	movaps xmm6,XMMWORD PTR [r11-0x10]
   140010c5c:	mov    rsp,r11
   140010c5f:	pop    rdi
   140010c60:	pop    rsi
   140010c61:	pop    rbp
   140010c62:	ret    
   140010c63:	int3   
   140010c64:	mov    rax,rsp
   140010c67:	mov    QWORD PTR [rax+0x10],rbx
   140010c6b:	push   rbp
   140010c6c:	push   rsi
   140010c6d:	push   rdi
   140010c6e:	lea    rbp,[rax-0x4f]
   140010c72:	sub    rsp,0xf0
   140010c79:	movaps XMMWORD PTR [rax-0x28],xmm6
   140010c7d:	movaps XMMWORD PTR [rax-0x38],xmm7
   140010c81:	mov    rax,QWORD PTR [rip+0x25db8]        # 0x140036a40
   140010c88:	xor    rax,rsp
   140010c8b:	mov    QWORD PTR [rbp+0x7],rax
   140010c8f:	mov    rbx,QWORD PTR [rbp+0x7f]
   140010c93:	mov    esi,edx
   140010c95:	lea    rdx,[rbp+0x77]
   140010c99:	movsd  QWORD PTR [rbp-0x79],xmm2
   140010c9e:	movaps xmm6,xmm3
   140010ca1:	movaps xmm7,xmm2
   140010ca4:	mov    r8,rbx
   140010ca7:	mov    edi,ecx
   140010ca9:	call   0x140010d9c
   140010cae:	test   eax,eax
   140010cb0:	jne    0x140010cf1
   140010cb2:	mov    eax,DWORD PTR [rbp-0x29]
   140010cb5:	and    DWORD PTR [rsp+0x30],0x0
   140010cba:	lea    rdx,[rbp+0x7f]
   140010cbe:	movsd  QWORD PTR [rbp-0x39],xmm6
   140010cc3:	and    eax,0xffffffe3
   140010cc6:	lea    rcx,[rbp-0x69]
   140010cca:	mov    r9d,esi
   140010ccd:	or     eax,0x3
   140010cd0:	mov    r8d,edi
   140010cd3:	mov    DWORD PTR [rbp-0x29],eax
   140010cd6:	lea    rax,[rbp+0x77]
   140010cda:	mov    QWORD PTR [rsp+0x28],rax
   140010cdf:	lea    rax,[rbp-0x79]
   140010ce3:	mov    QWORD PTR [rsp+0x20],rax
   140010ce8:	call   0x1400110ec
   140010ced:	mov    rbx,QWORD PTR [rbp+0x7f]
   140010cf1:	mov    ecx,edi
   140010cf3:	call   0x140010b30
   140010cf8:	cmp    DWORD PTR [rip+0x26791],0x0        # 0x140037490
   140010cff:	jne    0x140010d26
   140010d01:	test   eax,eax
   140010d03:	je     0x140010d26
   140010d05:	movsd  xmm0,QWORD PTR [rbp+0x77]
   140010d0a:	movaps xmm3,xmm6
   140010d0d:	movaps xmm2,xmm7
   140010d10:	mov    edx,esi
   140010d12:	mov    ecx,eax
   140010d14:	mov    QWORD PTR [rsp+0x28],rbx
   140010d19:	movsd  QWORD PTR [rsp+0x20],xmm0
   140010d1f:	call   0x14001144c
   140010d24:	jmp    0x140010d3f
   140010d26:	mov    ecx,eax
   140010d28:	call   0x14001141c
   140010d2d:	mov    edx,0xffc0
   140010d32:	mov    rcx,rbx
   140010d35:	call   0x14000abd4
   140010d3a:	movsd  xmm0,QWORD PTR [rbp+0x77]
   140010d3f:	mov    rcx,QWORD PTR [rbp+0x7]
   140010d43:	xor    rcx,rsp
   140010d46:	call   0x14000d0a0
   140010d4b:	lea    r11,[rsp+0xf0]
   140010d53:	mov    rbx,QWORD PTR [r11+0x28]
   140010d57:	movaps xmm6,XMMWORD PTR [r11-0x10]
   140010d5c:	movaps xmm7,XMMWORD PTR [r11-0x20]
   140010d61:	mov    rsp,r11
   140010d64:	pop    rdi
   140010d65:	pop    rsi
   140010d66:	pop    rbp
   140010d67:	ret    
   140010d68:	lea    r9,[rip+0x26551]        # 0x1400372c0
   140010d6f:	xor    edx,edx
   140010d71:	mov    rax,r9
   140010d74:	cmp    DWORD PTR [rax],ecx
   140010d76:	je     0x140010d8d
   140010d78:	lea    r8,[rip+0x26711]        # 0x140037490
   140010d7f:	add    rax,0x10
   140010d83:	inc    edx
   140010d85:	cmp    rax,r8
   140010d88:	jl     0x140010d74
   140010d8a:	xor    eax,eax
   140010d8c:	ret    
   140010d8d:	movsxd rax,edx
   140010d90:	add    rax,rax
   140010d93:	mov    rax,QWORD PTR [r9+rax*8+0x8]
   140010d98:	ret    
   140010d99:	int3   
   140010d9a:	int3   
   140010d9b:	int3   
   140010d9c:	mov    QWORD PTR [rsp+0x10],rbx
   140010da1:	push   rbp
   140010da2:	push   rsi
   140010da3:	push   rdi
   140010da4:	push   r12
   140010da6:	push   r13
   140010da8:	push   r14
   140010daa:	push   r15
   140010dac:	sub    rsp,0x30
   140010db0:	xor    r14d,r14d
   140010db3:	mov    ebx,ecx
   140010db5:	movaps XMMWORD PTR [rsp+0x20],xmm6
   140010dba:	and    ebx,0x1f
   140010dbd:	mov    r15,r8
   140010dc0:	mov    rsi,rdx
   140010dc3:	mov    r12d,ecx
   140010dc6:	lea    r13d,[r14+0x10]
   140010dca:	test   cl,0x8
   140010dcd:	je     0x140010de5
   140010dcf:	test   r15b,r15b
   140010dd2:	jns    0x140010de5
   140010dd4:	lea    ecx,[r14+0x1]
   140010dd8:	call   0x14000ac50
   140010ddd:	and    ebx,0xfffffff7
   140010de0:	jmp    0x140010fc2
   140010de5:	mov    ecx,0x4
   140010dea:	test   cl,r12b
   140010ded:	je     0x140010e03
   140010def:	bt     r8,0x9
   140010df4:	jae    0x140010e03
   140010df6:	call   0x14000ac50
   140010dfb:	and    ebx,0xfffffffb
   140010dfe:	jmp    0x140010fc2
   140010e03:	mov    edi,0x1
   140010e08:	test   dil,r12b
   140010e0b:	je     0x140010ec1
   140010e11:	bt     r8,0xa
   140010e16:	jae    0x140010ec1
   140010e1c:	lea    ecx,[rdi+0x7]
   140010e1f:	call   0x14000ac50
   140010e24:	mov    rax,r15
   140010e27:	mov    ecx,0x6000
   140010e2c:	and    rax,rcx
   140010e2f:	je     0x140010e8e
   140010e31:	cmp    rax,0x2000
   140010e37:	je     0x140010e76
   140010e39:	cmp    rax,0x4000
   140010e3f:	je     0x140010e5e
   140010e41:	cmp    rax,rcx
   140010e44:	jne    0x140010eb9
   140010e46:	movsd  xmm0,QWORD PTR [rsi]
   140010e4a:	comisd xmm0,QWORD PTR [rip+0x19b1e]        # 0x14002a970
   140010e52:	movsd  xmm0,QWORD PTR [rip+0x2670e]        # 0x140037568
   140010e5a:	ja     0x140010eb5
   140010e5c:	jmp    0x140010eae
   140010e5e:	movsd  xmm0,QWORD PTR [rsi]
   140010e62:	comisd xmm0,QWORD PTR [rip+0x19b06]        # 0x14002a970
   140010e6a:	ja     0x140010e9c
   140010e6c:	movsd  xmm0,QWORD PTR [rip+0x266f4]        # 0x140037568
   140010e74:	jmp    0x140010eae
   140010e76:	movsd  xmm0,QWORD PTR [rsi]
   140010e7a:	comisd xmm0,QWORD PTR [rip+0x19aee]        # 0x14002a970
   140010e82:	jbe    0x140010ea6
   140010e84:	movsd  xmm0,QWORD PTR [rip+0x266dc]        # 0x140037568
   140010e8c:	jmp    0x140010eb5
   140010e8e:	movsd  xmm0,QWORD PTR [rsi]
   140010e92:	comisd xmm0,QWORD PTR [rip+0x19ad6]        # 0x14002a970
   140010e9a:	jbe    0x140010ea6
   140010e9c:	movsd  xmm0,QWORD PTR [rip+0x266b4]        # 0x140037558
   140010ea4:	jmp    0x140010eb5
   140010ea6:	movsd  xmm0,QWORD PTR [rip+0x266aa]        # 0x140037558
   140010eae:	xorps  xmm0,XMMWORD PTR [rip+0x1d3cb]        # 0x14002e280
   140010eb5:	movsd  QWORD PTR [rsi],xmm0
   140010eb9:	and    ebx,0xfffffffe
   140010ebc:	jmp    0x140010fc2
   140010ec1:	test   r12b,0x2
   140010ec5:	je     0x140010fc2
   140010ecb:	bt     r8,0xb
   140010ed0:	jae    0x140010fc2
   140010ed6:	movsd  xmm0,QWORD PTR [rdx]
   140010eda:	test   r13b,r12b
   140010edd:	xorps  xmm6,xmm6
   140010ee0:	mov    ebp,r14d
   140010ee3:	cmovne ebp,edi
   140010ee6:	ucomisd xmm0,xmm6
   140010eea:	jp     0x140010ef5
   140010eec:	jne    0x140010ef5
   140010eee:	mov    ebp,edi
   140010ef0:	jmp    0x140010fb3
   140010ef5:	lea    rdx,[rsp+0x70]
   140010efa:	call   0x14001c2c4
   140010eff:	mov    ecx,DWORD PTR [rsp+0x70]
   140010f03:	add    ecx,0xfffffa00
   140010f09:	movsd  QWORD PTR [rsp+0x88],xmm0
   140010f12:	cmp    ecx,0xfffffbce
   140010f18:	jge    0x140010f25
   140010f1a:	mulsd  xmm0,xmm6
   140010f1e:	mov    ebp,edi
   140010f20:	jmp    0x140010faf
   140010f25:	mov    rax,QWORD PTR [rsp+0x88]
   140010f2d:	comisd xmm6,xmm0
   140010f31:	mov    r8d,r14d
   140010f34:	seta   r8b
   140010f38:	shr    rax,0x30
   140010f3c:	and    ax,0xf
   140010f40:	or     ax,r13w
   140010f44:	mov    WORD PTR [rsp+0x8e],ax
   140010f4c:	cmp    ecx,0xfffffc03
   140010f52:	jge    0x140010f9a
   140010f54:	mov    eax,DWORD PTR [rsp+0x88]
   140010f5b:	mov    edx,0xfffffc03
   140010f60:	sub    edx,ecx
   140010f62:	mov    ecx,DWORD PTR [rsp+0x8c]
   140010f69:	test   dil,al
   140010f6c:	je     0x140010f73
   140010f6e:	test   ebp,ebp
   140010f70:	cmove  ebp,edi
   140010f73:	shr    eax,1
   140010f75:	mov    DWORD PTR [rsp+0x88],eax
   140010f7c:	test   dil,cl
   140010f7f:	je     0x140010f8c
   140010f81:	bts    eax,0x1f
   140010f85:	mov    DWORD PTR [rsp+0x88],eax
   140010f8c:	shr    ecx,1
   140010f8e:	sub    rdx,rdi
   140010f91:	jne    0x140010f69
   140010f93:	mov    DWORD PTR [rsp+0x8c],ecx
   140010f9a:	movsd  xmm0,QWORD PTR [rsp+0x88]
   140010fa3:	test   r8d,r8d
   140010fa6:	je     0x140010faf
   140010fa8:	xorps  xmm0,XMMWORD PTR [rip+0x1d2d1]        # 0x14002e280
   140010faf:	movsd  QWORD PTR [rsi],xmm0
   140010fb3:	test   ebp,ebp
   140010fb5:	je     0x140010fbf
   140010fb7:	mov    rcx,r13
   140010fba:	call   0x14000ac50
   140010fbf:	and    ebx,0xfffffffd
   140010fc2:	test   r13b,r12b
   140010fc5:	je     0x140010fdb
   140010fc7:	bt     r15,0xc
   140010fcc:	jae    0x140010fdb
   140010fce:	mov    ecx,0x20
   140010fd3:	call   0x14000ac50
   140010fd8:	and    ebx,0xffffffef
   140010fdb:	movaps xmm6,XMMWORD PTR [rsp+0x20]
   140010fe0:	test   ebx,ebx
   140010fe2:	mov    rbx,QWORD PTR [rsp+0x78]
   140010fe7:	sete   r14b
   140010feb:	mov    eax,r14d
   140010fee:	add    rsp,0x30
   140010ff2:	pop    r15
   140010ff4:	pop    r14
   140010ff6:	pop    r13
   140010ff8:	pop    r12
   140010ffa:	pop    rdi
   140010ffb:	pop    rsi
   140010ffc:	pop    rbp
   140010ffd:	ret    
   140010ffe:	int3   
   140010fff:	int3   
   140011000:	rex push rbx
   140011002:	sub    rsp,0x40
   140011006:	cmp    DWORD PTR [rip+0x26483],0x0        # 0x140037490
   14001100d:	movaps XMMWORD PTR [rsp+0x30],xmm6
   140011012:	mov    rbx,r8
   140011015:	movaps xmm6,xmm1
   140011018:	jne    0x140011039
   14001101a:	mov    edx,ecx
   14001101c:	xorps  xmm3,xmm3
   14001101f:	movaps xmm2,xmm1
   140011022:	mov    ecx,0x1
   140011027:	mov    QWORD PTR [rsp+0x28],rbx
   14001102c:	movsd  QWORD PTR [rsp+0x20],xmm1
   140011032:	call   0x14001144c
   140011037:	jmp    0x140011054
   140011039:	call   0x1400095b8
   14001103e:	mov    edx,0xffc0
   140011043:	mov    rcx,rbx
   140011046:	mov    DWORD PTR [rax],0x21
   14001104c:	call   0x14000abd4
   140011051:	movaps xmm0,xmm6
   140011054:	movaps xmm6,XMMWORD PTR [rsp+0x30]
   140011059:	add    rsp,0x40
   14001105d:	pop    rbx
   14001105e:	ret    
   14001105f:	int3   
   140011060:	rex push rbx
   140011062:	sub    rsp,0x40
   140011066:	cmp    DWORD PTR [rip+0x26423],0x0        # 0x140037490
   14001106d:	movaps XMMWORD PTR [rsp+0x30],xmm6
   140011072:	movaps xmm6,xmm1
   140011075:	addsd  xmm6,xmm2
   140011079:	mov    rbx,r9
   14001107c:	jne    0x14001109d
   14001107e:	movaps xmm3,xmm2
   140011081:	mov    edx,ecx
   140011083:	movaps xmm2,xmm1
   140011086:	mov    ecx,0x1
   14001108b:	mov    QWORD PTR [rsp+0x28],rbx
   140011090:	movsd  QWORD PTR [rsp+0x20],xmm6
   140011096:	call   0x14001144c
   14001109b:	jmp    0x1400110b8
   14001109d:	call   0x1400095b8
   1400110a2:	mov    edx,0xffc0
   1400110a7:	mov    rcx,rbx
   1400110aa:	mov    DWORD PTR [rax],0x21
   1400110b0:	call   0x14000abd4
   1400110b5:	movaps xmm0,xmm6
   1400110b8:	movaps xmm6,XMMWORD PTR [rsp+0x30]
   1400110bd:	add    rsp,0x40
   1400110c1:	pop    rbx
   1400110c2:	ret    
   1400110c3:	int3   
   1400110c4:	sub    rsp,0x48
   1400110c8:	and    DWORD PTR [rsp+0x30],0x0
   1400110cd:	mov    rax,QWORD PTR [rsp+0x78]
   1400110d2:	mov    QWORD PTR [rsp+0x28],rax
   1400110d7:	mov    rax,QWORD PTR [rsp+0x70]
   1400110dc:	mov    QWORD PTR [rsp+0x20],rax
   1400110e1:	call   0x1400110ec
   1400110e6:	add    rsp,0x48
   1400110ea:	ret    
   1400110eb:	int3   
   1400110ec:	mov    rax,rsp
   1400110ef:	mov    QWORD PTR [rax+0x10],rbx
   1400110f3:	mov    QWORD PTR [rax+0x18],rsi
   1400110f7:	mov    QWORD PTR [rax+0x20],rdi
   1400110fb:	mov    QWORD PTR [rax+0x8],rcx
   1400110ff:	push   rbp
   140011100:	mov    rbp,rsp
   140011103:	sub    rsp,0x20
   140011107:	mov    rbx,rdx
   14001110a:	xor    edx,edx
   14001110c:	mov    esi,r9d
   14001110f:	mov    DWORD PTR [rcx+0x4],edx
   140011112:	mov    rax,QWORD PTR [rbp+0x10]
   140011116:	mov    edi,0xc000000d
   14001111b:	mov    DWORD PTR [rax+0x8],edx
   14001111e:	mov    rax,QWORD PTR [rbp+0x10]
   140011122:	mov    DWORD PTR [rax+0xc],edx
   140011125:	test   r8b,0x10
   140011129:	je     0x140011138
   14001112b:	mov    rax,QWORD PTR [rbp+0x10]
   14001112f:	mov    edi,0xc000008f
   140011134:	or     DWORD PTR [rax+0x4],0x1
   140011138:	test   r8b,0x2
   14001113c:	je     0x14001114b
   14001113e:	mov    rax,QWORD PTR [rbp+0x10]
   140011142:	mov    edi,0xc0000093
   140011147:	or     DWORD PTR [rax+0x4],0x2
   14001114b:	test   r8b,0x1
   14001114f:	je     0x14001115e
   140011151:	mov    rax,QWORD PTR [rbp+0x10]
   140011155:	mov    edi,0xc0000091
   14001115a:	or     DWORD PTR [rax+0x4],0x4
   14001115e:	test   r8b,0x4
   140011162:	je     0x140011171
   140011164:	mov    rax,QWORD PTR [rbp+0x10]
   140011168:	mov    edi,0xc000008e
   14001116d:	or     DWORD PTR [rax+0x4],0x8
   140011171:	test   r8b,0x8
   140011175:	je     0x140011184
   140011177:	mov    rax,QWORD PTR [rbp+0x10]
   14001117b:	mov    edi,0xc0000090
   140011180:	or     DWORD PTR [rax+0x4],0x10
   140011184:	mov    rcx,QWORD PTR [rbp+0x10]
   140011188:	mov    rax,QWORD PTR [rbx]
   14001118b:	shr    rax,0x7
   14001118f:	shl    eax,0x4
   140011192:	not    eax
   140011194:	xor    eax,DWORD PTR [rcx+0x8]
   140011197:	and    eax,0x10
   14001119a:	xor    DWORD PTR [rcx+0x8],eax
   14001119d:	mov    rcx,QWORD PTR [rbp+0x10]
   1400111a1:	mov    rax,QWORD PTR [rbx]
   1400111a4:	shr    rax,0x9
   1400111a8:	shl    eax,0x3
   1400111ab:	not    eax
   1400111ad:	xor    eax,DWORD PTR [rcx+0x8]
   1400111b0:	and    eax,0x8
   1400111b3:	xor    DWORD PTR [rcx+0x8],eax
   1400111b6:	mov    rcx,QWORD PTR [rbp+0x10]
   1400111ba:	mov    rax,QWORD PTR [rbx]
   1400111bd:	shr    rax,0xa
   1400111c1:	shl    eax,0x2
   1400111c4:	not    eax
   1400111c6:	xor    eax,DWORD PTR [rcx+0x8]
   1400111c9:	and    eax,0x4
   1400111cc:	xor    DWORD PTR [rcx+0x8],eax
   1400111cf:	mov    rcx,QWORD PTR [rbp+0x10]
   1400111d3:	mov    rax,QWORD PTR [rbx]
   1400111d6:	shr    rax,0xb
   1400111da:	add    eax,eax
   1400111dc:	not    eax
   1400111de:	xor    eax,DWORD PTR [rcx+0x8]
   1400111e1:	and    eax,0x2
   1400111e4:	xor    DWORD PTR [rcx+0x8],eax
   1400111e7:	mov    eax,DWORD PTR [rbx]
   1400111e9:	mov    rcx,QWORD PTR [rbp+0x10]
   1400111ed:	shr    rax,0xc
   1400111f1:	not    eax
   1400111f3:	xor    eax,DWORD PTR [rcx+0x8]
   1400111f6:	and    eax,0x1
   1400111f9:	xor    DWORD PTR [rcx+0x8],eax
   1400111fc:	call   0x14000ac70
   140011201:	mov    rdx,rax
   140011204:	test   al,0x1
   140011206:	je     0x140011210
   140011208:	mov    rcx,QWORD PTR [rbp+0x10]
   14001120c:	or     DWORD PTR [rcx+0xc],0x10
   140011210:	test   al,0x4
   140011212:	je     0x14001121c
   140011214:	mov    rcx,QWORD PTR [rbp+0x10]
   140011218:	or     DWORD PTR [rcx+0xc],0x8
   14001121c:	test   al,0x8
   14001121e:	je     0x140011228
   140011220:	mov    rax,QWORD PTR [rbp+0x10]
   140011224:	or     DWORD PTR [rax+0xc],0x4
   140011228:	test   dl,0x10
   14001122b:	je     0x140011235
   14001122d:	mov    rax,QWORD PTR [rbp+0x10]
   140011231:	or     DWORD PTR [rax+0xc],0x2
   140011235:	test   dl,0x20
   140011238:	je     0x140011242
   14001123a:	mov    rax,QWORD PTR [rbp+0x10]
   14001123e:	or     DWORD PTR [rax+0xc],0x1
   140011242:	mov    eax,DWORD PTR [rbx]
   140011244:	mov    ecx,0x6000
   140011249:	and    rax,rcx
   14001124c:	je     0x14001128c
   14001124e:	cmp    rax,0x2000
   140011254:	je     0x14001127c
   140011256:	cmp    rax,0x4000
   14001125c:	je     0x14001126c
   14001125e:	cmp    rax,rcx
   140011261:	jne    0x140011293
   140011263:	mov    rax,QWORD PTR [rbp+0x10]
   140011267:	or     DWORD PTR [rax],0x3
   14001126a:	jmp    0x140011293
   14001126c:	mov    rax,QWORD PTR [rbp+0x10]
   140011270:	and    DWORD PTR [rax],0xfffffffe
   140011273:	mov    rax,QWORD PTR [rbp+0x10]
   140011277:	or     DWORD PTR [rax],0x2
   14001127a:	jmp    0x140011293
   14001127c:	mov    rax,QWORD PTR [rbp+0x10]
   140011280:	and    DWORD PTR [rax],0xfffffffd
   140011283:	mov    rax,QWORD PTR [rbp+0x10]
   140011287:	or     DWORD PTR [rax],0x1
   14001128a:	jmp    0x140011293
   14001128c:	mov    rax,QWORD PTR [rbp+0x10]
   140011290:	and    DWORD PTR [rax],0xfffffffc
   140011293:	mov    rax,QWORD PTR [rbp+0x10]
   140011297:	and    esi,0xfff
   14001129d:	and    DWORD PTR [rax],0xfffe001f
   1400112a3:	mov    rax,QWORD PTR [rbp+0x10]
   1400112a7:	shl    esi,0x5
   1400112aa:	or     DWORD PTR [rax],esi
   1400112ac:	mov    rax,QWORD PTR [rbp+0x10]
   1400112b0:	mov    rsi,QWORD PTR [rbp+0x38]
   1400112b4:	or     DWORD PTR [rax+0x20],0x1
   1400112b8:	cmp    DWORD PTR [rbp+0x40],0x0
   1400112bc:	je     0x1400112f1
   1400112be:	mov    rax,QWORD PTR [rbp+0x10]
   1400112c2:	mov    edx,0xffffffe1
   1400112c7:	and    DWORD PTR [rax+0x20],edx
   1400112ca:	mov    rax,QWORD PTR [rbp+0x30]
   1400112ce:	mov    ecx,DWORD PTR [rax]
   1400112d0:	mov    rax,QWORD PTR [rbp+0x10]
   1400112d4:	mov    DWORD PTR [rax+0x10],ecx
   1400112d7:	mov    rax,QWORD PTR [rbp+0x10]
   1400112db:	or     DWORD PTR [rax+0x60],0x1
   1400112df:	mov    rax,QWORD PTR [rbp+0x10]
   1400112e3:	and    DWORD PTR [rax+0x60],edx
   1400112e6:	mov    rax,QWORD PTR [rbp+0x10]
   1400112ea:	mov    ecx,DWORD PTR [rsi]
   1400112ec:	mov    DWORD PTR [rax+0x50],ecx
   1400112ef:	jmp    0x140011339
   1400112f1:	mov    rcx,QWORD PTR [rbp+0x10]
   1400112f5:	mov    r8d,0xffffffe3
   1400112fb:	mov    eax,DWORD PTR [rcx+0x20]
   1400112fe:	and    eax,r8d
   140011301:	or     eax,0x2
   140011304:	mov    DWORD PTR [rcx+0x20],eax
   140011307:	mov    rax,QWORD PTR [rbp+0x30]
   14001130b:	mov    rcx,QWORD PTR [rax]
   14001130e:	mov    rax,QWORD PTR [rbp+0x10]
   140011312:	mov    QWORD PTR [rax+0x10],rcx
   140011316:	mov    rax,QWORD PTR [rbp+0x10]
   14001131a:	or     DWORD PTR [rax+0x60],0x1
   14001131e:	mov    rdx,QWORD PTR [rbp+0x10]
   140011322:	mov    eax,DWORD PTR [rdx+0x60]
   140011325:	and    eax,r8d
   140011328:	or     eax,0x2
   14001132b:	mov    DWORD PTR [rdx+0x60],eax
   14001132e:	mov    rax,QWORD PTR [rbp+0x10]
   140011332:	mov    rdx,QWORD PTR [rsi]
   140011335:	mov    QWORD PTR [rax+0x50],rdx
   140011339:	call   0x14000abb4
   14001133e:	xor    edx,edx
   140011340:	lea    r9,[rbp+0x10]
   140011344:	lea    r8d,[rdx+0x1]
   140011348:	mov    ecx,edi
   14001134a:	call   QWORD PTR [rip+0x15d80]        # 0x1400270d0
   140011350:	mov    rcx,QWORD PTR [rbp+0x10]
   140011354:	test   BYTE PTR [rcx+0x8],0x10
   140011358:	je     0x14001135f
   14001135a:	btr    QWORD PTR [rbx],0x7
   14001135f:	test   BYTE PTR [rcx+0x8],0x8
   140011363:	je     0x14001136a
   140011365:	btr    QWORD PTR [rbx],0x9
   14001136a:	test   BYTE PTR [rcx+0x8],0x4
   14001136e:	je     0x140011375
   140011370:	btr    QWORD PTR [rbx],0xa
   140011375:	test   BYTE PTR [rcx+0x8],0x2
   140011379:	je     0x140011380
   14001137b:	btr    QWORD PTR [rbx],0xb
   140011380:	test   BYTE PTR [rcx+0x8],0x1
   140011384:	je     0x14001138b
   140011386:	btr    QWORD PTR [rbx],0xc
   14001138b:	mov    eax,DWORD PTR [rcx]
   14001138d:	and    eax,0x3
   140011390:	je     0x1400113bf
   140011392:	dec    eax
   140011394:	je     0x1400113b3
   140011396:	dec    eax
   140011398:	je     0x1400113a7
   14001139a:	dec    eax
   14001139c:	jne    0x1400113c6
   14001139e:	or     QWORD PTR [rbx],0x6000
   1400113a5:	jmp    0x1400113c6
   1400113a7:	btr    QWORD PTR [rbx],0xd
   1400113ac:	bts    QWORD PTR [rbx],0xe
   1400113b1:	jmp    0x1400113c6
   1400113b3:	btr    QWORD PTR [rbx],0xe
   1400113b8:	bts    QWORD PTR [rbx],0xd
   1400113bd:	jmp    0x1400113c6
   1400113bf:	and    QWORD PTR [rbx],0xffffffffffff9fff
   1400113c6:	cmp    DWORD PTR [rbp+0x40],0x0
   1400113ca:	je     0x1400113d3
   1400113cc:	mov    eax,DWORD PTR [rcx+0x50]
   1400113cf:	mov    DWORD PTR [rsi],eax
   1400113d1:	jmp    0x1400113da
   1400113d3:	mov    rax,QWORD PTR [rcx+0x50]
   1400113d7:	mov    QWORD PTR [rsi],rax
   1400113da:	mov    rbx,QWORD PTR [rsp+0x38]
   1400113df:	mov    rsi,QWORD PTR [rsp+0x40]
   1400113e4:	mov    rdi,QWORD PTR [rsp+0x48]
   1400113e9:	add    rsp,0x20
   1400113ed:	pop    rbp
   1400113ee:	ret    
   1400113ef:	int3   
   1400113f0:	sub    rsp,0x48
   1400113f4:	mov    rax,QWORD PTR [rsp+0x78]
   1400113f9:	mov    DWORD PTR [rsp+0x30],0x1
   140011401:	mov    QWORD PTR [rsp+0x28],rax
   140011406:	mov    rax,QWORD PTR [rsp+0x70]
   14001140b:	mov    QWORD PTR [rsp+0x20],rax
   140011410:	call   0x1400110ec
   140011415:	add    rsp,0x48
   140011419:	ret    
   14001141a:	int3   
   14001141b:	int3   
   14001141c:	sub    rsp,0x28
   140011420:	cmp    ecx,0x1
   140011423:	je     0x14001143a
   140011425:	lea    eax,[rcx-0x2]
   140011428:	cmp    eax,0x1
   14001142b:	ja     0x140011445
   14001142d:	call   0x1400095b8
   140011432:	mov    DWORD PTR [rax],0x22
   140011438:	jmp    0x140011445
   14001143a:	call   0x1400095b8
   14001143f:	mov    DWORD PTR [rax],0x21
   140011445:	add    rsp,0x28
   140011449:	ret    
   14001144a:	int3   
   14001144b:	int3   
   14001144c:	movsd  QWORD PTR [rsp+0x20],xmm3
   140011452:	movsd  QWORD PTR [rsp+0x18],xmm2
   140011458:	push   rbx
   140011459:	sub    rsp,0x50
   14001145d:	lea    r9,[rip+0x25e5c]        # 0x1400372c0
   140011464:	mov    ebx,ecx
   140011466:	xor    r8d,r8d
   140011469:	mov    rax,r9
   14001146c:	cmp    DWORD PTR [rax],edx
   14001146e:	je     0x140011487
   140011470:	lea    rcx,[rip+0x26019]        # 0x140037490
   140011477:	add    rax,0x10
   14001147b:	inc    r8d
   14001147e:	cmp    rax,rcx
   140011481:	jl     0x14001146c
   140011483:	xor    eax,eax
   140011485:	jmp    0x140011492
   140011487:	movsxd rax,r8d
   14001148a:	add    rax,rax
   14001148d:	mov    rax,QWORD PTR [r9+rax*8+0x8]
   140011492:	mov    rcx,QWORD PTR [rsp+0x88]
   14001149a:	mov    QWORD PTR [rsp+0x28],rax
   14001149f:	mov    edx,0xffc0
   1400114a4:	test   rax,rax
   1400114a7:	je     0x140011505
   1400114a9:	mov    eax,DWORD PTR [rsp+0x70]
   1400114ad:	mov    DWORD PTR [rsp+0x20],ebx
   1400114b1:	mov    DWORD PTR [rsp+0x30],eax
   1400114b5:	mov    eax,DWORD PTR [rsp+0x74]
   1400114b9:	mov    DWORD PTR [rsp+0x34],eax
   1400114bd:	mov    eax,DWORD PTR [rsp+0x78]
   1400114c1:	mov    DWORD PTR [rsp+0x38],eax
   1400114c5:	mov    eax,DWORD PTR [rsp+0x7c]
   1400114c9:	mov    DWORD PTR [rsp+0x3c],eax
   1400114cd:	mov    eax,DWORD PTR [rsp+0x80]
   1400114d4:	mov    DWORD PTR [rsp+0x40],eax
   1400114d8:	mov    eax,DWORD PTR [rsp+0x84]
   1400114df:	mov    DWORD PTR [rsp+0x44],eax
   1400114e3:	call   0x14000abd4
   1400114e8:	lea    rcx,[rsp+0x20]
   1400114ed:	call   0x140011520
   1400114f2:	test   eax,eax
   1400114f4:	jne    0x1400114fd
   1400114f6:	mov    ecx,ebx
   1400114f8:	call   0x14001141c
   1400114fd:	movsd  xmm0,QWORD PTR [rsp+0x40]
   140011503:	jmp    0x14001151a
   140011505:	call   0x14000abd4
   14001150a:	mov    ecx,ebx
   14001150c:	call   0x14001141c
   140011511:	movsd  xmm0,QWORD PTR [rsp+0x80]
   14001151a:	add    rsp,0x50
   14001151e:	pop    rbx
   14001151f:	ret    
   140011520:	xor    eax,eax
   140011522:	ret    
   140011523:	int3   
   140011524:	neg    rcx
   140011527:	sbb    eax,eax
   140011529:	and    eax,0x1
   14001152c:	ret    
   14001152d:	int3   
   14001152e:	int3   
   14001152f:	int3   
   140011530:	neg    rcx
   140011533:	sbb    eax,eax
   140011535:	and    eax,0x1
   140011538:	ret    
   140011539:	int3   
   14001153a:	int3   
   14001153b:	int3   
   14001153c:	neg    rcx
   14001153f:	sbb    eax,eax
   140011541:	and    eax,0x1
   140011544:	ret    
   140011545:	int3   
   140011546:	int3   
   140011547:	int3   
   140011548:	int3   
   140011549:	int3   
   14001154a:	int3   
   14001154b:	int3   
   14001154c:	int3   
   14001154d:	int3   
   14001154e:	int3   
   14001154f:	int3   
   140011550:	int3   
   140011551:	int3   
   140011552:	int3   
   140011553:	int3   
   140011554:	int3   
   140011555:	int3   
   140011556:	data16 nop WORD PTR [rax+rax*1+0x0]
   140011560:	sub    rsp,0x28
   140011564:	mov    QWORD PTR [rsp+0x30],rcx
   140011569:	mov    QWORD PTR [rsp+0x38],rdx
   14001156e:	mov    DWORD PTR [rsp+0x40],r8d
   140011573:	mov    rdx,QWORD PTR [rdx]
   140011576:	mov    rax,rcx
   140011579:	call   0x14000f870
   14001157e:	call   rax
   140011580:	call   0x14000f8a0
   140011585:	mov    rcx,rax
   140011588:	mov    rdx,QWORD PTR [rsp+0x38]
   14001158d:	mov    rdx,QWORD PTR [rdx]
   140011590:	mov    r8d,0x2
   140011596:	call   0x14000f870
   14001159b:	add    rsp,0x28
   14001159f:	ret    
   1400115a0:	mov    rax,QWORD PTR [rsp]
   1400115a4:	mov    QWORD PTR [rcx],rax
   1400115a7:	ret    
   1400115a8:	rex push rbx
   1400115aa:	sub    rsp,0x20
   1400115ae:	mov    rbx,rcx
   1400115b1:	call   QWORD PTR [rip+0x15b49]        # 0x140027100
   1400115b7:	mov    ecx,0x1
   1400115bc:	mov    DWORD PTR [rip+0x2798e],eax        # 0x140038f50
   1400115c2:	call   0x14000f8a4
   1400115c7:	mov    rcx,rbx
   1400115ca:	call   0x140009228
   1400115cf:	cmp    DWORD PTR [rip+0x2797a],0x0        # 0x140038f50
   1400115d6:	jne    0x1400115e2
   1400115d8:	mov    ecx,0x1
   1400115dd:	call   0x14000f8a4
   1400115e2:	mov    ecx,0xc0000409
   1400115e7:	add    rsp,0x20
   1400115eb:	pop    rbx
   1400115ec:	jmp    0x140009208
   1400115f1:	int3   
   1400115f2:	int3   
   1400115f3:	int3   
   1400115f4:	mov    QWORD PTR [rsp+0x8],rcx
   1400115f9:	sub    rsp,0x38
   1400115fd:	mov    ecx,0x17
   140011602:	call   0x140025f82
   140011607:	test   eax,eax
   140011609:	je     0x140011612
   14001160b:	mov    ecx,0x2
   140011610:	int    0x29
   140011612:	lea    rcx,[rip+0x27467]        # 0x140038a80
   140011619:	call   0x140008a3c
   14001161e:	mov    rax,QWORD PTR [rsp+0x38]
   140011623:	mov    QWORD PTR [rip+0x2754e],rax        # 0x140038b78
   14001162a:	lea    rax,[rsp+0x38]
   14001162f:	add    rax,0x8
   140011633:	mov    QWORD PTR [rip+0x274de],rax        # 0x140038b18
   14001163a:	mov    rax,QWORD PTR [rip+0x27537]        # 0x140038b78
   140011641:	mov    QWORD PTR [rip+0x273a8],rax        # 0x1400389f0
   140011648:	mov    rax,QWORD PTR [rsp+0x40]
   14001164d:	mov    QWORD PTR [rip+0x274ac],rax        # 0x140038b00
   140011654:	mov    DWORD PTR [rip+0x27382],0xc0000409        # 0x1400389e0
   14001165e:	mov    DWORD PTR [rip+0x2737c],0x1        # 0x1400389e4
   140011668:	mov    DWORD PTR [rip+0x27386],0x1        # 0x1400389f8
   140011672:	mov    eax,0x8
   140011677:	imul   rax,rax,0x0
   14001167b:	lea    rcx,[rip+0x2737e]        # 0x140038a00
   140011682:	mov    QWORD PTR [rcx+rax*1],0x2
   14001168a:	mov    eax,0x8
   14001168f:	imul   rax,rax,0x0
   140011693:	mov    rcx,QWORD PTR [rip+0x253a6]        # 0x140036a40
   14001169a:	mov    QWORD PTR [rsp+rax*1+0x20],rcx
   14001169f:	mov    eax,0x8
   1400116a4:	imul   rax,rax,0x1
   1400116a8:	mov    rcx,QWORD PTR [rip+0x25399]        # 0x140036a48
   1400116af:	mov    QWORD PTR [rsp+rax*1+0x20],rcx
   1400116b4:	lea    rcx,[rip+0x1cbd5]        # 0x14002e290
   1400116bb:	call   0x1400115a8
   1400116c0:	add    rsp,0x38
   1400116c4:	ret    
   1400116c5:	int3   
   1400116c6:	int3   
   1400116c7:	int3   
   1400116c8:	sub    rsp,0x28
   1400116cc:	mov    ecx,0x8
   1400116d1:	call   0x1400116dc
   1400116d6:	add    rsp,0x28
   1400116da:	ret    
   1400116db:	int3   
   1400116dc:	mov    DWORD PTR [rsp+0x8],ecx
   1400116e0:	sub    rsp,0x28
   1400116e4:	mov    ecx,0x17
   1400116e9:	call   0x140025f82
   1400116ee:	test   eax,eax
   1400116f0:	je     0x1400116fa
   1400116f2:	mov    eax,DWORD PTR [rsp+0x30]
   1400116f6:	mov    ecx,eax
   1400116f8:	int    0x29
   1400116fa:	lea    rcx,[rip+0x2737f]        # 0x140038a80
   140011701:	call   0x1400089cc
   140011706:	mov    rax,QWORD PTR [rsp+0x28]
   14001170b:	mov    QWORD PTR [rip+0x27466],rax        # 0x140038b78
   140011712:	lea    rax,[rsp+0x28]
   140011717:	add    rax,0x8
   14001171b:	mov    QWORD PTR [rip+0x273f6],rax        # 0x140038b18
   140011722:	mov    rax,QWORD PTR [rip+0x2744f]        # 0x140038b78
   140011729:	mov    QWORD PTR [rip+0x272c0],rax        # 0x1400389f0
   140011730:	mov    DWORD PTR [rip+0x272a6],0xc0000409        # 0x1400389e0
   14001173a:	mov    DWORD PTR [rip+0x272a0],0x1        # 0x1400389e4
   140011744:	mov    DWORD PTR [rip+0x272aa],0x1        # 0x1400389f8
   14001174e:	mov    eax,0x8
   140011753:	imul   rax,rax,0x0
   140011757:	lea    rcx,[rip+0x272a2]        # 0x140038a00
   14001175e:	mov    edx,DWORD PTR [rsp+0x30]
   140011762:	mov    QWORD PTR [rcx+rax*1],rdx
   140011766:	lea    rcx,[rip+0x1cb23]        # 0x14002e290
   14001176d:	call   0x1400115a8
   140011772:	add    rsp,0x28
   140011776:	ret    
   140011777:	int3   
   140011778:	mov    QWORD PTR [rsp+0x18],r8
   14001177d:	mov    DWORD PTR [rsp+0x10],edx
   140011781:	mov    DWORD PTR [rsp+0x8],ecx
   140011785:	sub    rsp,0x38
   140011789:	mov    ecx,0x17
   14001178e:	call   0x140025f82
   140011793:	test   eax,eax
   140011795:	je     0x14001179f
   140011797:	mov    eax,DWORD PTR [rsp+0x40]
   14001179b:	mov    ecx,eax
   14001179d:	int    0x29
   14001179f:	lea    rcx,[rip+0x272da]        # 0x140038a80
   1400117a6:	call   0x1400089cc
   1400117ab:	mov    rax,QWORD PTR [rsp+0x38]
   1400117b0:	mov    QWORD PTR [rip+0x273c1],rax        # 0x140038b78
   1400117b7:	lea    rax,[rsp+0x38]
   1400117bc:	add    rax,0x8
   1400117c0:	mov    QWORD PTR [rip+0x27351],rax        # 0x140038b18
   1400117c7:	mov    rax,QWORD PTR [rip+0x273aa]        # 0x140038b78
   1400117ce:	mov    QWORD PTR [rip+0x2721b],rax        # 0x1400389f0
   1400117d5:	mov    DWORD PTR [rip+0x27201],0xc0000409        # 0x1400389e0
   1400117df:	mov    DWORD PTR [rip+0x271fb],0x1        # 0x1400389e4
   1400117e9:	cmp    DWORD PTR [rsp+0x48],0x0
   1400117ee:	jbe    0x140011800
   1400117f0:	cmp    QWORD PTR [rsp+0x50],0x0
   1400117f6:	jne    0x140011800
   1400117f8:	mov    DWORD PTR [rsp+0x48],0x0
   140011800:	cmp    DWORD PTR [rsp+0x48],0xe
   140011805:	jbe    0x140011811
   140011807:	mov    eax,DWORD PTR [rsp+0x48]
   14001180b:	dec    eax
   14001180d:	mov    DWORD PTR [rsp+0x48],eax
   140011811:	mov    eax,DWORD PTR [rsp+0x48]
   140011815:	inc    eax
   140011817:	mov    DWORD PTR [rip+0x271db],eax        # 0x1400389f8
   14001181d:	mov    eax,0x8
   140011822:	imul   rax,rax,0x0
   140011826:	lea    rcx,[rip+0x271d3]        # 0x140038a00
   14001182d:	mov    edx,DWORD PTR [rsp+0x40]
   140011831:	mov    QWORD PTR [rcx+rax*1],rdx
   140011835:	mov    DWORD PTR [rsp+0x20],0x0
   14001183d:	jmp    0x140011849
   14001183f:	mov    eax,DWORD PTR [rsp+0x20]
   140011843:	inc    eax
   140011845:	mov    DWORD PTR [rsp+0x20],eax
   140011849:	mov    eax,DWORD PTR [rsp+0x48]
   14001184d:	cmp    DWORD PTR [rsp+0x20],eax
   140011851:	jae    0x140011875
   140011853:	mov    eax,DWORD PTR [rsp+0x20]
   140011857:	mov    ecx,DWORD PTR [rsp+0x20]
   14001185b:	inc    ecx
   14001185d:	mov    ecx,ecx
   14001185f:	lea    rdx,[rip+0x2719a]        # 0x140038a00
   140011866:	mov    r8,QWORD PTR [rsp+0x50]
   14001186b:	mov    rax,QWORD PTR [r8+rax*8]
   14001186f:	mov    QWORD PTR [rdx+rcx*8],rax
   140011873:	jmp    0x14001183f
   140011875:	lea    rcx,[rip+0x1ca14]        # 0x14002e290
   14001187c:	call   0x1400115a8
   140011881:	add    rsp,0x38
   140011885:	ret    
   140011886:	int3   
   140011887:	int3   
   140011888:	and    QWORD PTR [rcx],0x0
   14001188c:	mov    rax,rcx
   14001188f:	ret    
   140011890:	mov    QWORD PTR [rsp+0x8],rbx
   140011895:	mov    QWORD PTR [rsp+0x10],rsi
   14001189a:	push   rdi
   14001189b:	sub    rsp,0x20
   14001189f:	and    QWORD PTR [rcx],0x0
   1400118a3:	mov    BYTE PTR [rcx+0x8],0x0
   1400118a7:	and    DWORD PTR [rcx+0x8],0xffff00ff
   1400118ae:	mov    rdi,rdx
   1400118b1:	mov    rdx,QWORD PTR [rdx]
   1400118b4:	mov    sil,r8b
   1400118b7:	mov    rbx,rcx
   1400118ba:	test   rdx,rdx
   1400118bd:	je     0x140011959
   1400118c3:	cmp    BYTE PTR [rdx],0x0
   1400118c6:	je     0x140011953
   1400118cc:	xor    r8d,r8d
   1400118cf:	mov    r9,QWORD PTR [rdi]
   1400118d2:	mov    cl,BYTE PTR [r9]
   1400118d5:	cmp    cl,sil
   1400118d8:	je     0x14001191b
   1400118da:	lea    eax,[rcx-0x24]
   1400118dd:	cmp    al,0x3b
   1400118df:	ja     0x1400118f1
   1400118e1:	movabs r10,0x87fffffe53ff201
   1400118eb:	bt     r10,rax
   1400118ef:	jb     0x14001190c
   1400118f1:	lea    eax,[rcx-0x61]
   1400118f4:	cmp    al,0x19
   1400118f6:	jbe    0x14001190c
   1400118f8:	add    cl,0x80
   1400118fb:	cmp    cl,0x7e
   1400118fe:	jbe    0x14001190c
   140011900:	test   DWORD PTR [rip+0x2768a],0x10000        # 0x140038f94
   14001190a:	je     0x140011941
   14001190c:	lea    rax,[r9+0x1]
   140011910:	inc    r8d
   140011913:	mov    QWORD PTR [rdi],rax
   140011916:	cmp    BYTE PTR [rax],0x0
   140011919:	jne    0x1400118cf
   14001191b:	mov    rcx,rbx
   14001191e:	call   0x140013448
   140011923:	mov    rax,QWORD PTR [rdi]
   140011926:	mov    cl,BYTE PTR [rax]
   140011928:	test   cl,cl
   14001192a:	je     0x140011947
   14001192c:	inc    rax
   14001192f:	mov    QWORD PTR [rdi],rax
   140011932:	cmp    cl,sil
   140011935:	je     0x14001195d
   140011937:	and    QWORD PTR [rbx],0x0
   14001193b:	mov    BYTE PTR [rbx+0x8],0x3
   14001193f:	jmp    0x14001195d
   140011941:	mov    BYTE PTR [rbx+0x8],0x2
   140011945:	jmp    0x14001195d
   140011947:	cmp    BYTE PTR [rbx+0x8],0x0
   14001194b:	jne    0x14001195d
   14001194d:	mov    BYTE PTR [rbx+0x8],0x1
   140011951:	jmp    0x14001195d
   140011953:	mov    BYTE PTR [rcx+0x8],0x1
   140011957:	jmp    0x14001195d
   140011959:	mov    BYTE PTR [rcx+0x8],0x2
   14001195d:	mov    rsi,QWORD PTR [rsp+0x38]
   140011962:	mov    rax,rbx
   140011965:	mov    rbx,QWORD PTR [rsp+0x30]
   14001196a:	add    rsp,0x20
   14001196e:	pop    rdi
   14001196f:	ret    
   140011970:	movups xmm0,XMMWORD PTR [rdx]
   140011973:	mov    rax,rcx
   140011976:	movdqu XMMWORD PTR [rcx],xmm0
   14001197a:	ret    
   14001197b:	int3   
   14001197c:	mov    BYTE PTR [rsp+0x10],dl
   140011980:	push   rbx
   140011981:	sub    rsp,0x20
   140011985:	and    QWORD PTR [rcx],0x0
   140011989:	mov    BYTE PTR [rcx+0x8],0x0
   14001198d:	and    DWORD PTR [rcx+0x8],0xffff00ff
   140011994:	mov    rbx,rcx
   140011997:	test   dl,dl
   140011999:	je     0x1400119ab
   14001199b:	lea    rdx,[rsp+0x38]
   1400119a0:	mov    r8d,0x1
   1400119a6:	call   0x140013448
   1400119ab:	mov    rax,rbx
   1400119ae:	add    rsp,0x20
   1400119b2:	pop    rbx
   1400119b3:	ret    
   1400119b4:	mov    QWORD PTR [rsp+0x8],rbx
   1400119b9:	mov    QWORD PTR [rsp+0x10],rsi
   1400119be:	push   rdi
   1400119bf:	sub    rsp,0x20
   1400119c3:	xor    esi,esi
   1400119c5:	mov    rdi,rdx
   1400119c8:	mov    rbx,rcx
   1400119cb:	test   rdx,rdx
   1400119ce:	je     0x140011a18
   1400119d0:	lea    edx,[rsi+0x10]
   1400119d3:	lea    rcx,[rip+0x275c6]        # 0x140038fa0
   1400119da:	xor    r8d,r8d
   1400119dd:	call   0x1400157b8
   1400119e2:	test   rax,rax
   1400119e5:	je     0x140011a04
   1400119e7:	lea    rcx,[rip+0x1d632]        # 0x14002f020
   1400119ee:	mov    QWORD PTR [rax],rcx
   1400119f1:	mov    cl,BYTE PTR [rdi+0x8]
   1400119f4:	sub    cl,0x2
   1400119f7:	cmp    cl,0x1
   1400119fa:	cmovbe rdi,rsi
   1400119fe:	mov    QWORD PTR [rax+0x8],rdi
   140011a02:	jmp    0x140011a07
   140011a04:	mov    rax,rsi
   140011a07:	mov    QWORD PTR [rbx],rax
   140011a0a:	neg    rax
   140011a0d:	sbb    al,al
   140011a0f:	not    al
   140011a11:	and    al,0x3
   140011a13:	mov    BYTE PTR [rbx+0x8],al
   140011a16:	jmp    0x140011a1f
   140011a18:	mov    BYTE PTR [rcx+0x8],sil
   140011a1c:	mov    QWORD PTR [rcx],rsi
   140011a1f:	and    DWORD PTR [rbx+0x8],0xffff00ff
   140011a26:	mov    rsi,QWORD PTR [rsp+0x38]
   140011a2b:	mov    rax,rbx
   140011a2e:	mov    rbx,QWORD PTR [rsp+0x30]
   140011a33:	add    rsp,0x20
   140011a37:	pop    rdi
   140011a38:	ret    
   140011a39:	int3   
   140011a3a:	int3   
   140011a3b:	int3   
   140011a3c:	rex push rbx
   140011a3e:	sub    rsp,0x20
   140011a42:	mov    rbx,rcx
   140011a45:	xor    ecx,ecx
   140011a47:	mov    BYTE PTR [rbx+0x8],cl
   140011a4a:	and    DWORD PTR [rbx+0x8],0xffff00ff
   140011a51:	mov    QWORD PTR [rbx],rcx
   140011a54:	test   rdx,rdx
   140011a57:	je     0x140011a7a
   140011a59:	mov    rax,rdx
   140011a5c:	mov    r8d,ecx
   140011a5f:	cmp    BYTE PTR [rdx],cl
   140011a61:	je     0x140011a7a
   140011a63:	inc    rax
   140011a66:	inc    r8d
   140011a69:	cmp    BYTE PTR [rax],cl
   140011a6b:	jne    0x140011a63
   140011a6d:	test   r8d,r8d
   140011a70:	je     0x140011a7a
   140011a72:	mov    rcx,rbx
   140011a75:	call   0x140013448
   140011a7a:	mov    rax,rbx
   140011a7d:	add    rsp,0x20
   140011a81:	pop    rbx
   140011a82:	ret    
   140011a83:	int3   
   140011a84:	mov    QWORD PTR [rsp+0x8],rbx
   140011a89:	push   rdi
   140011a8a:	sub    rsp,0x20
   140011a8e:	and    DWORD PTR [rcx+0x8],0xffff00ff
   140011a95:	xor    edi,edi
   140011a97:	mov    rbx,rcx
   140011a9a:	lea    ecx,[rdi+0x1]
   140011a9d:	lea    eax,[rdx-0x2]
   140011aa0:	mov    r8d,edx
   140011aa3:	cmp    eax,ecx
   140011aa5:	mov    QWORD PTR [rbx],rdi
   140011aa8:	cmova  r8d,edi
   140011aac:	mov    BYTE PTR [rbx+0x8],r8b
   140011ab0:	cmp    edx,ecx
   140011ab2:	jne    0x140011ac5
   140011ab4:	call   0x1400183bc
   140011ab9:	mov    QWORD PTR [rbx],rax
   140011abc:	test   rax,rax
   140011abf:	jne    0x140011ac5
   140011ac1:	mov    BYTE PTR [rbx+0x8],0x3
   140011ac5:	mov    rax,rbx
   140011ac8:	mov    rbx,QWORD PTR [rsp+0x30]
   140011acd:	add    rsp,0x20
   140011ad1:	pop    rdi
   140011ad2:	ret    
   140011ad3:	int3   
   140011ad4:	and    QWORD PTR [rcx],0x0
   140011ad8:	mov    BYTE PTR [rcx+0x8],0x0
   140011adc:	and    DWORD PTR [rcx+0x8],0xffff00ff
   140011ae3:	mov    rax,rcx
   140011ae6:	ret    
   140011ae7:	int3   
   140011ae8:	rex push rbx
   140011aea:	sub    rsp,0x40
   140011aee:	mov    rax,QWORD PTR [rip+0x24f4b]        # 0x140036a40
   140011af5:	xor    rax,rsp
   140011af8:	mov    QWORD PTR [rsp+0x38],rax
   140011afd:	xor    r11d,r11d
   140011b00:	mov    r8,rdx
   140011b03:	mov    rbx,rcx
   140011b06:	mov    BYTE PTR [rcx+0x8],r11b
   140011b0a:	and    DWORD PTR [rcx+0x8],0xffff00ff
   140011b11:	lea    r9,[rsp+0x35]
   140011b16:	mov    QWORD PTR [rcx],r11
   140011b19:	mov    BYTE PTR [rsp+0x35],r11b
   140011b1e:	mov    r10b,r11b
   140011b21:	test   rdx,rdx
   140011b24:	jns    0x140011b2c
   140011b26:	mov    r10b,0x1
   140011b29:	neg    r8
   140011b2c:	dec    r9
   140011b2f:	movabs rax,0xcccccccccccccccd
   140011b39:	mul    r8
   140011b3c:	shr    rdx,0x3
   140011b40:	mov    al,dl
   140011b42:	shl    al,0x2
   140011b45:	lea    ecx,[rax+rdx*1]
   140011b48:	add    cl,cl
   140011b4a:	sub    r8b,cl
   140011b4d:	add    r8b,0x30
   140011b51:	mov    BYTE PTR [r9],r8b
   140011b54:	mov    r8,rdx
   140011b57:	test   rdx,rdx
   140011b5a:	jne    0x140011b2c
   140011b5c:	test   r10b,r10b
   140011b5f:	je     0x140011b68
   140011b61:	dec    r9
   140011b64:	mov    BYTE PTR [r9],0x2d
   140011b68:	lea    r8,[rsp+0x35]
   140011b6d:	mov    rdx,r9
   140011b70:	mov    rcx,rbx
   140011b73:	sub    r8d,r9d
   140011b76:	call   0x140013448
   140011b7b:	mov    rax,rbx
   140011b7e:	mov    rcx,QWORD PTR [rsp+0x38]
   140011b83:	xor    rcx,rsp
   140011b86:	call   0x14000d0a0
   140011b8b:	add    rsp,0x40
   140011b8f:	pop    rbx
   140011b90:	ret    
   140011b91:	int3   
   140011b92:	int3   
   140011b93:	int3   
   140011b94:	rex push rbx
   140011b96:	sub    rsp,0x40
   140011b9a:	mov    rax,QWORD PTR [rip+0x24e9f]        # 0x140036a40
   140011ba1:	xor    rax,rsp
   140011ba4:	mov    QWORD PTR [rsp+0x38],rax
   140011ba9:	xor    r10d,r10d
   140011bac:	mov    r8,rdx
   140011baf:	mov    rbx,rcx
   140011bb2:	mov    BYTE PTR [rcx+0x8],r10b
   140011bb6:	and    DWORD PTR [rcx+0x8],0xffff00ff
   140011bbd:	lea    r9,[rsp+0x34]
   140011bc2:	mov    QWORD PTR [rcx],r10
   140011bc5:	mov    BYTE PTR [rsp+0x34],r10b
   140011bca:	dec    r9
   140011bcd:	movabs rax,0xcccccccccccccccd
   140011bd7:	mul    r8
   140011bda:	shr    rdx,0x3
   140011bde:	mov    al,dl
   140011be0:	shl    al,0x2
   140011be3:	lea    ecx,[rax+rdx*1]
   140011be6:	add    cl,cl
   140011be8:	sub    r8b,cl
   140011beb:	add    r8b,0x30
   140011bef:	mov    BYTE PTR [r9],r8b
   140011bf2:	mov    r8,rdx
   140011bf5:	test   rdx,rdx
   140011bf8:	jne    0x140011bca
   140011bfa:	lea    r8,[rsp+0x34]
   140011bff:	mov    rdx,r9
   140011c02:	mov    rcx,rbx
   140011c05:	sub    r8d,r9d
   140011c08:	call   0x140013448
   140011c0d:	mov    rax,rbx
   140011c10:	mov    rcx,QWORD PTR [rsp+0x38]
   140011c15:	xor    rcx,rsp
   140011c18:	call   0x14000d0a0
   140011c1d:	add    rsp,0x40
   140011c21:	pop    rbx
   140011c22:	ret    
   140011c23:	int3   
   140011c24:	lea    rax,[rip+0x1d395]        # 0x14002efc0
   140011c2b:	mov    QWORD PTR [rcx],rax
   140011c2e:	mov    rax,rcx
   140011c31:	ret    
   140011c32:	int3   
   140011c33:	int3   
   140011c34:	lea    rax,[rip+0x1d405]        # 0x14002f040
   140011c3b:	mov    DWORD PTR [rcx+0x8],edx
   140011c3e:	mov    QWORD PTR [rcx],rax
   140011c41:	xor    eax,eax
   140011c43:	cmp    edx,0x1
   140011c46:	lea    r8d,[rax+0x4]
   140011c4a:	cmove  eax,r8d
   140011c4e:	mov    DWORD PTR [rcx+0xc],eax
   140011c51:	mov    rax,rcx
   140011c54:	ret    
   140011c55:	int3   
   140011c56:	int3   
   140011c57:	int3   
   140011c58:	or     DWORD PTR [rcx],0xffffffff
   140011c5b:	mov    rax,rcx
   140011c5e:	ret    
   140011c5f:	int3   
   140011c60:	or     r10d,0xffffffff
   140011c64:	lea    rax,[rcx+0x58]
   140011c68:	mov    DWORD PTR [rcx],r10d
   140011c6b:	mov    DWORD PTR [rax],r10d
   140011c6e:	mov    QWORD PTR [rip+0x2730b],r8        # 0x140038f80
   140011c75:	mov    QWORD PTR [rip+0x272fc],r8        # 0x140038f78
   140011c7c:	xor    r8d,r8d
   140011c7f:	test   rdx,rdx
   140011c82:	je     0x140011c94
   140011c84:	mov    DWORD PTR [rip+0x27305],r9d        # 0x140038f90
   140011c8b:	mov    QWORD PTR [rip+0x272f6],rdx        # 0x140038f88
   140011c92:	jmp    0x140011ca2
   140011c94:	mov    QWORD PTR [rip+0x272ed],r8        # 0x140038f88
   140011c9b:	mov    DWORD PTR [rip+0x272ee],r8d        # 0x140038f90
   140011ca2:	mov    QWORD PTR [rip+0x272bf],rax        # 0x140038f68
   140011ca9:	mov    eax,DWORD PTR [rsp+0x30]
   140011cad:	mov    QWORD PTR [rip+0x272ac],rcx        # 0x140038f60
   140011cb4:	mov    DWORD PTR [rip+0x272da],eax        # 0x140038f94
   140011cba:	mov    rax,QWORD PTR [rsp+0x28]
   140011cbf:	mov    BYTE PTR [rip+0x272d2],r8b        # 0x140038f98
   140011cc6:	mov    QWORD PTR [rip+0x2728b],rax        # 0x140038f58
   140011ccd:	mov    rax,rcx
   140011cd0:	ret    
   140011cd1:	int3   
   140011cd2:	int3   
   140011cd3:	int3   
   140011cd4:	lea    rax,[rip+0x1d305]        # 0x14002efe0
   140011cdb:	mov    BYTE PTR [rcx+0x8],dl
   140011cde:	mov    QWORD PTR [rcx],rax
   140011ce1:	mov    rax,rcx
   140011ce4:	ret    
   140011ce5:	int3   
   140011ce6:	int3   
   140011ce7:	int3   
   140011ce8:	lea    rax,[rip+0x1d331]        # 0x14002f020
   140011cef:	xor    r8d,r8d
   140011cf2:	mov    QWORD PTR [rcx],rax
   140011cf5:	test   rdx,rdx
   140011cf8:	je     0x140011d03
   140011cfa:	mov    al,BYTE PTR [rdx+0x8]
   140011cfd:	sub    al,0x2
   140011cff:	cmp    al,0x1
   140011d01:	jbe    0x140011d06
   140011d03:	mov    r8,rdx
   140011d06:	mov    QWORD PTR [rcx+0x8],r8
   140011d0a:	mov    rax,rcx
   140011d0d:	ret    
   140011d0e:	int3   
   140011d0f:	int3   
   140011d10:	or     DWORD PTR [rcx+0x18],0xffffffff
   140011d14:	lea    rax,[rip+0x1d345]        # 0x14002f060
   140011d1b:	mov    QWORD PTR [rcx+0x8],rdx
   140011d1f:	mov    QWORD PTR [rcx],rax
   140011d22:	mov    QWORD PTR [rcx+0x10],r8
   140011d26:	mov    rax,rcx
   140011d29:	ret    
   140011d2a:	int3   
   140011d2b:	int3   
   140011d2c:	mov    QWORD PTR [rsp+0x8],rbx
   140011d31:	mov    QWORD PTR [rsp+0x10],rsi
   140011d36:	push   rdi
   140011d37:	sub    rsp,0x20
   140011d3b:	lea    rax,[rip+0x1d2be]        # 0x14002f000
   140011d42:	mov    edi,r8d
   140011d45:	mov    rsi,rdx
   140011d48:	mov    rbx,rcx
   140011d4b:	mov    QWORD PTR [rcx],rax
   140011d4e:	test   r8d,r8d
   140011d51:	je     0x140011d97
   140011d53:	test   rdx,rdx
   140011d56:	je     0x140011d97
   140011d58:	lea    rcx,[rip+0x27241]        # 0x140038fa0
   140011d5f:	movsxd rdx,edi
   140011d62:	xor    r8d,r8d
   140011d65:	call   0x1400157b8
   140011d6a:	mov    DWORD PTR [rbx+0x10],edi
   140011d6d:	mov    rcx,rax
   140011d70:	mov    QWORD PTR [rbx+0x8],rax
   140011d74:	test   rax,rax
   140011d77:	je     0x140011d91
   140011d79:	test   edi,edi
   140011d7b:	je     0x140011da0
   140011d7d:	sub    rsi,rax
   140011d80:	mov    edx,edi
   140011d82:	mov    al,BYTE PTR [rsi+rcx*1]
   140011d85:	mov    BYTE PTR [rcx],al
   140011d87:	inc    rcx
   140011d8a:	dec    rdx
   140011d8d:	jne    0x140011d82
   140011d8f:	jmp    0x140011da0
   140011d91:	and    DWORD PTR [rbx+0x10],0x0
   140011d95:	jmp    0x140011da0
   140011d97:	and    QWORD PTR [rcx+0x8],0x0
   140011d9c:	and    DWORD PTR [rcx+0x10],0x0
   140011da0:	mov    rsi,QWORD PTR [rsp+0x38]
   140011da5:	mov    rax,rbx
   140011da8:	mov    rbx,QWORD PTR [rsp+0x30]
   140011dad:	add    rsp,0x20
   140011db1:	pop    rdi
   140011db2:	ret    
   140011db3:	int3   
   140011db4:	mov    rdx,rcx
   140011db7:	lea    rcx,[rip+0x271e2]        # 0x140038fa0
   140011dbe:	jmp    0x1400157b8
   140011dc3:	int3   
   140011dc4:	movups xmm0,XMMWORD PTR [rdx]
   140011dc7:	mov    rax,rcx
   140011dca:	movdqu XMMWORD PTR [rcx],xmm0
   140011dce:	ret    
   140011dcf:	int3   
   140011dd0:	mov    BYTE PTR [rsp+0x10],dl
   140011dd4:	push   rbx
   140011dd5:	sub    rsp,0x20
   140011dd9:	and    QWORD PTR [rcx],0x0
   140011ddd:	mov    BYTE PTR [rcx+0x8],0x0
   140011de1:	and    DWORD PTR [rcx+0x8],0xffff00ff
   140011de8:	mov    rbx,rcx
   140011deb:	test   dl,dl
   140011ded:	je     0x140011dff
   140011def:	lea    rdx,[rsp+0x38]
   140011df4:	mov    r8d,0x1
   140011dfa:	call   0x140013448
   140011dff:	mov    rax,rbx
   140011e02:	add    rsp,0x20
   140011e06:	pop    rbx
   140011e07:	ret    
   140011e08:	mov    QWORD PTR [rsp+0x8],rbx
   140011e0d:	mov    QWORD PTR [rsp+0x10],rsi
   140011e12:	push   rdi
   140011e13:	sub    rsp,0x20
   140011e17:	xor    esi,esi
   140011e19:	mov    rdi,rdx
   140011e1c:	mov    rbx,rcx
   140011e1f:	mov    BYTE PTR [rcx+0x8],sil
   140011e23:	and    DWORD PTR [rcx+0x8],0xffff00ff
   140011e2a:	mov    QWORD PTR [rcx],rsi
   140011e2d:	test   rdx,rdx
   140011e30:	je     0x140011e77
   140011e32:	lea    edx,[rsi+0x10]
   140011e35:	lea    rcx,[rip+0x27164]        # 0x140038fa0
   140011e3c:	xor    r8d,r8d
   140011e3f:	call   0x1400157b8
   140011e44:	test   rax,rax
   140011e47:	je     0x140011e66
   140011e49:	lea    rcx,[rip+0x1d1d0]        # 0x14002f020
   140011e50:	mov    QWORD PTR [rax],rcx
   140011e53:	mov    cl,BYTE PTR [rdi+0x8]
   140011e56:	sub    cl,0x2
   140011e59:	cmp    cl,0x1
   140011e5c:	cmovbe rdi,rsi
   140011e60:	mov    QWORD PTR [rax+0x8],rdi
   140011e64:	jmp    0x140011e69
   140011e66:	mov    rax,rsi
   140011e69:	mov    QWORD PTR [rbx],rax
   140011e6c:	test   rax,rax
   140011e6f:	jne    0x140011e7b
   140011e71:	mov    BYTE PTR [rbx+0x8],0x3
   140011e75:	jmp    0x140011e7b
   140011e77:	mov    BYTE PTR [rcx+0x8],0x3
   140011e7b:	mov    rsi,QWORD PTR [rsp+0x38]
   140011e80:	mov    rax,rbx
   140011e83:	mov    rbx,QWORD PTR [rsp+0x30]
   140011e88:	add    rsp,0x20
   140011e8c:	pop    rdi
   140011e8d:	ret    
   140011e8e:	int3   
   140011e8f:	int3   
   140011e90:	rex push rbx
   140011e92:	sub    rsp,0x20
   140011e96:	mov    rbx,rcx
   140011e99:	xor    ecx,ecx
   140011e9b:	mov    rax,rdx
   140011e9e:	mov    BYTE PTR [rbx+0x8],cl
   140011ea1:	and    DWORD PTR [rbx+0x8],0xffff00ff
   140011ea8:	mov    QWORD PTR [rbx],rcx
   140011eab:	mov    r8d,ecx
   140011eae:	cmp    BYTE PTR [rdx],cl
   140011eb0:	je     0x140011ebc
   140011eb2:	inc    rax
   140011eb5:	inc    r8d
   140011eb8:	cmp    BYTE PTR [rax],cl
   140011eba:	jne    0x140011eb2
   140011ebc:	mov    rcx,rbx
   140011ebf:	call   0x140013448
   140011ec4:	mov    rax,rbx
   140011ec7:	add    rsp,0x20
   140011ecb:	pop    rbx
   140011ecc:	ret    
   140011ecd:	int3   
   140011ece:	int3   
   140011ecf:	int3   
   140011ed0:	rex push rbx
   140011ed2:	sub    rsp,0x20
   140011ed6:	and    DWORD PTR [rcx+0x8],0xffff00ff
   140011edd:	mov    rbx,rcx
   140011ee0:	mov    BYTE PTR [rcx+0x8],dl
   140011ee3:	mov    ecx,0x1
   140011ee8:	cmp    edx,ecx
   140011eea:	jne    0x140011eff
   140011eec:	call   0x1400183bc
   140011ef1:	mov    QWORD PTR [rbx],rax
   140011ef4:	test   rax,rax
   140011ef7:	jne    0x140011f03
   140011ef9:	mov    BYTE PTR [rbx+0x8],0x3
   140011efd:	jmp    0x140011f03
   140011eff:	and    QWORD PTR [rbx],0x0
   140011f03:	mov    rax,rbx
   140011f06:	add    rsp,0x20
   140011f0a:	pop    rbx
   140011f0b:	ret    
   140011f0c:	rex push rbx
   140011f0e:	sub    rsp,0x20
   140011f12:	mov    rbx,rdx
   140011f15:	cmp    r8d,0x9
   140011f19:	ja     0x140011f3d
   140011f1b:	cmp    DWORD PTR [rcx],0xffffffff
   140011f1e:	je     0x140011f36
   140011f20:	cmp    r8d,DWORD PTR [rcx]
   140011f23:	jg     0x140011f36
   140011f25:	movsxd rax,r8d
   140011f28:	mov    rcx,QWORD PTR [rcx+rax*8+0x8]
   140011f2d:	movups xmm0,XMMWORD PTR [rcx]
   140011f30:	movdqu XMMWORD PTR [rdx],xmm0
   140011f34:	jmp    0x140011f4a
   140011f36:	mov    edx,0x2
   140011f3b:	jmp    0x140011f42
   140011f3d:	mov    edx,0x3
   140011f42:	mov    rcx,rbx
   140011f45:	call   0x140011a84
   140011f4a:	mov    rax,rbx
   140011f4d:	add    rsp,0x20
   140011f51:	pop    rbx
   140011f52:	ret    
   140011f53:	int3   
   140011f54:	mov    QWORD PTR [rsp+0x8],rbx
   140011f59:	push   rbp
   140011f5a:	mov    rbp,rsp
   140011f5d:	sub    rsp,0x70
   140011f61:	mov    ecx,DWORD PTR [rbp-0x48]
   140011f64:	and    QWORD PTR [rbp-0x50],0x0
   140011f69:	and    QWORD PTR [rbp-0x40],0x0
   140011f6e:	mov    eax,0xffff0000
   140011f73:	and    DWORD PTR [rbp-0x38],eax
   140011f76:	and    ecx,eax
   140011f78:	mov    rax,QWORD PTR [rip+0x27001]        # 0x140038f80
   140011f7f:	mov    DWORD PTR [rbp-0x48],ecx
   140011f82:	test   rax,rax
   140011f85:	je     0x14001205c
   140011f8b:	cmp    BYTE PTR [rax],0x3f
   140011f8e:	jne    0x140012027
   140011f94:	mov    dl,BYTE PTR [rax+0x1]
   140011f97:	cmp    dl,0x40
   140011f9a:	jne    0x140011fda
   140011f9c:	add    QWORD PTR [rip+0x26fd4],0x2        # 0x140038f78
   140011fa4:	lea    rcx,[rbp-0x20]
   140011fa8:	call   0x1400147e0
   140011fad:	lea    rdx,[rip+0x1cc48]        # 0x14002ebfc
   140011fb4:	lea    rcx,[rbp-0x10]
   140011fb8:	mov    rbx,rax
   140011fbb:	call   0x140011a3c
   140011fc0:	lea    rcx,[rbp-0x30]
   140011fc4:	mov    rdx,rbx
   140011fc7:	movups xmm0,XMMWORD PTR [rax]
   140011fca:	movdqu XMMWORD PTR [rbp-0x30],xmm0
   140011fcf:	call   0x1400122b0
   140011fd4:	movaps xmm1,XMMWORD PTR [rbp-0x30]
   140011fd8:	jmp    0x140012033
   140011fda:	cmp    dl,0x24
   140011fdd:	jne    0x140012039
   140011fdf:	lea    rcx,[rbp-0x10]
   140011fe3:	xor    edx,edx
   140011fe5:	call   0x1400175c0
   140011fea:	movups xmm1,XMMWORD PTR [rax]
   140011fed:	movdqa xmm0,xmm1
   140011ff1:	psrldq xmm0,0x8
   140011ff6:	movd   eax,xmm0
   140011ffa:	mov    BYTE PTR [rbp-0x48],al
   140011ffd:	cmp    al,0x2
   140011fff:	je     0x140012019
   140012001:	test   DWORD PTR [rip+0x26f89],0x1000        # 0x140038f94
   14001200b:	jne    0x140012060
   14001200d:	mov    rax,QWORD PTR [rip+0x26f64]        # 0x140038f78
   140012014:	cmp    BYTE PTR [rax],0x0
   140012017:	je     0x140012060
   140012019:	mov    rax,QWORD PTR [rip+0x26f60]        # 0x140038f80
   140012020:	mov    QWORD PTR [rip+0x26f51],rax        # 0x140038f78
   140012027:	lea    rcx,[rbp-0x10]
   14001202b:	call   0x1400147e0
   140012030:	movups xmm1,XMMWORD PTR [rax]
   140012033:	movaps XMMWORD PTR [rbp-0x50],xmm1
   140012037:	jmp    0x140012060
   140012039:	cmp    dl,0x3f
   14001203c:	jne    0x140012027
   14001203e:	mov    rax,QWORD PTR [rip+0x26f3b]        # 0x140038f80
   140012045:	cmp    BYTE PTR [rax+0x2],0x40
   140012049:	jne    0x140012027
   14001204b:	and    ecx,0xffff0002
   140012051:	or     ecx,0x2
   140012054:	and    QWORD PTR [rbp-0x50],0x0
   140012059:	mov    DWORD PTR [rbp-0x48],ecx
   14001205c:	movaps xmm1,XMMWORD PTR [rbp-0x50]
   140012060:	cmp    BYTE PTR [rbp-0x48],0x3
   140012064:	jne    0x14001206d
   140012066:	xor    eax,eax
   140012068:	jmp    0x14001213a
   14001206d:	cmp    BYTE PTR [rbp-0x48],0x2
   140012071:	je     0x140012092
   140012073:	test   DWORD PTR [rip+0x26f17],0x1000        # 0x140038f94
   14001207d:	jne    0x14001208b
   14001207f:	mov    rax,QWORD PTR [rip+0x26ef2]        # 0x140038f78
   140012086:	cmp    BYTE PTR [rax],0x0
   140012089:	jne    0x140012092
   14001208b:	movdqa XMMWORD PTR [rbp-0x40],xmm1
   140012090:	jmp    0x1400120a2
   140012092:	mov    rdx,QWORD PTR [rip+0x26ee7]        # 0x140038f80
   140012099:	lea    rcx,[rbp-0x40]
   14001209d:	call   0x140011e90
   1400120a2:	mov    rax,QWORD PTR [rip+0x26edf]        # 0x140038f88
   1400120a9:	test   rax,rax
   1400120ac:	jne    0x1400120e1
   1400120ae:	mov    rcx,QWORD PTR [rbp-0x40]
   1400120b2:	test   rcx,rcx
   1400120b5:	je     0x1400120bc
   1400120b7:	mov    rax,QWORD PTR [rcx]
   1400120ba:	call   QWORD PTR [rax]
   1400120bc:	inc    eax
   1400120be:	movsxd rcx,eax
   1400120c1:	mov    DWORD PTR [rip+0x26ec9],eax        # 0x140038f90
   1400120c7:	add    rcx,0x7
   1400120cb:	and    rcx,0xfffffffffffffff8
   1400120cf:	call   QWORD PTR [rip+0x26ecb]        # 0x140038fa0
   1400120d5:	mov    QWORD PTR [rip+0x26eac],rax        # 0x140038f88
   1400120dc:	test   rax,rax
   1400120df:	je     0x14001213a
   1400120e1:	mov    r8d,DWORD PTR [rip+0x26ea8]        # 0x140038f90
   1400120e8:	lea    rcx,[rbp-0x40]
   1400120ec:	mov    rdx,rax
   1400120ef:	call   0x140016ca4
   1400120f4:	mov    rax,QWORD PTR [rip+0x26e8d]        # 0x140038f88
   1400120fb:	mov    dl,BYTE PTR [rax]
   1400120fd:	mov    rcx,rax
   140012100:	test   dl,dl
   140012102:	je     0x14001212f
   140012104:	mov    r8b,0x20
   140012107:	cmp    dl,r8b
   14001210a:	jne    0x140012121
   14001210c:	inc    rax
   14001210f:	mov    BYTE PTR [rcx],r8b
   140012112:	inc    rcx
   140012115:	jmp    0x14001211a
   140012117:	inc    rax
   14001211a:	cmp    BYTE PTR [rax],r8b
   14001211d:	je     0x140012117
   14001211f:	jmp    0x140012129
   140012121:	mov    BYTE PTR [rcx],dl
   140012123:	inc    rcx
   140012126:	inc    rax
   140012129:	mov    dl,BYTE PTR [rax]
   14001212b:	test   dl,dl
   14001212d:	jne    0x140012107
   14001212f:	mov    al,BYTE PTR [rax]
   140012131:	mov    BYTE PTR [rcx],al
   140012133:	mov    rax,QWORD PTR [rip+0x26e4e]        # 0x140038f88
   14001213a:	mov    rbx,QWORD PTR [rsp+0x80]
   140012142:	add    rsp,0x70
   140012146:	pop    rbp
   140012147:	ret    
   140012148:	mov    QWORD PTR [rsp+0x8],rbx
   14001214d:	push   rdi
   14001214e:	sub    rsp,0x30
   140012152:	mov    rdi,rcx
   140012155:	lea    rcx,[rsp+0x20]
   14001215a:	mov    rbx,r8
   14001215d:	call   0x14001197c
   140012162:	mov    rdx,rbx
   140012165:	mov    rcx,rdi
   140012168:	movups xmm0,XMMWORD PTR [rax]
   14001216b:	movdqu XMMWORD PTR [rdi],xmm0
   14001216f:	call   0x1400122b0
   140012174:	mov    rbx,QWORD PTR [rsp+0x40]
   140012179:	mov    rax,rdi
   14001217c:	add    rsp,0x30
   140012180:	pop    rdi
   140012181:	ret    
   140012182:	int3   
   140012183:	int3   
   140012184:	mov    QWORD PTR [rsp+0x8],rbx
   140012189:	push   rdi
   14001218a:	sub    rsp,0x30
   14001218e:	mov    rdi,rcx
   140012191:	lea    rcx,[rsp+0x20]
   140012196:	mov    rbx,r8
   140012199:	call   0x140011a3c
   14001219e:	mov    rdx,rbx
   1400121a1:	mov    rcx,rdi
   1400121a4:	movups xmm0,XMMWORD PTR [rax]
   1400121a7:	movdqu XMMWORD PTR [rdi],xmm0
   1400121ab:	call   0x1400122b0
   1400121b0:	mov    rbx,QWORD PTR [rsp+0x40]
   1400121b5:	mov    rax,rdi
   1400121b8:	add    rsp,0x30
   1400121bc:	pop    rdi
   1400121bd:	ret    
   1400121be:	int3   
   1400121bf:	int3   
   1400121c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400121c5:	push   rdi
   1400121c6:	sub    rsp,0x30
   1400121ca:	mov    rdi,rcx
   1400121cd:	lea    rcx,[rsp+0x20]
   1400121d2:	mov    rbx,r8
   1400121d5:	call   0x140011a84
   1400121da:	mov    rdx,rbx
   1400121dd:	mov    rcx,rdi
   1400121e0:	movups xmm0,XMMWORD PTR [rax]
   1400121e3:	movdqu XMMWORD PTR [rdi],xmm0
   1400121e7:	call   0x1400122b0
   1400121ec:	mov    rbx,QWORD PTR [rsp+0x40]
   1400121f1:	mov    rax,rdi
   1400121f4:	add    rsp,0x30
   1400121f8:	pop    rdi
   1400121f9:	ret    
   1400121fa:	int3   
   1400121fb:	int3   
   1400121fc:	rex push rbx
   1400121fe:	sub    rsp,0x20
   140012202:	movups xmm0,XMMWORD PTR [rcx]
   140012205:	mov    rbx,rdx
   140012208:	mov    rcx,rbx
   14001220b:	movdqu XMMWORD PTR [rdx],xmm0
   14001220f:	mov    rdx,r8
   140012212:	call   0x1400122b0
   140012217:	mov    rax,rbx
   14001221a:	add    rsp,0x20
   14001221e:	pop    rbx
   14001221f:	ret    
   140012220:	rex push rbx
   140012222:	sub    rsp,0x20
   140012226:	movups xmm0,XMMWORD PTR [rcx]
   140012229:	mov    rbx,rdx
   14001222c:	mov    rcx,rbx
   14001222f:	movdqu XMMWORD PTR [rdx],xmm0
   140012233:	mov    dl,r8b
   140012236:	call   0x1400122f0
   14001223b:	mov    rax,rbx
   14001223e:	add    rsp,0x20
   140012242:	pop    rbx
   140012243:	ret    
   140012244:	rex push rbx
   140012246:	sub    rsp,0x20
   14001224a:	movups xmm0,XMMWORD PTR [rcx]
   14001224d:	mov    rbx,rdx
   140012250:	mov    rcx,rbx
   140012253:	movdqu XMMWORD PTR [rdx],xmm0
   140012257:	mov    rdx,r8
   14001225a:	call   0x140012374
   14001225f:	mov    rax,rbx
   140012262:	add    rsp,0x20
   140012266:	pop    rbx
   140012267:	ret    
   140012268:	rex push rbx
   14001226a:	sub    rsp,0x20
   14001226e:	movups xmm0,XMMWORD PTR [rcx]
   140012271:	mov    rbx,rdx
   140012274:	mov    rcx,rbx
   140012277:	movdqu XMMWORD PTR [rdx],xmm0
   14001227b:	mov    rdx,r8
   14001227e:	call   0x14001240c
   140012283:	mov    rax,rbx
   140012286:	add    rsp,0x20
   14001228a:	pop    rbx
   14001228b:	ret    
   14001228c:	rex push rbx
   14001228e:	sub    rsp,0x20
   140012292:	movups xmm0,XMMWORD PTR [rcx]
   140012295:	mov    rbx,rdx
   140012298:	mov    rcx,rbx
   14001229b:	movdqu XMMWORD PTR [rdx],xmm0
   14001229f:	mov    edx,r8d
   1400122a2:	call   0x140012498
   1400122a7:	mov    rax,rbx
   1400122aa:	add    rsp,0x20
   1400122ae:	pop    rbx
   1400122af:	ret    
   1400122b0:	rex push rbx
   1400122b2:	sub    rsp,0x20
   1400122b6:	cmp    BYTE PTR [rcx+0x8],0x1
   1400122ba:	mov    rbx,rcx
   1400122bd:	jg     0x1400122e7
   1400122bf:	cmp    QWORD PTR [rdx],0x0
   1400122c3:	jne    0x1400122d0
   1400122c5:	movsx  edx,BYTE PTR [rdx+0x8]
   1400122c9:	call   0x140012498
   1400122ce:	jmp    0x1400122e7
   1400122d0:	cmp    QWORD PTR [rcx],0x0
   1400122d4:	jne    0x1400122df
   1400122d6:	movups xmm0,XMMWORD PTR [rdx]
   1400122d9:	movdqu XMMWORD PTR [rcx],xmm0
   1400122dd:	jmp    0x1400122e7
   1400122df:	mov    rdx,QWORD PTR [rdx]
   1400122e2:	call   0x1400125c8
   1400122e7:	mov    rax,rbx
   1400122ea:	add    rsp,0x20
   1400122ee:	pop    rbx
   1400122ef:	ret    
   1400122f0:	mov    QWORD PTR [rsp+0x10],rbx
   1400122f5:	push   rdi
   1400122f6:	sub    rsp,0x20
   1400122fa:	mov    r8d,0x1
   140012300:	mov    dil,dl
   140012303:	mov    rbx,rcx
   140012306:	cmp    BYTE PTR [rcx+0x8],r8b
   14001230a:	jg     0x140012366
   14001230c:	test   dl,dl
   14001230e:	je     0x140012366
   140012310:	cmp    QWORD PTR [rcx],0x0
   140012314:	jne    0x140012335
   140012316:	and    QWORD PTR [rcx],0x0
   14001231a:	mov    BYTE PTR [rsp+0x30],dl
   14001231e:	mov    BYTE PTR [rcx+0x8],0x0
   140012322:	and    DWORD PTR [rcx+0x8],0xffff00ff
   140012329:	lea    rdx,[rsp+0x30]
   14001232e:	call   0x140013448
   140012333:	jmp    0x140012366
   140012335:	xor    r8d,r8d
   140012338:	lea    rcx,[rip+0x26c61]        # 0x140038fa0
   14001233f:	lea    edx,[r8+0x10]
   140012343:	call   0x1400157b8
   140012348:	test   rax,rax
   14001234b:	je     0x14001235b
   14001234d:	lea    rcx,[rip+0x1cc8c]        # 0x14002efe0
   140012354:	mov    BYTE PTR [rax+0x8],dil
   140012358:	mov    QWORD PTR [rax],rcx
   14001235b:	mov    rdx,rax
   14001235e:	mov    rcx,rbx
   140012361:	call   0x1400125c8
   140012366:	mov    rax,rbx
   140012369:	mov    rbx,QWORD PTR [rsp+0x38]
   14001236e:	add    rsp,0x20
   140012372:	pop    rdi
   140012373:	ret    
   140012374:	mov    QWORD PTR [rsp+0x8],rbx
   140012379:	mov    QWORD PTR [rsp+0x10],rsi
   14001237e:	push   rdi
   14001237f:	sub    rsp,0x20
   140012383:	cmp    BYTE PTR [rcx+0x8],0x1
   140012387:	mov    rdi,rdx
   14001238a:	mov    rbx,rcx
   14001238d:	jg     0x1400123f6
   14001238f:	xor    esi,esi
   140012391:	test   rdx,rdx
   140012394:	je     0x1400123f6
   140012396:	cmp    QWORD PTR [rcx],rsi
   140012399:	jne    0x1400123a2
   14001239b:	call   0x140011e08
   1400123a0:	jmp    0x1400123f6
   1400123a2:	mov    al,BYTE PTR [rdx+0x8]
   1400123a5:	cmp    al,0x1
   1400123a7:	jbe    0x1400123b3
   1400123a9:	movsx  edx,al
   1400123ac:	call   0x140012498
   1400123b1:	jmp    0x1400123f6
   1400123b3:	xor    r8d,r8d
   1400123b6:	lea    rcx,[rip+0x26be3]        # 0x140038fa0
   1400123bd:	lea    edx,[r8+0x10]
   1400123c1:	call   0x1400157b8
   1400123c6:	test   rax,rax
   1400123c9:	je     0x1400123e8
   1400123cb:	lea    rcx,[rip+0x1cc4e]        # 0x14002f020
   1400123d2:	mov    QWORD PTR [rax],rcx
   1400123d5:	mov    cl,BYTE PTR [rdi+0x8]
   1400123d8:	sub    cl,0x2
   1400123db:	cmp    cl,0x1
   1400123de:	cmovbe rdi,rsi
   1400123e2:	mov    QWORD PTR [rax+0x8],rdi
   1400123e6:	jmp    0x1400123eb
   1400123e8:	mov    rax,rsi
   1400123eb:	mov    rdx,rax
   1400123ee:	mov    rcx,rbx
   1400123f1:	call   0x1400125c8
   1400123f6:	mov    rsi,QWORD PTR [rsp+0x38]
   1400123fb:	mov    rax,rbx
   1400123fe:	mov    rbx,QWORD PTR [rsp+0x30]
   140012403:	add    rsp,0x20
   140012407:	pop    rdi
   140012408:	ret    
   140012409:	int3   
   14001240a:	int3   
   14001240b:	int3   
   14001240c:	mov    QWORD PTR [rsp+0x8],rbx
   140012411:	mov    QWORD PTR [rsp+0x10],rsi
   140012416:	push   rdi
   140012417:	sub    rsp,0x20
   14001241b:	cmp    BYTE PTR [rcx+0x8],0x1
   14001241f:	mov    rsi,rdx
   140012422:	mov    rdi,rcx
   140012425:	jg     0x140012483
   140012427:	xor    ebx,ebx
   140012429:	test   rdx,rdx
   14001242c:	je     0x140012483
   14001242e:	cmp    BYTE PTR [rdx],bl
   140012430:	je     0x140012483
   140012432:	cmp    QWORD PTR [rcx],rbx
   140012435:	jne    0x14001243e
   140012437:	call   0x140011e90
   14001243c:	jmp    0x140012483
   14001243e:	xor    r8d,r8d
   140012441:	lea    rcx,[rip+0x26b58]        # 0x140038fa0
   140012448:	lea    edx,[r8+0x18]
   14001244c:	call   0x1400157b8
   140012451:	test   rax,rax
   140012454:	je     0x140012478
   140012456:	mov    rcx,rsi
   140012459:	mov    r8d,ebx
   14001245c:	cmp    BYTE PTR [rsi],bl
   14001245e:	je     0x14001246a
   140012460:	inc    rcx
   140012463:	inc    r8d
   140012466:	cmp    BYTE PTR [rcx],bl
   140012468:	jne    0x140012460
   14001246a:	mov    rdx,rsi
   14001246d:	mov    rcx,rax
   140012470:	call   0x140011d2c
   140012475:	mov    rbx,rax
   140012478:	mov    rdx,rbx
   14001247b:	mov    rcx,rdi
   14001247e:	call   0x1400125c8
   140012483:	mov    rbx,QWORD PTR [rsp+0x30]
   140012488:	mov    rsi,QWORD PTR [rsp+0x38]
   14001248d:	mov    rax,rdi
   140012490:	add    rsp,0x20
   140012494:	pop    rdi
   140012495:	ret    
   140012496:	int3   
   140012497:	int3   
   140012498:	rex push rbx
   14001249a:	sub    rsp,0x20
   14001249e:	cmp    BYTE PTR [rcx+0x8],0x1
   1400124a2:	mov    rbx,rcx
   1400124a5:	jg     0x1400124d2
   1400124a7:	cmp    QWORD PTR [rcx],0x0
   1400124ab:	je     0x1400124cd
   1400124ad:	lea    eax,[rdx-0x2]
   1400124b0:	cmp    eax,0x1
   1400124b3:	jbe    0x1400124cd
   1400124b5:	test   edx,edx
   1400124b7:	je     0x1400124d2
   1400124b9:	mov    ecx,edx
   1400124bb:	call   0x1400183bc
   1400124c0:	mov    rcx,rbx
   1400124c3:	mov    rdx,rax
   1400124c6:	call   0x1400125c8
   1400124cb:	jmp    0x1400124d2
   1400124cd:	call   0x140011ed0
   1400124d2:	mov    rax,rbx
   1400124d5:	add    rsp,0x20
   1400124d9:	pop    rbx
   1400124da:	ret    
   1400124db:	int3   
   1400124dc:	mov    QWORD PTR [rsp+0x8],rbx
   1400124e1:	push   rdi
   1400124e2:	sub    rsp,0x20
   1400124e6:	cmp    DWORD PTR [rcx],0x9
   1400124e9:	mov    rdi,rdx
   1400124ec:	mov    rbx,rcx
   1400124ef:	je     0x14001252c
   1400124f1:	cmp    QWORD PTR [rdx],0x0
   1400124f5:	je     0x14001252c
   1400124f7:	xor    r8d,r8d
   1400124fa:	lea    rcx,[rip+0x26a9f]        # 0x140038fa0
   140012501:	lea    edx,[r8+0x10]
   140012505:	call   0x1400157b8
   14001250a:	mov    rcx,rax
   14001250d:	test   rax,rax
   140012510:	je     0x14001251b
   140012512:	movups xmm0,XMMWORD PTR [rdi]
   140012515:	movdqu XMMWORD PTR [rax],xmm0
   140012519:	jmp    0x14001251d
   14001251b:	xor    ecx,ecx
   14001251d:	test   rcx,rcx
   140012520:	je     0x14001252c
   140012522:	inc    DWORD PTR [rbx]
   140012524:	movsxd rax,DWORD PTR [rbx]
   140012527:	mov    QWORD PTR [rbx+rax*8+0x8],rcx
   14001252c:	mov    rax,rbx
   14001252f:	mov    rbx,QWORD PTR [rsp+0x30]
   140012534:	add    rsp,0x20
   140012538:	pop    rdi
   140012539:	ret    
   14001253a:	int3   
   14001253b:	int3   
   14001253c:	cmp    BYTE PTR [rcx+0x8],0x3
   140012540:	je     0x14001254c
   140012542:	mov    al,BYTE PTR [rdx+0x8]
   140012545:	cmp    al,0x1
   140012547:	jle    0x14001254c
   140012549:	mov    BYTE PTR [rcx+0x8],al
   14001254c:	mov    rax,rcx
   14001254f:	ret    
   140012550:	xor    eax,eax
   140012552:	mov    QWORD PTR [rcx],rdx
   140012555:	mov    QWORD PTR [rcx+0x8],r8
   140012559:	mov    QWORD PTR [rcx+0x20],rax
   14001255d:	mov    QWORD PTR [rcx+0x10],rax
   140012561:	mov    QWORD PTR [rcx+0x18],rax
   140012565:	ret    
   140012566:	int3   
   140012567:	int3   
   140012568:	rex push rbx
   14001256a:	sub    rsp,0x20
   14001256e:	cmp    QWORD PTR [rcx+0x8],0x0
   140012573:	mov    rbx,rcx
   140012576:	je     0x1400125a0
   140012578:	mov    rax,QWORD PTR [rcx+0x10]
   14001257c:	mov    QWORD PTR [rcx+0x18],rax
   140012580:	jmp    0x14001259b
   140012582:	mov    rax,QWORD PTR [rbx+0x18]
   140012586:	mov    rcx,QWORD PTR [rax]
   140012589:	mov    QWORD PTR [rbx+0x10],rcx
   14001258d:	mov    rcx,rax
   140012590:	call   QWORD PTR [rbx+0x8]
   140012593:	mov    rax,QWORD PTR [rbx+0x10]
   140012597:	mov    QWORD PTR [rbx+0x18],rax
   14001259b:	test   rax,rax
   14001259e:	jne    0x140012582
   1400125a0:	add    rsp,0x20
   1400125a4:	pop    rbx
   1400125a5:	ret    
   1400125a6:	int3   
   1400125a7:	int3   
   1400125a8:	mov    eax,DWORD PTR [rip+0x269e6]        # 0x140038f94
   1400125ae:	not    eax
   1400125b0:	test   al,0x1
   1400125b2:	movsxd rax,ecx
   1400125b5:	lea    rcx,[rip+0x1bce4]        # 0x14002e2a0
   1400125bc:	mov    rax,QWORD PTR [rcx+rax*8]
   1400125c0:	jne    0x1400125c6
   1400125c2:	add    rax,0x2
   1400125c6:	ret    
   1400125c7:	int3   
   1400125c8:	mov    QWORD PTR [rsp+0x8],rbx
   1400125cd:	push   rdi
   1400125ce:	sub    rsp,0x20
   1400125d2:	mov    rdi,rdx
   1400125d5:	mov    rbx,rcx
   1400125d8:	test   rdx,rdx
   1400125db:	je     0x14001261c
   1400125dd:	xor    r8d,r8d
   1400125e0:	lea    rcx,[rip+0x269b9]        # 0x140038fa0
   1400125e7:	lea    edx,[r8+0x20]
   1400125eb:	call   0x1400157b8
   1400125f0:	test   rax,rax
   1400125f3:	je     0x14001260e
   1400125f5:	mov    rdx,QWORD PTR [rbx]
   1400125f8:	or     DWORD PTR [rax+0x18],0xffffffff
   1400125fc:	lea    rcx,[rip+0x1ca5d]        # 0x14002f060
   140012603:	mov    QWORD PTR [rax+0x8],rdx
   140012607:	mov    QWORD PTR [rax],rcx
   14001260a:	mov    QWORD PTR [rax+0x10],rdi
   14001260e:	mov    QWORD PTR [rbx],rax
   140012611:	test   rax,rax
   140012614:	jne    0x140012620
   140012616:	mov    BYTE PTR [rbx+0x8],0x3
   14001261a:	jmp    0x140012620
   14001261c:	mov    BYTE PTR [rcx+0x8],0x3
   140012620:	mov    rbx,QWORD PTR [rsp+0x30]
   140012625:	add    rsp,0x20
   140012629:	pop    rdi
   14001262a:	ret    
   14001262b:	int3   
   14001262c:	mov    rax,rsp
   14001262f:	mov    QWORD PTR [rax+0x8],rbx
   140012633:	push   rbp
   140012634:	push   rsi
   140012635:	push   rdi
   140012636:	push   r12
   140012638:	push   r13
   14001263a:	push   r14
   14001263c:	push   r15
   14001263e:	lea    rbp,[rax-0x5f]
   140012642:	sub    rsp,0xf0
   140012649:	mov    ebx,DWORD PTR [rsp+0x48]
   14001264d:	and    QWORD PTR [rsp+0x40],0x0
   140012653:	movaps XMMWORD PTR [rax-0x48],xmm6
   140012657:	and    ebx,0xffff0000
   14001265d:	movaps XMMWORD PTR [rax-0x58],xmm7
   140012661:	mov    r12,rdx
   140012664:	mov    DWORD PTR [rsp+0x48],ebx
   140012668:	mov    rdi,rcx
   14001266b:	call   0x14001789c
   140012670:	cmp    QWORD PTR [r12],0x0
   140012675:	mov    esi,eax
   140012677:	je     0x14001268d
   140012679:	test   DWORD PTR [r12+0x8],0x200
   140012682:	je     0x14001268d
   140012684:	mov    DWORD PTR [rbp+0x7f],0x1
   14001268b:	jmp    0x140012691
   14001268d:	and    DWORD PTR [rbp+0x7f],0x0
   140012691:	cmp    eax,0xffff
   140012696:	jne    0x1400126aa
   140012698:	mov    edx,0x2
   14001269d:	mov    rcx,rdi
   1400126a0:	call   0x140011a84
   1400126a5:	jmp    0x140013388
   1400126aa:	cmp    eax,0xfffe
   1400126af:	jne    0x1400126d7
   1400126b1:	lea    rcx,[rsp+0x30]
   1400126b6:	mov    edx,0x1
   1400126bb:	call   0x140011a84
   1400126c0:	mov    rdx,r12
   1400126c3:	mov    rcx,rdi
   1400126c6:	movups xmm0,XMMWORD PTR [rax]
   1400126c9:	movdqu XMMWORD PTR [rdi],xmm0
   1400126cd:	call   0x1400122b0
   1400126d2:	jmp    0x140013388
   1400126d7:	cmp    eax,0xfffd
   1400126dc:	jne    0x1400126ec
   1400126de:	movups xmm0,XMMWORD PTR [r12]
   1400126e3:	movdqu XMMWORD PTR [rdi],xmm0
   1400126e7:	jmp    0x140013388
   1400126ec:	mov    r15d,eax
   1400126ef:	mov    r9d,0x1000
   1400126f5:	mov    r8d,0x1b00
   1400126fb:	and    r15d,0x8000
   140012702:	je     0x140012f27
   140012708:	xor    r13d,r13d
   14001270b:	mov    edx,eax
   14001270d:	mov    r14d,esi
   140012710:	and    edx,0x1800
   140012716:	cmp    edx,0x800
   14001271c:	mov    DWORD PTR [rbp+0x6f],edx
   14001271f:	sete   r13b
   140012723:	and    eax,0x400
   140012728:	and    r14d,r9d
   14001272b:	mov    DWORD PTR [rbp+0x77],eax
   14001272e:	test   r13d,r13d
   140012731:	mov    eax,r14d
   140012734:	mov    ecx,DWORD PTR [rbp+0x77]
   140012737:	mov    DWORD PTR [rbp-0x45],r13d
   14001273b:	mov    DWORD PTR [rbp-0x49],r14d
   14001273f:	cmovne eax,ecx
   140012742:	test   eax,eax
   140012744:	je     0x140012754
   140012746:	mov    eax,esi
   140012748:	and    eax,r8d
   14001274b:	cmp    eax,r9d
   14001274e:	je     0x140012f27
   140012754:	test   r13d,r13d
   140012757:	mov    eax,r14d
   14001275a:	cmovne eax,ecx
   14001275d:	test   eax,eax
   14001275f:	je     0x14001277c
   140012761:	mov    eax,esi
   140012763:	and    eax,r8d
   140012766:	cmp    eax,0x1100
   14001276b:	je     0x140012f27
   140012771:	cmp    eax,0x1200
   140012776:	je     0x140012f27
   14001277c:	bt     esi,0xe
   140012780:	jae    0x1400127e1
   140012782:	mov    ecx,DWORD PTR [rip+0x2680c]        # 0x140038f94
   140012788:	mov    eax,ecx
   14001278a:	shr    eax,1
   14001278c:	not    eax
   14001278e:	test   al,0x1
   140012790:	je     0x140012860
   140012796:	shr    ecx,0x3
   140012799:	not    ecx
   14001279b:	test   cl,0x1
   14001279e:	je     0x140012860
   1400127a4:	lea    rcx,[rsp+0x30]
   1400127a9:	call   0x1400139d4
   1400127ae:	lea    rcx,[rbp-0x59]
   1400127b2:	mov    dl,0x20
   1400127b4:	mov    rbx,rax
   1400127b7:	call   0x14001197c
   1400127bc:	lea    rcx,[rbp-0x79]
   1400127c0:	mov    rdx,rbx
   1400127c3:	movups xmm0,XMMWORD PTR [rax]
   1400127c6:	movdqu XMMWORD PTR [rbp-0x79],xmm0
   1400127cb:	call   0x1400122b0
   1400127d0:	movaps xmm0,XMMWORD PTR [rbp-0x79]
   1400127d4:	movdqa XMMWORD PTR [rsp+0x40],xmm0
   1400127da:	mov    ebx,DWORD PTR [rsp+0x48]
   1400127de:	mov    edx,DWORD PTR [rbp+0x6f]
   1400127e1:	test   r13d,r13d
   1400127e4:	cmovne r14d,DWORD PTR [rbp+0x77]
   1400127e9:	test   r14d,r14d
   1400127ec:	je     0x1400129ad
   1400127f2:	cmp    edx,0x1800
   1400127f8:	jne    0x1400129ad
   1400127fe:	lea    rcx,[rsp+0x30]
   140012803:	xor    edx,edx
   140012805:	call   0x140014a54
   14001280a:	lea    rcx,[rbp-0x79]
   14001280e:	mov    dl,0x7b
   140012810:	movups xmm0,XMMWORD PTR [r12]
   140012815:	movdqu XMMWORD PTR [rbp-0x79],xmm0
   14001281a:	call   0x1400122f0
   14001281f:	lea    rdx,[rsp+0x30]
   140012824:	movaps xmm0,XMMWORD PTR [rbp-0x79]
   140012828:	lea    rcx,[rbp-0x79]
   14001282c:	movdqa XMMWORD PTR [rbp-0x79],xmm0
   140012831:	call   0x1400122b0
   140012836:	lea    rdx,[rbp-0x79]
   14001283a:	lea    rcx,[rsp+0x40]
   14001283f:	call   0x1400122b0
   140012844:	mov    rax,QWORD PTR [rip+0x2672d]        # 0x140038f78
   14001284b:	lea    rcx,[rbp-0x39]
   14001284f:	cmp    BYTE PTR [rax],0x0
   140012852:	je     0x1400128af
   140012854:	cmp    BYTE PTR [rax],0x41
   140012857:	je     0x140012897
   140012859:	mov    edx,0x2
   14001285e:	jmp    0x1400128b4
   140012860:	lea    rcx,[rsp+0x30]
   140012865:	call   0x1400139d4
   14001286a:	cmp    BYTE PTR [rsp+0x48],0x3
   14001286f:	je     0x1400127de
   140012875:	cmp    BYTE PTR [rax+0x8],0x1
   140012879:	mov    edx,DWORD PTR [rbp+0x6f]
   14001287c:	jle    0x1400127e1
   140012882:	movzx  eax,BYTE PTR [rax+0x8]
   140012886:	and    ebx,0xffffff00
   14001288c:	or     ebx,eax
   14001288e:	mov    DWORD PTR [rsp+0x48],ebx
   140012892:	jmp    0x1400127e1
   140012897:	inc    rax
   14001289a:	lea    rdx,[rip+0x1c703]        # 0x14002efa4
   1400128a1:	mov    QWORD PTR [rip+0x266d0],rax        # 0x140038f78
   1400128a8:	call   0x140011a3c
   1400128ad:	jmp    0x1400128b9
   1400128af:	mov    edx,0x1
   1400128b4:	call   0x140011a84
   1400128b9:	mov    ebx,0x1000
   1400128be:	test   DWORD PTR [rip+0x266d0],ebx        # 0x140038f94
   1400128c4:	jne    0x14001290e
   1400128c6:	lea    rcx,[rsp+0x30]
   1400128cb:	mov    dl,0x2c
   1400128cd:	call   0x14001197c
   1400128d2:	lea    rdx,[rbp-0x39]
   1400128d6:	lea    rcx,[rbp-0x79]
   1400128da:	movups xmm0,XMMWORD PTR [rax]
   1400128dd:	movdqu XMMWORD PTR [rbp-0x79],xmm0
   1400128e2:	call   0x1400122b0
   1400128e7:	movaps xmm0,XMMWORD PTR [rbp-0x79]
   1400128eb:	lea    rdx,[rip+0x1c3ae]        # 0x14002eca0
   1400128f2:	lea    rcx,[rbp-0x79]
   1400128f6:	movdqa XMMWORD PTR [rbp-0x79],xmm0
   1400128fb:	call   0x14001240c
   140012900:	lea    rdx,[rbp-0x79]
   140012904:	lea    rcx,[rsp+0x40]
   140012909:	call   0x1400122b0
   14001290e:	lea    rdx,[rip+0x1c38f]        # 0x14002eca4
   140012915:	lea    rcx,[rsp+0x40]
   14001291a:	call   0x14001240c
   14001291f:	lea    rcx,[rsp+0x30]
   140012924:	call   0x140013ec0
   140012929:	mov    ecx,DWORD PTR [rip+0x26665]        # 0x140038f94
   14001292f:	mov    eax,ecx
   140012931:	shr    eax,1
   140012933:	not    eax
   140012935:	test   al,0x1
   140012937:	je     0x140012f19
   14001293d:	mov    eax,ecx
   14001293f:	shr    eax,0x4
   140012942:	not    eax
   140012944:	test   al,0x1
   140012946:	je     0x140012f19
   14001294c:	test   ebx,ecx
   14001294e:	jne    0x140012f19
   140012954:	lea    rcx,[rbp-0x59]
   140012958:	mov    dl,0x20
   14001295a:	call   0x14001197c
   14001295f:	lea    rdx,[rsp+0x30]
   140012964:	lea    rcx,[rbp-0x79]
   140012968:	movups xmm0,XMMWORD PTR [rax]
   14001296b:	movdqu XMMWORD PTR [rbp-0x79],xmm0
   140012970:	call   0x1400122b0
   140012975:	movaps xmm0,XMMWORD PTR [rbp-0x79]
   140012979:	lea    rcx,[rbp-0x79]
   14001297d:	mov    dl,0x20
   14001297f:	movdqa XMMWORD PTR [rbp-0x79],xmm0
   140012984:	call   0x1400122f0
   140012989:	lea    rdx,[rsp+0x40]
   14001298e:	movaps xmm0,XMMWORD PTR [rbp-0x79]
   140012992:	lea    rcx,[rbp-0x79]
   140012996:	movdqa XMMWORD PTR [rbp-0x79],xmm0
   14001299b:	call   0x1400122b0
   1400129a0:	movaps xmm6,XMMWORD PTR [rbp-0x79]
   1400129a4:	mov    r12d,DWORD PTR [rbp+0x6f]
   1400129a8:	jmp    0x140013192
   1400129ad:	mov    r14d,DWORD PTR [rbp-0x21]
   1400129b1:	and    QWORD PTR [rbp-0x9],0x0
   1400129b6:	and    QWORD PTR [rbp-0x39],0x0
   1400129bb:	and    QWORD PTR [rbp-0x19],0x0
   1400129c0:	and    QWORD PTR [rbp-0x59],0x0
   1400129c5:	and    QWORD PTR [rbp-0x29],0x0
   1400129ca:	mov    eax,DWORD PTR [rbp-0x49]
   1400129cd:	mov    edx,0xffff0000
   1400129d2:	and    DWORD PTR [rbp-0x1],edx
   1400129d5:	and    DWORD PTR [rbp-0x31],edx
   1400129d8:	and    DWORD PTR [rbp-0x11],edx
   1400129db:	and    DWORD PTR [rbp-0x51],edx
   1400129de:	and    r14d,edx
   1400129e1:	test   r13d,r13d
   1400129e4:	cmovne eax,DWORD PTR [rbp+0x77]
   1400129e8:	mov    DWORD PTR [rbp-0x21],r14d
   1400129ec:	test   eax,eax
   1400129ee:	je     0x140012a76
   1400129f4:	test   r13d,r13d
   1400129f7:	je     0x140012a5e
   1400129f9:	mov    eax,esi
   1400129fb:	and    eax,0x700
   140012a00:	cmp    eax,0x600
   140012a05:	jne    0x140012a35
   140012a07:	lea    rcx,[rsp+0x30]
   140012a0c:	mov    dl,0x1
   140012a0e:	call   0x140014a54
   140012a13:	lea    rcx,[rsp+0x30]
   140012a18:	mov    dl,0x1
   140012a1a:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   140012a1f:	movdqa XMMWORD PTR [rbp-0x9],xmm0
   140012a24:	call   0x140014a54
   140012a29:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   140012a2e:	movdqa XMMWORD PTR [rbp-0x39],xmm0
   140012a33:	jmp    0x140012a48
   140012a35:	test   r13d,r13d
   140012a38:	je     0x140012a5e
   140012a3a:	mov    eax,esi
   140012a3c:	and    eax,0x700
   140012a41:	cmp    eax,0x500
   140012a46:	jne    0x140012a5e
   140012a48:	lea    rcx,[rsp+0x30]
   140012a4d:	mov    dl,0x1
   140012a4f:	call   0x140014a54
   140012a54:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   140012a59:	movdqa XMMWORD PTR [rbp-0x19],xmm0
   140012a5e:	lea    rcx,[rsp+0x30]
   140012a63:	mov    dl,0x1
   140012a65:	call   0x140014a54
   140012a6a:	mov    edx,0xffff0000
   140012a6f:	movaps xmm7,XMMWORD PTR [rsp+0x30]
   140012a74:	jmp    0x140012a7a
   140012a76:	movaps xmm7,XMMWORD PTR [rbp-0x59]
   140012a7a:	test   r13d,r13d
   140012a7d:	je     0x140012b08
   140012a83:	mov    eax,esi
   140012a85:	and    eax,0x700
   140012a8a:	cmp    eax,0x200
   140012a8f:	je     0x140012b08
   140012a91:	mov    eax,DWORD PTR [rip+0x264fd]        # 0x140038f94
   140012a97:	and    QWORD PTR [rbp-0x59],0x0
   140012a9c:	and    DWORD PTR [rbp-0x51],edx
   140012a9f:	and    QWORD PTR [rbp-0x79],0x0
   140012aa4:	and    DWORD PTR [rbp-0x71],edx
   140012aa7:	and    eax,0x60
   140012aaa:	mov    DWORD PTR [rsp+0x20],0x1
   140012ab2:	lea    r8,[rip+0x17f97]        # 0x14002aa50
   140012ab9:	lea    rcx,[rsp+0x30]
   140012abe:	cmp    al,0x60
   140012ac0:	je     0x140012adb
   140012ac2:	lea    r9,[rbp-0x59]
   140012ac6:	lea    rdx,[rbp-0x79]
   140012aca:	call   0x140013fc0
   140012acf:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   140012ad4:	movdqa XMMWORD PTR [rbp-0x29],xmm0
   140012ad9:	jmp    0x140012b08
   140012adb:	lea    r9,[rbp-0x79]
   140012adf:	lea    rdx,[rbp-0x59]
   140012ae3:	call   0x140013fc0
   140012ae8:	cmp    BYTE PTR [rbp-0x21],0x3
   140012aec:	je     0x140012b08
   140012aee:	cmp    BYTE PTR [rsp+0x38],0x1
   140012af3:	jle    0x140012b08
   140012af5:	movzx  eax,BYTE PTR [rsp+0x38]
   140012afa:	and    r14d,0xffffff00
   140012b01:	or     r14d,eax
   140012b04:	mov    DWORD PTR [rbp-0x21],r14d
   140012b08:	mov    ecx,DWORD PTR [rip+0x26486]        # 0x140038f94
   140012b0e:	mov    eax,ecx
   140012b10:	shr    eax,1
   140012b12:	not    eax
   140012b14:	test   al,0x1
   140012b16:	je     0x140012b50
   140012b18:	shr    ecx,0x4
   140012b1b:	not    ecx
   140012b1d:	test   cl,0x1
   140012b20:	je     0x140012b50
   140012b22:	lea    rcx,[rbp-0x79]
   140012b26:	call   0x140013ec0
   140012b2b:	lea    rdx,[rsp+0x40]
   140012b30:	lea    rcx,[rsp+0x30]
   140012b35:	movups xmm0,XMMWORD PTR [rax]
   140012b38:	movdqu XMMWORD PTR [rsp+0x30],xmm0
   140012b3e:	call   0x1400122b0
   140012b43:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   140012b48:	movdqa XMMWORD PTR [rsp+0x40],xmm0
   140012b4e:	jmp    0x140012b77
   140012b50:	lea    rcx,[rsp+0x30]
   140012b55:	call   0x140013ec0
   140012b5a:	cmp    BYTE PTR [rsp+0x48],0x3
   140012b5f:	je     0x140012b77
   140012b61:	cmp    BYTE PTR [rax+0x8],0x1
   140012b65:	jle    0x140012b77
   140012b67:	movzx  eax,BYTE PTR [rax+0x8]
   140012b6b:	and    ebx,0xffffff00
   140012b71:	or     ebx,eax
   140012b73:	mov    DWORD PTR [rsp+0x48],ebx
   140012b77:	xor    ebx,ebx
   140012b79:	cmp    QWORD PTR [r12],rbx
   140012b7d:	je     0x140012bcf
   140012b7f:	cmp    QWORD PTR [rsp+0x40],rbx
   140012b84:	je     0x140012bc4
   140012b86:	test   DWORD PTR [rip+0x26404],0x1000        # 0x140038f94
   140012b90:	jne    0x140012bc4
   140012b92:	lea    rcx,[rbp-0x79]
   140012b96:	mov    dl,0x20
   140012b98:	call   0x14001197c
   140012b9d:	lea    rcx,[rsp+0x30]
   140012ba2:	mov    rdx,r12
   140012ba5:	movups xmm0,XMMWORD PTR [rax]
   140012ba8:	movdqu XMMWORD PTR [rsp+0x30],xmm0
   140012bae:	call   0x1400122b0
   140012bb3:	lea    rdx,[rsp+0x30]
   140012bb8:	lea    rcx,[rsp+0x40]
   140012bbd:	call   0x1400122b0
   140012bc2:	jmp    0x140012bcf
   140012bc4:	movups xmm0,XMMWORD PTR [r12]
   140012bc9:	movdqu XMMWORD PTR [rsp+0x40],xmm0
   140012bcf:	and    DWORD PTR [rbp-0x71],0xffff0000
   140012bd6:	mov    r12,rbx
   140012bd9:	mov    QWORD PTR [rbp-0x79],rbx
   140012bdd:	cmp    DWORD PTR [rbp+0x7f],ebx
   140012be0:	je     0x140012c41
   140012be2:	lea    rcx,[rbp-0x59]
   140012be6:	xor    edx,edx
   140012be8:	call   0x14001658c
   140012bed:	lea    rdx,[rip+0x1c0b4]        # 0x14002eca8
   140012bf4:	lea    rcx,[rbp-0x69]
   140012bf8:	mov    rbx,rax
   140012bfb:	call   0x140011a3c
   140012c00:	lea    rcx,[rsp+0x30]
   140012c05:	mov    rdx,rbx
   140012c08:	movups xmm0,XMMWORD PTR [rax]
   140012c0b:	movdqu XMMWORD PTR [rsp+0x30],xmm0
   140012c11:	call   0x1400122b0
   140012c16:	lea    rdx,[rsp+0x30]
   140012c1b:	lea    rcx,[rsp+0x40]
   140012c20:	call   0x1400122b0
   140012c25:	test   DWORD PTR [rip+0x26365],0x1000        # 0x140038f94
   140012c2f:	je     0x140012c3b
   140012c31:	movaps xmm0,XMMWORD PTR [rsp+0x40]
   140012c36:	jmp    0x1400126e3
   140012c3b:	movaps xmm6,XMMWORD PTR [rbp-0x79]
   140012c3f:	jmp    0x140012c7d
   140012c41:	xor    r8d,r8d
   140012c44:	lea    rcx,[rip+0x26355]        # 0x140038fa0
   140012c4b:	lea    edx,[r8+0x10]
   140012c4f:	call   0x1400157b8
   140012c54:	mov    r12,rax
   140012c57:	test   rax,rax
   140012c5a:	je     0x140012c6b
   140012c5c:	mov    BYTE PTR [rax+0x8],bl
   140012c5f:	and    DWORD PTR [rax+0x8],0xffff00ff
   140012c66:	mov    QWORD PTR [rax],rbx
   140012c69:	jmp    0x140012c6e
   140012c6b:	mov    r12,rbx
   140012c6e:	lea    rcx,[rbp-0x69]
   140012c72:	mov    rdx,r12
   140012c75:	call   0x14001658c
   140012c7a:	movups xmm6,XMMWORD PTR [rax]
   140012c7d:	mov    r14d,DWORD PTR [rbp-0x49]
   140012c81:	test   r13d,r13d
   140012c84:	cmovne r14d,DWORD PTR [rbp+0x77]
   140012c89:	test   r14d,r14d
   140012c8c:	je     0x140012dbd
   140012c92:	test   r13d,r13d
   140012c95:	je     0x140012d86
   140012c9b:	mov    eax,esi
   140012c9d:	and    eax,0x700
   140012ca2:	cmp    eax,0x600
   140012ca7:	jne    0x140012d24
   140012ca9:	lea    rdx,[rip+0x1c000]        # 0x14002ecb0
   140012cb0:	lea    rcx,[rbp-0x69]
   140012cb4:	call   0x140011a3c
   140012cb9:	lea    rdx,[rbp-0x9]
   140012cbd:	lea    rcx,[rsp+0x30]
   140012cc2:	movups xmm0,XMMWORD PTR [rax]
   140012cc5:	movdqu XMMWORD PTR [rsp+0x30],xmm0
   140012ccb:	call   0x1400122b0
   140012cd0:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   140012cd5:	lea    rcx,[rsp+0x30]
   140012cda:	mov    dl,0x2c
   140012cdc:	movdqa XMMWORD PTR [rsp+0x30],xmm0
   140012ce2:	call   0x1400122f0
   140012ce7:	lea    rdx,[rbp-0x39]
   140012ceb:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   140012cf0:	lea    rcx,[rsp+0x30]
   140012cf5:	movdqa XMMWORD PTR [rsp+0x30],xmm0
   140012cfb:	call   0x1400122b0
   140012d00:	lea    rcx,[rsp+0x30]
   140012d05:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   140012d0a:	mov    dl,0x2c
   140012d0c:	movdqa XMMWORD PTR [rsp+0x30],xmm0
   140012d12:	call   0x1400122f0
   140012d17:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   140012d1c:	movdqa XMMWORD PTR [rsp+0x30],xmm0
   140012d22:	jmp    0x140012d50
   140012d24:	test   r13d,r13d
   140012d27:	je     0x140012d86
   140012d29:	mov    eax,esi
   140012d2b:	and    eax,0x700
   140012d30:	cmp    eax,0x500
   140012d35:	jne    0x140012d86
   140012d37:	lea    rdx,[rip+0x1bf82]        # 0x14002ecc0
   140012d3e:	lea    rcx,[rbp-0x69]
   140012d42:	call   0x140011a3c
   140012d47:	movups xmm0,XMMWORD PTR [rax]
   140012d4a:	movdqu XMMWORD PTR [rsp+0x30],xmm0
   140012d50:	lea    rdx,[rbp-0x19]
   140012d54:	lea    rcx,[rsp+0x30]
   140012d59:	call   0x1400122b0
   140012d5e:	lea    rcx,[rsp+0x30]
   140012d63:	mov    dl,0x2c
   140012d65:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   140012d6a:	movdqa XMMWORD PTR [rsp+0x30],xmm0
   140012d70:	call   0x1400122f0
   140012d75:	lea    rdx,[rsp+0x30]
   140012d7a:	lea    rcx,[rsp+0x40]
   140012d7f:	call   0x1400122b0
   140012d84:	jmp    0x140012d97
   140012d86:	lea    rdx,[rip+0x1bf43]        # 0x14002ecd0
   140012d8d:	lea    rcx,[rsp+0x40]
   140012d92:	call   0x14001240c
   140012d97:	lea    rdx,[rip+0x1bf02]        # 0x14002eca0
   140012d9e:	lea    rcx,[rsp+0x30]
   140012da3:	movdqa XMMWORD PTR [rsp+0x30],xmm7
   140012da9:	call   0x14001240c
   140012dae:	lea    rdx,[rsp+0x30]
   140012db3:	lea    rcx,[rsp+0x40]
   140012db8:	call   0x1400122b0
   140012dbd:	lea    rcx,[rbp-0x69]
   140012dc1:	call   0x140013694
   140012dc6:	lea    rcx,[rbp-0x79]
   140012dca:	mov    dl,0x28
   140012dcc:	mov    rbx,rax
   140012dcf:	call   0x14001197c
   140012dd4:	lea    rcx,[rsp+0x30]
   140012dd9:	mov    rdx,rbx
   140012ddc:	movups xmm0,XMMWORD PTR [rax]
   140012ddf:	movdqu XMMWORD PTR [rsp+0x30],xmm0
   140012de5:	call   0x1400122b0
   140012dea:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   140012def:	lea    rcx,[rsp+0x30]
   140012df4:	mov    dl,0x29
   140012df6:	movdqa XMMWORD PTR [rsp+0x30],xmm0
   140012dfc:	call   0x1400122f0
   140012e01:	lea    rdx,[rsp+0x30]
   140012e06:	lea    rcx,[rsp+0x40]
   140012e0b:	call   0x1400122b0
   140012e10:	test   r13d,r13d
   140012e13:	je     0x140012e31
   140012e15:	mov    eax,esi
   140012e17:	and    eax,0x700
   140012e1c:	cmp    eax,0x200
   140012e21:	je     0x140012e31
   140012e23:	lea    rdx,[rbp-0x29]
   140012e27:	lea    rcx,[rsp+0x40]
   140012e2c:	call   0x1400122b0
   140012e31:	mov    eax,DWORD PTR [rip+0x2615d]        # 0x140038f94
   140012e37:	lea    rcx,[rbp-0x69]
   140012e3b:	shr    eax,0x13
   140012e3e:	not    eax
   140012e40:	test   al,0x1
   140012e42:	je     0x140012e58
   140012e44:	call   0x140016464
   140012e49:	lea    rcx,[rsp+0x40]
   140012e4e:	mov    rdx,rax
   140012e51:	call   0x1400122b0
   140012e56:	jmp    0x140012e7e
   140012e58:	call   0x140016464
   140012e5d:	cmp    BYTE PTR [rsp+0x48],0x3
   140012e62:	je     0x140012e7e
   140012e64:	cmp    BYTE PTR [rax+0x8],0x1
   140012e68:	jle    0x140012e7e
   140012e6a:	mov    ecx,DWORD PTR [rsp+0x48]
   140012e6e:	movzx  eax,BYTE PTR [rax+0x8]
   140012e72:	and    ecx,0xffffff00
   140012e78:	or     ecx,eax
   140012e7a:	mov    DWORD PTR [rsp+0x48],ecx
   140012e7e:	mov    eax,DWORD PTR [rip+0x26110]        # 0x140038f94
   140012e84:	lea    rcx,[rbp-0x69]
   140012e88:	shr    eax,0x8
   140012e8b:	not    eax
   140012e8d:	test   al,0x1
   140012e8f:	je     0x140012ea5
   140012e91:	call   0x1400177d8
   140012e96:	lea    rcx,[rsp+0x40]
   140012e9b:	mov    rdx,rax
   140012e9e:	call   0x1400122b0
   140012ea3:	jmp    0x140012ecb
   140012ea5:	call   0x1400177d8
   140012eaa:	cmp    BYTE PTR [rsp+0x48],0x3
   140012eaf:	je     0x140012ecb
   140012eb1:	cmp    BYTE PTR [rax+0x8],0x1
   140012eb5:	jle    0x140012ecb
   140012eb7:	mov    ecx,DWORD PTR [rsp+0x48]
   140012ebb:	movzx  eax,BYTE PTR [rax+0x8]
   140012ebf:	and    ecx,0xffffff00
   140012ec5:	or     ecx,eax
   140012ec7:	mov    DWORD PTR [rsp+0x48],ecx
   140012ecb:	lea    rcx,[rbp-0x69]
   140012ecf:	call   0x140014bb0
   140012ed4:	cmp    BYTE PTR [rsp+0x48],0x3
   140012ed9:	je     0x140012ef5
   140012edb:	cmp    BYTE PTR [rax+0x8],0x1
   140012edf:	jle    0x140012ef5
   140012ee1:	mov    ecx,DWORD PTR [rsp+0x48]
   140012ee5:	movzx  eax,BYTE PTR [rax+0x8]
   140012ee9:	and    ecx,0xffffff00
   140012eef:	or     ecx,eax
   140012ef1:	mov    DWORD PTR [rsp+0x48],ecx
   140012ef5:	mov    eax,DWORD PTR [rip+0x26099]        # 0x140038f94
   140012efb:	shr    eax,0x2
   140012efe:	not    eax
   140012f00:	test   al,0x1
   140012f02:	je     0x140012f19
   140012f04:	test   r12,r12
   140012f07:	je     0x140012f19
   140012f09:	movaps xmm0,XMMWORD PTR [rsp+0x40]
   140012f0e:	movdqu XMMWORD PTR [r12],xmm0
   140012f14:	jmp    0x1400129a4
   140012f19:	movaps xmm6,XMMWORD PTR [rsp+0x40]
   140012f1e:	mov    r12d,DWORD PTR [rbp+0x6f]
   140012f22:	jmp    0x140013197
   140012f27:	lea    rcx,[rsp+0x40]
   140012f2c:	mov    rdx,r12
   140012f2f:	call   0x1400122b0
   140012f34:	mov    r8d,0x7c00
   140012f3a:	test   r15d,r15d
   140012f3d:	jne    0x140012f6e
   140012f3f:	mov    eax,esi
   140012f41:	and    eax,r8d
   140012f44:	cmp    eax,0x6800
   140012f49:	jne    0x140012f5d
   140012f4b:	lea    rdx,[rsp+0x40]
   140012f50:	mov    rcx,rdi
   140012f53:	call   0x140017e3c
   140012f58:	jmp    0x140013388
   140012f5d:	test   r15d,r15d
   140012f60:	jne    0x140012f6e
   140012f62:	mov    eax,esi
   140012f64:	and    eax,r8d
   140012f67:	cmp    eax,0x7000
   140012f6c:	je     0x140012f4b
   140012f6e:	mov    ecx,0x6000
   140012f73:	test   r15d,r15d
   140012f76:	jne    0x140013041
   140012f7c:	mov    eax,esi
   140012f7e:	and    eax,r8d
   140012f81:	cmp    eax,ecx
   140012f83:	jne    0x140012fdd
   140012f85:	lea    rcx,[rbp-0x79]
   140012f89:	xor    edx,edx
   140012f8b:	call   0x140014a54
   140012f90:	lea    rcx,[rsp+0x30]
   140012f95:	mov    dl,0x7b
   140012f97:	movaps xmm0,XMMWORD PTR [rsp+0x40]
   140012f9c:	movdqa XMMWORD PTR [rsp+0x30],xmm0
   140012fa2:	call   0x1400122f0
   140012fa7:	lea    rdx,[rbp-0x79]
   140012fab:	lea    rcx,[rsp+0x30]
   140012fb0:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   140012fb5:	movdqa XMMWORD PTR [rsp+0x30],xmm0
   140012fbb:	call   0x1400122b0
   140012fc0:	lea    rdx,[rip+0x1bcdd]        # 0x14002eca4
   140012fc7:	mov    rcx,rdi
   140012fca:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   140012fcf:	movdqu XMMWORD PTR [rdi],xmm0
   140012fd3:	call   0x14001240c
   140012fd8:	jmp    0x140013388
   140012fdd:	test   r15d,r15d
   140012fe0:	jne    0x140013041
   140012fe2:	mov    eax,esi
   140012fe4:	and    eax,r8d
   140012fe7:	cmp    eax,r8d
   140012fea:	jne    0x140013041
   140012fec:	movaps xmm0,XMMWORD PTR [rsp+0x40]
   140012ff1:	lea    rdx,[rip+0x1bfb4]        # 0x14002efac
   140012ff8:	mov    rcx,rdi
   140012ffb:	movdqu XMMWORD PTR [rdi],xmm0
   140012fff:	call   0x14001240c
   140013004:	lea    rcx,[rbp-0x69]
   140013008:	call   0x1400165c0
   14001300d:	mov    rcx,rdi
   140013010:	mov    rdx,rax
   140013013:	call   0x1400122b0
   140013018:	mov    dl,0x7d
   14001301a:	mov    rcx,rdi
   14001301d:	call   0x1400122f0
   140013022:	mov    rax,QWORD PTR [rip+0x25f4f]        # 0x140038f78
   140013029:	cmp    BYTE PTR [rax],0x40
   14001302c:	jne    0x140013388
   140013032:	inc    rax
   140013035:	mov    QWORD PTR [rip+0x25f3c],rax        # 0x140038f78
   14001303c:	jmp    0x140013388
   140013041:	xor    r13d,r13d
   140013044:	mov    r12d,esi
   140013047:	mov    eax,esi
   140013049:	and    r12d,0x1800
   140013050:	mov    r14d,esi
   140013053:	mov    r9d,0x1000
   140013059:	cmp    r12d,0x800
   140013060:	mov    ebx,0x1b00
   140013065:	sete   r13b
   140013069:	test   ecx,esi
   14001306b:	mov    ecx,0x0
   140013070:	sete   cl
   140013073:	test   r15d,r15d
   140013076:	cmovne ecx,r13d
   14001307a:	and    eax,0x400
   14001307f:	and    r14d,r9d
   140013082:	test   ecx,ecx
   140013084:	mov    DWORD PTR [rbp-0x45],ecx
   140013087:	cmovne r14d,eax
   14001308b:	test   r14d,r14d
   14001308e:	je     0x140013108
   140013090:	xor    ecx,ecx
   140013092:	mov    eax,esi
   140013094:	mov    edx,r15d
   140013097:	and    eax,ebx
   140013099:	cmp    eax,r9d
   14001309c:	sete   cl
   14001309f:	neg    edx
   1400130a1:	sbb    eax,eax
   1400130a3:	test   ecx,eax
   1400130a5:	je     0x1400130b0
   1400130a7:	lea    rdx,[rip+0x1bc32]        # 0x14002ece0
   1400130ae:	jmp    0x1400130fc
   1400130b0:	test   r14d,r14d
   1400130b3:	je     0x140013108
   1400130b5:	xor    ecx,ecx
   1400130b7:	mov    eax,esi
   1400130b9:	mov    edx,r15d
   1400130bc:	and    eax,ebx
   1400130be:	cmp    eax,0x1100
   1400130c3:	sete   cl
   1400130c6:	neg    edx
   1400130c8:	sbb    eax,eax
   1400130ca:	test   ecx,eax
   1400130cc:	je     0x1400130d7
   1400130ce:	lea    rdx,[rip+0x1bc33]        # 0x14002ed08
   1400130d5:	jmp    0x1400130fc
   1400130d7:	test   r14d,r14d
   1400130da:	je     0x140013108
   1400130dc:	xor    ecx,ecx
   1400130de:	mov    eax,esi
   1400130e0:	mov    edx,r15d
   1400130e3:	and    eax,ebx
   1400130e5:	cmp    eax,0x1200
   1400130ea:	sete   cl
   1400130ed:	neg    edx
   1400130ef:	sbb    eax,eax
   1400130f1:	test   ecx,eax
   1400130f3:	je     0x140013108
   1400130f5:	lea    rdx,[rip+0x1bc44]        # 0x14002ed40
   1400130fc:	lea    rcx,[rsp+0x40]
   140013101:	call   0x14001240c
   140013106:	jmp    0x14001311d
   140013108:	test   r15d,r15d
   14001310b:	jne    0x14001311d
   14001310d:	mov    eax,esi
   14001310f:	and    eax,r8d
   140013112:	cmp    eax,0x7800
   140013117:	je     0x140012c31
   14001311d:	test   r14d,r14d
   140013120:	je     0x140013181
   140013122:	xor    ecx,ecx
   140013124:	mov    edx,esi
   140013126:	mov    eax,r15d
   140013129:	and    edx,ebx
   14001312b:	cmp    edx,0x1100
   140013131:	sete   cl
   140013134:	neg    eax
   140013136:	sbb    eax,eax
   140013138:	test   ecx,eax
   14001313a:	jne    0x140013152
   14001313c:	xor    ecx,ecx
   14001313e:	cmp    edx,0x1200
   140013144:	mov    eax,r15d
   140013147:	sete   cl
   14001314a:	neg    eax
   14001314c:	sbb    eax,eax
   14001314e:	test   ecx,eax
   140013150:	je     0x140013181
   140013152:	lea    rdx,[rip+0x1bb4f]        # 0x14002eca8
   140013159:	lea    rcx,[rbp-0x69]
   14001315d:	call   0x140011a3c
   140013162:	lea    rdx,[rsp+0x40]
   140013167:	lea    rcx,[rsp+0x30]
   14001316c:	movups xmm0,XMMWORD PTR [rax]
   14001316f:	movdqu XMMWORD PTR [rsp+0x30],xmm0
   140013175:	call   0x1400122b0
   14001317a:	movaps xmm6,XMMWORD PTR [rsp+0x30]
   14001317f:	jmp    0x140013192
   140013181:	lea    rdx,[rsp+0x40]
   140013186:	lea    rcx,[rbp-0x69]
   14001318a:	call   0x1400150dc
   14001318f:	movups xmm6,XMMWORD PTR [rax]
   140013192:	movaps XMMWORD PTR [rsp+0x40],xmm6
   140013197:	cmp    DWORD PTR [rbp-0x45],0x0
   14001319b:	je     0x14001330e
   1400131a1:	mov    eax,DWORD PTR [rip+0x25ded]        # 0x140038f94
   1400131a7:	shr    eax,0x9
   1400131aa:	not    eax
   1400131ac:	test   al,0x1
   1400131ae:	je     0x140013261
   1400131b4:	xor    ecx,ecx
   1400131b6:	mov    ebx,esi
   1400131b8:	mov    eax,0x1
   1400131bd:	and    ebx,0x700
   1400131c3:	cmp    ebx,0x200
   1400131c9:	sete   cl
   1400131cc:	test   r15d,r15d
   1400131cf:	cmovne eax,ecx
   1400131d2:	test   eax,eax
   1400131d4:	je     0x140013208
   1400131d6:	lea    rdx,[rip+0x1bb93]        # 0x14002ed70
   1400131dd:	lea    rcx,[rbp-0x69]
   1400131e1:	call   0x140011a3c
   1400131e6:	lea    rdx,[rsp+0x40]
   1400131eb:	lea    rcx,[rsp+0x30]
   1400131f0:	movups xmm0,XMMWORD PTR [rax]
   1400131f3:	movdqu XMMWORD PTR [rsp+0x30],xmm0
   1400131f9:	call   0x1400122b0
   1400131fe:	movaps xmm6,XMMWORD PTR [rsp+0x30]
   140013203:	movaps XMMWORD PTR [rsp+0x40],xmm6
   140013208:	test   r15d,r15d
   14001320b:	je     0x140013215
   14001320d:	cmp    ebx,0x100
   140013213:	je     0x14001322f
   140013215:	test   r14d,r14d
   140013218:	je     0x140013261
   14001321a:	lea    eax,[rbx-0x400]
   140013220:	test   eax,0xfffffcff
   140013225:	jne    0x140013261
   140013227:	cmp    ebx,0x700
   14001322d:	je     0x140013261
   14001322f:	lea    rdx,[rip+0x1bb42]        # 0x14002ed78
   140013236:	lea    rcx,[rbp-0x69]
   14001323a:	call   0x140011a3c
   14001323f:	lea    rdx,[rsp+0x40]
   140013244:	lea    rcx,[rsp+0x30]
   140013249:	movups xmm0,XMMWORD PTR [rax]
   14001324c:	movdqu XMMWORD PTR [rsp+0x30],xmm0
   140013252:	call   0x1400122b0
   140013257:	movaps xmm6,XMMWORD PTR [rsp+0x30]
   14001325c:	movaps XMMWORD PTR [rsp+0x40],xmm6
   140013261:	mov    eax,DWORD PTR [rip+0x25d2d]        # 0x140038f94
   140013267:	shr    eax,0x7
   14001326a:	not    eax
   14001326c:	test   al,0x1
   14001326e:	je     0x14001330e
   140013274:	xor    eax,eax
   140013276:	mov    edx,esi
   140013278:	and    edx,0xc0
   14001327e:	cmp    edx,0x40
   140013281:	sete   al
   140013284:	test   r15d,r15d
   140013287:	cmovne r13d,eax
   14001328b:	test   r13d,r13d
   14001328e:	je     0x140013299
   140013290:	lea    rdx,[rip+0x1baf1]        # 0x14002ed88
   140013297:	jmp    0x1400132e3
   140013299:	xor    ecx,ecx
   14001329b:	cmp    edx,0x80
   1400132a1:	sete   cl
   1400132a4:	xor    eax,eax
   1400132a6:	cmp    r12d,0x1000
   1400132ad:	sete   al
   1400132b0:	test   r15d,r15d
   1400132b3:	cmovne eax,ecx
   1400132b6:	test   eax,eax
   1400132b8:	je     0x1400132c3
   1400132ba:	lea    rdx,[rip+0x1bad7]        # 0x14002ed98
   1400132c1:	jmp    0x1400132e3
   1400132c3:	xor    ecx,ecx
   1400132c5:	test   edx,edx
   1400132c7:	sete   cl
   1400132ca:	xor    eax,eax
   1400132cc:	test   r12d,r12d
   1400132cf:	sete   al
   1400132d2:	test   r15d,r15d
   1400132d5:	cmovne eax,ecx
   1400132d8:	test   eax,eax
   1400132da:	je     0x14001330e
   1400132dc:	lea    rdx,[rip+0x1bac5]        # 0x14002eda8
   1400132e3:	lea    rcx,[rbp-0x69]
   1400132e7:	call   0x140011a3c
   1400132ec:	lea    rdx,[rsp+0x40]
   1400132f1:	lea    rcx,[rsp+0x30]
   1400132f6:	movups xmm0,XMMWORD PTR [rax]
   1400132f9:	movdqu XMMWORD PTR [rsp+0x30],xmm0
   1400132ff:	call   0x1400122b0
   140013304:	movaps xmm6,XMMWORD PTR [rsp+0x30]
   140013309:	movaps XMMWORD PTR [rsp+0x40],xmm6
   14001330e:	test   r14d,r14d
   140013311:	je     0x140013351
   140013313:	test   DWORD PTR [rip+0x25c77],0x1000        # 0x140038f94
   14001331d:	jne    0x140013351
   14001331f:	lea    rdx,[rip+0x1ba92]        # 0x14002edb8
   140013326:	lea    rcx,[rbp-0x69]
   14001332a:	call   0x140011a3c
   14001332f:	lea    rdx,[rsp+0x40]
   140013334:	lea    rcx,[rsp+0x30]
   140013339:	movups xmm0,XMMWORD PTR [rax]
   14001333c:	movdqu XMMWORD PTR [rsp+0x30],xmm0
   140013342:	call   0x1400122b0
   140013347:	movaps xmm6,XMMWORD PTR [rsp+0x30]
   14001334c:	movaps XMMWORD PTR [rsp+0x40],xmm6
   140013351:	bt     esi,0x10
   140013355:	jae    0x140013384
   140013357:	lea    rdx,[rip+0x1ba6a]        # 0x14002edc8
   14001335e:	lea    rcx,[rbp-0x69]
   140013362:	call   0x140011a3c
   140013367:	lea    rdx,[rsp+0x40]
   14001336c:	lea    rcx,[rsp+0x30]
   140013371:	movups xmm0,XMMWORD PTR [rax]
   140013374:	movdqu XMMWORD PTR [rsp+0x30],xmm0
   14001337a:	call   0x1400122b0
   14001337f:	movaps xmm6,XMMWORD PTR [rsp+0x30]
   140013384:	movdqu XMMWORD PTR [rdi],xmm6
   140013388:	lea    r11,[rsp+0xf0]
   140013390:	mov    rax,rdi
   140013393:	mov    rbx,QWORD PTR [r11+0x40]
   140013397:	movaps xmm6,XMMWORD PTR [r11-0x10]
   14001339c:	movaps xmm7,XMMWORD PTR [r11-0x20]
   1400133a1:	mov    rsp,r11
   1400133a4:	pop    r15
   1400133a6:	pop    r14
   1400133a8:	pop    r13
   1400133aa:	pop    r12
   1400133ac:	pop    rdi
   1400133ad:	pop    rsi
   1400133ae:	pop    rbp
   1400133af:	ret    
   1400133b0:	mov    eax,DWORD PTR [rip+0x25bde]        # 0x140038f94
   1400133b6:	shr    eax,0x7
   1400133b9:	not    eax
   1400133bb:	and    eax,0x1
   1400133be:	ret    
   1400133bf:	int3   
   1400133c0:	mov    eax,DWORD PTR [rip+0x25bce]        # 0x140038f94
   1400133c6:	shr    eax,0x4
   1400133c9:	not    eax
   1400133cb:	and    eax,0x1
   1400133ce:	ret    
   1400133cf:	int3   
   1400133d0:	mov    eax,DWORD PTR [rip+0x25bbe]        # 0x140038f94
   1400133d6:	shr    eax,0x3
   1400133d9:	not    eax
   1400133db:	and    eax,0x1
   1400133de:	ret    
   1400133df:	int3   
   1400133e0:	mov    eax,DWORD PTR [rip+0x25bae]        # 0x140038f94
   1400133e6:	shr    eax,0xf
   1400133e9:	not    eax
   1400133eb:	and    eax,0x1
   1400133ee:	ret    
   1400133ef:	int3   
   1400133f0:	mov    eax,DWORD PTR [rip+0x25b9e]        # 0x140038f94
   1400133f6:	shr    eax,0x12
   1400133f9:	not    eax
   1400133fb:	and    eax,0x1
   1400133fe:	ret    
   1400133ff:	int3   
   140013400:	mov    eax,DWORD PTR [rip+0x25b8e]        # 0x140038f94
   140013406:	shr    eax,0x2
   140013409:	not    eax
   14001340b:	and    eax,0x1
   14001340e:	ret    
   14001340f:	int3   
   140013410:	mov    eax,DWORD PTR [rip+0x25b7e]        # 0x140038f94
   140013416:	shr    eax,1
   140013418:	not    eax
   14001341a:	and    eax,0x1
   14001341d:	ret    
   14001341e:	int3   
   14001341f:	int3   
   140013420:	mov    eax,DWORD PTR [rip+0x25b6e]        # 0x140038f94
   140013426:	shr    eax,0x9
   140013429:	not    eax
   14001342b:	and    eax,0x1
   14001342e:	ret    
   14001342f:	int3   
   140013430:	mov    eax,DWORD PTR [rip+0x25b5e]        # 0x140038f94
   140013436:	and    eax,0x1000
   14001343b:	ret    
   14001343c:	mov    eax,DWORD PTR [rip+0x25b52]        # 0x140038f94
   140013442:	and    eax,0x10000
   140013447:	ret    
   140013448:	mov    QWORD PTR [rsp+0x8],rbx
   14001344d:	mov    QWORD PTR [rsp+0x10],rsi
   140013452:	push   rdi
   140013453:	sub    rsp,0x20
   140013457:	cmp    QWORD PTR [rcx],0x0
   14001345b:	mov    edi,r8d
   14001345e:	mov    rsi,rdx
   140013461:	mov    rbx,rcx
   140013464:	je     0x140013477
   140013466:	and    DWORD PTR [rcx+0x8],0xffff00ff
   14001346d:	and    QWORD PTR [rcx],0x0
   140013471:	mov    BYTE PTR [rcx+0x8],0x3
   140013475:	jmp    0x1400134e4
   140013477:	test   rdx,rdx
   14001347a:	je     0x1400134e0
   14001347c:	test   r8d,r8d
   14001347f:	je     0x1400134e0
   140013481:	mov    ecx,r8d
   140013484:	xor    r8d,r8d
   140013487:	dec    ecx
   140013489:	lea    rcx,[rip+0x25b10]        # 0x140038fa0
   140013490:	je     0x1400134b0
   140013492:	lea    edx,[r8+0x18]
   140013496:	call   0x1400157b8
   14001349b:	test   rax,rax
   14001349e:	je     0x1400134d0
   1400134a0:	mov    r8d,edi
   1400134a3:	mov    rdx,rsi
   1400134a6:	mov    rcx,rax
   1400134a9:	call   0x140011d2c
   1400134ae:	jmp    0x1400134d2
   1400134b0:	mov    edx,0x10
   1400134b5:	call   0x1400157b8
   1400134ba:	test   rax,rax
   1400134bd:	je     0x1400134d0
   1400134bf:	mov    cl,BYTE PTR [rsi]
   1400134c1:	lea    rdx,[rip+0x1bb18]        # 0x14002efe0
   1400134c8:	mov    BYTE PTR [rax+0x8],cl
   1400134cb:	mov    QWORD PTR [rax],rdx
   1400134ce:	jmp    0x1400134d2
   1400134d0:	xor    eax,eax
   1400134d2:	mov    QWORD PTR [rbx],rax
   1400134d5:	test   rax,rax
   1400134d8:	jne    0x1400134e4
   1400134da:	mov    BYTE PTR [rbx+0x8],0x3
   1400134de:	jmp    0x1400134e4
   1400134e0:	mov    BYTE PTR [rcx+0x8],0x2
   1400134e4:	mov    rbx,QWORD PTR [rsp+0x30]
   1400134e9:	mov    rsi,QWORD PTR [rsp+0x38]
   1400134ee:	add    rsp,0x20
   1400134f2:	pop    rdi
   1400134f3:	ret    
   1400134f4:	mov    eax,DWORD PTR [rip+0x25a9a]        # 0x140038f94
   1400134fa:	shr    eax,0x11
   1400134fd:	not    eax
   1400134ff:	and    eax,0x1
   140013502:	ret    
   140013503:	int3   
   140013504:	mov    eax,DWORD PTR [rip+0x25a8a]        # 0x140038f94
   14001350a:	shr    eax,0x13
   14001350d:	not    eax
   14001350f:	and    eax,0x1
   140013512:	ret    
   140013513:	int3   
   140013514:	mov    ecx,DWORD PTR [rip+0x25a7a]        # 0x140038f94
   14001351a:	xor    eax,eax
   14001351c:	and    ecx,0x60
   14001351f:	cmp    cl,0x60
   140013522:	setne  al
   140013525:	ret    
   140013526:	int3   
   140013527:	int3   
   140013528:	mov    eax,DWORD PTR [rip+0x25a66]        # 0x140038f94
   14001352e:	shr    eax,0x8
   140013531:	not    eax
   140013533:	and    eax,0x1
   140013536:	ret    
   140013537:	int3   
   140013538:	mov    eax,DWORD PTR [rip+0x25a56]        # 0x140038f94
   14001353e:	and    eax,0x2000
   140013543:	ret    
   140013544:	mov    eax,DWORD PTR [rip+0x25a4a]        # 0x140038f94
   14001354a:	not    eax
   14001354c:	and    eax,0x1
   14001354f:	ret    
   140013550:	mov    QWORD PTR [rsp+0x8],rbx
   140013555:	mov    QWORD PTR [rsp+0x10],rsi
   14001355a:	push   rdi
   14001355b:	sub    rsp,0x50
   14001355f:	and    QWORD PTR [rcx],0x0
   140013563:	mov    BYTE PTR [rcx+0x8],0x0
   140013567:	and    DWORD PTR [rcx+0x8],0xffff00ff
   14001356e:	cmp    BYTE PTR [rcx+0x8],0x0
   140013572:	mov    rbx,rcx
   140013575:	mov    esi,0x1
   14001357a:	jne    0x14001367f
   140013580:	mov    rax,QWORD PTR [rip+0x259f1]        # 0x140038f78
   140013587:	cmp    BYTE PTR [rax],0x40
   14001358a:	je     0x14001367f
   140013590:	cmp    BYTE PTR [rax],0x5a
   140013593:	je     0x14001367f
   140013599:	test   esi,esi
   14001359b:	je     0x1400135a1
   14001359d:	xor    esi,esi
   14001359f:	jmp    0x1400135b2
   1400135a1:	mov    dl,0x2c
   1400135a3:	mov    rcx,rbx
   1400135a6:	call   0x1400122f0
   1400135ab:	mov    rax,QWORD PTR [rip+0x259c6]        # 0x140038f78
   1400135b2:	cmp    BYTE PTR [rax],0x0
   1400135b5:	je     0x140013672
   1400135bb:	movsx  r8d,BYTE PTR [rax]
   1400135bf:	sub    r8d,0x30
   1400135c3:	cmp    r8d,0x9
   1400135c7:	ja     0x1400135f1
   1400135c9:	mov    rcx,QWORD PTR [rip+0x25990]        # 0x140038f60
   1400135d0:	inc    rax
   1400135d3:	lea    rdx,[rsp+0x40]
   1400135d8:	mov    QWORD PTR [rip+0x25999],rax        # 0x140038f78
   1400135df:	call   0x140011f0c
   1400135e4:	mov    rcx,rbx
   1400135e7:	mov    rdx,rax
   1400135ea:	call   0x1400122b0
   1400135ef:	jmp    0x14001365f
   1400135f1:	and    QWORD PTR [rsp+0x20],0x0
   1400135f7:	and    DWORD PTR [rsp+0x28],0xffff0000
   1400135ff:	lea    rdx,[rsp+0x20]
   140013604:	lea    rcx,[rsp+0x30]
   140013609:	mov    rdi,rax
   14001360c:	call   0x140015ff8
   140013611:	mov    rax,QWORD PTR [rip+0x25960]        # 0x140038f78
   140013618:	sub    rax,rdi
   14001361b:	cmp    rax,0x1
   14001361f:	jle    0x140013637
   140013621:	mov    rcx,QWORD PTR [rip+0x25938]        # 0x140038f60
   140013628:	cmp    DWORD PTR [rcx],0x9
   14001362b:	je     0x140013637
   14001362d:	lea    rdx,[rsp+0x30]
   140013632:	call   0x1400124dc
   140013637:	lea    rdx,[rsp+0x30]
   14001363c:	mov    rcx,rbx
   14001363f:	call   0x1400122b0
   140013644:	mov    rax,QWORD PTR [rip+0x2592d]        # 0x140038f78
   14001364b:	cmp    rax,rdi
   14001364e:	jne    0x140013666
   140013650:	and    DWORD PTR [rbx+0x8],0xffff00ff
   140013657:	and    QWORD PTR [rbx],0x0
   14001365b:	mov    BYTE PTR [rbx+0x8],0x2
   14001365f:	mov    rax,QWORD PTR [rip+0x25912]        # 0x140038f78
   140013666:	cmp    BYTE PTR [rbx+0x8],0x0
   14001366a:	je     0x140013587
   140013670:	jmp    0x14001367f
   140013672:	mov    edx,0x1
   140013677:	mov    rcx,rbx
   14001367a:	call   0x140012498
   14001367f:	mov    rsi,QWORD PTR [rsp+0x68]
   140013684:	mov    rax,rbx
   140013687:	mov    rbx,QWORD PTR [rsp+0x60]
   14001368c:	add    rsp,0x50
   140013690:	pop    rdi
   140013691:	ret    
   140013692:	int3   
   140013693:	int3   
   140013694:	rex push rbx
   140013696:	sub    rsp,0x30
   14001369a:	mov    rax,QWORD PTR [rip+0x258d7]        # 0x140038f78
   1400136a1:	mov    rbx,rcx
   1400136a4:	cmp    BYTE PTR [rax],0x58
   1400136a7:	je     0x14001376f
   1400136ad:	cmp    BYTE PTR [rax],0x5a
   1400136b0:	je     0x140013744
   1400136b6:	lea    rcx,[rsp+0x20]
   1400136bb:	call   0x140013550
   1400136c0:	cmp    BYTE PTR [rsp+0x28],0x0
   1400136c5:	jne    0x14001372d
   1400136c7:	mov    rax,QWORD PTR [rip+0x258aa]        # 0x140038f78
   1400136ce:	cmp    BYTE PTR [rax],0x0
   1400136d1:	je     0x14001372d
   1400136d3:	cmp    BYTE PTR [rax],0x40
   1400136d6:	je     0x140013738
   1400136d8:	cmp    BYTE PTR [rax],0x5a
   1400136db:	je     0x1400136ef
   1400136dd:	mov    edx,0x2
   1400136e2:	mov    rcx,rbx
   1400136e5:	call   0x140011a84
   1400136ea:	jmp    0x140013785
   1400136ef:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   1400136f4:	inc    rax
   1400136f7:	lea    rdx,[rip+0x1b74a]        # 0x14002ee48
   1400136fe:	mov    QWORD PTR [rip+0x25873],rax        # 0x140038f78
   140013705:	mov    eax,DWORD PTR [rip+0x25889]        # 0x140038f94
   14001370b:	lea    rcx,[rsp+0x20]
   140013710:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   140013716:	shr    eax,0x12
   140013719:	not    eax
   14001371b:	test   al,0x1
   14001371d:	lea    rax,[rip+0x1b718]        # 0x14002ee3c
   140013724:	cmovne rdx,rax
   140013728:	call   0x14001240c
   14001372d:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   140013732:	movdqu XMMWORD PTR [rbx],xmm0
   140013736:	jmp    0x140013785
   140013738:	inc    rax
   14001373b:	mov    QWORD PTR [rip+0x25836],rax        # 0x140038f78
   140013742:	jmp    0x14001372d
   140013744:	inc    rax
   140013747:	lea    rdx,[rip+0x1b6e2]        # 0x14002ee30
   14001374e:	mov    QWORD PTR [rip+0x25823],rax        # 0x140038f78
   140013755:	mov    eax,DWORD PTR [rip+0x25839]        # 0x140038f94
   14001375b:	shr    eax,0x12
   14001375e:	not    eax
   140013760:	test   al,0x1
   140013762:	lea    rax,[rip+0x1b52b]        # 0x14002ec94
   140013769:	cmovne rdx,rax
   14001376d:	jmp    0x140013780
   14001376f:	inc    rax
   140013772:	lea    rdx,[rip+0x1b4ff]        # 0x14002ec78
   140013779:	mov    QWORD PTR [rip+0x257f8],rax        # 0x140038f78
   140013780:	call   0x140011a3c
   140013785:	mov    rax,rbx
   140013788:	add    rsp,0x30
   14001378c:	pop    rbx
   14001378d:	ret    
   14001378e:	int3   
   14001378f:	int3   
   140013790:	mov    QWORD PTR [rsp+0x8],rbx
   140013795:	mov    QWORD PTR [rsp+0x10],rsi
   14001379a:	mov    QWORD PTR [rsp+0x18],rdi
   14001379f:	push   rbp
   1400137a0:	push   r14
   1400137a2:	push   r15
   1400137a4:	mov    rbp,rsp
   1400137a7:	sub    rsp,0x80
   1400137ae:	mov    rax,QWORD PTR [rip+0x257c3]        # 0x140038f78
   1400137b5:	xor    r15d,r15d
   1400137b8:	mov    rsi,rdx
   1400137bb:	mov    r14,rcx
   1400137be:	cmp    BYTE PTR [rax],r15b
   1400137c1:	je     0x14001392c
   1400137c7:	call   0x140015868
   1400137cc:	test   eax,eax
   1400137ce:	mov    edi,eax
   1400137d0:	cmovs  edi,r15d
   1400137d4:	test   edi,edi
   1400137d6:	jne    0x140013814
   1400137d8:	lea    rcx,[rbp-0x30]
   1400137dc:	mov    dl,0x5b
   1400137de:	call   0x14001197c
   1400137e3:	lea    edx,[rdi+0x1]
   1400137e6:	lea    rcx,[rbp-0x50]
   1400137ea:	movups xmm0,XMMWORD PTR [rax]
   1400137ed:	movdqu XMMWORD PTR [rbp-0x50],xmm0
   1400137f2:	call   0x140012498
   1400137f7:	movaps xmm0,XMMWORD PTR [rbp-0x50]
   1400137fb:	lea    rcx,[rbp-0x60]
   1400137ff:	mov    dl,0x5d
   140013801:	movdqa XMMWORD PTR [rbp-0x60],xmm0
   140013806:	call   0x1400122f0
   14001380b:	lea    rdx,[rbp-0x60]
   14001380f:	jmp    0x1400139a9
   140013814:	and    DWORD PTR [rbp-0x58],0xffff0000
   14001381b:	test   DWORD PTR [rsi+0x8],0x800
   140013822:	mov    QWORD PTR [rbp-0x60],r15
   140013826:	je     0x14001389c
   140013828:	lea    rdx,[rip+0x1ae69]        # 0x14002e698
   14001382f:	lea    rcx,[rbp-0x60]
   140013833:	call   0x14001240c
   140013838:	jmp    0x14001389c
   14001383a:	mov    eax,edi
   14001383c:	dec    edi
   14001383e:	test   eax,eax
   140013840:	je     0x1400138a2
   140013842:	mov    rax,QWORD PTR [rip+0x2572f]        # 0x140038f78
   140013849:	cmp    BYTE PTR [rax],r15b
   14001384c:	je     0x1400138a2
   14001384e:	lea    rcx,[rbp-0x20]
   140013852:	xor    edx,edx
   140013854:	call   0x140014a54
   140013859:	lea    rcx,[rbp-0x10]
   14001385d:	mov    dl,0x5b
   14001385f:	mov    rbx,rax
   140013862:	call   0x14001197c
   140013867:	lea    rcx,[rbp-0x40]
   14001386b:	mov    rdx,rbx
   14001386e:	movups xmm0,XMMWORD PTR [rax]
   140013871:	movdqu XMMWORD PTR [rbp-0x40],xmm0
   140013876:	call   0x1400122b0
   14001387b:	movaps xmm0,XMMWORD PTR [rbp-0x40]
   14001387f:	lea    rcx,[rbp-0x30]
   140013883:	mov    dl,0x5d
   140013885:	movdqa XMMWORD PTR [rbp-0x30],xmm0
   14001388a:	call   0x1400122f0
   14001388f:	lea    rdx,[rbp-0x30]
   140013893:	lea    rcx,[rbp-0x60]
   140013897:	call   0x1400122b0
   14001389c:	cmp    BYTE PTR [rbp-0x58],0x1
   1400138a0:	jle    0x14001383a
   1400138a2:	cmp    QWORD PTR [rsi],r15
   1400138a5:	je     0x14001390c
   1400138a7:	test   DWORD PTR [rsi+0x8],0x800
   1400138ae:	je     0x1400138ba
   1400138b0:	movups xmm0,XMMWORD PTR [rsi]
   1400138b3:	movdqu XMMWORD PTR [rbp-0x30],xmm0
   1400138b8:	jmp    0x1400138f6
   1400138ba:	lea    rcx,[rbp-0x10]
   1400138be:	mov    dl,0x28
   1400138c0:	call   0x14001197c
   1400138c5:	lea    rcx,[rbp-0x30]
   1400138c9:	mov    rdx,rsi
   1400138cc:	movups xmm0,XMMWORD PTR [rax]
   1400138cf:	movdqu XMMWORD PTR [rbp-0x30],xmm0
   1400138d4:	call   0x1400122b0
   1400138d9:	movaps xmm0,XMMWORD PTR [rbp-0x30]
   1400138dd:	lea    rcx,[rbp-0x30]
   1400138e1:	mov    dl,0x29
   1400138e3:	movdqa XMMWORD PTR [rbp-0x30],xmm0
   1400138e8:	call   0x1400122f0
   1400138ed:	movaps xmm0,XMMWORD PTR [rbp-0x30]
   1400138f1:	movdqa XMMWORD PTR [rbp-0x30],xmm0
   1400138f6:	lea    rdx,[rbp-0x60]
   1400138fa:	lea    rcx,[rbp-0x30]
   1400138fe:	call   0x1400122b0
   140013903:	movaps xmm0,XMMWORD PTR [rbp-0x30]
   140013907:	movdqa XMMWORD PTR [rbp-0x60],xmm0
   14001390c:	lea    rdx,[rbp-0x60]
   140013910:	lea    rcx,[rbp-0x50]
   140013914:	call   0x140015ff8
   140013919:	bts    DWORD PTR [rbp-0x48],0xb
   14001391e:	movups xmm0,XMMWORD PTR [rbp-0x50]
   140013922:	movdqu XMMWORD PTR [r14],xmm0
   140013927:	jmp    0x1400139b1
   14001392c:	lea    rcx,[rbp-0x10]
   140013930:	cmp    QWORD PTR [rdx],r15
   140013933:	je     0x140013974
   140013935:	mov    dl,0x28
   140013937:	call   0x14001197c
   14001393c:	lea    rcx,[rbp-0x30]
   140013940:	mov    rdx,rsi
   140013943:	movups xmm0,XMMWORD PTR [rax]
   140013946:	movdqu XMMWORD PTR [rbp-0x30],xmm0
   14001394b:	call   0x1400122b0
   140013950:	movaps xmm0,XMMWORD PTR [rbp-0x30]
   140013954:	lea    rdx,[rip+0x1b645]        # 0x14002efa0
   14001395b:	lea    rcx,[rbp-0x30]
   14001395f:	movdqa XMMWORD PTR [rbp-0x30],xmm0
   140013964:	call   0x14001240c
   140013969:	movaps xmm0,XMMWORD PTR [rbp-0x30]
   14001396d:	movdqa XMMWORD PTR [rbp-0x30],xmm0
   140013972:	jmp    0x140013983
   140013974:	mov    dl,0x5b
   140013976:	call   0x14001197c
   14001397b:	movups xmm0,XMMWORD PTR [rax]
   14001397e:	movdqu XMMWORD PTR [rbp-0x30],xmm0
   140013983:	lea    rcx,[rbp-0x30]
   140013987:	mov    edx,0x1
   14001398c:	call   0x140012498
   140013991:	lea    rcx,[rbp-0x40]
   140013995:	mov    dl,0x5d
   140013997:	movaps xmm0,XMMWORD PTR [rbp-0x30]
   14001399b:	movdqa XMMWORD PTR [rbp-0x40],xmm0
   1400139a0:	call   0x1400122f0
   1400139a5:	lea    rdx,[rbp-0x40]
   1400139a9:	mov    rcx,r14
   1400139ac:	call   0x140013a94
   1400139b1:	lea    r11,[rsp+0x80]
   1400139b9:	mov    rax,r14
   1400139bc:	mov    rbx,QWORD PTR [r11+0x20]
   1400139c0:	mov    rsi,QWORD PTR [r11+0x28]
   1400139c4:	mov    rdi,QWORD PTR [r11+0x30]
   1400139c8:	mov    rsp,r11
   1400139cb:	pop    r15
   1400139cd:	pop    r14
   1400139cf:	pop    rbp
   1400139d0:	ret    
   1400139d1:	int3   
   1400139d2:	int3   
   1400139d3:	int3   
   1400139d4:	rex push rbx
   1400139d6:	sub    rsp,0x40
   1400139da:	mov    eax,DWORD PTR [rip+0x255b4]        # 0x140038f94
   1400139e0:	mov    rdx,QWORD PTR [rip+0x1a8b9]        # 0x14002e2a0
   1400139e7:	mov    rbx,rcx
   1400139ea:	not    eax
   1400139ec:	test   al,0x1
   1400139ee:	jne    0x1400139f4
   1400139f0:	add    rdx,0x2
   1400139f4:	lea    rcx,[rsp+0x20]
   1400139f9:	call   0x140011a3c
   1400139fe:	mov    rcx,QWORD PTR [rip+0x25573]        # 0x140038f78
   140013a05:	cmp    BYTE PTR [rcx],0x0
   140013a08:	je     0x140013a5f
   140013a0a:	movsx  eax,BYTE PTR [rcx]
   140013a0d:	inc    rcx
   140013a10:	mov    QWORD PTR [rip+0x25561],rcx        # 0x140038f78
   140013a17:	cmp    eax,0x30
   140013a1a:	je     0x140013a4c
   140013a1c:	cmp    eax,0x32
   140013a1f:	je     0x140013a33
   140013a21:	cmp    eax,0x35
   140013a24:	jne    0x140013a6e
   140013a26:	lea    edx,[rax-0x33]
   140013a29:	mov    rcx,rbx
   140013a2c:	call   0x140011a84
   140013a31:	jmp    0x140013a88
   140013a33:	lea    rcx,[rsp+0x30]
   140013a38:	call   0x140016ab4
   140013a3d:	lea    rcx,[rsp+0x20]
   140013a42:	mov    rdx,rax
   140013a45:	call   0x1400122b0
   140013a4a:	jmp    0x140013a6e
   140013a4c:	lea    rdx,[rip+0x1b225]        # 0x14002ec78
   140013a53:	lea    rcx,[rsp+0x20]
   140013a58:	call   0x14001240c
   140013a5d:	jmp    0x140013a6e
   140013a5f:	lea    rcx,[rsp+0x20]
   140013a64:	mov    edx,0x1
   140013a69:	call   0x140012498
   140013a6e:	lea    rdx,[rip+0x1b35f]        # 0x14002edd4
   140013a75:	lea    rcx,[rsp+0x20]
   140013a7a:	call   0x14001240c
   140013a7f:	movups xmm0,XMMWORD PTR [rsp+0x20]
   140013a84:	movdqu XMMWORD PTR [rbx],xmm0
   140013a88:	mov    rax,rbx
   140013a8b:	add    rsp,0x40
   140013a8f:	pop    rbx
   140013a90:	ret    
   140013a91:	int3   
   140013a92:	int3   
   140013a93:	int3   
   140013a94:	mov    QWORD PTR [rsp+0x8],rbx
   140013a99:	push   rbp
   140013a9a:	push   rsi
   140013a9b:	push   rdi
   140013a9c:	mov    rbp,rsp
   140013a9f:	sub    rsp,0x70
   140013aa3:	mov    rdi,rcx
   140013aa6:	mov    rcx,QWORD PTR [rip+0x254cb]        # 0x140038f78
   140013aad:	mov    rsi,rdx
   140013ab0:	mov    al,BYTE PTR [rcx]
   140013ab2:	mov    BYTE PTR [rbp+0x38],al
   140013ab5:	test   al,al
   140013ab7:	je     0x140013e71
   140013abd:	and    QWORD PTR [rbp-0x50],0x0
   140013ac2:	and    DWORD PTR [rbp-0x48],0xffff0000
   140013ac9:	inc    rcx
   140013acc:	movzx  eax,al
   140013acf:	or     ebx,0xffffffff
   140013ad2:	mov    QWORD PTR [rip+0x2549f],rcx        # 0x140038f78
   140013ad9:	mov    BYTE PTR [rbp+0x30],0x0
   140013add:	cmp    eax,0x4e
   140013ae0:	jg     0x140013b47
   140013ae2:	je     0x140013d62
   140013ae8:	cmp    eax,0x43
   140013aeb:	jl     0x140013d29
   140013af1:	cmp    eax,0x45
   140013af4:	jle    0x140013b3e
   140013af6:	cmp    eax,0x47
   140013af9:	jle    0x140013b35
   140013afb:	cmp    eax,0x49
   140013afe:	jle    0x140013b2c
   140013b00:	cmp    eax,0x4b
   140013b03:	jle    0x140013b23
   140013b05:	cmp    eax,0x4d
   140013b08:	jne    0x140013d29
   140013b0e:	lea    rdx,[rip+0x1b373]        # 0x14002ee88
   140013b15:	lea    rcx,[rbp-0x50]
   140013b19:	call   0x140011e90
   140013b1e:	jmp    0x140013d7b
   140013b23:	lea    rdx,[rip+0x1b356]        # 0x14002ee80
   140013b2a:	jmp    0x140013b15
   140013b2c:	lea    rdx,[rip+0x1b349]        # 0x14002ee7c
   140013b33:	jmp    0x140013b15
   140013b35:	lea    rdx,[rip+0x1b338]        # 0x14002ee74
   140013b3c:	jmp    0x140013b15
   140013b3e:	lea    rdx,[rip+0x1b327]        # 0x14002ee6c
   140013b45:	jmp    0x140013b15
   140013b47:	cmp    eax,0x4f
   140013b4a:	je     0x140013d52
   140013b50:	jle    0x140013d29
   140013b56:	cmp    eax,0x53
   140013b59:	jle    0x140013d22
   140013b5f:	cmp    eax,0x58
   140013b62:	je     0x140013d16
   140013b68:	cmp    eax,0x5f
   140013b6b:	jne    0x140013d29
   140013b71:	movzx  ebx,BYTE PTR [rcx]
   140013b74:	inc    rcx
   140013b77:	mov    eax,ebx
   140013b79:	mov    QWORD PTR [rip+0x253f8],rcx        # 0x140038f78
   140013b80:	cmp    ebx,0x4d
   140013b83:	jg     0x140013c35
   140013b89:	cmp    eax,0x4c
   140013b8c:	jge    0x140013c2c
   140013b92:	cmp    eax,0x47
   140013b95:	jg     0x140013c10
   140013b97:	cmp    eax,0x46
   140013b9a:	jge    0x140013c07
   140013b9c:	test   eax,eax
   140013b9e:	je     0x140013bea
   140013ba0:	cmp    eax,0x24
   140013ba3:	je     0x140013bc6
   140013ba5:	add    eax,0xffffffbc
   140013ba8:	cmp    eax,0x1
   140013bab:	ja     0x140013c86
   140013bb1:	lea    rdx,[rip+0x1b2e8]        # 0x14002eea0
   140013bb8:	lea    rcx,[rbp-0x50]
   140013bbc:	call   0x140011e90
   140013bc1:	jmp    0x140013d7e
   140013bc6:	lea    rcx,[rbp-0x30]
   140013bca:	call   0x140013a94
   140013bcf:	lea    rdx,[rip+0x1b312]        # 0x14002eee8
   140013bd6:	lea    rcx,[rbp-0x40]
   140013bda:	mov    rbx,rax
   140013bdd:	call   0x140011a3c
   140013be2:	mov    rdx,rbx
   140013be5:	jmp    0x140013e82
   140013bea:	dec    rcx
   140013bed:	mov    edx,0x1
   140013bf2:	mov    QWORD PTR [rip+0x2537f],rcx        # 0x140038f78
   140013bf9:	lea    rcx,[rbp-0x50]
   140013bfd:	call   0x140011ed0
   140013c02:	jmp    0x140013d7e
   140013c07:	lea    rdx,[rip+0x1b29a]        # 0x14002eea8
   140013c0e:	jmp    0x140013bb8
   140013c10:	cmp    eax,0x49
   140013c13:	jle    0x140013c23
   140013c15:	cmp    eax,0x4b
   140013c18:	jg     0x140013c86
   140013c1a:	lea    rdx,[rip+0x1b297]        # 0x14002eeb8
   140013c21:	jmp    0x140013bb8
   140013c23:	lea    rdx,[rip+0x1b286]        # 0x14002eeb0
   140013c2a:	jmp    0x140013bb8
   140013c2c:	lea    rdx,[rip+0x1b28d]        # 0x14002eec0
   140013c33:	jmp    0x140013bb8
   140013c35:	cmp    eax,0x4e
   140013c38:	je     0x140013d0a
   140013c3e:	cmp    eax,0x4f
   140013c41:	je     0x140013caa
   140013c43:	cmp    eax,0x52
   140013c46:	je     0x140013c9e
   140013c48:	cmp    eax,0x57
   140013c4b:	je     0x140013c92
   140013c4d:	add    eax,0xffffffa8
   140013c50:	cmp    eax,0x1
   140013c53:	ja     0x140013c86
   140013c55:	dec    rcx
   140013c58:	mov    QWORD PTR [rip+0x25319],rcx        # 0x140038f78
   140013c5f:	lea    rcx,[rbp-0x20]
   140013c63:	call   0x140014c30
   140013c68:	movups xmm0,XMMWORD PTR [rax]
   140013c6b:	movq   rax,xmm0
   140013c70:	movaps XMMWORD PTR [rbp-0x50],xmm0
   140013c74:	test   rax,rax
   140013c77:	jne    0x140013d7e
   140013c7d:	movdqu XMMWORD PTR [rdi],xmm0
   140013c81:	jmp    0x140013e91
   140013c86:	lea    rdx,[rip+0x1b263]        # 0x14002eef0
   140013c8d:	jmp    0x140013bb8
   140013c92:	lea    rdx,[rip+0x1b247]        # 0x14002eee0
   140013c99:	jmp    0x140013bb8
   140013c9e:	lea    rdx,[rip+0x1b22b]        # 0x14002eed0
   140013ca5:	jmp    0x140013bb8
   140013caa:	mov    ebx,0xfffffffe
   140013caf:	movups xmm0,XMMWORD PTR [rsi]
   140013cb2:	and    QWORD PTR [rbp-0x50],0x0
   140013cb7:	and    DWORD PTR [rbp-0x48],0xffff0000
   140013cbe:	movdqu XMMWORD PTR [rbp-0x40],xmm0
   140013cc3:	cmp    ebx,0xfffffffe
   140013cc6:	jne    0x140013e11
   140013ccc:	lea    r9,[rip+0x16d7d]        # 0x14002aa50
   140013cd3:	lea    r8,[rbp-0x40]
   140013cd7:	lea    rdx,[rbp-0x50]
   140013cdb:	lea    rcx,[rbp-0x30]
   140013cdf:	mov    ebx,0x800
   140013ce4:	or     DWORD PTR [rbp-0x38],ebx
   140013ce7:	call   0x140016318
   140013cec:	test   DWORD PTR [rbp-0x28],ebx
   140013cef:	jne    0x140013d01
   140013cf1:	lea    rdx,[rip+0x1a9a0]        # 0x14002e698
   140013cf8:	lea    rcx,[rbp-0x30]
   140013cfc:	call   0x14001240c
   140013d01:	movups xmm0,XMMWORD PTR [rbp-0x30]
   140013d05:	jmp    0x140013c7d
   140013d0a:	lea    rdx,[rip+0x1b187]        # 0x14002ee98
   140013d11:	jmp    0x140013bb8
   140013d16:	lea    rdx,[rip+0x1af5b]        # 0x14002ec78
   140013d1d:	jmp    0x140013b15
   140013d22:	mov    ebx,eax
   140013d24:	and    ebx,0x3
   140013d27:	jmp    0x140013d72
   140013d29:	dec    rcx
   140013d2c:	mov    QWORD PTR [rip+0x25245],rcx        # 0x140038f78
   140013d33:	lea    rcx,[rbp-0x10]
   140013d37:	call   0x140014c30
   140013d3c:	movups xmm0,XMMWORD PTR [rax]
   140013d3f:	movq   rax,xmm0
   140013d44:	movaps XMMWORD PTR [rbp-0x50],xmm0
   140013d48:	test   rax,rax
   140013d4b:	jne    0x140013d7b
   140013d4d:	jmp    0x140013c7d
   140013d52:	lea    rdx,[rip+0x1b097]        # 0x14002edf0
   140013d59:	lea    rcx,[rbp-0x50]
   140013d5d:	call   0x140011e90
   140013d62:	lea    rdx,[rip+0x1b127]        # 0x14002ee90
   140013d69:	lea    rcx,[rbp-0x50]
   140013d6d:	call   0x14001240c
   140013d72:	cmp    ebx,0xffffffff
   140013d75:	jne    0x140013caf
   140013d7b:	mov    bl,BYTE PTR [rbp+0x30]
   140013d7e:	mov    cl,BYTE PTR [rbp+0x38]
   140013d81:	cmp    cl,0x43
   140013d84:	je     0x140013da8
   140013d86:	lea    eax,[rcx-0x45]
   140013d89:	test   al,0xf9
   140013d8b:	je     0x140013d9f
   140013d8d:	cmp    cl,0x5f
   140013d90:	jne    0x140013dd6
   140013d92:	sub    bl,0x45
   140013d95:	cmp    bl,0x8
   140013d98:	ja     0x140013dd6
   140013d9a:	test   bl,0x1
   140013d9d:	jne    0x140013dd6
   140013d9f:	lea    rdx,[rip+0x1b052]        # 0x14002edf8
   140013da6:	jmp    0x140013daf
   140013da8:	lea    rdx,[rip+0x1b149]        # 0x14002eef8
   140013daf:	lea    rcx,[rbp-0x10]
   140013db3:	call   0x140011a3c
   140013db8:	lea    rdx,[rbp-0x50]
   140013dbc:	lea    rcx,[rbp-0x30]
   140013dc0:	movups xmm0,XMMWORD PTR [rax]
   140013dc3:	movdqu XMMWORD PTR [rbp-0x30],xmm0
   140013dc8:	call   0x1400122b0
   140013dcd:	movaps xmm0,XMMWORD PTR [rbp-0x30]
   140013dd1:	movdqa XMMWORD PTR [rbp-0x50],xmm0
   140013dd6:	cmp    QWORD PTR [rsi],0x0
   140013dda:	je     0x140013e08
   140013ddc:	lea    rcx,[rbp-0x10]
   140013de0:	mov    dl,0x20
   140013de2:	call   0x14001197c
   140013de7:	lea    rcx,[rbp-0x30]
   140013deb:	mov    rdx,rsi
   140013dee:	movups xmm0,XMMWORD PTR [rax]
   140013df1:	movdqu XMMWORD PTR [rbp-0x30],xmm0
   140013df6:	call   0x1400122b0
   140013dfb:	lea    rdx,[rbp-0x30]
   140013dff:	lea    rcx,[rbp-0x50]
   140013e03:	call   0x1400122b0
   140013e08:	movaps xmm0,XMMWORD PTR [rbp-0x50]
   140013e0c:	jmp    0x140013c7d
   140013e11:	cmp    QWORD PTR [rsi],0x0
   140013e15:	jne    0x140013e58
   140013e17:	test   bl,0x1
   140013e1a:	je     0x140013e43
   140013e1c:	lea    rdx,[rip+0x1b0dd]        # 0x14002ef00
   140013e23:	lea    rcx,[rbp-0x50]
   140013e27:	call   0x140011e90
   140013e2c:	test   bl,0x2
   140013e2f:	je     0x140013e58
   140013e31:	lea    rdx,[rip+0x1b0d0]        # 0x14002ef08
   140013e38:	lea    rcx,[rbp-0x50]
   140013e3c:	call   0x14001240c
   140013e41:	jmp    0x140013e58
   140013e43:	test   bl,0x2
   140013e46:	je     0x140013e58
   140013e48:	lea    rdx,[rip+0x1afc1]        # 0x14002ee10
   140013e4f:	lea    rcx,[rbp-0x50]
   140013e53:	call   0x140011e90
   140013e58:	lea    r9,[rip+0x1a851]        # 0x14002e6b0
   140013e5f:	lea    r8,[rbp-0x40]
   140013e63:	lea    rdx,[rbp-0x50]
   140013e67:	mov    rcx,rdi
   140013e6a:	call   0x140016318
   140013e6f:	jmp    0x140013e91
   140013e71:	lea    rcx,[rbp-0x10]
   140013e75:	mov    edx,0x1
   140013e7a:	call   0x140011a84
   140013e7f:	mov    rdx,rsi
   140013e82:	movups xmm0,XMMWORD PTR [rax]
   140013e85:	mov    rcx,rdi
   140013e88:	movdqu XMMWORD PTR [rdi],xmm0
   140013e8c:	call   0x1400122b0
   140013e91:	mov    rax,rdi
   140013e94:	mov    rbx,QWORD PTR [rsp+0x90]
   140013e9c:	add    rsp,0x70
   140013ea0:	pop    rdi
   140013ea1:	pop    rsi
   140013ea2:	pop    rbp
   140013ea3:	ret    
   140013ea4:	rex push rbx
   140013ea6:	sub    rsp,0x20
   140013eaa:	xor    edx,edx
   140013eac:	mov    rbx,rcx
   140013eaf:	call   0x140014a54
   140013eb4:	mov    rax,rbx
   140013eb7:	add    rsp,0x20
   140013ebb:	pop    rbx
   140013ebc:	ret    
   140013ebd:	int3   
   140013ebe:	int3   
   140013ebf:	int3   
   140013ec0:	mov    QWORD PTR [rsp+0x8],rbx
   140013ec5:	push   rdi
   140013ec6:	sub    rsp,0x30
   140013eca:	mov    rax,QWORD PTR [rip+0x250a7]        # 0x140038f78
   140013ed1:	mov    rdi,rcx
   140013ed4:	cmp    BYTE PTR [rax],0x0
   140013ed7:	je     0x140013fa7
   140013edd:	movsx  ebx,BYTE PTR [rax]
   140013ee0:	inc    rax
   140013ee3:	mov    edx,0x2
   140013ee8:	sub    ebx,0x41
   140013eeb:	mov    QWORD PTR [rip+0x25086],rax        # 0x140038f78
   140013ef2:	cmp    ebx,0x10
   140013ef5:	ja     0x140013fac
   140013efb:	lea    rcx,[rsp+0x20]
   140013f00:	call   0x140011a84
   140013f05:	mov    ecx,DWORD PTR [rip+0x25089]        # 0x140038f94
   140013f0b:	mov    eax,ecx
   140013f0d:	shr    eax,1
   140013f0f:	not    eax
   140013f11:	test   al,0x1
   140013f13:	je     0x140013f9c
   140013f19:	and    ebx,0xfffffffe
   140013f1c:	je     0x140013f80
   140013f1e:	cmp    ebx,0x2
   140013f21:	je     0x140013f77
   140013f23:	cmp    ebx,0x4
   140013f26:	je     0x140013f6e
   140013f28:	cmp    ebx,0x6
   140013f2b:	je     0x140013f65
   140013f2d:	cmp    ebx,0x8
   140013f30:	je     0x140013f5c
   140013f32:	cmp    ebx,0xc
   140013f35:	je     0x140013f53
   140013f37:	cmp    ebx,0xe
   140013f3a:	je     0x140013f4a
   140013f3c:	cmp    ebx,0x10
   140013f3f:	jne    0x140013f9c
   140013f41:	mov    rdx,QWORD PTR [rip+0x1a388]        # 0x14002e2d0
   140013f48:	jmp    0x140013f87
   140013f4a:	mov    rdx,QWORD PTR [rip+0x1a38f]        # 0x14002e2e0
   140013f51:	jmp    0x140013f87
   140013f53:	mov    rdx,QWORD PTR [rip+0x1a37e]        # 0x14002e2d8
   140013f5a:	jmp    0x140013f87
   140013f5c:	mov    rdx,QWORD PTR [rip+0x1a365]        # 0x14002e2c8
   140013f63:	jmp    0x140013f87
   140013f65:	mov    rdx,QWORD PTR [rip+0x1a34c]        # 0x14002e2b8
   140013f6c:	jmp    0x140013f87
   140013f6e:	mov    rdx,QWORD PTR [rip+0x1a34b]        # 0x14002e2c0
   140013f75:	jmp    0x140013f87
   140013f77:	mov    rdx,QWORD PTR [rip+0x1a332]        # 0x14002e2b0
   140013f7e:	jmp    0x140013f87
   140013f80:	mov    rdx,QWORD PTR [rip+0x1a321]        # 0x14002e2a8
   140013f87:	not    ecx
   140013f89:	test   cl,0x1
   140013f8c:	jne    0x140013f92
   140013f8e:	add    rdx,0x2
   140013f92:	lea    rcx,[rsp+0x20]
   140013f97:	call   0x140011e90
   140013f9c:	movups xmm0,XMMWORD PTR [rsp+0x20]
   140013fa1:	movdqu XMMWORD PTR [rdi],xmm0
   140013fa5:	jmp    0x140013fb1
   140013fa7:	mov    edx,0x1
   140013fac:	call   0x140011a84
   140013fb1:	mov    rax,rdi
   140013fb4:	mov    rbx,QWORD PTR [rsp+0x40]
   140013fb9:	add    rsp,0x30
   140013fbd:	pop    rdi
   140013fbe:	ret    
   140013fbf:	int3   
   140013fc0:	mov    rax,rsp
   140013fc3:	mov    QWORD PTR [rax+0x8],rbx
   140013fc7:	mov    QWORD PTR [rax+0x10],rsi
   140013fcb:	mov    QWORD PTR [rax+0x18],r8
   140013fcf:	push   rbp
   140013fd0:	push   rdi
   140013fd1:	push   r12
   140013fd3:	push   r14
   140013fd5:	push   r15
   140013fd7:	lea    rbp,[rax-0x57]
   140013fdb:	sub    rsp,0xe0
   140013fe2:	xor    r14d,r14d
   140013fe5:	movaps XMMWORD PTR [rax-0x38],xmm6
   140013fe9:	mov    rax,QWORD PTR [rip+0x24f88]        # 0x140038f78
   140013ff0:	mov    rsi,rdx
   140013ff3:	mov    edx,0xffff0000
   140013ff8:	mov    r15,r9
   140013ffb:	and    DWORD PTR [rbp-0x39],edx
   140013ffe:	mov    rbx,rcx
   140014001:	mov    QWORD PTR [rbp-0x41],r14
   140014005:	mov    BYTE PTR [rsp+0x20],r14b
   14001400a:	cmp    BYTE PTR [rax],r14b
   14001400d:	je     0x1400145ee
   140014013:	cmp    BYTE PTR [rax],0x24
   140014016:	jne    0x140014046
   140014018:	mov    r9d,DWORD PTR [rbp+0x7f]
   14001401c:	lea    r8,[rsp+0x20]
   140014021:	lea    rdx,[rbp+0x6f]
   140014025:	lea    rcx,[rbp-0x51]
   140014029:	call   0x140014e90
   14001402e:	cmp    QWORD PTR [rbp-0x51],r14
   140014032:	je     0x140014041
   140014034:	movups xmm0,XMMWORD PTR [rbp-0x51]
   140014038:	movdqu XMMWORD PTR [rbx],xmm0
   14001403c:	jmp    0x140014690
   140014041:	mov    edx,0xffff0000
   140014046:	mov    rax,QWORD PTR [rip+0x24f2b]        # 0x140038f78
   14001404d:	mov    QWORD PTR [rbp-0x71],r14
   140014051:	mov    QWORD PTR [rbp-0x51],r14
   140014055:	movsx  ecx,BYTE PTR [rax]
   140014058:	mov    eax,0x16
   14001405d:	mov    r12,r14
   140014060:	lea    r8d,[rax+0x2b]
   140014064:	mov    edi,ecx
   140014066:	cmp    cl,r8b
   140014069:	cmovge eax,r8d
   14001406d:	and    DWORD PTR [rbp-0x49],edx
   140014070:	sub    edi,eax
   140014072:	and    DWORD PTR [rbp-0x69],edx
   140014075:	mov    edx,DWORD PTR [rip+0x24f19]        # 0x140038f94
   14001407b:	movaps xmm6,XMMWORD PTR [rbp-0x71]
   14001407f:	mov    eax,edi
   140014081:	sub    eax,0x4
   140014084:	je     0x140014181
   14001408a:	dec    eax
   14001408c:	je     0x140014103
   14001408e:	cmp    eax,0x3
   140014091:	jne    0x140014267
   140014097:	mov    eax,edx
   140014099:	shr    eax,1
   14001409b:	not    eax
   14001409d:	test   al,0x1
   14001409f:	je     0x140014208
   1400140a5:	not    edx
   1400140a7:	cmp    QWORD PTR [rbp-0x51],r14
   1400140ab:	je     0x1400140f4
   1400140ad:	mov    rdi,QWORD PTR [rip+0x1a23c]        # 0x14002e2f0
   1400140b4:	test   dl,0x1
   1400140b7:	jne    0x1400140bd
   1400140b9:	add    rdi,0x2
   1400140bd:	movaps xmm0,XMMWORD PTR [rbp-0x51]
   1400140c1:	lea    rcx,[rbp-0x11]
   1400140c5:	mov    dl,0x20
   1400140c7:	movdqa XMMWORD PTR [rbp-0x11],xmm0
   1400140cc:	call   0x1400122f0
   1400140d1:	lea    rcx,[rbp-0x31]
   1400140d5:	movaps xmm0,XMMWORD PTR [rbp-0x11]
   1400140d9:	mov    rdx,rdi
   1400140dc:	movdqa XMMWORD PTR [rbp-0x31],xmm0
   1400140e1:	call   0x14001240c
   1400140e6:	movaps xmm0,XMMWORD PTR [rbp-0x31]
   1400140ea:	movdqa XMMWORD PTR [rbp-0x51],xmm0
   1400140ef:	jmp    0x1400141fc
   1400140f4:	test   dl,0x1
   1400140f7:	mov    rdx,QWORD PTR [rip+0x1a1f2]        # 0x14002e2f0
   1400140fe:	jmp    0x1400141ed
   140014103:	mov    eax,edx
   140014105:	shr    eax,1
   140014107:	not    eax
   140014109:	test   al,0x1
   14001410b:	je     0x140014208
   140014111:	not    edx
   140014113:	test   r12,r12
   140014116:	je     0x14001415e
   140014118:	mov    rdi,QWORD PTR [rip+0x1a1d9]        # 0x14002e2f8
   14001411f:	test   dl,0x1
   140014122:	jne    0x140014128
   140014124:	add    rdi,0x2
   140014128:	lea    rcx,[rbp+0xf]
   14001412c:	mov    dl,0x20
   14001412e:	movdqa XMMWORD PTR [rbp+0xf],xmm6
   140014133:	call   0x1400122f0
   140014138:	lea    rcx,[rbp-0x1]
   14001413c:	mov    rdx,rdi
   14001413f:	movaps xmm0,XMMWORD PTR [rbp+0xf]
   140014143:	movdqa XMMWORD PTR [rbp-0x1],xmm0
   140014148:	call   0x14001240c
   14001414d:	movaps xmm6,XMMWORD PTR [rbp-0x1]
   140014151:	movaps XMMWORD PTR [rbp-0x71],xmm6
   140014155:	mov    r12,QWORD PTR [rbp-0x71]
   140014159:	jmp    0x1400141fc
   14001415e:	test   dl,0x1
   140014161:	mov    rdx,QWORD PTR [rip+0x1a190]        # 0x14002e2f8
   140014168:	jne    0x14001416e
   14001416a:	add    rdx,0x2
   14001416e:	lea    rcx,[rbp-0x71]
   140014172:	call   0x140011e90
   140014177:	mov    r12,QWORD PTR [rbp-0x71]
   14001417b:	movaps xmm6,XMMWORD PTR [rbp-0x71]
   14001417f:	jmp    0x1400141fc
   140014181:	mov    eax,edx
   140014183:	shr    eax,1
   140014185:	not    eax
   140014187:	test   al,0x1
   140014189:	je     0x140014208
   14001418b:	mov    eax,edx
   14001418d:	shr    eax,0x11
   140014190:	not    eax
   140014192:	test   al,0x1
   140014194:	je     0x140014208
   140014196:	not    edx
   140014198:	cmp    QWORD PTR [rbp-0x51],r14
   14001419c:	je     0x1400141e3
   14001419e:	mov    rdi,QWORD PTR [rip+0x1a143]        # 0x14002e2e8
   1400141a5:	test   dl,0x1
   1400141a8:	jne    0x1400141ae
   1400141aa:	add    rdi,0x2
   1400141ae:	movaps xmm0,XMMWORD PTR [rbp-0x51]
   1400141b2:	lea    rcx,[rbp-0x21]
   1400141b6:	mov    dl,0x20
   1400141b8:	movdqa XMMWORD PTR [rbp-0x21],xmm0
   1400141bd:	call   0x1400122f0
   1400141c2:	lea    rcx,[rsp+0x30]
   1400141c7:	movaps xmm0,XMMWORD PTR [rbp-0x21]
   1400141cb:	mov    rdx,rdi
   1400141ce:	movdqa XMMWORD PTR [rsp+0x30],xmm0
   1400141d4:	call   0x14001240c
   1400141d9:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   1400141de:	jmp    0x1400140ea
   1400141e3:	test   dl,0x1
   1400141e6:	mov    rdx,QWORD PTR [rip+0x1a0fb]        # 0x14002e2e8
   1400141ed:	jne    0x1400141f3
   1400141ef:	add    rdx,0x2
   1400141f3:	lea    rcx,[rbp-0x51]
   1400141f7:	call   0x140011e90
   1400141fc:	mov    edx,DWORD PTR [rip+0x24d92]        # 0x140038f94
   140014202:	mov    r8d,0x41
   140014208:	mov    rax,QWORD PTR [rip+0x24d69]        # 0x140038f78
   14001420f:	inc    rax
   140014212:	mov    QWORD PTR [rip+0x24d5f],rax        # 0x140038f78
   140014219:	cmp    BYTE PTR [rax],0x24
   14001421c:	jne    0x14001424a
   14001421e:	mov    r9d,DWORD PTR [rbp+0x7f]
   140014222:	lea    r8,[rsp+0x20]
   140014227:	lea    rdx,[rbp+0x6f]
   14001422b:	lea    rcx,[rbp-0x61]
   14001422f:	call   0x140014e90
   140014234:	cmp    QWORD PTR [rbp-0x61],r14
   140014238:	jne    0x1400145e5
   14001423e:	mov    edx,DWORD PTR [rip+0x24d50]        # 0x140038f94
   140014244:	mov    r8d,0x41
   14001424a:	mov    rax,QWORD PTR [rip+0x24d27]        # 0x140038f78
   140014251:	mov    ecx,0x16
   140014256:	cmp    BYTE PTR [rax],r8b
   140014259:	movsx  edi,BYTE PTR [rax]
   14001425c:	cmovge ecx,r8d
   140014260:	sub    edi,ecx
   140014262:	jmp    0x14001407f
   140014267:	mov    rax,QWORD PTR [rip+0x24d0a]        # 0x140038f78
   14001426e:	cmp    BYTE PTR [rax],r14b
   140014271:	je     0x14001427a
   140014273:	inc    QWORD PTR [rip+0x24cfe]        # 0x140038f78
   14001427a:	cmp    edi,0x1f
   14001427d:	ja     0x14001433e
   140014283:	mov    r14,QWORD PTR [rbp+0x6f]
   140014287:	lea    rcx,[rbp-0x71]
   14001428b:	mov    rdx,r14
   14001428e:	call   0x140011a3c
   140014293:	lea    rdx,[rbp-0x71]
   140014297:	lea    rcx,[rsp+0x30]
   14001429c:	movaps xmm0,XMMWORD PTR [rbp-0x41]
   1400142a0:	movdqa XMMWORD PTR [rsp+0x30],xmm0
   1400142a6:	call   0x1400122b0
   1400142ab:	cmp    QWORD PTR [rbp-0x51],0x0
   1400142b0:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   1400142b5:	movdqa XMMWORD PTR [rbp-0x71],xmm0
   1400142ba:	je     0x1400142f1
   1400142bc:	lea    rcx,[rsp+0x30]
   1400142c1:	mov    dl,0x20
   1400142c3:	movdqa XMMWORD PTR [rsp+0x30],xmm0
   1400142c9:	call   0x1400122f0
   1400142ce:	lea    rdx,[rbp-0x51]
   1400142d2:	lea    rcx,[rsp+0x30]
   1400142d7:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   1400142dc:	movdqa XMMWORD PTR [rsp+0x30],xmm0
   1400142e2:	call   0x1400122b0
   1400142e7:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   1400142ec:	movdqa XMMWORD PTR [rbp-0x71],xmm0
   1400142f1:	test   r12,r12
   1400142f4:	je     0x14001432b
   1400142f6:	lea    rcx,[rsp+0x30]
   1400142fb:	mov    dl,0x20
   1400142fd:	movdqa XMMWORD PTR [rsp+0x30],xmm6
   140014303:	call   0x1400122f0
   140014308:	lea    rdx,[rbp-0x71]
   14001430c:	lea    rcx,[rsp+0x30]
   140014311:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   140014316:	movdqa XMMWORD PTR [rsp+0x30],xmm0
   14001431c:	call   0x1400122b0
   140014321:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   140014326:	movdqa XMMWORD PTR [rbp-0x71],xmm0
   14001432b:	xor    r12d,r12d
   14001432e:	test   dil,0x10
   140014332:	je     0x140014427
   140014338:	cmp    DWORD PTR [rbp+0x7f],r12d
   14001433c:	je     0x14001434b
   14001433e:	mov    edx,0x2
   140014343:	mov    rcx,rbx
   140014346:	jmp    0x14001468b
   14001434b:	cmp    BYTE PTR [r14],r12b
   14001434e:	je     0x1400143c5
   140014350:	lea    rdx,[rip+0x1a8ad]        # 0x14002ec04
   140014357:	lea    rcx,[rbp-0x61]
   14001435b:	call   0x140011a3c
   140014360:	lea    rdx,[rbp-0x71]
   140014364:	lea    rcx,[rsp+0x30]
   140014369:	movups xmm0,XMMWORD PTR [rax]
   14001436c:	movdqu XMMWORD PTR [rsp+0x30],xmm0
   140014372:	call   0x1400122b0
   140014377:	mov    rax,QWORD PTR [rip+0x24bfa]        # 0x140038f78
   14001437e:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   140014383:	lea    rcx,[rbp-0x61]
   140014387:	movdqa XMMWORD PTR [rbp-0x71],xmm0
   14001438c:	cmp    BYTE PTR [rax],r12b
   14001438f:	je     0x140014398
   140014391:	call   0x1400165c0
   140014396:	jmp    0x1400143a2
   140014398:	mov    edx,0x1
   14001439d:	call   0x140011a84
   1400143a2:	movups xmm0,XMMWORD PTR [rax]
   1400143a5:	lea    rdx,[rbp-0x71]
   1400143a9:	lea    rcx,[rsp+0x30]
   1400143ae:	movdqu XMMWORD PTR [rsp+0x30],xmm0
   1400143b4:	call   0x1400122b0
   1400143b9:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   1400143be:	movdqa XMMWORD PTR [rbp-0x71],xmm0
   1400143c3:	jmp    0x1400143f8
   1400143c5:	mov    rax,QWORD PTR [rip+0x24bac]        # 0x140038f78
   1400143cc:	cmp    BYTE PTR [rax],r12b
   1400143cf:	je     0x140014419
   1400143d1:	lea    rcx,[rbp-0x61]
   1400143d5:	call   0x1400165c0
   1400143da:	cmp    BYTE PTR [rbp-0x69],0x3
   1400143de:	je     0x1400143f8
   1400143e0:	cmp    BYTE PTR [rax+0x8],0x1
   1400143e4:	jle    0x1400143f8
   1400143e6:	mov    ecx,DWORD PTR [rbp-0x69]
   1400143e9:	movzx  eax,BYTE PTR [rax+0x8]
   1400143ed:	and    ecx,0xffffff00
   1400143f3:	or     ecx,eax
   1400143f5:	mov    DWORD PTR [rbp-0x69],ecx
   1400143f8:	mov    rax,QWORD PTR [rip+0x24b79]        # 0x140038f78
   1400143ff:	mov    cl,BYTE PTR [rax]
   140014401:	test   cl,cl
   140014403:	je     0x140014419
   140014405:	inc    rax
   140014408:	mov    QWORD PTR [rip+0x24b69],rax        # 0x140038f78
   14001440f:	cmp    cl,0x40
   140014412:	je     0x140014427
   140014414:	jmp    0x14001433e
   140014419:	lea    rcx,[rbp-0x71]
   14001441d:	mov    edx,0x1
   140014422:	call   0x140012498
   140014427:	mov    eax,DWORD PTR [rip+0x24b67]        # 0x140038f94
   14001442d:	shr    eax,1
   14001442f:	not    eax
   140014431:	test   al,0x1
   140014433:	mov    eax,edi
   140014435:	je     0x140014474
   140014437:	and    eax,0xc
   14001443a:	cmp    al,0xc
   14001443c:	jne    0x1400144a2
   14001443e:	cmp    DWORD PTR [rbp+0x7f],r12d
   140014442:	jne    0x14001433e
   140014448:	lea    rcx,[rbp-0x61]
   14001444c:	call   0x1400139d4
   140014451:	lea    rdx,[rbp-0x71]
   140014455:	lea    rcx,[rsp+0x30]
   14001445a:	movups xmm0,XMMWORD PTR [rax]
   14001445d:	movdqu XMMWORD PTR [rsp+0x30],xmm0
   140014463:	call   0x1400122b0
   140014468:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   14001446d:	movdqa XMMWORD PTR [rbp-0x71],xmm0
   140014472:	jmp    0x1400144a2
   140014474:	and    eax,0xc
   140014477:	cmp    al,0xc
   140014479:	jne    0x1400144a2
   14001447b:	lea    rcx,[rbp-0x61]
   14001447f:	call   0x1400139d4
   140014484:	cmp    BYTE PTR [rbp-0x69],0x3
   140014488:	je     0x1400144a2
   14001448a:	cmp    BYTE PTR [rax+0x8],0x1
   14001448e:	jle    0x1400144a2
   140014490:	mov    ecx,DWORD PTR [rbp-0x69]
   140014493:	movzx  eax,BYTE PTR [rax+0x8]
   140014497:	and    ecx,0xffffff00
   14001449d:	or     ecx,eax
   14001449f:	mov    DWORD PTR [rbp-0x69],ecx
   1400144a2:	test   dil,0x2
   1400144a6:	je     0x1400144d9
   1400144a8:	lea    rdx,[rip+0x1aab9]        # 0x14002ef68
   1400144af:	lea    rcx,[rbp-0x61]
   1400144b3:	call   0x140011a3c
   1400144b8:	lea    rdx,[rbp-0x71]
   1400144bc:	lea    rcx,[rsp+0x30]
   1400144c1:	movups xmm0,XMMWORD PTR [rax]
   1400144c4:	movdqu XMMWORD PTR [rsp+0x30],xmm0
   1400144ca:	call   0x1400122b0
   1400144cf:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   1400144d4:	movdqa XMMWORD PTR [rbp-0x71],xmm0
   1400144d9:	test   dil,0x1
   1400144dd:	je     0x140014510
   1400144df:	lea    rdx,[rip+0x1aa8e]        # 0x14002ef74
   1400144e6:	lea    rcx,[rbp-0x61]
   1400144ea:	call   0x140011a3c
   1400144ef:	lea    rdx,[rbp-0x71]
   1400144f3:	lea    rcx,[rsp+0x30]
   1400144f8:	movups xmm0,XMMWORD PTR [rax]
   1400144fb:	movdqu XMMWORD PTR [rsp+0x30],xmm0
   140014501:	call   0x1400122b0
   140014506:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   14001450b:	movdqa XMMWORD PTR [rbp-0x71],xmm0
   140014510:	mov    edi,0x100
   140014515:	cmp    DWORD PTR [rbp+0x7f],r12d
   140014519:	jne    0x1400145cd
   14001451f:	cmp    QWORD PTR [rsi],r12
   140014522:	je     0x140014599
   140014524:	test   DWORD PTR [rsi+0x8],edi
   140014527:	jne    0x140014576
   140014529:	cmp    QWORD PTR [r15],r12
   14001452c:	je     0x140014576
   14001452e:	lea    rcx,[rbp-0x61]
   140014532:	mov    dl,0x20
   140014534:	call   0x14001197c
   140014539:	lea    rcx,[rsp+0x30]
   14001453e:	mov    rdx,r15
   140014541:	movups xmm0,XMMWORD PTR [rax]
   140014544:	movdqu XMMWORD PTR [rsp+0x30],xmm0
   14001454a:	call   0x1400122b0
   14001454f:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   140014554:	lea    rcx,[rsp+0x30]
   140014559:	mov    dl,0x20
   14001455b:	movdqa XMMWORD PTR [rsp+0x30],xmm0
   140014561:	call   0x1400122f0
   140014566:	mov    rdx,rsi
   140014569:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   14001456e:	movdqa XMMWORD PTR [rsp+0x30],xmm0
   140014574:	jmp    0x1400145b5
   140014576:	test   DWORD PTR [rsi+0x8],0x800
   14001457d:	je     0x140014589
   14001457f:	movups xmm0,XMMWORD PTR [rsi]
   140014582:	movdqu XMMWORD PTR [rbp-0x71],xmm0
   140014587:	jmp    0x1400145cd
   140014589:	lea    rcx,[rbp-0x61]
   14001458d:	mov    dl,0x20
   14001458f:	call   0x14001197c
   140014594:	mov    rdx,rsi
   140014597:	jmp    0x1400145ac
   140014599:	cmp    QWORD PTR [r15],r12
   14001459c:	je     0x1400145cd
   14001459e:	lea    rcx,[rbp-0x61]
   1400145a2:	mov    dl,0x20
   1400145a4:	call   0x14001197c
   1400145a9:	mov    rdx,r15
   1400145ac:	movups xmm0,XMMWORD PTR [rax]
   1400145af:	movdqu XMMWORD PTR [rsp+0x30],xmm0
   1400145b5:	lea    rcx,[rsp+0x30]
   1400145ba:	call   0x1400122b0
   1400145bf:	lea    rdx,[rsp+0x30]
   1400145c4:	lea    rcx,[rbp-0x71]
   1400145c8:	call   0x1400122b0
   1400145cd:	or     DWORD PTR [rbp-0x69],edi
   1400145d0:	cmp    BYTE PTR [rsp+0x20],r12b
   1400145d5:	je     0x1400145dc
   1400145d7:	bts    DWORD PTR [rbp-0x69],0xd
   1400145dc:	movaps xmm0,XMMWORD PTR [rbp-0x71]
   1400145e0:	jmp    0x140014038
   1400145e5:	movups xmm0,XMMWORD PTR [rbp-0x61]
   1400145e9:	jmp    0x140014038
   1400145ee:	cmp    DWORD PTR [rbp+0x7f],r14d
   1400145f2:	jne    0x140014686
   1400145f8:	cmp    QWORD PTR [rsi],r14
   1400145fb:	je     0x14001466b
   1400145fd:	mov    edi,0x100
   140014602:	test   DWORD PTR [rsi+0x8],edi
   140014605:	jne    0x140014658
   140014607:	cmp    QWORD PTR [r9],r14
   14001460a:	je     0x140014658
   14001460c:	lea    rcx,[rsp+0x30]
   140014611:	mov    edx,0x1
   140014616:	call   0x140011a84
   14001461b:	lea    rcx,[rbp-0x61]
   14001461f:	mov    rdx,r15
   140014622:	movups xmm0,XMMWORD PTR [rax]
   140014625:	movdqu XMMWORD PTR [rbp-0x61],xmm0
   14001462a:	call   0x1400122b0
   14001462f:	movaps xmm0,XMMWORD PTR [rbp-0x61]
   140014633:	lea    rcx,[rbp-0x61]
   140014637:	mov    dl,0x20
   140014639:	movdqa XMMWORD PTR [rbp-0x61],xmm0
   14001463e:	call   0x1400122f0
   140014643:	movaps xmm0,XMMWORD PTR [rbp-0x61]
   140014647:	mov    rdx,rsi
   14001464a:	mov    rcx,rbx
   14001464d:	movdqu XMMWORD PTR [rbx],xmm0
   140014651:	call   0x1400122b0
   140014656:	jmp    0x140014690
   140014658:	lea    rcx,[rbp-0x61]
   14001465c:	mov    edx,0x1
   140014661:	call   0x140011a84
   140014666:	movups xmm0,XMMWORD PTR [rax]
   140014669:	jmp    0x140014647
   14001466b:	cmp    QWORD PTR [r9],r14
   14001466e:	je     0x140014686
   140014670:	lea    rcx,[rbp-0x61]
   140014674:	mov    edx,0x1
   140014679:	call   0x140011a84
   14001467e:	mov    rdx,r15
   140014681:	movups xmm0,XMMWORD PTR [rax]
   140014684:	jmp    0x14001464a
   140014686:	mov    edx,0x1
   14001468b:	call   0x140011a84
   140014690:	lea    r11,[rsp+0xe0]
   140014698:	mov    rax,rbx
   14001469b:	mov    rbx,QWORD PTR [r11+0x30]
   14001469f:	mov    rsi,QWORD PTR [r11+0x38]
   1400146a3:	movaps xmm6,XMMWORD PTR [r11-0x10]
   1400146a8:	mov    rsp,r11
   1400146ab:	pop    r15
   1400146ad:	pop    r14
   1400146af:	pop    r12
   1400146b1:	pop    rdi
   1400146b2:	pop    rbp
   1400146b3:	ret    
   1400146b4:	mov    r11,rsp
   1400146b7:	push   rbx
   1400146b8:	sub    rsp,0x50
   1400146bc:	mov    rbx,rcx
   1400146bf:	xor    ecx,ecx
   1400146c1:	mov    eax,0xffff0000
   1400146c6:	mov    QWORD PTR [r11-0x28],rcx
   1400146ca:	and    DWORD PTR [rsp+0x38],eax
   1400146ce:	mov    QWORD PTR [r11-0x18],rcx
   1400146d2:	and    DWORD PTR [rsp+0x48],eax
   1400146d6:	mov    DWORD PTR [rsp+0x20],ecx
   1400146da:	lea    r9,[r11-0x28]
   1400146de:	lea    r8,[rip+0x1636b]        # 0x14002aa50
   1400146e5:	lea    rdx,[r11-0x18]
   1400146e9:	mov    rcx,rbx
   1400146ec:	call   0x140013fc0
   1400146f1:	mov    rax,rbx
   1400146f4:	add    rsp,0x50
   1400146f8:	pop    rbx
   1400146f9:	ret    
   1400146fa:	int3   
   1400146fb:	int3   
   1400146fc:	mov    QWORD PTR [rsp+0x8],rbx
   140014701:	push   rbp
   140014702:	mov    rbp,rsp
   140014705:	sub    rsp,0x60
   140014709:	mov    rbx,rcx
   14001470c:	lea    rcx,[rbp-0x30]
   140014710:	call   0x1400119b4
   140014715:	mov    rax,QWORD PTR [rip+0x2485c]        # 0x140038f78
   14001471c:	xor    ecx,ecx
   14001471e:	cmp    BYTE PTR [rax],cl
   140014720:	je     0x1400147af
   140014726:	cmp    BYTE PTR [rax],0x3f
   140014729:	je     0x140014774
   14001472b:	cmp    BYTE PTR [rax],0x58
   14001472e:	je     0x140014741
   140014730:	lea    rdx,[rbp-0x30]
   140014734:	mov    rcx,rbx
   140014737:	call   0x140015ff8
   14001473c:	jmp    0x1400147d0
   140014741:	inc    rax
   140014744:	mov    QWORD PTR [rip+0x2482d],rax        # 0x140038f78
   14001474b:	cmp    QWORD PTR [rbp-0x30],rcx
   14001474f:	jne    0x140014762
   140014751:	lea    rdx,[rip+0x1a520]        # 0x14002ec78
   140014758:	mov    rcx,rbx
   14001475b:	call   0x140011a3c
   140014760:	jmp    0x1400147d0
   140014762:	lea    rdx,[rip+0x1a69b]        # 0x14002ee04
   140014769:	lea    rcx,[rbp-0x20]
   14001476d:	call   0x140011a3c
   140014772:	jmp    0x1400147bd
   140014774:	and    DWORD PTR [rbp-0x18],0xffff0000
   14001477b:	mov    QWORD PTR [rbp-0x20],rcx
   14001477f:	mov    DWORD PTR [rsp+0x20],ecx
   140014783:	inc    rax
   140014786:	lea    rcx,[rbp-0x10]
   14001478a:	lea    r9,[rbp-0x20]
   14001478e:	lea    r8,[rip+0x162bb]        # 0x14002aa50
   140014795:	lea    rdx,[rbp-0x30]
   140014799:	mov    QWORD PTR [rip+0x247d8],rax        # 0x140038f78
   1400147a0:	call   0x140013fc0
   1400147a5:	movups xmm0,XMMWORD PTR [rax]
   1400147a8:	movdqu XMMWORD PTR [rbp-0x30],xmm0
   1400147ad:	jmp    0x140014730
   1400147af:	lea    rcx,[rbp-0x20]
   1400147b3:	mov    edx,0x1
   1400147b8:	call   0x140011a84
   1400147bd:	movups xmm0,XMMWORD PTR [rax]
   1400147c0:	lea    rdx,[rbp-0x30]
   1400147c4:	mov    rcx,rbx
   1400147c7:	movdqu XMMWORD PTR [rbx],xmm0
   1400147cb:	call   0x1400122b0
   1400147d0:	mov    rax,rbx
   1400147d3:	mov    rbx,QWORD PTR [rsp+0x70]
   1400147d8:	add    rsp,0x60
   1400147dc:	pop    rbp
   1400147dd:	ret    
   1400147de:	int3   
   1400147df:	int3   
   1400147e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400147e5:	mov    QWORD PTR [rsp+0x20],rsi
   1400147ea:	push   rbp
   1400147eb:	mov    rbp,rsp
   1400147ee:	sub    rsp,0x50
   1400147f2:	mov    eax,DWORD PTR [rip+0x2479c]        # 0x140038f94
   1400147f8:	mov    rbx,rcx
   1400147fb:	bt     eax,0xd
   1400147ff:	jae    0x14001482b
   140014801:	btr    eax,0xd
   140014805:	lea    rcx,[rbp-0x10]
   140014809:	xor    edx,edx
   14001480b:	mov    DWORD PTR [rip+0x24783],eax        # 0x140038f94
   140014811:	call   0x1400146fc
   140014816:	bts    DWORD PTR [rip+0x24776],0xd        # 0x140038f94
   14001481e:	movups xmm0,XMMWORD PTR [rbp-0x10]
   140014822:	movdqu XMMWORD PTR [rbx],xmm0
   140014826:	jmp    0x140014a3f
   14001482b:	mov    rax,QWORD PTR [rip+0x24746]        # 0x140038f78
   140014832:	mov    dl,0x3f
   140014834:	mov    cl,BYTE PTR [rax]
   140014836:	cmp    cl,dl
   140014838:	jne    0x140014a29
   14001483e:	inc    rax
   140014841:	mov    QWORD PTR [rip+0x24730],rax        # 0x140038f78
   140014848:	cmp    BYTE PTR [rax],dl
   14001484a:	jne    0x14001489b
   14001484c:	inc    rax
   14001484f:	cmp    BYTE PTR [rax],dl
   140014851:	jne    0x140014876
   140014853:	lea    rcx,[rbp-0x10]
   140014857:	call   0x1400147e0
   14001485c:	mov    rax,QWORD PTR [rip+0x24715]        # 0x140038f78
   140014863:	jmp    0x14001486f
   140014865:	inc    rax
   140014868:	mov    QWORD PTR [rip+0x24709],rax        # 0x140038f78
   14001486f:	cmp    BYTE PTR [rax],0x0
   140014872:	jne    0x140014865
   140014874:	jmp    0x14001481e
   140014876:	cmp    BYTE PTR [rax],0x24
   140014879:	lea    rcx,[rbp-0x30]
   14001487d:	jne    0x140014888
   14001487f:	mov    dl,0x1
   140014881:	call   0x1400175c0
   140014886:	jmp    0x1400148a9
   140014888:	xor    r8d,r8d
   14001488b:	xor    edx,edx
   14001488d:	mov    QWORD PTR [rip+0x246e4],rax        # 0x140038f78
   140014894:	call   0x1400158dc
   140014899:	jmp    0x1400148a9
   14001489b:	lea    rcx,[rbp-0x30]
   14001489f:	xor    r8d,r8d
   1400148a2:	mov    dl,0x1
   1400148a4:	call   0x14001800c
   1400148a9:	cmp    QWORD PTR [rbp-0x30],0x0
   1400148ae:	mov    esi,DWORD PTR [rbp-0x28]
   1400148b1:	je     0x1400148c2
   1400148b3:	bt     esi,0x9
   1400148b7:	jae    0x1400148c2
   1400148b9:	mov    DWORD PTR [rbp+0x20],0x1
   1400148c0:	jmp    0x1400148c6
   1400148c2:	and    DWORD PTR [rbp+0x20],0x0
   1400148c6:	mov    ecx,esi
   1400148c8:	shr    ecx,0xf
   1400148cb:	and    ecx,0x1
   1400148ce:	cmp    BYTE PTR [rbp-0x28],0x1
   1400148d2:	mov    DWORD PTR [rbp+0x18],ecx
   1400148d5:	jle    0x1400148e0
   1400148d7:	movaps xmm0,XMMWORD PTR [rbp-0x30]
   1400148db:	jmp    0x140014822
   1400148e0:	mov    rax,QWORD PTR [rip+0x24691]        # 0x140038f78
   1400148e7:	test   BYTE PTR [rax],0xbf
   1400148ea:	je     0x140014990
   1400148f0:	lea    rcx,[rbp-0x20]
   1400148f4:	call   0x1400165c0
   1400148f9:	cmp    QWORD PTR [rbp-0x20],0x0
   1400148fe:	je     0x14001498d
   140014904:	cmp    BYTE PTR [rip+0x2468d],0x0        # 0x140038f98
   14001490b:	lea    rcx,[rbp-0x10]
   14001490f:	je     0x140014956
   140014911:	movaps xmm0,XMMWORD PTR [rbp-0x30]
   140014915:	lea    rdx,[rbp-0x20]
   140014919:	mov    BYTE PTR [rip+0x24678],0x0        # 0x140038f98
   140014920:	movdqa XMMWORD PTR [rbp-0x10],xmm0
   140014925:	call   0x1400122b0
   14001492a:	mov    rax,QWORD PTR [rip+0x24647]        # 0x140038f78
   140014931:	movaps xmm0,XMMWORD PTR [rbp-0x10]
   140014935:	cmp    BYTE PTR [rax],0x40
   140014938:	movdqa XMMWORD PTR [rbp-0x30],xmm0
   14001493d:	je     0x14001498a
   14001493f:	lea    rcx,[rbp-0x10]
   140014943:	call   0x1400165c0
   140014948:	lea    rcx,[rbp-0x10]
   14001494c:	movups xmm0,XMMWORD PTR [rax]
   14001494f:	movdqu XMMWORD PTR [rbp-0x10],xmm0
   140014954:	jmp    0x14001495f
   140014956:	movaps xmm0,XMMWORD PTR [rbp-0x20]
   14001495a:	movdqa XMMWORD PTR [rbp-0x10],xmm0
   14001495f:	lea    rdx,[rip+0x1a29e]        # 0x14002ec04
   140014966:	call   0x14001240c
   14001496b:	lea    rdx,[rbp-0x30]
   14001496f:	lea    rcx,[rbp-0x10]
   140014973:	movaps xmm0,XMMWORD PTR [rbp-0x10]
   140014977:	movdqa XMMWORD PTR [rbp-0x10],xmm0
   14001497c:	call   0x1400122b0
   140014981:	movaps xmm0,XMMWORD PTR [rbp-0x10]
   140014985:	movdqa XMMWORD PTR [rbp-0x30],xmm0
   14001498a:	mov    esi,DWORD PTR [rbp-0x28]
   14001498d:	mov    ecx,DWORD PTR [rbp+0x18]
   140014990:	mov    edx,DWORD PTR [rbp+0x20]
   140014993:	test   edx,edx
   140014995:	je     0x1400149a5
   140014997:	cmp    QWORD PTR [rbp-0x30],0x0
   14001499c:	je     0x1400149a5
   14001499e:	bts    esi,0x9
   1400149a2:	mov    DWORD PTR [rbp-0x28],esi
   1400149a5:	mov    r8d,0x8000
   1400149ab:	test   ecx,ecx
   1400149ad:	je     0x1400149b5
   1400149af:	or     esi,r8d
   1400149b2:	mov    DWORD PTR [rbp-0x28],esi
   1400149b5:	cmp    QWORD PTR [rbp-0x30],0x0
   1400149ba:	je     0x1400148d7
   1400149c0:	mov    ecx,0x1000
   1400149c5:	test   ecx,esi
   1400149c7:	jne    0x1400148d7
   1400149cd:	mov    rax,QWORD PTR [rip+0x245a4]        # 0x140038f78
   1400149d4:	cmp    BYTE PTR [rax],0x0
   1400149d7:	je     0x1400149ec
   1400149d9:	cmp    BYTE PTR [rax],0x40
   1400149dc:	je     0x1400149e5
   1400149de:	mov    edx,0x2
   1400149e3:	jmp    0x140014a37
   1400149e5:	inc    QWORD PTR [rip+0x2458c]        # 0x140038f78
   1400149ec:	test   DWORD PTR [rip+0x245a2],ecx        # 0x140038f94
   1400149f2:	je     0x140014a1b
   1400149f4:	test   edx,edx
   1400149f6:	jne    0x140014a1b
   1400149f8:	test   r8d,esi
   1400149fb:	jne    0x140014a1b
   1400149fd:	and    QWORD PTR [rbp-0x20],0x0
   140014a02:	and    DWORD PTR [rbp-0x18],0xffff0000
   140014a09:	lea    rdx,[rbp-0x20]
   140014a0d:	lea    rcx,[rbp-0x10]
   140014a11:	call   0x14001262c
   140014a16:	jmp    0x1400148d7
   140014a1b:	lea    rdx,[rbp-0x30]
   140014a1f:	mov    rcx,rbx
   140014a22:	call   0x14001262c
   140014a27:	jmp    0x140014a3f
   140014a29:	mov    edx,0x2
   140014a2e:	test   cl,cl
   140014a30:	jne    0x140014a37
   140014a32:	mov    edx,0x1
   140014a37:	mov    rcx,rbx
   140014a3a:	call   0x140011a84
   140014a3f:	mov    rsi,QWORD PTR [rsp+0x78]
   140014a44:	mov    rax,rbx
   140014a47:	mov    rbx,QWORD PTR [rsp+0x60]
   140014a4c:	add    rsp,0x50
   140014a50:	pop    rbp
   140014a51:	ret    
   140014a52:	int3   
   140014a53:	int3   
   140014a54:	mov    QWORD PTR [rsp+0x8],rbx
   140014a59:	mov    QWORD PTR [rsp+0x10],rsi
   140014a5e:	mov    QWORD PTR [rsp+0x18],rdi
   140014a63:	push   rbp
   140014a64:	mov    rbp,rsp
   140014a67:	sub    rsp,0x60
   140014a6b:	mov    r8,QWORD PTR [rip+0x24506]        # 0x140038f78
   140014a72:	xor    esi,esi
   140014a74:	mov    r9b,dl
   140014a77:	cmp    BYTE PTR [r8],0x51
   140014a7b:	mov    rdi,rcx
   140014a7e:	lea    r10d,[rsi+0x1]
   140014a82:	jne    0x140014a95
   140014a84:	add    r8,r10
   140014a87:	lea    rsi,[rip+0x1a1ca]        # 0x14002ec58
   140014a8e:	mov    QWORD PTR [rip+0x244e3],r8        # 0x140038f78
   140014a95:	mov    cl,BYTE PTR [r8]
   140014a98:	test   cl,cl
   140014a9a:	jne    0x140014aac
   140014a9c:	mov    edx,r10d
   140014a9f:	mov    rcx,rdi
   140014aa2:	call   0x140011a84
   140014aa7:	jmp    0x140014b97
   140014aac:	lea    eax,[rcx-0x30]
   140014aaf:	cmp    al,0x9
   140014ab1:	ja     0x140014add
   140014ab3:	add    r8,r10
   140014ab6:	movsx  eax,cl
   140014ab9:	sub    eax,0x2f
   140014abc:	mov    QWORD PTR [rip+0x244b5],r8        # 0x140038f78
   140014ac3:	movsxd rdx,eax
   140014ac6:	test   rsi,rsi
   140014ac9:	je     0x140014ad4
   140014acb:	lea    rcx,[rbp-0x30]
   140014acf:	jmp    0x140014b59
   140014ad4:	lea    rcx,[rbp-0x10]
   140014ad8:	jmp    0x140014b8b
   140014add:	xor    edx,edx
   140014adf:	mov    r11b,0x40
   140014ae2:	jmp    0x140014b0f
   140014ae4:	test   cl,cl
   140014ae6:	je     0x140014a9c
   140014ae8:	lea    eax,[rcx-0x41]
   140014aeb:	cmp    al,0xf
   140014aed:	ja     0x140014b3b
   140014aef:	movsx  eax,cl
   140014af2:	shl    rdx,0x4
   140014af6:	sub    eax,0x41
   140014af9:	movsxd rcx,eax
   140014afc:	add    rcx,rdx
   140014aff:	add    r8,r10
   140014b02:	mov    QWORD PTR [rip+0x2446f],r8        # 0x140038f78
   140014b09:	mov    rdx,rcx
   140014b0c:	mov    cl,BYTE PTR [r8]
   140014b0f:	cmp    cl,r11b
   140014b12:	jne    0x140014ae4
   140014b14:	mov    al,BYTE PTR [r8]
   140014b17:	add    r8,r10
   140014b1a:	mov    QWORD PTR [rip+0x24457],r8        # 0x140038f78
   140014b21:	cmp    al,r11b
   140014b24:	jne    0x140014b3b
   140014b26:	test   r9b,r9b
   140014b29:	je     0x140014b50
   140014b2b:	test   rsi,rsi
   140014b2e:	je     0x140014b45
   140014b30:	lea    rcx,[rbp-0x10]
   140014b34:	call   0x140011ae8
   140014b39:	jmp    0x140014b5e
   140014b3b:	mov    edx,0x2
   140014b40:	jmp    0x140014a9f
   140014b45:	lea    rcx,[rbp-0x30]
   140014b49:	call   0x140011ae8
   140014b4e:	jmp    0x140014b90
   140014b50:	test   rsi,rsi
   140014b53:	je     0x140014b87
   140014b55:	lea    rcx,[rbp-0x10]
   140014b59:	call   0x140011b94
   140014b5e:	lea    rcx,[rbp-0x20]
   140014b62:	mov    rdx,rsi
   140014b65:	mov    rbx,rax
   140014b68:	call   0x140011a3c
   140014b6d:	lea    rcx,[rbp-0x40]
   140014b71:	mov    rdx,rbx
   140014b74:	movups xmm0,XMMWORD PTR [rax]
   140014b77:	movdqu XMMWORD PTR [rbp-0x40],xmm0
   140014b7c:	call   0x1400122b0
   140014b81:	lea    rax,[rbp-0x40]
   140014b85:	jmp    0x140014b90
   140014b87:	lea    rcx,[rbp-0x30]
   140014b8b:	call   0x140011b94
   140014b90:	movups xmm0,XMMWORD PTR [rax]
   140014b93:	movdqu XMMWORD PTR [rdi],xmm0
   140014b97:	lea    r11,[rsp+0x60]
   140014b9c:	mov    rax,rdi
   140014b9f:	mov    rbx,QWORD PTR [r11+0x10]
   140014ba3:	mov    rsi,QWORD PTR [r11+0x18]
   140014ba7:	mov    rdi,QWORD PTR [r11+0x20]
   140014bab:	mov    rsp,r11
   140014bae:	pop    rbp
   140014baf:	ret    
   140014bb0:	rex push rbx
   140014bb2:	sub    rsp,0x20
   140014bb6:	mov    rbx,rcx
   140014bb9:	mov    rcx,QWORD PTR [rip+0x243b8]        # 0x140038f78
   140014bc0:	cmp    BYTE PTR [rcx],0x5f
   140014bc3:	jne    0x140014bfa
   140014bc5:	cmp    BYTE PTR [rcx+0x1],0x5f
   140014bc9:	jne    0x140014bfa
   140014bcb:	add    rcx,0x2
   140014bcf:	mov    QWORD PTR [rip+0x243a2],rcx        # 0x140038f78
   140014bd6:	movsx  eax,BYTE PTR [rcx]
   140014bd9:	inc    rcx
   140014bdc:	sub    eax,0x41
   140014bdf:	mov    QWORD PTR [rip+0x24392],rcx        # 0x140038f78
   140014be6:	cmp    eax,0x3
   140014be9:	jbe    0x140014bfa
   140014beb:	mov    edx,0x2
   140014bf0:	mov    rcx,rbx
   140014bf3:	call   0x140011a84
   140014bf8:	jmp    0x140014c09
   140014bfa:	and    QWORD PTR [rbx],0x0
   140014bfe:	mov    BYTE PTR [rbx+0x8],0x0
   140014c02:	and    DWORD PTR [rbx+0x8],0xffff00ff
   140014c09:	mov    rax,rbx
   140014c0c:	add    rsp,0x20
   140014c10:	pop    rbx
   140014c11:	ret    
   140014c12:	int3   
   140014c13:	int3   
   140014c14:	rex push rbx
   140014c16:	sub    rsp,0x20
   140014c1a:	mov    dl,0x1
   140014c1c:	mov    rbx,rcx
   140014c1f:	call   0x140014a54
   140014c24:	mov    rax,rbx
   140014c27:	add    rsp,0x20
   140014c2b:	pop    rbx
   140014c2c:	ret    
   140014c2d:	int3   
   140014c2e:	int3   
   140014c2f:	int3   
   140014c30:	mov    QWORD PTR [rsp+0x8],rbx
   140014c35:	mov    QWORD PTR [rsp+0x10],rsi
   140014c3a:	mov    QWORD PTR [rsp+0x18],rdi
   140014c3f:	push   rbp
   140014c40:	mov    rbp,rsp
   140014c43:	sub    rsp,0x60
   140014c47:	mov    eax,DWORD PTR [rip+0x24347]        # 0x140038f94
   140014c4d:	mov    rdi,rcx
   140014c50:	mov    r8d,eax
   140014c53:	shr    r8d,0xf
   140014c57:	not    r8d
   140014c5a:	and    r8d,0x1
   140014c5e:	je     0x140014c6d
   140014c60:	bt     eax,0xc
   140014c64:	jb     0x140014c6d
   140014c66:	mov    esi,0x1
   140014c6b:	jmp    0x140014c6f
   140014c6d:	xor    esi,esi
   140014c6f:	mov    rdx,QWORD PTR [rip+0x24302]        # 0x140038f78
   140014c76:	and    QWORD PTR [rbp-0x40],0x0
   140014c7b:	and    DWORD PTR [rbp-0x38],0xffff0000
   140014c82:	movsx  ecx,BYTE PTR [rdx]
   140014c85:	inc    rdx
   140014c88:	mov    QWORD PTR [rip+0x242e9],rdx        # 0x140038f78
   140014c8f:	test   ecx,ecx
   140014c91:	je     0x140014d5b
   140014c97:	sub    ecx,0x54
   140014c9a:	je     0x140014d12
   140014c9c:	dec    ecx
   140014c9e:	je     0x140014d09
   140014ca0:	dec    ecx
   140014ca2:	je     0x140014d00
   140014ca4:	dec    ecx
   140014ca6:	je     0x140014cc2
   140014ca8:	dec    ecx
   140014caa:	je     0x140014cb9
   140014cac:	dec    ecx
   140014cae:	jne    0x140014d22
   140014cb0:	lea    rdx,[rip+0x1a299]        # 0x14002ef50
   140014cb7:	jmp    0x140014d19
   140014cb9:	lea    rdx,[rip+0x1a280]        # 0x14002ef40
   140014cc0:	jmp    0x140014d19
   140014cc2:	lea    rcx,[rbp-0x20]
   140014cc6:	mov    esi,r8d
   140014cc9:	call   0x140014da8
   140014cce:	lea    rdx,[rip+0x1a28b]        # 0x14002ef60
   140014cd5:	lea    rcx,[rbp-0x10]
   140014cd9:	mov    rbx,rax
   140014cdc:	call   0x140011a3c
   140014ce1:	lea    rcx,[rbp-0x30]
   140014ce5:	mov    rdx,rbx
   140014ce8:	movups xmm0,XMMWORD PTR [rax]
   140014ceb:	movdqu XMMWORD PTR [rbp-0x30],xmm0
   140014cf0:	call   0x1400122b0
   140014cf5:	movaps xmm0,XMMWORD PTR [rbp-0x30]
   140014cf9:	movdqa XMMWORD PTR [rbp-0x40],xmm0
   140014cfe:	jmp    0x140014d22
   140014d00:	lea    rdx,[rip+0x1a231]        # 0x14002ef38
   140014d07:	jmp    0x140014d19
   140014d09:	lea    rdx,[rip+0x1a220]        # 0x14002ef30
   140014d10:	jmp    0x140014d19
   140014d12:	lea    rdx,[rip+0x1a20f]        # 0x14002ef28
   140014d19:	lea    rcx,[rbp-0x40]
   140014d1d:	call   0x140011e90
   140014d22:	and    QWORD PTR [rbp-0x30],0x0
   140014d27:	and    DWORD PTR [rbp-0x28],0xffff0000
   140014d2e:	test   esi,esi
   140014d30:	je     0x140014d3b
   140014d32:	movaps xmm0,XMMWORD PTR [rbp-0x40]
   140014d36:	movdqa XMMWORD PTR [rbp-0x30],xmm0
   140014d3b:	lea    rcx,[rbp-0x40]
   140014d3f:	call   0x140016ab4
   140014d44:	lea    rdx,[rbp-0x40]
   140014d48:	lea    rcx,[rbp-0x30]
   140014d4c:	call   0x1400122b0
   140014d51:	movaps xmm0,XMMWORD PTR [rbp-0x30]
   140014d55:	movdqu XMMWORD PTR [rdi],xmm0
   140014d59:	jmp    0x140014d74
   140014d5b:	dec    rdx
   140014d5e:	mov    rcx,rdi
   140014d61:	mov    QWORD PTR [rip+0x24210],rdx        # 0x140038f78
   140014d68:	lea    rdx,[rip+0x1a1aa]        # 0x14002ef19
   140014d6f:	call   0x140011a3c
   140014d74:	lea    r11,[rsp+0x60]
   140014d79:	mov    rax,rdi
   140014d7c:	mov    rbx,QWORD PTR [r11+0x10]
   140014d80:	mov    rsi,QWORD PTR [r11+0x18]
   140014d84:	mov    rdi,QWORD PTR [r11+0x20]
   140014d88:	mov    rsp,r11
   140014d8b:	pop    rbp
   140014d8c:	ret    
   140014d8d:	int3   
   140014d8e:	int3   
   140014d8f:	int3   
   140014d90:	rex push rbx
   140014d92:	sub    rsp,0x20
   140014d96:	mov    rbx,rcx
   140014d99:	call   0x140016ab4
   140014d9e:	mov    rax,rbx
   140014da1:	add    rsp,0x20
   140014da5:	pop    rbx
   140014da6:	ret    
   140014da7:	int3   
   140014da8:	mov    QWORD PTR [rsp+0x8],rbx
   140014dad:	push   rbp
   140014dae:	mov    rbp,rsp
   140014db1:	sub    rsp,0x50
   140014db5:	mov    rax,QWORD PTR [rip+0x241bc]        # 0x140038f78
   140014dbc:	and    QWORD PTR [rbp-0x30],0x0
   140014dc1:	and    DWORD PTR [rbp-0x28],0xffff0000
   140014dc8:	cmp    BYTE PTR [rax],0x0
   140014dcb:	mov    rbx,rcx
   140014dce:	je     0x140014e76
   140014dd4:	mov    al,BYTE PTR [rax]
   140014dd6:	cmp    al,0x30
   140014dd8:	jl     0x140014e6f
   140014dde:	cmp    al,0x31
   140014de0:	jle    0x140014e0f
   140014de2:	cmp    al,0x33
   140014de4:	jle    0x140014e06
   140014de6:	cmp    al,0x34
   140014de8:	je     0x140014e1f
   140014dea:	cmp    al,0x35
   140014dec:	je     0x140014dfd
   140014dee:	sub    al,0x36
   140014df0:	cmp    al,0x1
   140014df2:	ja     0x140014e6f
   140014df4:	lea    rdx,[rip+0x19ff5]        # 0x14002edf0
   140014dfb:	jmp    0x140014e16
   140014dfd:	lea    rdx,[rip+0x19fe4]        # 0x14002ede8
   140014e04:	jmp    0x140014e16
   140014e06:	lea    rdx,[rip+0x19fd3]        # 0x14002ede0
   140014e0d:	jmp    0x140014e16
   140014e0f:	lea    rdx,[rip+0x19fc2]        # 0x14002edd8
   140014e16:	lea    rcx,[rbp-0x30]
   140014e1a:	call   0x140011e90
   140014e1f:	mov    rax,QWORD PTR [rip+0x24152]        # 0x140038f78
   140014e26:	movsx  eax,BYTE PTR [rax]
   140014e29:	inc    QWORD PTR [rip+0x24148]        # 0x140038f78
   140014e30:	add    eax,0xffffffcf
   140014e33:	test   eax,0xfffffff9
   140014e38:	jne    0x140014e65
   140014e3a:	lea    rdx,[rip+0x19fb7]        # 0x14002edf8
   140014e41:	lea    rcx,[rbp-0x10]
   140014e45:	call   0x140011a3c
   140014e4a:	lea    rdx,[rbp-0x30]
   140014e4e:	lea    rcx,[rbp-0x20]
   140014e52:	movups xmm0,XMMWORD PTR [rax]
   140014e55:	movdqu XMMWORD PTR [rbp-0x20],xmm0
   140014e5a:	call   0x1400122b0
   140014e5f:	movaps xmm0,XMMWORD PTR [rbp-0x20]
   140014e63:	jmp    0x140014e69
   140014e65:	movaps xmm0,XMMWORD PTR [rbp-0x30]
   140014e69:	movdqu XMMWORD PTR [rbx],xmm0
   140014e6d:	jmp    0x140014e80
   140014e6f:	mov    edx,0x2
   140014e74:	jmp    0x140014e7b
   140014e76:	mov    edx,0x1
   140014e7b:	call   0x140011a84
   140014e80:	mov    rax,rbx
   140014e83:	mov    rbx,QWORD PTR [rsp+0x60]
   140014e88:	add    rsp,0x50
   140014e8c:	pop    rbp
   140014e8d:	ret    
   140014e8e:	int3   
   140014e8f:	int3   
   140014e90:	mov    QWORD PTR [rsp+0x8],rbx
   140014e95:	mov    QWORD PTR [rsp+0x10],rsi
   140014e9a:	mov    QWORD PTR [rsp+0x18],r14
   140014e9f:	push   rbp
   140014ea0:	mov    rbp,rsp
   140014ea3:	sub    rsp,0x60
   140014ea7:	mov    r10d,DWORD PTR [rbp-0x28]
   140014eab:	and    QWORD PTR [rbp-0x30],0x0
   140014eb0:	mov    rbx,rcx
   140014eb3:	mov    rcx,QWORD PTR [rip+0x240be]        # 0x140038f78
   140014eba:	mov    rsi,r8
   140014ebd:	and    r10d,0xffff0000
   140014ec4:	mov    r14d,0x1
   140014eca:	mov    r11d,r9d
   140014ecd:	mov    DWORD PTR [rbp-0x28],r10d
   140014ed1:	add    rcx,r14
   140014ed4:	mov    QWORD PTR [rip+0x2409d],rcx        # 0x140038f78
   140014edb:	movsx  r9d,BYTE PTR [rcx]
   140014edf:	mov    r8d,r9d
   140014ee2:	sub    r8d,0x41
   140014ee6:	je     0x140015072
   140014eec:	dec    r8d
   140014eef:	je     0x140015032
   140014ef5:	dec    r8d
   140014ef8:	je     0x140015026
   140014efe:	cmp    BYTE PTR [rcx],0x0
   140014f01:	je     0x14001501e
   140014f07:	mov    al,BYTE PTR [rcx+0x1]
   140014f0a:	test   al,al
   140014f0c:	je     0x14001501e
   140014f12:	test   r11d,r11d
   140014f15:	je     0x140014f29
   140014f17:	mov    edx,0x2
   140014f1c:	mov    rcx,rbx
   140014f1f:	call   0x140011a84
   140014f24:	jmp    0x1400150c2
   140014f29:	shl    r9d,0x4
   140014f2d:	add    rcx,0x2
   140014f31:	movsx  esi,al
   140014f34:	add    esi,0xfffffcd0
   140014f3a:	mov    QWORD PTR [rip+0x24037],rcx        # 0x140038f78
   140014f41:	add    esi,r9d
   140014f44:	cmp    esi,r14d
   140014f47:	jbe    0x140014f9a
   140014f49:	and    QWORD PTR [rbp-0x30],0x0
   140014f4e:	and    r10d,0xffffff00
   140014f55:	lea    rdx,[rbp-0x40]
   140014f59:	and    r10d,0xffff00ff
   140014f60:	lea    rcx,[rbp-0x30]
   140014f64:	mov    r8d,r14d
   140014f67:	mov    DWORD PTR [rbp-0x28],r10d
   140014f6b:	mov    BYTE PTR [rbp-0x40],0x2c
   140014f6f:	call   0x140013448
   140014f74:	lea    rcx,[rbp-0x10]
   140014f78:	mov    edx,esi
   140014f7a:	call   0x140011b94
   140014f7f:	lea    rcx,[rbp-0x20]
   140014f83:	movaps xmm0,XMMWORD PTR [rbp-0x30]
   140014f87:	mov    rdx,rax
   140014f8a:	movdqa XMMWORD PTR [rbp-0x20],xmm0
   140014f8f:	call   0x1400122b0
   140014f94:	movaps xmm0,XMMWORD PTR [rbp-0x20]
   140014f98:	jmp    0x140014f9e
   140014f9a:	movaps xmm0,XMMWORD PTR [rbp-0x30]
   140014f9e:	lea    rcx,[rbp-0x20]
   140014fa2:	mov    dl,0x3e
   140014fa4:	movdqa XMMWORD PTR [rbp-0x20],xmm0
   140014fa9:	call   0x1400122f0
   140014fae:	mov    rax,QWORD PTR [rip+0x23fc3]        # 0x140038f78
   140014fb5:	movaps xmm0,XMMWORD PTR [rbp-0x20]
   140014fb9:	cmp    BYTE PTR [rax],0x24
   140014fbc:	movdqa XMMWORD PTR [rbp-0x30],xmm0
   140014fc1:	jne    0x140014fcf
   140014fc3:	add    rax,r14
   140014fc6:	mov    QWORD PTR [rip+0x23fab],rax        # 0x140038f78
   140014fcd:	jmp    0x140014fef
   140014fcf:	lea    rcx,[rbp-0x20]
   140014fd3:	mov    dl,0x5e
   140014fd5:	movdqa XMMWORD PTR [rbp-0x20],xmm0
   140014fda:	call   0x1400122f0
   140014fdf:	mov    rax,QWORD PTR [rip+0x23f92]        # 0x140038f78
   140014fe6:	movaps xmm0,XMMWORD PTR [rbp-0x20]
   140014fea:	movdqa XMMWORD PTR [rbp-0x30],xmm0
   140014fef:	cmp    BYTE PTR [rax],0x0
   140014ff2:	je     0x140015000
   140014ff4:	add    rax,r14
   140014ff7:	mov    QWORD PTR [rip+0x23f7a],rax        # 0x140038f78
   140014ffe:	jmp    0x14001500c
   140015000:	lea    rcx,[rbp-0x30]
   140015004:	mov    edx,r14d
   140015007:	call   0x140012498
   14001500c:	bts    DWORD PTR [rbp-0x28],0xe
   140015011:	movaps xmm0,XMMWORD PTR [rbp-0x30]
   140015015:	movdqu XMMWORD PTR [rbx],xmm0
   140015019:	jmp    0x1400150c2
   14001501e:	mov    edx,r14d
   140015021:	jmp    0x140014f1c
   140015026:	lea    rax,[rip+0x196a3]        # 0x14002e6d0
   14001502d:	mov    QWORD PTR [rdx],rax
   140015030:	jmp    0x140015069
   140015032:	test   r11d,r11d
   140015035:	jne    0x140014f17
   14001503b:	and    QWORD PTR [rbp-0x30],0x0
   140015040:	and    r10d,0xffffff00
   140015047:	lea    rdx,[rbp-0x40]
   14001504b:	and    r10d,0xffff00ff
   140015052:	lea    rcx,[rbp-0x30]
   140015056:	mov    r8d,r14d
   140015059:	mov    BYTE PTR [rsi],r14b
   14001505c:	mov    BYTE PTR [rbp-0x40],0x3e
   140015060:	mov    DWORD PTR [rbp-0x28],r10d
   140015064:	call   0x140013448
   140015069:	add    QWORD PTR [rip+0x23f08],r14        # 0x140038f78
   140015070:	jmp    0x1400150b3
   140015072:	test   r11d,r11d
   140015075:	jne    0x1400150a9
   140015077:	mov    rax,QWORD PTR [rdx]
   14001507a:	cmp    BYTE PTR [rax],0x26
   14001507d:	jne    0x140015090
   14001507f:	lea    rax,[rip+0x1964a]        # 0x14002e6d0
   140015086:	mov    QWORD PTR [rdx],rax
   140015089:	mov    rcx,QWORD PTR [rip+0x23ee8]        # 0x140038f78
   140015090:	mov    rax,QWORD PTR [rdx]
   140015093:	cmp    BYTE PTR [rax],0x2a
   140015096:	jne    0x1400150a9
   140015098:	lea    rax,[rip+0x19651]        # 0x14002e6f0
   14001509f:	mov    QWORD PTR [rdx],rax
   1400150a2:	mov    rcx,QWORD PTR [rip+0x23ecf]        # 0x140038f78
   1400150a9:	add    rcx,r14
   1400150ac:	mov    QWORD PTR [rip+0x23ec5],rcx        # 0x140038f78
   1400150b3:	and    QWORD PTR [rbx],0x0
   1400150b7:	mov    BYTE PTR [rbx+0x8],0x0
   1400150bb:	and    DWORD PTR [rbx+0x8],0xffff00ff
   1400150c2:	lea    r11,[rsp+0x60]
   1400150c7:	mov    rax,rbx
   1400150ca:	mov    rbx,QWORD PTR [r11+0x10]
   1400150ce:	mov    rsi,QWORD PTR [r11+0x18]
   1400150d2:	mov    r14,QWORD PTR [r11+0x20]
   1400150d6:	mov    rsp,r11
   1400150d9:	pop    rbp
   1400150da:	ret    
   1400150db:	int3   
   1400150dc:	mov    QWORD PTR [rsp+0x8],rbx
   1400150e1:	mov    QWORD PTR [rsp+0x10],rsi
   1400150e6:	mov    QWORD PTR [rsp+0x18],rdi
   1400150eb:	push   rbp
   1400150ec:	mov    rbp,rsp
   1400150ef:	sub    rsp,0x60
   1400150f3:	xor    r8d,r8d
   1400150f6:	mov    rsi,rdx
   1400150f9:	mov    rdi,rcx
   1400150fc:	lea    edx,[r8+0x10]
   140015100:	lea    rcx,[rip+0x23e99]        # 0x140038fa0
   140015107:	call   0x1400157b8
   14001510c:	mov    rbx,rax
   14001510f:	test   rax,rax
   140015112:	je     0x140015125
   140015114:	and    QWORD PTR [rax],0x0
   140015118:	mov    BYTE PTR [rax+0x8],0x0
   14001511c:	and    DWORD PTR [rax+0x8],0xffff00ff
   140015123:	jmp    0x140015127
   140015125:	xor    ebx,ebx
   140015127:	mov    rdx,rbx
   14001512a:	mov    rcx,rdi
   14001512d:	call   0x1400146fc
   140015132:	and    QWORD PTR [rbp-0x30],0x0
   140015137:	and    QWORD PTR [rbp-0x20],0x0
   14001513c:	and    DWORD PTR [rsp+0x20],0x0
   140015141:	mov    eax,0xffff0000
   140015146:	lea    r9,[rbp-0x30]
   14001514a:	and    DWORD PTR [rbp-0x28],eax
   14001514d:	and    DWORD PTR [rbp-0x18],eax
   140015150:	lea    r8,[rip+0x158f9]        # 0x14002aa50
   140015157:	lea    rdx,[rbp-0x20]
   14001515b:	lea    rcx,[rbp-0x10]
   14001515f:	call   0x140013fc0
   140015164:	lea    rcx,[rbp-0x20]
   140015168:	mov    dl,0x20
   14001516a:	movaps xmm0,XMMWORD PTR [rbp-0x10]
   14001516e:	movdqa XMMWORD PTR [rbp-0x20],xmm0
   140015173:	call   0x1400122f0
   140015178:	lea    rcx,[rbp-0x20]
   14001517c:	mov    rdx,rsi
   14001517f:	movaps xmm0,XMMWORD PTR [rbp-0x20]
   140015183:	movdqa XMMWORD PTR [rbp-0x20],xmm0
   140015188:	call   0x1400122b0
   14001518d:	lea    r11,[rsp+0x60]
   140015192:	mov    rax,rdi
   140015195:	movaps xmm0,XMMWORD PTR [rbp-0x20]
   140015199:	movdqu XMMWORD PTR [rbx],xmm0
   14001519d:	mov    rbx,QWORD PTR [r11+0x10]
   1400151a1:	mov    rsi,QWORD PTR [r11+0x18]
   1400151a5:	mov    rdi,QWORD PTR [r11+0x20]
   1400151a9:	mov    rsp,r11
   1400151ac:	pop    rbp
   1400151ad:	ret    
   1400151ae:	int3   
   1400151af:	int3   
   1400151b0:	mov    rax,rsp
   1400151b3:	mov    QWORD PTR [rax+0x8],rbx
   1400151b7:	mov    QWORD PTR [rax+0x10],rsi
   1400151bb:	mov    QWORD PTR [rax+0x18],rdi
   1400151bf:	push   rbp
   1400151c0:	push   r12
   1400151c2:	push   r13
   1400151c4:	push   r14
   1400151c6:	push   r15
   1400151c8:	lea    rbp,[rax-0x5f]
   1400151cc:	sub    rsp,0x90
   1400151d3:	mov    rdi,rcx
   1400151d6:	mov    rcx,QWORD PTR [rip+0x23d9b]        # 0x140038f78
   1400151dd:	xor    ebx,ebx
   1400151df:	mov    r12,rdx
   1400151e2:	cmp    BYTE PTR [rcx],bl
   1400151e4:	jne    0x140015209
   1400151e6:	lea    edx,[rbx+0x1]
   1400151e9:	lea    rcx,[rbp+0x17]
   1400151ed:	call   0x140011a84
   1400151f2:	mov    rdx,r12
   1400151f5:	movups xmm0,XMMWORD PTR [rax]
   1400151f8:	mov    rcx,rdi
   1400151fb:	movdqu XMMWORD PTR [rdi],xmm0
   1400151ff:	call   0x1400122b0
   140015204:	jmp    0x140015692
   140015209:	mov    al,BYTE PTR [rcx]
   14001520b:	sub    al,0x36
   14001520d:	cmp    al,0x3
   14001520f:	jbe    0x140015220
   140015211:	cmp    BYTE PTR [rcx],0x5f
   140015214:	je     0x140015220
   140015216:	mov    edx,0x2
   14001521b:	jmp    0x14001568a
   140015220:	movsx  r14d,BYTE PTR [rcx]
   140015224:	mov    esi,0x1
   140015229:	or     edx,0xffffffff
   14001522c:	add    rcx,rsi
   14001522f:	sub    r14d,0x36
   140015233:	mov    QWORD PTR [rip+0x23d3e],rcx        # 0x140038f78
   14001523a:	cmp    r14d,0x29
   14001523e:	jne    0x140015268
   140015240:	cmp    BYTE PTR [rcx],bl
   140015242:	je     0x140015264
   140015244:	movsx  r14d,BYTE PTR [rcx]
   140015248:	add    rcx,rsi
   14001524b:	sub    r14d,0x3d
   14001524f:	mov    QWORD PTR [rip+0x23d22],rcx        # 0x140038f78
   140015256:	lea    eax,[r14-0x4]
   14001525a:	cmp    eax,0x3
   14001525d:	jbe    0x140015270
   14001525f:	mov    r14d,edx
   140015262:	jmp    0x140015270
   140015264:	mov    edx,esi
   140015266:	jmp    0x1400151e9
   140015268:	cmp    r14d,0x3
   14001526c:	cmova  r14d,edx
   140015270:	cmp    r14d,edx
   140015273:	je     0x140015216
   140015275:	mov    r15d,DWORD PTR [rbp-0x11]
   140015279:	movups xmm0,XMMWORD PTR [r12]
   14001527e:	mov    r13d,r14d
   140015281:	and    r15d,0xffff0000
   140015288:	mov    QWORD PTR [rbp-0x19],rbx
   14001528c:	mov    DWORD PTR [rbp-0x11],r15d
   140015290:	movdqu XMMWORD PTR [rbp-0x29],xmm0
   140015295:	and    r13d,0x2
   140015299:	je     0x1400153ad
   14001529f:	lea    rdx,[rip+0x1995e]        # 0x14002ec04
   1400152a6:	lea    rcx,[rbp+0x17]
   1400152aa:	call   0x140011a3c
   1400152af:	lea    rdx,[rbp-0x29]
   1400152b3:	lea    rcx,[rbp+0x7]
   1400152b7:	movups xmm0,XMMWORD PTR [rax]
   1400152ba:	movdqu XMMWORD PTR [rbp+0x7],xmm0
   1400152bf:	call   0x1400122b0
   1400152c4:	mov    rax,QWORD PTR [rip+0x23cad]        # 0x140038f78
   1400152cb:	movaps xmm0,XMMWORD PTR [rbp+0x7]
   1400152cf:	lea    rcx,[rbp+0x17]
   1400152d3:	movdqa XMMWORD PTR [rbp-0x29],xmm0
   1400152d8:	cmp    BYTE PTR [rax],bl
   1400152da:	je     0x14001531d
   1400152dc:	call   0x1400165c0
   1400152e1:	lea    rcx,[rbp-0x9]
   1400152e5:	mov    dl,0x20
   1400152e7:	mov    rbx,rax
   1400152ea:	call   0x14001197c
   1400152ef:	lea    rcx,[rbp+0x7]
   1400152f3:	mov    rdx,rbx
   1400152f6:	movups xmm0,XMMWORD PTR [rax]
   1400152f9:	movdqu XMMWORD PTR [rbp+0x7],xmm0
   1400152fe:	call   0x1400122b0
   140015303:	movaps xmm0,XMMWORD PTR [rbp+0x7]
   140015307:	lea    rdx,[rbp-0x29]
   14001530b:	lea    rcx,[rbp+0x7]
   14001530f:	movdqa XMMWORD PTR [rbp+0x7],xmm0
   140015314:	call   0x1400122b0
   140015319:	xor    ebx,ebx
   14001531b:	jmp    0x140015339
   14001531d:	mov    edx,esi
   14001531f:	call   0x140011a84
   140015324:	lea    rdx,[rbp-0x29]
   140015328:	lea    rcx,[rbp+0x7]
   14001532c:	movups xmm0,XMMWORD PTR [rax]
   14001532f:	movdqu XMMWORD PTR [rbp+0x7],xmm0
   140015334:	call   0x1400122b0
   140015339:	mov    rax,QWORD PTR [rip+0x23c38]        # 0x140038f78
   140015340:	movaps xmm0,XMMWORD PTR [rbp+0x7]
   140015344:	movdqa XMMWORD PTR [rbp-0x29],xmm0
   140015349:	cmp    BYTE PTR [rax],bl
   14001534b:	je     0x140015456
   140015351:	cmp    BYTE PTR [rax],0x40
   140015354:	jne    0x140015216
   14001535a:	add    rax,rsi
   14001535d:	mov    QWORD PTR [rbp-0x9],rbx
   140015361:	mov    QWORD PTR [rbp+0x7],rbx
   140015365:	mov    QWORD PTR [rip+0x23c0c],rax        # 0x140038f78
   14001536c:	mov    eax,DWORD PTR [rip+0x23c22]        # 0x140038f94
   140015372:	mov    DWORD PTR [rsp+0x20],esi
   140015376:	and    eax,0x60
   140015379:	lea    r8,[rip+0x156d0]        # 0x14002aa50
   140015380:	lea    rcx,[rbp+0x17]
   140015384:	cmp    al,0x60
   140015386:	mov    eax,0xffff0000
   14001538b:	je     0x140015418
   140015391:	and    DWORD PTR [rbp-0x1],eax
   140015394:	and    DWORD PTR [rbp+0xf],eax
   140015397:	lea    r9,[rbp-0x9]
   14001539b:	lea    rdx,[rbp+0x7]
   14001539f:	call   0x140013fc0
   1400153a4:	movaps xmm0,XMMWORD PTR [rbp+0x17]
   1400153a8:	movdqa XMMWORD PTR [rbp-0x19],xmm0
   1400153ad:	test   r14b,0x4
   1400153b1:	je     0x140015491
   1400153b7:	mov    eax,DWORD PTR [rip+0x23bd7]        # 0x140038f94
   1400153bd:	shr    eax,1
   1400153bf:	not    eax
   1400153c1:	test   sil,al
   1400153c4:	je     0x14001546a
   1400153ca:	lea    rcx,[rbp+0x7]
   1400153ce:	call   0x1400139d4
   1400153d3:	lea    rcx,[rbp-0x9]
   1400153d7:	mov    dl,0x20
   1400153d9:	mov    rbx,rax
   1400153dc:	call   0x14001197c
   1400153e1:	lea    rcx,[rbp+0x17]
   1400153e5:	mov    rdx,rbx
   1400153e8:	movups xmm0,XMMWORD PTR [rax]
   1400153eb:	movdqu XMMWORD PTR [rbp+0x17],xmm0
   1400153f0:	call   0x1400122b0
   1400153f5:	movaps xmm0,XMMWORD PTR [rbp+0x17]
   1400153f9:	lea    rdx,[rbp-0x29]
   1400153fd:	lea    rcx,[rbp+0x17]
   140015401:	movdqa XMMWORD PTR [rbp+0x17],xmm0
   140015406:	call   0x1400122b0
   14001540b:	xor    ebx,ebx
   14001540d:	movaps xmm0,XMMWORD PTR [rbp+0x17]
   140015411:	movdqa XMMWORD PTR [rbp-0x29],xmm0
   140015416:	jmp    0x140015491
   140015418:	and    DWORD PTR [rbp+0xf],eax
   14001541b:	and    DWORD PTR [rbp-0x1],eax
   14001541e:	lea    r9,[rbp+0x7]
   140015422:	lea    rdx,[rbp-0x9]
   140015426:	call   0x140013fc0
   14001542b:	cmp    BYTE PTR [rbp-0x11],0x3
   14001542f:	je     0x1400153ad
   140015435:	cmp    BYTE PTR [rbp+0x1f],sil
   140015439:	jle    0x1400153ad
   14001543f:	movzx  eax,BYTE PTR [rbp+0x1f]
   140015443:	and    r15d,0xffffff00
   14001544a:	or     r15d,eax
   14001544d:	mov    DWORD PTR [rbp-0x11],r15d
   140015451:	jmp    0x1400153ad
   140015456:	lea    rcx,[rbp+0x17]
   14001545a:	mov    edx,esi
   14001545c:	call   0x140011a84
   140015461:	lea    rdx,[rbp-0x29]
   140015465:	jmp    0x1400151f5
   14001546a:	lea    rcx,[rbp+0x17]
   14001546e:	call   0x1400139d4
   140015473:	cmp    BYTE PTR [rbp-0x21],0x3
   140015477:	je     0x140015491
   140015479:	cmp    BYTE PTR [rax+0x8],sil
   14001547d:	jle    0x140015491
   14001547f:	mov    ecx,DWORD PTR [rbp-0x21]
   140015482:	movzx  eax,BYTE PTR [rax+0x8]
   140015486:	and    ecx,0xffffff00
   14001548c:	or     ecx,eax
   14001548e:	mov    DWORD PTR [rbp-0x21],ecx
   140015491:	mov    eax,DWORD PTR [rip+0x23afd]        # 0x140038f94
   140015497:	shr    eax,1
   140015499:	not    eax
   14001549b:	test   sil,al
   14001549e:	je     0x1400154c9
   1400154a0:	lea    rcx,[rbp+0x7]
   1400154a4:	call   0x140013ec0
   1400154a9:	lea    rdx,[rbp-0x29]
   1400154ad:	lea    rcx,[rbp+0x17]
   1400154b1:	movups xmm0,XMMWORD PTR [rax]
   1400154b4:	movdqu XMMWORD PTR [rbp+0x17],xmm0
   1400154b9:	call   0x1400122b0
   1400154be:	movaps xmm0,XMMWORD PTR [rbp+0x17]
   1400154c2:	movdqa XMMWORD PTR [rbp-0x29],xmm0
   1400154c7:	jmp    0x1400154f0
   1400154c9:	lea    rcx,[rbp+0x17]
   1400154cd:	call   0x140013ec0
   1400154d2:	cmp    BYTE PTR [rbp-0x21],0x3
   1400154d6:	je     0x1400154f0
   1400154d8:	cmp    BYTE PTR [rax+0x8],sil
   1400154dc:	jle    0x1400154f0
   1400154de:	mov    ecx,DWORD PTR [rbp-0x21]
   1400154e1:	movzx  eax,BYTE PTR [rax+0x8]
   1400154e5:	and    ecx,0xffffff00
   1400154eb:	or     ecx,eax
   1400154ed:	mov    DWORD PTR [rbp-0x21],ecx
   1400154f0:	cmp    QWORD PTR [r12],rbx
   1400154f4:	je     0x140015533
   1400154f6:	lea    rcx,[rbp+0x7]
   1400154fa:	mov    dl,0x28
   1400154fc:	call   0x14001197c
   140015501:	lea    rdx,[rbp-0x29]
   140015505:	lea    rcx,[rbp+0x17]
   140015509:	movups xmm0,XMMWORD PTR [rax]
   14001550c:	movdqu XMMWORD PTR [rbp+0x17],xmm0
   140015511:	call   0x1400122b0
   140015516:	movaps xmm0,XMMWORD PTR [rbp+0x17]
   14001551a:	lea    rcx,[rbp+0x17]
   14001551e:	mov    dl,0x29
   140015520:	movdqa XMMWORD PTR [rbp+0x17],xmm0
   140015525:	call   0x1400122f0
   14001552a:	movaps xmm0,XMMWORD PTR [rbp+0x17]
   14001552e:	movdqa XMMWORD PTR [rbp-0x29],xmm0
   140015533:	xor    r8d,r8d
   140015536:	lea    rcx,[rip+0x23a63]        # 0x140038fa0
   14001553d:	lea    edx,[r8+0x10]
   140015541:	call   0x1400157b8
   140015546:	mov    r14,rax
   140015549:	test   rax,rax
   14001554c:	je     0x14001555d
   14001554e:	mov    BYTE PTR [rax+0x8],bl
   140015551:	and    DWORD PTR [rax+0x8],0xffff00ff
   140015558:	mov    QWORD PTR [rax],rbx
   14001555b:	jmp    0x140015560
   14001555d:	mov    r14,rbx
   140015560:	lea    rcx,[rbp+0x27]
   140015564:	mov    rdx,r14
   140015567:	call   0x14001658c
   14001556c:	lea    rcx,[rbp+0x7]
   140015570:	call   0x140013694
   140015575:	lea    rcx,[rbp-0x9]
   140015579:	mov    dl,0x28
   14001557b:	mov    rbx,rax
   14001557e:	call   0x14001197c
   140015583:	lea    rcx,[rbp+0x17]
   140015587:	mov    rdx,rbx
   14001558a:	movups xmm0,XMMWORD PTR [rax]
   14001558d:	movdqu XMMWORD PTR [rbp+0x17],xmm0
   140015592:	call   0x1400122b0
   140015597:	movaps xmm0,XMMWORD PTR [rbp+0x17]
   14001559b:	lea    rcx,[rbp+0x17]
   14001559f:	mov    dl,0x29
   1400155a1:	movdqa XMMWORD PTR [rbp+0x17],xmm0
   1400155a6:	call   0x1400122f0
   1400155ab:	lea    rdx,[rbp+0x17]
   1400155af:	lea    rcx,[rbp-0x29]
   1400155b3:	call   0x1400122b0
   1400155b8:	mov    ecx,DWORD PTR [rip+0x239d6]        # 0x140038f94
   1400155be:	mov    eax,ecx
   1400155c0:	and    eax,0x60
   1400155c3:	cmp    al,0x60
   1400155c5:	je     0x1400155df
   1400155c7:	test   r13d,r13d
   1400155ca:	je     0x1400155df
   1400155cc:	lea    rdx,[rbp-0x19]
   1400155d0:	lea    rcx,[rbp-0x29]
   1400155d4:	call   0x1400122b0
   1400155d9:	mov    ecx,DWORD PTR [rip+0x239b5]        # 0x140038f94
   1400155df:	shr    ecx,0x13
   1400155e2:	not    ecx
   1400155e4:	test   sil,cl
   1400155e7:	lea    rcx,[rbp+0x17]
   1400155eb:	je     0x140015600
   1400155ed:	call   0x140016464
   1400155f2:	lea    rcx,[rbp-0x29]
   1400155f6:	mov    rdx,rax
   1400155f9:	call   0x1400122b0
   1400155fe:	jmp    0x140015623
   140015600:	call   0x140016464
   140015605:	cmp    BYTE PTR [rbp-0x21],0x3
   140015609:	je     0x140015623
   14001560b:	cmp    BYTE PTR [rax+0x8],sil
   14001560f:	jle    0x140015623
   140015611:	mov    ecx,DWORD PTR [rbp-0x21]
   140015614:	movzx  eax,BYTE PTR [rax+0x8]
   140015618:	and    ecx,0xffffff00
   14001561e:	or     ecx,eax
   140015620:	mov    DWORD PTR [rbp-0x21],ecx
   140015623:	mov    eax,DWORD PTR [rip+0x2396b]        # 0x140038f94
   140015629:	lea    rcx,[rbp+0x17]
   14001562d:	shr    eax,0x8
   140015630:	not    eax
   140015632:	test   sil,al
   140015635:	je     0x14001564a
   140015637:	call   0x1400177d8
   14001563c:	lea    rcx,[rbp-0x29]
   140015640:	mov    rdx,rax
   140015643:	call   0x1400122b0
   140015648:	jmp    0x14001566d
   14001564a:	call   0x1400177d8
   14001564f:	cmp    BYTE PTR [rbp-0x21],0x3
   140015653:	je     0x14001566d
   140015655:	cmp    BYTE PTR [rax+0x8],sil
   140015659:	jle    0x14001566d
   14001565b:	mov    ecx,DWORD PTR [rbp-0x21]
   14001565e:	movzx  eax,BYTE PTR [rax+0x8]
   140015662:	and    ecx,0xffffff00
   140015668:	or     ecx,eax
   14001566a:	mov    DWORD PTR [rbp-0x21],ecx
   14001566d:	test   r14,r14
   140015670:	je     0x140015685
   140015672:	movaps xmm0,XMMWORD PTR [rbp-0x29]
   140015676:	movdqu XMMWORD PTR [r14],xmm0
   14001567b:	movups xmm1,XMMWORD PTR [rbp+0x27]
   14001567f:	movdqu XMMWORD PTR [rdi],xmm1
   140015683:	jmp    0x140015692
   140015685:	mov    edx,0x3
   14001568a:	mov    rcx,rdi
   14001568d:	call   0x140011a84
   140015692:	lea    r11,[rsp+0x90]
   14001569a:	mov    rax,rdi
   14001569d:	mov    rbx,QWORD PTR [r11+0x30]
   1400156a1:	mov    rsi,QWORD PTR [r11+0x38]
   1400156a5:	mov    rdi,QWORD PTR [r11+0x40]
   1400156a9:	mov    rsp,r11
   1400156ac:	pop    r15
   1400156ae:	pop    r14
   1400156b0:	pop    r13
   1400156b2:	pop    r12
   1400156b4:	pop    rbp
   1400156b5:	ret    
   1400156b6:	int3   
   1400156b7:	int3   
   1400156b8:	rex push rbx
   1400156ba:	sub    rsp,0x20
   1400156be:	xor    edx,edx
   1400156c0:	mov    rbx,rcx
   1400156c3:	call   0x140014a54
   1400156c8:	mov    rax,rbx
   1400156cb:	add    rsp,0x20
   1400156cf:	pop    rbx
   1400156d0:	ret    
   1400156d1:	int3   
   1400156d2:	int3   
   1400156d3:	int3   
   1400156d4:	mov    rcx,QWORD PTR [rcx]
   1400156d7:	test   rcx,rcx
   1400156da:	jne    0x1400156df
   1400156dc:	xor    al,al
   1400156de:	ret    
   1400156df:	mov    rax,QWORD PTR [rcx]
   1400156e2:	rex.W jmp QWORD PTR [rax+0x8]
   1400156e6:	int3   
   1400156e7:	int3   
   1400156e8:	cmp    DWORD PTR [rcx+0x8],0x1
   1400156ec:	setne  al
   1400156ef:	dec    al
   1400156f1:	and    al,0x20
   1400156f3:	ret    
   1400156f4:	mov    al,BYTE PTR [rcx+0x8]
   1400156f7:	ret    
   1400156f8:	sub    rsp,0x28
   1400156fc:	mov    rcx,QWORD PTR [rcx+0x8]
   140015700:	xor    eax,eax
   140015702:	test   rcx,rcx
   140015705:	je     0x140015715
   140015707:	mov    rcx,QWORD PTR [rcx]
   14001570a:	test   rcx,rcx
   14001570d:	je     0x140015715
   14001570f:	mov    rax,QWORD PTR [rcx]
   140015712:	call   QWORD PTR [rax+0x8]
   140015715:	add    rsp,0x28
   140015719:	ret    
   14001571a:	int3   
   14001571b:	int3   
   14001571c:	rex push rbx
   14001571e:	sub    rsp,0x20
   140015722:	mov    rbx,rcx
   140015725:	mov    rcx,QWORD PTR [rcx+0x10]
   140015729:	mov    rax,QWORD PTR [rcx]
   14001572c:	call   QWORD PTR [rax+0x8]
   14001572f:	test   al,al
   140015731:	jne    0x14001573d
   140015733:	mov    rcx,QWORD PTR [rbx+0x8]
   140015737:	mov    rax,QWORD PTR [rcx]
   14001573a:	call   QWORD PTR [rax+0x8]
   14001573d:	add    rsp,0x20
   140015741:	pop    rbx
   140015742:	ret    
   140015743:	int3   
   140015744:	xor    eax,eax
   140015746:	cmp    DWORD PTR [rcx+0x10],eax
   140015749:	je     0x140015757
   14001574b:	movsxd rdx,DWORD PTR [rcx+0x10]
   14001574f:	mov    rax,QWORD PTR [rcx+0x8]
   140015753:	mov    al,BYTE PTR [rax+rdx*1-0x1]
   140015757:	ret    
   140015758:	mov    QWORD PTR [rsp+0x8],rbx
   14001575d:	push   rdi
   14001575e:	sub    rsp,0x50
   140015762:	mov    rdi,rcx
   140015765:	lea    rcx,[rsp+0x30]
   14001576a:	xor    edx,edx
   14001576c:	call   0x140014a54
   140015771:	lea    rcx,[rsp+0x40]
   140015776:	mov    dl,0x60
   140015778:	mov    rbx,rax
   14001577b:	call   0x14001197c
   140015780:	lea    rcx,[rsp+0x20]
   140015785:	mov    rdx,rbx
   140015788:	movups xmm0,XMMWORD PTR [rax]
   14001578b:	movdqu XMMWORD PTR [rsp+0x20],xmm0
   140015791:	call   0x1400122b0
   140015796:	movups xmm0,XMMWORD PTR [rsp+0x20]
   14001579b:	mov    dl,0x27
   14001579d:	mov    rcx,rdi
   1400157a0:	movdqu XMMWORD PTR [rdi],xmm0
   1400157a4:	call   0x1400122f0
   1400157a9:	mov    rbx,QWORD PTR [rsp+0x60]
   1400157ae:	mov    rax,rdi
   1400157b1:	add    rsp,0x50
   1400157b5:	pop    rdi
   1400157b6:	ret    
   1400157b7:	int3   
   1400157b8:	mov    QWORD PTR [rsp+0x8],rbx
   1400157bd:	mov    QWORD PTR [rsp+0x10],rsi
   1400157c2:	push   rdi
   1400157c3:	sub    rsp,0x20
   1400157c7:	lea    rdi,[rdx+0x7]
   1400157cb:	mov    rbx,rcx
   1400157ce:	and    rdi,0xfffffffffffffff8
   1400157d2:	test   r8d,r8d
   1400157d5:	je     0x1400157de
   1400157d7:	mov    rcx,rdi
   1400157da:	call   QWORD PTR [rbx]
   1400157dc:	jmp    0x140015858
   1400157de:	mov    eax,0x8
   1400157e3:	test   rdi,rdi
   1400157e6:	cmove  rdi,rax
   1400157ea:	mov    rax,QWORD PTR [rcx+0x20]
   1400157ee:	cmp    rax,rdi
   1400157f1:	jae    0x140015845
   1400157f3:	mov    esi,0x1000
   1400157f8:	cmp    rdi,rsi
   1400157fb:	jbe    0x140015801
   1400157fd:	xor    eax,eax
   1400157ff:	jmp    0x140015858
   140015801:	lea    rcx,[rip+0x23798]        # 0x140038fa0
   140015808:	mov    edx,0x1008
   14001580d:	mov    r8d,0x1
   140015813:	call   0x1400157b8
   140015818:	test   rax,rax
   14001581b:	je     0x140015821
   14001581d:	and    QWORD PTR [rax],0x0
   140015821:	test   rax,rax
   140015824:	je     0x1400157fd
   140015826:	mov    rcx,QWORD PTR [rbx+0x18]
   14001582a:	test   rcx,rcx
   14001582d:	je     0x140015834
   14001582f:	mov    QWORD PTR [rcx],rax
   140015832:	jmp    0x140015838
   140015834:	mov    QWORD PTR [rbx+0x10],rax
   140015838:	sub    rsi,rdi
   14001583b:	mov    QWORD PTR [rbx+0x18],rax
   14001583f:	mov    QWORD PTR [rbx+0x20],rsi
   140015843:	jmp    0x14001584c
   140015845:	sub    rax,rdi
   140015848:	mov    QWORD PTR [rcx+0x20],rax
   14001584c:	mov    rax,QWORD PTR [rbx+0x20]
   140015850:	add    rax,0x8
   140015854:	add    rax,QWORD PTR [rbx+0x18]
   140015858:	mov    rbx,QWORD PTR [rsp+0x30]
   14001585d:	mov    rsi,QWORD PTR [rsp+0x38]
   140015862:	add    rsp,0x20
   140015866:	pop    rdi
   140015867:	ret    
   140015868:	mov    rcx,QWORD PTR [rip+0x23709]        # 0x140038f78
   14001586f:	mov    dl,BYTE PTR [rcx]
   140015871:	test   dl,dl
   140015873:	jne    0x140015878
   140015875:	xor    eax,eax
   140015877:	ret    
   140015878:	lea    eax,[rdx-0x30]
   14001587b:	cmp    al,0x9
   14001587d:	ja     0x140015890
   14001587f:	movsx  eax,dl
   140015882:	sub    eax,0x2f
   140015885:	inc    rcx
   140015888:	mov    QWORD PTR [rip+0x236e9],rcx        # 0x140038f78
   14001588f:	ret    
   140015890:	xor    r8d,r8d
   140015893:	mov    r9b,0x40
   140015896:	jmp    0x1400158bd
   140015898:	test   dl,dl
   14001589a:	je     0x140015875
   14001589c:	lea    eax,[rdx-0x41]
   14001589f:	cmp    al,0xf
   1400158a1:	ja     0x1400158d7
   1400158a3:	shl    r8d,0x4
   1400158a7:	movsx  eax,dl
   1400158aa:	add    r8d,0xffffffbf
   1400158ae:	add    r8d,eax
   1400158b1:	inc    rcx
   1400158b4:	mov    QWORD PTR [rip+0x236bd],rcx        # 0x140038f78
   1400158bb:	mov    dl,BYTE PTR [rcx]
   1400158bd:	cmp    dl,r9b
   1400158c0:	jne    0x140015898
   1400158c2:	mov    al,BYTE PTR [rcx]
   1400158c4:	inc    rcx
   1400158c7:	mov    QWORD PTR [rip+0x236aa],rcx        # 0x140038f78
   1400158ce:	cmp    al,r9b
   1400158d1:	jne    0x1400158d7
   1400158d3:	mov    eax,r8d
   1400158d6:	ret    
   1400158d7:	or     eax,0xffffffff
   1400158da:	ret    
   1400158db:	int3   
   1400158dc:	mov    rax,rsp
   1400158df:	mov    QWORD PTR [rax+0x8],rbx
   1400158e3:	mov    QWORD PTR [rax+0x10],rsi
   1400158e7:	mov    QWORD PTR [rax+0x20],rdi
   1400158eb:	mov    QWORD PTR [rax+0x18],r8
   1400158ef:	push   rbp
   1400158f0:	lea    rbp,[rax-0x5f]
   1400158f4:	sub    rsp,0xf0
   1400158fb:	mov    rbx,QWORD PTR [rip+0x23676]        # 0x140038f78
   140015902:	and    QWORD PTR [rbp-0x69],0x0
   140015907:	and    QWORD PTR [rbp-0x79],0x0
   14001590c:	movsx  eax,BYTE PTR [rbx]
   14001590f:	xor    esi,esi
   140015911:	mov    rdi,rcx
   140015914:	mov    ecx,0xffff0000
   140015919:	lea    r8d,[rsi+0x1]
   14001591d:	and    DWORD PTR [rbp-0x61],ecx
   140015920:	and    DWORD PTR [rbp-0x71],ecx
   140015923:	add    rbx,r8
   140015926:	mov    QWORD PTR [rip+0x2364b],rbx        # 0x140038f78
   14001592d:	cmp    eax,0x41
   140015930:	jg     0x140015aee
   140015936:	je     0x140015f7d
   14001593c:	test   eax,eax
   14001593e:	je     0x140015ad7
   140015944:	cmp    eax,0x2f
   140015947:	jle    0x140015bfd
   14001594d:	cmp    eax,0x31
   140015950:	jle    0x1400159b1
   140015952:	cmp    eax,0x39
   140015955:	jg     0x140015bfd
   14001595b:	movsx  rdx,BYTE PTR [rbx-0x1]
   140015960:	lea    rbx,[rip+0xfffffffffffea699]        # 0x140000000
   140015967:	mov    rdx,QWORD PTR [rbx+rdx*8+0x2e180]
   14001596f:	lea    rcx,[rbp-0x69]
   140015973:	call   0x140011e90
   140015978:	cmp    QWORD PTR [rbp-0x69],0x0
   14001597d:	je     0x140015ab3
   140015983:	lea    rdx,[rip+0x18d16]        # 0x14002e6a0
   14001598a:	lea    rcx,[rbp-0x39]
   14001598e:	call   0x140011a3c
   140015993:	lea    rdx,[rbp-0x69]
   140015997:	lea    rcx,[rbp-0x59]
   14001599b:	movups xmm0,XMMWORD PTR [rax]
   14001599e:	movdqu XMMWORD PTR [rbp-0x59],xmm0
   1400159a3:	call   0x1400122b0
   1400159a8:	movaps xmm0,XMMWORD PTR [rbp-0x59]
   1400159ac:	jmp    0x140015ab7
   1400159b1:	and    DWORD PTR [rbp-0x71],ecx
   1400159b4:	mov    QWORD PTR [rbp-0x79],rsi
   1400159b8:	test   dl,dl
   1400159ba:	je     0x140015a4d
   1400159c0:	lea    rcx,[rbp-0x9]
   1400159c4:	call   0x140016f58
   1400159c9:	lea    rcx,[rbp-0x49]
   1400159cd:	mov    dl,0x3c
   1400159cf:	mov    rbx,rax
   1400159d2:	call   0x14001197c
   1400159d7:	lea    rcx,[rbp-0x59]
   1400159db:	mov    rdx,rbx
   1400159de:	movups xmm0,XMMWORD PTR [rax]
   1400159e1:	movdqu XMMWORD PTR [rbp-0x59],xmm0
   1400159e6:	call   0x1400122b0
   1400159eb:	lea    rdx,[rbp-0x59]
   1400159ef:	lea    rcx,[rbp-0x79]
   1400159f3:	call   0x1400122b0
   1400159f8:	mov    rcx,QWORD PTR [rbp-0x79]
   1400159fc:	test   rcx,rcx
   1400159ff:	je     0x140015a16
   140015a01:	mov    rax,QWORD PTR [rcx]
   140015a04:	call   QWORD PTR [rax+0x8]
   140015a07:	cmp    al,0x3e
   140015a09:	jne    0x140015a16
   140015a0b:	lea    rcx,[rbp-0x79]
   140015a0f:	mov    dl,0x20
   140015a11:	call   0x1400122f0
   140015a16:	lea    rcx,[rbp-0x79]
   140015a1a:	mov    dl,0x3e
   140015a1c:	call   0x1400122f0
   140015a21:	mov    rax,QWORD PTR [rbp+0x77]
   140015a25:	test   rax,rax
   140015a28:	je     0x140015a2d
   140015a2a:	mov    BYTE PTR [rax],0x1
   140015a2d:	mov    rbx,QWORD PTR [rip+0x23544]        # 0x140038f78
   140015a34:	cmp    BYTE PTR [rbx],sil
   140015a37:	jne    0x140015a3f
   140015a39:	movups xmm0,XMMWORD PTR [rbp-0x79]
   140015a3d:	jmp    0x140015ab7
   140015a3f:	mov    rsi,QWORD PTR [rbp-0x79]
   140015a43:	inc    rbx
   140015a46:	mov    QWORD PTR [rip+0x2352b],rbx        # 0x140038f78
   140015a4d:	lea    rcx,[rbp+0x47]
   140015a51:	xor    r8d,r8d
   140015a54:	xor    edx,edx
   140015a56:	call   0x14001800c
   140015a5b:	movups xmm0,XMMWORD PTR [rax]
   140015a5e:	mov    QWORD PTR [rip+0x23513],rbx        # 0x140038f78
   140015a65:	movq   rax,xmm0
   140015a6a:	movaps XMMWORD PTR [rbp-0x69],xmm0
   140015a6e:	test   rax,rax
   140015a71:	je     0x140015aa1
   140015a73:	cmp    BYTE PTR [rbx-0x1],0x31
   140015a77:	jne    0x140015aa1
   140015a79:	lea    rcx,[rbp-0x49]
   140015a7d:	mov    dl,0x7e
   140015a7f:	call   0x14001197c
   140015a84:	lea    rdx,[rbp-0x69]
   140015a88:	lea    rcx,[rbp-0x59]
   140015a8c:	movups xmm0,XMMWORD PTR [rax]
   140015a8f:	movdqu XMMWORD PTR [rbp-0x59],xmm0
   140015a94:	call   0x1400122b0
   140015a99:	movaps xmm0,XMMWORD PTR [rbp-0x59]
   140015a9d:	movaps XMMWORD PTR [rbp-0x69],xmm0
   140015aa1:	test   rsi,rsi
   140015aa4:	je     0x140015ab7
   140015aa6:	lea    rdx,[rbp-0x79]
   140015aaa:	lea    rcx,[rbp-0x69]
   140015aae:	call   0x1400122b0
   140015ab3:	movaps xmm0,XMMWORD PTR [rbp-0x69]
   140015ab7:	movdqu XMMWORD PTR [rdi],xmm0
   140015abb:	lea    r11,[rsp+0xf0]
   140015ac3:	mov    rax,rdi
   140015ac6:	mov    rbx,QWORD PTR [r11+0x10]
   140015aca:	mov    rsi,QWORD PTR [r11+0x18]
   140015ace:	mov    rdi,QWORD PTR [r11+0x28]
   140015ad2:	mov    rsp,r11
   140015ad5:	pop    rbp
   140015ad6:	ret    
   140015ad7:	sub    rbx,r8
   140015ada:	mov    edx,r8d
   140015add:	mov    QWORD PTR [rip+0x23494],rbx        # 0x140038f78
   140015ae4:	mov    rcx,rdi
   140015ae7:	call   0x140011a84
   140015aec:	jmp    0x140015abb
   140015aee:	cmp    eax,0x42
   140015af1:	je     0x140015f7a
   140015af7:	jle    0x140015bfd
   140015afd:	cmp    eax,0x5a
   140015b00:	jle    0x140015f7d
   140015b06:	cmp    eax,0x5f
   140015b09:	jne    0x140015bfd
   140015b0f:	movsx  ecx,BYTE PTR [rbx]
   140015b12:	add    rbx,r8
   140015b15:	mov    QWORD PTR [rip+0x2345c],rbx        # 0x140038f78
   140015b1c:	cmp    ecx,0x4f
   140015b1f:	jg     0x140015c13
   140015b25:	cmp    ecx,0x44
   140015b28:	jge    0x140015f48
   140015b2e:	cmp    ecx,0x39
   140015b31:	jg     0x140015bb1
   140015b33:	je     0x140015b8a
   140015b35:	test   ecx,ecx
   140015b37:	je     0x140015ad7
   140015b39:	cmp    ecx,0x2f
   140015b3c:	jle    0x140015bfd
   140015b42:	cmp    ecx,0x36
   140015b45:	jle    0x140015b71
   140015b47:	cmp    ecx,0x38
   140015b4a:	jg     0x140015bfd
   140015b50:	movsx  rdx,BYTE PTR [rbx-0x1]
   140015b55:	lea    rbx,[rip+0xfffffffffffea4a4]        # 0x140000000
   140015b5c:	mov    rdx,QWORD PTR [rbx+rdx*8+0x2e2a0]
   140015b64:	mov    rcx,rdi
   140015b67:	call   0x140011a3c
   140015b6c:	jmp    0x140015abb
   140015b71:	movsx  rdx,BYTE PTR [rbx-0x1]
   140015b76:	lea    rbx,[rip+0xfffffffffffea483]        # 0x140000000
   140015b7d:	mov    rdx,QWORD PTR [rbx+rdx*8+0x2e2a0]
   140015b85:	jmp    0x14001596f
   140015b8a:	movsx  rdx,BYTE PTR [rbx-0x1]
   140015b8f:	lea    rbx,[rip+0xfffffffffffea46a]        # 0x140000000
   140015b96:	lea    rcx,[rbp-0x79]
   140015b9a:	mov    rdx,QWORD PTR [rbx+rdx*8+0x2e2a0]
   140015ba2:	call   0x140011a3c
   140015ba7:	bts    DWORD PTR [rbp-0x71],0xf
   140015bac:	jmp    0x140015a39
   140015bb1:	cmp    ecx,0x3f
   140015bb4:	je     0x140015be3
   140015bb6:	cmp    ecx,0x40
   140015bb9:	jle    0x140015bfd
   140015bbb:	cmp    ecx,0x42
   140015bbe:	jle    0x140015f48
   140015bc4:	cmp    ecx,0x43
   140015bc7:	jne    0x140015bfd
   140015bc9:	lea    rdx,[rip+0x18ba8]        # 0x14002e778
   140015bd0:	lea    rcx,[rbp-0x79]
   140015bd4:	call   0x140016e20
   140015bd9:	bts    DWORD PTR [rbp-0x71],0xc
   140015bde:	jmp    0x140015a39
   140015be3:	movsx  eax,BYTE PTR [rbx]
   140015be6:	add    rbx,r8
   140015be9:	mov    QWORD PTR [rip+0x23388],rbx        # 0x140038f78
   140015bf0:	test   eax,eax
   140015bf2:	je     0x140015ad7
   140015bf8:	cmp    eax,0x30
   140015bfb:	je     0x140015c07
   140015bfd:	mov    edx,0x2
   140015c02:	jmp    0x140015ae4
   140015c07:	xor    r8d,r8d
   140015c0a:	lea    rdx,[rip+0x19027]        # 0x14002ec38
   140015c11:	jmp    0x140015bd0
   140015c13:	cmp    ecx,0x54
   140015c16:	jg     0x140015e62
   140015c1c:	cmp    ecx,0x53
   140015c1f:	jge    0x140015f48
   140015c25:	sub    ecx,0x50
   140015c28:	je     0x140015e10
   140015c2e:	dec    ecx
   140015c30:	je     0x140015ab3
   140015c36:	dec    ecx
   140015c38:	jne    0x140015bfd
   140015c3a:	movsx  rdx,BYTE PTR [rbx-0x1]
   140015c3f:	lea    rbx,[rip+0xfffffffffffea3ba]        # 0x140000000
   140015c46:	lea    rcx,[rbp-0x69]
   140015c4a:	mov    rdx,QWORD PTR [rbx+rdx*8+0x2e268]
   140015c52:	call   0x140011e90
   140015c57:	mov    rax,QWORD PTR [rip+0x2331a]        # 0x140038f78
   140015c5e:	mov    cl,BYTE PTR [rax]
   140015c60:	test   cl,cl
   140015c62:	jne    0x140015c7e
   140015c64:	movaps xmm0,XMMWORD PTR [rbp-0x69]
   140015c68:	mov    edx,0x1
   140015c6d:	mov    rcx,rdi
   140015c70:	movdqu XMMWORD PTR [rdi],xmm0
   140015c74:	call   0x140012498
   140015c79:	jmp    0x140015abb
   140015c7e:	movsx  eax,cl
   140015c81:	sub    eax,0x30
   140015c84:	js     0x140015bfd
   140015c8a:	movsxd rdx,eax
   140015c8d:	cmp    rdx,0x5
   140015c91:	jae    0x140015bfd
   140015c97:	mov    rdx,QWORD PTR [rbx+rdx*8+0x2e590]
   140015c9f:	lea    rcx,[rbp-0x79]
   140015ca3:	call   0x140011e90
   140015ca8:	mov    rcx,QWORD PTR [rip+0x232c9]        # 0x140038f78
   140015caf:	movsx  eax,BYTE PTR [rcx]
   140015cb2:	inc    rcx
   140015cb5:	mov    QWORD PTR [rip+0x232bc],rcx        # 0x140038f78
   140015cbc:	cmp    eax,0x30
   140015cbf:	je     0x140015dd2
   140015cc5:	cmp    eax,0x31
   140015cc8:	je     0x140015cff
   140015cca:	add    eax,0xffffffce
   140015ccd:	cmp    eax,0x2
   140015cd0:	ja     0x140015ceb
   140015cd2:	movaps xmm0,XMMWORD PTR [rbp-0x69]
   140015cd6:	lea    rdx,[rbp-0x79]
   140015cda:	mov    rcx,rdi
   140015cdd:	movdqu XMMWORD PTR [rdi],xmm0
   140015ce1:	call   0x1400122b0
   140015ce6:	jmp    0x140015abb
   140015ceb:	dec    rcx
   140015cee:	mov    edx,0x1
   140015cf3:	mov    QWORD PTR [rip+0x2327e],rcx        # 0x140038f78
   140015cfa:	jmp    0x140015ae4
   140015cff:	movaps xmm0,XMMWORD PTR [rbp-0x69]
   140015d03:	lea    rdx,[rbp-0x79]
   140015d07:	lea    rcx,[rbp-0x69]
   140015d0b:	movdqa XMMWORD PTR [rbp-0x69],xmm0
   140015d10:	call   0x1400122b0
   140015d15:	lea    rcx,[rbp-0x29]
   140015d19:	call   0x140016bcc
   140015d1e:	lea    rcx,[rbp-0x59]
   140015d22:	mov    dl,0x2c
   140015d24:	movups xmm0,XMMWORD PTR [rax]
   140015d27:	movdqu XMMWORD PTR [rbp-0x59],xmm0
   140015d2c:	call   0x1400122f0
   140015d31:	lea    rdx,[rbp-0x59]
   140015d35:	lea    rcx,[rbp-0x69]
   140015d39:	call   0x1400122b0
   140015d3e:	lea    rcx,[rbp+0x37]
   140015d42:	call   0x140016bcc
   140015d47:	lea    rcx,[rbp-0x59]
   140015d4b:	mov    dl,0x2c
   140015d4d:	movups xmm0,XMMWORD PTR [rax]
   140015d50:	movdqu XMMWORD PTR [rbp-0x59],xmm0
   140015d55:	call   0x1400122f0
   140015d5a:	lea    rdx,[rbp-0x59]
   140015d5e:	lea    rcx,[rbp-0x69]
   140015d62:	call   0x1400122b0
   140015d67:	lea    rcx,[rbp+0x17]
   140015d6b:	call   0x140016bcc
   140015d70:	lea    rcx,[rbp-0x59]
   140015d74:	mov    dl,0x2c
   140015d76:	movups xmm0,XMMWORD PTR [rax]
   140015d79:	movdqu XMMWORD PTR [rbp-0x59],xmm0
   140015d7e:	call   0x1400122f0
   140015d83:	lea    rdx,[rbp-0x59]
   140015d87:	lea    rcx,[rbp-0x69]
   140015d8b:	call   0x1400122b0
   140015d90:	lea    rcx,[rbp-0x19]
   140015d94:	xor    edx,edx
   140015d96:	call   0x140014a54
   140015d9b:	lea    rcx,[rbp-0x59]
   140015d9f:	mov    dl,0x29
   140015da1:	movups xmm0,XMMWORD PTR [rax]
   140015da4:	movdqu XMMWORD PTR [rbp-0x59],xmm0
   140015da9:	call   0x1400122f0
   140015dae:	lea    rdx,[rbp-0x59]
   140015db2:	lea    rcx,[rbp-0x69]
   140015db6:	call   0x1400122b0
   140015dbb:	mov    dl,0x27
   140015dbd:	mov    rcx,rdi
   140015dc0:	movaps xmm0,XMMWORD PTR [rbp-0x69]
   140015dc4:	movdqu XMMWORD PTR [rdi],xmm0
   140015dc8:	call   0x1400122f0
   140015dcd:	jmp    0x140015abb
   140015dd2:	lea    rcx,[rbp-0x49]
   140015dd6:	xor    edx,edx
   140015dd8:	call   0x1400146fc
   140015ddd:	lea    rcx,[rbp-0x59]
   140015de1:	mov    dl,0x20
   140015de3:	movaps xmm0,XMMWORD PTR [rbp-0x49]
   140015de7:	movdqa XMMWORD PTR [rbp-0x59],xmm0
   140015dec:	call   0x1400122f0
   140015df1:	lea    rdx,[rbp-0x69]
   140015df5:	lea    rcx,[rbp-0x59]
   140015df9:	movaps xmm0,XMMWORD PTR [rbp-0x59]
   140015dfd:	movdqa XMMWORD PTR [rbp-0x59],xmm0
   140015e02:	call   0x1400122b0
   140015e07:	movaps xmm0,XMMWORD PTR [rbp-0x59]
   140015e0b:	jmp    0x140015cd6
   140015e10:	movsx  rdx,BYTE PTR [rbx-0x1]
   140015e15:	lea    rbx,[rip+0xfffffffffffea1e4]        # 0x140000000
   140015e1c:	lea    rcx,[rbp-0x69]
   140015e20:	mov    rdx,QWORD PTR [rbx+rdx*8+0x2e268]
   140015e28:	call   0x140011e90
   140015e2d:	lea    rcx,[rbp+0x7]
   140015e31:	xor    r8d,r8d
   140015e34:	xor    edx,edx
   140015e36:	call   0x1400158dc
   140015e3b:	movups xmm0,XMMWORD PTR [rax]
   140015e3e:	movq   rax,xmm0
   140015e43:	movups XMMWORD PTR [rbp-0x79],xmm0
   140015e47:	test   rax,rax
   140015e4a:	je     0x140015cd2
   140015e50:	test   DWORD PTR [rbp-0x71],0x400
   140015e57:	je     0x140015cd2
   140015e5d:	jmp    0x140015bfd
   140015e62:	cmp    ecx,0x56
   140015e65:	jle    0x140015f61
   140015e6b:	cmp    ecx,0x57
   140015e6e:	jle    0x140015bfd
   140015e74:	cmp    ecx,0x59
   140015e77:	jle    0x140015f48
   140015e7d:	cmp    ecx,0x5f
   140015e80:	jne    0x140015bfd
   140015e86:	movsx  eax,BYTE PTR [rbx]
   140015e89:	add    rbx,r8
   140015e8c:	mov    QWORD PTR [rip+0x230e5],rbx        # 0x140038f78
   140015e93:	cmp    eax,0x41
   140015e96:	jl     0x140015bfd
   140015e9c:	cmp    eax,0x44
   140015e9f:	jle    0x140015eaf
   140015ea1:	cmp    eax,0x46
   140015ea4:	jle    0x140015ec8
   140015ea6:	cmp    eax,0x4a
   140015ea9:	jg     0x140015bfd
   140015eaf:	movsx  rdx,BYTE PTR [rbx-0x1]
   140015eb4:	lea    rbx,[rip+0xfffffffffffea145]        # 0x140000000
   140015ebb:	mov    rdx,QWORD PTR [rbx+rdx*8+0x2e330]
   140015ec3:	jmp    0x140015b64
   140015ec8:	movsx  rdx,BYTE PTR [rbx-0x1]
   140015ecd:	lea    rbx,[rip+0xfffffffffffea12c]        # 0x140000000
   140015ed4:	lea    rcx,[rbp-0x79]
   140015ed8:	mov    rdx,QWORD PTR [rbx+rdx*8+0x2e330]
   140015ee0:	call   0x140011a3c
   140015ee5:	mov    rax,QWORD PTR [rip+0x2308c]        # 0x140038f78
   140015eec:	cmp    BYTE PTR [rax],0x3f
   140015eef:	jne    0x140015f1e
   140015ef1:	lea    rcx,[rbp+0x27]
   140015ef5:	call   0x1400147e0
   140015efa:	lea    rcx,[rbp-0x79]
   140015efe:	mov    rdx,rax
   140015f01:	call   0x1400122b0
   140015f06:	mov    rax,QWORD PTR [rip+0x2306b]        # 0x140038f78
   140015f0d:	cmp    BYTE PTR [rax],0x40
   140015f10:	jne    0x140015f33
   140015f12:	inc    rax
   140015f15:	mov    QWORD PTR [rip+0x2305c],rax        # 0x140038f78
   140015f1c:	jmp    0x140015f33
   140015f1e:	lea    rcx,[rbp-0x39]
   140015f22:	call   0x140016f0c
   140015f27:	lea    rcx,[rbp-0x79]
   140015f2b:	mov    rdx,rax
   140015f2e:	call   0x1400122b0
   140015f33:	lea    rdx,[rip+0x18d16]        # 0x14002ec50
   140015f3a:	lea    rcx,[rbp-0x79]
   140015f3e:	call   0x14001240c
   140015f43:	jmp    0x140015a39
   140015f48:	movsx  rdx,BYTE PTR [rbx-0x1]
   140015f4d:	lea    rbx,[rip+0xfffffffffffea0ac]        # 0x140000000
   140015f54:	mov    rdx,QWORD PTR [rbx+rdx*8+0x2e268]
   140015f5c:	jmp    0x140015b64
   140015f61:	movsx  rdx,BYTE PTR [rbx-0x1]
   140015f66:	lea    rbx,[rip+0xfffffffffffea093]        # 0x140000000
   140015f6d:	mov    rdx,QWORD PTR [rbx+rdx*8+0x2e268]
   140015f75:	jmp    0x14001596f
   140015f7a:	mov    esi,r8d
   140015f7d:	movsx  rdx,BYTE PTR [rbx-0x1]
   140015f82:	lea    rbx,[rip+0xfffffffffffea077]        # 0x140000000
   140015f89:	lea    rcx,[rbp-0x69]
   140015f8d:	mov    rdx,QWORD PTR [rbx+rdx*8+0x2e148]
   140015f95:	call   0x140011e90
   140015f9a:	test   esi,esi
   140015f9c:	je     0x140015978
   140015fa2:	cmp    QWORD PTR [rbp-0x69],0x0
   140015fa7:	je     0x140015ab3
   140015fad:	bts    DWORD PTR [rbp-0x61],0x9
   140015fb2:	jmp    0x140015ab3
   140015fb7:	int3   
   140015fb8:	rex push rbx
   140015fba:	sub    rsp,0x20
   140015fbe:	lea    r9,[rip+0x186eb]        # 0x14002e6b0
   140015fc5:	mov    rbx,rcx
   140015fc8:	call   0x140016318
   140015fcd:	mov    rax,rbx
   140015fd0:	add    rsp,0x20
   140015fd4:	pop    rbx
   140015fd5:	ret    
   140015fd6:	int3   
   140015fd7:	int3   
   140015fd8:	rex push rbx
   140015fda:	sub    rsp,0x20
   140015fde:	lea    r9,[rip+0x14a6b]        # 0x14002aa50
   140015fe5:	mov    rbx,rcx
   140015fe8:	call   0x140016318
   140015fed:	mov    rax,rbx
   140015ff0:	add    rsp,0x20
   140015ff4:	pop    rbx
   140015ff5:	ret    
   140015ff6:	int3   
   140015ff7:	int3   
   140015ff8:	mov    QWORD PTR [rsp+0x8],rbx
   140015ffd:	mov    QWORD PTR [rsp+0x10],rdi
   140016002:	push   rbp
   140016003:	mov    rbp,rsp
   140016006:	sub    rsp,0x60
   14001600a:	mov    r8,QWORD PTR [rip+0x22f67]        # 0x140038f78
   140016011:	and    QWORD PTR [rbp-0x30],0x0
   140016016:	mov    rbx,rcx
   140016019:	movsx  ecx,BYTE PTR [r8]
   14001601d:	mov    rdi,rdx
   140016020:	mov    edx,0xffff0000
   140016025:	and    DWORD PTR [rbp-0x28],edx
   140016028:	test   ecx,ecx
   14001602a:	je     0x1400161da
   140016030:	sub    ecx,0x24
   140016033:	je     0x1400160b3
   140016035:	sub    ecx,0x1d
   140016038:	je     0x140016076
   14001603a:	dec    ecx
   14001603c:	je     0x14001604e
   14001603e:	mov    rdx,rdi
   140016041:	mov    rcx,rbx
   140016044:	call   0x140013a94
   140016049:	jmp    0x1400161fa
   14001604e:	lea    rdx,[rip+0x18dbb]        # 0x14002ee10
   140016055:	lea    rcx,[rbp-0x30]
   140016059:	call   0x140011e90
   14001605e:	cmp    QWORD PTR [rdi],0x0
   140016062:	je     0x14001606f
   140016064:	lea    rcx,[rbp-0x30]
   140016068:	mov    dl,0x20
   14001606a:	call   0x1400122f0
   14001606f:	mov    r8,QWORD PTR [rip+0x22f02]        # 0x140038f78
   140016076:	lea    r9,[rip+0x18647]        # 0x14002e6c4
   14001607d:	movups xmm0,XMMWORD PTR [rdi]
   140016080:	inc    r8
   140016083:	lea    rdx,[rbp-0x30]
   140016087:	mov    QWORD PTR [rip+0x22eea],r8        # 0x140038f78
   14001608e:	lea    r8,[rbp-0x20]
   140016092:	mov    rcx,rbx
   140016095:	movups XMMWORD PTR [rbp-0x20],xmm0
   140016099:	psrldq xmm0,0x8
   14001609e:	movd   eax,xmm0
   1400160a2:	bts    eax,0x8
   1400160a6:	mov    DWORD PTR [rbp-0x18],eax
   1400160a9:	call   0x140016318
   1400160ae:	jmp    0x1400161fa
   1400160b3:	mov    al,BYTE PTR [r8+0x1]
   1400160b7:	cmp    al,0x24
   1400160b9:	je     0x1400160d5
   1400160bb:	test   al,al
   1400160bd:	je     0x1400161da
   1400160c3:	mov    rcx,rbx
   1400160c6:	mov    edx,0x2
   1400160cb:	call   0x140011a84
   1400160d0:	jmp    0x1400161fa
   1400160d5:	add    r8,0x2
   1400160d9:	mov    QWORD PTR [rip+0x22e98],r8        # 0x140038f78
   1400160e0:	movsx  ecx,BYTE PTR [r8]
   1400160e4:	test   ecx,ecx
   1400160e6:	je     0x1400161da
   1400160ec:	sub    ecx,0x41
   1400160ef:	je     0x1400161c3
   1400160f5:	dec    ecx
   1400160f7:	je     0x1400161a6
   1400160fd:	dec    ecx
   1400160ff:	je     0x140016170
   140016101:	sub    ecx,0xe
   140016104:	je     0x140016164
   140016106:	dec    ecx
   140016108:	je     0x14001613c
   14001610a:	dec    ecx
   14001610c:	je     0x140016130
   14001610e:	dec    ecx
   140016110:	mov    rcx,rbx
   140016113:	jne    0x1400160c6
   140016115:	inc    r8
   140016118:	lea    rdx,[rip+0x18d01]        # 0x14002ee20
   14001611f:	mov    QWORD PTR [rip+0x22e52],r8        # 0x140038f78
   140016126:	call   0x140011a3c
   14001612b:	jmp    0x1400161fa
   140016130:	inc    r8
   140016133:	mov    QWORD PTR [rip+0x22e3e],r8        # 0x140038f78
   14001613a:	jmp    0x1400160c3
   14001613c:	lea    rdx,[rip+0x18ccd]        # 0x14002ee10
   140016143:	lea    rcx,[rbp-0x30]
   140016147:	call   0x140011e90
   14001614c:	cmp    QWORD PTR [rdi],0x0
   140016150:	je     0x14001615d
   140016152:	lea    rcx,[rbp-0x30]
   140016156:	mov    dl,0x20
   140016158:	call   0x1400122f0
   14001615d:	mov    r8,QWORD PTR [rip+0x22e14]        # 0x140038f78
   140016164:	lea    r9,[rip+0x1858d]        # 0x14002e6f8
   14001616b:	jmp    0x14001607d
   140016170:	and    DWORD PTR [rbp-0x28],edx
   140016173:	and    QWORD PTR [rbp-0x30],0x0
   140016178:	and    DWORD PTR [rsp+0x20],0x0
   14001617d:	inc    r8
   140016180:	lea    r9,[rbp-0x30]
   140016184:	lea    rcx,[rbp-0x10]
   140016188:	mov    QWORD PTR [rip+0x22de9],r8        # 0x140038f78
   14001618f:	lea    r8,[rip+0x148ba]        # 0x14002aa50
   140016196:	mov    rdx,rdi
   140016199:	call   0x140013fc0
   14001619e:	mov    rdx,rax
   1400161a1:	jmp    0x140016041
   1400161a6:	inc    r8
   1400161a9:	mov    rdx,rdi
   1400161ac:	mov    rcx,rbx
   1400161af:	mov    QWORD PTR [rip+0x22dc2],r8        # 0x140038f78
   1400161b6:	mov    r8d,0x1
   1400161bc:	call   0x140016210
   1400161c1:	jmp    0x1400161fa
   1400161c3:	inc    r8
   1400161c6:	mov    rdx,rdi
   1400161c9:	mov    rcx,rbx
   1400161cc:	mov    QWORD PTR [rip+0x22da5],r8        # 0x140038f78
   1400161d3:	call   0x1400151b0
   1400161d8:	jmp    0x1400161fa
   1400161da:	lea    rcx,[rbp-0x20]
   1400161de:	mov    edx,0x1
   1400161e3:	call   0x140011a84
   1400161e8:	mov    rdx,rdi
   1400161eb:	mov    rcx,rbx
   1400161ee:	movups xmm0,XMMWORD PTR [rax]
   1400161f1:	movdqu XMMWORD PTR [rbx],xmm0
   1400161f5:	call   0x1400122b0
   1400161fa:	mov    rdi,QWORD PTR [rsp+0x78]
   1400161ff:	mov    rax,rbx
   140016202:	mov    rbx,QWORD PTR [rsp+0x70]
   140016207:	add    rsp,0x60
   14001620b:	pop    rbp
   14001620c:	ret    
   14001620d:	int3   
   14001620e:	int3   
   14001620f:	int3   
   140016210:	mov    QWORD PTR [rsp+0x8],rbx
   140016215:	mov    QWORD PTR [rsp+0x10],rdi
   14001621a:	push   rbp
   14001621b:	mov    rbp,rsp
   14001621e:	sub    rsp,0x50
   140016222:	mov    rax,QWORD PTR [rip+0x22d4f]        # 0x140038f78
   140016229:	mov    rdi,rdx
   14001622c:	mov    rbx,rcx
   14001622f:	cmp    BYTE PTR [rax],0x0
   140016232:	je     0x1400162e4
   140016238:	test   r8d,r8d
   14001623b:	je     0x140016275
   14001623d:	cmp    BYTE PTR [rax],0x58
   140016240:	jne    0x140016275
   140016242:	inc    rax
   140016245:	mov    QWORD PTR [rip+0x22d2c],rax        # 0x140038f78
   14001624c:	cmp    QWORD PTR [rdx],0x0
   140016250:	jne    0x140016263
   140016252:	lea    rdx,[rip+0x18a1f]        # 0x14002ec78
   140016259:	call   0x140011a3c
   14001625e:	jmp    0x140016304
   140016263:	lea    rdx,[rip+0x18b9a]        # 0x14002ee04
   14001626a:	lea    rcx,[rbp-0x20]
   14001626e:	call   0x140011a3c
   140016273:	jmp    0x1400162f2
   140016275:	cmp    BYTE PTR [rax],0x59
   140016278:	jne    0x14001628b
   14001627a:	inc    rax
   14001627d:	mov    QWORD PTR [rip+0x22cf4],rax        # 0x140038f78
   140016284:	call   0x140013790
   140016289:	jmp    0x140016304
   14001628b:	lea    rcx,[rbp-0x30]
   14001628f:	call   0x140013a94
   140016294:	test   DWORD PTR [rdi+0x8],0x4000
   14001629b:	je     0x1400162c8
   14001629d:	lea    rdx,[rip+0x18cdc]        # 0x14002ef80
   1400162a4:	lea    rcx,[rbp-0x10]
   1400162a8:	call   0x140011a3c
   1400162ad:	lea    rdx,[rbp-0x30]
   1400162b1:	lea    rcx,[rbp-0x20]
   1400162b5:	movups xmm0,XMMWORD PTR [rax]
   1400162b8:	movdqu XMMWORD PTR [rbp-0x20],xmm0
   1400162bd:	call   0x1400122b0
   1400162c2:	movaps xmm0,XMMWORD PTR [rbp-0x20]
   1400162c6:	jmp    0x1400162de
   1400162c8:	test   DWORD PTR [rdi+0x8],0x2000
   1400162cf:	je     0x1400162da
   1400162d1:	lea    rdx,[rip+0x18cb8]        # 0x14002ef90
   1400162d8:	jmp    0x1400162a4
   1400162da:	movaps xmm0,XMMWORD PTR [rbp-0x30]
   1400162de:	movdqu XMMWORD PTR [rbx],xmm0
   1400162e2:	jmp    0x140016304
   1400162e4:	lea    rcx,[rbp-0x10]
   1400162e8:	mov    edx,0x1
   1400162ed:	call   0x140011a84
   1400162f2:	movups xmm0,XMMWORD PTR [rax]
   1400162f5:	mov    rdx,rdi
   1400162f8:	mov    rcx,rbx
   1400162fb:	movdqu XMMWORD PTR [rbx],xmm0
   1400162ff:	call   0x1400122b0
   140016304:	mov    rdi,QWORD PTR [rsp+0x68]
   140016309:	mov    rax,rbx
   14001630c:	mov    rbx,QWORD PTR [rsp+0x60]
   140016311:	add    rsp,0x50
   140016315:	pop    rbp
   140016316:	ret    
   140016317:	int3   
   140016318:	mov    QWORD PTR [rsp+0x8],rbx
   14001631d:	mov    QWORD PTR [rsp+0x10],rsi
   140016322:	mov    QWORD PTR [rsp+0x18],rdi
   140016327:	push   rbp
   140016328:	push   r14
   14001632a:	push   r15
   14001632c:	mov    rbp,rsp
   14001632f:	sub    rsp,0x40
   140016333:	mov    rax,QWORD PTR [rip+0x22c3e]        # 0x140038f78
   14001633a:	mov    rsi,rcx
   14001633d:	xor    ebx,ebx
   14001633f:	mov    cl,BYTE PTR [rax]
   140016341:	mov    r15,r9
   140016344:	mov    rdi,r8
   140016347:	mov    r14,rdx
   14001634a:	test   cl,cl
   14001634c:	je     0x1400163d9
   140016352:	lea    eax,[rcx-0x36]
   140016355:	cmp    al,0x3
   140016357:	jbe    0x14001638f
   140016359:	cmp    cl,0x5f
   14001635c:	je     0x14001638f
   14001635e:	mov    r9,rdx
   140016361:	lea    rcx,[rbp-0x10]
   140016365:	mov    r8,r15
   140016368:	mov    rdx,rdi
   14001636b:	mov    DWORD PTR [rsp+0x20],ebx
   14001636f:	call   0x140013fc0
   140016374:	cmp    BYTE PTR [r15],0x2a
   140016378:	lea    rdx,[rbp-0x10]
   14001637c:	sete   bl
   14001637f:	mov    rcx,rsi
   140016382:	mov    r8d,ebx
   140016385:	call   0x140016210
   14001638a:	jmp    0x14001642d
   14001638f:	lea    rcx,[rbp-0x10]
   140016393:	mov    rdx,r9
   140016396:	call   0x140011a3c
   14001639b:	cmp    QWORD PTR [r14],rbx
   14001639e:	je     0x1400163ba
   1400163a0:	cmp    QWORD PTR [rdi],rbx
   1400163a3:	je     0x1400163ae
   1400163a5:	test   DWORD PTR [rdi+0x8],0x100
   1400163ac:	jne    0x1400163ba
   1400163ae:	lea    rcx,[rbp-0x10]
   1400163b2:	mov    rdx,r14
   1400163b5:	call   0x1400122b0
   1400163ba:	cmp    QWORD PTR [rdi],rbx
   1400163bd:	je     0x1400163cb
   1400163bf:	lea    rcx,[rbp-0x10]
   1400163c3:	mov    rdx,rdi
   1400163c6:	call   0x1400122b0
   1400163cb:	lea    rdx,[rbp-0x10]
   1400163cf:	mov    rcx,rsi
   1400163d2:	call   0x1400151b0
   1400163d7:	jmp    0x14001642d
   1400163d9:	lea    rcx,[rbp-0x10]
   1400163dd:	mov    edx,0x1
   1400163e2:	call   0x140011a84
   1400163e7:	lea    rcx,[rbp-0x10]
   1400163eb:	mov    rdx,r15
   1400163ee:	call   0x14001240c
   1400163f3:	cmp    QWORD PTR [r14],rbx
   1400163f6:	je     0x140016404
   1400163f8:	lea    rcx,[rbp-0x10]
   1400163fc:	mov    rdx,r14
   1400163ff:	call   0x1400122b0
   140016404:	cmp    QWORD PTR [rdi],rbx
   140016407:	je     0x140016425
   140016409:	cmp    QWORD PTR [r14],rbx
   14001640c:	je     0x140016419
   14001640e:	lea    rcx,[rbp-0x10]
   140016412:	mov    dl,0x20
   140016414:	call   0x1400122f0
   140016419:	lea    rcx,[rbp-0x10]
   14001641d:	mov    rdx,rdi
   140016420:	call   0x1400122b0
   140016425:	movups xmm0,XMMWORD PTR [rbp-0x10]
   140016429:	movdqu XMMWORD PTR [rsi],xmm0
   14001642d:	mov    rbx,QWORD PTR [rsp+0x60]
   140016432:	mov    rdi,QWORD PTR [rsp+0x70]
   140016437:	mov    rax,rsi
   14001643a:	mov    rsi,QWORD PTR [rsp+0x68]
   14001643f:	add    rsp,0x40
   140016443:	pop    r15
   140016445:	pop    r14
   140016447:	pop    rbp
   140016448:	ret    
   140016449:	int3   
   14001644a:	int3   
   14001644b:	int3   
   14001644c:	rex push rbx
   14001644e:	sub    rsp,0x20
   140016452:	mov    rbx,rcx
   140016455:	call   0x140016318
   14001645a:	mov    rax,rbx
   14001645d:	add    rsp,0x20
   140016461:	pop    rbx
   140016462:	ret    
   140016463:	int3   
   140016464:	mov    r11,rsp
   140016467:	mov    QWORD PTR [r11+0x8],rbx
   14001646b:	mov    QWORD PTR [r11+0x10],rsi
   14001646f:	push   rdi
   140016470:	sub    rsp,0x30
   140016474:	mov    rax,QWORD PTR [rip+0x22afd]        # 0x140038f78
   14001647b:	mov    rbx,rcx
   14001647e:	cmp    BYTE PTR [rax],0x5f
   140016481:	jne    0x140016569
   140016487:	inc    rax
   14001648a:	mov    QWORD PTR [rip+0x22ae7],rax        # 0x140038f78
   140016491:	movsx  esi,BYTE PTR [rax]
   140016494:	inc    rax
   140016497:	sub    esi,0x41
   14001649a:	mov    QWORD PTR [rip+0x22ad7],rax        # 0x140038f78
   1400164a1:	cmp    esi,0x3
   1400164a4:	ja     0x140016546
   1400164aa:	and    QWORD PTR [r11-0x18],0x0
   1400164af:	mov    eax,DWORD PTR [rip+0x22adf]        # 0x140038f94
   1400164b5:	and    DWORD PTR [rsp+0x28],0xffff0000
   1400164bd:	shr    eax,1
   1400164bf:	not    eax
   1400164c1:	test   al,0x1
   1400164c3:	je     0x14001655e
   1400164c9:	lea    rdx,[rip+0x187d8]        # 0x14002eca8
   1400164d0:	lea    rcx,[r11-0x18]
   1400164d4:	call   0x14001240c
   1400164d9:	mov    eax,DWORD PTR [rip+0x22ab5]        # 0x140038f94
   1400164df:	mov    rdx,QWORD PTR [rip+0x17e1a]        # 0x14002e300
   1400164e6:	not    eax
   1400164e8:	test   al,0x1
   1400164ea:	jne    0x1400164f0
   1400164ec:	add    rdx,0x2
   1400164f0:	lea    rcx,[rsp+0x20]
   1400164f5:	call   0x14001240c
   1400164fa:	test   esi,esi
   1400164fc:	je     0x140016552
   1400164fe:	mov    edi,esi
   140016500:	not    edi
   140016502:	inc    edi
   140016504:	and    edi,esi
   140016506:	mov    eax,edi
   140016508:	dec    eax
   14001650a:	je     0x140016519
   14001650c:	dec    eax
   14001650e:	jne    0x140016543
   140016510:	lea    rdx,[rip+0x1894d]        # 0x14002ee64
   140016517:	jmp    0x140016520
   140016519:	lea    rdx,[rip+0x18940]        # 0x14002ee60
   140016520:	lea    rcx,[rsp+0x20]
   140016525:	call   0x14001240c
   14001652a:	not    edi
   14001652c:	and    esi,edi
   14001652e:	je     0x140016552
   140016530:	lea    rdx,[rip+0x18931]        # 0x14002ee68
   140016537:	lea    rcx,[rsp+0x20]
   14001653c:	call   0x14001240c
   140016541:	jmp    0x1400164fe
   140016543:	mov    rcx,rbx
   140016546:	mov    edx,0x2
   14001654b:	call   0x140011a84
   140016550:	jmp    0x140016578
   140016552:	lea    rcx,[rsp+0x20]
   140016557:	mov    dl,0x29
   140016559:	call   0x1400122f0
   14001655e:	movups xmm0,XMMWORD PTR [rsp+0x20]
   140016563:	movdqu XMMWORD PTR [rbx],xmm0
   140016567:	jmp    0x140016578
   140016569:	and    QWORD PTR [rcx],0x0
   14001656d:	mov    BYTE PTR [rcx+0x8],0x0
   140016571:	and    DWORD PTR [rcx+0x8],0xffff00ff
   140016578:	mov    rsi,QWORD PTR [rsp+0x48]
   14001657d:	mov    rax,rbx
   140016580:	mov    rbx,QWORD PTR [rsp+0x40]
   140016585:	add    rsp,0x30
   140016589:	pop    rdi
   14001658a:	ret    
   14001658b:	int3   
   14001658c:	rex push rbx
   14001658e:	sub    rsp,0x20
   140016592:	mov    rax,QWORD PTR [rip+0x229df]        # 0x140038f78
   140016599:	mov    rbx,rcx
   14001659c:	cmp    BYTE PTR [rax],0x40
   14001659f:	jne    0x1400165b2
   1400165a1:	inc    rax
   1400165a4:	mov    QWORD PTR [rip+0x229cd],rax        # 0x140038f78
   1400165ab:	call   0x1400119b4
   1400165b0:	jmp    0x1400165b7
   1400165b2:	call   0x1400146fc
   1400165b7:	mov    rax,rbx
   1400165ba:	add    rsp,0x20
   1400165be:	pop    rbx
   1400165bf:	ret    
   1400165c0:	mov    rax,rsp
   1400165c3:	mov    QWORD PTR [rax+0x8],rbx
   1400165c7:	mov    QWORD PTR [rax+0x10],rsi
   1400165cb:	mov    QWORD PTR [rax+0x18],rdi
   1400165cf:	mov    QWORD PTR [rax+0x20],r14
   1400165d3:	push   rbp
   1400165d4:	lea    rbp,[rax-0x138]
   1400165db:	sub    rsp,0x230
   1400165e2:	xor    r14d,r14d
   1400165e5:	mov    rdi,rcx
   1400165e8:	mov    BYTE PTR [rcx+0x8],r14b
   1400165ec:	mov    eax,DWORD PTR [rcx+0x8]
   1400165ef:	mov    QWORD PTR [rcx],r14
   1400165f2:	and    eax,0xffff00ff
   1400165f7:	mov    sil,r14b
   1400165fa:	mov    DWORD PTR [rcx+0x8],eax
   1400165fd:	test   al,al
   1400165ff:	jne    0x140016a19
   140016605:	mov    rax,QWORD PTR [rip+0x2296c]        # 0x140038f78
   14001660c:	test   BYTE PTR [rax],0xbf
   14001660f:	je     0x140016a19
   140016615:	cmp    BYTE PTR [rip+0x2297c],r14b        # 0x140038f98
   14001661c:	je     0x14001662b
   14001661e:	cmp    BYTE PTR [rip+0x22974],r14b        # 0x140038f99
   140016625:	je     0x140016a92
   14001662b:	cmp    QWORD PTR [rdi],r14
   14001662e:	je     0x140016691
   140016630:	lea    rdx,[rip+0x185cd]        # 0x14002ec04
   140016637:	lea    rcx,[rbp+0xd0]
   14001663e:	call   0x140011a3c
   140016643:	lea    rcx,[rbp-0x10]
   140016647:	mov    rdx,rdi
   14001664a:	movups xmm0,XMMWORD PTR [rax]
   14001664d:	movdqu XMMWORD PTR [rbp-0x10],xmm0
   140016652:	call   0x1400122b0
   140016657:	movups xmm0,XMMWORD PTR [rbp-0x10]
   14001665b:	movdqu XMMWORD PTR [rdi],xmm0
   14001665f:	test   sil,sil
   140016662:	je     0x140016691
   140016664:	lea    rcx,[rbp+0x120]
   14001666b:	mov    dl,0x5b
   14001666d:	call   0x14001197c
   140016672:	lea    rcx,[rbp-0x80]
   140016676:	mov    rdx,rdi
   140016679:	movups xmm0,XMMWORD PTR [rax]
   14001667c:	movdqu XMMWORD PTR [rbp-0x80],xmm0
   140016681:	call   0x1400122b0
   140016686:	movups xmm0,XMMWORD PTR [rbp-0x80]
   14001668a:	mov    sil,r14b
   14001668d:	movdqu XMMWORD PTR [rdi],xmm0
   140016691:	mov    rax,QWORD PTR [rip+0x228e0]        # 0x140038f78
   140016698:	cmp    BYTE PTR [rax],0x3f
   14001669b:	jne    0x1400169e3
   1400166a1:	inc    rax
   1400166a4:	mov    QWORD PTR [rip+0x228cd],rax        # 0x140038f78
   1400166ab:	movsx  ecx,BYTE PTR [rax]
   1400166ae:	sub    ecx,0x24
   1400166b1:	je     0x1400169ae
   1400166b7:	dec    ecx
   1400166b9:	je     0x140016955
   1400166bf:	sub    ecx,0x1a
   1400166c2:	je     0x140016890
   1400166c8:	sub    ecx,0x2
   1400166cb:	je     0x140016955
   1400166d1:	sub    ecx,0x8
   1400166d4:	je     0x140016844
   1400166da:	cmp    ecx,0x8
   1400166dd:	je     0x14001674b
   1400166df:	lea    rcx,[rbp+0x110]
   1400166e6:	xor    edx,edx
   1400166e8:	call   0x140014a54
   1400166ed:	lea    rcx,[rbp+0xb0]
   1400166f4:	mov    dl,0x60
   1400166f6:	mov    rbx,rax
   1400166f9:	call   0x14001197c
   1400166fe:	lea    rcx,[rsp+0x70]
   140016703:	mov    rdx,rax
   140016706:	call   0x140011970
   14001670b:	lea    rcx,[rsp+0x70]
   140016710:	mov    rdx,rbx
   140016713:	call   0x1400122b0
   140016718:	lea    rcx,[rbp+0x30]
   14001671c:	mov    dl,0x27
   14001671e:	movaps xmm0,XMMWORD PTR [rsp+0x70]
   140016723:	movdqa XMMWORD PTR [rbp+0x30],xmm0
   140016728:	call   0x1400122f0
   14001672d:	lea    rcx,[rbp-0x70]
   140016731:	mov    rdx,rdi
   140016734:	movaps xmm0,XMMWORD PTR [rbp+0x30]
   140016738:	movdqa XMMWORD PTR [rbp-0x70],xmm0
   14001673d:	call   0x1400122b0
   140016742:	movaps xmm0,XMMWORD PTR [rbp-0x70]
   140016746:	jmp    0x140016a0c
   14001674b:	and    DWORD PTR [rsp+0x28],0xffff0000
   140016753:	inc    QWORD PTR [rip+0x2281e]        # 0x140038f78
   14001675a:	mov    QWORD PTR [rsp+0x20],r14
   14001675f:	lea    rcx,[rsp+0x40]
   140016764:	xor    r8d,r8d
   140016767:	mov    dl,0x1
   140016769:	call   0x14001800c
   14001676e:	cmp    BYTE PTR [rsp+0x48],r14b
   140016773:	jne    0x1400167b9
   140016775:	movaps xmm0,XMMWORD PTR [rsp+0x40]
   14001677a:	cmp    QWORD PTR [rsp+0x20],r14
   14001677f:	je     0x1400167b1
   140016781:	lea    rdx,[rip+0x1847c]        # 0x14002ec04
   140016788:	lea    rcx,[rbp+0x50]
   14001678c:	movdqa XMMWORD PTR [rbp+0x50],xmm0
   140016791:	call   0x14001240c
   140016796:	lea    rdx,[rsp+0x20]
   14001679b:	lea    rcx,[rbp+0x0]
   14001679f:	movaps xmm0,XMMWORD PTR [rbp+0x50]
   1400167a3:	movdqa XMMWORD PTR [rbp+0x0],xmm0
   1400167a8:	call   0x1400122b0
   1400167ad:	movaps xmm0,XMMWORD PTR [rbp+0x0]
   1400167b1:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   1400167b7:	jmp    0x1400167ce
   1400167b9:	mov    eax,DWORD PTR [rsp+0x28]
   1400167bd:	mov    QWORD PTR [rsp+0x20],r14
   1400167c2:	and    eax,0xffff0002
   1400167c7:	or     eax,0x2
   1400167ca:	mov    DWORD PTR [rsp+0x28],eax
   1400167ce:	cmp    BYTE PTR [rsp+0x28],r14b
   1400167d3:	jne    0x140016831
   1400167d5:	mov    rax,QWORD PTR [rip+0x2279c]        # 0x140038f78
   1400167dc:	cmp    BYTE PTR [rax],0x40
   1400167df:	jne    0x14001675f
   1400167e5:	lea    rcx,[rbp+0xf0]
   1400167ec:	mov    dl,0x5b
   1400167ee:	call   0x14001197c
   1400167f3:	lea    rdx,[rsp+0x20]
   1400167f8:	lea    rcx,[rbp-0x40]
   1400167fc:	movups xmm0,XMMWORD PTR [rax]
   1400167ff:	movdqu XMMWORD PTR [rbp-0x40],xmm0
   140016804:	call   0x1400122b0
   140016809:	movaps xmm0,XMMWORD PTR [rbp-0x40]
   14001680d:	lea    rcx,[rbp+0x40]
   140016811:	mov    dl,0x5d
   140016813:	movdqa XMMWORD PTR [rbp+0x40],xmm0
   140016818:	call   0x1400122f0
   14001681d:	movaps xmm0,XMMWORD PTR [rbp+0x40]
   140016821:	movdqu XMMWORD PTR [rdi],xmm0
   140016825:	inc    QWORD PTR [rip+0x2274c]        # 0x140038f78
   14001682c:	jmp    0x140016a10
   140016831:	and    DWORD PTR [rdi+0x8],0xffff00ff
   140016838:	mov    QWORD PTR [rdi],r14
   14001683b:	mov    BYTE PTR [rdi+0x8],0x2
   14001683f:	jmp    0x140016a10
   140016844:	inc    QWORD PTR [rip+0x2272d]        # 0x140038f78
   14001684b:	lea    rcx,[rbp+0x80]
   140016852:	xor    r8d,r8d
   140016855:	mov    dl,0x1
   140016857:	call   0x14001800c
   14001685c:	lea    rcx,[rbp-0x20]
   140016860:	mov    dl,0x5d
   140016862:	movups xmm0,XMMWORD PTR [rax]
   140016865:	movdqu XMMWORD PTR [rbp-0x20],xmm0
   14001686a:	call   0x1400122f0
   14001686f:	movaps xmm0,XMMWORD PTR [rbp-0x20]
   140016873:	lea    rcx,[rbp+0x20]
   140016877:	mov    rdx,rdi
   14001687a:	movdqa XMMWORD PTR [rbp+0x20],xmm0
   14001687f:	call   0x1400122b0
   140016884:	mov    sil,0x1
   140016887:	movaps xmm0,XMMWORD PTR [rbp+0x20]
   14001688b:	jmp    0x140016a0c
   140016890:	mov    rax,QWORD PTR [rip+0x226e1]        # 0x140038f78
   140016897:	lea    rcx,[rax+0x1]
   14001689b:	cmp    BYTE PTR [rcx],0x5f
   14001689e:	jne    0x1400168ef
   1400168a0:	cmp    BYTE PTR [rax+0x2],0x3f
   1400168a4:	jne    0x1400168ef
   1400168a6:	mov    QWORD PTR [rip+0x226cb],rcx        # 0x140038f78
   1400168ad:	lea    rcx,[rbp+0x90]
   1400168b4:	xor    r8d,r8d
   1400168b7:	xor    edx,edx
   1400168b9:	call   0x1400158dc
   1400168be:	lea    rcx,[rbp-0x60]
   1400168c2:	mov    rdx,rdi
   1400168c5:	movups xmm0,XMMWORD PTR [rax]
   1400168c8:	movdqu XMMWORD PTR [rbp-0x60],xmm0
   1400168cd:	call   0x1400122b0
   1400168d2:	movups xmm0,XMMWORD PTR [rbp-0x60]
   1400168d6:	movdqu XMMWORD PTR [rdi],xmm0
   1400168da:	mov    rax,QWORD PTR [rip+0x22697]        # 0x140038f78
   1400168e1:	cmp    BYTE PTR [rax],0x40
   1400168e4:	jne    0x140016a10
   1400168ea:	jmp    0x140016825
   1400168ef:	lea    rcx,[rbp+0xa0]
   1400168f6:	call   0x1400147e0
   1400168fb:	lea    rcx,[rbp+0xc0]
   140016902:	mov    dl,0x60
   140016904:	mov    rbx,rax
   140016907:	call   0x14001197c
   14001690c:	lea    rcx,[rbp-0x50]
   140016910:	mov    rdx,rbx
   140016913:	movups xmm0,XMMWORD PTR [rax]
   140016916:	movdqu XMMWORD PTR [rbp-0x50],xmm0
   14001691b:	call   0x1400122b0
   140016920:	movaps xmm0,XMMWORD PTR [rbp-0x50]
   140016924:	lea    rcx,[rbp-0x30]
   140016928:	mov    dl,0x27
   14001692a:	movdqa XMMWORD PTR [rbp-0x30],xmm0
   14001692f:	call   0x1400122f0
   140016934:	lea    rcx,[rsp+0x50]
   140016939:	movaps xmm0,XMMWORD PTR [rbp-0x30]
   14001693d:	mov    rdx,rdi
   140016940:	movdqa XMMWORD PTR [rsp+0x50],xmm0
   140016946:	call   0x1400122b0
   14001694b:	movaps xmm0,XMMWORD PTR [rsp+0x50]
   140016950:	jmp    0x140016a0c
   140016955:	lea    rdx,[rip+0x2261c]        # 0x140038f78
   14001695c:	lea    rcx,[rbp+0x60]
   140016960:	mov    r8b,0x40
   140016963:	call   0x140011890
   140016968:	lea    rdx,[rip+0x182c9]        # 0x14002ec38
   14001696f:	lea    rcx,[rbp+0xe0]
   140016976:	call   0x140011a3c
   14001697b:	lea    rcx,[rbp+0x10]
   14001697f:	mov    rdx,rdi
   140016982:	movups xmm0,XMMWORD PTR [rax]
   140016985:	movdqu XMMWORD PTR [rbp+0x10],xmm0
   14001698a:	call   0x1400122b0
   14001698f:	movups xmm0,XMMWORD PTR [rbp+0x10]
   140016993:	movdqu XMMWORD PTR [rdi],xmm0
   140016997:	mov    rcx,QWORD PTR [rip+0x225ca]        # 0x140038f68
   14001699e:	cmp    DWORD PTR [rcx],0x9
   1400169a1:	je     0x140016a10
   1400169a3:	lea    rdx,[rbp+0x60]
   1400169a7:	call   0x1400124dc
   1400169ac:	jmp    0x140016a10
   1400169ae:	dec    QWORD PTR [rip+0x225c3]        # 0x140038f78
   1400169b5:	lea    rcx,[rbp+0x100]
   1400169bc:	xor    r8d,r8d
   1400169bf:	mov    dl,0x1
   1400169c1:	call   0x14001800c
   1400169c6:	lea    rcx,[rsp+0x60]
   1400169cb:	mov    rdx,rdi
   1400169ce:	movups xmm0,XMMWORD PTR [rax]
   1400169d1:	movdqu XMMWORD PTR [rsp+0x60],xmm0
   1400169d7:	call   0x1400122b0
   1400169dc:	movups xmm0,XMMWORD PTR [rsp+0x60]
   1400169e1:	jmp    0x140016a0c
   1400169e3:	lea    rcx,[rbp+0x70]
   1400169e7:	xor    r8d,r8d
   1400169ea:	mov    dl,0x1
   1400169ec:	call   0x14001800c
   1400169f1:	lea    rcx,[rsp+0x30]
   1400169f6:	mov    rdx,rdi
   1400169f9:	movups xmm0,XMMWORD PTR [rax]
   1400169fc:	movdqu XMMWORD PTR [rsp+0x30],xmm0
   140016a02:	call   0x1400122b0
   140016a07:	movups xmm0,XMMWORD PTR [rsp+0x30]
   140016a0c:	movdqu XMMWORD PTR [rdi],xmm0
   140016a10:	cmp    BYTE PTR [rdi+0x8],r14b
   140016a14:	jmp    0x1400165ff
   140016a19:	mov    rax,QWORD PTR [rip+0x22558]        # 0x140038f78
   140016a20:	cmp    BYTE PTR [rax],r14b
   140016a23:	je     0x140016a3a
   140016a25:	cmp    BYTE PTR [rax],0x40
   140016a28:	je     0x140016a92
   140016a2a:	and    DWORD PTR [rdi+0x8],0xffff00ff
   140016a31:	mov    QWORD PTR [rdi],r14
   140016a34:	mov    BYTE PTR [rdi+0x8],0x2
   140016a38:	jmp    0x140016a92
   140016a3a:	mov    edx,0x1
   140016a3f:	cmp    QWORD PTR [rdi],r14
   140016a42:	jne    0x140016a4e
   140016a44:	mov    rcx,rdi
   140016a47:	call   0x140011ed0
   140016a4c:	jmp    0x140016a92
   140016a4e:	lea    rcx,[rbp+0x70]
   140016a52:	call   0x140011a84
   140016a57:	lea    rdx,[rip+0x181a6]        # 0x14002ec04
   140016a5e:	lea    rcx,[rsp+0x30]
   140016a63:	movups xmm0,XMMWORD PTR [rax]
   140016a66:	movdqu XMMWORD PTR [rsp+0x30],xmm0
   140016a6c:	call   0x14001240c
   140016a71:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   140016a76:	lea    rcx,[rsp+0x30]
   140016a7b:	mov    rdx,rdi
   140016a7e:	movdqa XMMWORD PTR [rsp+0x30],xmm0
   140016a84:	call   0x1400122b0
   140016a89:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   140016a8e:	movdqu XMMWORD PTR [rdi],xmm0
   140016a92:	lea    r11,[rsp+0x230]
   140016a9a:	mov    rax,rdi
   140016a9d:	mov    rbx,QWORD PTR [r11+0x10]
   140016aa1:	mov    rsi,QWORD PTR [r11+0x18]
   140016aa5:	mov    rdi,QWORD PTR [r11+0x20]
   140016aa9:	mov    r14,QWORD PTR [r11+0x28]
   140016aad:	mov    rsp,r11
   140016ab0:	pop    rbp
   140016ab1:	ret    
   140016ab2:	int3   
   140016ab3:	int3   
   140016ab4:	mov    QWORD PTR [rsp+0x8],rbx
   140016ab9:	push   rbp
   140016aba:	mov    rbp,rsp
   140016abd:	sub    rsp,0x40
   140016ac1:	and    QWORD PTR [rcx],0x0
   140016ac5:	mov    BYTE PTR [rcx+0x8],0x0
   140016ac9:	and    DWORD PTR [rcx+0x8],0xffff00ff
   140016ad0:	mov    rbx,rcx
   140016ad3:	lea    rcx,[rbp-0x20]
   140016ad7:	xor    r8d,r8d
   140016ada:	mov    dl,0x1
   140016adc:	call   0x14001800c
   140016ae1:	movups xmm0,XMMWORD PTR [rax]
   140016ae4:	movdqu XMMWORD PTR [rbx],xmm0
   140016ae8:	cmp    BYTE PTR [rbx+0x8],0x0
   140016aec:	mov    rax,QWORD PTR [rip+0x22485]        # 0x140038f78
   140016af3:	jne    0x140016b44
   140016af5:	cmp    BYTE PTR [rax],0x0
   140016af8:	je     0x140016b44
   140016afa:	cmp    BYTE PTR [rax],0x40
   140016afd:	je     0x140016b49
   140016aff:	lea    rcx,[rbp-0x10]
   140016b03:	call   0x1400165c0
   140016b08:	lea    rdx,[rip+0x180f5]        # 0x14002ec04
   140016b0f:	lea    rcx,[rbp-0x20]
   140016b13:	movups xmm0,XMMWORD PTR [rax]
   140016b16:	movdqu XMMWORD PTR [rbp-0x20],xmm0
   140016b1b:	call   0x14001240c
   140016b20:	movaps xmm0,XMMWORD PTR [rbp-0x20]
   140016b24:	lea    rcx,[rbp-0x20]
   140016b28:	mov    rdx,rbx
   140016b2b:	movdqa XMMWORD PTR [rbp-0x20],xmm0
   140016b30:	call   0x1400122b0
   140016b35:	movaps xmm0,XMMWORD PTR [rbp-0x20]
   140016b39:	movdqu XMMWORD PTR [rbx],xmm0
   140016b3d:	mov    rax,QWORD PTR [rip+0x22434]        # 0x140038f78
   140016b44:	cmp    BYTE PTR [rax],0x40
   140016b47:	jne    0x140016b55
   140016b49:	inc    rax
   140016b4c:	mov    QWORD PTR [rip+0x22425],rax        # 0x140038f78
   140016b53:	jmp    0x140016bbe
   140016b55:	cmp    BYTE PTR [rax],0x0
   140016b58:	je     0x140016b6b
   140016b5a:	and    DWORD PTR [rbx+0x8],0xffff00ff
   140016b61:	and    QWORD PTR [rbx],0x0
   140016b65:	mov    BYTE PTR [rbx+0x8],0x2
   140016b69:	jmp    0x140016bbe
   140016b6b:	cmp    QWORD PTR [rbx],0x0
   140016b6f:	mov    edx,0x1
   140016b74:	jne    0x140016b80
   140016b76:	mov    rcx,rbx
   140016b79:	call   0x140011ed0
   140016b7e:	jmp    0x140016bbe
   140016b80:	lea    rcx,[rbp-0x10]
   140016b84:	call   0x140011a84
   140016b89:	lea    rdx,[rip+0x18074]        # 0x14002ec04
   140016b90:	lea    rcx,[rbp-0x20]
   140016b94:	movups xmm0,XMMWORD PTR [rax]
   140016b97:	movdqu XMMWORD PTR [rbp-0x20],xmm0
   140016b9c:	call   0x14001240c
   140016ba1:	movaps xmm0,XMMWORD PTR [rbp-0x20]
   140016ba5:	lea    rcx,[rbp-0x20]
   140016ba9:	mov    rdx,rbx
   140016bac:	movdqa XMMWORD PTR [rbp-0x20],xmm0
   140016bb1:	call   0x1400122b0
   140016bb6:	movaps xmm0,XMMWORD PTR [rbp-0x20]
   140016bba:	movdqu XMMWORD PTR [rbx],xmm0
   140016bbe:	mov    rax,rbx
   140016bc1:	mov    rbx,QWORD PTR [rsp+0x50]
   140016bc6:	add    rsp,0x40
   140016bca:	pop    rbp
   140016bcb:	ret    
   140016bcc:	mov    QWORD PTR [rsp+0x8],rbx
   140016bd1:	push   rdi
   140016bd2:	sub    rsp,0x40
   140016bd6:	mov    rdi,rcx
   140016bd9:	mov    rcx,QWORD PTR [rip+0x22398]        # 0x140038f78
   140016be0:	mov    al,BYTE PTR [rcx]
   140016be2:	test   al,al
   140016be4:	jne    0x140016bf5
   140016be6:	mov    edx,0x1
   140016beb:	mov    rcx,rdi
   140016bee:	call   0x140011a84
   140016bf3:	jmp    0x140016c3a
   140016bf5:	xor    edx,edx
   140016bf7:	cmp    al,0x3f
   140016bf9:	jne    0x140016c32
   140016bfb:	inc    rcx
   140016bfe:	mov    QWORD PTR [rip+0x22373],rcx        # 0x140038f78
   140016c05:	lea    rcx,[rsp+0x20]
   140016c0a:	call   0x140014a54
   140016c0f:	lea    rcx,[rsp+0x30]
   140016c14:	mov    dl,0x2d
   140016c16:	mov    rbx,rax
   140016c19:	call   0x14001197c
   140016c1e:	mov    rdx,rbx
   140016c21:	mov    rcx,rdi
   140016c24:	movups xmm0,XMMWORD PTR [rax]
   140016c27:	movdqu XMMWORD PTR [rdi],xmm0
   140016c2b:	call   0x1400122b0
   140016c30:	jmp    0x140016c3a
   140016c32:	mov    rcx,rdi
   140016c35:	call   0x140014a54
   140016c3a:	mov    rax,rdi
   140016c3d:	mov    rbx,QWORD PTR [rsp+0x50]
   140016c42:	add    rsp,0x40
   140016c46:	pop    rdi
   140016c47:	ret    
   140016c48:	mov    r11,rsp
   140016c4b:	push   rbx
   140016c4c:	sub    rsp,0x50
   140016c50:	mov    rbx,rcx
   140016c53:	xor    ecx,ecx
   140016c55:	mov    eax,0xffff0000
   140016c5a:	mov    QWORD PTR [r11-0x28],rcx
   140016c5e:	and    DWORD PTR [rsp+0x38],eax
   140016c62:	mov    QWORD PTR [r11-0x18],rcx
   140016c66:	and    DWORD PTR [rsp+0x48],eax
   140016c6a:	mov    DWORD PTR [rsp+0x20],ecx
   140016c6e:	lea    r9,[r11-0x28]
   140016c72:	lea    r8,[rip+0x13dd7]        # 0x14002aa50
   140016c79:	lea    rdx,[r11-0x18]
   140016c7d:	mov    rcx,rbx
   140016c80:	call   0x140013fc0
   140016c85:	mov    rax,rbx
   140016c88:	add    rsp,0x50
   140016c8c:	pop    rbx
   140016c8d:	ret    
   140016c8e:	int3   
   140016c8f:	int3   
   140016c90:	mov    rcx,QWORD PTR [rcx]
   140016c93:	test   rcx,rcx
   140016c96:	jne    0x140016c9c
   140016c98:	mov    rax,rdx
   140016c9b:	ret    
   140016c9c:	mov    rax,QWORD PTR [rcx]
   140016c9f:	rex.W jmp QWORD PTR [rax+0x10]
   140016ca3:	int3   
   140016ca4:	mov    QWORD PTR [rsp+0x8],rbx
   140016ca9:	mov    QWORD PTR [rsp+0x10],rsi
   140016cae:	push   rdi
   140016caf:	sub    rsp,0x20
   140016cb3:	mov    rdi,rcx
   140016cb6:	mov    rcx,QWORD PTR [rcx]
   140016cb9:	mov    esi,r8d
   140016cbc:	mov    rbx,rdx
   140016cbf:	test   rcx,rcx
   140016cc2:	je     0x140016d10
   140016cc4:	test   rdx,rdx
   140016cc7:	jne    0x140016ceb
   140016cc9:	mov    rax,QWORD PTR [rcx]
   140016ccc:	call   QWORD PTR [rax]
   140016cce:	lea    rcx,[rip+0x222cb]        # 0x140038fa0
   140016cd5:	xor    r8d,r8d
   140016cd8:	lea    esi,[rax+0x1]
   140016cdb:	movsxd rdx,esi
   140016cde:	call   0x1400157b8
   140016ce3:	mov    rbx,rax
   140016ce6:	test   rax,rax
   140016ce9:	je     0x140016d18
   140016ceb:	mov    rcx,QWORD PTR [rdi]
   140016cee:	test   rcx,rcx
   140016cf1:	jne    0x140016cf8
   140016cf3:	mov    rax,rbx
   140016cf6:	jmp    0x140016d0b
   140016cf8:	mov    r9,QWORD PTR [rcx]
   140016cfb:	movsxd r8,esi
   140016cfe:	mov    rdx,rbx
   140016d01:	dec    r8
   140016d04:	add    r8,rbx
   140016d07:	call   QWORD PTR [r9+0x10]
   140016d0b:	mov    BYTE PTR [rax],0x0
   140016d0e:	jmp    0x140016d18
   140016d10:	test   rdx,rdx
   140016d13:	je     0x140016d18
   140016d15:	mov    BYTE PTR [rdx],0x0
   140016d18:	mov    rsi,QWORD PTR [rsp+0x38]
   140016d1d:	mov    rax,rbx
   140016d20:	mov    rbx,QWORD PTR [rsp+0x30]
   140016d25:	add    rsp,0x20
   140016d29:	pop    rdi
   140016d2a:	ret    
   140016d2b:	int3   
   140016d2c:	cmp    DWORD PTR [rcx+0x8],0x1
   140016d30:	jne    0x140016d6b
   140016d32:	sub    r8d,edx
   140016d35:	mov    ecx,0x4
   140016d3a:	cmp    r8d,ecx
   140016d3d:	cmovl  ecx,r8d
   140016d41:	test   ecx,ecx
   140016d43:	je     0x140016d64
   140016d45:	lea    r9,[rip+0x1832c]        # 0x14002f078
   140016d4c:	mov    r8,rdx
   140016d4f:	mov    r10d,ecx
   140016d52:	sub    r9,rdx
   140016d55:	mov    al,BYTE PTR [r9+r8*1]
   140016d59:	mov    BYTE PTR [r8],al
   140016d5c:	inc    r8
   140016d5f:	dec    r10
   140016d62:	jne    0x140016d55
   140016d64:	movsxd rax,ecx
   140016d67:	add    rax,rdx
   140016d6a:	ret    
   140016d6b:	mov    rax,rdx
   140016d6e:	ret    
   140016d6f:	int3   
   140016d70:	cmp    rdx,r8
   140016d73:	jae    0x140016d7d
   140016d75:	mov    al,BYTE PTR [rcx+0x8]
   140016d78:	mov    BYTE PTR [rdx],al
   140016d7a:	inc    rdx
   140016d7d:	mov    rax,rdx
   140016d80:	ret    
   140016d81:	int3   
   140016d82:	int3   
   140016d83:	int3   
   140016d84:	sub    rsp,0x28
   140016d88:	mov    rcx,QWORD PTR [rcx+0x8]
   140016d8c:	test   rcx,rcx
   140016d8f:	je     0x140016da2
   140016d91:	mov    rcx,QWORD PTR [rcx]
   140016d94:	test   rcx,rcx
   140016d97:	je     0x140016da2
   140016d99:	mov    rax,QWORD PTR [rcx]
   140016d9c:	call   QWORD PTR [rax+0x10]
   140016d9f:	mov    rdx,rax
   140016da2:	mov    rax,rdx
   140016da5:	add    rsp,0x28
   140016da9:	ret    
   140016daa:	int3   
   140016dab:	int3   
   140016dac:	mov    QWORD PTR [rsp+0x8],rbx
   140016db1:	push   rdi
   140016db2:	sub    rsp,0x20
   140016db6:	mov    rdi,rcx
   140016db9:	mov    rcx,QWORD PTR [rcx+0x8]
   140016dbd:	mov    rbx,r8
   140016dc0:	mov    rax,QWORD PTR [rcx]
   140016dc3:	call   QWORD PTR [rax+0x10]
   140016dc6:	cmp    rax,rbx
   140016dc9:	jae    0x140016ddc
   140016dcb:	mov    rcx,QWORD PTR [rdi+0x10]
   140016dcf:	mov    r8,rbx
   140016dd2:	mov    rdx,rax
   140016dd5:	mov    r9,QWORD PTR [rcx]
   140016dd8:	call   QWORD PTR [r9+0x10]
   140016ddc:	mov    rbx,QWORD PTR [rsp+0x30]
   140016de1:	add    rsp,0x20
   140016de5:	pop    rdi
   140016de6:	ret    
   140016de7:	int3   
   140016de8:	mov    r9d,DWORD PTR [rcx+0x10]
   140016dec:	mov    r10,QWORD PTR [rcx+0x8]
   140016df0:	sub    r8d,edx
   140016df3:	cmp    r9d,r8d
   140016df6:	cmovg  r9d,r8d
   140016dfa:	test   r9d,r9d
   140016dfd:	je     0x140016e16
   140016dff:	mov    rcx,rdx
   140016e02:	sub    r10,rdx
   140016e05:	mov    r8d,r9d
   140016e08:	mov    al,BYTE PTR [r10+rcx*1]
   140016e0c:	mov    BYTE PTR [rcx],al
   140016e0e:	inc    rcx
   140016e11:	dec    r8
   140016e14:	jne    0x140016e08
   140016e16:	movsxd rax,r9d
   140016e19:	add    rax,rdx
   140016e1c:	ret    
   140016e1d:	int3   
   140016e1e:	int3   
   140016e1f:	int3   
   140016e20:	rex push rbx
   140016e22:	sub    rsp,0x40
   140016e26:	mov    rbx,rcx
   140016e29:	lea    rcx,[rsp+0x20]
   140016e2e:	call   0x140011a3c
   140016e33:	mov    rdx,QWORD PTR [rip+0x2213e]        # 0x140038f78
   140016e3a:	mov    al,BYTE PTR [rdx]
   140016e3c:	inc    rdx
   140016e3f:	mov    QWORD PTR [rip+0x22132],rdx        # 0x140038f78
   140016e46:	cmp    al,0x40
   140016e48:	jne    0x140016ec9
   140016e4a:	mov    al,BYTE PTR [rdx]
   140016e4c:	inc    rdx
   140016e4f:	mov    QWORD PTR [rip+0x22122],rdx        # 0x140038f78
   140016e56:	cmp    al,0x5f
   140016e58:	jne    0x140016ec9
   140016e5a:	inc    rdx
   140016e5d:	lea    rcx,[rsp+0x30]
   140016e62:	mov    QWORD PTR [rip+0x2210f],rdx        # 0x140038f78
   140016e69:	xor    edx,edx
   140016e6b:	call   0x140014a54
   140016e70:	lea    rcx,[rsp+0x30]
   140016e75:	xor    edx,edx
   140016e77:	call   0x140014a54
   140016e7c:	mov    rax,QWORD PTR [rip+0x220f5]        # 0x140038f78
   140016e83:	mov    cl,BYTE PTR [rax]
   140016e85:	test   cl,cl
   140016e87:	je     0x140016eb8
   140016e89:	cmp    cl,0x40
   140016e8c:	je     0x140016e9e
   140016e8e:	inc    rax
   140016e91:	mov    QWORD PTR [rip+0x220e0],rax        # 0x140038f78
   140016e98:	mov    cl,BYTE PTR [rax]
   140016e9a:	test   cl,cl
   140016e9c:	jne    0x140016e89
   140016e9e:	cmp    BYTE PTR [rax],0x0
   140016ea1:	je     0x140016eb8
   140016ea3:	movups xmm0,XMMWORD PTR [rsp+0x20]
   140016ea8:	inc    rax
   140016eab:	mov    QWORD PTR [rip+0x220c6],rax        # 0x140038f78
   140016eb2:	movdqu XMMWORD PTR [rbx],xmm0
   140016eb6:	jmp    0x140016ed6
   140016eb8:	dec    rax
   140016ebb:	mov    edx,0x1
   140016ec0:	mov    QWORD PTR [rip+0x220b1],rax        # 0x140038f78
   140016ec7:	jmp    0x140016ece
   140016ec9:	mov    edx,0x2
   140016ece:	mov    rcx,rbx
   140016ed1:	call   0x140011a84
   140016ed6:	mov    rax,rbx
   140016ed9:	add    rsp,0x40
   140016edd:	pop    rbx
   140016ede:	ret    
   140016edf:	int3   
   140016ee0:	sub    edx,ecx
   140016ee2:	cmp    r9d,edx
   140016ee5:	cmovg  r9d,edx
   140016ee9:	test   r9d,r9d
   140016eec:	je     0x140016f05
   140016eee:	mov    rdx,rcx
   140016ef1:	sub    r8,rcx
   140016ef4:	mov    r10d,r9d
   140016ef7:	mov    al,BYTE PTR [r8+rdx*1]
   140016efb:	mov    BYTE PTR [rdx],al
   140016efd:	inc    rdx
   140016f00:	dec    r10
   140016f03:	jne    0x140016ef7
   140016f05:	movsxd rax,r9d
   140016f08:	add    rax,rcx
   140016f0b:	ret    
   140016f0c:	rex push rbx
   140016f0e:	sub    rsp,0x20
   140016f12:	mov    rax,QWORD PTR [rip+0x2205f]        # 0x140038f78
   140016f19:	mov    rbx,rcx
   140016f1c:	cmp    BYTE PTR [rax],0x3f
   140016f1f:	jne    0x140016f45
   140016f21:	inc    rax
   140016f24:	cmp    BYTE PTR [rax],0x24
   140016f27:	jne    0x140016f32
   140016f29:	mov    dl,0x1
   140016f2b:	call   0x1400175c0
   140016f30:	jmp    0x140016f4f
   140016f32:	xor    r8d,r8d
   140016f35:	xor    edx,edx
   140016f37:	mov    QWORD PTR [rip+0x2203a],rax        # 0x140038f78
   140016f3e:	call   0x1400158dc
   140016f43:	jmp    0x140016f4f
   140016f45:	xor    r8d,r8d
   140016f48:	mov    dl,0x1
   140016f4a:	call   0x14001800c
   140016f4f:	mov    rax,rbx
   140016f52:	add    rsp,0x20
   140016f56:	pop    rbx
   140016f57:	ret    
   140016f58:	mov    rax,rsp
   140016f5b:	mov    QWORD PTR [rax+0x10],rbx
   140016f5f:	mov    QWORD PTR [rax+0x18],rsi
   140016f63:	mov    QWORD PTR [rax+0x20],rdi
   140016f67:	push   rbp
   140016f68:	push   r14
   140016f6a:	push   r15
   140016f6c:	lea    rbp,[rax-0x5f]
   140016f70:	sub    rsp,0x100
   140016f77:	mov    rax,QWORD PTR [rip+0x1fac2]        # 0x140036a40
   140016f7e:	xor    rax,rsp
   140016f81:	mov    QWORD PTR [rbp+0x37],rax
   140016f85:	and    QWORD PTR [rcx],0x0
   140016f89:	mov    BYTE PTR [rcx+0x8],0x0
   140016f8d:	and    DWORD PTR [rcx+0x8],0xffff00ff
   140016f94:	mov    r15b,0x1
   140016f97:	mov    rbx,rcx
   140016f9a:	mov    BYTE PTR [rip+0x21ff8],r15b        # 0x140038f99
   140016fa1:	cmp    BYTE PTR [rcx+0x8],0x0
   140016fa5:	jne    0x14001720f
   140016fab:	mov    rcx,QWORD PTR [rip+0x21fc6]        # 0x140038f78
   140016fb2:	test   BYTE PTR [rcx],0xbf
   140016fb5:	je     0x14001720f
   140016fbb:	xor    sil,sil
   140016fbe:	test   r15b,r15b
   140016fc1:	je     0x140016fc8
   140016fc3:	xor    r15b,r15b
   140016fc6:	jmp    0x140016fcb
   140016fc8:	mov    sil,0x1
   140016fcb:	movsx  r8d,BYTE PTR [rcx]
   140016fcf:	sub    r8d,0x30
   140016fd3:	cmp    r8d,0x9
   140016fd7:	ja     0x140017003
   140016fd9:	inc    rcx
   140016fdc:	lea    rdx,[rbp-0x29]
   140016fe0:	mov    QWORD PTR [rip+0x21f91],rcx        # 0x140038f78
   140016fe7:	mov    rcx,QWORD PTR [rip+0x21f82]        # 0x140038f70
   140016fee:	call   0x140011f0c
   140016ff3:	mov    rcx,rbx
   140016ff6:	mov    rdx,rax
   140016ff9:	call   0x1400122b0
   140016ffe:	jmp    0x1400171fe
   140017003:	and    QWORD PTR [rsp+0x20],0x0
   140017009:	and    DWORD PTR [rsp+0x28],0xffff0000
   140017011:	xor    dil,dil
   140017014:	cmp    BYTE PTR [rcx],0x24
   140017017:	mov    r14,rcx
   14001701a:	jne    0x140017037
   14001701c:	cmp    BYTE PTR [rcx+0x1],0x24
   140017020:	jne    0x140017037
   140017022:	mov    al,BYTE PTR [rcx+0x2]
   140017025:	cmp    al,0x57
   140017027:	jne    0x14001705d
   140017029:	add    rcx,0x3
   14001702d:	mov    dil,0x1
   140017030:	mov    QWORD PTR [rip+0x21f41],rcx        # 0x140038f78
   140017037:	mov    al,BYTE PTR [rcx]
   140017039:	cmp    al,0x58
   14001703b:	jne    0x140017071
   14001703d:	inc    rcx
   140017040:	lea    rdx,[rip+0x17c31]        # 0x14002ec78
   140017047:	mov    QWORD PTR [rip+0x21f2a],rcx        # 0x140038f78
   14001704e:	lea    rcx,[rsp+0x20]
   140017053:	call   0x140011e90
   140017058:	jmp    0x140017193
   14001705d:	cmp    al,0x56
   14001705f:	jne    0x140017037
   140017061:	add    rcx,0x3
   140017065:	mov    QWORD PTR [rip+0x21f0c],rcx        # 0x140038f78
   14001706c:	jmp    0x140017205
   140017071:	cmp    al,0x24
   140017073:	jne    0x140017091
   140017075:	inc    rcx
   140017078:	cmp    BYTE PTR [rcx],al
   14001707a:	je     0x140017091
   14001707c:	mov    QWORD PTR [rip+0x21ef5],rcx        # 0x140038f78
   140017083:	lea    rcx,[rbp-0x9]
   140017087:	call   0x140017244
   14001708c:	jmp    0x14001718a
   140017091:	cmp    al,0x3f
   140017093:	jne    0x140017171
   140017099:	lea    rcx,[rsp+0x30]
   14001709e:	call   0x140016bcc
   1400170a3:	test   DWORD PTR [rip+0x21ee7],0x4000        # 0x140038f94
   1400170ad:	je     0x140017126
   1400170af:	lea    rdx,[rbp+0x27]
   1400170b3:	lea    rcx,[rsp+0x30]
   1400170b8:	mov    r8d,0x10
   1400170be:	call   0x140016ca4
   1400170c3:	lea    rcx,[rbp+0x27]
   1400170c7:	call   0x14001c554
   1400170cc:	mov    ecx,eax
   1400170ce:	call   QWORD PTR [rip+0x21e84]        # 0x140038f58
   1400170d4:	test   rax,rax
   1400170d7:	je     0x1400170e1
   1400170d9:	mov    rdx,rax
   1400170dc:	jmp    0x14001704e
   1400170e1:	lea    rdx,[rip+0x17b98]        # 0x14002ec80
   1400170e8:	lea    rcx,[rbp-0x19]
   1400170ec:	call   0x140011a3c
   1400170f1:	lea    rdx,[rsp+0x30]
   1400170f6:	lea    rcx,[rbp-0x39]
   1400170fa:	movups xmm0,XMMWORD PTR [rax]
   1400170fd:	movdqu XMMWORD PTR [rbp-0x39],xmm0
   140017102:	call   0x1400122b0
   140017107:	movaps xmm0,XMMWORD PTR [rbp-0x39]
   14001710b:	lea    rdx,[rip+0x17b22]        # 0x14002ec34
   140017112:	lea    rcx,[rbp-0x49]
   140017116:	movdqa XMMWORD PTR [rbp-0x49],xmm0
   14001711b:	call   0x14001240c
   140017120:	movaps xmm0,XMMWORD PTR [rbp-0x49]
   140017124:	jmp    0x140017169
   140017126:	lea    rdx,[rip+0x17b53]        # 0x14002ec80
   14001712d:	lea    rcx,[rbp+0x17]
   140017131:	call   0x140011a3c
   140017136:	lea    rdx,[rsp+0x30]
   14001713b:	lea    rcx,[rbp-0x59]
   14001713f:	movups xmm0,XMMWORD PTR [rax]
   140017142:	movdqu XMMWORD PTR [rbp-0x59],xmm0
   140017147:	call   0x1400122b0
   14001714c:	movaps xmm0,XMMWORD PTR [rbp-0x59]
   140017150:	lea    rdx,[rip+0x17add]        # 0x14002ec34
   140017157:	lea    rcx,[rbp-0x69]
   14001715b:	movdqa XMMWORD PTR [rbp-0x69],xmm0
   140017160:	call   0x14001240c
   140017165:	movaps xmm0,XMMWORD PTR [rbp-0x69]
   140017169:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   14001716f:	jmp    0x140017193
   140017171:	and    QWORD PTR [rbp-0x79],0x0
   140017176:	and    DWORD PTR [rbp-0x71],0xffff0000
   14001717d:	lea    rdx,[rbp-0x79]
   140017181:	lea    rcx,[rbp+0x7]
   140017185:	call   0x140015ff8
   14001718a:	movups xmm0,XMMWORD PTR [rax]
   14001718d:	movdqu XMMWORD PTR [rsp+0x20],xmm0
   140017193:	mov    rcx,QWORD PTR [rip+0x21dde]        # 0x140038f78
   14001719a:	mov    rax,rcx
   14001719d:	sub    rax,r14
   1400171a0:	cmp    rax,0x1
   1400171a4:	jle    0x1400171c6
   1400171a6:	mov    rax,QWORD PTR [rip+0x21dc3]        # 0x140038f70
   1400171ad:	cmp    DWORD PTR [rax],0x9
   1400171b0:	je     0x1400171c6
   1400171b2:	lea    rdx,[rsp+0x20]
   1400171b7:	mov    rcx,rax
   1400171ba:	call   0x1400124dc
   1400171bf:	mov    rcx,QWORD PTR [rip+0x21db2]        # 0x140038f78
   1400171c6:	cmp    QWORD PTR [rsp+0x20],0x0
   1400171cc:	je     0x140017205
   1400171ce:	test   sil,sil
   1400171d1:	je     0x1400171dd
   1400171d3:	mov    dl,0x2c
   1400171d5:	mov    rcx,rbx
   1400171d8:	call   0x1400122f0
   1400171dd:	lea    rdx,[rsp+0x20]
   1400171e2:	mov    rcx,rbx
   1400171e5:	call   0x1400122b0
   1400171ea:	test   dil,dil
   1400171ed:	je     0x1400171fe
   1400171ef:	lea    rdx,[rip+0x17a9e]        # 0x14002ec94
   1400171f6:	mov    rcx,rbx
   1400171f9:	call   0x14001240c
   1400171fe:	mov    rcx,QWORD PTR [rip+0x21d73]        # 0x140038f78
   140017205:	cmp    BYTE PTR [rbx+0x8],0x0
   140017209:	je     0x140016fb2
   14001720f:	mov    BYTE PTR [rip+0x21d83],0x0        # 0x140038f99
   140017216:	mov    rax,rbx
   140017219:	mov    rcx,QWORD PTR [rbp+0x37]
   14001721d:	xor    rcx,rsp
   140017220:	call   0x14000d0a0
   140017225:	lea    r11,[rsp+0x100]
   14001722d:	mov    rbx,QWORD PTR [r11+0x28]
   140017231:	mov    rsi,QWORD PTR [r11+0x30]
   140017235:	mov    rdi,QWORD PTR [r11+0x38]
   140017239:	mov    rsp,r11
   14001723c:	pop    r15
   14001723e:	pop    r14
   140017240:	pop    rbp
   140017241:	ret    
   140017242:	int3   
   140017243:	int3   
   140017244:	mov    rax,rsp
   140017247:	mov    QWORD PTR [rax+0x10],rbx
   14001724b:	mov    QWORD PTR [rax+0x18],rsi
   14001724f:	mov    QWORD PTR [rax+0x20],rdi
   140017253:	push   rbp
   140017254:	lea    rbp,[rax-0x48]
   140017258:	sub    rsp,0x140
   14001725f:	mov    rax,QWORD PTR [rip+0x1f7da]        # 0x140036a40
   140017266:	xor    rax,rsp
   140017269:	mov    QWORD PTR [rbp+0x30],rax
   14001726d:	mov    rdi,rcx
   140017270:	mov    rcx,QWORD PTR [rip+0x21d01]        # 0x140038f78
   140017277:	movsx  esi,BYTE PTR [rcx]
   14001727a:	inc    rcx
   14001727d:	mov    QWORD PTR [rip+0x21cf4],rcx        # 0x140038f78
   140017284:	mov    ebx,esi
   140017286:	cmp    esi,0x45
   140017289:	jg     0x14001742e
   14001728f:	cmp    ebx,0x45
   140017292:	je     0x140017421
   140017298:	test   ebx,ebx
   14001729a:	je     0x14001740d
   1400172a0:	sub    ebx,0x30
   1400172a3:	je     0x140017400
   1400172a9:	dec    ebx
   1400172ab:	je     0x1400173b8
   1400172b1:	dec    ebx
   1400172b3:	je     0x14001730e
   1400172b5:	cmp    ebx,0x12
   1400172b8:	jne    0x14001734f
   1400172be:	lea    rcx,[rsp+0x20]
   1400172c3:	call   0x140016bcc
   1400172c8:	test   DWORD PTR [rip+0x21cc2],0x4000        # 0x140038f94
   1400172d2:	je     0x140017487
   1400172d8:	lea    rdx,[rbp-0x50]
   1400172dc:	lea    rcx,[rsp+0x20]
   1400172e1:	mov    r8d,0x10
   1400172e7:	call   0x140016ca4
   1400172ec:	lea    rcx,[rbp-0x50]
   1400172f0:	call   0x14001c554
   1400172f5:	mov    ecx,eax
   1400172f7:	call   QWORD PTR [rip+0x21c5b]        # 0x140038f58
   1400172fd:	test   rax,rax
   140017300:	je     0x140017487
   140017306:	mov    rdx,rax
   140017309:	jmp    0x1400173ce
   14001730e:	lea    rcx,[rsp+0x20]
   140017313:	call   0x140016bcc
   140017318:	lea    rcx,[rbp-0x50]
   14001731c:	call   0x140016bcc
   140017321:	cmp    BYTE PTR [rsp+0x28],0x1
   140017326:	jg     0x140017417
   14001732c:	cmp    BYTE PTR [rbp-0x48],0x1
   140017330:	jg     0x140017417
   140017336:	lea    rdx,[rbp-0x3f]
   14001733a:	lea    rcx,[rsp+0x20]
   14001733f:	mov    r8d,0x64
   140017345:	call   0x140016ca4
   14001734a:	test   rax,rax
   14001734d:	jne    0x140017361
   14001734f:	mov    edx,0x2
   140017354:	mov    rcx,rdi
   140017357:	call   0x140011a84
   14001735c:	jmp    0x140017595
   140017361:	mov    al,BYTE PTR [rbp-0x3f]
   140017364:	mov    BYTE PTR [rbp-0x40],al
   140017367:	cmp    al,0x2d
   140017369:	jne    0x140017377
   14001736b:	mov    al,BYTE PTR [rbp-0x3e]
   14001736e:	mov    BYTE PTR [rbp-0x3e],0x2e
   140017372:	mov    BYTE PTR [rbp-0x3f],al
   140017375:	jmp    0x14001737b
   140017377:	mov    BYTE PTR [rbp-0x3f],0x2e
   14001737b:	lea    rdx,[rbp-0x40]
   14001737f:	lea    rcx,[rsp+0x50]
   140017384:	call   0x140011a3c
   140017389:	lea    rcx,[rsp+0x20]
   14001738e:	mov    dl,0x65
   140017390:	movups xmm0,XMMWORD PTR [rax]
   140017393:	movdqu XMMWORD PTR [rsp+0x20],xmm0
   140017399:	call   0x1400122f0
   14001739e:	movups xmm0,XMMWORD PTR [rsp+0x20]
   1400173a3:	lea    rdx,[rbp-0x50]
   1400173a7:	mov    rcx,rdi
   1400173aa:	movdqu XMMWORD PTR [rdi],xmm0
   1400173ae:	call   0x1400122b0
   1400173b3:	jmp    0x140017595
   1400173b8:	cmp    BYTE PTR [rcx],0x40
   1400173bb:	jne    0x1400173db
   1400173bd:	inc    rcx
   1400173c0:	lea    rdx,[rip+0x178d1]        # 0x14002ec98
   1400173c7:	mov    QWORD PTR [rip+0x21baa],rcx        # 0x140038f78
   1400173ce:	mov    rcx,rdi
   1400173d1:	call   0x140011a3c
   1400173d6:	jmp    0x140017595
   1400173db:	lea    rcx,[rbp-0x70]
   1400173df:	call   0x1400147e0
   1400173e4:	lea    rdx,[rip+0x172d9]        # 0x14002e6c4
   1400173eb:	lea    rcx,[rsp+0x70]
   1400173f0:	mov    rbx,rax
   1400173f3:	call   0x140011a3c
   1400173f8:	mov    rdx,rbx
   1400173fb:	movups xmm0,XMMWORD PTR [rax]
   1400173fe:	jmp    0x1400173a7
   140017400:	mov    rcx,rdi
   140017403:	call   0x140016bcc
   140017408:	jmp    0x140017595
   14001740d:	dec    rcx
   140017410:	mov    QWORD PTR [rip+0x21b61],rcx        # 0x140038f78
   140017417:	mov    edx,0x1
   14001741c:	jmp    0x140017354
   140017421:	mov    rcx,rdi
   140017424:	call   0x1400147e0
   140017429:	jmp    0x140017595
   14001742e:	cmp    ebx,0x4a
   140017431:	jle    0x1400174d9
   140017437:	cmp    ebx,0x51
   14001743a:	je     0x1400172be
   140017440:	cmp    ebx,0x52
   140017443:	je     0x140017462
   140017445:	cmp    ebx,0x53
   140017448:	jne    0x14001734f
   14001744e:	and    QWORD PTR [rdi],0x0
   140017452:	mov    BYTE PTR [rdi+0x8],0x0
   140017456:	and    DWORD PTR [rdi+0x8],0xffff00ff
   14001745d:	jmp    0x140017595
   140017462:	lea    rcx,[rbp-0x50]
   140017466:	xor    r8d,r8d
   140017469:	xor    edx,edx
   14001746b:	call   0x14001800c
   140017470:	lea    rcx,[rsp+0x20]
   140017475:	call   0x140016bcc
   14001747a:	movups xmm0,XMMWORD PTR [rbp-0x50]
   14001747e:	movdqu XMMWORD PTR [rdi],xmm0
   140017482:	jmp    0x140017595
   140017487:	lea    rcx,[rsp+0x30]
   14001748c:	cmp    sil,0x44
   140017490:	jne    0x1400174d0
   140017492:	lea    rdx,[rip+0x177e7]        # 0x14002ec80
   140017499:	call   0x140011a3c
   14001749e:	lea    rdx,[rsp+0x20]
   1400174a3:	lea    rcx,[rbp-0x50]
   1400174a7:	movups xmm0,XMMWORD PTR [rax]
   1400174aa:	movdqu XMMWORD PTR [rbp-0x50],xmm0
   1400174af:	call   0x1400122b0
   1400174b4:	movups xmm0,XMMWORD PTR [rbp-0x50]
   1400174b8:	lea    rdx,[rip+0x17775]        # 0x14002ec34
   1400174bf:	mov    rcx,rdi
   1400174c2:	movdqu XMMWORD PTR [rdi],xmm0
   1400174c6:	call   0x14001240c
   1400174cb:	jmp    0x140017595
   1400174d0:	lea    rdx,[rip+0x17781]        # 0x14002ec58
   1400174d7:	jmp    0x140017499
   1400174d9:	lea    rcx,[rsp+0x20]
   1400174de:	mov    dl,0x7b
   1400174e0:	call   0x14001197c
   1400174e5:	sub    sil,0x48
   1400174e9:	cmp    sil,0x2
   1400174ed:	ja     0x140017512
   1400174ef:	lea    rcx,[rsp+0x40]
   1400174f4:	call   0x1400147e0
   1400174f9:	lea    rcx,[rsp+0x20]
   1400174fe:	mov    rdx,rax
   140017501:	call   0x1400122b0
   140017506:	lea    rcx,[rsp+0x20]
   14001750b:	mov    dl,0x2c
   14001750d:	call   0x1400122f0
   140017512:	sub    ebx,0x46
   140017515:	je     0x14001754a
   140017517:	dec    ebx
   140017519:	je     0x140017527
   14001751b:	dec    ebx
   14001751d:	je     0x14001756c
   14001751f:	dec    ebx
   140017521:	je     0x14001754a
   140017523:	dec    ebx
   140017525:	jne    0x140017582
   140017527:	lea    rcx,[rsp+0x60]
   14001752c:	call   0x140016bcc
   140017531:	lea    rcx,[rsp+0x20]
   140017536:	mov    rdx,rax
   140017539:	call   0x1400122b0
   14001753e:	lea    rcx,[rsp+0x20]
   140017543:	mov    dl,0x2c
   140017545:	call   0x1400122f0
   14001754a:	lea    rcx,[rbp-0x80]
   14001754e:	call   0x140016bcc
   140017553:	lea    rcx,[rsp+0x20]
   140017558:	mov    rdx,rax
   14001755b:	call   0x1400122b0
   140017560:	lea    rcx,[rsp+0x20]
   140017565:	mov    dl,0x2c
   140017567:	call   0x1400122f0
   14001756c:	lea    rcx,[rbp-0x60]
   140017570:	call   0x140016bcc
   140017575:	lea    rcx,[rsp+0x20]
   14001757a:	mov    rdx,rax
   14001757d:	call   0x1400122b0
   140017582:	movups xmm0,XMMWORD PTR [rsp+0x20]
   140017587:	mov    dl,0x7d
   140017589:	mov    rcx,rdi
   14001758c:	movdqu XMMWORD PTR [rdi],xmm0
   140017590:	call   0x1400122f0
   140017595:	mov    rax,rdi
   140017598:	mov    rcx,QWORD PTR [rbp+0x30]
   14001759c:	xor    rcx,rsp
   14001759f:	call   0x14000d0a0
   1400175a4:	lea    r11,[rsp+0x140]
   1400175ac:	mov    rbx,QWORD PTR [r11+0x18]
   1400175b0:	mov    rsi,QWORD PTR [r11+0x20]
   1400175b4:	mov    rdi,QWORD PTR [r11+0x28]
   1400175b8:	mov    rsp,r11
   1400175bb:	pop    rbp
   1400175bc:	ret    
   1400175bd:	int3   
   1400175be:	int3   
   1400175bf:	int3   
   1400175c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400175c5:	mov    QWORD PTR [rsp+0x10],rsi
   1400175ca:	mov    QWORD PTR [rsp+0x20],rdi
   1400175cf:	push   rbp
   1400175d0:	push   r12
   1400175d2:	push   r13
   1400175d4:	push   r14
   1400175d6:	push   r15
   1400175d8:	lea    rbp,[rsp-0x80]
   1400175dd:	sub    rsp,0x180
   1400175e4:	mov    rax,QWORD PTR [rip+0x2198d]        # 0x140038f78
   1400175eb:	mov    r14b,dl
   1400175ee:	mov    rdi,rcx
   1400175f1:	cmp    BYTE PTR [rax],0x3f
   1400175f4:	jne    0x140017760
   1400175fa:	cmp    BYTE PTR [rax+0x1],0x24
   1400175fe:	jne    0x140017760
   140017604:	mov    r15,QWORD PTR [rip+0x21955]        # 0x140038f60
   14001760b:	mov    r12,QWORD PTR [rip+0x21956]        # 0x140038f68
   140017612:	mov    r13,QWORD PTR [rip+0x21957]        # 0x140038f70
   140017619:	or     ecx,0xffffffff
   14001761c:	add    rax,0x2
   140017620:	xor    bl,bl
   140017622:	mov    DWORD PTR [rsp+0x60],ecx
   140017626:	mov    DWORD PTR [rbp-0x40],ecx
   140017629:	mov    DWORD PTR [rbp+0x20],ecx
   14001762c:	lea    rcx,[rsp+0x60]
   140017631:	mov    esi,0x1
   140017636:	mov    QWORD PTR [rip+0x2193b],rax        # 0x140038f78
   14001763d:	mov    QWORD PTR [rip+0x2191c],rcx        # 0x140038f60
   140017644:	lea    rcx,[rbp-0x40]
   140017648:	mov    BYTE PTR [rbp+0xc0],bl
   14001764e:	mov    QWORD PTR [rip+0x21913],rcx        # 0x140038f68
   140017655:	lea    rcx,[rbp+0x20]
   140017659:	mov    dl,sil
   14001765c:	mov    QWORD PTR [rip+0x2190d],rcx        # 0x140038f70
   140017663:	cmp    BYTE PTR [rax],0x3f
   140017666:	lea    rcx,[rsp+0x30]
   14001766b:	jne    0x14001768b
   14001766d:	add    rax,rsi
   140017670:	lea    r8,[rbp+0xc0]
   140017677:	mov    QWORD PTR [rip+0x218fa],rax        # 0x140038f78
   14001767e:	call   0x1400158dc
   140017683:	mov    bl,BYTE PTR [rbp+0xc0]
   140017689:	jmp    0x140017693
   14001768b:	mov    r8b,sil
   14001768e:	call   0x14001800c
   140017693:	movups xmm0,XMMWORD PTR [rax]
   140017696:	movzx  ecx,BYTE PTR [rip+0x218fb]        # 0x140038f98
   14001769d:	movq   rax,xmm0
   1400176a2:	movups XMMWORD PTR [rsp+0x20],xmm0
   1400176a7:	test   rax,rax
   1400176aa:	cmove  ecx,esi
   1400176ad:	mov    BYTE PTR [rip+0x218e5],cl        # 0x140038f98
   1400176b3:	test   bl,bl
   1400176b5:	jne    0x140017745
   1400176bb:	lea    rcx,[rsp+0x50]
   1400176c0:	call   0x140016f58
   1400176c5:	lea    rcx,[rsp+0x40]
   1400176ca:	mov    dl,0x3c
   1400176cc:	mov    rbx,rax
   1400176cf:	call   0x14001197c
   1400176d4:	lea    rcx,[rsp+0x30]
   1400176d9:	mov    rdx,rbx
   1400176dc:	movups xmm0,XMMWORD PTR [rax]
   1400176df:	movdqu XMMWORD PTR [rsp+0x30],xmm0
   1400176e5:	call   0x1400122b0
   1400176ea:	lea    rdx,[rsp+0x30]
   1400176ef:	lea    rcx,[rsp+0x20]
   1400176f4:	call   0x1400122b0
   1400176f9:	mov    rcx,QWORD PTR [rsp+0x20]
   1400176fe:	test   rcx,rcx
   140017701:	je     0x140017719
   140017703:	mov    rax,QWORD PTR [rcx]
   140017706:	call   QWORD PTR [rax+0x8]
   140017709:	cmp    al,0x3e
   14001770b:	jne    0x140017719
   14001770d:	lea    rcx,[rsp+0x20]
   140017712:	mov    dl,0x20
   140017714:	call   0x1400122f0
   140017719:	lea    rcx,[rsp+0x20]
   14001771e:	mov    dl,0x3e
   140017720:	call   0x1400122f0
   140017725:	test   r14b,r14b
   140017728:	je     0x140017740
   14001772a:	mov    rax,QWORD PTR [rip+0x21847]        # 0x140038f78
   140017731:	cmp    BYTE PTR [rax],0x0
   140017734:	je     0x140017740
   140017736:	add    rax,rsi
   140017739:	mov    QWORD PTR [rip+0x21838],rax        # 0x140038f78
   140017740:	movups xmm0,XMMWORD PTR [rsp+0x20]
   140017745:	mov    QWORD PTR [rip+0x21814],r15        # 0x140038f60
   14001774c:	mov    QWORD PTR [rip+0x21815],r12        # 0x140038f68
   140017753:	mov    QWORD PTR [rip+0x21816],r13        # 0x140038f70
   14001775a:	movdqu XMMWORD PTR [rdi],xmm0
   14001775e:	jmp    0x14001776a
   140017760:	mov    edx,0x2
   140017765:	call   0x140011a84
   14001776a:	lea    r11,[rsp+0x180]
   140017772:	mov    rax,rdi
   140017775:	mov    rbx,QWORD PTR [r11+0x30]
   140017779:	mov    rsi,QWORD PTR [r11+0x38]
   14001777d:	mov    rdi,QWORD PTR [r11+0x48]
   140017781:	mov    rsp,r11
   140017784:	pop    r15
   140017786:	pop    r14
   140017788:	pop    r13
   14001778a:	pop    r12
   14001778c:	pop    rbp
   14001778d:	ret    
   14001778e:	int3   
   14001778f:	int3   
   140017790:	mov    r11,rsp
   140017793:	push   rbx
   140017794:	sub    rsp,0x50
   140017798:	and    QWORD PTR [r11-0x28],0x0
   14001779d:	and    QWORD PTR [r11-0x18],0x0
   1400177a2:	mov    eax,0xffff0000
   1400177a7:	and    DWORD PTR [rsp+0x38],eax
   1400177ab:	and    DWORD PTR [rsp+0x48],eax
   1400177af:	lea    r9,[r11-0x28]
   1400177b3:	lea    r8,[rip+0x13296]        # 0x14002aa50
   1400177ba:	lea    rdx,[r11-0x18]
   1400177be:	mov    rbx,rcx
   1400177c1:	mov    DWORD PTR [rsp+0x20],0x1
   1400177c9:	call   0x140013fc0
   1400177ce:	mov    rax,rbx
   1400177d1:	add    rsp,0x50
   1400177d5:	pop    rbx
   1400177d6:	ret    
   1400177d7:	int3   
   1400177d8:	mov    QWORD PTR [rsp+0x8],rbx
   1400177dd:	mov    QWORD PTR [rsp+0x10],rdi
   1400177e2:	push   rbp
   1400177e3:	mov    rbp,rsp
   1400177e6:	sub    rsp,0x50
   1400177ea:	mov    rax,QWORD PTR [rip+0x21787]        # 0x140038f78
   1400177f1:	mov    rdi,rcx
   1400177f4:	cmp    BYTE PTR [rax],0x0
   1400177f7:	je     0x140017850
   1400177f9:	cmp    BYTE PTR [rax],0x5a
   1400177fc:	jne    0x14001781e
   1400177fe:	and    QWORD PTR [rbp-0x30],0x0
   140017803:	inc    rax
   140017806:	and    DWORD PTR [rbp-0x28],0xffff0000
   14001780d:	movups xmm0,XMMWORD PTR [rbp-0x30]
   140017811:	mov    QWORD PTR [rip+0x21760],rax        # 0x140038f78
   140017818:	movdqu XMMWORD PTR [rcx],xmm0
   14001781c:	jmp    0x140017888
   14001781e:	lea    rcx,[rbp-0x20]
   140017822:	call   0x140013694
   140017827:	lea    rdx,[rip+0x1762a]        # 0x14002ee58
   14001782e:	lea    rcx,[rbp-0x10]
   140017832:	mov    rbx,rax
   140017835:	call   0x140011a3c
   14001783a:	lea    rcx,[rbp-0x30]
   14001783e:	mov    rdx,rbx
   140017841:	movups xmm0,XMMWORD PTR [rax]
   140017844:	movdqu XMMWORD PTR [rbp-0x30],xmm0
   140017849:	call   0x1400122b0
   14001784e:	jmp    0x140017876
   140017850:	lea    rdx,[rip+0x17601]        # 0x14002ee58
   140017857:	lea    rcx,[rbp-0x10]
   14001785b:	call   0x140011a3c
   140017860:	lea    rcx,[rbp-0x30]
   140017864:	mov    edx,0x1
   140017869:	movups xmm0,XMMWORD PTR [rax]
   14001786c:	movdqu XMMWORD PTR [rbp-0x30],xmm0
   140017871:	call   0x140012498
   140017876:	movups xmm0,XMMWORD PTR [rbp-0x30]
   14001787a:	mov    dl,0x29
   14001787c:	mov    rcx,rdi
   14001787f:	movdqu XMMWORD PTR [rdi],xmm0
   140017883:	call   0x1400122f0
   140017888:	mov    rbx,QWORD PTR [rsp+0x60]
   14001788d:	mov    rax,rdi
   140017890:	mov    rdi,QWORD PTR [rsp+0x68]
   140017895:	add    rsp,0x50
   140017899:	pop    rbp
   14001789a:	ret    
   14001789b:	int3   
   14001789c:	sub    rsp,0x28
   1400178a0:	mov    r8,QWORD PTR [rip+0x216d1]        # 0x140038f78
   1400178a7:	mov    r9d,0x4000
   1400178ad:	xor    edx,edx
   1400178af:	cmp    BYTE PTR [r8],0x5f
   1400178b3:	jne    0x1400178c2
   1400178b5:	inc    r8
   1400178b8:	mov    edx,r9d
   1400178bb:	mov    QWORD PTR [rip+0x216b6],r8        # 0x140038f78
   1400178c2:	mov    al,BYTE PTR [r8]
   1400178c5:	sub    al,0x41
   1400178c7:	cmp    al,0x19
   1400178c9:	jbe    0x140017c84
   1400178cf:	cmp    BYTE PTR [r8],0x24
   1400178d3:	jne    0x140017b0e
   1400178d9:	inc    r8
   1400178dc:	xor    r10b,r10b
   1400178df:	mov    QWORD PTR [rip+0x21692],r8        # 0x140038f78
   1400178e6:	movsx  ecx,BYTE PTR [r8]
   1400178ea:	cmp    ecx,0x42
   1400178ed:	jg     0x1400179ea
   1400178f3:	je     0x1400179df
   1400178f9:	test   ecx,ecx
   1400178fb:	je     0x1400179d2
   140017901:	cmp    ecx,0x24
   140017904:	jne    0x1400179aa
   14001790a:	lea    rax,[r8+0x1]
   14001790e:	cmp    BYTE PTR [rax],0x50
   140017911:	cmove  r8,rax
   140017915:	inc    r8
   140017918:	mov    QWORD PTR [rip+0x21659],r8        # 0x140038f78
   14001791f:	cmp    BYTE PTR [r8],r10b
   140017922:	je     0x1400179a0
   140017924:	mov    al,BYTE PTR [r8]
   140017927:	sub    al,0x46
   140017929:	test   al,0xfd
   14001792b:	je     0x140017953
   14001792d:	cmp    BYTE PTR [r8],0x4a
   140017931:	je     0x140017962
   140017933:	cmp    BYTE PTR [r8],0x4b
   140017937:	jle    0x140017ce5
   14001793d:	cmp    BYTE PTR [r8],0x4d
   140017941:	jle    0x140017953
   140017943:	cmp    BYTE PTR [r8],0x4f
   140017947:	jle    0x140017962
   140017949:	cmp    BYTE PTR [r8],0x51
   14001794d:	jne    0x140017ce5
   140017953:	inc    r8
   140017956:	mov    QWORD PTR [rip+0x2161b],r8        # 0x140038f78
   14001795d:	jmp    0x1400178ad
   140017962:	inc    r8
   140017965:	mov    QWORD PTR [rip+0x2160c],r8        # 0x140038f78
   14001796c:	mov    al,BYTE PTR [r8]
   14001796f:	sub    al,0x30
   140017971:	cmp    al,0x9
   140017973:	ja     0x140017996
   140017975:	movsx  eax,BYTE PTR [r8]
   140017979:	sub    eax,0x2f
   14001797c:	cdqe   
   14001797e:	add    r8,rax
   140017981:	mov    QWORD PTR [rip+0x215f0],r8        # 0x140038f78
   140017988:	call   0x14001789c
   14001798d:	bts    eax,0x10
   140017991:	jmp    0x140017d76
   140017996:	mov    edx,0xffff
   14001799b:	jmp    0x140017aff
   1400179a0:	mov    eax,0xfffe
   1400179a5:	jmp    0x140017d76
   1400179aa:	cmp    ecx,0x2f
   1400179ad:	jle    0x140017ce5
   1400179b3:	cmp    ecx,0x35
   1400179b6:	jle    0x140017a27
   1400179b8:	cmp    ecx,0x41
   1400179bb:	jne    0x140017ce5
   1400179c1:	and    edx,0xfffff4ff
   1400179c7:	or     edx,0x9000
   1400179cd:	jmp    0x140017aff
   1400179d2:	mov    edx,0xfffe
   1400179d7:	dec    r8
   1400179da:	jmp    0x140017aff
   1400179df:	or     edx,0x9800
   1400179e5:	jmp    0x140017aff
   1400179ea:	sub    ecx,0x43
   1400179ed:	je     0x140017af9
   1400179f3:	dec    ecx
   1400179f5:	je     0x140017aeb
   1400179fb:	dec    ecx
   1400179fd:	je     0x140017add
   140017a03:	sub    ecx,0xd
   140017a06:	jne    0x140017ce5
   140017a0c:	inc    r8
   140017a0f:	mov    r10b,0x1
   140017a12:	mov    QWORD PTR [rip+0x2155f],r8        # 0x140038f78
   140017a19:	mov    cl,BYTE PTR [r8]
   140017a1c:	lea    eax,[rcx-0x30]
   140017a1f:	cmp    al,0x5
   140017a21:	ja     0x140017acd
   140017a27:	movsx  eax,BYTE PTR [r8]
   140017a2b:	mov    r9d,0x8000
   140017a31:	mov    r11d,0xffffefff
   140017a37:	or     edx,r9d
   140017a3a:	sub    eax,0x30
   140017a3d:	test   r9d,edx
   140017a40:	je     0x140017a4b
   140017a42:	and    edx,r11d
   140017a45:	bts    edx,0xb
   140017a49:	jmp    0x140017a51
   140017a4b:	and    edx,0xffff9fff
   140017a51:	test   r10b,r10b
   140017a54:	je     0x140017a62
   140017a56:	btr    edx,0x8
   140017a5a:	or     edx,0x600
   140017a60:	jmp    0x140017a6c
   140017a62:	btr    edx,0x9
   140017a66:	or     edx,0x500
   140017a6c:	test   al,0x1
   140017a6e:	je     0x140017a76
   140017a70:	bts    edx,0xd
   140017a74:	jmp    0x140017a7a
   140017a76:	btr    edx,0xd
   140017a7a:	and    eax,0x6
   140017a7d:	je     0x140017ab3
   140017a7f:	cmp    eax,0x2
   140017a82:	je     0x140017a9e
   140017a84:	cmp    eax,0x4
   140017a87:	jne    0x140017ce5
   140017a8d:	mov    eax,edx
   140017a8f:	mov    ecx,edx
   140017a91:	and    eax,0xffffff3f
   140017a96:	and    edx,0xffffe7ff
   140017a9c:	jmp    0x140017ac5
   140017a9e:	mov    eax,edx
   140017aa0:	mov    ecx,edx
   140017aa2:	btr    edx,0xb
   140017aa6:	and    eax,0xffffffbf
   140017aa9:	bts    eax,0x7
   140017aad:	bts    edx,0xc
   140017ab1:	jmp    0x140017ac5
   140017ab3:	mov    eax,edx
   140017ab5:	mov    ecx,edx
   140017ab7:	and    edx,r11d
   140017aba:	btr    eax,0x7
   140017abe:	or     eax,0x40
   140017ac1:	bts    edx,0xb
   140017ac5:	and    ecx,r9d
   140017ac8:	cmovne edx,eax
   140017acb:	jmp    0x140017aff
   140017acd:	neg    cl
   140017acf:	mov    edx,0xffff
   140017ad4:	sbb    eax,eax
   140017ad6:	add    eax,edx
   140017ad8:	jmp    0x140017d76
   140017add:	and    edx,0xfffff6ff
   140017ae3:	or     edx,0x9200
   140017ae9:	jmp    0x140017aff
   140017aeb:	and    edx,0xfffff5ff
   140017af1:	or     edx,0x9100
   140017af7:	jmp    0x140017aff
   140017af9:	or     edx,0x7c00
   140017aff:	inc    r8
   140017b02:	mov    QWORD PTR [rip+0x2146f],r8        # 0x140038f78
   140017b09:	jmp    0x140017d74
   140017b0e:	mov    cl,BYTE PTR [r8]
   140017b11:	lea    eax,[rcx-0x30]
   140017b14:	cmp    al,0x8
   140017b16:	ja     0x140017c59
   140017b1c:	inc    r8
   140017b1f:	movsx  ecx,cl
   140017b22:	btr    edx,0xf
   140017b26:	mov    QWORD PTR [rip+0x2144b],r8        # 0x140038f78
   140017b2d:	sub    ecx,0x30
   140017b30:	je     0x140017c19
   140017b36:	dec    ecx
   140017b38:	je     0x140017be7
   140017b3e:	dec    ecx
   140017b40:	je     0x140017bb9
   140017b42:	dec    ecx
   140017b44:	je     0x140017bad
   140017b46:	dec    ecx
   140017b48:	je     0x140017ba0
   140017b4a:	dec    ecx
   140017b4c:	je     0x140017b8f
   140017b4e:	dec    ecx
   140017b50:	je     0x140017b7e
   140017b52:	dec    ecx
   140017b54:	je     0x140017b6d
   140017b56:	dec    ecx
   140017b58:	jne    0x140017ce5
   140017b5e:	btr    edx,0xa
   140017b62:	or     edx,0x7800
   140017b68:	jmp    0x140017d74
   140017b6d:	and    edx,0xfffff3ff
   140017b73:	or     edx,0x7000
   140017b79:	jmp    0x140017d74
   140017b7e:	and    edx,0xffffebff
   140017b84:	or     edx,0x6800
   140017b8a:	jmp    0x140017d74
   140017b8f:	and    edx,0xffffe3ff
   140017b95:	or     edx,0x6000
   140017b9b:	jmp    0x140017d74
   140017ba0:	btr    edx,0xe
   140017ba4:	bts    edx,0xd
   140017ba8:	jmp    0x140017d74
   140017bad:	btr    edx,0xd
   140017bb1:	or     edx,r9d
   140017bb4:	jmp    0x140017d74
   140017bb9:	mov    r9d,0x8000
   140017bbf:	test   r9d,edx
   140017bc2:	je     0x140017bd0
   140017bc4:	and    edx,0xfffffaff
   140017bca:	bts    edx,0x9
   140017bce:	jmp    0x140017bd6
   140017bd0:	and    edx,0xffff9fff
   140017bd6:	mov    eax,edx
   140017bd8:	mov    ecx,edx
   140017bda:	and    eax,0xffffff3f
   140017bdf:	and    edx,0xffffe7ff
   140017be5:	jmp    0x140017c4e
   140017be7:	mov    r9d,0x8000
   140017bed:	test   r9d,edx
   140017bf0:	je     0x140017bfe
   140017bf2:	and    edx,0xfffffaff
   140017bf8:	bts    edx,0x9
   140017bfc:	jmp    0x140017c04
   140017bfe:	and    edx,0xffff9fff
   140017c04:	mov    eax,edx
   140017c06:	mov    ecx,edx
   140017c08:	btr    edx,0xb
   140017c0c:	and    eax,0xffffffbf
   140017c0f:	bts    eax,0x7
   140017c13:	bts    edx,0xc
   140017c17:	jmp    0x140017c4e
   140017c19:	mov    r9d,0x8000
   140017c1f:	test   r9d,edx
   140017c22:	je     0x140017c30
   140017c24:	and    edx,0xfffffaff
   140017c2a:	bts    edx,0x9
   140017c2e:	jmp    0x140017c36
   140017c30:	and    edx,0xffff9fff
   140017c36:	mov    eax,edx
   140017c38:	mov    ecx,edx
   140017c3a:	mov    r11d,0xffffefff
   140017c40:	btr    eax,0x7
   140017c44:	and    edx,r11d
   140017c47:	or     eax,0x40
   140017c4a:	bts    edx,0xb
   140017c4e:	and    ecx,r9d
   140017c51:	cmovne edx,eax
   140017c54:	jmp    0x140017d74
   140017c59:	cmp    cl,0x39
   140017c5c:	jne    0x140017c72
   140017c5e:	inc    r8
   140017c61:	mov    edx,0xfffd
   140017c66:	mov    QWORD PTR [rip+0x2130b],r8        # 0x140038f78
   140017c6d:	jmp    0x140017d74
   140017c72:	neg    cl
   140017c74:	mov    edx,0xfffe
   140017c79:	sbb    eax,eax
   140017c7b:	neg    eax
   140017c7d:	add    edx,eax
   140017c7f:	jmp    0x140017d74
   140017c84:	movsx  r10d,BYTE PTR [r8]
   140017c88:	inc    r8
   140017c8b:	mov    r9d,0x8000
   140017c91:	sub    r10d,0x41
   140017c95:	or     edx,r9d
   140017c98:	mov    QWORD PTR [rip+0x212d9],r8        # 0x140038f78
   140017c9f:	test   r10b,0x1
   140017ca3:	je     0x140017cab
   140017ca5:	bts    edx,0xd
   140017ca9:	jmp    0x140017caf
   140017cab:	btr    edx,0xd
   140017caf:	cmp    r10d,0x18
   140017cb3:	jge    0x140017d74
   140017cb9:	mov    r11d,0xffffefff
   140017cbf:	test   r9d,edx
   140017cc2:	je     0x140017ccd
   140017cc4:	and    edx,r11d
   140017cc7:	bts    edx,0xb
   140017ccb:	jmp    0x140017cd3
   140017ccd:	and    edx,0xffff9fff
   140017cd3:	mov    eax,r10d
   140017cd6:	and    eax,0x18
   140017cd9:	je     0x140017d15
   140017cdb:	cmp    eax,0x8
   140017cde:	je     0x140017d00
   140017ce0:	cmp    eax,0x10
   140017ce3:	je     0x140017cef
   140017ce5:	mov    eax,0xffff
   140017cea:	jmp    0x140017d76
   140017cef:	mov    eax,edx
   140017cf1:	mov    ecx,edx
   140017cf3:	and    eax,0xffffff3f
   140017cf8:	and    edx,0xffffe7ff
   140017cfe:	jmp    0x140017d27
   140017d00:	mov    eax,edx
   140017d02:	mov    ecx,edx
   140017d04:	btr    edx,0xb
   140017d08:	and    eax,0xffffffbf
   140017d0b:	bts    eax,0x7
   140017d0f:	bts    edx,0xc
   140017d13:	jmp    0x140017d27
   140017d15:	mov    eax,edx
   140017d17:	mov    ecx,edx
   140017d19:	and    edx,r11d
   140017d1c:	btr    eax,0x7
   140017d20:	or     eax,0x40
   140017d23:	bts    edx,0xb
   140017d27:	and    ecx,r9d
   140017d2a:	cmovne edx,eax
   140017d2d:	and    r10d,0x6
   140017d31:	je     0x140017d74
   140017d33:	cmp    r10d,0x2
   140017d37:	je     0x140017d5d
   140017d39:	cmp    r10d,0x4
   140017d3d:	je     0x140017d51
   140017d3f:	cmp    r10d,0x6
   140017d43:	jne    0x140017ce5
   140017d45:	and    edx,0xfffffcff
   140017d4b:	bts    edx,0xa
   140017d4f:	jmp    0x140017d74
   140017d51:	and    edx,0xfffff9ff
   140017d57:	bts    edx,0x8
   140017d5b:	jmp    0x140017d74
   140017d5d:	test   r9d,edx
   140017d60:	je     0x140017d6e
   140017d62:	and    edx,0xfffffaff
   140017d68:	bts    edx,0x9
   140017d6c:	jmp    0x140017d74
   140017d6e:	and    edx,0xffff9fff
   140017d74:	mov    eax,edx
   140017d76:	add    rsp,0x28
   140017d7a:	ret    
   140017d7b:	int3   
   140017d7c:	rex push rbx
   140017d7e:	sub    rsp,0x20
   140017d82:	mov    rax,QWORD PTR [rip+0x211ef]        # 0x140038f78
   140017d89:	mov    rbx,rcx
   140017d8c:	cmp    BYTE PTR [rax],0x0
   140017d8f:	je     0x140017db5
   140017d91:	cmp    BYTE PTR [rax],0x41
   140017d94:	je     0x140017d9d
   140017d96:	mov    edx,0x2
   140017d9b:	jmp    0x140017dba
   140017d9d:	inc    rax
   140017da0:	lea    rdx,[rip+0x171fd]        # 0x14002efa4
   140017da7:	mov    QWORD PTR [rip+0x211ca],rax        # 0x140038f78
   140017dae:	call   0x140011a3c
   140017db3:	jmp    0x140017dbf
   140017db5:	mov    edx,0x1
   140017dba:	call   0x140011a84
   140017dbf:	mov    rax,rbx
   140017dc2:	add    rsp,0x20
   140017dc6:	pop    rbx
   140017dc7:	ret    
   140017dc8:	rex push rbx
   140017dca:	sub    rsp,0x20
   140017dce:	mov    rbx,rcx
   140017dd1:	call   0x140017e3c
   140017dd6:	mov    rax,rbx
   140017dd9:	add    rsp,0x20
   140017ddd:	pop    rbx
   140017dde:	ret    
   140017ddf:	int3   
   140017de0:	rex push rbx
   140017de2:	sub    rsp,0x30
   140017de6:	movups xmm0,XMMWORD PTR [rdx]
   140017de9:	lea    rdx,[rip+0x171bc]        # 0x14002efac
   140017df0:	mov    rbx,rcx
   140017df3:	movdqu XMMWORD PTR [rcx],xmm0
   140017df7:	call   0x14001240c
   140017dfc:	lea    rcx,[rsp+0x20]
   140017e01:	call   0x1400165c0
   140017e06:	mov    rcx,rbx
   140017e09:	mov    rdx,rax
   140017e0c:	call   0x1400122b0
   140017e11:	mov    dl,0x7d
   140017e13:	mov    rcx,rbx
   140017e16:	call   0x1400122f0
   140017e1b:	mov    rax,QWORD PTR [rip+0x21156]        # 0x140038f78
   140017e22:	cmp    BYTE PTR [rax],0x40
   140017e25:	jne    0x140017e31
   140017e27:	inc    rax
   140017e2a:	mov    QWORD PTR [rip+0x21147],rax        # 0x140038f78
   140017e31:	mov    rax,rbx
   140017e34:	add    rsp,0x30
   140017e38:	pop    rbx
   140017e39:	ret    
   140017e3a:	int3   
   140017e3b:	int3   
   140017e3c:	mov    QWORD PTR [rsp+0x8],rbx
   140017e41:	mov    QWORD PTR [rsp+0x10],rdi
   140017e46:	push   rbp
   140017e47:	mov    rbp,rsp
   140017e4a:	sub    rsp,0x70
   140017e4e:	movups xmm0,XMMWORD PTR [rdx]
   140017e51:	mov    rdi,rcx
   140017e54:	movdqu XMMWORD PTR [rcx],xmm0
   140017e58:	cmp    BYTE PTR [rcx+0x8],0x1
   140017e5c:	jg     0x140017ff6
   140017e62:	mov    rax,QWORD PTR [rip+0x2110f]        # 0x140038f78
   140017e69:	cmp    BYTE PTR [rax],0x0
   140017e6c:	je     0x140017fc6
   140017e72:	and    QWORD PTR [rbp-0x40],0x0
   140017e77:	and    QWORD PTR [rbp-0x30],0x0
   140017e7c:	and    DWORD PTR [rsp+0x20],0x0
   140017e81:	mov    eax,0xffff0000
   140017e86:	lea    r9,[rbp-0x40]
   140017e8a:	lea    r8,[rip+0x12bbf]        # 0x14002aa50
   140017e91:	and    DWORD PTR [rbp-0x38],eax
   140017e94:	and    DWORD PTR [rbp-0x28],eax
   140017e97:	lea    rdx,[rbp-0x30]
   140017e9b:	lea    rcx,[rbp-0x20]
   140017e9f:	call   0x140013fc0
   140017ea4:	lea    rcx,[rbp-0x30]
   140017ea8:	mov    dl,0x20
   140017eaa:	movaps xmm0,XMMWORD PTR [rbp-0x20]
   140017eae:	movdqa XMMWORD PTR [rbp-0x30],xmm0
   140017eb3:	call   0x1400122f0
   140017eb8:	lea    rcx,[rbp-0x30]
   140017ebc:	mov    rdx,rdi
   140017ebf:	movaps xmm0,XMMWORD PTR [rbp-0x30]
   140017ec3:	movdqa XMMWORD PTR [rbp-0x30],xmm0
   140017ec8:	call   0x1400122b0
   140017ecd:	movaps xmm0,XMMWORD PTR [rbp-0x30]
   140017ed1:	movdqu XMMWORD PTR [rdi],xmm0
   140017ed5:	cmp    BYTE PTR [rdi+0x8],0x1
   140017ed9:	jg     0x140017ff6
   140017edf:	mov    rax,QWORD PTR [rip+0x21092]        # 0x140038f78
   140017ee6:	cmp    BYTE PTR [rax],0x40
   140017ee9:	je     0x140017fba
   140017eef:	lea    rdx,[rip+0x170b6]        # 0x14002efac
   140017ef6:	mov    rcx,rdi
   140017ef9:	call   0x14001240c
   140017efe:	mov    rax,QWORD PTR [rip+0x21073]        # 0x140038f78
   140017f05:	cmp    BYTE PTR [rdi+0x8],0x1
   140017f09:	jg     0x140017fb5
   140017f0f:	test   BYTE PTR [rax],0xbf
   140017f12:	je     0x140017f8c
   140017f14:	lea    rcx,[rbp-0x20]
   140017f18:	call   0x1400165c0
   140017f1d:	lea    rcx,[rbp-0x10]
   140017f21:	mov    dl,0x60
   140017f23:	mov    rbx,rax
   140017f26:	call   0x14001197c
   140017f2b:	lea    rcx,[rbp-0x30]
   140017f2f:	mov    rdx,rbx
   140017f32:	movups xmm0,XMMWORD PTR [rax]
   140017f35:	movdqu XMMWORD PTR [rbp-0x30],xmm0
   140017f3a:	call   0x1400122b0
   140017f3f:	movaps xmm0,XMMWORD PTR [rbp-0x30]
   140017f43:	lea    rcx,[rbp-0x40]
   140017f47:	mov    dl,0x27
   140017f49:	movdqa XMMWORD PTR [rbp-0x40],xmm0
   140017f4e:	call   0x1400122f0
   140017f53:	lea    rdx,[rbp-0x40]
   140017f57:	mov    rcx,rdi
   140017f5a:	call   0x1400122b0
   140017f5f:	mov    rax,QWORD PTR [rip+0x21012]        # 0x140038f78
   140017f66:	cmp    BYTE PTR [rax],0x40
   140017f69:	jne    0x140017f75
   140017f6b:	inc    rax
   140017f6e:	mov    QWORD PTR [rip+0x21003],rax        # 0x140038f78
   140017f75:	cmp    BYTE PTR [rdi+0x8],0x1
   140017f79:	jg     0x140017fb5
   140017f7b:	cmp    BYTE PTR [rax],0x40
   140017f7e:	je     0x140017f05
   140017f80:	lea    rdx,[rip+0x1702d]        # 0x14002efb4
   140017f87:	jmp    0x140017ef6
   140017f8c:	cmp    BYTE PTR [rdi+0x8],0x1
   140017f90:	jg     0x140017fb5
   140017f92:	cmp    BYTE PTR [rax],0x0
   140017f95:	jne    0x140017fa4
   140017f97:	mov    edx,0x1
   140017f9c:	mov    rcx,rdi
   140017f9f:	call   0x140012498
   140017fa4:	mov    dl,0x7d
   140017fa6:	mov    rcx,rdi
   140017fa9:	call   0x1400122f0
   140017fae:	mov    rax,QWORD PTR [rip+0x20fc3]        # 0x140038f78
   140017fb5:	cmp    BYTE PTR [rax],0x40
   140017fb8:	jne    0x140017ff6
   140017fba:	inc    rax
   140017fbd:	mov    QWORD PTR [rip+0x20fb4],rax        # 0x140038f78
   140017fc4:	jmp    0x140017ff6
   140017fc6:	cmp    BYTE PTR [rcx+0x8],0x1
   140017fca:	jg     0x140017ff6
   140017fcc:	lea    rcx,[rbp-0x10]
   140017fd0:	mov    edx,0x1
   140017fd5:	call   0x140011a84
   140017fda:	lea    rcx,[rbp-0x30]
   140017fde:	mov    rdx,rdi
   140017fe1:	movups xmm0,XMMWORD PTR [rax]
   140017fe4:	movdqu XMMWORD PTR [rbp-0x30],xmm0
   140017fe9:	call   0x1400122b0
   140017fee:	movups xmm0,XMMWORD PTR [rbp-0x30]
   140017ff2:	movdqu XMMWORD PTR [rdi],xmm0
   140017ff6:	lea    r11,[rsp+0x70]
   140017ffb:	mov    rax,rdi
   140017ffe:	mov    rbx,QWORD PTR [r11+0x10]
   140018002:	mov    rdi,QWORD PTR [r11+0x18]
   140018006:	mov    rsp,r11
   140018009:	pop    rbp
   14001800a:	ret    
   14001800b:	int3   
   14001800c:	mov    QWORD PTR [rsp+0x10],rbx
   140018011:	mov    QWORD PTR [rsp+0x18],rsi
   140018016:	mov    QWORD PTR [rsp+0x20],rdi
   14001801b:	push   rbp
   14001801c:	mov    rbp,rsp
   14001801f:	sub    rsp,0x80
   140018026:	mov    rax,QWORD PTR [rip+0x1ea13]        # 0x140036a40
   14001802d:	xor    rax,rsp
   140018030:	mov    QWORD PTR [rbp-0x8],rax
   140018034:	mov    r9,QWORD PTR [rip+0x20f3d]        # 0x140038f78
   14001803b:	mov    r10b,r8b
   14001803e:	mov    sil,dl
   140018041:	movsx  r8d,BYTE PTR [r9]
   140018045:	mov    rbx,rcx
   140018048:	sub    r8d,0x30
   14001804c:	cmp    r8d,0x9
   140018050:	ja     0x140018070
   140018052:	mov    rdx,rcx
   140018055:	mov    rcx,QWORD PTR [rip+0x20f0c]        # 0x140038f68
   14001805c:	inc    r9
   14001805f:	mov    QWORD PTR [rip+0x20f12],r9        # 0x140038f78
   140018066:	call   0x140011f0c
   14001806b:	jmp    0x14001825c
   140018070:	and    QWORD PTR [rbp-0x60],0x0
   140018075:	mov    r11d,0xffff0000
   14001807b:	and    DWORD PTR [rbp-0x58],r11d
   14001807f:	cmp    BYTE PTR [r9],0x3f
   140018083:	jne    0x1400180d5
   140018085:	lea    rcx,[rbp-0x18]
   140018089:	xor    edx,edx
   14001808b:	call   0x1400175c0
   140018090:	mov    rcx,QWORD PTR [rip+0x20ee1]        # 0x140038f78
   140018097:	movups xmm0,XMMWORD PTR [rax]
   14001809a:	mov    al,BYTE PTR [rcx]
   14001809c:	inc    rcx
   14001809f:	mov    QWORD PTR [rip+0x20ed2],rcx        # 0x140038f78
   1400180a6:	movdqu XMMWORD PTR [rbp-0x60],xmm0
   1400180ab:	cmp    al,0x40
   1400180ad:	je     0x14001823a
   1400180b3:	dec    rcx
   1400180b6:	mov    QWORD PTR [rip+0x20ebb],rcx        # 0x140038f78
   1400180bd:	mov    al,BYTE PTR [rcx]
   1400180bf:	lea    rcx,[rbp-0x60]
   1400180c3:	neg    al
   1400180c5:	sbb    edx,edx
   1400180c7:	neg    edx
   1400180c9:	inc    edx
   1400180cb:	call   0x140011ed0
   1400180d0:	jmp    0x14001823a
   1400180d5:	lea    rdi,[rip+0x16b2c]        # 0x14002ec08
   1400180dc:	mov    rcx,r9
   1400180df:	mov    r8d,0x12
   1400180e5:	mov    rax,rdi
   1400180e8:	mov    dl,BYTE PTR [rcx]
   1400180ea:	test   dl,dl
   1400180ec:	je     0x1400180fd
   1400180ee:	cmp    dl,BYTE PTR [rax]
   1400180f0:	jne    0x1400180fd
   1400180f2:	inc    rcx
   1400180f5:	inc    rax
   1400180f8:	dec    r8d
   1400180fb:	jne    0x1400180e8
   1400180fd:	movzx  ecx,BYTE PTR [rcx]
   140018100:	movzx  eax,BYTE PTR [rax]
   140018103:	cmp    ecx,eax
   140018105:	jne    0x14001810d
   140018107:	add    r9,0x13
   14001810b:	jmp    0x140018147
   14001810d:	lea    rdi,[rip+0x16b0c]        # 0x14002ec20
   140018114:	mov    rcx,r9
   140018117:	mov    r8d,0xc
   14001811d:	mov    rax,rdi
   140018120:	mov    dl,BYTE PTR [rcx]
   140018122:	test   dl,dl
   140018124:	je     0x140018135
   140018126:	cmp    dl,BYTE PTR [rax]
   140018128:	jne    0x140018135
   14001812a:	inc    rcx
   14001812d:	inc    rax
   140018130:	dec    r8d
   140018133:	jne    0x140018120
   140018135:	movzx  ecx,BYTE PTR [rcx]
   140018138:	movzx  eax,BYTE PTR [rax]
   14001813b:	cmp    ecx,eax
   14001813d:	jne    0x1400181f6
   140018143:	add    r9,0xd
   140018147:	lea    rcx,[rbp-0x40]
   14001814b:	mov    QWORD PTR [rip+0x20e26],r9        # 0x140038f78
   140018152:	call   0x140016bcc
   140018157:	test   DWORD PTR [rip+0x20e33],0x4000        # 0x140038f94
   140018161:	je     0x14001819d
   140018163:	lea    rdx,[rbp-0x18]
   140018167:	lea    rcx,[rbp-0x40]
   14001816b:	mov    r8d,0x10
   140018171:	call   0x140016ca4
   140018176:	lea    rcx,[rbp-0x18]
   14001817a:	call   0x14001c554
   14001817f:	mov    ecx,eax
   140018181:	call   QWORD PTR [rip+0x20dd1]        # 0x140038f58
   140018187:	lea    rcx,[rbp-0x60]
   14001818b:	test   rax,rax
   14001818e:	je     0x1400181a1
   140018190:	mov    rdx,rax
   140018193:	call   0x140011e90
   140018198:	jmp    0x14001823a
   14001819d:	lea    rcx,[rbp-0x60]
   1400181a1:	lea    rdx,[rip+0x16a88]        # 0x14002ec30
   1400181a8:	call   0x140011e90
   1400181ad:	lea    rcx,[rbp-0x28]
   1400181b1:	mov    rdx,rdi
   1400181b4:	call   0x140011a3c
   1400181b9:	lea    rdx,[rbp-0x40]
   1400181bd:	lea    rcx,[rbp-0x50]
   1400181c1:	movups xmm0,XMMWORD PTR [rax]
   1400181c4:	movdqu XMMWORD PTR [rbp-0x50],xmm0
   1400181c9:	call   0x1400122b0
   1400181ce:	movaps xmm0,XMMWORD PTR [rbp-0x50]
   1400181d2:	lea    rdx,[rip+0x16a5b]        # 0x14002ec34
   1400181d9:	lea    rcx,[rbp-0x50]
   1400181dd:	movdqa XMMWORD PTR [rbp-0x50],xmm0
   1400181e2:	call   0x14001240c
   1400181e7:	lea    rdx,[rbp-0x50]
   1400181eb:	lea    rcx,[rbp-0x60]
   1400181ef:	call   0x1400122b0
   1400181f4:	jmp    0x14001823a
   1400181f6:	test   r10b,r10b
   1400181f9:	je     0x14001821f
   1400181fb:	cmp    BYTE PTR [r9],0x40
   1400181ff:	jne    0x14001821f
   140018201:	and    QWORD PTR [rbp-0x40],0x0
   140018206:	and    DWORD PTR [rbp-0x38],r11d
   14001820a:	movaps xmm0,XMMWORD PTR [rbp-0x40]
   14001820e:	inc    r9
   140018211:	movdqa XMMWORD PTR [rbp-0x60],xmm0
   140018216:	mov    QWORD PTR [rip+0x20d5b],r9        # 0x140038f78
   14001821d:	jmp    0x14001823a
   14001821f:	lea    rdx,[rip+0x20d52]        # 0x140038f78
   140018226:	lea    rcx,[rbp-0x28]
   14001822a:	mov    r8b,0x40
   14001822d:	call   0x140011890
   140018232:	movups xmm0,XMMWORD PTR [rax]
   140018235:	movdqu XMMWORD PTR [rbp-0x60],xmm0
   14001823a:	test   sil,sil
   14001823d:	je     0x140018254
   14001823f:	mov    rcx,QWORD PTR [rip+0x20d22]        # 0x140038f68
   140018246:	cmp    DWORD PTR [rcx],0x9
   140018249:	je     0x140018254
   14001824b:	lea    rdx,[rbp-0x60]
   14001824f:	call   0x1400124dc
   140018254:	movaps xmm0,XMMWORD PTR [rbp-0x60]
   140018258:	movdqu XMMWORD PTR [rbx],xmm0
   14001825c:	mov    rax,rbx
   14001825f:	mov    rcx,QWORD PTR [rbp-0x8]
   140018263:	xor    rcx,rsp
   140018266:	call   0x14000d0a0
   14001826b:	lea    r11,[rsp+0x80]
   140018273:	mov    rbx,QWORD PTR [r11+0x18]
   140018277:	mov    rsi,QWORD PTR [r11+0x20]
   14001827b:	mov    rdi,QWORD PTR [r11+0x28]
   14001827f:	mov    rsp,r11
   140018282:	pop    rbp
   140018283:	ret    
   140018284:	mov    eax,DWORD PTR [rip+0x20d0a]        # 0x140038f94
   14001828a:	and    eax,0x4000
   14001828f:	ret    
   140018290:	mov    eax,DWORD PTR [rcx+0x8]
   140018293:	shr    eax,0xb
   140018296:	and    eax,0x1
   140018299:	ret    
   14001829a:	int3   
   14001829b:	int3   
   14001829c:	mov    eax,DWORD PTR [rcx+0x8]
   14001829f:	shr    eax,0xe
   1400182a2:	and    eax,0x1
   1400182a5:	ret    
   1400182a6:	int3   
   1400182a7:	int3   
   1400182a8:	xor    eax,eax
   1400182aa:	cmp    QWORD PTR [rcx],rax
   1400182ad:	sete   al
   1400182b0:	ret    
   1400182b1:	int3   
   1400182b2:	int3   
   1400182b3:	int3   
   1400182b4:	xor    eax,eax
   1400182b6:	cmp    DWORD PTR [rcx],0x9
   1400182b9:	sete   al
   1400182bc:	ret    
   1400182bd:	int3   
   1400182be:	int3   
   1400182bf:	int3   
   1400182c0:	mov    eax,DWORD PTR [rcx+0x8]
   1400182c3:	shr    eax,0xc
   1400182c6:	and    eax,0x1
   1400182c9:	ret    
   1400182ca:	int3   
   1400182cb:	int3   
   1400182cc:	mov    eax,DWORD PTR [rcx+0x8]
   1400182cf:	shr    eax,0xd
   1400182d2:	and    eax,0x1
   1400182d5:	ret    
   1400182d6:	int3   
   1400182d7:	int3   
   1400182d8:	mov    eax,DWORD PTR [rcx+0x8]
   1400182db:	shr    eax,0x8
   1400182de:	and    eax,0x1
   1400182e1:	ret    
   1400182e2:	int3   
   1400182e3:	int3   
   1400182e4:	xor    eax,eax
   1400182e6:	cmp    QWORD PTR [rcx],rax
   1400182e9:	je     0x1400182f9
   1400182eb:	test   DWORD PTR [rcx+0x8],0x200
   1400182f2:	je     0x1400182f9
   1400182f4:	mov    eax,0x1
   1400182f9:	ret    
   1400182fa:	int3   
   1400182fb:	int3   
   1400182fc:	xor    eax,eax
   1400182fe:	cmp    QWORD PTR [rcx],rax
   140018301:	je     0x140018311
   140018303:	test   DWORD PTR [rcx+0x8],0x400
   14001830a:	je     0x140018311
   14001830c:	mov    eax,0x1
   140018311:	ret    
   140018312:	int3   
   140018313:	int3   
   140018314:	mov    eax,DWORD PTR [rcx+0x8]
   140018317:	shr    eax,0xf
   14001831a:	and    eax,0x1
   14001831d:	ret    
   14001831e:	int3   
   14001831f:	int3   
   140018320:	xor    eax,eax
   140018322:	cmp    BYTE PTR [rcx+0x8],0x1
   140018326:	setle  al
   140018329:	ret    
   14001832a:	int3   
   14001832b:	int3   
   14001832c:	mov    rcx,QWORD PTR [rcx]
   14001832f:	test   rcx,rcx
   140018332:	jne    0x140018337
   140018334:	xor    eax,eax
   140018336:	ret    
   140018337:	mov    rax,QWORD PTR [rcx]
   14001833a:	rex.W jmp QWORD PTR [rax]
   14001833d:	int3   
   14001833e:	int3   
   14001833f:	int3   
   140018340:	mov    eax,DWORD PTR [rcx+0xc]
   140018343:	ret    
   140018344:	mov    eax,0x1
   140018349:	ret    
   14001834a:	int3   
   14001834b:	int3   
   14001834c:	sub    rsp,0x28
   140018350:	mov    rcx,QWORD PTR [rcx+0x8]
   140018354:	xor    eax,eax
   140018356:	test   rcx,rcx
   140018359:	je     0x140018368
   14001835b:	mov    rcx,QWORD PTR [rcx]
   14001835e:	test   rcx,rcx
   140018361:	je     0x140018368
   140018363:	mov    rax,QWORD PTR [rcx]
   140018366:	call   QWORD PTR [rax]
   140018368:	add    rsp,0x28
   14001836c:	ret    
   14001836d:	int3   
   14001836e:	int3   
   14001836f:	int3   
   140018370:	mov    QWORD PTR [rsp+0x8],rbx
   140018375:	mov    QWORD PTR [rsp+0x10],rsi
   14001837a:	push   rdi
   14001837b:	sub    rsp,0x20
   14001837f:	cmp    DWORD PTR [rcx+0x18],0x0
   140018383:	mov    rsi,rcx
   140018386:	jge    0x1400183a4
   140018388:	mov    rcx,QWORD PTR [rcx+0x10]
   14001838c:	mov    rbx,QWORD PTR [rsi+0x8]
   140018390:	mov    rax,QWORD PTR [rcx]
   140018393:	call   QWORD PTR [rax]
   140018395:	mov    rdx,QWORD PTR [rbx]
   140018398:	mov    rcx,rbx
   14001839b:	mov    edi,eax
   14001839d:	call   QWORD PTR [rdx]
   14001839f:	add    edi,eax
   1400183a1:	mov    DWORD PTR [rsi+0x18],edi
   1400183a4:	mov    eax,DWORD PTR [rsi+0x18]
   1400183a7:	mov    rbx,QWORD PTR [rsp+0x30]
   1400183ac:	mov    rsi,QWORD PTR [rsp+0x38]
   1400183b1:	add    rsp,0x20
   1400183b5:	pop    rdi
   1400183b6:	ret    
   1400183b7:	int3   
   1400183b8:	mov    eax,DWORD PTR [rcx+0x10]
   1400183bb:	ret    
   1400183bc:	mov    eax,DWORD PTR [rip+0x20c4e]        # 0x140039010
   1400183c2:	test   al,0x1
   1400183c4:	jne    0x140018425
   1400183c6:	or     eax,0x1
   1400183c9:	xor    edx,edx
   1400183cb:	mov    DWORD PTR [rip+0x20c13],0x1        # 0x140038fe8
   1400183d5:	mov    DWORD PTR [rip+0x20c35],eax        # 0x140039010
   1400183db:	lea    rax,[rip+0x16c5e]        # 0x14002f040
   1400183e2:	mov    DWORD PTR [rip+0x20c00],0x4        # 0x140038fec
   1400183ec:	mov    QWORD PTR [rip+0x20be5],rdx        # 0x140038fd8
   1400183f3:	mov    QWORD PTR [rip+0x20bfa],0x2        # 0x140038ff8
   1400183fe:	mov    QWORD PTR [rip+0x20bff],0x3        # 0x140039008
   140018409:	mov    QWORD PTR [rip+0x20bc0],rax        # 0x140038fd0
   140018410:	mov    QWORD PTR [rip+0x20bc9],rax        # 0x140038fe0
   140018417:	mov    QWORD PTR [rip+0x20bd2],rax        # 0x140038ff0
   14001841e:	mov    QWORD PTR [rip+0x20bdb],rax        # 0x140039000
   140018425:	cmp    ecx,0x3
   140018428:	ja     0x14001843c
   14001842a:	movsxd rax,ecx
   14001842d:	lea    rcx,[rip+0x20b9c]        # 0x140038fd0
   140018434:	shl    rax,0x4
   140018438:	add    rax,rcx
   14001843b:	ret    
   14001843c:	lea    rax,[rip+0x20bbd]        # 0x140039000
   140018443:	ret    
   140018444:	bts    DWORD PTR [rcx+0x8],0xb
   140018449:	ret    
   14001844a:	int3   
   14001844b:	int3   
   14001844c:	bts    DWORD PTR [rcx+0x8],0xe
   140018451:	ret    
   140018452:	int3   
   140018453:	int3   
   140018454:	bts    DWORD PTR [rcx+0x8],0xc
   140018459:	ret    
   14001845a:	int3   
   14001845b:	int3   
   14001845c:	bts    DWORD PTR [rcx+0x8],0xd
   140018461:	ret    
   140018462:	int3   
   140018463:	int3   
   140018464:	cmp    QWORD PTR [rcx],0x0
   140018468:	je     0x14001846f
   14001846a:	bts    DWORD PTR [rcx+0x8],0x9
   14001846f:	ret    
   140018470:	bts    DWORD PTR [rcx+0x8],0xf
   140018475:	ret    
   140018476:	int3   
   140018477:	int3   
   140018478:	bts    DWORD PTR [rcx+0x8],0x8
   14001847d:	mov    rax,rcx
   140018480:	ret    
   140018481:	int3   
   140018482:	int3   
   140018483:	int3   
   140018484:	movsx  eax,BYTE PTR [rcx+0x8]
   140018488:	ret    
   140018489:	int3   
   14001848a:	int3   
   14001848b:	int3   
   14001848c:	test   r8d,r8d
   14001848f:	je     0x1400184a4
   140018491:	sub    rdx,rcx
   140018494:	mov    r8d,r8d
   140018497:	mov    al,BYTE PTR [rdx+rcx*1]
   14001849a:	mov    BYTE PTR [rcx],al
   14001849c:	inc    rcx
   14001849f:	dec    r8
   1400184a2:	jne    0x140018497
   1400184a4:	ret    
   1400184a5:	int3   
   1400184a6:	int3   
   1400184a7:	int3   
   1400184a8:	xor    eax,eax
   1400184aa:	cmp    BYTE PTR [rcx],al
   1400184ac:	je     0x1400184b8
   1400184ae:	inc    rcx
   1400184b1:	inc    eax
   1400184b3:	cmp    BYTE PTR [rcx],0x0
   1400184b6:	jne    0x1400184ae
   1400184b8:	ret    
   1400184b9:	int3   
   1400184ba:	int3   
   1400184bb:	int3   
   1400184bc:	test   r8d,r8d
   1400184bf:	jne    0x1400184c4
   1400184c1:	xor    eax,eax
   1400184c3:	ret    
   1400184c4:	or     r9d,0xffffffff
   1400184c8:	jmp    0x1400184da
   1400184ca:	mov    al,BYTE PTR [rcx]
   1400184cc:	test   al,al
   1400184ce:	je     0x1400184df
   1400184d0:	cmp    al,BYTE PTR [rdx]
   1400184d2:	jne    0x1400184df
   1400184d4:	inc    rcx
   1400184d7:	inc    rdx
   1400184da:	add    r8d,r9d
   1400184dd:	jne    0x1400184ca
   1400184df:	movzx  eax,BYTE PTR [rcx]
   1400184e2:	movzx  ecx,BYTE PTR [rdx]
   1400184e5:	sub    eax,ecx
   1400184e7:	ret    
   1400184e8:	mov    QWORD PTR [rsp+0x8],rbx
   1400184ed:	mov    QWORD PTR [rsp+0x10],rsi
   1400184f2:	mov    QWORD PTR [rsp+0x18],rdi
   1400184f7:	push   r14
   1400184f9:	sub    rsp,0xe0
   140018500:	mov    rbx,r9
   140018503:	mov    edi,r8d
   140018506:	mov    rsi,rdx
   140018509:	mov    r14,rcx
   14001850c:	test   r9,r9
   14001850f:	jne    0x140018518
   140018511:	xor    eax,eax
   140018513:	jmp    0x1400185ce
   140018518:	mov    ecx,0x5
   14001851d:	call   0x140008858
   140018522:	test   eax,eax
   140018524:	je     0x140018511
   140018526:	mov    ecx,0x5
   14001852b:	call   0x140008760
   140018530:	nop
   140018531:	mov    QWORD PTR [rip+0x20a68],rbx        # 0x140038fa0
   140018538:	mov    rax,QWORD PTR [rsp+0x110]
   140018540:	mov    QWORD PTR [rip+0x20a61],rax        # 0x140038fa8
   140018547:	and    QWORD PTR [rip+0x20a71],0x0        # 0x140038fc0
   14001854f:	xorps  xmm0,xmm0
   140018552:	movdqu XMMWORD PTR [rip+0x20a56],xmm0        # 0x140038fb0
   14001855a:	movzx  eax,WORD PTR [rsp+0x118]
   140018562:	mov    DWORD PTR [rsp+0x28],eax
   140018566:	and    QWORD PTR [rsp+0x20],0x0
   14001856c:	mov    r9d,edi
   14001856f:	mov    r8,rsi
   140018572:	mov    rdx,r14
   140018575:	lea    rcx,[rsp+0x30]
   14001857a:	call   0x140011c60
   14001857f:	lea    rcx,[rsp+0x30]
   140018584:	call   0x140011f54
   140018589:	mov    rbx,rax
   14001858c:	mov    r8,QWORD PTR [rip+0x20a15]        # 0x140038fa8
   140018593:	test   r8,r8
   140018596:	je     0x1400185c1
   140018598:	mov    rcx,QWORD PTR [rip+0x20a11]        # 0x140038fb0
   14001859f:	mov    QWORD PTR [rip+0x20a12],rcx        # 0x140038fb8
   1400185a6:	test   rcx,rcx
   1400185a9:	je     0x1400185c1
   1400185ab:	mov    rdx,QWORD PTR [rcx]
   1400185ae:	mov    QWORD PTR [rip+0x209fb],rdx        # 0x140038fb0
   1400185b5:	call   r8
   1400185b8:	mov    r8,QWORD PTR [rip+0x209e9]        # 0x140038fa8
   1400185bf:	jmp    0x140018598
   1400185c1:	mov    ecx,0x5
   1400185c6:	call   0x14000897c
   1400185cb:	mov    rax,rbx
   1400185ce:	lea    r11,[rsp+0xe0]
   1400185d6:	mov    rbx,QWORD PTR [r11+0x10]
   1400185da:	mov    rsi,QWORD PTR [r11+0x18]
   1400185de:	mov    rdi,QWORD PTR [r11+0x20]
   1400185e2:	mov    rsp,r11
   1400185e5:	pop    r14
   1400185e7:	ret    
   1400185e8:	mov    QWORD PTR [rsp+0x8],rbx
   1400185ed:	mov    QWORD PTR [rsp+0x10],rsi
   1400185f2:	mov    QWORD PTR [rsp+0x18],rdi
   1400185f7:	push   r14
   1400185f9:	sub    rsp,0xe0
   140018600:	mov    rbx,r9
   140018603:	mov    edi,r8d
   140018606:	mov    rsi,rdx
   140018609:	mov    r14,rcx
   14001860c:	test   r9,r9
   14001860f:	jne    0x140018618
   140018611:	xor    eax,eax
   140018613:	jmp    0x1400186d4
   140018618:	mov    ecx,0x5
   14001861d:	call   0x140008858
   140018622:	test   eax,eax
   140018624:	je     0x140018611
   140018626:	mov    ecx,0x5
   14001862b:	call   0x140008760
   140018630:	nop
   140018631:	mov    QWORD PTR [rip+0x20968],rbx        # 0x140038fa0
   140018638:	mov    rax,QWORD PTR [rsp+0x110]
   140018640:	mov    QWORD PTR [rip+0x20961],rax        # 0x140038fa8
   140018647:	and    QWORD PTR [rip+0x20971],0x0        # 0x140038fc0
   14001864f:	xorps  xmm0,xmm0
   140018652:	movdqu XMMWORD PTR [rip+0x20956],xmm0        # 0x140038fb0
   14001865a:	mov    eax,DWORD PTR [rsp+0x120]
   140018661:	mov    DWORD PTR [rsp+0x28],eax
   140018665:	mov    rax,QWORD PTR [rsp+0x118]
   14001866d:	mov    QWORD PTR [rsp+0x20],rax
   140018672:	mov    r9d,edi
   140018675:	mov    r8,rsi
   140018678:	mov    rdx,r14
   14001867b:	lea    rcx,[rsp+0x30]
   140018680:	call   0x140011c60
   140018685:	lea    rcx,[rsp+0x30]
   14001868a:	call   0x140011f54
   14001868f:	mov    rbx,rax
   140018692:	mov    r8,QWORD PTR [rip+0x2090f]        # 0x140038fa8
   140018699:	test   r8,r8
   14001869c:	je     0x1400186c7
   14001869e:	mov    rcx,QWORD PTR [rip+0x2090b]        # 0x140038fb0
   1400186a5:	mov    QWORD PTR [rip+0x2090c],rcx        # 0x140038fb8
   1400186ac:	test   rcx,rcx
   1400186af:	je     0x1400186c7
   1400186b1:	mov    rdx,QWORD PTR [rcx]
   1400186b4:	mov    QWORD PTR [rip+0x208f5],rdx        # 0x140038fb0
   1400186bb:	call   r8
   1400186be:	mov    r8,QWORD PTR [rip+0x208e3]        # 0x140038fa8
   1400186c5:	jmp    0x14001869e
   1400186c7:	mov    ecx,0x5
   1400186cc:	call   0x14000897c
   1400186d1:	mov    rax,rbx
   1400186d4:	lea    r11,[rsp+0xe0]
   1400186dc:	mov    rbx,QWORD PTR [r11+0x10]
   1400186e0:	mov    rsi,QWORD PTR [r11+0x18]
   1400186e4:	mov    rdi,QWORD PTR [r11+0x20]
   1400186e8:	mov    rsp,r11
   1400186eb:	pop    r14
   1400186ed:	ret    
   1400186ee:	int3   
   1400186ef:	int3   
   1400186f0:	xor    eax,eax
   1400186f2:	cmp    ecx,0x80
   1400186f8:	setb   al
   1400186fb:	ret    
   1400186fc:	rex push rbx
   1400186fe:	sub    rsp,0x20
   140018702:	mov    ebx,ecx
   140018704:	movzx  ecx,cl
   140018707:	call   0x140018ce0
   14001870c:	xor    edx,edx
   14001870e:	test   eax,eax
   140018710:	jne    0x140018717
   140018712:	cmp    bl,0x5f
   140018715:	jne    0x14001871c
   140018717:	mov    edx,0x1
   14001871c:	mov    eax,edx
   14001871e:	add    rsp,0x20
   140018722:	pop    rbx
   140018723:	ret    
   140018724:	rex push rbx
   140018726:	sub    rsp,0x20
   14001872a:	mov    ebx,ecx
   14001872c:	call   0x140018d60
   140018731:	xor    edx,edx
   140018733:	test   eax,eax
   140018735:	jne    0x14001873c
   140018737:	cmp    ebx,0x5f
   14001873a:	jne    0x140018741
   14001873c:	mov    edx,0x1
   140018741:	mov    eax,edx
   140018743:	add    rsp,0x20
   140018747:	pop    rbx
   140018748:	ret    
   140018749:	int3   
   14001874a:	int3   
   14001874b:	int3   
   14001874c:	and    ecx,0x7f
   14001874f:	mov    eax,ecx
   140018751:	ret    
   140018752:	int3   
   140018753:	int3   
   140018754:	rex push rbx
   140018756:	sub    rsp,0x40
   14001875a:	movsxd rbx,ecx
   14001875d:	lea    rcx,[rsp+0x20]
   140018762:	call   0x14000a000
   140018767:	mov    rax,QWORD PTR [rsp+0x20]
   14001876c:	cmp    DWORD PTR [rax+0xd4],0x1
   140018773:	jle    0x14001878a
   140018775:	lea    r8,[rsp+0x20]
   14001877a:	mov    edx,0x107
   14001877f:	mov    ecx,ebx
   140018781:	call   0x14001c590
   140018786:	mov    ecx,eax
   140018788:	jmp    0x14001879b
   14001878a:	mov    rax,QWORD PTR [rax+0x108]
   140018791:	movzx  ecx,WORD PTR [rax+rbx*2]
   140018795:	and    ecx,0x107
   14001879b:	cmp    BYTE PTR [rsp+0x38],0x0
   1400187a0:	je     0x1400187ae
   1400187a2:	mov    rax,QWORD PTR [rsp+0x30]
   1400187a7:	and    DWORD PTR [rax+0xc8],0xfffffffd
   1400187ae:	mov    eax,ecx
   1400187b0:	add    rsp,0x40
   1400187b4:	pop    rbx
   1400187b5:	ret    
   1400187b6:	int3   
   1400187b7:	int3   
   1400187b8:	rex push rbx
   1400187ba:	sub    rsp,0x40
   1400187be:	movsxd rbx,ecx
   1400187c1:	lea    rcx,[rsp+0x20]
   1400187c6:	call   0x14000a000
   1400187cb:	mov    rax,QWORD PTR [rsp+0x20]
   1400187d0:	cmp    DWORD PTR [rax+0xd4],0x1
   1400187d7:	jle    0x1400187ee
   1400187d9:	lea    r8,[rsp+0x20]
   1400187de:	mov    edx,0x103
   1400187e3:	mov    ecx,ebx
   1400187e5:	call   0x14001c590
   1400187ea:	mov    ecx,eax
   1400187ec:	jmp    0x1400187ff
   1400187ee:	mov    rax,QWORD PTR [rax+0x108]
   1400187f5:	movzx  ecx,WORD PTR [rax+rbx*2]
   1400187f9:	and    ecx,0x103
   1400187ff:	cmp    BYTE PTR [rsp+0x38],0x0
   140018804:	je     0x140018812
   140018806:	mov    rax,QWORD PTR [rsp+0x30]
   14001880b:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140018812:	mov    eax,ecx
   140018814:	add    rsp,0x40
   140018818:	pop    rbx
   140018819:	ret    
   14001881a:	int3   
   14001881b:	int3   
   14001881c:	rex push rbx
   14001881e:	sub    rsp,0x40
   140018822:	movsxd rbx,ecx
   140018825:	lea    rcx,[rsp+0x20]
   14001882a:	call   0x14000a000
   14001882f:	cmp    ebx,0x9
   140018832:	jne    0x140018839
   140018834:	lea    ecx,[rbx+0x37]
   140018837:	jmp    0x14001886e
   140018839:	mov    rax,QWORD PTR [rsp+0x20]
   14001883e:	cmp    DWORD PTR [rax+0xd4],0x1
   140018845:	jle    0x14001885c
   140018847:	lea    r8,[rsp+0x20]
   14001884c:	mov    edx,0x40
   140018851:	mov    ecx,ebx
   140018853:	call   0x14001c590
   140018858:	mov    ecx,eax
   14001885a:	jmp    0x14001886e
   14001885c:	mov    rax,QWORD PTR [rax+0x108]
   140018863:	mov    ecx,0x40
   140018868:	movzx  edx,WORD PTR [rax+rbx*2]
   14001886c:	and    ecx,edx
   14001886e:	cmp    BYTE PTR [rsp+0x38],0x0
   140018873:	je     0x140018881
   140018875:	mov    rax,QWORD PTR [rsp+0x30]
   14001887a:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140018881:	mov    eax,ecx
   140018883:	add    rsp,0x40
   140018887:	pop    rbx
   140018888:	ret    
   140018889:	int3   
   14001888a:	int3   
   14001888b:	int3   
   14001888c:	rex push rbx
   14001888e:	sub    rsp,0x40
   140018892:	movsxd rbx,ecx
   140018895:	lea    rcx,[rsp+0x20]
   14001889a:	call   0x14000a000
   14001889f:	mov    rax,QWORD PTR [rsp+0x20]
   1400188a4:	cmp    DWORD PTR [rax+0xd4],0x1
   1400188ab:	jle    0x1400188c2
   1400188ad:	lea    r8,[rsp+0x20]
   1400188b2:	mov    edx,0x20
   1400188b7:	mov    ecx,ebx
   1400188b9:	call   0x14001c590
   1400188be:	mov    ecx,eax
   1400188c0:	jmp    0x1400188d0
   1400188c2:	mov    rax,QWORD PTR [rax+0x108]
   1400188c9:	movzx  ecx,WORD PTR [rax+rbx*2]
   1400188cd:	and    ecx,0x20
   1400188d0:	cmp    BYTE PTR [rsp+0x38],0x0
   1400188d5:	je     0x1400188e3
   1400188d7:	mov    rax,QWORD PTR [rsp+0x30]
   1400188dc:	and    DWORD PTR [rax+0xc8],0xfffffffd
   1400188e3:	mov    eax,ecx
   1400188e5:	add    rsp,0x40
   1400188e9:	pop    rbx
   1400188ea:	ret    
   1400188eb:	int3   
   1400188ec:	rex push rbx
   1400188ee:	sub    rsp,0x40
   1400188f2:	movsxd rbx,ecx
   1400188f5:	lea    rcx,[rsp+0x20]
   1400188fa:	call   0x14000a000
   1400188ff:	mov    rax,QWORD PTR [rsp+0x20]
   140018904:	cmp    DWORD PTR [rax+0xd4],0x1
   14001890b:	jle    0x140018922
   14001890d:	lea    r8,[rsp+0x20]
   140018912:	mov    edx,0x107
   140018917:	mov    ecx,ebx
   140018919:	call   0x14001c590
   14001891e:	mov    edx,eax
   140018920:	jmp    0x140018933
   140018922:	mov    rax,QWORD PTR [rax+0x108]
   140018929:	movzx  edx,WORD PTR [rax+rbx*2]
   14001892d:	and    edx,0x107
   140018933:	xor    ecx,ecx
   140018935:	cmp    BYTE PTR [rsp+0x38],cl
   140018939:	je     0x140018947
   14001893b:	mov    rax,QWORD PTR [rsp+0x30]
   140018940:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140018947:	test   edx,edx
   140018949:	jne    0x140018950
   14001894b:	cmp    ebx,0x5f
   14001894e:	jne    0x140018955
   140018950:	mov    ecx,0x1
   140018955:	mov    eax,ecx
   140018957:	add    rsp,0x40
   14001895b:	pop    rbx
   14001895c:	ret    
   14001895d:	int3   
   14001895e:	int3   
   14001895f:	int3   
   140018960:	rex push rbx
   140018962:	sub    rsp,0x40
   140018966:	movsxd rbx,ecx
   140018969:	lea    rcx,[rsp+0x20]
   14001896e:	call   0x14000a000
   140018973:	mov    rax,QWORD PTR [rsp+0x20]
   140018978:	cmp    DWORD PTR [rax+0xd4],0x1
   14001897f:	jle    0x140018996
   140018981:	lea    r8,[rsp+0x20]
   140018986:	mov    edx,0x103
   14001898b:	mov    ecx,ebx
   14001898d:	call   0x14001c590
   140018992:	mov    edx,eax
   140018994:	jmp    0x1400189a7
   140018996:	mov    rax,QWORD PTR [rax+0x108]
   14001899d:	movzx  edx,WORD PTR [rax+rbx*2]
   1400189a1:	and    edx,0x103
   1400189a7:	xor    ecx,ecx
   1400189a9:	cmp    BYTE PTR [rsp+0x38],cl
   1400189ad:	je     0x1400189bb
   1400189af:	mov    rax,QWORD PTR [rsp+0x30]
   1400189b4:	and    DWORD PTR [rax+0xc8],0xfffffffd
   1400189bb:	test   edx,edx
   1400189bd:	jne    0x1400189c4
   1400189bf:	cmp    ebx,0x5f
   1400189c2:	jne    0x1400189c9
   1400189c4:	mov    ecx,0x1
   1400189c9:	mov    eax,ecx
   1400189cb:	add    rsp,0x40
   1400189cf:	pop    rbx
   1400189d0:	ret    
   1400189d1:	int3   
   1400189d2:	int3   
   1400189d3:	int3   
   1400189d4:	rex push rbx
   1400189d6:	sub    rsp,0x40
   1400189da:	movsxd rbx,ecx
   1400189dd:	lea    rcx,[rsp+0x20]
   1400189e2:	call   0x14000a000
   1400189e7:	mov    rax,QWORD PTR [rsp+0x20]
   1400189ec:	cmp    DWORD PTR [rax+0xd4],0x1
   1400189f3:	jle    0x140018a0a
   1400189f5:	lea    r8,[rsp+0x20]
   1400189fa:	mov    edx,0x4
   1400189ff:	mov    ecx,ebx
   140018a01:	call   0x14001c590
   140018a06:	mov    ecx,eax
   140018a08:	jmp    0x140018a18
   140018a0a:	mov    rax,QWORD PTR [rax+0x108]
   140018a11:	movzx  ecx,WORD PTR [rax+rbx*2]
   140018a15:	and    ecx,0x4
   140018a18:	cmp    BYTE PTR [rsp+0x38],0x0
   140018a1d:	je     0x140018a2b
   140018a1f:	mov    rax,QWORD PTR [rsp+0x30]
   140018a24:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140018a2b:	mov    eax,ecx
   140018a2d:	add    rsp,0x40
   140018a31:	pop    rbx
   140018a32:	ret    
   140018a33:	int3   
   140018a34:	rex push rbx
   140018a36:	sub    rsp,0x40
   140018a3a:	movsxd rbx,ecx
   140018a3d:	lea    rcx,[rsp+0x20]
   140018a42:	call   0x14000a000
   140018a47:	mov    rax,QWORD PTR [rsp+0x20]
   140018a4c:	cmp    DWORD PTR [rax+0xd4],0x1
   140018a53:	jle    0x140018a6a
   140018a55:	lea    r8,[rsp+0x20]
   140018a5a:	mov    edx,0x117
   140018a5f:	mov    ecx,ebx
   140018a61:	call   0x14001c590
   140018a66:	mov    ecx,eax
   140018a68:	jmp    0x140018a7b
   140018a6a:	mov    rax,QWORD PTR [rax+0x108]
   140018a71:	movzx  ecx,WORD PTR [rax+rbx*2]
   140018a75:	and    ecx,0x117
   140018a7b:	cmp    BYTE PTR [rsp+0x38],0x0
   140018a80:	je     0x140018a8e
   140018a82:	mov    rax,QWORD PTR [rsp+0x30]
   140018a87:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140018a8e:	mov    eax,ecx
   140018a90:	add    rsp,0x40
   140018a94:	pop    rbx
   140018a95:	ret    
   140018a96:	int3   
   140018a97:	int3   
   140018a98:	rex push rbx
   140018a9a:	sub    rsp,0x40
   140018a9e:	movsxd rbx,ecx
   140018aa1:	lea    rcx,[rsp+0x20]
   140018aa6:	call   0x14000a000
   140018aab:	mov    rax,QWORD PTR [rsp+0x20]
   140018ab0:	cmp    DWORD PTR [rax+0xd4],0x1
   140018ab7:	jle    0x140018ace
   140018ab9:	lea    r8,[rsp+0x20]
   140018abe:	mov    edx,0x2
   140018ac3:	mov    ecx,ebx
   140018ac5:	call   0x14001c590
   140018aca:	mov    ecx,eax
   140018acc:	jmp    0x140018adc
   140018ace:	mov    rax,QWORD PTR [rax+0x108]
   140018ad5:	movzx  ecx,WORD PTR [rax+rbx*2]
   140018ad9:	and    ecx,0x2
   140018adc:	cmp    BYTE PTR [rsp+0x38],0x0
   140018ae1:	je     0x140018aef
   140018ae3:	mov    rax,QWORD PTR [rsp+0x30]
   140018ae8:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140018aef:	mov    eax,ecx
   140018af1:	add    rsp,0x40
   140018af5:	pop    rbx
   140018af6:	ret    
   140018af7:	int3   
   140018af8:	rex push rbx
   140018afa:	sub    rsp,0x40
   140018afe:	movsxd rbx,ecx
   140018b01:	lea    rcx,[rsp+0x20]
   140018b06:	call   0x14000a000
   140018b0b:	mov    rax,QWORD PTR [rsp+0x20]
   140018b10:	cmp    DWORD PTR [rax+0xd4],0x1
   140018b17:	jle    0x140018b2e
   140018b19:	lea    r8,[rsp+0x20]
   140018b1e:	mov    edx,0x157
   140018b23:	mov    ecx,ebx
   140018b25:	call   0x14001c590
   140018b2a:	mov    ecx,eax
   140018b2c:	jmp    0x140018b3f
   140018b2e:	mov    rax,QWORD PTR [rax+0x108]
   140018b35:	movzx  ecx,WORD PTR [rax+rbx*2]
   140018b39:	and    ecx,0x157
   140018b3f:	cmp    BYTE PTR [rsp+0x38],0x0
   140018b44:	je     0x140018b52
   140018b46:	mov    rax,QWORD PTR [rsp+0x30]
   140018b4b:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140018b52:	mov    eax,ecx
   140018b54:	add    rsp,0x40
   140018b58:	pop    rbx
   140018b59:	ret    
   140018b5a:	int3   
   140018b5b:	int3   
   140018b5c:	rex push rbx
   140018b5e:	sub    rsp,0x40
   140018b62:	movsxd rbx,ecx
   140018b65:	lea    rcx,[rsp+0x20]
   140018b6a:	call   0x14000a000
   140018b6f:	mov    rax,QWORD PTR [rsp+0x20]
   140018b74:	cmp    DWORD PTR [rax+0xd4],0x1
   140018b7b:	jle    0x140018b92
   140018b7d:	lea    r8,[rsp+0x20]
   140018b82:	mov    edx,0x10
   140018b87:	mov    ecx,ebx
   140018b89:	call   0x14001c590
   140018b8e:	mov    ecx,eax
   140018b90:	jmp    0x140018ba0
   140018b92:	mov    rax,QWORD PTR [rax+0x108]
   140018b99:	movzx  ecx,WORD PTR [rax+rbx*2]
   140018b9d:	and    ecx,0x10
   140018ba0:	cmp    BYTE PTR [rsp+0x38],0x0
   140018ba5:	je     0x140018bb3
   140018ba7:	mov    rax,QWORD PTR [rsp+0x30]
   140018bac:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140018bb3:	mov    eax,ecx
   140018bb5:	add    rsp,0x40
   140018bb9:	pop    rbx
   140018bba:	ret    
   140018bbb:	int3   
   140018bbc:	rex push rbx
   140018bbe:	sub    rsp,0x40
   140018bc2:	movsxd rbx,ecx
   140018bc5:	lea    rcx,[rsp+0x20]
   140018bca:	call   0x14000a000
   140018bcf:	mov    rax,QWORD PTR [rsp+0x20]
   140018bd4:	cmp    DWORD PTR [rax+0xd4],0x1
   140018bdb:	jle    0x140018bf2
   140018bdd:	lea    r8,[rsp+0x20]
   140018be2:	mov    edx,0x8
   140018be7:	mov    ecx,ebx
   140018be9:	call   0x14001c590
   140018bee:	mov    ecx,eax
   140018bf0:	jmp    0x140018c00
   140018bf2:	mov    rax,QWORD PTR [rax+0x108]
   140018bf9:	movzx  ecx,WORD PTR [rax+rbx*2]
   140018bfd:	and    ecx,0x8
   140018c00:	cmp    BYTE PTR [rsp+0x38],0x0
   140018c05:	je     0x140018c13
   140018c07:	mov    rax,QWORD PTR [rsp+0x30]
   140018c0c:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140018c13:	mov    eax,ecx
   140018c15:	add    rsp,0x40
   140018c19:	pop    rbx
   140018c1a:	ret    
   140018c1b:	int3   
   140018c1c:	rex push rbx
   140018c1e:	sub    rsp,0x40
   140018c22:	movsxd rbx,ecx
   140018c25:	lea    rcx,[rsp+0x20]
   140018c2a:	call   0x14000a000
   140018c2f:	mov    rax,QWORD PTR [rsp+0x20]
   140018c34:	cmp    DWORD PTR [rax+0xd4],0x1
   140018c3b:	jle    0x140018c52
   140018c3d:	lea    r8,[rsp+0x20]
   140018c42:	mov    edx,0x1
   140018c47:	mov    ecx,ebx
   140018c49:	call   0x14001c590
   140018c4e:	mov    ecx,eax
   140018c50:	jmp    0x140018c60
   140018c52:	mov    rax,QWORD PTR [rax+0x108]
   140018c59:	movzx  ecx,WORD PTR [rax+rbx*2]
   140018c5d:	and    ecx,0x1
   140018c60:	cmp    BYTE PTR [rsp+0x38],0x0
   140018c65:	je     0x140018c73
   140018c67:	mov    rax,QWORD PTR [rsp+0x30]
   140018c6c:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140018c73:	mov    eax,ecx
   140018c75:	add    rsp,0x40
   140018c79:	pop    rbx
   140018c7a:	ret    
   140018c7b:	int3   
   140018c7c:	rex push rbx
   140018c7e:	sub    rsp,0x40
   140018c82:	movsxd rbx,ecx
   140018c85:	lea    rcx,[rsp+0x20]
   140018c8a:	call   0x14000a000
   140018c8f:	mov    rax,QWORD PTR [rsp+0x20]
   140018c94:	cmp    DWORD PTR [rax+0xd4],0x1
   140018c9b:	jle    0x140018cb2
   140018c9d:	lea    r8,[rsp+0x20]
   140018ca2:	mov    edx,0x80
   140018ca7:	mov    ecx,ebx
   140018ca9:	call   0x14001c590
   140018cae:	mov    ecx,eax
   140018cb0:	jmp    0x140018cc3
   140018cb2:	mov    rax,QWORD PTR [rax+0x108]
   140018cb9:	movzx  ecx,WORD PTR [rax+rbx*2]
   140018cbd:	and    ecx,0x80
   140018cc3:	cmp    BYTE PTR [rsp+0x38],0x0
   140018cc8:	je     0x140018cd6
   140018cca:	mov    rax,QWORD PTR [rsp+0x30]
   140018ccf:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140018cd6:	mov    eax,ecx
   140018cd8:	add    rsp,0x40
   140018cdc:	pop    rbx
   140018cdd:	ret    
   140018cde:	int3   
   140018cdf:	int3   
   140018ce0:	rex push rbx
   140018ce2:	sub    rsp,0x40
   140018ce6:	cmp    DWORD PTR [rip+0x20333],0x0        # 0x140039020
   140018ced:	movsxd rbx,ecx
   140018cf0:	jne    0x140018d04
   140018cf2:	mov    rax,QWORD PTR [rip+0x1e19f]        # 0x140036e98
   140018cf9:	movzx  eax,WORD PTR [rax+rbx*2]
   140018cfd:	and    eax,0x107
   140018d02:	jmp    0x140018d59
   140018d04:	lea    rcx,[rsp+0x20]
   140018d09:	xor    edx,edx
   140018d0b:	call   0x14000a000
   140018d10:	mov    rax,QWORD PTR [rsp+0x20]
   140018d15:	cmp    DWORD PTR [rax+0xd4],0x1
   140018d1c:	jle    0x140018d33
   140018d1e:	lea    r8,[rsp+0x20]
   140018d23:	mov    edx,0x107
   140018d28:	mov    ecx,ebx
   140018d2a:	call   0x14001c590
   140018d2f:	mov    ecx,eax
   140018d31:	jmp    0x140018d44
   140018d33:	mov    rax,QWORD PTR [rax+0x108]
   140018d3a:	movzx  ecx,WORD PTR [rax+rbx*2]
   140018d3e:	and    ecx,0x107
   140018d44:	cmp    BYTE PTR [rsp+0x38],0x0
   140018d49:	je     0x140018d57
   140018d4b:	mov    rax,QWORD PTR [rsp+0x30]
   140018d50:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140018d57:	mov    eax,ecx
   140018d59:	add    rsp,0x40
   140018d5d:	pop    rbx
   140018d5e:	ret    
   140018d5f:	int3   
   140018d60:	rex push rbx
   140018d62:	sub    rsp,0x40
   140018d66:	cmp    DWORD PTR [rip+0x202b3],0x0        # 0x140039020
   140018d6d:	movsxd rbx,ecx
   140018d70:	jne    0x140018d84
   140018d72:	mov    rax,QWORD PTR [rip+0x1e11f]        # 0x140036e98
   140018d79:	movzx  eax,WORD PTR [rax+rbx*2]
   140018d7d:	and    eax,0x103
   140018d82:	jmp    0x140018dd9
   140018d84:	lea    rcx,[rsp+0x20]
   140018d89:	xor    edx,edx
   140018d8b:	call   0x14000a000
   140018d90:	mov    rax,QWORD PTR [rsp+0x20]
   140018d95:	cmp    DWORD PTR [rax+0xd4],0x1
   140018d9c:	jle    0x140018db3
   140018d9e:	lea    r8,[rsp+0x20]
   140018da3:	mov    edx,0x103
   140018da8:	mov    ecx,ebx
   140018daa:	call   0x14001c590
   140018daf:	mov    ecx,eax
   140018db1:	jmp    0x140018dc4
   140018db3:	mov    rax,QWORD PTR [rax+0x108]
   140018dba:	movzx  ecx,WORD PTR [rax+rbx*2]
   140018dbe:	and    ecx,0x103
   140018dc4:	cmp    BYTE PTR [rsp+0x38],0x0
   140018dc9:	je     0x140018dd7
   140018dcb:	mov    rax,QWORD PTR [rsp+0x30]
   140018dd0:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140018dd7:	mov    eax,ecx
   140018dd9:	add    rsp,0x40
   140018ddd:	pop    rbx
   140018dde:	ret    
   140018ddf:	int3   
   140018de0:	cmp    DWORD PTR [rip+0x20239],0x0        # 0x140039020
   140018de7:	jne    0x140018e08
   140018de9:	cmp    ecx,0x9
   140018dec:	jne    0x140018df2
   140018dee:	lea    eax,[rcx+0x37]
   140018df1:	ret    
   140018df2:	mov    rax,QWORD PTR [rip+0x1e09f]        # 0x140036e98
   140018df9:	movsxd rcx,ecx
   140018dfc:	movzx  edx,WORD PTR [rax+rcx*2]
   140018e00:	mov    eax,0x40
   140018e05:	and    eax,edx
   140018e07:	ret    
   140018e08:	xor    edx,edx
   140018e0a:	jmp    0x14001881c
   140018e0f:	int3   
   140018e10:	rex push rbx
   140018e12:	sub    rsp,0x40
   140018e16:	cmp    DWORD PTR [rip+0x20203],0x0        # 0x140039020
   140018e1d:	movsxd rbx,ecx
   140018e20:	jne    0x140018e32
   140018e22:	mov    rax,QWORD PTR [rip+0x1e06f]        # 0x140036e98
   140018e29:	movzx  eax,WORD PTR [rax+rbx*2]
   140018e2d:	and    eax,0x20
   140018e30:	jmp    0x140018e84
   140018e32:	lea    rcx,[rsp+0x20]
   140018e37:	xor    edx,edx
   140018e39:	call   0x14000a000
   140018e3e:	mov    rax,QWORD PTR [rsp+0x20]
   140018e43:	cmp    DWORD PTR [rax+0xd4],0x1
   140018e4a:	jle    0x140018e61
   140018e4c:	lea    r8,[rsp+0x20]
   140018e51:	mov    edx,0x20
   140018e56:	mov    ecx,ebx
   140018e58:	call   0x14001c590
   140018e5d:	mov    ecx,eax
   140018e5f:	jmp    0x140018e6f
   140018e61:	mov    rax,QWORD PTR [rax+0x108]
   140018e68:	movzx  ecx,WORD PTR [rax+rbx*2]
   140018e6c:	and    ecx,0x20
   140018e6f:	cmp    BYTE PTR [rsp+0x38],0x0
   140018e74:	je     0x140018e82
   140018e76:	mov    rax,QWORD PTR [rsp+0x30]
   140018e7b:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140018e82:	mov    eax,ecx
   140018e84:	add    rsp,0x40
   140018e88:	pop    rbx
   140018e89:	ret    
   140018e8a:	int3   
   140018e8b:	int3   
   140018e8c:	rex push rbx
   140018e8e:	sub    rsp,0x40
   140018e92:	cmp    DWORD PTR [rip+0x20187],0x0        # 0x140039020
   140018e99:	movsxd rbx,ecx
   140018e9c:	jne    0x140018eae
   140018e9e:	mov    rax,QWORD PTR [rip+0x1dff3]        # 0x140036e98
   140018ea5:	movzx  eax,WORD PTR [rax+rbx*2]
   140018ea9:	and    eax,0x4
   140018eac:	jmp    0x140018f00
   140018eae:	lea    rcx,[rsp+0x20]
   140018eb3:	xor    edx,edx
   140018eb5:	call   0x14000a000
   140018eba:	mov    rax,QWORD PTR [rsp+0x20]
   140018ebf:	cmp    DWORD PTR [rax+0xd4],0x1
   140018ec6:	jle    0x140018edd
   140018ec8:	lea    r8,[rsp+0x20]
   140018ecd:	mov    edx,0x4
   140018ed2:	mov    ecx,ebx
   140018ed4:	call   0x14001c590
   140018ed9:	mov    ecx,eax
   140018edb:	jmp    0x140018eeb
   140018edd:	mov    rax,QWORD PTR [rax+0x108]
   140018ee4:	movzx  ecx,WORD PTR [rax+rbx*2]
   140018ee8:	and    ecx,0x4
   140018eeb:	cmp    BYTE PTR [rsp+0x38],0x0
   140018ef0:	je     0x140018efe
   140018ef2:	mov    rax,QWORD PTR [rsp+0x30]
   140018ef7:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140018efe:	mov    eax,ecx
   140018f00:	add    rsp,0x40
   140018f04:	pop    rbx
   140018f05:	ret    
   140018f06:	int3   
   140018f07:	int3   
   140018f08:	rex push rbx
   140018f0a:	sub    rsp,0x40
   140018f0e:	cmp    DWORD PTR [rip+0x2010b],0x0        # 0x140039020
   140018f15:	movsxd rbx,ecx
   140018f18:	jne    0x140018f2c
   140018f1a:	mov    rax,QWORD PTR [rip+0x1df77]        # 0x140036e98
   140018f21:	movzx  eax,WORD PTR [rax+rbx*2]
   140018f25:	and    eax,0x117
   140018f2a:	jmp    0x140018f81
   140018f2c:	lea    rcx,[rsp+0x20]
   140018f31:	xor    edx,edx
   140018f33:	call   0x14000a000
   140018f38:	mov    rax,QWORD PTR [rsp+0x20]
   140018f3d:	cmp    DWORD PTR [rax+0xd4],0x1
   140018f44:	jle    0x140018f5b
   140018f46:	lea    r8,[rsp+0x20]
   140018f4b:	mov    edx,0x117
   140018f50:	mov    ecx,ebx
   140018f52:	call   0x14001c590
   140018f57:	mov    ecx,eax
   140018f59:	jmp    0x140018f6c
   140018f5b:	mov    rax,QWORD PTR [rax+0x108]
   140018f62:	movzx  ecx,WORD PTR [rax+rbx*2]
   140018f66:	and    ecx,0x117
   140018f6c:	cmp    BYTE PTR [rsp+0x38],0x0
   140018f71:	je     0x140018f7f
   140018f73:	mov    rax,QWORD PTR [rsp+0x30]
   140018f78:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140018f7f:	mov    eax,ecx
   140018f81:	add    rsp,0x40
   140018f85:	pop    rbx
   140018f86:	ret    
   140018f87:	int3   
   140018f88:	rex push rbx
   140018f8a:	sub    rsp,0x40
   140018f8e:	cmp    DWORD PTR [rip+0x2008b],0x0        # 0x140039020
   140018f95:	movsxd rbx,ecx
   140018f98:	jne    0x140018faa
   140018f9a:	mov    rax,QWORD PTR [rip+0x1def7]        # 0x140036e98
   140018fa1:	movzx  eax,WORD PTR [rax+rbx*2]
   140018fa5:	and    eax,0x2
   140018fa8:	jmp    0x140018ffc
   140018faa:	lea    rcx,[rsp+0x20]
   140018faf:	xor    edx,edx
   140018fb1:	call   0x14000a000
   140018fb6:	mov    rax,QWORD PTR [rsp+0x20]
   140018fbb:	cmp    DWORD PTR [rax+0xd4],0x1
   140018fc2:	jle    0x140018fd9
   140018fc4:	lea    r8,[rsp+0x20]
   140018fc9:	mov    edx,0x2
   140018fce:	mov    ecx,ebx
   140018fd0:	call   0x14001c590
   140018fd5:	mov    ecx,eax
   140018fd7:	jmp    0x140018fe7
   140018fd9:	mov    rax,QWORD PTR [rax+0x108]
   140018fe0:	movzx  ecx,WORD PTR [rax+rbx*2]
   140018fe4:	and    ecx,0x2
   140018fe7:	cmp    BYTE PTR [rsp+0x38],0x0
   140018fec:	je     0x140018ffa
   140018fee:	mov    rax,QWORD PTR [rsp+0x30]
   140018ff3:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140018ffa:	mov    eax,ecx
   140018ffc:	add    rsp,0x40
   140019000:	pop    rbx
   140019001:	ret    
   140019002:	int3   
   140019003:	int3   
   140019004:	rex push rbx
   140019006:	sub    rsp,0x40
   14001900a:	cmp    DWORD PTR [rip+0x2000f],0x0        # 0x140039020
   140019011:	movsxd rbx,ecx
   140019014:	jne    0x140019028
   140019016:	mov    rax,QWORD PTR [rip+0x1de7b]        # 0x140036e98
   14001901d:	movzx  eax,WORD PTR [rax+rbx*2]
   140019021:	and    eax,0x157
   140019026:	jmp    0x14001907d
   140019028:	lea    rcx,[rsp+0x20]
   14001902d:	xor    edx,edx
   14001902f:	call   0x14000a000
   140019034:	mov    rax,QWORD PTR [rsp+0x20]
   140019039:	cmp    DWORD PTR [rax+0xd4],0x1
   140019040:	jle    0x140019057
   140019042:	lea    r8,[rsp+0x20]
   140019047:	mov    edx,0x157
   14001904c:	mov    ecx,ebx
   14001904e:	call   0x14001c590
   140019053:	mov    ecx,eax
   140019055:	jmp    0x140019068
   140019057:	mov    rax,QWORD PTR [rax+0x108]
   14001905e:	movzx  ecx,WORD PTR [rax+rbx*2]
   140019062:	and    ecx,0x157
   140019068:	cmp    BYTE PTR [rsp+0x38],0x0
   14001906d:	je     0x14001907b
   14001906f:	mov    rax,QWORD PTR [rsp+0x30]
   140019074:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14001907b:	mov    eax,ecx
   14001907d:	add    rsp,0x40
   140019081:	pop    rbx
   140019082:	ret    
   140019083:	int3   
   140019084:	rex push rbx
   140019086:	sub    rsp,0x40
   14001908a:	cmp    DWORD PTR [rip+0x1ff8f],0x0        # 0x140039020
   140019091:	movsxd rbx,ecx
   140019094:	jne    0x1400190a6
   140019096:	mov    rax,QWORD PTR [rip+0x1ddfb]        # 0x140036e98
   14001909d:	movzx  eax,WORD PTR [rax+rbx*2]
   1400190a1:	and    eax,0x10
   1400190a4:	jmp    0x1400190f8
   1400190a6:	lea    rcx,[rsp+0x20]
   1400190ab:	xor    edx,edx
   1400190ad:	call   0x14000a000
   1400190b2:	mov    rax,QWORD PTR [rsp+0x20]
   1400190b7:	cmp    DWORD PTR [rax+0xd4],0x1
   1400190be:	jle    0x1400190d5
   1400190c0:	lea    r8,[rsp+0x20]
   1400190c5:	mov    edx,0x10
   1400190ca:	mov    ecx,ebx
   1400190cc:	call   0x14001c590
   1400190d1:	mov    ecx,eax
   1400190d3:	jmp    0x1400190e3
   1400190d5:	mov    rax,QWORD PTR [rax+0x108]
   1400190dc:	movzx  ecx,WORD PTR [rax+rbx*2]
   1400190e0:	and    ecx,0x10
   1400190e3:	cmp    BYTE PTR [rsp+0x38],0x0
   1400190e8:	je     0x1400190f6
   1400190ea:	mov    rax,QWORD PTR [rsp+0x30]
   1400190ef:	and    DWORD PTR [rax+0xc8],0xfffffffd
   1400190f6:	mov    eax,ecx
   1400190f8:	add    rsp,0x40
   1400190fc:	pop    rbx
   1400190fd:	ret    
   1400190fe:	int3   
   1400190ff:	int3   
   140019100:	rex push rbx
   140019102:	sub    rsp,0x40
   140019106:	cmp    DWORD PTR [rip+0x1ff13],0x0        # 0x140039020
   14001910d:	movsxd rbx,ecx
   140019110:	jne    0x140019122
   140019112:	mov    rax,QWORD PTR [rip+0x1dd7f]        # 0x140036e98
   140019119:	movzx  eax,WORD PTR [rax+rbx*2]
   14001911d:	and    eax,0x8
   140019120:	jmp    0x140019174
   140019122:	lea    rcx,[rsp+0x20]
   140019127:	xor    edx,edx
   140019129:	call   0x14000a000
   14001912e:	mov    rax,QWORD PTR [rsp+0x20]
   140019133:	cmp    DWORD PTR [rax+0xd4],0x1
   14001913a:	jle    0x140019151
   14001913c:	lea    r8,[rsp+0x20]
   140019141:	mov    edx,0x8
   140019146:	mov    ecx,ebx
   140019148:	call   0x14001c590
   14001914d:	mov    ecx,eax
   14001914f:	jmp    0x14001915f
   140019151:	mov    rax,QWORD PTR [rax+0x108]
   140019158:	movzx  ecx,WORD PTR [rax+rbx*2]
   14001915c:	and    ecx,0x8
   14001915f:	cmp    BYTE PTR [rsp+0x38],0x0
   140019164:	je     0x140019172
   140019166:	mov    rax,QWORD PTR [rsp+0x30]
   14001916b:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140019172:	mov    eax,ecx
   140019174:	add    rsp,0x40
   140019178:	pop    rbx
   140019179:	ret    
   14001917a:	int3   
   14001917b:	int3   
   14001917c:	rex push rbx
   14001917e:	sub    rsp,0x40
   140019182:	cmp    DWORD PTR [rip+0x1fe97],0x0        # 0x140039020
   140019189:	movsxd rbx,ecx
   14001918c:	jne    0x14001919e
   14001918e:	mov    rax,QWORD PTR [rip+0x1dd03]        # 0x140036e98
   140019195:	movzx  eax,WORD PTR [rax+rbx*2]
   140019199:	and    eax,0x1
   14001919c:	jmp    0x1400191f0
   14001919e:	lea    rcx,[rsp+0x20]
   1400191a3:	xor    edx,edx
   1400191a5:	call   0x14000a000
   1400191aa:	mov    rax,QWORD PTR [rsp+0x20]
   1400191af:	cmp    DWORD PTR [rax+0xd4],0x1
   1400191b6:	jle    0x1400191cd
   1400191b8:	lea    r8,[rsp+0x20]
   1400191bd:	mov    edx,0x1
   1400191c2:	mov    ecx,ebx
   1400191c4:	call   0x14001c590
   1400191c9:	mov    ecx,eax
   1400191cb:	jmp    0x1400191db
   1400191cd:	mov    rax,QWORD PTR [rax+0x108]
   1400191d4:	movzx  ecx,WORD PTR [rax+rbx*2]
   1400191d8:	and    ecx,0x1
   1400191db:	cmp    BYTE PTR [rsp+0x38],0x0
   1400191e0:	je     0x1400191ee
   1400191e2:	mov    rax,QWORD PTR [rsp+0x30]
   1400191e7:	and    DWORD PTR [rax+0xc8],0xfffffffd
   1400191ee:	mov    eax,ecx
   1400191f0:	add    rsp,0x40
   1400191f4:	pop    rbx
   1400191f5:	ret    
   1400191f6:	int3   
   1400191f7:	int3   
   1400191f8:	rex push rbx
   1400191fa:	sub    rsp,0x40
   1400191fe:	cmp    DWORD PTR [rip+0x1fe1b],0x0        # 0x140039020
   140019205:	movsxd rbx,ecx
   140019208:	jne    0x14001921c
   14001920a:	mov    rax,QWORD PTR [rip+0x1dc87]        # 0x140036e98
   140019211:	movzx  eax,WORD PTR [rax+rbx*2]
   140019215:	and    eax,0x80
   14001921a:	jmp    0x140019271
   14001921c:	lea    rcx,[rsp+0x20]
   140019221:	xor    edx,edx
   140019223:	call   0x14000a000
   140019228:	mov    rax,QWORD PTR [rsp+0x20]
   14001922d:	cmp    DWORD PTR [rax+0xd4],0x1
   140019234:	jle    0x14001924b
   140019236:	lea    r8,[rsp+0x20]
   14001923b:	mov    edx,0x80
   140019240:	mov    ecx,ebx
   140019242:	call   0x14001c590
   140019247:	mov    ecx,eax
   140019249:	jmp    0x14001925c
   14001924b:	mov    rax,QWORD PTR [rax+0x108]
   140019252:	movzx  ecx,WORD PTR [rax+rbx*2]
   140019256:	and    ecx,0x80
   14001925c:	cmp    BYTE PTR [rsp+0x38],0x0
   140019261:	je     0x14001926f
   140019263:	mov    rax,QWORD PTR [rsp+0x30]
   140019268:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14001926f:	mov    eax,ecx
   140019271:	add    rsp,0x40
   140019275:	pop    rbx
   140019276:	ret    
   140019277:	int3   
   140019278:	lea    eax,[rcx+0x20]
   14001927b:	ret    
   14001927c:	mov    QWORD PTR [rsp+0x10],rdi
   140019281:	mov    QWORD PTR [rsp+0x20],r14
   140019286:	push   rbp
   140019287:	mov    rbp,rsp
   14001928a:	sub    rsp,0x70
   14001928e:	movsxd rdi,ecx
   140019291:	lea    rcx,[rbp-0x20]
   140019295:	call   0x14000a000
   14001929a:	cmp    edi,0x100
   1400192a0:	jae    0x1400192ff
   1400192a2:	mov    rdx,QWORD PTR [rbp-0x20]
   1400192a6:	cmp    DWORD PTR [rdx+0xd4],0x1
   1400192ad:	jle    0x1400192c5
   1400192af:	lea    r8,[rbp-0x20]
   1400192b3:	mov    edx,0x1
   1400192b8:	mov    ecx,edi
   1400192ba:	call   0x14001c590
   1400192bf:	mov    rdx,QWORD PTR [rbp-0x20]
   1400192c3:	jmp    0x1400192d3
   1400192c5:	mov    rax,QWORD PTR [rdx+0x108]
   1400192cc:	movzx  eax,WORD PTR [rax+rdi*2]
   1400192d0:	and    eax,0x1
   1400192d3:	test   eax,eax
   1400192d5:	je     0x1400192e7
   1400192d7:	mov    rax,QWORD PTR [rdx+0x110]
   1400192de:	movzx  eax,BYTE PTR [rax+rdi*1]
   1400192e2:	jmp    0x1400193ab
   1400192e7:	cmp    BYTE PTR [rbp-0x8],0x0
   1400192eb:	je     0x1400192f8
   1400192ed:	mov    rax,QWORD PTR [rbp-0x10]
   1400192f1:	and    DWORD PTR [rax+0xc8],0xfffffffd
   1400192f8:	mov    eax,edi
   1400192fa:	jmp    0x1400193bc
   1400192ff:	mov    rax,QWORD PTR [rbp-0x20]
   140019303:	cmp    DWORD PTR [rax+0xd4],0x1
   14001930a:	jle    0x140019337
   14001930c:	mov    r14d,edi
   14001930f:	lea    rdx,[rbp-0x20]
   140019313:	sar    r14d,0x8
   140019317:	movzx  ecx,r14b
   14001931b:	call   0x14001db48
   140019320:	test   eax,eax
   140019322:	je     0x140019337
   140019324:	mov    BYTE PTR [rbp+0x10],r14b
   140019328:	mov    BYTE PTR [rbp+0x11],dil
   14001932c:	mov    BYTE PTR [rbp+0x12],0x0
   140019330:	mov    ecx,0x2
   140019335:	jmp    0x14001934f
   140019337:	call   0x1400095b8
   14001933c:	mov    ecx,0x1
   140019341:	mov    DWORD PTR [rax],0x2a
   140019347:	mov    BYTE PTR [rbp+0x10],dil
   14001934b:	mov    BYTE PTR [rbp+0x11],0x0
   14001934f:	mov    rdx,QWORD PTR [rbp-0x20]
   140019353:	mov    DWORD PTR [rsp+0x40],0x1
   14001935b:	lea    r9,[rbp+0x10]
   14001935f:	mov    eax,DWORD PTR [rdx+0x4]
   140019362:	mov    rdx,QWORD PTR [rdx+0x138]
   140019369:	mov    r8d,0x100
   14001936f:	mov    DWORD PTR [rsp+0x38],eax
   140019373:	lea    rax,[rbp+0x20]
   140019377:	mov    DWORD PTR [rsp+0x30],0x3
   14001937f:	mov    QWORD PTR [rsp+0x28],rax
   140019384:	mov    DWORD PTR [rsp+0x20],ecx
   140019388:	lea    rcx,[rbp-0x20]
   14001938c:	call   0x1400103d8
   140019391:	test   eax,eax
   140019393:	je     0x1400192e7
   140019399:	cmp    eax,0x1
   14001939c:	movzx  eax,BYTE PTR [rbp+0x20]
   1400193a0:	je     0x1400193ab
   1400193a2:	movzx  ecx,BYTE PTR [rbp+0x21]
   1400193a6:	shl    eax,0x8
   1400193a9:	or     eax,ecx
   1400193ab:	cmp    BYTE PTR [rbp-0x8],0x0
   1400193af:	je     0x1400193bc
   1400193b1:	mov    rcx,QWORD PTR [rbp-0x10]
   1400193b5:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   1400193bc:	lea    r11,[rsp+0x70]
   1400193c1:	mov    rdi,QWORD PTR [r11+0x18]
   1400193c5:	mov    r14,QWORD PTR [r11+0x28]
   1400193c9:	mov    rsp,r11
   1400193cc:	pop    rbp
   1400193cd:	ret    
   1400193ce:	int3   
   1400193cf:	int3   
   1400193d0:	cmp    DWORD PTR [rip+0x1fc49],0x0        # 0x140039020
   1400193d7:	jne    0x1400193e7
   1400193d9:	lea    eax,[rcx-0x41]
   1400193dc:	cmp    eax,0x19
   1400193df:	ja     0x1400193e4
   1400193e1:	add    ecx,0x20
   1400193e4:	mov    eax,ecx
   1400193e6:	ret    
   1400193e7:	xor    edx,edx
   1400193e9:	jmp    0x14001927c
   1400193ee:	int3   
   1400193ef:	int3   
   1400193f0:	sub    rsp,0x18
   1400193f4:	xor    r8d,r8d
   1400193f7:	mov    r9,rcx
   1400193fa:	test   edx,edx
   1400193fc:	jne    0x140019446
   1400193fe:	and    r9d,0xf
   140019402:	mov    rdx,rcx
   140019405:	xorps  xmm1,xmm1
   140019408:	and    rdx,0xfffffffffffffff0
   14001940c:	mov    ecx,r9d
   14001940f:	or     r9d,0xffffffff
   140019413:	shl    r9d,cl
   140019416:	movdqa xmm0,XMMWORD PTR [rdx]
   14001941a:	pcmpeqb xmm0,xmm1
   14001941e:	pmovmskb eax,xmm0
   140019422:	and    eax,r9d
   140019425:	jne    0x14001943b
   140019427:	add    rdx,0x10
   14001942b:	movdqa xmm0,XMMWORD PTR [rdx]
   14001942f:	pcmpeqb xmm0,xmm1
   140019433:	pmovmskb eax,xmm0
   140019437:	test   eax,eax
   140019439:	je     0x140019427
   14001943b:	bsf    eax,eax
   14001943e:	add    rax,rdx
   140019441:	jmp    0x1400194ec
   140019446:	cmp    DWORD PTR [rip+0x1cc97],0x2        # 0x1400360e4
   14001944d:	jge    0x1400194f1
   140019453:	mov    r10,rcx
   140019456:	movzx  eax,dl
   140019459:	and    r9d,0xf
   14001945d:	and    r10,0xfffffffffffffff0
   140019461:	mov    ecx,eax
   140019463:	xorps  xmm2,xmm2
   140019466:	shl    ecx,0x8
   140019469:	or     ecx,eax
   14001946b:	movd   xmm0,ecx
   14001946f:	mov    ecx,r9d
   140019472:	or     r9d,0xffffffff
   140019476:	shl    r9d,cl
   140019479:	pshuflw xmm1,xmm0,0x0
   14001947e:	movdqa xmm0,xmm2
   140019482:	pcmpeqb xmm0,XMMWORD PTR [r10]
   140019487:	pshufd xmm3,xmm1,0x0
   14001948c:	pmovmskb ecx,xmm0
   140019490:	movdqa xmm0,xmm3
   140019494:	pcmpeqb xmm0,XMMWORD PTR [r10]
   140019499:	pmovmskb edx,xmm0
   14001949d:	and    edx,r9d
   1400194a0:	and    ecx,r9d
   1400194a3:	jne    0x1400194d3
   1400194a5:	bsr    ecx,edx
   1400194a8:	movdqa xmm1,xmm2
   1400194ac:	movdqa xmm0,xmm3
   1400194b0:	add    rcx,r10
   1400194b3:	test   edx,edx
   1400194b5:	cmovne r8,rcx
   1400194b9:	add    r10,0x10
   1400194bd:	pcmpeqb xmm1,XMMWORD PTR [r10]
   1400194c2:	pcmpeqb xmm0,XMMWORD PTR [r10]
   1400194c7:	pmovmskb ecx,xmm1
   1400194cb:	pmovmskb edx,xmm0
   1400194cf:	test   ecx,ecx
   1400194d1:	je     0x1400194a5
   1400194d3:	mov    eax,ecx
   1400194d5:	neg    eax
   1400194d7:	and    eax,ecx
   1400194d9:	dec    eax
   1400194db:	and    edx,eax
   1400194dd:	bsr    ecx,edx
   1400194e0:	add    rcx,r10
   1400194e3:	test   edx,edx
   1400194e5:	cmovne r8,rcx
   1400194e9:	mov    rax,r8
   1400194ec:	add    rsp,0x18
   1400194f0:	ret    
   1400194f1:	test   cl,0xf
   1400194f4:	je     0x14001950f
   1400194f6:	movsx  eax,BYTE PTR [r9]
   1400194fa:	cmp    eax,edx
   1400194fc:	cmove  r8,r9
   140019500:	cmp    BYTE PTR [r9],0x0
   140019504:	je     0x1400194e9
   140019506:	inc    r9
   140019509:	test   r9b,0xf
   14001950d:	jne    0x1400194f6
   14001950f:	movzx  eax,dl
   140019512:	movd   xmm0,eax
   140019516:	pcmpistri xmm0,XMMWORD PTR [r9],0x40
   14001951d:	jae    0x14001952c
   14001951f:	movsxd r8,ecx
   140019522:	add    r8,r9
   140019525:	pcmpistri xmm0,XMMWORD PTR [r9],0x40
   14001952c:	je     0x1400194e9
   14001952e:	add    r9,0x10
   140019532:	jmp    0x140019516
   140019534:	mov    QWORD PTR [rsp+0x8],rbx
   140019539:	push   rdi
   14001953a:	sub    rsp,0x20
   14001953e:	mov    rbx,rcx
   140019541:	mov    rcx,QWORD PTR [r9+0x10]
   140019545:	xor    r10d,r10d
   140019548:	test   rbx,rbx
   14001954b:	jne    0x140019565
   14001954d:	call   0x1400095b8
   140019552:	mov    ebx,0x16
   140019557:	mov    DWORD PTR [rax],ebx
   140019559:	call   0x140008628
   14001955e:	mov    eax,ebx
   140019560:	jmp    0x1400195f4
   140019565:	test   rdx,rdx
   140019568:	je     0x14001954d
   14001956a:	mov    eax,r10d
   14001956d:	test   r8d,r8d
   140019570:	mov    BYTE PTR [rbx],r10b
   140019573:	cmovg  eax,r8d
   140019577:	inc    eax
   140019579:	cdqe   
   14001957b:	cmp    rdx,rax
   14001957e:	ja     0x14001958c
   140019580:	call   0x1400095b8
   140019585:	mov    ebx,0x22
   14001958a:	jmp    0x140019557
   14001958c:	lea    rdi,[rbx+0x1]
   140019590:	mov    BYTE PTR [rbx],0x30
   140019593:	mov    rax,rdi
   140019596:	jmp    0x1400195b2
   140019598:	cmp    BYTE PTR [rcx],r10b
   14001959b:	je     0x1400195a5
   14001959d:	movsx  edx,BYTE PTR [rcx]
   1400195a0:	inc    rcx
   1400195a3:	jmp    0x1400195aa
   1400195a5:	mov    edx,0x30
   1400195aa:	mov    BYTE PTR [rax],dl
   1400195ac:	inc    rax
   1400195af:	dec    r8d
   1400195b2:	test   r8d,r8d
   1400195b5:	jg     0x140019598
   1400195b7:	mov    BYTE PTR [rax],r10b
   1400195ba:	js     0x1400195d0
   1400195bc:	cmp    BYTE PTR [rcx],0x35
   1400195bf:	jl     0x1400195d0
   1400195c1:	jmp    0x1400195c6
   1400195c3:	mov    BYTE PTR [rax],0x30
   1400195c6:	dec    rax
   1400195c9:	cmp    BYTE PTR [rax],0x39
   1400195cc:	je     0x1400195c3
   1400195ce:	inc    BYTE PTR [rax]
   1400195d0:	cmp    BYTE PTR [rbx],0x31
   1400195d3:	jne    0x1400195db
   1400195d5:	inc    DWORD PTR [r9+0x4]
   1400195d9:	jmp    0x1400195f2
   1400195db:	mov    rcx,rdi
   1400195de:	call   0x140007730
   1400195e3:	mov    rdx,rdi
   1400195e6:	mov    rcx,rbx
   1400195e9:	lea    r8,[rax+0x1]
   1400195ed:	call   0x1400056d0
   1400195f2:	xor    eax,eax
   1400195f4:	mov    rbx,QWORD PTR [rsp+0x30]
   1400195f9:	add    rsp,0x20
   1400195fd:	pop    rdi
   1400195fe:	ret    
   1400195ff:	int3   
   140019600:	rex push rbx
   140019602:	push   rsi
   140019603:	push   rdi
   140019604:	sub    rsp,0x80
   14001960b:	mov    rax,QWORD PTR [rip+0x1d42e]        # 0x140036a40
   140019612:	xor    rax,rsp
   140019615:	mov    QWORD PTR [rsp+0x78],rax
   14001961a:	mov    rsi,rcx
   14001961d:	mov    rbx,rdx
   140019620:	lea    rcx,[rsp+0x48]
   140019625:	mov    rdx,r8
   140019628:	mov    rdi,r9
   14001962b:	call   0x14000a000
   140019630:	lea    rax,[rsp+0x48]
   140019635:	lea    rdx,[rsp+0x40]
   14001963a:	mov    QWORD PTR [rsp+0x38],rax
   14001963f:	and    DWORD PTR [rsp+0x30],0x0
   140019644:	and    DWORD PTR [rsp+0x28],0x0
   140019649:	and    DWORD PTR [rsp+0x20],0x0
   14001964e:	lea    rcx,[rsp+0x68]
   140019653:	xor    r9d,r9d
   140019656:	mov    r8,rbx
   140019659:	call   0x14001fa34
   14001965e:	mov    ebx,eax
   140019660:	test   rdi,rdi
   140019663:	je     0x14001966d
   140019665:	mov    rcx,QWORD PTR [rsp+0x40]
   14001966a:	mov    QWORD PTR [rdi],rcx
   14001966d:	lea    rcx,[rsp+0x68]
   140019672:	mov    rdx,rsi
   140019675:	call   0x14001ebdc
   14001967a:	mov    ecx,eax
   14001967c:	mov    eax,0x3
   140019681:	test   al,bl
   140019683:	jne    0x140019691
   140019685:	cmp    ecx,0x1
   140019688:	je     0x1400196a4
   14001968a:	cmp    ecx,0x2
   14001968d:	jne    0x1400196a2
   14001968f:	jmp    0x140019696
   140019691:	test   bl,0x1
   140019694:	je     0x14001969d
   140019696:	mov    eax,0x4
   14001969b:	jmp    0x1400196a4
   14001969d:	test   bl,0x2
   1400196a0:	jne    0x1400196a4
   1400196a2:	xor    eax,eax
   1400196a4:	cmp    BYTE PTR [rsp+0x60],0x0
   1400196a9:	je     0x1400196b7
   1400196ab:	mov    rcx,QWORD PTR [rsp+0x58]
   1400196b0:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   1400196b7:	mov    rcx,QWORD PTR [rsp+0x78]
   1400196bc:	xor    rcx,rsp
   1400196bf:	call   0x14000d0a0
   1400196c4:	add    rsp,0x80
   1400196cb:	pop    rdi
   1400196cc:	pop    rsi
   1400196cd:	pop    rbx
   1400196ce:	ret    
   1400196cf:	int3   
   1400196d0:	xor    r8d,r8d
   1400196d3:	jmp    0x1400196d8
   1400196d8:	mov    QWORD PTR [rsp+0x18],rbx
   1400196dd:	push   rdi
   1400196de:	sub    rsp,0x80
   1400196e5:	mov    rax,QWORD PTR [rip+0x1d354]        # 0x140036a40
   1400196ec:	xor    rax,rsp
   1400196ef:	mov    QWORD PTR [rsp+0x78],rax
   1400196f4:	mov    rdi,rcx
   1400196f7:	mov    rbx,rdx
   1400196fa:	lea    rcx,[rsp+0x40]
   1400196ff:	mov    rdx,r8
   140019702:	call   0x14000a000
   140019707:	lea    rax,[rsp+0x40]
   14001970c:	lea    rdx,[rsp+0x60]
   140019711:	mov    QWORD PTR [rsp+0x38],rax
   140019716:	and    DWORD PTR [rsp+0x30],0x0
   14001971b:	and    DWORD PTR [rsp+0x28],0x0
   140019720:	and    DWORD PTR [rsp+0x20],0x0
   140019725:	lea    rcx,[rsp+0x68]
   14001972a:	xor    r9d,r9d
   14001972d:	mov    r8,rbx
   140019730:	call   0x14001fa34
   140019735:	lea    rcx,[rsp+0x68]
   14001973a:	mov    rdx,rdi
   14001973d:	mov    ebx,eax
   14001973f:	call   0x14001e624
   140019744:	mov    ecx,eax
   140019746:	mov    eax,0x3
   14001974b:	test   al,bl
   14001974d:	jne    0x14001975b
   14001974f:	cmp    ecx,0x1
   140019752:	je     0x14001976e
   140019754:	cmp    ecx,0x2
   140019757:	jne    0x14001976c
   140019759:	jmp    0x140019760
   14001975b:	test   bl,0x1
   14001975e:	je     0x140019767
   140019760:	mov    eax,0x4
   140019765:	jmp    0x14001976e
   140019767:	test   bl,0x2
   14001976a:	jne    0x14001976e
   14001976c:	xor    eax,eax
   14001976e:	cmp    BYTE PTR [rsp+0x58],0x0
   140019773:	je     0x140019781
   140019775:	mov    rcx,QWORD PTR [rsp+0x50]
   14001977a:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140019781:	mov    rcx,QWORD PTR [rsp+0x78]
   140019786:	xor    rcx,rsp
   140019789:	call   0x14000d0a0
   14001978e:	mov    rbx,QWORD PTR [rsp+0xa0]
   140019796:	add    rsp,0x80
   14001979d:	pop    rdi
   14001979e:	ret    
   14001979f:	int3   
   1400197a0:	xor    r9d,r9d
   1400197a3:	xor    r8d,r8d
   1400197a6:	jmp    0x140019600
   1400197ab:	int3   
   1400197ac:	xor    r9d,r9d
   1400197af:	jmp    0x140019600
   1400197b4:	xor    r8d,r8d
   1400197b7:	jmp    0x1400197bc
   1400197bc:	mov    QWORD PTR [rsp+0x18],rbx
   1400197c1:	push   rdi
   1400197c2:	sub    rsp,0x80
   1400197c9:	mov    rax,QWORD PTR [rip+0x1d270]        # 0x140036a40
   1400197d0:	xor    rax,rsp
   1400197d3:	mov    QWORD PTR [rsp+0x78],rax
   1400197d8:	mov    rdi,rcx
   1400197db:	mov    rbx,rdx
   1400197de:	lea    rcx,[rsp+0x40]
   1400197e3:	mov    rdx,r8
   1400197e6:	call   0x14000a000
   1400197eb:	lea    rax,[rsp+0x40]
   1400197f0:	lea    rdx,[rsp+0x60]
   1400197f5:	mov    QWORD PTR [rsp+0x38],rax
   1400197fa:	and    DWORD PTR [rsp+0x30],0x0
   1400197ff:	and    DWORD PTR [rsp+0x28],0x0
   140019804:	and    DWORD PTR [rsp+0x20],0x0
   140019809:	lea    rcx,[rsp+0x68]
   14001980e:	mov    r9d,0x1
   140019814:	mov    r8,rbx
   140019817:	call   0x14001fa34
   14001981c:	lea    rcx,[rsp+0x68]
   140019821:	mov    rdx,rdi
   140019824:	mov    ebx,eax
   140019826:	call   0x14001f194
   14001982b:	mov    ecx,eax
   14001982d:	mov    eax,0x3
   140019832:	test   al,bl
   140019834:	jne    0x140019842
   140019836:	cmp    ecx,0x1
   140019839:	je     0x140019855
   14001983b:	cmp    ecx,0x2
   14001983e:	jne    0x140019853
   140019840:	jmp    0x140019847
   140019842:	test   bl,0x1
   140019845:	je     0x14001984e
   140019847:	mov    eax,0x4
   14001984c:	jmp    0x140019855
   14001984e:	test   bl,0x2
   140019851:	jne    0x140019855
   140019853:	xor    eax,eax
   140019855:	cmp    BYTE PTR [rsp+0x58],0x0
   14001985a:	je     0x140019868
   14001985c:	mov    rcx,QWORD PTR [rsp+0x50]
   140019861:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140019868:	mov    rcx,QWORD PTR [rsp+0x78]
   14001986d:	xor    rcx,rsp
   140019870:	call   0x14000d0a0
   140019875:	mov    rbx,QWORD PTR [rsp+0xa0]
   14001987d:	add    rsp,0x80
   140019884:	pop    rdi
   140019885:	ret    
   140019886:	int3   
   140019887:	int3   
   140019888:	mov    QWORD PTR [rsp+0x8],rbx
   14001988d:	movzx  r11d,WORD PTR [rdx+0x6]
   140019892:	mov    r10,rcx
   140019895:	mov    ecx,DWORD PTR [rdx+0x4]
   140019898:	movzx  r8d,r11w
   14001989c:	mov    eax,0x8000
   1400198a1:	mov    r9d,0x7ff
   1400198a7:	shr    r8w,0x4
   1400198ac:	and    r11w,ax
   1400198b0:	mov    eax,DWORD PTR [rdx]
   1400198b2:	and    r8w,r9w
   1400198b6:	and    ecx,0xfffff
   1400198bc:	mov    ebx,0x80000000
   1400198c1:	movzx  edx,r8w
   1400198c5:	test   edx,edx
   1400198c7:	je     0x1400198e1
   1400198c9:	cmp    edx,r9d
   1400198cc:	je     0x1400198d9
   1400198ce:	mov    edx,0x3c00
   1400198d3:	add    r8w,dx
   1400198d7:	jmp    0x1400198fd
   1400198d9:	mov    r8d,0x7fff
   1400198df:	jmp    0x1400198fd
   1400198e1:	test   ecx,ecx
   1400198e3:	jne    0x1400198f2
   1400198e5:	test   eax,eax
   1400198e7:	jne    0x1400198f2
   1400198e9:	and    DWORD PTR [r10+0x4],eax
   1400198ed:	and    DWORD PTR [r10],eax
   1400198f0:	jmp    0x14001994a
   1400198f2:	mov    edx,0x3c01
   1400198f7:	add    r8w,dx
   1400198fb:	xor    ebx,ebx
   1400198fd:	mov    r9d,eax
   140019900:	shl    ecx,0xb
   140019903:	shl    eax,0xb
   140019906:	shr    r9d,0x15
   14001990a:	mov    DWORD PTR [r10],eax
   14001990d:	or     r9d,ecx
   140019910:	or     r9d,ebx
   140019913:	mov    DWORD PTR [r10+0x4],r9d
   140019917:	test   r9d,r9d
   14001991a:	js     0x140019946
   14001991c:	mov    edx,DWORD PTR [r10]
   14001991f:	lea    eax,[r9+r9*1]
   140019923:	mov    ecx,edx
   140019925:	shr    ecx,0x1f
   140019928:	mov    r9d,ecx
   14001992b:	or     r9d,eax
   14001992e:	lea    eax,[rdx+rdx*1]
   140019931:	mov    DWORD PTR [r10],eax
   140019934:	mov    eax,0xffff
   140019939:	add    r8w,ax
   14001993d:	test   r9d,r9d
   140019940:	jns    0x14001991c
   140019942:	mov    DWORD PTR [r10+0x4],r9d
   140019946:	or     r11w,r8w
   14001994a:	mov    rbx,QWORD PTR [rsp+0x8]
   14001994f:	mov    WORD PTR [r10+0x8],r11w
   140019954:	ret    
   140019955:	int3   
   140019956:	int3   
   140019957:	int3   
   140019958:	rex push rbp
   14001995a:	push   rbx
   14001995b:	push   rsi
   14001995c:	push   rdi
   14001995d:	lea    rbp,[rsp-0x3f]
   140019962:	sub    rsp,0x88
   140019969:	mov    rax,QWORD PTR [rip+0x1d0d0]        # 0x140036a40
   140019970:	xor    rax,rsp
   140019973:	mov    QWORD PTR [rbp+0x27],rax
   140019977:	mov    rdi,rdx
   14001997a:	mov    QWORD PTR [rbp-0x19],rcx
   14001997e:	lea    rdx,[rbp-0x19]
   140019982:	lea    rcx,[rbp-0x9]
   140019986:	mov    rbx,r9
   140019989:	mov    rsi,r8
   14001998c:	call   0x140019888
   140019991:	movzx  eax,WORD PTR [rbp-0x1]
   140019995:	xor    r8d,r8d
   140019998:	movsd  xmm0,QWORD PTR [rbp-0x9]
   14001999d:	movsd  QWORD PTR [rbp-0x19],xmm0
   1400199a2:	lea    r9,[rbp+0x7]
   1400199a6:	lea    rcx,[rbp-0x19]
   1400199aa:	lea    edx,[r8+0x11]
   1400199ae:	mov    WORD PTR [rbp-0x11],ax
   1400199b2:	call   0x140020298
   1400199b7:	movsx  ecx,BYTE PTR [rbp+0x9]
   1400199bb:	mov    DWORD PTR [rdi],ecx
   1400199bd:	movsx  ecx,WORD PTR [rbp+0x7]
   1400199c1:	lea    r8,[rbp+0xb]
   1400199c5:	mov    DWORD PTR [rdi+0x4],ecx
   1400199c8:	mov    rdx,rbx
   1400199cb:	mov    rcx,rsi
   1400199ce:	mov    DWORD PTR [rdi+0x8],eax
   1400199d1:	call   0x14000ee64
   1400199d6:	test   eax,eax
   1400199d8:	jne    0x1400199f9
   1400199da:	mov    QWORD PTR [rdi+0x10],rsi
   1400199de:	mov    rax,rdi
   1400199e1:	mov    rcx,QWORD PTR [rbp+0x27]
   1400199e5:	xor    rcx,rsp
   1400199e8:	call   0x14000d0a0
   1400199ed:	add    rsp,0x88
   1400199f4:	pop    rdi
   1400199f5:	pop    rsi
   1400199f6:	pop    rbx
   1400199f7:	pop    rbp
   1400199f8:	ret    
   1400199f9:	and    QWORD PTR [rsp+0x20],0x0
   1400199ff:	xor    r9d,r9d
   140019a02:	xor    r8d,r8d
   140019a05:	xor    edx,edx
   140019a07:	xor    ecx,ecx
   140019a09:	call   0x140008678
   140019a0e:	int3   
   140019a0f:	int3   
   140019a10:	mov    eax,DWORD PTR [rip+0x1f5fe]        # 0x140039014
   140019a16:	ret    
   140019a17:	int3   
   140019a18:	rex push rbx
   140019a1a:	sub    rsp,0x20
   140019a1e:	mov    ebx,DWORD PTR [rip+0x1f5f0]        # 0x140039014
   140019a24:	test   ecx,0xfffffffe
   140019a2a:	je     0x140019a3e
   140019a2c:	call   0x1400095b8
   140019a31:	mov    DWORD PTR [rax],0x16
   140019a37:	call   0x140008628
   140019a3c:	jmp    0x140019a44
   140019a3e:	mov    DWORD PTR [rip+0x1f5d0],ecx        # 0x140039014
   140019a44:	mov    eax,ebx
   140019a46:	add    rsp,0x20
   140019a4a:	pop    rbx
   140019a4b:	ret    
   140019a4c:	mov    QWORD PTR [rsp+0x8],rbx
   140019a51:	mov    QWORD PTR [rsp+0x10],rsi
   140019a56:	push   rdi
   140019a57:	sub    rsp,0x40
   140019a5b:	mov    ebx,edx
   140019a5d:	mov    rdx,rcx
   140019a60:	lea    rcx,[rsp+0x20]
   140019a65:	mov    edi,r9d
   140019a68:	mov    esi,r8d
   140019a6b:	call   0x14000a000
   140019a70:	mov    rax,QWORD PTR [rsp+0x28]
   140019a75:	movzx  edx,bl
   140019a78:	test   BYTE PTR [rdx+rax*1+0x19],dil
   140019a7d:	jne    0x140019a9d
   140019a7f:	test   esi,esi
   140019a81:	je     0x140019a97
   140019a83:	mov    rax,QWORD PTR [rsp+0x20]
   140019a88:	mov    rcx,QWORD PTR [rax+0x108]
   140019a8f:	movzx  eax,WORD PTR [rcx+rdx*2]
   140019a93:	and    eax,esi
   140019a95:	jmp    0x140019a99
   140019a97:	xor    eax,eax
   140019a99:	test   eax,eax
   140019a9b:	je     0x140019aa2
   140019a9d:	mov    eax,0x1
   140019aa2:	cmp    BYTE PTR [rsp+0x38],0x0
   140019aa7:	je     0x140019ab5
   140019aa9:	mov    rcx,QWORD PTR [rsp+0x30]
   140019aae:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140019ab5:	mov    rbx,QWORD PTR [rsp+0x50]
   140019aba:	mov    rsi,QWORD PTR [rsp+0x58]
   140019abf:	add    rsp,0x40
   140019ac3:	pop    rdi
   140019ac4:	ret    
   140019ac5:	int3   
   140019ac6:	int3   
   140019ac7:	int3   
   140019ac8:	mov    edx,ecx
   140019aca:	mov    r9d,0x1
   140019ad0:	mov    r8d,0x107
   140019ad6:	xor    ecx,ecx
   140019ad8:	jmp    0x140019a4c
   140019add:	int3   
   140019ade:	int3   
   140019adf:	int3   
   140019ae0:	mov    rax,rdx
   140019ae3:	mov    edx,ecx
   140019ae5:	mov    r9d,0x1
   140019aeb:	mov    rcx,rax
   140019aee:	mov    r8d,0x107
   140019af4:	jmp    0x140019a4c
   140019af9:	int3   
   140019afa:	int3   
   140019afb:	int3   
   140019afc:	mov    edx,ecx
   140019afe:	mov    r9d,0x1
   140019b04:	mov    r8d,0x103
   140019b0a:	xor    ecx,ecx
   140019b0c:	jmp    0x140019a4c
   140019b11:	int3   
   140019b12:	int3   
   140019b13:	int3   
   140019b14:	mov    rax,rdx
   140019b17:	mov    edx,ecx
   140019b19:	mov    r9d,0x1
   140019b1f:	mov    rcx,rax
   140019b22:	mov    r8d,0x103
   140019b28:	jmp    0x140019a4c
   140019b2d:	int3   
   140019b2e:	int3   
   140019b2f:	int3   
   140019b30:	cmp    ecx,0x9
   140019b33:	jne    0x140019b39
   140019b35:	lea    eax,[rcx+0x37]
   140019b38:	ret    
   140019b39:	mov    r9d,0x2
   140019b3f:	mov    edx,ecx
   140019b41:	xor    ecx,ecx
   140019b43:	lea    r8d,[r9+0x3e]
   140019b47:	jmp    0x140019a4c
   140019b4c:	mov    r10,rdx
   140019b4f:	cmp    ecx,0x9
   140019b52:	jne    0x140019b58
   140019b54:	lea    eax,[rcx+0x37]
   140019b57:	ret    
   140019b58:	mov    r9d,0x2
   140019b5e:	mov    edx,ecx
   140019b60:	mov    rcx,r10
   140019b63:	lea    r8d,[r9+0x3e]
   140019b67:	jmp    0x140019a4c
   140019b6c:	mov    edx,ecx
   140019b6e:	mov    r9d,0x3
   140019b74:	mov    r8d,0x117
   140019b7a:	xor    ecx,ecx
   140019b7c:	jmp    0x140019a4c
   140019b81:	int3   
   140019b82:	int3   
   140019b83:	int3   
   140019b84:	mov    rax,rdx
   140019b87:	mov    edx,ecx
   140019b89:	mov    r9d,0x3
   140019b8f:	mov    rcx,rax
   140019b92:	mov    r8d,0x117
   140019b98:	jmp    0x140019a4c
   140019b9d:	int3   
   140019b9e:	int3   
   140019b9f:	int3   
   140019ba0:	mov    edx,ecx
   140019ba2:	mov    r9d,0x1
   140019ba8:	xor    r8d,r8d
   140019bab:	xor    ecx,ecx
   140019bad:	jmp    0x140019a4c
   140019bb2:	int3   
   140019bb3:	int3   
   140019bb4:	mov    rax,rdx
   140019bb7:	mov    edx,ecx
   140019bb9:	mov    r9d,0x1
   140019bbf:	mov    rcx,rax
   140019bc2:	xor    r8d,r8d
   140019bc5:	jmp    0x140019a4c
   140019bca:	int3   
   140019bcb:	int3   
   140019bcc:	xor    edx,edx
   140019bce:	jmp    0x140019bd4
   140019bd3:	int3   
   140019bd4:	mov    QWORD PTR [rsp+0x8],rbx
   140019bd9:	push   rdi
   140019bda:	sub    rsp,0x40
   140019bde:	mov    edi,ecx
   140019be0:	lea    rcx,[rsp+0x20]
   140019be5:	mov    rbx,rdx
   140019be8:	call   0x14000a000
   140019bed:	mov    rax,QWORD PTR [rsp+0x28]
   140019bf2:	test   rax,rax
   140019bf5:	je     0x140019c17
   140019bf7:	cmp    DWORD PTR [rax+0x4],0x3a4
   140019bfe:	jne    0x140019c17
   140019c00:	mov    r9d,0x3
   140019c06:	xor    r8d,r8d
   140019c09:	mov    edx,edi
   140019c0b:	mov    rcx,rbx
   140019c0e:	call   0x140019a4c
   140019c13:	mov    ecx,eax
   140019c15:	jmp    0x140019c19
   140019c17:	xor    ecx,ecx
   140019c19:	cmp    BYTE PTR [rsp+0x38],0x0
   140019c1e:	je     0x140019c2c
   140019c20:	mov    rax,QWORD PTR [rsp+0x30]
   140019c25:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140019c2c:	mov    eax,ecx
   140019c2e:	mov    rbx,QWORD PTR [rsp+0x50]
   140019c33:	add    rsp,0x40
   140019c37:	pop    rdi
   140019c38:	ret    
   140019c39:	int3   
   140019c3a:	int3   
   140019c3b:	int3   
   140019c3c:	mov    edx,ecx
   140019c3e:	mov    r9d,0x3
   140019c44:	xor    r8d,r8d
   140019c47:	xor    ecx,ecx
   140019c49:	jmp    0x140019a4c
   140019c4e:	int3   
   140019c4f:	int3   
   140019c50:	mov    rax,rdx
   140019c53:	mov    edx,ecx
   140019c55:	mov    r9d,0x3
   140019c5b:	mov    rcx,rax
   140019c5e:	xor    r8d,r8d
   140019c61:	jmp    0x140019a4c
   140019c66:	int3   
   140019c67:	int3   
   140019c68:	mov    edx,ecx
   140019c6a:	mov    r9d,0x2
   140019c70:	xor    r8d,r8d
   140019c73:	xor    ecx,ecx
   140019c75:	jmp    0x140019a4c
   140019c7a:	int3   
   140019c7b:	int3   
   140019c7c:	mov    rax,rdx
   140019c7f:	mov    edx,ecx
   140019c81:	mov    r9d,0x2
   140019c87:	mov    rcx,rax
   140019c8a:	xor    r8d,r8d
   140019c8d:	jmp    0x140019a4c
   140019c92:	int3   
   140019c93:	int3   
   140019c94:	mov    edx,ecx
   140019c96:	mov    r9d,0x4
   140019c9c:	xor    r8d,r8d
   140019c9f:	xor    ecx,ecx
   140019ca1:	jmp    0x140019a4c
   140019ca6:	int3   
   140019ca7:	int3   
   140019ca8:	mov    rax,rdx
   140019cab:	mov    edx,ecx
   140019cad:	mov    r9d,0x4
   140019cb3:	mov    rcx,rax
   140019cb6:	xor    r8d,r8d
   140019cb9:	jmp    0x140019a4c
   140019cbe:	int3   
   140019cbf:	int3   
   140019cc0:	mov    edx,ecx
   140019cc2:	mov    r9d,0x3
   140019cc8:	mov    r8d,0x157
   140019cce:	xor    ecx,ecx
   140019cd0:	jmp    0x140019a4c
   140019cd5:	int3   
   140019cd6:	int3   
   140019cd7:	int3   
   140019cd8:	mov    rax,rdx
   140019cdb:	mov    edx,ecx
   140019cdd:	mov    r9d,0x3
   140019ce3:	mov    rcx,rax
   140019ce6:	mov    r8d,0x157
   140019cec:	jmp    0x140019a4c
   140019cf1:	int3   
   140019cf2:	int3   
   140019cf3:	int3   
   140019cf4:	mov    r9d,0x2
   140019cfa:	mov    edx,ecx
   140019cfc:	xor    ecx,ecx
   140019cfe:	lea    r8d,[r9+0xe]
   140019d02:	jmp    0x140019a4c
   140019d07:	int3   
   140019d08:	mov    rax,rdx
   140019d0b:	mov    r9d,0x2
   140019d11:	mov    edx,ecx
   140019d13:	lea    r8d,[r9+0xe]
   140019d17:	mov    rcx,rax
   140019d1a:	jmp    0x140019a4c
   140019d1f:	int3   
   140019d20:	mov    edx,ecx
   140019d22:	mov    r9d,0x8
   140019d28:	xor    r8d,r8d
   140019d2b:	xor    ecx,ecx
   140019d2d:	jmp    0x140019a4c
   140019d32:	int3   
   140019d33:	int3   
   140019d34:	mov    rax,rdx
   140019d37:	mov    edx,ecx
   140019d39:	mov    r9d,0x8
   140019d3f:	mov    rcx,rax
   140019d42:	xor    r8d,r8d
   140019d45:	jmp    0x140019a4c
   140019d4a:	int3   
   140019d4b:	int3   
   140019d4c:	int3   
   140019d4d:	int3   
   140019d4e:	int3   
   140019d4f:	int3   
   140019d50:	int3   
   140019d51:	int3   
   140019d52:	int3   
   140019d53:	int3   
   140019d54:	int3   
   140019d55:	int3   
   140019d56:	data16 nop WORD PTR [rax+rax*1+0x0]
   140019d60:	sub    rsp,0x10
   140019d64:	mov    QWORD PTR [rsp],r10
   140019d68:	mov    QWORD PTR [rsp+0x8],r11
   140019d6d:	xor    r11,r11
   140019d70:	lea    r10,[rsp+0x18]
   140019d75:	sub    r10,rax
   140019d78:	cmovb  r10,r11
   140019d7c:	mov    r11,QWORD PTR gs:0x10
   140019d85:	cmp    r10,r11
   140019d88:	jae    0x140019da0
   140019d8a:	and    r10w,0xf000
   140019d90:	lea    r11,[r11-0x1000]
   140019d97:	mov    BYTE PTR [r11],0x0
   140019d9b:	cmp    r10,r11
   140019d9e:	jne    0x140019d90
   140019da0:	mov    r10,QWORD PTR [rsp]
   140019da4:	mov    r11,QWORD PTR [rsp+0x8]
   140019da9:	add    rsp,0x10
   140019dad:	ret    
   140019dae:	int3   
   140019daf:	int3   
   140019db0:	xor    r8d,r8d
   140019db3:	mov    eax,r8d
   140019db6:	test   rdx,rdx
   140019db9:	je     0x140019dcd
   140019dbb:	cmp    WORD PTR [rcx],r8w
   140019dbf:	je     0x140019dcd
   140019dc1:	inc    rax
   140019dc4:	add    rcx,0x2
   140019dc8:	cmp    rax,rdx
   140019dcb:	jb     0x140019dbb
   140019dcd:	ret    
   140019dce:	int3   
   140019dcf:	int3   
   140019dd0:	test   rcx,rcx
   140019dd3:	je     0x140019ed9
   140019dd9:	push   rbx
   140019dda:	sub    rsp,0x20
   140019dde:	mov    rbx,rcx
   140019de1:	mov    rcx,QWORD PTR [rcx+0x18]
   140019de5:	cmp    rcx,QWORD PTR [rip+0x1d6cc]        # 0x1400374b8
   140019dec:	je     0x140019df3
   140019dee:	call   0x140006444
   140019df3:	mov    rcx,QWORD PTR [rbx+0x20]
   140019df7:	cmp    rcx,QWORD PTR [rip+0x1d6c2]        # 0x1400374c0
   140019dfe:	je     0x140019e05
   140019e00:	call   0x140006444
   140019e05:	mov    rcx,QWORD PTR [rbx+0x28]
   140019e09:	cmp    rcx,QWORD PTR [rip+0x1d6b8]        # 0x1400374c8
   140019e10:	je     0x140019e17
   140019e12:	call   0x140006444
   140019e17:	mov    rcx,QWORD PTR [rbx+0x30]
   140019e1b:	cmp    rcx,QWORD PTR [rip+0x1d6ae]        # 0x1400374d0
   140019e22:	je     0x140019e29
   140019e24:	call   0x140006444
   140019e29:	mov    rcx,QWORD PTR [rbx+0x38]
   140019e2d:	cmp    rcx,QWORD PTR [rip+0x1d6a4]        # 0x1400374d8
   140019e34:	je     0x140019e3b
   140019e36:	call   0x140006444
   140019e3b:	mov    rcx,QWORD PTR [rbx+0x40]
   140019e3f:	cmp    rcx,QWORD PTR [rip+0x1d69a]        # 0x1400374e0
   140019e46:	je     0x140019e4d
   140019e48:	call   0x140006444
   140019e4d:	mov    rcx,QWORD PTR [rbx+0x48]
   140019e51:	cmp    rcx,QWORD PTR [rip+0x1d690]        # 0x1400374e8
   140019e58:	je     0x140019e5f
   140019e5a:	call   0x140006444
   140019e5f:	mov    rcx,QWORD PTR [rbx+0x68]
   140019e63:	cmp    rcx,QWORD PTR [rip+0x1d69e]        # 0x140037508
   140019e6a:	je     0x140019e71
   140019e6c:	call   0x140006444
   140019e71:	mov    rcx,QWORD PTR [rbx+0x70]
   140019e75:	cmp    rcx,QWORD PTR [rip+0x1d694]        # 0x140037510
   140019e7c:	je     0x140019e83
   140019e7e:	call   0x140006444
   140019e83:	mov    rcx,QWORD PTR [rbx+0x78]
   140019e87:	cmp    rcx,QWORD PTR [rip+0x1d68a]        # 0x140037518
   140019e8e:	je     0x140019e95
   140019e90:	call   0x140006444
   140019e95:	mov    rcx,QWORD PTR [rbx+0x80]
   140019e9c:	cmp    rcx,QWORD PTR [rip+0x1d67d]        # 0x140037520
   140019ea3:	je     0x140019eaa
   140019ea5:	call   0x140006444
   140019eaa:	mov    rcx,QWORD PTR [rbx+0x88]
   140019eb1:	cmp    rcx,QWORD PTR [rip+0x1d670]        # 0x140037528
   140019eb8:	je     0x140019ebf
   140019eba:	call   0x140006444
   140019ebf:	mov    rcx,QWORD PTR [rbx+0x90]
   140019ec6:	cmp    rcx,QWORD PTR [rip+0x1d663]        # 0x140037530
   140019ecd:	je     0x140019ed4
   140019ecf:	call   0x140006444
   140019ed4:	add    rsp,0x20
   140019ed8:	pop    rbx
   140019ed9:	ret    
   140019eda:	int3   
   140019edb:	int3   
   140019edc:	mov    QWORD PTR [rsp+0x8],rbx
   140019ee1:	mov    QWORD PTR [rsp+0x10],rsi
   140019ee6:	mov    QWORD PTR [rsp+0x18],rdi
   140019eeb:	push   rbp
   140019eec:	push   r12
   140019eee:	push   r13
   140019ef0:	push   r14
   140019ef2:	push   r15
   140019ef4:	mov    rbp,rsp
   140019ef7:	sub    rsp,0x40
   140019efb:	xor    ebx,ebx
   140019efd:	mov    rsi,rcx
   140019f00:	mov    QWORD PTR [rbp-0x10],rcx
   140019f04:	mov    r15d,ebx
   140019f07:	mov    QWORD PTR [rbp-0x8],rbx
   140019f0b:	cmp    QWORD PTR [rcx+0x140],rbx
   140019f12:	jne    0x140019f2c
   140019f14:	cmp    QWORD PTR [rcx+0x148],rbx
   140019f1b:	jne    0x140019f2c
   140019f1d:	mov    r12d,ebx
   140019f20:	lea    r14,[rip+0x1d579]        # 0x1400374a0
   140019f27:	jmp    0x14001a36f
   140019f2c:	mov    edx,0x98
   140019f31:	mov    ecx,0x1
   140019f36:	call   0x140007ed4
   140019f3b:	mov    r14,rax
   140019f3e:	test   rax,rax
   140019f41:	jne    0x140019f4d
   140019f43:	mov    eax,0x1
   140019f48:	jmp    0x14001a3be
   140019f4d:	mov    edi,0x4
   140019f52:	mov    ecx,edi
   140019f54:	call   0x140007f54
   140019f59:	mov    r12,rax
   140019f5c:	test   rax,rax
   140019f5f:	jne    0x140019f6b
   140019f61:	mov    rcx,r14
   140019f64:	call   0x140006444
   140019f69:	jmp    0x140019f43
   140019f6b:	mov    DWORD PTR [rax],ebx
   140019f6d:	cmp    QWORD PTR [rsi+0x140],rbx
   140019f74:	je     0x14001a2ac
   140019f7a:	mov    rcx,rdi
   140019f7d:	call   0x140007f54
   140019f82:	mov    r15,rax
   140019f85:	test   rax,rax
   140019f88:	jne    0x140019f97
   140019f8a:	mov    rcx,r14
   140019f8d:	call   0x140006444
   140019f92:	mov    rcx,r12
   140019f95:	jmp    0x140019f64
   140019f97:	mov    DWORD PTR [rax],ebx
   140019f99:	mov    rdi,QWORD PTR [rsi+0x140]
   140019fa0:	mov    r9d,0x15
   140019fa6:	lea    rax,[r14+0x18]
   140019faa:	lea    rcx,[rbp-0x10]
   140019fae:	lea    edx,[r9-0x14]
   140019fb2:	mov    r8,rdi
   140019fb5:	mov    QWORD PTR [rsp+0x20],rax
   140019fba:	call   0x140007bd0
   140019fbf:	lea    rcx,[r14+0x20]
   140019fc3:	mov    r9d,0x14
   140019fc9:	mov    QWORD PTR [rsp+0x20],rcx
   140019fce:	lea    edx,[r9-0x13]
   140019fd2:	lea    rcx,[rbp-0x10]
   140019fd6:	mov    r8,rdi
   140019fd9:	mov    ebx,eax
   140019fdb:	call   0x140007bd0
   140019fe0:	lea    rcx,[r14+0x28]
   140019fe4:	mov    r9d,0x16
   140019fea:	mov    QWORD PTR [rsp+0x20],rcx
   140019fef:	lea    edx,[r9-0x15]
   140019ff3:	lea    rcx,[rbp-0x10]
   140019ff7:	mov    r8,rdi
   140019ffa:	or     ebx,eax
   140019ffc:	call   0x140007bd0
   14001a001:	mov    r9d,0x17
   14001a007:	lea    rcx,[rbp-0x10]
   14001a00b:	or     ebx,eax
   14001a00d:	lea    rax,[r14+0x30]
   14001a011:	lea    edx,[r9-0x16]
   14001a015:	mov    r8,rdi
   14001a018:	mov    QWORD PTR [rsp+0x20],rax
   14001a01d:	call   0x140007bd0
   14001a022:	mov    r9d,0x18
   14001a028:	lea    r13,[r14+0x38]
   14001a02c:	lea    rcx,[rbp-0x10]
   14001a030:	lea    edx,[r9-0x17]
   14001a034:	mov    r8,rdi
   14001a037:	or     ebx,eax
   14001a039:	mov    QWORD PTR [rsp+0x20],r13
   14001a03e:	call   0x140007bd0
   14001a043:	mov    r9d,0x50
   14001a049:	or     ebx,eax
   14001a04b:	lea    rax,[r14+0x40]
   14001a04f:	lea    rcx,[rbp-0x10]
   14001a053:	lea    edx,[r9-0x4f]
   14001a057:	mov    r8,rdi
   14001a05a:	mov    QWORD PTR [rsp+0x20],rax
   14001a05f:	call   0x140007bd0
   14001a064:	mov    r9d,0x51
   14001a06a:	or     ebx,eax
   14001a06c:	lea    rax,[r14+0x48]
   14001a070:	lea    rcx,[rbp-0x10]
   14001a074:	lea    edx,[r9-0x50]
   14001a078:	mov    r8,rdi
   14001a07b:	mov    QWORD PTR [rsp+0x20],rax
   14001a080:	call   0x140007bd0
   14001a085:	lea    rcx,[rbp-0x10]
   14001a089:	mov    r9d,0x1a
   14001a08f:	or     ebx,eax
   14001a091:	lea    rax,[r14+0x50]
   14001a095:	mov    r8,rdi
   14001a098:	xor    edx,edx
   14001a09a:	mov    QWORD PTR [rsp+0x20],rax
   14001a09f:	call   0x140007bd0
   14001a0a4:	lea    rcx,[rbp-0x10]
   14001a0a8:	mov    r9d,0x19
   14001a0ae:	or     ebx,eax
   14001a0b0:	lea    rax,[r14+0x51]
   14001a0b4:	mov    r8,rdi
   14001a0b7:	xor    edx,edx
   14001a0b9:	mov    QWORD PTR [rsp+0x20],rax
   14001a0be:	call   0x140007bd0
   14001a0c3:	lea    rcx,[rbp-0x10]
   14001a0c7:	mov    r9d,0x54
   14001a0cd:	or     ebx,eax
   14001a0cf:	lea    rax,[r14+0x52]
   14001a0d3:	mov    r8,rdi
   14001a0d6:	xor    edx,edx
   14001a0d8:	mov    QWORD PTR [rsp+0x20],rax
   14001a0dd:	call   0x140007bd0
   14001a0e2:	or     ebx,eax
   14001a0e4:	lea    rax,[r14+0x53]
   14001a0e8:	lea    rcx,[rbp-0x10]
   14001a0ec:	mov    r9d,0x55
   14001a0f2:	mov    r8,rdi
   14001a0f5:	xor    edx,edx
   14001a0f7:	mov    QWORD PTR [rsp+0x20],rax
   14001a0fc:	call   0x140007bd0
   14001a101:	lea    rcx,[rbp-0x10]
   14001a105:	or     ebx,eax
   14001a107:	lea    rax,[r14+0x54]
   14001a10b:	mov    r9d,0x56
   14001a111:	mov    r8,rdi
   14001a114:	xor    edx,edx
   14001a116:	mov    QWORD PTR [rsp+0x20],rax
   14001a11b:	call   0x140007bd0
   14001a120:	lea    rcx,[rbp-0x10]
   14001a124:	mov    r9d,0x57
   14001a12a:	or     ebx,eax
   14001a12c:	lea    rax,[r14+0x55]
   14001a130:	mov    r8,rdi
   14001a133:	xor    edx,edx
   14001a135:	mov    QWORD PTR [rsp+0x20],rax
   14001a13a:	call   0x140007bd0
   14001a13f:	lea    rcx,[rbp-0x10]
   14001a143:	mov    r9d,0x52
   14001a149:	or     ebx,eax
   14001a14b:	lea    rax,[r14+0x56]
   14001a14f:	mov    r8,rdi
   14001a152:	xor    edx,edx
   14001a154:	mov    QWORD PTR [rsp+0x20],rax
   14001a159:	call   0x140007bd0
   14001a15e:	lea    rcx,[rbp-0x10]
   14001a162:	mov    r9d,0x53
   14001a168:	or     ebx,eax
   14001a16a:	lea    rax,[r14+0x57]
   14001a16e:	mov    r8,rdi
   14001a171:	xor    edx,edx
   14001a173:	mov    QWORD PTR [rsp+0x20],rax
   14001a178:	call   0x140007bd0
   14001a17d:	mov    r9d,0x15
   14001a183:	lea    rcx,[rbp-0x10]
   14001a187:	or     ebx,eax
   14001a189:	lea    rax,[r14+0x68]
   14001a18d:	lea    edx,[r9-0x13]
   14001a191:	mov    r8,rdi
   14001a194:	mov    QWORD PTR [rsp+0x20],rax
   14001a199:	call   0x140007bd0
   14001a19e:	mov    r9d,0x14
   14001a1a4:	lea    rcx,[rbp-0x10]
   14001a1a8:	or     ebx,eax
   14001a1aa:	lea    rax,[r14+0x70]
   14001a1ae:	lea    edx,[r9-0x12]
   14001a1b2:	mov    r8,rdi
   14001a1b5:	mov    QWORD PTR [rsp+0x20],rax
   14001a1ba:	call   0x140007bd0
   14001a1bf:	mov    r9d,0x16
   14001a1c5:	lea    rcx,[rbp-0x10]
   14001a1c9:	or     ebx,eax
   14001a1cb:	lea    rax,[r14+0x78]
   14001a1cf:	lea    edx,[r9-0x14]
   14001a1d3:	mov    r8,rdi
   14001a1d6:	mov    QWORD PTR [rsp+0x20],rax
   14001a1db:	call   0x140007bd0
   14001a1e0:	mov    r9d,0x17
   14001a1e6:	lea    rcx,[rbp-0x10]
   14001a1ea:	or     ebx,eax
   14001a1ec:	lea    rax,[r14+0x80]
   14001a1f3:	lea    edx,[r9-0x15]
   14001a1f7:	mov    r8,rdi
   14001a1fa:	mov    QWORD PTR [rsp+0x20],rax
   14001a1ff:	call   0x140007bd0
   14001a204:	mov    r9d,0x50
   14001a20a:	lea    rcx,[rbp-0x10]
   14001a20e:	or     ebx,eax
   14001a210:	lea    rax,[r14+0x88]
   14001a217:	lea    edx,[r9-0x4e]
   14001a21b:	mov    r8,rdi
   14001a21e:	mov    QWORD PTR [rsp+0x20],rax
   14001a223:	call   0x140007bd0
   14001a228:	or     ebx,eax
   14001a22a:	mov    r9d,0x51
   14001a230:	lea    rax,[r14+0x90]
   14001a237:	lea    rcx,[rbp-0x10]
   14001a23b:	lea    edx,[r9-0x4f]
   14001a23f:	mov    r8,rdi
   14001a242:	mov    QWORD PTR [rsp+0x20],rax
   14001a247:	call   0x140007bd0
   14001a24c:	or     eax,ebx
   14001a24e:	je     0x14001a270
   14001a250:	mov    rcx,r14
   14001a253:	call   0x140019dd0
   14001a258:	mov    rcx,r14
   14001a25b:	call   0x140006444
   14001a260:	mov    rcx,r12
   14001a263:	call   0x140006444
   14001a268:	mov    rcx,r15
   14001a26b:	jmp    0x140019f64
   14001a270:	mov    rdx,QWORD PTR [r13+0x0]
   14001a274:	xor    ebx,ebx
   14001a276:	jmp    0x14001a289
   14001a278:	mov    cl,BYTE PTR [rdx]
   14001a27a:	lea    eax,[rcx-0x30]
   14001a27d:	cmp    al,0x9
   14001a27f:	ja     0x14001a292
   14001a281:	sub    cl,0x30
   14001a284:	mov    BYTE PTR [rdx],cl
   14001a286:	inc    rdx
   14001a289:	cmp    BYTE PTR [rdx],bl
   14001a28b:	jne    0x14001a278
   14001a28d:	jmp    0x14001a312
   14001a292:	cmp    cl,0x3b
   14001a295:	jne    0x14001a286
   14001a297:	mov    r8,rdx
   14001a29a:	lea    rcx,[r8+0x1]
   14001a29e:	mov    al,BYTE PTR [rcx]
   14001a2a0:	mov    BYTE PTR [r8],al
   14001a2a3:	mov    r8,rcx
   14001a2a6:	test   al,al
   14001a2a8:	jne    0x14001a29a
   14001a2aa:	jmp    0x14001a289
   14001a2ac:	lea    rax,[rip+0x1d1ed]        # 0x1400374a0
   14001a2b3:	mov    edx,0x80
   14001a2b8:	movups xmm0,XMMWORD PTR [rax]
   14001a2bb:	movups XMMWORD PTR [r14],xmm0
   14001a2bf:	movups xmm1,XMMWORD PTR [rax+0x10]
   14001a2c3:	movups XMMWORD PTR [r14+0x10],xmm1
   14001a2c8:	movups xmm0,XMMWORD PTR [rax+0x20]
   14001a2cc:	movups XMMWORD PTR [r14+0x20],xmm0
   14001a2d1:	movups xmm1,XMMWORD PTR [rax+0x30]
   14001a2d5:	movups XMMWORD PTR [r14+0x30],xmm1
   14001a2da:	movups xmm0,XMMWORD PTR [rax+0x40]
   14001a2de:	movups XMMWORD PTR [r14+0x40],xmm0
   14001a2e3:	movups xmm1,XMMWORD PTR [rax+0x50]
   14001a2e7:	movups XMMWORD PTR [r14+0x50],xmm1
   14001a2ec:	movups xmm0,XMMWORD PTR [rax+0x60]
   14001a2f0:	movups XMMWORD PTR [r14+0x60],xmm0
   14001a2f5:	movups xmm0,XMMWORD PTR [rax+0x70]
   14001a2f9:	movups XMMWORD PTR [r14+rdx*1-0x10],xmm0
   14001a2ff:	movups xmm1,XMMWORD PTR [rax+rdx*1]
   14001a303:	movups XMMWORD PTR [r14+rdx*1],xmm1
   14001a308:	mov    rax,QWORD PTR [rax+rdx*1+0x10]
   14001a30d:	mov    QWORD PTR [r14+rdx*1+0x10],rax
   14001a312:	mov    rax,QWORD PTR [rsi+0xf0]
   14001a319:	mov    rcx,QWORD PTR [rax]
   14001a31c:	mov    QWORD PTR [r14],rcx
   14001a31f:	mov    rax,QWORD PTR [rsi+0xf0]
   14001a326:	mov    rcx,QWORD PTR [rax+0x8]
   14001a32a:	mov    QWORD PTR [r14+0x8],rcx
   14001a32e:	mov    rax,QWORD PTR [rsi+0xf0]
   14001a335:	mov    rcx,QWORD PTR [rax+0x10]
   14001a339:	mov    QWORD PTR [r14+0x10],rcx
   14001a33d:	mov    rax,QWORD PTR [rsi+0xf0]
   14001a344:	mov    rcx,QWORD PTR [rax+0x58]
   14001a348:	mov    QWORD PTR [r14+0x58],rcx
   14001a34c:	mov    rax,QWORD PTR [rsi+0xf0]
   14001a353:	mov    rcx,QWORD PTR [rax+0x60]
   14001a357:	mov    QWORD PTR [r14+0x60],rcx
   14001a35b:	mov    DWORD PTR [r12],0x1
   14001a363:	test   r15,r15
   14001a366:	je     0x14001a36f
   14001a368:	mov    DWORD PTR [r15],0x1
   14001a36f:	mov    rax,QWORD PTR [rsi+0xe8]
   14001a376:	test   rax,rax
   14001a379:	je     0x14001a37e
   14001a37b:	lock dec DWORD PTR [rax]
   14001a37e:	mov    rcx,QWORD PTR [rsi+0xd8]
   14001a385:	test   rcx,rcx
   14001a388:	je     0x14001a3a7
   14001a38a:	lock dec DWORD PTR [rcx]
   14001a38d:	jne    0x14001a3a7
   14001a38f:	mov    rcx,QWORD PTR [rsi+0xf0]
   14001a396:	call   0x140006444
   14001a39b:	mov    rcx,QWORD PTR [rsi+0xd8]
   14001a3a2:	call   0x140006444
   14001a3a7:	mov    QWORD PTR [rsi+0xe8],r15
   14001a3ae:	mov    QWORD PTR [rsi+0xd8],r12
   14001a3b5:	mov    QWORD PTR [rsi+0xf0],r14
   14001a3bc:	xor    eax,eax
   14001a3be:	lea    r11,[rsp+0x40]
   14001a3c3:	mov    rbx,QWORD PTR [r11+0x30]
   14001a3c7:	mov    rsi,QWORD PTR [r11+0x38]
   14001a3cb:	mov    rdi,QWORD PTR [r11+0x40]
   14001a3cf:	mov    rsp,r11
   14001a3d2:	pop    r15
   14001a3d4:	pop    r14
   14001a3d6:	pop    r13
   14001a3d8:	pop    r12
   14001a3da:	pop    rbp
   14001a3db:	ret    
   14001a3dc:	xor    r9d,r9d
   14001a3df:	mov    rdx,rcx
   14001a3e2:	cmp    BYTE PTR [rcx],r9b
   14001a3e5:	je     0x14001a3fd
   14001a3e7:	mov    cl,BYTE PTR [rdx]
   14001a3e9:	lea    eax,[rcx-0x30]
   14001a3ec:	cmp    al,0x9
   14001a3ee:	ja     0x14001a3fe
   14001a3f0:	sub    cl,0x30
   14001a3f3:	mov    BYTE PTR [rdx],cl
   14001a3f5:	inc    rdx
   14001a3f8:	cmp    BYTE PTR [rdx],r9b
   14001a3fb:	jne    0x14001a3e7
   14001a3fd:	ret    
   14001a3fe:	cmp    cl,0x3b
   14001a401:	jne    0x14001a3f5
   14001a403:	mov    r8,rdx
   14001a406:	lea    rcx,[r8+0x1]
   14001a40a:	mov    al,BYTE PTR [rcx]
   14001a40c:	mov    BYTE PTR [r8],al
   14001a40f:	mov    r8,rcx
   14001a412:	test   al,al
   14001a414:	jne    0x14001a406
   14001a416:	jmp    0x14001a3f8
   14001a418:	test   rcx,rcx
   14001a41b:	je     0x14001a483
   14001a41d:	push   rbx
   14001a41e:	sub    rsp,0x20
   14001a422:	mov    rbx,rcx
   14001a425:	mov    rcx,QWORD PTR [rcx]
   14001a428:	cmp    rcx,QWORD PTR [rip+0x1d071]        # 0x1400374a0
   14001a42f:	je     0x14001a436
   14001a431:	call   0x140006444
   14001a436:	mov    rcx,QWORD PTR [rbx+0x8]
   14001a43a:	cmp    rcx,QWORD PTR [rip+0x1d067]        # 0x1400374a8
   14001a441:	je     0x14001a448
   14001a443:	call   0x140006444
   14001a448:	mov    rcx,QWORD PTR [rbx+0x10]
   14001a44c:	cmp    rcx,QWORD PTR [rip+0x1d05d]        # 0x1400374b0
   14001a453:	je     0x14001a45a
   14001a455:	call   0x140006444
   14001a45a:	mov    rcx,QWORD PTR [rbx+0x58]
   14001a45e:	cmp    rcx,QWORD PTR [rip+0x1d093]        # 0x1400374f8
   14001a465:	je     0x14001a46c
   14001a467:	call   0x140006444
   14001a46c:	mov    rcx,QWORD PTR [rbx+0x60]
   14001a470:	cmp    rcx,QWORD PTR [rip+0x1d089]        # 0x140037500
   14001a477:	je     0x14001a47e
   14001a479:	call   0x140006444
   14001a47e:	add    rsp,0x20
   14001a482:	pop    rbx
   14001a483:	ret    
   14001a484:	mov    rax,rsp
   14001a487:	mov    QWORD PTR [rax+0x8],rbx
   14001a48b:	mov    QWORD PTR [rax+0x10],rbp
   14001a48f:	mov    QWORD PTR [rax+0x18],rsi
   14001a493:	push   rdi
   14001a494:	push   r12
   14001a496:	push   r13
   14001a498:	push   r14
   14001a49a:	push   r15
   14001a49c:	sub    rsp,0x40
   14001a4a0:	xor    ebx,ebx
   14001a4a2:	mov    rsi,rcx
   14001a4a5:	mov    QWORD PTR [rax-0x38],rcx
   14001a4a9:	mov    QWORD PTR [rax-0x30],rbx
   14001a4ad:	cmp    QWORD PTR [rcx+0x148],rbx
   14001a4b4:	jne    0x14001a4d1
   14001a4b6:	cmp    QWORD PTR [rcx+0x140],rbx
   14001a4bd:	jne    0x14001a4d1
   14001a4bf:	mov    r15d,ebx
   14001a4c2:	mov    r12d,ebx
   14001a4c5:	lea    r14,[rip+0x1cfd4]        # 0x1400374a0
   14001a4cc:	jmp    0x14001a6dd
   14001a4d1:	mov    ebp,0x1
   14001a4d6:	mov    edx,0x98
   14001a4db:	mov    ecx,ebp
   14001a4dd:	call   0x140007ed4
   14001a4e2:	mov    r14,rax
   14001a4e5:	test   rax,rax
   14001a4e8:	jne    0x14001a4f1
   14001a4ea:	mov    eax,ebp
   14001a4ec:	jmp    0x14001a72c
   14001a4f1:	mov    rax,QWORD PTR [rsi+0xf0]
   14001a4f8:	mov    edx,0x80
   14001a4fd:	lea    edi,[rdx-0x7c]
   14001a500:	mov    ecx,edi
   14001a502:	movups xmm0,XMMWORD PTR [rax]
   14001a505:	movups XMMWORD PTR [r14],xmm0
   14001a509:	movups xmm1,XMMWORD PTR [rax+0x10]
   14001a50d:	movups XMMWORD PTR [r14+0x10],xmm1
   14001a512:	movups xmm0,XMMWORD PTR [rax+0x20]
   14001a516:	movups XMMWORD PTR [r14+0x20],xmm0
   14001a51b:	movups xmm1,XMMWORD PTR [rax+0x30]
   14001a51f:	movups XMMWORD PTR [r14+0x30],xmm1
   14001a524:	movups xmm0,XMMWORD PTR [rax+0x40]
   14001a528:	movups XMMWORD PTR [r14+0x40],xmm0
   14001a52d:	movups xmm1,XMMWORD PTR [rax+0x50]
   14001a531:	movups XMMWORD PTR [r14+0x50],xmm1
   14001a536:	movups xmm0,XMMWORD PTR [rax+0x60]
   14001a53a:	movups XMMWORD PTR [r14+0x60],xmm0
   14001a53f:	movups xmm0,XMMWORD PTR [rax+0x70]
   14001a543:	movups XMMWORD PTR [r14+rdx*1-0x10],xmm0
   14001a549:	movups xmm1,XMMWORD PTR [rax+rdx*1]
   14001a54d:	movups XMMWORD PTR [r14+rdx*1],xmm1
   14001a552:	mov    rax,QWORD PTR [rax+rdx*1+0x10]
   14001a557:	mov    QWORD PTR [r14+rdx*1+0x10],rax
   14001a55c:	call   0x140007f54
   14001a561:	mov    r12,rax
   14001a564:	test   rax,rax
   14001a567:	jne    0x14001a576
   14001a569:	mov    rcx,r14
   14001a56c:	call   0x140006444
   14001a571:	jmp    0x14001a4ea
   14001a576:	mov    DWORD PTR [rax],ebx
   14001a578:	cmp    QWORD PTR [rsi+0x148],rbx
   14001a57f:	je     0x14001a698
   14001a585:	mov    rcx,rdi
   14001a588:	call   0x140007f54
   14001a58d:	mov    r15,rax
   14001a590:	test   rax,rax
   14001a593:	je     0x14001a64f
   14001a599:	mov    DWORD PTR [rax],ebx
   14001a59b:	mov    rdi,QWORD PTR [rsi+0x148]
   14001a5a2:	lea    rcx,[rsp+0x30]
   14001a5a7:	mov    r9d,0xe
   14001a5ad:	mov    edx,ebp
   14001a5af:	mov    r8,rdi
   14001a5b2:	mov    QWORD PTR [rsp+0x20],r14
   14001a5b7:	call   0x140007bd0
   14001a5bc:	lea    rcx,[r14+0x8]
   14001a5c0:	mov    QWORD PTR [rsp+0x20],rcx
   14001a5c5:	lea    rcx,[rsp+0x30]
   14001a5ca:	mov    r9d,0xf
   14001a5d0:	mov    r8,rdi
   14001a5d3:	mov    edx,ebp
   14001a5d5:	mov    ebx,eax
   14001a5d7:	call   0x140007bd0
   14001a5dc:	lea    r13,[r14+0x10]
   14001a5e0:	lea    rcx,[rsp+0x30]
   14001a5e5:	mov    r9d,0x10
   14001a5eb:	mov    r8,rdi
   14001a5ee:	mov    edx,ebp
   14001a5f0:	or     ebx,eax
   14001a5f2:	mov    QWORD PTR [rsp+0x20],r13
   14001a5f7:	call   0x140007bd0
   14001a5fc:	mov    r9d,0xe
   14001a602:	or     ebx,eax
   14001a604:	lea    rax,[r14+0x58]
   14001a608:	lea    rcx,[rsp+0x30]
   14001a60d:	lea    edx,[r9-0xc]
   14001a611:	mov    r8,rdi
   14001a614:	mov    QWORD PTR [rsp+0x20],rax
   14001a619:	call   0x140007bd0
   14001a61e:	mov    r9d,0xf
   14001a624:	or     ebx,eax
   14001a626:	lea    rax,[r14+0x60]
   14001a62a:	lea    rcx,[rsp+0x30]
   14001a62f:	lea    edx,[r9-0xd]
   14001a633:	mov    r8,rdi
   14001a636:	mov    QWORD PTR [rsp+0x20],rax
   14001a63b:	call   0x140007bd0
   14001a640:	or     eax,ebx
   14001a642:	je     0x14001a65f
   14001a644:	mov    rcx,r14
   14001a647:	call   0x14001a418
   14001a64c:	or     ebp,0xffffffff
   14001a64f:	mov    rcx,r14
   14001a652:	call   0x140006444
   14001a657:	mov    rcx,r12
   14001a65a:	jmp    0x14001a56c
   14001a65f:	mov    rdx,QWORD PTR [r13+0x0]
   14001a663:	xor    ebx,ebx
   14001a665:	jmp    0x14001a678
   14001a667:	mov    cl,BYTE PTR [rdx]
   14001a669:	lea    eax,[rcx-0x30]
   14001a66c:	cmp    al,0x9
   14001a66e:	ja     0x14001a67e
   14001a670:	sub    cl,0x30
   14001a673:	mov    BYTE PTR [rdx],cl
   14001a675:	add    rdx,rbp
   14001a678:	cmp    BYTE PTR [rdx],bl
   14001a67a:	jne    0x14001a667
   14001a67c:	jmp    0x14001a6d1
   14001a67e:	cmp    cl,0x3b
   14001a681:	jne    0x14001a675
   14001a683:	mov    r8,rdx
   14001a686:	lea    rcx,[r8+0x1]
   14001a68a:	mov    al,BYTE PTR [rcx]
   14001a68c:	mov    BYTE PTR [r8],al
   14001a68f:	mov    r8,rcx
   14001a692:	test   al,al
   14001a694:	jne    0x14001a686
   14001a696:	jmp    0x14001a678
   14001a698:	mov    rax,QWORD PTR [rip+0x1ce01]        # 0x1400374a0
   14001a69f:	mov    r15,rbx
   14001a6a2:	mov    QWORD PTR [r14],rax
   14001a6a5:	mov    rax,QWORD PTR [rip+0x1cdfc]        # 0x1400374a8
   14001a6ac:	mov    QWORD PTR [r14+0x8],rax
   14001a6b0:	mov    rax,QWORD PTR [rip+0x1cdf9]        # 0x1400374b0
   14001a6b7:	mov    QWORD PTR [r14+0x10],rax
   14001a6bb:	mov    rax,QWORD PTR [rip+0x1ce36]        # 0x1400374f8
   14001a6c2:	mov    QWORD PTR [r14+0x58],rax
   14001a6c6:	mov    rax,QWORD PTR [rip+0x1ce33]        # 0x140037500
   14001a6cd:	mov    QWORD PTR [r14+0x60],rax
   14001a6d1:	mov    DWORD PTR [r12],ebp
   14001a6d5:	test   r15,r15
   14001a6d8:	je     0x14001a6dd
   14001a6da:	mov    DWORD PTR [r15],ebp
   14001a6dd:	mov    rax,QWORD PTR [rsi+0xe0]
   14001a6e4:	test   rax,rax
   14001a6e7:	je     0x14001a6ec
   14001a6e9:	lock dec DWORD PTR [rax]
   14001a6ec:	mov    rcx,QWORD PTR [rsi+0xd8]
   14001a6f3:	test   rcx,rcx
   14001a6f6:	je     0x14001a715
   14001a6f8:	lock dec DWORD PTR [rcx]
   14001a6fb:	jne    0x14001a715
   14001a6fd:	mov    rcx,QWORD PTR [rsi+0xd8]
   14001a704:	call   0x140006444
   14001a709:	mov    rcx,QWORD PTR [rsi+0xf0]
   14001a710:	call   0x140006444
   14001a715:	mov    QWORD PTR [rsi+0xe0],r15
   14001a71c:	mov    QWORD PTR [rsi+0xd8],r12
   14001a723:	mov    QWORD PTR [rsi+0xf0],r14
   14001a72a:	xor    eax,eax
   14001a72c:	lea    r11,[rsp+0x40]
   14001a731:	mov    rbx,QWORD PTR [r11+0x30]
   14001a735:	mov    rbp,QWORD PTR [r11+0x38]
   14001a739:	mov    rsi,QWORD PTR [r11+0x40]
   14001a73d:	mov    rsp,r11
   14001a740:	pop    r15
   14001a742:	pop    r14
   14001a744:	pop    r13
   14001a746:	pop    r12
   14001a748:	pop    rdi
   14001a749:	ret    
   14001a74a:	int3   
   14001a74b:	int3   
   14001a74c:	xor    r9d,r9d
   14001a74f:	mov    rdx,rcx
   14001a752:	cmp    BYTE PTR [rcx],r9b
   14001a755:	je     0x14001a76d
   14001a757:	mov    cl,BYTE PTR [rdx]
   14001a759:	lea    eax,[rcx-0x30]
   14001a75c:	cmp    al,0x9
   14001a75e:	ja     0x14001a76e
   14001a760:	sub    cl,0x30
   14001a763:	mov    BYTE PTR [rdx],cl
   14001a765:	inc    rdx
   14001a768:	cmp    BYTE PTR [rdx],r9b
   14001a76b:	jne    0x14001a757
   14001a76d:	ret    
   14001a76e:	cmp    cl,0x3b
   14001a771:	jne    0x14001a765
   14001a773:	mov    r8,rdx
   14001a776:	lea    rcx,[r8+0x1]
   14001a77a:	mov    al,BYTE PTR [rcx]
   14001a77c:	mov    BYTE PTR [r8],al
   14001a77f:	mov    r8,rcx
   14001a782:	test   al,al
   14001a784:	jne    0x14001a776
   14001a786:	jmp    0x14001a768
   14001a788:	test   rcx,rcx
   14001a78b:	je     0x14001ab81
   14001a791:	push   rbx
   14001a792:	sub    rsp,0x20
   14001a796:	mov    rbx,rcx
   14001a799:	mov    rcx,QWORD PTR [rcx+0x8]
   14001a79d:	call   0x140006444
   14001a7a2:	mov    rcx,QWORD PTR [rbx+0x10]
   14001a7a6:	call   0x140006444
   14001a7ab:	mov    rcx,QWORD PTR [rbx+0x18]
   14001a7af:	call   0x140006444
   14001a7b4:	mov    rcx,QWORD PTR [rbx+0x20]
   14001a7b8:	call   0x140006444
   14001a7bd:	mov    rcx,QWORD PTR [rbx+0x28]
   14001a7c1:	call   0x140006444
   14001a7c6:	mov    rcx,QWORD PTR [rbx+0x30]
   14001a7ca:	call   0x140006444
   14001a7cf:	mov    rcx,QWORD PTR [rbx]
   14001a7d2:	call   0x140006444
   14001a7d7:	mov    rcx,QWORD PTR [rbx+0x40]
   14001a7db:	call   0x140006444
   14001a7e0:	mov    rcx,QWORD PTR [rbx+0x48]
   14001a7e4:	call   0x140006444
   14001a7e9:	mov    rcx,QWORD PTR [rbx+0x50]
   14001a7ed:	call   0x140006444
   14001a7f2:	mov    rcx,QWORD PTR [rbx+0x58]
   14001a7f6:	call   0x140006444
   14001a7fb:	mov    rcx,QWORD PTR [rbx+0x60]
   14001a7ff:	call   0x140006444
   14001a804:	mov    rcx,QWORD PTR [rbx+0x68]
   14001a808:	call   0x140006444
   14001a80d:	mov    rcx,QWORD PTR [rbx+0x38]
   14001a811:	call   0x140006444
   14001a816:	mov    rcx,QWORD PTR [rbx+0x70]
   14001a81a:	call   0x140006444
   14001a81f:	mov    rcx,QWORD PTR [rbx+0x78]
   14001a823:	call   0x140006444
   14001a828:	mov    rcx,QWORD PTR [rbx+0x80]
   14001a82f:	call   0x140006444
   14001a834:	mov    rcx,QWORD PTR [rbx+0x88]
   14001a83b:	call   0x140006444
   14001a840:	mov    rcx,QWORD PTR [rbx+0x90]
   14001a847:	call   0x140006444
   14001a84c:	mov    rcx,QWORD PTR [rbx+0x98]
   14001a853:	call   0x140006444
   14001a858:	mov    rcx,QWORD PTR [rbx+0xa0]
   14001a85f:	call   0x140006444
   14001a864:	mov    rcx,QWORD PTR [rbx+0xa8]
   14001a86b:	call   0x140006444
   14001a870:	mov    rcx,QWORD PTR [rbx+0xb0]
   14001a877:	call   0x140006444
   14001a87c:	mov    rcx,QWORD PTR [rbx+0xb8]
   14001a883:	call   0x140006444
   14001a888:	mov    rcx,QWORD PTR [rbx+0xc0]
   14001a88f:	call   0x140006444
   14001a894:	mov    rcx,QWORD PTR [rbx+0xc8]
   14001a89b:	call   0x140006444
   14001a8a0:	mov    rcx,QWORD PTR [rbx+0xd0]
   14001a8a7:	call   0x140006444
   14001a8ac:	mov    rcx,QWORD PTR [rbx+0xd8]
   14001a8b3:	call   0x140006444
   14001a8b8:	mov    rcx,QWORD PTR [rbx+0xe0]
   14001a8bf:	call   0x140006444
   14001a8c4:	mov    rcx,QWORD PTR [rbx+0xe8]
   14001a8cb:	call   0x140006444
   14001a8d0:	mov    rcx,QWORD PTR [rbx+0xf0]
   14001a8d7:	call   0x140006444
   14001a8dc:	mov    rcx,QWORD PTR [rbx+0xf8]
   14001a8e3:	call   0x140006444
   14001a8e8:	mov    rcx,QWORD PTR [rbx+0x100]
   14001a8ef:	call   0x140006444
   14001a8f4:	mov    rcx,QWORD PTR [rbx+0x108]
   14001a8fb:	call   0x140006444
   14001a900:	mov    rcx,QWORD PTR [rbx+0x110]
   14001a907:	call   0x140006444
   14001a90c:	mov    rcx,QWORD PTR [rbx+0x118]
   14001a913:	call   0x140006444
   14001a918:	mov    rcx,QWORD PTR [rbx+0x120]
   14001a91f:	call   0x140006444
   14001a924:	mov    rcx,QWORD PTR [rbx+0x128]
   14001a92b:	call   0x140006444
   14001a930:	mov    rcx,QWORD PTR [rbx+0x130]
   14001a937:	call   0x140006444
   14001a93c:	mov    rcx,QWORD PTR [rbx+0x138]
   14001a943:	call   0x140006444
   14001a948:	mov    rcx,QWORD PTR [rbx+0x140]
   14001a94f:	call   0x140006444
   14001a954:	mov    rcx,QWORD PTR [rbx+0x148]
   14001a95b:	call   0x140006444
   14001a960:	mov    rcx,QWORD PTR [rbx+0x150]
   14001a967:	call   0x140006444
   14001a96c:	mov    rcx,QWORD PTR [rbx+0x168]
   14001a973:	call   0x140006444
   14001a978:	mov    rcx,QWORD PTR [rbx+0x170]
   14001a97f:	call   0x140006444
   14001a984:	mov    rcx,QWORD PTR [rbx+0x178]
   14001a98b:	call   0x140006444
   14001a990:	mov    rcx,QWORD PTR [rbx+0x180]
   14001a997:	call   0x140006444
   14001a99c:	mov    rcx,QWORD PTR [rbx+0x188]
   14001a9a3:	call   0x140006444
   14001a9a8:	mov    rcx,QWORD PTR [rbx+0x190]
   14001a9af:	call   0x140006444
   14001a9b4:	mov    rcx,QWORD PTR [rbx+0x160]
   14001a9bb:	call   0x140006444
   14001a9c0:	mov    rcx,QWORD PTR [rbx+0x1a0]
   14001a9c7:	call   0x140006444
   14001a9cc:	mov    rcx,QWORD PTR [rbx+0x1a8]
   14001a9d3:	call   0x140006444
   14001a9d8:	mov    rcx,QWORD PTR [rbx+0x1b0]
   14001a9df:	call   0x140006444
   14001a9e4:	mov    rcx,QWORD PTR [rbx+0x1b8]
   14001a9eb:	call   0x140006444
   14001a9f0:	mov    rcx,QWORD PTR [rbx+0x1c0]
   14001a9f7:	call   0x140006444
   14001a9fc:	mov    rcx,QWORD PTR [rbx+0x1c8]
   14001aa03:	call   0x140006444
   14001aa08:	mov    rcx,QWORD PTR [rbx+0x198]
   14001aa0f:	call   0x140006444
   14001aa14:	mov    rcx,QWORD PTR [rbx+0x1d0]
   14001aa1b:	call   0x140006444
   14001aa20:	mov    rcx,QWORD PTR [rbx+0x1d8]
   14001aa27:	call   0x140006444
   14001aa2c:	mov    rcx,QWORD PTR [rbx+0x1e0]
   14001aa33:	call   0x140006444
   14001aa38:	mov    rcx,QWORD PTR [rbx+0x1e8]
   14001aa3f:	call   0x140006444
   14001aa44:	mov    rcx,QWORD PTR [rbx+0x1f0]
   14001aa4b:	call   0x140006444
   14001aa50:	mov    rcx,QWORD PTR [rbx+0x1f8]
   14001aa57:	call   0x140006444
   14001aa5c:	mov    rcx,QWORD PTR [rbx+0x200]
   14001aa63:	call   0x140006444
   14001aa68:	mov    rcx,QWORD PTR [rbx+0x208]
   14001aa6f:	call   0x140006444
   14001aa74:	mov    rcx,QWORD PTR [rbx+0x210]
   14001aa7b:	call   0x140006444
   14001aa80:	mov    rcx,QWORD PTR [rbx+0x218]
   14001aa87:	call   0x140006444
   14001aa8c:	mov    rcx,QWORD PTR [rbx+0x220]
   14001aa93:	call   0x140006444
   14001aa98:	mov    rcx,QWORD PTR [rbx+0x228]
   14001aa9f:	call   0x140006444
   14001aaa4:	mov    rcx,QWORD PTR [rbx+0x230]
   14001aaab:	call   0x140006444
   14001aab0:	mov    rcx,QWORD PTR [rbx+0x238]
   14001aab7:	call   0x140006444
   14001aabc:	mov    rcx,QWORD PTR [rbx+0x240]
   14001aac3:	call   0x140006444
   14001aac8:	mov    rcx,QWORD PTR [rbx+0x248]
   14001aacf:	call   0x140006444
   14001aad4:	mov    rcx,QWORD PTR [rbx+0x250]
   14001aadb:	call   0x140006444
   14001aae0:	mov    rcx,QWORD PTR [rbx+0x258]
   14001aae7:	call   0x140006444
   14001aaec:	mov    rcx,QWORD PTR [rbx+0x260]
   14001aaf3:	call   0x140006444
   14001aaf8:	mov    rcx,QWORD PTR [rbx+0x268]
   14001aaff:	call   0x140006444
   14001ab04:	mov    rcx,QWORD PTR [rbx+0x270]
   14001ab0b:	call   0x140006444
   14001ab10:	mov    rcx,QWORD PTR [rbx+0x278]
   14001ab17:	call   0x140006444
   14001ab1c:	mov    rcx,QWORD PTR [rbx+0x280]
   14001ab23:	call   0x140006444
   14001ab28:	mov    rcx,QWORD PTR [rbx+0x288]
   14001ab2f:	call   0x140006444
   14001ab34:	mov    rcx,QWORD PTR [rbx+0x290]
   14001ab3b:	call   0x140006444
   14001ab40:	mov    rcx,QWORD PTR [rbx+0x298]
   14001ab47:	call   0x140006444
   14001ab4c:	mov    rcx,QWORD PTR [rbx+0x2a0]
   14001ab53:	call   0x140006444
   14001ab58:	mov    rcx,QWORD PTR [rbx+0x2a8]
   14001ab5f:	call   0x140006444
   14001ab64:	mov    rcx,QWORD PTR [rbx+0x2b0]
   14001ab6b:	call   0x140006444
   14001ab70:	mov    rcx,QWORD PTR [rbx+0x2b8]
   14001ab77:	call   0x140006444
   14001ab7c:	add    rsp,0x20
   14001ab80:	pop    rbx
   14001ab81:	ret    
   14001ab82:	int3   
   14001ab83:	int3   
   14001ab84:	mov    QWORD PTR [rsp+0x8],rbx
   14001ab89:	mov    QWORD PTR [rsp+0x10],rbp
   14001ab8e:	push   rdi
   14001ab8f:	sub    rsp,0x20
   14001ab93:	cmp    QWORD PTR [rcx+0x150],0x0
   14001ab9b:	mov    rdi,rcx
   14001ab9e:	lea    rbp,[rip+0x1bf1b]        # 0x140036ac0
   14001aba5:	je     0x14001abf2
   14001aba7:	mov    edx,0x2c0
   14001abac:	mov    ecx,0x1
   14001abb1:	call   0x140007ed4
   14001abb6:	mov    rbx,rax
   14001abb9:	test   rax,rax
   14001abbc:	jne    0x14001abc5
   14001abbe:	mov    eax,0x1
   14001abc3:	jmp    0x14001ac11
   14001abc5:	mov    rdx,rdi
   14001abc8:	mov    rcx,rax
   14001abcb:	call   0x14001ac24
   14001abd0:	test   eax,eax
   14001abd2:	je     0x14001abe6
   14001abd4:	mov    rcx,rbx
   14001abd7:	call   0x14001a788
   14001abdc:	mov    rcx,rbx
   14001abdf:	call   0x140006444
   14001abe4:	jmp    0x14001abbe
   14001abe6:	mov    DWORD PTR [rbx+0x15c],0x1
   14001abf0:	jmp    0x14001abf5
   14001abf2:	mov    rbx,rbp
   14001abf5:	mov    rax,QWORD PTR [rdi+0x120]
   14001abfc:	cmp    rax,rbp
   14001abff:	je     0x14001ac08
   14001ac01:	lock dec DWORD PTR [rax+0x15c]
   14001ac08:	mov    QWORD PTR [rdi+0x120],rbx
   14001ac0f:	xor    eax,eax
   14001ac11:	mov    rbx,QWORD PTR [rsp+0x30]
   14001ac16:	mov    rbp,QWORD PTR [rsp+0x38]
   14001ac1b:	add    rsp,0x20
   14001ac1f:	pop    rdi
   14001ac20:	ret    
   14001ac21:	int3   
   14001ac22:	int3   
   14001ac23:	int3   
   14001ac24:	mov    rax,rsp
   14001ac27:	mov    QWORD PTR [rax+0x8],rbx
   14001ac2b:	mov    QWORD PTR [rax+0x10],rsi
   14001ac2f:	mov    QWORD PTR [rax+0x18],rdi
   14001ac33:	mov    QWORD PTR [rax+0x20],r14
   14001ac37:	push   rbp
   14001ac38:	mov    rbp,rsp
   14001ac3b:	sub    rsp,0x40
   14001ac3f:	mov    rsi,QWORD PTR [rdx+0x150]
   14001ac46:	mov    rbx,rdx
   14001ac49:	mov    rdi,rcx
   14001ac4c:	test   rcx,rcx
   14001ac4f:	jne    0x14001ac59
   14001ac51:	or     eax,0xffffffff
   14001ac54:	jmp    0x14001b783
   14001ac59:	mov    rcx,rsi
   14001ac5c:	call   0x14001c6c8
   14001ac61:	and    QWORD PTR [rbp-0x8],0x0
   14001ac66:	mov    r9d,0x31
   14001ac6c:	lea    r14d,[r9-0x30]
   14001ac70:	mov    QWORD PTR [rdi+0x2b8],rax
   14001ac77:	lea    rax,[rdi+0x8]
   14001ac7b:	lea    rcx,[rbp-0x10]
   14001ac7f:	mov    r8,rsi
   14001ac82:	mov    edx,r14d
   14001ac85:	mov    QWORD PTR [rbp-0x10],rbx
   14001ac89:	mov    QWORD PTR [rsp+0x20],rax
   14001ac8e:	call   0x140007bd0
   14001ac93:	lea    rcx,[rdi+0x10]
   14001ac97:	lea    r9d,[r14+0x31]
   14001ac9b:	mov    r8,rsi
   14001ac9e:	mov    QWORD PTR [rsp+0x20],rcx
   14001aca3:	lea    rcx,[rbp-0x10]
   14001aca7:	mov    edx,r14d
   14001acaa:	mov    ebx,eax
   14001acac:	call   0x140007bd0
   14001acb1:	lea    rcx,[rdi+0x18]
   14001acb5:	mov    QWORD PTR [rsp+0x20],rcx
   14001acba:	lea    r9d,[r14+0x32]
   14001acbe:	lea    rcx,[rbp-0x10]
   14001acc2:	mov    r8,rsi
   14001acc5:	mov    edx,r14d
   14001acc8:	or     ebx,eax
   14001acca:	call   0x140007bd0
   14001accf:	lea    r9d,[r14+0x33]
   14001acd3:	lea    rcx,[rbp-0x10]
   14001acd7:	or     ebx,eax
   14001acd9:	lea    rax,[rdi+0x20]
   14001acdd:	mov    r8,rsi
   14001ace0:	mov    edx,r14d
   14001ace3:	mov    QWORD PTR [rsp+0x20],rax
   14001ace8:	call   0x140007bd0
   14001aced:	lea    r9d,[r14+0x34]
   14001acf1:	lea    rcx,[rbp-0x10]
   14001acf5:	or     ebx,eax
   14001acf7:	lea    rax,[rdi+0x28]
   14001acfb:	mov    r8,rsi
   14001acfe:	mov    edx,r14d
   14001ad01:	mov    QWORD PTR [rsp+0x20],rax
   14001ad06:	call   0x140007bd0
   14001ad0b:	lea    r9d,[r14+0x35]
   14001ad0f:	lea    rcx,[rbp-0x10]
   14001ad13:	or     ebx,eax
   14001ad15:	lea    rax,[rdi+0x30]
   14001ad19:	mov    r8,rsi
   14001ad1c:	mov    edx,r14d
   14001ad1f:	mov    QWORD PTR [rsp+0x20],rax
   14001ad24:	call   0x140007bd0
   14001ad29:	lea    r9d,[r14+0x36]
   14001ad2d:	lea    rcx,[rbp-0x10]
   14001ad31:	mov    r8,rsi
   14001ad34:	mov    edx,r14d
   14001ad37:	mov    QWORD PTR [rsp+0x20],rdi
   14001ad3c:	or     ebx,eax
   14001ad3e:	call   0x140007bd0
   14001ad43:	lea    r9d,[r14+0x29]
   14001ad47:	or     ebx,eax
   14001ad49:	lea    rax,[rdi+0x40]
   14001ad4d:	lea    rcx,[rbp-0x10]
   14001ad51:	mov    r8,rsi
   14001ad54:	mov    edx,r14d
   14001ad57:	mov    QWORD PTR [rsp+0x20],rax
   14001ad5c:	call   0x140007bd0
   14001ad61:	lea    r9d,[r14+0x2a]
   14001ad65:	lea    rcx,[rbp-0x10]
   14001ad69:	or     ebx,eax
   14001ad6b:	lea    rax,[rdi+0x48]
   14001ad6f:	mov    r8,rsi
   14001ad72:	mov    edx,r14d
   14001ad75:	mov    QWORD PTR [rsp+0x20],rax
   14001ad7a:	call   0x140007bd0
   14001ad7f:	lea    r9d,[r14+0x2b]
   14001ad83:	mov    r8,rsi
   14001ad86:	or     ebx,eax
   14001ad88:	lea    rax,[rdi+0x50]
   14001ad8c:	mov    QWORD PTR [rsp+0x20],rax
   14001ad91:	lea    rcx,[rbp-0x10]
   14001ad95:	mov    edx,r14d
   14001ad98:	call   0x140007bd0
   14001ad9d:	lea    r9d,[r14+0x2c]
   14001ada1:	lea    rcx,[rbp-0x10]
   14001ada5:	or     ebx,eax
   14001ada7:	lea    rax,[rdi+0x58]
   14001adab:	mov    r8,rsi
   14001adae:	mov    edx,r14d
   14001adb1:	mov    QWORD PTR [rsp+0x20],rax
   14001adb6:	call   0x140007bd0
   14001adbb:	lea    r9d,[r14+0x2d]
   14001adbf:	lea    rcx,[rbp-0x10]
   14001adc3:	or     ebx,eax
   14001adc5:	lea    rax,[rdi+0x60]
   14001adc9:	mov    r8,rsi
   14001adcc:	mov    edx,r14d
   14001adcf:	mov    QWORD PTR [rsp+0x20],rax
   14001add4:	call   0x140007bd0
   14001add9:	lea    r9d,[r14+0x2e]
   14001addd:	lea    rcx,[rbp-0x10]
   14001ade1:	or     ebx,eax
   14001ade3:	lea    rax,[rdi+0x68]
   14001ade7:	mov    r8,rsi
   14001adea:	mov    edx,r14d
   14001aded:	mov    QWORD PTR [rsp+0x20],rax
   14001adf2:	call   0x140007bd0
   14001adf7:	lea    r9d,[r14+0x2f]
   14001adfb:	lea    rcx,[rbp-0x10]
   14001adff:	or     ebx,eax
   14001ae01:	lea    rax,[rdi+0x38]
   14001ae05:	mov    r8,rsi
   14001ae08:	mov    edx,r14d
   14001ae0b:	mov    QWORD PTR [rsp+0x20],rax
   14001ae10:	call   0x140007bd0
   14001ae15:	lea    r9d,[r14+0x43]
   14001ae19:	lea    rcx,[rbp-0x10]
   14001ae1d:	or     ebx,eax
   14001ae1f:	lea    rax,[rdi+0x70]
   14001ae23:	mov    r8,rsi
   14001ae26:	mov    edx,r14d
   14001ae29:	mov    QWORD PTR [rsp+0x20],rax
   14001ae2e:	call   0x140007bd0
   14001ae33:	lea    r9d,[r14+0x44]
   14001ae37:	lea    rcx,[rbp-0x10]
   14001ae3b:	or     ebx,eax
   14001ae3d:	lea    rax,[rdi+0x78]
   14001ae41:	mov    r8,rsi
   14001ae44:	mov    edx,r14d
   14001ae47:	mov    QWORD PTR [rsp+0x20],rax
   14001ae4c:	call   0x140007bd0
   14001ae51:	lea    r9d,[r14+0x45]
   14001ae55:	lea    rcx,[rbp-0x10]
   14001ae59:	or     ebx,eax
   14001ae5b:	lea    rax,[rdi+0x80]
   14001ae62:	mov    r8,rsi
   14001ae65:	mov    edx,r14d
   14001ae68:	mov    QWORD PTR [rsp+0x20],rax
   14001ae6d:	call   0x140007bd0
   14001ae72:	lea    r9d,[r14+0x46]
   14001ae76:	lea    rcx,[rbp-0x10]
   14001ae7a:	or     ebx,eax
   14001ae7c:	lea    rax,[rdi+0x88]
   14001ae83:	mov    r8,rsi
   14001ae86:	mov    edx,r14d
   14001ae89:	mov    QWORD PTR [rsp+0x20],rax
   14001ae8e:	call   0x140007bd0
   14001ae93:	lea    r9d,[r14+0x47]
   14001ae97:	lea    rcx,[rbp-0x10]
   14001ae9b:	or     ebx,eax
   14001ae9d:	lea    rax,[rdi+0x90]
   14001aea4:	mov    r8,rsi
   14001aea7:	mov    edx,r14d
   14001aeaa:	mov    QWORD PTR [rsp+0x20],rax
   14001aeaf:	call   0x140007bd0
   14001aeb4:	lea    r9d,[r14+0x48]
   14001aeb8:	mov    r8,rsi
   14001aebb:	or     ebx,eax
   14001aebd:	lea    rax,[rdi+0x98]
   14001aec4:	mov    edx,r14d
   14001aec7:	mov    QWORD PTR [rsp+0x20],rax
   14001aecc:	lea    rcx,[rbp-0x10]
   14001aed0:	call   0x140007bd0
   14001aed5:	lea    r9d,[r14+0x49]
   14001aed9:	lea    rcx,[rbp-0x10]
   14001aedd:	or     ebx,eax
   14001aedf:	lea    rax,[rdi+0xa0]
   14001aee6:	mov    r8,rsi
   14001aee9:	mov    edx,r14d
   14001aeec:	mov    QWORD PTR [rsp+0x20],rax
   14001aef1:	call   0x140007bd0
   14001aef6:	lea    r9d,[r14+0x4a]
   14001aefa:	lea    rcx,[rbp-0x10]
   14001aefe:	or     ebx,eax
   14001af00:	lea    rax,[rdi+0xa8]
   14001af07:	mov    r8,rsi
   14001af0a:	mov    edx,r14d
   14001af0d:	mov    QWORD PTR [rsp+0x20],rax
   14001af12:	call   0x140007bd0
   14001af17:	lea    r9d,[r14+0x4b]
   14001af1b:	lea    rcx,[rbp-0x10]
   14001af1f:	or     ebx,eax
   14001af21:	lea    rax,[rdi+0xb0]
   14001af28:	mov    r8,rsi
   14001af2b:	mov    edx,r14d
   14001af2e:	mov    QWORD PTR [rsp+0x20],rax
   14001af33:	call   0x140007bd0
   14001af38:	lea    r9d,[r14+0x4c]
   14001af3c:	lea    rcx,[rbp-0x10]
   14001af40:	or     ebx,eax
   14001af42:	lea    rax,[rdi+0xb8]
   14001af49:	mov    r8,rsi
   14001af4c:	mov    edx,r14d
   14001af4f:	mov    QWORD PTR [rsp+0x20],rax
   14001af54:	call   0x140007bd0
   14001af59:	lea    r9d,[r14+0x4d]
   14001af5d:	lea    rcx,[rbp-0x10]
   14001af61:	or     ebx,eax
   14001af63:	lea    rax,[rdi+0xc0]
   14001af6a:	mov    r8,rsi
   14001af6d:	mov    edx,r14d
   14001af70:	mov    QWORD PTR [rsp+0x20],rax
   14001af75:	call   0x140007bd0
   14001af7a:	lea    r9d,[r14+0x4e]
   14001af7e:	lea    rcx,[rbp-0x10]
   14001af82:	or     ebx,eax
   14001af84:	lea    rax,[rdi+0xc8]
   14001af8b:	mov    r8,rsi
   14001af8e:	mov    edx,r14d
   14001af91:	mov    QWORD PTR [rsp+0x20],rax
   14001af96:	call   0x140007bd0
   14001af9b:	lea    r9d,[r14+0x37]
   14001af9f:	lea    rcx,[rbp-0x10]
   14001afa3:	or     ebx,eax
   14001afa5:	lea    rax,[rdi+0xd0]
   14001afac:	mov    r8,rsi
   14001afaf:	mov    edx,r14d
   14001afb2:	mov    QWORD PTR [rsp+0x20],rax
   14001afb7:	call   0x140007bd0
   14001afbc:	lea    r9d,[r14+0x38]
   14001afc0:	lea    rcx,[rbp-0x10]
   14001afc4:	or     ebx,eax
   14001afc6:	lea    rax,[rdi+0xd8]
   14001afcd:	mov    r8,rsi
   14001afd0:	mov    edx,r14d
   14001afd3:	mov    QWORD PTR [rsp+0x20],rax
   14001afd8:	call   0x140007bd0
   14001afdd:	lea    r9d,[r14+0x39]
   14001afe1:	lea    rcx,[rbp-0x10]
   14001afe5:	or     ebx,eax
   14001afe7:	lea    rax,[rdi+0xe0]
   14001afee:	mov    r8,rsi
   14001aff1:	mov    edx,r14d
   14001aff4:	mov    QWORD PTR [rsp+0x20],rax
   14001aff9:	call   0x140007bd0
   14001affe:	lea    r9d,[r14+0x3a]
   14001b002:	mov    r8,rsi
   14001b005:	or     ebx,eax
   14001b007:	lea    rax,[rdi+0xe8]
   14001b00e:	mov    edx,r14d
   14001b011:	mov    QWORD PTR [rsp+0x20],rax
   14001b016:	lea    rcx,[rbp-0x10]
   14001b01a:	call   0x140007bd0
   14001b01f:	lea    r9d,[r14+0x3b]
   14001b023:	lea    rcx,[rbp-0x10]
   14001b027:	or     ebx,eax
   14001b029:	lea    rax,[rdi+0xf0]
   14001b030:	mov    r8,rsi
   14001b033:	mov    edx,r14d
   14001b036:	mov    QWORD PTR [rsp+0x20],rax
   14001b03b:	call   0x140007bd0
   14001b040:	lea    r9d,[r14+0x3c]
   14001b044:	lea    rcx,[rbp-0x10]
   14001b048:	or     ebx,eax
   14001b04a:	lea    rax,[rdi+0xf8]
   14001b051:	mov    r8,rsi
   14001b054:	mov    edx,r14d
   14001b057:	mov    QWORD PTR [rsp+0x20],rax
   14001b05c:	call   0x140007bd0
   14001b061:	lea    r9d,[r14+0x3d]
   14001b065:	lea    rcx,[rbp-0x10]
   14001b069:	or     ebx,eax
   14001b06b:	lea    rax,[rdi+0x100]
   14001b072:	mov    r8,rsi
   14001b075:	mov    edx,r14d
   14001b078:	mov    QWORD PTR [rsp+0x20],rax
   14001b07d:	call   0x140007bd0
   14001b082:	lea    r9d,[r14+0x3e]
   14001b086:	lea    rcx,[rbp-0x10]
   14001b08a:	or     ebx,eax
   14001b08c:	lea    rax,[rdi+0x108]
   14001b093:	mov    r8,rsi
   14001b096:	mov    edx,r14d
   14001b099:	mov    QWORD PTR [rsp+0x20],rax
   14001b09e:	call   0x140007bd0
   14001b0a3:	lea    r9d,[r14+0x3f]
   14001b0a7:	lea    rcx,[rbp-0x10]
   14001b0ab:	or     ebx,eax
   14001b0ad:	lea    rax,[rdi+0x110]
   14001b0b4:	mov    r8,rsi
   14001b0b7:	mov    edx,r14d
   14001b0ba:	mov    QWORD PTR [rsp+0x20],rax
   14001b0bf:	call   0x140007bd0
   14001b0c4:	lea    r9d,[r14+0x40]
   14001b0c8:	lea    rcx,[rbp-0x10]
   14001b0cc:	or     ebx,eax
   14001b0ce:	lea    rax,[rdi+0x118]
   14001b0d5:	mov    r8,rsi
   14001b0d8:	mov    edx,r14d
   14001b0db:	mov    QWORD PTR [rsp+0x20],rax
   14001b0e0:	call   0x140007bd0
   14001b0e5:	lea    r9d,[r14+0x41]
   14001b0e9:	lea    rcx,[rbp-0x10]
   14001b0ed:	or     ebx,eax
   14001b0ef:	lea    rax,[rdi+0x120]
   14001b0f6:	mov    r8,rsi
   14001b0f9:	mov    edx,r14d
   14001b0fc:	mov    QWORD PTR [rsp+0x20],rax
   14001b101:	call   0x140007bd0
   14001b106:	lea    r9d,[r14+0x42]
   14001b10a:	lea    rcx,[rbp-0x10]
   14001b10e:	or     ebx,eax
   14001b110:	lea    rax,[rdi+0x128]
   14001b117:	mov    r8,rsi
   14001b11a:	mov    edx,r14d
   14001b11d:	mov    QWORD PTR [rsp+0x20],rax
   14001b122:	call   0x140007bd0
   14001b127:	lea    r9d,[r14+0x27]
   14001b12b:	lea    rcx,[rbp-0x10]
   14001b12f:	or     ebx,eax
   14001b131:	lea    rax,[rdi+0x130]
   14001b138:	mov    r8,rsi
   14001b13b:	mov    edx,r14d
   14001b13e:	mov    QWORD PTR [rsp+0x20],rax
   14001b143:	call   0x140007bd0
   14001b148:	lea    r9d,[r14+0x28]
   14001b14c:	lea    rcx,[rbp-0x10]
   14001b150:	or     ebx,eax
   14001b152:	lea    rax,[rdi+0x138]
   14001b159:	mov    r8,rsi
   14001b15c:	mov    edx,r14d
   14001b15f:	mov    QWORD PTR [rsp+0x20],rax
   14001b164:	call   0x140007bd0
   14001b169:	or     ebx,eax
   14001b16b:	lea    rax,[rdi+0x140]
   14001b172:	lea    r9d,[r14+0x1e]
   14001b176:	lea    rcx,[rbp-0x10]
   14001b17a:	mov    r8,rsi
   14001b17d:	mov    edx,r14d
   14001b180:	mov    QWORD PTR [rsp+0x20],rax
   14001b185:	call   0x140007bd0
   14001b18a:	lea    r9d,[r14+0x1f]
   14001b18e:	or     ebx,eax
   14001b190:	lea    rax,[rdi+0x148]
   14001b197:	lea    rcx,[rbp-0x10]
   14001b19b:	mov    r8,rsi
   14001b19e:	mov    edx,r14d
   14001b1a1:	mov    QWORD PTR [rsp+0x20],rax
   14001b1a6:	call   0x140007bd0
   14001b1ab:	lea    rcx,[rbp-0x10]
   14001b1af:	mov    r9d,0x1003
   14001b1b5:	or     ebx,eax
   14001b1b7:	lea    rax,[rdi+0x150]
   14001b1be:	mov    r8,rsi
   14001b1c1:	mov    edx,r14d
   14001b1c4:	mov    QWORD PTR [rsp+0x20],rax
   14001b1c9:	call   0x140007bd0
   14001b1ce:	lea    rcx,[rbp-0x10]
   14001b1d2:	mov    r9d,0x1009
   14001b1d8:	or     ebx,eax
   14001b1da:	lea    rax,[rdi+0x158]
   14001b1e1:	mov    r8,rsi
   14001b1e4:	xor    edx,edx
   14001b1e6:	mov    QWORD PTR [rsp+0x20],rax
   14001b1eb:	call   0x140007bd0
   14001b1f0:	lea    r9d,[r14+0x30]
   14001b1f4:	lea    rcx,[rbp-0x10]
   14001b1f8:	lea    r14d,[r9-0x2f]
   14001b1fc:	or     ebx,eax
   14001b1fe:	lea    rax,[rdi+0x168]
   14001b205:	mov    edx,r14d
   14001b208:	mov    r8,rsi
   14001b20b:	mov    QWORD PTR [rsp+0x20],rax
   14001b210:	call   0x140007bd0
   14001b215:	lea    r9d,[r14+0x30]
   14001b219:	lea    rcx,[rbp-0x10]
   14001b21d:	or     ebx,eax
   14001b21f:	lea    rax,[rdi+0x170]
   14001b226:	mov    r8,rsi
   14001b229:	mov    edx,r14d
   14001b22c:	mov    QWORD PTR [rsp+0x20],rax
   14001b231:	call   0x140007bd0
   14001b236:	lea    r9d,[r14+0x31]
   14001b23a:	lea    rcx,[rbp-0x10]
   14001b23e:	or     ebx,eax
   14001b240:	lea    rax,[rdi+0x178]
   14001b247:	mov    r8,rsi
   14001b24a:	mov    edx,r14d
   14001b24d:	mov    QWORD PTR [rsp+0x20],rax
   14001b252:	call   0x140007bd0
   14001b257:	lea    r9d,[r14+0x32]
   14001b25b:	lea    rcx,[rbp-0x10]
   14001b25f:	or     ebx,eax
   14001b261:	lea    rax,[rdi+0x180]
   14001b268:	mov    r8,rsi
   14001b26b:	mov    edx,r14d
   14001b26e:	mov    QWORD PTR [rsp+0x20],rax
   14001b273:	call   0x140007bd0
   14001b278:	lea    r9d,[r14+0x33]
   14001b27c:	lea    rcx,[rbp-0x10]
   14001b280:	or     ebx,eax
   14001b282:	lea    rax,[rdi+0x188]
   14001b289:	mov    r8,rsi
   14001b28c:	mov    edx,r14d
   14001b28f:	mov    QWORD PTR [rsp+0x20],rax
   14001b294:	call   0x140007bd0
   14001b299:	lea    r9d,[r14+0x34]
   14001b29d:	lea    rcx,[rbp-0x10]
   14001b2a1:	or     ebx,eax
   14001b2a3:	lea    rax,[rdi+0x190]
   14001b2aa:	mov    r8,rsi
   14001b2ad:	mov    edx,r14d
   14001b2b0:	mov    QWORD PTR [rsp+0x20],rax
   14001b2b5:	call   0x140007bd0
   14001b2ba:	or     ebx,eax
   14001b2bc:	lea    rax,[rdi+0x160]
   14001b2c3:	lea    r9d,[r14+0x35]
   14001b2c7:	lea    rcx,[rbp-0x10]
   14001b2cb:	mov    r8,rsi
   14001b2ce:	mov    edx,r14d
   14001b2d1:	mov    QWORD PTR [rsp+0x20],rax
   14001b2d6:	call   0x140007bd0
   14001b2db:	lea    r9d,[r14+0x28]
   14001b2df:	or     ebx,eax
   14001b2e1:	lea    rax,[rdi+0x1a0]
   14001b2e8:	lea    rcx,[rbp-0x10]
   14001b2ec:	mov    r8,rsi
   14001b2ef:	mov    edx,r14d
   14001b2f2:	mov    QWORD PTR [rsp+0x20],rax
   14001b2f7:	call   0x140007bd0
   14001b2fc:	lea    r9d,[r14+0x29]
   14001b300:	lea    rcx,[rbp-0x10]
   14001b304:	or     ebx,eax
   14001b306:	lea    rax,[rdi+0x1a8]
   14001b30d:	mov    r8,rsi
   14001b310:	mov    edx,r14d
   14001b313:	mov    QWORD PTR [rsp+0x20],rax
   14001b318:	call   0x140007bd0
   14001b31d:	lea    r9d,[r14+0x2a]
   14001b321:	lea    rcx,[rbp-0x10]
   14001b325:	or     ebx,eax
   14001b327:	lea    rax,[rdi+0x1b0]
   14001b32e:	mov    r8,rsi
   14001b331:	mov    edx,r14d
   14001b334:	mov    QWORD PTR [rsp+0x20],rax
   14001b339:	call   0x140007bd0
   14001b33e:	lea    r9d,[r14+0x2b]
   14001b342:	lea    rcx,[rbp-0x10]
   14001b346:	or     ebx,eax
   14001b348:	lea    rax,[rdi+0x1b8]
   14001b34f:	mov    r8,rsi
   14001b352:	mov    edx,r14d
   14001b355:	mov    QWORD PTR [rsp+0x20],rax
   14001b35a:	call   0x140007bd0
   14001b35f:	lea    r9d,[r14+0x2c]
   14001b363:	lea    rcx,[rbp-0x10]
   14001b367:	or     ebx,eax
   14001b369:	lea    rax,[rdi+0x1c0]
   14001b370:	mov    r8,rsi
   14001b373:	mov    edx,r14d
   14001b376:	mov    QWORD PTR [rsp+0x20],rax
   14001b37b:	call   0x140007bd0
   14001b380:	lea    r9d,[r14+0x2d]
   14001b384:	lea    rcx,[rbp-0x10]
   14001b388:	or     ebx,eax
   14001b38a:	lea    rax,[rdi+0x1c8]
   14001b391:	mov    r8,rsi
   14001b394:	mov    edx,r14d
   14001b397:	mov    QWORD PTR [rsp+0x20],rax
   14001b39c:	call   0x140007bd0
   14001b3a1:	lea    r9d,[r14+0x2e]
   14001b3a5:	lea    rcx,[rbp-0x10]
   14001b3a9:	or     ebx,eax
   14001b3ab:	lea    rax,[rdi+0x198]
   14001b3b2:	mov    r8,rsi
   14001b3b5:	mov    edx,r14d
   14001b3b8:	mov    QWORD PTR [rsp+0x20],rax
   14001b3bd:	call   0x140007bd0
   14001b3c2:	lea    r9d,[r14+0x42]
   14001b3c6:	lea    rcx,[rbp-0x10]
   14001b3ca:	or     ebx,eax
   14001b3cc:	lea    rax,[rdi+0x1d0]
   14001b3d3:	mov    r8,rsi
   14001b3d6:	mov    edx,r14d
   14001b3d9:	mov    QWORD PTR [rsp+0x20],rax
   14001b3de:	call   0x140007bd0
   14001b3e3:	lea    r9d,[r14+0x43]
   14001b3e7:	lea    rcx,[rbp-0x10]
   14001b3eb:	or     ebx,eax
   14001b3ed:	lea    rax,[rdi+0x1d8]
   14001b3f4:	mov    r8,rsi
   14001b3f7:	mov    edx,r14d
   14001b3fa:	mov    QWORD PTR [rsp+0x20],rax
   14001b3ff:	call   0x140007bd0
   14001b404:	or     ebx,eax
   14001b406:	lea    rax,[rdi+0x1e0]
   14001b40d:	lea    r9d,[r14+0x44]
   14001b411:	lea    rcx,[rbp-0x10]
   14001b415:	mov    r8,rsi
   14001b418:	mov    edx,r14d
   14001b41b:	mov    QWORD PTR [rsp+0x20],rax
   14001b420:	call   0x140007bd0
   14001b425:	lea    r9d,[r14+0x45]
   14001b429:	lea    rcx,[rbp-0x10]
   14001b42d:	or     ebx,eax
   14001b42f:	lea    rax,[rdi+0x1e8]
   14001b436:	mov    r8,rsi
   14001b439:	mov    edx,r14d
   14001b43c:	mov    QWORD PTR [rsp+0x20],rax
   14001b441:	call   0x140007bd0
   14001b446:	lea    r9d,[r14+0x46]
   14001b44a:	lea    rcx,[rbp-0x10]
   14001b44e:	or     ebx,eax
   14001b450:	lea    rax,[rdi+0x1f0]
   14001b457:	mov    r8,rsi
   14001b45a:	mov    edx,r14d
   14001b45d:	mov    QWORD PTR [rsp+0x20],rax
   14001b462:	call   0x140007bd0
   14001b467:	lea    r9d,[r14+0x47]
   14001b46b:	lea    rcx,[rbp-0x10]
   14001b46f:	or     ebx,eax
   14001b471:	lea    rax,[rdi+0x1f8]
   14001b478:	mov    r8,rsi
   14001b47b:	mov    edx,r14d
   14001b47e:	mov    QWORD PTR [rsp+0x20],rax
   14001b483:	call   0x140007bd0
   14001b488:	lea    r9d,[r14+0x48]
   14001b48c:	lea    rcx,[rbp-0x10]
   14001b490:	or     ebx,eax
   14001b492:	lea    rax,[rdi+0x200]
   14001b499:	mov    r8,rsi
   14001b49c:	mov    edx,r14d
   14001b49f:	mov    QWORD PTR [rsp+0x20],rax
   14001b4a4:	call   0x140007bd0
   14001b4a9:	lea    r9d,[r14+0x49]
   14001b4ad:	lea    rcx,[rbp-0x10]
   14001b4b1:	or     ebx,eax
   14001b4b3:	lea    rax,[rdi+0x208]
   14001b4ba:	mov    r8,rsi
   14001b4bd:	mov    edx,r14d
   14001b4c0:	mov    QWORD PTR [rsp+0x20],rax
   14001b4c5:	call   0x140007bd0
   14001b4ca:	lea    r9d,[r14+0x4a]
   14001b4ce:	lea    rcx,[rbp-0x10]
   14001b4d2:	or     ebx,eax
   14001b4d4:	lea    rax,[rdi+0x210]
   14001b4db:	mov    r8,rsi
   14001b4de:	mov    edx,r14d
   14001b4e1:	mov    QWORD PTR [rsp+0x20],rax
   14001b4e6:	call   0x140007bd0
   14001b4eb:	lea    r9d,[r14+0x4b]
   14001b4ef:	lea    rcx,[rbp-0x10]
   14001b4f3:	or     ebx,eax
   14001b4f5:	lea    rax,[rdi+0x218]
   14001b4fc:	mov    r8,rsi
   14001b4ff:	mov    edx,r14d
   14001b502:	mov    QWORD PTR [rsp+0x20],rax
   14001b507:	call   0x140007bd0
   14001b50c:	lea    r9d,[r14+0x4c]
   14001b510:	lea    rcx,[rbp-0x10]
   14001b514:	or     ebx,eax
   14001b516:	lea    rax,[rdi+0x220]
   14001b51d:	mov    r8,rsi
   14001b520:	mov    edx,r14d
   14001b523:	mov    QWORD PTR [rsp+0x20],rax
   14001b528:	call   0x140007bd0
   14001b52d:	lea    r9d,[r14+0x4d]
   14001b531:	lea    rcx,[rbp-0x10]
   14001b535:	or     ebx,eax
   14001b537:	lea    rax,[rdi+0x228]
   14001b53e:	mov    r8,rsi
   14001b541:	mov    edx,r14d
   14001b544:	mov    QWORD PTR [rsp+0x20],rax
   14001b549:	call   0x140007bd0
   14001b54e:	or     ebx,eax
   14001b550:	lea    rax,[rdi+0x230]
   14001b557:	lea    r9d,[r14+0x36]
   14001b55b:	lea    rcx,[rbp-0x10]
   14001b55f:	mov    r8,rsi
   14001b562:	mov    edx,r14d
   14001b565:	mov    QWORD PTR [rsp+0x20],rax
   14001b56a:	call   0x140007bd0
   14001b56f:	lea    r9d,[r14+0x37]
   14001b573:	lea    rcx,[rbp-0x10]
   14001b577:	or     ebx,eax
   14001b579:	lea    rax,[rdi+0x238]
   14001b580:	mov    r8,rsi
   14001b583:	mov    edx,r14d
   14001b586:	mov    QWORD PTR [rsp+0x20],rax
   14001b58b:	call   0x140007bd0
   14001b590:	lea    r9d,[r14+0x38]
   14001b594:	lea    rcx,[rbp-0x10]
   14001b598:	or     ebx,eax
   14001b59a:	lea    rax,[rdi+0x240]
   14001b5a1:	mov    r8,rsi
   14001b5a4:	mov    edx,r14d
   14001b5a7:	mov    QWORD PTR [rsp+0x20],rax
   14001b5ac:	call   0x140007bd0
   14001b5b1:	lea    r9d,[r14+0x39]
   14001b5b5:	lea    rcx,[rbp-0x10]
   14001b5b9:	or     ebx,eax
   14001b5bb:	lea    rax,[rdi+0x248]
   14001b5c2:	mov    r8,rsi
   14001b5c5:	mov    edx,r14d
   14001b5c8:	mov    QWORD PTR [rsp+0x20],rax
   14001b5cd:	call   0x140007bd0
   14001b5d2:	lea    r9d,[r14+0x3a]
   14001b5d6:	lea    rcx,[rbp-0x10]
   14001b5da:	or     ebx,eax
   14001b5dc:	lea    rax,[rdi+0x250]
   14001b5e3:	mov    r8,rsi
   14001b5e6:	mov    edx,r14d
   14001b5e9:	mov    QWORD PTR [rsp+0x20],rax
   14001b5ee:	call   0x140007bd0
   14001b5f3:	lea    r9d,[r14+0x3b]
   14001b5f7:	lea    rcx,[rbp-0x10]
   14001b5fb:	or     ebx,eax
   14001b5fd:	lea    rax,[rdi+0x258]
   14001b604:	mov    r8,rsi
   14001b607:	mov    edx,r14d
   14001b60a:	mov    QWORD PTR [rsp+0x20],rax
   14001b60f:	call   0x140007bd0
   14001b614:	lea    r9d,[r14+0x3c]
   14001b618:	lea    rcx,[rbp-0x10]
   14001b61c:	or     ebx,eax
   14001b61e:	lea    rax,[rdi+0x260]
   14001b625:	mov    r8,rsi
   14001b628:	mov    edx,r14d
   14001b62b:	mov    QWORD PTR [rsp+0x20],rax
   14001b630:	call   0x140007bd0
   14001b635:	lea    r9d,[r14+0x3d]
   14001b639:	lea    rcx,[rbp-0x10]
   14001b63d:	or     ebx,eax
   14001b63f:	lea    rax,[rdi+0x268]
   14001b646:	mov    r8,rsi
   14001b649:	mov    edx,r14d
   14001b64c:	mov    QWORD PTR [rsp+0x20],rax
   14001b651:	call   0x140007bd0
   14001b656:	lea    r9d,[r14+0x3e]
   14001b65a:	lea    rcx,[rbp-0x10]
   14001b65e:	or     ebx,eax
   14001b660:	lea    rax,[rdi+0x270]
   14001b667:	mov    r8,rsi
   14001b66a:	mov    edx,r14d
   14001b66d:	mov    QWORD PTR [rsp+0x20],rax
   14001b672:	call   0x140007bd0
   14001b677:	lea    r9d,[r14+0x3f]
   14001b67b:	lea    rcx,[rbp-0x10]
   14001b67f:	or     ebx,eax
   14001b681:	lea    rax,[rdi+0x278]
   14001b688:	mov    r8,rsi
   14001b68b:	mov    edx,r14d
   14001b68e:	mov    QWORD PTR [rsp+0x20],rax
   14001b693:	call   0x140007bd0
   14001b698:	or     ebx,eax
   14001b69a:	lea    rax,[rdi+0x280]
   14001b6a1:	mov    QWORD PTR [rsp+0x20],rax
   14001b6a6:	lea    r9d,[r14+0x40]
   14001b6aa:	lea    rcx,[rbp-0x10]
   14001b6ae:	mov    r8,rsi
   14001b6b1:	mov    edx,r14d
   14001b6b4:	call   0x140007bd0
   14001b6b9:	lea    r9d,[r14+0x41]
   14001b6bd:	lea    rcx,[rbp-0x10]
   14001b6c1:	or     ebx,eax
   14001b6c3:	lea    rax,[rdi+0x288]
   14001b6ca:	mov    r8,rsi
   14001b6cd:	mov    edx,r14d
   14001b6d0:	mov    QWORD PTR [rsp+0x20],rax
   14001b6d5:	call   0x140007bd0
   14001b6da:	lea    r9d,[r14+0x26]
   14001b6de:	lea    rcx,[rbp-0x10]
   14001b6e2:	or     ebx,eax
   14001b6e4:	lea    rax,[rdi+0x290]
   14001b6eb:	mov    r8,rsi
   14001b6ee:	mov    edx,r14d
   14001b6f1:	mov    QWORD PTR [rsp+0x20],rax
   14001b6f6:	call   0x140007bd0
   14001b6fb:	lea    r9d,[r14+0x27]
   14001b6ff:	lea    rcx,[rbp-0x10]
   14001b703:	or     ebx,eax
   14001b705:	lea    rax,[rdi+0x298]
   14001b70c:	mov    r8,rsi
   14001b70f:	mov    edx,r14d
   14001b712:	mov    QWORD PTR [rsp+0x20],rax
   14001b717:	call   0x140007bd0
   14001b71c:	lea    r9d,[r14+0x1d]
   14001b720:	lea    rcx,[rbp-0x10]
   14001b724:	or     ebx,eax
   14001b726:	lea    rax,[rdi+0x2a0]
   14001b72d:	mov    r8,rsi
   14001b730:	mov    edx,r14d
   14001b733:	mov    QWORD PTR [rsp+0x20],rax
   14001b738:	call   0x140007bd0
   14001b73d:	lea    r9d,[r14+0x1e]
   14001b741:	lea    rcx,[rbp-0x10]
   14001b745:	or     ebx,eax
   14001b747:	lea    rax,[rdi+0x2a8]
   14001b74e:	mov    r8,rsi
   14001b751:	mov    edx,r14d
   14001b754:	mov    QWORD PTR [rsp+0x20],rax
   14001b759:	call   0x140007bd0
   14001b75e:	lea    rcx,[rbp-0x10]
   14001b762:	mov    r9d,0x1003
   14001b768:	or     ebx,eax
   14001b76a:	lea    rax,[rdi+0x2b0]
   14001b771:	mov    r8,rsi
   14001b774:	mov    edx,r14d
   14001b777:	mov    QWORD PTR [rsp+0x20],rax
   14001b77c:	call   0x140007bd0
   14001b781:	or     eax,ebx
   14001b783:	mov    rbx,QWORD PTR [rsp+0x50]
   14001b788:	mov    rsi,QWORD PTR [rsp+0x58]
   14001b78d:	mov    rdi,QWORD PTR [rsp+0x60]
   14001b792:	mov    r14,QWORD PTR [rsp+0x68]
   14001b797:	add    rsp,0x40
   14001b79b:	pop    rbp
   14001b79c:	ret    
   14001b79d:	int3   
   14001b79e:	int3   
   14001b79f:	int3   
   14001b7a0:	sub    rsp,0x28
   14001b7a4:	call   0x14000b18c
   14001b7a9:	mov    rcx,QWORD PTR [rip+0x1b5d0]        # 0x140036d80
   14001b7b0:	cmp    QWORD PTR [rax+0xc0],rcx
   14001b7b7:	je     0x14001b7cc
   14001b7b9:	mov    eax,DWORD PTR [rax+0xc8]
   14001b7bf:	test   DWORD PTR [rip+0x1b733],eax        # 0x140036ef8
   14001b7c5:	jne    0x14001b7cc
   14001b7c7:	call   0x14000fff4
   14001b7cc:	mov    rax,QWORD PTR [rip+0x1bd6d]        # 0x140037540
   14001b7d3:	add    rsp,0x28
   14001b7d7:	ret    
   14001b7d8:	sub    rsp,0x28
   14001b7dc:	call   0x14000b18c
   14001b7e1:	mov    rcx,QWORD PTR [rax+0xc0]
   14001b7e8:	cmp    rcx,QWORD PTR [rip+0x1b591]        # 0x140036d80
   14001b7ef:	je     0x14001b807
   14001b7f1:	mov    eax,DWORD PTR [rax+0xc8]
   14001b7f7:	test   DWORD PTR [rip+0x1b6fb],eax        # 0x140036ef8
   14001b7fd:	jne    0x14001b807
   14001b7ff:	call   0x14000fff4
   14001b804:	mov    rcx,rax
   14001b807:	mov    rax,QWORD PTR [rcx+0x108]
   14001b80e:	add    rsp,0x28
   14001b812:	ret    
   14001b813:	int3   
   14001b814:	mov    rax,QWORD PTR [rip+0x1bd35]        # 0x140037550
   14001b81b:	ret    
   14001b81c:	mov    QWORD PTR [rsp+0x8],rbx
   14001b821:	mov    QWORD PTR [rsp+0x10],rsi
   14001b826:	push   rdi
   14001b827:	sub    rsp,0x30
   14001b82b:	xor    edi,edi
   14001b82d:	lea    ecx,[rdi+0x1]
   14001b830:	call   0x140008760
   14001b835:	nop
   14001b836:	lea    ebx,[rdi+0x3]
   14001b839:	mov    DWORD PTR [rsp+0x20],ebx
   14001b83d:	cmp    ebx,DWORD PTR [rip+0x1d7f5]        # 0x140039038
   14001b843:	jge    0x14001b8a8
   14001b845:	movsxd rsi,ebx
   14001b848:	mov    rax,QWORD PTR [rip+0x1d7e1]        # 0x140039030
   14001b84f:	mov    rcx,QWORD PTR [rax+rsi*8]
   14001b853:	test   rcx,rcx
   14001b856:	je     0x14001b8a4
   14001b858:	test   BYTE PTR [rcx+0x18],0x83
   14001b85c:	je     0x14001b86e
   14001b85e:	call   0x140020e68
   14001b863:	cmp    eax,0xffffffff
   14001b866:	je     0x14001b86e
   14001b868:	inc    edi
   14001b86a:	mov    DWORD PTR [rsp+0x24],edi
   14001b86e:	cmp    ebx,0x14
   14001b871:	jl     0x14001b8a4
   14001b873:	mov    rax,QWORD PTR [rip+0x1d7b6]        # 0x140039030
   14001b87a:	mov    rcx,QWORD PTR [rax+rsi*8]
   14001b87e:	add    rcx,0x30
   14001b882:	call   QWORD PTR [rip+0xb890]        # 0x140027118
   14001b888:	mov    rcx,QWORD PTR [rip+0x1d7a1]        # 0x140039030
   14001b88f:	mov    rcx,QWORD PTR [rcx+rsi*8]
   14001b893:	call   0x140006444
   14001b898:	mov    rax,QWORD PTR [rip+0x1d791]        # 0x140039030
   14001b89f:	and    QWORD PTR [rax+rsi*8],0x0
   14001b8a4:	inc    ebx
   14001b8a6:	jmp    0x14001b839
   14001b8a8:	mov    ecx,0x1
   14001b8ad:	call   0x14000897c
   14001b8b2:	mov    eax,edi
   14001b8b4:	mov    rbx,QWORD PTR [rsp+0x40]
   14001b8b9:	mov    rsi,QWORD PTR [rsp+0x48]
   14001b8be:	add    rsp,0x30
   14001b8c2:	pop    rdi
   14001b8c3:	ret    
   14001b8c4:	mov    QWORD PTR [rsp+0x18],rbx
   14001b8c9:	mov    DWORD PTR [rsp+0x8],ecx
   14001b8cd:	push   rsi
   14001b8ce:	push   rdi
   14001b8cf:	push   r14
   14001b8d1:	sub    rsp,0x20
   14001b8d5:	movsxd rdi,ecx
   14001b8d8:	cmp    edi,0xfffffffe
   14001b8db:	jne    0x14001b8ed
   14001b8dd:	call   0x1400095b8
   14001b8e2:	mov    DWORD PTR [rax],0x9
   14001b8e8:	jmp    0x14001b98a
   14001b8ed:	test   ecx,ecx
   14001b8ef:	js     0x14001b97a
   14001b8f5:	cmp    edi,DWORD PTR [rip+0x1e749]        # 0x14003a044
   14001b8fb:	jae    0x14001b97a
   14001b8fd:	mov    rax,rdi
   14001b900:	mov    rbx,rdi
   14001b903:	sar    rbx,0x5
   14001b907:	lea    r14,[rip+0x1cd82]        # 0x140038690
   14001b90e:	and    eax,0x1f
   14001b911:	imul   rsi,rax,0x58
   14001b915:	mov    rax,QWORD PTR [r14+rbx*8]
   14001b919:	movsx  ecx,BYTE PTR [rax+rsi*1+0x8]
   14001b91e:	and    ecx,0x1
   14001b921:	je     0x14001b97a
   14001b923:	mov    ecx,edi
   14001b925:	call   0x140020ed0
   14001b92a:	nop
   14001b92b:	mov    rax,QWORD PTR [r14+rbx*8]
   14001b92f:	test   BYTE PTR [rax+rsi*1+0x8],0x1
   14001b934:	je     0x14001b961
   14001b936:	mov    ecx,edi
   14001b938:	call   0x14002120c
   14001b93d:	mov    rcx,rax
   14001b940:	call   QWORD PTR [rip+0xb96a]        # 0x1400272b0
   14001b946:	test   eax,eax
   14001b948:	jne    0x14001b954
   14001b94a:	call   QWORD PTR [rip+0xb730]        # 0x140027080
   14001b950:	mov    ebx,eax
   14001b952:	jmp    0x14001b956
   14001b954:	xor    ebx,ebx
   14001b956:	test   ebx,ebx
   14001b958:	je     0x14001b96f
   14001b95a:	call   0x140009548
   14001b95f:	mov    DWORD PTR [rax],ebx
   14001b961:	call   0x1400095b8
   14001b966:	mov    DWORD PTR [rax],0x9
   14001b96c:	or     ebx,0xffffffff
   14001b96f:	mov    ecx,edi
   14001b971:	call   0x14002142c
   14001b976:	mov    eax,ebx
   14001b978:	jmp    0x14001b98d
   14001b97a:	call   0x1400095b8
   14001b97f:	mov    DWORD PTR [rax],0x9
   14001b985:	call   0x140008628
   14001b98a:	or     eax,0xffffffff
   14001b98d:	mov    rbx,QWORD PTR [rsp+0x50]
   14001b992:	add    rsp,0x20
   14001b996:	pop    r14
   14001b998:	pop    rdi
   14001b999:	pop    rsi
   14001b99a:	ret    
   14001b99b:	int3   
   14001b99c:	mov    QWORD PTR [rsp+0x10],rbx
   14001b9a1:	mov    DWORD PTR [rsp+0x8],ecx
   14001b9a5:	push   rsi
   14001b9a6:	push   rdi
   14001b9a7:	push   r12
   14001b9a9:	push   r14
   14001b9ab:	push   r15
   14001b9ad:	sub    rsp,0x20
   14001b9b1:	mov    esi,r8d
   14001b9b4:	mov    r14,rdx
   14001b9b7:	movsxd rbx,ecx
   14001b9ba:	cmp    ebx,0xfffffffe
   14001b9bd:	jne    0x14001b9d7
   14001b9bf:	call   0x140009548
   14001b9c4:	and    DWORD PTR [rax],0x0
   14001b9c7:	call   0x1400095b8
   14001b9cc:	mov    DWORD PTR [rax],0x9
   14001b9d2:	jmp    0x14001ba68
   14001b9d7:	test   ecx,ecx
   14001b9d9:	js     0x14001ba50
   14001b9db:	cmp    ebx,DWORD PTR [rip+0x1e663]        # 0x14003a044
   14001b9e1:	jae    0x14001ba50
   14001b9e3:	mov    rax,rbx
   14001b9e6:	mov    rdi,rbx
   14001b9e9:	sar    rdi,0x5
   14001b9ed:	lea    r12,[rip+0x1cc9c]        # 0x140038690
   14001b9f4:	and    eax,0x1f
   14001b9f7:	imul   r15,rax,0x58
   14001b9fb:	mov    rax,QWORD PTR [r12+rdi*8]
   14001b9ff:	movsx  ecx,BYTE PTR [rax+r15*1+0x8]
   14001ba05:	and    ecx,0x1
   14001ba08:	je     0x14001ba50
   14001ba0a:	mov    ecx,ebx
   14001ba0c:	call   0x140020ed0
   14001ba11:	nop
   14001ba12:	mov    rax,QWORD PTR [r12+rdi*8]
   14001ba16:	test   BYTE PTR [rax+r15*1+0x8],0x1
   14001ba1c:	je     0x14001ba2f
   14001ba1e:	mov    r8d,esi
   14001ba21:	mov    rdx,r14
   14001ba24:	mov    ecx,ebx
   14001ba26:	call   0x14001ba80
   14001ba2b:	mov    edi,eax
   14001ba2d:	jmp    0x14001ba45
   14001ba2f:	call   0x1400095b8
   14001ba34:	mov    DWORD PTR [rax],0x9
   14001ba3a:	call   0x140009548
   14001ba3f:	and    DWORD PTR [rax],0x0
   14001ba42:	or     edi,0xffffffff
   14001ba45:	mov    ecx,ebx
   14001ba47:	call   0x14002142c
   14001ba4c:	mov    eax,edi
   14001ba4e:	jmp    0x14001ba6b
   14001ba50:	call   0x140009548
   14001ba55:	and    DWORD PTR [rax],0x0
   14001ba58:	call   0x1400095b8
   14001ba5d:	mov    DWORD PTR [rax],0x9
   14001ba63:	call   0x140008628
   14001ba68:	or     eax,0xffffffff
   14001ba6b:	mov    rbx,QWORD PTR [rsp+0x58]
   14001ba70:	add    rsp,0x20
   14001ba74:	pop    r15
   14001ba76:	pop    r14
   14001ba78:	pop    r12
   14001ba7a:	pop    rdi
   14001ba7b:	pop    rsi
   14001ba7c:	ret    
   14001ba7d:	int3   
   14001ba7e:	int3   
   14001ba7f:	int3   
   14001ba80:	mov    QWORD PTR [rsp+0x20],rbx
   14001ba85:	push   rbp
   14001ba86:	push   rsi
   14001ba87:	push   rdi
   14001ba88:	push   r12
   14001ba8a:	push   r13
   14001ba8c:	push   r14
   14001ba8e:	push   r15
   14001ba90:	lea    rbp,[rsp-0x1a40]
   14001ba98:	mov    eax,0x1b40
   14001ba9d:	call   0x140019d60
   14001baa2:	sub    rsp,rax
   14001baa5:	mov    rax,QWORD PTR [rip+0x1af94]        # 0x140036a40
   14001baac:	xor    rax,rsp
   14001baaf:	mov    QWORD PTR [rbp+0x1a30],rax
   14001bab6:	xor    r12d,r12d
   14001bab9:	mov    r15d,r8d
   14001babc:	mov    r14,rdx
   14001babf:	movsxd rdi,ecx
   14001bac2:	mov    DWORD PTR [rsp+0x40],r12d
   14001bac7:	mov    ebx,r12d
   14001baca:	mov    esi,r12d
   14001bacd:	test   r8d,r8d
   14001bad0:	jne    0x14001bad9
   14001bad2:	xor    eax,eax
   14001bad4:	jmp    0x14001c247
   14001bad9:	test   rdx,rdx
   14001badc:	jne    0x14001bafe
   14001bade:	call   0x140009548
   14001bae3:	mov    DWORD PTR [rax],r12d
   14001bae6:	call   0x1400095b8
   14001baeb:	mov    DWORD PTR [rax],0x16
   14001baf1:	call   0x140008628
   14001baf6:	or     eax,0xffffffff
   14001baf9:	jmp    0x14001c247
   14001bafe:	mov    rax,rdi
   14001bb01:	mov    rcx,rdi
   14001bb04:	lea    rdx,[rip+0x1cb85]        # 0x140038690
   14001bb0b:	sar    rcx,0x5
   14001bb0f:	and    eax,0x1f
   14001bb12:	mov    QWORD PTR [rsp+0x48],rcx
   14001bb17:	mov    rcx,QWORD PTR [rdx+rcx*8]
   14001bb1b:	imul   r13,rax,0x58
   14001bb1f:	mov    r12b,BYTE PTR [r13+rcx*1+0x38]
   14001bb24:	mov    QWORD PTR [rsp+0x58],r13
   14001bb29:	add    r12b,r12b
   14001bb2c:	sar    r12b,1
   14001bb2f:	lea    eax,[r12-0x1]
   14001bb34:	cmp    al,0x1
   14001bb36:	ja     0x14001bb4c
   14001bb38:	mov    eax,r15d
   14001bb3b:	not    eax
   14001bb3d:	test   al,0x1
   14001bb3f:	jne    0x14001bb4c
   14001bb41:	call   0x140009548
   14001bb46:	xor    ecx,ecx
   14001bb48:	mov    DWORD PTR [rax],ecx
   14001bb4a:	jmp    0x14001bae6
   14001bb4c:	test   BYTE PTR [r13+rcx*1+0x8],0x20
   14001bb52:	je     0x14001bb61
   14001bb54:	xor    edx,edx
   14001bb56:	mov    ecx,edi
   14001bb58:	lea    r8d,[rdx+0x2]
   14001bb5c:	call   0x140021540
   14001bb61:	mov    ecx,edi
   14001bb63:	call   0x140010868
   14001bb68:	mov    rdi,QWORD PTR [rsp+0x48]
   14001bb6d:	test   eax,eax
   14001bb6f:	je     0x14001beb5
   14001bb75:	lea    rax,[rip+0x1cb14]        # 0x140038690
   14001bb7c:	mov    rax,QWORD PTR [rax+rdi*8]
   14001bb80:	test   BYTE PTR [r13+rax*1+0x8],0x80
   14001bb86:	je     0x14001beb5
   14001bb8c:	call   0x14000b18c
   14001bb91:	lea    rdx,[rsp+0x64]
   14001bb96:	mov    rcx,QWORD PTR [rax+0xc0]
   14001bb9d:	xor    eax,eax
   14001bb9f:	cmp    QWORD PTR [rcx+0x138],rax
   14001bba6:	mov    edi,eax
   14001bba8:	mov    rax,QWORD PTR [rsp+0x48]
   14001bbad:	lea    rcx,[rip+0x1cadc]        # 0x140038690
   14001bbb4:	sete   dil
   14001bbb8:	mov    rcx,QWORD PTR [rcx+rax*8]
   14001bbbc:	mov    rcx,QWORD PTR [r13+rcx*1+0x0]
   14001bbc1:	call   QWORD PTR [rip+0xb6f9]        # 0x1400272c0
   14001bbc7:	xor    ecx,ecx
   14001bbc9:	test   eax,eax
   14001bbcb:	je     0x14001beb0
   14001bbd1:	xor    eax,eax
   14001bbd3:	test   edi,edi
   14001bbd5:	je     0x14001bbe0
   14001bbd7:	test   r12b,r12b
   14001bbda:	je     0x14001bea9
   14001bbe0:	call   QWORD PTR [rip+0xb6d2]        # 0x1400272b8
   14001bbe6:	mov    rdi,r14
   14001bbe9:	mov    DWORD PTR [rsp+0x68],eax
   14001bbed:	xor    eax,eax
   14001bbef:	movzx  ecx,ax
   14001bbf2:	mov    WORD PTR [rsp+0x44],ax
   14001bbf7:	mov    DWORD PTR [rsp+0x60],eax
   14001bbfb:	test   r15d,r15d
   14001bbfe:	je     0x14001c20a
   14001bc04:	mov    r13d,eax
   14001bc07:	test   r12b,r12b
   14001bc0a:	jne    0x14001bdb3
   14001bc10:	mov    cl,BYTE PTR [rdi]
   14001bc12:	mov    r13,QWORD PTR [rsp+0x58]
   14001bc17:	lea    rdx,[rip+0x1ca72]        # 0x140038690
   14001bc1e:	cmp    cl,0xa
   14001bc21:	sete   al
   14001bc24:	xor    r8d,r8d
   14001bc27:	mov    DWORD PTR [rsp+0x64],eax
   14001bc2b:	mov    rax,QWORD PTR [rsp+0x48]
   14001bc30:	mov    rdx,QWORD PTR [rdx+rax*8]
   14001bc34:	cmp    DWORD PTR [r13+rdx*1+0x50],r8d
   14001bc39:	je     0x14001bc5a
   14001bc3b:	mov    al,BYTE PTR [r13+rdx*1+0x4c]
   14001bc40:	mov    BYTE PTR [rsp+0x6d],cl
   14001bc44:	mov    BYTE PTR [rsp+0x6c],al
   14001bc48:	mov    DWORD PTR [r13+rdx*1+0x50],r8d
   14001bc4d:	mov    r8d,0x2
   14001bc53:	lea    rdx,[rsp+0x6c]
   14001bc58:	jmp    0x14001bca3
   14001bc5a:	movsx  ecx,cl
   14001bc5d:	call   0x14001dc80
   14001bc62:	test   eax,eax
   14001bc64:	je     0x14001bc9a
   14001bc66:	mov    rax,r15
   14001bc69:	sub    rax,rdi
   14001bc6c:	add    rax,r14
   14001bc6f:	cmp    rax,0x1
   14001bc73:	jle    0x14001be2c
   14001bc79:	lea    rcx,[rsp+0x44]
   14001bc7e:	mov    r8d,0x2
   14001bc84:	mov    rdx,rdi
   14001bc87:	call   0x140021728
   14001bc8c:	cmp    eax,0xffffffff
   14001bc8f:	je     0x14001be6e
   14001bc95:	inc    rdi
   14001bc98:	jmp    0x14001bcb6
   14001bc9a:	mov    r8d,0x1
   14001bca0:	mov    rdx,rdi
   14001bca3:	lea    rcx,[rsp+0x44]
   14001bca8:	call   0x140021728
   14001bcad:	cmp    eax,0xffffffff
   14001bcb0:	je     0x14001be6e
   14001bcb6:	mov    ecx,DWORD PTR [rsp+0x68]
   14001bcba:	xor    eax,eax
   14001bcbc:	lea    r8,[rsp+0x44]
   14001bcc1:	mov    QWORD PTR [rsp+0x38],rax
   14001bcc6:	mov    QWORD PTR [rsp+0x30],rax
   14001bccb:	lea    rax,[rsp+0x6c]
   14001bcd0:	mov    r9d,0x1
   14001bcd6:	xor    edx,edx
   14001bcd8:	mov    DWORD PTR [rsp+0x28],0x5
   14001bce0:	mov    QWORD PTR [rsp+0x20],rax
   14001bce5:	inc    rdi
   14001bce8:	call   QWORD PTR [rip+0xb3c2]        # 0x1400270b0
   14001bcee:	mov    r13d,eax
   14001bcf1:	test   eax,eax
   14001bcf3:	je     0x14001be69
   14001bcf9:	mov    rax,QWORD PTR [rsp+0x48]
   14001bcfe:	lea    rcx,[rip+0x1c98b]        # 0x140038690
   14001bd05:	lea    r9,[rsp+0x60]
   14001bd0a:	mov    rcx,QWORD PTR [rcx+rax*8]
   14001bd0e:	xor    eax,eax
   14001bd10:	lea    rdx,[rsp+0x6c]
   14001bd15:	mov    QWORD PTR [rsp+0x20],rax
   14001bd1a:	mov    rax,QWORD PTR [rsp+0x58]
   14001bd1f:	mov    r8d,r13d
   14001bd22:	mov    rcx,QWORD PTR [rax+rcx*1]
   14001bd26:	call   QWORD PTR [rip+0xb494]        # 0x1400271c0
   14001bd2c:	test   eax,eax
   14001bd2e:	je     0x14001be61
   14001bd34:	mov    eax,DWORD PTR [rsp+0x40]
   14001bd38:	mov    ebx,edi
   14001bd3a:	sub    ebx,r14d
   14001bd3d:	add    ebx,eax
   14001bd3f:	cmp    DWORD PTR [rsp+0x60],r13d
   14001bd44:	jl     0x14001c1ef
   14001bd4a:	xor    r13d,r13d
   14001bd4d:	cmp    DWORD PTR [rsp+0x64],r13d
   14001bd52:	je     0x14001bdac
   14001bd54:	mov    rax,QWORD PTR [rsp+0x48]
   14001bd59:	lea    r8d,[r13+0x1]
   14001bd5d:	mov    BYTE PTR [rsp+0x6c],0xd
   14001bd62:	lea    rcx,[rip+0x1c927]        # 0x140038690
   14001bd69:	mov    QWORD PTR [rsp+0x20],r13
   14001bd6e:	mov    r13,QWORD PTR [rsp+0x58]
   14001bd73:	mov    rcx,QWORD PTR [rcx+rax*8]
   14001bd77:	lea    r9,[rsp+0x60]
   14001bd7c:	lea    rdx,[rsp+0x6c]
   14001bd81:	mov    rcx,QWORD PTR [r13+rcx*1+0x0]
   14001bd86:	call   QWORD PTR [rip+0xb434]        # 0x1400271c0
   14001bd8c:	test   eax,eax
   14001bd8e:	je     0x14001be57
   14001bd94:	cmp    DWORD PTR [rsp+0x60],0x1
   14001bd99:	jl     0x14001be6e
   14001bd9f:	inc    DWORD PTR [rsp+0x40]
   14001bda3:	movzx  ecx,WORD PTR [rsp+0x44]
   14001bda8:	inc    ebx
   14001bdaa:	jmp    0x14001be1b
   14001bdac:	movzx  ecx,WORD PTR [rsp+0x44]
   14001bdb1:	jmp    0x14001be16
   14001bdb3:	lea    eax,[r12-0x1]
   14001bdb8:	cmp    al,0x1
   14001bdba:	ja     0x14001bdd5
   14001bdbc:	movzx  ecx,WORD PTR [rdi]
   14001bdbf:	xor    eax,eax
   14001bdc1:	cmp    cx,0xa
   14001bdc5:	mov    r13d,eax
   14001bdc8:	mov    WORD PTR [rsp+0x44],cx
   14001bdcd:	sete   r13b
   14001bdd1:	add    rdi,0x2
   14001bdd5:	lea    eax,[r12-0x1]
   14001bdda:	cmp    al,0x1
   14001bddc:	ja     0x14001be16
   14001bdde:	call   0x140021764
   14001bde3:	movzx  ecx,WORD PTR [rsp+0x44]
   14001bde8:	cmp    ax,cx
   14001bdeb:	jne    0x14001be61
   14001bded:	add    ebx,0x2
   14001bdf0:	test   r13d,r13d
   14001bdf3:	je     0x14001be16
   14001bdf5:	mov    eax,0xd
   14001bdfa:	mov    ecx,eax
   14001bdfc:	mov    WORD PTR [rsp+0x44],ax
   14001be01:	call   0x140021764
   14001be06:	movzx  ecx,WORD PTR [rsp+0x44]
   14001be0b:	cmp    ax,cx
   14001be0e:	jne    0x14001be61
   14001be10:	inc    ebx
   14001be12:	inc    DWORD PTR [rsp+0x40]
   14001be16:	mov    r13,QWORD PTR [rsp+0x58]
   14001be1b:	mov    eax,edi
   14001be1d:	sub    eax,r14d
   14001be20:	cmp    eax,r15d
   14001be23:	jae    0x14001be6e
   14001be25:	xor    eax,eax
   14001be27:	jmp    0x14001bc04
   14001be2c:	mov    al,BYTE PTR [rdi]
   14001be2e:	mov    r15,QWORD PTR [rsp+0x48]
   14001be33:	lea    r12,[rip+0x1c856]        # 0x140038690
   14001be3a:	mov    rcx,QWORD PTR [r12+r15*8]
   14001be3e:	inc    ebx
   14001be40:	mov    rdi,r15
   14001be43:	mov    BYTE PTR [r13+rcx*1+0x4c],al
   14001be48:	mov    rax,QWORD PTR [r12+r15*8]
   14001be4c:	mov    DWORD PTR [r13+rax*1+0x50],0x1
   14001be55:	jmp    0x14001be73
   14001be57:	call   QWORD PTR [rip+0xb223]        # 0x140027080
   14001be5d:	mov    esi,eax
   14001be5f:	jmp    0x14001be6e
   14001be61:	call   QWORD PTR [rip+0xb219]        # 0x140027080
   14001be67:	mov    esi,eax
   14001be69:	mov    r13,QWORD PTR [rsp+0x58]
   14001be6e:	mov    rdi,QWORD PTR [rsp+0x48]
   14001be73:	mov    eax,DWORD PTR [rsp+0x40]
   14001be77:	test   ebx,ebx
   14001be79:	jne    0x14001c243
   14001be7f:	xor    ebx,ebx
   14001be81:	test   esi,esi
   14001be83:	je     0x14001c20f
   14001be89:	cmp    esi,0x5
   14001be8c:	jne    0x14001c1fe
   14001be92:	call   0x1400095b8
   14001be97:	mov    DWORD PTR [rax],0x9
   14001be9d:	call   0x140009548
   14001bea2:	mov    DWORD PTR [rax],esi
   14001bea4:	jmp    0x14001baf6
   14001bea9:	mov    rdi,QWORD PTR [rsp+0x48]
   14001beae:	jmp    0x14001beb7
   14001beb0:	mov    rdi,QWORD PTR [rsp+0x48]
   14001beb5:	xor    eax,eax
   14001beb7:	lea    r9,[rip+0x1c7d2]        # 0x140038690
   14001bebe:	mov    rcx,QWORD PTR [r9+rdi*8]
   14001bec2:	test   BYTE PTR [r13+rcx*1+0x8],0x80
   14001bec8:	je     0x14001c1b6
   14001bece:	mov    esi,eax
   14001bed0:	test   r12b,r12b
   14001bed3:	jne    0x14001bfb1
   14001bed9:	mov    r12,r14
   14001bedc:	test   r15d,r15d
   14001bedf:	je     0x14001c20f
   14001bee5:	mov    edx,0xd
   14001beea:	jmp    0x14001beee
   14001beec:	xor    eax,eax
   14001beee:	mov    r13d,DWORD PTR [rsp+0x40]
   14001bef3:	lea    rdi,[rbp+0x630]
   14001befa:	mov    rcx,rax
   14001befd:	mov    eax,r12d
   14001bf00:	sub    eax,r14d
   14001bf03:	cmp    eax,r15d
   14001bf06:	jae    0x14001bf2f
   14001bf08:	mov    al,BYTE PTR [r12]
   14001bf0c:	inc    r12
   14001bf0f:	cmp    al,0xa
   14001bf11:	jne    0x14001bf1e
   14001bf13:	mov    BYTE PTR [rdi],dl
   14001bf15:	inc    r13d
   14001bf18:	inc    rdi
   14001bf1b:	inc    rcx
   14001bf1e:	inc    rcx
   14001bf21:	mov    BYTE PTR [rdi],al
   14001bf23:	inc    rdi
   14001bf26:	cmp    rcx,0x13ff
   14001bf2d:	jb     0x14001befd
   14001bf2f:	lea    rax,[rbp+0x630]
   14001bf36:	mov    r8d,edi
   14001bf39:	mov    DWORD PTR [rsp+0x40],r13d
   14001bf3e:	mov    r13,QWORD PTR [rsp+0x58]
   14001bf43:	sub    r8d,eax
   14001bf46:	mov    rax,QWORD PTR [rsp+0x48]
   14001bf4b:	mov    rcx,QWORD PTR [r9+rax*8]
   14001bf4f:	xor    eax,eax
   14001bf51:	lea    r9,[rsp+0x50]
   14001bf56:	mov    rcx,QWORD PTR [r13+rcx*1+0x0]
   14001bf5b:	lea    rdx,[rbp+0x630]
   14001bf62:	mov    QWORD PTR [rsp+0x20],rax
   14001bf67:	call   QWORD PTR [rip+0xb253]        # 0x1400271c0
   14001bf6d:	test   eax,eax
   14001bf6f:	je     0x14001be57
   14001bf75:	add    ebx,DWORD PTR [rsp+0x50]
   14001bf79:	lea    rax,[rbp+0x630]
   14001bf80:	sub    rdi,rax
   14001bf83:	movsxd rax,DWORD PTR [rsp+0x50]
   14001bf88:	cmp    rax,rdi
   14001bf8b:	jl     0x14001be6e
   14001bf91:	mov    eax,r12d
   14001bf94:	mov    edx,0xd
   14001bf99:	lea    r9,[rip+0x1c6f0]        # 0x140038690
   14001bfa0:	sub    eax,r14d
   14001bfa3:	cmp    eax,r15d
   14001bfa6:	jb     0x14001beec
   14001bfac:	jmp    0x14001be6e
   14001bfb1:	cmp    r12b,0x2
   14001bfb5:	mov    r12,r14
   14001bfb8:	jne    0x14001c09e
   14001bfbe:	test   r15d,r15d
   14001bfc1:	je     0x14001c20f
   14001bfc7:	mov    edx,0xd
   14001bfcc:	jmp    0x14001bfd0
   14001bfce:	xor    eax,eax
   14001bfd0:	mov    r13d,DWORD PTR [rsp+0x40]
   14001bfd5:	lea    rdi,[rbp+0x630]
   14001bfdc:	mov    rcx,rax
   14001bfdf:	mov    eax,r12d
   14001bfe2:	sub    eax,r14d
   14001bfe5:	cmp    eax,r15d
   14001bfe8:	jae    0x14001c01c
   14001bfea:	movzx  eax,WORD PTR [r12]
   14001bfef:	add    r12,0x2
   14001bff3:	cmp    ax,0xa
   14001bff7:	jne    0x14001c008
   14001bff9:	mov    WORD PTR [rdi],dx
   14001bffc:	add    r13d,0x2
   14001c000:	add    rdi,0x2
   14001c004:	add    rcx,0x2
   14001c008:	add    rcx,0x2
   14001c00c:	mov    WORD PTR [rdi],ax
   14001c00f:	add    rdi,0x2
   14001c013:	cmp    rcx,0x13fe
   14001c01a:	jb     0x14001bfdf
   14001c01c:	lea    rax,[rbp+0x630]
   14001c023:	mov    r8d,edi
   14001c026:	mov    DWORD PTR [rsp+0x40],r13d
   14001c02b:	mov    r13,QWORD PTR [rsp+0x58]
   14001c030:	sub    r8d,eax
   14001c033:	mov    rax,QWORD PTR [rsp+0x48]
   14001c038:	mov    rcx,QWORD PTR [r9+rax*8]
   14001c03c:	xor    eax,eax
   14001c03e:	lea    r9,[rsp+0x50]
   14001c043:	mov    rcx,QWORD PTR [r13+rcx*1+0x0]
   14001c048:	lea    rdx,[rbp+0x630]
   14001c04f:	mov    QWORD PTR [rsp+0x20],rax
   14001c054:	call   QWORD PTR [rip+0xb166]        # 0x1400271c0
   14001c05a:	test   eax,eax
   14001c05c:	je     0x14001be57
   14001c062:	add    ebx,DWORD PTR [rsp+0x50]
   14001c066:	lea    rax,[rbp+0x630]
   14001c06d:	sub    rdi,rax
   14001c070:	movsxd rax,DWORD PTR [rsp+0x50]
   14001c075:	cmp    rax,rdi
   14001c078:	jl     0x14001be6e
   14001c07e:	mov    eax,r12d
   14001c081:	mov    edx,0xd
   14001c086:	lea    r9,[rip+0x1c603]        # 0x140038690
   14001c08d:	sub    eax,r14d
   14001c090:	cmp    eax,r15d
   14001c093:	jb     0x14001bfce
   14001c099:	jmp    0x14001be6e
   14001c09e:	test   r15d,r15d
   14001c0a1:	je     0x14001c20f
   14001c0a7:	mov    r8d,0xd
   14001c0ad:	jmp    0x14001c0b1
   14001c0af:	xor    eax,eax
   14001c0b1:	lea    rcx,[rbp-0x80]
   14001c0b5:	mov    rdx,rax
   14001c0b8:	mov    eax,r12d
   14001c0bb:	sub    eax,r14d
   14001c0be:	cmp    eax,r15d
   14001c0c1:	jae    0x14001c0f2
   14001c0c3:	movzx  eax,WORD PTR [r12]
   14001c0c8:	add    r12,0x2
   14001c0cc:	cmp    ax,0xa
   14001c0d0:	jne    0x14001c0de
   14001c0d2:	mov    WORD PTR [rcx],r8w
   14001c0d6:	add    rcx,0x2
   14001c0da:	add    rdx,0x2
   14001c0de:	add    rdx,0x2
   14001c0e2:	mov    WORD PTR [rcx],ax
   14001c0e5:	add    rcx,0x2
   14001c0e9:	cmp    rdx,0x6a8
   14001c0f0:	jb     0x14001c0b8
   14001c0f2:	lea    rax,[rbp-0x80]
   14001c0f6:	xor    edi,edi
   14001c0f8:	lea    r8,[rbp-0x80]
   14001c0fc:	sub    ecx,eax
   14001c0fe:	mov    QWORD PTR [rsp+0x38],rdi
   14001c103:	mov    QWORD PTR [rsp+0x30],rdi
   14001c108:	mov    eax,ecx
   14001c10a:	mov    ecx,0xfde9
   14001c10f:	mov    DWORD PTR [rsp+0x28],0xd55
   14001c117:	cdq    
   14001c118:	sub    eax,edx
   14001c11a:	xor    edx,edx
   14001c11c:	sar    eax,1
   14001c11e:	mov    r9d,eax
   14001c121:	lea    rax,[rbp+0x630]
   14001c128:	mov    QWORD PTR [rsp+0x20],rax
   14001c12d:	call   QWORD PTR [rip+0xaf7d]        # 0x1400270b0
   14001c133:	mov    r13d,eax
   14001c136:	test   eax,eax
   14001c138:	je     0x14001be61
   14001c13e:	movsxd rax,edi
   14001c141:	mov    r8d,r13d
   14001c144:	lea    rdx,[rbp+0x630]
   14001c14b:	add    rdx,rax
   14001c14e:	mov    rax,QWORD PTR [rsp+0x48]
   14001c153:	lea    rcx,[rip+0x1c536]        # 0x140038690
   14001c15a:	mov    rcx,QWORD PTR [rcx+rax*8]
   14001c15e:	xor    eax,eax
   14001c160:	lea    r9,[rsp+0x50]
   14001c165:	mov    QWORD PTR [rsp+0x20],rax
   14001c16a:	mov    rax,QWORD PTR [rsp+0x58]
   14001c16f:	sub    r8d,edi
   14001c172:	mov    rcx,QWORD PTR [rax+rcx*1]
   14001c176:	call   QWORD PTR [rip+0xb044]        # 0x1400271c0
   14001c17c:	test   eax,eax
   14001c17e:	je     0x14001c18b
   14001c180:	add    edi,DWORD PTR [rsp+0x50]
   14001c184:	cmp    r13d,edi
   14001c187:	jg     0x14001c13e
   14001c189:	jmp    0x14001c193
   14001c18b:	call   QWORD PTR [rip+0xaeef]        # 0x140027080
   14001c191:	mov    esi,eax
   14001c193:	cmp    r13d,edi
   14001c196:	jg     0x14001be69
   14001c19c:	mov    ebx,r12d
   14001c19f:	mov    r8d,0xd
   14001c1a5:	sub    ebx,r14d
   14001c1a8:	cmp    ebx,r15d
   14001c1ab:	jb     0x14001c0af
   14001c1b1:	jmp    0x14001be69
   14001c1b6:	mov    rcx,QWORD PTR [r13+rcx*1+0x0]
   14001c1bb:	lea    r9,[rsp+0x50]
   14001c1c0:	mov    r8d,r15d
   14001c1c3:	mov    rdx,r14
   14001c1c6:	mov    QWORD PTR [rsp+0x20],rax
   14001c1cb:	call   QWORD PTR [rip+0xafef]        # 0x1400271c0
   14001c1d1:	test   eax,eax
   14001c1d3:	je     0x14001c1e0
   14001c1d5:	mov    ebx,DWORD PTR [rsp+0x50]
   14001c1d9:	mov    eax,esi
   14001c1db:	jmp    0x14001be77
   14001c1e0:	call   QWORD PTR [rip+0xae9a]        # 0x140027080
   14001c1e6:	mov    esi,eax
   14001c1e8:	mov    eax,ebx
   14001c1ea:	jmp    0x14001be77
   14001c1ef:	mov    r13,QWORD PTR [rsp+0x58]
   14001c1f4:	mov    rdi,QWORD PTR [rsp+0x48]
   14001c1f9:	jmp    0x14001be77
   14001c1fe:	mov    ecx,esi
   14001c200:	call   0x140009568
   14001c205:	jmp    0x14001baf6
   14001c20a:	mov    rdi,QWORD PTR [rsp+0x48]
   14001c20f:	lea    rax,[rip+0x1c47a]        # 0x140038690
   14001c216:	mov    rax,QWORD PTR [rax+rdi*8]
   14001c21a:	test   BYTE PTR [r13+rax*1+0x8],0x40
   14001c220:	je     0x14001c22c
   14001c222:	cmp    BYTE PTR [r14],0x1a
   14001c226:	je     0x14001bad2
   14001c22c:	call   0x1400095b8
   14001c231:	mov    DWORD PTR [rax],0x1c
   14001c237:	call   0x140009548
   14001c23c:	mov    DWORD PTR [rax],ebx
   14001c23e:	jmp    0x14001baf6
   14001c243:	sub    ebx,eax
   14001c245:	mov    eax,ebx
   14001c247:	mov    rcx,QWORD PTR [rbp+0x1a30]
   14001c24e:	xor    rcx,rsp
   14001c251:	call   0x14000d0a0
   14001c256:	mov    rbx,QWORD PTR [rsp+0x1b98]
   14001c25e:	add    rsp,0x1b40
   14001c265:	pop    r15
   14001c267:	pop    r14
   14001c269:	pop    r13
   14001c26b:	pop    r12
   14001c26d:	pop    rdi
   14001c26e:	pop    rsi
   14001c26f:	pop    rbp
   14001c270:	ret    
   14001c271:	int3   
   14001c272:	int3   
   14001c273:	int3   
   14001c274:	movsd  QWORD PTR [rsp+0x8],xmm0
   14001c27a:	mov    rcx,QWORD PTR [rsp+0x8]
   14001c27f:	mov    eax,0x7ff
   14001c284:	shr    rcx,0x30
   14001c288:	movsd  QWORD PTR [rsp+0x20],xmm0
   14001c28e:	movsd  QWORD PTR [rsp+0x18],xmm0
   14001c294:	shr    cx,0x4
   14001c298:	and    cx,ax
   14001c29b:	mov    rax,QWORD PTR [rsp+0x20]
   14001c2a0:	add    cx,dx
   14001c2a3:	shr    rax,0x30
   14001c2a7:	mov    edx,0x800f
   14001c2ac:	and    ax,dx
   14001c2af:	shl    cx,0x4
   14001c2b3:	or     cx,ax
   14001c2b6:	mov    WORD PTR [rsp+0x1e],cx
   14001c2bb:	movsd  xmm0,QWORD PTR [rsp+0x18]
   14001c2c1:	ret    
   14001c2c2:	int3   
   14001c2c3:	int3   
   14001c2c4:	movaps xmm1,xmm0
   14001c2c7:	movsd  QWORD PTR [rsp+0x8],xmm0
   14001c2cd:	xorps  xmm0,xmm0
   14001c2d0:	mov    r10,rdx
   14001c2d3:	ucomisd xmm1,xmm0
   14001c2d7:	jp     0x14001c2e2
   14001c2d9:	jne    0x14001c2e2
   14001c2db:	xor    ecx,ecx
   14001c2dd:	jmp    0x14001c3f4
   14001c2e2:	mov    rax,QWORD PTR [rsp+0x8]
   14001c2e7:	mov    ecx,0x7ff0
   14001c2ec:	mov    r8,rax
   14001c2ef:	shr    r8,0x30
   14001c2f3:	test   cx,r8w
   14001c2f7:	jne    0x14001c3aa
   14001c2fd:	mov    edx,DWORD PTR [rsp+0x8]
   14001c301:	shr    rax,0x20
   14001c305:	test   eax,0xfffff
   14001c30a:	jne    0x14001c314
   14001c30c:	test   edx,edx
   14001c30e:	je     0x14001c3aa
   14001c314:	xor    r9d,r9d
   14001c317:	comisd xmm0,xmm1
   14001c31b:	mov    ecx,0xfffffc03
   14001c320:	seta   r9b
   14001c324:	test   r8b,0x10
   14001c328:	jne    0x14001c34e
   14001c32a:	mov    eax,DWORD PTR [rsp+0xc]
   14001c32e:	add    eax,eax
   14001c330:	mov    DWORD PTR [rsp+0xc],eax
   14001c334:	test   edx,edx
   14001c336:	jns    0x14001c33f
   14001c338:	or     eax,0x1
   14001c33b:	mov    DWORD PTR [rsp+0xc],eax
   14001c33f:	add    edx,edx
   14001c341:	dec    ecx
   14001c343:	test   BYTE PTR [rsp+0xe],0x10
   14001c348:	je     0x14001c32e
   14001c34a:	mov    DWORD PTR [rsp+0x8],edx
   14001c34e:	movzx  eax,WORD PTR [rsp+0xe]
   14001c353:	mov    edx,0xffef
   14001c358:	and    ax,dx
   14001c35b:	mov    WORD PTR [rsp+0xe],ax
   14001c360:	test   r9d,r9d
   14001c363:	je     0x14001c372
   14001c365:	mov    edx,0x8000
   14001c36a:	or     ax,dx
   14001c36d:	mov    WORD PTR [rsp+0xe],ax
   14001c372:	movsd  xmm0,QWORD PTR [rsp+0x8]
   14001c378:	mov    edx,0xbfef
   14001c37d:	movsd  QWORD PTR [rsp+0x10],xmm0
   14001c383:	movsd  QWORD PTR [rsp+0x8],xmm0
   14001c389:	mov    rax,QWORD PTR [rsp+0x10]
   14001c38e:	shr    rax,0x30
   14001c392:	and    ax,dx
   14001c395:	mov    edx,0x3fe0
   14001c39a:	or     ax,dx
   14001c39d:	mov    WORD PTR [rsp+0xe],ax
   14001c3a2:	movsd  xmm0,QWORD PTR [rsp+0x8]
   14001c3a8:	jmp    0x14001c3f4
   14001c3aa:	mov    edx,0xbfef
   14001c3af:	movsd  QWORD PTR [rsp+0x10],xmm1
   14001c3b5:	mov    ecx,0x7ff
   14001c3ba:	movsd  QWORD PTR [rsp+0x18],xmm1
   14001c3c0:	mov    rax,QWORD PTR [rsp+0x18]
   14001c3c5:	shr    rax,0x30
   14001c3c9:	and    ax,dx
   14001c3cc:	mov    edx,0x3fe0
   14001c3d1:	or     ax,dx
   14001c3d4:	mov    WORD PTR [rsp+0x16],ax
   14001c3d9:	movzx  eax,WORD PTR [rsp+0xe]
   14001c3de:	shr    ax,0x4
   14001c3e2:	movsd  xmm0,QWORD PTR [rsp+0x10]
   14001c3e8:	and    ax,cx
   14001c3eb:	movsx  ecx,ax
   14001c3ee:	sub    ecx,0x3fe
   14001c3f4:	mov    DWORD PTR [r10],ecx
   14001c3f7:	ret    
   14001c3f8:	mov    ecx,0x7ff
   14001c3fd:	movsd  QWORD PTR [rsp+0x8],xmm0
   14001c403:	mov    rax,QWORD PTR [rsp+0x8]
   14001c408:	shr    rax,0x30
   14001c40c:	shr    ax,0x4
   14001c410:	and    ax,cx
   14001c413:	mov    ecx,0x3fe
   14001c418:	sub    ax,cx
   14001c41b:	cwde   
   14001c41c:	ret    
   14001c41d:	int3   
   14001c41e:	int3   
   14001c41f:	int3   
   14001c420:	movsd  QWORD PTR [rsp+0x8],xmm0
   14001c426:	mov    rax,QWORD PTR [rsp+0x8]
   14001c42b:	movsd  QWORD PTR [rsp+0x18],xmm0
   14001c431:	shr    rax,0x30
   14001c435:	mov    ecx,0x800f
   14001c43a:	shl    dx,0x4
   14001c43e:	and    ax,cx
   14001c441:	or     ax,dx
   14001c444:	mov    WORD PTR [rsp+0x1e],ax
   14001c449:	movsd  xmm0,QWORD PTR [rsp+0x18]
   14001c44f:	ret    
   14001c450:	movsd  QWORD PTR [rsp+0x8],xmm0
   14001c456:	mov    rax,QWORD PTR [rsp+0x8]
   14001c45b:	mov    ecx,0x800f
   14001c460:	shr    rax,0x30
   14001c464:	movsd  QWORD PTR [rsp+0x18],xmm0
   14001c46a:	and    ax,cx
   14001c46d:	mov    ecx,0x3fe
   14001c472:	add    dx,cx
   14001c475:	shl    dx,0x4
   14001c479:	or     ax,dx
   14001c47c:	mov    WORD PTR [rsp+0x1e],ax
   14001c481:	movsd  xmm0,QWORD PTR [rsp+0x18]
   14001c487:	ret    
   14001c488:	movsd  QWORD PTR [rsp+0x8],xmm0
   14001c48e:	mov    rax,QWORD PTR [rsp+0x8]
   14001c493:	mov    rcx,rax
   14001c496:	shr    rcx,0x20
   14001c49a:	cmp    ecx,0x7ff00000
   14001c4a0:	jne    0x14001c4ac
   14001c4a2:	test   eax,eax
   14001c4a4:	jne    0x14001c4ac
   14001c4a6:	mov    eax,0x1
   14001c4ab:	ret    
   14001c4ac:	cmp    ecx,0xfff00000
   14001c4b2:	jne    0x14001c4be
   14001c4b4:	test   eax,eax
   14001c4b6:	jne    0x14001c4be
   14001c4b8:	mov    eax,0x2
   14001c4bd:	ret    
   14001c4be:	mov    r8d,0x7ff8
   14001c4c4:	mov    rdx,rax
   14001c4c7:	shr    rdx,0x30
   14001c4cb:	and    dx,r8w
   14001c4cf:	cmp    dx,r8w
   14001c4d3:	jne    0x14001c4db
   14001c4d5:	mov    eax,0x3
   14001c4da:	ret    
   14001c4db:	mov    r8d,0x7ff0
   14001c4e1:	cmp    dx,r8w
   14001c4e5:	jne    0x14001c4f9
   14001c4e7:	test   ecx,0x7ffff
   14001c4ed:	jne    0x14001c4f3
   14001c4ef:	test   eax,eax
   14001c4f1:	je     0x14001c4f9
   14001c4f3:	mov    eax,0x4
   14001c4f8:	ret    
   14001c4f9:	xor    eax,eax
   14001c4fb:	ret    
   14001c4fc:	xor    edx,edx
   14001c4fe:	lea    r8d,[rdx+0xa]
   14001c502:	jmp    0x140021a30
   14001c507:	int3   
   14001c508:	mov    r9,rdx
   14001c50b:	xor    edx,edx
   14001c50d:	lea    r8d,[rdx+0xa]
   14001c511:	jmp    0x140021a60
   14001c516:	int3   
   14001c517:	int3   
   14001c518:	mov    r9,rdx
   14001c51b:	xor    edx,edx
   14001c51d:	lea    r8d,[rdx+0xa]
   14001c521:	jmp    0x140021e08
   14001c526:	int3   
   14001c527:	int3   
   14001c528:	mov    r9,rdx
   14001c52b:	xor    edx,edx
   14001c52d:	lea    r8d,[rdx+0xa]
   14001c531:	jmp    0x140021e08
   14001c536:	int3   
   14001c537:	int3   
   14001c538:	mov    r9,rdx
   14001c53b:	xor    edx,edx
   14001c53d:	lea    r8d,[rdx+0xa]
   14001c541:	jmp    0x140021a60
   14001c546:	int3   
   14001c547:	int3   
   14001c548:	xor    edx,edx
   14001c54a:	lea    r8d,[rdx+0xa]
   14001c54e:	jmp    0x140021e54
   14001c553:	int3   
   14001c554:	xor    edx,edx
   14001c556:	lea    r8d,[rdx+0xa]
   14001c55a:	jmp    0x140021e54
   14001c55f:	int3   
   14001c560:	xor    edx,edx
   14001c562:	lea    r8d,[rdx+0xa]
   14001c566:	jmp    0x140021a30
   14001c56b:	int3   
   14001c56c:	cmp    DWORD PTR [rip+0x1caad],0x0        # 0x140039020
   14001c573:	jne    0x14001c586
   14001c575:	mov    rax,QWORD PTR [rip+0x1a91c]        # 0x140036e98
   14001c57c:	movsxd rcx,ecx
   14001c57f:	movzx  eax,WORD PTR [rax+rcx*2]
   14001c583:	and    eax,edx
   14001c585:	ret    
   14001c586:	xor    r8d,r8d
   14001c589:	jmp    0x14001c590
   14001c58e:	int3   
   14001c58f:	int3   
   14001c590:	mov    QWORD PTR [rsp+0x10],rsi
   14001c595:	push   rbp
   14001c596:	push   rdi
   14001c597:	push   r14
   14001c599:	mov    rbp,rsp
   14001c59c:	sub    rsp,0x60
   14001c5a0:	movsxd rdi,ecx
   14001c5a3:	mov    r14d,edx
   14001c5a6:	lea    rcx,[rbp-0x20]
   14001c5aa:	mov    rdx,r8
   14001c5ad:	call   0x14000a000
   14001c5b2:	lea    eax,[rdi+0x1]
   14001c5b5:	cmp    eax,0x100
   14001c5ba:	ja     0x14001c5cd
   14001c5bc:	mov    rax,QWORD PTR [rbp-0x20]
   14001c5c0:	mov    rcx,QWORD PTR [rax+0x108]
   14001c5c7:	movzx  eax,WORD PTR [rcx+rdi*2]
   14001c5cb:	jmp    0x14001c646
   14001c5cd:	mov    esi,edi
   14001c5cf:	lea    rdx,[rbp-0x20]
   14001c5d3:	sar    esi,0x8
   14001c5d6:	movzx  ecx,sil
   14001c5da:	call   0x14001db48
   14001c5df:	mov    edx,0x1
   14001c5e4:	test   eax,eax
   14001c5e6:	je     0x14001c5fa
   14001c5e8:	mov    BYTE PTR [rbp+0x38],sil
   14001c5ec:	mov    BYTE PTR [rbp+0x39],dil
   14001c5f0:	mov    BYTE PTR [rbp+0x3a],0x0
   14001c5f4:	lea    r9d,[rdx+0x1]
   14001c5f8:	jmp    0x14001c605
   14001c5fa:	mov    BYTE PTR [rbp+0x38],dil
   14001c5fe:	mov    BYTE PTR [rbp+0x39],0x0
   14001c602:	mov    r9d,edx
   14001c605:	mov    rax,QWORD PTR [rbp-0x20]
   14001c609:	mov    DWORD PTR [rsp+0x30],edx
   14001c60d:	lea    r8,[rbp+0x38]
   14001c611:	mov    ecx,DWORD PTR [rax+0x4]
   14001c614:	lea    rax,[rbp+0x20]
   14001c618:	mov    DWORD PTR [rsp+0x28],ecx
   14001c61c:	lea    rcx,[rbp-0x20]
   14001c620:	mov    QWORD PTR [rsp+0x20],rax
   14001c625:	call   0x1400105e8
   14001c62a:	test   eax,eax
   14001c62c:	jne    0x14001c642
   14001c62e:	cmp    BYTE PTR [rbp-0x8],al
   14001c631:	je     0x14001c63e
   14001c633:	mov    rax,QWORD PTR [rbp-0x10]
   14001c637:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14001c63e:	xor    eax,eax
   14001c640:	jmp    0x14001c65a
   14001c642:	movzx  eax,WORD PTR [rbp+0x20]
   14001c646:	and    eax,r14d
   14001c649:	cmp    BYTE PTR [rbp-0x8],0x0
   14001c64d:	je     0x14001c65a
   14001c64f:	mov    rcx,QWORD PTR [rbp-0x10]
   14001c653:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14001c65a:	mov    rsi,QWORD PTR [rsp+0x88]
   14001c662:	add    rsp,0x60
   14001c666:	pop    r14
   14001c668:	pop    rdi
   14001c669:	pop    rbp
   14001c66a:	ret    
   14001c66b:	int3   
   14001c66c:	xor    eax,eax
   14001c66e:	ret    
   14001c66f:	int3   
   14001c670:	rex push rdi
   14001c672:	sub    rsp,0x20
   14001c676:	lea    rdi,[rip+0x1a713]        # 0x140036d90
   14001c67d:	cmp    QWORD PTR [rip+0x1a6fc],rdi        # 0x140036d80
   14001c684:	je     0x14001c6b1
   14001c686:	mov    ecx,0xc
   14001c68b:	call   0x140008760
   14001c690:	nop
   14001c691:	mov    rdx,rdi
   14001c694:	lea    rcx,[rip+0x1a6e5]        # 0x140036d80
   14001c69b:	call   0x14001006c
   14001c6a0:	mov    QWORD PTR [rip+0x1a6d9],rax        # 0x140036d80
   14001c6a7:	mov    ecx,0xc
   14001c6ac:	call   0x14000897c
   14001c6b1:	add    rsp,0x20
   14001c6b5:	pop    rdi
   14001c6b6:	ret    
   14001c6b7:	int3   
   14001c6b8:	mov    eax,DWORD PTR [rip+0x1c96a]        # 0x140039028
   14001c6be:	ret    
   14001c6bf:	int3   
   14001c6c0:	lea    rax,[rip+0x1c95d]        # 0x140039024
   14001c6c7:	ret    
   14001c6c8:	mov    QWORD PTR [rsp+0x8],rbx
   14001c6cd:	mov    QWORD PTR [rsp+0x10],rsi
   14001c6d2:	push   rdi
   14001c6d3:	sub    rsp,0x30
   14001c6d7:	mov    rdi,rcx
   14001c6da:	test   rcx,rcx
   14001c6dd:	jne    0x14001c6f1
   14001c6df:	xor    eax,eax
   14001c6e1:	mov    rbx,QWORD PTR [rsp+0x40]
   14001c6e6:	mov    rsi,QWORD PTR [rsp+0x48]
   14001c6eb:	add    rsp,0x30
   14001c6ef:	pop    rdi
   14001c6f0:	ret    
   14001c6f1:	mov    edx,0x55
   14001c6f6:	call   0x140019db0
   14001c6fb:	mov    rsi,rax
   14001c6fe:	cmp    rax,0x55
   14001c702:	jae    0x14001c6df
   14001c704:	lea    rcx,[rax*2+0x2]
   14001c70c:	call   0x140007f54
   14001c711:	mov    rbx,rax
   14001c714:	test   rax,rax
   14001c717:	je     0x14001c6df
   14001c719:	lea    rdx,[rsi+0x1]
   14001c71d:	mov    r8,rdi
   14001c720:	mov    rcx,rax
   14001c723:	mov    r9,rdx
   14001c726:	call   0x14000f9bc
   14001c72b:	test   eax,eax
   14001c72d:	jne    0x14001c734
   14001c72f:	mov    rax,rbx
   14001c732:	jmp    0x14001c6e1
   14001c734:	and    QWORD PTR [rsp+0x20],0x0
   14001c73a:	xor    r9d,r9d
   14001c73d:	xor    r8d,r8d
   14001c740:	xor    edx,edx
   14001c742:	xor    ecx,ecx
   14001c744:	call   0x140008678
   14001c749:	int3   
   14001c74a:	int3   
   14001c74b:	int3   
   14001c74c:	jmp    0x14001cae8
   14001c751:	int3   
   14001c752:	int3   
   14001c753:	int3   
   14001c754:	jmp    0x14001cf34
   14001c759:	int3   
   14001c75a:	int3   
   14001c75b:	int3   
   14001c75c:	jmp    0x14001cfd0
   14001c761:	int3   
   14001c762:	int3   
   14001c763:	int3   
   14001c764:	mov    QWORD PTR [rsp+0x8],rbx
   14001c769:	mov    QWORD PTR [rsp+0x10],rbp
   14001c76e:	mov    QWORD PTR [rsp+0x18],rsi
   14001c773:	push   rdi
   14001c774:	sub    rsp,0x30
   14001c778:	mov    rbx,r8
   14001c77b:	mov    rdi,rdx
   14001c77e:	mov    rsi,rcx
   14001c781:	call   0x14000f934
   14001c786:	xor    ebp,ebp
   14001c788:	test   eax,eax
   14001c78a:	jne    0x14001c7f1
   14001c78c:	lea    rax,[rbx+0x80]
   14001c793:	cmp    WORD PTR [rax],bp
   14001c796:	je     0x14001c7b3
   14001c798:	lea    r9,[rip+0x132a1]        # 0x14002fa40
   14001c79f:	lea    r8d,[rbp+0x2]
   14001c7a3:	mov    rdx,rdi
   14001c7a6:	mov    rcx,rsi
   14001c7a9:	mov    QWORD PTR [rsp+0x20],rax
   14001c7ae:	call   0x14001d16c
   14001c7b3:	lea    rax,[rbx+0x100]
   14001c7ba:	cmp    WORD PTR [rax],bp
   14001c7bd:	je     0x14001c7dc
   14001c7bf:	lea    r9,[rip+0x1327e]        # 0x14002fa44
   14001c7c6:	mov    r8d,0x2
   14001c7cc:	mov    rdx,rdi
   14001c7cf:	mov    rcx,rsi
   14001c7d2:	mov    QWORD PTR [rsp+0x20],rax
   14001c7d7:	call   0x14001d16c
   14001c7dc:	mov    rbx,QWORD PTR [rsp+0x40]
   14001c7e1:	mov    rbp,QWORD PTR [rsp+0x48]
   14001c7e6:	mov    rsi,QWORD PTR [rsp+0x50]
   14001c7eb:	add    rsp,0x30
   14001c7ef:	pop    rdi
   14001c7f0:	ret    
   14001c7f1:	xor    r9d,r9d
   14001c7f4:	xor    r8d,r8d
   14001c7f7:	xor    edx,edx
   14001c7f9:	xor    ecx,ecx
   14001c7fb:	mov    QWORD PTR [rsp+0x20],rbp
   14001c800:	call   0x140008678
   14001c805:	int3   
   14001c806:	int3   
   14001c807:	int3   
   14001c808:	mov    QWORD PTR [rsp+0x8],rbx
   14001c80d:	mov    QWORD PTR [rsp+0x10],rbp
   14001c812:	mov    QWORD PTR [rsp+0x18],rsi
   14001c817:	push   rdi
   14001c818:	push   r14
   14001c81a:	push   r15
   14001c81c:	sub    rsp,0x30
   14001c820:	mov    rbx,rdx
   14001c823:	mov    r8d,0x1ca
   14001c829:	xor    edx,edx
   14001c82b:	mov    rsi,rcx
   14001c82e:	call   0x140007150
   14001c833:	xor    r15d,r15d
   14001c836:	cmp    WORD PTR [rbx],r15w
   14001c83a:	jne    0x14001c843
   14001c83c:	xor    eax,eax
   14001c83e:	jmp    0x14001c950
   14001c843:	cmp    WORD PTR [rbx],0x2e
   14001c847:	jne    0x14001c87a
   14001c849:	lea    r8,[rbx+0x2]
   14001c84d:	cmp    WORD PTR [r8],r15w
   14001c851:	je     0x14001c87a
   14001c853:	mov    edx,0x10
   14001c858:	lea    rcx,[rsi+0x100]
   14001c85f:	lea    r9d,[rdx-0x1]
   14001c863:	call   0x14000f9bc
   14001c868:	test   eax,eax
   14001c86a:	jne    0x14001c969
   14001c870:	mov    WORD PTR [rsi+0x11e],r15w
   14001c878:	jmp    0x14001c83c
   14001c87a:	mov    ebp,r15d
   14001c87d:	lea    rdx,[rip+0x131b4]        # 0x14002fa38
   14001c884:	mov    rcx,rbx
   14001c887:	call   0x1400224f4
   14001c88c:	test   rax,rax
   14001c88f:	je     0x14001c94d
   14001c895:	lea    r14,[rbx+rax*2]
   14001c899:	movzx  edi,WORD PTR [r14]
   14001c89d:	test   ebp,ebp
   14001c89f:	jne    0x14001c8cf
   14001c8a1:	cmp    rax,0x40
   14001c8a5:	jae    0x14001c94d
   14001c8ab:	cmp    di,0x2e
   14001c8af:	je     0x14001c94d
   14001c8b5:	lea    edx,[rbp+0x40]
   14001c8b8:	mov    r9,rax
   14001c8bb:	mov    r8,rbx
   14001c8be:	mov    rcx,rsi
   14001c8c1:	call   0x14000f9bc
   14001c8c6:	test   eax,eax
   14001c8c8:	je     0x14001c92f
   14001c8ca:	jmp    0x14001c97e
   14001c8cf:	cmp    ebp,0x1
   14001c8d2:	jne    0x14001c8fe
   14001c8d4:	cmp    rax,0x40
   14001c8d8:	jae    0x14001c94d
   14001c8da:	cmp    di,0x5f
   14001c8de:	je     0x14001c94d
   14001c8e0:	lea    rcx,[rsi+0x80]
   14001c8e7:	lea    edx,[rbp+0x3f]
   14001c8ea:	mov    r9,rax
   14001c8ed:	mov    r8,rbx
   14001c8f0:	call   0x14000f9bc
   14001c8f5:	test   eax,eax
   14001c8f7:	je     0x14001c92f
   14001c8f9:	jmp    0x14001c993
   14001c8fe:	cmp    ebp,0x2
   14001c901:	jne    0x14001c94d
   14001c903:	cmp    rax,0x10
   14001c907:	jae    0x14001c94d
   14001c909:	test   di,di
   14001c90c:	je     0x14001c914
   14001c90e:	cmp    di,0x2c
   14001c912:	jne    0x14001c94d
   14001c914:	lea    rcx,[rsi+0x100]
   14001c91b:	mov    r9,rax
   14001c91e:	mov    r8,rbx
   14001c921:	mov    edx,0x10
   14001c926:	call   0x14000f9bc
   14001c92b:	test   eax,eax
   14001c92d:	jne    0x14001c9a8
   14001c92f:	cmp    di,0x2c
   14001c933:	je     0x14001c83c
   14001c939:	test   di,di
   14001c93c:	je     0x14001c83c
   14001c942:	lea    rbx,[r14+0x2]
   14001c946:	inc    ebp
   14001c948:	jmp    0x14001c87d
   14001c94d:	or     eax,0xffffffff
   14001c950:	mov    rbx,QWORD PTR [rsp+0x50]
   14001c955:	mov    rbp,QWORD PTR [rsp+0x58]
   14001c95a:	mov    rsi,QWORD PTR [rsp+0x60]
   14001c95f:	add    rsp,0x30
   14001c963:	pop    r15
   14001c965:	pop    r14
   14001c967:	pop    rdi
   14001c968:	ret    
   14001c969:	xor    r9d,r9d
   14001c96c:	xor    r8d,r8d
   14001c96f:	xor    edx,edx
   14001c971:	xor    ecx,ecx
   14001c973:	mov    QWORD PTR [rsp+0x20],r15
   14001c978:	call   0x140008678
   14001c97d:	int3   
   14001c97e:	xor    r9d,r9d
   14001c981:	xor    r8d,r8d
   14001c984:	xor    edx,edx
   14001c986:	xor    ecx,ecx
   14001c988:	mov    QWORD PTR [rsp+0x20],r15
   14001c98d:	call   0x140008678
   14001c992:	int3   
   14001c993:	xor    r9d,r9d
   14001c996:	xor    r8d,r8d
   14001c999:	xor    edx,edx
   14001c99b:	xor    ecx,ecx
   14001c99d:	mov    QWORD PTR [rsp+0x20],r15
   14001c9a2:	call   0x140008678
   14001c9a7:	int3   
   14001c9a8:	xor    r9d,r9d
   14001c9ab:	xor    r8d,r8d
   14001c9ae:	xor    edx,edx
   14001c9b0:	xor    ecx,ecx
   14001c9b2:	mov    QWORD PTR [rsp+0x20],r15
   14001c9b7:	call   0x140008678
   14001c9bc:	int3   
   14001c9bd:	int3   
   14001c9be:	int3   
   14001c9bf:	int3   
   14001c9c0:	rex push rbx
   14001c9c2:	sub    rsp,0x20
   14001c9c6:	mov    ebx,ecx
   14001c9c8:	call   0x14000b18c
   14001c9cd:	mov    r8d,DWORD PTR [rax+0xc8]
   14001c9d4:	mov    edx,r8d
   14001c9d7:	and    dl,0x2
   14001c9da:	neg    dl
   14001c9dc:	sbb    ecx,ecx
   14001c9de:	cmp    ebx,0xffffffff
   14001c9e1:	je     0x14001ca19
   14001c9e3:	test   ebx,ebx
   14001c9e5:	je     0x14001ca20
   14001c9e7:	cmp    ebx,0x1
   14001c9ea:	je     0x14001ca0c
   14001c9ec:	cmp    ebx,0x2
   14001c9ef:	je     0x14001ca06
   14001c9f1:	call   0x1400095b8
   14001c9f6:	mov    DWORD PTR [rax],0x16
   14001c9fc:	call   0x140008628
   14001ca01:	or     eax,0xffffffff
   14001ca04:	jmp    0x14001ca23
   14001ca06:	and    r8d,0xfffffffd
   14001ca0a:	jmp    0x14001ca10
   14001ca0c:	or     r8d,0x2
   14001ca10:	mov    DWORD PTR [rax+0xc8],r8d
   14001ca17:	jmp    0x14001ca20
   14001ca19:	or     DWORD PTR [rip+0x1a4d8],0xffffffff        # 0x140036ef8
   14001ca20:	lea    eax,[rcx+0x2]
   14001ca23:	add    rsp,0x20
   14001ca27:	pop    rbx
   14001ca28:	ret    
   14001ca29:	int3   
   14001ca2a:	int3   
   14001ca2b:	int3   
   14001ca2c:	sub    rsp,0x28
   14001ca30:	test   rdx,rdx
   14001ca33:	je     0x14001cae3
   14001ca39:	test   rcx,rcx
   14001ca3c:	je     0x14001cae3
   14001ca42:	cmp    rcx,rdx
   14001ca45:	je     0x14001cae3
   14001ca4b:	mov    eax,0x2
   14001ca50:	mov    r8,rcx
   14001ca53:	lea    r9d,[rax+0x7e]
   14001ca57:	movups xmm0,XMMWORD PTR [rdx]
   14001ca5a:	movups XMMWORD PTR [r8],xmm0
   14001ca5e:	movups xmm1,XMMWORD PTR [rdx+0x10]
   14001ca62:	movups XMMWORD PTR [r8+0x10],xmm1
   14001ca67:	movups xmm0,XMMWORD PTR [rdx+0x20]
   14001ca6b:	movups XMMWORD PTR [r8+0x20],xmm0
   14001ca70:	movups xmm1,XMMWORD PTR [rdx+0x30]
   14001ca74:	movups XMMWORD PTR [r8+0x30],xmm1
   14001ca79:	movups xmm0,XMMWORD PTR [rdx+0x40]
   14001ca7d:	movups XMMWORD PTR [r8+0x40],xmm0
   14001ca82:	movups xmm1,XMMWORD PTR [rdx+0x50]
   14001ca86:	movups XMMWORD PTR [r8+0x50],xmm1
   14001ca8b:	movups xmm0,XMMWORD PTR [rdx+0x60]
   14001ca8f:	movups XMMWORD PTR [r8+0x60],xmm0
   14001ca94:	movups xmm1,XMMWORD PTR [rdx+0x70]
   14001ca98:	add    r8,r9
   14001ca9b:	add    rdx,r9
   14001ca9e:	movups XMMWORD PTR [r8-0x10],xmm1
   14001caa3:	dec    rax
   14001caa6:	jne    0x14001ca57
   14001caa8:	movups xmm0,XMMWORD PTR [rdx]
   14001caab:	movups XMMWORD PTR [r8],xmm0
   14001caaf:	movups xmm1,XMMWORD PTR [rdx+0x10]
   14001cab3:	movups XMMWORD PTR [r8+0x10],xmm1
   14001cab8:	movups xmm0,XMMWORD PTR [rdx+0x20]
   14001cabc:	movups XMMWORD PTR [r8+0x20],xmm0
   14001cac1:	movups xmm1,XMMWORD PTR [rdx+0x30]
   14001cac5:	movups XMMWORD PTR [r8+0x30],xmm1
   14001caca:	movups xmm0,XMMWORD PTR [rdx+0x40]
   14001cace:	movups XMMWORD PTR [r8+0x40],xmm0
   14001cad3:	mov    rax,QWORD PTR [rdx+0x50]
   14001cad7:	mov    QWORD PTR [r8+0x50],rax
   14001cadb:	and    DWORD PTR [rcx],0x0
   14001cade:	call   0x14000fd2c
   14001cae3:	add    rsp,0x28
   14001cae7:	ret    
   14001cae8:	rex push rbx
   14001caea:	sub    rsp,0x150
   14001caf1:	mov    rax,QWORD PTR [rip+0x19f48]        # 0x140036a40
   14001caf8:	xor    rax,rsp
   14001cafb:	mov    QWORD PTR [rsp+0x140],rax
   14001cb03:	mov    ebx,ecx
   14001cb05:	cmp    ecx,0x5
   14001cb08:	ja     0x14001cb44
   14001cb0a:	test   rdx,rdx
   14001cb0d:	je     0x14001cb44
   14001cb0f:	lea    rax,[rsp+0x30]
   14001cb14:	mov    r8,rdx
   14001cb17:	or     r9d,0xffffffff
   14001cb1b:	xor    edx,edx
   14001cb1d:	xor    ecx,ecx
   14001cb1f:	mov    DWORD PTR [rsp+0x28],0x83
   14001cb27:	mov    QWORD PTR [rsp+0x20],rax
   14001cb2c:	call   QWORD PTR [rip+0xa576]        # 0x1400270a8
   14001cb32:	test   eax,eax
   14001cb34:	je     0x14001cb44
   14001cb36:	lea    rdx,[rsp+0x30]
   14001cb3b:	mov    ecx,ebx
   14001cb3d:	call   0x14001d06c
   14001cb42:	jmp    0x14001cb46
   14001cb44:	xor    eax,eax
   14001cb46:	mov    rcx,QWORD PTR [rsp+0x140]
   14001cb4e:	xor    rcx,rsp
   14001cb51:	call   0x14000d0a0
   14001cb56:	add    rsp,0x150
   14001cb5d:	pop    rbx
   14001cb5e:	ret    
   14001cb5f:	int3   
   14001cb60:	rex push rbp
   14001cb62:	push   rbx
   14001cb63:	push   rsi
   14001cb64:	push   rdi
   14001cb65:	push   r12
   14001cb67:	push   r13
   14001cb69:	push   r14
   14001cb6b:	push   r15
   14001cb6d:	lea    rbp,[rsp-0x148]
   14001cb75:	sub    rsp,0x248
   14001cb7c:	mov    rax,QWORD PTR [rip+0x19ebd]        # 0x140036a40
   14001cb83:	xor    rax,rsp
   14001cb86:	mov    QWORD PTR [rbp+0x130],rax
   14001cb8d:	mov    rdi,QWORD PTR [rbp+0x1b8]
   14001cb94:	mov    rsi,r9
   14001cb97:	mov    r13,r8
   14001cb9a:	mov    QWORD PTR [rsp+0x50],r8
   14001cb9f:	mov    r12,rdx
   14001cba2:	mov    rbx,rcx
   14001cba5:	call   0x14000b18c
   14001cbaa:	lea    rcx,[rax+0x160]
   14001cbb1:	lea    r15,[rax+0x164]
   14001cbb8:	lea    r14,[rax+0x26a]
   14001cbbf:	mov    QWORD PTR [rsp+0x38],rcx
   14001cbc4:	xor    ecx,ecx
   14001cbc6:	mov    QWORD PTR [rsp+0x40],r15
   14001cbcb:	mov    DWORD PTR [rsp+0x30],ecx
   14001cbcf:	test   rbx,rbx
   14001cbd2:	jne    0x14001cbf9
   14001cbd4:	xor    eax,eax
   14001cbd6:	mov    rcx,QWORD PTR [rbp+0x130]
   14001cbdd:	xor    rcx,rsp
   14001cbe0:	call   0x14000d0a0
   14001cbe5:	add    rsp,0x248
   14001cbec:	pop    r15
   14001cbee:	pop    r14
   14001cbf0:	pop    r13
   14001cbf2:	pop    r12
   14001cbf4:	pop    rdi
   14001cbf5:	pop    rsi
   14001cbf6:	pop    rbx
   14001cbf7:	pop    rbp
   14001cbf8:	ret    
   14001cbf9:	mov    rdx,QWORD PTR [rbp+0x1b0]
   14001cc00:	add    rax,0x398
   14001cc06:	mov    r9d,0x55
   14001cc0c:	mov    r8,rax
   14001cc0f:	mov    rcx,rsi
   14001cc12:	mov    QWORD PTR [rsp+0x48],rax
   14001cc17:	call   0x14000f9bc
   14001cc1c:	xor    ecx,ecx
   14001cc1e:	test   eax,eax
   14001cc20:	jne    0x14001cf1f
   14001cc26:	cmp    WORD PTR [rbx],0x43
   14001cc2a:	jne    0x14001cc5d
   14001cc2c:	cmp    WORD PTR [rbx+0x2],cx
   14001cc30:	jne    0x14001cc5d
   14001cc32:	lea    r8,[rip+0x12df7]        # 0x14002fa30
   14001cc39:	mov    rdx,r13
   14001cc3c:	mov    rcx,r12
   14001cc3f:	call   0x14000f934
   14001cc44:	xor    ecx,ecx
   14001cc46:	test   eax,eax
   14001cc48:	jne    0x14001ce7d
   14001cc4e:	test   rdi,rdi
   14001cc51:	je     0x14001cc55
   14001cc53:	mov    DWORD PTR [rdi],ecx
   14001cc55:	mov    rax,r12
   14001cc58:	jmp    0x14001cbd6
   14001cc5d:	mov    rcx,rbx
   14001cc60:	call   0x14000f9a0
   14001cc65:	mov    r13,rax
   14001cc68:	cmp    rax,0x83
   14001cc6e:	jae    0x14001cc96
   14001cc70:	mov    rdx,rbx
   14001cc73:	mov    rcx,r14
   14001cc76:	call   0x1400224b8
   14001cc7b:	test   eax,eax
   14001cc7d:	je     0x14001ce1a
   14001cc83:	mov    rdx,rbx
   14001cc86:	mov    rcx,r15
   14001cc89:	call   0x1400224b8
   14001cc8e:	test   eax,eax
   14001cc90:	je     0x14001ce1a
   14001cc96:	mov    rax,QWORD PTR [rip+0x1d473]        # 0x14003a110
   14001cc9d:	lea    rcx,[rsp+0x60]
   14001cca2:	mov    rdx,rbx
   14001cca5:	xor    rax,QWORD PTR [rip+0x19d94]        # 0x140036a40
   14001ccac:	mov    eax,0x0
   14001ccb1:	lea    r15d,[rax+0x1]
   14001ccb5:	cmovne r15d,eax
   14001ccb9:	call   0x14001c808
   14001ccbe:	test   eax,eax
   14001ccc0:	jne    0x14001cd3d
   14001ccc2:	test   r15d,r15d
   14001ccc5:	mov    r15,QWORD PTR [rsp+0x38]
   14001ccca:	lea    r8,[rsp+0x60]
   14001cccf:	mov    rdx,r15
   14001ccd2:	lea    rcx,[rsp+0x60]
   14001ccd7:	je     0x14001cce0
   14001ccd9:	call   0x140023920
   14001ccde:	jmp    0x14001cce5
   14001cce0:	call   0x140022e24
   14001cce5:	test   eax,eax
   14001cce7:	je     0x14001cd42
   14001cce9:	mov    r15d,0x83
   14001ccef:	lea    r8,[rsp+0x60]
   14001ccf4:	mov    rcx,r14
   14001ccf7:	mov    edx,r15d
   14001ccfa:	call   0x14001c764
   14001ccff:	test   rsi,rsi
   14001cd02:	je     0x14001ce0e
   14001cd08:	lea    rcx,[rbp+0x80]
   14001cd0f:	call   0x14000f9a0
   14001cd14:	mov    rdx,QWORD PTR [rbp+0x1b0]
   14001cd1b:	lea    r8,[rbp+0x80]
   14001cd22:	lea    r9,[rax+0x1]
   14001cd26:	mov    rcx,rsi
   14001cd29:	call   0x14000f9bc
   14001cd2e:	xor    esi,esi
   14001cd30:	test   eax,eax
   14001cd32:	je     0x14001cde7
   14001cd38:	jmp    0x14001ce90
   14001cd3d:	mov    r15,QWORD PTR [rsp+0x38]
   14001cd42:	mov    rcx,rbx
   14001cd45:	call   0x14000f5b4
   14001cd4a:	test   eax,eax
   14001cd4c:	je     0x14001ce50
   14001cd52:	lea    r8,[rsp+0x30]
   14001cd57:	mov    r9d,0x2
   14001cd5d:	mov    edx,0x20001004
   14001cd62:	mov    rcx,rbx
   14001cd65:	call   0x14000f4a8
   14001cd6a:	test   eax,eax
   14001cd6c:	je     0x14001cd76
   14001cd6e:	mov    eax,DWORD PTR [rsp+0x30]
   14001cd72:	test   eax,eax
   14001cd74:	jne    0x14001cd80
   14001cd76:	call   QWORD PTR [rip+0xa474]        # 0x1400271f0
   14001cd7c:	mov    DWORD PTR [rsp+0x30],eax
   14001cd80:	movzx  eax,ax
   14001cd83:	mov    r8,rbx
   14001cd86:	mov    edx,0x83
   14001cd8b:	mov    DWORD PTR [r15],eax
   14001cd8e:	lea    r15,[r13+0x1]
   14001cd92:	mov    rcx,r14
   14001cd95:	mov    r9,r15
   14001cd98:	call   0x14000f9bc
   14001cd9d:	xor    ecx,ecx
   14001cd9f:	test   eax,eax
   14001cda1:	jne    0x14001cef9
   14001cda7:	mov    rdx,QWORD PTR [rbp+0x1b0]
   14001cdae:	mov    r9,r15
   14001cdb1:	mov    r8,rbx
   14001cdb4:	mov    rcx,rsi
   14001cdb7:	call   0x14000f9bc
   14001cdbc:	xor    esi,esi
   14001cdbe:	test   eax,eax
   14001cdc0:	jne    0x14001cee4
   14001cdc6:	mov    rcx,QWORD PTR [rsp+0x48]
   14001cdcb:	lea    edx,[rsi+0x55]
   14001cdce:	mov    r9,r15
   14001cdd1:	mov    r8,rbx
   14001cdd4:	call   0x14000f9bc
   14001cdd9:	test   eax,eax
   14001cddb:	jne    0x14001cecf
   14001cde1:	mov    r15d,0x83
   14001cde7:	cmp    WORD PTR [rbx],si
   14001cdea:	je     0x14001ce10
   14001cdec:	cmp    r13,r15
   14001cdef:	jae    0x14001ce10
   14001cdf1:	mov    rcx,QWORD PTR [rsp+0x40]
   14001cdf6:	lea    r9,[r13+0x1]
   14001cdfa:	mov    r8,rbx
   14001cdfd:	mov    rdx,r15
   14001ce00:	call   0x14000f9bc
   14001ce05:	test   eax,eax
   14001ce07:	je     0x14001ce1c
   14001ce09:	jmp    0x14001cea5
   14001ce0e:	jmp    0x14001cde7
   14001ce10:	mov    rax,QWORD PTR [rsp+0x40]
   14001ce15:	mov    WORD PTR [rax],si
   14001ce18:	jmp    0x14001ce1c
   14001ce1a:	xor    esi,esi
   14001ce1c:	test   rdi,rdi
   14001ce1f:	je     0x14001ce34
   14001ce21:	mov    rdx,QWORD PTR [rsp+0x38]
   14001ce26:	mov    r8d,0x4
   14001ce2c:	mov    rcx,rdi
   14001ce2f:	call   0x1400056d0
   14001ce34:	mov    rdx,QWORD PTR [rsp+0x50]
   14001ce39:	mov    r8,r14
   14001ce3c:	mov    rcx,r12
   14001ce3f:	call   0x14000f934
   14001ce44:	test   eax,eax
   14001ce46:	jne    0x14001ceba
   14001ce48:	mov    rax,r14
   14001ce4b:	jmp    0x14001cbd6
   14001ce50:	mov    rcx,rsi
   14001ce53:	call   0x14000f9a0
   14001ce58:	mov    rcx,QWORD PTR [rsp+0x48]
   14001ce5d:	mov    r8,rsi
   14001ce60:	lea    r9,[rax+0x1]
   14001ce64:	mov    edx,0x55
   14001ce69:	call   0x14000f9bc
   14001ce6e:	xor    ecx,ecx
   14001ce70:	test   eax,eax
   14001ce72:	je     0x14001cbd4
   14001ce78:	jmp    0x14001cf0c
   14001ce7d:	xor    r9d,r9d
   14001ce80:	xor    r8d,r8d
   14001ce83:	xor    edx,edx
   14001ce85:	mov    QWORD PTR [rsp+0x20],rcx
   14001ce8a:	call   0x140008678
   14001ce8f:	int3   
   14001ce90:	xor    r9d,r9d
   14001ce93:	xor    r8d,r8d
   14001ce96:	xor    edx,edx
   14001ce98:	xor    ecx,ecx
   14001ce9a:	mov    QWORD PTR [rsp+0x20],rsi
   14001ce9f:	call   0x140008678
   14001cea4:	int3   
   14001cea5:	xor    r9d,r9d
   14001cea8:	xor    r8d,r8d
   14001ceab:	xor    edx,edx
   14001cead:	xor    ecx,ecx
   14001ceaf:	mov    QWORD PTR [rsp+0x20],rsi
   14001ceb4:	call   0x140008678
   14001ceb9:	int3   
   14001ceba:	xor    r9d,r9d
   14001cebd:	xor    r8d,r8d
   14001cec0:	xor    edx,edx
   14001cec2:	xor    ecx,ecx
   14001cec4:	mov    QWORD PTR [rsp+0x20],rsi
   14001cec9:	call   0x140008678
   14001cece:	int3   
   14001cecf:	xor    r9d,r9d
   14001ced2:	xor    r8d,r8d
   14001ced5:	xor    edx,edx
   14001ced7:	xor    ecx,ecx
   14001ced9:	mov    QWORD PTR [rsp+0x20],rsi
   14001cede:	call   0x140008678
   14001cee3:	int3   
   14001cee4:	xor    r9d,r9d
   14001cee7:	xor    r8d,r8d
   14001ceea:	xor    edx,edx
   14001ceec:	xor    ecx,ecx
   14001ceee:	mov    QWORD PTR [rsp+0x20],rsi
   14001cef3:	call   0x140008678
   14001cef8:	int3   
   14001cef9:	xor    r9d,r9d
   14001cefc:	xor    r8d,r8d
   14001ceff:	xor    edx,edx
   14001cf01:	mov    QWORD PTR [rsp+0x20],rcx
   14001cf06:	call   0x140008678
   14001cf0b:	int3   
   14001cf0c:	xor    r9d,r9d
   14001cf0f:	xor    r8d,r8d
   14001cf12:	xor    edx,edx
   14001cf14:	mov    QWORD PTR [rsp+0x20],rcx
   14001cf19:	call   0x140008678
   14001cf1e:	int3   
   14001cf1f:	xor    r9d,r9d
   14001cf22:	xor    r8d,r8d
   14001cf25:	xor    edx,edx
   14001cf27:	mov    QWORD PTR [rsp+0x20],rcx
   14001cf2c:	call   0x140008678
   14001cf31:	int3   
   14001cf32:	int3   
   14001cf33:	int3   
   14001cf34:	test   rcx,rcx
   14001cf37:	je     0x14001cfcd
   14001cf3d:	push   rbx
   14001cf3e:	sub    rsp,0x20
   14001cf42:	mov    rbx,rcx
   14001cf45:	mov    ecx,0xd
   14001cf4a:	call   0x140008760
   14001cf4f:	nop
   14001cf50:	mov    rcx,QWORD PTR [rbx+0x8]
   14001cf54:	test   rcx,rcx
   14001cf57:	je     0x14001cf74
   14001cf59:	lock dec DWORD PTR [rcx]
   14001cf5c:	jne    0x14001cf74
   14001cf5e:	mov    rcx,QWORD PTR [rbx+0x8]
   14001cf62:	lea    rax,[rip+0x197a7]        # 0x140036710
   14001cf69:	cmp    rcx,rax
   14001cf6c:	je     0x14001cf74
   14001cf6e:	call   0x140006444
   14001cf73:	nop
   14001cf74:	mov    ecx,0xd
   14001cf79:	call   0x14000897c
   14001cf7e:	cmp    QWORD PTR [rbx],0x0
   14001cf82:	je     0x14001cfc0
   14001cf84:	mov    ecx,0xc
   14001cf89:	call   0x140008760
   14001cf8e:	nop
   14001cf8f:	mov    rcx,QWORD PTR [rbx]
   14001cf92:	call   0x14000ff50
   14001cf97:	mov    rcx,QWORD PTR [rbx]
   14001cf9a:	test   rcx,rcx
   14001cf9d:	je     0x14001cfb6
   14001cf9f:	cmp    DWORD PTR [rcx],0x0
   14001cfa2:	jne    0x14001cfb6
   14001cfa4:	lea    rax,[rip+0x19de5]        # 0x140036d90
   14001cfab:	cmp    rcx,rax
   14001cfae:	je     0x14001cfb6
   14001cfb0:	call   0x14000fdb8
   14001cfb5:	nop
   14001cfb6:	mov    ecx,0xc
   14001cfbb:	call   0x14000897c
   14001cfc0:	mov    rcx,rbx
   14001cfc3:	call   0x140006444
   14001cfc8:	add    rsp,0x20
   14001cfcc:	pop    rbx
   14001cfcd:	ret    
   14001cfce:	int3   
   14001cfcf:	int3   
   14001cfd0:	mov    QWORD PTR [rsp+0x8],rbx
   14001cfd5:	push   rdi
   14001cfd6:	sub    rsp,0x20
   14001cfda:	call   0x14000b18c
   14001cfdf:	mov    rdi,rax
   14001cfe2:	mov    edx,0x1
   14001cfe7:	lea    ecx,[rdx+0xf]
   14001cfea:	call   0x140007ed4
   14001cfef:	mov    rbx,rax
   14001cff2:	test   rax,rax
   14001cff5:	jne    0x14001d006
   14001cff7:	call   0x1400095b8
   14001cffc:	mov    DWORD PTR [rax],0xc
   14001d002:	xor    eax,eax
   14001d004:	jmp    0x14001d061
   14001d006:	call   0x14000fff4
   14001d00b:	call   0x14000a3f0
   14001d010:	mov    rax,QWORD PTR [rdi+0xc0]
   14001d017:	mov    QWORD PTR [rbx],rax
   14001d01a:	mov    rax,QWORD PTR [rdi+0xb8]
   14001d021:	mov    QWORD PTR [rbx+0x8],rax
   14001d025:	mov    ecx,0xc
   14001d02a:	call   0x140008760
   14001d02f:	nop
   14001d030:	mov    rcx,QWORD PTR [rbx]
   14001d033:	call   0x14000fd2c
   14001d038:	nop
   14001d039:	mov    ecx,0xc
   14001d03e:	call   0x14000897c
   14001d043:	mov    edi,0xd
   14001d048:	mov    ecx,edi
   14001d04a:	call   0x140008760
   14001d04f:	nop
   14001d050:	mov    rax,QWORD PTR [rbx+0x8]
   14001d054:	lock inc DWORD PTR [rax]
   14001d057:	mov    ecx,edi
   14001d059:	call   0x14000897c
   14001d05e:	mov    rax,rbx
   14001d061:	mov    rbx,QWORD PTR [rsp+0x30]
   14001d066:	add    rsp,0x20
   14001d06a:	pop    rdi
   14001d06b:	ret    
   14001d06c:	mov    QWORD PTR [rsp+0x8],rbx
   14001d071:	mov    QWORD PTR [rsp+0x10],rbp
   14001d076:	mov    QWORD PTR [rsp+0x18],rsi
   14001d07b:	push   rdi
   14001d07c:	sub    rsp,0x20
   14001d080:	mov    rdi,rdx
   14001d083:	mov    esi,ecx
   14001d085:	cmp    ecx,0x5
   14001d088:	ja     0x14001d0b1
   14001d08a:	test   rdx,rdx
   14001d08d:	je     0x14001d0b1
   14001d08f:	mov    ebp,0x1
   14001d094:	mov    edx,ebp
   14001d096:	lea    ecx,[rbp+0xf]
   14001d099:	call   0x140007ed4
   14001d09e:	mov    rbx,rax
   14001d0a1:	test   rax,rax
   14001d0a4:	jne    0x14001d0c8
   14001d0a6:	call   0x1400095b8
   14001d0ab:	mov    DWORD PTR [rax],0xc
   14001d0b1:	xor    eax,eax
   14001d0b3:	mov    rbx,QWORD PTR [rsp+0x30]
   14001d0b8:	mov    rbp,QWORD PTR [rsp+0x38]
   14001d0bd:	mov    rsi,QWORD PTR [rsp+0x40]
   14001d0c2:	add    rsp,0x20
   14001d0c6:	pop    rdi
   14001d0c7:	ret    
   14001d0c8:	mov    rdx,rbp
   14001d0cb:	mov    ecx,0x158
   14001d0d0:	call   0x140007ed4
   14001d0d5:	mov    QWORD PTR [rbx],rax
   14001d0d8:	test   rax,rax
   14001d0db:	jne    0x14001d0e7
   14001d0dd:	mov    rcx,rbx
   14001d0e0:	call   0x140006444
   14001d0e5:	jmp    0x14001d0a6
   14001d0e7:	mov    rdx,rbp
   14001d0ea:	mov    ecx,0x228
   14001d0ef:	call   0x140007ed4
   14001d0f4:	mov    rcx,QWORD PTR [rbx]
   14001d0f7:	mov    QWORD PTR [rbx+0x8],rax
   14001d0fb:	test   rax,rax
   14001d0fe:	jne    0x14001d107
   14001d100:	call   0x140006444
   14001d105:	jmp    0x14001d0dd
   14001d107:	lea    rdx,[rip+0x19c82]        # 0x140036d90
   14001d10e:	call   0x14001ca2c
   14001d113:	mov    rcx,QWORD PTR [rbx]
   14001d116:	mov    r8,rdi
   14001d119:	mov    edx,esi
   14001d11b:	call   0x14001d544
   14001d120:	test   rax,rax
   14001d123:	je     0x14001d138
   14001d125:	mov    rax,QWORD PTR [rbx]
   14001d128:	mov    rdx,QWORD PTR [rbx+0x8]
   14001d12c:	mov    ecx,DWORD PTR [rax+0x4]
   14001d12f:	call   0x14000a72c
   14001d134:	test   eax,eax
   14001d136:	je     0x14001d15d
   14001d138:	mov    rcx,QWORD PTR [rbx+0x8]
   14001d13c:	call   0x140006444
   14001d141:	mov    rcx,QWORD PTR [rbx]
   14001d144:	call   0x14000ff50
   14001d149:	mov    rcx,QWORD PTR [rbx]
   14001d14c:	call   0x14000fdb8
   14001d151:	mov    rcx,rbx
   14001d154:	call   0x140006444
   14001d159:	xor    ebx,ebx
   14001d15b:	jmp    0x14001d163
   14001d15d:	mov    rax,QWORD PTR [rbx+0x8]
   14001d161:	mov    DWORD PTR [rax],ebp
   14001d163:	mov    rax,rbx
   14001d166:	jmp    0x14001d0b3
   14001d16b:	int3   
   14001d16c:	test   r8d,r8d
   14001d16f:	jle    0x14001d1ba
   14001d171:	mov    DWORD PTR [rsp+0x18],r8d
   14001d176:	mov    QWORD PTR [rsp+0x20],r9
   14001d17b:	push   rbx
   14001d17c:	push   rbp
   14001d17d:	push   rsi
   14001d17e:	push   rdi
   14001d17f:	sub    rsp,0x38
   14001d183:	lea    rdi,[rsp+0x78]
   14001d188:	xor    ebx,ebx
   14001d18a:	mov    rsi,rdx
   14001d18d:	add    rdi,0xfffffffffffffff8
   14001d191:	mov    rbp,rcx
   14001d194:	lea    rdi,[rdi+0x8]
   14001d198:	mov    rdx,rsi
   14001d19b:	mov    rcx,rbp
   14001d19e:	mov    r8,QWORD PTR [rdi]
   14001d1a1:	call   0x14000f8ac
   14001d1a6:	test   eax,eax
   14001d1a8:	jne    0x14001d1bb
   14001d1aa:	inc    ebx
   14001d1ac:	cmp    ebx,DWORD PTR [rsp+0x70]
   14001d1b0:	jl     0x14001d194
   14001d1b2:	add    rsp,0x38
   14001d1b6:	pop    rdi
   14001d1b7:	pop    rsi
   14001d1b8:	pop    rbp
   14001d1b9:	pop    rbx
   14001d1ba:	ret    
   14001d1bb:	and    QWORD PTR [rsp+0x20],0x0
   14001d1c1:	xor    r9d,r9d
   14001d1c4:	xor    r8d,r8d
   14001d1c7:	xor    edx,edx
   14001d1c9:	xor    ecx,ecx
   14001d1cb:	call   0x140008678
   14001d1d0:	int3   
   14001d1d1:	int3   
   14001d1d2:	int3   
   14001d1d3:	int3   
   14001d1d4:	mov    QWORD PTR [rsp+0x8],rbx
   14001d1d9:	mov    QWORD PTR [rsp+0x10],rsi
   14001d1de:	mov    QWORD PTR [rsp+0x20],rdi
   14001d1e3:	push   r12
   14001d1e5:	push   r14
   14001d1e7:	push   r15
   14001d1e9:	sub    rsp,0x30
   14001d1ed:	mov    r14,rdx
   14001d1f0:	mov    r12d,ecx
   14001d1f3:	xor    esi,esi
   14001d1f5:	cmp    ecx,0x5
   14001d1f8:	jbe    0x14001d211
   14001d1fa:	call   0x1400095b8
   14001d1ff:	mov    DWORD PTR [rax],0x16
   14001d205:	call   0x140008628
   14001d20a:	xor    eax,eax
   14001d20c:	jmp    0x14001d355
   14001d211:	call   0x14000b18c
   14001d216:	mov    rbx,rax
   14001d219:	mov    QWORD PTR [rsp+0x60],rax
   14001d21e:	call   0x14000fff4
   14001d223:	or     DWORD PTR [rbx+0xc8],0x10
   14001d22a:	mov    edx,0x1
   14001d22f:	mov    ecx,0x158
   14001d234:	call   0x140007ed4
   14001d239:	mov    rdi,rax
   14001d23c:	test   rax,rax
   14001d23f:	je     0x14001d34b
   14001d245:	mov    ecx,0xc
   14001d24a:	call   0x140008760
   14001d24f:	nop
   14001d250:	lea    r15,[rbx+0xc0]
   14001d257:	mov    rdx,QWORD PTR [r15]
   14001d25a:	mov    rcx,rdi
   14001d25d:	call   0x14001ca2c
   14001d262:	nop
   14001d263:	mov    ecx,0xc
   14001d268:	call   0x14000897c
   14001d26d:	mov    r8,r14
   14001d270:	mov    edx,r12d
   14001d273:	mov    rcx,rdi
   14001d276:	call   0x14001d544
   14001d27b:	mov    rsi,rax
   14001d27e:	mov    QWORD PTR [rsp+0x20],rax
   14001d283:	test   rax,rax
   14001d286:	je     0x14001d33a
   14001d28c:	test   r14,r14
   14001d28f:	je     0x14001d2ba
   14001d291:	lea    rdx,[rip+0x1981c]        # 0x140036ab4
   14001d298:	mov    rcx,r14
   14001d29b:	call   0x1400224b8
   14001d2a0:	mov    ecx,DWORD PTR [rip+0x1bd7a]        # 0x140039020
   14001d2a6:	test   eax,eax
   14001d2a8:	mov    r14d,0x1
   14001d2ae:	cmovne ecx,r14d
   14001d2b2:	mov    DWORD PTR [rip+0x1bd68],ecx        # 0x140039020
   14001d2b8:	jmp    0x14001d2c0
   14001d2ba:	mov    r14d,0x1
   14001d2c0:	mov    ecx,0xc
   14001d2c5:	call   0x140008760
   14001d2ca:	nop
   14001d2cb:	mov    rdx,rdi
   14001d2ce:	mov    rcx,r15
   14001d2d1:	call   0x14001006c
   14001d2d6:	mov    rcx,rdi
   14001d2d9:	call   0x14000ff50
   14001d2de:	test   BYTE PTR [rbx+0xc8],0x2
   14001d2e5:	jne    0x14001d32e
   14001d2e7:	test   BYTE PTR [rip+0x19c0a],r14b        # 0x140036ef8
   14001d2ee:	jne    0x14001d32e
   14001d2f0:	mov    rdx,QWORD PTR [r15]
   14001d2f3:	lea    rcx,[rip+0x19a86]        # 0x140036d80
   14001d2fa:	call   0x14001006c
   14001d2ff:	mov    rdx,QWORD PTR [rip+0x19a7a]        # 0x140036d80
   14001d306:	mov    rax,QWORD PTR [rdx+0xf0]
   14001d30d:	mov    QWORD PTR [rip+0x1a22c],rax        # 0x140037540
   14001d314:	mov    rax,QWORD PTR [rdx+0x108]
   14001d31b:	mov    QWORD PTR [rip+0x1a226],rax        # 0x140037548
   14001d322:	mov    eax,DWORD PTR [rdx+0xd4]
   14001d328:	mov    DWORD PTR [rip+0x19782],eax        # 0x140036ab0
   14001d32e:	mov    ecx,0xc
   14001d333:	call   0x14000897c
   14001d338:	jmp    0x14001d34b
   14001d33a:	mov    rcx,rdi
   14001d33d:	call   0x14000ff50
   14001d342:	mov    rcx,rdi
   14001d345:	call   0x14000fdb8
   14001d34a:	nop
   14001d34b:	and    DWORD PTR [rbx+0xc8],0xffffffef
   14001d352:	mov    rax,rsi
   14001d355:	mov    rbx,QWORD PTR [rsp+0x50]
   14001d35a:	mov    rsi,QWORD PTR [rsp+0x58]
   14001d35f:	mov    rdi,QWORD PTR [rsp+0x68]
   14001d364:	add    rsp,0x30
   14001d368:	pop    r15
   14001d36a:	pop    r14
   14001d36c:	pop    r12
   14001d36e:	ret    
   14001d36f:	int3   
   14001d370:	mov    QWORD PTR [rsp+0x8],rbx
   14001d375:	mov    QWORD PTR [rsp+0x10],rbp
   14001d37a:	mov    QWORD PTR [rsp+0x18],rsi
   14001d37f:	push   rdi
   14001d380:	push   r12
   14001d382:	push   r13
   14001d384:	push   r14
   14001d386:	push   r15
   14001d388:	sub    rsp,0x30
   14001d38c:	mov    rdi,rcx
   14001d38f:	mov    ecx,0x6a6
   14001d394:	mov    ebp,0x1
   14001d399:	call   0x140007f54
   14001d39e:	xor    r13d,r13d
   14001d3a1:	mov    rsi,rax
   14001d3a4:	test   rax,rax
   14001d3a7:	jne    0x14001d3c6
   14001d3a9:	mov    rbx,QWORD PTR [rsp+0x60]
   14001d3ae:	mov    rbp,QWORD PTR [rsp+0x68]
   14001d3b3:	mov    rsi,QWORD PTR [rsp+0x70]
   14001d3b8:	add    rsp,0x30
   14001d3bc:	pop    r15
   14001d3be:	pop    r14
   14001d3c0:	pop    r13
   14001d3c2:	pop    r12
   14001d3c4:	pop    rdi
   14001d3c5:	ret    
   14001d3c6:	lea    r14,[rax+0x4]
   14001d3ca:	mov    ebx,0x351
   14001d3cf:	mov    r8d,0x3
   14001d3d5:	mov    WORD PTR [r14],r13w
   14001d3d9:	mov    DWORD PTR [rax],ebp
   14001d3db:	mov    rax,QWORD PTR [rdi+0x38]
   14001d3df:	mov    r9,QWORD PTR [rip+0x124c2]        # 0x14002f8a8
   14001d3e6:	mov    QWORD PTR [rsp+0x28],rax
   14001d3eb:	lea    rax,[rip+0x1263a]        # 0x14002fa2c
   14001d3f2:	mov    edx,ebx
   14001d3f4:	mov    rcx,r14
   14001d3f7:	mov    QWORD PTR [rsp+0x20],rax
   14001d3fc:	call   0x14001d16c
   14001d401:	lea    r15,[rip+0x124a0]        # 0x14002f8a8
   14001d408:	lea    r12,[rdi+0x38]
   14001d40c:	lea    r8,[rip+0x12615]        # 0x14002fa28
   14001d413:	mov    rdx,rbx
   14001d416:	mov    rcx,r14
   14001d419:	call   0x14000f8ac
   14001d41e:	test   eax,eax
   14001d420:	jne    0x14001d52f
   14001d426:	mov    rcx,QWORD PTR [r12]
   14001d42a:	lea    rbx,[r12+0x20]
   14001d42f:	mov    rdx,QWORD PTR [rbx]
   14001d432:	call   0x1400224b8
   14001d437:	mov    r12,rbx
   14001d43a:	mov    r8d,0x3
   14001d440:	test   eax,eax
   14001d442:	mov    rax,QWORD PTR [rbx]
   14001d445:	mov    ebx,0x351
   14001d44a:	mov    QWORD PTR [rsp+0x28],rax
   14001d44f:	cmovne ebp,r13d
   14001d453:	lea    rax,[rip+0x125d2]        # 0x14002fa2c
   14001d45a:	add    r15,0x18
   14001d45e:	mov    edx,ebx
   14001d460:	mov    rcx,r14
   14001d463:	mov    r9,QWORD PTR [r15]
   14001d466:	mov    QWORD PTR [rsp+0x20],rax
   14001d46b:	call   0x14001d16c
   14001d470:	lea    rax,[rip+0x12491]        # 0x14002f908
   14001d477:	cmp    r15,rax
   14001d47a:	jl     0x14001d40c
   14001d47c:	test   ebp,ebp
   14001d47e:	jne    0x14001d4d3
   14001d480:	mov    rcx,QWORD PTR [rdi+0x28]
   14001d484:	or     ebx,0xffffffff
   14001d487:	test   rcx,rcx
   14001d48a:	je     0x14001d49f
   14001d48c:	mov    eax,ebx
   14001d48e:	lock xadd DWORD PTR [rcx],eax
   14001d492:	add    eax,ebx
   14001d494:	jne    0x14001d49f
   14001d496:	mov    rcx,QWORD PTR [rdi+0x28]
   14001d49a:	call   0x140006444
   14001d49f:	mov    rax,QWORD PTR [rdi+0x20]
   14001d4a3:	test   rax,rax
   14001d4a6:	je     0x14001d4bb
   14001d4a8:	mov    ecx,ebx
   14001d4aa:	lock xadd DWORD PTR [rax],ecx
   14001d4ae:	add    ecx,ebx
   14001d4b0:	jne    0x14001d4bb
   14001d4b2:	mov    rcx,QWORD PTR [rdi+0x20]
   14001d4b6:	call   0x140006444
   14001d4bb:	mov    QWORD PTR [rdi+0x20],r13
   14001d4bf:	mov    QWORD PTR [rdi+0x10],r13
   14001d4c3:	mov    QWORD PTR [rdi+0x28],rsi
   14001d4c7:	mov    QWORD PTR [rdi+0x18],r14
   14001d4cb:	mov    rax,r14
   14001d4ce:	jmp    0x14001d3a9
   14001d4d3:	mov    rcx,rsi
   14001d4d6:	call   0x140006444
   14001d4db:	mov    rcx,QWORD PTR [rdi+0x28]
   14001d4df:	or     ebx,0xffffffff
   14001d4e2:	test   rcx,rcx
   14001d4e5:	je     0x14001d4fa
   14001d4e7:	mov    eax,ebx
   14001d4e9:	lock xadd DWORD PTR [rcx],eax
   14001d4ed:	add    eax,ebx
   14001d4ef:	jne    0x14001d4fa
   14001d4f1:	mov    rcx,QWORD PTR [rdi+0x28]
   14001d4f5:	call   0x140006444
   14001d4fa:	mov    rcx,QWORD PTR [rdi+0x20]
   14001d4fe:	test   rcx,rcx
   14001d501:	je     0x14001d516
   14001d503:	mov    eax,ebx
   14001d505:	lock xadd DWORD PTR [rcx],eax
   14001d509:	add    eax,ebx
   14001d50b:	jne    0x14001d516
   14001d50d:	mov    rcx,QWORD PTR [rdi+0x20]
   14001d511:	call   0x140006444
   14001d516:	mov    rax,QWORD PTR [rdi+0x58]
   14001d51a:	mov    QWORD PTR [rdi+0x20],r13
   14001d51e:	mov    QWORD PTR [rdi+0x10],r13
   14001d522:	mov    QWORD PTR [rdi+0x28],r13
   14001d526:	mov    QWORD PTR [rdi+0x18],r13
   14001d52a:	jmp    0x14001d3a9
   14001d52f:	xor    r9d,r9d
   14001d532:	xor    r8d,r8d
   14001d535:	xor    edx,edx
   14001d537:	xor    ecx,ecx
   14001d539:	mov    QWORD PTR [rsp+0x20],r13
   14001d53e:	call   0x140008678
   14001d543:	int3   
   14001d544:	mov    QWORD PTR [rsp+0x20],rbx
   14001d549:	push   rbp
   14001d54a:	push   rsi
   14001d54b:	push   rdi
   14001d54c:	push   r12
   14001d54e:	push   r13
   14001d550:	push   r14
   14001d552:	push   r15
   14001d554:	sub    rsp,0x200
   14001d55b:	mov    rax,QWORD PTR [rip+0x194de]        # 0x140036a40
   14001d562:	xor    rax,rsp
   14001d565:	mov    QWORD PTR [rsp+0x1f0],rax
   14001d56d:	xor    r13d,r13d
   14001d570:	mov    rbx,r8
   14001d573:	mov    rdi,rcx
   14001d576:	test   edx,edx
   14001d578:	je     0x14001d59a
   14001d57a:	test   rbx,rbx
   14001d57d:	je     0x14001d589
   14001d57f:	call   0x14001d7b0
   14001d584:	jmp    0x14001d6df
   14001d589:	movsxd rax,edx
   14001d58c:	shl    rax,0x5
   14001d590:	mov    rax,QWORD PTR [rax+rcx*1+0x18]
   14001d595:	jmp    0x14001d6df
   14001d59a:	mov    ebp,0x1
   14001d59f:	mov    esi,r13d
   14001d5a2:	test   rbx,rbx
   14001d5a5:	je     0x14001d6da
   14001d5ab:	cmp    WORD PTR [r8],0x4c
   14001d5b0:	jne    0x14001d70e
   14001d5b6:	cmp    WORD PTR [r8+0x2],0x43
   14001d5bc:	jne    0x14001d70e
   14001d5c2:	cmp    WORD PTR [r8+0x4],0x5f
   14001d5c8:	jne    0x14001d70e
   14001d5ce:	lea    rdx,[rip+0x1244b]        # 0x14002fa20
   14001d5d5:	mov    rcx,rbx
   14001d5d8:	call   0x140022560
   14001d5dd:	mov    r14,rax
   14001d5e0:	test   rax,rax
   14001d5e3:	je     0x14001d70a
   14001d5e9:	mov    rbp,rax
   14001d5ec:	sub    rbp,rbx
   14001d5ef:	sar    rbp,1
   14001d5f2:	je     0x14001d70a
   14001d5f8:	cmp    WORD PTR [rax],0x3b
   14001d5fc:	je     0x14001d70a
   14001d602:	mov    r12d,0x1
   14001d608:	lea    r15,[rip+0x12299]        # 0x14002f8a8
   14001d60f:	mov    rcx,QWORD PTR [r15]
   14001d612:	mov    r8,rbp
   14001d615:	mov    rdx,rbx
   14001d618:	call   0x140022534
   14001d61d:	test   eax,eax
   14001d61f:	jne    0x14001d62e
   14001d621:	mov    rcx,QWORD PTR [r15]
   14001d624:	call   0x14000f9a0
   14001d629:	cmp    rbp,rax
   14001d62c:	je     0x14001d641
   14001d62e:	lea    rax,[rip+0x122d3]        # 0x14002f908
   14001d635:	add    r15,0x18
   14001d639:	inc    r12d
   14001d63c:	cmp    r15,rax
   14001d63f:	jle    0x14001d60f
   14001d641:	add    r14,0x2
   14001d645:	lea    rdx,[rip+0x123dc]        # 0x14002fa28
   14001d64c:	mov    rcx,r14
   14001d64f:	call   0x1400224f4
   14001d654:	mov    rbx,rax
   14001d657:	test   rax,rax
   14001d65a:	jne    0x14001d667
   14001d65c:	cmp    WORD PTR [r14],0x3b
   14001d661:	jne    0x14001d70a
   14001d667:	cmp    r12d,0x5
   14001d66b:	jg     0x14001d6b7
   14001d66d:	lea    rcx,[rsp+0x30]
   14001d672:	mov    r9,rax
   14001d675:	mov    r8,r14
   14001d678:	mov    edx,0x83
   14001d67d:	call   0x14000f9bc
   14001d682:	test   eax,eax
   14001d684:	jne    0x14001d799
   14001d68a:	lea    rax,[rbx+rbx*1]
   14001d68e:	cmp    rax,0x106
   14001d694:	jae    0x14001d793
   14001d69a:	lea    r8,[rsp+0x30]
   14001d69f:	mov    edx,r12d
   14001d6a2:	mov    rcx,rdi
   14001d6a5:	mov    WORD PTR [rsp+rax*1+0x30],r13w
   14001d6ab:	call   0x14001d7b0
   14001d6b0:	test   rax,rax
   14001d6b3:	je     0x14001d6b7
   14001d6b5:	inc    esi
   14001d6b7:	lea    rbx,[r14+rbx*2]
   14001d6bb:	cmp    WORD PTR [rbx],r13w
   14001d6bf:	je     0x14001d6cf
   14001d6c1:	add    rbx,0x2
   14001d6c5:	cmp    WORD PTR [rbx],r13w
   14001d6c9:	jne    0x14001d5ce
   14001d6cf:	test   esi,esi
   14001d6d1:	je     0x14001d78b
   14001d6d7:	mov    rcx,rdi
   14001d6da:	call   0x14001d370
   14001d6df:	mov    rcx,QWORD PTR [rsp+0x1f0]
   14001d6e7:	xor    rcx,rsp
   14001d6ea:	call   0x14000d0a0
   14001d6ef:	mov    rbx,QWORD PTR [rsp+0x258]
   14001d6f7:	add    rsp,0x200
   14001d6fe:	pop    r15
   14001d700:	pop    r14
   14001d702:	pop    r13
   14001d704:	pop    r12
   14001d706:	pop    rdi
   14001d707:	pop    rsi
   14001d708:	pop    rbp
   14001d709:	ret    
   14001d70a:	xor    eax,eax
   14001d70c:	jmp    0x14001d6df
   14001d70e:	lea    r9,[rsp+0x140]
   14001d716:	lea    rdx,[rsp+0x30]
   14001d71b:	mov    r8d,0x83
   14001d721:	mov    rcx,rbx
   14001d724:	mov    QWORD PTR [rsp+0x28],r13
   14001d729:	mov    QWORD PTR [rsp+0x20],0x55
   14001d732:	call   0x14001cb60
   14001d737:	test   rax,rax
   14001d73a:	je     0x14001d6df
   14001d73c:	mov    ebx,r13d
   14001d73f:	lea    r14,[rdi+0x18]
   14001d743:	test   ebx,ebx
   14001d745:	je     0x14001d773
   14001d747:	mov    rdx,QWORD PTR [r14]
   14001d74a:	lea    rcx,[rsp+0x30]
   14001d74f:	call   0x1400224b8
   14001d754:	test   eax,eax
   14001d756:	je     0x14001d771
   14001d758:	lea    r8,[rsp+0x30]
   14001d75d:	mov    edx,ebx
   14001d75f:	mov    rcx,rdi
   14001d762:	call   0x14001d7b0
   14001d767:	test   rax,rax
   14001d76a:	jne    0x14001d771
   14001d76c:	mov    ebp,r13d
   14001d76f:	jmp    0x14001d773
   14001d771:	inc    esi
   14001d773:	inc    ebx
   14001d775:	add    r14,0x20
   14001d779:	cmp    ebx,0x5
   14001d77c:	jle    0x14001d743
   14001d77e:	test   ebp,ebp
   14001d780:	jne    0x14001d6d7
   14001d786:	jmp    0x14001d6cf
   14001d78b:	mov    rax,r13
   14001d78e:	jmp    0x14001d6df
   14001d793:	call   0x1400116c8
   14001d798:	int3   
   14001d799:	xor    r9d,r9d
   14001d79c:	xor    r8d,r8d
   14001d79f:	xor    edx,edx
   14001d7a1:	xor    ecx,ecx
   14001d7a3:	mov    QWORD PTR [rsp+0x20],r13
   14001d7a8:	call   0x140008678
   14001d7ad:	int3   
   14001d7ae:	int3   
   14001d7af:	int3   
   14001d7b0:	mov    QWORD PTR [rsp+0x20],rbx
   14001d7b5:	push   rbp
   14001d7b6:	push   rsi
   14001d7b7:	push   rdi
   14001d7b8:	push   r12
   14001d7ba:	push   r13
   14001d7bc:	push   r14
   14001d7be:	push   r15
   14001d7c0:	lea    rbp,[rsp-0x230]
   14001d7c8:	sub    rsp,0x330
   14001d7cf:	mov    rax,QWORD PTR [rip+0x1926a]        # 0x140036a40
   14001d7d6:	xor    rax,rsp
   14001d7d9:	mov    QWORD PTR [rbp+0x220],rax
   14001d7e0:	mov    rbx,r8
   14001d7e3:	movsxd r12,edx
   14001d7e6:	mov    rdi,rcx
   14001d7e9:	call   0x14000b18c
   14001d7ee:	lea    r9,[rbp+0x170]
   14001d7f5:	lea    rdx,[rsp+0x60]
   14001d7fa:	lea    r14,[rax+0x370]
   14001d801:	lea    rax,[rsp+0x40]
   14001d806:	mov    r8d,0x83
   14001d80c:	mov    QWORD PTR [rsp+0x28],rax
   14001d811:	mov    rcx,rbx
   14001d814:	mov    QWORD PTR [rsp+0x20],0x55
   14001d81d:	call   0x14001cb60
   14001d822:	test   rax,rax
   14001d825:	jne    0x14001d853
   14001d827:	xor    eax,eax
   14001d829:	mov    rcx,QWORD PTR [rbp+0x220]
   14001d830:	xor    rcx,rsp
   14001d833:	call   0x14000d0a0
   14001d838:	mov    rbx,QWORD PTR [rsp+0x388]
   14001d840:	add    rsp,0x330
   14001d847:	pop    r15
   14001d849:	pop    r14
   14001d84b:	pop    r13
   14001d84d:	pop    r12
   14001d84f:	pop    rdi
   14001d850:	pop    rsi
   14001d851:	pop    rbp
   14001d852:	ret    
   14001d853:	mov    rbx,r12
   14001d856:	lea    rcx,[rsp+0x60]
   14001d85b:	shl    rbx,0x5
   14001d85f:	mov    rdx,QWORD PTR [rbx+rdi*1+0x18]
   14001d864:	call   0x1400224b8
   14001d869:	test   eax,eax
   14001d86b:	jne    0x14001d874
   14001d86d:	mov    rax,QWORD PTR [rbx+rdi*1+0x18]
   14001d872:	jmp    0x14001d829
   14001d874:	lea    rcx,[rsp+0x60]
   14001d879:	call   0x14000f9a0
   14001d87e:	mov    r15,rax
   14001d881:	lea    rcx,[rax*2+0x6]
   14001d889:	call   0x140007f54
   14001d88e:	mov    r13,rax
   14001d891:	test   rax,rax
   14001d894:	je     0x14001d827
   14001d896:	mov    rcx,QWORD PTR [rbx+rdi*1+0x18]
   14001d89b:	lea    r8,[rsp+0x60]
   14001d8a0:	lea    rdx,[r15+0x1]
   14001d8a4:	mov    QWORD PTR [rsp+0x48],rcx
   14001d8a9:	mov    rcx,QWORD PTR [rdi+r12*8+0x128]
   14001d8b1:	mov    QWORD PTR [rsp+0x50],rcx
   14001d8b6:	mov    ecx,DWORD PTR [rdi+0x4]
   14001d8b9:	mov    DWORD PTR [rsp+0x44],ecx
   14001d8bd:	lea    rcx,[rax+0x4]
   14001d8c1:	call   0x14000f934
   14001d8c6:	xor    r15d,r15d
   14001d8c9:	test   eax,eax
   14001d8cb:	jne    0x14001daa9
   14001d8d1:	cmp    WORD PTR [rsp+0x60],0x43
   14001d8d7:	lea    rax,[r13+0x4]
   14001d8db:	mov    QWORD PTR [rbx+rdi*1+0x18],rax
   14001d8e0:	jne    0x14001d8f4
   14001d8e2:	cmp    WORD PTR [rsp+0x62],r15w
   14001d8e8:	jne    0x14001d8f4
   14001d8ea:	mov    QWORD PTR [rdi+r12*8+0x128],r15
   14001d8f2:	jmp    0x14001d908
   14001d8f4:	lea    rcx,[rbp+0x170]
   14001d8fb:	call   0x14001c6c8
   14001d900:	mov    QWORD PTR [rdi+r12*8+0x128],rax
   14001d908:	cmp    r12d,0x2
   14001d90c:	jne    0x14001d9e8
   14001d912:	mov    eax,DWORD PTR [rsp+0x40]
   14001d916:	mov    r8d,r15d
   14001d919:	mov    rdx,r15
   14001d91c:	mov    DWORD PTR [rdi+0x4],eax
   14001d91f:	mov    rcx,QWORD PTR [r14+0x20]
   14001d923:	mov    eax,DWORD PTR [r14+rdx*8]
   14001d927:	cmp    DWORD PTR [rdi+0x4],eax
   14001d92a:	je     0x14001d945
   14001d92c:	mov    rax,QWORD PTR [r14+rdx*8]
   14001d930:	mov    QWORD PTR [r14+rdx*8],rcx
   14001d934:	inc    rdx
   14001d937:	inc    r8d
   14001d93a:	mov    rcx,rax
   14001d93d:	cmp    rdx,0x5
   14001d941:	jl     0x14001d923
   14001d943:	jmp    0x14001d958
   14001d945:	test   r8d,r8d
   14001d948:	je     0x14001d958
   14001d94a:	movsxd rdx,r8d
   14001d94d:	mov    rax,QWORD PTR [r14+rdx*8]
   14001d951:	mov    QWORD PTR [r14],rax
   14001d954:	mov    QWORD PTR [r14+rdx*8],rcx
   14001d958:	cmp    r8d,0x5
   14001d95c:	jne    0x14001d9dc
   14001d95e:	mov    eax,DWORD PTR [rdi+0x4]
   14001d961:	lea    r9d,[r8+0x7a]
   14001d965:	mov    DWORD PTR [rsp+0x30],0x1
   14001d96d:	mov    DWORD PTR [rsp+0x28],eax
   14001d971:	lea    rax,[rbp+0x70]
   14001d975:	lea    r8,[rip+0x12024]        # 0x14002f9a0
   14001d97c:	lea    edx,[r9-0x7e]
   14001d980:	xor    ecx,ecx
   14001d982:	mov    QWORD PTR [rsp+0x20],rax
   14001d987:	call   0x1400105e8
   14001d98c:	test   eax,eax
   14001d98e:	je     0x14001d9d2
   14001d990:	mov    edx,r15d
   14001d993:	lea    rcx,[rbp+0x70]
   14001d997:	mov    eax,0x1ff
   14001d99c:	inc    edx
   14001d99e:	and    WORD PTR [rcx],ax
   14001d9a1:	movsxd rax,edx
   14001d9a4:	lea    rcx,[rcx+0x2]
   14001d9a8:	cmp    rax,0x7f
   14001d9ac:	jb     0x14001d997
   14001d9ae:	mov    rdx,QWORD PTR [rip+0x19bcb]        # 0x140037580
   14001d9b5:	lea    rcx,[rbp+0x70]
   14001d9b9:	mov    r8d,0xfe
   14001d9bf:	call   0x1400223f0
   14001d9c4:	mov    ecx,r15d
   14001d9c7:	test   eax,eax
   14001d9c9:	sete   cl
   14001d9cc:	mov    DWORD PTR [r14+0x4],ecx
   14001d9d0:	jmp    0x14001d9d6
   14001d9d2:	mov    DWORD PTR [r14+0x4],r15d
   14001d9d6:	mov    eax,DWORD PTR [rdi+0x4]
   14001d9d9:	mov    DWORD PTR [r14],eax
   14001d9dc:	mov    eax,DWORD PTR [r14+0x4]
   14001d9e0:	mov    DWORD PTR [rdi+0xd0],eax
   14001d9e6:	jmp    0x14001da04
   14001d9e8:	cmp    r12d,0x1
   14001d9ec:	jne    0x14001d9f7
   14001d9ee:	mov    eax,DWORD PTR [rsp+0x40]
   14001d9f2:	mov    DWORD PTR [rdi+0x8],eax
   14001d9f5:	jmp    0x14001da04
   14001d9f7:	cmp    r12d,0x5
   14001d9fb:	jne    0x14001da04
   14001d9fd:	mov    eax,DWORD PTR [rsp+0x40]
   14001da01:	mov    DWORD PTR [rdi+0xc],eax
   14001da04:	lea    rax,[r12+r12*2]
   14001da08:	lea    rdx,[rip+0x11e91]        # 0x14002f8a0
   14001da0f:	mov    rcx,rdi
   14001da12:	call   QWORD PTR [rdx+rax*8]
   14001da15:	test   eax,eax
   14001da17:	je     0x14001da51
   14001da19:	mov    rax,QWORD PTR [rsp+0x48]
   14001da1e:	mov    QWORD PTR [rbx+rdi*1+0x18],rax
   14001da23:	mov    rcx,QWORD PTR [rdi+r12*8+0x128]
   14001da2b:	call   0x140006444
   14001da30:	mov    rax,QWORD PTR [rsp+0x50]
   14001da35:	mov    rcx,r13
   14001da38:	mov    QWORD PTR [rdi+r12*8+0x128],rax
   14001da40:	call   0x140006444
   14001da45:	mov    eax,DWORD PTR [rsp+0x44]
   14001da49:	mov    DWORD PTR [rdi+0x4],eax
   14001da4c:	jmp    0x14001d827
   14001da51:	lea    rcx,[rip+0x1905c]        # 0x140036ab4
   14001da58:	cmp    QWORD PTR [rsp+0x48],rcx
   14001da5d:	je     0x14001da97
   14001da5f:	mov    rcx,QWORD PTR [rbx+rdi*1+0x28]
   14001da64:	lock dec DWORD PTR [rcx]
   14001da67:	jne    0x14001da97
   14001da69:	mov    rcx,QWORD PTR [rbx+rdi*1+0x28]
   14001da6e:	call   0x140006444
   14001da73:	mov    rcx,QWORD PTR [rbx+rdi*1+0x20]
   14001da78:	call   0x140006444
   14001da7d:	mov    rcx,QWORD PTR [rdi+r12*8+0x128]
   14001da85:	call   0x140006444
   14001da8a:	mov    QWORD PTR [rbx+rdi*1+0x18],r15
   14001da8f:	mov    QWORD PTR [rdi+r12*8+0x128],r15
   14001da97:	mov    DWORD PTR [r13+0x0],0x1
   14001da9f:	mov    QWORD PTR [rbx+rdi*1+0x28],r13
   14001daa4:	jmp    0x14001d86d
   14001daa9:	xor    r9d,r9d
   14001daac:	xor    r8d,r8d
   14001daaf:	xor    edx,edx
   14001dab1:	xor    ecx,ecx
   14001dab3:	mov    QWORD PTR [rsp+0x20],r15
   14001dab8:	call   0x140008678
   14001dabd:	int3   
   14001dabe:	int3   
   14001dabf:	int3   
   14001dac0:	mov    rcx,QWORD PTR [rip+0x192b9]        # 0x140036d80
   14001dac7:	mov    rax,QWORD PTR [rcx+0xf0]
   14001dace:	mov    QWORD PTR [rip+0x19a6b],rax        # 0x140037540
   14001dad5:	mov    rax,QWORD PTR [rcx+0x108]
   14001dadc:	mov    QWORD PTR [rip+0x19a65],rax        # 0x140037548
   14001dae3:	mov    eax,DWORD PTR [rcx+0xd4]
   14001dae9:	mov    DWORD PTR [rip+0x18fc1],eax        # 0x140036ab0
   14001daef:	ret    
   14001daf0:	rex push rbx
   14001daf2:	sub    rsp,0x20
   14001daf6:	mov    edx,0x107
   14001dafb:	movzx  ebx,cx
   14001dafe:	call   0x140023bc8
   14001db03:	xor    edx,edx
   14001db05:	test   eax,eax
   14001db07:	jne    0x14001db0f
   14001db09:	cmp    bx,0x5f
   14001db0d:	jne    0x14001db14
   14001db0f:	mov    edx,0x1
   14001db14:	mov    eax,edx
   14001db16:	add    rsp,0x20
   14001db1a:	pop    rbx
   14001db1b:	ret    
   14001db1c:	rex push rbx
   14001db1e:	sub    rsp,0x20
   14001db22:	mov    edx,0x103
   14001db27:	movzx  ebx,cx
   14001db2a:	call   0x140023bc8
   14001db2f:	xor    edx,edx
   14001db31:	test   eax,eax
   14001db33:	jne    0x14001db3b
   14001db35:	cmp    bx,0x5f
   14001db39:	jne    0x14001db40
   14001db3b:	mov    edx,0x1
   14001db40:	mov    eax,edx
   14001db42:	add    rsp,0x20
   14001db46:	pop    rbx
   14001db47:	ret    
   14001db48:	rex push rbx
   14001db4a:	sub    rsp,0x40
   14001db4e:	mov    ebx,ecx
   14001db50:	lea    rcx,[rsp+0x20]
   14001db55:	call   0x14000a000
   14001db5a:	mov    rax,QWORD PTR [rsp+0x20]
   14001db5f:	movzx  edx,bl
   14001db62:	mov    rcx,QWORD PTR [rax+0x108]
   14001db69:	movzx  eax,WORD PTR [rcx+rdx*2]
   14001db6d:	and    eax,0x8000
   14001db72:	cmp    BYTE PTR [rsp+0x38],0x0
   14001db77:	je     0x14001db85
   14001db79:	mov    rcx,QWORD PTR [rsp+0x30]
   14001db7e:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14001db85:	add    rsp,0x40
   14001db89:	pop    rbx
   14001db8a:	ret    
   14001db8b:	int3   
   14001db8c:	mov    edx,0x107
   14001db91:	jmp    0x140023bc8
   14001db96:	int3   
   14001db97:	int3   
   14001db98:	mov    edx,0x103
   14001db9d:	jmp    0x140023bc8
   14001dba2:	int3   
   14001dba3:	int3   
   14001dba4:	cmp    cx,0x9
   14001dba8:	jne    0x14001dbb0
   14001dbaa:	mov    eax,0x40
   14001dbaf:	ret    
   14001dbb0:	mov    edx,0x40
   14001dbb5:	jmp    0x140023bc8
   14001dbba:	int3   
   14001dbbb:	int3   
   14001dbbc:	mov    edx,0x20
   14001dbc1:	jmp    0x140023bc8
   14001dbc6:	int3   
   14001dbc7:	int3   
   14001dbc8:	rex push rbx
   14001dbca:	sub    rsp,0x20
   14001dbce:	mov    edx,0x107
   14001dbd3:	movzx  ebx,cx
   14001dbd6:	call   0x140023bc8
   14001dbdb:	xor    edx,edx
   14001dbdd:	test   eax,eax
   14001dbdf:	jne    0x14001dbe7
   14001dbe1:	cmp    bx,0x5f
   14001dbe5:	jne    0x14001dbec
   14001dbe7:	mov    edx,0x1
   14001dbec:	mov    eax,edx
   14001dbee:	add    rsp,0x20
   14001dbf2:	pop    rbx
   14001dbf3:	ret    
   14001dbf4:	rex push rbx
   14001dbf6:	sub    rsp,0x20
   14001dbfa:	mov    edx,0x103
   14001dbff:	movzx  ebx,cx
   14001dc02:	call   0x140023bc8
   14001dc07:	xor    edx,edx
   14001dc09:	test   eax,eax
   14001dc0b:	jne    0x14001dc13
   14001dc0d:	cmp    bx,0x5f
   14001dc11:	jne    0x14001dc18
   14001dc13:	mov    edx,0x1
   14001dc18:	mov    eax,edx
   14001dc1a:	add    rsp,0x20
   14001dc1e:	pop    rbx
   14001dc1f:	ret    
   14001dc20:	mov    edx,0x4
   14001dc25:	jmp    0x140023bc8
   14001dc2a:	int3   
   14001dc2b:	int3   
   14001dc2c:	mov    edx,0x117
   14001dc31:	jmp    0x140023bc8
   14001dc36:	int3   
   14001dc37:	int3   
   14001dc38:	mov    edx,0x2
   14001dc3d:	jmp    0x140023bc8
   14001dc42:	int3   
   14001dc43:	int3   
   14001dc44:	mov    edx,0x157
   14001dc49:	jmp    0x140023bc8
   14001dc4e:	int3   
   14001dc4f:	int3   
   14001dc50:	mov    edx,0x10
   14001dc55:	jmp    0x140023bc8
   14001dc5a:	int3   
   14001dc5b:	int3   
   14001dc5c:	mov    edx,0x8
   14001dc61:	jmp    0x140023bc8
   14001dc66:	int3   
   14001dc67:	int3   
   14001dc68:	mov    edx,0x1
   14001dc6d:	jmp    0x140023bc8
   14001dc72:	int3   
   14001dc73:	int3   
   14001dc74:	mov    edx,0x80
   14001dc79:	jmp    0x140023bc8
   14001dc7e:	int3   
   14001dc7f:	int3   
   14001dc80:	rex push rbx
   14001dc82:	sub    rsp,0x40
   14001dc86:	mov    ebx,ecx
   14001dc88:	lea    rcx,[rsp+0x20]
   14001dc8d:	xor    edx,edx
   14001dc8f:	call   0x14000a000
   14001dc94:	mov    rax,QWORD PTR [rsp+0x20]
   14001dc99:	movzx  edx,bl
   14001dc9c:	mov    rcx,QWORD PTR [rax+0x108]
   14001dca3:	movzx  eax,WORD PTR [rcx+rdx*2]
   14001dca7:	and    eax,0x8000
   14001dcac:	cmp    BYTE PTR [rsp+0x38],0x0
   14001dcb1:	je     0x14001dcbf
   14001dcb3:	mov    rcx,QWORD PTR [rsp+0x30]
   14001dcb8:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14001dcbf:	add    rsp,0x40
   14001dcc3:	pop    rbx
   14001dcc4:	ret    
   14001dcc5:	int3   
   14001dcc6:	int3   
   14001dcc7:	int3   
   14001dcc8:	mov    edx,0x107
   14001dccd:	jmp    0x140023bc8
   14001dcd2:	int3   
   14001dcd3:	int3   
   14001dcd4:	mov    edx,0x103
   14001dcd9:	jmp    0x140023bc8
   14001dcde:	int3   
   14001dcdf:	int3   
   14001dce0:	xor    eax,eax
   14001dce2:	mov    edx,0x80
   14001dce7:	cmp    cx,dx
   14001dcea:	setb   al
   14001dced:	ret    
   14001dcee:	int3   
   14001dcef:	int3   
   14001dcf0:	cmp    cx,0x9
   14001dcf4:	jne    0x14001dcfc
   14001dcf6:	mov    eax,0x40
   14001dcfb:	ret    
   14001dcfc:	mov    edx,0x40
   14001dd01:	jmp    0x140023bc8
   14001dd06:	int3   
   14001dd07:	int3   
   14001dd08:	mov    edx,0x20
   14001dd0d:	jmp    0x140023bc8
   14001dd12:	int3   
   14001dd13:	int3   
   14001dd14:	mov    edx,0x4
   14001dd19:	jmp    0x140023bc8
   14001dd1e:	int3   
   14001dd1f:	int3   
   14001dd20:	mov    edx,0x117
   14001dd25:	jmp    0x140023bc8
   14001dd2a:	int3   
   14001dd2b:	int3   
   14001dd2c:	mov    edx,0x2
   14001dd31:	jmp    0x140023bc8
   14001dd36:	int3   
   14001dd37:	int3   
   14001dd38:	mov    edx,0x157
   14001dd3d:	jmp    0x140023bc8
   14001dd42:	int3   
   14001dd43:	int3   
   14001dd44:	mov    edx,0x10
   14001dd49:	jmp    0x140023bc8
   14001dd4e:	int3   
   14001dd4f:	int3   
   14001dd50:	mov    edx,0x8
   14001dd55:	jmp    0x140023bc8
   14001dd5a:	int3   
   14001dd5b:	int3   
   14001dd5c:	mov    edx,0x1
   14001dd61:	jmp    0x140023bc8
   14001dd66:	int3   
   14001dd67:	int3   
   14001dd68:	mov    edx,0x80
   14001dd6d:	jmp    0x140023bc8
   14001dd72:	int3   
   14001dd73:	int3   
   14001dd74:	sub    rcx,rdx
   14001dd77:	mov    r8d,0x3
   14001dd7d:	mov    eax,DWORD PTR [rdx]
   14001dd7f:	mov    DWORD PTR [rcx+rdx*1],eax
   14001dd82:	lea    rdx,[rdx+0x4]
   14001dd86:	dec    r8
   14001dd89:	jne    0x14001dd7d
   14001dd8b:	ret    
   14001dd8c:	and    QWORD PTR [rcx],0x0
   14001dd90:	and    DWORD PTR [rcx+0x8],0x0
   14001dd94:	ret    
   14001dd95:	int3   
   14001dd96:	int3   
   14001dd97:	int3   
   14001dd98:	mov    r9,rcx
   14001dd9b:	mov    eax,edx
   14001dd9d:	mov    ecx,0x1f
   14001dda2:	cdq    
   14001dda3:	mov    r8d,0x1
   14001dda9:	and    edx,ecx
   14001ddab:	add    eax,edx
   14001ddad:	mov    r10d,eax
   14001ddb0:	and    eax,ecx
   14001ddb2:	sub    eax,edx
   14001ddb4:	sar    r10d,0x5
   14001ddb8:	sub    ecx,eax
   14001ddba:	movsxd r11,r10d
   14001ddbd:	mov    eax,DWORD PTR [r9+r11*4]
   14001ddc1:	shl    r8d,cl
   14001ddc4:	xor    ecx,ecx
   14001ddc6:	lea    edx,[rax+r8*1]
   14001ddca:	cmp    edx,eax
   14001ddcc:	jb     0x14001ddd3
   14001ddce:	cmp    edx,r8d
   14001ddd1:	jae    0x14001ddd8
   14001ddd3:	mov    ecx,0x1
   14001ddd8:	lea    eax,[r10-0x1]
   14001dddc:	mov    DWORD PTR [r9+r11*4],edx
   14001dde0:	movsxd rdx,eax
   14001dde3:	test   eax,eax
   14001dde5:	js     0x14001de0e
   14001dde7:	test   ecx,ecx
   14001dde9:	je     0x14001de0e
   14001ddeb:	mov    eax,DWORD PTR [r9+rdx*4]
   14001ddef:	xor    ecx,ecx
   14001ddf1:	lea    r8d,[rax+0x1]
   14001ddf5:	cmp    r8d,eax
   14001ddf8:	jb     0x14001de00
   14001ddfa:	cmp    r8d,0x1
   14001ddfe:	jae    0x14001de05
   14001de00:	mov    ecx,0x1
   14001de05:	mov    DWORD PTR [r9+rdx*4],r8d
   14001de09:	dec    rdx
   14001de0c:	jns    0x14001dde7
   14001de0e:	mov    eax,ecx
   14001de10:	ret    
   14001de11:	int3   
   14001de12:	int3   
   14001de13:	int3   
   14001de14:	xor    edx,edx
   14001de16:	cmp    DWORD PTR [rcx+rdx*4],0x0
   14001de1a:	jne    0x14001de2b
   14001de1c:	inc    rdx
   14001de1f:	cmp    rdx,0x3
   14001de23:	jl     0x14001de16
   14001de25:	mov    eax,0x1
   14001de2a:	ret    
   14001de2b:	xor    eax,eax
   14001de2d:	ret    
   14001de2e:	int3   
   14001de2f:	int3   
   14001de30:	mov    QWORD PTR [rsp+0x8],rbx
   14001de35:	mov    QWORD PTR [rsp+0x10],rbp
   14001de3a:	mov    QWORD PTR [rsp+0x18],rsi
   14001de3f:	push   rdi
   14001de40:	push   r14
   14001de42:	push   r15
   14001de44:	sub    rsp,0x20
   14001de48:	lea    r10d,[rdx-0x1]
   14001de4c:	xor    ebx,ebx
   14001de4e:	or     r11d,0xffffffff
   14001de52:	lea    esi,[rbx+0x1f]
   14001de55:	lea    eax,[r10+0x1]
   14001de59:	mov    r8,rcx
   14001de5c:	cdq    
   14001de5d:	mov    r14d,esi
   14001de60:	lea    r9d,[rbx+0x3]
   14001de64:	and    edx,esi
   14001de66:	add    eax,edx
   14001de68:	mov    edi,eax
   14001de6a:	and    eax,esi
   14001de6c:	sub    eax,edx
   14001de6e:	sar    edi,0x5
   14001de71:	sub    r14d,eax
   14001de74:	movsxd r15,edi
   14001de77:	mov    eax,DWORD PTR [rcx+r15*4]
   14001de7b:	bt     eax,r14d
   14001de7f:	jae    0x14001df21
   14001de85:	mov    ecx,r14d
   14001de88:	mov    edx,r11d
   14001de8b:	movsxd rax,edi
   14001de8e:	shl    edx,cl
   14001de90:	not    edx
   14001de92:	test   DWORD PTR [r8+rax*4],edx
   14001de96:	jne    0x14001deb0
   14001de98:	lea    eax,[rdi+0x1]
   14001de9b:	movsxd rcx,eax
   14001de9e:	jmp    0x14001dea9
   14001dea0:	cmp    DWORD PTR [r8+rcx*4],ebx
   14001dea4:	jne    0x14001deb0
   14001dea6:	inc    rcx
   14001dea9:	cmp    rcx,r9
   14001deac:	jl     0x14001dea0
   14001deae:	jmp    0x14001df21
   14001deb0:	mov    eax,r10d
   14001deb3:	mov    r10d,0x1
   14001deb9:	cdq    
   14001deba:	and    edx,esi
   14001debc:	add    eax,edx
   14001debe:	mov    ebp,eax
   14001dec0:	and    eax,esi
   14001dec2:	sub    eax,edx
   14001dec4:	sar    ebp,0x5
   14001dec7:	sub    esi,eax
   14001dec9:	mov    cl,sil
   14001decc:	movsxd rsi,ebp
   14001decf:	mov    eax,DWORD PTR [r8+rsi*4]
   14001ded3:	shl    r10d,cl
   14001ded6:	mov    ecx,ebx
   14001ded8:	lea    edx,[rax+r10*1]
   14001dedc:	cmp    edx,eax
   14001dede:	jb     0x14001dee5
   14001dee0:	cmp    edx,r10d
   14001dee3:	jae    0x14001deea
   14001dee5:	mov    ecx,0x1
   14001deea:	lea    eax,[rbp-0x1]
   14001deed:	mov    DWORD PTR [r8+rsi*4],edx
   14001def1:	movsxd rdx,eax
   14001def4:	test   eax,eax
   14001def6:	js     0x14001df1f
   14001def8:	test   ecx,ecx
   14001defa:	je     0x14001df1f
   14001defc:	mov    eax,DWORD PTR [r8+rdx*4]
   14001df00:	mov    ecx,ebx
   14001df02:	lea    r10d,[rax+0x1]
   14001df06:	cmp    r10d,eax
   14001df09:	jb     0x14001df11
   14001df0b:	cmp    r10d,0x1
   14001df0f:	jae    0x14001df16
   14001df11:	mov    ecx,0x1
   14001df16:	mov    DWORD PTR [r8+rdx*4],r10d
   14001df1a:	dec    rdx
   14001df1d:	jns    0x14001def8
   14001df1f:	mov    ebx,ecx
   14001df21:	lea    eax,[rdi+0x1]
   14001df24:	mov    ecx,r14d
   14001df27:	shl    r11d,cl
   14001df2a:	movsxd rdx,eax
   14001df2d:	and    DWORD PTR [r8+r15*4],r11d
   14001df31:	cmp    rdx,r9
   14001df34:	jge    0x14001df4b
   14001df36:	sub    r9,rdx
   14001df39:	lea    rcx,[r8+rdx*4]
   14001df3d:	xor    edx,edx
   14001df3f:	shl    r9,0x2
   14001df43:	mov    r8,r9
   14001df46:	call   0x140007150
   14001df4b:	mov    rbp,QWORD PTR [rsp+0x48]
   14001df50:	mov    rsi,QWORD PTR [rsp+0x50]
   14001df55:	mov    eax,ebx
   14001df57:	mov    rbx,QWORD PTR [rsp+0x40]
   14001df5c:	add    rsp,0x20
   14001df60:	pop    r15
   14001df62:	pop    r14
   14001df64:	pop    rdi
   14001df65:	ret    
   14001df66:	int3   
   14001df67:	int3   
   14001df68:	mov    rax,rsp
   14001df6b:	mov    QWORD PTR [rax+0x8],rbx
   14001df6f:	mov    QWORD PTR [rax+0x10],rbp
   14001df73:	mov    QWORD PTR [rax+0x18],rsi
   14001df77:	mov    QWORD PTR [rax+0x20],rdi
   14001df7b:	xor    r9d,r9d
   14001df7e:	or     r10d,0xffffffff
   14001df82:	mov    eax,edx
   14001df84:	cdq    
   14001df85:	mov    rbx,rcx
   14001df88:	lea    ebp,[r9+0x20]
   14001df8c:	and    edx,0x1f
   14001df8f:	mov    r8,rbx
   14001df92:	lea    edi,[r9+0x3]
   14001df96:	add    eax,edx
   14001df98:	mov    r11d,eax
   14001df9b:	and    eax,0x1f
   14001df9e:	sub    eax,edx
   14001dfa0:	sar    r11d,0x5
   14001dfa4:	mov    ecx,eax
   14001dfa6:	mov    esi,eax
   14001dfa8:	shl    r10d,cl
   14001dfab:	sub    ebp,eax
   14001dfad:	not    r10d
   14001dfb0:	mov    eax,DWORD PTR [r8]
   14001dfb3:	mov    ecx,esi
   14001dfb5:	mov    edx,eax
   14001dfb7:	shr    eax,cl
   14001dfb9:	mov    ecx,ebp
   14001dfbb:	or     eax,r9d
   14001dfbe:	and    edx,r10d
   14001dfc1:	mov    r9d,edx
   14001dfc4:	mov    DWORD PTR [r8],eax
   14001dfc7:	lea    r8,[r8+0x4]
   14001dfcb:	shl    r9d,cl
   14001dfce:	dec    rdi
   14001dfd1:	jne    0x14001dfb0
   14001dfd3:	movsxd r9,r11d
   14001dfd6:	lea    edx,[rdi+0x2]
   14001dfd9:	lea    rcx,[rbx+0x8]
   14001dfdd:	mov    r8,r9
   14001dfe0:	neg    r8
   14001dfe3:	cmp    rdx,r9
   14001dfe6:	jl     0x14001dff0
   14001dfe8:	mov    eax,DWORD PTR [rcx+r8*4]
   14001dfec:	mov    DWORD PTR [rcx],eax
   14001dfee:	jmp    0x14001dff3
   14001dff0:	and    DWORD PTR [rcx],0x0
   14001dff3:	sub    rcx,0x4
   14001dff7:	dec    rdx
   14001dffa:	jns    0x14001dfe3
   14001dffc:	mov    rbx,QWORD PTR [rsp+0x8]
   14001e001:	mov    rbp,QWORD PTR [rsp+0x10]
   14001e006:	mov    rsi,QWORD PTR [rsp+0x18]
   14001e00b:	mov    rdi,QWORD PTR [rsp+0x20]
   14001e010:	ret    
   14001e011:	int3   
   14001e012:	int3   
   14001e013:	int3   
   14001e014:	mov    eax,edx
   14001e016:	mov    r9,rcx
   14001e019:	mov    ecx,0x1f
   14001e01e:	cdq    
   14001e01f:	and    edx,ecx
   14001e021:	add    eax,edx
   14001e023:	mov    r8d,eax
   14001e026:	and    eax,ecx
   14001e028:	sub    eax,edx
   14001e02a:	or     edx,0xffffffff
   14001e02d:	sar    r8d,0x5
   14001e031:	sub    ecx,eax
   14001e033:	movsxd rax,r8d
   14001e036:	shl    edx,cl
   14001e038:	not    edx
   14001e03a:	test   DWORD PTR [r9+rax*4],edx
   14001e03e:	je     0x14001e043
   14001e040:	xor    eax,eax
   14001e042:	ret    
   14001e043:	lea    eax,[r8+0x1]
   14001e047:	movsxd rcx,eax
   14001e04a:	jmp    0x14001e056
   14001e04c:	cmp    DWORD PTR [r9+rcx*4],0x0
   14001e051:	jne    0x14001e040
   14001e053:	inc    rcx
   14001e056:	cmp    rcx,0x3
   14001e05a:	jl     0x14001e04c
   14001e05c:	mov    eax,0x1
   14001e061:	ret    
   14001e062:	int3   
   14001e063:	int3   
   14001e064:	lea    r9d,[rcx+rdx*1]
   14001e068:	xor    eax,eax
   14001e06a:	cmp    r9d,ecx
   14001e06d:	jb     0x14001e074
   14001e06f:	cmp    r9d,edx
   14001e072:	jae    0x14001e079
   14001e074:	mov    eax,0x1
   14001e079:	mov    DWORD PTR [r8],r9d
   14001e07c:	ret    
   14001e07d:	int3   
   14001e07e:	int3   
   14001e07f:	int3   
   14001e080:	mov    QWORD PTR [rsp+0x8],rbx
   14001e085:	push   rbp
   14001e086:	push   rsi
   14001e087:	push   rdi
   14001e088:	push   r12
   14001e08a:	push   r13
   14001e08c:	push   r14
   14001e08e:	push   r15
   14001e090:	mov    rbp,rsp
   14001e093:	sub    rsp,0x70
   14001e097:	mov    rax,QWORD PTR [rip+0x189a2]        # 0x140036a40
   14001e09e:	xor    rax,rsp
   14001e0a1:	mov    QWORD PTR [rbp-0x10],rax
   14001e0a5:	movzx  eax,WORD PTR [rcx+0xa]
   14001e0a9:	movzx  r11d,WORD PTR [rcx]
   14001e0ad:	xor    ebx,ebx
   14001e0af:	mov    edi,eax
   14001e0b1:	and    eax,0x8000
   14001e0b6:	shl    r11d,0x10
   14001e0ba:	mov    DWORD PTR [rbp-0x40],eax
   14001e0bd:	mov    eax,DWORD PTR [rcx+0x6]
   14001e0c0:	and    edi,0x7fff
   14001e0c6:	mov    DWORD PTR [rbp-0x20],eax
   14001e0c9:	mov    eax,DWORD PTR [rcx+0x2]
   14001e0cc:	sub    edi,0x3fff
   14001e0d2:	mov    r13d,0x1f
   14001e0d8:	mov    r9,r8
   14001e0db:	mov    QWORD PTR [rbp-0x48],r8
   14001e0df:	mov    DWORD PTR [rbp-0x1c],eax
   14001e0e2:	mov    QWORD PTR [rbp-0x38],rdx
   14001e0e6:	mov    DWORD PTR [rbp-0x2c],r11d
   14001e0ea:	mov    DWORD PTR [rbp-0x18],r11d
   14001e0ee:	lea    esi,[rbx+0x1]
   14001e0f1:	lea    r14d,[r13-0x1c]
   14001e0f5:	cmp    edi,0xffffc001
   14001e0fb:	jne    0x14001e126
   14001e0fd:	mov    r8d,ebx
   14001e100:	mov    eax,ebx
   14001e102:	cmp    DWORD PTR [rbp+rax*4-0x20],ebx
   14001e106:	jne    0x14001e115
   14001e108:	add    rax,rsi
   14001e10b:	cmp    rax,r14
   14001e10e:	jl     0x14001e102
   14001e110:	jmp    0x14001e5c7
   14001e115:	mov    QWORD PTR [rbp-0x20],rbx
   14001e119:	mov    DWORD PTR [rbp-0x18],ebx
   14001e11c:	mov    ebx,0x2
   14001e121:	jmp    0x14001e5c7
   14001e126:	mov    rax,QWORD PTR [rbp-0x20]
   14001e12a:	or     r15d,0xffffffff
   14001e12e:	mov    DWORD PTR [rbp-0x50],edi
   14001e131:	mov    QWORD PTR [rbp-0x28],rax
   14001e135:	mov    eax,DWORD PTR [r8+0x8]
   14001e139:	mov    r8d,r13d
   14001e13c:	dec    eax
   14001e13e:	mov    r12d,ebx
   14001e141:	mov    DWORD PTR [rbp-0x4c],eax
   14001e144:	inc    eax
   14001e146:	cdq    
   14001e147:	and    edx,r13d
   14001e14a:	add    eax,edx
   14001e14c:	mov    r9d,eax
   14001e14f:	and    eax,r13d
   14001e152:	sar    r9d,0x5
   14001e156:	sub    eax,edx
   14001e158:	sub    r8d,eax
   14001e15b:	movsxd r10,r9d
   14001e15e:	mov    ecx,DWORD PTR [rbp+r10*4-0x20]
   14001e163:	mov    DWORD PTR [rbp-0x30],r8d
   14001e167:	bt     ecx,r8d
   14001e16b:	jae    0x14001e20f
   14001e171:	mov    ecx,r8d
   14001e174:	mov    eax,r15d
   14001e177:	movsxd rdx,r9d
   14001e17a:	shl    eax,cl
   14001e17c:	not    eax
   14001e17e:	test   DWORD PTR [rbp+rdx*4-0x20],eax
   14001e182:	jne    0x14001e19d
   14001e184:	lea    eax,[r9+0x1]
   14001e188:	movsxd rcx,eax
   14001e18b:	jmp    0x14001e196
   14001e18d:	cmp    DWORD PTR [rbp+rcx*4-0x20],ebx
   14001e191:	jne    0x14001e19d
   14001e193:	add    rcx,rsi
   14001e196:	cmp    rcx,r14
   14001e199:	jl     0x14001e18d
   14001e19b:	jmp    0x14001e20f
   14001e19d:	mov    eax,DWORD PTR [rbp-0x4c]
   14001e1a0:	mov    ecx,r13d
   14001e1a3:	cdq    
   14001e1a4:	and    edx,r13d
   14001e1a7:	add    eax,edx
   14001e1a9:	mov    r8d,eax
   14001e1ac:	and    eax,r13d
   14001e1af:	sub    eax,edx
   14001e1b1:	sar    r8d,0x5
   14001e1b5:	mov    edx,esi
   14001e1b7:	sub    ecx,eax
   14001e1b9:	movsxd r10,r8d
   14001e1bc:	mov    eax,DWORD PTR [rbp+r10*4-0x20]
   14001e1c1:	shl    edx,cl
   14001e1c3:	lea    ecx,[rax+rdx*1]
   14001e1c6:	cmp    ecx,eax
   14001e1c8:	jb     0x14001e1ce
   14001e1ca:	cmp    ecx,edx
   14001e1cc:	jae    0x14001e1d1
   14001e1ce:	mov    r12d,esi
   14001e1d1:	lea    eax,[r8-0x1]
   14001e1d5:	mov    DWORD PTR [rbp+r10*4-0x20],ecx
   14001e1da:	movsxd rdx,eax
   14001e1dd:	test   eax,eax
   14001e1df:	js     0x14001e208
   14001e1e1:	test   r12d,r12d
   14001e1e4:	je     0x14001e208
   14001e1e6:	mov    eax,DWORD PTR [rbp+rdx*4-0x20]
   14001e1ea:	mov    r12d,ebx
   14001e1ed:	lea    r8d,[rax+0x1]
   14001e1f1:	cmp    r8d,eax
   14001e1f4:	jb     0x14001e1fb
   14001e1f6:	cmp    r8d,esi
   14001e1f9:	jae    0x14001e1fe
   14001e1fb:	mov    r12d,esi
   14001e1fe:	mov    DWORD PTR [rbp+rdx*4-0x20],r8d
   14001e203:	sub    rdx,rsi
   14001e206:	jns    0x14001e1e1
   14001e208:	mov    r8d,DWORD PTR [rbp-0x30]
   14001e20c:	movsxd r10,r9d
   14001e20f:	mov    ecx,r8d
   14001e212:	mov    eax,r15d
   14001e215:	shl    eax,cl
   14001e217:	and    DWORD PTR [rbp+r10*4-0x20],eax
   14001e21c:	lea    eax,[r9+0x1]
   14001e220:	movsxd rdx,eax
   14001e223:	cmp    rdx,r14
   14001e226:	jge    0x14001e245
   14001e228:	lea    rcx,[rbp-0x20]
   14001e22c:	mov    r8,r14
   14001e22f:	sub    r8,rdx
   14001e232:	lea    rcx,[rcx+rdx*4]
   14001e236:	xor    edx,edx
   14001e238:	shl    r8,0x2
   14001e23c:	call   0x140007150
   14001e241:	mov    r11d,DWORD PTR [rbp-0x2c]
   14001e245:	test   r12d,r12d
   14001e248:	je     0x14001e24c
   14001e24a:	add    edi,esi
   14001e24c:	mov    r9,QWORD PTR [rbp-0x48]
   14001e250:	mov    ecx,DWORD PTR [r9+0x4]
   14001e254:	mov    eax,ecx
   14001e256:	sub    eax,DWORD PTR [r9+0x8]
   14001e25a:	cmp    edi,eax
   14001e25c:	jge    0x14001e272
   14001e25e:	mov    QWORD PTR [rbp-0x20],rbx
   14001e262:	mov    DWORD PTR [rbp-0x18],ebx
   14001e265:	mov    r8d,ebx
   14001e268:	mov    ebx,0x2
   14001e26d:	jmp    0x14001e5c3
   14001e272:	cmp    edi,ecx
   14001e274:	jg     0x14001e4ac
   14001e27a:	sub    ecx,DWORD PTR [rbp-0x50]
   14001e27d:	mov    rax,QWORD PTR [rbp-0x28]
   14001e281:	mov    r10d,r15d
   14001e284:	mov    QWORD PTR [rbp-0x20],rax
   14001e288:	mov    eax,ecx
   14001e28a:	mov    DWORD PTR [rbp-0x18],r11d
   14001e28e:	cdq    
   14001e28f:	mov    r11,r14
   14001e292:	mov    r9d,ebx
   14001e295:	and    edx,r13d
   14001e298:	lea    r8,[rbp-0x20]
   14001e29c:	add    eax,edx
   14001e29e:	mov    r12d,eax
   14001e2a1:	and    eax,r13d
   14001e2a4:	sub    eax,edx
   14001e2a6:	sar    r12d,0x5
   14001e2aa:	mov    ecx,eax
   14001e2ac:	mov    edi,eax
   14001e2ae:	mov    eax,0x20
   14001e2b3:	shl    r10d,cl
   14001e2b6:	sub    eax,ecx
   14001e2b8:	mov    r14d,eax
   14001e2bb:	not    r10d
   14001e2be:	mov    eax,DWORD PTR [r8]
   14001e2c1:	mov    ecx,edi
   14001e2c3:	mov    edx,eax
   14001e2c5:	shr    eax,cl
   14001e2c7:	mov    ecx,r14d
   14001e2ca:	or     eax,r9d
   14001e2cd:	and    edx,r10d
   14001e2d0:	mov    r9d,edx
   14001e2d3:	mov    DWORD PTR [r8],eax
   14001e2d6:	lea    r8,[r8+0x4]
   14001e2da:	shl    r9d,cl
   14001e2dd:	sub    r11,rsi
   14001e2e0:	jne    0x14001e2be
   14001e2e2:	movsxd r10,r12d
   14001e2e5:	lea    edi,[r11+0x2]
   14001e2e9:	lea    r14d,[r11+0x3]
   14001e2ed:	mov    r9,r10
   14001e2f0:	mov    r8d,edi
   14001e2f3:	neg    r9
   14001e2f6:	cmp    r8,r10
   14001e2f9:	jl     0x14001e310
   14001e2fb:	mov    rdx,r8
   14001e2fe:	shl    rdx,0x2
   14001e302:	lea    rax,[rdx+r9*4]
   14001e306:	mov    ecx,DWORD PTR [rbp+rax*1-0x20]
   14001e30a:	mov    DWORD PTR [rbp+rdx*1-0x20],ecx
   14001e30e:	jmp    0x14001e315
   14001e310:	mov    DWORD PTR [rbp+r8*4-0x20],ebx
   14001e315:	sub    r8,rsi
   14001e318:	jns    0x14001e2f6
   14001e31a:	mov    r8d,DWORD PTR [rbp-0x4c]
   14001e31e:	mov    r11d,r13d
   14001e321:	lea    eax,[r8+0x1]
   14001e325:	cdq    
   14001e326:	and    edx,r13d
   14001e329:	add    eax,edx
   14001e32b:	mov    r9d,eax
   14001e32e:	and    eax,r13d
   14001e331:	sub    eax,edx
   14001e333:	sar    r9d,0x5
   14001e337:	sub    r11d,eax
   14001e33a:	movsxd rax,r9d
   14001e33d:	mov    ecx,DWORD PTR [rbp+rax*4-0x20]
   14001e341:	bt     ecx,r11d
   14001e345:	jae    0x14001e3e3
   14001e34b:	mov    ecx,r11d
   14001e34e:	mov    eax,r15d
   14001e351:	movsxd rdx,r9d
   14001e354:	shl    eax,cl
   14001e356:	not    eax
   14001e358:	test   DWORD PTR [rbp+rdx*4-0x20],eax
   14001e35c:	jne    0x14001e377
   14001e35e:	lea    eax,[r9+0x1]
   14001e362:	movsxd rcx,eax
   14001e365:	jmp    0x14001e370
   14001e367:	cmp    DWORD PTR [rbp+rcx*4-0x20],ebx
   14001e36b:	jne    0x14001e377
   14001e36d:	add    rcx,rsi
   14001e370:	cmp    rcx,r14
   14001e373:	jl     0x14001e367
   14001e375:	jmp    0x14001e3e3
   14001e377:	mov    eax,r8d
   14001e37a:	mov    ecx,r13d
   14001e37d:	cdq    
   14001e37e:	and    edx,r13d
   14001e381:	add    eax,edx
   14001e383:	mov    r10d,eax
   14001e386:	and    eax,r13d
   14001e389:	sub    eax,edx
   14001e38b:	sar    r10d,0x5
   14001e38f:	mov    edx,esi
   14001e391:	sub    ecx,eax
   14001e393:	movsxd r12,r10d
   14001e396:	mov    eax,DWORD PTR [rbp+r12*4-0x20]
   14001e39b:	shl    edx,cl
   14001e39d:	mov    ecx,ebx
   14001e39f:	lea    r8d,[rax+rdx*1]
   14001e3a3:	cmp    r8d,eax
   14001e3a6:	jb     0x14001e3ad
   14001e3a8:	cmp    r8d,edx
   14001e3ab:	jae    0x14001e3af
   14001e3ad:	mov    ecx,esi
   14001e3af:	lea    eax,[r10-0x1]
   14001e3b3:	mov    DWORD PTR [rbp+r12*4-0x20],r8d
   14001e3b8:	movsxd rdx,eax
   14001e3bb:	test   eax,eax
   14001e3bd:	js     0x14001e3e3
   14001e3bf:	test   ecx,ecx
   14001e3c1:	je     0x14001e3e3
   14001e3c3:	mov    eax,DWORD PTR [rbp+rdx*4-0x20]
   14001e3c7:	mov    ecx,ebx
   14001e3c9:	lea    r8d,[rax+0x1]
   14001e3cd:	cmp    r8d,eax
   14001e3d0:	jb     0x14001e3d7
   14001e3d2:	cmp    r8d,esi
   14001e3d5:	jae    0x14001e3d9
   14001e3d7:	mov    ecx,esi
   14001e3d9:	mov    DWORD PTR [rbp+rdx*4-0x20],r8d
   14001e3de:	sub    rdx,rsi
   14001e3e1:	jns    0x14001e3bf
   14001e3e3:	mov    ecx,r11d
   14001e3e6:	mov    eax,r15d
   14001e3e9:	shl    eax,cl
   14001e3eb:	movsxd rcx,r9d
   14001e3ee:	and    DWORD PTR [rbp+rcx*4-0x20],eax
   14001e3f2:	lea    eax,[r9+0x1]
   14001e3f6:	movsxd rdx,eax
   14001e3f9:	cmp    rdx,r14
   14001e3fc:	jge    0x14001e417
   14001e3fe:	lea    rcx,[rbp-0x20]
   14001e402:	mov    r8,r14
   14001e405:	sub    r8,rdx
   14001e408:	lea    rcx,[rcx+rdx*4]
   14001e40c:	xor    edx,edx
   14001e40e:	shl    r8,0x2
   14001e412:	call   0x140007150
   14001e417:	mov    rax,QWORD PTR [rbp-0x48]
   14001e41b:	mov    r12d,0x20
   14001e421:	mov    r9d,ebx
   14001e424:	mov    eax,DWORD PTR [rax+0xc]
   14001e427:	lea    r8,[rbp-0x20]
   14001e42b:	add    eax,esi
   14001e42d:	cdq    
   14001e42e:	and    edx,r13d
   14001e431:	add    eax,edx
   14001e433:	mov    r10d,eax
   14001e436:	and    eax,r13d
   14001e439:	sub    eax,edx
   14001e43b:	sar    r10d,0x5
   14001e43f:	mov    ecx,eax
   14001e441:	mov    r11d,eax
   14001e444:	shl    r15d,cl
   14001e447:	sub    r12d,eax
   14001e44a:	not    r15d
   14001e44d:	mov    eax,DWORD PTR [r8]
   14001e450:	mov    ecx,r11d
   14001e453:	mov    edx,eax
   14001e455:	shr    eax,cl
   14001e457:	mov    ecx,r12d
   14001e45a:	or     eax,r9d
   14001e45d:	and    edx,r15d
   14001e460:	mov    r9d,edx
   14001e463:	mov    DWORD PTR [r8],eax
   14001e466:	lea    r8,[r8+0x4]
   14001e46a:	shl    r9d,cl
   14001e46d:	sub    r14,rsi
   14001e470:	jne    0x14001e44d
   14001e472:	movsxd r10,r10d
   14001e475:	mov    r8,rdi
   14001e478:	mov    r9,r10
   14001e47b:	neg    r9
   14001e47e:	cmp    r8,r10
   14001e481:	jl     0x14001e498
   14001e483:	mov    rdx,r8
   14001e486:	shl    rdx,0x2
   14001e48a:	lea    rax,[rdx+r9*4]
   14001e48e:	mov    ecx,DWORD PTR [rbp+rax*1-0x20]
   14001e492:	mov    DWORD PTR [rbp+rdx*1-0x20],ecx
   14001e496:	jmp    0x14001e49d
   14001e498:	mov    DWORD PTR [rbp+r8*4-0x20],ebx
   14001e49d:	sub    r8,rsi
   14001e4a0:	jns    0x14001e47e
   14001e4a2:	mov    r8d,ebx
   14001e4a5:	mov    ebx,edi
   14001e4a7:	jmp    0x14001e5bf
   14001e4ac:	mov    eax,DWORD PTR [r9+0xc]
   14001e4b0:	mov    r10d,DWORD PTR [r9]
   14001e4b3:	mov    r12d,0x20
   14001e4b9:	cdq    
   14001e4ba:	and    edx,r13d
   14001e4bd:	add    eax,edx
   14001e4bf:	mov    r11d,eax
   14001e4c2:	and    eax,r13d
   14001e4c5:	sub    eax,edx
   14001e4c7:	sar    r11d,0x5
   14001e4cb:	mov    ecx,eax
   14001e4cd:	shl    r15d,cl
   14001e4d0:	not    r15d
   14001e4d3:	cmp    edi,r10d
   14001e4d6:	jl     0x14001e553
   14001e4d8:	mov    QWORD PTR [rbp-0x20],rbx
   14001e4dc:	bts    DWORD PTR [rbp-0x20],0x1f
   14001e4e1:	mov    DWORD PTR [rbp-0x18],ebx
   14001e4e4:	sub    r12d,eax
   14001e4e7:	mov    edi,eax
   14001e4e9:	mov    r9d,ebx
   14001e4ec:	lea    r8,[rbp-0x20]
   14001e4f0:	mov    eax,DWORD PTR [r8]
   14001e4f3:	mov    ecx,edi
   14001e4f5:	mov    edx,r15d
   14001e4f8:	and    edx,eax
   14001e4fa:	shr    eax,cl
   14001e4fc:	mov    ecx,r12d
   14001e4ff:	or     eax,r9d
   14001e502:	mov    r9d,edx
   14001e505:	shl    r9d,cl
   14001e508:	mov    DWORD PTR [r8],eax
   14001e50b:	lea    r8,[r8+0x4]
   14001e50f:	sub    r14,rsi
   14001e512:	jne    0x14001e4f0
   14001e514:	movsxd r9,r11d
   14001e517:	lea    edi,[r14+0x2]
   14001e51b:	mov    r8,r9
   14001e51e:	neg    r8
   14001e521:	cmp    rdi,r9
   14001e524:	jl     0x14001e53b
   14001e526:	mov    rdx,rdi
   14001e529:	shl    rdx,0x2
   14001e52d:	lea    rax,[rdx+r8*4]
   14001e531:	mov    ecx,DWORD PTR [rbp+rax*1-0x20]
   14001e535:	mov    DWORD PTR [rbp+rdx*1-0x20],ecx
   14001e539:	jmp    0x14001e53f
   14001e53b:	mov    DWORD PTR [rbp+rdi*4-0x20],ebx
   14001e53f:	sub    rdi,rsi
   14001e542:	jns    0x14001e521
   14001e544:	mov    r9,QWORD PTR [rbp-0x48]
   14001e548:	mov    ebx,esi
   14001e54a:	mov    r8d,DWORD PTR [r9+0x14]
   14001e54e:	add    r8d,r10d
   14001e551:	jmp    0x14001e5c3
   14001e553:	mov    r8d,DWORD PTR [r9+0x14]
   14001e557:	btr    DWORD PTR [rbp-0x20],0x1f
   14001e55c:	mov    r10d,ebx
   14001e55f:	add    r8d,edi
   14001e562:	mov    edi,eax
   14001e564:	sub    r12d,eax
   14001e567:	lea    r9,[rbp-0x20]
   14001e56b:	mov    eax,DWORD PTR [r9]
   14001e56e:	mov    ecx,edi
   14001e570:	mov    edx,eax
   14001e572:	shr    eax,cl
   14001e574:	mov    ecx,r12d
   14001e577:	or     eax,r10d
   14001e57a:	and    edx,r15d
   14001e57d:	mov    r10d,edx
   14001e580:	mov    DWORD PTR [r9],eax
   14001e583:	lea    r9,[r9+0x4]
   14001e587:	shl    r10d,cl
   14001e58a:	sub    r14,rsi
   14001e58d:	jne    0x14001e56b
   14001e58f:	movsxd r10,r11d
   14001e592:	lea    edi,[r14+0x2]
   14001e596:	mov    r9,r10
   14001e599:	neg    r9
   14001e59c:	cmp    rdi,r10
   14001e59f:	jl     0x14001e5b6
   14001e5a1:	mov    rdx,rdi
   14001e5a4:	shl    rdx,0x2
   14001e5a8:	lea    rax,[rdx+r9*4]
   14001e5ac:	mov    ecx,DWORD PTR [rbp+rax*1-0x20]
   14001e5b0:	mov    DWORD PTR [rbp+rdx*1-0x20],ecx
   14001e5b4:	jmp    0x14001e5ba
   14001e5b6:	mov    DWORD PTR [rbp+rdi*4-0x20],ebx
   14001e5ba:	sub    rdi,rsi
   14001e5bd:	jns    0x14001e59c
   14001e5bf:	mov    r9,QWORD PTR [rbp-0x48]
   14001e5c3:	mov    rdx,QWORD PTR [rbp-0x38]
   14001e5c7:	sub    r13d,DWORD PTR [r9+0xc]
   14001e5cb:	mov    cl,r13b
   14001e5ce:	shl    r8d,cl
   14001e5d1:	neg    DWORD PTR [rbp-0x40]
   14001e5d4:	sbb    eax,eax
   14001e5d6:	and    eax,0x80000000
   14001e5db:	or     r8d,eax
   14001e5de:	or     r8d,DWORD PTR [rbp-0x20]
   14001e5e2:	cmp    DWORD PTR [r9+0x10],0x40
   14001e5e7:	jne    0x14001e5f4
   14001e5e9:	mov    eax,DWORD PTR [rbp-0x1c]
   14001e5ec:	mov    DWORD PTR [rdx+0x4],r8d
   14001e5f0:	mov    DWORD PTR [rdx],eax
   14001e5f2:	jmp    0x14001e5fe
   14001e5f4:	cmp    DWORD PTR [r9+0x10],0x20
   14001e5f9:	jne    0x14001e5fe
   14001e5fb:	mov    DWORD PTR [rdx],r8d
   14001e5fe:	mov    eax,ebx
   14001e600:	mov    rcx,QWORD PTR [rbp-0x10]
   14001e604:	xor    rcx,rsp
   14001e607:	call   0x14000d0a0
   14001e60c:	mov    rbx,QWORD PTR [rsp+0xb0]
   14001e614:	add    rsp,0x70
   14001e618:	pop    r15
   14001e61a:	pop    r14
   14001e61c:	pop    r13
   14001e61e:	pop    r12
   14001e620:	pop    rdi
   14001e621:	pop    rsi
   14001e622:	pop    rbp
   14001e623:	ret    
   14001e624:	mov    QWORD PTR [rsp+0x8],rbx
   14001e629:	mov    QWORD PTR [rsp+0x18],rsi
   14001e62e:	mov    QWORD PTR [rsp+0x20],rdi
   14001e633:	push   rbp
   14001e634:	push   r12
   14001e636:	push   r13
   14001e638:	push   r14
   14001e63a:	push   r15
   14001e63c:	mov    rbp,rsp
   14001e63f:	sub    rsp,0x60
   14001e643:	mov    rax,QWORD PTR [rip+0x183f6]        # 0x140036a40
   14001e64a:	xor    rax,rsp
   14001e64d:	mov    QWORD PTR [rbp-0x8],rax
   14001e651:	movzx  eax,WORD PTR [rcx+0xa]
   14001e655:	movzx  r9d,WORD PTR [rcx]
   14001e659:	xor    ebx,ebx
   14001e65b:	mov    edi,eax
   14001e65d:	and    eax,0x8000
   14001e662:	shl    r9d,0x10
   14001e666:	mov    DWORD PTR [rbp-0x3c],eax
   14001e669:	mov    eax,DWORD PTR [rcx+0x6]
   14001e66c:	and    edi,0x7fff
   14001e672:	mov    DWORD PTR [rbp-0x18],eax
   14001e675:	mov    eax,DWORD PTR [rcx+0x2]
   14001e678:	sub    edi,0x3fff
   14001e67e:	mov    r12d,0x1f
   14001e684:	mov    QWORD PTR [rbp-0x30],rdx
   14001e688:	mov    DWORD PTR [rbp-0x28],r9d
   14001e68c:	mov    DWORD PTR [rbp-0x14],eax
   14001e68f:	mov    DWORD PTR [rbp-0x10],r9d
   14001e693:	lea    esi,[rbx+0x1]
   14001e696:	lea    r14d,[r12-0x1c]
   14001e69b:	cmp    edi,0xffffc001
   14001e6a1:	jne    0x14001e6cc
   14001e6a3:	mov    r8d,ebx
   14001e6a6:	mov    eax,ebx
   14001e6a8:	cmp    DWORD PTR [rbp+rax*4-0x18],ebx
   14001e6ac:	jne    0x14001e6bb
   14001e6ae:	add    rax,rsi
   14001e6b1:	cmp    rax,r14
   14001e6b4:	jl     0x14001e6a8
   14001e6b6:	jmp    0x14001eb72
   14001e6bb:	mov    QWORD PTR [rbp-0x18],rbx
   14001e6bf:	mov    DWORD PTR [rbp-0x10],ebx
   14001e6c2:	mov    ebx,0x2
   14001e6c7:	jmp    0x14001eb72
   14001e6cc:	mov    rax,QWORD PTR [rbp-0x18]
   14001e6d0:	mov    r8d,r12d
   14001e6d3:	or     r15d,0xffffffff
   14001e6d7:	mov    QWORD PTR [rbp-0x20],rax
   14001e6db:	mov    eax,DWORD PTR [rip+0x18eaf]        # 0x140037590
   14001e6e1:	mov    DWORD PTR [rbp-0x40],edi
   14001e6e4:	dec    eax
   14001e6e6:	mov    r13d,ebx
   14001e6e9:	mov    DWORD PTR [rbp-0x38],eax
   14001e6ec:	inc    eax
   14001e6ee:	cdq    
   14001e6ef:	and    edx,r12d
   14001e6f2:	add    eax,edx
   14001e6f4:	mov    r10d,eax
   14001e6f7:	and    eax,r12d
   14001e6fa:	sar    r10d,0x5
   14001e6fe:	sub    eax,edx
   14001e700:	sub    r8d,eax
   14001e703:	movsxd r11,r10d
   14001e706:	mov    ecx,DWORD PTR [rbp+r11*4-0x18]
   14001e70b:	mov    DWORD PTR [rbp-0x24],r8d
   14001e70f:	bt     ecx,r8d
   14001e713:	jae    0x14001e7b7
   14001e719:	mov    ecx,r8d
   14001e71c:	mov    eax,r15d
   14001e71f:	movsxd rdx,r10d
   14001e722:	shl    eax,cl
   14001e724:	not    eax
   14001e726:	test   DWORD PTR [rbp+rdx*4-0x18],eax
   14001e72a:	jne    0x14001e745
   14001e72c:	lea    eax,[r10+0x1]
   14001e730:	movsxd rcx,eax
   14001e733:	jmp    0x14001e73e
   14001e735:	cmp    DWORD PTR [rbp+rcx*4-0x18],ebx
   14001e739:	jne    0x14001e745
   14001e73b:	add    rcx,rsi
   14001e73e:	cmp    rcx,r14
   14001e741:	jl     0x14001e735
   14001e743:	jmp    0x14001e7b7
   14001e745:	mov    eax,DWORD PTR [rbp-0x38]
   14001e748:	mov    ecx,r12d
   14001e74b:	cdq    
   14001e74c:	and    edx,r12d
   14001e74f:	add    eax,edx
   14001e751:	mov    r8d,eax
   14001e754:	and    eax,r12d
   14001e757:	sub    eax,edx
   14001e759:	sar    r8d,0x5
   14001e75d:	mov    edx,esi
   14001e75f:	sub    ecx,eax
   14001e761:	movsxd r11,r8d
   14001e764:	mov    eax,DWORD PTR [rbp+r11*4-0x18]
   14001e769:	shl    edx,cl
   14001e76b:	lea    ecx,[rax+rdx*1]
   14001e76e:	cmp    ecx,eax
   14001e770:	jb     0x14001e776
   14001e772:	cmp    ecx,edx
   14001e774:	jae    0x14001e779
   14001e776:	mov    r13d,esi
   14001e779:	lea    eax,[r8-0x1]
   14001e77d:	mov    DWORD PTR [rbp+r11*4-0x18],ecx
   14001e782:	movsxd rdx,eax
   14001e785:	test   eax,eax
   14001e787:	js     0x14001e7b0
   14001e789:	test   r13d,r13d
   14001e78c:	je     0x14001e7b0
   14001e78e:	mov    eax,DWORD PTR [rbp+rdx*4-0x18]
   14001e792:	mov    r13d,ebx
   14001e795:	lea    r8d,[rax+0x1]
   14001e799:	cmp    r8d,eax
   14001e79c:	jb     0x14001e7a3
   14001e79e:	cmp    r8d,esi
   14001e7a1:	jae    0x14001e7a6
   14001e7a3:	mov    r13d,esi
   14001e7a6:	mov    DWORD PTR [rbp+rdx*4-0x18],r8d
   14001e7ab:	sub    rdx,rsi
   14001e7ae:	jns    0x14001e789
   14001e7b0:	mov    r8d,DWORD PTR [rbp-0x24]
   14001e7b4:	movsxd r11,r10d
   14001e7b7:	mov    ecx,r8d
   14001e7ba:	mov    eax,r15d
   14001e7bd:	shl    eax,cl
   14001e7bf:	and    DWORD PTR [rbp+r11*4-0x18],eax
   14001e7c4:	lea    eax,[r10+0x1]
   14001e7c8:	movsxd rdx,eax
   14001e7cb:	cmp    rdx,r14
   14001e7ce:	jge    0x14001e7ed
   14001e7d0:	lea    rcx,[rbp-0x18]
   14001e7d4:	mov    r8,r14
   14001e7d7:	sub    r8,rdx
   14001e7da:	lea    rcx,[rcx+rdx*4]
   14001e7de:	xor    edx,edx
   14001e7e0:	shl    r8,0x2
   14001e7e4:	call   0x140007150
   14001e7e9:	mov    r9d,DWORD PTR [rbp-0x28]
   14001e7ed:	test   r13d,r13d
   14001e7f0:	je     0x14001e7f4
   14001e7f2:	add    edi,esi
   14001e7f4:	mov    ecx,DWORD PTR [rip+0x18d92]        # 0x14003758c
   14001e7fa:	mov    eax,ecx
   14001e7fc:	sub    eax,DWORD PTR [rip+0x18d8e]        # 0x140037590
   14001e802:	cmp    edi,eax
   14001e804:	jge    0x14001e81a
   14001e806:	mov    QWORD PTR [rbp-0x18],rbx
   14001e80a:	mov    DWORD PTR [rbp-0x10],ebx
   14001e80d:	mov    r8d,ebx
   14001e810:	mov    ebx,0x2
   14001e815:	jmp    0x14001eb6e
   14001e81a:	cmp    edi,ecx
   14001e81c:	jg     0x14001ea53
   14001e822:	sub    ecx,DWORD PTR [rbp-0x40]
   14001e825:	mov    rax,QWORD PTR [rbp-0x20]
   14001e829:	mov    r10d,r15d
   14001e82c:	mov    QWORD PTR [rbp-0x18],rax
   14001e830:	mov    eax,ecx
   14001e832:	mov    DWORD PTR [rbp-0x10],r9d
   14001e836:	cdq    
   14001e837:	mov    r11,r14
   14001e83a:	mov    r9d,ebx
   14001e83d:	and    edx,r12d
   14001e840:	lea    r8,[rbp-0x18]
   14001e844:	add    eax,edx
   14001e846:	mov    r13d,eax
   14001e849:	and    eax,r12d
   14001e84c:	sub    eax,edx
   14001e84e:	sar    r13d,0x5
   14001e852:	mov    ecx,eax
   14001e854:	mov    edi,eax
   14001e856:	mov    eax,0x20
   14001e85b:	shl    r10d,cl
   14001e85e:	sub    eax,ecx
   14001e860:	mov    r14d,eax
   14001e863:	not    r10d
   14001e866:	mov    eax,DWORD PTR [r8]
   14001e869:	mov    ecx,edi
   14001e86b:	mov    edx,eax
   14001e86d:	shr    eax,cl
   14001e86f:	mov    ecx,r14d
   14001e872:	or     eax,r9d
   14001e875:	and    edx,r10d
   14001e878:	mov    r9d,edx
   14001e87b:	mov    DWORD PTR [r8],eax
   14001e87e:	lea    r8,[r8+0x4]
   14001e882:	shl    r9d,cl
   14001e885:	sub    r11,rsi
   14001e888:	jne    0x14001e866
   14001e88a:	movsxd r10,r13d
   14001e88d:	lea    edi,[r11+0x2]
   14001e891:	lea    r14d,[r11+0x3]
   14001e895:	mov    r9,r10
   14001e898:	mov    r8d,edi
   14001e89b:	neg    r9
   14001e89e:	cmp    r8,r10
   14001e8a1:	jl     0x14001e8b8
   14001e8a3:	mov    rdx,r8
   14001e8a6:	shl    rdx,0x2
   14001e8aa:	lea    rax,[rdx+r9*4]
   14001e8ae:	mov    ecx,DWORD PTR [rbp+rax*1-0x18]
   14001e8b2:	mov    DWORD PTR [rbp+rdx*1-0x18],ecx
   14001e8b6:	jmp    0x14001e8bd
   14001e8b8:	mov    DWORD PTR [rbp+r8*4-0x18],ebx
   14001e8bd:	sub    r8,rsi
   14001e8c0:	jns    0x14001e89e
   14001e8c2:	mov    r8d,DWORD PTR [rbp-0x38]
   14001e8c6:	mov    r11d,r12d
   14001e8c9:	lea    eax,[r8+0x1]
   14001e8cd:	cdq    
   14001e8ce:	and    edx,r12d
   14001e8d1:	add    eax,edx
   14001e8d3:	mov    r9d,eax
   14001e8d6:	and    eax,r12d
   14001e8d9:	sub    eax,edx
   14001e8db:	sar    r9d,0x5
   14001e8df:	sub    r11d,eax
   14001e8e2:	movsxd rax,r9d
   14001e8e5:	mov    ecx,DWORD PTR [rbp+rax*4-0x18]
   14001e8e9:	bt     ecx,r11d
   14001e8ed:	jae    0x14001e98b
   14001e8f3:	mov    ecx,r11d
   14001e8f6:	mov    eax,r15d
   14001e8f9:	movsxd rdx,r9d
   14001e8fc:	shl    eax,cl
   14001e8fe:	not    eax
   14001e900:	test   DWORD PTR [rbp+rdx*4-0x18],eax
   14001e904:	jne    0x14001e91f
   14001e906:	lea    eax,[r9+0x1]
   14001e90a:	movsxd rcx,eax
   14001e90d:	jmp    0x14001e918
   14001e90f:	cmp    DWORD PTR [rbp+rcx*4-0x18],ebx
   14001e913:	jne    0x14001e91f
   14001e915:	add    rcx,rsi
   14001e918:	cmp    rcx,r14
   14001e91b:	jl     0x14001e90f
   14001e91d:	jmp    0x14001e98b
   14001e91f:	mov    eax,r8d
   14001e922:	mov    ecx,r12d
   14001e925:	cdq    
   14001e926:	and    edx,r12d
   14001e929:	add    eax,edx
   14001e92b:	mov    r10d,eax
   14001e92e:	and    eax,r12d
   14001e931:	sub    eax,edx
   14001e933:	sar    r10d,0x5
   14001e937:	mov    edx,esi
   14001e939:	sub    ecx,eax
   14001e93b:	movsxd r13,r10d
   14001e93e:	mov    eax,DWORD PTR [rbp+r13*4-0x18]
   14001e943:	shl    edx,cl
   14001e945:	mov    ecx,ebx
   14001e947:	lea    r8d,[rax+rdx*1]
   14001e94b:	cmp    r8d,eax
   14001e94e:	jb     0x14001e955
   14001e950:	cmp    r8d,edx
   14001e953:	jae    0x14001e957
   14001e955:	mov    ecx,esi
   14001e957:	lea    eax,[r10-0x1]
   14001e95b:	mov    DWORD PTR [rbp+r13*4-0x18],r8d
   14001e960:	movsxd rdx,eax
   14001e963:	test   eax,eax
   14001e965:	js     0x14001e98b
   14001e967:	test   ecx,ecx
   14001e969:	je     0x14001e98b
   14001e96b:	mov    eax,DWORD PTR [rbp+rdx*4-0x18]
   14001e96f:	mov    ecx,ebx
   14001e971:	lea    r8d,[rax+0x1]
   14001e975:	cmp    r8d,eax
   14001e978:	jb     0x14001e97f
   14001e97a:	cmp    r8d,esi
   14001e97d:	jae    0x14001e981
   14001e97f:	mov    ecx,esi
   14001e981:	mov    DWORD PTR [rbp+rdx*4-0x18],r8d
   14001e986:	sub    rdx,rsi
   14001e989:	jns    0x14001e967
   14001e98b:	mov    ecx,r11d
   14001e98e:	mov    eax,r15d
   14001e991:	shl    eax,cl
   14001e993:	movsxd rcx,r9d
   14001e996:	and    DWORD PTR [rbp+rcx*4-0x18],eax
   14001e99a:	lea    eax,[r9+0x1]
   14001e99e:	movsxd rdx,eax
   14001e9a1:	cmp    rdx,r14
   14001e9a4:	jge    0x14001e9bf
   14001e9a6:	lea    rcx,[rbp-0x18]
   14001e9aa:	mov    r8,r14
   14001e9ad:	sub    r8,rdx
   14001e9b0:	lea    rcx,[rcx+rdx*4]
   14001e9b4:	xor    edx,edx
   14001e9b6:	shl    r8,0x2
   14001e9ba:	call   0x140007150
   14001e9bf:	mov    eax,DWORD PTR [rip+0x18bcf]        # 0x140037594
   14001e9c5:	mov    r13d,0x20
   14001e9cb:	mov    r9d,ebx
   14001e9ce:	inc    eax
   14001e9d0:	lea    r8,[rbp-0x18]
   14001e9d4:	cdq    
   14001e9d5:	and    edx,r12d
   14001e9d8:	add    eax,edx
   14001e9da:	mov    r10d,eax
   14001e9dd:	and    eax,r12d
   14001e9e0:	sub    eax,edx
   14001e9e2:	sar    r10d,0x5
   14001e9e6:	mov    ecx,eax
   14001e9e8:	mov    r11d,eax
   14001e9eb:	shl    r15d,cl
   14001e9ee:	sub    r13d,eax
   14001e9f1:	not    r15d
   14001e9f4:	mov    eax,DWORD PTR [r8]
   14001e9f7:	mov    ecx,r11d
   14001e9fa:	mov    edx,eax
   14001e9fc:	shr    eax,cl
   14001e9fe:	mov    ecx,r13d
   14001ea01:	or     eax,r9d
   14001ea04:	and    edx,r15d
   14001ea07:	mov    r9d,edx
   14001ea0a:	mov    DWORD PTR [r8],eax
   14001ea0d:	lea    r8,[r8+0x4]
   14001ea11:	shl    r9d,cl
   14001ea14:	sub    r14,rsi
   14001ea17:	jne    0x14001e9f4
   14001ea19:	movsxd r10,r10d
   14001ea1c:	mov    r8,rdi
   14001ea1f:	mov    r9,r10
   14001ea22:	neg    r9
   14001ea25:	cmp    r8,r10
   14001ea28:	jl     0x14001ea3f
   14001ea2a:	mov    rdx,r8
   14001ea2d:	shl    rdx,0x2
   14001ea31:	lea    rax,[rdx+r9*4]
   14001ea35:	mov    ecx,DWORD PTR [rbp+rax*1-0x18]
   14001ea39:	mov    DWORD PTR [rbp+rdx*1-0x18],ecx
   14001ea3d:	jmp    0x14001ea44
   14001ea3f:	mov    DWORD PTR [rbp+r8*4-0x18],ebx
   14001ea44:	sub    r8,rsi
   14001ea47:	jns    0x14001ea25
   14001ea49:	mov    r8d,ebx
   14001ea4c:	mov    ebx,edi
   14001ea4e:	jmp    0x14001eb6e
   14001ea53:	mov    eax,DWORD PTR [rip+0x18b3b]        # 0x140037594
   14001ea59:	mov    r10d,DWORD PTR [rip+0x18b28]        # 0x140037588
   14001ea60:	mov    r13d,0x20
   14001ea66:	cdq    
   14001ea67:	and    edx,r12d
   14001ea6a:	add    eax,edx
   14001ea6c:	mov    r11d,eax
   14001ea6f:	and    eax,r12d
   14001ea72:	sub    eax,edx
   14001ea74:	sar    r11d,0x5
   14001ea78:	mov    ecx,eax
   14001ea7a:	shl    r15d,cl
   14001ea7d:	not    r15d
   14001ea80:	cmp    edi,r10d
   14001ea83:	jl     0x14001eaff
   14001ea85:	mov    QWORD PTR [rbp-0x18],rbx
   14001ea89:	bts    DWORD PTR [rbp-0x18],0x1f
   14001ea8e:	mov    DWORD PTR [rbp-0x10],ebx
   14001ea91:	sub    r13d,eax
   14001ea94:	mov    edi,eax
   14001ea96:	mov    r9d,ebx
   14001ea99:	lea    r8,[rbp-0x18]
   14001ea9d:	mov    eax,DWORD PTR [r8]
   14001eaa0:	mov    ecx,edi
   14001eaa2:	mov    edx,r15d
   14001eaa5:	and    edx,eax
   14001eaa7:	shr    eax,cl
   14001eaa9:	mov    ecx,r13d
   14001eaac:	or     eax,r9d
   14001eaaf:	mov    r9d,edx
   14001eab2:	shl    r9d,cl
   14001eab5:	mov    DWORD PTR [r8],eax
   14001eab8:	lea    r8,[r8+0x4]
   14001eabc:	sub    r14,rsi
   14001eabf:	jne    0x14001ea9d
   14001eac1:	movsxd r9,r11d
   14001eac4:	lea    edi,[r14+0x2]
   14001eac8:	mov    r8,r9
   14001eacb:	neg    r8
   14001eace:	cmp    rdi,r9
   14001ead1:	jl     0x14001eae8
   14001ead3:	mov    rdx,rdi
   14001ead6:	shl    rdx,0x2
   14001eada:	lea    rax,[rdx+r8*4]
   14001eade:	mov    ecx,DWORD PTR [rbp+rax*1-0x18]
   14001eae2:	mov    DWORD PTR [rbp+rdx*1-0x18],ecx
   14001eae6:	jmp    0x14001eaec
   14001eae8:	mov    DWORD PTR [rbp+rdi*4-0x18],ebx
   14001eaec:	sub    rdi,rsi
   14001eaef:	jns    0x14001eace
   14001eaf1:	mov    r8d,DWORD PTR [rip+0x18aa4]        # 0x14003759c
   14001eaf8:	mov    ebx,esi
   14001eafa:	add    r8d,r10d
   14001eafd:	jmp    0x14001eb6e
   14001eaff:	mov    r8d,DWORD PTR [rip+0x18a96]        # 0x14003759c
   14001eb06:	btr    DWORD PTR [rbp-0x18],0x1f
   14001eb0b:	mov    r10d,ebx
   14001eb0e:	add    r8d,edi
   14001eb11:	mov    edi,eax
   14001eb13:	sub    r13d,eax
   14001eb16:	lea    r9,[rbp-0x18]
   14001eb1a:	mov    eax,DWORD PTR [r9]
   14001eb1d:	mov    ecx,edi
   14001eb1f:	mov    edx,eax
   14001eb21:	shr    eax,cl
   14001eb23:	mov    ecx,r13d
   14001eb26:	or     eax,r10d
   14001eb29:	and    edx,r15d
   14001eb2c:	mov    r10d,edx
   14001eb2f:	mov    DWORD PTR [r9],eax
   14001eb32:	lea    r9,[r9+0x4]
   14001eb36:	shl    r10d,cl
   14001eb39:	sub    r14,rsi
   14001eb3c:	jne    0x14001eb1a
   14001eb3e:	movsxd r10,r11d
   14001eb41:	lea    edi,[r14+0x2]
   14001eb45:	mov    r9,r10
   14001eb48:	neg    r9
   14001eb4b:	cmp    rdi,r10
   14001eb4e:	jl     0x14001eb65
   14001eb50:	mov    rdx,rdi
   14001eb53:	shl    rdx,0x2
   14001eb57:	lea    rax,[rdx+r9*4]
   14001eb5b:	mov    ecx,DWORD PTR [rbp+rax*1-0x18]
   14001eb5f:	mov    DWORD PTR [rbp+rdx*1-0x18],ecx
   14001eb63:	jmp    0x14001eb69
   14001eb65:	mov    DWORD PTR [rbp+rdi*4-0x18],ebx
   14001eb69:	sub    rdi,rsi
   14001eb6c:	jns    0x14001eb4b
   14001eb6e:	mov    rdx,QWORD PTR [rbp-0x30]
   14001eb72:	sub    r12d,DWORD PTR [rip+0x18a1b]        # 0x140037594
   14001eb79:	mov    cl,r12b
   14001eb7c:	shl    r8d,cl
   14001eb7f:	neg    DWORD PTR [rbp-0x3c]
   14001eb82:	sbb    eax,eax
   14001eb84:	and    eax,0x80000000
   14001eb89:	or     r8d,eax
   14001eb8c:	mov    eax,DWORD PTR [rip+0x18a06]        # 0x140037598
   14001eb92:	or     r8d,DWORD PTR [rbp-0x18]
   14001eb96:	cmp    eax,0x40
   14001eb99:	jne    0x14001eba6
   14001eb9b:	mov    eax,DWORD PTR [rbp-0x14]
   14001eb9e:	mov    DWORD PTR [rdx+0x4],r8d
   14001eba2:	mov    DWORD PTR [rdx],eax
   14001eba4:	jmp    0x14001ebae
   14001eba6:	cmp    eax,0x20
   14001eba9:	jne    0x14001ebae
   14001ebab:	mov    DWORD PTR [rdx],r8d
   14001ebae:	mov    eax,ebx
   14001ebb0:	mov    rcx,QWORD PTR [rbp-0x8]
   14001ebb4:	xor    rcx,rsp
   14001ebb7:	call   0x14000d0a0
   14001ebbc:	lea    r11,[rsp+0x60]
   14001ebc1:	mov    rbx,QWORD PTR [r11+0x30]
   14001ebc5:	mov    rsi,QWORD PTR [r11+0x40]
   14001ebc9:	mov    rdi,QWORD PTR [r11+0x48]
   14001ebcd:	mov    rsp,r11
   14001ebd0:	pop    r15
   14001ebd2:	pop    r14
   14001ebd4:	pop    r13
   14001ebd6:	pop    r12
   14001ebd8:	pop    rbp
   14001ebd9:	ret    
   14001ebda:	int3   
   14001ebdb:	int3   
   14001ebdc:	mov    QWORD PTR [rsp+0x8],rbx
   14001ebe1:	mov    QWORD PTR [rsp+0x18],rsi
   14001ebe6:	mov    QWORD PTR [rsp+0x20],rdi
   14001ebeb:	push   rbp
   14001ebec:	push   r12
   14001ebee:	push   r13
   14001ebf0:	push   r14
   14001ebf2:	push   r15
   14001ebf4:	mov    rbp,rsp
   14001ebf7:	sub    rsp,0x60
   14001ebfb:	mov    rax,QWORD PTR [rip+0x17e3e]        # 0x140036a40
   14001ec02:	xor    rax,rsp
   14001ec05:	mov    QWORD PTR [rbp-0x8],rax
   14001ec09:	movzx  eax,WORD PTR [rcx+0xa]
   14001ec0d:	movzx  r9d,WORD PTR [rcx]
   14001ec11:	xor    ebx,ebx
   14001ec13:	mov    edi,eax
   14001ec15:	and    eax,0x8000
   14001ec1a:	shl    r9d,0x10
   14001ec1e:	mov    DWORD PTR [rbp-0x3c],eax
   14001ec21:	mov    eax,DWORD PTR [rcx+0x6]
   14001ec24:	and    edi,0x7fff
   14001ec2a:	mov    DWORD PTR [rbp-0x18],eax
   14001ec2d:	mov    eax,DWORD PTR [rcx+0x2]
   14001ec30:	sub    edi,0x3fff
   14001ec36:	mov    r12d,0x1f
   14001ec3c:	mov    QWORD PTR [rbp-0x30],rdx
   14001ec40:	mov    DWORD PTR [rbp-0x28],r9d
   14001ec44:	mov    DWORD PTR [rbp-0x14],eax
   14001ec47:	mov    DWORD PTR [rbp-0x10],r9d
   14001ec4b:	lea    esi,[rbx+0x1]
   14001ec4e:	lea    r14d,[r12-0x1c]
   14001ec53:	cmp    edi,0xffffc001
   14001ec59:	jne    0x14001ec84
   14001ec5b:	mov    r8d,ebx
   14001ec5e:	mov    eax,ebx
   14001ec60:	cmp    DWORD PTR [rbp+rax*4-0x18],ebx
   14001ec64:	jne    0x14001ec73
   14001ec66:	add    rax,rsi
   14001ec69:	cmp    rax,r14
   14001ec6c:	jl     0x14001ec60
   14001ec6e:	jmp    0x14001f12a
   14001ec73:	mov    QWORD PTR [rbp-0x18],rbx
   14001ec77:	mov    DWORD PTR [rbp-0x10],ebx
   14001ec7a:	mov    ebx,0x2
   14001ec7f:	jmp    0x14001f12a
   14001ec84:	mov    rax,QWORD PTR [rbp-0x18]
   14001ec88:	mov    r8d,r12d
   14001ec8b:	or     r15d,0xffffffff
   14001ec8f:	mov    QWORD PTR [rbp-0x20],rax
   14001ec93:	mov    eax,DWORD PTR [rip+0x1890f]        # 0x1400375a8
   14001ec99:	mov    DWORD PTR [rbp-0x40],edi
   14001ec9c:	dec    eax
   14001ec9e:	mov    r13d,ebx
   14001eca1:	mov    DWORD PTR [rbp-0x38],eax
   14001eca4:	inc    eax
   14001eca6:	cdq    
   14001eca7:	and    edx,r12d
   14001ecaa:	add    eax,edx
   14001ecac:	mov    r10d,eax
   14001ecaf:	and    eax,r12d
   14001ecb2:	sar    r10d,0x5
   14001ecb6:	sub    eax,edx
   14001ecb8:	sub    r8d,eax
   14001ecbb:	movsxd r11,r10d
   14001ecbe:	mov    ecx,DWORD PTR [rbp+r11*4-0x18]
   14001ecc3:	mov    DWORD PTR [rbp-0x24],r8d
   14001ecc7:	bt     ecx,r8d
   14001eccb:	jae    0x14001ed6f
   14001ecd1:	mov    ecx,r8d
   14001ecd4:	mov    eax,r15d
   14001ecd7:	movsxd rdx,r10d
   14001ecda:	shl    eax,cl
   14001ecdc:	not    eax
   14001ecde:	test   DWORD PTR [rbp+rdx*4-0x18],eax
   14001ece2:	jne    0x14001ecfd
   14001ece4:	lea    eax,[r10+0x1]
   14001ece8:	movsxd rcx,eax
   14001eceb:	jmp    0x14001ecf6
   14001eced:	cmp    DWORD PTR [rbp+rcx*4-0x18],ebx
   14001ecf1:	jne    0x14001ecfd
   14001ecf3:	add    rcx,rsi
   14001ecf6:	cmp    rcx,r14
   14001ecf9:	jl     0x14001eced
   14001ecfb:	jmp    0x14001ed6f
   14001ecfd:	mov    eax,DWORD PTR [rbp-0x38]
   14001ed00:	mov    ecx,r12d
   14001ed03:	cdq    
   14001ed04:	and    edx,r12d
   14001ed07:	add    eax,edx
   14001ed09:	mov    r8d,eax
   14001ed0c:	and    eax,r12d
   14001ed0f:	sub    eax,edx
   14001ed11:	sar    r8d,0x5
   14001ed15:	mov    edx,esi
   14001ed17:	sub    ecx,eax
   14001ed19:	movsxd r11,r8d
   14001ed1c:	mov    eax,DWORD PTR [rbp+r11*4-0x18]
   14001ed21:	shl    edx,cl
   14001ed23:	lea    ecx,[rax+rdx*1]
   14001ed26:	cmp    ecx,eax
   14001ed28:	jb     0x14001ed2e
   14001ed2a:	cmp    ecx,edx
   14001ed2c:	jae    0x14001ed31
   14001ed2e:	mov    r13d,esi
   14001ed31:	lea    eax,[r8-0x1]
   14001ed35:	mov    DWORD PTR [rbp+r11*4-0x18],ecx
   14001ed3a:	movsxd rdx,eax
   14001ed3d:	test   eax,eax
   14001ed3f:	js     0x14001ed68
   14001ed41:	test   r13d,r13d
   14001ed44:	je     0x14001ed68
   14001ed46:	mov    eax,DWORD PTR [rbp+rdx*4-0x18]
   14001ed4a:	mov    r13d,ebx
   14001ed4d:	lea    r8d,[rax+0x1]
   14001ed51:	cmp    r8d,eax
   14001ed54:	jb     0x14001ed5b
   14001ed56:	cmp    r8d,esi
   14001ed59:	jae    0x14001ed5e
   14001ed5b:	mov    r13d,esi
   14001ed5e:	mov    DWORD PTR [rbp+rdx*4-0x18],r8d
   14001ed63:	sub    rdx,rsi
   14001ed66:	jns    0x14001ed41
   14001ed68:	mov    r8d,DWORD PTR [rbp-0x24]
   14001ed6c:	movsxd r11,r10d
   14001ed6f:	mov    ecx,r8d
   14001ed72:	mov    eax,r15d
   14001ed75:	shl    eax,cl
   14001ed77:	and    DWORD PTR [rbp+r11*4-0x18],eax
   14001ed7c:	lea    eax,[r10+0x1]
   14001ed80:	movsxd rdx,eax
   14001ed83:	cmp    rdx,r14
   14001ed86:	jge    0x14001eda5
   14001ed88:	lea    rcx,[rbp-0x18]
   14001ed8c:	mov    r8,r14
   14001ed8f:	sub    r8,rdx
   14001ed92:	lea    rcx,[rcx+rdx*4]
   14001ed96:	xor    edx,edx
   14001ed98:	shl    r8,0x2
   14001ed9c:	call   0x140007150
   14001eda1:	mov    r9d,DWORD PTR [rbp-0x28]
   14001eda5:	test   r13d,r13d
   14001eda8:	je     0x14001edac
   14001edaa:	add    edi,esi
   14001edac:	mov    ecx,DWORD PTR [rip+0x187f2]        # 0x1400375a4
   14001edb2:	mov    eax,ecx
   14001edb4:	sub    eax,DWORD PTR [rip+0x187ee]        # 0x1400375a8
   14001edba:	cmp    edi,eax
   14001edbc:	jge    0x14001edd2
   14001edbe:	mov    QWORD PTR [rbp-0x18],rbx
   14001edc2:	mov    DWORD PTR [rbp-0x10],ebx
   14001edc5:	mov    r8d,ebx
   14001edc8:	mov    ebx,0x2
   14001edcd:	jmp    0x14001f126
   14001edd2:	cmp    edi,ecx
   14001edd4:	jg     0x14001f00b
   14001edda:	sub    ecx,DWORD PTR [rbp-0x40]
   14001eddd:	mov    rax,QWORD PTR [rbp-0x20]
   14001ede1:	mov    r10d,r15d
   14001ede4:	mov    QWORD PTR [rbp-0x18],rax
   14001ede8:	mov    eax,ecx
   14001edea:	mov    DWORD PTR [rbp-0x10],r9d
   14001edee:	cdq    
   14001edef:	mov    r11,r14
   14001edf2:	mov    r9d,ebx
   14001edf5:	and    edx,r12d
   14001edf8:	lea    r8,[rbp-0x18]
   14001edfc:	add    eax,edx
   14001edfe:	mov    r13d,eax
   14001ee01:	and    eax,r12d
   14001ee04:	sub    eax,edx
   14001ee06:	sar    r13d,0x5
   14001ee0a:	mov    ecx,eax
   14001ee0c:	mov    edi,eax
   14001ee0e:	mov    eax,0x20
   14001ee13:	shl    r10d,cl
   14001ee16:	sub    eax,ecx
   14001ee18:	mov    r14d,eax
   14001ee1b:	not    r10d
   14001ee1e:	mov    eax,DWORD PTR [r8]
   14001ee21:	mov    ecx,edi
   14001ee23:	mov    edx,eax
   14001ee25:	shr    eax,cl
   14001ee27:	mov    ecx,r14d
   14001ee2a:	or     eax,r9d
   14001ee2d:	and    edx,r10d
   14001ee30:	mov    r9d,edx
   14001ee33:	mov    DWORD PTR [r8],eax
   14001ee36:	lea    r8,[r8+0x4]
   14001ee3a:	shl    r9d,cl
   14001ee3d:	sub    r11,rsi
   14001ee40:	jne    0x14001ee1e
   14001ee42:	movsxd r10,r13d
   14001ee45:	lea    edi,[r11+0x2]
   14001ee49:	lea    r14d,[r11+0x3]
   14001ee4d:	mov    r9,r10
   14001ee50:	mov    r8d,edi
   14001ee53:	neg    r9
   14001ee56:	cmp    r8,r10
   14001ee59:	jl     0x14001ee70
   14001ee5b:	mov    rdx,r8
   14001ee5e:	shl    rdx,0x2
   14001ee62:	lea    rax,[rdx+r9*4]
   14001ee66:	mov    ecx,DWORD PTR [rbp+rax*1-0x18]
   14001ee6a:	mov    DWORD PTR [rbp+rdx*1-0x18],ecx
   14001ee6e:	jmp    0x14001ee75
   14001ee70:	mov    DWORD PTR [rbp+r8*4-0x18],ebx
   14001ee75:	sub    r8,rsi
   14001ee78:	jns    0x14001ee56
   14001ee7a:	mov    r8d,DWORD PTR [rbp-0x38]
   14001ee7e:	mov    r11d,r12d
   14001ee81:	lea    eax,[r8+0x1]
   14001ee85:	cdq    
   14001ee86:	and    edx,r12d
   14001ee89:	add    eax,edx
   14001ee8b:	mov    r9d,eax
   14001ee8e:	and    eax,r12d
   14001ee91:	sub    eax,edx
   14001ee93:	sar    r9d,0x5
   14001ee97:	sub    r11d,eax
   14001ee9a:	movsxd rax,r9d
   14001ee9d:	mov    ecx,DWORD PTR [rbp+rax*4-0x18]
   14001eea1:	bt     ecx,r11d
   14001eea5:	jae    0x14001ef43
   14001eeab:	mov    ecx,r11d
   14001eeae:	mov    eax,r15d
   14001eeb1:	movsxd rdx,r9d
   14001eeb4:	shl    eax,cl
   14001eeb6:	not    eax
   14001eeb8:	test   DWORD PTR [rbp+rdx*4-0x18],eax
   14001eebc:	jne    0x14001eed7
   14001eebe:	lea    eax,[r9+0x1]
   14001eec2:	movsxd rcx,eax
   14001eec5:	jmp    0x14001eed0
   14001eec7:	cmp    DWORD PTR [rbp+rcx*4-0x18],ebx
   14001eecb:	jne    0x14001eed7
   14001eecd:	add    rcx,rsi
   14001eed0:	cmp    rcx,r14
   14001eed3:	jl     0x14001eec7
   14001eed5:	jmp    0x14001ef43
   14001eed7:	mov    eax,r8d
   14001eeda:	mov    ecx,r12d
   14001eedd:	cdq    
   14001eede:	and    edx,r12d
   14001eee1:	add    eax,edx
   14001eee3:	mov    r10d,eax
   14001eee6:	and    eax,r12d
   14001eee9:	sub    eax,edx
   14001eeeb:	sar    r10d,0x5
   14001eeef:	mov    edx,esi
   14001eef1:	sub    ecx,eax
   14001eef3:	movsxd r13,r10d
   14001eef6:	mov    eax,DWORD PTR [rbp+r13*4-0x18]
   14001eefb:	shl    edx,cl
   14001eefd:	mov    ecx,ebx
   14001eeff:	lea    r8d,[rax+rdx*1]
   14001ef03:	cmp    r8d,eax
   14001ef06:	jb     0x14001ef0d
   14001ef08:	cmp    r8d,edx
   14001ef0b:	jae    0x14001ef0f
   14001ef0d:	mov    ecx,esi
   14001ef0f:	lea    eax,[r10-0x1]
   14001ef13:	mov    DWORD PTR [rbp+r13*4-0x18],r8d
   14001ef18:	movsxd rdx,eax
   14001ef1b:	test   eax,eax
   14001ef1d:	js     0x14001ef43
   14001ef1f:	test   ecx,ecx
   14001ef21:	je     0x14001ef43
   14001ef23:	mov    eax,DWORD PTR [rbp+rdx*4-0x18]
   14001ef27:	mov    ecx,ebx
   14001ef29:	lea    r8d,[rax+0x1]
   14001ef2d:	cmp    r8d,eax
   14001ef30:	jb     0x14001ef37
   14001ef32:	cmp    r8d,esi
   14001ef35:	jae    0x14001ef39
   14001ef37:	mov    ecx,esi
   14001ef39:	mov    DWORD PTR [rbp+rdx*4-0x18],r8d
   14001ef3e:	sub    rdx,rsi
   14001ef41:	jns    0x14001ef1f
   14001ef43:	mov    ecx,r11d
   14001ef46:	mov    eax,r15d
   14001ef49:	shl    eax,cl
   14001ef4b:	movsxd rcx,r9d
   14001ef4e:	and    DWORD PTR [rbp+rcx*4-0x18],eax
   14001ef52:	lea    eax,[r9+0x1]
   14001ef56:	movsxd rdx,eax
   14001ef59:	cmp    rdx,r14
   14001ef5c:	jge    0x14001ef77
   14001ef5e:	lea    rcx,[rbp-0x18]
   14001ef62:	mov    r8,r14
   14001ef65:	sub    r8,rdx
   14001ef68:	lea    rcx,[rcx+rdx*4]
   14001ef6c:	xor    edx,edx
   14001ef6e:	shl    r8,0x2
   14001ef72:	call   0x140007150
   14001ef77:	mov    eax,DWORD PTR [rip+0x1862f]        # 0x1400375ac
   14001ef7d:	mov    r13d,0x20
   14001ef83:	mov    r9d,ebx
   14001ef86:	inc    eax
   14001ef88:	lea    r8,[rbp-0x18]
   14001ef8c:	cdq    
   14001ef8d:	and    edx,r12d
   14001ef90:	add    eax,edx
   14001ef92:	mov    r10d,eax
   14001ef95:	and    eax,r12d
   14001ef98:	sub    eax,edx
   14001ef9a:	sar    r10d,0x5
   14001ef9e:	mov    ecx,eax
   14001efa0:	mov    r11d,eax
   14001efa3:	shl    r15d,cl
   14001efa6:	sub    r13d,eax
   14001efa9:	not    r15d
   14001efac:	mov    eax,DWORD PTR [r8]
   14001efaf:	mov    ecx,r11d
   14001efb2:	mov    edx,eax
   14001efb4:	shr    eax,cl
   14001efb6:	mov    ecx,r13d
   14001efb9:	or     eax,r9d
   14001efbc:	and    edx,r15d
   14001efbf:	mov    r9d,edx
   14001efc2:	mov    DWORD PTR [r8],eax
   14001efc5:	lea    r8,[r8+0x4]
   14001efc9:	shl    r9d,cl
   14001efcc:	sub    r14,rsi
   14001efcf:	jne    0x14001efac
   14001efd1:	movsxd r10,r10d
   14001efd4:	mov    r8,rdi
   14001efd7:	mov    r9,r10
   14001efda:	neg    r9
   14001efdd:	cmp    r8,r10
   14001efe0:	jl     0x14001eff7
   14001efe2:	mov    rdx,r8
   14001efe5:	shl    rdx,0x2
   14001efe9:	lea    rax,[rdx+r9*4]
   14001efed:	mov    ecx,DWORD PTR [rbp+rax*1-0x18]
   14001eff1:	mov    DWORD PTR [rbp+rdx*1-0x18],ecx
   14001eff5:	jmp    0x14001effc
   14001eff7:	mov    DWORD PTR [rbp+r8*4-0x18],ebx
   14001effc:	sub    r8,rsi
   14001efff:	jns    0x14001efdd
   14001f001:	mov    r8d,ebx
   14001f004:	mov    ebx,edi
   14001f006:	jmp    0x14001f126
   14001f00b:	mov    eax,DWORD PTR [rip+0x1859b]        # 0x1400375ac
   14001f011:	mov    r10d,DWORD PTR [rip+0x18588]        # 0x1400375a0
   14001f018:	mov    r13d,0x20
   14001f01e:	cdq    
   14001f01f:	and    edx,r12d
   14001f022:	add    eax,edx
   14001f024:	mov    r11d,eax
   14001f027:	and    eax,r12d
   14001f02a:	sub    eax,edx
   14001f02c:	sar    r11d,0x5
   14001f030:	mov    ecx,eax
   14001f032:	shl    r15d,cl
   14001f035:	not    r15d
   14001f038:	cmp    edi,r10d
   14001f03b:	jl     0x14001f0b7
   14001f03d:	mov    QWORD PTR [rbp-0x18],rbx
   14001f041:	bts    DWORD PTR [rbp-0x18],0x1f
   14001f046:	mov    DWORD PTR [rbp-0x10],ebx
   14001f049:	sub    r13d,eax
   14001f04c:	mov    edi,eax
   14001f04e:	mov    r9d,ebx
   14001f051:	lea    r8,[rbp-0x18]
   14001f055:	mov    eax,DWORD PTR [r8]
   14001f058:	mov    ecx,edi
   14001f05a:	mov    edx,r15d
   14001f05d:	and    edx,eax
   14001f05f:	shr    eax,cl
   14001f061:	mov    ecx,r13d
   14001f064:	or     eax,r9d
   14001f067:	mov    r9d,edx
   14001f06a:	shl    r9d,cl
   14001f06d:	mov    DWORD PTR [r8],eax
   14001f070:	lea    r8,[r8+0x4]
   14001f074:	sub    r14,rsi
   14001f077:	jne    0x14001f055
   14001f079:	movsxd r9,r11d
   14001f07c:	lea    edi,[r14+0x2]
   14001f080:	mov    r8,r9
   14001f083:	neg    r8
   14001f086:	cmp    rdi,r9
   14001f089:	jl     0x14001f0a0
   14001f08b:	mov    rdx,rdi
   14001f08e:	shl    rdx,0x2
   14001f092:	lea    rax,[rdx+r8*4]
   14001f096:	mov    ecx,DWORD PTR [rbp+rax*1-0x18]
   14001f09a:	mov    DWORD PTR [rbp+rdx*1-0x18],ecx
   14001f09e:	jmp    0x14001f0a4
   14001f0a0:	mov    DWORD PTR [rbp+rdi*4-0x18],ebx
   14001f0a4:	sub    rdi,rsi
   14001f0a7:	jns    0x14001f086
   14001f0a9:	mov    r8d,DWORD PTR [rip+0x18504]        # 0x1400375b4
   14001f0b0:	mov    ebx,esi
   14001f0b2:	add    r8d,r10d
   14001f0b5:	jmp    0x14001f126
   14001f0b7:	mov    r8d,DWORD PTR [rip+0x184f6]        # 0x1400375b4
   14001f0be:	btr    DWORD PTR [rbp-0x18],0x1f
   14001f0c3:	mov    r10d,ebx
   14001f0c6:	add    r8d,edi
   14001f0c9:	mov    edi,eax
   14001f0cb:	sub    r13d,eax
   14001f0ce:	lea    r9,[rbp-0x18]
   14001f0d2:	mov    eax,DWORD PTR [r9]
   14001f0d5:	mov    ecx,edi
   14001f0d7:	mov    edx,eax
   14001f0d9:	shr    eax,cl
   14001f0db:	mov    ecx,r13d
   14001f0de:	or     eax,r10d
   14001f0e1:	and    edx,r15d
   14001f0e4:	mov    r10d,edx
   14001f0e7:	mov    DWORD PTR [r9],eax
   14001f0ea:	lea    r9,[r9+0x4]
   14001f0ee:	shl    r10d,cl
   14001f0f1:	sub    r14,rsi
   14001f0f4:	jne    0x14001f0d2
   14001f0f6:	movsxd r10,r11d
   14001f0f9:	lea    edi,[r14+0x2]
   14001f0fd:	mov    r9,r10
   14001f100:	neg    r9
   14001f103:	cmp    rdi,r10
   14001f106:	jl     0x14001f11d
   14001f108:	mov    rdx,rdi
   14001f10b:	shl    rdx,0x2
   14001f10f:	lea    rax,[rdx+r9*4]
   14001f113:	mov    ecx,DWORD PTR [rbp+rax*1-0x18]
   14001f117:	mov    DWORD PTR [rbp+rdx*1-0x18],ecx
   14001f11b:	jmp    0x14001f121
   14001f11d:	mov    DWORD PTR [rbp+rdi*4-0x18],ebx
   14001f121:	sub    rdi,rsi
   14001f124:	jns    0x14001f103
   14001f126:	mov    rdx,QWORD PTR [rbp-0x30]
   14001f12a:	sub    r12d,DWORD PTR [rip+0x1847b]        # 0x1400375ac
   14001f131:	mov    cl,r12b
   14001f134:	shl    r8d,cl
   14001f137:	neg    DWORD PTR [rbp-0x3c]
   14001f13a:	sbb    eax,eax
   14001f13c:	and    eax,0x80000000
   14001f141:	or     r8d,eax
   14001f144:	mov    eax,DWORD PTR [rip+0x18466]        # 0x1400375b0
   14001f14a:	or     r8d,DWORD PTR [rbp-0x18]
   14001f14e:	cmp    eax,0x40
   14001f151:	jne    0x14001f15e
   14001f153:	mov    eax,DWORD PTR [rbp-0x14]
   14001f156:	mov    DWORD PTR [rdx+0x4],r8d
   14001f15a:	mov    DWORD PTR [rdx],eax
   14001f15c:	jmp    0x14001f166
   14001f15e:	cmp    eax,0x20
   14001f161:	jne    0x14001f166
   14001f163:	mov    DWORD PTR [rdx],r8d
   14001f166:	mov    eax,ebx
   14001f168:	mov    rcx,QWORD PTR [rbp-0x8]
   14001f16c:	xor    rcx,rsp
   14001f16f:	call   0x14000d0a0
   14001f174:	lea    r11,[rsp+0x60]
   14001f179:	mov    rbx,QWORD PTR [r11+0x30]
   14001f17d:	mov    rsi,QWORD PTR [r11+0x40]
   14001f181:	mov    rdi,QWORD PTR [r11+0x48]
   14001f185:	mov    rsp,r11
   14001f188:	pop    r15
   14001f18a:	pop    r14
   14001f18c:	pop    r13
   14001f18e:	pop    r12
   14001f190:	pop    rbp
   14001f191:	ret    
   14001f192:	int3   
   14001f193:	int3   
   14001f194:	mov    QWORD PTR [rsp+0x8],rbx
   14001f199:	mov    QWORD PTR [rsp+0x18],rbp
   14001f19e:	push   rdi
   14001f19f:	sub    rsp,0x20
   14001f1a3:	mov    rax,QWORD PTR [rip+0x17896]        # 0x140036a40
   14001f1aa:	xor    rax,rsp
   14001f1ad:	mov    QWORD PTR [rsp+0x10],rax
   14001f1b2:	movzx  r11d,WORD PTR [rcx+0xa]
   14001f1b7:	movzx  r10d,WORD PTR [rcx]
   14001f1bb:	mov    ebp,0x7fff
   14001f1c0:	lea    eax,[rbp+0x1]
   14001f1c3:	movzx  r9d,r11w
   14001f1c7:	xor    r8d,r8d
   14001f1ca:	shl    r10d,0x10
   14001f1ce:	and    r11w,ax
   14001f1d2:	mov    eax,DWORD PTR [rcx+0x2]
   14001f1d5:	mov    rbx,rdx
   14001f1d8:	mov    edx,DWORD PTR [rcx+0x6]
   14001f1db:	and    r9w,bp
   14001f1df:	mov    DWORD PTR [rsp+0x8],r10d
   14001f1e4:	lea    edi,[r8+0x1]
   14001f1e8:	mov    DWORD PTR [rsp],edx
   14001f1eb:	test   r10d,r10d
   14001f1ee:	jns    0x14001f249
   14001f1f0:	test   r10d,0x7fffffff
   14001f1f7:	je     0x14001f249
   14001f1f9:	lea    edx,[rax+0x1]
   14001f1fc:	mov    ecx,r8d
   14001f1ff:	cmp    edx,eax
   14001f201:	jb     0x14001f207
   14001f203:	cmp    edx,edi
   14001f205:	jae    0x14001f209
   14001f207:	mov    ecx,edi
   14001f209:	mov    DWORD PTR [rsp+0x4],edx
   14001f20d:	mov    rdx,r8
   14001f210:	test   ecx,ecx
   14001f212:	je     0x14001f242
   14001f214:	mov    eax,DWORD PTR [rsp+rdx*4]
   14001f217:	mov    ecx,r8d
   14001f21a:	lea    r10d,[rax+0x1]
   14001f21e:	cmp    r10d,eax
   14001f221:	jb     0x14001f228
   14001f223:	cmp    r10d,edi
   14001f226:	jae    0x14001f22a
   14001f228:	mov    ecx,edi
   14001f22a:	mov    DWORD PTR [rsp+rdx*4],r10d
   14001f22e:	sub    rdx,rdi
   14001f231:	jns    0x14001f210
   14001f233:	test   ecx,ecx
   14001f235:	je     0x14001f242
   14001f237:	mov    edx,0x80000000
   14001f23c:	add    r9w,di
   14001f240:	jmp    0x14001f245
   14001f242:	mov    edx,DWORD PTR [rsp]
   14001f245:	mov    eax,DWORD PTR [rsp+0x4]
   14001f249:	cmp    r9w,bp
   14001f24d:	mov    DWORD PTR [rbx],eax
   14001f24f:	mov    DWORD PTR [rbx+0x4],edx
   14001f252:	cmove  r8d,edi
   14001f256:	or     r11w,r9w
   14001f25a:	mov    WORD PTR [rbx+0x8],r11w
   14001f25f:	mov    eax,r8d
   14001f262:	mov    rcx,QWORD PTR [rsp+0x10]
   14001f267:	xor    rcx,rsp
   14001f26a:	call   0x14000d0a0
   14001f26f:	mov    rbx,QWORD PTR [rsp+0x30]
   14001f274:	mov    rbp,QWORD PTR [rsp+0x40]
   14001f279:	add    rsp,0x20
   14001f27d:	pop    rdi
   14001f27e:	ret    
   14001f27f:	int3   
   14001f280:	mov    QWORD PTR [rsp+0x20],rbx
   14001f285:	push   rdi
   14001f286:	sub    rsp,0x60
   14001f28a:	mov    rax,QWORD PTR [rip+0x177af]        # 0x140036a40
   14001f291:	xor    rax,rsp
   14001f294:	mov    QWORD PTR [rsp+0x50],rax
   14001f299:	mov    rax,QWORD PTR [rsp+0x90]
   14001f2a1:	mov    rbx,rcx
   14001f2a4:	lea    rcx,[rsp+0x40]
   14001f2a9:	mov    QWORD PTR [rsp+0x38],rax
   14001f2ae:	xor    eax,eax
   14001f2b0:	mov    DWORD PTR [rsp+0x30],eax
   14001f2b4:	mov    DWORD PTR [rsp+0x28],eax
   14001f2b8:	mov    DWORD PTR [rsp+0x20],eax
   14001f2bc:	call   0x14001fa34
   14001f2c1:	lea    rcx,[rsp+0x40]
   14001f2c6:	mov    rdx,rbx
   14001f2c9:	mov    edi,eax
   14001f2cb:	call   0x14001f194
   14001f2d0:	cmp    eax,0x1
   14001f2d3:	jne    0x14001f2d8
   14001f2d5:	or     edi,0x2
   14001f2d8:	mov    eax,edi
   14001f2da:	mov    rcx,QWORD PTR [rsp+0x50]
   14001f2df:	xor    rcx,rsp
   14001f2e2:	call   0x14000d0a0
   14001f2e7:	mov    rbx,QWORD PTR [rsp+0x88]
   14001f2ef:	add    rsp,0x60
   14001f2f3:	pop    rdi
   14001f2f4:	ret    
   14001f2f5:	int3   
   14001f2f6:	int3   
   14001f2f7:	int3   
   14001f2f8:	mov    QWORD PTR [rsp+0x10],rbx
   14001f2fd:	mov    QWORD PTR [rsp+0x18],rsi
   14001f302:	mov    QWORD PTR [rsp+0x20],rdi
   14001f307:	push   rbp
   14001f308:	push   r12
   14001f30a:	push   r13
   14001f30c:	push   r14
   14001f30e:	push   r15
   14001f310:	mov    rbp,rsp
   14001f313:	sub    rsp,0x30
   14001f317:	mov    rax,QWORD PTR [rip+0x17722]        # 0x140036a40
   14001f31e:	xor    rax,rsp
   14001f321:	mov    QWORD PTR [rbp-0x10],rax
   14001f325:	movzx  eax,WORD PTR [rdx+0xa]
   14001f329:	xor    r12d,r12d
   14001f32c:	mov    r8,rcx
   14001f32f:	mov    QWORD PTR [rbp-0x28],rcx
   14001f333:	movzx  ecx,WORD PTR [rcx+0xa]
   14001f337:	movzx  esi,ax
   14001f33a:	xor    si,cx
   14001f33d:	mov    rdi,rdx
   14001f340:	mov    edx,0x8000
   14001f345:	and    si,dx
   14001f348:	mov    edx,0x7fff
   14001f34d:	mov    DWORD PTR [rbp-0x2c],r12d
   14001f351:	and    cx,dx
   14001f354:	and    ax,dx
   14001f357:	mov    QWORD PTR [rbp-0x20],r12
   14001f35b:	lea    r9d,[rcx+rax*1]
   14001f35f:	mov    DWORD PTR [rbp-0x18],r12d
   14001f363:	mov    WORD PTR [rbp-0x2e],si
   14001f367:	mov    WORD PTR [rbp-0x30],r9w
   14001f36c:	cmp    cx,dx
   14001f36f:	jae    0x14001f5e4
   14001f375:	cmp    ax,dx
   14001f378:	jae    0x14001f5e4
   14001f37e:	mov    edx,0xbffd
   14001f383:	cmp    r9w,dx
   14001f387:	ja     0x14001f5e4
   14001f38d:	mov    edx,0x3fbf
   14001f392:	cmp    r9w,dx
   14001f396:	ja     0x14001f3a4
   14001f398:	mov    QWORD PTR [r8+0x4],r12
   14001f39c:	mov    DWORD PTR [r8],r12d
   14001f39f:	jmp    0x14001f5fc
   14001f3a4:	mov    edx,0x7fffffff
   14001f3a9:	mov    r14d,0x1
   14001f3af:	test   cx,cx
   14001f3b2:	jne    0x14001f3d8
   14001f3b4:	add    r9w,r14w
   14001f3b8:	mov    WORD PTR [rbp-0x30],r9w
   14001f3bd:	test   DWORD PTR [r8+0x8],edx
   14001f3c1:	jne    0x14001f3d8
   14001f3c3:	cmp    DWORD PTR [r8+0x4],r12d
   14001f3c7:	jne    0x14001f3d8
   14001f3c9:	cmp    DWORD PTR [r8],r12d
   14001f3cc:	jne    0x14001f3d8
   14001f3ce:	mov    WORD PTR [r8+0xa],r12w
   14001f3d3:	jmp    0x14001f5fc
   14001f3d8:	test   ax,ax
   14001f3db:	jne    0x14001f3f6
   14001f3dd:	add    r9w,r14w
   14001f3e1:	mov    WORD PTR [rbp-0x30],r9w
   14001f3e6:	test   DWORD PTR [rdi+0x8],edx
   14001f3e9:	jne    0x14001f3f6
   14001f3eb:	cmp    DWORD PTR [rdi+0x4],r12d
   14001f3ef:	jne    0x14001f3f6
   14001f3f1:	cmp    DWORD PTR [rdi],r12d
   14001f3f4:	je     0x14001f398
   14001f3f6:	mov    r10d,0x5
   14001f3fc:	mov    r14d,r12d
   14001f3ff:	lea    rdx,[rbp-0x20]
   14001f403:	lea    r9d,[r10-0x4]
   14001f407:	mov    r15d,r10d
   14001f40a:	test   r10d,r10d
   14001f40d:	jle    0x14001f462
   14001f40f:	lea    eax,[r14+r14*1]
   14001f413:	mov    esi,r14d
   14001f416:	lea    r12,[rdi+0x8]
   14001f41a:	movsxd r13,eax
   14001f41d:	and    esi,r9d
   14001f420:	add    r13,r8
   14001f423:	movzx  eax,WORD PTR [r13+0x0]
   14001f428:	movzx  ecx,WORD PTR [r12]
   14001f42d:	xor    r11d,r11d
   14001f430:	imul   ecx,eax
   14001f433:	mov    eax,DWORD PTR [rdx]
   14001f435:	lea    ebx,[rax+rcx*1]
   14001f438:	cmp    ebx,eax
   14001f43a:	jb     0x14001f440
   14001f43c:	cmp    ebx,ecx
   14001f43e:	jae    0x14001f443
   14001f440:	mov    r11d,r9d
   14001f443:	mov    DWORD PTR [rdx],ebx
   14001f445:	test   r11d,r11d
   14001f448:	je     0x14001f44f
   14001f44a:	add    WORD PTR [rdx+0x4],r9w
   14001f44f:	sub    r15d,r9d
   14001f452:	add    r13,0x2
   14001f456:	sub    r12,0x2
   14001f45a:	test   r15d,r15d
   14001f45d:	jg     0x14001f423
   14001f45f:	xor    r12d,r12d
   14001f462:	sub    r10d,r9d
   14001f465:	add    rdx,0x2
   14001f469:	add    r14d,r9d
   14001f46c:	test   r10d,r10d
   14001f46f:	jg     0x14001f407
   14001f471:	movzx  r9d,WORD PTR [rbp-0x30]
   14001f476:	mov    r10d,DWORD PTR [rbp-0x18]
   14001f47a:	mov    r11d,DWORD PTR [rbp-0x20]
   14001f47e:	mov    eax,0xc002
   14001f483:	mov    ebx,0x80000000
   14001f488:	mov    r15d,0xffff
   14001f48e:	add    r9w,ax
   14001f492:	test   r9w,r9w
   14001f496:	jle    0x14001f4d4
   14001f498:	test   ebx,r10d
   14001f49b:	jne    0x14001f4ce
   14001f49d:	mov    edi,DWORD PTR [rbp-0x1c]
   14001f4a0:	mov    edx,r11d
   14001f4a3:	add    r10d,r10d
   14001f4a6:	shr    edx,0x1f
   14001f4a9:	add    r11d,r11d
   14001f4ac:	mov    ecx,edi
   14001f4ae:	shr    ecx,0x1f
   14001f4b1:	lea    eax,[rdi+rdi*1]
   14001f4b4:	add    r9w,r15w
   14001f4b8:	or     eax,edx
   14001f4ba:	or     r10d,ecx
   14001f4bd:	mov    DWORD PTR [rbp-0x20],r11d
   14001f4c1:	mov    DWORD PTR [rbp-0x1c],eax
   14001f4c4:	mov    DWORD PTR [rbp-0x18],r10d
   14001f4c8:	test   r9w,r9w
   14001f4cc:	jg     0x14001f498
   14001f4ce:	test   r9w,r9w
   14001f4d2:	jg     0x14001f541
   14001f4d4:	add    r9w,r15w
   14001f4d8:	mov    r14d,0x1
   14001f4de:	jns    0x14001f547
   14001f4e0:	mov    r8d,DWORD PTR [rbp-0x2c]
   14001f4e4:	movzx  eax,r9w
   14001f4e8:	neg    ax
   14001f4eb:	movzx  edx,ax
   14001f4ee:	add    r9w,dx
   14001f4f2:	test   BYTE PTR [rbp-0x20],r14b
   14001f4f6:	je     0x14001f4fb
   14001f4f8:	add    r8d,r14d
   14001f4fb:	mov    edi,DWORD PTR [rbp-0x1c]
   14001f4fe:	mov    eax,r10d
   14001f501:	shr    r11d,1
   14001f504:	mov    ecx,edi
   14001f506:	shl    eax,0x1f
   14001f509:	shr    edi,1
   14001f50b:	shl    ecx,0x1f
   14001f50e:	or     edi,eax
   14001f510:	shr    r10d,1
   14001f513:	or     r11d,ecx
   14001f516:	mov    DWORD PTR [rbp-0x1c],edi
   14001f519:	mov    DWORD PTR [rbp-0x20],r11d
   14001f51d:	sub    rdx,r14
   14001f520:	jne    0x14001f4f2
   14001f522:	test   r8d,r8d
   14001f525:	mov    r8,QWORD PTR [rbp-0x28]
   14001f529:	mov    DWORD PTR [rbp-0x18],r10d
   14001f52d:	je     0x14001f547
   14001f52f:	movzx  eax,r11w
   14001f533:	or     ax,r14w
   14001f537:	mov    WORD PTR [rbp-0x20],ax
   14001f53b:	mov    r11d,DWORD PTR [rbp-0x20]
   14001f53f:	jmp    0x14001f54b
   14001f541:	mov    r14d,0x1
   14001f547:	movzx  eax,WORD PTR [rbp-0x20]
   14001f54b:	movzx  esi,WORD PTR [rbp-0x2e]
   14001f54f:	mov    edx,0x8000
   14001f554:	cmp    ax,dx
   14001f557:	ja     0x14001f569
   14001f559:	and    r11d,0x1ffff
   14001f560:	cmp    r11d,0x18000
   14001f567:	jne    0x14001f5b2
   14001f569:	mov    eax,DWORD PTR [rbp-0x1e]
   14001f56c:	or     ecx,0xffffffff
   14001f56f:	cmp    eax,ecx
   14001f571:	jne    0x14001f5ac
   14001f573:	mov    eax,DWORD PTR [rbp-0x1a]
   14001f576:	mov    DWORD PTR [rbp-0x1e],r12d
   14001f57a:	cmp    eax,ecx
   14001f57c:	jne    0x14001f5a0
   14001f57e:	movzx  eax,WORD PTR [rbp-0x16]
   14001f582:	mov    DWORD PTR [rbp-0x1a],r12d
   14001f586:	cmp    ax,r15w
   14001f58a:	jne    0x14001f596
   14001f58c:	mov    WORD PTR [rbp-0x16],dx
   14001f590:	add    r9w,r14w
   14001f594:	jmp    0x14001f5a6
   14001f596:	add    ax,r14w
   14001f59a:	mov    WORD PTR [rbp-0x16],ax
   14001f59e:	jmp    0x14001f5a6
   14001f5a0:	add    eax,r14d
   14001f5a3:	mov    DWORD PTR [rbp-0x1a],eax
   14001f5a6:	mov    r10d,DWORD PTR [rbp-0x18]
   14001f5aa:	jmp    0x14001f5b2
   14001f5ac:	add    eax,r14d
   14001f5af:	mov    DWORD PTR [rbp-0x1e],eax
   14001f5b2:	mov    eax,0x7fff
   14001f5b7:	cmp    r9w,ax
   14001f5bb:	jb     0x14001f5c6
   14001f5bd:	mov    QWORD PTR [r8],0x0
   14001f5c4:	jmp    0x14001f5ec
   14001f5c6:	movzx  eax,WORD PTR [rbp-0x1e]
   14001f5ca:	or     r9w,si
   14001f5ce:	mov    DWORD PTR [r8+0x6],r10d
   14001f5d2:	mov    WORD PTR [r8],ax
   14001f5d6:	mov    eax,DWORD PTR [rbp-0x1c]
   14001f5d9:	mov    WORD PTR [r8+0xa],r9w
   14001f5de:	mov    DWORD PTR [r8+0x2],eax
   14001f5e2:	jmp    0x14001f5fc
   14001f5e4:	mov    ebx,0x80000000
   14001f5e9:	mov    QWORD PTR [r8],r12
   14001f5ec:	neg    si
   14001f5ef:	sbb    eax,eax
   14001f5f1:	and    eax,ebx
   14001f5f3:	add    eax,0x7fff8000
   14001f5f8:	mov    DWORD PTR [r8+0x8],eax
   14001f5fc:	mov    rcx,QWORD PTR [rbp-0x10]
   14001f600:	xor    rcx,rsp
   14001f603:	call   0x14000d0a0
   14001f608:	mov    rbx,QWORD PTR [rsp+0x68]
   14001f60d:	mov    rsi,QWORD PTR [rsp+0x70]
   14001f612:	mov    rdi,QWORD PTR [rsp+0x78]
   14001f617:	add    rsp,0x30
   14001f61b:	pop    r15
   14001f61d:	pop    r14
   14001f61f:	pop    r13
   14001f621:	pop    r12
   14001f623:	pop    rbp
   14001f624:	ret    
   14001f625:	int3   
   14001f626:	int3   
   14001f627:	int3   
   14001f628:	test   edx,edx
   14001f62a:	je     0x14001f9db
   14001f630:	mov    QWORD PTR [rsp+0x10],rbx
   14001f635:	mov    QWORD PTR [rsp+0x18],rsi
   14001f63a:	mov    QWORD PTR [rsp+0x20],rdi
   14001f63f:	push   rbp
   14001f640:	push   r12
   14001f642:	push   r13
   14001f644:	push   r14
   14001f646:	push   r15
   14001f648:	mov    rbp,rsp
   14001f64b:	sub    rsp,0x50
   14001f64f:	mov    rax,QWORD PTR [rip+0x173ea]        # 0x140036a40
   14001f656:	xor    rax,rsp
   14001f659:	mov    QWORD PTR [rbp-0x8],rax
   14001f65d:	lea    r14,[rip+0x17f5c]        # 0x1400375c0
   14001f664:	xor    edi,edi
   14001f666:	mov    ebx,edx
   14001f668:	sub    r14,0x60
   14001f66c:	mov    r9,rcx
   14001f66f:	mov    QWORD PTR [rbp-0x40],rcx
   14001f673:	test   edx,edx
   14001f675:	jns    0x14001f684
   14001f677:	lea    r14,[rip+0x180a2]        # 0x140037720
   14001f67e:	neg    ebx
   14001f680:	sub    r14,0x60
   14001f684:	test   r8d,r8d
   14001f687:	jne    0x14001f68c
   14001f689:	mov    WORD PTR [rcx],di
   14001f68c:	test   ebx,ebx
   14001f68e:	je     0x14001f9b2
   14001f694:	mov    r15d,0x8000
   14001f69a:	mov    esi,0x1
   14001f69f:	lea    r11d,[r15-0x1]
   14001f6a3:	mov    eax,ebx
   14001f6a5:	add    r14,0x54
   14001f6a9:	sar    ebx,0x3
   14001f6ac:	mov    DWORD PTR [rbp-0x48],ebx
   14001f6af:	mov    QWORD PTR [rbp-0x38],r14
   14001f6b3:	and    eax,0x7
   14001f6b6:	je     0x14001f9aa
   14001f6bc:	cdqe   
   14001f6be:	lea    rcx,[rax+rax*2]
   14001f6c2:	lea    rdx,[r14+rcx*4]
   14001f6c6:	cmp    WORD PTR [rdx],r15w
   14001f6ca:	jb     0x14001f6ec
   14001f6cc:	mov    eax,DWORD PTR [rdx+0x8]
   14001f6cf:	movsd  xmm0,QWORD PTR [rdx]
   14001f6d3:	lea    rdx,[rbp-0x18]
   14001f6d7:	mov    DWORD PTR [rbp-0x10],eax
   14001f6da:	movsd  QWORD PTR [rbp-0x18],xmm0
   14001f6df:	mov    rax,QWORD PTR [rbp-0x18]
   14001f6e3:	shr    rax,0x10
   14001f6e7:	sub    eax,esi
   14001f6e9:	mov    DWORD PTR [rbp-0x16],eax
   14001f6ec:	movzx  ecx,WORD PTR [rdx+0xa]
   14001f6f0:	movzx  eax,WORD PTR [r9+0xa]
   14001f6f5:	mov    DWORD PTR [rbp-0x4c],edi
   14001f6f8:	movzx  r10d,cx
   14001f6fc:	and    cx,r11w
   14001f700:	mov    QWORD PTR [rbp-0x28],0x0
   14001f708:	xor    r10w,ax
   14001f70c:	and    ax,r11w
   14001f710:	mov    DWORD PTR [rbp-0x20],edi
   14001f713:	and    r10w,r15w
   14001f717:	lea    r8d,[rax+rcx*1]
   14001f71b:	mov    WORD PTR [rbp-0x50],r10w
   14001f720:	cmp    ax,r11w
   14001f724:	jae    0x14001f98f
   14001f72a:	cmp    cx,r11w
   14001f72e:	jae    0x14001f98f
   14001f734:	mov    r11d,0xbffd
   14001f73a:	cmp    r8w,r11w
   14001f73e:	ja     0x14001f989
   14001f744:	mov    r10d,0x3fbf
   14001f74a:	cmp    r8w,r10w
   14001f74e:	ja     0x14001f766
   14001f750:	mov    QWORD PTR [r9+0x4],0x0
   14001f758:	mov    DWORD PTR [r9],edi
   14001f75b:	mov    r11d,0x7fff
   14001f761:	jmp    0x14001f9aa
   14001f766:	test   ax,ax
   14001f769:	jne    0x14001f78b
   14001f76b:	add    r8w,si
   14001f76f:	test   DWORD PTR [r9+0x8],0x7fffffff
   14001f777:	jne    0x14001f78b
   14001f779:	cmp    DWORD PTR [r9+0x4],edi
   14001f77d:	jne    0x14001f78b
   14001f77f:	cmp    DWORD PTR [r9],edi
   14001f782:	jne    0x14001f78b
   14001f784:	mov    WORD PTR [r9+0xa],di
   14001f789:	jmp    0x14001f75b
   14001f78b:	test   cx,cx
   14001f78e:	jne    0x14001f7a6
   14001f790:	add    r8w,si
   14001f794:	test   DWORD PTR [rdx+0x8],0x7fffffff
   14001f79b:	jne    0x14001f7a6
   14001f79d:	cmp    DWORD PTR [rdx+0x4],edi
   14001f7a0:	jne    0x14001f7a6
   14001f7a2:	cmp    DWORD PTR [rdx],edi
   14001f7a4:	je     0x14001f750
   14001f7a6:	xor    r14d,r14d
   14001f7a9:	lea    r10,[rbp-0x28]
   14001f7ad:	lea    r11d,[r14+0x5]
   14001f7b1:	mov    r15d,r14d
   14001f7b4:	mov    r12d,r11d
   14001f7b7:	test   r11d,r11d
   14001f7ba:	jle    0x14001f818
   14001f7bc:	lea    eax,[r15+r15*1]
   14001f7c0:	mov    ebx,r15d
   14001f7c3:	lea    r13,[rdx+0x8]
   14001f7c7:	cdqe   
   14001f7c9:	and    ebx,esi
   14001f7cb:	add    rax,r9
   14001f7ce:	mov    r9,rax
   14001f7d1:	movzx  eax,WORD PTR [r13+0x0]
   14001f7d6:	movzx  ecx,WORD PTR [r9]
   14001f7da:	mov    esi,r14d
   14001f7dd:	imul   ecx,eax
   14001f7e0:	mov    eax,DWORD PTR [r10]
   14001f7e3:	lea    edi,[rax+rcx*1]
   14001f7e6:	cmp    edi,eax
   14001f7e8:	jb     0x14001f7ee
   14001f7ea:	cmp    edi,ecx
   14001f7ec:	jae    0x14001f7f3
   14001f7ee:	mov    esi,0x1
   14001f7f3:	test   esi,esi
   14001f7f5:	mov    DWORD PTR [r10],edi
   14001f7f8:	mov    esi,0x1
   14001f7fd:	je     0x14001f804
   14001f7ff:	add    WORD PTR [r10+0x4],si
   14001f804:	sub    r12d,esi
   14001f807:	add    r9,0x2
   14001f80b:	sub    r13,0x2
   14001f80f:	test   r12d,r12d
   14001f812:	jg     0x14001f7d1
   14001f814:	mov    r9,QWORD PTR [rbp-0x40]
   14001f818:	sub    r11d,esi
   14001f81b:	add    r10,0x2
   14001f81f:	add    r15d,esi
   14001f822:	test   r11d,r11d
   14001f825:	jg     0x14001f7b4
   14001f827:	mov    r10d,DWORD PTR [rbp-0x20]
   14001f82b:	mov    r11d,DWORD PTR [rbp-0x28]
   14001f82f:	mov    eax,0xc002
   14001f834:	add    r8w,ax
   14001f838:	mov    r12d,0xffff
   14001f83e:	test   r8w,r8w
   14001f842:	jle    0x14001f880
   14001f844:	test   r10d,r10d
   14001f847:	js     0x14001f87a
   14001f849:	mov    edi,DWORD PTR [rbp-0x24]
   14001f84c:	mov    edx,r11d
   14001f84f:	add    r10d,r10d
   14001f852:	shr    edx,0x1f
   14001f855:	add    r11d,r11d
   14001f858:	mov    ecx,edi
   14001f85a:	shr    ecx,0x1f
   14001f85d:	lea    eax,[rdi+rdi*1]
   14001f860:	add    r8w,r12w
   14001f864:	or     eax,edx
   14001f866:	or     r10d,ecx
   14001f869:	mov    DWORD PTR [rbp-0x28],r11d
   14001f86d:	mov    DWORD PTR [rbp-0x24],eax
   14001f870:	mov    DWORD PTR [rbp-0x20],r10d
   14001f874:	test   r8w,r8w
   14001f878:	jg     0x14001f844
   14001f87a:	test   r8w,r8w
   14001f87e:	jg     0x14001f8e6
   14001f880:	add    r8w,r12w
   14001f884:	jns    0x14001f8e6
   14001f886:	mov    r9d,DWORD PTR [rbp-0x4c]
   14001f88a:	movzx  eax,r8w
   14001f88e:	neg    ax
   14001f891:	movzx  edx,ax
   14001f894:	add    r8w,dx
   14001f898:	test   BYTE PTR [rbp-0x28],sil
   14001f89c:	je     0x14001f8a1
   14001f89e:	add    r9d,esi
   14001f8a1:	mov    edi,DWORD PTR [rbp-0x24]
   14001f8a4:	mov    eax,r10d
   14001f8a7:	shr    r11d,1
   14001f8aa:	mov    ecx,edi
   14001f8ac:	shl    eax,0x1f
   14001f8af:	shr    edi,1
   14001f8b1:	shl    ecx,0x1f
   14001f8b4:	or     edi,eax
   14001f8b6:	shr    r10d,1
   14001f8b9:	or     r11d,ecx
   14001f8bc:	mov    DWORD PTR [rbp-0x24],edi
   14001f8bf:	mov    DWORD PTR [rbp-0x28],r11d
   14001f8c3:	sub    rdx,rsi
   14001f8c6:	jne    0x14001f898
   14001f8c8:	test   r9d,r9d
   14001f8cb:	mov    r9,QWORD PTR [rbp-0x40]
   14001f8cf:	mov    DWORD PTR [rbp-0x20],r10d
   14001f8d3:	je     0x14001f8e6
   14001f8d5:	movzx  eax,r11w
   14001f8d9:	or     ax,si
   14001f8dc:	mov    WORD PTR [rbp-0x28],ax
   14001f8e0:	mov    r11d,DWORD PTR [rbp-0x28]
   14001f8e4:	jmp    0x14001f8ea
   14001f8e6:	movzx  eax,WORD PTR [rbp-0x28]
   14001f8ea:	mov    ebx,DWORD PTR [rbp-0x48]
   14001f8ed:	mov    r14,QWORD PTR [rbp-0x38]
   14001f8f1:	mov    r15d,0x8000
   14001f8f7:	cmp    ax,r15w
   14001f8fb:	ja     0x14001f90d
   14001f8fd:	and    r11d,0x1ffff
   14001f904:	cmp    r11d,0x18000
   14001f90b:	jne    0x14001f953
   14001f90d:	mov    eax,DWORD PTR [rbp-0x26]
   14001f910:	cmp    eax,0xffffffff
   14001f913:	jne    0x14001f94e
   14001f915:	mov    eax,DWORD PTR [rbp-0x22]
   14001f918:	xor    edi,edi
   14001f91a:	mov    DWORD PTR [rbp-0x26],edi
   14001f91d:	cmp    eax,0xffffffff
   14001f920:	jne    0x14001f943
   14001f922:	movzx  eax,WORD PTR [rbp-0x1e]
   14001f926:	mov    DWORD PTR [rbp-0x22],edi
   14001f929:	cmp    ax,r12w
   14001f92d:	jne    0x14001f93a
   14001f92f:	mov    WORD PTR [rbp-0x1e],r15w
   14001f934:	add    r8w,si
   14001f938:	jmp    0x14001f948
   14001f93a:	add    ax,si
   14001f93d:	mov    WORD PTR [rbp-0x1e],ax
   14001f941:	jmp    0x14001f948
   14001f943:	add    eax,esi
   14001f945:	mov    DWORD PTR [rbp-0x22],eax
   14001f948:	mov    r10d,DWORD PTR [rbp-0x20]
   14001f94c:	jmp    0x14001f955
   14001f94e:	add    eax,esi
   14001f950:	mov    DWORD PTR [rbp-0x26],eax
   14001f953:	xor    edi,edi
   14001f955:	mov    r11d,0x7fff
   14001f95b:	cmp    r8w,r11w
   14001f95f:	jb     0x14001f96a
   14001f961:	movzx  eax,WORD PTR [rbp-0x50]
   14001f965:	neg    ax
   14001f968:	jmp    0x14001f993
   14001f96a:	movzx  eax,WORD PTR [rbp-0x26]
   14001f96e:	or     r8w,WORD PTR [rbp-0x50]
   14001f973:	mov    DWORD PTR [r9+0x6],r10d
   14001f977:	mov    WORD PTR [r9],ax
   14001f97b:	mov    eax,DWORD PTR [rbp-0x24]
   14001f97e:	mov    WORD PTR [r9+0xa],r8w
   14001f983:	mov    DWORD PTR [r9+0x2],eax
   14001f987:	jmp    0x14001f9aa
   14001f989:	mov    r11d,0x7fff
   14001f98f:	neg    r10w
   14001f993:	sbb    eax,eax
   14001f995:	mov    QWORD PTR [r9],0x0
   14001f99c:	and    eax,0x80000000
   14001f9a1:	add    eax,0x7fff8000
   14001f9a6:	mov    DWORD PTR [r9+0x8],eax
   14001f9aa:	test   ebx,ebx
   14001f9ac:	jne    0x14001f6a3
   14001f9b2:	mov    rcx,QWORD PTR [rbp-0x8]
   14001f9b6:	xor    rcx,rsp
   14001f9b9:	call   0x14000d0a0
   14001f9be:	lea    r11,[rsp+0x50]
   14001f9c3:	mov    rbx,QWORD PTR [r11+0x38]
   14001f9c7:	mov    rsi,QWORD PTR [r11+0x40]
   14001f9cb:	mov    rdi,QWORD PTR [r11+0x48]
   14001f9cf:	mov    rsp,r11
   14001f9d2:	pop    r15
   14001f9d4:	pop    r14
   14001f9d6:	pop    r13
   14001f9d8:	pop    r12
   14001f9da:	pop    rbp
   14001f9db:	ret    
   14001f9dc:	mov    eax,DWORD PTR [rcx]
   14001f9de:	mov    edx,DWORD PTR [rcx+0x4]
   14001f9e1:	mov    r8d,eax
   14001f9e4:	add    eax,eax
   14001f9e6:	mov    r9d,edx
   14001f9e9:	mov    DWORD PTR [rcx],eax
   14001f9eb:	lea    eax,[rdx+rdx*1]
   14001f9ee:	shr    r8d,0x1f
   14001f9f2:	or     eax,r8d
   14001f9f5:	shr    r9d,0x1f
   14001f9f9:	mov    DWORD PTR [rcx+0x4],eax
   14001f9fc:	mov    eax,DWORD PTR [rcx+0x8]
   14001f9ff:	add    eax,eax
   14001fa01:	or     eax,r9d
   14001fa04:	mov    DWORD PTR [rcx+0x8],eax
   14001fa07:	ret    
   14001fa08:	mov    eax,DWORD PTR [rcx+0x8]
   14001fa0b:	mov    edx,DWORD PTR [rcx+0x4]
   14001fa0e:	mov    r8d,eax
   14001fa11:	shr    eax,1
   14001fa13:	mov    r9d,edx
   14001fa16:	mov    DWORD PTR [rcx+0x8],eax
   14001fa19:	mov    eax,DWORD PTR [rcx]
   14001fa1b:	shl    r8d,0x1f
   14001fa1f:	shl    r9d,0x1f
   14001fa23:	shr    edx,1
   14001fa25:	shr    eax,1
   14001fa27:	or     eax,r9d
   14001fa2a:	or     edx,r8d
   14001fa2d:	mov    DWORD PTR [rcx],eax
   14001fa2f:	mov    DWORD PTR [rcx+0x4],edx
   14001fa32:	ret    
   14001fa33:	int3   
   14001fa34:	mov    QWORD PTR [rsp+0x18],rbx
   14001fa39:	push   rbp
   14001fa3a:	push   rsi
   14001fa3b:	push   rdi
   14001fa3c:	push   r12
   14001fa3e:	push   r13
   14001fa40:	push   r14
   14001fa42:	push   r15
   14001fa44:	lea    rbp,[rsp-0x7]
   14001fa49:	sub    rsp,0xa0
   14001fa50:	mov    rax,QWORD PTR [rip+0x16fe9]        # 0x140036a40
   14001fa57:	xor    rax,rsp
   14001fa5a:	mov    QWORD PTR [rbp-0x1],rax
   14001fa5e:	mov    r14,QWORD PTR [rbp+0x7f]
   14001fa62:	xor    ebx,ebx
   14001fa64:	mov    DWORD PTR [rbp-0x6d],r9d
   14001fa68:	lea    r9d,[rbx+0x1]
   14001fa6c:	mov    QWORD PTR [rbp-0x59],rcx
   14001fa70:	mov    QWORD PTR [rbp-0x69],rdx
   14001fa74:	lea    r10,[rbp-0x21]
   14001fa78:	mov    WORD PTR [rbp-0x71],bx
   14001fa7c:	mov    r11d,ebx
   14001fa7f:	mov    DWORD PTR [rbp-0x75],r9d
   14001fa83:	mov    r15d,ebx
   14001fa86:	mov    DWORD PTR [rbp-0x79],ebx
   14001fa89:	mov    r12d,ebx
   14001fa8c:	mov    r13d,ebx
   14001fa8f:	mov    esi,ebx
   14001fa91:	mov    ecx,ebx
   14001fa93:	test   r14,r14
   14001fa96:	jne    0x14001faaf
   14001fa98:	call   0x1400095b8
   14001fa9d:	mov    DWORD PTR [rax],0x16
   14001faa3:	call   0x140008628
   14001faa8:	xor    eax,eax
   14001faaa:	jmp    0x14002026e
   14001faaf:	mov    rdi,r8
   14001fab2:	cmp    BYTE PTR [r8],0x20
   14001fab6:	ja     0x14001fad1
   14001fab8:	movsx  rax,BYTE PTR [r8]
   14001fabc:	movabs rdx,0x100002600
   14001fac6:	bt     rdx,rax
   14001faca:	jae    0x14001fad1
   14001facc:	add    r8,r9
   14001facf:	jmp    0x14001fab2
   14001fad1:	mov    dl,BYTE PTR [r8]
   14001fad4:	add    r8,r9
   14001fad7:	cmp    ecx,0x5
   14001fada:	jg     0x14001fcea
   14001fae0:	je     0x14001fcd0
   14001fae6:	mov    r9d,ecx
   14001fae9:	test   ecx,ecx
   14001faeb:	je     0x14001fc74
   14001faf1:	dec    r9d
   14001faf4:	je     0x14001fc34
   14001fafa:	dec    r9d
   14001fafd:	je     0x14001fbe2
   14001fb03:	dec    r9d
   14001fb06:	je     0x14001fb95
   14001fb0c:	dec    r9d
   14001fb0f:	jne    0x14001fdaf
   14001fb15:	mov    r9d,0x1
   14001fb1b:	mov    al,0x30
   14001fb1d:	mov    r15d,r9d
   14001fb20:	mov    DWORD PTR [rbp-0x79],r9d
   14001fb24:	test   r11d,r11d
   14001fb27:	jne    0x14001fb59
   14001fb29:	jmp    0x14001fb34
   14001fb2b:	mov    dl,BYTE PTR [r8]
   14001fb2e:	sub    esi,r9d
   14001fb31:	add    r8,r9
   14001fb34:	cmp    dl,al
   14001fb36:	je     0x14001fb2b
   14001fb38:	jmp    0x14001fb59
   14001fb3a:	cmp    dl,0x39
   14001fb3d:	jg     0x14001fb5d
   14001fb3f:	cmp    r11d,0x19
   14001fb43:	jae    0x14001fb53
   14001fb45:	sub    dl,al
   14001fb47:	add    r11d,r9d
   14001fb4a:	mov    BYTE PTR [r10],dl
   14001fb4d:	add    r10,r9
   14001fb50:	sub    esi,r9d
   14001fb53:	mov    dl,BYTE PTR [r8]
   14001fb56:	add    r8,r9
   14001fb59:	cmp    dl,al
   14001fb5b:	jge    0x14001fb3a
   14001fb5d:	lea    eax,[rdx-0x2b]
   14001fb60:	test   al,0xfd
   14001fb62:	je     0x14001fb88
   14001fb64:	cmp    dl,0x43
   14001fb67:	jle    0x14001fca9
   14001fb6d:	cmp    dl,0x45
   14001fb70:	jle    0x14001fb7e
   14001fb72:	sub    dl,0x64
   14001fb75:	cmp    dl,r9b
   14001fb78:	ja     0x14001fca9
   14001fb7e:	mov    ecx,0x6
   14001fb83:	jmp    0x14001fad1
   14001fb88:	sub    r8,r9
   14001fb8b:	mov    ecx,0xb
   14001fb90:	jmp    0x14001fad1
   14001fb95:	mov    r9d,0x1
   14001fb9b:	mov    al,0x30
   14001fb9d:	mov    r15d,r9d
   14001fba0:	jmp    0x14001fbc3
   14001fba2:	cmp    dl,0x39
   14001fba5:	jg     0x14001fbc7
   14001fba7:	cmp    r11d,0x19
   14001fbab:	jae    0x14001fbba
   14001fbad:	sub    dl,al
   14001fbaf:	add    r11d,r9d
   14001fbb2:	mov    BYTE PTR [r10],dl
   14001fbb5:	add    r10,r9
   14001fbb8:	jmp    0x14001fbbd
   14001fbba:	add    esi,r9d
   14001fbbd:	mov    dl,BYTE PTR [r8]
   14001fbc0:	add    r8,r9
   14001fbc3:	cmp    dl,al
   14001fbc5:	jge    0x14001fba2
   14001fbc7:	mov    rax,QWORD PTR [r14]
   14001fbca:	mov    rcx,QWORD PTR [rax+0xf0]
   14001fbd1:	mov    rax,QWORD PTR [rcx]
   14001fbd4:	cmp    dl,BYTE PTR [rax]
   14001fbd6:	jne    0x14001fb5d
   14001fbd8:	mov    ecx,0x4
   14001fbdd:	jmp    0x14001fad1
   14001fbe2:	lea    eax,[rdx-0x31]
   14001fbe5:	cmp    al,0x8
   14001fbe7:	ja     0x14001fbfc
   14001fbe9:	mov    ecx,0x3
   14001fbee:	mov    r9d,0x1
   14001fbf4:	sub    r8,r9
   14001fbf7:	jmp    0x14001fad1
   14001fbfc:	mov    rax,QWORD PTR [r14]
   14001fbff:	mov    rcx,QWORD PTR [rax+0xf0]
   14001fc06:	mov    rax,QWORD PTR [rcx]
   14001fc09:	cmp    dl,BYTE PTR [rax]
   14001fc0b:	jne    0x14001fc1d
   14001fc0d:	mov    ecx,0x5
   14001fc12:	mov    r9d,0x1
   14001fc18:	jmp    0x14001fad1
   14001fc1d:	cmp    dl,0x30
   14001fc20:	jne    0x14001fe18
   14001fc26:	mov    r9d,0x1
   14001fc2c:	mov    ecx,r9d
   14001fc2f:	jmp    0x14001fad1
   14001fc34:	lea    eax,[rdx-0x31]
   14001fc37:	mov    r9d,0x1
   14001fc3d:	mov    r15d,r9d
   14001fc40:	cmp    al,0x8
   14001fc42:	ja     0x14001fc4a
   14001fc44:	lea    ecx,[r9+0x2]
   14001fc48:	jmp    0x14001fbf4
   14001fc4a:	mov    rax,QWORD PTR [r14]
   14001fc4d:	mov    rcx,QWORD PTR [rax+0xf0]
   14001fc54:	mov    rax,QWORD PTR [rcx]
   14001fc57:	cmp    dl,BYTE PTR [rax]
   14001fc59:	je     0x14001fbd8
   14001fc5f:	lea    eax,[rdx-0x2b]
   14001fc62:	test   al,0xfd
   14001fc64:	je     0x14001fb88
   14001fc6a:	cmp    dl,0x30
   14001fc6d:	je     0x14001fc2c
   14001fc6f:	jmp    0x14001fb64
   14001fc74:	lea    eax,[rdx-0x31]
   14001fc77:	cmp    al,0x8
   14001fc79:	jbe    0x14001fbe9
   14001fc7f:	mov    rax,QWORD PTR [r14]
   14001fc82:	mov    rcx,QWORD PTR [rax+0xf0]
   14001fc89:	mov    rax,QWORD PTR [rcx]
   14001fc8c:	cmp    dl,BYTE PTR [rax]
   14001fc8e:	je     0x14001fc0d
   14001fc94:	cmp    dl,0x2b
   14001fc97:	je     0x14001fcc2
   14001fc99:	cmp    dl,0x2d
   14001fc9c:	je     0x14001fcb1
   14001fc9e:	cmp    dl,0x30
   14001fca1:	je     0x14001fc26
   14001fca3:	mov    r9d,0x1
   14001fca9:	sub    r8,r9
   14001fcac:	jmp    0x14001fe21
   14001fcb1:	mov    ecx,0x2
   14001fcb6:	mov    DWORD PTR [rbp-0x71],0x8000
   14001fcbd:	jmp    0x14001fc12
   14001fcc2:	mov    ecx,0x2
   14001fcc7:	mov    WORD PTR [rbp-0x71],bx
   14001fccb:	jmp    0x14001fc12
   14001fcd0:	sub    dl,0x30
   14001fcd3:	mov    DWORD PTR [rbp-0x79],r9d
   14001fcd7:	cmp    dl,0x9
   14001fcda:	ja     0x14001fdb9
   14001fce0:	mov    ecx,0x4
   14001fce5:	jmp    0x14001fbf4
   14001fcea:	mov    r9d,ecx
   14001fced:	sub    r9d,0x6
   14001fcf1:	je     0x14001fd93
   14001fcf7:	dec    r9d
   14001fcfa:	je     0x14001fd6f
   14001fcfc:	dec    r9d
   14001fcff:	je     0x14001fd43
   14001fd01:	dec    r9d
   14001fd04:	je     0x14001fdbe
   14001fd0a:	cmp    r9d,0x2
   14001fd0e:	jne    0x14001fdaf
   14001fd14:	cmp    DWORD PTR [rbp+0x77],ebx
   14001fd17:	je     0x14001fca3
   14001fd19:	lea    rdi,[r8-0x1]
   14001fd1d:	cmp    dl,0x2b
   14001fd20:	je     0x14001fd39
   14001fd22:	cmp    dl,0x2d
   14001fd25:	jne    0x14001fe18
   14001fd2b:	or     DWORD PTR [rbp-0x75],0xffffffff
   14001fd2f:	mov    ecx,0x7
   14001fd34:	jmp    0x14001fc12
   14001fd39:	mov    ecx,0x7
   14001fd3e:	jmp    0x14001fc12
   14001fd43:	mov    r9d,0x1
   14001fd49:	mov    r12d,r9d
   14001fd4c:	jmp    0x14001fd54
   14001fd4e:	mov    dl,BYTE PTR [r8]
   14001fd51:	add    r8,r9
   14001fd54:	cmp    dl,0x30
   14001fd57:	je     0x14001fd4e
   14001fd59:	sub    dl,0x31
   14001fd5c:	cmp    dl,0x8
   14001fd5f:	ja     0x14001fca9
   14001fd65:	mov    ecx,0x9
   14001fd6a:	jmp    0x14001fbf4
   14001fd6f:	lea    eax,[rdx-0x31]
   14001fd72:	cmp    al,0x8
   14001fd74:	ja     0x14001fd80
   14001fd76:	mov    ecx,0x9
   14001fd7b:	jmp    0x14001fbee
   14001fd80:	cmp    dl,0x30
   14001fd83:	jne    0x14001fe18
   14001fd89:	mov    ecx,0x8
   14001fd8e:	jmp    0x14001fc12
   14001fd93:	lea    eax,[rdx-0x31]
   14001fd96:	lea    rdi,[r8-0x2]
   14001fd9a:	cmp    al,0x8
   14001fd9c:	jbe    0x14001fd76
   14001fd9e:	cmp    dl,0x2b
   14001fda1:	je     0x14001fdaa
   14001fda3:	cmp    dl,0x2d
   14001fda6:	je     0x14001fd2b
   14001fda8:	jmp    0x14001fd80
   14001fdaa:	mov    ecx,0x7
   14001fdaf:	cmp    ecx,0xa
   14001fdb2:	je     0x14001fe1b
   14001fdb4:	jmp    0x14001fc12
   14001fdb9:	mov    r8,rdi
   14001fdbc:	jmp    0x14001fe21
   14001fdbe:	mov    r9d,0x1
   14001fdc4:	mov    dil,0x30
   14001fdc7:	mov    r12d,r9d
   14001fdca:	jmp    0x14001fdf0
   14001fdcc:	cmp    dl,0x39
   14001fdcf:	jg     0x14001fe0e
   14001fdd1:	lea    r13d,[r13+r13*4+0x0]
   14001fdd6:	movsx  eax,dl
   14001fdd9:	lea    r13d,[r13-0x18]
   14001fddd:	lea    r13d,[rax+r13*2]
   14001fde1:	cmp    r13d,0x1450
   14001fde8:	jg     0x14001fdf7
   14001fdea:	mov    dl,BYTE PTR [r8]
   14001fded:	add    r8,r9
   14001fdf0:	cmp    dl,dil
   14001fdf3:	jge    0x14001fdcc
   14001fdf5:	jmp    0x14001fe0e
   14001fdf7:	mov    r13d,0x1451
   14001fdfd:	jmp    0x14001fe0e
   14001fdff:	cmp    dl,0x39
   14001fe02:	jg     0x14001fca9
   14001fe08:	mov    dl,BYTE PTR [r8]
   14001fe0b:	add    r8,r9
   14001fe0e:	cmp    dl,dil
   14001fe11:	jge    0x14001fdff
   14001fe13:	jmp    0x14001fca9
   14001fe18:	mov    r8,rdi
   14001fe1b:	mov    r9d,0x1
   14001fe21:	mov    rax,QWORD PTR [rbp-0x69]
   14001fe25:	mov    QWORD PTR [rax],r8
   14001fe28:	test   r15d,r15d
   14001fe2b:	je     0x140020244
   14001fe31:	cmp    r11d,0x18
   14001fe35:	jbe    0x14001fe50
   14001fe37:	mov    al,BYTE PTR [rbp-0xa]
   14001fe3a:	cmp    al,0x5
   14001fe3c:	jl     0x14001fe44
   14001fe3e:	add    al,r9b
   14001fe41:	mov    BYTE PTR [rbp-0xa],al
   14001fe44:	sub    r10,r9
   14001fe47:	mov    r11d,0x18
   14001fe4d:	add    esi,r9d
   14001fe50:	test   r11d,r11d
   14001fe53:	jne    0x14001fe6a
   14001fe55:	movzx  edx,bx
   14001fe58:	movzx  eax,bx
   14001fe5b:	mov    edi,ebx
   14001fe5d:	mov    ecx,ebx
   14001fe5f:	jmp    0x140020253
   14001fe64:	dec    r11d
   14001fe67:	add    esi,r9d
   14001fe6a:	sub    r10,r9
   14001fe6d:	cmp    BYTE PTR [r10],bl
   14001fe70:	je     0x14001fe64
   14001fe72:	lea    r8,[rbp-0x41]
   14001fe76:	lea    rcx,[rbp-0x21]
   14001fe7a:	mov    edx,r11d
   14001fe7d:	call   0x140023c30
   14001fe82:	cmp    DWORD PTR [rbp-0x75],ebx
   14001fe85:	jge    0x14001fe8a
   14001fe87:	neg    r13d
   14001fe8a:	add    r13d,esi
   14001fe8d:	test   r12d,r12d
   14001fe90:	jne    0x14001fe96
   14001fe92:	add    r13d,DWORD PTR [rbp+0x67]
   14001fe96:	cmp    DWORD PTR [rbp-0x79],ebx
   14001fe99:	jne    0x14001fe9f
   14001fe9b:	sub    r13d,DWORD PTR [rbp+0x6f]
   14001fe9f:	cmp    r13d,0x1450
   14001fea6:	jg     0x14002022e
   14001feac:	cmp    r13d,0xffffebb0
   14001feb3:	jl     0x14002021e
   14001feb9:	lea    rsi,[rip+0x17700]        # 0x1400375c0
   14001fec0:	sub    rsi,0x60
   14001fec4:	test   r13d,r13d
   14001fec7:	je     0x14002020c
   14001fecd:	jns    0x14001fedd
   14001fecf:	lea    rsi,[rip+0x1784a]        # 0x140037720
   14001fed6:	neg    r13d
   14001fed9:	sub    rsi,0x60
   14001fedd:	cmp    DWORD PTR [rbp-0x6d],ebx
   14001fee0:	jne    0x14001fee6
   14001fee2:	mov    WORD PTR [rbp-0x41],bx
   14001fee6:	test   r13d,r13d
   14001fee9:	je     0x14002020c
   14001feef:	mov    edi,0x80000000
   14001fef4:	mov    r9d,0x7fff
   14001fefa:	mov    eax,r13d
   14001fefd:	add    rsi,0x54
   14001ff01:	sar    r13d,0x3
   14001ff05:	mov    QWORD PTR [rbp-0x61],rsi
   14001ff09:	and    eax,0x7
   14001ff0c:	je     0x140020203
   14001ff12:	cdqe   
   14001ff14:	mov    r11d,0x8000
   14001ff1a:	mov    r14d,0x1
   14001ff20:	lea    rcx,[rax+rax*2]
   14001ff24:	lea    rdx,[rsi+rcx*4]
   14001ff28:	mov    QWORD PTR [rbp-0x69],rdx
   14001ff2c:	cmp    WORD PTR [rdx],r11w
   14001ff30:	jb     0x14001ff57
   14001ff32:	mov    eax,DWORD PTR [rdx+0x8]
   14001ff35:	movsd  xmm0,QWORD PTR [rdx]
   14001ff39:	lea    rdx,[rbp-0x31]
   14001ff3d:	mov    DWORD PTR [rbp-0x29],eax
   14001ff40:	movsd  QWORD PTR [rbp-0x31],xmm0
   14001ff45:	mov    rax,QWORD PTR [rbp-0x31]
   14001ff49:	shr    rax,0x10
   14001ff4d:	mov    QWORD PTR [rbp-0x69],rdx
   14001ff51:	sub    eax,r14d
   14001ff54:	mov    DWORD PTR [rbp-0x2f],eax
   14001ff57:	movzx  eax,WORD PTR [rdx+0xa]
   14001ff5b:	movzx  ecx,WORD PTR [rbp-0x37]
   14001ff5f:	mov    QWORD PTR [rbp-0x51],rbx
   14001ff63:	movzx  r12d,ax
   14001ff67:	and    ax,r9w
   14001ff6b:	mov    DWORD PTR [rbp-0x49],ebx
   14001ff6e:	xor    r12w,cx
   14001ff72:	and    cx,r9w
   14001ff76:	and    r12w,r11w
   14001ff7a:	lea    r8d,[rcx+rax*1]
   14001ff7e:	cmp    cx,r9w
   14001ff82:	jae    0x1400201ef
   14001ff88:	cmp    ax,r9w
   14001ff8c:	jae    0x1400201ef
   14001ff92:	mov    r10d,0xbffd
   14001ff98:	cmp    r8w,r10w
   14001ff9c:	ja     0x1400201ef
   14001ffa2:	mov    r10d,0x3fbf
   14001ffa8:	cmp    r8w,r10w
   14001ffac:	ja     0x14001ffba
   14001ffae:	mov    QWORD PTR [rbp-0x3d],rbx
   14001ffb2:	mov    DWORD PTR [rbp-0x41],ebx
   14001ffb5:	jmp    0x140020203
   14001ffba:	test   cx,cx
   14001ffbd:	jne    0x14001ffdf
   14001ffbf:	add    r8w,r14w
   14001ffc3:	test   DWORD PTR [rbp-0x39],0x7fffffff
   14001ffca:	jne    0x14001ffdf
   14001ffcc:	cmp    DWORD PTR [rbp-0x3d],ebx
   14001ffcf:	jne    0x14001ffdf
   14001ffd1:	cmp    DWORD PTR [rbp-0x41],ebx
   14001ffd4:	jne    0x14001ffdf
   14001ffd6:	mov    WORD PTR [rbp-0x37],bx
   14001ffda:	jmp    0x140020203
   14001ffdf:	test   ax,ax
   14001ffe2:	jne    0x14001fffa
   14001ffe4:	add    r8w,r14w
   14001ffe8:	test   DWORD PTR [rdx+0x8],0x7fffffff
   14001ffef:	jne    0x14001fffa
   14001fff1:	cmp    DWORD PTR [rdx+0x4],ebx
   14001fff4:	jne    0x14001fffa
   14001fff6:	cmp    DWORD PTR [rdx],ebx
   14001fff8:	je     0x14001ffae
   14001fffa:	mov    r15d,ebx
   14001fffd:	lea    r9,[rbp-0x51]
   140020001:	mov    r10d,0x5
   140020007:	mov    DWORD PTR [rbp-0x79],r10d
   14002000b:	test   r10d,r10d
   14002000e:	jle    0x14002007c
   140020010:	lea    eax,[r15+r15*1]
   140020014:	lea    rdi,[rbp-0x41]
   140020018:	lea    rsi,[rdx+0x8]
   14002001c:	movsxd rcx,eax
   14002001f:	mov    eax,r15d
   140020022:	and    eax,r14d
   140020025:	add    rdi,rcx
   140020028:	mov    edx,eax
   14002002a:	movzx  eax,WORD PTR [rdi]
   14002002d:	movzx  ecx,WORD PTR [rsi]
   140020030:	mov    r11d,ebx
   140020033:	imul   ecx,eax
   140020036:	mov    eax,DWORD PTR [r9]
   140020039:	lea    r14d,[rax+rcx*1]
   14002003d:	cmp    r14d,eax
   140020040:	jb     0x140020047
   140020042:	cmp    r14d,ecx
   140020045:	jae    0x14002004d
   140020047:	mov    r11d,0x1
   14002004d:	mov    DWORD PTR [r9],r14d
   140020050:	mov    r14d,0x1
   140020056:	test   r11d,r11d
   140020059:	je     0x140020060
   14002005b:	add    WORD PTR [r9+0x4],r14w
   140020060:	mov    r11d,DWORD PTR [rbp-0x79]
   140020064:	add    rdi,0x2
   140020068:	sub    rsi,0x2
   14002006c:	sub    r11d,r14d
   14002006f:	mov    DWORD PTR [rbp-0x79],r11d
   140020073:	test   r11d,r11d
   140020076:	jg     0x14002002a
   140020078:	mov    rdx,QWORD PTR [rbp-0x69]
   14002007c:	sub    r10d,r14d
   14002007f:	add    r9,0x2
   140020083:	add    r15d,r14d
   140020086:	test   r10d,r10d
   140020089:	jg     0x140020007
   14002008f:	mov    r10d,DWORD PTR [rbp-0x49]
   140020093:	mov    r9d,DWORD PTR [rbp-0x51]
   140020097:	mov    eax,0xc002
   14002009c:	add    r8w,ax
   1400200a0:	mov    edi,0x80000000
   1400200a5:	mov    r15d,0xffff
   1400200ab:	test   r8w,r8w
   1400200af:	jle    0x1400200f0
   1400200b1:	test   edi,r10d
   1400200b4:	jne    0x1400200ea
   1400200b6:	mov    r11d,DWORD PTR [rbp-0x4d]
   1400200ba:	mov    edx,r9d
   1400200bd:	add    r10d,r10d
   1400200c0:	shr    edx,0x1f
   1400200c3:	add    r9d,r9d
   1400200c6:	mov    ecx,r11d
   1400200c9:	shr    ecx,0x1f
   1400200cc:	lea    eax,[r11+r11*1]
   1400200d0:	add    r8w,r15w
   1400200d4:	or     eax,edx
   1400200d6:	or     r10d,ecx
   1400200d9:	mov    DWORD PTR [rbp-0x51],r9d
   1400200dd:	mov    DWORD PTR [rbp-0x4d],eax
   1400200e0:	mov    DWORD PTR [rbp-0x49],r10d
   1400200e4:	test   r8w,r8w
   1400200e8:	jg     0x1400200b1
   1400200ea:	test   r8w,r8w
   1400200ee:	jg     0x14002015a
   1400200f0:	add    r8w,r15w
   1400200f4:	jns    0x14002015a
   1400200f6:	movzx  eax,r8w
   1400200fa:	mov    edi,ebx
   1400200fc:	neg    ax
   1400200ff:	movzx  edx,ax
   140020102:	add    r8w,dx
   140020106:	test   BYTE PTR [rbp-0x51],r14b
   14002010a:	je     0x14002010f
   14002010c:	add    edi,r14d
   14002010f:	mov    r11d,DWORD PTR [rbp-0x4d]
   140020113:	mov    eax,r10d
   140020116:	shr    r9d,1
   140020119:	mov    ecx,r11d
   14002011c:	shl    eax,0x1f
   14002011f:	shr    r11d,1
   140020122:	shl    ecx,0x1f
   140020125:	or     r11d,eax
   140020128:	shr    r10d,1
   14002012b:	or     r9d,ecx
   14002012e:	mov    DWORD PTR [rbp-0x4d],r11d
   140020132:	mov    DWORD PTR [rbp-0x51],r9d
   140020136:	sub    rdx,r14
   140020139:	jne    0x140020106
   14002013b:	test   edi,edi
   14002013d:	mov    DWORD PTR [rbp-0x49],r10d
   140020141:	mov    edi,0x80000000
   140020146:	je     0x14002015a
   140020148:	movzx  eax,r9w
   14002014c:	or     ax,r14w
   140020150:	mov    WORD PTR [rbp-0x51],ax
   140020154:	mov    r9d,DWORD PTR [rbp-0x51]
   140020158:	jmp    0x14002015e
   14002015a:	movzx  eax,WORD PTR [rbp-0x51]
   14002015e:	mov    rsi,QWORD PTR [rbp-0x61]
   140020162:	mov    r11d,0x8000
   140020168:	cmp    ax,r11w
   14002016c:	ja     0x14002017e
   14002016e:	and    r9d,0x1ffff
   140020175:	cmp    r9d,0x18000
   14002017c:	jne    0x1400201c6
   14002017e:	mov    eax,DWORD PTR [rbp-0x4f]
   140020181:	or     ecx,0xffffffff
   140020184:	cmp    eax,ecx
   140020186:	jne    0x1400201c0
   140020188:	mov    eax,DWORD PTR [rbp-0x4b]
   14002018b:	mov    DWORD PTR [rbp-0x4f],ebx
   14002018e:	cmp    eax,ecx
   140020190:	jne    0x1400201b4
   140020192:	movzx  eax,WORD PTR [rbp-0x47]
   140020196:	mov    DWORD PTR [rbp-0x4b],ebx
   140020199:	cmp    ax,r15w
   14002019d:	jne    0x1400201aa
   14002019f:	mov    WORD PTR [rbp-0x47],r11w
   1400201a4:	add    r8w,r14w
   1400201a8:	jmp    0x1400201ba
   1400201aa:	add    ax,r14w
   1400201ae:	mov    WORD PTR [rbp-0x47],ax
   1400201b2:	jmp    0x1400201ba
   1400201b4:	add    eax,r14d
   1400201b7:	mov    DWORD PTR [rbp-0x4b],eax
   1400201ba:	mov    r10d,DWORD PTR [rbp-0x49]
   1400201be:	jmp    0x1400201c6
   1400201c0:	add    eax,r14d
   1400201c3:	mov    DWORD PTR [rbp-0x4f],eax
   1400201c6:	mov    r9d,0x7fff
   1400201cc:	cmp    r8w,r9w
   1400201d0:	jae    0x1400201ef
   1400201d2:	movzx  eax,WORD PTR [rbp-0x4f]
   1400201d6:	or     r8w,r12w
   1400201da:	mov    DWORD PTR [rbp-0x3b],r10d
   1400201de:	mov    WORD PTR [rbp-0x41],ax
   1400201e2:	mov    eax,DWORD PTR [rbp-0x4d]
   1400201e5:	mov    WORD PTR [rbp-0x37],r8w
   1400201ea:	mov    DWORD PTR [rbp-0x3f],eax
   1400201ed:	jmp    0x140020203
   1400201ef:	neg    r12w
   1400201f3:	mov    QWORD PTR [rbp-0x41],rbx
   1400201f7:	sbb    eax,eax
   1400201f9:	and    eax,edi
   1400201fb:	add    eax,0x7fff8000
   140020200:	mov    DWORD PTR [rbp-0x39],eax
   140020203:	test   r13d,r13d
   140020206:	jne    0x14001fefa
   14002020c:	mov    eax,DWORD PTR [rbp-0x39]
   14002020f:	movzx  edx,WORD PTR [rbp-0x41]
   140020213:	mov    ecx,DWORD PTR [rbp-0x3f]
   140020216:	mov    edi,DWORD PTR [rbp-0x3b]
   140020219:	shr    eax,0x10
   14002021c:	jmp    0x140020253
   14002021e:	mov    edx,ebx
   140020220:	movzx  eax,bx
   140020223:	mov    edi,ebx
   140020225:	mov    ecx,ebx
   140020227:	mov    ebx,0x1
   14002022c:	jmp    0x140020253
   14002022e:	mov    ecx,ebx
   140020230:	movzx  edx,bx
   140020233:	mov    eax,0x7fff
   140020238:	mov    ebx,0x2
   14002023d:	mov    edi,0x80000000
   140020242:	jmp    0x140020253
   140020244:	movzx  edx,bx
   140020247:	movzx  eax,bx
   14002024a:	mov    edi,ebx
   14002024c:	mov    ecx,ebx
   14002024e:	mov    ebx,0x4
   140020253:	mov    r8,QWORD PTR [rbp-0x59]
   140020257:	or     ax,WORD PTR [rbp-0x71]
   14002025b:	mov    WORD PTR [r8+0xa],ax
   140020260:	mov    eax,ebx
   140020262:	mov    WORD PTR [r8],dx
   140020266:	mov    DWORD PTR [r8+0x2],ecx
   14002026a:	mov    DWORD PTR [r8+0x6],edi
   14002026e:	mov    rcx,QWORD PTR [rbp-0x1]
   140020272:	xor    rcx,rsp
   140020275:	call   0x14000d0a0
   14002027a:	mov    rbx,QWORD PTR [rsp+0xf0]
   140020282:	add    rsp,0xa0
   140020289:	pop    r15
   14002028b:	pop    r14
   14002028d:	pop    r13
   14002028f:	pop    r12
   140020291:	pop    rdi
   140020292:	pop    rsi
   140020293:	pop    rbp
   140020294:	ret    
   140020295:	int3   
   140020296:	int3   
   140020297:	int3   
   140020298:	mov    QWORD PTR [rsp+0x10],rbx
   14002029d:	push   rbp
   14002029e:	push   rsi
   14002029f:	push   rdi
   1400202a0:	push   r12
   1400202a2:	push   r13
   1400202a4:	push   r14
   1400202a6:	push   r15
   1400202a8:	lea    rbp,[rsp-0x27]
   1400202ad:	sub    rsp,0xc0
   1400202b4:	mov    rax,QWORD PTR [rip+0x16785]        # 0x140036a40
   1400202bb:	xor    rax,rsp
   1400202be:	mov    QWORD PTR [rbp+0x17],rax
   1400202c2:	movzx  r10d,WORD PTR [rcx+0x8]
   1400202c7:	mov    rbx,r9
   1400202ca:	mov    r9d,DWORD PTR [rcx]
   1400202cd:	mov    DWORD PTR [rbp-0x4d],edx
   1400202d0:	mov    edx,0x8000
   1400202d5:	mov    r11d,0x1
   1400202db:	mov    DWORD PTR [rbp-0x39],r8d
   1400202df:	mov    r8d,DWORD PTR [rcx+0x4]
   1400202e3:	movzx  ecx,r10w
   1400202e7:	and    cx,dx
   1400202ea:	lea    r13d,[rdx-0x1]
   1400202ee:	lea    eax,[r11+0x1f]
   1400202f2:	xor    r12d,r12d
   1400202f5:	and    r10w,r13w
   1400202f9:	mov    QWORD PTR [rbp-0x41],rbx
   1400202fd:	mov    DWORD PTR [rbp-0x9],0xcccccccc
   140020304:	mov    DWORD PTR [rbp-0x5],0xcccccccc
   14002030b:	mov    DWORD PTR [rbp-0x1],0x3ffbcccc
   140020312:	mov    WORD PTR [rbp-0x67],cx
   140020316:	lea    edi,[rax+0xd]
   140020319:	test   cx,cx
   14002031c:	je     0x140020324
   14002031e:	mov    BYTE PTR [rbx+0x2],dil
   140020322:	jmp    0x140020327
   140020324:	mov    BYTE PTR [rbx+0x2],al
   140020327:	test   r10w,r10w
   14002032b:	jne    0x14002035b
   14002032d:	test   r8d,r8d
   140020330:	jne    0x14002042a
   140020336:	test   r9d,r9d
   140020339:	jne    0x14002042a
   14002033f:	cmp    cx,dx
   140020342:	cmove  eax,edi
   140020345:	mov    WORD PTR [rbx],r12w
   140020349:	mov    BYTE PTR [rbx+0x2],al
   14002034c:	mov    WORD PTR [rbx+0x3],0x3001
   140020352:	mov    BYTE PTR [rbx+0x5],r12b
   140020356:	jmp    0x140020cb6
   14002035b:	cmp    r10w,r13w
   14002035f:	jne    0x14002042a
   140020365:	mov    esi,0x80000000
   14002036a:	mov    WORD PTR [rbx],r11w
   14002036e:	cmp    r8d,esi
   140020371:	jne    0x140020378
   140020373:	test   r9d,r9d
   140020376:	je     0x1400203a1
   140020378:	bt     r8d,0x1e
   14002037d:	jb     0x1400203a1
   14002037f:	lea    rcx,[rbx+0x4]
   140020383:	lea    r8,[rip+0xf6be]        # 0x14002fa48
   14002038a:	mov    edx,0x16
   14002038f:	call   0x14000ee64
   140020394:	test   eax,eax
   140020396:	je     0x14002041e
   14002039c:	jmp    0x140020d1c
   1400203a1:	test   cx,cx
   1400203a4:	je     0x1400203d1
   1400203a6:	cmp    r8d,0xc0000000
   1400203ad:	jne    0x1400203d1
   1400203af:	test   r9d,r9d
   1400203b2:	jne    0x140020401
   1400203b4:	lea    rcx,[rbx+0x4]
   1400203b8:	lea    r8,[rip+0xf691]        # 0x14002fa50
   1400203bf:	lea    edx,[r9+0x16]
   1400203c3:	call   0x14000ee64
   1400203c8:	test   eax,eax
   1400203ca:	je     0x1400203f7
   1400203cc:	jmp    0x140020d31
   1400203d1:	cmp    r8d,esi
   1400203d4:	jne    0x140020401
   1400203d6:	test   r9d,r9d
   1400203d9:	jne    0x140020401
   1400203db:	lea    rcx,[rbx+0x4]
   1400203df:	lea    r8,[rip+0xf672]        # 0x14002fa58
   1400203e6:	lea    edx,[r9+0x16]
   1400203ea:	call   0x14000ee64
   1400203ef:	test   eax,eax
   1400203f1:	jne    0x140020d46
   1400203f7:	mov    eax,0x5
   1400203fc:	mov    BYTE PTR [rbx+0x3],al
   1400203ff:	jmp    0x140020422
   140020401:	lea    rcx,[rbx+0x4]
   140020405:	lea    r8,[rip+0xf654]        # 0x14002fa60
   14002040c:	mov    edx,0x16
   140020411:	call   0x14000ee64
   140020416:	test   eax,eax
   140020418:	jne    0x140020d5b
   14002041e:	mov    BYTE PTR [rbx+0x3],0x6
   140020422:	mov    r11d,r12d
   140020425:	jmp    0x140020cb6
   14002042a:	movzx  edx,r10w
   14002042e:	mov    DWORD PTR [rbp-0x17],r9d
   140020432:	mov    WORD PTR [rbp-0xf],r10w
   140020437:	mov    ecx,r8d
   14002043a:	mov    eax,edx
   14002043c:	lea    r9,[rip+0x1717d]        # 0x1400375c0
   140020443:	shr    ecx,0x18
   140020446:	shr    eax,0x8
   140020449:	mov    r15d,0x80000000
   14002044f:	lea    eax,[rax+rcx*2]
   140020452:	mov    r14d,0x5
   140020458:	sub    r9,0x60
   14002045c:	mov    DWORD PTR [rbp-0x13],r8d
   140020460:	mov    WORD PTR [rbp-0x19],r12w
   140020465:	mov    esi,0xbffd
   14002046a:	imul   ecx,eax,0x4d
   14002046d:	imul   eax,edx,0x4d10
   140020473:	add    eax,0xecbced0c
   140020478:	mov    DWORD PTR [rbp-0x49],r14d
   14002047c:	lea    edi,[r15-0x1]
   140020480:	add    ecx,eax
   140020482:	sar    ecx,0x10
   140020485:	movsx  r10d,cx
   140020489:	mov    DWORD PTR [rbp-0x61],ecx
   14002048c:	neg    r10d
   14002048f:	je     0x140020804
   140020495:	test   r10d,r10d
   140020498:	jns    0x1400204ab
   14002049a:	lea    r9,[rip+0x1727f]        # 0x140037720
   1400204a1:	neg    r10d
   1400204a4:	sub    r9,0x60
   1400204a8:	test   r10d,r10d
   1400204ab:	je     0x140020804
   1400204b1:	mov    r8d,DWORD PTR [rbp-0x15]
   1400204b5:	mov    edx,DWORD PTR [rbp-0x19]
   1400204b8:	mov    eax,r10d
   1400204bb:	add    r9,0x54
   1400204bf:	sar    r10d,0x3
   1400204c3:	mov    DWORD PTR [rbp-0x51],r10d
   1400204c7:	mov    QWORD PTR [rbp-0x59],r9
   1400204cb:	and    eax,0x7
   1400204ce:	je     0x1400207ed
   1400204d4:	cdqe   
   1400204d6:	lea    rcx,[rax+rax*2]
   1400204da:	lea    rsi,[r9+rcx*4]
   1400204de:	mov    r9d,0x8000
   1400204e4:	mov    QWORD PTR [rbp-0x31],rsi
   1400204e8:	cmp    WORD PTR [rsi],r9w
   1400204ec:	jb     0x140020513
   1400204ee:	mov    eax,DWORD PTR [rsi+0x8]
   1400204f1:	movsd  xmm0,QWORD PTR [rsi]
   1400204f5:	lea    rsi,[rbp+0x7]
   1400204f9:	mov    DWORD PTR [rbp+0xf],eax
   1400204fc:	movsd  QWORD PTR [rbp+0x7],xmm0
   140020501:	mov    rax,QWORD PTR [rbp+0x7]
   140020505:	shr    rax,0x10
   140020509:	mov    QWORD PTR [rbp-0x31],rsi
   14002050d:	sub    eax,r11d
   140020510:	mov    DWORD PTR [rbp+0x9],eax
   140020513:	movzx  ecx,WORD PTR [rsi+0xa]
   140020517:	movzx  eax,WORD PTR [rbp-0xf]
   14002051b:	mov    DWORD PTR [rbp-0x65],r12d
   14002051f:	movzx  ebx,cx
   140020522:	and    cx,r13w
   140020526:	mov    QWORD PTR [rbp-0x29],0x0
   14002052e:	xor    bx,ax
   140020531:	and    ax,r13w
   140020535:	mov    DWORD PTR [rbp-0x21],r12d
   140020539:	and    bx,r9w
   14002053d:	lea    r9d,[rax+rcx*1]
   140020541:	mov    WORD PTR [rbp-0x69],bx
   140020545:	cmp    ax,r13w
   140020549:	jae    0x1400207cc
   14002054f:	cmp    cx,r13w
   140020553:	jae    0x1400207cc
   140020559:	mov    r13d,0xbffd
   14002055f:	cmp    r9w,r13w
   140020563:	ja     0x1400207c6
   140020569:	mov    ebx,0x3fbf
   14002056e:	cmp    r9w,bx
   140020572:	ja     0x140020587
   140020574:	mov    QWORD PTR [rbp-0x15],0x0
   14002057c:	mov    r13d,0x7fff
   140020582:	jmp    0x1400207e0
   140020587:	test   ax,ax
   14002058a:	jne    0x1400205ae
   14002058c:	add    r9w,r11w
   140020590:	test   DWORD PTR [rbp-0x11],edi
   140020593:	jne    0x1400205ae
   140020595:	test   r8d,r8d
   140020598:	jne    0x1400205ae
   14002059a:	test   edx,edx
   14002059c:	jne    0x1400205ae
   14002059e:	mov    WORD PTR [rbp-0xf],r12w
   1400205a3:	mov    r13d,0x7fff
   1400205a9:	jmp    0x1400207e9
   1400205ae:	test   cx,cx
   1400205b1:	jne    0x1400205c7
   1400205b3:	add    r9w,r11w
   1400205b7:	test   DWORD PTR [rsi+0x8],edi
   1400205ba:	jne    0x1400205c7
   1400205bc:	cmp    DWORD PTR [rsi+0x4],r12d
   1400205c0:	jne    0x1400205c7
   1400205c2:	cmp    DWORD PTR [rsi],r12d
   1400205c5:	je     0x140020574
   1400205c7:	mov    edi,r14d
   1400205ca:	lea    rdx,[rbp-0x29]
   1400205ce:	xor    r14d,r14d
   1400205d1:	mov    r13d,edi
   1400205d4:	test   edi,edi
   1400205d6:	jle    0x140020637
   1400205d8:	lea    eax,[r12+r12*1]
   1400205dc:	lea    r14,[rbp-0x19]
   1400205e0:	mov    ebx,r12d
   1400205e3:	movsxd rcx,eax
   1400205e6:	and    ebx,r11d
   1400205e9:	lea    r15,[rsi+0x8]
   1400205ed:	add    r14,rcx
   1400205f0:	xor    esi,esi
   1400205f2:	movzx  eax,WORD PTR [r15]
   1400205f6:	movzx  ecx,WORD PTR [r14]
   1400205fa:	mov    r10d,esi
   1400205fd:	imul   ecx,eax
   140020600:	mov    eax,DWORD PTR [rdx]
   140020602:	lea    r8d,[rax+rcx*1]
   140020606:	cmp    r8d,eax
   140020609:	jb     0x140020610
   14002060b:	cmp    r8d,ecx
   14002060e:	jae    0x140020613
   140020610:	mov    r10d,r11d
   140020613:	mov    DWORD PTR [rdx],r8d
   140020616:	test   r10d,r10d
   140020619:	je     0x140020620
   14002061b:	add    WORD PTR [rdx+0x4],r11w
   140020620:	sub    r13d,r11d
   140020623:	add    r14,0x2
   140020627:	sub    r15,0x2
   14002062b:	test   r13d,r13d
   14002062e:	jg     0x1400205f2
   140020630:	mov    rsi,QWORD PTR [rbp-0x31]
   140020634:	xor    r14d,r14d
   140020637:	sub    edi,r11d
   14002063a:	add    rdx,0x2
   14002063e:	add    r12d,r11d
   140020641:	test   edi,edi
   140020643:	jg     0x1400205d1
   140020645:	mov    r10d,DWORD PTR [rbp-0x21]
   140020649:	mov    r8d,DWORD PTR [rbp-0x29]
   14002064d:	mov    eax,0xc002
   140020652:	add    r9w,ax
   140020656:	xor    r12d,r12d
   140020659:	mov    ebx,0xffff
   14002065e:	mov    r15d,0x80000000
   140020664:	test   r9w,r9w
   140020668:	jle    0x1400206a6
   14002066a:	test   r15d,r10d
   14002066d:	jne    0x1400206a0
   14002066f:	mov    edi,DWORD PTR [rbp-0x25]
   140020672:	mov    edx,r8d
   140020675:	add    r10d,r10d
   140020678:	shr    edx,0x1f
   14002067b:	add    r8d,r8d
   14002067e:	mov    ecx,edi
   140020680:	shr    ecx,0x1f
   140020683:	lea    eax,[rdi+rdi*1]
   140020686:	add    r9w,bx
   14002068a:	or     eax,edx
   14002068c:	or     r10d,ecx
   14002068f:	mov    DWORD PTR [rbp-0x29],r8d
   140020693:	mov    DWORD PTR [rbp-0x25],eax
   140020696:	mov    DWORD PTR [rbp-0x21],r10d
   14002069a:	test   r9w,r9w
   14002069e:	jg     0x14002066a
   1400206a0:	test   r9w,r9w
   1400206a4:	jg     0x140020713
   1400206a6:	add    r9w,bx
   1400206aa:	jns    0x140020713
   1400206ac:	movzx  eax,r9w
   1400206b0:	neg    ax
   1400206b3:	movzx  edx,ax
   1400206b6:	add    r9w,dx
   1400206ba:	mov    WORD PTR [rbp-0x5d],r9w
   1400206bf:	mov    r9d,DWORD PTR [rbp-0x65]
   1400206c3:	test   BYTE PTR [rbp-0x29],r11b
   1400206c7:	je     0x1400206cc
   1400206c9:	add    r9d,r11d
   1400206cc:	mov    edi,DWORD PTR [rbp-0x25]
   1400206cf:	mov    eax,r10d
   1400206d2:	shr    r8d,1
   1400206d5:	mov    ecx,edi
   1400206d7:	shl    eax,0x1f
   1400206da:	shr    edi,1
   1400206dc:	shl    ecx,0x1f
   1400206df:	or     edi,eax
   1400206e1:	shr    r10d,1
   1400206e4:	or     r8d,ecx
   1400206e7:	mov    DWORD PTR [rbp-0x25],edi
   1400206ea:	mov    DWORD PTR [rbp-0x29],r8d
   1400206ee:	sub    rdx,r11
   1400206f1:	jne    0x1400206c3
   1400206f3:	test   r9d,r9d
   1400206f6:	movzx  r9d,WORD PTR [rbp-0x5d]
   1400206fb:	mov    DWORD PTR [rbp-0x21],r10d
   1400206ff:	je     0x140020713
   140020701:	movzx  eax,r8w
   140020705:	or     ax,r11w
   140020709:	mov    WORD PTR [rbp-0x29],ax
   14002070d:	mov    r8d,DWORD PTR [rbp-0x29]
   140020711:	jmp    0x140020717
   140020713:	movzx  eax,WORD PTR [rbp-0x29]
   140020717:	mov    ecx,0x8000
   14002071c:	cmp    ax,cx
   14002071f:	ja     0x140020731
   140020721:	and    r8d,0x1ffff
   140020728:	cmp    r8d,0x18000
   14002072f:	jne    0x140020779
   140020731:	mov    eax,DWORD PTR [rbp-0x27]
   140020734:	or     edx,0xffffffff
   140020737:	cmp    eax,edx
   140020739:	jne    0x140020773
   14002073b:	mov    eax,DWORD PTR [rbp-0x23]
   14002073e:	mov    DWORD PTR [rbp-0x27],r12d
   140020742:	cmp    eax,edx
   140020744:	jne    0x140020767
   140020746:	movzx  eax,WORD PTR [rbp-0x1f]
   14002074a:	mov    DWORD PTR [rbp-0x23],r12d
   14002074e:	cmp    ax,bx
   140020751:	jne    0x14002075d
   140020753:	mov    WORD PTR [rbp-0x1f],cx
   140020757:	add    r9w,r11w
   14002075b:	jmp    0x14002076d
   14002075d:	add    ax,r11w
   140020761:	mov    WORD PTR [rbp-0x1f],ax
   140020765:	jmp    0x14002076d
   140020767:	add    eax,r11d
   14002076a:	mov    DWORD PTR [rbp-0x23],eax
   14002076d:	mov    r10d,DWORD PTR [rbp-0x21]
   140020771:	jmp    0x140020779
   140020773:	add    eax,r11d
   140020776:	mov    DWORD PTR [rbp-0x27],eax
   140020779:	mov    r13d,0x7fff
   14002077f:	mov    r14d,0x5
   140020785:	mov    edi,0x7fffffff
   14002078a:	cmp    r9w,r13w
   14002078e:	jb     0x14002079d
   140020790:	movzx  eax,WORD PTR [rbp-0x69]
   140020794:	mov    r10d,DWORD PTR [rbp-0x51]
   140020798:	neg    ax
   14002079b:	jmp    0x1400207cf
   14002079d:	movzx  eax,WORD PTR [rbp-0x27]
   1400207a1:	or     r9w,WORD PTR [rbp-0x69]
   1400207a6:	mov    DWORD PTR [rbp-0x13],r10d
   1400207aa:	mov    r10d,DWORD PTR [rbp-0x51]
   1400207ae:	mov    WORD PTR [rbp-0x19],ax
   1400207b2:	mov    eax,DWORD PTR [rbp-0x25]
   1400207b5:	mov    DWORD PTR [rbp-0x17],eax
   1400207b8:	mov    r8d,DWORD PTR [rbp-0x15]
   1400207bc:	mov    edx,DWORD PTR [rbp-0x19]
   1400207bf:	mov    WORD PTR [rbp-0xf],r9w
   1400207c4:	jmp    0x1400207e9
   1400207c6:	mov    r13d,0x7fff
   1400207cc:	neg    bx
   1400207cf:	sbb    eax,eax
   1400207d1:	mov    DWORD PTR [rbp-0x15],r12d
   1400207d5:	and    eax,r15d
   1400207d8:	add    eax,0x7fff8000
   1400207dd:	mov    DWORD PTR [rbp-0x11],eax
   1400207e0:	mov    edx,r12d
   1400207e3:	mov    r8d,r12d
   1400207e6:	mov    DWORD PTR [rbp-0x19],edx
   1400207e9:	mov    r9,QWORD PTR [rbp-0x59]
   1400207ed:	test   r10d,r10d
   1400207f0:	jne    0x1400204b8
   1400207f6:	mov    rbx,QWORD PTR [rbp-0x41]
   1400207fa:	mov    ecx,DWORD PTR [rbp-0x61]
   1400207fd:	mov    esi,0xbffd
   140020802:	jmp    0x14002080b
   140020804:	mov    r8d,DWORD PTR [rbp-0x15]
   140020808:	mov    edx,DWORD PTR [rbp-0x19]
   14002080b:	mov    eax,DWORD PTR [rbp-0x11]
   14002080e:	mov    r9d,0x3fff
   140020814:	shr    eax,0x10
   140020817:	cmp    ax,r9w
   14002081b:	jb     0x140020ad7
   140020821:	add    cx,r11w
   140020825:	mov    r9d,0x8000
   14002082b:	mov    DWORD PTR [rbp-0x65],r12d
   14002082f:	lea    r10d,[r9-0x1]
   140020833:	mov    DWORD PTR [rbp-0x61],ecx
   140020836:	movzx  ecx,WORD PTR [rbp+0x1]
   14002083a:	movzx  r13d,cx
   14002083e:	and    cx,r10w
   140020842:	mov    QWORD PTR [rbp-0x29],0x0
   14002084a:	xor    r13w,ax
   14002084e:	and    ax,r10w
   140020852:	mov    DWORD PTR [rbp-0x21],r12d
   140020856:	and    r13w,r9w
   14002085a:	lea    r9d,[rax+rcx*1]
   14002085e:	cmp    ax,r10w
   140020862:	jae    0x140020ac0
   140020868:	cmp    cx,r10w
   14002086c:	jae    0x140020ac0
   140020872:	cmp    r9w,si
   140020876:	ja     0x140020ac0
   14002087c:	mov    r10d,0x3fbf
   140020882:	cmp    r9w,r10w
   140020886:	ja     0x140020891
   140020888:	mov    DWORD PTR [rbp-0x11],r12d
   14002088c:	jmp    0x140020ad1
   140020891:	test   ax,ax
   140020894:	jne    0x1400208b2
   140020896:	add    r9w,r11w
   14002089a:	test   DWORD PTR [rbp-0x11],edi
   14002089d:	jne    0x1400208b2
   14002089f:	test   r8d,r8d
   1400208a2:	jne    0x1400208b2
   1400208a4:	test   edx,edx
   1400208a6:	jne    0x1400208b2
   1400208a8:	mov    WORD PTR [rbp-0xf],r12w
   1400208ad:	jmp    0x140020ad7
   1400208b2:	test   cx,cx
   1400208b5:	jne    0x1400208cc
   1400208b7:	add    r9w,r11w
   1400208bb:	test   DWORD PTR [rbp-0x1],edi
   1400208be:	jne    0x1400208cc
   1400208c0:	cmp    DWORD PTR [rbp-0x5],r12d
   1400208c4:	jne    0x1400208cc
   1400208c6:	cmp    DWORD PTR [rbp-0x9],r12d
   1400208ca:	je     0x140020888
   1400208cc:	mov    edi,r12d
   1400208cf:	lea    rdx,[rbp-0x29]
   1400208d3:	mov    esi,r14d
   1400208d6:	test   r14d,r14d
   1400208d9:	jle    0x140020938
   1400208db:	lea    eax,[rdi+rdi*1]
   1400208de:	lea    r15,[rbp-0x19]
   1400208e2:	mov    r12d,edi
   1400208e5:	movsxd rcx,eax
   1400208e8:	and    r12d,r11d
   1400208eb:	lea    r14,[rbp-0x1]
   1400208ef:	add    r15,rcx
   1400208f2:	xor    ebx,ebx
   1400208f4:	movzx  eax,WORD PTR [r15]
   1400208f8:	movzx  ecx,WORD PTR [r14]
   1400208fc:	mov    r8d,ebx
   1400208ff:	imul   ecx,eax
   140020902:	mov    eax,DWORD PTR [rdx]
   140020904:	lea    r10d,[rax+rcx*1]
   140020908:	cmp    r10d,eax
   14002090b:	jb     0x140020912
   14002090d:	cmp    r10d,ecx
   140020910:	jae    0x140020915
   140020912:	mov    r8d,r11d
   140020915:	mov    DWORD PTR [rdx],r10d
   140020918:	test   r8d,r8d
   14002091b:	je     0x140020922
   14002091d:	add    WORD PTR [rdx+0x4],r11w
   140020922:	sub    esi,r11d
   140020925:	add    r15,0x2
   140020929:	sub    r14,0x2
   14002092d:	test   esi,esi
   14002092f:	jg     0x1400208f4
   140020931:	mov    r14d,DWORD PTR [rbp-0x49]
   140020935:	xor    r12d,r12d
   140020938:	sub    r14d,r11d
   14002093b:	add    rdx,0x2
   14002093f:	add    edi,r11d
   140020942:	mov    DWORD PTR [rbp-0x49],r14d
   140020946:	test   r14d,r14d
   140020949:	jg     0x1400208d3
   14002094b:	mov    rbx,QWORD PTR [rbp-0x41]
   14002094f:	mov    r8d,DWORD PTR [rbp-0x21]
   140020953:	mov    r10d,DWORD PTR [rbp-0x29]
   140020957:	mov    eax,0xc002
   14002095c:	mov    esi,0x80000000
   140020961:	mov    r14d,0xffff
   140020967:	add    r9w,ax
   14002096b:	test   r9w,r9w
   14002096f:	jle    0x1400209ad
   140020971:	test   esi,r8d
   140020974:	jne    0x1400209a7
   140020976:	mov    edi,DWORD PTR [rbp-0x25]
   140020979:	mov    edx,r10d
   14002097c:	add    r8d,r8d
   14002097f:	shr    edx,0x1f
   140020982:	add    r10d,r10d
   140020985:	mov    ecx,edi
   140020987:	shr    ecx,0x1f
   14002098a:	lea    eax,[rdi+rdi*1]
   14002098d:	add    r9w,r14w
   140020991:	or     eax,edx
   140020993:	or     r8d,ecx
   140020996:	mov    DWORD PTR [rbp-0x29],r10d
   14002099a:	mov    DWORD PTR [rbp-0x25],eax
   14002099d:	mov    DWORD PTR [rbp-0x21],r8d
   1400209a1:	test   r9w,r9w
   1400209a5:	jg     0x140020971
   1400209a7:	test   r9w,r9w
   1400209ab:	jg     0x140020a12
   1400209ad:	add    r9w,r14w
   1400209b1:	jns    0x140020a12
   1400209b3:	mov    ebx,DWORD PTR [rbp-0x65]
   1400209b6:	movzx  eax,r9w
   1400209ba:	neg    ax
   1400209bd:	movzx  edx,ax
   1400209c0:	add    r9w,dx
   1400209c4:	test   BYTE PTR [rbp-0x29],r11b
   1400209c8:	je     0x1400209cd
   1400209ca:	add    ebx,r11d
   1400209cd:	mov    edi,DWORD PTR [rbp-0x25]
   1400209d0:	mov    eax,r8d
   1400209d3:	shr    r10d,1
   1400209d6:	mov    ecx,edi
   1400209d8:	shl    eax,0x1f
   1400209db:	shr    edi,1
   1400209dd:	shl    ecx,0x1f
   1400209e0:	or     edi,eax
   1400209e2:	shr    r8d,1
   1400209e5:	or     r10d,ecx
   1400209e8:	mov    DWORD PTR [rbp-0x25],edi
   1400209eb:	mov    DWORD PTR [rbp-0x29],r10d
   1400209ef:	sub    rdx,r11
   1400209f2:	jne    0x1400209c4
   1400209f4:	test   ebx,ebx
   1400209f6:	mov    rbx,QWORD PTR [rbp-0x41]
   1400209fa:	mov    DWORD PTR [rbp-0x21],r8d
   1400209fe:	je     0x140020a12
   140020a00:	movzx  eax,r10w
   140020a04:	or     ax,r11w
   140020a08:	mov    WORD PTR [rbp-0x29],ax
   140020a0c:	mov    r10d,DWORD PTR [rbp-0x29]
   140020a10:	jmp    0x140020a16
   140020a12:	movzx  eax,WORD PTR [rbp-0x29]
   140020a16:	mov    ecx,0x8000
   140020a1b:	cmp    ax,cx
   140020a1e:	ja     0x140020a30
   140020a20:	and    r10d,0x1ffff
   140020a27:	cmp    r10d,0x18000
   140020a2e:	jne    0x140020a79
   140020a30:	mov    eax,DWORD PTR [rbp-0x27]
   140020a33:	or     edx,0xffffffff
   140020a36:	cmp    eax,edx
   140020a38:	jne    0x140020a73
   140020a3a:	mov    eax,DWORD PTR [rbp-0x23]
   140020a3d:	mov    DWORD PTR [rbp-0x27],r12d
   140020a41:	cmp    eax,edx
   140020a43:	jne    0x140020a67
   140020a45:	movzx  eax,WORD PTR [rbp-0x1f]
   140020a49:	mov    DWORD PTR [rbp-0x23],r12d
   140020a4d:	cmp    ax,r14w
   140020a51:	jne    0x140020a5d
   140020a53:	mov    WORD PTR [rbp-0x1f],cx
   140020a57:	add    r9w,r11w
   140020a5b:	jmp    0x140020a6d
   140020a5d:	add    ax,r11w
   140020a61:	mov    WORD PTR [rbp-0x1f],ax
   140020a65:	jmp    0x140020a6d
   140020a67:	add    eax,r11d
   140020a6a:	mov    DWORD PTR [rbp-0x23],eax
   140020a6d:	mov    r8d,DWORD PTR [rbp-0x21]
   140020a71:	jmp    0x140020a79
   140020a73:	add    eax,r11d
   140020a76:	mov    DWORD PTR [rbp-0x27],eax
   140020a79:	mov    eax,0x7fff
   140020a7e:	cmp    r9w,ax
   140020a82:	jb     0x140020a9c
   140020a84:	neg    r13w
   140020a88:	mov    r8d,r12d
   140020a8b:	mov    edx,r12d
   140020a8e:	sbb    eax,eax
   140020a90:	and    eax,esi
   140020a92:	add    eax,0x7fff8000
   140020a97:	mov    DWORD PTR [rbp-0x11],eax
   140020a9a:	jmp    0x140020adc
   140020a9c:	movzx  eax,WORD PTR [rbp-0x27]
   140020aa0:	or     r9w,r13w
   140020aa4:	mov    DWORD PTR [rbp-0x13],r8d
   140020aa8:	mov    WORD PTR [rbp-0x19],ax
   140020aac:	mov    eax,DWORD PTR [rbp-0x25]
   140020aaf:	mov    WORD PTR [rbp-0xf],r9w
   140020ab4:	mov    DWORD PTR [rbp-0x17],eax
   140020ab7:	mov    r8d,DWORD PTR [rbp-0x15]
   140020abb:	mov    edx,DWORD PTR [rbp-0x19]
   140020abe:	jmp    0x140020adc
   140020ac0:	neg    r13w
   140020ac4:	sbb    eax,eax
   140020ac6:	and    eax,r15d
   140020ac9:	add    eax,0x7fff8000
   140020ace:	mov    DWORD PTR [rbp-0x11],eax
   140020ad1:	mov    edx,r12d
   140020ad4:	mov    r8d,r12d
   140020ad7:	mov    ecx,0x8000
   140020adc:	mov    eax,DWORD PTR [rbp-0x61]
   140020adf:	mov    r14d,DWORD PTR [rbp-0x4d]
   140020ae3:	mov    WORD PTR [rbx],ax
   140020ae6:	test   BYTE PTR [rbp-0x39],r11b
   140020aea:	je     0x140020b09
   140020aec:	cwde   
   140020aed:	add    r14d,eax
   140020af0:	test   r14d,r14d
   140020af3:	jg     0x140020b09
   140020af5:	cmp    WORD PTR [rbp-0x67],cx
   140020af9:	mov    eax,0x20
   140020afe:	lea    ecx,[rax+0xd]
   140020b01:	cmove  eax,ecx
   140020b04:	jmp    0x140020345
   140020b09:	mov    r9d,DWORD PTR [rbp-0x11]
   140020b0d:	mov    eax,0x15
   140020b12:	mov    WORD PTR [rbp-0xf],r12w
   140020b17:	mov    esi,DWORD PTR [rbp-0x11]
   140020b1a:	cmp    r14d,eax
   140020b1d:	lea    r10d,[rax-0xd]
   140020b21:	cmovg  r14d,eax
   140020b25:	shr    r9d,0x10
   140020b29:	sub    r9d,0x3ffe
   140020b30:	mov    ecx,r8d
   140020b33:	mov    eax,edx
   140020b35:	add    esi,esi
   140020b37:	add    r8d,r8d
   140020b3a:	shr    eax,0x1f
   140020b3d:	shr    ecx,0x1f
   140020b40:	or     r8d,eax
   140020b43:	or     esi,ecx
   140020b45:	add    edx,edx
   140020b47:	sub    r10,r11
   140020b4a:	jne    0x140020b30
   140020b4c:	mov    DWORD PTR [rbp-0x15],r8d
   140020b50:	mov    DWORD PTR [rbp-0x19],edx
   140020b53:	test   r9d,r9d
   140020b56:	jns    0x140020b8a
   140020b58:	neg    r9d
   140020b5b:	movzx  r10d,r9b
   140020b5f:	test   r10d,r10d
   140020b62:	jle    0x140020b8a
   140020b64:	mov    ecx,r8d
   140020b67:	mov    eax,esi
   140020b69:	shr    edx,1
   140020b6b:	shr    r8d,1
   140020b6e:	shl    eax,0x1f
   140020b71:	shl    ecx,0x1f
   140020b74:	sub    r10d,r11d
   140020b77:	shr    esi,1
   140020b79:	or     r8d,eax
   140020b7c:	or     edx,ecx
   140020b7e:	test   r10d,r10d
   140020b81:	jg     0x140020b64
   140020b83:	mov    DWORD PTR [rbp-0x15],r8d
   140020b87:	mov    DWORD PTR [rbp-0x19],edx
   140020b8a:	lea    r15d,[r14+0x1]
   140020b8e:	lea    rdi,[rbx+0x4]
   140020b92:	mov    r10,rdi
   140020b95:	test   r15d,r15d
   140020b98:	jle    0x140020c72
   140020b9e:	movsd  xmm0,QWORD PTR [rbp-0x19]
   140020ba3:	mov    ecx,r8d
   140020ba6:	add    r8d,r8d
   140020ba9:	shr    ecx,0x1f
   140020bac:	mov    eax,edx
   140020bae:	add    edx,edx
   140020bb0:	shr    eax,0x1f
   140020bb3:	lea    r9d,[rsi+rsi*1]
   140020bb7:	movsd  QWORD PTR [rbp+0x7],xmm0
   140020bbc:	or     r8d,eax
   140020bbf:	or     r9d,ecx
   140020bc2:	mov    eax,edx
   140020bc4:	mov    ecx,r8d
   140020bc7:	shr    eax,0x1f
   140020bca:	add    r8d,r8d
   140020bcd:	or     r8d,eax
   140020bd0:	mov    eax,DWORD PTR [rbp+0x7]
   140020bd3:	add    edx,edx
   140020bd5:	shr    ecx,0x1f
   140020bd8:	add    r9d,r9d
   140020bdb:	lea    r12d,[rax+rdx*1]
   140020bdf:	or     r9d,ecx
   140020be2:	cmp    r12d,edx
   140020be5:	jb     0x140020bec
   140020be7:	cmp    r12d,eax
   140020bea:	jae    0x140020c0d
   140020bec:	xor    r14d,r14d
   140020bef:	lea    eax,[r8+0x1]
   140020bf3:	mov    ecx,r14d
   140020bf6:	cmp    eax,r8d
   140020bf9:	jb     0x140020c00
   140020bfb:	cmp    eax,r11d
   140020bfe:	jae    0x140020c03
   140020c00:	mov    ecx,r11d
   140020c03:	mov    r8d,eax
   140020c06:	test   ecx,ecx
   140020c08:	je     0x140020c0d
   140020c0a:	add    r9d,r11d
   140020c0d:	mov    rax,QWORD PTR [rbp+0x7]
   140020c11:	shr    rax,0x20
   140020c15:	lea    r14d,[r8+rax*1]
   140020c19:	cmp    r14d,r8d
   140020c1c:	jb     0x140020c23
   140020c1e:	cmp    r14d,eax
   140020c21:	jae    0x140020c26
   140020c23:	add    r9d,r11d
   140020c26:	mov    eax,r12d
   140020c29:	add    r9d,esi
   140020c2c:	lea    edx,[r12+r12*1]
   140020c30:	shr    eax,0x1f
   140020c33:	xor    r12d,r12d
   140020c36:	lea    r8d,[r14+r14*1]
   140020c3a:	or     r8d,eax
   140020c3d:	mov    ecx,r14d
   140020c40:	lea    eax,[r9+r9*1]
   140020c44:	shr    ecx,0x1f
   140020c47:	sub    r15d,r11d
   140020c4a:	mov    DWORD PTR [rbp-0x19],edx
   140020c4d:	or     eax,ecx
   140020c4f:	mov    DWORD PTR [rbp-0x15],r8d
   140020c53:	mov    DWORD PTR [rbp-0x11],eax
   140020c56:	shr    eax,0x18
   140020c59:	mov    BYTE PTR [rbp-0xe],r12b
   140020c5d:	add    al,0x30
   140020c5f:	mov    BYTE PTR [r10],al
   140020c62:	add    r10,r11
   140020c65:	test   r15d,r15d
   140020c68:	jle    0x140020c72
   140020c6a:	mov    esi,DWORD PTR [rbp-0x11]
   140020c6d:	jmp    0x140020b9e
   140020c72:	sub    r10,r11
   140020c75:	mov    al,BYTE PTR [r10]
   140020c78:	sub    r10,r11
   140020c7b:	cmp    al,0x35
   140020c7d:	jl     0x140020ce9
   140020c7f:	jmp    0x140020c8e
   140020c81:	cmp    BYTE PTR [r10],0x39
   140020c85:	jne    0x140020c93
   140020c87:	mov    BYTE PTR [r10],0x30
   140020c8b:	sub    r10,r11
   140020c8e:	cmp    r10,rdi
   140020c91:	jae    0x140020c81
   140020c93:	cmp    r10,rdi
   140020c96:	jae    0x140020c9f
   140020c98:	add    r10,r11
   140020c9b:	add    WORD PTR [rbx],r11w
   140020c9f:	add    BYTE PTR [r10],r11b
   140020ca2:	sub    r10b,bl
   140020ca5:	sub    r10b,0x3
   140020ca9:	movsx  rax,r10b
   140020cad:	mov    BYTE PTR [rbx+0x3],r10b
   140020cb1:	mov    BYTE PTR [rax+rbx*1+0x4],r12b
   140020cb6:	mov    eax,r11d
   140020cb9:	mov    rcx,QWORD PTR [rbp+0x17]
   140020cbd:	xor    rcx,rsp
   140020cc0:	call   0x14000d0a0
   140020cc5:	mov    rbx,QWORD PTR [rsp+0x108]
   140020ccd:	add    rsp,0xc0
   140020cd4:	pop    r15
   140020cd6:	pop    r14
   140020cd8:	pop    r13
   140020cda:	pop    r12
   140020cdc:	pop    rdi
   140020cdd:	pop    rsi
   140020cde:	pop    rbp
   140020cdf:	ret    
   140020ce0:	cmp    BYTE PTR [r10],0x30
   140020ce4:	jne    0x140020cee
   140020ce6:	sub    r10,r11
   140020ce9:	cmp    r10,rdi
   140020cec:	jae    0x140020ce0
   140020cee:	cmp    r10,rdi
   140020cf1:	jae    0x140020ca2
   140020cf3:	mov    eax,0x20
   140020cf8:	mov    r9d,0x8000
   140020cfe:	mov    WORD PTR [rbx],r12w
   140020d02:	cmp    WORD PTR [rbp-0x67],r9w
   140020d07:	lea    ecx,[rax+0xd]
   140020d0a:	mov    BYTE PTR [rbx+0x3],r11b
   140020d0e:	cmove  eax,ecx
   140020d11:	mov    BYTE PTR [rbx+0x2],al
   140020d14:	mov    BYTE PTR [rdi],0x30
   140020d17:	jmp    0x140020352
   140020d1c:	xor    r9d,r9d
   140020d1f:	xor    r8d,r8d
   140020d22:	xor    edx,edx
   140020d24:	xor    ecx,ecx
   140020d26:	mov    QWORD PTR [rsp+0x20],r12
   140020d2b:	call   0x140008678
   140020d30:	int3   
   140020d31:	xor    r9d,r9d
   140020d34:	xor    r8d,r8d
   140020d37:	xor    edx,edx
   140020d39:	xor    ecx,ecx
   140020d3b:	mov    QWORD PTR [rsp+0x20],r12
   140020d40:	call   0x140008678
   140020d45:	int3   
   140020d46:	xor    r9d,r9d
   140020d49:	xor    r8d,r8d
   140020d4c:	xor    edx,edx
   140020d4e:	xor    ecx,ecx
   140020d50:	mov    QWORD PTR [rsp+0x20],r12
   140020d55:	call   0x140008678
   140020d5a:	int3   
   140020d5b:	xor    r9d,r9d
   140020d5e:	xor    r8d,r8d
   140020d61:	xor    edx,edx
   140020d63:	xor    ecx,ecx
   140020d65:	mov    QWORD PTR [rsp+0x20],r12
   140020d6a:	call   0x140008678
   140020d6f:	int3   
   140020d70:	mov    eax,DWORD PTR [rcx]
   140020d72:	mov    r10d,DWORD PTR [rdx]
   140020d75:	xor    r9d,r9d
   140020d78:	lea    r8d,[rax+r10*1]
   140020d7c:	mov    r11,rdx
   140020d7f:	cmp    r8d,eax
   140020d82:	jb     0x140020d89
   140020d84:	cmp    r8d,r10d
   140020d87:	jae    0x140020d8f
   140020d89:	mov    r9d,0x1
   140020d8f:	mov    DWORD PTR [rcx],r8d
   140020d92:	test   r9d,r9d
   140020d95:	je     0x140020dba
   140020d97:	mov    eax,DWORD PTR [rcx+0x4]
   140020d9a:	xor    r8d,r8d
   140020d9d:	lea    edx,[rax+0x1]
   140020da0:	cmp    edx,eax
   140020da2:	jb     0x140020da9
   140020da4:	cmp    edx,0x1
   140020da7:	jae    0x140020daf
   140020da9:	mov    r8d,0x1
   140020daf:	mov    DWORD PTR [rcx+0x4],edx
   140020db2:	test   r8d,r8d
   140020db5:	je     0x140020dba
   140020db7:	inc    DWORD PTR [rcx+0x8]
   140020dba:	mov    eax,DWORD PTR [rcx+0x4]
   140020dbd:	mov    r9d,DWORD PTR [r11+0x4]
   140020dc1:	xor    r8d,r8d
   140020dc4:	lea    edx,[rax+r9*1]
   140020dc8:	cmp    edx,eax
   140020dca:	jb     0x140020dd1
   140020dcc:	cmp    edx,r9d
   140020dcf:	jae    0x140020dd7
   140020dd1:	mov    r8d,0x1
   140020dd7:	mov    DWORD PTR [rcx+0x4],edx
   140020dda:	test   r8d,r8d
   140020ddd:	je     0x140020de2
   140020ddf:	inc    DWORD PTR [rcx+0x8]
   140020de2:	mov    eax,DWORD PTR [r11+0x8]
   140020de6:	add    DWORD PTR [rcx+0x8],eax
   140020de9:	ret    
   140020dea:	int3   
   140020deb:	int3   
   140020dec:	mov    QWORD PTR [rsp+0x8],rbx
   140020df1:	push   rdi
   140020df2:	sub    rsp,0x20
   140020df6:	or     edi,0xffffffff
   140020df9:	mov    rbx,rcx
   140020dfc:	test   rcx,rcx
   140020dff:	jne    0x140020e15
   140020e01:	call   0x1400095b8
   140020e06:	mov    DWORD PTR [rax],0x16
   140020e0c:	call   0x140008628
   140020e11:	or     eax,edi
   140020e13:	jmp    0x140020e5b
   140020e15:	test   BYTE PTR [rcx+0x18],0x83
   140020e19:	je     0x140020e55
   140020e1b:	call   0x140010914
   140020e20:	mov    rcx,rbx
   140020e23:	mov    edi,eax
   140020e25:	call   0x140023fd4
   140020e2a:	mov    rcx,rbx
   140020e2d:	call   0x140010840
   140020e32:	mov    ecx,eax
   140020e34:	call   0x140023e54
   140020e39:	test   eax,eax
   140020e3b:	jns    0x140020e42
   140020e3d:	or     edi,0xffffffff
   140020e40:	jmp    0x140020e55
   140020e42:	mov    rcx,QWORD PTR [rbx+0x28]
   140020e46:	test   rcx,rcx
   140020e49:	je     0x140020e55
   140020e4b:	call   0x140006444
   140020e50:	and    QWORD PTR [rbx+0x28],0x0
   140020e55:	and    DWORD PTR [rbx+0x18],0x0
   140020e59:	mov    eax,edi
   140020e5b:	mov    rbx,QWORD PTR [rsp+0x30]
   140020e60:	add    rsp,0x20
   140020e64:	pop    rdi
   140020e65:	ret    
   140020e66:	int3   
   140020e67:	int3   
   140020e68:	mov    QWORD PTR [rsp+0x10],rbx
   140020e6d:	mov    QWORD PTR [rsp+0x8],rcx
   140020e72:	push   rdi
   140020e73:	sub    rsp,0x20
   140020e77:	mov    rbx,rcx
   140020e7a:	or     edi,0xffffffff
   140020e7d:	xor    eax,eax
   140020e7f:	test   rcx,rcx
   140020e82:	setne  al
   140020e85:	test   eax,eax
   140020e87:	jne    0x140020e9d
   140020e89:	call   0x1400095b8
   140020e8e:	mov    DWORD PTR [rax],0x16
   140020e94:	call   0x140008628
   140020e99:	mov    eax,edi
   140020e9b:	jmp    0x140020ec3
   140020e9d:	test   BYTE PTR [rcx+0x18],0x40
   140020ea1:	je     0x140020ea9
   140020ea3:	and    DWORD PTR [rcx+0x18],0x0
   140020ea7:	jmp    0x140020e99
   140020ea9:	call   0x140010734
   140020eae:	nop
   140020eaf:	mov    rcx,rbx
   140020eb2:	call   0x140020dec
   140020eb7:	mov    edi,eax
   140020eb9:	mov    rcx,rbx
   140020ebc:	call   0x1400107d0
   140020ec1:	jmp    0x140020e99
   140020ec3:	mov    rbx,QWORD PTR [rsp+0x38]
   140020ec8:	add    rsp,0x20
   140020ecc:	pop    rdi
   140020ecd:	ret    
   140020ece:	int3   
   140020ecf:	int3   
   140020ed0:	mov    QWORD PTR [rsp+0x8],rbx
   140020ed5:	mov    QWORD PTR [rsp+0x10],rsi
   140020eda:	mov    QWORD PTR [rsp+0x18],rdi
   140020edf:	push   r15
   140020ee1:	sub    rsp,0x20
   140020ee5:	movsxd rax,ecx
   140020ee8:	mov    rsi,rax
   140020eeb:	sar    rsi,0x5
   140020eef:	lea    r15,[rip+0x1779a]        # 0x140038690
   140020ef6:	and    eax,0x1f
   140020ef9:	imul   rbx,rax,0x58
   140020efd:	mov    rdi,QWORD PTR [r15+rsi*8]
   140020f01:	cmp    DWORD PTR [rbx+rdi*1+0xc],0x0
   140020f06:	jne    0x140020f3c
   140020f08:	mov    ecx,0xa
   140020f0d:	call   0x140008760
   140020f12:	nop
   140020f13:	cmp    DWORD PTR [rbx+rdi*1+0xc],0x0
   140020f18:	jne    0x140020f32
   140020f1a:	lea    rcx,[rbx+0x10]
   140020f1e:	add    rcx,rdi
   140020f21:	xor    r8d,r8d
   140020f24:	mov    edx,0xfa0
   140020f29:	call   0x140008d04
   140020f2e:	inc    DWORD PTR [rbx+rdi*1+0xc]
   140020f32:	mov    ecx,0xa
   140020f37:	call   0x14000897c
   140020f3c:	mov    rcx,QWORD PTR [r15+rsi*8]
   140020f40:	add    rcx,0x10
   140020f44:	add    rcx,rbx
   140020f47:	call   QWORD PTR [rip+0x61bb]        # 0x140027108
   140020f4d:	mov    eax,0x1
   140020f52:	mov    rbx,QWORD PTR [rsp+0x30]
   140020f57:	mov    rsi,QWORD PTR [rsp+0x38]
   140020f5c:	mov    rdi,QWORD PTR [rsp+0x40]
   140020f61:	add    rsp,0x20
   140020f65:	pop    r15
   140020f67:	ret    
   140020f68:	mov    rax,rsp
   140020f6b:	mov    QWORD PTR [rax+0x8],rbx
   140020f6f:	mov    QWORD PTR [rax+0x10],rsi
   140020f73:	mov    QWORD PTR [rax+0x18],rdi
   140020f77:	mov    QWORD PTR [rax+0x20],r12
   140020f7b:	push   r13
   140020f7d:	push   r14
   140020f7f:	push   r15
   140020f81:	sub    rsp,0x30
   140020f85:	or     r13,0xffffffffffffffff
   140020f89:	mov    esi,r13d
   140020f8c:	xor    r12d,r12d
   140020f8f:	lea    ebx,[r13+0xc]
   140020f93:	mov    ecx,ebx
   140020f95:	call   0x140008858
   140020f9a:	test   eax,eax
   140020f9c:	jne    0x140020fa6
   140020f9e:	mov    eax,r13d
   140020fa1:	jmp    0x140021141
   140020fa6:	mov    ecx,ebx
   140020fa8:	call   0x140008760
   140020fad:	nop
   140020fae:	mov    edi,r12d
   140020fb1:	mov    DWORD PTR [rsp+0x24],r12d
   140020fb6:	lea    r14,[rip+0x176d3]        # 0x140038690
   140020fbd:	cmp    edi,0x40
   140020fc0:	jge    0x140021135
   140020fc6:	movsxd r15,edi
   140020fc9:	mov    rbx,QWORD PTR [r14+r15*8]
   140020fcd:	test   rbx,rbx
   140020fd0:	je     0x1400210b4
   140020fd6:	mov    QWORD PTR [rsp+0x28],rbx
   140020fdb:	mov    rax,QWORD PTR [r14+r15*8]
   140020fdf:	add    rax,0xb00
   140020fe5:	cmp    rbx,rax
   140020fe8:	jae    0x1400210a0
   140020fee:	test   BYTE PTR [rbx+0x8],0x1
   140020ff2:	jne    0x140021090
   140020ff8:	cmp    DWORD PTR [rbx+0xc],r12d
   140020ffc:	jne    0x14002102d
   140020ffe:	mov    ecx,0xa
   140021003:	call   0x140008760
   140021008:	nop
   140021009:	cmp    DWORD PTR [rbx+0xc],r12d
   14002100d:	jne    0x140021023
   14002100f:	lea    rcx,[rbx+0x10]
   140021013:	xor    r8d,r8d
   140021016:	mov    edx,0xfa0
   14002101b:	call   0x140008d04
   140021020:	inc    DWORD PTR [rbx+0xc]
   140021023:	mov    ecx,0xa
   140021028:	call   0x14000897c
   14002102d:	test   r12d,r12d
   140021030:	jne    0x140021090
   140021032:	lea    rcx,[rbx+0x10]
   140021036:	call   QWORD PTR [rip+0x60cc]        # 0x140027108
   14002103c:	test   BYTE PTR [rbx+0x8],0x1
   140021040:	je     0x14002104e
   140021042:	lea    rcx,[rbx+0x10]
   140021046:	call   QWORD PTR [rip+0x60c4]        # 0x140027110
   14002104c:	jmp    0x140021090
   14002104e:	lea    r14,[rip+0x1763b]        # 0x140038690
   140021055:	test   r12d,r12d
   140021058:	jne    0x140021090
   14002105a:	mov    BYTE PTR [rbx+0x8],0x1
   14002105e:	mov    QWORD PTR [rbx],r13
   140021061:	sub    rbx,QWORD PTR [r14+r15*8]
   140021065:	movabs rax,0x2e8ba2e8ba2e8ba3
   14002106f:	imul   rbx
   140021072:	mov    rsi,rdx
   140021075:	sar    rsi,0x4
   140021079:	mov    rax,rsi
   14002107c:	shr    rax,0x3f
   140021080:	add    rsi,rax
   140021083:	mov    eax,edi
   140021085:	shl    eax,0x5
   140021088:	add    esi,eax
   14002108a:	mov    DWORD PTR [rsp+0x20],esi
   14002108e:	jmp    0x1400210a0
   140021090:	add    rbx,0x58
   140021094:	lea    r14,[rip+0x175f5]        # 0x140038690
   14002109b:	jmp    0x140020fd6
   1400210a0:	cmp    esi,r13d
   1400210a3:	jne    0x140021135
   1400210a9:	inc    edi
   1400210ab:	mov    DWORD PTR [rsp+0x24],edi
   1400210af:	jmp    0x140020fbd
   1400210b4:	mov    edx,0x58
   1400210b9:	lea    ecx,[rdx-0x38]
   1400210bc:	call   0x140007ed4
   1400210c1:	mov    QWORD PTR [rsp+0x28],rax
   1400210c6:	test   rax,rax
   1400210c9:	je     0x140021135
   1400210cb:	movsxd rdx,edi
   1400210ce:	mov    QWORD PTR [r14+rdx*8],rax
   1400210d2:	add    DWORD PTR [rip+0x18f6b],0x20        # 0x14003a044
   1400210d9:	mov    rcx,QWORD PTR [r14+rdx*8]
   1400210dd:	add    rcx,0xb00
   1400210e4:	cmp    rax,rcx
   1400210e7:	jae    0x140021101
   1400210e9:	mov    WORD PTR [rax+0x8],0xa00
   1400210ef:	mov    QWORD PTR [rax],r13
   1400210f2:	mov    DWORD PTR [rax+0xc],r12d
   1400210f6:	add    rax,0x58
   1400210fa:	mov    QWORD PTR [rsp+0x28],rax
   1400210ff:	jmp    0x1400210d9
   140021101:	shl    edi,0x5
   140021104:	mov    DWORD PTR [rsp+0x20],edi
   140021108:	movsxd rcx,edi
   14002110b:	mov    rax,rcx
   14002110e:	sar    rax,0x5
   140021112:	and    ecx,0x1f
   140021115:	imul   rcx,rcx,0x58
   140021119:	mov    rax,QWORD PTR [r14+rax*8]
   14002111d:	mov    BYTE PTR [rax+rcx*1+0x8],0x1
   140021122:	mov    ecx,edi
   140021124:	call   0x140020ed0
   140021129:	test   eax,eax
   14002112b:	cmove  edi,r13d
   14002112f:	mov    esi,edi
   140021131:	mov    DWORD PTR [rsp+0x20],edi
   140021135:	mov    ecx,0xb
   14002113a:	call   0x14000897c
   14002113f:	mov    eax,esi
   140021141:	mov    rbx,QWORD PTR [rsp+0x50]
   140021146:	mov    rsi,QWORD PTR [rsp+0x58]
   14002114b:	mov    rdi,QWORD PTR [rsp+0x60]
   140021150:	mov    r12,QWORD PTR [rsp+0x68]
   140021155:	add    rsp,0x30
   140021159:	pop    r15
   14002115b:	pop    r14
   14002115d:	pop    r13
   14002115f:	ret    
   140021160:	mov    QWORD PTR [rsp+0x8],rbx
   140021165:	mov    QWORD PTR [rsp+0x10],rdi
   14002116a:	push   r14
   14002116c:	sub    rsp,0x20
   140021170:	test   ecx,ecx
   140021172:	js     0x1400211e3
   140021174:	cmp    ecx,DWORD PTR [rip+0x18eca]        # 0x14003a044
   14002117a:	jae    0x1400211e3
   14002117c:	movsxd rax,ecx
   14002117f:	lea    r14,[rip+0x1750a]        # 0x140038690
   140021186:	mov    rdi,rax
   140021189:	and    eax,0x1f
   14002118c:	sar    rdi,0x5
   140021190:	imul   rbx,rax,0x58
   140021194:	mov    rax,QWORD PTR [r14+rdi*8]
   140021198:	test   BYTE PTR [rax+rbx*1+0x8],0x1
   14002119d:	je     0x1400211e3
   14002119f:	cmp    QWORD PTR [rax+rbx*1],0xffffffffffffffff
   1400211a4:	je     0x1400211e3
   1400211a6:	cmp    DWORD PTR [rip+0x16e13],0x1        # 0x140037fc0
   1400211ad:	jne    0x1400211d6
   1400211af:	test   ecx,ecx
   1400211b1:	je     0x1400211c9
   1400211b3:	dec    ecx
   1400211b5:	je     0x1400211c2
   1400211b7:	dec    ecx
   1400211b9:	jne    0x1400211d6
   1400211bb:	mov    ecx,0xfffffff4
   1400211c0:	jmp    0x1400211ce
   1400211c2:	mov    ecx,0xfffffff5
   1400211c7:	jmp    0x1400211ce
   1400211c9:	mov    ecx,0xfffffff6
   1400211ce:	xor    edx,edx
   1400211d0:	call   QWORD PTR [rip+0x5e7a]        # 0x140027050
   1400211d6:	mov    rax,QWORD PTR [r14+rdi*8]
   1400211da:	or     QWORD PTR [rbx+rax*1],0xffffffffffffffff
   1400211df:	xor    eax,eax
   1400211e1:	jmp    0x1400211f9
   1400211e3:	call   0x1400095b8
   1400211e8:	mov    DWORD PTR [rax],0x9
   1400211ee:	call   0x140009548
   1400211f3:	and    DWORD PTR [rax],0x0
   1400211f6:	or     eax,0xffffffff
   1400211f9:	mov    rbx,QWORD PTR [rsp+0x30]
   1400211fe:	mov    rdi,QWORD PTR [rsp+0x38]
   140021203:	add    rsp,0x20
   140021207:	pop    r14
   140021209:	ret    
   14002120a:	int3   
   14002120b:	int3   
   14002120c:	sub    rsp,0x28
   140021210:	cmp    ecx,0xfffffffe
   140021213:	jne    0x14002122a
   140021215:	call   0x140009548
   14002121a:	and    DWORD PTR [rax],0x0
   14002121d:	call   0x1400095b8
   140021222:	mov    DWORD PTR [rax],0x9
   140021228:	jmp    0x140021277
   14002122a:	test   ecx,ecx
   14002122c:	js     0x14002125f
   14002122e:	cmp    ecx,DWORD PTR [rip+0x18e10]        # 0x14003a044
   140021234:	jae    0x14002125f
   140021236:	movsxd rcx,ecx
   140021239:	lea    r8,[rip+0x17450]        # 0x140038690
   140021240:	mov    rax,rcx
   140021243:	and    ecx,0x1f
   140021246:	sar    rax,0x5
   14002124a:	imul   rdx,rcx,0x58
   14002124e:	mov    rax,QWORD PTR [r8+rax*8]
   140021252:	test   BYTE PTR [rax+rdx*1+0x8],0x1
   140021257:	je     0x14002125f
   140021259:	mov    rax,QWORD PTR [rax+rdx*1]
   14002125d:	jmp    0x14002127b
   14002125f:	call   0x140009548
   140021264:	and    DWORD PTR [rax],0x0
   140021267:	call   0x1400095b8
   14002126c:	mov    DWORD PTR [rax],0x9
   140021272:	call   0x140008628
   140021277:	or     rax,0xffffffffffffffff
   14002127b:	add    rsp,0x28
   14002127f:	ret    
   140021280:	mov    rax,rsp
   140021283:	mov    QWORD PTR [rax+0x8],rbx
   140021287:	mov    QWORD PTR [rax+0x18],rsi
   14002128b:	mov    QWORD PTR [rax+0x20],rdi
   14002128f:	push   r14
   140021291:	sub    rsp,0x30
   140021295:	mov    rsi,rcx
   140021298:	xor    r14d,r14d
   14002129b:	mov    DWORD PTR [rax-0x18],r14d
   14002129f:	test   dl,0x8
   1400212a2:	movzx  ebx,r14b
   1400212a6:	lea    eax,[r14+0x20]
   1400212aa:	cmovne ebx,eax
   1400212ad:	bt     edx,0xe
   1400212b1:	jae    0x1400212b6
   1400212b3:	or     bl,0x80
   1400212b6:	test   dl,dl
   1400212b8:	jns    0x1400212bd
   1400212ba:	or     bl,0x10
   1400212bd:	call   QWORD PTR [rip+0x5f5d]        # 0x140027220
   1400212c3:	test   eax,eax
   1400212c5:	jne    0x1400212dc
   1400212c7:	call   QWORD PTR [rip+0x5db3]        # 0x140027080
   1400212cd:	mov    ecx,eax
   1400212cf:	call   0x140009568
   1400212d4:	or     eax,0xffffffff
   1400212d7:	jmp    0x140021364
   1400212dc:	cmp    eax,0x2
   1400212df:	jne    0x1400212e6
   1400212e1:	or     bl,0x40
   1400212e4:	jmp    0x1400212ee
   1400212e6:	cmp    eax,0x3
   1400212e9:	jne    0x1400212ee
   1400212eb:	or     bl,0x8
   1400212ee:	call   0x140020f68
   1400212f3:	movsxd rdi,eax
   1400212f6:	mov    DWORD PTR [rsp+0x48],edi
   1400212fa:	cmp    edi,0xffffffff
   1400212fd:	jne    0x140021314
   1400212ff:	call   0x1400095b8
   140021304:	mov    DWORD PTR [rax],0x18
   14002130a:	call   0x140009548
   14002130f:	mov    DWORD PTR [rax],r14d
   140021312:	jmp    0x1400212d4
   140021314:	mov    rdx,rsi
   140021317:	mov    ecx,edi
   140021319:	call   0x14002137c
   14002131e:	or     bl,0x1
   140021321:	mov    rax,rdi
   140021324:	mov    rdx,rdi
   140021327:	sar    rdx,0x5
   14002132b:	lea    r8,[rip+0x1735e]        # 0x140038690
   140021332:	and    eax,0x1f
   140021335:	imul   rcx,rax,0x58
   140021339:	mov    rax,QWORD PTR [r8+rdx*8]
   14002133d:	mov    BYTE PTR [rcx+rax*1+0x8],bl
   140021341:	mov    rax,QWORD PTR [r8+rdx*8]
   140021345:	and    BYTE PTR [rcx+rax*1+0x38],0x80
   14002134a:	mov    rax,QWORD PTR [r8+rdx*8]
   14002134e:	and    BYTE PTR [rcx+rax*1+0x38],0x7f
   140021353:	mov    DWORD PTR [rsp+0x20],0x1
   14002135b:	mov    ecx,edi
   14002135d:	call   0x14002142c
   140021362:	mov    eax,edi
   140021364:	mov    rbx,QWORD PTR [rsp+0x40]
   140021369:	mov    rsi,QWORD PTR [rsp+0x50]
   14002136e:	mov    rdi,QWORD PTR [rsp+0x58]
   140021373:	add    rsp,0x30
   140021377:	pop    r14
   140021379:	ret    
   14002137a:	int3   
   14002137b:	int3   
   14002137c:	mov    QWORD PTR [rsp+0x8],rbx
   140021381:	mov    QWORD PTR [rsp+0x10],rsi
   140021386:	mov    QWORD PTR [rsp+0x18],rdi
   14002138b:	push   r14
   14002138d:	sub    rsp,0x20
   140021391:	mov    rbx,rdx
   140021394:	test   ecx,ecx
   140021396:	js     0x1400213fd
   140021398:	cmp    ecx,DWORD PTR [rip+0x18ca6]        # 0x14003a044
   14002139e:	jae    0x1400213fd
   1400213a0:	movsxd rax,ecx
   1400213a3:	lea    r14,[rip+0x172e6]        # 0x140038690
   1400213aa:	mov    rdi,rax
   1400213ad:	and    eax,0x1f
   1400213b0:	sar    rdi,0x5
   1400213b4:	imul   rsi,rax,0x58
   1400213b8:	mov    rax,QWORD PTR [r14+rdi*8]
   1400213bc:	cmp    QWORD PTR [rsi+rax*1],0xffffffffffffffff
   1400213c1:	jne    0x1400213fd
   1400213c3:	cmp    DWORD PTR [rip+0x16bf6],0x1        # 0x140037fc0
   1400213ca:	jne    0x1400213f1
   1400213cc:	test   ecx,ecx
   1400213ce:	je     0x1400213e6
   1400213d0:	dec    ecx
   1400213d2:	je     0x1400213df
   1400213d4:	dec    ecx
   1400213d6:	jne    0x1400213f1
   1400213d8:	mov    ecx,0xfffffff4
   1400213dd:	jmp    0x1400213eb
   1400213df:	mov    ecx,0xfffffff5
   1400213e4:	jmp    0x1400213eb
   1400213e6:	mov    ecx,0xfffffff6
   1400213eb:	call   QWORD PTR [rip+0x5c5f]        # 0x140027050
   1400213f1:	mov    rax,QWORD PTR [r14+rdi*8]
   1400213f5:	mov    QWORD PTR [rsi+rax*1],rbx
   1400213f9:	xor    eax,eax
   1400213fb:	jmp    0x140021413
   1400213fd:	call   0x1400095b8
   140021402:	mov    DWORD PTR [rax],0x9
   140021408:	call   0x140009548
   14002140d:	and    DWORD PTR [rax],0x0
   140021410:	or     eax,0xffffffff
   140021413:	mov    rbx,QWORD PTR [rsp+0x30]
   140021418:	mov    rsi,QWORD PTR [rsp+0x38]
   14002141d:	mov    rdi,QWORD PTR [rsp+0x40]
   140021422:	add    rsp,0x20
   140021426:	pop    r14
   140021428:	ret    
   140021429:	int3   
   14002142a:	int3   
   14002142b:	int3   
   14002142c:	movsxd rdx,ecx
   14002142f:	lea    r8,[rip+0x1725a]        # 0x140038690
   140021436:	mov    rax,rdx
   140021439:	and    edx,0x1f
   14002143c:	sar    rax,0x5
   140021440:	imul   rcx,rdx,0x58
   140021444:	mov    rax,QWORD PTR [r8+rax*8]
   140021448:	add    rcx,0x10
   14002144c:	add    rcx,rax
   14002144f:	rex.W jmp QWORD PTR [rip+0x5cba]        # 0x140027110
   140021456:	int3   
   140021457:	int3   
   140021458:	mov    QWORD PTR [rsp+0x10],rbx
   14002145d:	mov    DWORD PTR [rsp+0x8],ecx
   140021461:	push   rsi
   140021462:	push   rdi
   140021463:	push   r12
   140021465:	push   r14
   140021467:	push   r15
   140021469:	sub    rsp,0x20
   14002146d:	mov    esi,r8d
   140021470:	mov    r14,rdx
   140021473:	movsxd rbx,ecx
   140021476:	cmp    ebx,0xfffffffe
   140021479:	jne    0x140021493
   14002147b:	call   0x140009548
   140021480:	and    DWORD PTR [rax],0x0
   140021483:	call   0x1400095b8
   140021488:	mov    DWORD PTR [rax],0x9
   14002148e:	jmp    0x140021527
   140021493:	test   ecx,ecx
   140021495:	js     0x14002150f
   140021497:	cmp    ebx,DWORD PTR [rip+0x18ba7]        # 0x14003a044
   14002149d:	jae    0x14002150f
   14002149f:	mov    rax,rbx
   1400214a2:	mov    rdi,rbx
   1400214a5:	sar    rdi,0x5
   1400214a9:	lea    r12,[rip+0x171e0]        # 0x140038690
   1400214b0:	and    eax,0x1f
   1400214b3:	imul   r15,rax,0x58
   1400214b7:	mov    rax,QWORD PTR [r12+rdi*8]
   1400214bb:	movsx  ecx,BYTE PTR [rax+r15*1+0x8]
   1400214c1:	and    ecx,0x1
   1400214c4:	je     0x14002150f
   1400214c6:	mov    ecx,ebx
   1400214c8:	call   0x140020ed0
   1400214cd:	nop
   1400214ce:	mov    rax,QWORD PTR [r12+rdi*8]
   1400214d2:	test   BYTE PTR [rax+r15*1+0x8],0x1
   1400214d8:	je     0x1400214ec
   1400214da:	mov    r8d,esi
   1400214dd:	mov    rdx,r14
   1400214e0:	mov    ecx,ebx
   1400214e2:	call   0x140021540
   1400214e7:	mov    rdi,rax
   1400214ea:	jmp    0x140021503
   1400214ec:	call   0x1400095b8
   1400214f1:	mov    DWORD PTR [rax],0x9
   1400214f7:	call   0x140009548
   1400214fc:	and    DWORD PTR [rax],0x0
   1400214ff:	or     rdi,0xffffffffffffffff
   140021503:	mov    ecx,ebx
   140021505:	call   0x14002142c
   14002150a:	mov    rax,rdi
   14002150d:	jmp    0x14002152b
   14002150f:	call   0x140009548
   140021514:	and    DWORD PTR [rax],0x0
   140021517:	call   0x1400095b8
   14002151c:	mov    DWORD PTR [rax],0x9
   140021522:	call   0x140008628
   140021527:	or     rax,0xffffffffffffffff
   14002152b:	mov    rbx,QWORD PTR [rsp+0x58]
   140021530:	add    rsp,0x20
   140021534:	pop    r15
   140021536:	pop    r14
   140021538:	pop    r12
   14002153a:	pop    rdi
   14002153b:	pop    rsi
   14002153c:	ret    
   14002153d:	int3   
   14002153e:	int3   
   14002153f:	int3   
   140021540:	mov    QWORD PTR [rsp+0x8],rbx
   140021545:	mov    QWORD PTR [rsp+0x10],rsi
   14002154a:	push   rdi
   14002154b:	sub    rsp,0x20
   14002154f:	movsxd rbx,ecx
   140021552:	mov    edi,r8d
   140021555:	mov    rsi,rdx
   140021558:	mov    ecx,ebx
   14002155a:	call   0x14002120c
   14002155f:	cmp    rax,0xffffffffffffffff
   140021563:	jne    0x140021576
   140021565:	call   0x1400095b8
   14002156a:	mov    DWORD PTR [rax],0x9
   140021570:	or     rax,0xffffffffffffffff
   140021574:	jmp    0x1400215c3
   140021576:	lea    r8,[rsp+0x48]
   14002157b:	mov    r9d,edi
   14002157e:	mov    rdx,rsi
   140021581:	mov    rcx,rax
   140021584:	call   QWORD PTR [rip+0x5abe]        # 0x140027048
   14002158a:	test   eax,eax
   14002158c:	jne    0x14002159d
   14002158e:	call   QWORD PTR [rip+0x5aec]        # 0x140027080
   140021594:	mov    ecx,eax
   140021596:	call   0x140009568
   14002159b:	jmp    0x140021570
   14002159d:	mov    rcx,rbx
   1400215a0:	mov    rax,rbx
   1400215a3:	lea    rdx,[rip+0x170e6]        # 0x140038690
   1400215aa:	sar    rax,0x5
   1400215ae:	and    ecx,0x1f
   1400215b1:	mov    rax,QWORD PTR [rdx+rax*8]
   1400215b5:	imul   rcx,rcx,0x58
   1400215b9:	and    BYTE PTR [rax+rcx*1+0x8],0xfd
   1400215be:	mov    rax,QWORD PTR [rsp+0x48]
   1400215c3:	mov    rbx,QWORD PTR [rsp+0x30]
   1400215c8:	mov    rsi,QWORD PTR [rsp+0x38]
   1400215cd:	add    rsp,0x20
   1400215d1:	pop    rdi
   1400215d2:	ret    
   1400215d3:	int3   
   1400215d4:	mov    rax,rsp
   1400215d7:	mov    QWORD PTR [rax+0x8],rbx
   1400215db:	mov    QWORD PTR [rax+0x10],rbp
   1400215df:	mov    QWORD PTR [rax+0x18],rsi
   1400215e3:	mov    QWORD PTR [rax+0x20],rdi
   1400215e7:	push   r14
   1400215e9:	sub    rsp,0x50
   1400215ed:	xor    r14d,r14d
   1400215f0:	mov    rbp,r8
   1400215f3:	mov    rsi,rdx
   1400215f6:	mov    rdi,rcx
   1400215f9:	test   rdx,rdx
   1400215fc:	je     0x140021611
   1400215fe:	test   r8,r8
   140021601:	je     0x140021611
   140021603:	cmp    BYTE PTR [rdx],r14b
   140021606:	jne    0x14002162e
   140021608:	test   rcx,rcx
   14002160b:	je     0x140021611
   14002160d:	mov    WORD PTR [rcx],r14w
   140021611:	xor    eax,eax
   140021613:	mov    rbx,QWORD PTR [rsp+0x60]
   140021618:	mov    rbp,QWORD PTR [rsp+0x68]
   14002161d:	mov    rsi,QWORD PTR [rsp+0x70]
   140021622:	mov    rdi,QWORD PTR [rsp+0x78]
   140021627:	add    rsp,0x50
   14002162b:	pop    r14
   14002162d:	ret    
   14002162e:	lea    rcx,[rsp+0x30]
   140021633:	mov    rdx,r9
   140021636:	call   0x14000a000
   14002163b:	mov    rax,QWORD PTR [rsp+0x30]
   140021640:	cmp    QWORD PTR [rax+0x138],r14
   140021647:	jne    0x14002165e
   140021649:	test   rdi,rdi
   14002164c:	je     0x140021654
   14002164e:	movzx  eax,BYTE PTR [rsi]
   140021651:	mov    WORD PTR [rdi],ax
   140021654:	mov    ebx,0x1
   140021659:	jmp    0x14002170b
   14002165e:	movzx  ecx,BYTE PTR [rsi]
   140021661:	lea    rdx,[rsp+0x30]
   140021666:	call   0x14001db48
   14002166b:	mov    ebx,0x1
   140021670:	test   eax,eax
   140021672:	je     0x1400216ce
   140021674:	mov    rcx,QWORD PTR [rsp+0x30]
   140021679:	mov    r9d,DWORD PTR [rcx+0xd4]
   140021680:	cmp    r9d,ebx
   140021683:	jle    0x1400216b4
   140021685:	cmp    ebp,r9d
   140021688:	jl     0x1400216b4
   14002168a:	mov    ecx,DWORD PTR [rcx+0x4]
   14002168d:	mov    eax,r14d
   140021690:	test   rdi,rdi
   140021693:	setne  al
   140021696:	lea    edx,[rbx+0x8]
   140021699:	mov    r8,rsi
   14002169c:	mov    DWORD PTR [rsp+0x28],eax
   1400216a0:	mov    QWORD PTR [rsp+0x20],rdi
   1400216a5:	call   QWORD PTR [rip+0x59fd]        # 0x1400270a8
   1400216ab:	mov    rcx,QWORD PTR [rsp+0x30]
   1400216b0:	test   eax,eax
   1400216b2:	jne    0x1400216c6
   1400216b4:	movsxd rax,DWORD PTR [rcx+0xd4]
   1400216bb:	cmp    rbp,rax
   1400216be:	jb     0x1400216fd
   1400216c0:	cmp    BYTE PTR [rsi+0x1],r14b
   1400216c4:	je     0x1400216fd
   1400216c6:	mov    ebx,DWORD PTR [rcx+0xd4]
   1400216cc:	jmp    0x14002170b
   1400216ce:	mov    eax,r14d
   1400216d1:	test   rdi,rdi
   1400216d4:	mov    r9d,ebx
   1400216d7:	setne  al
   1400216da:	mov    r8,rsi
   1400216dd:	mov    edx,0x9
   1400216e2:	mov    DWORD PTR [rsp+0x28],eax
   1400216e6:	mov    rax,QWORD PTR [rsp+0x30]
   1400216eb:	mov    QWORD PTR [rsp+0x20],rdi
   1400216f0:	mov    ecx,DWORD PTR [rax+0x4]
   1400216f3:	call   QWORD PTR [rip+0x59af]        # 0x1400270a8
   1400216f9:	test   eax,eax
   1400216fb:	jne    0x14002170b
   1400216fd:	call   0x1400095b8
   140021702:	or     ebx,0xffffffff
   140021705:	mov    DWORD PTR [rax],0x2a
   14002170b:	cmp    BYTE PTR [rsp+0x48],r14b
   140021710:	je     0x14002171e
   140021712:	mov    rcx,QWORD PTR [rsp+0x40]
   140021717:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14002171e:	mov    eax,ebx
   140021720:	jmp    0x140021613
   140021725:	int3   
   140021726:	int3   
   140021727:	int3   
   140021728:	xor    r9d,r9d
   14002172b:	jmp    0x1400215d4
   140021730:	rex push rbx
   140021732:	sub    rsp,0x20
   140021736:	movzx  ebx,cx
   140021739:	mov    ecx,0x3
   14002173e:	call   0x140008760
   140021743:	nop
   140021744:	movzx  ecx,bx
   140021747:	call   0x140021764
   14002174c:	movzx  ebx,ax
   14002174f:	mov    ecx,0x3
   140021754:	call   0x14000897c
   140021759:	movzx  eax,bx
   14002175c:	add    rsp,0x20
   140021760:	pop    rbx
   140021761:	ret    
   140021762:	int3   
   140021763:	int3   
   140021764:	mov    WORD PTR [rsp+0x8],cx
   140021769:	sub    rsp,0x38
   14002176d:	mov    rcx,QWORD PTR [rip+0x1610c]        # 0x140037880
   140021774:	cmp    rcx,0xfffffffffffffffe
   140021778:	jne    0x140021786
   14002177a:	call   0x14002402c
   14002177f:	mov    rcx,QWORD PTR [rip+0x160fa]        # 0x140037880
   140021786:	cmp    rcx,0xffffffffffffffff
   14002178a:	jne    0x140021793
   14002178c:	mov    eax,0xffff
   140021791:	jmp    0x1400217b8
   140021793:	and    QWORD PTR [rsp+0x20],0x0
   140021799:	lea    r9,[rsp+0x48]
   14002179e:	lea    rdx,[rsp+0x40]
   1400217a3:	mov    r8d,0x1
   1400217a9:	call   QWORD PTR [rip+0x5891]        # 0x140027040
   1400217af:	test   eax,eax
   1400217b1:	je     0x14002178c
   1400217b3:	movzx  eax,WORD PTR [rsp+0x40]
   1400217b8:	add    rsp,0x38
   1400217bc:	ret    
   1400217bd:	int3   
   1400217be:	int3   
   1400217bf:	int3   
   1400217c0:	mov    rax,rsp
   1400217c3:	mov    QWORD PTR [rax+0x8],rbx
   1400217c7:	mov    QWORD PTR [rax+0x18],rbp
   1400217cb:	mov    QWORD PTR [rax+0x20],rsi
   1400217cf:	push   rdi
   1400217d0:	push   r12
   1400217d2:	push   r13
   1400217d4:	push   r14
   1400217d6:	push   r15
   1400217d8:	sub    rsp,0x40
   1400217dc:	mov    r12,rdx
   1400217df:	mov    rdx,rcx
   1400217e2:	lea    rcx,[rax-0x48]
   1400217e6:	mov    r14d,r9d
   1400217e9:	mov    r15,r8
   1400217ec:	call   0x14000a000
   1400217f1:	test   r15,r15
   1400217f4:	je     0x1400217f9
   1400217f6:	mov    QWORD PTR [r15],r12
   1400217f9:	test   r12,r12
   1400217fc:	je     0x14002180c
   1400217fe:	test   r14d,r14d
   140021801:	je     0x140021823
   140021803:	lea    eax,[r14-0x2]
   140021807:	cmp    eax,0x22
   14002180a:	jbe    0x140021823
   14002180c:	call   0x1400095b8
   140021811:	mov    DWORD PTR [rax],0x16
   140021817:	call   0x140008628
   14002181c:	xor    edi,edi
   14002181e:	jmp    0x1400219d9
   140021823:	mov    sil,BYTE PTR [r12]
   140021827:	mov    r8,QWORD PTR [rsp+0x20]
   14002182c:	xor    edi,edi
   14002182e:	lea    rbx,[r12+0x1]
   140021833:	cmp    DWORD PTR [r8+0xd4],0x1
   14002183b:	jle    0x140021857
   14002183d:	lea    r8,[rsp+0x20]
   140021842:	movzx  ecx,sil
   140021846:	mov    edx,0x8
   14002184b:	call   0x14001c590
   140021850:	mov    r8,QWORD PTR [rsp+0x20]
   140021855:	jmp    0x140021869
   140021857:	mov    rax,QWORD PTR [r8+0x108]
   14002185e:	movzx  ecx,sil
   140021862:	movzx  eax,WORD PTR [rax+rcx*2]
   140021866:	and    eax,0x8
   140021869:	test   eax,eax
   14002186b:	je     0x140021875
   14002186d:	mov    sil,BYTE PTR [rbx]
   140021870:	inc    rbx
   140021873:	jmp    0x140021833
   140021875:	mov    ebp,DWORD PTR [rsp+0x90]
   14002187c:	cmp    sil,0x2d
   140021880:	jne    0x140021887
   140021882:	or     ebp,0x2
   140021885:	jmp    0x14002188d
   140021887:	cmp    sil,0x2b
   14002188b:	jne    0x140021893
   14002188d:	mov    sil,BYTE PTR [rbx]
   140021890:	inc    rbx
   140021893:	test   r14d,r14d
   140021896:	jne    0x1400218bc
   140021898:	cmp    sil,0x30
   14002189c:	je     0x1400218a6
   14002189e:	mov    r14d,0xa
   1400218a4:	jmp    0x1400218d8
   1400218a6:	mov    al,BYTE PTR [rbx]
   1400218a8:	sub    al,0x58
   1400218aa:	test   al,0xdf
   1400218ac:	je     0x1400218b6
   1400218ae:	mov    r14d,0x8
   1400218b4:	jmp    0x1400218d8
   1400218b6:	mov    r14d,0x10
   1400218bc:	cmp    r14d,0x10
   1400218c0:	jne    0x1400218d8
   1400218c2:	cmp    sil,0x30
   1400218c6:	jne    0x1400218d8
   1400218c8:	mov    al,BYTE PTR [rbx]
   1400218ca:	sub    al,0x58
   1400218cc:	test   al,0xdf
   1400218ce:	jne    0x1400218d8
   1400218d0:	mov    sil,BYTE PTR [rbx+0x1]
   1400218d4:	add    rbx,0x2
   1400218d8:	mov    r13,QWORD PTR [r8+0x108]
   1400218df:	movsxd r10,r14d
   1400218e2:	xor    edx,edx
   1400218e4:	or     rax,0xffffffffffffffff
   1400218e8:	div    r10
   1400218eb:	mov    r11,rdx
   1400218ee:	mov    r9,rax
   1400218f1:	movzx  ecx,sil
   1400218f5:	movzx  r8d,WORD PTR [r13+rcx*2+0x0]
   1400218fb:	mov    ecx,r8d
   1400218fe:	and    ecx,0x4
   140021901:	je     0x14002190c
   140021903:	movsx  edx,sil
   140021907:	sub    edx,0x30
   14002190a:	jmp    0x140021926
   14002190c:	and    r8d,0x103
   140021913:	je     0x140021944
   140021915:	lea    eax,[rsi-0x61]
   140021918:	movsx  edx,sil
   14002191c:	cmp    al,0x19
   14002191e:	ja     0x140021923
   140021920:	sub    edx,0x20
   140021923:	add    edx,0xffffffc9
   140021926:	cmp    edx,r14d
   140021929:	jae    0x140021944
   14002192b:	or     ebp,0x8
   14002192e:	cmp    rdi,r9
   140021931:	jb     0x140021958
   140021933:	jne    0x14002193c
   140021935:	mov    eax,edx
   140021937:	cmp    rax,r11
   14002193a:	jbe    0x140021958
   14002193c:	or     ebp,0x4
   14002193f:	test   r15,r15
   140021942:	jne    0x140021964
   140021944:	dec    rbx
   140021947:	test   bpl,0x8
   14002194b:	jne    0x14002196c
   14002194d:	test   r15,r15
   140021950:	cmovne rbx,r12
   140021954:	xor    edi,edi
   140021956:	jmp    0x1400219c8
   140021958:	mov    rcx,r10
   14002195b:	imul   rcx,rdi
   14002195f:	mov    edi,edx
   140021961:	add    rdi,rcx
   140021964:	mov    sil,BYTE PTR [rbx]
   140021967:	inc    rbx
   14002196a:	jmp    0x1400218f1
   14002196c:	movabs rsi,0x7fffffffffffffff
   140021976:	test   bpl,0x4
   14002197a:	jne    0x1400219a1
   14002197c:	test   bpl,0x1
   140021980:	jne    0x1400219c8
   140021982:	mov    eax,ebp
   140021984:	and    eax,0x2
   140021987:	je     0x140021998
   140021989:	movabs rcx,0x8000000000000000
   140021993:	cmp    rdi,rcx
   140021996:	ja     0x1400219a1
   140021998:	test   eax,eax
   14002199a:	jne    0x1400219c8
   14002199c:	cmp    rdi,rsi
   14002199f:	jbe    0x1400219c8
   1400219a1:	call   0x1400095b8
   1400219a6:	mov    DWORD PTR [rax],0x22
   1400219ac:	test   bpl,0x1
   1400219b0:	je     0x1400219b8
   1400219b2:	or     rdi,0xffffffffffffffff
   1400219b6:	jmp    0x1400219c8
   1400219b8:	mov    al,bpl
   1400219bb:	and    al,0x2
   1400219bd:	neg    al
   1400219bf:	sbb    rdi,rdi
   1400219c2:	neg    rdi
   1400219c5:	add    rdi,rsi
   1400219c8:	test   r15,r15
   1400219cb:	je     0x1400219d0
   1400219cd:	mov    QWORD PTR [r15],rbx
   1400219d0:	test   bpl,0x2
   1400219d4:	je     0x1400219d9
   1400219d6:	neg    rdi
   1400219d9:	cmp    BYTE PTR [rsp+0x38],0x0
   1400219de:	je     0x1400219ec
   1400219e0:	mov    rcx,QWORD PTR [rsp+0x30]
   1400219e5:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   1400219ec:	lea    r11,[rsp+0x40]
   1400219f1:	mov    rax,rdi
   1400219f4:	mov    rbx,QWORD PTR [r11+0x30]
   1400219f8:	mov    rbp,QWORD PTR [r11+0x40]
   1400219fc:	mov    rsi,QWORD PTR [r11+0x48]
   140021a00:	mov    rsp,r11
   140021a03:	pop    r15
   140021a05:	pop    r14
   140021a07:	pop    r13
   140021a09:	pop    r12
   140021a0b:	pop    rdi
   140021a0c:	ret    
   140021a0d:	int3   
   140021a0e:	int3   
   140021a0f:	int3   
   140021a10:	sub    rsp,0x28
   140021a14:	mov    r9,rdx
   140021a17:	mov    rdx,rcx
   140021a1a:	lea    rcx,[rsp+0x48]
   140021a1f:	call   0x140019600
   140021a24:	movss  xmm0,DWORD PTR [rsp+0x48]
   140021a2a:	add    rsp,0x28
   140021a2e:	ret    
   140021a2f:	int3   
   140021a30:	sub    rsp,0x38
   140021a34:	xor    eax,eax
   140021a36:	mov    r9d,r8d
   140021a39:	mov    r8,rdx
   140021a3c:	cmp    DWORD PTR [rip+0x175de],eax        # 0x140039020
   140021a42:	mov    DWORD PTR [rsp+0x20],eax
   140021a46:	mov    rdx,rcx
   140021a49:	jne    0x140021a54
   140021a4b:	lea    rcx,[rip+0x15496]        # 0x140036ee8
   140021a52:	jmp    0x140021a56
   140021a54:	xor    ecx,ecx
   140021a56:	call   0x1400217c0
   140021a5b:	add    rsp,0x38
   140021a5f:	ret    
   140021a60:	sub    rsp,0x38
   140021a64:	and    DWORD PTR [rsp+0x20],0x0
   140021a69:	mov    rax,r9
   140021a6c:	mov    r9d,r8d
   140021a6f:	mov    r8,rdx
   140021a72:	mov    rdx,rcx
   140021a75:	mov    rcx,rax
   140021a78:	call   0x1400217c0
   140021a7d:	add    rsp,0x38
   140021a81:	ret    
   140021a82:	int3   
   140021a83:	int3   
   140021a84:	sub    rsp,0x38
   140021a88:	and    DWORD PTR [rsp+0x20],0x0
   140021a8d:	mov    rax,r9
   140021a90:	mov    r9d,r8d
   140021a93:	mov    r8,rdx
   140021a96:	mov    rdx,rcx
   140021a99:	mov    rcx,rax
   140021a9c:	call   0x1400217c0
   140021aa1:	add    rsp,0x38
   140021aa5:	ret    
   140021aa6:	int3   
   140021aa7:	int3   
   140021aa8:	jmp    0x140024068
   140021aad:	int3   
   140021aae:	int3   
   140021aaf:	int3   
   140021ab0:	sub    rsp,0x38
   140021ab4:	and    DWORD PTR [rsp+0x20],0x0
   140021ab9:	mov    rax,r9
   140021abc:	mov    r9d,r8d
   140021abf:	mov    r8,rdx
   140021ac2:	mov    rdx,rcx
   140021ac5:	mov    rcx,rax
   140021ac8:	call   0x1400217c0
   140021acd:	add    rsp,0x38
   140021ad1:	ret    
   140021ad2:	int3   
   140021ad3:	int3   
   140021ad4:	sub    rsp,0x38
   140021ad8:	cmp    DWORD PTR [rip+0x17541],0x0        # 0x140039020
   140021adf:	mov    r9d,r8d
   140021ae2:	mov    r8,rdx
   140021ae5:	mov    rdx,rcx
   140021ae8:	mov    DWORD PTR [rsp+0x20],0x1
   140021af0:	jne    0x140021afb
   140021af2:	lea    rcx,[rip+0x153ef]        # 0x140036ee8
   140021af9:	jmp    0x140021afd
   140021afb:	xor    ecx,ecx
   140021afd:	call   0x1400217c0
   140021b02:	add    rsp,0x38
   140021b06:	ret    
   140021b07:	int3   
   140021b08:	sub    rsp,0x38
   140021b0c:	mov    rax,r9
   140021b0f:	mov    r9d,r8d
   140021b12:	mov    r8,rdx
   140021b15:	mov    rdx,rcx
   140021b18:	mov    rcx,rax
   140021b1b:	mov    DWORD PTR [rsp+0x20],0x1
   140021b23:	call   0x1400217c0
   140021b28:	add    rsp,0x38
   140021b2c:	ret    
   140021b2d:	int3   
   140021b2e:	int3   
   140021b2f:	int3   
   140021b30:	sub    rsp,0x38
   140021b34:	mov    rax,r9
   140021b37:	mov    r9d,r8d
   140021b3a:	mov    r8,rdx
   140021b3d:	mov    rdx,rcx
   140021b40:	mov    rcx,rax
   140021b43:	mov    DWORD PTR [rsp+0x20],0x1
   140021b4b:	call   0x1400217c0
   140021b50:	add    rsp,0x38
   140021b54:	ret    
   140021b55:	int3   
   140021b56:	int3   
   140021b57:	int3   
   140021b58:	sub    rsp,0x38
   140021b5c:	mov    rax,r9
   140021b5f:	mov    r9d,r8d
   140021b62:	mov    r8,rdx
   140021b65:	mov    rdx,rcx
   140021b68:	mov    rcx,rax
   140021b6b:	mov    DWORD PTR [rsp+0x20],0x1
   140021b73:	call   0x1400217c0
   140021b78:	add    rsp,0x38
   140021b7c:	ret    
   140021b7d:	int3   
   140021b7e:	int3   
   140021b7f:	int3   
   140021b80:	sub    rsp,0x28
   140021b84:	mov    r9,rdx
   140021b87:	mov    rdx,rcx
   140021b8a:	lea    rcx,[rsp+0x40]
   140021b8f:	xor    r8d,r8d
   140021b92:	call   0x140019600
   140021b97:	movss  xmm0,DWORD PTR [rsp+0x40]
   140021b9d:	add    rsp,0x28
   140021ba1:	ret    
   140021ba2:	int3   
   140021ba3:	int3   
   140021ba4:	jmp    0x140021a30
   140021ba9:	int3   
   140021baa:	int3   
   140021bab:	int3   
   140021bac:	jmp    0x1400241bc
   140021bb1:	int3   
   140021bb2:	int3   
   140021bb3:	int3   
   140021bb4:	jmp    0x140021a30
   140021bb9:	int3   
   140021bba:	int3   
   140021bbb:	int3   
   140021bbc:	jmp    0x140021ad4
   140021bc1:	int3   
   140021bc2:	int3   
   140021bc3:	int3   
   140021bc4:	jmp    0x140021ad4
   140021bc9:	int3   
   140021bca:	int3   
   140021bcb:	int3   
   140021bcc:	mov    QWORD PTR [rsp+0x8],rbx
   140021bd1:	mov    QWORD PTR [rsp+0x18],rbp
   140021bd6:	push   rsi
   140021bd7:	push   rdi
   140021bd8:	push   r12
   140021bda:	push   r14
   140021bdc:	push   r15
   140021bde:	sub    rsp,0x40
   140021be2:	mov    r12,rdx
   140021be5:	mov    rdx,rcx
   140021be8:	lea    rcx,[rsp+0x20]
   140021bed:	mov    r14d,r9d
   140021bf0:	mov    r15,r8
   140021bf3:	call   0x14000a000
   140021bf8:	test   r15,r15
   140021bfb:	je     0x140021c00
   140021bfd:	mov    QWORD PTR [r15],r12
   140021c00:	test   r12,r12
   140021c03:	je     0x140021c13
   140021c05:	test   r14d,r14d
   140021c08:	je     0x140021c28
   140021c0a:	lea    eax,[r14-0x2]
   140021c0e:	cmp    eax,0x22
   140021c11:	jbe    0x140021c28
   140021c13:	call   0x1400095b8
   140021c18:	mov    DWORD PTR [rax],0x16
   140021c1e:	call   0x140008628
   140021c23:	jmp    0x140021cae
   140021c28:	mov    sil,BYTE PTR [r12]
   140021c2c:	mov    r8,QWORD PTR [rsp+0x20]
   140021c31:	xor    edi,edi
   140021c33:	lea    rbx,[r12+0x1]
   140021c38:	cmp    DWORD PTR [r8+0xd4],0x1
   140021c40:	jle    0x140021c5c
   140021c42:	lea    r8,[rsp+0x20]
   140021c47:	movzx  ecx,sil
   140021c4b:	mov    edx,0x8
   140021c50:	call   0x14001c590
   140021c55:	mov    r8,QWORD PTR [rsp+0x20]
   140021c5a:	jmp    0x140021c6e
   140021c5c:	mov    rax,QWORD PTR [r8+0x108]
   140021c63:	movzx  ecx,sil
   140021c67:	movzx  eax,WORD PTR [rax+rcx*2]
   140021c6b:	and    eax,0x8
   140021c6e:	test   eax,eax
   140021c70:	je     0x140021c7a
   140021c72:	mov    sil,BYTE PTR [rbx]
   140021c75:	inc    rbx
   140021c78:	jmp    0x140021c38
   140021c7a:	mov    ebp,DWORD PTR [rsp+0x90]
   140021c81:	cmp    sil,0x2d
   140021c85:	jne    0x140021c8c
   140021c87:	or     ebp,0x2
   140021c8a:	jmp    0x140021c92
   140021c8c:	cmp    sil,0x2b
   140021c90:	jne    0x140021c98
   140021c92:	mov    sil,BYTE PTR [rbx]
   140021c95:	inc    rbx
   140021c98:	test   r14d,r14d
   140021c9b:	je     0x140021cba
   140021c9d:	lea    eax,[r14-0x2]
   140021ca1:	cmp    eax,0x22
   140021ca4:	jbe    0x140021cb5
   140021ca6:	test   r15,r15
   140021ca9:	je     0x140021cae
   140021cab:	mov    QWORD PTR [r15],r12
   140021cae:	xor    edi,edi
   140021cb0:	jmp    0x140021dda
   140021cb5:	test   r14d,r14d
   140021cb8:	jne    0x140021ce0
   140021cba:	cmp    sil,0x30
   140021cbe:	je     0x140021cc8
   140021cc0:	mov    r14d,0xa
   140021cc6:	jmp    0x140021cfc
   140021cc8:	mov    al,BYTE PTR [rbx]
   140021cca:	sub    al,0x58
   140021ccc:	test   al,0xdf
   140021cce:	je     0x140021cd8
   140021cd0:	mov    r14d,0x8
   140021cd6:	jmp    0x140021cfc
   140021cd8:	mov    r14d,0x10
   140021cde:	jmp    0x140021cec
   140021ce0:	cmp    r14d,0x10
   140021ce4:	jne    0x140021cfc
   140021ce6:	cmp    sil,0x30
   140021cea:	jne    0x140021cfc
   140021cec:	mov    al,BYTE PTR [rbx]
   140021cee:	sub    al,0x58
   140021cf0:	test   al,0xdf
   140021cf2:	jne    0x140021cfc
   140021cf4:	mov    sil,BYTE PTR [rbx+0x1]
   140021cf8:	add    rbx,0x2
   140021cfc:	mov    r10,QWORD PTR [r8+0x108]
   140021d03:	xor    edx,edx
   140021d05:	or     eax,0xffffffff
   140021d08:	div    r14d
   140021d0b:	mov    r9d,eax
   140021d0e:	movzx  ecx,sil
   140021d12:	movzx  r8d,WORD PTR [r10+rcx*2]
   140021d17:	mov    ecx,r8d
   140021d1a:	and    ecx,0x4
   140021d1d:	je     0x140021d28
   140021d1f:	movsx  ecx,sil
   140021d23:	sub    ecx,0x30
   140021d26:	jmp    0x140021d42
   140021d28:	and    r8d,0x103
   140021d2f:	je     0x140021d5d
   140021d31:	lea    eax,[rsi-0x61]
   140021d34:	movsx  ecx,sil
   140021d38:	cmp    al,0x19
   140021d3a:	ja     0x140021d3f
   140021d3c:	sub    ecx,0x20
   140021d3f:	add    ecx,0xffffffc9
   140021d42:	cmp    ecx,r14d
   140021d45:	jae    0x140021d5d
   140021d47:	or     ebp,0x8
   140021d4a:	cmp    edi,r9d
   140021d4d:	jb     0x140021d71
   140021d4f:	jne    0x140021d55
   140021d51:	cmp    ecx,edx
   140021d53:	jbe    0x140021d71
   140021d55:	or     ebp,0x4
   140021d58:	test   r15,r15
   140021d5b:	jne    0x140021d77
   140021d5d:	dec    rbx
   140021d60:	test   bpl,0x8
   140021d64:	jne    0x140021d7f
   140021d66:	test   r15,r15
   140021d69:	cmovne rbx,r12
   140021d6d:	xor    edi,edi
   140021d6f:	jmp    0x140021dca
   140021d71:	imul   edi,r14d
   140021d75:	add    edi,ecx
   140021d77:	mov    sil,BYTE PTR [rbx]
   140021d7a:	inc    rbx
   140021d7d:	jmp    0x140021d0e
   140021d7f:	mov    esi,0x7fffffff
   140021d84:	test   bpl,0x4
   140021d88:	jne    0x140021da7
   140021d8a:	test   bpl,0x1
   140021d8e:	jne    0x140021dca
   140021d90:	mov    eax,ebp
   140021d92:	and    eax,0x2
   140021d95:	je     0x140021d9f
   140021d97:	cmp    edi,0x80000000
   140021d9d:	ja     0x140021da7
   140021d9f:	test   eax,eax
   140021da1:	jne    0x140021dca
   140021da3:	cmp    edi,esi
   140021da5:	jbe    0x140021dca
   140021da7:	call   0x1400095b8
   140021dac:	mov    DWORD PTR [rax],0x22
   140021db2:	test   bpl,0x1
   140021db6:	je     0x140021dbd
   140021db8:	or     edi,0xffffffff
   140021dbb:	jmp    0x140021dca
   140021dbd:	mov    al,bpl
   140021dc0:	and    al,0x2
   140021dc2:	neg    al
   140021dc4:	sbb    edi,edi
   140021dc6:	neg    edi
   140021dc8:	add    edi,esi
   140021dca:	test   r15,r15
   140021dcd:	je     0x140021dd2
   140021dcf:	mov    QWORD PTR [r15],rbx
   140021dd2:	test   bpl,0x2
   140021dd6:	je     0x140021dda
   140021dd8:	neg    edi
   140021dda:	cmp    BYTE PTR [rsp+0x38],0x0
   140021ddf:	je     0x140021ded
   140021de1:	mov    rcx,QWORD PTR [rsp+0x30]
   140021de6:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140021ded:	lea    r11,[rsp+0x40]
   140021df2:	mov    eax,edi
   140021df4:	mov    rbx,QWORD PTR [r11+0x30]
   140021df8:	mov    rbp,QWORD PTR [r11+0x40]
   140021dfc:	mov    rsp,r11
   140021dff:	pop    r15
   140021e01:	pop    r14
   140021e03:	pop    r12
   140021e05:	pop    rdi
   140021e06:	pop    rsi
   140021e07:	ret    
   140021e08:	sub    rsp,0x38
   140021e0c:	and    DWORD PTR [rsp+0x20],0x0
   140021e11:	mov    rax,r9
   140021e14:	mov    r9d,r8d
   140021e17:	mov    r8,rdx
   140021e1a:	mov    rdx,rcx
   140021e1d:	mov    rcx,rax
   140021e20:	call   0x140021bcc
   140021e25:	add    rsp,0x38
   140021e29:	ret    
   140021e2a:	int3   
   140021e2b:	int3   
   140021e2c:	sub    rsp,0x38
   140021e30:	mov    rax,r9
   140021e33:	mov    r9d,r8d
   140021e36:	mov    r8,rdx
   140021e39:	mov    rdx,rcx
   140021e3c:	mov    rcx,rax
   140021e3f:	mov    DWORD PTR [rsp+0x20],0x1
   140021e47:	call   0x140021bcc
   140021e4c:	add    rsp,0x38
   140021e50:	ret    
   140021e51:	int3   
   140021e52:	int3   
   140021e53:	int3   
   140021e54:	sub    rsp,0x38
   140021e58:	xor    eax,eax
   140021e5a:	mov    r9d,r8d
   140021e5d:	mov    r8,rdx
   140021e60:	cmp    DWORD PTR [rip+0x171ba],eax        # 0x140039020
   140021e66:	mov    DWORD PTR [rsp+0x20],eax
   140021e6a:	mov    rdx,rcx
   140021e6d:	jne    0x140021e78
   140021e6f:	lea    rcx,[rip+0x15072]        # 0x140036ee8
   140021e76:	jmp    0x140021e7a
   140021e78:	xor    ecx,ecx
   140021e7a:	call   0x140021bcc
   140021e7f:	add    rsp,0x38
   140021e83:	ret    
   140021e84:	sub    rsp,0x38
   140021e88:	cmp    DWORD PTR [rip+0x17191],0x0        # 0x140039020
   140021e8f:	mov    r9d,r8d
   140021e92:	mov    r8,rdx
   140021e95:	mov    rdx,rcx
   140021e98:	mov    DWORD PTR [rsp+0x20],0x1
   140021ea0:	jne    0x140021eab
   140021ea2:	lea    rcx,[rip+0x1503f]        # 0x140036ee8
   140021ea9:	jmp    0x140021ead
   140021eab:	xor    ecx,ecx
   140021ead:	call   0x140021bcc
   140021eb2:	add    rsp,0x38
   140021eb6:	ret    
   140021eb7:	int3   
   140021eb8:	xor    eax,eax
   140021eba:	ret    
   140021ebb:	int3   
   140021ebc:	sub    rsp,0x28
   140021ec0:	call   0x14000b18c
   140021ec5:	mov    rcx,QWORD PTR [rax+0xc0]
   140021ecc:	cmp    rcx,QWORD PTR [rip+0x14ead]        # 0x140036d80
   140021ed3:	je     0x140021eeb
   140021ed5:	mov    eax,DWORD PTR [rax+0xc8]
   140021edb:	test   DWORD PTR [rip+0x15017],eax        # 0x140036ef8
   140021ee1:	jne    0x140021eeb
   140021ee3:	call   0x14000fff4
   140021ee8:	mov    rcx,rax
   140021eeb:	mov    eax,DWORD PTR [rcx+0x4]
   140021eee:	add    rsp,0x28
   140021ef2:	ret    
   140021ef3:	int3   
   140021ef4:	sub    rsp,0x28
   140021ef8:	call   0x14000b18c
   140021efd:	mov    rcx,QWORD PTR [rax+0xc0]
   140021f04:	cmp    rcx,QWORD PTR [rip+0x14e75]        # 0x140036d80
   140021f0b:	je     0x140021f23
   140021f0d:	mov    eax,DWORD PTR [rax+0xc8]
   140021f13:	test   DWORD PTR [rip+0x14fdf],eax        # 0x140036ef8
   140021f19:	jne    0x140021f23
   140021f1b:	call   0x14000fff4
   140021f20:	mov    rcx,rax
   140021f23:	mov    eax,DWORD PTR [rcx+0x8]
   140021f26:	add    rsp,0x28
   140021f2a:	ret    
   140021f2b:	int3   
   140021f2c:	sub    rsp,0x28
   140021f30:	call   0x14000b18c
   140021f35:	mov    rcx,QWORD PTR [rax+0xc0]
   140021f3c:	cmp    rcx,QWORD PTR [rip+0x14e3d]        # 0x140036d80
   140021f43:	je     0x140021f5b
   140021f45:	mov    eax,DWORD PTR [rax+0xc8]
   140021f4b:	test   DWORD PTR [rip+0x14fa7],eax        # 0x140036ef8
   140021f51:	jne    0x140021f5b
   140021f53:	call   0x14000fff4
   140021f58:	mov    rcx,rax
   140021f5b:	lea    rax,[rcx+0x128]
   140021f62:	add    rsp,0x28
   140021f66:	ret    
   140021f67:	int3   
   140021f68:	sub    rsp,0x28
   140021f6c:	call   0x14000b18c
   140021f71:	mov    rcx,QWORD PTR [rax+0xc0]
   140021f78:	cmp    rcx,QWORD PTR [rip+0x14e01]        # 0x140036d80
   140021f7f:	je     0x140021f97
   140021f81:	mov    eax,DWORD PTR [rax+0xc8]
   140021f87:	test   DWORD PTR [rip+0x14f6b],eax        # 0x140036ef8
   140021f8d:	jne    0x140021f97
   140021f8f:	call   0x14000fff4
   140021f94:	mov    rcx,rax
   140021f97:	mov    eax,DWORD PTR [rcx+0xd4]
   140021f9d:	add    rsp,0x28
   140021fa1:	ret    
   140021fa2:	int3   
   140021fa3:	int3   
   140021fa4:	test   rcx,rcx
   140021fa7:	je     0x140021f68
   140021fad:	mov    rax,QWORD PTR [rcx]
   140021fb0:	mov    eax,DWORD PTR [rax+0xd4]
   140021fb6:	ret    
   140021fb7:	int3   
   140021fb8:	mov    r11,rsp
   140021fbb:	mov    QWORD PTR [r11+0x10],rbx
   140021fbf:	mov    QWORD PTR [r11+0x18],rbp
   140021fc3:	mov    QWORD PTR [r11+0x20],rsi
   140021fc7:	push   rdi
   140021fc8:	push   r12
   140021fca:	push   r13
   140021fcc:	push   r14
   140021fce:	push   r15
   140021fd0:	sub    rsp,0x90
   140021fd7:	mov    rax,QWORD PTR [rip+0x14a62]        # 0x140036a40
   140021fde:	xor    rax,rsp
   140021fe1:	mov    QWORD PTR [rsp+0x88],rax
   140021fe9:	mov    r8,QWORD PTR [rcx+0x138]
   140021ff0:	xor    ebx,ebx
   140021ff2:	mov    rdi,rcx
   140021ff5:	mov    QWORD PTR [rsp+0x58],rbx
   140021ffa:	mov    r15d,ebx
   140021ffd:	mov    r12d,ebx
   140022000:	mov    r13d,ebx
   140022003:	mov    ebp,ebx
   140022005:	mov    QWORD PTR [r11-0x58],rcx
   140022009:	mov    QWORD PTR [r11-0x50],rbx
   14002200d:	test   r8,r8
   140022010:	je     0x140022356
   140022016:	lea    r14,[rcx+0x4]
   14002201a:	lea    esi,[rbx+0x1]
   14002201d:	cmp    DWORD PTR [r14],ebx
   140022020:	jne    0x140022040
   140022022:	lea    rcx,[r11-0x58]
   140022026:	xor    edx,edx
   140022028:	mov    r9d,0x1004
   14002202e:	mov    QWORD PTR [rsp+0x20],r14
   140022033:	call   0x140007bd0
   140022038:	test   eax,eax
   14002203a:	jne    0x140022326
   140022040:	mov    ecx,0x4
   140022045:	call   0x140007f54
   14002204a:	mov    ebp,0x180
   14002204f:	mov    edx,0x2
   140022054:	mov    ecx,ebp
   140022056:	mov    QWORD PTR [rsp+0x58],rax
   14002205b:	call   0x140007ed4
   140022060:	mov    rdx,rsi
   140022063:	mov    ecx,ebp
   140022065:	mov    r15,rax
   140022068:	call   0x140007ed4
   14002206d:	mov    rdx,rsi
   140022070:	mov    ecx,ebp
   140022072:	mov    r12,rax
   140022075:	call   0x140007ed4
   14002207a:	lea    ecx,[rbp-0x7f]
   14002207d:	mov    rdx,rsi
   140022080:	mov    r13,rax
   140022083:	call   0x140007ed4
   140022088:	mov    rbp,rax
   14002208b:	mov    rax,QWORD PTR [rsp+0x58]
   140022090:	test   rax,rax
   140022093:	je     0x140022326
   140022099:	test   r15,r15
   14002209c:	je     0x140022326
   1400220a2:	test   rbp,rbp
   1400220a5:	je     0x140022326
   1400220ab:	test   r12,r12
   1400220ae:	je     0x140022326
   1400220b4:	test   r13,r13
   1400220b7:	je     0x140022326
   1400220bd:	mov    DWORD PTR [rax],ebx
   1400220bf:	mov    rcx,rbp
   1400220c2:	mov    eax,ebx
   1400220c4:	mov    BYTE PTR [rcx],al
   1400220c6:	add    eax,esi
   1400220c8:	add    rcx,rsi
   1400220cb:	cmp    eax,0x100
   1400220d0:	jl     0x1400220c4
   1400220d2:	mov    ecx,DWORD PTR [r14]
   1400220d5:	lea    rdx,[rsp+0x70]
   1400220da:	call   QWORD PTR [rip+0x5120]        # 0x140027200
   1400220e0:	test   eax,eax
   1400220e2:	je     0x140022326
   1400220e8:	cmp    DWORD PTR [rsp+0x70],0x5
   1400220ed:	ja     0x140022326
   1400220f3:	movzx  eax,WORD PTR [rsp+0x70]
   1400220f8:	mov    rdx,QWORD PTR [rdi+0x138]
   1400220ff:	mov    DWORD PTR [rsp+0x40],ebx
   140022103:	mov    DWORD PTR [rsp+0x50],eax
   140022107:	mov    eax,DWORD PTR [r14]
   14002210a:	lea    rcx,[r12+0x81]
   140022112:	mov    DWORD PTR [rsp+0x38],eax
   140022116:	mov    eax,0xff
   14002211b:	lea    r9,[rbp+0x1]
   14002211f:	mov    DWORD PTR [rsp+0x30],eax
   140022123:	mov    QWORD PTR [rsp+0x28],rcx
   140022128:	lea    r8d,[rax+0x1]
   14002212c:	xor    ecx,ecx
   14002212e:	mov    DWORD PTR [rsp+0x20],eax
   140022132:	call   0x1400103d8
   140022137:	test   eax,eax
   140022139:	je     0x140022326
   14002213f:	mov    eax,DWORD PTR [r14]
   140022142:	mov    rdx,QWORD PTR [rdi+0x138]
   140022149:	mov    DWORD PTR [rsp+0x40],ebx
   14002214d:	mov    DWORD PTR [rsp+0x38],eax
   140022151:	mov    eax,0xff
   140022156:	lea    rcx,[r13+0x81]
   14002215d:	mov    DWORD PTR [rsp+0x30],eax
   140022161:	mov    QWORD PTR [rsp+0x28],rcx
   140022166:	lea    r9,[rbp+0x1]
   14002216a:	xor    ecx,ecx
   14002216c:	mov    r8d,0x200
   140022172:	mov    DWORD PTR [rsp+0x20],eax
   140022176:	call   0x1400103d8
   14002217b:	test   eax,eax
   14002217d:	je     0x140022326
   140022183:	cmp    DWORD PTR [rsp+0x50],esi
   140022187:	jle    0x1400221b7
   140022189:	cmp    BYTE PTR [rsp+0x76],bl
   14002218d:	je     0x1400221b7
   14002218f:	lea    rcx,[rsp+0x77]
   140022194:	cmp    BYTE PTR [rcx],bl
   140022196:	je     0x1400221b7
   140022198:	movzx  edx,BYTE PTR [rcx-0x1]
   14002219c:	jmp    0x1400221a7
   14002219e:	movsxd rax,edx
   1400221a1:	add    edx,esi
   1400221a3:	mov    BYTE PTR [rax+rbp*1],0x20
   1400221a7:	movzx  eax,BYTE PTR [rcx]
   1400221aa:	cmp    edx,eax
   1400221ac:	jle    0x14002219e
   1400221ae:	add    rcx,0x2
   1400221b2:	cmp    BYTE PTR [rcx-0x1],bl
   1400221b5:	jne    0x140022194
   1400221b7:	mov    eax,DWORD PTR [r14]
   1400221ba:	lea    rcx,[r15+0x100]
   1400221c1:	mov    DWORD PTR [rsp+0x30],ebx
   1400221c5:	mov    DWORD PTR [rsp+0x28],eax
   1400221c9:	mov    QWORD PTR [rsp+0x20],rcx
   1400221ce:	mov    r9d,0x100
   1400221d4:	xor    ecx,ecx
   1400221d6:	mov    r8,rbp
   1400221d9:	mov    edx,esi
   1400221db:	call   0x1400105e8
   1400221e0:	test   eax,eax
   1400221e2:	je     0x140022326
   1400221e8:	lea    r14,[r15+0xfe]
   1400221ef:	mov    WORD PTR [r14],bx
   1400221f3:	mov    BYTE PTR [r12+0x7f],bl
   1400221f8:	mov    BYTE PTR [r13+0x7f],bl
   1400221fc:	mov    BYTE PTR [r12+0x80],bl
   140022204:	mov    BYTE PTR [r13+0x80],bl
   14002220b:	cmp    DWORD PTR [rsp+0x50],esi
   14002220f:	jle    0x14002224a
   140022211:	cmp    BYTE PTR [rsp+0x76],bl
   140022215:	je     0x14002224a
   140022217:	lea    rcx,[rsp+0x77]
   14002221c:	cmp    BYTE PTR [rcx],bl
   14002221e:	je     0x14002224a
   140022220:	movzx  edx,BYTE PTR [rcx-0x1]
   140022224:	jmp    0x14002223a
   140022226:	movsxd rax,edx
   140022229:	mov    r8d,0x8000
   14002222f:	add    edx,esi
   140022231:	mov    WORD PTR [r15+rax*2+0x100],r8w
   14002223a:	movzx  eax,BYTE PTR [rcx]
   14002223d:	cmp    edx,eax
   14002223f:	jle    0x140022226
   140022241:	add    rcx,0x2
   140022245:	cmp    BYTE PTR [rcx-0x1],bl
   140022248:	jne    0x14002221c
   14002224a:	lea    rdx,[r15+0x200]
   140022251:	mov    r8d,0xfe
   140022257:	mov    rcx,r15
   14002225a:	call   0x1400056d0
   14002225f:	lea    rdx,[r12+0x100]
   140022267:	mov    r8d,0x7f
   14002226d:	mov    rcx,r12
   140022270:	call   0x1400056d0
   140022275:	lea    rdx,[r13+0x100]
   14002227c:	mov    r8d,0x7f
   140022282:	mov    rcx,r13
   140022285:	call   0x1400056d0
   14002228a:	mov    rcx,QWORD PTR [rdi+0xf8]
   140022291:	test   rcx,rcx
   140022294:	je     0x1400222da
   140022296:	lock dec DWORD PTR [rcx]
   140022299:	jne    0x1400222da
   14002229b:	mov    rcx,QWORD PTR [rdi+0x100]
   1400222a2:	sub    rcx,0xfe
   1400222a9:	call   0x140006444
   1400222ae:	mov    rcx,QWORD PTR [rdi+0x110]
   1400222b5:	add    rcx,0xffffffffffffff80
   1400222b9:	call   0x140006444
   1400222be:	mov    rcx,QWORD PTR [rdi+0x118]
   1400222c5:	add    rcx,0xffffffffffffff80
   1400222c9:	call   0x140006444
   1400222ce:	mov    rcx,QWORD PTR [rdi+0xf8]
   1400222d5:	call   0x140006444
   1400222da:	mov    rax,QWORD PTR [rsp+0x58]
   1400222df:	mov    DWORD PTR [rax],esi
   1400222e1:	mov    QWORD PTR [rdi+0xf8],rax
   1400222e8:	lea    rax,[r15+0x100]
   1400222ef:	mov    QWORD PTR [rdi+0x108],rax
   1400222f6:	lea    rax,[r12+0x80]
   1400222fe:	mov    QWORD PTR [rdi+0x100],r14
   140022305:	mov    QWORD PTR [rdi+0x110],rax
   14002230c:	lea    rax,[r13+0x80]
   140022313:	mov    QWORD PTR [rdi+0x118],rax
   14002231a:	mov    eax,DWORD PTR [rsp+0x50]
   14002231e:	mov    DWORD PTR [rdi+0xd4],eax
   140022324:	jmp    0x14002234a
   140022326:	mov    rcx,QWORD PTR [rsp+0x58]
   14002232b:	call   0x140006444
   140022330:	mov    rcx,r15
   140022333:	call   0x140006444
   140022338:	mov    rcx,r12
   14002233b:	call   0x140006444
   140022340:	mov    rcx,r13
   140022343:	call   0x140006444
   140022348:	mov    ebx,esi
   14002234a:	mov    rcx,rbp
   14002234d:	call   0x140006444
   140022352:	mov    eax,ebx
   140022354:	jmp    0x1400223aa
   140022356:	mov    rax,QWORD PTR [rcx+0xf8]
   14002235d:	test   rax,rax
   140022360:	je     0x140022365
   140022362:	lock dec DWORD PTR [rax]
   140022365:	lea    rax,[rip+0xce14]        # 0x14002f180
   14002236c:	mov    esi,0x1
   140022371:	mov    QWORD PTR [rcx+0xf8],rbx
   140022378:	mov    QWORD PTR [rcx+0x108],rax
   14002237f:	lea    rax,[rip+0xd28a]        # 0x14002f610
   140022386:	mov    QWORD PTR [rcx+0x100],rbx
   14002238d:	mov    QWORD PTR [rcx+0x110],rax
   140022394:	lea    rax,[rip+0xd3f5]        # 0x14002f790
   14002239b:	mov    DWORD PTR [rcx+0xd4],esi
   1400223a1:	mov    QWORD PTR [rcx+0x118],rax
   1400223a8:	xor    eax,eax
   1400223aa:	mov    rcx,QWORD PTR [rsp+0x88]
   1400223b2:	xor    rcx,rsp
   1400223b5:	call   0x14000d0a0
   1400223ba:	lea    r11,[rsp+0x90]
   1400223c2:	mov    rbx,QWORD PTR [r11+0x38]
   1400223c6:	mov    rbp,QWORD PTR [r11+0x40]
   1400223ca:	mov    rsi,QWORD PTR [r11+0x48]
   1400223ce:	mov    rsp,r11
   1400223d1:	pop    r15
   1400223d3:	pop    r14
   1400223d5:	pop    r13
   1400223d7:	pop    r12
   1400223d9:	pop    rdi
   1400223da:	ret    
   1400223db:	int3   
   1400223dc:	int3   
   1400223dd:	int3   
   1400223de:	int3   
   1400223df:	int3   
   1400223e0:	int3   
   1400223e1:	int3   
   1400223e2:	int3   
   1400223e3:	int3   
   1400223e4:	int3   
   1400223e5:	int3   
   1400223e6:	data16 nop WORD PTR [rax+rax*1+0x0]
   1400223f0:	sub    rdx,rcx
   1400223f3:	cmp    r8,0x8
   1400223f7:	jb     0x14002241b
   1400223f9:	test   cl,0x7
   1400223fc:	je     0x140022412
   1400223fe:	xchg   ax,ax
   140022400:	mov    al,BYTE PTR [rcx]
   140022402:	cmp    al,BYTE PTR [rdx+rcx*1]
   140022405:	jne    0x140022433
   140022407:	inc    rcx
   14002240a:	dec    r8
   14002240d:	test   cl,0x7
   140022410:	jne    0x140022400
   140022412:	mov    r9,r8
   140022415:	shr    r9,0x3
   140022419:	jne    0x14002243a
   14002241b:	test   r8,r8
   14002241e:	je     0x14002242f
   140022420:	mov    al,BYTE PTR [rcx]
   140022422:	cmp    al,BYTE PTR [rdx+rcx*1]
   140022425:	jne    0x140022433
   140022427:	inc    rcx
   14002242a:	dec    r8
   14002242d:	jne    0x140022420
   14002242f:	xor    rax,rax
   140022432:	ret    
   140022433:	sbb    eax,eax
   140022435:	sbb    eax,0xffffffff
   140022438:	ret    
   140022439:	nop
   14002243a:	shr    r9,0x2
   14002243e:	je     0x140022477
   140022440:	mov    rax,QWORD PTR [rcx]
   140022443:	cmp    rax,QWORD PTR [rdx+rcx*1]
   140022447:	jne    0x1400224a4
   140022449:	mov    rax,QWORD PTR [rcx+0x8]
   14002244d:	cmp    rax,QWORD PTR [rdx+rcx*1+0x8]
   140022452:	jne    0x1400224a0
   140022454:	mov    rax,QWORD PTR [rcx+0x10]
   140022458:	cmp    rax,QWORD PTR [rdx+rcx*1+0x10]
   14002245d:	jne    0x14002249c
   14002245f:	mov    rax,QWORD PTR [rcx+0x18]
   140022463:	cmp    rax,QWORD PTR [rdx+rcx*1+0x18]
   140022468:	jne    0x140022498
   14002246a:	add    rcx,0x20
   14002246e:	dec    r9
   140022471:	jne    0x140022440
   140022473:	and    r8,0x1f
   140022477:	mov    r9,r8
   14002247a:	shr    r9,0x3
   14002247e:	je     0x14002241b
   140022480:	mov    rax,QWORD PTR [rcx]
   140022483:	cmp    rax,QWORD PTR [rdx+rcx*1]
   140022487:	jne    0x1400224a4
   140022489:	add    rcx,0x8
   14002248d:	dec    r9
   140022490:	jne    0x140022480
   140022492:	and    r8,0x7
   140022496:	jmp    0x14002241b
   140022498:	add    rcx,0x8
   14002249c:	add    rcx,0x8
   1400224a0:	add    rcx,0x8
   1400224a4:	mov    rcx,QWORD PTR [rcx+rdx*1]
   1400224a8:	bswap  rax
   1400224ab:	bswap  rcx
   1400224ae:	cmp    rax,rcx
   1400224b1:	sbb    eax,eax
   1400224b3:	sbb    eax,0xffffffff
   1400224b6:	ret    
   1400224b7:	int3   
   1400224b8:	movzx  r8d,WORD PTR [rdx]
   1400224bc:	movzx  eax,WORD PTR [rcx]
   1400224bf:	sub    eax,r8d
   1400224c2:	jne    0x1400224de
   1400224c4:	sub    rcx,rdx
   1400224c7:	test   r8w,r8w
   1400224cb:	je     0x1400224de
   1400224cd:	add    rdx,0x2
   1400224d1:	movzx  r8d,WORD PTR [rdx]
   1400224d5:	movzx  eax,WORD PTR [rcx+rdx*1]
   1400224d9:	sub    eax,r8d
   1400224dc:	je     0x1400224c7
   1400224de:	test   eax,eax
   1400224e0:	jns    0x1400224e6
   1400224e2:	or     eax,0xffffffff
   1400224e5:	ret    
   1400224e6:	mov    ecx,0x1
   1400224eb:	test   eax,eax
   1400224ed:	cmovg  eax,ecx
   1400224f0:	ret    
   1400224f1:	int3   
   1400224f2:	int3   
   1400224f3:	int3   
   1400224f4:	xor    r10d,r10d
   1400224f7:	mov    r9,rdx
   1400224fa:	mov    rax,rcx
   1400224fd:	cmp    WORD PTR [rcx],r10w
   140022501:	je     0x14002252c
   140022503:	mov    r8,r9
   140022506:	cmp    WORD PTR [r9],r10w
   14002250a:	je     0x140022522
   14002250c:	movzx  edx,WORD PTR [r9]
   140022510:	cmp    dx,WORD PTR [rax]
   140022513:	je     0x14002252c
   140022515:	add    r8,0x2
   140022519:	movzx  edx,WORD PTR [r8]
   14002251d:	test   dx,dx
   140022520:	jne    0x140022510
   140022522:	add    rax,0x2
   140022526:	cmp    WORD PTR [rax],r10w
   14002252a:	jmp    0x140022501
   14002252c:	sub    rax,rcx
   14002252f:	sar    rax,1
   140022532:	ret    
   140022533:	int3   
   140022534:	test   r8,r8
   140022537:	jne    0x140022551
   140022539:	xor    eax,eax
   14002253b:	ret    
   14002253c:	movzx  eax,WORD PTR [rcx]
   14002253f:	test   ax,ax
   140022542:	je     0x140022556
   140022544:	cmp    ax,WORD PTR [rdx]
   140022547:	jne    0x140022556
   140022549:	add    rcx,0x2
   14002254d:	add    rdx,0x2
   140022551:	dec    r8
   140022554:	jne    0x14002253c
   140022556:	movzx  eax,WORD PTR [rcx]
   140022559:	movzx  ecx,WORD PTR [rdx]
   14002255c:	sub    eax,ecx
   14002255e:	ret    
   14002255f:	int3   
   140022560:	mov    r9,rdx
   140022563:	movzx  eax,WORD PTR [rcx]
   140022566:	test   ax,ax
   140022569:	je     0x140022595
   14002256b:	cmp    WORD PTR [r9],0x0
   140022570:	mov    r8,r9
   140022573:	je     0x14002258b
   140022575:	movzx  edx,WORD PTR [r9]
   140022579:	cmp    dx,ax
   14002257c:	je     0x140022591
   14002257e:	add    r8,0x2
   140022582:	movzx  edx,WORD PTR [r8]
   140022586:	test   dx,dx
   140022589:	jne    0x140022579
   14002258b:	add    rcx,0x2
   14002258f:	jmp    0x140022563
   140022591:	mov    rax,rcx
   140022594:	ret    
   140022595:	xor    eax,eax
   140022597:	ret    
   140022598:	rex push rbx
   14002259a:	sub    rsp,0xf0
   1400225a1:	mov    rax,QWORD PTR [rip+0x14498]        # 0x140036a40
   1400225a8:	xor    rax,rsp
   1400225ab:	mov    QWORD PTR [rsp+0xe0],rax
   1400225b3:	or     DWORD PTR [rcx+0x10],0x104
   1400225ba:	mov    rbx,rcx
   1400225bd:	lea    rcx,[rsp+0x30]
   1400225c2:	mov    edx,0x55
   1400225c7:	call   0x14000f570
   1400225cc:	cmp    eax,0x1
   1400225cf:	jle    0x1400225f9
   1400225d1:	lea    rcx,[rsp+0x30]
   1400225d6:	call   0x14000f9a0
   1400225db:	lea    rcx,[rbx+0x258]
   1400225e2:	lea    r8,[rsp+0x30]
   1400225e7:	lea    r9,[rax+0x1]
   1400225eb:	mov    edx,0x55
   1400225f0:	call   0x14000f9bc
   1400225f5:	test   eax,eax
   1400225f7:	jne    0x140022612
   1400225f9:	mov    rcx,QWORD PTR [rsp+0xe0]
   140022601:	xor    rcx,rsp
   140022604:	call   0x14000d0a0
   140022609:	add    rsp,0xf0
   140022610:	pop    rbx
   140022611:	ret    
   140022612:	and    QWORD PTR [rsp+0x20],0x0
   140022618:	xor    r9d,r9d
   14002261b:	xor    r8d,r8d
   14002261e:	xor    edx,edx
   140022620:	xor    ecx,ecx
   140022622:	call   0x140008678
   140022627:	int3   
   140022628:	rex push rbx
   14002262a:	sub    rsp,0x20
   14002262e:	mov    rbx,rcx
   140022631:	mov    rcx,QWORD PTR [rcx]
   140022634:	call   0x14000f9a0
   140022639:	mov    rcx,QWORD PTR [rbx+0x8]
   14002263d:	xor    edx,edx
   14002263f:	cmp    rax,0x3
   140022643:	sete   dl
   140022646:	mov    DWORD PTR [rbx+0x18],edx
   140022649:	call   0x14000f9a0
   14002264e:	xor    ecx,ecx
   140022650:	cmp    rax,0x3
   140022654:	sete   cl
   140022657:	cmp    DWORD PTR [rbx+0x18],0x0
   14002265b:	mov    DWORD PTR [rbx+0x1c],ecx
   14002265e:	je     0x140022667
   140022660:	mov    edx,0x2
   140022665:	jmp    0x1400226a0
   140022667:	mov    rcx,QWORD PTR [rbx]
   14002266a:	xor    r9d,r9d
   14002266d:	test   rcx,rcx
   140022670:	jne    0x140022676
   140022672:	xor    edx,edx
   140022674:	jmp    0x1400226a0
   140022676:	mov    edx,0x2
   14002267b:	movzx  r8d,WORD PTR [rcx]
   14002267f:	add    rcx,rdx
   140022682:	lea    eax,[r8-0x41]
   140022686:	cmp    ax,0x19
   14002268a:	jbe    0x140022698
   14002268c:	sub    r8w,0x61
   140022691:	cmp    r8w,0x19
   140022696:	ja     0x14002269d
   140022698:	inc    r9d
   14002269b:	jmp    0x14002267b
   14002269d:	mov    edx,r9d
   1400226a0:	xor    r8d,r8d
   1400226a3:	mov    DWORD PTR [rbx+0x14],edx
   1400226a6:	lea    rcx,[rip+0xe3]        # 0x140022790
   1400226ad:	lea    edx,[r8+0x3]
   1400226b1:	call   0x14000f3e8
   1400226b6:	test   DWORD PTR [rbx+0x10],0x100
   1400226bd:	je     0x1400226ce
   1400226bf:	test   DWORD PTR [rbx+0x10],0x200
   1400226c6:	je     0x1400226ce
   1400226c8:	test   BYTE PTR [rbx+0x10],0x7
   1400226cc:	jne    0x1400226d2
   1400226ce:	and    DWORD PTR [rbx+0x10],0x0
   1400226d2:	add    rsp,0x20
   1400226d6:	pop    rbx
   1400226d7:	ret    
   1400226d8:	rex push rbx
   1400226da:	sub    rsp,0x20
   1400226de:	mov    rbx,rcx
   1400226e1:	mov    rcx,QWORD PTR [rcx]
   1400226e4:	call   0x14000f9a0
   1400226e9:	xor    edx,edx
   1400226eb:	cmp    rax,0x3
   1400226ef:	sete   dl
   1400226f2:	mov    DWORD PTR [rbx+0x18],edx
   1400226f5:	test   edx,edx
   1400226f7:	je     0x140022700
   1400226f9:	mov    edx,0x2
   1400226fe:	jmp    0x140022739
   140022700:	mov    rcx,QWORD PTR [rbx]
   140022703:	xor    r9d,r9d
   140022706:	test   rcx,rcx
   140022709:	jne    0x14002270f
   14002270b:	xor    edx,edx
   14002270d:	jmp    0x140022739
   14002270f:	mov    edx,0x2
   140022714:	movzx  r8d,WORD PTR [rcx]
   140022718:	add    rcx,rdx
   14002271b:	lea    eax,[r8-0x41]
   14002271f:	cmp    ax,0x19
   140022723:	jbe    0x140022731
   140022725:	sub    r8w,0x61
   14002272a:	cmp    r8w,0x19
   14002272f:	ja     0x140022736
   140022731:	inc    r9d
   140022734:	jmp    0x140022714
   140022736:	mov    edx,r9d
   140022739:	xor    r8d,r8d
   14002273c:	mov    DWORD PTR [rbx+0x14],edx
   14002273f:	lea    rcx,[rip+0x3d6]        # 0x140022b1c
   140022746:	lea    edx,[r8+0x3]
   14002274a:	call   0x14000f3e8
   14002274f:	test   BYTE PTR [rbx+0x10],0x4
   140022753:	jne    0x140022759
   140022755:	and    DWORD PTR [rbx+0x10],0x0
   140022759:	add    rsp,0x20
   14002275d:	pop    rbx
   14002275e:	ret    
   14002275f:	int3   
   140022760:	xor    edx,edx
   140022762:	test   rcx,rcx
   140022765:	jne    0x14002276a
   140022767:	xor    eax,eax
   140022769:	ret    
   14002276a:	movzx  r8d,WORD PTR [rcx]
   14002276e:	add    rcx,0x2
   140022772:	lea    eax,[r8-0x41]
   140022776:	cmp    ax,0x19
   14002277a:	jbe    0x140022788
   14002277c:	sub    r8w,0x61
   140022781:	cmp    r8w,0x19
   140022786:	ja     0x14002278c
   140022788:	inc    edx
   14002278a:	jmp    0x14002276a
   14002278c:	mov    eax,edx
   14002278e:	ret    
   14002278f:	int3   
   140022790:	mov    QWORD PTR [rsp+0x10],rbx
   140022795:	mov    QWORD PTR [rsp+0x18],rbp
   14002279a:	push   rsi
   14002279b:	push   rdi
   14002279c:	push   r14
   14002279e:	sub    rsp,0xc0
   1400227a5:	mov    rax,QWORD PTR [rip+0x14294]        # 0x140036a40
   1400227ac:	xor    rax,rsp
   1400227af:	mov    QWORD PTR [rsp+0xb0],rax
   1400227b7:	mov    rdi,rcx
   1400227ba:	call   0x14000b18c
   1400227bf:	mov    esi,0x40
   1400227c4:	lea    rbx,[rax+0x140]
   1400227cb:	lea    r8,[rsp+0x30]
   1400227d0:	mov    r9d,esi
   1400227d3:	mov    ecx,DWORD PTR [rbx+0x1c]
   1400227d6:	neg    ecx
   1400227d8:	mov    rcx,rdi
   1400227db:	sbb    edx,edx
   1400227dd:	and    edx,0xfffff005
   1400227e3:	add    edx,0x1002
   1400227e9:	call   0x14000f4a8
   1400227ee:	xor    ebp,ebp
   1400227f0:	test   eax,eax
   1400227f2:	jne    0x140022801
   1400227f4:	mov    DWORD PTR [rbx+0x10],ebp
   1400227f7:	mov    eax,0x1
   1400227fc:	jmp    0x140022a75
   140022801:	mov    rcx,QWORD PTR [rbx+0x8]
   140022805:	lea    rdx,[rsp+0x30]
   14002280a:	call   0x14002457c
   14002280f:	mov    r14d,0x55
   140022815:	test   eax,eax
   140022817:	jne    0x140022912
   14002281d:	mov    eax,DWORD PTR [rbx+0x18]
   140022820:	lea    r8,[rsp+0x30]
   140022825:	mov    r9d,esi
   140022828:	neg    eax
   14002282a:	mov    rcx,rdi
   14002282d:	sbb    edx,edx
   14002282f:	and    edx,0xfffff002
   140022835:	add    edx,0x1001
   14002283b:	call   0x14000f4a8
   140022840:	test   eax,eax
   140022842:	je     0x1400227f4
   140022844:	mov    rcx,QWORD PTR [rbx]
   140022847:	lea    rdx,[rsp+0x30]
   14002284c:	call   0x14002457c
   140022851:	test   eax,eax
   140022853:	jne    0x140022887
   140022855:	or     DWORD PTR [rbx+0x10],0x304
   14002285c:	mov    rcx,rdi
   14002285f:	call   0x14000f9a0
   140022864:	lea    rcx,[rbx+0x258]
   14002286b:	mov    r8,rdi
   14002286e:	lea    r9,[rax+0x1]
   140022872:	mov    edx,r14d
   140022875:	call   0x14000f9bc
   14002287a:	test   eax,eax
   14002287c:	je     0x140022912
   140022882:	jmp    0x140022a9d
   140022887:	test   BYTE PTR [rbx+0x10],0x2
   14002288b:	jne    0x140022912
   140022891:	cmp    DWORD PTR [rbx+0x14],ebp
   140022894:	je     0x1400228d6
   140022896:	movsxd r8,DWORD PTR [rbx+0x14]
   14002289a:	mov    rcx,QWORD PTR [rbx]
   14002289d:	lea    rdx,[rsp+0x30]
   1400228a2:	call   0x1400246f0
   1400228a7:	test   eax,eax
   1400228a9:	jne    0x1400228d6
   1400228ab:	or     DWORD PTR [rbx+0x10],0x2
   1400228af:	mov    rcx,rdi
   1400228b2:	call   0x14000f9a0
   1400228b7:	lea    rcx,[rbx+0x258]
   1400228be:	mov    r8,rdi
   1400228c1:	lea    r9,[rax+0x1]
   1400228c5:	mov    rdx,r14
   1400228c8:	call   0x14000f9bc
   1400228cd:	test   eax,eax
   1400228cf:	je     0x140022912
   1400228d1:	jmp    0x140022ab2
   1400228d6:	test   BYTE PTR [rbx+0x10],0x1
   1400228da:	jne    0x140022912
   1400228dc:	mov    rcx,rdi
   1400228df:	call   0x140022cb0
   1400228e4:	test   eax,eax
   1400228e6:	je     0x140022912
   1400228e8:	or     DWORD PTR [rbx+0x10],0x1
   1400228ec:	mov    rcx,rdi
   1400228ef:	call   0x14000f9a0
   1400228f4:	lea    rcx,[rbx+0x258]
   1400228fb:	mov    r8,rdi
   1400228fe:	lea    r9,[rax+0x1]
   140022902:	mov    rdx,r14
   140022905:	call   0x14000f9bc
   14002290a:	test   eax,eax
   14002290c:	jne    0x140022ac7
   140022912:	mov    eax,DWORD PTR [rbx+0x10]
   140022915:	mov    ecx,0x300
   14002291a:	and    eax,ecx
   14002291c:	cmp    eax,ecx
   14002291e:	je     0x140022a6a
   140022924:	mov    eax,DWORD PTR [rbx+0x18]
   140022927:	lea    r8,[rsp+0x30]
   14002292c:	mov    r9d,0x80
   140022932:	neg    eax
   140022934:	mov    rcx,rdi
   140022937:	sbb    edx,edx
   140022939:	and    edx,0xfffff002
   14002293f:	add    edx,0x1001
   140022945:	call   0x14000f4a8
   14002294a:	test   eax,eax
   14002294c:	je     0x1400227f4
   140022952:	mov    rcx,QWORD PTR [rbx]
   140022955:	lea    rdx,[rsp+0x30]
   14002295a:	call   0x14002457c
   14002295f:	test   eax,eax
   140022961:	jne    0x140022a6a
   140022967:	bts    DWORD PTR [rbx+0x10],0x9
   14002296c:	cmp    DWORD PTR [rbx+0x18],ebp
   14002296f:	je     0x1400229ad
   140022971:	bts    DWORD PTR [rbx+0x10],0x8
   140022976:	lea    rsi,[rbx+0x258]
   14002297d:	cmp    WORD PTR [rsi],bp
   140022980:	jne    0x140022a6a
   140022986:	mov    rcx,rdi
   140022989:	call   0x14000f9a0
   14002298e:	mov    r8,rdi
   140022991:	mov    rdx,r14
   140022994:	lea    r9,[rax+0x1]
   140022998:	mov    rcx,rsi
   14002299b:	call   0x14000f9bc
   1400229a0:	test   eax,eax
   1400229a2:	je     0x140022a6a
   1400229a8:	jmp    0x140022adc
   1400229ad:	cmp    DWORD PTR [rbx+0x14],ebp
   1400229b0:	je     0x140022a37
   1400229b6:	mov    rcx,QWORD PTR [rbx]
   1400229b9:	call   0x14000f9a0
   1400229be:	cmp    eax,DWORD PTR [rbx+0x14]
   1400229c1:	jne    0x140022a37
   1400229c3:	mov    rcx,rdi
   1400229c6:	call   0x140022cb0
   1400229cb:	test   eax,eax
   1400229cd:	jne    0x140022a03
   1400229cf:	mov    rcx,QWORD PTR [rbx]
   1400229d2:	mov    esi,ebp
   1400229d4:	test   rcx,rcx
   1400229d7:	je     0x1400229f7
   1400229d9:	movzx  edx,WORD PTR [rcx]
   1400229dc:	add    rcx,0x2
   1400229e0:	lea    eax,[rdx-0x41]
   1400229e3:	cmp    ax,0x19
   1400229e7:	jbe    0x1400229f3
   1400229e9:	sub    dx,0x61
   1400229ed:	cmp    dx,0x19
   1400229f1:	ja     0x1400229f7
   1400229f3:	inc    esi
   1400229f5:	jmp    0x1400229d9
   1400229f7:	mov    rcx,QWORD PTR [rbx]
   1400229fa:	call   0x14000f9a0
   1400229ff:	cmp    esi,eax
   140022a01:	je     0x140022a6a
   140022a03:	bts    DWORD PTR [rbx+0x10],0x8
   140022a08:	lea    rsi,[rbx+0x258]
   140022a0f:	cmp    WORD PTR [rsi],bp
   140022a12:	jne    0x140022a6a
   140022a14:	mov    rcx,rdi
   140022a17:	call   0x14000f9a0
   140022a1c:	mov    r8,rdi
   140022a1f:	mov    rdx,r14
   140022a22:	lea    r9,[rax+0x1]
   140022a26:	mov    rcx,rsi
   140022a29:	call   0x14000f9bc
   140022a2e:	test   eax,eax
   140022a30:	je     0x140022a6a
   140022a32:	jmp    0x140022af1
   140022a37:	bts    DWORD PTR [rbx+0x10],0x8
   140022a3c:	lea    rsi,[rbx+0x258]
   140022a43:	cmp    WORD PTR [rsi],bp
   140022a46:	jne    0x140022a6a
   140022a48:	mov    rcx,rdi
   140022a4b:	call   0x14000f9a0
   140022a50:	mov    r8,rdi
   140022a53:	mov    rdx,r14
   140022a56:	lea    r9,[rax+0x1]
   140022a5a:	mov    rcx,rsi
   140022a5d:	call   0x14000f9bc
   140022a62:	test   eax,eax
   140022a64:	jne    0x140022b06
   140022a6a:	mov    eax,DWORD PTR [rbx+0x10]
   140022a6d:	shr    eax,0x2
   140022a70:	not    eax
   140022a72:	and    eax,0x1
   140022a75:	mov    rcx,QWORD PTR [rsp+0xb0]
   140022a7d:	xor    rcx,rsp
   140022a80:	call   0x14000d0a0
   140022a85:	lea    r11,[rsp+0xc0]
   140022a8d:	mov    rbx,QWORD PTR [r11+0x28]
   140022a91:	mov    rbp,QWORD PTR [r11+0x30]
   140022a95:	mov    rsp,r11
   140022a98:	pop    r14
   140022a9a:	pop    rdi
   140022a9b:	pop    rsi
   140022a9c:	ret    
   140022a9d:	xor    r9d,r9d
   140022aa0:	xor    r8d,r8d
   140022aa3:	xor    edx,edx
   140022aa5:	xor    ecx,ecx
   140022aa7:	mov    QWORD PTR [rsp+0x20],rbp
   140022aac:	call   0x140008678
   140022ab1:	int3   
   140022ab2:	xor    r9d,r9d
   140022ab5:	xor    r8d,r8d
   140022ab8:	xor    edx,edx
   140022aba:	xor    ecx,ecx
   140022abc:	mov    QWORD PTR [rsp+0x20],rbp
   140022ac1:	call   0x140008678
   140022ac6:	int3   
   140022ac7:	xor    r9d,r9d
   140022aca:	xor    r8d,r8d
   140022acd:	xor    edx,edx
   140022acf:	xor    ecx,ecx
   140022ad1:	mov    QWORD PTR [rsp+0x20],rbp
   140022ad6:	call   0x140008678
   140022adb:	int3   
   140022adc:	xor    r9d,r9d
   140022adf:	xor    r8d,r8d
   140022ae2:	xor    edx,edx
   140022ae4:	xor    ecx,ecx
   140022ae6:	mov    QWORD PTR [rsp+0x20],rbp
   140022aeb:	call   0x140008678
   140022af0:	int3   
   140022af1:	xor    r9d,r9d
   140022af4:	xor    r8d,r8d
   140022af7:	xor    edx,edx
   140022af9:	xor    ecx,ecx
   140022afb:	mov    QWORD PTR [rsp+0x20],rbp
   140022b00:	call   0x140008678
   140022b05:	int3   
   140022b06:	xor    r9d,r9d
   140022b09:	xor    r8d,r8d
   140022b0c:	xor    edx,edx
   140022b0e:	xor    ecx,ecx
   140022b10:	mov    QWORD PTR [rsp+0x20],rbp
   140022b15:	call   0x140008678
   140022b1a:	int3   
   140022b1b:	int3   
   140022b1c:	mov    QWORD PTR [rsp+0x10],rbx
   140022b21:	push   rdi
   140022b22:	sub    rsp,0x130
   140022b29:	mov    rax,QWORD PTR [rip+0x13f10]        # 0x140036a40
   140022b30:	xor    rax,rsp
   140022b33:	mov    QWORD PTR [rsp+0x120],rax
   140022b3b:	mov    rdi,rcx
   140022b3e:	call   0x14000b18c
   140022b43:	lea    r8,[rsp+0x30]
   140022b48:	lea    rbx,[rax+0x140]
   140022b4f:	mov    r9d,0x78
   140022b55:	mov    ecx,DWORD PTR [rbx+0x18]
   140022b58:	neg    ecx
   140022b5a:	mov    rcx,rdi
   140022b5d:	sbb    edx,edx
   140022b5f:	and    edx,0xfffff002
   140022b65:	add    edx,0x1001
   140022b6b:	call   0x14000f4a8
   140022b70:	test   eax,eax
   140022b72:	jne    0x140022b7e
   140022b74:	and    DWORD PTR [rbx+0x10],eax
   140022b77:	mov    eax,0x1
   140022b7c:	jmp    0x140022bc2
   140022b7e:	mov    rcx,QWORD PTR [rbx]
   140022b81:	lea    rdx,[rsp+0x30]
   140022b86:	call   0x14002457c
   140022b8b:	test   eax,eax
   140022b8d:	jne    0x140022bb7
   140022b8f:	mov    rcx,rdi
   140022b92:	call   0x14000f9a0
   140022b97:	lea    rcx,[rbx+0x258]
   140022b9e:	mov    r8,rdi
   140022ba1:	lea    r9,[rax+0x1]
   140022ba5:	mov    edx,0x55
   140022baa:	call   0x14000f9bc
   140022baf:	test   eax,eax
   140022bb1:	jne    0x140022be3
   140022bb3:	or     DWORD PTR [rbx+0x10],0x4
   140022bb7:	mov    eax,DWORD PTR [rbx+0x10]
   140022bba:	shr    eax,0x2
   140022bbd:	not    eax
   140022bbf:	and    eax,0x1
   140022bc2:	mov    rcx,QWORD PTR [rsp+0x120]
   140022bca:	xor    rcx,rsp
   140022bcd:	call   0x14000d0a0
   140022bd2:	mov    rbx,QWORD PTR [rsp+0x148]
   140022bda:	add    rsp,0x130
   140022be1:	pop    rdi
   140022be2:	ret    
   140022be3:	and    QWORD PTR [rsp+0x20],0x0
   140022be9:	xor    r9d,r9d
   140022bec:	xor    r8d,r8d
   140022bef:	xor    edx,edx
   140022bf1:	xor    ecx,ecx
   140022bf3:	call   0x140008678
   140022bf8:	int3   
   140022bf9:	int3   
   140022bfa:	int3   
   140022bfb:	int3   
   140022bfc:	mov    QWORD PTR [rsp+0x10],rbx
   140022c01:	mov    QWORD PTR [rsp+0x18],rsi
   140022c06:	push   rdi
   140022c07:	sub    rsp,0x20
   140022c0b:	xor    esi,esi
   140022c0d:	mov    rdi,rdx
   140022c10:	mov    rbx,rcx
   140022c13:	test   rcx,rcx
   140022c16:	je     0x140022c6e
   140022c18:	cmp    WORD PTR [rcx],si
   140022c1b:	je     0x140022c6e
   140022c1d:	lea    rdx,[rip+0xdddc]        # 0x140030a00
   140022c24:	call   0x1400224b8
   140022c29:	test   eax,eax
   140022c2b:	je     0x140022c6e
   140022c2d:	lea    rdx,[rip+0xddd4]        # 0x140030a08
   140022c34:	mov    rcx,rbx
   140022c37:	call   0x1400224b8
   140022c3c:	test   eax,eax
   140022c3e:	jne    0x140022c64
   140022c40:	lea    rcx,[rdi+0x258]
   140022c47:	lea    r9d,[rsi+0x2]
   140022c4b:	lea    r8,[rsp+0x30]
   140022c50:	mov    edx,0x2000000b
   140022c55:	call   0x14000f4a8
   140022c5a:	test   eax,eax
   140022c5c:	je     0x140022c8e
   140022c5e:	mov    eax,DWORD PTR [rsp+0x30]
   140022c62:	jmp    0x140022ca0
   140022c64:	mov    rcx,rbx
   140022c67:	call   0x1400244b8
   140022c6c:	jmp    0x140022ca0
   140022c6e:	lea    rcx,[rdi+0x258]
   140022c75:	lea    r8,[rsp+0x30]
   140022c7a:	mov    r9d,0x2
   140022c80:	mov    edx,0x20001004
   140022c85:	call   0x14000f4a8
   140022c8a:	test   eax,eax
   140022c8c:	jne    0x140022c92
   140022c8e:	xor    eax,eax
   140022c90:	jmp    0x140022ca0
   140022c92:	mov    eax,DWORD PTR [rsp+0x30]
   140022c96:	test   eax,eax
   140022c98:	jne    0x140022ca0
   140022c9a:	call   QWORD PTR [rip+0x4550]        # 0x1400271f0
   140022ca0:	mov    rbx,QWORD PTR [rsp+0x38]
   140022ca5:	mov    rsi,QWORD PTR [rsp+0x40]
   140022caa:	add    rsp,0x20
   140022cae:	pop    rdi
   140022caf:	ret    
   140022cb0:	mov    QWORD PTR [rsp+0x10],rbx
   140022cb5:	push   rdi
   140022cb6:	sub    rsp,0x40
   140022cba:	mov    rax,QWORD PTR [rip+0x13d7f]        # 0x140036a40
   140022cc1:	xor    rax,rsp
   140022cc4:	mov    QWORD PTR [rsp+0x38],rax
   140022cc9:	mov    r9d,0x9
   140022ccf:	lea    r8,[rsp+0x20]
   140022cd4:	mov    rdi,rcx
   140022cd7:	lea    edx,[r9+0x50]
   140022cdb:	call   0x14000f4a8
   140022ce0:	xor    ebx,ebx
   140022ce2:	test   eax,eax
   140022ce4:	je     0x140022d00
   140022ce6:	lea    rcx,[rsp+0x20]
   140022ceb:	mov    r8d,0x9
   140022cf1:	mov    rdx,rdi
   140022cf4:	call   0x140022534
   140022cf9:	test   eax,eax
   140022cfb:	sete   bl
   140022cfe:	mov    eax,ebx
   140022d00:	mov    rcx,QWORD PTR [rsp+0x38]
   140022d05:	xor    rcx,rsp
   140022d08:	call   0x14000d0a0
   140022d0d:	mov    rbx,QWORD PTR [rsp+0x58]
   140022d12:	add    rsp,0x40
   140022d16:	pop    rdi
   140022d17:	ret    
   140022d18:	mov    QWORD PTR [rsp+0x8],rbx
   140022d1d:	mov    QWORD PTR [rsp+0x10],rsi
   140022d22:	push   rdi
   140022d23:	sub    rsp,0x20
   140022d27:	mov    rsi,r8
   140022d2a:	mov    edi,edx
   140022d2c:	call   0x140022cb0
   140022d31:	xor    ebx,ebx
   140022d33:	test   eax,eax
   140022d35:	jne    0x140022d71
   140022d37:	test   edi,edi
   140022d39:	je     0x140022d71
   140022d3b:	mov    rcx,QWORD PTR [rsi]
   140022d3e:	test   rcx,rcx
   140022d41:	je     0x140022d61
   140022d43:	movzx  edx,WORD PTR [rcx]
   140022d46:	add    rcx,0x2
   140022d4a:	lea    eax,[rdx-0x41]
   140022d4d:	cmp    ax,0x19
   140022d51:	jbe    0x140022d5d
   140022d53:	sub    dx,0x61
   140022d57:	cmp    dx,0x19
   140022d5b:	ja     0x140022d61
   140022d5d:	inc    ebx
   140022d5f:	jmp    0x140022d43
   140022d61:	mov    rcx,QWORD PTR [rsi]
   140022d64:	call   0x14000f9a0
   140022d69:	cmp    ebx,eax
   140022d6b:	jne    0x140022d71
   140022d6d:	xor    eax,eax
   140022d6f:	jmp    0x140022d76
   140022d71:	mov    eax,0x1
   140022d76:	mov    rbx,QWORD PTR [rsp+0x30]
   140022d7b:	mov    rsi,QWORD PTR [rsp+0x38]
   140022d80:	add    rsp,0x20
   140022d84:	pop    rdi
   140022d85:	ret    
   140022d86:	int3   
   140022d87:	int3   
   140022d88:	mov    rax,rsp
   140022d8b:	mov    QWORD PTR [rax+0x8],rbx
   140022d8f:	mov    QWORD PTR [rax+0x10],rbp
   140022d93:	mov    QWORD PTR [rax+0x18],rsi
   140022d97:	mov    QWORD PTR [rax+0x20],rdi
   140022d9b:	push   r12
   140022d9d:	push   r14
   140022d9f:	push   r15
   140022da1:	sub    rsp,0x20
   140022da5:	xor    ebx,ebx
   140022da7:	mov    r15,r8
   140022daa:	mov    edi,edx
   140022dac:	mov    r12,rcx
   140022daf:	mov    eax,0x1
   140022db4:	mov    esi,ebx
   140022db6:	test   edx,edx
   140022db8:	js     0x140022dfb
   140022dba:	test   eax,eax
   140022dbc:	je     0x140022dfd
   140022dbe:	mov    rcx,QWORD PTR [r15]
   140022dc1:	lea    eax,[rsi+rdi*1]
   140022dc4:	cdq    
   140022dc5:	sub    eax,edx
   140022dc7:	sar    eax,1
   140022dc9:	movsxd rbp,eax
   140022dcc:	mov    r14,rbp
   140022dcf:	shl    r14,0x4
   140022dd3:	mov    rdx,QWORD PTR [r14+r12*1]
   140022dd7:	call   0x14002457c
   140022ddc:	test   eax,eax
   140022dde:	jne    0x140022ded
   140022de0:	lea    rcx,[r12+0x8]
   140022de5:	add    rcx,r14
   140022de8:	mov    QWORD PTR [r15],rcx
   140022deb:	jmp    0x140022df7
   140022ded:	jns    0x140022df4
   140022def:	lea    edi,[rbp-0x1]
   140022df2:	jmp    0x140022df7
   140022df4:	lea    esi,[rbp+0x1]
   140022df7:	cmp    esi,edi
   140022df9:	jle    0x140022dba
   140022dfb:	test   eax,eax
   140022dfd:	mov    rbp,QWORD PTR [rsp+0x48]
   140022e02:	mov    rsi,QWORD PTR [rsp+0x50]
   140022e07:	mov    rdi,QWORD PTR [rsp+0x58]
   140022e0c:	sete   bl
   140022e0f:	mov    eax,ebx
   140022e11:	mov    rbx,QWORD PTR [rsp+0x40]
   140022e16:	add    rsp,0x20
   140022e1a:	pop    r15
   140022e1c:	pop    r14
   140022e1e:	pop    r12
   140022e20:	ret    
   140022e21:	int3   
   140022e22:	int3   
   140022e23:	int3   
   140022e24:	rex push rbx
   140022e26:	push   rbp
   140022e27:	push   rsi
   140022e28:	push   rdi
   140022e29:	push   r12
   140022e2b:	push   r14
   140022e2d:	push   r15
   140022e2f:	sub    rsp,0xf0
   140022e36:	mov    rax,QWORD PTR [rip+0x13c03]        # 0x140036a40
   140022e3d:	xor    rax,rsp
   140022e40:	mov    QWORD PTR [rsp+0xe0],rax
   140022e48:	mov    rbp,r8
   140022e4b:	mov    rsi,rdx
   140022e4e:	mov    r14,rcx
   140022e51:	call   0x14000b18c
   140022e56:	xor    r12d,r12d
   140022e59:	lea    rbx,[rax+0x140]
   140022e60:	lea    rax,[r14+0x80]
   140022e67:	lea    r15,[rbx+0x258]
   140022e6e:	lea    rdi,[rbx+0x8]
   140022e72:	mov    DWORD PTR [rbx+0x10],r12d
   140022e76:	mov    WORD PTR [r15],r12w
   140022e7a:	mov    QWORD PTR [rdi],rax
   140022e7d:	mov    QWORD PTR [rbx],r14
   140022e80:	cmp    WORD PTR [rax],r12w
   140022e84:	je     0x140022e9a
   140022e86:	lea    edx,[r12+0x16]
   140022e8b:	lea    rcx,[rip+0xd80e]        # 0x1400306a0
   140022e92:	mov    r8,rdi
   140022e95:	call   0x140022d88
   140022e9a:	mov    rax,QWORD PTR [rbx]
   140022e9d:	cmp    WORD PTR [rax],r12w
   140022ea1:	je     0x140023019
   140022ea7:	mov    rax,QWORD PTR [rdi]
   140022eaa:	mov    rcx,rbx
   140022ead:	cmp    WORD PTR [rax],r12w
   140022eb1:	je     0x140022eba
   140022eb3:	call   0x140022628
   140022eb8:	jmp    0x140022ebf
   140022eba:	call   0x1400226d8
   140022ebf:	cmp    DWORD PTR [rbx+0x10],r12d
   140022ec3:	jne    0x140022efc
   140022ec5:	lea    rcx,[rip+0xcba4]        # 0x14002fa70
   140022ecc:	mov    r8,rbx
   140022ecf:	mov    edx,0x40
   140022ed4:	call   0x140022d88
   140022ed9:	test   eax,eax
   140022edb:	je     0x140022ef2
   140022edd:	mov    rax,QWORD PTR [rdi]
   140022ee0:	mov    rcx,rbx
   140022ee3:	cmp    WORD PTR [rax],r12w
   140022ee7:	je     0x14002300f
   140022eed:	call   0x140022628
   140022ef2:	cmp    DWORD PTR [rbx+0x10],r12d
   140022ef6:	je     0x140023062
   140022efc:	lea    rcx,[r14+0x100]
   140022f03:	mov    rdx,rbx
   140022f06:	call   0x140022bfc
   140022f0b:	mov    ebx,eax
   140022f0d:	test   eax,eax
   140022f0f:	je     0x140023062
   140022f15:	lea    ecx,[rax-0xfde8]
   140022f1b:	cmp    ecx,0x1
   140022f1e:	jbe    0x140023062
   140022f24:	movzx  ecx,ax
   140022f27:	call   QWORD PTR [rip+0x42bb]        # 0x1400271e8
   140022f2d:	test   eax,eax
   140022f2f:	je     0x140023062
   140022f35:	test   rsi,rsi
   140022f38:	je     0x140022f3c
   140022f3a:	mov    DWORD PTR [rsi],ebx
   140022f3c:	test   rbp,rbp
   140022f3f:	je     0x140023008
   140022f45:	lea    rsi,[rbp+0x120]
   140022f4c:	mov    rcx,r15
   140022f4f:	mov    WORD PTR [rsi],r12w
   140022f53:	call   0x14000f9a0
   140022f58:	mov    r8,r15
   140022f5b:	lea    r9,[rax+0x1]
   140022f5f:	mov    edx,0x55
   140022f64:	mov    rcx,rsi
   140022f67:	call   0x14000f9bc
   140022f6c:	test   eax,eax
   140022f6e:	jne    0x14002309b
   140022f74:	lea    r9d,[rax+0x40]
   140022f78:	mov    r8,rbp
   140022f7b:	mov    edx,0x1001
   140022f80:	mov    rcx,rsi
   140022f83:	call   0x14000f4a8
   140022f88:	test   eax,eax
   140022f8a:	je     0x140023062
   140022f90:	lea    rdi,[rbp+0x80]
   140022f97:	mov    r9d,0x40
   140022f9d:	mov    edx,0x1002
   140022fa2:	mov    r8,rdi
   140022fa5:	mov    rcx,rsi
   140022fa8:	call   0x14000f4a8
   140022fad:	test   eax,eax
   140022faf:	je     0x140023062
   140022fb5:	mov    edx,0x5f
   140022fba:	mov    rcx,rdi
   140022fbd:	call   0x1400244f0
   140022fc2:	test   rax,rax
   140022fc5:	jne    0x140022fd7
   140022fc7:	lea    edx,[rax+0x2e]
   140022fca:	mov    rcx,rdi
   140022fcd:	call   0x1400244f0
   140022fd2:	test   rax,rax
   140022fd5:	je     0x140022ff0
   140022fd7:	mov    r9d,0x40
   140022fdd:	mov    r8,rdi
   140022fe0:	mov    rcx,rsi
   140022fe3:	lea    edx,[r9-0x39]
   140022fe7:	call   0x14000f4a8
   140022fec:	test   eax,eax
   140022fee:	je     0x140023062
   140022ff0:	mov    r9d,0xa
   140022ff6:	lea    rdx,[rbp+0x100]
   140022ffd:	mov    ecx,ebx
   140022fff:	lea    r8d,[r9+0x6]
   140023003:	call   0x1400241e8
   140023008:	mov    eax,0x1
   14002300d:	jmp    0x140023064
   14002300f:	call   0x1400226d8
   140023014:	jmp    0x140022ef2
   140023019:	or     DWORD PTR [rbx+0x10],0x104
   140023020:	lea    rcx,[rsp+0x30]
   140023025:	mov    edx,0x55
   14002302a:	call   0x14000f570
   14002302f:	cmp    eax,0x1
   140023032:	jle    0x140022ef2
   140023038:	lea    rcx,[rsp+0x30]
   14002303d:	call   0x14000f9a0
   140023042:	lea    r8,[rsp+0x30]
   140023047:	mov    edx,0x55
   14002304c:	lea    r9,[rax+0x1]
   140023050:	mov    rcx,r15
   140023053:	call   0x14000f9bc
   140023058:	test   eax,eax
   14002305a:	je     0x140022ef2
   140023060:	jmp    0x140023086
   140023062:	xor    eax,eax
   140023064:	mov    rcx,QWORD PTR [rsp+0xe0]
   14002306c:	xor    rcx,rsp
   14002306f:	call   0x14000d0a0
   140023074:	add    rsp,0xf0
   14002307b:	pop    r15
   14002307d:	pop    r14
   14002307f:	pop    r12
   140023081:	pop    rdi
   140023082:	pop    rsi
   140023083:	pop    rbp
   140023084:	pop    rbx
   140023085:	ret    
   140023086:	xor    r9d,r9d
   140023089:	xor    r8d,r8d
   14002308c:	xor    edx,edx
   14002308e:	xor    ecx,ecx
   140023090:	mov    QWORD PTR [rsp+0x20],r12
   140023095:	call   0x140008678
   14002309a:	int3   
   14002309b:	xor    r9d,r9d
   14002309e:	xor    r8d,r8d
   1400230a1:	xor    edx,edx
   1400230a3:	xor    ecx,ecx
   1400230a5:	mov    QWORD PTR [rsp+0x20],r12
   1400230aa:	call   0x140008678
   1400230af:	int3   
   1400230b0:	mov    QWORD PTR [rsp+0x10],rbx
   1400230b5:	mov    QWORD PTR [rsp+0x18],rbp
   1400230ba:	mov    QWORD PTR [rsp+0x20],rsi
   1400230bf:	push   rdi
   1400230c0:	sub    rsp,0x120
   1400230c7:	mov    rax,QWORD PTR [rip+0x13972]        # 0x140036a40
   1400230ce:	xor    rax,rsp
   1400230d1:	mov    QWORD PTR [rsp+0x110],rax
   1400230d9:	mov    rbx,rcx
   1400230dc:	call   0x14000b18c
   1400230e1:	mov    rbp,rax
   1400230e4:	call   0x14000b18c
   1400230e9:	mov    rcx,rbx
   1400230ec:	mov    rdi,QWORD PTR [rax+0x470]
   1400230f3:	call   0x1400236b4
   1400230f8:	mov    ecx,DWORD PTR [rbp+0x15c]
   1400230fe:	neg    ecx
   140023100:	lea    r8,[rsp+0x20]
   140023105:	mov    r9d,0xf0
   14002310b:	sbb    edx,edx
   14002310d:	mov    ecx,eax
   14002310f:	mov    esi,eax
   140023111:	and    edx,0xfffff005
   140023117:	add    edx,0x1002
   14002311d:	call   QWORD PTR [rip+0x4155]        # 0x140027278
   140023123:	xor    ebx,ebx
   140023125:	test   eax,eax
   140023127:	jne    0x140023130
   140023129:	mov    DWORD PTR [rdi],ebx
   14002312b:	lea    eax,[rbx+0x1]
   14002312e:	jmp    0x140023173
   140023130:	mov    rcx,QWORD PTR [rbp+0x148]
   140023137:	lea    rdx,[rsp+0x20]
   14002313c:	call   0x14002457c
   140023141:	test   eax,eax
   140023143:	jne    0x140023169
   140023145:	lea    rcx,[rip+0xd8c4]        # 0x140030a10
   14002314c:	cmp    si,WORD PTR [rcx]
   14002314f:	je     0x140023169
   140023151:	inc    ebx
   140023153:	add    rcx,0x2
   140023157:	movsxd rax,ebx
   14002315a:	cmp    rax,0xa
   14002315e:	jb     0x14002314c
   140023160:	or     DWORD PTR [rdi],0x4
   140023163:	mov    DWORD PTR [rdi+0x8],esi
   140023166:	mov    DWORD PTR [rdi+0x4],esi
   140023169:	mov    eax,DWORD PTR [rdi]
   14002316b:	shr    eax,0x2
   14002316e:	not    eax
   140023170:	and    eax,0x1
   140023173:	mov    rcx,QWORD PTR [rsp+0x110]
   14002317b:	xor    rcx,rsp
   14002317e:	call   0x14000d0a0
   140023183:	lea    r11,[rsp+0x120]
   14002318b:	mov    rbx,QWORD PTR [r11+0x18]
   14002318f:	mov    rbp,QWORD PTR [r11+0x20]
   140023193:	mov    rsi,QWORD PTR [r11+0x28]
   140023197:	mov    rsp,r11
   14002319a:	pop    rdi
   14002319b:	ret    
   14002319c:	mov    QWORD PTR [rsp+0x8],rbx
   1400231a1:	push   rdi
   1400231a2:	sub    rsp,0x20
   1400231a6:	mov    rdi,rcx
   1400231a9:	call   0x14000b18c
   1400231ae:	mov    rcx,QWORD PTR [rax+0x148]
   1400231b5:	mov    rbx,rax
   1400231b8:	call   0x14000f9a0
   1400231bd:	xor    edx,edx
   1400231bf:	lea    rcx,[rip+0xfffffffffffffeea]        # 0x1400230b0
   1400231c6:	cmp    rax,0x3
   1400231ca:	sete   dl
   1400231cd:	mov    DWORD PTR [rbx+0x15c],edx
   1400231d3:	mov    edx,0x1
   1400231d8:	call   QWORD PTR [rip+0x40b2]        # 0x140027290
   1400231de:	test   BYTE PTR [rdi],0x4
   1400231e1:	jne    0x1400231e6
   1400231e3:	and    DWORD PTR [rdi],0x0
   1400231e6:	mov    rbx,QWORD PTR [rsp+0x30]
   1400231eb:	add    rsp,0x20
   1400231ef:	pop    rdi
   1400231f0:	ret    
   1400231f1:	int3   
   1400231f2:	int3   
   1400231f3:	int3   
   1400231f4:	rex push rbx
   1400231f6:	sub    rsp,0x20
   1400231fa:	or     DWORD PTR [rcx],0x104
   140023200:	mov    rbx,rcx
   140023203:	call   QWORD PTR [rip+0x407f]        # 0x140027288
   140023209:	mov    DWORD PTR [rbx+0x8],eax
   14002320c:	mov    DWORD PTR [rbx+0x4],eax
   14002320f:	add    rsp,0x20
   140023213:	pop    rbx
   140023214:	ret    
   140023215:	int3   
   140023216:	int3   
   140023217:	int3   
   140023218:	mov    QWORD PTR [rsp+0x8],rbx
   14002321d:	push   rdi
   14002321e:	sub    rsp,0x20
   140023222:	mov    rdi,rcx
   140023225:	call   0x14000b18c
   14002322a:	lea    rbx,[rax+0x140]
   140023231:	mov    rcx,QWORD PTR [rbx]
   140023234:	call   0x14000f9a0
   140023239:	mov    rcx,QWORD PTR [rbx+0x8]
   14002323d:	xor    edx,edx
   14002323f:	cmp    rax,0x3
   140023243:	sete   dl
   140023246:	mov    DWORD PTR [rbx+0x18],edx
   140023249:	call   0x14000f9a0
   14002324e:	xor    ecx,ecx
   140023250:	cmp    rax,0x3
   140023254:	mov    edx,0x2
   140023259:	sete   cl
   14002325c:	mov    DWORD PTR [rbx+0x1c],ecx
   14002325f:	and    DWORD PTR [rdi+0x4],0x0
   140023263:	cmp    DWORD PTR [rbx+0x18],0x0
   140023267:	jne    0x140023294
   140023269:	mov    rcx,QWORD PTR [rbx]
   14002326c:	xor    r9d,r9d
   14002326f:	movzx  r8d,WORD PTR [rcx]
   140023273:	add    rcx,rdx
   140023276:	lea    eax,[r8-0x41]
   14002327a:	cmp    ax,0x19
   14002327e:	jbe    0x14002328c
   140023280:	sub    r8w,0x61
   140023285:	cmp    r8w,0x19
   14002328a:	ja     0x140023291
   14002328c:	inc    r9d
   14002328f:	jmp    0x14002326f
   140023291:	mov    edx,r9d
   140023294:	mov    DWORD PTR [rbx+0x14],edx
   140023297:	lea    rcx,[rip+0xea]        # 0x140023388
   14002329e:	mov    edx,0x1
   1400232a3:	call   QWORD PTR [rip+0x3fe7]        # 0x140027290
   1400232a9:	test   DWORD PTR [rdi],0x100
   1400232af:	je     0x1400232be
   1400232b1:	test   DWORD PTR [rdi],0x200
   1400232b7:	je     0x1400232be
   1400232b9:	test   BYTE PTR [rdi],0x7
   1400232bc:	jne    0x1400232c1
   1400232be:	and    DWORD PTR [rdi],0x0
   1400232c1:	mov    rbx,QWORD PTR [rsp+0x30]
   1400232c6:	add    rsp,0x20
   1400232ca:	pop    rdi
   1400232cb:	ret    
   1400232cc:	mov    QWORD PTR [rsp+0x8],rbx
   1400232d1:	push   rdi
   1400232d2:	sub    rsp,0x20
   1400232d6:	mov    rdi,rcx
   1400232d9:	call   0x14000b18c
   1400232de:	mov    rcx,QWORD PTR [rax+0x140]
   1400232e5:	mov    rbx,rax
   1400232e8:	call   0x14000f9a0
   1400232ed:	xor    edx,edx
   1400232ef:	mov    ecx,0x2
   1400232f4:	cmp    rax,0x3
   1400232f8:	sete   dl
   1400232fb:	mov    DWORD PTR [rbx+0x158],edx
   140023301:	test   edx,edx
   140023303:	jne    0x140023334
   140023305:	mov    rdx,QWORD PTR [rbx+0x140]
   14002330c:	xor    r9d,r9d
   14002330f:	movzx  r8d,WORD PTR [rdx]
   140023313:	add    rdx,rcx
   140023316:	lea    eax,[r8-0x41]
   14002331a:	cmp    ax,0x19
   14002331e:	jbe    0x14002332c
   140023320:	sub    r8w,0x61
   140023325:	cmp    r8w,0x19
   14002332a:	ja     0x140023331
   14002332c:	inc    r9d
   14002332f:	jmp    0x14002330f
   140023331:	mov    ecx,r9d
   140023334:	mov    DWORD PTR [rbx+0x154],ecx
   14002333a:	lea    rcx,[rip+0x277]        # 0x1400235b8
   140023341:	mov    edx,0x1
   140023346:	call   QWORD PTR [rip+0x3f44]        # 0x140027290
   14002334c:	test   BYTE PTR [rdi],0x4
   14002334f:	jne    0x140023354
   140023351:	and    DWORD PTR [rdi],0x0
   140023354:	mov    rbx,QWORD PTR [rsp+0x30]
   140023359:	add    rsp,0x20
   14002335d:	pop    rdi
   14002335e:	ret    
   14002335f:	int3   
   140023360:	xor    r8d,r8d
   140023363:	movzx  edx,WORD PTR [rcx]
   140023366:	add    rcx,0x2
   14002336a:	lea    eax,[rdx-0x41]
   14002336d:	cmp    ax,0x19
   140023371:	jbe    0x14002337d
   140023373:	sub    dx,0x61
   140023377:	cmp    dx,0x19
   14002337b:	ja     0x140023382
   14002337d:	inc    r8d
   140023380:	jmp    0x140023363
   140023382:	mov    eax,r8d
   140023385:	ret    
   140023386:	int3   
   140023387:	int3   
   140023388:	mov    QWORD PTR [rsp+0x10],rbx
   14002338d:	mov    QWORD PTR [rsp+0x18],rsi
   140023392:	mov    QWORD PTR [rsp+0x20],rdi
   140023397:	push   r14
   140023399:	sub    rsp,0x120
   1400233a0:	mov    rax,QWORD PTR [rip+0x13699]        # 0x140036a40
   1400233a7:	xor    rax,rsp
   1400233aa:	mov    QWORD PTR [rsp+0x110],rax
   1400233b2:	mov    rbx,rcx
   1400233b5:	call   0x14000b18c
   1400233ba:	lea    rsi,[rax+0x140]
   1400233c1:	call   0x14000b18c
   1400233c6:	mov    rcx,rbx
   1400233c9:	mov    rdi,QWORD PTR [rax+0x470]
   1400233d0:	call   0x1400236b4
   1400233d5:	mov    ecx,DWORD PTR [rsi+0x1c]
   1400233d8:	neg    ecx
   1400233da:	lea    r8,[rsp+0x20]
   1400233df:	mov    r9d,0xf0
   1400233e5:	sbb    edx,edx
   1400233e7:	mov    ecx,eax
   1400233e9:	mov    ebx,eax
   1400233eb:	and    edx,0xfffff005
   1400233f1:	add    edx,0x1002
   1400233f7:	call   QWORD PTR [rip+0x3e7b]        # 0x140027278
   1400233fd:	xor    r14d,r14d
   140023400:	test   eax,eax
   140023402:	jne    0x140023411
   140023404:	mov    DWORD PTR [rdi],r14d
   140023407:	mov    eax,0x1
   14002340c:	jmp    0x14002358b
   140023411:	mov    rcx,QWORD PTR [rsi+0x8]
   140023415:	lea    rdx,[rsp+0x20]
   14002341a:	call   0x14002457c
   14002341f:	test   eax,eax
   140023421:	jne    0x1400234d3
   140023427:	mov    eax,DWORD PTR [rsi+0x18]
   14002342a:	lea    r8,[rsp+0x20]
   14002342f:	mov    r9d,0xf0
   140023435:	neg    eax
   140023437:	mov    ecx,ebx
   140023439:	sbb    edx,edx
   14002343b:	and    edx,0xfffff002
   140023441:	add    edx,0x1001
   140023447:	call   QWORD PTR [rip+0x3e2b]        # 0x140027278
   14002344d:	test   eax,eax
   14002344f:	je     0x140023404
   140023451:	mov    rcx,QWORD PTR [rsi]
   140023454:	lea    rdx,[rsp+0x20]
   140023459:	call   0x14002457c
   14002345e:	test   eax,eax
   140023460:	jne    0x14002346d
   140023462:	or     DWORD PTR [rdi],0x304
   140023468:	mov    DWORD PTR [rdi+0x4],ebx
   14002346b:	jmp    0x1400234d0
   14002346d:	test   BYTE PTR [rdi],0x2
   140023470:	jne    0x1400234d3
   140023472:	cmp    DWORD PTR [rsi+0x14],r14d
   140023476:	je     0x1400234a5
   140023478:	movsxd r8,DWORD PTR [rsi+0x14]
   14002347c:	mov    rcx,QWORD PTR [rsi]
   14002347f:	lea    rdx,[rsp+0x20]
   140023484:	call   0x1400246f0
   140023489:	test   eax,eax
   14002348b:	jne    0x1400234a5
   14002348d:	or     DWORD PTR [rdi],0x2
   140023490:	mov    DWORD PTR [rdi+0x8],ebx
   140023493:	mov    rcx,QWORD PTR [rsi]
   140023496:	call   0x14000f9a0
   14002349b:	cmp    eax,DWORD PTR [rsi+0x14]
   14002349e:	jne    0x1400234d3
   1400234a0:	mov    DWORD PTR [rdi+0x4],ebx
   1400234a3:	jmp    0x1400234d3
   1400234a5:	mov    ecx,DWORD PTR [rdi]
   1400234a7:	test   cl,0x1
   1400234aa:	jne    0x1400234d3
   1400234ac:	mov    r8d,r14d
   1400234af:	lea    rdx,[rip+0xd55a]        # 0x140030a10
   1400234b6:	cmp    bx,WORD PTR [rdx]
   1400234b9:	je     0x1400234d3
   1400234bb:	inc    r8d
   1400234be:	add    rdx,0x2
   1400234c2:	movsxd rax,r8d
   1400234c5:	cmp    rax,0xa
   1400234c9:	jb     0x1400234b6
   1400234cb:	or     ecx,0x1
   1400234ce:	mov    DWORD PTR [rdi],ecx
   1400234d0:	mov    DWORD PTR [rdi+0x8],ebx
   1400234d3:	mov    eax,DWORD PTR [rdi]
   1400234d5:	mov    ecx,0x300
   1400234da:	and    eax,ecx
   1400234dc:	cmp    eax,ecx
   1400234de:	je     0x140023581
   1400234e4:	mov    eax,DWORD PTR [rsi+0x18]
   1400234e7:	lea    r8,[rsp+0x20]
   1400234ec:	mov    r9d,0xf0
   1400234f2:	neg    eax
   1400234f4:	mov    ecx,ebx
   1400234f6:	sbb    edx,edx
   1400234f8:	and    edx,0xfffff002
   1400234fe:	add    edx,0x1001
   140023504:	call   QWORD PTR [rip+0x3d6e]        # 0x140027278
   14002350a:	test   eax,eax
   14002350c:	je     0x140023404
   140023512:	mov    rcx,QWORD PTR [rsi]
   140023515:	lea    rdx,[rsp+0x20]
   14002351a:	call   0x14002457c
   14002351f:	test   eax,eax
   140023521:	jne    0x140023547
   140023523:	bts    DWORD PTR [rdi],0x9
   140023527:	cmp    DWORD PTR [rsi+0x18],r14d
   14002352b:	jne    0x140023574
   14002352d:	cmp    DWORD PTR [rsi+0x14],r14d
   140023531:	je     0x140023574
   140023533:	mov    rcx,QWORD PTR [rsi]
   140023536:	call   0x14000f9a0
   14002353b:	cmp    eax,DWORD PTR [rsi+0x14]
   14002353e:	jne    0x140023574
   140023540:	mov    edx,0x1
   140023545:	jmp    0x140023566
   140023547:	cmp    DWORD PTR [rsi+0x18],r14d
   14002354b:	jne    0x140023581
   14002354d:	cmp    DWORD PTR [rsi+0x14],r14d
   140023551:	je     0x140023581
   140023553:	mov    rcx,QWORD PTR [rsi]
   140023556:	lea    rdx,[rsp+0x20]
   14002355b:	call   0x14002457c
   140023560:	test   eax,eax
   140023562:	jne    0x140023581
   140023564:	xor    edx,edx
   140023566:	mov    r8,rdi
   140023569:	mov    ecx,ebx
   14002356b:	call   0x1400237dc
   140023570:	test   eax,eax
   140023572:	je     0x140023581
   140023574:	bts    DWORD PTR [rdi],0x8
   140023578:	cmp    DWORD PTR [rdi+0x4],r14d
   14002357c:	jne    0x140023581
   14002357e:	mov    DWORD PTR [rdi+0x4],ebx
   140023581:	mov    eax,DWORD PTR [rdi]
   140023583:	shr    eax,0x2
   140023586:	not    eax
   140023588:	and    eax,0x1
   14002358b:	mov    rcx,QWORD PTR [rsp+0x110]
   140023593:	xor    rcx,rsp
   140023596:	call   0x14000d0a0
   14002359b:	lea    r11,[rsp+0x120]
   1400235a3:	mov    rbx,QWORD PTR [r11+0x18]
   1400235a7:	mov    rsi,QWORD PTR [r11+0x20]
   1400235ab:	mov    rdi,QWORD PTR [r11+0x28]
   1400235af:	mov    rsp,r11
   1400235b2:	pop    r14
   1400235b4:	ret    
   1400235b5:	int3   
   1400235b6:	int3   
   1400235b7:	int3   
   1400235b8:	mov    QWORD PTR [rsp+0x10],rbx
   1400235bd:	mov    QWORD PTR [rsp+0x18],rsi
   1400235c2:	push   rdi
   1400235c3:	sub    rsp,0x120
   1400235ca:	mov    rax,QWORD PTR [rip+0x1346f]        # 0x140036a40
   1400235d1:	xor    rax,rsp
   1400235d4:	mov    QWORD PTR [rsp+0x110],rax
   1400235dc:	mov    rbx,rcx
   1400235df:	call   0x14000b18c
   1400235e4:	lea    rsi,[rax+0x140]
   1400235eb:	call   0x14000b18c
   1400235f0:	mov    rcx,rbx
   1400235f3:	mov    rdi,QWORD PTR [rax+0x470]
   1400235fa:	call   0x1400236b4
   1400235ff:	mov    ecx,DWORD PTR [rsi+0x18]
   140023602:	neg    ecx
   140023604:	lea    r8,[rsp+0x20]
   140023609:	mov    r9d,0xf0
   14002360f:	sbb    edx,edx
   140023611:	mov    ecx,eax
   140023613:	mov    ebx,eax
   140023615:	and    edx,0xfffff002
   14002361b:	add    edx,0x1001
   140023621:	call   QWORD PTR [rip+0x3c51]        # 0x140027278
   140023627:	test   eax,eax
   140023629:	jne    0x140023634
   14002362b:	and    DWORD PTR [rdi],eax
   14002362d:	mov    eax,0x1
   140023632:	jmp    0x14002368f
   140023634:	mov    rcx,QWORD PTR [rsi]
   140023637:	lea    rdx,[rsp+0x20]
   14002363c:	call   0x14002457c
   140023641:	test   eax,eax
   140023643:	jne    0x14002364f
   140023645:	cmp    DWORD PTR [rsi+0x18],eax
   140023648:	jne    0x14002367c
   14002364a:	lea    edx,[rax+0x1]
   14002364d:	jmp    0x14002366e
   14002364f:	cmp    DWORD PTR [rsi+0x18],0x0
   140023653:	jne    0x140023685
   140023655:	cmp    DWORD PTR [rsi+0x14],0x0
   140023659:	je     0x140023685
   14002365b:	mov    rcx,QWORD PTR [rsi]
   14002365e:	lea    rdx,[rsp+0x20]
   140023663:	call   0x14002457c
   140023668:	test   eax,eax
   14002366a:	jne    0x140023685
   14002366c:	xor    edx,edx
   14002366e:	mov    r8,rdi
   140023671:	mov    ecx,ebx
   140023673:	call   0x1400237dc
   140023678:	test   eax,eax
   14002367a:	je     0x140023685
   14002367c:	or     DWORD PTR [rdi],0x4
   14002367f:	mov    DWORD PTR [rdi+0x4],ebx
   140023682:	mov    DWORD PTR [rdi+0x8],ebx
   140023685:	mov    eax,DWORD PTR [rdi]
   140023687:	shr    eax,0x2
   14002368a:	not    eax
   14002368c:	and    eax,0x1
   14002368f:	mov    rcx,QWORD PTR [rsp+0x110]
   140023697:	xor    rcx,rsp
   14002369a:	call   0x14000d0a0
   14002369f:	lea    r11,[rsp+0x120]
   1400236a7:	mov    rbx,QWORD PTR [r11+0x18]
   1400236ab:	mov    rsi,QWORD PTR [r11+0x20]
   1400236af:	mov    rsp,r11
   1400236b2:	pop    rdi
   1400236b3:	ret    
   1400236b4:	movzx  edx,WORD PTR [rcx]
   1400236b7:	xor    r10d,r10d
   1400236ba:	mov    r9,rcx
   1400236bd:	mov    r8d,r10d
   1400236c0:	jmp    0x1400236f9
   1400236c2:	lea    eax,[rdx-0x61]
   1400236c5:	lea    r9,[r9+0x2]
   1400236c9:	cmp    ax,0x5
   1400236cd:	ja     0x1400236d6
   1400236cf:	mov    eax,0xffd9
   1400236d4:	jmp    0x1400236e4
   1400236d6:	lea    eax,[rdx-0x41]
   1400236d9:	cmp    ax,0x5
   1400236dd:	ja     0x1400236e7
   1400236df:	mov    eax,0xfff9
   1400236e4:	add    dx,ax
   1400236e7:	shl    r8d,0x4
   1400236eb:	movzx  ecx,dx
   1400236ee:	movzx  edx,WORD PTR [r9]
   1400236f2:	add    r8d,0xffffffd0
   1400236f6:	add    r8d,ecx
   1400236f9:	test   dx,dx
   1400236fc:	jne    0x1400236c2
   1400236fe:	mov    eax,r8d
   140023701:	ret    
   140023702:	int3   
   140023703:	int3   
   140023704:	mov    QWORD PTR [rsp+0x10],rbx
   140023709:	mov    QWORD PTR [rsp+0x18],rsi
   14002370e:	push   rdi
   14002370f:	sub    rsp,0x20
   140023713:	xor    esi,esi
   140023715:	mov    rdi,rdx
   140023718:	mov    rbx,rcx
   14002371b:	test   rcx,rcx
   14002371e:	je     0x140023773
   140023720:	cmp    WORD PTR [rcx],si
   140023723:	je     0x140023773
   140023725:	lea    rdx,[rip+0xd2d4]        # 0x140030a00
   14002372c:	call   0x1400224b8
   140023731:	test   eax,eax
   140023733:	je     0x140023773
   140023735:	lea    rdx,[rip+0xd2cc]        # 0x140030a08
   14002373c:	mov    rcx,rbx
   14002373f:	call   0x1400224b8
   140023744:	test   eax,eax
   140023746:	jne    0x140023769
   140023748:	mov    ecx,DWORD PTR [rdi+0x8]
   14002374b:	lea    r9d,[rsi+0x2]
   14002374f:	lea    r8,[rsp+0x30]
   140023754:	mov    edx,0x2000000b
   140023759:	call   QWORD PTR [rip+0x3b19]        # 0x140027278
   14002375f:	test   eax,eax
   140023761:	je     0x140023790
   140023763:	mov    eax,DWORD PTR [rsp+0x30]
   140023767:	jmp    0x1400237a2
   140023769:	mov    rcx,rbx
   14002376c:	call   0x1400244b8
   140023771:	jmp    0x1400237a2
   140023773:	mov    ecx,DWORD PTR [rdi+0x8]
   140023776:	lea    r8,[rsp+0x30]
   14002377b:	mov    r9d,0x2
   140023781:	mov    edx,0x20001004
   140023786:	call   QWORD PTR [rip+0x3aec]        # 0x140027278
   14002378c:	test   eax,eax
   14002378e:	jne    0x140023794
   140023790:	xor    eax,eax
   140023792:	jmp    0x1400237a2
   140023794:	mov    eax,DWORD PTR [rsp+0x30]
   140023798:	test   eax,eax
   14002379a:	jne    0x1400237a2
   14002379c:	call   QWORD PTR [rip+0x3a4e]        # 0x1400271f0
   1400237a2:	mov    rbx,QWORD PTR [rsp+0x38]
   1400237a7:	mov    rsi,QWORD PTR [rsp+0x40]
   1400237ac:	add    rsp,0x20
   1400237b0:	pop    rdi
   1400237b1:	ret    
   1400237b2:	int3   
   1400237b3:	int3   
   1400237b4:	xor    r9d,r9d
   1400237b7:	lea    r8,[rip+0xd252]        # 0x140030a10
   1400237be:	lea    eax,[r9+0x1]
   1400237c2:	cmp    cx,WORD PTR [r8]
   1400237c6:	je     0x1400237d9
   1400237c8:	add    r9d,eax
   1400237cb:	add    r8,0x2
   1400237cf:	movsxd rdx,r9d
   1400237d2:	cmp    rdx,0xa
   1400237d6:	jb     0x1400237c2
   1400237d8:	ret    
   1400237d9:	xor    eax,eax
   1400237db:	ret    
   1400237dc:	mov    QWORD PTR [rsp+0x10],rbx
   1400237e1:	mov    QWORD PTR [rsp+0x18],rbp
   1400237e6:	mov    QWORD PTR [rsp+0x20],rsi
   1400237eb:	push   rdi
   1400237ec:	sub    rsp,0x20
   1400237f0:	mov    ebp,edx
   1400237f2:	mov    edi,ecx
   1400237f4:	call   0x14000b18c
   1400237f9:	mov    ecx,edi
   1400237fb:	lea    r8,[rsp+0x30]
   140023800:	mov    r9d,0x2
   140023806:	and    ecx,0x3ff
   14002380c:	mov    edx,0x20000001
   140023811:	mov    rsi,rax
   140023814:	bts    ecx,0xa
   140023818:	call   QWORD PTR [rip+0x3a5a]        # 0x140027278
   14002381e:	xor    ebx,ebx
   140023820:	test   eax,eax
   140023822:	jne    0x140023828
   140023824:	xor    eax,eax
   140023826:	jmp    0x14002386c
   140023828:	cmp    edi,DWORD PTR [rsp+0x30]
   14002382c:	je     0x140023867
   14002382e:	test   ebp,ebp
   140023830:	je     0x140023867
   140023832:	mov    rcx,QWORD PTR [rsi+0x140]
   140023839:	movzx  edx,WORD PTR [rcx]
   14002383c:	add    rcx,0x2
   140023840:	lea    eax,[rdx-0x41]
   140023843:	cmp    ax,0x19
   140023847:	jbe    0x140023853
   140023849:	sub    dx,0x61
   14002384d:	cmp    dx,0x19
   140023851:	ja     0x140023857
   140023853:	inc    ebx
   140023855:	jmp    0x140023839
   140023857:	mov    rcx,QWORD PTR [rsi+0x140]
   14002385e:	call   0x14000f9a0
   140023863:	cmp    ebx,eax
   140023865:	je     0x140023824
   140023867:	mov    eax,0x1
   14002386c:	mov    rbx,QWORD PTR [rsp+0x38]
   140023871:	mov    rbp,QWORD PTR [rsp+0x40]
   140023876:	mov    rsi,QWORD PTR [rsp+0x48]
   14002387b:	add    rsp,0x20
   14002387f:	pop    rdi
   140023880:	ret    
   140023881:	int3   
   140023882:	int3   
   140023883:	int3   
   140023884:	mov    rax,rsp
   140023887:	mov    QWORD PTR [rax+0x8],rbx
   14002388b:	mov    QWORD PTR [rax+0x10],rbp
   14002388f:	mov    QWORD PTR [rax+0x18],rsi
   140023893:	mov    QWORD PTR [rax+0x20],rdi
   140023897:	push   r12
   140023899:	push   r14
   14002389b:	push   r15
   14002389d:	sub    rsp,0x20
   1400238a1:	xor    ebx,ebx
   1400238a3:	mov    r15,r8
   1400238a6:	mov    edi,edx
   1400238a8:	mov    r12,rcx
   1400238ab:	mov    eax,0x1
   1400238b0:	mov    esi,ebx
   1400238b2:	test   edx,edx
   1400238b4:	js     0x1400238f7
   1400238b6:	test   eax,eax
   1400238b8:	je     0x1400238f9
   1400238ba:	mov    rcx,QWORD PTR [r15]
   1400238bd:	lea    eax,[rsi+rdi*1]
   1400238c0:	cdq    
   1400238c1:	sub    eax,edx
   1400238c3:	sar    eax,1
   1400238c5:	movsxd rbp,eax
   1400238c8:	mov    r14,rbp
   1400238cb:	shl    r14,0x4
   1400238cf:	mov    rdx,QWORD PTR [r14+r12*1]
   1400238d3:	call   0x14002457c
   1400238d8:	test   eax,eax
   1400238da:	jne    0x1400238e9
   1400238dc:	lea    rcx,[r12+0x8]
   1400238e1:	add    rcx,r14
   1400238e4:	mov    QWORD PTR [r15],rcx
   1400238e7:	jmp    0x1400238f3
   1400238e9:	jns    0x1400238f0
   1400238eb:	lea    edi,[rbp-0x1]
   1400238ee:	jmp    0x1400238f3
   1400238f0:	lea    esi,[rbp+0x1]
   1400238f3:	cmp    esi,edi
   1400238f5:	jle    0x1400238b6
   1400238f7:	test   eax,eax
   1400238f9:	mov    rbp,QWORD PTR [rsp+0x48]
   1400238fe:	mov    rsi,QWORD PTR [rsp+0x50]
   140023903:	mov    rdi,QWORD PTR [rsp+0x58]
   140023908:	sete   bl
   14002390b:	mov    eax,ebx
   14002390d:	mov    rbx,QWORD PTR [rsp+0x40]
   140023912:	add    rsp,0x20
   140023916:	pop    r15
   140023918:	pop    r14
   14002391a:	pop    r12
   14002391c:	ret    
   14002391d:	int3   
   14002391e:	int3   
   14002391f:	int3   
   140023920:	rex push rbp
   140023922:	push   rbx
   140023923:	push   rsi
   140023924:	push   rdi
   140023925:	push   r12
   140023927:	push   r14
   140023929:	push   r15
   14002392b:	mov    rbp,rsp
   14002392e:	sub    rsp,0x40
   140023932:	mov    rax,QWORD PTR [rip+0x13107]        # 0x140036a40
   140023939:	xor    rax,rsp
   14002393c:	mov    QWORD PTR [rbp-0x10],rax
   140023940:	mov    r14,r8
   140023943:	mov    r15,rdx
   140023946:	mov    rsi,rcx
   140023949:	call   0x14000b18c
   14002394e:	xor    edx,edx
   140023950:	lea    rcx,[rbp-0x20]
   140023954:	lea    r8d,[rdx+0xc]
   140023958:	mov    rdi,rax
   14002395b:	call   0x140007150
   140023960:	call   0x14000b18c
   140023965:	lea    rcx,[rbp-0x20]
   140023969:	xor    r12d,r12d
   14002396c:	mov    QWORD PTR [rax+0x470],rcx
   140023973:	test   rsi,rsi
   140023976:	jne    0x140023984
   140023978:	or     DWORD PTR [rbp-0x20],0x104
   14002397f:	jmp    0x140023a9e
   140023984:	lea    rax,[rsi+0x80]
   14002398b:	lea    rbx,[rdi+0x148]
   140023992:	mov    QWORD PTR [rdi+0x140],rsi
   140023999:	mov    QWORD PTR [rbx],rax
   14002399c:	test   rax,rax
   14002399f:	je     0x1400239be
   1400239a1:	cmp    WORD PTR [rax],r12w
   1400239a5:	je     0x1400239be
   1400239a7:	mov    edx,DWORD PTR [rip+0xd04b]        # 0x1400309f8
   1400239ad:	lea    rcx,[rip+0xccec]        # 0x1400306a0
   1400239b4:	mov    r8,rbx
   1400239b7:	dec    edx
   1400239b9:	call   0x140023884
   1400239be:	mov    DWORD PTR [rbp-0x20],r12d
   1400239c2:	mov    rax,QWORD PTR [rdi+0x140]
   1400239c9:	test   rax,rax
   1400239cc:	je     0x140023a47
   1400239ce:	cmp    WORD PTR [rax],r12w
   1400239d2:	je     0x140023a47
   1400239d4:	mov    rax,QWORD PTR [rbx]
   1400239d7:	test   rax,rax
   1400239da:	je     0x1400239ed
   1400239dc:	cmp    WORD PTR [rax],r12w
   1400239e0:	je     0x1400239ed
   1400239e2:	lea    rcx,[rbp-0x20]
   1400239e6:	call   0x140023218
   1400239eb:	jmp    0x1400239f6
   1400239ed:	lea    rcx,[rbp-0x20]
   1400239f1:	call   0x1400232cc
   1400239f6:	cmp    DWORD PTR [rbp-0x20],r12d
   1400239fa:	jne    0x140023ab4
   140023a00:	mov    edx,DWORD PTR [rip+0xcfee]        # 0x1400309f4
   140023a06:	lea    r8,[rdi+0x140]
   140023a0d:	lea    rcx,[rip+0xc05c]        # 0x14002fa70
   140023a14:	dec    edx
   140023a16:	call   0x140023884
   140023a1b:	test   eax,eax
   140023a1d:	je     0x140023aaa
   140023a23:	mov    rax,QWORD PTR [rbx]
   140023a26:	test   rax,rax
   140023a29:	je     0x140023a3c
   140023a2b:	cmp    WORD PTR [rax],r12w
   140023a2f:	je     0x140023a3c
   140023a31:	lea    rcx,[rbp-0x20]
   140023a35:	call   0x140023218
   140023a3a:	jmp    0x140023aaa
   140023a3c:	lea    rcx,[rbp-0x20]
   140023a40:	call   0x1400232cc
   140023a45:	jmp    0x140023aaa
   140023a47:	mov    rax,QWORD PTR [rbx]
   140023a4a:	test   rax,rax
   140023a4d:	je     0x140023a97
   140023a4f:	cmp    WORD PTR [rax],r12w
   140023a53:	je     0x140023a97
   140023a55:	call   0x14000b18c
   140023a5a:	mov    rbx,rax
   140023a5d:	mov    rcx,QWORD PTR [rax+0x148]
   140023a64:	call   0x14000f9a0
   140023a69:	mov    ecx,r12d
   140023a6c:	mov    edx,0x1
   140023a71:	cmp    rax,0x3
   140023a75:	sete   cl
   140023a78:	mov    DWORD PTR [rbx+0x15c],ecx
   140023a7e:	lea    rcx,[rip+0xfffffffffffff62b]        # 0x1400230b0
   140023a85:	call   QWORD PTR [rip+0x3805]        # 0x140027290
   140023a8b:	test   BYTE PTR [rbp-0x20],0x4
   140023a8f:	jne    0x140023aaa
   140023a91:	mov    DWORD PTR [rbp-0x20],r12d
   140023a95:	jmp    0x140023aaa
   140023a97:	mov    DWORD PTR [rbp-0x20],0x104
   140023a9e:	call   QWORD PTR [rip+0x37e4]        # 0x140027288
   140023aa4:	mov    DWORD PTR [rbp-0x1c],eax
   140023aa7:	mov    DWORD PTR [rbp-0x18],eax
   140023aaa:	cmp    DWORD PTR [rbp-0x20],r12d
   140023aae:	je     0x140023b99
   140023ab4:	lea    rax,[rsi+0x100]
   140023abb:	neg    rsi
   140023abe:	lea    rdx,[rbp-0x20]
   140023ac2:	sbb    rcx,rcx
   140023ac5:	and    rcx,rax
   140023ac8:	call   0x140023704
   140023acd:	mov    ebx,eax
   140023acf:	test   eax,eax
   140023ad1:	je     0x140023b99
   140023ad7:	lea    ecx,[rax-0xfde8]
   140023add:	cmp    ecx,0x1
   140023ae0:	jbe    0x140023b99
   140023ae6:	movzx  ecx,ax
   140023ae9:	call   QWORD PTR [rip+0x36f9]        # 0x1400271e8
   140023aef:	test   eax,eax
   140023af1:	je     0x140023b99
   140023af7:	mov    ecx,DWORD PTR [rbp-0x1c]
   140023afa:	mov    edx,0x1
   140023aff:	call   QWORD PTR [rip+0x377b]        # 0x140027280
   140023b05:	test   eax,eax
   140023b07:	je     0x140023b99
   140023b0d:	test   r15,r15
   140023b10:	je     0x140023b15
   140023b12:	mov    DWORD PTR [r15],ebx
   140023b15:	mov    ecx,DWORD PTR [rbp-0x1c]
   140023b18:	lea    rdx,[rdi+0x398]
   140023b1f:	mov    edi,0x55
   140023b24:	mov    r8d,edi
   140023b27:	call   0x14000f2f8
   140023b2c:	test   r14,r14
   140023b2f:	je     0x140023b92
   140023b31:	mov    ecx,DWORD PTR [rbp-0x1c]
   140023b34:	lea    rdx,[r14+0x120]
   140023b3b:	mov    r8d,edi
   140023b3e:	call   0x14000f2f8
   140023b43:	mov    ecx,DWORD PTR [rbp-0x1c]
   140023b46:	mov    edi,0x40
   140023b4b:	mov    r9d,edi
   140023b4e:	mov    r8,r14
   140023b51:	mov    edx,0x1001
   140023b56:	call   QWORD PTR [rip+0x371c]        # 0x140027278
   140023b5c:	test   eax,eax
   140023b5e:	je     0x140023b99
   140023b60:	mov    ecx,DWORD PTR [rbp-0x18]
   140023b63:	lea    r8,[r14+0x80]
   140023b6a:	mov    r9d,edi
   140023b6d:	mov    edx,0x1002
   140023b72:	call   QWORD PTR [rip+0x3700]        # 0x140027278
   140023b78:	test   eax,eax
   140023b7a:	je     0x140023b99
   140023b7c:	lea    rdx,[r14+0x100]
   140023b83:	lea    r9d,[rdi-0x36]
   140023b87:	lea    r8d,[rdi-0x30]
   140023b8b:	mov    ecx,ebx
   140023b8d:	call   0x1400241e8
   140023b92:	mov    eax,0x1
   140023b97:	jmp    0x140023b9b
   140023b99:	xor    eax,eax
   140023b9b:	mov    rcx,QWORD PTR [rbp-0x10]
   140023b9f:	xor    rcx,rsp
   140023ba2:	call   0x14000d0a0
   140023ba7:	add    rsp,0x40
   140023bab:	pop    r15
   140023bad:	pop    r14
   140023baf:	pop    r12
   140023bb1:	pop    rdi
   140023bb2:	pop    rsi
   140023bb3:	pop    rbx
   140023bb4:	pop    rbp
   140023bb5:	ret    
   140023bb6:	int3   
   140023bb7:	int3   
   140023bb8:	jmp    0x140023bc8
   140023bbd:	int3   
   140023bbe:	int3   
   140023bbf:	int3   
   140023bc0:	jmp    0x140023bc8
   140023bc5:	int3   
   140023bc6:	int3   
   140023bc7:	int3   
   140023bc8:	mov    WORD PTR [rsp+0x8],cx
   140023bcd:	push   rbx
   140023bce:	sub    rsp,0x20
   140023bd2:	mov    eax,0xffff
   140023bd7:	movzx  ebx,dx
   140023bda:	cmp    cx,ax
   140023bdd:	jne    0x140023be3
   140023bdf:	xor    eax,eax
   140023be1:	jmp    0x140023c28
   140023be3:	mov    eax,0x100
   140023be8:	cmp    cx,ax
   140023beb:	jae    0x140023bfd
   140023bed:	mov    rax,QWORD PTR [rip+0x1395c]        # 0x140037550
   140023bf4:	movzx  ecx,cx
   140023bf7:	movzx  eax,WORD PTR [rax+rcx*2]
   140023bfb:	jmp    0x140023c23
   140023bfd:	mov    ecx,0x1
   140023c02:	lea    r9,[rsp+0x40]
   140023c07:	lea    rdx,[rsp+0x30]
   140023c0c:	mov    r8d,ecx
   140023c0f:	call   QWORD PTR [rip+0x3693]        # 0x1400272a8
   140023c15:	xor    ecx,ecx
   140023c17:	test   eax,eax
   140023c19:	je     0x140023c20
   140023c1b:	movzx  ecx,WORD PTR [rsp+0x40]
   140023c20:	movzx  eax,cx
   140023c23:	movzx  ecx,bx
   140023c26:	and    eax,ecx
   140023c28:	add    rsp,0x20
   140023c2c:	pop    rbx
   140023c2d:	ret    
   140023c2e:	int3   
   140023c2f:	int3   
   140023c30:	mov    QWORD PTR [rsp+0x8],rbx
   140023c35:	mov    QWORD PTR [rsp+0x10],rbp
   140023c3a:	mov    QWORD PTR [rsp+0x18],rsi
   140023c3f:	push   rdi
   140023c40:	push   r12
   140023c42:	push   r14
   140023c44:	sub    rsp,0x10
   140023c48:	and    DWORD PTR [r8],0x0
   140023c4c:	and    DWORD PTR [r8+0x4],0x0
   140023c51:	and    DWORD PTR [r8+0x8],0x0
   140023c56:	mov    r10,r8
   140023c59:	mov    edi,edx
   140023c5b:	mov    rbp,rcx
   140023c5e:	mov    ebx,0x404e
   140023c63:	test   edx,edx
   140023c65:	je     0x140023dac
   140023c6b:	xor    r11d,r11d
   140023c6e:	xor    r8d,r8d
   140023c71:	xor    r9d,r9d
   140023c74:	lea    r12d,[r11+0x1]
   140023c78:	movsd  xmm0,QWORD PTR [r10]
   140023c7d:	mov    r14d,DWORD PTR [r10+0x8]
   140023c81:	mov    ecx,r8d
   140023c84:	shr    ecx,0x1f
   140023c87:	add    r8d,r8d
   140023c8a:	add    r9d,r9d
   140023c8d:	movsd  QWORD PTR [rsp],xmm0
   140023c92:	or     r9d,ecx
   140023c95:	lea    edx,[r11+r11*1]
   140023c99:	mov    eax,r11d
   140023c9c:	shr    eax,0x1f
   140023c9f:	add    r9d,r9d
   140023ca2:	or     r8d,eax
   140023ca5:	mov    eax,edx
   140023ca7:	add    edx,edx
   140023ca9:	mov    ecx,r8d
   140023cac:	shr    eax,0x1f
   140023caf:	add    r8d,r8d
   140023cb2:	shr    ecx,0x1f
   140023cb5:	or     r8d,eax
   140023cb8:	xor    eax,eax
   140023cba:	or     r9d,ecx
   140023cbd:	mov    ecx,DWORD PTR [rsp]
   140023cc0:	mov    DWORD PTR [r10],edx
   140023cc3:	lea    esi,[rdx+rcx*1]
   140023cc6:	mov    DWORD PTR [r10+0x4],r8d
   140023cca:	mov    DWORD PTR [r10+0x8],r9d
   140023cce:	cmp    esi,edx
   140023cd0:	jb     0x140023cd6
   140023cd2:	cmp    esi,ecx
   140023cd4:	jae    0x140023cd9
   140023cd6:	mov    eax,r12d
   140023cd9:	mov    DWORD PTR [r10],esi
   140023cdc:	test   eax,eax
   140023cde:	je     0x140023d04
   140023ce0:	mov    eax,r8d
   140023ce3:	inc    r8d
   140023ce6:	xor    ecx,ecx
   140023ce8:	cmp    r8d,eax
   140023ceb:	jb     0x140023cf2
   140023ced:	cmp    r8d,r12d
   140023cf0:	jae    0x140023cf5
   140023cf2:	mov    ecx,r12d
   140023cf5:	mov    DWORD PTR [r10+0x4],r8d
   140023cf9:	test   ecx,ecx
   140023cfb:	je     0x140023d04
   140023cfd:	inc    r9d
   140023d00:	mov    DWORD PTR [r10+0x8],r9d
   140023d04:	mov    rax,QWORD PTR [rsp]
   140023d08:	xor    ecx,ecx
   140023d0a:	shr    rax,0x20
   140023d0e:	lea    r11d,[r8+rax*1]
   140023d12:	cmp    r11d,r8d
   140023d15:	jb     0x140023d1c
   140023d17:	cmp    r11d,eax
   140023d1a:	jae    0x140023d1f
   140023d1c:	mov    ecx,r12d
   140023d1f:	mov    DWORD PTR [r10+0x4],r11d
   140023d23:	test   ecx,ecx
   140023d25:	je     0x140023d2e
   140023d27:	add    r9d,r12d
   140023d2a:	mov    DWORD PTR [r10+0x8],r9d
   140023d2e:	add    r9d,r14d
   140023d31:	lea    edx,[rsi+rsi*1]
   140023d34:	mov    ecx,r11d
   140023d37:	shr    ecx,0x1f
   140023d3a:	lea    r8d,[r11+r11*1]
   140023d3e:	add    r9d,r9d
   140023d41:	or     r9d,ecx
   140023d44:	mov    eax,esi
   140023d46:	mov    DWORD PTR [r10],edx
   140023d49:	shr    eax,0x1f
   140023d4c:	mov    DWORD PTR [r10+0x8],r9d
   140023d50:	or     r8d,eax
   140023d53:	xor    eax,eax
   140023d55:	mov    DWORD PTR [r10+0x4],r8d
   140023d59:	movsx  ecx,BYTE PTR [rbp+0x0]
   140023d5d:	lea    r11d,[rdx+rcx*1]
   140023d61:	cmp    r11d,edx
   140023d64:	jb     0x140023d6b
   140023d66:	cmp    r11d,ecx
   140023d69:	jae    0x140023d6e
   140023d6b:	mov    eax,r12d
   140023d6e:	mov    DWORD PTR [r10],r11d
   140023d71:	test   eax,eax
   140023d73:	je     0x140023d99
   140023d75:	mov    eax,r8d
   140023d78:	inc    r8d
   140023d7b:	xor    ecx,ecx
   140023d7d:	cmp    r8d,eax
   140023d80:	jb     0x140023d87
   140023d82:	cmp    r8d,r12d
   140023d85:	jae    0x140023d8a
   140023d87:	mov    ecx,r12d
   140023d8a:	mov    DWORD PTR [r10+0x4],r8d
   140023d8e:	test   ecx,ecx
   140023d90:	je     0x140023d99
   140023d92:	inc    r9d
   140023d95:	mov    DWORD PTR [r10+0x8],r9d
   140023d99:	add    rbp,r12
   140023d9c:	mov    DWORD PTR [r10+0x4],r8d
   140023da0:	mov    DWORD PTR [r10+0x8],r9d
   140023da4:	dec    edi
   140023da6:	jne    0x140023c78
   140023dac:	cmp    DWORD PTR [r10+0x8],0x0
   140023db1:	jne    0x140023ded
   140023db3:	mov    r8d,DWORD PTR [r10+0x4]
   140023db7:	mov    edx,DWORD PTR [r10]
   140023dba:	mov    eax,r8d
   140023dbd:	mov    r9d,r8d
   140023dc0:	shl    eax,0x10
   140023dc3:	mov    ecx,edx
   140023dc5:	shl    edx,0x10
   140023dc8:	shr    ecx,0x10
   140023dcb:	shr    r9d,0x10
   140023dcf:	mov    DWORD PTR [r10],edx
   140023dd2:	mov    r8d,ecx
   140023dd5:	or     r8d,eax
   140023dd8:	mov    eax,0xfff0
   140023ddd:	add    bx,ax
   140023de0:	test   r9d,r9d
   140023de3:	je     0x140023db7
   140023de5:	mov    DWORD PTR [r10+0x4],r8d
   140023de9:	mov    DWORD PTR [r10+0x8],r9d
   140023ded:	mov    edx,DWORD PTR [r10+0x8]
   140023df1:	mov    r11d,0x8000
   140023df7:	test   r11d,edx
   140023dfa:	jne    0x140023e34
   140023dfc:	mov    r9d,DWORD PTR [r10]
   140023dff:	mov    r8d,DWORD PTR [r10+0x4]
   140023e03:	mov    ecx,r8d
   140023e06:	mov    eax,r9d
   140023e09:	add    r8d,r8d
   140023e0c:	shr    eax,0x1f
   140023e0f:	add    edx,edx
   140023e11:	shr    ecx,0x1f
   140023e14:	or     r8d,eax
   140023e17:	mov    eax,0xffff
   140023e1c:	or     edx,ecx
   140023e1e:	add    bx,ax
   140023e21:	add    r9d,r9d
   140023e24:	test   r11d,edx
   140023e27:	je     0x140023e03
   140023e29:	mov    DWORD PTR [r10],r9d
   140023e2c:	mov    DWORD PTR [r10+0x4],r8d
   140023e30:	mov    DWORD PTR [r10+0x8],edx
   140023e34:	mov    rbp,QWORD PTR [rsp+0x38]
   140023e39:	mov    rsi,QWORD PTR [rsp+0x40]
   140023e3e:	mov    WORD PTR [r10+0xa],bx
   140023e43:	mov    rbx,QWORD PTR [rsp+0x30]
   140023e48:	add    rsp,0x10
   140023e4c:	pop    r14
   140023e4e:	pop    r12
   140023e50:	pop    rdi
   140023e51:	ret    
   140023e52:	int3   
   140023e53:	int3   
   140023e54:	mov    QWORD PTR [rsp+0x18],rbx
   140023e59:	mov    DWORD PTR [rsp+0x8],ecx
   140023e5d:	push   rsi
   140023e5e:	push   rdi
   140023e5f:	push   r14
   140023e61:	sub    rsp,0x20
   140023e65:	movsxd rbx,ecx
   140023e68:	cmp    ebx,0xfffffffe
   140023e6b:	jne    0x140023e85
   140023e6d:	call   0x140009548
   140023e72:	and    DWORD PTR [rax],0x0
   140023e75:	call   0x1400095b8
   140023e7a:	mov    DWORD PTR [rax],0x9
   140023e80:	jmp    0x140023f06
   140023e85:	test   ecx,ecx
   140023e87:	js     0x140023eee
   140023e89:	cmp    ebx,DWORD PTR [rip+0x161b5]        # 0x14003a044
   140023e8f:	jae    0x140023eee
   140023e91:	mov    rax,rbx
   140023e94:	mov    rdi,rbx
   140023e97:	sar    rdi,0x5
   140023e9b:	lea    r14,[rip+0x147ee]        # 0x140038690
   140023ea2:	and    eax,0x1f
   140023ea5:	imul   rsi,rax,0x58
   140023ea9:	mov    rax,QWORD PTR [r14+rdi*8]
   140023ead:	movsx  ecx,BYTE PTR [rax+rsi*1+0x8]
   140023eb2:	and    ecx,0x1
   140023eb5:	je     0x140023eee
   140023eb7:	mov    ecx,ebx
   140023eb9:	call   0x140020ed0
   140023ebe:	nop
   140023ebf:	mov    rax,QWORD PTR [r14+rdi*8]
   140023ec3:	test   BYTE PTR [rax+rsi*1+0x8],0x1
   140023ec8:	je     0x140023ed5
   140023eca:	mov    ecx,ebx
   140023ecc:	call   0x140023f18
   140023ed1:	mov    edi,eax
   140023ed3:	jmp    0x140023ee3
   140023ed5:	call   0x1400095b8
   140023eda:	mov    DWORD PTR [rax],0x9
   140023ee0:	or     edi,0xffffffff
   140023ee3:	mov    ecx,ebx
   140023ee5:	call   0x14002142c
   140023eea:	mov    eax,edi
   140023eec:	jmp    0x140023f09
   140023eee:	call   0x140009548
   140023ef3:	and    DWORD PTR [rax],0x0
   140023ef6:	call   0x1400095b8
   140023efb:	mov    DWORD PTR [rax],0x9
   140023f01:	call   0x140008628
   140023f06:	or     eax,0xffffffff
   140023f09:	mov    rbx,QWORD PTR [rsp+0x50]
   140023f0e:	add    rsp,0x20
   140023f12:	pop    r14
   140023f14:	pop    rdi
   140023f15:	pop    rsi
   140023f16:	ret    
   140023f17:	int3   
   140023f18:	mov    QWORD PTR [rsp+0x8],rbx
   140023f1d:	push   rdi
   140023f1e:	sub    rsp,0x20
   140023f22:	movsxd rdi,ecx
   140023f25:	mov    ecx,edi
   140023f27:	call   0x14002120c
   140023f2c:	cmp    rax,0xffffffffffffffff
   140023f30:	je     0x140023f8b
   140023f32:	mov    rax,QWORD PTR [rip+0x14757]        # 0x140038690
   140023f39:	mov    ecx,0x2
   140023f3e:	cmp    edi,0x1
   140023f41:	jne    0x140023f4c
   140023f43:	test   BYTE PTR [rax+0xb8],dil
   140023f4a:	jne    0x140023f56
   140023f4c:	cmp    edi,ecx
   140023f4e:	jne    0x140023f6d
   140023f50:	test   BYTE PTR [rax+0x60],0x1
   140023f54:	je     0x140023f6d
   140023f56:	call   0x14002120c
   140023f5b:	mov    ecx,0x1
   140023f60:	mov    rbx,rax
   140023f63:	call   0x14002120c
   140023f68:	cmp    rax,rbx
   140023f6b:	je     0x140023f8b
   140023f6d:	mov    ecx,edi
   140023f6f:	call   0x14002120c
   140023f74:	mov    rcx,rax
   140023f77:	call   QWORD PTR [rip+0x30bb]        # 0x140027038
   140023f7d:	test   eax,eax
   140023f7f:	jne    0x140023f8b
   140023f81:	call   QWORD PTR [rip+0x30f9]        # 0x140027080
   140023f87:	mov    ebx,eax
   140023f89:	jmp    0x140023f8d
   140023f8b:	xor    ebx,ebx
   140023f8d:	mov    ecx,edi
   140023f8f:	call   0x140021160
   140023f94:	mov    rdx,rdi
   140023f97:	mov    rcx,rdi
   140023f9a:	sar    rcx,0x5
   140023f9e:	and    edx,0x1f
   140023fa1:	lea    r8,[rip+0x146e8]        # 0x140038690
   140023fa8:	mov    rcx,QWORD PTR [r8+rcx*8]
   140023fac:	imul   rdx,rdx,0x58
   140023fb0:	mov    BYTE PTR [rcx+rdx*1+0x8],0x0
   140023fb5:	test   ebx,ebx
   140023fb7:	je     0x140023fc5
   140023fb9:	mov    ecx,ebx
   140023fbb:	call   0x140009568
   140023fc0:	or     eax,0xffffffff
   140023fc3:	jmp    0x140023fc7
   140023fc5:	xor    eax,eax
   140023fc7:	mov    rbx,QWORD PTR [rsp+0x30]
   140023fcc:	add    rsp,0x20
   140023fd0:	pop    rdi
   140023fd1:	ret    
   140023fd2:	int3   
   140023fd3:	int3   
   140023fd4:	rex push rbx
   140023fd6:	sub    rsp,0x20
   140023fda:	test   BYTE PTR [rcx+0x18],0x83
   140023fde:	mov    rbx,rcx
   140023fe1:	je     0x140024005
   140023fe3:	test   BYTE PTR [rcx+0x18],0x8
   140023fe7:	je     0x140024005
   140023fe9:	mov    rcx,QWORD PTR [rcx+0x10]
   140023fed:	call   0x140006444
   140023ff2:	and    DWORD PTR [rbx+0x18],0xfffffbf7
   140023ff9:	xor    eax,eax
   140023ffb:	mov    QWORD PTR [rbx],rax
   140023ffe:	mov    QWORD PTR [rbx+0x10],rax
   140024002:	mov    DWORD PTR [rbx+0x8],eax
   140024005:	add    rsp,0x20
   140024009:	pop    rbx
   14002400a:	ret    
   14002400b:	int3   
   14002400c:	sub    rsp,0x28
   140024010:	mov    rcx,QWORD PTR [rip+0x13869]        # 0x140037880
   140024017:	lea    rax,[rcx+0x2]
   14002401b:	cmp    rax,0x1
   14002401f:	jbe    0x140024027
   140024021:	call   QWORD PTR [rip+0x3011]        # 0x140027038
   140024027:	add    rsp,0x28
   14002402b:	ret    
   14002402c:	sub    rsp,0x48
   140024030:	and    QWORD PTR [rsp+0x30],0x0
   140024036:	and    DWORD PTR [rsp+0x28],0x0
   14002403b:	mov    r8d,0x3
   140024041:	lea    rcx,[rip+0xc9e0]        # 0x140030a28
   140024048:	xor    r9d,r9d
   14002404b:	mov    edx,0x40000000
   140024050:	mov    DWORD PTR [rsp+0x20],r8d
   140024055:	call   QWORD PTR [rip+0x326d]        # 0x1400272c8
   14002405b:	mov    QWORD PTR [rip+0x1381e],rax        # 0x140037880
   140024062:	add    rsp,0x48
   140024066:	ret    
   140024067:	int3   
   140024068:	mov    QWORD PTR [rsp+0x18],rbx
   14002406d:	mov    QWORD PTR [rsp+0x20],rsi
   140024072:	push   rdi
   140024073:	sub    rsp,0x70
   140024077:	movaps XMMWORD PTR [rsp+0x60],xmm6
   14002407c:	mov    rax,QWORD PTR [rip+0x129bd]        # 0x140036a40
   140024083:	xor    rax,rsp
   140024086:	mov    QWORD PTR [rsp+0x58],rax
   14002408b:	mov    rsi,rcx
   14002408e:	mov    rbx,rcx
   140024091:	mov    rdi,rdx
   140024094:	lea    rcx,[rsp+0x20]
   140024099:	mov    rdx,r8
   14002409c:	call   0x14000a000
   1400240a1:	test   rdi,rdi
   1400240a4:	je     0x1400240a9
   1400240a6:	mov    QWORD PTR [rdi],rbx
   1400240a9:	test   rsi,rsi
   1400240ac:	jne    0x1400240c6
   1400240ae:	call   0x1400095b8
   1400240b3:	mov    DWORD PTR [rax],0x16
   1400240b9:	call   0x140008628
   1400240be:	xorps  xmm6,xmm6
   1400240c1:	jmp    0x140024182
   1400240c6:	mov    rdx,QWORD PTR [rsp+0x20]
   1400240cb:	cmp    DWORD PTR [rdx+0xd4],0x1
   1400240d2:	jle    0x1400240ed
   1400240d4:	movzx  ecx,BYTE PTR [rbx]
   1400240d7:	lea    r8,[rsp+0x20]
   1400240dc:	mov    edx,0x8
   1400240e1:	call   0x14001c590
   1400240e6:	mov    rdx,QWORD PTR [rsp+0x20]
   1400240eb:	jmp    0x1400240fe
   1400240ed:	movzx  ecx,BYTE PTR [rbx]
   1400240f0:	mov    rax,QWORD PTR [rdx+0x108]
   1400240f7:	movzx  eax,WORD PTR [rax+rcx*2]
   1400240fb:	and    eax,0x8
   1400240fe:	test   eax,eax
   140024100:	je     0x140024107
   140024102:	inc    rbx
   140024105:	jmp    0x1400240cb
   140024107:	lea    r8,[rsp+0x20]
   14002410c:	lea    rcx,[rsp+0x40]
   140024111:	mov    rdx,rbx
   140024114:	call   0x1400248a0
   140024119:	test   rdi,rdi
   14002411c:	je     0x140024128
   14002411e:	movsxd rcx,DWORD PTR [rax+0x4]
   140024122:	add    rcx,rbx
   140024125:	mov    QWORD PTR [rdi],rcx
   140024128:	test   DWORD PTR [rax],0x240
   14002412e:	je     0x14002413d
   140024130:	xorps  xmm6,xmm6
   140024133:	test   rdi,rdi
   140024136:	je     0x140024182
   140024138:	mov    QWORD PTR [rdi],rsi
   14002413b:	jmp    0x140024182
   14002413d:	test   BYTE PTR [rax],0x81
   140024140:	je     0x140024158
   140024142:	cmp    BYTE PTR [rbx],0x2d
   140024145:	movsd  xmm6,QWORD PTR [rip+0x13743]        # 0x140037890
   14002414d:	jne    0x140024170
   14002414f:	xorps  xmm6,XMMWORD PTR [rip+0xa12a]        # 0x14002e280
   140024156:	jmp    0x140024170
   140024158:	test   DWORD PTR [rax],0x100
   14002415e:	je     0x14002417d
   140024160:	movsd  xmm0,QWORD PTR [rax+0x10]
   140024165:	xorps  xmm6,xmm6
   140024168:	ucomisd xmm0,xmm6
   14002416c:	jp     0x14002417d
   14002416e:	jne    0x14002417d
   140024170:	call   0x1400095b8
   140024175:	mov    DWORD PTR [rax],0x22
   14002417b:	jmp    0x140024182
   14002417d:	movsd  xmm6,QWORD PTR [rax+0x10]
   140024182:	cmp    BYTE PTR [rsp+0x38],0x0
   140024187:	je     0x140024195
   140024189:	mov    rax,QWORD PTR [rsp+0x30]
   14002418e:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140024195:	movaps xmm0,xmm6
   140024198:	mov    rcx,QWORD PTR [rsp+0x58]
   14002419d:	xor    rcx,rsp
   1400241a0:	call   0x14000d0a0
   1400241a5:	lea    r11,[rsp+0x70]
   1400241aa:	mov    rbx,QWORD PTR [r11+0x20]
   1400241ae:	mov    rsi,QWORD PTR [r11+0x28]
   1400241b2:	movaps xmm6,XMMWORD PTR [rsp+0x60]
   1400241b7:	mov    rsp,r11
   1400241ba:	pop    rdi
   1400241bb:	ret    
   1400241bc:	xor    r8d,r8d
   1400241bf:	jmp    0x140024068
   1400241c4:	sub    rsp,0x38
   1400241c8:	xor    eax,eax
   1400241ca:	cmp    r9d,0xa
   1400241ce:	jne    0x1400241d9
   1400241d0:	test   rcx,rcx
   1400241d3:	jns    0x1400241d9
   1400241d5:	lea    eax,[r9-0x9]
   1400241d9:	mov    DWORD PTR [rsp+0x20],eax
   1400241dd:	call   0x14002425c
   1400241e2:	add    rsp,0x38
   1400241e6:	ret    
   1400241e7:	int3   
   1400241e8:	sub    rsp,0x38
   1400241ec:	cmp    r9d,0xa
   1400241f0:	jne    0x140024200
   1400241f2:	test   ecx,ecx
   1400241f4:	jns    0x140024200
   1400241f6:	mov    DWORD PTR [rsp+0x20],0x1
   1400241fe:	jmp    0x140024205
   140024200:	and    DWORD PTR [rsp+0x20],0x0
   140024205:	call   0x140024370
   14002420a:	add    rsp,0x38
   14002420e:	ret    
   14002420f:	int3   
   140024210:	sub    rsp,0x38
   140024214:	xor    eax,eax
   140024216:	cmp    r9d,0xa
   14002421a:	jne    0x140024224
   14002421c:	test   ecx,ecx
   14002421e:	jns    0x140024224
   140024220:	lea    eax,[r9-0x9]
   140024224:	mov    DWORD PTR [rsp+0x20],eax
   140024228:	call   0x140024370
   14002422d:	add    rsp,0x38
   140024231:	ret    
   140024232:	int3   
   140024233:	int3   
   140024234:	sub    rsp,0x38
   140024238:	and    DWORD PTR [rsp+0x20],0x0
   14002423d:	call   0x14002425c
   140024242:	add    rsp,0x38
   140024246:	ret    
   140024247:	int3   
   140024248:	sub    rsp,0x38
   14002424c:	and    DWORD PTR [rsp+0x20],0x0
   140024251:	call   0x140024370
   140024256:	add    rsp,0x38
   14002425a:	ret    
   14002425b:	int3   
   14002425c:	mov    QWORD PTR [rsp+0x8],rbx
   140024261:	mov    QWORD PTR [rsp+0x10],rbp
   140024266:	mov    QWORD PTR [rsp+0x18],rsi
   14002426b:	push   rdi
   14002426c:	sub    rsp,0x20
   140024270:	xor    ebp,ebp
   140024272:	mov    esi,r9d
   140024275:	mov    rdi,r8
   140024278:	mov    r10,rdx
   14002427b:	mov    r11,rcx
   14002427e:	test   rdx,rdx
   140024281:	jne    0x14002429b
   140024283:	call   0x1400095b8
   140024288:	mov    ebx,0x16
   14002428d:	mov    DWORD PTR [rax],ebx
   14002428f:	call   0x140008628
   140024294:	mov    eax,ebx
   140024296:	jmp    0x140024358
   14002429b:	test   r8,r8
   14002429e:	je     0x140024283
   1400242a0:	mov    WORD PTR [rdx],bp
   1400242a3:	mov    edx,DWORD PTR [rsp+0x50]
   1400242a7:	mov    eax,edx
   1400242a9:	neg    eax
   1400242ab:	sbb    rcx,rcx
   1400242ae:	neg    rcx
   1400242b1:	inc    rcx
   1400242b4:	cmp    r8,rcx
   1400242b7:	ja     0x1400242c5
   1400242b9:	call   0x1400095b8
   1400242be:	mov    ebx,0x22
   1400242c3:	jmp    0x14002428d
   1400242c5:	lea    eax,[rsi-0x2]
   1400242c8:	mov    ebx,0x22
   1400242cd:	cmp    eax,ebx
   1400242cf:	ja     0x140024283
   1400242d1:	mov    rcx,rbp
   1400242d4:	mov    r8,r10
   1400242d7:	test   edx,edx
   1400242d9:	je     0x1400242ec
   1400242db:	lea    eax,[rbx+0xb]
   1400242de:	lea    r8,[r10+0x2]
   1400242e2:	lea    ecx,[rbx-0x21]
   1400242e5:	mov    WORD PTR [r10],ax
   1400242e9:	neg    r11
   1400242ec:	mov    r9,r8
   1400242ef:	xor    edx,edx
   1400242f1:	mov    rax,r11
   1400242f4:	div    rsi
   1400242f7:	mov    r11,rax
   1400242fa:	cmp    edx,0x9
   1400242fd:	jbe    0x140024305
   1400242ff:	add    dx,0x57
   140024303:	jmp    0x140024309
   140024305:	add    dx,0x30
   140024309:	mov    WORD PTR [r8],dx
   14002430d:	inc    rcx
   140024310:	add    r8,0x2
   140024314:	test   rax,rax
   140024317:	je     0x14002431e
   140024319:	cmp    rcx,rdi
   14002431c:	jb     0x1400242ef
   14002431e:	cmp    rcx,rdi
   140024321:	jb     0x140024331
   140024323:	mov    WORD PTR [r10],bp
   140024327:	call   0x1400095b8
   14002432c:	jmp    0x14002428d
   140024331:	mov    WORD PTR [r8],bp
   140024335:	sub    r8,0x2
   140024339:	movzx  eax,WORD PTR [r9]
   14002433d:	movzx  ecx,WORD PTR [r8]
   140024341:	mov    WORD PTR [r8],ax
   140024345:	mov    WORD PTR [r9],cx
   140024349:	add    r9,0x2
   14002434d:	sub    r8,0x2
   140024351:	cmp    r9,r8
   140024354:	jb     0x140024339
   140024356:	xor    eax,eax
   140024358:	mov    rbx,QWORD PTR [rsp+0x30]
   14002435d:	mov    rbp,QWORD PTR [rsp+0x38]
   140024362:	mov    rsi,QWORD PTR [rsp+0x40]
   140024367:	add    rsp,0x20
   14002436b:	pop    rdi
   14002436c:	ret    
   14002436d:	int3   
   14002436e:	int3   
   14002436f:	int3   
   140024370:	mov    QWORD PTR [rsp+0x8],rbx
   140024375:	mov    QWORD PTR [rsp+0x10],rbp
   14002437a:	mov    QWORD PTR [rsp+0x18],rsi
   14002437f:	push   rdi
   140024380:	sub    rsp,0x20
   140024384:	xor    ebp,ebp
   140024386:	mov    esi,r9d
   140024389:	mov    rdi,r8
   14002438c:	mov    r10,rdx
   14002438f:	mov    r11d,ecx
   140024392:	test   rdx,rdx
   140024395:	jne    0x1400243af
   140024397:	call   0x1400095b8
   14002439c:	mov    ebx,0x16
   1400243a1:	mov    DWORD PTR [rax],ebx
   1400243a3:	call   0x140008628
   1400243a8:	mov    eax,ebx
   1400243aa:	jmp    0x14002446b
   1400243af:	test   r8,r8
   1400243b2:	je     0x140024397
   1400243b4:	mov    WORD PTR [rdx],bp
   1400243b7:	mov    edx,DWORD PTR [rsp+0x50]
   1400243bb:	mov    eax,edx
   1400243bd:	neg    eax
   1400243bf:	sbb    rcx,rcx
   1400243c2:	neg    rcx
   1400243c5:	inc    rcx
   1400243c8:	cmp    r8,rcx
   1400243cb:	ja     0x1400243d9
   1400243cd:	call   0x1400095b8
   1400243d2:	mov    ebx,0x22
   1400243d7:	jmp    0x1400243a1
   1400243d9:	lea    eax,[r9-0x2]
   1400243dd:	mov    ebx,0x22
   1400243e2:	cmp    eax,ebx
   1400243e4:	ja     0x140024397
   1400243e6:	mov    rcx,rbp
   1400243e9:	mov    r8,r10
   1400243ec:	test   edx,edx
   1400243ee:	je     0x140024401
   1400243f0:	lea    eax,[rbx+0xb]
   1400243f3:	lea    r8,[r10+0x2]
   1400243f7:	lea    ecx,[rbx-0x21]
   1400243fa:	mov    WORD PTR [r10],ax
   1400243fe:	neg    r11d
   140024401:	mov    r9,r8
   140024404:	xor    edx,edx
   140024406:	mov    eax,r11d
   140024409:	div    esi
   14002440b:	mov    r11d,eax
   14002440e:	cmp    edx,0x9
   140024411:	jbe    0x140024419
   140024413:	add    dx,0x57
   140024417:	jmp    0x14002441d
   140024419:	add    dx,0x30
   14002441d:	mov    WORD PTR [r8],dx
   140024421:	inc    rcx
   140024424:	add    r8,0x2
   140024428:	test   eax,eax
   14002442a:	je     0x140024431
   14002442c:	cmp    rcx,rdi
   14002442f:	jb     0x140024404
   140024431:	cmp    rcx,rdi
   140024434:	jb     0x140024444
   140024436:	mov    WORD PTR [r10],bp
   14002443a:	call   0x1400095b8
   14002443f:	jmp    0x1400243a1
   140024444:	mov    WORD PTR [r8],bp
   140024448:	sub    r8,0x2
   14002444c:	movzx  eax,WORD PTR [r9]
   140024450:	movzx  ecx,WORD PTR [r8]
   140024454:	mov    WORD PTR [r8],ax
   140024458:	mov    WORD PTR [r9],cx
   14002445c:	add    r9,0x2
   140024460:	sub    r8,0x2
   140024464:	cmp    r9,r8
   140024467:	jb     0x14002444c
   140024469:	xor    eax,eax
   14002446b:	mov    rbx,QWORD PTR [rsp+0x30]
   140024470:	mov    rbp,QWORD PTR [rsp+0x38]
   140024475:	mov    rsi,QWORD PTR [rsp+0x40]
   14002447a:	add    rsp,0x20
   14002447e:	pop    rdi
   14002447f:	ret    
   140024480:	xor    edx,edx
   140024482:	lea    r8d,[rdx+0xa]
   140024486:	jmp    0x140024b6c
   14002448b:	int3   
   14002448c:	xor    edx,edx
   14002448e:	lea    r8d,[rdx+0xa]
   140024492:	jmp    0x140024ef8
   140024497:	int3   
   140024498:	mov    r9,rdx
   14002449b:	xor    edx,edx
   14002449d:	lea    r8d,[rdx+0xa]
   1400244a1:	jmp    0x140024f28
   1400244a6:	int3   
   1400244a7:	int3   
   1400244a8:	mov    r9,rdx
   1400244ab:	xor    edx,edx
   1400244ad:	lea    r8d,[rdx+0xa]
   1400244b1:	jmp    0x140024b58
   1400244b6:	int3   
   1400244b7:	int3   
   1400244b8:	xor    edx,edx
   1400244ba:	lea    r8d,[rdx+0xa]
   1400244be:	jmp    0x140024b6c
   1400244c3:	int3   
   1400244c4:	mov    r9,rdx
   1400244c7:	xor    edx,edx
   1400244c9:	lea    r8d,[rdx+0xa]
   1400244cd:	jmp    0x140024b58
   1400244d2:	int3   
   1400244d3:	int3   
   1400244d4:	xor    edx,edx
   1400244d6:	lea    r8d,[rdx+0xa]
   1400244da:	jmp    0x140024ef8
   1400244df:	int3   
   1400244e0:	mov    r9,rdx
   1400244e3:	xor    edx,edx
   1400244e5:	lea    r8d,[rdx+0xa]
   1400244e9:	jmp    0x140024f28
   1400244ee:	int3   
   1400244ef:	int3   
   1400244f0:	sub    rsp,0x18
   1400244f4:	movdqa xmm2,XMMWORD PTR [rsp]
   1400244f9:	movzx  eax,dx
   1400244fc:	mov    r8,rcx
   1400244ff:	movd   xmm0,eax
   140024503:	xor    r9d,r9d
   140024506:	pshuflw xmm1,xmm0,0x0
   14002450b:	pshufd xmm3,xmm1,0x0
   140024510:	mov    rax,r8
   140024513:	and    eax,0xfff
   140024518:	cmp    rax,0xff0
   14002451e:	ja     0x14002454b
   140024520:	movdqu xmm1,XMMWORD PTR [r8]
   140024525:	movdqa xmm0,xmm2
   140024529:	pxor   xmm0,xmm2
   14002452d:	movdqa xmm2,xmm0
   140024531:	pcmpeqw xmm2,xmm1
   140024535:	pcmpeqw xmm1,xmm3
   140024539:	por    xmm2,xmm1
   14002453d:	pmovmskb eax,xmm2
   140024541:	test   eax,eax
   140024543:	jne    0x14002455d
   140024545:	add    r8,0x10
   140024549:	jmp    0x140024510
   14002454b:	cmp    WORD PTR [r8],dx
   14002454f:	je     0x140024574
   140024551:	cmp    WORD PTR [r8],r9w
   140024555:	je     0x140024570
   140024557:	add    r8,0x2
   14002455b:	jmp    0x140024510
   14002455d:	bsf    ecx,eax
   140024560:	add    r8,rcx
   140024563:	cmp    WORD PTR [r8],dx
   140024567:	cmove  r9,r8
   14002456b:	mov    rax,r9
   14002456e:	jmp    0x140024577
   140024570:	xor    eax,eax
   140024572:	jmp    0x140024577
   140024574:	mov    rax,r8
   140024577:	add    rsp,0x18
   14002457b:	ret    
   14002457c:	sub    rsp,0x28
   140024580:	xor    r8d,r8d
   140024583:	mov    r9,rdx
   140024586:	mov    r10,rcx
   140024589:	cmp    DWORD PTR [rip+0x14a90],r8d        # 0x140039020
   140024590:	jne    0x1400245f7
   140024592:	test   rcx,rcx
   140024595:	jne    0x1400245b1
   140024597:	call   0x1400095b8
   14002459c:	mov    DWORD PTR [rax],0x16
   1400245a2:	call   0x140008628
   1400245a7:	mov    eax,0x7fffffff
   1400245ac:	add    rsp,0x28
   1400245b0:	ret    
   1400245b1:	test   rdx,rdx
   1400245b4:	je     0x140024597
   1400245b6:	sub    r10,rdx
   1400245b9:	movzx  edx,WORD PTR [r10+r9*1]
   1400245be:	lea    eax,[rdx-0x41]
   1400245c1:	cmp    ax,0x19
   1400245c5:	ja     0x1400245cb
   1400245c7:	add    dx,0x20
   1400245cb:	movzx  ecx,WORD PTR [r9]
   1400245cf:	lea    eax,[rcx-0x41]
   1400245d2:	cmp    ax,0x19
   1400245d6:	ja     0x1400245dc
   1400245d8:	add    cx,0x20
   1400245dc:	add    r9,0x2
   1400245e0:	test   dx,dx
   1400245e3:	je     0x1400245ea
   1400245e5:	cmp    dx,cx
   1400245e8:	je     0x1400245b9
   1400245ea:	movzx  ecx,cx
   1400245ed:	movzx  eax,dx
   1400245f0:	sub    eax,ecx
   1400245f2:	add    rsp,0x28
   1400245f6:	ret    
   1400245f7:	add    rsp,0x28
   1400245fb:	jmp    0x140024600
   140024600:	mov    rax,rsp
   140024603:	mov    QWORD PTR [rax+0x8],rbx
   140024607:	mov    QWORD PTR [rax+0x10],rbp
   14002460b:	mov    QWORD PTR [rax+0x18],rsi
   14002460f:	push   rdi
   140024610:	sub    rsp,0x40
   140024614:	mov    rsi,rcx
   140024617:	mov    rdi,rdx
   14002461a:	lea    rcx,[rax-0x28]
   14002461e:	mov    rdx,r8
   140024621:	call   0x14000a000
   140024626:	xor    ebp,ebp
   140024628:	test   rsi,rsi
   14002462b:	je     0x140024632
   14002462d:	test   rdi,rdi
   140024630:	jne    0x140024649
   140024632:	call   0x1400095b8
   140024637:	mov    DWORD PTR [rax],0x16
   14002463d:	call   0x140008628
   140024642:	mov    eax,0x7fffffff
   140024647:	jmp    0x1400246c5
   140024649:	mov    rax,QWORD PTR [rsp+0x20]
   14002464e:	cmp    QWORD PTR [rax+0x138],rbp
   140024655:	jne    0x14002468b
   140024657:	sub    rsi,rdi
   14002465a:	movzx  ebx,WORD PTR [rsi+rdi*1]
   14002465e:	lea    eax,[rbx-0x41]
   140024661:	cmp    ax,0x19
   140024665:	ja     0x14002466b
   140024667:	add    bx,0x20
   14002466b:	movzx  ecx,WORD PTR [rdi]
   14002466e:	lea    eax,[rcx-0x41]
   140024671:	cmp    ax,0x19
   140024675:	ja     0x14002467b
   140024677:	add    cx,0x20
   14002467b:	add    rdi,0x2
   14002467f:	test   bx,bx
   140024682:	je     0x1400246bd
   140024684:	cmp    bx,cx
   140024687:	je     0x14002465a
   140024689:	jmp    0x1400246bd
   14002468b:	movzx  ecx,WORD PTR [rsi]
   14002468e:	lea    rdx,[rsp+0x20]
   140024693:	call   0x140025078
   140024698:	movzx  ecx,WORD PTR [rdi]
   14002469b:	lea    rdx,[rsp+0x20]
   1400246a0:	movzx  ebx,ax
   1400246a3:	lea    rsi,[rsi+0x2]
   1400246a7:	call   0x140025078
   1400246ac:	lea    rdi,[rdi+0x2]
   1400246b0:	movzx  ecx,ax
   1400246b3:	test   bx,bx
   1400246b6:	je     0x1400246bd
   1400246b8:	cmp    bx,ax
   1400246bb:	je     0x14002468b
   1400246bd:	movzx  ecx,cx
   1400246c0:	movzx  eax,bx
   1400246c3:	sub    eax,ecx
   1400246c5:	cmp    BYTE PTR [rsp+0x38],bpl
   1400246ca:	je     0x1400246d8
   1400246cc:	mov    rcx,QWORD PTR [rsp+0x30]
   1400246d1:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   1400246d8:	mov    rbx,QWORD PTR [rsp+0x50]
   1400246dd:	mov    rbp,QWORD PTR [rsp+0x58]
   1400246e2:	mov    rsi,QWORD PTR [rsp+0x60]
   1400246e7:	add    rsp,0x40
   1400246eb:	pop    rdi
   1400246ec:	ret    
   1400246ed:	int3   
   1400246ee:	int3   
   1400246ef:	int3   
   1400246f0:	sub    rsp,0x28
   1400246f4:	xor    r9d,r9d
   1400246f7:	mov    r11,r8
   1400246fa:	mov    r10,rcx
   1400246fd:	cmp    DWORD PTR [rip+0x1491c],r9d        # 0x140039020
   140024704:	jne    0x14002477e
   140024706:	test   r8,r8
   140024709:	je     0x140024776
   14002470b:	test   rcx,rcx
   14002470e:	jne    0x14002472a
   140024710:	call   0x1400095b8
   140024715:	mov    DWORD PTR [rax],0x16
   14002471b:	call   0x140008628
   140024720:	mov    eax,0x7fffffff
   140024725:	add    rsp,0x28
   140024729:	ret    
   14002472a:	test   rdx,rdx
   14002472d:	je     0x140024710
   14002472f:	sub    r10,rdx
   140024732:	movzx  ecx,WORD PTR [r10+rdx*1]
   140024737:	lea    eax,[rcx-0x41]
   14002473a:	cmp    ax,0x19
   14002473e:	ja     0x140024744
   140024740:	add    cx,0x20
   140024744:	movzx  r8d,WORD PTR [rdx]
   140024748:	lea    eax,[r8-0x41]
   14002474c:	cmp    ax,0x19
   140024750:	ja     0x140024757
   140024752:	add    r8w,0x20
   140024757:	add    rdx,0x2
   14002475b:	dec    r11
   14002475e:	je     0x14002476b
   140024760:	test   cx,cx
   140024763:	je     0x14002476b
   140024765:	cmp    cx,r8w
   140024769:	je     0x140024732
   14002476b:	movzx  eax,r8w
   14002476f:	movzx  r9d,cx
   140024773:	sub    r9d,eax
   140024776:	mov    eax,r9d
   140024779:	add    rsp,0x28
   14002477d:	ret    
   14002477e:	add    rsp,0x28
   140024782:	jmp    0x140024788
   140024787:	int3   
   140024788:	mov    rax,rsp
   14002478b:	mov    QWORD PTR [rax+0x8],rbx
   14002478f:	mov    QWORD PTR [rax+0x10],rbp
   140024793:	mov    QWORD PTR [rax+0x18],rsi
   140024797:	mov    QWORD PTR [rax+0x20],rdi
   14002479b:	push   r14
   14002479d:	sub    rsp,0x40
   1400247a1:	xor    r14d,r14d
   1400247a4:	mov    rbp,r8
   1400247a7:	mov    rdi,rdx
   1400247aa:	mov    rsi,rcx
   1400247ad:	mov    eax,r14d
   1400247b0:	test   r8,r8
   1400247b3:	je     0x140024883
   1400247b9:	test   rcx,rcx
   1400247bc:	jne    0x1400247d8
   1400247be:	call   0x1400095b8
   1400247c3:	mov    DWORD PTR [rax],0x16
   1400247c9:	call   0x140008628
   1400247ce:	mov    eax,0x7fffffff
   1400247d3:	jmp    0x140024883
   1400247d8:	test   rdx,rdx
   1400247db:	je     0x1400247be
   1400247dd:	lea    rcx,[rsp+0x20]
   1400247e2:	mov    rdx,r9
   1400247e5:	call   0x14000a000
   1400247ea:	mov    rax,QWORD PTR [rsp+0x20]
   1400247ef:	cmp    QWORD PTR [rax+0x138],r14
   1400247f6:	jne    0x140024831
   1400247f8:	sub    rsi,rdi
   1400247fb:	movzx  ebx,WORD PTR [rsi+rdi*1]
   1400247ff:	lea    eax,[rbx-0x41]
   140024802:	cmp    ax,0x19
   140024806:	ja     0x14002480c
   140024808:	add    bx,0x20
   14002480c:	movzx  ecx,WORD PTR [rdi]
   14002480f:	lea    eax,[rcx-0x41]
   140024812:	cmp    ax,0x19
   140024816:	ja     0x14002481c
   140024818:	add    cx,0x20
   14002481c:	add    rdi,0x2
   140024820:	dec    rbp
   140024823:	je     0x140024868
   140024825:	test   bx,bx
   140024828:	je     0x140024868
   14002482a:	cmp    bx,cx
   14002482d:	je     0x1400247fb
   14002482f:	jmp    0x140024868
   140024831:	movzx  ecx,WORD PTR [rsi]
   140024834:	lea    rdx,[rsp+0x20]
   140024839:	call   0x140025078
   14002483e:	movzx  ecx,WORD PTR [rdi]
   140024841:	lea    rdx,[rsp+0x20]
   140024846:	movzx  ebx,ax
   140024849:	call   0x140025078
   14002484e:	lea    rsi,[rsi+0x2]
   140024852:	lea    rdi,[rdi+0x2]
   140024856:	movzx  ecx,ax
   140024859:	dec    rbp
   14002485c:	je     0x140024868
   14002485e:	test   bx,bx
   140024861:	je     0x140024868
   140024863:	cmp    bx,ax
   140024866:	je     0x140024831
   140024868:	movzx  ecx,cx
   14002486b:	movzx  eax,bx
   14002486e:	sub    eax,ecx
   140024870:	cmp    BYTE PTR [rsp+0x38],r14b
   140024875:	je     0x140024883
   140024877:	mov    rcx,QWORD PTR [rsp+0x30]
   14002487c:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140024883:	mov    rbx,QWORD PTR [rsp+0x50]
   140024888:	mov    rbp,QWORD PTR [rsp+0x58]
   14002488d:	mov    rsi,QWORD PTR [rsp+0x60]
   140024892:	mov    rdi,QWORD PTR [rsp+0x68]
   140024897:	add    rsp,0x40
   14002489b:	pop    r14
   14002489d:	ret    
   14002489e:	int3   
   14002489f:	int3   
   1400248a0:	mov    r11,rsp
   1400248a3:	mov    QWORD PTR [r11+0x20],rbx
   1400248a7:	push   rbp
   1400248a8:	push   rsi
   1400248a9:	push   rdi
   1400248aa:	sub    rsp,0x70
   1400248ae:	mov    rax,QWORD PTR [rip+0x1218b]        # 0x140036a40
   1400248b5:	xor    rax,rsp
   1400248b8:	mov    QWORD PTR [rsp+0x60],rax
   1400248bd:	mov    QWORD PTR [r11-0x50],r8
   1400248c1:	xor    ebx,ebx
   1400248c3:	mov    rbp,rdx
   1400248c6:	and    DWORD PTR [rsp+0x30],ebx
   1400248ca:	and    DWORD PTR [rsp+0x28],ebx
   1400248ce:	and    DWORD PTR [rsp+0x20],ebx
   1400248d2:	mov    r8,rdx
   1400248d5:	mov    rdi,rcx
   1400248d8:	lea    rdx,[r11-0x40]
   1400248dc:	lea    rcx,[r11-0x38]
   1400248e0:	xor    r9d,r9d
   1400248e3:	call   0x14001fa34
   1400248e8:	mov    esi,eax
   1400248ea:	test   al,0x4
   1400248ec:	je     0x1400248ff
   1400248ee:	and    DWORD PTR [rsp+0x40],0x0
   1400248f3:	and    DWORD PTR [rsp+0x44],0x0
   1400248f8:	mov    ebx,0x200
   1400248fd:	jmp    0x14002492d
   1400248ff:	lea    rdx,[rsp+0x40]
   140024904:	lea    rcx,[rsp+0x50]
   140024909:	call   0x14001e624
   14002490e:	test   sil,0x2
   140024912:	jne    0x140024919
   140024914:	cmp    eax,0x1
   140024917:	jne    0x14002491e
   140024919:	mov    ebx,0x80
   14002491e:	test   sil,0x1
   140024922:	jne    0x140024929
   140024924:	cmp    eax,0x2
   140024927:	jne    0x14002492d
   140024929:	bts    ebx,0x8
   14002492d:	mov    ecx,DWORD PTR [rsp+0x48]
   140024931:	mov    DWORD PTR [rdi],ebx
   140024933:	mov    rax,rdi
   140024936:	sub    ecx,ebp
   140024938:	mov    DWORD PTR [rdi+0x4],ecx
   14002493b:	mov    rcx,QWORD PTR [rsp+0x40]
   140024940:	mov    QWORD PTR [rdi+0x10],rcx
   140024944:	mov    rcx,QWORD PTR [rsp+0x60]
   140024949:	xor    rcx,rsp
   14002494c:	call   0x14000d0a0
   140024951:	mov    rbx,QWORD PTR [rsp+0xa8]
   140024959:	add    rsp,0x70
   14002495d:	pop    rdi
   14002495e:	pop    rsi
   14002495f:	pop    rbp
   140024960:	ret    
   140024961:	int3   
   140024962:	int3   
   140024963:	int3   
   140024964:	int3   
   140024965:	int3   
   140024966:	int3   
   140024967:	int3   
   140024968:	int3   
   140024969:	int3   
   14002496a:	int3   
   14002496b:	int3   
   14002496c:	int3   
   14002496d:	int3   
   14002496e:	int3   
   14002496f:	int3   
   140024970:	mov    QWORD PTR [rsp+0x18],rbx
   140024975:	mov    QWORD PTR [rsp+0x8],rcx
   14002497a:	push   rbp
   14002497b:	push   rsi
   14002497c:	push   rdi
   14002497d:	push   r12
   14002497f:	push   r13
   140024981:	push   r14
   140024983:	push   r15
   140024985:	sub    rsp,0x20
   140024989:	mov    ebp,r9d
   14002498c:	mov    r14d,r8d
   14002498f:	mov    r15,rdx
   140024992:	test   rdx,rdx
   140024995:	je     0x14002499a
   140024997:	mov    QWORD PTR [rdx],rcx
   14002499a:	test   rcx,rcx
   14002499d:	jne    0x1400249b6
   14002499f:	call   0x1400095b8
   1400249a4:	mov    DWORD PTR [rax],0x16
   1400249aa:	call   0x140008628
   1400249af:	xor    eax,eax
   1400249b1:	jmp    0x140024b43
   1400249b6:	test   r8d,r8d
   1400249b9:	je     0x1400249c4
   1400249bb:	lea    eax,[r8-0x2]
   1400249bf:	cmp    eax,0x22
   1400249c2:	ja     0x14002499f
   1400249c4:	movzx  esi,WORD PTR [rcx]
   1400249c7:	xor    edi,edi
   1400249c9:	lea    rbx,[rcx+0x2]
   1400249cd:	lea    r13d,[rdi+0x8]
   1400249d1:	jmp    0x1400249da
   1400249d3:	movzx  esi,WORD PTR [rbx]
   1400249d6:	add    rbx,0x2
   1400249da:	mov    edx,r13d
   1400249dd:	movzx  ecx,si
   1400249e0:	call   0x140023bc8
   1400249e5:	test   eax,eax
   1400249e7:	jne    0x1400249d3
   1400249e9:	cmp    si,0x2d
   1400249ed:	jne    0x1400249f4
   1400249ef:	or     ebp,0x2
   1400249f2:	jmp    0x1400249fa
   1400249f4:	cmp    si,0x2b
   1400249f8:	jne    0x140024a01
   1400249fa:	movzx  esi,WORD PTR [rbx]
   1400249fd:	add    rbx,0x2
   140024a01:	mov    r13d,0xffdf
   140024a07:	test   r14d,r14d
   140024a0a:	jne    0x140024a3b
   140024a0c:	movzx  ecx,si
   140024a0f:	call   0x14002514c
   140024a14:	test   eax,eax
   140024a16:	je     0x140024a20
   140024a18:	mov    r14d,0xa
   140024a1e:	jmp    0x140024a62
   140024a20:	movzx  eax,WORD PTR [rbx]
   140024a23:	sub    ax,0x58
   140024a27:	test   r13w,ax
   140024a2b:	je     0x140024a35
   140024a2d:	mov    r14d,0x8
   140024a33:	jmp    0x140024a62
   140024a35:	mov    r14d,0x10
   140024a3b:	cmp    r14d,0x10
   140024a3f:	jne    0x140024a62
   140024a41:	movzx  ecx,si
   140024a44:	call   0x14002514c
   140024a49:	test   eax,eax
   140024a4b:	jne    0x140024a62
   140024a4d:	movzx  eax,WORD PTR [rbx]
   140024a50:	sub    ax,0x58
   140024a54:	test   r13w,ax
   140024a58:	jne    0x140024a62
   140024a5a:	movzx  esi,WORD PTR [rbx+0x2]
   140024a5e:	add    rbx,0x4
   140024a62:	xor    edx,edx
   140024a64:	or     eax,0xffffffff
   140024a67:	div    r14d
   140024a6a:	mov    r13d,eax
   140024a6d:	mov    r12d,edx
   140024a70:	movzx  ecx,si
   140024a73:	call   0x14002514c
   140024a78:	cmp    eax,0xffffffff
   140024a7b:	jne    0x140024aa1
   140024a7d:	lea    ecx,[rsi-0x41]
   140024a80:	cmp    cx,0x19
   140024a84:	jbe    0x140024a8f
   140024a86:	lea    eax,[rsi-0x61]
   140024a89:	cmp    ax,0x19
   140024a8d:	ja     0x140024abd
   140024a8f:	lea    eax,[rsi-0x61]
   140024a92:	cmp    ax,0x19
   140024a96:	movzx  eax,si
   140024a99:	ja     0x140024a9e
   140024a9b:	sub    eax,0x20
   140024a9e:	add    eax,0xffffffc9
   140024aa1:	cmp    eax,r14d
   140024aa4:	jae    0x140024abd
   140024aa6:	or     ebp,0x8
   140024aa9:	cmp    edi,r13d
   140024aac:	jb     0x140024ad7
   140024aae:	jne    0x140024ab5
   140024ab0:	cmp    eax,r12d
   140024ab3:	jbe    0x140024ad7
   140024ab5:	or     ebp,0x4
   140024ab8:	test   r15,r15
   140024abb:	jne    0x140024add
   140024abd:	mov    r12,QWORD PTR [rsp+0x60]
   140024ac2:	sub    rbx,0x2
   140024ac6:	test   bpl,0x8
   140024aca:	jne    0x140024ae6
   140024acc:	test   r15,r15
   140024acf:	cmovne rbx,r12
   140024ad3:	xor    edi,edi
   140024ad5:	jmp    0x140024b31
   140024ad7:	imul   edi,r14d
   140024adb:	add    edi,eax
   140024add:	movzx  esi,WORD PTR [rbx]
   140024ae0:	add    rbx,0x2
   140024ae4:	jmp    0x140024a70
   140024ae6:	mov    esi,0x7fffffff
   140024aeb:	test   bpl,0x4
   140024aef:	jne    0x140024b0e
   140024af1:	test   bpl,0x1
   140024af5:	jne    0x140024b31
   140024af7:	mov    eax,ebp
   140024af9:	and    eax,0x2
   140024afc:	je     0x140024b06
   140024afe:	cmp    edi,0x80000000
   140024b04:	ja     0x140024b0e
   140024b06:	test   eax,eax
   140024b08:	jne    0x140024b31
   140024b0a:	cmp    edi,esi
   140024b0c:	jbe    0x140024b31
   140024b0e:	call   0x1400095b8
   140024b13:	mov    DWORD PTR [rax],0x22
   140024b19:	test   bpl,0x1
   140024b1d:	je     0x140024b24
   140024b1f:	or     edi,0xffffffff
   140024b22:	jmp    0x140024b31
   140024b24:	mov    al,bpl
   140024b27:	and    al,0x2
   140024b29:	neg    al
   140024b2b:	sbb    edi,edi
   140024b2d:	neg    edi
   140024b2f:	add    edi,esi
   140024b31:	test   r15,r15
   140024b34:	je     0x140024b39
   140024b36:	mov    QWORD PTR [r15],rbx
   140024b39:	test   bpl,0x2
   140024b3d:	je     0x140024b41
   140024b3f:	neg    edi
   140024b41:	mov    eax,edi
   140024b43:	mov    rbx,QWORD PTR [rsp+0x70]
   140024b48:	add    rsp,0x20
   140024b4c:	pop    r15
   140024b4e:	pop    r14
   140024b50:	pop    r13
   140024b52:	pop    r12
   140024b54:	pop    rdi
   140024b55:	pop    rsi
   140024b56:	pop    rbp
   140024b57:	ret    
   140024b58:	xor    r9d,r9d
   140024b5b:	jmp    0x140024970
   140024b60:	mov    r9d,0x1
   140024b66:	jmp    0x140024970
   140024b6b:	int3   
   140024b6c:	xor    r9d,r9d
   140024b6f:	jmp    0x140024970
   140024b74:	mov    r9d,0x1
   140024b7a:	jmp    0x140024970
   140024b7f:	int3   
   140024b80:	mov    QWORD PTR [rsp+0x8],rbx
   140024b85:	mov    QWORD PTR [rsp+0x10],rdx
   140024b8a:	push   rbp
   140024b8b:	push   rsi
   140024b8c:	push   rdi
   140024b8d:	push   r12
   140024b8f:	push   r13
   140024b91:	push   r14
   140024b93:	push   r15
   140024b95:	sub    rsp,0x40
   140024b99:	mov    r12,rdx
   140024b9c:	mov    rdx,rcx
   140024b9f:	lea    rcx,[rsp+0x20]
   140024ba4:	mov    r14d,r9d
   140024ba7:	mov    r15,r8
   140024baa:	call   0x14000a000
   140024baf:	test   r15,r15
   140024bb2:	je     0x140024bb7
   140024bb4:	mov    QWORD PTR [r15],r12
   140024bb7:	test   r12,r12
   140024bba:	je     0x140024bca
   140024bbc:	test   r14d,r14d
   140024bbf:	je     0x140024bdc
   140024bc1:	lea    eax,[r14-0x2]
   140024bc5:	cmp    eax,0x22
   140024bc8:	jbe    0x140024bdc
   140024bca:	call   0x1400095b8
   140024bcf:	mov    DWORD PTR [rax],0x16
   140024bd5:	call   0x140008628
   140024bda:	jmp    0x140024c37
   140024bdc:	movzx  esi,WORD PTR [r12]
   140024be1:	xor    edi,edi
   140024be3:	lea    rbx,[r12+0x2]
   140024be8:	lea    ebp,[rdi+0x8]
   140024beb:	jmp    0x140024bf4
   140024bed:	movzx  esi,WORD PTR [rbx]
   140024bf0:	add    rbx,0x2
   140024bf4:	mov    edx,ebp
   140024bf6:	movzx  ecx,si
   140024bf9:	call   0x140023bc8
   140024bfe:	test   eax,eax
   140024c00:	jne    0x140024bed
   140024c02:	mov    ebp,DWORD PTR [rsp+0xa0]
   140024c09:	cmp    si,0x2d
   140024c0d:	jne    0x140024c14
   140024c0f:	or     ebp,0x2
   140024c12:	jmp    0x140024c1a
   140024c14:	cmp    si,0x2b
   140024c18:	jne    0x140024c21
   140024c1a:	movzx  esi,WORD PTR [rbx]
   140024c1d:	add    rbx,0x2
   140024c21:	test   r14d,r14d
   140024c24:	je     0x140024c3e
   140024c26:	lea    eax,[r14-0x2]
   140024c2a:	cmp    eax,0x22
   140024c2d:	jbe    0x140024c3e
   140024c2f:	test   r15,r15
   140024c32:	je     0x140024c37
   140024c34:	mov    QWORD PTR [r15],r12
   140024c37:	xor    edi,edi
   140024c39:	jmp    0x140024db7
   140024c3e:	mov    r13d,0xffdf
   140024c44:	test   r14d,r14d
   140024c47:	jne    0x140024c78
   140024c49:	movzx  ecx,si
   140024c4c:	call   0x14002514c
   140024c51:	test   eax,eax
   140024c53:	je     0x140024c5d
   140024c55:	mov    r14d,0xa
   140024c5b:	jmp    0x140024c9f
   140024c5d:	movzx  eax,WORD PTR [rbx]
   140024c60:	sub    ax,0x58
   140024c64:	test   r13w,ax
   140024c68:	je     0x140024c72
   140024c6a:	mov    r14d,0x8
   140024c70:	jmp    0x140024c9f
   140024c72:	mov    r14d,0x10
   140024c78:	cmp    r14d,0x10
   140024c7c:	jne    0x140024c9f
   140024c7e:	movzx  ecx,si
   140024c81:	call   0x14002514c
   140024c86:	test   eax,eax
   140024c88:	jne    0x140024c9f
   140024c8a:	movzx  eax,WORD PTR [rbx]
   140024c8d:	sub    ax,0x58
   140024c91:	test   r13w,ax
   140024c95:	jne    0x140024c9f
   140024c97:	movzx  esi,WORD PTR [rbx+0x2]
   140024c9b:	add    rbx,0x4
   140024c9f:	movsxd rcx,r14d
   140024ca2:	xor    edx,edx
   140024ca4:	or     rax,0xffffffffffffffff
   140024ca8:	div    rcx
   140024cab:	movsxd r12,r14d
   140024cae:	mov    QWORD PTR [rsp+0x90],rdx
   140024cb6:	mov    r13,rax
   140024cb9:	movzx  ecx,si
   140024cbc:	call   0x14002514c
   140024cc1:	mov    r8d,eax
   140024cc4:	cmp    eax,0xffffffff
   140024cc7:	jne    0x140024cf0
   140024cc9:	lea    ecx,[rsi-0x41]
   140024ccc:	cmp    cx,0x19
   140024cd0:	jbe    0x140024cdb
   140024cd2:	lea    eax,[rsi-0x61]
   140024cd5:	cmp    ax,0x19
   140024cd9:	ja     0x140024d14
   140024cdb:	lea    eax,[rsi-0x61]
   140024cde:	movzx  r8d,si
   140024ce2:	cmp    ax,0x19
   140024ce6:	ja     0x140024cec
   140024ce8:	sub    r8d,0x20
   140024cec:	add    r8d,0xffffffc9
   140024cf0:	cmp    r8d,r14d
   140024cf3:	jae    0x140024d14
   140024cf5:	or     ebp,0x8
   140024cf8:	cmp    rdi,r13
   140024cfb:	jb     0x140024d31
   140024cfd:	jne    0x140024d0c
   140024cff:	mov    eax,r8d
   140024d02:	cmp    rax,QWORD PTR [rsp+0x90]
   140024d0a:	jbe    0x140024d31
   140024d0c:	or     ebp,0x4
   140024d0f:	test   r15,r15
   140024d12:	jne    0x140024d3e
   140024d14:	mov    r12,QWORD PTR [rsp+0x88]
   140024d1c:	sub    rbx,0x2
   140024d20:	test   bpl,0x8
   140024d24:	jne    0x140024d4a
   140024d26:	test   r15,r15
   140024d29:	cmovne rbx,r12
   140024d2d:	xor    edi,edi
   140024d2f:	jmp    0x140024da6
   140024d31:	mov    rcx,r12
   140024d34:	imul   rcx,rdi
   140024d38:	mov    edi,r8d
   140024d3b:	add    rdi,rcx
   140024d3e:	movzx  esi,WORD PTR [rbx]
   140024d41:	add    rbx,0x2
   140024d45:	jmp    0x140024cb9
   140024d4a:	movabs rsi,0x7fffffffffffffff
   140024d54:	test   bpl,0x4
   140024d58:	jne    0x140024d7f
   140024d5a:	test   bpl,0x1
   140024d5e:	jne    0x140024da6
   140024d60:	mov    eax,ebp
   140024d62:	and    eax,0x2
   140024d65:	je     0x140024d76
   140024d67:	movabs rcx,0x8000000000000000
   140024d71:	cmp    rdi,rcx
   140024d74:	ja     0x140024d7f
   140024d76:	test   eax,eax
   140024d78:	jne    0x140024da6
   140024d7a:	cmp    rdi,rsi
   140024d7d:	jbe    0x140024da6
   140024d7f:	call   0x1400095b8
   140024d84:	mov    DWORD PTR [rax],0x22
   140024d8a:	test   bpl,0x1
   140024d8e:	je     0x140024d96
   140024d90:	or     rdi,0xffffffffffffffff
   140024d94:	jmp    0x140024da6
   140024d96:	mov    al,bpl
   140024d99:	and    al,0x2
   140024d9b:	neg    al
   140024d9d:	sbb    rdi,rdi
   140024da0:	neg    rdi
   140024da3:	add    rdi,rsi
   140024da6:	test   r15,r15
   140024da9:	je     0x140024dae
   140024dab:	mov    QWORD PTR [r15],rbx
   140024dae:	test   bpl,0x2
   140024db2:	je     0x140024db7
   140024db4:	neg    rdi
   140024db7:	cmp    BYTE PTR [rsp+0x38],0x0
   140024dbc:	je     0x140024dca
   140024dbe:	mov    rcx,QWORD PTR [rsp+0x30]
   140024dc3:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140024dca:	mov    rax,rdi
   140024dcd:	mov    rbx,QWORD PTR [rsp+0x80]
   140024dd5:	add    rsp,0x40
   140024dd9:	pop    r15
   140024ddb:	pop    r14
   140024ddd:	pop    r13
   140024ddf:	pop    r12
   140024de1:	pop    rdi
   140024de2:	pop    rsi
   140024de3:	pop    rbp
   140024de4:	ret    
   140024de5:	int3   
   140024de6:	int3   
   140024de7:	int3   
   140024de8:	mov    rax,rsp
   140024deb:	mov    QWORD PTR [rax+0x8],rbx
   140024def:	mov    QWORD PTR [rax+0x10],rbp
   140024df3:	push   rsi
   140024df4:	push   rdi
   140024df5:	push   r14
   140024df7:	sub    rsp,0x50
   140024dfb:	and    QWORD PTR [rax-0x30],0x0
   140024e00:	and    QWORD PTR [rax-0x38],0x0
   140024e05:	and    DWORD PTR [rax-0x40],0x0
   140024e09:	and    QWORD PTR [rax-0x48],0x0
   140024e0e:	mov    r14,r8
   140024e11:	mov    rdi,rdx
   140024e14:	mov    r8,rcx
   140024e17:	mov    rsi,rcx
   140024e1a:	or     r9d,0xffffffff
   140024e1e:	xor    ecx,ecx
   140024e20:	xor    edx,edx
   140024e22:	call   QWORD PTR [rip+0x2288]        # 0x1400270b0
   140024e28:	movsxd rbp,eax
   140024e2b:	test   eax,eax
   140024e2d:	jne    0x140024e44
   140024e2f:	call   QWORD PTR [rip+0x224b]        # 0x140027080
   140024e35:	mov    ecx,eax
   140024e37:	call   0x140009568
   140024e3c:	xorps  xmm0,xmm0
   140024e3f:	jmp    0x140024ee3
   140024e44:	mov    rcx,rbp
   140024e47:	call   0x140007f54
   140024e4c:	mov    rbx,rax
   140024e4f:	test   rax,rax
   140024e52:	je     0x140024e3c
   140024e54:	and    QWORD PTR [rsp+0x38],0x0
   140024e5a:	and    QWORD PTR [rsp+0x30],0x0
   140024e60:	or     r9d,0xffffffff
   140024e64:	mov    r8,rsi
   140024e67:	xor    edx,edx
   140024e69:	xor    ecx,ecx
   140024e6b:	mov    DWORD PTR [rsp+0x28],ebp
   140024e6f:	mov    QWORD PTR [rsp+0x20],rax
   140024e74:	call   QWORD PTR [rip+0x2236]        # 0x1400270b0
   140024e7a:	test   eax,eax
   140024e7c:	jne    0x140024e95
   140024e7e:	call   QWORD PTR [rip+0x21fc]        # 0x140027080
   140024e84:	mov    ecx,eax
   140024e86:	call   0x140009568
   140024e8b:	mov    rcx,rbx
   140024e8e:	call   0x140006444
   140024e93:	jmp    0x140024e3c
   140024e95:	and    QWORD PTR [rsp+0x40],0x0
   140024e9b:	lea    r9,[rsp+0x40]
   140024ea0:	lea    rcx,[rsp+0x88]
   140024ea8:	mov    r8,r14
   140024eab:	mov    rdx,rbx
   140024eae:	call   0x140019600
   140024eb3:	test   rdi,rdi
   140024eb6:	je     0x140024ed2
   140024eb8:	mov    rax,QWORD PTR [rsp+0x40]
   140024ebd:	test   rax,rax
   140024ec0:	je     0x140024ece
   140024ec2:	sub    rax,rbx
   140024ec5:	lea    rax,[rsi+rax*2]
   140024ec9:	mov    QWORD PTR [rdi],rax
   140024ecc:	jmp    0x140024ed2
   140024ece:	and    QWORD PTR [rdi],0x0
   140024ed2:	mov    rcx,rbx
   140024ed5:	call   0x140006444
   140024eda:	movss  xmm0,DWORD PTR [rsp+0x88]
   140024ee3:	mov    rbx,QWORD PTR [rsp+0x70]
   140024ee8:	mov    rbp,QWORD PTR [rsp+0x78]
   140024eed:	add    rsp,0x50
   140024ef1:	pop    r14
   140024ef3:	pop    rdi
   140024ef4:	pop    rsi
   140024ef5:	ret    
   140024ef6:	int3   
   140024ef7:	int3   
   140024ef8:	sub    rsp,0x38
   140024efc:	xor    eax,eax
   140024efe:	mov    r9d,r8d
   140024f01:	mov    r8,rdx
   140024f04:	cmp    DWORD PTR [rip+0x14116],eax        # 0x140039020
   140024f0a:	mov    DWORD PTR [rsp+0x20],eax
   140024f0e:	mov    rdx,rcx
   140024f11:	jne    0x140024f1c
   140024f13:	lea    rcx,[rip+0x11fce]        # 0x140036ee8
   140024f1a:	jmp    0x140024f1e
   140024f1c:	xor    ecx,ecx
   140024f1e:	call   0x140024b80
   140024f23:	add    rsp,0x38
   140024f27:	ret    
   140024f28:	sub    rsp,0x38
   140024f2c:	and    DWORD PTR [rsp+0x20],0x0
   140024f31:	mov    rax,r9
   140024f34:	mov    r9d,r8d
   140024f37:	mov    r8,rdx
   140024f3a:	mov    rdx,rcx
   140024f3d:	mov    rcx,rax
   140024f40:	call   0x140024b80
   140024f45:	add    rsp,0x38
   140024f49:	ret    
   140024f4a:	int3   
   140024f4b:	int3   
   140024f4c:	sub    rsp,0x38
   140024f50:	and    DWORD PTR [rsp+0x20],0x0
   140024f55:	mov    rax,r9
   140024f58:	mov    r9d,r8d
   140024f5b:	mov    r8,rdx
   140024f5e:	mov    rdx,rcx
   140024f61:	mov    rcx,rax
   140024f64:	call   0x140024b80
   140024f69:	add    rsp,0x38
   140024f6d:	ret    
   140024f6e:	int3   
   140024f6f:	int3   
   140024f70:	jmp    0x1400252e4
   140024f75:	int3   
   140024f76:	int3   
   140024f77:	int3   
   140024f78:	sub    rsp,0x38
   140024f7c:	and    DWORD PTR [rsp+0x20],0x0
   140024f81:	mov    rax,r9
   140024f84:	mov    r9d,r8d
   140024f87:	mov    r8,rdx
   140024f8a:	mov    rdx,rcx
   140024f8d:	mov    rcx,rax
   140024f90:	call   0x140024b80
   140024f95:	add    rsp,0x38
   140024f99:	ret    
   140024f9a:	int3   
   140024f9b:	int3   
   140024f9c:	sub    rsp,0x38
   140024fa0:	cmp    DWORD PTR [rip+0x14079],0x0        # 0x140039020
   140024fa7:	mov    r9d,r8d
   140024faa:	mov    r8,rdx
   140024fad:	mov    rdx,rcx
   140024fb0:	mov    DWORD PTR [rsp+0x20],0x1
   140024fb8:	jne    0x140024fc3
   140024fba:	lea    rcx,[rip+0x11f27]        # 0x140036ee8
   140024fc1:	jmp    0x140024fc5
   140024fc3:	xor    ecx,ecx
   140024fc5:	call   0x140024b80
   140024fca:	add    rsp,0x38
   140024fce:	ret    
   140024fcf:	int3   
   140024fd0:	sub    rsp,0x38
   140024fd4:	mov    rax,r9
   140024fd7:	mov    r9d,r8d
   140024fda:	mov    r8,rdx
   140024fdd:	mov    rdx,rcx
   140024fe0:	mov    rcx,rax
   140024fe3:	mov    DWORD PTR [rsp+0x20],0x1
   140024feb:	call   0x140024b80
   140024ff0:	add    rsp,0x38
   140024ff4:	ret    
   140024ff5:	int3   
   140024ff6:	int3   
   140024ff7:	int3   
   140024ff8:	sub    rsp,0x38
   140024ffc:	mov    rax,r9
   140024fff:	mov    r9d,r8d
   140025002:	mov    r8,rdx
   140025005:	mov    rdx,rcx
   140025008:	mov    rcx,rax
   14002500b:	mov    DWORD PTR [rsp+0x20],0x1
   140025013:	call   0x140024b80
   140025018:	add    rsp,0x38
   14002501c:	ret    
   14002501d:	int3   
   14002501e:	int3   
   14002501f:	int3   
   140025020:	sub    rsp,0x38
   140025024:	mov    rax,r9
   140025027:	mov    r9d,r8d
   14002502a:	mov    r8,rdx
   14002502d:	mov    rdx,rcx
   140025030:	mov    rcx,rax
   140025033:	mov    DWORD PTR [rsp+0x20],0x1
   14002503b:	call   0x140024b80
   140025040:	add    rsp,0x38
   140025044:	ret    
   140025045:	int3   
   140025046:	int3   
   140025047:	int3   
   140025048:	xor    r8d,r8d
   14002504b:	jmp    0x140024de8
   140025050:	jmp    0x140024ef8
   140025055:	int3   
   140025056:	int3   
   140025057:	int3   
   140025058:	jmp    0x140025414
   14002505d:	int3   
   14002505e:	int3   
   14002505f:	int3   
   140025060:	jmp    0x140024ef8
   140025065:	int3   
   140025066:	int3   
   140025067:	int3   
   140025068:	jmp    0x140024f9c
   14002506d:	int3   
   14002506e:	int3   
   14002506f:	int3   
   140025070:	jmp    0x140024f9c
   140025075:	int3   
   140025076:	int3   
   140025077:	int3   
   140025078:	mov    QWORD PTR [rsp+0x10],rbx
   14002507d:	mov    WORD PTR [rsp+0x8],cx
   140025082:	push   rbp
   140025083:	mov    rbp,rsp
   140025086:	sub    rsp,0x50
   14002508a:	mov    eax,0xffff
   14002508f:	cmp    cx,ax
   140025092:	je     0x140025137
   140025098:	lea    rcx,[rbp-0x20]
   14002509c:	call   0x14000a000
   1400250a1:	mov    rbx,QWORD PTR [rbp-0x20]
   1400250a5:	mov    rax,QWORD PTR [rbx+0x138]
   1400250ac:	test   rax,rax
   1400250af:	jne    0x1400250c4
   1400250b1:	movzx  edx,WORD PTR [rbp+0x10]
   1400250b5:	lea    eax,[rdx-0x41]
   1400250b8:	cmp    ax,0x19
   1400250bc:	ja     0x140025123
   1400250be:	add    dx,0x20
   1400250c2:	jmp    0x140025123
   1400250c4:	movzx  ecx,WORD PTR [rbp+0x10]
   1400250c8:	mov    edx,0x100
   1400250cd:	cmp    cx,dx
   1400250d0:	jae    0x1400250f7
   1400250d2:	mov    edx,0x1
   1400250d7:	call   0x140023bc8
   1400250dc:	test   eax,eax
   1400250de:	jne    0x1400250e6
   1400250e0:	movzx  edx,WORD PTR [rbp+0x10]
   1400250e4:	jmp    0x140025123
   1400250e6:	movzx  ecx,WORD PTR [rbp+0x10]
   1400250ea:	mov    rax,QWORD PTR [rbx+0x110]
   1400250f1:	movzx  edx,BYTE PTR [rax+rcx*1]
   1400250f5:	jmp    0x140025123
   1400250f7:	lea    rcx,[rbp+0x20]
   1400250fb:	mov    r9d,0x1
   140025101:	lea    r8,[rbp+0x10]
   140025105:	mov    DWORD PTR [rsp+0x28],r9d
   14002510a:	mov    QWORD PTR [rsp+0x20],rcx
   14002510f:	mov    rcx,rax
   140025112:	call   0x14002541c
   140025117:	movzx  edx,WORD PTR [rbp+0x10]
   14002511b:	test   eax,eax
   14002511d:	je     0x140025123
   14002511f:	movzx  edx,WORD PTR [rbp+0x20]
   140025123:	cmp    BYTE PTR [rbp-0x8],0x0
   140025127:	je     0x140025134
   140025129:	mov    rcx,QWORD PTR [rbp-0x10]
   14002512d:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140025134:	movzx  eax,dx
   140025137:	mov    rbx,QWORD PTR [rsp+0x68]
   14002513c:	add    rsp,0x50
   140025140:	pop    rbp
   140025141:	ret    
   140025142:	int3   
   140025143:	int3   
   140025144:	xor    edx,edx
   140025146:	jmp    0x140025078
   14002514b:	int3   
   14002514c:	mov    edx,0x30
   140025151:	cmp    cx,dx
   140025154:	jb     0x1400252dd
   14002515a:	cmp    cx,0x3a
   14002515e:	jae    0x140025166
   140025160:	movzx  eax,cx
   140025163:	sub    eax,edx
   140025165:	ret    
   140025166:	mov    edx,0xff10
   14002516b:	cmp    cx,dx
   14002516e:	jae    0x1400252cf
   140025174:	mov    edx,0x660
   140025179:	cmp    cx,dx
   14002517c:	jb     0x1400252dd
   140025182:	lea    eax,[rdx+0xa]
   140025185:	cmp    cx,ax
   140025188:	jb     0x140025160
   14002518a:	mov    edx,0x6f0
   14002518f:	cmp    cx,dx
   140025192:	jb     0x1400252dd
   140025198:	lea    eax,[rdx+0xa]
   14002519b:	cmp    cx,ax
   14002519e:	jb     0x140025160
   1400251a0:	mov    edx,0x966
   1400251a5:	cmp    cx,dx
   1400251a8:	jb     0x1400252dd
   1400251ae:	lea    eax,[rdx+0xa]
   1400251b1:	cmp    cx,ax
   1400251b4:	jb     0x140025160
   1400251b6:	lea    edx,[rax+0x76]
   1400251b9:	cmp    cx,dx
   1400251bc:	jb     0x1400252dd
   1400251c2:	lea    eax,[rdx+0xa]
   1400251c5:	cmp    cx,ax
   1400251c8:	jb     0x140025160
   1400251ca:	lea    edx,[rax+0x76]
   1400251cd:	cmp    cx,dx
   1400251d0:	jb     0x1400252dd
   1400251d6:	lea    eax,[rdx+0xa]
   1400251d9:	cmp    cx,ax
   1400251dc:	jb     0x140025160
   1400251de:	lea    edx,[rax+0x76]
   1400251e1:	cmp    cx,dx
   1400251e4:	jb     0x1400252dd
   1400251ea:	lea    eax,[rdx+0xa]
   1400251ed:	cmp    cx,ax
   1400251f0:	jb     0x140025160
   1400251f6:	lea    edx,[rax+0x76]
   1400251f9:	cmp    cx,dx
   1400251fc:	jb     0x1400252dd
   140025202:	lea    eax,[rdx+0xa]
   140025205:	cmp    cx,ax
   140025208:	jb     0x140025160
   14002520e:	mov    edx,0xc66
   140025213:	cmp    cx,dx
   140025216:	jb     0x1400252dd
   14002521c:	lea    eax,[rdx+0xa]
   14002521f:	cmp    cx,ax
   140025222:	jb     0x140025160
   140025228:	lea    edx,[rax+0x76]
   14002522b:	cmp    cx,dx
   14002522e:	jb     0x1400252dd
   140025234:	lea    eax,[rdx+0xa]
   140025237:	cmp    cx,ax
   14002523a:	jb     0x140025160
   140025240:	lea    edx,[rax+0x76]
   140025243:	cmp    cx,dx
   140025246:	jb     0x1400252dd
   14002524c:	lea    eax,[rdx+0xa]
   14002524f:	cmp    cx,ax
   140025252:	jb     0x140025160
   140025258:	mov    edx,0xe50
   14002525d:	cmp    cx,dx
   140025260:	jb     0x1400252dd
   140025262:	lea    eax,[rdx+0xa]
   140025265:	cmp    cx,ax
   140025268:	jb     0x140025160
   14002526e:	lea    edx,[rax+0x76]
   140025271:	cmp    cx,dx
   140025274:	jb     0x1400252dd
   140025276:	lea    eax,[rdx+0xa]
   140025279:	cmp    cx,ax
   14002527c:	jb     0x140025160
   140025282:	lea    edx,[rax+0x46]
   140025285:	cmp    cx,dx
   140025288:	jb     0x1400252dd
   14002528a:	lea    eax,[rdx+0xa]
   14002528d:	cmp    cx,ax
   140025290:	jb     0x140025160
   140025296:	mov    edx,0x1040
   14002529b:	cmp    cx,dx
   14002529e:	jb     0x1400252dd
   1400252a0:	lea    eax,[rdx+0xa]
   1400252a3:	cmp    cx,ax
   1400252a6:	jb     0x140025160
   1400252ac:	mov    edx,0x17e0
   1400252b1:	cmp    cx,dx
   1400252b4:	jb     0x1400252dd
   1400252b6:	lea    eax,[rdx+0xa]
   1400252b9:	cmp    cx,ax
   1400252bc:	jb     0x140025160
   1400252c2:	lea    edx,[rax+0x26]
   1400252c5:	cmp    cx,dx
   1400252c8:	jb     0x1400252dd
   1400252ca:	lea    eax,[rdx+0xa]
   1400252cd:	jmp    0x1400252d4
   1400252cf:	mov    eax,0xff1a
   1400252d4:	cmp    cx,ax
   1400252d7:	jb     0x140025160
   1400252dd:	or     eax,0xffffffff
   1400252e0:	ret    
   1400252e1:	int3   
   1400252e2:	int3   
   1400252e3:	int3   
   1400252e4:	mov    QWORD PTR [rsp+0x18],rbx
   1400252e9:	mov    QWORD PTR [rsp+0x20],rsi
   1400252ee:	push   rdi
   1400252ef:	sub    rsp,0x70
   1400252f3:	movaps XMMWORD PTR [rsp+0x60],xmm6
   1400252f8:	mov    rax,QWORD PTR [rip+0x11741]        # 0x140036a40
   1400252ff:	xor    rax,rsp
   140025302:	mov    QWORD PTR [rsp+0x58],rax
   140025307:	mov    rsi,rcx
   14002530a:	mov    rdi,rcx
   14002530d:	mov    rbx,rdx
   140025310:	lea    rcx,[rsp+0x20]
   140025315:	mov    rdx,r8
   140025318:	call   0x14000a000
   14002531d:	test   rbx,rbx
   140025320:	je     0x140025325
   140025322:	mov    QWORD PTR [rbx],rdi
   140025325:	test   rsi,rsi
   140025328:	jne    0x140025342
   14002532a:	call   0x1400095b8
   14002532f:	mov    DWORD PTR [rax],0x16
   140025335:	call   0x140008628
   14002533a:	xorps  xmm6,xmm6
   14002533d:	jmp    0x1400253d9
   140025342:	movzx  ecx,WORD PTR [rsi]
   140025345:	jmp    0x14002534e
   140025347:	add    rdi,0x2
   14002534b:	movzx  ecx,WORD PTR [rdi]
   14002534e:	mov    edx,0x8
   140025353:	call   0x140023bc8
   140025358:	test   eax,eax
   14002535a:	jne    0x140025347
   14002535c:	lea    r8,[rsp+0x20]
   140025361:	lea    rcx,[rsp+0x40]
   140025366:	mov    rdx,rdi
   140025369:	call   0x140025468
   14002536e:	test   rbx,rbx
   140025371:	je     0x14002537e
   140025373:	movsxd rcx,DWORD PTR [rax+0x4]
   140025377:	lea    rdx,[rdi+rcx*2]
   14002537b:	mov    QWORD PTR [rbx],rdx
   14002537e:	test   DWORD PTR [rax],0x240
   140025384:	je     0x140025393
   140025386:	xorps  xmm6,xmm6
   140025389:	test   rbx,rbx
   14002538c:	je     0x1400253d9
   14002538e:	mov    QWORD PTR [rbx],rsi
   140025391:	jmp    0x1400253d9
   140025393:	test   BYTE PTR [rax],0x81
   140025396:	je     0x1400253af
   140025398:	cmp    WORD PTR [rdi],0x2d
   14002539c:	movsd  xmm6,QWORD PTR [rip+0x124ec]        # 0x140037890
   1400253a4:	jne    0x1400253c7
   1400253a6:	xorps  xmm6,XMMWORD PTR [rip+0x8ed3]        # 0x14002e280
   1400253ad:	jmp    0x1400253c7
   1400253af:	test   DWORD PTR [rax],0x100
   1400253b5:	je     0x1400253d4
   1400253b7:	movsd  xmm0,QWORD PTR [rax+0x10]
   1400253bc:	xorps  xmm6,xmm6
   1400253bf:	ucomisd xmm0,xmm6
   1400253c3:	jp     0x1400253d4
   1400253c5:	jne    0x1400253d4
   1400253c7:	call   0x1400095b8
   1400253cc:	mov    DWORD PTR [rax],0x22
   1400253d2:	jmp    0x1400253d9
   1400253d4:	movsd  xmm6,QWORD PTR [rax+0x10]
   1400253d9:	cmp    BYTE PTR [rsp+0x38],0x0
   1400253de:	je     0x1400253ec
   1400253e0:	mov    rax,QWORD PTR [rsp+0x30]
   1400253e5:	and    DWORD PTR [rax+0xc8],0xfffffffd
   1400253ec:	movaps xmm0,xmm6
   1400253ef:	mov    rcx,QWORD PTR [rsp+0x58]
   1400253f4:	xor    rcx,rsp
   1400253f7:	call   0x14000d0a0
   1400253fc:	lea    r11,[rsp+0x70]
   140025401:	mov    rbx,QWORD PTR [r11+0x20]
   140025405:	mov    rsi,QWORD PTR [r11+0x28]
   140025409:	movaps xmm6,XMMWORD PTR [rsp+0x60]
   14002540e:	mov    rsp,r11
   140025411:	pop    rdi
   140025412:	ret    
   140025413:	int3   
   140025414:	xor    r8d,r8d
   140025417:	jmp    0x1400252e4
   14002541c:	mov    QWORD PTR [rsp+0x8],rbx
   140025421:	mov    QWORD PTR [rsp+0x10],rsi
   140025426:	push   rdi
   140025427:	sub    rsp,0x30
   14002542b:	movsxd rax,r9d
   14002542e:	mov    rbx,r8
   140025431:	mov    edi,edx
   140025433:	mov    rsi,rcx
   140025436:	test   r9d,r9d
   140025439:	jle    0x140025446
   14002543b:	mov    rdx,rax
   14002543e:	mov    rcx,rbx
   140025441:	call   0x140019db0
   140025446:	mov    r8,rbx
   140025449:	mov    edx,edi
   14002544b:	mov    r9d,eax
   14002544e:	mov    rcx,rsi
   140025451:	mov    rbx,QWORD PTR [rsp+0x40]
   140025456:	mov    rsi,QWORD PTR [rsp+0x48]
   14002545b:	add    rsp,0x30
   14002545f:	pop    rdi
   140025460:	jmp    0x14000f5e8
   140025465:	int3   
   140025466:	int3   
   140025467:	int3   
   140025468:	mov    r11,rsp
   14002546b:	mov    QWORD PTR [r11+0x20],rbx
   14002546f:	push   rbp
   140025470:	push   rsi
   140025471:	push   rdi
   140025472:	sub    rsp,0x70
   140025476:	mov    rax,QWORD PTR [rip+0x115c3]        # 0x140036a40
   14002547d:	xor    rax,rsp
   140025480:	mov    QWORD PTR [rsp+0x60],rax
   140025485:	mov    QWORD PTR [r11-0x50],r8
   140025489:	xor    ebx,ebx
   14002548b:	mov    rbp,rdx
   14002548e:	and    DWORD PTR [rsp+0x30],ebx
   140025492:	and    DWORD PTR [rsp+0x28],ebx
   140025496:	and    DWORD PTR [rsp+0x20],ebx
   14002549a:	mov    r8,rdx
   14002549d:	mov    rdi,rcx
   1400254a0:	lea    rdx,[r11-0x40]
   1400254a4:	lea    rcx,[r11-0x38]
   1400254a8:	xor    r9d,r9d
   1400254ab:	call   0x1400255a8
   1400254b0:	mov    esi,eax
   1400254b2:	test   al,0x4
   1400254b4:	je     0x1400254c7
   1400254b6:	and    DWORD PTR [rsp+0x40],0x0
   1400254bb:	and    DWORD PTR [rsp+0x44],0x0
   1400254c0:	mov    ebx,0x200
   1400254c5:	jmp    0x1400254f5
   1400254c7:	lea    rdx,[rsp+0x40]
   1400254cc:	lea    rcx,[rsp+0x50]
   1400254d1:	call   0x14001e624
   1400254d6:	test   sil,0x2
   1400254da:	jne    0x1400254e1
   1400254dc:	cmp    eax,0x1
   1400254df:	jne    0x1400254e6
   1400254e1:	mov    ebx,0x80
   1400254e6:	test   sil,0x1
   1400254ea:	jne    0x1400254f1
   1400254ec:	cmp    eax,0x2
   1400254ef:	jne    0x1400254f5
   1400254f1:	bts    ebx,0x8
   1400254f5:	mov    rcx,QWORD PTR [rsp+0x48]
   1400254fa:	mov    DWORD PTR [rdi],ebx
   1400254fc:	mov    rax,rdi
   1400254ff:	sub    rcx,rbp
   140025502:	sar    rcx,1
   140025505:	mov    DWORD PTR [rdi+0x4],ecx
   140025508:	mov    rcx,QWORD PTR [rsp+0x40]
   14002550d:	mov    QWORD PTR [rdi+0x10],rcx
   140025511:	mov    rcx,QWORD PTR [rsp+0x60]
   140025516:	xor    rcx,rsp
   140025519:	call   0x14000d0a0
   14002551e:	mov    rbx,QWORD PTR [rsp+0xa8]
   140025526:	add    rsp,0x70
   14002552a:	pop    rdi
   14002552b:	pop    rsi
   14002552c:	pop    rbp
   14002552d:	ret    
   14002552e:	int3   
   14002552f:	int3   
   140025530:	mov    QWORD PTR [rsp+0x20],rbx
   140025535:	push   rdi
   140025536:	sub    rsp,0x60
   14002553a:	mov    rax,QWORD PTR [rip+0x114ff]        # 0x140036a40
   140025541:	xor    rax,rsp
   140025544:	mov    QWORD PTR [rsp+0x50],rax
   140025549:	mov    rax,QWORD PTR [rsp+0x90]
   140025551:	mov    rbx,rcx
   140025554:	lea    rcx,[rsp+0x40]
   140025559:	mov    QWORD PTR [rsp+0x38],rax
   14002555e:	xor    eax,eax
   140025560:	mov    DWORD PTR [rsp+0x30],eax
   140025564:	mov    DWORD PTR [rsp+0x28],eax
   140025568:	mov    DWORD PTR [rsp+0x20],eax
   14002556c:	call   0x1400255a8
   140025571:	lea    rcx,[rsp+0x40]
   140025576:	mov    rdx,rbx
   140025579:	mov    edi,eax
   14002557b:	call   0x14001f194
   140025580:	cmp    eax,0x1
   140025583:	jne    0x140025588
   140025585:	or     edi,0x2
   140025588:	mov    eax,edi
   14002558a:	mov    rcx,QWORD PTR [rsp+0x50]
   14002558f:	xor    rcx,rsp
   140025592:	call   0x14000d0a0
   140025597:	mov    rbx,QWORD PTR [rsp+0x88]
   14002559f:	add    rsp,0x60
   1400255a3:	pop    rdi
   1400255a4:	ret    
   1400255a5:	int3   
   1400255a6:	int3   
   1400255a7:	int3   
   1400255a8:	mov    QWORD PTR [rsp+0x18],rbx
   1400255ad:	push   rbp
   1400255ae:	push   rsi
   1400255af:	push   rdi
   1400255b0:	push   r12
   1400255b2:	push   r13
   1400255b4:	push   r14
   1400255b6:	push   r15
   1400255b8:	lea    rbp,[rsp-0x7]
   1400255bd:	sub    rsp,0xa0
   1400255c4:	mov    rax,QWORD PTR [rip+0x11475]        # 0x140036a40
   1400255cb:	xor    rax,rsp
   1400255ce:	mov    QWORD PTR [rbp-0x1],rax
   1400255d2:	mov    r15,QWORD PTR [rbp+0x7f]
   1400255d6:	xor    ebx,ebx
   1400255d8:	mov    DWORD PTR [rbp-0x6d],r9d
   1400255dc:	lea    r9d,[rbx+0x1]
   1400255e0:	mov    QWORD PTR [rbp-0x59],rcx
   1400255e4:	mov    QWORD PTR [rbp-0x69],rdx
   1400255e8:	lea    r10,[rbp-0x21]
   1400255ec:	mov    WORD PTR [rbp-0x71],bx
   1400255f0:	mov    r11d,ebx
   1400255f3:	mov    DWORD PTR [rbp-0x75],r9d
   1400255f7:	mov    r12d,ebx
   1400255fa:	mov    DWORD PTR [rbp-0x79],ebx
   1400255fd:	mov    r13d,ebx
   140025600:	mov    esi,ebx
   140025602:	mov    r14d,ebx
   140025605:	mov    ecx,ebx
   140025607:	test   r15,r15
   14002560a:	jne    0x140025623
   14002560c:	call   0x1400095b8
   140025611:	mov    DWORD PTR [rax],0x16
   140025617:	call   0x140008628
   14002561c:	xor    eax,eax
   14002561e:	jmp    0x140025efa
   140025623:	mov    rdi,r8
   140025626:	cmp    WORD PTR [r8],0x20
   14002562b:	ja     0x140025647
   14002562d:	movzx  eax,WORD PTR [r8]
   140025631:	movabs rdx,0x100002600
   14002563b:	bt     rdx,rax
   14002563f:	jae    0x140025647
   140025641:	add    r8,0x2
   140025645:	jmp    0x140025626
   140025647:	mov    eax,0x30
   14002564c:	movzx  edx,WORD PTR [r8]
   140025650:	add    r8,0x2
   140025654:	cmp    ecx,0x5
   140025657:	jg     0x14002594a
   14002565d:	je     0x140025927
   140025663:	mov    r9d,ecx
   140025666:	test   ecx,ecx
   140025668:	je     0x1400258b7
   14002566e:	dec    r9d
   140025671:	je     0x140025823
   140025677:	dec    r9d
   14002567a:	je     0x1400257c3
   140025680:	dec    r9d
   140025683:	je     0x140025722
   140025689:	dec    r9d
   14002568c:	jne    0x140025a87
   140025692:	mov    r9d,0x1
   140025698:	mov    r12d,r9d
   14002569b:	mov    DWORD PTR [rbp-0x79],r9d
   14002569f:	lea    eax,[r9+0x2f]
   1400256a3:	test   r11d,r11d
   1400256a6:	jne    0x1400256de
   1400256a8:	jmp    0x1400256b5
   1400256aa:	movzx  edx,WORD PTR [r8]
   1400256ae:	sub    r14d,r9d
   1400256b1:	add    r8,0x2
   1400256b5:	cmp    dx,ax
   1400256b8:	je     0x1400256aa
   1400256ba:	jmp    0x1400256de
   1400256bc:	cmp    dx,0x39
   1400256c0:	ja     0x1400256e3
   1400256c2:	cmp    r11d,0x19
   1400256c6:	jae    0x1400256d6
   1400256c8:	sub    dl,al
   1400256ca:	add    r11d,r9d
   1400256cd:	mov    BYTE PTR [r10],dl
   1400256d0:	add    r10,r9
   1400256d3:	sub    r14d,r9d
   1400256d6:	movzx  edx,WORD PTR [r8]
   1400256da:	add    r8,0x2
   1400256de:	cmp    dx,ax
   1400256e1:	jae    0x1400256bc
   1400256e3:	movzx  ecx,dx
   1400256e6:	lea    eax,[rcx-0x2b]
   1400256e9:	test   eax,0xfffffffd
   1400256ee:	je     0x140025714
   1400256f0:	cmp    ecx,0x43
   1400256f3:	jle    0x140025a95
   1400256f9:	cmp    ecx,0x45
   1400256fc:	jle    0x14002570a
   1400256fe:	lea    eax,[rcx-0x64]
   140025701:	cmp    eax,r9d
   140025704:	ja     0x140025a95
   14002570a:	mov    ecx,0x6
   14002570f:	jmp    0x140025647
   140025714:	sub    r8,0x2
   140025718:	mov    ecx,0xb
   14002571d:	jmp    0x140025647
   140025722:	mov    eax,0x1
   140025727:	mov    r12d,eax
   14002572a:	lea    r9d,[rax+0x2f]
   14002572e:	jmp    0x140025755
   140025730:	cmp    dx,0x39
   140025734:	ja     0x14002575b
   140025736:	cmp    r11d,0x19
   14002573a:	jae    0x14002574a
   14002573c:	sub    dl,r9b
   14002573f:	add    r11d,eax
   140025742:	mov    BYTE PTR [r10],dl
   140025745:	add    r10,rax
   140025748:	jmp    0x14002574d
   14002574a:	add    r14d,eax
   14002574d:	movzx  edx,WORD PTR [r8]
   140025751:	add    r8,0x2
   140025755:	cmp    dx,r9w
   140025759:	jae    0x140025730
   14002575b:	mov    rax,QWORD PTR [r15]
   14002575e:	movzx  r9d,dx
   140025762:	mov    rcx,QWORD PTR [rax+0xf0]
   140025769:	mov    rax,QWORD PTR [rcx]
   14002576c:	movsx  ecx,BYTE PTR [rax]
   14002576f:	cmp    r9d,ecx
   140025772:	jne    0x140025781
   140025774:	mov    ecx,0x4
   140025779:	mov    r9,r12
   14002577c:	jmp    0x140025647
   140025781:	lea    eax,[r9-0x2b]
   140025785:	test   eax,0xfffffffd
   14002578a:	je     0x1400257b8
   14002578c:	cmp    r9d,0x43
   140025790:	jle    0x1400257a8
   140025792:	cmp    r9d,0x45
   140025796:	jle    0x1400257b0
   140025798:	lea    eax,[r9-0x64]
   14002579c:	mov    r9,r12
   14002579f:	cmp    eax,r9d
   1400257a2:	jbe    0x14002570a
   1400257a8:	mov    r15,r12
   1400257ab:	jmp    0x140025af5
   1400257b0:	mov    r9,r12
   1400257b3:	jmp    0x14002570a
   1400257b8:	sub    r8,0x2
   1400257bc:	mov    ecx,0xb
   1400257c1:	jmp    0x140025779
   1400257c3:	lea    eax,[rdx-0x31]
   1400257c6:	mov    ecx,0x8
   1400257cb:	cmp    ax,cx
   1400257ce:	ja     0x1400257e9
   1400257d0:	mov    ecx,0x3
   1400257d5:	sub    r8,0x2
   1400257d9:	mov    eax,0x30
   1400257de:	mov    r9d,0x1
   1400257e4:	jmp    0x14002564c
   1400257e9:	mov    rax,QWORD PTR [r15]
   1400257ec:	mov    rcx,QWORD PTR [rax+0xf0]
   1400257f3:	mov    rax,QWORD PTR [rcx]
   1400257f6:	movsx  ecx,BYTE PTR [rax]
   1400257f9:	movzx  eax,dx
   1400257fc:	cmp    eax,ecx
   1400257fe:	jne    0x140025807
   140025800:	mov    ecx,0x5
   140025805:	jmp    0x1400257d9
   140025807:	mov    eax,0x30
   14002580c:	cmp    dx,ax
   14002580f:	jne    0x1400259ff
   140025815:	mov    r9d,0x1
   14002581b:	mov    ecx,r9d
   14002581e:	jmp    0x14002564c
   140025823:	mov    r9d,0x1
   140025829:	lea    eax,[rdx-0x31]
   14002582c:	lea    ecx,[r9+0x7]
   140025830:	mov    r12d,r9d
   140025833:	cmp    ax,cx
   140025836:	ja     0x140025845
   140025838:	lea    ecx,[r9+0x2]
   14002583c:	sub    r8,0x2
   140025840:	jmp    0x140025647
   140025845:	mov    rax,QWORD PTR [r15]
   140025848:	movzx  r9d,dx
   14002584c:	mov    rcx,QWORD PTR [rax+0xf0]
   140025853:	mov    rax,QWORD PTR [rcx]
   140025856:	movsx  ecx,BYTE PTR [rax]
   140025859:	cmp    r9d,ecx
   14002585c:	je     0x140025774
   140025862:	lea    eax,[r9-0x2b]
   140025866:	test   eax,0xfffffffd
   14002586b:	je     0x1400257b8
   140025871:	mov    eax,0x30
   140025876:	cmp    r9d,eax
   140025879:	je     0x1400258af
   14002587b:	cmp    r9d,0x43
   14002587f:	jle    0x1400257a8
   140025885:	cmp    r9d,0x45
   140025889:	jle    0x1400258aa
   14002588b:	lea    eax,[r9-0x64]
   14002588f:	mov    r9,r12
   140025892:	cmp    eax,r9d
   140025895:	ja     0x1400257a8
   14002589b:	mov    eax,0x30
   1400258a0:	mov    ecx,0x6
   1400258a5:	jmp    0x14002564c
   1400258aa:	mov    r9,r12
   1400258ad:	jmp    0x1400258a0
   1400258af:	mov    r9,r12
   1400258b2:	jmp    0x14002581b
   1400258b7:	lea    eax,[rdx-0x31]
   1400258ba:	mov    ecx,0x8
   1400258bf:	cmp    ax,cx
   1400258c2:	jbe    0x1400257d0
   1400258c8:	mov    rax,QWORD PTR [r15]
   1400258cb:	movzx  r9d,dx
   1400258cf:	mov    rcx,QWORD PTR [rax+0xf0]
   1400258d6:	mov    rax,QWORD PTR [rcx]
   1400258d9:	movsx  ecx,BYTE PTR [rax]
   1400258dc:	cmp    r9d,ecx
   1400258df:	je     0x140025800
   1400258e5:	cmp    r9d,0x2b
   1400258e9:	je     0x140025919
   1400258eb:	cmp    r9d,0x2d
   1400258ef:	je     0x140025908
   1400258f1:	mov    eax,0x30
   1400258f6:	cmp    r9d,eax
   1400258f9:	je     0x140025815
   1400258ff:	sub    r8,0x2
   140025903:	jmp    0x140025a02
   140025908:	mov    ecx,0x2
   14002590d:	mov    DWORD PTR [rbp-0x71],0x8000
   140025914:	jmp    0x1400257d9
   140025919:	mov    ecx,0x2
   14002591e:	mov    WORD PTR [rbp-0x71],bx
   140025922:	jmp    0x1400257d9
   140025927:	sub    dx,ax
   14002592a:	mov    ecx,0x9
   14002592f:	mov    DWORD PTR [rbp-0x79],r9d
   140025933:	cmp    dx,cx
   140025936:	ja     0x1400259ff
   14002593c:	mov    ecx,0x4
   140025941:	sub    r8,0x2
   140025945:	jmp    0x14002564c
   14002594a:	mov    r9d,ecx
   14002594d:	sub    r9d,0x6
   140025951:	je     0x140025a4f
   140025957:	dec    r9d
   14002595a:	je     0x1400259da
   14002595c:	dec    r9d
   14002595f:	je     0x1400259a2
   140025961:	dec    r9d
   140025964:	je     0x140025aa1
   14002596a:	cmp    r9d,0x2
   14002596e:	jne    0x140025a87
   140025974:	cmp    DWORD PTR [rbp+0x77],ebx
   140025977:	je     0x1400258ff
   140025979:	movzx  eax,dx
   14002597c:	lea    rdi,[r8-0x2]
   140025980:	cmp    eax,0x2b
   140025983:	je     0x140025998
   140025985:	cmp    eax,0x2d
   140025988:	jne    0x1400259ff
   14002598a:	or     DWORD PTR [rbp-0x75],0xffffffff
   14002598e:	mov    ecx,0x7
   140025993:	jmp    0x1400257d9
   140025998:	mov    ecx,0x7
   14002599d:	jmp    0x1400257d9
   1400259a2:	mov    r9d,0x1
   1400259a8:	mov    r13d,r9d
   1400259ab:	lea    eax,[r9+0x2f]
   1400259af:	jmp    0x1400259b9
   1400259b1:	movzx  edx,WORD PTR [r8]
   1400259b5:	add    r8,0x2
   1400259b9:	cmp    dx,ax
   1400259bc:	je     0x1400259b1
   1400259be:	sub    dx,0x31
   1400259c2:	mov    ecx,0x8
   1400259c7:	cmp    dx,cx
   1400259ca:	ja     0x140025a95
   1400259d0:	mov    ecx,0x9
   1400259d5:	jmp    0x140025941
   1400259da:	lea    eax,[rdx-0x31]
   1400259dd:	mov    ecx,0x8
   1400259e2:	cmp    ax,cx
   1400259e5:	ja     0x1400259f1
   1400259e7:	mov    ecx,0x9
   1400259ec:	jmp    0x1400257d5
   1400259f1:	mov    eax,0x30
   1400259f6:	cmp    dx,ax
   1400259f9:	je     0x1400257de
   1400259ff:	mov    r8,rdi
   140025a02:	mov    r15d,0x1
   140025a08:	mov    rax,QWORD PTR [rbp-0x69]
   140025a0c:	mov    QWORD PTR [rax],r8
   140025a0f:	test   r12d,r12d
   140025a12:	je     0x140025ed0
   140025a18:	cmp    r11d,0x18
   140025a1c:	jbe    0x140025a37
   140025a1e:	mov    al,BYTE PTR [rbp-0xa]
   140025a21:	cmp    al,0x5
   140025a23:	jl     0x140025a2b
   140025a25:	add    al,r15b
   140025a28:	mov    BYTE PTR [rbp-0xa],al
   140025a2b:	sub    r10,r15
   140025a2e:	mov    r11d,0x18
   140025a34:	add    r14d,r15d
   140025a37:	test   r11d,r11d
   140025a3a:	jne    0x140025b04
   140025a40:	movzx  edx,bx
   140025a43:	movzx  eax,bx
   140025a46:	mov    edi,ebx
   140025a48:	mov    ecx,ebx
   140025a4a:	jmp    0x140025edf
   140025a4f:	lea    eax,[rdx-0x31]
   140025a52:	mov    ecx,0x8
   140025a57:	lea    rdi,[r8-0x4]
   140025a5b:	cmp    ax,cx
   140025a5e:	jbe    0x1400259e7
   140025a60:	movzx  eax,dx
   140025a63:	cmp    eax,0x2b
   140025a66:	je     0x140025a82
   140025a68:	cmp    eax,0x2d
   140025a6b:	je     0x14002598a
   140025a71:	lea    r9d,[rcx+0x28]
   140025a75:	cmp    eax,r9d
   140025a78:	jne    0x1400259ff
   140025a7a:	mov    eax,r9d
   140025a7d:	jmp    0x1400257de
   140025a82:	mov    ecx,0x7
   140025a87:	cmp    ecx,0xa
   140025a8a:	je     0x140025a02
   140025a90:	jmp    0x1400257d9
   140025a95:	sub    r8,0x2
   140025a99:	mov    r15,r9
   140025a9c:	jmp    0x140025a08
   140025aa1:	mov    r15d,0x1
   140025aa7:	mov    r13d,r15d
   140025aaa:	lea    r9d,[r15+0x2f]
   140025aae:	jmp    0x140025ad2
   140025ab0:	cmp    dx,0x39
   140025ab4:	ja     0x140025aef
   140025ab6:	lea    esi,[rsi+rsi*4]
   140025ab9:	movzx  eax,dx
   140025abc:	lea    esi,[rsi-0x18]
   140025abf:	lea    esi,[rax+rsi*2]
   140025ac2:	cmp    esi,0x1450
   140025ac8:	jg     0x140025ada
   140025aca:	movzx  edx,WORD PTR [r8]
   140025ace:	add    r8,0x2
   140025ad2:	cmp    dx,r9w
   140025ad6:	jae    0x140025ab0
   140025ad8:	jmp    0x140025aef
   140025ada:	mov    esi,0x1451
   140025adf:	jmp    0x140025aef
   140025ae1:	cmp    dx,0x39
   140025ae5:	ja     0x140025af5
   140025ae7:	movzx  edx,WORD PTR [r8]
   140025aeb:	add    r8,0x2
   140025aef:	cmp    dx,r9w
   140025af3:	jae    0x140025ae1
   140025af5:	sub    r8,0x2
   140025af9:	jmp    0x140025a08
   140025afe:	dec    r11d
   140025b01:	add    r14d,r15d
   140025b04:	sub    r10,r15
   140025b07:	cmp    BYTE PTR [r10],bl
   140025b0a:	je     0x140025afe
   140025b0c:	lea    r8,[rbp-0x41]
   140025b10:	lea    rcx,[rbp-0x21]
   140025b14:	mov    edx,r11d
   140025b17:	call   0x140023c30
   140025b1c:	cmp    DWORD PTR [rbp-0x75],ebx
   140025b1f:	jge    0x140025b23
   140025b21:	neg    esi
   140025b23:	add    esi,r14d
   140025b26:	test   r13d,r13d
   140025b29:	jne    0x140025b2e
   140025b2b:	add    esi,DWORD PTR [rbp+0x67]
   140025b2e:	cmp    DWORD PTR [rbp-0x79],ebx
   140025b31:	jne    0x140025b36
   140025b33:	sub    esi,DWORD PTR [rbp+0x6f]
   140025b36:	cmp    esi,0x1450
   140025b3c:	jg     0x140025eba
   140025b42:	cmp    esi,0xffffebb0
   140025b48:	jl     0x140025eac
   140025b4e:	lea    r14,[rip+0x11a6b]        # 0x1400375c0
   140025b55:	sub    r14,0x60
   140025b59:	test   esi,esi
   140025b5b:	je     0x140025e9a
   140025b61:	jns    0x140025b70
   140025b63:	lea    r14,[rip+0x11bb6]        # 0x140037720
   140025b6a:	neg    esi
   140025b6c:	sub    r14,0x60
   140025b70:	cmp    DWORD PTR [rbp-0x6d],ebx
   140025b73:	jne    0x140025b79
   140025b75:	mov    WORD PTR [rbp-0x41],bx
   140025b79:	test   esi,esi
   140025b7b:	je     0x140025e9a
   140025b81:	mov    edi,0x80000000
   140025b86:	mov    r9d,0x7fff
   140025b8c:	mov    eax,esi
   140025b8e:	add    r14,0x54
   140025b92:	sar    esi,0x3
   140025b95:	mov    QWORD PTR [rbp-0x61],r14
   140025b99:	and    eax,0x7
   140025b9c:	je     0x140025e92
   140025ba2:	cdqe   
   140025ba4:	mov    r11d,0x8000
   140025baa:	lea    rcx,[rax+rax*2]
   140025bae:	lea    rdx,[r14+rcx*4]
   140025bb2:	mov    QWORD PTR [rbp-0x69],rdx
   140025bb6:	cmp    WORD PTR [rdx],r11w
   140025bba:	jb     0x140025be1
   140025bbc:	mov    eax,DWORD PTR [rdx+0x8]
   140025bbf:	movsd  xmm0,QWORD PTR [rdx]
   140025bc3:	lea    rdx,[rbp-0x31]
   140025bc7:	mov    DWORD PTR [rbp-0x29],eax
   140025bca:	movsd  QWORD PTR [rbp-0x31],xmm0
   140025bcf:	mov    rax,QWORD PTR [rbp-0x31]
   140025bd3:	shr    rax,0x10
   140025bd7:	mov    QWORD PTR [rbp-0x69],rdx
   140025bdb:	sub    eax,r15d
   140025bde:	mov    DWORD PTR [rbp-0x2f],eax
   140025be1:	movzx  eax,WORD PTR [rdx+0xa]
   140025be5:	movzx  ecx,WORD PTR [rbp-0x37]
   140025be9:	mov    QWORD PTR [rbp-0x51],rbx
   140025bed:	movzx  r12d,ax
   140025bf1:	and    ax,r9w
   140025bf5:	mov    DWORD PTR [rbp-0x49],ebx
   140025bf8:	xor    r12w,cx
   140025bfc:	and    cx,r9w
   140025c00:	and    r12w,r11w
   140025c04:	lea    r8d,[rcx+rax*1]
   140025c08:	cmp    cx,r9w
   140025c0c:	jae    0x140025e7e
   140025c12:	cmp    ax,r9w
   140025c16:	jae    0x140025e7e
   140025c1c:	mov    r10d,0xbffd
   140025c22:	cmp    r8w,r10w
   140025c26:	ja     0x140025e7e
   140025c2c:	mov    r10d,0x3fbf
   140025c32:	cmp    r8w,r10w
   140025c36:	ja     0x140025c44
   140025c38:	mov    QWORD PTR [rbp-0x3d],rbx
   140025c3c:	mov    DWORD PTR [rbp-0x41],ebx
   140025c3f:	jmp    0x140025e92
   140025c44:	test   cx,cx
   140025c47:	jne    0x140025c69
   140025c49:	add    r8w,r15w
   140025c4d:	test   DWORD PTR [rbp-0x39],0x7fffffff
   140025c54:	jne    0x140025c69
   140025c56:	cmp    DWORD PTR [rbp-0x3d],ebx
   140025c59:	jne    0x140025c69
   140025c5b:	cmp    DWORD PTR [rbp-0x41],ebx
   140025c5e:	jne    0x140025c69
   140025c60:	mov    WORD PTR [rbp-0x37],bx
   140025c64:	jmp    0x140025e92
   140025c69:	test   ax,ax
   140025c6c:	jne    0x140025c84
   140025c6e:	add    r8w,r15w
   140025c72:	test   DWORD PTR [rdx+0x8],0x7fffffff
   140025c79:	jne    0x140025c84
   140025c7b:	cmp    DWORD PTR [rdx+0x4],ebx
   140025c7e:	jne    0x140025c84
   140025c80:	cmp    DWORD PTR [rdx],ebx
   140025c82:	je     0x140025c38
   140025c84:	mov    r13d,ebx
   140025c87:	lea    r9,[rbp-0x51]
   140025c8b:	mov    r10d,0x5
   140025c91:	mov    DWORD PTR [rbp-0x79],r10d
   140025c95:	test   r10d,r10d
   140025c98:	jle    0x140025d0b
   140025c9a:	lea    eax,[r13*2+0x0]
   140025ca2:	lea    rdi,[rbp-0x41]
   140025ca6:	lea    r14,[rdx+0x8]
   140025caa:	movsxd rcx,eax
   140025cad:	mov    eax,r13d
   140025cb0:	and    eax,r15d
   140025cb3:	add    rdi,rcx
   140025cb6:	mov    edx,eax
   140025cb8:	movzx  eax,WORD PTR [r14]
   140025cbc:	movzx  ecx,WORD PTR [rdi]
   140025cbf:	mov    r11d,ebx
   140025cc2:	imul   ecx,eax
   140025cc5:	mov    eax,DWORD PTR [r9]
   140025cc8:	lea    r15d,[rax+rcx*1]
   140025ccc:	cmp    r15d,eax
   140025ccf:	jb     0x140025cd6
   140025cd1:	cmp    r15d,ecx
   140025cd4:	jae    0x140025cdc
   140025cd6:	mov    r11d,0x1
   140025cdc:	mov    DWORD PTR [r9],r15d
   140025cdf:	mov    r15d,0x1
   140025ce5:	test   r11d,r11d
   140025ce8:	je     0x140025cef
   140025cea:	add    WORD PTR [r9+0x4],r15w
   140025cef:	mov    r11d,DWORD PTR [rbp-0x79]
   140025cf3:	add    rdi,0x2
   140025cf7:	sub    r14,0x2
   140025cfb:	sub    r11d,r15d
   140025cfe:	mov    DWORD PTR [rbp-0x79],r11d
   140025d02:	test   r11d,r11d
   140025d05:	jg     0x140025cb8
   140025d07:	mov    rdx,QWORD PTR [rbp-0x69]
   140025d0b:	sub    r10d,r15d
   140025d0e:	add    r9,0x2
   140025d12:	add    r13d,r15d
   140025d15:	test   r10d,r10d
   140025d18:	jg     0x140025c91
   140025d1e:	mov    r10d,DWORD PTR [rbp-0x49]
   140025d22:	mov    r9d,DWORD PTR [rbp-0x51]
   140025d26:	mov    eax,0xc002
   140025d2b:	add    r8w,ax
   140025d2f:	mov    edi,0x80000000
   140025d34:	mov    r13d,0xffff
   140025d3a:	test   r8w,r8w
   140025d3e:	jle    0x140025d7f
   140025d40:	test   edi,r10d
   140025d43:	jne    0x140025d79
   140025d45:	mov    r11d,DWORD PTR [rbp-0x4d]
   140025d49:	mov    edx,r9d
   140025d4c:	add    r10d,r10d
   140025d4f:	shr    edx,0x1f
   140025d52:	add    r9d,r9d
   140025d55:	mov    ecx,r11d
   140025d58:	shr    ecx,0x1f
   140025d5b:	lea    eax,[r11+r11*1]
   140025d5f:	add    r8w,r13w
   140025d63:	or     eax,edx
   140025d65:	or     r10d,ecx
   140025d68:	mov    DWORD PTR [rbp-0x51],r9d
   140025d6c:	mov    DWORD PTR [rbp-0x4d],eax
   140025d6f:	mov    DWORD PTR [rbp-0x49],r10d
   140025d73:	test   r8w,r8w
   140025d77:	jg     0x140025d40
   140025d79:	test   r8w,r8w
   140025d7d:	jg     0x140025de9
   140025d7f:	add    r8w,r13w
   140025d83:	jns    0x140025de9
   140025d85:	movzx  eax,r8w
   140025d89:	mov    edi,ebx
   140025d8b:	neg    ax
   140025d8e:	movzx  edx,ax
   140025d91:	add    r8w,dx
   140025d95:	test   BYTE PTR [rbp-0x51],r15b
   140025d99:	je     0x140025d9e
   140025d9b:	add    edi,r15d
   140025d9e:	mov    r11d,DWORD PTR [rbp-0x4d]
   140025da2:	mov    eax,r10d
   140025da5:	shr    r9d,1
   140025da8:	mov    ecx,r11d
   140025dab:	shl    eax,0x1f
   140025dae:	shr    r11d,1
   140025db1:	shl    ecx,0x1f
   140025db4:	or     r11d,eax
   140025db7:	shr    r10d,1
   140025dba:	or     r9d,ecx
   140025dbd:	mov    DWORD PTR [rbp-0x4d],r11d
   140025dc1:	mov    DWORD PTR [rbp-0x51],r9d
   140025dc5:	sub    rdx,r15
   140025dc8:	jne    0x140025d95
   140025dca:	test   edi,edi
   140025dcc:	mov    DWORD PTR [rbp-0x49],r10d
   140025dd0:	mov    edi,0x80000000
   140025dd5:	je     0x140025de9
   140025dd7:	movzx  eax,r9w
   140025ddb:	or     ax,r15w
   140025ddf:	mov    WORD PTR [rbp-0x51],ax
   140025de3:	mov    r9d,DWORD PTR [rbp-0x51]
   140025de7:	jmp    0x140025ded
   140025de9:	movzx  eax,WORD PTR [rbp-0x51]
   140025ded:	mov    r14,QWORD PTR [rbp-0x61]
   140025df1:	mov    r11d,0x8000
   140025df7:	cmp    ax,r11w
   140025dfb:	ja     0x140025e0d
   140025dfd:	and    r9d,0x1ffff
   140025e04:	cmp    r9d,0x18000
   140025e0b:	jne    0x140025e55
   140025e0d:	mov    eax,DWORD PTR [rbp-0x4f]
   140025e10:	or     ecx,0xffffffff
   140025e13:	cmp    eax,ecx
   140025e15:	jne    0x140025e4f
   140025e17:	mov    eax,DWORD PTR [rbp-0x4b]
   140025e1a:	mov    DWORD PTR [rbp-0x4f],ebx
   140025e1d:	cmp    eax,ecx
   140025e1f:	jne    0x140025e43
   140025e21:	movzx  eax,WORD PTR [rbp-0x47]
   140025e25:	mov    DWORD PTR [rbp-0x4b],ebx
   140025e28:	cmp    ax,r13w
   140025e2c:	jne    0x140025e39
   140025e2e:	mov    WORD PTR [rbp-0x47],r11w
   140025e33:	add    r8w,r15w
   140025e37:	jmp    0x140025e49
   140025e39:	add    ax,r15w
   140025e3d:	mov    WORD PTR [rbp-0x47],ax
   140025e41:	jmp    0x140025e49
   140025e43:	add    eax,r15d
   140025e46:	mov    DWORD PTR [rbp-0x4b],eax
   140025e49:	mov    r10d,DWORD PTR [rbp-0x49]
   140025e4d:	jmp    0x140025e55
   140025e4f:	add    eax,r15d
   140025e52:	mov    DWORD PTR [rbp-0x4f],eax
   140025e55:	mov    r9d,0x7fff
   140025e5b:	cmp    r8w,r9w
   140025e5f:	jae    0x140025e7e
   140025e61:	movzx  eax,WORD PTR [rbp-0x4f]
   140025e65:	or     r8w,r12w
   140025e69:	mov    DWORD PTR [rbp-0x3b],r10d
   140025e6d:	mov    WORD PTR [rbp-0x41],ax
   140025e71:	mov    eax,DWORD PTR [rbp-0x4d]
   140025e74:	mov    WORD PTR [rbp-0x37],r8w
   140025e79:	mov    DWORD PTR [rbp-0x3f],eax
   140025e7c:	jmp    0x140025e92
   140025e7e:	neg    r12w
   140025e82:	mov    QWORD PTR [rbp-0x41],rbx
   140025e86:	sbb    eax,eax
   140025e88:	and    eax,edi
   140025e8a:	add    eax,0x7fff8000
   140025e8f:	mov    DWORD PTR [rbp-0x39],eax
   140025e92:	test   esi,esi
   140025e94:	jne    0x140025b8c
   140025e9a:	mov    eax,DWORD PTR [rbp-0x39]
   140025e9d:	movzx  edx,WORD PTR [rbp-0x41]
   140025ea1:	mov    ecx,DWORD PTR [rbp-0x3f]
   140025ea4:	mov    edi,DWORD PTR [rbp-0x3b]
   140025ea7:	shr    eax,0x10
   140025eaa:	jmp    0x140025edf
   140025eac:	mov    edx,ebx
   140025eae:	movzx  eax,bx
   140025eb1:	mov    edi,ebx
   140025eb3:	mov    ecx,ebx
   140025eb5:	mov    ebx,r15d
   140025eb8:	jmp    0x140025edf
   140025eba:	mov    ecx,ebx
   140025ebc:	movzx  edx,bx
   140025ebf:	mov    eax,0x7fff
   140025ec4:	mov    ebx,0x2
   140025ec9:	mov    edi,0x80000000
   140025ece:	jmp    0x140025edf
   140025ed0:	movzx  edx,bx
   140025ed3:	movzx  eax,bx
   140025ed6:	mov    edi,ebx
   140025ed8:	mov    ecx,ebx
   140025eda:	mov    ebx,0x4
   140025edf:	mov    r8,QWORD PTR [rbp-0x59]
   140025ee3:	or     ax,WORD PTR [rbp-0x71]
   140025ee7:	mov    WORD PTR [r8+0xa],ax
   140025eec:	mov    eax,ebx
   140025eee:	mov    WORD PTR [r8],dx
   140025ef2:	mov    DWORD PTR [r8+0x2],ecx
   140025ef6:	mov    DWORD PTR [r8+0x6],edi
   140025efa:	mov    rcx,QWORD PTR [rbp-0x1]
   140025efe:	xor    rcx,rsp
   140025f01:	call   0x14000d0a0
   140025f06:	mov    rbx,QWORD PTR [rsp+0xf0]
   140025f0e:	add    rsp,0xa0
   140025f15:	pop    r15
   140025f17:	pop    r14
   140025f19:	pop    r13
   140025f1b:	pop    r12
   140025f1d:	pop    rdi
   140025f1e:	pop    rsi
   140025f1f:	pop    rbp
   140025f20:	ret    
   140025f21:	int3   
   140025f22:	jmp    QWORD PTR [rip+0x1148]        # 0x140027070
   140025f28:	jmp    QWORD PTR [rip+0x114a]        # 0x140027078
   140025f2e:	jmp    QWORD PTR [rip+0x114c]        # 0x140027080
   140025f34:	jmp    QWORD PTR [rip+0x114e]        # 0x140027088
   140025f3a:	jmp    QWORD PTR [rip+0x1150]        # 0x140027090
   140025f40:	jmp    QWORD PTR [rip+0x1152]        # 0x140027098
   140025f46:	jmp    QWORD PTR [rip+0x1154]        # 0x1400270a0
   140025f4c:	jmp    QWORD PTR [rip+0x1156]        # 0x1400270a8
   140025f52:	jmp    QWORD PTR [rip+0x1158]        # 0x1400270b0
   140025f58:	jmp    QWORD PTR [rip+0x115a]        # 0x1400270b8
   140025f5e:	jmp    QWORD PTR [rip+0x115c]        # 0x1400270c0
   140025f64:	jmp    QWORD PTR [rip+0x115e]        # 0x1400270c8
   140025f6a:	jmp    QWORD PTR [rip+0x1160]        # 0x1400270d0
   140025f70:	jmp    QWORD PTR [rip+0x1162]        # 0x1400270d8
   140025f76:	jmp    QWORD PTR [rip+0x1164]        # 0x1400270e0
   140025f7c:	jmp    QWORD PTR [rip+0x1166]        # 0x1400270e8
   140025f82:	jmp    QWORD PTR [rip+0x1168]        # 0x1400270f0
   140025f88:	jmp    QWORD PTR [rip+0x116a]        # 0x1400270f8
   140025f8e:	jmp    QWORD PTR [rip+0x116c]        # 0x140027100
   140025f94:	jmp    QWORD PTR [rip+0x116e]        # 0x140027108
   140025f9a:	jmp    QWORD PTR [rip+0x1170]        # 0x140027110
   140025fa0:	jmp    QWORD PTR [rip+0x1172]        # 0x140027118
   140025fa6:	jmp    QWORD PTR [rip+0x1174]        # 0x140027120
   140025fac:	jmp    QWORD PTR [rip+0x1176]        # 0x140027128
   140025fb2:	jmp    QWORD PTR [rip+0x1178]        # 0x140027130
   140025fb8:	jmp    QWORD PTR [rip+0x117a]        # 0x140027138
   140025fbe:	jmp    QWORD PTR [rip+0x117c]        # 0x140027140
   140025fc4:	jmp    QWORD PTR [rip+0x117e]        # 0x140027148
   140025fca:	jmp    QWORD PTR [rip+0x1180]        # 0x140027150
   140025fd0:	jmp    QWORD PTR [rip+0x1182]        # 0x140027158
   140025fd6:	jmp    QWORD PTR [rip+0x1184]        # 0x140027160
   140025fdc:	jmp    QWORD PTR [rip+0x1186]        # 0x140027168
   140025fe2:	jmp    QWORD PTR [rip+0x1188]        # 0x140027170
   140025fe8:	jmp    QWORD PTR [rip+0x118a]        # 0x140027178
   140025fee:	jmp    QWORD PTR [rip+0x118c]        # 0x140027180
   140025ff4:	jmp    QWORD PTR [rip+0x118e]        # 0x140027188
   140025ffa:	jmp    QWORD PTR [rip+0x1190]        # 0x140027190
   140026000:	jmp    QWORD PTR [rip+0x1192]        # 0x140027198
   140026006:	jmp    QWORD PTR [rip+0x1194]        # 0x1400271a0
   14002600c:	jmp    QWORD PTR [rip+0x1196]        # 0x1400271a8
   140026012:	jmp    QWORD PTR [rip+0x1198]        # 0x1400271b0
   140026018:	jmp    QWORD PTR [rip+0x119a]        # 0x1400271b8
   14002601e:	jmp    QWORD PTR [rip+0x119c]        # 0x1400271c0
   140026024:	jmp    QWORD PTR [rip+0x119e]        # 0x1400271c8
   14002602a:	jmp    QWORD PTR [rip+0x11a0]        # 0x1400271d0
   140026030:	jmp    QWORD PTR [rip+0x11a2]        # 0x1400271d8
   140026036:	jmp    QWORD PTR [rip+0x11a4]        # 0x1400271e0
   14002603c:	jmp    QWORD PTR [rip+0x11a6]        # 0x1400271e8
   140026042:	jmp    QWORD PTR [rip+0x11a8]        # 0x1400271f0
   140026048:	jmp    QWORD PTR [rip+0x11aa]        # 0x1400271f8
   14002604e:	jmp    QWORD PTR [rip+0x11ac]        # 0x140027200
   140026054:	jmp    QWORD PTR [rip+0x11ae]        # 0x140027208
   14002605a:	jmp    QWORD PTR [rip+0x11b0]        # 0x140027210
   140026060:	jmp    QWORD PTR [rip+0x11b2]        # 0x140027218
   140026066:	jmp    QWORD PTR [rip+0x11b4]        # 0x140027220
   14002606c:	jmp    QWORD PTR [rip+0x11b6]        # 0x140027228
   140026072:	jmp    QWORD PTR [rip+0x11b8]        # 0x140027230
   140026078:	jmp    QWORD PTR [rip+0x11ba]        # 0x140027238
   14002607e:	jmp    QWORD PTR [rip+0x11bc]        # 0x140027240
   140026084:	jmp    QWORD PTR [rip+0x11be]        # 0x140027248
   14002608a:	jmp    QWORD PTR [rip+0x11c0]        # 0x140027250
   140026090:	jmp    QWORD PTR [rip+0x11c2]        # 0x140027258
   140026096:	jmp    QWORD PTR [rip+0x11c4]        # 0x140027260
   14002609c:	jmp    QWORD PTR [rip+0x11c6]        # 0x140027268
   1400260a2:	jmp    QWORD PTR [rip+0x11c8]        # 0x140027270
   1400260a8:	jmp    QWORD PTR [rip+0x11ca]        # 0x140027278
   1400260ae:	jmp    QWORD PTR [rip+0x11cc]        # 0x140027280
   1400260b4:	jmp    QWORD PTR [rip+0x11ce]        # 0x140027288
   1400260ba:	jmp    QWORD PTR [rip+0x11d0]        # 0x140027290
   1400260c0:	jmp    QWORD PTR [rip+0x11d2]        # 0x140027298
   1400260c6:	jmp    QWORD PTR [rip+0x11d4]        # 0x1400272a0
   1400260cc:	jmp    QWORD PTR [rip+0x11d6]        # 0x1400272a8
   1400260d2:	jmp    QWORD PTR [rip+0x11d8]        # 0x1400272b0
   1400260d8:	jmp    QWORD PTR [rip+0x11da]        # 0x1400272b8
   1400260de:	jmp    QWORD PTR [rip+0x11dc]        # 0x1400272c0
   1400260e4:	jmp    QWORD PTR [rip+0xf66]        # 0x140027050
   1400260ea:	jmp    QWORD PTR [rip+0xf58]        # 0x140027048
   1400260f0:	jmp    QWORD PTR [rip+0xf4a]        # 0x140027040
   1400260f6:	jmp    QWORD PTR [rip+0x11cc]        # 0x1400272c8
   1400260fc:	int3   
   1400260fd:	int3   
   1400260fe:	int3   
   1400260ff:	int3   
   140026100:	mov    QWORD PTR [rsp+0x10],rdx
   140026105:	push   rbx
   140026106:	push   rbp
   140026107:	sub    rsp,0x28
   14002610b:	mov    rbp,rdx
   14002610e:	mov    rbx,QWORD PTR [rbp+0x60]
   140026112:	cmp    QWORD PTR [rbx+0x18],0x8
   140026117:	jb     0x140026121
   140026119:	mov    rcx,QWORD PTR [rbx]
   14002611c:	call   0x140005454
   140026121:	mov    QWORD PTR [rbx+0x18],0x7
   140026129:	mov    QWORD PTR [rbx+0x10],0x0
   140026131:	xor    eax,eax
   140026133:	mov    WORD PTR [rbx],ax
   140026136:	xor    edx,edx
   140026138:	xor    ecx,ecx
   14002613a:	call   0x140006894
   14002613f:	nop
   140026140:	mov    QWORD PTR [rsp+0x10],rdx
   140026145:	push   rbp
   140026146:	sub    rsp,0x20
   14002614a:	mov    rbp,rdx
   14002614d:	mov    rcx,QWORD PTR [rbp+0x68]
   140026151:	mov    QWORD PTR [rbp+0x68],rcx
   140026155:	xor    eax,eax
   140026157:	inc    rcx
   14002615a:	je     0x140026171
   14002615c:	cmp    rcx,0xffffffffffffffff
   140026160:	ja     0x14002616c
   140026162:	call   0x1400053e8
   140026167:	test   rax,rax
   14002616a:	jne    0x140026171
   14002616c:	call   0x14000514c
   140026171:	mov    QWORD PTR [rbp+0x78],rax
   140026175:	lea    rax,[rip+0xfffffffffffdba99]        # 0x140001c15
   14002617c:	add    rsp,0x20
   140026180:	pop    rbp
   140026181:	ret    
   140026182:	int3   
   140026183:	mov    QWORD PTR [rsp+0x10],rdx
   140026188:	push   rbx
   140026189:	push   rbp
   14002618a:	sub    rsp,0x28
   14002618e:	mov    rbp,rdx
   140026191:	mov    rbx,QWORD PTR [rbp+0x60]
   140026195:	cmp    QWORD PTR [rbx+0x18],0x10
   14002619a:	jb     0x1400261a4
   14002619c:	mov    rcx,QWORD PTR [rbx]
   14002619f:	call   0x140005454
   1400261a4:	mov    QWORD PTR [rbx+0x18],0xf
   1400261ac:	mov    QWORD PTR [rbx+0x10],0x0
   1400261b4:	mov    BYTE PTR [rbx],0x0
   1400261b7:	xor    edx,edx
   1400261b9:	xor    ecx,ecx
   1400261bb:	call   0x140006894
   1400261c0:	nop
   1400261c1:	int3   
   1400261c2:	int3   
   1400261c3:	int3   
   1400261c4:	int3   
   1400261c5:	int3   
   1400261c6:	int3   
   1400261c7:	int3   
   1400261c8:	int3   
   1400261c9:	int3   
   1400261ca:	int3   
   1400261cb:	int3   
   1400261cc:	int3   
   1400261cd:	int3   
   1400261ce:	int3   
   1400261cf:	int3   
   1400261d0:	mov    QWORD PTR [rsp+0x10],rdx
   1400261d5:	push   rbp
   1400261d6:	sub    rsp,0x20
   1400261da:	mov    rbp,rdx
   1400261dd:	mov    rcx,QWORD PTR [rbp+0x68]
   1400261e1:	mov    QWORD PTR [rbp+0x68],rcx
   1400261e5:	xor    eax,eax
   1400261e7:	inc    rcx
   1400261ea:	je     0x14002620d
   1400261ec:	movabs rax,0x7fffffffffffffff
   1400261f6:	cmp    rcx,rax
   1400261f9:	ja     0x140026208
   1400261fb:	add    rcx,rcx
   1400261fe:	call   0x1400053e8
   140026203:	test   rax,rax
   140026206:	jne    0x14002620d
   140026208:	call   0x14000514c
   14002620d:	mov    QWORD PTR [rbp+0x78],rax
   140026211:	lea    rax,[rip+0xfffffffffffdbb23]        # 0x140001d3b
   140026218:	add    rsp,0x20
   14002621c:	pop    rbp
   14002621d:	ret    
   14002621e:	int3   
   14002621f:	mov    QWORD PTR [rsp+0x10],rdx
   140026224:	push   rbx
   140026225:	push   rbp
   140026226:	sub    rsp,0x28
   14002622a:	mov    rbp,rdx
   14002622d:	mov    rbx,QWORD PTR [rbp+0x60]
   140026231:	cmp    QWORD PTR [rbx+0x18],0x8
   140026236:	jb     0x140026240
   140026238:	mov    rcx,QWORD PTR [rbx]
   14002623b:	call   0x140005454
   140026240:	mov    QWORD PTR [rbx+0x18],0x7
   140026248:	mov    QWORD PTR [rbx+0x10],0x0
   140026250:	xor    eax,eax
   140026252:	mov    WORD PTR [rbx],ax
   140026255:	xor    edx,edx
   140026257:	xor    ecx,ecx
   140026259:	call   0x140006894
   14002625e:	nop
   14002625f:	int3   
   140026260:	lea    rcx,[rdx+0x40]
   140026267:	jmp    0x140001800
   14002626c:	lea    rcx,[rdx+0x60]
   140026273:	jmp    0x140001800
   140026278:	lea    rcx,[rdx+0x88]
   14002627f:	jmp    0x140001800
   140026284:	lea    rcx,[rdx+0x20]
   14002628b:	jmp    0x140001800
   140026290:	lea    rcx,[rdx+0x30]
   140026297:	jmp    0x140001800
   14002629c:	int3   
   14002629d:	int3   
   14002629e:	int3   
   14002629f:	int3   
   1400262a0:	lea    rcx,[rdx+0x40]
   1400262a7:	jmp    0x140001800
   1400262ac:	lea    rcx,[rdx+0x60]
   1400262b3:	jmp    0x140001800
   1400262b8:	rex push rbp
   1400262ba:	sub    rsp,0x20
   1400262be:	mov    rbp,rdx
   1400262c1:	mov    eax,DWORD PTR [rbp+0x30]
   1400262c4:	and    eax,0x1
   1400262c7:	test   eax,eax
   1400262c9:	je     0x1400262db
   1400262cb:	and    DWORD PTR [rbp+0x30],0xfffffffe
   1400262cf:	mov    rcx,QWORD PTR [rbp+0xb0]
   1400262d6:	call   0x140001800
   1400262db:	add    rsp,0x20
   1400262df:	pop    rbp
   1400262e0:	ret    
   1400262e1:	int3   
   1400262e2:	int3   
   1400262e3:	int3   
   1400262e4:	int3   
   1400262e5:	int3   
   1400262e6:	int3   
   1400262e7:	int3   
   1400262e8:	int3   
   1400262e9:	int3   
   1400262ea:	int3   
   1400262eb:	int3   
   1400262ec:	int3   
   1400262ed:	int3   
   1400262ee:	int3   
   1400262ef:	int3   
   1400262f0:	lea    rcx,[rdx+0x70]
   1400262f7:	jmp    0x140001800
   1400262fc:	lea    rcx,[rdx+0x50]
   140026303:	jmp    0x140001800
   140026308:	rex push rbp
   14002630a:	sub    rsp,0x20
   14002630e:	mov    rbp,rdx
   140026311:	add    rsp,0x20
   140026315:	pop    rbp
   140026316:	jmp    0x140006250
   14002631b:	int3   
   14002631c:	rex push rbp
   14002631e:	sub    rsp,0x20
   140026322:	mov    rbp,rdx
   140026325:	cmp    DWORD PTR [rbp+0x80],0x0
   14002632c:	je     0x140026339
   14002632e:	mov    ecx,0x8
   140026333:	call   0x14000897c
   140026338:	nop
   140026339:	add    rsp,0x20
   14002633d:	pop    rbp
   14002633e:	ret    
   14002633f:	int3   
   140026340:	rex push rbp
   140026342:	sub    rsp,0x40
   140026346:	mov    rbp,rdx
   140026349:	lea    rax,[rbp+0x40]
   14002634d:	mov    QWORD PTR [rsp+0x30],rax
   140026352:	mov    rax,QWORD PTR [rbp+0x90]
   140026359:	mov    QWORD PTR [rsp+0x28],rax
   14002635e:	mov    rax,QWORD PTR [rbp+0x88]
   140026365:	mov    QWORD PTR [rsp+0x20],rax
   14002636a:	mov    r9,QWORD PTR [rbp+0x80]
   140026371:	mov    r8,QWORD PTR [rbp+0x78]
   140026375:	mov    rdx,QWORD PTR [rbp+0x70]
   140026379:	call   0x140006cbc
   14002637e:	nop
   14002637f:	add    rsp,0x40
   140026383:	pop    rbp
   140026384:	ret    
   140026385:	int3   
   140026386:	rex push rbp
   140026388:	sub    rsp,0x20
   14002638c:	mov    rbp,rdx
   14002638f:	mov    rax,QWORD PTR [rcx]
   140026392:	mov    rdx,rcx
   140026395:	mov    ecx,DWORD PTR [rax]
   140026397:	call   0x14000e254
   14002639c:	nop
   14002639d:	add    rsp,0x20
   1400263a1:	pop    rbp
   1400263a2:	ret    
   1400263a3:	int3   
   1400263a4:	rex push rbp
   1400263a6:	sub    rsp,0x20
   1400263aa:	mov    rbp,rdx
   1400263ad:	mov    rcx,QWORD PTR [rip+0xfddc]        # 0x140036190
   1400263b4:	add    rsp,0x20
   1400263b8:	pop    rbp
   1400263b9:	rex.W jmp QWORD PTR [rip+0xd50]        # 0x140027110
   1400263c0:	int3   
   1400263c1:	int3   
   1400263c2:	int3   
   1400263c3:	int3   
   1400263c4:	int3   
   1400263c5:	int3   
   1400263c6:	int3   
   1400263c7:	int3   
   1400263c8:	int3   
   1400263c9:	int3   
   1400263ca:	int3   
   1400263cb:	int3   
   1400263cc:	int3   
   1400263cd:	int3   
   1400263ce:	int3   
   1400263cf:	int3   
   1400263d0:	rex push rbp
   1400263d2:	sub    rsp,0x20
   1400263d6:	mov    rbp,rdx
   1400263d9:	mov    rax,QWORD PTR [rcx]
   1400263dc:	xor    ecx,ecx
   1400263de:	cmp    DWORD PTR [rax],0xc0000005
   1400263e4:	sete   cl
   1400263e7:	mov    eax,ecx
   1400263e9:	add    rsp,0x20
   1400263ed:	pop    rbp
   1400263ee:	ret    
   1400263ef:	int3   
   1400263f0:	rex push rbp
   1400263f2:	sub    rsp,0x20
   1400263f6:	mov    rbp,rdx
   1400263f9:	xor    ecx,ecx
   1400263fb:	add    rsp,0x20
   1400263ff:	pop    rbp
   140026400:	jmp    0x14000897c
   140026405:	int3   
   140026406:	rex push rbp
   140026408:	sub    rsp,0x20
   14002640c:	mov    rbp,rdx
   14002640f:	cmp    DWORD PTR [rbp+0x60],0x0
   140026413:	je     0x14002641d
   140026415:	xor    ecx,ecx
   140026417:	call   0x14000897c
   14002641c:	nop
   14002641d:	add    rsp,0x20
   140026421:	pop    rbp
   140026422:	ret    
   140026423:	int3   
   140026424:	rex push rbp
   140026426:	sub    rsp,0x20
   14002642a:	mov    rbp,rdx
   14002642d:	xor    ecx,ecx
   14002642f:	add    rsp,0x20
   140026433:	pop    rbp
   140026434:	jmp    0x14000897c
   140026439:	int3   
   14002643a:	rex push rbp
   14002643c:	sub    rsp,0x20
   140026440:	mov    rbp,rdx
   140026443:	mov    ecx,0xd
   140026448:	add    rsp,0x20
   14002644c:	pop    rbp
   14002644d:	jmp    0x14000897c
   140026452:	int3   
   140026453:	rex push rbp
   140026455:	sub    rsp,0x20
   140026459:	mov    rbp,rdx
   14002645c:	mov    ecx,0xd
   140026461:	add    rsp,0x20
   140026465:	pop    rbp
   140026466:	jmp    0x14000897c
   14002646b:	int3   
   14002646c:	rex push rbp
   14002646e:	sub    rsp,0x20
   140026472:	mov    rbp,rdx
   140026475:	mov    rax,QWORD PTR [rcx]
   140026478:	cmp    DWORD PTR [rax],0xc0000005
   14002647e:	je     0x14002648c
   140026480:	cmp    DWORD PTR [rax],0xc000001d
   140026486:	je     0x14002648c
   140026488:	xor    eax,eax
   14002648a:	jmp    0x140026491
   14002648c:	mov    eax,0x1
   140026491:	add    rsp,0x20
   140026495:	pop    rbp
   140026496:	ret    
   140026497:	int3   
   140026498:	rex push rbp
   14002649a:	sub    rsp,0x20
   14002649e:	mov    rbp,rdx
   1400264a1:	mov    ecx,0xd
   1400264a6:	add    rsp,0x20
   1400264aa:	pop    rbp
   1400264ab:	jmp    0x14000897c
   1400264b0:	int3   
   1400264b1:	rex push rbp
   1400264b3:	sub    rsp,0x20
   1400264b7:	mov    rbp,rdx
   1400264ba:	mov    ecx,0xc
   1400264bf:	add    rsp,0x20
   1400264c3:	pop    rbp
   1400264c4:	jmp    0x14000897c
   1400264c9:	int3   
   1400264ca:	rex push rbp
   1400264cc:	sub    rsp,0x20
   1400264d0:	mov    rbp,rdx
   1400264d3:	mov    ecx,0xd
   1400264d8:	add    rsp,0x20
   1400264dc:	pop    rbp
   1400264dd:	jmp    0x14000897c
   1400264e2:	int3   
   1400264e3:	rex push rbp
   1400264e5:	sub    rsp,0x20
   1400264e9:	mov    rbp,rdx
   1400264ec:	mov    ecx,0xc
   1400264f1:	add    rsp,0x20
   1400264f5:	pop    rbp
   1400264f6:	jmp    0x14000897c
   1400264fb:	int3   
   1400264fc:	rex push rbp
   1400264fe:	sub    rsp,0x20
   140026502:	mov    rbp,rdx
   140026505:	mov    QWORD PTR [rbp+0x70],rcx
   140026509:	mov    QWORD PTR [rbp+0x68],rcx
   14002650d:	mov    rax,QWORD PTR [rbp+0x68]
   140026511:	mov    rcx,QWORD PTR [rax]
   140026514:	mov    QWORD PTR [rbp+0x28],rcx
   140026518:	mov    DWORD PTR [rbp+0x20],0x0
   14002651f:	mov    rax,QWORD PTR [rbp+0x28]
   140026523:	cmp    DWORD PTR [rax],0xe06d7363
   140026529:	jne    0x140026578
   14002652b:	mov    rax,QWORD PTR [rbp+0x28]
   14002652f:	cmp    DWORD PTR [rax+0x18],0x4
   140026533:	jne    0x140026578
   140026535:	mov    rax,QWORD PTR [rbp+0x28]
   140026539:	cmp    DWORD PTR [rax+0x20],0x19930520
   140026540:	je     0x14002655c
   140026542:	mov    rax,QWORD PTR [rbp+0x28]
   140026546:	cmp    DWORD PTR [rax+0x20],0x19930521
   14002654d:	je     0x14002655c
   14002654f:	mov    rax,QWORD PTR [rbp+0x28]
   140026553:	cmp    DWORD PTR [rax+0x20],0x19930522
   14002655a:	jne    0x140026578
   14002655c:	mov    rdx,QWORD PTR [rbp+0x28]
   140026560:	mov    rax,QWORD PTR [rbp+0xd8]
   140026567:	mov    rcx,QWORD PTR [rax+0x28]
   14002656b:	cmp    QWORD PTR [rdx+0x28],rcx
   14002656f:	jne    0x140026578
   140026571:	mov    DWORD PTR [rbp+0x20],0x1
   140026578:	mov    rax,QWORD PTR [rbp+0x28]
   14002657c:	cmp    DWORD PTR [rax],0xe06d7363
   140026582:	jne    0x1400265df
   140026584:	mov    rax,QWORD PTR [rbp+0x28]
   140026588:	cmp    DWORD PTR [rax+0x18],0x4
   14002658c:	jne    0x1400265df
   14002658e:	mov    rax,QWORD PTR [rbp+0x28]
   140026592:	cmp    DWORD PTR [rax+0x20],0x19930520
   140026599:	je     0x1400265b5
   14002659b:	mov    rax,QWORD PTR [rbp+0x28]
   14002659f:	cmp    DWORD PTR [rax+0x20],0x19930521
   1400265a6:	je     0x1400265b5
   1400265a8:	mov    rax,QWORD PTR [rbp+0x28]
   1400265ac:	cmp    DWORD PTR [rax+0x20],0x19930522
   1400265b3:	jne    0x1400265df
   1400265b5:	mov    rax,QWORD PTR [rbp+0x28]
   1400265b9:	cmp    QWORD PTR [rax+0x30],0x0
   1400265be:	jne    0x1400265df
   1400265c0:	call   0x14000b18c
   1400265c5:	mov    DWORD PTR [rax+0x460],0x1
   1400265cf:	mov    DWORD PTR [rbp+0x20],0x1
   1400265d6:	mov    DWORD PTR [rbp+0x30],0x1
   1400265dd:	jmp    0x1400265e6
   1400265df:	mov    DWORD PTR [rbp+0x30],0x0
   1400265e6:	mov    eax,DWORD PTR [rbp+0x30]
   1400265e9:	add    rsp,0x20
   1400265ed:	pop    rbp
   1400265ee:	ret    
   1400265ef:	int3   
   1400265f0:	rex push rbx
   1400265f2:	push   rbp
   1400265f3:	sub    rsp,0x28
   1400265f7:	mov    rbp,rdx
   1400265fa:	mov    rcx,QWORD PTR [rbp+0x38]
   1400265fe:	call   0x140006df8
   140026603:	cmp    DWORD PTR [rbp+0x20],0x0
   140026607:	jne    0x140026643
   140026609:	mov    rbx,QWORD PTR [rbp+0xd8]
   140026610:	cmp    DWORD PTR [rbx],0xe06d7363
   140026616:	jne    0x140026643
   140026618:	cmp    DWORD PTR [rbx+0x18],0x4
   14002661c:	jne    0x140026643
   14002661e:	mov    eax,DWORD PTR [rbx+0x20]
   140026621:	sub    eax,0x19930520
   140026626:	cmp    eax,0x2
   140026629:	ja     0x140026643
   14002662b:	mov    rcx,QWORD PTR [rbx+0x28]
   14002662f:	call   0x140006e88
   140026634:	test   eax,eax
   140026636:	je     0x140026643
   140026638:	mov    dl,0x1
   14002663a:	mov    rcx,rbx
   14002663d:	call   0x14000b39c
   140026642:	nop
   140026643:	call   0x14000b18c
   140026648:	mov    rcx,QWORD PTR [rbp+0xe0]
   14002664f:	mov    QWORD PTR [rax+0xf0],rcx
   140026656:	call   0x14000b18c
   14002665b:	mov    rcx,QWORD PTR [rbp+0x50]
   14002665f:	mov    QWORD PTR [rax+0xf8],rcx
   140026666:	add    rsp,0x28
   14002666a:	pop    rbp
   14002666b:	pop    rbx
   14002666c:	ret    
   14002666d:	int3   
   14002666e:	rex push rbp
   140026670:	sub    rsp,0x20
   140026674:	mov    rbp,rdx
   140026677:	mov    rcx,QWORD PTR [rbp+0x30]
   14002667b:	call   0x140006ec8
   140026680:	nop
   140026681:	add    rsp,0x20
   140026685:	pop    rbp
   140026686:	ret    
   140026687:	int3   
   140026688:	rex push rbp
   14002668a:	sub    rsp,0x20
   14002668e:	mov    rbp,rdx
   140026691:	xor    eax,eax
   140026693:	cmp    BYTE PTR [rbp+0x38],al
   140026696:	setne  al
   140026699:	add    rsp,0x20
   14002669d:	pop    rbp
   14002669e:	ret    
   14002669f:	int3   
   1400266a0:	rex push rbp
   1400266a2:	sub    rsp,0x20
   1400266a6:	mov    rbp,rdx
   1400266a9:	call   0x14000c900
   1400266ae:	nop
   1400266af:	add    rsp,0x20
   1400266b3:	pop    rbp
   1400266b4:	ret    
   1400266b5:	int3   
   1400266b6:	rex push rbp
   1400266b8:	sub    rsp,0x20
   1400266bc:	mov    rbp,rdx
   1400266bf:	call   0x14000b18c
   1400266c4:	cmp    DWORD PTR [rax+0x100],0x0
   1400266cb:	jle    0x1400266d8
   1400266cd:	call   0x14000b18c
   1400266d2:	dec    DWORD PTR [rax+0x100]
   1400266d8:	add    rsp,0x20
   1400266dc:	pop    rbp
   1400266dd:	ret    
   1400266de:	int3   
   1400266df:	rex push rbp
   1400266e1:	sub    rsp,0x30
   1400266e5:	mov    rbp,rdx
   1400266e8:	mov    ecx,0xe
   1400266ed:	add    rsp,0x30
   1400266f1:	pop    rbp
   1400266f2:	jmp    0x14000897c
   1400266f7:	int3   
   1400266f8:	rex push rbp
   1400266fa:	sub    rsp,0x30
   1400266fe:	mov    rbp,rdx
   140026701:	mov    ecx,0xe
   140026706:	call   0x14000897c
   14002670b:	nop
   14002670c:	add    rsp,0x30
   140026710:	pop    rbp
   140026711:	ret    
   140026712:	int3   
   140026713:	rex push rbp
   140026715:	sub    rsp,0x20
   140026719:	mov    rbp,rdx
   14002671c:	mov    ecx,0xe
   140026721:	add    rsp,0x20
   140026725:	pop    rbp
   140026726:	jmp    0x14000897c
   14002672b:	int3   
   14002672c:	rex push rbp
   14002672e:	sub    rsp,0x20
   140026732:	mov    rbp,rdx
   140026735:	mov    ecx,0xe
   14002673a:	add    rsp,0x20
   14002673e:	pop    rbp
   14002673f:	jmp    0x14000897c
   140026744:	int3   
   140026745:	rex push rbp
   140026747:	sub    rsp,0x20
   14002674b:	mov    rbp,rdx
   14002674e:	mov    ecx,0xe
   140026753:	add    rsp,0x20
   140026757:	pop    rbp
   140026758:	jmp    0x14000897c
   14002675d:	int3   
   14002675e:	rex push rbp
   140026760:	sub    rsp,0x20
   140026764:	mov    rbp,rdx
   140026767:	mov    ecx,0xb
   14002676c:	call   0x14000897c
   140026771:	nop
   140026772:	add    rsp,0x20
   140026776:	pop    rbp
   140026777:	ret    
   140026778:	int3   
   140026779:	rex push rbp
   14002677b:	sub    rsp,0x20
   14002677f:	mov    rbp,rdx
   140026782:	mov    ecx,0xc
   140026787:	add    rsp,0x20
   14002678b:	pop    rbp
   14002678c:	jmp    0x14000897c
   140026791:	int3   
   140026792:	rex push rbp
   140026794:	sub    rsp,0x20
   140026798:	mov    rbp,rdx
   14002679b:	mov    rcx,QWORD PTR [rbp+0x30]
   14002679f:	add    rsp,0x20
   1400267a3:	pop    rbp
   1400267a4:	jmp    0x1400107d0
   1400267a9:	int3   
   1400267aa:	rex push rbp
   1400267ac:	sub    rsp,0x20
   1400267b0:	mov    rbp,rdx
   1400267b3:	movsxd rcx,DWORD PTR [rbp+0x20]
   1400267b7:	mov    rax,rcx
   1400267ba:	mov    rdx,QWORD PTR [rip+0x1286f]        # 0x140039030
   1400267c1:	mov    rdx,QWORD PTR [rdx+rcx*8]
   1400267c5:	call   0x140010820
   1400267ca:	nop
   1400267cb:	add    rsp,0x20
   1400267cf:	pop    rbp
   1400267d0:	ret    
   1400267d1:	int3   
   1400267d2:	rex push rbp
   1400267d4:	sub    rsp,0x20
   1400267d8:	mov    rbp,rdx
   1400267db:	mov    ecx,0x1
   1400267e0:	add    rsp,0x20
   1400267e4:	pop    rbp
   1400267e5:	jmp    0x14000897c
   1400267ea:	int3   
   1400267eb:	rex push rbp
   1400267ed:	sub    rsp,0x30
   1400267f1:	mov    rbp,rdx
   1400267f4:	mov    ecx,0x5
   1400267f9:	add    rsp,0x30
   1400267fd:	pop    rbp
   1400267fe:	jmp    0x14000897c
   140026803:	int3   
   140026804:	rex push rbp
   140026806:	sub    rsp,0x30
   14002680a:	mov    rbp,rdx
   14002680d:	mov    ecx,0x5
   140026812:	add    rsp,0x30
   140026816:	pop    rbp
   140026817:	jmp    0x14000897c
   14002681c:	int3   
   14002681d:	rex push rbp
   14002681f:	sub    rsp,0x20
   140026823:	mov    rbp,rdx
   140026826:	mov    ecx,0x1
   14002682b:	add    rsp,0x20
   14002682f:	pop    rbp
   140026830:	jmp    0x14000897c
   140026835:	int3   
   140026836:	rex push rbp
   140026838:	sub    rsp,0x20
   14002683c:	mov    rbp,rdx
   14002683f:	mov    ecx,DWORD PTR [rbp+0x40]
   140026842:	add    rsp,0x20
   140026846:	pop    rbp
   140026847:	jmp    0x14002142c
   14002684c:	int3   
   14002684d:	rex push rbp
   14002684f:	sub    rsp,0x20
   140026853:	mov    rbp,rdx
   140026856:	mov    ecx,DWORD PTR [rbp+0x50]
   140026859:	add    rsp,0x20
   14002685d:	pop    rbp
   14002685e:	jmp    0x14002142c
   140026863:	int3   
   140026864:	rex push rbp
   140026866:	sub    rsp,0x20
   14002686a:	mov    rbp,rdx
   14002686d:	mov    ecx,0xd
   140026872:	add    rsp,0x20
   140026876:	pop    rbp
   140026877:	jmp    0x14000897c
   14002687c:	int3   
   14002687d:	rex push rbp
   14002687f:	sub    rsp,0x20
   140026883:	mov    rbp,rdx
   140026886:	mov    ecx,0xc
   14002688b:	add    rsp,0x20
   14002688f:	pop    rbp
   140026890:	jmp    0x14000897c
   140026895:	int3   
   140026896:	rex push rbp
   140026898:	sub    rsp,0x20
   14002689c:	mov    rbp,rdx
   14002689f:	mov    ecx,0xc
   1400268a4:	add    rsp,0x20
   1400268a8:	pop    rbp
   1400268a9:	jmp    0x14000897c
   1400268ae:	int3   
   1400268af:	rex push rbp
   1400268b1:	sub    rsp,0x20
   1400268b5:	mov    rbp,rdx
   1400268b8:	mov    ecx,0xd
   1400268bd:	add    rsp,0x20
   1400268c1:	pop    rbp
   1400268c2:	jmp    0x14000897c
   1400268c7:	int3   
   1400268c8:	rex push rbp
   1400268ca:	sub    rsp,0x20
   1400268ce:	mov    rbp,rdx
   1400268d1:	mov    ecx,0xc
   1400268d6:	add    rsp,0x20
   1400268da:	pop    rbp
   1400268db:	jmp    0x14000897c
   1400268e0:	int3   
   1400268e1:	rex push rbp
   1400268e3:	sub    rsp,0x20
   1400268e7:	mov    rbp,rdx
   1400268ea:	mov    ecx,0xc
   1400268ef:	call   0x14000897c
   1400268f4:	nop
   1400268f5:	add    rsp,0x20
   1400268f9:	pop    rbp
   1400268fa:	ret    
   1400268fb:	int3   
   1400268fc:	rex push rbp
   1400268fe:	sub    rsp,0x20
   140026902:	mov    rbp,rdx
   140026905:	mov    ecx,0xc
   14002690a:	call   0x14000897c
   14002690f:	nop
   140026910:	add    rsp,0x20
   140026914:	pop    rbp
   140026915:	ret    
   140026916:	int3   
   140026917:	rex push rbp
   140026919:	sub    rsp,0x20
   14002691d:	mov    rbp,rdx
   140026920:	mov    rax,QWORD PTR [rbp+0x60]
   140026924:	and    DWORD PTR [rax+0xc8],0xffffffef
   14002692b:	add    rsp,0x20
   14002692f:	pop    rbp
   140026930:	ret    
   140026931:	int3   
   140026932:	rex push rbp
   140026934:	sub    rsp,0x20
   140026938:	mov    rbp,rdx
   14002693b:	mov    rcx,QWORD PTR [rbp+0x30]
   14002693f:	add    rsp,0x20
   140026943:	pop    rbp
   140026944:	jmp    0x1400107d0
   140026949:	int3   
   14002694a:	rex push rbp
   14002694c:	sub    rsp,0x20
   140026950:	mov    rbp,rdx
   140026953:	mov    ecx,0xa
   140026958:	add    rsp,0x20
   14002695c:	pop    rbp
   14002695d:	jmp    0x14000897c
   140026962:	int3   
   140026963:	rex push rbp
   140026965:	sub    rsp,0x20
   140026969:	mov    rbp,rdx
   14002696c:	mov    ecx,0xa
   140026971:	call   0x14000897c
   140026976:	nop
   140026977:	add    rsp,0x20
   14002697b:	pop    rbp
   14002697c:	ret    
   14002697d:	int3   
   14002697e:	rex push rbp
   140026980:	sub    rsp,0x20
   140026984:	mov    rbp,rdx
   140026987:	mov    ecx,0xb
   14002698c:	add    rsp,0x20
   140026990:	pop    rbp
   140026991:	jmp    0x14000897c
   140026996:	int3   
   140026997:	rex push rbp
   140026999:	sub    rsp,0x20
   14002699d:	mov    rbp,rdx
   1400269a0:	cmp    DWORD PTR [rbp+0x20],0x0
   1400269a4:	jne    0x1400269c8
   1400269a6:	movsxd rcx,DWORD PTR [rbp+0x48]
   1400269aa:	mov    rax,rcx
   1400269ad:	sar    rax,0x5
   1400269b1:	lea    rdx,[rip+0x11cd8]        # 0x140038690
   1400269b8:	and    ecx,0x1f
   1400269bb:	imul   rcx,rcx,0x58
   1400269bf:	mov    rax,QWORD PTR [rdx+rax*8]
   1400269c3:	and    BYTE PTR [rax+rcx*1+0x8],0xfe
   1400269c8:	mov    ecx,DWORD PTR [rbp+0x48]
   1400269cb:	call   0x14002142c
   1400269d0:	nop
   1400269d1:	add    rsp,0x20
   1400269d5:	pop    rbp
   1400269d6:	ret    
   1400269d7:	int3   
   1400269d8:	rex push rbp
   1400269da:	sub    rsp,0x20
   1400269de:	mov    rbp,rdx
   1400269e1:	mov    ecx,DWORD PTR [rbp+0x50]
   1400269e4:	add    rsp,0x20
   1400269e8:	pop    rbp
   1400269e9:	jmp    0x14002142c
   1400269ee:	int3   
   1400269ef:	rex push rbp
   1400269f1:	sub    rsp,0x20
   1400269f5:	mov    rbp,rdx
   1400269f8:	mov    ecx,0x3
   1400269fd:	add    rsp,0x20
   140026a01:	pop    rbp
   140026a02:	jmp    0x14000897c
   140026a07:	int3   
   140026a08:	rex push rbp
   140026a0a:	sub    rsp,0x20
   140026a0e:	mov    rbp,rdx
   140026a11:	mov    ecx,DWORD PTR [rbp+0x40]
   140026a14:	add    rsp,0x20
   140026a18:	pop    rbp
   140026a19:	jmp    0x14002142c
   140026a1e:	int3   
   140026a1f:	int3   
   140026a20:	lea    rax,[rip+0xae1]        # 0x140027508
   140026a27:	mov    QWORD PTR [rip+0xf5d2],rax        # 0x140036000
   140026a2e:	ret    
   140026a2f:	int3   
   140026a30:	lea    rax,[rip+0xad1]        # 0x140027508
   140026a37:	mov    QWORD PTR [rip+0xf5ca],rax        # 0x140036008
   140026a3e:	ret    
   140026a3f:	int3   
   140026a40:	lea    rax,[rip+0xac1]        # 0x140027508
   140026a47:	mov    QWORD PTR [rip+0xf5c2],rax        # 0x140036010
   140026a4e:	ret    
   140026a4f:	int3   
   140026a50:	sub    rsp,0x28
   140026a54:	cmp    QWORD PTR [rip+0xf5f4],0x8        # 0x140036050
   140026a5c:	jb     0x140026a9c
   140026a5e:	lea    rcx,[rsp+0x30]
   140026a63:	mov    QWORD PTR [rsp+0x20],rbx
   140026a68:	mov    rbx,QWORD PTR [rip+0xf5c9]        # 0x140036038
   140026a6f:	call   0x140001610
   140026a74:	lea    rdx,[rip+0xf5bd]        # 0x140036038
   140026a7b:	lea    rcx,[rsp+0x30]
   140026a80:	call   0x140001520
   140026a85:	lea    rcx,[rsp+0x30]
   140026a8a:	call   0x140001610
   140026a8f:	mov    rcx,rbx
   140026a92:	call   0x140005454
   140026a97:	mov    rbx,QWORD PTR [rsp+0x20]
   140026a9c:	xor    eax,eax
   140026a9e:	mov    QWORD PTR [rip+0xf5a7],0x7        # 0x140036050
   140026aa9:	mov    QWORD PTR [rip+0xf598],rax        # 0x140036048
   140026ab0:	mov    WORD PTR [rip+0xf581],ax        # 0x140036038
   140026ab7:	add    rsp,0x28
   140026abb:	ret    
   140026abc:	int3   
   140026abd:	int3   
   140026abe:	int3   
   140026abf:	int3   
   140026ac0:	sub    rsp,0x28
   140026ac4:	cmp    QWORD PTR [rip+0xf5c4],0x8        # 0x140036090
   140026acc:	jb     0x140026b0c
   140026ace:	lea    rcx,[rsp+0x30]
   140026ad3:	mov    QWORD PTR [rsp+0x20],rbx
   140026ad8:	mov    rbx,QWORD PTR [rip+0xf599]        # 0x140036078
   140026adf:	call   0x140001610
   140026ae4:	lea    rdx,[rip+0xf58d]        # 0x140036078
   140026aeb:	lea    rcx,[rsp+0x30]
   140026af0:	call   0x140001520
   140026af5:	lea    rcx,[rsp+0x30]
   140026afa:	call   0x140001610
   140026aff:	mov    rcx,rbx
   140026b02:	call   0x140005454
   140026b07:	mov    rbx,QWORD PTR [rsp+0x20]
   140026b0c:	xor    eax,eax
   140026b0e:	mov    QWORD PTR [rip+0xf577],0x7        # 0x140036090
   140026b19:	mov    QWORD PTR [rip+0xf568],rax        # 0x140036088
   140026b20:	mov    WORD PTR [rip+0xf551],ax        # 0x140036078
   140026b27:	add    rsp,0x28
   140026b2b:	ret    
   140026b2c:	int3   
   140026b2d:	int3   
   140026b2e:	int3   
   140026b2f:	int3   
   140026b30:	sub    rsp,0x28
   140026b34:	cmp    QWORD PTR [rip+0xf574],0x8        # 0x1400360b0
   140026b3c:	jb     0x140026b7c
   140026b3e:	lea    rcx,[rsp+0x30]
   140026b43:	mov    QWORD PTR [rsp+0x20],rbx
   140026b48:	mov    rbx,QWORD PTR [rip+0xf549]        # 0x140036098
   140026b4f:	call   0x140001610
   140026b54:	lea    rdx,[rip+0xf53d]        # 0x140036098
   140026b5b:	lea    rcx,[rsp+0x30]
   140026b60:	call   0x140001520
   140026b65:	lea    rcx,[rsp+0x30]
   140026b6a:	call   0x140001610
   140026b6f:	mov    rcx,rbx
   140026b72:	call   0x140005454
   140026b77:	mov    rbx,QWORD PTR [rsp+0x20]
   140026b7c:	xor    eax,eax
   140026b7e:	mov    QWORD PTR [rip+0xf527],0x7        # 0x1400360b0
   140026b89:	mov    QWORD PTR [rip+0xf518],rax        # 0x1400360a8
   140026b90:	mov    WORD PTR [rip+0xf501],ax        # 0x140036098
   140026b97:	add    rsp,0x28
   140026b9b:	ret    
   140026b9c:	int3   
   140026b9d:	int3   
   140026b9e:	int3   
   140026b9f:	int3   
   140026ba0:	sub    rsp,0x28
   140026ba4:	cmp    QWORD PTR [rip+0xf4c4],0x8        # 0x140036070
   140026bac:	jb     0x140026bec
   140026bae:	lea    rcx,[rsp+0x30]
   140026bb3:	mov    QWORD PTR [rsp+0x20],rbx
   140026bb8:	mov    rbx,QWORD PTR [rip+0xf499]        # 0x140036058
   140026bbf:	call   0x140001610
   140026bc4:	lea    rdx,[rip+0xf48d]        # 0x140036058
   140026bcb:	lea    rcx,[rsp+0x30]
   140026bd0:	call   0x140001520
   140026bd5:	lea    rcx,[rsp+0x30]
   140026bda:	call   0x140001610
   140026bdf:	mov    rcx,rbx
   140026be2:	call   0x140005454
   140026be7:	mov    rbx,QWORD PTR [rsp+0x20]
   140026bec:	xor    eax,eax
   140026bee:	mov    QWORD PTR [rip+0xf477],0x7        # 0x140036070
   140026bf9:	mov    QWORD PTR [rip+0xf468],rax        # 0x140036068
   140026c00:	mov    WORD PTR [rip+0xf451],ax        # 0x140036058
   140026c07:	add    rsp,0x28
   140026c0b:	ret    
   140026c0c:	int3   
   140026c0d:	int3   
   140026c0e:	int3   
   140026c0f:	int3   
   140026c10:	sub    rsp,0x28
   140026c14:	cmp    QWORD PTR [rip+0xf414],0x8        # 0x140036030
   140026c1c:	jb     0x140026c5c
   140026c1e:	lea    rcx,[rsp+0x30]
   140026c23:	mov    QWORD PTR [rsp+0x20],rbx
   140026c28:	mov    rbx,QWORD PTR [rip+0xf3e9]        # 0x140036018
   140026c2f:	call   0x140001610
   140026c34:	lea    rdx,[rip+0xf3dd]        # 0x140036018
   140026c3b:	lea    rcx,[rsp+0x30]
   140026c40:	call   0x140001520
   140026c45:	lea    rcx,[rsp+0x30]
   140026c4a:	call   0x140001610
   140026c4f:	mov    rcx,rbx
   140026c52:	call   0x140005454
   140026c57:	mov    rbx,QWORD PTR [rsp+0x20]
   140026c5c:	xor    eax,eax
   140026c5e:	mov    QWORD PTR [rip+0xf3c7],0x7        # 0x140036030
   140026c69:	mov    QWORD PTR [rip+0xf3b8],rax        # 0x140036028
   140026c70:	mov    WORD PTR [rip+0xf3a1],ax        # 0x140036018
   140026c77:	add    rsp,0x28
   140026c7b:	ret    
   140026c7c:	lea    rax,[rip+0x885]        # 0x140027508
   140026c83:	mov    QWORD PTR [rip+0xf376],rax        # 0x140036000
   140026c8a:	ret    
   140026c8b:	int3   
   140026c8c:	lea    rax,[rip+0x875]        # 0x140027508
   140026c93:	mov    QWORD PTR [rip+0xf36e],rax        # 0x140036008
   140026c9a:	ret    
   140026c9b:	int3   
   140026c9c:	lea    rax,[rip+0x865]        # 0x140027508
   140026ca3:	mov    QWORD PTR [rip+0xf366],rax        # 0x140036010
   140026caa:	ret    
   140026cab:	int3   
   140026cac:	lea    rax,[rip+0x855]        # 0x140027508
   140026cb3:	mov    QWORD PTR [rip+0xf346],rax        # 0x140036000
   140026cba:	ret    
   140026cbb:	int3   
   140026cbc:	lea    rax,[rip+0x845]        # 0x140027508
   140026cc3:	mov    QWORD PTR [rip+0xf33e],rax        # 0x140036008
   140026cca:	ret    
   140026ccb:	int3   
   140026ccc:	lea    rax,[rip+0x835]        # 0x140027508
   140026cd3:	mov    QWORD PTR [rip+0xf336],rax        # 0x140036010
   140026cda:	ret    
