
1677d160b38b55b8e27e0c012a5ebb1a2ac34d87e515ca82412d9d3465507d80.exe:     file format pei-x86-64


Disassembly of section .text:

0000000140001000 <.text>:
   140001000:	sub    rsp,0x28
   140001004:	xor    ecx,ecx
   140001006:	call   QWORD PTR [rip+0x112bc]        # 0x1400122c8
   14000100c:	mov    QWORD PTR [rip+0x1b6e5],rax        # 0x14001c6f8
   140001013:	add    rsp,0x28
   140001017:	ret    
   140001018:	int3   
   140001019:	int3   
   14000101a:	int3   
   14000101b:	int3   
   14000101c:	int3   
   14000101d:	int3   
   14000101e:	int3   
   14000101f:	int3   
   140001020:	mov    rax,QWORD PTR [rip+0x1b6d1]        # 0x14001c6f8
   140001027:	mov    QWORD PTR [rip+0x1b6d2],rax        # 0x14001c700
   14000102e:	ret    
   14000102f:	int3   
   140001030:	mov    rax,QWORD PTR [rip+0x1b6c1]        # 0x14001c6f8
   140001037:	mov    QWORD PTR [rip+0x1b6ca],rax        # 0x14001c708
   14000103e:	ret    
   14000103f:	int3   
   140001040:	int3   
   140001041:	int3   
   140001042:	int3   
   140001043:	int3   
   140001044:	int3   
   140001045:	int3   
   140001046:	int3   
   140001047:	int3   
   140001048:	int3   
   140001049:	int3   
   14000104a:	int3   
   14000104b:	int3   
   14000104c:	int3   
   14000104d:	int3   
   14000104e:	int3   
   14000104f:	int3   
   140001050:	and    QWORD PTR [rcx],0x0
   140001054:	mov    rax,rcx
   140001057:	mov    QWORD PTR [rcx+0x20],rcx
   14000105b:	mov    DWORD PTR [rcx+0x28],0x20
   140001062:	mov    WORD PTR [rcx+0x2c],0x100
   140001068:	ret    
   140001069:	int3   
   14000106a:	int3   
   14000106b:	int3   
   14000106c:	int3   
   14000106d:	int3   
   14000106e:	int3   
   14000106f:	int3   
   140001070:	mov    BYTE PTR [rdx],0x0
   140001073:	mov    rax,rcx
   140001076:	mov    QWORD PTR [rcx+0x20],rdx
   14000107a:	mov    DWORD PTR [rcx+0x28],r8d
   14000107e:	mov    WORD PTR [rcx+0x2c],0x100
   140001084:	ret    
   140001085:	int3   
   140001086:	int3   
   140001087:	int3   
   140001088:	int3   
   140001089:	int3   
   14000108a:	int3   
   14000108b:	int3   
   14000108c:	int3   
   14000108d:	int3   
   14000108e:	int3   
   14000108f:	int3   
   140001090:	sub    rsp,0x28
   140001094:	cmp    BYTE PTR [rcx+0x2c],0x0
   140001098:	je     0x14000109f
   14000109a:	call   0x14000eb30
   14000109f:	add    rsp,0x28
   1400010a3:	ret    
   1400010a4:	int3   
   1400010a5:	int3   
   1400010a6:	int3   
   1400010a7:	int3   
   1400010a8:	int3   
   1400010a9:	int3   
   1400010aa:	int3   
   1400010ab:	int3   
   1400010ac:	int3   
   1400010ad:	int3   
   1400010ae:	int3   
   1400010af:	int3   
   1400010b0:	mov    rax,QWORD PTR [rcx+0x20]
   1400010b4:	ret    
   1400010b5:	int3   
   1400010b6:	int3   
   1400010b7:	int3   
   1400010b8:	int3   
   1400010b9:	int3   
   1400010ba:	int3   
   1400010bb:	int3   
   1400010bc:	int3   
   1400010bd:	int3   
   1400010be:	int3   
   1400010bf:	int3   
   1400010c0:	mov    eax,DWORD PTR [rcx+0x28]
   1400010c3:	ret    
   1400010c4:	int3   
   1400010c5:	int3   
   1400010c6:	int3   
   1400010c7:	int3   
   1400010c8:	int3   
   1400010c9:	int3   
   1400010ca:	int3   
   1400010cb:	int3   
   1400010cc:	int3   
   1400010cd:	int3   
   1400010ce:	int3   
   1400010cf:	int3   
   1400010d0:	mov    BYTE PTR [rcx+0x2d],dl
   1400010d3:	ret    
   1400010d4:	int3   
   1400010d5:	int3   
   1400010d6:	int3   
   1400010d7:	int3   
   1400010d8:	int3   
   1400010d9:	int3   
   1400010da:	int3   
   1400010db:	int3   
   1400010dc:	int3   
   1400010dd:	int3   
   1400010de:	int3   
   1400010df:	int3   
   1400010e0:	mov    al,BYTE PTR [rcx+0x2d]
   1400010e3:	ret    
   1400010e4:	int3   
   1400010e5:	int3   
   1400010e6:	int3   
   1400010e7:	int3   
   1400010e8:	int3   
   1400010e9:	int3   
   1400010ea:	int3   
   1400010eb:	int3   
   1400010ec:	int3   
   1400010ed:	int3   
   1400010ee:	int3   
   1400010ef:	int3   
   1400010f0:	movups xmm0,XMMWORD PTR [rdx]
   1400010f3:	mov    rax,rcx
   1400010f6:	movups XMMWORD PTR [rcx],xmm0
   1400010f9:	movups xmm1,XMMWORD PTR [rdx+0x10]
   1400010fd:	movups XMMWORD PTR [rcx+0x10],xmm1
   140001101:	movups xmm0,XMMWORD PTR [rdx+0x20]
   140001105:	movups XMMWORD PTR [rcx+0x20],xmm0
   140001109:	ret    
   14000110a:	int3   
   14000110b:	int3   
   14000110c:	int3   
   14000110d:	int3   
   14000110e:	int3   
   14000110f:	int3   
   140001110:	xor    eax,eax
   140001112:	mov    QWORD PTR [rcx+0x20],rcx
   140001116:	mov    QWORD PTR [rcx],rax
   140001119:	mov    DWORD PTR [rcx+0x28],0x20
   140001120:	mov    WORD PTR [rcx+0x2c],0x100
   140001126:	mov    DWORD PTR [rcx+0x30],eax
   140001129:	mov    rax,rcx
   14000112c:	ret    
   14000112d:	int3   
   14000112e:	int3   
   14000112f:	int3   
   140001130:	int3   
   140001131:	int3   
   140001132:	int3   
   140001133:	int3   
   140001134:	int3   
   140001135:	int3   
   140001136:	int3   
   140001137:	int3   
   140001138:	int3   
   140001139:	int3   
   14000113a:	int3   
   14000113b:	int3   
   14000113c:	int3   
   14000113d:	int3   
   14000113e:	int3   
   14000113f:	int3   
   140001140:	lea    eax,[r8+r8*1]
   140001144:	mov    QWORD PTR [rcx+0x20],rdx
   140001148:	mov    DWORD PTR [rcx+0x28],eax
   14000114b:	xor    r9d,r9d
   14000114e:	mov    WORD PTR [rcx+0x2c],0x100
   140001154:	mov    rax,rcx
   140001157:	mov    DWORD PTR [rcx+0x30],r9d
   14000115b:	mov    WORD PTR [rdx],r9w
   14000115f:	ret    
   140001160:	int3   
   140001161:	int3   
   140001162:	int3   
   140001163:	int3   
   140001164:	int3   
   140001165:	int3   
   140001166:	int3   
   140001167:	int3   
   140001168:	int3   
   140001169:	int3   
   14000116a:	int3   
   14000116b:	int3   
   14000116c:	int3   
   14000116d:	int3   
   14000116e:	int3   
   14000116f:	int3   
   140001170:	xor    eax,eax
   140001172:	cmp    DWORD PTR [rcx+0x30],eax
   140001175:	sete   al
   140001178:	ret    
   140001179:	int3   
   14000117a:	int3   
   14000117b:	int3   
   14000117c:	int3   
   14000117d:	int3   
   14000117e:	int3   
   14000117f:	int3   
   140001180:	mov    eax,DWORD PTR [rcx+0x30]
   140001183:	xor    r8d,r8d
   140001186:	cmp    DWORD PTR [rdx+0x30],eax
   140001189:	jne    0x1400011b2
   14000118b:	mov    rax,QWORD PTR [rdx+0x20]
   14000118f:	mov    r9,QWORD PTR [rcx+0x20]
   140001193:	sub    r9,rax
   140001196:	movzx  ecx,WORD PTR [rax]
   140001199:	movzx  edx,WORD PTR [rax+r9*1]
   14000119e:	sub    ecx,edx
   1400011a0:	jne    0x1400011aa
   1400011a2:	add    rax,0x2
   1400011a6:	test   edx,edx
   1400011a8:	jne    0x140001196
   1400011aa:	test   ecx,ecx
   1400011ac:	jne    0x1400011b2
   1400011ae:	lea    r8d,[rcx+0x1]
   1400011b2:	mov    al,r8b
   1400011b5:	ret    
   1400011b6:	int3   
   1400011b7:	int3   
   1400011b8:	int3   
   1400011b9:	int3   
   1400011ba:	int3   
   1400011bb:	int3   
   1400011bc:	int3   
   1400011bd:	int3   
   1400011be:	int3   
   1400011bf:	int3   
   1400011c0:	xor    eax,eax
   1400011c2:	test   rdx,rdx
   1400011c5:	je     0x1400011ed
   1400011c7:	cmp    WORD PTR [rdx],ax
   1400011ca:	je     0x1400011ed
   1400011cc:	mov    r9,QWORD PTR [rcx+0x20]
   1400011d0:	sub    r9,rdx
   1400011d3:	movzx  ecx,WORD PTR [rdx]
   1400011d6:	movzx  r8d,WORD PTR [rdx+r9*1]
   1400011db:	sub    ecx,r8d
   1400011de:	jne    0x1400011e9
   1400011e0:	add    rdx,0x2
   1400011e4:	test   r8d,r8d
   1400011e7:	jne    0x1400011d3
   1400011e9:	test   ecx,ecx
   1400011eb:	jmp    0x1400011f0
   1400011ed:	cmp    DWORD PTR [rcx+0x30],eax
   1400011f0:	sete   al
   1400011f3:	ret    
   1400011f4:	int3   
   1400011f5:	int3   
   1400011f6:	int3   
   1400011f7:	int3   
   1400011f8:	int3   
   1400011f9:	int3   
   1400011fa:	int3   
   1400011fb:	int3   
   1400011fc:	int3   
   1400011fd:	int3   
   1400011fe:	int3   
   1400011ff:	int3   
   140001200:	sub    rsp,0x28
   140001204:	mov    eax,DWORD PTR [rcx+0x30]
   140001207:	mov    r8,rdx
   14000120a:	cmp    DWORD PTR [rdx+0x30],eax
   14000120d:	je     0x140001213
   14000120f:	xor    al,al
   140001211:	jmp    0x140001226
   140001213:	mov    rdx,QWORD PTR [rcx+0x20]
   140001217:	mov    rcx,QWORD PTR [r8+0x20]
   14000121b:	call   QWORD PTR [rip+0x112df]        # 0x140012500
   140001221:	test   eax,eax
   140001223:	sete   al
   140001226:	add    rsp,0x28
   14000122a:	ret    
   14000122b:	int3   
   14000122c:	int3   
   14000122d:	int3   
   14000122e:	int3   
   14000122f:	int3   
   140001230:	int3   
   140001231:	int3   
   140001232:	int3   
   140001233:	int3   
   140001234:	int3   
   140001235:	int3   
   140001236:	int3   
   140001237:	int3   
   140001238:	int3   
   140001239:	int3   
   14000123a:	int3   
   14000123b:	int3   
   14000123c:	int3   
   14000123d:	int3   
   14000123e:	int3   
   14000123f:	int3   
   140001240:	rex push rbx
   140001242:	sub    rsp,0x20
   140001246:	xor    ebx,ebx
   140001248:	mov    rax,rdx
   14000124b:	test   rdx,rdx
   14000124e:	je     0x140001266
   140001250:	cmp    WORD PTR [rdx],bx
   140001253:	je     0x140001266
   140001255:	mov    rdx,QWORD PTR [rcx+0x20]
   140001259:	mov    rcx,rax
   14000125c:	call   QWORD PTR [rip+0x1129e]        # 0x140012500
   140001262:	test   eax,eax
   140001264:	jmp    0x140001269
   140001266:	cmp    DWORD PTR [rcx+0x30],ebx
   140001269:	sete   al
   14000126c:	add    rsp,0x20
   140001270:	pop    rbx
   140001271:	ret    
   140001272:	int3   
   140001273:	int3   
   140001274:	int3   
   140001275:	int3   
   140001276:	int3   
   140001277:	int3   
   140001278:	int3   
   140001279:	int3   
   14000127a:	int3   
   14000127b:	int3   
   14000127c:	int3   
   14000127d:	int3   
   14000127e:	int3   
   14000127f:	int3   
   140001280:	mov    eax,DWORD PTR [rcx+0x30]
   140001283:	add    rax,rax
   140001286:	ret    
   140001287:	int3   
   140001288:	int3   
   140001289:	int3   
   14000128a:	int3   
   14000128b:	int3   
   14000128c:	int3   
   14000128d:	int3   
   14000128e:	int3   
   14000128f:	int3   
   140001290:	mov    eax,DWORD PTR [rcx+0x30]
   140001293:	ret    
   140001294:	int3   
   140001295:	int3   
   140001296:	int3   
   140001297:	int3   
   140001298:	int3   
   140001299:	int3   
   14000129a:	int3   
   14000129b:	int3   
   14000129c:	int3   
   14000129d:	int3   
   14000129e:	int3   
   14000129f:	int3   
   1400012a0:	mov    eax,DWORD PTR [rcx+0x28]
   1400012a3:	shr    rax,1
   1400012a6:	ret    
   1400012a7:	int3   
   1400012a8:	int3   
   1400012a9:	int3   
   1400012aa:	int3   
   1400012ab:	int3   
   1400012ac:	int3   
   1400012ad:	int3   
   1400012ae:	int3   
   1400012af:	int3   
   1400012b0:	mov    rax,QWORD PTR [rcx+0x20]
   1400012b4:	xor    edx,edx
   1400012b6:	mov    WORD PTR [rax],dx
   1400012b9:	mov    DWORD PTR [rcx+0x30],edx
   1400012bc:	ret    
   1400012bd:	int3   
   1400012be:	int3   
   1400012bf:	int3   
   1400012c0:	int3   
   1400012c1:	int3   
   1400012c2:	int3   
   1400012c3:	int3   
   1400012c4:	int3   
   1400012c5:	int3   
   1400012c6:	int3   
   1400012c7:	int3   
   1400012c8:	int3   
   1400012c9:	int3   
   1400012ca:	int3   
   1400012cb:	int3   
   1400012cc:	int3   
   1400012cd:	int3   
   1400012ce:	int3   
   1400012cf:	int3   
   1400012d0:	sub    rsp,0x28
   1400012d4:	cmp    edx,DWORD PTR [rcx+0x28]
   1400012d7:	jbe    0x1400012f9
   1400012d9:	call   0x14000ea50
   1400012de:	test   al,al
   1400012e0:	jne    0x1400012f9
   1400012e2:	call   QWORD PTR [rip+0x11010]        # 0x1400122f8
   1400012e8:	mov    ecx,eax
   1400012ea:	movzx  eax,ax
   1400012ed:	or     eax,0x80070000
   1400012f2:	test   ecx,ecx
   1400012f4:	cmovle eax,ecx
   1400012f7:	jmp    0x1400012fb
   1400012f9:	xor    eax,eax
   1400012fb:	add    rsp,0x28
   1400012ff:	ret    
   140001300:	int3   
   140001301:	int3   
   140001302:	int3   
   140001303:	int3   
   140001304:	int3   
   140001305:	int3   
   140001306:	int3   
   140001307:	int3   
   140001308:	int3   
   140001309:	int3   
   14000130a:	int3   
   14000130b:	int3   
   14000130c:	int3   
   14000130d:	int3   
   14000130e:	int3   
   14000130f:	int3   
   140001310:	sub    rsp,0x38
   140001314:	xor    r8d,r8d
   140001317:	test   rdx,rdx
   14000131a:	je     0x140001341
   14000131c:	mov    r9d,DWORD PTR [rcx+0x30]
   140001320:	add    r9d,r9d
   140001323:	or     rax,0xffffffffffffffff
   140001327:	inc    rax
   14000132a:	cmp    WORD PTR [rdx+rax*2],r8w
   14000132f:	jne    0x140001327
   140001331:	lea    r8d,[rax+rax*1]
   140001335:	mov    BYTE PTR [rsp+0x20],0x1
   14000133a:	call   0x14000eb60
   14000133f:	jmp    0x140001343
   140001341:	xor    eax,eax
   140001343:	add    rsp,0x38
   140001347:	ret    
   140001348:	int3   
   140001349:	int3   
   14000134a:	int3   
   14000134b:	int3   
   14000134c:	int3   
   14000134d:	int3   
   14000134e:	int3   
   14000134f:	int3   
   140001350:	sub    rsp,0x38
   140001354:	test   rdx,rdx
   140001357:	je     0x140001374
   140001359:	test   r8d,r8d
   14000135c:	je     0x140001374
   14000135e:	mov    r9d,DWORD PTR [rcx+0x30]
   140001362:	add    r8d,r8d
   140001365:	add    r9d,r9d
   140001368:	mov    BYTE PTR [rsp+0x20],0x1
   14000136d:	call   0x14000eb60
   140001372:	jmp    0x140001376
   140001374:	xor    eax,eax
   140001376:	add    rsp,0x38
   14000137a:	ret    
   14000137b:	int3   
   14000137c:	int3   
   14000137d:	int3   
   14000137e:	int3   
   14000137f:	int3   
   140001380:	int3   
   140001381:	int3   
   140001382:	int3   
   140001383:	int3   
   140001384:	int3   
   140001385:	int3   
   140001386:	int3   
   140001387:	int3   
   140001388:	int3   
   140001389:	int3   
   14000138a:	int3   
   14000138b:	int3   
   14000138c:	int3   
   14000138d:	int3   
   14000138e:	int3   
   14000138f:	int3   
   140001390:	sub    rsp,0x38
   140001394:	mov    r8d,DWORD PTR [rdx+0x30]
   140001398:	test   r8d,r8d
   14000139b:	je     0x1400013b7
   14000139d:	mov    r9d,DWORD PTR [rcx+0x30]
   1400013a1:	add    r8d,r8d
   1400013a4:	mov    rdx,QWORD PTR [rdx+0x20]
   1400013a8:	add    r9d,r9d
   1400013ab:	mov    BYTE PTR [rsp+0x20],0x1
   1400013b0:	call   0x14000eb60
   1400013b5:	jmp    0x1400013b9
   1400013b7:	xor    eax,eax
   1400013b9:	add    rsp,0x38
   1400013bd:	ret    
   1400013be:	int3   
   1400013bf:	int3   
   1400013c0:	int3   
   1400013c1:	int3   
   1400013c2:	int3   
   1400013c3:	int3   
   1400013c4:	int3   
   1400013c5:	int3   
   1400013c6:	int3   
   1400013c7:	int3   
   1400013c8:	int3   
   1400013c9:	int3   
   1400013ca:	int3   
   1400013cb:	int3   
   1400013cc:	int3   
   1400013cd:	int3   
   1400013ce:	int3   
   1400013cf:	int3   
   1400013d0:	mov    WORD PTR [rsp+0x10],dx
   1400013d5:	sub    rsp,0x38
   1400013d9:	mov    r9d,DWORD PTR [rcx+0x30]
   1400013dd:	lea    rdx,[rsp+0x48]
   1400013e2:	add    r9d,r9d
   1400013e5:	mov    BYTE PTR [rsp+0x20],0x1
   1400013ea:	mov    r8d,0x2
   1400013f0:	call   0x14000eb60
   1400013f5:	add    rsp,0x38
   1400013f9:	ret    
   1400013fa:	int3   
   1400013fb:	int3   
   1400013fc:	int3   
   1400013fd:	int3   
   1400013fe:	int3   
   1400013ff:	int3   
   140001400:	sub    rsp,0x38
   140001404:	mov    r9d,DWORD PTR [rcx+0x30]
   140001408:	add    r9d,r9d
   14000140b:	mov    BYTE PTR [rsp+0x28],0x0
   140001410:	mov    BYTE PTR [rsp+0x20],0x1
   140001415:	call   0x14000ec30
   14000141a:	add    rsp,0x38
   14000141e:	ret    
   14000141f:	int3   
   140001420:	int3   
   140001421:	int3   
   140001422:	int3   
   140001423:	int3   
   140001424:	int3   
   140001425:	int3   
   140001426:	int3   
   140001427:	int3   
   140001428:	int3   
   140001429:	int3   
   14000142a:	int3   
   14000142b:	int3   
   14000142c:	int3   
   14000142d:	int3   
   14000142e:	int3   
   14000142f:	int3   
   140001430:	sub    rsp,0x38
   140001434:	mov    r9d,DWORD PTR [rcx+0x30]
   140001438:	add    r9d,r9d
   14000143b:	mov    BYTE PTR [rsp+0x28],0x1
   140001440:	mov    BYTE PTR [rsp+0x20],0x1
   140001445:	call   0x14000ec30
   14000144a:	add    rsp,0x38
   14000144e:	ret    
   14000144f:	int3   
   140001450:	int3   
   140001451:	int3   
   140001452:	int3   
   140001453:	int3   
   140001454:	int3   
   140001455:	int3   
   140001456:	int3   
   140001457:	int3   
   140001458:	int3   
   140001459:	int3   
   14000145a:	int3   
   14000145b:	int3   
   14000145c:	int3   
   14000145d:	int3   
   14000145e:	int3   
   14000145f:	int3   
   140001460:	sub    rsp,0x38
   140001464:	mov    r9d,DWORD PTR [rcx+0x30]
   140001468:	add    r9d,r9d
   14000146b:	or     r8,0xffffffffffffffff
   14000146f:	inc    r8
   140001472:	cmp    BYTE PTR [rdx+r8*1],0x0
   140001477:	jne    0x14000146f
   140001479:	mov    BYTE PTR [rsp+0x28],0x0
   14000147e:	mov    BYTE PTR [rsp+0x20],0x1
   140001483:	call   0x14000ec30
   140001488:	add    rsp,0x38
   14000148c:	ret    
   14000148d:	int3   
   14000148e:	int3   
   14000148f:	int3   
   140001490:	int3   
   140001491:	int3   
   140001492:	int3   
   140001493:	int3   
   140001494:	int3   
   140001495:	int3   
   140001496:	int3   
   140001497:	int3   
   140001498:	int3   
   140001499:	int3   
   14000149a:	int3   
   14000149b:	int3   
   14000149c:	int3   
   14000149d:	int3   
   14000149e:	int3   
   14000149f:	int3   
   1400014a0:	sub    rsp,0x38
   1400014a4:	mov    r9d,DWORD PTR [rcx+0x30]
   1400014a8:	add    r9d,r9d
   1400014ab:	or     r8,0xffffffffffffffff
   1400014af:	inc    r8
   1400014b2:	cmp    BYTE PTR [rdx+r8*1],0x0
   1400014b7:	jne    0x1400014af
   1400014b9:	mov    BYTE PTR [rsp+0x28],0x1
   1400014be:	mov    BYTE PTR [rsp+0x20],0x1
   1400014c3:	call   0x14000ec30
   1400014c8:	add    rsp,0x38
   1400014cc:	ret    
   1400014cd:	int3   
   1400014ce:	int3   
   1400014cf:	int3   
   1400014d0:	int3   
   1400014d1:	int3   
   1400014d2:	int3   
   1400014d3:	int3   
   1400014d4:	int3   
   1400014d5:	int3   
   1400014d6:	int3   
   1400014d7:	int3   
   1400014d8:	int3   
   1400014d9:	int3   
   1400014da:	int3   
   1400014db:	int3   
   1400014dc:	int3   
   1400014dd:	int3   
   1400014de:	int3   
   1400014df:	int3   
   1400014e0:	sub    rsp,0x38
   1400014e4:	xor    r8d,r8d
   1400014e7:	test   rdx,rdx
   1400014ea:	je     0x14000150d
   1400014ec:	or     rax,0xffffffffffffffff
   1400014f0:	inc    rax
   1400014f3:	cmp    WORD PTR [rdx+rax*2],r8w
   1400014f8:	jne    0x1400014f0
   1400014fa:	lea    r8d,[rax+rax*1]
   1400014fe:	mov    BYTE PTR [rsp+0x20],0x1
   140001503:	xor    r9d,r9d
   140001506:	call   0x14000eb60
   14000150b:	jmp    0x140001512
   14000150d:	mov    eax,0x80070057
   140001512:	add    rsp,0x38
   140001516:	ret    
   140001517:	int3   
   140001518:	int3   
   140001519:	int3   
   14000151a:	int3   
   14000151b:	int3   
   14000151c:	int3   
   14000151d:	int3   
   14000151e:	int3   
   14000151f:	int3   
   140001520:	sub    rsp,0x38
   140001524:	test   rdx,rdx
   140001527:	je     0x14000153b
   140001529:	add    r8d,r8d
   14000152c:	mov    BYTE PTR [rsp+0x20],0x1
   140001531:	xor    r9d,r9d
   140001534:	call   0x14000eb60
   140001539:	jmp    0x140001540
   14000153b:	mov    eax,0x80070057
   140001540:	add    rsp,0x38
   140001544:	ret    
   140001545:	int3   
   140001546:	int3   
   140001547:	int3   
   140001548:	int3   
   140001549:	int3   
   14000154a:	int3   
   14000154b:	int3   
   14000154c:	int3   
   14000154d:	int3   
   14000154e:	int3   
   14000154f:	int3   
   140001550:	sub    rsp,0x38
   140001554:	mov    r8d,DWORD PTR [rdx+0x30]
   140001558:	xor    r9d,r9d
   14000155b:	mov    rdx,QWORD PTR [rdx+0x20]
   14000155f:	add    r8d,r8d
   140001562:	mov    BYTE PTR [rsp+0x20],0x1
   140001567:	call   0x14000eb60
   14000156c:	add    rsp,0x38
   140001570:	ret    
   140001571:	int3   
   140001572:	int3   
   140001573:	int3   
   140001574:	int3   
   140001575:	int3   
   140001576:	int3   
   140001577:	int3   
   140001578:	int3   
   140001579:	int3   
   14000157a:	int3   
   14000157b:	int3   
   14000157c:	int3   
   14000157d:	int3   
   14000157e:	int3   
   14000157f:	int3   
   140001580:	sub    rsp,0x38
   140001584:	or     r8,0xffffffffffffffff
   140001588:	inc    r8
   14000158b:	cmp    BYTE PTR [rdx+r8*1],0x0
   140001590:	jne    0x140001588
   140001592:	mov    BYTE PTR [rsp+0x28],0x0
   140001597:	xor    r9d,r9d
   14000159a:	mov    BYTE PTR [rsp+0x20],0x1
   14000159f:	call   0x14000ec30
   1400015a4:	add    rsp,0x38
   1400015a8:	ret    
   1400015a9:	int3   
   1400015aa:	int3   
   1400015ab:	int3   
   1400015ac:	int3   
   1400015ad:	int3   
   1400015ae:	int3   
   1400015af:	int3   
   1400015b0:	sub    rsp,0x38
   1400015b4:	or     r8,0xffffffffffffffff
   1400015b8:	inc    r8
   1400015bb:	cmp    BYTE PTR [rdx+r8*1],0x0
   1400015c0:	jne    0x1400015b8
   1400015c2:	mov    BYTE PTR [rsp+0x28],0x1
   1400015c7:	xor    r9d,r9d
   1400015ca:	mov    BYTE PTR [rsp+0x20],0x1
   1400015cf:	call   0x14000ec30
   1400015d4:	add    rsp,0x38
   1400015d8:	ret    
   1400015d9:	int3   
   1400015da:	int3   
   1400015db:	int3   
   1400015dc:	int3   
   1400015dd:	int3   
   1400015de:	int3   
   1400015df:	int3   
   1400015e0:	sub    rsp,0x38
   1400015e4:	mov    BYTE PTR [rsp+0x28],0x0
   1400015e9:	xor    r9d,r9d
   1400015ec:	mov    BYTE PTR [rsp+0x20],0x1
   1400015f1:	call   0x14000ec30
   1400015f6:	add    rsp,0x38
   1400015fa:	ret    
   1400015fb:	int3   
   1400015fc:	int3   
   1400015fd:	int3   
   1400015fe:	int3   
   1400015ff:	int3   
   140001600:	int3   
   140001601:	int3   
   140001602:	int3   
   140001603:	int3   
   140001604:	int3   
   140001605:	int3   
   140001606:	int3   
   140001607:	int3   
   140001608:	int3   
   140001609:	int3   
   14000160a:	int3   
   14000160b:	int3   
   14000160c:	int3   
   14000160d:	int3   
   14000160e:	int3   
   14000160f:	int3   
   140001610:	sub    rsp,0x38
   140001614:	mov    BYTE PTR [rsp+0x28],0x1
   140001619:	xor    r9d,r9d
   14000161c:	mov    BYTE PTR [rsp+0x20],0x1
   140001621:	call   0x14000ec30
   140001626:	add    rsp,0x38
   14000162a:	ret    
   14000162b:	int3   
   14000162c:	int3   
   14000162d:	int3   
   14000162e:	int3   
   14000162f:	int3   
   140001630:	int3   
   140001631:	int3   
   140001632:	int3   
   140001633:	int3   
   140001634:	int3   
   140001635:	int3   
   140001636:	int3   
   140001637:	int3   
   140001638:	int3   
   140001639:	int3   
   14000163a:	int3   
   14000163b:	int3   
   14000163c:	int3   
   14000163d:	int3   
   14000163e:	int3   
   14000163f:	int3   
   140001640:	mov    rax,rcx
   140001643:	ret    
   140001644:	int3   
   140001645:	int3   
   140001646:	int3   
   140001647:	int3   
   140001648:	int3   
   140001649:	int3   
   14000164a:	int3   
   14000164b:	int3   
   14000164c:	int3   
   14000164d:	int3   
   14000164e:	int3   
   14000164f:	int3   
   140001650:	rex push rbx
   140001652:	sub    rsp,0x20
   140001656:	mov    rbx,rcx
   140001659:	xor    eax,eax
   14000165b:	mov    rcx,QWORD PTR [rcx+0x20]
   14000165f:	test   rcx,rcx
   140001662:	je     0x140001670
   140001664:	mov    edx,DWORD PTR [rbx+0x28]
   140001667:	shr    rdx,1
   14000166a:	call   QWORD PTR [rip+0x10d20]        # 0x140012390
   140001670:	mov    DWORD PTR [rbx+0x30],eax
   140001673:	add    rsp,0x20
   140001677:	pop    rbx
   140001678:	ret    
   140001679:	int3   
   14000167a:	int3   
   14000167b:	int3   
   14000167c:	int3   
   14000167d:	int3   
   14000167e:	int3   
   14000167f:	int3   
   140001680:	mov    eax,DWORD PTR [rcx+0x28]
   140001683:	mov    r8,rcx
   140001686:	shr    eax,1
   140001688:	cmp    edx,eax
   14000168a:	jb     0x14000168f
   14000168c:	xor    al,al
   14000168e:	ret    
   14000168f:	mov    rax,QWORD PTR [r8+0x20]
   140001693:	xor    r9d,r9d
   140001696:	mov    ecx,edx
   140001698:	mov    WORD PTR [rax+rcx*2],r9w
   14000169d:	mov    al,0x1
   14000169f:	mov    DWORD PTR [r8+0x30],edx
   1400016a3:	ret    
   1400016a4:	int3   
   1400016a5:	int3   
   1400016a6:	int3   
   1400016a7:	int3   
   1400016a8:	int3   
   1400016a9:	int3   
   1400016aa:	int3   
   1400016ab:	int3   
   1400016ac:	int3   
   1400016ad:	int3   
   1400016ae:	int3   
   1400016af:	int3   
   1400016b0:	xor    r8d,r8d
   1400016b3:	mov    QWORD PTR [rcx+0x20],rcx
   1400016b7:	mov    QWORD PTR [rcx],r8
   1400016ba:	mov    edx,r8d
   1400016bd:	mov    QWORD PTR [rcx+0x30],r8
   1400016c1:	mov    DWORD PTR [rcx+0x28],0x20
   1400016c8:	mov    WORD PTR [rcx+0x2c],0x100
   1400016ce:	mov    rax,QWORD PTR [rcx+0x20]
   1400016d2:	mov    WORD PTR [rdx+rax*1],r8w
   1400016d7:	add    rdx,0x2
   1400016db:	cmp    rdx,0x4
   1400016df:	jl     0x1400016ce
   1400016e1:	mov    QWORD PTR [rcx+0x30],0x2
   1400016e9:	mov    rax,rcx
   1400016ec:	ret    
   1400016ed:	int3   
   1400016ee:	int3   
   1400016ef:	int3   
   1400016f0:	int3   
   1400016f1:	int3   
   1400016f2:	int3   
   1400016f3:	int3   
   1400016f4:	int3   
   1400016f5:	int3   
   1400016f6:	int3   
   1400016f7:	int3   
   1400016f8:	int3   
   1400016f9:	int3   
   1400016fa:	int3   
   1400016fb:	int3   
   1400016fc:	int3   
   1400016fd:	int3   
   1400016fe:	int3   
   1400016ff:	int3   
   140001700:	xor    eax,eax
   140001702:	mov    BYTE PTR [rdx],al
   140001704:	mov    QWORD PTR [rcx+0x30],rax
   140001708:	mov    rax,rcx
   14000170b:	mov    QWORD PTR [rcx+0x20],rdx
   14000170f:	mov    DWORD PTR [rcx+0x28],r8d
   140001713:	mov    WORD PTR [rcx+0x2c],0x100
   140001719:	ret    
   14000171a:	int3   
   14000171b:	int3   
   14000171c:	int3   
   14000171d:	int3   
   14000171e:	int3   
   14000171f:	int3   
   140001720:	rex push rbx
   140001722:	sub    rsp,0x20
   140001726:	xor    eax,eax
   140001728:	mov    QWORD PTR [rcx+0x20],rcx
   14000172c:	mov    QWORD PTR [rcx],rax
   14000172f:	mov    rbx,rcx
   140001732:	mov    QWORD PTR [rcx+0x30],rax
   140001736:	mov    DWORD PTR [rcx+0x28],0x20
   14000173d:	mov    WORD PTR [rcx+0x2c],0x100
   140001743:	call   0x14000e640
   140001748:	mov    rax,rbx
   14000174b:	add    rsp,0x20
   14000174f:	pop    rbx
   140001750:	ret    
   140001751:	int3   
   140001752:	int3   
   140001753:	int3   
   140001754:	int3   
   140001755:	int3   
   140001756:	int3   
   140001757:	int3   
   140001758:	int3   
   140001759:	int3   
   14000175a:	int3   
   14000175b:	int3   
   14000175c:	int3   
   14000175d:	int3   
   14000175e:	int3   
   14000175f:	int3   
   140001760:	rex push rbx
   140001762:	sub    rsp,0x20
   140001766:	xor    eax,eax
   140001768:	mov    QWORD PTR [rcx+0x20],rcx
   14000176c:	mov    QWORD PTR [rcx],rax
   14000176f:	mov    rbx,rcx
   140001772:	mov    QWORD PTR [rcx+0x30],rax
   140001776:	mov    DWORD PTR [rcx+0x28],0x20
   14000177d:	mov    WORD PTR [rcx+0x2c],0x100
   140001783:	mov    rdx,QWORD PTR [rdx+0x20]
   140001787:	call   0x14000e640
   14000178c:	mov    rax,rbx
   14000178f:	add    rsp,0x20
   140001793:	pop    rbx
   140001794:	ret    
   140001795:	int3   
   140001796:	int3   
   140001797:	int3   
   140001798:	int3   
   140001799:	int3   
   14000179a:	int3   
   14000179b:	int3   
   14000179c:	int3   
   14000179d:	int3   
   14000179e:	int3   
   14000179f:	int3   
   1400017a0:	movzx  eax,BYTE PTR [rcx+0x2d]
   1400017a4:	ret    
   1400017a5:	int3   
   1400017a6:	int3   
   1400017a7:	int3   
   1400017a8:	int3   
   1400017a9:	int3   
   1400017aa:	int3   
   1400017ab:	int3   
   1400017ac:	int3   
   1400017ad:	int3   
   1400017ae:	int3   
   1400017af:	int3   
   1400017b0:	mov    rdx,QWORD PTR [rcx+0x20]
   1400017b4:	xor    eax,eax
   1400017b6:	cmp    WORD PTR [rdx],ax
   1400017b9:	sete   al
   1400017bc:	ret    
   1400017bd:	int3   
   1400017be:	int3   
   1400017bf:	int3   
   1400017c0:	int3   
   1400017c1:	int3   
   1400017c2:	int3   
   1400017c3:	int3   
   1400017c4:	int3   
   1400017c5:	int3   
   1400017c6:	int3   
   1400017c7:	int3   
   1400017c8:	int3   
   1400017c9:	int3   
   1400017ca:	int3   
   1400017cb:	int3   
   1400017cc:	int3   
   1400017cd:	int3   
   1400017ce:	int3   
   1400017cf:	int3   
   1400017d0:	sub    rsp,0x28
   1400017d4:	mov    r10,rcx
   1400017d7:	xor    ecx,ecx
   1400017d9:	test   rdx,rdx
   1400017dc:	je     0x140001801
   1400017de:	or     rax,0xffffffffffffffff
   1400017e2:	inc    rax
   1400017e5:	cmp    WORD PTR [rdx+rax*2],cx
   1400017e9:	jne    0x1400017e2
   1400017eb:	lea    r8d,[rax+rax*1]
   1400017ef:	mov    r9d,0x1
   1400017f5:	mov    rcx,r10
   1400017f8:	call   0x14000e6f0
   1400017fd:	mov    ecx,eax
   1400017ff:	jmp    0x140001806
   140001801:	mov    ecx,0x1
   140001806:	mov    eax,ecx
   140001808:	add    rsp,0x28
   14000180c:	ret    
   14000180d:	int3   
   14000180e:	int3   
   14000180f:	int3   
   140001810:	int3   
   140001811:	int3   
   140001812:	int3   
   140001813:	int3   
   140001814:	int3   
   140001815:	int3   
   140001816:	int3   
   140001817:	int3   
   140001818:	int3   
   140001819:	int3   
   14000181a:	int3   
   14000181b:	int3   
   14000181c:	int3   
   14000181d:	int3   
   14000181e:	int3   
   14000181f:	int3   
   140001820:	test   rdx,rdx
   140001823:	je     0x140001833
   140001825:	add    r8d,r8d
   140001828:	mov    r9d,0x1
   14000182e:	jmp    0x14000e6f0
   140001833:	mov    eax,0x1
   140001838:	ret    
   140001839:	int3   
   14000183a:	int3   
   14000183b:	int3   
   14000183c:	int3   
   14000183d:	int3   
   14000183e:	int3   
   14000183f:	int3   
   140001840:	mov    r8d,DWORD PTR [rdx+0x30]
   140001844:	mov    r9d,0x1
   14000184a:	mov    rdx,QWORD PTR [rdx+0x20]
   14000184e:	add    r8d,r8d
   140001851:	jmp    0x14000e6f0
   140001856:	int3   
   140001857:	int3   
   140001858:	int3   
   140001859:	int3   
   14000185a:	int3   
   14000185b:	int3   
   14000185c:	int3   
   14000185d:	int3   
   14000185e:	int3   
   14000185f:	int3   
   140001860:	sub    rsp,0x28
   140001864:	mov    r10,rcx
   140001867:	xor    ecx,ecx
   140001869:	test   rdx,rdx
   14000186c:	je     0x140001891
   14000186e:	or     rax,0xffffffffffffffff
   140001872:	inc    rax
   140001875:	cmp    WORD PTR [rdx+rax*2],cx
   140001879:	jne    0x140001872
   14000187b:	lea    r8d,[rax+rax*1]
   14000187f:	mov    r9d,0x1
   140001885:	mov    rcx,r10
   140001888:	call   0x14000e7e0
   14000188d:	mov    ecx,eax
   14000188f:	jmp    0x140001896
   140001891:	mov    ecx,0x1
   140001896:	mov    eax,ecx
   140001898:	add    rsp,0x28
   14000189c:	ret    
   14000189d:	int3   
   14000189e:	int3   
   14000189f:	int3   
   1400018a0:	int3   
   1400018a1:	int3   
   1400018a2:	int3   
   1400018a3:	int3   
   1400018a4:	int3   
   1400018a5:	int3   
   1400018a6:	int3   
   1400018a7:	int3   
   1400018a8:	int3   
   1400018a9:	int3   
   1400018aa:	int3   
   1400018ab:	int3   
   1400018ac:	int3   
   1400018ad:	int3   
   1400018ae:	int3   
   1400018af:	int3   
   1400018b0:	test   rdx,rdx
   1400018b3:	je     0x1400018c3
   1400018b5:	add    r8d,r8d
   1400018b8:	mov    r9d,0x1
   1400018be:	jmp    0x14000e7e0
   1400018c3:	mov    eax,0x1
   1400018c8:	ret    
   1400018c9:	int3   
   1400018ca:	int3   
   1400018cb:	int3   
   1400018cc:	int3   
   1400018cd:	int3   
   1400018ce:	int3   
   1400018cf:	int3   
   1400018d0:	mov    r8d,DWORD PTR [rdx+0x30]
   1400018d4:	mov    r9d,0x1
   1400018da:	mov    rdx,QWORD PTR [rdx+0x20]
   1400018de:	add    r8d,r8d
   1400018e1:	jmp    0x14000e7e0
   1400018e6:	int3   
   1400018e7:	int3   
   1400018e8:	int3   
   1400018e9:	int3   
   1400018ea:	int3   
   1400018eb:	int3   
   1400018ec:	int3   
   1400018ed:	int3   
   1400018ee:	int3   
   1400018ef:	int3   
   1400018f0:	xor    r8d,r8d
   1400018f3:	mov    edx,r8d
   1400018f6:	mov    rax,QWORD PTR [rcx+0x20]
   1400018fa:	mov    WORD PTR [rdx+rax*1],r8w
   1400018ff:	add    rdx,0x2
   140001903:	cmp    rdx,0x4
   140001907:	jl     0x1400018f6
   140001909:	mov    QWORD PTR [rcx+0x30],0x2
   140001911:	ret    
   140001912:	int3   
   140001913:	int3   
   140001914:	int3   
   140001915:	int3   
   140001916:	int3   
   140001917:	int3   
   140001918:	int3   
   140001919:	int3   
   14000191a:	int3   
   14000191b:	int3   
   14000191c:	int3   
   14000191d:	int3   
   14000191e:	int3   
   14000191f:	int3   
   140001920:	xor    r10d,r10d
   140001923:	cmp    QWORD PTR [rcx+0x20],r10
   140001927:	je     0x140001947
   140001929:	mov    r9d,r10d
   14000192c:	mov    rax,QWORD PTR [rcx+0x20]
   140001930:	mov    WORD PTR [r9+rax*1],r10w
   140001935:	add    r9,0x2
   140001939:	cmp    r9,0x4
   14000193d:	jl     0x14000192c
   14000193f:	mov    QWORD PTR [rcx+0x30],0x2
   140001947:	test   rdx,rdx
   14000194a:	je     0x140001954
   14000194c:	xor    r9d,r9d
   14000194f:	jmp    0x14000e6f0
   140001954:	mov    eax,0x1
   140001959:	ret    
   14000195a:	int3   
   14000195b:	int3   
   14000195c:	int3   
   14000195d:	int3   
   14000195e:	int3   
   14000195f:	int3   
   140001960:	mov    r8d,DWORD PTR [rdx+0x30]
   140001964:	xor    r10d,r10d
   140001967:	mov    rdx,QWORD PTR [rdx+0x20]
   14000196b:	add    r8d,r8d
   14000196e:	cmp    QWORD PTR [rcx+0x20],r10
   140001972:	je     0x140001992
   140001974:	mov    r9d,r10d
   140001977:	mov    rax,QWORD PTR [rcx+0x20]
   14000197b:	mov    WORD PTR [r9+rax*1],r10w
   140001980:	add    r9,0x2
   140001984:	cmp    r9,0x4
   140001988:	jl     0x140001977
   14000198a:	mov    QWORD PTR [rcx+0x30],0x2
   140001992:	test   rdx,rdx
   140001995:	je     0x14000199f
   140001997:	xor    r9d,r9d
   14000199a:	jmp    0x14000e6f0
   14000199f:	mov    eax,0x1
   1400019a4:	ret    
   1400019a5:	int3   
   1400019a6:	int3   
   1400019a7:	int3   
   1400019a8:	int3   
   1400019a9:	int3   
   1400019aa:	int3   
   1400019ab:	int3   
   1400019ac:	int3   
   1400019ad:	int3   
   1400019ae:	int3   
   1400019af:	int3   
   1400019b0:	xor    r10d,r10d
   1400019b3:	cmp    QWORD PTR [rcx+0x20],r10
   1400019b7:	je     0x1400019d7
   1400019b9:	mov    r9d,r10d
   1400019bc:	mov    rax,QWORD PTR [rcx+0x20]
   1400019c0:	mov    WORD PTR [r9+rax*1],r10w
   1400019c5:	add    r9,0x2
   1400019c9:	cmp    r9,0x4
   1400019cd:	jl     0x1400019bc
   1400019cf:	mov    QWORD PTR [rcx+0x30],0x2
   1400019d7:	test   rdx,rdx
   1400019da:	je     0x1400019e4
   1400019dc:	xor    r9d,r9d
   1400019df:	jmp    0x14000e7e0
   1400019e4:	mov    eax,0x1
   1400019e9:	ret    
   1400019ea:	int3   
   1400019eb:	int3   
   1400019ec:	int3   
   1400019ed:	int3   
   1400019ee:	int3   
   1400019ef:	int3   
   1400019f0:	mov    r8d,DWORD PTR [rdx+0x30]
   1400019f4:	xor    r10d,r10d
   1400019f7:	mov    rdx,QWORD PTR [rdx+0x20]
   1400019fb:	add    r8d,r8d
   1400019fe:	cmp    QWORD PTR [rcx+0x20],r10
   140001a02:	je     0x140001a22
   140001a04:	mov    r9d,r10d
   140001a07:	mov    rax,QWORD PTR [rcx+0x20]
   140001a0b:	mov    WORD PTR [r9+rax*1],r10w
   140001a10:	add    r9,0x2
   140001a14:	cmp    r9,0x4
   140001a18:	jl     0x140001a07
   140001a1a:	mov    QWORD PTR [rcx+0x30],0x2
   140001a22:	test   rdx,rdx
   140001a25:	je     0x140001a2f
   140001a27:	xor    r9d,r9d
   140001a2a:	jmp    0x14000e7e0
   140001a2f:	mov    eax,0x1
   140001a34:	ret    
   140001a35:	int3   
   140001a36:	int3   
   140001a37:	int3   
   140001a38:	int3   
   140001a39:	int3   
   140001a3a:	int3   
   140001a3b:	int3   
   140001a3c:	int3   
   140001a3d:	int3   
   140001a3e:	int3   
   140001a3f:	int3   
   140001a40:	mov    eax,DWORD PTR [rcx+0x34]
   140001a43:	ret    
   140001a44:	int3   
   140001a45:	int3   
   140001a46:	int3   
   140001a47:	int3   
   140001a48:	int3   
   140001a49:	int3   
   140001a4a:	int3   
   140001a4b:	int3   
   140001a4c:	int3   
   140001a4d:	int3   
   140001a4e:	int3   
   140001a4f:	int3   
   140001a50:	rex push rbx
   140001a52:	sub    rsp,0x20
   140001a56:	xor    ebx,ebx
   140001a58:	mov    r10,rdx
   140001a5b:	test   rdx,rdx
   140001a5e:	jne    0x140001a6b
   140001a60:	lea    ecx,[rdx+0x57]
   140001a63:	call   QWORD PTR [rip+0x10867]        # 0x1400122d0
   140001a69:	jmp    0x140001ab2
   140001a6b:	mov    r8d,DWORD PTR [rcx+0x30]
   140001a6f:	mov    rdx,QWORD PTR [rcx+0x20]
   140001a73:	add    r8d,r8d
   140001a76:	cmp    QWORD PTR [r10+0x20],rbx
   140001a7a:	je     0x140001a99
   140001a7c:	mov    rcx,rbx
   140001a7f:	mov    rax,QWORD PTR [r10+0x20]
   140001a83:	mov    WORD PTR [rcx+rax*1],bx
   140001a87:	add    rcx,0x2
   140001a8b:	cmp    rcx,0x4
   140001a8f:	jl     0x140001a7f
   140001a91:	mov    QWORD PTR [r10+0x30],0x2
   140001a99:	test   rdx,rdx
   140001a9c:	je     0x140001aad
   140001a9e:	xor    r9d,r9d
   140001aa1:	mov    rcx,r10
   140001aa4:	call   0x14000e6f0
   140001aa9:	mov    ebx,eax
   140001aab:	jmp    0x140001ab2
   140001aad:	mov    ebx,0x1
   140001ab2:	mov    eax,ebx
   140001ab4:	add    rsp,0x20
   140001ab8:	pop    rbx
   140001ab9:	ret    
   140001aba:	int3   
   140001abb:	int3   
   140001abc:	int3   
   140001abd:	int3   
   140001abe:	int3   
   140001abf:	int3   
   140001ac0:	rex push rbx
   140001ac2:	sub    rsp,0x20
   140001ac6:	mov    rbx,rcx
   140001ac9:	lea    rdx,[rcx+0x34]
   140001acd:	mov    rcx,QWORD PTR [rcx+0x20]
   140001ad1:	call   0x14000e520
   140001ad6:	mov    DWORD PTR [rbx+0x30],eax
   140001ad9:	add    rsp,0x20
   140001add:	pop    rbx
   140001ade:	ret    
   140001adf:	int3   
   140001ae0:	int3   
   140001ae1:	int3   
   140001ae2:	int3   
   140001ae3:	int3   
   140001ae4:	int3   
   140001ae5:	int3   
   140001ae6:	int3   
   140001ae7:	int3   
   140001ae8:	int3   
   140001ae9:	int3   
   140001aea:	int3   
   140001aeb:	int3   
   140001aec:	int3   
   140001aed:	int3   
   140001aee:	int3   
   140001aef:	int3   
   140001af0:	mov    rdx,QWORD PTR [rdx+0x20]
   140001af4:	jmp    0x14000e570
   140001af9:	int3   
   140001afa:	int3   
   140001afb:	int3   
   140001afc:	int3   
   140001afd:	int3   
   140001afe:	int3   
   140001aff:	int3   
   140001b00:	mov    rdx,QWORD PTR [rdx+0x20]
   140001b04:	jmp    0x14000e5d0
   140001b09:	int3   
   140001b0a:	int3   
   140001b0b:	int3   
   140001b0c:	int3   
   140001b0d:	int3   
   140001b0e:	int3   
   140001b0f:	int3   
   140001b10:	mov    rdx,QWORD PTR [rcx+0x20]
   140001b14:	movzx  eax,WORD PTR [rdx]
   140001b17:	neg    ax
   140001b1a:	sbb    rax,rax
   140001b1d:	and    rax,rdx
   140001b20:	ret    
   140001b21:	int3   
   140001b22:	int3   
   140001b23:	int3   
   140001b24:	int3   
   140001b25:	int3   
   140001b26:	int3   
   140001b27:	int3   
   140001b28:	int3   
   140001b29:	int3   
   140001b2a:	int3   
   140001b2b:	int3   
   140001b2c:	int3   
   140001b2d:	int3   
   140001b2e:	int3   
   140001b2f:	int3   
   140001b30:	or     rax,0xffffffffffffffff
   140001b34:	inc    rax
   140001b37:	cmp    WORD PTR [rdx+rax*2],0x0
   140001b3c:	jne    0x140001b34
   140001b3e:	lea    rcx,[rdx+0x2]
   140001b42:	lea    rcx,[rcx+rax*2]
   140001b46:	movzx  eax,WORD PTR [rcx]
   140001b49:	neg    ax
   140001b4c:	sbb    rax,rax
   140001b4f:	and    rax,rcx
   140001b52:	ret    
   140001b53:	int3   
   140001b54:	int3   
   140001b55:	int3   
   140001b56:	int3   
   140001b57:	int3   
   140001b58:	int3   
   140001b59:	int3   
   140001b5a:	int3   
   140001b5b:	int3   
   140001b5c:	int3   
   140001b5d:	int3   
   140001b5e:	int3   
   140001b5f:	int3   
   140001b60:	movups xmm0,XMMWORD PTR [rdx]
   140001b63:	mov    rax,rcx
   140001b66:	movups XMMWORD PTR [rcx],xmm0
   140001b69:	movups xmm1,XMMWORD PTR [rdx+0x10]
   140001b6d:	movups XMMWORD PTR [rcx+0x10],xmm1
   140001b71:	movups xmm0,XMMWORD PTR [rdx+0x20]
   140001b75:	movups XMMWORD PTR [rcx+0x20],xmm0
   140001b79:	movsd  xmm1,QWORD PTR [rdx+0x30]
   140001b7e:	movsd  QWORD PTR [rcx+0x30],xmm1
   140001b83:	ret    
   140001b84:	int3   
   140001b85:	int3   
   140001b86:	int3   
   140001b87:	int3   
   140001b88:	int3   
   140001b89:	int3   
   140001b8a:	int3   
   140001b8b:	int3   
   140001b8c:	int3   
   140001b8d:	int3   
   140001b8e:	int3   
   140001b8f:	int3   
   140001b90:	mov    eax,DWORD PTR [rcx+0x8]
   140001b93:	ret    
   140001b94:	int3   
   140001b95:	int3   
   140001b96:	int3   
   140001b97:	int3   
   140001b98:	int3   
   140001b99:	int3   
   140001b9a:	int3   
   140001b9b:	int3   
   140001b9c:	int3   
   140001b9d:	int3   
   140001b9e:	int3   
   140001b9f:	int3   
   140001ba0:	mov    rax,QWORD PTR [rcx]
   140001ba3:	ret    
   140001ba4:	int3   
   140001ba5:	int3   
   140001ba6:	int3   
   140001ba7:	int3   
   140001ba8:	int3   
   140001ba9:	int3   
   140001baa:	int3   
   140001bab:	int3   
   140001bac:	int3   
   140001bad:	int3   
   140001bae:	int3   
   140001baf:	int3   
   140001bb0:	mov    rax,rsp
   140001bb3:	mov    QWORD PTR [rax+0x8],rbx
   140001bb7:	mov    QWORD PTR [rax+0x10],rbp
   140001bbb:	mov    QWORD PTR [rax+0x18],rsi
   140001bbf:	mov    QWORD PTR [rax+0x20],rdi
   140001bc3:	push   r12
   140001bc5:	push   r14
   140001bc7:	push   r15
   140001bc9:	sub    rsp,0x40
   140001bcd:	mov    rbx,QWORD PTR [rsp+0x80]
   140001bd5:	mov    esi,r9d
   140001bd8:	mov    rdi,QWORD PTR [rsp+0x88]
   140001be0:	mov    ebp,r8d
   140001be3:	mov    r12d,DWORD PTR [rsp+0x90]
   140001beb:	mov    r14,rdx
   140001bee:	mov    r15,rcx
   140001bf1:	mov    eax,DWORD PTR [rbx+0x28]
   140001bf4:	mov    DWORD PTR [rdi],eax
   140001bf6:	mov    rax,QWORD PTR [rbx+0x20]
   140001bfa:	mov    r9d,esi
   140001bfd:	mov    DWORD PTR [rsp+0x38],r12d
   140001c02:	mov    r8d,ebp
   140001c05:	mov    QWORD PTR [rsp+0x30],rdi
   140001c0a:	mov    rdx,r14
   140001c0d:	mov    QWORD PTR [rsp+0x28],rax
   140001c12:	mov    rcx,r15
   140001c15:	mov    DWORD PTR [rsp+0x20],0x3
   140001c1d:	call   0x14000fd00
   140001c22:	test   eax,eax
   140001c24:	jne    0x140001c48
   140001c26:	call   QWORD PTR [rip+0x106cc]        # 0x1400122f8
   140001c2c:	cmp    eax,0x7a
   140001c2f:	jne    0x140001c44
   140001c31:	mov    edx,DWORD PTR [rdi]
   140001c33:	cmp    edx,DWORD PTR [rbx+0x28]
   140001c36:	jbe    0x140001bf6
   140001c38:	mov    rcx,rbx
   140001c3b:	call   0x14000ea50
   140001c40:	test   al,al
   140001c42:	jne    0x140001bf6
   140001c44:	xor    eax,eax
   140001c46:	jmp    0x140001c4d
   140001c48:	mov    eax,0x1
   140001c4d:	mov    rbx,QWORD PTR [rsp+0x60]
   140001c52:	mov    rbp,QWORD PTR [rsp+0x68]
   140001c57:	mov    rsi,QWORD PTR [rsp+0x70]
   140001c5c:	mov    rdi,QWORD PTR [rsp+0x78]
   140001c61:	add    rsp,0x40
   140001c65:	pop    r15
   140001c67:	pop    r14
   140001c69:	pop    r12
   140001c6b:	ret    
   140001c6c:	int3   
   140001c6d:	int3   
   140001c6e:	int3   
   140001c6f:	int3   
   140001c70:	int3   
   140001c71:	int3   
   140001c72:	int3   
   140001c73:	int3   
   140001c74:	int3   
   140001c75:	int3   
   140001c76:	int3   
   140001c77:	int3   
   140001c78:	int3   
   140001c79:	int3   
   140001c7a:	int3   
   140001c7b:	int3   
   140001c7c:	int3   
   140001c7d:	int3   
   140001c7e:	int3   
   140001c7f:	int3   
   140001c80:	movups xmm0,XMMWORD PTR [rdx]
   140001c83:	mov    rax,rcx
   140001c86:	movdqu XMMWORD PTR [rcx],xmm0
   140001c8a:	ret    
   140001c8b:	int3   
   140001c8c:	int3   
   140001c8d:	int3   
   140001c8e:	int3   
   140001c8f:	int3   
   140001c90:	int3   
   140001c91:	int3   
   140001c92:	int3   
   140001c93:	int3   
   140001c94:	int3   
   140001c95:	int3   
   140001c96:	int3   
   140001c97:	int3   
   140001c98:	int3   
   140001c99:	int3   
   140001c9a:	int3   
   140001c9b:	int3   
   140001c9c:	int3   
   140001c9d:	int3   
   140001c9e:	int3   
   140001c9f:	int3   
   140001ca0:	sub    rsp,0x58
   140001ca4:	mov    eax,DWORD PTR [rsp+0x88]
   140001cab:	mov    DWORD PTR [rsp+0x38],eax
   140001caf:	lea    rax,[rsp+0x40]
   140001cb4:	mov    QWORD PTR [rsp+0x30],rax
   140001cb9:	mov    rax,QWORD PTR [rsp+0x80]
   140001cc1:	mov    QWORD PTR [rsp+0x28],rax
   140001cc6:	mov    DWORD PTR [rsp+0x20],0x1
   140001cce:	mov    DWORD PTR [rsp+0x40],0x4
   140001cd6:	call   0x14000fd00
   140001cdb:	add    rsp,0x58
   140001cdf:	ret    
   140001ce0:	int3   
   140001ce1:	int3   
   140001ce2:	int3   
   140001ce3:	int3   
   140001ce4:	int3   
   140001ce5:	int3   
   140001ce6:	int3   
   140001ce7:	int3   
   140001ce8:	int3   
   140001ce9:	int3   
   140001cea:	int3   
   140001ceb:	int3   
   140001cec:	int3   
   140001ced:	int3   
   140001cee:	int3   
   140001cef:	int3   
   140001cf0:	rex push rbx
   140001cf2:	sub    rsp,0x50
   140001cf6:	mov    eax,DWORD PTR [rsp+0x90]
   140001cfd:	mov    rbx,QWORD PTR [rsp+0x88]
   140001d05:	mov    DWORD PTR [rsp+0x38],eax
   140001d09:	lea    rax,[rsp+0x40]
   140001d0e:	mov    QWORD PTR [rsp+0x30],rax
   140001d13:	mov    QWORD PTR [rsp+0x28],rbx
   140001d18:	mov    DWORD PTR [rsp+0x20],0x1
   140001d20:	mov    DWORD PTR [rsp+0x40],0x4
   140001d28:	call   0x14000fd00
   140001d2d:	test   eax,eax
   140001d2f:	jne    0x140001d3a
   140001d31:	mov    eax,DWORD PTR [rsp+0x80]
   140001d38:	mov    DWORD PTR [rbx],eax
   140001d3a:	add    rsp,0x50
   140001d3e:	pop    rbx
   140001d3f:	ret    
   140001d40:	int3   
   140001d41:	int3   
   140001d42:	int3   
   140001d43:	int3   
   140001d44:	int3   
   140001d45:	int3   
   140001d46:	int3   
   140001d47:	int3   
   140001d48:	int3   
   140001d49:	int3   
   140001d4a:	int3   
   140001d4b:	int3   
   140001d4c:	int3   
   140001d4d:	int3   
   140001d4e:	int3   
   140001d4f:	int3   
   140001d50:	sub    rsp,0x48
   140001d54:	mov    eax,DWORD PTR [rsp+0x80]
   140001d5b:	mov    DWORD PTR [rsp+0x38],eax
   140001d5f:	mov    rax,QWORD PTR [rsp+0x78]
   140001d64:	mov    QWORD PTR [rsp+0x30],rax
   140001d69:	mov    rax,QWORD PTR [rsp+0x70]
   140001d6e:	mov    QWORD PTR [rsp+0x28],rax
   140001d73:	mov    DWORD PTR [rsp+0x20],0x2
   140001d7b:	call   0x14000fd00
   140001d80:	add    rsp,0x48
   140001d84:	ret    
   140001d85:	int3   
   140001d86:	int3   
   140001d87:	int3   
   140001d88:	int3   
   140001d89:	int3   
   140001d8a:	int3   
   140001d8b:	int3   
   140001d8c:	int3   
   140001d8d:	int3   
   140001d8e:	int3   
   140001d8f:	int3   
   140001d90:	sub    rsp,0x48
   140001d94:	mov    eax,DWORD PTR [rsp+0x78]
   140001d98:	mov    DWORD PTR [rsp+0x38],eax
   140001d9c:	lea    rax,[rsp+0x70]
   140001da1:	mov    DWORD PTR [rsp+0x30],0x4
   140001da9:	mov    QWORD PTR [rsp+0x28],rax
   140001dae:	mov    DWORD PTR [rsp+0x20],0x1
   140001db6:	call   0x14000fc70
   140001dbb:	add    rsp,0x48
   140001dbf:	ret    
   140001dc0:	int3   
   140001dc1:	int3   
   140001dc2:	int3   
   140001dc3:	int3   
   140001dc4:	int3   
   140001dc5:	int3   
   140001dc6:	int3   
   140001dc7:	int3   
   140001dc8:	int3   
   140001dc9:	int3   
   140001dca:	int3   
   140001dcb:	int3   
   140001dcc:	int3   
   140001dcd:	int3   
   140001dce:	int3   
   140001dcf:	int3   
   140001dd0:	sub    rsp,0x48
   140001dd4:	mov    r10,QWORD PTR [rsp+0x70]
   140001dd9:	mov    r11,rcx
   140001ddc:	or     rax,0xffffffffffffffff
   140001de0:	inc    rax
   140001de3:	cmp    WORD PTR [r10+rax*2],0x0
   140001de9:	jne    0x140001de0
   140001deb:	lea    ecx,[rax*2+0x2]
   140001df2:	mov    eax,DWORD PTR [rsp+0x78]
   140001df6:	mov    DWORD PTR [rsp+0x38],eax
   140001dfa:	mov    DWORD PTR [rsp+0x30],ecx
   140001dfe:	mov    rcx,r11
   140001e01:	mov    QWORD PTR [rsp+0x28],r10
   140001e06:	mov    DWORD PTR [rsp+0x20],0x2
   140001e0e:	call   0x14000fc70
   140001e13:	add    rsp,0x48
   140001e17:	ret    
   140001e18:	int3   
   140001e19:	int3   
   140001e1a:	int3   
   140001e1b:	int3   
   140001e1c:	int3   
   140001e1d:	int3   
   140001e1e:	int3   
   140001e1f:	int3   
   140001e20:	mov    r9d,r8d
   140001e23:	mov    r8,rdx
   140001e26:	xor    edx,edx
   140001e28:	jmp    0x14000f800
   140001e2d:	int3   
   140001e2e:	int3   
   140001e2f:	int3   
   140001e30:	int3   
   140001e31:	int3   
   140001e32:	int3   
   140001e33:	int3   
   140001e34:	int3   
   140001e35:	int3   
   140001e36:	int3   
   140001e37:	int3   
   140001e38:	int3   
   140001e39:	int3   
   140001e3a:	int3   
   140001e3b:	int3   
   140001e3c:	int3   
   140001e3d:	int3   
   140001e3e:	int3   
   140001e3f:	int3   
   140001e40:	rex.W jmp QWORD PTR [rip+0x104a9]        # 0x1400122f0
   140001e47:	int3   
   140001e48:	int3   
   140001e49:	int3   
   140001e4a:	int3   
   140001e4b:	int3   
   140001e4c:	int3   
   140001e4d:	int3   
   140001e4e:	int3   
   140001e4f:	int3   
   140001e50:	mov    QWORD PTR [rsp+0x8],rbx
   140001e55:	push   rdi
   140001e56:	sub    rsp,0x20
   140001e5a:	mov    eax,DWORD PTR [rcx]
   140001e5c:	mov    rbx,rcx
   140001e5f:	test   eax,eax
   140001e61:	jne    0x140001e76
   140001e63:	call   QWORD PTR [rip+0x10487]        # 0x1400122f0
   140001e69:	mov    edx,eax
   140001e6b:	xor    eax,eax
   140001e6d:	lock cmpxchg DWORD PTR [rbx],edx
   140001e71:	sete   al
   140001e74:	jmp    0x140001e78
   140001e76:	xor    al,al
   140001e78:	mov    rbx,QWORD PTR [rsp+0x30]
   140001e7d:	add    rsp,0x20
   140001e81:	pop    rdi
   140001e82:	ret    
   140001e83:	int3   
   140001e84:	int3   
   140001e85:	int3   
   140001e86:	int3   
   140001e87:	int3   
   140001e88:	int3   
   140001e89:	int3   
   140001e8a:	int3   
   140001e8b:	int3   
   140001e8c:	int3   
   140001e8d:	int3   
   140001e8e:	int3   
   140001e8f:	int3   
   140001e90:	mov    DWORD PTR [rcx],0x0
   140001e96:	mov    rax,rcx
   140001e99:	ret    
   140001e9a:	int3   
   140001e9b:	int3   
   140001e9c:	int3   
   140001e9d:	int3   
   140001e9e:	int3   
   140001e9f:	int3   
   140001ea0:	ret    0x0
   140001ea3:	int3   
   140001ea4:	int3   
   140001ea5:	int3   
   140001ea6:	int3   
   140001ea7:	int3   
   140001ea8:	int3   
   140001ea9:	int3   
   140001eaa:	int3   
   140001eab:	int3   
   140001eac:	int3   
   140001ead:	int3   
   140001eae:	int3   
   140001eaf:	int3   
   140001eb0:	rex push rbx
   140001eb2:	sub    rsp,0x20
   140001eb6:	mov    eax,DWORD PTR [rcx]
   140001eb8:	mov    rbx,rcx
   140001ebb:	test   eax,eax
   140001ebd:	jne    0x140001ed2
   140001ebf:	call   QWORD PTR [rip+0x1042b]        # 0x1400122f0
   140001ec5:	mov    edx,eax
   140001ec7:	xor    eax,eax
   140001ec9:	lock cmpxchg DWORD PTR [rbx],edx
   140001ecd:	sete   cl
   140001ed0:	jmp    0x140001ed4
   140001ed2:	xor    cl,cl
   140001ed4:	test   cl,cl
   140001ed6:	jne    0x140001ee0
   140001ed8:	mov    rcx,rbx
   140001edb:	call   0x14000c240
   140001ee0:	add    rsp,0x20
   140001ee4:	pop    rbx
   140001ee5:	ret    
   140001ee6:	int3   
   140001ee7:	int3   
   140001ee8:	int3   
   140001ee9:	int3   
   140001eea:	int3   
   140001eeb:	int3   
   140001eec:	int3   
   140001eed:	int3   
   140001eee:	int3   
   140001eef:	int3   
   140001ef0:	rex push rbx
   140001ef2:	sub    rsp,0x20
   140001ef6:	mov    eax,DWORD PTR [rcx]
   140001ef8:	xor    edx,edx
   140001efa:	mov    rbx,rcx
   140001efd:	test   eax,eax
   140001eff:	jne    0x140001f12
   140001f01:	call   QWORD PTR [rip+0x103e9]        # 0x1400122f0
   140001f07:	mov    edx,eax
   140001f09:	xor    eax,eax
   140001f0b:	lock cmpxchg DWORD PTR [rbx],edx
   140001f0f:	sete   dl
   140001f12:	mov    al,dl
   140001f14:	add    rsp,0x20
   140001f18:	pop    rbx
   140001f19:	ret    
   140001f1a:	int3   
   140001f1b:	int3   
   140001f1c:	int3   
   140001f1d:	int3   
   140001f1e:	int3   
   140001f1f:	int3   
   140001f20:	xor    eax,eax
   140001f22:	xchg   DWORD PTR [rcx],eax
   140001f24:	ret    
   140001f25:	int3   
   140001f26:	int3   
   140001f27:	int3   
   140001f28:	int3   
   140001f29:	int3   
   140001f2a:	int3   
   140001f2b:	int3   
   140001f2c:	int3   
   140001f2d:	int3   
   140001f2e:	int3   
   140001f2f:	int3   
   140001f30:	rex push rbx
   140001f32:	sub    rsp,0x20
   140001f36:	mov    rbx,rcx
   140001f39:	call   QWORD PTR [rip+0x103b1]        # 0x1400122f0
   140001f3f:	mov    ecx,DWORD PTR [rbx]
   140001f41:	cmp    ecx,eax
   140001f43:	sete   al
   140001f46:	add    rsp,0x20
   140001f4a:	pop    rbx
   140001f4b:	ret    
   140001f4c:	int3   
   140001f4d:	int3   
   140001f4e:	int3   
   140001f4f:	int3   
   140001f50:	int3   
   140001f51:	int3   
   140001f52:	int3   
   140001f53:	int3   
   140001f54:	int3   
   140001f55:	int3   
   140001f56:	int3   
   140001f57:	int3   
   140001f58:	int3   
   140001f59:	int3   
   140001f5a:	int3   
   140001f5b:	int3   
   140001f5c:	int3   
   140001f5d:	int3   
   140001f5e:	int3   
   140001f5f:	int3   
   140001f60:	mov    edx,DWORD PTR [rcx]
   140001f62:	test   edx,edx
   140001f64:	sete   al
   140001f67:	ret    
   140001f68:	int3   
   140001f69:	int3   
   140001f6a:	int3   
   140001f6b:	int3   
   140001f6c:	int3   
   140001f6d:	int3   
   140001f6e:	int3   
   140001f6f:	int3   
   140001f70:	xor    al,al
   140001f72:	ret    
   140001f73:	int3   
   140001f74:	int3   
   140001f75:	int3   
   140001f76:	int3   
   140001f77:	int3   
   140001f78:	int3   
   140001f79:	int3   
   140001f7a:	int3   
   140001f7b:	int3   
   140001f7c:	int3   
   140001f7d:	int3   
   140001f7e:	int3   
   140001f7f:	int3   
   140001f80:	movzx  eax,WORD PTR [rip+0x1a0dd]        # 0x14001c064
   140001f87:	ret    
   140001f88:	int3   
   140001f89:	int3   
   140001f8a:	int3   
   140001f8b:	int3   
   140001f8c:	int3   
   140001f8d:	int3   
   140001f8e:	int3   
   140001f8f:	int3   
   140001f90:	lea    eax,[rcx-0x64]
   140001f93:	mov    edx,0x26ac
   140001f98:	cmp    ax,dx
   140001f9b:	jbe    0x140001fb9
   140001f9d:	test   cx,cx
   140001fa0:	je     0x140001fb9
   140001fa2:	mov    eax,0xffff
   140001fa7:	cmp    cx,ax
   140001faa:	jne    0x140001fc0
   140001fac:	mov    eax,0xfa0
   140001fb1:	mov    WORD PTR [rip+0x1a0ac],ax        # 0x14001c064
   140001fb8:	ret    
   140001fb9:	mov    WORD PTR [rip+0x1a0a4],cx        # 0x14001c064
   140001fc0:	ret    
   140001fc1:	int3   
   140001fc2:	int3   
   140001fc3:	int3   
   140001fc4:	int3   
   140001fc5:	int3   
   140001fc6:	int3   
   140001fc7:	int3   
   140001fc8:	int3   
   140001fc9:	int3   
   140001fca:	int3   
   140001fcb:	int3   
   140001fcc:	int3   
   140001fcd:	int3   
   140001fce:	int3   
   140001fcf:	int3   
   140001fd0:	comisd xmm0,QWORD PTR [rip+0x11a68]        # 0x140013a40
   140001fd8:	jb     0x140001ff0
   140001fda:	movsd  xmm1,QWORD PTR [rip+0x11a66]        # 0x140013a48
   140001fe2:	comisd xmm1,xmm0
   140001fe6:	jb     0x140001ff0
   140001fe8:	movsd  QWORD PTR [rip+0x1a0b8],xmm0        # 0x14001c0a8
   140001ff0:	ret    
   140001ff1:	int3   
   140001ff2:	int3   
   140001ff3:	int3   
   140001ff4:	int3   
   140001ff5:	int3   
   140001ff6:	int3   
   140001ff7:	int3   
   140001ff8:	int3   
   140001ff9:	int3   
   140001ffa:	int3   
   140001ffb:	int3   
   140001ffc:	int3   
   140001ffd:	int3   
   140001ffe:	int3   
   140001fff:	int3   
   140002000:	movsd  xmm0,QWORD PTR [rip+0x1a0a0]        # 0x14001c0a8
   140002008:	ret    
   140002009:	int3   
   14000200a:	int3   
   14000200b:	int3   
   14000200c:	int3   
   14000200d:	int3   
   14000200e:	int3   
   14000200f:	int3   
   140002010:	lea    rax,[rip+0x10c01]        # 0x140012c18
   140002017:	ret    
   140002018:	int3   
   140002019:	int3   
   14000201a:	int3   
   14000201b:	int3   
   14000201c:	int3   
   14000201d:	int3   
   14000201e:	int3   
   14000201f:	int3   
   140002020:	mov    eax,DWORD PTR [rdx]
   140002022:	mov    DWORD PTR [rcx],eax
   140002024:	mov    rax,rcx
   140002027:	ret    
   140002028:	int3   
   140002029:	int3   
   14000202a:	int3   
   14000202b:	int3   
   14000202c:	int3   
   14000202d:	int3   
   14000202e:	int3   
   14000202f:	int3   
   140002030:	sub    rsp,0x28
   140002034:	call   QWORD PTR [rip+0x102b6]        # 0x1400122f0
   14000203a:	and    eax,0xfffffffc
   14000203d:	add    rsp,0x28
   140002041:	ret    
   140002042:	int3   
   140002043:	int3   
   140002044:	int3   
   140002045:	int3   
   140002046:	int3   
   140002047:	int3   
   140002048:	int3   
   140002049:	int3   
   14000204a:	int3   
   14000204b:	int3   
   14000204c:	int3   
   14000204d:	int3   
   14000204e:	int3   
   14000204f:	int3   
   140002050:	mov    QWORD PTR [rsp+0x8],rbx
   140002055:	push   rdi
   140002056:	sub    rsp,0x20
   14000205a:	mov    eax,DWORD PTR [rcx]
   14000205c:	mov    rbx,rcx
   14000205f:	test   eax,eax
   140002061:	jne    0x14000207c
   140002063:	call   QWORD PTR [rip+0x10287]        # 0x1400122f0
   140002069:	mov    edx,eax
   14000206b:	and    edx,0xfffffffd
   14000206e:	or     edx,0x1
   140002071:	xor    eax,eax
   140002073:	lock cmpxchg DWORD PTR [rbx],edx
   140002077:	sete   al
   14000207a:	jmp    0x14000207e
   14000207c:	xor    al,al
   14000207e:	mov    rbx,QWORD PTR [rsp+0x30]
   140002083:	add    rsp,0x20
   140002087:	pop    rdi
   140002088:	ret    
   140002089:	int3   
   14000208a:	int3   
   14000208b:	int3   
   14000208c:	int3   
   14000208d:	int3   
   14000208e:	int3   
   14000208f:	int3   
   140002090:	rex push rbx
   140002092:	sub    rsp,0x20
   140002096:	mov    rbx,rcx
   140002099:	call   QWORD PTR [rip+0x10251]        # 0x1400122f0
   14000209f:	mov    edx,DWORD PTR [rbx]
   1400020a1:	xor    edx,eax
   1400020a3:	test   edx,0xfffffffc
   1400020a9:	jne    0x1400020ba
   1400020ab:	mov    eax,0x1
   1400020b0:	lock xadd DWORD PTR [rbx],eax
   1400020b4:	add    rsp,0x20
   1400020b8:	pop    rbx
   1400020b9:	ret    
   1400020ba:	mov    rcx,rbx
   1400020bd:	add    rsp,0x20
   1400020c1:	pop    rbx
   1400020c2:	jmp    0x14000c370
   1400020c7:	int3   
   1400020c8:	int3   
   1400020c9:	int3   
   1400020ca:	int3   
   1400020cb:	int3   
   1400020cc:	int3   
   1400020cd:	int3   
   1400020ce:	int3   
   1400020cf:	int3   
   1400020d0:	mov    r8d,DWORD PTR [rcx]
   1400020d3:	dec    r8d
   1400020d6:	mov    al,r8b
   1400020d9:	and    al,0x3
   1400020db:	neg    al
   1400020dd:	sbb    edx,edx
   1400020df:	and    edx,r8d
   1400020e2:	xchg   DWORD PTR [rcx],edx
   1400020e4:	ret    
   1400020e5:	int3   
   1400020e6:	int3   
   1400020e7:	int3   
   1400020e8:	int3   
   1400020e9:	int3   
   1400020ea:	int3   
   1400020eb:	int3   
   1400020ec:	int3   
   1400020ed:	int3   
   1400020ee:	int3   
   1400020ef:	int3   
   1400020f0:	rex push rbx
   1400020f2:	sub    rsp,0x20
   1400020f6:	mov    rbx,rcx
   1400020f9:	call   QWORD PTR [rip+0x101f1]        # 0x1400122f0
   1400020ff:	mov    ecx,DWORD PTR [rbx]
   140002101:	xor    ecx,eax
   140002103:	test   ecx,0xfffffffc
   140002109:	sete   al
   14000210c:	add    rsp,0x20
   140002110:	pop    rbx
   140002111:	ret    
   140002112:	int3   
   140002113:	int3   
   140002114:	int3   
   140002115:	int3   
   140002116:	int3   
   140002117:	int3   
   140002118:	int3   
   140002119:	int3   
   14000211a:	int3   
   14000211b:	int3   
   14000211c:	int3   
   14000211d:	int3   
   14000211e:	int3   
   14000211f:	int3   
   140002120:	mov    QWORD PTR [rsp+0x8],rbx
   140002125:	push   rdi
   140002126:	sub    rsp,0x20
   14000212a:	mov    eax,DWORD PTR [rcx]
   14000212c:	mov    rbx,rcx
   14000212f:	mov    edi,0x1
   140002134:	test   eax,eax
   140002136:	jne    0x140002150
   140002138:	call   QWORD PTR [rip+0x101b2]        # 0x1400122f0
   14000213e:	mov    edx,eax
   140002140:	and    edx,0xfffffffd
   140002143:	or     edx,edi
   140002145:	xor    eax,eax
   140002147:	lock cmpxchg DWORD PTR [rbx],edx
   14000214b:	sete   cl
   14000214e:	jmp    0x140002152
   140002150:	xor    cl,cl
   140002152:	test   cl,cl
   140002154:	jne    0x140002176
   140002156:	call   QWORD PTR [rip+0x10194]        # 0x1400122f0
   14000215c:	mov    ecx,DWORD PTR [rbx]
   14000215e:	xor    ecx,eax
   140002160:	test   ecx,0xfffffffc
   140002166:	jne    0x14000216e
   140002168:	lock xadd DWORD PTR [rbx],edi
   14000216c:	jmp    0x140002176
   14000216e:	mov    rcx,rbx
   140002171:	call   0x14000c370
   140002176:	mov    rbx,QWORD PTR [rsp+0x30]
   14000217b:	add    rsp,0x20
   14000217f:	pop    rdi
   140002180:	ret    
   140002181:	int3   
   140002182:	int3   
   140002183:	int3   
   140002184:	int3   
   140002185:	int3   
   140002186:	int3   
   140002187:	int3   
   140002188:	int3   
   140002189:	int3   
   14000218a:	int3   
   14000218b:	int3   
   14000218c:	int3   
   14000218d:	int3   
   14000218e:	int3   
   14000218f:	int3   
   140002190:	sub    rsp,0x28
   140002194:	call   0x140002120
   140002199:	mov    al,0x1
   14000219b:	add    rsp,0x28
   14000219f:	ret    
   1400021a0:	int3   
   1400021a1:	int3   
   1400021a2:	int3   
   1400021a3:	int3   
   1400021a4:	int3   
   1400021a5:	int3   
   1400021a6:	int3   
   1400021a7:	int3   
   1400021a8:	int3   
   1400021a9:	int3   
   1400021aa:	int3   
   1400021ab:	int3   
   1400021ac:	int3   
   1400021ad:	int3   
   1400021ae:	int3   
   1400021af:	int3   
   1400021b0:	rex push rbx
   1400021b2:	sub    rsp,0x20
   1400021b6:	mov    eax,DWORD PTR [rcx]
   1400021b8:	xor    edx,edx
   1400021ba:	mov    rbx,rcx
   1400021bd:	test   eax,eax
   1400021bf:	jne    0x1400021d8
   1400021c1:	call   QWORD PTR [rip+0x10129]        # 0x1400122f0
   1400021c7:	mov    edx,eax
   1400021c9:	and    edx,0xfffffffd
   1400021cc:	or     edx,0x1
   1400021cf:	xor    eax,eax
   1400021d1:	lock cmpxchg DWORD PTR [rbx],edx
   1400021d5:	sete   dl
   1400021d8:	mov    al,dl
   1400021da:	add    rsp,0x20
   1400021de:	pop    rbx
   1400021df:	ret    
   1400021e0:	int3   
   1400021e1:	int3   
   1400021e2:	int3   
   1400021e3:	int3   
   1400021e4:	int3   
   1400021e5:	int3   
   1400021e6:	int3   
   1400021e7:	int3   
   1400021e8:	int3   
   1400021e9:	int3   
   1400021ea:	int3   
   1400021eb:	int3   
   1400021ec:	int3   
   1400021ed:	int3   
   1400021ee:	int3   
   1400021ef:	int3   
   1400021f0:	rex push rbx
   1400021f2:	sub    rsp,0x20
   1400021f6:	mov    rbx,rcx
   1400021f9:	call   QWORD PTR [rip+0x100f1]        # 0x1400122f0
   1400021ff:	mov    ecx,DWORD PTR [rbx]
   140002201:	xor    ecx,eax
   140002203:	test   ecx,0xfffffffc
   140002209:	sete   cl
   14000220c:	test   cl,cl
   14000220e:	sete   al
   140002211:	add    rsp,0x20
   140002215:	pop    rbx
   140002216:	ret    
   140002217:	int3   
   140002218:	int3   
   140002219:	int3   
   14000221a:	int3   
   14000221b:	int3   
   14000221c:	int3   
   14000221d:	int3   
   14000221e:	int3   
   14000221f:	int3   
   140002220:	movzx  eax,WORD PTR [rip+0x19e39]        # 0x14001c060
   140002227:	ret    
   140002228:	int3   
   140002229:	int3   
   14000222a:	int3   
   14000222b:	int3   
   14000222c:	int3   
   14000222d:	int3   
   14000222e:	int3   
   14000222f:	int3   
   140002230:	lea    eax,[rcx-0x64]
   140002233:	mov    edx,0x26ac
   140002238:	cmp    ax,dx
   14000223b:	jbe    0x140002259
   14000223d:	test   cx,cx
   140002240:	je     0x140002259
   140002242:	mov    eax,0xffff
   140002247:	cmp    cx,ax
   14000224a:	jne    0x140002260
   14000224c:	mov    eax,0xfa0
   140002251:	mov    WORD PTR [rip+0x19e08],ax        # 0x14001c060
   140002258:	ret    
   140002259:	mov    WORD PTR [rip+0x19e00],cx        # 0x14001c060
   140002260:	ret    
   140002261:	int3   
   140002262:	int3   
   140002263:	int3   
   140002264:	int3   
   140002265:	int3   
   140002266:	int3   
   140002267:	int3   
   140002268:	int3   
   140002269:	int3   
   14000226a:	int3   
   14000226b:	int3   
   14000226c:	int3   
   14000226d:	int3   
   14000226e:	int3   
   14000226f:	int3   
   140002270:	comisd xmm0,QWORD PTR [rip+0x117c8]        # 0x140013a40
   140002278:	jb     0x140002290
   14000227a:	movsd  xmm1,QWORD PTR [rip+0x117c6]        # 0x140013a48
   140002282:	comisd xmm1,xmm0
   140002286:	jb     0x140002290
   140002288:	movsd  QWORD PTR [rip+0x19e00],xmm0        # 0x14001c090
   140002290:	ret    
   140002291:	int3   
   140002292:	int3   
   140002293:	int3   
   140002294:	int3   
   140002295:	int3   
   140002296:	int3   
   140002297:	int3   
   140002298:	int3   
   140002299:	int3   
   14000229a:	int3   
   14000229b:	int3   
   14000229c:	int3   
   14000229d:	int3   
   14000229e:	int3   
   14000229f:	int3   
   1400022a0:	movsd  xmm0,QWORD PTR [rip+0x19de8]        # 0x14001c090
   1400022a8:	ret    
   1400022a9:	int3   
   1400022aa:	int3   
   1400022ab:	int3   
   1400022ac:	int3   
   1400022ad:	int3   
   1400022ae:	int3   
   1400022af:	int3   
   1400022b0:	lea    rax,[rip+0x10981]        # 0x140012c38
   1400022b7:	ret    
   1400022b8:	int3   
   1400022b9:	int3   
   1400022ba:	int3   
   1400022bb:	int3   
   1400022bc:	int3   
   1400022bd:	int3   
   1400022be:	int3   
   1400022bf:	int3   
   1400022c0:	mov    al,0x1
   1400022c2:	ret    
   1400022c3:	int3   
   1400022c4:	int3   
   1400022c5:	int3   
   1400022c6:	int3   
   1400022c7:	int3   
   1400022c8:	int3   
   1400022c9:	int3   
   1400022ca:	int3   
   1400022cb:	int3   
   1400022cc:	int3   
   1400022cd:	int3   
   1400022ce:	int3   
   1400022cf:	int3   
   1400022d0:	xor    eax,eax
   1400022d2:	ret    
   1400022d3:	int3   
   1400022d4:	int3   
   1400022d5:	int3   
   1400022d6:	int3   
   1400022d7:	int3   
   1400022d8:	int3   
   1400022d9:	int3   
   1400022da:	int3   
   1400022db:	int3   
   1400022dc:	int3   
   1400022dd:	int3   
   1400022de:	int3   
   1400022df:	int3   
   1400022e0:	lea    eax,[rcx-0x64]
   1400022e3:	mov    edx,0x26ac
   1400022e8:	cmp    ax,dx
   1400022eb:	jbe    0x140002309
   1400022ed:	test   cx,cx
   1400022f0:	je     0x140002309
   1400022f2:	mov    eax,0xffff
   1400022f7:	cmp    cx,ax
   1400022fa:	jne    0x140002310
   1400022fc:	mov    eax,0xfa0
   140002301:	mov    WORD PTR [rip+0x19d98],ax        # 0x14001c0a0
   140002308:	ret    
   140002309:	mov    WORD PTR [rip+0x19d90],cx        # 0x14001c0a0
   140002310:	ret    
   140002311:	int3   
   140002312:	int3   
   140002313:	int3   
   140002314:	int3   
   140002315:	int3   
   140002316:	int3   
   140002317:	int3   
   140002318:	int3   
   140002319:	int3   
   14000231a:	int3   
   14000231b:	int3   
   14000231c:	int3   
   14000231d:	int3   
   14000231e:	int3   
   14000231f:	int3   
   140002320:	movzx  eax,WORD PTR [rip+0x19d79]        # 0x14001c0a0
   140002327:	ret    
   140002328:	int3   
   140002329:	int3   
   14000232a:	int3   
   14000232b:	int3   
   14000232c:	int3   
   14000232d:	int3   
   14000232e:	int3   
   14000232f:	int3   
   140002330:	comisd xmm0,QWORD PTR [rip+0x11708]        # 0x140013a40
   140002338:	jb     0x140002350
   14000233a:	movsd  xmm1,QWORD PTR [rip+0x11706]        # 0x140013a48
   140002342:	comisd xmm1,xmm0
   140002346:	jb     0x140002350
   140002348:	movsd  QWORD PTR [rip+0x19d30],xmm0        # 0x14001c080
   140002350:	ret    
   140002351:	int3   
   140002352:	int3   
   140002353:	int3   
   140002354:	int3   
   140002355:	int3   
   140002356:	int3   
   140002357:	int3   
   140002358:	int3   
   140002359:	int3   
   14000235a:	int3   
   14000235b:	int3   
   14000235c:	int3   
   14000235d:	int3   
   14000235e:	int3   
   14000235f:	int3   
   140002360:	movsd  xmm0,QWORD PTR [rip+0x19d18]        # 0x14001c080
   140002368:	ret    
   140002369:	int3   
   14000236a:	int3   
   14000236b:	int3   
   14000236c:	int3   
   14000236d:	int3   
   14000236e:	int3   
   14000236f:	int3   
   140002370:	lea    rax,[rip+0x108d9]        # 0x140012c50
   140002377:	ret    
   140002378:	int3   
   140002379:	int3   
   14000237a:	int3   
   14000237b:	int3   
   14000237c:	int3   
   14000237d:	int3   
   14000237e:	int3   
   14000237f:	int3   
   140002380:	rex push rbx
   140002382:	sub    rsp,0x20
   140002386:	mov    rbx,rcx
   140002389:	call   QWORD PTR [rip+0xff59]        # 0x1400122e8
   14000238f:	movzx  edx,WORD PTR [rip+0x19cde]        # 0x14001c074
   140002396:	mov    rcx,rbx
   140002399:	mov    rax,QWORD PTR [rip+0x1a338]        # 0x14001c6d8
   1400023a0:	call   QWORD PTR [rip+0x1019a]        # 0x140012540
   1400023a6:	mov    rax,rbx
   1400023a9:	add    rsp,0x20
   1400023ad:	pop    rbx
   1400023ae:	ret    
   1400023af:	int3   
   1400023b0:	int3   
   1400023b1:	int3   
   1400023b2:	int3   
   1400023b3:	int3   
   1400023b4:	int3   
   1400023b5:	int3   
   1400023b6:	int3   
   1400023b7:	int3   
   1400023b8:	int3   
   1400023b9:	int3   
   1400023ba:	int3   
   1400023bb:	int3   
   1400023bc:	int3   
   1400023bd:	int3   
   1400023be:	int3   
   1400023bf:	int3   
   1400023c0:	rex.W jmp QWORD PTR [rip+0xff39]        # 0x140012300
   1400023c7:	int3   
   1400023c8:	int3   
   1400023c9:	int3   
   1400023ca:	int3   
   1400023cb:	int3   
   1400023cc:	int3   
   1400023cd:	int3   
   1400023ce:	int3   
   1400023cf:	int3   
   1400023d0:	rex.W jmp QWORD PTR [rip+0xff01]        # 0x1400122d8
   1400023d7:	int3   
   1400023d8:	int3   
   1400023d9:	int3   
   1400023da:	int3   
   1400023db:	int3   
   1400023dc:	int3   
   1400023dd:	int3   
   1400023de:	int3   
   1400023df:	int3   
   1400023e0:	sub    rsp,0x28
   1400023e4:	call   QWORD PTR [rip+0xfeee]        # 0x1400122d8
   1400023ea:	mov    al,0x1
   1400023ec:	add    rsp,0x28
   1400023f0:	ret    
   1400023f1:	int3   
   1400023f2:	int3   
   1400023f3:	int3   
   1400023f4:	int3   
   1400023f5:	int3   
   1400023f6:	int3   
   1400023f7:	int3   
   1400023f8:	int3   
   1400023f9:	int3   
   1400023fa:	int3   
   1400023fb:	int3   
   1400023fc:	int3   
   1400023fd:	int3   
   1400023fe:	int3   
   1400023ff:	int3   
   140002400:	sub    rsp,0x28
   140002404:	mov    rax,QWORD PTR [rip+0x1a2d5]        # 0x14001c6e0
   14000240b:	call   QWORD PTR [rip+0x1012f]        # 0x140012540
   140002411:	test   eax,eax
   140002413:	setne  al
   140002416:	add    rsp,0x28
   14000241a:	ret    
   14000241b:	int3   
   14000241c:	int3   
   14000241d:	int3   
   14000241e:	int3   
   14000241f:	int3   
   140002420:	int3   
   140002421:	int3   
   140002422:	int3   
   140002423:	int3   
   140002424:	int3   
   140002425:	int3   
   140002426:	int3   
   140002427:	int3   
   140002428:	int3   
   140002429:	int3   
   14000242a:	int3   
   14000242b:	int3   
   14000242c:	int3   
   14000242d:	int3   
   14000242e:	int3   
   14000242f:	int3   
   140002430:	rex.W jmp QWORD PTR [rip+0xfea9]        # 0x1400122e0
   140002437:	int3   
   140002438:	int3   
   140002439:	int3   
   14000243a:	int3   
   14000243b:	int3   
   14000243c:	int3   
   14000243d:	int3   
   14000243e:	int3   
   14000243f:	int3   
   140002440:	sub    rsp,0x28
   140002444:	mov    rax,QWORD PTR [rip+0x1a28d]        # 0x14001c6d8
   14000244b:	movzx  edx,dx
   14000244e:	call   QWORD PTR [rip+0x100ec]        # 0x140012540
   140002454:	mov    al,0x1
   140002456:	add    rsp,0x28
   14000245a:	ret    
   14000245b:	int3   
   14000245c:	int3   
   14000245d:	int3   
   14000245e:	int3   
   14000245f:	int3   
   140002460:	int3   
   140002461:	int3   
   140002462:	int3   
   140002463:	int3   
   140002464:	int3   
   140002465:	int3   
   140002466:	int3   
   140002467:	int3   
   140002468:	int3   
   140002469:	int3   
   14000246a:	int3   
   14000246b:	int3   
   14000246c:	int3   
   14000246d:	int3   
   14000246e:	int3   
   14000246f:	int3   
   140002470:	movzx  eax,WORD PTR [rip+0x19bfd]        # 0x14001c074
   140002477:	ret    
   140002478:	int3   
   140002479:	int3   
   14000247a:	int3   
   14000247b:	int3   
   14000247c:	int3   
   14000247d:	int3   
   14000247e:	int3   
   14000247f:	int3   
   140002480:	lea    eax,[rcx-0x64]
   140002483:	mov    edx,0x26ac
   140002488:	cmp    ax,dx
   14000248b:	jbe    0x1400024a9
   14000248d:	test   cx,cx
   140002490:	je     0x1400024a9
   140002492:	mov    eax,0xffff
   140002497:	cmp    cx,ax
   14000249a:	jne    0x1400024b0
   14000249c:	mov    eax,0xfa0
   1400024a1:	mov    WORD PTR [rip+0x19bcc],ax        # 0x14001c074
   1400024a8:	ret    
   1400024a9:	mov    WORD PTR [rip+0x19bc4],cx        # 0x14001c074
   1400024b0:	ret    
   1400024b1:	int3   
   1400024b2:	int3   
   1400024b3:	int3   
   1400024b4:	int3   
   1400024b5:	int3   
   1400024b6:	int3   
   1400024b7:	int3   
   1400024b8:	int3   
   1400024b9:	int3   
   1400024ba:	int3   
   1400024bb:	int3   
   1400024bc:	int3   
   1400024bd:	int3   
   1400024be:	int3   
   1400024bf:	int3   
   1400024c0:	comisd xmm0,QWORD PTR [rip+0x11578]        # 0x140013a40
   1400024c8:	jb     0x1400024e0
   1400024ca:	movsd  xmm1,QWORD PTR [rip+0x11576]        # 0x140013a48
   1400024d2:	comisd xmm1,xmm0
   1400024d6:	jb     0x1400024e0
   1400024d8:	movsd  QWORD PTR [rip+0x19bd0],xmm0        # 0x14001c0b0
   1400024e0:	ret    
   1400024e1:	int3   
   1400024e2:	int3   
   1400024e3:	int3   
   1400024e4:	int3   
   1400024e5:	int3   
   1400024e6:	int3   
   1400024e7:	int3   
   1400024e8:	int3   
   1400024e9:	int3   
   1400024ea:	int3   
   1400024eb:	int3   
   1400024ec:	int3   
   1400024ed:	int3   
   1400024ee:	int3   
   1400024ef:	int3   
   1400024f0:	movsd  xmm0,QWORD PTR [rip+0x19bb8]        # 0x14001c0b0
   1400024f8:	ret    
   1400024f9:	int3   
   1400024fa:	int3   
   1400024fb:	int3   
   1400024fc:	int3   
   1400024fd:	int3   
   1400024fe:	int3   
   1400024ff:	int3   
   140002500:	lea    rax,[rip+0x10761]        # 0x140012c68
   140002507:	ret    
   140002508:	int3   
   140002509:	int3   
   14000250a:	int3   
   14000250b:	int3   
   14000250c:	int3   
   14000250d:	int3   
   14000250e:	int3   
   14000250f:	int3   
   140002510:	movups xmm0,XMMWORD PTR [rdx]
   140002513:	mov    rax,rcx
   140002516:	movups XMMWORD PTR [rcx],xmm0
   140002519:	movups xmm1,XMMWORD PTR [rdx+0x10]
   14000251d:	movups XMMWORD PTR [rcx+0x10],xmm1
   140002521:	movsd  xmm0,QWORD PTR [rdx+0x20]
   140002526:	movsd  QWORD PTR [rcx+0x20],xmm0
   14000252b:	ret    
   14000252c:	int3   
   14000252d:	int3   
   14000252e:	int3   
   14000252f:	int3   
   140002530:	int3   
   140002531:	int3   
   140002532:	int3   
   140002533:	int3   
   140002534:	int3   
   140002535:	int3   
   140002536:	int3   
   140002537:	int3   
   140002538:	int3   
   140002539:	int3   
   14000253a:	int3   
   14000253b:	int3   
   14000253c:	int3   
   14000253d:	int3   
   14000253e:	int3   
   14000253f:	int3   
   140002540:	rex push rbx
   140002542:	sub    rsp,0x20
   140002546:	mov    rbx,rcx
   140002549:	call   0x14000cd1c
   14000254e:	mov    rax,rbx
   140002551:	add    rsp,0x20
   140002555:	pop    rbx
   140002556:	ret    
   140002557:	int3   
   140002558:	int3   
   140002559:	int3   
   14000255a:	int3   
   14000255b:	int3   
   14000255c:	int3   
   14000255d:	int3   
   14000255e:	int3   
   14000255f:	int3   
   140002560:	rex push rbx
   140002562:	sub    rsp,0x20
   140002566:	mov    rbx,rcx
   140002569:	call   QWORD PTR [rip+0xfd91]        # 0x140012300
   14000256f:	mov    rcx,QWORD PTR [rbx+0x28]
   140002573:	call   QWORD PTR [rip+0xfc9f]        # 0x140012218
   140002579:	mov    rcx,QWORD PTR [rbx+0x38]
   14000257d:	call   QWORD PTR [rip+0xfc95]        # 0x140012218
   140002583:	xor    edx,edx
   140002585:	mov    rcx,rbx
   140002588:	lea    r8d,[rdx+0x60]
   14000258c:	add    rsp,0x20
   140002590:	pop    rbx
   140002591:	jmp    0x140011e22
   140002596:	int3   
   140002597:	int3   
   140002598:	int3   
   140002599:	int3   
   14000259a:	int3   
   14000259b:	int3   
   14000259c:	int3   
   14000259d:	int3   
   14000259e:	int3   
   14000259f:	int3   
   1400025a0:	test   edx,edx
   1400025a2:	mov    edx,0x1
   1400025a7:	je     0x14000cdec
   1400025ad:	jmp    0x14000cf3c
   1400025b2:	int3   
   1400025b3:	int3   
   1400025b4:	int3   
   1400025b5:	int3   
   1400025b6:	int3   
   1400025b7:	int3   
   1400025b8:	int3   
   1400025b9:	int3   
   1400025ba:	int3   
   1400025bb:	int3   
   1400025bc:	int3   
   1400025bd:	int3   
   1400025be:	int3   
   1400025bf:	int3   
   1400025c0:	test   edx,edx
   1400025c2:	je     0x14000d35c
   1400025c8:	jmp    0x14000d190
   1400025cd:	int3   
   1400025ce:	int3   
   1400025cf:	int3   
   1400025d0:	int3   
   1400025d1:	int3   
   1400025d2:	int3   
   1400025d3:	int3   
   1400025d4:	int3   
   1400025d5:	int3   
   1400025d6:	int3   
   1400025d7:	int3   
   1400025d8:	int3   
   1400025d9:	int3   
   1400025da:	int3   
   1400025db:	int3   
   1400025dc:	int3   
   1400025dd:	int3   
   1400025de:	int3   
   1400025df:	int3   
   1400025e0:	jmp    0x14000d0cc
   1400025e5:	int3   
   1400025e6:	int3   
   1400025e7:	int3   
   1400025e8:	int3   
   1400025e9:	int3   
   1400025ea:	int3   
   1400025eb:	int3   
   1400025ec:	int3   
   1400025ed:	int3   
   1400025ee:	int3   
   1400025ef:	int3   
   1400025f0:	movups xmm0,XMMWORD PTR [rdx]
   1400025f3:	movups XMMWORD PTR [rcx],xmm0
   1400025f6:	movups xmm1,XMMWORD PTR [rdx+0x10]
   1400025fa:	movups XMMWORD PTR [rcx+0x10],xmm1
   1400025fe:	movsd  xmm0,QWORD PTR [rdx+0x20]
   140002603:	movsd  QWORD PTR [rcx+0x20],xmm0
   140002608:	mov    rax,QWORD PTR [rdx+0x28]
   14000260c:	mov    QWORD PTR [rcx+0x28],rax
   140002610:	mov    eax,DWORD PTR [rdx+0x30]
   140002613:	mov    DWORD PTR [rcx+0x30],eax
   140002616:	mov    rax,QWORD PTR [rdx+0x38]
   14000261a:	mov    QWORD PTR [rcx+0x38],rax
   14000261e:	mov    eax,DWORD PTR [rdx+0x40]
   140002621:	mov    DWORD PTR [rcx+0x40],eax
   140002624:	mov    eax,DWORD PTR [rdx+0x44]
   140002627:	mov    DWORD PTR [rcx+0x44],eax
   14000262a:	mov    rax,QWORD PTR [rdx+0x48]
   14000262e:	mov    QWORD PTR [rcx+0x48],rax
   140002632:	mov    eax,DWORD PTR [rdx+0x50]
   140002635:	mov    DWORD PTR [rcx+0x50],eax
   140002638:	mov    rax,QWORD PTR [rdx+0x58]
   14000263c:	mov    QWORD PTR [rcx+0x58],rax
   140002640:	mov    rax,rcx
   140002643:	ret    
   140002644:	int3   
   140002645:	int3   
   140002646:	int3   
   140002647:	int3   
   140002648:	int3   
   140002649:	int3   
   14000264a:	int3   
   14000264b:	int3   
   14000264c:	int3   
   14000264d:	int3   
   14000264e:	int3   
   14000264f:	int3   
   140002650:	rex push rbx
   140002652:	sub    rsp,0x20
   140002656:	mov    rbx,rcx
   140002659:	call   0x14000cd1c
   14000265e:	movzx  edx,WORD PTR [rip+0x19a5b]        # 0x14001c0c0
   140002665:	mov    rcx,rbx
   140002668:	mov    rax,QWORD PTR [rip+0x1a069]        # 0x14001c6d8
   14000266f:	call   QWORD PTR [rip+0xfecb]        # 0x140012540
   140002675:	mov    rax,rbx
   140002678:	add    rsp,0x20
   14000267c:	pop    rbx
   14000267d:	ret    
   14000267e:	int3   
   14000267f:	int3   
   140002680:	int3   
   140002681:	int3   
   140002682:	int3   
   140002683:	int3   
   140002684:	int3   
   140002685:	int3   
   140002686:	int3   
   140002687:	int3   
   140002688:	int3   
   140002689:	int3   
   14000268a:	int3   
   14000268b:	int3   
   14000268c:	int3   
   14000268d:	int3   
   14000268e:	int3   
   14000268f:	int3   
   140002690:	mov    edx,0x1
   140002695:	jmp    0x14000cf3c
   14000269a:	int3   
   14000269b:	int3   
   14000269c:	int3   
   14000269d:	int3   
   14000269e:	int3   
   14000269f:	int3   
   1400026a0:	mov    edx,0x1
   1400026a5:	jmp    0x14000cdec
   1400026aa:	int3   
   1400026ab:	int3   
   1400026ac:	int3   
   1400026ad:	int3   
   1400026ae:	int3   
   1400026af:	int3   
   1400026b0:	sub    rsp,0x28
   1400026b4:	xor    edx,edx
   1400026b6:	call   0x14000cf3c
   1400026bb:	test   eax,eax
   1400026bd:	setne  al
   1400026c0:	add    rsp,0x28
   1400026c4:	ret    
   1400026c5:	int3   
   1400026c6:	int3   
   1400026c7:	int3   
   1400026c8:	int3   
   1400026c9:	int3   
   1400026ca:	int3   
   1400026cb:	int3   
   1400026cc:	int3   
   1400026cd:	int3   
   1400026ce:	int3   
   1400026cf:	int3   
   1400026d0:	sub    rsp,0x28
   1400026d4:	xor    edx,edx
   1400026d6:	call   0x14000cdec
   1400026db:	test   eax,eax
   1400026dd:	setne  al
   1400026e0:	add    rsp,0x28
   1400026e4:	ret    
   1400026e5:	int3   
   1400026e6:	int3   
   1400026e7:	int3   
   1400026e8:	int3   
   1400026e9:	int3   
   1400026ea:	int3   
   1400026eb:	int3   
   1400026ec:	int3   
   1400026ed:	int3   
   1400026ee:	int3   
   1400026ef:	int3   
   1400026f0:	jmp    0x14000d190
   1400026f5:	int3   
   1400026f6:	int3   
   1400026f7:	int3   
   1400026f8:	int3   
   1400026f9:	int3   
   1400026fa:	int3   
   1400026fb:	int3   
   1400026fc:	int3   
   1400026fd:	int3   
   1400026fe:	int3   
   1400026ff:	int3   
   140002700:	jmp    0x14000d35c
   140002705:	int3   
   140002706:	int3   
   140002707:	int3   
   140002708:	int3   
   140002709:	int3   
   14000270a:	int3   
   14000270b:	int3   
   14000270c:	int3   
   14000270d:	int3   
   14000270e:	int3   
   14000270f:	int3   
   140002710:	movzx  eax,WORD PTR [rip+0x199a9]        # 0x14001c0c0
   140002717:	ret    
   140002718:	int3   
   140002719:	int3   
   14000271a:	int3   
   14000271b:	int3   
   14000271c:	int3   
   14000271d:	int3   
   14000271e:	int3   
   14000271f:	int3   
   140002720:	lea    eax,[rcx-0x64]
   140002723:	mov    edx,0x26ac
   140002728:	cmp    ax,dx
   14000272b:	jbe    0x140002749
   14000272d:	test   cx,cx
   140002730:	je     0x140002749
   140002732:	mov    eax,0xffff
   140002737:	cmp    cx,ax
   14000273a:	jne    0x140002750
   14000273c:	mov    eax,0xfa0
   140002741:	mov    WORD PTR [rip+0x19978],ax        # 0x14001c0c0
   140002748:	ret    
   140002749:	mov    WORD PTR [rip+0x19970],cx        # 0x14001c0c0
   140002750:	ret    
   140002751:	int3   
   140002752:	int3   
   140002753:	int3   
   140002754:	int3   
   140002755:	int3   
   140002756:	int3   
   140002757:	int3   
   140002758:	int3   
   140002759:	int3   
   14000275a:	int3   
   14000275b:	int3   
   14000275c:	int3   
   14000275d:	int3   
   14000275e:	int3   
   14000275f:	int3   
   140002760:	comisd xmm0,QWORD PTR [rip+0x112d8]        # 0x140013a40
   140002768:	jb     0x140002780
   14000276a:	movsd  xmm1,QWORD PTR [rip+0x112d6]        # 0x140013a48
   140002772:	comisd xmm1,xmm0
   140002776:	jb     0x140002780
   140002778:	movsd  QWORD PTR [rip+0x19938],xmm0        # 0x14001c0b8
   140002780:	ret    
   140002781:	int3   
   140002782:	int3   
   140002783:	int3   
   140002784:	int3   
   140002785:	int3   
   140002786:	int3   
   140002787:	int3   
   140002788:	int3   
   140002789:	int3   
   14000278a:	int3   
   14000278b:	int3   
   14000278c:	int3   
   14000278d:	int3   
   14000278e:	int3   
   14000278f:	int3   
   140002790:	movsd  xmm0,QWORD PTR [rip+0x19920]        # 0x14001c0b8
   140002798:	ret    
   140002799:	int3   
   14000279a:	int3   
   14000279b:	int3   
   14000279c:	int3   
   14000279d:	int3   
   14000279e:	int3   
   14000279f:	int3   
   1400027a0:	lea    rax,[rip+0x104d9]        # 0x140012c80
   1400027a7:	ret    
   1400027a8:	int3   
   1400027a9:	int3   
   1400027aa:	int3   
   1400027ab:	int3   
   1400027ac:	int3   
   1400027ad:	int3   
   1400027ae:	int3   
   1400027af:	int3   
   1400027b0:	mov    eax,DWORD PTR [rcx+0x4]
   1400027b3:	ret    
   1400027b4:	int3   
   1400027b5:	int3   
   1400027b6:	int3   
   1400027b7:	int3   
   1400027b8:	int3   
   1400027b9:	int3   
   1400027ba:	int3   
   1400027bb:	int3   
   1400027bc:	int3   
   1400027bd:	int3   
   1400027be:	int3   
   1400027bf:	int3   
   1400027c0:	mov    edx,0x1000
   1400027c5:	mov    r8d,0x100
   1400027cb:	jmp    0x14000c940
   1400027d0:	int3   
   1400027d1:	int3   
   1400027d2:	int3   
   1400027d3:	int3   
   1400027d4:	int3   
   1400027d5:	int3   
   1400027d6:	int3   
   1400027d7:	int3   
   1400027d8:	int3   
   1400027d9:	int3   
   1400027da:	int3   
   1400027db:	int3   
   1400027dc:	int3   
   1400027dd:	int3   
   1400027de:	int3   
   1400027df:	int3   
   1400027e0:	lock dec DWORD PTR [rcx]
   1400027e3:	ret    
   1400027e4:	int3   
   1400027e5:	int3   
   1400027e6:	int3   
   1400027e7:	int3   
   1400027e8:	int3   
   1400027e9:	int3   
   1400027ea:	int3   
   1400027eb:	int3   
   1400027ec:	int3   
   1400027ed:	int3   
   1400027ee:	int3   
   1400027ef:	int3   
   1400027f0:	sub    rsp,0x28
   1400027f4:	lock inc DWORD PTR [rcx]
   1400027f7:	mov    eax,DWORD PTR [rcx+0x4]
   1400027fa:	cmp    eax,0x1
   1400027fd:	je     0x140002808
   1400027ff:	call   0x14000cad0
   140002804:	test   al,al
   140002806:	je     0x14000280a
   140002808:	mov    al,0x1
   14000280a:	add    rsp,0x28
   14000280e:	ret    
   14000280f:	int3   
   140002810:	int3   
   140002811:	int3   
   140002812:	int3   
   140002813:	int3   
   140002814:	int3   
   140002815:	int3   
   140002816:	int3   
   140002817:	int3   
   140002818:	int3   
   140002819:	int3   
   14000281a:	int3   
   14000281b:	int3   
   14000281c:	int3   
   14000281d:	int3   
   14000281e:	int3   
   14000281f:	int3   
   140002820:	sub    rsp,0x28
   140002824:	lock inc DWORD PTR [rcx]
   140002827:	lock inc DWORD PTR [rcx+0x4]
   14000282b:	mov    eax,DWORD PTR [rcx+0x4]
   14000282e:	cmp    eax,0x1
   140002831:	je     0x14000283c
   140002833:	call   0x14000cad0
   140002838:	test   al,al
   14000283a:	je     0x14000283e
   14000283c:	mov    al,0x1
   14000283e:	add    rsp,0x28
   140002842:	ret    
   140002843:	int3   
   140002844:	int3   
   140002845:	int3   
   140002846:	int3   
   140002847:	int3   
   140002848:	int3   
   140002849:	int3   
   14000284a:	int3   
   14000284b:	int3   
   14000284c:	int3   
   14000284d:	int3   
   14000284e:	int3   
   14000284f:	int3   
   140002850:	sub    rsp,0x28
   140002854:	lock inc DWORD PTR [rcx+0x4]
   140002858:	mov    eax,DWORD PTR [rcx]
   14000285a:	test   eax,eax
   14000285c:	jg     0x140002866
   14000285e:	mov    eax,DWORD PTR [rcx+0x4]
   140002861:	cmp    eax,DWORD PTR [rcx+0xc]
   140002864:	jle    0x14000286f
   140002866:	call   0x14000cbb0
   14000286b:	test   al,al
   14000286d:	je     0x140002871
   14000286f:	mov    al,0x1
   140002871:	add    rsp,0x28
   140002875:	ret    
   140002876:	int3   
   140002877:	int3   
   140002878:	int3   
   140002879:	int3   
   14000287a:	int3   
   14000287b:	int3   
   14000287c:	int3   
   14000287d:	int3   
   14000287e:	int3   
   14000287f:	int3   
   140002880:	sub    rsp,0x28
   140002884:	lock dec DWORD PTR [rcx+0x4]
   140002888:	lock dec DWORD PTR [rcx]
   14000288b:	mov    eax,DWORD PTR [rcx+0x18]
   14000288e:	test   eax,eax
   140002890:	jle    0x140002897
   140002892:	call   0x14000cc90
   140002897:	add    rsp,0x28
   14000289b:	ret    
   14000289c:	int3   
   14000289d:	int3   
   14000289e:	int3   
   14000289f:	int3   
   1400028a0:	int3   
   1400028a1:	int3   
   1400028a2:	int3   
   1400028a3:	int3   
   1400028a4:	int3   
   1400028a5:	int3   
   1400028a6:	int3   
   1400028a7:	int3   
   1400028a8:	int3   
   1400028a9:	int3   
   1400028aa:	int3   
   1400028ab:	int3   
   1400028ac:	int3   
   1400028ad:	int3   
   1400028ae:	int3   
   1400028af:	int3   
   1400028b0:	sub    rsp,0x28
   1400028b4:	lock dec DWORD PTR [rcx+0x4]
   1400028b8:	mov    eax,DWORD PTR [rcx+0x18]
   1400028bb:	test   eax,eax
   1400028bd:	jle    0x1400028c4
   1400028bf:	call   0x14000cc90
   1400028c4:	add    rsp,0x28
   1400028c8:	ret    
   1400028c9:	int3   
   1400028ca:	int3   
   1400028cb:	int3   
   1400028cc:	int3   
   1400028cd:	int3   
   1400028ce:	int3   
   1400028cf:	int3   
   1400028d0:	rex push rbx
   1400028d2:	sub    rsp,0x20
   1400028d6:	mov    edx,0x1000
   1400028db:	mov    r8d,0x100
   1400028e1:	mov    rbx,rcx
   1400028e4:	call   0x14000c940
   1400028e9:	mov    rax,rbx
   1400028ec:	add    rsp,0x20
   1400028f0:	pop    rbx
   1400028f1:	ret    
   1400028f2:	int3   
   1400028f3:	int3   
   1400028f4:	int3   
   1400028f5:	int3   
   1400028f6:	int3   
   1400028f7:	int3   
   1400028f8:	int3   
   1400028f9:	int3   
   1400028fa:	int3   
   1400028fb:	int3   
   1400028fc:	int3   
   1400028fd:	int3   
   1400028fe:	int3   
   1400028ff:	int3   
   140002900:	sub    rsp,0x28
   140002904:	lock inc DWORD PTR [rcx]
   140002907:	lock inc DWORD PTR [rcx+0x4]
   14000290b:	mov    eax,DWORD PTR [rcx+0x4]
   14000290e:	cmp    eax,0x1
   140002911:	je     0x14000291b
   140002913:	or     edx,0xffffffff
   140002916:	call   0x14000cad0
   14000291b:	add    rsp,0x28
   14000291f:	ret    
   140002920:	int3   
   140002921:	int3   
   140002922:	int3   
   140002923:	int3   
   140002924:	int3   
   140002925:	int3   
   140002926:	int3   
   140002927:	int3   
   140002928:	int3   
   140002929:	int3   
   14000292a:	int3   
   14000292b:	int3   
   14000292c:	int3   
   14000292d:	int3   
   14000292e:	int3   
   14000292f:	int3   
   140002930:	sub    rsp,0x28
   140002934:	lock inc DWORD PTR [rcx+0x4]
   140002938:	mov    eax,DWORD PTR [rcx]
   14000293a:	test   eax,eax
   14000293c:	jg     0x140002946
   14000293e:	mov    eax,DWORD PTR [rcx+0x4]
   140002941:	cmp    eax,DWORD PTR [rcx+0xc]
   140002944:	jle    0x14000294e
   140002946:	or     edx,0xffffffff
   140002949:	call   0x14000cbb0
   14000294e:	add    rsp,0x28
   140002952:	ret    
   140002953:	int3   
   140002954:	int3   
   140002955:	int3   
   140002956:	int3   
   140002957:	int3   
   140002958:	int3   
   140002959:	int3   
   14000295a:	int3   
   14000295b:	int3   
   14000295c:	int3   
   14000295d:	int3   
   14000295e:	int3   
   14000295f:	int3   
   140002960:	mov    QWORD PTR [rsp+0x8],rbx
   140002965:	push   rdi
   140002966:	sub    rsp,0x20
   14000296a:	mov    edi,0x1
   14000296f:	lock add DWORD PTR [rcx],edi
   140002972:	lock add DWORD PTR [rcx+0x4],edi
   140002976:	mov    eax,DWORD PTR [rcx+0x4]
   140002979:	xor    ebx,ebx
   14000297b:	cmp    eax,edi
   14000297d:	je     0x14000298d
   14000297f:	xor    edx,edx
   140002981:	call   0x14000cad0
   140002986:	test   al,al
   140002988:	jne    0x14000298d
   14000298a:	mov    dil,bl
   14000298d:	mov    rbx,QWORD PTR [rsp+0x30]
   140002992:	test   dil,dil
   140002995:	setne  al
   140002998:	add    rsp,0x20
   14000299c:	pop    rdi
   14000299d:	ret    
   14000299e:	int3   
   14000299f:	int3   
   1400029a0:	int3   
   1400029a1:	int3   
   1400029a2:	int3   
   1400029a3:	int3   
   1400029a4:	int3   
   1400029a5:	int3   
   1400029a6:	int3   
   1400029a7:	int3   
   1400029a8:	int3   
   1400029a9:	int3   
   1400029aa:	int3   
   1400029ab:	int3   
   1400029ac:	int3   
   1400029ad:	int3   
   1400029ae:	int3   
   1400029af:	int3   
   1400029b0:	mov    QWORD PTR [rsp+0x8],rbx
   1400029b5:	push   rdi
   1400029b6:	sub    rsp,0x20
   1400029ba:	mov    edi,0x1
   1400029bf:	lock add DWORD PTR [rcx+0x4],edi
   1400029c3:	mov    eax,DWORD PTR [rcx]
   1400029c5:	xor    ebx,ebx
   1400029c7:	test   eax,eax
   1400029c9:	jg     0x1400029d3
   1400029cb:	mov    eax,DWORD PTR [rcx+0x4]
   1400029ce:	cmp    eax,DWORD PTR [rcx+0xc]
   1400029d1:	jle    0x1400029e1
   1400029d3:	xor    edx,edx
   1400029d5:	call   0x14000cbb0
   1400029da:	test   al,al
   1400029dc:	jne    0x1400029e1
   1400029de:	mov    dil,bl
   1400029e1:	mov    rbx,QWORD PTR [rsp+0x30]
   1400029e6:	test   dil,dil
   1400029e9:	setne  al
   1400029ec:	add    rsp,0x20
   1400029f0:	pop    rdi
   1400029f1:	ret    
   1400029f2:	int3   
   1400029f3:	int3   
   1400029f4:	int3   
   1400029f5:	int3   
   1400029f6:	int3   
   1400029f7:	int3   
   1400029f8:	int3   
   1400029f9:	int3   
   1400029fa:	int3   
   1400029fb:	int3   
   1400029fc:	int3   
   1400029fd:	int3   
   1400029fe:	int3   
   1400029ff:	int3   
   140002a00:	sub    rsp,0x28
   140002a04:	lock inc DWORD PTR [rcx]
   140002a07:	mov    eax,DWORD PTR [rcx+0x4]
   140002a0a:	cmp    eax,0x1
   140002a0d:	je     0x140002a17
   140002a0f:	or     edx,0xffffffff
   140002a12:	call   0x14000cad0
   140002a17:	add    rsp,0x28
   140002a1b:	ret    
   140002a1c:	int3   
   140002a1d:	int3   
   140002a1e:	int3   
   140002a1f:	int3   
   140002a20:	int3   
   140002a21:	int3   
   140002a22:	int3   
   140002a23:	int3   
   140002a24:	int3   
   140002a25:	int3   
   140002a26:	int3   
   140002a27:	int3   
   140002a28:	int3   
   140002a29:	int3   
   140002a2a:	int3   
   140002a2b:	int3   
   140002a2c:	int3   
   140002a2d:	int3   
   140002a2e:	int3   
   140002a2f:	int3   
   140002a30:	movzx  eax,dx
   140002a33:	test   eax,eax
   140002a35:	jle    0x140002a3a
   140002a37:	mov    DWORD PTR [rcx+0x8],eax
   140002a3a:	mov    al,0x1
   140002a3c:	ret    
   140002a3d:	int3   
   140002a3e:	int3   
   140002a3f:	int3   
   140002a40:	int3   
   140002a41:	int3   
   140002a42:	int3   
   140002a43:	int3   
   140002a44:	int3   
   140002a45:	int3   
   140002a46:	int3   
   140002a47:	int3   
   140002a48:	int3   
   140002a49:	int3   
   140002a4a:	int3   
   140002a4b:	int3   
   140002a4c:	int3   
   140002a4d:	int3   
   140002a4e:	int3   
   140002a4f:	int3   
   140002a50:	movzx  eax,WORD PTR [rip+0x19619]        # 0x14001c070
   140002a57:	ret    
   140002a58:	int3   
   140002a59:	int3   
   140002a5a:	int3   
   140002a5b:	int3   
   140002a5c:	int3   
   140002a5d:	int3   
   140002a5e:	int3   
   140002a5f:	int3   
   140002a60:	lea    eax,[rcx-0x64]
   140002a63:	mov    edx,0x26ac
   140002a68:	cmp    ax,dx
   140002a6b:	jbe    0x140002a89
   140002a6d:	test   cx,cx
   140002a70:	je     0x140002a89
   140002a72:	mov    eax,0xffff
   140002a77:	cmp    cx,ax
   140002a7a:	jne    0x140002a90
   140002a7c:	mov    eax,0xfa0
   140002a81:	mov    WORD PTR [rip+0x195e8],ax        # 0x14001c070
   140002a88:	ret    
   140002a89:	mov    WORD PTR [rip+0x195e0],cx        # 0x14001c070
   140002a90:	ret    
   140002a91:	int3   
   140002a92:	int3   
   140002a93:	int3   
   140002a94:	int3   
   140002a95:	int3   
   140002a96:	int3   
   140002a97:	int3   
   140002a98:	int3   
   140002a99:	int3   
   140002a9a:	int3   
   140002a9b:	int3   
   140002a9c:	int3   
   140002a9d:	int3   
   140002a9e:	int3   
   140002a9f:	int3   
   140002aa0:	comisd xmm0,QWORD PTR [rip+0x10f98]        # 0x140013a40
   140002aa8:	jb     0x140002ac0
   140002aaa:	movsd  xmm1,QWORD PTR [rip+0x10f96]        # 0x140013a48
   140002ab2:	comisd xmm1,xmm0
   140002ab6:	jb     0x140002ac0
   140002ab8:	movsd  QWORD PTR [rip+0x19598],xmm0        # 0x14001c058
   140002ac0:	ret    
   140002ac1:	int3   
   140002ac2:	int3   
   140002ac3:	int3   
   140002ac4:	int3   
   140002ac5:	int3   
   140002ac6:	int3   
   140002ac7:	int3   
   140002ac8:	int3   
   140002ac9:	int3   
   140002aca:	int3   
   140002acb:	int3   
   140002acc:	int3   
   140002acd:	int3   
   140002ace:	int3   
   140002acf:	int3   
   140002ad0:	movsd  xmm0,QWORD PTR [rip+0x19580]        # 0x14001c058
   140002ad8:	ret    
   140002ad9:	int3   
   140002ada:	int3   
   140002adb:	int3   
   140002adc:	int3   
   140002add:	int3   
   140002ade:	int3   
   140002adf:	int3   
   140002ae0:	lea    rax,[rip+0x101a9]        # 0x140012c90
   140002ae7:	ret    
   140002ae8:	int3   
   140002ae9:	int3   
   140002aea:	int3   
   140002aeb:	int3   
   140002aec:	int3   
   140002aed:	int3   
   140002aee:	int3   
   140002aef:	int3   
   140002af0:	jmp    0x14000cce0
   140002af5:	int3   
   140002af6:	int3   
   140002af7:	int3   
   140002af8:	int3   
   140002af9:	int3   
   140002afa:	int3   
   140002afb:	int3   
   140002afc:	int3   
   140002afd:	int3   
   140002afe:	int3   
   140002aff:	int3   
   140002b00:	mov    dl,0x1
   140002b02:	jmp    0x14000c4e0
   140002b07:	int3   
   140002b08:	int3   
   140002b09:	int3   
   140002b0a:	int3   
   140002b0b:	int3   
   140002b0c:	int3   
   140002b0d:	int3   
   140002b0e:	int3   
   140002b0f:	int3   
   140002b10:	xor    edx,edx
   140002b12:	jmp    0x14000c4e0
   140002b17:	int3   
   140002b18:	int3   
   140002b19:	int3   
   140002b1a:	int3   
   140002b1b:	int3   
   140002b1c:	int3   
   140002b1d:	int3   
   140002b1e:	int3   
   140002b1f:	int3   
   140002b20:	mov    eax,r8d
   140002b23:	lock cmpxchg DWORD PTR [rcx],edx
   140002b27:	cmp    r8d,eax
   140002b2a:	sete   al
   140002b2d:	ret    
   140002b2e:	int3   
   140002b2f:	int3   
   140002b30:	int3   
   140002b31:	int3   
   140002b32:	int3   
   140002b33:	int3   
   140002b34:	int3   
   140002b35:	int3   
   140002b36:	int3   
   140002b37:	int3   
   140002b38:	int3   
   140002b39:	int3   
   140002b3a:	int3   
   140002b3b:	int3   
   140002b3c:	int3   
   140002b3d:	int3   
   140002b3e:	int3   
   140002b3f:	int3   
   140002b40:	mov    eax,DWORD PTR [rcx]
   140002b42:	xor    edx,edx
   140002b44:	test   eax,eax
   140002b46:	jne    0x140002b57
   140002b48:	or     r8d,0xffffffff
   140002b4c:	lock cmpxchg DWORD PTR [rcx],r8d
   140002b51:	jne    0x140002b57
   140002b53:	lea    edx,[r8+0x2]
   140002b57:	mov    al,dl
   140002b59:	ret    
   140002b5a:	int3   
   140002b5b:	int3   
   140002b5c:	int3   
   140002b5d:	int3   
   140002b5e:	int3   
   140002b5f:	int3   
   140002b60:	mov    r9d,DWORD PTR [rcx]
   140002b63:	xor    r8d,r8d
   140002b66:	cmp    r9d,0xffffffff
   140002b6a:	je     0x140002b89
   140002b6c:	mov    eax,DWORD PTR [rcx+0x4]
   140002b6f:	test   eax,eax
   140002b71:	jne    0x140002b89
   140002b73:	lea    edx,[r9+0x1]
   140002b77:	mov    eax,r9d
   140002b7a:	lock cmpxchg DWORD PTR [rcx],edx
   140002b7e:	cmp    r9d,eax
   140002b81:	jne    0x140002b89
   140002b83:	mov    r8d,0x1
   140002b89:	mov    al,r8b
   140002b8c:	ret    
   140002b8d:	int3   
   140002b8e:	int3   
   140002b8f:	int3   
   140002b90:	int3   
   140002b91:	int3   
   140002b92:	int3   
   140002b93:	int3   
   140002b94:	int3   
   140002b95:	int3   
   140002b96:	int3   
   140002b97:	int3   
   140002b98:	int3   
   140002b99:	int3   
   140002b9a:	int3   
   140002b9b:	int3   
   140002b9c:	int3   
   140002b9d:	int3   
   140002b9e:	int3   
   140002b9f:	int3   
   140002ba0:	mov    DWORD PTR [rcx],0x0
   140002ba6:	mov    rax,rcx
   140002ba9:	mov    DWORD PTR [rcx+0x4],0x0
   140002bb0:	ret    
   140002bb1:	int3   
   140002bb2:	int3   
   140002bb3:	int3   
   140002bb4:	int3   
   140002bb5:	int3   
   140002bb6:	int3   
   140002bb7:	int3   
   140002bb8:	int3   
   140002bb9:	int3   
   140002bba:	int3   
   140002bbb:	int3   
   140002bbc:	int3   
   140002bbd:	int3   
   140002bbe:	int3   
   140002bbf:	int3   
   140002bc0:	sub    rsp,0x28
   140002bc4:	lock inc DWORD PTR [rcx+0x4]
   140002bc8:	mov    eax,DWORD PTR [rcx]
   140002bca:	test   eax,eax
   140002bcc:	jne    0x140002bd9
   140002bce:	or     r8d,0xffffffff
   140002bd2:	lock cmpxchg DWORD PTR [rcx],r8d
   140002bd7:	je     0x140002be0
   140002bd9:	mov    dl,0x1
   140002bdb:	call   0x14000c4e0
   140002be0:	add    rsp,0x28
   140002be4:	ret    
   140002be5:	int3   
   140002be6:	int3   
   140002be7:	int3   
   140002be8:	int3   
   140002be9:	int3   
   140002bea:	int3   
   140002beb:	int3   
   140002bec:	int3   
   140002bed:	int3   
   140002bee:	int3   
   140002bef:	int3   
   140002bf0:	sub    rsp,0x28
   140002bf4:	mov    r8d,DWORD PTR [rcx]
   140002bf7:	cmp    r8d,0xffffffff
   140002bfb:	je     0x140002c14
   140002bfd:	mov    eax,DWORD PTR [rcx+0x4]
   140002c00:	test   eax,eax
   140002c02:	jne    0x140002c14
   140002c04:	lea    edx,[r8+0x1]
   140002c08:	mov    eax,r8d
   140002c0b:	lock cmpxchg DWORD PTR [rcx],edx
   140002c0f:	cmp    r8d,eax
   140002c12:	je     0x140002c1b
   140002c14:	xor    edx,edx
   140002c16:	call   0x14000c4e0
   140002c1b:	add    rsp,0x28
   140002c1f:	ret    
   140002c20:	int3   
   140002c21:	int3   
   140002c22:	int3   
   140002c23:	int3   
   140002c24:	int3   
   140002c25:	int3   
   140002c26:	int3   
   140002c27:	int3   
   140002c28:	int3   
   140002c29:	int3   
   140002c2a:	int3   
   140002c2b:	int3   
   140002c2c:	int3   
   140002c2d:	int3   
   140002c2e:	int3   
   140002c2f:	int3   
   140002c30:	lock inc DWORD PTR [rcx+0x4]
   140002c34:	mov    edx,DWORD PTR [rcx]
   140002c36:	or     r8d,0xffffffff
   140002c3a:	test   edx,edx
   140002c3c:	jne    0x140002c4a
   140002c3e:	xor    eax,eax
   140002c40:	lock cmpxchg DWORD PTR [rcx],r8d
   140002c45:	jne    0x140002c4a
   140002c47:	mov    al,0x1
   140002c49:	ret    
   140002c4a:	lock add DWORD PTR [rcx+0x4],r8d
   140002c4f:	xor    al,al
   140002c51:	ret    
   140002c52:	int3   
   140002c53:	int3   
   140002c54:	int3   
   140002c55:	int3   
   140002c56:	int3   
   140002c57:	int3   
   140002c58:	int3   
   140002c59:	int3   
   140002c5a:	int3   
   140002c5b:	int3   
   140002c5c:	int3   
   140002c5d:	int3   
   140002c5e:	int3   
   140002c5f:	int3   
   140002c60:	mov    r8d,DWORD PTR [rcx]
   140002c63:	cmp    r8d,0xffffffff
   140002c67:	je     0x140002c83
   140002c69:	mov    eax,DWORD PTR [rcx+0x4]
   140002c6c:	test   eax,eax
   140002c6e:	jne    0x140002c83
   140002c70:	lea    edx,[r8+0x1]
   140002c74:	mov    eax,r8d
   140002c77:	lock cmpxchg DWORD PTR [rcx],edx
   140002c7b:	cmp    r8d,eax
   140002c7e:	jne    0x140002c83
   140002c80:	mov    al,0x1
   140002c82:	ret    
   140002c83:	xor    al,al
   140002c85:	ret    
   140002c86:	int3   
   140002c87:	int3   
   140002c88:	int3   
   140002c89:	int3   
   140002c8a:	int3   
   140002c8b:	int3   
   140002c8c:	int3   
   140002c8d:	int3   
   140002c8e:	int3   
   140002c8f:	int3   
   140002c90:	xor    eax,eax
   140002c92:	xchg   DWORD PTR [rcx],eax
   140002c94:	lock dec DWORD PTR [rcx+0x4]
   140002c98:	ret    
   140002c99:	int3   
   140002c9a:	int3   
   140002c9b:	int3   
   140002c9c:	int3   
   140002c9d:	int3   
   140002c9e:	int3   
   140002c9f:	int3   
   140002ca0:	mov    edx,DWORD PTR [rcx]
   140002ca2:	cmp    edx,0xffffffff
   140002ca5:	sete   al
   140002ca8:	ret    
   140002ca9:	int3   
   140002caa:	int3   
   140002cab:	int3   
   140002cac:	int3   
   140002cad:	int3   
   140002cae:	int3   
   140002caf:	int3   
   140002cb0:	mov    edx,DWORD PTR [rcx]
   140002cb2:	test   edx,edx
   140002cb4:	setg   al
   140002cb7:	ret    
   140002cb8:	int3   
   140002cb9:	int3   
   140002cba:	int3   
   140002cbb:	int3   
   140002cbc:	int3   
   140002cbd:	int3   
   140002cbe:	int3   
   140002cbf:	int3   
   140002cc0:	mov    edx,DWORD PTR [rcx]
   140002cc2:	cmp    edx,0xffffffff
   140002cc5:	setne  al
   140002cc8:	ret    
   140002cc9:	int3   
   140002cca:	int3   
   140002ccb:	int3   
   140002ccc:	int3   
   140002ccd:	int3   
   140002cce:	int3   
   140002ccf:	int3   
   140002cd0:	mov    edx,DWORD PTR [rcx]
   140002cd2:	test   edx,edx
   140002cd4:	setle  al
   140002cd7:	ret    
   140002cd8:	int3   
   140002cd9:	int3   
   140002cda:	int3   
   140002cdb:	int3   
   140002cdc:	int3   
   140002cdd:	int3   
   140002cde:	int3   
   140002cdf:	int3   
   140002ce0:	sub    rsp,0x28
   140002ce4:	lock inc DWORD PTR [rcx+0x4]
   140002ce8:	mov    eax,DWORD PTR [rcx]
   140002cea:	or     edx,0xffffffff
   140002ced:	cmp    eax,0x1
   140002cf0:	jne    0x140002cf8
   140002cf2:	lock cmpxchg DWORD PTR [rcx],edx
   140002cf6:	je     0x140002d02
   140002cf8:	lock add DWORD PTR [rcx],edx
   140002cfb:	mov    dl,0x1
   140002cfd:	call   0x14000c4e0
   140002d02:	add    rsp,0x28
   140002d06:	ret    
   140002d07:	int3   
   140002d08:	int3   
   140002d09:	int3   
   140002d0a:	int3   
   140002d0b:	int3   
   140002d0c:	int3   
   140002d0d:	int3   
   140002d0e:	int3   
   140002d0f:	int3   
   140002d10:	mov    eax,0x1
   140002d15:	xchg   DWORD PTR [rcx],eax
   140002d17:	lock dec DWORD PTR [rcx+0x4]
   140002d1b:	ret    
   140002d1c:	int3   
   140002d1d:	int3   
   140002d1e:	int3   
   140002d1f:	int3   
   140002d20:	int3   
   140002d21:	int3   
   140002d22:	int3   
   140002d23:	int3   
   140002d24:	int3   
   140002d25:	int3   
   140002d26:	int3   
   140002d27:	int3   
   140002d28:	int3   
   140002d29:	int3   
   140002d2a:	int3   
   140002d2b:	int3   
   140002d2c:	int3   
   140002d2d:	int3   
   140002d2e:	int3   
   140002d2f:	int3   
   140002d30:	movzx  eax,WORD PTR [rip+0x19335]        # 0x14001c06c
   140002d37:	ret    
   140002d38:	int3   
   140002d39:	int3   
   140002d3a:	int3   
   140002d3b:	int3   
   140002d3c:	int3   
   140002d3d:	int3   
   140002d3e:	int3   
   140002d3f:	int3   
   140002d40:	lea    eax,[rcx-0x64]
   140002d43:	mov    edx,0x26ac
   140002d48:	cmp    ax,dx
   140002d4b:	jbe    0x140002d69
   140002d4d:	test   cx,cx
   140002d50:	je     0x140002d69
   140002d52:	mov    eax,0xffff
   140002d57:	cmp    cx,ax
   140002d5a:	jne    0x140002d70
   140002d5c:	mov    eax,0xfa0
   140002d61:	mov    WORD PTR [rip+0x19304],ax        # 0x14001c06c
   140002d68:	ret    
   140002d69:	mov    WORD PTR [rip+0x192fc],cx        # 0x14001c06c
   140002d70:	ret    
   140002d71:	int3   
   140002d72:	int3   
   140002d73:	int3   
   140002d74:	int3   
   140002d75:	int3   
   140002d76:	int3   
   140002d77:	int3   
   140002d78:	int3   
   140002d79:	int3   
   140002d7a:	int3   
   140002d7b:	int3   
   140002d7c:	int3   
   140002d7d:	int3   
   140002d7e:	int3   
   140002d7f:	int3   
   140002d80:	comisd xmm0,QWORD PTR [rip+0x10cb8]        # 0x140013a40
   140002d88:	jb     0x140002da0
   140002d8a:	movsd  xmm1,QWORD PTR [rip+0x10cb6]        # 0x140013a48
   140002d92:	comisd xmm1,xmm0
   140002d96:	jb     0x140002da0
   140002d98:	movsd  QWORD PTR [rip+0x192b0],xmm0        # 0x14001c050
   140002da0:	ret    
   140002da1:	int3   
   140002da2:	int3   
   140002da3:	int3   
   140002da4:	int3   
   140002da5:	int3   
   140002da6:	int3   
   140002da7:	int3   
   140002da8:	int3   
   140002da9:	int3   
   140002daa:	int3   
   140002dab:	int3   
   140002dac:	int3   
   140002dad:	int3   
   140002dae:	int3   
   140002daf:	int3   
   140002db0:	movsd  xmm0,QWORD PTR [rip+0x19298]        # 0x14001c050
   140002db8:	ret    
   140002db9:	int3   
   140002dba:	int3   
   140002dbb:	int3   
   140002dbc:	int3   
   140002dbd:	int3   
   140002dbe:	int3   
   140002dbf:	int3   
   140002dc0:	lea    rax,[rip+0xfed9]        # 0x140012ca0
   140002dc7:	ret    
   140002dc8:	int3   
   140002dc9:	int3   
   140002dca:	int3   
   140002dcb:	int3   
   140002dcc:	int3   
   140002dcd:	int3   
   140002dce:	int3   
   140002dcf:	int3   
   140002dd0:	mov    eax,DWORD PTR [rdx]
   140002dd2:	mov    DWORD PTR [rcx],eax
   140002dd4:	mov    eax,DWORD PTR [rdx+0x4]
   140002dd7:	mov    DWORD PTR [rcx+0x4],eax
   140002dda:	mov    rax,rcx
   140002ddd:	ret    
   140002dde:	int3   
   140002ddf:	int3   
   140002de0:	int3   
   140002de1:	int3   
   140002de2:	int3   
   140002de3:	int3   
   140002de4:	int3   
   140002de5:	int3   
   140002de6:	int3   
   140002de7:	int3   
   140002de8:	int3   
   140002de9:	int3   
   140002dea:	int3   
   140002deb:	int3   
   140002dec:	int3   
   140002ded:	int3   
   140002dee:	int3   
   140002def:	int3   
   140002df0:	xor    edx,edx
   140002df2:	jmp    0x14000c650
   140002df7:	int3   
   140002df8:	int3   
   140002df9:	int3   
   140002dfa:	int3   
   140002dfb:	int3   
   140002dfc:	int3   
   140002dfd:	int3   
   140002dfe:	int3   
   140002dff:	int3   
   140002e00:	mov    r9d,DWORD PTR [rcx]
   140002e03:	xor    r8d,r8d
   140002e06:	test   r9w,r9w
   140002e0a:	jne    0x140002e27
   140002e0c:	add    edx,r9d
   140002e0f:	mov    eax,r9d
   140002e12:	or     edx,0xffff
   140002e18:	lock cmpxchg DWORD PTR [rcx],edx
   140002e1c:	cmp    r9d,eax
   140002e1f:	jne    0x140002e27
   140002e21:	mov    r8d,0x1
   140002e27:	mov    al,r8b
   140002e2a:	ret    
   140002e2b:	int3   
   140002e2c:	int3   
   140002e2d:	int3   
   140002e2e:	int3   
   140002e2f:	int3   
   140002e30:	int3   
   140002e31:	int3   
   140002e32:	int3   
   140002e33:	int3   
   140002e34:	int3   
   140002e35:	int3   
   140002e36:	int3   
   140002e37:	int3   
   140002e38:	int3   
   140002e39:	int3   
   140002e3a:	int3   
   140002e3b:	int3   
   140002e3c:	int3   
   140002e3d:	int3   
   140002e3e:	int3   
   140002e3f:	int3   
   140002e40:	mov    r8d,DWORD PTR [rcx]
   140002e43:	test   r8d,0xffff8000
   140002e4a:	jne    0x140002e62
   140002e4c:	lea    edx,[r8+0x1]
   140002e50:	mov    eax,r8d
   140002e53:	lock cmpxchg DWORD PTR [rcx],edx
   140002e57:	cmp    r8d,eax
   140002e5a:	jne    0x140002e62
   140002e5c:	mov    eax,0x1
   140002e61:	ret    
   140002e62:	xor    eax,eax
   140002e64:	ret    
   140002e65:	int3   
   140002e66:	int3   
   140002e67:	int3   
   140002e68:	int3   
   140002e69:	int3   
   140002e6a:	int3   
   140002e6b:	int3   
   140002e6c:	int3   
   140002e6d:	int3   
   140002e6e:	int3   
   140002e6f:	int3   
   140002e70:	sub    rsp,0x28
   140002e74:	mov    r8d,DWORD PTR [rcx]
   140002e77:	test   r8w,r8w
   140002e7b:	jne    0x140002e96
   140002e7d:	lea    edx,[r8+0x10000]
   140002e84:	mov    eax,r8d
   140002e87:	or     edx,0xffff
   140002e8d:	lock cmpxchg DWORD PTR [rcx],edx
   140002e91:	cmp    r8d,eax
   140002e94:	je     0x140002e9b
   140002e96:	call   0x14000c600
   140002e9b:	add    rsp,0x28
   140002e9f:	ret    
   140002ea0:	int3   
   140002ea1:	int3   
   140002ea2:	int3   
   140002ea3:	int3   
   140002ea4:	int3   
   140002ea5:	int3   
   140002ea6:	int3   
   140002ea7:	int3   
   140002ea8:	int3   
   140002ea9:	int3   
   140002eaa:	int3   
   140002eab:	int3   
   140002eac:	int3   
   140002ead:	int3   
   140002eae:	int3   
   140002eaf:	int3   
   140002eb0:	sub    rsp,0x28
   140002eb4:	mov    r8d,DWORD PTR [rcx]
   140002eb7:	test   r8d,0xffff8000
   140002ebe:	jne    0x140002ed0
   140002ec0:	lea    edx,[r8+0x1]
   140002ec4:	mov    eax,r8d
   140002ec7:	lock cmpxchg DWORD PTR [rcx],edx
   140002ecb:	cmp    r8d,eax
   140002ece:	je     0x140002ed7
   140002ed0:	xor    edx,edx
   140002ed2:	call   0x14000c650
   140002ed7:	add    rsp,0x28
   140002edb:	ret    
   140002edc:	int3   
   140002edd:	int3   
   140002ede:	int3   
   140002edf:	int3   
   140002ee0:	int3   
   140002ee1:	int3   
   140002ee2:	int3   
   140002ee3:	int3   
   140002ee4:	int3   
   140002ee5:	int3   
   140002ee6:	int3   
   140002ee7:	int3   
   140002ee8:	int3   
   140002ee9:	int3   
   140002eea:	int3   
   140002eeb:	int3   
   140002eec:	int3   
   140002eed:	int3   
   140002eee:	int3   
   140002eef:	int3   
   140002ef0:	mov    r8d,DWORD PTR [rcx]
   140002ef3:	movzx  eax,r8w
   140002ef7:	test   eax,eax
   140002ef9:	jne    0x140002f17
   140002efb:	lea    edx,[r8+0x10000]
   140002f02:	mov    eax,r8d
   140002f05:	or     edx,0xffff
   140002f0b:	lock cmpxchg DWORD PTR [rcx],edx
   140002f0f:	cmp    r8d,eax
   140002f12:	jne    0x140002f17
   140002f14:	mov    al,0x1
   140002f16:	ret    
   140002f17:	xor    al,al
   140002f19:	ret    
   140002f1a:	int3   
   140002f1b:	int3   
   140002f1c:	int3   
   140002f1d:	int3   
   140002f1e:	int3   
   140002f1f:	int3   
   140002f20:	mov    r8d,DWORD PTR [rcx]
   140002f23:	test   r8d,0xffff8000
   140002f2a:	jne    0x140002f3f
   140002f2c:	lea    edx,[r8+0x1]
   140002f30:	mov    eax,r8d
   140002f33:	lock cmpxchg DWORD PTR [rcx],edx
   140002f37:	cmp    r8d,eax
   140002f3a:	jne    0x140002f3f
   140002f3c:	mov    al,0x1
   140002f3e:	ret    
   140002f3f:	xor    al,al
   140002f41:	ret    
   140002f42:	int3   
   140002f43:	int3   
   140002f44:	int3   
   140002f45:	int3   
   140002f46:	int3   
   140002f47:	int3   
   140002f48:	int3   
   140002f49:	int3   
   140002f4a:	int3   
   140002f4b:	int3   
   140002f4c:	int3   
   140002f4d:	int3   
   140002f4e:	int3   
   140002f4f:	int3   
   140002f50:	mov    r8d,DWORD PTR [rcx]
   140002f53:	mov    r10d,0xffff0000
   140002f59:	mov    r9,rcx
   140002f5c:	mov    eax,r8d
   140002f5f:	lea    edx,[r8-0x10000]
   140002f66:	and    edx,r10d
   140002f69:	lock cmpxchg DWORD PTR [rcx],edx
   140002f6d:	cmp    r8d,eax
   140002f70:	je     0x140002f8e
   140002f72:	prefetchw BYTE PTR [rcx]
   140002f75:	pause  
   140002f77:	mov    edx,DWORD PTR [r9]
   140002f7a:	mov    eax,edx
   140002f7c:	lea    ecx,[rdx-0x10000]
   140002f82:	and    ecx,r10d
   140002f85:	lock cmpxchg DWORD PTR [r9],ecx
   140002f8a:	cmp    edx,eax
   140002f8c:	jne    0x140002f75
   140002f8e:	ret    
   140002f8f:	int3   
   140002f90:	int3   
   140002f91:	int3   
   140002f92:	int3   
   140002f93:	int3   
   140002f94:	int3   
   140002f95:	int3   
   140002f96:	int3   
   140002f97:	int3   
   140002f98:	int3   
   140002f99:	int3   
   140002f9a:	int3   
   140002f9b:	int3   
   140002f9c:	int3   
   140002f9d:	int3   
   140002f9e:	int3   
   140002f9f:	int3   
   140002fa0:	mov    r8d,DWORD PTR [rcx]
   140002fa3:	mov    r9,rcx
   140002fa6:	mov    eax,r8d
   140002fa9:	lea    edx,[r8-0x1]
   140002fad:	lock cmpxchg DWORD PTR [rcx],edx
   140002fb1:	cmp    r8d,eax
   140002fb4:	je     0x140002fcc
   140002fb6:	prefetchw BYTE PTR [rcx]
   140002fb9:	pause  
   140002fbb:	mov    edx,DWORD PTR [r9]
   140002fbe:	mov    eax,edx
   140002fc0:	lea    ecx,[rdx-0x1]
   140002fc3:	lock cmpxchg DWORD PTR [r9],ecx
   140002fc8:	cmp    edx,eax
   140002fca:	jne    0x140002fb9
   140002fcc:	ret    
   140002fcd:	int3   
   140002fce:	int3   
   140002fcf:	int3   
   140002fd0:	int3   
   140002fd1:	int3   
   140002fd2:	int3   
   140002fd3:	int3   
   140002fd4:	int3   
   140002fd5:	int3   
   140002fd6:	int3   
   140002fd7:	int3   
   140002fd8:	int3   
   140002fd9:	int3   
   140002fda:	int3   
   140002fdb:	int3   
   140002fdc:	int3   
   140002fdd:	int3   
   140002fde:	int3   
   140002fdf:	int3   
   140002fe0:	mov    eax,DWORD PTR [rcx]
   140002fe2:	movzx  ecx,ax
   140002fe5:	cmp    ecx,0xffff
   140002feb:	sete   al
   140002fee:	ret    
   140002fef:	int3   
   140002ff0:	int3   
   140002ff1:	int3   
   140002ff2:	int3   
   140002ff3:	int3   
   140002ff4:	int3   
   140002ff5:	int3   
   140002ff6:	int3   
   140002ff7:	int3   
   140002ff8:	int3   
   140002ff9:	int3   
   140002ffa:	int3   
   140002ffb:	int3   
   140002ffc:	int3   
   140002ffd:	int3   
   140002ffe:	int3   
   140002fff:	int3   
   140003000:	mov    edx,DWORD PTR [rcx]
   140003002:	and    edx,0x7fff
   140003008:	cmp    edx,0x1
   14000300b:	setge  al
   14000300e:	ret    
   14000300f:	int3   
   140003010:	int3   
   140003011:	int3   
   140003012:	int3   
   140003013:	int3   
   140003014:	int3   
   140003015:	int3   
   140003016:	int3   
   140003017:	int3   
   140003018:	int3   
   140003019:	int3   
   14000301a:	int3   
   14000301b:	int3   
   14000301c:	int3   
   14000301d:	int3   
   14000301e:	int3   
   14000301f:	int3   
   140003020:	mov    eax,DWORD PTR [rcx]
   140003022:	movzx  ecx,ax
   140003025:	cmp    ecx,0xffff
   14000302b:	setne  al
   14000302e:	ret    
   14000302f:	int3   
   140003030:	int3   
   140003031:	int3   
   140003032:	int3   
   140003033:	int3   
   140003034:	int3   
   140003035:	int3   
   140003036:	int3   
   140003037:	int3   
   140003038:	int3   
   140003039:	int3   
   14000303a:	int3   
   14000303b:	int3   
   14000303c:	int3   
   14000303d:	int3   
   14000303e:	int3   
   14000303f:	int3   
   140003040:	mov    edx,DWORD PTR [rcx]
   140003042:	and    edx,0x7fff
   140003048:	cmp    edx,0x1
   14000304b:	setl   al
   14000304e:	ret    
   14000304f:	int3   
   140003050:	int3   
   140003051:	int3   
   140003052:	int3   
   140003053:	int3   
   140003054:	int3   
   140003055:	int3   
   140003056:	int3   
   140003057:	int3   
   140003058:	int3   
   140003059:	int3   
   14000305a:	int3   
   14000305b:	int3   
   14000305c:	int3   
   14000305d:	int3   
   14000305e:	int3   
   14000305f:	int3   
   140003060:	sub    rsp,0x28
   140003064:	mov    edx,DWORD PTR [rcx]
   140003066:	mov    eax,0x1
   14000306b:	mov    r8,rcx
   14000306e:	cmp    edx,eax
   140003070:	jne    0x14000307e
   140003072:	mov    ecx,0x1ffff
   140003077:	lock cmpxchg DWORD PTR [r8],ecx
   14000307c:	je     0x1400030ae
   14000307e:	mov    edx,DWORD PTR [r8]
   140003081:	mov    eax,edx
   140003083:	lea    ecx,[rdx-0x1]
   140003086:	lock cmpxchg DWORD PTR [r8],ecx
   14000308b:	cmp    edx,eax
   14000308d:	je     0x1400030a6
   14000308f:	prefetchw BYTE PTR [r8]
   140003093:	pause  
   140003095:	mov    edx,DWORD PTR [r8]
   140003098:	mov    eax,edx
   14000309a:	lea    ecx,[rdx-0x1]
   14000309d:	lock cmpxchg DWORD PTR [r8],ecx
   1400030a2:	cmp    edx,eax
   1400030a4:	jne    0x140003093
   1400030a6:	mov    rcx,r8
   1400030a9:	call   0x14000c600
   1400030ae:	add    rsp,0x28
   1400030b2:	ret    
   1400030b3:	int3   
   1400030b4:	int3   
   1400030b5:	int3   
   1400030b6:	int3   
   1400030b7:	int3   
   1400030b8:	int3   
   1400030b9:	int3   
   1400030ba:	int3   
   1400030bb:	int3   
   1400030bc:	int3   
   1400030bd:	int3   
   1400030be:	int3   
   1400030bf:	int3   
   1400030c0:	mov    r8d,DWORD PTR [rcx]
   1400030c3:	mov    r10d,0xffff0001
   1400030c9:	mov    r9,rcx
   1400030cc:	mov    eax,r8d
   1400030cf:	lea    edx,[r8-0x10000]
   1400030d6:	and    edx,r10d
   1400030d9:	or     edx,0x1
   1400030dc:	lock cmpxchg DWORD PTR [rcx],edx
   1400030e0:	cmp    r8d,eax
   1400030e3:	je     0x140003104
   1400030e5:	prefetchw BYTE PTR [rcx]
   1400030e8:	pause  
   1400030ea:	mov    edx,DWORD PTR [r9]
   1400030ed:	mov    eax,edx
   1400030ef:	lea    ecx,[rdx-0x10000]
   1400030f5:	and    ecx,r10d
   1400030f8:	or     ecx,0x1
   1400030fb:	lock cmpxchg DWORD PTR [r9],ecx
   140003100:	cmp    edx,eax
   140003102:	jne    0x1400030e8
   140003104:	ret    
   140003105:	int3   
   140003106:	int3   
   140003107:	int3   
   140003108:	int3   
   140003109:	int3   
   14000310a:	int3   
   14000310b:	int3   
   14000310c:	int3   
   14000310d:	int3   
   14000310e:	int3   
   14000310f:	int3   
   140003110:	movzx  eax,WORD PTR [rip+0x18f51]        # 0x14001c068
   140003117:	ret    
   140003118:	int3   
   140003119:	int3   
   14000311a:	int3   
   14000311b:	int3   
   14000311c:	int3   
   14000311d:	int3   
   14000311e:	int3   
   14000311f:	int3   
   140003120:	lea    eax,[rcx-0x64]
   140003123:	mov    edx,0x26ac
   140003128:	cmp    ax,dx
   14000312b:	jbe    0x140003149
   14000312d:	test   cx,cx
   140003130:	je     0x140003149
   140003132:	mov    eax,0xffff
   140003137:	cmp    cx,ax
   14000313a:	jne    0x140003150
   14000313c:	mov    eax,0xfa0
   140003141:	mov    WORD PTR [rip+0x18f20],ax        # 0x14001c068
   140003148:	ret    
   140003149:	mov    WORD PTR [rip+0x18f18],cx        # 0x14001c068
   140003150:	ret    
   140003151:	int3   
   140003152:	int3   
   140003153:	int3   
   140003154:	int3   
   140003155:	int3   
   140003156:	int3   
   140003157:	int3   
   140003158:	int3   
   140003159:	int3   
   14000315a:	int3   
   14000315b:	int3   
   14000315c:	int3   
   14000315d:	int3   
   14000315e:	int3   
   14000315f:	int3   
   140003160:	comisd xmm0,QWORD PTR [rip+0x108d8]        # 0x140013a40
   140003168:	jb     0x140003180
   14000316a:	movsd  xmm1,QWORD PTR [rip+0x108d6]        # 0x140013a48
   140003172:	comisd xmm1,xmm0
   140003176:	jb     0x140003180
   140003178:	movsd  QWORD PTR [rip+0x18f18],xmm0        # 0x14001c098
   140003180:	ret    
   140003181:	int3   
   140003182:	int3   
   140003183:	int3   
   140003184:	int3   
   140003185:	int3   
   140003186:	int3   
   140003187:	int3   
   140003188:	int3   
   140003189:	int3   
   14000318a:	int3   
   14000318b:	int3   
   14000318c:	int3   
   14000318d:	int3   
   14000318e:	int3   
   14000318f:	int3   
   140003190:	movsd  xmm0,QWORD PTR [rip+0x18f00]        # 0x14001c098
   140003198:	ret    
   140003199:	int3   
   14000319a:	int3   
   14000319b:	int3   
   14000319c:	int3   
   14000319d:	int3   
   14000319e:	int3   
   14000319f:	int3   
   1400031a0:	lea    rax,[rip+0xfb21]        # 0x140012cc8
   1400031a7:	ret    
   1400031a8:	int3   
   1400031a9:	int3   
   1400031aa:	int3   
   1400031ab:	int3   
   1400031ac:	int3   
   1400031ad:	int3   
   1400031ae:	int3   
   1400031af:	int3   
   1400031b0:	jmp    0x14000c7c0
   1400031b5:	int3   
   1400031b6:	int3   
   1400031b7:	int3   
   1400031b8:	int3   
   1400031b9:	int3   
   1400031ba:	int3   
   1400031bb:	int3   
   1400031bc:	int3   
   1400031bd:	int3   
   1400031be:	int3   
   1400031bf:	int3   
   1400031c0:	rex push rbx
   1400031c2:	sub    rsp,0x20
   1400031c6:	mov    eax,DWORD PTR [rcx+0x4]
   1400031c9:	mov    rbx,rcx
   1400031cc:	test   eax,eax
   1400031ce:	jne    0x1400031fe
   1400031d0:	mov    ecx,DWORD PTR [rcx]
   1400031d2:	test   cx,cx
   1400031d5:	jne    0x1400031fe
   1400031d7:	add    edx,ecx
   1400031d9:	mov    eax,ecx
   1400031db:	or     edx,0xffff
   1400031e1:	lock cmpxchg DWORD PTR [rbx],edx
   1400031e5:	cmp    ecx,eax
   1400031e7:	jne    0x1400031fe
   1400031e9:	call   QWORD PTR [rip+0xf101]        # 0x1400122f0
   1400031ef:	and    eax,0xfffffffd
   1400031f2:	mov    ecx,0x1
   1400031f7:	or     eax,ecx
   1400031f9:	xchg   DWORD PTR [rbx+0x4],eax
   1400031fc:	jmp    0x140003221
   1400031fe:	call   QWORD PTR [rip+0xf0ec]        # 0x1400122f0
   140003204:	mov    ecx,DWORD PTR [rbx+0x4]
   140003207:	xor    ecx,eax
   140003209:	test   ecx,0xfffffffc
   14000320f:	jne    0x14000321f
   140003211:	mov    ecx,0x1
   140003216:	mov    eax,ecx
   140003218:	lock xadd DWORD PTR [rbx+0x4],eax
   14000321d:	jmp    0x140003221
   14000321f:	xor    cl,cl
   140003221:	mov    al,cl
   140003223:	add    rsp,0x20
   140003227:	pop    rbx
   140003228:	ret    
   140003229:	int3   
   14000322a:	int3   
   14000322b:	int3   
   14000322c:	int3   
   14000322d:	int3   
   14000322e:	int3   
   14000322f:	int3   
   140003230:	rex push rbx
   140003232:	sub    rsp,0x20
   140003236:	mov    rbx,rcx
   140003239:	call   QWORD PTR [rip+0xf0b1]        # 0x1400122f0
   14000323f:	mov    edx,DWORD PTR [rbx+0x4]
   140003242:	xor    edx,eax
   140003244:	test   edx,0xfffffffc
   14000324a:	jne    0x14000325a
   14000324c:	mov    edx,0x1
   140003251:	lock xadd DWORD PTR [rbx+0x4],edx
   140003256:	mov    al,0x1
   140003258:	jmp    0x14000325c
   14000325a:	xor    al,al
   14000325c:	add    rsp,0x20
   140003260:	pop    rbx
   140003261:	ret    
   140003262:	int3   
   140003263:	int3   
   140003264:	int3   
   140003265:	int3   
   140003266:	int3   
   140003267:	int3   
   140003268:	int3   
   140003269:	int3   
   14000326a:	int3   
   14000326b:	int3   
   14000326c:	int3   
   14000326d:	int3   
   14000326e:	int3   
   14000326f:	int3   
   140003270:	mov    r8d,DWORD PTR [rcx]
   140003273:	movzx  eax,r8w
   140003277:	cmp    eax,0xffff
   14000327c:	je     0x140003291
   14000327e:	lea    edx,[r8+0x1]
   140003282:	mov    eax,r8d
   140003285:	lock cmpxchg DWORD PTR [rcx],edx
   140003289:	cmp    r8d,eax
   14000328c:	jne    0x140003291
   14000328e:	mov    al,0x1
   140003290:	ret    
   140003291:	xor    al,al
   140003293:	ret    
   140003294:	int3   
   140003295:	int3   
   140003296:	int3   
   140003297:	int3   
   140003298:	int3   
   140003299:	int3   
   14000329a:	int3   
   14000329b:	int3   
   14000329c:	int3   
   14000329d:	int3   
   14000329e:	int3   
   14000329f:	int3   
   1400032a0:	rex push rbx
   1400032a2:	sub    rsp,0x20
   1400032a6:	mov    eax,DWORD PTR [rcx+0x4]
   1400032a9:	mov    rbx,rcx
   1400032ac:	test   eax,eax
   1400032ae:	jne    0x1400032e2
   1400032b0:	mov    ecx,DWORD PTR [rcx]
   1400032b2:	test   cx,cx
   1400032b5:	jne    0x1400032e2
   1400032b7:	lea    edx,[rcx+0x10000]
   1400032bd:	mov    eax,ecx
   1400032bf:	or     edx,0xffff
   1400032c5:	lock cmpxchg DWORD PTR [rbx],edx
   1400032c9:	cmp    ecx,eax
   1400032cb:	jne    0x1400032e2
   1400032cd:	call   QWORD PTR [rip+0xf01d]        # 0x1400122f0
   1400032d3:	and    eax,0xfffffffd
   1400032d6:	or     eax,0x1
   1400032d9:	xchg   DWORD PTR [rbx+0x4],eax
   1400032dc:	add    rsp,0x20
   1400032e0:	pop    rbx
   1400032e1:	ret    
   1400032e2:	call   QWORD PTR [rip+0xf008]        # 0x1400122f0
   1400032e8:	mov    ecx,DWORD PTR [rbx+0x4]
   1400032eb:	xor    ecx,eax
   1400032ed:	test   ecx,0xfffffffc
   1400032f3:	jne    0x140003305
   1400032f5:	mov    ecx,0x1
   1400032fa:	lock xadd DWORD PTR [rbx+0x4],ecx
   1400032ff:	add    rsp,0x20
   140003303:	pop    rbx
   140003304:	ret    
   140003305:	mov    rcx,rbx
   140003308:	add    rsp,0x20
   14000330c:	pop    rbx
   14000330d:	jmp    0x14000c770
   140003312:	int3   
   140003313:	int3   
   140003314:	int3   
   140003315:	int3   
   140003316:	int3   
   140003317:	int3   
   140003318:	int3   
   140003319:	int3   
   14000331a:	int3   
   14000331b:	int3   
   14000331c:	int3   
   14000331d:	int3   
   14000331e:	int3   
   14000331f:	int3   
   140003320:	sub    rsp,0x28
   140003324:	mov    r8d,DWORD PTR [rcx]
   140003327:	test   r8d,0xffff8000
   14000332e:	jne    0x140003340
   140003330:	lea    edx,[r8+0x1]
   140003334:	mov    eax,r8d
   140003337:	lock cmpxchg DWORD PTR [rcx],edx
   14000333b:	cmp    r8d,eax
   14000333e:	je     0x14000334a
   140003340:	mov    edx,0x2
   140003345:	call   0x14000c7c0
   14000334a:	add    rsp,0x28
   14000334e:	ret    
   14000334f:	int3   
   140003350:	int3   
   140003351:	int3   
   140003352:	int3   
   140003353:	int3   
   140003354:	int3   
   140003355:	int3   
   140003356:	int3   
   140003357:	int3   
   140003358:	int3   
   140003359:	int3   
   14000335a:	int3   
   14000335b:	int3   
   14000335c:	int3   
   14000335d:	int3   
   14000335e:	int3   
   14000335f:	int3   
   140003360:	rex push rbx
   140003362:	sub    rsp,0x20
   140003366:	mov    rbx,rcx
   140003369:	call   QWORD PTR [rip+0xef81]        # 0x1400122f0
   14000336f:	mov    edx,DWORD PTR [rbx+0x4]
   140003372:	xor    eax,edx
   140003374:	test   eax,0xfffffffc
   140003379:	sete   al
   14000337c:	test   al,al
   14000337e:	je     0x14000338c
   140003380:	mov    rcx,rbx
   140003383:	call   0x1400032a0
   140003388:	xor    al,al
   14000338a:	jmp    0x1400033b4
   14000338c:	mov    edx,DWORD PTR [rbx]
   14000338e:	movzx  eax,dx
   140003391:	cmp    eax,0xffff
   140003396:	je     0x1400033a5
   140003398:	lea    ecx,[rdx+0x1]
   14000339b:	mov    eax,edx
   14000339d:	lock cmpxchg DWORD PTR [rbx],ecx
   1400033a1:	cmp    edx,eax
   1400033a3:	je     0x1400033b2
   1400033a5:	mov    edx,0x3
   1400033aa:	mov    rcx,rbx
   1400033ad:	call   0x14000c7c0
   1400033b2:	mov    al,0x1
   1400033b4:	add    rsp,0x20
   1400033b8:	pop    rbx
   1400033b9:	ret    
   1400033ba:	int3   
   1400033bb:	int3   
   1400033bc:	int3   
   1400033bd:	int3   
   1400033be:	int3   
   1400033bf:	int3   
   1400033c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400033c5:	push   rdi
   1400033c6:	sub    rsp,0x20
   1400033ca:	mov    rdi,rdx
   1400033cd:	mov    rbx,rcx
   1400033d0:	call   QWORD PTR [rip+0xef1a]        # 0x1400122f0
   1400033d6:	mov    r8d,DWORD PTR [rbx+0x4]
   1400033da:	xor    eax,r8d
   1400033dd:	test   eax,0xfffffffc
   1400033e2:	sete   al
   1400033e5:	test   al,al
   1400033e7:	je     0x1400033f8
   1400033e9:	mov    rcx,rbx
   1400033ec:	call   0x1400032a0
   1400033f1:	mov    BYTE PTR [rdi],0x0
   1400033f4:	mov    al,0x1
   1400033f6:	jmp    0x140003418
   1400033f8:	mov    edx,DWORD PTR [rbx]
   1400033fa:	movzx  eax,dx
   1400033fd:	cmp    eax,0xffff
   140003402:	je     0x140003416
   140003404:	lea    ecx,[rdx+0x1]
   140003407:	mov    eax,edx
   140003409:	lock cmpxchg DWORD PTR [rbx],ecx
   14000340d:	cmp    edx,eax
   14000340f:	jne    0x140003416
   140003411:	mov    BYTE PTR [rdi],0x1
   140003414:	jmp    0x1400033f4
   140003416:	xor    al,al
   140003418:	mov    rbx,QWORD PTR [rsp+0x30]
   14000341d:	add    rsp,0x20
   140003421:	pop    rdi
   140003422:	ret    
   140003423:	int3   
   140003424:	int3   
   140003425:	int3   
   140003426:	int3   
   140003427:	int3   
   140003428:	int3   
   140003429:	int3   
   14000342a:	int3   
   14000342b:	int3   
   14000342c:	int3   
   14000342d:	int3   
   14000342e:	int3   
   14000342f:	int3   
   140003430:	rex push rbx
   140003432:	sub    rsp,0x20
   140003436:	mov    eax,DWORD PTR [rcx+0x4]
   140003439:	mov    rbx,rcx
   14000343c:	test   eax,eax
   14000343e:	jne    0x14000346e
   140003440:	mov    ecx,DWORD PTR [rcx]
   140003442:	test   cx,cx
   140003445:	jne    0x14000346e
   140003447:	lea    edx,[rcx+0x10000]
   14000344d:	mov    eax,ecx
   14000344f:	or     edx,0xffff
   140003455:	lock cmpxchg DWORD PTR [rbx],edx
   140003459:	cmp    ecx,eax
   14000345b:	jne    0x14000346e
   14000345d:	call   QWORD PTR [rip+0xee8d]        # 0x1400122f0
   140003463:	and    eax,0xfffffffd
   140003466:	or     eax,0x1
   140003469:	xchg   DWORD PTR [rbx+0x4],eax
   14000346c:	jmp    0x14000348b
   14000346e:	call   QWORD PTR [rip+0xee7c]        # 0x1400122f0
   140003474:	mov    ecx,DWORD PTR [rbx+0x4]
   140003477:	xor    ecx,eax
   140003479:	test   ecx,0xfffffffc
   14000347f:	jne    0x14000348f
   140003481:	mov    ecx,0x1
   140003486:	lock xadd DWORD PTR [rbx+0x4],ecx
   14000348b:	mov    al,0x1
   14000348d:	jmp    0x140003491
   14000348f:	xor    al,al
   140003491:	add    rsp,0x20
   140003495:	pop    rbx
   140003496:	ret    
   140003497:	int3   
   140003498:	int3   
   140003499:	int3   
   14000349a:	int3   
   14000349b:	int3   
   14000349c:	int3   
   14000349d:	int3   
   14000349e:	int3   
   14000349f:	int3   
   1400034a0:	mov    eax,DWORD PTR [rcx+0x4]
   1400034a3:	mov    r9,rcx
   1400034a6:	dec    eax
   1400034a8:	test   al,0x3
   1400034aa:	jne    0x1400034ed
   1400034ac:	xor    eax,eax
   1400034ae:	mov    r10d,0xffff0000
   1400034b4:	xchg   DWORD PTR [rcx+0x4],eax
   1400034b7:	mov    r8d,DWORD PTR [rcx]
   1400034ba:	mov    eax,r8d
   1400034bd:	lea    edx,[r8-0x10000]
   1400034c4:	and    edx,r10d
   1400034c7:	lock cmpxchg DWORD PTR [rcx],edx
   1400034cb:	cmp    r8d,eax
   1400034ce:	je     0x1400034f0
   1400034d0:	prefetchw BYTE PTR [rcx]
   1400034d3:	pause  
   1400034d5:	mov    edx,DWORD PTR [r9]
   1400034d8:	mov    eax,edx
   1400034da:	lea    ecx,[rdx-0x10000]
   1400034e0:	and    ecx,r10d
   1400034e3:	lock cmpxchg DWORD PTR [r9],ecx
   1400034e8:	cmp    edx,eax
   1400034ea:	jne    0x1400034d3
   1400034ec:	ret    
   1400034ed:	xchg   DWORD PTR [rcx+0x4],eax
   1400034f0:	ret    
   1400034f1:	int3   
   1400034f2:	int3   
   1400034f3:	int3   
   1400034f4:	int3   
   1400034f5:	int3   
   1400034f6:	int3   
   1400034f7:	int3   
   1400034f8:	int3   
   1400034f9:	int3   
   1400034fa:	int3   
   1400034fb:	int3   
   1400034fc:	int3   
   1400034fd:	int3   
   1400034fe:	int3   
   1400034ff:	int3   
   140003500:	mov    r9,rcx
   140003503:	xor    ecx,ecx
   140003505:	test   dl,dl
   140003507:	je     0x140003535
   140003509:	mov    r8d,DWORD PTR [r9]
   14000350c:	mov    eax,r8d
   14000350f:	lea    edx,[r8-0x1]
   140003513:	lock cmpxchg DWORD PTR [r9],edx
   140003518:	cmp    r8d,eax
   14000351b:	je     0x140003582
   14000351d:	prefetchw BYTE PTR [r9]
   140003521:	pause  
   140003523:	mov    edx,DWORD PTR [r9]
   140003526:	mov    eax,edx
   140003528:	lea    ecx,[rdx-0x1]
   14000352b:	lock cmpxchg DWORD PTR [r9],ecx
   140003530:	cmp    edx,eax
   140003532:	jne    0x140003521
   140003534:	ret    
   140003535:	mov    eax,DWORD PTR [r9+0x4]
   140003539:	dec    eax
   14000353b:	test   al,0x3
   14000353d:	jne    0x14000357e
   14000353f:	xchg   DWORD PTR [r9+0x4],ecx
   140003543:	mov    edx,DWORD PTR [r9]
   140003546:	mov    r8d,0xffff0000
   14000354c:	mov    eax,edx
   14000354e:	lea    ecx,[rdx-0x10000]
   140003554:	and    ecx,r8d
   140003557:	lock cmpxchg DWORD PTR [r9],ecx
   14000355c:	cmp    edx,eax
   14000355e:	je     0x140003582
   140003560:	prefetchw BYTE PTR [r9]
   140003564:	pause  
   140003566:	mov    edx,DWORD PTR [r9]
   140003569:	mov    eax,edx
   14000356b:	lea    ecx,[rdx-0x10000]
   140003571:	and    ecx,r8d
   140003574:	lock cmpxchg DWORD PTR [r9],ecx
   140003579:	cmp    edx,eax
   14000357b:	jne    0x140003564
   14000357d:	ret    
   14000357e:	xchg   DWORD PTR [r9+0x4],eax
   140003582:	ret    
   140003583:	int3   
   140003584:	int3   
   140003585:	int3   
   140003586:	int3   
   140003587:	int3   
   140003588:	int3   
   140003589:	int3   
   14000358a:	int3   
   14000358b:	int3   
   14000358c:	int3   
   14000358d:	int3   
   14000358e:	int3   
   14000358f:	int3   
   140003590:	rex push rbx
   140003592:	sub    rsp,0x20
   140003596:	mov    rbx,rcx
   140003599:	call   QWORD PTR [rip+0xed51]        # 0x1400122f0
   14000359f:	mov    ecx,DWORD PTR [rbx+0x4]
   1400035a2:	xor    eax,ecx
   1400035a4:	test   eax,0xfffffffc
   1400035a9:	sete   al
   1400035ac:	add    rsp,0x20
   1400035b0:	pop    rbx
   1400035b1:	ret    
   1400035b2:	int3   
   1400035b3:	int3   
   1400035b4:	int3   
   1400035b5:	int3   
   1400035b6:	int3   
   1400035b7:	int3   
   1400035b8:	int3   
   1400035b9:	int3   
   1400035ba:	int3   
   1400035bb:	int3   
   1400035bc:	int3   
   1400035bd:	int3   
   1400035be:	int3   
   1400035bf:	int3   
   1400035c0:	rex push rbx
   1400035c2:	sub    rsp,0x20
   1400035c6:	mov    rbx,rcx
   1400035c9:	call   QWORD PTR [rip+0xed21]        # 0x1400122f0
   1400035cf:	mov    ecx,DWORD PTR [rbx+0x4]
   1400035d2:	xor    eax,ecx
   1400035d4:	test   eax,0xfffffffc
   1400035d9:	sete   cl
   1400035dc:	test   cl,cl
   1400035de:	sete   al
   1400035e1:	add    rsp,0x20
   1400035e5:	pop    rbx
   1400035e6:	ret    
   1400035e7:	int3   
   1400035e8:	int3   
   1400035e9:	int3   
   1400035ea:	int3   
   1400035eb:	int3   
   1400035ec:	int3   
   1400035ed:	int3   
   1400035ee:	int3   
   1400035ef:	int3   
   1400035f0:	rex push rbx
   1400035f2:	sub    rsp,0x20
   1400035f6:	mov    eax,DWORD PTR [rcx]
   1400035f8:	mov    rbx,rcx
   1400035fb:	cmp    eax,0x1
   1400035fe:	jne    0x140003620
   140003600:	mov    ecx,0x1ffff
   140003605:	lock cmpxchg DWORD PTR [rbx],ecx
   140003609:	jne    0x140003620
   14000360b:	call   QWORD PTR [rip+0xecdf]        # 0x1400122f0
   140003611:	and    eax,0xfffffffd
   140003614:	or     eax,0x1
   140003617:	xchg   DWORD PTR [rbx+0x4],eax
   14000361a:	add    rsp,0x20
   14000361e:	pop    rbx
   14000361f:	ret    
   140003620:	mov    edx,DWORD PTR [rbx]
   140003622:	mov    eax,edx
   140003624:	lea    ecx,[rdx-0x1]
   140003627:	lock cmpxchg DWORD PTR [rbx],ecx
   14000362b:	cmp    edx,eax
   14000362d:	je     0x140003643
   14000362f:	prefetchw BYTE PTR [rbx]
   140003632:	pause  
   140003634:	mov    edx,DWORD PTR [rbx]
   140003636:	mov    eax,edx
   140003638:	lea    ecx,[rdx-0x1]
   14000363b:	lock cmpxchg DWORD PTR [rbx],ecx
   14000363f:	cmp    edx,eax
   140003641:	jne    0x140003632
   140003643:	mov    rcx,rbx
   140003646:	add    rsp,0x20
   14000364a:	pop    rbx
   14000364b:	jmp    0x14000c770
   140003650:	int3   
   140003651:	int3   
   140003652:	int3   
   140003653:	int3   
   140003654:	int3   
   140003655:	int3   
   140003656:	int3   
   140003657:	int3   
   140003658:	int3   
   140003659:	int3   
   14000365a:	int3   
   14000365b:	int3   
   14000365c:	int3   
   14000365d:	int3   
   14000365e:	int3   
   14000365f:	int3   
   140003660:	rex push rbx
   140003662:	sub    rsp,0x20
   140003666:	mov    eax,DWORD PTR [rcx]
   140003668:	mov    rbx,rcx
   14000366b:	cmp    eax,0x1
   14000366e:	jne    0x14000368e
   140003670:	mov    ecx,0x1ffff
   140003675:	lock cmpxchg DWORD PTR [rbx],ecx
   140003679:	jne    0x14000368e
   14000367b:	call   QWORD PTR [rip+0xec6f]        # 0x1400122f0
   140003681:	and    eax,0xfffffffd
   140003684:	or     eax,0x1
   140003687:	xchg   DWORD PTR [rbx+0x4],eax
   14000368a:	mov    al,0x1
   14000368c:	jmp    0x140003690
   14000368e:	xor    al,al
   140003690:	add    rsp,0x20
   140003694:	pop    rbx
   140003695:	ret    
   140003696:	int3   
   140003697:	int3   
   140003698:	int3   
   140003699:	int3   
   14000369a:	int3   
   14000369b:	int3   
   14000369c:	int3   
   14000369d:	int3   
   14000369e:	int3   
   14000369f:	int3   
   1400036a0:	xor    eax,eax
   1400036a2:	mov    r10d,0xffff0001
   1400036a8:	xchg   DWORD PTR [rcx+0x4],eax
   1400036ab:	mov    r8d,DWORD PTR [rcx]
   1400036ae:	mov    r9,rcx
   1400036b1:	mov    eax,r8d
   1400036b4:	lea    edx,[r8-0x10000]
   1400036bb:	and    edx,r10d
   1400036be:	or     edx,0x1
   1400036c1:	lock cmpxchg DWORD PTR [rcx],edx
   1400036c5:	cmp    r8d,eax
   1400036c8:	je     0x1400036e9
   1400036ca:	prefetchw BYTE PTR [rcx]
   1400036cd:	pause  
   1400036cf:	mov    edx,DWORD PTR [r9]
   1400036d2:	mov    eax,edx
   1400036d4:	lea    ecx,[rdx-0x10000]
   1400036da:	and    ecx,r10d
   1400036dd:	or     ecx,0x1
   1400036e0:	lock cmpxchg DWORD PTR [r9],ecx
   1400036e5:	cmp    edx,eax
   1400036e7:	jne    0x1400036cd
   1400036e9:	ret    
   1400036ea:	int3   
   1400036eb:	int3   
   1400036ec:	int3   
   1400036ed:	int3   
   1400036ee:	int3   
   1400036ef:	int3   
   1400036f0:	movzx  eax,WORD PTR [rip+0x18991]        # 0x14001c088
   1400036f7:	ret    
   1400036f8:	int3   
   1400036f9:	int3   
   1400036fa:	int3   
   1400036fb:	int3   
   1400036fc:	int3   
   1400036fd:	int3   
   1400036fe:	int3   
   1400036ff:	int3   
   140003700:	lea    eax,[rcx-0x64]
   140003703:	mov    edx,0x26ac
   140003708:	cmp    ax,dx
   14000370b:	jbe    0x140003729
   14000370d:	test   cx,cx
   140003710:	je     0x140003729
   140003712:	mov    eax,0xffff
   140003717:	cmp    cx,ax
   14000371a:	jne    0x140003730
   14000371c:	mov    eax,0xfa0
   140003721:	mov    WORD PTR [rip+0x18960],ax        # 0x14001c088
   140003728:	ret    
   140003729:	mov    WORD PTR [rip+0x18958],cx        # 0x14001c088
   140003730:	ret    
   140003731:	int3   
   140003732:	int3   
   140003733:	int3   
   140003734:	int3   
   140003735:	int3   
   140003736:	int3   
   140003737:	int3   
   140003738:	int3   
   140003739:	int3   
   14000373a:	int3   
   14000373b:	int3   
   14000373c:	int3   
   14000373d:	int3   
   14000373e:	int3   
   14000373f:	int3   
   140003740:	comisd xmm0,QWORD PTR [rip+0x102f8]        # 0x140013a40
   140003748:	jb     0x140003760
   14000374a:	movsd  xmm1,QWORD PTR [rip+0x102f6]        # 0x140013a48
   140003752:	comisd xmm1,xmm0
   140003756:	jb     0x140003760
   140003758:	movsd  QWORD PTR [rip+0x18918],xmm0        # 0x14001c078
   140003760:	ret    
   140003761:	int3   
   140003762:	int3   
   140003763:	int3   
   140003764:	int3   
   140003765:	int3   
   140003766:	int3   
   140003767:	int3   
   140003768:	int3   
   140003769:	int3   
   14000376a:	int3   
   14000376b:	int3   
   14000376c:	int3   
   14000376d:	int3   
   14000376e:	int3   
   14000376f:	int3   
   140003770:	movsd  xmm0,QWORD PTR [rip+0x18900]        # 0x14001c078
   140003778:	ret    
   140003779:	int3   
   14000377a:	int3   
   14000377b:	int3   
   14000377c:	int3   
   14000377d:	int3   
   14000377e:	int3   
   14000377f:	int3   
   140003780:	lea    rax,[rip+0xf569]        # 0x140012cf0
   140003787:	ret    
   140003788:	int3   
   140003789:	int3   
   14000378a:	int3   
   14000378b:	int3   
   14000378c:	int3   
   14000378d:	int3   
   14000378e:	int3   
   14000378f:	int3   
   140003790:	mov    eax,DWORD PTR [rcx]
   140003792:	ret    
   140003793:	int3   
   140003794:	int3   
   140003795:	int3   
   140003796:	int3   
   140003797:	int3   
   140003798:	int3   
   140003799:	int3   
   14000379a:	int3   
   14000379b:	int3   
   14000379c:	int3   
   14000379d:	int3   
   14000379e:	int3   
   14000379f:	int3   
   1400037a0:	mov    r8d,0x2
   1400037a6:	mov    rax,rcx
   1400037a9:	lea    r9d,[r8+0x7e]
   1400037ad:	movups xmm0,XMMWORD PTR [rdx]
   1400037b0:	movups XMMWORD PTR [rax],xmm0
   1400037b3:	movups xmm1,XMMWORD PTR [rdx+0x10]
   1400037b7:	movups XMMWORD PTR [rax+0x10],xmm1
   1400037bb:	movups xmm0,XMMWORD PTR [rdx+0x20]
   1400037bf:	movups XMMWORD PTR [rax+0x20],xmm0
   1400037c3:	movups xmm1,XMMWORD PTR [rdx+0x30]
   1400037c7:	movups XMMWORD PTR [rax+0x30],xmm1
   1400037cb:	movups xmm0,XMMWORD PTR [rdx+0x40]
   1400037cf:	movups XMMWORD PTR [rax+0x40],xmm0
   1400037d3:	movups xmm1,XMMWORD PTR [rdx+0x50]
   1400037d7:	movups XMMWORD PTR [rax+0x50],xmm1
   1400037db:	movups xmm0,XMMWORD PTR [rdx+0x60]
   1400037df:	movups XMMWORD PTR [rax+0x60],xmm0
   1400037e3:	add    rax,r9
   1400037e6:	movups xmm1,XMMWORD PTR [rdx+0x70]
   1400037ea:	add    rdx,r9
   1400037ed:	movups XMMWORD PTR [rax-0x10],xmm1
   1400037f1:	sub    r8,0x1
   1400037f5:	jne    0x1400037ad
   1400037f7:	mov    rax,rcx
   1400037fa:	ret    
   1400037fb:	int3   
   1400037fc:	int3   
   1400037fd:	int3   
   1400037fe:	int3   
   1400037ff:	int3   
   140003800:	int3   
   140003801:	int3   
   140003802:	int3   
   140003803:	int3   
   140003804:	int3   
   140003805:	int3   
   140003806:	int3   
   140003807:	int3   
   140003808:	int3   
   140003809:	int3   
   14000380a:	int3   
   14000380b:	int3   
   14000380c:	int3   
   14000380d:	int3   
   14000380e:	int3   
   14000380f:	int3   
   140003810:	xor    eax,eax
   140003812:	mov    QWORD PTR [rcx+0x20],rdx
   140003816:	mov    DWORD PTR [rcx+0x28],r8d
   14000381a:	mov    WORD PTR [rcx+0x2c],0x100
   140003820:	mov    DWORD PTR [rcx+0x30],eax
   140003823:	mov    BYTE PTR [rdx],al
   140003825:	mov    rax,rcx
   140003828:	ret    
   140003829:	int3   
   14000382a:	int3   
   14000382b:	int3   
   14000382c:	int3   
   14000382d:	int3   
   14000382e:	int3   
   14000382f:	int3   
   140003830:	mov    eax,DWORD PTR [rcx+0x30]
   140003833:	cmp    DWORD PTR [rdx+0x30],eax
   140003836:	jne    0x140003861
   140003838:	mov    r9,QWORD PTR [rcx+0x20]
   14000383c:	mov    ecx,0x1
   140003841:	mov    rax,QWORD PTR [rdx+0x20]
   140003845:	sub    r9,rax
   140003848:	movzx  edx,BYTE PTR [rax]
   14000384b:	movzx  r8d,BYTE PTR [rax+r9*1]
   140003850:	sub    edx,r8d
   140003853:	jne    0x14000385d
   140003855:	add    rax,rcx
   140003858:	test   r8d,r8d
   14000385b:	jne    0x140003848
   14000385d:	test   edx,edx
   14000385f:	je     0x140003863
   140003861:	xor    ecx,ecx
   140003863:	mov    al,cl
   140003865:	ret    
   140003866:	int3   
   140003867:	int3   
   140003868:	int3   
   140003869:	int3   
   14000386a:	int3   
   14000386b:	int3   
   14000386c:	int3   
   14000386d:	int3   
   14000386e:	int3   
   14000386f:	int3   
   140003870:	xor    eax,eax
   140003872:	test   rdx,rdx
   140003875:	je     0x14000389b
   140003877:	cmp    BYTE PTR [rdx],al
   140003879:	je     0x14000389b
   14000387b:	mov    r9,QWORD PTR [rcx+0x20]
   14000387f:	sub    r9,rdx
   140003882:	movzx  ecx,BYTE PTR [rdx]
   140003885:	movzx  r8d,BYTE PTR [rdx+r9*1]
   14000388a:	sub    ecx,r8d
   14000388d:	jne    0x140003897
   14000388f:	inc    rdx
   140003892:	test   r8d,r8d
   140003895:	jne    0x140003882
   140003897:	test   ecx,ecx
   140003899:	jmp    0x14000389e
   14000389b:	cmp    DWORD PTR [rcx+0x30],eax
   14000389e:	sete   al
   1400038a1:	ret    
   1400038a2:	int3   
   1400038a3:	int3   
   1400038a4:	int3   
   1400038a5:	int3   
   1400038a6:	int3   
   1400038a7:	int3   
   1400038a8:	int3   
   1400038a9:	int3   
   1400038aa:	int3   
   1400038ab:	int3   
   1400038ac:	int3   
   1400038ad:	int3   
   1400038ae:	int3   
   1400038af:	int3   
   1400038b0:	rex push rbx
   1400038b2:	sub    rsp,0x20
   1400038b6:	mov    eax,DWORD PTR [rcx+0x30]
   1400038b9:	xor    ebx,ebx
   1400038bb:	mov    r8,rdx
   1400038be:	cmp    DWORD PTR [rdx+0x30],eax
   1400038c1:	jne    0x1400038d8
   1400038c3:	mov    rdx,QWORD PTR [rcx+0x20]
   1400038c7:	mov    rcx,QWORD PTR [r8+0x20]
   1400038cb:	call   QWORD PTR [rip+0xec27]        # 0x1400124f8
   1400038d1:	test   eax,eax
   1400038d3:	jne    0x1400038d8
   1400038d5:	lea    ebx,[rax+0x1]
   1400038d8:	mov    al,bl
   1400038da:	add    rsp,0x20
   1400038de:	pop    rbx
   1400038df:	ret    
   1400038e0:	int3   
   1400038e1:	int3   
   1400038e2:	int3   
   1400038e3:	int3   
   1400038e4:	int3   
   1400038e5:	int3   
   1400038e6:	int3   
   1400038e7:	int3   
   1400038e8:	int3   
   1400038e9:	int3   
   1400038ea:	int3   
   1400038eb:	int3   
   1400038ec:	int3   
   1400038ed:	int3   
   1400038ee:	int3   
   1400038ef:	int3   
   1400038f0:	rex push rbx
   1400038f2:	sub    rsp,0x20
   1400038f6:	xor    ebx,ebx
   1400038f8:	mov    rax,rdx
   1400038fb:	test   rdx,rdx
   1400038fe:	je     0x140003915
   140003900:	cmp    BYTE PTR [rdx],bl
   140003902:	je     0x140003915
   140003904:	mov    rdx,QWORD PTR [rcx+0x20]
   140003908:	mov    rcx,rax
   14000390b:	call   QWORD PTR [rip+0xebe7]        # 0x1400124f8
   140003911:	test   eax,eax
   140003913:	jmp    0x140003918
   140003915:	cmp    DWORD PTR [rcx+0x30],ebx
   140003918:	sete   al
   14000391b:	add    rsp,0x20
   14000391f:	pop    rbx
   140003920:	ret    
   140003921:	int3   
   140003922:	int3   
   140003923:	int3   
   140003924:	int3   
   140003925:	int3   
   140003926:	int3   
   140003927:	int3   
   140003928:	int3   
   140003929:	int3   
   14000392a:	int3   
   14000392b:	int3   
   14000392c:	int3   
   14000392d:	int3   
   14000392e:	int3   
   14000392f:	int3   
   140003930:	mov    rax,QWORD PTR [rcx+0x20]
   140003934:	mov    BYTE PTR [rax],0x0
   140003937:	and    DWORD PTR [rcx+0x30],0x0
   14000393b:	ret    
   14000393c:	int3   
   14000393d:	int3   
   14000393e:	int3   
   14000393f:	int3   
   140003940:	int3   
   140003941:	int3   
   140003942:	int3   
   140003943:	int3   
   140003944:	int3   
   140003945:	int3   
   140003946:	int3   
   140003947:	int3   
   140003948:	int3   
   140003949:	int3   
   14000394a:	int3   
   14000394b:	int3   
   14000394c:	int3   
   14000394d:	int3   
   14000394e:	int3   
   14000394f:	int3   
   140003950:	sub    rsp,0x38
   140003954:	test   rdx,rdx
   140003957:	je     0x140003977
   140003959:	or     r8,0xffffffffffffffff
   14000395d:	inc    r8
   140003960:	cmp    BYTE PTR [rdx+r8*1],0x0
   140003965:	jne    0x14000395d
   140003967:	mov    r9d,DWORD PTR [rcx+0x30]
   14000396b:	mov    BYTE PTR [rsp+0x20],0x1
   140003970:	call   0x14000d3d0
   140003975:	jmp    0x140003979
   140003977:	xor    eax,eax
   140003979:	add    rsp,0x38
   14000397d:	ret    
   14000397e:	int3   
   14000397f:	int3   
   140003980:	int3   
   140003981:	int3   
   140003982:	int3   
   140003983:	int3   
   140003984:	int3   
   140003985:	int3   
   140003986:	int3   
   140003987:	int3   
   140003988:	int3   
   140003989:	int3   
   14000398a:	int3   
   14000398b:	int3   
   14000398c:	int3   
   14000398d:	int3   
   14000398e:	int3   
   14000398f:	int3   
   140003990:	sub    rsp,0x38
   140003994:	test   rdx,rdx
   140003997:	je     0x1400039ae
   140003999:	test   r8d,r8d
   14000399c:	je     0x1400039ae
   14000399e:	mov    r9d,DWORD PTR [rcx+0x30]
   1400039a2:	mov    BYTE PTR [rsp+0x20],0x1
   1400039a7:	call   0x14000d3d0
   1400039ac:	jmp    0x1400039b0
   1400039ae:	xor    eax,eax
   1400039b0:	add    rsp,0x38
   1400039b4:	ret    
   1400039b5:	int3   
   1400039b6:	int3   
   1400039b7:	int3   
   1400039b8:	int3   
   1400039b9:	int3   
   1400039ba:	int3   
   1400039bb:	int3   
   1400039bc:	int3   
   1400039bd:	int3   
   1400039be:	int3   
   1400039bf:	int3   
   1400039c0:	sub    rsp,0x38
   1400039c4:	mov    r8d,DWORD PTR [rdx+0x30]
   1400039c8:	test   r8d,r8d
   1400039cb:	je     0x1400039e1
   1400039cd:	mov    r9d,DWORD PTR [rcx+0x30]
   1400039d1:	mov    rdx,QWORD PTR [rdx+0x20]
   1400039d5:	mov    BYTE PTR [rsp+0x20],0x1
   1400039da:	call   0x14000d3d0
   1400039df:	jmp    0x1400039e3
   1400039e1:	xor    eax,eax
   1400039e3:	add    rsp,0x38
   1400039e7:	ret    
   1400039e8:	int3   
   1400039e9:	int3   
   1400039ea:	int3   
   1400039eb:	int3   
   1400039ec:	int3   
   1400039ed:	int3   
   1400039ee:	int3   
   1400039ef:	int3   
   1400039f0:	sub    rsp,0x38
   1400039f4:	or     r8,0xffffffffffffffff
   1400039f8:	inc    r8
   1400039fb:	cmp    WORD PTR [rdx+r8*2],0x0
   140003a01:	jne    0x1400039f8
   140003a03:	mov    r9d,DWORD PTR [rcx+0x30]
   140003a07:	mov    BYTE PTR [rsp+0x20],0x1
   140003a0c:	call   0x14000d4a0
   140003a11:	add    rsp,0x38
   140003a15:	ret    
   140003a16:	int3   
   140003a17:	int3   
   140003a18:	int3   
   140003a19:	int3   
   140003a1a:	int3   
   140003a1b:	int3   
   140003a1c:	int3   
   140003a1d:	int3   
   140003a1e:	int3   
   140003a1f:	int3   
   140003a20:	sub    rsp,0x38
   140003a24:	mov    r9d,DWORD PTR [rcx+0x30]
   140003a28:	mov    BYTE PTR [rsp+0x20],0x1
   140003a2d:	call   0x14000d5d0
   140003a32:	add    rsp,0x38
   140003a36:	ret    
   140003a37:	int3   
   140003a38:	int3   
   140003a39:	int3   
   140003a3a:	int3   
   140003a3b:	int3   
   140003a3c:	int3   
   140003a3d:	int3   
   140003a3e:	int3   
   140003a3f:	int3   
   140003a40:	sub    rsp,0x38
   140003a44:	mov    r9d,DWORD PTR [rcx+0x30]
   140003a48:	mov    BYTE PTR [rsp+0x20],0x1
   140003a4d:	call   0x14000d4a0
   140003a52:	add    rsp,0x38
   140003a56:	ret    
   140003a57:	int3   
   140003a58:	int3   
   140003a59:	int3   
   140003a5a:	int3   
   140003a5b:	int3   
   140003a5c:	int3   
   140003a5d:	int3   
   140003a5e:	int3   
   140003a5f:	int3   
   140003a60:	sub    rsp,0x38
   140003a64:	mov    r9d,DWORD PTR [rcx+0x30]
   140003a68:	mov    BYTE PTR [rsp+0x20],0x1
   140003a6d:	call   0x14000d700
   140003a72:	add    rsp,0x38
   140003a76:	ret    
   140003a77:	int3   
   140003a78:	int3   
   140003a79:	int3   
   140003a7a:	int3   
   140003a7b:	int3   
   140003a7c:	int3   
   140003a7d:	int3   
   140003a7e:	int3   
   140003a7f:	int3   
   140003a80:	sub    rsp,0x38
   140003a84:	or     r8,0xffffffffffffffff
   140003a88:	inc    r8
   140003a8b:	cmp    WORD PTR [rdx+r8*2],0x0
   140003a91:	jne    0x140003a88
   140003a93:	mov    r9d,DWORD PTR [rcx+0x30]
   140003a97:	mov    BYTE PTR [rsp+0x20],0x1
   140003a9c:	call   0x14000d700
   140003aa1:	add    rsp,0x38
   140003aa5:	ret    
   140003aa6:	int3   
   140003aa7:	int3   
   140003aa8:	int3   
   140003aa9:	int3   
   140003aaa:	int3   
   140003aab:	int3   
   140003aac:	int3   
   140003aad:	int3   
   140003aae:	int3   
   140003aaf:	int3   
   140003ab0:	sub    rsp,0x38
   140003ab4:	test   rdx,rdx
   140003ab7:	je     0x140003ad6
   140003ab9:	or     r8,0xffffffffffffffff
   140003abd:	inc    r8
   140003ac0:	cmp    BYTE PTR [rdx+r8*1],0x0
   140003ac5:	jne    0x140003abd
   140003ac7:	xor    r9d,r9d
   140003aca:	mov    BYTE PTR [rsp+0x20],0x1
   140003acf:	call   0x14000d3d0
   140003ad4:	jmp    0x140003adb
   140003ad6:	mov    eax,0x80070057
   140003adb:	add    rsp,0x38
   140003adf:	ret    
   140003ae0:	int3   
   140003ae1:	int3   
   140003ae2:	int3   
   140003ae3:	int3   
   140003ae4:	int3   
   140003ae5:	int3   
   140003ae6:	int3   
   140003ae7:	int3   
   140003ae8:	int3   
   140003ae9:	int3   
   140003aea:	int3   
   140003aeb:	int3   
   140003aec:	int3   
   140003aed:	int3   
   140003aee:	int3   
   140003aef:	int3   
   140003af0:	sub    rsp,0x38
   140003af4:	test   rdx,rdx
   140003af7:	jne    0x140003b05
   140003af9:	test   r8d,r8d
   140003afc:	je     0x140003b05
   140003afe:	mov    eax,0x80070057
   140003b03:	jmp    0x140003b12
   140003b05:	xor    r9d,r9d
   140003b08:	mov    BYTE PTR [rsp+0x20],0x1
   140003b0d:	call   0x14000d3d0
   140003b12:	add    rsp,0x38
   140003b16:	ret    
   140003b17:	int3   
   140003b18:	int3   
   140003b19:	int3   
   140003b1a:	int3   
   140003b1b:	int3   
   140003b1c:	int3   
   140003b1d:	int3   
   140003b1e:	int3   
   140003b1f:	int3   
   140003b20:	sub    rsp,0x38
   140003b24:	mov    r8d,DWORD PTR [rdx+0x30]
   140003b28:	xor    r9d,r9d
   140003b2b:	mov    rdx,QWORD PTR [rdx+0x20]
   140003b2f:	mov    BYTE PTR [rsp+0x20],0x1
   140003b34:	call   0x14000d3d0
   140003b39:	add    rsp,0x38
   140003b3d:	ret    
   140003b3e:	int3   
   140003b3f:	int3   
   140003b40:	int3   
   140003b41:	int3   
   140003b42:	int3   
   140003b43:	int3   
   140003b44:	int3   
   140003b45:	int3   
   140003b46:	int3   
   140003b47:	int3   
   140003b48:	int3   
   140003b49:	int3   
   140003b4a:	int3   
   140003b4b:	int3   
   140003b4c:	int3   
   140003b4d:	int3   
   140003b4e:	int3   
   140003b4f:	int3   
   140003b50:	sub    rsp,0x38
   140003b54:	mov    rax,QWORD PTR [rcx+0x20]
   140003b58:	xor    r9d,r9d
   140003b5b:	or     r8,0xffffffffffffffff
   140003b5f:	mov    BYTE PTR [rax],r9b
   140003b62:	mov    DWORD PTR [rcx+0x30],r9d
   140003b66:	inc    r8
   140003b69:	cmp    WORD PTR [rdx+r8*2],r9w
   140003b6e:	jne    0x140003b66
   140003b70:	mov    BYTE PTR [rsp+0x20],0x1
   140003b75:	call   0x14000d4a0
   140003b7a:	add    rsp,0x38
   140003b7e:	ret    
   140003b7f:	int3   
   140003b80:	int3   
   140003b81:	int3   
   140003b82:	int3   
   140003b83:	int3   
   140003b84:	int3   
   140003b85:	int3   
   140003b86:	int3   
   140003b87:	int3   
   140003b88:	int3   
   140003b89:	int3   
   140003b8a:	int3   
   140003b8b:	int3   
   140003b8c:	int3   
   140003b8d:	int3   
   140003b8e:	int3   
   140003b8f:	int3   
   140003b90:	sub    rsp,0x38
   140003b94:	mov    rax,QWORD PTR [rcx+0x20]
   140003b98:	xor    r9d,r9d
   140003b9b:	mov    BYTE PTR [rsp+0x20],0x1
   140003ba0:	mov    BYTE PTR [rax],0x0
   140003ba3:	and    DWORD PTR [rcx+0x30],0x0
   140003ba7:	call   0x14000d4a0
   140003bac:	add    rsp,0x38
   140003bb0:	ret    
   140003bb1:	int3   
   140003bb2:	int3   
   140003bb3:	int3   
   140003bb4:	int3   
   140003bb5:	int3   
   140003bb6:	int3   
   140003bb7:	int3   
   140003bb8:	int3   
   140003bb9:	int3   
   140003bba:	int3   
   140003bbb:	int3   
   140003bbc:	int3   
   140003bbd:	int3   
   140003bbe:	int3   
   140003bbf:	int3   
   140003bc0:	sub    rsp,0x38
   140003bc4:	or     r8,0xffffffffffffffff
   140003bc8:	inc    r8
   140003bcb:	cmp    WORD PTR [rdx+r8*2],0x0
   140003bd1:	jne    0x140003bc8
   140003bd3:	xor    r9d,r9d
   140003bd6:	mov    BYTE PTR [rsp+0x20],0x1
   140003bdb:	call   0x14000d700
   140003be0:	add    rsp,0x38
   140003be4:	ret    
   140003be5:	int3   
   140003be6:	int3   
   140003be7:	int3   
   140003be8:	int3   
   140003be9:	int3   
   140003bea:	int3   
   140003beb:	int3   
   140003bec:	int3   
   140003bed:	int3   
   140003bee:	int3   
   140003bef:	int3   
   140003bf0:	sub    rsp,0x38
   140003bf4:	mov    rax,QWORD PTR [rcx+0x20]
   140003bf8:	xor    r9d,r9d
   140003bfb:	mov    BYTE PTR [rsp+0x20],0x1
   140003c00:	mov    BYTE PTR [rax],0x0
   140003c03:	and    DWORD PTR [rcx+0x30],0x0
   140003c07:	call   0x14000d700
   140003c0c:	add    rsp,0x38
   140003c10:	ret    
   140003c11:	int3   
   140003c12:	int3   
   140003c13:	int3   
   140003c14:	int3   
   140003c15:	int3   
   140003c16:	int3   
   140003c17:	int3   
   140003c18:	int3   
   140003c19:	int3   
   140003c1a:	int3   
   140003c1b:	int3   
   140003c1c:	int3   
   140003c1d:	int3   
   140003c1e:	int3   
   140003c1f:	int3   
   140003c20:	mov    QWORD PTR [rsp+0x8],rbx
   140003c25:	push   rdi
   140003c26:	sub    rsp,0x20
   140003c2a:	or     rax,0xffffffffffffffff
   140003c2e:	mov    rbx,rcx
   140003c31:	xor    edi,edi
   140003c33:	inc    rax
   140003c36:	cmp    WORD PTR [rdx+rax*2],di
   140003c3a:	jne    0x140003c33
   140003c3c:	mov    r8d,eax
   140003c3f:	call   0x14000d7f0
   140003c44:	test   eax,eax
   140003c46:	js     0x140003c55
   140003c48:	xor    r8d,r8d
   140003c4b:	xor    edx,edx
   140003c4d:	mov    rcx,rbx
   140003c50:	call   0x14000db90
   140003c55:	mov    rbx,QWORD PTR [rsp+0x30]
   140003c5a:	add    rsp,0x20
   140003c5e:	pop    rdi
   140003c5f:	ret    
   140003c60:	int3   
   140003c61:	int3   
   140003c62:	int3   
   140003c63:	int3   
   140003c64:	int3   
   140003c65:	int3   
   140003c66:	int3   
   140003c67:	int3   
   140003c68:	int3   
   140003c69:	int3   
   140003c6a:	int3   
   140003c6b:	int3   
   140003c6c:	int3   
   140003c6d:	int3   
   140003c6e:	int3   
   140003c6f:	int3   
   140003c70:	or     r8,0xffffffffffffffff
   140003c74:	inc    r8
   140003c77:	cmp    WORD PTR [rdx+r8*2],0x0
   140003c7d:	jne    0x140003c74
   140003c7f:	jmp    0x14000d7f0
   140003c84:	int3   
   140003c85:	int3   
   140003c86:	int3   
   140003c87:	int3   
   140003c88:	int3   
   140003c89:	int3   
   140003c8a:	int3   
   140003c8b:	int3   
   140003c8c:	int3   
   140003c8d:	int3   
   140003c8e:	int3   
   140003c8f:	int3   
   140003c90:	mov    r8,rcx
   140003c93:	cmp    edx,DWORD PTR [rcx+0x28]
   140003c96:	jb     0x140003c9b
   140003c98:	xor    al,al
   140003c9a:	ret    
   140003c9b:	mov    rax,QWORD PTR [r8+0x20]
   140003c9f:	mov    ecx,edx
   140003ca1:	mov    BYTE PTR [rcx+rax*1],0x0
   140003ca5:	mov    al,0x1
   140003ca7:	mov    DWORD PTR [r8+0x30],edx
   140003cab:	ret    
   140003cac:	int3   
   140003cad:	int3   
   140003cae:	int3   
   140003caf:	int3   
   140003cb0:	int3   
   140003cb1:	int3   
   140003cb2:	int3   
   140003cb3:	int3   
   140003cb4:	int3   
   140003cb5:	int3   
   140003cb6:	int3   
   140003cb7:	int3   
   140003cb8:	int3   
   140003cb9:	int3   
   140003cba:	int3   
   140003cbb:	int3   
   140003cbc:	int3   
   140003cbd:	int3   
   140003cbe:	int3   
   140003cbf:	int3   
   140003cc0:	rex push rbx
   140003cc2:	sub    rsp,0x20
   140003cc6:	mov    rbx,rcx
   140003cc9:	xor    eax,eax
   140003ccb:	mov    rcx,QWORD PTR [rcx+0x20]
   140003ccf:	test   rcx,rcx
   140003cd2:	je     0x140003cdd
   140003cd4:	mov    edx,DWORD PTR [rbx+0x28]
   140003cd7:	call   QWORD PTR [rip+0xe813]        # 0x1400124f0
   140003cdd:	mov    DWORD PTR [rbx+0x30],eax
   140003ce0:	add    rsp,0x20
   140003ce4:	pop    rbx
   140003ce5:	ret    
   140003ce6:	int3   
   140003ce7:	int3   
   140003ce8:	int3   
   140003ce9:	int3   
   140003cea:	int3   
   140003ceb:	int3   
   140003cec:	int3   
   140003ced:	int3   
   140003cee:	int3   
   140003cef:	int3   
   140003cf0:	sub    rsp,0x38
   140003cf4:	mov    rax,rdx
   140003cf7:	test   rdx,rdx
   140003cfa:	jne    0x140003d03
   140003cfc:	mov    eax,0x80070057
   140003d01:	jmp    0x140003d1b
   140003d03:	mov    r8d,DWORD PTR [rcx+0x30]
   140003d07:	xor    r9d,r9d
   140003d0a:	mov    rdx,QWORD PTR [rcx+0x20]
   140003d0e:	mov    rcx,rax
   140003d11:	mov    BYTE PTR [rsp+0x20],0x1
   140003d16:	call   0x14000d3d0
   140003d1b:	add    rsp,0x38
   140003d1f:	ret    
   140003d20:	int3   
   140003d21:	int3   
   140003d22:	int3   
   140003d23:	int3   
   140003d24:	int3   
   140003d25:	int3   
   140003d26:	int3   
   140003d27:	int3   
   140003d28:	int3   
   140003d29:	int3   
   140003d2a:	int3   
   140003d2b:	int3   
   140003d2c:	int3   
   140003d2d:	int3   
   140003d2e:	int3   
   140003d2f:	int3   
   140003d30:	mov    eax,0x2
   140003d35:	ret    
   140003d36:	int3   
   140003d37:	int3   
   140003d38:	int3   
   140003d39:	int3   
   140003d3a:	int3   
   140003d3b:	int3   
   140003d3c:	int3   
   140003d3d:	int3   
   140003d3e:	int3   
   140003d3f:	int3   
   140003d40:	mov    eax,0x3
   140003d45:	ret    
   140003d46:	int3   
   140003d47:	int3   
   140003d48:	int3   
   140003d49:	int3   
   140003d4a:	int3   
   140003d4b:	int3   
   140003d4c:	int3   
   140003d4d:	int3   
   140003d4e:	int3   
   140003d4f:	int3   
   140003d50:	mov    eax,0x1
   140003d55:	ret    
   140003d56:	int3   
   140003d57:	int3   
   140003d58:	int3   
   140003d59:	int3   
   140003d5a:	int3   
   140003d5b:	int3   
   140003d5c:	int3   
   140003d5d:	int3   
   140003d5e:	int3   
   140003d5f:	int3   
   140003d60:	mov    eax,0x9
   140003d65:	ret    
   140003d66:	int3   
   140003d67:	int3   
   140003d68:	int3   
   140003d69:	int3   
   140003d6a:	int3   
   140003d6b:	int3   
   140003d6c:	int3   
   140003d6d:	int3   
   140003d6e:	int3   
   140003d6f:	int3   
   140003d70:	mov    eax,0x8
   140003d75:	ret    
   140003d76:	int3   
   140003d77:	int3   
   140003d78:	int3   
   140003d79:	int3   
   140003d7a:	int3   
   140003d7b:	int3   
   140003d7c:	int3   
   140003d7d:	int3   
   140003d7e:	int3   
   140003d7f:	int3   
   140003d80:	mov    eax,0x7
   140003d85:	ret    
   140003d86:	int3   
   140003d87:	int3   
   140003d88:	int3   
   140003d89:	int3   
   140003d8a:	int3   
   140003d8b:	int3   
   140003d8c:	int3   
   140003d8d:	int3   
   140003d8e:	int3   
   140003d8f:	int3   
   140003d90:	mov    eax,0x6
   140003d95:	ret    
   140003d96:	int3   
   140003d97:	int3   
   140003d98:	int3   
   140003d99:	int3   
   140003d9a:	int3   
   140003d9b:	int3   
   140003d9c:	int3   
   140003d9d:	int3   
   140003d9e:	int3   
   140003d9f:	int3   
   140003da0:	mov    eax,0x5
   140003da5:	ret    
   140003da6:	int3   
   140003da7:	int3   
   140003da8:	int3   
   140003da9:	int3   
   140003daa:	int3   
   140003dab:	int3   
   140003dac:	int3   
   140003dad:	int3   
   140003dae:	int3   
   140003daf:	int3   
   140003db0:	mov    eax,0x4
   140003db5:	ret    
   140003db6:	int3   
   140003db7:	int3   
   140003db8:	int3   
   140003db9:	int3   
   140003dba:	int3   
   140003dbb:	int3   
   140003dbc:	mov    QWORD PTR [rsp+0x8],rbx
   140003dc1:	mov    QWORD PTR [rsp+0x10],rsi
   140003dc6:	push   rdi
   140003dc7:	sub    rsp,0x40
   140003dcb:	mov    rdi,r8
   140003dce:	xor    esi,esi
   140003dd0:	mov    QWORD PTR [rsp+0x60],rsi
   140003dd5:	mov    eax,r9d
   140003dd8:	mov    r8,rdx
   140003ddb:	test   rdi,rdi
   140003dde:	jne    0x140003dea
   140003de0:	mov    ebx,0x80070057
   140003de5:	jmp    0x140003e89
   140003dea:	mov    rdx,QWORD PTR [rip+0x188c7]        # 0x14001c6b8
   140003df1:	test   rdx,rdx
   140003df4:	jne    0x140003e00
   140003df6:	mov    ebx,0x80004005
   140003dfb:	jmp    0x140003e89
   140003e00:	mov    QWORD PTR [rsp+0x30],r8
   140003e05:	or     eax,0x2100
   140003e0a:	lea    r8,[rsp+0x60]
   140003e0f:	mov    DWORD PTR [rsp+0x28],esi
   140003e13:	mov    QWORD PTR [rsp+0x20],r8
   140003e18:	xor    r9d,r9d
   140003e1b:	mov    r8d,ecx
   140003e1e:	mov    ecx,eax
   140003e20:	call   QWORD PTR [rip+0xe4e2]        # 0x140012308
   140003e26:	test   eax,eax
   140003e28:	jne    0x140003e42
   140003e2a:	call   QWORD PTR [rip+0xe4c8]        # 0x1400122f8
   140003e30:	movzx  ebx,ax
   140003e33:	or     ebx,0x80070000
   140003e39:	test   eax,eax
   140003e3b:	cmovle ebx,eax
   140003e3e:	test   ebx,ebx
   140003e40:	js     0x140003e72
   140003e42:	mov    rcx,QWORD PTR [rsp+0x60]
   140003e47:	test   rcx,rcx
   140003e4a:	je     0x140003e79
   140003e4c:	or     rax,0xffffffffffffffff
   140003e50:	inc    rax
   140003e53:	cmp    WORD PTR [rcx+rax*2],si
   140003e57:	jne    0x140003e50
   140003e59:	mov    rdx,rcx
   140003e5c:	mov    BYTE PTR [rsp+0x20],0x1
   140003e61:	mov    rcx,rdi
   140003e64:	lea    r8d,[rax+rax*1]
   140003e68:	xor    r9d,r9d
   140003e6b:	call   0x14000eb60
   140003e70:	mov    ebx,eax
   140003e72:	mov    rcx,QWORD PTR [rsp+0x60]
   140003e77:	jmp    0x140003e7e
   140003e79:	mov    ebx,0x80070057
   140003e7e:	test   rcx,rcx
   140003e81:	je     0x140003e89
   140003e83:	call   QWORD PTR [rip+0xe487]        # 0x140012310
   140003e89:	mov    rsi,QWORD PTR [rsp+0x58]
   140003e8e:	mov    eax,ebx
   140003e90:	mov    rbx,QWORD PTR [rsp+0x50]
   140003e95:	add    rsp,0x40
   140003e99:	pop    rdi
   140003e9a:	ret    
   140003e9b:	int3   
   140003e9c:	int3   
   140003e9d:	int3   
   140003e9e:	int3   
   140003e9f:	int3   
   140003ea0:	int3   
   140003ea1:	int3   
   140003ea2:	int3   
   140003ea3:	int3   
   140003ea4:	sub    rsp,0x28
   140003ea8:	test   rdx,rdx
   140003eab:	jne    0x140003eb4
   140003ead:	mov    eax,0x80070057
   140003eb2:	jmp    0x140003ee2
   140003eb4:	and    QWORD PTR [rsp+0x38],0x0
   140003eba:	test   ecx,ecx
   140003ebc:	jns    0x140003ecf
   140003ebe:	mov    eax,ecx
   140003ec0:	and    eax,0x1fff0000
   140003ec5:	cmp    eax,0x70000
   140003eca:	jne    0x140003ecf
   140003ecc:	movzx  ecx,cx
   140003ecf:	mov    r8,rdx
   140003ed2:	mov    r9d,0x1000
   140003ed8:	lea    rdx,[rsp+0x38]
   140003edd:	call   0x140003dbc
   140003ee2:	add    rsp,0x28
   140003ee6:	ret    
   140003ee7:	int3   
   140003ee8:	int3   
   140003ee9:	int3   
   140003eea:	int3   
   140003eeb:	int3   
   140003eec:	int3   
   140003eed:	int3   
   140003eee:	int3   
   140003eef:	int3   
   140003ef0:	mov    rax,rsp
   140003ef3:	mov    QWORD PTR [rax+0x8],rbx
   140003ef7:	mov    QWORD PTR [rax+0x10],rbp
   140003efb:	mov    QWORD PTR [rax+0x18],rsi
   140003eff:	mov    QWORD PTR [rax+0x20],rdi
   140003f03:	push   r14
   140003f05:	sub    rsp,0x20
   140003f09:	mov    rsi,r9
   140003f0c:	mov    rdi,r8
   140003f0f:	mov    ebp,edx
   140003f11:	mov    r14d,ecx
   140003f14:	test   r9,r9
   140003f17:	jne    0x140003f23
   140003f19:	mov    edi,0x80070057
   140003f1e:	jmp    0x140003fb1
   140003f23:	mov    ecx,0x48
   140003f28:	call   0x140011478
   140003f2d:	mov    rbx,rax
   140003f30:	test   rax,rax
   140003f33:	je     0x140003f69
   140003f35:	and    DWORD PTR [rbx+0xc],0x0
   140003f39:	lea    rax,[rip+0xe128]        # 0x140012068
   140003f40:	mov    QWORD PTR [rbx],rax
   140003f43:	lea    rax,[rbx+0x10]
   140003f47:	mov    DWORD PTR [rbx+0x8],0x1
   140003f4e:	and    QWORD PTR [rax],0x0
   140003f52:	mov    QWORD PTR [rax+0x20],rax
   140003f56:	mov    DWORD PTR [rax+0x28],0x20
   140003f5d:	mov    WORD PTR [rax+0x2c],0x100
   140003f63:	and    DWORD PTR [rax+0x30],0x0
   140003f67:	jmp    0x140003f6b
   140003f69:	xor    ebx,ebx
   140003f6b:	test   rbx,rbx
   140003f6e:	jne    0x140003f77
   140003f70:	mov    edi,0x80070008
   140003f75:	jmp    0x140003fb1
   140003f77:	mov    r9,rdi
   140003f7a:	mov    r8d,ebp
   140003f7d:	mov    edx,r14d
   140003f80:	mov    rcx,rbx
   140003f83:	call   0x140006dfc
   140003f88:	mov    edi,eax
   140003f8a:	test   eax,eax
   140003f8c:	js     0x140003fa1
   140003f8e:	mov    rdx,QWORD PTR [rbx]
   140003f91:	mov    rcx,rbx
   140003f94:	mov    QWORD PTR [rsi],rbx
   140003f97:	mov    rax,QWORD PTR [rdx+0x8]
   140003f9b:	call   QWORD PTR [rip+0xe59f]        # 0x140012540
   140003fa1:	mov    rdx,QWORD PTR [rbx]
   140003fa4:	mov    rcx,rbx
   140003fa7:	mov    rax,QWORD PTR [rdx+0x10]
   140003fab:	call   QWORD PTR [rip+0xe58f]        # 0x140012540
   140003fb1:	mov    rbx,QWORD PTR [rsp+0x30]
   140003fb6:	mov    eax,edi
   140003fb8:	mov    rdi,QWORD PTR [rsp+0x48]
   140003fbd:	mov    rbp,QWORD PTR [rsp+0x38]
   140003fc2:	mov    rsi,QWORD PTR [rsp+0x40]
   140003fc7:	add    rsp,0x20
   140003fcb:	pop    r14
   140003fcd:	ret    
   140003fce:	int3   
   140003fcf:	int3   
   140003fd0:	int3   
   140003fd1:	int3   
   140003fd2:	int3   
   140003fd3:	int3   
   140003fd4:	mov    QWORD PTR [rsp+0x10],rbx
   140003fd9:	push   rbp
   140003fda:	push   rsi
   140003fdb:	push   rdi
   140003fdc:	push   r12
   140003fde:	push   r13
   140003fe0:	push   r14
   140003fe2:	push   r15
   140003fe4:	lea    rbp,[rsp-0x3c0]
   140003fec:	sub    rsp,0x4c0
   140003ff3:	mov    rax,QWORD PTR [rip+0x1803e]        # 0x14001c038
   140003ffa:	xor    rax,rsp
   140003ffd:	mov    QWORD PTR [rbp+0x3b0],rax
   140004004:	xor    eax,eax
   140004006:	mov    rbx,r9
   140004009:	mov    QWORD PTR [rsp+0x30],rbx
   14000400e:	mov    r14d,r8d
   140004011:	mov    r15,rcx
   140004014:	mov    edi,eax
   140004016:	lea    r13d,[rax+0x4e]
   14000401a:	sub    r13d,r8d
   14000401d:	or     rsi,0xffffffffffffffff
   140004021:	inc    rsi
   140004024:	cmp    WORD PTR [rcx+rsi*2],ax
   140004028:	jne    0x140004021
   14000402a:	mov    r12d,0x1fe
   140004030:	lea    rcx,[rbp-0x4e]
   140004034:	mov    r8d,r12d
   140004037:	xor    edx,edx
   140004039:	call   0x140011e22
   14000403e:	lea    rax,[rbp-0x50]
   140004042:	mov    DWORD PTR [rbp-0x68],0x200
   140004049:	mov    QWORD PTR [rbp-0x70],rax
   14000404d:	lea    rcx,[rbp+0x1b2]
   140004054:	xor    eax,eax
   140004056:	mov    WORD PTR [rbp-0x64],0x100
   14000405c:	mov    r8d,r12d
   14000405f:	mov    DWORD PTR [rbp-0x60],eax
   140004062:	xor    edx,edx
   140004064:	mov    WORD PTR [rbp-0x50],ax
   140004068:	call   0x140011e22
   14000406d:	xor    r8d,r8d
   140004070:	mov    DWORD PTR [rsp+0x60],0x200
   140004078:	mov    WORD PTR [rsp+0x64],0x100
   14000407f:	lea    r12,[rbp+0x1b0]
   140004086:	mov    QWORD PTR [rsp+0x58],r12
   14000408b:	mov    r9d,r8d
   14000408e:	mov    DWORD PTR [rsp+0x68],r8d
   140004093:	mov    WORD PTR [rbp+0x1b0],r8w
   14000409b:	test   r15,r15
   14000409e:	je     0x1400041c0
   1400040a4:	test   rbx,rbx
   1400040a7:	je     0x1400041c0
   1400040ad:	cmp    r14d,0x4e
   1400040b1:	jae    0x1400041c0
   1400040b7:	mov    ebx,r8d
   1400040ba:	test   r14d,r14d
   1400040bd:	je     0x1400040fe
   1400040bf:	add    r9d,r9d
   1400040c2:	mov    BYTE PTR [rsp+0x20],0x1
   1400040c7:	mov    r8d,0x2
   1400040cd:	lea    rdx,[rip+0xed54]        # 0x140012e28
   1400040d4:	lea    rcx,[rsp+0x38]
   1400040d9:	call   0x14000eb60
   1400040de:	xor    r8d,r8d
   1400040e1:	mov    edi,eax
   1400040e3:	test   eax,eax
   1400040e5:	js     0x1400041c5
   1400040eb:	inc    ebx
   1400040ed:	cmp    ebx,r14d
   1400040f0:	jae    0x1400040f9
   1400040f2:	mov    r9d,DWORD PTR [rsp+0x68]
   1400040f7:	jmp    0x1400040bf
   1400040f9:	mov    r12,QWORD PTR [rsp+0x58]
   1400040fe:	mov    ecx,r8d
   140004101:	test   esi,esi
   140004103:	je     0x1400041c5
   140004109:	mov    r14,QWORD PTR [rsp+0x30]
   14000410e:	lea    ebx,[rcx+r13*1]
   140004112:	cmp    ebx,esi
   140004114:	jbe    0x14000411a
   140004116:	mov    ebx,esi
   140004118:	jmp    0x14000413d
   14000411a:	mov    edx,ebx
   14000411c:	cmp    ebx,ecx
   14000411e:	jbe    0x140004138
   140004120:	lea    r8,[r15+rbx*2]
   140004124:	cmp    WORD PTR [r8],0x20
   140004129:	je     0x140004135
   14000412b:	dec    edx
   14000412d:	sub    r8,0x2
   140004131:	cmp    edx,ecx
   140004133:	ja     0x140004124
   140004135:	xor    r8d,r8d
   140004138:	cmp    edx,ecx
   14000413a:	cmovne ebx,edx
   14000413d:	mov    eax,ecx
   14000413f:	lea    rdx,[r15+rax*2]
   140004143:	test   rdx,rdx
   140004146:	je     0x14000416a
   140004148:	mov    r8d,ebx
   14000414b:	mov    BYTE PTR [rsp+0x20],0x1
   140004150:	sub    r8d,ecx
   140004153:	xor    r9d,r9d
   140004156:	add    r8d,r8d
   140004159:	lea    rcx,[rsp+0x70]
   14000415e:	call   0x14000eb60
   140004163:	mov    edi,eax
   140004165:	xor    r8d,r8d
   140004168:	jmp    0x14000416f
   14000416a:	mov    edi,0x80070057
   14000416f:	test   edi,edi
   140004171:	js     0x1400041c5
   140004173:	mov    r8,r12
   140004176:	lea    rdx,[rip+0xecb3]        # 0x140012e30
   14000417d:	mov    rcx,r14
   140004180:	call   QWORD PTR [rip+0xe35a]        # 0x1400124e0
   140004186:	mov    r8,QWORD PTR [rbp-0x70]
   14000418a:	lea    rdx,[rip+0xeca7]        # 0x140012e38
   140004191:	mov    rcx,r14
   140004194:	call   QWORD PTR [rip+0xe346]        # 0x1400124e0
   14000419a:	mov    eax,ebx
   14000419c:	mov    ecx,ebx
   14000419e:	cmp    WORD PTR [r15+rax*2],0x20
   1400041a4:	jne    0x1400041b0
   1400041a6:	inc    ecx
   1400041a8:	cmp    WORD PTR [r15+rcx*2],0x20
   1400041ae:	je     0x1400041a6
   1400041b0:	mov    r8d,0x0
   1400041b6:	cmp    ebx,esi
   1400041b8:	jb     0x14000410e
   1400041be:	jmp    0x1400041c5
   1400041c0:	mov    edi,0x80070057
   1400041c5:	cmp    BYTE PTR [rsp+0x64],r8b
   1400041ca:	je     0x1400041d9
   1400041cc:	lea    rcx,[rsp+0x38]
   1400041d1:	call   0x14000eb30
   1400041d6:	xor    r8d,r8d
   1400041d9:	cmp    BYTE PTR [rbp-0x64],r8b
   1400041dd:	je     0x1400041e9
   1400041df:	lea    rcx,[rsp+0x70]
   1400041e4:	call   0x14000eb30
   1400041e9:	mov    eax,edi
   1400041eb:	mov    rcx,QWORD PTR [rbp+0x3b0]
   1400041f2:	xor    rcx,rsp
   1400041f5:	call   0x140011800
   1400041fa:	mov    rbx,QWORD PTR [rsp+0x508]
   140004202:	add    rsp,0x4c0
   140004209:	pop    r15
   14000420b:	pop    r14
   14000420d:	pop    r13
   14000420f:	pop    r12
   140004211:	pop    rdi
   140004212:	pop    rsi
   140004213:	pop    rbp
   140004214:	ret    
   140004215:	int3   
   140004216:	int3   
   140004217:	int3   
   140004218:	int3   
   140004219:	int3   
   14000421a:	int3   
   14000421b:	int3   
   14000421c:	mov    rax,rsp
   14000421f:	mov    QWORD PTR [rax+0x8],rbx
   140004223:	mov    QWORD PTR [rax+0x18],rsi
   140004227:	mov    QWORD PTR [rax+0x20],rdi
   14000422b:	push   rbp
   14000422c:	push   r14
   14000422e:	push   r15
   140004230:	lea    rbp,[rax-0xfa8]
   140004237:	mov    eax,0x1090
   14000423c:	call   0x140011e70
   140004241:	sub    rsp,rax
   140004244:	mov    rax,QWORD PTR [rip+0x17ded]        # 0x14001c038
   14000424b:	xor    rax,rsp
   14000424e:	mov    QWORD PTR [rbp+0xf80],rax
   140004255:	xor    r14d,r14d
   140004258:	lea    rcx,[rbp-0x7e]
   14000425c:	mov    rdi,rdx
   14000425f:	mov    QWORD PTR [rsp+0x20],r14
   140004264:	xor    edx,edx
   140004266:	mov    QWORD PTR [rsp+0x38],r14
   14000426b:	mov    r8d,0xffe
   140004271:	mov    QWORD PTR [rsp+0x30],r14
   140004276:	call   0x140011e22
   14000427b:	mov    DWORD PTR [rsp+0x70],0x1000
   140004283:	lea    rax,[rbp-0x80]
   140004287:	mov    QWORD PTR [rsp+0x68],rax
   14000428c:	lea    r15d,[r14+0x1]
   140004290:	mov    WORD PTR [rsp+0x74],0x100
   140004297:	mov    DWORD PTR [rsp+0x78],r14d
   14000429c:	mov    WORD PTR [rbp-0x80],r14w
   1400042a1:	test   rdi,rdi
   1400042a4:	jne    0x1400042b0
   1400042a6:	mov    ebx,0x80070057
   1400042ab:	jmp    0x1400044a7
   1400042b0:	mov    r9d,0x800
   1400042b6:	lea    r8,[rsp+0x48]
   1400042bb:	lea    rdx,[rsp+0x40]
   1400042c0:	mov    ecx,0xfa0
   1400042c5:	call   0x140003dbc
   1400042ca:	mov    ebx,eax
   1400042cc:	test   eax,eax
   1400042ce:	js     0x14000447a
   1400042d4:	mov    ecx,r15d
   1400042d7:	call   0x140011d08
   1400042dc:	mov    r8,QWORD PTR [rsp+0x68]
   1400042e1:	lea    rdx,[rip+0xeb48]        # 0x140012e30
   1400042e8:	mov    rcx,rax
   1400042eb:	call   QWORD PTR [rip+0xe1ef]        # 0x1400124e0
   1400042f1:	mov    rax,QWORD PTR [rdi]
   1400042f4:	lea    rdx,[rsp+0x28]
   1400042f9:	mov    rcx,rdi
   1400042fc:	mov    rax,QWORD PTR [rax+0x48]
   140004300:	call   QWORD PTR [rip+0xe23a]        # 0x140012540
   140004306:	mov    ebx,eax
   140004308:	test   eax,eax
   14000430a:	js     0x14000447a
   140004310:	mov    esi,r14d
   140004313:	cmp    DWORD PTR [rsp+0x28],r14d
   140004318:	jbe    0x14000443d
   14000431e:	mov    rax,QWORD PTR [rdi]
   140004321:	lea    r8,[rsp+0x20]
   140004326:	mov    edx,esi
   140004328:	mov    rcx,rdi
   14000432b:	mov    rax,QWORD PTR [rax+0x50]
   14000432f:	call   QWORD PTR [rip+0xe20b]        # 0x140012540
   140004335:	mov    ebx,eax
   140004337:	test   eax,eax
   140004339:	js     0x14000447a
   14000433f:	mov    rcx,QWORD PTR [rsp+0x20]
   140004344:	lea    rdx,[rsp+0x30]
   140004349:	mov    rax,QWORD PTR [rcx]
   14000434c:	mov    rax,QWORD PTR [rax+0x18]
   140004350:	call   QWORD PTR [rip+0xe1ea]        # 0x140012540
   140004356:	mov    ebx,eax
   140004358:	test   eax,eax
   14000435a:	js     0x14000447a
   140004360:	mov    rcx,QWORD PTR [rsp+0x20]
   140004365:	lea    rdx,[rsp+0x38]
   14000436a:	mov    rax,QWORD PTR [rcx]
   14000436d:	mov    rax,QWORD PTR [rax+0x28]
   140004371:	call   QWORD PTR [rip+0xe1c9]        # 0x140012540
   140004377:	mov    ebx,eax
   140004379:	test   eax,eax
   14000437b:	js     0x14000447a
   140004381:	mov    ecx,r15d
   140004384:	call   0x140011d08
   140004389:	mov    r8,QWORD PTR [rsp+0x30]
   14000438e:	lea    rdx,[rip+0xeab3]        # 0x140012e48
   140004395:	mov    rcx,rax
   140004398:	call   QWORD PTR [rip+0xe142]        # 0x1400124e0
   14000439e:	mov    rax,QWORD PTR [rsp+0x30]
   1400043a3:	or     rcx,0xffffffffffffffff
   1400043a7:	inc    rcx
   1400043aa:	cmp    WORD PTR [rax+rcx*2],r14w
   1400043af:	jne    0x1400043a7
   1400043b1:	mov    eax,0xa
   1400043b6:	sub    eax,ecx
   1400043b8:	test   eax,eax
   1400043ba:	jg     0x1400043dd
   1400043bc:	mov    ecx,r15d
   1400043bf:	call   0x140011d08
   1400043c4:	mov    rcx,rax
   1400043c7:	lea    rdx,[rip+0xebd2]        # 0x140012fa0
   1400043ce:	call   QWORD PTR [rip+0xe10c]        # 0x1400124e0
   1400043d4:	mov    eax,0xc
   1400043d9:	test   eax,eax
   1400043db:	je     0x1400043fc
   1400043dd:	mov    ebx,eax
   1400043df:	mov    ecx,r15d
   1400043e2:	call   0x140011d08
   1400043e7:	mov    rcx,rax
   1400043ea:	lea    rdx,[rip+0xea37]        # 0x140012e28
   1400043f1:	call   QWORD PTR [rip+0xe0e9]        # 0x1400124e0
   1400043f7:	sub    rbx,r15
   1400043fa:	jne    0x1400043df
   1400043fc:	mov    ecx,r15d
   1400043ff:	call   0x140011d08
   140004404:	mov    r8,QWORD PTR [rsp+0x38]
   140004409:	lea    rdx,[rip+0xea28]        # 0x140012e38
   140004410:	mov    rcx,rax
   140004413:	call   QWORD PTR [rip+0xe0c7]        # 0x1400124e0
   140004419:	mov    rcx,QWORD PTR [rsp+0x20]
   14000441e:	mov    rax,QWORD PTR [rcx]
   140004421:	mov    rax,QWORD PTR [rax+0x10]
   140004425:	call   QWORD PTR [rip+0xe115]        # 0x140012540
   14000442b:	add    esi,r15d
   14000442e:	mov    QWORD PTR [rsp+0x20],r14
   140004433:	cmp    esi,DWORD PTR [rsp+0x28]
   140004437:	jb     0x14000431e
   14000443d:	mov    r9d,0x800
   140004443:	lea    r8,[rsp+0x48]
   140004448:	lea    rdx,[rsp+0x40]
   14000444d:	mov    ecx,0xfa1
   140004452:	call   0x140003dbc
   140004457:	mov    ebx,eax
   140004459:	test   eax,eax
   14000445b:	js     0x14000447a
   14000445d:	mov    ecx,r15d
   140004460:	call   0x140011d08
   140004465:	mov    r8,QWORD PTR [rsp+0x68]
   14000446a:	lea    rdx,[rip+0xe9bf]        # 0x140012e30
   140004471:	mov    rcx,rax
   140004474:	call   QWORD PTR [rip+0xe066]        # 0x1400124e0
   14000447a:	mov    rcx,QWORD PTR [rsp+0x20]
   14000447f:	test   rcx,rcx
   140004482:	je     0x140004496
   140004484:	mov    rax,QWORD PTR [rcx]
   140004487:	mov    rax,QWORD PTR [rax+0x10]
   14000448b:	call   QWORD PTR [rip+0xe0af]        # 0x140012540
   140004491:	mov    QWORD PTR [rsp+0x20],r14
   140004496:	cmp    BYTE PTR [rsp+0x74],r14b
   14000449b:	je     0x1400044a7
   14000449d:	lea    rcx,[rsp+0x48]
   1400044a2:	call   0x14000eb30
   1400044a7:	mov    eax,ebx
   1400044a9:	mov    rcx,QWORD PTR [rbp+0xf80]
   1400044b0:	xor    rcx,rsp
   1400044b3:	call   0x140011800
   1400044b8:	lea    r11,[rsp+0x1090]
   1400044c0:	mov    rbx,QWORD PTR [r11+0x20]
   1400044c4:	mov    rsi,QWORD PTR [r11+0x30]
   1400044c8:	mov    rdi,QWORD PTR [r11+0x38]
   1400044cc:	mov    rsp,r11
   1400044cf:	pop    r15
   1400044d1:	pop    r14
   1400044d3:	pop    rbp
   1400044d4:	ret    
   1400044d5:	int3   
   1400044d6:	int3   
   1400044d7:	int3   
   1400044d8:	int3   
   1400044d9:	int3   
   1400044da:	int3   
   1400044db:	int3   
   1400044dc:	mov    QWORD PTR [rsp+0x20],rbx
   1400044e1:	push   rbp
   1400044e2:	push   rsi
   1400044e3:	push   rdi
   1400044e4:	push   r12
   1400044e6:	push   r13
   1400044e8:	push   r14
   1400044ea:	push   r15
   1400044ec:	lea    rbp,[rsp-0xff0]
   1400044f4:	mov    eax,0x10f0
   1400044f9:	call   0x140011e70
   1400044fe:	sub    rsp,rax
   140004501:	mov    rax,QWORD PTR [rip+0x17b30]        # 0x14001c038
   140004508:	xor    rax,rsp
   14000450b:	mov    QWORD PTR [rbp+0xfe0],rax
   140004512:	xor    r12d,r12d
   140004515:	mov    rdi,r8
   140004518:	mov    r15,rdx
   14000451b:	mov    DWORD PTR [rsp+0x30],r12d
   140004520:	mov    r14,rcx
   140004523:	mov    DWORD PTR [rsp+0x58],r12d
   140004528:	xor    edx,edx
   14000452a:	mov    DWORD PTR [rsp+0x5c],r12d
   14000452f:	mov    r8d,0x7fe
   140004535:	mov    QWORD PTR [rsp+0x48],r12
   14000453a:	lea    rcx,[rbp-0x1e]
   14000453e:	mov    QWORD PTR [rsp+0x38],r12
   140004543:	mov    QWORD PTR [rsp+0x50],r12
   140004548:	mov    QWORD PTR [rsp+0x60],r12
   14000454d:	mov    QWORD PTR [rsp+0x40],r12
   140004552:	mov    QWORD PTR [rsp+0x70],r12
   140004557:	mov    QWORD PTR [rsp+0x68],r12
   14000455c:	mov    QWORD PTR [rbp-0x68],r12
   140004560:	mov    QWORD PTR [rbp-0x70],r12
   140004564:	mov    QWORD PTR [rsp+0x78],r12
   140004569:	mov    QWORD PTR [rbp-0x80],r12
   14000456d:	call   0x140011e22
   140004572:	mov    DWORD PTR [rbp-0x38],0x800
   140004579:	lea    rax,[rbp-0x20]
   14000457d:	mov    QWORD PTR [rbp-0x40],rax
   140004581:	lea    r13d,[r12+0x1]
   140004586:	mov    WORD PTR [rbp-0x34],0x100
   14000458c:	mov    DWORD PTR [rbp-0x30],r12d
   140004590:	mov    WORD PTR [rbp-0x20],r12w
   140004595:	test   rdi,rdi
   140004598:	je     0x14000474f
   14000459e:	test   r14,r14
   1400045a1:	je     0x14000474f
   1400045a7:	test   r15,r15
   1400045aa:	je     0x14000474f
   1400045b0:	mov    rax,QWORD PTR [rdi]
   1400045b3:	lea    rdx,[rsp+0x30]
   1400045b8:	mov    rcx,rdi
   1400045bb:	mov    rax,QWORD PTR [rax+0x48]
   1400045bf:	call   QWORD PTR [rip+0xdf7b]        # 0x140012540
   1400045c5:	mov    ebx,eax
   1400045c7:	test   eax,eax
   1400045c9:	js     0x140004754
   1400045cf:	mov    esi,r12d
   1400045d2:	cmp    DWORD PTR [rsp+0x30],r12d
   1400045d7:	jbe    0x140004691
   1400045dd:	mov    rax,QWORD PTR [rdi]
   1400045e0:	lea    r8,[rsp+0x48]
   1400045e5:	mov    edx,esi
   1400045e7:	mov    rcx,rdi
   1400045ea:	mov    rax,QWORD PTR [rax+0x50]
   1400045ee:	call   QWORD PTR [rip+0xdf4c]        # 0x140012540
   1400045f4:	mov    ebx,eax
   1400045f6:	test   eax,eax
   1400045f8:	js     0x140004754
   1400045fe:	mov    rcx,QWORD PTR [rsp+0x48]
   140004603:	lea    rdx,[rsp+0x68]
   140004608:	mov    rax,QWORD PTR [rcx]
   14000460b:	mov    rax,QWORD PTR [rax+0x18]
   14000460f:	call   QWORD PTR [rip+0xdf2b]        # 0x140012540
   140004615:	mov    ebx,eax
   140004617:	test   eax,eax
   140004619:	js     0x140004754
   14000461f:	mov    rcx,QWORD PTR [rsp+0x48]
   140004624:	lea    rdx,[rbp-0x80]
   140004628:	mov    rax,QWORD PTR [rcx]
   14000462b:	mov    rax,QWORD PTR [rax+0x20]
   14000462f:	call   QWORD PTR [rip+0xdf0b]        # 0x140012540
   140004635:	mov    ebx,eax
   140004637:	test   eax,eax
   140004639:	js     0x140004754
   14000463f:	mov    rcx,QWORD PTR [rsp+0x68]
   140004644:	mov    rdx,r14
   140004647:	call   QWORD PTR [rip+0xdeb3]        # 0x140012500
   14000464d:	test   eax,eax
   14000464f:	je     0x140004691
   140004651:	mov    rcx,QWORD PTR [rbp-0x80]
   140004655:	mov    rdx,r14
   140004658:	call   QWORD PTR [rip+0xdea2]        # 0x140012500
   14000465e:	test   eax,eax
   140004660:	je     0x140004691
   140004662:	mov    rcx,QWORD PTR [rsp+0x48]
   140004667:	mov    rax,QWORD PTR [rcx]
   14000466a:	mov    rax,QWORD PTR [rax+0x10]
   14000466e:	call   QWORD PTR [rip+0xdecc]        # 0x140012540
   140004674:	add    esi,r13d
   140004677:	mov    QWORD PTR [rsp+0x48],r12
   14000467c:	mov    QWORD PTR [rsp+0x68],r12
   140004681:	mov    QWORD PTR [rbp-0x80],r12
   140004685:	cmp    esi,DWORD PTR [rsp+0x30]
   140004689:	jb     0x1400045dd
   14000468f:	jmp    0x140004698
   140004691:	cmp    QWORD PTR [rsp+0x48],r12
   140004696:	jne    0x1400046a2
   140004698:	mov    ebx,0x80070057
   14000469d:	jmp    0x140004770
   1400046a2:	mov    rax,QWORD PTR [rdi]
   1400046a5:	lea    r8,[rsp+0x30]
   1400046aa:	mov    rdx,QWORD PTR [rsp+0x68]
   1400046af:	mov    rcx,rdi
   1400046b2:	mov    rax,QWORD PTR [rax+0x58]
   1400046b6:	call   QWORD PTR [rip+0xde84]        # 0x140012540
   1400046bc:	mov    ebx,eax
   1400046be:	test   eax,eax
   1400046c0:	js     0x140004754
   1400046c6:	mov    esi,r12d
   1400046c9:	cmp    DWORD PTR [rsp+0x30],r12d
   1400046ce:	jbe    0x1400047ff
   1400046d4:	mov    rax,QWORD PTR [rdi]
   1400046d7:	lea    r9,[rsp+0x38]
   1400046dc:	mov    rdx,QWORD PTR [rsp+0x68]
   1400046e1:	mov    r8d,esi
   1400046e4:	mov    rcx,rdi
   1400046e7:	mov    rax,QWORD PTR [rax+0x60]
   1400046eb:	call   QWORD PTR [rip+0xde4f]        # 0x140012540
   1400046f1:	mov    ebx,eax
   1400046f3:	test   eax,eax
   1400046f5:	js     0x140004754
   1400046f7:	mov    rcx,QWORD PTR [rsp+0x38]
   1400046fc:	lea    rdx,[rsp+0x70]
   140004701:	mov    rax,QWORD PTR [rcx]
   140004704:	mov    rax,QWORD PTR [rax+0x18]
   140004708:	call   QWORD PTR [rip+0xde32]        # 0x140012540
   14000470e:	mov    ebx,eax
   140004710:	test   eax,eax
   140004712:	js     0x140004754
   140004714:	mov    rcx,QWORD PTR [rsp+0x70]
   140004719:	mov    rdx,r15
   14000471c:	call   QWORD PTR [rip+0xddde]        # 0x140012500
   140004722:	test   eax,eax
   140004724:	je     0x1400047ff
   14000472a:	mov    rcx,QWORD PTR [rsp+0x38]
   14000472f:	mov    rax,QWORD PTR [rcx]
   140004732:	mov    rax,QWORD PTR [rax+0x10]
   140004736:	call   QWORD PTR [rip+0xde04]        # 0x140012540
   14000473c:	add    esi,r13d
   14000473f:	mov    QWORD PTR [rsp+0x38],r12
   140004744:	mov    QWORD PTR [rsp+0x70],r12
   140004749:	cmp    esi,DWORD PTR [rsp+0x30]
   14000474d:	jb     0x1400046d4
   14000474f:	mov    ebx,0x80070057
   140004754:	mov    rcx,QWORD PTR [rsp+0x48]
   140004759:	test   rcx,rcx
   14000475c:	je     0x140004770
   14000475e:	mov    rax,QWORD PTR [rcx]
   140004761:	mov    rax,QWORD PTR [rax+0x10]
   140004765:	call   QWORD PTR [rip+0xddd5]        # 0x140012540
   14000476b:	mov    QWORD PTR [rsp+0x48],r12
   140004770:	mov    rcx,QWORD PTR [rsp+0x38]
   140004775:	test   rcx,rcx
   140004778:	je     0x14000478c
   14000477a:	mov    rax,QWORD PTR [rcx]
   14000477d:	mov    rax,QWORD PTR [rax+0x10]
   140004781:	call   QWORD PTR [rip+0xddb9]        # 0x140012540
   140004787:	mov    QWORD PTR [rsp+0x38],r12
   14000478c:	mov    rcx,QWORD PTR [rsp+0x50]
   140004791:	test   rcx,rcx
   140004794:	je     0x1400047a8
   140004796:	mov    rax,QWORD PTR [rcx]
   140004799:	mov    rax,QWORD PTR [rax+0x10]
   14000479d:	call   QWORD PTR [rip+0xdd9d]        # 0x140012540
   1400047a3:	mov    QWORD PTR [rsp+0x50],r12
   1400047a8:	mov    rcx,QWORD PTR [rsp+0x60]
   1400047ad:	test   rcx,rcx
   1400047b0:	je     0x1400047c4
   1400047b2:	mov    rax,QWORD PTR [rcx]
   1400047b5:	mov    rax,QWORD PTR [rax+0x10]
   1400047b9:	call   QWORD PTR [rip+0xdd81]        # 0x140012540
   1400047bf:	mov    QWORD PTR [rsp+0x60],r12
   1400047c4:	cmp    BYTE PTR [rbp-0x34],r12b
   1400047c8:	je     0x1400047d3
   1400047ca:	lea    rcx,[rbp-0x60]
   1400047ce:	call   0x14000eb30
   1400047d3:	mov    eax,ebx
   1400047d5:	mov    rcx,QWORD PTR [rbp+0xfe0]
   1400047dc:	xor    rcx,rsp
   1400047df:	call   0x140011800
   1400047e4:	mov    rbx,QWORD PTR [rsp+0x1148]
   1400047ec:	add    rsp,0x10f0
   1400047f3:	pop    r15
   1400047f5:	pop    r14
   1400047f7:	pop    r13
   1400047f9:	pop    r12
   1400047fb:	pop    rdi
   1400047fc:	pop    rsi
   1400047fd:	pop    rbp
   1400047fe:	ret    
   1400047ff:	cmp    QWORD PTR [rsp+0x38],r12
   140004804:	je     0x14000474f
   14000480a:	mov    rcx,QWORD PTR [rsp+0x38]
   14000480f:	lea    rdx,[rsp+0x40]
   140004814:	mov    rax,QWORD PTR [rcx]
   140004817:	mov    rax,QWORD PTR [rax+0x20]
   14000481b:	call   QWORD PTR [rip+0xdd1f]        # 0x140012540
   140004821:	mov    ebx,eax
   140004823:	test   eax,eax
   140004825:	js     0x140004754
   14000482b:	mov    rcx,QWORD PTR [rsp+0x38]
   140004830:	lea    rdx,[rbp-0x68]
   140004834:	mov    rax,QWORD PTR [rcx]
   140004837:	mov    rax,QWORD PTR [rax+0x28]
   14000483b:	call   QWORD PTR [rip+0xdcff]        # 0x140012540
   140004841:	mov    ebx,eax
   140004843:	test   eax,eax
   140004845:	js     0x140004754
   14000484b:	mov    ecx,r13d
   14000484e:	call   0x140011d08
   140004853:	mov    rcx,QWORD PTR [rsp+0x40]
   140004858:	mov    r9,rax
   14000485b:	xor    r8d,r8d
   14000485e:	call   0x140003fd4
   140004863:	mov    ebx,eax
   140004865:	test   eax,eax
   140004867:	js     0x140004754
   14000486d:	mov    r9d,0xa00
   140004873:	lea    r8,[rbp-0x60]
   140004877:	lea    rdx,[rbp-0x78]
   14000487b:	mov    ecx,0xfa4
   140004880:	call   0x140003dbc
   140004885:	mov    ebx,eax
   140004887:	test   eax,eax
   140004889:	js     0x140004754
   14000488f:	mov    rax,QWORD PTR [rsp+0x68]
   140004894:	lea    rcx,[rbp+0x7e0]
   14000489b:	mov    r9,QWORD PTR [rsp+0x70]
   1400048a0:	mov    edx,0x400
   1400048a5:	mov    r8,QWORD PTR [rbp-0x40]
   1400048a9:	mov    QWORD PTR [rsp+0x20],rax
   1400048ae:	call   0x140006f9c
   1400048b3:	mov    ebx,eax
   1400048b5:	test   eax,eax
   1400048b7:	js     0x140004754
   1400048bd:	mov    ecx,r13d
   1400048c0:	call   0x140011d08
   1400048c5:	lea    r15,[rip+0xe564]        # 0x140012e30
   1400048cc:	mov    rcx,rax
   1400048cf:	mov    rdx,r15
   1400048d2:	lea    r8,[rbp+0x7e0]
   1400048d9:	call   QWORD PTR [rip+0xdc01]        # 0x1400124e0
   1400048df:	mov    ecx,r13d
   1400048e2:	call   0x140011d08
   1400048e7:	mov    rcx,QWORD PTR [rbp-0x68]
   1400048eb:	mov    r9,rax
   1400048ee:	xor    r8d,r8d
   1400048f1:	call   0x140003fd4
   1400048f6:	mov    ebx,eax
   1400048f8:	test   eax,eax
   1400048fa:	js     0x140004754
   140004900:	mov    r14d,0x800
   140004906:	lea    r8,[rbp-0x60]
   14000490a:	mov    r9d,r14d
   14000490d:	lea    rdx,[rbp-0x78]
   140004911:	mov    ecx,0xfa5
   140004916:	call   0x140003dbc
   14000491b:	mov    ebx,eax
   14000491d:	test   eax,eax
   14000491f:	js     0x140004754
   140004925:	mov    ecx,r13d
   140004928:	call   0x140011d08
   14000492d:	mov    r8,QWORD PTR [rbp-0x40]
   140004931:	mov    rcx,rax
   140004934:	mov    rdx,r15
   140004937:	call   QWORD PTR [rip+0xdba3]        # 0x1400124e0
   14000493d:	mov    rcx,QWORD PTR [rsp+0x38]
   140004942:	lea    rdx,[rsp+0x58]
   140004947:	mov    rax,QWORD PTR [rcx]
   14000494a:	mov    rax,QWORD PTR [rax+0x30]
   14000494e:	call   QWORD PTR [rip+0xdbec]        # 0x140012540
   140004954:	mov    ebx,eax
   140004956:	test   eax,eax
   140004958:	js     0x140004754
   14000495e:	mov    r9d,r14d
   140004961:	lea    r8,[rbp-0x60]
   140004965:	lea    rdx,[rbp-0x78]
   140004969:	mov    ecx,0xc0000fbe
   14000496e:	call   0x140003dbc
   140004973:	mov    ebx,eax
   140004975:	test   eax,eax
   140004977:	js     0x140004754
   14000497d:	mov    esi,r12d
   140004980:	cmp    DWORD PTR [rsp+0x58],r12d
   140004985:	jbe    0x140004acc
   14000498b:	lea    rdi,[rip+0xe60a]        # 0x140012f9c
   140004992:	mov    rcx,QWORD PTR [rsp+0x38]
   140004997:	lea    r8,[rsp+0x50]
   14000499c:	mov    edx,esi
   14000499e:	mov    rax,QWORD PTR [rcx]
   1400049a1:	mov    rax,QWORD PTR [rax+0x38]
   1400049a5:	call   QWORD PTR [rip+0xdb95]        # 0x140012540
   1400049ab:	mov    ebx,eax
   1400049ad:	test   eax,eax
   1400049af:	js     0x140004754
   1400049b5:	mov    rcx,QWORD PTR [rsp+0x50]
   1400049ba:	lea    rdx,[rsp+0x78]
   1400049bf:	mov    rax,QWORD PTR [rcx]
   1400049c2:	mov    rax,QWORD PTR [rax+0x18]
   1400049c6:	call   QWORD PTR [rip+0xdb74]        # 0x140012540
   1400049cc:	mov    ebx,eax
   1400049ce:	test   eax,eax
   1400049d0:	js     0x140004754
   1400049d6:	mov    rcx,QWORD PTR [rsp+0x50]
   1400049db:	lea    rdx,[rsp+0x40]
   1400049e0:	mov    rax,QWORD PTR [rcx]
   1400049e3:	mov    rax,QWORD PTR [rax+0x20]
   1400049e7:	call   QWORD PTR [rip+0xdb53]        # 0x140012540
   1400049ed:	mov    ebx,eax
   1400049ef:	test   eax,eax
   1400049f1:	js     0x140004754
   1400049f7:	mov    rcx,QWORD PTR [rsp+0x50]
   1400049fc:	mov    rax,QWORD PTR [rcx]
   1400049ff:	mov    rax,QWORD PTR [rax+0x28]
   140004a03:	call   QWORD PTR [rip+0xdb37]        # 0x140012540
   140004a09:	mov    rcx,QWORD PTR [rsp+0x78]
   140004a0e:	lea    rdx,[rip+0xe443]        # 0x140012e58
   140004a15:	test   eax,eax
   140004a17:	cmovne rdi,QWORD PTR [rbp-0x40]
   140004a1c:	call   0x140011e2e
   140004a21:	test   eax,eax
   140004a23:	lea    rbx,[rip+0xe1e6]        # 0x140012c10
   140004a2a:	lea    rax,[rip+0xe56b]        # 0x140012f9c
   140004a31:	mov    ecx,r13d
   140004a34:	cmove  rbx,rax
   140004a38:	call   0x140011d08
   140004a3d:	mov    r9,QWORD PTR [rsp+0x78]
   140004a42:	lea    rdx,[rip+0xe427]        # 0x140012e70
   140004a49:	mov    rcx,rax
   140004a4c:	mov    QWORD PTR [rsp+0x20],rdi
   140004a51:	mov    r8,rbx
   140004a54:	call   QWORD PTR [rip+0xda86]        # 0x1400124e0
   140004a5a:	mov    ecx,r13d
   140004a5d:	call   0x140011d08
   140004a62:	mov    rcx,QWORD PTR [rsp+0x40]
   140004a67:	mov    r9,rax
   140004a6a:	mov    r8d,0x4
   140004a70:	call   0x140003fd4
   140004a75:	mov    ebx,eax
   140004a77:	test   eax,eax
   140004a79:	js     0x140004754
   140004a7f:	mov    ecx,r13d
   140004a82:	call   0x140011d08
   140004a87:	mov    rcx,rax
   140004a8a:	lea    rdx,[rip+0xe50f]        # 0x140012fa0
   140004a91:	call   QWORD PTR [rip+0xda49]        # 0x1400124e0
   140004a97:	mov    rcx,QWORD PTR [rsp+0x50]
   140004a9c:	mov    rax,QWORD PTR [rcx]
   140004a9f:	mov    rax,QWORD PTR [rax+0x10]
   140004aa3:	call   QWORD PTR [rip+0xda97]        # 0x140012540
   140004aa9:	add    esi,r13d
   140004aac:	mov    QWORD PTR [rsp+0x50],r12
   140004ab1:	lea    rdi,[rip+0xe4e4]        # 0x140012f9c
   140004ab8:	mov    QWORD PTR [rsp+0x78],r12
   140004abd:	mov    QWORD PTR [rsp+0x40],r12
   140004ac2:	cmp    esi,DWORD PTR [rsp+0x58]
   140004ac6:	jb     0x140004992
   140004acc:	mov    r9d,r14d
   140004acf:	lea    r8,[rbp-0x60]
   140004ad3:	lea    rdx,[rbp-0x78]
   140004ad7:	mov    ecx,0xfa6
   140004adc:	call   0x140003dbc
   140004ae1:	mov    ebx,eax
   140004ae3:	test   eax,eax
   140004ae5:	js     0x140004754
   140004aeb:	mov    ecx,r13d
   140004aee:	call   0x140011d08
   140004af3:	mov    r8,QWORD PTR [rbp-0x40]
   140004af7:	mov    rcx,rax
   140004afa:	mov    rdx,r15
   140004afd:	call   QWORD PTR [rip+0xd9dd]        # 0x1400124e0
   140004b03:	mov    rcx,QWORD PTR [rsp+0x38]
   140004b08:	lea    rdx,[rsp+0x5c]
   140004b0d:	mov    rax,QWORD PTR [rcx]
   140004b10:	mov    rax,QWORD PTR [rax+0x40]
   140004b14:	call   QWORD PTR [rip+0xda26]        # 0x140012540
   140004b1a:	mov    ebx,eax
   140004b1c:	test   eax,eax
   140004b1e:	js     0x140004754
   140004b24:	mov    edi,r12d
   140004b27:	cmp    DWORD PTR [rsp+0x5c],r12d
   140004b2c:	jbe    0x140004754
   140004b32:	mov    rcx,QWORD PTR [rsp+0x38]
   140004b37:	lea    r8,[rsp+0x60]
   140004b3c:	mov    edx,edi
   140004b3e:	mov    rax,QWORD PTR [rcx]
   140004b41:	mov    rax,QWORD PTR [rax+0x48]
   140004b45:	call   QWORD PTR [rip+0xd9f5]        # 0x140012540
   140004b4b:	mov    ebx,eax
   140004b4d:	test   eax,eax
   140004b4f:	js     0x140004754
   140004b55:	mov    rcx,QWORD PTR [rsp+0x60]
   140004b5a:	lea    rdx,[rbp-0x70]
   140004b5e:	mov    rax,QWORD PTR [rcx]
   140004b61:	mov    rax,QWORD PTR [rax+0x18]
   140004b65:	call   QWORD PTR [rip+0xd9d5]        # 0x140012540
   140004b6b:	mov    ebx,eax
   140004b6d:	test   eax,eax
   140004b6f:	js     0x140004754
   140004b75:	mov    rcx,QWORD PTR [rsp+0x60]
   140004b7a:	lea    rdx,[rsp+0x40]
   140004b7f:	mov    rax,QWORD PTR [rcx]
   140004b82:	mov    rax,QWORD PTR [rax+0x20]
   140004b86:	call   QWORD PTR [rip+0xd9b4]        # 0x140012540
   140004b8c:	mov    ebx,eax
   140004b8e:	test   eax,eax
   140004b90:	js     0x140004754
   140004b96:	mov    ecx,r13d
   140004b99:	call   0x140011d08
   140004b9e:	mov    r8,QWORD PTR [rbp-0x70]
   140004ba2:	lea    rdx,[rip+0xe2e7]        # 0x140012e90
   140004ba9:	mov    rcx,rax
   140004bac:	call   QWORD PTR [rip+0xd92e]        # 0x1400124e0
   140004bb2:	mov    ecx,r13d
   140004bb5:	call   0x140011d08
   140004bba:	mov    rcx,QWORD PTR [rsp+0x40]
   140004bbf:	mov    r9,rax
   140004bc2:	mov    r8d,0x4
   140004bc8:	call   0x140003fd4
   140004bcd:	mov    ebx,eax
   140004bcf:	test   eax,eax
   140004bd1:	js     0x140004754
   140004bd7:	mov    ecx,r13d
   140004bda:	call   0x140011d08
   140004bdf:	mov    rcx,rax
   140004be2:	lea    rdx,[rip+0xe3b7]        # 0x140012fa0
   140004be9:	call   QWORD PTR [rip+0xd8f1]        # 0x1400124e0
   140004bef:	mov    rcx,QWORD PTR [rsp+0x60]
   140004bf4:	mov    rax,QWORD PTR [rcx]
   140004bf7:	mov    rax,QWORD PTR [rax+0x10]
   140004bfb:	call   QWORD PTR [rip+0xd93f]        # 0x140012540
   140004c01:	add    edi,r13d
   140004c04:	mov    QWORD PTR [rsp+0x60],r12
   140004c09:	mov    QWORD PTR [rbp-0x70],r12
   140004c0d:	mov    QWORD PTR [rsp+0x40],r12
   140004c12:	cmp    edi,DWORD PTR [rsp+0x5c]
   140004c16:	jb     0x140004b32
   140004c1c:	jmp    0x140004754
   140004c21:	int3   
   140004c22:	int3   
   140004c23:	int3   
   140004c24:	int3   
   140004c25:	int3   
   140004c26:	int3   
   140004c27:	int3   
   140004c28:	mov    QWORD PTR [rsp+0x18],rbx
   140004c2d:	mov    QWORD PTR [rsp+0x20],rsi
   140004c32:	push   rbp
   140004c33:	push   rdi
   140004c34:	push   r12
   140004c36:	push   r14
   140004c38:	push   r15
   140004c3a:	lea    rbp,[rsp-0xfc0]
   140004c42:	mov    eax,0x10c0
   140004c47:	call   0x140011e70
   140004c4c:	sub    rsp,rax
   140004c4f:	mov    rax,QWORD PTR [rip+0x173e2]        # 0x14001c038
   140004c56:	xor    rax,rsp
   140004c59:	mov    QWORD PTR [rbp+0xfb0],rax
   140004c60:	xor    r15d,r15d
   140004c63:	mov    r14,rdx
   140004c66:	mov    rsi,rcx
   140004c69:	mov    QWORD PTR [rsp+0x30],r15
   140004c6e:	xor    edx,edx
   140004c70:	mov    QWORD PTR [rsp+0x38],r15
   140004c75:	lea    rcx,[rbp-0x4e]
   140004c79:	mov    QWORD PTR [rsp+0x50],r15
   140004c7e:	mov    r8d,0x7fe
   140004c84:	mov    QWORD PTR [rsp+0x60],r15
   140004c89:	mov    QWORD PTR [rsp+0x40],r15
   140004c8e:	mov    QWORD PTR [rsp+0x58],r15
   140004c93:	call   0x140011e22
   140004c98:	mov    DWORD PTR [rbp-0x68],0x800
   140004c9f:	lea    rax,[rbp-0x50]
   140004ca3:	mov    QWORD PTR [rbp-0x70],rax
   140004ca7:	lea    r12d,[r15+0x1]
   140004cab:	mov    WORD PTR [rbp-0x64],0x100
   140004cb1:	mov    DWORD PTR [rbp-0x60],r15d
   140004cb5:	mov    WORD PTR [rbp-0x50],r15w
   140004cba:	test   r14,r14
   140004cbd:	je     0x140004fe6
   140004cc3:	test   rsi,rsi
   140004cc6:	je     0x140004fe6
   140004ccc:	mov    rax,QWORD PTR [r14]
   140004ccf:	lea    rdx,[rsp+0x48]
   140004cd4:	mov    rcx,r14
   140004cd7:	mov    rax,QWORD PTR [rax+0x48]
   140004cdb:	call   QWORD PTR [rip+0xd85f]        # 0x140012540
   140004ce1:	mov    ebx,eax
   140004ce3:	test   eax,eax
   140004ce5:	js     0x140004feb
   140004ceb:	mov    edi,r15d
   140004cee:	cmp    DWORD PTR [rsp+0x48],r15d
   140004cf3:	jbe    0x140004db0
   140004cf9:	mov    rax,QWORD PTR [r14]
   140004cfc:	lea    r8,[rsp+0x30]
   140004d01:	mov    edx,edi
   140004d03:	mov    rcx,r14
   140004d06:	mov    rax,QWORD PTR [rax+0x50]
   140004d0a:	call   QWORD PTR [rip+0xd830]        # 0x140012540
   140004d10:	mov    ebx,eax
   140004d12:	test   eax,eax
   140004d14:	js     0x140004feb
   140004d1a:	mov    rcx,QWORD PTR [rsp+0x30]
   140004d1f:	lea    rdx,[rsp+0x40]
   140004d24:	mov    rax,QWORD PTR [rcx]
   140004d27:	mov    rax,QWORD PTR [rax+0x18]
   140004d2b:	call   QWORD PTR [rip+0xd80f]        # 0x140012540
   140004d31:	mov    ebx,eax
   140004d33:	test   eax,eax
   140004d35:	js     0x140004feb
   140004d3b:	mov    rcx,QWORD PTR [rsp+0x30]
   140004d40:	lea    rdx,[rsp+0x58]
   140004d45:	mov    rax,QWORD PTR [rcx]
   140004d48:	mov    rax,QWORD PTR [rax+0x20]
   140004d4c:	call   QWORD PTR [rip+0xd7ee]        # 0x140012540
   140004d52:	mov    ebx,eax
   140004d54:	test   eax,eax
   140004d56:	js     0x140004feb
   140004d5c:	mov    rcx,QWORD PTR [rsp+0x40]
   140004d61:	mov    rdx,rsi
   140004d64:	call   QWORD PTR [rip+0xd796]        # 0x140012500
   140004d6a:	test   eax,eax
   140004d6c:	je     0x140004db0
   140004d6e:	mov    rcx,QWORD PTR [rsp+0x58]
   140004d73:	mov    rdx,rsi
   140004d76:	call   QWORD PTR [rip+0xd784]        # 0x140012500
   140004d7c:	test   eax,eax
   140004d7e:	je     0x140004db0
   140004d80:	mov    rcx,QWORD PTR [rsp+0x30]
   140004d85:	mov    rax,QWORD PTR [rcx]
   140004d88:	mov    rax,QWORD PTR [rax+0x10]
   140004d8c:	call   QWORD PTR [rip+0xd7ae]        # 0x140012540
   140004d92:	add    edi,r12d
   140004d95:	mov    QWORD PTR [rsp+0x30],r15
   140004d9a:	mov    QWORD PTR [rsp+0x40],r15
   140004d9f:	mov    QWORD PTR [rsp+0x58],r15
   140004da4:	cmp    edi,DWORD PTR [rsp+0x48]
   140004da8:	jb     0x140004cf9
   140004dae:	jmp    0x140004dba
   140004db0:	mov    rcx,QWORD PTR [rsp+0x30]
   140004db5:	test   rcx,rcx
   140004db8:	jne    0x140004dc4
   140004dba:	mov    ebx,0x80070057
   140004dbf:	jmp    0x140005007
   140004dc4:	mov    rax,QWORD PTR [rcx]
   140004dc7:	lea    rdx,[rsp+0x50]
   140004dcc:	mov    rax,QWORD PTR [rax+0x28]
   140004dd0:	call   QWORD PTR [rip+0xd76a]        # 0x140012540
   140004dd6:	mov    ebx,eax
   140004dd8:	test   eax,eax
   140004dda:	js     0x140004feb
   140004de0:	mov    r9d,0xa00
   140004de6:	lea    r8,[rsp+0x70]
   140004deb:	lea    rdx,[rsp+0x68]
   140004df0:	mov    ecx,0xfa2
   140004df5:	call   0x140003dbc
   140004dfa:	mov    ebx,eax
   140004dfc:	test   eax,eax
   140004dfe:	js     0x140004feb
   140004e04:	mov    rax,QWORD PTR [rsp+0x40]
   140004e09:	lea    rcx,[rbp+0x7b0]
   140004e10:	mov    r9,QWORD PTR [rsp+0x50]
   140004e15:	mov    edx,0x400
   140004e1a:	mov    r8,QWORD PTR [rbp-0x70]
   140004e1e:	mov    QWORD PTR [rsp+0x20],rax
   140004e23:	call   0x140006f9c
   140004e28:	mov    ebx,eax
   140004e2a:	test   eax,eax
   140004e2c:	js     0x140004feb
   140004e32:	mov    ecx,r12d
   140004e35:	call   0x140011d08
   140004e3a:	mov    rcx,rax
   140004e3d:	lea    r8,[rbp+0x7b0]
   140004e44:	lea    rdx,[rip+0xdfe5]        # 0x140012e30
   140004e4b:	call   QWORD PTR [rip+0xd68f]        # 0x1400124e0
   140004e51:	mov    rax,QWORD PTR [r14]
   140004e54:	lea    r8,[rsp+0x4c]
   140004e59:	mov    rdx,QWORD PTR [rsp+0x40]
   140004e5e:	mov    rcx,r14
   140004e61:	mov    rax,QWORD PTR [rax+0x58]
   140004e65:	call   QWORD PTR [rip+0xd6d5]        # 0x140012540
   140004e6b:	mov    ebx,eax
   140004e6d:	test   eax,eax
   140004e6f:	js     0x140004feb
   140004e75:	mov    edi,r15d
   140004e78:	cmp    DWORD PTR [rsp+0x4c],r15d
   140004e7d:	jbe    0x140004fa8
   140004e83:	mov    rax,QWORD PTR [r14]
   140004e86:	lea    r9,[rsp+0x38]
   140004e8b:	mov    rdx,QWORD PTR [rsp+0x40]
   140004e90:	mov    r8d,edi
   140004e93:	mov    rcx,r14
   140004e96:	mov    rax,QWORD PTR [rax+0x60]
   140004e9a:	call   QWORD PTR [rip+0xd6a0]        # 0x140012540
   140004ea0:	mov    ebx,eax
   140004ea2:	test   eax,eax
   140004ea4:	js     0x140004feb
   140004eaa:	mov    rcx,QWORD PTR [rsp+0x38]
   140004eaf:	lea    rdx,[rsp+0x60]
   140004eb4:	mov    rax,QWORD PTR [rcx]
   140004eb7:	mov    rax,QWORD PTR [rax+0x18]
   140004ebb:	call   QWORD PTR [rip+0xd67f]        # 0x140012540
   140004ec1:	mov    ebx,eax
   140004ec3:	test   eax,eax
   140004ec5:	js     0x140004feb
   140004ecb:	mov    rcx,QWORD PTR [rsp+0x38]
   140004ed0:	lea    rdx,[rsp+0x50]
   140004ed5:	mov    rax,QWORD PTR [rcx]
   140004ed8:	mov    rax,QWORD PTR [rax+0x20]
   140004edc:	call   QWORD PTR [rip+0xd65e]        # 0x140012540
   140004ee2:	mov    ebx,eax
   140004ee4:	test   eax,eax
   140004ee6:	js     0x140004feb
   140004eec:	mov    ecx,r12d
   140004eef:	call   0x140011d08
   140004ef4:	mov    r8,QWORD PTR [rsp+0x60]
   140004ef9:	lea    rdx,[rip+0xdf48]        # 0x140012e48
   140004f00:	mov    rcx,rax
   140004f03:	call   QWORD PTR [rip+0xd5d7]        # 0x1400124e0
   140004f09:	mov    rax,QWORD PTR [rsp+0x60]
   140004f0e:	or     rcx,0xffffffffffffffff
   140004f12:	inc    rcx
   140004f15:	cmp    WORD PTR [rax+rcx*2],r15w
   140004f1a:	jne    0x140004f12
   140004f1c:	mov    eax,0xa
   140004f21:	sub    eax,ecx
   140004f23:	test   eax,eax
   140004f25:	jg     0x140004f48
   140004f27:	mov    ecx,r12d
   140004f2a:	call   0x140011d08
   140004f2f:	mov    rcx,rax
   140004f32:	lea    rdx,[rip+0xe067]        # 0x140012fa0
   140004f39:	call   QWORD PTR [rip+0xd5a1]        # 0x1400124e0
   140004f3f:	mov    eax,0xc
   140004f44:	test   eax,eax
   140004f46:	je     0x140004f67
   140004f48:	mov    ebx,eax
   140004f4a:	mov    ecx,r12d
   140004f4d:	call   0x140011d08
   140004f52:	mov    rcx,rax
   140004f55:	lea    rdx,[rip+0xdecc]        # 0x140012e28
   140004f5c:	call   QWORD PTR [rip+0xd57e]        # 0x1400124e0
   140004f62:	sub    rbx,r12
   140004f65:	jne    0x140004f4a
   140004f67:	mov    ecx,r12d
   140004f6a:	call   0x140011d08
   140004f6f:	mov    r8,QWORD PTR [rsp+0x50]
   140004f74:	lea    rdx,[rip+0xdebd]        # 0x140012e38
   140004f7b:	mov    rcx,rax
   140004f7e:	call   QWORD PTR [rip+0xd55c]        # 0x1400124e0
   140004f84:	mov    rcx,QWORD PTR [rsp+0x38]
   140004f89:	mov    rax,QWORD PTR [rcx]
   140004f8c:	mov    rax,QWORD PTR [rax+0x10]
   140004f90:	call   QWORD PTR [rip+0xd5aa]        # 0x140012540
   140004f96:	add    edi,r12d
   140004f99:	mov    QWORD PTR [rsp+0x38],r15
   140004f9e:	cmp    edi,DWORD PTR [rsp+0x4c]
   140004fa2:	jb     0x140004e83
   140004fa8:	mov    r9d,0x800
   140004fae:	lea    r8,[rsp+0x70]
   140004fb3:	lea    rdx,[rsp+0x68]
   140004fb8:	mov    ecx,0xfa3
   140004fbd:	call   0x140003dbc
   140004fc2:	mov    ebx,eax
   140004fc4:	test   eax,eax
   140004fc6:	js     0x140004feb
   140004fc8:	mov    ecx,r12d
   140004fcb:	call   0x140011d08
   140004fd0:	mov    r8,QWORD PTR [rbp-0x70]
   140004fd4:	lea    rdx,[rip+0xde55]        # 0x140012e30
   140004fdb:	mov    rcx,rax
   140004fde:	call   QWORD PTR [rip+0xd4fc]        # 0x1400124e0
   140004fe4:	jmp    0x140004feb
   140004fe6:	mov    ebx,0x80070057
   140004feb:	mov    rcx,QWORD PTR [rsp+0x30]
   140004ff0:	test   rcx,rcx
   140004ff3:	je     0x140005007
   140004ff5:	mov    rax,QWORD PTR [rcx]
   140004ff8:	mov    rax,QWORD PTR [rax+0x10]
   140004ffc:	call   QWORD PTR [rip+0xd53e]        # 0x140012540
   140005002:	mov    QWORD PTR [rsp+0x30],r15
   140005007:	mov    rcx,QWORD PTR [rsp+0x38]
   14000500c:	test   rcx,rcx
   14000500f:	je     0x140005023
   140005011:	mov    rax,QWORD PTR [rcx]
   140005014:	mov    rax,QWORD PTR [rax+0x10]
   140005018:	call   QWORD PTR [rip+0xd522]        # 0x140012540
   14000501e:	mov    QWORD PTR [rsp+0x38],r15
   140005023:	cmp    BYTE PTR [rbp-0x64],r15b
   140005027:	je     0x140005033
   140005029:	lea    rcx,[rsp+0x70]
   14000502e:	call   0x14000eb30
   140005033:	mov    eax,ebx
   140005035:	mov    rcx,QWORD PTR [rbp+0xfb0]
   14000503c:	xor    rcx,rsp
   14000503f:	call   0x140011800
   140005044:	lea    r11,[rsp+0x10c0]
   14000504c:	mov    rbx,QWORD PTR [r11+0x40]
   140005050:	mov    rsi,QWORD PTR [r11+0x48]
   140005054:	mov    rsp,r11
   140005057:	pop    r15
   140005059:	pop    r14
   14000505b:	pop    r12
   14000505d:	pop    rdi
   14000505e:	pop    rbp
   14000505f:	ret    
   140005060:	int3   
   140005061:	int3   
   140005062:	int3   
   140005063:	int3   
   140005064:	int3   
   140005065:	int3   
   140005066:	int3   
   140005067:	int3   
   140005068:	mov    QWORD PTR [rsp+0x10],rbx
   14000506d:	mov    QWORD PTR [rsp+0x18],r8
   140005072:	push   rbp
   140005073:	push   rsi
   140005074:	push   rdi
   140005075:	push   r12
   140005077:	push   r13
   140005079:	push   r14
   14000507b:	push   r15
   14000507d:	mov    rbp,rsp
   140005080:	sub    rsp,0x60
   140005084:	xor    r15d,r15d
   140005087:	mov    r12,r9
   14000508a:	mov    QWORD PTR [rbp-0x28],r15
   14000508e:	mov    rax,r8
   140005091:	mov    QWORD PTR [rbp-0x20],r15
   140005095:	mov    rsi,rdx
   140005098:	mov    QWORD PTR [rbp-0x8],r15
   14000509c:	mov    rdi,rcx
   14000509f:	mov    QWORD PTR [rbp-0x18],r15
   1400050a3:	mov    QWORD PTR [rbp-0x10],r15
   1400050a7:	mov    DWORD PTR [rbp+0x40],r15d
   1400050ab:	mov    DWORD PTR [rbp-0x30],r15d
   1400050af:	test   rcx,rcx
   1400050b2:	je     0x14000528a
   1400050b8:	test   rdx,rdx
   1400050bb:	je     0x14000528a
   1400050c1:	test   rax,rax
   1400050c4:	je     0x14000528a
   1400050ca:	test   r9,r9
   1400050cd:	je     0x14000528a
   1400050d3:	mov    r14,QWORD PTR [rbp+0x60]
   1400050d7:	test   r14,r14
   1400050da:	je     0x14000528a
   1400050e0:	mov    r13,QWORD PTR [rbp+0x68]
   1400050e4:	test   r13,r13
   1400050e7:	je     0x14000528a
   1400050ed:	mov    rax,QWORD PTR [rcx]
   1400050f0:	lea    rdx,[rbp+0x40]
   1400050f4:	mov    DWORD PTR [r9],r15d
   1400050f7:	mov    DWORD PTR [r14],r15d
   1400050fa:	mov    rax,QWORD PTR [rax+0x48]
   1400050fe:	call   QWORD PTR [rip+0xd43c]        # 0x140012540
   140005104:	mov    ebx,eax
   140005106:	test   eax,eax
   140005108:	js     0x14000528f
   14000510e:	cmp    DWORD PTR [rbp+0x40],r15d
   140005112:	jbe    0x1400051c1
   140005118:	mov    rax,QWORD PTR [rdi]
   14000511b:	lea    r8,[rbp-0x28]
   14000511f:	mov    edx,r15d
   140005122:	mov    rcx,rdi
   140005125:	mov    rax,QWORD PTR [rax+0x50]
   140005129:	call   QWORD PTR [rip+0xd411]        # 0x140012540
   14000512f:	mov    ebx,eax
   140005131:	test   eax,eax
   140005133:	js     0x140005273
   140005139:	mov    rcx,QWORD PTR [rbp-0x28]
   14000513d:	lea    rdx,[rbp-0x18]
   140005141:	mov    rax,QWORD PTR [rcx]
   140005144:	mov    rax,QWORD PTR [rax+0x18]
   140005148:	call   QWORD PTR [rip+0xd3f2]        # 0x140012540
   14000514e:	mov    ebx,eax
   140005150:	test   eax,eax
   140005152:	js     0x140005273
   140005158:	mov    rcx,QWORD PTR [rbp-0x18]
   14000515c:	mov    rdx,rsi
   14000515f:	call   QWORD PTR [rip+0xd39b]        # 0x140012500
   140005165:	test   eax,eax
   140005167:	je     0x1400051c1
   140005169:	mov    rcx,QWORD PTR [rbp-0x28]
   14000516d:	lea    rdx,[rbp-0x10]
   140005171:	mov    rax,QWORD PTR [rcx]
   140005174:	mov    rax,QWORD PTR [rax+0x20]
   140005178:	call   QWORD PTR [rip+0xd3c2]        # 0x140012540
   14000517e:	mov    ebx,eax
   140005180:	test   eax,eax
   140005182:	js     0x140005273
   140005188:	mov    rcx,QWORD PTR [rbp-0x10]
   14000518c:	mov    rdx,rsi
   14000518f:	call   QWORD PTR [rip+0xd36b]        # 0x140012500
   140005195:	test   eax,eax
   140005197:	je     0x1400051c1
   140005199:	mov    rcx,QWORD PTR [rbp-0x28]
   14000519d:	mov    rax,QWORD PTR [rcx]
   1400051a0:	mov    rax,QWORD PTR [rax+0x10]
   1400051a4:	call   QWORD PTR [rip+0xd396]        # 0x140012540
   1400051aa:	and    QWORD PTR [rbp-0x28],0x0
   1400051af:	inc    r15d
   1400051b2:	cmp    r15d,DWORD PTR [rbp+0x40]
   1400051b6:	jb     0x140005118
   1400051bc:	jmp    0x1400052a9
   1400051c1:	xor    r15d,r15d
   1400051c4:	cmp    QWORD PTR [rbp-0x28],r15
   1400051c8:	je     0x1400052a9
   1400051ce:	mov    rax,QWORD PTR [rdi]
   1400051d1:	lea    r8,[rbp-0x30]
   1400051d5:	mov    rdx,QWORD PTR [rbp-0x18]
   1400051d9:	mov    rcx,rdi
   1400051dc:	mov    DWORD PTR [r12],0x1
   1400051e4:	mov    QWORD PTR [r13+0x0],rdx
   1400051e8:	mov    rax,QWORD PTR [rax+0x58]
   1400051ec:	call   QWORD PTR [rip+0xd34e]        # 0x140012540
   1400051f2:	mov    ebx,eax
   1400051f4:	test   eax,eax
   1400051f6:	js     0x14000528f
   1400051fc:	mov    esi,r15d
   1400051ff:	cmp    DWORD PTR [rbp-0x30],r15d
   140005203:	jbe    0x14000527b
   140005205:	mov    r15,QWORD PTR [rbp+0x50]
   140005209:	mov    rax,QWORD PTR [rdi]
   14000520c:	lea    r9,[rbp-0x20]
   140005210:	mov    rdx,QWORD PTR [rbp-0x18]
   140005214:	mov    r8d,esi
   140005217:	mov    rcx,rdi
   14000521a:	mov    rax,QWORD PTR [rax+0x60]
   14000521e:	call   QWORD PTR [rip+0xd31c]        # 0x140012540
   140005224:	mov    ebx,eax
   140005226:	test   eax,eax
   140005228:	js     0x140005273
   14000522a:	mov    rcx,QWORD PTR [rbp-0x20]
   14000522e:	lea    rdx,[rbp-0x8]
   140005232:	mov    rax,QWORD PTR [rcx]
   140005235:	mov    rax,QWORD PTR [rax+0x18]
   140005239:	call   QWORD PTR [rip+0xd301]        # 0x140012540
   14000523f:	mov    ebx,eax
   140005241:	test   eax,eax
   140005243:	js     0x140005273
   140005245:	mov    rcx,QWORD PTR [rbp-0x8]
   140005249:	mov    rdx,r15
   14000524c:	call   QWORD PTR [rip+0xd2ae]        # 0x140012500
   140005252:	test   eax,eax
   140005254:	je     0x140005278
   140005256:	mov    rcx,QWORD PTR [rbp-0x20]
   14000525a:	mov    rax,QWORD PTR [rcx]
   14000525d:	mov    rax,QWORD PTR [rax+0x10]
   140005261:	call   QWORD PTR [rip+0xd2d9]        # 0x140012540
   140005267:	and    QWORD PTR [rbp-0x20],0x0
   14000526c:	inc    esi
   14000526e:	cmp    esi,DWORD PTR [rbp-0x30]
   140005271:	jb     0x140005209
   140005273:	xor    r15d,r15d
   140005276:	jmp    0x14000528f
   140005278:	xor    r15d,r15d
   14000527b:	cmp    QWORD PTR [rbp-0x20],r15
   14000527f:	je     0x14000528f
   140005281:	mov    DWORD PTR [r14],0x1
   140005288:	jmp    0x14000528f
   14000528a:	mov    ebx,0x80070057
   14000528f:	mov    rcx,QWORD PTR [rbp-0x28]
   140005293:	test   rcx,rcx
   140005296:	je     0x1400052a9
   140005298:	mov    rax,QWORD PTR [rcx]
   14000529b:	mov    rax,QWORD PTR [rax+0x10]
   14000529f:	call   QWORD PTR [rip+0xd29b]        # 0x140012540
   1400052a5:	mov    QWORD PTR [rbp-0x28],r15
   1400052a9:	mov    rcx,QWORD PTR [rbp-0x20]
   1400052ad:	test   rcx,rcx
   1400052b0:	je     0x1400052bf
   1400052b2:	mov    rax,QWORD PTR [rcx]
   1400052b5:	mov    rax,QWORD PTR [rax+0x10]
   1400052b9:	call   QWORD PTR [rip+0xd281]        # 0x140012540
   1400052bf:	mov    eax,ebx
   1400052c1:	mov    rbx,QWORD PTR [rsp+0xa8]
   1400052c9:	add    rsp,0x60
   1400052cd:	pop    r15
   1400052cf:	pop    r14
   1400052d1:	pop    r13
   1400052d3:	pop    r12
   1400052d5:	pop    rdi
   1400052d6:	pop    rsi
   1400052d7:	pop    rbp
   1400052d8:	ret    
   1400052d9:	int3   
   1400052da:	int3   
   1400052db:	int3   
   1400052dc:	int3   
   1400052dd:	int3   
   1400052de:	int3   
   1400052df:	int3   
   1400052e0:	mov    QWORD PTR [rsp+0x18],rbx
   1400052e5:	push   rbp
   1400052e6:	push   rsi
   1400052e7:	push   rdi
   1400052e8:	push   r12
   1400052ea:	push   r13
   1400052ec:	push   r14
   1400052ee:	push   r15
   1400052f0:	lea    rbp,[rsp-0xe70]
   1400052f8:	sub    rsp,0xf70
   1400052ff:	mov    rax,QWORD PTR [rip+0x16d32]        # 0x14001c038
   140005306:	xor    rax,rsp
   140005309:	mov    QWORD PTR [rbp+0xe60],rax
   140005310:	xor    edi,edi
   140005312:	mov    QWORD PTR [rbp+0x8],rdx
   140005316:	mov    ebx,ecx
   140005318:	mov    DWORD PTR [rbp-0xc],edi
   14000531b:	xor    edx,edx
   14000531d:	mov    QWORD PTR [rsp+0x50],rdi
   140005322:	lea    rcx,[rbp+0x1c2]
   140005329:	mov    QWORD PTR [rsp+0x70],rdi
   14000532e:	lea    r8d,[rdi+0x7e]
   140005332:	mov    QWORD PTR [rsp+0x60],rdi
   140005337:	mov    r15d,edi
   14000533a:	mov    QWORD PTR [rbp-0x60],rdi
   14000533e:	mov    r14d,edi
   140005341:	mov    QWORD PTR [rbp-0x58],rdi
   140005345:	mov    r12d,edi
   140005348:	mov    DWORD PTR [rbp-0x70],edi
   14000534b:	mov    r13d,edi
   14000534e:	mov    DWORD PTR [rbp-0x6c],edi
   140005351:	mov    DWORD PTR [rsp+0x78],edi
   140005355:	mov    DWORD PTR [rbp-0x80],edi
   140005358:	mov    QWORD PTR [rsp+0x58],rdi
   14000535d:	mov    DWORD PTR [rbp-0x68],edi
   140005360:	mov    DWORD PTR [rbp-0x10],edi
   140005363:	mov    DWORD PTR [rsp+0x7c],edi
   140005367:	call   0x140011e22
   14000536c:	mov    esi,0x1fe
   140005371:	mov    WORD PTR [rbp+0x1c0],di
   140005378:	mov    r8d,esi
   14000537b:	mov    QWORD PTR [rbp+0x18],rdi
   14000537f:	xor    edx,edx
   140005381:	lea    rcx,[rbp+0x262]
   140005388:	call   0x140011e22
   14000538d:	lea    rax,[rbp+0x260]
   140005394:	mov    WORD PTR [rbp+0x84],0x100
   14000539d:	mov    QWORD PTR [rbp+0x78],rax
   1400053a1:	lea    edi,[rsi+0x2]
   1400053a4:	xor    eax,eax
   1400053a6:	mov    DWORD PTR [rbp+0x80],edi
   1400053ac:	mov    r8d,esi
   1400053af:	mov    DWORD PTR [rbp+0x88],eax
   1400053b5:	xor    edx,edx
   1400053b7:	mov    WORD PTR [rbp+0x260],ax
   1400053be:	lea    rcx,[rbp+0x462]
   1400053c5:	call   0x140011e22
   1400053ca:	xor    esi,esi
   1400053cc:	mov    DWORD PTR [rbp+0x48],edi
   1400053cf:	lea    rax,[rbp+0x460]
   1400053d6:	mov    WORD PTR [rbp+0x4c],0x100
   1400053dc:	xor    edx,edx
   1400053de:	mov    QWORD PTR [rbp+0x40],rax
   1400053e2:	mov    r8d,0x7fe
   1400053e8:	mov    DWORD PTR [rbp-0x64],0x1
   1400053ef:	lea    rcx,[rbp+0x662]
   1400053f6:	mov    DWORD PTR [rbp+0x50],esi
   1400053f9:	mov    edi,esi
   1400053fb:	mov    WORD PTR [rbp+0x460],si
   140005402:	mov    QWORD PTR [rbp+0x10],rsi
   140005406:	mov    QWORD PTR [rbp-0x78],rsi
   14000540a:	call   0x140011e22
   14000540f:	lea    rax,[rbp+0x660]
   140005416:	mov    WORD PTR [rbp+0x660],si
   14000541d:	lea    rcx,[rip+0xcc04]        # 0x140012028
   140005424:	mov    QWORD PTR [rbp-0x28],rax
   140005428:	lea    eax,[rsi+0x1]
   14000542b:	mov    QWORD PTR [rbp-0x8],rsi
   14000542f:	mov    QWORD PTR [rbp-0x50],rsi
   140005433:	xorps  xmm0,xmm0
   140005436:	mov    QWORD PTR [rbp+0xb0],rsi
   14000543d:	mov    QWORD PTR [rbp+0xb8],rsi
   140005444:	mov    QWORD PTR [rbp+0x0],rsi
   140005448:	mov    QWORD PTR [rbp+0x90],rcx
   14000544f:	mov    ecx,eax
   140005451:	mov    DWORD PTR [rbp-0x18],esi
   140005454:	lea    rsi,[rip+0xda45]        # 0x140012ea0
   14000545b:	mov    rdx,rsi
   14000545e:	mov    DWORD PTR [rbp-0x20],0x800
   140005465:	mov    WORD PTR [rbp-0x1c],0x100
   14000546b:	mov    DWORD PTR [rbp+0x98],eax
   140005471:	movdqu XMMWORD PTR [rbp+0xa0],xmm0
   140005479:	call   QWORD PTR [rip+0xd059]        # 0x1400124d8
   14000547f:	mov    rdx,rsi
   140005482:	lea    ecx,[r13+0x3]
   140005486:	call   QWORD PTR [rip+0xd04c]        # 0x1400124d8
   14000548c:	mov    rdx,rsi
   14000548f:	lea    ecx,[r13+0x4]
   140005493:	call   QWORD PTR [rip+0xd03f]        # 0x1400124d8
   140005499:	mov    rdx,rsi
   14000549c:	lea    ecx,[r13+0x5]
   1400054a0:	call   QWORD PTR [rip+0xd032]        # 0x1400124d8
   1400054a6:	call   QWORD PTR [rip+0xce6c]        # 0x140012318
   1400054ac:	mov    r9d,eax
   1400054af:	lea    r8,[rip+0xd9fa]        # 0x140012eb0
   1400054b6:	lea    edx,[r13+0xc]
   1400054ba:	lea    rcx,[rbp+0x240]
   1400054c1:	call   QWORD PTR [rip+0xd009]        # 0x1400124d0
   1400054c7:	lea    rdx,[rbp+0x240]
   1400054ce:	lea    ecx,[r13+0x2]
   1400054d2:	call   QWORD PTR [rip+0xd000]        # 0x1400124d8
   1400054d8:	xor    ecx,ecx
   1400054da:	call   QWORD PTR [rip+0xce40]        # 0x140012320
   1400054e0:	xor    r9d,r9d
   1400054e3:	lea    edx,[r13+0x1]
   1400054e7:	xor    r8d,r8d
   1400054ea:	xor    ecx,ecx
   1400054ec:	call   QWORD PTR [rip+0xce36]        # 0x140012328
   1400054f2:	lea    rcx,[rip+0xd9bf]        # 0x140012eb8
   1400054f9:	call   QWORD PTR [rip+0xce31]        # 0x140012330
   1400054ff:	mov    QWORD PTR [rip+0x171b2],rax        # 0x14001c6b8
   140005506:	test   rax,rax
   140005509:	jne    0x14000552d
   14000550b:	call   QWORD PTR [rip+0xcde7]        # 0x1400122f8
   140005511:	movzx  r15d,ax
   140005515:	xor    r8d,r8d
   140005518:	or     r15d,0x80070000
   14000551f:	test   eax,eax
   140005521:	cmovle r15d,eax
   140005525:	mov    esi,r15d
   140005528:	jmp    0x140006851
   14000552d:	xor    edx,edx
   14000552f:	xor    ecx,ecx
   140005531:	call   QWORD PTR [rip+0xcfe9]        # 0x140012520
   140005537:	mov    esi,eax
   140005539:	test   eax,eax
   14000553b:	jns    0x140005583
   14000553d:	mov    ecx,0xc0000fa9
   140005542:	lea    rdx,[rsp+0x68]
   140005547:	mov    r9d,0x800
   14000554d:	lea    r8,[rbp-0x48]
   140005551:	call   0x140003dbc
   140005556:	mov    r15d,eax
   140005559:	test   eax,eax
   14000555b:	js     0x140006856
   140005561:	mov    ecx,0x1
   140005566:	call   0x140011d08
   14000556b:	mov    rdx,QWORD PTR [rbp-0x28]
   14000556f:	mov    rcx,rax
   140005572:	mov    r8d,esi
   140005575:	call   QWORD PTR [rip+0xcf65]        # 0x1400124e0
   14000557b:	xor    r8d,r8d
   14000557e:	jmp    0x140006851
   140005583:	xor    edx,edx
   140005585:	mov    DWORD PTR [rbp-0xc],0x1
   14000558c:	lea    r8,[rip+0x1712d]        # 0x14001c6c0
   140005593:	lea    ecx,[rdx+0x2]
   140005596:	call   QWORD PTR [rip+0xcd9c]        # 0x140012338
   14000559c:	test   eax,eax
   14000559e:	jne    0x1400055bb
   1400055a0:	call   QWORD PTR [rip+0xcd52]        # 0x1400122f8
   1400055a6:	movzx  esi,ax
   1400055a9:	mov    ecx,0xc0000faa
   1400055ae:	or     esi,0x80070000
   1400055b4:	test   eax,eax
   1400055b6:	cmovle esi,eax
   1400055b9:	jmp    0x140005542
   1400055bb:	lea    rdx,[rsp+0x58]
   1400055c0:	lea    rcx,[rsp+0x50]
   1400055c5:	call   QWORD PTR [rip+0xcdb5]        # 0x140012380
   1400055cb:	mov    esi,eax
   1400055cd:	test   eax,eax
   1400055cf:	jns    0x140005673
   1400055d5:	mov    rcx,QWORD PTR [rsp+0x58]
   1400055da:	test   rcx,rcx
   1400055dd:	je     0x140005621
   1400055df:	mov    rax,QWORD PTR [rcx]
   1400055e2:	lea    rdx,[rbp-0x8]
   1400055e6:	mov    rax,QWORD PTR [rax+0x20]
   1400055ea:	call   QWORD PTR [rip+0xcf50]        # 0x140012540
   1400055f0:	mov    rdx,QWORD PTR [rbp-0x8]
   1400055f4:	test   rdx,rdx
   1400055f7:	je     0x14000562c
   1400055f9:	or     rbx,0xffffffffffffffff
   1400055fd:	inc    rbx
   140005600:	cmp    WORD PTR [rdx+rbx*2],di
   140005604:	jne    0x1400055fd
   140005606:	mov    eax,0x1
   14000560b:	lea    r8d,[rbx+rbx*1]
   14000560f:	xor    r9d,r9d
   140005612:	mov    BYTE PTR [rsp+0x20],al
   140005616:	lea    rcx,[rbp+0x58]
   14000561a:	call   0x14000eb60
   14000561f:	jmp    0x14000562c
   140005621:	lea    rdx,[rbp+0x58]
   140005625:	mov    ecx,eax
   140005627:	call   0x140003ea4
   14000562c:	mov    r9d,0x800
   140005632:	lea    r8,[rbp-0x48]
   140005636:	lea    rdx,[rsp+0x68]
   14000563b:	mov    ecx,0xc0000fab
   140005640:	call   0x140003dbc
   140005645:	mov    r15d,eax
   140005648:	test   eax,eax
   14000564a:	js     0x140006856
   140005650:	mov    ecx,0x1
   140005655:	call   0x140011d08
   14000565a:	mov    r8,QWORD PTR [rbp+0x78]
   14000565e:	mov    rdx,QWORD PTR [rbp-0x28]
   140005662:	mov    r9d,esi
   140005665:	mov    rcx,rax
   140005668:	call   QWORD PTR [rip+0xce72]        # 0x1400124e0
   14000566e:	jmp    0x14000557b
   140005673:	mov    ecx,0x278
   140005678:	call   0x140011478
   14000567d:	xor    r8d,r8d
   140005680:	mov    r14,rax
   140005683:	test   rax,rax
   140005686:	je     0x140005773
   14000568c:	mov    QWORD PTR [r14+0x8],r8
   140005690:	lea    ecx,[r8+0x20]
   140005694:	mov    QWORD PTR [r14+0x10],r8
   140005698:	lea    rax,[rip+0xc981]        # 0x140012020
   14000569f:	mov    QWORD PTR [r14],rax
   1400056a2:	lea    rax,[r14+0x118]
   1400056a9:	mov    QWORD PTR [r14+0x18],r8
   1400056ad:	mov    QWORD PTR [r14+0x20],r8
   1400056b1:	mov    QWORD PTR [r14+0x28],r8
   1400056b5:	mov    QWORD PTR [r14+0x30],r8
   1400056b9:	mov    QWORD PTR [r14+0x38],r8
   1400056bd:	mov    DWORD PTR [r14+0x40],r8d
   1400056c1:	mov    QWORD PTR [r14+0x110],r8
   1400056c8:	mov    QWORD PTR [rax],r8
   1400056cb:	mov    QWORD PTR [rax+0x20],rax
   1400056cf:	mov    DWORD PTR [rax+0x28],ecx
   1400056d2:	mov    WORD PTR [rax+0x2c],0x100
   1400056d8:	mov    DWORD PTR [rax+0x30],r8d
   1400056dc:	lea    rax,[r14+0x150]
   1400056e3:	mov    QWORD PTR [rax],r8
   1400056e6:	mov    QWORD PTR [rax+0x20],rax
   1400056ea:	mov    DWORD PTR [rax+0x28],ecx
   1400056ed:	mov    WORD PTR [rax+0x2c],0x100
   1400056f3:	mov    DWORD PTR [rax+0x30],r8d
   1400056f7:	lea    rax,[r14+0x188]
   1400056fe:	mov    QWORD PTR [rax],r8
   140005701:	mov    QWORD PTR [rax+0x20],rax
   140005705:	mov    DWORD PTR [rax+0x28],ecx
   140005708:	mov    WORD PTR [rax+0x2c],0x100
   14000570e:	mov    DWORD PTR [rax+0x30],r8d
   140005712:	lea    rax,[r14+0x1c0]
   140005719:	mov    QWORD PTR [rax],r8
   14000571c:	mov    QWORD PTR [rax+0x20],rax
   140005720:	mov    DWORD PTR [rax+0x28],ecx
   140005723:	mov    WORD PTR [rax+0x2c],0x100
   140005729:	mov    DWORD PTR [rax+0x30],r8d
   14000572d:	lea    rax,[r14+0x1f8]
   140005734:	mov    QWORD PTR [rax],r8
   140005737:	mov    QWORD PTR [rax+0x20],rax
   14000573b:	mov    DWORD PTR [rax+0x28],ecx
   14000573e:	mov    WORD PTR [rax+0x2c],0x100
   140005744:	mov    DWORD PTR [rax+0x30],r8d
   140005748:	lea    rax,[r14+0x230]
   14000574f:	mov    QWORD PTR [rax],r8
   140005752:	mov    QWORD PTR [rax+0x20],rax
   140005756:	mov    DWORD PTR [rax+0x28],ecx
   140005759:	mov    WORD PTR [rax+0x2c],0x100
   14000575f:	mov    DWORD PTR [rax+0x30],r8d
   140005763:	mov    QWORD PTR [r14+0x268],r8
   14000576a:	mov    DWORD PTR [r14+0x270],r8d
   140005771:	jmp    0x140005776
   140005773:	mov    r14,r8
   140005776:	test   r14,r14
   140005779:	jne    0x140005785
   14000577b:	mov    esi,0x80070008
   140005780:	jmp    0x140005808
   140005785:	call   0x14000b254
   14000578a:	xor    ecx,ecx
   14000578c:	mov    esi,edi
   14000578e:	test   eax,eax
   140005790:	lea    eax,[rcx+0x1]
   140005793:	cmovns esi,eax
   140005796:	mov    DWORD PTR [rbp-0x68],esi
   140005799:	cmp    ebx,eax
   14000579b:	jg     0x1400059b5
   1400057a1:	mov    rdx,QWORD PTR [rsp+0x50]
   1400057a6:	call   0x14000421c
   1400057ab:	mov    esi,0x80070057
   1400057b0:	xor    r8d,r8d
   1400057b3:	mov    ebx,0x1
   1400057b8:	test   r14,r14
   1400057bb:	je     0x1400057d1
   1400057bd:	mov    rax,QWORD PTR [r14]
   1400057c0:	mov    edx,ebx
   1400057c2:	mov    rcx,r14
   1400057c5:	mov    rax,QWORD PTR [rax]
   1400057c8:	call   QWORD PTR [rip+0xcd72]        # 0x140012540
   1400057ce:	xor    r8d,r8d
   1400057d1:	cmp    DWORD PTR [rbp-0x68],r8d
   1400057d5:	je     0x140005808
   1400057d7:	mov    rcx,QWORD PTR [rip+0x16eea]        # 0x14001c6c8
   1400057de:	test   rcx,rcx
   1400057e1:	je     0x1400057f3
   1400057e3:	call   QWORD PTR [rip+0xcacf]        # 0x1400122b8
   1400057e9:	xor    r8d,r8d
   1400057ec:	mov    QWORD PTR [rip+0x16ed5],r8        # 0x14001c6c8
   1400057f3:	mov    rax,QWORD PTR [rip+0x16efe]        # 0x14001c6f8
   1400057fa:	mov    QWORD PTR [rip+0x16eff],rax        # 0x14001c700
   140005801:	mov    QWORD PTR [rip+0x16f00],rax        # 0x14001c708
   140005808:	mov    rcx,QWORD PTR [rsp+0x58]
   14000580d:	test   rcx,rcx
   140005810:	je     0x140005827
   140005812:	mov    rax,QWORD PTR [rcx]
   140005815:	mov    rax,QWORD PTR [rax+0x10]
   140005819:	call   QWORD PTR [rip+0xcd21]        # 0x140012540
   14000581f:	xor    r8d,r8d
   140005822:	mov    QWORD PTR [rsp+0x58],r8
   140005827:	mov    rcx,QWORD PTR [rbp-0x60]
   14000582b:	test   rcx,rcx
   14000582e:	je     0x140005844
   140005830:	mov    rax,QWORD PTR [rcx]
   140005833:	mov    rax,QWORD PTR [rax+0x10]
   140005837:	call   QWORD PTR [rip+0xcd03]        # 0x140012540
   14000583d:	xor    r8d,r8d
   140005840:	mov    QWORD PTR [rbp-0x60],r8
   140005844:	mov    rcx,QWORD PTR [rbp-0x58]
   140005848:	test   rcx,rcx
   14000584b:	je     0x140005861
   14000584d:	mov    rax,QWORD PTR [rcx]
   140005850:	mov    rax,QWORD PTR [rax+0x10]
   140005854:	call   QWORD PTR [rip+0xcce6]        # 0x140012540
   14000585a:	xor    r8d,r8d
   14000585d:	mov    QWORD PTR [rbp-0x58],r8
   140005861:	mov    rcx,QWORD PTR [rbp-0x50]
   140005865:	test   rcx,rcx
   140005868:	je     0x14000587e
   14000586a:	mov    rax,QWORD PTR [rcx]
   14000586d:	mov    rax,QWORD PTR [rax+0x10]
   140005871:	call   QWORD PTR [rip+0xccc9]        # 0x140012540
   140005877:	xor    r8d,r8d
   14000587a:	mov    QWORD PTR [rbp-0x50],r8
   14000587e:	mov    rcx,QWORD PTR [rsp+0x50]
   140005883:	test   rcx,rcx
   140005886:	je     0x14000589d
   140005888:	mov    rax,QWORD PTR [rcx]
   14000588b:	mov    rax,QWORD PTR [rax+0x10]
   14000588f:	call   QWORD PTR [rip+0xccab]        # 0x140012540
   140005895:	xor    r8d,r8d
   140005898:	mov    QWORD PTR [rsp+0x50],r8
   14000589d:	mov    rcx,QWORD PTR [rsp+0x60]
   1400058a2:	test   rcx,rcx
   1400058a5:	je     0x1400058bc
   1400058a7:	mov    rax,QWORD PTR [rcx]
   1400058aa:	mov    rax,QWORD PTR [rax+0x10]
   1400058ae:	call   QWORD PTR [rip+0xcc8c]        # 0x140012540
   1400058b4:	xor    r8d,r8d
   1400058b7:	mov    QWORD PTR [rsp+0x60],r8
   1400058bc:	test   r13,r13
   1400058bf:	je     0x1400058d5
   1400058c1:	mov    rax,QWORD PTR [r13+0x0]
   1400058c5:	mov    rcx,r13
   1400058c8:	mov    rax,QWORD PTR [rax+0x10]
   1400058cc:	call   QWORD PTR [rip+0xcc6e]        # 0x140012540
   1400058d2:	xor    r8d,r8d
   1400058d5:	mov    rcx,QWORD PTR [rbp-0x78]
   1400058d9:	test   rcx,rcx
   1400058dc:	je     0x1400058ee
   1400058de:	mov    rax,QWORD PTR [rcx]
   1400058e1:	mov    rax,QWORD PTR [rax+0x10]
   1400058e5:	call   QWORD PTR [rip+0xcc55]        # 0x140012540
   1400058eb:	xor    r8d,r8d
   1400058ee:	cmp    DWORD PTR [rbp-0xc],r8d
   1400058f2:	je     0x1400058fd
   1400058f4:	call   QWORD PTR [rip+0xcc1e]        # 0x140012518
   1400058fa:	xor    r8d,r8d
   1400058fd:	test   esi,esi
   1400058ff:	js     0x140005911
   140005901:	cmp    DWORD PTR [rbp-0x64],r8d
   140005905:	mov    eax,0x1
   14000590a:	cmovne esi,eax
   14000590d:	test   esi,esi
   14000590f:	jns    0x140005922
   140005911:	mov    eax,esi
   140005913:	and    eax,0x1fff0000
   140005918:	cmp    eax,0x70000
   14000591d:	jne    0x140005922
   14000591f:	movzx  esi,si
   140005922:	mov    rcx,QWORD PTR [rbp+0xb0]
   140005929:	lea    rax,[rip+0xc6f8]        # 0x140012028
   140005930:	mov    QWORD PTR [rbp+0x90],rax
   140005937:	test   rcx,rcx
   14000593a:	je     0x140005953
   14000593c:	mov    rax,QWORD PTR [rcx]
   14000593f:	mov    rax,QWORD PTR [rax+0x10]
   140005943:	call   QWORD PTR [rip+0xcbf7]        # 0x140012540
   140005949:	xor    r8d,r8d
   14000594c:	mov    QWORD PTR [rbp+0xb0],r8
   140005953:	cmp    BYTE PTR [rbp-0x1c],r8b
   140005957:	je     0x140005965
   140005959:	lea    rcx,[rbp-0x48]
   14000595d:	call   0x14000eb30
   140005962:	xor    r8d,r8d
   140005965:	cmp    BYTE PTR [rbp+0x4c],r8b
   140005969:	je     0x140005977
   14000596b:	lea    rcx,[rbp+0x20]
   14000596f:	call   0x14000eb30
   140005974:	xor    r8d,r8d
   140005977:	cmp    BYTE PTR [rbp+0x84],r8b
   14000597e:	je     0x140005989
   140005980:	lea    rcx,[rbp+0x58]
   140005984:	call   0x14000eb30
   140005989:	mov    eax,esi
   14000598b:	mov    rcx,QWORD PTR [rbp+0xe60]
   140005992:	xor    rcx,rsp
   140005995:	call   0x140011800
   14000599a:	mov    rbx,QWORD PTR [rsp+0xfc0]
   1400059a2:	add    rsp,0xf70
   1400059a9:	pop    r15
   1400059ab:	pop    r14
   1400059ad:	pop    r13
   1400059af:	pop    r12
   1400059b1:	pop    rdi
   1400059b2:	pop    rsi
   1400059b3:	pop    rbp
   1400059b4:	ret    
   1400059b5:	test   esi,esi
   1400059b7:	je     0x1400059c3
   1400059b9:	call   0x140011d08
   1400059be:	mov    r9,rax
   1400059c1:	jmp    0x1400059c6
   1400059c3:	mov    r9,rcx
   1400059c6:	mov    r8,QWORD PTR [rbp+0x8]
   1400059ca:	lea    rax,[rsp+0x58]
   1400059cf:	mov    QWORD PTR [rsp+0x28],rax
   1400059d4:	mov    edx,ebx
   1400059d6:	mov    rax,QWORD PTR [rsp+0x50]
   1400059db:	mov    rcx,r14
   1400059de:	mov    QWORD PTR [rsp+0x20],rax
   1400059e3:	call   0x14000701c
   1400059e8:	xor    ebx,ebx
   1400059ea:	test   esi,esi
   1400059ec:	jne    0x1400059f2
   1400059ee:	mov    QWORD PTR [r14+0x24],rbx
   1400059f2:	test   eax,eax
   1400059f4:	jns    0x140005aa5
   1400059fa:	mov    rcx,QWORD PTR [rsp+0x58]
   1400059ff:	test   rcx,rcx
   140005a02:	je     0x140005a60
   140005a04:	mov    rax,QWORD PTR [rcx]
   140005a07:	mov    rax,QWORD PTR [rax+0x18]
   140005a0b:	call   QWORD PTR [rip+0xcb2f]        # 0x140012540
   140005a11:	mov    rcx,QWORD PTR [rsp+0x58]
   140005a16:	lea    rdx,[rbp-0x8]
   140005a1a:	mov    esi,eax
   140005a1c:	mov    rax,QWORD PTR [rcx]
   140005a1f:	mov    rax,QWORD PTR [rax+0x20]
   140005a23:	call   QWORD PTR [rip+0xcb17]        # 0x140012540
   140005a29:	mov    r9d,0x800
   140005a2f:	lea    r8,[rbp-0x48]
   140005a33:	lea    rdx,[rsp+0x68]
   140005a38:	mov    ecx,0xc0000fb8
   140005a3d:	call   0x140003dbc
   140005a42:	mov    r15d,eax
   140005a45:	test   eax,eax
   140005a47:	js     0x140006856
   140005a4d:	mov    ecx,0x1
   140005a52:	call   0x140011d08
   140005a57:	mov    r8,QWORD PTR [rbp-0x8]
   140005a5b:	jmp    0x14000565e
   140005a60:	mov    r9d,0x800
   140005a66:	lea    r8,[rbp-0x48]
   140005a6a:	lea    rdx,[rsp+0x68]
   140005a6f:	mov    ecx,0xc0000fa8
   140005a74:	mov    esi,0x80070057
   140005a79:	call   0x140003dbc
   140005a7e:	mov    r15d,eax
   140005a81:	test   eax,eax
   140005a83:	js     0x140006856
   140005a89:	mov    ecx,0x1
   140005a8e:	call   0x140011d08
   140005a93:	mov    rdx,QWORD PTR [rbp-0x28]
   140005a97:	mov    rcx,rax
   140005a9a:	call   QWORD PTR [rip+0xca40]        # 0x1400124e0
   140005aa0:	jmp    0x14000557b
   140005aa5:	cmp    DWORD PTR [r14+0x3c],ebx
   140005aa9:	jne    0x140005afe
   140005aab:	mov    rax,QWORD PTR [r14+0x1e0]
   140005ab2:	cmp    WORD PTR [rax],bx
   140005ab5:	jne    0x140005afe
   140005ab7:	mov    r9d,0x800
   140005abd:	lea    r8,[rbp-0x48]
   140005ac1:	lea    rdx,[rsp+0x68]
   140005ac6:	mov    ecx,0xc0000fac
   140005acb:	mov    esi,0x80070057
   140005ad0:	call   0x140003dbc
   140005ad5:	mov    r15d,eax
   140005ad8:	test   eax,eax
   140005ada:	js     0x140006856
   140005ae0:	mov    ecx,0x1
   140005ae5:	call   0x140011d08
   140005aea:	mov    rcx,QWORD PTR [rbp-0x28]
   140005aee:	mov    r9,rax
   140005af1:	xor    r8d,r8d
   140005af4:	call   0x140003fd4
   140005af9:	jmp    0x14000557b
   140005afe:	mov    r8,QWORD PTR [r14+0x1a8]
   140005b05:	lea    rax,[rbp+0x18]
   140005b09:	mov    rdx,QWORD PTR [r14+0x1e0]
   140005b10:	lea    r9,[rbp-0x80]
   140005b14:	mov    rcx,QWORD PTR [rsp+0x50]
   140005b19:	mov    QWORD PTR [rsp+0x28],rax
   140005b1e:	lea    rax,[rsp+0x78]
   140005b23:	mov    QWORD PTR [rsp+0x20],rax
   140005b28:	call   0x140005068
   140005b2d:	xor    r8d,r8d
   140005b30:	mov    esi,eax
   140005b32:	test   eax,eax
   140005b34:	js     0x1400057b3
   140005b3a:	cmp    DWORD PTR [rbp-0x80],r8d
   140005b3e:	jne    0x140005ba2
   140005b40:	cmp    DWORD PTR [r14+0x3c],r8d
   140005b44:	je     0x140005b53
   140005b46:	mov    rax,QWORD PTR [r14+0x1e0]
   140005b4d:	cmp    WORD PTR [rax],r8w
   140005b51:	je     0x140005ba2
   140005b53:	mov    r9d,0xa00
   140005b59:	lea    r8,[rbp-0x48]
   140005b5d:	lea    rdx,[rsp+0x68]
   140005b62:	mov    ecx,0xc0000fad
   140005b67:	mov    esi,0x80070057
   140005b6c:	call   0x140003dbc
   140005b71:	mov    r15d,eax
   140005b74:	test   eax,eax
   140005b76:	js     0x140006856
   140005b7c:	mov    rbx,QWORD PTR [r14+0x1e0]
   140005b83:	mov    ecx,0x1
   140005b88:	call   0x140011d08
   140005b8d:	mov    rdx,QWORD PTR [rbp-0x28]
   140005b91:	mov    rcx,rax
   140005b94:	mov    r8,rbx
   140005b97:	call   QWORD PTR [rip+0xc943]        # 0x1400124e0
   140005b9d:	jmp    0x14000557b
   140005ba2:	cmp    DWORD PTR [rsp+0x78],r8d
   140005ba7:	jne    0x140005c1a
   140005ba9:	cmp    DWORD PTR [r14+0x3c],r8d
   140005bad:	je     0x140005bbc
   140005baf:	mov    rax,QWORD PTR [r14+0x1a8]
   140005bb6:	cmp    WORD PTR [rax],r8w
   140005bba:	je     0x140005c1a
   140005bbc:	mov    r9d,0xa00
   140005bc2:	lea    r8,[rbp-0x48]
   140005bc6:	lea    rdx,[rsp+0x68]
   140005bcb:	mov    ecx,0xc0000fae
   140005bd0:	mov    esi,0x80070057
   140005bd5:	call   0x140003dbc
   140005bda:	mov    r15d,eax
   140005bdd:	test   eax,eax
   140005bdf:	js     0x140006856
   140005be5:	mov    rdi,QWORD PTR [r14+0x1e0]
   140005bec:	mov    ecx,0x1
   140005bf1:	mov    rbx,QWORD PTR [r14+0x1a8]
   140005bf8:	call   0x140011d08
   140005bfd:	mov    rdx,QWORD PTR [rbp-0x28]
   140005c01:	mov    rcx,rax
   140005c04:	mov    r9,rdi
   140005c07:	mov    QWORD PTR [rsp+0x20],rdi
   140005c0c:	mov    r8,rbx
   140005c0f:	call   QWORD PTR [rip+0xc8cb]        # 0x1400124e0
   140005c15:	jmp    0x14000557b
   140005c1a:	cmp    DWORD PTR [r14+0x3c],r8d
   140005c1e:	je     0x140005c83
   140005c20:	mov    rcx,QWORD PTR [r14+0x1e0]
   140005c27:	cmp    WORD PTR [rcx],r8w
   140005c2b:	je     0x140005c77
   140005c2d:	mov    rdx,QWORD PTR [r14+0x1a8]
   140005c34:	cmp    WORD PTR [rdx],r8w
   140005c38:	je     0x140005c4b
   140005c3a:	mov    r8,QWORD PTR [rsp+0x50]
   140005c3f:	call   0x1400044dc
   140005c44:	mov    esi,eax
   140005c46:	jmp    0x1400057b0
   140005c4b:	cmp    WORD PTR [rcx],r8w
   140005c4f:	je     0x140005c77
   140005c51:	mov    rdx,QWORD PTR [rsp+0x50]
   140005c56:	call   0x140004c28
   140005c5b:	xor    r8d,r8d
   140005c5e:	mov    esi,eax
   140005c60:	test   eax,eax
   140005c62:	jns    0x1400057b3
   140005c68:	mov    rdx,QWORD PTR [rsp+0x50]
   140005c6d:	call   0x14000421c
   140005c72:	jmp    0x1400057b0
   140005c77:	mov    rdx,QWORD PTR [rsp+0x50]
   140005c7c:	call   0x14000421c
   140005c81:	jmp    0x140005c44
   140005c83:	mov    ecx,0x38
   140005c88:	call   0x140011478
   140005c8d:	xor    r8d,r8d
   140005c90:	mov    r12,rax
   140005c93:	test   rax,rax
   140005c96:	je     0x140005cc3
   140005c98:	lea    rax,[rip+0xc379]        # 0x140012018
   140005c9f:	mov    QWORD PTR [r12+0x8],r8
   140005ca4:	mov    QWORD PTR [r12],rax
   140005ca8:	mov    QWORD PTR [r12+0x10],r8
   140005cad:	mov    QWORD PTR [r12+0x18],r8
   140005cb2:	mov    QWORD PTR [r12+0x20],r8
   140005cb7:	mov    QWORD PTR [r12+0x28],r8
   140005cbc:	mov    DWORD PTR [r12+0x30],r8d
   140005cc1:	jmp    0x140005cc6
   140005cc3:	mov    r12,r8
   140005cc6:	test   r12,r12
   140005cc9:	jne    0x140005cd5
   140005ccb:	mov    esi,0x80070008
   140005cd0:	jmp    0x1400057b3
   140005cd5:	mov    ebx,DWORD PTR [r14+0x24]
   140005cd9:	mov    ecx,0x1
   140005cde:	call   0x140011d08
   140005ce3:	mov    r9,QWORD PTR [rsp+0x50]
   140005ce8:	mov    rdx,rax
   140005ceb:	mov    r8d,ebx
   140005cee:	mov    rcx,r12
   140005cf1:	call   0x1400085d4
   140005cf6:	xor    r8d,r8d
   140005cf9:	mov    esi,eax
   140005cfb:	test   eax,eax
   140005cfd:	js     0x1400069a0
   140005d03:	cmp    DWORD PTR [r12+0x28],r8d
   140005d08:	jne    0x140005d14
   140005d0a:	mov    esi,0x80004005
   140005d0f:	jmp    0x1400069a0
   140005d14:	cmp    DWORD PTR [r12+0x2c],r8d
   140005d19:	je     0x140005d89
   140005d1b:	mov    rbx,QWORD PTR [r12+0x8]
   140005d20:	test   rbx,rbx
   140005d23:	je     0x140005d0a
   140005d25:	mov    rcx,QWORD PTR [rbx+0x10]
   140005d29:	test   rcx,rcx
   140005d2c:	jne    0x140005d35
   140005d2e:	mov    esi,0x80004005
   140005d33:	jmp    0x140005d8c
   140005d35:	cmp    DWORD PTR [rbx+0x18],r8d
   140005d39:	jl     0x140005d2e
   140005d3b:	mov    DWORD PTR [rbx+0x20],r8d
   140005d3f:	xor    edx,edx
   140005d41:	mov    rax,QWORD PTR [rcx]
   140005d44:	mov    rax,QWORD PTR [rax+0xd0]
   140005d4b:	call   QWORD PTR [rip+0xc7ef]        # 0x140012540
   140005d51:	xor    r8d,r8d
   140005d54:	mov    esi,eax
   140005d56:	test   eax,eax
   140005d58:	js     0x140005d7e
   140005d5a:	lea    eax,[r8+0x1]
   140005d5e:	xor    r9d,r9d
   140005d61:	lea    rdx,[rip+0xd6d0]        # 0x140013438
   140005d68:	mov    DWORD PTR [rbx+0x1c],eax
   140005d6b:	mov    rcx,rbx
   140005d6e:	call   0x14000b420
   140005d73:	xor    r8d,r8d
   140005d76:	mov    esi,eax
   140005d78:	test   eax,eax
   140005d7a:	cmovns esi,r8d
   140005d7e:	mov    DWORD PTR [rbx+0x18],esi
   140005d81:	test   esi,esi
   140005d83:	js     0x1400069a0
   140005d89:	mov    esi,r8d
   140005d8c:	test   esi,esi
   140005d8e:	js     0x1400069a0
   140005d94:	mov    rcx,QWORD PTR [rsp+0x50]
   140005d99:	lea    rdx,[rbp-0x50]
   140005d9d:	mov    ebx,0x1
   140005da2:	mov    DWORD PTR [rbp-0x10],ebx
   140005da5:	mov    rax,QWORD PTR [rcx]
   140005da8:	mov    rax,QWORD PTR [rax+0x20]
   140005dac:	call   QWORD PTR [rip+0xc78e]        # 0x140012540
   140005db2:	xor    r8d,r8d
   140005db5:	mov    esi,eax
   140005db7:	test   eax,eax
   140005db9:	js     0x14000692f
   140005dbf:	cmp    QWORD PTR [rbp-0x50],r8
   140005dc3:	je     0x14000692a
   140005dc9:	cmp    DWORD PTR [rbp+0xb8],r8d
   140005dd0:	je     0x140005ddc
   140005dd2:	mov    esi,0x800704df
   140005dd7:	jmp    0x14000692f
   140005ddc:	mov    rcx,QWORD PTR [rbp-0x50]
   140005de0:	mov    QWORD PTR [rbp+0xb0],rcx
   140005de7:	mov    rax,QWORD PTR [rcx]
   140005dea:	mov    rax,QWORD PTR [rax+0x8]
   140005dee:	call   QWORD PTR [rip+0xc74c]        # 0x140012540
   140005df4:	mov    rcx,QWORD PTR [rsp+0x50]
   140005df9:	lea    r8,[rbp+0x90]
   140005e00:	mov    QWORD PTR [rbp+0xa0],r14
   140005e07:	lea    rdx,[rbp+0xd0]
   140005e0e:	mov    QWORD PTR [rbp+0xa8],r12
   140005e15:	mov    DWORD PTR [rbp+0xb8],ebx
   140005e1b:	mov    rax,QWORD PTR [r14+0x170]
   140005e22:	mov    QWORD PTR [rbp+0xd0],rax
   140005e29:	mov    rax,QWORD PTR [r14+0x138]
   140005e30:	mov    QWORD PTR [rbp+0xd8],rax
   140005e37:	mov    rax,QWORD PTR [r14+0x250]
   140005e3e:	mov    QWORD PTR [rbp+0xe0],rax
   140005e45:	mov    eax,DWORD PTR [r14+0x38]
   140005e49:	mov    DWORD PTR [rbp+0xe8],eax
   140005e4f:	mov    rax,QWORD PTR [rcx]
   140005e52:	mov    rax,QWORD PTR [rax+0x40]
   140005e56:	call   QWORD PTR [rip+0xc6e4]        # 0x140012540
   140005e5c:	xor    edx,edx
   140005e5e:	mov    esi,eax
   140005e60:	test   eax,eax
   140005e62:	jns    0x140005f5b
   140005e68:	mov    r9d,0x800
   140005e6e:	lea    r8,[rbp-0x48]
   140005e72:	lea    rdx,[rsp+0x68]
   140005e77:	mov    ecx,0xc0000faf
   140005e7c:	call   0x140003dbc
   140005e81:	mov    r15d,eax
   140005e84:	test   eax,eax
   140005e86:	js     0x140006856
   140005e8c:	mov    rcx,QWORD PTR [rsp+0x50]
   140005e91:	lea    rdx,[rsp+0x58]
   140005e96:	mov    rax,QWORD PTR [rcx]
   140005e99:	mov    rax,QWORD PTR [rax+0x38]
   140005e9d:	call   QWORD PTR [rip+0xc69d]        # 0x140012540
   140005ea3:	test   eax,eax
   140005ea5:	js     0x140005ed7
   140005ea7:	mov    r8,QWORD PTR [rsp+0x58]
   140005eac:	mov    rcx,r12
   140005eaf:	mov    rdx,QWORD PTR [rbp-0x28]
   140005eb3:	call   0x14000adbc
   140005eb8:	mov    rcx,QWORD PTR [rsp+0x58]
   140005ebd:	mov    rax,QWORD PTR [rcx]
   140005ec0:	mov    rax,QWORD PTR [rax+0x10]
   140005ec4:	call   QWORD PTR [rip+0xc676]        # 0x140012540
   140005eca:	xor    r8d,r8d
   140005ecd:	mov    QWORD PTR [rsp+0x58],r8
   140005ed2:	jmp    0x140006851
   140005ed7:	lea    rdx,[rbp+0x58]
   140005edb:	mov    ecx,esi
   140005edd:	call   0x140003ea4
   140005ee2:	mov    rdx,QWORD PTR [rbp-0x28]
   140005ee6:	xor    ecx,ecx
   140005ee8:	or     rbx,0xffffffffffffffff
   140005eec:	test   rdx,rdx
   140005eef:	je     0x140005f1b
   140005ef1:	mov    rax,rbx
   140005ef4:	inc    rax
   140005ef7:	cmp    WORD PTR [rdx+rax*2],cx
   140005efb:	jne    0x140005ef4
   140005efd:	mov    ecx,0x1
   140005f02:	lea    r8d,[rax+rax*1]
   140005f06:	mov    BYTE PTR [rsp+0x20],cl
   140005f0a:	xor    r9d,r9d
   140005f0d:	lea    rcx,[rbp+0x20]
   140005f11:	call   0x14000eb60
   140005f16:	mov    edi,DWORD PTR [rbp+0x50]
   140005f19:	xor    ecx,ecx
   140005f1b:	mov    rdx,QWORD PTR [rbp+0x78]
   140005f1f:	test   rdx,rdx
   140005f22:	je     0x140005f47
   140005f24:	lea    r9d,[rdi+rdi*1]
   140005f28:	inc    rbx
   140005f2b:	cmp    WORD PTR [rdx+rbx*2],cx
   140005f2f:	jne    0x140005f28
   140005f31:	mov    eax,0x1
   140005f36:	lea    r8d,[rbx+rbx*1]
   140005f3a:	lea    rcx,[rbp+0x20]
   140005f3e:	mov    BYTE PTR [rsp+0x20],al
   140005f42:	call   0x14000eb60
   140005f47:	mov    rdx,QWORD PTR [rbp+0x40]
   140005f4b:	mov    r8d,esi
   140005f4e:	mov    rcx,r12
   140005f51:	call   0x14000ae90
   140005f56:	jmp    0x14000557b
   140005f5b:	mov    eax,DWORD PTR [r14+0x2c]
   140005f5f:	mov    ebx,edx
   140005f61:	mov    edi,DWORD PTR [r14+0x40]
   140005f65:	mov    r10d,0x1
   140005f6b:	test   edi,edi
   140005f6d:	mov    DWORD PTR [rbp+0x8],eax
   140005f70:	mov    eax,DWORD PTR [r14+0x30]
   140005f74:	mov    DWORD PTR [rbp-0x80],eax
   140005f77:	cmove  ebx,r10d
   140005f7b:	mov    eax,DWORD PTR [r14+0x110]
   140005f82:	mov    DWORD PTR [rsp+0x78],eax
   140005f86:	cmp    eax,0x19
   140005f89:	jbe    0x140005fba
   140005f8b:	mov    r9d,0xa00
   140005f91:	lea    r8,[rbp-0x48]
   140005f95:	lea    rdx,[rsp+0x68]
   140005f9a:	mov    ecx,0xc0000fb0
   140005f9f:	mov    esi,0x8007007a
   140005fa4:	call   0x140003dbc
   140005fa9:	mov    r15d,eax
   140005fac:	test   eax,eax
   140005fae:	js     0x140006856
   140005fb4:	mov    rdx,QWORD PTR [rbp-0x28]
   140005fb8:	jmp    0x140005f4b
   140005fba:	mov    r13d,DWORD PTR [rsp+0x78]
   140005fbf:	lea    rax,[rbp+0xf0]
   140005fc6:	mov    r9,r14
   140005fc9:	lea    r8,[rbp+0xf0]
   140005fd0:	sub    r9,rax
   140005fd3:	mov    ecx,edx
   140005fd5:	cmp    ecx,r13d
   140005fd8:	jae    0x140005fee
   140005fda:	mov    rax,QWORD PTR [r9+r8*1+0x48]
   140005fdf:	add    ecx,r10d
   140005fe2:	mov    QWORD PTR [r8],rax
   140005fe5:	add    r8,0x8
   140005fe9:	cmp    ecx,0x19
   140005fec:	jb     0x140005fd5
   140005fee:	mov    r13,QWORD PTR [rsp+0x70]
   140005ff3:	cmp    DWORD PTR [r14+0x28],edx
   140005ff7:	je     0x14000601d
   140005ff9:	mov    rcx,QWORD PTR [rsp+0x50]
   140005ffe:	mov    edx,0x2
   140006003:	mov    rax,QWORD PTR [rcx]
   140006006:	mov    rax,QWORD PTR [rax+0x28]
   14000600a:	call   QWORD PTR [rip+0xc530]        # 0x140012540
   140006010:	xor    r8d,r8d
   140006013:	mov    esi,eax
   140006015:	test   eax,eax
   140006017:	js     0x14000692f
   14000601d:	mov    rdx,QWORD PTR [rbp+0x18]
   140006021:	lea    rax,[rbp-0x78]
   140006025:	lea    r9,[rbp+0x10]
   140006029:	mov    QWORD PTR [rsp+0x20],rax
   14000602e:	lea    r8,[rsp+0x70]
   140006033:	mov    rcx,r14
   140006036:	call   0x140008138
   14000603b:	mov    esi,eax
   14000603d:	cmp    eax,0x80070026
   140006042:	je     0x140006601
   140006048:	movsxd rax,ebx
   14000604b:	mov    QWORD PTR [rbp+0xc8],rax
   140006052:	mov    r13d,0x1
   140006058:	cmp    esi,r13d
   14000605b:	je     0x140006607
   140006061:	xor    r13d,r13d
   140006064:	test   esi,esi
   140006066:	js     0x140006885
   14000606c:	mov    rbx,QWORD PTR [rbp+0x10]
   140006070:	lea    rdx,[rip+0xce59]        # 0x140012ed0
   140006077:	mov    rcx,rbx
   14000607a:	call   QWORD PTR [rip+0xc480]        # 0x140012500
   140006080:	test   eax,eax
   140006082:	je     0x1400064bf
   140006088:	lea    rdx,[rip+0xce51]        # 0x140012ee0
   14000608f:	mov    rcx,rbx
   140006092:	call   QWORD PTR [rip+0xc468]        # 0x140012500
   140006098:	test   eax,eax
   14000609a:	je     0x1400064bf
   1400060a0:	lea    rdx,[rip+0xce51]        # 0x140012ef8
   1400060a7:	mov    rcx,rbx
   1400060aa:	call   QWORD PTR [rip+0xc450]        # 0x140012500
   1400060b0:	test   eax,eax
   1400060b2:	je     0x140006811
   1400060b8:	call   QWORD PTR [rip+0xc40a]        # 0x1400124c8
   1400060be:	mov    r13,QWORD PTR [rsp+0x70]
   1400060c3:	cdqe   
   1400060c5:	mov    rcx,r13
   1400060c8:	mov    QWORD PTR [rbp+0xc0],rax
   1400060cf:	mov    rax,QWORD PTR [r13+0x0]
   1400060d3:	mov    rax,QWORD PTR [rax+0x58]
   1400060d7:	call   QWORD PTR [rip+0xc463]        # 0x140012540
   1400060dd:	xor    r8d,r8d
   1400060e0:	mov    esi,eax
   1400060e2:	test   eax,eax
   1400060e4:	js     0x140006851
   1400060ea:	mov    r10,QWORD PTR [rsp+0x50]
   1400060ef:	mov    rcx,QWORD PTR [rbp-0x78]
   1400060f3:	mov    r9,QWORD PTR [r14+0x218]
   1400060fa:	mov    rdx,QWORD PTR [r14+0x1e0]
   140006101:	mov    rax,QWORD PTR [r10]
   140006104:	mov    DWORD PTR [rsp+0x38],r8d
   140006109:	mov    r8,QWORD PTR [r14+0x1a8]
   140006110:	mov    QWORD PTR [rsp+0x30],rcx
   140006115:	lea    rcx,[rbp-0x58]
   140006119:	mov    rax,QWORD PTR [rax+0x30]
   14000611d:	mov    QWORD PTR [rsp+0x28],rcx
   140006122:	mov    rcx,r10
   140006125:	mov    QWORD PTR [rsp+0x20],r13
   14000612a:	call   QWORD PTR [rip+0xc410]        # 0x140012540
   140006130:	mov    esi,eax
   140006132:	call   QWORD PTR [rip+0xc390]        # 0x1400124c8
   140006138:	movsxd rbx,eax
   14000613b:	mov    eax,esi
   14000613d:	neg    eax
   14000613f:	sbb    ecx,ecx
   140006141:	xor    eax,eax
   140006143:	and    DWORD PTR [rbp-0x64],ecx
   140006146:	cmp    DWORD PTR [r14+0x34],eax
   14000614a:	je     0x140006374
   140006150:	mov    rcx,QWORD PTR [rsp+0x50]
   140006155:	lea    rdx,[rsp+0x60]
   14000615a:	mov    rax,QWORD PTR [rcx]
   14000615d:	mov    rax,QWORD PTR [rax+0x20]
   140006161:	call   QWORD PTR [rip+0xc3d9]        # 0x140012540
   140006167:	xor    r8d,r8d
   14000616a:	test   eax,eax
   14000616c:	js     0x140006851
   140006172:	mov    rax,QWORD PTR [r13+0x0]
   140006176:	mov    rcx,r13
   140006179:	mov    rdx,QWORD PTR [rsp+0x60]
   14000617e:	mov    rax,QWORD PTR [rax+0x48]
   140006182:	call   QWORD PTR [rip+0xc3b8]        # 0x140012540
   140006188:	xor    r8d,r8d
   14000618b:	test   eax,eax
   14000618d:	js     0x140006851
   140006193:	sub    rbx,QWORD PTR [rbp+0xc0]
   14000619a:	lea    r8,[rip+0xcd67]        # 0x140012f08
   1400061a1:	imul   rcx,rbx,0x3e8
   1400061a8:	movabs rax,0x20c49ba5e353f7cf
   1400061b2:	mov    ebx,0x40
   1400061b7:	imul   rcx
   1400061ba:	lea    rcx,[rbp+0x1c0]
   1400061c1:	sar    rdx,0x7
   1400061c5:	mov    r9,rdx
   1400061c8:	shr    r9,0x3f
   1400061cc:	add    r9,rdx
   1400061cf:	mov    edx,ebx
   1400061d1:	call   0x140006f9c
   1400061d6:	xor    r8d,r8d
   1400061d9:	test   eax,eax
   1400061db:	js     0x140006851
   1400061e1:	mov    edx,ebx
   1400061e3:	lea    rcx,[rbp+0x1c0]
   1400061ea:	call   QWORD PTR [rip+0xc1a0]        # 0x140012390
   1400061f0:	mov    rcx,QWORD PTR [rsp+0x60]
   1400061f5:	lea    r8,[rbp+0x1c0]
   1400061fc:	lea    rdx,[rip+0xcd0d]        # 0x140012f10
   140006203:	mov    rax,QWORD PTR [rcx]
   140006206:	mov    rax,QWORD PTR [rax+0x38]
   14000620a:	call   QWORD PTR [rip+0xc330]        # 0x140012540
   140006210:	xor    r8d,r8d
   140006213:	test   eax,eax
   140006215:	js     0x140006851
   14000621b:	mov    r9d,esi
   14000621e:	lea    r8,[rip+0xcd03]        # 0x140012f28
   140006225:	mov    edx,ebx
   140006227:	lea    rcx,[rbp+0x1c0]
   14000622e:	call   0x140006f9c
   140006233:	xor    r8d,r8d
   140006236:	test   eax,eax
   140006238:	js     0x140006851
   14000623e:	mov    edx,ebx
   140006240:	lea    rcx,[rbp+0x1c0]
   140006247:	call   QWORD PTR [rip+0xc143]        # 0x140012390
   14000624d:	mov    rcx,QWORD PTR [rsp+0x60]
   140006252:	lea    r8,[rbp+0x1c0]
   140006259:	lea    rdx,[rip+0xccd8]        # 0x140012f38
   140006260:	mov    rax,QWORD PTR [rcx]
   140006263:	mov    rax,QWORD PTR [rax+0x38]
   140006267:	call   QWORD PTR [rip+0xc2d3]        # 0x140012540
   14000626d:	xor    r8d,r8d
   140006270:	test   eax,eax
   140006272:	js     0x140006851
   140006278:	mov    rcx,QWORD PTR [rbp-0x58]
   14000627c:	test   rcx,rcx
   14000627f:	je     0x1400062ae
   140006281:	mov    rax,QWORD PTR [rcx]
   140006284:	lea    rdx,[rsp+0x7c]
   140006289:	mov    rax,QWORD PTR [rax+0x20]
   14000628d:	call   QWORD PTR [rip+0xc2ad]        # 0x140012540
   140006293:	xor    r8d,r8d
   140006296:	test   eax,eax
   140006298:	js     0x140006851
   14000629e:	mov    r9d,DWORD PTR [rsp+0x7c]
   1400062a3:	sub    r9d,DWORD PTR [rbp-0x6c]
   1400062a7:	mov    DWORD PTR [rsp+0x7c],r9d
   1400062ac:	jmp    0x1400062b6
   1400062ae:	mov    r9d,r8d
   1400062b1:	mov    DWORD PTR [rsp+0x7c],r8d
   1400062b6:	lea    r8,[rip+0xcc8b]        # 0x140012f48
   1400062bd:	mov    rdx,rbx
   1400062c0:	lea    rcx,[rbp+0x1c0]
   1400062c7:	call   0x140006f9c
   1400062cc:	xor    r8d,r8d
   1400062cf:	test   eax,eax
   1400062d1:	js     0x140006851
   1400062d7:	mov    rdx,rbx
   1400062da:	lea    rcx,[rbp+0x1c0]
   1400062e1:	call   QWORD PTR [rip+0xc0a9]        # 0x140012390
   1400062e7:	mov    rcx,QWORD PTR [rsp+0x60]
   1400062ec:	lea    r8,[rbp+0x1c0]
   1400062f3:	lea    rdx,[rip+0xcc56]        # 0x140012f50
   1400062fa:	mov    rax,QWORD PTR [rcx]
   1400062fd:	mov    rax,QWORD PTR [rax+0x38]
   140006301:	call   QWORD PTR [rip+0xc239]        # 0x140012540
   140006307:	xor    r8d,r8d
   14000630a:	test   eax,eax
   14000630c:	js     0x140006851
   140006312:	mov    r9d,0x800
   140006318:	lea    r8,[rbp-0x48]
   14000631c:	lea    rdx,[rsp+0x68]
   140006321:	mov    ecx,0x40000fb4
   140006326:	call   0x140003dbc
   14000632b:	mov    r15d,eax
   14000632e:	test   eax,eax
   140006330:	js     0x140006856
   140006336:	mov    r8,QWORD PTR [rsp+0x60]
   14000633b:	lea    r9,[rip+0xcb8e]        # 0x140012ed0
   140006342:	mov    rdx,QWORD PTR [rbp-0x28]
   140006346:	mov    rcx,r12
   140006349:	call   0x14000afd8
   14000634e:	xor    r8d,r8d
   140006351:	test   eax,eax
   140006353:	js     0x140006851
   140006359:	mov    rcx,QWORD PTR [rsp+0x60]
   14000635e:	mov    rax,QWORD PTR [rcx]
   140006361:	mov    rax,QWORD PTR [rax+0x10]
   140006365:	call   QWORD PTR [rip+0xc1d5]        # 0x140012540
   14000636b:	xor    ebx,ebx
   14000636d:	mov    QWORD PTR [rsp+0x60],rbx
   140006372:	jmp    0x140006376
   140006374:	xor    ebx,ebx
   140006376:	test   esi,esi
   140006378:	js     0x140006750
   14000637e:	cmp    DWORD PTR [rbp+0xbc],ebx
   140006384:	je     0x140006401
   140006386:	mov    rcx,QWORD PTR [rbp-0x50]
   14000638a:	lea    r8,[rbp+0x0]
   14000638e:	mov    DWORD PTR [rbp+0xbc],ebx
   140006394:	lea    rdx,[rip+0xcbc5]        # 0x140012f60
   14000639b:	mov    rax,QWORD PTR [rcx]
   14000639e:	mov    rax,QWORD PTR [rax+0x28]
   1400063a2:	call   QWORD PTR [rip+0xc198]        # 0x140012540
   1400063a8:	test   eax,eax
   1400063aa:	js     0x140006401
   1400063ac:	cmp    QWORD PTR [rbp+0xc8],rbx
   1400063b3:	je     0x140006401
   1400063b5:	mov    rcx,QWORD PTR [rbp+0x0]
   1400063b9:	lea    rdx,[rip+0xcbb0]        # 0x140012f70
   1400063c0:	call   QWORD PTR [rip+0xc13a]        # 0x140012500
   1400063c6:	test   eax,eax
   1400063c8:	jne    0x1400063df
   1400063ca:	mov    rcx,QWORD PTR [rbp+0x0]
   1400063ce:	lea    rdx,[rip+0xcbab]        # 0x140012f80
   1400063d5:	call   QWORD PTR [rip+0xc125]        # 0x140012500
   1400063db:	test   eax,eax
   1400063dd:	je     0x1400063e6
   1400063df:	mov    edi,0x5
   1400063e4:	jmp    0x140006401
   1400063e6:	mov    rcx,QWORD PTR [rbp+0x0]
   1400063ea:	lea    rdx,[rip+0xcb9f]        # 0x140012f90
   1400063f1:	call   QWORD PTR [rip+0xc109]        # 0x140012500
   1400063f7:	test   eax,eax
   1400063f9:	mov    eax,0x5
   1400063fe:	cmovne edi,eax
   140006401:	mov    rcx,QWORD PTR [rbp-0x58]
   140006405:	lea    rdx,[rbp-0x70]
   140006409:	mov    rax,QWORD PTR [rcx]
   14000640c:	mov    rax,QWORD PTR [rax+0x20]
   140006410:	call   QWORD PTR [rip+0xc12a]        # 0x140012540
   140006416:	xor    r8d,r8d
   140006419:	mov    esi,eax
   14000641b:	test   eax,eax
   14000641d:	js     0x140006851
   140006423:	mov    ebx,DWORD PTR [rbp-0x6c]
   140006426:	jmp    0x14000649d
   140006428:	mov    rcx,QWORD PTR [rbp-0x58]
   14000642c:	lea    r8,[rbp-0x60]
   140006430:	mov    edx,ebx
   140006432:	mov    rax,QWORD PTR [rcx]
   140006435:	mov    rax,QWORD PTR [rax+0x28]
   140006439:	call   QWORD PTR [rip+0xc101]        # 0x140012540
   14000643f:	xor    r8d,r8d
   140006442:	mov    esi,eax
   140006444:	test   eax,eax
   140006446:	js     0x140006851
   14000644c:	mov    eax,DWORD PTR [rsp+0x78]
   140006450:	mov    r8d,edi
   140006453:	mov    r9d,DWORD PTR [rbp+0x8]
   140006457:	mov    rcx,r12
   14000645a:	mov    rdx,QWORD PTR [rbp-0x60]
   14000645e:	mov    DWORD PTR [rsp+0x30],eax
   140006462:	lea    rax,[rbp+0xf0]
   140006469:	mov    QWORD PTR [rsp+0x28],rax
   14000646e:	mov    eax,DWORD PTR [rbp-0x80]
   140006471:	mov    DWORD PTR [rsp+0x20],eax
   140006475:	call   0x140008704
   14000647a:	mov    esi,eax
   14000647c:	test   eax,eax
   14000647e:	js     0x1400066ac
   140006484:	mov    rcx,QWORD PTR [rbp-0x60]
   140006488:	mov    rax,QWORD PTR [rcx]
   14000648b:	mov    rax,QWORD PTR [rax+0x10]
   14000648f:	call   QWORD PTR [rip+0xc0ab]        # 0x140012540
   140006495:	xor    eax,eax
   140006497:	mov    QWORD PTR [rbp-0x60],rax
   14000649b:	inc    ebx
   14000649d:	mov    eax,DWORD PTR [rbp-0x70]
   1400064a0:	cmp    ebx,eax
   1400064a2:	jb     0x140006428
   1400064a4:	mov    DWORD PTR [rbp-0x6c],eax
   1400064a7:	mov    rcx,r13
   1400064aa:	mov    rax,QWORD PTR [r13+0x0]
   1400064ae:	mov    rax,QWORD PTR [rax+0x10]
   1400064b2:	call   QWORD PTR [rip+0xc088]        # 0x140012540
   1400064b8:	xor    ebx,ebx
   1400064ba:	jmp    0x1400065b7
   1400064bf:	mov    r13,QWORD PTR [rsp+0x70]
   1400064c4:	xor    eax,eax
   1400064c6:	cmp    DWORD PTR [r14+0x34],eax
   1400064ca:	je     0x1400065a4
   1400064d0:	mov    rcx,QWORD PTR [rsp+0x50]
   1400064d5:	lea    rdx,[rsp+0x60]
   1400064da:	mov    rax,QWORD PTR [rcx]
   1400064dd:	mov    rax,QWORD PTR [rax+0x20]
   1400064e1:	call   QWORD PTR [rip+0xc059]        # 0x140012540
   1400064e7:	xor    r8d,r8d
   1400064ea:	mov    esi,eax
   1400064ec:	test   eax,eax
   1400064ee:	js     0x140006851
   1400064f4:	mov    rcx,QWORD PTR [rsp+0x60]
   1400064f9:	lea    rdx,[rip+0xc9f0]        # 0x140012ef0
   140006500:	mov    r8,rbx
   140006503:	mov    rax,QWORD PTR [rcx]
   140006506:	mov    rax,QWORD PTR [rax+0x38]
   14000650a:	call   QWORD PTR [rip+0xc030]        # 0x140012540
   140006510:	xor    r8d,r8d
   140006513:	mov    esi,eax
   140006515:	test   eax,eax
   140006517:	js     0x140006851
   14000651d:	mov    rax,QWORD PTR [r13+0x0]
   140006521:	mov    rcx,r13
   140006524:	mov    rdx,QWORD PTR [rsp+0x60]
   140006529:	mov    rax,QWORD PTR [rax+0x48]
   14000652d:	call   QWORD PTR [rip+0xc00d]        # 0x140012540
   140006533:	xor    r8d,r8d
   140006536:	mov    esi,eax
   140006538:	test   eax,eax
   14000653a:	js     0x140006851
   140006540:	mov    r9d,0x800
   140006546:	lea    r8,[rbp-0x48]
   14000654a:	lea    rdx,[rsp+0x68]
   14000654f:	mov    ecx,0x40000fb2
   140006554:	call   0x140003dbc
   140006559:	mov    r15d,eax
   14000655c:	test   eax,eax
   14000655e:	js     0x140006856
   140006564:	mov    r8,QWORD PTR [rsp+0x60]
   140006569:	lea    r9,[rip+0xc960]        # 0x140012ed0
   140006570:	mov    rdx,QWORD PTR [rbp-0x28]
   140006574:	mov    rcx,r12
   140006577:	call   0x14000afd8
   14000657c:	xor    r8d,r8d
   14000657f:	mov    esi,eax
   140006581:	test   eax,eax
   140006583:	js     0x140006851
   140006589:	mov    rcx,QWORD PTR [rsp+0x60]
   14000658e:	mov    rax,QWORD PTR [rcx]
   140006591:	mov    rax,QWORD PTR [rax+0x10]
   140006595:	call   QWORD PTR [rip+0xbfa5]        # 0x140012540
   14000659b:	xor    ebx,ebx
   14000659d:	mov    QWORD PTR [rsp+0x60],rbx
   1400065a2:	jmp    0x1400065a6
   1400065a4:	xor    ebx,ebx
   1400065a6:	mov    rax,QWORD PTR [r13+0x0]
   1400065aa:	mov    rcx,r13
   1400065ad:	mov    rax,QWORD PTR [rax+0x10]
   1400065b1:	call   QWORD PTR [rip+0xbf89]        # 0x140012540
   1400065b7:	mov    rcx,QWORD PTR [rbp-0x78]
   1400065bb:	mov    QWORD PTR [rsp+0x70],rbx
   1400065c0:	test   rcx,rcx
   1400065c3:	je     0x1400065d6
   1400065c5:	mov    rax,QWORD PTR [rcx]
   1400065c8:	mov    rax,QWORD PTR [rax+0x10]
   1400065cc:	call   QWORD PTR [rip+0xbf6e]        # 0x140012540
   1400065d2:	mov    QWORD PTR [rbp-0x78],rbx
   1400065d6:	mov    rdx,QWORD PTR [rbp+0x18]
   1400065da:	lea    rax,[rbp-0x78]
   1400065de:	lea    r9,[rbp+0x10]
   1400065e2:	mov    QWORD PTR [rsp+0x20],rax
   1400065e7:	lea    r8,[rsp+0x70]
   1400065ec:	mov    rcx,r14
   1400065ef:	call   0x140008138
   1400065f4:	mov    esi,eax
   1400065f6:	cmp    eax,0x80070026
   1400065fb:	jne    0x140006052
   140006601:	mov    r13d,0x1
   140006607:	mov    rcx,QWORD PTR [rsp+0x50]
   14000660c:	mov    rax,QWORD PTR [rcx]
   14000660f:	mov    rax,QWORD PTR [rax+0x68]
   140006613:	call   QWORD PTR [rip+0xbf27]        # 0x140012540
   140006619:	xor    r8d,r8d
   14000661c:	mov    esi,eax
   14000661e:	test   eax,eax
   140006620:	jns    0x14000684c
   140006626:	mov    r9d,0x800
   14000662c:	lea    r8,[rbp-0x48]
   140006630:	lea    rdx,[rsp+0x68]
   140006635:	mov    ecx,0xc0000fb7
   14000663a:	call   0x140003dbc
   14000663f:	xor    edi,edi
   140006641:	mov    r15d,eax
   140006644:	test   eax,eax
   140006646:	js     0x140006920
   14000664c:	lea    rdx,[rbp+0x58]
   140006650:	mov    ecx,esi
   140006652:	call   0x140003ea4
   140006657:	mov    rdx,QWORD PTR [rbp-0x28]
   14000665b:	or     rbx,0xffffffffffffffff
   14000665f:	test   rdx,rdx
   140006662:	je     0x140006685
   140006664:	mov    rax,rbx
   140006667:	inc    rax
   14000666a:	cmp    WORD PTR [rdx+rax*2],di
   14000666e:	jne    0x140006667
   140006670:	lea    r8d,[rax+rax*1]
   140006674:	mov    BYTE PTR [rsp+0x20],r13b
   140006679:	xor    r9d,r9d
   14000667c:	lea    rcx,[rbp+0x20]
   140006680:	call   0x14000eb60
   140006685:	mov    rdx,QWORD PTR [rbp+0x78]
   140006689:	test   rdx,rdx
   14000668c:	je     0x140006917
   140006692:	mov    eax,DWORD PTR [rbp+0x50]
   140006695:	lea    r9d,[rax+rax*1]
   140006699:	inc    rbx
   14000669c:	cmp    WORD PTR [rdx+rbx*2],di
   1400066a0:	jne    0x140006699
   1400066a2:	mov    BYTE PTR [rsp+0x20],r13b
   1400066a7:	jmp    0x14000690a
   1400066ac:	mov    r9d,0x800
   1400066b2:	lea    r8,[rbp-0x48]
   1400066b6:	lea    rdx,[rsp+0x68]
   1400066bb:	mov    ecx,0xc0000fb6
   1400066c0:	call   0x140003dbc
   1400066c5:	xor    edi,edi
   1400066c7:	mov    r15d,eax
   1400066ca:	test   eax,eax
   1400066cc:	js     0x140006856
   1400066d2:	mov    rcx,QWORD PTR [rsp+0x50]
   1400066d7:	lea    rdx,[rsp+0x58]
   1400066dc:	mov    rax,QWORD PTR [rcx]
   1400066df:	mov    rax,QWORD PTR [rax+0x38]
   1400066e3:	call   QWORD PTR [rip+0xbe57]        # 0x140012540
   1400066e9:	test   eax,eax
   1400066eb:	jns    0x140005ea7
   1400066f1:	lea    rdx,[rbp+0x58]
   1400066f5:	mov    ecx,esi
   1400066f7:	call   0x140003ea4
   1400066fc:	mov    rdx,QWORD PTR [rbp-0x28]
   140006700:	or     rbx,0xffffffffffffffff
   140006704:	test   rdx,rdx
   140006707:	je     0x14000672e
   140006709:	mov    rax,rbx
   14000670c:	inc    rax
   14000670f:	cmp    WORD PTR [rdx+rax*2],di
   140006713:	jne    0x14000670c
   140006715:	mov    ecx,0x1
   14000671a:	lea    r8d,[rax+rax*1]
   14000671e:	mov    BYTE PTR [rsp+0x20],cl
   140006722:	xor    r9d,r9d
   140006725:	lea    rcx,[rbp+0x20]
   140006729:	call   0x14000eb60
   14000672e:	mov    rdx,QWORD PTR [rbp+0x78]
   140006732:	test   rdx,rdx
   140006735:	je     0x140005f47
   14000673b:	mov    eax,DWORD PTR [rbp+0x50]
   14000673e:	lea    r9d,[rax+rax*1]
   140006742:	inc    rbx
   140006745:	cmp    WORD PTR [rdx+rbx*2],di
   140006749:	jne    0x140006742
   14000674b:	jmp    0x140005f31
   140006750:	mov    r9d,0x800
   140006756:	lea    r8,[rbp-0x48]
   14000675a:	lea    rdx,[rsp+0x68]
   14000675f:	mov    ecx,0xc0000fb5
   140006764:	call   0x140003dbc
   140006769:	mov    r15d,eax
   14000676c:	test   eax,eax
   14000676e:	js     0x140006856
   140006774:	mov    rcx,QWORD PTR [rsp+0x50]
   140006779:	lea    rdx,[rsp+0x58]
   14000677e:	mov    rax,QWORD PTR [rcx]
   140006781:	mov    rax,QWORD PTR [rax+0x38]
   140006785:	call   QWORD PTR [rip+0xbdb5]        # 0x140012540
   14000678b:	test   eax,eax
   14000678d:	js     0x1400067b0
   14000678f:	mov    r8,QWORD PTR [rsp+0x58]
   140006794:	mov    rcx,r12
   140006797:	mov    rdx,QWORD PTR [rbp-0x28]
   14000679b:	call   0x14000adbc
   1400067a0:	xor    r8d,r8d
   1400067a3:	test   eax,eax
   1400067a5:	js     0x140006851
   1400067ab:	jmp    0x140005eb8
   1400067b0:	lea    rdx,[rbp+0x58]
   1400067b4:	mov    ecx,esi
   1400067b6:	call   0x140003ea4
   1400067bb:	mov    rdx,QWORD PTR [rbp-0x28]
   1400067bf:	or     rbx,0xffffffffffffffff
   1400067c3:	xor    edi,edi
   1400067c5:	test   rdx,rdx
   1400067c8:	je     0x1400067ef
   1400067ca:	mov    rax,rbx
   1400067cd:	inc    rax
   1400067d0:	cmp    WORD PTR [rdx+rax*2],di
   1400067d4:	jne    0x1400067cd
   1400067d6:	mov    ecx,0x1
   1400067db:	lea    r8d,[rax+rax*1]
   1400067df:	mov    BYTE PTR [rsp+0x20],cl
   1400067e3:	xor    r9d,r9d
   1400067e6:	lea    rcx,[rbp+0x20]
   1400067ea:	call   0x14000eb60
   1400067ef:	mov    rdx,QWORD PTR [rbp+0x78]
   1400067f3:	test   rdx,rdx
   1400067f6:	je     0x140005f47
   1400067fc:	mov    eax,DWORD PTR [rbp+0x50]
   1400067ff:	lea    r9d,[rax+rax*1]
   140006803:	inc    rbx
   140006806:	cmp    WORD PTR [rdx+rbx*2],di
   14000680a:	jne    0x140006803
   14000680c:	jmp    0x140005f31
   140006811:	mov    r9d,0x800
   140006817:	lea    r8,[rbp-0x48]
   14000681b:	lea    rdx,[rsp+0x68]
   140006820:	mov    ecx,0x40000fb3
   140006825:	mov    esi,0x8007000d
   14000682a:	call   0x140003dbc
   14000682f:	mov    r15d,eax
   140006832:	test   eax,eax
   140006834:	js     0x140006920
   14000683a:	mov    rdx,QWORD PTR [rbp-0x28]
   14000683e:	mov    r8d,esi
   140006841:	mov    rcx,r12
   140006844:	call   0x14000ae90
   140006849:	xor    r8d,r8d
   14000684c:	mov    r13,QWORD PTR [rsp+0x70]
   140006851:	test   r15d,r15d
   140006854:	jns    0x140006876
   140006856:	mov    ecx,0x1
   14000685b:	call   0x140011d08
   140006860:	mov    rcx,rax
   140006863:	lea    rdx,[rip+0xc4d6]        # 0x140012d40
   14000686a:	mov    r8d,r15d
   14000686d:	call   QWORD PTR [rip+0xbc6d]        # 0x1400124e0
   140006873:	xor    r8d,r8d
   140006876:	cmp    DWORD PTR [rbp-0x10],r8d
   14000687a:	jne    0x14000692f
   140006880:	jmp    0x1400069a0
   140006885:	lea    rdx,[rbp+0x58]
   140006889:	mov    ecx,esi
   14000688b:	call   0x140003ea4
   140006890:	mov    r9d,0x800
   140006896:	lea    r8,[rbp-0x48]
   14000689a:	lea    rdx,[rsp+0x68]
   14000689f:	mov    ecx,0xc0000fb1
   1400068a4:	call   0x140003dbc
   1400068a9:	mov    r15d,eax
   1400068ac:	test   eax,eax
   1400068ae:	js     0x140006920
   1400068b0:	mov    rdx,QWORD PTR [rbp-0x28]
   1400068b4:	or     rbx,0xffffffffffffffff
   1400068b8:	test   rdx,rdx
   1400068bb:	je     0x1400068e6
   1400068bd:	mov    rax,rbx
   1400068c0:	inc    rax
   1400068c3:	cmp    WORD PTR [rdx+rax*2],r13w
   1400068c8:	jne    0x1400068c0
   1400068ca:	mov    edi,0x1
   1400068cf:	lea    r8d,[rax+rax*1]
   1400068d3:	xor    r9d,r9d
   1400068d6:	mov    BYTE PTR [rsp+0x20],dil
   1400068db:	lea    rcx,[rbp+0x20]
   1400068df:	call   0x14000eb60
   1400068e4:	jmp    0x1400068eb
   1400068e6:	mov    edi,0x1
   1400068eb:	mov    rdx,QWORD PTR [rbp+0x78]
   1400068ef:	test   rdx,rdx
   1400068f2:	je     0x140006917
   1400068f4:	mov    eax,DWORD PTR [rbp+0x50]
   1400068f7:	lea    r9d,[rax+rax*1]
   1400068fb:	inc    rbx
   1400068fe:	cmp    WORD PTR [rdx+rbx*2],r13w
   140006903:	jne    0x1400068fb
   140006905:	mov    BYTE PTR [rsp+0x20],dil
   14000690a:	lea    r8d,[rbx+rbx*1]
   14000690e:	lea    rcx,[rbp+0x20]
   140006912:	call   0x14000eb60
   140006917:	mov    rdx,QWORD PTR [rbp+0x40]
   14000691b:	jmp    0x14000683e
   140006920:	mov    r13,QWORD PTR [rsp+0x70]
   140006925:	jmp    0x140006856
   14000692a:	mov    esi,0x80070057
   14000692f:	cmp    DWORD PTR [r12+0x28],r8d
   140006934:	je     0x1400069a0
   140006936:	cmp    DWORD PTR [r12+0x2c],r8d
   14000693b:	je     0x1400069a0
   14000693d:	mov    rbx,QWORD PTR [r12+0x8]
   140006942:	test   rbx,rbx
   140006945:	je     0x1400069a0
   140006947:	cmp    QWORD PTR [rbx+0x10],r8
   14000694b:	je     0x1400069a0
   14000694d:	cmp    DWORD PTR [rbx+0x1c],r8d
   140006951:	je     0x1400069a0
   140006953:	cmp    DWORD PTR [rbx+0x18],r8d
   140006957:	jl     0x1400069a0
   140006959:	mov    eax,DWORD PTR [rbx+0x20]
   14000695c:	test   eax,eax
   14000695e:	jne    0x140006967
   140006960:	mov    eax,0x80004005
   140006965:	jmp    0x14000699d
   140006967:	dec    eax
   140006969:	mov    DWORD PTR [rbx+0x20],eax
   14000696c:	mov    rcx,rbx
   14000696f:	call   0x14000c148
   140006974:	xor    r8d,r8d
   140006977:	test   eax,eax
   140006979:	js     0x14000699d
   14000697b:	mov    rcx,QWORD PTR [rbx+0x10]
   14000697f:	mov    rax,QWORD PTR [rcx]
   140006982:	mov    rax,QWORD PTR [rax+0x88]
   140006989:	call   QWORD PTR [rip+0xbbb1]        # 0x140012540
   14000698f:	xor    r8d,r8d
   140006992:	test   eax,eax
   140006994:	js     0x14000699d
   140006996:	mov    DWORD PTR [rbx+0x1c],r8d
   14000699a:	mov    eax,r8d
   14000699d:	mov    DWORD PTR [rbx+0x18],eax
   1400069a0:	mov    ebx,0x1
   1400069a5:	test   r12,r12
   1400069a8:	je     0x1400057b8
   1400069ae:	mov    rax,QWORD PTR [r12]
   1400069b2:	mov    edx,ebx
   1400069b4:	mov    rcx,r12
   1400069b7:	mov    rax,QWORD PTR [rax]
   1400069ba:	call   QWORD PTR [rip+0xbb80]        # 0x140012540
   1400069c0:	xor    r8d,r8d
   1400069c3:	jmp    0x1400057b8
   1400069c8:	int3   
   1400069c9:	int3   
   1400069ca:	int3   
   1400069cb:	int3   
   1400069cc:	int3   
   1400069cd:	int3   
   1400069ce:	int3   
   1400069cf:	int3   
   1400069d0:	mov    QWORD PTR [rsp+0x8],rbx
   1400069d5:	mov    QWORD PTR [rsp+0x10],rbp
   1400069da:	mov    QWORD PTR [rsp+0x18],rsi
   1400069df:	push   rdi
   1400069e0:	sub    rsp,0x20
   1400069e4:	lea    rax,[rip+0xb635]        # 0x140012020
   1400069eb:	mov    rdi,rcx
   1400069ee:	mov    QWORD PTR [rcx],rax
   1400069f1:	xor    ebp,ebp
   1400069f3:	mov    rcx,QWORD PTR [rcx+0x268]
   1400069fa:	test   rcx,rcx
   1400069fd:	je     0x140006a13
   1400069ff:	mov    rax,QWORD PTR [rcx]
   140006a02:	mov    rax,QWORD PTR [rax+0x10]
   140006a06:	call   QWORD PTR [rip+0xbb34]        # 0x140012540
   140006a0c:	mov    QWORD PTR [rdi+0x268],rbp
   140006a13:	mov    rcx,QWORD PTR [rdi+0x10]
   140006a17:	test   rcx,rcx
   140006a1a:	je     0x140006a2d
   140006a1c:	mov    rax,QWORD PTR [rcx]
   140006a1f:	mov    rax,QWORD PTR [rax+0x10]
   140006a23:	call   QWORD PTR [rip+0xbb17]        # 0x140012540
   140006a29:	mov    QWORD PTR [rdi+0x10],rbp
   140006a2d:	mov    rcx,QWORD PTR [rdi+0x8]
   140006a31:	test   rcx,rcx
   140006a34:	je     0x140006a4b
   140006a36:	mov    rax,QWORD PTR [rcx]
   140006a39:	mov    edx,0x1
   140006a3e:	mov    rax,QWORD PTR [rax]
   140006a41:	call   QWORD PTR [rip+0xbaf9]        # 0x140012540
   140006a47:	mov    QWORD PTR [rdi+0x8],rbp
   140006a4b:	mov    rcx,QWORD PTR [rdi+0x18]
   140006a4f:	test   rcx,rcx
   140006a52:	je     0x140006a65
   140006a54:	mov    rax,QWORD PTR [rcx]
   140006a57:	mov    rax,QWORD PTR [rax+0x10]
   140006a5b:	call   QWORD PTR [rip+0xbadf]        # 0x140012540
   140006a61:	mov    QWORD PTR [rdi+0x18],rbp
   140006a65:	mov    esi,ebp
   140006a67:	cmp    DWORD PTR [rdi+0x110],ebp
   140006a6d:	jbe    0x140006a8a
   140006a6f:	mov    ebx,esi
   140006a71:	mov    rcx,QWORD PTR [rdi+rbx*8+0x48]
   140006a76:	call   0x1400114b8
   140006a7b:	inc    esi
   140006a7d:	mov    QWORD PTR [rdi+rbx*8+0x48],rbp
   140006a82:	cmp    esi,DWORD PTR [rdi+0x110]
   140006a88:	jb     0x140006a6f
   140006a8a:	lea    rcx,[rdi+0x230]
   140006a91:	cmp    BYTE PTR [rcx+0x2c],bpl
   140006a95:	je     0x140006a9c
   140006a97:	call   0x14000eb30
   140006a9c:	lea    rcx,[rdi+0x1f8]
   140006aa3:	cmp    BYTE PTR [rcx+0x2c],bpl
   140006aa7:	je     0x140006aae
   140006aa9:	call   0x14000eb30
   140006aae:	lea    rcx,[rdi+0x1c0]
   140006ab5:	cmp    BYTE PTR [rcx+0x2c],bpl
   140006ab9:	je     0x140006ac0
   140006abb:	call   0x14000eb30
   140006ac0:	lea    rcx,[rdi+0x188]
   140006ac7:	cmp    BYTE PTR [rcx+0x2c],bpl
   140006acb:	je     0x140006ad2
   140006acd:	call   0x14000eb30
   140006ad2:	lea    rcx,[rdi+0x150]
   140006ad9:	cmp    BYTE PTR [rcx+0x2c],bpl
   140006add:	je     0x140006ae4
   140006adf:	call   0x14000eb30
   140006ae4:	lea    rcx,[rdi+0x118]
   140006aeb:	cmp    BYTE PTR [rcx+0x2c],bpl
   140006aef:	je     0x140006af6
   140006af1:	call   0x14000eb30
   140006af6:	mov    rbx,QWORD PTR [rsp+0x30]
   140006afb:	mov    rbp,QWORD PTR [rsp+0x38]
   140006b00:	mov    rsi,QWORD PTR [rsp+0x40]
   140006b05:	add    rsp,0x20
   140006b09:	pop    rdi
   140006b0a:	ret    
   140006b0b:	int3   
   140006b0c:	int3   
   140006b0d:	int3   
   140006b0e:	int3   
   140006b0f:	int3   
   140006b10:	int3   
   140006b11:	int3   
   140006b12:	int3   
   140006b13:	int3   
   140006b14:	int3   
   140006b15:	int3   
   140006b16:	int3   
   140006b17:	int3   
   140006b18:	int3   
   140006b19:	int3   
   140006b1a:	int3   
   140006b1b:	int3   
   140006b1c:	int3   
   140006b1d:	int3   
   140006b1e:	int3   
   140006b1f:	int3   
   140006b20:	mov    QWORD PTR [rsp+0x8],rbx
   140006b25:	push   rdi
   140006b26:	sub    rsp,0x20
   140006b2a:	mov    ebx,edx
   140006b2c:	mov    rdi,rcx
   140006b2f:	call   0x1400069d0
   140006b34:	test   bl,0x1
   140006b37:	je     0x140006b41
   140006b39:	mov    rcx,rdi
   140006b3c:	call   0x1400114b8
   140006b41:	mov    rax,rdi
   140006b44:	mov    rbx,QWORD PTR [rsp+0x30]
   140006b49:	add    rsp,0x20
   140006b4d:	pop    rdi
   140006b4e:	ret    
   140006b4f:	int3   
   140006b50:	int3   
   140006b51:	int3   
   140006b52:	int3   
   140006b53:	int3   
   140006b54:	int3   
   140006b55:	int3   
   140006b56:	int3   
   140006b57:	int3   
   140006b58:	rex push rbx
   140006b5a:	sub    rsp,0x20
   140006b5e:	lea    rax,[rip+0xb4b3]        # 0x140012018
   140006b65:	mov    rbx,rcx
   140006b68:	mov    QWORD PTR [rcx],rax
   140006b6b:	mov    rcx,QWORD PTR [rcx+0x8]
   140006b6f:	test   rcx,rcx
   140006b72:	je     0x140006b8a
   140006b74:	mov    rax,QWORD PTR [rcx]
   140006b77:	mov    edx,0x1
   140006b7c:	mov    rax,QWORD PTR [rax]
   140006b7f:	call   QWORD PTR [rip+0xb9bb]        # 0x140012540
   140006b85:	and    QWORD PTR [rbx+0x8],0x0
   140006b8a:	mov    rcx,QWORD PTR [rbx+0x18]
   140006b8e:	test   rcx,rcx
   140006b91:	je     0x140006ba5
   140006b93:	mov    rax,QWORD PTR [rcx]
   140006b96:	mov    rax,QWORD PTR [rax+0x10]
   140006b9a:	call   QWORD PTR [rip+0xb9a0]        # 0x140012540
   140006ba0:	and    QWORD PTR [rbx+0x18],0x0
   140006ba5:	mov    rcx,QWORD PTR [rbx+0x20]
   140006ba9:	test   rcx,rcx
   140006bac:	je     0x140006bc0
   140006bae:	mov    rax,QWORD PTR [rcx]
   140006bb1:	mov    rax,QWORD PTR [rax+0x10]
   140006bb5:	call   QWORD PTR [rip+0xb985]        # 0x140012540
   140006bbb:	and    QWORD PTR [rbx+0x20],0x0
   140006bc0:	add    rsp,0x20
   140006bc4:	pop    rbx
   140006bc5:	ret    
   140006bc6:	int3   
   140006bc7:	int3   
   140006bc8:	int3   
   140006bc9:	int3   
   140006bca:	int3   
   140006bcb:	int3   
   140006bcc:	int3   
   140006bcd:	int3   
   140006bce:	int3   
   140006bcf:	int3   
   140006bd0:	mov    QWORD PTR [rsp+0x8],rbx
   140006bd5:	push   rdi
   140006bd6:	sub    rsp,0x20
   140006bda:	mov    ebx,edx
   140006bdc:	mov    rdi,rcx
   140006bdf:	call   0x140006b58
   140006be4:	test   bl,0x1
   140006be7:	je     0x140006bf1
   140006be9:	mov    rcx,rdi
   140006bec:	call   0x1400114b8
   140006bf1:	mov    rax,rdi
   140006bf4:	mov    rbx,QWORD PTR [rsp+0x30]
   140006bf9:	add    rsp,0x20
   140006bfd:	pop    rdi
   140006bfe:	ret    
   140006bff:	int3   
   140006c00:	int3   
   140006c01:	int3   
   140006c02:	int3   
   140006c03:	int3   
   140006c04:	int3   
   140006c05:	int3   
   140006c06:	int3   
   140006c07:	int3   
   140006c08:	int3   
   140006c09:	int3   
   140006c0a:	int3   
   140006c0b:	int3   
   140006c0c:	int3   
   140006c0d:	int3   
   140006c0e:	int3   
   140006c0f:	int3   
   140006c10:	mov    QWORD PTR [rsp+0x8],rbx
   140006c15:	push   rdi
   140006c16:	sub    rsp,0x20
   140006c1a:	mov    rax,QWORD PTR [rcx]
   140006c1d:	mov    rdi,r8
   140006c20:	mov    rbx,rcx
   140006c23:	mov    rax,QWORD PTR [rax+0x8]
   140006c27:	call   QWORD PTR [rip+0xb913]        # 0x140012540
   140006c2d:	mov    QWORD PTR [rdi],rbx
   140006c30:	xor    eax,eax
   140006c32:	mov    rbx,QWORD PTR [rsp+0x30]
   140006c37:	add    rsp,0x20
   140006c3b:	pop    rdi
   140006c3c:	ret    
   140006c3d:	int3   
   140006c3e:	int3   
   140006c3f:	int3   
   140006c40:	int3   
   140006c41:	int3   
   140006c42:	int3   
   140006c43:	int3   
   140006c44:	int3   
   140006c45:	int3   
   140006c46:	int3   
   140006c47:	int3   
   140006c48:	int3   
   140006c49:	int3   
   140006c4a:	int3   
   140006c4b:	int3   
   140006c4c:	int3   
   140006c4d:	int3   
   140006c4e:	int3   
   140006c4f:	int3   
   140006c50:	mov    eax,0x1
   140006c55:	lock xadd DWORD PTR [rcx+0x8],eax
   140006c5a:	inc    eax
   140006c5c:	ret    
   140006c5d:	int3   
   140006c5e:	int3   
   140006c5f:	int3   
   140006c60:	int3   
   140006c61:	int3   
   140006c62:	int3   
   140006c63:	int3   
   140006c64:	int3   
   140006c65:	int3   
   140006c66:	int3   
   140006c67:	int3   
   140006c68:	int3   
   140006c69:	int3   
   140006c6a:	int3   
   140006c6b:	int3   
   140006c6c:	int3   
   140006c6d:	int3   
   140006c6e:	int3   
   140006c6f:	int3   
   140006c70:	mov    QWORD PTR [rsp+0x8],rbx
   140006c75:	push   rdi
   140006c76:	sub    rsp,0x20
   140006c7a:	lea    rax,[rip+0xb3a7]        # 0x140012028
   140006c81:	mov    rbx,rcx
   140006c84:	mov    QWORD PTR [rcx],rax
   140006c87:	mov    edi,edx
   140006c89:	mov    rcx,QWORD PTR [rcx+0x20]
   140006c8d:	test   rcx,rcx
   140006c90:	je     0x140006ca4
   140006c92:	mov    rax,QWORD PTR [rcx]
   140006c95:	mov    rax,QWORD PTR [rax+0x10]
   140006c99:	call   QWORD PTR [rip+0xb8a1]        # 0x140012540
   140006c9f:	and    QWORD PTR [rbx+0x20],0x0
   140006ca4:	test   dil,0x1
   140006ca8:	je     0x140006cb2
   140006caa:	mov    rcx,rbx
   140006cad:	call   0x1400114b8
   140006cb2:	mov    rax,rbx
   140006cb5:	mov    rbx,QWORD PTR [rsp+0x30]
   140006cba:	add    rsp,0x20
   140006cbe:	pop    rdi
   140006cbf:	ret    
   140006cc0:	int3   
   140006cc1:	int3   
   140006cc2:	int3   
   140006cc3:	int3   
   140006cc4:	int3   
   140006cc5:	int3   
   140006cc6:	int3   
   140006cc7:	int3   
   140006cc8:	int3   
   140006cc9:	int3   
   140006cca:	int3   
   140006ccb:	int3   
   140006ccc:	int3   
   140006ccd:	int3   
   140006cce:	int3   
   140006ccf:	int3   
   140006cd0:	rex push rbx
   140006cd2:	sub    rsp,0x20
   140006cd6:	or     ebx,0xffffffff
   140006cd9:	lock xadd DWORD PTR [rcx+0x8],ebx
   140006cde:	sub    ebx,0x1
   140006ce1:	jne    0x140006cf8
   140006ce3:	test   rcx,rcx
   140006ce6:	je     0x140006cf8
   140006ce8:	mov    rdx,QWORD PTR [rcx]
   140006ceb:	mov    rax,QWORD PTR [rdx+0x38]
   140006cef:	lea    edx,[rbx+0x1]
   140006cf2:	call   QWORD PTR [rip+0xb848]        # 0x140012540
   140006cf8:	mov    eax,ebx
   140006cfa:	add    rsp,0x20
   140006cfe:	pop    rbx
   140006cff:	ret    
   140006d00:	int3   
   140006d01:	int3   
   140006d02:	int3   
   140006d03:	int3   
   140006d04:	int3   
   140006d05:	int3   
   140006d06:	int3   
   140006d07:	int3   
   140006d08:	int3   
   140006d09:	int3   
   140006d0a:	int3   
   140006d0b:	int3   
   140006d0c:	int3   
   140006d0d:	int3   
   140006d0e:	int3   
   140006d0f:	int3   
   140006d10:	test   rdx,rdx
   140006d13:	jne    0x140006d1b
   140006d15:	mov    eax,0x80070057
   140006d1a:	ret    
   140006d1b:	cmp    DWORD PTR [rcx+0x28],0x0
   140006d1f:	jne    0x140006d27
   140006d21:	mov    eax,0x80070015
   140006d26:	ret    
   140006d27:	mov    DWORD PTR [rdx],0x1
   140006d2d:	xor    eax,eax
   140006d2f:	ret    
   140006d30:	int3   
   140006d31:	int3   
   140006d32:	int3   
   140006d33:	int3   
   140006d34:	int3   
   140006d35:	int3   
   140006d36:	int3   
   140006d37:	int3   
   140006d38:	int3   
   140006d39:	int3   
   140006d3a:	int3   
   140006d3b:	int3   
   140006d3c:	int3   
   140006d3d:	int3   
   140006d3e:	int3   
   140006d3f:	int3   
   140006d40:	test   rdx,rdx
   140006d43:	jne    0x140006d4b
   140006d45:	mov    eax,0x80070057
   140006d4a:	ret    
   140006d4b:	mov    eax,DWORD PTR [rcx+0x28]
   140006d4e:	neg    eax
   140006d50:	sbb    eax,eax
   140006d52:	and    eax,0xfff93fec
   140006d57:	add    eax,0x80070015
   140006d5c:	ret    
   140006d5d:	int3   
   140006d5e:	int3   
   140006d5f:	int3   
   140006d60:	int3   
   140006d61:	int3   
   140006d62:	int3   
   140006d63:	int3   
   140006d64:	int3   
   140006d65:	int3   
   140006d66:	int3   
   140006d67:	int3   
   140006d68:	int3   
   140006d69:	int3   
   140006d6a:	int3   
   140006d6b:	int3   
   140006d6c:	int3   
   140006d6d:	int3   
   140006d6e:	int3   
   140006d6f:	int3   
   140006d70:	test   r8,r8
   140006d73:	je     0x140006d8c
   140006d75:	test   r9,r9
   140006d78:	je     0x140006d8c
   140006d7a:	mov    eax,DWORD PTR [rcx+0x28]
   140006d7d:	neg    eax
   140006d7f:	sbb    eax,eax
   140006d81:	and    eax,0xfff93fec
   140006d86:	add    eax,0x80070015
   140006d8b:	ret    
   140006d8c:	mov    eax,0x80070057
   140006d91:	ret    
   140006d92:	int3   
   140006d93:	int3   
   140006d94:	int3   
   140006d95:	int3   
   140006d96:	int3   
   140006d97:	int3   
   140006d98:	int3   
   140006d99:	int3   
   140006d9a:	int3   
   140006d9b:	int3   
   140006d9c:	int3   
   140006d9d:	int3   
   140006d9e:	int3   
   140006d9f:	int3   
   140006da0:	mov    QWORD PTR [rsp+0x8],rbx
   140006da5:	push   rdi
   140006da6:	sub    rsp,0x20
   140006daa:	xor    ebx,ebx
   140006dac:	mov    rdi,rcx
   140006daf:	test   rdx,rdx
   140006db2:	jne    0x140006dbb
   140006db4:	mov    ebx,0x80070057
   140006db9:	jmp    0x140006de6
   140006dbb:	cmp    DWORD PTR [rcx+0x28],ebx
   140006dbe:	jne    0x140006dc7
   140006dc0:	mov    ebx,0x80070015
   140006dc5:	jmp    0x140006de6
   140006dc7:	mov    rcx,QWORD PTR [rcx+0x20]
   140006dcb:	mov    QWORD PTR [rdx],rcx
   140006dce:	mov    rcx,QWORD PTR [rdi+0x20]
   140006dd2:	mov    rdx,QWORD PTR [rcx]
   140006dd5:	mov    rax,QWORD PTR [rdx+0x8]
   140006dd9:	call   QWORD PTR [rip+0xb761]        # 0x140012540
   140006ddf:	mov    DWORD PTR [rdi+0x2c],0x1
   140006de6:	mov    eax,ebx
   140006de8:	mov    rbx,QWORD PTR [rsp+0x30]
   140006ded:	add    rsp,0x20
   140006df1:	pop    rdi
   140006df2:	ret    
   140006df3:	int3   
   140006df4:	int3   
   140006df5:	int3   
   140006df6:	int3   
   140006df7:	int3   
   140006df8:	int3   
   140006df9:	int3   
   140006dfa:	int3   
   140006dfb:	int3   
   140006dfc:	mov    QWORD PTR [rsp+0x10],rbx
   140006e01:	push   rbp
   140006e02:	push   rsi
   140006e03:	push   rdi
   140006e04:	push   r14
   140006e06:	push   r15
   140006e08:	lea    rbp,[rsp-0x180]
   140006e10:	sub    rsp,0x280
   140006e17:	mov    rax,QWORD PTR [rip+0x1521a]        # 0x14001c038
   140006e1e:	xor    rax,rsp
   140006e21:	mov    QWORD PTR [rbp+0x170],rax
   140006e28:	mov    ebx,r8d
   140006e2b:	mov    r14d,edx
   140006e2e:	mov    rsi,rcx
   140006e31:	xor    edx,edx
   140006e33:	mov    r8d,0x1fe
   140006e39:	lea    rcx,[rsp+0x72]
   140006e3e:	mov    rdi,r9
   140006e41:	call   0x140011e22
   140006e46:	lea    rax,[rsp+0x70]
   140006e4b:	mov    DWORD PTR [rsp+0x58],0x200
   140006e53:	xor    r15d,r15d
   140006e56:	mov    QWORD PTR [rsp+0x50],rax
   140006e5b:	mov    r9d,0x800
   140006e61:	mov    WORD PTR [rsp+0x5c],0x100
   140006e68:	lea    r8,[rsp+0x30]
   140006e6d:	mov    DWORD PTR [rsp+0x60],r15d
   140006e72:	mov    rdx,rdi
   140006e75:	mov    WORD PTR [rsp+0x70],r15w
   140006e7b:	mov    ecx,ebx
   140006e7d:	call   0x140003dbc
   140006e82:	mov    ebx,eax
   140006e84:	test   eax,eax
   140006e86:	js     0x140006ec2
   140006e88:	mov    rdx,QWORD PTR [rsp+0x50]
   140006e8d:	test   rdx,rdx
   140006e90:	jne    0x140006e99
   140006e92:	mov    ebx,0x80070057
   140006e97:	jmp    0x140006ec2
   140006e99:	mov    DWORD PTR [rsi+0xc],r14d
   140006e9d:	or     rax,0xffffffffffffffff
   140006ea1:	inc    rax
   140006ea4:	cmp    WORD PTR [rdx+rax*2],r15w
   140006ea9:	jne    0x140006ea1
   140006eab:	lea    r8d,[rax+rax*1]
   140006eaf:	mov    BYTE PTR [rsp+0x20],0x1
   140006eb4:	lea    rcx,[rsi+0x10]
   140006eb8:	xor    r9d,r9d
   140006ebb:	call   0x14000eb60
   140006ec0:	mov    ebx,eax
   140006ec2:	cmp    BYTE PTR [rsp+0x5c],r15b
   140006ec7:	je     0x140006ed3
   140006ec9:	lea    rcx,[rsp+0x30]
   140006ece:	call   0x14000eb30
   140006ed3:	mov    eax,ebx
   140006ed5:	mov    rcx,QWORD PTR [rbp+0x170]
   140006edc:	xor    rcx,rsp
   140006edf:	call   0x140011800
   140006ee4:	mov    rbx,QWORD PTR [rsp+0x2b8]
   140006eec:	add    rsp,0x280
   140006ef3:	pop    r15
   140006ef5:	pop    r14
   140006ef7:	pop    rdi
   140006ef8:	pop    rsi
   140006ef9:	pop    rbp
   140006efa:	ret    
   140006efb:	int3   
   140006efc:	int3   
   140006efd:	int3   
   140006efe:	int3   
   140006eff:	int3   
   140006f00:	int3   
   140006f01:	int3   
   140006f02:	int3   
   140006f03:	int3   
   140006f04:	int3   
   140006f05:	int3   
   140006f06:	int3   
   140006f07:	int3   
   140006f08:	int3   
   140006f09:	int3   
   140006f0a:	int3   
   140006f0b:	int3   
   140006f0c:	int3   
   140006f0d:	int3   
   140006f0e:	int3   
   140006f0f:	int3   
   140006f10:	mov    QWORD PTR [rsp+0x8],rbx
   140006f15:	push   rdi
   140006f16:	sub    rsp,0x20
   140006f1a:	mov    rbx,rcx
   140006f1d:	or     edi,0xffffffff
   140006f20:	lock xadd DWORD PTR [rcx+0x8],edi
   140006f25:	sub    edi,0x1
   140006f28:	jne    0x140006f46
   140006f2a:	test   rcx,rcx
   140006f2d:	je     0x140006f46
   140006f2f:	add    rcx,0x10
   140006f33:	cmp    BYTE PTR [rcx+0x2c],dil
   140006f37:	je     0x140006f3e
   140006f39:	call   0x14000eb30
   140006f3e:	mov    rcx,rbx
   140006f41:	call   0x1400114b8
   140006f46:	mov    eax,edi
   140006f48:	mov    rbx,QWORD PTR [rsp+0x30]
   140006f4d:	add    rsp,0x20
   140006f51:	pop    rdi
   140006f52:	ret    
   140006f53:	int3   
   140006f54:	int3   
   140006f55:	int3   
   140006f56:	int3   
   140006f57:	int3   
   140006f58:	int3   
   140006f59:	int3   
   140006f5a:	int3   
   140006f5b:	int3   
   140006f5c:	int3   
   140006f5d:	int3   
   140006f5e:	int3   
   140006f5f:	int3   
   140006f60:	mov    eax,DWORD PTR [rcx+0xc]
   140006f63:	ret    
   140006f64:	int3   
   140006f65:	int3   
   140006f66:	int3   
   140006f67:	int3   
   140006f68:	int3   
   140006f69:	int3   
   140006f6a:	int3   
   140006f6b:	int3   
   140006f6c:	int3   
   140006f6d:	int3   
   140006f6e:	int3   
   140006f6f:	int3   
   140006f70:	test   rdx,rdx
   140006f73:	jne    0x140006f7b
   140006f75:	mov    eax,0x80070057
   140006f7a:	ret    
   140006f7b:	mov    rax,QWORD PTR [rcx+0x30]
   140006f7f:	mov    QWORD PTR [rdx],rax
   140006f82:	xor    eax,eax
   140006f84:	ret    
   140006f85:	int3   
   140006f86:	int3   
   140006f87:	int3   
   140006f88:	int3   
   140006f89:	int3   
   140006f8a:	int3   
   140006f8b:	int3   
   140006f8c:	int3   
   140006f8d:	int3   
   140006f8e:	int3   
   140006f8f:	int3   
   140006f90:	mov    eax,0x80070002
   140006f95:	ret    
   140006f96:	int3   
   140006f97:	int3   
   140006f98:	int3   
   140006f99:	int3   
   140006f9a:	int3   
   140006f9b:	int3   
   140006f9c:	mov    QWORD PTR [rsp+0x18],r8
   140006fa1:	mov    QWORD PTR [rsp+0x20],r9
   140006fa6:	push   rbx
   140006fa7:	push   rbp
   140006fa8:	push   rsi
   140006fa9:	push   rdi
   140006faa:	sub    rsp,0x28
   140006fae:	xor    ebp,ebp
   140006fb0:	lea    rax,[rdx-0x1]
   140006fb4:	cmp    rax,0x7ffffffe
   140006fba:	mov    rsi,rcx
   140006fbd:	mov    edi,ebp
   140006fbf:	mov    ecx,0x80070057
   140006fc4:	cmova  edi,ecx
   140006fc7:	test   edi,edi
   140006fc9:	js     0x140007000
   140006fcb:	lea    rbx,[rdx-0x1]
   140006fcf:	mov    rcx,rsi
   140006fd2:	mov    rdx,rbx
   140006fd5:	lea    r9,[rsp+0x68]
   140006fda:	mov    edi,ebp
   140006fdc:	call   QWORD PTR [rip+0xb506]        # 0x1400124e8
   140006fe2:	test   eax,eax
   140006fe4:	js     0x140006ff5
   140006fe6:	cdqe   
   140006fe8:	cmp    rax,rbx
   140006feb:	ja     0x140006ff5
   140006fed:	jne    0x140007008
   140006fef:	mov    WORD PTR [rsi+rbx*2],bp
   140006ff3:	jmp    0x140007008
   140006ff5:	mov    WORD PTR [rsi+rbx*2],bp
   140006ff9:	mov    edi,0x8007007a
   140006ffe:	jmp    0x140007008
   140007000:	test   rdx,rdx
   140007003:	je     0x140007008
   140007005:	mov    WORD PTR [rsi],bp
   140007008:	mov    eax,edi
   14000700a:	add    rsp,0x28
   14000700e:	pop    rdi
   14000700f:	pop    rsi
   140007010:	pop    rbp
   140007011:	pop    rbx
   140007012:	ret    
   140007013:	int3   
   140007014:	int3   
   140007015:	int3   
   140007016:	int3   
   140007017:	int3   
   140007018:	int3   
   140007019:	int3   
   14000701a:	int3   
   14000701b:	int3   
   14000701c:	mov    QWORD PTR [rsp+0x10],rbx
   140007021:	push   rbp
   140007022:	push   rsi
   140007023:	push   rdi
   140007024:	push   r12
   140007026:	push   r13
   140007028:	push   r14
   14000702a:	push   r15
   14000702c:	lea    rbp,[rsp-0xb80]
   140007034:	sub    rsp,0xc80
   14000703b:	mov    rax,QWORD PTR [rip+0x14ff6]        # 0x14001c038
   140007042:	xor    rax,rsp
   140007045:	mov    QWORD PTR [rbp+0xb70],rax
   14000704c:	mov    rax,QWORD PTR [rbp+0xbe8]
   140007053:	mov    rdi,rcx
   140007056:	mov    rbx,QWORD PTR [rbp+0xbe0]
   14000705d:	lea    rcx,[rbp+0x172]
   140007064:	mov    QWORD PTR [rbp-0x48],r8
   140007068:	mov    r13d,0x1fe
   14000706e:	movsxd r14,edx
   140007071:	mov    r8d,r13d
   140007074:	xor    edx,edx
   140007076:	mov    QWORD PTR [rbp-0x30],r9
   14000707a:	mov    QWORD PTR [rbp-0x70],rbx
   14000707e:	mov    QWORD PTR [rbp-0x50],rax
   140007082:	call   0x140011e22
   140007087:	lea    rax,[rbp+0x170]
   14000708e:	mov    WORD PTR [rbp+0x3c],0x100
   140007094:	xor    r15d,r15d
   140007097:	mov    QWORD PTR [rbp+0x30],rax
   14000709b:	lea    r12d,[r13+0x2]
   14000709f:	mov    DWORD PTR [rbp+0x40],r15d
   1400070a3:	mov    r8d,r13d
   1400070a6:	mov    DWORD PTR [rbp+0x38],r12d
   1400070aa:	xor    edx,edx
   1400070ac:	mov    WORD PTR [rbp+0x170],r15w
   1400070b4:	lea    rcx,[rbp+0x372]
   1400070bb:	call   0x140011e22
   1400070c0:	lea    rsi,[rbp+0x370]
   1400070c7:	mov    DWORD PTR [rbp+0x0],r12d
   1400070cb:	mov    r8d,r13d
   1400070ce:	mov    QWORD PTR [rbp-0x8],rsi
   1400070d2:	xor    edx,edx
   1400070d4:	mov    WORD PTR [rbp+0x4],0x100
   1400070da:	lea    rcx,[rbp+0x572]
   1400070e1:	mov    DWORD PTR [rbp+0x8],r15d
   1400070e5:	mov    WORD PTR [rbp+0x370],r15w
   1400070ed:	call   0x140011e22
   1400070f2:	xor    eax,eax
   1400070f4:	mov    DWORD PTR [rbp-0x80],r12d
   1400070f8:	lea    r15,[rbp+0x570]
   1400070ff:	mov    DWORD PTR [rbp-0x78],eax
   140007102:	mov    r8d,r13d
   140007105:	mov    WORD PTR [rbp+0x570],ax
   14000710c:	xor    edx,edx
   14000710e:	mov    QWORD PTR [rsp+0x78],r15
   140007113:	lea    rcx,[rbp+0x772]
   14000711a:	mov    WORD PTR [rbp-0x7c],0x100
   140007120:	call   0x140011e22
   140007125:	lea    rax,[rbp+0x770]
   14000712c:	mov    DWORD PTR [rbp+0xa8],r12d
   140007133:	mov    QWORD PTR [rbp+0xa0],rax
   14000713a:	lea    rcx,[rbp+0x972]
   140007141:	xor    eax,eax
   140007143:	mov    WORD PTR [rbp+0xac],0x100
   14000714c:	xor    edx,edx
   14000714e:	mov    DWORD PTR [rbp+0xb0],eax
   140007154:	mov    r8d,0x1fe
   14000715a:	mov    WORD PTR [rbp+0x770],ax
   140007161:	mov    DWORD PTR [rsp+0x48],eax
   140007165:	mov    r12d,eax
   140007168:	mov    r13d,eax
   14000716b:	mov    QWORD PTR [rsp+0x50],rax
   140007170:	mov    DWORD PTR [rsp+0x44],eax
   140007174:	mov    QWORD PTR [rsp+0x38],rax
   140007179:	call   0x140011e22
   14000717e:	xor    eax,eax
   140007180:	mov    WORD PTR [rbp+0x74],0x100
   140007186:	xor    ecx,ecx
   140007188:	mov    QWORD PTR [rbp+0x12a],rax
   14000718f:	mov    QWORD PTR [rbp+0x132],rax
   140007196:	mov    QWORD PTR [rbp+0x13a],rax
   14000719d:	mov    DWORD PTR [rbp+0x142],eax
   1400071a3:	mov    WORD PTR [rbp+0x146],ax
   1400071aa:	lea    edx,[rcx+0x20]
   1400071ad:	lea    rax,[rbp+0x128]
   1400071b4:	mov    WORD PTR [rbp+0x970],cx
   1400071bb:	mov    QWORD PTR [rbp+0x68],rax
   1400071bf:	xor    eax,eax
   1400071c1:	mov    QWORD PTR [rbp+0x14a],rax
   1400071c8:	mov    QWORD PTR [rbp+0x152],rax
   1400071cf:	mov    DWORD PTR [rbp+0x70],edx
   1400071d2:	mov    DWORD PTR [rbp+0x78],ecx
   1400071d5:	mov    WORD PTR [rbp+0x128],cx
   1400071dc:	mov    QWORD PTR [rbp+0x15a],rax
   1400071e3:	mov    DWORD PTR [rbp+0x162],eax
   1400071e9:	mov    WORD PTR [rbp+0x166],ax
   1400071f0:	lea    rax,[rbp+0x148]
   1400071f7:	mov    QWORD PTR [rbp+0xd8],rax
   1400071fe:	mov    DWORD PTR [rbp+0xe0],edx
   140007204:	mov    WORD PTR [rbp+0xe4],0x100
   14000720d:	mov    DWORD PTR [rbp+0xe8],ecx
   140007213:	mov    WORD PTR [rbp+0x148],cx
   14000721a:	cmp    QWORD PTR [rbp-0x48],rcx
   14000721e:	je     0x14000800d
   140007224:	test   rbx,rbx
   140007227:	je     0x14000800d
   14000722d:	mov    QWORD PTR [rdi+0x18],rbx
   140007231:	mov    rcx,rbx
   140007234:	mov    rax,QWORD PTR [rbx]
   140007237:	mov    rax,QWORD PTR [rax+0x8]
   14000723b:	call   QWORD PTR [rip+0xb2ff]        # 0x140012540
   140007241:	mov    rcx,QWORD PTR [rdi+0x18]
   140007245:	lea    rdx,[rdi+0x268]
   14000724c:	mov    rax,QWORD PTR [rcx]
   14000724f:	mov    rax,QWORD PTR [rax+0x20]
   140007253:	call   QWORD PTR [rip+0xb2e7]        # 0x140012540
   140007259:	mov    ebx,eax
   14000725b:	test   eax,eax
   14000725d:	js     0x140008015
   140007263:	lea    r8d,[r13+0x1]
   140007267:	mov    rcx,r14
   14000726a:	mov    DWORD PTR [rsp+0x40],r8d
   14000726f:	mov    eax,r8d
   140007272:	mov    QWORD PTR [rbp-0x58],rax
   140007276:	mov    QWORD PTR [rbp-0x38],rcx
   14000727a:	cmp    r14,r8
   14000727d:	jle    0x140007dd9
   140007283:	or     r10,0xffffffffffffffff
   140007287:	mov    r13d,0x80070057
   14000728d:	xor    r14d,r14d
   140007290:	mov    rdx,QWORD PTR [rbp-0x48]
   140007294:	mov    rdx,QWORD PTR [rdx+rax*8]
   140007298:	test   rdx,rdx
   14000729b:	je     0x1400072d4
   14000729d:	mov    rax,r10
   1400072a0:	inc    rax
   1400072a3:	cmp    WORD PTR [rdx+rax*2],r14w
   1400072a8:	jne    0x1400072a0
   1400072aa:	lea    r8d,[rax+rax*1]
   1400072ae:	mov    BYTE PTR [rsp+0x20],0x1
   1400072b3:	xor    r9d,r9d
   1400072b6:	lea    rcx,[rbp+0x10]
   1400072ba:	call   0x14000eb60
   1400072bf:	mov    rcx,QWORD PTR [rbp-0x38]
   1400072c3:	mov    ebx,eax
   1400072c5:	mov    rax,QWORD PTR [rbp-0x58]
   1400072c9:	or     r10,0xffffffffffffffff
   1400072cd:	mov    r8d,DWORD PTR [rsp+0x40]
   1400072d2:	jmp    0x1400072d7
   1400072d4:	mov    ebx,r13d
   1400072d7:	test   ebx,ebx
   1400072d9:	js     0x140007a3c
   1400072df:	mov    r14,QWORD PTR [rbp+0x30]
   1400072e3:	dec    rax
   1400072e6:	cmp    rax,0x2
   1400072ea:	ja     0x14000734d
   1400072ec:	movzx  eax,WORD PTR [r14]
   1400072f0:	cmp    ax,WORD PTR [rip+0xbcad]        # 0x140012fa4
   1400072f7:	jne    0x140007315
   1400072f9:	movzx  eax,WORD PTR [r14+0x2]
   1400072fe:	cmp    ax,WORD PTR [rip+0xbca1]        # 0x140012fa6
   140007305:	jne    0x140007315
   140007307:	movzx  eax,WORD PTR [r14+0x4]
   14000730c:	cmp    ax,WORD PTR [rip+0xbc95]        # 0x140012fa8
   140007313:	je     0x14000733e
   140007315:	movzx  eax,WORD PTR [r14]
   140007319:	cmp    ax,WORD PTR [rip+0xbc8c]        # 0x140012fac
   140007320:	jne    0x14000734d
   140007322:	movzx  eax,WORD PTR [r14+0x2]
   140007327:	cmp    ax,WORD PTR [rip+0xbc80]        # 0x140012fae
   14000732e:	jne    0x14000734d
   140007330:	movzx  eax,WORD PTR [r14+0x4]
   140007335:	cmp    ax,WORD PTR [rip+0xbc74]        # 0x140012fb0
   14000733c:	jne    0x14000734d
   14000733e:	mov    DWORD PTR [rdi+0x3c],0x1
   140007345:	xor    r14d,r14d
   140007348:	jmp    0x1400075e8
   14000734d:	movzx  eax,WORD PTR [r14]
   140007351:	mov    ecx,0xfffd
   140007356:	sub    ax,0x2d
   14000735a:	test   cx,ax
   14000735d:	je     0x140007402
   140007363:	mov    eax,DWORD PTR [rsp+0x48]
   140007367:	inc    eax
   140007369:	mov    DWORD PTR [rsp+0x48],eax
   14000736d:	cmp    eax,0x1
   140007370:	jne    0x14000737b
   140007372:	lea    rdx,[rip+0xbc3f]        # 0x140012fb8
   140007379:	jmp    0x140007399
   14000737b:	cmp    eax,0x2
   14000737e:	jne    0x140007389
   140007380:	lea    rdx,[rip+0xbc41]        # 0x140012fc8
   140007387:	jmp    0x140007399
   140007389:	cmp    eax,0x3
   14000738c:	jne    0x140007c96
   140007392:	lea    rdx,[rip+0xbc47]        # 0x140012fe0
   140007399:	mov    rax,r10
   14000739c:	xor    r15d,r15d
   14000739f:	inc    rax
   1400073a2:	cmp    WORD PTR [rdx+rax*2],r15w
   1400073a7:	jne    0x14000739f
   1400073a9:	lea    r8d,[rax+rax*1]
   1400073ad:	mov    BYTE PTR [rsp+0x20],0x1
   1400073b2:	xor    r9d,r9d
   1400073b5:	lea    rcx,[rbp-0x28]
   1400073b9:	call   0x14000eb60
   1400073be:	mov    ebx,eax
   1400073c0:	test   eax,eax
   1400073c2:	js     0x140007dd1
   1400073c8:	or     rax,0xffffffffffffffff
   1400073cc:	inc    rax
   1400073cf:	cmp    WORD PTR [r14+rax*2],r15w
   1400073d4:	jne    0x1400073cc
   1400073d6:	lea    r8d,[rax+rax*1]
   1400073da:	mov    BYTE PTR [rsp+0x20],0x1
   1400073df:	xor    r9d,r9d
   1400073e2:	lea    rcx,[rsp+0x58]
   1400073e7:	mov    rdx,r14
   1400073ea:	call   0x14000eb60
   1400073ef:	mov    ebx,eax
   1400073f1:	test   eax,eax
   1400073f3:	js     0x140007dd1
   1400073f9:	mov    rsi,QWORD PTR [rbp-0x8]
   1400073fd:	jmp    0x1400075b4
   140007402:	xor    r9d,r9d
   140007405:	mov    BYTE PTR [rbp+0x125],0x1
   14000740c:	lea    rcx,[r14+0x2]
   140007410:	mov    QWORD PTR [rbp+0xf8],r9
   140007417:	lea    r8,[rbp+0xf8]
   14000741e:	mov    edx,r9d
   140007421:	mov    DWORD PTR [rbp+0xf0],edx
   140007427:	mov    QWORD PTR [rbp+0x118],r8
   14000742e:	lea    eax,[r9+0x20]
   140007432:	mov    DWORD PTR [rbp+0x120],eax
   140007438:	mov    al,r9b
   14000743b:	mov    BYTE PTR [rbp+0x124],al
   140007441:	test   rcx,rcx
   140007444:	je     0x140007486
   140007446:	mov    rax,r10
   140007449:	inc    rax
   14000744c:	cmp    WORD PTR [rcx+rax*2],r9w
   140007451:	jne    0x140007449
   140007453:	mov    rdx,rcx
   140007456:	mov    BYTE PTR [rsp+0x20],0x1
   14000745b:	lea    rcx,[rbp-0x28]
   14000745f:	lea    r8d,[rax+rax*1]
   140007463:	call   0x14000eb60
   140007468:	mov    rsi,QWORD PTR [rbp-0x8]
   14000746c:	mov    ebx,eax
   14000746e:	mov    al,BYTE PTR [rbp+0x124]
   140007474:	xor    r9d,r9d
   140007477:	mov    r8,QWORD PTR [rbp+0x118]
   14000747e:	mov    edx,DWORD PTR [rbp+0xf0]
   140007484:	jmp    0x140007489
   140007486:	mov    ebx,r13d
   140007489:	test   ebx,ebx
   14000748b:	js     0x140007dbe
   140007491:	mov    r14,rsi
   140007494:	cmp    WORD PTR [rsi],r9w
   140007498:	je     0x140007590
   14000749e:	movzx  r15d,WORD PTR [r14]
   1400074a2:	cmp    r15w,0x27
   1400074a7:	je     0x1400074b4
   1400074a9:	cmp    r15w,0x22
   1400074ae:	jne    0x14000755a
   1400074b4:	test   edx,edx
   1400074b6:	jne    0x1400074be
   1400074b8:	movzx  eax,r9w
   1400074bc:	jmp    0x1400074c6
   1400074be:	lea    eax,[rdx-0x1]
   1400074c1:	movzx  eax,WORD PTR [r8+rax*2]
   1400074c6:	cmp    ax,r15w
   1400074ca:	jne    0x1400074e1
   1400074cc:	xor    r15d,r15d
   1400074cf:	test   edx,edx
   1400074d1:	je     0x14000755d
   1400074d7:	dec    edx
   1400074d9:	mov    DWORD PTR [rbp+0xf0],edx
   1400074df:	jmp    0x14000755d
   1400074e1:	lea    eax,[rdx*2+0x1]
   1400074e8:	cmp    eax,DWORD PTR [rbp+0x120]
   1400074ee:	jbe    0x14000752e
   1400074f0:	mov    edx,eax
   1400074f2:	lea    rcx,[rbp+0xf8]
   1400074f9:	call   0x14000ea50
   1400074fe:	test   al,al
   140007500:	jne    0x140007521
   140007502:	call   QWORD PTR [rip+0xadf0]        # 0x1400122f8
   140007508:	mov    edx,DWORD PTR [rbp+0xf0]
   14000750e:	xor    r15d,r15d
   140007511:	movzx  ebx,ax
   140007514:	or     ebx,0x80070000
   14000751a:	test   eax,eax
   14000751c:	cmovle ebx,eax
   14000751f:	jmp    0x140007549
   140007521:	mov    r8,QWORD PTR [rbp+0x118]
   140007528:	mov    edx,DWORD PTR [rbp+0xf0]
   14000752e:	mov    eax,edx
   140007530:	mov    WORD PTR [r8+rax*2],r15w
   140007535:	mov    edx,DWORD PTR [rbp+0xf0]
   14000753b:	inc    edx
   14000753d:	xor    r15d,r15d
   140007540:	mov    DWORD PTR [rbp+0xf0],edx
   140007546:	mov    ebx,r15d
   140007549:	test   ebx,ebx
   14000754b:	js     0x140007665
   140007551:	mov    r8,QWORD PTR [rbp+0x118]
   140007558:	jmp    0x14000755d
   14000755a:	xor    r15d,r15d
   14000755d:	cmp    WORD PTR [r14],0x3a
   140007562:	jne    0x14000757a
   140007564:	test   edx,edx
   140007566:	je     0x14000760d
   14000756c:	lea    eax,[rdx-0x1]
   14000756f:	cmp    WORD PTR [r8+rax*2],r15w
   140007574:	je     0x14000760d
   14000757a:	add    r14,0x2
   14000757e:	xor    r9d,r9d
   140007581:	cmp    WORD PTR [r14],r15w
   140007585:	jne    0x14000749e
   14000758b:	mov    r15,QWORD PTR [rsp+0x78]
   140007590:	mov    WORD PTR [r15],r9w
   140007594:	xor    r15d,r15d
   140007597:	mov    DWORD PTR [rbp-0x78],r15d
   14000759b:	cmp    BYTE PTR [rbp+0x124],r15b
   1400075a2:	je     0x1400075b0
   1400075a4:	lea    rcx,[rbp+0xf8]
   1400075ab:	call   0x14000eb30
   1400075b0:	mov    r14,QWORD PTR [rbp+0x30]
   1400075b4:	mov    r15d,DWORD PTR [rbp+0x8]
   1400075b8:	test   r15d,r15d
   1400075bb:	jne    0x140007671
   1400075c1:	cmp    WORD PTR [r14],0x2d
   1400075c6:	mov    r15,QWORD PTR [rsp+0x78]
   1400075cb:	jne    0x1400075d4
   1400075cd:	mov    DWORD PTR [rdi+0x28],0x1
   1400075d4:	xor    r14d,r14d
   1400075d7:	test   ebx,ebx
   1400075d9:	js     0x140007a3c
   1400075df:	mov    rcx,QWORD PTR [rbp-0x38]
   1400075e3:	mov    r8d,DWORD PTR [rsp+0x40]
   1400075e8:	mov    rax,QWORD PTR [rbp-0x58]
   1400075ec:	inc    r8d
   1400075ef:	inc    rax
   1400075f2:	mov    DWORD PTR [rsp+0x40],r8d
   1400075f7:	mov    QWORD PTR [rbp-0x58],rax
   1400075fb:	cmp    rax,rcx
   1400075fe:	jge    0x140007d0c
   140007604:	or     r10,0xffffffffffffffff
   140007608:	jmp    0x140007290
   14000760d:	mov    eax,DWORD PTR [rbp+0x0]
   140007610:	mov    rcx,r14
   140007613:	sub    rcx,rsi
   140007616:	shr    eax,1
   140007618:	sar    rcx,1
   14000761b:	cmp    ecx,eax
   14000761d:	jae    0x140007629
   14000761f:	mov    eax,ecx
   140007621:	mov    DWORD PTR [rbp+0x8],ecx
   140007624:	mov    WORD PTR [rsi+rax*2],r15w
   140007629:	lea    rdx,[r14+0x2]
   14000762d:	test   rdx,rdx
   140007630:	je     0x14000765a
   140007632:	or     rax,0xffffffffffffffff
   140007636:	inc    rax
   140007639:	cmp    WORD PTR [rdx+rax*2],r15w
   14000763e:	jne    0x140007636
   140007640:	lea    r8d,[rax+rax*1]
   140007644:	mov    BYTE PTR [rsp+0x20],0x1
   140007649:	xor    r9d,r9d
   14000764c:	lea    rcx,[rsp+0x58]
   140007651:	call   0x14000eb60
   140007656:	mov    ebx,eax
   140007658:	jmp    0x14000765d
   14000765a:	mov    ebx,r13d
   14000765d:	test   ebx,ebx
   14000765f:	jns    0x14000759b
   140007665:	cmp    BYTE PTR [rbp+0x124],r15b
   14000766c:	jmp    0x140007dc3
   140007671:	lea    rdx,[rip+0xb980]        # 0x140012ff8
   140007678:	mov    rcx,rsi
   14000767b:	call   QWORD PTR [rip+0xae7f]        # 0x140012500
   140007681:	xor    r14d,r14d
   140007684:	test   eax,eax
   140007686:	je     0x140007c8a
   14000768c:	lea    rdx,[rip+0xb96d]        # 0x140013000
   140007693:	mov    rcx,rsi
   140007696:	call   QWORD PTR [rip+0xae64]        # 0x140012500
   14000769c:	test   eax,eax
   14000769e:	je     0x140007c8a
   1400076a4:	lea    rdx,[rip+0xb90d]        # 0x140012fb8
   1400076ab:	mov    rcx,rsi
   1400076ae:	call   QWORD PTR [rip+0xae4c]        # 0x140012500
   1400076b4:	test   eax,eax
   1400076b6:	jne    0x1400076d2
   1400076b8:	mov    r15,QWORD PTR [rsp+0x78]
   1400076bd:	mov    rcx,r15
   1400076c0:	call   QWORD PTR [rip+0xadfa]        # 0x1400124c0
   1400076c6:	lea    rcx,[rdi+0x188]
   1400076cd:	jmp    0x1400079a3
   1400076d2:	lea    rdx,[rip+0xb8ef]        # 0x140012fc8
   1400076d9:	mov    rcx,rsi
   1400076dc:	call   QWORD PTR [rip+0xae1e]        # 0x140012500
   1400076e2:	test   eax,eax
   1400076e4:	jne    0x140007700
   1400076e6:	mov    r15,QWORD PTR [rsp+0x78]
   1400076eb:	mov    rcx,r15
   1400076ee:	call   QWORD PTR [rip+0xadcc]        # 0x1400124c0
   1400076f4:	lea    rcx,[rdi+0x1c0]
   1400076fb:	jmp    0x1400079a3
   140007700:	lea    rdx,[rip+0xb8d9]        # 0x140012fe0
   140007707:	mov    rcx,rsi
   14000770a:	call   QWORD PTR [rip+0xadf0]        # 0x140012500
   140007710:	test   eax,eax
   140007712:	jne    0x140007720
   140007714:	lea    rcx,[rdi+0x1f8]
   14000771b:	jmp    0x14000799e
   140007720:	lea    rdx,[rip+0xb8e1]        # 0x140013008
   140007727:	mov    rcx,rsi
   14000772a:	call   QWORD PTR [rip+0xadd0]        # 0x140012500
   140007730:	test   eax,eax
   140007732:	je     0x140007c56
   140007738:	lea    rdx,[rip+0xb8d9]        # 0x140013018
   14000773f:	mov    rcx,rsi
   140007742:	call   QWORD PTR [rip+0xadb8]        # 0x140012500
   140007748:	test   eax,eax
   14000774a:	je     0x140007c56
   140007750:	lea    rdx,[rip+0xb8c9]        # 0x140013020
   140007757:	mov    rcx,rsi
   14000775a:	call   QWORD PTR [rip+0xada0]        # 0x140012500
   140007760:	test   eax,eax
   140007762:	je     0x140007c56
   140007768:	lea    rdx,[rip+0xb8c9]        # 0x140013038
   14000776f:	mov    rcx,rsi
   140007772:	call   QWORD PTR [rip+0xad88]        # 0x140012500
   140007778:	test   eax,eax
   14000777a:	je     0x140007c56
   140007780:	lea    rdx,[rip+0xb8c1]        # 0x140013048
   140007787:	mov    rcx,rsi
   14000778a:	call   QWORD PTR [rip+0xad70]        # 0x140012500
   140007790:	test   eax,eax
   140007792:	je     0x140007c4d
   140007798:	lea    rdx,[rip+0xb8bd]        # 0x14001305c
   14000779f:	mov    rcx,rsi
   1400077a2:	call   QWORD PTR [rip+0xad58]        # 0x140012500
   1400077a8:	test   eax,eax
   1400077aa:	je     0x140007c4d
   1400077b0:	lea    rdx,[rip+0xb8b1]        # 0x140013068
   1400077b7:	mov    rcx,rsi
   1400077ba:	call   QWORD PTR [rip+0xad40]        # 0x140012500
   1400077c0:	test   eax,eax
   1400077c2:	je     0x140007c4d
   1400077c8:	lea    rdx,[rip+0xb8b1]        # 0x140013080
   1400077cf:	mov    rcx,rsi
   1400077d2:	call   QWORD PTR [rip+0xad28]        # 0x140012500
   1400077d8:	test   eax,eax
   1400077da:	je     0x140007c41
   1400077e0:	lea    rdx,[rip+0xb8a9]        # 0x140013090
   1400077e7:	mov    rcx,rsi
   1400077ea:	call   QWORD PTR [rip+0xad10]        # 0x140012500
   1400077f0:	test   eax,eax
   1400077f2:	je     0x140007c41
   1400077f8:	lea    rdx,[rip+0xb899]        # 0x140013098
   1400077ff:	mov    rcx,rsi
   140007802:	call   QWORD PTR [rip+0xacf8]        # 0x140012500
   140007808:	test   eax,eax
   14000780a:	je     0x140007c03
   140007810:	lea    rdx,[rip+0xb891]        # 0x1400130a8
   140007817:	mov    rcx,rsi
   14000781a:	call   QWORD PTR [rip+0xace0]        # 0x140012500
   140007820:	test   eax,eax
   140007822:	je     0x140007c03
   140007828:	lea    rdx,[rip+0xb881]        # 0x1400130b0
   14000782f:	mov    rcx,rsi
   140007832:	call   QWORD PTR [rip+0xacc8]        # 0x140012500
   140007838:	test   eax,eax
   14000783a:	je     0x140007c03
   140007840:	lea    rdx,[rip+0xb881]        # 0x1400130c8
   140007847:	mov    rcx,rsi
   14000784a:	call   QWORD PTR [rip+0xacb0]        # 0x140012500
   140007850:	test   eax,eax
   140007852:	je     0x140007bfa
   140007858:	lea    rdx,[rip+0xb875]        # 0x1400130d4
   14000785f:	mov    rcx,rsi
   140007862:	call   QWORD PTR [rip+0xac98]        # 0x140012500
   140007868:	test   eax,eax
   14000786a:	je     0x140007bfa
   140007870:	lea    rdx,[rip+0xb869]        # 0x1400130e0
   140007877:	mov    rcx,rsi
   14000787a:	call   QWORD PTR [rip+0xac80]        # 0x140012500
   140007880:	test   eax,eax
   140007882:	je     0x140007bfa
   140007888:	lea    rdx,[rip+0xb859]        # 0x1400130e8
   14000788f:	mov    rcx,rsi
   140007892:	call   QWORD PTR [rip+0xac68]        # 0x140012500
   140007898:	test   eax,eax
   14000789a:	jne    0x1400078a8
   14000789c:	mov    DWORD PTR [rdi+0x2c],0x1
   1400078a3:	jmp    0x140007be7
   1400078a8:	lea    rdx,[rip+0xb849]        # 0x1400130f8
   1400078af:	mov    rcx,rsi
   1400078b2:	call   QWORD PTR [rip+0xac48]        # 0x140012500
   1400078b8:	test   eax,eax
   1400078ba:	je     0x140007bf1
   1400078c0:	lea    rdx,[rip+0xb841]        # 0x140013108
   1400078c7:	mov    rcx,rsi
   1400078ca:	call   QWORD PTR [rip+0xac30]        # 0x140012500
   1400078d0:	test   eax,eax
   1400078d2:	je     0x140007bf1
   1400078d8:	lea    rdx,[rip+0xb831]        # 0x140013110
   1400078df:	mov    rcx,rsi
   1400078e2:	call   QWORD PTR [rip+0xac18]        # 0x140012500
   1400078e8:	test   eax,eax
   1400078ea:	je     0x140007bf1
   1400078f0:	lea    rdx,[rip+0xb829]        # 0x140013120
   1400078f7:	mov    rcx,rsi
   1400078fa:	call   QWORD PTR [rip+0xac00]        # 0x140012500
   140007900:	test   eax,eax
   140007902:	je     0x140007bbb
   140007908:	lea    rdx,[rip+0xb821]        # 0x140013130
   14000790f:	mov    rcx,rsi
   140007912:	call   QWORD PTR [rip+0xabe8]        # 0x140012500
   140007918:	test   eax,eax
   14000791a:	je     0x140007bbb
   140007920:	lea    rdx,[rip+0xb819]        # 0x140013140
   140007927:	mov    rcx,rsi
   14000792a:	call   QWORD PTR [rip+0xabd0]        # 0x140012500
   140007930:	xor    r15d,r15d
   140007933:	test   eax,eax
   140007935:	je     0x140007a44
   14000793b:	lea    rdx,[rip+0xb80a]        # 0x14001314c
   140007942:	mov    rcx,rsi
   140007945:	call   QWORD PTR [rip+0xabb5]        # 0x140012500
   14000794b:	test   eax,eax
   14000794d:	je     0x140007a44
   140007953:	lea    rdx,[rip+0xb7fe]        # 0x140013158
   14000795a:	mov    rcx,rsi
   14000795d:	call   QWORD PTR [rip+0xab9d]        # 0x140012500
   140007963:	test   eax,eax
   140007965:	je     0x140007a44
   14000796b:	lea    rdx,[rip+0xb7f6]        # 0x140013168
   140007972:	mov    rcx,rsi
   140007975:	call   QWORD PTR [rip+0xab85]        # 0x140012500
   14000797b:	test   eax,eax
   14000797d:	je     0x140007a44
   140007983:	lea    rdx,[rip+0xb7ee]        # 0x140013178
   14000798a:	mov    rcx,rsi
   14000798d:	call   QWORD PTR [rip+0xab6d]        # 0x140012500
   140007993:	test   eax,eax
   140007995:	jne    0x1400079c1
   140007997:	lea    rcx,[rdi+0x230]
   14000799e:	mov    r15,QWORD PTR [rsp+0x78]
   1400079a3:	mov    eax,DWORD PTR [rbp-0x78]
   1400079a6:	xor    r9d,r9d
   1400079a9:	mov    rdx,r15
   1400079ac:	mov    BYTE PTR [rsp+0x20],0x1
   1400079b1:	lea    r8d,[rax+rax*1]
   1400079b5:	call   0x14000eb60
   1400079ba:	mov    ebx,eax
   1400079bc:	jmp    0x1400075d7
   1400079c1:	cmp    WORD PTR [rsi],0x40
   1400079c5:	je     0x140007ccd
   1400079cb:	mov    QWORD PTR [rbp-0x40],r15
   1400079cf:	lea    r14,[rdi+0x268]
   1400079d6:	mov    rcx,QWORD PTR [r14]
   1400079d9:	lea    r8,[rbp-0x40]
   1400079dd:	mov    rdx,rsi
   1400079e0:	mov    rax,QWORD PTR [rcx]
   1400079e3:	mov    rax,QWORD PTR [rax+0x28]
   1400079e7:	call   QWORD PTR [rip+0xab53]        # 0x140012540
   1400079ed:	mov    ebx,eax
   1400079ef:	test   eax,eax
   1400079f1:	jns    0x140007a00
   1400079f3:	cmp    eax,0x80070585
   1400079f8:	jne    0x140007dd1
   1400079fe:	jmp    0x140007a0a
   140007a00:	cmp    QWORD PTR [rbp-0x40],r15
   140007a04:	jne    0x140007cbb
   140007a0a:	cmp    WORD PTR [rsi],0x21
   140007a0e:	mov    rdx,rsi
   140007a11:	jne    0x140007a17
   140007a13:	lea    rdx,[rsi+0x2]
   140007a17:	mov    rcx,QWORD PTR [r14]
   140007a1a:	mov    r15,QWORD PTR [rsp+0x78]
   140007a1f:	mov    r8,r15
   140007a22:	mov    rax,QWORD PTR [rcx]
   140007a25:	mov    rax,QWORD PTR [rax+0x38]
   140007a29:	call   QWORD PTR [rip+0xab11]        # 0x140012540
   140007a2f:	xor    r14d,r14d
   140007a32:	mov    ebx,eax
   140007a34:	test   eax,eax
   140007a36:	jns    0x1400075d7
   140007a3c:	xor    r15d,r15d
   140007a3f:	jmp    0x140007dd1
   140007a44:	mov    DWORD PTR [rsp+0x44],0x1
   140007a4c:	cmp    DWORD PTR [rbp-0x78],r15d
   140007a50:	je     0x140007be7
   140007a56:	mov    r14,QWORD PTR [rsp+0x78]
   140007a5b:	jmp    0x140007a60
   140007a5d:	xor    r15d,r15d
   140007a60:	mov    eax,0x20
   140007a65:	cmp    WORD PTR [r14],ax
   140007a69:	je     0x140007a72
   140007a6b:	cmp    WORD PTR [r14],0x2c
   140007a70:	jne    0x140007a78
   140007a72:	add    r14,0x2
   140007a76:	jmp    0x140007a65
   140007a78:	cmp    WORD PTR [r14],r15w
   140007a7c:	je     0x140007bb1
   140007a82:	lea    rdx,[rip+0xb6eb]        # 0x140013174
   140007a89:	mov    rcx,r14
   140007a8c:	call   QWORD PTR [rip+0xaa26]        # 0x1400124b8
   140007a92:	xor    ecx,ecx
   140007a94:	mov    r15,rax
   140007a97:	test   rax,rax
   140007a9a:	je     0x140007aab
   140007a9c:	mov    rcx,rax
   140007a9f:	sub    rcx,r14
   140007aa2:	sar    rcx,1
   140007aa5:	lea    r8d,[rcx+rcx*1]
   140007aa9:	jmp    0x140007abd
   140007aab:	or     rax,0xffffffffffffffff
   140007aaf:	inc    rax
   140007ab2:	cmp    WORD PTR [r14+rax*2],cx
   140007ab7:	jne    0x140007aaf
   140007ab9:	lea    r8d,[rax+rax*1]
   140007abd:	xor    r9d,r9d
   140007ac0:	mov    BYTE PTR [rsp+0x20],0x1
   140007ac5:	mov    rdx,r14
   140007ac8:	lea    rcx,[rbp+0x80]
   140007acf:	call   0x14000eb60
   140007ad4:	mov    ebx,eax
   140007ad6:	test   eax,eax
   140007ad8:	js     0x140007a3c
   140007ade:	cmp    DWORD PTR [rdi+0x110],0x19
   140007ae5:	jae    0x140007cfc
   140007aeb:	mov    r14d,DWORD PTR [rbp+0xb0]
   140007af2:	mov    rcx,0xffffffffffffffff
   140007af9:	inc    r14d
   140007afc:	mov    eax,0x2
   140007b01:	mul    r14
   140007b04:	cmovo  rax,rcx
   140007b08:	mov    rcx,rax
   140007b0b:	call   0x140011478
   140007b10:	mov    ecx,DWORD PTR [rdi+0x110]
   140007b16:	xor    r9d,r9d
   140007b19:	mov    QWORD PTR [rdi+rcx*8+0x48],rax
   140007b1e:	mov    eax,DWORD PTR [rdi+0x110]
   140007b24:	mov    rcx,QWORD PTR [rdi+rax*8+0x48]
   140007b29:	test   rcx,rcx
   140007b2c:	je     0x140007cef
   140007b32:	lea    rax,[r14-0x1]
   140007b36:	mov    edx,0x7ffffffe
   140007b3b:	cmp    rax,rdx
   140007b3e:	mov    ebx,r9d
   140007b41:	cmova  ebx,r13d
   140007b45:	test   ebx,ebx
   140007b47:	js     0x140007b8e
   140007b49:	mov    ebx,r9d
   140007b4c:	test   r14,r14
   140007b4f:	je     0x140007b83
   140007b51:	mov    r8,QWORD PTR [rbp+0xa0]
   140007b58:	sub    rdx,r14
   140007b5b:	sub    r8,rcx
   140007b5e:	lea    rax,[rdx+r14*1]
   140007b62:	test   rax,rax
   140007b65:	je     0x140007b7e
   140007b67:	movzx  eax,WORD PTR [r8+rcx*1]
   140007b6c:	test   ax,ax
   140007b6f:	je     0x140007b7e
   140007b71:	mov    WORD PTR [rcx],ax
   140007b74:	add    rcx,0x2
   140007b78:	sub    r14,0x1
   140007b7c:	jne    0x140007b5e
   140007b7e:	test   r14,r14
   140007b81:	jne    0x140007b93
   140007b83:	sub    rcx,0x2
   140007b87:	mov    ebx,0x8007007a
   140007b8c:	jmp    0x140007b93
   140007b8e:	test   r14,r14
   140007b91:	je     0x140007b97
   140007b93:	mov    WORD PTR [rcx],r9w
   140007b97:	test   ebx,ebx
   140007b99:	js     0x140007a3c
   140007b9f:	inc    DWORD PTR [rdi+0x110]
   140007ba5:	mov    r14,r15
   140007ba8:	test   r15,r15
   140007bab:	jne    0x140007a5d
   140007bb1:	mov    r15,QWORD PTR [rsp+0x78]
   140007bb6:	jmp    0x1400075d4
   140007bbb:	lea    r8d,[r15+r15*1]
   140007bbf:	mov    BYTE PTR [rsp+0x20],0x1
   140007bc4:	xor    r9d,r9d
   140007bc7:	lea    rcx,[rbp+0x48]
   140007bcb:	mov    rdx,rsi
   140007bce:	call   0x14000eb60
   140007bd3:	xor    r15d,r15d
   140007bd6:	mov    ebx,eax
   140007bd8:	test   eax,eax
   140007bda:	js     0x140007dd1
   140007be0:	mov    DWORD PTR [rdi+0x38],0x1
   140007be7:	mov    r15,QWORD PTR [rsp+0x78]
   140007bec:	jmp    0x1400075d7
   140007bf1:	mov    DWORD PTR [rdi+0x34],0x1
   140007bf8:	jmp    0x140007be7
   140007bfa:	mov    DWORD PTR [rdi+0x24],0x1
   140007c01:	jmp    0x140007be7
   140007c03:	mov    r15,QWORD PTR [rsp+0x78]
   140007c08:	lea    rdx,[rip+0xb4b1]        # 0x1400130c0
   140007c0f:	mov    rcx,r15
   140007c12:	mov    DWORD PTR [rdi+0x114],0x1
   140007c1c:	call   QWORD PTR [rip+0xa8de]        # 0x140012500
   140007c22:	test   eax,eax
   140007c24:	jne    0x140007c32
   140007c26:	mov    DWORD PTR [rdi+0x2c],0x1
   140007c2d:	jmp    0x1400075d7
   140007c32:	cmp    DWORD PTR [rbp-0x78],r14d
   140007c36:	je     0x1400075d7
   140007c3c:	mov    ebx,r13d
   140007c3f:	jmp    0x140007cb3
   140007c41:	lea    rcx,[rdi+0x118]
   140007c48:	jmp    0x14000799e
   140007c4d:	mov    DWORD PTR [rdi+0x30],0x1
   140007c54:	jmp    0x140007be7
   140007c56:	lea    r8d,[r15+r15*1]
   140007c5a:	mov    BYTE PTR [rsp+0x20],0x1
   140007c5f:	xor    r9d,r9d
   140007c62:	lea    rcx,[rbp+0xb8]
   140007c69:	mov    rdx,rsi
   140007c6c:	call   0x14000eb60
   140007c71:	xor    r15d,r15d
   140007c74:	mov    ebx,eax
   140007c76:	test   eax,eax
   140007c78:	js     0x140007dd1
   140007c7e:	lea    rcx,[rdi+0x150]
   140007c85:	jmp    0x14000799e
   140007c8a:	mov    DWORD PTR [rdi+0x28],0x1
   140007c91:	jmp    0x140007be7
   140007c96:	mov    ebx,r13d
   140007c99:	mov    QWORD PTR [rbp-0x68],r14
   140007c9d:	mov    edx,0xc0000fb9
   140007ca2:	mov    ecx,r13d
   140007ca5:	lea    r8,[rbp-0x68]
   140007ca9:	lea    r9,[rsp+0x38]
   140007cae:	call   0x140003ef0
   140007cb3:	mov    r13,r12
   140007cb6:	jmp    0x140008015
   140007cbb:	mov    ebx,0x800700b7
   140007cc0:	mov    QWORD PTR [rbp-0x68],rsi
   140007cc4:	mov    ecx,ebx
   140007cc6:	mov    edx,0xc0000fbf
   140007ccb:	jmp    0x140007cdc
   140007ccd:	mov    QWORD PTR [rbp-0x68],rsi
   140007cd1:	mov    edx,0xc0000fbc
   140007cd6:	mov    ebx,r13d
   140007cd9:	mov    ecx,r13d
   140007cdc:	lea    r9,[rsp+0x38]
   140007ce1:	lea    r8,[rbp-0x68]
   140007ce5:	call   0x140003ef0
   140007cea:	jmp    0x140007dd1
   140007cef:	mov    ebx,0x80070008
   140007cf4:	mov    r13,r9
   140007cf7:	jmp    0x140008015
   140007cfc:	mov    eax,0x8007007a
   140007d01:	mov    edx,0xc0000fbb
   140007d06:	mov    ebx,eax
   140007d08:	mov    ecx,eax
   140007d0a:	jmp    0x140007ca5
   140007d0c:	mov    r14d,DWORD PTR [rsp+0x44]
   140007d11:	xor    r15d,r15d
   140007d14:	test   r14d,r14d
   140007d17:	je     0x140007d2f
   140007d19:	cmp    DWORD PTR [rdi+0x114],r15d
   140007d20:	jne    0x140007d28
   140007d22:	cmp    DWORD PTR [rdi+0x24],r15d
   140007d26:	je     0x140007d2f
   140007d28:	mov    edx,0xc0000fba
   140007d2d:	jmp    0x140007cd6
   140007d2f:	cmp    DWORD PTR [rbp+0x78],r15d
   140007d33:	je     0x140007db9
   140007d39:	cmp    DWORD PTR [rbp+0xe8],r15d
   140007d40:	mov    r15,QWORD PTR [rbp-0x50]
   140007d44:	mov    rsi,QWORD PTR [rbp-0x70]
   140007d48:	je     0x140007d7b
   140007d4a:	mov    rax,QWORD PTR [rsi]
   140007d4d:	mov    edx,r13d
   140007d50:	mov    r9,QWORD PTR [rbp+0xd8]
   140007d57:	mov    rcx,rsi
   140007d5a:	mov    r8,QWORD PTR [rbp+0x68]
   140007d5e:	mov    QWORD PTR [rsp+0x20],r15
   140007d63:	mov    rax,QWORD PTR [rax+0x18]
   140007d67:	call   QWORD PTR [rip+0xa7d3]        # 0x140012540
   140007d6d:	xor    ecx,ecx
   140007d6f:	mov    ebx,eax
   140007d71:	test   eax,eax
   140007d73:	js     0x140007a3c
   140007d79:	jmp    0x140007d7d
   140007d7b:	xor    ecx,ecx
   140007d7d:	cmp    DWORD PTR [rdi+0x260],ecx
   140007d83:	je     0x140007db6
   140007d85:	mov    rax,QWORD PTR [rsi]
   140007d88:	mov    edx,r13d
   140007d8b:	mov    r9,QWORD PTR [rdi+0x250]
   140007d92:	mov    rcx,rsi
   140007d95:	mov    r8,QWORD PTR [rbp+0x68]
   140007d99:	mov    QWORD PTR [rsp+0x20],r15
   140007d9e:	mov    rax,QWORD PTR [rax+0x18]
   140007da2:	call   QWORD PTR [rip+0xa798]        # 0x140012540
   140007da8:	xor    r15d,r15d
   140007dab:	mov    ebx,eax
   140007dad:	test   eax,eax
   140007daf:	js     0x140007dd1
   140007db1:	mov    r13,r12
   140007db4:	jmp    0x140007de3
   140007db6:	xor    r15d,r15d
   140007db9:	mov    r13,r12
   140007dbc:	jmp    0x140007ddf
   140007dbe:	xor    r15d,r15d
   140007dc1:	test   al,al
   140007dc3:	je     0x140007dd1
   140007dc5:	lea    rcx,[rbp+0xf8]
   140007dcc:	call   0x14000eb30
   140007dd1:	mov    r13,r12
   140007dd4:	jmp    0x140008018
   140007dd9:	mov    r14d,r12d
   140007ddc:	xor    r15d,r15d
   140007ddf:	mov    rsi,QWORD PTR [rbp-0x70]
   140007de3:	cmp    DWORD PTR [rdi+0x1f0],r15d
   140007dea:	jne    0x140007e36
   140007dec:	cmp    DWORD PTR [rdi+0x1b8],r15d
   140007df3:	je     0x140007e36
   140007df5:	mov    r8d,DWORD PTR [rdi+0x1b8]
   140007dfc:	lea    rcx,[rdi+0x1c0]
   140007e03:	mov    rdx,QWORD PTR [rdi+0x1a8]
   140007e0a:	add    r8d,r8d
   140007e0d:	xor    r9d,r9d
   140007e10:	mov    BYTE PTR [rsp+0x20],0x1
   140007e15:	call   0x14000eb60
   140007e1a:	mov    ebx,eax
   140007e1c:	test   eax,eax
   140007e1e:	js     0x140008018
   140007e24:	mov    rax,QWORD PTR [rdi+0x1a8]
   140007e2b:	mov    WORD PTR [rax],r15w
   140007e2f:	mov    DWORD PTR [rdi+0x1b8],r15d
   140007e36:	mov    DWORD PTR [rdi+0x40],r15d
   140007e3a:	cmp    DWORD PTR [rdi+0x114],r15d
   140007e41:	je     0x140007e4c
   140007e43:	mov    DWORD PTR [rdi+0x40],0x5
   140007e4a:	jmp    0x140007eca
   140007e4c:	cmp    DWORD PTR [rdi+0x110],0x1
   140007e53:	jne    0x140007ea3
   140007e55:	mov    rcx,QWORD PTR [rdi+0x48]
   140007e59:	lea    rdx,[rip+0xb260]        # 0x1400130c0
   140007e60:	call   QWORD PTR [rip+0xa69a]        # 0x140012500
   140007e66:	test   eax,eax
   140007e68:	je     0x140007e7f
   140007e6a:	mov    rcx,QWORD PTR [rdi+0x48]
   140007e6e:	lea    rdx,[rip+0xb323]        # 0x140013198
   140007e75:	call   QWORD PTR [rip+0xa685]        # 0x140012500
   140007e7b:	test   eax,eax
   140007e7d:	jne    0x140007ea3
   140007e7f:	mov    rcx,QWORD PTR [rdi+0x48]
   140007e83:	call   0x1400114b8
   140007e88:	mov    QWORD PTR [rdi+0x48],r15
   140007e8c:	mov    DWORD PTR [rdi+0x110],r15d
   140007e93:	mov    DWORD PTR [rdi+0x40],0x4
   140007e9a:	mov    DWORD PTR [rdi+0x2c],0x1
   140007ea1:	jmp    0x140007eca
   140007ea3:	mov    eax,DWORD PTR [rdi+0x110]
   140007ea9:	cmp    eax,0x1
   140007eac:	jne    0x140007eb3
   140007eae:	mov    DWORD PTR [rdi+0x40],eax
   140007eb1:	jmp    0x140007eca
   140007eb3:	jb     0x140007ebe
   140007eb5:	mov    DWORD PTR [rdi+0x40],0x2
   140007ebc:	jmp    0x140007eca
   140007ebe:	test   r14d,r14d
   140007ec1:	je     0x140007eca
   140007ec3:	mov    DWORD PTR [rdi+0x40],0x3
   140007eca:	cmp    DWORD PTR [rdi+0x28],r15d
   140007ece:	je     0x140008001
   140007ed4:	mov    rbx,QWORD PTR [rbp-0x30]
   140007ed8:	test   rbx,rbx
   140007edb:	je     0x140008001
   140007ee1:	mov    rcx,rbx
   140007ee4:	call   QWORD PTR [rip+0xa5c6]        # 0x1400124b0
   140007eea:	test   eax,eax
   140007eec:	jne    0x140008001
   140007ef2:	lea    ecx,[rax+0x18]
   140007ef5:	call   0x140011478
   140007efa:	mov    r13,rax
   140007efd:	test   rax,rax
   140007f00:	je     0x140007f1b
   140007f02:	lea    rax,[rip+0xa19f]        # 0x1400120a8
   140007f09:	mov    DWORD PTR [r13+0x10],0x1
   140007f11:	mov    QWORD PTR [r13+0x0],rax
   140007f15:	mov    QWORD PTR [r13+0x8],rbx
   140007f19:	jmp    0x140007f1e
   140007f1b:	mov    r13,r15
   140007f1e:	test   r13,r13
   140007f21:	jne    0x140007f2d
   140007f23:	mov    ebx,0x80070008
   140007f28:	jmp    0x140008018
   140007f2d:	mov    ecx,0x28
   140007f32:	call   0x140011478
   140007f37:	mov    r12,rax
   140007f3a:	test   rax,rax
   140007f3d:	je     0x140007f71
   140007f3f:	and    QWORD PTR [r12+0x18],0x0
   140007f45:	lea    rax,[rip+0xa154]        # 0x1400120a0
   140007f4c:	mov    QWORD PTR [r12],rax
   140007f50:	mov    rcx,rsi
   140007f53:	mov    QWORD PTR [r12+0x8],r15
   140007f58:	mov    QWORD PTR [r12+0x10],r15
   140007f5d:	mov    QWORD PTR [r12+0x20],rsi
   140007f62:	mov    rax,QWORD PTR [rsi]
   140007f65:	mov    rax,QWORD PTR [rax+0x8]
   140007f69:	call   QWORD PTR [rip+0xa5d1]        # 0x140012540
   140007f6f:	jmp    0x140007f74
   140007f71:	mov    r12,r15
   140007f74:	test   r12,r12
   140007f77:	je     0x140007f23
   140007f79:	mov    rdx,r13
   140007f7c:	mov    rcx,r12
   140007f7f:	call   0x14000b574
   140007f84:	mov    ebx,eax
   140007f86:	test   eax,eax
   140007f88:	js     0x140008018
   140007f8e:	mov    rcx,QWORD PTR [rdi+0x18]
   140007f92:	lea    rdx,[rsp+0x50]
   140007f97:	mov    rax,QWORD PTR [rcx]
   140007f9a:	mov    rax,QWORD PTR [rax+0x20]
   140007f9e:	call   QWORD PTR [rip+0xa59c]        # 0x140012540
   140007fa4:	mov    ebx,eax
   140007fa6:	test   eax,eax
   140007fa8:	js     0x140008018
   140007faa:	lea    rdx,[rsp+0x50]
   140007faf:	mov    rcx,r12
   140007fb2:	call   0x14000b654
   140007fb7:	mov    ebx,eax
   140007fb9:	test   eax,eax
   140007fbb:	jns    0x140007fd4
   140007fbd:	lea    r9,[rsp+0x38]
   140007fc2:	mov    edx,0xc0000fbd
   140007fc7:	lea    r8,[rbp-0x68]
   140007fcb:	mov    ecx,eax
   140007fcd:	call   0x140003ef0
   140007fd2:	jmp    0x140008018
   140007fd4:	mov    rcx,QWORD PTR [rsp+0x50]
   140007fd9:	mov    rdx,QWORD PTR [rdi+0x268]
   140007fe0:	mov    rax,QWORD PTR [rcx]
   140007fe3:	mov    rax,QWORD PTR [rax+0x48]
   140007fe7:	call   QWORD PTR [rip+0xa553]        # 0x140012540
   140007fed:	mov    ebx,eax
   140007fef:	test   eax,eax
   140007ff1:	js     0x140008018
   140007ff3:	mov    QWORD PTR [rdi+0x10],r13
   140007ff7:	mov    r13,r15
   140007ffa:	mov    QWORD PTR [rdi+0x8],r12
   140007ffe:	mov    r12,r15
   140008001:	mov    ebx,r15d
   140008004:	mov    DWORD PTR [rdi+0x20],0x1
   14000800b:	jmp    0x140008018
   14000800d:	mov    ebx,0x80070057
   140008012:	mov    r13,rcx
   140008015:	xor    r15d,r15d
   140008018:	mov    rax,QWORD PTR [rbp-0x50]
   14000801c:	mov    rdi,QWORD PTR [rsp+0x38]
   140008021:	test   rax,rax
   140008024:	je     0x14000803e
   140008026:	test   rdi,rdi
   140008029:	je     0x14000803e
   14000802b:	mov    QWORD PTR [rax],rdi
   14000802e:	mov    rcx,rdi
   140008031:	mov    rax,QWORD PTR [rdi]
   140008034:	mov    rax,QWORD PTR [rax+0x8]
   140008038:	call   QWORD PTR [rip+0xa502]        # 0x140012540
   14000803e:	test   r12,r12
   140008041:	je     0x140008058
   140008043:	mov    rax,QWORD PTR [r12]
   140008047:	mov    edx,0x1
   14000804c:	mov    rcx,r12
   14000804f:	mov    rax,QWORD PTR [rax]
   140008052:	call   QWORD PTR [rip+0xa4e8]        # 0x140012540
   140008058:	test   r13,r13
   14000805b:	je     0x14000806e
   14000805d:	mov    rax,QWORD PTR [r13+0x0]
   140008061:	mov    rcx,r13
   140008064:	mov    rax,QWORD PTR [rax+0x10]
   140008068:	call   QWORD PTR [rip+0xa4d2]        # 0x140012540
   14000806e:	mov    rcx,QWORD PTR [rsp+0x50]
   140008073:	test   rcx,rcx
   140008076:	je     0x14000808a
   140008078:	mov    rax,QWORD PTR [rcx]
   14000807b:	mov    rax,QWORD PTR [rax+0x10]
   14000807f:	call   QWORD PTR [rip+0xa4bb]        # 0x140012540
   140008085:	mov    QWORD PTR [rsp+0x50],r15
   14000808a:	test   rdi,rdi
   14000808d:	je     0x14000809f
   14000808f:	mov    rax,QWORD PTR [rdi]
   140008092:	mov    rcx,rdi
   140008095:	mov    rax,QWORD PTR [rax+0x10]
   140008099:	call   QWORD PTR [rip+0xa4a1]        # 0x140012540
   14000809f:	cmp    BYTE PTR [rbp+0xe4],r15b
   1400080a6:	je     0x1400080b4
   1400080a8:	lea    rcx,[rbp+0xb8]
   1400080af:	call   0x14000eb30
   1400080b4:	cmp    BYTE PTR [rbp+0x74],r15b
   1400080b8:	je     0x1400080c3
   1400080ba:	lea    rcx,[rbp+0x48]
   1400080be:	call   0x14000eb30
   1400080c3:	cmp    BYTE PTR [rbp+0xac],r15b
   1400080ca:	je     0x1400080d8
   1400080cc:	lea    rcx,[rbp+0x80]
   1400080d3:	call   0x14000eb30
   1400080d8:	cmp    BYTE PTR [rbp-0x7c],r15b
   1400080dc:	je     0x1400080e8
   1400080de:	lea    rcx,[rsp+0x58]
   1400080e3:	call   0x14000eb30
   1400080e8:	cmp    BYTE PTR [rbp+0x4],r15b
   1400080ec:	je     0x1400080f7
   1400080ee:	lea    rcx,[rbp-0x28]
   1400080f2:	call   0x14000eb30
   1400080f7:	cmp    BYTE PTR [rbp+0x3c],r15b
   1400080fb:	je     0x140008106
   1400080fd:	lea    rcx,[rbp+0x10]
   140008101:	call   0x14000eb30
   140008106:	mov    eax,ebx
   140008108:	mov    rcx,QWORD PTR [rbp+0xb70]
   14000810f:	xor    rcx,rsp
   140008112:	call   0x140011800
   140008117:	mov    rbx,QWORD PTR [rsp+0xcc8]
   14000811f:	add    rsp,0xc80
   140008126:	pop    r15
   140008128:	pop    r14
   14000812a:	pop    r13
   14000812c:	pop    r12
   14000812e:	pop    rdi
   14000812f:	pop    rsi
   140008130:	pop    rbp
   140008131:	ret    
   140008132:	int3   
   140008133:	int3   
   140008134:	int3   
   140008135:	int3   
   140008136:	int3   
   140008137:	int3   
   140008138:	mov    QWORD PTR [rsp+0x10],rbx
   14000813d:	mov    QWORD PTR [rsp+0x18],rsi
   140008142:	push   rbp
   140008143:	push   rdi
   140008144:	push   r12
   140008146:	push   r14
   140008148:	push   r15
   14000814a:	mov    rbp,rsp
   14000814d:	sub    rsp,0x40
   140008151:	and    QWORD PTR [rbp-0x8],0x0
   140008156:	mov    rdi,rcx
   140008159:	xor    r10d,r10d
   14000815c:	xor    ecx,ecx
   14000815e:	mov    r14,r9
   140008161:	mov    QWORD PTR [rbp+0x30],r10
   140008165:	mov    r15,r8
   140008168:	mov    QWORD PTR [rbp-0x10],rcx
   14000816c:	mov    r12,rdx
   14000816f:	cmp    DWORD PTR [rdi+0x20],ecx
   140008172:	jne    0x14000817e
   140008174:	mov    ebx,0x80004005
   140008179:	jmp    0x1400082cc
   14000817e:	test   r8,r8
   140008181:	je     0x140008297
   140008187:	test   rdx,rdx
   14000818a:	je     0x140008297
   140008190:	test   r9,r9
   140008193:	je     0x140008297
   140008199:	mov    rsi,QWORD PTR [rbp+0x50]
   14000819d:	cmp    QWORD PTR [rdi+0x8],rcx
   1400081a1:	je     0x140008230
   1400081a7:	mov    rcx,QWORD PTR [rdi+0x18]
   1400081ab:	lea    rdx,[rbp+0x30]
   1400081af:	mov    rax,QWORD PTR [rcx]
   1400081b2:	mov    rax,QWORD PTR [rax+0x20]
   1400081b6:	call   QWORD PTR [rip+0xa384]        # 0x140012540
   1400081bc:	mov    ebx,eax
   1400081be:	test   eax,eax
   1400081c0:	js     0x140008226
   1400081c2:	mov    rax,rsi
   1400081c5:	lea    r8,[rbp+0x30]
   1400081c9:	neg    rax
   1400081cc:	lea    rdx,[rbp-0x8]
   1400081d0:	lea    rax,[rbp-0x10]
   1400081d4:	mov    r9,r12
   1400081d7:	sbb    rcx,rcx
   1400081da:	and    rcx,rax
   1400081dd:	mov    QWORD PTR [rsp+0x20],rcx
   1400081e2:	mov    rcx,QWORD PTR [rdi+0x8]
   1400081e6:	call   0x14000b774
   1400081eb:	mov    ebx,eax
   1400081ed:	test   eax,eax
   1400081ef:	jne    0x140008226
   1400081f1:	mov    rcx,QWORD PTR [rdi+0x268]
   1400081f8:	mov    rdx,QWORD PTR [rbp+0x30]
   1400081fc:	mov    rax,QWORD PTR [rcx]
   1400081ff:	mov    rax,QWORD PTR [rax+0x48]
   140008203:	call   QWORD PTR [rip+0xa337]        # 0x140012540
   140008209:	mov    ebx,eax
   14000820b:	test   eax,eax
   14000820d:	js     0x140008226
   14000820f:	mov    rax,QWORD PTR [rbp-0x8]
   140008213:	xor    r10d,r10d
   140008216:	mov    QWORD PTR [r14],rax
   140008219:	mov    rax,QWORD PTR [rbp+0x30]
   14000821d:	mov    QWORD PTR [r15],rax
   140008220:	mov    QWORD PTR [rbp+0x30],r10
   140008224:	jmp    0x140008267
   140008226:	mov    r10,QWORD PTR [rbp+0x30]
   14000822a:	mov    rcx,QWORD PTR [rbp-0x10]
   14000822e:	jmp    0x14000829c
   140008230:	cmp    DWORD PTR [rdi+0x270],ecx
   140008236:	jbe    0x140008242
   140008238:	mov    ebx,0x1
   14000823d:	jmp    0x1400082cc
   140008242:	mov    rcx,QWORD PTR [rdi+0x268]
   140008249:	mov    rax,QWORD PTR [rdi+0x1e0]
   140008250:	mov    QWORD PTR [r9],rax
   140008253:	mov    QWORD PTR [r8],rcx
   140008256:	mov    rax,QWORD PTR [rcx]
   140008259:	mov    rax,QWORD PTR [rax+0x8]
   14000825d:	call   QWORD PTR [rip+0xa2dd]        # 0x140012540
   140008263:	mov    r10,QWORD PTR [rbp+0x30]
   140008267:	mov    rcx,QWORD PTR [rbp-0x10]
   14000826b:	test   rsi,rsi
   14000826e:	je     0x14000828d
   140008270:	test   rcx,rcx
   140008273:	je     0x14000828d
   140008275:	mov    rax,QWORD PTR [rcx]
   140008278:	mov    QWORD PTR [rsi],rcx
   14000827b:	mov    rax,QWORD PTR [rax+0x8]
   14000827f:	call   QWORD PTR [rip+0xa2bb]        # 0x140012540
   140008285:	mov    r10,QWORD PTR [rbp+0x30]
   140008289:	mov    rcx,QWORD PTR [rbp-0x10]
   14000828d:	xor    ebx,ebx
   14000828f:	inc    DWORD PTR [rdi+0x270]
   140008295:	jmp    0x14000829c
   140008297:	mov    ebx,0x80070057
   14000829c:	test   r10,r10
   14000829f:	je     0x1400082ba
   1400082a1:	mov    rax,QWORD PTR [r10]
   1400082a4:	mov    rcx,r10
   1400082a7:	mov    rax,QWORD PTR [rax+0x10]
   1400082ab:	call   QWORD PTR [rip+0xa28f]        # 0x140012540
   1400082b1:	and    QWORD PTR [rbp+0x30],0x0
   1400082b6:	mov    rcx,QWORD PTR [rbp-0x10]
   1400082ba:	test   rcx,rcx
   1400082bd:	je     0x1400082cc
   1400082bf:	mov    rax,QWORD PTR [rcx]
   1400082c2:	mov    rax,QWORD PTR [rax+0x10]
   1400082c6:	call   QWORD PTR [rip+0xa274]        # 0x140012540
   1400082cc:	lea    r11,[rsp+0x40]
   1400082d1:	mov    eax,ebx
   1400082d3:	mov    rbx,QWORD PTR [r11+0x38]
   1400082d7:	mov    rsi,QWORD PTR [r11+0x40]
   1400082db:	mov    rsp,r11
   1400082de:	pop    r15
   1400082e0:	pop    r14
   1400082e2:	pop    r12
   1400082e4:	pop    rdi
   1400082e5:	pop    rbp
   1400082e6:	ret    
   1400082e7:	int3   
   1400082e8:	int3   
   1400082e9:	int3   
   1400082ea:	int3   
   1400082eb:	int3   
   1400082ec:	int3   
   1400082ed:	int3   
   1400082ee:	int3   
   1400082ef:	int3   
   1400082f0:	rex push rbx
   1400082f2:	sub    rsp,0x20
   1400082f6:	lea    rax,[rip+0x9da3]        # 0x1400120a0
   1400082fd:	mov    rbx,rcx
   140008300:	mov    QWORD PTR [rcx],rax
   140008303:	mov    rcx,QWORD PTR [rcx+0x8]
   140008307:	test   rcx,rcx
   14000830a:	je     0x14000831e
   14000830c:	mov    rax,QWORD PTR [rcx]
   14000830f:	mov    rax,QWORD PTR [rax+0x10]
   140008313:	call   QWORD PTR [rip+0xa227]        # 0x140012540
   140008319:	and    QWORD PTR [rbx+0x8],0x0
   14000831e:	mov    rcx,QWORD PTR [rbx+0x10]
   140008322:	test   rcx,rcx
   140008325:	je     0x140008339
   140008327:	mov    rax,QWORD PTR [rcx]
   14000832a:	mov    rax,QWORD PTR [rax+0x10]
   14000832e:	call   QWORD PTR [rip+0xa20c]        # 0x140012540
   140008334:	and    QWORD PTR [rbx+0x10],0x0
   140008339:	mov    rcx,QWORD PTR [rbx+0x20]
   14000833d:	test   rcx,rcx
   140008340:	je     0x140008354
   140008342:	mov    rax,QWORD PTR [rcx]
   140008345:	mov    rax,QWORD PTR [rax+0x10]
   140008349:	call   QWORD PTR [rip+0xa1f1]        # 0x140012540
   14000834f:	and    QWORD PTR [rbx+0x20],0x0
   140008354:	add    rsp,0x20
   140008358:	pop    rbx
   140008359:	ret    
   14000835a:	int3   
   14000835b:	int3   
   14000835c:	int3   
   14000835d:	int3   
   14000835e:	int3   
   14000835f:	int3   
   140008360:	mov    QWORD PTR [rsp+0x8],rbx
   140008365:	push   rdi
   140008366:	sub    rsp,0x20
   14000836a:	mov    ebx,edx
   14000836c:	mov    rdi,rcx
   14000836f:	call   0x1400082f0
   140008374:	test   bl,0x1
   140008377:	je     0x140008381
   140008379:	mov    rcx,rdi
   14000837c:	call   0x1400114b8
   140008381:	mov    rax,rdi
   140008384:	mov    rbx,QWORD PTR [rsp+0x30]
   140008389:	add    rsp,0x20
   14000838d:	pop    rdi
   14000838e:	ret    
   14000838f:	int3   
   140008390:	int3   
   140008391:	int3   
   140008392:	int3   
   140008393:	int3   
   140008394:	int3   
   140008395:	int3   
   140008396:	int3   
   140008397:	int3   
   140008398:	int3   
   140008399:	int3   
   14000839a:	int3   
   14000839b:	int3   
   14000839c:	int3   
   14000839d:	int3   
   14000839e:	int3   
   14000839f:	int3   
   1400083a0:	rex push rbx
   1400083a2:	sub    rsp,0x20
   1400083a6:	mov    rax,QWORD PTR [rdx]
   1400083a9:	xor    ebx,ebx
   1400083ab:	cmp    rax,QWORD PTR [rip+0xb126]        # 0x1400134d8
   1400083b2:	mov    r9,rcx
   1400083b5:	jne    0x1400083c9
   1400083b7:	mov    rax,QWORD PTR [rdx+0x8]
   1400083bb:	cmp    rax,QWORD PTR [rip+0xb11e]        # 0x1400134e0
   1400083c2:	jne    0x1400083c9
   1400083c4:	mov    QWORD PTR [r8],rcx
   1400083c7:	jmp    0x1400083ed
   1400083c9:	mov    rcx,QWORD PTR [rdx]
   1400083cc:	sub    rcx,QWORD PTR [rip+0xadcd]        # 0x1400131a0
   1400083d3:	jne    0x1400083e0
   1400083d5:	mov    rcx,QWORD PTR [rdx+0x8]
   1400083d9:	sub    rcx,QWORD PTR [rip+0xadc8]        # 0x1400131a8
   1400083e0:	test   rcx,rcx
   1400083e3:	mov    rax,rbx
   1400083e6:	cmove  rax,r9
   1400083ea:	mov    QWORD PTR [r8],rax
   1400083ed:	mov    rcx,QWORD PTR [r8]
   1400083f0:	test   rcx,rcx
   1400083f3:	jne    0x1400083fc
   1400083f5:	mov    ebx,0x80004002
   1400083fa:	jmp    0x140008409
   1400083fc:	mov    rdx,QWORD PTR [rcx]
   1400083ff:	mov    rax,QWORD PTR [rdx+0x8]
   140008403:	call   QWORD PTR [rip+0xa137]        # 0x140012540
   140008409:	mov    eax,ebx
   14000840b:	add    rsp,0x20
   14000840f:	pop    rbx
   140008410:	ret    
   140008411:	int3   
   140008412:	int3   
   140008413:	int3   
   140008414:	int3   
   140008415:	int3   
   140008416:	int3   
   140008417:	int3   
   140008418:	int3   
   140008419:	int3   
   14000841a:	int3   
   14000841b:	int3   
   14000841c:	int3   
   14000841d:	int3   
   14000841e:	int3   
   14000841f:	int3   
   140008420:	mov    eax,0x1
   140008425:	lock xadd DWORD PTR [rcx+0x10],eax
   14000842a:	inc    eax
   14000842c:	ret    
   14000842d:	int3   
   14000842e:	int3   
   14000842f:	int3   
   140008430:	int3   
   140008431:	int3   
   140008432:	int3   
   140008433:	int3   
   140008434:	int3   
   140008435:	int3   
   140008436:	int3   
   140008437:	int3   
   140008438:	int3   
   140008439:	int3   
   14000843a:	int3   
   14000843b:	int3   
   14000843c:	int3   
   14000843d:	int3   
   14000843e:	int3   
   14000843f:	int3   
   140008440:	mov    QWORD PTR [rsp+0x8],rbx
   140008445:	push   rdi
   140008446:	sub    rsp,0x20
   14000844a:	lea    rax,[rip+0x9c57]        # 0x1400120a8
   140008451:	mov    rbx,rcx
   140008454:	mov    QWORD PTR [rcx],rax
   140008457:	mov    edi,edx
   140008459:	mov    rcx,QWORD PTR [rcx+0x8]
   14000845d:	test   rcx,rcx
   140008460:	je     0x14000846d
   140008462:	call   QWORD PTR [rip+0xa028]        # 0x140012490
   140008468:	and    QWORD PTR [rbx+0x8],0x0
   14000846d:	test   dil,0x1
   140008471:	je     0x14000847b
   140008473:	mov    rcx,rbx
   140008476:	call   0x1400114b8
   14000847b:	mov    rax,rbx
   14000847e:	mov    rbx,QWORD PTR [rsp+0x30]
   140008483:	add    rsp,0x20
   140008487:	pop    rdi
   140008488:	ret    
   140008489:	int3   
   14000848a:	int3   
   14000848b:	int3   
   14000848c:	int3   
   14000848d:	int3   
   14000848e:	int3   
   14000848f:	int3   
   140008490:	rex push rbx
   140008492:	sub    rsp,0x20
   140008496:	or     ebx,0xffffffff
   140008499:	lock xadd DWORD PTR [rcx+0x10],ebx
   14000849e:	sub    ebx,0x1
   1400084a1:	jne    0x1400084b8
   1400084a3:	test   rcx,rcx
   1400084a6:	je     0x1400084b8
   1400084a8:	mov    rdx,QWORD PTR [rcx]
   1400084ab:	mov    rax,QWORD PTR [rdx+0x28]
   1400084af:	lea    edx,[rbx+0x1]
   1400084b2:	call   QWORD PTR [rip+0xa088]        # 0x140012540
   1400084b8:	mov    eax,ebx
   1400084ba:	add    rsp,0x20
   1400084be:	pop    rbx
   1400084bf:	ret    
   1400084c0:	int3   
   1400084c1:	int3   
   1400084c2:	int3   
   1400084c3:	int3   
   1400084c4:	int3   
   1400084c5:	int3   
   1400084c6:	int3   
   1400084c7:	int3   
   1400084c8:	int3   
   1400084c9:	int3   
   1400084ca:	int3   
   1400084cb:	int3   
   1400084cc:	int3   
   1400084cd:	int3   
   1400084ce:	int3   
   1400084cf:	int3   
   1400084d0:	mov    rax,rsp
   1400084d3:	mov    QWORD PTR [rax+0x8],rbx
   1400084d7:	mov    QWORD PTR [rax+0x10],rbp
   1400084db:	mov    QWORD PTR [rax+0x18],rsi
   1400084df:	mov    QWORD PTR [rax+0x20],rdi
   1400084e3:	push   r14
   1400084e5:	sub    rsp,0x20
   1400084e9:	mov    rax,rdx
   1400084ec:	mov    esi,r8d
   1400084ef:	mov    r14,r9
   1400084f2:	mov    r8d,r8d
   1400084f5:	mov    r9,QWORD PTR [rcx+0x8]
   1400084f9:	mov    rbp,rcx
   1400084fc:	mov    ebx,0x1
   140008501:	mov    rcx,rax
   140008504:	mov    edx,ebx
   140008506:	call   QWORD PTR [rip+0x9f8c]        # 0x140012498
   14000850c:	mov    rdi,rax
   14000850f:	test   r14,r14
   140008512:	je     0x140008517
   140008514:	mov    DWORD PTR [r14],eax
   140008517:	cmp    rax,rsi
   14000851a:	jae    0x140008536
   14000851c:	mov    rcx,QWORD PTR [rbp+0x8]
   140008520:	call   QWORD PTR [rip+0x9f8a]        # 0x1400124b0
   140008526:	test   eax,eax
   140008528:	jne    0x140008531
   14000852a:	mov    ebx,0x80004005
   14000852f:	jmp    0x140008538
   140008531:	test   rdi,rdi
   140008534:	je     0x140008538
   140008536:	xor    ebx,ebx
   140008538:	mov    rbp,QWORD PTR [rsp+0x38]
   14000853d:	mov    eax,ebx
   14000853f:	mov    rbx,QWORD PTR [rsp+0x30]
   140008544:	mov    rsi,QWORD PTR [rsp+0x40]
   140008549:	mov    rdi,QWORD PTR [rsp+0x48]
   14000854e:	add    rsp,0x20
   140008552:	pop    r14
   140008554:	ret    
   140008555:	int3   
   140008556:	int3   
   140008557:	int3   
   140008558:	int3   
   140008559:	int3   
   14000855a:	int3   
   14000855b:	int3   
   14000855c:	int3   
   14000855d:	int3   
   14000855e:	int3   
   14000855f:	int3   
   140008560:	mov    QWORD PTR [rsp+0x8],rbx
   140008565:	mov    QWORD PTR [rsp+0x10],rsi
   14000856a:	push   rdi
   14000856b:	sub    rsp,0x20
   14000856f:	mov    rax,rdx
   140008572:	mov    ebx,r8d
   140008575:	mov    rdi,r9
   140008578:	mov    r8d,r8d
   14000857b:	mov    r9,QWORD PTR [rcx+0x8]
   14000857f:	mov    rsi,rcx
   140008582:	mov    rcx,rax
   140008585:	mov    edx,0x1
   14000858a:	call   QWORD PTR [rip+0x9f10]        # 0x1400124a0
   140008590:	test   rdi,rdi
   140008593:	je     0x140008597
   140008595:	mov    DWORD PTR [rdi],eax
   140008597:	cmp    rax,rbx
   14000859a:	jae    0x1400085bb
   14000859c:	mov    rcx,QWORD PTR [rsi+0x8]
   1400085a0:	call   QWORD PTR [rip+0x9f02]        # 0x1400124a8
   1400085a6:	mov    ecx,eax
   1400085a8:	test   eax,eax
   1400085aa:	je     0x1400085bb
   1400085ac:	movzx  eax,ax
   1400085af:	or     eax,0x80070000
   1400085b4:	test   ecx,ecx
   1400085b6:	cmovle eax,ecx
   1400085b9:	jmp    0x1400085bd
   1400085bb:	xor    eax,eax
   1400085bd:	mov    rbx,QWORD PTR [rsp+0x30]
   1400085c2:	mov    rsi,QWORD PTR [rsp+0x38]
   1400085c7:	add    rsp,0x20
   1400085cb:	pop    rdi
   1400085cc:	ret    
   1400085cd:	int3   
   1400085ce:	int3   
   1400085cf:	int3   
   1400085d0:	int3   
   1400085d1:	int3   
   1400085d2:	int3   
   1400085d3:	int3   
   1400085d4:	mov    QWORD PTR [rsp+0x8],rbx
   1400085d9:	mov    QWORD PTR [rsp+0x10],rbp
   1400085de:	mov    QWORD PTR [rsp+0x18],rsi
   1400085e3:	push   rdi
   1400085e4:	sub    rsp,0x20
   1400085e8:	xor    ebx,ebx
   1400085ea:	mov    ebp,r8d
   1400085ed:	mov    rdi,rdx
   1400085f0:	mov    rsi,rcx
   1400085f3:	test   rdx,rdx
   1400085f6:	je     0x1400086c9
   1400085fc:	test   r9,r9
   1400085ff:	je     0x1400086c9
   140008605:	mov    QWORD PTR [rcx+0x20],r9
   140008609:	mov    rcx,r9
   14000860c:	mov    rax,QWORD PTR [r9]
   14000860f:	mov    rax,QWORD PTR [rax+0x8]
   140008613:	call   QWORD PTR [rip+0x9f27]        # 0x140012540
   140008619:	lea    ecx,[rbx+0x18]
   14000861c:	mov    QWORD PTR [rsi+0x10],rdi
   140008620:	call   0x140011478
   140008625:	mov    rcx,rax
   140008628:	test   rax,rax
   14000862b:	je     0x140008644
   14000862d:	lea    rax,[rip+0x9a74]        # 0x1400120a8
   140008634:	mov    DWORD PTR [rcx+0x10],0x1
   14000863b:	mov    QWORD PTR [rcx],rax
   14000863e:	mov    QWORD PTR [rcx+0x8],rdi
   140008642:	jmp    0x140008646
   140008644:	xor    ecx,ecx
   140008646:	test   rcx,rcx
   140008649:	jne    0x140008655
   14000864b:	mov    edi,0x80070008
   140008650:	jmp    0x1400086e7
   140008655:	mov    QWORD PTR [rsi+0x18],rcx
   140008659:	mov    rax,QWORD PTR [rcx]
   14000865c:	mov    rax,QWORD PTR [rax+0x8]
   140008660:	call   QWORD PTR [rip+0x9eda]        # 0x140012540
   140008666:	mov    DWORD PTR [rsi+0x2c],ebp
   140008669:	test   ebp,ebp
   14000866b:	je     0x1400086be
   14000866d:	mov    ecx,0x28
   140008672:	call   0x140011478
   140008677:	mov    rbx,rax
   14000867a:	test   rax,rax
   14000867d:	je     0x1400086a1
   14000867f:	and    QWORD PTR [rbx+0x8],0x0
   140008684:	lea    rax,[rip+0x9a4d]        # 0x1400120d8
   14000868b:	and    QWORD PTR [rbx+0x10],0x0
   140008690:	and    DWORD PTR [rbx+0x18],0x0
   140008694:	and    DWORD PTR [rbx+0x1c],0x0
   140008698:	and    DWORD PTR [rbx+0x20],0x0
   14000869c:	mov    QWORD PTR [rbx],rax
   14000869f:	jmp    0x1400086a3
   1400086a1:	xor    ebx,ebx
   1400086a3:	test   rbx,rbx
   1400086a6:	je     0x14000864b
   1400086a8:	mov    rdx,QWORD PTR [rsi+0x18]
   1400086ac:	mov    rcx,rbx
   1400086af:	call   0x14000b340
   1400086b4:	mov    edi,eax
   1400086b6:	test   eax,eax
   1400086b8:	js     0x1400086ce
   1400086ba:	mov    QWORD PTR [rsi+0x8],rbx
   1400086be:	mov    DWORD PTR [rsi+0x28],0x1
   1400086c5:	xor    edi,edi
   1400086c7:	jmp    0x1400086e7
   1400086c9:	mov    edi,0x80070057
   1400086ce:	test   rbx,rbx
   1400086d1:	je     0x1400086e7
   1400086d3:	mov    rax,QWORD PTR [rbx]
   1400086d6:	mov    edx,0x1
   1400086db:	mov    rcx,rbx
   1400086de:	mov    rax,QWORD PTR [rax]
   1400086e1:	call   QWORD PTR [rip+0x9e59]        # 0x140012540
   1400086e7:	mov    rbx,QWORD PTR [rsp+0x30]
   1400086ec:	mov    eax,edi
   1400086ee:	mov    rbp,QWORD PTR [rsp+0x38]
   1400086f3:	mov    rsi,QWORD PTR [rsp+0x40]
   1400086f8:	add    rsp,0x20
   1400086fc:	pop    rdi
   1400086fd:	ret    
   1400086fe:	int3   
   1400086ff:	int3   
   140008700:	int3   
   140008701:	int3   
   140008702:	int3   
   140008703:	int3   
   140008704:	mov    QWORD PTR [rsp+0x18],rbx
   140008709:	push   rbp
   14000870a:	push   rsi
   14000870b:	push   rdi
   14000870c:	push   r12
   14000870e:	push   r13
   140008710:	push   r14
   140008712:	push   r15
   140008714:	lea    rbp,[rsp-0x610]
   14000871c:	sub    rsp,0x710
   140008723:	mov    rax,QWORD PTR [rip+0x1390e]        # 0x14001c038
   14000872a:	xor    rax,rsp
   14000872d:	mov    QWORD PTR [rbp+0x600],rax
   140008734:	mov    r13,QWORD PTR [rbp+0x678]
   14000873b:	mov    r12d,r8d
   14000873e:	mov    rsi,rdx
   140008741:	mov    DWORD PTR [rsp+0x54],r9d
   140008746:	mov    rdi,rcx
   140008749:	xor    edx,edx
   14000874b:	mov    r8d,0x3fe
   140008751:	lea    rcx,[rbp+0x202]
   140008758:	call   0x140011e22
   14000875d:	xor    ebx,ebx
   14000875f:	mov    DWORD PTR [rbp-0x18],0x400
   140008766:	lea    rax,[rbp+0x200]
   14000876d:	mov    WORD PTR [rbp-0x14],0x100
   140008773:	xor    edx,edx
   140008775:	mov    QWORD PTR [rbp-0x20],rax
   140008779:	mov    r8d,0x1fe
   14000877f:	mov    DWORD PTR [rbp-0x10],ebx
   140008782:	lea    rcx,[rbp+0x2]
   140008786:	mov    WORD PTR [rbp+0x200],bx
   14000878d:	mov    QWORD PTR [rsp+0x48],rbx
   140008792:	mov    QWORD PTR [rsp+0x58],rbx
   140008797:	mov    QWORD PTR [rsp+0x70],rbx
   14000879c:	mov    DWORD PTR [rsp+0x50],ebx
   1400087a0:	mov    QWORD PTR [rbp-0x80],rbx
   1400087a4:	mov    QWORD PTR [rsp+0x78],rbx
   1400087a9:	mov    QWORD PTR [rsp+0x68],rbx
   1400087ae:	call   0x140011e22
   1400087b3:	mov    WORD PTR [rbp-0x4c],0x100
   1400087b9:	lea    r15,[rbp+0x0]
   1400087bd:	mov    QWORD PTR [rbp-0x58],r15
   1400087c1:	mov    r14d,0x200
   1400087c7:	mov    DWORD PTR [rbp-0x50],r14d
   1400087cb:	mov    DWORD PTR [rbp-0x48],ebx
   1400087ce:	mov    WORD PTR [rbp+0x0],bx
   1400087d2:	mov    QWORD PTR [rsp+0x60],rbx
   1400087d7:	mov    DWORD PTR [rsp+0x40],ebx
   1400087db:	test   rsi,rsi
   1400087de:	je     0x140008c67
   1400087e4:	test   r13,r13
   1400087e7:	je     0x140008c67
   1400087ed:	cmp    DWORD PTR [rdi+0x28],ebx
   1400087f0:	jne    0x1400087fc
   1400087f2:	mov    ebx,0x80004005
   1400087f7:	jmp    0x140008ce1
   1400087fc:	mov    rcx,QWORD PTR [rdi+0x20]
   140008800:	lea    r8,[rsp+0x60]
   140008805:	lea    rdx,[rip+0xa50c]        # 0x140012d18
   14000880c:	mov    rax,QWORD PTR [rcx]
   14000880f:	mov    rax,QWORD PTR [rax]
   140008812:	call   QWORD PTR [rip+0x9d28]        # 0x140012540
   140008818:	mov    ebx,eax
   14000881a:	test   eax,eax
   14000881c:	js     0x140008c6c
   140008822:	mov    rax,QWORD PTR [rsi]
   140008825:	lea    rdx,[rsp+0x70]
   14000882a:	mov    rcx,rsi
   14000882d:	mov    rax,QWORD PTR [rax+0x18]
   140008831:	call   QWORD PTR [rip+0x9d09]        # 0x140012540
   140008837:	mov    ebx,eax
   140008839:	test   eax,eax
   14000883b:	js     0x140008c6c
   140008841:	mov    rax,QWORD PTR [rsi]
   140008844:	lea    rdx,[rsp+0x48]
   140008849:	mov    rcx,rsi
   14000884c:	mov    rax,QWORD PTR [rax+0x30]
   140008850:	call   QWORD PTR [rip+0x9cea]        # 0x140012540
   140008856:	mov    ecx,0x80000000
   14000885b:	mov    ebx,eax
   14000885d:	add    eax,ecx
   14000885f:	test   ecx,eax
   140008861:	jne    0x14000886f
   140008863:	cmp    ebx,0x80070002
   140008869:	jne    0x140008c6c
   14000886f:	cmp    DWORD PTR [rdi+0x2c],0x0
   140008873:	je     0x1400089df
   140008879:	xor    r13d,r13d
   14000887c:	cmp    QWORD PTR [rdi+0x8],r13
   140008880:	jne    0x14000888c
   140008882:	mov    ebx,0x80004005
   140008887:	jmp    0x140008c6f
   14000888c:	mov    rcx,QWORD PTR [rdi+0x20]
   140008890:	lea    rdx,[rsp+0x58]
   140008895:	mov    rax,QWORD PTR [rcx]
   140008898:	mov    rax,QWORD PTR [rax+0x20]
   14000889c:	call   QWORD PTR [rip+0x9c9e]        # 0x140012540
   1400088a2:	mov    ebx,eax
   1400088a4:	test   eax,eax
   1400088a6:	js     0x140008c6f
   1400088ac:	mov    rax,QWORD PTR [rsi]
   1400088af:	lea    rdx,[rsp+0x50]
   1400088b4:	mov    rcx,rsi
   1400088b7:	mov    rax,QWORD PTR [rax+0x40]
   1400088bb:	call   QWORD PTR [rip+0x9c7f]        # 0x140012540
   1400088c1:	mov    ebx,eax
   1400088c3:	test   eax,eax
   1400088c5:	js     0x140008c6f
   1400088cb:	mov    r14d,r13d
   1400088ce:	cmp    DWORD PTR [rsp+0x50],r13d
   1400088d3:	jbe    0x14000892a
   1400088d5:	mov    rax,QWORD PTR [rsi]
   1400088d8:	lea    r9,[rsp+0x78]
   1400088dd:	lea    r8,[rbp-0x80]
   1400088e1:	mov    edx,r14d
   1400088e4:	mov    rcx,rsi
   1400088e7:	mov    rax,QWORD PTR [rax+0x48]
   1400088eb:	call   QWORD PTR [rip+0x9c4f]        # 0x140012540
   1400088f1:	mov    ebx,eax
   1400088f3:	test   eax,eax
   1400088f5:	js     0x140008c6f
   1400088fb:	mov    rcx,QWORD PTR [rsp+0x58]
   140008900:	mov    r8,QWORD PTR [rsp+0x78]
   140008905:	mov    rdx,QWORD PTR [rbp-0x80]
   140008909:	mov    rax,QWORD PTR [rcx]
   14000890c:	mov    rax,QWORD PTR [rax+0x38]
   140008910:	call   QWORD PTR [rip+0x9c2a]        # 0x140012540
   140008916:	mov    ebx,eax
   140008918:	test   eax,eax
   14000891a:	js     0x140008c6f
   140008920:	inc    r14d
   140008923:	cmp    r14d,DWORD PTR [rsp+0x50]
   140008928:	jb     0x1400088d5
   14000892a:	cmp    r12d,0x5
   14000892e:	jne    0x1400089c1
   140008934:	cmp    QWORD PTR [rsp+0x48],r13
   140008939:	je     0x1400089c1
   14000893f:	mov    r8,QWORD PTR [rsp+0x58]
   140008944:	xor    r9d,r9d
   140008947:	mov    rdx,QWORD PTR [rsp+0x70]
   14000894c:	mov    rcx,QWORD PTR [rdi+0x8]
   140008950:	call   0x14000b420
   140008955:	mov    ebx,eax
   140008957:	test   eax,eax
   140008959:	js     0x140008c6f
   14000895f:	mov    r8d,DWORD PTR [rsp+0x54]
   140008964:	mov    rcx,rdi
   140008967:	mov    rdx,QWORD PTR [rsp+0x48]
   14000896c:	call   0x140009bf0
   140008971:	mov    ebx,eax
   140008973:	test   eax,eax
   140008975:	js     0x140008c6f
   14000897b:	mov    rdi,QWORD PTR [rdi+0x8]
   14000897f:	mov    eax,DWORD PTR [rdi+0x20]
   140008982:	test   eax,eax
   140008984:	jne    0x14000898d
   140008986:	mov    ebx,0x80004005
   14000898b:	jmp    0x1400089ba
   14000898d:	dec    eax
   14000898f:	mov    DWORD PTR [rdi+0x20],eax
   140008992:	mov    rcx,rdi
   140008995:	call   0x14000c148
   14000899a:	mov    ebx,eax
   14000899c:	test   eax,eax
   14000899e:	js     0x1400089ba
   1400089a0:	mov    rcx,QWORD PTR [rdi+0x10]
   1400089a4:	mov    rax,QWORD PTR [rcx]
   1400089a7:	mov    rax,QWORD PTR [rax+0x78]
   1400089ab:	call   QWORD PTR [rip+0x9b8f]        # 0x140012540
   1400089b1:	mov    ebx,eax
   1400089b3:	test   eax,eax
   1400089b5:	js     0x1400089ba
   1400089b7:	mov    DWORD PTR [rdi+0x18],eax
   1400089ba:	test   ebx,ebx
   1400089bc:	jmp    0x140008bc7
   1400089c1:	mov    r8,QWORD PTR [rsp+0x58]
   1400089c6:	mov    r9d,0x1
   1400089cc:	mov    rdx,QWORD PTR [rsp+0x70]
   1400089d1:	mov    rcx,QWORD PTR [rdi+0x8]
   1400089d5:	call   0x14000b420
   1400089da:	jmp    0x140008bc3
   1400089df:	cmp    r12d,0x5
   1400089e3:	jne    0x140008a0f
   1400089e5:	mov    r8,QWORD PTR [rsp+0x48]
   1400089ea:	xor    r13d,r13d
   1400089ed:	test   r8,r8
   1400089f0:	je     0x140008bd5
   1400089f6:	mov    r9d,DWORD PTR [rsp+0x54]
   1400089fb:	lea    rdx,[rip+0xa59a]        # 0x140012f9c
   140008a02:	mov    rcx,rdi
   140008a05:	call   0x14000a2a8
   140008a0a:	jmp    0x140008bc3
   140008a0f:	cmp    r12d,0x1
   140008a13:	jne    0x140008b83
   140008a19:	cmp    DWORD PTR [rbp+0x680],0x0
   140008a20:	jbe    0x140008b57
   140008a26:	mov    r12,QWORD PTR [r13+0x0]
   140008a2a:	xor    r13d,r13d
   140008a2d:	test   r12,r12
   140008a30:	je     0x140008b5a
   140008a36:	cmp    WORD PTR [r12],r13w
   140008a3b:	je     0x140008b5a
   140008a41:	mov    rax,QWORD PTR [rsi]
   140008a44:	lea    r8,[rsp+0x68]
   140008a49:	mov    rdx,r12
   140008a4c:	mov    rcx,rsi
   140008a4f:	mov    rax,QWORD PTR [rax+0x50]
   140008a53:	call   QWORD PTR [rip+0x9ae7]        # 0x140012540
   140008a59:	mov    ebx,eax
   140008a5b:	cmp    eax,0x80070585
   140008a60:	jne    0x140008b71
   140008a66:	mov    rdx,QWORD PTR [rsp+0x48]
   140008a6b:	test   rdx,rdx
   140008a6e:	je     0x140008c8b
   140008a74:	mov    rcx,QWORD PTR [rsp+0x60]
   140008a79:	lea    r8,[rsp+0x40]
   140008a7e:	mov    DWORD PTR [rsp+0x40],0x100
   140008a86:	lea    r9,[rbp+0x0]
   140008a8a:	mov    QWORD PTR [rsp+0x28],r13
   140008a8f:	mov    QWORD PTR [rsp+0x20],r8
   140008a94:	mov    r8,r12
   140008a97:	mov    rax,QWORD PTR [rcx]
   140008a9a:	mov    rax,QWORD PTR [rax+0x58]
   140008a9e:	call   QWORD PTR [rip+0x9a9c]        # 0x140012540
   140008aa4:	mov    ebx,eax
   140008aa6:	cmp    eax,0x8007007a
   140008aab:	jne    0x140008b2b
   140008aad:	mov    edx,DWORD PTR [rsp+0x40]
   140008ab1:	cmp    edx,r14d
   140008ab4:	jbe    0x140008ae9
   140008ab6:	lea    rcx,[rbp-0x78]
   140008aba:	call   0x14000ea50
   140008abf:	test   al,al
   140008ac1:	jne    0x140008ae1
   140008ac3:	call   QWORD PTR [rip+0x982f]        # 0x1400122f8
   140008ac9:	mov    r14d,DWORD PTR [rbp-0x50]
   140008acd:	mov    r15,QWORD PTR [rbp-0x58]
   140008ad1:	movzx  ebx,ax
   140008ad4:	or     ebx,0x80070000
   140008ada:	test   eax,eax
   140008adc:	cmovle ebx,eax
   140008adf:	jmp    0x140008aec
   140008ae1:	mov    r14d,DWORD PTR [rbp-0x50]
   140008ae5:	mov    r15,QWORD PTR [rbp-0x58]
   140008ae9:	mov    ebx,r13d
   140008aec:	test   ebx,ebx
   140008aee:	js     0x140008c6f
   140008af4:	mov    rcx,QWORD PTR [rsp+0x60]
   140008af9:	lea    rdx,[rsp+0x40]
   140008afe:	mov    eax,r14d
   140008b01:	mov    QWORD PTR [rsp+0x28],r13
   140008b06:	shr    eax,1
   140008b08:	mov    r9,r15
   140008b0b:	mov    DWORD PTR [rsp+0x40],eax
   140008b0f:	mov    r8,r12
   140008b12:	mov    rax,QWORD PTR [rcx]
   140008b15:	mov    QWORD PTR [rsp+0x20],rdx
   140008b1a:	mov    rdx,QWORD PTR [rsp+0x48]
   140008b1f:	mov    rax,QWORD PTR [rax+0x58]
   140008b23:	call   QWORD PTR [rip+0x9a17]        # 0x140012540
   140008b29:	mov    ebx,eax
   140008b2b:	test   ebx,ebx
   140008b2d:	js     0x140008c6f
   140008b33:	test   r15,r15
   140008b36:	jne    0x140008b3e
   140008b38:	mov    DWORD PTR [rbp-0x48],r13d
   140008b3c:	jmp    0x140008b50
   140008b3e:	mov    edx,r14d
   140008b41:	mov    rcx,r15
   140008b44:	shr    rdx,1
   140008b47:	call   QWORD PTR [rip+0x9843]        # 0x140012390
   140008b4d:	mov    DWORD PTR [rbp-0x48],eax
   140008b50:	mov    QWORD PTR [rsp+0x68],r15
   140008b55:	jmp    0x140008b79
   140008b57:	xor    r13d,r13d
   140008b5a:	mov    rax,QWORD PTR [rsi]
   140008b5d:	lea    rdx,[rsp+0x68]
   140008b62:	mov    rcx,rsi
   140008b65:	mov    rax,QWORD PTR [rax+0x20]
   140008b69:	call   QWORD PTR [rip+0x99d1]        # 0x140012540
   140008b6f:	mov    ebx,eax
   140008b71:	test   eax,eax
   140008b73:	js     0x140008c6f
   140008b79:	mov    r8,QWORD PTR [rsp+0x68]
   140008b7e:	jmp    0x140008c51
   140008b83:	cmp    r12d,0x2
   140008b87:	jne    0x140008b93
   140008b89:	mov    ebx,0x80004001
   140008b8e:	jmp    0x140008c6c
   140008b93:	cmp    r12d,0x4
   140008b97:	jne    0x140008bd2
   140008b99:	mov    eax,DWORD PTR [rbp+0x670]
   140008b9f:	mov    r9,r13
   140008ba2:	mov    r8d,DWORD PTR [rsp+0x54]
   140008ba7:	mov    rdx,rsi
   140008baa:	mov    DWORD PTR [rsp+0x28],eax
   140008bae:	mov    rcx,rdi
   140008bb1:	mov    eax,DWORD PTR [rbp+0x680]
   140008bb7:	mov    DWORD PTR [rsp+0x20],eax
   140008bbb:	call   0x140008d14
   140008bc0:	xor    r13d,r13d
   140008bc3:	mov    ebx,eax
   140008bc5:	test   eax,eax
   140008bc7:	js     0x140008c6f
   140008bcd:	jmp    0x140008c62
   140008bd2:	xor    r13d,r13d
   140008bd5:	mov    r12,QWORD PTR [rbp-0x20]
   140008bd9:	mov    r15d,r13d
   140008bdc:	mov    rax,QWORD PTR [rsi]
   140008bdf:	mov    r8d,r14d
   140008be2:	mov    rdx,r12
   140008be5:	mov    rcx,rsi
   140008be8:	mov    rax,QWORD PTR [rax+0x58]
   140008bec:	call   QWORD PTR [rip+0x994e]        # 0x140012540
   140008bf2:	mov    ebx,eax
   140008bf4:	test   eax,eax
   140008bf6:	jns    0x140008c3f
   140008bf8:	cmp    eax,0x8007007a
   140008bfd:	jne    0x140008c4a
   140008bff:	add    r14d,r14d
   140008c02:	lea    edx,[r14+r14*1]
   140008c06:	cmp    edx,DWORD PTR [rbp-0x18]
   140008c09:	jbe    0x140008c36
   140008c0b:	lea    rcx,[rbp-0x40]
   140008c0f:	call   0x14000ea50
   140008c14:	test   al,al
   140008c16:	jne    0x140008c32
   140008c18:	call   QWORD PTR [rip+0x96da]        # 0x1400122f8
   140008c1e:	mov    r12,QWORD PTR [rbp-0x20]
   140008c22:	movzx  ecx,ax
   140008c25:	or     ecx,0x80070000
   140008c2b:	test   eax,eax
   140008c2d:	cmovle ecx,eax
   140008c30:	jmp    0x140008c39
   140008c32:	mov    r12,QWORD PTR [rbp-0x20]
   140008c36:	mov    ecx,r13d
   140008c39:	test   ecx,ecx
   140008c3b:	js     0x140008c6f
   140008c3d:	jmp    0x140008c45
   140008c3f:	mov    r15d,0x1
   140008c45:	test   r15d,r15d
   140008c48:	je     0x140008bdc
   140008c4a:	test   ebx,ebx
   140008c4c:	js     0x140008c6f
   140008c4e:	mov    r8,r12
   140008c51:	mov    rcx,QWORD PTR [rdi+0x10]
   140008c55:	lea    rdx,[rip+0xa1dc]        # 0x140012e38
   140008c5c:	call   QWORD PTR [rip+0x987e]        # 0x1400124e0
   140008c62:	mov    ebx,r13d
   140008c65:	jmp    0x140008c6f
   140008c67:	mov    ebx,0x80070057
   140008c6c:	xor    r13d,r13d
   140008c6f:	mov    rcx,QWORD PTR [rsp+0x48]
   140008c74:	test   rcx,rcx
   140008c77:	je     0x140008c8b
   140008c79:	mov    rax,QWORD PTR [rcx]
   140008c7c:	mov    rax,QWORD PTR [rax+0x10]
   140008c80:	call   QWORD PTR [rip+0x98ba]        # 0x140012540
   140008c86:	mov    QWORD PTR [rsp+0x48],r13
   140008c8b:	mov    rcx,QWORD PTR [rsp+0x58]
   140008c90:	test   rcx,rcx
   140008c93:	je     0x140008ca7
   140008c95:	mov    rax,QWORD PTR [rcx]
   140008c98:	mov    rax,QWORD PTR [rax+0x10]
   140008c9c:	call   QWORD PTR [rip+0x989e]        # 0x140012540
   140008ca2:	mov    QWORD PTR [rsp+0x58],r13
   140008ca7:	mov    rcx,QWORD PTR [rsp+0x60]
   140008cac:	test   rcx,rcx
   140008caf:	je     0x140008cc3
   140008cb1:	mov    rax,QWORD PTR [rcx]
   140008cb4:	mov    rax,QWORD PTR [rax+0x10]
   140008cb8:	call   QWORD PTR [rip+0x9882]        # 0x140012540
   140008cbe:	mov    QWORD PTR [rsp+0x60],r13
   140008cc3:	cmp    BYTE PTR [rbp-0x4c],r13b
   140008cc7:	je     0x140008cd2
   140008cc9:	lea    rcx,[rbp-0x78]
   140008ccd:	call   0x14000eb30
   140008cd2:	cmp    BYTE PTR [rbp-0x14],r13b
   140008cd6:	je     0x140008ce1
   140008cd8:	lea    rcx,[rbp-0x40]
   140008cdc:	call   0x14000eb30
   140008ce1:	mov    eax,ebx
   140008ce3:	mov    rcx,QWORD PTR [rbp+0x600]
   140008cea:	xor    rcx,rsp
   140008ced:	call   0x140011800
   140008cf2:	mov    rbx,QWORD PTR [rsp+0x760]
   140008cfa:	add    rsp,0x710
   140008d01:	pop    r15
   140008d03:	pop    r14
   140008d05:	pop    r13
   140008d07:	pop    r12
   140008d09:	pop    rdi
   140008d0a:	pop    rsi
   140008d0b:	pop    rbp
   140008d0c:	ret    
   140008d0d:	int3   
   140008d0e:	int3   
   140008d0f:	int3   
   140008d10:	int3   
   140008d11:	int3   
   140008d12:	int3   
   140008d13:	int3   
   140008d14:	mov    QWORD PTR [rsp+0x8],rbx
   140008d19:	mov    QWORD PTR [rsp+0x18],rsi
   140008d1e:	push   rbp
   140008d1f:	push   rdi
   140008d20:	push   r12
   140008d22:	push   r14
   140008d24:	push   r15
   140008d26:	mov    rbp,rsp
   140008d29:	sub    rsp,0x60
   140008d2d:	mov    rdi,rcx
   140008d30:	mov    r15,r9
   140008d33:	xor    ecx,ecx
   140008d35:	mov    r12d,r8d
   140008d38:	and    DWORD PTR [rbp+0x38],ecx
   140008d3b:	mov    rsi,rdx
   140008d3e:	and    QWORD PTR [rbp-0x8],rcx
   140008d42:	and    QWORD PTR [rbp-0x10],rcx
   140008d46:	and    QWORD PTR [rbp-0x18],rcx
   140008d4a:	mov    QWORD PTR [rbp-0x20],rcx
   140008d4e:	test   rdx,rdx
   140008d51:	je     0x140008e91
   140008d57:	test   r9,r9
   140008d5a:	je     0x140008e91
   140008d60:	mov    rax,QWORD PTR [rdx]
   140008d63:	mov    rcx,rsi
   140008d66:	lea    rdx,[rbp-0x18]
   140008d6a:	mov    rax,QWORD PTR [rax+0x18]
   140008d6e:	call   QWORD PTR [rip+0x97cc]        # 0x140012540
   140008d74:	mov    ebx,eax
   140008d76:	test   eax,eax
   140008d78:	js     0x140008e8b
   140008d7e:	mov    r8,QWORD PTR [rbp-0x18]
   140008d82:	lea    rdx,[rip+0xa0af]        # 0x140012e38
   140008d89:	mov    rcx,QWORD PTR [rdi+0x10]
   140008d8d:	call   QWORD PTR [rip+0x974d]        # 0x1400124e0
   140008d93:	inc    DWORD PTR [rdi+0x30]
   140008d96:	lea    rdx,[rbp+0x38]
   140008d9a:	mov    rax,QWORD PTR [rsi]
   140008d9d:	mov    rcx,rsi
   140008da0:	mov    rax,QWORD PTR [rax+0x40]
   140008da4:	call   QWORD PTR [rip+0x9796]        # 0x140012540
   140008daa:	mov    ebx,eax
   140008dac:	test   eax,eax
   140008dae:	js     0x140008e8b
   140008db4:	xor    r14d,r14d
   140008db7:	cmp    DWORD PTR [rbp+0x38],r14d
   140008dbb:	jbe    0x140008e23
   140008dbd:	mov    rax,QWORD PTR [rsi]
   140008dc0:	lea    r9,[rbp-0x10]
   140008dc4:	lea    r8,[rbp-0x8]
   140008dc8:	mov    edx,r14d
   140008dcb:	mov    rcx,rsi
   140008dce:	mov    rax,QWORD PTR [rax+0x48]
   140008dd2:	call   QWORD PTR [rip+0x9768]        # 0x140012540
   140008dd8:	mov    ebx,eax
   140008dda:	test   eax,eax
   140008ddc:	js     0x140008e8b
   140008de2:	xor    ebx,ebx
   140008de4:	cmp    DWORD PTR [rdi+0x30],ebx
   140008de7:	jbe    0x140008e01
   140008de9:	mov    rcx,QWORD PTR [rdi+0x10]
   140008ded:	lea    rdx,[rip+0xa63c]        # 0x140013430
   140008df4:	call   QWORD PTR [rip+0x96e6]        # 0x1400124e0
   140008dfa:	inc    ebx
   140008dfc:	cmp    ebx,DWORD PTR [rdi+0x30]
   140008dff:	jb     0x140008de9
   140008e01:	mov    r9,QWORD PTR [rbp-0x10]
   140008e05:	lea    rdx,[rip+0xa3b4]        # 0x1400131c0
   140008e0c:	mov    r8,QWORD PTR [rbp-0x8]
   140008e10:	mov    rcx,QWORD PTR [rdi+0x10]
   140008e14:	call   QWORD PTR [rip+0x96c6]        # 0x1400124e0
   140008e1a:	inc    r14d
   140008e1d:	cmp    r14d,DWORD PTR [rbp+0x38]
   140008e21:	jb     0x140008dbd
   140008e23:	mov    rax,QWORD PTR [rsi]
   140008e26:	lea    rdx,[rbp-0x20]
   140008e2a:	mov    rcx,rsi
   140008e2d:	mov    rax,QWORD PTR [rax+0x30]
   140008e31:	call   QWORD PTR [rip+0x9709]        # 0x140012540
   140008e37:	mov    ecx,0x80000000
   140008e3c:	mov    ebx,eax
   140008e3e:	add    eax,ecx
   140008e40:	test   ecx,eax
   140008e42:	jne    0x140008e4c
   140008e44:	cmp    ebx,0x80070002
   140008e4a:	jne    0x140008e8b
   140008e4c:	mov    rcx,QWORD PTR [rbp-0x20]
   140008e50:	test   rcx,rcx
   140008e53:	je     0x140008e84
   140008e55:	mov    eax,DWORD PTR [rbp+0x58]
   140008e58:	mov    rdx,rcx
   140008e5b:	and    QWORD PTR [rsp+0x30],0x0
   140008e61:	mov    r9,r15
   140008e64:	mov    DWORD PTR [rsp+0x28],eax
   140008e68:	mov    r8d,r12d
   140008e6b:	mov    eax,DWORD PTR [rbp+0x50]
   140008e6e:	mov    rcx,rdi
   140008e71:	mov    DWORD PTR [rsp+0x20],eax
   140008e75:	call   0x1400094bc
   140008e7a:	mov    ebx,eax
   140008e7c:	test   eax,eax
   140008e7e:	js     0x140008e8b
   140008e80:	mov    rcx,QWORD PTR [rbp-0x20]
   140008e84:	dec    DWORD PTR [rdi+0x30]
   140008e87:	xor    ebx,ebx
   140008e89:	jmp    0x140008e96
   140008e8b:	mov    rcx,QWORD PTR [rbp-0x20]
   140008e8f:	jmp    0x140008e96
   140008e91:	mov    ebx,0x80070057
   140008e96:	test   rcx,rcx
   140008e99:	je     0x140008ea8
   140008e9b:	mov    rax,QWORD PTR [rcx]
   140008e9e:	mov    rax,QWORD PTR [rax+0x10]
   140008ea2:	call   QWORD PTR [rip+0x9698]        # 0x140012540
   140008ea8:	lea    r11,[rsp+0x60]
   140008ead:	mov    eax,ebx
   140008eaf:	mov    rbx,QWORD PTR [r11+0x30]
   140008eb3:	mov    rsi,QWORD PTR [r11+0x40]
   140008eb7:	mov    rsp,r11
   140008eba:	pop    r15
   140008ebc:	pop    r14
   140008ebe:	pop    r12
   140008ec0:	pop    rdi
   140008ec1:	pop    rbp
   140008ec2:	ret    
   140008ec3:	int3   
   140008ec4:	int3   
   140008ec5:	int3   
   140008ec6:	int3   
   140008ec7:	int3   
   140008ec8:	int3   
   140008ec9:	int3   
   140008eca:	int3   
   140008ecb:	int3   
   140008ecc:	mov    QWORD PTR [rsp+0x8],rbx
   140008ed1:	push   rbp
   140008ed2:	push   rsi
   140008ed3:	push   rdi
   140008ed4:	push   r12
   140008ed6:	push   r13
   140008ed8:	push   r14
   140008eda:	push   r15
   140008edc:	lea    rbp,[rsp-0x180]
   140008ee4:	sub    rsp,0x280
   140008eeb:	mov    rax,QWORD PTR [rip+0x13146]        # 0x14001c038
   140008ef2:	xor    rax,rsp
   140008ef5:	mov    QWORD PTR [rbp+0x170],rax
   140008efc:	mov    r14,r8
   140008eff:	lea    rcx,[rsp+0x72]
   140008f04:	mov    r15,rdx
   140008f07:	mov    r8d,0x1fe
   140008f0d:	xor    edx,edx
   140008f0f:	mov    r12,r9
   140008f12:	call   0x140011e22
   140008f17:	xor    r13d,r13d
   140008f1a:	mov    DWORD PTR [rsp+0x60],0x200
   140008f22:	mov    WORD PTR [rsp+0x64],0x100
   140008f29:	lea    rax,[rsp+0x70]
   140008f2e:	mov    QWORD PTR [rsp+0x58],rax
   140008f33:	mov    DWORD PTR [rsp+0x68],r13d
   140008f38:	mov    WORD PTR [rsp+0x70],r13w
   140008f3e:	lea    edi,[r13+0x1]
   140008f42:	mov    DWORD PTR [rsp+0x34],r13d
   140008f47:	mov    esi,edi
   140008f49:	mov    DWORD PTR [rsp+0x30],r13d
   140008f4e:	test   r15,r15
   140008f51:	je     0x140009161
   140008f57:	test   r14,r14
   140008f5a:	je     0x140009161
   140008f60:	test   r12,r12
   140008f63:	je     0x140009161
   140008f69:	xor    r9d,r9d
   140008f6c:	mov    BYTE PTR [rsp+0x20],dil
   140008f71:	lea    r8d,[r13+0x2]
   140008f75:	lea    rdx,[rip+0xa25c]        # 0x1400131d8
   140008f7c:	lea    rcx,[rsp+0x38]
   140008f81:	call   0x14000eb60
   140008f86:	mov    ebx,eax
   140008f88:	test   eax,eax
   140008f8a:	js     0x14000916e
   140008f90:	mov    rax,QWORD PTR [r14]
   140008f93:	lea    rdx,[rsp+0x34]
   140008f98:	mov    r15d,DWORD PTR [r15+0x14]
   140008f9c:	mov    rcx,r14
   140008f9f:	mov    rax,QWORD PTR [rax+0xf0]
   140008fa6:	call   QWORD PTR [rip+0x9594]        # 0x140012540
   140008fac:	mov    ebx,eax
   140008fae:	test   eax,eax
   140008fb0:	js     0x14000916e
   140008fb6:	mov    rax,QWORD PTR [r14]
   140008fb9:	lea    rdx,[rsp+0x30]
   140008fbe:	mov    rcx,r14
   140008fc1:	mov    rax,QWORD PTR [rax+0xc0]
   140008fc8:	call   QWORD PTR [rip+0x9572]        # 0x140012540
   140008fce:	mov    ebx,eax
   140008fd0:	test   eax,eax
   140008fd2:	js     0x14000916e
   140008fd8:	mov    ecx,DWORD PTR [rsp+0x30]
   140008fdc:	sub    ecx,edi
   140008fde:	je     0x140008ff2
   140008fe0:	sub    ecx,edi
   140008fe2:	je     0x140008fe9
   140008fe4:	mov    r14d,r13d
   140008fe7:	jmp    0x140008ff9
   140008fe9:	lea    r14,[rip+0xa208]        # 0x1400131f8
   140008ff0:	jmp    0x140008ff9
   140008ff2:	lea    r14,[rip+0xa1e7]        # 0x1400131e0
   140008ff9:	cmp    DWORD PTR [rsp+0x34],r13d
   140008ffe:	je     0x140009031
   140009000:	mov    eax,DWORD PTR [rsp+0x68]
   140009004:	lea    rdx,[rip+0xa1fd]        # 0x140013208
   14000900b:	mov    r8d,0x2e
   140009011:	mov    BYTE PTR [rsp+0x20],dil
   140009016:	lea    rcx,[rsp+0x38]
   14000901b:	lea    r9d,[rax+rax*1]
   14000901f:	call   0x14000eb60
   140009024:	mov    ebx,eax
   140009026:	test   eax,eax
   140009028:	js     0x14000916e
   14000902e:	mov    esi,r13d
   140009031:	test   r14,r14
   140009034:	je     0x14000909f
   140009036:	test   esi,esi
   140009038:	jne    0x140009066
   14000903a:	mov    eax,DWORD PTR [rsp+0x68]
   14000903e:	lea    r8d,[rsi+0x2]
   140009042:	lea    rdx,[rip+0xa12b]        # 0x140013174
   140009049:	mov    BYTE PTR [rsp+0x20],dil
   14000904e:	lea    rcx,[rsp+0x38]
   140009053:	lea    r9d,[rax+rax*1]
   140009057:	call   0x14000eb60
   14000905c:	mov    ebx,eax
   14000905e:	test   eax,eax
   140009060:	js     0x14000916e
   140009066:	mov    eax,DWORD PTR [rsp+0x68]
   14000906a:	lea    r9d,[rax+rax*1]
   14000906e:	or     rax,0xffffffffffffffff
   140009072:	inc    rax
   140009075:	cmp    WORD PTR [r14+rax*2],r13w
   14000907a:	jne    0x140009072
   14000907c:	lea    r8d,[rax+rax*1]
   140009080:	mov    BYTE PTR [rsp+0x20],dil
   140009085:	mov    rdx,r14
   140009088:	lea    rcx,[rsp+0x38]
   14000908d:	call   0x14000eb60
   140009092:	mov    ebx,eax
   140009094:	test   eax,eax
   140009096:	js     0x14000916e
   14000909c:	mov    esi,r13d
   14000909f:	test   dil,r15b
   1400090a2:	je     0x140009101
   1400090a4:	test   esi,esi
   1400090a6:	jne    0x1400090d4
   1400090a8:	mov    eax,DWORD PTR [rsp+0x68]
   1400090ac:	lea    r8d,[rsi+0x2]
   1400090b0:	lea    rdx,[rip+0xa0bd]        # 0x140013174
   1400090b7:	mov    BYTE PTR [rsp+0x20],dil
   1400090bc:	lea    rcx,[rsp+0x38]
   1400090c1:	lea    r9d,[rax+rax*1]
   1400090c5:	call   0x14000eb60
   1400090ca:	mov    ebx,eax
   1400090cc:	test   eax,eax
   1400090ce:	js     0x14000916e
   1400090d4:	mov    eax,DWORD PTR [rsp+0x68]
   1400090d8:	lea    rdx,[rip+0xa159]        # 0x140013238
   1400090df:	mov    r8d,0x10
   1400090e5:	mov    BYTE PTR [rsp+0x20],dil
   1400090ea:	lea    rcx,[rsp+0x38]
   1400090ef:	lea    r9d,[rax+rax*1]
   1400090f3:	call   0x14000eb60
   1400090f8:	mov    ebx,eax
   1400090fa:	test   eax,eax
   1400090fc:	js     0x14000916e
   1400090fe:	mov    esi,r13d
   140009101:	test   esi,esi
   140009103:	je     0x140009118
   140009105:	mov    rdx,QWORD PTR [rsp+0x58]
   14000910a:	mov    r8d,r13d
   14000910d:	mov    DWORD PTR [rsp+0x68],r13d
   140009112:	mov    WORD PTR [rdx],r13w
   140009116:	jmp    0x14000914c
   140009118:	mov    eax,DWORD PTR [rsp+0x68]
   14000911c:	lea    rdx,[rip+0xa129]        # 0x14001324c
   140009123:	mov    r8d,0x2
   140009129:	mov    BYTE PTR [rsp+0x20],dil
   14000912e:	lea    rcx,[rsp+0x38]
   140009133:	lea    r9d,[rax+rax*1]
   140009137:	call   0x14000eb60
   14000913c:	mov    ebx,eax
   14000913e:	test   eax,eax
   140009140:	js     0x14000916e
   140009142:	mov    r8d,DWORD PTR [rsp+0x68]
   140009147:	mov    rdx,QWORD PTR [rsp+0x58]
   14000914c:	add    r8d,r8d
   14000914f:	mov    BYTE PTR [rsp+0x20],dil
   140009154:	xor    r9d,r9d
   140009157:	mov    rcx,r12
   14000915a:	call   0x14000eb60
   14000915f:	jmp    0x140009166
   140009161:	mov    ebx,0x80070057
   140009166:	test   ebx,ebx
   140009168:	js     0x14000916e
   14000916a:	test   esi,esi
   14000916c:	jne    0x140009170
   14000916e:	mov    edi,ebx
   140009170:	cmp    BYTE PTR [rsp+0x64],r13b
   140009175:	je     0x140009181
   140009177:	lea    rcx,[rsp+0x38]
   14000917c:	call   0x14000eb30
   140009181:	mov    eax,edi
   140009183:	mov    rcx,QWORD PTR [rbp+0x170]
   14000918a:	xor    rcx,rsp
   14000918d:	call   0x140011800
   140009192:	mov    rbx,QWORD PTR [rsp+0x2c0]
   14000919a:	add    rsp,0x280
   1400091a1:	pop    r15
   1400091a3:	pop    r14
   1400091a5:	pop    r13
   1400091a7:	pop    r12
   1400091a9:	pop    rdi
   1400091aa:	pop    rsi
   1400091ab:	pop    rbp
   1400091ac:	ret    
   1400091ad:	int3   
   1400091ae:	int3   
   1400091af:	int3   
   1400091b0:	int3   
   1400091b1:	int3   
   1400091b2:	int3   
   1400091b3:	int3   
   1400091b4:	mov    QWORD PTR [rsp+0x8],rbx
   1400091b9:	mov    QWORD PTR [rsp+0x10],rsi
   1400091be:	push   rbp
   1400091bf:	push   rdi
   1400091c0:	push   r12
   1400091c2:	push   r14
   1400091c4:	push   r15
   1400091c6:	lea    rbp,[rsp-0x180]
   1400091ce:	sub    rsp,0x280
   1400091d5:	mov    rax,QWORD PTR [rip+0x12e5c]        # 0x14001c038
   1400091dc:	xor    rax,rsp
   1400091df:	mov    QWORD PTR [rbp+0x170],rax
   1400091e6:	mov    r14d,r8d
   1400091e9:	lea    rcx,[rsp+0x72]
   1400091ee:	mov    rdi,rdx
   1400091f1:	mov    r8d,0x1fe
   1400091f7:	xor    edx,edx
   1400091f9:	mov    r15,r9
   1400091fc:	call   0x140011e22
   140009201:	xor    r12d,r12d
   140009204:	mov    DWORD PTR [rsp+0x58],0x200
   14000920c:	mov    WORD PTR [rsp+0x5c],0x100
   140009213:	lea    rax,[rsp+0x70]
   140009218:	mov    QWORD PTR [rsp+0x50],rax
   14000921d:	mov    DWORD PTR [rsp+0x60],r12d
   140009222:	mov    WORD PTR [rsp+0x70],r12w
   140009228:	test   rdi,rdi
   14000922b:	je     0x140009473
   140009231:	test   r15,r15
   140009234:	je     0x140009473
   14000923a:	xor    r9d,r9d
   14000923d:	mov    BYTE PTR [rsp+0x20],0x1
   140009242:	lea    r8d,[r12+0x2]
   140009247:	lea    rdx,[rip+0x9f8a]        # 0x1400131d8
   14000924e:	lea    rcx,[rsp+0x30]
   140009253:	call   0x14000eb60
   140009258:	mov    ebx,eax
   14000925a:	test   eax,eax
   14000925c:	js     0x140009478
   140009262:	mov    ecx,DWORD PTR [rdi+0x10]
   140009265:	mov    esi,DWORD PTR [rdi+0x14]
   140009268:	cmp    ecx,0x6
   14000926b:	jg     0x1400092be
   14000926d:	je     0x1400092b5
   14000926f:	sub    ecx,0x1
   140009272:	je     0x1400092ac
   140009274:	sub    ecx,0x1
   140009277:	je     0x1400092a3
   140009279:	sub    ecx,0x1
   14000927c:	je     0x14000929a
   14000927e:	sub    ecx,0x1
   140009281:	je     0x140009291
   140009283:	cmp    ecx,0x1
   140009286:	jne    0x1400092d2
   140009288:	lea    rdx,[rip+0xa019]        # 0x1400132a8
   14000928f:	jmp    0x1400092fd
   140009291:	lea    rdx,[rip+0xa000]        # 0x140013298
   140009298:	jmp    0x1400092fd
   14000929a:	lea    rdx,[rip+0x9fd7]        # 0x140013278
   1400092a1:	jmp    0x1400092fd
   1400092a3:	lea    rdx,[rip+0x9fb6]        # 0x140013260
   1400092aa:	jmp    0x1400092fd
   1400092ac:	lea    rdx,[rip+0x9f9d]        # 0x140013250
   1400092b3:	jmp    0x1400092fd
   1400092b5:	lea    rdx,[rip+0x9ffc]        # 0x1400132b8
   1400092bc:	jmp    0x1400092fd
   1400092be:	sub    ecx,0x7
   1400092c1:	je     0x1400092f6
   1400092c3:	sub    ecx,0x1
   1400092c6:	je     0x1400092ed
   1400092c8:	sub    ecx,0x1
   1400092cb:	je     0x1400092e4
   1400092cd:	cmp    ecx,0x1
   1400092d0:	je     0x1400092db
   1400092d2:	lea    rdx,[rip+0xa017]        # 0x1400132f0
   1400092d9:	jmp    0x1400092fd
   1400092db:	lea    rdx,[rip+0x9fa6]        # 0x140013288
   1400092e2:	jmp    0x1400092fd
   1400092e4:	lea    rdx,[rip+0x9f7d]        # 0x140013268
   1400092eb:	jmp    0x1400092fd
   1400092ed:	lea    rdx,[rip+0x9fec]        # 0x1400132e0
   1400092f4:	jmp    0x1400092fd
   1400092f6:	lea    rdx,[rip+0x9fcb]        # 0x1400132c8
   1400092fd:	mov    eax,DWORD PTR [rsp+0x60]
   140009301:	lea    r9d,[rax+rax*1]
   140009305:	or     rax,0xffffffffffffffff
   140009309:	inc    rax
   14000930c:	cmp    WORD PTR [rdx+rax*2],r12w
   140009311:	jne    0x140009309
   140009313:	lea    r8d,[rax+rax*1]
   140009317:	mov    BYTE PTR [rsp+0x20],0x1
   14000931c:	lea    rcx,[rsp+0x30]
   140009321:	call   0x14000eb60
   140009326:	mov    ebx,eax
   140009328:	test   eax,eax
   14000932a:	js     0x140009478
   140009330:	mov    edi,0x14
   140009335:	test   r14d,r14d
   140009338:	je     0x140009365
   14000933a:	mov    eax,DWORD PTR [rsp+0x60]
   14000933e:	lea    rdx,[rip+0x9fbb]        # 0x140013300
   140009345:	mov    r8d,edi
   140009348:	mov    BYTE PTR [rsp+0x20],0x1
   14000934d:	lea    rcx,[rsp+0x30]
   140009352:	lea    r9d,[rax+rax*1]
   140009356:	call   0x14000eb60
   14000935b:	mov    ebx,eax
   14000935d:	test   eax,eax
   14000935f:	js     0x140009478
   140009365:	mov    r14d,0x12
   14000936b:	test   sil,0x1
   14000936f:	je     0x14000939c
   140009371:	mov    eax,DWORD PTR [rsp+0x60]
   140009375:	lea    rdx,[rip+0x9f9c]        # 0x140013318
   14000937c:	mov    r8d,r14d
   14000937f:	mov    BYTE PTR [rsp+0x20],0x1
   140009384:	lea    rcx,[rsp+0x30]
   140009389:	lea    r9d,[rax+rax*1]
   14000938d:	call   0x14000eb60
   140009392:	mov    ebx,eax
   140009394:	test   eax,eax
   140009396:	js     0x140009478
   14000939c:	test   sil,0x2
   1400093a0:	je     0x1400093cd
   1400093a2:	mov    eax,DWORD PTR [rsp+0x60]
   1400093a6:	lea    rdx,[rip+0x9f83]        # 0x140013330
   1400093ad:	mov    r8d,edi
   1400093b0:	mov    BYTE PTR [rsp+0x20],0x1
   1400093b5:	lea    rcx,[rsp+0x30]
   1400093ba:	lea    r9d,[rax+rax*1]
   1400093be:	call   0x14000eb60
   1400093c3:	mov    ebx,eax
   1400093c5:	test   eax,eax
   1400093c7:	js     0x140009478
   1400093cd:	test   sil,0x4
   1400093d1:	je     0x1400093fd
   1400093d3:	mov    eax,DWORD PTR [rsp+0x60]
   1400093d7:	lea    rdx,[rip+0x9f6a]        # 0x140013348
   1400093de:	mov    r8d,0x18
   1400093e4:	mov    BYTE PTR [rsp+0x20],0x1
   1400093e9:	lea    rcx,[rsp+0x30]
   1400093ee:	lea    r9d,[rax+rax*1]
   1400093f2:	call   0x14000eb60
   1400093f7:	mov    ebx,eax
   1400093f9:	test   eax,eax
   1400093fb:	js     0x140009478
   1400093fd:	test   sil,0x8
   140009401:	jne    0x14000942a
   140009403:	mov    eax,DWORD PTR [rsp+0x60]
   140009407:	lea    rdx,[rip+0x9f5a]        # 0x140013368
   14000940e:	mov    r8d,r14d
   140009411:	mov    BYTE PTR [rsp+0x20],0x1
   140009416:	lea    rcx,[rsp+0x30]
   14000941b:	lea    r9d,[rax+rax*1]
   14000941f:	call   0x14000eb60
   140009424:	mov    ebx,eax
   140009426:	test   eax,eax
   140009428:	js     0x140009478
   14000942a:	mov    eax,DWORD PTR [rsp+0x60]
   14000942e:	lea    rdx,[rip+0x9e17]        # 0x14001324c
   140009435:	mov    r8d,0x2
   14000943b:	mov    BYTE PTR [rsp+0x20],0x1
   140009440:	lea    rcx,[rsp+0x30]
   140009445:	lea    r9d,[rax+rax*1]
   140009449:	call   0x14000eb60
   14000944e:	mov    ebx,eax
   140009450:	test   eax,eax
   140009452:	js     0x140009478
   140009454:	mov    r8d,DWORD PTR [rsp+0x60]
   140009459:	xor    r9d,r9d
   14000945c:	mov    rdx,QWORD PTR [rsp+0x50]
   140009461:	add    r8d,r8d
   140009464:	mov    rcx,r15
   140009467:	mov    BYTE PTR [rsp+0x20],0x1
   14000946c:	call   0x14000eb60
   140009471:	jmp    0x140009478
   140009473:	mov    ebx,0x80070057
   140009478:	cmp    BYTE PTR [rsp+0x5c],r12b
   14000947d:	je     0x140009489
   14000947f:	lea    rcx,[rsp+0x30]
   140009484:	call   0x14000eb30
   140009489:	mov    eax,ebx
   14000948b:	mov    rcx,QWORD PTR [rbp+0x170]
   140009492:	xor    rcx,rsp
   140009495:	call   0x140011800
   14000949a:	lea    r11,[rsp+0x280]
   1400094a2:	mov    rbx,QWORD PTR [r11+0x30]
   1400094a6:	mov    rsi,QWORD PTR [r11+0x38]
   1400094aa:	mov    rsp,r11
   1400094ad:	pop    r15
   1400094af:	pop    r14
   1400094b1:	pop    r12
   1400094b3:	pop    rdi
   1400094b4:	pop    rbp
   1400094b5:	ret    
   1400094b6:	int3   
   1400094b7:	int3   
   1400094b8:	int3   
   1400094b9:	int3   
   1400094ba:	int3   
   1400094bb:	int3   
   1400094bc:	rex push rbp
   1400094be:	push   rbx
   1400094bf:	push   rsi
   1400094c0:	push   rdi
   1400094c1:	lea    rbp,[rsp-0xe58]
   1400094c9:	sub    rsp,0xf58
   1400094d0:	mov    rax,QWORD PTR [rip+0x12b61]        # 0x14001c038
   1400094d7:	xor    rax,rsp
   1400094da:	mov    QWORD PTR [rbp+0xe40],rax
   1400094e1:	mov    DWORD PTR [rsp+0x64],r8d
   1400094e6:	mov    rsi,rdx
   1400094e9:	mov    rdi,rcx
   1400094ec:	mov    QWORD PTR [rbp-0x78],r9
   1400094f0:	xor    edx,edx
   1400094f2:	mov    DWORD PTR [rsp+0x60],0x40
   1400094fa:	mov    r8d,0x1fe
   140009500:	lea    rcx,[rbp+0x842]
   140009507:	call   0x140011e22
   14000950c:	mov    ebx,0x200
   140009511:	mov    WORD PTR [rbp-0x3c],0x100
   140009517:	lea    rax,[rbp+0x840]
   14000951e:	mov    DWORD PTR [rbp-0x40],ebx
   140009521:	mov    QWORD PTR [rbp-0x48],rax
   140009525:	lea    rcx,[rbp+0xc42]
   14000952c:	xor    eax,eax
   14000952e:	xor    edx,edx
   140009530:	lea    r8d,[rbx-0x2]
   140009534:	mov    DWORD PTR [rbp-0x38],eax
   140009537:	mov    WORD PTR [rbp+0x840],ax
   14000953e:	mov    DWORD PTR [rsp+0x50],eax
   140009542:	mov    QWORD PTR [rsp+0x48],rax
   140009547:	mov    QWORD PTR [rsp+0x78],rax
   14000954c:	mov    QWORD PTR [rsp+0x58],rax
   140009551:	mov    QWORD PTR [rbp-0x80],rax
   140009555:	mov    DWORD PTR [rsp+0x40],eax
   140009559:	mov    DWORD PTR [rsp+0x68],eax
   14000955d:	call   0x140011e22
   140009562:	xor    eax,eax
   140009564:	lea    r8d,[rbx-0x2]
   140009568:	xor    edx,edx
   14000956a:	mov    WORD PTR [rbp+0xc40],ax
   140009571:	lea    rcx,[rbp+0xa42]
   140009578:	call   0x140011e22
   14000957d:	lea    rax,[rbp+0xa40]
   140009584:	mov    DWORD PTR [rbp+0x30],ebx
   140009587:	mov    QWORD PTR [rbp+0x28],rax
   14000958b:	lea    r8d,[rbx-0x2]
   14000958f:	xor    eax,eax
   140009591:	mov    WORD PTR [rbp+0x34],0x100
   140009597:	xor    edx,edx
   140009599:	mov    DWORD PTR [rbp+0x38],eax
   14000959c:	lea    rcx,[rbp+0x642]
   1400095a3:	mov    WORD PTR [rbp+0xa40],ax
   1400095aa:	call   0x140011e22
   1400095af:	xor    r8d,r8d
   1400095b2:	mov    DWORD PTR [rbp-0x8],ebx
   1400095b5:	mov    WORD PTR [rbp-0x4],0x100
   1400095bb:	lea    rax,[rbp+0x640]
   1400095c2:	mov    QWORD PTR [rbp-0x10],rax
   1400095c6:	mov    DWORD PTR [rbp+0x0],r8d
   1400095ca:	mov    WORD PTR [rbp+0x640],r8w
   1400095d2:	mov    QWORD PTR [rbp-0x70],r8
   1400095d6:	test   rsi,rsi
   1400095d9:	je     0x140009b18
   1400095df:	cmp    QWORD PTR [rbp-0x78],r8
   1400095e3:	je     0x140009b18
   1400095e9:	mov    rax,QWORD PTR [rsi]
   1400095ec:	lea    rdx,[rbp-0x70]
   1400095f0:	mov    rcx,rsi
   1400095f3:	mov    rax,QWORD PTR [rax+0x18]
   1400095f7:	call   QWORD PTR [rip+0x8f43]        # 0x140012540
   1400095fd:	xor    r8d,r8d
   140009600:	mov    ebx,eax
   140009602:	test   eax,eax
   140009604:	js     0x140009b1d
   14000960a:	xor    r9d,r9d
   14000960d:	mov    BYTE PTR [rsp+0x20],0x1
   140009612:	lea    rdx,[rip+0x9d63]        # 0x14001337c
   140009619:	lea    rcx,[rbp+0x8]
   14000961d:	lea    r8d,[r9+0x2]
   140009621:	call   0x14000eb60
   140009626:	xor    r8d,r8d
   140009629:	mov    ebx,eax
   14000962b:	test   eax,eax
   14000962d:	js     0x140009b1d
   140009633:	mov    rdx,QWORD PTR [rbp-0x70]
   140009637:	test   rdx,rdx
   14000963a:	je     0x14000966a
   14000963c:	mov    eax,DWORD PTR [rbp+0x38]
   14000963f:	lea    r9d,[rax+rax*1]
   140009643:	or     rax,0xffffffffffffffff
   140009647:	inc    rax
   14000964a:	cmp    WORD PTR [rdx+rax*2],r8w
   14000964f:	jne    0x140009647
   140009651:	lea    r8d,[rax+rax*1]
   140009655:	mov    BYTE PTR [rsp+0x20],0x1
   14000965a:	lea    rcx,[rbp+0x8]
   14000965e:	call   0x14000eb60
   140009663:	mov    ebx,eax
   140009665:	xor    r8d,r8d
   140009668:	jmp    0x14000966d
   14000966a:	mov    ebx,r8d
   14000966d:	test   ebx,ebx
   14000966f:	js     0x140009b1d
   140009675:	mov    eax,DWORD PTR [rbp+0x38]
   140009678:	lea    rdx,[rip+0x9d01]        # 0x140013380
   14000967f:	mov    r8d,0x2
   140009685:	mov    BYTE PTR [rsp+0x20],0x1
   14000968a:	lea    rcx,[rbp+0x8]
   14000968e:	lea    r9d,[rax+rax*1]
   140009692:	call   0x14000eb60
   140009697:	xor    r8d,r8d
   14000969a:	mov    ebx,eax
   14000969c:	test   eax,eax
   14000969e:	js     0x140009b1d
   1400096a4:	cmp    DWORD PTR [rbp+0xea8],r8d
   1400096ab:	je     0x1400096de
   1400096ad:	mov    rdx,QWORD PTR [rbp+0xeb0]
   1400096b4:	test   rdx,rdx
   1400096b7:	je     0x1400096de
   1400096b9:	mov    WORD PTR [rbp+0x640],r8w
   1400096c1:	lea    r9,[rbp-0x30]
   1400096c5:	mov    DWORD PTR [rbp+0x0],r8d
   1400096c9:	mov    r8,rsi
   1400096cc:	call   0x140008ecc
   1400096d1:	xor    r8d,r8d
   1400096d4:	mov    ebx,eax
   1400096d6:	test   eax,eax
   1400096d8:	js     0x140009b1d
   1400096de:	mov    ebx,r8d
   1400096e1:	cmp    DWORD PTR [rdi+0x30],r8d
   1400096e5:	jbe    0x140009702
   1400096e7:	mov    rcx,QWORD PTR [rdi+0x10]
   1400096eb:	lea    rdx,[rip+0x9d3e]        # 0x140013430
   1400096f2:	call   QWORD PTR [rip+0x8de8]        # 0x1400124e0
   1400096f8:	inc    ebx
   1400096fa:	cmp    ebx,DWORD PTR [rdi+0x30]
   1400096fd:	jb     0x1400096e7
   1400096ff:	xor    r8d,r8d
   140009702:	cmp    DWORD PTR [rbp+0xea8],r8d
   140009709:	lea    r9,[rip+0x988c]        # 0x140012f9c
   140009710:	mov    rbx,QWORD PTR [rbp+0x28]
   140009714:	lea    rdx,[rip+0x9c6d]        # 0x140013388
   14000971b:	cmovne r9,QWORD PTR [rbp-0x10]
   140009720:	mov    r8,rbx
   140009723:	mov    rcx,QWORD PTR [rdi+0x10]
   140009727:	call   QWORD PTR [rip+0x8db3]        # 0x1400124e0
   14000972d:	xor    eax,eax
   14000972f:	lea    r8,[rsp+0x60]
   140009734:	mov    WORD PTR [rbx],ax
   140009737:	lea    rdx,[rbp+0x40]
   14000973b:	inc    DWORD PTR [rdi+0x30]
   14000973e:	mov    rcx,rsi
   140009741:	mov    DWORD PTR [rbp+0x38],eax
   140009744:	mov    rax,QWORD PTR [rsi]
   140009747:	mov    rax,QWORD PTR [rax+0x60]
   14000974b:	call   QWORD PTR [rip+0x8def]        # 0x140012540
   140009751:	xor    r8d,r8d
   140009754:	mov    ebx,eax
   140009756:	test   eax,eax
   140009758:	js     0x140009b1d
   14000975e:	mov    eax,r8d
   140009761:	mov    DWORD PTR [rsp+0x6c],eax
   140009765:	cmp    DWORD PTR [rsp+0x60],r8d
   14000976a:	jbe    0x140009b10
   140009770:	lea    rcx,[rax+rax*2]
   140009774:	lea    rbx,[rbp+0x40]
   140009778:	lea    rbx,[rbx+rcx*8]
   14000977c:	mov    QWORD PTR [rsp+0x70],rbx
   140009781:	cmp    DWORD PTR [rbx],r8d
   140009784:	jne    0x14000998d
   14000978a:	mov    eax,DWORD PTR [rbp-0x40]
   14000978d:	mov    rcx,QWORD PTR [rsp+0x58]
   140009792:	shr    eax,1
   140009794:	mov    DWORD PTR [rsp+0x50],eax
   140009798:	test   rcx,rcx
   14000979b:	je     0x1400097b1
   14000979d:	mov    rax,QWORD PTR [rcx]
   1400097a0:	mov    rax,QWORD PTR [rax+0x10]
   1400097a4:	call   QWORD PTR [rip+0x8d96]        # 0x140012540
   1400097aa:	xor    eax,eax
   1400097ac:	mov    QWORD PTR [rsp+0x58],rax
   1400097b1:	mov    rax,QWORD PTR [rsi]
   1400097b4:	lea    rcx,[rsp+0x58]
   1400097b9:	mov    r8,QWORD PTR [rbp-0x48]
   1400097bd:	lea    r9,[rsp+0x50]
   1400097c2:	mov    rdx,QWORD PTR [rbx+0x8]
   1400097c6:	mov    QWORD PTR [rsp+0x28],rcx
   1400097cb:	lea    rcx,[rbp-0x80]
   1400097cf:	mov    rax,QWORD PTR [rax+0x58]
   1400097d3:	mov    QWORD PTR [rsp+0x20],rcx
   1400097d8:	mov    rcx,rsi
   1400097db:	call   QWORD PTR [rip+0x8d5f]        # 0x140012540
   1400097e1:	xor    r8d,r8d
   1400097e4:	mov    ebx,eax
   1400097e6:	test   eax,eax
   1400097e8:	jns    0x140009874
   1400097ee:	cmp    eax,0x8007007a
   1400097f3:	jne    0x14000986c
   1400097f5:	mov    edx,DWORD PTR [rsp+0x50]
   1400097f9:	cmp    edx,DWORD PTR [rbp-0x40]
   1400097fc:	jbe    0x140009827
   1400097fe:	lea    rcx,[rbp-0x68]
   140009802:	call   0x14000ea50
   140009807:	xor    r8d,r8d
   14000980a:	test   al,al
   14000980c:	jne    0x140009827
   14000980e:	call   QWORD PTR [rip+0x8ae4]        # 0x1400122f8
   140009814:	movzx  ebx,ax
   140009817:	xor    r8d,r8d
   14000981a:	or     ebx,0x80070000
   140009820:	test   eax,eax
   140009822:	cmovle ebx,eax
   140009825:	jmp    0x14000982a
   140009827:	mov    ebx,r8d
   14000982a:	test   ebx,ebx
   14000982c:	js     0x140009b1d
   140009832:	mov    rax,QWORD PTR [rsi]
   140009835:	lea    rcx,[rsp+0x58]
   14000983a:	mov    rdx,QWORD PTR [rsp+0x70]
   14000983f:	lea    r9,[rsp+0x50]
   140009844:	mov    r8,QWORD PTR [rbp-0x48]
   140009848:	mov    QWORD PTR [rsp+0x28],rcx
   14000984d:	lea    rcx,[rbp-0x80]
   140009851:	mov    rax,QWORD PTR [rax+0x58]
   140009855:	mov    rdx,QWORD PTR [rdx+0x8]
   140009859:	mov    QWORD PTR [rsp+0x20],rcx
   14000985e:	mov    rcx,rsi
   140009861:	call   QWORD PTR [rip+0x8cd9]        # 0x140012540
   140009867:	mov    ebx,eax
   140009869:	xor    r8d,r8d
   14000986c:	test   ebx,ebx
   14000986e:	js     0x140009b1d
   140009874:	mov    rax,QWORD PTR [rbp-0x48]
   140009878:	test   rax,rax
   14000987b:	jne    0x140009883
   14000987d:	mov    DWORD PTR [rbp-0x38],r8d
   140009881:	jmp    0x140009895
   140009883:	mov    edx,DWORD PTR [rbp-0x40]
   140009886:	mov    rcx,rax
   140009889:	shr    rdx,1
   14000988c:	call   QWORD PTR [rip+0x8afe]        # 0x140012390
   140009892:	mov    DWORD PTR [rbp-0x38],eax
   140009895:	mov    rcx,QWORD PTR [rsp+0x58]
   14000989a:	lea    rdx,[rsp+0x40]
   14000989f:	mov    rax,QWORD PTR [rcx]
   1400098a2:	mov    rax,QWORD PTR [rax+0x18]
   1400098a6:	call   QWORD PTR [rip+0x8c94]        # 0x140012540
   1400098ac:	xor    r8d,r8d
   1400098af:	mov    ebx,eax
   1400098b1:	test   eax,eax
   1400098b3:	js     0x140009b1d
   1400098b9:	cmp    DWORD PTR [rsp+0x40],r8d
   1400098be:	jne    0x1400098eb
   1400098c0:	mov    rcx,QWORD PTR [rsp+0x58]
   1400098c5:	lea    rdx,[rsp+0x40]
   1400098ca:	mov    rax,QWORD PTR [rcx]
   1400098cd:	mov    rax,QWORD PTR [rax+0x20]
   1400098d1:	call   QWORD PTR [rip+0x8c69]        # 0x140012540
   1400098d7:	xor    r8d,r8d
   1400098da:	mov    ebx,eax
   1400098dc:	test   eax,eax
   1400098de:	js     0x140009b1d
   1400098e4:	cmp    DWORD PTR [rsp+0x40],r8d
   1400098e9:	je     0x1400098f6
   1400098eb:	cmp    DWORD PTR [rsp+0x64],r8d
   1400098f0:	je     0x140009a1e
   1400098f6:	cmp    DWORD PTR [rbp+0xea8],r8d
   1400098fd:	je     0x14000992b
   1400098ff:	mov    rax,QWORD PTR [rbp-0x10]
   140009903:	lea    r9,[rbp-0x30]
   140009907:	mov    rdx,QWORD PTR [rsp+0x70]
   14000990c:	mov    DWORD PTR [rbp+0x0],r8d
   140009910:	mov    WORD PTR [rax],r8w
   140009914:	mov    r8d,DWORD PTR [rsp+0x40]
   140009919:	call   0x1400091b4
   14000991e:	xor    r8d,r8d
   140009921:	mov    ebx,eax
   140009923:	test   eax,eax
   140009925:	js     0x140009b1d
   14000992b:	mov    ebx,r8d
   14000992e:	cmp    DWORD PTR [rdi+0x30],r8d
   140009932:	jbe    0x14000994f
   140009934:	mov    rcx,QWORD PTR [rdi+0x10]
   140009938:	lea    rdx,[rip+0x9af1]        # 0x140013430
   14000993f:	call   QWORD PTR [rip+0x8b9b]        # 0x1400124e0
   140009945:	inc    ebx
   140009947:	cmp    ebx,DWORD PTR [rdi+0x30]
   14000994a:	jb     0x140009934
   14000994c:	xor    r8d,r8d
   14000994f:	cmp    DWORD PTR [rbp+0xea8],r8d
   140009956:	lea    rax,[rip+0x963f]        # 0x140012f9c
   14000995d:	mov    r9,QWORD PTR [rbp-0x48]
   140009961:	lea    rdx,[rip+0x9a38]        # 0x1400133a0
   140009968:	cmovne rax,QWORD PTR [rbp-0x10]
   14000996d:	mov    rcx,QWORD PTR [rdi+0x10]
   140009971:	mov    QWORD PTR [rsp+0x20],rax
   140009976:	mov    rax,QWORD PTR [rsp+0x70]
   14000997b:	mov    r8,QWORD PTR [rax+0x8]
   14000997f:	call   QWORD PTR [rip+0x8b5b]        # 0x1400124e0
   140009985:	xor    r8d,r8d
   140009988:	jmp    0x140009a1e
   14000998d:	cmp    DWORD PTR [rbx],0x1
   140009990:	jne    0x140009a19
   140009996:	mov    rax,QWORD PTR [rsi]
   140009999:	lea    r8,[rsp+0x48]
   14000999e:	mov    rdx,QWORD PTR [rbx+0x8]
   1400099a2:	mov    rcx,rsi
   1400099a5:	mov    rax,QWORD PTR [rax+0x20]
   1400099a9:	call   QWORD PTR [rip+0x8b91]        # 0x140012540
   1400099af:	xor    r8d,r8d
   1400099b2:	mov    ebx,eax
   1400099b4:	test   eax,eax
   1400099b6:	js     0x140009b1d
   1400099bc:	mov    rax,QWORD PTR [rsp+0x70]
   1400099c1:	mov    rcx,rdi
   1400099c4:	mov    r9,QWORD PTR [rbp-0x78]
   1400099c8:	mov    r8d,DWORD PTR [rsp+0x64]
   1400099cd:	mov    rdx,QWORD PTR [rsp+0x48]
   1400099d2:	mov    QWORD PTR [rsp+0x30],rax
   1400099d7:	mov    eax,DWORD PTR [rbp+0xea8]
   1400099dd:	mov    DWORD PTR [rsp+0x28],eax
   1400099e1:	mov    eax,DWORD PTR [rbp+0xea0]
   1400099e7:	mov    DWORD PTR [rsp+0x20],eax
   1400099eb:	call   0x1400094bc
   1400099f0:	xor    r8d,r8d
   1400099f3:	mov    ebx,eax
   1400099f5:	test   eax,eax
   1400099f7:	js     0x140009b1d
   1400099fd:	mov    rcx,QWORD PTR [rsp+0x48]
   140009a02:	mov    rax,QWORD PTR [rcx]
   140009a05:	mov    rax,QWORD PTR [rax+0x10]
   140009a09:	call   QWORD PTR [rip+0x8b31]        # 0x140012540
   140009a0f:	xor    r8d,r8d
   140009a12:	mov    QWORD PTR [rsp+0x48],r8
   140009a17:	jmp    0x140009a1e
   140009a19:	cmp    DWORD PTR [rbx],0x2
   140009a1c:	je     0x140009a37
   140009a1e:	mov    eax,DWORD PTR [rsp+0x6c]
   140009a22:	inc    eax
   140009a24:	mov    DWORD PTR [rsp+0x6c],eax
   140009a28:	cmp    eax,DWORD PTR [rsp+0x60]
   140009a2c:	jb     0x140009770
   140009a32:	jmp    0x140009b10
   140009a37:	mov    rax,QWORD PTR [rsi]
   140009a3a:	lea    rdx,[rsp+0x78]
   140009a3f:	mov    rcx,rsi
   140009a42:	mov    rax,QWORD PTR [rax+0x28]
   140009a46:	call   QWORD PTR [rip+0x8af4]        # 0x140012540
   140009a4c:	xor    r8d,r8d
   140009a4f:	mov    ebx,eax
   140009a51:	test   eax,eax
   140009a53:	js     0x140009b1d
   140009a59:	mov    rcx,QWORD PTR [rsp+0x78]
   140009a5e:	lea    rdx,[rsp+0x68]
   140009a63:	mov    rax,QWORD PTR [rcx]
   140009a66:	mov    rax,QWORD PTR [rax+0x18]
   140009a6a:	call   QWORD PTR [rip+0x8ad0]        # 0x140012540
   140009a70:	xor    r8d,r8d
   140009a73:	mov    ebx,eax
   140009a75:	test   eax,eax
   140009a77:	js     0x140009b1d
   140009a7d:	mov    esi,r8d
   140009a80:	cmp    DWORD PTR [rsp+0x68],r8d
   140009a85:	jbe    0x140009b10
   140009a8b:	mov    rcx,QWORD PTR [rsp+0x78]
   140009a90:	lea    r8,[rsp+0x48]
   140009a95:	mov    edx,esi
   140009a97:	mov    rax,QWORD PTR [rcx]
   140009a9a:	mov    rax,QWORD PTR [rax+0x20]
   140009a9e:	call   QWORD PTR [rip+0x8a9c]        # 0x140012540
   140009aa4:	xor    r8d,r8d
   140009aa7:	mov    ebx,eax
   140009aa9:	test   eax,eax
   140009aab:	js     0x140009b1d
   140009aad:	mov    rax,QWORD PTR [rsp+0x70]
   140009ab2:	mov    rcx,rdi
   140009ab5:	mov    r9,QWORD PTR [rbp-0x78]
   140009ab9:	mov    r8d,DWORD PTR [rsp+0x64]
   140009abe:	mov    rdx,QWORD PTR [rsp+0x48]
   140009ac3:	mov    QWORD PTR [rsp+0x30],rax
   140009ac8:	mov    eax,DWORD PTR [rbp+0xea8]
   140009ace:	mov    DWORD PTR [rsp+0x28],eax
   140009ad2:	mov    eax,DWORD PTR [rbp+0xea0]
   140009ad8:	mov    DWORD PTR [rsp+0x20],eax
   140009adc:	call   0x1400094bc
   140009ae1:	xor    r8d,r8d
   140009ae4:	mov    ebx,eax
   140009ae6:	test   eax,eax
   140009ae8:	js     0x140009b1d
   140009aea:	mov    rcx,QWORD PTR [rsp+0x48]
   140009aef:	mov    rax,QWORD PTR [rcx]
   140009af2:	mov    rax,QWORD PTR [rax+0x10]
   140009af6:	call   QWORD PTR [rip+0x8a44]        # 0x140012540
   140009afc:	xor    r8d,r8d
   140009aff:	inc    esi
   140009b01:	mov    QWORD PTR [rsp+0x48],r8
   140009b06:	cmp    esi,DWORD PTR [rsp+0x68]
   140009b0a:	jb     0x140009a8b
   140009b10:	dec    DWORD PTR [rdi+0x30]
   140009b13:	mov    ebx,r8d
   140009b16:	jmp    0x140009b1d
   140009b18:	mov    ebx,0x80070057
   140009b1d:	mov    rcx,QWORD PTR [rsp+0x58]
   140009b22:	test   rcx,rcx
   140009b25:	je     0x140009b3c
   140009b27:	mov    rax,QWORD PTR [rcx]
   140009b2a:	mov    rax,QWORD PTR [rax+0x10]
   140009b2e:	call   QWORD PTR [rip+0x8a0c]        # 0x140012540
   140009b34:	xor    r8d,r8d
   140009b37:	mov    QWORD PTR [rsp+0x58],r8
   140009b3c:	mov    rcx,QWORD PTR [rbp-0x80]
   140009b40:	test   rcx,rcx
   140009b43:	je     0x140009b59
   140009b45:	mov    rax,QWORD PTR [rcx]
   140009b48:	mov    rax,QWORD PTR [rax+0x10]
   140009b4c:	call   QWORD PTR [rip+0x89ee]        # 0x140012540
   140009b52:	xor    r8d,r8d
   140009b55:	mov    QWORD PTR [rbp-0x80],r8
   140009b59:	mov    rcx,QWORD PTR [rsp+0x48]
   140009b5e:	test   rcx,rcx
   140009b61:	je     0x140009b78
   140009b63:	mov    rax,QWORD PTR [rcx]
   140009b66:	mov    rax,QWORD PTR [rax+0x10]
   140009b6a:	call   QWORD PTR [rip+0x89d0]        # 0x140012540
   140009b70:	xor    r8d,r8d
   140009b73:	mov    QWORD PTR [rsp+0x48],r8
   140009b78:	mov    rcx,QWORD PTR [rsp+0x78]
   140009b7d:	test   rcx,rcx
   140009b80:	je     0x140009b97
   140009b82:	mov    rax,QWORD PTR [rcx]
   140009b85:	mov    rax,QWORD PTR [rax+0x10]
   140009b89:	call   QWORD PTR [rip+0x89b1]        # 0x140012540
   140009b8f:	xor    r8d,r8d
   140009b92:	mov    QWORD PTR [rsp+0x78],r8
   140009b97:	cmp    BYTE PTR [rbp-0x4],r8b
   140009b9b:	je     0x140009ba9
   140009b9d:	lea    rcx,[rbp-0x30]
   140009ba1:	call   0x14000eb30
   140009ba6:	xor    r8d,r8d
   140009ba9:	cmp    BYTE PTR [rbp+0x34],r8b
   140009bad:	je     0x140009bbb
   140009baf:	lea    rcx,[rbp+0x8]
   140009bb3:	call   0x14000eb30
   140009bb8:	xor    r8d,r8d
   140009bbb:	cmp    BYTE PTR [rbp-0x3c],r8b
   140009bbf:	je     0x140009bca
   140009bc1:	lea    rcx,[rbp-0x68]
   140009bc5:	call   0x14000eb30
   140009bca:	mov    eax,ebx
   140009bcc:	mov    rcx,QWORD PTR [rbp+0xe40]
   140009bd3:	xor    rcx,rsp
   140009bd6:	call   0x140011800
   140009bdb:	add    rsp,0xf58
   140009be2:	pop    rdi
   140009be3:	pop    rsi
   140009be4:	pop    rbx
   140009be5:	pop    rbp
   140009be6:	ret    
   140009be7:	int3   
   140009be8:	int3   
   140009be9:	int3   
   140009bea:	int3   
   140009beb:	int3   
   140009bec:	int3   
   140009bed:	int3   
   140009bee:	int3   
   140009bef:	int3   
   140009bf0:	mov    QWORD PTR [rsp+0x20],rbx
   140009bf5:	push   rbp
   140009bf6:	push   rsi
   140009bf7:	push   rdi
   140009bf8:	lea    rbp,[rsp-0xe30]
   140009c00:	sub    rsp,0xf30
   140009c07:	mov    rax,QWORD PTR [rip+0x1242a]        # 0x14001c038
   140009c0e:	xor    rax,rsp
   140009c11:	mov    QWORD PTR [rbp+0xe20],rax
   140009c18:	mov    DWORD PTR [rsp+0x6c],r8d
   140009c1d:	mov    rsi,rdx
   140009c20:	mov    rbx,rcx
   140009c23:	mov    QWORD PTR [rbp-0x70],rcx
   140009c27:	mov    edi,0x1fe
   140009c2c:	mov    DWORD PTR [rsp+0x68],0x40
   140009c34:	mov    r8d,edi
   140009c37:	lea    rcx,[rbp+0x622]
   140009c3e:	xor    edx,edx
   140009c40:	call   0x140011e22
   140009c45:	lea    rax,[rbp+0x620]
   140009c4c:	mov    DWORD PTR [rbp-0x30],0x200
   140009c53:	mov    QWORD PTR [rbp-0x38],rax
   140009c57:	lea    rcx,[rbp+0xa22]
   140009c5e:	xor    eax,eax
   140009c60:	mov    WORD PTR [rbp-0x2c],0x100
   140009c66:	mov    r8d,edi
   140009c69:	mov    DWORD PTR [rbp-0x28],eax
   140009c6c:	xor    edx,edx
   140009c6e:	mov    WORD PTR [rbp+0x620],ax
   140009c75:	mov    DWORD PTR [rsp+0x58],eax
   140009c79:	mov    QWORD PTR [rsp+0x50],rax
   140009c7e:	mov    QWORD PTR [rbp-0x78],rax
   140009c82:	mov    QWORD PTR [rsp+0x60],rax
   140009c87:	mov    QWORD PTR [rbp-0x68],rax
   140009c8b:	mov    DWORD PTR [rsp+0x5c],eax
   140009c8f:	mov    DWORD PTR [rsp+0x70],eax
   140009c93:	call   0x140011e22
   140009c98:	xor    eax,eax
   140009c9a:	lea    rcx,[rbp+0xc22]
   140009ca1:	mov    r8d,edi
   140009ca4:	mov    WORD PTR [rbp+0xa20],ax
   140009cab:	xor    edx,edx
   140009cad:	call   0x140011e22
   140009cb2:	xor    eax,eax
   140009cb4:	lea    rcx,[rbp+0x822]
   140009cbb:	mov    r8d,edi
   140009cbe:	mov    WORD PTR [rbp+0xc20],ax
   140009cc5:	xor    edx,edx
   140009cc7:	mov    QWORD PTR [rsp+0x78],rax
   140009ccc:	mov    QWORD PTR [rsp+0x48],rax
   140009cd1:	call   0x140011e22
   140009cd6:	mov    ecx,DWORD PTR [rbp-0x30]
   140009cd9:	lea    rdi,[rbp+0x820]
   140009ce0:	xor    eax,eax
   140009ce2:	mov    QWORD PTR [rbp+0x0],rdi
   140009ce6:	mov    DWORD PTR [rbp+0x8],ecx
   140009ce9:	mov    WORD PTR [rbp+0xc],0x100
   140009cef:	mov    DWORD PTR [rbp+0x10],eax
   140009cf2:	mov    WORD PTR [rbp+0x820],ax
   140009cf9:	cmp    DWORD PTR [rbx+0x28],eax
   140009cfc:	jne    0x140009d08
   140009cfe:	mov    ebx,0x80004005
   140009d03:	jmp    0x14000a27d
   140009d08:	cmp    QWORD PTR [rbx+0x8],rax
   140009d0c:	je     0x140009cfe
   140009d0e:	test   rsi,rsi
   140009d11:	jne    0x140009d1d
   140009d13:	mov    ebx,0x80070057
   140009d18:	jmp    0x14000a27d
   140009d1d:	mov    rax,QWORD PTR [rsi]
   140009d20:	lea    rdx,[rsp+0x78]
   140009d25:	mov    rcx,rsi
   140009d28:	mov    rax,QWORD PTR [rax+0x18]
   140009d2c:	call   QWORD PTR [rip+0x880e]        # 0x140012540
   140009d32:	xor    ecx,ecx
   140009d34:	mov    ebx,eax
   140009d36:	test   eax,eax
   140009d38:	js     0x14000a1d5
   140009d3e:	mov    rdx,QWORD PTR [rsp+0x78]
   140009d43:	test   rdx,rdx
   140009d46:	je     0x140009d72
   140009d48:	or     rax,0xffffffffffffffff
   140009d4c:	inc    rax
   140009d4f:	cmp    WORD PTR [rdx+rax*2],cx
   140009d53:	jne    0x140009d4c
   140009d55:	lea    r8d,[rax+rax*1]
   140009d59:	mov    BYTE PTR [rsp+0x20],0x1
   140009d5e:	xor    r9d,r9d
   140009d61:	lea    rcx,[rbp-0x20]
   140009d65:	call   0x14000eb60
   140009d6a:	mov    rdi,QWORD PTR [rbp+0x0]
   140009d6e:	mov    ebx,eax
   140009d70:	jmp    0x140009d77
   140009d72:	mov    ebx,0x80070057
   140009d77:	test   ebx,ebx
   140009d79:	js     0x14000a1d5
   140009d7f:	mov    eax,DWORD PTR [rbp+0x10]
   140009d82:	mov    QWORD PTR [rsp+0x78],rdi
   140009d87:	test   eax,eax
   140009d89:	je     0x140009da3
   140009d8b:	cmp    WORD PTR [rdi],0x2f
   140009d8f:	jne    0x140009d99
   140009d91:	mov    ecx,0x2d
   140009d96:	mov    WORD PTR [rdi],cx
   140009d99:	add    rdi,0x2
   140009d9d:	sub    rax,0x1
   140009da1:	jne    0x140009d8b
   140009da3:	mov    rdi,QWORD PTR [rbp-0x70]
   140009da7:	lea    rdx,[rsp+0x48]
   140009dac:	mov    DWORD PTR [rsp+0x40],0x1
   140009db4:	mov    rcx,QWORD PTR [rdi+0x20]
   140009db8:	mov    rax,QWORD PTR [rcx]
   140009dbb:	mov    rax,QWORD PTR [rax+0x20]
   140009dbf:	call   QWORD PTR [rip+0x877b]        # 0x140012540
   140009dc5:	mov    ebx,eax
   140009dc7:	test   eax,eax
   140009dc9:	js     0x14000a1d5
   140009dcf:	mov    rax,QWORD PTR [rsi]
   140009dd2:	lea    r8,[rsp+0x68]
   140009dd7:	lea    rdx,[rbp+0x20]
   140009ddb:	mov    rcx,rsi
   140009dde:	mov    rax,QWORD PTR [rax+0x60]
   140009de2:	call   QWORD PTR [rip+0x8758]        # 0x140012540
   140009de8:	xor    ecx,ecx
   140009dea:	mov    ebx,eax
   140009dec:	test   eax,eax
   140009dee:	js     0x14000a1d5
   140009df4:	mov    eax,ecx
   140009df6:	mov    DWORD PTR [rbp-0x80],eax
   140009df9:	cmp    DWORD PTR [rsp+0x68],ecx
   140009dfd:	jbe    0x14000a1ba
   140009e03:	lea    rbx,[rax+rax*2]
   140009e07:	mov    eax,DWORD PTR [rbp+rbx*8+0x20]
   140009e0b:	mov    QWORD PTR [rbp-0x60],rbx
   140009e0f:	test   eax,eax
   140009e11:	jne    0x140009fa7
   140009e17:	mov    eax,DWORD PTR [rbp-0x30]
   140009e1a:	mov    rcx,QWORD PTR [rsp+0x60]
   140009e1f:	shr    eax,1
   140009e21:	mov    DWORD PTR [rsp+0x58],eax
   140009e25:	test   rcx,rcx
   140009e28:	je     0x140009e3e
   140009e2a:	mov    rax,QWORD PTR [rcx]
   140009e2d:	mov    rax,QWORD PTR [rax+0x10]
   140009e31:	call   QWORD PTR [rip+0x8709]        # 0x140012540
   140009e37:	xor    eax,eax
   140009e39:	mov    QWORD PTR [rsp+0x60],rax
   140009e3e:	mov    rax,QWORD PTR [rsi]
   140009e41:	lea    rcx,[rsp+0x60]
   140009e46:	mov    r8,QWORD PTR [rbp-0x38]
   140009e4a:	lea    r9,[rsp+0x58]
   140009e4f:	mov    rdx,QWORD PTR [rbp+rbx*8+0x28]
   140009e54:	mov    QWORD PTR [rsp+0x28],rcx
   140009e59:	lea    rcx,[rbp-0x68]
   140009e5d:	mov    rax,QWORD PTR [rax+0x58]
   140009e61:	mov    QWORD PTR [rsp+0x20],rcx
   140009e66:	mov    rcx,rsi
   140009e69:	call   QWORD PTR [rip+0x86d1]        # 0x140012540
   140009e6f:	xor    ecx,ecx
   140009e71:	mov    ebx,eax
   140009e73:	test   eax,eax
   140009e75:	jns    0x140009efb
   140009e7b:	cmp    eax,0x8007007a
   140009e80:	jne    0x140009ef3
   140009e82:	mov    edx,DWORD PTR [rsp+0x58]
   140009e86:	cmp    edx,DWORD PTR [rbp-0x30]
   140009e89:	jbe    0x140009eb0
   140009e8b:	lea    rcx,[rbp-0x58]
   140009e8f:	call   0x14000ea50
   140009e94:	xor    ecx,ecx
   140009e96:	test   al,al
   140009e98:	jne    0x140009eb0
   140009e9a:	call   QWORD PTR [rip+0x8458]        # 0x1400122f8
   140009ea0:	movzx  ebx,ax
   140009ea3:	or     ebx,0x80070000
   140009ea9:	test   eax,eax
   140009eab:	cmovle ebx,eax
   140009eae:	jmp    0x140009eb2
   140009eb0:	mov    ebx,ecx
   140009eb2:	test   ebx,ebx
   140009eb4:	js     0x14000a1d5
   140009eba:	mov    rax,QWORD PTR [rsi]
   140009ebd:	lea    rcx,[rsp+0x60]
   140009ec2:	mov    r8,QWORD PTR [rbp-0x38]
   140009ec6:	lea    r9,[rsp+0x58]
   140009ecb:	mov    QWORD PTR [rsp+0x28],rcx
   140009ed0:	lea    rcx,[rbp-0x68]
   140009ed4:	mov    QWORD PTR [rsp+0x20],rcx
   140009ed9:	mov    rcx,QWORD PTR [rbp-0x60]
   140009edd:	mov    rax,QWORD PTR [rax+0x58]
   140009ee1:	mov    rdx,QWORD PTR [rbp+rcx*8+0x28]
   140009ee6:	mov    rcx,rsi
   140009ee9:	call   QWORD PTR [rip+0x8651]        # 0x140012540
   140009eef:	mov    ebx,eax
   140009ef1:	xor    ecx,ecx
   140009ef3:	test   ebx,ebx
   140009ef5:	js     0x14000a1d5
   140009efb:	mov    rax,QWORD PTR [rbp-0x38]
   140009eff:	test   rax,rax
   140009f02:	jne    0x140009f09
   140009f04:	mov    DWORD PTR [rbp-0x28],ecx
   140009f07:	jmp    0x140009f1b
   140009f09:	mov    edx,DWORD PTR [rbp-0x30]
   140009f0c:	mov    rcx,rax
   140009f0f:	shr    rdx,1
   140009f12:	call   QWORD PTR [rip+0x8478]        # 0x140012390
   140009f18:	mov    DWORD PTR [rbp-0x28],eax
   140009f1b:	mov    rcx,QWORD PTR [rsp+0x60]
   140009f20:	lea    rdx,[rsp+0x5c]
   140009f25:	mov    rax,QWORD PTR [rcx]
   140009f28:	mov    rax,QWORD PTR [rax+0x18]
   140009f2c:	call   QWORD PTR [rip+0x860e]        # 0x140012540
   140009f32:	xor    ecx,ecx
   140009f34:	mov    ebx,eax
   140009f36:	test   eax,eax
   140009f38:	js     0x14000a1d5
   140009f3e:	cmp    DWORD PTR [rsp+0x5c],ecx
   140009f42:	jne    0x140009f6d
   140009f44:	mov    rcx,QWORD PTR [rsp+0x60]
   140009f49:	lea    rdx,[rsp+0x5c]
   140009f4e:	mov    rax,QWORD PTR [rcx]
   140009f51:	mov    rax,QWORD PTR [rax+0x20]
   140009f55:	call   QWORD PTR [rip+0x85e5]        # 0x140012540
   140009f5b:	xor    ecx,ecx
   140009f5d:	mov    ebx,eax
   140009f5f:	test   eax,eax
   140009f61:	js     0x14000a1d5
   140009f67:	cmp    DWORD PTR [rsp+0x5c],ecx
   140009f6b:	je     0x140009f77
   140009f6d:	cmp    DWORD PTR [rsp+0x6c],ecx
   140009f71:	je     0x14000a05e
   140009f77:	mov    rcx,QWORD PTR [rsp+0x48]
   140009f7c:	mov    rdx,QWORD PTR [rbp-0x60]
   140009f80:	mov    r8,QWORD PTR [rbp-0x38]
   140009f84:	mov    rax,QWORD PTR [rcx]
   140009f87:	mov    rdx,QWORD PTR [rbp+rdx*8+0x28]
   140009f8c:	mov    rax,QWORD PTR [rax+0x38]
   140009f90:	call   QWORD PTR [rip+0x85aa]        # 0x140012540
   140009f96:	xor    ecx,ecx
   140009f98:	mov    ebx,eax
   140009f9a:	test   eax,eax
   140009f9c:	js     0x14000a1d5
   140009fa2:	jmp    0x14000a05e
   140009fa7:	cmp    eax,0x1
   140009faa:	jne    0x14000a059
   140009fb0:	cmp    DWORD PTR [rsp+0x40],ecx
   140009fb4:	je     0x140009fe0
   140009fb6:	mov    r8,QWORD PTR [rsp+0x48]
   140009fbb:	xor    r9d,r9d
   140009fbe:	mov    rdx,QWORD PTR [rsp+0x78]
   140009fc3:	mov    rcx,QWORD PTR [rdi+0x8]
   140009fc7:	call   0x14000b420
   140009fcc:	xor    ecx,ecx
   140009fce:	mov    ebx,eax
   140009fd0:	test   eax,eax
   140009fd2:	js     0x14000a1d5
   140009fd8:	mov    rbx,QWORD PTR [rbp-0x60]
   140009fdc:	mov    DWORD PTR [rsp+0x40],ecx
   140009fe0:	mov    rcx,QWORD PTR [rsp+0x48]
   140009fe5:	test   rcx,rcx
   140009fe8:	je     0x140009ffe
   140009fea:	mov    rax,QWORD PTR [rcx]
   140009fed:	mov    rax,QWORD PTR [rax+0x10]
   140009ff1:	call   QWORD PTR [rip+0x8549]        # 0x140012540
   140009ff7:	xor    eax,eax
   140009ff9:	mov    QWORD PTR [rsp+0x48],rax
   140009ffe:	mov    rax,QWORD PTR [rsi]
   14000a001:	lea    r8,[rsp+0x50]
   14000a006:	mov    rdx,QWORD PTR [rbp+rbx*8+0x28]
   14000a00b:	mov    rcx,rsi
   14000a00e:	mov    rax,QWORD PTR [rax+0x20]
   14000a012:	call   QWORD PTR [rip+0x8528]        # 0x140012540
   14000a018:	mov    ebx,eax
   14000a01a:	test   eax,eax
   14000a01c:	js     0x14000a1d5
   14000a022:	mov    r8d,DWORD PTR [rsp+0x6c]
   14000a027:	mov    rcx,rdi
   14000a02a:	mov    rdx,QWORD PTR [rsp+0x50]
   14000a02f:	call   0x140009bf0
   14000a034:	mov    ebx,eax
   14000a036:	test   eax,eax
   14000a038:	js     0x14000a1d5
   14000a03e:	mov    rcx,QWORD PTR [rsp+0x50]
   14000a043:	mov    rax,QWORD PTR [rcx]
   14000a046:	mov    rax,QWORD PTR [rax+0x10]
   14000a04a:	call   QWORD PTR [rip+0x84f0]        # 0x140012540
   14000a050:	xor    ecx,ecx
   14000a052:	mov    QWORD PTR [rsp+0x50],rcx
   14000a057:	jmp    0x14000a05e
   14000a059:	cmp    eax,0x2
   14000a05c:	je     0x14000a075
   14000a05e:	mov    eax,DWORD PTR [rbp-0x80]
   14000a061:	inc    eax
   14000a063:	mov    DWORD PTR [rbp-0x80],eax
   14000a066:	cmp    eax,DWORD PTR [rsp+0x68]
   14000a06a:	jb     0x140009e03
   14000a070:	jmp    0x14000a171
   14000a075:	cmp    DWORD PTR [rsp+0x40],ecx
   14000a079:	je     0x14000a0a1
   14000a07b:	mov    r8,QWORD PTR [rsp+0x48]
   14000a080:	xor    r9d,r9d
   14000a083:	mov    rdx,QWORD PTR [rsp+0x78]
   14000a088:	mov    rcx,QWORD PTR [rdi+0x8]
   14000a08c:	call   0x14000b420
   14000a091:	xor    ecx,ecx
   14000a093:	mov    ebx,eax
   14000a095:	test   eax,eax
   14000a097:	js     0x14000a1d5
   14000a09d:	mov    DWORD PTR [rsp+0x40],ecx
   14000a0a1:	mov    rcx,QWORD PTR [rsp+0x48]
   14000a0a6:	xor    edi,edi
   14000a0a8:	test   rcx,rcx
   14000a0ab:	je     0x14000a0bf
   14000a0ad:	mov    rax,QWORD PTR [rcx]
   14000a0b0:	mov    rax,QWORD PTR [rax+0x10]
   14000a0b4:	call   QWORD PTR [rip+0x8486]        # 0x140012540
   14000a0ba:	mov    QWORD PTR [rsp+0x48],rdi
   14000a0bf:	mov    rax,QWORD PTR [rsi]
   14000a0c2:	lea    rdx,[rbp-0x78]
   14000a0c6:	mov    rcx,rsi
   14000a0c9:	mov    rax,QWORD PTR [rax+0x28]
   14000a0cd:	call   QWORD PTR [rip+0x846d]        # 0x140012540
   14000a0d3:	mov    ebx,eax
   14000a0d5:	test   eax,eax
   14000a0d7:	js     0x14000a1d5
   14000a0dd:	mov    rcx,QWORD PTR [rbp-0x78]
   14000a0e1:	lea    rdx,[rsp+0x70]
   14000a0e6:	mov    rax,QWORD PTR [rcx]
   14000a0e9:	mov    rax,QWORD PTR [rax+0x18]
   14000a0ed:	call   QWORD PTR [rip+0x844d]        # 0x140012540
   14000a0f3:	xor    ecx,ecx
   14000a0f5:	mov    ebx,eax
   14000a0f7:	test   eax,eax
   14000a0f9:	js     0x14000a1d5
   14000a0ff:	cmp    DWORD PTR [rsp+0x70],ecx
   14000a103:	jbe    0x14000a16d
   14000a105:	mov    rsi,QWORD PTR [rbp-0x70]
   14000a109:	mov    rcx,QWORD PTR [rbp-0x78]
   14000a10d:	lea    r8,[rsp+0x50]
   14000a112:	mov    edx,edi
   14000a114:	mov    rax,QWORD PTR [rcx]
   14000a117:	mov    rax,QWORD PTR [rax+0x20]
   14000a11b:	call   QWORD PTR [rip+0x841f]        # 0x140012540
   14000a121:	mov    ebx,eax
   14000a123:	test   eax,eax
   14000a125:	js     0x14000a1d5
   14000a12b:	mov    r8d,DWORD PTR [rsp+0x6c]
   14000a130:	mov    rcx,rsi
   14000a133:	mov    rdx,QWORD PTR [rsp+0x50]
   14000a138:	call   0x140009bf0
   14000a13d:	mov    ebx,eax
   14000a13f:	test   eax,eax
   14000a141:	js     0x14000a1d5
   14000a147:	mov    rcx,QWORD PTR [rsp+0x50]
   14000a14c:	mov    rax,QWORD PTR [rcx]
   14000a14f:	mov    rax,QWORD PTR [rax+0x10]
   14000a153:	call   QWORD PTR [rip+0x83e7]        # 0x140012540
   14000a159:	xor    ecx,ecx
   14000a15b:	inc    edi
   14000a15d:	mov    QWORD PTR [rsp+0x50],rcx
   14000a162:	cmp    edi,DWORD PTR [rsp+0x70]
   14000a166:	jb     0x14000a109
   14000a168:	mov    rdi,rsi
   14000a16b:	jmp    0x14000a171
   14000a16d:	mov    rdi,QWORD PTR [rbp-0x70]
   14000a171:	mov    eax,DWORD PTR [rsp+0x40]
   14000a175:	test   eax,eax
   14000a177:	jne    0x14000a1ba
   14000a179:	mov    rdi,QWORD PTR [rdi+0x8]
   14000a17d:	mov    eax,DWORD PTR [rdi+0x20]
   14000a180:	test   eax,eax
   14000a182:	jne    0x14000a18b
   14000a184:	mov    ebx,0x80004005
   14000a189:	jmp    0x14000a1d5
   14000a18b:	dec    eax
   14000a18d:	mov    DWORD PTR [rdi+0x20],eax
   14000a190:	mov    rcx,rdi
   14000a193:	call   0x14000c148
   14000a198:	mov    ebx,eax
   14000a19a:	test   eax,eax
   14000a19c:	js     0x14000a1d5
   14000a19e:	mov    rcx,QWORD PTR [rdi+0x10]
   14000a1a2:	mov    rax,QWORD PTR [rcx]
   14000a1a5:	mov    rax,QWORD PTR [rax+0x78]
   14000a1a9:	call   QWORD PTR [rip+0x8391]        # 0x140012540
   14000a1af:	mov    ebx,eax
   14000a1b1:	test   eax,eax
   14000a1b3:	js     0x14000a1d5
   14000a1b5:	mov    DWORD PTR [rdi+0x18],eax
   14000a1b8:	jmp    0x14000a1d5
   14000a1ba:	mov    r8,QWORD PTR [rsp+0x48]
   14000a1bf:	mov    r9d,0x1
   14000a1c5:	mov    rdx,QWORD PTR [rsp+0x78]
   14000a1ca:	mov    rcx,QWORD PTR [rdi+0x8]
   14000a1ce:	call   0x14000b420
   14000a1d3:	mov    ebx,eax
   14000a1d5:	mov    rcx,QWORD PTR [rsp+0x60]
   14000a1da:	xor    edi,edi
   14000a1dc:	test   rcx,rcx
   14000a1df:	je     0x14000a1f3
   14000a1e1:	mov    rax,QWORD PTR [rcx]
   14000a1e4:	mov    rax,QWORD PTR [rax+0x10]
   14000a1e8:	call   QWORD PTR [rip+0x8352]        # 0x140012540
   14000a1ee:	mov    QWORD PTR [rsp+0x60],rdi
   14000a1f3:	mov    rcx,QWORD PTR [rbp-0x68]
   14000a1f7:	test   rcx,rcx
   14000a1fa:	je     0x14000a20d
   14000a1fc:	mov    rax,QWORD PTR [rcx]
   14000a1ff:	mov    rax,QWORD PTR [rax+0x10]
   14000a203:	call   QWORD PTR [rip+0x8337]        # 0x140012540
   14000a209:	mov    QWORD PTR [rbp-0x68],rdi
   14000a20d:	mov    rcx,QWORD PTR [rsp+0x50]
   14000a212:	test   rcx,rcx
   14000a215:	je     0x14000a229
   14000a217:	mov    rax,QWORD PTR [rcx]
   14000a21a:	mov    rax,QWORD PTR [rax+0x10]
   14000a21e:	call   QWORD PTR [rip+0x831c]        # 0x140012540
   14000a224:	mov    QWORD PTR [rsp+0x50],rdi
   14000a229:	mov    rcx,QWORD PTR [rbp-0x78]
   14000a22d:	test   rcx,rcx
   14000a230:	je     0x14000a243
   14000a232:	mov    rax,QWORD PTR [rcx]
   14000a235:	mov    rax,QWORD PTR [rax+0x10]
   14000a239:	call   QWORD PTR [rip+0x8301]        # 0x140012540
   14000a23f:	mov    QWORD PTR [rbp-0x78],rdi
   14000a243:	mov    rcx,QWORD PTR [rsp+0x48]
   14000a248:	test   rcx,rcx
   14000a24b:	je     0x14000a25f
   14000a24d:	mov    rax,QWORD PTR [rcx]
   14000a250:	mov    rax,QWORD PTR [rax+0x10]
   14000a254:	call   QWORD PTR [rip+0x82e6]        # 0x140012540
   14000a25a:	mov    QWORD PTR [rsp+0x48],rdi
   14000a25f:	cmp    BYTE PTR [rbp+0xc],dil
   14000a263:	je     0x14000a26e
   14000a265:	lea    rcx,[rbp-0x20]
   14000a269:	call   0x14000eb30
   14000a26e:	cmp    BYTE PTR [rbp-0x2c],dil
   14000a272:	je     0x14000a27d
   14000a274:	lea    rcx,[rbp-0x58]
   14000a278:	call   0x14000eb30
   14000a27d:	mov    eax,ebx
   14000a27f:	mov    rcx,QWORD PTR [rbp+0xe20]
   14000a286:	xor    rcx,rsp
   14000a289:	call   0x140011800
   14000a28e:	mov    rbx,QWORD PTR [rsp+0xf68]
   14000a296:	add    rsp,0xf30
   14000a29d:	pop    rdi
   14000a29e:	pop    rsi
   14000a29f:	pop    rbp
   14000a2a0:	ret    
   14000a2a1:	int3   
   14000a2a2:	int3   
   14000a2a3:	int3   
   14000a2a4:	int3   
   14000a2a5:	int3   
   14000a2a6:	int3   
   14000a2a7:	int3   
   14000a2a8:	rex push rbp
   14000a2aa:	push   rbx
   14000a2ab:	push   rsi
   14000a2ac:	push   rdi
   14000a2ad:	lea    rbp,[rsp-0x3d8]
   14000a2b5:	sub    rsp,0x4d8
   14000a2bc:	mov    rax,QWORD PTR [rip+0x11d75]        # 0x14001c038
   14000a2c3:	xor    rax,rsp
   14000a2c6:	mov    QWORD PTR [rbp+0x3c0],rax
   14000a2cd:	mov    rsi,r8
   14000a2d0:	mov    QWORD PTR [rsp+0x48],r8
   14000a2d5:	xor    r8d,r8d
   14000a2d8:	mov    QWORD PTR [rsp+0x40],rdx
   14000a2dd:	mov    QWORD PTR [rsp+0x38],r8
   14000a2e2:	mov    rbx,rdx
   14000a2e5:	mov    rdi,rcx
   14000a2e8:	mov    DWORD PTR [rsp+0x30],r9d
   14000a2ed:	mov    r8d,0x1fe
   14000a2f3:	lea    rcx,[rbp-0x3e]
   14000a2f7:	xor    edx,edx
   14000a2f9:	call   0x140011e22
   14000a2fe:	lea    rax,[rbp-0x40]
   14000a302:	mov    DWORD PTR [rbp-0x50],0x200
   14000a309:	mov    QWORD PTR [rbp-0x58],rax
   14000a30d:	lea    rcx,[rbp+0x1c2]
   14000a314:	xor    eax,eax
   14000a316:	mov    WORD PTR [rbp-0x4c],0x100
   14000a31c:	xor    edx,edx
   14000a31e:	mov    DWORD PTR [rbp-0x48],eax
   14000a321:	mov    r8d,0x1fe
   14000a327:	mov    WORD PTR [rbp-0x40],ax
   14000a32b:	call   0x140011e22
   14000a330:	xor    ecx,ecx
   14000a332:	mov    DWORD PTR [rsp+0x78],0x200
   14000a33a:	mov    WORD PTR [rsp+0x7c],0x100
   14000a341:	lea    rax,[rbp+0x1c0]
   14000a348:	mov    QWORD PTR [rsp+0x70],rax
   14000a34d:	mov    DWORD PTR [rbp-0x80],ecx
   14000a350:	mov    WORD PTR [rbp+0x1c0],cx
   14000a357:	test   rsi,rsi
   14000a35a:	je     0x14000a561
   14000a360:	test   rbx,rbx
   14000a363:	je     0x14000a561
   14000a369:	mov    rax,QWORD PTR [rsi]
   14000a36c:	lea    rdx,[rsp+0x38]
   14000a371:	mov    rcx,rsi
   14000a374:	mov    rax,QWORD PTR [rax+0x18]
   14000a378:	call   QWORD PTR [rip+0x81c2]        # 0x140012540
   14000a37e:	xor    r8d,r8d
   14000a381:	mov    ebx,eax
   14000a383:	test   eax,eax
   14000a385:	js     0x14000a586
   14000a38b:	mov    rax,QWORD PTR [rsp+0x40]
   14000a390:	or     rsi,0xffffffffffffffff
   14000a394:	mov    rcx,rsi
   14000a397:	inc    rcx
   14000a39a:	cmp    WORD PTR [rax+rcx*2],r8w
   14000a39f:	jne    0x14000a397
   14000a3a1:	mov    rdx,QWORD PTR [rsp+0x38]
   14000a3a6:	mov    rax,rsi
   14000a3a9:	inc    rax
   14000a3ac:	cmp    WORD PTR [rdx+rax*2],r8w
   14000a3b1:	jne    0x14000a3a9
   14000a3b3:	dec    eax
   14000a3b5:	cmp    ecx,eax
   14000a3b7:	jb     0x14000a3c3
   14000a3b9:	mov    ebx,0x80070057
   14000a3be:	jmp    0x14000a586
   14000a3c3:	mov    eax,ecx
   14000a3c5:	lea    rbx,[rdx+rax*2]
   14000a3c9:	cmp    WORD PTR [rbx],0x2f
   14000a3cd:	jne    0x14000a3d3
   14000a3cf:	add    rbx,0x2
   14000a3d3:	lea    rdx,[rip+0x8836]        # 0x140012c10
   14000a3da:	mov    rcx,rbx
   14000a3dd:	call   QWORD PTR [rip+0x80d5]        # 0x1400124b8
   14000a3e3:	xor    ecx,ecx
   14000a3e5:	test   rax,rax
   14000a3e8:	jne    0x14000a406
   14000a3ea:	mov    r8d,DWORD PTR [rsp+0x30]
   14000a3ef:	mov    r9,rbx
   14000a3f2:	mov    rdx,QWORD PTR [rsp+0x48]
   14000a3f7:	mov    rcx,rdi
   14000a3fa:	call   0x14000a5ac
   14000a3ff:	mov    ebx,eax
   14000a401:	jmp    0x14000a586
   14000a406:	test   rbx,rbx
   14000a409:	je     0x14000a42f
   14000a40b:	sub    rax,rbx
   14000a40e:	mov    BYTE PTR [rsp+0x20],0x1
   14000a413:	sar    rax,1
   14000a416:	lea    rcx,[rbp-0x78]
   14000a41a:	xor    r9d,r9d
   14000a41d:	mov    rdx,rbx
   14000a420:	lea    r8d,[rax+rax*1]
   14000a424:	call   0x14000eb60
   14000a429:	mov    ebx,eax
   14000a42b:	xor    ecx,ecx
   14000a42d:	jmp    0x14000a434
   14000a42f:	mov    ebx,0x80070057
   14000a434:	test   ebx,ebx
   14000a436:	js     0x14000a578
   14000a43c:	mov    ebx,ecx
   14000a43e:	cmp    DWORD PTR [rdi+0x30],ecx
   14000a441:	jbe    0x14000a45b
   14000a443:	mov    rcx,QWORD PTR [rdi+0x10]
   14000a447:	lea    rdx,[rip+0x8fe2]        # 0x140013430
   14000a44e:	call   QWORD PTR [rip+0x808c]        # 0x1400124e0
   14000a454:	inc    ebx
   14000a456:	cmp    ebx,DWORD PTR [rdi+0x30]
   14000a459:	jb     0x14000a443
   14000a45b:	mov    r8,QWORD PTR [rbp-0x58]
   14000a45f:	lea    rdx,[rip+0x8f5a]        # 0x1400133c0
   14000a466:	mov    rcx,QWORD PTR [rdi+0x10]
   14000a46a:	call   QWORD PTR [rip+0x8070]        # 0x1400124e0
   14000a470:	mov    rax,QWORD PTR [rsp+0x40]
   14000a475:	xor    r8d,r8d
   14000a478:	inc    rsi
   14000a47b:	cmp    WORD PTR [rax+rsi*2],r8w
   14000a480:	jne    0x14000a478
   14000a482:	lea    r8d,[rsi+rsi*1]
   14000a486:	mov    BYTE PTR [rsp+0x20],0x1
   14000a48b:	xor    r9d,r9d
   14000a48e:	lea    rcx,[rsp+0x50]
   14000a493:	mov    rdx,rax
   14000a496:	call   0x14000eb60
   14000a49b:	xor    ecx,ecx
   14000a49d:	mov    ebx,eax
   14000a49f:	test   eax,eax
   14000a4a1:	js     0x14000a566
   14000a4a7:	mov    eax,DWORD PTR [rbp-0x80]
   14000a4aa:	lea    r8d,[rcx+0x2]
   14000a4ae:	lea    rdx,[rip+0x875b]        # 0x140012c10
   14000a4b5:	mov    BYTE PTR [rsp+0x20],0x1
   14000a4ba:	lea    rcx,[rsp+0x50]
   14000a4bf:	lea    r9d,[rax+rax*1]
   14000a4c3:	call   0x14000eb60
   14000a4c8:	xor    ecx,ecx
   14000a4ca:	mov    ebx,eax
   14000a4cc:	test   eax,eax
   14000a4ce:	js     0x14000a566
   14000a4d4:	mov    r8d,DWORD PTR [rbp-0x48]
   14000a4d8:	test   r8d,r8d
   14000a4db:	je     0x14000a500
   14000a4dd:	mov    eax,DWORD PTR [rbp-0x80]
   14000a4e0:	lea    rcx,[rsp+0x50]
   14000a4e5:	mov    rdx,QWORD PTR [rbp-0x58]
   14000a4e9:	add    r8d,r8d
   14000a4ec:	mov    BYTE PTR [rsp+0x20],0x1
   14000a4f1:	lea    r9d,[rax+rax*1]
   14000a4f5:	call   0x14000eb60
   14000a4fa:	mov    ebx,eax
   14000a4fc:	xor    ecx,ecx
   14000a4fe:	jmp    0x14000a502
   14000a500:	mov    ebx,ecx
   14000a502:	test   ebx,ebx
   14000a504:	js     0x14000a566
   14000a506:	mov    r9d,DWORD PTR [rsp+0x30]
   14000a50b:	mov    rcx,rdi
   14000a50e:	mov    r8,QWORD PTR [rsp+0x48]
   14000a513:	mov    rdx,QWORD PTR [rsp+0x70]
   14000a518:	inc    DWORD PTR [rdi+0x30]
   14000a51b:	call   0x14000a2a8
   14000a520:	xor    ecx,ecx
   14000a522:	mov    ebx,eax
   14000a524:	test   eax,eax
   14000a526:	js     0x14000a566
   14000a528:	add    DWORD PTR [rdi+0x30],0xffffffff
   14000a52c:	mov    esi,ecx
   14000a52e:	je     0x14000a548
   14000a530:	mov    rcx,QWORD PTR [rdi+0x10]
   14000a534:	lea    rdx,[rip+0x8ef5]        # 0x140013430
   14000a53b:	call   QWORD PTR [rip+0x7f9f]        # 0x1400124e0
   14000a541:	inc    esi
   14000a543:	cmp    esi,DWORD PTR [rdi+0x30]
   14000a546:	jb     0x14000a530
   14000a548:	mov    r8,QWORD PTR [rbp-0x58]
   14000a54c:	lea    rdx,[rip+0x8e7d]        # 0x1400133d0
   14000a553:	mov    rcx,QWORD PTR [rdi+0x10]
   14000a557:	call   QWORD PTR [rip+0x7f83]        # 0x1400124e0
   14000a55d:	xor    ecx,ecx
   14000a55f:	jmp    0x14000a566
   14000a561:	mov    ebx,0x80070057
   14000a566:	cmp    BYTE PTR [rsp+0x7c],cl
   14000a56a:	je     0x14000a578
   14000a56c:	lea    rcx,[rsp+0x50]
   14000a571:	call   0x14000eb30
   14000a576:	xor    ecx,ecx
   14000a578:	cmp    BYTE PTR [rbp-0x4c],cl
   14000a57b:	je     0x14000a586
   14000a57d:	lea    rcx,[rbp-0x78]
   14000a581:	call   0x14000eb30
   14000a586:	mov    eax,ebx
   14000a588:	mov    rcx,QWORD PTR [rbp+0x3c0]
   14000a58f:	xor    rcx,rsp
   14000a592:	call   0x140011800
   14000a597:	add    rsp,0x4d8
   14000a59e:	pop    rdi
   14000a59f:	pop    rsi
   14000a5a0:	pop    rbx
   14000a5a1:	pop    rbp
   14000a5a2:	ret    
   14000a5a3:	int3   
   14000a5a4:	int3   
   14000a5a5:	int3   
   14000a5a6:	int3   
   14000a5a7:	int3   
   14000a5a8:	int3   
   14000a5a9:	int3   
   14000a5aa:	int3   
   14000a5ab:	int3   
   14000a5ac:	rex push rbp
   14000a5ae:	push   rbx
   14000a5af:	push   rsi
   14000a5b0:	push   rdi
   14000a5b1:	lea    rbp,[rsp-0xc28]
   14000a5b9:	sub    rsp,0xd28
   14000a5c0:	mov    rax,QWORD PTR [rip+0x11a71]        # 0x14001c038
   14000a5c7:	xor    rax,rsp
   14000a5ca:	mov    QWORD PTR [rbp+0xc10],rax
   14000a5d1:	mov    rbx,r9
   14000a5d4:	mov    DWORD PTR [rsp+0x64],r8d
   14000a5d9:	mov    rsi,rdx
   14000a5dc:	mov    QWORD PTR [rbp-0x80],rdx
   14000a5e0:	mov    rdi,rcx
   14000a5e3:	mov    QWORD PTR [rbp-0x38],rbx
   14000a5e7:	xor    edx,edx
   14000a5e9:	mov    DWORD PTR [rsp+0x60],0x40
   14000a5f1:	mov    r8d,0x1fe
   14000a5f7:	lea    rcx,[rbp+0x612]
   14000a5fe:	call   0x140011e22
   14000a603:	lea    rax,[rbp+0x610]
   14000a60a:	mov    DWORD PTR [rbp-0x8],0x200
   14000a611:	mov    QWORD PTR [rbp-0x10],rax
   14000a615:	lea    rcx,[rbp+0xa12]
   14000a61c:	xor    eax,eax
   14000a61e:	mov    WORD PTR [rbp-0x4],0x100
   14000a624:	xor    edx,edx
   14000a626:	mov    DWORD PTR [rbp+0x0],eax
   14000a629:	mov    r8d,0x1fe
   14000a62f:	mov    WORD PTR [rbp+0x610],ax
   14000a636:	mov    DWORD PTR [rsp+0x50],eax
   14000a63a:	mov    QWORD PTR [rsp+0x48],rax
   14000a63f:	mov    QWORD PTR [rsp+0x70],rax
   14000a644:	mov    QWORD PTR [rsp+0x58],rax
   14000a649:	mov    QWORD PTR [rbp-0x78],rax
   14000a64d:	mov    DWORD PTR [rsp+0x54],eax
   14000a651:	mov    DWORD PTR [rsp+0x68],eax
   14000a655:	call   0x140011e22
   14000a65a:	xor    eax,eax
   14000a65c:	lea    rcx,[rbp+0x812]
   14000a663:	xor    edx,edx
   14000a665:	mov    WORD PTR [rbp+0xa10],ax
   14000a66c:	mov    r8d,0x1fe
   14000a672:	call   0x140011e22
   14000a677:	mov    ecx,DWORD PTR [rbp-0x8]
   14000a67a:	lea    rax,[rbp+0x810]
   14000a681:	mov    QWORD PTR [rbp-0x50],rax
   14000a685:	xor    eax,eax
   14000a687:	mov    DWORD PTR [rbp-0x48],ecx
   14000a68a:	mov    WORD PTR [rbp-0x44],0x100
   14000a690:	mov    DWORD PTR [rbp-0x40],eax
   14000a693:	mov    WORD PTR [rbp+0x810],ax
   14000a69a:	test   rsi,rsi
   14000a69d:	jne    0x14000a6a9
   14000a69f:	mov    ebx,0x80070057
   14000a6a4:	jmp    0x14000ad96
   14000a6a9:	test   rbx,rbx
   14000a6ac:	je     0x14000a6b3
   14000a6ae:	cmp    WORD PTR [rbx],ax
   14000a6b1:	jne    0x14000a6d4
   14000a6b3:	mov    rax,QWORD PTR [rsi]
   14000a6b6:	lea    rdx,[rbp-0x38]
   14000a6ba:	mov    rcx,rsi
   14000a6bd:	mov    rax,QWORD PTR [rax+0x18]
   14000a6c1:	call   QWORD PTR [rip+0x7e79]        # 0x140012540
   14000a6c7:	xor    r8d,r8d
   14000a6ca:	mov    ebx,eax
   14000a6cc:	test   eax,eax
   14000a6ce:	js     0x14000acfb
   14000a6d4:	xor    r9d,r9d
   14000a6d7:	mov    BYTE PTR [rsp+0x20],0x1
   14000a6dc:	lea    rdx,[rip+0x8cfd]        # 0x1400133e0
   14000a6e3:	lea    rcx,[rbp-0x70]
   14000a6e7:	lea    r8d,[r9+0x2]
   14000a6eb:	call   0x14000eb60
   14000a6f0:	xor    r8d,r8d
   14000a6f3:	mov    ebx,eax
   14000a6f5:	test   eax,eax
   14000a6f7:	js     0x14000acfb
   14000a6fd:	mov    rdx,QWORD PTR [rbp-0x38]
   14000a701:	test   rdx,rdx
   14000a704:	je     0x14000a734
   14000a706:	mov    eax,DWORD PTR [rbp-0x40]
   14000a709:	lea    r9d,[rax+rax*1]
   14000a70d:	or     rax,0xffffffffffffffff
   14000a711:	inc    rax
   14000a714:	cmp    WORD PTR [rdx+rax*2],r8w
   14000a719:	jne    0x14000a711
   14000a71b:	lea    r8d,[rax+rax*1]
   14000a71f:	mov    BYTE PTR [rsp+0x20],0x1
   14000a724:	lea    rcx,[rbp-0x70]
   14000a728:	call   0x14000eb60
   14000a72d:	mov    ebx,eax
   14000a72f:	xor    r8d,r8d
   14000a732:	jmp    0x14000a737
   14000a734:	mov    ebx,r8d
   14000a737:	test   ebx,ebx
   14000a739:	js     0x14000acfb
   14000a73f:	mov    rax,QWORD PTR [rsi]
   14000a742:	lea    r8,[rsp+0x60]
   14000a747:	lea    rdx,[rbp+0x10]
   14000a74b:	mov    rcx,rsi
   14000a74e:	mov    rax,QWORD PTR [rax+0x60]
   14000a752:	call   QWORD PTR [rip+0x7de8]        # 0x140012540
   14000a758:	xor    r8d,r8d
   14000a75b:	mov    ebx,eax
   14000a75d:	test   eax,eax
   14000a75f:	js     0x14000acfb
   14000a765:	mov    esi,DWORD PTR [rbp-0x40]
   14000a768:	mov    eax,r8d
   14000a76b:	mov    DWORD PTR [rsp+0x40],eax
   14000a76f:	cmp    DWORD PTR [rsp+0x60],r8d
   14000a774:	jbe    0x14000ac68
   14000a77a:	lea    rax,[rax+rax*2]
   14000a77e:	mov    QWORD PTR [rsp+0x78],rax
   14000a783:	mov    eax,DWORD PTR [rbp+rax*8+0x10]
   14000a787:	test   eax,eax
   14000a789:	jne    0x14000aa22
   14000a78f:	mov    eax,DWORD PTR [rbp-0x8]
   14000a792:	mov    rcx,QWORD PTR [rsp+0x58]
   14000a797:	shr    eax,1
   14000a799:	mov    DWORD PTR [rsp+0x50],eax
   14000a79d:	test   rcx,rcx
   14000a7a0:	je     0x14000a7b6
   14000a7a2:	mov    rax,QWORD PTR [rcx]
   14000a7a5:	mov    rax,QWORD PTR [rax+0x10]
   14000a7a9:	call   QWORD PTR [rip+0x7d91]        # 0x140012540
   14000a7af:	xor    eax,eax
   14000a7b1:	mov    QWORD PTR [rsp+0x58],rax
   14000a7b6:	mov    rcx,QWORD PTR [rbp-0x80]
   14000a7ba:	lea    rdx,[rsp+0x58]
   14000a7bf:	mov    r8,QWORD PTR [rbp-0x10]
   14000a7c3:	lea    r9,[rsp+0x50]
   14000a7c8:	mov    QWORD PTR [rsp+0x28],rdx
   14000a7cd:	lea    rdx,[rbp-0x78]
   14000a7d1:	mov    QWORD PTR [rsp+0x20],rdx
   14000a7d6:	mov    rax,QWORD PTR [rcx]
   14000a7d9:	mov    rdx,QWORD PTR [rsp+0x78]
   14000a7de:	mov    rax,QWORD PTR [rax+0x58]
   14000a7e2:	mov    rdx,QWORD PTR [rbp+rdx*8+0x18]
   14000a7e7:	call   QWORD PTR [rip+0x7d53]        # 0x140012540
   14000a7ed:	xor    r8d,r8d
   14000a7f0:	mov    ebx,eax
   14000a7f2:	test   eax,eax
   14000a7f4:	jns    0x14000a882
   14000a7fa:	cmp    eax,0x8007007a
   14000a7ff:	jne    0x14000a87a
   14000a801:	mov    edx,DWORD PTR [rsp+0x50]
   14000a805:	cmp    edx,DWORD PTR [rbp-0x8]
   14000a808:	jbe    0x14000a833
   14000a80a:	lea    rcx,[rbp-0x30]
   14000a80e:	call   0x14000ea50
   14000a813:	xor    r8d,r8d
   14000a816:	test   al,al
   14000a818:	jne    0x14000a833
   14000a81a:	call   QWORD PTR [rip+0x7ad8]        # 0x1400122f8
   14000a820:	movzx  ebx,ax
   14000a823:	xor    r8d,r8d
   14000a826:	or     ebx,0x80070000
   14000a82c:	test   eax,eax
   14000a82e:	cmovle ebx,eax
   14000a831:	jmp    0x14000a836
   14000a833:	mov    ebx,r8d
   14000a836:	test   ebx,ebx
   14000a838:	js     0x14000acfb
   14000a83e:	mov    rcx,QWORD PTR [rbp-0x80]
   14000a842:	lea    rdx,[rsp+0x58]
   14000a847:	mov    r8,QWORD PTR [rbp-0x10]
   14000a84b:	lea    r9,[rsp+0x50]
   14000a850:	mov    QWORD PTR [rsp+0x28],rdx
   14000a855:	lea    rdx,[rbp-0x78]
   14000a859:	mov    QWORD PTR [rsp+0x20],rdx
   14000a85e:	mov    rax,QWORD PTR [rcx]
   14000a861:	mov    rdx,QWORD PTR [rsp+0x78]
   14000a866:	mov    rax,QWORD PTR [rax+0x58]
   14000a86a:	mov    rdx,QWORD PTR [rbp+rdx*8+0x18]
   14000a86f:	call   QWORD PTR [rip+0x7ccb]        # 0x140012540
   14000a875:	mov    ebx,eax
   14000a877:	xor    r8d,r8d
   14000a87a:	test   ebx,ebx
   14000a87c:	js     0x14000acfb
   14000a882:	mov    rax,QWORD PTR [rbp-0x10]
   14000a886:	test   rax,rax
   14000a889:	jne    0x14000a891
   14000a88b:	mov    DWORD PTR [rbp+0x0],r8d
   14000a88f:	jmp    0x14000a8a3
   14000a891:	mov    edx,DWORD PTR [rbp-0x8]
   14000a894:	mov    rcx,rax
   14000a897:	shr    rdx,1
   14000a89a:	call   QWORD PTR [rip+0x7af0]        # 0x140012390
   14000a8a0:	mov    DWORD PTR [rbp+0x0],eax
   14000a8a3:	mov    rcx,QWORD PTR [rsp+0x58]
   14000a8a8:	lea    rdx,[rsp+0x54]
   14000a8ad:	mov    rax,QWORD PTR [rcx]
   14000a8b0:	mov    rax,QWORD PTR [rax+0x18]
   14000a8b4:	call   QWORD PTR [rip+0x7c86]        # 0x140012540
   14000a8ba:	xor    r8d,r8d
   14000a8bd:	mov    ebx,eax
   14000a8bf:	test   eax,eax
   14000a8c1:	js     0x14000acfb
   14000a8c7:	cmp    DWORD PTR [rsp+0x54],r8d
   14000a8cc:	jne    0x14000a8f9
   14000a8ce:	mov    rcx,QWORD PTR [rsp+0x58]
   14000a8d3:	lea    rdx,[rsp+0x54]
   14000a8d8:	mov    rax,QWORD PTR [rcx]
   14000a8db:	mov    rax,QWORD PTR [rax+0x20]
   14000a8df:	call   QWORD PTR [rip+0x7c5b]        # 0x140012540
   14000a8e5:	xor    r8d,r8d
   14000a8e8:	mov    ebx,eax
   14000a8ea:	test   eax,eax
   14000a8ec:	js     0x14000acfb
   14000a8f2:	cmp    DWORD PTR [rsp+0x54],r8d
   14000a8f7:	je     0x14000a904
   14000a8f9:	cmp    DWORD PTR [rsp+0x64],r8d
   14000a8fe:	je     0x14000ab11
   14000a904:	lea    r9d,[rsi+rsi*1]
   14000a908:	mov    BYTE PTR [rsp+0x20],0x1
   14000a90d:	mov    esi,0x2
   14000a912:	lea    rdx,[rip+0x850f]        # 0x140012e28
   14000a919:	mov    r8d,esi
   14000a91c:	lea    rcx,[rbp-0x70]
   14000a920:	call   0x14000eb60
   14000a925:	xor    r8d,r8d
   14000a928:	mov    ebx,eax
   14000a92a:	test   eax,eax
   14000a92c:	js     0x14000acfb
   14000a932:	mov    rax,QWORD PTR [rsp+0x78]
   14000a937:	mov    rdx,QWORD PTR [rbp+rax*8+0x18]
   14000a93c:	test   rdx,rdx
   14000a93f:	je     0x14000a96f
   14000a941:	mov    eax,DWORD PTR [rbp-0x40]
   14000a944:	lea    r9d,[rax+rax*1]
   14000a948:	or     rax,0xffffffffffffffff
   14000a94c:	inc    rax
   14000a94f:	cmp    WORD PTR [rdx+rax*2],r8w
   14000a954:	jne    0x14000a94c
   14000a956:	lea    r8d,[rax+rax*1]
   14000a95a:	mov    BYTE PTR [rsp+0x20],0x1
   14000a95f:	lea    rcx,[rbp-0x70]
   14000a963:	call   0x14000eb60
   14000a968:	mov    ebx,eax
   14000a96a:	xor    r8d,r8d
   14000a96d:	jmp    0x14000a972
   14000a96f:	mov    ebx,r8d
   14000a972:	test   ebx,ebx
   14000a974:	js     0x14000acfb
   14000a97a:	mov    eax,DWORD PTR [rbp-0x40]
   14000a97d:	lea    rdx,[rip+0x8a60]        # 0x1400133e4
   14000a984:	mov    r8d,0x4
   14000a98a:	mov    BYTE PTR [rsp+0x20],0x1
   14000a98f:	lea    rcx,[rbp-0x70]
   14000a993:	lea    r9d,[rax+rax*1]
   14000a997:	call   0x14000eb60
   14000a99c:	xor    r8d,r8d
   14000a99f:	mov    ebx,eax
   14000a9a1:	test   eax,eax
   14000a9a3:	js     0x14000acfb
   14000a9a9:	mov    rcx,QWORD PTR [rbp-0x10]
   14000a9ad:	test   rcx,rcx
   14000a9b0:	je     0x14000a9e3
   14000a9b2:	mov    eax,DWORD PTR [rbp-0x40]
   14000a9b5:	lea    r9d,[rax+rax*1]
   14000a9b9:	or     rax,0xffffffffffffffff
   14000a9bd:	inc    rax
   14000a9c0:	cmp    WORD PTR [rcx+rax*2],r8w
   14000a9c5:	jne    0x14000a9bd
   14000a9c7:	mov    rdx,rcx
   14000a9ca:	mov    BYTE PTR [rsp+0x20],0x1
   14000a9cf:	lea    rcx,[rbp-0x70]
   14000a9d3:	lea    r8d,[rax+rax*1]
   14000a9d7:	call   0x14000eb60
   14000a9dc:	mov    ebx,eax
   14000a9de:	xor    r8d,r8d
   14000a9e1:	jmp    0x14000a9e6
   14000a9e3:	mov    ebx,r8d
   14000a9e6:	test   ebx,ebx
   14000a9e8:	js     0x14000acfb
   14000a9ee:	mov    eax,DWORD PTR [rbp-0x40]
   14000a9f1:	lea    rdx,[rip+0x89f4]        # 0x1400133ec
   14000a9f8:	mov    r8d,esi
   14000a9fb:	mov    BYTE PTR [rsp+0x20],0x1
   14000aa00:	lea    rcx,[rbp-0x70]
   14000aa04:	lea    r9d,[rax+rax*1]
   14000aa08:	call   0x14000eb60
   14000aa0d:	xor    r8d,r8d
   14000aa10:	mov    ebx,eax
   14000aa12:	test   eax,eax
   14000aa14:	js     0x14000acfb
   14000aa1a:	mov    esi,DWORD PTR [rbp-0x40]
   14000aa1d:	jmp    0x14000ab11
   14000aa22:	cmp    eax,0x1
   14000aa25:	jne    0x14000ab0c
   14000aa2b:	test   esi,esi
   14000aa2d:	je     0x14000aa9b
   14000aa2f:	lea    r9d,[rsi+rsi*1]
   14000aa33:	mov    BYTE PTR [rsp+0x20],al
   14000aa37:	lea    r8d,[rax+0x1]
   14000aa3b:	lea    rdx,[rip+0x89ae]        # 0x1400133f0
   14000aa42:	lea    rcx,[rbp-0x70]
   14000aa46:	call   0x14000eb60
   14000aa4b:	xor    r8d,r8d
   14000aa4e:	mov    ebx,eax
   14000aa50:	test   eax,eax
   14000aa52:	js     0x14000acfb
   14000aa58:	mov    ebx,r8d
   14000aa5b:	cmp    DWORD PTR [rdi+0x30],r8d
   14000aa5f:	jbe    0x14000aa79
   14000aa61:	mov    rcx,QWORD PTR [rdi+0x10]
   14000aa65:	lea    rdx,[rip+0x89c4]        # 0x140013430
   14000aa6c:	call   QWORD PTR [rip+0x7a6e]        # 0x1400124e0
   14000aa72:	inc    ebx
   14000aa74:	cmp    ebx,DWORD PTR [rdi+0x30]
   14000aa77:	jb     0x14000aa61
   14000aa79:	mov    rbx,QWORD PTR [rbp-0x50]
   14000aa7d:	lea    rdx,[rip+0x83b4]        # 0x140012e38
   14000aa84:	mov    rcx,QWORD PTR [rdi+0x10]
   14000aa88:	mov    r8,rbx
   14000aa8b:	call   QWORD PTR [rip+0x7a4f]        # 0x1400124e0
   14000aa91:	xor    eax,eax
   14000aa93:	mov    WORD PTR [rbx],ax
   14000aa96:	mov    esi,eax
   14000aa98:	mov    DWORD PTR [rbp-0x40],eax
   14000aa9b:	mov    rcx,QWORD PTR [rbp-0x80]
   14000aa9f:	lea    r8,[rsp+0x48]
   14000aaa4:	mov    rdx,QWORD PTR [rsp+0x78]
   14000aaa9:	mov    rax,QWORD PTR [rcx]
   14000aaac:	mov    rdx,QWORD PTR [rbp+rdx*8+0x18]
   14000aab1:	mov    rax,QWORD PTR [rax+0x20]
   14000aab5:	call   QWORD PTR [rip+0x7a85]        # 0x140012540
   14000aabb:	xor    r8d,r8d
   14000aabe:	mov    ebx,eax
   14000aac0:	test   eax,eax
   14000aac2:	js     0x14000acfb
   14000aac8:	mov    r8d,DWORD PTR [rsp+0x64]
   14000aacd:	xor    r9d,r9d
   14000aad0:	mov    rdx,QWORD PTR [rsp+0x48]
   14000aad5:	mov    rcx,rdi
   14000aad8:	inc    DWORD PTR [rdi+0x30]
   14000aadb:	call   0x14000a5ac
   14000aae0:	dec    DWORD PTR [rdi+0x30]
   14000aae3:	xor    r8d,r8d
   14000aae6:	mov    ebx,eax
   14000aae8:	test   eax,eax
   14000aaea:	js     0x14000acfb
   14000aaf0:	mov    rcx,QWORD PTR [rsp+0x48]
   14000aaf5:	mov    rax,QWORD PTR [rcx]
   14000aaf8:	mov    rax,QWORD PTR [rax+0x10]
   14000aafc:	call   QWORD PTR [rip+0x7a3e]        # 0x140012540
   14000ab02:	xor    r8d,r8d
   14000ab05:	mov    QWORD PTR [rsp+0x48],r8
   14000ab0a:	jmp    0x14000ab11
   14000ab0c:	cmp    eax,0x2
   14000ab0f:	je     0x14000ab2a
   14000ab11:	mov    eax,DWORD PTR [rsp+0x40]
   14000ab15:	inc    eax
   14000ab17:	mov    DWORD PTR [rsp+0x40],eax
   14000ab1b:	cmp    eax,DWORD PTR [rsp+0x60]
   14000ab1f:	jb     0x14000a77a
   14000ab25:	jmp    0x14000ac68
   14000ab2a:	test   esi,esi
   14000ab2c:	je     0x14000ab9d
   14000ab2e:	lea    r9d,[rsi+rsi*1]
   14000ab32:	mov    BYTE PTR [rsp+0x20],0x1
   14000ab37:	mov    r8d,0x2
   14000ab3d:	lea    rdx,[rip+0x88ac]        # 0x1400133f0
   14000ab44:	lea    rcx,[rbp-0x70]
   14000ab48:	call   0x14000eb60
   14000ab4d:	xor    r8d,r8d
   14000ab50:	mov    ebx,eax
   14000ab52:	test   eax,eax
   14000ab54:	js     0x14000acfb
   14000ab5a:	mov    ebx,r8d
   14000ab5d:	cmp    DWORD PTR [rdi+0x30],r8d
   14000ab61:	jbe    0x14000ab7b
   14000ab63:	mov    rcx,QWORD PTR [rdi+0x10]
   14000ab67:	lea    rdx,[rip+0x88c2]        # 0x140013430
   14000ab6e:	call   QWORD PTR [rip+0x796c]        # 0x1400124e0
   14000ab74:	inc    ebx
   14000ab76:	cmp    ebx,DWORD PTR [rdi+0x30]
   14000ab79:	jb     0x14000ab63
   14000ab7b:	mov    rbx,QWORD PTR [rbp-0x50]
   14000ab7f:	lea    rdx,[rip+0x82b2]        # 0x140012e38
   14000ab86:	mov    rcx,QWORD PTR [rdi+0x10]
   14000ab8a:	mov    r8,rbx
   14000ab8d:	call   QWORD PTR [rip+0x794d]        # 0x1400124e0
   14000ab93:	xor    eax,eax
   14000ab95:	mov    WORD PTR [rbx],ax
   14000ab98:	mov    esi,eax
   14000ab9a:	mov    DWORD PTR [rbp-0x40],eax
   14000ab9d:	mov    rcx,QWORD PTR [rbp-0x80]
   14000aba1:	lea    rdx,[rsp+0x70]
   14000aba6:	mov    rax,QWORD PTR [rcx]
   14000aba9:	mov    rax,QWORD PTR [rax+0x28]
   14000abad:	call   QWORD PTR [rip+0x798d]        # 0x140012540
   14000abb3:	xor    r8d,r8d
   14000abb6:	mov    ebx,eax
   14000abb8:	test   eax,eax
   14000abba:	js     0x14000acfb
   14000abc0:	mov    rcx,QWORD PTR [rsp+0x70]
   14000abc5:	lea    rdx,[rsp+0x68]
   14000abca:	mov    rax,QWORD PTR [rcx]
   14000abcd:	mov    rax,QWORD PTR [rax+0x18]
   14000abd1:	call   QWORD PTR [rip+0x7969]        # 0x140012540
   14000abd7:	xor    r8d,r8d
   14000abda:	mov    ebx,eax
   14000abdc:	test   eax,eax
   14000abde:	js     0x14000acfb
   14000abe4:	mov    edx,r8d
   14000abe7:	mov    DWORD PTR [rsp+0x40],edx
   14000abeb:	cmp    DWORD PTR [rsp+0x68],r8d
   14000abf0:	jbe    0x14000ac68
   14000abf2:	mov    rcx,QWORD PTR [rsp+0x70]
   14000abf7:	lea    r8,[rsp+0x48]
   14000abfc:	mov    rax,QWORD PTR [rcx]
   14000abff:	mov    rax,QWORD PTR [rax+0x20]
   14000ac03:	call   QWORD PTR [rip+0x7937]        # 0x140012540
   14000ac09:	xor    r8d,r8d
   14000ac0c:	mov    ebx,eax
   14000ac0e:	test   eax,eax
   14000ac10:	js     0x14000acfb
   14000ac16:	mov    r8d,DWORD PTR [rsp+0x64]
   14000ac1b:	xor    r9d,r9d
   14000ac1e:	mov    rdx,QWORD PTR [rsp+0x48]
   14000ac23:	mov    rcx,rdi
   14000ac26:	inc    DWORD PTR [rdi+0x30]
   14000ac29:	call   0x14000a5ac
   14000ac2e:	dec    DWORD PTR [rdi+0x30]
   14000ac31:	xor    r8d,r8d
   14000ac34:	mov    ebx,eax
   14000ac36:	test   eax,eax
   14000ac38:	js     0x14000acfb
   14000ac3e:	mov    rcx,QWORD PTR [rsp+0x48]
   14000ac43:	mov    rax,QWORD PTR [rcx]
   14000ac46:	mov    rax,QWORD PTR [rax+0x10]
   14000ac4a:	call   QWORD PTR [rip+0x78f0]        # 0x140012540
   14000ac50:	mov    edx,DWORD PTR [rsp+0x40]
   14000ac54:	xor    r8d,r8d
   14000ac57:	inc    edx
   14000ac59:	mov    QWORD PTR [rsp+0x48],r8
   14000ac5e:	mov    DWORD PTR [rsp+0x40],edx
   14000ac62:	cmp    edx,DWORD PTR [rsp+0x68]
   14000ac66:	jb     0x14000abf2
   14000ac68:	test   esi,esi
   14000ac6a:	je     0x14000acc2
   14000ac6c:	lea    r9d,[rsi+rsi*1]
   14000ac70:	mov    BYTE PTR [rsp+0x20],0x1
   14000ac75:	mov    r8d,0x6
   14000ac7b:	lea    rdx,[rip+0x8776]        # 0x1400133f8
   14000ac82:	lea    rcx,[rbp-0x70]
   14000ac86:	call   0x14000eb60
   14000ac8b:	xor    r8d,r8d
   14000ac8e:	mov    ebx,eax
   14000ac90:	test   eax,eax
   14000ac92:	js     0x14000acfb
   14000ac94:	mov    esi,r8d
   14000ac97:	cmp    DWORD PTR [rdi+0x30],r8d
   14000ac9b:	jbe    0x14000acb5
   14000ac9d:	mov    rcx,QWORD PTR [rdi+0x10]
   14000aca1:	lea    rdx,[rip+0x8788]        # 0x140013430
   14000aca8:	call   QWORD PTR [rip+0x7832]        # 0x1400124e0
   14000acae:	inc    esi
   14000acb0:	cmp    esi,DWORD PTR [rdi+0x30]
   14000acb3:	jb     0x14000ac9d
   14000acb5:	mov    r8,QWORD PTR [rbp-0x50]
   14000acb9:	lea    rdx,[rip+0x8178]        # 0x140012e38
   14000acc0:	jmp    0x14000acee
   14000acc2:	mov    esi,r8d
   14000acc5:	cmp    DWORD PTR [rdi+0x30],r8d
   14000acc9:	jbe    0x14000ace3
   14000accb:	mov    rcx,QWORD PTR [rdi+0x10]
   14000accf:	lea    rdx,[rip+0x875a]        # 0x140013430
   14000acd6:	call   QWORD PTR [rip+0x7804]        # 0x1400124e0
   14000acdc:	inc    esi
   14000acde:	cmp    esi,DWORD PTR [rdi+0x30]
   14000ace1:	jb     0x14000accb
   14000ace3:	mov    r8,QWORD PTR [rbp-0x38]
   14000ace7:	lea    rdx,[rip+0x86e2]        # 0x1400133d0
   14000acee:	mov    rcx,QWORD PTR [rdi+0x10]
   14000acf2:	call   QWORD PTR [rip+0x77e8]        # 0x1400124e0
   14000acf8:	xor    r8d,r8d
   14000acfb:	mov    rcx,QWORD PTR [rsp+0x58]
   14000ad00:	test   rcx,rcx
   14000ad03:	je     0x14000ad1a
   14000ad05:	mov    rax,QWORD PTR [rcx]
   14000ad08:	mov    rax,QWORD PTR [rax+0x10]
   14000ad0c:	call   QWORD PTR [rip+0x782e]        # 0x140012540
   14000ad12:	xor    r8d,r8d
   14000ad15:	mov    QWORD PTR [rsp+0x58],r8
   14000ad1a:	mov    rcx,QWORD PTR [rbp-0x78]
   14000ad1e:	test   rcx,rcx
   14000ad21:	je     0x14000ad37
   14000ad23:	mov    rax,QWORD PTR [rcx]
   14000ad26:	mov    rax,QWORD PTR [rax+0x10]
   14000ad2a:	call   QWORD PTR [rip+0x7810]        # 0x140012540
   14000ad30:	xor    r8d,r8d
   14000ad33:	mov    QWORD PTR [rbp-0x78],r8
   14000ad37:	mov    rcx,QWORD PTR [rsp+0x48]
   14000ad3c:	test   rcx,rcx
   14000ad3f:	je     0x14000ad56
   14000ad41:	mov    rax,QWORD PTR [rcx]
   14000ad44:	mov    rax,QWORD PTR [rax+0x10]
   14000ad48:	call   QWORD PTR [rip+0x77f2]        # 0x140012540
   14000ad4e:	xor    r8d,r8d
   14000ad51:	mov    QWORD PTR [rsp+0x48],r8
   14000ad56:	mov    rcx,QWORD PTR [rsp+0x70]
   14000ad5b:	test   rcx,rcx
   14000ad5e:	je     0x14000ad75
   14000ad60:	mov    rax,QWORD PTR [rcx]
   14000ad63:	mov    rax,QWORD PTR [rax+0x10]
   14000ad67:	call   QWORD PTR [rip+0x77d3]        # 0x140012540
   14000ad6d:	xor    r8d,r8d
   14000ad70:	mov    QWORD PTR [rsp+0x70],r8
   14000ad75:	cmp    BYTE PTR [rbp-0x44],r8b
   14000ad79:	je     0x14000ad87
   14000ad7b:	lea    rcx,[rbp-0x70]
   14000ad7f:	call   0x14000eb30
   14000ad84:	xor    r8d,r8d
   14000ad87:	cmp    BYTE PTR [rbp-0x4],r8b
   14000ad8b:	je     0x14000ad96
   14000ad8d:	lea    rcx,[rbp-0x30]
   14000ad91:	call   0x14000eb30
   14000ad96:	mov    eax,ebx
   14000ad98:	mov    rcx,QWORD PTR [rbp+0xc10]
   14000ad9f:	xor    rcx,rsp
   14000ada2:	call   0x140011800
   14000ada7:	add    rsp,0xd28
   14000adae:	pop    rdi
   14000adaf:	pop    rsi
   14000adb0:	pop    rbx
   14000adb1:	pop    rbp
   14000adb2:	ret    
   14000adb3:	int3   
   14000adb4:	int3   
   14000adb5:	int3   
   14000adb6:	int3   
   14000adb7:	int3   
   14000adb8:	int3   
   14000adb9:	int3   
   14000adba:	int3   
   14000adbb:	int3   
   14000adbc:	mov    QWORD PTR [rsp+0x10],rbx
   14000adc1:	push   rbp
   14000adc2:	push   rsi
   14000adc3:	push   rdi
   14000adc4:	sub    rsp,0x20
   14000adc8:	xor    ebp,ebp
   14000adca:	mov    rsi,rdx
   14000adcd:	mov    rdi,rcx
   14000add0:	mov    QWORD PTR [rsp+0x40],rbp
   14000add5:	mov    QWORD PTR [rsp+0x58],rbp
   14000adda:	cmp    DWORD PTR [rcx+0x28],ebp
   14000addd:	jne    0x14000ade9
   14000addf:	mov    ebx,0x80004005
   14000ade4:	jmp    0x14000ae79
   14000ade9:	mov    rax,QWORD PTR [r8]
   14000adec:	lea    rdx,[rsp+0x58]
   14000adf1:	mov    rcx,r8
   14000adf4:	mov    rax,QWORD PTR [rax+0x20]
   14000adf8:	call   QWORD PTR [rip+0x7742]        # 0x140012540
   14000adfe:	mov    ebx,eax
   14000ae00:	test   eax,eax
   14000ae02:	js     0x14000ae62
   14000ae04:	mov    rcx,QWORD PTR [rdi+0x20]
   14000ae08:	lea    rdx,[rsp+0x40]
   14000ae0d:	mov    rax,QWORD PTR [rcx]
   14000ae10:	mov    rax,QWORD PTR [rax+0x20]
   14000ae14:	call   QWORD PTR [rip+0x7726]        # 0x140012540
   14000ae1a:	mov    ebx,eax
   14000ae1c:	test   eax,eax
   14000ae1e:	js     0x14000ae62
   14000ae20:	mov    rcx,QWORD PTR [rsp+0x40]
   14000ae25:	lea    rdx,[rip+0x8384]        # 0x1400131b0
   14000ae2c:	mov    r8,QWORD PTR [rsp+0x58]
   14000ae31:	mov    rax,QWORD PTR [rcx]
   14000ae34:	mov    rax,QWORD PTR [rax+0x38]
   14000ae38:	call   QWORD PTR [rip+0x7702]        # 0x140012540
   14000ae3e:	mov    ebx,eax
   14000ae40:	test   eax,eax
   14000ae42:	js     0x14000ae62
   14000ae44:	mov    r8,QWORD PTR [rsp+0x40]
   14000ae49:	lea    r9,[rip+0x80a8]        # 0x140012ef8
   14000ae50:	mov    rdx,rsi
   14000ae53:	mov    rcx,rdi
   14000ae56:	call   0x14000afd8
   14000ae5b:	test   eax,eax
   14000ae5d:	mov    ebx,eax
   14000ae5f:	cmovns ebx,ebp
   14000ae62:	mov    rcx,QWORD PTR [rsp+0x40]
   14000ae67:	test   rcx,rcx
   14000ae6a:	je     0x14000ae79
   14000ae6c:	mov    rax,QWORD PTR [rcx]
   14000ae6f:	mov    rax,QWORD PTR [rax+0x10]
   14000ae73:	call   QWORD PTR [rip+0x76c7]        # 0x140012540
   14000ae79:	mov    eax,ebx
   14000ae7b:	mov    rbx,QWORD PTR [rsp+0x48]
   14000ae80:	add    rsp,0x20
   14000ae84:	pop    rdi
   14000ae85:	pop    rsi
   14000ae86:	pop    rbp
   14000ae87:	ret    
   14000ae88:	int3   
   14000ae89:	int3   
   14000ae8a:	int3   
   14000ae8b:	int3   
   14000ae8c:	int3   
   14000ae8d:	int3   
   14000ae8e:	int3   
   14000ae8f:	int3   
   14000ae90:	rex push rbx
   14000ae92:	push   rbp
   14000ae93:	push   rsi
   14000ae94:	push   rdi
   14000ae95:	push   r14
   14000ae97:	sub    rsp,0xc0
   14000ae9e:	mov    rax,QWORD PTR [rip+0x11193]        # 0x14001c038
   14000aea5:	xor    rax,rsp
   14000aea8:	mov    QWORD PTR [rsp+0xb0],rax
   14000aeb0:	xor    r14d,r14d
   14000aeb3:	mov    ebp,r8d
   14000aeb6:	mov    rsi,rdx
   14000aeb9:	mov    QWORD PTR [rsp+0x20],r14
   14000aebe:	mov    rdi,rcx
   14000aec1:	xor    edx,edx
   14000aec3:	lea    rcx,[rsp+0x32]
   14000aec8:	lea    r8d,[r14+0x7e]
   14000aecc:	call   0x140011e22
   14000aed1:	mov    WORD PTR [rsp+0x30],r14w
   14000aed7:	cmp    DWORD PTR [rdi+0x28],r14d
   14000aedb:	jne    0x14000aee7
   14000aedd:	mov    ebx,0x80004005
   14000aee2:	jmp    0x14000afb1
   14000aee7:	mov    rcx,QWORD PTR [rdi+0x20]
   14000aeeb:	lea    rdx,[rsp+0x20]
   14000aef0:	mov    rax,QWORD PTR [rcx]
   14000aef3:	mov    rax,QWORD PTR [rax+0x20]
   14000aef7:	call   QWORD PTR [rip+0x7643]        # 0x140012540
   14000aefd:	mov    ebx,eax
   14000aeff:	test   eax,eax
   14000af01:	js     0x14000af9a
   14000af07:	mov    r9d,ebp
   14000af0a:	lea    r8,[rip+0x8017]        # 0x140012f28
   14000af11:	mov    ebp,0x40
   14000af16:	lea    rcx,[rsp+0x30]
   14000af1b:	mov    edx,ebp
   14000af1d:	call   0x140006f9c
   14000af22:	mov    ebx,eax
   14000af24:	test   eax,eax
   14000af26:	js     0x14000af9a
   14000af28:	mov    edx,ebp
   14000af2a:	lea    rcx,[rsp+0x30]
   14000af2f:	call   QWORD PTR [rip+0x745b]        # 0x140012390
   14000af35:	mov    rcx,QWORD PTR [rsp+0x20]
   14000af3a:	lea    r8,[rsp+0x30]
   14000af3f:	lea    rdx,[rip+0x7ff2]        # 0x140012f38
   14000af46:	mov    rax,QWORD PTR [rcx]
   14000af49:	mov    rax,QWORD PTR [rax+0x38]
   14000af4d:	call   QWORD PTR [rip+0x75ed]        # 0x140012540
   14000af53:	mov    ebx,eax
   14000af55:	test   eax,eax
   14000af57:	js     0x14000af9a
   14000af59:	mov    rcx,QWORD PTR [rsp+0x20]
   14000af5e:	lea    rdx,[rip+0x824b]        # 0x1400131b0
   14000af65:	mov    r8,rsi
   14000af68:	mov    rax,QWORD PTR [rcx]
   14000af6b:	mov    rax,QWORD PTR [rax+0x38]
   14000af6f:	call   QWORD PTR [rip+0x75cb]        # 0x140012540
   14000af75:	mov    ebx,eax
   14000af77:	test   eax,eax
   14000af79:	js     0x14000af9a
   14000af7b:	mov    r8,QWORD PTR [rsp+0x20]
   14000af80:	lea    r9,[rip+0x7f71]        # 0x140012ef8
   14000af87:	mov    rdx,rsi
   14000af8a:	mov    rcx,rdi
   14000af8d:	call   0x14000afd8
   14000af92:	test   eax,eax
   14000af94:	mov    ebx,eax
   14000af96:	cmovns ebx,r14d
   14000af9a:	mov    rcx,QWORD PTR [rsp+0x20]
   14000af9f:	test   rcx,rcx
   14000afa2:	je     0x14000afb1
   14000afa4:	mov    rax,QWORD PTR [rcx]
   14000afa7:	mov    rax,QWORD PTR [rax+0x10]
   14000afab:	call   QWORD PTR [rip+0x758f]        # 0x140012540
   14000afb1:	mov    eax,ebx
   14000afb3:	mov    rcx,QWORD PTR [rsp+0xb0]
   14000afbb:	xor    rcx,rsp
   14000afbe:	call   0x140011800
   14000afc3:	add    rsp,0xc0
   14000afca:	pop    r14
   14000afcc:	pop    rdi
   14000afcd:	pop    rsi
   14000afce:	pop    rbp
   14000afcf:	pop    rbx
   14000afd0:	ret    
   14000afd1:	int3   
   14000afd2:	int3   
   14000afd3:	int3   
   14000afd4:	int3   
   14000afd5:	int3   
   14000afd6:	int3   
   14000afd7:	int3   
   14000afd8:	mov    QWORD PTR [rsp+0x8],rbx
   14000afdd:	mov    QWORD PTR [rsp+0x10],rsi
   14000afe2:	mov    QWORD PTR [rsp+0x18],rdi
   14000afe7:	push   rbp
   14000afe8:	push   r14
   14000afea:	push   r15
   14000afec:	mov    rbp,rsp
   14000afef:	sub    rsp,0x50
   14000aff3:	and    DWORD PTR [rbp+0x38],0x0
   14000aff7:	mov    rdi,rcx
   14000affa:	and    QWORD PTR [rbp-0x10],0x0
   14000afff:	xor    ecx,ecx
   14000b001:	and    QWORD PTR [rbp-0x18],0x0
   14000b006:	mov    r14,r9
   14000b009:	mov    QWORD PTR [rbp-0x20],rcx
   14000b00d:	mov    rsi,r8
   14000b010:	mov    r15,rdx
   14000b013:	test   r9,r9
   14000b016:	je     0x14000b1a0
   14000b01c:	test   rdx,rdx
   14000b01f:	je     0x14000b1a0
   14000b025:	cmp    DWORD PTR [rdi+0x28],ecx
   14000b028:	jne    0x14000b034
   14000b02a:	mov    ebx,0x80004005
   14000b02f:	jmp    0x14000b1b7
   14000b034:	mov    rcx,QWORD PTR [rdi+0x20]
   14000b038:	lea    rdx,[rbp-0x20]
   14000b03c:	mov    rax,QWORD PTR [rcx]
   14000b03f:	mov    rax,QWORD PTR [rax+0x20]
   14000b043:	call   QWORD PTR [rip+0x74f7]        # 0x140012540
   14000b049:	mov    ebx,eax
   14000b04b:	test   eax,eax
   14000b04d:	js     0x14000b19a
   14000b053:	mov    rcx,QWORD PTR [rbp-0x20]
   14000b057:	lea    rdx,[rip+0x8152]        # 0x1400131b0
   14000b05e:	mov    r8,r15
   14000b061:	mov    rax,QWORD PTR [rcx]
   14000b064:	mov    rax,QWORD PTR [rax+0x38]
   14000b068:	call   QWORD PTR [rip+0x74d2]        # 0x140012540
   14000b06e:	mov    ebx,eax
   14000b070:	test   eax,eax
   14000b072:	js     0x14000b19a
   14000b078:	test   rsi,rsi
   14000b07b:	je     0x14000b091
   14000b07d:	mov    rax,QWORD PTR [rsi]
   14000b080:	mov    rcx,rsi
   14000b083:	mov    rdx,QWORD PTR [rbp-0x20]
   14000b087:	mov    rax,QWORD PTR [rax+0x48]
   14000b08b:	call   QWORD PTR [rip+0x74af]        # 0x140012540
   14000b091:	cmp    DWORD PTR [rdi+0x2c],0x0
   14000b095:	je     0x14000b0cb
   14000b097:	mov    rcx,QWORD PTR [rdi+0x8]
   14000b09b:	test   rcx,rcx
   14000b09e:	jne    0x14000b0aa
   14000b0a0:	mov    ebx,0x80004005
   14000b0a5:	jmp    0x14000b19a
   14000b0aa:	mov    r8,QWORD PTR [rbp-0x20]
   14000b0ae:	mov    r9d,0x1
   14000b0b4:	mov    rdx,r14
   14000b0b7:	call   0x14000b420
   14000b0bc:	mov    ebx,eax
   14000b0be:	test   eax,eax
   14000b0c0:	js     0x14000b19a
   14000b0c6:	jmp    0x14000b198
   14000b0cb:	mov    rcx,QWORD PTR [rdi+0x10]
   14000b0cf:	lea    rdx,[rip+0x7d5a]        # 0x140012e30
   14000b0d6:	mov    r8,r14
   14000b0d9:	call   QWORD PTR [rip+0x7401]        # 0x1400124e0
   14000b0df:	test   rsi,rsi
   14000b0e2:	je     0x14000b198
   14000b0e8:	mov    rax,QWORD PTR [rsi]
   14000b0eb:	lea    rdx,[rbp+0x38]
   14000b0ef:	mov    rcx,rsi
   14000b0f2:	mov    rax,QWORD PTR [rax+0x18]
   14000b0f6:	call   QWORD PTR [rip+0x7444]        # 0x140012540
   14000b0fc:	mov    ebx,eax
   14000b0fe:	test   eax,eax
   14000b100:	js     0x14000b19a
   14000b106:	cmp    DWORD PTR [rbp+0x38],0x0
   14000b10a:	jbe    0x14000b198
   14000b110:	mov    rcx,QWORD PTR [rdi+0x10]
   14000b114:	lea    rdx,[rip+0x82e5]        # 0x140013400
   14000b11b:	call   QWORD PTR [rip+0x73bf]        # 0x1400124e0
   14000b121:	xor    r14d,r14d
   14000b124:	cmp    DWORD PTR [rbp+0x38],r14d
   14000b128:	jbe    0x14000b187
   14000b12a:	mov    rax,QWORD PTR [rsi]
   14000b12d:	lea    r9,[rbp-0x18]
   14000b131:	lea    r8,[rbp-0x10]
   14000b135:	mov    edx,r14d
   14000b138:	mov    rcx,rsi
   14000b13b:	mov    rax,QWORD PTR [rax+0x20]
   14000b13f:	call   QWORD PTR [rip+0x73fb]        # 0x140012540
   14000b145:	mov    ebx,eax
   14000b147:	test   eax,eax
   14000b149:	js     0x14000b19a
   14000b14b:	mov    r9,QWORD PTR [rbp-0x10]
   14000b14f:	lea    rax,[rip+0x82b2]        # 0x140013408
   14000b156:	mov    rcx,QWORD PTR [rdi+0x10]
   14000b15a:	lea    r8,[rip+0x7cc7]        # 0x140012e28
   14000b161:	test   r14d,r14d
   14000b164:	lea    rdx,[rip+0x82a5]        # 0x140013410
   14000b16b:	cmovne r8,rax
   14000b16f:	mov    rax,QWORD PTR [rbp-0x18]
   14000b173:	mov    QWORD PTR [rsp+0x20],rax
   14000b178:	call   QWORD PTR [rip+0x7362]        # 0x1400124e0
   14000b17e:	inc    r14d
   14000b181:	cmp    r14d,DWORD PTR [rbp+0x38]
   14000b185:	jb     0x14000b12a
   14000b187:	mov    rcx,QWORD PTR [rdi+0x10]
   14000b18b:	lea    rdx,[rip+0x8296]        # 0x140013428
   14000b192:	call   QWORD PTR [rip+0x7348]        # 0x1400124e0
   14000b198:	xor    ebx,ebx
   14000b19a:	mov    rcx,QWORD PTR [rbp-0x20]
   14000b19e:	jmp    0x14000b1a5
   14000b1a0:	mov    ebx,0x80070057
   14000b1a5:	test   rcx,rcx
   14000b1a8:	je     0x14000b1b7
   14000b1aa:	mov    rax,QWORD PTR [rcx]
   14000b1ad:	mov    rax,QWORD PTR [rax+0x10]
   14000b1b1:	call   QWORD PTR [rip+0x7389]        # 0x140012540
   14000b1b7:	lea    r11,[rsp+0x50]
   14000b1bc:	mov    eax,ebx
   14000b1be:	mov    rbx,QWORD PTR [r11+0x20]
   14000b1c2:	mov    rsi,QWORD PTR [r11+0x28]
   14000b1c6:	mov    rdi,QWORD PTR [r11+0x30]
   14000b1ca:	mov    rsp,r11
   14000b1cd:	pop    r15
   14000b1cf:	pop    r14
   14000b1d1:	pop    rbp
   14000b1d2:	ret    
   14000b1d3:	int3   
   14000b1d4:	int3   
   14000b1d5:	int3   
   14000b1d6:	int3   
   14000b1d7:	int3   
   14000b1d8:	int3   
   14000b1d9:	int3   
   14000b1da:	int3   
   14000b1db:	int3   
   14000b1dc:	int3   
   14000b1dd:	int3   
   14000b1de:	int3   
   14000b1df:	int3   
   14000b1e0:	mov    QWORD PTR [rsp+0x8],rbx
   14000b1e5:	push   rdi
   14000b1e6:	sub    rsp,0x20
   14000b1ea:	lea    rax,[rip+0x6ee7]        # 0x1400120d8
   14000b1f1:	mov    rbx,rcx
   14000b1f4:	mov    QWORD PTR [rcx],rax
   14000b1f7:	mov    edi,edx
   14000b1f9:	mov    rcx,QWORD PTR [rcx+0x10]
   14000b1fd:	test   rcx,rcx
   14000b200:	je     0x14000b214
   14000b202:	mov    rax,QWORD PTR [rcx]
   14000b205:	mov    rax,QWORD PTR [rax+0x10]
   14000b209:	call   QWORD PTR [rip+0x7331]        # 0x140012540
   14000b20f:	and    QWORD PTR [rbx+0x10],0x0
   14000b214:	mov    rcx,QWORD PTR [rbx+0x8]
   14000b218:	test   rcx,rcx
   14000b21b:	je     0x14000b22f
   14000b21d:	mov    rax,QWORD PTR [rcx]
   14000b220:	mov    rax,QWORD PTR [rax+0x10]
   14000b224:	call   QWORD PTR [rip+0x7316]        # 0x140012540
   14000b22a:	and    QWORD PTR [rbx+0x8],0x0
   14000b22f:	test   dil,0x1
   14000b233:	je     0x14000b23d
   14000b235:	mov    rcx,rbx
   14000b238:	call   0x1400114b8
   14000b23d:	mov    rax,rbx
   14000b240:	mov    rbx,QWORD PTR [rsp+0x30]
   14000b245:	add    rsp,0x20
   14000b249:	pop    rdi
   14000b24a:	ret    
   14000b24b:	int3   
   14000b24c:	int3   
   14000b24d:	int3   
   14000b24e:	int3   
   14000b24f:	int3   
   14000b250:	int3   
   14000b251:	int3   
   14000b252:	int3   
   14000b253:	int3   
   14000b254:	mov    QWORD PTR [rsp+0x8],rbx
   14000b259:	push   rdi
   14000b25a:	sub    rsp,0x20
   14000b25e:	cmp    QWORD PTR [rip+0x11462],0x0        # 0x14001c6c8
   14000b266:	je     0x14000b288
   14000b268:	mov    rax,QWORD PTR [rip+0x11489]        # 0x14001c6f8
   14000b26f:	cmp    QWORD PTR [rip+0x1148a],rax        # 0x14001c700
   14000b276:	je     0x14000b288
   14000b278:	cmp    QWORD PTR [rip+0x11489],rax        # 0x14001c708
   14000b27f:	je     0x14000b288
   14000b281:	xor    ebx,ebx
   14000b283:	jmp    0x14000b32c
   14000b288:	lea    rcx,[rip+0x81c1]        # 0x140013450
   14000b28f:	call   QWORD PTR [rip+0x709b]        # 0x140012330
   14000b295:	mov    rdi,rax
   14000b298:	test   rax,rax
   14000b29b:	jne    0x14000b2b3
   14000b29d:	call   QWORD PTR [rip+0x7055]        # 0x1400122f8
   14000b2a3:	movzx  ebx,ax
   14000b2a6:	or     ebx,0x80070000
   14000b2ac:	test   eax,eax
   14000b2ae:	cmovle ebx,eax
   14000b2b1:	jmp    0x14000b32c
   14000b2b3:	lea    rdx,[rip+0x81ae]        # 0x140013468
   14000b2ba:	mov    rcx,rax
   14000b2bd:	call   QWORD PTR [rip+0x6ffd]        # 0x1400122c0
   14000b2c3:	test   rax,rax
   14000b2c6:	jne    0x14000b2de
   14000b2c8:	call   QWORD PTR [rip+0x702a]        # 0x1400122f8
   14000b2ce:	movzx  ebx,ax
   14000b2d1:	or     ebx,0x80070000
   14000b2d7:	test   eax,eax
   14000b2d9:	cmovle ebx,eax
   14000b2dc:	jmp    0x14000b31e
   14000b2de:	mov    rcx,rax
   14000b2e1:	call   QWORD PTR [rip+0x6fe1]        # 0x1400122c8
   14000b2e7:	lea    rdx,[rip+0x818a]        # 0x140013478
   14000b2ee:	mov    rcx,rdi
   14000b2f1:	mov    QWORD PTR [rip+0x11408],rax        # 0x14001c700
   14000b2f8:	call   QWORD PTR [rip+0x6fc2]        # 0x1400122c0
   14000b2fe:	test   rax,rax
   14000b301:	je     0x14000b2c8
   14000b303:	mov    rcx,rax
   14000b306:	call   QWORD PTR [rip+0x6fbc]        # 0x1400122c8
   14000b30c:	mov    QWORD PTR [rip+0x113b5],rdi        # 0x14001c6c8
   14000b313:	xor    edi,edi
   14000b315:	xor    ebx,ebx
   14000b317:	mov    QWORD PTR [rip+0x113ea],rax        # 0x14001c708
   14000b31e:	test   rdi,rdi
   14000b321:	je     0x14000b32c
   14000b323:	mov    rcx,rdi
   14000b326:	call   QWORD PTR [rip+0x6f8c]        # 0x1400122b8
   14000b32c:	mov    eax,ebx
   14000b32e:	mov    rbx,QWORD PTR [rsp+0x30]
   14000b333:	add    rsp,0x20
   14000b337:	pop    rdi
   14000b338:	ret    
   14000b339:	int3   
   14000b33a:	int3   
   14000b33b:	int3   
   14000b33c:	int3   
   14000b33d:	int3   
   14000b33e:	int3   
   14000b33f:	int3   
   14000b340:	mov    QWORD PTR [rsp+0x8],rbx
   14000b345:	mov    QWORD PTR [rsp+0x10],rsi
   14000b34a:	push   rdi
   14000b34b:	sub    rsp,0x20
   14000b34f:	and    QWORD PTR [rsp+0x40],0x0
   14000b355:	mov    rdi,rcx
   14000b358:	mov    rcx,QWORD PTR [rip+0x113a9]        # 0x14001c708
   14000b35f:	mov    rbx,rdx
   14000b362:	call   QWORD PTR [rip+0x6f48]        # 0x1400122b0
   14000b368:	mov    rsi,rax
   14000b36b:	test   rax,rax
   14000b36e:	jne    0x14000b39e
   14000b370:	mov    ebx,0x80004005
   14000b375:	mov    rcx,QWORD PTR [rsp+0x40]
   14000b37a:	test   rcx,rcx
   14000b37d:	je     0x14000b38c
   14000b37f:	mov    rax,QWORD PTR [rcx]
   14000b382:	mov    rax,QWORD PTR [rax+0x10]
   14000b386:	call   QWORD PTR [rip+0x71b4]        # 0x140012540
   14000b38c:	mov    rsi,QWORD PTR [rsp+0x38]
   14000b391:	mov    eax,ebx
   14000b393:	mov    rbx,QWORD PTR [rsp+0x30]
   14000b398:	add    rsp,0x20
   14000b39c:	pop    rdi
   14000b39d:	ret    
   14000b39e:	test   rbx,rbx
   14000b3a1:	jne    0x14000b3aa
   14000b3a3:	mov    ebx,0x80070057
   14000b3a8:	jmp    0x14000b375
   14000b3aa:	mov    QWORD PTR [rdi+0x8],rbx
   14000b3ae:	mov    rcx,rbx
   14000b3b1:	mov    rax,QWORD PTR [rbx]
   14000b3b4:	mov    rax,QWORD PTR [rax+0x8]
   14000b3b8:	call   QWORD PTR [rip+0x7182]        # 0x140012540
   14000b3be:	xor    r8d,r8d
   14000b3c1:	lea    rdx,[rsp+0x40]
   14000b3c6:	lea    rcx,[rip+0x80db]        # 0x1400134a8
   14000b3cd:	mov    rax,rsi
   14000b3d0:	call   QWORD PTR [rip+0x716a]        # 0x140012540
   14000b3d6:	mov    ebx,eax
   14000b3d8:	test   eax,eax
   14000b3da:	js     0x14000b375
   14000b3dc:	mov    rcx,QWORD PTR [rsp+0x40]
   14000b3e1:	mov    rdx,QWORD PTR [rdi+0x8]
   14000b3e5:	mov    rax,QWORD PTR [rcx]
   14000b3e8:	mov    rax,QWORD PTR [rax+0x18]
   14000b3ec:	call   QWORD PTR [rip+0x714e]        # 0x140012540
   14000b3f2:	mov    ebx,eax
   14000b3f4:	test   eax,eax
   14000b3f6:	js     0x14000b375
   14000b3fc:	mov    rax,QWORD PTR [rsp+0x40]
   14000b401:	xor    ecx,ecx
   14000b403:	and    DWORD PTR [rdi+0x18],ecx
   14000b406:	and    DWORD PTR [rdi+0x20],ecx
   14000b409:	xor    ebx,ebx
   14000b40b:	mov    QWORD PTR [rdi+0x10],rax
   14000b40f:	mov    QWORD PTR [rsp+0x40],rcx
   14000b414:	jmp    0x14000b37a
   14000b419:	int3   
   14000b41a:	int3   
   14000b41b:	int3   
   14000b41c:	int3   
   14000b41d:	int3   
   14000b41e:	int3   
   14000b41f:	int3   
   14000b420:	mov    rax,rsp
   14000b423:	mov    QWORD PTR [rax+0x8],rbx
   14000b427:	mov    QWORD PTR [rax+0x18],rbp
   14000b42b:	mov    QWORD PTR [rax+0x20],rsi
   14000b42f:	push   rdi
   14000b430:	sub    rsp,0x40
   14000b434:	and    QWORD PTR [rax-0x10],0x0
   14000b439:	mov    ebp,r9d
   14000b43c:	and    QWORD PTR [rax-0x18],0x0
   14000b441:	mov    rdi,r8
   14000b444:	and    DWORD PTR [rax+0x10],0x0
   14000b448:	mov    rsi,rdx
   14000b44b:	mov    rbx,rcx
   14000b44e:	test   rdx,rdx
   14000b451:	jne    0x14000b45d
   14000b453:	mov    eax,0x80070057
   14000b458:	jmp    0x14000b556
   14000b45d:	cmp    QWORD PTR [rcx+0x10],0x0
   14000b462:	jne    0x14000b46e
   14000b464:	mov    eax,0x80004005
   14000b469:	jmp    0x14000b556
   14000b46e:	cmp    DWORD PTR [rcx+0x1c],0x0
   14000b472:	je     0x14000b464
   14000b474:	cmp    DWORD PTR [rcx+0x18],0x0
   14000b478:	jl     0x14000b464
   14000b47a:	call   0x14000c148
   14000b47f:	test   eax,eax
   14000b481:	js     0x14000b556
   14000b487:	mov    rcx,QWORD PTR [rbx+0x10]
   14000b48b:	xor    r9d,r9d
   14000b48e:	mov    r8,rsi
   14000b491:	xor    edx,edx
   14000b493:	mov    rax,QWORD PTR [rcx]
   14000b496:	mov    rax,QWORD PTR [rax+0xd8]
   14000b49d:	call   QWORD PTR [rip+0x709d]        # 0x140012540
   14000b4a3:	test   eax,eax
   14000b4a5:	js     0x14000b553
   14000b4ab:	inc    DWORD PTR [rbx+0x20]
   14000b4ae:	test   rdi,rdi
   14000b4b1:	je     0x14000b525
   14000b4b3:	mov    rax,QWORD PTR [rdi]
   14000b4b6:	lea    rdx,[rsp+0x58]
   14000b4bb:	mov    rcx,rdi
   14000b4be:	mov    rax,QWORD PTR [rax+0x18]
   14000b4c2:	call   QWORD PTR [rip+0x7078]        # 0x140012540
   14000b4c8:	test   eax,eax
   14000b4ca:	js     0x14000b553
   14000b4d0:	xor    esi,esi
   14000b4d2:	cmp    DWORD PTR [rsp+0x58],esi
   14000b4d6:	jbe    0x14000b525
   14000b4d8:	mov    rax,QWORD PTR [rdi]
   14000b4db:	lea    r9,[rsp+0x30]
   14000b4e0:	lea    r8,[rsp+0x38]
   14000b4e5:	mov    edx,esi
   14000b4e7:	mov    rcx,rdi
   14000b4ea:	mov    rax,QWORD PTR [rax+0x20]
   14000b4ee:	call   QWORD PTR [rip+0x704c]        # 0x140012540
   14000b4f4:	test   eax,eax
   14000b4f6:	js     0x14000b553
   14000b4f8:	mov    rdx,QWORD PTR [rsp+0x30]
   14000b4fd:	xor    r9d,r9d
   14000b500:	mov    rcx,QWORD PTR [rbx+0x10]
   14000b504:	mov    r8,QWORD PTR [rsp+0x38]
   14000b509:	mov    QWORD PTR [rsp+0x20],rdx
   14000b50e:	xor    edx,edx
   14000b510:	mov    rax,QWORD PTR [rcx]
   14000b513:	mov    rax,QWORD PTR [rax+0x38]
   14000b517:	call   QWORD PTR [rip+0x7023]        # 0x140012540
   14000b51d:	inc    esi
   14000b51f:	cmp    esi,DWORD PTR [rsp+0x58]
   14000b523:	jb     0x14000b4d8
   14000b525:	test   ebp,ebp
   14000b527:	je     0x14000b551
   14000b529:	mov    rcx,QWORD PTR [rbx+0x10]
   14000b52d:	mov    rax,QWORD PTR [rcx]
   14000b530:	mov    rax,QWORD PTR [rax+0x78]
   14000b534:	call   QWORD PTR [rip+0x7006]        # 0x140012540
   14000b53a:	test   eax,eax
   14000b53c:	js     0x14000b553
   14000b53e:	mov    eax,DWORD PTR [rbx+0x20]
   14000b541:	test   eax,eax
   14000b543:	jne    0x14000b54c
   14000b545:	mov    eax,0x80004005
   14000b54a:	jmp    0x14000b553
   14000b54c:	dec    eax
   14000b54e:	mov    DWORD PTR [rbx+0x20],eax
   14000b551:	xor    eax,eax
   14000b553:	mov    DWORD PTR [rbx+0x18],eax
   14000b556:	mov    rbx,QWORD PTR [rsp+0x50]
   14000b55b:	mov    rbp,QWORD PTR [rsp+0x60]
   14000b560:	mov    rsi,QWORD PTR [rsp+0x68]
   14000b565:	add    rsp,0x40
   14000b569:	pop    rdi
   14000b56a:	ret    
   14000b56b:	int3   
   14000b56c:	int3   
   14000b56d:	int3   
   14000b56e:	int3   
   14000b56f:	int3   
   14000b570:	int3   
   14000b571:	int3   
   14000b572:	int3   
   14000b573:	int3   
   14000b574:	mov    QWORD PTR [rsp+0x8],rbx
   14000b579:	mov    QWORD PTR [rsp+0x10],rsi
   14000b57e:	push   rdi
   14000b57f:	sub    rsp,0x20
   14000b583:	and    QWORD PTR [rsp+0x40],0x0
   14000b589:	mov    rdi,rcx
   14000b58c:	mov    rcx,QWORD PTR [rip+0x1116d]        # 0x14001c700
   14000b593:	mov    rbx,rdx
   14000b596:	call   QWORD PTR [rip+0x6d14]        # 0x1400122b0
   14000b59c:	mov    rsi,rax
   14000b59f:	test   rax,rax
   14000b5a2:	jne    0x14000b5d2
   14000b5a4:	mov    ebx,0x80004005
   14000b5a9:	mov    rcx,QWORD PTR [rsp+0x40]
   14000b5ae:	test   rcx,rcx
   14000b5b1:	je     0x14000b5c0
   14000b5b3:	mov    rax,QWORD PTR [rcx]
   14000b5b6:	mov    rax,QWORD PTR [rax+0x10]
   14000b5ba:	call   QWORD PTR [rip+0x6f80]        # 0x140012540
   14000b5c0:	mov    rsi,QWORD PTR [rsp+0x38]
   14000b5c5:	mov    eax,ebx
   14000b5c7:	mov    rbx,QWORD PTR [rsp+0x30]
   14000b5cc:	add    rsp,0x20
   14000b5d0:	pop    rdi
   14000b5d1:	ret    
   14000b5d2:	test   rbx,rbx
   14000b5d5:	jne    0x14000b5de
   14000b5d7:	mov    ebx,0x80070057
   14000b5dc:	jmp    0x14000b5a9
   14000b5de:	mov    QWORD PTR [rdi+0x10],rbx
   14000b5e2:	mov    rcx,rbx
   14000b5e5:	mov    rax,QWORD PTR [rbx]
   14000b5e8:	mov    rax,QWORD PTR [rax+0x8]
   14000b5ec:	call   QWORD PTR [rip+0x6f4e]        # 0x140012540
   14000b5f2:	xor    r8d,r8d
   14000b5f5:	lea    rdx,[rsp+0x40]
   14000b5fa:	lea    rcx,[rip+0x7e87]        # 0x140013488
   14000b601:	mov    rax,rsi
   14000b604:	call   QWORD PTR [rip+0x6f36]        # 0x140012540
   14000b60a:	mov    ebx,eax
   14000b60c:	test   eax,eax
   14000b60e:	js     0x14000b5a9
   14000b610:	mov    rcx,QWORD PTR [rsp+0x40]
   14000b615:	mov    rdx,QWORD PTR [rdi+0x10]
   14000b619:	mov    rax,QWORD PTR [rcx]
   14000b61c:	mov    rax,QWORD PTR [rax+0x18]
   14000b620:	call   QWORD PTR [rip+0x6f1a]        # 0x140012540
   14000b626:	mov    ebx,eax
   14000b628:	test   eax,eax
   14000b62a:	js     0x14000b5a9
   14000b630:	mov    rax,QWORD PTR [rsp+0x40]
   14000b635:	xor    ecx,ecx
   14000b637:	and    DWORD PTR [rdi+0x18],ecx
   14000b63a:	and    DWORD PTR [rdi+0x1c],ecx
   14000b63d:	xor    ebx,ebx
   14000b63f:	mov    QWORD PTR [rdi+0x8],rax
   14000b643:	mov    QWORD PTR [rsp+0x40],rcx
   14000b648:	jmp    0x14000b5ae
   14000b64d:	int3   
   14000b64e:	int3   
   14000b64f:	int3   
   14000b650:	int3   
   14000b651:	int3   
   14000b652:	int3   
   14000b653:	int3   
   14000b654:	mov    QWORD PTR [rsp+0x8],rbx
   14000b659:	push   rdi
   14000b65a:	sub    rsp,0x20
   14000b65e:	and    QWORD PTR [rsp+0x40],0x0
   14000b664:	mov    rdi,rdx
   14000b667:	mov    rbx,rcx
   14000b66a:	test   rdx,rdx
   14000b66d:	jne    0x14000b679
   14000b66f:	mov    eax,0x80070057
   14000b674:	jmp    0x14000b761
   14000b679:	mov    rcx,QWORD PTR [rcx+0x8]
   14000b67d:	test   rcx,rcx
   14000b680:	jne    0x14000b68c
   14000b682:	mov    eax,0x80004005
   14000b687:	jmp    0x14000b761
   14000b68c:	cmp    DWORD PTR [rbx+0x1c],0x0
   14000b690:	jl     0x14000b682
   14000b692:	cmp    DWORD PTR [rbx+0x18],0x0
   14000b696:	je     0x14000b6ad
   14000b698:	mov    eax,0x8000ffff
   14000b69d:	jmp    0x14000b761
   14000b6a2:	cmp    DWORD PTR [rsp+0x38],0x1
   14000b6a7:	je     0x14000b6c5
   14000b6a9:	mov    rcx,QWORD PTR [rbx+0x8]
   14000b6ad:	mov    rax,QWORD PTR [rcx]
   14000b6b0:	lea    rdx,[rsp+0x38]
   14000b6b5:	mov    rax,QWORD PTR [rax+0x30]
   14000b6b9:	call   QWORD PTR [rip+0x6e81]        # 0x140012540
   14000b6bf:	test   eax,eax
   14000b6c1:	je     0x14000b6a2
   14000b6c3:	jmp    0x14000b6c8
   14000b6c5:	inc    DWORD PTR [rbx+0x18]
   14000b6c8:	test   eax,eax
   14000b6ca:	js     0x14000b761
   14000b6d0:	mov    rcx,QWORD PTR [rbx+0x8]
   14000b6d4:	lea    rdx,[rsp+0x40]
   14000b6d9:	xor    r8d,r8d
   14000b6dc:	mov    rax,QWORD PTR [rcx]
   14000b6df:	mov    rax,QWORD PTR [rax+0x70]
   14000b6e3:	call   QWORD PTR [rip+0x6e57]        # 0x140012540
   14000b6e9:	test   eax,eax
   14000b6eb:	js     0x14000b761
   14000b6ed:	mov    rdx,QWORD PTR [rsp+0x40]
   14000b6f2:	lea    rcx,[rip+0x7d3f]        # 0x140013438
   14000b6f9:	call   QWORD PTR [rip+0x6e01]        # 0x140012500
   14000b6ff:	test   eax,eax
   14000b701:	je     0x14000b70d
   14000b703:	mov    eax,0x8000ffff
   14000b708:	mov    DWORD PTR [rbx+0x1c],eax
   14000b70b:	jmp    0x14000b761
   14000b70d:	mov    r9,QWORD PTR [rsp+0x40]
   14000b712:	lea    r8,[rip+0x7d1f]        # 0x140013438
   14000b719:	mov    rdx,rdi
   14000b71c:	mov    rcx,rbx
   14000b71f:	call   0x14000bd04
   14000b724:	test   eax,eax
   14000b726:	js     0x14000b761
   14000b728:	mov    rcx,QWORD PTR [rbx+0x8]
   14000b72c:	mov    rax,QWORD PTR [rcx]
   14000b72f:	mov    rax,QWORD PTR [rax+0x58]
   14000b733:	call   QWORD PTR [rip+0x6e07]        # 0x140012540
   14000b739:	test   eax,eax
   14000b73b:	js     0x14000b761
   14000b73d:	mov    rcx,QWORD PTR [rbx+0x8]
   14000b741:	mov    rax,QWORD PTR [rcx]
   14000b744:	mov    rax,QWORD PTR [rax+0xa0]
   14000b74b:	call   QWORD PTR [rip+0x6def]        # 0x140012540
   14000b751:	test   eax,eax
   14000b753:	je     0x14000b75f
   14000b755:	dec    DWORD PTR [rbx+0x18]
   14000b758:	mov    DWORD PTR [rbx+0x1c],0x80070026
   14000b75f:	xor    eax,eax
   14000b761:	mov    rbx,QWORD PTR [rsp+0x30]
   14000b766:	add    rsp,0x20
   14000b76a:	pop    rdi
   14000b76b:	ret    
   14000b76c:	int3   
   14000b76d:	int3   
   14000b76e:	int3   
   14000b76f:	int3   
   14000b770:	int3   
   14000b771:	int3   
   14000b772:	int3   
   14000b773:	int3   
   14000b774:	rex push rbp
   14000b776:	push   rbx
   14000b777:	push   rsi
   14000b778:	push   rdi
   14000b779:	push   r12
   14000b77b:	push   r13
   14000b77d:	push   r14
   14000b77f:	push   r15
   14000b781:	lea    rbp,[rsp-0x1d8]
   14000b789:	sub    rsp,0x2d8
   14000b790:	mov    rax,QWORD PTR [rip+0x108a1]        # 0x14001c038
   14000b797:	xor    rax,rsp
   14000b79a:	mov    QWORD PTR [rbp+0x1c0],rax
   14000b7a1:	mov    r15,QWORD PTR [rbp+0x240]
   14000b7a8:	xor    eax,eax
   14000b7aa:	mov    r14,r8
   14000b7ad:	mov    QWORD PTR [rsp+0x78],r8
   14000b7b2:	mov    QWORD PTR [rsp+0x68],rdx
   14000b7b7:	mov    rdi,rcx
   14000b7ba:	xor    edx,edx
   14000b7bc:	mov    QWORD PTR [rsp+0x40],rax
   14000b7c1:	mov    r8d,0x1fe
   14000b7c7:	mov    QWORD PTR [rsp+0x50],rax
   14000b7cc:	lea    rcx,[rbp-0x3e]
   14000b7d0:	mov    QWORD PTR [rsp+0x38],rax
   14000b7d5:	mov    ebx,eax
   14000b7d7:	mov    QWORD PTR [rsp+0x30],rax
   14000b7dc:	mov    r12d,eax
   14000b7df:	mov    QWORD PTR [rsp+0x60],rax
   14000b7e4:	mov    r13d,eax
   14000b7e7:	mov    QWORD PTR [rsp+0x58],rax
   14000b7ec:	mov    esi,eax
   14000b7ee:	mov    QWORD PTR [rsp+0x70],r9
   14000b7f3:	call   0x140011e22
   14000b7f8:	xor    eax,eax
   14000b7fa:	mov    WORD PTR [rbp-0x40],ax
   14000b7fe:	cmp    QWORD PTR [rsp+0x68],rax
   14000b803:	je     0x14000bc6a
   14000b809:	test   r14,r14
   14000b80c:	je     0x14000bc6a
   14000b812:	xor    r14d,r14d
   14000b815:	cmp    QWORD PTR [rdi+0x8],r14
   14000b819:	jne    0x14000b825
   14000b81b:	mov    ebx,0x80004005
   14000b820:	jmp    0x14000bcd6
   14000b825:	mov    eax,DWORD PTR [rdi+0x1c]
   14000b828:	test   eax,eax
   14000b82a:	jns    0x14000b833
   14000b82c:	mov    ebx,eax
   14000b82e:	jmp    0x14000bcd6
   14000b833:	cmp    DWORD PTR [rdi+0x18],0x1
   14000b837:	je     0x14000b843
   14000b839:	mov    ebx,0x8000ffff
   14000b83e:	jmp    0x14000bcd6
   14000b843:	mov    rcx,QWORD PTR [rdi+0x8]
   14000b847:	lea    rdx,[rsp+0x48]
   14000b84c:	mov    rax,QWORD PTR [rcx]
   14000b84f:	mov    rax,QWORD PTR [rax+0x30]
   14000b853:	call   QWORD PTR [rip+0x6ce7]        # 0x140012540
   14000b859:	test   eax,eax
   14000b85b:	jne    0x14000b951
   14000b861:	mov    ecx,DWORD PTR [rsp+0x48]
   14000b865:	sub    ecx,0x1
   14000b868:	je     0x14000b8bb
   14000b86a:	cmp    ecx,0xe
   14000b86d:	jne    0x14000b843
   14000b86f:	dec    DWORD PTR [rdi+0x18]
   14000b872:	cmp    DWORD PTR [rdi+0x18],0x1
   14000b876:	je     0x14000bc2f
   14000b87c:	jb     0x14000bc24
   14000b882:	test   r15,r15
   14000b885:	je     0x14000b843
   14000b887:	test   rsi,rsi
   14000b88a:	je     0x14000bc38
   14000b890:	mov    rax,QWORD PTR [rsi]
   14000b893:	lea    rdx,[rsp+0x30]
   14000b898:	mov    rcx,rsi
   14000b89b:	mov    rax,QWORD PTR [rax+0x58]
   14000b89f:	call   QWORD PTR [rip+0x6c9b]        # 0x140012540
   14000b8a5:	mov    ebx,eax
   14000b8a7:	test   eax,eax
   14000b8a9:	js     0x14000bc72
   14000b8af:	mov    rdx,QWORD PTR [rsi]
   14000b8b2:	mov    rax,QWORD PTR [rdx+0x10]
   14000b8b6:	jmp    0x14000bc0c
   14000b8bb:	mov    ecx,DWORD PTR [rdi+0x18]
   14000b8be:	lea    rdx,[rsp+0x40]
   14000b8c3:	xor    r8d,r8d
   14000b8c6:	cmp    ecx,0x1
   14000b8c9:	lea    eax,[rcx+0x1]
   14000b8cc:	mov    rcx,QWORD PTR [rdi+0x8]
   14000b8d0:	mov    DWORD PTR [rdi+0x18],eax
   14000b8d3:	mov    rax,QWORD PTR [rcx]
   14000b8d6:	mov    rax,QWORD PTR [rax+0x70]
   14000b8da:	jne    0x14000b996
   14000b8e0:	call   QWORD PTR [rip+0x6c5a]        # 0x140012540
   14000b8e6:	mov    ebx,eax
   14000b8e8:	test   eax,eax
   14000b8ea:	js     0x14000bc72
   14000b8f0:	mov    r9,QWORD PTR [rsp+0x70]
   14000b8f5:	lea    rdx,[rsp+0x50]
   14000b8fa:	mov    r8,QWORD PTR [rsp+0x40]
   14000b8ff:	mov    rcx,rdi
   14000b902:	call   0x14000bd04
   14000b907:	mov    ebx,eax
   14000b909:	test   eax,eax
   14000b90b:	js     0x14000bc72
   14000b911:	mov    rcx,QWORD PTR [rdi+0x8]
   14000b915:	mov    r12d,0x1
   14000b91b:	mov    rax,QWORD PTR [rcx]
   14000b91e:	mov    rax,QWORD PTR [rax+0x58]
   14000b922:	call   QWORD PTR [rip+0x6c18]        # 0x140012540
   14000b928:	mov    ebx,eax
   14000b92a:	test   eax,eax
   14000b92c:	js     0x14000bc72
   14000b932:	mov    rcx,QWORD PTR [rdi+0x8]
   14000b936:	mov    rax,QWORD PTR [rcx]
   14000b939:	mov    rax,QWORD PTR [rax+0xa0]
   14000b940:	call   QWORD PTR [rip+0x6bfa]        # 0x140012540
   14000b946:	test   eax,eax
   14000b948:	je     0x14000b843
   14000b94e:	dec    DWORD PTR [rdi+0x18]
   14000b951:	test   ebx,ebx
   14000b953:	js     0x14000bc72
   14000b959:	test   r12d,r12d
   14000b95c:	je     0x14000bc54
   14000b962:	mov    rcx,QWORD PTR [rsp+0x78]
   14000b967:	mov    rax,QWORD PTR [rsp+0x50]
   14000b96c:	mov    QWORD PTR [rcx],rax
   14000b96f:	mov    rcx,QWORD PTR [rsp+0x68]
   14000b974:	mov    rax,QWORD PTR [rsp+0x40]
   14000b979:	mov    QWORD PTR [rcx],rax
   14000b97c:	test   r15,r15
   14000b97f:	je     0x14000b98e
   14000b981:	mov    rax,QWORD PTR [rsp+0x38]
   14000b986:	mov    QWORD PTR [r15],rax
   14000b989:	mov    QWORD PTR [rsp+0x38],r14
   14000b98e:	mov    ebx,r14d
   14000b991:	jmp    0x14000bc89
   14000b996:	call   QWORD PTR [rip+0x6ba4]        # 0x140012540
   14000b99c:	mov    ebx,eax
   14000b99e:	test   eax,eax
   14000b9a0:	js     0x14000bc72
   14000b9a6:	test   r15,r15
   14000b9a9:	je     0x14000bbc2
   14000b9af:	cmp    QWORD PTR [rsp+0x38],r14
   14000b9b4:	jne    0x14000b9ed
   14000b9b6:	xor    edx,edx
   14000b9b8:	lea    rax,[rsp+0x38]
   14000b9bd:	lea    r9,[rip+0x7b04]        # 0x1400134c8
   14000b9c4:	mov    QWORD PTR [rsp+0x20],rax
   14000b9c9:	lea    rcx,[rip+0x7ae8]        # 0x1400134b8
   14000b9d0:	lea    r8d,[rdx+0x1]
   14000b9d4:	call   QWORD PTR [rip+0x6b4e]        # 0x140012528
   14000b9da:	test   eax,eax
   14000b9dc:	js     0x14000bc3f
   14000b9e2:	cmp    QWORD PTR [rsp+0x38],r14
   14000b9e7:	je     0x14000bc3f
   14000b9ed:	mov    rax,QWORD PTR [rsp+0x38]
   14000b9f2:	mov    rcx,QWORD PTR [rsp+0x40]
   14000b9f7:	mov    rbx,QWORD PTR [rax]
   14000b9fa:	call   QWORD PTR [rip+0x6960]        # 0x140012360
   14000ba00:	mov    rcx,QWORD PTR [rsp+0x38]
   14000ba05:	lea    r8,[rsp+0x30]
   14000ba0a:	mov    rdx,rax
   14000ba0d:	mov    rax,QWORD PTR [rbx+0x178]
   14000ba14:	call   QWORD PTR [rip+0x6b26]        # 0x140012540
   14000ba1a:	mov    ebx,eax
   14000ba1c:	test   eax,eax
   14000ba1e:	js     0x14000bc72
   14000ba24:	mov    rcx,QWORD PTR [rdi+0x8]
   14000ba28:	mov    rax,QWORD PTR [rcx]
   14000ba2b:	mov    rax,QWORD PTR [rax+0x40]
   14000ba2f:	call   QWORD PTR [rip+0x6b0b]        # 0x140012540
   14000ba35:	mov    ebx,eax
   14000ba37:	test   eax,eax
   14000ba39:	jne    0x14000bb34
   14000ba3f:	mov    rcx,QWORD PTR [rdi+0x8]
   14000ba43:	lea    rdx,[rsp+0x60]
   14000ba48:	xor    r8d,r8d
   14000ba4b:	mov    rax,QWORD PTR [rcx]
   14000ba4e:	mov    rax,QWORD PTR [rax+0x70]
   14000ba52:	call   QWORD PTR [rip+0x6ae8]        # 0x140012540
   14000ba58:	mov    ebx,eax
   14000ba5a:	test   eax,eax
   14000ba5c:	js     0x14000bc72
   14000ba62:	mov    rcx,QWORD PTR [rdi+0x8]
   14000ba66:	lea    rdx,[rsp+0x58]
   14000ba6b:	xor    r8d,r8d
   14000ba6e:	mov    rax,QWORD PTR [rcx]
   14000ba71:	mov    rax,QWORD PTR [rax+0x80]
   14000ba78:	call   QWORD PTR [rip+0x6ac2]        # 0x140012540
   14000ba7e:	mov    ebx,eax
   14000ba80:	test   eax,eax
   14000ba82:	js     0x14000bc72
   14000ba88:	lea    rcx,[rbp-0x80]
   14000ba8c:	call   QWORD PTR [rip+0x68b6]        # 0x140012348
   14000ba92:	mov    rcx,QWORD PTR [rsp+0x58]
   14000ba97:	mov    eax,0x8
   14000ba9c:	mov    WORD PTR [rbp-0x80],ax
   14000baa0:	call   QWORD PTR [rip+0x68ba]        # 0x140012360
   14000baa6:	mov    rcx,QWORD PTR [rsp+0x60]
   14000baab:	mov    QWORD PTR [rbp-0x78],rax
   14000baaf:	call   QWORD PTR [rip+0x68ab]        # 0x140012360
   14000bab5:	mov    r14,rax
   14000bab8:	test   rax,rax
   14000babb:	je     0x14000bc4d
   14000bac1:	mov    rcx,QWORD PTR [rsp+0x30]
   14000bac6:	lea    r8,[rbp-0x60]
   14000baca:	movups xmm0,XMMWORD PTR [rbp-0x80]
   14000bace:	movsd  xmm1,QWORD PTR [rbp-0x70]
   14000bad3:	mov    rdx,QWORD PTR [rcx]
   14000bad6:	movaps XMMWORD PTR [rbp-0x60],xmm0
   14000bada:	movsd  QWORD PTR [rbp-0x50],xmm1
   14000badf:	mov    rax,QWORD PTR [rdx+0x168]
   14000bae6:	mov    rdx,r14
   14000bae9:	call   QWORD PTR [rip+0x6a51]        # 0x140012540
   14000baef:	mov    ebx,eax
   14000baf1:	test   eax,eax
   14000baf3:	js     0x14000bc6f
   14000baf9:	lea    rcx,[rbp-0x80]
   14000bafd:	call   QWORD PTR [rip+0x6855]        # 0x140012358
   14000bb03:	mov    ebx,eax
   14000bb05:	test   eax,eax
   14000bb07:	js     0x14000bc6f
   14000bb0d:	mov    rcx,r14
   14000bb10:	call   QWORD PTR [rip+0x683a]        # 0x140012350
   14000bb16:	mov    rcx,QWORD PTR [rdi+0x8]
   14000bb1a:	mov    rax,QWORD PTR [rcx]
   14000bb1d:	mov    rax,QWORD PTR [rax+0x48]
   14000bb21:	call   QWORD PTR [rip+0x6a19]        # 0x140012540
   14000bb27:	xor    r14d,r14d
   14000bb2a:	test   eax,eax
   14000bb2c:	je     0x14000ba3f
   14000bb32:	jmp    0x14000bb3a
   14000bb34:	js     0x14000bc72
   14000bb3a:	mov    rcx,QWORD PTR [rdi+0x8]
   14000bb3e:	mov    rax,QWORD PTR [rcx]
   14000bb41:	mov    rax,QWORD PTR [rax+0x58]
   14000bb45:	call   QWORD PTR [rip+0x69f5]        # 0x140012540
   14000bb4b:	mov    ebx,eax
   14000bb4d:	test   eax,eax
   14000bb4f:	js     0x14000bc72
   14000bb55:	xor    r8d,r8d
   14000bb58:	test   rsi,rsi
   14000bb5b:	je     0x14000bb96
   14000bb5d:	mov    rax,QWORD PTR [rsi]
   14000bb60:	mov    rcx,rsi
   14000bb63:	mov    rdx,QWORD PTR [rsp+0x30]
   14000bb68:	mov    rax,QWORD PTR [rax+0xa8]
   14000bb6f:	call   QWORD PTR [rip+0x69cb]        # 0x140012540
   14000bb75:	mov    ebx,eax
   14000bb77:	test   eax,eax
   14000bb79:	js     0x14000bc72
   14000bb7f:	mov    rax,QWORD PTR [rsi]
   14000bb82:	mov    rcx,rsi
   14000bb85:	mov    rax,QWORD PTR [rax+0x10]
   14000bb89:	call   QWORD PTR [rip+0x69b1]        # 0x140012540
   14000bb8f:	mov    rsi,QWORD PTR [rsp+0x30]
   14000bb94:	jmp    0x14000bbbd
   14000bb96:	mov    rcx,QWORD PTR [rsp+0x38]
   14000bb9b:	mov    rsi,QWORD PTR [rsp+0x30]
   14000bba0:	mov    rdx,rsi
   14000bba3:	mov    rax,QWORD PTR [rcx]
   14000bba6:	mov    rax,QWORD PTR [rax+0xa8]
   14000bbad:	call   QWORD PTR [rip+0x698d]        # 0x140012540
   14000bbb3:	mov    ebx,eax
   14000bbb5:	test   eax,eax
   14000bbb7:	js     0x14000bc72
   14000bbbd:	mov    QWORD PTR [rsp+0x30],r14
   14000bbc2:	mov    rcx,QWORD PTR [rdi+0x8]
   14000bbc6:	mov    rax,QWORD PTR [rcx]
   14000bbc9:	mov    rax,QWORD PTR [rax+0xa0]
   14000bbd0:	call   QWORD PTR [rip+0x696a]        # 0x140012540
   14000bbd6:	test   eax,eax
   14000bbd8:	je     0x14000b843
   14000bbde:	dec    DWORD PTR [rdi+0x18]
   14000bbe1:	test   r15,r15
   14000bbe4:	je     0x14000b843
   14000bbea:	mov    rax,QWORD PTR [rsi]
   14000bbed:	lea    rdx,[rsp+0x30]
   14000bbf2:	mov    rcx,rsi
   14000bbf5:	mov    rax,QWORD PTR [rax+0x58]
   14000bbf9:	call   QWORD PTR [rip+0x6941]        # 0x140012540
   14000bbff:	mov    ebx,eax
   14000bc01:	test   eax,eax
   14000bc03:	js     0x14000bc72
   14000bc05:	mov    rax,QWORD PTR [rsi]
   14000bc08:	mov    rax,QWORD PTR [rax+0x10]
   14000bc0c:	mov    rcx,rsi
   14000bc0f:	call   QWORD PTR [rip+0x692b]        # 0x140012540
   14000bc15:	mov    rsi,QWORD PTR [rsp+0x30]
   14000bc1a:	mov    QWORD PTR [rsp+0x30],r14
   14000bc1f:	jmp    0x14000b843
   14000bc24:	mov    r13d,0x1
   14000bc2a:	jmp    0x14000b951
   14000bc2f:	test   r12d,r12d
   14000bc32:	jne    0x14000b951
   14000bc38:	mov    ebx,0x8007000d
   14000bc3d:	jmp    0x14000bc72
   14000bc3f:	mov    ebx,0x80004005
   14000bc44:	test   eax,eax
   14000bc46:	cmovns eax,ebx
   14000bc49:	mov    ebx,eax
   14000bc4b:	jmp    0x14000bc72
   14000bc4d:	mov    ebx,0x80070008
   14000bc52:	jmp    0x14000bc6f
   14000bc54:	test   r13d,r13d
   14000bc57:	je     0x14000bc63
   14000bc59:	mov    ebx,0x80070026
   14000bc5e:	mov    DWORD PTR [rdi+0x1c],ebx
   14000bc61:	jmp    0x14000bc72
   14000bc63:	mov    ebx,0x80004005
   14000bc68:	jmp    0x14000bc72
   14000bc6a:	mov    ebx,0x80070057
   14000bc6f:	xor    r14d,r14d
   14000bc72:	mov    rcx,QWORD PTR [rsp+0x50]
   14000bc77:	test   rcx,rcx
   14000bc7a:	je     0x14000bc89
   14000bc7c:	mov    rax,QWORD PTR [rcx]
   14000bc7f:	mov    rax,QWORD PTR [rax+0x10]
   14000bc83:	call   QWORD PTR [rip+0x68b7]        # 0x140012540
   14000bc89:	mov    rcx,QWORD PTR [rsp+0x38]
   14000bc8e:	test   rcx,rcx
   14000bc91:	je     0x14000bca5
   14000bc93:	mov    rax,QWORD PTR [rcx]
   14000bc96:	mov    rax,QWORD PTR [rax+0x10]
   14000bc9a:	call   QWORD PTR [rip+0x68a0]        # 0x140012540
   14000bca0:	mov    QWORD PTR [rsp+0x38],r14
   14000bca5:	mov    rcx,QWORD PTR [rsp+0x30]
   14000bcaa:	test   rcx,rcx
   14000bcad:	je     0x14000bcc1
   14000bcaf:	mov    rax,QWORD PTR [rcx]
   14000bcb2:	mov    rax,QWORD PTR [rax+0x10]
   14000bcb6:	call   QWORD PTR [rip+0x6884]        # 0x140012540
   14000bcbc:	mov    QWORD PTR [rsp+0x30],r14
   14000bcc1:	test   rsi,rsi
   14000bcc4:	je     0x14000bcd6
   14000bcc6:	mov    rax,QWORD PTR [rsi]
   14000bcc9:	mov    rcx,rsi
   14000bccc:	mov    rax,QWORD PTR [rax+0x10]
   14000bcd0:	call   QWORD PTR [rip+0x686a]        # 0x140012540
   14000bcd6:	mov    eax,ebx
   14000bcd8:	mov    rcx,QWORD PTR [rbp+0x1c0]
   14000bcdf:	xor    rcx,rsp
   14000bce2:	call   0x140011800
   14000bce7:	add    rsp,0x2d8
   14000bcee:	pop    r15
   14000bcf0:	pop    r14
   14000bcf2:	pop    r13
   14000bcf4:	pop    r12
   14000bcf6:	pop    rdi
   14000bcf7:	pop    rsi
   14000bcf8:	pop    rbx
   14000bcf9:	pop    rbp
   14000bcfa:	ret    
   14000bcfb:	int3   
   14000bcfc:	int3   
   14000bcfd:	int3   
   14000bcfe:	int3   
   14000bcff:	int3   
   14000bd00:	int3   
   14000bd01:	int3   
   14000bd02:	int3   
   14000bd03:	int3   
   14000bd04:	rex push rbp
   14000bd06:	push   rbx
   14000bd07:	push   rdi
   14000bd08:	push   r12
   14000bd0a:	push   r13
   14000bd0c:	push   r14
   14000bd0e:	push   r15
   14000bd10:	lea    rbp,[rsp-0x3e0]
   14000bd18:	sub    rsp,0x4e0
   14000bd1f:	mov    rax,QWORD PTR [rip+0x10312]        # 0x14001c038
   14000bd26:	xor    rax,rsp
   14000bd29:	mov    QWORD PTR [rbp+0x3d0],rax
   14000bd30:	mov    r12,r8
   14000bd33:	mov    QWORD PTR [rbp-0x78],rdx
   14000bd37:	mov    rdi,rdx
   14000bd3a:	mov    QWORD PTR [rbp-0x80],r9
   14000bd3e:	mov    r13,rcx
   14000bd41:	xor    r14d,r14d
   14000bd44:	xor    edx,edx
   14000bd46:	mov    QWORD PTR [rsp+0x38],r14
   14000bd4b:	mov    r8d,0x1fe
   14000bd51:	mov    QWORD PTR [rsp+0x40],r14
   14000bd56:	lea    rcx,[rbp-0x2e]
   14000bd5a:	call   0x140011e22
   14000bd5f:	mov    ebx,0x200
   14000bd64:	mov    WORD PTR [rsp+0x74],0x100
   14000bd6b:	lea    r15,[rbp-0x30]
   14000bd6f:	mov    DWORD PTR [rsp+0x70],ebx
   14000bd73:	xor    edx,edx
   14000bd75:	mov    QWORD PTR [rsp+0x68],r15
   14000bd7a:	lea    rcx,[rbp+0x1d2]
   14000bd81:	mov    DWORD PTR [rsp+0x78],r14d
   14000bd86:	lea    r8d,[rbx-0x2]
   14000bd8a:	mov    WORD PTR [rbp-0x30],r14w
   14000bd8f:	mov    QWORD PTR [rsp+0x30],r14
   14000bd94:	call   0x140011e22
   14000bd99:	xor    eax,eax
   14000bd9b:	mov    DWORD PTR [rbp-0x48],ebx
   14000bd9e:	mov    WORD PTR [rbp-0x44],0x100
   14000bda4:	lea    r14,[rbp+0x1d0]
   14000bdab:	mov    QWORD PTR [rbp-0x50],r14
   14000bdaf:	mov    DWORD PTR [rbp-0x40],eax
   14000bdb2:	mov    WORD PTR [rbp+0x1d0],ax
   14000bdb9:	test   rdi,rdi
   14000bdbc:	jne    0x14000bdc8
   14000bdbe:	mov    ebx,0x80070057
   14000bdc3:	jmp    0x14000c115
   14000bdc8:	mov    rcx,QWORD PTR [r13+0x8]
   14000bdcc:	mov    rax,QWORD PTR [rcx]
   14000bdcf:	mov    rax,QWORD PTR [rax+0x40]
   14000bdd3:	call   QWORD PTR [rip+0x6767]        # 0x140012540
   14000bdd9:	xor    r10d,r10d
   14000bddc:	mov    ebx,eax
   14000bdde:	test   eax,eax
   14000bde0:	jne    0x14000c0d3
   14000bde6:	mov    rcx,QWORD PTR [rdi]
   14000bde9:	test   rcx,rcx
   14000bdec:	je     0x14000bdf5
   14000bdee:	mov    QWORD PTR [rsp+0x30],rcx
   14000bdf3:	jmp    0x14000be1d
   14000bdf5:	mov    rcx,QWORD PTR [r13+0x20]
   14000bdf9:	lea    rdx,[rsp+0x30]
   14000bdfe:	mov    rax,QWORD PTR [rcx]
   14000be01:	mov    rax,QWORD PTR [rax+0x20]
   14000be05:	call   QWORD PTR [rip+0x6735]        # 0x140012540
   14000be0b:	xor    r10d,r10d
   14000be0e:	mov    ebx,eax
   14000be10:	test   eax,eax
   14000be12:	js     0x14000c0d3
   14000be18:	mov    rcx,QWORD PTR [rsp+0x30]
   14000be1d:	mov    rax,QWORD PTR [rcx]
   14000be20:	mov    rax,QWORD PTR [rax+0x8]
   14000be24:	call   QWORD PTR [rip+0x6716]        # 0x140012540
   14000be2a:	mov    rcx,QWORD PTR [r13+0x8]
   14000be2e:	lea    rdx,[rsp+0x38]
   14000be33:	xor    r8d,r8d
   14000be36:	mov    rax,QWORD PTR [rcx]
   14000be39:	mov    rax,QWORD PTR [rax+0x70]
   14000be3d:	call   QWORD PTR [rip+0x66fd]        # 0x140012540
   14000be43:	xor    r10d,r10d
   14000be46:	mov    ebx,eax
   14000be48:	test   eax,eax
   14000be4a:	js     0x14000c0d3
   14000be50:	mov    WORD PTR [r14],r10w
   14000be54:	mov    edi,r10d
   14000be57:	mov    rdx,QWORD PTR [rsp+0x38]
   14000be5c:	mov    DWORD PTR [rbp-0x40],r10d
   14000be60:	test   rdx,rdx
   14000be63:	je     0x14000bf27
   14000be69:	mov    r8d,0x2000000
   14000be6f:	mov    rax,rdx
   14000be72:	mov    ecx,r8d
   14000be75:	mov    ebx,r10d
   14000be78:	cmp    WORD PTR [rax],r10w
   14000be7c:	je     0x14000be88
   14000be7e:	add    rax,0x2
   14000be82:	sub    rcx,0x1
   14000be86:	jne    0x14000be78
   14000be88:	test   rcx,rcx
   14000be8b:	je     0x14000c139
   14000be91:	mov    rax,r8
   14000be94:	sub    rax,rcx
   14000be97:	cmp    rax,0x1
   14000be9b:	jbe    0x14000bf2c
   14000bea1:	mov    ecx,r10d
   14000bea4:	test   rax,rax
   14000bea7:	je     0x14000bebe
   14000bea9:	mov    r8,r10
   14000beac:	cmp    WORD PTR [rdx+r8*2],0x2e
   14000beb2:	je     0x14000bed9
   14000beb4:	inc    ecx
   14000beb6:	mov    r8d,ecx
   14000beb9:	cmp    r8,rax
   14000bebc:	jb     0x14000beac
   14000bebe:	mov    rcx,r14
   14000bec1:	call   QWORD PTR [rip+0x65f9]        # 0x1400124c0
   14000bec7:	xor    r10d,r10d
   14000beca:	test   rax,rax
   14000becd:	jne    0x14000bf34
   14000becf:	mov    ebx,0x80004005
   14000bed4:	jmp    0x14000c0d3
   14000bed9:	mov    edi,ecx
   14000bedb:	or     rax,0xffffffffffffffff
   14000bedf:	inc    rax
   14000bee2:	cmp    WORD PTR [rdx+rax*2],r10w
   14000bee7:	jne    0x14000bedf
   14000bee9:	lea    r8d,[rax+rax*1]
   14000beed:	mov    BYTE PTR [rsp+0x20],0x1
   14000bef2:	xor    r9d,r9d
   14000bef5:	lea    rcx,[rbp-0x70]
   14000bef9:	call   0x14000eb60
   14000befe:	xor    r10d,r10d
   14000bf01:	mov    ebx,eax
   14000bf03:	test   eax,eax
   14000bf05:	js     0x14000bf1e
   14000bf07:	mov    eax,DWORD PTR [rbp-0x48]
   14000bf0a:	shr    eax,1
   14000bf0c:	cmp    edi,eax
   14000bf0e:	jae    0x14000bf1e
   14000bf10:	mov    r14,QWORD PTR [rbp-0x50]
   14000bf14:	mov    DWORD PTR [rbp-0x40],edi
   14000bf17:	mov    WORD PTR [r14+rdi*2],r10w
   14000bf1c:	jmp    0x14000bebe
   14000bf1e:	mov    edi,DWORD PTR [rbp-0x40]
   14000bf21:	mov    r14,QWORD PTR [rbp-0x50]
   14000bf25:	jmp    0x14000bf2c
   14000bf27:	mov    ebx,0x80070057
   14000bf2c:	test   ebx,ebx
   14000bf2e:	js     0x14000c0d3
   14000bf34:	mov    rdx,QWORD PTR [rbp-0x80]
   14000bf38:	mov    rcx,r12
   14000bf3b:	call   QWORD PTR [rip+0x65bf]        # 0x140012500
   14000bf41:	xor    r10d,r10d
   14000bf44:	test   eax,eax
   14000bf46:	mov    WORD PTR [r15],r10w
   14000bf4a:	mov    ecx,r10d
   14000bf4d:	mov    DWORD PTR [rsp+0x78],r10d
   14000bf52:	sete   cl
   14000bf55:	mov    r9d,r10d
   14000bf58:	test   edi,edi
   14000bf5a:	jne    0x14000c020
   14000bf60:	test   ecx,ecx
   14000bf62:	jne    0x14000c020
   14000bf68:	test   r12,r12
   14000bf6b:	je     0x14000bf9d
   14000bf6d:	or     rax,0xffffffffffffffff
   14000bf71:	inc    rax
   14000bf74:	cmp    WORD PTR [r12+rax*2],r10w
   14000bf79:	jne    0x14000bf71
   14000bf7b:	lea    r8d,[rax+rax*1]
   14000bf7f:	mov    BYTE PTR [rsp+0x20],0x1
   14000bf84:	mov    rdx,r12
   14000bf87:	lea    rcx,[rsp+0x48]
   14000bf8c:	call   0x14000eb60
   14000bf91:	mov    r9d,DWORD PTR [rsp+0x78]
   14000bf96:	mov    ebx,eax
   14000bf98:	xor    r10d,r10d
   14000bf9b:	jmp    0x14000bfa0
   14000bf9d:	mov    ebx,r10d
   14000bfa0:	test   ebx,ebx
   14000bfa2:	js     0x14000c0d3
   14000bfa8:	add    r9d,r9d
   14000bfab:	mov    BYTE PTR [rsp+0x20],0x1
   14000bfb0:	mov    r8d,0x2
   14000bfb6:	lea    rdx,[rip+0x748b]        # 0x140013448
   14000bfbd:	lea    rcx,[rsp+0x48]
   14000bfc2:	call   0x14000eb60
   14000bfc7:	xor    r10d,r10d
   14000bfca:	mov    ebx,eax
   14000bfcc:	test   eax,eax
   14000bfce:	js     0x14000c0d3
   14000bfd4:	mov    rdx,QWORD PTR [rsp+0x38]
   14000bfd9:	test   rdx,rdx
   14000bfdc:	je     0x14000c00e
   14000bfde:	mov    eax,DWORD PTR [rsp+0x78]
   14000bfe2:	lea    r9d,[rax+rax*1]
   14000bfe6:	or     rax,0xffffffffffffffff
   14000bfea:	inc    rax
   14000bfed:	cmp    WORD PTR [rdx+rax*2],r10w
   14000bff2:	jne    0x14000bfea
   14000bff4:	lea    r8d,[rax+rax*1]
   14000bff8:	mov    BYTE PTR [rsp+0x20],0x1
   14000bffd:	lea    rcx,[rsp+0x48]
   14000c002:	call   0x14000eb60
   14000c007:	mov    ebx,eax
   14000c009:	xor    r10d,r10d
   14000c00c:	jmp    0x14000c011
   14000c00e:	mov    ebx,r10d
   14000c011:	test   ebx,ebx
   14000c013:	js     0x14000c0d3
   14000c019:	mov    r15,QWORD PTR [rsp+0x68]
   14000c01e:	jmp    0x14000c060
   14000c020:	mov    rdx,QWORD PTR [rsp+0x38]
   14000c025:	test   rdx,rdx
   14000c028:	je     0x14000c057
   14000c02a:	or     rax,0xffffffffffffffff
   14000c02e:	inc    rax
   14000c031:	cmp    WORD PTR [rdx+rax*2],r10w
   14000c036:	jne    0x14000c02e
   14000c038:	lea    r8d,[rax+rax*1]
   14000c03c:	mov    BYTE PTR [rsp+0x20],0x1
   14000c041:	lea    rcx,[rsp+0x48]
   14000c046:	call   0x14000eb60
   14000c04b:	mov    r15,QWORD PTR [rsp+0x68]
   14000c050:	mov    ebx,eax
   14000c052:	xor    r10d,r10d
   14000c055:	jmp    0x14000c05c
   14000c057:	mov    ebx,0x80070057
   14000c05c:	test   ebx,ebx
   14000c05e:	js     0x14000c0d3
   14000c060:	mov    rcx,QWORD PTR [r13+0x8]
   14000c064:	lea    rdx,[rsp+0x40]
   14000c069:	xor    r8d,r8d
   14000c06c:	mov    rax,QWORD PTR [rcx]
   14000c06f:	mov    rax,QWORD PTR [rax+0x80]
   14000c076:	call   QWORD PTR [rip+0x64c4]        # 0x140012540
   14000c07c:	xor    r10d,r10d
   14000c07f:	mov    ebx,eax
   14000c081:	test   eax,eax
   14000c083:	js     0x14000c0d3
   14000c085:	mov    rcx,QWORD PTR [rsp+0x30]
   14000c08a:	mov    rdx,r15
   14000c08d:	mov    r8,QWORD PTR [rsp+0x40]
   14000c092:	mov    rax,QWORD PTR [rcx]
   14000c095:	mov    rax,QWORD PTR [rax+0x38]
   14000c099:	call   QWORD PTR [rip+0x64a1]        # 0x140012540
   14000c09f:	xor    r10d,r10d
   14000c0a2:	mov    ebx,eax
   14000c0a4:	test   eax,eax
   14000c0a6:	js     0x14000c0d3
   14000c0a8:	mov    rcx,QWORD PTR [r13+0x8]
   14000c0ac:	mov    rax,QWORD PTR [rcx]
   14000c0af:	mov    rax,QWORD PTR [rax+0x48]
   14000c0b3:	call   QWORD PTR [rip+0x6487]        # 0x140012540
   14000c0b9:	xor    r10d,r10d
   14000c0bc:	test   eax,eax
   14000c0be:	je     0x14000be2a
   14000c0c4:	mov    rcx,QWORD PTR [rbp-0x78]
   14000c0c8:	mov    ebx,r10d
   14000c0cb:	mov    rax,QWORD PTR [rsp+0x30]
   14000c0d0:	mov    QWORD PTR [rcx],rax
   14000c0d3:	mov    rcx,QWORD PTR [rsp+0x30]
   14000c0d8:	test   rcx,rcx
   14000c0db:	je     0x14000c0f2
   14000c0dd:	mov    rax,QWORD PTR [rcx]
   14000c0e0:	mov    rax,QWORD PTR [rax+0x10]
   14000c0e4:	call   QWORD PTR [rip+0x6456]        # 0x140012540
   14000c0ea:	xor    r10d,r10d
   14000c0ed:	mov    QWORD PTR [rsp+0x30],r10
   14000c0f2:	cmp    BYTE PTR [rbp-0x44],r10b
   14000c0f6:	je     0x14000c104
   14000c0f8:	lea    rcx,[rbp-0x70]
   14000c0fc:	call   0x14000eb30
   14000c101:	xor    r10d,r10d
   14000c104:	cmp    BYTE PTR [rsp+0x74],r10b
   14000c109:	je     0x14000c115
   14000c10b:	lea    rcx,[rsp+0x48]
   14000c110:	call   0x14000eb30
   14000c115:	mov    eax,ebx
   14000c117:	mov    rcx,QWORD PTR [rbp+0x3d0]
   14000c11e:	xor    rcx,rsp
   14000c121:	call   0x140011800
   14000c126:	add    rsp,0x4e0
   14000c12d:	pop    r15
   14000c12f:	pop    r14
   14000c131:	pop    r13
   14000c133:	pop    r12
   14000c135:	pop    rdi
   14000c136:	pop    rbx
   14000c137:	pop    rbp
   14000c138:	ret    
   14000c139:	mov    ebx,0x80070057
   14000c13e:	jmp    0x14000c0d3
   14000c140:	int3   
   14000c141:	int3   
   14000c142:	int3   
   14000c143:	int3   
   14000c144:	int3   
   14000c145:	int3   
   14000c146:	int3   
   14000c147:	int3   
   14000c148:	mov    QWORD PTR [rsp+0x8],rbx
   14000c14d:	mov    QWORD PTR [rsp+0x10],rsi
   14000c152:	push   rdi
   14000c153:	sub    rsp,0x20
   14000c157:	mov    rbx,rcx
   14000c15a:	lea    rdx,[rip+0x6e3f]        # 0x140012fa0
   14000c161:	mov    rcx,QWORD PTR [rcx+0x10]
   14000c165:	xor    esi,esi
   14000c167:	mov    rax,QWORD PTR [rcx]
   14000c16a:	mov    rax,QWORD PTR [rax+0xf0]
   14000c171:	call   QWORD PTR [rip+0x63c9]        # 0x140012540
   14000c177:	test   eax,eax
   14000c179:	js     0x14000c1b6
   14000c17b:	xor    edi,edi
   14000c17d:	cmp    DWORD PTR [rbx+0x20],esi
   14000c180:	jbe    0x14000c1ad
   14000c182:	mov    rcx,QWORD PTR [rbx+0x10]
   14000c186:	lea    rdx,[rip+0x730b]        # 0x140013498
   14000c18d:	mov    rax,QWORD PTR [rcx]
   14000c190:	mov    rax,QWORD PTR [rax+0xf0]
   14000c197:	call   QWORD PTR [rip+0x63a3]        # 0x140012540
   14000c19d:	test   eax,eax
   14000c19f:	js     0x14000c1af
   14000c1a1:	inc    edi
   14000c1a3:	mov    esi,0x1
   14000c1a8:	cmp    edi,DWORD PTR [rbx+0x20]
   14000c1ab:	jb     0x14000c182
   14000c1ad:	xor    eax,eax
   14000c1af:	test   esi,esi
   14000c1b1:	je     0x14000c1b6
   14000c1b3:	mov    DWORD PTR [rbx+0x18],eax
   14000c1b6:	mov    rbx,QWORD PTR [rsp+0x30]
   14000c1bb:	mov    rsi,QWORD PTR [rsp+0x38]
   14000c1c0:	add    rsp,0x20
   14000c1c4:	pop    rdi
   14000c1c5:	ret    
   14000c1c6:	int3   
   14000c1c7:	int3   
   14000c1c8:	int3   
   14000c1c9:	int3   
   14000c1ca:	int3   
   14000c1cb:	int3   
   14000c1cc:	sub    rsp,0x28
   14000c1d0:	call   QWORD PTR [rip+0x611a]        # 0x1400122f0
   14000c1d6:	mov    r8d,eax
   14000c1d9:	mov    eax,0x4ec4ec4f
   14000c1de:	mul    r8d
   14000c1e1:	shr    edx,0x2
   14000c1e4:	imul   ecx,edx,0xd
   14000c1e7:	sub    r8d,ecx
   14000c1ea:	lea    rcx,[rip+0x730f]        # 0x140013500
   14000c1f1:	movsd  xmm0,QWORD PTR [rcx+r8*8]
   14000c1f7:	add    rsp,0x28
   14000c1fb:	ret    
   14000c1fc:	int3   
   14000c1fd:	int3   
   14000c1fe:	int3   
   14000c1ff:	int3   
   14000c200:	int3   
   14000c201:	int3   
   14000c202:	int3   
   14000c203:	int3   
   14000c204:	rex push rbx
   14000c206:	sub    rsp,0x20
   14000c20a:	mov    ebx,ecx
   14000c20c:	test   ecx,ecx
   14000c20e:	jne    0x14000c221
   14000c210:	mov    rax,QWORD PTR [rip+0x104d1]        # 0x14001c6e8
   14000c217:	call   QWORD PTR [rip+0x6323]        # 0x140012540
   14000c21d:	test   eax,eax
   14000c21f:	jne    0x14000c229
   14000c221:	mov    ecx,ebx
   14000c223:	call   QWORD PTR [rip+0x607f]        # 0x1400122a8
   14000c229:	add    rsp,0x20
   14000c22d:	pop    rbx
   14000c22e:	ret    
   14000c22f:	int3   
   14000c230:	int3   
   14000c231:	int3   
   14000c232:	int3   
   14000c233:	int3   
   14000c234:	int3   
   14000c235:	int3   
   14000c236:	int3   
   14000c237:	int3   
   14000c238:	int3   
   14000c239:	int3   
   14000c23a:	int3   
   14000c23b:	int3   
   14000c23c:	int3   
   14000c23d:	int3   
   14000c23e:	int3   
   14000c23f:	int3   
   14000c240:	mov    rax,rsp
   14000c243:	mov    QWORD PTR [rax+0x8],rbx
   14000c247:	mov    QWORD PTR [rax+0x10],rbp
   14000c24b:	mov    QWORD PTR [rax+0x18],rsi
   14000c24f:	mov    QWORD PTR [rax+0x20],rdi
   14000c253:	push   r12
   14000c255:	push   r13
   14000c257:	push   r14
   14000c259:	sub    rsp,0x20
   14000c25d:	movzx  ebp,WORD PTR [rip+0xfe00]        # 0x14001c064
   14000c264:	mov    rsi,rcx
   14000c267:	xor    edi,edi
   14000c269:	call   0x14000c1cc
   14000c26e:	movd   xmm1,ebp
   14000c272:	cvtdq2pd xmm1,xmm1
   14000c276:	mulsd  xmm0,xmm1
   14000c27a:	cvttsd2si r14d,xmm0
   14000c27f:	call   QWORD PTR [rip+0x606b]        # 0x1400122f0
   14000c285:	mov    edx,DWORD PTR [rsi]
   14000c287:	cmp    edx,eax
   14000c289:	jne    0x14000c291
   14000c28b:	call   QWORD PTR [rip+0x5fa7]        # 0x140012238
   14000c291:	xor    ebx,ebx
   14000c293:	lea    r12,[rip+0x724e]        # 0x1400134e8
   14000c29a:	mov    r13d,0x2710
   14000c2a0:	mov    eax,DWORD PTR [rsi]
   14000c2a2:	test   eax,eax
   14000c2a4:	jne    0x14000c2b9
   14000c2a6:	call   QWORD PTR [rip+0x6044]        # 0x1400122f0
   14000c2ac:	mov    ecx,eax
   14000c2ae:	xor    eax,eax
   14000c2b0:	lock cmpxchg DWORD PTR [rsi],ecx
   14000c2b4:	sete   cl
   14000c2b7:	jmp    0x14000c2bb
   14000c2b9:	xor    cl,cl
   14000c2bb:	test   cl,cl
   14000c2bd:	jne    0x14000c346
   14000c2c3:	cmp    DWORD PTR [rip+0x1040a],0x1        # 0x14001c6d4
   14000c2ca:	jbe    0x14000c32a
   14000c2cc:	test   rbp,rbp
   14000c2cf:	je     0x14000c32a
   14000c2d1:	mov    ecx,r14d
   14000c2d4:	jmp    0x14000c322
   14000c2d6:	sub    ecx,0x1
   14000c2d9:	jns    0x14000c320
   14000c2db:	mov    ecx,edi
   14000c2dd:	call   0x14000c204
   14000c2e2:	movd   xmm0,r14d
   14000c2e7:	mov    r14d,0x64
   14000c2ed:	cvtdq2pd xmm0,xmm0
   14000c2f1:	mulsd  xmm0,QWORD PTR [rip+0xfdaf]        # 0x14001c0a8
   14000c2f9:	cvttsd2si eax,xmm0
   14000c2fd:	cmp    eax,r13d
   14000c300:	cmovg  eax,r13d
   14000c304:	cmp    eax,r14d
   14000c307:	cmovg  r14d,eax
   14000c30b:	mov    ecx,r14d
   14000c30e:	cmp    ebx,0x4
   14000c311:	jb     0x14000c31a
   14000c313:	mov    edi,0x64
   14000c318:	jmp    0x14000c322
   14000c31a:	mov    edi,DWORD PTR [r12+rbx*4]
   14000c31e:	jmp    0x14000c322
   14000c320:	pause  
   14000c322:	mov    eax,DWORD PTR [rsi]
   14000c324:	test   eax,eax
   14000c326:	jne    0x14000c2d6
   14000c328:	jmp    0x14000c33f
   14000c32a:	mov    ecx,edi
   14000c32c:	call   0x14000c204
   14000c331:	mov    edi,0x64
   14000c336:	cmp    ebx,0x4
   14000c339:	jae    0x14000c33f
   14000c33b:	mov    edi,DWORD PTR [r12+rbx*4]
   14000c33f:	inc    ebx
   14000c341:	jmp    0x14000c2a0
   14000c346:	mov    rbx,QWORD PTR [rsp+0x40]
   14000c34b:	mov    rbp,QWORD PTR [rsp+0x48]
   14000c350:	mov    rsi,QWORD PTR [rsp+0x50]
   14000c355:	mov    rdi,QWORD PTR [rsp+0x58]
   14000c35a:	add    rsp,0x20
   14000c35e:	pop    r14
   14000c360:	pop    r13
   14000c362:	pop    r12
   14000c364:	ret    
   14000c365:	int3   
   14000c366:	int3   
   14000c367:	int3   
   14000c368:	int3   
   14000c369:	int3   
   14000c36a:	int3   
   14000c36b:	int3   
   14000c36c:	int3   
   14000c36d:	int3   
   14000c36e:	int3   
   14000c36f:	int3   
   14000c370:	mov    QWORD PTR [rsp+0x8],rbx
   14000c375:	mov    QWORD PTR [rsp+0x18],rbp
   14000c37a:	push   rsi
   14000c37b:	push   rdi
   14000c37c:	push   r12
   14000c37e:	push   r14
   14000c380:	push   r15
   14000c382:	sub    rsp,0x20
   14000c386:	movzx  ebx,WORD PTR [rip+0xfcd3]        # 0x14001c060
   14000c38d:	xor    r15d,r15d
   14000c390:	mov    bpl,r15b
   14000c393:	mov    rsi,rcx
   14000c396:	mov    DWORD PTR [rsp+0x58],ebp
   14000c39a:	mov    edi,r15d
   14000c39d:	call   0x14000c1cc
   14000c3a2:	movd   xmm1,ebx
   14000c3a6:	lea    r12d,[r15+0x1]
   14000c3aa:	cvtdq2pd xmm1,xmm1
   14000c3ae:	mov    ebx,r15d
   14000c3b1:	mulsd  xmm0,xmm1
   14000c3b5:	cvttsd2si r14d,xmm0
   14000c3ba:	cmp    DWORD PTR [rip+0x10313],r12d        # 0x14001c6d4
   14000c3c1:	jbe    0x14000c43e
   14000c3c3:	cmp    WORD PTR [rip+0xfc95],r15w        # 0x14001c060
   14000c3cb:	je     0x14000c43e
   14000c3cd:	mov    eax,DWORD PTR [rsi]
   14000c3cf:	mov    ecx,r14d
   14000c3d2:	test   eax,eax
   14000c3d4:	je     0x14000c45d
   14000c3da:	lea    rbp,[rip+0x7107]        # 0x1400134e8
   14000c3e1:	sub    ecx,r12d
   14000c3e4:	jns    0x14000c430
   14000c3e6:	mov    ecx,edi
   14000c3e8:	call   0x14000c204
   14000c3ed:	cmp    ebx,0x4
   14000c3f0:	jb     0x14000c3f9
   14000c3f2:	mov    edi,0x64
   14000c3f7:	jmp    0x14000c3ff
   14000c3f9:	mov    eax,ebx
   14000c3fb:	mov    edi,DWORD PTR [rbp+rax*4+0x0]
   14000c3ff:	movd   xmm0,r14d
   14000c404:	mov    edx,0x2710
   14000c409:	mov    r14d,0x64
   14000c40f:	cvtdq2pd xmm0,xmm0
   14000c413:	mulsd  xmm0,QWORD PTR [rip+0xfc75]        # 0x14001c090
   14000c41b:	cvttsd2si eax,xmm0
   14000c41f:	cmp    eax,edx
   14000c421:	cmovg  eax,edx
   14000c424:	cmp    eax,r14d
   14000c427:	cmovg  r14d,eax
   14000c42b:	mov    ecx,r14d
   14000c42e:	jmp    0x14000c432
   14000c430:	pause  
   14000c432:	mov    eax,DWORD PTR [rsi]
   14000c434:	test   eax,eax
   14000c436:	jne    0x14000c3e1
   14000c438:	mov    ebp,DWORD PTR [rsp+0x58]
   14000c43c:	jmp    0x14000c45d
   14000c43e:	mov    ecx,edi
   14000c440:	call   0x14000c204
   14000c445:	cmp    ebx,0x4
   14000c448:	jb     0x14000c451
   14000c44a:	mov    edi,0x64
   14000c44f:	jmp    0x14000c45d
   14000c451:	mov    eax,ebx
   14000c453:	lea    rcx,[rip+0x708e]        # 0x1400134e8
   14000c45a:	mov    edi,DWORD PTR [rcx+rax*4]
   14000c45d:	mov    eax,DWORD PTR [rsi]
   14000c45f:	test   eax,eax
   14000c461:	jne    0x14000c47c
   14000c463:	call   QWORD PTR [rip+0x5e87]        # 0x1400122f0
   14000c469:	mov    ecx,eax
   14000c46b:	and    ecx,0xfffffffd
   14000c46e:	or     ecx,r12d
   14000c471:	xor    eax,eax
   14000c473:	lock cmpxchg DWORD PTR [rsi],ecx
   14000c477:	sete   cl
   14000c47a:	jmp    0x14000c47f
   14000c47c:	mov    cl,r15b
   14000c47f:	test   cl,cl
   14000c481:	movzx  ebp,bpl
   14000c485:	cmovne ebp,r12d
   14000c489:	add    ebx,r12d
   14000c48c:	mov    DWORD PTR [rsp+0x58],ebp
   14000c490:	test   bpl,bpl
   14000c493:	je     0x14000c3ba
   14000c499:	mov    rbx,QWORD PTR [rsp+0x50]
   14000c49e:	mov    rbp,QWORD PTR [rsp+0x60]
   14000c4a3:	add    rsp,0x20
   14000c4a7:	pop    r15
   14000c4a9:	pop    r14
   14000c4ab:	pop    r12
   14000c4ad:	pop    rdi
   14000c4ae:	pop    rsi
   14000c4af:	ret    
   14000c4b0:	int3   
   14000c4b1:	int3   
   14000c4b2:	int3   
   14000c4b3:	int3   
   14000c4b4:	int3   
   14000c4b5:	int3   
   14000c4b6:	int3   
   14000c4b7:	int3   
   14000c4b8:	int3   
   14000c4b9:	int3   
   14000c4ba:	int3   
   14000c4bb:	int3   
   14000c4bc:	int3   
   14000c4bd:	int3   
   14000c4be:	int3   
   14000c4bf:	int3   
   14000c4c0:	mov    rax,QWORD PTR [rip+0x10211]        # 0x14001c6d8
   14000c4c7:	rex.W jmp QWORD PTR [rip+0x6072]        # 0x140012540
   14000c4ce:	int3   
   14000c4cf:	int3   
   14000c4d0:	int3   
   14000c4d1:	int3   
   14000c4d2:	int3   
   14000c4d3:	int3   
   14000c4d4:	int3   
   14000c4d5:	int3   
   14000c4d6:	int3   
   14000c4d7:	int3   
   14000c4d8:	int3   
   14000c4d9:	int3   
   14000c4da:	int3   
   14000c4db:	int3   
   14000c4dc:	int3   
   14000c4dd:	int3   
   14000c4de:	int3   
   14000c4df:	int3   
   14000c4e0:	mov    rax,rsp
   14000c4e3:	mov    QWORD PTR [rax+0x8],rbx
   14000c4e7:	mov    QWORD PTR [rax+0x10],rbp
   14000c4eb:	mov    QWORD PTR [rax+0x18],rsi
   14000c4ef:	mov    QWORD PTR [rax+0x20],rdi
   14000c4f3:	push   r13
   14000c4f5:	push   r14
   14000c4f7:	push   r15
   14000c4f9:	sub    rsp,0x20
   14000c4fd:	xor    r15d,r15d
   14000c500:	mov    r14b,dl
   14000c503:	mov    edi,r15d
   14000c506:	mov    rbx,rcx
   14000c509:	call   0x14000c1cc
   14000c50e:	movzx  r8d,WORD PTR [rip+0xfb56]        # 0x14001c06c
   14000c516:	mov    esi,r15d
   14000c519:	or     r13d,0xffffffff
   14000c51d:	movd   xmm1,r8d
   14000c522:	cvtdq2pd xmm1,xmm1
   14000c526:	mulsd  xmm0,xmm1
   14000c52a:	cvttsd2si ebp,xmm0
   14000c52e:	cmp    DWORD PTR [rip+0x1019f],0x2        # 0x14001c6d4
   14000c535:	mov    ecx,ebp
   14000c537:	jb     0x14000c53f
   14000c539:	test   r8w,r8w
   14000c53d:	jne    0x14000c579
   14000c53f:	mov    ecx,0x1
   14000c544:	jmp    0x14000c579
   14000c546:	test   r14b,r14b
   14000c549:	je     0x14000c558
   14000c54b:	mov    eax,DWORD PTR [rbx]
   14000c54d:	test   eax,eax
   14000c54f:	jne    0x14000c577
   14000c551:	lock cmpxchg DWORD PTR [rbx],r13d
   14000c556:	jmp    0x14000c575
   14000c558:	mov    r8d,DWORD PTR [rbx]
   14000c55b:	cmp    r8d,r13d
   14000c55e:	je     0x14000c577
   14000c560:	mov    eax,DWORD PTR [rbx+0x4]
   14000c563:	test   eax,eax
   14000c565:	jne    0x14000c577
   14000c567:	lea    edx,[r8+0x1]
   14000c56b:	mov    eax,r8d
   14000c56e:	lock cmpxchg DWORD PTR [rbx],edx
   14000c572:	cmp    r8d,eax
   14000c575:	je     0x14000c5d4
   14000c577:	pause  
   14000c579:	sub    ecx,0x1
   14000c57c:	jns    0x14000c546
   14000c57e:	mov    ecx,edi
   14000c580:	call   0x14000c204
   14000c585:	cmp    esi,0x4
   14000c588:	jb     0x14000c591
   14000c58a:	mov    edi,0x64
   14000c58f:	jmp    0x14000c59d
   14000c591:	mov    eax,esi
   14000c593:	lea    rcx,[rip+0x6f4e]        # 0x1400134e8
   14000c59a:	mov    edi,DWORD PTR [rcx+rax*4]
   14000c59d:	movzx  r8d,WORD PTR [rip+0xfac7]        # 0x14001c06c
   14000c5a5:	mov    edx,0x2710
   14000c5aa:	movd   xmm0,ebp
   14000c5ae:	mov    ebp,0x64
   14000c5b3:	cvtdq2pd xmm0,xmm0
   14000c5b7:	mulsd  xmm0,QWORD PTR [rip+0xfa91]        # 0x14001c050
   14000c5bf:	cvttsd2si eax,xmm0
   14000c5c3:	cmp    eax,edx
   14000c5c5:	cmovg  eax,edx
   14000c5c8:	cmp    eax,ebp
   14000c5ca:	cmovg  ebp,eax
   14000c5cd:	inc    esi
   14000c5cf:	jmp    0x14000c52e
   14000c5d4:	mov    rbx,QWORD PTR [rsp+0x40]
   14000c5d9:	mov    rbp,QWORD PTR [rsp+0x48]
   14000c5de:	mov    rsi,QWORD PTR [rsp+0x50]
   14000c5e3:	mov    rdi,QWORD PTR [rsp+0x58]
   14000c5e8:	add    rsp,0x20
   14000c5ec:	pop    r15
   14000c5ee:	pop    r14
   14000c5f0:	pop    r13
   14000c5f2:	ret    
   14000c5f3:	int3   
   14000c5f4:	int3   
   14000c5f5:	int3   
   14000c5f6:	int3   
   14000c5f7:	int3   
   14000c5f8:	int3   
   14000c5f9:	int3   
   14000c5fa:	int3   
   14000c5fb:	int3   
   14000c5fc:	int3   
   14000c5fd:	int3   
   14000c5fe:	int3   
   14000c5ff:	int3   
   14000c600:	mov    r8d,DWORD PTR [rcx]
   14000c603:	mov    r9,rcx
   14000c606:	mov    eax,r8d
   14000c609:	lea    edx,[r8+0x10000]
   14000c610:	lock cmpxchg DWORD PTR [rcx],edx
   14000c614:	cmp    r8d,eax
   14000c617:	je     0x14000c632
   14000c619:	prefetchw BYTE PTR [rcx]
   14000c61c:	pause  
   14000c61e:	mov    edx,DWORD PTR [r9]
   14000c621:	mov    eax,edx
   14000c623:	lea    ecx,[rdx+0x10000]
   14000c629:	lock cmpxchg DWORD PTR [r9],ecx
   14000c62e:	cmp    edx,eax
   14000c630:	jne    0x14000c61c
   14000c632:	mov    dl,0x1
   14000c634:	mov    rcx,r9
   14000c637:	jmp    0x14000c650
   14000c63c:	int3   
   14000c63d:	int3   
   14000c63e:	int3   
   14000c63f:	int3   
   14000c640:	int3   
   14000c641:	int3   
   14000c642:	int3   
   14000c643:	int3   
   14000c644:	int3   
   14000c645:	int3   
   14000c646:	int3   
   14000c647:	int3   
   14000c648:	int3   
   14000c649:	int3   
   14000c64a:	int3   
   14000c64b:	int3   
   14000c64c:	int3   
   14000c64d:	int3   
   14000c64e:	int3   
   14000c64f:	int3   
   14000c650:	mov    rax,rsp
   14000c653:	mov    QWORD PTR [rax+0x8],rbx
   14000c657:	mov    QWORD PTR [rax+0x10],rbp
   14000c65b:	mov    QWORD PTR [rax+0x18],rsi
   14000c65f:	mov    QWORD PTR [rax+0x20],rdi
   14000c663:	push   r13
   14000c665:	push   r14
   14000c667:	push   r15
   14000c669:	sub    rsp,0x20
   14000c66d:	xor    r15d,r15d
   14000c670:	mov    r14b,dl
   14000c673:	mov    edi,r15d
   14000c676:	mov    rbx,rcx
   14000c679:	call   0x14000c1cc
   14000c67e:	movzx  ecx,WORD PTR [rip+0xf9e3]        # 0x14001c068
   14000c685:	mov    esi,r15d
   14000c688:	mov    r13d,0x2710
   14000c68e:	movd   xmm1,ecx
   14000c692:	cvtdq2pd xmm1,xmm1
   14000c696:	mulsd  xmm0,xmm1
   14000c69a:	cvttsd2si ebp,xmm0
   14000c69e:	cmp    DWORD PTR [rip+0x1002f],0x2        # 0x14001c6d4
   14000c6a5:	mov    r9d,ebp
   14000c6a8:	jb     0x14000c6af
   14000c6aa:	test   cx,cx
   14000c6ad:	jne    0x14000c6f3
   14000c6af:	mov    r9d,0x1
   14000c6b5:	jmp    0x14000c6f3
   14000c6b7:	test   r14b,r14b
   14000c6ba:	je     0x14000c6d5
   14000c6bc:	mov    edx,DWORD PTR [rbx]
   14000c6be:	test   dx,dx
   14000c6c1:	jne    0x14000c6f1
   14000c6c3:	mov    ecx,edx
   14000c6c5:	mov    eax,edx
   14000c6c7:	or     ecx,0xffff
   14000c6cd:	lock cmpxchg DWORD PTR [rbx],ecx
   14000c6d1:	cmp    edx,eax
   14000c6d3:	jmp    0x14000c6ef
   14000c6d5:	mov    r8d,DWORD PTR [rbx]
   14000c6d8:	test   r8d,0xffff8000
   14000c6df:	jne    0x14000c6f1
   14000c6e1:	lea    edx,[r8+0x1]
   14000c6e5:	mov    eax,r8d
   14000c6e8:	lock cmpxchg DWORD PTR [rbx],edx
   14000c6ec:	cmp    r8d,eax
   14000c6ef:	je     0x14000c74b
   14000c6f1:	pause  
   14000c6f3:	sub    r9d,0x1
   14000c6f7:	jns    0x14000c6b7
   14000c6f9:	mov    ecx,edi
   14000c6fb:	call   0x14000c204
   14000c700:	cmp    esi,0x4
   14000c703:	jb     0x14000c70c
   14000c705:	mov    edi,0x64
   14000c70a:	jmp    0x14000c718
   14000c70c:	mov    eax,esi
   14000c70e:	lea    rcx,[rip+0x6dd3]        # 0x1400134e8
   14000c715:	mov    edi,DWORD PTR [rcx+rax*4]
   14000c718:	movzx  ecx,WORD PTR [rip+0xf949]        # 0x14001c068
   14000c71f:	movd   xmm0,ebp
   14000c723:	mov    ebp,0x64
   14000c728:	cvtdq2pd xmm0,xmm0
   14000c72c:	mulsd  xmm0,QWORD PTR [rip+0xf964]        # 0x14001c098
   14000c734:	cvttsd2si eax,xmm0
   14000c738:	cmp    eax,r13d
   14000c73b:	cmovg  eax,r13d
   14000c73f:	cmp    eax,ebp
   14000c741:	cmovg  ebp,eax
   14000c744:	inc    esi
   14000c746:	jmp    0x14000c69e
   14000c74b:	mov    rbx,QWORD PTR [rsp+0x40]
   14000c750:	mov    rbp,QWORD PTR [rsp+0x48]
   14000c755:	mov    rsi,QWORD PTR [rsp+0x50]
   14000c75a:	mov    rdi,QWORD PTR [rsp+0x58]
   14000c75f:	add    rsp,0x20
   14000c763:	pop    r15
   14000c765:	pop    r14
   14000c767:	pop    r13
   14000c769:	ret    
   14000c76a:	int3   
   14000c76b:	int3   
   14000c76c:	int3   
   14000c76d:	int3   
   14000c76e:	int3   
   14000c76f:	int3   
   14000c770:	mov    r8d,DWORD PTR [rcx]
   14000c773:	mov    r9,rcx
   14000c776:	mov    eax,r8d
   14000c779:	lea    edx,[r8+0x10000]
   14000c780:	lock cmpxchg DWORD PTR [rcx],edx
   14000c784:	cmp    r8d,eax
   14000c787:	je     0x14000c7a2
   14000c789:	prefetchw BYTE PTR [rcx]
   14000c78c:	pause  
   14000c78e:	mov    edx,DWORD PTR [r9]
   14000c791:	mov    eax,edx
   14000c793:	lea    ecx,[rdx+0x10000]
   14000c799:	lock cmpxchg DWORD PTR [r9],ecx
   14000c79e:	cmp    edx,eax
   14000c7a0:	jne    0x14000c78c
   14000c7a2:	mov    edx,0x1
   14000c7a7:	mov    rcx,r9
   14000c7aa:	jmp    0x14000c7c0
   14000c7af:	int3   
   14000c7b0:	int3   
   14000c7b1:	int3   
   14000c7b2:	int3   
   14000c7b3:	int3   
   14000c7b4:	int3   
   14000c7b5:	int3   
   14000c7b6:	int3   
   14000c7b7:	int3   
   14000c7b8:	int3   
   14000c7b9:	int3   
   14000c7ba:	int3   
   14000c7bb:	int3   
   14000c7bc:	int3   
   14000c7bd:	int3   
   14000c7be:	int3   
   14000c7bf:	int3   
   14000c7c0:	mov    rax,rsp
   14000c7c3:	mov    QWORD PTR [rax+0x8],rbx
   14000c7c7:	mov    QWORD PTR [rax+0x10],rbp
   14000c7cb:	mov    QWORD PTR [rax+0x18],rsi
   14000c7cf:	mov    QWORD PTR [rax+0x20],rdi
   14000c7d3:	push   r12
   14000c7d5:	push   r14
   14000c7d7:	push   r15
   14000c7d9:	sub    rsp,0x20
   14000c7dd:	xor    r12d,r12d
   14000c7e0:	mov    r14d,edx
   14000c7e3:	mov    esi,r12d
   14000c7e6:	mov    rbx,rcx
   14000c7e9:	call   0x14000c1cc
   14000c7ee:	movzx  ecx,WORD PTR [rip+0xf893]        # 0x14001c088
   14000c7f5:	mov    ebp,r12d
   14000c7f8:	movd   xmm1,ecx
   14000c7fc:	cvtdq2pd xmm1,xmm1
   14000c800:	mulsd  xmm0,xmm1
   14000c804:	cvttsd2si r15d,xmm0
   14000c809:	cmp    DWORD PTR [rip+0xfec4],0x2        # 0x14001c6d4
   14000c810:	mov    eax,r15d
   14000c813:	jb     0x14000c81a
   14000c815:	test   cx,cx
   14000c818:	jne    0x14000c81f
   14000c81a:	mov    eax,0x1
   14000c81f:	lea    edi,[rax-0x1]
   14000c822:	test   edi,edi
   14000c824:	js     0x14000c891
   14000c826:	cmp    r14d,0x1
   14000c82a:	jne    0x14000c86f
   14000c82c:	mov    eax,DWORD PTR [rbx+0x4]
   14000c82f:	test   eax,eax
   14000c831:	jne    0x14000c850
   14000c833:	mov    edx,DWORD PTR [rbx]
   14000c835:	test   dx,dx
   14000c838:	jne    0x14000c850
   14000c83a:	mov    ecx,edx
   14000c83c:	mov    eax,edx
   14000c83e:	or     ecx,0xffff
   14000c844:	lock cmpxchg DWORD PTR [rbx],ecx
   14000c848:	cmp    edx,eax
   14000c84a:	je     0x14000c902
   14000c850:	call   QWORD PTR [rip+0x5a9a]        # 0x1400122f0
   14000c856:	mov    ecx,DWORD PTR [rbx+0x4]
   14000c859:	xor    ecx,eax
   14000c85b:	test   ecx,0xfffffffc
   14000c861:	jne    0x14000c87f
   14000c863:	mov    eax,0x1
   14000c868:	lock xadd DWORD PTR [rbx+0x4],eax
   14000c86d:	jmp    0x14000c8b8
   14000c86f:	mov    edx,DWORD PTR [rbx]
   14000c871:	cmp    r14d,0x2
   14000c875:	jne    0x14000c8a4
   14000c877:	test   edx,0xffff8000
   14000c87d:	je     0x14000c8ab
   14000c87f:	mov    cl,r12b
   14000c882:	test   cl,cl
   14000c884:	jne    0x14000c911
   14000c88a:	pause  
   14000c88c:	sub    edi,0x1
   14000c88f:	jns    0x14000c826
   14000c891:	mov    ecx,esi
   14000c893:	call   0x14000c204
   14000c898:	cmp    ebp,0x4
   14000c89b:	jb     0x14000c8bc
   14000c89d:	mov    esi,0x64
   14000c8a2:	jmp    0x14000c8c8
   14000c8a4:	cmp    dx,0xffff
   14000c8a9:	je     0x14000c87f
   14000c8ab:	mov    eax,edx
   14000c8ad:	lea    ecx,[rdx+0x1]
   14000c8b0:	lock cmpxchg DWORD PTR [rbx],ecx
   14000c8b4:	cmp    edx,eax
   14000c8b6:	jne    0x14000c87f
   14000c8b8:	mov    cl,0x1
   14000c8ba:	jmp    0x14000c882
   14000c8bc:	mov    eax,ebp
   14000c8be:	lea    rcx,[rip+0x6c23]        # 0x1400134e8
   14000c8c5:	mov    esi,DWORD PTR [rcx+rax*4]
   14000c8c8:	movzx  ecx,WORD PTR [rip+0xf7b9]        # 0x14001c088
   14000c8cf:	mov    edx,0x2710
   14000c8d4:	movd   xmm0,r15d
   14000c8d9:	mov    r15d,0x64
   14000c8df:	cvtdq2pd xmm0,xmm0
   14000c8e3:	mulsd  xmm0,QWORD PTR [rip+0xf78d]        # 0x14001c078
   14000c8eb:	cvttsd2si eax,xmm0
   14000c8ef:	cmp    eax,edx
   14000c8f1:	cmovg  eax,edx
   14000c8f4:	cmp    eax,r15d
   14000c8f7:	cmovg  r15d,eax
   14000c8fb:	inc    ebp
   14000c8fd:	jmp    0x14000c809
   14000c902:	call   QWORD PTR [rip+0x59e8]        # 0x1400122f0
   14000c908:	and    eax,0xfffffffd
   14000c90b:	or     eax,0x1
   14000c90e:	xchg   DWORD PTR [rbx+0x4],eax
   14000c911:	mov    rbx,QWORD PTR [rsp+0x40]
   14000c916:	mov    rbp,QWORD PTR [rsp+0x48]
   14000c91b:	mov    rsi,QWORD PTR [rsp+0x50]
   14000c920:	mov    rdi,QWORD PTR [rsp+0x58]
   14000c925:	add    rsp,0x20
   14000c929:	pop    r15
   14000c92b:	pop    r14
   14000c92d:	pop    r12
   14000c92f:	ret    
   14000c930:	int3   
   14000c931:	int3   
   14000c932:	int3   
   14000c933:	int3   
   14000c934:	int3   
   14000c935:	int3   
   14000c936:	int3   
   14000c937:	int3   
   14000c938:	int3   
   14000c939:	int3   
   14000c93a:	int3   
   14000c93b:	int3   
   14000c93c:	int3   
   14000c93d:	int3   
   14000c93e:	int3   
   14000c93f:	int3   
   14000c940:	rex push rbx
   14000c942:	sub    rsp,0x40
   14000c946:	mov    DWORD PTR [rcx],0x0
   14000c94c:	mov    rbx,rcx
   14000c94f:	mov    DWORD PTR [rcx+0x4],0x0
   14000c956:	mov    DWORD PTR [rcx+0x18],0x0
   14000c95d:	test   edx,edx
   14000c95f:	jle    0x14000c9e5
   14000c965:	lea    eax,[r8-0x1]
   14000c969:	mov    DWORD PTR [rcx+0x8],edx
   14000c96c:	cmp    eax,0xff
   14000c971:	ja     0x14000c9c7
   14000c973:	mov    DWORD PTR [rcx+0xc],r8d
   14000c977:	xor    r9d,r9d
   14000c97a:	xor    ecx,ecx
   14000c97c:	mov    DWORD PTR [rsp+0x28],0x1f0003
   14000c984:	and    DWORD PTR [rsp+0x20],0x0
   14000c989:	mov    r8d,0x100
   14000c98f:	xor    edx,edx
   14000c991:	call   QWORD PTR [rip+0x5899]        # 0x140012230
   14000c997:	mov    QWORD PTR [rbx+0x10],rax
   14000c99b:	test   rax,rax
   14000c99e:	je     0x14000c9a9
   14000c9a0:	mov    rax,rbx
   14000c9a3:	add    rsp,0x40
   14000c9a7:	pop    rbx
   14000c9a8:	ret    
   14000c9a9:	lea    rax,[rip+0x6ca0]        # 0x140013650
   14000c9b0:	lea    rdx,[rip+0x7b19]        # 0x1400144d0
   14000c9b7:	mov    QWORD PTR [rsp+0x50],rax
   14000c9bc:	lea    rcx,[rsp+0x50]
   14000c9c1:	call   0x140011d76
   14000c9c6:	int3   
   14000c9c7:	lea    rax,[rip+0x6c12]        # 0x1400135e0
   14000c9ce:	lea    rdx,[rip+0x7afb]        # 0x1400144d0
   14000c9d5:	mov    QWORD PTR [rsp+0x68],rax
   14000c9da:	lea    rcx,[rsp+0x68]
   14000c9df:	call   0x140011d76
   14000c9e4:	int3   
   14000c9e5:	lea    rax,[rip+0x6b84]        # 0x140013570
   14000c9ec:	lea    rdx,[rip+0x7add]        # 0x1400144d0
   14000c9f3:	mov    QWORD PTR [rsp+0x30],rax
   14000c9f8:	lea    rcx,[rsp+0x30]
   14000c9fd:	call   0x140011d76
   14000ca02:	int3   
   14000ca03:	int3   
   14000ca04:	int3   
   14000ca05:	int3   
   14000ca06:	int3   
   14000ca07:	int3   
   14000ca08:	int3   
   14000ca09:	int3   
   14000ca0a:	int3   
   14000ca0b:	int3   
   14000ca0c:	int3   
   14000ca0d:	int3   
   14000ca0e:	int3   
   14000ca0f:	int3   
   14000ca10:	sub    rsp,0x28
   14000ca14:	lock inc DWORD PTR [rcx+0x18]
   14000ca18:	mov    eax,DWORD PTR [rcx+0x4]
   14000ca1b:	test   eax,eax
   14000ca1d:	jle    0x14000ca31
   14000ca1f:	mov    rcx,QWORD PTR [rcx+0x10]
   14000ca23:	call   QWORD PTR [rip+0x57ff]        # 0x140012228
   14000ca29:	test   eax,eax
   14000ca2b:	je     0x14000ca35
   14000ca2d:	xor    al,al
   14000ca2f:	jmp    0x14000ca37
   14000ca31:	lock dec DWORD PTR [rcx+0x18]
   14000ca35:	mov    al,0x1
   14000ca37:	add    rsp,0x28
   14000ca3b:	ret    
   14000ca3c:	int3   
   14000ca3d:	int3   
   14000ca3e:	int3   
   14000ca3f:	int3   
   14000ca40:	int3   
   14000ca41:	int3   
   14000ca42:	int3   
   14000ca43:	int3   
   14000ca44:	int3   
   14000ca45:	int3   
   14000ca46:	int3   
   14000ca47:	int3   
   14000ca48:	int3   
   14000ca49:	int3   
   14000ca4a:	int3   
   14000ca4b:	int3   
   14000ca4c:	int3   
   14000ca4d:	int3   
   14000ca4e:	int3   
   14000ca4f:	int3   
   14000ca50:	test   edx,edx
   14000ca52:	jle    0x14000ca5a
   14000ca54:	mov    DWORD PTR [rcx+0x8],edx
   14000ca57:	mov    al,0x1
   14000ca59:	ret    
   14000ca5a:	xor    al,al
   14000ca5c:	ret    
   14000ca5d:	int3   
   14000ca5e:	int3   
   14000ca5f:	int3   
   14000ca60:	int3   
   14000ca61:	int3   
   14000ca62:	int3   
   14000ca63:	int3   
   14000ca64:	int3   
   14000ca65:	int3   
   14000ca66:	int3   
   14000ca67:	int3   
   14000ca68:	int3   
   14000ca69:	int3   
   14000ca6a:	int3   
   14000ca6b:	int3   
   14000ca6c:	int3   
   14000ca6d:	int3   
   14000ca6e:	int3   
   14000ca6f:	int3   
   14000ca70:	mov    QWORD PTR [rsp+0x8],rbx
   14000ca75:	push   rdi
   14000ca76:	sub    rsp,0x20
   14000ca7a:	lea    eax,[rdx-0x1]
   14000ca7d:	mov    edi,edx
   14000ca7f:	mov    rbx,rcx
   14000ca82:	cmp    eax,0xff
   14000ca87:	ja     0x14000cabd
   14000ca89:	lock inc DWORD PTR [rcx]
   14000ca8c:	lock inc DWORD PTR [rcx+0x4]
   14000ca90:	mov    eax,DWORD PTR [rcx+0x4]
   14000ca93:	cmp    eax,0x1
   14000ca96:	je     0x14000caa0
   14000ca98:	or     edx,0xffffffff
   14000ca9b:	call   0x14000cad0
   14000caa0:	mov    DWORD PTR [rbx+0xc],edi
   14000caa3:	lock dec DWORD PTR [rbx+0x4]
   14000caa7:	lock dec DWORD PTR [rbx]
   14000caaa:	mov    ecx,DWORD PTR [rbx+0x18]
   14000caad:	test   ecx,ecx
   14000caaf:	jle    0x14000cab9
   14000cab1:	mov    rcx,rbx
   14000cab4:	call   0x14000cc90
   14000cab9:	mov    al,0x1
   14000cabb:	jmp    0x14000cabf
   14000cabd:	xor    al,al
   14000cabf:	mov    rbx,QWORD PTR [rsp+0x30]
   14000cac4:	add    rsp,0x20
   14000cac8:	pop    rdi
   14000cac9:	ret    
   14000caca:	int3   
   14000cacb:	int3   
   14000cacc:	int3   
   14000cacd:	int3   
   14000cace:	int3   
   14000cacf:	int3   
   14000cad0:	mov    QWORD PTR [rsp+0x8],rbx
   14000cad5:	mov    QWORD PTR [rsp+0x10],rsi
   14000cada:	push   rdi
   14000cadb:	sub    rsp,0x50
   14000cadf:	mov    eax,DWORD PTR [rcx+0x4]
   14000cae2:	mov    edi,edx
   14000cae4:	mov    rbx,rcx
   14000cae7:	cmp    eax,0x1
   14000caea:	je     0x14000cb94
   14000caf0:	lock dec DWORD PTR [rbx+0x4]
   14000caf4:	test   edi,edi
   14000caf6:	jg     0x14000cb01
   14000caf8:	cmp    edi,0xffffffff
   14000cafb:	jne    0x14000cb8d
   14000cb01:	mov    eax,DWORD PTR [rip+0xfbc9]        # 0x14001c6d0
   14000cb07:	test   eax,eax
   14000cb09:	jne    0x14000cb20
   14000cb0b:	lea    rcx,[rsp+0x20]
   14000cb10:	call   QWORD PTR [rip+0x572a]        # 0x140012240
   14000cb16:	mov    eax,DWORD PTR [rsp+0x40]
   14000cb1a:	mov    DWORD PTR [rip+0xfbb0],eax        # 0x14001c6d0
   14000cb20:	cmp    eax,0x2
   14000cb23:	jl     0x14000cb3b
   14000cb25:	mov    ecx,DWORD PTR [rbx+0x8]
   14000cb28:	jmp    0x14000cb33
   14000cb2a:	mov    eax,DWORD PTR [rbx+0x4]
   14000cb2d:	test   eax,eax
   14000cb2f:	jle    0x14000cb37
   14000cb31:	dec    ecx
   14000cb33:	test   ecx,ecx
   14000cb35:	jg     0x14000cb2a
   14000cb37:	test   ecx,ecx
   14000cb39:	jne    0x14000cb81
   14000cb3b:	lock dec DWORD PTR [rbx]
   14000cb3e:	cmp    edi,0xffffffff
   14000cb41:	je     0x14000cb6f
   14000cb43:	call   QWORD PTR [rip+0x5737]        # 0x140012280
   14000cb49:	mov    edx,edi
   14000cb4b:	mov    rcx,rbx
   14000cb4e:	mov    esi,eax
   14000cb50:	call   0x14000ca10
   14000cb55:	test   al,al
   14000cb57:	je     0x14000cb90
   14000cb59:	call   QWORD PTR [rip+0x5721]        # 0x140012280
   14000cb5f:	sub    esi,eax
   14000cb61:	lea    eax,[rsi-0x1]
   14000cb64:	add    eax,edi
   14000cb66:	xor    edi,edi
   14000cb68:	test   eax,eax
   14000cb6a:	cmovg  edi,eax
   14000cb6d:	jmp    0x14000cb7e
   14000cb6f:	or     edx,0xffffffff
   14000cb72:	mov    rcx,rbx
   14000cb75:	call   0x14000ca10
   14000cb7a:	test   al,al
   14000cb7c:	je     0x14000cb90
   14000cb7e:	lock inc DWORD PTR [rbx]
   14000cb81:	lock inc DWORD PTR [rbx+0x4]
   14000cb85:	mov    eax,DWORD PTR [rbx+0x4]
   14000cb88:	jmp    0x14000cae7
   14000cb8d:	lock dec DWORD PTR [rbx]
   14000cb90:	xor    al,al
   14000cb92:	jmp    0x14000cb96
   14000cb94:	mov    al,0x1
   14000cb96:	mov    rbx,QWORD PTR [rsp+0x60]
   14000cb9b:	mov    rsi,QWORD PTR [rsp+0x68]
   14000cba0:	add    rsp,0x50
   14000cba4:	pop    rdi
   14000cba5:	ret    
   14000cba6:	int3   
   14000cba7:	int3   
   14000cba8:	int3   
   14000cba9:	int3   
   14000cbaa:	int3   
   14000cbab:	int3   
   14000cbac:	int3   
   14000cbad:	int3   
   14000cbae:	int3   
   14000cbaf:	int3   
   14000cbb0:	mov    QWORD PTR [rsp+0x8],rbx
   14000cbb5:	mov    QWORD PTR [rsp+0x10],rsi
   14000cbba:	push   rdi
   14000cbbb:	sub    rsp,0x50
   14000cbbf:	mov    edi,edx
   14000cbc1:	mov    rbx,rcx
   14000cbc4:	mov    eax,DWORD PTR [rbx]
   14000cbc6:	test   eax,eax
   14000cbc8:	jg     0x14000cbd6
   14000cbca:	mov    eax,DWORD PTR [rbx+0x4]
   14000cbcd:	cmp    eax,DWORD PTR [rbx+0xc]
   14000cbd0:	jle    0x14000cc71
   14000cbd6:	lock dec DWORD PTR [rbx+0x4]
   14000cbda:	test   edi,edi
   14000cbdc:	jg     0x14000cbe7
   14000cbde:	cmp    edi,0xffffffff
   14000cbe1:	jne    0x14000cc75
   14000cbe7:	mov    eax,DWORD PTR [rip+0xfae3]        # 0x14001c6d0
   14000cbed:	test   eax,eax
   14000cbef:	jne    0x14000cc06
   14000cbf1:	lea    rcx,[rsp+0x20]
   14000cbf6:	call   QWORD PTR [rip+0x5644]        # 0x140012240
   14000cbfc:	mov    eax,DWORD PTR [rsp+0x40]
   14000cc00:	mov    DWORD PTR [rip+0xfaca],eax        # 0x14001c6d0
   14000cc06:	cmp    eax,0x2
   14000cc09:	jl     0x14000cc28
   14000cc0b:	mov    ecx,DWORD PTR [rbx+0x8]
   14000cc0e:	jmp    0x14000cc20
   14000cc10:	mov    eax,DWORD PTR [rbx]
   14000cc12:	test   eax,eax
   14000cc14:	jg     0x14000cc1e
   14000cc16:	mov    eax,DWORD PTR [rbx+0x4]
   14000cc19:	cmp    eax,DWORD PTR [rbx+0xc]
   14000cc1c:	jl     0x14000cc24
   14000cc1e:	dec    ecx
   14000cc20:	test   ecx,ecx
   14000cc22:	jg     0x14000cc10
   14000cc24:	test   ecx,ecx
   14000cc26:	jne    0x14000cc68
   14000cc28:	cmp    edi,0xffffffff
   14000cc2b:	je     0x14000cc59
   14000cc2d:	call   QWORD PTR [rip+0x564d]        # 0x140012280
   14000cc33:	mov    edx,edi
   14000cc35:	mov    rcx,rbx
   14000cc38:	mov    esi,eax
   14000cc3a:	call   0x14000ca10
   14000cc3f:	test   al,al
   14000cc41:	je     0x14000cc75
   14000cc43:	call   QWORD PTR [rip+0x5637]        # 0x140012280
   14000cc49:	sub    esi,eax
   14000cc4b:	lea    eax,[rsi-0x1]
   14000cc4e:	add    eax,edi
   14000cc50:	xor    edi,edi
   14000cc52:	test   eax,eax
   14000cc54:	cmovg  edi,eax
   14000cc57:	jmp    0x14000cc68
   14000cc59:	or     edx,0xffffffff
   14000cc5c:	mov    rcx,rbx
   14000cc5f:	call   0x14000ca10
   14000cc64:	test   al,al
   14000cc66:	je     0x14000cc75
   14000cc68:	lock inc DWORD PTR [rbx+0x4]
   14000cc6c:	jmp    0x14000cbc4
   14000cc71:	mov    al,0x1
   14000cc73:	jmp    0x14000cc77
   14000cc75:	xor    al,al
   14000cc77:	mov    rbx,QWORD PTR [rsp+0x60]
   14000cc7c:	mov    rsi,QWORD PTR [rsp+0x68]
   14000cc81:	add    rsp,0x50
   14000cc85:	pop    rdi
   14000cc86:	ret    
   14000cc87:	int3   
   14000cc88:	int3   
   14000cc89:	int3   
   14000cc8a:	int3   
   14000cc8b:	int3   
   14000cc8c:	int3   
   14000cc8d:	int3   
   14000cc8e:	int3   
   14000cc8f:	int3   
   14000cc90:	sub    rsp,0x28
   14000cc94:	xor    eax,eax
   14000cc96:	xchg   DWORD PTR [rcx+0x18],eax
   14000cc99:	test   eax,eax
   14000cc9b:	jle    0x14000ccb2
   14000cc9d:	mov    rcx,QWORD PTR [rcx+0x10]
   14000cca1:	xor    r8d,r8d
   14000cca4:	mov    edx,eax
   14000cca6:	call   QWORD PTR [rip+0x5574]        # 0x140012220
   14000ccac:	test   eax,eax
   14000ccae:	jne    0x14000ccb7
   14000ccb0:	jmp    0x14000ccbc
   14000ccb2:	lock xadd DWORD PTR [rcx+0x18],eax
   14000ccb7:	add    rsp,0x28
   14000ccbb:	ret    
   14000ccbc:	lea    rax,[rip+0x69ed]        # 0x1400136b0
   14000ccc3:	lea    rdx,[rip+0x7806]        # 0x1400144d0
   14000ccca:	mov    QWORD PTR [rsp+0x30],rax
   14000cccf:	lea    rcx,[rsp+0x30]
   14000ccd4:	call   0x140011d76
   14000ccd9:	int3   
   14000ccda:	int3   
   14000ccdb:	int3   
   14000ccdc:	int3   
   14000ccdd:	int3   
   14000ccde:	int3   
   14000ccdf:	int3   
   14000cce0:	sub    rsp,0x28
   14000cce4:	mov    rcx,QWORD PTR [rcx+0x10]
   14000cce8:	call   QWORD PTR [rip+0x552a]        # 0x140012218
   14000ccee:	test   eax,eax
   14000ccf0:	je     0x14000ccf7
   14000ccf2:	add    rsp,0x28
   14000ccf6:	ret    
   14000ccf7:	lea    rax,[rip+0x69f2]        # 0x1400136f0
   14000ccfe:	lea    rdx,[rip+0x77cb]        # 0x1400144d0
   14000cd05:	mov    QWORD PTR [rsp+0x30],rax
   14000cd0a:	lea    rcx,[rsp+0x30]
   14000cd0f:	call   0x140011d76
   14000cd14:	int3   
   14000cd15:	int3   
   14000cd16:	int3   
   14000cd17:	int3   
   14000cd18:	int3   
   14000cd19:	int3   
   14000cd1a:	int3   
   14000cd1b:	int3   
   14000cd1c:	mov    QWORD PTR [rsp+0x8],rbx
   14000cd21:	push   rsi
   14000cd22:	sub    rsp,0x30
   14000cd26:	mov    edx,0x3e8
   14000cd2b:	mov    rbx,rcx
   14000cd2e:	call   QWORD PTR [rip+0x5514]        # 0x140012248
   14000cd34:	test   eax,eax
   14000cd36:	jne    0x14000cd3f
   14000cd38:	xor    eax,eax
   14000cd3a:	jmp    0x14000cdda
   14000cd3f:	mov    rcx,QWORD PTR [rbx]
   14000cd42:	mov    esi,0x1
   14000cd47:	lea    rax,[rcx-0x1]
   14000cd4b:	cmp    rax,0xfffffffffffffffd
   14000cd4f:	ja     0x14000cd54
   14000cd51:	mov    WORD PTR [rcx],si
   14000cd54:	and    QWORD PTR [rbx+0x58],0x0
   14000cd59:	xor    r9d,r9d
   14000cd5c:	and    DWORD PTR [rbx+0x50],0x0
   14000cd60:	xor    edx,edx
   14000cd62:	mov    DWORD PTR [rsp+0x28],0x1f0003
   14000cd6a:	xor    ecx,ecx
   14000cd6c:	and    DWORD PTR [rsp+0x20],0x0
   14000cd71:	mov    r8d,0x7fffffff
   14000cd77:	call   QWORD PTR [rip+0x54b3]        # 0x140012230
   14000cd7d:	mov    QWORD PTR [rbx+0x28],rax
   14000cd81:	test   rax,rax
   14000cd84:	je     0x14000cd38
   14000cd86:	mov    DWORD PTR [rsp+0x28],0x1f0003
   14000cd8e:	xor    r9d,r9d
   14000cd91:	and    DWORD PTR [rsp+0x20],0x0
   14000cd96:	xor    edx,edx
   14000cd98:	xor    ecx,ecx
   14000cd9a:	mov    DWORD PTR [rbx+0x30],0x0
   14000cda1:	mov    r8d,0x7fffffff
   14000cda7:	call   QWORD PTR [rip+0x5483]        # 0x140012230
   14000cdad:	mov    QWORD PTR [rbx+0x38],rax
   14000cdb1:	test   rax,rax
   14000cdb4:	jne    0x14000cdc5
   14000cdb6:	mov    rcx,QWORD PTR [rbx+0x28]
   14000cdba:	call   QWORD PTR [rip+0x5458]        # 0x140012218
   14000cdc0:	jmp    0x14000cd38
   14000cdc5:	and    QWORD PTR [rbx+0x48],0x0
   14000cdca:	mov    eax,esi
   14000cdcc:	mov    DWORD PTR [rbx+0x40],0x0
   14000cdd3:	mov    DWORD PTR [rbx+0x44],0x0
   14000cdda:	mov    rbx,QWORD PTR [rsp+0x40]
   14000cddf:	add    rsp,0x30
   14000cde3:	pop    rsi
   14000cde4:	ret    
   14000cde5:	int3   
   14000cde6:	int3   
   14000cde7:	int3   
   14000cde8:	int3   
   14000cde9:	int3   
   14000cdea:	int3   
   14000cdeb:	int3   
   14000cdec:	mov    QWORD PTR [rsp+0x10],rbx
   14000cdf1:	mov    QWORD PTR [rsp+0x18],rsi
   14000cdf6:	push   rdi
   14000cdf7:	sub    rsp,0x330
   14000cdfe:	mov    rax,QWORD PTR [rip+0xf233]        # 0x14001c038
   14000ce05:	xor    rax,rsp
   14000ce08:	mov    QWORD PTR [rsp+0x320],rax
   14000ce10:	mov    esi,edx
   14000ce12:	mov    rbx,rcx
   14000ce15:	mov    edi,0x1d4c0
   14000ce1a:	call   QWORD PTR [rip+0x54b8]        # 0x1400122d8
   14000ce20:	mov    eax,DWORD PTR [rbx+0x44]
   14000ce23:	test   eax,eax
   14000ce25:	js     0x14000ce2c
   14000ce27:	inc    DWORD PTR [rbx+0x44]
   14000ce2a:	jmp    0x14000ce42
   14000ce2c:	mov    rax,QWORD PTR gs:0x30
   14000ce35:	mov    rcx,QWORD PTR [rax+0x48]
   14000ce39:	cmp    QWORD PTR [rbx+0x48],rcx
   14000ce3d:	jne    0x14000ce50
   14000ce3f:	dec    DWORD PTR [rbx+0x44]
   14000ce42:	mov    rcx,rbx
   14000ce45:	call   QWORD PTR [rip+0x5495]        # 0x1400122e0
   14000ce4b:	jmp    0x14000cf0c
   14000ce50:	mov    rcx,rbx
   14000ce53:	test   esi,esi
   14000ce55:	jne    0x14000ce64
   14000ce57:	call   QWORD PTR [rip+0x5483]        # 0x1400122e0
   14000ce5d:	xor    eax,eax
   14000ce5f:	jmp    0x14000cf11
   14000ce64:	inc    DWORD PTR [rbx+0x30]
   14000ce67:	call   QWORD PTR [rip+0x5473]        # 0x1400122e0
   14000ce6d:	mov    esi,0x100
   14000ce72:	test   BYTE PTR [rbx+0x50],0x1
   14000ce76:	mov    eax,0xffffffff
   14000ce7b:	mov    rcx,QWORD PTR [rbx+0x28]
   14000ce7f:	cmovne edi,eax
   14000ce82:	mov    edx,edi
   14000ce84:	call   QWORD PTR [rip+0x539e]        # 0x140012228
   14000ce8a:	cmp    eax,0x102
   14000ce8f:	jne    0x14000cedf
   14000ce91:	mov    r9,rbx
   14000ce94:	lea    r8,[rip+0x68b5]        # 0x140013750
   14000ce9b:	mov    rdx,rsi
   14000ce9e:	lea    rcx,[rsp+0x20]
   14000cea3:	call   QWORD PTR [rip+0x556f]        # 0x140012418
   14000cea9:	lea    rcx,[rsp+0x20]
   14000ceae:	call   QWORD PTR [rip+0x535c]        # 0x140012210
   14000ceb4:	mov    r9,rbx
   14000ceb7:	lea    r8,[rip+0x68c2]        # 0x140013780
   14000cebe:	mov    rdx,rsi
   14000cec1:	lea    rcx,[rsp+0x120]
   14000cec9:	call   QWORD PTR [rip+0x5549]        # 0x140012418
   14000cecf:	lea    rcx,[rsp+0x120]
   14000ced7:	call   QWORD PTR [rip+0x5333]        # 0x140012210
   14000cedd:	jmp    0x14000ce72
   14000cedf:	test   eax,eax
   14000cee1:	je     0x14000cf0c
   14000cee3:	mov    r9,rbx
   14000cee6:	lea    r8,[rip+0x68c3]        # 0x1400137b0
   14000ceed:	mov    rdx,rsi
   14000cef0:	lea    rcx,[rsp+0x220]
   14000cef8:	call   QWORD PTR [rip+0x551a]        # 0x140012418
   14000cefe:	lea    rcx,[rsp+0x220]
   14000cf06:	call   QWORD PTR [rip+0x5304]        # 0x140012210
   14000cf0c:	mov    eax,0x1
   14000cf11:	mov    rcx,QWORD PTR [rsp+0x320]
   14000cf19:	xor    rcx,rsp
   14000cf1c:	call   0x140011800
   14000cf21:	lea    r11,[rsp+0x330]
   14000cf29:	mov    rbx,QWORD PTR [r11+0x18]
   14000cf2d:	mov    rsi,QWORD PTR [r11+0x20]
   14000cf31:	mov    rsp,r11
   14000cf34:	pop    rdi
   14000cf35:	ret    
   14000cf36:	int3   
   14000cf37:	int3   
   14000cf38:	int3   
   14000cf39:	int3   
   14000cf3a:	int3   
   14000cf3b:	int3   
   14000cf3c:	mov    QWORD PTR [rsp+0x10],rbx
   14000cf41:	mov    QWORD PTR [rsp+0x18],rbp
   14000cf46:	push   rsi
   14000cf47:	push   rdi
   14000cf48:	push   r15
   14000cf4a:	sub    rsp,0x330
   14000cf51:	mov    rax,QWORD PTR [rip+0xf0e0]        # 0x14001c038
   14000cf58:	xor    rax,rsp
   14000cf5b:	mov    QWORD PTR [rsp+0x320],rax
   14000cf63:	mov    ebp,edx
   14000cf65:	mov    rbx,rcx
   14000cf68:	mov    esi,0x1d4c0
   14000cf6d:	call   QWORD PTR [rip+0x5365]        # 0x1400122d8
   14000cf73:	mov    eax,DWORD PTR [rbx+0x44]
   14000cf76:	xor    edi,edi
   14000cf78:	test   eax,eax
   14000cf7a:	je     0x14000d071
   14000cf80:	mov    r15d,0x100
   14000cf86:	mov    eax,DWORD PTR [rbx+0x44]
   14000cf89:	cmp    eax,0xffffffff
   14000cf8c:	jne    0x14000cf98
   14000cf8e:	cmp    QWORD PTR [rbx+0x48],rdi
   14000cf92:	je     0x14000d071
   14000cf98:	mov    rax,QWORD PTR gs:0x30
   14000cfa1:	mov    rcx,QWORD PTR [rax+0x48]
   14000cfa5:	cmp    QWORD PTR [rbx+0x48],rcx
   14000cfa9:	je     0x14000d0c1
   14000cfaf:	test   ebp,ebp
   14000cfb1:	je     0x14000d08e
   14000cfb7:	inc    DWORD PTR [rbx+0x40]
   14000cfba:	mov    rcx,rbx
   14000cfbd:	call   QWORD PTR [rip+0x531d]        # 0x1400122e0
   14000cfc3:	test   BYTE PTR [rbx+0x50],0x1
   14000cfc7:	mov    eax,0xffffffff
   14000cfcc:	mov    rcx,QWORD PTR [rbx+0x38]
   14000cfd0:	cmovne esi,eax
   14000cfd3:	mov    edx,esi
   14000cfd5:	call   QWORD PTR [rip+0x524d]        # 0x140012228
   14000cfdb:	cmp    eax,0x102
   14000cfe0:	jne    0x14000d030
   14000cfe2:	mov    r9,rbx
   14000cfe5:	lea    r8,[rip+0x6804]        # 0x1400137f0
   14000cfec:	mov    rdx,r15
   14000cfef:	lea    rcx,[rsp+0x20]
   14000cff4:	call   QWORD PTR [rip+0x541e]        # 0x140012418
   14000cffa:	lea    rcx,[rsp+0x20]
   14000cfff:	call   QWORD PTR [rip+0x520b]        # 0x140012210
   14000d005:	mov    r9,rbx
   14000d008:	lea    r8,[rip+0x6819]        # 0x140013828
   14000d00f:	mov    rdx,r15
   14000d012:	lea    rcx,[rsp+0x120]
   14000d01a:	call   QWORD PTR [rip+0x53f8]        # 0x140012418
   14000d020:	lea    rcx,[rsp+0x120]
   14000d028:	call   QWORD PTR [rip+0x51e2]        # 0x140012210
   14000d02e:	jmp    0x14000cfc3
   14000d030:	test   eax,eax
   14000d032:	je     0x14000d05d
   14000d034:	mov    r9,rbx
   14000d037:	lea    r8,[rip+0x6822]        # 0x140013860
   14000d03e:	mov    rdx,r15
   14000d041:	lea    rcx,[rsp+0x220]
   14000d049:	call   QWORD PTR [rip+0x53c9]        # 0x140012418
   14000d04f:	lea    rcx,[rsp+0x220]
   14000d057:	call   QWORD PTR [rip+0x51b3]        # 0x140012210
   14000d05d:	mov    rcx,rbx
   14000d060:	call   QWORD PTR [rip+0x5272]        # 0x1400122d8
   14000d066:	mov    eax,DWORD PTR [rbx+0x44]
   14000d069:	test   eax,eax
   14000d06b:	jne    0x14000cf86
   14000d071:	mov    DWORD PTR [rbx+0x44],0xffffffff
   14000d078:	mov    rax,QWORD PTR gs:0x30
   14000d081:	mov    rdx,QWORD PTR [rax+0x48]
   14000d085:	mov    QWORD PTR [rbx+0x48],rdx
   14000d089:	mov    edi,0x1
   14000d08e:	mov    rcx,rbx
   14000d091:	call   QWORD PTR [rip+0x5249]        # 0x1400122e0
   14000d097:	mov    eax,edi
   14000d099:	mov    rcx,QWORD PTR [rsp+0x320]
   14000d0a1:	xor    rcx,rsp
   14000d0a4:	call   0x140011800
   14000d0a9:	lea    r11,[rsp+0x330]
   14000d0b1:	mov    rbx,QWORD PTR [r11+0x28]
   14000d0b5:	mov    rbp,QWORD PTR [r11+0x30]
   14000d0b9:	mov    rsp,r11
   14000d0bc:	pop    r15
   14000d0be:	pop    rdi
   14000d0bf:	pop    rsi
   14000d0c0:	ret    
   14000d0c1:	dec    DWORD PTR [rbx+0x44]
   14000d0c4:	jmp    0x14000d089
   14000d0c6:	int3   
   14000d0c7:	int3   
   14000d0c8:	int3   
   14000d0c9:	int3   
   14000d0ca:	int3   
   14000d0cb:	int3   
   14000d0cc:	mov    QWORD PTR [rsp+0x10],rbx
   14000d0d1:	push   rdi
   14000d0d2:	sub    rsp,0x20
   14000d0d6:	mov    rbx,rcx
   14000d0d9:	call   QWORD PTR [rip+0x51f9]        # 0x1400122d8
   14000d0df:	mov    eax,DWORD PTR [rbx+0x44]
   14000d0e2:	xor    edi,edi
   14000d0e4:	test   eax,eax
   14000d0e6:	jle    0x14000d12b
   14000d0e8:	sub    DWORD PTR [rbx+0x44],0x1
   14000d0ec:	mov    eax,DWORD PTR [rbx+0x44]
   14000d0ef:	jne    0x14000d16c
   14000d0f1:	mov    eax,DWORD PTR [rbx+0x40]
   14000d0f4:	test   eax,eax
   14000d0f6:	je     0x14000d16c
   14000d0f8:	mov    QWORD PTR [rbx+0x48],rdi
   14000d0fc:	mov    DWORD PTR [rbx+0x44],0xffffffff
   14000d103:	lea    r8,[rsp+0x30]
   14000d108:	dec    DWORD PTR [rbx+0x40]
   14000d10b:	mov    edx,0x1
   14000d110:	mov    rcx,QWORD PTR [rbx+0x38]
   14000d114:	call   QWORD PTR [rip+0x5106]        # 0x140012220
   14000d11a:	test   eax,eax
   14000d11c:	jne    0x14000d16c
   14000d11e:	mov    rcx,rbx
   14000d121:	call   QWORD PTR [rip+0x51b9]        # 0x1400122e0
   14000d127:	xor    eax,eax
   14000d129:	jmp    0x14000d17c
   14000d12b:	mov    eax,DWORD PTR [rbx+0x44]
   14000d12e:	test   eax,eax
   14000d130:	jns    0x14000d16c
   14000d132:	add    DWORD PTR [rbx+0x44],0x1
   14000d136:	mov    eax,DWORD PTR [rbx+0x44]
   14000d139:	jne    0x14000d16c
   14000d13b:	mov    eax,DWORD PTR [rbx+0x40]
   14000d13e:	mov    QWORD PTR [rbx+0x48],rdi
   14000d142:	test   eax,eax
   14000d144:	jne    0x14000d0fc
   14000d146:	mov    eax,DWORD PTR [rbx+0x30]
   14000d149:	test   eax,eax
   14000d14b:	je     0x14000d16c
   14000d14d:	mov    eax,DWORD PTR [rbx+0x30]
   14000d150:	lea    r8,[rsp+0x30]
   14000d155:	mov    DWORD PTR [rbx+0x44],eax
   14000d158:	mov    DWORD PTR [rbx+0x30],edi
   14000d15b:	mov    edx,DWORD PTR [rbx+0x44]
   14000d15e:	mov    rcx,QWORD PTR [rbx+0x28]
   14000d162:	call   QWORD PTR [rip+0x50b8]        # 0x140012220
   14000d168:	test   eax,eax
   14000d16a:	je     0x14000d171
   14000d16c:	mov    edi,0x1
   14000d171:	mov    rcx,rbx
   14000d174:	call   QWORD PTR [rip+0x5166]        # 0x1400122e0
   14000d17a:	mov    eax,edi
   14000d17c:	mov    rbx,QWORD PTR [rsp+0x38]
   14000d181:	add    rsp,0x20
   14000d185:	pop    rdi
   14000d186:	ret    
   14000d187:	int3   
   14000d188:	int3   
   14000d189:	int3   
   14000d18a:	int3   
   14000d18b:	int3   
   14000d18c:	int3   
   14000d18d:	int3   
   14000d18e:	int3   
   14000d18f:	int3   
   14000d190:	mov    QWORD PTR [rsp+0x10],rbx
   14000d195:	mov    QWORD PTR [rsp+0x18],rbp
   14000d19a:	mov    QWORD PTR [rsp+0x20],rsi
   14000d19f:	push   rdi
   14000d1a0:	sub    rsp,0x330
   14000d1a7:	mov    rax,QWORD PTR [rip+0xee8a]        # 0x14001c038
   14000d1ae:	xor    rax,rsp
   14000d1b1:	mov    QWORD PTR [rsp+0x320],rax
   14000d1b9:	mov    rbx,rcx
   14000d1bc:	mov    edi,0x1d4c0
   14000d1c1:	call   QWORD PTR [rip+0x5111]        # 0x1400122d8
   14000d1c7:	mov    edx,DWORD PTR [rbx+0x44]
   14000d1ca:	mov    esi,0x1
   14000d1cf:	cmp    edx,esi
   14000d1d1:	jne    0x14000d1fb
   14000d1d3:	mov    DWORD PTR [rbx+0x44],0xffffffff
   14000d1da:	mov    rdx,QWORD PTR gs:0x30
   14000d1e3:	mov    r8,QWORD PTR [rdx+0x48]
   14000d1e7:	mov    QWORD PTR [rbx+0x48],r8
   14000d1eb:	mov    rcx,rbx
   14000d1ee:	call   QWORD PTR [rip+0x50ec]        # 0x1400122e0
   14000d1f4:	mov    eax,esi
   14000d1f6:	jmp    0x14000d32b
   14000d1fb:	mov    eax,DWORD PTR [rbx+0x44]
   14000d1fe:	test   eax,eax
   14000d200:	jns    0x14000d215
   14000d202:	mov    rax,QWORD PTR gs:0x30
   14000d20b:	mov    rcx,QWORD PTR [rax+0x48]
   14000d20f:	cmp    QWORD PTR [rbx+0x48],rcx
   14000d213:	je     0x14000d1eb
   14000d215:	mov    eax,DWORD PTR [rbx+0x44]
   14000d218:	cmp    eax,esi
   14000d21a:	jle    0x14000d329
   14000d220:	dec    DWORD PTR [rbx+0x44]
   14000d223:	mov    ebp,0x100
   14000d228:	add    DWORD PTR [rbx+0x40],esi
   14000d22b:	mov    rcx,rbx
   14000d22e:	call   QWORD PTR [rip+0x50ac]        # 0x1400122e0
   14000d234:	test   BYTE PTR [rbx+0x50],sil
   14000d238:	mov    eax,0xffffffff
   14000d23d:	mov    rcx,QWORD PTR [rbx+0x38]
   14000d241:	cmovne edi,eax
   14000d244:	mov    edx,edi
   14000d246:	call   QWORD PTR [rip+0x4fdc]        # 0x140012228
   14000d24c:	cmp    eax,0x102
   14000d251:	jne    0x14000d2a1
   14000d253:	mov    r9,rbx
   14000d256:	lea    r8,[rip+0x664b]        # 0x1400138a8
   14000d25d:	mov    rdx,rbp
   14000d260:	lea    rcx,[rsp+0x20]
   14000d265:	call   QWORD PTR [rip+0x51ad]        # 0x140012418
   14000d26b:	lea    rcx,[rsp+0x20]
   14000d270:	call   QWORD PTR [rip+0x4f9a]        # 0x140012210
   14000d276:	mov    r9,rbx
   14000d279:	lea    r8,[rip+0x6660]        # 0x1400138e0
   14000d280:	mov    rdx,rbp
   14000d283:	lea    rcx,[rsp+0x120]
   14000d28b:	call   QWORD PTR [rip+0x5187]        # 0x140012418
   14000d291:	lea    rcx,[rsp+0x120]
   14000d299:	call   QWORD PTR [rip+0x4f71]        # 0x140012210
   14000d29f:	jmp    0x14000d234
   14000d2a1:	test   eax,eax
   14000d2a3:	jne    0x14000d300
   14000d2a5:	mov    rcx,rbx
   14000d2a8:	call   QWORD PTR [rip+0x502a]        # 0x1400122d8
   14000d2ae:	mov    eax,DWORD PTR [rbx+0x44]
   14000d2b1:	test   eax,eax
   14000d2b3:	je     0x14000d2e3
   14000d2b5:	mov    eax,DWORD PTR [rbx+0x44]
   14000d2b8:	cmp    eax,0xffffffff
   14000d2bb:	jne    0x14000d2c4
   14000d2bd:	cmp    QWORD PTR [rbx+0x48],0x0
   14000d2c2:	je     0x14000d2e3
   14000d2c4:	mov    rax,QWORD PTR gs:0x30
   14000d2cd:	mov    rcx,QWORD PTR [rax+0x48]
   14000d2d1:	cmp    QWORD PTR [rbx+0x48],rcx
   14000d2d5:	jne    0x14000d228
   14000d2db:	dec    DWORD PTR [rbx+0x44]
   14000d2de:	jmp    0x14000d1eb
   14000d2e3:	mov    DWORD PTR [rbx+0x44],0xffffffff
   14000d2ea:	mov    rax,QWORD PTR gs:0x30
   14000d2f3:	mov    rcx,QWORD PTR [rax+0x48]
   14000d2f7:	mov    QWORD PTR [rbx+0x48],rcx
   14000d2fb:	jmp    0x14000d1eb
   14000d300:	mov    r9,rbx
   14000d303:	lea    r8,[rip+0x6616]        # 0x140013920
   14000d30a:	mov    rdx,rbp
   14000d30d:	lea    rcx,[rsp+0x220]
   14000d315:	call   QWORD PTR [rip+0x50fd]        # 0x140012418
   14000d31b:	lea    rcx,[rsp+0x220]
   14000d323:	call   QWORD PTR [rip+0x4ee7]        # 0x140012210
   14000d329:	xor    eax,eax
   14000d32b:	mov    rcx,QWORD PTR [rsp+0x320]
   14000d333:	xor    rcx,rsp
   14000d336:	call   0x140011800
   14000d33b:	lea    r11,[rsp+0x330]
   14000d343:	mov    rbx,QWORD PTR [r11+0x18]
   14000d347:	mov    rbp,QWORD PTR [r11+0x20]
   14000d34b:	mov    rsi,QWORD PTR [r11+0x28]
   14000d34f:	mov    rsp,r11
   14000d352:	pop    rdi
   14000d353:	ret    
   14000d354:	int3   
   14000d355:	int3   
   14000d356:	int3   
   14000d357:	int3   
   14000d358:	int3   
   14000d359:	int3   
   14000d35a:	int3   
   14000d35b:	int3   
   14000d35c:	rex push rbx
   14000d35e:	sub    rsp,0x20
   14000d362:	mov    rbx,rcx
   14000d365:	call   QWORD PTR [rip+0x4f6d]        # 0x1400122d8
   14000d36b:	mov    eax,DWORD PTR [rbx+0x44]
   14000d36e:	cmp    eax,0xffffffff
   14000d371:	jne    0x14000d3a6
   14000d373:	and    QWORD PTR [rbx+0x48],0x0
   14000d378:	mov    eax,DWORD PTR [rbx+0x30]
   14000d37b:	test   eax,eax
   14000d37d:	je     0x14000d3ae
   14000d37f:	mov    eax,DWORD PTR [rbx+0x30]
   14000d382:	lea    r8,[rsp+0x30]
   14000d387:	inc    eax
   14000d389:	mov    DWORD PTR [rbx+0x44],eax
   14000d38c:	mov    DWORD PTR [rbx+0x30],0x0
   14000d393:	mov    edx,DWORD PTR [rbx+0x44]
   14000d396:	mov    rcx,QWORD PTR [rbx+0x28]
   14000d39a:	dec    edx
   14000d39c:	call   QWORD PTR [rip+0x4e7e]        # 0x140012220
   14000d3a2:	test   eax,eax
   14000d3a4:	jne    0x14000d3b5
   14000d3a6:	xor    eax,eax
   14000d3a8:	add    rsp,0x20
   14000d3ac:	pop    rbx
   14000d3ad:	ret    
   14000d3ae:	mov    DWORD PTR [rbx+0x44],0x1
   14000d3b5:	mov    rcx,rbx
   14000d3b8:	call   QWORD PTR [rip+0x4f22]        # 0x1400122e0
   14000d3be:	mov    eax,0x1
   14000d3c3:	jmp    0x14000d3a8
   14000d3c5:	int3   
   14000d3c6:	int3   
   14000d3c7:	int3   
   14000d3c8:	int3   
   14000d3c9:	int3   
   14000d3ca:	int3   
   14000d3cb:	int3   
   14000d3cc:	int3   
   14000d3cd:	int3   
   14000d3ce:	int3   
   14000d3cf:	int3   
   14000d3d0:	mov    QWORD PTR [rsp+0x8],rbx
   14000d3d5:	mov    QWORD PTR [rsp+0x10],rbp
   14000d3da:	mov    QWORD PTR [rsp+0x18],rsi
   14000d3df:	push   rdi
   14000d3e0:	push   r14
   14000d3e2:	push   r15
   14000d3e4:	sub    rsp,0x20
   14000d3e8:	mov    edi,r9d
   14000d3eb:	mov    r15,rdx
   14000d3ee:	mov    esi,r8d
   14000d3f1:	mov    rbx,rcx
   14000d3f4:	mov    ecx,DWORD PTR [rcx+0x28]
   14000d3f7:	lea    rdx,[rdi+rsi*1]
   14000d3fb:	lea    rax,[rdx+0x1]
   14000d3ff:	cmp    rcx,rax
   14000d402:	jae    0x14000d452
   14000d404:	cmp    BYTE PTR [rsp+0x60],0x0
   14000d409:	je     0x14000d411
   14000d40b:	sub    rdx,0xffffffffffffff80
   14000d40f:	jmp    0x14000d414
   14000d411:	inc    rdx
   14000d414:	mov    eax,0xffffffff
   14000d419:	cmp    rdx,rax
   14000d41c:	jbe    0x14000d42b
   14000d41e:	mov    ecx,0x216
   14000d423:	call   QWORD PTR [rip+0x4ea7]        # 0x1400122d0
   14000d429:	jmp    0x14000d474
   14000d42b:	cmp    edx,ecx
   14000d42d:	jbe    0x14000d452
   14000d42f:	mov    rcx,rbx
   14000d432:	call   0x14000ea50
   14000d437:	test   al,al
   14000d439:	jne    0x14000d452
   14000d43b:	call   QWORD PTR [rip+0x4eb7]        # 0x1400122f8
   14000d441:	mov    ecx,eax
   14000d443:	movzx  eax,ax
   14000d446:	or     eax,0x80070000
   14000d44b:	test   ecx,ecx
   14000d44d:	cmovle eax,ecx
   14000d450:	jmp    0x14000d476
   14000d452:	mov    rcx,QWORD PTR [rbx+0x20]
   14000d456:	mov    r8,rsi
   14000d459:	add    rcx,rdi
   14000d45c:	mov    rdx,r15
   14000d45f:	call   0x140011e16
   14000d464:	lea    eax,[rsi+rdi*1]
   14000d467:	mov    DWORD PTR [rbx+0x30],eax
   14000d46a:	mov    ecx,eax
   14000d46c:	mov    rax,QWORD PTR [rbx+0x20]
   14000d470:	mov    BYTE PTR [rcx+rax*1],0x0
   14000d474:	xor    eax,eax
   14000d476:	mov    rbx,QWORD PTR [rsp+0x40]
   14000d47b:	mov    rbp,QWORD PTR [rsp+0x48]
   14000d480:	mov    rsi,QWORD PTR [rsp+0x50]
   14000d485:	add    rsp,0x20
   14000d489:	pop    r15
   14000d48b:	pop    r14
   14000d48d:	pop    rdi
   14000d48e:	ret    
   14000d48f:	int3   
   14000d490:	int3   
   14000d491:	int3   
   14000d492:	int3   
   14000d493:	int3   
   14000d494:	int3   
   14000d495:	int3   
   14000d496:	int3   
   14000d497:	int3   
   14000d498:	int3   
   14000d499:	int3   
   14000d49a:	int3   
   14000d49b:	int3   
   14000d49c:	int3   
   14000d49d:	int3   
   14000d49e:	int3   
   14000d49f:	int3   
   14000d4a0:	rex push rbx
   14000d4a2:	push   rbp
   14000d4a3:	push   rsi
   14000d4a4:	push   rdi
   14000d4a5:	sub    rsp,0xf8
   14000d4ac:	mov    rax,QWORD PTR [rip+0xeb85]        # 0x14001c038
   14000d4b3:	xor    rax,rsp
   14000d4b6:	mov    QWORD PTR [rsp+0xe0],rax
   14000d4be:	mov    edi,r9d
   14000d4c1:	mov    esi,r8d
   14000d4c4:	mov    rbp,rdx
   14000d4c7:	mov    rbx,rcx
   14000d4ca:	test   r8d,r8d
   14000d4cd:	jne    0x14000d4d6
   14000d4cf:	xor    eax,eax
   14000d4d1:	jmp    0x14000d5ab
   14000d4d6:	test   r9d,r9d
   14000d4d9:	jne    0x14000d512
   14000d4db:	mov    rdx,rcx
   14000d4de:	mov    DWORD PTR [rsp+0x20],0x400
   14000d4e6:	mov    rcx,rbp
   14000d4e9:	call   0x14001132c
   14000d4ee:	cmp    eax,0xffffffff
   14000d4f1:	jne    0x14000d50d
   14000d4f3:	call   QWORD PTR [rip+0x4dff]        # 0x1400122f8
   14000d4f9:	mov    ecx,eax
   14000d4fb:	movzx  eax,ax
   14000d4fe:	or     eax,0x80070000
   14000d503:	test   ecx,ecx
   14000d505:	cmovle eax,ecx
   14000d508:	jmp    0x14000d5ab
   14000d50d:	mov    DWORD PTR [rbx+0x30],eax
   14000d510:	jmp    0x14000d4cf
   14000d512:	xor    edx,edx
   14000d514:	lea    rcx,[rsp+0x60]
   14000d519:	mov    r8d,0x80
   14000d51f:	call   0x140011e22
   14000d524:	lea    rax,[rsp+0x60]
   14000d529:	mov    BYTE PTR [rsp+0x60],0x0
   14000d52e:	xor    r9d,r9d
   14000d531:	mov    QWORD PTR [rsp+0x50],rax
   14000d536:	mov    r8d,esi
   14000d539:	mov    DWORD PTR [rsp+0x58],0x80
   14000d541:	lea    rdx,[rsp+0x30]
   14000d546:	mov    WORD PTR [rsp+0x5c],0x100
   14000d54d:	mov    rcx,rbp
   14000d550:	mov    DWORD PTR [rsp+0x20],0x400
   14000d558:	call   0x14001132c
   14000d55d:	mov    r8d,eax
   14000d560:	cmp    eax,0xffffffff
   14000d563:	jne    0x14000d57b
   14000d565:	call   QWORD PTR [rip+0x4d8d]        # 0x1400122f8
   14000d56b:	movzx  ebx,ax
   14000d56e:	or     ebx,0x80070000
   14000d574:	test   eax,eax
   14000d576:	cmovle ebx,eax
   14000d579:	jmp    0x14000d598
   14000d57b:	mov    al,BYTE PTR [rsp+0x140]
   14000d582:	mov    r9d,edi
   14000d585:	mov    rdx,QWORD PTR [rsp+0x50]
   14000d58a:	mov    rcx,rbx
   14000d58d:	mov    BYTE PTR [rsp+0x20],al
   14000d591:	call   0x14000d3d0
   14000d596:	mov    ebx,eax
   14000d598:	cmp    BYTE PTR [rsp+0x5c],0x0
   14000d59d:	je     0x14000d5a9
   14000d59f:	lea    rcx,[rsp+0x30]
   14000d5a4:	call   0x14000eb30
   14000d5a9:	mov    eax,ebx
   14000d5ab:	mov    rcx,QWORD PTR [rsp+0xe0]
   14000d5b3:	xor    rcx,rsp
   14000d5b6:	call   0x140011800
   14000d5bb:	add    rsp,0xf8
   14000d5c2:	pop    rdi
   14000d5c3:	pop    rsi
   14000d5c4:	pop    rbp
   14000d5c5:	pop    rbx
   14000d5c6:	ret    
   14000d5c7:	int3   
   14000d5c8:	int3   
   14000d5c9:	int3   
   14000d5ca:	int3   
   14000d5cb:	int3   
   14000d5cc:	int3   
   14000d5cd:	int3   
   14000d5ce:	int3   
   14000d5cf:	int3   
   14000d5d0:	rex push rbx
   14000d5d2:	push   rbp
   14000d5d3:	push   rsi
   14000d5d4:	push   rdi
   14000d5d5:	sub    rsp,0xf8
   14000d5dc:	mov    rax,QWORD PTR [rip+0xea55]        # 0x14001c038
   14000d5e3:	xor    rax,rsp
   14000d5e6:	mov    QWORD PTR [rsp+0xe0],rax
   14000d5ee:	mov    edi,r9d
   14000d5f1:	mov    esi,r8d
   14000d5f4:	mov    rbp,rdx
   14000d5f7:	mov    rbx,rcx
   14000d5fa:	test   r8d,r8d
   14000d5fd:	jne    0x14000d606
   14000d5ff:	xor    eax,eax
   14000d601:	jmp    0x14000d6d5
   14000d606:	test   r9d,r9d
   14000d609:	jne    0x14000d63f
   14000d60b:	and    DWORD PTR [rsp+0x20],r9d
   14000d610:	mov    rdx,rcx
   14000d613:	mov    rcx,rbp
   14000d616:	call   0x14001132c
   14000d61b:	cmp    eax,0xffffffff
   14000d61e:	jne    0x14000d63a
   14000d620:	call   QWORD PTR [rip+0x4cd2]        # 0x1400122f8
   14000d626:	mov    ecx,eax
   14000d628:	movzx  eax,ax
   14000d62b:	or     eax,0x80070000
   14000d630:	test   ecx,ecx
   14000d632:	cmovle eax,ecx
   14000d635:	jmp    0x14000d6d5
   14000d63a:	mov    DWORD PTR [rbx+0x30],eax
   14000d63d:	jmp    0x14000d5ff
   14000d63f:	xor    edx,edx
   14000d641:	lea    rcx,[rsp+0x60]
   14000d646:	mov    r8d,0x80
   14000d64c:	call   0x140011e22
   14000d651:	and    DWORD PTR [rsp+0x20],0x0
   14000d656:	lea    rax,[rsp+0x60]
   14000d65b:	xor    r9d,r9d
   14000d65e:	mov    QWORD PTR [rsp+0x50],rax
   14000d663:	mov    r8d,esi
   14000d666:	mov    BYTE PTR [rsp+0x60],0x0
   14000d66b:	lea    rdx,[rsp+0x30]
   14000d670:	mov    DWORD PTR [rsp+0x58],0x80
   14000d678:	mov    rcx,rbp
   14000d67b:	mov    WORD PTR [rsp+0x5c],0x100
   14000d682:	call   0x14001132c
   14000d687:	mov    r8d,eax
   14000d68a:	cmp    eax,0xffffffff
   14000d68d:	jne    0x14000d6a5
   14000d68f:	call   QWORD PTR [rip+0x4c63]        # 0x1400122f8
   14000d695:	movzx  ebx,ax
   14000d698:	or     ebx,0x80070000
   14000d69e:	test   eax,eax
   14000d6a0:	cmovle ebx,eax
   14000d6a3:	jmp    0x14000d6c2
   14000d6a5:	mov    al,BYTE PTR [rsp+0x140]
   14000d6ac:	mov    r9d,edi
   14000d6af:	mov    rdx,QWORD PTR [rsp+0x50]
   14000d6b4:	mov    rcx,rbx
   14000d6b7:	mov    BYTE PTR [rsp+0x20],al
   14000d6bb:	call   0x14000d3d0
   14000d6c0:	mov    ebx,eax
   14000d6c2:	cmp    BYTE PTR [rsp+0x5c],0x0
   14000d6c7:	je     0x14000d6d3
   14000d6c9:	lea    rcx,[rsp+0x30]
   14000d6ce:	call   0x14000eb30
   14000d6d3:	mov    eax,ebx
   14000d6d5:	mov    rcx,QWORD PTR [rsp+0xe0]
   14000d6dd:	xor    rcx,rsp
   14000d6e0:	call   0x140011800
   14000d6e5:	add    rsp,0xf8
   14000d6ec:	pop    rdi
   14000d6ed:	pop    rsi
   14000d6ee:	pop    rbp
   14000d6ef:	pop    rbx
   14000d6f0:	ret    
   14000d6f1:	int3   
   14000d6f2:	int3   
   14000d6f3:	int3   
   14000d6f4:	int3   
   14000d6f5:	int3   
   14000d6f6:	int3   
   14000d6f7:	int3   
   14000d6f8:	int3   
   14000d6f9:	int3   
   14000d6fa:	int3   
   14000d6fb:	int3   
   14000d6fc:	int3   
   14000d6fd:	int3   
   14000d6fe:	int3   
   14000d6ff:	int3   
   14000d700:	mov    QWORD PTR [rsp+0x8],rbx
   14000d705:	mov    QWORD PTR [rsp+0x10],rbp
   14000d70a:	mov    QWORD PTR [rsp+0x18],rsi
   14000d70f:	push   rdi
   14000d710:	push   r14
   14000d712:	push   r15
   14000d714:	sub    rsp,0x20
   14000d718:	mov    r15d,r9d
   14000d71b:	mov    rdi,rdx
   14000d71e:	mov    esi,r8d
   14000d721:	mov    rbx,rcx
   14000d724:	mov    ecx,DWORD PTR [rcx+0x28]
   14000d727:	mov    ebp,r8d
   14000d72a:	lea    rdx,[r15+rsi*1]
   14000d72e:	lea    rax,[rdx+0x1]
   14000d732:	cmp    rcx,rax
   14000d735:	jae    0x14000d77f
   14000d737:	cmp    BYTE PTR [rsp+0x60],0x0
   14000d73c:	je     0x14000d744
   14000d73e:	sub    rdx,0xffffffffffffff80
   14000d742:	jmp    0x14000d747
   14000d744:	inc    rdx
   14000d747:	mov    eax,0xffffffff
   14000d74c:	cmp    rdx,rax
   14000d74f:	jbe    0x14000d758
   14000d751:	mov    eax,0x80070216
   14000d756:	jmp    0x14000d7ae
   14000d758:	cmp    edx,ecx
   14000d75a:	jbe    0x14000d77f
   14000d75c:	mov    rcx,rbx
   14000d75f:	call   0x14000ea50
   14000d764:	test   al,al
   14000d766:	jne    0x14000d77f
   14000d768:	call   QWORD PTR [rip+0x4b8a]        # 0x1400122f8
   14000d76e:	mov    ecx,eax
   14000d770:	movzx  eax,ax
   14000d773:	or     eax,0x80070000
   14000d778:	test   ecx,ecx
   14000d77a:	cmovle eax,ecx
   14000d77d:	jmp    0x14000d7ae
   14000d77f:	mov    rcx,QWORD PTR [rbx+0x20]
   14000d783:	add    rcx,r15
   14000d786:	test   esi,esi
   14000d788:	je     0x14000d79b
   14000d78a:	mov    al,BYTE PTR [rdi]
   14000d78c:	lea    rdi,[rdi+0x2]
   14000d790:	mov    BYTE PTR [rcx],al
   14000d792:	inc    rcx
   14000d795:	sub    rbp,0x1
   14000d799:	jne    0x14000d78a
   14000d79b:	lea    eax,[rsi+r15*1]
   14000d79f:	mov    DWORD PTR [rbx+0x30],eax
   14000d7a2:	mov    ecx,eax
   14000d7a4:	mov    rax,QWORD PTR [rbx+0x20]
   14000d7a8:	mov    BYTE PTR [rcx+rax*1],0x0
   14000d7ac:	xor    eax,eax
   14000d7ae:	mov    rbx,QWORD PTR [rsp+0x40]
   14000d7b3:	mov    rbp,QWORD PTR [rsp+0x48]
   14000d7b8:	mov    rsi,QWORD PTR [rsp+0x50]
   14000d7bd:	add    rsp,0x20
   14000d7c1:	pop    r15
   14000d7c3:	pop    r14
   14000d7c5:	pop    rdi
   14000d7c6:	ret    
   14000d7c7:	int3   
   14000d7c8:	int3   
   14000d7c9:	int3   
   14000d7ca:	int3   
   14000d7cb:	int3   
   14000d7cc:	int3   
   14000d7cd:	int3   
   14000d7ce:	int3   
   14000d7cf:	int3   
   14000d7d0:	mov    r8d,DWORD PTR [rdx+0x30]
   14000d7d4:	mov    rdx,QWORD PTR [rdx+0x20]
   14000d7d8:	jmp    0x14000d7f0
   14000d7dd:	int3   
   14000d7de:	int3   
   14000d7df:	int3   
   14000d7e0:	int3   
   14000d7e1:	int3   
   14000d7e2:	int3   
   14000d7e3:	int3   
   14000d7e4:	int3   
   14000d7e5:	int3   
   14000d7e6:	int3   
   14000d7e7:	int3   
   14000d7e8:	int3   
   14000d7e9:	int3   
   14000d7ea:	int3   
   14000d7eb:	int3   
   14000d7ec:	int3   
   14000d7ed:	int3   
   14000d7ee:	int3   
   14000d7ef:	int3   
   14000d7f0:	mov    QWORD PTR [rsp+0x8],rbx
   14000d7f5:	push   rdi
   14000d7f6:	sub    rsp,0x30
   14000d7fa:	xor    ebx,ebx
   14000d7fc:	mov    rax,rdx
   14000d7ff:	mov    rdi,rcx
   14000d802:	test   r8d,r8d
   14000d805:	jne    0x14000d814
   14000d807:	mov    rax,QWORD PTR [rcx+0x20]
   14000d80b:	mov    BYTE PTR [rax],bl
   14000d80d:	xor    eax,eax
   14000d80f:	mov    DWORD PTR [rcx+0x30],ebx
   14000d812:	jmp    0x14000d849
   14000d814:	mov    rdx,rcx
   14000d817:	mov    DWORD PTR [rsp+0x20],ebx
   14000d81b:	mov    rcx,rax
   14000d81e:	mov    r9d,0xfde9
   14000d824:	call   0x14001132c
   14000d829:	cmp    eax,0xffffffff
   14000d82c:	jne    0x14000d844
   14000d82e:	call   QWORD PTR [rip+0x4ac4]        # 0x1400122f8
   14000d834:	movzx  ebx,ax
   14000d837:	or     ebx,0x80070000
   14000d83d:	test   eax,eax
   14000d83f:	cmovle ebx,eax
   14000d842:	jmp    0x14000d847
   14000d844:	mov    DWORD PTR [rdi+0x30],eax
   14000d847:	mov    eax,ebx
   14000d849:	mov    rbx,QWORD PTR [rsp+0x40]
   14000d84e:	add    rsp,0x30
   14000d852:	pop    rdi
   14000d853:	ret    
   14000d854:	int3   
   14000d855:	int3   
   14000d856:	int3   
   14000d857:	int3   
   14000d858:	int3   
   14000d859:	int3   
   14000d85a:	int3   
   14000d85b:	int3   
   14000d85c:	int3   
   14000d85d:	int3   
   14000d85e:	int3   
   14000d85f:	int3   
   14000d860:	rex push rbx
   14000d862:	sub    rsp,0x20
   14000d866:	mov    r8d,DWORD PTR [rdx+0x30]
   14000d86a:	mov    rbx,rcx
   14000d86d:	mov    rdx,QWORD PTR [rdx+0x20]
   14000d871:	call   0x14000d7f0
   14000d876:	test   eax,eax
   14000d878:	js     0x14000d887
   14000d87a:	xor    r8d,r8d
   14000d87d:	xor    edx,edx
   14000d87f:	mov    rcx,rbx
   14000d882:	call   0x14000db90
   14000d887:	add    rsp,0x20
   14000d88b:	pop    rbx
   14000d88c:	ret    
   14000d88d:	int3   
   14000d88e:	int3   
   14000d88f:	int3   
   14000d890:	int3   
   14000d891:	int3   
   14000d892:	int3   
   14000d893:	int3   
   14000d894:	int3   
   14000d895:	int3   
   14000d896:	int3   
   14000d897:	int3   
   14000d898:	int3   
   14000d899:	int3   
   14000d89a:	int3   
   14000d89b:	int3   
   14000d89c:	int3   
   14000d89d:	int3   
   14000d89e:	int3   
   14000d89f:	int3   
   14000d8a0:	rex push rbx
   14000d8a2:	sub    rsp,0x20
   14000d8a6:	mov    rbx,rcx
   14000d8a9:	call   0x14000d7f0
   14000d8ae:	test   eax,eax
   14000d8b0:	js     0x14000d8bf
   14000d8b2:	xor    r8d,r8d
   14000d8b5:	xor    edx,edx
   14000d8b7:	mov    rcx,rbx
   14000d8ba:	call   0x14000db90
   14000d8bf:	add    rsp,0x20
   14000d8c3:	pop    rbx
   14000d8c4:	ret    
   14000d8c5:	int3   
   14000d8c6:	int3   
   14000d8c7:	int3   
   14000d8c8:	int3   
   14000d8c9:	int3   
   14000d8ca:	int3   
   14000d8cb:	int3   
   14000d8cc:	int3   
   14000d8cd:	int3   
   14000d8ce:	int3   
   14000d8cf:	int3   
   14000d8d0:	rex push rbx
   14000d8d2:	sub    rsp,0x20
   14000d8d6:	mov    rbx,rcx
   14000d8d9:	mov    rcx,QWORD PTR [rcx+0x20]
   14000d8dd:	jmp    0x14000d8e6
   14000d8df:	mov    BYTE PTR [rax],0x20
   14000d8e2:	lea    rcx,[rax+0x1]
   14000d8e6:	mov    edx,0x2b
   14000d8eb:	call   QWORD PTR [rip+0x4b2f]        # 0x140012420
   14000d8f1:	test   rax,rax
   14000d8f4:	jne    0x14000d8df
   14000d8f6:	mov    rcx,rbx
   14000d8f9:	add    rsp,0x20
   14000d8fd:	pop    rbx
   14000d8fe:	jmp    0x14000d910
   14000d903:	int3   
   14000d904:	int3   
   14000d905:	int3   
   14000d906:	int3   
   14000d907:	int3   
   14000d908:	int3   
   14000d909:	int3   
   14000d90a:	int3   
   14000d90b:	int3   
   14000d90c:	int3   
   14000d90d:	int3   
   14000d90e:	int3   
   14000d90f:	int3   
   14000d910:	mov    QWORD PTR [rsp+0x10],rbx
   14000d915:	mov    QWORD PTR [rsp+0x18],rbp
   14000d91a:	push   rsi
   14000d91b:	push   rdi
   14000d91c:	push   r13
   14000d91e:	push   r14
   14000d920:	push   r15
   14000d922:	sub    rsp,0x40
   14000d926:	xor    esi,esi
   14000d928:	mov    r13,rcx
   14000d92b:	mov    rcx,QWORD PTR [rcx+0x20]
   14000d92f:	mov    r15b,sil
   14000d932:	lea    edx,[rsi+0x25]
   14000d935:	call   QWORD PTR [rip+0x4ae5]        # 0x140012420
   14000d93b:	mov    rdi,rax
   14000d93e:	mov    r14,rax
   14000d941:	test   rax,rax
   14000d944:	je     0x14000db6c
   14000d94a:	lea    rbx,[rdi+0x1]
   14000d94e:	mov    bpl,0x39
   14000d951:	mov    al,BYTE PTR [rbx]
   14000d953:	sub    al,0x55
   14000d955:	test   al,0xdf
   14000d957:	jne    0x14000da77
   14000d95d:	movzx  ecx,BYTE PTR [rdi+0x2]
   14000d961:	call   QWORD PTR [rip+0x4ac1]        # 0x140012428
   14000d967:	test   eax,eax
   14000d969:	je     0x14000da77
   14000d96f:	movzx  ecx,BYTE PTR [rdi+0x3]
   14000d973:	call   QWORD PTR [rip+0x4aaf]        # 0x140012428
   14000d979:	test   eax,eax
   14000d97b:	je     0x14000da77
   14000d981:	movzx  ecx,BYTE PTR [rdi+0x4]
   14000d985:	call   QWORD PTR [rip+0x4a9d]        # 0x140012428
   14000d98b:	test   eax,eax
   14000d98d:	je     0x14000da77
   14000d993:	movzx  ecx,BYTE PTR [rdi+0x5]
   14000d997:	call   QWORD PTR [rip+0x4a8b]        # 0x140012428
   14000d99d:	test   eax,eax
   14000d99f:	je     0x14000da77
   14000d9a5:	mov    al,BYTE PTR [rdi+0x2]
   14000d9a8:	cmp    al,bpl
   14000d9ab:	jle    0x14000d9be
   14000d9ad:	cmp    al,0x61
   14000d9af:	movsx  eax,al
   14000d9b2:	jl     0x14000d9b9
   14000d9b4:	sub    eax,0x57
   14000d9b7:	jmp    0x14000d9c4
   14000d9b9:	sub    eax,0x37
   14000d9bc:	jmp    0x14000d9c4
   14000d9be:	movsx  eax,al
   14000d9c1:	sub    eax,0x30
   14000d9c4:	mov    cl,BYTE PTR [rdi+0x3]
   14000d9c7:	movsx  r8d,cl
   14000d9cb:	cmp    cl,bpl
   14000d9ce:	jle    0x14000d9e1
   14000d9d0:	cmp    cl,0x61
   14000d9d3:	jl     0x14000d9db
   14000d9d5:	sub    r8d,0x57
   14000d9d9:	jmp    0x14000d9e5
   14000d9db:	sub    r8d,0x37
   14000d9df:	jmp    0x14000d9e5
   14000d9e1:	sub    r8d,0x30
   14000d9e5:	mov    cl,BYTE PTR [rdi+0x4]
   14000d9e8:	movsx  edx,cl
   14000d9eb:	cmp    cl,bpl
   14000d9ee:	jle    0x14000d9ff
   14000d9f0:	cmp    cl,0x61
   14000d9f3:	jl     0x14000d9fa
   14000d9f5:	sub    edx,0x57
   14000d9f8:	jmp    0x14000da02
   14000d9fa:	sub    edx,0x37
   14000d9fd:	jmp    0x14000da02
   14000d9ff:	sub    edx,0x30
   14000da02:	mov    cl,BYTE PTR [rdi+0x5]
   14000da05:	cmp    cl,bpl
   14000da08:	jle    0x14000da1c
   14000da0a:	cmp    cl,0x61
   14000da0d:	movsx  ecx,cl
   14000da10:	jl     0x14000da17
   14000da12:	sub    ecx,0x57
   14000da15:	jmp    0x14000da22
   14000da17:	sub    ecx,0x37
   14000da1a:	jmp    0x14000da22
   14000da1c:	movsx  ecx,cl
   14000da1f:	sub    ecx,0x30
   14000da22:	shl    ax,0x4
   14000da26:	mov    r9d,0x1
   14000da2c:	add    ax,r8w
   14000da30:	mov    QWORD PTR [rsp+0x38],rsi
   14000da35:	shl    ax,0x4
   14000da39:	lea    r8,[rsp+0x70]
   14000da3e:	add    ax,dx
   14000da41:	mov    QWORD PTR [rsp+0x30],rsi
   14000da46:	shl    ax,0x4
   14000da4a:	mov    edx,0x400
   14000da4f:	add    ax,cx
   14000da52:	mov    DWORD PTR [rsp+0x28],0x2
   14000da5a:	xor    ecx,ecx
   14000da5c:	mov    WORD PTR [rsp+0x70],ax
   14000da61:	mov    QWORD PTR [rsp+0x20],r14
   14000da66:	call   QWORD PTR [rip+0x479c]        # 0x140012208
   14000da6c:	mov    eax,eax
   14000da6e:	add    r14,rax
   14000da71:	add    rdi,0x6
   14000da75:	jmp    0x14000dadb
   14000da77:	movzx  ecx,BYTE PTR [rbx]
   14000da7a:	call   QWORD PTR [rip+0x49a8]        # 0x140012428
   14000da80:	test   eax,eax
   14000da82:	je     0x14000dae0
   14000da84:	movzx  ecx,BYTE PTR [rdi+0x2]
   14000da88:	call   QWORD PTR [rip+0x499a]        # 0x140012428
   14000da8e:	test   eax,eax
   14000da90:	je     0x14000dae0
   14000da92:	movsx  eax,BYTE PTR [rbx]
   14000da95:	cmp    BYTE PTR [rbx],bpl
   14000da98:	jle    0x14000daa9
   14000da9a:	cmp    BYTE PTR [rbx],0x61
   14000da9d:	jl     0x14000daa4
   14000da9f:	sub    eax,0x57
   14000daa2:	jmp    0x14000daac
   14000daa4:	sub    eax,0x37
   14000daa7:	jmp    0x14000daac
   14000daa9:	sub    eax,0x30
   14000daac:	mov    cl,BYTE PTR [rdi+0x2]
   14000daaf:	cmp    cl,bpl
   14000dab2:	jle    0x14000dac6
   14000dab4:	cmp    cl,0x61
   14000dab7:	movsx  ecx,cl
   14000daba:	jl     0x14000dac1
   14000dabc:	sub    ecx,0x57
   14000dabf:	jmp    0x14000dacc
   14000dac1:	sub    ecx,0x37
   14000dac4:	jmp    0x14000dacc
   14000dac6:	movsx  ecx,cl
   14000dac9:	sub    ecx,0x30
   14000dacc:	shl    al,0x4
   14000dacf:	add    al,cl
   14000dad1:	mov    BYTE PTR [r14],al
   14000dad4:	inc    r14
   14000dad7:	add    rdi,0x3
   14000dadb:	mov    r15b,0x1
   14000dade:	jmp    0x14000daf0
   14000dae0:	test   r15b,r15b
   14000dae3:	je     0x14000daea
   14000dae5:	mov    al,BYTE PTR [rdi]
   14000dae7:	mov    BYTE PTR [r14],al
   14000daea:	inc    r14
   14000daed:	mov    rdi,rbx
   14000daf0:	mov    edx,0x25
   14000daf5:	mov    rcx,rdi
   14000daf8:	call   QWORD PTR [rip+0x4922]        # 0x140012420
   14000dafe:	mov    rbp,rax
   14000db01:	test   r15b,r15b
   14000db04:	je     0x14000db23
   14000db06:	test   rax,rax
   14000db09:	je     0x14000db30
   14000db0b:	sub    eax,edi
   14000db0d:	je     0x14000db23
   14000db0f:	mov    r8d,eax
   14000db12:	mov    rdx,rdi
   14000db15:	mov    rcx,r14
   14000db18:	mov    ebx,eax
   14000db1a:	call   QWORD PTR [rip+0x4910]        # 0x140012430
   14000db20:	add    r14,rbx
   14000db23:	mov    rdi,rbp
   14000db26:	test   rbp,rbp
   14000db29:	je     0x14000db4d
   14000db2b:	jmp    0x14000d94a
   14000db30:	mov    edx,DWORD PTR [r13+0x30]
   14000db34:	mov    rcx,r14
   14000db37:	mov    r8,QWORD PTR [r13+0x20]
   14000db3b:	sub    rdx,rdi
   14000db3e:	inc    r8
   14000db41:	add    r8,rdx
   14000db44:	mov    rdx,rdi
   14000db47:	call   QWORD PTR [rip+0x48e3]        # 0x140012430
   14000db4d:	test   r15b,r15b
   14000db50:	je     0x14000db6c
   14000db52:	mov    rcx,QWORD PTR [r13+0x20]
   14000db56:	test   rcx,rcx
   14000db59:	je     0x14000db68
   14000db5b:	mov    edx,DWORD PTR [r13+0x28]
   14000db5f:	call   QWORD PTR [rip+0x498b]        # 0x1400124f0
   14000db65:	mov    rsi,rax
   14000db68:	mov    DWORD PTR [r13+0x30],esi
   14000db6c:	lea    r11,[rsp+0x40]
   14000db71:	xor    eax,eax
   14000db73:	mov    rbx,QWORD PTR [r11+0x38]
   14000db77:	mov    rbp,QWORD PTR [r11+0x40]
   14000db7b:	mov    rsp,r11
   14000db7e:	pop    r15
   14000db80:	pop    r14
   14000db82:	pop    r13
   14000db84:	pop    rdi
   14000db85:	pop    rsi
   14000db86:	ret    
   14000db87:	int3   
   14000db88:	int3   
   14000db89:	int3   
   14000db8a:	int3   
   14000db8b:	int3   
   14000db8c:	int3   
   14000db8d:	int3   
   14000db8e:	int3   
   14000db8f:	int3   
   14000db90:	mov    QWORD PTR [rsp+0x10],rbx
   14000db95:	mov    QWORD PTR [rsp+0x18],rsi
   14000db9a:	mov    QWORD PTR [rsp+0x20],rdi
   14000db9f:	push   rbp
   14000dba0:	push   r12
   14000dba2:	push   r13
   14000dba4:	push   r14
   14000dba6:	push   r15
   14000dba8:	mov    rbp,rsp
   14000dbab:	sub    rsp,0x80
   14000dbb2:	mov    rax,QWORD PTR [rip+0xe47f]        # 0x14001c038
   14000dbb9:	xor    rax,rsp
   14000dbbc:	mov    QWORD PTR [rbp-0x8],rax
   14000dbc0:	mov    r13,QWORD PTR [rcx+0x20]
   14000dbc4:	xor    r9d,r9d
   14000dbc7:	mov    al,r8b
   14000dbca:	mov    QWORD PTR [rbp-0x40],r9
   14000dbce:	mov    rsi,rcx
   14000dbd1:	mov    DWORD PTR [rbp-0x18],0x20
   14000dbd8:	lea    rcx,[rbp-0x40]
   14000dbdc:	mov    WORD PTR [rbp-0x14],0x100
   14000dbe2:	mov    QWORD PTR [rbp-0x20],rcx
   14000dbe6:	mov    r15d,r9d
   14000dbe9:	mov    DWORD PTR [rbp-0x10],r9d
   14000dbed:	mov    ebx,r9d
   14000dbf0:	mov    dil,BYTE PTR [r13+0x0]
   14000dbf4:	mov    r12b,0x1
   14000dbf7:	mov    BYTE PTR [rbp-0x4f],al
   14000dbfa:	mov    r14b,r9b
   14000dbfd:	mov    BYTE PTR [rbp-0x50],dl
   14000dc00:	mov    r8d,r9d
   14000dc03:	test   dil,dil
   14000dc06:	je     0x14000de13
   14000dc0c:	mov    QWORD PTR [rbp-0x48],r13
   14000dc10:	test   al,al
   14000dc12:	je     0x14000dc20
   14000dc14:	cmp    dil,0x3f
   14000dc18:	movzx  r12d,r12b
   14000dc1c:	cmove  r12d,r9d
   14000dc20:	test   r12b,r12b
   14000dc23:	je     0x14000dd89
   14000dc29:	cmp    dil,0x80
   14000dc2d:	jae    0x14000dc55
   14000dc2f:	test   dl,dl
   14000dc31:	jne    0x14000dd89
   14000dc37:	cmp    dil,0x3f
   14000dc3b:	ja     0x14000dd89
   14000dc41:	movabs rcx,0xd0000029ffffffff
   14000dc4b:	bt     rcx,rdi
   14000dc4f:	jae    0x14000dd89
   14000dc55:	cmp    dil,0xa
   14000dc59:	je     0x14000dd89
   14000dc5f:	cmp    dil,0xd
   14000dc63:	je     0x14000dd89
   14000dc69:	test   r14b,r14b
   14000dc6c:	jne    0x14000dce2
   14000dc6e:	mov    edx,DWORD PTR [rsi+0x30]
   14000dc71:	mov    r14b,0x1
   14000dc74:	add    edx,edx
   14000dc76:	cmp    edx,DWORD PTR [rbp-0x18]
   14000dc79:	jbe    0x14000dca4
   14000dc7b:	lea    rcx,[rbp-0x40]
   14000dc7f:	call   0x14000ea50
   14000dc84:	xor    r9d,r9d
   14000dc87:	test   al,al
   14000dc89:	jne    0x14000dca4
   14000dc8b:	call   QWORD PTR [rip+0x4667]        # 0x1400122f8
   14000dc91:	movzx  ebx,ax
   14000dc94:	xor    r9d,r9d
   14000dc97:	or     ebx,0x80070000
   14000dc9d:	test   eax,eax
   14000dc9f:	cmovle ebx,eax
   14000dca2:	jmp    0x14000dca7
   14000dca4:	mov    ebx,r9d
   14000dca7:	test   ebx,ebx
   14000dca9:	js     0x14000de13
   14000dcaf:	mov    rdx,QWORD PTR [rsi+0x20]
   14000dcb3:	test   rdx,rdx
   14000dcb6:	jne    0x14000dcc1
   14000dcb8:	test   r15d,r15d
   14000dcbb:	jne    0x14000ddd5
   14000dcc1:	xor    r9d,r9d
   14000dcc4:	mov    BYTE PTR [rsp+0x20],0x1
   14000dcc9:	mov    r8d,r15d
   14000dccc:	lea    rcx,[rbp-0x40]
   14000dcd0:	call   0x14000d3d0
   14000dcd5:	xor    r9d,r9d
   14000dcd8:	mov    ebx,eax
   14000dcda:	test   eax,eax
   14000dcdc:	js     0x14000de13
   14000dce2:	mov    r8d,DWORD PTR [rsi+0x30]
   14000dce6:	lea    rcx,[rbp-0x40]
   14000dcea:	lea    edx,[r8+0x3]
   14000dcee:	call   0x14000ea10
   14000dcf3:	test   al,al
   14000dcf5:	je     0x14000dddc
   14000dcfb:	movzx  r8d,dil
   14000dcff:	mov    r10d,0x8000000f
   14000dd05:	mov    r9d,r8d
   14000dd08:	mov    BYTE PTR [rbp-0x4c],0x25
   14000dd0c:	and    r9d,r10d
   14000dd0f:	jge    0x14000dd1b
   14000dd11:	dec    r9d
   14000dd14:	or     r9d,0xfffffff0
   14000dd18:	inc    r9d
   14000dd1b:	lea    eax,[r9+0x30]
   14000dd1f:	cmp    r9d,0x9
   14000dd23:	movzx  ecx,al
   14000dd26:	lea    edx,[r9+0x37]
   14000dd2a:	movzx  eax,dl
   14000dd2d:	cmova  ecx,eax
   14000dd30:	shr    r8d,0x4
   14000dd34:	mov    BYTE PTR [rbp-0x4a],cl
   14000dd37:	and    r8d,r10d
   14000dd3a:	jge    0x14000dd46
   14000dd3c:	dec    r8d
   14000dd3f:	or     r8d,0xfffffff0
   14000dd43:	inc    r8d
   14000dd46:	mov    r9d,DWORD PTR [rbp-0x10]
   14000dd4a:	lea    eax,[r8+0x30]
   14000dd4e:	lea    edx,[r8+0x37]
   14000dd52:	movzx  ecx,al
   14000dd55:	cmp    r8d,0x9
   14000dd59:	movzx  eax,dl
   14000dd5c:	mov    r8d,0x3
   14000dd62:	mov    BYTE PTR [rsp+0x20],0x1
   14000dd67:	cmova  ecx,eax
   14000dd6a:	lea    rdx,[rbp-0x4c]
   14000dd6e:	mov    BYTE PTR [rbp-0x4b],cl
   14000dd71:	lea    rcx,[rbp-0x40]
   14000dd75:	call   0x14000d3d0
   14000dd7a:	xor    r9d,r9d
   14000dd7d:	mov    ebx,eax
   14000dd7f:	test   eax,eax
   14000dd81:	js     0x14000de13
   14000dd87:	jmp    0x14000ddb0
   14000dd89:	test   r14b,r14b
   14000dd8c:	je     0x14000ddb7
   14000dd8e:	movsxd rdx,r15d
   14000dd91:	add    rdx,r13
   14000dd94:	je     0x14000ddb4
   14000dd96:	mov    r9d,r8d
   14000dd99:	mov    BYTE PTR [rsp+0x20],0x1
   14000dd9e:	mov    r8d,0x1
   14000dda4:	lea    rcx,[rbp-0x40]
   14000dda8:	call   0x14000d3d0
   14000ddad:	xor    r9d,r9d
   14000ddb0:	mov    r8d,DWORD PTR [rbp-0x10]
   14000ddb4:	mov    dl,BYTE PTR [rbp-0x50]
   14000ddb7:	mov    rax,QWORD PTR [rbp-0x48]
   14000ddbb:	inc    r15d
   14000ddbe:	inc    rax
   14000ddc1:	mov    QWORD PTR [rbp-0x48],rax
   14000ddc5:	mov    dil,BYTE PTR [rax]
   14000ddc8:	test   dil,dil
   14000ddcb:	je     0x14000ddf5
   14000ddcd:	mov    al,BYTE PTR [rbp-0x4f]
   14000ddd0:	jmp    0x14000dc10
   14000ddd5:	mov    ebx,0x80070057
   14000ddda:	jmp    0x14000de13
   14000dddc:	call   QWORD PTR [rip+0x4516]        # 0x1400122f8
   14000dde2:	movzx  ebx,ax
   14000dde5:	xor    r9d,r9d
   14000dde8:	or     ebx,0x80070000
   14000ddee:	test   eax,eax
   14000ddf0:	cmovle ebx,eax
   14000ddf3:	jmp    0x14000de13
   14000ddf5:	test   r14b,r14b
   14000ddf8:	je     0x14000de13
   14000ddfa:	mov    rdx,QWORD PTR [rbp-0x20]
   14000ddfe:	xor    r9d,r9d
   14000de01:	mov    rcx,rsi
   14000de04:	mov    BYTE PTR [rsp+0x20],0x1
   14000de09:	call   0x14000d3d0
   14000de0e:	mov    ebx,eax
   14000de10:	xor    r9d,r9d
   14000de13:	cmp    BYTE PTR [rbp-0x14],r9b
   14000de17:	je     0x14000de22
   14000de19:	lea    rcx,[rbp-0x40]
   14000de1d:	call   0x14000eb30
   14000de22:	mov    eax,ebx
   14000de24:	mov    rcx,QWORD PTR [rbp-0x8]
   14000de28:	xor    rcx,rsp
   14000de2b:	call   0x140011800
   14000de30:	lea    r11,[rsp+0x80]
   14000de38:	mov    rbx,QWORD PTR [r11+0x38]
   14000de3c:	mov    rsi,QWORD PTR [r11+0x40]
   14000de40:	mov    rdi,QWORD PTR [r11+0x48]
   14000de44:	mov    rsp,r11
   14000de47:	pop    r15
   14000de49:	pop    r14
   14000de4b:	pop    r13
   14000de4d:	pop    r12
   14000de4f:	pop    rbp
   14000de50:	ret    
   14000de51:	int3   
   14000de52:	int3   
   14000de53:	int3   
   14000de54:	int3   
   14000de55:	int3   
   14000de56:	int3   
   14000de57:	int3   
   14000de58:	int3   
   14000de59:	int3   
   14000de5a:	int3   
   14000de5b:	int3   
   14000de5c:	int3   
   14000de5d:	int3   
   14000de5e:	int3   
   14000de5f:	int3   
   14000de60:	rex push rbx
   14000de62:	push   rsi
   14000de63:	push   rdi
   14000de64:	sub    rsp,0x1a0
   14000de6b:	mov    rax,QWORD PTR [rip+0xe1c6]        # 0x14001c038
   14000de72:	xor    rax,rsp
   14000de75:	mov    QWORD PTR [rsp+0x190],rax
   14000de7d:	xor    ebx,ebx
   14000de7f:	mov    esi,edx
   14000de81:	mov    rdi,rcx
   14000de84:	test   r8,r8
   14000de87:	jne    0x14000deef
   14000de89:	mov    QWORD PTR [rsp+0x30],rbx
   14000de8e:	lea    rax,[rsp+0x40]
   14000de93:	mov    r8d,edx
   14000de96:	mov    DWORD PTR [rsp+0x28],0x400
   14000de9e:	xor    edx,edx
   14000dea0:	mov    QWORD PTR [rsp+0x20],rax
   14000dea5:	mov    ecx,0x13ff
   14000deaa:	mov    QWORD PTR [rsp+0x40],rbx
   14000deaf:	call   QWORD PTR [rip+0x434b]        # 0x140012200
   14000deb5:	test   eax,eax
   14000deb7:	je     0x14000df2c
   14000deb9:	mov    rcx,QWORD PTR [rsp+0x40]
   14000debe:	test   rcx,rcx
   14000dec1:	jne    0x14000deca
   14000dec3:	mov    ebx,0x80070057
   14000dec8:	jmp    0x14000dee7
   14000deca:	mov    rdx,rcx
   14000decd:	mov    BYTE PTR [rsp+0x20],0x1
   14000ded2:	mov    rcx,rdi
   14000ded5:	xor    r9d,r9d
   14000ded8:	mov    r8d,eax
   14000dedb:	call   0x14000d3d0
   14000dee0:	mov    rcx,QWORD PTR [rsp+0x40]
   14000dee5:	mov    ebx,eax
   14000dee7:	call   QWORD PTR [rip+0x4423]        # 0x140012310
   14000deed:	jmp    0x14000df2c
   14000deef:	mov    rcx,r8
   14000def2:	call   QWORD PTR [rip+0x4300]        # 0x1400121f8
   14000def8:	mov    r9d,0x140
   14000defe:	lea    r8,[rsp+0x50]
   14000df03:	mov    rcx,rax
   14000df06:	mov    edx,esi
   14000df08:	call   QWORD PTR [rip+0x4462]        # 0x140012370
   14000df0e:	test   eax,eax
   14000df10:	je     0x14000df2c
   14000df12:	xor    r9d,r9d
   14000df15:	mov    BYTE PTR [rsp+0x20],0x1
   14000df1a:	mov    r8d,eax
   14000df1d:	lea    rdx,[rsp+0x50]
   14000df22:	mov    rcx,rdi
   14000df25:	call   0x14000d3d0
   14000df2a:	mov    ebx,eax
   14000df2c:	mov    eax,ebx
   14000df2e:	mov    rcx,QWORD PTR [rsp+0x190]
   14000df36:	xor    rcx,rsp
   14000df39:	call   0x140011800
   14000df3e:	add    rsp,0x1a0
   14000df45:	pop    rdi
   14000df46:	pop    rsi
   14000df47:	pop    rbx
   14000df48:	ret    
   14000df49:	int3   
   14000df4a:	int3   
   14000df4b:	int3   
   14000df4c:	int3   
   14000df4d:	int3   
   14000df4e:	int3   
   14000df4f:	int3   
   14000df50:	rex push rbx
   14000df52:	sub    rsp,0x180
   14000df59:	mov    rax,QWORD PTR [rip+0xe0d8]        # 0x14001c038
   14000df60:	xor    rax,rsp
   14000df63:	mov    QWORD PTR [rsp+0x170],rax
   14000df6b:	mov    rax,r8
   14000df6e:	mov    rbx,rcx
   14000df71:	mov    rcx,rax
   14000df74:	lea    r8,[rsp+0x30]
   14000df79:	mov    r9d,0x140
   14000df7f:	call   QWORD PTR [rip+0x43eb]        # 0x140012370
   14000df85:	test   eax,eax
   14000df87:	je     0x14000dfa5
   14000df89:	xor    r9d,r9d
   14000df8c:	mov    BYTE PTR [rsp+0x20],0x1
   14000df91:	mov    r8d,eax
   14000df94:	lea    rdx,[rsp+0x30]
   14000df99:	mov    rcx,rbx
   14000df9c:	call   0x14000d3d0
   14000dfa1:	mov    ecx,eax
   14000dfa3:	jmp    0x14000dfb9
   14000dfa5:	call   QWORD PTR [rip+0x434d]        # 0x1400122f8
   14000dfab:	movzx  ecx,ax
   14000dfae:	or     ecx,0x80070000
   14000dfb4:	test   eax,eax
   14000dfb6:	cmovle ecx,eax
   14000dfb9:	mov    eax,ecx
   14000dfbb:	mov    rcx,QWORD PTR [rsp+0x170]
   14000dfc3:	xor    rcx,rsp
   14000dfc6:	call   0x140011800
   14000dfcb:	add    rsp,0x180
   14000dfd2:	pop    rbx
   14000dfd3:	ret    
   14000dfd4:	int3   
   14000dfd5:	int3   
   14000dfd6:	int3   
   14000dfd7:	int3   
   14000dfd8:	int3   
   14000dfd9:	int3   
   14000dfda:	int3   
   14000dfdb:	int3   
   14000dfdc:	int3   
   14000dfdd:	int3   
   14000dfde:	int3   
   14000dfdf:	int3   
   14000dfe0:	mov    rax,rsp
   14000dfe3:	mov    QWORD PTR [rax+0x8],rbx
   14000dfe7:	mov    QWORD PTR [rax+0x10],rbp
   14000dfeb:	mov    QWORD PTR [rax+0x18],rsi
   14000dfef:	mov    QWORD PTR [rax+0x20],rdi
   14000dff3:	push   r14
   14000dff5:	sub    rsp,0x50
   14000dff9:	mov    eax,DWORD PTR [rsp+0x80]
   14000e000:	mov    r14,rcx
   14000e003:	mov    rcx,r9
   14000e006:	mov    rdi,r8
   14000e009:	mov    esi,edx
   14000e00b:	mov    ebp,0x80004005
   14000e010:	lea    ebx,[rax+rax*1]
   14000e013:	call   QWORD PTR [rip+0x41df]        # 0x1400121f8
   14000e019:	mov    QWORD PTR [rsp+0x30],rdi
   14000e01e:	xor    r9d,r9d
   14000e021:	mov    rdx,rax
   14000e024:	mov    DWORD PTR [rsp+0x28],ebx
   14000e028:	lea    rax,[rsp+0x40]
   14000e02d:	mov    r8d,esi
   14000e030:	mov    ecx,0x2900
   14000e035:	mov    QWORD PTR [rsp+0x20],rax
   14000e03a:	call   QWORD PTR [rip+0x41c0]        # 0x140012200
   14000e040:	test   eax,eax
   14000e042:	je     0x14000e078
   14000e044:	mov    rcx,QWORD PTR [rsp+0x40]
   14000e049:	test   rcx,rcx
   14000e04c:	jne    0x14000e055
   14000e04e:	mov    ebp,0x80070057
   14000e053:	jmp    0x14000e072
   14000e055:	mov    rdx,rcx
   14000e058:	mov    BYTE PTR [rsp+0x20],0x1
   14000e05d:	mov    rcx,r14
   14000e060:	xor    r9d,r9d
   14000e063:	mov    r8d,eax
   14000e066:	call   0x14000d3d0
   14000e06b:	mov    rcx,QWORD PTR [rsp+0x40]
   14000e070:	mov    ebp,eax
   14000e072:	call   QWORD PTR [rip+0x4298]        # 0x140012310
   14000e078:	mov    rbx,QWORD PTR [rsp+0x60]
   14000e07d:	mov    eax,ebp
   14000e07f:	mov    rbp,QWORD PTR [rsp+0x68]
   14000e084:	mov    rsi,QWORD PTR [rsp+0x70]
   14000e089:	mov    rdi,QWORD PTR [rsp+0x78]
   14000e08e:	add    rsp,0x50
   14000e092:	pop    r14
   14000e094:	ret    
   14000e095:	int3   
   14000e096:	int3   
   14000e097:	int3   
   14000e098:	int3   
   14000e099:	int3   
   14000e09a:	int3   
   14000e09b:	int3   
   14000e09c:	int3   
   14000e09d:	int3   
   14000e09e:	int3   
   14000e09f:	int3   
   14000e0a0:	mov    QWORD PTR [rsp+0x8],rbx
   14000e0a5:	mov    QWORD PTR [rsp+0x10],rsi
   14000e0aa:	push   rdi
   14000e0ab:	sub    rsp,0x20
   14000e0af:	xor    edi,edi
   14000e0b1:	mov    rsi,r8
   14000e0b4:	mov    rax,rdx
   14000e0b7:	test   r8,r8
   14000e0ba:	jne    0x14000e0c3
   14000e0bc:	mov    eax,0x80070057
   14000e0c1:	jmp    0x14000e0ec
   14000e0c3:	mov    ebx,DWORD PTR [rcx+0x30]
   14000e0c6:	inc    ebx
   14000e0c8:	cmp    DWORD PTR [r8],ebx
   14000e0cb:	jb     0x14000e0e3
   14000e0cd:	test   rax,rax
   14000e0d0:	je     0x14000e0e3
   14000e0d2:	mov    rdx,QWORD PTR [rcx+0x20]
   14000e0d6:	mov    rcx,rax
   14000e0d9:	mov    r8d,ebx
   14000e0dc:	call   0x140011e16
   14000e0e1:	jmp    0x14000e0e8
   14000e0e3:	mov    edi,0x8007007a
   14000e0e8:	mov    DWORD PTR [rsi],ebx
   14000e0ea:	mov    eax,edi
   14000e0ec:	mov    rbx,QWORD PTR [rsp+0x30]
   14000e0f1:	mov    rsi,QWORD PTR [rsp+0x38]
   14000e0f6:	add    rsp,0x20
   14000e0fa:	pop    rdi
   14000e0fb:	ret    
   14000e0fc:	int3   
   14000e0fd:	int3   
   14000e0fe:	int3   
   14000e0ff:	int3   
   14000e100:	int3   
   14000e101:	int3   
   14000e102:	int3   
   14000e103:	int3   
   14000e104:	int3   
   14000e105:	int3   
   14000e106:	int3   
   14000e107:	int3   
   14000e108:	int3   
   14000e109:	int3   
   14000e10a:	int3   
   14000e10b:	int3   
   14000e10c:	int3   
   14000e10d:	int3   
   14000e10e:	int3   
   14000e10f:	int3   
   14000e110:	mov    QWORD PTR [rsp+0x10],rbx
   14000e115:	mov    QWORD PTR [rsp+0x18],rsi
   14000e11a:	mov    QWORD PTR [rsp+0x20],rdi
   14000e11f:	push   rbp
   14000e120:	push   r12
   14000e122:	push   r13
   14000e124:	push   r14
   14000e126:	push   r15
   14000e128:	mov    rbp,rsp
   14000e12b:	sub    rsp,0x70
   14000e12f:	mov    rax,QWORD PTR [rip+0xdf02]        # 0x14001c038
   14000e136:	xor    rax,rsp
   14000e139:	mov    QWORD PTR [rbp-0x8],rax
   14000e13d:	mov    r12,QWORD PTR [rcx+0x20]
   14000e141:	lea    rax,[rbp-0x40]
   14000e145:	xor    edi,edi
   14000e147:	mov    QWORD PTR [rbp-0x20],rax
   14000e14b:	and    QWORD PTR [rbp-0x40],rdi
   14000e14f:	mov    r15,rcx
   14000e152:	xor    ecx,ecx
   14000e154:	mov    DWORD PTR [rbp-0x18],0x20
   14000e15b:	mov    WORD PTR [rbp-0x14],0x100
   14000e161:	xor    r14d,r14d
   14000e164:	mov    DWORD PTR [rbp-0x10],ecx
   14000e167:	xor    sil,sil
   14000e16a:	mov    bl,BYTE PTR [r12]
   14000e16e:	test   bl,bl
   14000e170:	je     0x14000e2b0
   14000e176:	mov    r13,r12
   14000e179:	cmp    bl,0x3e
   14000e17c:	ja     0x14000e18e
   14000e17e:	movabs rdx,0x5000004400000000
   14000e188:	bt     rdx,rbx
   14000e18c:	jb     0x14000e1b4
   14000e18e:	cmp    bl,0x7b
   14000e191:	je     0x14000e1b4
   14000e193:	cmp    bl,0x7d
   14000e196:	je     0x14000e1b4
   14000e198:	test   sil,sil
   14000e19b:	je     0x14000e271
   14000e1a1:	movsxd rdx,r14d
   14000e1a4:	add    rdx,r12
   14000e1a7:	je     0x14000e216
   14000e1a9:	mov    r8d,0x1
   14000e1af:	jmp    0x14000e257
   14000e1b4:	test   sil,sil
   14000e1b7:	jne    0x14000e1ef
   14000e1b9:	mov    rdx,QWORD PTR [r15+0x20]
   14000e1bd:	mov    sil,0x1
   14000e1c0:	test   rdx,rdx
   14000e1c3:	jne    0x14000e1ce
   14000e1c5:	test   r14d,r14d
   14000e1c8:	jne    0x14000e2dc
   14000e1ce:	xor    r9d,r9d
   14000e1d1:	mov    BYTE PTR [rsp+0x20],0x1
   14000e1d6:	mov    r8d,r14d
   14000e1d9:	lea    rcx,[rbp-0x40]
   14000e1dd:	call   0x14000d3d0
   14000e1e2:	mov    edi,eax
   14000e1e4:	test   eax,eax
   14000e1e6:	js     0x14000e2a1
   14000e1ec:	mov    ecx,DWORD PTR [rbp-0x10]
   14000e1ef:	cmp    bl,0x22
   14000e1f2:	je     0x14000e24a
   14000e1f4:	cmp    bl,0x26
   14000e1f7:	je     0x14000e23b
   14000e1f9:	cmp    bl,0x3c
   14000e1fc:	je     0x14000e232
   14000e1fe:	cmp    bl,0x3e
   14000e201:	je     0x14000e223
   14000e203:	cmp    bl,0x7b
   14000e206:	je     0x14000e21a
   14000e208:	cmp    bl,0x7d
   14000e20b:	jne    0x14000e216
   14000e20d:	lea    rdx,[rip+0x5778]        # 0x14001398c
   14000e214:	jmp    0x14000e251
   14000e216:	xor    edi,edi
   14000e218:	jmp    0x14000e26d
   14000e21a:	lea    rdx,[rip+0x5763]        # 0x140013984
   14000e221:	jmp    0x14000e251
   14000e223:	lea    rdx,[rip+0x5752]        # 0x14001397c
   14000e22a:	mov    r8d,0x4
   14000e230:	jmp    0x14000e257
   14000e232:	lea    rdx,[rip+0x573b]        # 0x140013974
   14000e239:	jmp    0x14000e22a
   14000e23b:	lea    rdx,[rip+0x5722]        # 0x140013964
   14000e242:	mov    r8d,0x5
   14000e248:	jmp    0x14000e257
   14000e24a:	lea    rdx,[rip+0x571b]        # 0x14001396c
   14000e251:	mov    r8d,0x6
   14000e257:	mov    r9d,ecx
   14000e25a:	mov    BYTE PTR [rsp+0x20],0x1
   14000e25f:	lea    rcx,[rbp-0x40]
   14000e263:	call   0x14000d3d0
   14000e268:	mov    ecx,DWORD PTR [rbp-0x10]
   14000e26b:	mov    edi,eax
   14000e26d:	test   edi,edi
   14000e26f:	js     0x14000e2a1
   14000e271:	inc    r13
   14000e274:	inc    r14d
   14000e277:	mov    bl,BYTE PTR [r13+0x0]
   14000e27b:	test   bl,bl
   14000e27d:	jne    0x14000e179
   14000e283:	test   sil,sil
   14000e286:	je     0x14000e2a1
   14000e288:	mov    rdx,QWORD PTR [rbp-0x20]
   14000e28c:	mov    r8d,ecx
   14000e28f:	mov    rcx,r15
   14000e292:	mov    BYTE PTR [rsp+0x20],0x1
   14000e297:	xor    r9d,r9d
   14000e29a:	call   0x14000d3d0
   14000e29f:	mov    edi,eax
   14000e2a1:	cmp    BYTE PTR [rbp-0x14],0x0
   14000e2a5:	je     0x14000e2b0
   14000e2a7:	lea    rcx,[rbp-0x40]
   14000e2ab:	call   0x14000eb30
   14000e2b0:	mov    eax,edi
   14000e2b2:	mov    rcx,QWORD PTR [rbp-0x8]
   14000e2b6:	xor    rcx,rsp
   14000e2b9:	call   0x140011800
   14000e2be:	lea    r11,[rsp+0x70]
   14000e2c3:	mov    rbx,QWORD PTR [r11+0x38]
   14000e2c7:	mov    rsi,QWORD PTR [r11+0x40]
   14000e2cb:	mov    rdi,QWORD PTR [r11+0x48]
   14000e2cf:	mov    rsp,r11
   14000e2d2:	pop    r15
   14000e2d4:	pop    r14
   14000e2d6:	pop    r13
   14000e2d8:	pop    r12
   14000e2da:	pop    rbp
   14000e2db:	ret    
   14000e2dc:	mov    edi,0x80070057
   14000e2e1:	jmp    0x14000e2a1
   14000e2e3:	int3   
   14000e2e4:	int3   
   14000e2e5:	int3   
   14000e2e6:	int3   
   14000e2e7:	int3   
   14000e2e8:	int3   
   14000e2e9:	int3   
   14000e2ea:	int3   
   14000e2eb:	int3   
   14000e2ec:	int3   
   14000e2ed:	int3   
   14000e2ee:	int3   
   14000e2ef:	int3   
   14000e2f0:	mov    QWORD PTR [rsp+0x20],rbx
   14000e2f5:	push   rbp
   14000e2f6:	push   rsi
   14000e2f7:	push   rdi
   14000e2f8:	push   r12
   14000e2fa:	push   r13
   14000e2fc:	push   r14
   14000e2fe:	push   r15
   14000e300:	lea    rbp,[rsp-0x27]
   14000e305:	sub    rsp,0xf0
   14000e30c:	mov    rax,QWORD PTR [rip+0xdd25]        # 0x14001c038
   14000e313:	xor    rax,rsp
   14000e316:	mov    QWORD PTR [rbp+0x17],rax
   14000e31a:	xor    eax,eax
   14000e31c:	xor    ebx,ebx
   14000e31e:	mov    r15d,r8d
   14000e321:	mov    BYTE PTR [rsp+0x30],bl
   14000e325:	mov    r12,rdx
   14000e328:	mov    WORD PTR [rsp+0x31],ax
   14000e32d:	mov    r13,rcx
   14000e330:	mov    BYTE PTR [rsp+0x33],al
   14000e334:	lea    r8d,[rbx+0x34]
   14000e338:	xor    edx,edx
   14000e33a:	lea    rcx,[rbp-0x79]
   14000e33e:	call   0x140011e22
   14000e343:	xor    eax,eax
   14000e345:	mov    BYTE PTR [rsp+0x38],bl
   14000e349:	xor    edx,edx
   14000e34b:	mov    QWORD PTR [rsp+0x39],rax
   14000e350:	lea    r8d,[rbx+0x4e]
   14000e354:	mov    QWORD PTR [rsp+0x41],rax
   14000e359:	lea    rcx,[rbp-0x39]
   14000e35d:	call   0x140011e22
   14000e362:	test   r15d,r15d
   14000e365:	je     0x14000e4ca
   14000e36b:	test   r12,r12
   14000e36e:	je     0x14000e4ca
   14000e374:	mov    eax,r15d
   14000e377:	shr    eax,0x4
   14000e37a:	imul   edx,eax,0x4d
   14000e37d:	inc    edx
   14000e37f:	cmp    edx,DWORD PTR [r13+0x28]
   14000e383:	jbe    0x14000e3a7
   14000e385:	mov    rcx,r13
   14000e388:	call   0x14000ea50
   14000e38d:	test   al,al
   14000e38f:	jne    0x14000e3a7
   14000e391:	call   QWORD PTR [rip+0x3f61]        # 0x1400122f8
   14000e397:	movzx  ecx,ax
   14000e39a:	or     ecx,0x80070000
   14000e3a0:	test   eax,eax
   14000e3a2:	cmovle ecx,eax
   14000e3a5:	jmp    0x14000e3a9
   14000e3a7:	mov    ecx,ebx
   14000e3a9:	test   ecx,ecx
   14000e3ab:	jns    0x14000e3b4
   14000e3ad:	mov    eax,ecx
   14000e3af:	jmp    0x14000e4e5
   14000e3b4:	mov    esi,ebx
   14000e3b6:	test   r15d,r15d
   14000e3b9:	je     0x14000e3ad
   14000e3bb:	mov    BYTE PTR [rbp-0x79],bl
   14000e3be:	mov    edi,ebx
   14000e3c0:	mov    BYTE PTR [rsp+0x38],bl
   14000e3c4:	mov    r14,rbx
   14000e3c7:	lea    eax,[rdi+rsi*1]
   14000e3ca:	cmp    eax,r15d
   14000e3cd:	jae    0x14000e41c
   14000e3cf:	mov    eax,esi
   14000e3d1:	lea    r8,[rip+0x55e8]        # 0x1400139c0
   14000e3d8:	add    rax,r12
   14000e3db:	lea    rcx,[rsp+0x30]
   14000e3e0:	mov    edx,0x4
   14000e3e5:	movzx  ebx,BYTE PTR [rax+r14*1]
   14000e3ea:	mov    r9d,ebx
   14000e3ed:	call   QWORD PTR [rip+0x4025]        # 0x140012418
   14000e3f3:	lea    r8,[rsp+0x30]
   14000e3f8:	mov    edx,0x34
   14000e3fd:	lea    rcx,[rbp-0x79]
   14000e401:	call   QWORD PTR [rip+0x4031]        # 0x140012438
   14000e407:	lea    ecx,[rbx-0x20]
   14000e40a:	mov    edx,0x2e
   14000e40f:	cmp    cl,0x8f
   14000e412:	cmovbe edx,ebx
   14000e415:	mov    BYTE PTR [rsp+r14*1+0x38],dl
   14000e41a:	jmp    0x14000e438
   14000e41c:	lea    r8,[rip+0x55a5]        # 0x1400139c8
   14000e423:	mov    edx,0x34
   14000e428:	lea    rcx,[rbp-0x79]
   14000e42c:	call   QWORD PTR [rip+0x4006]        # 0x140012438
   14000e432:	mov    BYTE PTR [rsp+r14*1+0x38],0x20
   14000e438:	cmp    edi,0x7
   14000e43b:	jne    0x14000e451
   14000e43d:	lea    r8,[rip+0x5588]        # 0x1400139cc
   14000e444:	lea    edx,[rdi+0x2d]
   14000e447:	lea    rcx,[rbp-0x79]
   14000e44b:	call   QWORD PTR [rip+0x3fe7]        # 0x140012438
   14000e451:	inc    edi
   14000e453:	inc    r14
   14000e456:	cmp    edi,0x10
   14000e459:	jb     0x14000e3c7
   14000e45f:	lea    rax,[rsp+0x38]
   14000e464:	mov    r9d,esi
   14000e467:	mov    QWORD PTR [rsp+0x28],rax
   14000e46c:	lea    r8,[rip+0x555d]        # 0x1400139d0
   14000e473:	lea    rax,[rbp-0x79]
   14000e477:	mov    edx,0x4e
   14000e47c:	lea    rcx,[rbp-0x39]
   14000e480:	mov    QWORD PTR [rsp+0x20],rax
   14000e485:	call   QWORD PTR [rip+0x3f8d]        # 0x140012418
   14000e48b:	or     r8,0xffffffffffffffff
   14000e48f:	lea    rax,[rbp-0x39]
   14000e493:	xor    ebx,ebx
   14000e495:	inc    r8
   14000e498:	cmp    BYTE PTR [rax+r8*1],bl
   14000e49c:	jne    0x14000e495
   14000e49e:	mov    r9d,DWORD PTR [r13+0x30]
   14000e4a2:	lea    rdx,[rbp-0x39]
   14000e4a6:	mov    rcx,r13
   14000e4a9:	mov    BYTE PTR [rsp+0x20],0x1
   14000e4ae:	call   0x14000d3d0
   14000e4b3:	mov    ecx,eax
   14000e4b5:	test   eax,eax
   14000e4b7:	js     0x14000e4e5
   14000e4b9:	add    esi,0x10
   14000e4bc:	cmp    esi,r15d
   14000e4bf:	jb     0x14000e3bb
   14000e4c5:	jmp    0x14000e3ad
   14000e4ca:	xor    r9d,r9d
   14000e4cd:	mov    BYTE PTR [rsp+0x20],0x1
   14000e4d2:	lea    rdx,[rip+0x54bf]        # 0x140013998
   14000e4d9:	mov    rcx,r13
   14000e4dc:	lea    r8d,[r9+0x24]
   14000e4e0:	call   0x14000d3d0
   14000e4e5:	mov    rcx,QWORD PTR [rbp+0x17]
   14000e4e9:	xor    rcx,rsp
   14000e4ec:	call   0x140011800
   14000e4f1:	mov    rbx,QWORD PTR [rsp+0x148]
   14000e4f9:	add    rsp,0xf0
   14000e500:	pop    r15
   14000e502:	pop    r14
   14000e504:	pop    r13
   14000e506:	pop    r12
   14000e508:	pop    rdi
   14000e509:	pop    rsi
   14000e50a:	pop    rbp
   14000e50b:	ret    
   14000e50c:	int3   
   14000e50d:	int3   
   14000e50e:	int3   
   14000e50f:	int3   
   14000e510:	int3   
   14000e511:	int3   
   14000e512:	int3   
   14000e513:	int3   
   14000e514:	int3   
   14000e515:	int3   
   14000e516:	int3   
   14000e517:	int3   
   14000e518:	int3   
   14000e519:	int3   
   14000e51a:	int3   
   14000e51b:	int3   
   14000e51c:	int3   
   14000e51d:	int3   
   14000e51e:	int3   
   14000e51f:	int3   
   14000e520:	xor    r11d,r11d
   14000e523:	mov    r9,rcx
   14000e526:	mov    r10d,r11d
   14000e529:	lea    eax,[r11+0x1]
   14000e52d:	cmp    WORD PTR [rcx],r11w
   14000e531:	je     0x14000e554
   14000e533:	or     r8,0xffffffffffffffff
   14000e537:	inc    r8
   14000e53a:	cmp    WORD PTR [r9+r8*2],r11w
   14000e53f:	jne    0x14000e537
   14000e541:	inc    r8d
   14000e544:	inc    r10d
   14000e547:	add    eax,r8d
   14000e54a:	lea    r9,[r9+r8*2]
   14000e54e:	cmp    WORD PTR [r9],r11w
   14000e552:	jne    0x14000e533
   14000e554:	test   rdx,rdx
   14000e557:	je     0x14000e55c
   14000e559:	mov    DWORD PTR [rdx],r10d
   14000e55c:	ret    
   14000e55d:	int3   
   14000e55e:	int3   
   14000e55f:	int3   
   14000e560:	int3   
   14000e561:	int3   
   14000e562:	int3   
   14000e563:	int3   
   14000e564:	int3   
   14000e565:	int3   
   14000e566:	int3   
   14000e567:	int3   
   14000e568:	int3   
   14000e569:	int3   
   14000e56a:	int3   
   14000e56b:	int3   
   14000e56c:	int3   
   14000e56d:	int3   
   14000e56e:	int3   
   14000e56f:	int3   
   14000e570:	mov    rax,QWORD PTR [rcx+0x20]
   14000e574:	mov    r10,rdx
   14000e577:	xor    r11d,r11d
   14000e57a:	jmp    0x14000e5b5
   14000e57c:	mov    r8,r10
   14000e57f:	mov    rcx,rax
   14000e582:	sub    r8,rax
   14000e585:	movzx  edx,WORD PTR [rcx]
   14000e588:	movzx  r9d,WORD PTR [rcx+r8*1]
   14000e58d:	sub    edx,r9d
   14000e590:	jne    0x14000e59b
   14000e592:	add    rcx,0x2
   14000e596:	test   r9d,r9d
   14000e599:	jne    0x14000e585
   14000e59b:	test   edx,edx
   14000e59d:	je     0x14000e5be
   14000e59f:	or     rcx,0xffffffffffffffff
   14000e5a3:	inc    rcx
   14000e5a6:	cmp    WORD PTR [rax+rcx*2],r11w
   14000e5ab:	jne    0x14000e5a3
   14000e5ad:	lea    rax,[rax+rcx*2]
   14000e5b1:	add    rax,0x2
   14000e5b5:	cmp    WORD PTR [rax],r11w
   14000e5b9:	jne    0x14000e57c
   14000e5bb:	xor    eax,eax
   14000e5bd:	ret    
   14000e5be:	mov    eax,0x1
   14000e5c3:	ret    
   14000e5c4:	int3   
   14000e5c5:	int3   
   14000e5c6:	int3   
   14000e5c7:	int3   
   14000e5c8:	int3   
   14000e5c9:	int3   
   14000e5ca:	int3   
   14000e5cb:	int3   
   14000e5cc:	int3   
   14000e5cd:	int3   
   14000e5ce:	int3   
   14000e5cf:	int3   
   14000e5d0:	mov    QWORD PTR [rsp+0x8],rbx
   14000e5d5:	mov    QWORD PTR [rsp+0x10],rsi
   14000e5da:	push   rdi
   14000e5db:	sub    rsp,0x20
   14000e5df:	mov    rbx,QWORD PTR [rcx+0x20]
   14000e5e3:	mov    rdi,rdx
   14000e5e6:	xor    esi,esi
   14000e5e8:	jmp    0x14000e60f
   14000e5ea:	mov    rdx,rdi
   14000e5ed:	mov    rcx,rbx
   14000e5f0:	call   QWORD PTR [rip+0x3f0a]        # 0x140012500
   14000e5f6:	test   eax,eax
   14000e5f8:	je     0x14000e626
   14000e5fa:	or     rax,0xffffffffffffffff
   14000e5fe:	inc    rax
   14000e601:	cmp    WORD PTR [rbx+rax*2],si
   14000e605:	jne    0x14000e5fe
   14000e607:	lea    rbx,[rbx+rax*2]
   14000e60b:	add    rbx,0x2
   14000e60f:	cmp    WORD PTR [rbx],si
   14000e612:	jne    0x14000e5ea
   14000e614:	xor    eax,eax
   14000e616:	mov    rbx,QWORD PTR [rsp+0x30]
   14000e61b:	mov    rsi,QWORD PTR [rsp+0x38]
   14000e620:	add    rsp,0x20
   14000e624:	pop    rdi
   14000e625:	ret    
   14000e626:	mov    eax,0x1
   14000e62b:	jmp    0x14000e616
   14000e62d:	int3   
   14000e62e:	int3   
   14000e62f:	int3   
   14000e630:	int3   
   14000e631:	int3   
   14000e632:	int3   
   14000e633:	int3   
   14000e634:	int3   
   14000e635:	int3   
   14000e636:	int3   
   14000e637:	int3   
   14000e638:	int3   
   14000e639:	int3   
   14000e63a:	int3   
   14000e63b:	int3   
   14000e63c:	int3   
   14000e63d:	int3   
   14000e63e:	int3   
   14000e63f:	int3   
   14000e640:	mov    rax,rsp
   14000e643:	mov    QWORD PTR [rax+0x8],rbx
   14000e647:	mov    QWORD PTR [rax+0x18],rbp
   14000e64b:	mov    QWORD PTR [rax+0x20],rsi
   14000e64f:	push   rdi
   14000e650:	sub    rsp,0x20
   14000e654:	xor    ebp,ebp
   14000e656:	mov    rsi,rdx
   14000e659:	mov    rdi,rcx
   14000e65c:	test   rdx,rdx
   14000e65f:	je     0x14000e6ab
   14000e661:	lea    rdx,[rax+0x10]
   14000e665:	mov    rcx,rsi
   14000e668:	call   0x14000e520
   14000e66d:	mov    ebx,eax
   14000e66f:	add    ebx,ebx
   14000e671:	cmp    ebx,DWORD PTR [rdi+0x28]
   14000e674:	jbe    0x14000e68a
   14000e676:	mov    edx,ebx
   14000e678:	mov    rcx,rdi
   14000e67b:	call   0x14000ea50
   14000e680:	test   al,al
   14000e682:	jne    0x14000e68a
   14000e684:	mov    BYTE PTR [rdi+0x2d],bpl
   14000e688:	jmp    0x14000e6c8
   14000e68a:	mov    rcx,QWORD PTR [rdi+0x20]
   14000e68e:	mov    rdx,rsi
   14000e691:	movsxd rbx,ebx
   14000e694:	mov    r8,rbx
   14000e697:	call   0x140011e16
   14000e69c:	mov    eax,DWORD PTR [rsp+0x38]
   14000e6a0:	shr    rbx,1
   14000e6a3:	mov    DWORD PTR [rdi+0x30],ebx
   14000e6a6:	mov    DWORD PTR [rdi+0x34],eax
   14000e6a9:	jmp    0x14000e6c8
   14000e6ab:	mov    rcx,rbp
   14000e6ae:	mov    rax,QWORD PTR [rdi+0x20]
   14000e6b2:	mov    WORD PTR [rcx+rax*1],bp
   14000e6b6:	add    rcx,0x2
   14000e6ba:	cmp    rcx,0x4
   14000e6be:	jl     0x14000e6ae
   14000e6c0:	mov    QWORD PTR [rdi+0x30],0x2
   14000e6c8:	mov    rbx,QWORD PTR [rsp+0x30]
   14000e6cd:	mov    rbp,QWORD PTR [rsp+0x40]
   14000e6d2:	mov    rsi,QWORD PTR [rsp+0x48]
   14000e6d7:	add    rsp,0x20
   14000e6db:	pop    rdi
   14000e6dc:	ret    
   14000e6dd:	int3   
   14000e6de:	int3   
   14000e6df:	int3   
   14000e6e0:	int3   
   14000e6e1:	int3   
   14000e6e2:	int3   
   14000e6e3:	int3   
   14000e6e4:	int3   
   14000e6e5:	int3   
   14000e6e6:	int3   
   14000e6e7:	int3   
   14000e6e8:	int3   
   14000e6e9:	int3   
   14000e6ea:	int3   
   14000e6eb:	int3   
   14000e6ec:	int3   
   14000e6ed:	int3   
   14000e6ee:	int3   
   14000e6ef:	int3   
   14000e6f0:	mov    rax,rsp
   14000e6f3:	mov    QWORD PTR [rax+0x8],rbx
   14000e6f7:	mov    QWORD PTR [rax+0x10],rbp
   14000e6fb:	mov    QWORD PTR [rax+0x18],rsi
   14000e6ff:	mov    QWORD PTR [rax+0x20],rdi
   14000e703:	push   r14
   14000e705:	sub    rsp,0x20
   14000e709:	mov    eax,DWORD PTR [rcx+0x30]
   14000e70c:	xor    r14d,r14d
   14000e70f:	add    eax,eax
   14000e711:	mov    rbp,rdx
   14000e714:	mov    rbx,rcx
   14000e717:	cmp    eax,0x4
   14000e71a:	jne    0x14000e721
   14000e71c:	mov    eax,r14d
   14000e71f:	jmp    0x14000e724
   14000e721:	add    eax,0xfffffffe
   14000e724:	mov    esi,r8d
   14000e727:	mov    edx,0xffffffff
   14000e72c:	mov    edi,eax
   14000e72e:	lea    rcx,[rsi+0x4]
   14000e732:	add    rcx,rdi
   14000e735:	cmp    rcx,rdx
   14000e738:	jbe    0x14000e749
   14000e73a:	mov    ecx,0x216
   14000e73f:	call   QWORD PTR [rip+0x3b8b]        # 0x1400122d0
   14000e745:	xor    eax,eax
   14000e747:	jmp    0x14000e7b6
   14000e749:	cmp    DWORD PTR [rbx+0x28],ecx
   14000e74c:	jae    0x14000e774
   14000e74e:	neg    r9d
   14000e751:	sbb    rax,rax
   14000e754:	and    eax,0x80
   14000e759:	add    rax,rcx
   14000e75c:	cmp    rax,rdx
   14000e75f:	ja     0x14000e73a
   14000e761:	cmp    eax,DWORD PTR [rbx+0x28]
   14000e764:	jbe    0x14000e774
   14000e766:	mov    edx,eax
   14000e768:	mov    rcx,rbx
   14000e76b:	call   0x14000ea50
   14000e770:	test   al,al
   14000e772:	je     0x14000e745
   14000e774:	mov    rcx,QWORD PTR [rbx+0x20]
   14000e778:	mov    r8,rsi
   14000e77b:	add    rcx,rdi
   14000e77e:	mov    rdx,rbp
   14000e781:	call   0x140011e16
   14000e786:	mov    rax,QWORD PTR [rbx+0x20]
   14000e78a:	lea    rcx,[rsi+rdi*1]
   14000e78e:	lea    rdx,[rbx+0x34]
   14000e792:	mov    WORD PTR [rcx+rax*1],r14w
   14000e797:	lea    rcx,[rsi+rdi*1]
   14000e79b:	mov    rax,QWORD PTR [rbx+0x20]
   14000e79f:	mov    WORD PTR [rcx+rax*1+0x2],r14w
   14000e7a5:	mov    rcx,QWORD PTR [rbx+0x20]
   14000e7a9:	call   0x14000e520
   14000e7ae:	mov    DWORD PTR [rbx+0x30],eax
   14000e7b1:	mov    eax,0x1
   14000e7b6:	mov    rbx,QWORD PTR [rsp+0x30]
   14000e7bb:	mov    rbp,QWORD PTR [rsp+0x38]
   14000e7c0:	mov    rsi,QWORD PTR [rsp+0x40]
   14000e7c5:	mov    rdi,QWORD PTR [rsp+0x48]
   14000e7ca:	add    rsp,0x20
   14000e7ce:	pop    r14
   14000e7d0:	ret    
   14000e7d1:	int3   
   14000e7d2:	int3   
   14000e7d3:	int3   
   14000e7d4:	int3   
   14000e7d5:	int3   
   14000e7d6:	int3   
   14000e7d7:	int3   
   14000e7d8:	int3   
   14000e7d9:	int3   
   14000e7da:	int3   
   14000e7db:	int3   
   14000e7dc:	int3   
   14000e7dd:	int3   
   14000e7de:	int3   
   14000e7df:	int3   
   14000e7e0:	mov    rax,rsp
   14000e7e3:	mov    QWORD PTR [rax+0x8],rbx
   14000e7e7:	mov    QWORD PTR [rax+0x10],rbp
   14000e7eb:	mov    QWORD PTR [rax+0x18],rsi
   14000e7ef:	mov    QWORD PTR [rax+0x20],rdi
   14000e7f3:	push   r12
   14000e7f5:	push   r14
   14000e7f7:	push   r15
   14000e7f9:	sub    rsp,0x20
   14000e7fd:	mov    ebx,DWORD PTR [rcx+0x30]
   14000e800:	xor    r12d,r12d
   14000e803:	add    ebx,ebx
   14000e805:	mov    ebp,r8d
   14000e808:	mov    r15,rdx
   14000e80b:	mov    rdi,rcx
   14000e80e:	cmp    ebx,0x4
   14000e811:	jne    0x14000e818
   14000e813:	mov    ebx,r12d
   14000e816:	jmp    0x14000e81b
   14000e818:	add    ebx,0xfffffffe
   14000e81b:	mov    esi,ebx
   14000e81d:	lea    rcx,[rbp+0x4]
   14000e821:	add    rcx,rsi
   14000e824:	mov    edx,0xffffffff
   14000e829:	cmp    rcx,rdx
   14000e82c:	jbe    0x14000e83d
   14000e82e:	mov    ecx,0x216
   14000e833:	call   QWORD PTR [rip+0x3a97]        # 0x1400122d0
   14000e839:	xor    eax,eax
   14000e83b:	jmp    0x14000e8a9
   14000e83d:	cmp    DWORD PTR [rdi+0x28],ecx
   14000e840:	jae    0x14000e868
   14000e842:	neg    r9d
   14000e845:	sbb    rax,rax
   14000e848:	and    eax,0x80
   14000e84d:	add    rax,rcx
   14000e850:	cmp    rax,rdx
   14000e853:	ja     0x14000e82e
   14000e855:	cmp    eax,DWORD PTR [rdi+0x28]
   14000e858:	jbe    0x14000e868
   14000e85a:	mov    edx,eax
   14000e85c:	mov    rcx,rdi
   14000e85f:	call   0x14000ea50
   14000e864:	test   al,al
   14000e866:	je     0x14000e839
   14000e868:	mov    rcx,QWORD PTR [rdi+0x20]
   14000e86c:	mov    r8,rbp
   14000e86f:	add    rcx,rsi
   14000e872:	mov    rdx,r15
   14000e875:	call   0x140011e16
   14000e87a:	mov    rax,QWORD PTR [rdi+0x20]
   14000e87e:	lea    rcx,[rsi+rbp*1]
   14000e882:	shr    ebx,1
   14000e884:	mov    WORD PTR [rcx+rax*1],r12w
   14000e889:	lea    rcx,[rsi+rbp*1]
   14000e88d:	mov    rax,QWORD PTR [rdi+0x20]
   14000e891:	shr    ebp,1
   14000e893:	mov    WORD PTR [rcx+rax*1+0x2],r12w
   14000e899:	mov    eax,0x1
   14000e89e:	add    DWORD PTR [rdi+0x34],eax
   14000e8a1:	lea    ecx,[rbp+0x2]
   14000e8a4:	add    ecx,ebx
   14000e8a6:	mov    DWORD PTR [rdi+0x30],ecx
   14000e8a9:	mov    rbx,QWORD PTR [rsp+0x40]
   14000e8ae:	mov    rbp,QWORD PTR [rsp+0x48]
   14000e8b3:	mov    rsi,QWORD PTR [rsp+0x50]
   14000e8b8:	mov    rdi,QWORD PTR [rsp+0x58]
   14000e8bd:	add    rsp,0x20
   14000e8c1:	pop    r15
   14000e8c3:	pop    r14
   14000e8c5:	pop    r12
   14000e8c7:	ret    
   14000e8c8:	int3   
   14000e8c9:	int3   
   14000e8ca:	int3   
   14000e8cb:	int3   
   14000e8cc:	int3   
   14000e8cd:	int3   
   14000e8ce:	int3   
   14000e8cf:	int3   
   14000e8d0:	mov    QWORD PTR [rsp+0x8],rbx
   14000e8d5:	mov    QWORD PTR [rsp+0x10],rsi
   14000e8da:	push   rdi
   14000e8db:	sub    rsp,0x20
   14000e8df:	mov    rdi,r8
   14000e8e2:	mov    rax,rdx
   14000e8e5:	mov    esi,0x1
   14000e8ea:	test   r8,r8
   14000e8ed:	jne    0x14000e8fc
   14000e8ef:	lea    ecx,[rsi+0x56]
   14000e8f2:	call   QWORD PTR [rip+0x39d8]        # 0x1400122d0
   14000e8f8:	xor    eax,eax
   14000e8fa:	jmp    0x14000e929
   14000e8fc:	mov    ebx,DWORD PTR [rcx+0x30]
   14000e8ff:	cmp    DWORD PTR [r8],ebx
   14000e902:	jb     0x14000e918
   14000e904:	mov    rdx,QWORD PTR [rcx+0x20]
   14000e908:	mov    r8d,ebx
   14000e90b:	add    r8,r8
   14000e90e:	mov    rcx,rax
   14000e911:	call   0x140011e16
   14000e916:	jmp    0x14000e925
   14000e918:	mov    ecx,0x7a
   14000e91d:	call   QWORD PTR [rip+0x39ad]        # 0x1400122d0
   14000e923:	xor    esi,esi
   14000e925:	mov    DWORD PTR [rdi],ebx
   14000e927:	mov    eax,esi
   14000e929:	mov    rbx,QWORD PTR [rsp+0x30]
   14000e92e:	mov    rsi,QWORD PTR [rsp+0x38]
   14000e933:	add    rsp,0x20
   14000e937:	pop    rdi
   14000e938:	ret    
   14000e939:	int3   
   14000e93a:	int3   
   14000e93b:	int3   
   14000e93c:	int3   
   14000e93d:	int3   
   14000e93e:	int3   
   14000e93f:	int3   
   14000e940:	mov    r8,QWORD PTR [rcx+0x20]
   14000e944:	movzx  eax,WORD PTR [r8]
   14000e948:	neg    ax
   14000e94b:	sbb    r9,r9
   14000e94e:	and    r9,r8
   14000e951:	mov    r8,QWORD PTR [rdx+0x20]
   14000e955:	movzx  eax,WORD PTR [r8]
   14000e959:	neg    ax
   14000e95c:	mov    eax,DWORD PTR [rdx+0x34]
   14000e95f:	sbb    r10,r10
   14000e962:	and    r10,r8
   14000e965:	cmp    DWORD PTR [rcx+0x34],eax
   14000e968:	je     0x14000e96d
   14000e96a:	xor    eax,eax
   14000e96c:	ret    
   14000e96d:	xor    r11d,r11d
   14000e970:	jmp    0x14000e9d9
   14000e972:	mov    rdx,r10
   14000e975:	mov    rax,r9
   14000e978:	sub    rdx,r9
   14000e97b:	movzx  ecx,WORD PTR [rax]
   14000e97e:	movzx  r8d,WORD PTR [rax+rdx*1]
   14000e983:	sub    ecx,r8d
   14000e986:	jne    0x14000e991
   14000e988:	add    rax,0x2
   14000e98c:	test   r8d,r8d
   14000e98f:	jne    0x14000e97b
   14000e991:	test   ecx,ecx
   14000e993:	jne    0x14000e96a
   14000e995:	or     rax,0xffffffffffffffff
   14000e999:	inc    rax
   14000e99c:	cmp    WORD PTR [r9+rax*2],r11w
   14000e9a1:	jne    0x14000e999
   14000e9a3:	lea    rcx,[r9+0x2]
   14000e9a7:	lea    rcx,[rcx+rax*2]
   14000e9ab:	movzx  eax,WORD PTR [rcx]
   14000e9ae:	neg    ax
   14000e9b1:	sbb    r9,r9
   14000e9b4:	and    r9,rcx
   14000e9b7:	or     rax,0xffffffffffffffff
   14000e9bb:	inc    rax
   14000e9be:	cmp    WORD PTR [r10+rax*2],r11w
   14000e9c3:	jne    0x14000e9bb
   14000e9c5:	lea    rcx,[r10+0x2]
   14000e9c9:	lea    rcx,[rcx+rax*2]
   14000e9cd:	movzx  eax,WORD PTR [rcx]
   14000e9d0:	neg    ax
   14000e9d3:	sbb    r10,r10
   14000e9d6:	and    r10,rcx
   14000e9d9:	test   r9,r9
   14000e9dc:	jne    0x14000e972
   14000e9de:	lea    eax,[r9+0x1]
   14000e9e2:	ret    
   14000e9e3:	int3   
   14000e9e4:	int3   
   14000e9e5:	int3   
   14000e9e6:	int3   
   14000e9e7:	int3   
   14000e9e8:	int3   
   14000e9e9:	int3   
   14000e9ea:	int3   
   14000e9eb:	int3   
   14000e9ec:	int3   
   14000e9ed:	int3   
   14000e9ee:	int3   
   14000e9ef:	int3   
   14000e9f0:	cmp    edx,DWORD PTR [rcx+0x28]
   14000e9f3:	ja     0x14000e9f8
   14000e9f5:	mov    al,0x1
   14000e9f7:	ret    
   14000e9f8:	jmp    0x14000ea50
   14000e9fd:	int3   
   14000e9fe:	int3   
   14000e9ff:	int3   
   14000ea00:	int3   
   14000ea01:	int3   
   14000ea02:	int3   
   14000ea03:	int3   
   14000ea04:	int3   
   14000ea05:	int3   
   14000ea06:	int3   
   14000ea07:	int3   
   14000ea08:	int3   
   14000ea09:	int3   
   14000ea0a:	int3   
   14000ea0b:	int3   
   14000ea0c:	int3   
   14000ea0d:	int3   
   14000ea0e:	int3   
   14000ea0f:	int3   
   14000ea10:	sub    rsp,0x28
   14000ea14:	cmp    edx,DWORD PTR [rcx+0x28]
   14000ea17:	ja     0x14000ea20
   14000ea19:	mov    al,0x1
   14000ea1b:	add    rsp,0x28
   14000ea1f:	ret    
   14000ea20:	lea    eax,[rdx+r8*1]
   14000ea24:	cmp    eax,edx
   14000ea26:	jae    0x14000ea3a
   14000ea28:	mov    ecx,0x8
   14000ea2d:	call   QWORD PTR [rip+0x389d]        # 0x1400122d0
   14000ea33:	xor    al,al
   14000ea35:	add    rsp,0x28
   14000ea39:	ret    
   14000ea3a:	mov    edx,eax
   14000ea3c:	add    rsp,0x28
   14000ea40:	jmp    0x14000ea50
   14000ea45:	int3   
   14000ea46:	int3   
   14000ea47:	int3   
   14000ea48:	int3   
   14000ea49:	int3   
   14000ea4a:	int3   
   14000ea4b:	int3   
   14000ea4c:	int3   
   14000ea4d:	int3   
   14000ea4e:	int3   
   14000ea4f:	int3   
   14000ea50:	mov    QWORD PTR [rsp+0x8],rbx
   14000ea55:	mov    QWORD PTR [rsp+0x10],rsi
   14000ea5a:	push   rdi
   14000ea5b:	sub    rsp,0x20
   14000ea5f:	mov    rdi,rcx
   14000ea62:	mov    esi,edx
   14000ea64:	cmp    edx,DWORD PTR [rcx+0x28]
   14000ea67:	jbe    0x14000ead3
   14000ea69:	cmp    BYTE PTR [rcx+0x2c],0x0
   14000ea6d:	je     0x14000ea89
   14000ea6f:	call   QWORD PTR [rip+0x3773]        # 0x1400121e8
   14000ea75:	mov    r8,QWORD PTR [rdi+0x20]
   14000ea79:	mov    r9d,esi
   14000ea7c:	mov    rcx,rax
   14000ea7f:	xor    edx,edx
   14000ea81:	call   QWORD PTR [rip+0x3769]        # 0x1400121f0
   14000ea87:	jmp    0x14000ea9d
   14000ea89:	call   QWORD PTR [rip+0x3759]        # 0x1400121e8
   14000ea8f:	mov    r8,rsi
   14000ea92:	xor    edx,edx
   14000ea94:	mov    rcx,rax
   14000ea97:	call   QWORD PTR [rip+0x3743]        # 0x1400121e0
   14000ea9d:	mov    rbx,rax
   14000eaa0:	test   rax,rax
   14000eaa3:	jne    0x14000eab2
   14000eaa5:	lea    ecx,[rax+0x8]
   14000eaa8:	call   QWORD PTR [rip+0x3822]        # 0x1400122d0
   14000eaae:	xor    al,al
   14000eab0:	jmp    0x14000ead5
   14000eab2:	cmp    BYTE PTR [rdi+0x2c],0x0
   14000eab6:	jne    0x14000eacc
   14000eab8:	mov    r8d,DWORD PTR [rdi+0x28]
   14000eabc:	mov    rcx,rbx
   14000eabf:	mov    rdx,QWORD PTR [rdi+0x20]
   14000eac3:	call   0x140011e16
   14000eac8:	mov    BYTE PTR [rdi+0x2c],0x1
   14000eacc:	mov    QWORD PTR [rdi+0x20],rbx
   14000ead0:	mov    DWORD PTR [rdi+0x28],esi
   14000ead3:	mov    al,0x1
   14000ead5:	mov    rbx,QWORD PTR [rsp+0x30]
   14000eada:	mov    rsi,QWORD PTR [rsp+0x38]
   14000eadf:	add    rsp,0x20
   14000eae3:	pop    rdi
   14000eae4:	ret    
   14000eae5:	int3   
   14000eae6:	int3   
   14000eae7:	int3   
   14000eae8:	int3   
   14000eae9:	int3   
   14000eaea:	int3   
   14000eaeb:	int3   
   14000eaec:	int3   
   14000eaed:	int3   
   14000eaee:	int3   
   14000eaef:	int3   
   14000eaf0:	rex push rbx
   14000eaf2:	sub    rsp,0x20
   14000eaf6:	cmp    BYTE PTR [rcx+0x2c],0x0
   14000eafa:	mov    rbx,rcx
   14000eafd:	mov    BYTE PTR [rcx],0x0
   14000eb00:	je     0x14000eb16
   14000eb02:	call   0x14000eb30
   14000eb07:	mov    QWORD PTR [rbx+0x20],rbx
   14000eb0b:	mov    DWORD PTR [rbx+0x28],0x20
   14000eb12:	mov    BYTE PTR [rbx+0x2c],0x0
   14000eb16:	add    rsp,0x20
   14000eb1a:	pop    rbx
   14000eb1b:	ret    
   14000eb1c:	int3   
   14000eb1d:	int3   
   14000eb1e:	int3   
   14000eb1f:	int3   
   14000eb20:	int3   
   14000eb21:	int3   
   14000eb22:	int3   
   14000eb23:	int3   
   14000eb24:	int3   
   14000eb25:	int3   
   14000eb26:	int3   
   14000eb27:	int3   
   14000eb28:	int3   
   14000eb29:	int3   
   14000eb2a:	int3   
   14000eb2b:	int3   
   14000eb2c:	int3   
   14000eb2d:	int3   
   14000eb2e:	int3   
   14000eb2f:	int3   
   14000eb30:	rex push rbx
   14000eb32:	sub    rsp,0x20
   14000eb36:	mov    rbx,rcx
   14000eb39:	call   QWORD PTR [rip+0x36a9]        # 0x1400121e8
   14000eb3f:	mov    r8,QWORD PTR [rbx+0x20]
   14000eb43:	xor    edx,edx
   14000eb45:	mov    rcx,rax
   14000eb48:	add    rsp,0x20
   14000eb4c:	pop    rbx
   14000eb4d:	rex.W jmp QWORD PTR [rip+0x3684]        # 0x1400121d8
   14000eb54:	int3   
   14000eb55:	int3   
   14000eb56:	int3   
   14000eb57:	int3   
   14000eb58:	int3   
   14000eb59:	int3   
   14000eb5a:	int3   
   14000eb5b:	int3   
   14000eb5c:	int3   
   14000eb5d:	int3   
   14000eb5e:	int3   
   14000eb5f:	int3   
   14000eb60:	mov    rax,rsp
   14000eb63:	mov    QWORD PTR [rax+0x8],rbx
   14000eb67:	mov    QWORD PTR [rax+0x10],rbp
   14000eb6b:	mov    QWORD PTR [rax+0x18],rsi
   14000eb6f:	mov    QWORD PTR [rax+0x20],rdi
   14000eb73:	push   r12
   14000eb75:	push   r14
   14000eb77:	push   r15
   14000eb79:	sub    rsp,0x20
   14000eb7d:	mov    edi,r9d
   14000eb80:	mov    r15,rdx
   14000eb83:	mov    esi,r8d
   14000eb86:	mov    rbx,rcx
   14000eb89:	mov    ecx,DWORD PTR [rcx+0x28]
   14000eb8c:	xor    r12d,r12d
   14000eb8f:	lea    rdx,[rdi+rsi*1]
   14000eb93:	lea    rax,[rdx+0x2]
   14000eb97:	cmp    rcx,rax
   14000eb9a:	jae    0x14000ebe5
   14000eb9c:	cmp    BYTE PTR [rsp+0x60],r12b
   14000eba1:	je     0x14000eba9
   14000eba3:	sub    rdx,0xffffffffffffff80
   14000eba7:	jmp    0x14000ebad
   14000eba9:	add    rdx,0x2
   14000ebad:	mov    eax,0xffffffff
   14000ebb2:	cmp    rdx,rax
   14000ebb5:	jbe    0x14000ebbe
   14000ebb7:	mov    eax,0x80070216
   14000ebbc:	jmp    0x14000ec0a
   14000ebbe:	cmp    edx,ecx
   14000ebc0:	jbe    0x14000ebe5
   14000ebc2:	mov    rcx,rbx
   14000ebc5:	call   0x14000ea50
   14000ebca:	test   al,al
   14000ebcc:	jne    0x14000ebe5
   14000ebce:	call   QWORD PTR [rip+0x3724]        # 0x1400122f8
   14000ebd4:	mov    ecx,eax
   14000ebd6:	movzx  eax,ax
   14000ebd9:	or     eax,0x80070000
   14000ebde:	test   ecx,ecx
   14000ebe0:	cmovle eax,ecx
   14000ebe3:	jmp    0x14000ec0a
   14000ebe5:	mov    rcx,QWORD PTR [rbx+0x20]
   14000ebe9:	mov    r8,rsi
   14000ebec:	add    rcx,rdi
   14000ebef:	mov    rdx,r15
   14000ebf2:	call   0x140011e16
   14000ebf7:	mov    rax,QWORD PTR [rbx+0x20]
   14000ebfb:	lea    ecx,[rsi+rdi*1]
   14000ebfe:	shr    ecx,1
   14000ec00:	mov    DWORD PTR [rbx+0x30],ecx
   14000ec03:	mov    WORD PTR [rax+rcx*2],r12w
   14000ec08:	xor    eax,eax
   14000ec0a:	mov    rbx,QWORD PTR [rsp+0x40]
   14000ec0f:	mov    rbp,QWORD PTR [rsp+0x48]
   14000ec14:	mov    rsi,QWORD PTR [rsp+0x50]
   14000ec19:	mov    rdi,QWORD PTR [rsp+0x58]
   14000ec1e:	add    rsp,0x20
   14000ec22:	pop    r15
   14000ec24:	pop    r14
   14000ec26:	pop    r12
   14000ec28:	ret    
   14000ec29:	int3   
   14000ec2a:	int3   
   14000ec2b:	int3   
   14000ec2c:	int3   
   14000ec2d:	int3   
   14000ec2e:	int3   
   14000ec2f:	int3   
   14000ec30:	mov    rax,rsp
   14000ec33:	mov    QWORD PTR [rax+0x8],rbx
   14000ec37:	mov    QWORD PTR [rax+0x10],rbp
   14000ec3b:	mov    QWORD PTR [rax+0x18],rsi
   14000ec3f:	mov    QWORD PTR [rax+0x20],rdi
   14000ec43:	push   r12
   14000ec45:	push   r14
   14000ec47:	push   r15
   14000ec49:	sub    rsp,0x30
   14000ec4d:	xor    r12d,r12d
   14000ec50:	mov    r14d,r9d
   14000ec53:	mov    ebp,r8d
   14000ec56:	mov    r15,rdx
   14000ec59:	mov    rbx,rcx
   14000ec5c:	mov    esi,r9d
   14000ec5f:	mov    ecx,DWORD PTR [rcx+0x28]
   14000ec62:	mov    edi,r12d
   14000ec65:	lea    rdx,[r14+rbp*2]
   14000ec69:	lea    rax,[rdx+0x2]
   14000ec6d:	cmp    rcx,rax
   14000ec70:	jae    0x14000ecc1
   14000ec72:	cmp    BYTE PTR [rsp+0x70],r12b
   14000ec77:	je     0x14000ec7f
   14000ec79:	sub    rdx,0xffffffffffffff80
   14000ec7d:	jmp    0x14000ec83
   14000ec7f:	add    rdx,0x2
   14000ec83:	mov    eax,0xffffffff
   14000ec88:	cmp    rdx,rax
   14000ec8b:	jbe    0x14000ec97
   14000ec8d:	mov    eax,0x80070216
   14000ec92:	jmp    0x14000ed45
   14000ec97:	cmp    edx,ecx
   14000ec99:	jbe    0x14000ecc1
   14000ec9b:	mov    rcx,rbx
   14000ec9e:	call   0x14000ea50
   14000eca3:	test   al,al
   14000eca5:	jne    0x14000ecc1
   14000eca7:	call   QWORD PTR [rip+0x364b]        # 0x1400122f8
   14000ecad:	mov    ecx,eax
   14000ecaf:	movzx  eax,ax
   14000ecb2:	or     eax,0x80070000
   14000ecb7:	test   ecx,ecx
   14000ecb9:	cmovle eax,ecx
   14000ecbc:	jmp    0x14000ed45
   14000ecc1:	test   ebp,ebp
   14000ecc3:	je     0x14000ed2e
   14000ecc5:	add    rsi,QWORD PTR [rbx+0x20]
   14000ecc9:	mov    r9d,ebp
   14000eccc:	mov    r8,r15
   14000eccf:	mov    eax,DWORD PTR [rbx+0x28]
   14000ecd2:	mov    DWORD PTR [rsp+0x28],eax
   14000ecd6:	mov    QWORD PTR [rsp+0x20],rsi
   14000ecdb:	cmp    BYTE PTR [rsp+0x78],r12b
   14000ece0:	jne    0x14000ed17
   14000ece2:	mov    edx,0x8
   14000ece7:	mov    ecx,0xfde9
   14000ecec:	call   QWORD PTR [rip+0x34de]        # 0x1400121d0
   14000ecf2:	mov    edi,eax
   14000ecf4:	test   eax,eax
   14000ecf6:	jne    0x14000ed2e
   14000ecf8:	call   QWORD PTR [rip+0x35fa]        # 0x1400122f8
   14000ecfe:	cmp    eax,0x459
   14000ed03:	jne    0x14000eca7
   14000ed05:	mov    eax,DWORD PTR [rbx+0x28]
   14000ed08:	mov    r9d,ebp
   14000ed0b:	mov    DWORD PTR [rsp+0x28],eax
   14000ed0f:	mov    r8,r15
   14000ed12:	mov    QWORD PTR [rsp+0x20],rsi
   14000ed17:	mov    edx,0x9
   14000ed1c:	xor    ecx,ecx
   14000ed1e:	call   QWORD PTR [rip+0x34ac]        # 0x1400121d0
   14000ed24:	mov    edi,eax
   14000ed26:	test   eax,eax
   14000ed28:	je     0x14000eca7
   14000ed2e:	shr    r14d,1
   14000ed31:	lea    eax,[r14+rdi*1]
   14000ed35:	mov    DWORD PTR [rbx+0x30],eax
   14000ed38:	mov    ecx,eax
   14000ed3a:	mov    rax,QWORD PTR [rbx+0x20]
   14000ed3e:	mov    WORD PTR [rax+rcx*2],r12w
   14000ed43:	xor    eax,eax
   14000ed45:	mov    rbx,QWORD PTR [rsp+0x50]
   14000ed4a:	mov    rbp,QWORD PTR [rsp+0x58]
   14000ed4f:	mov    rsi,QWORD PTR [rsp+0x60]
   14000ed54:	mov    rdi,QWORD PTR [rsp+0x68]
   14000ed59:	add    rsp,0x30
   14000ed5d:	pop    r15
   14000ed5f:	pop    r14
   14000ed61:	pop    r12
   14000ed63:	ret    
   14000ed64:	int3   
   14000ed65:	int3   
   14000ed66:	int3   
   14000ed67:	int3   
   14000ed68:	int3   
   14000ed69:	int3   
   14000ed6a:	int3   
   14000ed6b:	int3   
   14000ed6c:	int3   
   14000ed6d:	int3   
   14000ed6e:	int3   
   14000ed6f:	int3   
   14000ed70:	mov    QWORD PTR [rsp+0x8],rbx
   14000ed75:	mov    QWORD PTR [rsp+0x10],rsi
   14000ed7a:	push   rdi
   14000ed7b:	sub    rsp,0x20
   14000ed7f:	xor    ebx,ebx
   14000ed81:	mov    rsi,r8
   14000ed84:	mov    r9,rdx
   14000ed87:	test   r8,r8
   14000ed8a:	jne    0x14000ed93
   14000ed8c:	mov    eax,0x80070057
   14000ed91:	jmp    0x14000edc1
   14000ed93:	mov    eax,DWORD PTR [rcx+0x30]
   14000ed96:	lea    edi,[rax*2+0x2]
   14000ed9d:	cmp    DWORD PTR [r8],edi
   14000eda0:	jb     0x14000edb8
   14000eda2:	test   rdx,rdx
   14000eda5:	je     0x14000edb8
   14000eda7:	mov    rdx,QWORD PTR [rcx+0x20]
   14000edab:	mov    rcx,r9
   14000edae:	mov    r8d,edi
   14000edb1:	call   0x140011e16
   14000edb6:	jmp    0x14000edbd
   14000edb8:	mov    ebx,0x8007007a
   14000edbd:	mov    DWORD PTR [rsi],edi
   14000edbf:	mov    eax,ebx
   14000edc1:	mov    rbx,QWORD PTR [rsp+0x30]
   14000edc6:	mov    rsi,QWORD PTR [rsp+0x38]
   14000edcb:	add    rsp,0x20
   14000edcf:	pop    rdi
   14000edd0:	ret    
   14000edd1:	int3   
   14000edd2:	int3   
   14000edd3:	int3   
   14000edd4:	int3   
   14000edd5:	int3   
   14000edd6:	int3   
   14000edd7:	int3   
   14000edd8:	int3   
   14000edd9:	int3   
   14000edda:	int3   
   14000eddb:	int3   
   14000eddc:	int3   
   14000eddd:	int3   
   14000edde:	int3   
   14000eddf:	int3   
   14000ede0:	rex push rbx
   14000ede2:	sub    rsp,0x20
   14000ede6:	mov    rbx,rcx
   14000ede9:	mov    rcx,QWORD PTR [rcx+0x20]
   14000eded:	jmp    0x14000edfb
   14000edef:	mov    ecx,0x20
   14000edf4:	mov    WORD PTR [rax],cx
   14000edf7:	lea    rcx,[rax+0x2]
   14000edfb:	mov    edx,0x2b
   14000ee00:	call   QWORD PTR [rip+0x363a]        # 0x140012440
   14000ee06:	test   rax,rax
   14000ee09:	jne    0x14000edef
   14000ee0b:	mov    rcx,rbx
   14000ee0e:	add    rsp,0x20
   14000ee12:	pop    rbx
   14000ee13:	jmp    0x14000ee20
   14000ee18:	int3   
   14000ee19:	int3   
   14000ee1a:	int3   
   14000ee1b:	int3   
   14000ee1c:	int3   
   14000ee1d:	int3   
   14000ee1e:	int3   
   14000ee1f:	int3   
   14000ee20:	mov    rax,rsp
   14000ee23:	mov    QWORD PTR [rax+0x8],rbx
   14000ee27:	mov    QWORD PTR [rax+0x10],rbp
   14000ee2b:	mov    QWORD PTR [rax+0x18],rsi
   14000ee2f:	mov    QWORD PTR [rax+0x20],rdi
   14000ee33:	push   r13
   14000ee35:	push   r14
   14000ee37:	push   r15
   14000ee39:	sub    rsp,0x20
   14000ee3d:	xor    esi,esi
   14000ee3f:	mov    r13,rcx
   14000ee42:	mov    rcx,QWORD PTR [rcx+0x20]
   14000ee46:	mov    r14b,sil
   14000ee49:	lea    edx,[rsi+0x25]
   14000ee4c:	call   QWORD PTR [rip+0x35ee]        # 0x140012440
   14000ee52:	mov    rdi,rax
   14000ee55:	mov    r15,rax
   14000ee58:	test   rax,rax
   14000ee5b:	je     0x14000f088
   14000ee61:	lea    rbx,[rdi+0x2]
   14000ee65:	mov    ecx,0xffdf
   14000ee6a:	movzx  eax,WORD PTR [rbx]
   14000ee6d:	sub    ax,0x55
   14000ee71:	test   cx,ax
   14000ee74:	jne    0x14000ef70
   14000ee7a:	movzx  ecx,WORD PTR [rdi+0x4]
   14000ee7e:	call   QWORD PTR [rip+0x35c4]        # 0x140012448
   14000ee84:	test   eax,eax
   14000ee86:	je     0x14000ef70
   14000ee8c:	movzx  ecx,WORD PTR [rdi+0x6]
   14000ee90:	call   QWORD PTR [rip+0x35b2]        # 0x140012448
   14000ee96:	test   eax,eax
   14000ee98:	je     0x14000ef70
   14000ee9e:	movzx  ecx,WORD PTR [rdi+0x8]
   14000eea2:	call   QWORD PTR [rip+0x35a0]        # 0x140012448
   14000eea8:	test   eax,eax
   14000eeaa:	je     0x14000ef70
   14000eeb0:	movzx  ecx,WORD PTR [rdi+0xa]
   14000eeb4:	call   QWORD PTR [rip+0x358e]        # 0x140012448
   14000eeba:	test   eax,eax
   14000eebc:	je     0x14000ef70
   14000eec2:	movzx  eax,WORD PTR [rdi+0x4]
   14000eec6:	cmp    ax,0x39
   14000eeca:	jbe    0x14000eedf
   14000eecc:	cmp    ax,0x61
   14000eed0:	movzx  eax,ax
   14000eed3:	jb     0x14000eeda
   14000eed5:	sub    eax,0x57
   14000eed8:	jmp    0x14000eee5
   14000eeda:	sub    eax,0x37
   14000eedd:	jmp    0x14000eee5
   14000eedf:	movzx  eax,ax
   14000eee2:	sub    eax,0x30
   14000eee5:	movzx  ecx,WORD PTR [rdi+0x6]
   14000eee9:	movzx  r8d,cx
   14000eeed:	cmp    cx,0x39
   14000eef1:	jbe    0x14000ef05
   14000eef3:	cmp    cx,0x61
   14000eef7:	jb     0x14000eeff
   14000eef9:	sub    r8d,0x57
   14000eefd:	jmp    0x14000ef09
   14000eeff:	sub    r8d,0x37
   14000ef03:	jmp    0x14000ef09
   14000ef05:	sub    r8d,0x30
   14000ef09:	movzx  ecx,WORD PTR [rdi+0x8]
   14000ef0d:	movzx  edx,cx
   14000ef10:	cmp    cx,0x39
   14000ef14:	jbe    0x14000ef26
   14000ef16:	cmp    cx,0x61
   14000ef1a:	jb     0x14000ef21
   14000ef1c:	sub    edx,0x57
   14000ef1f:	jmp    0x14000ef29
   14000ef21:	sub    edx,0x37
   14000ef24:	jmp    0x14000ef29
   14000ef26:	sub    edx,0x30
   14000ef29:	movzx  ecx,WORD PTR [rdi+0xa]
   14000ef2d:	cmp    cx,0x39
   14000ef31:	jbe    0x14000ef46
   14000ef33:	cmp    cx,0x61
   14000ef37:	movzx  ecx,cx
   14000ef3a:	jb     0x14000ef41
   14000ef3c:	sub    ecx,0x57
   14000ef3f:	jmp    0x14000ef4c
   14000ef41:	sub    ecx,0x37
   14000ef44:	jmp    0x14000ef4c
   14000ef46:	movzx  ecx,cx
   14000ef49:	sub    ecx,0x30
   14000ef4c:	shl    ax,0x4
   14000ef50:	add    ax,r8w
   14000ef54:	shl    ax,0x4
   14000ef58:	add    ax,dx
   14000ef5b:	shl    ax,0x4
   14000ef5f:	add    ax,cx
   14000ef62:	mov    WORD PTR [r15],ax
   14000ef66:	add    r15,0x2
   14000ef6a:	add    rdi,0xc
   14000ef6e:	jmp    0x14000efdd
   14000ef70:	movzx  ecx,WORD PTR [rbx]
   14000ef73:	call   QWORD PTR [rip+0x34cf]        # 0x140012448
   14000ef79:	test   eax,eax
   14000ef7b:	je     0x14000efe2
   14000ef7d:	movzx  ecx,WORD PTR [rdi+0x4]
   14000ef81:	call   QWORD PTR [rip+0x34c1]        # 0x140012448
   14000ef87:	test   eax,eax
   14000ef89:	je     0x14000efe2
   14000ef8b:	cmp    WORD PTR [rbx],0x39
   14000ef8f:	movzx  eax,WORD PTR [rbx]
   14000ef92:	jbe    0x14000efa4
   14000ef94:	cmp    WORD PTR [rbx],0x61
   14000ef98:	jb     0x14000ef9f
   14000ef9a:	sub    eax,0x57
   14000ef9d:	jmp    0x14000efa7
   14000ef9f:	sub    eax,0x37
   14000efa2:	jmp    0x14000efa7
   14000efa4:	sub    eax,0x30
   14000efa7:	movzx  ecx,WORD PTR [rdi+0x4]
   14000efab:	cmp    cx,0x39
   14000efaf:	jbe    0x14000efc4
   14000efb1:	cmp    cx,0x61
   14000efb5:	movzx  ecx,cx
   14000efb8:	jb     0x14000efbf
   14000efba:	sub    ecx,0x57
   14000efbd:	jmp    0x14000efca
   14000efbf:	sub    ecx,0x37
   14000efc2:	jmp    0x14000efca
   14000efc4:	movzx  ecx,cx
   14000efc7:	sub    ecx,0x30
   14000efca:	shl    ax,0x4
   14000efce:	add    ax,cx
   14000efd1:	mov    WORD PTR [r15],ax
   14000efd5:	add    r15,0x2
   14000efd9:	add    rdi,0x6
   14000efdd:	mov    r14b,0x1
   14000efe0:	jmp    0x14000eff5
   14000efe2:	test   r14b,r14b
   14000efe5:	je     0x14000efee
   14000efe7:	movzx  eax,WORD PTR [rdi]
   14000efea:	mov    WORD PTR [r15],ax
   14000efee:	add    r15,0x2
   14000eff2:	mov    rdi,rbx
   14000eff5:	mov    edx,0x25
   14000effa:	mov    rcx,rdi
   14000effd:	call   QWORD PTR [rip+0x343d]        # 0x140012440
   14000f003:	mov    rbp,rax
   14000f006:	test   r14b,r14b
   14000f009:	je     0x14000f034
   14000f00b:	test   rax,rax
   14000f00e:	je     0x14000f041
   14000f010:	mov    rcx,rax
   14000f013:	sub    rcx,rdi
   14000f016:	sar    rcx,1
   14000f019:	test   ecx,ecx
   14000f01b:	je     0x14000f034
   14000f01d:	mov    ebx,ecx
   14000f01f:	mov    rdx,rdi
   14000f022:	add    rbx,rbx
   14000f025:	mov    rcx,r15
   14000f028:	mov    r8,rbx
   14000f02b:	call   QWORD PTR [rip+0x33ff]        # 0x140012430
   14000f031:	add    r15,rbx
   14000f034:	mov    rdi,rbp
   14000f037:	test   rbp,rbp
   14000f03a:	je     0x14000f066
   14000f03c:	jmp    0x14000ee61
   14000f041:	mov    r8d,DWORD PTR [r13+0x30]
   14000f045:	mov    rax,rdi
   14000f048:	sub    rax,QWORD PTR [r13+0x20]
   14000f04c:	mov    rdx,rdi
   14000f04f:	sar    rax,1
   14000f052:	mov    rcx,r15
   14000f055:	sub    r8,rax
   14000f058:	lea    r8,[r8*2+0x2]
   14000f060:	call   QWORD PTR [rip+0x33ca]        # 0x140012430
   14000f066:	test   r14b,r14b
   14000f069:	je     0x14000f088
   14000f06b:	mov    rcx,QWORD PTR [r13+0x20]
   14000f06f:	test   rcx,rcx
   14000f072:	je     0x14000f084
   14000f074:	mov    edx,DWORD PTR [r13+0x28]
   14000f078:	shr    rdx,1
   14000f07b:	call   QWORD PTR [rip+0x330f]        # 0x140012390
   14000f081:	mov    rsi,rax
   14000f084:	mov    DWORD PTR [r13+0x30],esi
   14000f088:	mov    rbx,QWORD PTR [rsp+0x40]
   14000f08d:	xor    eax,eax
   14000f08f:	mov    rbp,QWORD PTR [rsp+0x48]
   14000f094:	mov    rsi,QWORD PTR [rsp+0x50]
   14000f099:	mov    rdi,QWORD PTR [rsp+0x58]
   14000f09e:	add    rsp,0x20
   14000f0a2:	pop    r15
   14000f0a4:	pop    r14
   14000f0a6:	pop    r13
   14000f0a8:	ret    
   14000f0a9:	int3   
   14000f0aa:	int3   
   14000f0ab:	int3   
   14000f0ac:	int3   
   14000f0ad:	int3   
   14000f0ae:	int3   
   14000f0af:	int3   
   14000f0b0:	mov    QWORD PTR [rsp+0x10],rbx
   14000f0b5:	mov    QWORD PTR [rsp+0x18],rsi
   14000f0ba:	mov    QWORD PTR [rsp+0x20],rdi
   14000f0bf:	push   rbp
   14000f0c0:	push   r12
   14000f0c2:	push   r13
   14000f0c4:	push   r14
   14000f0c6:	push   r15
   14000f0c8:	mov    rbp,rsp
   14000f0cb:	sub    rsp,0x80
   14000f0d2:	mov    rax,QWORD PTR [rip+0xcf5f]        # 0x14001c038
   14000f0d9:	xor    rax,rsp
   14000f0dc:	mov    QWORD PTR [rbp-0x8],rax
   14000f0e0:	mov    r12,QWORD PTR [rcx+0x20]
   14000f0e4:	lea    rax,[rbp-0x40]
   14000f0e8:	mov    r15,rcx
   14000f0eb:	mov    QWORD PTR [rbp-0x20],rax
   14000f0ef:	xor    ecx,ecx
   14000f0f1:	mov    DWORD PTR [rbp-0x18],0x20
   14000f0f8:	mov    QWORD PTR [rbp-0x40],rcx
   14000f0fc:	mov    r14d,ecx
   14000f0ff:	mov    WORD PTR [rbp-0x14],0x100
   14000f105:	mov    edi,ecx
   14000f107:	mov    DWORD PTR [rbp-0x10],ecx
   14000f10a:	mov    sil,cl
   14000f10d:	movzx  ebx,WORD PTR [r12]
   14000f112:	test   bx,bx
   14000f115:	je     0x14000f32f
   14000f11b:	mov    r13,r12
   14000f11e:	movzx  ecx,bx
   14000f121:	call   QWORD PTR [rip+0x3329]        # 0x140012450
   14000f127:	xor    r8d,r8d
   14000f12a:	lea    ecx,[r8+0x1]
   14000f12e:	test   eax,eax
   14000f130:	jne    0x14000f2b4
   14000f136:	lea    eax,[rbx-0x2e]
   14000f139:	cmp    ax,cx
   14000f13c:	jbe    0x14000f2b4
   14000f142:	test   sil,sil
   14000f145:	jne    0x14000f180
   14000f147:	mov    rdx,QWORD PTR [r15+0x20]
   14000f14b:	mov    sil,cl
   14000f14e:	test   rdx,rdx
   14000f151:	je     0x14000f173
   14000f153:	mov    BYTE PTR [rsp+0x20],cl
   14000f157:	lea    r8d,[r14+r14*1]
   14000f15b:	lea    rcx,[rbp-0x40]
   14000f15f:	xor    r9d,r9d
   14000f162:	call   0x14000eb60
   14000f167:	mov    edi,eax
   14000f169:	mov    ecx,0x1
   14000f16e:	xor    r8d,r8d
   14000f171:	jmp    0x14000f178
   14000f173:	mov    edi,0x80070057
   14000f178:	test   edi,edi
   14000f17a:	js     0x14000f320
   14000f180:	mov    eax,0x25
   14000f185:	mov    edx,0x8000000f
   14000f18a:	mov    WORD PTR [rbp-0x50],ax
   14000f18e:	mov    eax,0x100
   14000f193:	cmp    bx,ax
   14000f196:	jae    0x14000f1eb
   14000f198:	movzx  eax,bx
   14000f19b:	and    eax,edx
   14000f19d:	jge    0x14000f1a6
   14000f19f:	sub    eax,ecx
   14000f1a1:	or     eax,0xfffffff0
   14000f1a4:	add    eax,ecx
   14000f1a6:	cmp    eax,0x9
   14000f1a9:	jle    0x14000f1b0
   14000f1ab:	add    eax,0x37
   14000f1ae:	jmp    0x14000f1b3
   14000f1b0:	add    eax,0x30
   14000f1b3:	movsx  eax,al
   14000f1b6:	shr    bx,0x4
   14000f1ba:	mov    WORD PTR [rbp-0x4c],ax
   14000f1be:	movzx  eax,bx
   14000f1c1:	and    eax,edx
   14000f1c3:	jge    0x14000f1cc
   14000f1c5:	sub    eax,ecx
   14000f1c7:	or     eax,0xfffffff0
   14000f1ca:	add    eax,ecx
   14000f1cc:	cmp    eax,0x9
   14000f1cf:	jle    0x14000f1d6
   14000f1d1:	add    eax,0x37
   14000f1d4:	jmp    0x14000f1d9
   14000f1d6:	add    eax,0x30
   14000f1d9:	movsx  eax,al
   14000f1dc:	mov    r8d,0x3
   14000f1e2:	mov    WORD PTR [rbp-0x4e],ax
   14000f1e6:	jmp    0x14000f28e
   14000f1eb:	mov    eax,0x75
   14000f1f0:	mov    WORD PTR [rbp-0x4e],ax
   14000f1f4:	movzx  eax,bx
   14000f1f7:	and    eax,edx
   14000f1f9:	jge    0x14000f202
   14000f1fb:	sub    eax,ecx
   14000f1fd:	or     eax,0xfffffff0
   14000f200:	add    eax,ecx
   14000f202:	cmp    eax,0x9
   14000f205:	jle    0x14000f20c
   14000f207:	add    eax,0x37
   14000f20a:	jmp    0x14000f20f
   14000f20c:	add    eax,0x30
   14000f20f:	movsx  eax,al
   14000f212:	shr    bx,0x4
   14000f216:	mov    WORD PTR [rbp-0x46],ax
   14000f21a:	movzx  eax,bx
   14000f21d:	and    eax,edx
   14000f21f:	jge    0x14000f228
   14000f221:	sub    eax,ecx
   14000f223:	or     eax,0xfffffff0
   14000f226:	add    eax,ecx
   14000f228:	cmp    eax,0x9
   14000f22b:	jle    0x14000f232
   14000f22d:	add    eax,0x37
   14000f230:	jmp    0x14000f235
   14000f232:	add    eax,0x30
   14000f235:	movsx  eax,al
   14000f238:	shr    bx,0x4
   14000f23c:	mov    WORD PTR [rbp-0x48],ax
   14000f240:	movzx  eax,bx
   14000f243:	and    eax,edx
   14000f245:	jge    0x14000f24e
   14000f247:	sub    eax,ecx
   14000f249:	or     eax,0xfffffff0
   14000f24c:	add    eax,ecx
   14000f24e:	cmp    eax,0x9
   14000f251:	jle    0x14000f258
   14000f253:	add    eax,0x37
   14000f256:	jmp    0x14000f25b
   14000f258:	add    eax,0x30
   14000f25b:	movsx  eax,al
   14000f25e:	shr    bx,0x4
   14000f262:	mov    WORD PTR [rbp-0x4a],ax
   14000f266:	movzx  eax,bx
   14000f269:	and    eax,edx
   14000f26b:	jge    0x14000f274
   14000f26d:	sub    eax,ecx
   14000f26f:	or     eax,0xfffffff0
   14000f272:	add    eax,ecx
   14000f274:	cmp    eax,0x9
   14000f277:	jle    0x14000f27e
   14000f279:	add    eax,0x37
   14000f27c:	jmp    0x14000f281
   14000f27e:	add    eax,0x30
   14000f281:	movsx  eax,al
   14000f284:	mov    r8d,0x6
   14000f28a:	mov    WORD PTR [rbp-0x4c],ax
   14000f28e:	mov    eax,DWORD PTR [rbp-0x10]
   14000f291:	lea    rdx,[rbp-0x50]
   14000f295:	mov    BYTE PTR [rsp+0x20],cl
   14000f299:	add    r8d,r8d
   14000f29c:	lea    rcx,[rbp-0x40]
   14000f2a0:	lea    r9d,[rax+rax*1]
   14000f2a4:	call   0x14000eb60
   14000f2a9:	xor    r8d,r8d
   14000f2ac:	mov    edi,eax
   14000f2ae:	test   eax,eax
   14000f2b0:	js     0x14000f320
   14000f2b2:	jmp    0x14000f2e2
   14000f2b4:	test   sil,sil
   14000f2b7:	je     0x14000f2e2
   14000f2b9:	movsxd rax,r14d
   14000f2bc:	lea    rdx,[r12+rax*2]
   14000f2c0:	test   rdx,rdx
   14000f2c3:	je     0x14000f2e2
   14000f2c5:	mov    r9d,DWORD PTR [rbp-0x10]
   14000f2c9:	mov    r8d,0x2
   14000f2cf:	mov    BYTE PTR [rsp+0x20],cl
   14000f2d3:	add    r9d,r9d
   14000f2d6:	lea    rcx,[rbp-0x40]
   14000f2da:	call   0x14000eb60
   14000f2df:	xor    r8d,r8d
   14000f2e2:	add    r13,0x2
   14000f2e6:	mov    eax,0x1
   14000f2eb:	add    r14d,eax
   14000f2ee:	movzx  ebx,WORD PTR [r13+0x0]
   14000f2f3:	test   bx,bx
   14000f2f6:	jne    0x14000f11e
   14000f2fc:	test   sil,sil
   14000f2ff:	je     0x14000f320
   14000f301:	mov    r8d,DWORD PTR [rbp-0x10]
   14000f305:	xor    r9d,r9d
   14000f308:	mov    rdx,QWORD PTR [rbp-0x20]
   14000f30c:	add    r8d,r8d
   14000f30f:	mov    rcx,r15
   14000f312:	mov    BYTE PTR [rsp+0x20],al
   14000f316:	call   0x14000eb60
   14000f31b:	mov    edi,eax
   14000f31d:	xor    r8d,r8d
   14000f320:	cmp    BYTE PTR [rbp-0x14],r8b
   14000f324:	je     0x14000f32f
   14000f326:	lea    rcx,[rbp-0x40]
   14000f32a:	call   0x14000eb30
   14000f32f:	mov    eax,edi
   14000f331:	mov    rcx,QWORD PTR [rbp-0x8]
   14000f335:	xor    rcx,rsp
   14000f338:	call   0x140011800
   14000f33d:	lea    r11,[rsp+0x80]
   14000f345:	mov    rbx,QWORD PTR [r11+0x38]
   14000f349:	mov    rsi,QWORD PTR [r11+0x40]
   14000f34d:	mov    rdi,QWORD PTR [r11+0x48]
   14000f351:	mov    rsp,r11
   14000f354:	pop    r15
   14000f356:	pop    r14
   14000f358:	pop    r13
   14000f35a:	pop    r12
   14000f35c:	pop    rbp
   14000f35d:	ret    
   14000f35e:	int3   
   14000f35f:	int3   
   14000f360:	int3   
   14000f361:	int3   
   14000f362:	int3   
   14000f363:	int3   
   14000f364:	int3   
   14000f365:	int3   
   14000f366:	int3   
   14000f367:	int3   
   14000f368:	int3   
   14000f369:	int3   
   14000f36a:	int3   
   14000f36b:	int3   
   14000f36c:	int3   
   14000f36d:	int3   
   14000f36e:	int3   
   14000f36f:	int3   
   14000f370:	mov    rax,rsp
   14000f373:	mov    QWORD PTR [rax+0x10],rdx
   14000f377:	mov    QWORD PTR [rax+0x18],r8
   14000f37b:	mov    QWORD PTR [rax+0x20],r9
   14000f37f:	push   rbx
   14000f380:	push   rbp
   14000f381:	push   rsi
   14000f382:	push   rdi
   14000f383:	sub    rsp,0x38
   14000f387:	mov    r8d,DWORD PTR [rcx+0x28]
   14000f38b:	lea    rbp,[rax+0x18]
   14000f38f:	mov    r9,rdx
   14000f392:	shr    r8d,1
   14000f395:	mov    edx,DWORD PTR [rcx+0x28]
   14000f398:	mov    rdi,rcx
   14000f39b:	mov    rcx,QWORD PTR [rcx+0x20]
   14000f39f:	xor    esi,esi
   14000f3a1:	dec    r8d
   14000f3a4:	shr    rdx,1
   14000f3a7:	mov    ebx,esi
   14000f3a9:	mov    QWORD PTR [rax-0x38],rbp
   14000f3ad:	call   QWORD PTR [rip+0x30a5]        # 0x140012458
   14000f3b3:	cmp    eax,0xffffffff
   14000f3b6:	jne    0x14000f430
   14000f3b8:	mov    rcx,QWORD PTR [rsp+0x68]
   14000f3bd:	mov    rdx,rbp
   14000f3c0:	call   QWORD PTR [rip+0x309a]        # 0x140012460
   14000f3c6:	cmp    eax,0x10000
   14000f3cb:	jle    0x14000f3d7
   14000f3cd:	mov    ebx,0x8007000d
   14000f3d2:	jmp    0x14000f460
   14000f3d7:	lea    edx,[rax*2+0x2]
   14000f3de:	cmp    edx,DWORD PTR [rdi+0x28]
   14000f3e1:	jbe    0x14000f403
   14000f3e3:	mov    rcx,rdi
   14000f3e6:	call   0x14000ea50
   14000f3eb:	test   al,al
   14000f3ed:	jne    0x14000f403
   14000f3ef:	call   QWORD PTR [rip+0x2f03]        # 0x1400122f8
   14000f3f5:	movzx  ebx,ax
   14000f3f8:	or     ebx,0x80070000
   14000f3fe:	test   eax,eax
   14000f400:	cmovle ebx,eax
   14000f403:	test   ebx,ebx
   14000f405:	js     0x14000f460
   14000f407:	mov    r8d,DWORD PTR [rdi+0x28]
   14000f40b:	mov    edx,DWORD PTR [rdi+0x28]
   14000f40e:	mov    r9,QWORD PTR [rsp+0x68]
   14000f413:	mov    rcx,QWORD PTR [rdi+0x20]
   14000f417:	shr    r8d,1
   14000f41a:	dec    r8d
   14000f41d:	shr    rdx,1
   14000f420:	mov    QWORD PTR [rsp+0x20],rbp
   14000f425:	call   QWORD PTR [rip+0x302d]        # 0x140012458
   14000f42b:	cmp    eax,0xffffffff
   14000f42e:	je     0x14000f3cd
   14000f430:	mov    ecx,DWORD PTR [rdi+0x28]
   14000f433:	mov    rax,QWORD PTR [rdi+0x20]
   14000f437:	shr    ecx,1
   14000f439:	dec    ecx
   14000f43b:	mov    WORD PTR [rax+rcx*2],si
   14000f43f:	mov    rcx,QWORD PTR [rdi+0x20]
   14000f443:	test   rcx,rcx
   14000f446:	jne    0x14000f44d
   14000f448:	mov    rax,rsi
   14000f44b:	jmp    0x14000f459
   14000f44d:	mov    edx,DWORD PTR [rdi+0x28]
   14000f450:	shr    rdx,1
   14000f453:	call   QWORD PTR [rip+0x2f37]        # 0x140012390
   14000f459:	mov    DWORD PTR [rdi+0x30],eax
   14000f45c:	test   ebx,ebx
   14000f45e:	jns    0x14000f46a
   14000f460:	mov    rcx,QWORD PTR [rdi+0x20]
   14000f464:	mov    WORD PTR [rcx],si
   14000f467:	mov    DWORD PTR [rdi+0x30],esi
   14000f46a:	mov    eax,ebx
   14000f46c:	add    rsp,0x38
   14000f470:	pop    rdi
   14000f471:	pop    rsi
   14000f472:	pop    rbp
   14000f473:	pop    rbx
   14000f474:	ret    
   14000f475:	int3   
   14000f476:	int3   
   14000f477:	int3   
   14000f478:	int3   
   14000f479:	int3   
   14000f47a:	int3   
   14000f47b:	int3   
   14000f47c:	int3   
   14000f47d:	int3   
   14000f47e:	int3   
   14000f47f:	int3   
   14000f480:	mov    QWORD PTR [rsp+0x10],rbx
   14000f485:	mov    QWORD PTR [rsp+0x18],rsi
   14000f48a:	mov    QWORD PTR [rsp+0x20],rdi
   14000f48f:	push   rbp
   14000f490:	push   r12
   14000f492:	push   r13
   14000f494:	push   r14
   14000f496:	push   r15
   14000f498:	mov    rbp,rsp
   14000f49b:	sub    rsp,0x70
   14000f49f:	mov    rax,QWORD PTR [rip+0xcb92]        # 0x14001c038
   14000f4a6:	xor    rax,rsp
   14000f4a9:	mov    QWORD PTR [rbp-0x8],rax
   14000f4ad:	mov    r12,QWORD PTR [rcx+0x20]
   14000f4b1:	lea    rax,[rbp-0x40]
   14000f4b5:	xor    r8d,r8d
   14000f4b8:	mov    QWORD PTR [rbp-0x20],rax
   14000f4bc:	mov    r15,rcx
   14000f4bf:	mov    QWORD PTR [rbp-0x40],r8
   14000f4c3:	mov    ecx,r8d
   14000f4c6:	mov    DWORD PTR [rbp-0x18],0x20
   14000f4cd:	mov    DWORD PTR [rbp-0x10],ecx
   14000f4d0:	mov    r14d,r8d
   14000f4d3:	mov    WORD PTR [rbp-0x14],0x100
   14000f4d9:	mov    ebx,r8d
   14000f4dc:	movzx  edi,WORD PTR [r12]
   14000f4e1:	mov    sil,r8b
   14000f4e4:	test   di,di
   14000f4e7:	je     0x14000f668
   14000f4ed:	mov    r13,r12
   14000f4f0:	lea    r9d,[r8+0x3e]
   14000f4f4:	lea    r10d,[r8+0x7b]
   14000f4f8:	lea    r11d,[r8+0x7d]
   14000f4fc:	cmp    di,r9w
   14000f500:	ja     0x14000f512
   14000f502:	movabs rdx,0x5000004400000000
   14000f50c:	bt     rdx,rdi
   14000f510:	jb     0x14000f53e
   14000f512:	cmp    di,r10w
   14000f516:	je     0x14000f53e
   14000f518:	cmp    di,r11w
   14000f51c:	je     0x14000f53e
   14000f51e:	test   sil,sil
   14000f521:	je     0x14000f622
   14000f527:	movsxd rax,r14d
   14000f52a:	lea    rdx,[r12+rax*2]
   14000f52e:	test   rdx,rdx
   14000f531:	je     0x14000f5b1
   14000f533:	mov    r8d,0x2
   14000f539:	jmp    0x14000f5f6
   14000f53e:	test   sil,sil
   14000f541:	jne    0x14000f587
   14000f543:	mov    rdx,QWORD PTR [r15+0x20]
   14000f547:	mov    sil,0x1
   14000f54a:	test   rdx,rdx
   14000f54d:	je     0x14000f57a
   14000f54f:	lea    r8d,[r14+r14*1]
   14000f553:	mov    BYTE PTR [rsp+0x20],sil
   14000f558:	xor    r9d,r9d
   14000f55b:	lea    rcx,[rbp-0x40]
   14000f55f:	call   0x14000eb60
   14000f564:	mov    ecx,DWORD PTR [rbp-0x10]
   14000f567:	xor    r8d,r8d
   14000f56a:	mov    ebx,eax
   14000f56c:	lea    r9d,[r8+0x3e]
   14000f570:	lea    r10d,[r8+0x7b]
   14000f574:	lea    r11d,[r8+0x7d]
   14000f578:	jmp    0x14000f57f
   14000f57a:	mov    ebx,0x80070057
   14000f57f:	test   ebx,ebx
   14000f581:	js     0x14000f659
   14000f587:	movzx  eax,di
   14000f58a:	cmp    eax,0x22
   14000f58d:	je     0x14000f5e6
   14000f58f:	cmp    eax,0x26
   14000f592:	je     0x14000f5d7
   14000f594:	cmp    eax,0x3c
   14000f597:	je     0x14000f5ce
   14000f599:	cmp    eax,r9d
   14000f59c:	je     0x14000f5bf
   14000f59e:	cmp    eax,r10d
   14000f5a1:	je     0x14000f5b6
   14000f5a3:	cmp    eax,r11d
   14000f5a6:	jne    0x14000f5b1
   14000f5a8:	lea    rdx,[rip+0x4481]        # 0x140013a30
   14000f5af:	jmp    0x14000f5ed
   14000f5b1:	mov    ebx,r8d
   14000f5b4:	jmp    0x14000f61e
   14000f5b6:	lea    rdx,[rip+0x4463]        # 0x140013a20
   14000f5bd:	jmp    0x14000f5ed
   14000f5bf:	lea    rdx,[rip+0x444a]        # 0x140013a10
   14000f5c6:	mov    r8d,0x4
   14000f5cc:	jmp    0x14000f5f3
   14000f5ce:	lea    rdx,[rip+0x442b]        # 0x140013a00
   14000f5d5:	jmp    0x14000f5c6
   14000f5d7:	lea    rdx,[rip+0x4402]        # 0x1400139e0
   14000f5de:	mov    r8d,0x5
   14000f5e4:	jmp    0x14000f5f3
   14000f5e6:	lea    rdx,[rip+0x4403]        # 0x1400139f0
   14000f5ed:	mov    r8d,0x6
   14000f5f3:	add    r8d,r8d
   14000f5f6:	lea    r9d,[rcx+rcx*1]
   14000f5fa:	mov    BYTE PTR [rsp+0x20],0x1
   14000f5ff:	lea    rcx,[rbp-0x40]
   14000f603:	call   0x14000eb60
   14000f608:	mov    ecx,DWORD PTR [rbp-0x10]
   14000f60b:	mov    r11d,0x7d
   14000f611:	xor    r8d,r8d
   14000f614:	mov    ebx,eax
   14000f616:	lea    r10d,[r11-0x2]
   14000f61a:	lea    r9d,[r11-0x3f]
   14000f61e:	test   ebx,ebx
   14000f620:	js     0x14000f659
   14000f622:	add    r13,0x2
   14000f626:	inc    r14d
   14000f629:	movzx  edi,WORD PTR [r13+0x0]
   14000f62e:	test   di,di
   14000f631:	jne    0x14000f4fc
   14000f637:	test   sil,sil
   14000f63a:	je     0x14000f659
   14000f63c:	mov    rdx,QWORD PTR [rbp-0x20]
   14000f640:	lea    r8d,[rcx+rcx*1]
   14000f644:	mov    rcx,r15
   14000f647:	mov    BYTE PTR [rsp+0x20],0x1
   14000f64c:	xor    r9d,r9d
   14000f64f:	call   0x14000eb60
   14000f654:	mov    ebx,eax
   14000f656:	xor    r8d,r8d
   14000f659:	cmp    BYTE PTR [rbp-0x14],r8b
   14000f65d:	je     0x14000f668
   14000f65f:	lea    rcx,[rbp-0x40]
   14000f663:	call   0x14000eb30
   14000f668:	mov    eax,ebx
   14000f66a:	mov    rcx,QWORD PTR [rbp-0x8]
   14000f66e:	xor    rcx,rsp
   14000f671:	call   0x140011800
   14000f676:	lea    r11,[rsp+0x70]
   14000f67b:	mov    rbx,QWORD PTR [r11+0x38]
   14000f67f:	mov    rsi,QWORD PTR [r11+0x40]
   14000f683:	mov    rdi,QWORD PTR [r11+0x48]
   14000f687:	mov    rsp,r11
   14000f68a:	pop    r15
   14000f68c:	pop    r14
   14000f68e:	pop    r13
   14000f690:	pop    r12
   14000f692:	pop    rbp
   14000f693:	ret    
   14000f694:	int3   
   14000f695:	int3   
   14000f696:	int3   
   14000f697:	int3   
   14000f698:	int3   
   14000f699:	int3   
   14000f69a:	int3   
   14000f69b:	int3   
   14000f69c:	int3   
   14000f69d:	int3   
   14000f69e:	int3   
   14000f69f:	int3   
   14000f6a0:	mov    QWORD PTR [rsp+0x8],rbx
   14000f6a5:	push   rsi
   14000f6a6:	sub    rsp,0x20
   14000f6aa:	mov    rbx,rdx
   14000f6ad:	mov    rsi,rcx
   14000f6b0:	test   rcx,rcx
   14000f6b3:	je     0x14000f778
   14000f6b9:	test   rdx,rdx
   14000f6bc:	je     0x14000f778
   14000f6c2:	mov    r8d,DWORD PTR [rdx+0x28]
   14000f6c6:	mov    rdx,QWORD PTR [rdx+0x20]
   14000f6ca:	shr    r8d,1
   14000f6cd:	call   QWORD PTR [rip+0x2af5]        # 0x1400121c8
   14000f6d3:	mov    ecx,eax
   14000f6d5:	test   eax,eax
   14000f6d7:	jne    0x14000f6f2
   14000f6d9:	call   QWORD PTR [rip+0x2c19]        # 0x1400122f8
   14000f6df:	movzx  ecx,ax
   14000f6e2:	or     ecx,0x80070000
   14000f6e8:	test   eax,eax
   14000f6ea:	cmovle ecx,eax
   14000f6ed:	jmp    0x14000f77d
   14000f6f2:	mov    r8d,DWORD PTR [rbx+0x28]
   14000f6f6:	mov    eax,r8d
   14000f6f9:	shr    eax,1
   14000f6fb:	cmp    ecx,eax
   14000f6fd:	jbe    0x14000f758
   14000f6ff:	lea    edx,[rcx*2+0x2]
   14000f706:	cmp    edx,r8d
   14000f709:	jbe    0x14000f72d
   14000f70b:	mov    rcx,rbx
   14000f70e:	call   0x14000ea50
   14000f713:	test   al,al
   14000f715:	jne    0x14000f72d
   14000f717:	call   QWORD PTR [rip+0x2bdb]        # 0x1400122f8
   14000f71d:	movzx  ecx,ax
   14000f720:	or     ecx,0x80070000
   14000f726:	test   eax,eax
   14000f728:	cmovle ecx,eax
   14000f72b:	jmp    0x14000f72f
   14000f72d:	xor    ecx,ecx
   14000f72f:	test   ecx,ecx
   14000f731:	js     0x14000f77d
   14000f733:	mov    r8d,DWORD PTR [rbx+0x28]
   14000f737:	mov    rcx,rsi
   14000f73a:	mov    rdx,QWORD PTR [rbx+0x20]
   14000f73e:	shr    r8d,1
   14000f741:	call   QWORD PTR [rip+0x2a81]        # 0x1400121c8
   14000f747:	test   eax,eax
   14000f749:	je     0x14000f6d9
   14000f74b:	mov    r8d,DWORD PTR [rbx+0x28]
   14000f74f:	mov    ecx,r8d
   14000f752:	shr    ecx,1
   14000f754:	cmp    eax,ecx
   14000f756:	ja     0x14000f6d9
   14000f758:	mov    rcx,QWORD PTR [rbx+0x20]
   14000f75c:	test   rcx,rcx
   14000f75f:	jne    0x14000f765
   14000f761:	xor    eax,eax
   14000f763:	jmp    0x14000f771
   14000f765:	mov    edx,r8d
   14000f768:	shr    rdx,1
   14000f76b:	call   QWORD PTR [rip+0x2c1f]        # 0x140012390
   14000f771:	mov    DWORD PTR [rbx+0x30],eax
   14000f774:	xor    ecx,ecx
   14000f776:	jmp    0x14000f77d
   14000f778:	mov    ecx,0x80070057
   14000f77d:	mov    eax,ecx
   14000f77f:	mov    rbx,QWORD PTR [rsp+0x30]
   14000f784:	add    rsp,0x20
   14000f788:	pop    rsi
   14000f789:	ret    
   14000f78a:	int3   
   14000f78b:	int3   
   14000f78c:	int3   
   14000f78d:	int3   
   14000f78e:	int3   
   14000f78f:	int3   
   14000f790:	rex push rbx
   14000f792:	sub    rsp,0x20
   14000f796:	and    DWORD PTR [rcx+0x8],0x0
   14000f79a:	mov    rbx,rcx
   14000f79d:	mov    QWORD PTR [rcx],rdx
   14000f7a0:	mov    rcx,rdx
   14000f7a3:	mov    rax,QWORD PTR [rdx]
   14000f7a6:	mov    rax,QWORD PTR [rax+0x8]
   14000f7aa:	call   QWORD PTR [rip+0x2d90]        # 0x140012540
   14000f7b0:	mov    rax,rbx
   14000f7b3:	add    rsp,0x20
   14000f7b7:	pop    rbx
   14000f7b8:	ret    
   14000f7b9:	int3   
   14000f7ba:	int3   
   14000f7bb:	int3   
   14000f7bc:	int3   
   14000f7bd:	int3   
   14000f7be:	int3   
   14000f7bf:	int3   
   14000f7c0:	rex push rbx
   14000f7c2:	sub    rsp,0x20
   14000f7c6:	cmp    DWORD PTR [rcx+0x8],0x0
   14000f7ca:	mov    rbx,rcx
   14000f7cd:	je     0x14000f7d4
   14000f7cf:	call   0x14000f870
   14000f7d4:	mov    rcx,QWORD PTR [rbx]
   14000f7d7:	test   rcx,rcx
   14000f7da:	je     0x14000f7ed
   14000f7dc:	mov    rax,QWORD PTR [rcx]
   14000f7df:	mov    rax,QWORD PTR [rax+0x10]
   14000f7e3:	call   QWORD PTR [rip+0x2d57]        # 0x140012540
   14000f7e9:	and    QWORD PTR [rbx],0x0
   14000f7ed:	add    rsp,0x20
   14000f7f1:	pop    rbx
   14000f7f2:	ret    
   14000f7f3:	int3   
   14000f7f4:	int3   
   14000f7f5:	int3   
   14000f7f6:	int3   
   14000f7f7:	int3   
   14000f7f8:	int3   
   14000f7f9:	int3   
   14000f7fa:	int3   
   14000f7fb:	int3   
   14000f7fc:	int3   
   14000f7fd:	int3   
   14000f7fe:	int3   
   14000f7ff:	int3   
   14000f800:	sub    rsp,0x48
   14000f804:	lea    r10,[rcx+0x8]
   14000f808:	cmp    DWORD PTR [r10],0x0
   14000f80c:	je     0x14000f815
   14000f80e:	mov    ecx,0x80070003
   14000f813:	jmp    0x14000f858
   14000f815:	mov    rcx,QWORD PTR [rcx]
   14000f818:	mov    QWORD PTR [rsp+0x28],r10
   14000f81d:	mov    DWORD PTR [rsp+0x20],0x7530
   14000f825:	mov    rax,QWORD PTR [rcx]
   14000f828:	mov    rax,QWORD PTR [rax+0x88]
   14000f82f:	call   QWORD PTR [rip+0x2d0b]        # 0x140012540
   14000f835:	mov    edx,eax
   14000f837:	test   eax,eax
   14000f839:	js     0x14000f842
   14000f83b:	mov    eax,0x1
   14000f840:	jmp    0x14000f860
   14000f842:	mov    ecx,eax
   14000f844:	movzx  eax,ax
   14000f847:	and    ecx,0x1fff0000
   14000f84d:	cmp    ecx,0x70000
   14000f853:	cmove  edx,eax
   14000f856:	mov    ecx,edx
   14000f858:	call   QWORD PTR [rip+0x2a72]        # 0x1400122d0
   14000f85e:	xor    eax,eax
   14000f860:	add    rsp,0x48
   14000f864:	ret    
   14000f865:	int3   
   14000f866:	int3   
   14000f867:	int3   
   14000f868:	int3   
   14000f869:	int3   
   14000f86a:	int3   
   14000f86b:	int3   
   14000f86c:	int3   
   14000f86d:	int3   
   14000f86e:	int3   
   14000f86f:	int3   
   14000f870:	rex push rbx
   14000f872:	sub    rsp,0x20
   14000f876:	mov    edx,DWORD PTR [rcx+0x8]
   14000f879:	mov    rbx,rcx
   14000f87c:	test   edx,edx
   14000f87e:	je     0x14000f8bb
   14000f880:	mov    rcx,QWORD PTR [rcx]
   14000f883:	mov    rax,QWORD PTR [rcx]
   14000f886:	mov    rax,QWORD PTR [rax+0x90]
   14000f88d:	call   QWORD PTR [rip+0x2cad]        # 0x140012540
   14000f893:	test   eax,eax
   14000f895:	jns    0x14000f8b7
   14000f897:	mov    edx,eax
   14000f899:	movzx  ecx,ax
   14000f89c:	and    edx,0x1fff0000
   14000f8a2:	cmp    edx,0x70000
   14000f8a8:	cmove  eax,ecx
   14000f8ab:	mov    ecx,eax
   14000f8ad:	call   QWORD PTR [rip+0x2a1d]        # 0x1400122d0
   14000f8b3:	xor    eax,eax
   14000f8b5:	jmp    0x14000f8c0
   14000f8b7:	and    DWORD PTR [rbx+0x8],0x0
   14000f8bb:	mov    eax,0x1
   14000f8c0:	add    rsp,0x20
   14000f8c4:	pop    rbx
   14000f8c5:	ret    
   14000f8c6:	int3   
   14000f8c7:	int3   
   14000f8c8:	int3   
   14000f8c9:	int3   
   14000f8ca:	int3   
   14000f8cb:	int3   
   14000f8cc:	int3   
   14000f8cd:	int3   
   14000f8ce:	int3   
   14000f8cf:	int3   
   14000f8d0:	sub    rsp,0x28
   14000f8d4:	mov    rcx,QWORD PTR [rcx]
   14000f8d7:	test   rcx,rcx
   14000f8da:	je     0x14000f910
   14000f8dc:	mov    rax,QWORD PTR [rcx]
   14000f8df:	mov    rax,QWORD PTR [rax+0xa0]
   14000f8e6:	call   QWORD PTR [rip+0x2c54]        # 0x140012540
   14000f8ec:	test   eax,eax
   14000f8ee:	jns    0x14000f910
   14000f8f0:	mov    edx,eax
   14000f8f2:	movzx  ecx,ax
   14000f8f5:	and    edx,0x1fff0000
   14000f8fb:	cmp    edx,0x70000
   14000f901:	cmove  eax,ecx
   14000f904:	mov    ecx,eax
   14000f906:	call   QWORD PTR [rip+0x29c4]        # 0x1400122d0
   14000f90c:	xor    eax,eax
   14000f90e:	jmp    0x14000f915
   14000f910:	mov    eax,0x1
   14000f915:	add    rsp,0x28
   14000f919:	ret    
   14000f91a:	int3   
   14000f91b:	int3   
   14000f91c:	int3   
   14000f91d:	int3   
   14000f91e:	int3   
   14000f91f:	int3   
   14000f920:	mov    rax,rsp
   14000f923:	mov    QWORD PTR [rax+0x8],rbx
   14000f927:	mov    QWORD PTR [rax+0x10],rbp
   14000f92b:	mov    QWORD PTR [rax+0x18],rsi
   14000f92f:	mov    QWORD PTR [rax+0x20],rdi
   14000f933:	push   r12
   14000f935:	push   r14
   14000f937:	push   r15
   14000f939:	sub    rsp,0x60
   14000f93d:	mov    rbx,QWORD PTR [rsp+0xa0]
   14000f945:	mov    esi,r9d
   14000f948:	mov    r15,QWORD PTR [rsp+0xb0]
   14000f950:	mov    ebp,r8d
   14000f953:	mov    r12,QWORD PTR [rsp+0xa8]
   14000f95b:	mov    r14,rdx
   14000f95e:	mov    rdi,rcx
   14000f961:	mov    rdx,QWORD PTR [rbx+0x20]
   14000f965:	lea    r9,[rsp+0xa0]
   14000f96d:	mov    r8d,DWORD PTR [rbx+0x28]
   14000f971:	mov    rcx,QWORD PTR [rdi]
   14000f974:	mov    QWORD PTR [rsp+0x50],r9
   14000f979:	mov    r9d,ebp
   14000f97c:	mov    QWORD PTR [rsp+0x48],rdx
   14000f981:	mov    edx,DWORD PTR [rdi+0x8]
   14000f984:	mov    rax,QWORD PTR [rcx]
   14000f987:	mov    DWORD PTR [rsp+0x40],r8d
   14000f98c:	mov    r8,r14
   14000f98f:	mov    QWORD PTR [rsp+0x38],r15
   14000f994:	mov    QWORD PTR [rsp+0x30],r12
   14000f999:	mov    rax,QWORD PTR [rax+0x68]
   14000f99d:	and    DWORD PTR [rsp+0x28],0x0
   14000f9a2:	mov    DWORD PTR [rsp+0x20],esi
   14000f9a6:	call   QWORD PTR [rip+0x2b94]        # 0x140012540
   14000f9ac:	mov    edx,eax
   14000f9ae:	test   eax,eax
   14000f9b0:	jns    0x14000fa06
   14000f9b2:	mov    ecx,eax
   14000f9b4:	mov    r8d,0x70000
   14000f9ba:	and    ecx,0x1fff0000
   14000f9c0:	cmp    ecx,r8d
   14000f9c3:	jne    0x14000f9eb
   14000f9c5:	cmp    ax,0x7a
   14000f9c9:	jne    0x14000f9eb
   14000f9cb:	mov    edx,DWORD PTR [rsp+0xa0]
   14000f9d2:	cmp    edx,DWORD PTR [rbx+0x28]
   14000f9d5:	jbe    0x14000f961
   14000f9d7:	mov    rcx,rbx
   14000f9da:	call   0x14000ea50
   14000f9df:	test   al,al
   14000f9e1:	jne    0x14000f961
   14000f9e7:	xor    eax,eax
   14000f9e9:	jmp    0x14000fa0b
   14000f9eb:	mov    ecx,eax
   14000f9ed:	movzx  eax,ax
   14000f9f0:	and    ecx,0x1fff0000
   14000f9f6:	cmp    ecx,r8d
   14000f9f9:	cmove  edx,eax
   14000f9fc:	mov    ecx,edx
   14000f9fe:	call   QWORD PTR [rip+0x28cc]        # 0x1400122d0
   14000fa04:	jmp    0x14000f9e7
   14000fa06:	mov    eax,0x1
   14000fa0b:	lea    r11,[rsp+0x60]
   14000fa10:	mov    rbx,QWORD PTR [r11+0x20]
   14000fa14:	mov    rbp,QWORD PTR [r11+0x28]
   14000fa18:	mov    rsi,QWORD PTR [r11+0x30]
   14000fa1c:	mov    rdi,QWORD PTR [r11+0x38]
   14000fa20:	mov    rsp,r11
   14000fa23:	pop    r15
   14000fa25:	pop    r14
   14000fa27:	pop    r12
   14000fa29:	ret    
   14000fa2a:	int3   
   14000fa2b:	int3   
   14000fa2c:	int3   
   14000fa2d:	int3   
   14000fa2e:	int3   
   14000fa2f:	int3   
   14000fa30:	sub    rsp,0x38
   14000fa34:	mov    r10,rcx
   14000fa37:	mov    r9,r8
   14000fa3a:	mov    rcx,QWORD PTR [rcx]
   14000fa3d:	mov    r8,rdx
   14000fa40:	mov    edx,DWORD PTR [r10+0x8]
   14000fa44:	mov    rax,QWORD PTR [rcx]
   14000fa47:	mov    rax,QWORD PTR [rax+0xb8]
   14000fa4e:	call   QWORD PTR [rip+0x2aec]        # 0x140012540
   14000fa54:	test   eax,eax
   14000fa56:	jns    0x14000fa78
   14000fa58:	mov    edx,eax
   14000fa5a:	movzx  ecx,ax
   14000fa5d:	and    edx,0x1fff0000
   14000fa63:	cmp    edx,0x70000
   14000fa69:	cmove  eax,ecx
   14000fa6c:	mov    ecx,eax
   14000fa6e:	call   QWORD PTR [rip+0x285c]        # 0x1400122d0
   14000fa74:	xor    eax,eax
   14000fa76:	jmp    0x14000fa7d
   14000fa78:	mov    eax,0x1
   14000fa7d:	add    rsp,0x38
   14000fa81:	ret    
   14000fa82:	int3   
   14000fa83:	int3   
   14000fa84:	int3   
   14000fa85:	int3   
   14000fa86:	int3   
   14000fa87:	int3   
   14000fa88:	int3   
   14000fa89:	int3   
   14000fa8a:	int3   
   14000fa8b:	int3   
   14000fa8c:	int3   
   14000fa8d:	int3   
   14000fa8e:	int3   
   14000fa8f:	int3   
   14000fa90:	sub    rsp,0x38
   14000fa94:	mov    r10,rcx
   14000fa97:	mov    DWORD PTR [rsp+0x20],r9d
   14000fa9c:	mov    rcx,QWORD PTR [rcx]
   14000fa9f:	mov    r9,r8
   14000faa2:	mov    r8,rdx
   14000faa5:	mov    edx,DWORD PTR [r10+0x8]
   14000faa9:	mov    rax,QWORD PTR [rcx]
   14000faac:	mov    rax,QWORD PTR [rax+0x30]
   14000fab0:	call   QWORD PTR [rip+0x2a8a]        # 0x140012540
   14000fab6:	mov    edx,eax
   14000fab8:	test   eax,eax
   14000faba:	js     0x14000fac3
   14000fabc:	mov    eax,0x1
   14000fac1:	jmp    0x14000fae1
   14000fac3:	mov    ecx,eax
   14000fac5:	movzx  eax,ax
   14000fac8:	and    ecx,0x1fff0000
   14000face:	cmp    ecx,0x70000
   14000fad4:	cmove  edx,eax
   14000fad7:	mov    ecx,edx
   14000fad9:	call   QWORD PTR [rip+0x27f1]        # 0x1400122d0
   14000fadf:	xor    eax,eax
   14000fae1:	add    rsp,0x38
   14000fae5:	ret    
   14000fae6:	int3   
   14000fae7:	int3   
   14000fae8:	int3   
   14000fae9:	int3   
   14000faea:	int3   
   14000faeb:	int3   
   14000faec:	int3   
   14000faed:	int3   
   14000faee:	int3   
   14000faef:	int3   
   14000faf0:	sub    rsp,0x28
   14000faf4:	mov    r9,rcx
   14000faf7:	mov    r8,rdx
   14000fafa:	mov    rcx,QWORD PTR [rcx]
   14000fafd:	mov    edx,DWORD PTR [r9+0x8]
   14000fb01:	mov    rax,QWORD PTR [rcx]
   14000fb04:	mov    rax,QWORD PTR [rax+0x18]
   14000fb08:	call   QWORD PTR [rip+0x2a32]        # 0x140012540
   14000fb0e:	mov    edx,eax
   14000fb10:	test   eax,eax
   14000fb12:	js     0x14000fb1b
   14000fb14:	mov    eax,0x1
   14000fb19:	jmp    0x14000fb39
   14000fb1b:	mov    ecx,eax
   14000fb1d:	movzx  eax,ax
   14000fb20:	and    ecx,0x1fff0000
   14000fb26:	cmp    ecx,0x70000
   14000fb2c:	cmove  edx,eax
   14000fb2f:	mov    ecx,edx
   14000fb31:	call   QWORD PTR [rip+0x2799]        # 0x1400122d0
   14000fb37:	xor    eax,eax
   14000fb39:	add    rsp,0x28
   14000fb3d:	ret    
   14000fb3e:	int3   
   14000fb3f:	int3   
   14000fb40:	int3   
   14000fb41:	int3   
   14000fb42:	int3   
   14000fb43:	int3   
   14000fb44:	int3   
   14000fb45:	int3   
   14000fb46:	int3   
   14000fb47:	int3   
   14000fb48:	int3   
   14000fb49:	int3   
   14000fb4a:	int3   
   14000fb4b:	int3   
   14000fb4c:	int3   
   14000fb4d:	int3   
   14000fb4e:	int3   
   14000fb4f:	int3   
   14000fb50:	sub    rsp,0x28
   14000fb54:	mov    r9,rcx
   14000fb57:	mov    r8,rdx
   14000fb5a:	mov    rcx,QWORD PTR [rcx]
   14000fb5d:	mov    edx,DWORD PTR [r9+0x8]
   14000fb61:	mov    rax,QWORD PTR [rcx]
   14000fb64:	mov    rax,QWORD PTR [rax+0x20]
   14000fb68:	call   QWORD PTR [rip+0x29d2]        # 0x140012540
   14000fb6e:	mov    edx,eax
   14000fb70:	test   eax,eax
   14000fb72:	js     0x14000fb7b
   14000fb74:	mov    eax,0x1
   14000fb79:	jmp    0x14000fb99
   14000fb7b:	mov    ecx,eax
   14000fb7d:	movzx  eax,ax
   14000fb80:	and    ecx,0x1fff0000
   14000fb86:	cmp    ecx,0x70000
   14000fb8c:	cmove  edx,eax
   14000fb8f:	mov    ecx,edx
   14000fb91:	call   QWORD PTR [rip+0x2739]        # 0x1400122d0
   14000fb97:	xor    eax,eax
   14000fb99:	add    rsp,0x28
   14000fb9d:	ret    
   14000fb9e:	int3   
   14000fb9f:	int3   
   14000fba0:	int3   
   14000fba1:	int3   
   14000fba2:	int3   
   14000fba3:	int3   
   14000fba4:	int3   
   14000fba5:	int3   
   14000fba6:	int3   
   14000fba7:	int3   
   14000fba8:	int3   
   14000fba9:	int3   
   14000fbaa:	int3   
   14000fbab:	int3   
   14000fbac:	int3   
   14000fbad:	int3   
   14000fbae:	int3   
   14000fbaf:	int3   
   14000fbb0:	sub    rsp,0x38
   14000fbb4:	mov    r9d,DWORD PTR [rsp+0x60]
   14000fbb9:	mov    r10,rcx
   14000fbbc:	mov    rcx,QWORD PTR [rcx]
   14000fbbf:	mov    DWORD PTR [rsp+0x20],r9d
   14000fbc4:	mov    r9d,r8d
   14000fbc7:	mov    r8,rdx
   14000fbca:	mov    edx,DWORD PTR [r10+0x8]
   14000fbce:	mov    rax,QWORD PTR [rcx]
   14000fbd1:	mov    rax,QWORD PTR [rax+0x58]
   14000fbd5:	call   QWORD PTR [rip+0x2965]        # 0x140012540
   14000fbdb:	mov    edx,eax
   14000fbdd:	test   eax,eax
   14000fbdf:	js     0x14000fbe8
   14000fbe1:	mov    eax,0x1
   14000fbe6:	jmp    0x14000fc06
   14000fbe8:	mov    ecx,eax
   14000fbea:	movzx  eax,ax
   14000fbed:	and    ecx,0x1fff0000
   14000fbf3:	cmp    ecx,0x70000
   14000fbf9:	cmove  edx,eax
   14000fbfc:	mov    ecx,edx
   14000fbfe:	call   QWORD PTR [rip+0x26cc]        # 0x1400122d0
   14000fc04:	xor    eax,eax
   14000fc06:	add    rsp,0x38
   14000fc0a:	ret    
   14000fc0b:	int3   
   14000fc0c:	int3   
   14000fc0d:	int3   
   14000fc0e:	int3   
   14000fc0f:	int3   
   14000fc10:	int3   
   14000fc11:	int3   
   14000fc12:	int3   
   14000fc13:	int3   
   14000fc14:	int3   
   14000fc15:	int3   
   14000fc16:	int3   
   14000fc17:	int3   
   14000fc18:	int3   
   14000fc19:	int3   
   14000fc1a:	int3   
   14000fc1b:	int3   
   14000fc1c:	int3   
   14000fc1d:	int3   
   14000fc1e:	int3   
   14000fc1f:	int3   
   14000fc20:	sub    rsp,0x28
   14000fc24:	mov    rcx,QWORD PTR [rcx]
   14000fc27:	mov    rax,QWORD PTR [rcx]
   14000fc2a:	mov    rax,QWORD PTR [rax+0xb0]
   14000fc31:	call   QWORD PTR [rip+0x2909]        # 0x140012540
   14000fc37:	mov    edx,eax
   14000fc39:	test   eax,eax
   14000fc3b:	js     0x14000fc44
   14000fc3d:	mov    eax,0x1
   14000fc42:	jmp    0x14000fc62
   14000fc44:	mov    ecx,eax
   14000fc46:	movzx  eax,ax
   14000fc49:	and    ecx,0x1fff0000
   14000fc4f:	cmp    ecx,0x70000
   14000fc55:	cmove  edx,eax
   14000fc58:	mov    ecx,edx
   14000fc5a:	call   QWORD PTR [rip+0x2670]        # 0x1400122d0
   14000fc60:	xor    eax,eax
   14000fc62:	add    rsp,0x28
   14000fc66:	ret    
   14000fc67:	int3   
   14000fc68:	int3   
   14000fc69:	int3   
   14000fc6a:	int3   
   14000fc6b:	int3   
   14000fc6c:	int3   
   14000fc6d:	int3   
   14000fc6e:	int3   
   14000fc6f:	int3   
   14000fc70:	mov    r11,rsp
   14000fc73:	sub    rsp,0x68
   14000fc77:	mov    eax,DWORD PTR [rsp+0xa8]
   14000fc7e:	mov    r10,rcx
   14000fc81:	mov    rcx,QWORD PTR [rcx]
   14000fc84:	mov    DWORD PTR [r11-0x38],r8d
   14000fc88:	mov    r8,rdx
   14000fc8b:	mov    DWORD PTR [rsp+0x34],eax
   14000fc8f:	mov    eax,DWORD PTR [rsp+0x90]
   14000fc96:	mov    edx,DWORD PTR [r10+0x8]
   14000fc9a:	mov    DWORD PTR [r11-0x30],r9d
   14000fc9e:	lea    r9,[r11-0x38]
   14000fca2:	mov    DWORD PTR [rsp+0x3c],eax
   14000fca6:	mov    eax,DWORD PTR [rsp+0xa0]
   14000fcad:	mov    DWORD PTR [rsp+0x40],eax
   14000fcb1:	mov    rax,QWORD PTR [rsp+0x98]
   14000fcb9:	mov    QWORD PTR [r11-0x20],rax
   14000fcbd:	mov    rax,QWORD PTR [rcx]
   14000fcc0:	mov    rax,QWORD PTR [rax+0x48]
   14000fcc4:	call   QWORD PTR [rip+0x2876]        # 0x140012540
   14000fcca:	mov    edx,eax
   14000fccc:	test   eax,eax
   14000fcce:	js     0x14000fcd7
   14000fcd0:	mov    eax,0x1
   14000fcd5:	jmp    0x14000fcf5
   14000fcd7:	mov    ecx,eax
   14000fcd9:	movzx  eax,ax
   14000fcdc:	and    ecx,0x1fff0000
   14000fce2:	cmp    ecx,0x70000
   14000fce8:	cmove  edx,eax
   14000fceb:	mov    ecx,edx
   14000fced:	call   QWORD PTR [rip+0x25dd]        # 0x1400122d0
   14000fcf3:	xor    eax,eax
   14000fcf5:	add    rsp,0x68
   14000fcf9:	ret    
   14000fcfa:	int3   
   14000fcfb:	int3   
   14000fcfc:	int3   
   14000fcfd:	int3   
   14000fcfe:	int3   
   14000fcff:	int3   
   14000fd00:	mov    r11,rsp
   14000fd03:	push   rbx
   14000fd04:	sub    rsp,0x60
   14000fd08:	mov    eax,DWORD PTR [rsp+0xa8]
   14000fd0f:	mov    r10,rcx
   14000fd12:	mov    rcx,QWORD PTR [rcx]
   14000fd15:	mov    rbx,QWORD PTR [rsp+0xa0]
   14000fd1d:	mov    DWORD PTR [r11-0x38],r8d
   14000fd21:	lea    r8,[r11+0x40]
   14000fd25:	mov    DWORD PTR [rsp+0x34],eax
   14000fd29:	mov    eax,DWORD PTR [rsp+0x90]
   14000fd30:	mov    DWORD PTR [r11-0x30],r9d
   14000fd34:	lea    r9,[r11-0x38]
   14000fd38:	mov    DWORD PTR [rsp+0x3c],eax
   14000fd3c:	mov    eax,DWORD PTR [rbx]
   14000fd3e:	mov    DWORD PTR [rsp+0x40],eax
   14000fd42:	mov    rax,QWORD PTR [rsp+0x98]
   14000fd4a:	mov    QWORD PTR [r11-0x20],rax
   14000fd4e:	mov    rax,QWORD PTR [rcx]
   14000fd51:	mov    QWORD PTR [r11-0x48],r8
   14000fd55:	mov    r8,rdx
   14000fd58:	mov    edx,DWORD PTR [r10+0x8]
   14000fd5c:	mov    rax,QWORD PTR [rax+0x50]
   14000fd60:	call   QWORD PTR [rip+0x27da]        # 0x140012540
   14000fd66:	mov    edx,eax
   14000fd68:	test   eax,eax
   14000fd6a:	js     0x14000fd79
   14000fd6c:	mov    eax,DWORD PTR [rsp+0x40]
   14000fd70:	mov    DWORD PTR [rbx],eax
   14000fd72:	mov    eax,0x1
   14000fd77:	jmp    0x14000fda0
   14000fd79:	mov    eax,DWORD PTR [rsp+0xa8]
   14000fd80:	mov    ecx,edx
   14000fd82:	and    ecx,0x1fff0000
   14000fd88:	mov    DWORD PTR [rbx],eax
   14000fd8a:	cmp    ecx,0x70000
   14000fd90:	movzx  eax,dx
   14000fd93:	cmove  edx,eax
   14000fd96:	mov    ecx,edx
   14000fd98:	call   QWORD PTR [rip+0x2532]        # 0x1400122d0
   14000fd9e:	xor    eax,eax
   14000fda0:	add    rsp,0x60
   14000fda4:	pop    rbx
   14000fda5:	ret    
   14000fda6:	int3   
   14000fda7:	int3   
   14000fda8:	int3   
   14000fda9:	int3   
   14000fdaa:	int3   
   14000fdab:	int3   
   14000fdac:	int3   
   14000fdad:	int3   
   14000fdae:	int3   
   14000fdaf:	int3   
   14000fdb0:	mov    rax,rsp
   14000fdb3:	mov    QWORD PTR [rax+0x8],rbx
   14000fdb7:	mov    QWORD PTR [rax+0x10],rbp
   14000fdbb:	mov    QWORD PTR [rax+0x18],rsi
   14000fdbf:	mov    QWORD PTR [rax+0x20],rdi
   14000fdc3:	push   r14
   14000fdc5:	sub    rsp,0x50
   14000fdc9:	mov    rbx,QWORD PTR [rsp+0x80]
   14000fdd1:	mov    esi,r9d
   14000fdd4:	mov    ebp,r8d
   14000fdd7:	mov    r14,rdx
   14000fdda:	mov    rdi,rcx
   14000fddd:	mov    r8d,DWORD PTR [rbx+0x28]
   14000fde1:	lea    rdx,[rsp+0x80]
   14000fde9:	mov    r9,QWORD PTR [rbx+0x20]
   14000fded:	mov    rcx,QWORD PTR [rdi]
   14000fdf0:	mov    QWORD PTR [rsp+0x38],rdx
   14000fdf5:	mov    edx,DWORD PTR [rdi+0x8]
   14000fdf8:	mov    QWORD PTR [rsp+0x30],r9
   14000fdfd:	mov    r9d,ebp
   14000fe00:	mov    rax,QWORD PTR [rcx]
   14000fe03:	shr    r8d,1
   14000fe06:	mov    DWORD PTR [rsp+0x28],r8d
   14000fe0b:	mov    r8,r14
   14000fe0e:	mov    DWORD PTR [rsp+0x20],esi
   14000fe12:	mov    rax,QWORD PTR [rax+0x80]
   14000fe19:	call   QWORD PTR [rip+0x2721]        # 0x140012540
   14000fe1f:	mov    edx,eax
   14000fe21:	test   eax,eax
   14000fe23:	jns    0x14000fe7c
   14000fe25:	mov    ecx,eax
   14000fe27:	and    ecx,0x1fff0000
   14000fe2d:	cmp    ecx,0x70000
   14000fe33:	jne    0x14000fe5e
   14000fe35:	cmp    ax,0x7a
   14000fe39:	jne    0x14000fe5e
   14000fe3b:	mov    eax,DWORD PTR [rsp+0x80]
   14000fe42:	lea    edx,[rax*2+0x2]
   14000fe49:	cmp    edx,DWORD PTR [rbx+0x28]
   14000fe4c:	jbe    0x14000fddd
   14000fe4e:	mov    rcx,rbx
   14000fe51:	call   0x14000ea50
   14000fe56:	test   al,al
   14000fe58:	jne    0x14000fddd
   14000fe5a:	xor    eax,eax
   14000fe5c:	jmp    0x14000fe81
   14000fe5e:	mov    ecx,eax
   14000fe60:	movzx  eax,ax
   14000fe63:	and    ecx,0x1fff0000
   14000fe69:	cmp    ecx,0x70000
   14000fe6f:	cmove  edx,eax
   14000fe72:	mov    ecx,edx
   14000fe74:	call   QWORD PTR [rip+0x2456]        # 0x1400122d0
   14000fe7a:	jmp    0x14000fe5a
   14000fe7c:	mov    eax,0x1
   14000fe81:	mov    rbx,QWORD PTR [rsp+0x60]
   14000fe86:	mov    rbp,QWORD PTR [rsp+0x68]
   14000fe8b:	mov    rsi,QWORD PTR [rsp+0x70]
   14000fe90:	mov    rdi,QWORD PTR [rsp+0x78]
   14000fe95:	add    rsp,0x50
   14000fe99:	pop    r14
   14000fe9b:	ret    
   14000fe9c:	int3   
   14000fe9d:	int3   
   14000fe9e:	int3   
   14000fe9f:	int3   
   14000fea0:	int3   
   14000fea1:	int3   
   14000fea2:	int3   
   14000fea3:	int3   
   14000fea4:	int3   
   14000fea5:	int3   
   14000fea6:	int3   
   14000fea7:	int3   
   14000fea8:	int3   
   14000fea9:	int3   
   14000feaa:	int3   
   14000feab:	int3   
   14000feac:	int3   
   14000fead:	int3   
   14000feae:	int3   
   14000feaf:	int3   
   14000feb0:	mov    QWORD PTR [rsp+0x10],rbp
   14000feb5:	mov    QWORD PTR [rsp+0x18],rsi
   14000feba:	push   r14
   14000febc:	sub    rsp,0x40
   14000fec0:	and    DWORD PTR [rsp+0x50],0x0
   14000fec5:	mov    r14,rcx
   14000fec8:	mov    rcx,QWORD PTR [rcx]
   14000fecb:	mov    rsi,r8
   14000fece:	mov    rbp,rdx
   14000fed1:	lea    r8,[rsp+0x68]
   14000fed6:	lea    rdx,[rip+0x2e4b]        # 0x140012d28
   14000fedd:	mov    rax,QWORD PTR [rcx]
   14000fee0:	mov    rax,QWORD PTR [rax]
   14000fee3:	call   QWORD PTR [rip+0x2657]        # 0x140012540
   14000fee9:	mov    ecx,eax
   14000feeb:	test   eax,eax
   14000feed:	jns    0x14000ff0b
   14000feef:	and    eax,0x1fff0000
   14000fef4:	cmp    eax,0x70000
   14000fef9:	jne    0x14000fefe
   14000fefb:	movzx  ecx,cx
   14000fefe:	call   QWORD PTR [rip+0x23cc]        # 0x1400122d0
   14000ff04:	xor    eax,eax
   14000ff06:	jmp    0x14000ffc5
   14000ff0b:	mov    rdx,QWORD PTR [rsi+0x20]
   14000ff0f:	lea    r8,[rsp+0x50]
   14000ff14:	mov    rcx,QWORD PTR [rsp+0x68]
   14000ff19:	mov    r9d,DWORD PTR [rsi+0x28]
   14000ff1d:	mov    QWORD PTR [rsp+0x28],r8
   14000ff22:	mov    r8,rbp
   14000ff25:	mov    QWORD PTR [rsp+0x20],rdx
   14000ff2a:	mov    rax,QWORD PTR [rcx]
   14000ff2d:	mov    edx,DWORD PTR [r14+0x8]
   14000ff31:	shr    r9d,1
   14000ff34:	mov    rax,QWORD PTR [rax+0x140]
   14000ff3b:	call   QWORD PTR [rip+0x25ff]        # 0x140012540
   14000ff41:	mov    edx,eax
   14000ff43:	test   eax,eax
   14000ff45:	jns    0x14000ffae
   14000ff47:	mov    ecx,eax
   14000ff49:	and    ecx,0x1fff0000
   14000ff4f:	cmp    ecx,0x70000
   14000ff55:	jne    0x14000ff90
   14000ff57:	cmp    ax,0x7a
   14000ff5b:	jne    0x14000ff90
   14000ff5d:	mov    eax,DWORD PTR [rsp+0x50]
   14000ff61:	lea    edx,[rax*2+0x2]
   14000ff68:	cmp    edx,DWORD PTR [rsi+0x28]
   14000ff6b:	jbe    0x14000ff0b
   14000ff6d:	mov    rcx,rsi
   14000ff70:	call   0x14000ea50
   14000ff75:	test   al,al
   14000ff77:	jne    0x14000ff0b
   14000ff79:	mov    rcx,QWORD PTR [rsp+0x68]
   14000ff7e:	mov    rax,QWORD PTR [rcx]
   14000ff81:	mov    rax,QWORD PTR [rax+0x10]
   14000ff85:	call   QWORD PTR [rip+0x25b5]        # 0x140012540
   14000ff8b:	jmp    0x14000ff04
   14000ff90:	mov    ecx,eax
   14000ff92:	movzx  eax,ax
   14000ff95:	and    ecx,0x1fff0000
   14000ff9b:	cmp    ecx,0x70000
   14000ffa1:	cmove  edx,eax
   14000ffa4:	mov    ecx,edx
   14000ffa6:	call   QWORD PTR [rip+0x2324]        # 0x1400122d0
   14000ffac:	jmp    0x14000ff79
   14000ffae:	mov    rcx,QWORD PTR [rsp+0x68]
   14000ffb3:	mov    rax,QWORD PTR [rcx]
   14000ffb6:	mov    rax,QWORD PTR [rax+0x10]
   14000ffba:	call   QWORD PTR [rip+0x2580]        # 0x140012540
   14000ffc0:	mov    eax,0x1
   14000ffc5:	mov    rbp,QWORD PTR [rsp+0x58]
   14000ffca:	mov    rsi,QWORD PTR [rsp+0x60]
   14000ffcf:	add    rsp,0x40
   14000ffd3:	pop    r14
   14000ffd5:	ret    
   14000ffd6:	int3   
   14000ffd7:	int3   
   14000ffd8:	int3   
   14000ffd9:	int3   
   14000ffda:	int3   
   14000ffdb:	int3   
   14000ffdc:	int3   
   14000ffdd:	int3   
   14000ffde:	int3   
   14000ffdf:	int3   
   14000ffe0:	mov    r11,rsp
   14000ffe3:	mov    QWORD PTR [r11+0x8],rbx
   14000ffe7:	mov    QWORD PTR [r11+0x10],rbp
   14000ffeb:	mov    QWORD PTR [r11+0x18],rsi
   14000ffef:	mov    QWORD PTR [r11+0x20],rdi
   14000fff3:	push   r12
   14000fff5:	push   r14
   14000fff7:	push   r15
   14000fff9:	sub    rsp,0x40
   14000fffd:	mov    rdi,QWORD PTR [rsp+0x80]
   140010005:	mov    r15,rcx
   140010008:	mov    r12d,DWORD PTR [rsp+0x88]
   140010010:	lea    rcx,[r11+0x28]
   140010014:	mov    DWORD PTR [r11-0x20],r12d
   140010018:	mov    esi,r9d
   14001001b:	mov    QWORD PTR [r11-0x28],rcx
   14001001f:	mov    ebp,r8d
   140010022:	mov    eax,DWORD PTR [rdi+0x28]
   140010025:	mov    rcx,r15
   140010028:	mov    DWORD PTR [r11+0x28],eax
   14001002c:	mov    r14,rdx
   14001002f:	mov    rax,QWORD PTR [rdi+0x20]
   140010033:	mov    QWORD PTR [r11-0x30],rax
   140010037:	mov    DWORD PTR [rsp+0x20],0x2
   14001003f:	call   0x14000fd00
   140010044:	xor    ebx,ebx
   140010046:	test   eax,eax
   140010048:	jne    0x14001010c
   14001004e:	call   QWORD PTR [rip+0x22a4]        # 0x1400122f8
   140010054:	cmp    eax,0x800cc801
   140010059:	je     0x1400100bf
   14001005b:	call   QWORD PTR [rip+0x2297]        # 0x1400122f8
   140010061:	cmp    eax,0x7a
   140010064:	jne    0x1400100bb
   140010066:	mov    edx,DWORD PTR [rsp+0x80]
   14001006d:	cmp    edx,DWORD PTR [rdi+0x28]
   140010070:	jbe    0x14001007e
   140010072:	mov    rcx,rdi
   140010075:	call   0x14000ea50
   14001007a:	cmp    al,0x1
   14001007c:	jne    0x1400100b4
   14001007e:	mov    rax,QWORD PTR [rdi+0x20]
   140010082:	lea    rcx,[rsp+0x80]
   14001008a:	mov    DWORD PTR [rsp+0x38],r12d
   14001008f:	mov    r9d,esi
   140010092:	mov    QWORD PTR [rsp+0x30],rcx
   140010097:	mov    r8d,ebp
   14001009a:	mov    QWORD PTR [rsp+0x28],rax
   14001009f:	mov    rcx,r15
   1400100a2:	mov    rdx,r14
   1400100a5:	mov    DWORD PTR [rsp+0x20],0x2
   1400100ad:	call   0x14000fd00
   1400100b2:	jmp    0x140010046
   1400100b4:	mov    ecx,0x8
   1400100b9:	jmp    0x140010102
   1400100bb:	xor    ecx,ecx
   1400100bd:	jmp    0x140010102
   1400100bf:	mov    rdx,QWORD PTR [rsp+0x90]
   1400100c7:	test   rdx,rdx
   1400100ca:	je     0x140010108
   1400100cc:	or     rax,0xffffffffffffffff
   1400100d0:	inc    rax
   1400100d3:	cmp    WORD PTR [rdx+rax*2],bx
   1400100d7:	jne    0x1400100d0
   1400100d9:	lea    r8d,[rax+rax*1]
   1400100dd:	mov    BYTE PTR [rsp+0x20],0x1
   1400100e2:	xor    r9d,r9d
   1400100e5:	mov    rcx,rdi
   1400100e8:	call   0x14000eb60
   1400100ed:	mov    ecx,eax
   1400100ef:	test   eax,eax
   1400100f1:	jns    0x140010127
   1400100f3:	and    eax,0x1fff0000
   1400100f8:	cmp    eax,0x70000
   1400100fd:	jne    0x140010102
   1400100ff:	movzx  ecx,cx
   140010102:	call   QWORD PTR [rip+0x21c8]        # 0x1400122d0
   140010108:	xor    eax,eax
   14001010a:	jmp    0x14001012c
   14001010c:	mov    rcx,QWORD PTR [rdi+0x20]
   140010110:	test   rcx,rcx
   140010113:	je     0x140010124
   140010115:	mov    edx,DWORD PTR [rdi+0x28]
   140010118:	shr    rdx,1
   14001011b:	call   QWORD PTR [rip+0x226f]        # 0x140012390
   140010121:	mov    rbx,rax
   140010124:	mov    DWORD PTR [rdi+0x30],ebx
   140010127:	mov    eax,0x1
   14001012c:	mov    rbx,QWORD PTR [rsp+0x60]
   140010131:	mov    rbp,QWORD PTR [rsp+0x68]
   140010136:	mov    rsi,QWORD PTR [rsp+0x70]
   14001013b:	mov    rdi,QWORD PTR [rsp+0x78]
   140010140:	add    rsp,0x40
   140010144:	pop    r15
   140010146:	pop    r14
   140010148:	pop    r12
   14001014a:	ret    
   14001014b:	int3   
   14001014c:	int3   
   14001014d:	int3   
   14001014e:	int3   
   14001014f:	int3   
   140010150:	int3   
   140010151:	int3   
   140010152:	int3   
   140010153:	int3   
   140010154:	int3   
   140010155:	int3   
   140010156:	int3   
   140010157:	int3   
   140010158:	int3   
   140010159:	int3   
   14001015a:	int3   
   14001015b:	int3   
   14001015c:	int3   
   14001015d:	int3   
   14001015e:	int3   
   14001015f:	int3   
   140010160:	mov    r11,rsp
   140010163:	mov    QWORD PTR [r11+0x8],rbx
   140010167:	mov    QWORD PTR [r11+0x10],rbp
   14001016b:	mov    QWORD PTR [r11+0x18],rsi
   14001016f:	push   rdi
   140010170:	push   r14
   140010172:	push   r15
   140010174:	sub    rsp,0x40
   140010178:	mov    rbx,QWORD PTR [rsp+0x80]
   140010180:	mov    edi,r9d
   140010183:	mov    r15d,DWORD PTR [rsp+0x88]
   14001018b:	mov    esi,r8d
   14001018e:	mov    rbp,rdx
   140010191:	mov    r14,rcx
   140010194:	mov    eax,DWORD PTR [rbx+0x28]
   140010197:	mov    DWORD PTR [r11+0x28],eax
   14001019b:	jmp    0x1400101da
   14001019d:	call   QWORD PTR [rip+0x2155]        # 0x1400122f8
   1400101a3:	cmp    eax,0x800cc801
   1400101a8:	je     0x140010237
   1400101ae:	call   QWORD PTR [rip+0x2144]        # 0x1400122f8
   1400101b4:	cmp    eax,0x7a
   1400101b7:	jne    0x140010237
   1400101b9:	mov    edx,DWORD PTR [rsp+0x80]
   1400101c0:	cmp    edx,DWORD PTR [rbx+0x28]
   1400101c3:	jbe    0x1400101d1
   1400101c5:	mov    rcx,rbx
   1400101c8:	call   0x14000ea50
   1400101cd:	test   al,al
   1400101cf:	je     0x140010237
   1400101d1:	mov    r9d,edi
   1400101d4:	mov    r8d,esi
   1400101d7:	mov    rdx,rbp
   1400101da:	mov    rax,QWORD PTR [rbx+0x20]
   1400101de:	lea    rcx,[rsp+0x80]
   1400101e6:	mov    DWORD PTR [rsp+0x38],r15d
   1400101eb:	mov    QWORD PTR [rsp+0x30],rcx
   1400101f0:	mov    rcx,r14
   1400101f3:	mov    QWORD PTR [rsp+0x28],rax
   1400101f8:	mov    DWORD PTR [rsp+0x20],0x5
   140010200:	call   0x14000fd00
   140010205:	test   eax,eax
   140010207:	je     0x14001019d
   140010209:	mov    rcx,QWORD PTR [rbx+0x20]
   14001020d:	lea    rdx,[rbx+0x34]
   140010211:	call   0x14000e520
   140010216:	mov    DWORD PTR [rbx+0x30],eax
   140010219:	mov    eax,0x1
   14001021e:	mov    rbx,QWORD PTR [rsp+0x60]
   140010223:	mov    rbp,QWORD PTR [rsp+0x68]
   140010228:	mov    rsi,QWORD PTR [rsp+0x70]
   14001022d:	add    rsp,0x40
   140010231:	pop    r15
   140010233:	pop    r14
   140010235:	pop    rdi
   140010236:	ret    
   140010237:	xor    eax,eax
   140010239:	jmp    0x14001021e
   14001023b:	int3   
   14001023c:	int3   
   14001023d:	int3   
   14001023e:	int3   
   14001023f:	int3   
   140010240:	int3   
   140010241:	int3   
   140010242:	int3   
   140010243:	int3   
   140010244:	int3   
   140010245:	int3   
   140010246:	int3   
   140010247:	int3   
   140010248:	int3   
   140010249:	int3   
   14001024a:	int3   
   14001024b:	int3   
   14001024c:	int3   
   14001024d:	int3   
   14001024e:	int3   
   14001024f:	int3   
   140010250:	xor    r9d,r9d
   140010253:	lea    rax,[rcx+0x8]
   140010257:	mov    QWORD PTR [rcx],r9
   14001025a:	mov    QWORD PTR [rax],r9
   14001025d:	mov    QWORD PTR [rax+0x20],rax
   140010261:	mov    WORD PTR [rax+0x2c],0x100
   140010267:	lea    r8d,[r9+0x1]
   14001026b:	lea    edx,[r9+0x20]
   14001026f:	mov    DWORD PTR [rax+0x28],edx
   140010272:	lea    rax,[rcx+0x38]
   140010276:	mov    QWORD PTR [rax],r9
   140010279:	mov    QWORD PTR [rax+0x20],rax
   14001027d:	mov    DWORD PTR [rax+0x28],edx
   140010280:	mov    WORD PTR [rax+0x2c],0x100
   140010286:	mov    rax,rcx
   140010289:	mov    DWORD PTR [rcx+0x68],r8d
   14001028d:	mov    DWORD PTR [rcx+0x6c],r8d
   140010291:	mov    DWORD PTR [rcx+0x70],r8d
   140010295:	ret    
   140010296:	int3   
   140010297:	int3   
   140010298:	int3   
   140010299:	int3   
   14001029a:	int3   
   14001029b:	int3   
   14001029c:	int3   
   14001029d:	int3   
   14001029e:	int3   
   14001029f:	int3   
   1400102a0:	rex push rbx
   1400102a2:	sub    rsp,0x20
   1400102a6:	lea    rax,[rcx+0x8]
   1400102aa:	xor    r9d,r9d
   1400102ad:	mov    QWORD PTR [rcx],r9
   1400102b0:	mov    rbx,rcx
   1400102b3:	mov    QWORD PTR [rax],r9
   1400102b6:	mov    QWORD PTR [rax+0x20],rax
   1400102ba:	mov    WORD PTR [rax+0x2c],0x100
   1400102c0:	lea    ecx,[r9+0x20]
   1400102c4:	mov    DWORD PTR [rax+0x28],ecx
   1400102c7:	lea    r8d,[r9+0x1]
   1400102cb:	lea    rax,[rbx+0x38]
   1400102cf:	mov    DWORD PTR [rax+0x28],ecx
   1400102d2:	mov    rcx,rbx
   1400102d5:	mov    QWORD PTR [rax],r9
   1400102d8:	mov    QWORD PTR [rax+0x20],rax
   1400102dc:	mov    WORD PTR [rax+0x2c],0x100
   1400102e2:	mov    QWORD PTR [rbx+0x68],r8
   1400102e6:	mov    DWORD PTR [rbx+0x70],r8d
   1400102ea:	call   0x140010b20
   1400102ef:	mov    rax,rbx
   1400102f2:	add    rsp,0x20
   1400102f6:	pop    rbx
   1400102f7:	ret    
   1400102f8:	int3   
   1400102f9:	int3   
   1400102fa:	int3   
   1400102fb:	int3   
   1400102fc:	int3   
   1400102fd:	int3   
   1400102fe:	int3   
   1400102ff:	int3   
   140010300:	rex push rbx
   140010302:	sub    rsp,0x20
   140010306:	lea    rax,[rcx+0x8]
   14001030a:	xor    r10d,r10d
   14001030d:	mov    QWORD PTR [rcx],r10
   140010310:	mov    rbx,rcx
   140010313:	mov    QWORD PTR [rax],r10
   140010316:	mov    QWORD PTR [rax+0x20],rax
   14001031a:	mov    WORD PTR [rax+0x2c],0x100
   140010320:	lea    ecx,[r10+0x20]
   140010324:	mov    DWORD PTR [rax+0x28],ecx
   140010327:	lea    rax,[rbx+0x38]
   14001032b:	mov    DWORD PTR [rax+0x28],ecx
   14001032e:	lea    r9d,[r10+0x1]
   140010332:	mov    QWORD PTR [rax],r10
   140010335:	mov    rcx,rbx
   140010338:	mov    QWORD PTR [rax+0x20],rax
   14001033c:	mov    WORD PTR [rax+0x2c],0x100
   140010342:	mov    QWORD PTR [rbx+0x68],r9
   140010346:	mov    DWORD PTR [rbx+0x70],r9d
   14001034a:	test   r8d,r8d
   14001034d:	je     0x140010356
   14001034f:	call   0x140010bd0
   140010354:	jmp    0x14001035b
   140010356:	call   0x140010b20
   14001035b:	mov    rax,rbx
   14001035e:	add    rsp,0x20
   140010362:	pop    rbx
   140010363:	ret    
   140010364:	int3   
   140010365:	int3   
   140010366:	int3   
   140010367:	int3   
   140010368:	int3   
   140010369:	int3   
   14001036a:	int3   
   14001036b:	int3   
   14001036c:	int3   
   14001036d:	int3   
   14001036e:	int3   
   14001036f:	int3   
   140010370:	rex push rbx
   140010372:	sub    rsp,0x20
   140010376:	lea    rax,[rcx+0x8]
   14001037a:	xor    r9d,r9d
   14001037d:	mov    QWORD PTR [rcx],r9
   140010380:	mov    rbx,rcx
   140010383:	mov    QWORD PTR [rax],r9
   140010386:	mov    QWORD PTR [rax+0x20],rax
   14001038a:	mov    WORD PTR [rax+0x2c],0x100
   140010390:	lea    ecx,[r9+0x20]
   140010394:	mov    DWORD PTR [rax+0x28],ecx
   140010397:	lea    r8d,[r9+0x1]
   14001039b:	lea    rax,[rbx+0x38]
   14001039f:	mov    DWORD PTR [rax+0x28],ecx
   1400103a2:	mov    rcx,rbx
   1400103a5:	mov    QWORD PTR [rax],r9
   1400103a8:	mov    QWORD PTR [rax+0x20],rax
   1400103ac:	mov    WORD PTR [rax+0x2c],0x100
   1400103b2:	mov    QWORD PTR [rbx+0x68],r8
   1400103b6:	mov    DWORD PTR [rbx+0x70],r8d
   1400103ba:	call   0x140010bd0
   1400103bf:	mov    rax,rbx
   1400103c2:	add    rsp,0x20
   1400103c6:	pop    rbx
   1400103c7:	ret    
   1400103c8:	int3   
   1400103c9:	int3   
   1400103ca:	int3   
   1400103cb:	int3   
   1400103cc:	int3   
   1400103cd:	int3   
   1400103ce:	int3   
   1400103cf:	int3   
   1400103d0:	rex push rbx
   1400103d2:	sub    rsp,0x20
   1400103d6:	lea    rax,[rcx+0x8]
   1400103da:	xor    r9d,r9d
   1400103dd:	mov    QWORD PTR [rcx],r9
   1400103e0:	mov    rbx,rcx
   1400103e3:	mov    QWORD PTR [rax],r9
   1400103e6:	mov    r8,rdx
   1400103e9:	mov    QWORD PTR [rax+0x20],rax
   1400103ed:	mov    WORD PTR [rax+0x2c],0x100
   1400103f3:	lea    ecx,[r9+0x20]
   1400103f7:	mov    DWORD PTR [rax+0x28],ecx
   1400103fa:	lea    edx,[rcx-0x1f]
   1400103fd:	lea    rax,[rbx+0x38]
   140010401:	mov    DWORD PTR [rax+0x28],ecx
   140010404:	mov    rcx,r8
   140010407:	mov    QWORD PTR [rax],r9
   14001040a:	mov    QWORD PTR [rax+0x20],rax
   14001040e:	mov    WORD PTR [rax+0x2c],0x100
   140010414:	mov    QWORD PTR [rbx+0x68],rdx
   140010418:	mov    DWORD PTR [rbx+0x70],edx
   14001041b:	cmp    DWORD PTR [r8+0x6c],r9d
   14001041f:	je     0x140010433
   140010421:	call   0x140011080
   140010426:	mov    rdx,rax
   140010429:	mov    rcx,rbx
   14001042c:	call   0x140010bd0
   140010431:	jmp    0x140010445
   140010433:	xor    edx,edx
   140010435:	call   0x140011080
   14001043a:	mov    rdx,rax
   14001043d:	mov    rcx,rbx
   140010440:	call   0x140010b20
   140010445:	mov    rax,rbx
   140010448:	add    rsp,0x20
   14001044c:	pop    rbx
   14001044d:	ret    
   14001044e:	int3   
   14001044f:	int3   
   140010450:	int3   
   140010451:	int3   
   140010452:	int3   
   140010453:	int3   
   140010454:	int3   
   140010455:	int3   
   140010456:	int3   
   140010457:	int3   
   140010458:	int3   
   140010459:	int3   
   14001045a:	int3   
   14001045b:	int3   
   14001045c:	int3   
   14001045d:	int3   
   14001045e:	int3   
   14001045f:	int3   
   140010460:	mov    eax,DWORD PTR [rcx+0x70]
   140010463:	ret    
   140010464:	int3   
   140010465:	int3   
   140010466:	int3   
   140010467:	int3   
   140010468:	int3   
   140010469:	int3   
   14001046a:	int3   
   14001046b:	int3   
   14001046c:	int3   
   14001046d:	int3   
   14001046e:	int3   
   14001046f:	int3   
   140010470:	rex push rbx
   140010472:	sub    rsp,0x20
   140010476:	xor    ebx,ebx
   140010478:	cmp    DWORD PTR [rcx+0x6c],ebx
   14001047b:	je     0x14001048a
   14001047d:	lea    edx,[rbx+0x1]
   140010480:	call   0x140011080
   140010485:	cmp    WORD PTR [rax],bx
   140010488:	jmp    0x140010493
   14001048a:	xor    edx,edx
   14001048c:	call   0x140011080
   140010491:	cmp    BYTE PTR [rax],bl
   140010493:	sete   bl
   140010496:	mov    eax,ebx
   140010498:	add    rsp,0x20
   14001049c:	pop    rbx
   14001049d:	ret    
   14001049e:	int3   
   14001049f:	int3   
   1400104a0:	int3   
   1400104a1:	int3   
   1400104a2:	int3   
   1400104a3:	int3   
   1400104a4:	int3   
   1400104a5:	int3   
   1400104a6:	int3   
   1400104a7:	int3   
   1400104a8:	int3   
   1400104a9:	int3   
   1400104aa:	int3   
   1400104ab:	int3   
   1400104ac:	int3   
   1400104ad:	int3   
   1400104ae:	int3   
   1400104af:	int3   
   1400104b0:	test   rdx,rdx
   1400104b3:	je     0x1400104ce
   1400104b5:	or     r8,0xffffffffffffffff
   1400104b9:	inc    r8
   1400104bc:	cmp    BYTE PTR [rdx+r8*1],0x0
   1400104c1:	jne    0x1400104b9
   1400104c3:	mov    r9d,0x1
   1400104c9:	jmp    0x140010c90
   1400104ce:	mov    eax,0x1
   1400104d3:	ret    
   1400104d4:	int3   
   1400104d5:	int3   
   1400104d6:	int3   
   1400104d7:	int3   
   1400104d8:	int3   
   1400104d9:	int3   
   1400104da:	int3   
   1400104db:	int3   
   1400104dc:	int3   
   1400104dd:	int3   
   1400104de:	int3   
   1400104df:	int3   
   1400104e0:	xor    eax,eax
   1400104e2:	test   rdx,rdx
   1400104e5:	je     0x140010500
   1400104e7:	or     r8,0xffffffffffffffff
   1400104eb:	inc    r8
   1400104ee:	cmp    WORD PTR [rdx+r8*2],ax
   1400104f3:	jne    0x1400104eb
   1400104f5:	mov    r9d,0x1
   1400104fb:	jmp    0x140010e30
   140010500:	mov    eax,0x1
   140010505:	ret    
   140010506:	int3   
   140010507:	int3   
   140010508:	int3   
   140010509:	int3   
   14001050a:	int3   
   14001050b:	int3   
   14001050c:	int3   
   14001050d:	int3   
   14001050e:	int3   
   14001050f:	int3   
   140010510:	test   rdx,rdx
   140010513:	je     0x140010520
   140010515:	mov    r9d,0x1
   14001051b:	jmp    0x140010c90
   140010520:	mov    eax,0x1
   140010525:	ret    
   140010526:	int3   
   140010527:	int3   
   140010528:	int3   
   140010529:	int3   
   14001052a:	int3   
   14001052b:	int3   
   14001052c:	int3   
   14001052d:	int3   
   14001052e:	int3   
   14001052f:	int3   
   140010530:	test   rdx,rdx
   140010533:	je     0x140010540
   140010535:	mov    r9d,0x1
   14001053b:	jmp    0x140010e30
   140010540:	mov    eax,0x1
   140010545:	ret    
   140010546:	int3   
   140010547:	int3   
   140010548:	int3   
   140010549:	int3   
   14001054a:	int3   
   14001054b:	int3   
   14001054c:	int3   
   14001054d:	int3   
   14001054e:	int3   
   14001054f:	int3   
   140010550:	mov    QWORD PTR [rsp+0x8],rbx
   140010555:	mov    QWORD PTR [rsp+0x10],rbp
   14001055a:	push   rdi
   14001055b:	sub    rsp,0x20
   14001055f:	xor    eax,eax
   140010561:	mov    rdi,rdx
   140010564:	mov    rbp,rcx
   140010567:	cmp    DWORD PTR [rcx+0x6c],eax
   14001056a:	jne    0x1400105a3
   14001056c:	cmp    DWORD PTR [rdx+0x6c],eax
   14001056f:	jne    0x1400105ba
   140010571:	cmp    DWORD PTR [rdx+0x68],eax
   140010574:	jne    0x140010581
   140010576:	lea    edx,[rax+0x1]
   140010579:	mov    rcx,rdi
   14001057c:	call   0x140011080
   140010581:	mov    ebx,DWORD PTR [rdi]
   140010583:	xor    edx,edx
   140010585:	mov    rcx,rdi
   140010588:	call   0x140011080
   14001058d:	mov    r9d,0x1
   140010593:	mov    r8d,ebx
   140010596:	mov    rdx,rax
   140010599:	mov    rcx,rbp
   14001059c:	call   0x140010c90
   1400105a1:	jmp    0x1400105dd
   1400105a3:	cmp    DWORD PTR [rdx+0x6c],eax
   1400105a6:	jne    0x1400105ba
   1400105a8:	cmp    DWORD PTR [rdx+0x68],eax
   1400105ab:	jne    0x1400105ba
   1400105ad:	mov    edx,0x1
   1400105b2:	mov    rcx,rdi
   1400105b5:	call   0x140011080
   1400105ba:	mov    ebx,DWORD PTR [rdi]
   1400105bc:	mov    edx,0x1
   1400105c1:	mov    rcx,rdi
   1400105c4:	call   0x140011080
   1400105c9:	mov    r9d,0x1
   1400105cf:	mov    r8d,ebx
   1400105d2:	mov    rdx,rax
   1400105d5:	mov    rcx,rbp
   1400105d8:	call   0x140010e30
   1400105dd:	mov    rbx,QWORD PTR [rsp+0x30]
   1400105e2:	mov    rbp,QWORD PTR [rsp+0x38]
   1400105e7:	add    rsp,0x20
   1400105eb:	pop    rdi
   1400105ec:	ret    
   1400105ed:	int3   
   1400105ee:	int3   
   1400105ef:	int3   
   1400105f0:	int3   
   1400105f1:	int3   
   1400105f2:	int3   
   1400105f3:	int3   
   1400105f4:	int3   
   1400105f5:	int3   
   1400105f6:	int3   
   1400105f7:	int3   
   1400105f8:	int3   
   1400105f9:	int3   
   1400105fa:	int3   
   1400105fb:	int3   
   1400105fc:	int3   
   1400105fd:	int3   
   1400105fe:	int3   
   1400105ff:	int3   
   140010600:	mov    rax,QWORD PTR [rcx+0x28]
   140010604:	xor    edx,edx
   140010606:	mov    BYTE PTR [rax],dl
   140010608:	mov    rax,QWORD PTR [rcx+0x58]
   14001060c:	mov    WORD PTR [rax],dx
   14001060f:	lea    eax,[rdx+0x1]
   140010612:	mov    DWORD PTR [rcx+0x6c],eax
   140010615:	mov    DWORD PTR [rcx+0x68],eax
   140010618:	mov    QWORD PTR [rcx],rdx
   14001061b:	ret    
   14001061c:	int3   
   14001061d:	int3   
   14001061e:	int3   
   14001061f:	int3   
   140010620:	int3   
   140010621:	int3   
   140010622:	int3   
   140010623:	int3   
   140010624:	int3   
   140010625:	int3   
   140010626:	int3   
   140010627:	int3   
   140010628:	int3   
   140010629:	int3   
   14001062a:	int3   
   14001062b:	int3   
   14001062c:	int3   
   14001062d:	int3   
   14001062e:	int3   
   14001062f:	int3   
   140010630:	sub    rsp,0x28
   140010634:	or     r8,0xffffffffffffffff
   140010638:	xor    r9d,r9d
   14001063b:	inc    r8
   14001063e:	cmp    BYTE PTR [rdx+r8*1],r9b
   140010642:	jne    0x14001063b
   140010644:	mov    rax,QWORD PTR [rcx+0x28]
   140010648:	mov    BYTE PTR [rax],r9b
   14001064b:	mov    rax,QWORD PTR [rcx+0x58]
   14001064f:	mov    WORD PTR [rax],r9w
   140010653:	mov    eax,0x1
   140010658:	mov    DWORD PTR [rcx+0x6c],eax
   14001065b:	mov    DWORD PTR [rcx+0x68],eax
   14001065e:	mov    QWORD PTR [rcx],r9
   140010661:	test   rdx,rdx
   140010664:	je     0x14001066b
   140010666:	call   0x140010c90
   14001066b:	add    rsp,0x28
   14001066f:	ret    
   140010670:	int3   
   140010671:	int3   
   140010672:	int3   
   140010673:	int3   
   140010674:	int3   
   140010675:	int3   
   140010676:	int3   
   140010677:	int3   
   140010678:	int3   
   140010679:	int3   
   14001067a:	int3   
   14001067b:	int3   
   14001067c:	int3   
   14001067d:	int3   
   14001067e:	int3   
   14001067f:	int3   
   140010680:	sub    rsp,0x28
   140010684:	or     r8,0xffffffffffffffff
   140010688:	xor    r9d,r9d
   14001068b:	inc    r8
   14001068e:	cmp    WORD PTR [rdx+r8*2],r9w
   140010693:	jne    0x14001068b
   140010695:	mov    rax,QWORD PTR [rcx+0x28]
   140010699:	mov    BYTE PTR [rax],r9b
   14001069c:	mov    rax,QWORD PTR [rcx+0x58]
   1400106a0:	mov    WORD PTR [rax],r9w
   1400106a4:	mov    eax,0x1
   1400106a9:	mov    DWORD PTR [rcx+0x6c],eax
   1400106ac:	mov    DWORD PTR [rcx+0x68],eax
   1400106af:	mov    QWORD PTR [rcx],r9
   1400106b2:	test   rdx,rdx
   1400106b5:	je     0x1400106bc
   1400106b7:	call   0x140010e30
   1400106bc:	add    rsp,0x28
   1400106c0:	ret    
   1400106c1:	int3   
   1400106c2:	int3   
   1400106c3:	int3   
   1400106c4:	int3   
   1400106c5:	int3   
   1400106c6:	int3   
   1400106c7:	int3   
   1400106c8:	int3   
   1400106c9:	int3   
   1400106ca:	int3   
   1400106cb:	int3   
   1400106cc:	int3   
   1400106cd:	int3   
   1400106ce:	int3   
   1400106cf:	int3   
   1400106d0:	sub    rsp,0x28
   1400106d4:	mov    rax,QWORD PTR [rcx+0x28]
   1400106d8:	xor    r9d,r9d
   1400106db:	mov    BYTE PTR [rax],r9b
   1400106de:	mov    rax,QWORD PTR [rcx+0x58]
   1400106e2:	mov    WORD PTR [rax],r9w
   1400106e6:	lea    eax,[r9+0x1]
   1400106ea:	mov    DWORD PTR [rcx+0x6c],eax
   1400106ed:	mov    DWORD PTR [rcx+0x68],eax
   1400106f0:	mov    QWORD PTR [rcx],r9
   1400106f3:	test   rdx,rdx
   1400106f6:	je     0x1400106fd
   1400106f8:	call   0x140010c90
   1400106fd:	add    rsp,0x28
   140010701:	ret    
   140010702:	int3   
   140010703:	int3   
   140010704:	int3   
   140010705:	int3   
   140010706:	int3   
   140010707:	int3   
   140010708:	int3   
   140010709:	int3   
   14001070a:	int3   
   14001070b:	int3   
   14001070c:	int3   
   14001070d:	int3   
   14001070e:	int3   
   14001070f:	int3   
   140010710:	sub    rsp,0x28
   140010714:	mov    rax,QWORD PTR [rcx+0x28]
   140010718:	xor    r9d,r9d
   14001071b:	mov    BYTE PTR [rax],r9b
   14001071e:	mov    rax,QWORD PTR [rcx+0x58]
   140010722:	mov    WORD PTR [rax],r9w
   140010726:	lea    eax,[r9+0x1]
   14001072a:	mov    DWORD PTR [rcx+0x6c],eax
   14001072d:	mov    DWORD PTR [rcx+0x68],eax
   140010730:	mov    QWORD PTR [rcx],r9
   140010733:	test   rdx,rdx
   140010736:	je     0x14001073d
   140010738:	call   0x140010e30
   14001073d:	add    rsp,0x28
   140010741:	ret    
   140010742:	int3   
   140010743:	int3   
   140010744:	int3   
   140010745:	int3   
   140010746:	int3   
   140010747:	int3   
   140010748:	int3   
   140010749:	int3   
   14001074a:	int3   
   14001074b:	int3   
   14001074c:	int3   
   14001074d:	int3   
   14001074e:	int3   
   14001074f:	int3   
   140010750:	mov    QWORD PTR [rsp+0x8],rbx
   140010755:	mov    QWORD PTR [rsp+0x10],rbp
   14001075a:	mov    QWORD PTR [rsp+0x18],rsi
   14001075f:	push   rdi
   140010760:	sub    rsp,0x20
   140010764:	xor    ebp,ebp
   140010766:	mov    rdi,rcx
   140010769:	mov    rax,rdx
   14001076c:	mov    rcx,rdx
   14001076f:	cmp    DWORD PTR [rdx+0x6c],ebp
   140010772:	je     0x1400107af
   140010774:	mov    esi,DWORD PTR [rdx]
   140010776:	lea    ebx,[rbp+0x1]
   140010779:	mov    edx,ebx
   14001077b:	call   0x140011080
   140010780:	mov    rdx,QWORD PTR [rdi+0x28]
   140010784:	mov    BYTE PTR [rdx],bpl
   140010787:	mov    rdx,QWORD PTR [rdi+0x58]
   14001078b:	mov    WORD PTR [rdx],bp
   14001078e:	mov    DWORD PTR [rdi+0x6c],ebx
   140010791:	mov    DWORD PTR [rdi+0x68],ebx
   140010794:	mov    QWORD PTR [rdi],rbp
   140010797:	test   rax,rax
   14001079a:	je     0x1400107ed
   14001079c:	xor    r9d,r9d
   14001079f:	mov    r8d,esi
   1400107a2:	mov    rdx,rax
   1400107a5:	mov    rcx,rdi
   1400107a8:	call   0x140010e30
   1400107ad:	jmp    0x1400107eb
   1400107af:	mov    esi,DWORD PTR [rdx+0x4]
   1400107b2:	xor    edx,edx
   1400107b4:	call   0x140011080
   1400107b9:	mov    rcx,QWORD PTR [rdi+0x28]
   1400107bd:	mov    ebx,0x1
   1400107c2:	mov    BYTE PTR [rcx],bpl
   1400107c5:	mov    rcx,QWORD PTR [rdi+0x58]
   1400107c9:	mov    WORD PTR [rcx],bp
   1400107cc:	mov    DWORD PTR [rdi+0x6c],ebx
   1400107cf:	mov    DWORD PTR [rdi+0x68],ebx
   1400107d2:	mov    QWORD PTR [rdi],rbp
   1400107d5:	test   rax,rax
   1400107d8:	je     0x1400107ed
   1400107da:	xor    r9d,r9d
   1400107dd:	mov    r8d,esi
   1400107e0:	mov    rdx,rax
   1400107e3:	mov    rcx,rdi
   1400107e6:	call   0x140010c90
   1400107eb:	mov    ebx,eax
   1400107ed:	mov    rbp,QWORD PTR [rsp+0x38]
   1400107f2:	mov    eax,ebx
   1400107f4:	mov    rbx,QWORD PTR [rsp+0x30]
   1400107f9:	mov    rsi,QWORD PTR [rsp+0x40]
   1400107fe:	add    rsp,0x20
   140010802:	pop    rdi
   140010803:	ret    
   140010804:	int3   
   140010805:	int3   
   140010806:	int3   
   140010807:	int3   
   140010808:	int3   
   140010809:	int3   
   14001080a:	int3   
   14001080b:	int3   
   14001080c:	int3   
   14001080d:	int3   
   14001080e:	int3   
   14001080f:	int3   
   140010810:	rex push rbx
   140010812:	sub    rsp,0x20
   140010816:	xor    eax,eax
   140010818:	mov    rbx,rcx
   14001081b:	test   edx,edx
   14001081d:	je     0x140010838
   14001081f:	cmp    DWORD PTR [rcx+0x6c],eax
   140010822:	jne    0x140010831
   140010824:	cmp    DWORD PTR [rcx+0x68],eax
   140010827:	jne    0x140010831
   140010829:	lea    edx,[rax+0x1]
   14001082c:	call   0x140011080
   140010831:	mov    eax,DWORD PTR [rbx]
   140010833:	add    rax,rax
   140010836:	jmp    0x14001084c
   140010838:	cmp    DWORD PTR [rcx+0x6c],eax
   14001083b:	je     0x140010849
   14001083d:	cmp    DWORD PTR [rcx+0x68],eax
   140010840:	jne    0x140010849
   140010842:	xor    edx,edx
   140010844:	call   0x140011080
   140010849:	mov    eax,DWORD PTR [rbx+0x4]
   14001084c:	add    rsp,0x20
   140010850:	pop    rbx
   140010851:	ret    
   140010852:	int3   
   140010853:	int3   
   140010854:	int3   
   140010855:	int3   
   140010856:	int3   
   140010857:	int3   
   140010858:	int3   
   140010859:	int3   
   14001085a:	int3   
   14001085b:	int3   
   14001085c:	int3   
   14001085d:	int3   
   14001085e:	int3   
   14001085f:	int3   
   140010860:	rex push rbx
   140010862:	sub    rsp,0x20
   140010866:	cmp    DWORD PTR [rcx+0x6c],0x0
   14001086a:	mov    rbx,rcx
   14001086d:	je     0x14001087c
   14001086f:	cmp    DWORD PTR [rcx+0x68],0x0
   140010873:	jne    0x14001087c
   140010875:	xor    edx,edx
   140010877:	call   0x140011080
   14001087c:	mov    eax,DWORD PTR [rbx+0x4]
   14001087f:	add    rsp,0x20
   140010883:	pop    rbx
   140010884:	ret    
   140010885:	int3   
   140010886:	int3   
   140010887:	int3   
   140010888:	int3   
   140010889:	int3   
   14001088a:	int3   
   14001088b:	int3   
   14001088c:	int3   
   14001088d:	int3   
   14001088e:	int3   
   14001088f:	int3   
   140010890:	rex push rbx
   140010892:	sub    rsp,0x20
   140010896:	cmp    DWORD PTR [rcx+0x6c],0x0
   14001089a:	mov    rbx,rcx
   14001089d:	jne    0x1400108af
   14001089f:	cmp    DWORD PTR [rcx+0x68],0x0
   1400108a3:	jne    0x1400108af
   1400108a5:	mov    edx,0x1
   1400108aa:	call   0x140011080
   1400108af:	mov    eax,DWORD PTR [rbx]
   1400108b1:	add    rax,rax
   1400108b4:	add    rsp,0x20
   1400108b8:	pop    rbx
   1400108b9:	ret    
   1400108ba:	int3   
   1400108bb:	int3   
   1400108bc:	int3   
   1400108bd:	int3   
   1400108be:	int3   
   1400108bf:	int3   
   1400108c0:	rex push rbx
   1400108c2:	sub    rsp,0x20
   1400108c6:	cmp    DWORD PTR [rcx+0x6c],0x0
   1400108ca:	mov    rbx,rcx
   1400108cd:	jne    0x1400108df
   1400108cf:	cmp    DWORD PTR [rcx+0x68],0x0
   1400108d3:	jne    0x1400108df
   1400108d5:	mov    edx,0x1
   1400108da:	call   0x140011080
   1400108df:	mov    eax,DWORD PTR [rbx]
   1400108e1:	add    rsp,0x20
   1400108e5:	pop    rbx
   1400108e6:	ret    
   1400108e7:	int3   
   1400108e8:	int3   
   1400108e9:	int3   
   1400108ea:	int3   
   1400108eb:	int3   
   1400108ec:	int3   
   1400108ed:	int3   
   1400108ee:	int3   
   1400108ef:	int3   
   1400108f0:	test   edx,edx
   1400108f2:	je     0x1400108fb
   1400108f4:	mov    edx,0x1
   1400108f9:	jmp    0x1400108fd
   1400108fb:	xor    edx,edx
   1400108fd:	jmp    0x140011080
   140010902:	int3   
   140010903:	int3   
   140010904:	int3   
   140010905:	int3   
   140010906:	int3   
   140010907:	int3   
   140010908:	int3   
   140010909:	int3   
   14001090a:	int3   
   14001090b:	int3   
   14001090c:	int3   
   14001090d:	int3   
   14001090e:	int3   
   14001090f:	int3   
   140010910:	mov    eax,DWORD PTR [rcx+0x6c]
   140010913:	ret    
   140010914:	int3   
   140010915:	int3   
   140010916:	int3   
   140010917:	int3   
   140010918:	int3   
   140010919:	int3   
   14001091a:	int3   
   14001091b:	int3   
   14001091c:	int3   
   14001091d:	int3   
   14001091e:	int3   
   14001091f:	int3   
   140010920:	sub    rsp,0x28
   140010924:	add    rcx,0x38
   140010928:	cmp    edx,DWORD PTR [rcx+0x28]
   14001092b:	ja     0x140010931
   14001092d:	mov    al,0x1
   14001092f:	jmp    0x140010936
   140010931:	call   0x14000ea50
   140010936:	movzx  eax,al
   140010939:	add    rsp,0x28
   14001093d:	ret    
   14001093e:	int3   
   14001093f:	int3   
   140010940:	int3   
   140010941:	int3   
   140010942:	int3   
   140010943:	int3   
   140010944:	int3   
   140010945:	int3   
   140010946:	int3   
   140010947:	int3   
   140010948:	int3   
   140010949:	int3   
   14001094a:	int3   
   14001094b:	int3   
   14001094c:	int3   
   14001094d:	int3   
   14001094e:	int3   
   14001094f:	int3   
   140010950:	rex push rbx
   140010952:	sub    rsp,0x20
   140010956:	mov    rbx,rcx
   140010959:	add    rcx,0x38
   14001095d:	cmp    BYTE PTR [rcx+0x2c],0x0
   140010961:	je     0x140010968
   140010963:	call   0x14000eb30
   140010968:	lea    rcx,[rbx+0x8]
   14001096c:	cmp    BYTE PTR [rcx+0x2c],0x0
   140010970:	je     0x140010977
   140010972:	call   0x14000eb30
   140010977:	add    rsp,0x20
   14001097b:	pop    rbx
   14001097c:	ret    
   14001097d:	int3   
   14001097e:	int3   
   14001097f:	int3   
   140010980:	int3   
   140010981:	int3   
   140010982:	int3   
   140010983:	int3   
   140010984:	int3   
   140010985:	int3   
   140010986:	int3   
   140010987:	int3   
   140010988:	int3   
   140010989:	int3   
   14001098a:	int3   
   14001098b:	int3   
   14001098c:	int3   
   14001098d:	int3   
   14001098e:	int3   
   14001098f:	int3   
   140010990:	movups xmm0,XMMWORD PTR [rdx]
   140010993:	mov    rax,rcx
   140010996:	movups XMMWORD PTR [rcx],xmm0
   140010999:	movups xmm1,XMMWORD PTR [rdx+0x10]
   14001099d:	movups XMMWORD PTR [rcx+0x10],xmm1
   1400109a1:	movups xmm0,XMMWORD PTR [rdx+0x20]
   1400109a5:	movups XMMWORD PTR [rcx+0x20],xmm0
   1400109a9:	movups xmm1,XMMWORD PTR [rdx+0x30]
   1400109ad:	movups XMMWORD PTR [rcx+0x30],xmm1
   1400109b1:	movups xmm0,XMMWORD PTR [rdx+0x40]
   1400109b5:	movups XMMWORD PTR [rcx+0x40],xmm0
   1400109b9:	movups xmm1,XMMWORD PTR [rdx+0x50]
   1400109bd:	movups XMMWORD PTR [rcx+0x50],xmm1
   1400109c1:	movups xmm0,XMMWORD PTR [rdx+0x60]
   1400109c5:	movups XMMWORD PTR [rcx+0x60],xmm0
   1400109c9:	movsd  xmm1,QWORD PTR [rdx+0x70]
   1400109ce:	movsd  QWORD PTR [rcx+0x70],xmm1
   1400109d3:	ret    
   1400109d4:	int3   
   1400109d5:	int3   
   1400109d6:	int3   
   1400109d7:	int3   
   1400109d8:	int3   
   1400109d9:	int3   
   1400109da:	int3   
   1400109db:	int3   
   1400109dc:	int3   
   1400109dd:	int3   
   1400109de:	int3   
   1400109df:	int3   
   1400109e0:	movups xmm0,XMMWORD PTR [rdx]
   1400109e3:	mov    rax,rcx
   1400109e6:	movups XMMWORD PTR [rcx],xmm0
   1400109e9:	movups xmm1,XMMWORD PTR [rdx+0x10]
   1400109ed:	movups XMMWORD PTR [rcx+0x10],xmm1
   1400109f1:	movups xmm0,XMMWORD PTR [rdx+0x20]
   1400109f5:	movups XMMWORD PTR [rcx+0x20],xmm0
   1400109f9:	movups xmm1,XMMWORD PTR [rdx+0x30]
   1400109fd:	movups XMMWORD PTR [rcx+0x30],xmm1
   140010a01:	movups xmm0,XMMWORD PTR [rdx+0x40]
   140010a05:	movups XMMWORD PTR [rcx+0x40],xmm0
   140010a09:	movsd  xmm1,QWORD PTR [rdx+0x50]
   140010a0e:	movsd  QWORD PTR [rcx+0x50],xmm1
   140010a13:	ret    
   140010a14:	int3   
   140010a15:	int3   
   140010a16:	int3   
   140010a17:	int3   
   140010a18:	int3   
   140010a19:	int3   
   140010a1a:	int3   
   140010a1b:	int3   
   140010a1c:	int3   
   140010a1d:	int3   
   140010a1e:	int3   
   140010a1f:	int3   
   140010a20:	mov    eax,DWORD PTR [rdx]
   140010a22:	mov    DWORD PTR [rcx],eax
   140010a24:	mov    rax,QWORD PTR [rdx+0x8]
   140010a28:	mov    QWORD PTR [rcx+0x8],rax
   140010a2c:	mov    eax,DWORD PTR [rdx+0x10]
   140010a2f:	mov    DWORD PTR [rcx+0x10],eax
   140010a32:	mov    rax,QWORD PTR [rdx+0x18]
   140010a36:	mov    QWORD PTR [rcx+0x18],rax
   140010a3a:	mov    rax,QWORD PTR [rdx+0x20]
   140010a3e:	mov    QWORD PTR [rcx+0x20],rax
   140010a42:	mov    eax,DWORD PTR [rdx+0x28]
   140010a45:	mov    DWORD PTR [rcx+0x28],eax
   140010a48:	mov    rax,rcx
   140010a4b:	movups xmm0,XMMWORD PTR [rdx+0x30]
   140010a4f:	movups XMMWORD PTR [rcx+0x30],xmm0
   140010a53:	movups xmm1,XMMWORD PTR [rdx+0x40]
   140010a57:	movups XMMWORD PTR [rcx+0x40],xmm1
   140010a5b:	movsd  xmm0,QWORD PTR [rdx+0x50]
   140010a60:	movsd  QWORD PTR [rcx+0x50],xmm0
   140010a65:	ret    
   140010a66:	int3   
   140010a67:	int3   
   140010a68:	int3   
   140010a69:	int3   
   140010a6a:	int3   
   140010a6b:	int3   
   140010a6c:	int3   
   140010a6d:	int3   
   140010a6e:	int3   
   140010a6f:	int3   
   140010a70:	mov    rax,rcx
   140010a73:	shr    rax,0x8
   140010a77:	xor    eax,ecx
   140010a79:	movzx  eax,ax
   140010a7c:	ret    
   140010a7d:	int3   
   140010a7e:	int3   
   140010a7f:	int3   
   140010a80:	int3   
   140010a81:	int3   
   140010a82:	int3   
   140010a83:	int3   
   140010a84:	int3   
   140010a85:	int3   
   140010a86:	int3   
   140010a87:	int3   
   140010a88:	int3   
   140010a89:	int3   
   140010a8a:	int3   
   140010a8b:	int3   
   140010a8c:	int3   
   140010a8d:	int3   
   140010a8e:	int3   
   140010a8f:	int3   
   140010a90:	mov    rcx,QWORD PTR [rcx+0x8]
   140010a94:	mov    rax,rdx
   140010a97:	shr    rax,0x8
   140010a9b:	xor    r8d,r8d
   140010a9e:	xor    eax,edx
   140010aa0:	movzx  r9d,ax
   140010aa4:	shl    r9,0x4
   140010aa8:	add    r9,rcx
   140010aab:	mov    rax,QWORD PTR [r9]
   140010aae:	jmp    0x140010ab9
   140010ab0:	cmp    rdx,QWORD PTR [rax+0x10]
   140010ab4:	je     0x140010ac0
   140010ab6:	mov    rax,QWORD PTR [rax]
   140010ab9:	cmp    rax,r9
   140010abc:	jne    0x140010ab0
   140010abe:	jmp    0x140010ac3
   140010ac0:	mov    r8,rax
   140010ac3:	mov    rax,r8
   140010ac6:	ret    
   140010ac7:	int3   
   140010ac8:	int3   
   140010ac9:	int3   
   140010aca:	int3   
   140010acb:	int3   
   140010acc:	int3   
   140010acd:	int3   
   140010ace:	int3   
   140010acf:	int3   
   140010ad0:	xor    eax,eax
   140010ad2:	cmp    DWORD PTR [rcx],0x46455242
   140010ad8:	sete   al
   140010adb:	ret    
   140010adc:	int3   
   140010add:	int3   
   140010ade:	int3   
   140010adf:	int3   
   140010ae0:	int3   
   140010ae1:	int3   
   140010ae2:	int3   
   140010ae3:	int3   
   140010ae4:	int3   
   140010ae5:	int3   
   140010ae6:	int3   
   140010ae7:	int3   
   140010ae8:	int3   
   140010ae9:	int3   
   140010aea:	int3   
   140010aeb:	int3   
   140010aec:	int3   
   140010aed:	int3   
   140010aee:	int3   
   140010aef:	int3   
   140010af0:	movups xmm0,XMMWORD PTR [rdx]
   140010af3:	mov    rax,rcx
   140010af6:	movups XMMWORD PTR [rcx],xmm0
   140010af9:	movups xmm1,XMMWORD PTR [rdx+0x10]
   140010afd:	movups XMMWORD PTR [rcx+0x10],xmm1
   140010b01:	movups xmm0,XMMWORD PTR [rdx+0x20]
   140010b05:	movups XMMWORD PTR [rcx+0x20],xmm0
   140010b09:	movups xmm1,XMMWORD PTR [rdx+0x30]
   140010b0d:	movups XMMWORD PTR [rcx+0x30],xmm1
   140010b11:	ret    
   140010b12:	int3   
   140010b13:	int3   
   140010b14:	int3   
   140010b15:	int3   
   140010b16:	int3   
   140010b17:	int3   
   140010b18:	int3   
   140010b19:	int3   
   140010b1a:	int3   
   140010b1b:	int3   
   140010b1c:	int3   
   140010b1d:	int3   
   140010b1e:	int3   
   140010b1f:	int3   
   140010b20:	mov    QWORD PTR [rsp+0x8],rbx
   140010b25:	mov    QWORD PTR [rsp+0x10],rbp
   140010b2a:	mov    QWORD PTR [rsp+0x18],rsi
   140010b2f:	push   rdi
   140010b30:	sub    rsp,0x20
   140010b34:	xor    ebp,ebp
   140010b36:	mov    rsi,rdx
   140010b39:	mov    rbx,rcx
   140010b3c:	test   rdx,rdx
   140010b3f:	je     0x140010b89
   140010b41:	cmp    BYTE PTR [rdx],bpl
   140010b44:	je     0x140010b89
   140010b46:	or     rdi,0xffffffffffffffff
   140010b4a:	inc    rdi
   140010b4d:	cmp    BYTE PTR [rdx+rdi*1],bpl
   140010b51:	jne    0x140010b4a
   140010b53:	add    rcx,0x8
   140010b57:	inc    edi
   140010b59:	cmp    edi,DWORD PTR [rcx+0x28]
   140010b5c:	jbe    0x140010b6e
   140010b5e:	mov    edx,edi
   140010b60:	call   0x14000ea50
   140010b65:	test   al,al
   140010b67:	jne    0x140010b6e
   140010b69:	mov    DWORD PTR [rbx+0x70],ebp
   140010b6c:	jmp    0x140010ba8
   140010b6e:	mov    rcx,QWORD PTR [rbx+0x28]
   140010b72:	mov    rdx,rsi
   140010b75:	movsxd r8,edi
   140010b78:	call   0x140011e16
   140010b7d:	lea    eax,[rdi-0x1]
   140010b80:	mov    QWORD PTR [rbx+0x68],rbp
   140010b84:	mov    DWORD PTR [rbx+0x4],eax
   140010b87:	jmp    0x140010ba8
   140010b89:	mov    rax,QWORD PTR [rcx+0x28]
   140010b8d:	mov    BYTE PTR [rax],bpl
   140010b90:	mov    rax,QWORD PTR [rcx+0x58]
   140010b94:	mov    WORD PTR [rax],bp
   140010b97:	mov    DWORD PTR [rcx+0x6c],0x1
   140010b9e:	mov    DWORD PTR [rcx+0x68],0x1
   140010ba5:	mov    QWORD PTR [rcx],rbp
   140010ba8:	mov    rbx,QWORD PTR [rsp+0x30]
   140010bad:	mov    rbp,QWORD PTR [rsp+0x38]
   140010bb2:	mov    rsi,QWORD PTR [rsp+0x40]
   140010bb7:	add    rsp,0x20
   140010bbb:	pop    rdi
   140010bbc:	ret    
   140010bbd:	int3   
   140010bbe:	int3   
   140010bbf:	int3   
   140010bc0:	int3   
   140010bc1:	int3   
   140010bc2:	int3   
   140010bc3:	int3   
   140010bc4:	int3   
   140010bc5:	int3   
   140010bc6:	int3   
   140010bc7:	int3   
   140010bc8:	int3   
   140010bc9:	int3   
   140010bca:	int3   
   140010bcb:	int3   
   140010bcc:	int3   
   140010bcd:	int3   
   140010bce:	int3   
   140010bcf:	int3   
   140010bd0:	mov    QWORD PTR [rsp+0x8],rbx
   140010bd5:	mov    QWORD PTR [rsp+0x10],rbp
   140010bda:	mov    QWORD PTR [rsp+0x18],rsi
   140010bdf:	push   rdi
   140010be0:	sub    rsp,0x20
   140010be4:	xor    ebp,ebp
   140010be6:	mov    rsi,rdx
   140010be9:	mov    rdi,rcx
   140010bec:	test   rdx,rdx
   140010bef:	je     0x140010c48
   140010bf1:	cmp    WORD PTR [rdx],bp
   140010bf4:	je     0x140010c48
   140010bf6:	or     rax,0xffffffffffffffff
   140010bfa:	inc    rax
   140010bfd:	cmp    WORD PTR [rdx+rax*2],bp
   140010c01:	jne    0x140010bfa
   140010c03:	add    rcx,0x38
   140010c07:	lea    ebx,[rax*2+0x2]
   140010c0e:	cmp    ebx,DWORD PTR [rcx+0x28]
   140010c11:	jbe    0x140010c23
   140010c13:	mov    edx,ebx
   140010c15:	call   0x14000ea50
   140010c1a:	test   al,al
   140010c1c:	jne    0x140010c23
   140010c1e:	mov    DWORD PTR [rdi+0x70],ebp
   140010c21:	jmp    0x140010c67
   140010c23:	mov    rcx,QWORD PTR [rdi+0x58]
   140010c27:	mov    rdx,rsi
   140010c2a:	movsxd rbx,ebx
   140010c2d:	mov    r8,rbx
   140010c30:	call   0x140011e16
   140010c35:	shr    rbx,1
   140010c38:	dec    ebx
   140010c3a:	mov    DWORD PTR [rdi+0x6c],0x1
   140010c41:	mov    DWORD PTR [rdi],ebx
   140010c43:	mov    DWORD PTR [rdi+0x68],ebp
   140010c46:	jmp    0x140010c67
   140010c48:	mov    rax,QWORD PTR [rcx+0x28]
   140010c4c:	mov    BYTE PTR [rax],bpl
   140010c4f:	mov    rax,QWORD PTR [rcx+0x58]
   140010c53:	mov    WORD PTR [rax],bp
   140010c56:	mov    DWORD PTR [rcx+0x6c],0x1
   140010c5d:	mov    DWORD PTR [rcx+0x68],0x1
   140010c64:	mov    QWORD PTR [rcx],rbp
   140010c67:	mov    rbx,QWORD PTR [rsp+0x30]
   140010c6c:	mov    rbp,QWORD PTR [rsp+0x38]
   140010c71:	mov    rsi,QWORD PTR [rsp+0x40]
   140010c76:	add    rsp,0x20
   140010c7a:	pop    rdi
   140010c7b:	ret    
   140010c7c:	int3   
   140010c7d:	int3   
   140010c7e:	int3   
   140010c7f:	int3   
   140010c80:	int3   
   140010c81:	int3   
   140010c82:	int3   
   140010c83:	int3   
   140010c84:	int3   
   140010c85:	int3   
   140010c86:	int3   
   140010c87:	int3   
   140010c88:	int3   
   140010c89:	int3   
   140010c8a:	int3   
   140010c8b:	int3   
   140010c8c:	int3   
   140010c8d:	int3   
   140010c8e:	int3   
   140010c8f:	int3   
   140010c90:	mov    rax,rsp
   140010c93:	mov    QWORD PTR [rax+0x8],rbx
   140010c97:	mov    QWORD PTR [rax+0x10],rbp
   140010c9b:	mov    QWORD PTR [rax+0x18],rsi
   140010c9f:	mov    QWORD PTR [rax+0x20],rdi
   140010ca3:	push   r12
   140010ca5:	push   r14
   140010ca7:	push   r15
   140010ca9:	sub    rsp,0x20
   140010cad:	mov    edi,DWORD PTR [rcx+0x70]
   140010cb0:	xor    r12d,r12d
   140010cb3:	mov    ebp,r8d
   140010cb6:	mov    esi,r9d
   140010cb9:	mov    r15,rdx
   140010cbc:	mov    rbx,rcx
   140010cbf:	test   edi,edi
   140010cc1:	je     0x140010dfd
   140010cc7:	cmp    DWORD PTR [rcx+0x6c],r12d
   140010ccb:	je     0x140010d7c
   140010cd1:	cmp    DWORD PTR [rcx],r12d
   140010cd4:	je     0x140010d7c
   140010cda:	lea    rdx,[rcx+0x8]
   140010cde:	mov    r8d,ebp
   140010ce1:	mov    rcx,r15
   140010ce4:	call   0x1400112a0
   140010ce9:	movsxd rbp,eax
   140010cec:	test   eax,eax
   140010cee:	js     0x140010df9
   140010cf4:	mov    edx,DWORD PTR [rbx]
   140010cf6:	mov    ecx,DWORD PTR [rbx+0x60]
   140010cf9:	add    rdx,rbp
   140010cfc:	lea    rax,[rdx*2+0x2]
   140010d04:	cmp    rcx,rax
   140010d07:	jae    0x140010d43
   140010d09:	neg    esi
   140010d0b:	sbb    rax,rax
   140010d0e:	and    eax,0x80
   140010d13:	lea    rcx,[rax+0x2]
   140010d17:	mov    eax,0xffffffff
   140010d1c:	lea    rcx,[rcx+rdx*2]
   140010d20:	cmp    rcx,rax
   140010d23:	ja     0x140010dab
   140010d29:	lea    rax,[rbx+0x38]
   140010d2d:	cmp    ecx,DWORD PTR [rax+0x28]
   140010d30:	ja     0x140010d36
   140010d32:	mov    al,0x1
   140010d34:	jmp    0x140010d40
   140010d36:	mov    edx,ecx
   140010d38:	mov    rcx,rax
   140010d3b:	call   0x14000ea50
   140010d40:	movzx  edi,al
   140010d43:	test   edi,edi
   140010d45:	je     0x140010df9
   140010d4b:	mov    ecx,DWORD PTR [rbx]
   140010d4d:	lea    r8,[rbp*2+0x0]
   140010d55:	mov    rax,QWORD PTR [rbx+0x58]
   140010d59:	mov    rdx,QWORD PTR [rbx+0x28]
   140010d5d:	lea    rcx,[rax+rcx*2]
   140010d61:	call   0x140011e16
   140010d66:	add    DWORD PTR [rbx],ebp
   140010d68:	mov    ecx,DWORD PTR [rbx]
   140010d6a:	mov    rax,QWORD PTR [rbx+0x58]
   140010d6e:	mov    WORD PTR [rax+rcx*2],r12w
   140010d73:	mov    DWORD PTR [rbx+0x68],r12d
   140010d77:	jmp    0x140010dfd
   140010d7c:	mov    edx,DWORD PTR [rcx+0x4]
   140010d7f:	lea    rcx,[rbp+0x1]
   140010d83:	mov    eax,DWORD PTR [rbx+0x30]
   140010d86:	add    rcx,rdx
   140010d89:	cmp    rax,rcx
   140010d8c:	jae    0x140010dcf
   140010d8e:	neg    esi
   140010d90:	sbb    rax,rax
   140010d93:	inc    rdx
   140010d96:	and    eax,0x80
   140010d9b:	add    rax,rbp
   140010d9e:	add    rdx,rax
   140010da1:	mov    eax,0xffffffff
   140010da6:	cmp    rdx,rax
   140010da9:	jbe    0x140010dba
   140010dab:	mov    ecx,0x216
   140010db0:	call   QWORD PTR [rip+0x151a]        # 0x1400122d0
   140010db6:	xor    eax,eax
   140010db8:	jmp    0x140010dff
   140010dba:	lea    rcx,[rbx+0x8]
   140010dbe:	cmp    edx,DWORD PTR [rcx+0x28]
   140010dc1:	ja     0x140010dc7
   140010dc3:	mov    al,0x1
   140010dc5:	jmp    0x140010dcc
   140010dc7:	call   0x14000ea50
   140010dcc:	movzx  edi,al
   140010dcf:	test   edi,edi
   140010dd1:	je     0x140010df9
   140010dd3:	mov    ecx,DWORD PTR [rbx+0x4]
   140010dd6:	mov    r8,rbp
   140010dd9:	add    rcx,QWORD PTR [rbx+0x28]
   140010ddd:	mov    rdx,r15
   140010de0:	call   0x140011e16
   140010de5:	add    DWORD PTR [rbx+0x4],ebp
   140010de8:	mov    ecx,DWORD PTR [rbx+0x4]
   140010deb:	mov    rax,QWORD PTR [rbx+0x28]
   140010def:	mov    BYTE PTR [rcx+rax*1],r12b
   140010df3:	mov    QWORD PTR [rbx+0x68],r12
   140010df7:	jmp    0x140010dfd
   140010df9:	mov    DWORD PTR [rbx+0x70],r12d
   140010dfd:	mov    eax,edi
   140010dff:	mov    rbx,QWORD PTR [rsp+0x40]
   140010e04:	mov    rbp,QWORD PTR [rsp+0x48]
   140010e09:	mov    rsi,QWORD PTR [rsp+0x50]
   140010e0e:	mov    rdi,QWORD PTR [rsp+0x58]
   140010e13:	add    rsp,0x20
   140010e17:	pop    r15
   140010e19:	pop    r14
   140010e1b:	pop    r12
   140010e1d:	ret    
   140010e1e:	int3   
   140010e1f:	int3   
   140010e20:	int3   
   140010e21:	int3   
   140010e22:	int3   
   140010e23:	int3   
   140010e24:	int3   
   140010e25:	int3   
   140010e26:	int3   
   140010e27:	int3   
   140010e28:	int3   
   140010e29:	int3   
   140010e2a:	int3   
   140010e2b:	int3   
   140010e2c:	int3   
   140010e2d:	int3   
   140010e2e:	int3   
   140010e2f:	int3   
   140010e30:	mov    rax,rsp
   140010e33:	mov    QWORD PTR [rax+0x8],rbx
   140010e37:	mov    QWORD PTR [rax+0x10],rbp
   140010e3b:	mov    QWORD PTR [rax+0x18],rsi
   140010e3f:	mov    QWORD PTR [rax+0x20],rdi
   140010e43:	push   r12
   140010e45:	push   r14
   140010e47:	push   r15
   140010e49:	sub    rsp,0x20
   140010e4d:	mov    edi,DWORD PTR [rcx+0x70]
   140010e50:	xor    r12d,r12d
   140010e53:	mov    ebp,r8d
   140010e56:	mov    esi,r9d
   140010e59:	mov    r15,rdx
   140010e5c:	mov    rbx,rcx
   140010e5f:	test   edi,edi
   140010e61:	je     0x140010f36
   140010e67:	cmp    DWORD PTR [rcx+0x6c],r12d
   140010e6b:	jne    0x140010e98
   140010e6d:	cmp    DWORD PTR [rcx+0x68],r12d
   140010e71:	jne    0x140010e98
   140010e73:	mov    r8d,DWORD PTR [rcx+0x4]
   140010e77:	test   r8d,r8d
   140010e7a:	je     0x140010e98
   140010e7c:	lea    rdx,[rcx+0x38]
   140010e80:	mov    rcx,QWORD PTR [rcx+0x28]
   140010e84:	call   0x1400112a0
   140010e89:	test   eax,eax
   140010e8b:	js     0x140010e91
   140010e8d:	mov    DWORD PTR [rbx],eax
   140010e8f:	jmp    0x140010e98
   140010e91:	mov    edi,r12d
   140010e94:	mov    DWORD PTR [rbx+0x70],r12d
   140010e98:	test   edi,edi
   140010e9a:	je     0x140010f36
   140010ea0:	mov    edx,DWORD PTR [rbx]
   140010ea2:	mov    ecx,DWORD PTR [rbx+0x60]
   140010ea5:	add    rdx,rbp
   140010ea8:	lea    rax,[rdx*2+0x2]
   140010eb0:	cmp    rcx,rax
   140010eb3:	jae    0x140010efa
   140010eb5:	neg    esi
   140010eb7:	lea    rcx,[rdx+0x1]
   140010ebb:	sbb    rax,rax
   140010ebe:	and    eax,0x80
   140010ec3:	lea    rcx,[rax+rcx*2]
   140010ec7:	mov    eax,0xffffffff
   140010ecc:	cmp    rcx,rax
   140010ecf:	jbe    0x140010ee0
   140010ed1:	mov    ecx,0x216
   140010ed6:	call   QWORD PTR [rip+0x13f4]        # 0x1400122d0
   140010edc:	xor    eax,eax
   140010ede:	jmp    0x140010f38
   140010ee0:	lea    rax,[rbx+0x38]
   140010ee4:	cmp    ecx,DWORD PTR [rax+0x28]
   140010ee7:	ja     0x140010eed
   140010ee9:	mov    al,0x1
   140010eeb:	jmp    0x140010ef7
   140010eed:	mov    edx,ecx
   140010eef:	mov    rcx,rax
   140010ef2:	call   0x14000ea50
   140010ef7:	movzx  edi,al
   140010efa:	test   edi,edi
   140010efc:	je     0x140010f32
   140010efe:	mov    ecx,DWORD PTR [rbx]
   140010f00:	lea    r8,[rbp*2+0x0]
   140010f08:	mov    rax,QWORD PTR [rbx+0x58]
   140010f0c:	mov    rdx,r15
   140010f0f:	lea    rcx,[rax+rcx*2]
   140010f13:	call   0x140011e16
   140010f18:	add    DWORD PTR [rbx],ebp
   140010f1a:	mov    ecx,DWORD PTR [rbx]
   140010f1c:	mov    rax,QWORD PTR [rbx+0x58]
   140010f20:	mov    WORD PTR [rax+rcx*2],r12w
   140010f25:	mov    DWORD PTR [rbx+0x68],r12d
   140010f29:	mov    DWORD PTR [rbx+0x6c],0x1
   140010f30:	jmp    0x140010f36
   140010f32:	mov    DWORD PTR [rbx+0x70],r12d
   140010f36:	mov    eax,edi
   140010f38:	mov    rbx,QWORD PTR [rsp+0x40]
   140010f3d:	mov    rbp,QWORD PTR [rsp+0x48]
   140010f42:	mov    rsi,QWORD PTR [rsp+0x50]
   140010f47:	mov    rdi,QWORD PTR [rsp+0x58]
   140010f4c:	add    rsp,0x20
   140010f50:	pop    r15
   140010f52:	pop    r14
   140010f54:	pop    r12
   140010f56:	ret    
   140010f57:	int3   
   140010f58:	int3   
   140010f59:	int3   
   140010f5a:	int3   
   140010f5b:	int3   
   140010f5c:	int3   
   140010f5d:	int3   
   140010f5e:	int3   
   140010f5f:	int3   
   140010f60:	mov    QWORD PTR [rsp+0x8],rbx
   140010f65:	mov    QWORD PTR [rsp+0x10],rbp
   140010f6a:	mov    QWORD PTR [rsp+0x18],rsi
   140010f6f:	push   rdi
   140010f70:	push   r14
   140010f72:	push   r15
   140010f74:	sub    rsp,0x20
   140010f78:	xor    ebx,ebx
   140010f7a:	mov    ebp,edx
   140010f7c:	mov    rdi,rcx
   140010f7f:	lea    r15d,[rbx+0x1]
   140010f83:	cmp    DWORD PTR [rcx+0x6c],ebx
   140010f86:	jne    0x140010f95
   140010f88:	cmp    DWORD PTR [rcx+0x68],ebx
   140010f8b:	jne    0x140010f95
   140010f8d:	mov    edx,r15d
   140010f90:	call   0x140011080
   140010f95:	cmp    ebp,DWORD PTR [rdi]
   140010f97:	ja     0x14001103c
   140010f9d:	cmp    DWORD PTR [rdi+0x6c],ebx
   140010fa0:	jne    0x140010fa7
   140010fa2:	cmp    DWORD PTR [rdi+0x68],ebx
   140010fa5:	je     0x140010fb4
   140010fa7:	mov    rax,QWORD PTR [rdi+0x58]
   140010fab:	mov    rcx,rbp
   140010fae:	mov    WORD PTR [rax+rbp*2],bx
   140010fb2:	mov    DWORD PTR [rdi],ebp
   140010fb4:	cmp    DWORD PTR [rdi+0x6c],ebx
   140010fb7:	je     0x140010fbe
   140010fb9:	cmp    DWORD PTR [rdi+0x68],ebx
   140010fbc:	je     0x140011039
   140010fbe:	mov    rsi,QWORD PTR [rdi+0x28]
   140010fc2:	call   QWORD PTR [rip+0x11f8]        # 0x1400121c0
   140010fc8:	movzx  ecx,ax
   140010fcb:	mov    eax,0x3ff
   140010fd0:	and    cx,ax
   140010fd3:	lea    eax,[rcx-0x11]
   140010fd6:	cmp    ax,r15w
   140010fda:	jbe    0x140010fea
   140010fdc:	cmp    cx,0x4
   140010fe0:	je     0x140010fea
   140010fe2:	add    rsi,rbp
   140010fe5:	mov    DWORD PTR [rdi+0x4],ebp
   140010fe8:	jmp    0x140011037
   140010fea:	mov    r14,rsi
   140010fed:	mov    ebp,ebx
   140010fef:	cmp    DWORD PTR [rdi+0x6c],ebx
   140010ff2:	jne    0x140011004
   140010ff4:	cmp    DWORD PTR [rdi+0x68],ebx
   140010ff7:	jne    0x140011004
   140010ff9:	mov    edx,r15d
   140010ffc:	mov    rcx,rdi
   140010fff:	call   0x140011080
   140011004:	cmp    ebp,DWORD PTR [rdi]
   140011006:	jae    0x14001102f
   140011008:	test   rsi,rsi
   14001100b:	jne    0x140011012
   14001100d:	mov    rsi,rbx
   140011010:	jmp    0x14001102a
   140011012:	mov    dl,BYTE PTR [rsi]
   140011014:	xor    ecx,ecx
   140011016:	call   QWORD PTR [rip+0x119c]        # 0x1400121b8
   14001101c:	test   eax,eax
   14001101e:	je     0x140011023
   140011020:	inc    rsi
   140011023:	cmp    BYTE PTR [rsi],bl
   140011025:	je     0x14001102a
   140011027:	add    rsi,r15
   14001102a:	add    ebp,r15d
   14001102d:	jmp    0x140010fef
   14001102f:	mov    eax,esi
   140011031:	sub    eax,r14d
   140011034:	mov    DWORD PTR [rdi+0x4],eax
   140011037:	mov    BYTE PTR [rsi],bl
   140011039:	mov    ebx,r15d
   14001103c:	mov    rbp,QWORD PTR [rsp+0x48]
   140011041:	mov    eax,ebx
   140011043:	mov    rbx,QWORD PTR [rsp+0x40]
   140011048:	mov    rsi,QWORD PTR [rsp+0x50]
   14001104d:	add    rsp,0x20
   140011051:	pop    r15
   140011053:	pop    r14
   140011055:	pop    rdi
   140011056:	ret    
   140011057:	int3   
   140011058:	int3   
   140011059:	int3   
   14001105a:	int3   
   14001105b:	int3   
   14001105c:	int3   
   14001105d:	int3   
   14001105e:	int3   
   14001105f:	int3   
   140011060:	xor    edx,edx
   140011062:	jmp    0x140011080
   140011067:	int3   
   140011068:	int3   
   140011069:	int3   
   14001106a:	int3   
   14001106b:	int3   
   14001106c:	int3   
   14001106d:	int3   
   14001106e:	int3   
   14001106f:	int3   
   140011070:	mov    edx,0x1
   140011075:	jmp    0x140011080
   14001107a:	int3   
   14001107b:	int3   
   14001107c:	int3   
   14001107d:	int3   
   14001107e:	int3   
   14001107f:	int3   
   140011080:	mov    QWORD PTR [rsp+0x8],rbx
   140011085:	mov    QWORD PTR [rsp+0x10],rsi
   14001108a:	push   rdi
   14001108b:	sub    rsp,0x30
   14001108f:	xor    edi,edi
   140011091:	mov    esi,edx
   140011093:	mov    rbx,rcx
   140011096:	cmp    DWORD PTR [rcx+0x70],edi
   140011099:	je     0x140011103
   14001109b:	cmp    edx,DWORD PTR [rcx+0x6c]
   14001109e:	je     0x1400110f0
   1400110a0:	cmp    DWORD PTR [rcx+0x68],edi
   1400110a3:	jne    0x1400110f0
   1400110a5:	test   edx,edx
   1400110a7:	je     0x1400110c2
   1400110a9:	mov    r8d,DWORD PTR [rcx+0x4]
   1400110ad:	lea    rdx,[rcx+0x38]
   1400110b1:	mov    rcx,QWORD PTR [rcx+0x28]
   1400110b5:	call   0x1400112a0
   1400110ba:	test   eax,eax
   1400110bc:	js     0x1400110ed
   1400110be:	mov    DWORD PTR [rbx],eax
   1400110c0:	jmp    0x1400110e4
   1400110c2:	mov    r8d,DWORD PTR [rcx]
   1400110c5:	lea    rdx,[rcx+0x8]
   1400110c9:	mov    rcx,QWORD PTR [rcx+0x58]
   1400110cd:	xor    r9d,r9d
   1400110d0:	mov    DWORD PTR [rsp+0x20],0x400
   1400110d8:	call   0x14001132c
   1400110dd:	test   eax,eax
   1400110df:	js     0x1400110ed
   1400110e1:	mov    DWORD PTR [rbx+0x4],eax
   1400110e4:	mov    DWORD PTR [rbx+0x68],0x1
   1400110eb:	jmp    0x1400110f0
   1400110ed:	mov    DWORD PTR [rbx+0x70],edi
   1400110f0:	cmp    DWORD PTR [rbx+0x70],edi
   1400110f3:	je     0x140011103
   1400110f5:	test   esi,esi
   1400110f7:	je     0x1400110ff
   1400110f9:	mov    rdi,QWORD PTR [rbx+0x58]
   1400110fd:	jmp    0x140011103
   1400110ff:	mov    rdi,QWORD PTR [rbx+0x28]
   140011103:	mov    rbx,QWORD PTR [rsp+0x40]
   140011108:	mov    rax,rdi
   14001110b:	mov    rsi,QWORD PTR [rsp+0x48]
   140011110:	add    rsp,0x30
   140011114:	pop    rdi
   140011115:	ret    
   140011116:	int3   
   140011117:	int3   
   140011118:	int3   
   140011119:	int3   
   14001111a:	int3   
   14001111b:	int3   
   14001111c:	int3   
   14001111d:	int3   
   14001111e:	int3   
   14001111f:	int3   
   140011120:	mov    QWORD PTR [rsp+0x8],rbx
   140011125:	mov    QWORD PTR [rsp+0x10],rbp
   14001112a:	mov    QWORD PTR [rsp+0x18],rsi
   14001112f:	push   rdi
   140011130:	push   r12
   140011132:	push   r13
   140011134:	push   r14
   140011136:	push   r15
   140011138:	sub    rsp,0x20
   14001113c:	mov    rax,QWORD PTR [rcx+0x58]
   140011140:	xor    r13d,r13d
   140011143:	mov    r8,QWORD PTR [rcx+0x28]
   140011147:	mov    r9d,0x1
   14001114d:	mov    ebp,DWORD PTR [rcx]
   14001114f:	mov    rbx,rcx
   140011152:	mov    r14d,DWORD PTR [rcx+0x4]
   140011156:	movzx  esi,WORD PTR [rax]
   140011159:	mov    dil,BYTE PTR [r8]
   14001115c:	mov    r15d,DWORD PTR [rcx+0x6c]
   140011160:	mov    r12d,DWORD PTR [rcx+0x68]
   140011164:	mov    BYTE PTR [r8],r13b
   140011167:	mov    rax,QWORD PTR [rcx+0x58]
   14001116b:	mov    WORD PTR [rax],r13w
   14001116f:	mov    DWORD PTR [rcx+0x6c],r9d
   140011173:	mov    DWORD PTR [rcx+0x68],r9d
   140011177:	mov    QWORD PTR [rcx],r13
   14001117a:	test   rdx,rdx
   14001117d:	je     0x1400111b7
   14001117f:	or     r8,0xffffffffffffffff
   140011183:	inc    r8
   140011186:	cmp    BYTE PTR [rdx+r8*1],r13b
   14001118a:	jne    0x140011183
   14001118c:	xor    r9d,r9d
   14001118f:	call   0x140010c90
   140011194:	mov    r9d,eax
   140011197:	test   eax,eax
   140011199:	jne    0x1400111b7
   14001119b:	mov    rcx,QWORD PTR [rbx+0x28]
   14001119f:	mov    BYTE PTR [rcx],dil
   1400111a2:	mov    rcx,QWORD PTR [rbx+0x58]
   1400111a6:	mov    WORD PTR [rcx],si
   1400111a9:	mov    DWORD PTR [rbx],ebp
   1400111ab:	mov    DWORD PTR [rbx+0x4],r14d
   1400111af:	mov    DWORD PTR [rbx+0x6c],r15d
   1400111b3:	mov    DWORD PTR [rbx+0x68],r12d
   1400111b7:	mov    rbx,QWORD PTR [rsp+0x50]
   1400111bc:	mov    eax,r9d
   1400111bf:	mov    rbp,QWORD PTR [rsp+0x58]
   1400111c4:	mov    rsi,QWORD PTR [rsp+0x60]
   1400111c9:	add    rsp,0x20
   1400111cd:	pop    r15
   1400111cf:	pop    r14
   1400111d1:	pop    r13
   1400111d3:	pop    r12
   1400111d5:	pop    rdi
   1400111d6:	ret    
   1400111d7:	int3   
   1400111d8:	int3   
   1400111d9:	int3   
   1400111da:	int3   
   1400111db:	int3   
   1400111dc:	int3   
   1400111dd:	int3   
   1400111de:	int3   
   1400111df:	int3   
   1400111e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400111e5:	mov    QWORD PTR [rsp+0x10],rbp
   1400111ea:	mov    QWORD PTR [rsp+0x18],rsi
   1400111ef:	push   rdi
   1400111f0:	push   r12
   1400111f2:	push   r13
   1400111f4:	push   r14
   1400111f6:	push   r15
   1400111f8:	sub    rsp,0x20
   1400111fc:	mov    rax,QWORD PTR [rcx+0x58]
   140011200:	xor    r13d,r13d
   140011203:	mov    r8,QWORD PTR [rcx+0x28]
   140011207:	mov    r9d,0x1
   14001120d:	mov    ebp,DWORD PTR [rcx]
   14001120f:	mov    rbx,rcx
   140011212:	mov    r14d,DWORD PTR [rcx+0x4]
   140011216:	movzx  esi,WORD PTR [rax]
   140011219:	mov    dil,BYTE PTR [r8]
   14001121c:	mov    r15d,DWORD PTR [rcx+0x6c]
   140011220:	mov    r12d,DWORD PTR [rcx+0x68]
   140011224:	mov    BYTE PTR [r8],r13b
   140011227:	mov    rax,QWORD PTR [rcx+0x58]
   14001122b:	mov    WORD PTR [rax],r13w
   14001122f:	mov    DWORD PTR [rcx+0x6c],r9d
   140011233:	mov    DWORD PTR [rcx+0x68],r9d
   140011237:	mov    QWORD PTR [rcx],r13
   14001123a:	test   rdx,rdx
   14001123d:	je     0x140011278
   14001123f:	or     r8,0xffffffffffffffff
   140011243:	inc    r8
   140011246:	cmp    WORD PTR [rdx+r8*2],r13w
   14001124b:	jne    0x140011243
   14001124d:	xor    r9d,r9d
   140011250:	call   0x140010e30
   140011255:	mov    r9d,eax
   140011258:	test   eax,eax
   14001125a:	jne    0x140011278
   14001125c:	mov    rcx,QWORD PTR [rbx+0x28]
   140011260:	mov    BYTE PTR [rcx],dil
   140011263:	mov    rcx,QWORD PTR [rbx+0x58]
   140011267:	mov    WORD PTR [rcx],si
   14001126a:	mov    DWORD PTR [rbx],ebp
   14001126c:	mov    DWORD PTR [rbx+0x4],r14d
   140011270:	mov    DWORD PTR [rbx+0x6c],r15d
   140011274:	mov    DWORD PTR [rbx+0x68],r12d
   140011278:	mov    rbx,QWORD PTR [rsp+0x50]
   14001127d:	mov    eax,r9d
   140011280:	mov    rbp,QWORD PTR [rsp+0x58]
   140011285:	mov    rsi,QWORD PTR [rsp+0x60]
   14001128a:	add    rsp,0x20
   14001128e:	pop    r15
   140011290:	pop    r14
   140011292:	pop    r13
   140011294:	pop    r12
   140011296:	pop    rdi
   140011297:	ret    
   140011298:	int3   
   140011299:	int3   
   14001129a:	int3   
   14001129b:	int3   
   14001129c:	int3   
   14001129d:	int3   
   14001129e:	int3   
   14001129f:	int3   
   1400112a0:	mov    QWORD PTR [rsp+0x8],rbx
   1400112a5:	mov    QWORD PTR [rsp+0x10],rbp
   1400112aa:	mov    QWORD PTR [rsp+0x18],rsi
   1400112af:	push   rdi
   1400112b0:	sub    rsp,0x30
   1400112b4:	mov    rdi,rdx
   1400112b7:	or     ebx,0xffffffff
   1400112ba:	lea    edx,[r8*2+0x2]
   1400112c2:	mov    esi,r8d
   1400112c5:	mov    rbp,rcx
   1400112c8:	cmp    edx,DWORD PTR [rdi+0x28]
   1400112cb:	jbe    0x1400112d9
   1400112cd:	mov    rcx,rdi
   1400112d0:	call   0x14000ea50
   1400112d5:	test   al,al
   1400112d7:	je     0x14001130e
   1400112d9:	mov    rcx,QWORD PTR [rdi+0x20]
   1400112dd:	lea    r9d,[rsi+0x1]
   1400112e1:	movsxd rax,DWORD PTR [rdi+0x28]
   1400112e5:	mov    r8,rbp
   1400112e8:	shr    rax,1
   1400112eb:	mov    edx,0x9
   1400112f0:	mov    DWORD PTR [rsp+0x28],eax
   1400112f4:	mov    QWORD PTR [rsp+0x20],rcx
   1400112f9:	xor    ecx,ecx
   1400112fb:	call   QWORD PTR [rip+0xecf]        # 0x1400121d0
   140011301:	mov    ebx,eax
   140011303:	test   eax,eax
   140011305:	jne    0x14001130c
   140011307:	or     ebx,0xffffffff
   14001130a:	jmp    0x14001130e
   14001130c:	dec    ebx
   14001130e:	mov    rbp,QWORD PTR [rsp+0x48]
   140011313:	mov    eax,ebx
   140011315:	mov    rbx,QWORD PTR [rsp+0x40]
   14001131a:	mov    rsi,QWORD PTR [rsp+0x50]
   14001131f:	add    rsp,0x30
   140011323:	pop    rdi
   140011324:	ret    
   140011325:	int3   
   140011326:	int3   
   140011327:	int3   
   140011328:	int3   
   140011329:	int3   
   14001132a:	int3   
   14001132b:	int3   
   14001132c:	mov    r11,rsp
   14001132f:	mov    QWORD PTR [r11+0x8],rbx
   140011333:	mov    QWORD PTR [r11+0x10],rbp
   140011337:	mov    QWORD PTR [r11+0x18],rsi
   14001133b:	push   rdi
   14001133c:	push   r12
   14001133e:	push   r14
   140011340:	sub    rsp,0x40
   140011344:	xor    r12d,r12d
   140011347:	mov    r14d,r9d
   14001134a:	mov    esi,r8d
   14001134d:	mov    rbx,rdx
   140011350:	mov    rbp,rcx
   140011353:	cmp    WORD PTR [rcx],r12w
   140011357:	je     0x14001144e
   14001135d:	test   r8d,r8d
   140011360:	je     0x14001144e
   140011366:	mov    r10d,DWORD PTR [rdx+0x28]
   14001136a:	mov    r9d,r8d
   14001136d:	mov    rax,QWORD PTR [rdx+0x20]
   140011371:	mov    r8,rcx
   140011374:	mov    edx,DWORD PTR [rsp+0x80]
   14001137b:	mov    ecx,r14d
   14001137e:	mov    QWORD PTR [r11-0x20],r12
   140011382:	mov    QWORD PTR [r11-0x28],r12
   140011386:	mov    DWORD PTR [r11-0x30],r10d
   14001138a:	mov    QWORD PTR [r11-0x38],rax
   14001138e:	call   QWORD PTR [rip+0xe74]        # 0x140012208
   140011394:	mov    edi,eax
   140011396:	test   eax,eax
   140011398:	jne    0x140011426
   14001139e:	call   QWORD PTR [rip+0xf54]        # 0x1400122f8
   1400113a4:	cmp    eax,0x7a
   1400113a7:	jne    0x14001143a
   1400113ad:	mov    edx,DWORD PTR [rsp+0x80]
   1400113b4:	mov    r9d,esi
   1400113b7:	mov    QWORD PTR [rsp+0x38],r12
   1400113bc:	mov    r8,rbp
   1400113bf:	mov    QWORD PTR [rsp+0x30],r12
   1400113c4:	mov    ecx,r14d
   1400113c7:	mov    DWORD PTR [rsp+0x28],r12d
   1400113cc:	mov    QWORD PTR [rsp+0x20],r12
   1400113d1:	call   QWORD PTR [rip+0xe31]        # 0x140012208
   1400113d7:	test   eax,eax
   1400113d9:	je     0x14001143a
   1400113db:	lea    edx,[rax+0x1]
   1400113de:	mov    r8d,0x80
   1400113e4:	mov    rcx,rbx
   1400113e7:	call   0x14000ea10
   1400113ec:	test   al,al
   1400113ee:	je     0x14001143a
   1400113f0:	mov    rcx,QWORD PTR [rbx+0x20]
   1400113f4:	mov    r9d,esi
   1400113f7:	mov    eax,DWORD PTR [rbx+0x28]
   1400113fa:	mov    r8,rbp
   1400113fd:	mov    edx,DWORD PTR [rsp+0x80]
   140011404:	mov    QWORD PTR [rsp+0x38],r12
   140011409:	mov    QWORD PTR [rsp+0x30],r12
   14001140e:	mov    DWORD PTR [rsp+0x28],eax
   140011412:	mov    QWORD PTR [rsp+0x20],rcx
   140011417:	mov    ecx,r14d
   14001141a:	call   QWORD PTR [rip+0xde8]        # 0x140012208
   140011420:	mov    edi,eax
   140011422:	test   eax,eax
   140011424:	je     0x14001143a
   140011426:	lea    edx,[rdi+0x1]
   140011429:	cmp    edx,DWORD PTR [rbx+0x28]
   14001142c:	jbe    0x14001143f
   14001142e:	mov    rcx,rbx
   140011431:	call   0x14000ea50
   140011436:	test   al,al
   140011438:	jne    0x14001143f
   14001143a:	or     edi,0xffffffff
   14001143d:	jmp    0x14001144a
   14001143f:	mov    rax,QWORD PTR [rbx+0x20]
   140011443:	movsxd rcx,edi
   140011446:	mov    BYTE PTR [rcx+rax*1],r12b
   14001144a:	mov    eax,edi
   14001144c:	jmp    0x140011457
   14001144e:	mov    rax,QWORD PTR [rdx+0x20]
   140011452:	mov    BYTE PTR [rax],r12b
   140011455:	xor    eax,eax
   140011457:	mov    rbx,QWORD PTR [rsp+0x60]
   14001145c:	mov    rbp,QWORD PTR [rsp+0x68]
   140011461:	mov    rsi,QWORD PTR [rsp+0x70]
   140011466:	add    rsp,0x40
   14001146a:	pop    r14
   14001146c:	pop    r12
   14001146e:	pop    rdi
   14001146f:	ret    
   140011470:	int3   
   140011471:	int3   
   140011472:	int3   
   140011473:	int3   
   140011474:	int3   
   140011475:	int3   
   140011476:	int3   
   140011477:	int3   
   140011478:	mov    QWORD PTR [rsp+0x8],rbx
   14001147d:	push   rdi
   14001147e:	sub    rsp,0x20
   140011482:	mov    rdi,rcx
   140011485:	jmp    0x140011496
   140011487:	mov    rcx,rdi
   14001148a:	call   0x14001183c
   14001148f:	test   eax,eax
   140011491:	je     0x1400114a3
   140011493:	mov    rcx,rdi
   140011496:	call   0x140011830
   14001149b:	mov    rbx,rax
   14001149e:	test   rax,rax
   1400114a1:	je     0x140011487
   1400114a3:	mov    rax,rbx
   1400114a6:	mov    rbx,QWORD PTR [rsp+0x30]
   1400114ab:	add    rsp,0x20
   1400114af:	pop    rdi
   1400114b0:	ret    
   1400114b1:	int3   
   1400114b2:	int3   
   1400114b3:	int3   
   1400114b4:	int3   
   1400114b5:	int3   
   1400114b6:	int3   
   1400114b7:	int3   
   1400114b8:	jmp    0x140011824
   1400114bd:	int3   
   1400114be:	int3   
   1400114bf:	int3   
   1400114c0:	int3   
   1400114c1:	int3   
   1400114c2:	int3   
   1400114c3:	int3   
   1400114c4:	int3   
   1400114c5:	int3   
   1400114c6:	int3   
   1400114c7:	int3   
   1400114c8:	int3   
   1400114c9:	int3   
   1400114ca:	int3   
   1400114cb:	int3   
   1400114cc:	int3   
   1400114cd:	int3   
   1400114ce:	int3   
   1400114cf:	int3   
   1400114d0:	sub    rsp,0x28
   1400114d4:	mov    eax,0x5a4d
   1400114d9:	cmp    WORD PTR [rip+0xfffffffffffeeb20],ax        # 0x140000000
   1400114e0:	je     0x1400114e6
   1400114e2:	xor    eax,eax
   1400114e4:	jmp    0x140011535
   1400114e6:	movsxd rcx,DWORD PTR [rip+0xfffffffffffeeb4f]        # 0x14000003c
   1400114ed:	lea    rax,[rip+0xfffffffffffeeb0c]        # 0x140000000
   1400114f4:	add    rcx,rax
   1400114f7:	cmp    DWORD PTR [rcx],0x4550
   1400114fd:	jne    0x1400114e2
   1400114ff:	movzx  eax,WORD PTR [rcx+0x18]
   140011503:	cmp    eax,0x10b
   140011508:	je     0x140011524
   14001150a:	cmp    eax,0x20b
   14001150f:	jne    0x1400114e2
   140011511:	xor    eax,eax
   140011513:	cmp    DWORD PTR [rcx+0x84],0xe
   14001151a:	jbe    0x140011535
   14001151c:	cmp    DWORD PTR [rcx+0xf8],eax
   140011522:	jmp    0x140011532
   140011524:	xor    eax,eax
   140011526:	cmp    DWORD PTR [rcx+0x74],0xe
   14001152a:	jbe    0x140011535
   14001152c:	cmp    DWORD PTR [rcx+0xe8],eax
   140011532:	setne  al
   140011535:	mov    ecx,0x1
   14001153a:	mov    DWORD PTR [rip+0xabe0],eax        # 0x14001c120
   140011540:	call   0x140011918
   140011545:	mov    ecx,eax
   140011547:	call   QWORD PTR [rip+0xe73]        # 0x1400123c0
   14001154d:	mov    rcx,QWORD PTR [rip+0xe9c]        # 0x1400123f0
   140011554:	or     rax,0xffffffffffffffff
   140011558:	mov    QWORD PTR [rip+0xb1b9],rax        # 0x14001c718
   14001155f:	mov    QWORD PTR [rip+0xb1ba],rax        # 0x14001c720
   140011566:	mov    eax,DWORD PTR [rip+0xabc8]        # 0x14001c134
   14001156c:	mov    DWORD PTR [rcx],eax
   14001156e:	mov    rcx,QWORD PTR [rip+0xe83]        # 0x1400123f8
   140011575:	mov    eax,DWORD PTR [rip+0xabad]        # 0x14001c128
   14001157b:	mov    DWORD PTR [rcx],eax
   14001157d:	call   0x1400022d0
   140011582:	cmp    DWORD PTR [rip+0xaaa7],0x0        # 0x14001c030
   140011589:	jne    0x140011598
   14001158b:	lea    rcx,[rip+0xffffffffffff0d3e]        # 0x1400022d0
   140011592:	call   QWORD PTR [rip+0xe08]        # 0x1400123a0
   140011598:	xor    eax,eax
   14001159a:	add    rsp,0x28
   14001159e:	ret    
   14001159f:	int3   
   1400115a0:	int3   
   1400115a1:	int3   
   1400115a2:	int3   
   1400115a3:	int3   
   1400115a4:	int3   
   1400115a5:	int3   
   1400115a6:	int3   
   1400115a7:	int3   
   1400115a8:	int3   
   1400115a9:	int3   
   1400115aa:	int3   
   1400115ab:	int3   
   1400115ac:	int3   
   1400115ad:	int3   
   1400115ae:	int3   
   1400115af:	int3   
   1400115b0:	sub    rsp,0x38
   1400115b4:	mov    eax,DWORD PTR [rip+0xab76]        # 0x14001c130
   1400115ba:	lea    r8,[rip+0xab57]        # 0x14001c118
   1400115c1:	mov    r9d,DWORD PTR [rip+0xab64]        # 0x14001c12c
   1400115c8:	lea    rdx,[rip+0xab41]        # 0x14001c110
   1400115cf:	mov    DWORD PTR [rip+0xab4f],eax        # 0x14001c124
   1400115d5:	lea    rcx,[rip+0xab2c]        # 0x14001c108
   1400115dc:	lea    rax,[rip+0xab41]        # 0x14001c124
   1400115e3:	mov    QWORD PTR [rsp+0x20],rax
   1400115e8:	call   QWORD PTR [rip+0xdda]        # 0x1400123c8
   1400115ee:	mov    DWORD PTR [rip+0xab18],eax        # 0x14001c10c
   1400115f4:	add    rsp,0x38
   1400115f8:	ret    
   1400115f9:	int3   
   1400115fa:	int3   
   1400115fb:	int3   
   1400115fc:	int3   
   1400115fd:	int3   
   1400115fe:	int3   
   1400115ff:	int3   
   140011600:	mov    QWORD PTR [rsp+0x8],rbx
   140011605:	mov    QWORD PTR [rsp+0x10],rsi
   14001160a:	mov    QWORD PTR [rsp+0x18],rdi
   14001160f:	push   r15
   140011611:	sub    rsp,0x30
   140011615:	mov    rax,QWORD PTR gs:0x30
   14001161e:	mov    rbx,QWORD PTR [rax+0x8]
   140011622:	xor    esi,esi
   140011624:	xor    eax,eax
   140011626:	lock cmpxchg QWORD PTR [rip+0xb0f9],rbx        # 0x14001c728
   14001162f:	je     0x14001164c
   140011631:	cmp    rax,rbx
   140011634:	jne    0x14001163f
   140011636:	mov    ebx,0x1
   14001163b:	mov    esi,ebx
   14001163d:	jmp    0x140011651
   14001163f:	mov    ecx,0x3e8
   140011644:	call   QWORD PTR [rip+0xc5e]        # 0x1400122a8
   14001164a:	jmp    0x140011624
   14001164c:	mov    ebx,0x1
   140011651:	mov    eax,DWORD PTR [rip+0xb0d9]        # 0x14001c730
   140011657:	cmp    eax,ebx
   140011659:	jne    0x140011667
   14001165b:	mov    ecx,0x1f
   140011660:	call   0x140011964
   140011665:	jmp    0x1400116cc
   140011667:	mov    eax,DWORD PTR [rip+0xb0c3]        # 0x14001c730
   14001166d:	test   eax,eax
   14001166f:	jne    0x1400116c6
   140011671:	mov    DWORD PTR [rip+0xb0b9],ebx        # 0x14001c730
   140011677:	lea    r15,[rip+0xf12]        # 0x140012590
   14001167e:	lea    rdi,[rip+0xef3]        # 0x140012578
   140011685:	mov    QWORD PTR [rsp+0x28],rdi
   14001168a:	mov    DWORD PTR [rsp+0x20],eax
   14001168e:	cmp    rdi,r15
   140011691:	jae    0x1400116b8
   140011693:	test   eax,eax
   140011695:	jne    0x1400116bc
   140011697:	cmp    QWORD PTR [rdi],0x0
   14001169b:	je     0x1400116ad
   14001169d:	mov    rax,QWORD PTR [rdi]
   1400116a0:	mov    rcx,QWORD PTR [rip+0xe99]        # 0x140012540
   1400116a7:	call   rcx
   1400116a9:	mov    DWORD PTR [rsp+0x20],eax
   1400116ad:	add    rdi,0x8
   1400116b1:	mov    QWORD PTR [rsp+0x28],rdi
   1400116b6:	jmp    0x14001168e
   1400116b8:	test   eax,eax
   1400116ba:	je     0x1400116cc
   1400116bc:	mov    eax,0xff
   1400116c1:	jmp    0x1400117a8
   1400116c6:	mov    DWORD PTR [rip+0xaa38],ebx        # 0x14001c104
   1400116cc:	mov    eax,DWORD PTR [rip+0xb05e]        # 0x14001c730
   1400116d2:	cmp    eax,ebx
   1400116d4:	jne    0x1400116f3
   1400116d6:	lea    rdx,[rip+0xe93]        # 0x140012570
   1400116dd:	lea    rcx,[rip+0xe64]        # 0x140012548
   1400116e4:	call   0x140011b2a
   1400116e9:	mov    DWORD PTR [rip+0xb03d],0x2        # 0x14001c730
   1400116f3:	test   esi,esi
   1400116f5:	jne    0x140011700
   1400116f7:	xor    eax,eax
   1400116f9:	xchg   QWORD PTR [rip+0xb028],rax        # 0x14001c728
   140011700:	cmp    QWORD PTR [rip+0xb030],0x0        # 0x14001c738
   140011708:	je     0x140011734
   14001170a:	lea    rcx,[rip+0xb027]        # 0x14001c738
   140011711:	call   0x1400119c0
   140011716:	test   eax,eax
   140011718:	je     0x140011734
   14001171a:	xor    r8d,r8d
   14001171d:	lea    edx,[r8+0x2]
   140011721:	xor    ecx,ecx
   140011723:	mov    rax,QWORD PTR [rip+0xb00e]        # 0x14001c738
   14001172a:	mov    r9,QWORD PTR [rip+0xe0f]        # 0x140012540
   140011731:	call   r9
   140011734:	mov    r8,QWORD PTR [rip+0xa9dd]        # 0x14001c118
   14001173b:	mov    rdx,QWORD PTR [rip+0xa9ce]        # 0x14001c110
   140011742:	mov    ecx,DWORD PTR [rip+0xa9c0]        # 0x14001c108
   140011748:	call   0x1400052e0
   14001174d:	mov    DWORD PTR [rip+0xa9ad],eax        # 0x14001c100
   140011753:	cmp    DWORD PTR [rip+0xa9c6],0x0        # 0x14001c120
   14001175a:	jne    0x140011764
   14001175c:	mov    ecx,eax
   14001175e:	call   QWORD PTR [rip+0xca4]        # 0x140012408
   140011764:	cmp    DWORD PTR [rip+0xa999],0x0        # 0x14001c104
   14001176b:	jne    0x140011779
   14001176d:	call   QWORD PTR [rip+0xc35]        # 0x1400123a8
   140011773:	mov    eax,DWORD PTR [rip+0xa987]        # 0x14001c100
   140011779:	jmp    0x1400117a8
   14001177b:	mov    DWORD PTR [rip+0xa97f],eax        # 0x14001c100
   140011781:	cmp    DWORD PTR [rip+0xa998],0x0        # 0x14001c120
   140011788:	jne    0x140011793
   14001178a:	mov    ecx,eax
   14001178c:	call   QWORD PTR [rip+0xc1e]        # 0x1400123b0
   140011792:	int3   
   140011793:	cmp    DWORD PTR [rip+0xa96a],0x0        # 0x14001c104
   14001179a:	jne    0x1400117a8
   14001179c:	call   QWORD PTR [rip+0xc06]        # 0x1400123a8
   1400117a2:	mov    eax,DWORD PTR [rip+0xa958]        # 0x14001c100
   1400117a8:	mov    rbx,QWORD PTR [rsp+0x40]
   1400117ad:	mov    rsi,QWORD PTR [rsp+0x48]
   1400117b2:	mov    rdi,QWORD PTR [rsp+0x50]
   1400117b7:	add    rsp,0x30
   1400117bb:	pop    r15
   1400117bd:	ret    
   1400117be:	int3   
   1400117bf:	int3   
   1400117c0:	int3   
   1400117c1:	int3   
   1400117c2:	int3   
   1400117c3:	int3   
   1400117c4:	int3   
   1400117c5:	int3   
   1400117c6:	int3   
   1400117c7:	int3   
   1400117c8:	int3   
   1400117c9:	int3   
   1400117ca:	int3   
   1400117cb:	int3   
   1400117cc:	int3   
   1400117cd:	int3   
   1400117ce:	int3   
   1400117cf:	int3   
   1400117d0:	sub    rsp,0x28
   1400117d4:	call   0x140011a54
   1400117d9:	add    rsp,0x28
   1400117dd:	jmp    0x140011600
   1400117e2:	int3   
   1400117e3:	int3   
   1400117e4:	int3   
   1400117e5:	int3   
   1400117e6:	int3   
   1400117e7:	int3   
   1400117e8:	int3   
   1400117e9:	int3   
   1400117ea:	int3   
   1400117eb:	int3   
   1400117ec:	int3   
   1400117ed:	int3   
   1400117ee:	int3   
   1400117ef:	int3   
   1400117f0:	int3   
   1400117f1:	int3   
   1400117f2:	int3   
   1400117f3:	int3   
   1400117f4:	int3   
   1400117f5:	int3   
   1400117f6:	data16 nop WORD PTR [rax+rax*1+0x0]
   140011800:	cmp    rcx,QWORD PTR [rip+0xa831]        # 0x14001c038
   140011807:	jne    0x140011819
   140011809:	rol    rcx,0x10
   14001180d:	test   cx,0xffff
   140011812:	jne    0x140011815
   140011814:	ret    
   140011815:	ror    rcx,0x10
   140011819:	jmp    0x140011b80
   14001181e:	int3   
   14001181f:	int3   
   140011820:	int3   
   140011821:	int3   
   140011822:	int3   
   140011823:	int3   
   140011824:	jmp    QWORD PTR [rip+0xc5e]        # 0x140012488
   14001182a:	int3   
   14001182b:	int3   
   14001182c:	int3   
   14001182d:	int3   
   14001182e:	int3   
   14001182f:	int3   
   140011830:	jmp    QWORD PTR [rip+0xc4a]        # 0x140012480
   140011836:	int3   
   140011837:	int3   
   140011838:	int3   
   140011839:	int3   
   14001183a:	int3   
   14001183b:	int3   
   14001183c:	jmp    QWORD PTR [rip+0xc36]        # 0x140012478
   140011842:	int3   
   140011843:	int3   
   140011844:	int3   
   140011845:	int3   
   140011846:	int3   
   140011847:	int3   
   140011848:	int3   
   140011849:	int3   
   14001184a:	int3   
   14001184b:	int3   
   14001184c:	int3   
   14001184d:	int3   
   14001184e:	int3   
   14001184f:	int3   
   140011850:	sub    rsp,0x28
   140011854:	mov    rax,QWORD PTR [rcx]
   140011857:	cmp    DWORD PTR [rax],0xe06d7363
   14001185d:	jne    0x140011882
   14001185f:	cmp    DWORD PTR [rax+0x18],0x4
   140011863:	jne    0x140011882
   140011865:	mov    ecx,DWORD PTR [rax+0x20]
   140011868:	lea    eax,[rcx-0x19930520]
   14001186e:	cmp    eax,0x2
   140011871:	jbe    0x14001187b
   140011873:	cmp    ecx,0x1994000
   140011879:	jne    0x140011882
   14001187b:	call   QWORD PTR [rip+0xb7f]        # 0x140012400
   140011881:	int3   
   140011882:	xor    eax,eax
   140011884:	add    rsp,0x28
   140011888:	ret    
   140011889:	int3   
   14001188a:	int3   
   14001188b:	int3   
   14001188c:	int3   
   14001188d:	int3   
   14001188e:	int3   
   14001188f:	int3   
   140011890:	sub    rsp,0x28
   140011894:	lea    rcx,[rip+0xffffffffffffffb5]        # 0x140011850
   14001189b:	call   QWORD PTR [rip+0x9ff]        # 0x1400122a0
   1400118a1:	xor    eax,eax
   1400118a3:	add    rsp,0x28
   1400118a7:	ret    
   1400118a8:	int3   
   1400118a9:	int3   
   1400118aa:	int3   
   1400118ab:	int3   
   1400118ac:	int3   
   1400118ad:	int3   
   1400118ae:	jmp    QWORD PTR [rip+0xbbc]        # 0x140012470
   1400118b4:	int3   
   1400118b5:	int3   
   1400118b6:	int3   
   1400118b7:	int3   
   1400118b8:	int3   
   1400118b9:	int3   
   1400118ba:	int3   
   1400118bb:	int3   
   1400118bc:	sub    rsp,0x18
   1400118c0:	xor    edx,edx
   1400118c2:	lea    rax,[rcx-0x1]
   1400118c6:	cmp    rax,0xfffffffffffffffd
   1400118ca:	ja     0x140011908
   1400118cc:	mov    eax,0x5a4d
   1400118d1:	cmp    WORD PTR [rcx],ax
   1400118d4:	jne    0x140011900
   1400118d6:	cmp    DWORD PTR [rcx+0x3c],edx
   1400118d9:	jl     0x140011900
   1400118db:	cmp    DWORD PTR [rcx+0x3c],0x10000000
   1400118e2:	jae    0x140011900
   1400118e4:	movsxd rax,DWORD PTR [rcx+0x3c]
   1400118e8:	add    rax,rcx
   1400118eb:	mov    QWORD PTR [rsp],rax
   1400118ef:	cmp    DWORD PTR [rax],0x4550
   1400118f5:	cmovne rax,rdx
   1400118f9:	mov    rdx,rax
   1400118fc:	mov    QWORD PTR [rsp],rax
   140011900:	jmp    0x140011908
   140011902:	xor    edx,edx
   140011904:	mov    QWORD PTR [rsp],rdx
   140011908:	mov    rax,rdx
   14001190b:	add    rsp,0x18
   14001190f:	ret    
   140011910:	int3   
   140011911:	int3   
   140011912:	int3   
   140011913:	int3   
   140011914:	int3   
   140011915:	int3   
   140011916:	int3   
   140011917:	int3   
   140011918:	rex push rbx
   14001191a:	sub    rsp,0x20
   14001191e:	mov    ebx,ecx
   140011920:	xor    ecx,ecx
   140011922:	call   QWORD PTR [rip+0x970]        # 0x140012298
   140011928:	test   rax,rax
   14001192b:	je     0x140011955
   14001192d:	mov    rcx,rax
   140011930:	call   0x1400118bc
   140011935:	test   rax,rax
   140011938:	je     0x140011955
   14001193a:	mov    ecx,0x2
   14001193f:	cmp    WORD PTR [rax+0x5c],cx
   140011943:	jne    0x140011949
   140011945:	mov    eax,ecx
   140011947:	jmp    0x140011957
   140011949:	cmp    WORD PTR [rax+0x5c],0x3
   14001194e:	mov    eax,0x1
   140011953:	je     0x140011957
   140011955:	mov    eax,ebx
   140011957:	add    rsp,0x20
   14001195b:	pop    rbx
   14001195c:	ret    
   14001195d:	int3   
   14001195e:	int3   
   14001195f:	int3   
   140011960:	int3   
   140011961:	int3   
   140011962:	int3   
   140011963:	int3   
   140011964:	jmp    QWORD PTR [rip+0xa66]        # 0x1400123d0
   14001196a:	int3   
   14001196b:	int3   
   14001196c:	int3   
   14001196d:	int3   
   14001196e:	int3   
   14001196f:	int3   
   140011970:	movsxd r8,DWORD PTR [rcx+0x3c]
   140011974:	xor    r9d,r9d
   140011977:	add    r8,rcx
   14001197a:	mov    r10,rdx
   14001197d:	movzx  eax,WORD PTR [r8+0x14]
   140011982:	movzx  r11d,WORD PTR [r8+0x6]
   140011987:	add    rax,0x18
   14001198b:	add    rax,r8
   14001198e:	test   r11d,r11d
   140011991:	je     0x1400119b1
   140011993:	mov    edx,DWORD PTR [rax+0xc]
   140011996:	cmp    r10,rdx
   140011999:	jb     0x1400119a5
   14001199b:	mov    ecx,DWORD PTR [rax+0x8]
   14001199e:	add    ecx,edx
   1400119a0:	cmp    r10,rcx
   1400119a3:	jb     0x1400119b3
   1400119a5:	inc    r9d
   1400119a8:	add    rax,0x28
   1400119ac:	cmp    r9d,r11d
   1400119af:	jb     0x140011993
   1400119b1:	xor    eax,eax
   1400119b3:	ret    
   1400119b4:	int3   
   1400119b5:	int3   
   1400119b6:	int3   
   1400119b7:	int3   
   1400119b8:	int3   
   1400119b9:	int3   
   1400119ba:	int3   
   1400119bb:	int3   
   1400119bc:	int3   
   1400119bd:	int3   
   1400119be:	int3   
   1400119bf:	int3   
   1400119c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400119c5:	push   rdi
   1400119c6:	sub    rsp,0x20
   1400119ca:	mov    rbx,rcx
   1400119cd:	lea    rdi,[rip+0xfffffffffffee62c]        # 0x140000000
   1400119d4:	mov    rcx,rdi
   1400119d7:	call   0x140011a20
   1400119dc:	test   eax,eax
   1400119de:	je     0x140011a02
   1400119e0:	sub    rbx,rdi
   1400119e3:	mov    rdx,rbx
   1400119e6:	mov    rcx,rdi
   1400119e9:	call   0x140011970
   1400119ee:	test   rax,rax
   1400119f1:	je     0x140011a02
   1400119f3:	mov    eax,DWORD PTR [rax+0x24]
   1400119f6:	shr    eax,0x1f
   1400119f9:	not    eax
   1400119fb:	and    eax,0x1
   1400119fe:	jmp    0x140011a02
   140011a00:	xor    eax,eax
   140011a02:	mov    rbx,QWORD PTR [rsp+0x30]
   140011a07:	add    rsp,0x20
   140011a0b:	pop    rdi
   140011a0c:	ret    
   140011a0d:	int3   
   140011a0e:	int3   
   140011a0f:	int3   
   140011a10:	int3   
   140011a11:	int3   
   140011a12:	int3   
   140011a13:	int3   
   140011a14:	int3   
   140011a15:	int3   
   140011a16:	int3   
   140011a17:	int3   
   140011a18:	int3   
   140011a19:	int3   
   140011a1a:	int3   
   140011a1b:	int3   
   140011a1c:	int3   
   140011a1d:	int3   
   140011a1e:	int3   
   140011a1f:	int3   
   140011a20:	mov    rax,rcx
   140011a23:	mov    ecx,0x5a4d
   140011a28:	cmp    WORD PTR [rax],cx
   140011a2b:	je     0x140011a30
   140011a2d:	xor    eax,eax
   140011a2f:	ret    
   140011a30:	movsxd rcx,DWORD PTR [rax+0x3c]
   140011a34:	add    rcx,rax
   140011a37:	xor    eax,eax
   140011a39:	cmp    DWORD PTR [rcx],0x4550
   140011a3f:	jne    0x140011a4d
   140011a41:	mov    edx,0x20b
   140011a46:	cmp    WORD PTR [rcx+0x18],dx
   140011a4a:	sete   al
   140011a4d:	ret    
   140011a4e:	int3   
   140011a4f:	int3   
   140011a50:	int3   
   140011a51:	int3   
   140011a52:	int3   
   140011a53:	int3   
   140011a54:	mov    QWORD PTR [rsp+0x20],rbx
   140011a59:	push   rbp
   140011a5a:	mov    rbp,rsp
   140011a5d:	sub    rsp,0x20
   140011a61:	and    QWORD PTR [rbp+0x18],0x0
   140011a66:	movabs rbx,0x2b992ddfa232
   140011a70:	mov    rax,QWORD PTR [rip+0xa5c1]        # 0x14001c038
   140011a77:	cmp    rax,rbx
   140011a7a:	jne    0x140011b0f
   140011a80:	lea    rcx,[rbp+0x18]
   140011a84:	call   QWORD PTR [rip+0x726]        # 0x1400121b0
   140011a8a:	mov    rax,QWORD PTR [rbp+0x18]
   140011a8e:	mov    QWORD PTR [rbp+0x10],rax
   140011a92:	call   QWORD PTR [rip+0x7f0]        # 0x140012288
   140011a98:	mov    eax,eax
   140011a9a:	xor    QWORD PTR [rbp+0x10],rax
   140011a9e:	call   QWORD PTR [rip+0x84c]        # 0x1400122f0
   140011aa4:	mov    eax,eax
   140011aa6:	xor    QWORD PTR [rbp+0x10],rax
   140011aaa:	call   QWORD PTR [rip+0x7d0]        # 0x140012280
   140011ab0:	mov    eax,eax
   140011ab2:	shl    rax,0x18
   140011ab6:	xor    QWORD PTR [rbp+0x10],rax
   140011aba:	call   QWORD PTR [rip+0x7c0]        # 0x140012280
   140011ac0:	mov    eax,eax
   140011ac2:	lea    rcx,[rbp+0x10]
   140011ac6:	xor    rax,QWORD PTR [rbp+0x10]
   140011aca:	xor    rax,rcx
   140011acd:	lea    rcx,[rbp+0x20]
   140011ad1:	mov    QWORD PTR [rbp+0x10],rax
   140011ad5:	call   QWORD PTR [rip+0x7b5]        # 0x140012290
   140011adb:	mov    eax,DWORD PTR [rbp+0x20]
   140011ade:	movabs rcx,0xffffffffffff
   140011ae8:	shl    rax,0x20
   140011aec:	xor    rax,QWORD PTR [rbp+0x20]
   140011af0:	xor    rax,QWORD PTR [rbp+0x10]
   140011af4:	and    rax,rcx
   140011af7:	movabs rcx,0x2b992ddfa233
   140011b01:	cmp    rax,rbx
   140011b04:	cmove  rax,rcx
   140011b08:	mov    QWORD PTR [rip+0xa529],rax        # 0x14001c038
   140011b0f:	mov    rbx,QWORD PTR [rsp+0x48]
   140011b14:	not    rax
   140011b17:	mov    QWORD PTR [rip+0xa522],rax        # 0x14001c040
   140011b1e:	add    rsp,0x20
   140011b22:	pop    rbp
   140011b23:	ret    
   140011b24:	int3   
   140011b25:	int3   
   140011b26:	int3   
   140011b27:	int3   
   140011b28:	int3   
   140011b29:	int3   
   140011b2a:	jmp    QWORD PTR [rip+0x868]        # 0x140012398
   140011b30:	int3   
   140011b31:	int3   
   140011b32:	int3   
   140011b33:	int3   
   140011b34:	int3   
   140011b35:	int3   
   140011b36:	jmp    QWORD PTR [rip+0x87c]        # 0x1400123b8
   140011b3c:	int3   
   140011b3d:	int3   
   140011b3e:	int3   
   140011b3f:	int3   
   140011b40:	int3   
   140011b41:	int3   
   140011b42:	int3   
   140011b43:	int3   
   140011b44:	rex push rbx
   140011b46:	sub    rsp,0x20
   140011b4a:	mov    rbx,rcx
   140011b4d:	xor    ecx,ecx
   140011b4f:	call   QWORD PTR [rip+0x74b]        # 0x1400122a0
   140011b55:	mov    rcx,rbx
   140011b58:	call   QWORD PTR [rip+0x702]        # 0x140012260
   140011b5e:	call   QWORD PTR [rip+0x6f4]        # 0x140012258
   140011b64:	mov    rcx,rax
   140011b67:	mov    edx,0xc0000409
   140011b6c:	add    rsp,0x20
   140011b70:	pop    rbx
   140011b71:	rex.W jmp QWORD PTR [rip+0x6d8]        # 0x140012250
   140011b78:	int3   
   140011b79:	int3   
   140011b7a:	int3   
   140011b7b:	int3   
   140011b7c:	int3   
   140011b7d:	int3   
   140011b7e:	int3   
   140011b7f:	int3   
   140011b80:	mov    QWORD PTR [rsp+0x8],rcx
   140011b85:	sub    rsp,0x88
   140011b8c:	lea    rcx,[rip+0xa64d]        # 0x14001c1e0
   140011b93:	call   QWORD PTR [rip+0x6df]        # 0x140012278
   140011b99:	mov    rax,QWORD PTR [rip+0xa738]        # 0x14001c2d8
   140011ba0:	mov    QWORD PTR [rsp+0x48],rax
   140011ba5:	xor    r8d,r8d
   140011ba8:	lea    rdx,[rsp+0x50]
   140011bad:	mov    rcx,QWORD PTR [rsp+0x48]
   140011bb2:	call   QWORD PTR [rip+0x6b8]        # 0x140012270
   140011bb8:	mov    QWORD PTR [rsp+0x40],rax
   140011bbd:	cmp    QWORD PTR [rsp+0x40],0x0
   140011bc3:	je     0x140011c07
   140011bc5:	mov    QWORD PTR [rsp+0x38],0x0
   140011bce:	lea    rax,[rsp+0x58]
   140011bd3:	mov    QWORD PTR [rsp+0x30],rax
   140011bd8:	lea    rax,[rsp+0x60]
   140011bdd:	mov    QWORD PTR [rsp+0x28],rax
   140011be2:	lea    rax,[rip+0xa5f7]        # 0x14001c1e0
   140011be9:	mov    QWORD PTR [rsp+0x20],rax
   140011bee:	mov    r9,QWORD PTR [rsp+0x40]
   140011bf3:	mov    r8,QWORD PTR [rsp+0x48]
   140011bf8:	mov    rdx,QWORD PTR [rsp+0x50]
   140011bfd:	xor    ecx,ecx
   140011bff:	call   QWORD PTR [rip+0x663]        # 0x140012268
   140011c05:	jmp    0x140011c2a
   140011c07:	mov    rax,QWORD PTR [rip+0xa66a]        # 0x14001c278
   140011c0e:	mov    rax,QWORD PTR [rax]
   140011c11:	mov    QWORD PTR [rip+0xa6c0],rax        # 0x14001c2d8
   140011c18:	mov    rax,QWORD PTR [rip+0xa659]        # 0x14001c278
   140011c1f:	add    rax,0x8
   140011c23:	mov    QWORD PTR [rip+0xa64e],rax        # 0x14001c278
   140011c2a:	mov    rax,QWORD PTR [rip+0xa6a7]        # 0x14001c2d8
   140011c31:	mov    QWORD PTR [rip+0xa518],rax        # 0x14001c150
   140011c38:	mov    rax,QWORD PTR [rsp+0x90]
   140011c40:	mov    QWORD PTR [rip+0xa619],rax        # 0x14001c260
   140011c47:	mov    DWORD PTR [rip+0xa4ef],0xc0000409        # 0x14001c140
   140011c51:	mov    DWORD PTR [rip+0xa4e9],0x1        # 0x14001c144
   140011c5b:	mov    DWORD PTR [rip+0xa4f3],0x3        # 0x14001c158
   140011c65:	mov    eax,0x8
   140011c6a:	imul   rax,rax,0x0
   140011c6e:	lea    rcx,[rip+0xa4eb]        # 0x14001c160
   140011c75:	mov    QWORD PTR [rcx+rax*1],0x2
   140011c7d:	mov    eax,0x8
   140011c82:	imul   rax,rax,0x1
   140011c86:	lea    rcx,[rip+0xa4d3]        # 0x14001c160
   140011c8d:	mov    rdx,QWORD PTR [rip+0xa3a4]        # 0x14001c038
   140011c94:	mov    QWORD PTR [rcx+rax*1],rdx
   140011c98:	mov    eax,0x8
   140011c9d:	imul   rax,rax,0x2
   140011ca1:	lea    rcx,[rip+0xa4b8]        # 0x14001c160
   140011ca8:	mov    rdx,QWORD PTR [rip+0xa391]        # 0x14001c040
   140011caf:	mov    QWORD PTR [rcx+rax*1],rdx
   140011cb3:	mov    eax,0x8
   140011cb8:	imul   rax,rax,0x0
   140011cbc:	mov    rcx,QWORD PTR [rip+0xa375]        # 0x14001c038
   140011cc3:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   140011cc8:	mov    eax,0x8
   140011ccd:	imul   rax,rax,0x1
   140011cd1:	mov    rcx,QWORD PTR [rip+0xa368]        # 0x14001c040
   140011cd8:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   140011cdd:	lea    rcx,[rip+0x31c]        # 0x140012000
   140011ce4:	call   0x140011b44
   140011ce9:	add    rsp,0x88
   140011cf0:	ret    
   140011cf1:	int3   
   140011cf2:	int3   
   140011cf3:	int3   
   140011cf4:	int3   
   140011cf5:	int3   
   140011cf6:	int3   
   140011cf7:	int3   
   140011cf8:	int3   
   140011cf9:	int3   
   140011cfa:	int3   
   140011cfb:	int3   
   140011cfc:	int3   
   140011cfd:	int3   
   140011cfe:	int3   
   140011cff:	int3   
   140011d00:	int3   
   140011d01:	int3   
   140011d02:	int3   
   140011d03:	int3   
   140011d04:	int3   
   140011d05:	int3   
   140011d06:	int3   
   140011d07:	int3   
   140011d08:	rex push rbx
   140011d0a:	sub    rsp,0x20
   140011d0e:	mov    ebx,ecx
   140011d10:	call   0x140011d2c
   140011d15:	lea    rdx,[rbx+rbx*2]
   140011d19:	shl    rdx,0x4
   140011d1d:	add    rax,rdx
   140011d20:	add    rsp,0x20
   140011d24:	pop    rbx
   140011d25:	ret    
   140011d26:	int3   
   140011d27:	int3   
   140011d28:	int3   
   140011d29:	int3   
   140011d2a:	int3   
   140011d2b:	int3   
   140011d2c:	jmp    QWORD PTR [rip+0x6de]        # 0x140012410
   140011d32:	int3   
   140011d33:	int3   
   140011d34:	int3   
   140011d35:	int3   
   140011d36:	int3   
   140011d37:	int3   
   140011d38:	int3   
   140011d39:	int3   
   140011d3a:	int3   
   140011d3b:	int3   
   140011d3c:	int3   
   140011d3d:	int3   
   140011d3e:	int3   
   140011d3f:	int3   
   140011d40:	mov    QWORD PTR [rsp+0x8],rbx
   140011d45:	push   rdi
   140011d46:	sub    rsp,0x20
   140011d4a:	mov    ebx,edx
   140011d4c:	mov    rdi,rcx
   140011d4f:	call   QWORD PTR [rip+0x713]        # 0x140012468
   140011d55:	test   bl,0x1
   140011d58:	je     0x140011d62
   140011d5a:	mov    rcx,rdi
   140011d5d:	call   0x1400114b8
   140011d62:	mov    rax,rdi
   140011d65:	mov    rbx,QWORD PTR [rsp+0x30]
   140011d6a:	add    rsp,0x20
   140011d6e:	pop    rdi
   140011d6f:	ret    
   140011d70:	int3   
   140011d71:	int3   
   140011d72:	int3   
   140011d73:	int3   
   140011d74:	int3   
   140011d75:	int3   
   140011d76:	jmp    QWORD PTR [rip+0x66c]        # 0x1400123e8
   140011d7c:	int3   
   140011d7d:	int3   
   140011d7e:	int3   
   140011d7f:	int3   
   140011d80:	int3   
   140011d81:	int3   
   140011d82:	int3   
   140011d83:	int3   
   140011d84:	sub    rsp,0x28
   140011d88:	mov    r8,QWORD PTR [r9+0x38]
   140011d8c:	mov    rcx,rdx
   140011d8f:	mov    rdx,r9
   140011d92:	call   0x140011da8
   140011d97:	mov    eax,0x1
   140011d9c:	add    rsp,0x28
   140011da0:	ret    
   140011da1:	int3   
   140011da2:	int3   
   140011da3:	int3   
   140011da4:	int3   
   140011da5:	int3   
   140011da6:	int3   
   140011da7:	int3   
   140011da8:	rex push rbx
   140011daa:	mov    r11d,DWORD PTR [r8]
   140011dad:	mov    rbx,rdx
   140011db0:	and    r11d,0xfffffff8
   140011db4:	mov    r9,rcx
   140011db7:	test   BYTE PTR [r8],0x4
   140011dbb:	mov    r10,rcx
   140011dbe:	je     0x140011dd3
   140011dc0:	mov    eax,DWORD PTR [r8+0x8]
   140011dc4:	movsxd r10,DWORD PTR [r8+0x4]
   140011dc8:	neg    eax
   140011dca:	add    r10,rcx
   140011dcd:	movsxd rcx,eax
   140011dd0:	and    r10,rcx
   140011dd3:	movsxd rax,r11d
   140011dd6:	mov    rdx,QWORD PTR [rax+r10*1]
   140011dda:	mov    rax,QWORD PTR [rbx+0x10]
   140011dde:	mov    ecx,DWORD PTR [rax+0x8]
   140011de1:	add    rcx,QWORD PTR [rbx+0x8]
   140011de5:	test   BYTE PTR [rcx+0x3],0xf
   140011de9:	je     0x140011df7
   140011deb:	movzx  eax,BYTE PTR [rcx+0x3]
   140011def:	and    eax,0xfffffff0
   140011df2:	cdqe   
   140011df4:	add    r9,rax
   140011df7:	xor    r9,rdx
   140011dfa:	mov    rcx,r9
   140011dfd:	pop    rbx
   140011dfe:	jmp    0x140011800
   140011e03:	int3   
   140011e04:	int3   
   140011e05:	int3   
   140011e06:	int3   
   140011e07:	int3   
   140011e08:	int3   
   140011e09:	int3   
   140011e0a:	int3   
   140011e0b:	int3   
   140011e0c:	int3   
   140011e0d:	int3   
   140011e0e:	int3   
   140011e0f:	int3   
   140011e10:	int3   
   140011e11:	int3   
   140011e12:	int3   
   140011e13:	int3   
   140011e14:	int3   
   140011e15:	int3   
   140011e16:	jmp    QWORD PTR [rip+0x5c4]        # 0x1400123e0
   140011e1c:	int3   
   140011e1d:	int3   
   140011e1e:	int3   
   140011e1f:	int3   
   140011e20:	int3   
   140011e21:	int3   
   140011e22:	jmp    QWORD PTR [rip+0x5b0]        # 0x1400123d8
   140011e28:	int3   
   140011e29:	int3   
   140011e2a:	int3   
   140011e2b:	int3   
   140011e2c:	int3   
   140011e2d:	int3   
   140011e2e:	jmp    QWORD PTR [rip+0x6d4]        # 0x140012508
   140011e34:	int3   
   140011e35:	int3   
   140011e36:	int3   
   140011e37:	int3   
   140011e38:	int3   
   140011e39:	int3   
   140011e3a:	int3   
   140011e3b:	int3   
   140011e3c:	int3   
   140011e3d:	int3   
   140011e3e:	int3   
   140011e3f:	int3   
   140011e40:	int3   
   140011e41:	int3   
   140011e42:	int3   
   140011e43:	int3   
   140011e44:	int3   
   140011e45:	int3   
   140011e46:	data16 nop WORD PTR [rax+rax*1+0x0]
   140011e50:	jmp    rax
   140011e52:	int3   
   140011e53:	int3   
   140011e54:	int3   
   140011e55:	int3   
   140011e56:	int3   
   140011e57:	int3   
   140011e58:	int3   
   140011e59:	int3   
   140011e5a:	int3   
   140011e5b:	int3   
   140011e5c:	int3   
   140011e5d:	int3   
   140011e5e:	int3   
   140011e5f:	int3   
   140011e60:	int3   
   140011e61:	int3   
   140011e62:	int3   
   140011e63:	int3   
   140011e64:	int3   
   140011e65:	int3   
   140011e66:	data16 nop WORD PTR [rax+rax*1+0x0]
   140011e70:	sub    rsp,0x10
   140011e74:	mov    QWORD PTR [rsp],r10
   140011e78:	mov    QWORD PTR [rsp+0x8],r11
   140011e7d:	xor    r11,r11
   140011e80:	lea    r10,[rsp+0x18]
   140011e85:	sub    r10,rax
   140011e88:	cmovb  r10,r11
   140011e8c:	mov    r11,QWORD PTR gs:0x10
   140011e95:	cmp    r10,r11
   140011e98:	jae    0x140011eaf
   140011e9a:	and    r10w,0xf000
   140011ea0:	lea    r11,[r11-0x1000]
   140011ea7:	test   BYTE PTR [r11],r11b
   140011eaa:	cmp    r10,r11
   140011ead:	jne    0x140011ea0
   140011eaf:	mov    r10,QWORD PTR [rsp]
   140011eb3:	mov    r11,QWORD PTR [rsp+0x8]
   140011eb8:	add    rsp,0x10
   140011ebc:	ret    
   140011ebd:	int3   
   140011ebe:	int3   
   140011ebf:	int3   
   140011ec0:	int3   
   140011ec1:	int3   
   140011ec2:	int3   
   140011ec3:	int3   
   140011ec4:	int3   
   140011ec5:	int3   
   140011ec6:	rex push rbp
   140011ec8:	sub    rsp,0x20
   140011ecc:	mov    rbp,rdx
   140011ecf:	mov    rax,QWORD PTR [rcx]
   140011ed2:	mov    rdx,rcx
   140011ed5:	mov    ecx,DWORD PTR [rax]
   140011ed7:	call   0x1400118ae
   140011edc:	nop
   140011edd:	add    rsp,0x20
   140011ee1:	pop    rbp
   140011ee2:	ret    
   140011ee3:	int3   
   140011ee4:	int3   
   140011ee5:	int3   
   140011ee6:	int3   
   140011ee7:	int3   
   140011ee8:	int3   
   140011ee9:	int3   
   140011eea:	int3   
   140011eeb:	int3   
   140011eec:	int3   
   140011eed:	int3   
   140011eee:	int3   
   140011eef:	int3   
   140011ef0:	rex push rbp
   140011ef2:	sub    rsp,0x20
   140011ef6:	mov    rbp,rdx
   140011ef9:	mov    rax,QWORD PTR [rcx]
   140011efc:	xor    ecx,ecx
   140011efe:	cmp    DWORD PTR [rax],0xc0000005
   140011f04:	sete   cl
   140011f07:	mov    eax,ecx
   140011f09:	add    rsp,0x20
   140011f0d:	pop    rbp
   140011f0e:	ret    
   140011f0f:	int3   

Disassembly of section .rdata:

0000000140012000 <.rdata>:
   140012000:	rex rol DWORD PTR [rcx],0x40
   140012004:	add    DWORD PTR [rax],eax
   140012006:	add    BYTE PTR [rax],al
   140012008:	loopne 0x140011fcb
   14001200a:	add    DWORD PTR [rax+0x1],eax
   14001200d:	add    BYTE PTR [rax],al
   14001200f:	add    BYTE PTR [rax+0x1d],al
   140012012:	add    DWORD PTR [rax+0x1],eax
   140012015:	add    BYTE PTR [rax],al
   140012017:	add    al,dl
   140012019:	imul   eax,DWORD PTR [rax],0x40
   14001201c:	add    DWORD PTR [rax],eax
   14001201e:	add    BYTE PTR [rax],al
   140012020:	and    BYTE PTR [rbx+0x0],ch
   140012023:	rex add DWORD PTR [rax],eax
   140012026:	add    BYTE PTR [rax],al
   140012028:	adc    BYTE PTR [rax+rax*1+0x40],ch
   14001202c:	add    DWORD PTR [rax],eax
   14001202e:	add    BYTE PTR [rax],al
   140012030:	push   rax
   140012031:	ins    BYTE PTR es:[rdi],dx
   140012032:	add    BYTE PTR [rax+0x1],al
   140012035:	add    BYTE PTR [rax],al
   140012037:	add    al,dl
   140012039:	ins    BYTE PTR es:[rdi],dx
   14001203a:	add    BYTE PTR [rax+0x1],al
   14001203d:	add    BYTE PTR [rax],al
   14001203f:	add    BYTE PTR [rax],dl
   140012041:	ins    DWORD PTR es:[rdi],dx
   140012042:	add    BYTE PTR [rax+0x1],al
   140012045:	add    BYTE PTR [rax],al
   140012047:	add    BYTE PTR [rax+0x6d],al
   14001204a:	add    BYTE PTR [rax+0x1],al
   14001204d:	add    BYTE PTR [rax],al
   14001204f:	add    BYTE PTR [rax+0x6d],dh
   140012052:	add    BYTE PTR [rax+0x1],al
   140012055:	add    BYTE PTR [rax],al
   140012057:	add    BYTE PTR [rax+0x140006d],ah
   14001205d:	add    BYTE PTR [rax],al
   14001205f:	add    BYTE PTR [rax+0x6c],dh
   140012062:	add    BYTE PTR [rax+0x1],al
   140012065:	add    BYTE PTR [rax],al
   140012067:	add    BYTE PTR [rax],dl
   140012069:	ins    BYTE PTR es:[rdi],dx
   14001206a:	add    BYTE PTR [rax+0x1],al
   14001206d:	add    BYTE PTR [rax],al
   14001206f:	add    BYTE PTR [rax+0x6c],dl
   140012072:	add    BYTE PTR [rax+0x1],al
   140012075:	add    BYTE PTR [rax],al
   140012077:	add    BYTE PTR [rax],dl
   140012079:	outs   dx,DWORD PTR ds:[rsi]
   14001207a:	add    BYTE PTR [rax+0x1],al
   14001207d:	add    BYTE PTR [rax],al
   14001207f:	add    BYTE PTR [rax+0x6f],ah
   140012082:	add    BYTE PTR [rax+0x1],al
   140012085:	add    BYTE PTR [rax],al
   140012087:	add    BYTE PTR [rax+0x6f],dh
   14001208a:	add    BYTE PTR [rax+0x1],al
   14001208d:	add    BYTE PTR [rax],al
   14001208f:	add    BYTE PTR [rax+0x140006f],dl
   140012095:	add    BYTE PTR [rax],al
   140012097:	add    BYTE PTR [rax+0x140006f],dl
   14001209d:	add    BYTE PTR [rax],al
   14001209f:	add    BYTE PTR [rax-0x7d],ah
   1400120a2:	add    BYTE PTR [rax+0x1],al
   1400120a5:	add    BYTE PTR [rax],al
   1400120a7:	add    BYTE PTR [rax+0x1400083],ah
   1400120ad:	add    BYTE PTR [rax],al
   1400120af:	add    BYTE PTR [rax],ah
   1400120b1:	test   BYTE PTR [rax],al
   1400120b3:	rex add DWORD PTR [rax],eax
   1400120b6:	add    BYTE PTR [rax],al
   1400120b8:	nop
   1400120b9:	test   BYTE PTR [rax],al
   1400120bb:	rex add DWORD PTR [rax],eax
   1400120be:	add    BYTE PTR [rax],al
   1400120c0:	rol    BYTE PTR [rax+rax*1+0x140],1
   1400120c7:	add    BYTE PTR [rax-0x7b],ah
   1400120ca:	add    BYTE PTR [rax+0x1],al
   1400120cd:	add    BYTE PTR [rax],al
   1400120cf:	add    BYTE PTR [rax-0x7c],al
   1400120d2:	add    BYTE PTR [rax+0x1],al
   1400120d5:	add    BYTE PTR [rax],al
   1400120d7:	add    al,ah
   1400120d9:	mov    cl,0x0
   1400120db:	rex add DWORD PTR [rax],eax
   1400120de:	add    BYTE PTR [rax],al
   1400120e0:	rol    BYTE PTR [rax],1
	...
   140012136:	add    BYTE PTR [rax],al
   140012138:	cmp    al,al
   14001213a:	add    DWORD PTR [rax+0x1],eax
	...
   14001214d:	add    BYTE PTR [rax],al
   14001214f:	add    BYTE PTR [rax],bh
   140012151:	and    eax,0x14001
   140012156:	add    BYTE PTR [rax],al
   140012158:	rex and eax,0x14001
   14001215e:	add    BYTE PTR [rax],al
   140012160:	cwde   
   140012161:	and    eax,0x14001
   140012166:	add    BYTE PTR [rax],al
   140012168:	fwait
   140012169:	add    DWORD PTR [rax],eax
   14001216b:	add    BYTE PTR [rax],al
   14001216d:	add    BYTE PTR [rax],al
   14001216f:	add    BYTE PTR [rax],al
   140012171:	xor    eax,0x1
	...
   1400121ae:	add    BYTE PTR [rax],al
   1400121b0:	and    al,0xbc
   1400121b2:	add    DWORD PTR [rax],eax
   1400121b4:	add    BYTE PTR [rax],al
   1400121b6:	add    BYTE PTR [rax],al
   1400121b8:	(bad)  
   1400121b9:	mov    edi,0x1
   1400121be:	add    BYTE PTR [rax],al
   1400121c0:	rex.RX mov edi,0x1
   1400121c6:	add    BYTE PTR [rax],al
   1400121c8:	sub    bh,BYTE PTR [rdi+0x1]
   1400121ce:	add    BYTE PTR [rax],al
   1400121d0:	adc    al,0xbf
   1400121d2:	add    DWORD PTR [rax],eax
   1400121d4:	add    BYTE PTR [rax],al
   1400121d6:	add    BYTE PTR [rax],al
   1400121d8:	or     BYTE PTR [rdi+0x1],bh
   1400121de:	add    BYTE PTR [rax],al
   1400121e0:	cld    
   1400121e1:	mov    esi,0x1
   1400121e6:	add    BYTE PTR [rax],al
   1400121e8:	(bad)  
   1400121e9:	mov    esi,0x1
   1400121ee:	add    BYTE PTR [rax],al
   1400121f0:	fdivr  QWORD PTR [rsi+0x1]
   1400121f6:	add    BYTE PTR [rax],al
   1400121f8:	enter  0x1be,0x0
   1400121fc:	add    BYTE PTR [rax],al
   1400121fe:	add    BYTE PTR [rax],al
   140012200:	mov    dh,0xbe
   140012202:	add    DWORD PTR [rax],eax
   140012204:	add    BYTE PTR [rax],al
   140012206:	add    BYTE PTR [rax],al
   140012208:	movabs al,ds:0x8a000000000001be
   140012211:	mov    esi,0x1
   140012216:	add    BYTE PTR [rax],al
   140012218:	jl     0x1400121d8
   14001221a:	add    DWORD PTR [rax],eax
   14001221c:	add    BYTE PTR [rax],al
   14001221e:	add    BYTE PTR [rax],al
   140012220:	push   0x1be
   140012225:	add    BYTE PTR [rax],al
   140012227:	add    BYTE PTR [rdx-0x42],dl
   14001222a:	add    DWORD PTR [rax],eax
   14001222c:	add    BYTE PTR [rax],al
   14001222e:	add    BYTE PTR [rax],al
   140012230:	cmp    al,0xbe
   140012232:	add    DWORD PTR [rax],eax
   140012234:	add    BYTE PTR [rax],al
   140012236:	add    BYTE PTR [rax],al
   140012238:	cs mov esi,0x1
   14001223e:	add    BYTE PTR [rax],al
   140012240:	(bad)  
   140012241:	mov    esi,0x1
   140012246:	add    BYTE PTR [rax],al
   140012248:	idiv   BYTE PTR [rbp+0x1]
   14001224e:	add    BYTE PTR [rax],al
   140012250:	sar    BYTE PTR [rcx+rax*1+0x0],0x0
   140012258:	lods   al,BYTE PTR ds:[rsi]
   140012259:	mov    esp,0x1
   14001225e:	add    BYTE PTR [rax],al
   140012260:	nop
   140012261:	mov    esp,0x1
   140012266:	add    BYTE PTR [rax],al
   140012268:	jl     0x140012226
   14001226a:	add    DWORD PTR [rax],eax
   14001226c:	add    BYTE PTR [rax],al
   14001226e:	add    BYTE PTR [rax],al
   140012270:	(bad)  
   140012271:	mov    esp,0x1
   140012276:	add    BYTE PTR [rax],al
   140012278:	rex.WRX movabs rsp,0xbc3e000000000001
   140012282:	add    DWORD PTR [rax],eax
   140012284:	add    BYTE PTR [rax],al
   140012286:	add    BYTE PTR [rax],al
   140012288:	(bad)  
   140012289:	mov    esp,0x1
   14001228e:	add    BYTE PTR [rax],al
   140012290:	hlt    
   140012291:	mov    ebx,0x1
   140012296:	add    BYTE PTR [rax],al
   140012298:	loopne 0x140012255
   14001229a:	add    DWORD PTR [rax],eax
   14001229c:	add    BYTE PTR [rax],al
   14001229e:	add    BYTE PTR [rax],al
   1400122a0:	ret    0x1bb
   1400122a3:	add    BYTE PTR [rax],al
   1400122a5:	add    BYTE PTR [rax],al
   1400122a7:	add    BYTE PTR [rdx+0x1bb],bh
   1400122ad:	add    BYTE PTR [rax],al
   1400122af:	add    BYTE PTR [rdx+0x1bb],ch
   1400122b5:	add    BYTE PTR [rax],al
   1400122b7:	add    BYTE PTR [rbx+rdi*4+0x1],bl
   1400122be:	add    BYTE PTR [rax],al
   1400122c0:	mov    bh,BYTE PTR [rbx+0x1]
   1400122c6:	add    BYTE PTR [rax],al
   1400122c8:	jp     0x140012285
   1400122ca:	add    DWORD PTR [rax],eax
   1400122cc:	add    BYTE PTR [rax],al
   1400122ce:	add    BYTE PTR [rax],al
   1400122d0:	pop    rdx
   1400122d1:	mov    edx,0x1
   1400122d6:	add    BYTE PTR [rax],al
   1400122d8:	push   0xffffffffffffffba
   1400122da:	add    DWORD PTR [rax],eax
   1400122dc:	add    BYTE PTR [rax],al
   1400122de:	add    BYTE PTR [rax],al
   1400122e0:	(bad)  
   1400122e1:	mov    edx,0x1
   1400122e6:	add    BYTE PTR [rax],al
   1400122e8:	(bad)  
   1400122e9:	mov    edx,0x1
   1400122ee:	add    BYTE PTR [rax],al
   1400122f0:	mov    dh,0xba
   1400122f2:	add    DWORD PTR [rax],eax
   1400122f4:	add    BYTE PTR [rax],al
   1400122f6:	add    BYTE PTR [rax],al
   1400122f8:	int3   
   1400122f9:	mov    edx,0x1
   1400122fe:	add    BYTE PTR [rax],al
   140012300:	fdivr  QWORD PTR [rdx+0x1]
   140012306:	add    BYTE PTR [rax],al
   140012308:	hlt    
   140012309:	mov    edx,0x1
   14001230e:	add    BYTE PTR [rax],al
   140012310:	(bad)  
   140012311:	mov    ebx,0x1
   140012316:	add    BYTE PTR [rax],al
   140012318:	adc    bh,BYTE PTR [rbx+0x1]
   14001231e:	add    BYTE PTR [rax],al
   140012320:	sub    BYTE PTR [rbx+0x1],bh
   140012326:	add    BYTE PTR [rax],al
   140012328:	ds mov ebx,0x1
   14001232e:	add    BYTE PTR [rax],al
   140012330:	push   rsp
   140012331:	mov    ebx,0x1
   140012336:	add    BYTE PTR [rax],al
   140012338:	fs mov ebx,0x1
	...
   140012346:	add    BYTE PTR [rax],al
   140012348:	or     BYTE PTR [rax],al
   14001234a:	add    BYTE PTR [rax],al
   14001234c:	add    BYTE PTR [rax],al
   14001234e:	add    BYTE PTR [rax+0x6],al
   140012354:	add    BYTE PTR [rax],al
   140012356:	add    BYTE PTR [rax+0x9],al
   14001235c:	add    BYTE PTR [rax],al
   14001235e:	add    BYTE PTR [rax+0x2],al
   140012364:	add    BYTE PTR [rax],al
   140012366:	add    BYTE PTR [rax+0x0],al
   14001236c:	add    BYTE PTR [rax],al
   14001236e:	add    BYTE PTR [rax],al
   140012370:	je     0x140012331
   140012372:	add    DWORD PTR [rax],eax
	...
   140012380:	xor    bh,BYTE PTR [rbp+0x1]
	...
   14001238e:	add    BYTE PTR [rax],al
   140012390:	enter  0x1b8,0x0
   140012394:	add    BYTE PTR [rax],al
   140012396:	add    BYTE PTR [rax],al
   140012398:	add    BYTE PTR [rdx+0x1],bh
   14001239e:	add    BYTE PTR [rax],al
   1400123a0:	in     al,dx
   1400123a1:	mov    ecx,0x1
   1400123a6:	add    BYTE PTR [rax],al
   1400123a8:	loop   0x140012363
   1400123aa:	add    DWORD PTR [rax],eax
   1400123ac:	add    BYTE PTR [rax],al
   1400123ae:	add    BYTE PTR [rax],al
   1400123b0:	fidivr DWORD PTR [rcx+0x1]
   1400123b6:	add    BYTE PTR [rax],al
   1400123b8:	or     al,0xba
   1400123ba:	add    DWORD PTR [rax],eax
   1400123bc:	add    BYTE PTR [rax],al
   1400123be:	add    BYTE PTR [rax],al
   1400123c0:	sar    BYTE PTR [rcx+0x1],0x0
   1400123c7:	add    BYTE PTR [rsi+0x1b9],ch
   1400123cd:	add    BYTE PTR [rax],al
   1400123cf:	add    BYTE PTR [rax+0x1b9],ah
   1400123d5:	add    BYTE PTR [rax],al
   1400123d7:	add    BYTE PTR [rsi+0x1bf],ch
   1400123dd:	add    BYTE PTR [rax],al
   1400123df:	add    BYTE PTR [rdi+rdi*4+0x1],ah
   1400123e6:	add    BYTE PTR [rax],al
   1400123e8:	mov    ?,WORD PTR [rdi+0x1]
   1400123ee:	add    BYTE PTR [rax],al
   1400123f0:	and    al,0xba
   1400123f2:	add    DWORD PTR [rax],eax
   1400123f4:	add    BYTE PTR [rax],al
   1400123f6:	add    BYTE PTR [rax],al
   1400123f8:	cs mov edx,0x1
   1400123fe:	add    BYTE PTR [rax],al
   140012400:	rex.RX mov edx,0x1
   140012406:	add    BYTE PTR [rax],al
   140012408:	sar    BYTE PTR [rcx+0x1],cl
   14001240e:	add    BYTE PTR [rax],al
   140012410:	pop    rax
   140012411:	mov    ebp,0x1
   140012416:	add    BYTE PTR [rax],al
   140012418:	mov    bp,0x1
   14001241c:	add    BYTE PTR [rax],al
   14001241e:	add    BYTE PTR [rax],al
   140012420:	jb     0x1400123df
   140012422:	add    DWORD PTR [rax],eax
   140012424:	add    BYTE PTR [rax],al
   140012426:	add    BYTE PTR [rax],al
   140012428:	jl     0x1400123e7
   14001242a:	add    DWORD PTR [rax],eax
   14001242c:	add    BYTE PTR [rax],al
   14001242e:	add    BYTE PTR [rax],al
   140012430:	mov    BYTE PTR [rbp+0x1],bh
   140012436:	add    BYTE PTR [rax],al
   140012438:	xchg   edx,eax
   140012439:	mov    ebp,0x1
   14001243e:	add    BYTE PTR [rax],al
   140012440:	sahf   
   140012441:	mov    ebp,0x1
   140012446:	add    BYTE PTR [rax],al
   140012448:	test   al,0xbd
   14001244a:	add    DWORD PTR [rax],eax
   14001244c:	add    BYTE PTR [rax],al
   14001244e:	add    BYTE PTR [rax],al
   140012450:	mov    ah,0xbd
   140012452:	add    DWORD PTR [rax],eax
   140012454:	add    BYTE PTR [rax],al
   140012456:	add    BYTE PTR [rax],al
   140012458:	sar    BYTE PTR [rbp+0x1],0x0
   14001245f:	add    al,dl
   140012461:	mov    ebp,0x1
   140012466:	add    BYTE PTR [rax],al
   140012468:	fidivr WORD PTR [rbp+0x1]
   14001246e:	add    BYTE PTR [rax],al
   140012470:	xchg   edx,eax
   140012471:	mov    ecx,0x1
   140012476:	add    BYTE PTR [rax],al
   140012478:	xchg   BYTE PTR [rcx+0x1],bh
   14001247e:	add    BYTE PTR [rax],al
   140012480:	jl     0x14001243b
   140012482:	add    DWORD PTR [rax],eax
   140012484:	add    BYTE PTR [rax],al
   140012486:	add    BYTE PTR [rax],al
   140012488:	je     0x140012443
   14001248a:	add    DWORD PTR [rax],eax
   14001248c:	add    BYTE PTR [rax],al
   14001248e:	add    BYTE PTR [rax],al
   140012490:	push   0xffffffffffffffb9
   140012492:	add    DWORD PTR [rax],eax
   140012494:	add    BYTE PTR [rax],al
   140012496:	add    BYTE PTR [rax],al
   140012498:	(bad)  
   140012499:	mov    ecx,0x1
   14001249e:	add    BYTE PTR [rax],al
   1400124a0:	pop    rax
   1400124a1:	mov    ecx,0x1
   1400124a6:	add    BYTE PTR [rax],al
   1400124a8:	rex.WRX movabs rcx,0xb946000000000001
   1400124b2:	add    DWORD PTR [rax],eax
   1400124b4:	add    BYTE PTR [rax],al
   1400124b6:	add    BYTE PTR [rax],al
   1400124b8:	cmp    al,0xb9
   1400124ba:	add    DWORD PTR [rax],eax
   1400124bc:	add    BYTE PTR [rax],al
   1400124be:	add    BYTE PTR [rax],al
   1400124c0:	xor    bh,BYTE PTR [rcx+0x1]
   1400124c6:	add    BYTE PTR [rax],al
   1400124c8:	sub    bh,BYTE PTR [rcx+0x1]
   1400124ce:	add    BYTE PTR [rax],al
   1400124d0:	sbb    al,0xb9
   1400124d2:	add    DWORD PTR [rax],eax
   1400124d4:	add    BYTE PTR [rax],al
   1400124d6:	add    BYTE PTR [rax],al
   1400124d8:	(bad)  
   1400124d9:	mov    ecx,0x1
   1400124de:	add    BYTE PTR [rax],al
   1400124e0:	add    bh,BYTE PTR [rcx+0x1]
   1400124e6:	add    BYTE PTR [rax],al
   1400124e8:	hlt    
   1400124e9:	mov    eax,0x1
   1400124ee:	add    BYTE PTR [rax],al
   1400124f0:	(bad)  
   1400124f1:	mov    eax,0x1
   1400124f6:	add    BYTE PTR [rax],al
   1400124f8:	fidivr WORD PTR [rax+0x1]
   1400124fe:	add    BYTE PTR [rax],al
   140012500:	sar    BYTE PTR [rax+0x1],cl
   140012506:	add    BYTE PTR [rax],al
   140012508:	mov    eax,0x1bf
	...
   140012515:	add    BYTE PTR [rax],al
   140012517:	add    ah,dh
   140012519:	mov    esp,0x1
   14001251e:	add    BYTE PTR [rax],al
   140012520:	loop   0x1400124de
   140012522:	add    DWORD PTR [rax],eax
   140012524:	add    BYTE PTR [rax],al
   140012526:	add    BYTE PTR [rax],al
   140012528:	(bad)  
   140012529:	mov    ebp,0x1
	...
   140012536:	add    BYTE PTR [rax],al
   140012538:	movabs al,ds:0x500000000140001e
   140012541:	(bad)  
   140012542:	add    DWORD PTR [rax+0x1],eax
	...
   14001254d:	add    BYTE PTR [rax],al
   14001254f:	add    BYTE PTR [rax+0x1400115],dh
   140012555:	add    BYTE PTR [rax],al
   140012557:	add    BYTE PTR [rax],al
   140012559:	adc    BYTE PTR [rax],al
   14001255b:	rex add DWORD PTR [rax],eax
   14001255e:	add    BYTE PTR [rax],al
   140012560:	and    BYTE PTR [rax],dl
   140012562:	add    BYTE PTR [rax+0x1],al
   140012565:	add    BYTE PTR [rax],al
   140012567:	add    BYTE PTR [rax],dh
   140012569:	adc    BYTE PTR [rax],al
   14001256b:	rex add DWORD PTR [rax],eax
	...
   14001257e:	add    BYTE PTR [rax],al
   140012580:	rcl    BYTE PTR [rcx+rax*1],1
   140012583:	rex add DWORD PTR [rax],eax
   140012586:	add    BYTE PTR [rax],al
   140012588:	nop
   140012589:	sbb    BYTE PTR [rcx],al
   14001258b:	rex add DWORD PTR [rax],eax
	...
   140012596:	add    BYTE PTR [rax],al
   140012598:	add    BYTE PTR [rax],dl
   14001259a:	add    BYTE PTR [rax],al
   14001259c:	and    BYTE PTR [rax],dl
   14001259e:	add    BYTE PTR [rax],al
   1400125a0:	xor    BYTE PTR [rax],dl
   1400125a2:	add    BYTE PTR [rax],al
   1400125a4:	push   rax
   1400125a5:	adc    BYTE PTR [rax],al
   1400125a7:	add    BYTE PTR [rax+0x10],dh
   1400125aa:	add    BYTE PTR [rax],al
   1400125ac:	nop
   1400125ad:	adc    BYTE PTR [rax],al
   1400125af:	add    BYTE PTR [rax-0x3ffffff0],dh
   1400125b5:	adc    BYTE PTR [rax],al
   1400125b7:	add    al,dl
   1400125b9:	adc    BYTE PTR [rax],al
   1400125bb:	add    al,ah
   1400125bd:	adc    BYTE PTR [rax],al
   1400125bf:	add    al,dh
   1400125c1:	adc    BYTE PTR [rax],al
   1400125c3:	add    BYTE PTR [rax],dl
   1400125c5:	adc    DWORD PTR [rax],eax
   1400125c7:	add    BYTE PTR [rax+0x11],al
   1400125ca:	add    BYTE PTR [rax],al
   1400125cc:	jo     0x1400125df
   1400125ce:	add    BYTE PTR [rax],al
   1400125d0:	adc    BYTE PTR [rcx],0x0
   1400125d3:	add    al,al
   1400125d5:	adc    DWORD PTR [rax],eax
   1400125d7:	add    BYTE PTR [rax],al
   1400125d9:	adc    al,BYTE PTR [rax]
   1400125db:	add    BYTE PTR [rax+0x12],al
   1400125de:	add    BYTE PTR [rax],al
   1400125e0:	adc    BYTE PTR [rdx],0x0
   1400125e3:	add    BYTE PTR [rax-0x5fffffee],dl
   1400125e9:	adc    al,BYTE PTR [rax]
   1400125eb:	add    BYTE PTR [rax-0x2fffffee],dh
   1400125f1:	adc    al,BYTE PTR [rax]
   1400125f3:	add    BYTE PTR [rax],dl
   1400125f5:	adc    eax,DWORD PTR [rax]
   1400125f7:	add    BYTE PTR [rax+0x13],dl
   1400125fa:	add    BYTE PTR [rax],al
   1400125fc:	nop
   1400125fd:	adc    eax,DWORD PTR [rax]
   1400125ff:	add    al,dl
   140012601:	adc    eax,DWORD PTR [rax]
   140012603:	add    BYTE PTR [rax],al
   140012605:	adc    al,0x0
   140012607:	add    BYTE PTR [rax],dh
   140012609:	adc    al,0x0
   14001260b:	add    BYTE PTR [rax+0x14],ah
   14001260e:	add    BYTE PTR [rax],al
   140012610:	movabs al,ds:0x20000014e0000014
   140012619:	adc    eax,0x15500000
   14001261e:	add    BYTE PTR [rax],al
   140012620:	adc    BYTE PTR [rip+0x15b00000],0x0        # 0x155b12627
   140012627:	add    al,ah
   140012629:	adc    eax,0x16100000
   14001262e:	add    BYTE PTR [rax],al
   140012630:	rex (bad) 
   140012632:	add    BYTE PTR [rax],al
   140012634:	push   rax
   140012635:	(bad)  
   140012636:	add    BYTE PTR [rax],al
   140012638:	adc    BYTE PTR [rsi],0x0
   14001263b:	add    BYTE PTR [rax+0x16],dh
   140012641:	(bad)  
   140012642:	add    BYTE PTR [rax],al
   140012644:	and    BYTE PTR [rdi],dl
   140012646:	add    BYTE PTR [rax],al
   140012648:	(bad)  
   140012649:	(bad)  
   14001264a:	add    BYTE PTR [rax],al
   14001264c:	movabs al,ds:0xd0000017b0000017
   140012655:	(bad)  
   140012656:	add    BYTE PTR [rax],al
   140012658:	and    BYTE PTR [rax],bl
   14001265a:	add    BYTE PTR [rax],al
   14001265c:	sbb    BYTE PTR [rax],al
   14001265f:	add    BYTE PTR [rax+0x18],ah
   140012662:	add    BYTE PTR [rax],al
   140012664:	mov    al,0x18
   140012666:	add    BYTE PTR [rax],al
   140012668:	rcr    BYTE PTR [rax],1
   14001266a:	add    BYTE PTR [rax],al
   14001266c:	lock sbb BYTE PTR [rax],al
   14001266f:	add    BYTE PTR [rax],ah
   140012671:	sbb    DWORD PTR [rax],eax
   140012673:	add    BYTE PTR [rax+0x19],ah
   140012676:	add    BYTE PTR [rax],al
   140012678:	mov    al,0x19
   14001267a:	add    BYTE PTR [rax],al
   14001267c:	lock sbb DWORD PTR [rax],eax
   14001267f:	add    BYTE PTR [rax+0x1a],al
   140012682:	add    BYTE PTR [rax],al
   140012684:	push   rax
   140012685:	sbb    al,BYTE PTR [rax]
   140012687:	add    al,al
   140012689:	sbb    al,BYTE PTR [rax]
   14001268b:	add    al,dh
   14001268d:	sbb    al,BYTE PTR [rax]
   14001268f:	add    BYTE PTR [rax],al
   140012691:	sbb    eax,DWORD PTR [rax]
   140012693:	add    BYTE PTR [rax],dl
   140012695:	sbb    eax,DWORD PTR [rax]
   140012697:	add    BYTE PTR [rax],dh
   140012699:	sbb    eax,DWORD PTR [rax]
   14001269b:	add    BYTE PTR [rax+0x1b],ah
   14001269e:	add    BYTE PTR [rax],al
   1400126a0:	nop
   1400126a1:	sbb    eax,DWORD PTR [rax]
   1400126a3:	add    BYTE PTR [rax-0x4fffffe5],ah
   1400126a9:	sbb    eax,DWORD PTR [rax]
   1400126ab:	add    BYTE PTR [rax-0x5fffffe4],al
   1400126b1:	sbb    al,0x0
   1400126b3:	add    al,dh
   1400126b5:	sbb    al,0x0
   1400126b7:	add    BYTE PTR [rax+0x1d],dl
   1400126ba:	add    BYTE PTR [rax],al
   1400126bc:	nop
   1400126bd:	sbb    eax,0x1dd00000
   1400126c2:	add    BYTE PTR [rax],al
   1400126c4:	and    BYTE PTR [rsi],bl
   1400126c6:	add    BYTE PTR [rax],al
   1400126c8:	rex (bad) 
   1400126ca:	add    BYTE PTR [rax],al
   1400126cc:	push   rax
   1400126cd:	(bad)  
   1400126ce:	add    BYTE PTR [rax],al
   1400126d0:	nop
   1400126d1:	(bad)  
   1400126d2:	add    BYTE PTR [rax],al
   1400126d4:	movabs al,ds:0xf000001eb000001e
   1400126dd:	(bad)  
   1400126de:	add    BYTE PTR [rax],al
   1400126e0:	and    BYTE PTR [rdi],bl
   1400126e2:	add    BYTE PTR [rax],al
   1400126e4:	xor    BYTE PTR [rdi],bl
   1400126e6:	add    BYTE PTR [rax],al
   1400126e8:	(bad)  
   1400126e9:	(bad)  
   1400126ea:	add    BYTE PTR [rax],al
   1400126ec:	jo     0x14001270d
   1400126ee:	add    BYTE PTR [rax],al
   1400126f0:	sbb    BYTE PTR [rdi],0x0
   1400126f3:	add    BYTE PTR [rax-0x2fffffe1],dl
   1400126f9:	(bad)  
   1400126fa:	add    BYTE PTR [rax],al
   1400126fc:	add    BYTE PTR [rax],ah
   1400126fe:	add    BYTE PTR [rax],al
   140012700:	adc    BYTE PTR [rax],ah
   140012702:	add    BYTE PTR [rax],al
   140012704:	and    BYTE PTR [rax],ah
   140012706:	add    BYTE PTR [rax],al
   140012708:	xor    BYTE PTR [rax],ah
   14001270a:	add    BYTE PTR [rax],al
   14001270c:	push   rax
   14001270d:	and    BYTE PTR [rax],al
   14001270f:	add    BYTE PTR [rax-0x2fffffe0],dl
   140012715:	and    BYTE PTR [rax],al
   140012717:	add    al,dh
   140012719:	and    BYTE PTR [rax],al
   14001271b:	add    BYTE PTR [rax],ah
   14001271d:	and    DWORD PTR [rax],eax
   14001271f:	add    BYTE PTR [rax-0x4fffffdf],dl
   140012725:	and    DWORD PTR [rax],eax
   140012727:	add    al,dh
   140012729:	and    DWORD PTR [rax],eax
   14001272b:	add    BYTE PTR [rax],ah
   14001272d:	and    al,BYTE PTR [rax]
   14001272f:	add    BYTE PTR [rax],dh
   140012731:	and    al,BYTE PTR [rax]
   140012733:	add    BYTE PTR [rax+0x22],dh
   140012736:	add    BYTE PTR [rax],al
   140012738:	movabs al,ds:0xc0000022b0000022
   140012741:	and    al,BYTE PTR [rax]
   140012743:	add    al,dl
   140012745:	and    al,BYTE PTR [rax]
   140012747:	add    al,ah
   140012749:	and    al,BYTE PTR [rax]
   14001274b:	add    BYTE PTR [rax],ah
   14001274d:	and    eax,DWORD PTR [rax]
   14001274f:	add    BYTE PTR [rax],dh
   140012751:	and    eax,DWORD PTR [rax]
   140012753:	add    BYTE PTR [rax+0x23],ah
   140012756:	add    BYTE PTR [rax],al
   140012758:	jo     0x14001277d
   14001275a:	add    BYTE PTR [rax],al
   14001275c:	and    BYTE PTR [rbx],0x0
   14001275f:	add    al,al
   140012761:	and    eax,DWORD PTR [rax]
   140012763:	add    al,dl
   140012765:	and    eax,DWORD PTR [rax]
   140012767:	add    al,ah
   140012769:	and    eax,DWORD PTR [rax]
   14001276b:	add    BYTE PTR [rax],al
   14001276d:	and    al,0x0
   14001276f:	add    BYTE PTR [rax],dh
   140012771:	and    al,0x0
   140012773:	add    BYTE PTR [rax+0x24],al
   140012776:	add    BYTE PTR [rax],al
   140012778:	jo     0x14001279e
   14001277a:	add    BYTE PTR [rax],al
   14001277c:	and    BYTE PTR [rax+rax*1],0x0
   140012780:	shl    BYTE PTR [rax+rax*1],0x0
   140012784:	lock and al,0x0
   140012787:	add    BYTE PTR [rax],al
   140012789:	and    eax,0x25100000
   14001278e:	add    BYTE PTR [rax],al
   140012790:	rex and eax,0x25600000
   140012796:	add    BYTE PTR [rax],al
   140012798:	movabs al,ds:0xe0000025c0000025
   1400127a1:	and    eax,0x25f00000
   1400127a6:	add    BYTE PTR [rax],al
   1400127a8:	push   rax
   1400127a9:	add    BYTE PTR es:[rax],al
   1400127ac:	nop
   1400127ad:	add    BYTE PTR es:[rax],al
   1400127b0:	movabs al,ds:0xd0000026b0000026
   1400127b9:	add    BYTE PTR es:[rax],al
   1400127bc:	lock add BYTE PTR es:[rax],al
   1400127c0:	add    BYTE PTR [rdi],ah
   1400127c2:	add    BYTE PTR [rax],al
   1400127c4:	adc    BYTE PTR [rdi],ah
   1400127c6:	add    BYTE PTR [rax],al
   1400127c8:	and    BYTE PTR [rdi],ah
   1400127ca:	add    BYTE PTR [rax],al
   1400127cc:	(bad)  
   1400127cd:	(bad)  
   1400127ce:	add    BYTE PTR [rax],al
   1400127d0:	nop
   1400127d1:	(bad)  
   1400127d2:	add    BYTE PTR [rax],al
   1400127d4:	movabs al,ds:0xc0000027b0000027
   1400127dd:	(bad)  
   1400127de:	add    BYTE PTR [rax],al
   1400127e0:	loopne 0x140012809
   1400127e2:	add    BYTE PTR [rax],al
   1400127e4:	lock (bad) 
   1400127e6:	add    BYTE PTR [rax],al
   1400127e8:	and    BYTE PTR [rax],ch
   1400127ea:	add    BYTE PTR [rax],al
   1400127ec:	push   rax
   1400127ed:	sub    BYTE PTR [rax],al
   1400127ef:	add    BYTE PTR [rax-0x4fffffd8],al
   1400127f5:	sub    BYTE PTR [rax],al
   1400127f7:	add    al,dl
   1400127f9:	sub    BYTE PTR [rax],al
   1400127fb:	add    BYTE PTR [rax],al
   1400127fd:	sub    DWORD PTR [rax],eax
   1400127ff:	add    BYTE PTR [rax],dh
   140012801:	sub    DWORD PTR [rax],eax
   140012803:	add    BYTE PTR [rax+0x29],ah
   140012806:	add    BYTE PTR [rax],al
   140012808:	mov    al,0x29
   14001280a:	add    BYTE PTR [rax],al
   14001280c:	add    BYTE PTR [rdx],ch
   14001280e:	add    BYTE PTR [rax],al
   140012810:	xor    BYTE PTR [rdx],ch
   140012812:	add    BYTE PTR [rax],al
   140012814:	push   rax
   140012815:	sub    al,BYTE PTR [rax]
   140012817:	add    BYTE PTR [rax+0x2a],ah
   14001281a:	add    BYTE PTR [rax],al
   14001281c:	movabs al,ds:0xe000002ad000002a
   140012825:	sub    al,BYTE PTR [rax]
   140012827:	add    al,dh
   140012829:	sub    al,BYTE PTR [rax]
   14001282b:	add    BYTE PTR [rax],al
   14001282d:	sub    eax,DWORD PTR [rax]
   14001282f:	add    BYTE PTR [rax],dl
   140012831:	sub    eax,DWORD PTR [rax]
   140012833:	add    BYTE PTR [rax],ah
   140012835:	sub    eax,DWORD PTR [rax]
   140012837:	add    BYTE PTR [rax+0x2b],al
   14001283a:	add    BYTE PTR [rax],al
   14001283c:	(bad)  
   14001283d:	sub    eax,DWORD PTR [rax]
   14001283f:	add    BYTE PTR [rax-0x3fffffd5],ah
   140012845:	sub    eax,DWORD PTR [rax]
   140012847:	add    al,dh
   140012849:	sub    eax,DWORD PTR [rax]
   14001284b:	add    BYTE PTR [rax],dh
   14001284d:	sub    al,0x0
   14001284f:	add    BYTE PTR [rax+0x2c],ah
   140012852:	add    BYTE PTR [rax],al
   140012854:	nop
   140012855:	sub    al,0x0
   140012857:	add    BYTE PTR [rax-0x4fffffd4],ah
   14001285d:	sub    al,0x0
   14001285f:	add    al,al
   140012861:	sub    al,0x0
   140012863:	add    al,dl
   140012865:	sub    al,0x0
   140012867:	add    al,ah
   140012869:	sub    al,0x0
   14001286b:	add    BYTE PTR [rax],dl
   14001286d:	sub    eax,0x2d300000
   140012872:	add    BYTE PTR [rax],al
   140012874:	rex sub eax,0x2d800000
   14001287a:	add    BYTE PTR [rax],al
   14001287c:	mov    al,0x2d
   14001287e:	add    BYTE PTR [rax],al
   140012880:	shr    BYTE PTR [rip+0x2dd00000],0x0        # 0x16dd12887
   140012887:	add    al,dh
   140012889:	sub    eax,0x2e000000
   14001288e:	add    BYTE PTR [rax],al
   140012890:	rex
   140012891:	add    BYTE PTR cs:[rax],al
   140012894:	jo     0x1400128c4
   140012896:	add    BYTE PTR [rax],al
   140012898:	mov    al,0x2e
   14001289a:	add    BYTE PTR [rax],al
   14001289c:	lock add BYTE PTR cs:[rax],al
   1400128a0:	and    BYTE PTR [rdi],ch
   1400128a2:	add    BYTE PTR [rax],al
   1400128a4:	push   rax
   1400128a5:	(bad)  
   1400128a6:	add    BYTE PTR [rax],al
   1400128a8:	movabs al,ds:0x2fe000002f
   1400128b1:	xor    BYTE PTR [rax],al
   1400128b3:	add    BYTE PTR [rax],ah
   1400128b5:	xor    BYTE PTR [rax],al
   1400128b7:	add    BYTE PTR [rax+0x30],al
   1400128ba:	add    BYTE PTR [rax],al
   1400128bc:	(bad)  
   1400128bd:	xor    BYTE PTR [rax],al
   1400128bf:	add    al,al
   1400128c1:	xor    BYTE PTR [rax],al
   1400128c3:	add    BYTE PTR [rax],dl
   1400128c5:	xor    DWORD PTR [rax],eax
   1400128c7:	add    BYTE PTR [rax],ah
   1400128c9:	xor    DWORD PTR [rax],eax
   1400128cb:	add    BYTE PTR [rax+0x31],ah
   1400128ce:	add    BYTE PTR [rax],al
   1400128d0:	nop
   1400128d1:	xor    DWORD PTR [rax],eax
   1400128d3:	add    BYTE PTR [rax-0x4fffffcf],ah
   1400128d9:	xor    DWORD PTR [rax],eax
   1400128db:	add    al,al
   1400128dd:	xor    DWORD PTR [rax],eax
   1400128df:	add    BYTE PTR [rax],dh
   1400128e1:	xor    al,BYTE PTR [rax]
   1400128e3:	add    BYTE PTR [rax+0x32],dh
   1400128e6:	add    BYTE PTR [rax],al
   1400128e8:	movabs al,ds:0x6000003320000032
   1400128f1:	xor    eax,DWORD PTR [rax]
   1400128f3:	add    al,al
   1400128f5:	xor    eax,DWORD PTR [rax]
   1400128f7:	add    BYTE PTR [rax],dh
   1400128f9:	xor    al,0x0
   1400128fb:	add    BYTE PTR [rax+0x34],ah
   140012901:	xor    eax,0x35900000
   140012906:	add    BYTE PTR [rax],al
   140012908:	shl    BYTE PTR [rip+0x35f00000],0x0        # 0x175f1290f
   14001290f:	add    BYTE PTR [rax+0x36],ah
   140012912:	add    BYTE PTR [rax],al
   140012914:	movabs al,ds:0x36f0000036
   14001291d:	(bad)  
   14001291e:	add    BYTE PTR [rax],al
   140012920:	rex (bad) 
   140012922:	add    BYTE PTR [rax],al
   140012924:	jo     0x14001295d
   140012926:	add    BYTE PTR [rax],al
   140012928:	xor    BYTE PTR [rdi],0x0
   14001292b:	add    BYTE PTR [rax-0x5fffffc9],dl
   140012931:	(bad)  
   140012932:	add    BYTE PTR [rax],al
   140012934:	adc    BYTE PTR [rax],bh
   140012936:	add    BYTE PTR [rax],al
   140012938:	xor    BYTE PTR [rax],bh
   14001293a:	add    BYTE PTR [rax],al
   14001293c:	jo     0x140012976
   14001293e:	add    BYTE PTR [rax],al
   140012940:	mov    al,0x38
   140012942:	add    BYTE PTR [rax],al
   140012944:	lock cmp BYTE PTR [rax],al
   140012947:	add    BYTE PTR [rax],dh
   140012949:	cmp    DWORD PTR [rax],eax
   14001294b:	add    BYTE PTR [rax+0x39],dl
   14001294e:	add    BYTE PTR [rax],al
   140012950:	nop
   140012951:	cmp    DWORD PTR [rax],eax
   140012953:	add    al,al
   140012955:	cmp    DWORD PTR [rax],eax
   140012957:	add    al,dh
   140012959:	cmp    DWORD PTR [rax],eax
   14001295b:	add    BYTE PTR [rax],ah
   14001295d:	cmp    al,BYTE PTR [rax]
   14001295f:	add    BYTE PTR [rax+0x3a],al
   140012962:	add    BYTE PTR [rax],al
   140012964:	(bad)  
   140012965:	cmp    al,BYTE PTR [rax]
   140012967:	add    BYTE PTR [rax-0x4fffffc6],al
   14001296d:	cmp    al,BYTE PTR [rax]
   14001296f:	add    al,dh
   140012971:	cmp    al,BYTE PTR [rax]
   140012973:	add    BYTE PTR [rax],ah
   140012975:	cmp    eax,DWORD PTR [rax]
   140012977:	add    BYTE PTR [rax+0x3b],dl
   14001297a:	add    BYTE PTR [rax],al
   14001297c:	nop
   14001297d:	cmp    eax,DWORD PTR [rax]
   14001297f:	add    al,al
   140012981:	cmp    eax,DWORD PTR [rax]
   140012983:	add    al,dh
   140012985:	cmp    eax,DWORD PTR [rax]
   140012987:	add    BYTE PTR [rax],ah
   140012989:	cmp    al,0x0
   14001298b:	add    BYTE PTR [rax+0x3c],dh
   14001298e:	add    BYTE PTR [rax],al
   140012990:	nop
   140012991:	cmp    al,0x0
   140012993:	add    al,al
   140012995:	cmp    al,0x0
   140012997:	add    al,dh
   140012999:	cmp    al,0x0
   14001299b:	add    BYTE PTR [rax],dh
   14001299d:	cmp    eax,0x3d400000
   1400129a2:	add    BYTE PTR [rax],al
   1400129a4:	push   rax
   1400129a5:	cmp    eax,0x3d600000
   1400129aa:	add    BYTE PTR [rax],al
   1400129ac:	jo     0x1400129eb
   1400129ae:	add    BYTE PTR [rax],al
   1400129b0:	cmp    BYTE PTR [rip+0x3d900000],0x0        # 0x17d9129b7
   1400129b7:	add    BYTE PTR [rax-0x4fffffc3],ah
   1400129bd:	cmp    eax,0x6b200000
   1400129c2:	add    BYTE PTR [rax],al
   1400129c4:	shr    BYTE PTR [rbx+0x0],1
   1400129c7:	add    BYTE PTR [rax],dl
   1400129c9:	ins    BYTE PTR es:[rdi],dx
   1400129ca:	add    BYTE PTR [rax],al
   1400129cc:	push   rax
   1400129cd:	ins    BYTE PTR es:[rdi],dx
   1400129ce:	add    BYTE PTR [rax],al
   1400129d0:	jo     0x140012a3e
   1400129d2:	add    BYTE PTR [rax],al
   1400129d4:	shr    BYTE PTR [rax+rax*1+0x0],1
   1400129d8:	adc    BYTE PTR [rbp+0x0],ch
   1400129db:	add    BYTE PTR [rax+0x6d],al
   1400129de:	add    BYTE PTR [rax],al
   1400129e0:	jo     0x140012a4f
   1400129e2:	add    BYTE PTR [rax],al
   1400129e4:	movabs al,ds:0x6000006f1000006d
   1400129ed:	outs   dx,DWORD PTR ds:[rsi]
   1400129ee:	add    BYTE PTR [rax],al
   1400129f0:	jo     0x140012a61
   1400129f2:	add    BYTE PTR [rax],al
   1400129f4:	nop
   1400129f5:	outs   dx,DWORD PTR ds:[rsi]
   1400129f6:	add    BYTE PTR [rax],al
   1400129f8:	(bad)  
   1400129f9:	add    DWORD PTR [rax],0x0
   1400129fc:	movabs al,ds:0x4000008420000083
   140012a05:	test   BYTE PTR [rax],al
   140012a07:	add    BYTE PTR [rax-0x2fffff7c],dl
   140012a0d:	test   BYTE PTR [rax],al
   140012a0f:	add    BYTE PTR [rax-0x7b],ah
   140012a12:	add    BYTE PTR [rax],al
   140012a14:	loopne 0x1400129c7
   140012a16:	add    BYTE PTR [rax],al
   140012a18:	rex ret 0x0
   140012a1c:	jo     0x1400129e1
   140012a1e:	add    BYTE PTR [rax],al
   140012a20:	rol    ah,0x0
   140012a23:	add    al,ah
   140012a25:	(bad)  
   140012a26:	add    BYTE PTR [rax],al
   140012a28:	add    dh,al
   140012a2a:	add    BYTE PTR [rax],al
   140012a2c:	push   rax
   140012a2d:	mov    BYTE PTR [rax],0x0
   140012a30:	jo     0x1400129f9
   140012a32:	add    BYTE PTR [rax],al
   140012a34:	rol    bh,0x0
   140012a37:	add    BYTE PTR [rax-0x37],al
   140012a3a:	add    BYTE PTR [rax],al
   140012a3c:	adc    dl,cl
   140012a3e:	add    BYTE PTR [rax],al
   140012a40:	push   rax
   140012a41:	retf   0x0
   140012a44:	jo     0x140012a10
   140012a46:	add    BYTE PTR [rax],al
   140012a48:	ror    dl,1
   140012a4a:	add    BYTE PTR [rax],al
   140012a4c:	mov    al,0xcb
   140012a4e:	add    BYTE PTR [rax],al
   140012a50:	nop
   140012a51:	int3   
   140012a52:	add    BYTE PTR [rax],al
   140012a54:	loopne 0x140012a22
   140012a56:	add    BYTE PTR [rax],al
   140012a58:	rcl    bl,1
   140012a5a:	add    BYTE PTR [rax],al
   140012a5c:	movabs al,ds:0xd5d00000d4
   140012a65:	xlat   BYTE PTR ds:[rbx]
   140012a66:	add    BYTE PTR [rax],al
   140012a68:	rcl    bh,1
   140012a6a:	add    BYTE PTR [rax],al
   140012a6c:	lock xlat BYTE PTR ds:[rbx]
   140012a6e:	add    BYTE PTR [rax],al
   140012a70:	(bad)  
   140012a71:	fadd   DWORD PTR [rax]
   140012a73:	add    BYTE PTR [rax-0x2fffff28],ah
   140012a79:	fadd   DWORD PTR [rax]
   140012a7b:	add    BYTE PTR [rax],dl
   140012a7d:	fld    DWORD PTR [rax]
   140012a7f:	add    BYTE PTR [rax+0x600000db],dl
   140012a85:	fiadd  WORD PTR [rax]
   140012a87:	add    BYTE PTR [rax-0x21],dl
   140012a8a:	add    BYTE PTR [rax],al
   140012a8c:	loopne 0x140012a6d
   140012a8e:	add    BYTE PTR [rax],al
   140012a90:	movabs al,ds:0xf00000e1100000e0
   140012a99:	loop   0x140012a9b
   140012a9b:	add    BYTE PTR [rax],ah
   140012a9d:	in     eax,0x0
   140012a9f:	add    BYTE PTR [rax-0x1b],dh
   140012aa2:	add    BYTE PTR [rax],al
   140012aa4:	shl    ch,1
   140012aa6:	add    BYTE PTR [rax],al
   140012aa8:	out    0x0,al
   140012aab:	add    al,dh
   140012aad:	out    0x0,al
   140012aaf:	add    al,ah
   140012ab1:	out    0x0,eax
   140012ab3:	add    al,dl
   140012ab5:	call   0x129412aba
   140012aba:	add    BYTE PTR [rax],al
   140012abc:	lock jmp 0x12a112ac2
   140012ac2:	add    BYTE PTR [rax],al
   140012ac4:	push   rax
   140012ac5:	(bad)  
   140012ac6:	add    BYTE PTR [rax],al
   140012ac8:	lock (bad) 
   140012aca:	add    BYTE PTR [rax],al
   140012acc:	xor    bl,ch
   140012ace:	add    BYTE PTR [rax],al
   140012ad0:	(bad)  
   140012ad1:	jmp    0x140012ad3
   140012ad3:	add    BYTE PTR [rax],dh
   140012ad5:	in     al,dx
   140012ad6:	add    BYTE PTR [rax],al
   140012ad8:	jo     0x140012ac7
   140012ada:	add    BYTE PTR [rax],al
   140012adc:	loopne 0x140012acb
   140012ade:	add    BYTE PTR [rax],al
   140012ae0:	and    dh,ch
   140012ae2:	add    BYTE PTR [rax],al
   140012ae4:	mov    al,0xf0
   140012ae6:	add    BYTE PTR [rax],al
   140012ae8:	jo     0x140012add
   140012aea:	add    BYTE PTR [rax],al
   140012aec:	xor    ah,0x0
   140012aef:	add    BYTE PTR [rax-0x6fffff0a],ah
   140012af5:	test   DWORD PTR [rax],0xf7c000
   140012afb:	add    BYTE PTR [rax],al
   140012afd:	clc    
   140012afe:	add    BYTE PTR [rax],al
   140012b00:	jo     0x140012afa
   140012b02:	add    BYTE PTR [rax],al
   140012b04:	sar    al,1
   140012b06:	add    BYTE PTR [rax],al
   140012b08:	and    cl,bh
   140012b0a:	add    BYTE PTR [rax],al
   140012b0c:	xor    dl,bh
   140012b0e:	add    BYTE PTR [rax],al
   140012b10:	nop
   140012b11:	cli    
   140012b12:	add    BYTE PTR [rax],al
   140012b14:	lock cli 
   140012b16:	add    BYTE PTR [rax],al
   140012b18:	push   rax
   140012b19:	sti    
   140012b1a:	add    BYTE PTR [rax],al
   140012b1c:	mov    al,0xfb
   140012b1e:	add    BYTE PTR [rax],al
   140012b20:	and    ah,bh
   140012b22:	add    BYTE PTR [rax],al
   140012b24:	jo     0x140012b22
   140012b26:	add    BYTE PTR [rax],al
   140012b28:	add    ch,bh
   140012b2a:	add    BYTE PTR [rax],al
   140012b2c:	mov    al,0xfd
   140012b2e:	add    BYTE PTR [rax],al
   140012b30:	mov    al,0xfe
   140012b32:	add    BYTE PTR [rax],al
   140012b34:	loopne 0x140012b35
   140012b36:	add    BYTE PTR [rax],al
   140012b38:	(bad)  
   140012b39:	add    DWORD PTR [rcx],eax
   140012b3b:	add    BYTE PTR [rax+0x2],dl
   140012b3e:	add    DWORD PTR [rax],eax
   140012b40:	movabs al,ds:0x7000010300000102
   140012b49:	add    eax,DWORD PTR [rcx]
   140012b4b:	add    al,dl
   140012b4d:	add    eax,DWORD PTR [rcx]
   140012b4f:	add    BYTE PTR [rax+0x4],ah
   140012b52:	add    DWORD PTR [rax],eax
   140012b54:	jo     0x140012b5a
   140012b56:	add    DWORD PTR [rax],eax
   140012b58:	mov    al,0x4
   140012b5a:	add    DWORD PTR [rax],eax
   140012b5c:	loopne 0x140012b62
   140012b5e:	add    DWORD PTR [rax],eax
   140012b60:	adc    BYTE PTR [rip+0x5300001],al        # 0x145312b67
   140012b66:	add    DWORD PTR [rax],eax
   140012b68:	push   rax
   140012b69:	add    eax,0x6000001
   140012b6e:	add    DWORD PTR [rax],eax
   140012b70:	xor    BYTE PTR [rsi],al
   140012b72:	add    DWORD PTR [rax],eax
   140012b74:	add    BYTE PTR [rsi],0x1
   140012b77:	add    al,dl
   140012b79:	(bad)  
   140012b7a:	add    DWORD PTR [rax],eax
   140012b7c:	adc    BYTE PTR [rdi],al
   140012b7e:	add    DWORD PTR [rax],eax
   140012b80:	push   rax
   140012b81:	(bad)  
   140012b82:	add    DWORD PTR [rax],eax
   140012b84:	adc    BYTE PTR [rax],cl
   140012b86:	add    DWORD PTR [rax],eax
   140012b88:	(bad)  
   140012b89:	or     BYTE PTR [rcx],al
   140012b8b:	add    BYTE PTR [rax-0x3ffffef8],dl
   140012b91:	or     BYTE PTR [rcx],al
   140012b93:	add    al,dh
   140012b95:	or     BYTE PTR [rcx],al
   140012b97:	add    BYTE PTR [rax],dl
   140012b99:	or     DWORD PTR [rcx],eax
   140012b9b:	add    BYTE PTR [rax],ah
   140012b9d:	or     DWORD PTR [rcx],eax
   140012b9f:	add    BYTE PTR [rax+0x9],dl
   140012ba2:	add    DWORD PTR [rax],eax
   140012ba4:	nop
   140012ba5:	or     DWORD PTR [rcx],eax
   140012ba7:	add    al,ah
   140012ba9:	or     DWORD PTR [rcx],eax
   140012bab:	add    BYTE PTR [rax],ah
   140012bad:	or     al,BYTE PTR [rcx]
   140012baf:	add    BYTE PTR [rax+0xa],dh
   140012bb2:	add    DWORD PTR [rax],eax
   140012bb4:	nop
   140012bb5:	or     al,BYTE PTR [rcx]
   140012bb7:	add    al,dl
   140012bb9:	or     al,BYTE PTR [rcx]
   140012bbb:	add    al,dh
   140012bbd:	or     al,BYTE PTR [rcx]
   140012bbf:	add    BYTE PTR [rax],ah
   140012bc1:	or     eax,DWORD PTR [rcx]
   140012bc3:	add    al,dl
   140012bc5:	or     eax,DWORD PTR [rcx]
   140012bc7:	add    BYTE PTR [rax+0x3000010c],dl
   140012bcd:	(bad)  
   140012bce:	add    DWORD PTR [rax],eax
   140012bd0:	(bad)  
   140012bd1:	sgdt   [rax]
   140012bd4:	(bad)  
   140012bd5:	adc    BYTE PTR [rcx],al
   140012bd7:	add    BYTE PTR [rax+0x10],dh
   140012bda:	add    DWORD PTR [rax],eax
   140012bdc:	adc    BYTE PTR [rax],0x1
   140012bdf:	add    BYTE PTR [rax],ah
   140012be1:	adc    DWORD PTR [rcx],eax
   140012be3:	add    al,ah
   140012be5:	adc    DWORD PTR [rcx],eax
   140012be7:	add    al,dl
   140012be9:	adc    al,0x1
   140012beb:	add    BYTE PTR [rax-0x2ffffeeb],dh
   140012bf1:	(bad)  
   140012bf2:	add    DWORD PTR [rax],eax
   140012bf4:	push   rax
   140012bf5:	sbb    BYTE PTR [rcx],al
   140012bf7:	add    BYTE PTR [rax-0x7ffffee8],dl
   140012bfd:	sbb    eax,DWORD PTR [rcx]
   140012bff:	add    BYTE PTR [rax+0x1d],al
   140012c02:	add    DWORD PTR [rax],eax
	...
   140012c10:	(bad)  
   140012c11:	add    BYTE PTR [rax],al
   140012c13:	add    BYTE PTR [rax],al
   140012c15:	add    BYTE PTR [rax],al
   140012c17:	add    BYTE PTR [rbx+0x0],al
   140012c1a:	push   rbx
   140012c1b:	add    BYTE PTR [rbp+0x0],ch
   140012c1e:	(bad)  
   140012c1f:	add    BYTE PTR [rax+rax*1+0x6c],ch
   140012c23:	add    BYTE PTR [rbx+0x0],dl
   140012c26:	jo     0x140012c28
   140012c28:	imul   eax,DWORD PTR [rax],0x4c006e
   140012c2e:	outs   dx,DWORD PTR ds:[rsi]
   140012c2f:	add    BYTE PTR [rbx+0x0],ah
   140012c32:	imul   eax,DWORD PTR [rax],0x0
   140012c35:	add    BYTE PTR [rax],al
   140012c37:	add    BYTE PTR [rbx+0x0],al
   140012c3a:	push   rbx
   140012c3b:	add    BYTE PTR [rax+0x0],dh
   140012c3e:	imul   eax,DWORD PTR [rax],0x4c006e
   140012c44:	outs   dx,DWORD PTR ds:[rsi]
   140012c45:	add    BYTE PTR [rbx+0x0],ah
   140012c48:	imul   eax,DWORD PTR [rax],0x0
   140012c4b:	add    BYTE PTR [rax],al
   140012c4d:	add    BYTE PTR [rax],al
   140012c4f:	add    BYTE PTR [rbx+0x0],al
   140012c52:	rex.RX add BYTE PTR [rcx+0x0],r12b
   140012c56:	imul   eax,DWORD PTR [rax],0x65
   140012c59:	add    BYTE PTR [rax+rax*1+0x6f],cl
   140012c5d:	add    BYTE PTR [rbx+0x0],ah
   140012c60:	imul   eax,DWORD PTR [rax],0x0
   140012c63:	add    BYTE PTR [rax],al
   140012c65:	add    BYTE PTR [rax],al
   140012c67:	add    BYTE PTR [rbx+0x0],al
   140012c6a:	rex.XB add BYTE PTR [r10+0x0],sil
   140012c6e:	imul   eax,DWORD PTR [rax],0x530074
   140012c74:	add    BYTE PTR gs:[rbx+0x0],ah
	...
   140012c80:	rex.XB push r10
   140012c82:	je     0x140012cf0
   140012c84:	push   rdx
   140012c85:	gs jae 0x140012cf7
   140012c88:	jne    0x140012cfc
   140012c8a:	movsxd esp,DWORD PTR [rbp+0x0]
   140012c8d:	add    BYTE PTR [rax],al
   140012c8f:	add    BYTE PTR [rbx+0x53],al
   140012c92:	push   0x4c657261
   140012c97:	outs   dx,DWORD PTR ds:[rsi]
   140012c98:	movsxd ebp,DWORD PTR [rbx+0x0]
   140012c9b:	add    BYTE PTR [rax],al
   140012c9d:	add    BYTE PTR [rax],al
   140012c9f:	add    BYTE PTR [rbx+0x0],al
   140012ca2:	push   rdx
   140012ca3:	add    BYTE PTR [rbp+0x0],ah
   140012ca6:	(bad)  
   140012ca7:	add    BYTE PTR [rax+rax*1+0x65],ah
   140012cab:	add    BYTE PTR [rdx+0x0],dh
   140012cae:	push   rdi
   140012caf:	add    BYTE PTR [rdx+0x0],dh
   140012cb2:	imul   eax,DWORD PTR [rax],0x650074
   140012cb8:	jb     0x140012cba
   140012cba:	rex.WR add BYTE PTR [rdi+0x0],r13b
   140012cbe:	movsxd eax,DWORD PTR [rax]
   140012cc0:	imul   eax,DWORD PTR [rax],0x0
   140012cc3:	add    BYTE PTR [rax],al
   140012cc5:	add    BYTE PTR [rax],al
   140012cc7:	add    BYTE PTR [rbx+0x0],al
   140012cca:	push   rdx
   140012ccb:	add    BYTE PTR [rbp+0x0],ah
   140012cce:	(bad)  
   140012ccf:	add    BYTE PTR [rax+rax*1+0x65],ah
   140012cd3:	add    BYTE PTR [rdx+0x0],dh
   140012cd6:	push   rdi
   140012cd7:	add    BYTE PTR [rdx+0x0],dh
   140012cda:	imul   eax,DWORD PTR [rax],0x650074
   140012ce0:	jb     0x140012ce2
   140012ce2:	rex.WR add BYTE PTR [rdi+0x0],r13b
   140012ce6:	movsxd eax,DWORD PTR [rax]
   140012ce8:	imul   eax,DWORD PTR [rax],0x32
   140012ceb:	add    BYTE PTR [rax],al
   140012ced:	add    BYTE PTR [rax],al
   140012cef:	add    BYTE PTR [rbx+0x0],al
   140012cf2:	push   rdx
   140012cf3:	add    BYTE PTR [rbp+0x0],ah
   140012cf6:	(bad)  
   140012cf7:	add    BYTE PTR [rax+rax*1+0x65],ah
   140012cfb:	add    BYTE PTR [rdx+0x0],dh
   140012cfe:	push   rdi
   140012cff:	add    BYTE PTR [rdx+0x0],dh
   140012d02:	imul   eax,DWORD PTR [rax],0x650074
   140012d08:	jb     0x140012d0a
   140012d0a:	rex.WR add BYTE PTR [rdi+0x0],r13b
   140012d0e:	movsxd eax,DWORD PTR [rax]
   140012d10:	imul   eax,DWORD PTR [rax],0x33
   140012d13:	add    BYTE PTR [rax],al
   140012d15:	add    BYTE PTR [rax],al
   140012d17:	add    BYTE PTR [rbp+0x5ef8e3a2],dh
   140012d1d:	(bad)  
   140012d1e:	add    al,0x40
   140012d20:	mov    edx,0x3bca7f94
   140012d25:	(bad)  
   140012d26:	in     al,dx
   140012d27:	and    ecx,DWORD PTR [rbp-0x6b]
   140012d2a:	adc    dh,dh
   140012d2c:	or     edi,DWORD PTR [rbx]
   140012d2e:	push   rsi
   140012d2f:	rex.WR xchg rbp,rax
   140012d31:	movsxd esp,DWORD PTR [rdx]
   140012d33:	jnp    0x140012db0
   140012d35:	out    0x24,al
   140012d37:	mov    ah,0x0
   140012d39:	add    BYTE PTR [rax],al
   140012d3b:	add    BYTE PTR [rax],al
   140012d3d:	add    BYTE PTR [rax],al
   140012d3f:	add    BYTE PTR [rcx+0x0],al
   140012d42:	outs   dx,BYTE PTR ds:[rsi]
   140012d43:	add    BYTE PTR [rax],ah
   140012d45:	add    BYTE PTR [rbp+0x0],ah
   140012d48:	jb     0x140012d4a
   140012d4a:	jb     0x140012d4c
   140012d4c:	outs   dx,DWORD PTR ds:[rsi]
   140012d4d:	add    BYTE PTR [rdx+0x0],dh
   140012d50:	and    BYTE PTR [rax],al
   140012d52:	push   0x73006100
   140012d57:	add    BYTE PTR [rax],ah
   140012d59:	add    BYTE PTR [rdi+0x0],ch
   140012d5c:	movsxd eax,DWORD PTR [rax]
   140012d5e:	movsxd eax,DWORD PTR [rax]
   140012d60:	jne    0x140012d62
   140012d62:	jb     0x140012d64
   140012d64:	jb     0x140012d66
   140012d66:	add    BYTE PTR gs:[rax+rax*1+0x2c],ah
   140012d6b:	add    BYTE PTR [rax],ah
   140012d6d:	add    BYTE PTR [rdx+0x0],ah
   140012d70:	jne    0x140012d72
   140012d72:	je     0x140012d74
   140012d74:	and    BYTE PTR [rax],al
   140012d76:	je     0x140012d78
   140012d78:	push   0x20006500
   140012d7d:	add    BYTE PTR [rax+rax*1+0x6f],dh
   140012d81:	add    BYTE PTR [rdi+0x0],ch
   140012d84:	ins    BYTE PTR es:[rdi],dx
   140012d85:	add    BYTE PTR [rax],ah
   140012d87:	add    BYTE PTR [rsi+0x0],ah
   140012d8a:	(bad)  
   140012d8b:	add    BYTE PTR [rcx+0x0],ch
   140012d8e:	ins    BYTE PTR es:[rdi],dx
   140012d8f:	add    BYTE PTR [rbp+0x0],ah
   140012d92:	add    BYTE PTR fs:[rax],ah
   140012d95:	add    BYTE PTR [rax+rax*1+0x6f],dh
   140012d99:	add    BYTE PTR [rax],ah
   140012d9b:	add    BYTE PTR [rax+rax*1+0x6f],ch
   140012d9f:	add    BYTE PTR [rcx+0x0],ah
   140012da2:	add    BYTE PTR fs:[rax],ah
   140012da5:	add    BYTE PTR [rdx+0x0],dh
   140012da8:	add    BYTE PTR gs:[rbx+0x0],dh
   140012dac:	outs   dx,DWORD PTR ds:[rsi]
   140012dad:	add    BYTE PTR [rbp+0x0],dh
   140012db0:	jb     0x140012db2
   140012db2:	movsxd eax,DWORD PTR [rax]
   140012db4:	add    BYTE PTR gs:[rbx+0x0],dh
   140012db8:	and    BYTE PTR [rax],al
   140012dba:	imul   eax,DWORD PTR [rax],0x20006e
   140012dc0:	outs   dx,DWORD PTR ds:[rsi]
   140012dc1:	add    BYTE PTR [rdx+0x0],dh
   140012dc4:	add    BYTE PTR fs:[rbp+0x0],ah
   140012dc8:	jb     0x140012dca
   140012dca:	and    BYTE PTR [rax],al
   140012dcc:	je     0x140012dce
   140012dce:	outs   dx,DWORD PTR ds:[rsi]
   140012dcf:	add    BYTE PTR [rax],ah
   140012dd1:	add    BYTE PTR [rax+rax*1+0x69],ah
   140012dd5:	add    BYTE PTR [rbx+0x0],dh
   140012dd8:	jo     0x140012dda
   140012dda:	ins    BYTE PTR es:[rdi],dx
   140012ddb:	add    BYTE PTR [rcx+0x0],ah
   140012dde:	jns    0x140012de0
   140012de0:	and    BYTE PTR [rax],al
   140012de2:	je     0x140012de4
   140012de4:	push   0x20006500
   140012de9:	add    BYTE PTR [rbp+0x0],ah
   140012dec:	jb     0x140012dee
   140012dee:	jb     0x140012df0
   140012df0:	outs   dx,DWORD PTR ds:[rsi]
   140012df1:	add    BYTE PTR [rdx+0x0],dh
   140012df4:	and    BYTE PTR [rax],al
   140012df6:	ins    DWORD PTR es:[rdi],dx
   140012df7:	add    BYTE PTR [rbp+0x0],ah
   140012dfa:	jae    0x140012dfc
   140012dfc:	jae    0x140012dfe
   140012dfe:	(bad)  
   140012dff:	add    BYTE PTR [rdi+0x0],ah
   140012e02:	add    BYTE PTR gs:[rax],ah
   140012e05:	add    BYTE PTR [rax],ch
   140012e07:	add    BYTE PTR [rax+0x0],cl
   140012e0a:	push   rdx
   140012e0b:	add    BYTE PTR [rbp+0x0],al
   140012e0e:	push   rbx
   140012e0f:	add    BYTE PTR [rbp+0x0],dl
   140012e12:	rex.WR add BYTE PTR [rax+rax*1+0x3d],r10b
   140012e17:	add    BYTE PTR [rip+0x38003000],ah        # 0x178015e1d
   140012e1d:	add    BYTE PTR [rax+0x0],bh
   140012e20:	sub    DWORD PTR [rax],eax
   140012e22:	add    BYTE PTR cs:[rax],al
   140012e25:	add    BYTE PTR [rax],al
   140012e27:	add    BYTE PTR [rax],ah
   140012e29:	add    BYTE PTR [rax],al
   140012e2b:	add    BYTE PTR [rax],al
   140012e2d:	add    BYTE PTR [rax],al
   140012e2f:	add    BYTE PTR [rip+0x73007700],ah        # 0x1b301a535
   140012e35:	add    BYTE PTR [rax],al
   140012e37:	add    BYTE PTR [rip+0x73007700],ah        # 0x1b301a53d
   140012e3d:	add    BYTE PTR [rdx],cl
	...
   140012e47:	add    BYTE PTR [rax],ah
   140012e49:	add    BYTE PTR [rax],ah
   140012e4b:	add    BYTE PTR [rip+0x73007700],ah        # 0x1b301a551
   140012e51:	add    BYTE PTR [rax],al
   140012e53:	add    BYTE PTR [rax],al
   140012e55:	add    BYTE PTR [rax],al
   140012e57:	add    BYTE PTR [rcx+0x0],ch
   140012e5a:	add    BYTE PTR fs:[rbp+0x0],ah
   140012e5e:	outs   dx,BYTE PTR ds:[rsi]
   140012e5f:	add    BYTE PTR [rax+rax*1+0x69],dh
   140012e63:	add    BYTE PTR [rsi+0x0],ah
   140012e66:	imul   eax,DWORD PTR [rax],0x720065
   140012e6c:	add    BYTE PTR [rax],al
   140012e6e:	add    BYTE PTR [rax],al
   140012e70:	and    BYTE PTR [rax],al
   140012e72:	and    eax,0x73007700
   140012e77:	add    BYTE PTR [rip+0x73007700],ah        # 0x1b301a57d
   140012e7d:	add    BYTE PTR [rip+0x73007700],ah        # 0x1b301a583
   140012e83:	add    BYTE PTR [rdx],cl
   140012e85:	add    BYTE PTR [rdx],cl
	...
   140012e8f:	add    BYTE PTR [rax],ah
   140012e91:	add    BYTE PTR [rip+0x73007700],ah        # 0x1b301a597
   140012e97:	add    BYTE PTR [rdx],cl
   140012e99:	add    BYTE PTR [rdx],cl
   140012e9b:	add    BYTE PTR [rax],al
   140012e9d:	add    BYTE PTR [rax],al
   140012e9f:	add    BYTE PTR [rsi],ch
   140012ea1:	add    BYTE PTR [rdi+0x0],cl
   140012ea4:	rex.XB add BYTE PTR [r8+0x0],dl
	...
   140012eb0:	add    BYTE PTR cs:[rip+0x6400],ah        # 0x1400192b7
   140012eb7:	add    BYTE PTR [rcx+0x0],ch
   140012eba:	imul   eax,DWORD PTR [rax],0x720073
   140012ec0:	add    BYTE PTR gs:[rbx+0x0],dh
   140012ec4:	add    BYTE PTR cs:[rax+rax*1+0x6c],ah
   140012ec9:	add    BYTE PTR [rax+rax*1+0x0],ch
   140012ecd:	add    BYTE PTR [rax],al
   140012ecf:	add    BYTE PTR [rcx+0x0],cl
   140012ed2:	rex.WRX add BYTE PTR [rsi+0x0],r8b
   140012ed6:	rex.WRXB add BYTE PTR [r8],r8b
   140012ed9:	add    BYTE PTR [rax],al
   140012edb:	add    BYTE PTR [rax],al
   140012edd:	add    BYTE PTR [rax],al
   140012edf:	add    BYTE PTR [rbx+0x0],dl
   140012ee2:	push   rsp
   140012ee3:	add    BYTE PTR [rcx+0x0],al
   140012ee6:	push   rsp
   140012ee7:	add    BYTE PTR [rbp+0x0],dl
   140012eea:	push   rbx
   140012eeb:	add    BYTE PTR [rax],al
   140012eed:	add    BYTE PTR [rax],al
   140012eef:	add    BYTE PTR [rax+rax*1+0x61],dh
   140012ef3:	add    BYTE PTR [rdi+0x0],ah
   140012ef6:	add    BYTE PTR [rax],al
   140012ef8:	add    BYTE PTR [r10+0x0],r10b
   140012efc:	push   rdx
   140012efd:	add    BYTE PTR [rdi+0x0],cl
   140012f00:	push   rdx
   140012f01:	add    BYTE PTR [rax],al
   140012f03:	add    BYTE PTR [rax],al
   140012f05:	add    BYTE PTR [rax],al
   140012f07:	add    BYTE PTR [rip+0x69004900],ah        # 0x1a901780d
   140012f0d:	add    BYTE PTR [rax],al
   140012f0f:	add    BYTE PTR [rax+rax*1+0x69],dh
   140012f13:	add    BYTE PTR [rbp+0x0],ch
   140012f16:	add    BYTE PTR gs:[rax+rax*1+0x61],dh
   140012f1b:	add    BYTE PTR [rbx+0x0],ch
   140012f1e:	add    BYTE PTR gs:[rsi+0x0],ch
   140012f22:	add    BYTE PTR [rax],al
   140012f24:	add    BYTE PTR [rax],al
   140012f26:	add    BYTE PTR [rax],al
   140012f28:	and    eax,0x38003000
   140012f2d:	add    BYTE PTR [rax+0x0],bh
	...
   140012f38:	push   0x65007200
   140012f3d:	add    BYTE PTR [rbx+0x0],dh
   140012f40:	jne    0x140012f42
   140012f42:	ins    BYTE PTR es:[rdi],dx
   140012f43:	add    BYTE PTR [rax+rax*1+0x0],dh
   140012f47:	add    BYTE PTR [rip+0x6900],ah        # 0x14001984d
   140012f4d:	add    BYTE PTR [rax],al
   140012f4f:	add    BYTE PTR [rdi+0x0],ch
   140012f52:	(bad)  
   140012f53:	add    BYTE PTR [rdx+0x0],ch
   140012f56:	add    BYTE PTR gs:[rbx+0x0],ah
   140012f5a:	je     0x140012f5c
   140012f5c:	jae    0x140012f5e
   140012f5e:	add    BYTE PTR [rax],al
   140012f60:	rex.WRXB add BYTE PTR [r13+0x0],r10b
   140012f64:	push   rsp
   140012f65:	add    BYTE PTR [rax+0x0],dl
   140012f68:	push   rbp
   140012f69:	add    BYTE PTR [rax+rax*1+0x0],dl
   140012f6d:	add    BYTE PTR [rax],al
   140012f6f:	add    BYTE PTR [rbx+0x0],al
   140012f72:	rex.WRXB add BYTE PTR [r14+0x0],r9b
   140012f76:	rex.RX add BYTE PTR [rcx+0x0],r9b
   140012f7a:	rex.RXB add BYTE PTR [r8],r8b
   140012f7d:	add    BYTE PTR [rax],al
   140012f7f:	add    BYTE PTR [rbx+0x0],al
   140012f82:	push   rbp
   140012f83:	add    BYTE PTR [rbx+0x0],dl
   140012f86:	push   rsp
   140012f87:	add    BYTE PTR [rdi+0x0],cl
   140012f8a:	rex.WRB add BYTE PTR [r8],r8b
   140012f8d:	add    BYTE PTR [rax],al
   140012f8f:	add    BYTE PTR [rsi+0x0],al
   140012f92:	push   rbp
   140012f93:	add    BYTE PTR [rax+rax*1+0x4c],cl
	...
   140012f9f:	add    BYTE PTR [rdx],cl
   140012fa1:	add    BYTE PTR [rax],al
   140012fa3:	add    BYTE PTR [rip+0x3f00],ch        # 0x140016ea9
   140012fa9:	add    BYTE PTR [rax],al
   140012fab:	add    BYTE PTR [rdi],ch
   140012fad:	add    BYTE PTR [rdi],bh
	...
   140012fb7:	add    BYTE PTR [rax+0x0],al
   140012fba:	jbe    0x140012fbc
   140012fbc:	add    BYTE PTR gs:[rdx+0x0],dh
   140012fc0:	(bad)  
   140012fc1:	add    BYTE PTR [rax],al
   140012fc3:	add    BYTE PTR [rax],al
   140012fc5:	add    BYTE PTR [rax],al
   140012fc7:	add    BYTE PTR [rax+0x0],al
   140012fca:	rex.WRXB add BYTE PTR [r10+0x0],r12b
   140012fce:	push   0x0
   140012fd0:	add    BYTE PTR gs:[rbx+0x0],ah
   140012fd4:	je     0x140012fd6
   140012fd6:	push   rsp
   140012fd7:	add    BYTE PTR [rcx+0x0],bh
   140012fda:	jo     0x140012fdc
   140012fdc:	add    BYTE PTR gs:[rax],al
   140012fdf:	add    BYTE PTR [rax+0x0],al
   140012fe2:	imul   eax,DWORD PTR [rax],0x650064
   140012fe8:	outs   dx,BYTE PTR ds:[rsi]
   140012fe9:	add    BYTE PTR [rax+rax*1+0x69],dh
   140012fed:	add    BYTE PTR [rsi+0x0],ah
   140012ff0:	imul   eax,DWORD PTR [rax],0x720065
   140012ff6:	add    BYTE PTR [rax],al
   140012ff8:	add    BYTE PTR [rcx+0x0],bpl
   140012ffc:	outs   dx,BYTE PTR ds:[rsi]
   140012ffd:	add    BYTE PTR [rax],al
   140012fff:	add    BYTE PTR [rcx+0x0],ch
   140013002:	outs   dx,BYTE PTR ds:[rsi]
   140013003:	add    BYTE PTR [rax],al
   140013005:	add    BYTE PTR [rax],al
   140013007:	add    BYTE PTR [rax+0x0],al
   14001300a:	movsxd eax,DWORD PTR [rax]
   14001300c:	outs   dx,DWORD PTR ds:[rsi]
   14001300d:	add    BYTE PTR [rbp+0x0],ch
   140013010:	ins    DWORD PTR es:[rdi],dx
   140013011:	add    BYTE PTR [rcx+0x0],ch
   140013014:	je     0x140013016
   140013016:	add    BYTE PTR [rax],al
   140013018:	add    BYTE PTR [rbx+0x0],spl
   14001301c:	add    BYTE PTR [rax],al
   14001301e:	add    BYTE PTR [rax],al
   140013020:	movsxd eax,DWORD PTR [rax]
   140013022:	outs   dx,DWORD PTR ds:[rsi]
   140013023:	add    BYTE PTR [rbp+0x0],ch
   140013026:	ins    DWORD PTR es:[rdi],dx
   140013027:	add    BYTE PTR [rcx+0x0],ch
   14001302a:	je     0x14001302c
   14001302c:	push   rax
   14001302d:	add    BYTE PTR [rcx+0x0],ah
   140013030:	je     0x140013032
   140013032:	push   0x0
   140013037:	add    BYTE PTR [rbx+0x0],ah
   14001303a:	outs   dx,DWORD PTR ds:[rsi]
   14001303b:	add    BYTE PTR [rbp+0x0],ch
   14001303e:	ins    DWORD PTR es:[rdi],dx
   14001303f:	add    BYTE PTR [rcx+0x0],ch
   140013042:	je     0x140013044
   140013044:	add    BYTE PTR [rax],al
   140013046:	add    BYTE PTR [rax],al
   140013048:	add    BYTE PTR [rbp+0x0],bpl
   14001304c:	add    BYTE PTR gs:[rax+rax*1+0x61],dh
   140013051:	add    BYTE PTR [rax+rax*1+0x61],ah
   140013055:	add    BYTE PTR [rax+rax*1+0x61],dh
   140013059:	add    BYTE PTR [rax],al
   14001305b:	add    BYTE PTR [rax+0x0],al
   14001305e:	ins    DWORD PTR es:[rdi],dx
	...
   140013067:	add    BYTE PTR [rbp+0x0],ch
   14001306a:	add    BYTE PTR gs:[rax+rax*1+0x61],dh
   14001306f:	add    BYTE PTR [rax+rax*1+0x61],ah
   140013073:	add    BYTE PTR [rax+rax*1+0x61],dh
	...
   14001307f:	add    BYTE PTR [rax+0x0],al
   140013082:	movsxd eax,DWORD PTR [rax]
   140013084:	ins    BYTE PTR es:[rdi],dx
   140013085:	add    BYTE PTR [rdx+0x0],dh
	...
   140013090:	movsxd eax,DWORD PTR [rax]
   140013092:	ins    BYTE PTR es:[rdi],dx
   140013093:	add    BYTE PTR [rdx+0x0],dh
   140013096:	add    BYTE PTR [rax],al
   140013098:	add    BYTE PTR [rbx+0x0],spl
   14001309c:	outs   dx,DWORD PTR ds:[rsi]
   14001309d:	add    BYTE PTR [rsi+0x0],ch
   1400130a0:	data16 add BYTE PTR [rcx+0x0],ch
   1400130a4:	add    BYTE PTR [eax],al
   1400130a7:	add    BYTE PTR [rax+0x0],al
   1400130aa:	movsxd eax,DWORD PTR [rax]
   1400130ac:	data16 add BYTE PTR [rax],al
   1400130af:	add    BYTE PTR [rbx+0x0],ah
   1400130b2:	outs   dx,DWORD PTR ds:[rsi]
   1400130b3:	add    BYTE PTR [rsi+0x0],ch
   1400130b6:	data16 add BYTE PTR [rcx+0x0],ch
   1400130ba:	add    BYTE PTR [eax],al
   1400130bd:	add    BYTE PTR [rax],al
   1400130bf:	add    BYTE PTR [rdx],ch
   1400130c1:	add    BYTE PTR [rax],al
   1400130c3:	add    BYTE PTR [rax],al
   1400130c5:	add    BYTE PTR [rax],al
   1400130c7:	add    BYTE PTR [rax+0x0],al
   1400130ca:	js     0x1400130cc
   1400130cc:	ins    DWORD PTR es:[rdi],dx
   1400130cd:	add    BYTE PTR [rax+rax*1+0x0],ch
   1400130d1:	add    BYTE PTR [rax],al
   1400130d3:	add    BYTE PTR [rax+0x0],al
   1400130d6:	js     0x1400130d8
	...
   1400130e0:	js     0x1400130e2
   1400130e2:	ins    DWORD PTR es:[rdi],dx
   1400130e3:	add    BYTE PTR [rax+rax*1+0x0],ch
   1400130e7:	add    BYTE PTR [rsi+0x0],dh
   1400130ea:	add    BYTE PTR gs:[rdx+0x0],dh
   1400130ee:	(bad)  
   1400130ef:	add    BYTE PTR [rdi+0x0],ch
   1400130f2:	jae    0x1400130f4
   1400130f4:	add    BYTE PTR gs:[rax],al
   1400130f7:	add    BYTE PTR [rax+0x0],al
   1400130fa:	add    BYTE PTR fs:[rbp+0x0],ah
   1400130fe:	(bad)  
   1400130ff:	add    BYTE PTR [rbp+0x0],dh
   140013102:	add    BYTE PTR [eax],al
   140013105:	add    BYTE PTR [rax],al
   140013107:	add    BYTE PTR [rax+0x0],al
   14001310a:	add    BYTE PTR fs:[rax],al
   14001310d:	add    BYTE PTR [rax],al
   14001310f:	add    BYTE PTR [rax+rax*1+0x65],ah
   140013113:	add    BYTE PTR [rdx+0x0],ah
   140013116:	jne    0x140013118
   140013118:	add    BYTE PTR [eax],al
   14001311b:	add    BYTE PTR [rax],al
   14001311d:	add    BYTE PTR [rax],al
   14001311f:	add    BYTE PTR [rax+0x0],al
   140013122:	(bad)  
   140013123:	add    BYTE PTR [rax+rax*1+0x6d],ah
   140013127:	add    BYTE PTR [rcx+0x0],ch
   14001312a:	outs   dx,BYTE PTR ds:[rsi]
   14001312b:	add    BYTE PTR [rax],al
   14001312d:	add    BYTE PTR [rax],al
   14001312f:	add    BYTE PTR [rcx+0x0],ah
   140013132:	add    BYTE PTR fs:[rbp+0x0],ch
   140013136:	imul   eax,DWORD PTR [rax],0x6e
   14001313c:	add    BYTE PTR [rax],al
   14001313e:	add    BYTE PTR [rax],al
   140013140:	add    BYTE PTR [rax+rax*1+0x65],sil
   140013145:	add    BYTE PTR [rax+0x0],bh
   140013148:	je     0x14001314a
   14001314a:	add    BYTE PTR [rax],al
   14001314c:	add    BYTE PTR [rax+rax*1+0x0],sil
   140013151:	add    BYTE PTR [rax],al
   140013153:	add    BYTE PTR [rax],al
   140013155:	add    BYTE PTR [rax],al
   140013157:	add    BYTE PTR [rbx+0x0],dh
   14001315a:	push   0x77006f00
	...
   140013167:	add    BYTE PTR [rax+rax*1+0x65],dh
   14001316b:	add    BYTE PTR [rax+0x0],bh
   14001316e:	je     0x140013170
   140013170:	add    BYTE PTR [rax],al
   140013172:	add    BYTE PTR [rax],al
   140013174:	sub    al,0x0
   140013176:	add    BYTE PTR [rax],al
   140013178:	(bad)  
   140013179:	add    BYTE PTR [rax+0x0],dh
   14001317c:	jo     0x14001317e
   14001317e:	push   0x73006f00
   140013183:	add    BYTE PTR [rax+rax*1+0x63],dh
   140013187:	add    BYTE PTR [rdi+0x0],ch
   14001318a:	outs   dx,BYTE PTR ds:[rsi]
   14001318b:	add    BYTE PTR [rsi+0x0],ah
   14001318e:	imul   eax,DWORD PTR [rax],0x67
   140013194:	add    BYTE PTR [rax],al
   140013196:	add    BYTE PTR [rax],al
   140013198:	(bad)  
   140013199:	add    BYTE PTR [rax+rax*1+0x6c],ch
   14001319d:	add    BYTE PTR [rax],al
   14001319f:	add    BYTE PTR [rax],dh
   1400131a1:	cmp    dh,BYTE PTR [rbx+0xc]
   1400131a4:	sbb    al,0x2a
   1400131a6:	(bad)  
   1400131a7:	adc    DWORD PTR [rbp+0xaa00e5],ebp
   1400131ad:	rex.R ja 0x1400131ed
   1400131b0:	ins    DWORD PTR es:[rdi],dx
   1400131b1:	add    BYTE PTR [rbp+0x0],ah
   1400131b4:	jae    0x1400131b6
   1400131b6:	jae    0x1400131b8
   1400131b8:	(bad)  
   1400131b9:	add    BYTE PTR [rdi+0x0],ah
   1400131bc:	add    BYTE PTR gs:[rax],al
   1400131bf:	add    BYTE PTR [rip+0x73007700],ah        # 0x1b301a8c5
   1400131c5:	add    BYTE PTR [rdx],bh
   1400131c7:	add    BYTE PTR [rdx],ah
   1400131c9:	add    BYTE PTR [rip+0x73007700],ah        # 0x1b301a8cf
   1400131cf:	add    BYTE PTR [rdx],ah
   1400131d1:	add    BYTE PTR [rdx],cl
   1400131d3:	add    BYTE PTR [rax],al
   1400131d5:	add    BYTE PTR [rax],al
   1400131d7:	add    BYTE PTR [rax],ch
   1400131d9:	add    BYTE PTR [rax],al
   1400131db:	add    BYTE PTR [rax],al
   1400131dd:	add    BYTE PTR [rax],al
   1400131df:	add    BYTE PTR [rbp+0x0],dl
   1400131e2:	outs   dx,BYTE PTR ds:[rsi]
   1400131e3:	add    BYTE PTR [rax+rax*1+0x6f],ch
   1400131e7:	add    BYTE PTR [rbx+0x0],ah
   1400131ea:	imul   eax,DWORD PTR [rax],0x65
   1400131ed:	add    BYTE PTR [rax+rax*1+0x0],ah
   1400131f1:	add    BYTE PTR [rax],al
   1400131f3:	add    BYTE PTR [rax],al
   1400131f5:	add    BYTE PTR [rax],al
   1400131f7:	add    BYTE PTR [rax+rax*1+0x6f],cl
   1400131fb:	add    BYTE PTR [rbx+0x0],ah
   1400131fe:	imul   eax,DWORD PTR [rax],0x65
   140013201:	add    BYTE PTR [rax+rax*1+0x0],ah
   140013205:	add    BYTE PTR [rax],al
   140013207:	add    BYTE PTR [rbp+0x0],dl
   14001320a:	outs   dx,BYTE PTR ds:[rsi]
   14001320b:	add    BYTE PTR [rbx+0x0],dh
   14001320e:	movsxd eax,DWORD PTR [rax]
   140013210:	push   0x6d006500
   140013215:	add    BYTE PTR [rcx+0x0],ah
   140013218:	je     0x14001321a
   14001321a:	imul   eax,DWORD PTR [rax],0x65007a
   140013220:	add    BYTE PTR fs:[rcx+0x0],al
   140013224:	je     0x140013226
   140013226:	je     0x140013228
   140013228:	jb     0x14001322a
   14001322a:	imul   eax,DWORD PTR [rax],0x750062
   140013230:	je     0x140013232
   140013232:	add    BYTE PTR gs:[rbx+0x0],dh
   140013236:	add    BYTE PTR [rax],al
   140013238:	push   rdx
   140013239:	add    BYTE PTR [rbp+0x0],ah
   14001323c:	jno    0x14001323e
   14001323e:	jne    0x140013240
   140013240:	imul   eax,DWORD PTR [rax],0x650072
   140013246:	add    BYTE PTR fs:[rax],al
   140013249:	add    BYTE PTR [rax],al
   14001324b:	add    BYTE PTR [rcx],ch
   14001324d:	add    BYTE PTR [rax],al
   14001324f:	add    BYTE PTR [rbx+0x0],dl
   140013252:	je     0x140013254
   140013254:	jb     0x140013256
   140013256:	imul   eax,DWORD PTR [rax],0x67006e
   14001325c:	add    BYTE PTR [rax],al
   14001325e:	add    BYTE PTR [rax],al
   140013260:	rex.WB add BYTE PTR [r14+0x0],bpl
   140013264:	je     0x140013266
   140013266:	add    BYTE PTR [rax],al
   140013268:	push   rbp
   140013269:	add    BYTE PTR [rcx+0x0],cl
   14001326c:	outs   dx,BYTE PTR ds:[rsi]
   14001326d:	add    BYTE PTR [rax+rax*1+0x0],dh
   140013271:	add    BYTE PTR [rax],al
   140013273:	add    BYTE PTR [rax],al
   140013275:	add    BYTE PTR [rax],al
   140013277:	add    BYTE PTR [rcx+0x0],cl
   14001327a:	outs   dx,BYTE PTR ds:[rsi]
   14001327b:	add    BYTE PTR [rax+rax*1+0x36],dh
   14001327f:	add    BYTE PTR [rax+rax*1],dh
   140013282:	add    BYTE PTR [rax],al
   140013284:	add    BYTE PTR [rax],al
   140013286:	add    BYTE PTR [rax],al
   140013288:	push   rbp
   140013289:	add    BYTE PTR [rcx+0x0],cl
   14001328c:	outs   dx,BYTE PTR ds:[rsi]
   14001328d:	add    BYTE PTR [rax+rax*1+0x36],dh
   140013291:	add    BYTE PTR [rax+rax*1],dh
   140013294:	add    BYTE PTR [rax],al
   140013296:	add    BYTE PTR [rax],al
   140013298:	rex.X add BYTE PTR [rdi+0x0],bpl
   14001329c:	outs   dx,DWORD PTR ds:[rsi]
   14001329d:	add    BYTE PTR [rax+rax*1+0x0],ch
   1400132a1:	add    BYTE PTR [rax],al
   1400132a3:	add    BYTE PTR [rax],al
   1400132a5:	add    BYTE PTR [rax],al
   1400132a7:	add    BYTE PTR [rsi+0x0],al
   1400132aa:	ins    BYTE PTR es:[rdi],dx
   1400132ab:	add    BYTE PTR [rcx+0x0],ah
   1400132ae:	add    BYTE PTR [ebx+0x0],dh
   1400132b2:	add    BYTE PTR [rax],al
   1400132b4:	add    BYTE PTR [rax],al
   1400132b6:	add    BYTE PTR [rax],al
   1400132b8:	add    BYTE PTR [r14+0x0],r13b
   1400132bc:	jne    0x1400132be
   1400132be:	ins    DWORD PTR es:[rdi],dx
	...
   1400132c7:	add    BYTE PTR [rax+rax*1+0x69],dl
   1400132cb:	add    BYTE PTR [rbp+0x0],ch
   1400132ce:	add    BYTE PTR gs:[rbx+0x0],dl
   1400132d2:	jo     0x1400132d4
   1400132d4:	(bad)  
   1400132d5:	add    BYTE PTR [rsi+0x0],ch
	...
   1400132e0:	add    BYTE PTR [rax+r8*1+0x6f],bpl
   1400132e5:	add    BYTE PTR [rdx+0x0],ah
	...
   1400132f0:	push   rbp
   1400132f1:	add    BYTE PTR [rsi+0x0],ch
   1400132f4:	imul   eax,DWORD PTR [rax],0x6e
   1400132f7:	add    BYTE PTR [rdi+0x0],ch
   1400132fa:	ja     0x1400132fc
   1400132fc:	outs   dx,BYTE PTR ds:[rsi]
   1400132fd:	add    BYTE PTR [rax],al
   1400132ff:	add    BYTE PTR [rax+rax*1],ch
   140013302:	rex.WB add BYTE PTR [r14+0x0],bpl
   140013306:	push   0x72006500
   14001330b:	add    BYTE PTR [rcx+0x0],ch
   14001330e:	je     0x140013310
   140013310:	add    BYTE PTR gs:[rax+rax*1+0x0],ah
   140013315:	add    BYTE PTR [rax],al
   140013317:	add    BYTE PTR [rax+rax*1],ch
   14001331a:	push   rdx
   14001331b:	add    BYTE PTR [rbp+0x0],ah
   14001331e:	jno    0x140013320
   140013320:	jne    0x140013322
   140013322:	imul   eax,DWORD PTR [rax],0x650072
   140013328:	add    BYTE PTR fs:[rax],al
   14001332b:	add    BYTE PTR [rax],al
   14001332d:	add    BYTE PTR [rax],al
   14001332f:	add    BYTE PTR [rax+rax*1],ch
   140013332:	push   rbp
   140013333:	add    BYTE PTR [rsi+0x0],ch
   140013336:	imul   eax,DWORD PTR [rax],0x750071
   14001333c:	add    BYTE PTR gs:[rbx+0x0],cl
   140013340:	add    BYTE PTR gs:[rcx+0x0],bh
   140013344:	add    BYTE PTR [rax],al
   140013346:	add    BYTE PTR [rax],al
   140013348:	sub    al,0x0
   14001334a:	rex.XB add BYTE PTR [r15+0x0],bpl
   14001334e:	ins    DWORD PTR es:[rdi],dx
   14001334f:	add    BYTE PTR [rdx+0x0],ah
   140013352:	imul   eax,DWORD PTR [rax],0x65006e
   140013358:	add    BYTE PTR fs:[rbx+0x0],cl
   14001335c:	add    BYTE PTR gs:[rcx+0x0],bh
	...
   140013368:	sub    al,0x0
   14001336a:	rex.WRX add BYTE PTR [rdi+0x0],r13b
   14001336e:	push   rbx
   14001336f:	add    BYTE PTR [rbx+0x0],ah
   140013372:	push   0x6d006500
   140013377:	add    BYTE PTR [rcx+0x0],ah
   14001337a:	add    BYTE PTR [rax],al
   14001337c:	pop    rbx
   14001337d:	add    BYTE PTR [rax],al
   14001337f:	add    BYTE PTR [rbp+0x0],bl
   140013382:	add    BYTE PTR [rax],al
   140013384:	add    BYTE PTR [rax],al
   140013386:	add    BYTE PTR [rax],al
   140013388:	and    eax,0x73007700
   14001338d:	add    BYTE PTR [rax],ah
   14001338f:	add    BYTE PTR [rip+0x73007700],ah        # 0x1b301aa95
   140013395:	add    BYTE PTR [rdx],cl
	...
   14001339f:	add    BYTE PTR [rip+0x73007700],ah        # 0x1b301aaa5
   1400133a5:	add    BYTE PTR [rdx],bh
   1400133a7:	add    BYTE PTR [rdx],ah
   1400133a9:	add    BYTE PTR [rip+0x73007700],ah        # 0x1b301aaaf
   1400133af:	add    BYTE PTR [rdx],ah
   1400133b1:	add    BYTE PTR [rax],ah
   1400133b3:	add    BYTE PTR [rip+0x73007700],ah        # 0x1b301aab9
   1400133b9:	add    BYTE PTR [rdx],cl
   1400133bb:	add    BYTE PTR [rax],al
   1400133bd:	add    BYTE PTR [rax],al
   1400133bf:	add    BYTE PTR [rax+rax*1],bh
   1400133c2:	and    eax,0x73007700
   1400133c7:	add    BYTE PTR [rsi],bh
   1400133c9:	add    BYTE PTR [rdx],cl
   1400133cb:	add    BYTE PTR [rax],al
   1400133cd:	add    BYTE PTR [rax],al
   1400133cf:	add    BYTE PTR [rax+rax*1],bh
   1400133d2:	(bad)  
   1400133d3:	add    BYTE PTR [rip+0x73007700],ah        # 0x1b301aad9
   1400133d9:	add    BYTE PTR [rsi],bh
   1400133db:	add    BYTE PTR [rdx],cl
   1400133dd:	add    BYTE PTR [rax],al
   1400133df:	add    BYTE PTR [rax+rax*1],bh
   1400133e2:	add    BYTE PTR [rax],al
   1400133e4:	cmp    eax,0x2200
   1400133e9:	add    BYTE PTR [rax],al
   1400133eb:	add    BYTE PTR [rdx],ah
   1400133ed:	add    BYTE PTR [rax],al
   1400133ef:	add    BYTE PTR [rsi],bh
   1400133f1:	add    BYTE PTR [rax],al
   1400133f3:	add    BYTE PTR [rax],al
   1400133f5:	add    BYTE PTR [rax],al
   1400133f7:	add    BYTE PTR [rax],ah
   1400133f9:	add    BYTE PTR [rdi],ch
   1400133fb:	add    BYTE PTR [rsi],bh
   1400133fd:	add    BYTE PTR [rax],al
   1400133ff:	add    BYTE PTR [rax],ah
   140013401:	add    BYTE PTR [rax],ch
   140013403:	add    BYTE PTR [rax],al
   140013405:	add    BYTE PTR [rax],al
   140013407:	add    BYTE PTR [rax+rax*1],ch
   14001340a:	and    BYTE PTR [rax],al
   14001340c:	add    BYTE PTR [rax],al
   14001340e:	add    BYTE PTR [rax],al
   140013410:	and    eax,0x73007700
   140013415:	add    BYTE PTR [rip+0x73007700],ah        # 0x1b301ab1b
   14001341b:	add    BYTE PTR [rdx],bh
   14001341d:	add    BYTE PTR [rip+0x73007700],ah        # 0x1b301ab23
   140013423:	add    BYTE PTR [rax],al
   140013425:	add    BYTE PTR [rax],al
   140013427:	add    BYTE PTR [rax],ah
   140013429:	add    BYTE PTR [rcx],ch
   14001342b:	add    BYTE PTR [rdx],cl
   14001342d:	add    BYTE PTR [rax],al
   14001342f:	add    BYTE PTR [rax],ah
   140013431:	add    BYTE PTR [rax],ah
   140013433:	add    BYTE PTR [rax],al
   140013435:	add    BYTE PTR [rax],al
   140013437:	add    BYTE PTR [rcx+0x0],ah
   14001343a:	jo     0x14001343c
   14001343c:	jo     0x14001343e
   14001343e:	movsxd eax,DWORD PTR [rax]
   140013440:	ins    DWORD PTR es:[rdi],dx
   140013441:	add    BYTE PTR [rax+rax*1+0x0],ah
   140013445:	add    BYTE PTR [rax],al
   140013447:	add    BYTE PTR [rsi],ch
   140013449:	add    BYTE PTR [rax],al
   14001344b:	add    BYTE PTR [rax],al
   14001344d:	add    BYTE PTR [rax],al
   14001344f:	add    BYTE PTR [rax+0x0],bl
   140013452:	ins    DWORD PTR es:[rdi],dx
   140013453:	add    BYTE PTR [rax+rax*1+0x4c],ch
   140013457:	add    BYTE PTR [rcx+0x0],ch
   14001345a:	je     0x14001345c
   14001345c:	add    BYTE PTR gs:[rsi],ch
   14001345f:	add    BYTE PTR [rax+rax*1+0x6c],ah
   140013463:	add    BYTE PTR [rax+rax*1+0x0],ch
   140013467:	add    BYTE PTR [rbx+0x72],al
   14001346a:	gs (bad) 
   14001346c:	je     0x1400134d3
   14001346e:	pop    rax
   14001346f:	ins    DWORD PTR es:[rdi],dx
   140013470:	ins    BYTE PTR es:[rdi],dx
   140013471:	push   rdx
   140013472:	gs (bad) 
   140013474:	fs gs jb 0x140013478
   140013478:	rex.XB jb 0x1400134e0
   14001347b:	(bad)  
   14001347c:	je     0x1400134e3
   14001347e:	pop    rax
   14001347f:	ins    DWORD PTR es:[rdi],dx
   140013480:	ins    BYTE PTR es:[rdi],dx
   140013481:	push   rdi
   140013482:	jb     0x1400134ed
   140013484:	je     0x1400134eb
   140013486:	jb     0x140013488
   140013488:	cmp    esp,0x709d7279
   14001348e:	xchg   ebp,eax
   14001348f:	mov    sil,0x3d
   140013492:	imul   edi,esi,0x30900d4b
   140013498:	and    BYTE PTR [rax],al
   14001349a:	and    BYTE PTR [rax],al
   14001349c:	and    BYTE PTR [rax],al
   14001349e:	and    BYTE PTR [rax],al
	...
   1400134a8:	mov    ah,bh
   1400134aa:	jns    0x14001351e
   1400134ac:	popf   
   1400134ad:	jo     0x140013444
   1400134af:	mov    sil,0x3d
   1400134b2:	imul   edi,esi,0x30900d4b
   1400134b8:	add    eax,0x9288d96a
   1400134bd:	icebp  
   1400134be:	(bad)  
   1400134bf:	adc    DWORD PTR [rsi-0x69bfffa1],esp
   1400134c5:	xor    dl,BYTE PTR [rcx-0x1b]
   1400134c8:	cmp    DWORD PTR [rdi+0x7b362933],0xeb211d2
   1400134d2:	add    al,al
   1400134d4:	rex.WRXB cdqe 
   1400134d6:	ds (bad) 
	...
   1400134e0:	rol    BYTE PTR [rax],0x0
   1400134e3:	add    BYTE PTR [rax],al
   1400134e5:	add    BYTE PTR [rax],al
   1400134e7:	rex.RX add BYTE PTR [rax],r8b
   1400134ea:	add    BYTE PTR [rax],al
   1400134ec:	add    DWORD PTR [rax],eax
   1400134ee:	add    BYTE PTR [rax],al
   1400134f0:	or     al,BYTE PTR [rax]
   1400134f2:	add    BYTE PTR [rax],al
   1400134f4:	add    BYTE PTR fs:[rax],al
	...
   1400134ff:	add    BYTE PTR [rdx-0x48],dl
   140013502:	(bad)  
   140013503:	test   ebx,ebp
   140013505:	push   rcx
   140013506:	lock (bad) 
   140013508:	loope  0x140013584
   14001350a:	adc    al,0xae
   14001350c:	rex.RXB loope 0x1400134fd
   14001350f:	(bad)  
   140013510:	jnp    0x140013526
   140013512:	scas   al,BYTE PTR es:[rdi]
   140013513:	rex.RXB loope 0x140013590
   140013516:	in     al,dx
   140013517:	(bad)  
   140013518:	or     dl,bh
   14001351a:	movabs ds:0x6666663ff10a3d70,eax
   140013523:	data16 data16 data16 lock (bad) 
   140013528:	xlat   BYTE PTR ds:[rbx]
   140013529:	movabs ds:0xae143ff1d70a3d70,eax
   140013532:	rex.RXB loope 0x1400135af
   140013535:	adc    al,0xee
   140013537:	(bad)  
   140013538:	xlat   BYTE PTR ds:[rbx]
   140013539:	movabs ds:0xcccd3fefd70a3d70,eax
   140013542:	int3   
   140013543:	int3   
   140013544:	int3   
   140013545:	int3   
   140013546:	lock (bad) 
   140013548:	rex.W loope 0x1400135c5
   14001354b:	adc    al,0xae
   14001354d:	rex.RXB icebp 
   14001354f:	(bad)  
   140013550:	rex.W loope 0x1400135cd
   140013553:	adc    al,0xae
   140013555:	rex.RXB in eax,dx
   140013557:	(bad)  
   140013558:	pop    rsp
   140013559:	pop    rdx
   14001355b:	cmc    
   14001355c:	sub    BYTE PTR [rdi+rbp*8+0x3f],bl
   140013560:	sub    DWORD PTR [rdi+rcx*4-0x3e],ebx
   140013564:	cmc    
   140013565:	sub    al,dh
   140013567:	(bad)  
	...
   140013570:	rex.WRB add BYTE PTR [r9+0x0],r12b
   140013574:	js     0x140013576
   140013576:	imul   eax,DWORD PTR [rax],0x75006d
   14001357c:	ins    DWORD PTR es:[rdi],dx
   14001357d:	add    BYTE PTR [rax],ah
   14001357f:	add    BYTE PTR [rbx+0x0],dh
   140013582:	jo     0x140013584
   140013584:	imul   eax,DWORD PTR [rax],0x73006e
   14001358a:	and    BYTE PTR [rax],al
   14001358c:	imul   eax,DWORD PTR [rax],0x76006e
   140013592:	(bad)  
   140013593:	add    BYTE PTR [rax+rax*1+0x69],ch
   140013597:	add    BYTE PTR [rax+rax*1+0x20],ah
   14001359b:	add    BYTE PTR [rcx+0x0],ch
   14001359e:	outs   dx,BYTE PTR ds:[rsi]
   14001359f:	add    BYTE PTR [rax],ah
   1400135a1:	add    BYTE PTR [rbx+0x0],ah
   1400135a4:	outs   dx,DWORD PTR ds:[rsi]
   1400135a5:	add    BYTE PTR [rsi+0x0],ch
   1400135a8:	jae    0x1400135aa
   1400135aa:	je     0x1400135ac
   1400135ac:	jb     0x1400135ae
   1400135ae:	jne    0x1400135b0
   1400135b0:	movsxd eax,DWORD PTR [rax]
   1400135b2:	je     0x1400135b4
   1400135b4:	outs   dx,DWORD PTR ds:[rsi]
   1400135b5:	add    BYTE PTR [rdx+0x0],dh
   1400135b8:	and    BYTE PTR [rax],al
   1400135ba:	data16 add BYTE PTR [rdi+0x0],ch
   1400135be:	jb     0x1400135c0
   1400135c0:	and    BYTE PTR [rax],al
   1400135c2:	rex.XB add BYTE PTR [r11+0x0],dl
   1400135c6:	push   0x72006100
   1400135cb:	add    BYTE PTR [rbp+0x0],ah
   1400135ce:	ins    BYTE PTR es:[rdi],dx
   1400135cf:	add    BYTE PTR [rdi+0x0],ch
   1400135d2:	movsxd eax,DWORD PTR [rax]
   1400135d4:	imul   eax,DWORD PTR [rax],0x0
	...
   1400135df:	add    BYTE PTR [rbp+0x0],cl
   1400135e2:	(bad)  
   1400135e3:	add    BYTE PTR [rax+0x0],bh
   1400135e6:	imul   eax,DWORD PTR [rax],0x75006d
   1400135ec:	ins    DWORD PTR es:[rdi],dx
   1400135ed:	add    BYTE PTR [rax],ah
   1400135ef:	add    BYTE PTR [rbx+0x0],dh
   1400135f2:	push   0x72006100
   1400135f7:	add    BYTE PTR [rbp+0x0],ah
   1400135fa:	and    BYTE PTR [rax],al
   1400135fc:	imul   eax,DWORD PTR [rax],0x76006e
   140013602:	(bad)  
   140013603:	add    BYTE PTR [rax+rax*1+0x69],ch
   140013607:	add    BYTE PTR [rax+rax*1+0x20],ah
   14001360b:	add    BYTE PTR [rcx+0x0],ch
   14001360e:	outs   dx,BYTE PTR ds:[rsi]
   14001360f:	add    BYTE PTR [rax],ah
   140013611:	add    BYTE PTR [rbx+0x0],ah
   140013614:	outs   dx,DWORD PTR ds:[rsi]
   140013615:	add    BYTE PTR [rsi+0x0],ch
   140013618:	jae    0x14001361a
   14001361a:	je     0x14001361c
   14001361c:	jb     0x14001361e
   14001361e:	jne    0x140013620
   140013620:	movsxd eax,DWORD PTR [rax]
   140013622:	je     0x140013624
   140013624:	outs   dx,DWORD PTR ds:[rsi]
   140013625:	add    BYTE PTR [rdx+0x0],dh
   140013628:	and    BYTE PTR [rax],al
   14001362a:	data16 add BYTE PTR [rdi+0x0],ch
   14001362e:	jb     0x140013630
   140013630:	and    BYTE PTR [rax],al
   140013632:	rex.XB add BYTE PTR [r11+0x0],dl
   140013636:	push   0x72006100
   14001363b:	add    BYTE PTR [rbp+0x0],ah
   14001363e:	ins    BYTE PTR es:[rdi],dx
   14001363f:	add    BYTE PTR [rdi+0x0],ch
   140013642:	movsxd eax,DWORD PTR [rax]
   140013644:	imul   eax,DWORD PTR [rax],0x0
	...
   14001364f:	add    BYTE PTR [rbx+0x0],al
   140013652:	jb     0x140013654
   140013654:	add    BYTE PTR gs:[rcx+0x0],ah
   140013658:	je     0x14001365a
   14001365a:	add    BYTE PTR gs:[rax],ah
   14001365d:	add    BYTE PTR [rbx+0x0],dh
   140013660:	add    BYTE PTR gs:[rbp+0x0],ch
   140013664:	(bad)  
   140013665:	add    BYTE PTR [rax+0x0],dh
   140013668:	push   0x72006f00
   14001366d:	add    BYTE PTR [rbp+0x0],ah
   140013670:	and    BYTE PTR [rax],al
   140013672:	imul   eax,DWORD PTR [rax],0x20006e
   140013678:	movsxd eax,DWORD PTR [rax]
   14001367a:	outs   dx,DWORD PTR ds:[rsi]
   14001367b:	add    BYTE PTR [rsi+0x0],ch
   14001367e:	jae    0x140013680
   140013680:	je     0x140013682
   140013682:	jb     0x140013684
   140013684:	jne    0x140013686
   140013686:	movsxd eax,DWORD PTR [rax]
   140013688:	je     0x14001368a
   14001368a:	outs   dx,DWORD PTR ds:[rsi]
   14001368b:	add    BYTE PTR [rdx+0x0],dh
   14001368e:	and    BYTE PTR [rax],al
   140013690:	data16 add BYTE PTR [rdi+0x0],ch
   140013694:	jb     0x140013696
   140013696:	and    BYTE PTR [rax],al
   140013698:	rex.XB add BYTE PTR [r11+0x0],dl
   14001369c:	push   0x72006100
   1400136a1:	add    BYTE PTR [rbp+0x0],ah
   1400136a4:	ins    BYTE PTR es:[rdi],dx
   1400136a5:	add    BYTE PTR [rdi+0x0],ch
   1400136a8:	movsxd eax,DWORD PTR [rax]
   1400136aa:	imul   eax,DWORD PTR [rax],0x0
   1400136ad:	add    BYTE PTR [rax],al
   1400136af:	add    BYTE PTR [rdi+0x0],dl
   1400136b2:	(bad)  
   1400136b3:	add    BYTE PTR [rbx+0x0],ch
   1400136b6:	add    BYTE PTR gs:[rbp+0x0],dh
   1400136ba:	jo     0x1400136bc
   1400136bc:	and    BYTE PTR [rax],al
   1400136be:	data16 add BYTE PTR [rcx+0x0],ah
   1400136c2:	imul   eax,DWORD PTR [rax],0x65006c
   1400136c8:	add    BYTE PTR fs:[rax],ah
   1400136cb:	add    BYTE PTR [rcx+0x0],ch
   1400136ce:	outs   dx,BYTE PTR ds:[rsi]
   1400136cf:	add    BYTE PTR [rax],ah
   1400136d1:	add    BYTE PTR [rdx+0x0],dl
   1400136d4:	add    BYTE PTR gs:[rax+rax*1+0x65],ch
   1400136d9:	add    BYTE PTR [rcx+0x0],ah
   1400136dc:	jae    0x1400136de
   1400136de:	add    BYTE PTR gs:[rax+rax*1+0x6f],cl
   1400136e3:	add    BYTE PTR [rbx+0x0],ah
   1400136e6:	imul   eax,DWORD PTR [rax],0x28
   1400136e9:	add    BYTE PTR [rcx],ch
   1400136eb:	add    BYTE PTR [rax],al
   1400136ed:	add    BYTE PTR [rax],al
   1400136ef:	add    BYTE PTR [rbx+0x0],al
   1400136f2:	ins    BYTE PTR es:[rdi],dx
   1400136f3:	add    BYTE PTR [rdi+0x0],ch
   1400136f6:	jae    0x1400136f8
   1400136f8:	add    BYTE PTR gs:[rax],ah
   1400136fb:	add    BYTE PTR [rbx+0x0],dh
   1400136fe:	add    BYTE PTR gs:[rbp+0x0],ch
   140013702:	(bad)  
   140013703:	add    BYTE PTR [rax+0x0],dh
   140013706:	push   0x72006f00
   14001370b:	add    BYTE PTR [rbp+0x0],ah
   14001370e:	and    BYTE PTR [rax],al
   140013710:	imul   eax,DWORD PTR [rax],0x20006e
   140013716:	add    BYTE PTR fs:[rbp+0x0],ah
   14001371a:	jae    0x14001371c
   14001371c:	je     0x14001371e
   14001371e:	jb     0x140013720
   140013720:	jne    0x140013722
   140013722:	movsxd eax,DWORD PTR [rax]
   140013724:	je     0x140013726
   140013726:	outs   dx,DWORD PTR ds:[rsi]
   140013727:	add    BYTE PTR [rdx+0x0],dh
   14001372a:	and    BYTE PTR [rax],al
   14001372c:	data16 add BYTE PTR [rdi+0x0],ch
   140013730:	jb     0x140013732
   140013732:	and    BYTE PTR [rax],al
   140013734:	rex.XB add BYTE PTR [r11+0x0],dl
   140013738:	push   0x72006100
   14001373d:	add    BYTE PTR [rbp+0x0],ah
   140013740:	ins    BYTE PTR es:[rdi],dx
   140013741:	add    BYTE PTR [rdi+0x0],ch
   140013744:	movsxd eax,DWORD PTR [rax]
   140013746:	imul   eax,DWORD PTR [rax],0x0
   140013749:	add    BYTE PTR [rax],al
   14001374b:	add    BYTE PTR [rax],al
   14001374d:	add    BYTE PTR [rax],al
   14001374f:	add    BYTE PTR [rip+0x3a703830],ah        # 0x17a716f85
   140013755:	cmp    bl,BYTE PTR [rbx+0x49]
   140013758:	outs   dx,BYTE PTR ds:[rsi]
   140013759:	gs je  0x14001379d
   14001375c:	movsxd esi,DWORD PTR [rcx+0x75]
   14001375f:	imul   esi,DWORD PTR [rdx+0x65],0x6f736552
   140013766:	jne    0x1400137da
   140013768:	movsxd esp,DWORD PTR [rbp+0x53]
   14001376b:	push   0x64657261
   140013770:	pop    rbp
   140013771:	and    BYTE PTR [rbx+0x65],dl
   140013774:	ins    DWORD PTR es:[rdi],dx
   140013775:	and    BYTE PTR [rcx+rbp*2+0x6d],dh
   140013779:	outs   dx,DWORD PTR gs:[rsi]
   14001377b:	jne    0x1400137f1
   14001377d:	or     al,BYTE PTR [rax]
   14001377f:	add    BYTE PTR [rip+0x3a703830],ah        # 0x17a716fb5
   140013785:	cmp    bl,BYTE PTR [rbx+0x49]
   140013788:	outs   dx,BYTE PTR ds:[rsi]
   140013789:	gs je  0x1400137cd
   14001378c:	movsxd esi,DWORD PTR [rcx+0x75]
   14001378f:	imul   esi,DWORD PTR [rdx+0x65],0x6f736552
   140013796:	jne    0x14001380a
   140013798:	movsxd esp,DWORD PTR [rbp+0x53]
   14001379b:	push   0x64657261
   1400137a0:	pop    rbp
   1400137a1:	and    BYTE PTR [rdx+0x65],dl
   1400137a4:	sub    eax,0x74696157
   1400137a9:	imul   ebp,DWORD PTR [rsi+0x67],0xa
   1400137b0:	and    eax,0x3a703830
   1400137b5:	cmp    bl,BYTE PTR [rbx+0x49]
   1400137b8:	outs   dx,BYTE PTR ds:[rsi]
   1400137b9:	gs je  0x1400137fd
   1400137bc:	movsxd esi,DWORD PTR [rcx+0x75]
   1400137bf:	imul   esi,DWORD PTR [rdx+0x65],0x6f736552
   1400137c6:	jne    0x14001383a
   1400137c8:	movsxd esp,DWORD PTR [rbp+0x53]
   1400137cb:	push   0x64657261
   1400137d0:	pop    rbp
   1400137d1:	and    BYTE PTR [rdi+0x61],dl
   1400137d4:	imul   esi,DWORD PTR [rsi+rax*2+0x6f],0x6e695372
   1400137dc:	ins    BYTE PTR es:[edi],dx
   1400137de:	gs rex.WRXB (bad) 
   1400137e1:	push   0x65
   1400137e3:	movsxd esi,DWORD PTR [rax+riz*1+0x46]
   1400137e7:	(bad)  
   1400137e8:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0xa
   1400137f0:	and    eax,0x3a703830
   1400137f5:	cmp    bl,BYTE PTR [rbx+0x49]
   1400137f8:	outs   dx,BYTE PTR ds:[rsi]
   1400137f9:	gs je  0x14001383d
   1400137fc:	movsxd esi,DWORD PTR [rcx+0x75]
   1400137ff:	imul   esi,DWORD PTR [rdx+0x65],0x6f736552
   140013806:	jne    0x14001387a
   140013808:	movsxd esp,DWORD PTR [rbp+0x45]
   14001380b:	js     0x140013870
   14001380d:	ins    BYTE PTR es:[rdi],dx
   14001380e:	jne    0x140013883
   140013810:	imul   esi,DWORD PTR [rsi+0x65],0x6553205d
   140013817:	ins    DWORD PTR es:[rdi],dx
   140013818:	and    BYTE PTR [rcx+rbp*2+0x6d],dl
   14001381c:	outs   dx,DWORD PTR gs:[rsi]
   14001381e:	jne    0x140013894
   140013820:	or     al,BYTE PTR [rax]
   140013822:	add    BYTE PTR [rax],al
   140013824:	add    BYTE PTR [rax],al
   140013826:	add    BYTE PTR [rax],al
   140013828:	and    eax,0x3a703830
   14001382d:	cmp    bl,BYTE PTR [rbx+0x49]
   140013830:	outs   dx,BYTE PTR ds:[rsi]
   140013831:	gs je  0x140013875
   140013834:	movsxd esi,DWORD PTR [rcx+0x75]
   140013837:	imul   esi,DWORD PTR [rdx+0x65],0x6f736552
   14001383e:	jne    0x1400138b2
   140013840:	movsxd esp,DWORD PTR [rbp+0x45]
   140013843:	js     0x1400138a8
   140013845:	ins    BYTE PTR es:[rdi],dx
   140013846:	jne    0x1400138bb
   140013848:	imul   esi,DWORD PTR [rsi+0x65],0x6552205d
   14001384f:	sub    eax,0x74696157
   140013854:	imul   ebp,DWORD PTR [rsi+0x67],0xa
   14001385b:	add    BYTE PTR [rax],al
   14001385d:	add    BYTE PTR [rax],al
   14001385f:	add    BYTE PTR [rip+0x3a703830],ah        # 0x17a717095
   140013865:	cmp    bl,BYTE PTR [rbx+0x49]
   140013868:	outs   dx,BYTE PTR ds:[rsi]
   140013869:	gs je  0x1400138ad
   14001386c:	movsxd esi,DWORD PTR [rcx+0x75]
   14001386f:	imul   esi,DWORD PTR [rdx+0x65],0x6f736552
   140013876:	jne    0x1400138ea
   140013878:	movsxd esp,DWORD PTR [rbp+0x45]
   14001387b:	js     0x1400138e0
   14001387d:	ins    BYTE PTR es:[rdi],dx
   14001387e:	jne    0x1400138f3
   140013880:	imul   esi,DWORD PTR [rsi+0x65],0x6157205d
   140013887:	imul   esi,DWORD PTR [rsi+rax*2+0x6f],0x6e695372
   14001388f:	ins    BYTE PTR es:[edi],dx
   140013891:	gs rex.WRXB (bad) 
   140013894:	push   0x65
   140013896:	movsxd esi,DWORD PTR [rax+riz*1+0x46]
   14001389a:	(bad)  
   14001389b:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0xa
   1400138a3:	add    BYTE PTR [rax],al
   1400138a5:	add    BYTE PTR [rax],al
   1400138a7:	add    BYTE PTR [rip+0x3a703830],ah        # 0x17a7170dd
   1400138ad:	cmp    bl,BYTE PTR [rbx+0x49]
   1400138b0:	outs   dx,BYTE PTR ds:[rsi]
   1400138b1:	gs je  0x1400138f7
   1400138b4:	outs   dx,DWORD PTR ds:[rsi]
   1400138b5:	outs   dx,BYTE PTR ds:[rsi]
   1400138b6:	jbe    0x14001391d
   1400138b8:	jb     0x14001392e
   1400138ba:	push   rbx
   1400138bb:	push   0x64657261
   1400138c0:	push   rsp
   1400138c1:	outs   dx,DWORD PTR ds:[rsi]
   1400138c2:	rex.RB js 0x140013928
   1400138c5:	ins    BYTE PTR es:[rdi],dx
   1400138c6:	jne    0x14001393b
   1400138c8:	imul   esi,DWORD PTR [rsi+0x65],0x6553205d
   1400138cf:	ins    DWORD PTR es:[rdi],dx
   1400138d0:	and    BYTE PTR [rcx+rbp*2+0x6d],dh
   1400138d4:	outs   dx,DWORD PTR gs:[rsi]
   1400138d6:	jne    0x14001394c
   1400138d8:	or     al,BYTE PTR [rax]
   1400138da:	add    BYTE PTR [rax],al
   1400138dc:	add    BYTE PTR [rax],al
   1400138de:	add    BYTE PTR [rax],al
   1400138e0:	and    eax,0x3a703830
   1400138e5:	cmp    bl,BYTE PTR [rbx+0x49]
   1400138e8:	outs   dx,BYTE PTR ds:[rsi]
   1400138e9:	gs je  0x14001392f
   1400138ec:	outs   dx,DWORD PTR ds:[rsi]
   1400138ed:	outs   dx,BYTE PTR ds:[rsi]
   1400138ee:	jbe    0x140013955
   1400138f0:	jb     0x140013966
   1400138f2:	push   rbx
   1400138f3:	push   0x64657261
   1400138f8:	push   rsp
   1400138f9:	outs   dx,DWORD PTR ds:[rsi]
   1400138fa:	rex.RB js 0x140013960
   1400138fd:	ins    BYTE PTR es:[rdi],dx
   1400138fe:	jne    0x140013973
   140013900:	imul   esi,DWORD PTR [rsi+0x65],0x6552205d
   140013907:	sub    eax,0x74696157
   14001390c:	imul   ebp,DWORD PTR [rsi+0x67],0xa
	...
   14001391f:	add    BYTE PTR [rip+0x3a703830],ah        # 0x17a717155
   140013925:	cmp    bl,BYTE PTR [rbx+0x49]
   140013928:	outs   dx,BYTE PTR ds:[rsi]
   140013929:	gs je  0x14001396f
   14001392c:	outs   dx,DWORD PTR ds:[rsi]
   14001392d:	outs   dx,BYTE PTR ds:[rsi]
   14001392e:	jbe    0x140013995
   140013930:	jb     0x1400139a6
   140013932:	push   rbx
   140013933:	push   0x64657261
   140013938:	push   rsp
   140013939:	outs   dx,DWORD PTR ds:[rsi]
   14001393a:	rex.RB js 0x1400139a0
   14001393d:	ins    BYTE PTR es:[rdi],dx
   14001393e:	jne    0x1400139b3
   140013940:	imul   esi,DWORD PTR [rsi+0x65],0x6157205d
   140013947:	imul   esi,DWORD PTR [rsi+rax*2+0x6f],0x6e695372
   14001394f:	ins    BYTE PTR es:[edi],dx
   140013951:	gs rex.WRXB (bad) 
   140013954:	push   0x65
   140013956:	movsxd esi,DWORD PTR [rax+riz*1+0x46]
   14001395a:	(bad)  
   14001395b:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0xa
   140013963:	add    BYTE PTR [rsi],ah
   140013965:	(bad)  
   140013966:	ins    DWORD PTR es:[rdi],dx
   140013967:	jo     0x1400139a4
   140013969:	add    BYTE PTR [rax],al
   14001396b:	add    BYTE PTR [rsi],ah
   14001396d:	jno    0x1400139e4
   14001396f:	outs   dx,DWORD PTR ds:[rsi]
   140013970:	je     0x1400139ad
   140013972:	add    BYTE PTR [rax],al
   140013974:	es ins BYTE PTR es:[rdi],dx
   140013976:	je     0x1400139b3
   140013978:	add    BYTE PTR [rax],al
   14001397a:	add    BYTE PTR [rax],al
   14001397c:	es addr32 je 0x1400139bb
   140013980:	add    BYTE PTR [rax],al
   140013982:	add    BYTE PTR [rax],al
   140013984:	and    edi,DWORD PTR es:[rax+0x37]
   140013988:	(bad)  
   140013989:	cmp    eax,DWORD PTR [rax]
   14001398b:	add    BYTE PTR [rsi],ah
   14001398d:	and    edi,DWORD PTR [rax+0x37]
   140013990:	cmp    eax,DWORD PTR fs:[rax]
   140013993:	add    BYTE PTR [rax],al
   140013995:	add    BYTE PTR [rax],al
   140013997:	add    BYTE PTR [rax],dh
   140013999:	xor    BYTE PTR [rax],dh
   14001399b:	xor    BYTE PTR [rax],dh
   14001399d:	xor    BYTE PTR [rax],dh
   14001399f:	xor    BYTE PTR [rax],ah
   1400139a1:	and    BYTE PTR [rax],ah
   1400139a3:	and    BYTE PTR [rax],ah
   1400139a5:	and    BYTE PTR [rax],ah
   1400139a7:	and    BYTE PTR [rax],ah
   1400139a9:	and    BYTE PTR [rax],ah
   1400139ab:	and    BYTE PTR [rax],ah
   1400139ad:	and    BYTE PTR [rax],ah
   1400139af:	and    BYTE PTR [rax],ah
   1400139b1:	and    BYTE PTR [rax],ah
   1400139b3:	and    BYTE PTR [rax],ah
   1400139b5:	and    BYTE PTR [rax],ah
   1400139b7:	and    BYTE PTR [rax],ah
   1400139b9:	sub    eax,0xa0d
   1400139be:	add    BYTE PTR [rax],al
   1400139c0:	and    eax,0x20783230
   1400139c5:	add    BYTE PTR [rax],al
   1400139c7:	add    BYTE PTR [rax],ah
   1400139c9:	and    BYTE PTR [rax],ah
   1400139cb:	add    BYTE PTR [rip+0x25000020],ch        # 0x1650139f1
   1400139d1:	xor    BYTE PTR [rax],bh
   1400139d3:	js     0x1400139f5
   1400139d5:	and    eax,0xd732573
   1400139da:	or     al,BYTE PTR [rax]
   1400139dc:	add    BYTE PTR [rax],al
   1400139de:	add    BYTE PTR [rax],al
   1400139e0:	add    BYTE PTR es:[rcx+0x0],ah
   1400139e4:	ins    DWORD PTR es:[rdi],dx
   1400139e5:	add    BYTE PTR [rax+0x0],dh
   1400139e8:	cmp    eax,DWORD PTR [rax]
   1400139ea:	add    BYTE PTR [rax],al
   1400139ec:	add    BYTE PTR [rax],al
   1400139ee:	add    BYTE PTR [rax],al
   1400139f0:	add    BYTE PTR es:[rcx+0x0],dh
   1400139f4:	jne    0x1400139f6
   1400139f6:	outs   dx,DWORD PTR ds:[rsi]
   1400139f7:	add    BYTE PTR [rax+rax*1+0x3b],dh
   1400139fb:	add    BYTE PTR [rax],al
   1400139fd:	add    BYTE PTR [rax],al
   1400139ff:	add    BYTE PTR [rsi],ah
   140013a01:	add    BYTE PTR [rax+rax*1+0x74],ch
   140013a05:	add    BYTE PTR [rbx],bh
	...
   140013a0f:	add    BYTE PTR [rsi],ah
   140013a11:	add    BYTE PTR [rdi+0x0],ah
   140013a14:	je     0x140013a16
   140013a16:	cmp    eax,DWORD PTR [rax]
	...
   140013a20:	add    BYTE PTR es:[rbx],ah
   140013a23:	add    BYTE PTR [rax+0x0],bh
   140013a26:	(bad)  
   140013a27:	add    BYTE PTR [rdx+0x0],ah
   140013a2a:	cmp    eax,DWORD PTR [rax]
   140013a2c:	add    BYTE PTR [rax],al
   140013a2e:	add    BYTE PTR [rax],al
   140013a30:	add    BYTE PTR es:[rbx],ah
   140013a33:	add    BYTE PTR [rax+0x0],bh
   140013a36:	(bad)  
   140013a37:	add    BYTE PTR [rax+rax*1+0x3b],ah
   140013a3b:	add    BYTE PTR [rax],al
   140013a3d:	add    BYTE PTR [rax],al
   140013a3f:	add    BYTE PTR [rdx-0x66666667],bl
   140013a45:	cdq    
   140013a46:	mov    ecx,0x3f
   140013a4b:	add    BYTE PTR [rax],al
   140013a4d:	add    BYTE PTR [rax+rax*2],ah
   140013a50:	add    BYTE PTR [rax],al
   140013a52:	add    BYTE PTR [rax],al
   140013a54:	(bad)  
   140013a55:	mov    ecx,0x574f
   140013a5a:	add    BYTE PTR [rax],al
   140013a5c:	add    al,BYTE PTR [rax]
   140013a5e:	add    BYTE PTR [rax],al
   140013a60:	and    eax,DWORD PTR [rax]
   140013a62:	add    BYTE PTR [rax],al
   140013a64:	mov    BYTE PTR [rdx],bh
   140013a66:	add    DWORD PTR [rax],eax
   140013a68:	mov    BYTE PTR [rsi],ch
   140013a6a:	add    DWORD PTR [rax],eax
   140013a6c:	add    BYTE PTR [rax],al
   140013a6e:	add    BYTE PTR [rax],al
   140013a70:	(bad)  
   140013a71:	mov    ecx,0x574f
   140013a76:	add    BYTE PTR [rax],al
   140013a78:	or     eax,0x54000000
   140013a7d:	add    al,BYTE PTR [rax]
   140013a7f:	add    al,bh
   140013a81:	cmp    al,BYTE PTR [rcx]
   140013a83:	add    al,bh
   140013a85:	add    DWORD PTR cs:[rax],eax
   140013a88:	push   rdx
   140013a89:	push   rbx
   140013a8a:	rex.R push rbx
   140013a8c:	mov    ah,0xef
   140013a8e:	mov    bl,0x36
   140013a90:	xchg   esp,eax
   140013a91:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140013a92:	out    0x42,al
   140013a94:	nop
   140013a95:	push   0xffffffffffffffc2
   140013a97:	and    eax,DWORD PTR [rbx+0x1bfa58a]
   140013a9d:	add    BYTE PTR [rax],al
   140013a9f:	add    BYTE PTR [rcx+0x70],ah
   140013aa2:	jo     0x140013b07
   140013aa4:	ins    DWORD PTR es:[rdi],dx
   140013aa5:	fs cs jo 0x140013b0d
   140013aa9:	(bad)  
	...
   140013af6:	add    BYTE PTR [rax],al
   140013af8:	rex.RXB
   140013af9:	rex.XB push r12
   140013afb:	rex.WR add BYTE PTR [rax],r10b
   140013afe:	add    BYTE PTR [rax],al
   140013b00:	add    BYTE PTR [rax],al
   140013b03:	add    BYTE PTR [rsi],ch
   140013b05:	je     0x140013b6c
   140013b07:	js     0x140013b7d
   140013b09:	and    al,0x64
   140013b0b:	imul   eax,DWORD PTR [rax],0x40000000
   140013b11:	adc    BYTE PTR [rax],al
   140013b13:	add    BYTE PTR [rax],al
   140013b15:	(bad)  
   140013b16:	add    DWORD PTR [rax],eax
   140013b18:	cs je  0x140013b80
   140013b1b:	js     0x140013b91
   140013b1d:	and    al,0x6d
   140013b1f:	outs   dx,BYTE PTR ds:[rsi]
   140013b20:	add    BYTE PTR [rax],al
   140013b22:	add    BYTE PTR [rax],al
   140013b24:	rex (bad) 
   140013b26:	add    DWORD PTR [rax],eax
   140013b28:	add    BYTE PTR [rax],0x0
   140013b2b:	add    BYTE PTR [rsi],ch
   140013b2d:	je     0x140013b94
   140013b2f:	js     0x140013ba5
   140013b31:	and    al,0x6d
   140013b33:	outs   dx,BYTE PTR ds:[rsi]
   140013b34:	and    al,0x30
   140013b36:	xor    BYTE PTR [rax],al
   140013b38:	rcr    BYTE PTR [rsi],0x1
   140013b3b:	add    BYTE PTR [rax+0x0],dl
   140013b3e:	add    BYTE PTR [rax],al
   140013b40:	cs je  0x140013ba8
   140013b43:	js     0x140013bb9
   140013b45:	and    al,0x78
   140013b47:	add    BYTE PTR [rax],al
   140013b49:	and    BYTE PTR [rcx],al
   140013b4b:	add    BYTE PTR [rax+0x2e000001],dh
   140013b51:	jb     0x140013bb7
   140013b53:	(bad)  
   140013b54:	je     0x140013bb7
   140013b56:	and    al,0x62
   140013b58:	jb     0x140013bbd
   140013b5a:	add    BYTE PTR [rax],al
   140013b5c:	mov    al,0x21
   140013b5e:	add    DWORD PTR [rax],eax
   140013b60:	mov    BYTE PTR [rbx],al
   140013b62:	add    BYTE PTR [rax],al
   140013b64:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x352461
   140013b6d:	add    BYTE PTR [rax],al
   140013b6f:	add    BYTE PTR [rax],bh
   140013b71:	and    eax,0x100001
   140013b76:	add    BYTE PTR [rax],al
   140013b78:	xor    BYTE PTR cs:[rax],dh
   140013b7b:	movsxd esp,DWORD PTR [rsi+0x67]
   140013b7e:	add    BYTE PTR [rax],al
   140013b80:	and    rax,0x80001
   140013b86:	add    BYTE PTR [rax],al
   140013b88:	cs rex.XB push r10
   140013b8b:	push   rsp
   140013b8c:	and    al,0x58
   140013b8e:	rex.XB
   140013b8f:	add    BYTE PTR [r8],al
   140013b92:	add    BYTE PTR [rax],al
   140013b94:	push   rax
   140013b95:	and    eax,0x80001
   140013b9a:	add    BYTE PTR [rax],al
   140013b9c:	cs rex.XB push r10
   140013b9f:	push   rsp
   140013ba0:	and    al,0x58
   140013ba2:	rex.XB
   140013ba3:	rex.B
   140013ba4:	add    BYTE PTR [r8],al
   140013ba7:	add    BYTE PTR [rax+0x25],bl
   140013baa:	add    DWORD PTR [rax],eax
   140013bac:	sbb    BYTE PTR [rax],al
   140013bae:	add    BYTE PTR [rax],al
   140013bb0:	cs rex.XB push r10
   140013bb3:	push   rsp
   140013bb4:	and    al,0x58
   140013bb6:	rex.XB push r13
   140013bb8:	add    BYTE PTR [rax],al
   140013bba:	add    BYTE PTR [rax],al
   140013bbc:	jo     0x140013be3
   140013bbe:	add    DWORD PTR [rax],eax
   140013bc0:	or     BYTE PTR [rax],al
   140013bc2:	add    BYTE PTR [rax],al
   140013bc4:	cs rex.XB push r10
   140013bc7:	push   rsp
   140013bc8:	and    al,0x58
   140013bca:	rex.XB pop r10
   140013bcc:	add    BYTE PTR [rax],al
   140013bce:	add    BYTE PTR [rax],al
   140013bd0:	js     0x140013bf7
   140013bd2:	add    DWORD PTR [rax],eax
   140013bd4:	or     BYTE PTR [rax],al
   140013bd6:	add    BYTE PTR [rax],al
   140013bd8:	cs rex.XB push r10
   140013bdb:	push   rsp
   140013bdc:	and    al,0x58
   140013bde:	rex.WB
   140013bdf:	add    BYTE PTR [r8],al
   140013be2:	add    BYTE PTR [rax],al
   140013be4:	and    BYTE PTR [rip+0x80001],0x0        # 0x140093bec
   140013beb:	add    BYTE PTR [rsi],ch
   140013bed:	rex.XB push r10
   140013bef:	push   rsp
   140013bf0:	and    al,0x58
   140013bf2:	rex.WB
   140013bf3:	rex.B
   140013bf4:	add    BYTE PTR [r8],al
   140013bf7:	add    BYTE PTR [rax+0x8000125],cl
   140013bfd:	add    BYTE PTR [rax],al
   140013bff:	add    BYTE PTR [rsi],ch
   140013c01:	rex.XB push r10
   140013c03:	push   rsp
   140013c04:	and    al,0x58
   140013c06:	rex.WB pop r9
   140013c08:	add    BYTE PTR [rax],al
   140013c0a:	add    BYTE PTR [rax],al
   140013c0c:	nop
   140013c0d:	and    eax,0x80001
   140013c12:	add    BYTE PTR [rax],al
   140013c14:	cs rex.XB push r10
   140013c17:	push   rsp
   140013c18:	and    al,0x58
   140013c1a:	rex.WB pop r10
   140013c1c:	add    BYTE PTR [rax],al
   140013c1e:	add    BYTE PTR [rax],al
   140013c20:	cwde   
   140013c21:	and    eax,0x6780001
   140013c26:	add    BYTE PTR [rax],al
   140013c28:	movsxd esp,DWORD PTR cs:[rsi+0x67]
   140013c2c:	jne    0x140013c8f
   140013c2e:	jb     0x140013c94
   140013c30:	add    BYTE PTR [rax],al
   140013c32:	add    BYTE PTR [rax],al
   140013c34:	adc    BYTE PTR [rcx+rax*1],ch
   140013c37:	add    BYTE PTR [rax+0xe],bh
   140013c3a:	add    BYTE PTR [rax],al
   140013c3c:	cs jb  0x140013ca3
   140013c3f:	(bad)  
   140013c40:	je     0x140013ca3
   140013c42:	add    BYTE PTR [rax],al
   140013c44:	mov    BYTE PTR [rdx],bh
   140013c46:	add    DWORD PTR [rax],eax
   140013c48:	enter  0x2,0x0
   140013c4c:	cs jb  0x140013cb3
   140013c4f:	(bad)  
   140013c50:	je     0x140013cb3
   140013c52:	and    al,0x7a
   140013c54:	jp     0x140013cd0
   140013c56:	fs (bad) 
   140013c58:	add    BYTE PTR [eax],al
   140013c5b:	add    BYTE PTR [rax+0x3d],dl
   140013c5e:	add    DWORD PTR [rax],eax
   140013c60:	sbb    BYTE PTR [rdi],al
   140013c62:	add    BYTE PTR [rax],al
   140013c64:	cs js  0x140013ccb
   140013c67:	(bad)  
   140013c68:	je     0x140013ccb
   140013c6a:	add    BYTE PTR [rax],al
   140013c6c:	push   0xffffffff88000144
   140013c71:	add    BYTE PTR [rax],al
   140013c73:	add    BYTE PTR [rsi],ch
   140013c75:	js     0x140013cdb
   140013c77:	(bad)  
   140013c78:	je     0x140013cdb
   140013c7a:	and    al,0x78
   140013c7c:	add    BYTE PTR [rax],al
   140013c7e:	add    BYTE PTR [rax],al
   140013c80:	lock add DWORD PTR [rax],r8d
   140013c84:	(bad)  
   140013c85:	outs   dx,DWORD PTR ds:[rsi]
   140013c86:	add    BYTE PTR [rax],al
   140013c88:	cs gs fs (bad) 
   140013c8c:	je     0x140013cef
   140013c8e:	add    BYTE PTR [rax],al
   140013c90:	mov    ah,0xb4
   140013c92:	add    DWORD PTR [rax],eax
   140013c94:	js     0x140013c96
   140013c96:	add    BYTE PTR [rax],al
   140013c98:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x322461
   140013ca1:	add    BYTE PTR [rax],al
   140013ca3:	add    BYTE PTR [rsi*4+0x140001],ch
   140013caa:	add    BYTE PTR [rax],al
   140013cac:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x332461
   140013cb5:	add    BYTE PTR [rax],al
   140013cb7:	add    BYTE PTR [rax-0x4b],al
   140013cba:	add    DWORD PTR [rax],eax
   140013cbc:	mov    BYTE PTR [rbx],al
   140013cbe:	add    BYTE PTR [rax],al
   140013cc0:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x342461
   140013cc9:	add    BYTE PTR [rax],al
   140013ccb:	add    al,cl
   140013ccd:	mov    eax,0x6fa0001
   140013cd2:	add    BYTE PTR [rax],al
   140013cd4:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x362461
   140013cdd:	add    BYTE PTR [rax],al
   140013cdf:	add    BYTE PTR [rax],al
   140013ce1:	rol    BYTE PTR [rcx],0x0
   140013ce4:	xor    BYTE PTR [rax],al
   140013ce6:	add    BYTE PTR [rax],al
   140013ce8:	cs fs (bad) 
   140013ceb:	je     0x140013d4e
   140013ced:	and    al,0x72
   140013cef:	and    al,0x62
   140013cf1:	jb     0x140013d56
   140013cf3:	add    BYTE PTR [rax],dh
   140013cf5:	rol    BYTE PTR [rcx],0x0
   140013cf8:	rol    BYTE PTR [rax],1
   140013cfa:	add    BYTE PTR [rax],al
   140013cfc:	cs fs (bad) 
   140013cff:	je     0x140013d62
   140013d01:	add    BYTE PTR [rax],al
   140013d03:	add    BYTE PTR [rax],al
   140013d05:	rol    DWORD PTR [rcx],0x0
   140013d08:	rex (bad) 
   140013d0a:	add    BYTE PTR [rax],al
   140013d0c:	cs (bad) 
   140013d0f:	jae    0x140013d11
   140013d11:	add    BYTE PTR [rax],al
   140013d13:	add    BYTE PTR [rax],al
   140013d15:	rol    BYTE PTR [rcx],1
   140013d17:	add    ah,cl
   140013d19:	or     al,0x0
   140013d1b:	add    BYTE PTR [rsi],ch
   140013d1d:	jo     0x140013d83
   140013d1f:	(bad)  
   140013d20:	je     0x140013d83
   140013d22:	add    BYTE PTR [rax],al
   140013d24:	add    al,ah
   140013d26:	add    DWORD PTR [rax],eax
   140013d28:	lock add BYTE PTR [rax],al
   140013d2b:	add    BYTE PTR [rsi],ch
   140013d2d:	jb     0x140013da2
   140013d2f:	jb     0x140013d94
   140013d31:	and    al,0x30
   140013d33:	xor    DWORD PTR [rax],eax
   140013d35:	add    BYTE PTR [rax],al
   140013d37:	add    al,dh
   140013d39:	loopne 0x140013d3c
   140013d3b:	add    al,bh
   140013d3d:	(bad)  
   140013d3e:	add    BYTE PTR [rax],al
   140013d40:	cs jb  0x140013db6
   140013d43:	jb     0x140013da8
   140013d45:	and    al,0x30
   140013d47:	xor    al,BYTE PTR [rax]
   140013d49:	add    BYTE PTR [rax],al
   140013d4b:	add    BYTE PTR [rax],al
   140013d4d:	add    BYTE PTR [rax],al
   140013d4f:	add    BYTE PTR [rcx],al
   140013d51:	add    al,0x1
   140013d53:	add    BYTE PTR [rdx+rax*2],al
   140013d56:	add    BYTE PTR [rax],al
   140013d58:	add    DWORD PTR [rsi],eax
   140013d5a:	add    al,BYTE PTR [rax]
   140013d5c:	(bad)  
   140013d5d:	xor    al,BYTE PTR [rdx]
   140013d5f:	xor    BYTE PTR [rcx],al
   140013d61:	add    al,0x1
   140013d63:	add    BYTE PTR [rdx+riz*2],al
   140013d66:	add    BYTE PTR [rax],al
   140013d68:	add    DWORD PTR [rcx],ecx
   140013d6a:	add    DWORD PTR [rax],eax
   140013d6c:	or     DWORD PTR [rdx+0x0],esp
   140013d6f:	add    BYTE PTR [rcx],al
   140013d71:	sbb    eax,0x741d000c
   140013d76:	ltr    WORD PTR [rip+0x1d000e64]        # 0x15d014be1
   140013d7d:	push   rsp
   140013d7e:	or     eax,0xc341d00
   140013d83:	add    BYTE PTR [rip+0x17f01972],bl        # 0x157f156fb
   140013d89:	loopne 0x140013da0
   140013d8b:	rol    BYTE PTR [rcx],0x4
   140013d8e:	add    DWORD PTR [rax],eax
   140013d90:	add    al,0xa2
   140013d92:	add    BYTE PTR [rax],al
   140013d94:	add    DWORD PTR [rsi],eax
   140013d96:	add    al,BYTE PTR [rax]
   140013d98:	(bad)  
   140013d99:	xchg   edx,eax
   140013d9a:	add    dh,BYTE PTR [rax]
   140013d9c:	add    DWORD PTR [rcx+rax*1],eax
   140013d9f:	add    BYTE PTR [rdx+rax*4],al
   140013da2:	add    BYTE PTR [rax],al
   140013da4:	add    DWORD PTR [rdx],ecx
   140013da6:	add    al,0x0
   140013da8:	or     dh,BYTE PTR [rsi+rax*1]
   140013dab:	add    BYTE PTR [rdx],cl
   140013dad:	xor    al,BYTE PTR [rsi]
   140013daf:	jo     0x140013db2
   140013db1:	clts   
   140013db3:	add    BYTE PTR [rdi],cl
   140013db5:	or     eax,DWORD PTR fs:[rax]
   140013db8:	sysenter 
   140013dba:	or     al,BYTE PTR [rax]
   140013dbc:	(bad)  
   140013dbe:	or     esi,DWORD PTR [rax+0x1]
   140013dc1:	sbb    DWORD PTR [rdx],ecx
   140013dc3:	add    BYTE PTR [rcx],bl
   140013dc5:	je     0x140013dd0
   140013dc7:	add    BYTE PTR [rcx],bl
   140013dc9:	or     BYTE PTR fs:[rax],al
   140013dcc:	sbb    DWORD PTR [rdi+rax*1+0x0],edx
   140013dd0:	sbb    DWORD PTR [rsi+rax*1],esi
   140013dd3:	add    BYTE PTR [rcx],bl
   140013dd5:	xor    dl,BYTE PTR [rip+0xb3019e0]        # 0x14b3157bb
   140013ddb:	add    BYTE PTR [rdi],bl
   140013ddd:	xor    al,0xa1
   140013ddf:	add    BYTE PTR [rdi],bl
   140013de1:	add    DWORD PTR [rax+0xef01000],ebx
   140013de7:	loopne 0x140013df5
   140013de9:	ror    BYTE PTR [rdx],1
   140013deb:	ror    BYTE PTR [rax],0x70
   140013dee:	(bad)  
   140013def:	(bad)  
   140013df0:	(bad)  
   140013df1:	push   rax
   140013df2:	add    BYTE PTR [rax],al
   140013df4:	test   BYTE PTR [rip+0x4b00001],bl        # 0x144b13dfb
   140013dfa:	add    BYTE PTR [rax],al
   140013dfc:	sbb    DWORD PTR [rcx],edi
   140013dfe:	or     eax,DWORD PTR [rax]
   140013e00:	sub    BYTE PTR [rcx+rbx*1+0x2],dh
   140013e04:	sub    BYTE PTR [rax+rbx*1+0x2],ah
   140013e08:	sub    BYTE PTR [rsi+rdx*1],dh
   140013e0b:	add    ch,BYTE PTR [rax]
   140013e0d:	add    DWORD PTR [rdx],edx
   140013e0f:	add    dl,BYTE PTR [rax+rsi*8]
   140013e12:	adc    ah,al
   140013e14:	adc    BYTE PTR [rax+0x0],dl
   140013e17:	add    BYTE PTR [rbp+rbx*1+0x10800001],al
   140013e1e:	add    BYTE PTR [rax],al
   140013e20:	sbb    DWORD PTR [rsi],esi
   140013e22:	or     eax,DWORD PTR [rax]
   140013e24:	and    eax,0x25022934
   140013e29:	add    DWORD PTR [rsi],ebx
   140013e2b:	add    dl,BYTE PTR [rax]
   140013e2d:	lock (bad) 
   140013e2f:	loopne 0x140013e3d
   140013e31:	ror    BYTE PTR [rdx],1
   140013e33:	ror    BYTE PTR [rax],0x70
   140013e36:	(bad)  
   140013e37:	(bad)  
   140013e38:	(bad)  
   140013e39:	push   rax
   140013e3a:	add    BYTE PTR [rax],al
   140013e3c:	test   BYTE PTR [rip+0x10e00001],bl        # 0x150e13e43
   140013e42:	add    BYTE PTR [rax],al
   140013e44:	sbb    DWORD PTR [rax],edi
   140013e46:	or     eax,DWORD PTR [rax]
   140013e48:	(bad)  
   140013e49:	and    DWORD PTR fs:[rdx],eax
   140013e4c:	(bad)  
   140013e4d:	xor    al,0x20
   140013e4f:	add    ah,BYTE PTR [rdi]
   140013e51:	add    DWORD PTR [rax],ebx
   140013e53:	add    dl,BYTE PTR [rdx]
   140013e55:	lock adc al,ah
   140013e58:	(bad)  
   140013e59:	ror    BYTE PTR [rax+rsi*2],0xb
   140013e5d:	push   rax
   140013e5e:	add    BYTE PTR [rax],al
   140013e60:	test   BYTE PTR [rip+0x10b00001],bl        # 0x150b13e67
   140013e66:	add    BYTE PTR [rax],al
   140013e68:	add    DWORD PTR [rdx+rcx*1],ebx
   140013e6b:	add    BYTE PTR [rsp+rsi*1],bl
   140013e6e:	adc    eax,0x15b21c00
   140013e73:	lock adc esp,eax
   140013e76:	adc    eax,edx
   140013e78:	xadd   BYTE PTR [rip+0xb600c70],cl        # 0x14b614aef
   140013e7f:	push   rax
   140013e80:	sbb    DWORD PTR [rax],esi
   140013e82:	or     eax,DWORD PTR [rax]
   140013e84:	(bad)  
   140013e85:	xor    al,0xf8
   140013e87:	add    DWORD PTR [rdi],ebx
   140013e89:	add    esi,ebp
   140013e8b:	add    DWORD PTR [rax],edx
   140013e8d:	lock (bad) 
   140013e8f:	loopne 0x140013e9d
   140013e91:	ror    BYTE PTR [rdx],1
   140013e93:	ror    BYTE PTR [rax],0x70
   140013e96:	(bad)  
   140013e97:	(bad)  
   140013e98:	(bad)  
   140013e99:	push   rax
   140013e9a:	add    BYTE PTR [rax],al
   140013e9c:	test   BYTE PTR [rip+0xf600001],bl        # 0x14f613ea3
   140013ea2:	add    BYTE PTR [rax],al
   140013ea4:	add    DWORD PTR [rax+rcx*1],edx
   140013ea7:	add    BYTE PTR [rsp+riz*2],dl
   140013eaa:	or     BYTE PTR [rax],al
   140013eac:	adc    al,0x54
   140013eae:	(bad)  
   140013eaf:	add    BYTE PTR [rsp+rsi*1],dl
   140013eb2:	(bad)  
   140013eb3:	add    BYTE PTR [rdx+rsi*1],dl
   140013eb6:	adc    BYTE PTR [rax+0x19],dh
   140013eb9:	sub    al,0x9
   140013ebb:	add    BYTE PTR [rbx],bl
   140013ebd:	xor    al,0x57
   140013ebf:	add    BYTE PTR [rbx],bl
   140013ec1:	add    DWORD PTR [rax+0x0],edx
   140013ec4:	or     al,0xf0
   140013ec6:	or     ah,al
   140013ec8:	or     BYTE PTR [rax+0x7],dh
   140013ecb:	(bad)  
   140013ecc:	(bad)  
   140013ecd:	push   rax
   140013ece:	add    BYTE PTR [rax],al
   140013ed0:	test   BYTE PTR [rip+0x2700001],bl        # 0x142713ed7
   140013ed6:	add    BYTE PTR [rax],al
   140013ed8:	add    DWORD PTR [rdx],edx
   140013eda:	add    eax,0xe421200
   140013edf:	jo     0x140013eee
   140013ee1:	(bad)  
   140013ee2:	or     al,0x50
   140013ee4:	or     esi,DWORD PTR [rax]
   140013ee6:	add    BYTE PTR [rax],al
   140013ee8:	sbb    DWORD PTR [rax],esi
   140013eea:	or     eax,DWORD PTR [rax]
   140013eec:	(bad)  
   140013eed:	xor    al,0x99
   140013eef:	add    DWORD PTR [rdi],ebx
   140013ef1:	add    DWORD PTR [rax+0xef01001],edx
   140013ef7:	loopne 0x140013f05
   140013ef9:	ror    BYTE PTR [rdx],1
   140013efb:	ror    BYTE PTR [rax],0x70
   140013efe:	(bad)  
   140013eff:	(bad)  
   140013f00:	(bad)  
   140013f01:	push   rax
   140013f02:	add    BYTE PTR [rax],al
   140013f04:	test   BYTE PTR [rip+0xc700001],bl        # 0x14c713f0b
   140013f0a:	add    BYTE PTR [rax],al
   140013f0c:	add    DWORD PTR [rcx],ebx
   140013f0e:	or     al,BYTE PTR [rax]
   140013f10:	sbb    DWORD PTR [rax+rdx*1+0x0],esp
   140013f14:	sbb    DWORD PTR [rdi+rcx*1],esi
   140013f17:	add    BYTE PTR [rcx],bl
   140013f19:	jb     0x140013f2d
   140013f1b:	lock adc al,ah
   140013f1e:	(bad)  
   140013f1f:	ror    BYTE PTR [rax+rsi*2],0xb
   140013f23:	push   rax
   140013f24:	add    DWORD PTR [rdi],ecx
   140013f26:	(bad)  
   140013f27:	add    BYTE PTR [rdi],cl
   140013f29:	fs (bad) 
   140013f2b:	add    BYTE PTR [rdi],cl
   140013f2d:	xor    al,0x6
   140013f2f:	add    BYTE PTR [rdi],cl
   140013f31:	xor    cl,BYTE PTR [rbx]
   140013f33:	jo     0x140013f4e
   140013f35:	xor    BYTE PTR [rbx],cl
   140013f37:	add    BYTE PTR [rdi],bl
   140013f39:	xor    al,0xec
   140013f3b:	add    BYTE PTR [rdi],bl
   140013f3d:	add    edx,esp
   140013f3f:	add    BYTE PTR [rax],dl
   140013f41:	lock (bad) 
   140013f43:	loopne 0x140013f51
   140013f45:	ror    BYTE PTR [rdx],1
   140013f47:	ror    BYTE PTR [rax],0x70
   140013f4a:	(bad)  
   140013f4b:	(bad)  
   140013f4c:	(bad)  
   140013f4d:	push   rax
   140013f4e:	add    BYTE PTR [rax],al
   140013f50:	test   BYTE PTR [rip+0x7000001],bl        # 0x147013f57
   140013f56:	add    BYTE PTR [rax],al
   140013f58:	add    DWORD PTR [rcx],ebx
   140013f5a:	or     al,BYTE PTR [rax]
   140013f5c:	sbb    DWORD PTR [rsp+rdx*1+0x0],esp
   140013f60:	sbb    DWORD PTR [rdx+rdx*1],esi
   140013f63:	add    BYTE PTR [rcx],bl
   140013f65:	mov    dl,0x12
   140013f67:	lock adc al,ah
   140013f6a:	(bad)  
   140013f6b:	ror    BYTE PTR [rax+rsi*2],0xb
   140013f6f:	push   rax
   140013f70:	sbb    DWORD PTR [rax],esi
   140013f72:	or     eax,DWORD PTR [rax]
   140013f74:	(bad)  
   140013f75:	xor    al,0x58
   140013f77:	add    BYTE PTR [rdi],bl
   140013f79:	add    DWORD PTR [rax+0x0],edx
   140013f7c:	adc    al,dh
   140013f7e:	(bad)  
   140013f7f:	loopne 0x140013f8d
   140013f81:	ror    BYTE PTR [rdx],1
   140013f83:	ror    BYTE PTR [rax],0x70
   140013f86:	(bad)  
   140013f87:	(bad)  
   140013f88:	(bad)  
   140013f89:	push   rax
   140013f8a:	add    BYTE PTR [rax],al
   140013f8c:	test   BYTE PTR [rip+0x2700001],bl        # 0x142713f93
   140013f92:	add    BYTE PTR [rax],al
   140013f94:	sbb    DWORD PTR [rdx],esi
   140013f96:	or     eax,DWORD PTR [rax]
   140013f98:	and    DWORD PTR [rdi+rdx*2+0x0],esp
   140013f9c:	and    DWORD PTR [rsi+rdx*2],esi
   140013f9f:	add    BYTE PTR [rcx],ah
   140013fa1:	add    DWORD PTR [rax+0x0],edx
   140013fa4:	adc    dh,al
   140013fa6:	adc    al,ah
   140013fa8:	(bad)  
   140013fa9:	ror    BYTE PTR [rax+rsi*2],0xb
   140013fad:	push   rax
   140013fae:	add    BYTE PTR [rax],al
   140013fb0:	test   BYTE PTR [rip+0x2700001],bl        # 0x142713fb7
   140013fb6:	add    BYTE PTR [rax],al
   140013fb8:	sbb    DWORD PTR [rip+0x1140006],esp        # 0x141153fc4
   140013fbe:	jmp    0x140013fc1
   140013fc0:	add    eax,0x3600470
   140013fc5:	xor    BYTE PTR [rdx],al
   140013fc7:	push   rax
   140013fc8:	test   BYTE PTR [rip+0xf400001],bl        # 0x14f413fcf
   140013fce:	add    BYTE PTR [rax],al
   140013fd0:	sbb    DWORD PTR [rax],ebp
   140013fd2:	(bad)  
   140013fd3:	add    BYTE PTR [rdi],dl
   140013fd5:	xor    al,0xed
   140013fd7:	add    DWORD PTR [rdi],edx
   140013fd9:	add    esi,esp
   140013fdb:	add    DWORD PTR [rax],ecx
   140013fdd:	jo     0x140013fe6
   140013fdf:	(bad)  
   140013fe0:	(bad)  
   140013fe1:	push   rax
   140013fe2:	add    BYTE PTR [rax],al
   140013fe4:	test   BYTE PTR [rip+0xf200001],bl        # 0x14f213feb
   140013fea:	add    BYTE PTR [rax],al
   140013fec:	sbb    DWORD PTR [rip+0x1140006],esp        # 0x141153ff8
   140013ff2:	fwait
   140013ff3:	add    BYTE PTR [rip+0x3600470],al        # 0x143614469
   140013ff9:	xor    BYTE PTR [rdx],al
   140013ffb:	push   rax
   140013ffc:	test   BYTE PTR [rip+0x4c00001],bl        # 0x144c14003
   140014002:	add    BYTE PTR [rax],al
   140014004:	sbb    DWORD PTR [rip+0x1140006],esp        # 0x141154010
   14001400a:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001400b:	add    DWORD PTR [rip+0x3600470],eax        # 0x143614481
   140014011:	xor    BYTE PTR [rdx],al
   140014013:	push   rax
   140014014:	test   BYTE PTR [rip+0xd100001],bl        # 0x14d11401b
   14001401a:	add    BYTE PTR [rax],al
   14001401c:	add    DWORD PTR [rsi+rax*1],ecx
   14001401f:	add    BYTE PTR [rsp+rsi*1],cl
   140014022:	or     DWORD PTR [rax],eax
   140014024:	or     al,0x32
   140014026:	or     BYTE PTR [rax+0x7],dh
   140014029:	(bad)  
   14001402a:	(bad)  
   14001402b:	push   rax
   14001402c:	sbb    DWORD PTR [rax],esp
   14001402e:	(bad)  
   14001402f:	add    BYTE PTR [rsi],cl
   140014031:	add    DWORD PTR [rax],ebx
   140014033:	add    BYTE PTR [rdi],al
   140014035:	loopne 0x14001403c
   140014037:	jo     0x14001403d
   140014039:	(bad)  
   14001403a:	add    edx,DWORD PTR [rax+0x2]
   14001403d:	xor    BYTE PTR [rax],al
   14001403f:	add    BYTE PTR [rbp+rbx*1+0xb00001],al
   140014046:	add    BYTE PTR [rax],al
   140014048:	add    DWORD PTR [rbx],ebx
   14001404a:	or     al,BYTE PTR [rax]
   14001404c:	sbb    esi,DWORD PTR [rax+rdx*1+0x0]
   140014050:	sbb    esp,DWORD PTR [rdi+rcx*1+0x0]
   140014054:	sbb    esi,DWORD PTR [rsi+rcx*1]
   140014057:	add    BYTE PTR [rbx],bl
   140014059:	xchg   edx,eax
   14001405a:	adc    al,0xf0
   14001405c:	adc    ah,al
   14001405e:	adc    BYTE PTR [rax+0x1],dl
   140014061:	adc    al,0x8
   140014063:	add    BYTE PTR [rsp+riz*2],dl
   140014066:	or     eax,0xc541400
   14001406b:	add    BYTE PTR [rsp+rsi*1],dl
   14001406e:	or     al,BYTE PTR [rax]
   140014070:	adc    al,0x72
   140014072:	adc    BYTE PTR [rax+0x19],dh
   140014075:	sub    eax,0x11c000a
   14001407a:	pop    rbx
   14001407b:	add    BYTE PTR [rip+0x9e00bf0],cl        # 0x149e14c71
   140014081:	rol    BYTE PTR [rdi],1
   140014083:	rol    BYTE PTR [rip+0x3600470],0x30        # 0x1436144fa
   14001408a:	add    dl,BYTE PTR [rax-0x7c]
   14001408d:	sbb    eax,0x2c00001
   140014092:	add    BYTE PTR [rax],al
   140014094:	sbb    DWORD PTR [rcx+rcx*1],ebp
   140014097:	add    BYTE PTR [rbx],bl
   140014099:	add    DWORD PTR [rax+rax*1-0x1ff50ff4],ebx
   1400140a0:	or     al,dl
   1400140a2:	(bad)  
   1400140a3:	rol    BYTE PTR [rax+rsi*2],0x3
   1400140a7:	xor    BYTE PTR [rdx],al
   1400140a9:	push   rax
   1400140aa:	add    BYTE PTR [rax],al
   1400140ac:	test   BYTE PTR [rip+0x4d00001],bl        # 0x144d140b3
   1400140b2:	add    BYTE PTR [rax],al
   1400140b4:	add    DWORD PTR [rip+0x741d000c],ebx        # 0x1b41e40c6
   1400140ba:	or     eax,DWORD PTR [rax]
   1400140bc:	sbb    eax,0x1d000a64
   1400140c1:	push   rsp
   1400140c2:	or     DWORD PTR [rax],eax
   1400140c4:	sbb    eax,0x1d000834
   1400140c9:	xor    bl,BYTE PTR [rcx]
   1400140cb:	loopne 0x1400140e4
   1400140cd:	rcl    BYTE PTR [rip+0xa1601c0],1        # 0x14a174293
   1400140d3:	add    BYTE PTR [rsi],dl
   1400140d5:	push   rsp
   1400140d6:	or     al,0x0
   1400140d8:	(bad)  
   1400140d9:	xor    al,0xa
   1400140db:	add    BYTE PTR [rsi],dl
   1400140dd:	xor    dl,BYTE PTR [rdx]
   1400140df:	lock adc al,ah
   1400140e2:	(bad)  
   1400140e3:	ror    BYTE PTR [rax+rsi*2],0xb
   1400140e7:	(bad)  
   1400140e8:	add    DWORD PTR [rip+0x741d000c],ebx        # 0x1b41e40fa
   1400140ee:	or     eax,DWORD PTR [rax]
   1400140f0:	sbb    eax,0x1d000a64
   1400140f5:	push   rsp
   1400140f6:	or     DWORD PTR [rax],eax
   1400140f8:	sbb    eax,0x1d000834
   1400140fd:	xor    bl,BYTE PTR [rcx]
   1400140ff:	lock (bad) 
   140014101:	loopne 0x140014118
   140014103:	rol    BYTE PTR [rcx],1
   140014105:	sbb    eax,0x741d000c
   14001410a:	or     eax,DWORD PTR [rax]
   14001410c:	sbb    eax,0x1d000a64
   140014111:	push   rsp
   140014112:	or     DWORD PTR [rax],eax
   140014114:	sbb    eax,0x1d000834
   140014119:	xor    bl,BYTE PTR [rcx]
   14001411b:	lock (bad) 
   14001411d:	loopne 0x140014134
   14001411f:	rol    BYTE PTR [rcx],0x6
   140014122:	add    al,BYTE PTR [rax]
   140014124:	(bad)  
   140014125:	jb     0x140014129
   140014127:	xor    BYTE PTR [rcx],al
   140014129:	clts   
   14001412b:	add    BYTE PTR [rdi],cl
   14001412d:	fs or  eax,0xc340f00
   140014133:	add    BYTE PTR [rdi],cl
   140014135:	xchg   edx,eax
   140014136:	or     esi,DWORD PTR [rax+0x1]
   140014139:	or     al,BYTE PTR [rax+rax*1]
   14001413c:	or     dh,BYTE PTR [rax+rcx*1]
   14001413f:	add    BYTE PTR [rdx],cl
   140014141:	push   rdx
   140014142:	(bad)  
   140014143:	(bad)  
   140014144:	sbb    DWORD PTR [rdi+rax*1],esp
   140014147:	add    BYTE PTR [rdx],dl
   140014149:	fs push 0x0
   14001414c:	adc    dh,BYTE PTR [rcx+rbp*2]
   14001414f:	add    BYTE PTR [rdx],dl
   140014151:	add    DWORD PTR [rsi+0x0],esp
   140014154:	or     esi,DWORD PTR [rax+0x0]
   140014157:	add    BYTE PTR [rbp+rbx*1+0x3200001],al
   14001415e:	add    BYTE PTR [rax],al
   140014160:	sbb    DWORD PTR [rdi],esp
   140014162:	or     DWORD PTR [rax],eax
   140014164:	adc    eax,0x15006c54
   140014169:	xor    al,0x6b
   14001416b:	add    BYTE PTR [rip+0xe006601],dl        # 0x14e01a772
   140014171:	lock or al,0x70
   140014174:	or     esp,DWORD PTR [rax+0x0]
   140014177:	add    BYTE PTR [rbp+rbx*1+0x3200001],al
   14001417e:	add    BYTE PTR [rax],al
   140014180:	add    DWORD PTR [rdx],ecx
   140014182:	add    al,0x0
   140014184:	or     dh,BYTE PTR [rdi+rax*1]
   140014187:	add    BYTE PTR [rdx],cl
   140014189:	xor    al,BYTE PTR [rsi]
   14001418b:	jo     0x1400141a6
   14001418d:	sub    DWORD PTR [rcx],ecx
   14001418f:	add    BYTE PTR [rdi],dl
   140014191:	imul   eax,DWORD PTR fs:[rax],0x17
   140014195:	push   rsp
   140014196:	push   0x0
   140014198:	(bad)  
   140014199:	xor    al,0x69
   14001419b:	add    BYTE PTR [rdi],dl
   14001419d:	add    DWORD PTR [rsi+0x0],esp
   1400141a0:	adc    BYTE PTR [rax+0x0],dh
   1400141a3:	add    BYTE PTR [rbp+rbx*1+0x3200001],al
   1400141aa:	add    BYTE PTR [rax],al
   1400141ac:	add    DWORD PTR [rax],ebx
   1400141ae:	or     al,BYTE PTR [rax]
   1400141b0:	sbb    BYTE PTR [rdx+rcx*1+0x0],ah
   1400141b4:	sbb    BYTE PTR [rcx+rcx*1+0x0],dl
   1400141b8:	sbb    BYTE PTR [rax+rcx*1],dh
   1400141bb:	add    BYTE PTR [rax],bl
   1400141bd:	xor    dl,BYTE PTR [rax+rsi*8]
   1400141c0:	adc    ah,al
   1400141c2:	adc    BYTE PTR [rax+0x19],dh
   1400141c5:	(bad)  
   1400141c6:	(bad)  
   1400141c7:	add    BYTE PTR [rcx+rax*1],cl
   1400141ca:	(bad)  
   1400141cb:	add    BYTE PTR [rip+0x3600470],al        # 0x143614641
   1400141d1:	push   rax
   1400141d2:	add    dh,BYTE PTR [rax]
   1400141d4:	test   BYTE PTR [rip+0xe00001],bl        # 0x140e141db
   1400141da:	add    BYTE PTR [rax],al
   1400141dc:	add    DWORD PTR [rdx],ecx
   1400141de:	add    al,0x0
   1400141e0:	or     dh,BYTE PTR [rax+rcx*1]
   1400141e3:	add    BYTE PTR [rdx],cl
   1400141e5:	push   rdx
   1400141e6:	(bad)  
   1400141e7:	jo     0x1400141ea
   1400141e9:	(bad)  
   1400141ea:	or     al,BYTE PTR [rax]
   1400141ec:	(bad)  
   1400141ed:	push   rsp
   1400141ee:	adc    BYTE PTR [rax],al
   1400141f0:	(bad)  
   1400141f1:	xor    al,0xf
   1400141f3:	add    BYTE PTR [rsi],dl
   1400141f5:	jb     0x140014209
   1400141f7:	lock adc al,ah
   1400141fa:	(bad)  
   1400141fb:	ror    BYTE PTR [rax+rsi*2],1
   1400141fe:	or     esp,DWORD PTR [rax+0x19]
   140014201:	xor    BYTE PTR [rax+rax*1],cl
   140014204:	and    dh,BYTE PTR [rcx+rbx*1+0x0]
   140014208:	and    ah,BYTE PTR [rax+rbx*1+0x0]
   14001420c:	and    dh,BYTE PTR [rdi+rdx*1]
   14001420f:	add    BYTE PTR [rdx],ah
   140014211:	repnz sbb al,dh
   140014214:	(bad)  
   140014215:	loopne 0x14001422b
   140014217:	rcl    BYTE PTR [rdx],1
   140014219:	rcl    BYTE PTR [rax],0x50
   14001421c:	test   BYTE PTR [rip+0x780001],bl        # 0x140794223
   140014222:	add    BYTE PTR [rax],al
   140014224:	sbb    DWORD PTR [rip+0x10b0005],ebx        # 0x1410c422f
   14001422a:	xor    al,0x0
   14001422c:	add    al,0x70
   14001422e:	add    esp,DWORD PTR [rax+0x2]
   140014231:	xor    BYTE PTR [rax],al
   140014233:	add    BYTE PTR [rbp+rbx*1+0x1900001],al
   14001423a:	add    BYTE PTR [rax],al
   14001423c:	sbb    DWORD PTR [rbx],ebx
   14001423e:	add    eax,DWORD PTR [rax]
   140014240:	or     DWORD PTR [rcx],eax
   140014242:	xor    BYTE PTR [rax],al
   140014244:	add    dh,BYTE PTR [rax]
   140014246:	add    BYTE PTR [rax],al
   140014248:	test   BYTE PTR [rip+0x1700001],bl        # 0x14171424f
   14001424e:	add    BYTE PTR [rax],al
   140014250:	add    DWORD PTR [rcx],ebx
   140014252:	or     al,BYTE PTR [rax]
   140014254:	sbb    DWORD PTR [rdi+rcx*1+0x0],esi
   140014258:	sbb    DWORD PTR [rsi+rcx*1+0x0],esp
   14001425c:	sbb    DWORD PTR [rbp+rcx*1+0x0],edx
   140014260:	sbb    DWORD PTR [rsp+rcx*1],esi
   140014263:	add    BYTE PTR [rcx],bl
   140014265:	xchg   edx,eax
   140014266:	adc    eax,0xc2d19e0
   14001426b:	add    BYTE PTR [rdi],bl
   14001426d:	je     0x140014286
   14001426f:	add    BYTE PTR [rdi],bl
   140014271:	fs (bad) 
   140014273:	add    BYTE PTR [rdi],bl
   140014275:	xor    al,0x15
   140014277:	add    BYTE PTR [rdi],bl
   140014279:	rcr    BYTE PTR [rax],cl
   14001427b:	lock (bad) 
   14001427d:	loopne 0x140014293
   14001427f:	rcl    BYTE PTR [rdx],1
   140014281:	rcl    BYTE PTR [rax],0x50
   140014284:	test   BYTE PTR [rip+0x680001],bl        # 0x14069428b
   14001428a:	add    BYTE PTR [rax],al
   14001428c:	sbb    DWORD PTR [rdx],ebp
   14001428e:	or     eax,DWORD PTR [rax]
   140014290:	sbb    al,0x34
   140014292:	sub    DWORD PTR [rax],eax
   140014294:	sbb    al,0x1
   140014296:	(bad)  
   140014297:	add    BYTE PTR [rax],dl
   140014299:	lock (bad) 
   14001429b:	loopne 0x1400142a9
   14001429d:	ror    BYTE PTR [rdx],1
   14001429f:	ror    BYTE PTR [rax],0x70
   1400142a2:	(bad)  
   1400142a3:	(bad)  
   1400142a4:	(bad)  
   1400142a5:	push   rax
   1400142a6:	add    BYTE PTR [rax],al
   1400142a8:	test   BYTE PTR [rip+0xe00001],bl        # 0x140e142af
   1400142ae:	add    BYTE PTR [rax],al
   1400142b0:	add    DWORD PTR [rax+rcx*1],edx
   1400142b3:	add    BYTE PTR [rsp+riz*2],dl
   1400142b6:	or     DWORD PTR [rax],eax
   1400142b8:	adc    al,0x54
   1400142ba:	or     BYTE PTR [rax],al
   1400142bc:	adc    al,0x34
   1400142be:	(bad)  
   1400142bf:	add    BYTE PTR [rdx+rsi*1],dl
   1400142c2:	adc    BYTE PTR [rax+0x1],dh
   1400142c5:	sbb    eax,0x741d000c
   1400142ca:	or     eax,0xc641d00
   1400142cf:	add    BYTE PTR [rip+0x1d000b54],bl        # 0x15d014e29
   1400142d5:	xor    al,0xa
   1400142d7:	add    BYTE PTR [rip+0x17f01952],bl        # 0x157f15c2f
   1400142dd:	loopne 0x1400142f4
   1400142df:	rol    BYTE PTR [rcx],0x17
   1400142e2:	add    eax,0x13621700
   1400142e7:	jo     0x1400142fb
   1400142e9:	(bad)  
   1400142ea:	adc    DWORD PTR [rax+0x10],edx
   1400142ed:	xor    BYTE PTR [rax],al
   1400142ef:	add    BYTE PTR [rcx],al
   1400142f1:	or     al,BYTE PTR [rax+rax*1]
   1400142f4:	or     dh,BYTE PTR [rsi+rax*1]
   1400142f7:	add    BYTE PTR [rdx],cl
   1400142f9:	xor    al,BYTE PTR [rsi]
   1400142fb:	(bad)  
   1400142fc:	add    DWORD PTR [rip+0x741d000c],ebx        # 0x1b41e430e
   140014302:	adc    eax,DWORD PTR [rax]
   140014304:	sbb    eax,0x1d001264
   140014309:	push   rsp
   14001430a:	adc    DWORD PTR [rax],eax
   14001430c:	sbb    eax,0x1d001034
   140014311:	mov    dl,0x19
   140014313:	lock (bad) 
   140014315:	loopne 0x14001432c
   140014317:	rol    BYTE PTR [rcx],0x7
   14001431a:	add    DWORD PTR [rax],eax
   14001431c:	(bad)  
   14001431d:	ret    0x0
   140014320:	add    DWORD PTR [rax],ecx
   140014322:	add    al,BYTE PTR [rax]
   140014324:	or     BYTE PTR [rdx+0x10013004],dh
   14001432a:	(bad)  
   14001432b:	add    BYTE PTR [rax],dl
   14001432d:	fs or  al,0x0
   140014330:	adc    BYTE PTR [rbx+rcx*1+0x0],dl
   140014334:	adc    BYTE PTR [rdx+0xc],dh
   140014337:	loopne 0x14001433a
   140014339:	sbb    BYTE PTR [rdx],cl
   14001433b:	add    BYTE PTR [rax],bl
   14001433d:	fs (bad) 
   14001433f:	add    BYTE PTR [rax],bl
   140014341:	push   rsp
   140014342:	or     eax,0xc341800
   140014347:	add    BYTE PTR [rax],bl
   140014349:	jb     0x14001435f
   14001434b:	lock adc ah,al
   14001434e:	adc    BYTE PTR [rax+0x1],dh
   140014351:	clts   
   140014353:	add    BYTE PTR [rdi],cl
   140014355:	push   rsp
   140014356:	(bad)  
   140014357:	add    BYTE PTR [rdi],cl
   140014359:	xor    al,0x6
   14001435b:	add    BYTE PTR [rdi],cl
   14001435d:	xor    cl,BYTE PTR [rbx]
   14001435f:	jo     0x140014362
   140014361:	clts   
   140014363:	add    BYTE PTR [rdi],cl
   140014365:	or     DWORD PTR fs:[rax],eax
   140014368:	sysenter 
   14001436a:	or     BYTE PTR [rax],al
   14001436c:	rsqrtps xmm1,XMMWORD PTR [rbx]
   14001436f:	jo     0x140014372
   140014371:	sbb    al,0xc
   140014373:	add    BYTE PTR [rsp+riz*2],bl
   140014376:	or     al,0x0
   140014378:	sbb    al,0x54
   14001437a:	or     eax,DWORD PTR [rax]
   14001437c:	sbb    al,0x34
   14001437e:	or     al,BYTE PTR [rax]
   140014380:	sbb    al,0x32
   140014382:	sbb    al,dh
   140014384:	(bad)  
   140014385:	loopne 0x14001439b
   140014387:	rcl    BYTE PTR [rdx],1
   140014389:	rcl    BYTE PTR [rax],0x70
   14001438c:	add    DWORD PTR [rax+rcx*1],edx
   14001438f:	add    BYTE PTR [rsp+riz*2],dl
   140014392:	or     al,BYTE PTR [rax]
   140014394:	adc    al,0x54
   140014396:	or     DWORD PTR [rax],eax
   140014398:	adc    al,0x34
   14001439a:	or     BYTE PTR [rax],al
   14001439c:	adc    al,0x52
   14001439e:	adc    BYTE PTR [rax+0x1],dh
   1400143a1:	sbb    BYTE PTR [rdx],cl
   1400143a3:	add    BYTE PTR [rax],bl
   1400143a5:	fs (bad) 
   1400143a7:	add    BYTE PTR [rax],bl
   1400143a9:	push   rsp
   1400143aa:	or     eax,0xc341800
   1400143af:	add    BYTE PTR [rax],bl
   1400143b1:	jb     0x1400143c7
   1400143b3:	loopne 0x1400143c7
   1400143b5:	rcl    BYTE PTR [rax],0x70
   1400143b8:	or     DWORD PTR [rip+0x74150008],edx        # 0x1b41643c6
   1400143be:	or     al,BYTE PTR [rax]
   1400143c0:	adc    eax,0x15000964
   1400143c5:	xor    al,0x8
   1400143c7:	add    BYTE PTR [rip+0x36f01152],dl        # 0x176f1551f
   1400143cd:	sbb    eax,DWORD PTR [rcx]
   1400143cf:	add    BYTE PTR [rcx],al
   1400143d1:	add    BYTE PTR [rax],al
   1400143d3:	add    BYTE PTR [rip+0x7b000116],dl        # 0x1bb0144ef
   1400143d9:	(bad)  
   1400143da:	add    DWORD PTR [rax],eax
   1400143dc:	(bad)  
   1400143dd:	(bad)  
   1400143de:	add    DWORD PTR [rax],eax
   1400143e0:	jnp    0x1400143f9
   1400143e2:	add    DWORD PTR [rax],eax
   1400143e4:	add    BYTE PTR [rax],al
   1400143e6:	add    BYTE PTR [rax],al
   1400143e8:	add    DWORD PTR [rax],eax
   1400143ea:	add    BYTE PTR [rax],al
   1400143ec:	or     DWORD PTR [rcx+rax*1],eax
   1400143ef:	add    BYTE PTR [rdx+riz*1],al
   1400143f2:	add    BYTE PTR [rax],al
   1400143f4:	sbb    eax,DWORD PTR ss:[rcx]
   1400143f7:	add    BYTE PTR [rcx],al
   1400143f9:	add    BYTE PTR [rax],al
   1400143fb:	add    ah,cl
   1400143fd:	sbb    BYTE PTR [rcx],al
   1400143ff:	add    BYTE PTR [rdx],al
   140014401:	sbb    DWORD PTR [rcx],eax
   140014403:	add    BYTE PTR [rcx],al
   140014405:	add    BYTE PTR [rax],al
   140014407:	add    BYTE PTR [rdx],al
   140014409:	sbb    DWORD PTR [rcx],eax
   14001440b:	add    BYTE PTR [rcx],cl
   14001440d:	or     al,BYTE PTR [rax+rax*1]
   140014410:	or     dh,BYTE PTR [rsi+rax*1]
   140014413:	add    BYTE PTR [rdx],cl
   140014415:	xor    al,BYTE PTR [rsi]
   140014417:	jo     0x14001444f
   140014419:	sbb    eax,DWORD PTR [rcx]
   14001441b:	add    BYTE PTR [rcx],al
   14001441d:	add    BYTE PTR [rax],al
   14001441f:	add    ch,cl
   140014421:	sbb    DWORD PTR [rcx],eax
   140014423:	add    BYTE PTR [rax],al
   140014425:	sbb    al,BYTE PTR [rcx]
   140014427:	add    al,dh
   140014429:	(bad)  
   14001442a:	add    DWORD PTR [rax],eax
   14001442c:	add    BYTE PTR [rdx],bl
   14001442e:	add    DWORD PTR [rax],eax
   140014430:	add    DWORD PTR [rsi],eax
   140014432:	add    al,BYTE PTR [rax]
   140014434:	(bad)  
   140014435:	xor    al,BYTE PTR [rdx]
   140014437:	push   rax
   140014438:	add    DWORD PTR [rip+0x340d0004],ecx        # 0x1740e4442
   14001443e:	or     DWORD PTR [rax],eax
   140014440:	or     eax,0x1500632
   140014445:	or     al,0x2
   140014447:	add    BYTE PTR [rcx+rax*1],cl
   14001444a:	adc    DWORD PTR [rax],eax
   14001444c:	add    BYTE PTR [rax],al
   14001444e:	add    BYTE PTR [rax],al
   140014450:	add    DWORD PTR [rax],eax
   140014452:	add    BYTE PTR [rax],al
   140014454:	add    DWORD PTR [rdx],eax
   140014456:	add    DWORD PTR [rax],eax
   140014458:	add    dh,BYTE PTR [rax]
   14001445a:	add    BYTE PTR [rax],al
   14001445c:	add    BYTE PTR [rax],al
   14001445e:	add    BYTE PTR [rax],al
   140014460:	add    DWORD PTR [rcx+rax*1],eax
   140014463:	add    BYTE PTR [rdx+rdx*1],al
   140014466:	add    BYTE PTR [rax],al
   140014468:	add    al,BYTE PTR [rax]
   14001446a:	add    BYTE PTR [rax],al
   14001446c:	test   al,0x44
   14001446e:	add    DWORD PTR [rax],eax
   140014470:	add    BYTE PTR [rcx+rax*1+0x0],0x0
	...
   14001447d:	add    BYTE PTR [rax],al
   14001447f:	add    BYTE PTR [rcx],al
   140014481:	add    BYTE PTR [rax],al
   140014483:	add    BYTE PTR [rax],al
   140014485:	rol    BYTE PTR [rcx],0x0
   140014488:	add    BYTE PTR [rax],al
   14001448a:	add    BYTE PTR [rax],al
   14001448c:	(bad)  
   14001448d:	(bad)  
   14001448e:	(bad)  
   14001448f:	inc    DWORD PTR [rax]
   140014491:	add    BYTE PTR [rax],al
   140014493:	add    BYTE PTR [rax],cl
	...
   1400144a5:	add    BYTE PTR [rax],al
   1400144a7:	add    BYTE PTR [rcx],al
   1400144a9:	add    BYTE PTR [rax],al
   1400144ab:	add    BYTE PTR [rax],bl
   1400144ad:	rol    BYTE PTR [rcx],0x0
   1400144b0:	add    BYTE PTR [rax],al
   1400144b2:	add    BYTE PTR [rax],al
   1400144b4:	(bad)  
   1400144b5:	(bad)  
   1400144b6:	(bad)  
   1400144b7:	inc    DWORD PTR [rax]
   1400144b9:	add    BYTE PTR [rax],al
   1400144bb:	add    BYTE PTR [rax],cl
	...
   1400144d9:	add    BYTE PTR [rax],al
   1400144db:	add    BYTE PTR [rax+0x44],ch
   1400144de:	add    DWORD PTR [rax],eax
	...
   1400144f4:	cld    
   1400144f5:	mov    ecx,0x574f
   1400144fa:	add    BYTE PTR [rax],al
   1400144fc:	adc    BYTE PTR [rcx+rax*1+0x0],bl
   140014500:	add    DWORD PTR [rax],eax
   140014502:	add    BYTE PTR [rax],al
   140014504:	rex.WR add r8b,BYTE PTR [rax]
   140014507:	add    BYTE PTR [rdx+rax*1+0x0],cl
   14001450b:	add    BYTE PTR [rax],bl
   14001450d:	add    DWORD PTR [r8],r8d
   140014510:	rex.W
   140014511:	rex.WRX add QWORD PTR [rax],r8
   140014514:	js     0x14001456d
   140014516:	add    DWORD PTR [rax],eax
   140014518:	jo     0x14001452a
   14001451a:	add    BYTE PTR [rax],al
   14001451c:	push   rax
   14001451d:	adc    BYTE PTR [rax],al
   14001451f:	add    BYTE PTR [rax+0x40000023],al
   140014525:	(bad)  
   140014526:	add    BYTE PTR [rax],al
   140014528:	and    BYTE PTR [rax],ah
   14001452a:	add    BYTE PTR [rax],al
   14001452c:	nop
   14001452d:	(bad)  
   14001452e:	add    BYTE PTR [rax],al
   140014530:	shr    BYTE PTR [rip+0x2ba00000],1        # 0x16ba14536
   140014536:	add    BYTE PTR [rax],al
   140014538:	shr    BYTE PTR [rip+0x2ba00000],1        # 0x16ba1453e
   14001453e:	add    BYTE PTR [rax],al
   140014540:	lock and eax,0x26500000
   140014546:	add    BYTE PTR [rax],al
   140014548:	shr    BYTE PTR [rax],1
   14001454a:	add    BYTE PTR [rax],al
   14001454c:	rex leave 
   14001454e:	add    BYTE PTR [rax],al
   140014550:	and    BYTE PTR [rax],ah
   140014552:	add    BYTE PTR [rax],al
   140014554:	nop
   140014555:	(bad)  
   140014556:	add    BYTE PTR [rax],al
   140014558:	and    BYTE PTR [rax],ah
   14001455a:	add    BYTE PTR [rax],al
   14001455c:	nop
   14001455d:	(bad)  
   14001455e:	add    BYTE PTR [rax],al
   140014560:	nop
   140014561:	test   DWORD PTR [rax],0x176000
   140014567:	add    BYTE PTR [rax],al
   140014569:	(bad)  
   14001456a:	add    BYTE PTR [rax],al
   14001456c:	and    BYTE PTR [rdi],dl
   14001456e:	add    BYTE PTR [rax],al
   140014570:	mov    al,0x16
   140014572:	add    BYTE PTR [rax],al
   140014574:	push   rax
   140014575:	adc    BYTE PTR [rax],al
   140014577:	add    BYTE PTR [rax+0x10],dl
   14001457a:	add    BYTE PTR [rax],al
   14001457c:	push   rax
   14001457d:	adc    BYTE PTR [rax],al
   14001457f:	add    BYTE PTR [rax],dl
   140014581:	cmp    BYTE PTR [rax],al
   140014583:	add    BYTE PTR [rax],dl
   140014585:	adc    DWORD PTR [rax],eax
   140014587:	add    al,dl
   140014589:	add    eax,DWORD PTR [rcx]
   14001458b:	add    BYTE PTR [rax+0x102],ah
   140014591:	add    eax,DWORD PTR [rcx]
   140014593:	add    BYTE PTR [rax+0x3],dh
   140014596:	add    DWORD PTR [rax],eax
   140014598:	push   rax
   140014599:	add    al,BYTE PTR [rcx]
   14001459b:	add    BYTE PTR [rax+0x10],dl
   14001459e:	add    BYTE PTR [rax],al
   1400145a0:	push   rax
   1400145a1:	adc    BYTE PTR [rax],al
   1400145a3:	add    BYTE PTR [rax+0x10],dl
   1400145a6:	add    BYTE PTR [rax],al
   1400145a8:	rex adc DWORD PTR [rax],eax
   1400145ab:	add    BYTE PTR [rax],dl
   1400145ad:	adc    DWORD PTR [rax],eax
   1400145af:	add    al,dh
   1400145b1:	and    eax,0x25400000
   1400145b6:	add    BYTE PTR [rax],al
   1400145b8:	nop
   1400145b9:	adc    BYTE PTR [rax],al
   1400145bb:	add    al,al
   1400145bd:	and    eax,DWORD PTR [rax]
   1400145bf:	add    BYTE PTR [rax-0x5fffffe2],ah
   1400145c5:	(bad)  
   1400145c6:	add    BYTE PTR [rax],al
   1400145c8:	movabs al,ds:0x6000001ea000001e
   1400145d1:	and    eax,0x2af00000
   1400145d6:	add    BYTE PTR [rax],al
   1400145d8:	loopne 0x1400145a6
   1400145da:	add    BYTE PTR [rax],al
   1400145dc:	movabs al,ds:0xc000001ea000001e
   1400145e5:	test   DWORD PTR [rax],0x109000
   1400145eb:	add    BYTE PTR [rax+0x50000010],dl
   1400145f1:	or     DWORD PTR [rcx],eax
   1400145f3:	add    BYTE PTR [rax+0x60000010],dl
   1400145f9:	and    eax,0x16400000
   1400145fe:	add    BYTE PTR [rax],al
   140014600:	rex (bad) 
   140014602:	add    BYTE PTR [rax],al
   140014604:	rex (bad) 
   140014606:	add    BYTE PTR [rax],al
   140014608:	rex (bad) 
   14001460a:	add    BYTE PTR [rax],al
   14001460c:	rex (bad) 
   14001460e:	add    BYTE PTR [rax],al
   140014610:	rex (bad) 
   140014612:	add    BYTE PTR [rax],al
   140014614:	rex (bad) 
   140014616:	add    BYTE PTR [rax],al
   140014618:	rex (bad) 
   14001461a:	add    BYTE PTR [rax],al
   14001461c:	rex (bad) 
   14001461e:	add    BYTE PTR [rax],al
   140014620:	rex (bad) 
   140014622:	add    BYTE PTR [rax],al
   140014624:	rex (bad) 
   140014626:	add    BYTE PTR [rax],al
   140014628:	rex (bad) 
   14001462a:	add    BYTE PTR [rax],al
   14001462c:	rex (bad) 
   14001462e:	add    BYTE PTR [rax],al
   140014630:	rex (bad) 
   140014632:	add    BYTE PTR [rax],al
   140014634:	rex (bad) 
   140014636:	add    BYTE PTR [rax],al
   140014638:	rex (bad) 
   14001463a:	add    BYTE PTR [rax],al
   14001463c:	rex (bad) 
   14001463e:	add    BYTE PTR [rax],al
   140014640:	rex (bad) 
   140014642:	add    BYTE PTR [rax],al
   140014644:	movabs al,ds:0xf000010af0000037
   14001464d:	adc    BYTE PTR [rax],al
   14001464f:	add    BYTE PTR [rax],dl
   140014651:	and    eax,0x16400000
   140014656:	add    BYTE PTR [rax],al
   140014658:	and    BYTE PTR [rax],ah
   14001465a:	add    BYTE PTR [rax],al
   14001465c:	shr    BYTE PTR [rip+0x2dd00000],1        # 0x16dd14662
   140014662:	add    BYTE PTR [rax],al
   140014664:	lock and eax,0x20200000
   14001466a:	add    BYTE PTR [rax],al
   14001466c:	and    BYTE PTR [rax],ah
   14001466e:	add    BYTE PTR [rax],al
   140014670:	and    BYTE PTR [rdx],cl
   140014672:	add    DWORD PTR [rax],eax
   140014674:	loopne 0x14001467f
   140014676:	add    DWORD PTR [rax],eax
   140014678:	sbb    BYTE PTR [rax+rax*1],0x0
   14001467c:	(bad)  
   14001467d:	sbb    eax,DWORD PTR [rax]
   14001467f:	add    BYTE PTR [rax+0x16],al
   140014682:	add    BYTE PTR [rax],al
   140014684:	nop
   140014685:	or     DWORD PTR [rcx],eax
   140014687:	add    BYTE PTR [rax+0x16],al
   14001468a:	add    BYTE PTR [rax],al
   14001468c:	lock and eax,0x27c00000
   140014692:	add    BYTE PTR [rax],al
   140014694:	mov    al,0x27
   140014696:	add    BYTE PTR [rax],al
   140014698:	lock cli 
   14001469a:	add    BYTE PTR [rax],al
   14001469c:	sbb    BYTE PTR [rax],al
   14001469f:	add    al,dl
   1400146a1:	(bad)  
   1400146a2:	add    BYTE PTR [rax],al
   1400146a4:	and    BYTE PTR [rax],bl
   1400146a6:	add    BYTE PTR [rax],al
   1400146a8:	sar    BYTE PTR [rcx],0x0
   1400146ab:	add    BYTE PTR [rax+0x39],dl
   1400146ae:	add    BYTE PTR [rax],al
   1400146b0:	nop
   1400146b1:	cmp    DWORD PTR [rax],eax
   1400146b3:	add    BYTE PTR [rax+0x5],dl
   1400146b6:	add    DWORD PTR [rax],eax
   1400146b8:	mov    al,0x4
   1400146ba:	add    DWORD PTR [rax],eax
   1400146bc:	adc    BYTE PTR [rip+0x4e00001],al        # 0x144e146c3
   1400146c2:	add    DWORD PTR [rax],eax
   1400146c4:	xor    BYTE PTR [rip+0x13900001],al        # 0x1539146cb
   1400146ca:	add    BYTE PTR [rax],al
   1400146cc:	rcl    BYTE PTR [rbx],1
   1400146ce:	add    BYTE PTR [rax],al
   1400146d0:	adc    BYTE PTR [rbx],dl
   1400146d2:	add    BYTE PTR [rax],al
   1400146d4:	push   rax
   1400146d5:	adc    eax,DWORD PTR [rax]
   1400146d7:	add    BYTE PTR [rax+0x14],ah
   1400146da:	add    BYTE PTR [rax],al
   1400146dc:	add    BYTE PTR [rax+rax*1],dl
   1400146df:	add    BYTE PTR [rax+0x30000014],ah
   1400146e5:	adc    al,0x0
   1400146e7:	add    al,dh
   1400146e9:	cmp    DWORD PTR [rax],eax
   1400146eb:	add    BYTE PTR [rax+0x3a],al
   1400146ee:	add    BYTE PTR [rax],al
   1400146f0:	and    BYTE PTR [rdx],bh
   1400146f2:	add    BYTE PTR [rax],al
   1400146f4:	cmp    BYTE PTR [rdx],0x0
   1400146f7:	add    BYTE PTR [rax+0x3a],ah
   1400146fa:	add    BYTE PTR [rax],al
   1400146fc:	lock out 0x0,al
   1400146ff:	add    al,dl
   140014701:	rol    DWORD PTR [rax],cl
   140014703:	add    BYTE PTR [rax+0x3000010c],dl
   140014709:	(bad)  
   14001470a:	add    DWORD PTR [rax],eax
   14001470c:	(bad)  
   14001470d:	jmp    0x14001470f
   14001470f:	add    BYTE PTR [rax],dh
   140014711:	in     al,dx
   140014712:	add    BYTE PTR [rax],al
   140014714:	movabs al,ds:0xd5d00000d4
   14001471d:	xlat   BYTE PTR ds:[rbx]
   14001471e:	add    BYTE PTR [rax],al
   140014720:	out    0x0,al
   140014723:	add    BYTE PTR [rax],ah
   140014725:	or     eax,DWORD PTR [rcx]
   140014727:	add    al,dl
   140014729:	or     eax,DWORD PTR [rcx]
   14001472b:	add    BYTE PTR [rax],ah
   14001472d:	in     eax,0x0
   14001472f:	add    al,ah
   140014731:	(bad)  
   140014732:	add    BYTE PTR [rax],al
   140014734:	lock (bad) 
   140014736:	add    BYTE PTR [rax],al
   140014738:	ror    BYTE PTR [rdx],1
   14001473a:	add    DWORD PTR [rax],eax
   14001473c:	and    BYTE PTR [rax],ch
   14001473e:	add    BYTE PTR [rax],al
   140014740:	push   rax
   140014741:	sub    BYTE PTR [rax],al
   140014743:	add    BYTE PTR [rax],al
   140014745:	and    eax,0x23700000
   14001474a:	add    BYTE PTR [rax],al
   14001474c:	movabs al,ds:0xc000003780000031
   140014755:	sub    eax,0x27a00000
   14001475a:	add    BYTE PTR [rax],al
   14001475c:	loopne 0x140014788
   14001475e:	add    BYTE PTR [rax],al
   140014760:	adc    BYTE PTR [rax],ah
   140014762:	add    BYTE PTR [rax],al
   140014764:	mov    al,0x22
   140014766:	add    BYTE PTR [rax],al
   140014768:	push   rax
   140014769:	sbb    al,BYTE PTR [rax]
   14001476b:	add    al,dh
   14001476d:	cmp    al,0x0
   14001476f:	add    BYTE PTR [rax-0x8],dh
   140014772:	add    BYTE PTR [rax],al
   140014774:	shl    BYTE PTR [rip+0x1ea00000],0x0        # 0x15ea1477b
   14001477b:	add    BYTE PTR [rax-0x3fffffe2],ah
   140014781:	xor    BYTE PTR [rax],al
   140014783:	add    BYTE PTR [rax+0x10000036],ah
   140014789:	sub    eax,0x27000000
   14001478e:	add    BYTE PTR [rax],al
   140014790:	loopne 0x1400147b9
   140014792:	add    BYTE PTR [rax],al
   140014794:	movabs al,ds:0xa000001ea000001e
   14001479d:	(bad)  
   14001479e:	add    BYTE PTR [rax],al
   1400147a0:	movabs al,ds:0xf00000306000001e
   1400147a9:	xor    eax,0x2ce00000
   1400147ae:	add    BYTE PTR [rax],al
   1400147b0:	lock add BYTE PTR es:[rax],al
   1400147b4:	add    BYTE PTR [rdx],ch
   1400147b6:	add    BYTE PTR [rax],al
   1400147b8:	movabs al,ds:0x6000001ea000001e
   1400147c1:	sbb    DWORD PTR [rax],eax
   1400147c3:	add    BYTE PTR [rax],ah
   1400147c5:	sbb    DWORD PTR [rax],eax
   1400147c7:	add    BYTE PTR [rax],ah
   1400147c9:	cmp    eax,DWORD PTR [rax]
   1400147cb:	add    BYTE PTR [rax-0xfffffc6],dh
   1400147d1:	cmp    al,BYTE PTR [rax]
   1400147d3:	add    BYTE PTR [rax+0x7],dl
   1400147d6:	add    DWORD PTR [rax],eax
   1400147d8:	xor    BYTE PTR [rsi],al
   1400147da:	add    DWORD PTR [rax],eax
   1400147dc:	rol    BYTE PTR [rsi],1
   1400147de:	add    DWORD PTR [rax],eax
   1400147e0:	add    BYTE PTR [rsi],0x1
   1400147e3:	add    BYTE PTR [rax],dl
   1400147e5:	(bad)  
   1400147e6:	add    DWORD PTR [rax],eax
   1400147e8:	push   rax
   1400147e9:	adc    eax,0x14e00000
   1400147ee:	add    BYTE PTR [rax],al
   1400147f0:	and    BYTE PTR [rip+0x15500000],dl        # 0x1555147f6
   1400147f6:	add    BYTE PTR [rax],al
   1400147f8:	adc    BYTE PTR [rip+0x15e00000],0x0        # 0x155e147ff
   1400147ff:	add    BYTE PTR [rax+0x10000015],dh
   140014805:	(bad)  
   140014806:	add    BYTE PTR [rax],al
   140014808:	lock loop 0x14001480b
   14001480b:	add    al,dl
   14001480d:	call   0x120a14812
   140014812:	add    BYTE PTR [rax],al
   140014814:	jo     0x140014803
   140014816:	add    BYTE PTR [rax],al
   140014818:	push   rax
   140014819:	cmp    eax,DWORD PTR [rax]
   14001481b:	add    BYTE PTR [rax+0x6000003b],dl
   140014821:	fadd   DWORD PTR [rax]
   140014823:	add    BYTE PTR [rax],ah
   140014825:	cmp    al,0x0
   140014827:	add    BYTE PTR [rax-0x2fffff28],ah
   14001482d:	xlat   BYTE PTR ds:[rbx]
   14001482e:	add    BYTE PTR [rax],al
   140014830:	jo     0x14001486e
   140014832:	add    BYTE PTR [rax],al
   140014834:	lock xlat BYTE PTR ds:[rbx]
   140014836:	add    BYTE PTR [rax],al
   140014838:	sar    BYTE PTR [rbx],0x0
   14001483b:	add    al,dh
   14001483d:	cmp    eax,DWORD PTR [rax]
   14001483f:	add    BYTE PTR [rax+0x500000fb],dh
   140014845:	sti    
   140014846:	add    BYTE PTR [rax],al
   140014848:	nop
   140014849:	cli    
   14001484a:	add    BYTE PTR [rax],al
   14001484c:	rex jmp 0x178314852
   140014852:	add    BYTE PTR [rax],al
   140014854:	jo     0x14001488e
   140014856:	add    BYTE PTR [rax],al
   140014858:	adc    BYTE PTR [rcx],0x0
   14001485b:	add    al,al
   14001485d:	adc    DWORD PTR [rax],eax
   14001485f:	add    BYTE PTR [rax-0xfffffc8],dh
   140014865:	cmp    BYTE PTR [rax],al
   140014867:	add    BYTE PTR [rax],al
   140014869:	adc    al,BYTE PTR [rax]
   14001486b:	add    BYTE PTR [rax+0x12],al
   14001486e:	add    BYTE PTR [rax],al
   140014870:	nop
   140014871:	fild   DWORD PTR [rax]
   140014873:	add    BYTE PTR [rax-0x5fffff10],dh
   140014879:	test   BYTE PTR [rax],0x0
   14001487c:	rcr    BYTE PTR [rax],1
   14001487e:	add    BYTE PTR [rax],al
   140014880:	(bad)  
   140014881:	sbb    BYTE PTR [rax],al
   140014883:	add    BYTE PTR [rax-0x1fffffe8],dh
   140014889:	out    0x0,eax
   14001488b:	add    al,dh
   14001488d:	sbb    DWORD PTR [rax],eax
   14001488f:	add    BYTE PTR [rax-0x6fffffe7],dh
   140014895:	or     al,BYTE PTR [rcx]
   140014897:	add    al,dh
   140014899:	sbb    al,BYTE PTR [rax]
   14001489b:	add    BYTE PTR [rax-0x1b],dh
   14001489e:	add    BYTE PTR [rax],al
   1400148a0:	add    BYTE PTR [rbx],bl
   1400148a2:	add    BYTE PTR [rax],al
   1400148a4:	shl    ch,1
   1400148a6:	add    BYTE PTR [rax],al
   1400148a8:	adc    BYTE PTR [rbx],bl
   1400148aa:	add    BYTE PTR [rax],al
   1400148ac:	loopne 0x14001488d
   1400148ae:	add    BYTE PTR [rax],al
   1400148b0:	lock (bad) 
   1400148b2:	add    BYTE PTR [rax],al
   1400148b4:	xor    bl,ch
   1400148b6:	add    BYTE PTR [rax],al
   1400148b8:	and    cl,bh
   1400148ba:	add    BYTE PTR [rax],al
   1400148bc:	mov    al,0x1b
   1400148be:	add    BYTE PTR [rax],al
   1400148c0:	mov    al,0xfe
   1400148c2:	add    BYTE PTR [rax],al
   1400148c4:	add    ch,bh
   1400148c6:	add    BYTE PTR [rax],al
   1400148c8:	mov    al,0xfd
   1400148ca:	add    BYTE PTR [rax],al
   1400148cc:	xor    dl,bh
   1400148ce:	add    BYTE PTR [rax],al
   1400148d0:	lock and al,0x0
   1400148d3:	add    BYTE PTR [rax+0x23],ah
   1400148d6:	add    BYTE PTR [rax],al
   1400148d8:	nop
   1400148d9:	xor    DWORD PTR [rax],eax
   1400148db:	add    BYTE PTR [rax+0x37],dh
   1400148de:	add    BYTE PTR [rax],al
   1400148e0:	mov    al,0x2d
   1400148e2:	add    BYTE PTR [rax],al
   1400148e4:	nop
   1400148e5:	(bad)  
   1400148e6:	add    BYTE PTR [rax],al
   1400148e8:	shr    BYTE PTR [rdx],1
   1400148ea:	add    BYTE PTR [rax],al
   1400148ec:	add    BYTE PTR [rax],ah
   1400148ee:	add    BYTE PTR [rax],al
   1400148f0:	movabs al,ds:0x2000002470000022
   1400148f9:	and    eax,DWORD PTR [rax]
   1400148fb:	add    BYTE PTR [rax],dl
   1400148fd:	xor    DWORD PTR [rax],eax
   1400148ff:	add    al,dh
   140014901:	add    BYTE PTR ss:[rax],al
   140014904:	xor    BYTE PTR [rip+0x27100000],ch        # 0x16711490a
   14001490a:	add    BYTE PTR [rax],al
   14001490c:	push   rax
   14001490d:	sub    al,BYTE PTR [rax]
   14001490f:	add    BYTE PTR [rax+0x2000001f],al
   140014915:	and    al,BYTE PTR [rax]
   140014917:	add    BYTE PTR [rax-0xfffffe4],ah
   14001491d:	sbb    al,0x0
   14001491f:	add    BYTE PTR [rax+0x1],ah
   140014922:	add    DWORD PTR [rax],eax
   140014924:	jo     0x14001494a
   140014926:	add    BYTE PTR [rax],al
   140014928:	shl    BYTE PTR [rdx],1
   14001492a:	add    BYTE PTR [rax],al
   14001492c:	adc    BYTE PTR [rcx],dh
   14001492e:	add    BYTE PTR [rax],al
   140014930:	lock add BYTE PTR ss:[rax],al
   140014934:	xor    BYTE PTR [rip+0x27100000],ch        # 0x16711493a
   14001493a:	add    BYTE PTR [rax],al
   14001493c:	push   rax
   14001493d:	sub    al,BYTE PTR [rax]
   14001493f:	add    BYTE PTR [rax+0x2000001f],al
   140014945:	and    al,BYTE PTR [rax]
   140014947:	add    al,ah
   140014949:	inc    DWORD PTR [rax]
   14001494b:	add    BYTE PTR [rax+0x1d],dl
   14001494e:	add    BYTE PTR [rax],al
   140014950:	and    ah,bh
   140014952:	add    BYTE PTR [rax],al
   140014954:	adc    cl,ah
   140014956:	add    BYTE PTR [rax],al
   140014958:	xor    ah,0x0
   14001495b:	add    BYTE PTR [rax+0xa],dh
   14001495e:	add    DWORD PTR [rax],eax
   140014960:	adc    BYTE PTR [rcx],cl
   140014962:	add    DWORD PTR [rax],eax
   140014964:	mov    al,0x17
   140014966:	add    BYTE PTR [rax],al
   140014968:	jo     0x14001497b
   14001496a:	add    BYTE PTR [rax],al
   14001496c:	jo     0x140014972
   14001496e:	add    DWORD PTR [rax],eax
   140014970:	jo     0x140014983
   140014972:	add    BYTE PTR [rax],al
   140014974:	shl    BYTE PTR [rdx],0x0
   140014977:	add    al,al
   140014979:	and    al,BYTE PTR [rax]
   14001497b:	add    BYTE PTR [rax],al
   14001497d:	xor    BYTE PTR [rax],al
   14001497f:	add    BYTE PTR [rax],al
   140014981:	xor    BYTE PTR [rax],al
   140014983:	add    BYTE PTR [rax-0x3fffffd4],dh
   140014989:	and    al,BYTE PTR [rax]
   14001498b:	add    al,al
   14001498d:	and    al,BYTE PTR [rax]
   14001498f:	add    BYTE PTR [rax],dh
   140014991:	(bad)  
   140014992:	add    BYTE PTR [rax],al
   140014994:	lock and BYTE PTR [rax],al
   140014997:	add    al,al
   140014999:	and    al,BYTE PTR [rax]
   14001499b:	add    al,al
   14001499d:	and    al,BYTE PTR [rax]
   14001499f:	add    BYTE PTR [rax+0x30],al
   1400149a2:	add    BYTE PTR [rax],al
   1400149a4:	xor    BYTE PTR [rax],al
   1400149a7:	add    al,dl
   1400149a9:	sub    al,0x0
   1400149ab:	add    al,al
   1400149ad:	and    al,BYTE PTR [rax]
   1400149af:	add    al,al
   1400149b1:	and    al,BYTE PTR [rax]
   1400149b3:	add    BYTE PTR [rax+0x1f],ah
   1400149b6:	add    BYTE PTR [rax],al
   1400149b8:	lock and DWORD PTR [rax],eax
   1400149bb:	add    BYTE PTR [rax-0x1fffffc9],dl
   1400149c1:	adc    BYTE PTR [rax],al
   1400149c3:	add    BYTE PTR [rax-0x1fffffe9],ah
   1400149c9:	adc    BYTE PTR [rax],al
   1400149cb:	add    BYTE PTR [rax+0x4],ah
   1400149ce:	add    DWORD PTR [rax],eax
   1400149d0:	shl    BYTE PTR [rdx],0x0
   1400149d3:	add    al,al
   1400149d5:	and    al,BYTE PTR [rax]
   1400149d7:	add    al,ah
   1400149d9:	(bad)  
   1400149da:	add    BYTE PTR [rax],al
   1400149dc:	nop
   1400149dd:	xor    eax,0x2ca00000
   1400149e2:	add    BYTE PTR [rax],al
   1400149e4:	shl    BYTE PTR [rdx],0x0
   1400149e7:	add    al,al
   1400149e9:	and    al,BYTE PTR [rax]
   1400149eb:	add    BYTE PTR [rax],dh
   1400149ed:	(bad)  
   1400149ee:	add    BYTE PTR [rax],al
   1400149f0:	lock and BYTE PTR [rax],al
   1400149f3:	add    al,al
   1400149f5:	and    al,BYTE PTR [rax]
   1400149f7:	add    al,al
   1400149f9:	and    al,BYTE PTR [rax]
   1400149fb:	add    BYTE PTR [rax],ah
   1400149fd:	xor    BYTE PTR [rax],al
   1400149ff:	add    al,al
   140014a01:	xor    eax,0x2cc00000
   140014a06:	add    BYTE PTR [rax],al
   140014a08:	shl    BYTE PTR [rdx],0x0
   140014a0b:	add    al,al
   140014a0d:	and    al,BYTE PTR [rax]
   140014a0f:	add    BYTE PTR [rax+0x1f],ah
   140014a12:	add    BYTE PTR [rax],al
   140014a14:	lock and DWORD PTR [rax],eax
   140014a17:	add    BYTE PTR [rax-0x21],dl
   140014a1a:	add    BYTE PTR [rax],al
   140014a1c:	(bad)  
   140014a1d:	fiadd  WORD PTR [rax]
   140014a1f:	add    BYTE PTR [rax+0x50000025],ah
   140014a25:	cmp    eax,0x3d300000
   140014a2a:	add    BYTE PTR [rax],al
   140014a2c:	rex cmp eax,0x3db00000
   140014a32:	add    BYTE PTR [rax],al
   140014a34:	movabs al,ds:0x8000003d9000003d
   140014a3d:	cmp    eax,0x3d700000
   140014a42:	add    BYTE PTR [rax],al
   140014a44:	(bad)  
   140014a45:	cmp    eax,0x3d500000
   140014a4a:	add    BYTE PTR [rax],al
   140014a4c:	push   rax
   140014a4d:	cmp    eax,0x3d500000
   140014a52:	add    BYTE PTR [rax],al
   140014a54:	push   rax
   140014a55:	cmp    eax,0x3d300000
   140014a5a:	add    BYTE PTR [rax],al
   140014a5c:	xor    BYTE PTR [rip+0x3d300000],bh        # 0x17d314a62
   140014a62:	add    BYTE PTR [rax],al
   140014a64:	xor    BYTE PTR [rip+0x3d300000],bh        # 0x17d314a6a
   140014a6a:	add    BYTE PTR [rax],al
   140014a6c:	xor    BYTE PTR [rbx],bl
   140014a6e:	add    BYTE PTR [rax],al
   140014a70:	add    al,bh
   140014a72:	add    BYTE PTR [rax],al
   140014a74:	and    BYTE PTR [rsi],bl
   140014a76:	add    BYTE PTR [rax],al
   140014a78:	xor    BYTE PTR [rip+0x3d300000],bh        # 0x17d314a7e
   140014a7e:	add    BYTE PTR [rax],al
   140014a80:	push   rax
   140014a81:	cmp    eax,0x3d400000
   140014a86:	add    BYTE PTR [rax],al
   140014a88:	rex cmp eax,0x3d400000
   140014a8e:	add    BYTE PTR [rax],al
   140014a90:	xor    BYTE PTR [rip+0x3d300000],bh        # 0x17d314a96
   140014a96:	add    BYTE PTR [rax],al
   140014a98:	xor    BYTE PTR [rip+0x10800000],bh        # 0x150814a9e
   140014a9e:	add    DWORD PTR [rax],eax
   140014aa0:	movabs al,ds:0x800000164000001b
   140014aa9:	adc    al,BYTE PTR [rax]
   140014aab:	add    BYTE PTR [rax+0x10000012],dl
   140014ab1:	or     BYTE PTR [rcx],al
   140014ab3:	add    BYTE PTR [rax+0x60000012],al
   140014ab9:	or     BYTE PTR [rcx],al
   140014abb:	add    BYTE PTR [rax-0x6ffffef8],dl
   140014ac1:	adc    al,BYTE PTR [rax]
   140014ac3:	add    BYTE PTR [rax-0x3fffffee],dl
   140014ac9:	or     BYTE PTR [rcx],al
   140014acb:	add    BYTE PTR [rax-0x6fffffee],dl
   140014ad1:	sbb    eax,DWORD PTR [rax]
   140014ad3:	add    BYTE PTR [rax-0x3ffffff0],dh
   140014ad9:	adc    BYTE PTR [rax],al
   140014adb:	add    al,al
   140014add:	adc    BYTE PTR [rax],al
   140014adf:	add    al,al
   140014ae1:	adc    BYTE PTR [rax],al
   140014ae3:	add    al,al
   140014ae5:	adc    BYTE PTR [rax],al
   140014ae7:	add    BYTE PTR [rax-0x4fffffee],ah
   140014aed:	adc    BYTE PTR [rax],al
   140014aef:	add    BYTE PTR [rax-0x4ffffff0],dh
   140014af5:	adc    BYTE PTR [rax],al
   140014af7:	add    al,dh
   140014af9:	or     BYTE PTR [rcx],al
   140014afb:	add    BYTE PTR [rax-0x4ffffff0],dh
   140014b01:	adc    BYTE PTR [rax],al
   140014b03:	add    BYTE PTR [rax+0x60000010],dh
   140014b09:	adc    BYTE PTR [rcx],al
   140014b0b:	add    BYTE PTR [rax+0x10],dh
   140014b0e:	add    DWORD PTR [rax],eax
   140014b10:	sbb    al,BYTE PTR [rax]
   140014b13:	add    BYTE PTR [rax+0x3d],al
   140014b16:	add    BYTE PTR [rax],al
   140014b18:	rex cmp eax,0x3d500000
   140014b1e:	add    BYTE PTR [rax],al
   140014b20:	rex cmp eax,0x3d400000
   140014b26:	add    BYTE PTR [rax],al
   140014b28:	rex cmp eax,0x3d400000
   140014b2e:	add    BYTE PTR [rax],al
   140014b30:	rex cmp eax,0x3d400000
   140014b36:	add    BYTE PTR [rax],al
   140014b38:	shl    BYTE PTR [rbx],1
   140014b3a:	add    BYTE PTR [rax],al
   140014b3c:	movabs al,ds:0x2000002eb000001e
   140014b45:	xor    eax,DWORD PTR [rax]
   140014b47:	add    al,dh
   140014b49:	sub    eax,DWORD PTR [rax]
   140014b4b:	add    BYTE PTR [rax+0x30000026],ah
   140014b51:	sub    DWORD PTR [rax],eax
   140014b53:	add    BYTE PTR [rax+0x2000001e],dh
   140014b59:	and    DWORD PTR [rax],eax
   140014b5b:	add    al,ah
   140014b5d:	and    eax,DWORD PTR [rax]
   140014b5f:	add    al,al
   140014b61:	and    al,BYTE PTR [rax]
   140014b63:	add    BYTE PTR [rax+0x33],ah
   140014b66:	add    BYTE PTR [rax],al
   140014b68:	nop
   140014b69:	and    DWORD PTR [rax],eax
   140014b6b:	add    BYTE PTR [rax],dh
   140014b6d:	and    al,0x0
   140014b6f:	add    BYTE PTR [rax+0x1e],ah
   140014b75:	xor    eax,0x20d00000
   140014b7a:	add    BYTE PTR [rax],al
   140014b7c:	xor    BYTE PTR [rax+rax*1],ah
   140014b7f:	add    BYTE PTR [rax-0x5fffffe2],ah
   140014b85:	(bad)  
   140014b86:	add    BYTE PTR [rax],al
   140014b88:	movabs al,ds:0xe0000027e000002f
   140014b91:	and    eax,0x28b00000
   140014b96:	add    BYTE PTR [rax],al
   140014b98:	and    BYTE PTR [rdi],bl
   140014b9a:	add    BYTE PTR [rax],al
   140014b9c:	shl    BYTE PTR [rax],1
   140014b9e:	add    BYTE PTR [rax],al
   140014ba0:	push   rax
   140014ba1:	(bad)  
   140014ba2:	add    BYTE PTR [rax],al
   140014ba4:	rcr    BYTE PTR [rdx],0x0
   140014ba7:	add    BYTE PTR [rax+0x3d],al
   140014baa:	add    BYTE PTR [rax],al
   140014bac:	push   rax
   140014bad:	cmp    eax,0x3d500000
   140014bb2:	add    BYTE PTR [rax],al
   140014bb4:	push   rax
   140014bb5:	cmp    eax,0x3d500000
   140014bba:	add    BYTE PTR [rax],al
   140014bbc:	push   rax
   140014bbd:	cmp    eax,0x3d300000
   140014bc2:	add    BYTE PTR [rax],al
   140014bc4:	xor    BYTE PTR [rip+0x3d500000],bh        # 0x17d514bca
   140014bca:	add    BYTE PTR [rax],al
   140014bcc:	sub    BYTE PTR [rax],0x0
   140014bcf:	add    BYTE PTR [rax-0xfffffd8],dh
   140014bd5:	sbb    BYTE PTR [rax],al
   140014bd7:	add    BYTE PTR [rax],dh
   140014bd9:	cmp    DWORD PTR [rax],eax
   140014bdb:	add    BYTE PTR [rax],al
   140014bdd:	(bad)  
   140014bde:	add    DWORD PTR [rax],eax
   140014be0:	mov    al,0x12
   140014be2:	add    BYTE PTR [rax],al
   140014be4:	lock jmp 0x12a114bea
   140014bea:	add    BYTE PTR [rax],al
   140014bec:	rcl    BYTE PTR [rdx],1
   140014bee:	add    BYTE PTR [rax],al
   140014bf0:	rcl    BYTE PTR [rdx],1
   140014bf2:	add    BYTE PTR [rax],al
   140014bf4:	and    BYTE PTR [rcx],cl
   140014bf6:	add    DWORD PTR [rax],eax
   140014bf8:	jo     0x140014bed
   140014bfa:	add    BYTE PTR [rax],al
   140014bfc:	and    BYTE PTR [rcx],dl
   140014bfe:	add    DWORD PTR [rax],eax
   140014c00:	loopne 0x140014c13
   140014c02:	add    DWORD PTR [rax],eax
   140014c04:	sar    al,1
   140014c06:	add    BYTE PTR [rax],al
   140014c08:	jo     0x140014c06
   140014c0a:	add    BYTE PTR [rax],al
   140014c0c:	shl    BYTE PTR [rax+rax*1],0x0
   140014c10:	xor    BYTE PTR [rbx],ah
   140014c12:	add    BYTE PTR [rax],al
   140014c14:	(bad)  
   140014c15:	xor    DWORD PTR [rax],eax
   140014c17:	add    BYTE PTR [rax+0x37],al
   140014c1a:	add    BYTE PTR [rax],al
   140014c1c:	sub    BYTE PTR [rip+0x27600000],0x0        # 0x167614c23
   140014c23:	add    BYTE PTR [rax-0x2fffffd6],ah
   140014c29:	(bad)  
   140014c2a:	add    BYTE PTR [rax],al
   140014c2c:	jo     0x140014c50
   140014c2e:	add    BYTE PTR [rax],al
   140014c30:	and    BYTE PTR [rax+rax*1],0x0
   140014c34:	loopne 0x140014c58
   140014c36:	add    BYTE PTR [rax],al
   140014c38:	and    BYTE PTR [rcx],dh
   140014c3a:	add    BYTE PTR [rax],al
   140014c3c:	add    BYTE PTR [rdi],dh
   140014c3e:	add    BYTE PTR [rax],al
   140014c40:	rex sub eax,0x27200000
   140014c46:	add    BYTE PTR [rax],al
   140014c48:	(bad)  
   140014c49:	sub    al,BYTE PTR [rax]
   140014c4b:	add    BYTE PTR [rax+0x3000001f],dl
   140014c51:	and    al,BYTE PTR [rax]
   140014c53:	add    BYTE PTR [rax-0x6fffffe3],dl
   140014c59:	cmp    al,0x0
   140014c5b:	add    BYTE PTR [rax+0xf],ah
   140014c5e:	add    DWORD PTR [rax],eax
   140014c60:	adc    BYTE PTR [rsi],0x0
   140014c63:	add    BYTE PTR [rax+0x24],al
   140014c66:	add    BYTE PTR [rax],al
   140014c68:	rol    ah,0x0
   140014c6b:	add    BYTE PTR [rax+0x1f],dh
   140014c6e:	add    BYTE PTR [rax],al
   140014c70:	jo     0x140014c91
   140014c72:	add    BYTE PTR [rax],al
   140014c74:	jo     0x140014c95
   140014c76:	add    BYTE PTR [rax],al
   140014c78:	jo     0x140014c99
   140014c7a:	add    BYTE PTR [rax],al
   140014c7c:	and    al,0x0
   140014c7f:	add    BYTE PTR [rax],dh
   140014c81:	sub    al,BYTE PTR [rax]
   140014c83:	add    BYTE PTR [rax+0x1f],dh
   140014c86:	add    BYTE PTR [rax],al
   140014c88:	jo     0x140014ca9
   140014c8a:	add    BYTE PTR [rax],al
   140014c8c:	rcr    BYTE PTR [rip+0x10d00000],1        # 0x150d14c92
   140014c92:	add    BYTE PTR [rax],al
   140014c94:	adc    dl,cl
   140014c96:	add    BYTE PTR [rax],al
   140014c98:	sar    BYTE PTR [rax+rax*1],0x0
   140014c9c:	push   rax
   140014c9d:	(bad)  
   140014c9e:	add    BYTE PTR [rax],al
   140014ca0:	(bad)  
   140014ca1:	add    BYTE PTR ss:[rax],al
   140014ca4:	add    BYTE PTR [rax+rax*1],ah
   140014ca7:	add    al,al
   140014ca9:	and    al,BYTE PTR [rax]
   140014cab:	add    BYTE PTR [rax],ah
   140014cad:	(bad)  
   140014cae:	add    BYTE PTR [rax],al
   140014cb0:	and    BYTE PTR [rdi],ch
   140014cb2:	add    BYTE PTR [rax],al
   140014cb4:	(bad)  
   140014cb5:	sub    al,0x0
   140014cb7:	add    al,dl
   140014cb9:	add    BYTE PTR es:[rax],al
   140014cbc:	mov    al,0x29
   140014cbe:	add    BYTE PTR [rax],al
   140014cc0:	lock (bad) 
   140014cc2:	add    BYTE PTR [rax],al
   140014cc4:	mov    al,0x21
   140014cc6:	add    BYTE PTR [rax],al
   140014cc8:	shl    BYTE PTR [rbx],0x0
   140014ccb:	add    BYTE PTR [rax],al
   140014ccd:	and    al,0x0
   140014ccf:	add    al,al
   140014cd1:	and    al,BYTE PTR [rax]
   140014cd3:	add    al,dh
   140014cd5:	add    BYTE PTR cs:[rax],al
   140014cd8:	xor    BYTE PTR [rax+rax*1],dh
   140014cdb:	add    BYTE PTR [rax],dh
   140014cdd:	sub    al,0x0
   140014cdf:	add    BYTE PTR [rax+0x60000026],dh
   140014ce5:	sub    DWORD PTR [rax],eax
   140014ce7:	add    al,dh
   140014ce9:	(bad)  
   140014cea:	add    BYTE PTR [rax],al
   140014cec:	mov    al,0x21
   140014cee:	add    BYTE PTR [rax],al
   140014cf0:	rcr    al,1
   140014cf2:	add    BYTE PTR [rax],al
   140014cf4:	loopne 0x140014ce3
   140014cf6:	add    BYTE PTR [rax],al
   140014cf8:	adc    cl,bl
   140014cfa:	add    BYTE PTR [rax],al
   140014cfc:	and    dh,ch
   140014cfe:	add    BYTE PTR [rax],al
   140014d00:	loopne 0x140014d27
   140014d02:	add    BYTE PTR [rax],al
   140014d04:	push   rax
   140014d05:	retf   0x0
   140014d08:	jo     0x140014cd4
   140014d0a:	add    BYTE PTR [rax],al
   140014d0c:	movabs al,ds:0xb00000cad000001e
   140014d15:	retf   
   140014d16:	add    BYTE PTR [rax],al
   140014d18:	push   rax
   140014d19:	cmp    eax,0x3d500000
   140014d1e:	add    BYTE PTR [rax],al
   140014d20:	push   rax
   140014d21:	cmp    eax,0x3d300000
   140014d26:	add    BYTE PTR [rax],al
   140014d28:	xor    BYTE PTR [rip+0x3d300000],bh        # 0x17d314d2e
   140014d2e:	add    BYTE PTR [rax],al
   140014d30:	push   rax
   140014d31:	cmp    eax,0x3d500000
   140014d36:	add    BYTE PTR [rax],al
   140014d38:	push   rax
   140014d39:	cmp    eax,0xcc900000
   140014d3e:	add    BYTE PTR [rax],al
   140014d40:	shl    BYTE PTR [rbx],1
   140014d42:	add    BYTE PTR [rax],al
   140014d44:	movabs al,ds:0xa000002e7000001e
   140014d4d:	xor    al,BYTE PTR [rax]
   140014d4f:	add    al,al
   140014d51:	sub    eax,DWORD PTR [rax]
   140014d53:	add    BYTE PTR [rax+0x26],dl
   140014d59:	sub    DWORD PTR [rax],eax
   140014d5b:	add    BYTE PTR [rax+0x2000001e],dh
   140014d61:	and    DWORD PTR [rax],eax
   140014d63:	add    BYTE PTR [rax],dh
   140014d65:	and    al,0x0
   140014d67:	add    BYTE PTR [rax+0x5000001e],ah
   140014d6d:	(bad)  
   140014d6e:	add    BYTE PTR [rax],al
   140014d70:	movabs al,ds:0xe000002c90000034
   140014d79:	and    eax,0x28800000
   140014d7e:	add    BYTE PTR [rax],al
   140014d80:	and    BYTE PTR [rdi],bl
   140014d82:	add    BYTE PTR [rax],al
   140014d84:	shl    BYTE PTR [rax],1
   140014d86:	add    BYTE PTR [rax],al
   140014d88:	and    BYTE PTR [rbx],ch
   140014d8a:	add    BYTE PTR [rax],al
   140014d8c:	and    BYTE PTR [rbx],ch
   140014d8e:	add    BYTE PTR [rax],al
   140014d90:	and    BYTE PTR [rbx],ch
   140014d92:	add    BYTE PTR [rax],al
   140014d94:	xor    BYTE PTR [rax],ah
   140014d96:	add    BYTE PTR [rax],al
   140014d98:	rex (bad) 
   140014d9a:	add    BYTE PTR [rax],al
   140014d9c:	xor    BYTE PTR [rax],ah
   140014d9e:	add    BYTE PTR [rax],al
   140014da0:	lock and BYTE PTR [rax],al
   140014da3:	add    BYTE PTR [rax+0x50000020],dl
   140014da9:	mov    BYTE PTR [rax],0x0
   140014dac:	rol    bh,0x0
   140014daf:	add    al,ah
   140014db1:	(bad)  
   140014db2:	add    BYTE PTR [rax],al
   140014db4:	rex ret 0x0
   140014db8:	jo     0x140014d7d
   140014dba:	add    BYTE PTR [rax],al
   140014dbc:	lock sub eax,0x31b00000
   140014dc2:	add    BYTE PTR [rax],al
   140014dc4:	adc    BYTE PTR [rbx],ch
   140014dc6:	add    BYTE PTR [rax],al
   140014dc8:	push   rax
   140014dc9:	(bad)  
   140014dca:	add    BYTE PTR [rax],al
   140014dcc:	push   rax
   140014dcd:	and    BYTE PTR [rax],al
   140014dcf:	add    BYTE PTR [rax+0x2e],al
   140014dd2:	add    BYTE PTR [rax],al
   140014dd4:	and    BYTE PTR [rdi],ch
   140014dd6:	add    BYTE PTR [rax],al
   140014dd8:	(bad)  
   140014dd9:	sub    eax,DWORD PTR [rax]
   140014ddb:	add    BYTE PTR [rax+0x32],dh
   140014dde:	add    BYTE PTR [rax],al
   140014de0:	xor    BYTE PTR [rdx],dh
   140014de2:	add    BYTE PTR [rax],al
   140014de4:	add    BYTE PTR [rsi],ch
   140014de6:	add    BYTE PTR [rax],al
   140014de8:	shl    BYTE PTR [rcx],0x0
   140014deb:	add    BYTE PTR [rax+0x2b],al
   140014dee:	add    BYTE PTR [rax],al
   140014df0:	shl    BYTE PTR [rax],1
   140014df2:	add    BYTE PTR [rax],al
   140014df4:	add    dh,al
   140014df6:	add    BYTE PTR [rax],al
   140014df8:	jo     0x140014dc1
   140014dfa:	add    BYTE PTR [rax],al
   140014dfc:	add    BYTE PTR [rbx],ch
   140014dfe:	add    BYTE PTR [rax],al
   140014e00:	mov    al,0xc0
   140014e02:	add    DWORD PTR [rax],eax
   140014e04:	add    al,0x1
   140014e07:	add    BYTE PTR [rax+0x780001c0],bl
   140014e0d:	rol    BYTE PTR [rcx],0x0
   140014e10:	push   rax
   140014e11:	rol    BYTE PTR [rcx],0x0
   140014e14:	mov    eax,0x580001c0
   140014e19:	rol    BYTE PTR [rcx],0x0
   140014e1c:	test   al,0xc0
   140014e1e:	add    DWORD PTR [rax],eax
   140014e20:	nop
   140014e21:	rol    BYTE PTR [rcx],0x0
   140014e24:	je     0x140014de6
   140014e26:	add    DWORD PTR [rax],eax
   140014e28:	movabs al,ds:0x880001c0680001c0
   140014e31:	rol    BYTE PTR [rcx],0x0
   140014e34:	ins    BYTE PTR es:[rdi],dx
   140014e35:	rol    BYTE PTR [rcx],0x0
   140014e38:	rol    al,0x1
   140014e3b:	add    BYTE PTR [rax-0x40],dh
   140014e3e:	add    DWORD PTR [rax],eax
   140014e40:	rol    BYTE PTR fs:[rcx],0x0
   140014e44:	(bad)  
   140014e45:	rol    BYTE PTR [rcx],0x0
   140014e48:	sbb    ebx,DWORD PTR [rcx+rax*1+0x0]
   140014e4c:	xor    ebx,DWORD PTR [rcx+rax*1+0x0]
   140014e50:	rex.RX pop rsp
   140014e52:	add    DWORD PTR [rax],eax
   140014e54:	pop    rbx
   140014e55:	pop    rsp
   140014e56:	add    DWORD PTR [rax],eax
   140014e58:	jno    0x140014eb6
   140014e5a:	add    DWORD PTR [rax],eax
   140014e5c:	xchg   esi,eax
   140014e5d:	pop    rsp
   140014e5e:	add    DWORD PTR [rax],eax
   140014e60:	mov    ch,0x5c
   140014e62:	add    DWORD PTR [rax],eax
   140014e64:	ficomp DWORD PTR [rcx+rax*1+0x0]
   140014e68:	stc    
   140014e69:	pop    rsp
   140014e6a:	add    DWORD PTR [rax],eax
   140014e6c:	sbb    eax,0x3b00015d
   140014e71:	pop    rbp
   140014e72:	add    DWORD PTR [rax],eax
   140014e74:	pop    rdx
   140014e75:	pop    rbp
   140014e76:	add    DWORD PTR [rax],eax
   140014e78:	jae    0x140014ed7
   140014e7a:	add    DWORD PTR [rax],eax
   140014e7c:	mov    bl,BYTE PTR [rbp+0x1]
   140014e7f:	add    BYTE PTR [rbx-0x3bfffea3],ah
   140014e85:	pop    rbp
   140014e86:	add    DWORD PTR [rax],eax
   140014e88:	fistp  WORD PTR [rbp+0x1]
   140014e8b:	add    bl,bh
   140014e8d:	pop    rbp
   140014e8e:	add    DWORD PTR [rax],eax
   140014e90:	adc    DWORD PTR [rsi+0x1],ebx
   140014e93:	add    BYTE PTR [rbx],dh
   140014e95:	pop    rsi
   140014e96:	add    DWORD PTR [rax],eax
   140014e98:	rex.WRB pop r14
   140014e9a:	add    DWORD PTR [rax],eax
   140014e9c:	pop    si
   140014e9e:	add    DWORD PTR [rax],eax
   140014ea0:	jle    0x140014f00
   140014ea2:	add    DWORD PTR [rax],eax
   140014ea4:	xchg   edx,eax
   140014ea5:	pop    rsi
   140014ea6:	add    DWORD PTR [rax],eax
   140014ea8:	test   eax,0xbe00015e
   140014ead:	pop    rsi
   140014eae:	add    DWORD PTR [rax],eax
   140014eb0:	rcr    DWORD PTR [rsi+0x1],cl
   140014eb3:	add    cl,ch
   140014eb5:	pop    rsi
   140014eb6:	add    DWORD PTR [rax],eax
   140014eb8:	cli    
   140014eb9:	pop    rsi
   140014eba:	add    DWORD PTR [rax],eax
   140014ebc:	adc    bl,BYTE PTR [rdi+0x1]
   140014ebf:	add    BYTE PTR [rax],ch
   140014ec1:	pop    rdi
   140014ec2:	add    DWORD PTR [rax],eax
   140014ec4:	(bad)  
   140014ec5:	pop    rdi
   140014ec6:	add    DWORD PTR [rax],eax
   140014ec8:	push   rbp
   140014ec9:	pop    rdi
   140014eca:	add    DWORD PTR [rax],eax
   140014ecc:	addr32 pop rdi
   140014ece:	add    DWORD PTR [rax],eax
   140014ed0:	jle    0x140014f31
   140014ed2:	add    DWORD PTR [rax],eax
   140014ed4:	xchg   ebx,eax
   140014ed5:	pop    rdi
   140014ed6:	add    DWORD PTR [rax],eax
   140014ed8:	test   al,0x5f
   140014eda:	add    DWORD PTR [rax],eax
   140014edc:	mov    esi,0xcf00015f
   140014ee1:	pop    rdi
   140014ee2:	add    DWORD PTR [rax],eax
   140014ee4:	in     eax,dx
   140014ee5:	pop    rdi
   140014ee6:	add    DWORD PTR [rax],eax
   140014ee8:	add    eax,0x18000160
   140014eed:	(bad)  
   140014eee:	add    DWORD PTR [rax],eax
   140014ef0:	sub    eax,0x43000160
   140014ef5:	(bad)  
   140014ef6:	add    DWORD PTR [rax],eax
   140014ef8:	(bad)  
   140014ef9:	(bad)  
   140014efa:	add    DWORD PTR [rax],eax
   140014efc:	and    DWORD PTR [rax+0x1],0x1609f00
   140014f03:	add    BYTE PTR [rax-0x30fffea0],bh
   140014f09:	(bad)  
   140014f0a:	add    DWORD PTR [rax],eax
   140014f0c:	out    0x60,al
   140014f0e:	add    DWORD PTR [rax],eax
   140014f10:	add    DWORD PTR [rcx+0x1],esp
   140014f13:	add    BYTE PTR [rdi],dl
   140014f15:	(bad)  
   140014f16:	add    DWORD PTR [rax],eax
   140014f18:	es (bad) 
   140014f1a:	add    DWORD PTR [rax],eax
   140014f1c:	cmp    ah,BYTE PTR [rcx+0x1]
   140014f1f:	add    BYTE PTR [rbx+0x61],cl
   140014f22:	add    DWORD PTR [rax],eax
   140014f24:	pop    rbp
   140014f25:	(bad)  
   140014f26:	add    DWORD PTR [rax],eax
   140014f28:	outs   dx,BYTE PTR ds:[rsi]
   140014f29:	(bad)  
   140014f2a:	add    DWORD PTR [rax],eax
   140014f2c:	xchg   BYTE PTR [rcx+0x1],ah
   140014f2f:	add    BYTE PTR [rsi-0xbfffe9f],bh
   140014f35:	(bad)  
   140014f36:	add    DWORD PTR [rax],eax
   140014f38:	sub    al,0x62
   140014f3a:	add    DWORD PTR [rax],eax
   140014f3c:	(bad)  
   140014f3e:	add    DWORD PTR [rax],eax
   140014f40:	(bad)  
   140014f41:	(bad)  
   140014f43:	add    al,dl
   140014f45:	(bad)  
   140014f47:	add    BYTE PTR [rax],cl
   140014f49:	movsxd eax,DWORD PTR [rcx]
   140014f4b:	add    BYTE PTR [rsi],bh
   140014f4d:	movsxd eax,DWORD PTR [rcx]
   140014f4f:	add    BYTE PTR [rsi+0x63],dh
   140014f52:	add    DWORD PTR [rax],eax
   140014f54:	lods   al,BYTE PTR ds:[rsi]
   140014f55:	movsxd eax,DWORD PTR [rcx]
   140014f57:	add    ah,ah
   140014f59:	movsxd eax,DWORD PTR [rcx]
   140014f5b:	add    BYTE PTR [rdx],bl
   140014f5d:	add    DWORD PTR fs:[rax],eax
   140014f60:	push   rdx
   140014f61:	add    DWORD PTR fs:[rax],eax
   140014f64:	mov    BYTE PTR [rcx+rax*1+0x0],ah
   140014f68:	shl    BYTE PTR [rcx+rax*1+0x0],0xf6
   140014f6d:	add    DWORD PTR fs:[rax],eax
   140014f70:	cs add DWORD PTR gs:[rax],eax
   140014f74:	fs add DWORD PTR gs:[rax],eax
   140014f78:	(bad)  
   140014f79:	add    DWORD PTR gs:[rax],eax
   140014f7c:	mov    ah,0x65
   140014f7e:	add    DWORD PTR [rax],eax
   140014f80:	shl    BYTE PTR [rbp+0x1],cl
   140014f83:	add    dl,dh
   140014f85:	add    DWORD PTR gs:[rax],eax
   140014f88:	adc    esp,DWORD PTR [rsi+0x1]
   140014f8b:	add    BYTE PTR [rip+0x67000166],bh        # 0x1a70150f7
   140014f91:	add    WORD PTR [rax],ax
   140014f94:	nop
   140014f95:	add    WORD PTR [rax],ax
   140014f98:	mov    ah,0x66
   140014f9a:	add    DWORD PTR [rax],eax
   140014f9c:	fisub  DWORD PTR [rsi+0x1]
   140014f9f:	add    bl,bh
   140014fa1:	add    WORD PTR [rax],ax
   140014fa4:	and    BYTE PTR [rdi+0x1],ah
   140014fa7:	add    BYTE PTR [rbx+0x67],al
   140014faa:	add    DWORD PTR [rax],eax
   140014fac:	pop    rbp
   140014fad:	add    DWORD PTR [eax],eax
   140014fb0:	jl     0x140015019
   140014fb2:	add    DWORD PTR [rax],eax
   140014fb4:	cwde   
   140014fb5:	add    DWORD PTR [eax],eax
   140014fb8:	mov    ch,0x67
   140014fba:	add    DWORD PTR [rax],eax
   140014fbc:	shl    DWORD PTR [rdi+0x1],1
   140014fbf:	add    ah,dh
   140014fc1:	add    DWORD PTR [eax],eax
   140014fc4:	or     al,0x68
   140014fc6:	add    DWORD PTR [rax],eax
   140014fc8:	sub    eax,0x48000168
   140014fcd:	push   0x686b0001
   140014fd2:	add    DWORD PTR [rax],eax
   140014fd4:	mov    BYTE PTR [rax+0x1],ch
   140014fd7:	add    BYTE PTR [rsi-0x3dfffe98],ah
   140014fdd:	push   0x68dc0001
   140014fe2:	add    DWORD PTR [rax],eax
   140014fe4:	imul   DWORD PTR [rax+0x1]
   140014fe7:	add    BYTE PTR [rcx+rbp*2],dl
   140014fea:	add    DWORD PTR [rax],eax
   140014fec:	(bad)  
   140014fed:	imul   eax,DWORD PTR [rcx],0x1694b00
   140014ff3:	add    BYTE PTR [rsi+0x69],ah
   140014ff6:	add    DWORD PTR [rax],eax
   140014ff8:	(bad)  
   140014ff9:	imul   eax,DWORD PTR [rcx],0x1699e00
   140014fff:	add    BYTE PTR [rbp-0x30fffe97],dh
   140015005:	imul   eax,DWORD PTR [rcx],0x169ea00
   14001500b:	add    BYTE PTR [rip+0x2100016a],al        # 0x16101517b
   140015011:	push   0x1
   140015013:	add    BYTE PTR [rax+0x6a],al
   140015016:	add    DWORD PTR [rax],eax
   140015018:	(bad)  
   140015019:	push   0x1
   14001501b:	add    BYTE PTR [rbx+0x6a],bh
   14001501e:	add    DWORD PTR [rax],eax
   140015020:	xchg   edi,eax
   140015021:	push   0x1
   140015023:	add    BYTE PTR [rcx-0x23fffe96],bh
   140015029:	push   0x1
   14001502b:	add    BYTE PTR [rax],al
   14001502d:	imul   eax,DWORD PTR [rcx],0x0
   140015030:	and    ch,BYTE PTR [rbx+0x1]
   140015033:	add    BYTE PTR [rbx+0x6b],al
   140015036:	add    DWORD PTR [rax],eax
   140015038:	movsxd ebp,DWORD PTR [rbx+0x1]
   14001503b:	add    BYTE PTR [rbx-0x5bfffe95],al
   140015041:	imul   eax,DWORD PTR [rcx],0x0
   140015044:	(bad)  
   140015045:	imul   eax,DWORD PTR [rcx],0x0
   140015048:	jmp    0x1510151b8
   14001504d:	ins    BYTE PTR es:[rdi],dx
   14001504e:	add    DWORD PTR [rax],eax
   140015050:	cmp    ebp,DWORD PTR [rcx+rax*1+0x0]
   140015054:	pop    rcx
   140015055:	ins    BYTE PTR es:[rdi],dx
   140015056:	add    DWORD PTR [rax],eax
   140015058:	jne    0x1400150c6
   14001505a:	add    DWORD PTR [rax],eax
   14001505c:	xchg   ecx,eax
   14001505d:	ins    BYTE PTR es:[rdi],dx
   14001505e:	add    DWORD PTR [rax],eax
   140015060:	mov    ah,0x6c
   140015062:	add    DWORD PTR [rax],eax
   140015064:	jmp    0x15f0151d5
   140015069:	ins    DWORD PTR es:[rdi],dx
   14001506a:	add    DWORD PTR [rax],eax
   14001506c:	rex.RX ins DWORD PTR es:[rdi],dx
   14001506e:	add    DWORD PTR [rax],eax
   140015070:	outs   dx,DWORD PTR ds:[rsi]
   140015071:	ins    DWORD PTR es:[rdi],dx
   140015072:	add    DWORD PTR [rax],eax
   140015074:	xchg   esp,eax
   140015075:	ins    DWORD PTR es:[rdi],dx
   140015076:	add    DWORD PTR [rax],eax
   140015078:	mov    dl,0x6d
   14001507a:	add    DWORD PTR [rax],eax
   14001507c:	shr    DWORD PTR [rbp+0x1],1
   14001507f:	add    cl,bh
   140015081:	ins    DWORD PTR es:[rdi],dx
   140015082:	add    DWORD PTR [rax],eax
   140015084:	and    DWORD PTR [rsi+0x1],ebp
   140015087:	add    BYTE PTR [rax+0x6e],cl
   14001508a:	add    DWORD PTR [rax],eax
   14001508c:	push   0x6e
   14001508e:	add    DWORD PTR [rax],eax
   140015090:	mov    ch,BYTE PTR [rsi+0x1]
   140015093:	add    BYTE PTR [rsi-0x32fffe92],ch
   140015099:	outs   dx,BYTE PTR ds:[rsi]
   14001509a:	add    DWORD PTR [rax],eax
   14001509c:	jmp    0x14001510c
   14001509e:	add    DWORD PTR [rax],eax
   1400150a0:	(bad)  
   1400150a1:	outs   dx,DWORD PTR ds:[rsi]
   1400150a2:	add    DWORD PTR [rax],eax
   1400150a4:	sbb    DWORD PTR [rdi+0x1],ebp
   1400150a7:	add    BYTE PTR [rdx+0x6f],cl
   1400150aa:	add    DWORD PTR [rax],eax
   1400150ac:	jbe    0x14001511d
   1400150ae:	add    DWORD PTR [rax],eax
   1400150b0:	movabs ds:0xf00016fd900016f,eax
   1400150b9:	jo     0x1400150bc
   1400150bb:	add    BYTE PTR [rax+rsi*2+0x1],al
   1400150bf:	add    BYTE PTR [rax+rsi*2+0x1],dh
   1400150c3:	add    BYTE PTR [rdx-0x2bfffe90],ah
   1400150c9:	jo     0x1400150cc
   1400150cb:	add    BYTE PTR [rcx],al
   1400150cd:	jno    0x1400150d0
   1400150cf:	add    BYTE PTR [rip+0x5a000171],ch        # 0x19a015246
   1400150d5:	jno    0x1400150d8
   1400150d7:	add    BYTE PTR [rax-0x39fffe8f],dl
   1400150dd:	jno    0x1400150e0
   1400150df:	add    bl,bh
   1400150e1:	jno    0x1400150e4
   1400150e3:	add    BYTE PTR [rbx],ch
   1400150e5:	jb     0x1400150e8
   1400150e7:	add    BYTE PTR [rcx+0x72],bl
   1400150ea:	add    DWORD PTR [rax],eax
   1400150ec:	mov    esi,DWORD PTR [rdx+0x1]
   1400150ef:	add    BYTE PTR [rax-0x2afffe8e],bh
   1400150f5:	jb     0x1400150f8
   1400150f7:	add    cl,dh
   1400150f9:	jb     0x1400150fc
   1400150fb:	add    BYTE PTR [rbx],cl
   1400150fd:	jae    0x140015100
   1400150ff:	add    BYTE PTR [rbx],ah
   140015101:	jae    0x140015104
   140015103:	add    BYTE PTR [rbx+rsi*2],bh
   140015106:	add    DWORD PTR [rax],eax
   140015108:	push   rdi
   140015109:	jae    0x14001510c
   14001510b:	add    BYTE PTR [rax+0x73],dh
   14001510e:	add    DWORD PTR [rax],eax
   140015110:	mov    dh,BYTE PTR [rbx+0x1]
   140015113:	add    BYTE PTR [rbx-0x42fffe8d],ah
   140015119:	jae    0x14001511c
   14001511b:	add    bh,dl
   14001511d:	jae    0x140015120
   14001511f:	add    bh,ch
   140015121:	jae    0x140015124
   140015123:	add    BYTE PTR [rax],cl
   140015125:	je     0x140015128
   140015127:	add    BYTE PTR [rdx],ah
   140015129:	je     0x14001512c
   14001512b:	add    BYTE PTR [rbx],bh
   14001512d:	je     0x140015130
   14001512f:	add    BYTE PTR [rbp+0x74],dl
   140015132:	add    DWORD PTR [rax],eax
   140015134:	jb     0x1400151aa
   140015136:	add    DWORD PTR [rax],eax
   140015138:	nop
   140015139:	je     0x14001513c
   14001513b:	add    BYTE PTR [rdi-0x29fffe8c],ch
   140015141:	je     0x140015144
   140015143:	add    dl,bh
   140015145:	je     0x140015148
   140015147:	add    BYTE PTR [rsi],bl
   140015149:	jne    0x14001514c
   14001514b:	add    BYTE PTR [rdi],dh
   14001514d:	jne    0x140015150
   14001514f:	add    BYTE PTR [rcx+0x75],dl
   140015152:	add    DWORD PTR [rax],eax
   140015154:	jge    0x1400151cb
   140015156:	add    DWORD PTR [rax],eax
   140015158:	movabs ds:0xf8000175ca000175,eax
   140015161:	jne    0x140015164
   140015163:	add    BYTE PTR [rax],ah
   140015165:	jbe    0x140015168
   140015167:	add    BYTE PTR [rcx+0x76],cl
   14001516a:	add    DWORD PTR [rax],eax
   14001516c:	push   0x76
   14001516e:	add    DWORD PTR [rax],eax
   140015170:	mov    WORD PTR [rsi+0x1],?
   140015173:	add    BYTE PTR [rbx-0x36fffe8a],ch
   140015179:	jbe    0x14001517c
   14001517b:	add    bl,ch
   14001517d:	jbe    0x140015180
   14001517f:	add    BYTE PTR [rdx],cl
   140015181:	ja     0x140015184
   140015183:	add    BYTE PTR [rdi],ah
   140015185:	ja     0x140015188
   140015187:	add    BYTE PTR [rdx+0x77],al
   14001518a:	add    DWORD PTR [rax],eax
   14001518c:	pop    rdi
   14001518d:	ja     0x140015190
   14001518f:	add    BYTE PTR [rdx+0x77],bh
   140015192:	add    DWORD PTR [rax],eax
   140015194:	popf   
   140015195:	ja     0x140015198
   140015197:	add    BYTE PTR [rsi-0x1efffe89],bh
   14001519d:	ja     0x1400151a0
   14001519f:	add    BYTE PTR [rdx],al
   1400151a1:	js     0x1400151a4
   1400151a3:	add    BYTE PTR [rbx],bl
   1400151a5:	js     0x1400151a8
   1400151a7:	add    BYTE PTR [rcx],dh
   1400151a9:	js     0x1400151ac
   1400151ab:	add    BYTE PTR [rbx+0x78],ah
   1400151ae:	add    DWORD PTR [rax],eax
   1400151b0:	mov    bh,BYTE PTR [rax+0x1]
   1400151b3:	add    BYTE PTR [rbx-0x32fffe88],ch
   1400151b9:	js     0x1400151bc
   1400151bb:	add    bl,dh
   1400151bd:	js     0x1400151c0
   1400151bf:	add    BYTE PTR [rcx+rdi*2],dl
   1400151c2:	add    DWORD PTR [rax],eax
   1400151c4:	xor    al,0x79
   1400151c6:	add    DWORD PTR [rax],eax
   1400151c8:	test   BYTE PTR [rcx+0x1],bh
   1400151cb:	add    BYTE PTR [rbx-0x33fffe87],ch
   1400151d1:	jns    0x1400151d4
   1400151d3:	add    cl,bh
   1400151d5:	jns    0x1400151d8
   1400151d7:	add    BYTE PTR [rax],ah
   1400151d9:	jp     0x1400151dc
   1400151db:	add    BYTE PTR [rbx],bh
   1400151dd:	jp     0x1400151e0
   1400151df:	add    BYTE PTR [rdx+rdi*2+0x1],ah
   1400151e3:	add    BYTE PTR [rax-0x5bfffe86],al
   1400151e9:	jp     0x1400151ec
   1400151eb:	add    bh,cl
   1400151ed:	jp     0x1400151f0
   1400151ef:	add    ch,bh
   1400151f1:	jp     0x1400151f4
   1400151f3:	add    BYTE PTR [rax],ch
   1400151f5:	jnp    0x1400151f8
   1400151f7:	add    BYTE PTR [rbp+0x7b],cl
   1400151fa:	add    DWORD PTR [rax],eax
   1400151fc:	jns    0x140015279
   1400151fe:	add    DWORD PTR [rax],eax
   140015200:	lahf   
   140015201:	jnp    0x140015204
   140015203:	add    bh,cl
   140015205:	jnp    0x140015208
   140015207:	add    BYTE PTR [rax],al
   140015209:	jl     0x14001520c
   14001520b:	add    BYTE PTR [rdx],bh
   14001520d:	jl     0x140015210
   14001520f:	add    BYTE PTR [rsp+rdi*2+0x1],dh
   140015213:	add    BYTE PTR [rbp-0x1efffe84],ch
   140015219:	jl     0x14001521c
   14001521b:	add    BYTE PTR [rbx],dl
   14001521d:	jge    0x140015220
   14001521f:	add    BYTE PTR [rcx+0x7d],cl
   140015222:	add    DWORD PTR [rax],eax
   140015224:	jp     0x1400152a3
   140015226:	add    DWORD PTR [rax],eax
   140015228:	lahf   
   140015229:	jge    0x14001522c
   14001522b:	add    ch,al
   14001522d:	jge    0x140015230
   14001522f:	add    ah,dh
   140015231:	jge    0x140015234
   140015233:	add    BYTE PTR [rbx],ah
   140015235:	jle    0x140015238
   140015237:	add    BYTE PTR [rcx+0x7e],dl
   14001523a:	add    DWORD PTR [rax],eax
   14001523c:	jp     0x1400152bc
   14001523e:	add    DWORD PTR [rax],eax
   140015240:	movabs eax,ds:0xf200017ecc00017e
   140015249:	jle    0x14001524c
   14001524b:	add    BYTE PTR [rbx],dl
   14001524d:	jg     0x140015250
   14001524f:	add    BYTE PTR [rip+0x6100017f],dh        # 0x1a10153d4
   140015255:	jg     0x140015258
   140015257:	add    BYTE PTR [rcx-0x5dfffe81],al
   14001525d:	jg     0x140015260
   14001525f:	add    ah,cl
   140015261:	jg     0x140015264
   140015263:	add    dh,dh
   140015265:	jg     0x140015268
   140015267:	add    BYTE PTR [rdi],bl
   140015269:	add    BYTE PTR [rcx],0x0
   14001526c:	rex.XB add BYTE PTR [r9],0x0
   140015270:	add    BYTE PTR gs:[rcx],0x0
   140015274:	mov    eax,DWORD PTR [rax-0x7f53ffff]
   14001527a:	add    DWORD PTR [rax],eax
   14001527c:	rol    BYTE PTR [rax-0x7f07ffff],cl
   140015282:	add    DWORD PTR [rax],eax
   140015284:	(bad)  
   140015285:	add    DWORD PTR [rcx],0x1813900
   14001528b:	add    BYTE PTR [rbx-0x7f],dl
   14001528e:	add    DWORD PTR [rax],eax
   140015290:	jb     0x140015213
   140015292:	add    DWORD PTR [rax],eax
   140015294:	xchg   ebx,eax
   140015295:	add    DWORD PTR [rcx],0x181ad00
   14001529b:	add    ch,al
   14001529d:	add    DWORD PTR [rcx],0x181dd00
   1400152a3:	add    ch,dh
   1400152a5:	add    DWORD PTR [rcx],0x1821600
   1400152ab:	add    BYTE PTR [rax],bh
   1400152ad:	(bad)  
   1400152ae:	add    DWORD PTR [rax],eax
   1400152b0:	movsxd eax,DWORD PTR [rdx-0x7d71ffff]
   1400152b6:	add    DWORD PTR [rax],eax
   1400152b8:	mov    eax,0xdd000182
   1400152bd:	(bad)  
   1400152be:	add    DWORD PTR [rax],eax
   1400152c0:	add    BYTE PTR [rbx-0x7cd8ffff],al
   1400152c6:	add    DWORD PTR [rax],eax
   1400152c8:	add    QWORD PTR [r9],0x0
   1400152cc:	ins    BYTE PTR es:[rdi],dx
   1400152cd:	add    DWORD PTR [rcx],0x0
   1400152d0:	nop
   1400152d1:	add    DWORD PTR [rcx],0x0
   1400152d4:	mov    ebp,0xea000183
   1400152d9:	add    DWORD PTR [rcx],0x0
   1400152dc:	(bad)  
   1400152dd:	test   BYTE PTR [rcx],al
   1400152df:	add    BYTE PTR [rip+0x62000184],bh        # 0x1a2015469
   1400152e5:	test   BYTE PTR [rcx],al
   1400152e7:	add    BYTE PTR [rbx-0x50fffe7c],cl
   1400152ed:	test   BYTE PTR [rcx],al
   1400152ef:	add    ch,dl
   1400152f1:	test   BYTE PTR [rcx],al
   1400152f3:	add    bh,ch
   1400152f5:	test   BYTE PTR [rcx],al
   1400152f7:	add    BYTE PTR [rcx],cl
   1400152f9:	test   DWORD PTR [rcx],eax
   1400152fb:	add    BYTE PTR [rcx],ah
   1400152fd:	test   DWORD PTR [rcx],eax
   1400152ff:	add    BYTE PTR [rcx],bh
   140015301:	test   DWORD PTR [rcx],eax
   140015303:	add    BYTE PTR [rbx-0x7b],bl
   140015306:	add    DWORD PTR [rax],eax
   140015308:	jle    0x14001528f
   14001530a:	add    DWORD PTR [rax],eax
   14001530c:	stos   BYTE PTR es:[rdi],al
   14001530d:	test   DWORD PTR [rcx],eax
   14001530f:	add    dh,dl
   140015311:	test   DWORD PTR [rcx],eax
   140015313:	add    BYTE PTR [rcx],al
   140015315:	xchg   BYTE PTR [rcx],al
   140015317:	add    BYTE PTR [rdi],ah
   140015319:	xchg   BYTE PTR [rcx],al
   14001531b:	add    BYTE PTR [rbx-0x7a],cl
   14001531e:	add    DWORD PTR [rax],eax
   140015320:	jae    0x1400152a8
   140015322:	add    DWORD PTR [rax],eax
   140015324:	xchg   esi,eax
   140015325:	xchg   BYTE PTR [rcx],al
   140015327:	add    BYTE PTR [rdx-0x20fffe7a],bh
   14001532d:	xchg   BYTE PTR [rcx],al
   14001532f:	add    BYTE PTR [rip+0x3b000187],cl        # 0x17b0154bc
   140015335:	xchg   DWORD PTR [rcx],eax
   140015337:	add    BYTE PTR [rax-0x79],ch
   14001533a:	add    DWORD PTR [rax],eax
   14001533c:	nop
   14001533d:	xchg   DWORD PTR [rcx],eax
   14001533f:	add    BYTE PTR [rsi-0x1ffffe79],dh
   140015345:	xchg   DWORD PTR [rcx],eax
   140015347:	add    BYTE PTR [rip+0x32000188],al        # 0x1720154d5
   14001534d:	mov    BYTE PTR [rcx],al
   14001534f:	add    BYTE PTR [rbx-0x78],dl
   140015352:	add    DWORD PTR [rax],eax
   140015354:	or     DWORD PTR [rax-0x773cffff],0x89050001
   14001535e:	add    DWORD PTR [rax],eax
   140015360:	rex.RXB mov DWORD PTR [r9],r8d
   140015363:	add    BYTE PTR [rcx-0x34fffe77],cl
   140015369:	mov    DWORD PTR [rcx],eax
   14001536b:	add    BYTE PTR [rip+0x4f00018a],cl        # 0x18f0154fb
   140015371:	mov    al,BYTE PTR [rcx]
   140015373:	add    BYTE PTR [rcx-0x2cfffe76],dl
   140015379:	mov    al,BYTE PTR [rcx]
   14001537b:	add    BYTE PTR [rsi],dl
   14001537d:	mov    eax,DWORD PTR [rcx]
   14001537f:	add    BYTE PTR [rcx-0x75],bl
   140015382:	add    DWORD PTR [rax],eax
   140015384:	pushf  
   140015385:	mov    eax,DWORD PTR [rcx]
   140015387:	add    bh,bl
   140015389:	mov    eax,DWORD PTR [rcx]
   14001538b:	add    BYTE PTR [rdx],ah
   14001538d:	mov    WORD PTR [rcx],es
   14001538f:	add    BYTE PTR [rbp-0x74],ah
   140015392:	add    DWORD PTR [rax],eax
   140015394:	test   al,0x8c
   140015396:	add    DWORD PTR [rax],eax
   140015398:	jmp    0x140015326
   14001539a:	add    DWORD PTR [rax],eax
   14001539c:	lea    eax,cs:[rcx]
   14001539f:	add    BYTE PTR [rbp+rcx*4+0x1],cl
   1400153a3:	add    BYTE PTR [rbp+rcx*4+0x1],ah
   1400153a7:	add    BYTE PTR [rbx-0x73],bh
   1400153aa:	add    DWORD PTR [rax],eax
   1400153ac:	(bad)  
   1400153ad:	lea    eax,[rcx]
   1400153af:	add    BYTE PTR [rip+0x5600018e],cl        # 0x196015543
   1400153b5:	mov    es,WORD PTR [rcx]
   1400153b7:	add    BYTE PTR [rdi-0x17fffe72],bl
   1400153bd:	mov    es,WORD PTR [rcx]
   1400153bf:	add    BYTE PTR [rcx],dh
   1400153c1:	pop    QWORD PTR [rcx]
   1400153c3:	add    BYTE PTR [rdx-0x71],bh
   1400153c6:	add    DWORD PTR [rax],eax
   1400153c8:	ret    
   1400153c9:	pop    QWORD PTR [rcx]
   1400153cb:	add    BYTE PTR [rax+rdx*4],cl
   1400153ce:	add    DWORD PTR [rax],eax
   1400153d0:	xor    BYTE PTR [rax-0x6fa1ffff],dl
   1400153d6:	add    DWORD PTR [rax],eax
   1400153d8:	test   BYTE PTR [rax-0x6f61ffff],dl
   1400153de:	add    DWORD PTR [rax],eax
   1400153e0:	mov    ch,0x90
   1400153e2:	add    DWORD PTR [rax],eax
   1400153e4:	(bad)  
   1400153e5:	nop
   1400153e6:	add    DWORD PTR [rax],eax
   1400153e8:	in     eax,0x90
   1400153ea:	add    DWORD PTR [rax],eax
   1400153ec:	(bad)  
   1400153ed:	nop
   1400153ee:	add    DWORD PTR [rax],eax
   1400153f0:	(bad)  
   1400153f1:	xchg   ecx,eax
   1400153f2:	add    DWORD PTR [rax],eax
   1400153f4:	xor    dl,BYTE PTR [rcx-0x6eb5ffff]
   1400153fa:	add    DWORD PTR [rax],eax
   1400153fc:	movsxd edx,DWORD PTR [rcx-0x6e84ffff]
   140015402:	add    DWORD PTR [rax],eax
   140015404:	xchg   esp,eax
   140015405:	xchg   ecx,eax
   140015406:	add    DWORD PTR [rax],eax
   140015408:	mov    cl,0x91
   14001540a:	add    DWORD PTR [rax],eax
   14001540c:	int3   
   14001540d:	xchg   ecx,eax
   14001540e:	add    DWORD PTR [rax],eax
   140015410:	in     eax,0x91
   140015412:	add    DWORD PTR [rax],eax
   140015414:	(bad)  
   140015415:	xchg   ecx,eax
   140015416:	add    DWORD PTR [rax],eax
   140015418:	sbb    dl,BYTE PTR [rdx-0x6dc9ffff]
   14001541e:	add    DWORD PTR [rax],eax
   140015420:	push   rsp
   140015421:	xchg   edx,eax
   140015422:	add    DWORD PTR [rax],eax
   140015424:	outs   dx,DWORD PTR ds:[rsi]
   140015425:	xchg   edx,eax
   140015426:	add    DWORD PTR [rax],eax
   140015428:	mov    dl,BYTE PTR [rdx-0x6d58ffff]
   14001542e:	add    DWORD PTR [rax],eax
   140015430:	ret    0x192
   140015433:	add    ch,bl
   140015435:	xchg   edx,eax
   140015436:	add    DWORD PTR [rax],eax
   140015438:	cld    
   140015439:	xchg   edx,eax
   14001543a:	add    DWORD PTR [rax],eax
   14001543c:	sbb    DWORD PTR [rbx-0x6cc9ffff],edx
   140015442:	add    DWORD PTR [rax],eax
   140015444:	pop    rcx
   140015445:	xchg   ebx,eax
   140015446:	add    DWORD PTR [rax],eax
   140015448:	sahf   
   140015449:	xchg   ebx,eax
   14001544a:	add    DWORD PTR [rax],eax
   14001544c:	jrcxz  0x1400153e1
   14001544e:	add    DWORD PTR [rax],eax
   140015450:	sub    BYTE PTR [rcx+rax*1+0x1946d00],dl
   140015457:	add    BYTE PTR [rdx-0x8fffe6c],dh
   14001545d:	xchg   esp,eax
   14001545e:	add    DWORD PTR [rax],eax
   140015460:	cmp    al,0x95
   140015462:	add    DWORD PTR [rax],eax
   140015464:	adc    DWORD PTR [rbp-0x6a39ffff],0x95e20001
   14001546e:	add    DWORD PTR [rax],eax
   140015470:	call   QWORD PTR [rbp-0x69daffff]
   140015476:	add    DWORD PTR [rax],eax
   140015478:	rex.WXB xchg r14,rax
   14001547a:	add    DWORD PTR [rax],eax
   14001547c:	jo     0x140015414
   14001547e:	add    DWORD PTR [rax],eax
   140015480:	nop
   140015481:	xchg   esi,eax
   140015482:	add    DWORD PTR [rax],eax
   140015484:	scas   al,BYTE PTR es:[rdi]
   140015485:	xchg   esi,eax
   140015486:	add    DWORD PTR [rax],eax
   140015488:	rcl    BYTE PTR [rsi-0x6912ffff],1
   14001548e:	add    DWORD PTR [rax],eax
   140015490:	adc    DWORD PTR [rdi-0x68c9ffff],edx
   140015496:	add    DWORD PTR [rax],eax
   140015498:	fs xchg edi,eax
   14001549a:	add    DWORD PTR [rax],eax
   14001549c:	mov    DWORD PTR [rdi-0x684fffff],edx
   1400154a2:	add    DWORD PTR [rax],eax
   1400154a4:	fcom   DWORD PTR [rdi-0x67f6ffff]
   1400154aa:	add    DWORD PTR [rax],eax
   1400154ac:	xor    DWORD PTR [rax-0x67b0ffff],ebx
   1400154b2:	add    DWORD PTR [rax],eax
   1400154b4:	outs   dx,BYTE PTR ds:[rsi]
   1400154b5:	cwde   
   1400154b6:	add    DWORD PTR [rax],eax
   1400154b8:	xchg   esi,eax
   1400154b9:	cwde   
   1400154ba:	add    DWORD PTR [rax],eax
   1400154bc:	mov    esi,0xe5000198
   1400154c1:	cwde   
   1400154c2:	add    DWORD PTR [rax],eax
   1400154c4:	(bad)  
   1400154c5:	cdq    
   1400154c6:	add    DWORD PTR [rax],eax
   1400154c8:	(bad)  
   1400154c9:	cdq    
   1400154ca:	add    DWORD PTR [rax],eax
   1400154cc:	rex.WXB cqo 
   1400154ce:	add    DWORD PTR [rax],eax
   1400154d0:	push   0xffffffffffffff99
   1400154d2:	add    DWORD PTR [rax],eax
   1400154d4:	mov    WORD PTR [rcx-0x6657ffff],ds
   1400154da:	add    DWORD PTR [rax],eax
   1400154dc:	in     al,dx
   1400154dd:	cdq    
   1400154de:	add    DWORD PTR [rax],eax
   1400154e0:	xor    BYTE PTR [rdx-0x658bffff],bl
   1400154e6:	add    DWORD PTR [rax],eax
   1400154e8:	mov    eax,0xfc00019a
   1400154ed:	(bad)  
   1400154ee:	add    DWORD PTR [rax],eax
   1400154f0:	rex
   1400154f1:	fwait
   1400154f2:	add    DWORD PTR [rax],eax
   1400154f4:	test   BYTE PTR [rbx-0x6437ffff],bl
   1400154fa:	add    DWORD PTR [rax],eax
   1400154fc:	or     al,0x9c
   1400154fe:	add    DWORD PTR [rax],eax
   140015500:	ss pushf 
   140015502:	add    DWORD PTR [rax],eax
   140015504:	pop    rsp
   140015505:	pushf  
   140015506:	add    DWORD PTR [rax],eax
   140015508:	je     0x1400154a6
   14001550a:	add    DWORD PTR [rax],eax
   14001550c:	mov    DWORD PTR [rcx+rax*1+0x19c9f00],ebx
   140015513:	add    BYTE PTR [rsp+rbx*4-0x6331ffff],dh
   14001551a:	add    DWORD PTR [rax],eax
   14001551c:	jmp    0x1400156bd
   140015521:	popf   
   140015522:	add    DWORD PTR [rax],eax
   140015524:	(bad)  
   140015525:	popf   
   140015526:	add    DWORD PTR [rax],eax
   140015528:	xor    BYTE PTR [rbp-0x62aaffff],bl
   14001552e:	add    DWORD PTR [rax],eax
   140015530:	jb     0x1400154cf
   140015532:	add    DWORD PTR [rax],eax
   140015534:	(bad)  
   140015535:	popf   
   140015536:	add    DWORD PTR [rax],eax
   140015538:	movabs eax,ds:0xf400019dc300019d
   140015541:	popf   
   140015542:	add    DWORD PTR [rax],eax
   140015544:	es sahf 
   140015546:	add    DWORD PTR [rax],eax
   140015548:	(bad)  
   140015549:	sahf   
   14001554a:	add    DWORD PTR [rax],eax
   14001554c:	pushf  
   14001554d:	sahf   
   14001554e:	add    DWORD PTR [rax],eax
   140015550:	(bad)  
   140015551:	sahf   
   140015552:	add    DWORD PTR [rax],eax
   140015554:	or     ebx,DWORD PTR [rdi-0x60c1ffff]
   14001555a:	add    DWORD PTR [rax],eax
   14001555c:	jne    0x1400154fd
   14001555e:	add    DWORD PTR [rax],eax
   140015560:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140015561:	lahf   
   140015562:	add    DWORD PTR [rax],eax
   140015564:	int    0x9f
   140015566:	add    DWORD PTR [rax],eax
   140015568:	hlt    
   140015569:	lahf   
   14001556a:	add    DWORD PTR [rax],eax
   14001556c:	and    al,0xa0
   14001556e:	add    DWORD PTR [rax],eax
   140015570:	push   rsp
   140015571:	movabs al,ds:0xa0ad0001a0830001
   14001557a:	add    DWORD PTR [rax],eax
   14001557c:	(bad)  
   14001557d:	movabs al,ds:0xa1280001a1010001
   140015586:	add    DWORD PTR [rax],eax
   140015588:	rex.RX movabs eax,ds:0xa1760001a15e0001
   140015592:	add    DWORD PTR [rax],eax
   140015594:	mov    fs,WORD PTR [rcx-0x5e4fffff]
   14001559a:	add    DWORD PTR [rax],eax
   14001559c:	(bad)  
   14001559d:	movabs eax,ds:0xa2390001a20d0001
   1400155a6:	add    DWORD PTR [rax],eax
   1400155a8:	movabs gs:0xa2b60001a2900001,al
   1400155b2:	add    DWORD PTR [rax],eax
   1400155b4:	fisub  DWORD PTR [rdx-0x5cfdffff]
   1400155ba:	add    DWORD PTR [rax],eax
   1400155bc:	and    eax,0x440001a3
   1400155c1:	movabs ds:0xa38a0001a3600001,eax
   1400155ca:	add    DWORD PTR [rax],eax
   1400155cc:	test   al,0xa3
   1400155ce:	add    DWORD PTR [rax],eax
   1400155d0:	(bad)  
   1400155d1:	movabs ds:0xa4200001a4000001,eax
   1400155da:	add    DWORD PTR [rax],eax
   1400155dc:	rex.B movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400155de:	add    DWORD PTR [rax],eax
   1400155e0:	imul   esp,DWORD PTR [rcx+rax*1+0x1a49500],0x0
   1400155e8:	mov    esi,0xe20001a4
   1400155ed:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400155ee:	add    DWORD PTR [rax],eax
   1400155f0:	add    al,0xa5
   1400155f2:	add    DWORD PTR [rax],eax
   1400155f4:	sub    ah,BYTE PTR [rbp-0x5ab4ffff]
   1400155fa:	add    DWORD PTR [rax],eax
   1400155fc:	and    DWORD PTR [rbp-0x5a5dffff],0xa5c40001
   140015606:	add    DWORD PTR [rax],eax
   140015608:	out    dx,eax
   140015609:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001560a:	add    DWORD PTR [rax],eax
   14001560c:	sbb    ah,BYTE PTR [rsi-0x59bbffff]
   140015612:	add    DWORD PTR [rax],eax
   140015614:	imul   esp,DWORD PTR [rsi-0x5973ffff],0xa6b30001
   14001561e:	add    DWORD PTR [rax],eax
   140015620:	(bad)  
   140015621:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140015622:	add    DWORD PTR [rax],eax
   140015624:	in     eax,dx
   140015625:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140015626:	add    DWORD PTR [rax],eax
   140015628:	add    eax,0x210001a7
   14001562d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001562e:	add    DWORD PTR [rax],eax
   140015630:	cmp    eax,0x5a0001a7
   140015635:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140015636:	add    DWORD PTR [rax],eax
   140015638:	jg     0x1400155e1
   14001563a:	add    DWORD PTR [rax],eax
   14001563c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001563d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001563e:	add    DWORD PTR [rax],eax
   140015640:	shl    DWORD PTR [rdi-0x5813ffff],0x1
   140015647:	add    BYTE PTR [rbx],dl
   140015649:	test   al,0x1
   14001564b:	add    BYTE PTR [rsi-0x58],dl
   14001564e:	add    DWORD PTR [rax],eax
   140015650:	cdq    
   140015651:	test   al,0x1
   140015653:	add    ah,bl
   140015655:	test   al,0x1
   140015657:	add    BYTE PTR [rdi],bl
   140015659:	test   eax,0xa9620001
   14001565e:	add    DWORD PTR [rax],eax
   140015660:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140015661:	test   eax,0xa9e80001
   140015666:	add    DWORD PTR [rax],eax
   140015668:	sub    ebp,DWORD PTR [rdx-0x5591ffff]
   14001566e:	add    DWORD PTR [rax],eax
   140015670:	xchg   ebx,eax
   140015671:	stos   BYTE PTR es:[rdi],al
   140015672:	add    DWORD PTR [rax],eax
   140015674:	mov    al,0xaa
   140015676:	add    DWORD PTR [rax],eax
   140015678:	(bad)  
   140015679:	stos   BYTE PTR es:[rdi],al
   14001567a:	add    DWORD PTR [rax],eax
   14001567c:	cmc    
   14001567d:	stos   BYTE PTR es:[rdi],al
   14001567e:	add    DWORD PTR [rax],eax
   140015680:	sbb    al,0xab
   140015682:	add    DWORD PTR [rax],eax
   140015684:	rex.X stos DWORD PTR es:[rdi],eax
   140015686:	add    DWORD PTR [rax],eax
   140015688:	movsxd ebp,DWORD PTR [rbx-0x547dffff]
   14001568e:	add    DWORD PTR [rax],eax
   140015690:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140015691:	stos   DWORD PTR es:[rdi],eax
   140015692:	add    DWORD PTR [rax],eax
   140015694:	ret    
   140015695:	stos   DWORD PTR es:[rdi],eax
   140015696:	add    DWORD PTR [rax],eax
   140015698:	loop   0x140015645
   14001569a:	add    DWORD PTR [rax],eax
   14001569c:	add    ch,BYTE PTR [rcx+rax*1+0x1ac2b00]
   1400156a3:	add    BYTE PTR [rsp+rbp*4+0x1],dl
   1400156a7:	add    BYTE PTR [rsp+rbp*4+0x1],bh
   1400156ab:	add    BYTE PTR [rdi-0x3ffffe54],bl
   1400156b1:	lods   al,BYTE PTR ds:[rsi]
   1400156b2:	add    DWORD PTR [rax],eax
   1400156b4:	in     eax,0xac
   1400156b6:	add    DWORD PTR [rax],eax
   1400156b8:	add    eax,0x2e0001ad
   1400156bd:	lods   eax,DWORD PTR ds:[rsi]
   1400156be:	add    DWORD PTR [rax],eax
   1400156c0:	push   rdi
   1400156c1:	lods   eax,DWORD PTR ds:[rsi]
   1400156c2:	add    DWORD PTR [rax],eax
   1400156c4:	jg     0x140015673
   1400156c6:	add    DWORD PTR [rax],eax
   1400156c8:	stos   DWORD PTR es:[rdi],eax
   1400156c9:	lods   eax,DWORD PTR ds:[rsi]
   1400156ca:	add    DWORD PTR [rax],eax
   1400156cc:	shr    DWORD PTR [rbp-0x5209ffff],cl
   1400156d2:	add    DWORD PTR [rax],eax
   1400156d4:	adc    eax,0x2f0001ae
   1400156d9:	scas   al,BYTE PTR es:[rdi]
   1400156da:	add    DWORD PTR [rax],eax
   1400156dc:	pop    rax
   1400156dd:	scas   al,BYTE PTR es:[rdi]
   1400156de:	add    DWORD PTR [rax],eax
   1400156e0:	lea    ebp,[rsi-0x514affff]
   1400156e6:	add    DWORD PTR [rax],eax
   1400156e8:	fsubr  DWORD PTR [rsi-0x5109ffff]
   1400156ee:	add    DWORD PTR [rax],eax
   1400156f0:	and    DWORD PTR [rdi-0x50a5ffff],ebp
   1400156f6:	add    DWORD PTR [rax],eax
   1400156f8:	test   BYTE PTR [rdi-0x5058ffff],ch
   1400156fe:	add    DWORD PTR [rax],eax
   140015700:	(bad)
   140015703:	add    al,dh
   140015705:	scas   eax,DWORD PTR es:[rdi]
   140015706:	add    DWORD PTR [rax],eax
   140015708:	sbb    esi,DWORD PTR [rax-0x4fbaffff]
   14001570e:	add    DWORD PTR [rax],eax
   140015710:	jns    0x1400156c2
   140015712:	add    DWORD PTR [rax],eax
   140015714:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140015715:	mov    al,0x1
   140015717:	add    bl,dl
   140015719:	mov    al,0x1
   14001571b:	add    BYTE PTR [rax],al
   14001571d:	mov    cl,0x1
   14001571f:	add    BYTE PTR [rbx],ch
   140015721:	mov    cl,0x1
   140015723:	add    BYTE PTR [rdi-0x4f],al
   140015726:	add    DWORD PTR [rax],eax
   140015728:	jae    0x1400156db
   14001572a:	add    DWORD PTR [rax],eax
   14001572c:	lahf   
   14001572d:	mov    cl,0x1
   14001572f:	add    dl,cl
   140015731:	mov    cl,0x1
   140015733:	add    bh,ch
   140015735:	mov    cl,0x1
   140015737:	add    BYTE PTR [rip+0x440001b2],dl        # 0x1840158ef
   14001573d:	mov    dl,0x1
   14001573f:	add    BYTE PTR [rbx-0x4e],dh
   140015742:	add    DWORD PTR [rax],eax
   140015744:	movabs eax,ds:0xf10001b2ca0001b2
   14001574d:	mov    dl,0x1
   14001574f:	add    BYTE PTR [rbx+rsi*4],bl
   140015752:	add    DWORD PTR [rax],eax
   140015754:	rex.X mov bl,0x1
   140015757:	add    BYTE PTR [rsi-0x4d],ah
   14001575a:	add    DWORD PTR [rax],eax
   14001575c:	mov    esi,DWORD PTR [rbx-0x4c46ffff]
   140015762:	add    DWORD PTR [rax],eax
   140015764:	out    0xb3,eax
   140015766:	add    DWORD PTR [rax],eax
   140015768:	adc    al,0xb4
   14001576a:	add    DWORD PTR [rax],eax
   14001576c:	cmp    al,0xb4
   14001576e:	add    DWORD PTR [rax],eax
   140015770:	(bad)  
   140015771:	mov    ah,0x1
   140015773:	add    BYTE PTR [rsp+rsi*4+0x1],cl
   14001577a:	add    DWORD PTR [rax],eax
   14001577c:	add    al,BYTE PTR [rax]
   14001577e:	add    eax,DWORD PTR [rax]
   140015780:	add    al,0x0
   140015782:	add    eax,0x7000600
   140015787:	add    BYTE PTR [rax],cl
   140015789:	add    BYTE PTR [rcx],cl
   14001578b:	add    BYTE PTR [rdx],cl
   14001578d:	add    BYTE PTR [rbx],cl
   14001578f:	add    BYTE PTR [rax+rax*1],cl
   140015792:	or     eax,0xf000e00
   140015797:	add    BYTE PTR [rax],dl
   140015799:	add    BYTE PTR [rcx],dl
   14001579b:	add    BYTE PTR [rdx],dl
   14001579d:	add    BYTE PTR [rbx],dl
   14001579f:	add    BYTE PTR [rax+rax*1],dl
   1400157a2:	adc    eax,0x17001600
   1400157a7:	add    BYTE PTR [rax],bl
   1400157a9:	add    BYTE PTR [rcx],bl
   1400157ab:	add    BYTE PTR [rdx],bl
   1400157ad:	add    BYTE PTR [rbx],bl
   1400157af:	add    BYTE PTR [rax+rax*1],bl
   1400157b2:	sbb    eax,0x1f001e00
   1400157b7:	add    BYTE PTR [rax],ah
   1400157b9:	add    BYTE PTR [rcx],ah
   1400157bb:	add    BYTE PTR [rdx],ah
   1400157bd:	add    BYTE PTR [rbx],ah
   1400157bf:	add    BYTE PTR [rax+rax*1],ah
   1400157c2:	and    eax,0x27002600
   1400157c7:	add    BYTE PTR [rax],ch
   1400157c9:	add    BYTE PTR [rcx],ch
   1400157cb:	add    BYTE PTR [rdx],ch
   1400157cd:	add    BYTE PTR [rbx],ch
   1400157cf:	add    BYTE PTR [rax+rax*1],ch
   1400157d2:	sub    eax,0x2f002e00
   1400157d7:	add    BYTE PTR [rax],dh
   1400157d9:	add    BYTE PTR [rcx],dh
   1400157db:	add    BYTE PTR [rdx],dh
   1400157dd:	add    BYTE PTR [rbx],dh
   1400157df:	add    BYTE PTR [rax+rax*1],dh
   1400157e2:	xor    eax,0x37003600
   1400157e7:	add    BYTE PTR [rax],bh
   1400157e9:	add    BYTE PTR [rcx],bh
   1400157eb:	add    BYTE PTR [rdx],bh
   1400157ed:	add    BYTE PTR [rbx],bh
   1400157ef:	add    BYTE PTR [rax+rax*1],bh
   1400157f2:	cmp    eax,0x3f003e00
   1400157f7:	add    BYTE PTR [rax+0x0],al
   1400157fa:	add    BYTE PTR [r10+0x0],al
   1400157fe:	add    BYTE PTR [r8+r8*1+0x45],al
   140015803:	add    BYTE PTR [rsi+0x0],al
   140015806:	rex.RXB add BYTE PTR [r8+0x0],r9b
   14001580a:	rex.WB add BYTE PTR [r10+0x0],cl
   14001580e:	rex.WXB add BYTE PTR [r8+r8*1+0x4d],cl
   140015813:	add    BYTE PTR [rsi+0x0],cl
   140015816:	rex.WRXB add BYTE PTR [r8+0x0],r10b
   14001581a:	push   rcx
   14001581b:	add    BYTE PTR [rdx+0x0],dl
   14001581e:	push   rbx
   14001581f:	add    BYTE PTR [rax+rax*1+0x55],dl
   140015823:	add    BYTE PTR [rsi+0x0],dl
   140015826:	push   rdi
   140015827:	add    BYTE PTR [rax+0x0],bl
   14001582a:	pop    rcx
   14001582b:	add    BYTE PTR [rdx+0x0],bl
   14001582e:	pop    rbx
   14001582f:	add    BYTE PTR [rax+rax*1+0x5d],bl
   140015833:	add    BYTE PTR [rsi+0x0],bl
   140015836:	pop    rdi
   140015837:	add    BYTE PTR [rax+0x0],ah
   14001583a:	(bad)  
   14001583b:	add    BYTE PTR [rdx+0x0],ah
   14001583e:	movsxd eax,DWORD PTR [rax]
   140015840:	add    BYTE PTR fs:[rbp+0x0],ah
   140015844:	data16 add BYTE PTR [rdi+0x0],ah
   140015848:	push   0x6a006900
   14001584d:	add    BYTE PTR [rbx+0x0],ch
   140015850:	ins    BYTE PTR es:[rdi],dx
   140015851:	add    BYTE PTR [rbp+0x0],ch
   140015854:	outs   dx,BYTE PTR ds:[rsi]
   140015855:	add    BYTE PTR [rdi+0x0],ch
   140015858:	jo     0x14001585a
   14001585a:	jno    0x14001585c
   14001585c:	jb     0x14001585e
   14001585e:	jae    0x140015860
   140015860:	je     0x140015862
   140015862:	jne    0x140015864
   140015864:	jbe    0x140015866
   140015866:	ja     0x140015868
   140015868:	js     0x14001586a
   14001586a:	jns    0x14001586c
   14001586c:	jp     0x14001586e
   14001586e:	jnp    0x140015870
   140015870:	jl     0x140015872
   140015872:	jge    0x140015874
   140015874:	jle    0x140015876
   140015876:	jg     0x140015878
   140015878:	add    BYTE PTR [rax],0x81
   14001587b:	add    BYTE PTR [rdx-0x7bff7d00],al
   140015881:	add    BYTE PTR [rbp-0x78ff7a00],al
   140015887:	add    BYTE PTR [rax-0x75ff7700],cl
   14001588d:	add    BYTE PTR [rbx-0x72ff7400],cl
   140015893:	add    BYTE PTR [rsi-0x6fff7100],cl
   140015899:	add    BYTE PTR [rcx-0x6cff6e00],dl
   14001589f:	add    BYTE PTR [rax+rax*1+0x960095],dl
   1400158a6:	xchg   edi,eax
   1400158a7:	add    BYTE PTR [rax-0x65ff6700],bl
   1400158ad:	add    BYTE PTR [rbx-0x62ff6400],bl
   1400158b3:	add    BYTE PTR [rsi-0x5fff6100],bl
   1400158b9:	add    BYTE PTR [rcx-0x5cff5e00],ah
   1400158bf:	add    BYTE PTR [rax+rax*1+0xa600a5],ah
   1400158c6:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400158c7:	add    BYTE PTR [rax-0x55ff5700],ch
   1400158cd:	add    BYTE PTR [rbx-0x52ff5400],ch
   1400158d3:	add    BYTE PTR [rsi-0x4fff5100],ch
   1400158d9:	add    BYTE PTR [rcx-0x4cff4e00],dh
   1400158df:	add    BYTE PTR [rax+rax*1+0xb600b5],dh
   1400158e6:	mov    bh,0x0
   1400158e8:	mov    eax,0xba00b900
   1400158ed:	add    BYTE PTR [rbx-0x42ff4400],bh
   1400158f3:	add    BYTE PTR [rsi-0x3fff4100],bh
   1400158f9:	add    cl,al
   1400158fb:	add    dl,al
   1400158fd:	add    bl,al
   1400158ff:	add    ah,al
   140015901:	add    ch,al
   140015903:	add    dh,al
   140015905:	add    bh,al
   140015907:	add    al,cl
   140015909:	add    cl,cl
   14001590b:	add    dl,cl
   14001590d:	add    bl,cl
   14001590f:	add    ah,cl
   140015911:	add    ch,cl
   140015913:	add    dh,cl
   140015915:	add    bh,cl
   140015917:	add    al,dl
   140015919:	add    cl,dl
   14001591b:	add    dl,dl
   14001591d:	add    bl,dl
   14001591f:	add    ah,dl
   140015921:	add    ch,dl
   140015923:	add    dh,dl
   140015925:	add    bh,dl
   140015927:	add    al,bl
   140015929:	add    cl,bl
   14001592b:	add    dl,bl
   14001592d:	add    bl,bl
   14001592f:	add    ah,bl
   140015931:	add    ch,bl
   140015933:	add    dh,bl
   140015935:	add    bh,bl
   140015937:	add    al,ah
   140015939:	add    cl,ah
   14001593b:	add    dl,ah
   14001593d:	add    bl,ah
   14001593f:	add    ah,ah
   140015941:	add    ch,ah
   140015943:	add    dh,ah
   140015945:	add    bh,ah
   140015947:	add    al,ch
   140015949:	add    cl,ch
   14001594b:	add    dl,ch
   14001594d:	add    bl,ch
   14001594f:	add    ah,ch
   140015951:	add    ch,ch
   140015953:	add    dh,ch
   140015955:	add    bh,ch
   140015957:	add    al,dh
   140015959:	add    cl,dh
   14001595b:	add    dl,dh
   14001595d:	add    bl,dh
   14001595f:	add    ah,dh
   140015961:	add    ch,dh
   140015963:	add    dh,dh
   140015965:	add    bh,dh
   140015967:	add    al,bh
   140015969:	add    cl,bh
   14001596b:	add    dl,bh
   14001596d:	add    bl,bh
   14001596f:	add    ah,bh
   140015971:	add    ch,bh
   140015973:	add    dh,bh
   140015975:	add    bh,bh
   140015977:	add    BYTE PTR [rax],al
   140015979:	add    DWORD PTR [rcx],eax
   14001597b:	add    DWORD PTR [rdx],eax
   14001597d:	add    DWORD PTR [rbx],eax
   14001597f:	add    DWORD PTR [rcx+rax*1],eax
   140015982:	add    eax,0x7010601
   140015987:	add    DWORD PTR [rax],ecx
   140015989:	add    DWORD PTR [rcx],ecx
   14001598b:	add    DWORD PTR [rdx],ecx
   14001598d:	add    DWORD PTR [rbx],ecx
   14001598f:	add    DWORD PTR [rcx+rax*1],ecx
   140015992:	or     eax,0xf010e01
   140015997:	add    DWORD PTR [rax],edx
   140015999:	add    DWORD PTR [rcx],edx
   14001599b:	add    DWORD PTR [rdx],edx
   14001599d:	add    DWORD PTR [rbx],edx
   14001599f:	add    DWORD PTR [rcx+rax*1],edx
   1400159a2:	adc    eax,0x17011601
   1400159a7:	add    DWORD PTR [rax],ebx
   1400159a9:	add    DWORD PTR [rcx],ebx
   1400159ab:	add    DWORD PTR [rdx],ebx
   1400159ad:	add    DWORD PTR [rbx],ebx
   1400159af:	add    DWORD PTR [rcx+rax*1],ebx
   1400159b2:	sbb    eax,0x1f011e01
   1400159b7:	add    DWORD PTR [rax],esp
   1400159b9:	add    DWORD PTR [rcx],esp
   1400159bb:	add    DWORD PTR [rdx],esp
   1400159bd:	add    DWORD PTR [rbx],esp
   1400159bf:	add    DWORD PTR [rcx+rax*1],esp
   1400159c2:	and    eax,0x27012601
   1400159c7:	add    DWORD PTR [rax],ebp
   1400159c9:	add    DWORD PTR [rcx],ebp
   1400159cb:	add    DWORD PTR [rdx],ebp
   1400159cd:	add    DWORD PTR [rbx],ebp
   1400159cf:	add    DWORD PTR [rcx+rax*1],ebp
   1400159d2:	sub    eax,0x2f012e01
   1400159d7:	add    DWORD PTR [rax],esi
   1400159d9:	add    DWORD PTR [rcx],esi
   1400159db:	add    DWORD PTR [rdx],esi
   1400159dd:	add    DWORD PTR [rbx],esi
   1400159df:	add    DWORD PTR [rcx+rax*1],esi
   1400159e2:	xor    eax,0x37013601
   1400159e7:	add    DWORD PTR [rax],edi
   1400159e9:	add    DWORD PTR [rcx],edi
   1400159eb:	add    DWORD PTR [rdx],edi
   1400159ed:	add    DWORD PTR [rbx],edi
   1400159ef:	add    DWORD PTR [rcx+rax*1],edi
   1400159f2:	cmp    eax,0x3f013e01
   1400159f7:	add    DWORD PTR [rax+0x1],eax
   1400159fa:	add    DWORD PTR [r10+0x1],eax
   1400159fe:	add    DWORD PTR [r9+r8*1+0x45],eax
   140015a03:	add    DWORD PTR [rsi+0x1],eax
   140015a06:	rex.RXB add DWORD PTR [r8+0x1],r9d
   140015a0a:	add    QWORD PTR [r10+0x1],rcx
   140015a0e:	add    QWORD PTR [r9+r8*1+0x4d],rcx
   140015a13:	add    DWORD PTR [rsi+0x1],ecx
   140015a16:	rex.WRXB add QWORD PTR [r8+0x1],r10
   140015a1a:	push   rcx
   140015a1b:	add    DWORD PTR [rdx+0x1],edx
   140015a1e:	push   rbx
   140015a1f:	add    DWORD PTR [rcx+rax*1+0x55],edx
   140015a23:	add    DWORD PTR [rsi+0x1],edx
   140015a26:	push   rdi
   140015a27:	add    DWORD PTR [rax+0x1],ebx
   140015a2a:	pop    rcx
   140015a2b:	add    DWORD PTR [rdx+0x1],ebx
   140015a2e:	pop    rbx
   140015a2f:	add    DWORD PTR [rcx+rax*1+0x5d],ebx
   140015a33:	add    DWORD PTR [rsi+0x1],ebx
   140015a36:	pop    rdi
   140015a37:	add    DWORD PTR [rax+0x1],esp
   140015a3a:	(bad)  
   140015a3b:	add    DWORD PTR [rdx+0x1],esp
   140015a3e:	movsxd eax,DWORD PTR [rcx]
   140015a40:	add    DWORD PTR fs:[rbp+0x1],esp
   140015a44:	add    WORD PTR [rdi+0x1],sp
   140015a48:	push   0x6a016901
   140015a4d:	add    DWORD PTR [rbx+0x1],ebp
   140015a50:	ins    BYTE PTR es:[rdi],dx
   140015a51:	add    DWORD PTR [rbp+0x1],ebp
   140015a54:	outs   dx,BYTE PTR ds:[rsi]
   140015a55:	add    DWORD PTR [rdi+0x1],ebp
   140015a58:	jo     0x140015a5b
   140015a5a:	jno    0x140015a5d
   140015a5c:	jb     0x140015a5f
   140015a5e:	jae    0x140015a61
   140015a60:	je     0x140015a63
   140015a62:	jne    0x140015a65
   140015a64:	jbe    0x140015a67
   140015a66:	ja     0x140015a69
   140015a68:	js     0x140015a6b
   140015a6a:	jns    0x140015a6d
   140015a6c:	jp     0x140015a6f
   140015a6e:	jnp    0x140015a71
   140015a70:	jl     0x140015a73
   140015a72:	jge    0x140015a75
   140015a74:	jle    0x140015a77
   140015a76:	jg     0x140015a79
   140015a78:	add    BYTE PTR [rcx],0x81
   140015a7b:	add    DWORD PTR [rdx-0x7bfe7cff],eax
   140015a81:	add    DWORD PTR [rbp-0x78fe79ff],eax
   140015a87:	add    DWORD PTR [rax-0x75fe76ff],ecx
   140015a8d:	add    DWORD PTR [rbx-0x72fe73ff],ecx
   140015a93:	add    DWORD PTR [rsi-0x6ffe70ff],ecx
   140015a99:	add    DWORD PTR [rcx-0x6cfe6dff],edx
   140015a9f:	add    DWORD PTR [rcx+rax*1+0x1960195],edx
   140015aa6:	xchg   edi,eax
   140015aa7:	add    DWORD PTR [rax-0x65fe66ff],ebx
   140015aad:	add    DWORD PTR [rbx-0x62fe63ff],ebx
   140015ab3:	add    DWORD PTR [rsi-0x5ffe60ff],ebx
   140015ab9:	add    DWORD PTR [rcx-0x5cfe5dff],esp
   140015abf:	add    DWORD PTR [rcx+rax*1+0x1a601a5],esp
   140015ac6:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140015ac7:	add    DWORD PTR [rax-0x55fe56ff],ebp
   140015acd:	add    DWORD PTR [rbx-0x52fe53ff],ebp
   140015ad3:	add    DWORD PTR [rsi-0x4ffe50ff],ebp
   140015ad9:	add    DWORD PTR [rcx-0x4cfe4dff],esi
   140015adf:	add    DWORD PTR [rcx+rax*1+0x1b601b5],esi
   140015ae6:	mov    bh,0x1
   140015ae8:	mov    eax,0xba01b901
   140015aed:	add    DWORD PTR [rbx-0x42fe43ff],edi
   140015af3:	add    DWORD PTR [rsi-0x3ffe40ff],edi
   140015af9:	add    ecx,eax
   140015afb:	add    edx,eax
   140015afd:	add    ebx,eax
   140015aff:	add    esp,eax
   140015b01:	add    ebp,eax
   140015b03:	add    esi,eax
   140015b05:	add    edi,eax
   140015b07:	add    eax,ecx
   140015b09:	add    ecx,ecx
   140015b0b:	add    edx,ecx
   140015b0d:	add    ebx,ecx
   140015b0f:	add    esp,ecx
   140015b11:	add    ebp,ecx
   140015b13:	add    esi,ecx
   140015b15:	add    edi,ecx
   140015b17:	add    eax,edx
   140015b19:	add    ecx,edx
   140015b1b:	add    edx,edx
   140015b1d:	add    ebx,edx
   140015b1f:	add    esp,edx
   140015b21:	add    ebp,edx
   140015b23:	add    esi,edx
   140015b25:	add    edi,edx
   140015b27:	add    eax,ebx
   140015b29:	add    ecx,ebx
   140015b2b:	add    edx,ebx
   140015b2d:	add    ebx,ebx
   140015b2f:	add    esp,ebx
   140015b31:	add    ebp,ebx
   140015b33:	add    esi,ebx
   140015b35:	add    edi,ebx
   140015b37:	add    eax,esp
   140015b39:	add    ecx,esp
   140015b3b:	add    edx,esp
   140015b3d:	add    ebx,esp
   140015b3f:	add    esp,esp
   140015b41:	add    ebp,esp
   140015b43:	add    esi,esp
   140015b45:	add    edi,esp
   140015b47:	add    eax,ebp
   140015b49:	add    ecx,ebp
   140015b4b:	add    edx,ebp
   140015b4d:	add    ebx,ebp
   140015b4f:	add    esp,ebp
   140015b51:	add    ebp,ebp
   140015b53:	add    esi,ebp
   140015b55:	add    edi,ebp
   140015b57:	add    eax,esi
   140015b59:	add    ecx,esi
   140015b5b:	add    edx,esi
   140015b5d:	add    ebx,esi
   140015b5f:	add    esp,esi
   140015b61:	add    ebp,esi
   140015b63:	add    esi,esi
   140015b65:	add    edi,esi
   140015b67:	add    eax,edi
   140015b69:	add    ecx,edi
   140015b6b:	add    edx,edi
   140015b6d:	add    ebx,edi
   140015b6f:	add    esp,edi
   140015b71:	add    ebp,edi
   140015b73:	add    esi,edi
   140015b75:	add    edi,edi
   140015b77:	add    DWORD PTR [rax],eax
   140015b79:	add    al,BYTE PTR [rcx]
   140015b7b:	add    al,BYTE PTR [rdx]
   140015b7d:	add    al,BYTE PTR [rbx]
   140015b7f:	add    al,BYTE PTR [rdx+rax*1]
   140015b82:	add    eax,0x7020602
   140015b87:	add    cl,BYTE PTR [rax]
   140015b89:	add    cl,BYTE PTR [rcx]
   140015b8b:	add    cl,BYTE PTR [rdx]
   140015b8d:	add    cl,BYTE PTR [rbx]
   140015b8f:	add    cl,BYTE PTR [rdx+rax*1]
   140015b92:	or     eax,0xf020e02
   140015b97:	add    dl,BYTE PTR [rax]
   140015b99:	add    dl,BYTE PTR [rcx]
   140015b9b:	add    dl,BYTE PTR [rdx]
   140015b9d:	add    dl,BYTE PTR [rbx]
   140015b9f:	add    dl,BYTE PTR [rdx+rax*1]
   140015ba2:	adc    eax,0x17021602
   140015ba7:	add    bl,BYTE PTR [rax]
   140015ba9:	add    bl,BYTE PTR [rcx]
   140015bab:	add    bl,BYTE PTR [rdx]
   140015bad:	add    bl,BYTE PTR [rbx]
   140015baf:	add    bl,BYTE PTR [rdx+rax*1]
   140015bb2:	sbb    eax,0x1f021e02
   140015bb7:	add    ah,BYTE PTR [rax]
   140015bb9:	add    ah,BYTE PTR [rcx]
   140015bbb:	add    ah,BYTE PTR [rdx]
   140015bbd:	add    ah,BYTE PTR [rbx]
   140015bbf:	add    ah,BYTE PTR [rdx+rax*1]
   140015bc2:	and    eax,0x27022602
   140015bc7:	add    ch,BYTE PTR [rax]
   140015bc9:	add    ch,BYTE PTR [rcx]
   140015bcb:	add    ch,BYTE PTR [rdx]
   140015bcd:	add    ch,BYTE PTR [rbx]
   140015bcf:	add    ch,BYTE PTR [rdx+rax*1]
   140015bd2:	sub    eax,0x2f022e02
   140015bd7:	add    dh,BYTE PTR [rax]
   140015bd9:	add    dh,BYTE PTR [rcx]
   140015bdb:	add    dh,BYTE PTR [rdx]
   140015bdd:	add    dh,BYTE PTR [rbx]
   140015bdf:	add    dh,BYTE PTR [rdx+rax*1]
   140015be2:	xor    eax,0x37023602
   140015be7:	add    bh,BYTE PTR [rax]
   140015be9:	add    bh,BYTE PTR [rcx]
   140015beb:	add    bh,BYTE PTR [rdx]
   140015bed:	add    bh,BYTE PTR [rbx]
   140015bef:	add    bh,BYTE PTR [rdx+rax*1]
   140015bf2:	cmp    eax,0x3f023e02
   140015bf7:	add    al,BYTE PTR [rax+0x2]
   140015bfa:	add    al,BYTE PTR [r10+0x2]
   140015bfe:	add    al,BYTE PTR [r10+r8*1+0x45]
   140015c03:	add    al,BYTE PTR [rsi+0x2]
   140015c06:	rex.RXB add r9b,BYTE PTR [r8+0x2]
   140015c0a:	rex.WB add cl,BYTE PTR [r10+0x2]
   140015c0e:	rex.WXB add spl,BYTE PTR [r9+0x70]
   140015c12:	jo     0x140015c77
   140015c14:	ins    DWORD PTR es:[rdi],dx
   140015c15:	fs cs gs js 0x140015c7f
   140015c1a:	add    BYTE PTR [rdi],bh
   140015c1c:	(bad)  
   140015c1d:	xor    BYTE PTR [rdx+0x55],al
   140015c20:	rex.RX
   140015c21:	rex.RX
   140015c22:	rex.RB push r10
   140015c24:	rex
   140015c25:	rex push rcx
   140015c27:	rex.RB
   140015c28:	rex.B
   140015c29:	rex.B
   140015c2a:	rex push rax
   140015c2c:	rex.RB
   140015c2d:	rex.B
   140015c2e:	rex.RB
   140015c2f:	rex.WXB
   140015c30:	rex pop rdx
   140015c32:	add    BYTE PTR [rdi],bh
   140015c34:	(bad)  
   140015c35:	xor    BYTE PTR [rdx+0x55],al
   140015c38:	rex.RX
   140015c39:	rex.RX
   140015c3a:	rex.RB push r10
   140015c3c:	rex
   140015c3d:	rex push rcx
   140015c3f:	rex.RB
   140015c40:	rex.B
   140015c41:	rex.B
   140015c42:	rex pop rax
   140015c44:	pop    rdx
   140015c45:	add    BYTE PTR [rdi],bh
   140015c47:	(bad)  
   140015c48:	xor    BYTE PTR [rbx+0x43],al
   140015c4b:	jb     0x140015cb6
   140015c4d:	je     0x140015ca2
   140015c4f:	movsxd eax,DWORD PTR gs:[rax+0x40]
   140015c53:	push   rcx
   140015c54:	rex.RB
   140015c55:	rex.B
   140015c56:	rex.B
   140015c57:	rex pop rax
   140015c59:	pop    rdx
   140015c5a:	add    BYTE PTR [rdi],bh
   140015c5c:	(bad)  
   140015c5d:	xor    BYTE PTR [rbx+0x46],al
   140015c60:	(bad)  
   140015c61:	imul   esp,DWORD PTR [rbp+0x4c],0x6f
   140015c65:	movsxd ebp,DWORD PTR [rbx+0x40]
   140015c68:	rex push rcx
   140015c6a:	rex.RB
   140015c6b:	rex.B
   140015c6c:	rex.B
   140015c6d:	rex pop rax
   140015c6f:	pop    rdx
   140015c70:	add    BYTE PTR [rdi],bh
   140015c72:	(bad)  
   140015c73:	xor    BYTE PTR [rbx+0x52],al
   140015c76:	gs (bad) 
   140015c78:	fs gs jb 0x140015cd3
   140015c7c:	jb     0x140015ce7
   140015c7e:	je     0x140015ce5
   140015c80:	jb     0x140015cce
   140015c82:	outs   dx,DWORD PTR ds:[rsi]
   140015c83:	movsxd ebp,DWORD PTR [rbx+0x32]
   140015c86:	rex
   140015c87:	rex push rcx
   140015c89:	rex.RB
   140015c8a:	rex.B
   140015c8b:	rex.B
   140015c8c:	rex
   140015c8d:	rex.B
   140015c8e:	rex.RB
   140015c8f:	rex.X push rsi
   140015c91:	xor    BYTE PTR [rax+0x40],al
   140015c94:	pop    rdx
   140015c95:	add    BYTE PTR [rdi],bh
   140015c97:	(bad)  
   140015c98:	xor    BYTE PTR [rbx+0x52],al
   140015c9b:	gs (bad) 
   140015c9d:	fs gs jb 0x140015cf8
   140015ca1:	jb     0x140015d0c
   140015ca3:	je     0x140015d0a
   140015ca5:	jb     0x140015cf3
   140015ca7:	outs   dx,DWORD PTR ds:[rsi]
   140015ca8:	movsxd ebp,DWORD PTR [rbx+0x32]
   140015cab:	rex
   140015cac:	rex push rcx
   140015cae:	rex.RB
   140015caf:	rex.B
   140015cb0:	rex.B
   140015cb1:	rex pop rax
   140015cb3:	pop    rdx
   140015cb4:	add    BYTE PTR [rdi],bh
   140015cb6:	(bad)  
   140015cb7:	xor    BYTE PTR [rbx+0x52],al
   140015cba:	gs (bad) 
   140015cbc:	fs gs jb 0x140015d17
   140015cc0:	jb     0x140015d2b
   140015cc2:	je     0x140015d29
   140015cc4:	jb     0x140015d12
   140015cc6:	outs   dx,DWORD PTR ds:[rsi]
   140015cc7:	movsxd ebp,DWORD PTR [rbx+0x33]
   140015cca:	rex
   140015ccb:	rex push rcx
   140015ccd:	rex.RB
   140015cce:	rex.B
   140015ccf:	rex.B
   140015cd0:	rex
   140015cd1:	rex.B
   140015cd2:	rex.RB
   140015cd3:	rex.X push rsi
   140015cd5:	xor    BYTE PTR [rax+0x40],al
   140015cd8:	pop    rdx
   140015cd9:	add    BYTE PTR [rdi],bh
   140015cdb:	(bad)  
   140015cdc:	xor    BYTE PTR [rbx+0x52],al
   140015cdf:	gs (bad) 
   140015ce1:	fs gs jb 0x140015d3c
   140015ce5:	jb     0x140015d50
   140015ce7:	je     0x140015d4e
   140015ce9:	jb     0x140015d37
   140015ceb:	outs   dx,DWORD PTR ds:[rsi]
   140015cec:	movsxd ebp,DWORD PTR [rbx+0x33]
   140015cef:	rex
   140015cf0:	rex push rcx
   140015cf2:	rex.RB
   140015cf3:	rex.B
   140015cf4:	rex.B
   140015cf5:	rex pop rax
   140015cf7:	pop    rdx
   140015cf8:	add    BYTE PTR [rdi],bh
   140015cfa:	(bad)  
   140015cfb:	xor    BYTE PTR [rbx+0x52],al
   140015cfe:	gs (bad) 
   140015d00:	fs gs jb 0x140015d5b
   140015d04:	jb     0x140015d6f
   140015d06:	je     0x140015d6d
   140015d08:	jb     0x140015d56
   140015d0a:	outs   dx,DWORD PTR ds:[rsi]
   140015d0b:	movsxd ebp,DWORD PTR [rbx+0x40]
   140015d0e:	rex push rcx
   140015d10:	rex.RB
   140015d11:	rex.B
   140015d12:	rex.B
   140015d13:	rex
   140015d14:	rex.B
   140015d15:	rex.RB
   140015d16:	rex.X push rsi
   140015d18:	xor    BYTE PTR [rax+0x40],al
   140015d1b:	pop    rdx
   140015d1c:	add    BYTE PTR [rdi],bh
   140015d1e:	(bad)  
   140015d1f:	xor    BYTE PTR [rbx+0x52],al
   140015d22:	gs (bad) 
   140015d24:	fs gs jb 0x140015d7f
   140015d28:	jb     0x140015d93
   140015d2a:	je     0x140015d91
   140015d2c:	jb     0x140015d7a
   140015d2e:	outs   dx,DWORD PTR ds:[rsi]
   140015d2f:	movsxd ebp,DWORD PTR [rbx+0x40]
   140015d32:	rex push rcx
   140015d34:	rex.RB
   140015d35:	rex.B
   140015d36:	rex.B
   140015d37:	rex pop rax
   140015d39:	pop    rdx
   140015d3a:	add    BYTE PTR [rdi],bh
   140015d3c:	(bad)  
   140015d3d:	xor    BYTE PTR [rbx+0x52],al
   140015d40:	je     0x140015dae
   140015d42:	push   rdx
   140015d43:	gs jae 0x140015db5
   140015d46:	jne    0x140015dba
   140015d48:	movsxd esp,DWORD PTR [rbp+0x40]
   140015d4b:	rex push rcx
   140015d4d:	rex.RB
   140015d4e:	rex.B
   140015d4f:	rex.B
   140015d50:	rex
   140015d51:	rex.B
   140015d52:	rex.RB
   140015d53:	rex.X push rsi
   140015d55:	xor    BYTE PTR [rax+0x40],al
   140015d58:	pop    rdx
   140015d59:	add    BYTE PTR [rdi],bh
   140015d5b:	(bad)  
   140015d5c:	xor    BYTE PTR [rbx+0x52],al
   140015d5f:	je     0x140015dcd
   140015d61:	push   rdx
   140015d62:	gs jae 0x140015dd4
   140015d65:	jne    0x140015dd9
   140015d67:	movsxd esp,DWORD PTR [rbp+0x40]
   140015d6a:	rex push rcx
   140015d6c:	rex.RB
   140015d6d:	rex.B
   140015d6e:	rex.B
   140015d6f:	rex pop rax
   140015d71:	pop    rdx
   140015d72:	add    BYTE PTR [rdi],bh
   140015d74:	(bad)  
   140015d75:	xor    BYTE PTR [rbx+0x53],al
   140015d78:	push   0x4c657261
   140015d7d:	outs   dx,DWORD PTR ds:[rsi]
   140015d7e:	movsxd ebp,DWORD PTR [rbx+0x40]
   140015d81:	rex push rcx
   140015d83:	rex.RB
   140015d84:	rex.B
   140015d85:	rex.B
   140015d86:	rex pop rax
   140015d88:	pop    rdx
   140015d89:	add    BYTE PTR [rdi],bh
   140015d8b:	(bad)  
   140015d8c:	xor    BYTE PTR [rbx+0x53],al
   140015d8f:	push   0x6c657261
   140015d94:	outs   dx,DWORD PTR ds:[rsi]
   140015d95:	movsxd ebp,DWORD PTR [rbx+0x40]
   140015d98:	rex push rcx
   140015d9a:	rex.RB
   140015d9b:	rex.B
   140015d9c:	rex.B
   140015d9d:	rex
   140015d9e:	rex.W
   140015d9f:	rex.W
   140015da0:	rex pop rdx
   140015da2:	add    BYTE PTR [rdi],bh
   140015da4:	(bad)  
   140015da5:	xor    BYTE PTR [rbx+0x53],al
   140015da8:	ins    DWORD PTR es:[rdi],dx
   140015da9:	(bad)  
   140015daa:	ins    BYTE PTR es:[rdi],dx
   140015dab:	ins    BYTE PTR es:[rdi],dx
   140015dac:	push   rbx
   140015dad:	jo     0x140015e18
   140015daf:	outs   dx,BYTE PTR ds:[rsi]
   140015db0:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140015db2:	movsxd ebp,DWORD PTR [rbx+0x40]
   140015db5:	rex push rcx
   140015db7:	rex.RB
   140015db8:	rex.B
   140015db9:	rex.B
   140015dba:	rex
   140015dbb:	rex.B
   140015dbc:	rex.RB
   140015dbd:	rex.X push rsi
   140015dbf:	xor    BYTE PTR [rax+0x40],al
   140015dc2:	pop    rdx
   140015dc3:	add    BYTE PTR [rdi],bh
   140015dc5:	(bad)  
   140015dc6:	xor    BYTE PTR [rbx+0x53],al
   140015dc9:	ins    DWORD PTR es:[rdi],dx
   140015dca:	(bad)  
   140015dcb:	ins    BYTE PTR es:[rdi],dx
   140015dcc:	ins    BYTE PTR es:[rdi],dx
   140015dcd:	push   rbx
   140015dce:	jo     0x140015e39
   140015dd0:	outs   dx,BYTE PTR ds:[rsi]
   140015dd1:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140015dd3:	movsxd ebp,DWORD PTR [rbx+0x40]
   140015dd6:	rex push rcx
   140015dd8:	rex.RB
   140015dd9:	rex.B
   140015dda:	rex.B
   140015ddb:	rex pop rax
   140015ddd:	pop    rdx
   140015dde:	add    BYTE PTR [rdi],bh
   140015de0:	(bad)  
   140015de1:	xor    BYTE PTR [rbx+0x53],al
   140015de4:	jo     0x140015e4f
   140015de6:	outs   dx,BYTE PTR ds:[rsi]
   140015de7:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140015de9:	movsxd ebp,DWORD PTR [rbx+0x40]
   140015dec:	rex push rcx
   140015dee:	rex.RB
   140015def:	rex.B
   140015df0:	rex.B
   140015df1:	rex
   140015df2:	rex.B
   140015df3:	rex.RB
   140015df4:	rex.X push rsi
   140015df6:	xor    BYTE PTR [rax+0x40],al
   140015df9:	pop    rdx
   140015dfa:	add    BYTE PTR [rdi],bh
   140015dfc:	(bad)  
   140015dfd:	xor    BYTE PTR [rbx+0x53],al
   140015e00:	jo     0x140015e6b
   140015e02:	outs   dx,BYTE PTR ds:[rsi]
   140015e03:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140015e05:	movsxd ebp,DWORD PTR [rbx+0x40]
   140015e08:	rex push rcx
   140015e0a:	rex.RB
   140015e0b:	rex.B
   140015e0c:	rex.B
   140015e0d:	rex pop rax
   140015e0f:	pop    rdx
   140015e10:	add    BYTE PTR [rdi],bh
   140015e12:	(bad)  
   140015e13:	xor    BYTE PTR [rbp+0x42],cl
   140015e16:	rex
   140015e17:	rex push rcx
   140015e19:	rex.RB
   140015e1a:	rex.B
   140015e1b:	rex.B
   140015e1c:	rex push rax
   140015e1e:	rex.RB
   140015e1f:	push   r13
   140015e21:	rex.WB
   140015e22:	rex.WRB push r11
   140015e24:	rex.B
   140015e25:	fs ins DWORD PTR es:[rdi],dx
   140015e27:	imul   ebp,DWORD PTR [rsi+0x42],0x57657361
   140015e2e:	rex
   140015e2f:	rex
   140015e30:	rex pop rdx
   140015e32:	add    BYTE PTR [rdi],bh
   140015e34:	(bad)  
   140015e35:	xor    BYTE PTR [rbp+0x55],cl
   140015e38:	rex.WR push rsp
   140015e3a:	rex.WB push r11
   140015e3c:	pop    rdx
   140015e3d:	rex
   140015e3e:	rex push rcx
   140015e40:	rex.RB
   140015e41:	rex.B
   140015e42:	rex.B
   140015e43:	rex
   140015e44:	rex.B
   140015e45:	rex.RB
   140015e46:	rex.X push rsi
   140015e48:	xor    BYTE PTR [rax+0x40],al
   140015e4b:	pop    rdx
   140015e4c:	add    BYTE PTR [rdi],bh
   140015e4e:	(bad)  
   140015e4f:	xor    BYTE PTR [rbp+0x55],cl
   140015e52:	rex.WR push rsp
   140015e54:	rex.WB push r11
   140015e56:	pop    rdx
   140015e57:	rex
   140015e58:	rex push rcx
   140015e5a:	rex.RB
   140015e5b:	rex.B
   140015e5c:	rex.B
   140015e5d:	rex push rax
   140015e5f:	rex.RB
   140015e60:	rex.B
   140015e61:	rex.RXB
   140015e62:	rex.WXB
   140015e63:	rex pop rdx
   140015e65:	add    BYTE PTR [rdi],bh
   140015e67:	(bad)  
   140015e68:	xor    BYTE PTR [rbp+0x55],cl
   140015e6b:	rex.WR push rsp
   140015e6d:	rex.WB push r11
   140015e6f:	pop    rdx
   140015e70:	rex
   140015e71:	rex push rcx
   140015e73:	rex.RB
   140015e74:	rex.B
   140015e75:	rex.B
   140015e76:	rex push rax
   140015e78:	rex.RB
   140015e79:	rex.X
   140015e7a:	rex.RXB
   140015e7b:	rex pop rdx
   140015e7d:	add    BYTE PTR [rdi],bh
   140015e7f:	(bad)  
   140015e80:	xor    BYTE PTR [rbp+0x55],cl
   140015e83:	rex.WR push rsp
   140015e85:	rex.WB push r11
   140015e87:	pop    rdx
   140015e88:	rex
   140015e89:	rex push rcx
   140015e8b:	rex.RB
   140015e8c:	rex.B
   140015e8d:	rex.B
   140015e8e:	rex pop rax
   140015e90:	pop    rdx
   140015e91:	add    BYTE PTR [rdi],bh
   140015e93:	(bad)  
   140015e94:	xor    BYTE PTR [rbx+0x54],dl
   140015e97:	push   rdx
   140015e98:	rex.B
   140015e99:	rex
   140015e9a:	rex
   140015e9b:	rex.B
   140015e9c:	rex.RB
   140015e9d:	rex.B
   140015e9e:	rex.B
   140015e9f:	rex
   140015ea0:	rex.B
   140015ea1:	rex.RB
   140015ea2:	rex.X push rsi
   140015ea4:	xor    BYTE PTR [rax+0x40],al
   140015ea7:	pop    rdx
   140015ea8:	add    BYTE PTR [rdi],bh
   140015eaa:	(bad)  
   140015eab:	xor    BYTE PTR [rbx+0x54],dl
   140015eae:	push   rdx
   140015eaf:	rex.B
   140015eb0:	rex
   140015eb1:	rex
   140015eb2:	rex.B
   140015eb3:	rex.RB
   140015eb4:	rex.B
   140015eb5:	rex.B
   140015eb6:	rex push rax
   140015eb8:	rex.RB
   140015eb9:	rex.B
   140015eba:	rex.R
   140015ebb:	rex pop rdx
   140015ebd:	add    BYTE PTR [rdi],bh
   140015ebf:	(bad)  
   140015ec0:	xor    BYTE PTR [rbx+0x54],dl
   140015ec3:	push   rdx
   140015ec4:	rex.B
   140015ec5:	rex
   140015ec6:	rex
   140015ec7:	rex.B
   140015ec8:	rex.RB
   140015ec9:	rex.B
   140015eca:	rex.B
   140015ecb:	rex push rax
   140015ecd:	rex.RB
   140015ece:	rex.X
   140015ecf:	rex.R
   140015ed0:	rex pop rdx
   140015ed2:	add    BYTE PTR [rdi],bh
   140015ed4:	(bad)  
   140015ed5:	xor    BYTE PTR [rbx+0x54],dl
   140015ed8:	push   rdx
   140015ed9:	rex.B
   140015eda:	rex
   140015edb:	rex push rcx
   140015edd:	rex.RB
   140015ede:	rex.B
   140015edf:	rex.B
   140015ee0:	rex push rax
   140015ee2:	rex.RB
   140015ee3:	rex.B
   140015ee4:	rex.R
   140015ee5:	rex.WXB
   140015ee6:	rex pop rdx
   140015ee8:	add    BYTE PTR [rdi],bh
   140015eea:	(bad)  
   140015eeb:	xor    BYTE PTR [rbx+0x54],dl
   140015eee:	push   rdx
   140015eef:	rex.B
   140015ef0:	rex
   140015ef1:	rex push rcx
   140015ef3:	rex.RB
   140015ef4:	rex.B
   140015ef5:	rex.B
   140015ef6:	rex pop rax
   140015ef8:	pop    rdx
   140015ef9:	add    BYTE PTR [rdi],bh
   140015efb:	(bad)  
   140015efc:	xor    BYTE PTR [rbx+0x54],dl
   140015eff:	push   rdx
   140015f00:	push   r13
   140015f02:	rex
   140015f03:	rex push rcx
   140015f05:	rex.RB
   140015f06:	rex.B
   140015f07:	rex.B
   140015f08:	rex
   140015f09:	rex.B
   140015f0a:	rex.RB
   140015f0b:	push   r14
   140015f0d:	xor    BYTE PTR [rax+0x40],al
   140015f10:	pop    rdx
   140015f11:	add    BYTE PTR [rdi],bh
   140015f13:	(bad)  
   140015f14:	xor    BYTE PTR [rbx+0x54],dl
   140015f17:	push   rdx
   140015f18:	push   r13
   140015f1a:	rex
   140015f1b:	rex push rcx
   140015f1d:	rex.RB
   140015f1e:	rex.B
   140015f1f:	rex.B
   140015f20:	rex push rax
   140015f22:	rex.RB
   140015f23:	rex.X
   140015f24:	rex.R
   140015f25:	rex pop rdx
   140015f27:	add    BYTE PTR [rdi],bh
   140015f29:	(bad)  
   140015f2a:	xor    BYTE PTR [rbx+0x54],dl
   140015f2d:	push   rdx
   140015f2e:	push   r13
   140015f30:	rex
   140015f31:	rex push rcx
   140015f33:	rex.RB
   140015f34:	rex.B
   140015f35:	rex.B
   140015f36:	rex push rax
   140015f38:	rex.RB
   140015f39:	rex.X
   140015f3a:	rex.R
   140015f3b:	rex.W
   140015f3c:	rex pop rdx
   140015f3e:	add    BYTE PTR [rdi],bh
   140015f40:	(bad)  
   140015f41:	xor    BYTE PTR [rbx+0x54],dl
   140015f44:	push   rdx
   140015f45:	push   r13
   140015f47:	rex
   140015f48:	rex push rcx
   140015f4a:	rex.RB
   140015f4b:	rex.B
   140015f4c:	rex.B
   140015f4d:	rex push rax
   140015f4f:	rex.RB
   140015f50:	rex.X
   140015f51:	rex.RXB
   140015f52:	rex pop rdx
   140015f54:	add    BYTE PTR [rdi],bh
   140015f56:	(bad)  
   140015f57:	xor    BYTE PTR [rbx+0x54],dl
   140015f5a:	push   rdx
   140015f5b:	push   r13
   140015f5d:	rex
   140015f5e:	rex push rcx
   140015f60:	rex.RB
   140015f61:	rex.B
   140015f62:	rex.B
   140015f63:	rex pop rax
   140015f65:	pop    rdx
   140015f66:	add    BYTE PTR [rdi],bh
   140015f68:	(bad)  
   140015f69:	xor    BYTE PTR [rbx+0x54],dl
   140015f6c:	push   rdx
   140015f6d:	push   rbp
   140015f6e:	rex
   140015f6f:	rex
   140015f70:	rex.B
   140015f71:	rex.RB
   140015f72:	rex.B
   140015f73:	rex.B
   140015f74:	rex
   140015f75:	rex.B
   140015f76:	rex.RB
   140015f77:	rex.X push rsi
   140015f79:	xor    BYTE PTR [rax+0x40],al
   140015f7c:	pop    rdx
   140015f7d:	add    BYTE PTR [rdi],bh
   140015f7f:	(bad)  
   140015f80:	xor    BYTE PTR [rbx+0x54],dl
   140015f83:	push   rdx
   140015f84:	push   rbp
   140015f85:	rex
   140015f86:	rex
   140015f87:	rex.B
   140015f88:	rex.RB
   140015f89:	rex.B
   140015f8a:	rex.B
   140015f8b:	rex push rax
   140015f8d:	rex.RB
   140015f8e:	rex.B
   140015f8f:	rex.RXB
   140015f90:	rex pop rdx
   140015f92:	add    BYTE PTR [rdi],bh
   140015f94:	(bad)  
   140015f95:	xor    BYTE PTR [rbx+0x54],dl
   140015f98:	push   rdx
   140015f99:	push   rbp
   140015f9a:	rex
   140015f9b:	rex
   140015f9c:	rex.B
   140015f9d:	rex.RB
   140015f9e:	rex.B
   140015f9f:	rex.B
   140015fa0:	rex push rax
   140015fa2:	rex.RB
   140015fa3:	rex.X
   140015fa4:	rex.RXB
   140015fa5:	rex pop rdx
   140015fa7:	add    BYTE PTR [rdi],bh
   140015fa9:	(bad)  
   140015faa:	xor    BYTE PTR [rbx+0x54],dl
   140015fad:	push   rdx
   140015fae:	push   rbp
   140015faf:	rex
   140015fb0:	rex push rcx
   140015fb2:	rex.RB
   140015fb3:	rex.B
   140015fb4:	rex.B
   140015fb5:	rex push rax
   140015fb7:	rex.RB
   140015fb8:	rex.B
   140015fb9:	rex.RXB
   140015fba:	rex.WXB
   140015fbb:	rex pop rdx
   140015fbd:	add    BYTE PTR [rdi],bh
   140015fbf:	(bad)  
   140015fc0:	xor    BYTE PTR [rbx+0x54],dl
   140015fc3:	push   rdx
   140015fc4:	push   rbp
   140015fc5:	rex
   140015fc6:	rex push rcx
   140015fc8:	rex.RB
   140015fc9:	rex.B
   140015fca:	rex.B
   140015fcb:	rex pop rax
   140015fcd:	pop    rdx
   140015fce:	add    BYTE PTR [rdi],bh
   140015fd0:	(bad)  
   140015fd1:	xor    BYTE PTR [rbx+rdx*2+0x5f],dl
   140015fd5:	push   rdx
   140015fd6:	rex.RB push r11
   140015fd8:	rex.WRXB push r13
   140015fda:	push   rdx
   140015fdb:	rex.XB
   140015fdc:	rex.RB
   140015fdd:	rex
   140015fde:	rex push rcx
   140015fe0:	rex.RB
   140015fe1:	rex.B
   140015fe2:	rex.B
   140015fe3:	rex
   140015fe4:	rex.B
   140015fe5:	rex.RB
   140015fe6:	rex.X push rsi
   140015fe8:	xor    BYTE PTR [rax+0x40],al
   140015feb:	pop    rdx
   140015fec:	add    BYTE PTR [rdi],bh
   140015fee:	(bad)  
   140015fef:	xor    BYTE PTR [rbx+rdx*2+0x5f],dl
   140015ff3:	push   rdx
   140015ff4:	rex.RB push r11
   140015ff6:	rex.WRXB push r13
   140015ff8:	push   rdx
   140015ff9:	rex.XB
   140015ffa:	rex.RB
   140015ffb:	rex
   140015ffc:	rex push rcx
   140015ffe:	rex.RB
   140015fff:	rex.B
   140016000:	rex.B
   140016001:	rex pop rax
   140016003:	pop    rdx
   140016004:	add    BYTE PTR [rdi],bh
   140016006:	(bad)  
   140016007:	xor    DWORD PTR [rdx+0x55],eax
   14001600a:	rex.RX
   14001600b:	rex.RX
   14001600c:	rex.RB push r10
   14001600e:	rex
   14001600f:	rex push rcx
   140016011:	rex.RB
   140016012:	rex.B
   140016013:	rex.B
   140016014:	rex pop rax
   140016016:	pop    rdx
   140016017:	add    BYTE PTR [rdi],bh
   140016019:	(bad)  
   14001601a:	xor    DWORD PTR [rbx+0x43],eax
   14001601d:	jb     0x140016088
   14001601f:	je     0x140016074
   140016021:	movsxd eax,DWORD PTR gs:[rax+0x40]
   140016025:	push   rcx
   140016026:	rex.RB
   140016027:	rex.B
   140016028:	rex.B
   140016029:	rex pop rax
   14001602b:	pop    rdx
   14001602c:	add    BYTE PTR [rdi],bh
   14001602e:	(bad)  
   14001602f:	xor    DWORD PTR [rbx+0x46],eax
   140016032:	(bad)  
   140016033:	imul   esp,DWORD PTR [rbp+0x4c],0x6f
   140016037:	movsxd ebp,DWORD PTR [rbx+0x40]
   14001603a:	rex push rcx
   14001603c:	rex.RB
   14001603d:	rex.B
   14001603e:	rex.B
   14001603f:	rex pop rax
   140016041:	pop    rdx
   140016042:	add    BYTE PTR [rdi],bh
   140016044:	(bad)  
   140016045:	xor    DWORD PTR [rbx+0x52],eax
   140016048:	gs (bad) 
   14001604a:	fs gs jb 0x1400160a5
   14001604e:	jb     0x1400160b9
   140016050:	je     0x1400160b7
   140016052:	jb     0x1400160a0
   140016054:	outs   dx,DWORD PTR ds:[rsi]
   140016055:	movsxd ebp,DWORD PTR [rbx+0x32]
   140016058:	rex
   140016059:	rex push rcx
   14001605b:	rex.RB
   14001605c:	rex.B
   14001605d:	rex.B
   14001605e:	rex pop rax
   140016060:	pop    rdx
   140016061:	add    BYTE PTR [rdi],bh
   140016063:	(bad)  
   140016064:	xor    DWORD PTR [rbx+0x52],eax
   140016067:	gs (bad) 
   140016069:	fs gs jb 0x1400160c4
   14001606d:	jb     0x1400160d8
   14001606f:	je     0x1400160d6
   140016071:	jb     0x1400160bf
   140016073:	outs   dx,DWORD PTR ds:[rsi]
   140016074:	movsxd ebp,DWORD PTR [rbx+0x33]
   140016077:	rex
   140016078:	rex push rcx
   14001607a:	rex.RB
   14001607b:	rex.B
   14001607c:	rex.B
   14001607d:	rex pop rax
   14001607f:	pop    rdx
   140016080:	add    BYTE PTR [rdi],bh
   140016082:	(bad)  
   140016083:	xor    DWORD PTR [rbx+0x52],eax
   140016086:	gs (bad) 
   140016088:	fs gs jb 0x1400160e3
   14001608c:	jb     0x1400160f7
   14001608e:	je     0x1400160f5
   140016090:	jb     0x1400160de
   140016092:	outs   dx,DWORD PTR ds:[rsi]
   140016093:	movsxd ebp,DWORD PTR [rbx+0x40]
   140016096:	rex push rcx
   140016098:	rex.RB
   140016099:	rex.B
   14001609a:	rex.B
   14001609b:	rex pop rax
   14001609d:	pop    rdx
   14001609e:	add    BYTE PTR [rdi],bh
   1400160a0:	(bad)  
   1400160a1:	xor    DWORD PTR [rbx+0x52],eax
   1400160a4:	je     0x140016112
   1400160a6:	push   rdx
   1400160a7:	gs jae 0x140016119
   1400160aa:	jne    0x14001611e
   1400160ac:	movsxd esp,DWORD PTR [rbp+0x40]
   1400160af:	rex push rcx
   1400160b1:	rex.RB
   1400160b2:	rex.B
   1400160b3:	rex.B
   1400160b4:	rex pop rax
   1400160b6:	pop    rdx
   1400160b7:	add    BYTE PTR [rdi],bh
   1400160b9:	(bad)  
   1400160ba:	xor    DWORD PTR [rbx+0x53],eax
   1400160bd:	push   0x4c657261
   1400160c2:	outs   dx,DWORD PTR ds:[rsi]
   1400160c3:	movsxd ebp,DWORD PTR [rbx+0x40]
   1400160c6:	rex push rcx
   1400160c8:	rex.RB
   1400160c9:	rex.B
   1400160ca:	rex.B
   1400160cb:	rex pop rax
   1400160cd:	pop    rdx
   1400160ce:	add    BYTE PTR [rdi],bh
   1400160d0:	(bad)  
   1400160d1:	xor    DWORD PTR [rbx+0x53],eax
   1400160d4:	push   0x6c657261
   1400160d9:	outs   dx,DWORD PTR ds:[rsi]
   1400160da:	movsxd ebp,DWORD PTR [rbx+0x40]
   1400160dd:	rex push rcx
   1400160df:	rex.RB
   1400160e0:	rex.B
   1400160e1:	rex.B
   1400160e2:	rex pop rax
   1400160e4:	pop    rdx
   1400160e5:	add    BYTE PTR [rdi],bh
   1400160e7:	(bad)  
   1400160e8:	xor    DWORD PTR [rbx+0x53],eax
   1400160eb:	ins    DWORD PTR es:[rdi],dx
   1400160ec:	(bad)  
   1400160ed:	ins    BYTE PTR es:[rdi],dx
   1400160ee:	ins    BYTE PTR es:[rdi],dx
   1400160ef:	push   rbx
   1400160f0:	jo     0x14001615b
   1400160f2:	outs   dx,BYTE PTR ds:[rsi]
   1400160f3:	rex.WR outs dx,DWORD PTR ds:[rsi]
   1400160f5:	movsxd ebp,DWORD PTR [rbx+0x40]
   1400160f8:	rex push rcx
   1400160fa:	rex.RB
   1400160fb:	rex.B
   1400160fc:	rex.B
   1400160fd:	rex pop rax
   1400160ff:	pop    rdx
   140016100:	add    BYTE PTR [rdi],bh
   140016102:	(bad)  
   140016103:	xor    DWORD PTR [rbx+0x53],eax
   140016106:	jo     0x140016171
   140016108:	outs   dx,BYTE PTR ds:[rsi]
   140016109:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14001610b:	movsxd ebp,DWORD PTR [rbx+0x40]
   14001610e:	rex push rcx
   140016110:	rex.RB
   140016111:	rex.B
   140016112:	rex.B
   140016113:	rex pop rax
   140016115:	pop    rdx
   140016116:	add    BYTE PTR [rdi],bh
   140016118:	(bad)  
   140016119:	xor    DWORD PTR [rbp+0x42],ecx
   14001611c:	rex
   14001611d:	rex push rcx
   14001611f:	rex.RB
   140016120:	rex.B
   140016121:	rex.B
   140016122:	rex pop rax
   140016124:	pop    rdx
   140016125:	add    BYTE PTR [rdi],bh
   140016127:	(bad)  
   140016128:	xor    DWORD PTR [rbp+0x55],ecx
   14001612b:	rex.WR push rsp
   14001612d:	rex.WB push r11
   14001612f:	pop    rdx
   140016130:	rex
   140016131:	rex push rcx
   140016133:	rex.RB
   140016134:	rex.B
   140016135:	rex.B
   140016136:	rex pop rax
   140016138:	pop    rdx
   140016139:	add    BYTE PTR [rdi],bh
   14001613b:	(bad)  
   14001613c:	xor    DWORD PTR [rbx+0x54],edx
   14001613f:	push   rdx
   140016140:	rex.B
   140016141:	rex
   140016142:	rex push rcx
   140016144:	rex.RB
   140016145:	rex.B
   140016146:	rex.B
   140016147:	rex pop rax
   140016149:	pop    rdx
   14001614a:	add    BYTE PTR [rdi],bh
   14001614c:	(bad)  
   14001614d:	xor    DWORD PTR [rbx+0x54],edx
   140016150:	push   rdx
   140016151:	push   r13
   140016153:	rex
   140016154:	rex push rcx
   140016156:	rex.RB
   140016157:	rex.B
   140016158:	rex.B
   140016159:	rex pop rax
   14001615b:	pop    rdx
   14001615c:	add    BYTE PTR [rdi],bh
   14001615e:	(bad)  
   14001615f:	xor    DWORD PTR [rbx+0x54],edx
   140016162:	push   rdx
   140016163:	push   rbp
   140016164:	rex
   140016165:	rex push rcx
   140016167:	rex.RB
   140016168:	rex.B
   140016169:	rex.B
   14001616a:	rex pop rax
   14001616c:	pop    rdx
   14001616d:	add    BYTE PTR [rdi],bh
   14001616f:	(bad)  
   140016170:	xor    DWORD PTR [rbx+rdx*2+0x5f],edx
   140016174:	push   rdx
   140016175:	rex.RB push r11
   140016177:	rex.WRXB push r13
   140016179:	push   rdx
   14001617a:	rex.XB
   14001617b:	rex.RB
   14001617c:	rex
   14001617d:	rex push rcx
   14001617f:	rex.RB
   140016180:	rex.B
   140016181:	rex.B
   140016182:	rex pop rax
   140016184:	pop    rdx
   140016185:	add    BYTE PTR [rdi],bh
   140016187:	(bad)  
   140016188:	xor    al,0x3f
   14001618a:	and    al,0x43
   14001618c:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14001618e:	movsxd ebp,DWORD PTR [rbx+0x42]
   140016191:	(bad)  
   140016192:	jae    0x1400161f9
   140016194:	and    al,0x30
   140016197:	xor    BYTE PTR [rax+rsi*1],ah
   14001619a:	xor    BYTE PTR [rax+rsi*1],ah
   14001619d:	xor    ah,BYTE PTR [rax+rsi*1]
   1400161a0:	xor    BYTE PTR [rax+rsi*1],ah
   1400161a3:	xor    ah,BYTE PTR [rax+rsi*1]
   1400161a6:	xor    DWORD PTR [rax+0x40],eax
   1400161a9:	push   rcx
   1400161aa:	rex.RB
   1400161ab:	rex.B
   1400161ac:	rex.B
   1400161ad:	rex.B
   1400161ae:	rex.RB
   1400161af:	push   r14
   1400161b1:	xor    BYTE PTR [rax+0x24],al
   1400161b4:	and    al,0x51
   1400161b6:	rex.RB
   1400161b7:	push   r14
   1400161b9:	xor    BYTE PTR [rax+0x40],al
   1400161bc:	pop    rdx
   1400161bd:	add    BYTE PTR [rdi],bh
   1400161bf:	(bad)  
   1400161c0:	xor    al,0x3f
   1400161c2:	and    al,0x43
   1400161c4:	rex.WR outs dx,DWORD PTR ds:[rsi]
   1400161c6:	movsxd ebp,DWORD PTR [rbx+0x42]
   1400161c9:	(bad)  
   1400161ca:	jae    0x140016231
   1400161cc:	and    al,0x30
   1400161cf:	xor    BYTE PTR [rax+rsi*1],ah
   1400161d2:	xor    BYTE PTR [rax+rsi*1],ah
   1400161d5:	xor    ah,BYTE PTR [rax+rsi*1]
   1400161d8:	xor    BYTE PTR [rax+rsi*1],ah
   1400161db:	xor    ah,BYTE PTR [rax+rsi*1]
   1400161de:	xor    DWORD PTR [rax+0x40],eax
   1400161e1:	push   rcx
   1400161e2:	rex.RB
   1400161e3:	rex.B
   1400161e4:	rex.B
   1400161e5:	rex.B
   1400161e6:	rex.RB
   1400161e7:	push   r14
   1400161e9:	xor    BYTE PTR [rax+0x41],al
   1400161ec:	rex.RB
   1400161ed:	rex.X push rsi
   1400161ef:	xor    BYTE PTR [rax+0x40],al
   1400161f2:	pop    rdx
   1400161f3:	add    BYTE PTR [rdi],bh
   1400161f5:	(bad)  
   1400161f6:	xor    al,0x3f
   1400161f8:	and    al,0x43
   1400161fa:	rex.WR outs dx,DWORD PTR ds:[rsi]
   1400161fc:	movsxd ebp,DWORD PTR [rbx+0x42]
   1400161ff:	(bad)  
   140016200:	jae    0x140016267
   140016202:	and    al,0x30
   140016205:	xor    DWORD PTR [rax+rsi*1],esp
   140016208:	xor    BYTE PTR [rax+rsi*1],ah
   14001620b:	xor    BYTE PTR [rax+rsi*1],ah
   14001620e:	xor    BYTE PTR [rax+rsi*1],ah
   140016211:	xor    ah,BYTE PTR [rax+rsi*1]
   140016214:	xor    DWORD PTR [rax+0x40],eax
   140016217:	push   rcx
   140016218:	rex.RB
   140016219:	rex.B
   14001621a:	rex.B
   14001621b:	rex.B
   14001621c:	rex.RB
   14001621d:	push   r14
   14001621f:	xor    BYTE PTR [rax+0x24],al
   140016222:	and    al,0x51
   140016224:	rex.RB
   140016225:	push   r14
   140016227:	xor    BYTE PTR [rax+0x40],al
   14001622a:	pop    rdx
   14001622b:	add    BYTE PTR [rdi],bh
   14001622d:	(bad)  
   14001622e:	xor    al,0x3f
   140016230:	and    al,0x43
   140016232:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140016234:	movsxd ebp,DWORD PTR [rbx+0x42]
   140016237:	(bad)  
   140016238:	jae    0x14001629f
   14001623a:	and    al,0x30
   14001623d:	xor    DWORD PTR [rax+rsi*1],esp
   140016240:	xor    BYTE PTR [rax+rsi*1],ah
   140016243:	xor    BYTE PTR [rax+rsi*1],ah
   140016246:	xor    BYTE PTR [rax+rsi*1],ah
   140016249:	xor    ah,BYTE PTR [rax+rsi*1]
   14001624c:	xor    DWORD PTR [rax+0x40],eax
   14001624f:	push   rcx
   140016250:	rex.RB
   140016251:	rex.B
   140016252:	rex.B
   140016253:	rex.B
   140016254:	rex.RB
   140016255:	push   r14
   140016257:	xor    BYTE PTR [rax+0x41],al
   14001625a:	rex.RB
   14001625b:	rex.X push rsi
   14001625d:	xor    BYTE PTR [rax+0x40],al
   140016260:	pop    rdx
   140016261:	add    BYTE PTR [rdi],bh
   140016263:	(bad)  
   140016264:	xor    al,0x3f
   140016266:	and    al,0x43
   140016268:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14001626a:	movsxd ebp,DWORD PTR [rbx+0x42]
   14001626d:	(bad)  
   14001626e:	jae    0x1400162d5
   140016270:	and    al,0x30
   140016273:	xor    ah,BYTE PTR [rax+rsi*1]
   140016276:	xor    BYTE PTR [rax+rsi*1],ah
   140016279:	xor    BYTE PTR [rax+rsi*1],ah
   14001627c:	xor    BYTE PTR [rax+rsi*1],ah
   14001627f:	xor    BYTE PTR [rax+rsi*1],ah
   140016282:	xor    BYTE PTR [rax+0x40],al
   140016285:	push   rcx
   140016286:	rex.RB
   140016287:	rex.B
   140016288:	rex.B
   140016289:	rex.B
   14001628a:	rex.RB
   14001628b:	push   r14
   14001628d:	xor    BYTE PTR [rax+0x24],al
   140016290:	and    al,0x51
   140016292:	rex.RB
   140016293:	push   r14
   140016295:	xor    BYTE PTR [rax+0x40],al
   140016298:	pop    rdx
   140016299:	add    BYTE PTR [rdi],bh
   14001629b:	(bad)  
   14001629c:	xor    al,0x3f
   14001629e:	and    al,0x43
   1400162a0:	rex.WR outs dx,DWORD PTR ds:[rsi]
   1400162a2:	movsxd ebp,DWORD PTR [rbx+0x42]
   1400162a5:	(bad)  
   1400162a6:	jae    0x14001630d
   1400162a8:	and    al,0x30
   1400162ab:	xor    ah,BYTE PTR [rax+rsi*1]
   1400162ae:	xor    BYTE PTR [rax+rsi*1],ah
   1400162b1:	xor    BYTE PTR [rax+rsi*1],ah
   1400162b4:	xor    BYTE PTR [rax+rsi*1],ah
   1400162b7:	xor    BYTE PTR [rax+rsi*1],ah
   1400162ba:	xor    BYTE PTR [rax+0x40],al
   1400162bd:	push   rcx
   1400162be:	rex.RB
   1400162bf:	rex.B
   1400162c0:	rex.B
   1400162c1:	rex.B
   1400162c2:	rex.RB
   1400162c3:	push   r14
   1400162c5:	xor    BYTE PTR [rax+0x41],al
   1400162c8:	rex.RB
   1400162c9:	rex.X push rsi
   1400162cb:	xor    BYTE PTR [rax+0x40],al
   1400162ce:	pop    rdx
   1400162cf:	add    BYTE PTR [rdi],bh
   1400162d1:	(bad)  
   1400162d2:	xor    al,0x3f
   1400162d4:	and    al,0x43
   1400162d6:	rex.WR outs dx,DWORD PTR ds:[rsi]
   1400162d8:	movsxd ebp,DWORD PTR [rbx+0x42]
   1400162db:	(bad)  
   1400162dc:	jae    0x140016343
   1400162de:	and    al,0x30
   1400162e1:	xor    esp,DWORD PTR [rax+rsi*1]
   1400162e4:	xor    BYTE PTR [rax+rsi*1],ah
   1400162e7:	xor    BYTE PTR [rax+rsi*1],ah
   1400162ea:	xor    DWORD PTR [rax+rsi*1],esp
   1400162ed:	xor    ah,BYTE PTR [rax+rsi*1]
   1400162f0:	xor    al,BYTE PTR [rax+0x40]
   1400162f3:	push   rcx
   1400162f4:	rex.RB
   1400162f5:	rex.B
   1400162f6:	rex.B
   1400162f7:	rex.B
   1400162f8:	rex.RB
   1400162f9:	push   r14
   1400162fb:	xor    BYTE PTR [rax+0x24],al
   1400162fe:	and    al,0x51
   140016300:	rex.RB
   140016301:	push   r14
   140016303:	xor    BYTE PTR [rax+0x40],al
   140016306:	pop    rdx
   140016307:	add    BYTE PTR [rdi],bh
   140016309:	(bad)  
   14001630a:	xor    al,0x3f
   14001630c:	and    al,0x43
   14001630e:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140016310:	movsxd ebp,DWORD PTR [rbx+0x42]
   140016313:	(bad)  
   140016314:	jae    0x14001637b
   140016316:	and    al,0x30
   140016319:	xor    esp,DWORD PTR [rax+rsi*1]
   14001631c:	xor    BYTE PTR [rax+rsi*1],ah
   14001631f:	xor    BYTE PTR [rax+rsi*1],ah
   140016322:	xor    DWORD PTR [rax+rsi*1],esp
   140016325:	xor    ah,BYTE PTR [rax+rsi*1]
   140016328:	xor    al,BYTE PTR [rax+0x40]
   14001632b:	push   rcx
   14001632c:	rex.RB
   14001632d:	rex.B
   14001632e:	rex.B
   14001632f:	rex.B
   140016330:	rex.RB
   140016331:	push   r14
   140016333:	xor    BYTE PTR [rax+0x41],al
   140016336:	rex.RB
   140016337:	rex.X push rsi
   140016339:	xor    BYTE PTR [rax+0x40],al
   14001633c:	pop    rdx
   14001633d:	add    BYTE PTR [rdi],bh
   14001633f:	(bad)  
   140016340:	xor    al,0x3f
   140016342:	and    al,0x43
   140016344:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140016346:	movsxd ebp,DWORD PTR [rbx+0x42]
   140016349:	(bad)  
   14001634a:	jae    0x1400163b1
   14001634c:	and    al,0x30
   14001634f:	xor    al,0x24
   140016351:	xor    BYTE PTR [rcx],dh
   140016353:	and    al,0x30
   140016355:	xor    BYTE PTR [rax+rsi*1],ah
   140016358:	xor    DWORD PTR [rax+rsi*1],esp
   14001635b:	xor    ah,BYTE PTR [rax+rsi*1]
   14001635e:	xor    al,BYTE PTR [rax+0x40]
   140016361:	push   rcx
   140016362:	rex.RB
   140016363:	rex.B
   140016364:	rex.B
   140016365:	rex.B
   140016366:	rex.RB
   140016367:	push   r14
   140016369:	xor    BYTE PTR [rax+0x24],al
   14001636c:	and    al,0x51
   14001636e:	rex.RB
   14001636f:	push   r14
   140016371:	xor    BYTE PTR [rax+0x40],al
   140016374:	pop    rdx
   140016375:	add    BYTE PTR [rdi],bh
   140016377:	(bad)  
   140016378:	xor    al,0x3f
   14001637a:	and    al,0x43
   14001637c:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14001637e:	movsxd ebp,DWORD PTR [rbx+0x42]
   140016381:	(bad)  
   140016382:	jae    0x1400163e9
   140016384:	and    al,0x30
   140016387:	xor    al,0x24
   140016389:	xor    BYTE PTR [rcx],dh
   14001638b:	and    al,0x30
   14001638d:	xor    BYTE PTR [rax+rsi*1],ah
   140016390:	xor    DWORD PTR [rax+rsi*1],esp
   140016393:	xor    ah,BYTE PTR [rax+rsi*1]
   140016396:	xor    al,BYTE PTR [rax+0x40]
   140016399:	push   rcx
   14001639a:	rex.RB
   14001639b:	rex.B
   14001639c:	rex.B
   14001639d:	rex.B
   14001639e:	rex.RB
   14001639f:	push   r14
   1400163a1:	xor    BYTE PTR [rax+0x41],al
   1400163a4:	rex.RB
   1400163a5:	rex.X push rsi
   1400163a7:	xor    BYTE PTR [rax+0x40],al
   1400163aa:	pop    rdx
   1400163ab:	add    BYTE PTR [rdi],bh
   1400163ad:	(bad)  
   1400163ae:	xor    al,0x3f
   1400163b0:	and    al,0x43
   1400163b2:	rex.WR outs dx,DWORD PTR ds:[rsi]
   1400163b4:	movsxd ebp,DWORD PTR [rbx+0x42]
   1400163b7:	(bad)  
   1400163b8:	jae    0x14001641f
   1400163ba:	and    al,0x30
   1400163bd:	xor    eax,0x24313024
   1400163c2:	xor    BYTE PTR [rax],dh
   1400163c4:	and    al,0x30
   1400163c6:	xor    DWORD PTR [rax+rsi*1],esp
   1400163c9:	xor    ah,BYTE PTR [rax+rsi*1]
   1400163cc:	xor    al,BYTE PTR [rax+0x40]
   1400163cf:	push   rcx
   1400163d0:	rex.RB
   1400163d1:	rex.B
   1400163d2:	rex.B
   1400163d3:	rex.B
   1400163d4:	rex.RB
   1400163d5:	push   r14
   1400163d7:	xor    BYTE PTR [rax+0x24],al
   1400163da:	and    al,0x51
   1400163dc:	rex.RB
   1400163dd:	push   r14
   1400163df:	xor    BYTE PTR [rax+0x40],al
   1400163e2:	pop    rdx
   1400163e3:	add    BYTE PTR [rdi],bh
   1400163e5:	(bad)  
   1400163e6:	xor    al,0x3f
   1400163e8:	and    al,0x43
   1400163ea:	rex.WR outs dx,DWORD PTR ds:[rsi]
   1400163ec:	movsxd ebp,DWORD PTR [rbx+0x42]
   1400163ef:	(bad)  
   1400163f0:	jae    0x140016457
   1400163f2:	and    al,0x30
   1400163f5:	xor    eax,0x24313024
   1400163fa:	xor    BYTE PTR [rax],dh
   1400163fc:	and    al,0x30
   1400163fe:	xor    DWORD PTR [rax+rsi*1],esp
   140016401:	xor    ah,BYTE PTR [rax+rsi*1]
   140016404:	xor    al,BYTE PTR [rax+0x40]
   140016407:	push   rcx
   140016408:	rex.RB
   140016409:	rex.B
   14001640a:	rex.B
   14001640b:	rex.B
   14001640c:	rex.RB
   14001640d:	push   r14
   14001640f:	xor    BYTE PTR [rax+0x41],al
   140016412:	rex.RB
   140016413:	rex.X push rsi
   140016415:	xor    BYTE PTR [rax+0x40],al
   140016418:	pop    rdx
   140016419:	add    BYTE PTR [rdi],bh
   14001641b:	(bad)  
   14001641c:	xor    al,0x3f
   14001641e:	and    al,0x43
   140016420:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140016422:	movsxd ebp,DWORD PTR [rbx+0x42]
   140016425:	(bad)  
   140016426:	jae    0x14001648d
   140016428:	and    al,0x30
   14001642b:	ss and al,0x30
   14001642e:	xor    DWORD PTR [rax+rsi*1],esp
   140016431:	xor    DWORD PTR [rax+rsi*1],esp
   140016434:	xor    BYTE PTR [rax+rsi*1],ah
   140016437:	xor    ah,BYTE PTR [rax+rsi*1]
   14001643a:	xor    DWORD PTR [rax+0x40],eax
   14001643d:	push   rcx
   14001643e:	rex.RB
   14001643f:	rex.B
   140016440:	rex.B
   140016441:	rex.B
   140016442:	rex.RB
   140016443:	push   r14
   140016445:	xor    BYTE PTR [rax+0x24],al
   140016448:	and    al,0x51
   14001644a:	rex.RB
   14001644b:	push   r14
   14001644d:	xor    BYTE PTR [rax+0x40],al
   140016450:	pop    rdx
   140016451:	add    BYTE PTR [rdi],bh
   140016453:	(bad)  
   140016454:	xor    al,0x3f
   140016456:	and    al,0x43
   140016458:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14001645a:	movsxd ebp,DWORD PTR [rbx+0x42]
   14001645d:	(bad)  
   14001645e:	jae    0x1400164c5
   140016460:	and    al,0x30
   140016463:	ss and al,0x30
   140016466:	xor    DWORD PTR [rax+rsi*1],esp
   140016469:	xor    DWORD PTR [rax+rsi*1],esp
   14001646c:	xor    BYTE PTR [rax+rsi*1],ah
   14001646f:	xor    ah,BYTE PTR [rax+rsi*1]
   140016472:	xor    DWORD PTR [rax+0x40],eax
   140016475:	push   rcx
   140016476:	rex.RB
   140016477:	rex.B
   140016478:	rex.B
   140016479:	rex.B
   14001647a:	rex.RB
   14001647b:	push   r14
   14001647d:	xor    BYTE PTR [rax+0x41],al
   140016480:	rex.RB
   140016481:	rex.X push rsi
   140016483:	xor    BYTE PTR [rax+0x40],al
   140016486:	pop    rdx
   140016487:	add    BYTE PTR [rdi],bh
   140016489:	(bad)  
   14001648a:	xor    al,0x3f
   14001648c:	and    al,0x43
   14001648e:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140016490:	movsxd ebp,DWORD PTR [rbx+0x42]
   140016493:	(bad)  
   140016494:	jae    0x1400164fb
   140016496:	and    al,0x30
   140016499:	(bad)  
   14001649a:	and    al,0x30
   14001649c:	xor    DWORD PTR [rax+rsi*1],esp
   14001649f:	xor    DWORD PTR [rax+rsi*1],esp
   1400164a2:	xor    BYTE PTR [rax+rsi*1],ah
   1400164a5:	xor    ah,BYTE PTR [rax+rsi*1]
   1400164a8:	xor    DWORD PTR [rax+0x40],eax
   1400164ab:	push   rcx
   1400164ac:	rex.RB
   1400164ad:	rex.B
   1400164ae:	rex.B
   1400164af:	rex.B
   1400164b0:	rex.RB
   1400164b1:	push   r14
   1400164b3:	xor    BYTE PTR [rax+0x24],al
   1400164b6:	and    al,0x51
   1400164b8:	rex.RB
   1400164b9:	push   r14
   1400164bb:	xor    BYTE PTR [rax+0x40],al
   1400164be:	pop    rdx
   1400164bf:	add    BYTE PTR [rdi],bh
   1400164c1:	(bad)  
   1400164c2:	xor    al,0x3f
   1400164c4:	and    al,0x43
   1400164c6:	rex.WR outs dx,DWORD PTR ds:[rsi]
   1400164c8:	movsxd ebp,DWORD PTR [rbx+0x42]
   1400164cb:	(bad)  
   1400164cc:	jae    0x140016533
   1400164ce:	and    al,0x30
   1400164d1:	(bad)  
   1400164d2:	and    al,0x30
   1400164d4:	xor    DWORD PTR [rax+rsi*1],esp
   1400164d7:	xor    DWORD PTR [rax+rsi*1],esp
   1400164da:	xor    BYTE PTR [rax+rsi*1],ah
   1400164dd:	xor    ah,BYTE PTR [rax+rsi*1]
   1400164e0:	xor    DWORD PTR [rax+0x40],eax
   1400164e3:	push   rcx
   1400164e4:	rex.RB
   1400164e5:	rex.B
   1400164e6:	rex.B
   1400164e7:	rex.B
   1400164e8:	rex.RB
   1400164e9:	push   r14
   1400164eb:	xor    BYTE PTR [rax+0x41],al
   1400164ee:	rex.RB
   1400164ef:	rex.X push rsi
   1400164f1:	xor    BYTE PTR [rax+0x40],al
   1400164f4:	pop    rdx
   1400164f5:	add    BYTE PTR [rdi],bh
   1400164f7:	(bad)  
   1400164f8:	xor    al,0x3f
   1400164fa:	and    al,0x43
   1400164fc:	rex.WR outs dx,DWORD PTR ds:[rsi]
   1400164fe:	movsxd ebp,DWORD PTR [rbx+0x42]
   140016501:	(bad)  
   140016502:	jae    0x140016569
   140016504:	and    al,0x30
   140016507:	cmp    BYTE PTR [rax+rsi*1],ah
   14001650a:	xor    DWORD PTR [rax+rsi*1],esp
   14001650d:	xor    BYTE PTR [rax+rsi*1],ah
   140016510:	xor    BYTE PTR [rax+rsi*1],ah
   140016513:	xor    ah,BYTE PTR [rax+rsi*1]
   140016516:	xor    DWORD PTR [rax+0x40],eax
   140016519:	push   rcx
   14001651a:	rex.RB
   14001651b:	rex.B
   14001651c:	rex.B
   14001651d:	rex.B
   14001651e:	rex.RB
   14001651f:	push   r14
   140016521:	xor    BYTE PTR [rax+0x24],al
   140016524:	and    al,0x51
   140016526:	rex.RB
   140016527:	push   r14
   140016529:	xor    BYTE PTR [rax+0x40],al
   14001652c:	pop    rdx
   14001652d:	add    BYTE PTR [rdi],bh
   14001652f:	(bad)  
   140016530:	xor    al,0x3f
   140016532:	and    al,0x43
   140016534:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140016536:	movsxd ebp,DWORD PTR [rbx+0x42]
   140016539:	(bad)  
   14001653a:	jae    0x1400165a1
   14001653c:	and    al,0x30
   14001653f:	cmp    BYTE PTR [rax+rsi*1],ah
   140016542:	xor    DWORD PTR [rax+rsi*1],esp
   140016545:	xor    BYTE PTR [rax+rsi*1],ah
   140016548:	xor    BYTE PTR [rax+rsi*1],ah
   14001654b:	xor    ah,BYTE PTR [rax+rsi*1]
   14001654e:	xor    DWORD PTR [rax+0x40],eax
   140016551:	push   rcx
   140016552:	rex.RB
   140016553:	rex.B
   140016554:	rex.B
   140016555:	rex.B
   140016556:	rex.RB
   140016557:	push   r14
   140016559:	xor    BYTE PTR [rax+0x41],al
   14001655c:	rex.RB
   14001655d:	rex.X push rsi
   14001655f:	xor    BYTE PTR [rax+0x40],al
   140016562:	pop    rdx
   140016563:	add    BYTE PTR [rdi],bh
   140016565:	(bad)  
   140016566:	xor    al,0x41
   140016568:	rex.WR
   140016569:	rex.WR
   14001656a:	rex.WRXB
   14001656b:	rex.XB pop r15
   14001656d:	rex.XB
   14001656e:	rex.B
   14001656f:	rex.XB
   140016570:	rex.W
   140016571:	rex.RB pop r15
   140016573:	rex.W
   140016574:	rex.B
   140016575:	rex.WRX
   140016576:	rex.R
   140016577:	rex.WR
   140016578:	rex.RB push r10
   14001657a:	rex
   14001657b:	rex push rcx
   14001657d:	rex.RB
   14001657e:	rex.B
   14001657f:	rex.B
   140016580:	rex.B
   140016581:	rex.RB
   140016582:	push   r14
   140016584:	xor    BYTE PTR [rax+0x41],al
   140016587:	rex.RB
   140016588:	rex.X push rsi
   14001658a:	xor    BYTE PTR [rax+0x40],al
   14001658d:	pop    rdx
   14001658e:	add    BYTE PTR [rdi],bh
   140016590:	(bad)  
   140016591:	xor    al,0x42
   140016593:	rex.WB
   140016594:	rex.RXB pop r15
   140016596:	push   rdx
   140016597:	rex.RB
   140016598:	rex.RX pop rdi
   14001659a:	push   rsp
   14001659b:	push   rdx
   14001659c:	rex.B
   14001659d:	rex.XB
   14001659e:	rex.RB
   14001659f:	rex
   1400165a0:	rex push rcx
   1400165a2:	rex.RB
   1400165a3:	rex.B
   1400165a4:	rex.B
   1400165a5:	rex.B
   1400165a6:	rex.RB
   1400165a7:	push   r14
   1400165a9:	xor    BYTE PTR [rax+0x41],al
   1400165ac:	rex.RB
   1400165ad:	rex.X push rsi
   1400165af:	xor    BYTE PTR [rax+0x40],al
   1400165b2:	pop    rdx
   1400165b3:	add    BYTE PTR [rdi],bh
   1400165b5:	(bad)  
   1400165b6:	xor    al,0x42
   1400165b8:	push   rbp
   1400165b9:	rex.RX
   1400165ba:	rex.RX
   1400165bb:	rex.RB push r10
   1400165bd:	rex
   1400165be:	rex push rcx
   1400165c0:	rex.RB
   1400165c1:	rex.B
   1400165c2:	rex.B
   1400165c3:	rex.B
   1400165c4:	rex.RB
   1400165c5:	push   r14
   1400165c7:	xor    BYTE PTR [rax+0x41],al
   1400165ca:	rex.RB
   1400165cb:	rex.X push rsi
   1400165cd:	xor    BYTE PTR [rax+0x40],al
   1400165d0:	pop    rdx
   1400165d1:	add    BYTE PTR [rdi],bh
   1400165d3:	(bad)  
   1400165d4:	xor    al,0x43
   1400165d6:	rex.XB jb 0x140016642
   1400165d9:	je     0x14001662e
   1400165db:	movsxd eax,DWORD PTR gs:[rax+0x40]
   1400165df:	push   rcx
   1400165e0:	rex.RB
   1400165e1:	rex.B
   1400165e2:	rex.B
   1400165e3:	rex.B
   1400165e4:	rex.RB
   1400165e5:	push   r14
   1400165e7:	xor    BYTE PTR [rax+0x41],al
   1400165ea:	rex.RB
   1400165eb:	rex.X push rsi
   1400165ed:	xor    BYTE PTR [rax+0x40],al
   1400165f0:	pop    rdx
   1400165f1:	add    BYTE PTR [rdi],bh
   1400165f3:	(bad)  
   1400165f4:	xor    al,0x43
   1400165f6:	rex.RX (bad) 
   1400165f8:	imul   esp,DWORD PTR [rbp+0x4c],0x6f
   1400165fc:	movsxd ebp,DWORD PTR [rbx+0x40]
   1400165ff:	rex push rcx
   140016601:	rex.RB
   140016602:	rex.B
   140016603:	rex.B
   140016604:	rex.B
   140016605:	rex.RB
   140016606:	push   r14
   140016608:	xor    BYTE PTR [rax+0x41],al
   14001660b:	rex.RB
   14001660c:	rex.X push rsi
   14001660e:	xor    BYTE PTR [rax+0x40],al
   140016611:	pop    rdx
   140016612:	add    BYTE PTR [rdi],bh
   140016614:	(bad)  
   140016615:	xor    al,0x43
   140016617:	push   rdx
   140016618:	gs (bad) 
   14001661a:	fs gs jb 0x140016675
   14001661e:	jb     0x140016689
   140016620:	je     0x140016687
   140016622:	jb     0x140016670
   140016624:	outs   dx,DWORD PTR ds:[rsi]
   140016625:	movsxd ebp,DWORD PTR [rbx+0x32]
   140016628:	rex
   140016629:	rex push rcx
   14001662b:	rex.RB
   14001662c:	rex.B
   14001662d:	rex.B
   14001662e:	rex.B
   14001662f:	rex.RB
   140016630:	push   r14
   140016632:	xor    BYTE PTR [rax+0x41],al
   140016635:	rex.RB
   140016636:	rex.X push rsi
   140016638:	xor    BYTE PTR [rax+0x40],al
   14001663b:	pop    rdx
   14001663c:	add    BYTE PTR [rdi],bh
   14001663e:	(bad)  
   14001663f:	xor    al,0x43
   140016641:	push   rdx
   140016642:	gs (bad) 
   140016644:	fs gs jb 0x14001669f
   140016648:	jb     0x1400166b3
   14001664a:	je     0x1400166b1
   14001664c:	jb     0x14001669a
   14001664e:	outs   dx,DWORD PTR ds:[rsi]
   14001664f:	movsxd ebp,DWORD PTR [rbx+0x33]
   140016652:	rex
   140016653:	rex push rcx
   140016655:	rex.RB
   140016656:	rex.B
   140016657:	rex.B
   140016658:	rex.B
   140016659:	rex.RB
   14001665a:	push   r14
   14001665c:	xor    BYTE PTR [rax+0x41],al
   14001665f:	rex.RB
   140016660:	rex.X push rsi
   140016662:	xor    BYTE PTR [rax+0x40],al
   140016665:	pop    rdx
   140016666:	add    BYTE PTR [rdi],bh
   140016668:	(bad)  
   140016669:	xor    al,0x43
   14001666b:	push   rdx
   14001666c:	gs (bad) 
   14001666e:	fs gs jb 0x1400166c9
   140016672:	jb     0x1400166dd
   140016674:	je     0x1400166db
   140016676:	jb     0x1400166c4
   140016678:	outs   dx,DWORD PTR ds:[rsi]
   140016679:	movsxd ebp,DWORD PTR [rbx+0x40]
   14001667c:	rex push rcx
   14001667e:	rex.RB
   14001667f:	rex.B
   140016680:	rex.B
   140016681:	rex.B
   140016682:	rex.RB
   140016683:	push   r14
   140016685:	xor    BYTE PTR [rax+0x41],al
   140016688:	rex.RB
   140016689:	rex.X push rsi
   14001668b:	xor    BYTE PTR [rax+0x40],al
   14001668e:	pop    rdx
   14001668f:	add    BYTE PTR [rdi],bh
   140016691:	(bad)  
   140016692:	xor    al,0x43
   140016694:	push   rdx
   140016695:	je     0x140016703
   140016697:	push   rdx
   140016698:	gs jae 0x14001670a
   14001669b:	jne    0x14001670f
   14001669d:	movsxd esp,DWORD PTR [rbp+0x40]
   1400166a0:	rex push rcx
   1400166a2:	rex.RB
   1400166a3:	rex.B
   1400166a4:	rex.B
   1400166a5:	rex.B
   1400166a6:	rex.RB
   1400166a7:	push   r14
   1400166a9:	xor    BYTE PTR [rax+0x41],al
   1400166ac:	rex.RB
   1400166ad:	rex.X push rsi
   1400166af:	xor    BYTE PTR [rax+0x40],al
   1400166b2:	pop    rdx
   1400166b3:	add    BYTE PTR [rdi],bh
   1400166b5:	(bad)  
   1400166b6:	xor    al,0x43
   1400166b8:	push   rbx
   1400166b9:	ins    DWORD PTR es:[rdi],dx
   1400166ba:	(bad)  
   1400166bb:	ins    BYTE PTR es:[rdi],dx
   1400166bc:	ins    BYTE PTR es:[rdi],dx
   1400166bd:	push   rbx
   1400166be:	jo     0x140016729
   1400166c0:	outs   dx,BYTE PTR ds:[rsi]
   1400166c1:	rex.WR outs dx,DWORD PTR ds:[rsi]
   1400166c3:	movsxd ebp,DWORD PTR [rbx+0x40]
   1400166c6:	rex push rcx
   1400166c8:	rex.RB
   1400166c9:	rex.B
   1400166ca:	rex.B
   1400166cb:	rex.B
   1400166cc:	rex.RB
   1400166cd:	push   r14
   1400166cf:	xor    BYTE PTR [rax+0x41],al
   1400166d2:	rex.RB
   1400166d3:	rex.X push rsi
   1400166d5:	xor    BYTE PTR [rax+0x40],al
   1400166d8:	pop    rdx
   1400166d9:	add    BYTE PTR [rdi],bh
   1400166db:	(bad)  
   1400166dc:	xor    al,0x43
   1400166de:	push   rbx
   1400166df:	jo     0x14001674a
   1400166e1:	outs   dx,BYTE PTR ds:[rsi]
   1400166e2:	rex.WR outs dx,DWORD PTR ds:[rsi]
   1400166e4:	movsxd ebp,DWORD PTR [rbx+0x40]
   1400166e7:	rex push rcx
   1400166e9:	rex.RB
   1400166ea:	rex.B
   1400166eb:	rex.B
   1400166ec:	rex.B
   1400166ed:	rex.RB
   1400166ee:	push   r14
   1400166f0:	xor    BYTE PTR [rax+0x41],al
   1400166f3:	rex.RB
   1400166f4:	rex.X push rsi
   1400166f6:	xor    BYTE PTR [rax+0x40],al
   1400166f9:	pop    rdx
   1400166fa:	add    BYTE PTR [rdi],bh
   1400166fc:	(bad)  
   1400166fd:	xor    al,0x4c
   1400166ff:	rex.B
   140016700:	rex.WRX
   140016701:	rex.RXB pop r15
   140016703:	push   rbx
   140016704:	push   rsp
   140016705:	push   rdx
   140016706:	rex.WB
   140016707:	rex.WRX
   140016708:	rex.RXB
   140016709:	rex
   14001670a:	rex push rcx
   14001670c:	rex.RB
   14001670d:	rex.B
   14001670e:	rex.B
   14001670f:	rex.B
   140016710:	rex.RB
   140016711:	push   r14
   140016713:	xor    BYTE PTR [rax+0x24],al
   140016716:	and    al,0x51
   140016718:	rex.RB
   140016719:	push   r14
   14001671b:	xor    BYTE PTR [rax+0x40],al
   14001671e:	pop    rdx
   14001671f:	add    BYTE PTR [rdi],bh
   140016721:	(bad)  
   140016722:	xor    al,0x4c
   140016724:	rex.B
   140016725:	rex.WRX
   140016726:	rex.RXB pop r15
   140016728:	push   rbx
   140016729:	push   rsp
   14001672a:	push   rdx
   14001672b:	rex.WB
   14001672c:	rex.WRX
   14001672d:	rex.RXB
   14001672e:	rex
   14001672f:	rex push rcx
   140016731:	rex.RB
   140016732:	rex.B
   140016733:	rex.B
   140016734:	rex.B
   140016735:	rex.RB
   140016736:	push   r14
   140016738:	xor    BYTE PTR [rax+0x41],al
   14001673b:	rex.RB
   14001673c:	rex.X push rsi
   14001673e:	xor    BYTE PTR [rax+0x40],al
   140016741:	pop    rdx
   140016742:	add    BYTE PTR [rdi],bh
   140016744:	(bad)  
   140016745:	xor    al,0x4d
   140016747:	rex.X
   140016748:	rex
   140016749:	rex push rcx
   14001674b:	rex.RB
   14001674c:	rex.B
   14001674d:	rex.B
   14001674e:	rex.B
   14001674f:	rex.RB
   140016750:	push   r14
   140016752:	xor    BYTE PTR [rax+0x41],al
   140016755:	rex.RB
   140016756:	rex.X push rsi
   140016758:	xor    BYTE PTR [rax+0x40],al
   14001675b:	pop    rdx
   14001675c:	add    BYTE PTR [rdi],bh
   14001675e:	(bad)  
   14001675f:	xor    al,0x4d
   140016761:	push   rbp
   140016762:	rex.WR push rsp
   140016764:	rex.WB push r11
   140016766:	pop    rdx
   140016767:	rex
   140016768:	rex push rcx
   14001676a:	rex.RB
   14001676b:	rex.B
   14001676c:	rex.B
   14001676d:	rex.B
   14001676e:	rex.RB
   14001676f:	push   r14
   140016771:	xor    BYTE PTR [rax+0x41],al
   140016774:	rex.RB
   140016775:	rex.X push rsi
   140016777:	xor    BYTE PTR [rax+0x40],al
   14001677a:	pop    rdx
   14001677b:	add    BYTE PTR [rdi],bh
   14001677d:	(bad)  
   14001677e:	xor    al,0x53
   140016780:	push   rsp
   140016781:	push   rdx
   140016782:	rex.B
   140016783:	rex
   140016784:	rex
   140016785:	rex.B
   140016786:	rex.RB
   140016787:	rex.B
   140016788:	rex.B
   140016789:	rex.B
   14001678a:	rex.RB
   14001678b:	push   r14
   14001678d:	xor    BYTE PTR [rax+0x41],al
   140016790:	rex.RB
   140016791:	rex.X push rsi
   140016793:	xor    BYTE PTR [rax+0x40],al
   140016796:	pop    rdx
   140016797:	add    BYTE PTR [rdi],bh
   140016799:	(bad)  
   14001679a:	xor    al,0x53
   14001679c:	push   rsp
   14001679d:	push   rdx
   14001679e:	push   r13
   1400167a0:	rex
   1400167a1:	rex push rcx
   1400167a3:	rex.RB
   1400167a4:	rex.B
   1400167a5:	rex.B
   1400167a6:	rex.B
   1400167a7:	rex.RB
   1400167a8:	push   r14
   1400167aa:	xor    BYTE PTR [rax+0x41],al
   1400167ad:	rex.RB
   1400167ae:	rex.X push rsi
   1400167b0:	xor    BYTE PTR [rax+0x40],al
   1400167b3:	pop    rdx
   1400167b4:	add    BYTE PTR [rdi],bh
   1400167b6:	(bad)  
   1400167b7:	xor    al,0x53
   1400167b9:	push   rsp
   1400167ba:	push   rdx
   1400167bb:	push   rbp
   1400167bc:	rex
   1400167bd:	rex
   1400167be:	rex.B
   1400167bf:	rex.RB
   1400167c0:	rex.B
   1400167c1:	rex.B
   1400167c2:	rex.B
   1400167c3:	rex.RB
   1400167c4:	push   r14
   1400167c6:	xor    BYTE PTR [rax+0x41],al
   1400167c9:	rex.RB
   1400167ca:	rex.X push rsi
   1400167cc:	xor    BYTE PTR [rax+0x40],al
   1400167cf:	pop    rdx
   1400167d0:	add    BYTE PTR [rdi],bh
   1400167d2:	(bad)  
   1400167d3:	xor    al,0x54
   1400167d5:	push   rbx
   1400167d6:	pop    rdi
   1400167d7:	push   rdx
   1400167d8:	rex.RB push r11
   1400167da:	rex.WRXB push r13
   1400167dc:	push   rdx
   1400167dd:	rex.XB
   1400167de:	rex.RB
   1400167df:	rex
   1400167e0:	rex push rcx
   1400167e2:	rex.RB
   1400167e3:	rex.B
   1400167e4:	rex.B
   1400167e5:	rex.B
   1400167e6:	rex.RB
   1400167e7:	push   r14
   1400167e9:	xor    BYTE PTR [rax+0x41],al
   1400167ec:	rex.RB
   1400167ed:	rex.X push rsi
   1400167ef:	xor    BYTE PTR [rax+0x40],al
   1400167f2:	pop    rdx
   1400167f3:	add    BYTE PTR [rdi],bh
   1400167f5:	(bad)  
   1400167f6:	pop    rdi
   1400167f7:	rex.RX
   1400167f8:	rex.XB push r11
   1400167fa:	push   0x6c657261
   1400167ff:	outs   dx,DWORD PTR ds:[rsi]
   140016800:	movsxd ebp,DWORD PTR [rbx+0x40]
   140016803:	rex push rcx
   140016805:	rex.RB
   140016806:	rex.B
   140016807:	pop    r8
   140016809:	pop    rax
   14001680a:	pop    rdx
   14001680b:	add    BYTE PTR [rdi],bh
   14001680d:	movsxd esi,DWORD PTR [r9+rbp*2+0x76]
   140016812:	gs push rbp
   140016814:	jae    0x14001687b
   140016816:	jb     0x14001688b
   140016818:	rex
   140016819:	rex.XB push r11
   14001681b:	push   0x6c657261
   140016820:	outs   dx,DWORD PTR ds:[rsi]
   140016821:	movsxd ebp,DWORD PTR [rbx+0x40]
   140016824:	rex push rcx
   140016826:	rex.RB
   140016827:	rex.B
   140016828:	rex.B
   140016829:	rex.W pop rax
   14001682b:	pop    rdx
   14001682c:	add    BYTE PTR [rdi],bh
   14001682e:	rex.B
   14001682f:	fs fs rex.WRXB (bad) 
   140016833:	push   0x65
   140016835:	movsxd esi,DWORD PTR [rax+rax*2+0x4d]
   140016839:	rex.X
   14001683a:	rex
   14001683b:	rex push rcx
   14001683d:	rex.RB
   14001683e:	rex.B
   14001683f:	rex.B
   140016840:	rex.W push rax
   140016842:	rex.RB
   140016843:	rex.X
   140016844:	rex.RXB
   140016845:	rex pop rdx
   140016847:	add    BYTE PTR [rdi],bh
   140016849:	rex.B jo 0x1400168bc
   14001684c:	outs   dx,BYTE PTR gs:[rsi]
   14001684e:	fs rex
   140016850:	rex.WRB push r13
   140016852:	rex.WR push rsp
   140016854:	rex.WB push r11
   140016856:	pop    rdx
   140016857:	rex
   140016858:	rex push rcx
   14001685a:	rex.RB
   14001685b:	rex.B
   14001685c:	rex.B
   14001685d:	rex.W
   14001685e:	rex.B
   14001685f:	rex.RB
   140016860:	push   r14
   140016862:	push   rbx
   140016863:	push   rsp
   140016864:	push   rdx
   140016865:	push   rbp
   140016866:	rex
   140016867:	rex
   140016868:	rex pop rdx
   14001686a:	add    BYTE PTR [rdi],bh
   14001686c:	rex.B jo 0x1400168df
   14001686f:	outs   dx,BYTE PTR gs:[rsi]
   140016871:	fs rex
   140016873:	rex.WRB push r13
   140016875:	rex.WR push rsp
   140016877:	rex.WB push r11
   140016879:	pop    rdx
   14001687a:	rex
   14001687b:	rex push rcx
   14001687d:	rex.RB
   14001687e:	rex.B
   14001687f:	rex.B
   140016880:	rex.W push rax
   140016882:	rex.RB
   140016883:	rex.X
   140016884:	rex.RXB
   140016885:	rex pop rdx
   140016887:	add    BYTE PTR [rdi],bh
   140016889:	rex.B jo 0x1400168fc
   14001688c:	outs   dx,BYTE PTR gs:[rsi]
   14001688e:	fs rex
   140016890:	rex.WRB push r13
   140016892:	rex.WR push rsp
   140016894:	rex.WB push r11
   140016896:	pop    rdx
   140016897:	rex
   140016898:	rex push rcx
   14001689a:	rex.RB
   14001689b:	rex.B
   14001689c:	rex.B
   14001689d:	rex.W push rax
   14001689f:	rex.RB
   1400168a0:	rex.X
   1400168a1:	rex.RXB
   1400168a2:	rex.WXB
   1400168a3:	rex pop rdx
   1400168a5:	add    BYTE PTR [rdi],bh
   1400168a7:	rex.B jo 0x14001691a
   1400168aa:	outs   dx,BYTE PTR gs:[rsi]
   1400168ac:	fs rex push rbx
   1400168af:	push   rsp
   1400168b0:	push   rdx
   1400168b1:	rex.B
   1400168b2:	rex
   1400168b3:	rex push rcx
   1400168b5:	rex.RB
   1400168b6:	rex.B
   1400168b7:	rex.B
   1400168b8:	rex.WX
   1400168b9:	rex.B
   1400168ba:	rex.RB
   1400168bb:	rex.X push rsi
   1400168bd:	xor    DWORD PTR [rax+0x40],eax
   1400168c0:	pop    rdx
   1400168c1:	add    BYTE PTR [rdi],bh
   1400168c3:	rex.B jo 0x140016936
   1400168c6:	outs   dx,BYTE PTR gs:[rsi]
   1400168c8:	fs rex push rbx
   1400168cb:	push   rsp
   1400168cc:	push   rdx
   1400168cd:	rex.B
   1400168ce:	rex
   1400168cf:	rex push rcx
   1400168d1:	rex.RB
   1400168d2:	rex.B
   1400168d3:	rex.B
   1400168d4:	rex.WX push rax
   1400168d6:	rex.RB
   1400168d7:	rex.X
   1400168d8:	rex.R
   1400168d9:	rex pop rdx
   1400168db:	add    BYTE PTR [rdi],bh
   1400168dd:	rex.B jo 0x140016950
   1400168e0:	outs   dx,BYTE PTR gs:[rsi]
   1400168e2:	fs rex push rbx
   1400168e5:	push   rsp
   1400168e6:	push   rdx
   1400168e7:	rex.B
   1400168e8:	rex
   1400168e9:	rex push rcx
   1400168eb:	rex.RB
   1400168ec:	rex.B
   1400168ed:	rex.B
   1400168ee:	rex.WX push rax
   1400168f0:	rex.RB
   1400168f1:	rex.X
   1400168f2:	rex.R
   1400168f3:	rex.WXB
   1400168f4:	rex pop rdx
   1400168f6:	add    BYTE PTR [rdi],bh
   1400168f8:	rex.B jo 0x14001696b
   1400168fb:	outs   dx,BYTE PTR gs:[rsi]
   1400168fd:	fs rex push rbx
   140016900:	push   rsp
   140016901:	push   rdx
   140016902:	push   r13
   140016904:	rex
   140016905:	rex push rcx
   140016907:	rex.RB
   140016908:	rex.B
   140016909:	rex.B
   14001690a:	rex.W
   14001690b:	rex.B
   14001690c:	rex.RB
   14001690d:	push   r14
   14001690f:	xor    DWORD PTR [rax+0x40],eax
   140016912:	pop    rdx
   140016913:	add    BYTE PTR [rdi],bh
   140016915:	rex.B jo 0x140016988
   140016918:	outs   dx,BYTE PTR gs:[rsi]
   14001691a:	fs rex push rbx
   14001691d:	push   rsp
   14001691e:	push   rdx
   14001691f:	push   r13
   140016921:	rex
   140016922:	rex push rcx
   140016924:	rex.RB
   140016925:	rex.B
   140016926:	rex.B
   140016927:	rex.W push rax
   140016929:	rex.RB
   14001692a:	rex.X
   14001692b:	rex.R
   14001692c:	rex pop rdx
   14001692e:	add    BYTE PTR [rdi],bh
   140016930:	rex.B jo 0x1400169a3
   140016933:	outs   dx,BYTE PTR gs:[rsi]
   140016935:	fs rex push rbx
   140016938:	push   rsp
   140016939:	push   rdx
   14001693a:	push   r13
   14001693c:	rex
   14001693d:	rex push rcx
   14001693f:	rex.RB
   140016940:	rex.B
   140016941:	rex.B
   140016942:	rex.W push rax
   140016944:	rex.RB
   140016945:	rex.X
   140016946:	rex.R
   140016947:	rex.WXB
   140016948:	rex pop rdx
   14001694a:	add    BYTE PTR [rdi],bh
   14001694c:	rex.B jo 0x1400169bf
   14001694f:	outs   dx,BYTE PTR gs:[rsi]
   140016951:	fs rex push rbx
   140016954:	push   rsp
   140016955:	push   rdx
   140016956:	push   r13
   140016958:	rex
   140016959:	rex push rcx
   14001695b:	rex.RB
   14001695c:	rex.B
   14001695d:	rex.B
   14001695e:	rex.W push rax
   140016960:	rex.RB
   140016961:	rex.X
   140016962:	rex.RXB
   140016963:	rex pop rdx
   140016965:	add    BYTE PTR [rdi],bh
   140016967:	rex.B jo 0x1400169da
   14001696a:	outs   dx,BYTE PTR gs:[rsi]
   14001696c:	fs rex push rbx
   14001696f:	push   rsp
   140016970:	push   rdx
   140016971:	push   r13
   140016973:	rex
   140016974:	rex push rcx
   140016976:	rex.RB
   140016977:	rex.B
   140016978:	rex.B
   140016979:	rex.W push rax
   14001697b:	rex.RB
   14001697c:	rex.X
   14001697d:	rex.RXB
   14001697e:	rex.WXB
   14001697f:	rex pop rdx
   140016981:	add    BYTE PTR [rdi],bh
   140016983:	rex.B jo 0x1400169f6
   140016986:	outs   dx,BYTE PTR gs:[rsi]
   140016988:	fs rex push rbx
   14001698b:	push   rsp
   14001698c:	push   rdx
   14001698d:	push   rbp
   14001698e:	rex
   14001698f:	rex push rcx
   140016991:	rex.RB
   140016992:	rex.B
   140016993:	rex.B
   140016994:	rex.WX
   140016995:	rex.B
   140016996:	rex.RB
   140016997:	rex.X push rsi
   140016999:	xor    DWORD PTR [rax+0x40],eax
   14001699c:	pop    rdx
   14001699d:	add    BYTE PTR [rdi],bh
   14001699f:	rex.B jo 0x140016a12
   1400169a2:	outs   dx,BYTE PTR gs:[rsi]
   1400169a4:	fs rex push rbx
   1400169a7:	push   rsp
   1400169a8:	push   rdx
   1400169a9:	push   rbp
   1400169aa:	rex
   1400169ab:	rex push rcx
   1400169ad:	rex.RB
   1400169ae:	rex.B
   1400169af:	rex.B
   1400169b0:	rex.WX
   1400169b1:	rex.RXB
   1400169b2:	rex pop rdx
   1400169b4:	add    BYTE PTR [rdi],bh
   1400169b6:	rex.B jo 0x140016a29
   1400169b9:	outs   dx,BYTE PTR gs:[rsi]
   1400169bb:	fs rex push rbx
   1400169be:	push   rsp
   1400169bf:	push   rdx
   1400169c0:	push   rbp
   1400169c1:	rex
   1400169c2:	rex push rcx
   1400169c4:	rex.RB
   1400169c5:	rex.B
   1400169c6:	rex.B
   1400169c7:	rex.WX push rax
   1400169c9:	rex.RB
   1400169ca:	rex.X
   1400169cb:	rex.RXB
   1400169cc:	rex pop rdx
   1400169ce:	add    BYTE PTR [rdi],bh
   1400169d0:	rex.B jo 0x140016a43
   1400169d3:	outs   dx,BYTE PTR gs:[rsi]
   1400169d5:	fs rex push rbx
   1400169d8:	push   rsp
   1400169d9:	push   rdx
   1400169da:	push   rbp
   1400169db:	rex
   1400169dc:	rex push rcx
   1400169de:	rex.RB
   1400169df:	rex.B
   1400169e0:	rex.B
   1400169e1:	rex.WX push rax
   1400169e3:	rex.RB
   1400169e4:	rex.X
   1400169e5:	rex.RXB
   1400169e6:	rex.WXB
   1400169e7:	rex pop rdx
   1400169e9:	add    BYTE PTR [rdi],bh
   1400169eb:	rex.B jo 0x140016a5e
   1400169ee:	outs   dx,BYTE PTR gs:[rsi]
   1400169f0:	fs rex.B
   1400169f2:	rex push rbx
   1400169f4:	push   rsp
   1400169f5:	push   rdx
   1400169f6:	push   rbp
   1400169f7:	rex
   1400169f8:	rex push rcx
   1400169fa:	rex.RB
   1400169fb:	rex.B
   1400169fc:	rex.B
   1400169fd:	rex.WX push rax
   1400169ff:	rex.RB
   140016a00:	rex.X
   140016a01:	rex.R
   140016a02:	rex pop rdx
   140016a04:	add    BYTE PTR [rdi],bh
   140016a06:	rex.B jo 0x140016a79
   140016a09:	outs   dx,BYTE PTR gs:[rsi]
   140016a0b:	fs rex.B
   140016a0d:	rex push rbx
   140016a0f:	push   rsp
   140016a10:	push   rdx
   140016a11:	push   rbp
   140016a12:	rex
   140016a13:	rex push rcx
   140016a15:	rex.RB
   140016a16:	rex.B
   140016a17:	rex.B
   140016a18:	rex.WX push rax
   140016a1a:	rex.RB
   140016a1b:	rex.X
   140016a1c:	rex.R
   140016a1d:	rex.WXB
   140016a1e:	rex pop rdx
   140016a20:	add    BYTE PTR [rdi],bh
   140016a22:	rex.B jo 0x140016a95
   140016a25:	outs   dx,BYTE PTR gs:[rsi]
   140016a27:	fs pop r15
   140016a2a:	rex.B
   140016a2b:	rex.XB push r8
   140016a2d:	rex push rbx
   140016a2f:	push   rsp
   140016a30:	push   rdx
   140016a31:	push   rbp
   140016a32:	rex
   140016a33:	rex push rcx
   140016a35:	rex.RB
   140016a36:	rex.B
   140016a37:	rex.B
   140016a38:	rex.WX push rax
   140016a3a:	rex.RB
   140016a3b:	rex.X
   140016a3c:	rex.R
   140016a3d:	rex pop rdx
   140016a3f:	add    BYTE PTR [rdi],bh
   140016a41:	rex.B jo 0x140016ab4
   140016a44:	outs   dx,BYTE PTR gs:[rsi]
   140016a46:	fs pop r15
   140016a49:	rex.B
   140016a4a:	rex.XB push r8
   140016a4c:	rex push rbx
   140016a4e:	push   rsp
   140016a4f:	push   rdx
   140016a50:	push   rbp
   140016a51:	rex
   140016a52:	rex push rcx
   140016a54:	rex.RB
   140016a55:	rex.B
   140016a56:	rex.B
   140016a57:	rex.WX push rax
   140016a59:	rex.RB
   140016a5a:	rex.X
   140016a5b:	rex.R
   140016a5c:	rex.WXB
   140016a5d:	rex pop rdx
   140016a5f:	add    BYTE PTR [rdi],bh
   140016a61:	rex.B jo 0x140016ad4
   140016a64:	outs   dx,BYTE PTR gs:[rsi]
   140016a66:	fs push rdi
   140016a68:	rex push rbx
   140016a6a:	push   rsp
   140016a6b:	push   rdx
   140016a6c:	rex.B
   140016a6d:	rex
   140016a6e:	rex push rcx
   140016a70:	rex.RB
   140016a71:	rex.B
   140016a72:	rex.B
   140016a73:	rex.WX push rax
   140016a75:	rex.RB
   140016a76:	rex.X
   140016a77:	rex.RXB
   140016a78:	rex pop rdx
   140016a7a:	add    BYTE PTR [rdi],bh
   140016a7c:	rex.B jo 0x140016aef
   140016a7f:	outs   dx,BYTE PTR gs:[rsi]
   140016a81:	fs push rdi
   140016a83:	rex push rbx
   140016a85:	push   rsp
   140016a86:	push   rdx
   140016a87:	rex.B
   140016a88:	rex
   140016a89:	rex push rcx
   140016a8b:	rex.RB
   140016a8c:	rex.B
   140016a8d:	rex.B
   140016a8e:	rex.WX push rax
   140016a90:	rex.RB
   140016a91:	rex.X
   140016a92:	rex.RXB
   140016a93:	rex.WXB
   140016a94:	rex pop rdx
   140016a96:	add    BYTE PTR [rdi],bh
   140016a98:	rex.B jo 0x140016b0b
   140016a9b:	outs   dx,BYTE PTR gs:[rsi]
   140016a9d:	fs push rdi
   140016a9f:	push   rbx
   140016aa0:	imul   ebp,DWORD PTR [rbp+0x70],0x5340656c
   140016aa7:	push   rsp
   140016aa8:	push   rdx
   140016aa9:	rex.B
   140016aaa:	rex
   140016aab:	rex push rcx
   140016aad:	rex.RB
   140016aae:	rex.B
   140016aaf:	rex.B
   140016ab0:	rex.WX push rax
   140016ab2:	rex.RB
   140016ab3:	rex.X
   140016ab4:	rex.RXB
   140016ab5:	rex.WXB
   140016ab6:	rex pop rdx
   140016ab8:	add    BYTE PTR [rdi],bh
   140016aba:	rex.B jo 0x140016b2d
   140016abd:	outs   dx,BYTE PTR gs:[rsi]
   140016abf:	fs push rdi
   140016ac1:	push   rsp
   140016ac2:	jb     0x140016b39
   140016ac4:	outs   dx,BYTE PTR ds:[rsi]
   140016ac5:	movsxd esp,DWORD PTR [rcx+0x74]
   140016ac8:	gs rex push rbx
   140016acb:	push   rsp
   140016acc:	push   rdx
   140016acd:	rex.B
   140016ace:	rex
   140016acf:	rex push rcx
   140016ad1:	rex.RB
   140016ad2:	rex.B
   140016ad3:	rex.B
   140016ad4:	rex.WX push rax
   140016ad6:	rex.RB
   140016ad7:	rex.X
   140016ad8:	rex.RXB
   140016ad9:	rex pop rdx
   140016adb:	add    BYTE PTR [rdi],bh
   140016add:	rex.B jo 0x140016b50
   140016ae0:	outs   dx,BYTE PTR gs:[rsi]
   140016ae2:	fs push rdi
   140016ae4:	push   rsp
   140016ae5:	jb     0x140016b5c
   140016ae7:	outs   dx,BYTE PTR ds:[rsi]
   140016ae8:	movsxd esp,DWORD PTR [rcx+0x74]
   140016aeb:	gs rex push rbx
   140016aee:	push   rsp
   140016aef:	push   rdx
   140016af0:	rex.B
   140016af1:	rex
   140016af2:	rex push rcx
   140016af4:	rex.RB
   140016af5:	rex.B
   140016af6:	rex.B
   140016af7:	rex.WX push rax
   140016af9:	rex.RB
   140016afa:	rex.X
   140016afb:	rex.RXB
   140016afc:	rex.WXB
   140016afd:	rex pop rdx
   140016aff:	add    BYTE PTR [rdi],bh
   140016b01:	rex.B jne 0x140016b7c
   140016b04:	rex.B jo 0x140016b77
   140016b07:	outs   dx,BYTE PTR gs:[rsi]
   140016b09:	fs rex
   140016b0b:	rex.WRB push r13
   140016b0d:	rex.WR push rsp
   140016b0f:	rex.WB push r11
   140016b11:	pop    rdx
   140016b12:	rex
   140016b13:	rex
   140016b14:	rex.B
   140016b15:	rex.RB
   140016b16:	rex.B
   140016b17:	rex.B
   140016b18:	rex.W push rax
   140016b1a:	rex.RB
   140016b1b:	rex.X
   140016b1c:	rex.RXB
   140016b1d:	rex.WB
   140016b1e:	rex.W
   140016b1f:	rex pop rdx
   140016b21:	add    BYTE PTR [rdi],bh
   140016b23:	rex.B jne 0x140016b9e
   140016b26:	rex.B jo 0x140016b99
   140016b29:	outs   dx,BYTE PTR gs:[rsi]
   140016b2b:	fs rex push rbx
   140016b2e:	push   rsp
   140016b2f:	push   rdx
   140016b30:	rex.B
   140016b31:	rex
   140016b32:	rex
   140016b33:	rex.B
   140016b34:	rex.RB
   140016b35:	rex.B
   140016b36:	rex.B
   140016b37:	rex.WX push rax
   140016b39:	rex.RB
   140016b3a:	rex.X
   140016b3b:	rex.RB
   140016b3c:	rex.WXB
   140016b3d:	rex.WXB pop r15
   140016b3f:	rex.WRX
   140016b40:	rex pop rdx
   140016b42:	add    BYTE PTR [rdi],bh
   140016b44:	rex.B jne 0x140016bbf
   140016b47:	rex.B jo 0x140016bba
   140016b4a:	outs   dx,BYTE PTR gs:[rsi]
   140016b4c:	fs rex push rbx
   140016b4f:	push   rsp
   140016b50:	push   rdx
   140016b51:	push   r13
   140016b53:	rex
   140016b54:	rex
   140016b55:	rex.B
   140016b56:	rex.RB
   140016b57:	rex.B
   140016b58:	rex.B
   140016b59:	rex.W push rax
   140016b5b:	rex.RB
   140016b5c:	rex.X
   140016b5d:	rex.R
   140016b5e:	rex.WB
   140016b5f:	rex.W
   140016b60:	rex pop rdx
   140016b62:	add    BYTE PTR [rdi],bh
   140016b64:	rex.B jne 0x140016bdf
   140016b67:	rex.B jo 0x140016bda
   140016b6a:	outs   dx,BYTE PTR gs:[rsi]
   140016b6c:	fs rex push rbx
   140016b6f:	push   rsp
   140016b70:	push   rdx
   140016b71:	push   r13
   140016b73:	rex
   140016b74:	rex
   140016b75:	rex.B
   140016b76:	rex.RB
   140016b77:	rex.B
   140016b78:	rex.B
   140016b79:	rex.W push rax
   140016b7b:	rex.RB
   140016b7c:	rex.X
   140016b7d:	rex.RXB
   140016b7e:	rex.WB
   140016b7f:	rex.W
   140016b80:	rex pop rdx
   140016b82:	add    BYTE PTR [rdi],bh
   140016b84:	rex.B jne 0x140016bff
   140016b87:	rex.B jo 0x140016bfa
   140016b8a:	outs   dx,BYTE PTR gs:[rsi]
   140016b8c:	fs rex push rbx
   140016b8f:	push   rsp
   140016b90:	push   rdx
   140016b91:	push   rbp
   140016b92:	rex
   140016b93:	rex
   140016b94:	rex.B
   140016b95:	rex.RB
   140016b96:	rex.B
   140016b97:	rex.B
   140016b98:	rex.WX push rax
   140016b9a:	rex.RB
   140016b9b:	rex.X
   140016b9c:	rex.RB
   140016b9d:	rex.WXB
   140016b9e:	rex.WXB pop r15
   140016ba0:	rex.WRX
   140016ba1:	rex pop rdx
   140016ba3:	add    BYTE PTR [rdi],bh
   140016ba5:	rex.B jne 0x140016c20
   140016ba8:	rex.B jo 0x140016c1b
   140016bab:	outs   dx,BYTE PTR gs:[rsi]
   140016bad:	fs rex.B
   140016baf:	rex push rbx
   140016bb1:	push   rsp
   140016bb2:	push   rdx
   140016bb3:	push   rbp
   140016bb4:	rex
   140016bb5:	rex
   140016bb6:	rex.B
   140016bb7:	rex.RB
   140016bb8:	rex.B
   140016bb9:	rex.B
   140016bba:	rex.WX push rax
   140016bbc:	rex.RB
   140016bbd:	rex.X
   140016bbe:	rex.RB
   140016bbf:	rex.WXB
   140016bc0:	rex.WXB pop r15
   140016bc2:	rex.WRX xor QWORD PTR [rax+0x5a],r8
   140016bc6:	add    BYTE PTR [rdi],bh
   140016bc8:	rex.B jne 0x140016c43
   140016bcb:	rex.B jo 0x140016c3e
   140016bce:	outs   dx,BYTE PTR gs:[rsi]
   140016bd0:	fs push rdi
   140016bd2:	rex push rbx
   140016bd4:	push   rsp
   140016bd5:	push   rdx
   140016bd6:	rex.B
   140016bd7:	rex
   140016bd8:	rex
   140016bd9:	rex.B
   140016bda:	rex.RB
   140016bdb:	rex.B
   140016bdc:	rex.B
   140016bdd:	rex.WX push rax
   140016bdf:	rex.RB
   140016be0:	rex.X
   140016be1:	rex.RXB
   140016be2:	rex.WXB
   140016be3:	rex.WXB pop r15
   140016be5:	rex.WRX
   140016be6:	rex pop rdx
   140016be8:	add    BYTE PTR [rdi],bh
   140016bea:	rex.B jne 0x140016c65
   140016bed:	rex.B jo 0x140016c60
   140016bf0:	outs   dx,BYTE PTR gs:[rsi]
   140016bf2:	fs push rdi
   140016bf4:	push   rbx
   140016bf5:	imul   ebp,DWORD PTR [rbp+0x70],0x5340656c
   140016bfc:	push   rsp
   140016bfd:	push   rdx
   140016bfe:	rex.B
   140016bff:	rex
   140016c00:	rex
   140016c01:	rex.B
   140016c02:	rex.RB
   140016c03:	rex.B
   140016c04:	rex.B
   140016c05:	rex.WX push rax
   140016c07:	rex.RB
   140016c08:	rex.X
   140016c09:	rex.RXB
   140016c0a:	rex.WXB
   140016c0b:	rex.WXB pop r15
   140016c0d:	rex.WRX
   140016c0e:	rex pop rdx
   140016c10:	add    BYTE PTR [rdi],bh
   140016c12:	rex.B jne 0x140016c8d
   140016c15:	rex.B jo 0x140016c88
   140016c18:	outs   dx,BYTE PTR gs:[rsi]
   140016c1a:	fs push rdi
   140016c1c:	push   rsp
   140016c1d:	jb     0x140016c94
   140016c1f:	outs   dx,BYTE PTR ds:[rsi]
   140016c20:	movsxd esp,DWORD PTR [rcx+0x74]
   140016c23:	gs rex push rbx
   140016c26:	push   rsp
   140016c27:	push   rdx
   140016c28:	rex.B
   140016c29:	rex
   140016c2a:	rex
   140016c2b:	rex.B
   140016c2c:	rex.RB
   140016c2d:	rex.B
   140016c2e:	rex.B
   140016c2f:	rex.WX push rax
   140016c31:	rex.RB
   140016c32:	rex.X
   140016c33:	rex.RXB
   140016c34:	rex.WXB
   140016c35:	rex.WXB pop r15
   140016c37:	rex.WRX
   140016c38:	rex pop rdx
   140016c3a:	add    BYTE PTR [rdi],bh
   140016c3c:	rex.B jne 0x140016cb7
   140016c3f:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140016c41:	imul   esi,DWORD PTR [rax+rax*2+0x4d],0x49544c55
   140016c49:	push   rbx
   140016c4a:	pop    rdx
   140016c4b:	rex
   140016c4c:	rex
   140016c4d:	rex.B
   140016c4e:	rex.RB
   140016c4f:	rex.B
   140016c50:	pop    r8
   140016c52:	push   rax
   140016c53:	rex.RB
   140016c54:	rex.X
   140016c55:	rex.RXB
   140016c56:	rex pop rdx
   140016c58:	add    BYTE PTR [rdi],bh
   140016c5a:	rex.B jne 0x140016cd5
   140016c5d:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140016c5f:	imul   esi,DWORD PTR [rax+rax*2+0x53],0x55415254
   140016c67:	rex
   140016c68:	rex
   140016c69:	rex.B
   140016c6a:	rex.RB
   140016c6b:	rex.B
   140016c6c:	pop    r8
   140016c6e:	push   rax
   140016c6f:	rex.RB
   140016c70:	rex.X
   140016c71:	rex.R
   140016c72:	rex pop rdx
   140016c74:	add    BYTE PTR [rdi],bh
   140016c76:	rex.B jne 0x140016cf1
   140016c79:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140016c7b:	imul   esi,DWORD PTR [rax+rax*2+0x53],0x55415254
   140016c83:	rex
   140016c84:	rex
   140016c85:	rex.B
   140016c86:	rex.RB
   140016c87:	rex.B
   140016c88:	pop    r8
   140016c8a:	push   rax
   140016c8b:	rex.RB
   140016c8c:	rex.X
   140016c8d:	rex.RXB
   140016c8e:	rex pop rdx
   140016c90:	add    BYTE PTR [rdi],bh
   140016c92:	rex.XB (bad) 
   140016c94:	ins    BYTE PTR es:[rdi],dx
   140016c95:	movsxd ecx,DWORD PTR [rbp+riz*2+0x6e]
   140016c99:	addr32 je 0x140016d04
   140016c9c:	rex
   140016c9d:	rex.WRB push r13
   140016c9f:	rex.WR push rsp
   140016ca1:	rex.WB push r11
   140016ca3:	pop    rdx
   140016ca4:	rex
   140016ca5:	rex push rbx
   140016ca7:	rex.B
   140016ca8:	rex.WXB push r8
   140016caa:	rex.RB
   140016cab:	rex.X
   140016cac:	rex.RXB push r8
   140016cae:	rex.RB
   140016caf:	rex.B
   140016cb0:	rex.WXB
   140016cb1:	rex pop rdx
   140016cb3:	add    BYTE PTR [rdi],bh
   140016cb5:	rex.XB push 0x65676e61
   140016cbb:	rex.RB js 0x140016d21
   140016cbe:	ins    BYTE PTR es:[rdi],dx
   140016cbf:	jne    0x140016d34
   140016cc1:	imul   esi,DWORD PTR [rsi+0x65],0x6b636f4c
   140016cc8:	push   rsp
   140016cc9:	outs   dx,DWORD PTR ds:[rsi]
   140016cca:	push   rbx
   140016ccb:	push   0x64657261
   140016cd0:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140016cd2:	movsxd ebp,DWORD PTR [rbx+0x40]
   140016cd5:	rex.XB push r11
   140016cd7:	push   0x6c657261
   140016cdc:	outs   dx,DWORD PTR ds:[rsi]
   140016cdd:	movsxd ebp,DWORD PTR [rbx+0x40]
   140016ce0:	rex push rcx
   140016ce2:	rex.RB
   140016ce3:	rex.B
   140016ce4:	pop    r8
   140016ce6:	pop    rax
   140016ce7:	pop    rdx
   140016ce8:	add    BYTE PTR [rdi],bh
   140016cea:	rex.XB push 0x65676e61
   140016cf0:	push   rbx
   140016cf1:	push   0x64657261
   140016cf6:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140016cf8:	movsxd ebp,DWORD PTR [rbx+0x54]
   140016cfb:	outs   dx,DWORD PTR ds:[rsi]
   140016cfc:	rex.RB js 0x140016d62
   140016cff:	ins    BYTE PTR es:[rdi],dx
   140016d00:	jne    0x140016d75
   140016d02:	imul   esi,DWORD PTR [rsi+0x65],0x6b636f4c
   140016d09:	rex
   140016d0a:	rex.XB push r11
   140016d0c:	push   0x6c657261
   140016d11:	outs   dx,DWORD PTR ds:[rsi]
   140016d12:	movsxd ebp,DWORD PTR [rbx+0x40]
   140016d15:	rex push rcx
   140016d17:	rex.RB
   140016d18:	rex.B
   140016d19:	rex.B
   140016d1a:	rex.RB
   140016d1b:	rex.W
   140016d1c:	rex pop rdx
   140016d1e:	add    BYTE PTR [rdi],bh
   140016d20:	rex.XB push 0x536b6365
   140016d26:	imul   esp,DWORD PTR [rdi+0x6e],0x72757461
   140016d2d:	gs rex
   140016d2f:	rex.X
   140016d30:	rex.WB
   140016d31:	rex.RXB pop r15
   140016d33:	push   rdx
   140016d34:	rex.RB
   140016d35:	rex.RX pop rdi
   140016d37:	push   rsp
   140016d38:	push   rdx
   140016d39:	rex.B
   140016d3a:	rex.XB
   140016d3b:	rex.RB
   140016d3c:	rex
   140016d3d:	rex
   140016d3e:	rex.B
   140016d3f:	rex.RB
   140016d40:	rex.X
   140016d41:	rex.B
   140016d42:	rex.W pop rax
   140016d44:	pop    rdx
   140016d45:	add    BYTE PTR [rdi],bh
   140016d47:	rex.XB ins BYTE PTR es:[rdi],dx
   140016d49:	(bad)  
   140016d4a:	imul   ebp,DWORD PTR [rbp+0x45],0x756c6378
   140016d51:	jae    0x140016dbc
   140016d53:	jbe    0x140016dba
   140016d55:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140016d57:	movsxd ebp,DWORD PTR [rbx+0x40]
   140016d5a:	rex.XB push r11
   140016d5c:	push   0x6c657261
   140016d61:	outs   dx,DWORD PTR ds:[rsi]
   140016d62:	movsxd ebp,DWORD PTR [rbx+0x40]
   140016d65:	rex push rcx
   140016d67:	rex.RB
   140016d68:	rex.B
   140016d69:	rex.B
   140016d6a:	rex.RB
   140016d6b:	rex.W
   140016d6c:	rex pop rdx
   140016d6e:	add    BYTE PTR [rdi],bh
   140016d70:	rex.XB ins BYTE PTR es:[rdi],dx
   140016d72:	(bad)  
   140016d73:	imul   ebp,DWORD PTR [rbp+0x53],0x65726168
   140016d7a:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140016d7c:	movsxd ebp,DWORD PTR [rbx+0x40]
   140016d7f:	rex.XB push r11
   140016d81:	push   0x6c657261
   140016d86:	outs   dx,DWORD PTR ds:[rsi]
   140016d87:	movsxd ebp,DWORD PTR [rbx+0x40]
   140016d8a:	rex push rcx
   140016d8c:	rex.RB
   140016d8d:	rex.B
   140016d8e:	rex.B
   140016d8f:	rex.RB
   140016d90:	rex.W
   140016d91:	rex pop rdx
   140016d93:	add    BYTE PTR [rdi],bh
   140016d95:	rex.XB ins BYTE PTR es:[rdi],dx
   140016d97:	(bad)  
   140016d98:	jae    0x140016e0d
   140016d9a:	rex.WRX (bad) 
   140016d9c:	ins    DWORD PTR es:[rdi],dx
   140016d9d:	gs rex
   140016d9f:	rex.XB
   140016da0:	rex.XB jb 0x140016e0c
   140016da3:	je     0x140016df8
   140016da5:	movsxd eax,DWORD PTR gs:[rax+0x40]
   140016da9:	push   rbx
   140016daa:	push   r8
   140016dac:	rex.RB
   140016dad:	rex.X
   140016dae:	rex.RXB pop r8
   140016db0:	pop    rdx
   140016db1:	add    BYTE PTR [rdi],bh
   140016db3:	rex.XB ins BYTE PTR es:[rdi],dx
   140016db5:	(bad)  
   140016db6:	jae    0x140016e2b
   140016db8:	rex.WRX (bad) 
   140016dba:	ins    DWORD PTR es:[rdi],dx
   140016dbb:	gs rex
   140016dbd:	rex.XB
   140016dbe:	rex.RX (bad) 
   140016dc0:	imul   esp,DWORD PTR [rbp+0x4c],0x6f
   140016dc4:	movsxd ebp,DWORD PTR [rbx+0x40]
   140016dc7:	rex push rbx
   140016dc9:	push   r8
   140016dcb:	rex.RB
   140016dcc:	rex.X
   140016dcd:	rex.RXB pop r8
   140016dcf:	pop    rdx
   140016dd0:	add    BYTE PTR [rdi],bh
   140016dd2:	rex.XB ins BYTE PTR es:[rdi],dx
   140016dd4:	(bad)  
   140016dd5:	jae    0x140016e4a
   140016dd7:	rex.WRX (bad) 
   140016dd9:	ins    DWORD PTR es:[rdi],dx
   140016dda:	gs rex
   140016ddc:	rex.XB push r10
   140016dde:	gs (bad) 
   140016de0:	fs gs jb 0x140016e3b
   140016de4:	jb     0x140016e4f
   140016de6:	je     0x140016e4d
   140016de8:	jb     0x140016e36
   140016dea:	outs   dx,DWORD PTR ds:[rsi]
   140016deb:	movsxd ebp,DWORD PTR [rbx+0x32]
   140016dee:	rex
   140016def:	rex push rbx
   140016df1:	push   r8
   140016df3:	rex.RB
   140016df4:	rex.X
   140016df5:	rex.RXB pop r8
   140016df7:	pop    rdx
   140016df8:	add    BYTE PTR [rdi],bh
   140016dfa:	rex.XB ins BYTE PTR es:[rdi],dx
   140016dfc:	(bad)  
   140016dfd:	jae    0x140016e72
   140016dff:	rex.WRX (bad) 
   140016e01:	ins    DWORD PTR es:[rdi],dx
   140016e02:	gs rex
   140016e04:	rex.XB push r10
   140016e06:	gs (bad) 
   140016e08:	fs gs jb 0x140016e63
   140016e0c:	jb     0x140016e77
   140016e0e:	je     0x140016e75
   140016e10:	jb     0x140016e5e
   140016e12:	outs   dx,DWORD PTR ds:[rsi]
   140016e13:	movsxd ebp,DWORD PTR [rbx+0x33]
   140016e16:	rex
   140016e17:	rex push rbx
   140016e19:	push   r8
   140016e1b:	rex.RB
   140016e1c:	rex.X
   140016e1d:	rex.RXB pop r8
   140016e1f:	pop    rdx
   140016e20:	add    BYTE PTR [rdi],bh
   140016e22:	rex.XB ins BYTE PTR es:[rdi],dx
   140016e24:	(bad)  
   140016e25:	jae    0x140016e9a
   140016e27:	rex.WRX (bad) 
   140016e29:	ins    DWORD PTR es:[rdi],dx
   140016e2a:	gs rex
   140016e2c:	rex.XB push r10
   140016e2e:	gs (bad) 
   140016e30:	fs gs jb 0x140016e8b
   140016e34:	jb     0x140016e9f
   140016e36:	je     0x140016e9d
   140016e38:	jb     0x140016e86
   140016e3a:	outs   dx,DWORD PTR ds:[rsi]
   140016e3b:	movsxd ebp,DWORD PTR [rbx+0x40]
   140016e3e:	rex push rbx
   140016e40:	push   r8
   140016e42:	rex.RB
   140016e43:	rex.X
   140016e44:	rex.RXB pop r8
   140016e46:	pop    rdx
   140016e47:	add    BYTE PTR [rdi],bh
   140016e49:	rex.XB ins BYTE PTR es:[rdi],dx
   140016e4b:	(bad)  
   140016e4c:	jae    0x140016ec1
   140016e4e:	rex.WRX (bad) 
   140016e50:	ins    DWORD PTR es:[rdi],dx
   140016e51:	gs rex
   140016e53:	rex.XB push r10
   140016e55:	je     0x140016ec3
   140016e57:	push   rdx
   140016e58:	gs jae 0x140016eca
   140016e5b:	jne    0x140016ecf
   140016e5d:	movsxd esp,DWORD PTR [rbp+0x40]
   140016e60:	rex push rbx
   140016e62:	push   r8
   140016e64:	rex.RB
   140016e65:	rex.X
   140016e66:	rex.R pop rax
   140016e68:	pop    rdx
   140016e69:	add    BYTE PTR [rdi],bh
   140016e6b:	rex.XB ins BYTE PTR es:[rdi],dx
   140016e6d:	(bad)  
   140016e6e:	jae    0x140016ee3
   140016e70:	rex.WRX (bad) 
   140016e72:	ins    DWORD PTR es:[rdi],dx
   140016e73:	gs rex
   140016e75:	rex.XB push r11
   140016e77:	push   0x4c657261
   140016e7c:	outs   dx,DWORD PTR ds:[rsi]
   140016e7d:	movsxd ebp,DWORD PTR [rbx+0x40]
   140016e80:	rex push rbx
   140016e82:	push   r8
   140016e84:	rex.RB
   140016e85:	rex.X
   140016e86:	rex.R pop rax
   140016e88:	pop    rdx
   140016e89:	add    BYTE PTR [rdi],bh
   140016e8b:	rex.XB ins BYTE PTR es:[rdi],dx
   140016e8d:	(bad)  
   140016e8e:	jae    0x140016f03
   140016e90:	rex.WRX (bad) 
   140016e92:	ins    DWORD PTR es:[rdi],dx
   140016e93:	gs rex
   140016e95:	rex.XB push r11
   140016e97:	ins    DWORD PTR es:[rdi],dx
   140016e98:	(bad)  
   140016e99:	ins    BYTE PTR es:[rdi],dx
   140016e9a:	ins    BYTE PTR es:[rdi],dx
   140016e9b:	push   rbx
   140016e9c:	jo     0x140016f07
   140016e9e:	outs   dx,BYTE PTR ds:[rsi]
   140016e9f:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140016ea1:	movsxd ebp,DWORD PTR [rbx+0x40]
   140016ea4:	rex push rbx
   140016ea6:	push   r8
   140016ea8:	rex.RB
   140016ea9:	rex.X
   140016eaa:	rex.RXB pop r8
   140016eac:	pop    rdx
   140016ead:	add    BYTE PTR [rdi],bh
   140016eaf:	rex.XB ins BYTE PTR es:[rdi],dx
   140016eb1:	(bad)  
   140016eb2:	jae    0x140016f27
   140016eb4:	rex.WRX (bad) 
   140016eb6:	ins    DWORD PTR es:[rdi],dx
   140016eb7:	gs rex
   140016eb9:	rex.XB push r11
   140016ebb:	jo     0x140016f26
   140016ebd:	outs   dx,BYTE PTR ds:[rsi]
   140016ebe:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140016ec0:	movsxd ebp,DWORD PTR [rbx+0x40]
   140016ec3:	rex push rbx
   140016ec5:	push   r8
   140016ec7:	rex.RB
   140016ec8:	rex.X
   140016ec9:	rex.RXB pop r8
   140016ecb:	pop    rdx
   140016ecc:	add    BYTE PTR [rdi],bh
   140016ece:	rex.XB ins BYTE PTR es:[rdi],dx
   140016ed0:	outs   dx,DWORD PTR ds:[rsi]
   140016ed1:	outs   dx,BYTE PTR ds:[rsi]
   140016ed2:	gs rex
   140016ed4:	rex.WRB push r13
   140016ed6:	rex.WR push rsp
   140016ed8:	rex.WB push r11
   140016eda:	pop    rdx
   140016edb:	rex
   140016edc:	rex push rcx
   140016ede:	rex.RB
   140016edf:	rex.X
   140016ee0:	rex.B
   140016ee1:	rex.W push rax
   140016ee3:	rex.RB
   140016ee4:	push   r14
   140016ee6:	xor    DWORD PTR [rax+0x40],eax
   140016ee9:	pop    rdx
   140016eea:	add    BYTE PTR [rdi],bh
   140016eec:	rex.XB ins BYTE PTR es:[rdi],dx
   140016eee:	outs   dx,DWORD PTR ds:[rsi]
   140016eef:	outs   dx,BYTE PTR ds:[rsi]
   140016ef0:	gs rex push rbx
   140016ef3:	push   rsp
   140016ef4:	push   rdx
   140016ef5:	rex.B
   140016ef6:	rex
   140016ef7:	rex push rcx
   140016ef9:	rex.RB
   140016efa:	rex.X
   140016efb:	rex.B
   140016efc:	rex.WX push rax
   140016efe:	rex.RB
   140016eff:	push   r14
   140016f01:	xor    DWORD PTR [rax+0x40],eax
   140016f04:	pop    rdx
   140016f05:	add    BYTE PTR [rdi],bh
   140016f07:	rex.XB ins BYTE PTR es:[rdi],dx
   140016f09:	outs   dx,DWORD PTR ds:[rsi]
   140016f0a:	jae    0x140016f71
   140016f0c:	rex
   140016f0d:	rex.WRB
   140016f0e:	rex.X
   140016f0f:	rex
   140016f10:	rex push rcx
   140016f12:	rex.RB
   140016f13:	rex.B
   140016f14:	rex.B
   140016f15:	rex.W pop rax
   140016f17:	pop    rdx
   140016f18:	add    BYTE PTR [rdi],bh
   140016f1a:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140016f1c:	outs   dx,BYTE PTR ds:[rsi]
   140016f1d:	jbe    0x140016f84
   140016f1f:	jb     0x140016f95
   140016f21:	rex push rsp
   140016f23:	push   rbx
   140016f24:	pop    rdi
   140016f25:	push   rdx
   140016f26:	rex.RB push r11
   140016f28:	rex.WRXB push r13
   140016f2a:	push   rdx
   140016f2b:	rex.XB
   140016f2c:	rex.RB
   140016f2d:	rex
   140016f2e:	rex push rcx
   140016f30:	rex.RB
   140016f31:	rex.B
   140016f32:	pop    r8
   140016f34:	push   rdi
   140016f35:	xor    al,0x54
   140016f37:	push   rbx
   140016f38:	push   rdx
   140016f39:	rex.RB push r11
   140016f3b:	pop    rdi
   140016f3c:	rex.XB
   140016f3d:	rex.WRXB
   140016f3e:	rex.WRX push rsi
   140016f40:	pop    rdi
   140016f41:	push   rsp
   140016f42:	pop    rcx
   140016f43:	push   rax
   140016f44:	rex.RB
   140016f45:	rex
   140016f46:	rex
   140016f47:	rex pop rdx
   140016f49:	add    BYTE PTR [rdi],bh
   140016f4b:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140016f4d:	outs   dx,BYTE PTR ds:[rsi]
   140016f4e:	jbe    0x140016fb5
   140016f50:	jb     0x140016fc6
   140016f52:	rex.RB js 0x140016fb8
   140016f55:	ins    BYTE PTR es:[rdi],dx
   140016f56:	jne    0x140016fcb
   140016f58:	imul   esi,DWORD PTR [rsi+0x65],0x68536f54
   140016f5f:	(bad)  
   140016f60:	jb     0x140016fc7
   140016f62:	fs rex
   140016f64:	rex.XB
   140016f65:	rex.XB jb 0x140016fd1
   140016f68:	je     0x140016fbd
   140016f6a:	movsxd eax,DWORD PTR gs:[rax+0x40]
   140016f6e:	push   rcx
   140016f6f:	rex.RB
   140016f70:	rex.B
   140016f71:	pop    r8
   140016f73:	pop    rax
   140016f74:	pop    rdx
   140016f75:	add    BYTE PTR [rdi],bh
   140016f77:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140016f79:	outs   dx,BYTE PTR ds:[rsi]
   140016f7a:	jbe    0x140016fe1
   140016f7c:	jb     0x140016ff2
   140016f7e:	rex.RB js 0x140016fe4
   140016f81:	ins    BYTE PTR es:[rdi],dx
   140016f82:	jne    0x140016ff7
   140016f84:	imul   esi,DWORD PTR [rsi+0x65],0x68536f54
   140016f8b:	(bad)  
   140016f8c:	jb     0x140016ff3
   140016f8e:	fs rex
   140016f90:	rex.XB
   140016f91:	rex.RX (bad) 
   140016f93:	imul   esp,DWORD PTR [rbp+0x4c],0x6f
   140016f97:	movsxd ebp,DWORD PTR [rbx+0x40]
   140016f9a:	rex push rcx
   140016f9c:	rex.RB
   140016f9d:	rex.B
   140016f9e:	pop    r8
   140016fa0:	pop    rax
   140016fa1:	pop    rdx
   140016fa2:	add    BYTE PTR [rdi],bh
   140016fa4:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140016fa6:	outs   dx,BYTE PTR ds:[rsi]
   140016fa7:	jbe    0x14001700e
   140016fa9:	jb     0x14001701f
   140016fab:	rex.RB js 0x140017011
   140016fae:	ins    BYTE PTR es:[rdi],dx
   140016faf:	jne    0x140017024
   140016fb1:	imul   esi,DWORD PTR [rsi+0x65],0x68536f54
   140016fb8:	(bad)  
   140016fb9:	jb     0x140017020
   140016fbb:	fs rex
   140016fbd:	rex.XB push r10
   140016fbf:	gs (bad) 
   140016fc1:	fs gs jb 0x14001701c
   140016fc5:	jb     0x140017030
   140016fc7:	je     0x14001702e
   140016fc9:	jb     0x140017017
   140016fcb:	outs   dx,DWORD PTR ds:[rsi]
   140016fcc:	movsxd ebp,DWORD PTR [rbx+0x32]
   140016fcf:	rex
   140016fd0:	rex push rcx
   140016fd2:	rex.RB
   140016fd3:	rex.B
   140016fd4:	pop    r8
   140016fd6:	pop    rax
   140016fd7:	pop    rdx
   140016fd8:	add    BYTE PTR [rdi],bh
   140016fda:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140016fdc:	outs   dx,BYTE PTR ds:[rsi]
   140016fdd:	jbe    0x140017044
   140016fdf:	jb     0x140017055
   140016fe1:	rex.RB js 0x140017047
   140016fe4:	ins    BYTE PTR es:[rdi],dx
   140016fe5:	jne    0x14001705a
   140016fe7:	imul   esi,DWORD PTR [rsi+0x65],0x68536f54
   140016fee:	(bad)  
   140016fef:	jb     0x140017056
   140016ff1:	fs rex
   140016ff3:	rex.XB push r10
   140016ff5:	gs (bad) 
   140016ff7:	fs gs jb 0x140017052
   140016ffb:	jb     0x140017066
   140016ffd:	je     0x140017064
   140016fff:	jb     0x14001704d
   140017001:	outs   dx,DWORD PTR ds:[rsi]
   140017002:	movsxd ebp,DWORD PTR [rbx+0x33]
   140017005:	rex
   140017006:	rex push rcx
   140017008:	rex.RB
   140017009:	rex.B
   14001700a:	pop    r8
   14001700c:	pop    rax
   14001700d:	pop    rdx
   14001700e:	add    BYTE PTR [rdi],bh
   140017010:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140017012:	outs   dx,BYTE PTR ds:[rsi]
   140017013:	jbe    0x14001707a
   140017015:	jb     0x14001708b
   140017017:	rex.RB js 0x14001707d
   14001701a:	ins    BYTE PTR es:[rdi],dx
   14001701b:	jne    0x140017090
   14001701d:	imul   esi,DWORD PTR [rsi+0x65],0x68536f54
   140017024:	(bad)  
   140017025:	jb     0x14001708c
   140017027:	fs rex
   140017029:	rex.XB push r10
   14001702b:	gs (bad) 
   14001702d:	fs gs jb 0x140017088
   140017031:	jb     0x14001709c
   140017033:	je     0x14001709a
   140017035:	jb     0x140017083
   140017037:	outs   dx,DWORD PTR ds:[rsi]
   140017038:	movsxd ebp,DWORD PTR [rbx+0x40]
   14001703b:	rex push rcx
   14001703d:	rex.RB
   14001703e:	rex.B
   14001703f:	pop    r8
   140017041:	pop    rax
   140017042:	pop    rdx
   140017043:	add    BYTE PTR [rdi],bh
   140017045:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140017047:	outs   dx,BYTE PTR ds:[rsi]
   140017048:	jbe    0x1400170af
   14001704a:	jb     0x1400170c0
   14001704c:	rex.RB js 0x1400170b2
   14001704f:	ins    BYTE PTR es:[rdi],dx
   140017050:	jne    0x1400170c5
   140017052:	imul   esi,DWORD PTR [rsi+0x65],0x68536f54
   140017059:	(bad)  
   14001705a:	jb     0x1400170c1
   14001705c:	fs rex
   14001705e:	rex.XB push r10
   140017060:	je     0x1400170ce
   140017062:	push   rdx
   140017063:	gs jae 0x1400170d5
   140017066:	jne    0x1400170da
   140017068:	movsxd esp,DWORD PTR [rbp+0x40]
   14001706b:	rex push rcx
   14001706d:	rex.RB
   14001706e:	rex.B
   14001706f:	pop    r8
   140017071:	pop    rax
   140017072:	pop    rdx
   140017073:	add    BYTE PTR [rdi],bh
   140017075:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140017077:	outs   dx,BYTE PTR ds:[rsi]
   140017078:	jbe    0x1400170df
   14001707a:	jb     0x1400170f0
   14001707c:	rex.RB js 0x1400170e2
   14001707f:	ins    BYTE PTR es:[rdi],dx
   140017080:	jne    0x1400170f5
   140017082:	imul   esi,DWORD PTR [rsi+0x65],0x68536f54
   140017089:	(bad)  
   14001708a:	jb     0x1400170f1
   14001708c:	fs rex
   14001708e:	rex.XB push r11
   140017090:	push   0x4c657261
   140017095:	outs   dx,DWORD PTR ds:[rsi]
   140017096:	movsxd ebp,DWORD PTR [rbx+0x40]
   140017099:	rex push rcx
   14001709b:	rex.RB
   14001709c:	rex.B
   14001709d:	pop    r8
   14001709f:	pop    rax
   1400170a0:	pop    rdx
   1400170a1:	add    BYTE PTR [rdi],bh
   1400170a3:	rex.XB outs dx,DWORD PTR ds:[rsi]
   1400170a5:	outs   dx,BYTE PTR ds:[rsi]
   1400170a6:	jbe    0x14001710d
   1400170a8:	jb     0x14001711e
   1400170aa:	rex.RB js 0x140017110
   1400170ad:	ins    BYTE PTR es:[rdi],dx
   1400170ae:	jne    0x140017123
   1400170b0:	imul   esi,DWORD PTR [rsi+0x65],0x68536f54
   1400170b7:	(bad)  
   1400170b8:	jb     0x14001711f
   1400170ba:	fs rex
   1400170bc:	rex.XB push r11
   1400170be:	ins    DWORD PTR es:[rdi],dx
   1400170bf:	(bad)  
   1400170c0:	ins    BYTE PTR es:[rdi],dx
   1400170c1:	ins    BYTE PTR es:[rdi],dx
   1400170c2:	push   rbx
   1400170c3:	jo     0x14001712e
   1400170c5:	outs   dx,BYTE PTR ds:[rsi]
   1400170c6:	rex.WR outs dx,DWORD PTR ds:[rsi]
   1400170c8:	movsxd ebp,DWORD PTR [rbx+0x40]
   1400170cb:	rex push rcx
   1400170cd:	rex.RB
   1400170ce:	rex.B
   1400170cf:	pop    r8
   1400170d1:	pop    rax
   1400170d2:	pop    rdx
   1400170d3:	add    BYTE PTR [rdi],bh
   1400170d5:	rex.XB outs dx,DWORD PTR ds:[rsi]
   1400170d7:	outs   dx,BYTE PTR ds:[rsi]
   1400170d8:	jbe    0x14001713f
   1400170da:	jb     0x140017150
   1400170dc:	rex.RB js 0x140017142
   1400170df:	ins    BYTE PTR es:[rdi],dx
   1400170e0:	jne    0x140017155
   1400170e2:	imul   esi,DWORD PTR [rsi+0x65],0x68536f54
   1400170e9:	(bad)  
   1400170ea:	jb     0x140017151
   1400170ec:	fs rex
   1400170ee:	rex.XB push r11
   1400170f0:	jo     0x14001715b
   1400170f2:	outs   dx,BYTE PTR ds:[rsi]
   1400170f3:	rex.WR outs dx,DWORD PTR ds:[rsi]
   1400170f5:	movsxd ebp,DWORD PTR [rbx+0x40]
   1400170f8:	rex push rcx
   1400170fa:	rex.RB
   1400170fb:	rex.B
   1400170fc:	pop    r8
   1400170fe:	pop    rax
   1400170ff:	pop    rdx
   140017100:	add    BYTE PTR [rdi],bh
   140017102:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140017104:	outs   dx,BYTE PTR ds:[rsi]
   140017105:	jbe    0x14001716c
   140017107:	jb     0x14001717d
   140017109:	push   rbx
   14001710a:	push   0x64657261
   14001710f:	push   rsp
   140017110:	outs   dx,DWORD PTR ds:[rsi]
   140017111:	rex.RB js 0x140017177
   140017114:	ins    BYTE PTR es:[rdi],dx
   140017115:	jne    0x14001718a
   140017117:	imul   esi,DWORD PTR [rsi+0x65],0x72434340
   14001711e:	imul   esi,DWORD PTR [rbx+rdx*2+0x65],0x51404063
   140017126:	rex.RB
   140017127:	rex.B
   140017128:	pop    r8
   14001712a:	pop    rax
   14001712b:	pop    rdx
   14001712c:	add    BYTE PTR [rdi],bh
   14001712e:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140017130:	outs   dx,BYTE PTR ds:[rsi]
   140017131:	jbe    0x140017198
   140017133:	jb     0x1400171a9
   140017135:	push   rbx
   140017136:	push   0x64657261
   14001713b:	push   rsp
   14001713c:	outs   dx,DWORD PTR ds:[rsi]
   14001713d:	rex.RB js 0x1400171a3
   140017140:	ins    BYTE PTR es:[rdi],dx
   140017141:	jne    0x1400171b6
   140017143:	imul   esi,DWORD PTR [rsi+0x65],0x61464340
   14001714a:	imul   esp,DWORD PTR [rbp+0x4c],0x6f
   14001714e:	movsxd ebp,DWORD PTR [rbx+0x40]
   140017151:	rex push rcx
   140017153:	rex.RB
   140017154:	rex.B
   140017155:	pop    r8
   140017157:	pop    rax
   140017158:	pop    rdx
   140017159:	add    BYTE PTR [rdi],bh
   14001715b:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14001715d:	outs   dx,BYTE PTR ds:[rsi]
   14001715e:	jbe    0x1400171c5
   140017160:	jb     0x1400171d6
   140017162:	push   rbx
   140017163:	push   0x64657261
   140017168:	push   rsp
   140017169:	outs   dx,DWORD PTR ds:[rsi]
   14001716a:	rex.RB js 0x1400171d0
   14001716d:	ins    BYTE PTR es:[rdi],dx
   14001716e:	jne    0x1400171e3
   140017170:	imul   esi,DWORD PTR [rsi+0x65],0x65524340
   140017177:	(bad)  
   140017178:	fs gs jb 0x1400171d3
   14001717c:	jb     0x1400171e7
   14001717e:	je     0x1400171e5
   140017180:	jb     0x1400171ce
   140017182:	outs   dx,DWORD PTR ds:[rsi]
   140017183:	movsxd ebp,DWORD PTR [rbx+0x32]
   140017186:	rex
   140017187:	rex push rcx
   140017189:	rex.RB
   14001718a:	rex.B
   14001718b:	pop    r8
   14001718d:	pop    rax
   14001718e:	pop    rdx
   14001718f:	add    BYTE PTR [rdi],bh
   140017191:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140017193:	outs   dx,BYTE PTR ds:[rsi]
   140017194:	jbe    0x1400171fb
   140017196:	jb     0x14001720c
   140017198:	push   rbx
   140017199:	push   0x64657261
   14001719e:	push   rsp
   14001719f:	outs   dx,DWORD PTR ds:[rsi]
   1400171a0:	rex.RB js 0x140017206
   1400171a3:	ins    BYTE PTR es:[rdi],dx
   1400171a4:	jne    0x140017219
   1400171a6:	imul   esi,DWORD PTR [rsi+0x65],0x65524340
   1400171ad:	(bad)  
   1400171ae:	fs gs jb 0x140017209
   1400171b2:	jb     0x14001721d
   1400171b4:	je     0x14001721b
   1400171b6:	jb     0x140017204
   1400171b8:	outs   dx,DWORD PTR ds:[rsi]
   1400171b9:	movsxd ebp,DWORD PTR [rbx+0x33]
   1400171bc:	rex
   1400171bd:	rex push rcx
   1400171bf:	rex.RB
   1400171c0:	rex.B
   1400171c1:	pop    r8
   1400171c3:	pop    rax
   1400171c4:	pop    rdx
   1400171c5:	add    BYTE PTR [rdi],bh
   1400171c7:	rex.XB outs dx,DWORD PTR ds:[rsi]
   1400171c9:	outs   dx,BYTE PTR ds:[rsi]
   1400171ca:	jbe    0x140017231
   1400171cc:	jb     0x140017242
   1400171ce:	push   rbx
   1400171cf:	push   0x64657261
   1400171d4:	push   rsp
   1400171d5:	outs   dx,DWORD PTR ds:[rsi]
   1400171d6:	rex.RB js 0x14001723c
   1400171d9:	ins    BYTE PTR es:[rdi],dx
   1400171da:	jne    0x14001724f
   1400171dc:	imul   esi,DWORD PTR [rsi+0x65],0x65524340
   1400171e3:	(bad)  
   1400171e4:	fs gs jb 0x14001723f
   1400171e8:	jb     0x140017253
   1400171ea:	je     0x140017251
   1400171ec:	jb     0x14001723a
   1400171ee:	outs   dx,DWORD PTR ds:[rsi]
   1400171ef:	movsxd ebp,DWORD PTR [rbx+0x40]
   1400171f2:	rex push rcx
   1400171f4:	rex.RB
   1400171f5:	rex.B
   1400171f6:	pop    r8
   1400171f8:	pop    rax
   1400171f9:	pop    rdx
   1400171fa:	add    BYTE PTR [rdi],bh
   1400171fc:	rex.XB outs dx,DWORD PTR ds:[rsi]
   1400171fe:	outs   dx,BYTE PTR ds:[rsi]
   1400171ff:	jbe    0x140017266
   140017201:	jb     0x140017277
   140017203:	push   rbx
   140017204:	push   0x64657261
   140017209:	push   rsp
   14001720a:	outs   dx,DWORD PTR ds:[rsi]
   14001720b:	rex.RB js 0x140017271
   14001720e:	ins    BYTE PTR es:[rdi],dx
   14001720f:	jne    0x140017284
   140017211:	imul   esi,DWORD PTR [rsi+0x65],0x74524340
   140017218:	ins    BYTE PTR es:[rdi],dx
   140017219:	push   rdx
   14001721a:	gs jae 0x14001728c
   14001721d:	jne    0x140017291
   14001721f:	movsxd esp,DWORD PTR [rbp+0x40]
   140017222:	rex push rcx
   140017224:	rex.RB
   140017225:	rex.B
   140017226:	pop    r8
   140017228:	pop    rax
   140017229:	pop    rdx
   14001722a:	add    BYTE PTR [rdi],bh
   14001722c:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14001722e:	outs   dx,BYTE PTR ds:[rsi]
   14001722f:	jbe    0x140017296
   140017231:	jb     0x1400172a7
   140017233:	push   rbx
   140017234:	push   0x64657261
   140017239:	push   rsp
   14001723a:	outs   dx,DWORD PTR ds:[rsi]
   14001723b:	rex.RB js 0x1400172a1
   14001723e:	ins    BYTE PTR es:[rdi],dx
   14001723f:	jne    0x1400172b4
   140017241:	imul   esi,DWORD PTR [rsi+0x65],0x68534340
   140017248:	(bad)  
   140017249:	jb     0x1400172b0
   14001724b:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14001724d:	movsxd ebp,DWORD PTR [rbx+0x40]
   140017250:	rex push rcx
   140017252:	rex.RB
   140017253:	rex.B
   140017254:	pop    r8
   140017256:	pop    rax
   140017257:	pop    rdx
   140017258:	add    BYTE PTR [rdi],bh
   14001725a:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14001725c:	outs   dx,BYTE PTR ds:[rsi]
   14001725d:	jbe    0x1400172c4
   14001725f:	jb     0x1400172d5
   140017261:	push   rbx
   140017262:	push   0x64657261
   140017267:	push   rsp
   140017268:	outs   dx,DWORD PTR ds:[rsi]
   140017269:	rex.RB js 0x1400172cf
   14001726c:	ins    BYTE PTR es:[rdi],dx
   14001726d:	jne    0x1400172e2
   14001726f:	imul   esi,DWORD PTR [rsi+0x65],0x6d534340
   140017276:	(bad)  
   140017277:	ins    BYTE PTR es:[rdi],dx
   140017278:	ins    BYTE PTR es:[rdi],dx
   140017279:	push   rbx
   14001727a:	jo     0x1400172e5
   14001727c:	outs   dx,BYTE PTR ds:[rsi]
   14001727d:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14001727f:	movsxd ebp,DWORD PTR [rbx+0x40]
   140017282:	rex push rcx
   140017284:	rex.RB
   140017285:	rex.B
   140017286:	pop    r8
   140017288:	pop    rax
   140017289:	pop    rdx
   14001728a:	add    BYTE PTR [rdi],bh
   14001728c:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14001728e:	outs   dx,BYTE PTR ds:[rsi]
   14001728f:	jbe    0x1400172f6
   140017291:	jb     0x140017307
   140017293:	push   rbx
   140017294:	push   0x64657261
   140017299:	push   rsp
   14001729a:	outs   dx,DWORD PTR ds:[rsi]
   14001729b:	rex.RB js 0x140017301
   14001729e:	ins    BYTE PTR es:[rdi],dx
   14001729f:	jne    0x140017314
   1400172a1:	imul   esi,DWORD PTR [rsi+0x65],0x70534340
   1400172a8:	imul   ebp,DWORD PTR [rsi+0x4c],0x406b636f
   1400172af:	rex push rcx
   1400172b1:	rex.RB
   1400172b2:	rex.B
   1400172b3:	pop    r8
   1400172b5:	pop    rax
   1400172b6:	pop    rdx
   1400172b7:	add    BYTE PTR [rdi],bh
   1400172b9:	rex.XB outs dx,DWORD PTR ds:[rsi]
   1400172bb:	jo     0x140017336
   1400172bd:	rex
   1400172be:	rex.WRB push r13
   1400172c0:	rex.WR push rsp
   1400172c2:	rex.WB push r11
   1400172c4:	pop    rdx
   1400172c5:	rex
   1400172c6:	rex push rcx
   1400172c8:	rex.RB
   1400172c9:	rex.B
   1400172ca:	rex.B
   1400172cb:	rex.W
   1400172cc:	rex.B
   1400172cd:	rex.RB
   1400172ce:	rex.X push rsi
   1400172d0:	xor    DWORD PTR [rax+0x40],eax
   1400172d3:	pop    rdx
   1400172d4:	add    BYTE PTR [rdi],bh
   1400172d6:	rex.XB outs dx,DWORD PTR ds:[rsi]
   1400172d8:	jo     0x140017353
   1400172da:	rex
   1400172db:	rex.WRB push r13
   1400172dd:	rex.WR push rsp
   1400172df:	rex.WB push r11
   1400172e1:	pop    rdx
   1400172e2:	rex
   1400172e3:	rex push rcx
   1400172e5:	rex.RB
   1400172e6:	rex.B
   1400172e7:	rex.B
   1400172e8:	rex.W push rax
   1400172ea:	rex.RB
   1400172eb:	rex.X
   1400172ec:	rex.RXB
   1400172ed:	rex.WXB
   1400172ee:	rex pop rdx
   1400172f0:	add    BYTE PTR [rdi],bh
   1400172f2:	rex.XB outs dx,DWORD PTR ds:[rsi]
   1400172f4:	jo     0x14001736f
   1400172f6:	rex push rbx
   1400172f8:	push   rsp
   1400172f9:	push   rdx
   1400172fa:	rex.B
   1400172fb:	rex
   1400172fc:	rex push rcx
   1400172fe:	rex.RB
   1400172ff:	rex.B
   140017300:	rex.B
   140017301:	rex.WX
   140017302:	rex.B
   140017303:	rex.RB
   140017304:	rex.X push rsi
   140017306:	xor    DWORD PTR [rax+0x40],eax
   140017309:	pop    rdx
   14001730a:	add    BYTE PTR [rdi],bh
   14001730c:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14001730e:	jo     0x140017389
   140017310:	rex push rbx
   140017312:	push   rsp
   140017313:	push   rdx
   140017314:	rex.B
   140017315:	rex
   140017316:	rex push rcx
   140017318:	rex.RB
   140017319:	rex.B
   14001731a:	rex.B
   14001731b:	rex.WX push rax
   14001731d:	rex.RB
   14001731e:	rex.X
   14001731f:	rex.R
   140017320:	rex pop rdx
   140017322:	add    BYTE PTR [rdi],bh
   140017324:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140017326:	jo     0x1400173a1
   140017328:	rex push rbx
   14001732a:	push   rsp
   14001732b:	push   rdx
   14001732c:	rex.B
   14001732d:	rex
   14001732e:	rex push rcx
   140017330:	rex.RB
   140017331:	rex.B
   140017332:	rex.B
   140017333:	rex.WX push rax
   140017335:	rex.RB
   140017336:	rex.X
   140017337:	rex.R
   140017338:	rex.WXB
   140017339:	rex pop rdx
   14001733b:	add    BYTE PTR [rdi],bh
   14001733d:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14001733f:	jo     0x1400173ba
   140017341:	rex push rbx
   140017343:	push   rsp
   140017344:	push   rdx
   140017345:	push   r13
   140017347:	rex
   140017348:	rex push rcx
   14001734a:	rex.RB
   14001734b:	rex.B
   14001734c:	rex.B
   14001734d:	rex.W
   14001734e:	rex.B
   14001734f:	rex.RB
   140017350:	push   r14
   140017352:	xor    DWORD PTR [rax+0x40],eax
   140017355:	pop    rdx
   140017356:	add    BYTE PTR [rdi],bh
   140017358:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14001735a:	jo     0x1400173d5
   14001735c:	rex push rbx
   14001735e:	push   rsp
   14001735f:	push   rdx
   140017360:	push   r13
   140017362:	rex
   140017363:	rex push rcx
   140017365:	rex.RB
   140017366:	rex.B
   140017367:	rex.B
   140017368:	rex.W push rax
   14001736a:	rex.RB
   14001736b:	rex.X
   14001736c:	rex.R
   14001736d:	rex pop rdx
   14001736f:	add    BYTE PTR [rdi],bh
   140017371:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140017373:	jo     0x1400173ee
   140017375:	rex push rbx
   140017377:	push   rsp
   140017378:	push   rdx
   140017379:	push   r13
   14001737b:	rex
   14001737c:	rex push rcx
   14001737e:	rex.RB
   14001737f:	rex.B
   140017380:	rex.B
   140017381:	rex.W push rax
   140017383:	rex.RB
   140017384:	rex.X
   140017385:	rex.R
   140017386:	rex.WXB
   140017387:	rex pop rdx
   140017389:	add    BYTE PTR [rdi],bh
   14001738b:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14001738d:	jo     0x140017408
   14001738f:	rex push rbx
   140017391:	push   rsp
   140017392:	push   rdx
   140017393:	push   r13
   140017395:	rex
   140017396:	rex push rcx
   140017398:	rex.RB
   140017399:	rex.B
   14001739a:	rex.B
   14001739b:	rex.W push rax
   14001739d:	rex.RB
   14001739e:	rex.X
   14001739f:	rex.RXB
   1400173a0:	rex pop rdx
   1400173a2:	add    BYTE PTR [rdi],bh
   1400173a4:	rex.XB outs dx,DWORD PTR ds:[rsi]
   1400173a6:	jo     0x140017421
   1400173a8:	rex push rbx
   1400173aa:	push   rsp
   1400173ab:	push   rdx
   1400173ac:	push   r13
   1400173ae:	rex
   1400173af:	rex push rcx
   1400173b1:	rex.RB
   1400173b2:	rex.B
   1400173b3:	rex.B
   1400173b4:	rex.W push rax
   1400173b6:	rex.RB
   1400173b7:	rex.X
   1400173b8:	rex.RXB
   1400173b9:	rex.WXB
   1400173ba:	rex pop rdx
   1400173bc:	add    BYTE PTR [rdi],bh
   1400173be:	rex.XB outs dx,DWORD PTR ds:[rsi]
   1400173c0:	jo     0x14001743b
   1400173c2:	rex push rbx
   1400173c4:	push   rsp
   1400173c5:	push   rdx
   1400173c6:	push   rbp
   1400173c7:	rex
   1400173c8:	rex push rcx
   1400173ca:	rex.RB
   1400173cb:	rex.B
   1400173cc:	rex.B
   1400173cd:	rex.WX
   1400173ce:	rex.B
   1400173cf:	rex.RB
   1400173d0:	rex.X push rsi
   1400173d2:	xor    DWORD PTR [rax+0x40],eax
   1400173d5:	pop    rdx
   1400173d6:	add    BYTE PTR [rdi],bh
   1400173d8:	rex.XB outs dx,DWORD PTR ds:[rsi]
   1400173da:	jo     0x140017455
   1400173dc:	rex push rbx
   1400173de:	push   rsp
   1400173df:	push   rdx
   1400173e0:	push   rbp
   1400173e1:	rex
   1400173e2:	rex push rcx
   1400173e4:	rex.RB
   1400173e5:	rex.B
   1400173e6:	rex.B
   1400173e7:	rex.WX push rax
   1400173e9:	rex.RB
   1400173ea:	rex.X
   1400173eb:	rex.RXB
   1400173ec:	rex pop rdx
   1400173ee:	add    BYTE PTR [rdi],bh
   1400173f0:	rex.XB outs dx,DWORD PTR ds:[rsi]
   1400173f2:	jo     0x14001746d
   1400173f4:	rex push rbx
   1400173f6:	push   rsp
   1400173f7:	push   rdx
   1400173f8:	push   rbp
   1400173f9:	rex
   1400173fa:	rex push rcx
   1400173fc:	rex.RB
   1400173fd:	rex.B
   1400173fe:	rex.B
   1400173ff:	rex.WX push rax
   140017401:	rex.RB
   140017402:	rex.X
   140017403:	rex.RXB
   140017404:	rex.WXB
   140017405:	rex pop rdx
   140017407:	add    BYTE PTR [rdi],bh
   140017409:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14001740b:	jo     0x140017486
   14001740d:	rex push rbx
   14001740f:	push   rsp
   140017410:	push   rdx
   140017411:	push   rbp
   140017412:	rex
   140017413:	rex push rcx
   140017415:	rex.RB
   140017416:	rex.B
   140017417:	rex.B
   140017418:	rex.WX push rax
   14001741a:	rex.RB
   14001741b:	rex.X push rsi
   14001741d:	xor    DWORD PTR [rax+0x40],eax
   140017420:	pop    rdx
   140017421:	add    BYTE PTR [rdi],bh
   140017423:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140017425:	jo     0x1400174a0
   140017427:	rex.B
   140017428:	rex push rbx
   14001742a:	push   rsp
   14001742b:	push   rdx
   14001742c:	push   rbp
   14001742d:	rex
   14001742e:	rex push rcx
   140017430:	rex.RB
   140017431:	rex.B
   140017432:	rex.B
   140017433:	rex.WX push rax
   140017435:	rex.RB
   140017436:	rex.X
   140017437:	rex.R
   140017438:	rex pop rdx
   14001743a:	add    BYTE PTR [rdi],bh
   14001743c:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14001743e:	jo     0x1400174b9
   140017440:	rex.B
   140017441:	rex push rbx
   140017443:	push   rsp
   140017444:	push   rdx
   140017445:	push   rbp
   140017446:	rex
   140017447:	rex push rcx
   140017449:	rex.RB
   14001744a:	rex.B
   14001744b:	rex.B
   14001744c:	rex.WX push rax
   14001744e:	rex.RB
   14001744f:	rex.X
   140017450:	rex.R
   140017451:	rex.WXB
   140017452:	rex pop rdx
   140017454:	add    BYTE PTR [rdi],bh
   140017456:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140017458:	jo     0x1400174d3
   14001745a:	pop    r15
   14001745c:	rex.B
   14001745d:	rex.XB push r8
   14001745f:	rex push rbx
   140017461:	push   rsp
   140017462:	push   rdx
   140017463:	push   rbp
   140017464:	rex
   140017465:	rex push rcx
   140017467:	rex.RB
   140017468:	rex.B
   140017469:	rex.B
   14001746a:	rex.WX push rax
   14001746c:	rex.RB
   14001746d:	rex.X
   14001746e:	rex.R
   14001746f:	rex pop rdx
   140017471:	add    BYTE PTR [rdi],bh
   140017473:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140017475:	jo     0x1400174f0
   140017477:	pop    r15
   140017479:	rex.B
   14001747a:	rex.XB push r8
   14001747c:	rex push rbx
   14001747e:	push   rsp
   14001747f:	push   rdx
   140017480:	push   rbp
   140017481:	rex
   140017482:	rex push rcx
   140017484:	rex.RB
   140017485:	rex.B
   140017486:	rex.B
   140017487:	rex.WX push rax
   140017489:	rex.RB
   14001748a:	rex.X
   14001748b:	rex.R
   14001748c:	rex.WXB
   14001748d:	rex pop rdx
   14001748f:	add    BYTE PTR [rdi],bh
   140017491:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140017493:	jo     0x14001750e
   140017495:	rex.X imul ebp,DWORD PTR [rsi+0x61],0x53407972
   14001749d:	push   rsp
   14001749e:	push   rdx
   14001749f:	rex.B
   1400174a0:	rex
   1400174a1:	rex push rcx
   1400174a3:	rex.RB
   1400174a4:	rex.B
   1400174a5:	rex.B
   1400174a6:	rex.WX push rax
   1400174a8:	rex.RB
   1400174a9:	pop    r8
   1400174ab:	rex.WXB
   1400174ac:	rex pop rdx
   1400174ae:	add    BYTE PTR [rdi],bh
   1400174b0:	rex.XB outs dx,DWORD PTR ds:[rsi]
   1400174b2:	jo     0x14001752d
   1400174b4:	push   rsp
   1400174b5:	outs   dx,DWORD PTR ds:[rsi]
   1400174b6:	rex.X jne 0x14001751f
   1400174b9:	data16 gs jb 0x1400174fd
   1400174bd:	rex.WRB push r13
   1400174bf:	rex.WR push rsp
   1400174c1:	rex.WB push r11
   1400174c3:	pop    rdx
   1400174c4:	rex
   1400174c5:	rex push rcx
   1400174c7:	rex.RB
   1400174c8:	rex.X
   1400174c9:	rex.B
   1400174ca:	rex.W push rax
   1400174cc:	rex.RB
   1400174cd:	rex.B
   1400174ce:	rex.RXB push r8
   1400174d0:	rex.RB
   1400174d1:	rex.B
   1400174d2:	rex.WXB
   1400174d3:	rex pop rdx
   1400174d5:	add    BYTE PTR [rdi],bh
   1400174d7:	rex.XB outs dx,DWORD PTR ds:[rsi]
   1400174d9:	jo     0x140017554
   1400174db:	push   rsp
   1400174dc:	outs   dx,DWORD PTR ds:[rsi]
   1400174dd:	rex.X jne 0x140017546
   1400174e0:	data16 gs jb 0x140017524
   1400174e4:	push   rbx
   1400174e5:	push   rsp
   1400174e6:	push   rdx
   1400174e7:	rex.B
   1400174e8:	rex
   1400174e9:	rex push rcx
   1400174eb:	rex.RB
   1400174ec:	rex.X
   1400174ed:	rex.B
   1400174ee:	rex.WX push rax
   1400174f0:	rex.RB
   1400174f1:	rex.B
   1400174f2:	rex.R push rax
   1400174f4:	rex.RB
   1400174f5:	rex.B
   1400174f6:	rex.WXB
   1400174f7:	rex pop rdx
   1400174f9:	add    BYTE PTR [rdi],bh
   1400174fb:	rex.XB outs dx,DWORD PTR ds:[rsi]
   1400174fd:	jo     0x140017578
   1400174ff:	push   rsp
   140017500:	outs   dx,DWORD PTR ds:[rsi]
   140017501:	rex.X jne 0x14001756a
   140017504:	data16 gs jb 0x140017548
   140017508:	push   rbx
   140017509:	push   rsp
   14001750a:	push   rdx
   14001750b:	push   rbp
   14001750c:	rex
   14001750d:	rex push rcx
   14001750f:	rex.RB
   140017510:	rex.X
   140017511:	rex.B
   140017512:	rex.WX push rax
   140017514:	rex.RB
   140017515:	rex.B
   140017516:	rex.RXB push r8
   140017518:	rex.RB
   140017519:	rex.B
   14001751a:	rex.WXB
   14001751b:	rex pop rdx
   14001751d:	add    BYTE PTR [rdi],bh
   14001751f:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140017521:	jo     0x14001759c
   140017523:	push   rdi
   140017524:	rex push rbx
   140017526:	push   rsp
   140017527:	push   rdx
   140017528:	rex.B
   140017529:	rex
   14001752a:	rex push rcx
   14001752c:	rex.RB
   14001752d:	rex.B
   14001752e:	rex.B
   14001752f:	rex.WX push rax
   140017531:	rex.RB
   140017532:	rex.X
   140017533:	rex.RXB
   140017534:	rex pop rdx
   140017536:	add    BYTE PTR [rdi],bh
   140017538:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14001753a:	jo     0x1400175b5
   14001753c:	push   rdi
   14001753d:	rex push rbx
   14001753f:	push   rsp
   140017540:	push   rdx
   140017541:	rex.B
   140017542:	rex
   140017543:	rex push rcx
   140017545:	rex.RB
   140017546:	rex.B
   140017547:	rex.B
   140017548:	rex.WX push rax
   14001754a:	rex.RB
   14001754b:	rex.X
   14001754c:	rex.RXB
   14001754d:	rex.WXB
   14001754e:	rex pop rdx
   140017550:	add    BYTE PTR [rdi],bh
   140017552:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140017554:	jo     0x1400175cf
   140017556:	push   rdi
   140017557:	push   rsp
   140017558:	outs   dx,DWORD PTR ds:[rsi]
   140017559:	push   rbp
   14001755a:	push   rsp
   14001755b:	rex.RX cmp BYTE PTR [rbp+0x73],r8b
   14001755f:	movsxd esp,DWORD PTR [rcx+0x70]
   140017562:	gs fs rex push rbx
   140017566:	push   rsp
   140017567:	push   rdx
   140017568:	rex.B
   140017569:	rex
   14001756a:	rex push rcx
   14001756c:	rex.RB
   14001756d:	rex.B
   14001756e:	rex.B
   14001756f:	rex.WX
   140017570:	rex.B
   140017571:	rex.RB
   140017572:	rex.X push rsi
   140017574:	push   rbx
   140017575:	push   rsp
   140017576:	push   rdx
   140017577:	push   rbp
   140017578:	rex
   140017579:	rex
   14001757a:	rex pop rdx
   14001757c:	add    BYTE PTR [rdi],bh
   14001757e:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140017580:	jo     0x1400175fb
   140017582:	push   rdi
   140017583:	push   rsp
   140017584:	outs   dx,DWORD PTR ds:[rsi]
   140017585:	push   rbp
   140017586:	push   rsp
   140017587:	rex.RX cmp BYTE PTR [rbp+0x73],r8b
   14001758b:	movsxd esp,DWORD PTR [rcx+0x70]
   14001758e:	gs fs rex push rbx
   140017592:	push   rsp
   140017593:	push   rdx
   140017594:	rex.B
   140017595:	rex
   140017596:	rex push rcx
   140017598:	rex.RB
   140017599:	rex.B
   14001759a:	rex.B
   14001759b:	rex.WX push rax
   14001759d:	rex.RB
   14001759e:	rex.X
   14001759f:	rex.RXB
   1400175a0:	rex pop rdx
   1400175a2:	add    BYTE PTR [rdi],bh
   1400175a4:	rex.XB outs dx,DWORD PTR ds:[rsi]
   1400175a6:	jo     0x140017621
   1400175a8:	push   rdi
   1400175a9:	push   rsp
   1400175aa:	outs   dx,DWORD PTR ds:[rsi]
   1400175ab:	push   rbp
   1400175ac:	push   rsp
   1400175ad:	rex.RX cmp BYTE PTR [rbp+0x73],r8b
   1400175b1:	movsxd esp,DWORD PTR [rcx+0x70]
   1400175b4:	gs fs rex push rbx
   1400175b8:	push   rsp
   1400175b9:	push   rdx
   1400175ba:	rex.B
   1400175bb:	rex
   1400175bc:	rex push rcx
   1400175be:	rex.RB
   1400175bf:	rex.B
   1400175c0:	rex.B
   1400175c1:	rex.WX push rax
   1400175c3:	rex.RB
   1400175c4:	rex.X
   1400175c5:	rex.RXB
   1400175c6:	rex.WXB
   1400175c7:	rex pop rdx
   1400175c9:	add    BYTE PTR [rdi],bh
   1400175cb:	rex.XB outs dx,DWORD PTR ds:[rsi]
   1400175cd:	jo     0x140017648
   1400175cf:	push   rdi
   1400175d0:	push   rsp
   1400175d1:	outs   dx,DWORD PTR ds:[rsi]
   1400175d2:	push   rbp
   1400175d3:	push   rsp
   1400175d4:	rex.RX cmp BYTE PTR [rbp+0x6e],r10b
   1400175d8:	gs jae 0x14001763e
   1400175db:	(bad)  
   1400175dc:	jo     0x140017643
   1400175de:	fs rex push rbx
   1400175e1:	push   rsp
   1400175e2:	push   rdx
   1400175e3:	rex.B
   1400175e4:	rex
   1400175e5:	rex push rcx
   1400175e7:	rex.RB
   1400175e8:	rex.B
   1400175e9:	rex.B
   1400175ea:	rex.WX
   1400175eb:	rex.B
   1400175ec:	rex.RB
   1400175ed:	rex.X push rsi
   1400175ef:	push   rbx
   1400175f0:	push   rsp
   1400175f1:	push   rdx
   1400175f2:	push   rbp
   1400175f3:	rex
   1400175f4:	rex
   1400175f5:	rex pop rdx
   1400175f7:	add    BYTE PTR [rdi],bh
   1400175f9:	rex.XB outs dx,DWORD PTR ds:[rsi]
   1400175fb:	jo     0x140017676
   1400175fd:	push   rdi
   1400175fe:	push   rsp
   1400175ff:	outs   dx,DWORD PTR ds:[rsi]
   140017600:	push   rbp
   140017601:	push   rsp
   140017602:	rex.RX cmp BYTE PTR [rbp+0x6e],r10b
   140017606:	gs jae 0x14001766c
   140017609:	(bad)  
   14001760a:	jo     0x140017671
   14001760c:	fs rex push rbx
   14001760f:	push   rsp
   140017610:	push   rdx
   140017611:	rex.B
   140017612:	rex
   140017613:	rex push rcx
   140017615:	rex.RB
   140017616:	rex.B
   140017617:	rex.B
   140017618:	rex.WX push rax
   14001761a:	rex.RB
   14001761b:	rex.X
   14001761c:	rex.RXB
   14001761d:	rex pop rdx
   14001761f:	add    BYTE PTR [rdi],bh
   140017621:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140017623:	jo     0x14001769e
   140017625:	push   rdi
   140017626:	push   rsp
   140017627:	outs   dx,DWORD PTR ds:[rsi]
   140017628:	push   rbp
   140017629:	push   rsp
   14001762a:	rex.RX cmp BYTE PTR [rbp+0x6e],r10b
   14001762e:	gs jae 0x140017694
   140017631:	(bad)  
   140017632:	jo     0x140017699
   140017634:	fs rex push rbx
   140017637:	push   rsp
   140017638:	push   rdx
   140017639:	rex.B
   14001763a:	rex
   14001763b:	rex push rcx
   14001763d:	rex.RB
   14001763e:	rex.B
   14001763f:	rex.B
   140017640:	rex.WX push rax
   140017642:	rex.RB
   140017643:	rex.X
   140017644:	rex.RXB
   140017645:	rex.WXB
   140017646:	rex pop rdx
   140017648:	add    BYTE PTR [rdi],bh
   14001764a:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14001764c:	jo     0x1400176c7
   14001764e:	push   rdi
   14001764f:	push   rsp
   140017650:	jb     0x1400176c7
   140017652:	outs   dx,BYTE PTR ds:[rsi]
   140017653:	movsxd esp,DWORD PTR [rcx+0x74]
   140017656:	gs rex push rbx
   140017659:	push   rsp
   14001765a:	push   rdx
   14001765b:	rex.B
   14001765c:	rex
   14001765d:	rex push rcx
   14001765f:	rex.RB
   140017660:	rex.B
   140017661:	rex.B
   140017662:	rex.WX push rax
   140017664:	rex.RB
   140017665:	rex.X
   140017666:	rex.RXB
   140017667:	rex pop rdx
   140017669:	add    BYTE PTR [rdi],bh
   14001766b:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14001766d:	jo     0x1400176e8
   14001766f:	push   rdi
   140017670:	push   rsp
   140017671:	jb     0x1400176e8
   140017673:	outs   dx,BYTE PTR ds:[rsi]
   140017674:	movsxd esp,DWORD PTR [rcx+0x74]
   140017677:	gs rex push rbx
   14001767a:	push   rsp
   14001767b:	push   rdx
   14001767c:	rex.B
   14001767d:	rex
   14001767e:	rex push rcx
   140017680:	rex.RB
   140017681:	rex.B
   140017682:	rex.B
   140017683:	rex.WX push rax
   140017685:	rex.RB
   140017686:	rex.X
   140017687:	rex.RXB
   140017688:	rex.WXB
   140017689:	rex pop rdx
   14001768b:	add    BYTE PTR [rdi],bh
   14001768d:	rex.R
   14001768e:	gs ins BYTE PTR es:[rdi],dx
   140017690:	gs je  0x1400176f8
   140017693:	rex.R (bad) 
   140017695:	je     0x1400176f8
   140017697:	rex
   140017698:	rex.WRB
   140017699:	rex.X
   14001769a:	rex
   14001769b:	rex push rcx
   14001769d:	rex.RB
   14001769e:	rex.B
   14001769f:	rex.B
   1400176a0:	rex.W push rax
   1400176a2:	rex.RB
   1400176a3:	rex.X
   1400176a4:	rex.RXB
   1400176a5:	rex.WXB
   1400176a6:	rex.WXB
   1400176a7:	rex.WXB
   1400176a8:	rex pop rdx
   1400176aa:	add    BYTE PTR [rdi],bh
   1400176ac:	rex.R
   1400176ad:	gs ins BYTE PTR es:[rdi],dx
   1400176af:	gs je  0x140017717
   1400176b2:	rex.WRXB (bad) 
   1400176b4:	push   0x65
   1400176b6:	movsxd esi,DWORD PTR [rax+rax*2+0x4d]
   1400176ba:	rex.X
   1400176bb:	rex
   1400176bc:	rex push rcx
   1400176be:	rex.RB
   1400176bf:	rex.B
   1400176c0:	rex.B
   1400176c1:	rex.W push rax
   1400176c3:	rex.RB
   1400176c4:	rex.X
   1400176c5:	rex.RXB
   1400176c6:	rex pop rdx
   1400176c8:	add    BYTE PTR [rdi],bh
   1400176ca:	rex.RB outs dx,BYTE PTR ds:[rsi]
   1400176cc:	jne    0x14001773b
   1400176ce:	rex.WRXB (bad) 
   1400176d0:	push   0x65
   1400176d2:	movsxd esi,DWORD PTR [rbx+rsi*2+0x40]
   1400176d6:	rex.WRB
   1400176d7:	rex.X
   1400176d8:	rex
   1400176d9:	rex push rcx
   1400176db:	rex.RB
   1400176dc:	rex.B
   1400176dd:	rex.B
   1400176de:	rex.W push rax
   1400176e0:	rex.RB
   1400176e1:	rex.X
   1400176e2:	rex.RXB push r8
   1400176e4:	rex.RB
   1400176e5:	rex.B
   1400176e6:	rex.RXB
   1400176e7:	rex.WXB
   1400176e8:	rex pop rdx
   1400176ea:	add    BYTE PTR [rdi],bh
   1400176ec:	rex.RB jno 0x140017764
   1400176ef:	(bad)  
   1400176f0:	ins    BYTE PTR es:[rdi],dx
   1400176f1:	jae    0x140017733
   1400176f3:	rex.WRB push r13
   1400176f5:	rex.WR push rsp
   1400176f7:	rex.WB push r11
   1400176f9:	pop    rdx
   1400176fa:	rex
   1400176fb:	rex push rcx
   1400176fd:	rex.RB
   1400176fe:	rex.B
   1400176ff:	rex.B
   140017700:	rex.W push rax
   140017702:	rex.RB
   140017703:	push   r14
   140017705:	xor    DWORD PTR [rax+0x40],eax
   140017708:	pop    rdx
   140017709:	add    BYTE PTR [rdi],bh
   14001770b:	rex.RB jno 0x140017783
   14001770e:	(bad)  
   14001770f:	ins    BYTE PTR es:[rdi],dx
   140017710:	jae    0x140017752
   140017712:	push   rbx
   140017713:	push   rsp
   140017714:	push   rdx
   140017715:	rex.B
   140017716:	rex
   140017717:	rex push rcx
   140017719:	rex.RB
   14001771a:	rex.X
   14001771b:	pop    r15
   14001771d:	rex.WRX
   14001771e:	rex.B
   14001771f:	rex.RB
   140017720:	rex.X push rsi
   140017722:	xor    DWORD PTR [rax+0x40],eax
   140017725:	pop    rdx
   140017726:	add    BYTE PTR [rdi],bh
   140017728:	rex.RB jno 0x1400177a0
   14001772b:	(bad)  
   14001772c:	ins    BYTE PTR es:[rdi],dx
   14001772d:	jae    0x14001776f
   14001772f:	push   rbx
   140017730:	push   rsp
   140017731:	push   rdx
   140017732:	rex.B
   140017733:	rex
   140017734:	rex push rcx
   140017736:	rex.RB
   140017737:	rex.X
   140017738:	pop    r15
   14001773a:	rex.WRX push rax
   14001773c:	rex.RB
   14001773d:	rex.X
   14001773e:	rex.R
   14001773f:	rex pop rdx
   140017741:	add    BYTE PTR [rdi],bh
   140017743:	rex.RB jno 0x1400177bb
   140017746:	(bad)  
   140017747:	ins    BYTE PTR es:[rdi],dx
   140017748:	jae    0x14001778a
   14001774a:	push   rbx
   14001774b:	push   rsp
   14001774c:	push   rdx
   14001774d:	push   rbp
   14001774e:	rex
   14001774f:	rex push rcx
   140017751:	rex.RB
   140017752:	rex.X
   140017753:	pop    r15
   140017755:	rex.WRX
   140017756:	rex.B
   140017757:	rex.RB
   140017758:	rex.X push rsi
   14001775a:	xor    DWORD PTR [rax+0x40],eax
   14001775d:	pop    rdx
   14001775e:	add    BYTE PTR [rdi],bh
   140017760:	rex.RB jno 0x1400177d8
   140017763:	(bad)  
   140017764:	ins    BYTE PTR es:[rdi],dx
   140017765:	jae    0x1400177a7
   140017767:	push   rbx
   140017768:	push   rsp
   140017769:	push   rdx
   14001776a:	push   rbp
   14001776b:	rex
   14001776c:	rex push rcx
   14001776e:	rex.RB
   14001776f:	rex.X
   140017770:	pop    r15
   140017772:	rex.WRX push rax
   140017774:	rex.RB
   140017775:	rex.X
   140017776:	rex.RXB
   140017777:	rex pop rdx
   140017779:	add    BYTE PTR [rdi],bh
   14001777b:	rex.RB jno 0x1400177f3
   14001777e:	(bad)  
   14001777f:	ins    BYTE PTR es:[rdi],dx
   140017780:	jae    0x1400177d0
   140017782:	outs   dx,DWORD PTR ds:[rsi]
   140017783:	rex.XB (bad) 
   140017785:	jae    0x1400177ec
   140017787:	rex push rbx
   140017789:	push   rsp
   14001778a:	push   rdx
   14001778b:	rex.B
   14001778c:	rex
   14001778d:	rex push rcx
   14001778f:	rex.RB
   140017790:	rex.X
   140017791:	pop    r15
   140017793:	rex.WRX
   140017794:	rex.B
   140017795:	rex.RB
   140017796:	rex.X push rsi
   140017798:	xor    DWORD PTR [rax+0x40],eax
   14001779b:	pop    rdx
   14001779c:	add    BYTE PTR [rdi],bh
   14001779e:	rex.RB jno 0x140017816
   1400177a1:	(bad)  
   1400177a2:	ins    BYTE PTR es:[rdi],dx
   1400177a3:	jae    0x1400177f3
   1400177a5:	outs   dx,DWORD PTR ds:[rsi]
   1400177a6:	rex.XB (bad) 
   1400177a8:	jae    0x14001780f
   1400177aa:	rex push rbx
   1400177ac:	push   rsp
   1400177ad:	push   rdx
   1400177ae:	rex.B
   1400177af:	rex
   1400177b0:	rex push rcx
   1400177b2:	rex.RB
   1400177b3:	rex.X
   1400177b4:	pop    r15
   1400177b6:	rex.WRX push rax
   1400177b8:	rex.RB
   1400177b9:	rex.X
   1400177ba:	rex.R
   1400177bb:	rex pop rdx
   1400177bd:	add    BYTE PTR [rdi],bh
   1400177bf:	rex.RB jno 0x140017837
   1400177c2:	(bad)  
   1400177c3:	ins    BYTE PTR es:[rdi],dx
   1400177c4:	jae    0x140017814
   1400177c6:	outs   dx,DWORD PTR ds:[rsi]
   1400177c7:	rex.XB (bad) 
   1400177c9:	jae    0x140017830
   1400177cb:	rex push rbx
   1400177cd:	push   rsp
   1400177ce:	push   rdx
   1400177cf:	push   rbp
   1400177d0:	rex
   1400177d1:	rex push rcx
   1400177d3:	rex.RB
   1400177d4:	rex.X
   1400177d5:	pop    r15
   1400177d7:	rex.WRX
   1400177d8:	rex.B
   1400177d9:	rex.RB
   1400177da:	rex.X push rsi
   1400177dc:	xor    DWORD PTR [rax+0x40],eax
   1400177df:	pop    rdx
   1400177e0:	add    BYTE PTR [rdi],bh
   1400177e2:	rex.RB jno 0x14001785a
   1400177e5:	(bad)  
   1400177e6:	ins    BYTE PTR es:[rdi],dx
   1400177e7:	jae    0x140017837
   1400177e9:	outs   dx,DWORD PTR ds:[rsi]
   1400177ea:	rex.XB (bad) 
   1400177ec:	jae    0x140017853
   1400177ee:	rex push rbx
   1400177f0:	push   rsp
   1400177f1:	push   rdx
   1400177f2:	push   rbp
   1400177f3:	rex
   1400177f4:	rex push rcx
   1400177f6:	rex.RB
   1400177f7:	rex.X
   1400177f8:	pop    r15
   1400177fa:	rex.WRX push rax
   1400177fc:	rex.RB
   1400177fd:	rex.X
   1400177fe:	rex.RXB
   1400177ff:	rex pop rdx
   140017801:	add    BYTE PTR [rdi],bh
   140017803:	rex.RB jae 0x140017869
   140017806:	(bad)  
   140017807:	jo     0x14001786e
   140017809:	rex push rbx
   14001780b:	push   rsp
   14001780c:	push   rdx
   14001780d:	rex.B
   14001780e:	rex
   14001780f:	rex push rcx
   140017811:	rex.RB
   140017812:	rex.B
   140017813:	rex.B
   140017814:	rex.WX pop rdi
   140017816:	rex.WRX xor BYTE PTR [rax+0x5a],r8b
   14001781a:	add    BYTE PTR [rdi],bh
   14001781c:	rex.RB jae 0x140017882
   14001781f:	(bad)  
   140017820:	jo     0x140017887
   140017822:	rex push rbx
   140017824:	push   rsp
   140017825:	push   rdx
   140017826:	push   rbp
   140017827:	rex
   140017828:	rex push rcx
   14001782a:	rex.RB
   14001782b:	rex.B
   14001782c:	rex.B
   14001782d:	rex.WX pop rax
   14001782f:	pop    rdx
   140017830:	add    BYTE PTR [rdi],bh
   140017832:	rex.RB js 0x1400178a5
   140017835:	(bad)  
   140017836:	outs   dx,BYTE PTR ds:[rsi]
   140017837:	rex.RB outs dx,BYTE PTR fs:[rsi]
   14001783a:	jbe    0x1400178a5
   14001783c:	jb     0x1400178ad
   14001783e:	outs   dx,BYTE PTR ds:[rsi]
   14001783f:	ins    DWORD PTR es:[rdi],dx
   140017840:	outs   dx,BYTE PTR gs:[rsi]
   140017842:	je     0x14001789a
   140017844:	(bad)  
   140017845:	jb     0x1400178b0
   140017847:	(bad)  
   140017848:	(bad)  
   140017849:	ins    BYTE PTR es:[rdi],dx
   14001784a:	gs jae 0x14001788d
   14001784d:	push   rbx
   14001784e:	push   rsp
   14001784f:	push   rdx
   140017850:	push   rbp
   140017851:	rex
   140017852:	rex push rbx
   140017854:	rex.B
   140017855:	rex.WX push rax
   140017857:	rex.RB
   140017858:	rex.X
   140017859:	rex.RXB push r8
   14001785b:	rex.RB
   14001785c:	push   r14
   14001785e:	xor    DWORD PTR [rax+0x40],eax
   140017861:	pop    rdx
   140017862:	add    BYTE PTR [rdi],bh
   140017864:	rex.RX (bad) 
   140017866:	jae    0x1400178dc
   140017868:	rex.B jo 0x1400178db
   14001786b:	outs   dx,BYTE PTR gs:[rsi]
   14001786d:	fs rex
   14001786f:	rex.WRB push r13
   140017871:	rex.WR push rsp
   140017873:	rex.WB push r11
   140017875:	pop    rdx
   140017876:	rex
   140017877:	rex push rcx
   140017879:	rex.RB
   14001787a:	rex.B
   14001787b:	rex.B
   14001787c:	rex.W
   14001787d:	rex.B
   14001787e:	rex.RB
   14001787f:	push   r14
   140017881:	push   rbx
   140017882:	push   rsp
   140017883:	push   rdx
   140017884:	push   rbp
   140017885:	rex
   140017886:	rex
   140017887:	rex pop rdx
   140017889:	add    BYTE PTR [rdi],bh
   14001788b:	rex.RX (bad) 
   14001788d:	jae    0x140017903
   14001788f:	rex.B jo 0x140017902
   140017892:	outs   dx,BYTE PTR gs:[rsi]
   140017894:	fs rex
   140017896:	rex.WRB push r13
   140017898:	rex.WR push rsp
   14001789a:	rex.WB push r11
   14001789c:	pop    rdx
   14001789d:	rex
   14001789e:	rex push rcx
   1400178a0:	rex.RB
   1400178a1:	rex.B
   1400178a2:	rex.B
   1400178a3:	rex.W push rax
   1400178a5:	rex.RB
   1400178a6:	rex.X
   1400178a7:	rex.RXB
   1400178a8:	rex pop rdx
   1400178aa:	add    BYTE PTR [rdi],bh
   1400178ac:	rex.RX (bad) 
   1400178ae:	jae    0x140017924
   1400178b0:	rex.B jo 0x140017923
   1400178b3:	outs   dx,BYTE PTR gs:[rsi]
   1400178b5:	fs rex
   1400178b7:	rex.WRB push r13
   1400178b9:	rex.WR push rsp
   1400178bb:	rex.WB push r11
   1400178bd:	pop    rdx
   1400178be:	rex
   1400178bf:	rex push rcx
   1400178c1:	rex.RB
   1400178c2:	rex.B
   1400178c3:	rex.B
   1400178c4:	rex.W push rax
   1400178c6:	rex.RB
   1400178c7:	rex.X
   1400178c8:	rex.RXB
   1400178c9:	rex.WXB
   1400178ca:	rex pop rdx
   1400178cc:	add    BYTE PTR [rdi],bh
   1400178ce:	rex.RX (bad) 
   1400178d0:	jae    0x140017946
   1400178d2:	rex.B jne 0x14001794d
   1400178d5:	rex.B jo 0x140017948
   1400178d8:	outs   dx,BYTE PTR gs:[rsi]
   1400178da:	fs rex
   1400178dc:	rex.WRB push r13
   1400178de:	rex.WR push rsp
   1400178e0:	rex.WB push r11
   1400178e2:	pop    rdx
   1400178e3:	rex
   1400178e4:	rex
   1400178e5:	rex.B
   1400178e6:	rex.RB
   1400178e7:	rex.B
   1400178e8:	rex.B
   1400178e9:	rex.W push rax
   1400178eb:	rex.RB
   1400178ec:	rex.X
   1400178ed:	rex.RXB
   1400178ee:	rex.WB
   1400178ef:	rex.W
   1400178f0:	rex pop rdx
   1400178f2:	add    BYTE PTR [rdi],bh
   1400178f4:	rex.RX (bad) 
   1400178f6:	jae    0x14001796c
   1400178f8:	rex.XB outs dx,DWORD PTR ds:[rsi]
   1400178fa:	jo     0x140017975
   1400178fc:	rex
   1400178fd:	rex.WRB push r13
   1400178ff:	rex.WR push rsp
   140017901:	rex.WB push r11
   140017903:	pop    rdx
   140017904:	rex
   140017905:	rex push rcx
   140017907:	rex.RB
   140017908:	rex.B
   140017909:	rex.B
   14001790a:	rex.W
   14001790b:	rex.B
   14001790c:	rex.RB
   14001790d:	rex.X push rsi
   14001790f:	xor    DWORD PTR [rax+0x40],eax
   140017912:	pop    rdx
   140017913:	add    BYTE PTR [rdi],bh
   140017915:	rex.RX (bad) 
   140017917:	jae    0x14001798d
   140017919:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14001791b:	jo     0x140017996
   14001791d:	rex
   14001791e:	rex.WRB push r13
   140017920:	rex.WR push rsp
   140017922:	rex.WB push r11
   140017924:	pop    rdx
   140017925:	rex
   140017926:	rex push rcx
   140017928:	rex.RB
   140017929:	rex.B
   14001792a:	rex.B
   14001792b:	rex.W push rax
   14001792d:	rex.RB
   14001792e:	rex.X
   14001792f:	rex.RXB
   140017930:	rex.WXB
   140017931:	rex pop rdx
   140017933:	add    BYTE PTR [rdi],bh
   140017935:	rex.RX imul r13d,DWORD PTR [rsi+0x64],0x54666552
   14001793d:	jb     0x1400179a0
   14001793f:	movsxd esp,DWORD PTR [rbp+0x48]
   140017942:	gs (bad) 
   140017944:	rex.RB outs dx,BYTE PTR fs:[rsi]
   140017947:	je     0x1400179bb
   140017949:	jns    0x14001798b
   14001794b:	rex.X
   14001794c:	rex.WB
   14001794d:	rex.RXB pop r15
   14001794f:	push   rdx
   140017950:	rex.RB
   140017951:	rex.RX pop rdi
   140017953:	push   rsp
   140017954:	push   rdx
   140017955:	rex.B
   140017956:	rex.XB
   140017957:	rex.RB
   140017958:	rex
   140017959:	rex push rbx
   14001795b:	push   r8
   14001795d:	rex.RB
   14001795e:	push   r13
   140017960:	pop    rdi
   140017961:	push   rdx
   140017962:	rex.RB
   140017963:	rex.RX pop rdi
   140017965:	push   rsp
   140017966:	push   rdx
   140017967:	rex.B
   140017968:	rex.XB
   140017969:	rex.RB pop r15
   14001796b:	rex.W
   14001796c:	rex.RB
   14001796d:	rex.B
   14001796e:	rex.R pop rdi
   140017970:	rex.RB
   140017971:	rex.WRX push rsp
   140017973:	push   rdx
   140017974:	pop    rcx
   140017975:	rex
   140017976:	rex push rax
   140017978:	rex.RB
   140017979:	push   r14
   14001797b:	xor    DWORD PTR [rax+0x50],eax
   14001797e:	rex.RB
   14001797f:	pop    r8
   140017981:	rex pop rdx
   140017983:	add    BYTE PTR [rdi],bh
   140017985:	rex.RX imul r13d,DWORD PTR [rsi+0x64],0x69727453
   14001798d:	outs   dx,BYTE PTR ds:[rsi]
   14001798e:	addr32 rex
   140017990:	rex.WRB push r13
   140017992:	rex.WR push rsp
   140017994:	rex.WB push r11
   140017996:	pop    rdx
   140017997:	rex
   140017998:	rex push rcx
   14001799a:	rex.RB
   14001799b:	rex.B
   14001799c:	rex.B
   14001799d:	rex.W
   14001799e:	rex.B
   14001799f:	rex.RB
   1400179a0:	push   r14
   1400179a2:	push   rbx
   1400179a3:	push   rsp
   1400179a4:	push   rdx
   1400179a5:	push   rbp
   1400179a6:	rex
   1400179a7:	rex
   1400179a8:	rex pop rdx
   1400179aa:	add    BYTE PTR [rdi],bh
   1400179ac:	rex.RX imul r13d,DWORD PTR [rsi+0x64],0x69727453
   1400179b4:	outs   dx,BYTE PTR ds:[rsi]
   1400179b5:	addr32 rex
   1400179b7:	rex.WRB push r13
   1400179b9:	rex.WR push rsp
   1400179bb:	rex.WB push r11
   1400179bd:	pop    rdx
   1400179be:	rex
   1400179bf:	rex push rcx
   1400179c1:	rex.RB
   1400179c2:	rex.B
   1400179c3:	rex.B
   1400179c4:	rex.W push rax
   1400179c6:	rex.RB
   1400179c7:	rex.X
   1400179c8:	rex.RXB
   1400179c9:	rex pop rdx
   1400179cb:	add    BYTE PTR [rdi],bh
   1400179cd:	rex.RX imul r13d,DWORD PTR [rsi+0x64],0x69727453
   1400179d5:	outs   dx,BYTE PTR ds:[rsi]
   1400179d6:	rex.WRX outs dx,DWORD PTR ds:[esi]
   1400179d9:	rex.XB (bad) 
   1400179db:	jae    0x140017a42
   1400179dd:	rex
   1400179de:	rex.WRB push r13
   1400179e0:	rex.WR push rsp
   1400179e2:	rex.WB push r11
   1400179e4:	pop    rdx
   1400179e5:	rex
   1400179e6:	rex push rcx
   1400179e8:	rex.RB
   1400179e9:	rex.B
   1400179ea:	rex.B
   1400179eb:	rex.W
   1400179ec:	rex.B
   1400179ed:	rex.RB
   1400179ee:	push   r14
   1400179f0:	push   rbx
   1400179f1:	push   rsp
   1400179f2:	push   rdx
   1400179f3:	push   rbp
   1400179f4:	rex
   1400179f5:	rex
   1400179f6:	rex pop rdx
   1400179f8:	add    BYTE PTR [rdi],bh
   1400179fa:	rex.RX imul r13d,DWORD PTR [rsi+0x64],0x69727453
   140017a02:	outs   dx,BYTE PTR ds:[rsi]
   140017a03:	rex.WRX outs dx,DWORD PTR ds:[esi]
   140017a06:	rex.XB (bad) 
   140017a08:	jae    0x140017a6f
   140017a0a:	rex
   140017a0b:	rex.WRB push r13
   140017a0d:	rex.WR push rsp
   140017a0f:	rex.WB push r11
   140017a11:	pop    rdx
   140017a12:	rex
   140017a13:	rex push rcx
   140017a15:	rex.RB
   140017a16:	rex.B
   140017a17:	rex.B
   140017a18:	rex.W push rax
   140017a1a:	rex.RB
   140017a1b:	rex.X
   140017a1c:	rex.RXB
   140017a1d:	rex pop rdx
   140017a1f:	add    BYTE PTR [rdi],bh
   140017a21:	rex.RX imul r14d,DWORD PTR [rdx+0x73],0x554d4074
   140017a29:	rex.WR push rsp
   140017a2b:	rex.WB push r11
   140017a2d:	pop    rdx
   140017a2e:	rex
   140017a2f:	rex push rcx
   140017a31:	rex.RB
   140017a32:	rex.X
   140017a33:	push   r8
   140017a35:	rex.RB
   140017a36:	rex.X
   140017a37:	rex.RXB pop r8
   140017a39:	pop    rdx
   140017a3a:	add    BYTE PTR [rdi],bh
   140017a3c:	rex.RX outs dx,DWORD PTR ds:[rsi]
   140017a3e:	jb     0x140017aad
   140017a40:	(bad)  
   140017a41:	je     0x140017a96
   140017a43:	je     0x140017ab7
   140017a45:	imul   ebp,DWORD PTR [rsi+0x67],0x52545340
   140017a4c:	rex.B
   140017a4d:	rex
   140017a4e:	rex push rcx
   140017a50:	rex.RB
   140017a51:	rex.B
   140017a52:	rex.B
   140017a53:	rex.WX
   140017a54:	rex.WXB push r9
   140017a56:	rex.RB
   140017a57:	push   r8
   140017a59:	rex.RB
   140017a5a:	rex.X
   140017a5b:	rex.R push rax
   140017a5d:	rex.RB
   140017a5e:	rex.X
   140017a5f:	rex.R
   140017a60:	rex.WXB
   140017a61:	rex pop rdx
   140017a63:	add    BYTE PTR [rdi],bh
   140017a65:	rex.RX jb 0x140017acd
   140017a68:	gs rex.WRB
   140017a6a:	gs ins DWORD PTR es:[rdi],dx
   140017a6c:	outs   dx,DWORD PTR ds:[rsi]
   140017a6d:	jb     0x140017ae8
   140017a6f:	rex
   140017a70:	rex.X push rbp
   140017a72:	rex.RX
   140017a73:	rex.RX
   140017a74:	rex.RB push r10
   140017a76:	rex
   140017a77:	rex push rcx
   140017a79:	rex.RB
   140017a7a:	rex.B
   140017a7b:	pop    r8
   140017a7d:	pop    rax
   140017a7e:	pop    rdx
   140017a7f:	add    BYTE PTR [rdi],bh
   140017a81:	rex.RX jb 0x140017ae9
   140017a84:	gs rex.WRB
   140017a86:	gs ins DWORD PTR es:[rdi],dx
   140017a88:	outs   dx,DWORD PTR ds:[rsi]
   140017a89:	jb     0x140017b04
   140017a8b:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140017a8d:	je     0x140017af4
   140017a8f:	jb     0x140017aff
   140017a91:	(bad)  
   140017a92:	ins    BYTE PTR es:[rdi],dx
   140017a93:	rex
   140017a94:	rex.X push rbp
   140017a96:	rex.RX
   140017a97:	rex.RX
   140017a98:	rex.RB push r10
   140017a9a:	rex
   140017a9b:	rex
   140017a9c:	rex.B
   140017a9d:	rex.RB
   140017a9e:	rex.B
   140017a9f:	pop    r8
   140017aa1:	pop    rax
   140017aa2:	pop    rdx
   140017aa3:	add    BYTE PTR [rdi],bh
   140017aa5:	rex.RXB
   140017aa6:	gs je  0x140017aea
   140017aa9:	ins    BYTE PTR es:[rdi],dx
   140017aaa:	ins    BYTE PTR es:[rdi],dx
   140017aab:	rex
   140017aac:	rex.WRB
   140017aad:	rex.X
   140017aae:	rex
   140017aaf:	rex push rcx
   140017ab1:	rex.RB
   140017ab2:	rex.B
   140017ab3:	rex.B
   140017ab4:	rex.W push rax
   140017ab6:	rex.RB
   140017ab7:	rex.X
   140017ab8:	rex.RXB
   140017ab9:	rex.WXB
   140017aba:	rex.WXB push r8
   140017abc:	rex.RB
   140017abd:	push   r14
   140017abf:	rex.X push rbp
   140017ac1:	rex.RX
   140017ac2:	rex.RX
   140017ac3:	rex.RB push r10
   140017ac5:	rex
   140017ac6:	rex push rax
   140017ac8:	rex.RB
   140017ac9:	rex.B
   140017aca:	rex.WXB xor al,BYTE PTR [r8+0x5a]
   140017ace:	add    BYTE PTR [rdi],bh
   140017ad0:	rex.RXB
   140017ad1:	gs je  0x140017b16
   140017ad4:	jne    0x140017b3c
   140017ad6:	data16 gs jb 0x140017b1a
   140017ada:	rex.WRB
   140017adb:	rex.X
   140017adc:	rex
   140017add:	rex push rcx
   140017adf:	rex.RB
   140017ae0:	rex.B
   140017ae1:	rex.B
   140017ae2:	rex.W push rax
   140017ae4:	rex.RB
   140017ae5:	rex.X
   140017ae6:	rex.RXB
   140017ae7:	rex.WXB
   140017ae8:	rex.WXB push r8
   140017aea:	rex.RB
   140017aeb:	push   r14
   140017aed:	rex.X push rbp
   140017aef:	rex.RX
   140017af0:	rex.RX
   140017af1:	rex.RB push r10
   140017af3:	rex
   140017af4:	rex push rax
   140017af6:	rex.RB
   140017af7:	rex.B
   140017af8:	rex.WXB
   140017af9:	rex.WXB
   140017afa:	rex pop rdx
   140017afc:	add    BYTE PTR [rdi],bh
   140017afe:	rex.RXB
   140017aff:	gs je  0x140017b45
   140017b02:	push   0x50646c69
   140017b07:	(bad)  
   140017b08:	je     0x140017b72
   140017b0a:	jae    0x140017b4c
   140017b0c:	rex.WRB
   140017b0d:	rex.X
   140017b0e:	rex
   140017b0f:	rex push rcx
   140017b11:	rex.RB
   140017b12:	rex.B
   140017b13:	rex.B
   140017b14:	rex.W push rax
   140017b16:	rex.RB
   140017b17:	rex.X
   140017b18:	rex.RXB push r8
   140017b1a:	rex.RB
   140017b1b:	push   r14
   140017b1d:	rex.X push rbp
   140017b1f:	rex.RX
   140017b20:	rex.RX
   140017b21:	rex.RB push r10
   140017b23:	rex
   140017b24:	rex
   140017b25:	rex pop rdx
   140017b27:	add    BYTE PTR [rdi],bh
   140017b29:	rex.RXB
   140017b2a:	gs je  0x140017b71
   140017b2d:	(bad)  
   140017b2e:	je     0x140017b91
   140017b30:	rex
   140017b31:	rex.WRB
   140017b32:	rex.X
   140017b33:	rex
   140017b34:	rex push rcx
   140017b36:	rex.RB
   140017b37:	rex.B
   140017b38:	rex.B
   140017b39:	rex.W push rax
   140017b3b:	rex.RB
   140017b3c:	rex.X
   140017b3d:	rex.RXB
   140017b3e:	rex.WXB
   140017b3f:	rex.WXB
   140017b40:	rex.WXB push r8
   140017b42:	rex.RB
   140017b43:	pop    r8
   140017b45:	push   rax
   140017b46:	rex.RB
   140017b47:	rex.B
   140017b48:	rex.WXB
   140017b49:	rex.WXB
   140017b4a:	rex pop rdx
   140017b4c:	add    BYTE PTR [rdi],bh
   140017b4e:	rex.RXB
   140017b4f:	gs je  0x140017b96
   140017b52:	(bad)  
   140017b53:	je     0x140017bb6
   140017b55:	push   rax
   140017b56:	(bad)  
   140017b57:	je     0x140017bc1
   140017b59:	jae    0x140017b9b
   140017b5b:	rex.WRB
   140017b5c:	rex.X
   140017b5d:	rex
   140017b5e:	rex push rcx
   140017b60:	rex.RB
   140017b61:	rex.B
   140017b62:	rex.B
   140017b63:	rex.W push rax
   140017b65:	rex.RB
   140017b66:	rex.X
   140017b67:	rex.RXB
   140017b68:	rex.WXB
   140017b69:	rex.WXB push r8
   140017b6b:	rex.RB
   140017b6c:	push   r14
   140017b6e:	rex.X push rbp
   140017b70:	rex.RX
   140017b71:	rex.RX
   140017b72:	rex.RB push r10
   140017b74:	rex
   140017b75:	rex
   140017b76:	rex pop rdx
   140017b78:	add    BYTE PTR [rdi],bh
   140017b7a:	rex.RXB
   140017b7b:	gs je  0x140017bc2
   140017b7e:	(bad)  
   140017b7f:	je     0x140017be2
   140017b81:	push   rbx
   140017b82:	gs je  0x140017bd3
   140017b85:	jne    0x140017bf4
   140017b87:	(bad)  
   140017b88:	gs jb  0x140017bcb
   140017b8b:	rex.WRB
   140017b8c:	rex.X
   140017b8d:	rex
   140017b8e:	rex push rcx
   140017b90:	rex.RB
   140017b91:	rex.B
   140017b92:	rex.B
   140017b93:	rex.W push rax
   140017b95:	rex.RB
   140017b96:	rex.X
   140017b97:	rex.RXB push r8
   140017b99:	rex.RB
   140017b9a:	rex.B
   140017b9b:	rex.WXB
   140017b9c:	rex pop rdx
   140017b9e:	add    BYTE PTR [rdi],bh
   140017ba0:	rex.RXB
   140017ba1:	gs je  0x140017be8
   140017ba4:	gs data16 (bad) 
   140017ba7:	jne    0x140017c15
   140017ba9:	je     0x140017bfe
   140017bab:	jo     0x140017c16
   140017bad:	outs   dx,BYTE PTR ds:[rsi]
   140017bae:	rex.B
   140017baf:	fs push 0x75
   140017bb2:	jae    0x140017c28
   140017bb4:	ins    DWORD PTR es:[rdi],dx
   140017bb5:	outs   dx,BYTE PTR gs:[rsi]
   140017bb7:	je     0x140017bff
   140017bb9:	(bad)  
   140017bba:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   140017bbe:	rex
   140017bbf:	rex.XB
   140017bc0:	rex.XB jb 0x140017c2c
   140017bc3:	je     0x140017c18
   140017bc5:	movsxd eax,DWORD PTR gs:[rax+0x40]
   140017bc9:	push   rbx
   140017bca:	rex.B
   140017bcb:	rex.WRX pop rax
   140017bcd:	pop    rdx
   140017bce:	add    BYTE PTR [rdi],bh
   140017bd0:	rex.RXB
   140017bd1:	gs je  0x140017c18
   140017bd4:	gs data16 (bad) 
   140017bd7:	jne    0x140017c45
   140017bd9:	je     0x140017c2e
   140017bdb:	jo     0x140017c46
   140017bdd:	outs   dx,BYTE PTR ds:[rsi]
   140017bde:	rex.B
   140017bdf:	fs push 0x75
   140017be2:	jae    0x140017c58
   140017be4:	ins    DWORD PTR es:[rdi],dx
   140017be5:	outs   dx,BYTE PTR gs:[rsi]
   140017be7:	je     0x140017c2f
   140017be9:	(bad)  
   140017bea:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   140017bee:	rex
   140017bef:	rex.XB
   140017bf0:	rex.RX (bad) 
   140017bf2:	imul   esp,DWORD PTR [rbp+0x4c],0x6f
   140017bf6:	movsxd ebp,DWORD PTR [rbx+0x40]
   140017bf9:	rex push rbx
   140017bfb:	rex.B
   140017bfc:	rex.WRX pop rax
   140017bfe:	pop    rdx
   140017bff:	add    BYTE PTR [rdi],bh
   140017c01:	rex.RXB
   140017c02:	gs je  0x140017c49
   140017c05:	gs data16 (bad) 
   140017c08:	jne    0x140017c76
   140017c0a:	je     0x140017c5f
   140017c0c:	jo     0x140017c77
   140017c0e:	outs   dx,BYTE PTR ds:[rsi]
   140017c0f:	rex.B
   140017c10:	fs push 0x75
   140017c13:	jae    0x140017c89
   140017c15:	ins    DWORD PTR es:[rdi],dx
   140017c16:	outs   dx,BYTE PTR gs:[rsi]
   140017c18:	je     0x140017c60
   140017c1a:	(bad)  
   140017c1b:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   140017c1f:	rex
   140017c20:	rex.XB push r10
   140017c22:	gs (bad) 
   140017c24:	fs gs jb 0x140017c7f
   140017c28:	jb     0x140017c93
   140017c2a:	je     0x140017c91
   140017c2c:	jb     0x140017c7a
   140017c2e:	outs   dx,DWORD PTR ds:[rsi]
   140017c2f:	movsxd ebp,DWORD PTR [rbx+0x32]
   140017c32:	rex
   140017c33:	rex push rbx
   140017c35:	rex.B
   140017c36:	rex.WRX pop rax
   140017c38:	pop    rdx
   140017c39:	add    BYTE PTR [rdi],bh
   140017c3b:	rex.RXB
   140017c3c:	gs je  0x140017c83
   140017c3f:	gs data16 (bad) 
   140017c42:	jne    0x140017cb0
   140017c44:	je     0x140017c99
   140017c46:	jo     0x140017cb1
   140017c48:	outs   dx,BYTE PTR ds:[rsi]
   140017c49:	rex.B
   140017c4a:	fs push 0x75
   140017c4d:	jae    0x140017cc3
   140017c4f:	ins    DWORD PTR es:[rdi],dx
   140017c50:	outs   dx,BYTE PTR gs:[rsi]
   140017c52:	je     0x140017c9a
   140017c54:	(bad)  
   140017c55:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   140017c59:	rex
   140017c5a:	rex.XB push r10
   140017c5c:	gs (bad) 
   140017c5e:	fs gs jb 0x140017cb9
   140017c62:	jb     0x140017ccd
   140017c64:	je     0x140017ccb
   140017c66:	jb     0x140017cb4
   140017c68:	outs   dx,DWORD PTR ds:[rsi]
   140017c69:	movsxd ebp,DWORD PTR [rbx+0x33]
   140017c6c:	rex
   140017c6d:	rex push rbx
   140017c6f:	rex.B
   140017c70:	rex.WRX pop rax
   140017c72:	pop    rdx
   140017c73:	add    BYTE PTR [rdi],bh
   140017c75:	rex.RXB
   140017c76:	gs je  0x140017cbd
   140017c79:	gs data16 (bad) 
   140017c7c:	jne    0x140017cea
   140017c7e:	je     0x140017cd3
   140017c80:	jo     0x140017ceb
   140017c82:	outs   dx,BYTE PTR ds:[rsi]
   140017c83:	rex.B
   140017c84:	fs push 0x75
   140017c87:	jae    0x140017cfd
   140017c89:	ins    DWORD PTR es:[rdi],dx
   140017c8a:	outs   dx,BYTE PTR gs:[rsi]
   140017c8c:	je     0x140017cd4
   140017c8e:	(bad)  
   140017c8f:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   140017c93:	rex
   140017c94:	rex.XB push r10
   140017c96:	gs (bad) 
   140017c98:	fs gs jb 0x140017cf3
   140017c9c:	jb     0x140017d07
   140017c9e:	je     0x140017d05
   140017ca0:	jb     0x140017cee
   140017ca2:	outs   dx,DWORD PTR ds:[rsi]
   140017ca3:	movsxd ebp,DWORD PTR [rbx+0x40]
   140017ca6:	rex push rbx
   140017ca8:	rex.B
   140017ca9:	rex.WRX pop rax
   140017cab:	pop    rdx
   140017cac:	add    BYTE PTR [rdi],bh
   140017cae:	rex.RXB
   140017caf:	gs je  0x140017cf6
   140017cb2:	gs data16 (bad) 
   140017cb5:	jne    0x140017d23
   140017cb7:	je     0x140017d0c
   140017cb9:	jo     0x140017d24
   140017cbb:	outs   dx,BYTE PTR ds:[rsi]
   140017cbc:	rex.B
   140017cbd:	fs push 0x75
   140017cc0:	jae    0x140017d36
   140017cc2:	ins    DWORD PTR es:[rdi],dx
   140017cc3:	outs   dx,BYTE PTR gs:[rsi]
   140017cc5:	je     0x140017d0d
   140017cc7:	(bad)  
   140017cc8:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   140017ccc:	rex
   140017ccd:	rex.XB push r10
   140017ccf:	je     0x140017d3d
   140017cd1:	push   rdx
   140017cd2:	gs jae 0x140017d44
   140017cd5:	jne    0x140017d49
   140017cd7:	movsxd esp,DWORD PTR [rbp+0x40]
   140017cda:	rex push rbx
   140017cdc:	rex.B
   140017cdd:	rex.WRX pop rax
   140017cdf:	pop    rdx
   140017ce0:	add    BYTE PTR [rdi],bh
   140017ce2:	rex.RXB
   140017ce3:	gs je  0x140017d2a
   140017ce6:	gs data16 (bad) 
   140017ce9:	jne    0x140017d57
   140017ceb:	je     0x140017d40
   140017ced:	jo     0x140017d58
   140017cef:	outs   dx,BYTE PTR ds:[rsi]
   140017cf0:	rex.B
   140017cf1:	fs push 0x75
   140017cf4:	jae    0x140017d6a
   140017cf6:	ins    DWORD PTR es:[rdi],dx
   140017cf7:	outs   dx,BYTE PTR gs:[rsi]
   140017cf9:	je     0x140017d41
   140017cfb:	(bad)  
   140017cfc:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   140017d00:	rex
   140017d01:	rex.XB push r11
   140017d03:	push   0x4c657261
   140017d08:	outs   dx,DWORD PTR ds:[rsi]
   140017d09:	movsxd ebp,DWORD PTR [rbx+0x40]
   140017d0c:	rex push rbx
   140017d0e:	rex.B
   140017d0f:	rex.WRX pop rax
   140017d11:	pop    rdx
   140017d12:	add    BYTE PTR [rdi],bh
   140017d14:	rex.RXB
   140017d15:	gs je  0x140017d5c
   140017d18:	gs data16 (bad) 
   140017d1b:	jne    0x140017d89
   140017d1d:	je     0x140017d72
   140017d1f:	jo     0x140017d8a
   140017d21:	outs   dx,BYTE PTR ds:[rsi]
   140017d22:	rex.B
   140017d23:	fs push 0x75
   140017d26:	jae    0x140017d9c
   140017d28:	ins    DWORD PTR es:[rdi],dx
   140017d29:	outs   dx,BYTE PTR gs:[rsi]
   140017d2b:	je     0x140017d73
   140017d2d:	(bad)  
   140017d2e:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   140017d32:	rex
   140017d33:	rex.XB push r11
   140017d35:	ins    DWORD PTR es:[rdi],dx
   140017d36:	(bad)  
   140017d37:	ins    BYTE PTR es:[rdi],dx
   140017d38:	ins    BYTE PTR es:[rdi],dx
   140017d39:	push   rbx
   140017d3a:	jo     0x140017da5
   140017d3c:	outs   dx,BYTE PTR ds:[rsi]
   140017d3d:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140017d3f:	movsxd ebp,DWORD PTR [rbx+0x40]
   140017d42:	rex push rbx
   140017d44:	rex.B
   140017d45:	rex.WRX pop rax
   140017d47:	pop    rdx
   140017d48:	add    BYTE PTR [rdi],bh
   140017d4a:	rex.RXB
   140017d4b:	gs je  0x140017d92
   140017d4e:	gs data16 (bad) 
   140017d51:	jne    0x140017dbf
   140017d53:	je     0x140017da8
   140017d55:	jo     0x140017dc0
   140017d57:	outs   dx,BYTE PTR ds:[rsi]
   140017d58:	rex.B
   140017d59:	fs push 0x75
   140017d5c:	jae    0x140017dd2
   140017d5e:	ins    DWORD PTR es:[rdi],dx
   140017d5f:	outs   dx,BYTE PTR gs:[rsi]
   140017d61:	je     0x140017da9
   140017d63:	(bad)  
   140017d64:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   140017d68:	rex
   140017d69:	rex.XB push r11
   140017d6b:	jo     0x140017dd6
   140017d6d:	outs   dx,BYTE PTR ds:[rsi]
   140017d6e:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140017d70:	movsxd ebp,DWORD PTR [rbx+0x40]
   140017d73:	rex push rbx
   140017d75:	rex.B
   140017d76:	rex.WRX pop rax
   140017d78:	pop    rdx
   140017d79:	add    BYTE PTR [rdi],bh
   140017d7b:	rex.RXB
   140017d7c:	gs je  0x140017dc3
   140017d7f:	gs data16 (bad) 
   140017d82:	jne    0x140017df0
   140017d84:	je     0x140017dd9
   140017d86:	jo     0x140017df1
   140017d88:	outs   dx,BYTE PTR ds:[rsi]
   140017d89:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140017d8b:	jne    0x140017dfb
   140017d8d:	je     0x140017dcf
   140017d8f:	rex.XB
   140017d90:	rex.XB jb 0x140017dfc
   140017d93:	je     0x140017de8
   140017d95:	movsxd eax,DWORD PTR gs:[rax+0x40]
   140017d99:	push   rbx
   140017d9a:	rex.B
   140017d9b:	rex.RXB pop r8
   140017d9d:	pop    rdx
   140017d9e:	add    BYTE PTR [rdi],bh
   140017da0:	rex.RXB
   140017da1:	gs je  0x140017de8
   140017da4:	gs data16 (bad) 
   140017da7:	jne    0x140017e15
   140017da9:	je     0x140017dfe
   140017dab:	jo     0x140017e16
   140017dad:	outs   dx,BYTE PTR ds:[rsi]
   140017dae:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140017db0:	jne    0x140017e20
   140017db2:	je     0x140017df4
   140017db4:	rex.XB
   140017db5:	rex.RX (bad) 
   140017db7:	imul   esp,DWORD PTR [rbp+0x4c],0x6f
   140017dbb:	movsxd ebp,DWORD PTR [rbx+0x40]
   140017dbe:	rex push rbx
   140017dc0:	rex.B
   140017dc1:	rex.RXB pop r8
   140017dc3:	pop    rdx
   140017dc4:	add    BYTE PTR [rdi],bh
   140017dc6:	rex.RXB
   140017dc7:	gs je  0x140017e0e
   140017dca:	gs data16 (bad) 
   140017dcd:	jne    0x140017e3b
   140017dcf:	je     0x140017e24
   140017dd1:	jo     0x140017e3c
   140017dd3:	outs   dx,BYTE PTR ds:[rsi]
   140017dd4:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140017dd6:	jne    0x140017e46
   140017dd8:	je     0x140017e1a
   140017dda:	rex.XB push r10
   140017ddc:	gs (bad) 
   140017dde:	fs gs jb 0x140017e39
   140017de2:	jb     0x140017e4d
   140017de4:	je     0x140017e4b
   140017de6:	jb     0x140017e34
   140017de8:	outs   dx,DWORD PTR ds:[rsi]
   140017de9:	movsxd ebp,DWORD PTR [rbx+0x32]
   140017dec:	rex
   140017ded:	rex push rbx
   140017def:	rex.B
   140017df0:	rex.RXB pop r8
   140017df2:	pop    rdx
   140017df3:	add    BYTE PTR [rdi],bh
   140017df5:	rex.RXB
   140017df6:	gs je  0x140017e3d
   140017df9:	gs data16 (bad) 
   140017dfc:	jne    0x140017e6a
   140017dfe:	je     0x140017e53
   140017e00:	jo     0x140017e6b
   140017e02:	outs   dx,BYTE PTR ds:[rsi]
   140017e03:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140017e05:	jne    0x140017e75
   140017e07:	je     0x140017e49
   140017e09:	rex.XB push r10
   140017e0b:	gs (bad) 
   140017e0d:	fs gs jb 0x140017e68
   140017e11:	jb     0x140017e7c
   140017e13:	je     0x140017e7a
   140017e15:	jb     0x140017e63
   140017e17:	outs   dx,DWORD PTR ds:[rsi]
   140017e18:	movsxd ebp,DWORD PTR [rbx+0x33]
   140017e1b:	rex
   140017e1c:	rex push rbx
   140017e1e:	rex.B
   140017e1f:	rex.RXB pop r8
   140017e21:	pop    rdx
   140017e22:	add    BYTE PTR [rdi],bh
   140017e24:	rex.RXB
   140017e25:	gs je  0x140017e6c
   140017e28:	gs data16 (bad) 
   140017e2b:	jne    0x140017e99
   140017e2d:	je     0x140017e82
   140017e2f:	jo     0x140017e9a
   140017e31:	outs   dx,BYTE PTR ds:[rsi]
   140017e32:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140017e34:	jne    0x140017ea4
   140017e36:	je     0x140017e78
   140017e38:	rex.XB push r10
   140017e3a:	gs (bad) 
   140017e3c:	fs gs jb 0x140017e97
   140017e40:	jb     0x140017eab
   140017e42:	je     0x140017ea9
   140017e44:	jb     0x140017e92
   140017e46:	outs   dx,DWORD PTR ds:[rsi]
   140017e47:	movsxd ebp,DWORD PTR [rbx+0x40]
   140017e4a:	rex push rbx
   140017e4c:	rex.B
   140017e4d:	rex.RXB pop r8
   140017e4f:	pop    rdx
   140017e50:	add    BYTE PTR [rdi],bh
   140017e52:	rex.RXB
   140017e53:	gs je  0x140017e9a
   140017e56:	gs data16 (bad) 
   140017e59:	jne    0x140017ec7
   140017e5b:	je     0x140017eb0
   140017e5d:	jo     0x140017ec8
   140017e5f:	outs   dx,BYTE PTR ds:[rsi]
   140017e60:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140017e62:	jne    0x140017ed2
   140017e64:	je     0x140017ea6
   140017e66:	rex.XB push r10
   140017e68:	je     0x140017ed6
   140017e6a:	push   rdx
   140017e6b:	gs jae 0x140017edd
   140017e6e:	jne    0x140017ee2
   140017e70:	movsxd esp,DWORD PTR [rbp+0x40]
   140017e73:	rex push rbx
   140017e75:	rex.B
   140017e76:	rex.RXB pop r8
   140017e78:	pop    rdx
   140017e79:	add    BYTE PTR [rdi],bh
   140017e7b:	rex.RXB
   140017e7c:	gs je  0x140017ec3
   140017e7f:	gs data16 (bad) 
   140017e82:	jne    0x140017ef0
   140017e84:	je     0x140017ed9
   140017e86:	jo     0x140017ef1
   140017e88:	outs   dx,BYTE PTR ds:[rsi]
   140017e89:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140017e8b:	jne    0x140017efb
   140017e8d:	je     0x140017ecf
   140017e8f:	rex.XB push r11
   140017e91:	push   0x4c657261
   140017e96:	outs   dx,DWORD PTR ds:[rsi]
   140017e97:	movsxd ebp,DWORD PTR [rbx+0x40]
   140017e9a:	rex push rbx
   140017e9c:	rex.B
   140017e9d:	rex.RXB pop r8
   140017e9f:	pop    rdx
   140017ea0:	add    BYTE PTR [rdi],bh
   140017ea2:	rex.RXB
   140017ea3:	gs je  0x140017eea
   140017ea6:	gs data16 (bad) 
   140017ea9:	jne    0x140017f17
   140017eab:	je     0x140017f00
   140017ead:	jo     0x140017f18
   140017eaf:	outs   dx,BYTE PTR ds:[rsi]
   140017eb0:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140017eb2:	jne    0x140017f22
   140017eb4:	je     0x140017ef6
   140017eb6:	rex.XB push r11
   140017eb8:	ins    DWORD PTR es:[rdi],dx
   140017eb9:	(bad)  
   140017eba:	ins    BYTE PTR es:[rdi],dx
   140017ebb:	ins    BYTE PTR es:[rdi],dx
   140017ebc:	push   rbx
   140017ebd:	jo     0x140017f28
   140017ebf:	outs   dx,BYTE PTR ds:[rsi]
   140017ec0:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140017ec2:	movsxd ebp,DWORD PTR [rbx+0x40]
   140017ec5:	rex push rbx
   140017ec7:	rex.B
   140017ec8:	rex.RXB pop r8
   140017eca:	pop    rdx
   140017ecb:	add    BYTE PTR [rdi],bh
   140017ecd:	rex.RXB
   140017ece:	gs je  0x140017f15
   140017ed1:	gs data16 (bad) 
   140017ed4:	jne    0x140017f42
   140017ed6:	je     0x140017f2b
   140017ed8:	jo     0x140017f43
   140017eda:	outs   dx,BYTE PTR ds:[rsi]
   140017edb:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140017edd:	jne    0x140017f4d
   140017edf:	je     0x140017f21
   140017ee1:	rex.XB push r11
   140017ee3:	jo     0x140017f4e
   140017ee5:	outs   dx,BYTE PTR ds:[rsi]
   140017ee6:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140017ee8:	movsxd ebp,DWORD PTR [rbx+0x40]
   140017eeb:	rex push rbx
   140017eed:	rex.B
   140017eee:	rex.RXB pop r8
   140017ef0:	pop    rdx
   140017ef1:	add    BYTE PTR [rdi],bh
   140017ef3:	rex.RXB
   140017ef4:	gs je  0x140017f3b
   140017ef7:	ja     0x140017f68
   140017ef9:	jb     0x140017f5f
   140017efb:	rex
   140017efc:	rex.WRB
   140017efd:	rex.X
   140017efe:	rex
   140017eff:	rex push rcx
   140017f01:	rex.RB
   140017f02:	rex.B
   140017f03:	rex.B
   140017f04:	rex.W push rax
   140017f06:	rex.RB
   140017f07:	rex.X
   140017f08:	rex.RXB
   140017f09:	rex.WXB
   140017f0a:	rex.WXB push r8
   140017f0c:	rex.RB
   140017f0d:	rex.B
   140017f0e:	rex.WXB
   140017f0f:	rex.WXB
   140017f10:	rex pop rdx
   140017f12:	add    BYTE PTR [rdi],bh
   140017f14:	rex.RXB
   140017f15:	gs je  0x140017f5c
   140017f18:	ja     0x140017f89
   140017f1a:	jb     0x140017f80
   140017f1c:	rex
   140017f1d:	rex.WRB
   140017f1e:	rex.X
   140017f1f:	rex
   140017f20:	rex push rcx
   140017f22:	rex.RB
   140017f23:	rex.B
   140017f24:	pop    r8
   140017f26:	push   rax
   140017f27:	rex.RB
   140017f28:	rex.X
   140017f29:	rex.RXB
   140017f2a:	rex.WXB
   140017f2b:	rex.WXB
   140017f2c:	rex.WXB push r8
   140017f2e:	rex.RB
   140017f2f:	rex.B
   140017f30:	rex.WXB
   140017f31:	rex.WXB
   140017f32:	rex pop rdx
   140017f34:	add    BYTE PTR [rdi],bh
   140017f36:	rex.RXB
   140017f37:	gs je  0x140017f87
   140017f3a:	jne    0x140017fa8
   140017f3c:	je     0x140017fa7
   140017f3e:	jae    0x140017fba
   140017f40:	rex
   140017f41:	rex.WRB
   140017f42:	rex.X
   140017f43:	rex
   140017f44:	rex push rcx
   140017f46:	rex.RB
   140017f47:	rex.B
   140017f48:	rex.B
   140017f49:	rex.W push rax
   140017f4b:	rex.RB
   140017f4c:	rex.X
   140017f4d:	rex.RXB
   140017f4e:	rex.WXB
   140017f4f:	rex.WXB push r8
   140017f51:	rex.RB
   140017f52:	push   r14
   140017f54:	rex.WRB push r13
   140017f56:	rex.WR push rsp
   140017f58:	rex.WB push r11
   140017f5a:	pop    rdx
   140017f5b:	rex
   140017f5c:	rex
   140017f5d:	rex.WXB
   140017f5e:	rex pop rdx
   140017f60:	add    BYTE PTR [rdi],bh
   140017f62:	rex.RXB
   140017f63:	gs je  0x140017fb9
   140017f66:	jo     0x140017fd1
   140017f68:	outs   dx,BYTE PTR ds:[rsi]
   140017f69:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140017f6b:	jne    0x140017fdb
   140017f6d:	je     0x140017faf
   140017f6f:	rex.XB
   140017f70:	rex.XB jb 0x140017fdc
   140017f73:	je     0x140017fc8
   140017f75:	movsxd eax,DWORD PTR gs:[rax+0x40]
   140017f79:	push   rcx
   140017f7a:	rex.RB
   140017f7b:	rex.X
   140017f7c:	rex.B
   140017f7d:	rex.RXB pop r8
   140017f7f:	pop    rdx
   140017f80:	add    BYTE PTR [rdi],bh
   140017f82:	rex.RXB
   140017f83:	gs je  0x140017fd9
   140017f86:	jo     0x140017ff1
   140017f88:	outs   dx,BYTE PTR ds:[rsi]
   140017f89:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140017f8b:	jne    0x140017ffb
   140017f8d:	je     0x140017fcf
   140017f8f:	rex.XB
   140017f90:	rex.RX (bad) 
   140017f92:	imul   esp,DWORD PTR [rbp+0x4c],0x6f
   140017f96:	movsxd ebp,DWORD PTR [rbx+0x40]
   140017f99:	rex push rcx
   140017f9b:	rex.RB
   140017f9c:	rex.X
   140017f9d:	rex.B
   140017f9e:	rex.RXB pop r8
   140017fa0:	pop    rdx
   140017fa1:	add    BYTE PTR [rdi],bh
   140017fa3:	rex.RXB
   140017fa4:	gs je  0x140017ffa
   140017fa7:	jo     0x140018012
   140017fa9:	outs   dx,BYTE PTR ds:[rsi]
   140017faa:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140017fac:	jne    0x14001801c
   140017fae:	je     0x140017ff0
   140017fb0:	rex.XB push r10
   140017fb2:	gs (bad) 
   140017fb4:	fs gs jb 0x14001800f
   140017fb8:	jb     0x140018023
   140017fba:	je     0x140018021
   140017fbc:	jb     0x14001800a
   140017fbe:	outs   dx,DWORD PTR ds:[rsi]
   140017fbf:	movsxd ebp,DWORD PTR [rbx+0x32]
   140017fc2:	rex
   140017fc3:	rex push rcx
   140017fc5:	rex.RB
   140017fc6:	rex.X
   140017fc7:	rex.B
   140017fc8:	rex.RXB pop r8
   140017fca:	pop    rdx
   140017fcb:	add    BYTE PTR [rdi],bh
   140017fcd:	rex.RXB
   140017fce:	gs je  0x140018024
   140017fd1:	jo     0x14001803c
   140017fd3:	outs   dx,BYTE PTR ds:[rsi]
   140017fd4:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140017fd6:	jne    0x140018046
   140017fd8:	je     0x14001801a
   140017fda:	rex.XB push r10
   140017fdc:	gs (bad) 
   140017fde:	fs gs jb 0x140018039
   140017fe2:	jb     0x14001804d
   140017fe4:	je     0x14001804b
   140017fe6:	jb     0x140018034
   140017fe8:	outs   dx,DWORD PTR ds:[rsi]
   140017fe9:	movsxd ebp,DWORD PTR [rbx+0x33]
   140017fec:	rex
   140017fed:	rex push rcx
   140017fef:	rex.RB
   140017ff0:	rex.X
   140017ff1:	rex.B
   140017ff2:	rex.RXB pop r8
   140017ff4:	pop    rdx
   140017ff5:	add    BYTE PTR [rdi],bh
   140017ff7:	rex.RXB
   140017ff8:	gs je  0x14001804e
   140017ffb:	jo     0x140018066
   140017ffd:	outs   dx,BYTE PTR ds:[rsi]
   140017ffe:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140018000:	jne    0x140018070
   140018002:	je     0x140018044
   140018004:	rex.XB push r10
   140018006:	gs (bad) 
   140018008:	fs gs jb 0x140018063
   14001800c:	jb     0x140018077
   14001800e:	je     0x140018075
   140018010:	jb     0x14001805e
   140018012:	outs   dx,DWORD PTR ds:[rsi]
   140018013:	movsxd ebp,DWORD PTR [rbx+0x40]
   140018016:	rex push rcx
   140018018:	rex.RB
   140018019:	rex.X
   14001801a:	rex.B
   14001801b:	rex.RXB pop r8
   14001801d:	pop    rdx
   14001801e:	add    BYTE PTR [rdi],bh
   140018020:	rex.RXB
   140018021:	gs je  0x140018077
   140018024:	jo     0x14001808f
   140018026:	outs   dx,BYTE PTR ds:[rsi]
   140018027:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140018029:	jne    0x140018099
   14001802b:	je     0x14001806d
   14001802d:	rex.XB push r10
   14001802f:	je     0x14001809d
   140018031:	push   rdx
   140018032:	gs jae 0x1400180a4
   140018035:	jne    0x1400180a9
   140018037:	movsxd esp,DWORD PTR [rbp+0x40]
   14001803a:	rex push rcx
   14001803c:	rex.RB
   14001803d:	rex.X
   14001803e:	rex.B
   14001803f:	rex.RXB pop r8
   140018041:	pop    rdx
   140018042:	add    BYTE PTR [rdi],bh
   140018044:	rex.RXB
   140018045:	gs je  0x14001809b
   140018048:	jo     0x1400180b3
   14001804a:	outs   dx,BYTE PTR ds:[rsi]
   14001804b:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14001804d:	jne    0x1400180bd
   14001804f:	je     0x140018091
   140018051:	rex.XB push r11
   140018053:	push   0x4c657261
   140018058:	outs   dx,DWORD PTR ds:[rsi]
   140018059:	movsxd ebp,DWORD PTR [rbx+0x40]
   14001805c:	rex push rcx
   14001805e:	rex.RB
   14001805f:	rex.X
   140018060:	rex.B
   140018061:	rex.RXB pop r8
   140018063:	pop    rdx
   140018064:	add    BYTE PTR [rdi],bh
   140018066:	rex.RXB
   140018067:	gs je  0x1400180bd
   14001806a:	jo     0x1400180d5
   14001806c:	outs   dx,BYTE PTR ds:[rsi]
   14001806d:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14001806f:	jne    0x1400180df
   140018071:	je     0x1400180b3
   140018073:	rex.XB push r11
   140018075:	ins    DWORD PTR es:[rdi],dx
   140018076:	(bad)  
   140018077:	ins    BYTE PTR es:[rdi],dx
   140018078:	ins    BYTE PTR es:[rdi],dx
   140018079:	push   rbx
   14001807a:	jo     0x1400180e5
   14001807c:	outs   dx,BYTE PTR ds:[rsi]
   14001807d:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14001807f:	movsxd ebp,DWORD PTR [rbx+0x40]
   140018082:	rex push rcx
   140018084:	rex.RB
   140018085:	rex.X
   140018086:	rex.B
   140018087:	rex.RXB pop r8
   140018089:	pop    rdx
   14001808a:	add    BYTE PTR [rdi],bh
   14001808c:	rex.RXB
   14001808d:	gs je  0x1400180e3
   140018090:	jo     0x1400180fb
   140018092:	outs   dx,BYTE PTR ds:[rsi]
   140018093:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140018095:	jne    0x140018105
   140018097:	je     0x1400180d9
   140018099:	rex.XB push r11
   14001809b:	jo     0x140018106
   14001809d:	outs   dx,BYTE PTR ds:[rsi]
   14001809e:	rex.WR outs dx,DWORD PTR ds:[rsi]
   1400180a0:	movsxd ebp,DWORD PTR [rbx+0x40]
   1400180a3:	rex push rcx
   1400180a5:	rex.RB
   1400180a6:	rex.X
   1400180a7:	rex.B
   1400180a8:	rex.RXB pop r8
   1400180aa:	pop    rdx
   1400180ab:	add    BYTE PTR [rdi],bh
   1400180ad:	rex.RXB
   1400180ae:	gs je  0x140018104
   1400180b1:	je     0x140018125
   1400180b3:	rex
   1400180b4:	rex.WRB
   1400180b5:	rex.X
   1400180b6:	rex
   1400180b7:	rex push rcx
   1400180b9:	rex.RB
   1400180ba:	rex.B
   1400180bb:	rex.B
   1400180bc:	rex.W push rax
   1400180be:	rex.RB
   1400180bf:	rex.X
   1400180c0:	rex.RXB
   1400180c1:	rex.WXB
   1400180c2:	rex.WXB push r8
   1400180c4:	rex.RB
   1400180c5:	push   r14
   1400180c7:	push   rbx
   1400180c8:	push   rsp
   1400180c9:	push   rdx
   1400180ca:	push   rbp
   1400180cb:	rex
   1400180cc:	rex
   1400180cd:	rex.WXB xor BYTE PTR [r8+0x5a],al
   1400180d1:	add    BYTE PTR [rdi],bh
   1400180d3:	rex.RXB
   1400180d4:	gs je  0x14001812a
   1400180d7:	je     0x14001814b
   1400180d9:	imul   ebp,DWORD PTR [rsi+0x67],0x40424d40
   1400180e0:	rex push rcx
   1400180e2:	rex.RB
   1400180e3:	rex.B
   1400180e4:	rex.B
   1400180e5:	rex.W push rax
   1400180e7:	rex.RB
   1400180e8:	rex.X
   1400180e9:	rex.RXB
   1400180ea:	rex.WXB
   1400180eb:	rex.WXB push r8
   1400180ed:	rex.RB
   1400180ee:	rex.B
   1400180ef:	rex.RXB push r8
   1400180f1:	rex.RB
   1400180f2:	rex.B
   1400180f3:	rex.WXB
   1400180f4:	rex.WXB
   1400180f5:	rex pop rdx
   1400180f7:	add    BYTE PTR [rdi],bh
   1400180f9:	rex.RXB
   1400180fa:	gs je  0x140018150
   1400180fd:	jns    0x140018172
   1400180ff:	je     0x140018166
   140018101:	ins    DWORD PTR es:[rdi],dx
   140018102:	rex.XB push 0x65676e61
   140018108:	rex.WRX jne 0x140018178
   14001810b:	(bad)  
   14001810c:	gs jb  0x14001814f
   14001810f:	rex.WRB
   140018110:	rex.X
   140018111:	rex
   140018112:	rex push rcx
   140018114:	rex.RB
   140018115:	rex.B
   140018116:	rex.B
   140018117:	rex.W push rax
   140018119:	rex.RB
   14001811a:	rex.B
   14001811b:	rex.WXB
   14001811c:	rex pop rdx
   14001811e:	add    BYTE PTR [rdi],bh
   140018120:	rex.W push rsp
   140018122:	rex.WRB
   140018123:	rex.WR
   140018124:	rex.RB outs dx,BYTE PTR ds:[rsi]
   140018126:	movsxd ebp,DWORD PTR [rdi+0x64]
   140018129:	gs rex push rbx
   14001812c:	push   rsp
   14001812d:	push   rdx
   14001812e:	rex.B
   14001812f:	rex
   140018130:	rex push rcx
   140018132:	rex.RB
   140018133:	rex.B
   140018134:	rex.B
   140018135:	rex.WX pop rax
   140018137:	pop    rdx
   140018138:	add    BYTE PTR [rdi],bh
   14001813a:	rex.W push rsp
   14001813c:	rex.WRB
   14001813d:	rex.WR
   14001813e:	rex.RB outs dx,BYTE PTR ds:[rsi]
   140018140:	movsxd ebp,DWORD PTR [rdi+0x64]
   140018143:	gs rex push rbx
   140018146:	push   rsp
   140018147:	push   rdx
   140018148:	push   rbp
   140018149:	rex
   14001814a:	rex push rcx
   14001814c:	rex.RB
   14001814d:	rex.B
   14001814e:	rex.B
   14001814f:	rex.WX pop rax
   140018151:	pop    rdx
   140018152:	add    BYTE PTR [rdi],bh
   140018154:	rex.W (bad) 
   140018156:	jae    0x1400181c0
   140018158:	rex
   140018159:	rex.X
   14001815a:	rex.WB
   14001815b:	rex.RXB pop r15
   14001815d:	push   rdx
   14001815e:	rex.RB
   14001815f:	rex.RX pop rdi
   140018161:	push   rsp
   140018162:	push   rdx
   140018163:	rex.B
   140018164:	rex.XB
   140018165:	rex.RB
   140018166:	rex
   140018167:	rex push rbx
   140018169:	rex.B
   14001816a:	rex.WXB push r8
   14001816c:	rex.RB
   14001816d:	pop    r8
   14001816f:	rex pop rdx
   140018171:	add    BYTE PTR [rdi],bh
   140018173:	rex.WB jae 0x1400181b9
   140018176:	jne    0x1400181ea
   140018178:	jb     0x1400181df
   14001817a:	outs   dx,BYTE PTR ds:[rsi]
   14001817b:	je     0x1400181d2
   14001817d:	outs   dx,BYTE PTR ds:[rsi]
   14001817e:	imul   esp,DWORD PTR [rbx+0x6f],0x53406564
   140018185:	push   rsp
   140018186:	push   rdx
   140018187:	push   r13
   140018189:	rex
   14001818a:	rex push rcx
   14001818c:	rex.RB
   14001818d:	rex.B
   14001818e:	rex.B
   14001818f:	rex.W pop rax
   140018191:	pop    rdx
   140018192:	add    BYTE PTR [rdi],bh
   140018194:	rex.WB jae 0x1400181dc
   140018197:	ins    DWORD PTR es:[rdi],dx
   140018198:	jo     0x14001820e
   14001819a:	jns    0x1400181dc
   14001819c:	rex.WRB push r13
   14001819e:	rex.WR push rsp
   1400181a0:	rex.WB push r11
   1400181a2:	pop    rdx
   1400181a3:	rex
   1400181a4:	rex push rcx
   1400181a6:	rex.RB
   1400181a7:	rex.X
   1400181a8:	rex.B
   1400181a9:	rex.W pop rax
   1400181ab:	pop    rdx
   1400181ac:	add    BYTE PTR [rdi],bh
   1400181ae:	rex.WB jae 0x1400181f6
   1400181b1:	ins    DWORD PTR es:[rdi],dx
   1400181b2:	jo     0x140018228
   1400181b4:	jns    0x1400181f6
   1400181b6:	push   rbx
   1400181b7:	push   rsp
   1400181b8:	push   rdx
   1400181b9:	rex.B
   1400181ba:	rex
   1400181bb:	rex push rcx
   1400181bd:	rex.RB
   1400181be:	rex.X
   1400181bf:	pop    r15
   1400181c1:	rex.WRX pop rax
   1400181c3:	pop    rdx
   1400181c4:	add    BYTE PTR [rdi],bh
   1400181c6:	rex.WB jae 0x14001820e
   1400181c9:	ins    DWORD PTR es:[rdi],dx
   1400181ca:	jo     0x140018240
   1400181cc:	jns    0x14001820e
   1400181ce:	push   rbx
   1400181cf:	push   rsp
   1400181d0:	push   rdx
   1400181d1:	push   r13
   1400181d3:	rex
   1400181d4:	rex push rcx
   1400181d6:	rex.RB
   1400181d7:	rex.B
   1400181d8:	rex.B
   1400181d9:	rex.W pop rax
   1400181db:	pop    rdx
   1400181dc:	add    BYTE PTR [rdi],bh
   1400181de:	rex.WB jae 0x140018226
   1400181e1:	ins    DWORD PTR es:[rdi],dx
   1400181e2:	jo     0x140018258
   1400181e4:	jns    0x140018226
   1400181e6:	push   rbx
   1400181e7:	push   rsp
   1400181e8:	push   rdx
   1400181e9:	push   rbp
   1400181ea:	rex
   1400181eb:	rex push rcx
   1400181ed:	rex.RB
   1400181ee:	rex.X
   1400181ef:	pop    r15
   1400181f1:	rex.WRX pop rax
   1400181f3:	pop    rdx
   1400181f4:	add    BYTE PTR [rdi],bh
   1400181f6:	rex.WB jae 0x14001824b
   1400181f9:	gs (bad) 
   1400181fb:	rex.WR outs dx,DWORD PTR fs:[rsi]
   1400181fe:	movsxd ebp,DWORD PTR [rbx+0x65]
   140018201:	fs rex
   140018203:	rex.XB
   140018204:	rex.XB jb 0x140018270
   140018207:	je     0x14001825c
   140018209:	movsxd eax,DWORD PTR gs:[rax+0x40]
   14001820d:	push   rcx
   14001820e:	rex.RB
   14001820f:	rex.X
   140018210:	pop    r15
   140018212:	rex.WRX pop rax
   140018214:	pop    rdx
   140018215:	add    BYTE PTR [rdi],bh
   140018217:	rex.WB jae 0x14001826c
   14001821a:	gs (bad) 
   14001821c:	rex.WR outs dx,DWORD PTR fs:[rsi]
   14001821f:	movsxd ebp,DWORD PTR [rbx+0x65]
   140018222:	fs rex
   140018224:	rex.XB
   140018225:	rex.RX (bad) 
   140018227:	imul   esp,DWORD PTR [rbp+0x4c],0x6f
   14001822b:	movsxd ebp,DWORD PTR [rbx+0x40]
   14001822e:	rex push rcx
   140018230:	rex.RB
   140018231:	rex.X
   140018232:	pop    r15
   140018234:	rex.WRX pop rax
   140018236:	pop    rdx
   140018237:	add    BYTE PTR [rdi],bh
   140018239:	rex.WB jae 0x14001828e
   14001823c:	gs (bad) 
   14001823e:	rex.WR outs dx,DWORD PTR fs:[rsi]
   140018241:	movsxd ebp,DWORD PTR [rbx+0x65]
   140018244:	fs rex
   140018246:	rex.XB push r10
   140018248:	gs (bad) 
   14001824a:	fs gs jb 0x1400182a5
   14001824e:	jb     0x1400182b9
   140018250:	je     0x1400182b7
   140018252:	jb     0x1400182a0
   140018254:	outs   dx,DWORD PTR ds:[rsi]
   140018255:	movsxd ebp,DWORD PTR [rbx+0x32]
   140018258:	rex
   140018259:	rex push rcx
   14001825b:	rex.RB
   14001825c:	rex.X
   14001825d:	pop    r15
   14001825f:	rex.WRX pop rax
   140018261:	pop    rdx
   140018262:	add    BYTE PTR [rdi],bh
   140018264:	rex.WB jae 0x1400182b9
   140018267:	gs (bad) 
   140018269:	rex.WR outs dx,DWORD PTR fs:[rsi]
   14001826c:	movsxd ebp,DWORD PTR [rbx+0x65]
   14001826f:	fs rex
   140018271:	rex.XB push r10
   140018273:	gs (bad) 
   140018275:	fs gs jb 0x1400182d0
   140018279:	jb     0x1400182e4
   14001827b:	je     0x1400182e2
   14001827d:	jb     0x1400182cb
   14001827f:	outs   dx,DWORD PTR ds:[rsi]
   140018280:	movsxd ebp,DWORD PTR [rbx+0x33]
   140018283:	rex
   140018284:	rex push rcx
   140018286:	rex.RB
   140018287:	rex.X
   140018288:	pop    r15
   14001828a:	rex.WRX pop rax
   14001828c:	pop    rdx
   14001828d:	add    BYTE PTR [rdi],bh
   14001828f:	rex.WB jae 0x1400182e4
   140018292:	gs (bad) 
   140018294:	rex.WR outs dx,DWORD PTR fs:[rsi]
   140018297:	movsxd ebp,DWORD PTR [rbx+0x65]
   14001829a:	fs rex
   14001829c:	rex.XB push r10
   14001829e:	gs (bad) 
   1400182a0:	fs gs jb 0x1400182fb
   1400182a4:	jb     0x14001830f
   1400182a6:	je     0x14001830d
   1400182a8:	jb     0x1400182f6
   1400182aa:	outs   dx,DWORD PTR ds:[rsi]
   1400182ab:	movsxd ebp,DWORD PTR [rbx+0x40]
   1400182ae:	rex push rcx
   1400182b0:	rex.RB
   1400182b1:	rex.X
   1400182b2:	pop    r15
   1400182b4:	rex.WRX pop rax
   1400182b6:	pop    rdx
   1400182b7:	add    BYTE PTR [rdi],bh
   1400182b9:	rex.WB jae 0x14001830e
   1400182bc:	gs (bad) 
   1400182be:	rex.WR outs dx,DWORD PTR fs:[rsi]
   1400182c1:	movsxd ebp,DWORD PTR [rbx+0x65]
   1400182c4:	fs rex
   1400182c6:	rex.XB push r10
   1400182c8:	je     0x140018336
   1400182ca:	push   rdx
   1400182cb:	gs jae 0x14001833d
   1400182ce:	jne    0x140018342
   1400182d0:	movsxd esp,DWORD PTR [rbp+0x40]
   1400182d3:	rex push rcx
   1400182d5:	rex.RB
   1400182d6:	rex.X
   1400182d7:	pop    r15
   1400182d9:	rex.WRX pop rax
   1400182db:	pop    rdx
   1400182dc:	add    BYTE PTR [rdi],bh
   1400182de:	rex.WB jae 0x140018333
   1400182e1:	gs (bad) 
   1400182e3:	rex.WR outs dx,DWORD PTR fs:[rsi]
   1400182e6:	movsxd ebp,DWORD PTR [rbx+0x65]
   1400182e9:	fs rex
   1400182eb:	rex.XB push r11
   1400182ed:	push   0x4c657261
   1400182f2:	outs   dx,DWORD PTR ds:[rsi]
   1400182f3:	movsxd ebp,DWORD PTR [rbx+0x40]
   1400182f6:	rex push rcx
   1400182f8:	rex.RB
   1400182f9:	rex.X
   1400182fa:	pop    r15
   1400182fc:	rex.WRX pop rax
   1400182fe:	pop    rdx
   1400182ff:	add    BYTE PTR [rdi],bh
   140018301:	rex.WB jae 0x140018356
   140018304:	gs (bad) 
   140018306:	rex.WR outs dx,DWORD PTR fs:[rsi]
   140018309:	movsxd ebp,DWORD PTR [rbx+0x65]
   14001830c:	fs rex
   14001830e:	rex.XB push r11
   140018310:	ins    DWORD PTR es:[rdi],dx
   140018311:	(bad)  
   140018312:	ins    BYTE PTR es:[rdi],dx
   140018313:	ins    BYTE PTR es:[rdi],dx
   140018314:	push   rbx
   140018315:	jo     0x140018380
   140018317:	outs   dx,BYTE PTR ds:[rsi]
   140018318:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14001831a:	movsxd ebp,DWORD PTR [rbx+0x40]
   14001831d:	rex push rcx
   14001831f:	rex.RB
   140018320:	rex.X
   140018321:	pop    r15
   140018323:	rex.WRX pop rax
   140018325:	pop    rdx
   140018326:	add    BYTE PTR [rdi],bh
   140018328:	rex.WB jae 0x14001837d
   14001832b:	gs (bad) 
   14001832d:	rex.WR outs dx,DWORD PTR fs:[rsi]
   140018330:	movsxd ebp,DWORD PTR [rbx+0x65]
   140018333:	fs rex
   140018335:	rex.XB push r11
   140018337:	jo     0x1400183a2
   140018339:	outs   dx,BYTE PTR ds:[rsi]
   14001833a:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14001833c:	movsxd ebp,DWORD PTR [rbx+0x40]
   14001833f:	rex push rcx
   140018341:	rex.RB
   140018342:	rex.X
   140018343:	pop    r15
   140018345:	rex.WRX pop rax
   140018347:	pop    rdx
   140018348:	add    BYTE PTR [rdi],bh
   14001834a:	rex.WB jae 0x14001839f
   14001834d:	gs (bad) 
   14001834f:	fs push rbp
   140018351:	outs   dx,BYTE PTR ds:[rsi]
   140018352:	ins    BYTE PTR es:[rdi],dx
   140018353:	outs   dx,DWORD PTR ds:[rsi]
   140018354:	movsxd ebp,DWORD PTR [rbx+0x65]
   140018357:	fs rex
   140018359:	rex.XB
   14001835a:	rex.XB jb 0x1400183c6
   14001835d:	je     0x1400183b2
   14001835f:	movsxd eax,DWORD PTR gs:[rax+0x40]
   140018363:	push   rcx
   140018364:	rex.RB
   140018365:	rex.X
   140018366:	pop    r15
   140018368:	rex.WRX pop rax
   14001836a:	pop    rdx
   14001836b:	add    BYTE PTR [rdi],bh
   14001836d:	rex.WB jae 0x1400183c2
   140018370:	gs (bad) 
   140018372:	fs push rbp
   140018374:	outs   dx,BYTE PTR ds:[rsi]
   140018375:	ins    BYTE PTR es:[rdi],dx
   140018376:	outs   dx,DWORD PTR ds:[rsi]
   140018377:	movsxd ebp,DWORD PTR [rbx+0x65]
   14001837a:	fs rex
   14001837c:	rex.XB
   14001837d:	rex.RX (bad) 
   14001837f:	imul   esp,DWORD PTR [rbp+0x4c],0x6f
   140018383:	movsxd ebp,DWORD PTR [rbx+0x40]
   140018386:	rex push rcx
   140018388:	rex.RB
   140018389:	rex.X
   14001838a:	pop    r15
   14001838c:	rex.WRX pop rax
   14001838e:	pop    rdx
   14001838f:	add    BYTE PTR [rdi],bh
   140018391:	rex.WB jae 0x1400183e6
   140018394:	gs (bad) 
   140018396:	fs push rbp
   140018398:	outs   dx,BYTE PTR ds:[rsi]
   140018399:	ins    BYTE PTR es:[rdi],dx
   14001839a:	outs   dx,DWORD PTR ds:[rsi]
   14001839b:	movsxd ebp,DWORD PTR [rbx+0x65]
   14001839e:	fs rex
   1400183a0:	rex.XB push r10
   1400183a2:	gs (bad) 
   1400183a4:	fs gs jb 0x1400183ff
   1400183a8:	jb     0x140018413
   1400183aa:	je     0x140018411
   1400183ac:	jb     0x1400183fa
   1400183ae:	outs   dx,DWORD PTR ds:[rsi]
   1400183af:	movsxd ebp,DWORD PTR [rbx+0x32]
   1400183b2:	rex
   1400183b3:	rex push rcx
   1400183b5:	rex.RB
   1400183b6:	rex.X
   1400183b7:	pop    r15
   1400183b9:	rex.WRX pop rax
   1400183bb:	pop    rdx
   1400183bc:	add    BYTE PTR [rdi],bh
   1400183be:	rex.WB jae 0x140018413
   1400183c1:	gs (bad) 
   1400183c3:	fs push rbp
   1400183c5:	outs   dx,BYTE PTR ds:[rsi]
   1400183c6:	ins    BYTE PTR es:[rdi],dx
   1400183c7:	outs   dx,DWORD PTR ds:[rsi]
   1400183c8:	movsxd ebp,DWORD PTR [rbx+0x65]
   1400183cb:	fs rex
   1400183cd:	rex.XB push r10
   1400183cf:	gs (bad) 
   1400183d1:	fs gs jb 0x14001842c
   1400183d5:	jb     0x140018440
   1400183d7:	je     0x14001843e
   1400183d9:	jb     0x140018427
   1400183db:	outs   dx,DWORD PTR ds:[rsi]
   1400183dc:	movsxd ebp,DWORD PTR [rbx+0x33]
   1400183df:	rex
   1400183e0:	rex push rcx
   1400183e2:	rex.RB
   1400183e3:	rex.X
   1400183e4:	pop    r15
   1400183e6:	rex.WRX pop rax
   1400183e8:	pop    rdx
   1400183e9:	add    BYTE PTR [rdi],bh
   1400183eb:	rex.WB jae 0x140018440
   1400183ee:	gs (bad) 
   1400183f0:	fs push rbp
   1400183f2:	outs   dx,BYTE PTR ds:[rsi]
   1400183f3:	ins    BYTE PTR es:[rdi],dx
   1400183f4:	outs   dx,DWORD PTR ds:[rsi]
   1400183f5:	movsxd ebp,DWORD PTR [rbx+0x65]
   1400183f8:	fs rex
   1400183fa:	rex.XB push r10
   1400183fc:	gs (bad) 
   1400183fe:	fs gs jb 0x140018459
   140018402:	jb     0x14001846d
   140018404:	je     0x14001846b
   140018406:	jb     0x140018454
   140018408:	outs   dx,DWORD PTR ds:[rsi]
   140018409:	movsxd ebp,DWORD PTR [rbx+0x40]
   14001840c:	rex push rcx
   14001840e:	rex.RB
   14001840f:	rex.X
   140018410:	pop    r15
   140018412:	rex.WRX pop rax
   140018414:	pop    rdx
   140018415:	add    BYTE PTR [rdi],bh
   140018417:	rex.WB jae 0x14001846c
   14001841a:	gs (bad) 
   14001841c:	fs push rbp
   14001841e:	outs   dx,BYTE PTR ds:[rsi]
   14001841f:	ins    BYTE PTR es:[rdi],dx
   140018420:	outs   dx,DWORD PTR ds:[rsi]
   140018421:	movsxd ebp,DWORD PTR [rbx+0x65]
   140018424:	fs rex
   140018426:	rex.XB push r10
   140018428:	je     0x140018496
   14001842a:	push   rdx
   14001842b:	gs jae 0x14001849d
   14001842e:	jne    0x1400184a2
   140018430:	movsxd esp,DWORD PTR [rbp+0x40]
   140018433:	rex push rcx
   140018435:	rex.RB
   140018436:	rex.X
   140018437:	pop    r15
   140018439:	rex.WRX pop rax
   14001843b:	pop    rdx
   14001843c:	add    BYTE PTR [rdi],bh
   14001843e:	rex.WB jae 0x140018493
   140018441:	gs (bad) 
   140018443:	fs push rbp
   140018445:	outs   dx,BYTE PTR ds:[rsi]
   140018446:	ins    BYTE PTR es:[rdi],dx
   140018447:	outs   dx,DWORD PTR ds:[rsi]
   140018448:	movsxd ebp,DWORD PTR [rbx+0x65]
   14001844b:	fs rex
   14001844d:	rex.XB push r11
   14001844f:	push   0x4c657261
   140018454:	outs   dx,DWORD PTR ds:[rsi]
   140018455:	movsxd ebp,DWORD PTR [rbx+0x40]
   140018458:	rex push rcx
   14001845a:	rex.RB
   14001845b:	rex.X
   14001845c:	pop    r15
   14001845e:	rex.WRX pop rax
   140018460:	pop    rdx
   140018461:	add    BYTE PTR [rdi],bh
   140018463:	rex.WB jae 0x1400184b8
   140018466:	gs (bad) 
   140018468:	fs push rbp
   14001846a:	outs   dx,BYTE PTR ds:[rsi]
   14001846b:	ins    BYTE PTR es:[rdi],dx
   14001846c:	outs   dx,DWORD PTR ds:[rsi]
   14001846d:	movsxd ebp,DWORD PTR [rbx+0x65]
   140018470:	fs rex
   140018472:	rex.XB push r11
   140018474:	ins    DWORD PTR es:[rdi],dx
   140018475:	(bad)  
   140018476:	ins    BYTE PTR es:[rdi],dx
   140018477:	ins    BYTE PTR es:[rdi],dx
   140018478:	push   rbx
   140018479:	jo     0x1400184e4
   14001847b:	outs   dx,BYTE PTR ds:[rsi]
   14001847c:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14001847e:	movsxd ebp,DWORD PTR [rbx+0x40]
   140018481:	rex push rcx
   140018483:	rex.RB
   140018484:	rex.X
   140018485:	pop    r15
   140018487:	rex.WRX pop rax
   140018489:	pop    rdx
   14001848a:	add    BYTE PTR [rdi],bh
   14001848c:	rex.WB jae 0x1400184e1
   14001848f:	gs (bad) 
   140018491:	fs push rbp
   140018493:	outs   dx,BYTE PTR ds:[rsi]
   140018494:	ins    BYTE PTR es:[rdi],dx
   140018495:	outs   dx,DWORD PTR ds:[rsi]
   140018496:	movsxd ebp,DWORD PTR [rbx+0x65]
   140018499:	fs rex
   14001849b:	rex.XB push r11
   14001849d:	jo     0x140018508
   14001849f:	outs   dx,BYTE PTR ds:[rsi]
   1400184a0:	rex.WR outs dx,DWORD PTR ds:[rsi]
   1400184a2:	movsxd ebp,DWORD PTR [rbx+0x40]
   1400184a5:	rex push rcx
   1400184a7:	rex.RB
   1400184a8:	rex.X
   1400184a9:	pop    r15
   1400184ab:	rex.WRX pop rax
   1400184ad:	pop    rdx
   1400184ae:	add    BYTE PTR [rdi],bh
   1400184b0:	rex.WB jae 0x140018509
   1400184b3:	(bad)  
   1400184b4:	ins    BYTE PTR es:[rdi],dx
   1400184b5:	imul   esp,DWORD PTR [rax+rax*2+0x41],0x434f4c4c
   1400184bd:	pop    rdi
   1400184be:	rex.XB
   1400184bf:	rex.B
   1400184c0:	rex.XB
   1400184c1:	rex.W
   1400184c2:	rex.RB pop r15
   1400184c4:	rex.W
   1400184c5:	rex.B
   1400184c6:	rex.WRX
   1400184c7:	rex.R
   1400184c8:	rex.WR
   1400184c9:	rex.RB push r10
   1400184cb:	rex
   1400184cc:	rex push rcx
   1400184ce:	rex.RB
   1400184cf:	rex.X
   1400184d0:	rex.B
   1400184d1:	rex.W pop rax
   1400184d3:	pop    rdx
   1400184d4:	add    BYTE PTR [rdi],bh
   1400184d6:	rex.WB jae 0x14001852f
   1400184d9:	(bad)  
   1400184da:	ins    BYTE PTR es:[rdi],dx
   1400184db:	imul   esp,DWORD PTR [rax+rax*2+0x42],0x45464655
   1400184e3:	push   rdx
   1400184e4:	rex
   1400184e5:	rex push rcx
   1400184e7:	rex.RB
   1400184e8:	rex.X
   1400184e9:	pop    r15
   1400184eb:	rex.WRX pop rax
   1400184ed:	pop    rdx
   1400184ee:	add    BYTE PTR [rdi],bh
   1400184f0:	rex.WB jae 0x140018549
   1400184f3:	(bad)  
   1400184f4:	ins    BYTE PTR es:[rdi],dx
   1400184f5:	imul   esp,DWORD PTR [rax+rax*2+0x4d],0x49544c55
   1400184fd:	push   rbx
   1400184fe:	pop    rdx
   1400184ff:	rex
   140018500:	rex push rcx
   140018502:	rex.RB
   140018503:	rex.X
   140018504:	rex.B
   140018505:	rex.W pop rax
   140018507:	pop    rdx
   140018508:	add    BYTE PTR [rdi],bh
   14001850a:	rex.WB jae 0x140018563
   14001850d:	(bad)  
   14001850e:	ins    BYTE PTR es:[rdi],dx
   14001850f:	imul   esp,DWORD PTR [rax+rax*2+0x53],0x40415254
   140018517:	rex push rcx
   140018519:	rex.RB
   14001851a:	rex.X
   14001851b:	pop    r15
   14001851d:	rex.WRX pop rax
   14001851f:	pop    rdx
   140018520:	add    BYTE PTR [rdi],bh
   140018522:	rex.WB jae 0x14001857b
   140018525:	(bad)  
   140018526:	ins    BYTE PTR es:[rdi],dx
   140018527:	imul   esp,DWORD PTR [rax+rax*2+0x53],0x55415254
   14001852f:	rex
   140018530:	rex push rcx
   140018532:	rex.RB
   140018533:	rex.B
   140018534:	rex.B
   140018535:	rex.W pop rax
   140018537:	pop    rdx
   140018538:	add    BYTE PTR [rdi],bh
   14001853a:	rex.WB jae 0x140018594
   14001853d:	jb     0x1400185a8
   14001853f:	je     0x1400185a6
   140018541:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140018543:	movsxd ebp,DWORD PTR [rbx+0x65]
   140018546:	fs rex
   140018548:	rex.XB
   140018549:	rex.XB jb 0x1400185b5
   14001854c:	je     0x1400185a1
   14001854e:	movsxd eax,DWORD PTR gs:[rax+0x40]
   140018552:	push   rcx
   140018553:	rex.RB
   140018554:	rex.X
   140018555:	pop    r15
   140018557:	rex.WRX pop rax
   140018559:	pop    rdx
   14001855a:	add    BYTE PTR [rdi],bh
   14001855c:	rex.WB jae 0x1400185b6
   14001855f:	jb     0x1400185ca
   140018561:	je     0x1400185c8
   140018563:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140018565:	movsxd ebp,DWORD PTR [rbx+0x65]
   140018568:	fs rex
   14001856a:	rex.XB
   14001856b:	rex.RX (bad) 
   14001856d:	imul   esp,DWORD PTR [rbp+0x4c],0x6f
   140018571:	movsxd ebp,DWORD PTR [rbx+0x40]
   140018574:	rex push rcx
   140018576:	rex.RB
   140018577:	rex.X
   140018578:	pop    r15
   14001857a:	rex.WRX pop rax
   14001857c:	pop    rdx
   14001857d:	add    BYTE PTR [rdi],bh
   14001857f:	rex.WB jae 0x1400185d9
   140018582:	jb     0x1400185ed
   140018584:	je     0x1400185eb
   140018586:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140018588:	movsxd ebp,DWORD PTR [rbx+0x65]
   14001858b:	fs rex
   14001858d:	rex.XB push r10
   14001858f:	gs (bad) 
   140018591:	fs gs jb 0x1400185ec
   140018595:	jb     0x140018600
   140018597:	je     0x1400185fe
   140018599:	jb     0x1400185e7
   14001859b:	outs   dx,DWORD PTR ds:[rsi]
   14001859c:	movsxd ebp,DWORD PTR [rbx+0x32]
   14001859f:	rex
   1400185a0:	rex push rcx
   1400185a2:	rex.RB
   1400185a3:	rex.X
   1400185a4:	pop    r15
   1400185a6:	rex.WRX pop rax
   1400185a8:	pop    rdx
   1400185a9:	add    BYTE PTR [rdi],bh
   1400185ab:	rex.WB jae 0x140018605
   1400185ae:	jb     0x140018619
   1400185b0:	je     0x140018617
   1400185b2:	rex.WR outs dx,DWORD PTR ds:[rsi]
   1400185b4:	movsxd ebp,DWORD PTR [rbx+0x65]
   1400185b7:	fs rex
   1400185b9:	rex.XB push r10
   1400185bb:	gs (bad) 
   1400185bd:	fs gs jb 0x140018618
   1400185c1:	jb     0x14001862c
   1400185c3:	je     0x14001862a
   1400185c5:	jb     0x140018613
   1400185c7:	outs   dx,DWORD PTR ds:[rsi]
   1400185c8:	movsxd ebp,DWORD PTR [rbx+0x33]
   1400185cb:	rex
   1400185cc:	rex push rcx
   1400185ce:	rex.RB
   1400185cf:	rex.X
   1400185d0:	pop    r15
   1400185d2:	rex.WRX pop rax
   1400185d4:	pop    rdx
   1400185d5:	add    BYTE PTR [rdi],bh
   1400185d7:	rex.WB jae 0x140018631
   1400185da:	jb     0x140018645
   1400185dc:	je     0x140018643
   1400185de:	rex.WR outs dx,DWORD PTR ds:[rsi]
   1400185e0:	movsxd ebp,DWORD PTR [rbx+0x65]
   1400185e3:	fs rex
   1400185e5:	rex.XB push r10
   1400185e7:	gs (bad) 
   1400185e9:	fs gs jb 0x140018644
   1400185ed:	jb     0x140018658
   1400185ef:	je     0x140018656
   1400185f1:	jb     0x14001863f
   1400185f3:	outs   dx,DWORD PTR ds:[rsi]
   1400185f4:	movsxd ebp,DWORD PTR [rbx+0x40]
   1400185f7:	rex push rcx
   1400185f9:	rex.RB
   1400185fa:	rex.X
   1400185fb:	pop    r15
   1400185fd:	rex.WRX pop rax
   1400185ff:	pop    rdx
   140018600:	add    BYTE PTR [rdi],bh
   140018602:	rex.WB jae 0x14001865c
   140018605:	jb     0x140018670
   140018607:	je     0x14001866e
   140018609:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14001860b:	movsxd ebp,DWORD PTR [rbx+0x65]
   14001860e:	fs rex
   140018610:	rex.XB push r10
   140018612:	je     0x140018680
   140018614:	push   rdx
   140018615:	gs jae 0x140018687
   140018618:	jne    0x14001868c
   14001861a:	movsxd esp,DWORD PTR [rbp+0x40]
   14001861d:	rex push rcx
   14001861f:	rex.RB
   140018620:	rex.X
   140018621:	pop    r15
   140018623:	rex.WRX pop rax
   140018625:	pop    rdx
   140018626:	add    BYTE PTR [rdi],bh
   140018628:	rex.WB jae 0x140018682
   14001862b:	jb     0x140018696
   14001862d:	je     0x140018694
   14001862f:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140018631:	movsxd ebp,DWORD PTR [rbx+0x65]
   140018634:	fs rex
   140018636:	rex.XB push r11
   140018638:	push   0x4c657261
   14001863d:	outs   dx,DWORD PTR ds:[rsi]
   14001863e:	movsxd ebp,DWORD PTR [rbx+0x40]
   140018641:	rex push rcx
   140018643:	rex.RB
   140018644:	rex.X
   140018645:	pop    r15
   140018647:	rex.WRX pop rax
   140018649:	pop    rdx
   14001864a:	add    BYTE PTR [rdi],bh
   14001864c:	rex.WB jae 0x1400186a6
   14001864f:	jb     0x1400186ba
   140018651:	je     0x1400186b8
   140018653:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140018655:	movsxd ebp,DWORD PTR [rbx+0x65]
   140018658:	fs rex
   14001865a:	rex.XB push r11
   14001865c:	ins    DWORD PTR es:[rdi],dx
   14001865d:	(bad)  
   14001865e:	ins    BYTE PTR es:[rdi],dx
   14001865f:	ins    BYTE PTR es:[rdi],dx
   140018660:	push   rbx
   140018661:	jo     0x1400186cc
   140018663:	outs   dx,BYTE PTR ds:[rsi]
   140018664:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140018666:	movsxd ebp,DWORD PTR [rbx+0x40]
   140018669:	rex push rcx
   14001866b:	rex.RB
   14001866c:	rex.X
   14001866d:	pop    r15
   14001866f:	rex.WRX pop rax
   140018671:	pop    rdx
   140018672:	add    BYTE PTR [rdi],bh
   140018674:	rex.WB jae 0x1400186ce
   140018677:	jb     0x1400186e2
   140018679:	je     0x1400186e0
   14001867b:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14001867d:	movsxd ebp,DWORD PTR [rbx+0x65]
   140018680:	fs rex
   140018682:	rex.XB push r11
   140018684:	jo     0x1400186ef
   140018686:	outs   dx,BYTE PTR ds:[rsi]
   140018687:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140018689:	movsxd ebp,DWORD PTR [rbx+0x40]
   14001868c:	rex push rcx
   14001868e:	rex.RB
   14001868f:	rex.X
   140018690:	pop    r15
   140018692:	rex.WRX pop rax
   140018694:	pop    rdx
   140018695:	add    BYTE PTR [rdi],bh
   140018697:	rex.WB jae 0x1400186f1
   14001869a:	jb     0x140018705
   14001869c:	je     0x140018703
   14001869e:	push   rbp
   14001869f:	outs   dx,BYTE PTR ds:[rsi]
   1400186a0:	ins    BYTE PTR es:[rdi],dx
   1400186a1:	outs   dx,DWORD PTR ds:[rsi]
   1400186a2:	movsxd ebp,DWORD PTR [rbx+0x65]
   1400186a5:	fs rex
   1400186a7:	rex.XB
   1400186a8:	rex.XB jb 0x140018714
   1400186ab:	je     0x140018700
   1400186ad:	movsxd eax,DWORD PTR gs:[rax+0x40]
   1400186b1:	push   rcx
   1400186b2:	rex.RB
   1400186b3:	rex.X
   1400186b4:	pop    r15
   1400186b6:	rex.WRX pop rax
   1400186b8:	pop    rdx
   1400186b9:	add    BYTE PTR [rdi],bh
   1400186bb:	rex.WB jae 0x140018715
   1400186be:	jb     0x140018729
   1400186c0:	je     0x140018727
   1400186c2:	push   rbp
   1400186c3:	outs   dx,BYTE PTR ds:[rsi]
   1400186c4:	ins    BYTE PTR es:[rdi],dx
   1400186c5:	outs   dx,DWORD PTR ds:[rsi]
   1400186c6:	movsxd ebp,DWORD PTR [rbx+0x65]
   1400186c9:	fs rex
   1400186cb:	rex.XB
   1400186cc:	rex.RX (bad) 
   1400186ce:	imul   esp,DWORD PTR [rbp+0x4c],0x6f
   1400186d2:	movsxd ebp,DWORD PTR [rbx+0x40]
   1400186d5:	rex push rcx
   1400186d7:	rex.RB
   1400186d8:	rex.X
   1400186d9:	pop    r15
   1400186db:	rex.WRX pop rax
   1400186dd:	pop    rdx
   1400186de:	add    BYTE PTR [rdi],bh
   1400186e0:	rex.WB jae 0x14001873a
   1400186e3:	jb     0x14001874e
   1400186e5:	je     0x14001874c
   1400186e7:	push   rbp
   1400186e8:	outs   dx,BYTE PTR ds:[rsi]
   1400186e9:	ins    BYTE PTR es:[rdi],dx
   1400186ea:	outs   dx,DWORD PTR ds:[rsi]
   1400186eb:	movsxd ebp,DWORD PTR [rbx+0x65]
   1400186ee:	fs rex
   1400186f0:	rex.XB push r10
   1400186f2:	gs (bad) 
   1400186f4:	fs gs jb 0x14001874f
   1400186f8:	jb     0x140018763
   1400186fa:	je     0x140018761
   1400186fc:	jb     0x14001874a
   1400186fe:	outs   dx,DWORD PTR ds:[rsi]
   1400186ff:	movsxd ebp,DWORD PTR [rbx+0x32]
   140018702:	rex
   140018703:	rex push rcx
   140018705:	rex.RB
   140018706:	rex.X
   140018707:	pop    r15
   140018709:	rex.WRX pop rax
   14001870b:	pop    rdx
   14001870c:	add    BYTE PTR [rdi],bh
   14001870e:	rex.WB jae 0x140018768
   140018711:	jb     0x14001877c
   140018713:	je     0x14001877a
   140018715:	push   rbp
   140018716:	outs   dx,BYTE PTR ds:[rsi]
   140018717:	ins    BYTE PTR es:[rdi],dx
   140018718:	outs   dx,DWORD PTR ds:[rsi]
   140018719:	movsxd ebp,DWORD PTR [rbx+0x65]
   14001871c:	fs rex
   14001871e:	rex.XB push r10
   140018720:	gs (bad) 
   140018722:	fs gs jb 0x14001877d
   140018726:	jb     0x140018791
   140018728:	je     0x14001878f
   14001872a:	jb     0x140018778
   14001872c:	outs   dx,DWORD PTR ds:[rsi]
   14001872d:	movsxd ebp,DWORD PTR [rbx+0x33]
   140018730:	rex
   140018731:	rex push rcx
   140018733:	rex.RB
   140018734:	rex.X
   140018735:	pop    r15
   140018737:	rex.WRX pop rax
   140018739:	pop    rdx
   14001873a:	add    BYTE PTR [rdi],bh
   14001873c:	rex.WB jae 0x140018796
   14001873f:	jb     0x1400187aa
   140018741:	je     0x1400187a8
   140018743:	push   rbp
   140018744:	outs   dx,BYTE PTR ds:[rsi]
   140018745:	ins    BYTE PTR es:[rdi],dx
   140018746:	outs   dx,DWORD PTR ds:[rsi]
   140018747:	movsxd ebp,DWORD PTR [rbx+0x65]
   14001874a:	fs rex
   14001874c:	rex.XB push r10
   14001874e:	gs (bad) 
   140018750:	fs gs jb 0x1400187ab
   140018754:	jb     0x1400187bf
   140018756:	je     0x1400187bd
   140018758:	jb     0x1400187a6
   14001875a:	outs   dx,DWORD PTR ds:[rsi]
   14001875b:	movsxd ebp,DWORD PTR [rbx+0x40]
   14001875e:	rex push rcx
   140018760:	rex.RB
   140018761:	rex.X
   140018762:	pop    r15
   140018764:	rex.WRX pop rax
   140018766:	pop    rdx
   140018767:	add    BYTE PTR [rdi],bh
   140018769:	rex.WB jae 0x1400187c3
   14001876c:	jb     0x1400187d7
   14001876e:	je     0x1400187d5
   140018770:	push   rbp
   140018771:	outs   dx,BYTE PTR ds:[rsi]
   140018772:	ins    BYTE PTR es:[rdi],dx
   140018773:	outs   dx,DWORD PTR ds:[rsi]
   140018774:	movsxd ebp,DWORD PTR [rbx+0x65]
   140018777:	fs rex
   140018779:	rex.XB push r10
   14001877b:	je     0x1400187e9
   14001877d:	push   rdx
   14001877e:	gs jae 0x1400187f0
   140018781:	jne    0x1400187f5
   140018783:	movsxd esp,DWORD PTR [rbp+0x40]
   140018786:	rex push rcx
   140018788:	rex.RB
   140018789:	rex.X
   14001878a:	pop    r15
   14001878c:	rex.WRX pop rax
   14001878e:	pop    rdx
   14001878f:	add    BYTE PTR [rdi],bh
   140018791:	rex.WB jae 0x1400187eb
   140018794:	jb     0x1400187ff
   140018796:	je     0x1400187fd
   140018798:	push   rbp
   140018799:	outs   dx,BYTE PTR ds:[rsi]
   14001879a:	ins    BYTE PTR es:[rdi],dx
   14001879b:	outs   dx,DWORD PTR ds:[rsi]
   14001879c:	movsxd ebp,DWORD PTR [rbx+0x65]
   14001879f:	fs rex
   1400187a1:	rex.XB push r11
   1400187a3:	push   0x4c657261
   1400187a8:	outs   dx,DWORD PTR ds:[rsi]
   1400187a9:	movsxd ebp,DWORD PTR [rbx+0x40]
   1400187ac:	rex push rcx
   1400187ae:	rex.RB
   1400187af:	rex.X
   1400187b0:	pop    r15
   1400187b2:	rex.WRX pop rax
   1400187b4:	pop    rdx
   1400187b5:	add    BYTE PTR [rdi],bh
   1400187b7:	rex.WB jae 0x140018811
   1400187ba:	jb     0x140018825
   1400187bc:	je     0x140018823
   1400187be:	push   rbp
   1400187bf:	outs   dx,BYTE PTR ds:[rsi]
   1400187c0:	ins    BYTE PTR es:[rdi],dx
   1400187c1:	outs   dx,DWORD PTR ds:[rsi]
   1400187c2:	movsxd ebp,DWORD PTR [rbx+0x65]
   1400187c5:	fs rex
   1400187c7:	rex.XB push r11
   1400187c9:	ins    DWORD PTR es:[rdi],dx
   1400187ca:	(bad)  
   1400187cb:	ins    BYTE PTR es:[rdi],dx
   1400187cc:	ins    BYTE PTR es:[rdi],dx
   1400187cd:	push   rbx
   1400187ce:	jo     0x140018839
   1400187d0:	outs   dx,BYTE PTR ds:[rsi]
   1400187d1:	rex.WR outs dx,DWORD PTR ds:[rsi]
   1400187d3:	movsxd ebp,DWORD PTR [rbx+0x40]
   1400187d6:	rex push rcx
   1400187d8:	rex.RB
   1400187d9:	rex.X
   1400187da:	pop    r15
   1400187dc:	rex.WRX pop rax
   1400187de:	pop    rdx
   1400187df:	add    BYTE PTR [rdi],bh
   1400187e1:	rex.WB jae 0x14001883b
   1400187e4:	jb     0x14001884f
   1400187e6:	je     0x14001884d
   1400187e8:	push   rbp
   1400187e9:	outs   dx,BYTE PTR ds:[rsi]
   1400187ea:	ins    BYTE PTR es:[rdi],dx
   1400187eb:	outs   dx,DWORD PTR ds:[rsi]
   1400187ec:	movsxd ebp,DWORD PTR [rbx+0x65]
   1400187ef:	fs rex
   1400187f1:	rex.XB push r11
   1400187f3:	jo     0x14001885e
   1400187f5:	outs   dx,BYTE PTR ds:[rsi]
   1400187f6:	rex.WR outs dx,DWORD PTR ds:[rsi]
   1400187f8:	movsxd ebp,DWORD PTR [rbx+0x40]
   1400187fb:	rex push rcx
   1400187fd:	rex.RB
   1400187fe:	rex.X
   1400187ff:	pop    r15
   140018801:	rex.WRX pop rax
   140018803:	pop    rdx
   140018804:	add    BYTE PTR [rdi],bh
   140018806:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140018808:	(bad)  
   140018809:	fs push rbx
   14001880b:	je     0x14001887f
   14001880d:	imul   ebp,DWORD PTR [rsi+0x67],0x54534057
   140018814:	push   rdx
   140018815:	rex.B
   140018816:	rex
   140018817:	rex push rcx
   140018819:	rex.RB
   14001881a:	rex.B
   14001881b:	rex.B
   14001881c:	rex.WX
   14001881d:	rex.WXB push r8
   14001881f:	rex.RB
   140018820:	push   r13
   140018822:	rex.W
   140018823:	rex.WB
   140018824:	rex.WRX push rbx
   140018826:	push   rsp
   140018827:	rex.B
   140018828:	rex.WRX
   140018829:	rex.XB
   14001882a:	rex.RB pop r15
   14001882c:	pop    rdi
   14001882d:	rex
   14001882e:	rex
   14001882f:	rex pop rdx
   140018831:	add    BYTE PTR [rdi],bh
   140018833:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140018835:	(bad)  
   140018836:	fs push rbx
   140018838:	je     0x1400188ac
   14001883a:	imul   ebp,DWORD PTR [rsi+0x67],0x54534057
   140018841:	push   rdx
   140018842:	rex.B
   140018843:	rex
   140018844:	rex push rcx
   140018846:	rex.RB
   140018847:	rex.B
   140018848:	rex.B
   140018849:	rex.WX
   14001884a:	rex.WXB push r8
   14001884c:	rex.RB
   14001884d:	rex.X
   14001884e:	rex.R
   14001884f:	rex.WXB
   140018850:	rex pop rdx
   140018852:	add    BYTE PTR [rdi],bh
   140018854:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140018856:	movsxd ebp,DWORD PTR [rbx+0x40]
   140018859:	push   rsp
   14001885a:	push   rbx
   14001885b:	pop    rdi
   14001885c:	push   rdx
   14001885d:	rex.RB push r11
   14001885f:	rex.WRXB push r13
   140018861:	push   rdx
   140018862:	rex.XB
   140018863:	rex.RB
   140018864:	rex
   140018865:	rex push rcx
   140018867:	rex.RB
   140018868:	rex.B
   140018869:	pop    r8
   14001886b:	push   rdi
   14001886c:	xor    al,0x54
   14001886e:	push   rbx
   14001886f:	push   rdx
   140018870:	rex.RB push r11
   140018872:	pop    rdi
   140018873:	rex.WR
   140018874:	rex.WRXB
   140018875:	rex.XB
   140018876:	rex.WXB pop r15
   140018878:	push   rsp
   140018879:	pop    rcx
   14001887a:	push   rax
   14001887b:	rex.RB
   14001887c:	rex
   14001887d:	rex
   14001887e:	rex pop rdx
   140018880:	add    BYTE PTR [rdi],bh
   140018882:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140018884:	movsxd ebp,DWORD PTR [rbx+0x54]
   140018887:	jns    0x1400188f9
   140018889:	gs rex (bad) 
   14001888c:	and    al,0x43
   14001888e:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140018890:	movsxd ebp,DWORD PTR [rbx+0x42]
   140018893:	(bad)  
   140018894:	jae    0x1400188fb
   140018896:	and    al,0x30
   140018899:	xor    BYTE PTR [rax+rsi*1],ah
   14001889c:	xor    BYTE PTR [rax+rsi*1],ah
   14001889f:	xor    ah,BYTE PTR [rax+rsi*1]
   1400188a2:	xor    BYTE PTR [rax+rsi*1],ah
   1400188a5:	xor    ah,BYTE PTR [rax+rsi*1]
   1400188a8:	xor    DWORD PTR [rax+0x40],eax
   1400188ab:	push   rbx
   1400188ac:	rex.B (bad) 
   1400188ae:	push   r15
   1400188b0:	xor    al,0x4c
   1400188b2:	rex.WRXB
   1400188b3:	rex.XB
   1400188b4:	rex.WXB pop r15
   1400188b6:	rex.WR
   1400188b7:	rex.WRXB
   1400188b8:	rex.XB
   1400188b9:	rex.WXB push r12
   1400188bb:	pop    rcx
   1400188bc:	push   rax
   1400188bd:	rex.RB
   1400188be:	rex
   1400188bf:	rex pop rax
   1400188c1:	pop    rdx
   1400188c2:	add    BYTE PTR [rdi],bh
   1400188c4:	rex.WR outs dx,DWORD PTR ds:[rsi]
   1400188c6:	movsxd ebp,DWORD PTR [rbx+0x54]
   1400188c9:	jns    0x14001893b
   1400188cb:	gs rex (bad) 
   1400188ce:	and    al,0x43
   1400188d0:	rex.WR outs dx,DWORD PTR ds:[rsi]
   1400188d2:	movsxd ebp,DWORD PTR [rbx+0x42]
   1400188d5:	(bad)  
   1400188d6:	jae    0x14001893d
   1400188d8:	and    al,0x30
   1400188db:	xor    DWORD PTR [rax+rsi*1],esp
   1400188de:	xor    BYTE PTR [rax+rsi*1],ah
   1400188e1:	xor    BYTE PTR [rax+rsi*1],ah
   1400188e4:	xor    BYTE PTR [rax+rsi*1],ah
   1400188e7:	xor    ah,BYTE PTR [rax+rsi*1]
   1400188ea:	xor    DWORD PTR [rax+0x40],eax
   1400188ed:	push   rbx
   1400188ee:	rex.B (bad) 
   1400188f0:	push   r15
   1400188f2:	xor    al,0x4c
   1400188f4:	rex.WRXB
   1400188f5:	rex.XB
   1400188f6:	rex.WXB pop r15
   1400188f8:	rex.WR
   1400188f9:	rex.WRXB
   1400188fa:	rex.XB
   1400188fb:	rex.WXB push r12
   1400188fd:	pop    rcx
   1400188fe:	push   rax
   1400188ff:	rex.RB
   140018900:	rex
   140018901:	rex pop rax
   140018903:	pop    rdx
   140018904:	add    BYTE PTR [rdi],bh
   140018906:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140018908:	movsxd ebp,DWORD PTR [rbx+0x54]
   14001890b:	jns    0x14001897d
   14001890d:	gs rex (bad) 
   140018910:	and    al,0x43
   140018912:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140018914:	movsxd ebp,DWORD PTR [rbx+0x42]
   140018917:	(bad)  
   140018918:	jae    0x14001897f
   14001891a:	and    al,0x30
   14001891d:	xor    ah,BYTE PTR [rax+rsi*1]
   140018920:	xor    BYTE PTR [rax+rsi*1],ah
   140018923:	xor    BYTE PTR [rax+rsi*1],ah
   140018926:	xor    BYTE PTR [rax+rsi*1],ah
   140018929:	xor    BYTE PTR [rax+rsi*1],ah
   14001892c:	xor    BYTE PTR [rax+0x40],al
   14001892f:	push   rbx
   140018930:	rex.B (bad) 
   140018932:	push   r15
   140018934:	xor    al,0x4c
   140018936:	rex.WRXB
   140018937:	rex.XB
   140018938:	rex.WXB pop r15
   14001893a:	rex.WR
   14001893b:	rex.WRXB
   14001893c:	rex.XB
   14001893d:	rex.WXB push r12
   14001893f:	pop    rcx
   140018940:	push   rax
   140018941:	rex.RB
   140018942:	rex
   140018943:	rex pop rax
   140018945:	pop    rdx
   140018946:	add    BYTE PTR [rdi],bh
   140018948:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14001894a:	movsxd ebp,DWORD PTR [rbx+0x54]
   14001894d:	jns    0x1400189bf
   14001894f:	gs rex (bad) 
   140018952:	and    al,0x43
   140018954:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140018956:	movsxd ebp,DWORD PTR [rbx+0x42]
   140018959:	(bad)  
   14001895a:	jae    0x1400189c1
   14001895c:	and    al,0x30
   14001895f:	xor    esp,DWORD PTR [rax+rsi*1]
   140018962:	xor    BYTE PTR [rax+rsi*1],ah
   140018965:	xor    BYTE PTR [rax+rsi*1],ah
   140018968:	xor    DWORD PTR [rax+rsi*1],esp
   14001896b:	xor    ah,BYTE PTR [rax+rsi*1]
   14001896e:	xor    al,BYTE PTR [rax+0x40]
   140018971:	push   rbx
   140018972:	rex.B (bad) 
   140018974:	push   r15
   140018976:	xor    al,0x4c
   140018978:	rex.WRXB
   140018979:	rex.XB
   14001897a:	rex.WXB pop r15
   14001897c:	rex.WR
   14001897d:	rex.WRXB
   14001897e:	rex.XB
   14001897f:	rex.WXB push r12
   140018981:	pop    rcx
   140018982:	push   rax
   140018983:	rex.RB
   140018984:	rex
   140018985:	rex pop rax
   140018987:	pop    rdx
   140018988:	add    BYTE PTR [rdi],bh
   14001898a:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14001898c:	movsxd ebp,DWORD PTR [rbx+0x54]
   14001898f:	jns    0x140018a01
   140018991:	gs rex (bad) 
   140018994:	and    al,0x43
   140018996:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140018998:	movsxd ebp,DWORD PTR [rbx+0x42]
   14001899b:	(bad)  
   14001899c:	jae    0x140018a03
   14001899e:	and    al,0x30
   1400189a1:	xor    al,0x24
   1400189a3:	xor    BYTE PTR [rcx],dh
   1400189a5:	and    al,0x30
   1400189a7:	xor    BYTE PTR [rax+rsi*1],ah
   1400189aa:	xor    DWORD PTR [rax+rsi*1],esp
   1400189ad:	xor    ah,BYTE PTR [rax+rsi*1]
   1400189b0:	xor    al,BYTE PTR [rax+0x40]
   1400189b3:	push   rbx
   1400189b4:	rex.B (bad) 
   1400189b6:	push   r15
   1400189b8:	xor    al,0x4c
   1400189ba:	rex.WRXB
   1400189bb:	rex.XB
   1400189bc:	rex.WXB pop r15
   1400189be:	rex.WR
   1400189bf:	rex.WRXB
   1400189c0:	rex.XB
   1400189c1:	rex.WXB push r12
   1400189c3:	pop    rcx
   1400189c4:	push   rax
   1400189c5:	rex.RB
   1400189c6:	rex
   1400189c7:	rex pop rax
   1400189c9:	pop    rdx
   1400189ca:	add    BYTE PTR [rdi],bh
   1400189cc:	rex.WR outs dx,DWORD PTR ds:[rsi]
   1400189ce:	movsxd ebp,DWORD PTR [rbx+0x54]
   1400189d1:	jns    0x140018a43
   1400189d3:	gs rex (bad) 
   1400189d6:	and    al,0x43
   1400189d8:	rex.WR outs dx,DWORD PTR ds:[rsi]
   1400189da:	movsxd ebp,DWORD PTR [rbx+0x42]
   1400189dd:	(bad)  
   1400189de:	jae    0x140018a45
   1400189e0:	and    al,0x30
   1400189e3:	xor    eax,0x24313024
   1400189e8:	xor    BYTE PTR [rax],dh
   1400189ea:	and    al,0x30
   1400189ec:	xor    DWORD PTR [rax+rsi*1],esp
   1400189ef:	xor    ah,BYTE PTR [rax+rsi*1]
   1400189f2:	xor    al,BYTE PTR [rax+0x40]
   1400189f5:	push   rbx
   1400189f6:	rex.B (bad) 
   1400189f8:	push   r15
   1400189fa:	xor    al,0x4c
   1400189fc:	rex.WRXB
   1400189fd:	rex.XB
   1400189fe:	rex.WXB pop r15
   140018a00:	rex.WR
   140018a01:	rex.WRXB
   140018a02:	rex.XB
   140018a03:	rex.WXB push r12
   140018a05:	pop    rcx
   140018a06:	push   rax
   140018a07:	rex.RB
   140018a08:	rex
   140018a09:	rex pop rax
   140018a0b:	pop    rdx
   140018a0c:	add    BYTE PTR [rdi],bh
   140018a0e:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140018a10:	movsxd ebp,DWORD PTR [rbx+0x54]
   140018a13:	jns    0x140018a85
   140018a15:	gs rex (bad) 
   140018a18:	and    al,0x43
   140018a1a:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140018a1c:	movsxd ebp,DWORD PTR [rbx+0x42]
   140018a1f:	(bad)  
   140018a20:	jae    0x140018a87
   140018a22:	and    al,0x30
   140018a25:	ss and al,0x30
   140018a28:	xor    DWORD PTR [rax+rsi*1],esp
   140018a2b:	xor    DWORD PTR [rax+rsi*1],esp
   140018a2e:	xor    BYTE PTR [rax+rsi*1],ah
   140018a31:	xor    ah,BYTE PTR [rax+rsi*1]
   140018a34:	xor    DWORD PTR [rax+0x40],eax
   140018a37:	push   rbx
   140018a38:	rex.B (bad) 
   140018a3a:	push   r15
   140018a3c:	xor    al,0x4c
   140018a3e:	rex.WRXB
   140018a3f:	rex.XB
   140018a40:	rex.WXB pop r15
   140018a42:	rex.WR
   140018a43:	rex.WRXB
   140018a44:	rex.XB
   140018a45:	rex.WXB push r12
   140018a47:	pop    rcx
   140018a48:	push   rax
   140018a49:	rex.RB
   140018a4a:	rex
   140018a4b:	rex pop rax
   140018a4d:	pop    rdx
   140018a4e:	add    BYTE PTR [rdi],bh
   140018a50:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140018a52:	movsxd ebp,DWORD PTR [rbx+0x54]
   140018a55:	jns    0x140018ac7
   140018a57:	gs rex (bad) 
   140018a5a:	and    al,0x43
   140018a5c:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140018a5e:	movsxd ebp,DWORD PTR [rbx+0x42]
   140018a61:	(bad)  
   140018a62:	jae    0x140018ac9
   140018a64:	and    al,0x30
   140018a67:	(bad)  
   140018a68:	and    al,0x30
   140018a6a:	xor    DWORD PTR [rax+rsi*1],esp
   140018a6d:	xor    DWORD PTR [rax+rsi*1],esp
   140018a70:	xor    BYTE PTR [rax+rsi*1],ah
   140018a73:	xor    ah,BYTE PTR [rax+rsi*1]
   140018a76:	xor    DWORD PTR [rax+0x40],eax
   140018a79:	push   rbx
   140018a7a:	rex.B (bad) 
   140018a7c:	push   r15
   140018a7e:	xor    al,0x4c
   140018a80:	rex.WRXB
   140018a81:	rex.XB
   140018a82:	rex.WXB pop r15
   140018a84:	rex.WR
   140018a85:	rex.WRXB
   140018a86:	rex.XB
   140018a87:	rex.WXB push r12
   140018a89:	pop    rcx
   140018a8a:	push   rax
   140018a8b:	rex.RB
   140018a8c:	rex
   140018a8d:	rex pop rax
   140018a8f:	pop    rdx
   140018a90:	add    BYTE PTR [rdi],bh
   140018a92:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140018a94:	movsxd ebp,DWORD PTR [rbx+0x54]
   140018a97:	jns    0x140018b09
   140018a99:	gs rex (bad) 
   140018a9c:	and    al,0x43
   140018a9e:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140018aa0:	movsxd ebp,DWORD PTR [rbx+0x42]
   140018aa3:	(bad)  
   140018aa4:	jae    0x140018b0b
   140018aa6:	and    al,0x30
   140018aa9:	cmp    BYTE PTR [rax+rsi*1],ah
   140018aac:	xor    DWORD PTR [rax+rsi*1],esp
   140018aaf:	xor    BYTE PTR [rax+rsi*1],ah
   140018ab2:	xor    BYTE PTR [rax+rsi*1],ah
   140018ab5:	xor    ah,BYTE PTR [rax+rsi*1]
   140018ab8:	xor    DWORD PTR [rax+0x40],eax
   140018abb:	push   rbx
   140018abc:	rex.B (bad) 
   140018abe:	push   r15
   140018ac0:	xor    al,0x4c
   140018ac2:	rex.WRXB
   140018ac3:	rex.XB
   140018ac4:	rex.WXB pop r15
   140018ac6:	rex.WR
   140018ac7:	rex.WRXB
   140018ac8:	rex.XB
   140018ac9:	rex.WXB push r12
   140018acb:	pop    rcx
   140018acc:	push   rax
   140018acd:	rex.RB
   140018ace:	rex
   140018acf:	rex pop rax
   140018ad1:	pop    rdx
   140018ad2:	add    BYTE PTR [rdi],bh
   140018ad4:	rex.WRB jne 0x140018b4b
   140018ad7:	gs js  0x140018b2e
   140018ada:	jns    0x140018b4c
   140018adc:	gs rex (bad) 
   140018adf:	and    al,0x43
   140018ae1:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140018ae3:	movsxd ebp,DWORD PTR [rbx+0x42]
   140018ae6:	(bad)  
   140018ae7:	jae    0x140018b4e
   140018ae9:	and    al,0x30
   140018aec:	xor    BYTE PTR [rax+rsi*1],ah
   140018aef:	xor    BYTE PTR [rax+rsi*1],ah
   140018af2:	xor    ah,BYTE PTR [rax+rsi*1]
   140018af5:	xor    BYTE PTR [rax+rsi*1],ah
   140018af8:	xor    ah,BYTE PTR [rax+rsi*1]
   140018afb:	xor    DWORD PTR [rax+0x40],eax
   140018afe:	push   rbx
   140018aff:	rex.B (bad) 
   140018b01:	push   r15
   140018b03:	xor    al,0x4c
   140018b05:	rex.WRXB
   140018b06:	rex.XB
   140018b07:	rex.WXB pop r15
   140018b09:	push   rdx
   140018b0a:	push   rdi
   140018b0b:	pop    rdi
   140018b0c:	rex.WRB push r13
   140018b0e:	push   rsp
   140018b0f:	rex.RB pop r8
   140018b11:	rex
   140018b12:	rex pop rax
   140018b14:	pop    rdx
   140018b15:	add    BYTE PTR [rdi],bh
   140018b17:	rex.WRB jne 0x140018b8e
   140018b1a:	gs js  0x140018b71
   140018b1d:	jns    0x140018b8f
   140018b1f:	gs rex (bad) 
   140018b22:	and    al,0x43
   140018b24:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140018b26:	movsxd ebp,DWORD PTR [rbx+0x42]
   140018b29:	(bad)  
   140018b2a:	jae    0x140018b91
   140018b2c:	and    al,0x30
   140018b2f:	xor    DWORD PTR [rax+rsi*1],esp
   140018b32:	xor    BYTE PTR [rax+rsi*1],ah
   140018b35:	xor    BYTE PTR [rax+rsi*1],ah
   140018b38:	xor    BYTE PTR [rax+rsi*1],ah
   140018b3b:	xor    ah,BYTE PTR [rax+rsi*1]
   140018b3e:	xor    DWORD PTR [rax+0x40],eax
   140018b41:	push   rbx
   140018b42:	rex.B (bad) 
   140018b44:	push   r15
   140018b46:	xor    al,0x4c
   140018b48:	rex.WRXB
   140018b49:	rex.XB
   140018b4a:	rex.WXB pop r15
   140018b4c:	push   rdx
   140018b4d:	push   rdi
   140018b4e:	pop    rdi
   140018b4f:	rex.WRB push r13
   140018b51:	push   rsp
   140018b52:	rex.RB pop r8
   140018b54:	rex
   140018b55:	rex pop rax
   140018b57:	pop    rdx
   140018b58:	add    BYTE PTR [rdi],bh
   140018b5a:	rex.WRB jne 0x140018bd1
   140018b5d:	gs js  0x140018bb4
   140018b60:	jns    0x140018bd2
   140018b62:	gs rex (bad) 
   140018b65:	and    al,0x43
   140018b67:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140018b69:	movsxd ebp,DWORD PTR [rbx+0x42]
   140018b6c:	(bad)  
   140018b6d:	jae    0x140018bd4
   140018b6f:	and    al,0x30
   140018b72:	xor    ah,BYTE PTR [rax+rsi*1]
   140018b75:	xor    BYTE PTR [rax+rsi*1],ah
   140018b78:	xor    BYTE PTR [rax+rsi*1],ah
   140018b7b:	xor    BYTE PTR [rax+rsi*1],ah
   140018b7e:	xor    BYTE PTR [rax+rsi*1],ah
   140018b81:	xor    BYTE PTR [rax+0x40],al
   140018b84:	push   rbx
   140018b85:	rex.B (bad) 
   140018b87:	push   r15
   140018b89:	xor    al,0x4c
   140018b8b:	rex.WRXB
   140018b8c:	rex.XB
   140018b8d:	rex.WXB pop r15
   140018b8f:	push   rdx
   140018b90:	push   rdi
   140018b91:	pop    rdi
   140018b92:	rex.WRB push r13
   140018b94:	push   rsp
   140018b95:	rex.RB pop r8
   140018b97:	rex
   140018b98:	rex pop rax
   140018b9a:	pop    rdx
   140018b9b:	add    BYTE PTR [rdi],bh
   140018b9d:	rex.WRB jne 0x140018c14
   140018ba0:	gs js  0x140018bf7
   140018ba3:	jns    0x140018c15
   140018ba5:	gs rex (bad) 
   140018ba8:	and    al,0x43
   140018baa:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140018bac:	movsxd ebp,DWORD PTR [rbx+0x42]
   140018baf:	(bad)  
   140018bb0:	jae    0x140018c17
   140018bb2:	and    al,0x30
   140018bb5:	xor    esp,DWORD PTR [rax+rsi*1]
   140018bb8:	xor    BYTE PTR [rax+rsi*1],ah
   140018bbb:	xor    BYTE PTR [rax+rsi*1],ah
   140018bbe:	xor    DWORD PTR [rax+rsi*1],esp
   140018bc1:	xor    ah,BYTE PTR [rax+rsi*1]
   140018bc4:	xor    al,BYTE PTR [rax+0x40]
   140018bc7:	push   rbx
   140018bc8:	rex.B (bad) 
   140018bca:	push   r15
   140018bcc:	xor    al,0x4c
   140018bce:	rex.WRXB
   140018bcf:	rex.XB
   140018bd0:	rex.WXB pop r15
   140018bd2:	push   rdx
   140018bd3:	push   rdi
   140018bd4:	pop    rdi
   140018bd5:	rex.WRB push r13
   140018bd7:	push   rsp
   140018bd8:	rex.RB pop r8
   140018bda:	rex
   140018bdb:	rex pop rax
   140018bdd:	pop    rdx
   140018bde:	add    BYTE PTR [rdi],bh
   140018be0:	rex.WRB jne 0x140018c57
   140018be3:	gs js  0x140018c3a
   140018be6:	jns    0x140018c58
   140018be8:	gs rex (bad) 
   140018beb:	and    al,0x43
   140018bed:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140018bef:	movsxd ebp,DWORD PTR [rbx+0x42]
   140018bf2:	(bad)  
   140018bf3:	jae    0x140018c5a
   140018bf5:	and    al,0x30
   140018bf8:	xor    al,0x24
   140018bfa:	xor    BYTE PTR [rcx],dh
   140018bfc:	and    al,0x30
   140018bfe:	xor    BYTE PTR [rax+rsi*1],ah
   140018c01:	xor    DWORD PTR [rax+rsi*1],esp
   140018c04:	xor    ah,BYTE PTR [rax+rsi*1]
   140018c07:	xor    al,BYTE PTR [rax+0x40]
   140018c0a:	push   rbx
   140018c0b:	rex.B (bad) 
   140018c0d:	push   r15
   140018c0f:	xor    al,0x4c
   140018c11:	rex.WRXB
   140018c12:	rex.XB
   140018c13:	rex.WXB pop r15
   140018c15:	push   rdx
   140018c16:	push   rdi
   140018c17:	pop    rdi
   140018c18:	rex.WRB push r13
   140018c1a:	push   rsp
   140018c1b:	rex.RB pop r8
   140018c1d:	rex
   140018c1e:	rex pop rax
   140018c20:	pop    rdx
   140018c21:	add    BYTE PTR [rdi],bh
   140018c23:	rex.WRB jne 0x140018c9a
   140018c26:	gs js  0x140018c7d
   140018c29:	jns    0x140018c9b
   140018c2b:	gs rex (bad) 
   140018c2e:	and    al,0x43
   140018c30:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140018c32:	movsxd ebp,DWORD PTR [rbx+0x42]
   140018c35:	(bad)  
   140018c36:	jae    0x140018c9d
   140018c38:	and    al,0x30
   140018c3b:	xor    eax,0x24313024
   140018c40:	xor    BYTE PTR [rax],dh
   140018c42:	and    al,0x30
   140018c44:	xor    DWORD PTR [rax+rsi*1],esp
   140018c47:	xor    ah,BYTE PTR [rax+rsi*1]
   140018c4a:	xor    al,BYTE PTR [rax+0x40]
   140018c4d:	push   rbx
   140018c4e:	rex.B (bad) 
   140018c50:	push   r15
   140018c52:	xor    al,0x4c
   140018c54:	rex.WRXB
   140018c55:	rex.XB
   140018c56:	rex.WXB pop r15
   140018c58:	push   rdx
   140018c59:	push   rdi
   140018c5a:	pop    rdi
   140018c5b:	rex.WRB push r13
   140018c5d:	push   rsp
   140018c5e:	rex.RB pop r8
   140018c60:	rex
   140018c61:	rex pop rax
   140018c63:	pop    rdx
   140018c64:	add    BYTE PTR [rdi],bh
   140018c66:	rex.WRB jne 0x140018cdd
   140018c69:	gs js  0x140018cc0
   140018c6c:	jns    0x140018cde
   140018c6e:	gs rex (bad) 
   140018c71:	and    al,0x43
   140018c73:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140018c75:	movsxd ebp,DWORD PTR [rbx+0x42]
   140018c78:	(bad)  
   140018c79:	jae    0x140018ce0
   140018c7b:	and    al,0x30
   140018c7e:	ss and al,0x30
   140018c81:	xor    DWORD PTR [rax+rsi*1],esp
   140018c84:	xor    DWORD PTR [rax+rsi*1],esp
   140018c87:	xor    BYTE PTR [rax+rsi*1],ah
   140018c8a:	xor    ah,BYTE PTR [rax+rsi*1]
   140018c8d:	xor    DWORD PTR [rax+0x40],eax
   140018c90:	push   rbx
   140018c91:	rex.B (bad) 
   140018c93:	push   r15
   140018c95:	xor    al,0x4c
   140018c97:	rex.WRXB
   140018c98:	rex.XB
   140018c99:	rex.WXB pop r15
   140018c9b:	push   rdx
   140018c9c:	push   rdi
   140018c9d:	pop    rdi
   140018c9e:	rex.WRB push r13
   140018ca0:	push   rsp
   140018ca1:	rex.RB pop r8
   140018ca3:	rex
   140018ca4:	rex pop rax
   140018ca6:	pop    rdx
   140018ca7:	add    BYTE PTR [rdi],bh
   140018ca9:	rex.WRB jne 0x140018d20
   140018cac:	gs js  0x140018d03
   140018caf:	jns    0x140018d21
   140018cb1:	gs rex (bad) 
   140018cb4:	and    al,0x43
   140018cb6:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140018cb8:	movsxd ebp,DWORD PTR [rbx+0x42]
   140018cbb:	(bad)  
   140018cbc:	jae    0x140018d23
   140018cbe:	and    al,0x30
   140018cc1:	(bad)  
   140018cc2:	and    al,0x30
   140018cc4:	xor    DWORD PTR [rax+rsi*1],esp
   140018cc7:	xor    DWORD PTR [rax+rsi*1],esp
   140018cca:	xor    BYTE PTR [rax+rsi*1],ah
   140018ccd:	xor    ah,BYTE PTR [rax+rsi*1]
   140018cd0:	xor    DWORD PTR [rax+0x40],eax
   140018cd3:	push   rbx
   140018cd4:	rex.B (bad) 
   140018cd6:	push   r15
   140018cd8:	xor    al,0x4c
   140018cda:	rex.WRXB
   140018cdb:	rex.XB
   140018cdc:	rex.WXB pop r15
   140018cde:	push   rdx
   140018cdf:	push   rdi
   140018ce0:	pop    rdi
   140018ce1:	rex.WRB push r13
   140018ce3:	push   rsp
   140018ce4:	rex.RB pop r8
   140018ce6:	rex
   140018ce7:	rex pop rax
   140018ce9:	pop    rdx
   140018cea:	add    BYTE PTR [rdi],bh
   140018cec:	rex.WRB jne 0x140018d63
   140018cef:	gs js  0x140018d46
   140018cf2:	jns    0x140018d64
   140018cf4:	gs rex (bad) 
   140018cf7:	and    al,0x43
   140018cf9:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140018cfb:	movsxd ebp,DWORD PTR [rbx+0x42]
   140018cfe:	(bad)  
   140018cff:	jae    0x140018d66
   140018d01:	and    al,0x30
   140018d04:	cmp    BYTE PTR [rax+rsi*1],ah
   140018d07:	xor    DWORD PTR [rax+rsi*1],esp
   140018d0a:	xor    BYTE PTR [rax+rsi*1],ah
   140018d0d:	xor    BYTE PTR [rax+rsi*1],ah
   140018d10:	xor    ah,BYTE PTR [rax+rsi*1]
   140018d13:	xor    DWORD PTR [rax+0x40],eax
   140018d16:	push   rbx
   140018d17:	rex.B (bad) 
   140018d19:	push   r15
   140018d1b:	xor    al,0x4c
   140018d1d:	rex.WRXB
   140018d1e:	rex.XB
   140018d1f:	rex.WXB pop r15
   140018d21:	push   rdx
   140018d22:	push   rdi
   140018d23:	pop    rdi
   140018d24:	rex.WRB push r13
   140018d26:	push   rsp
   140018d27:	rex.RB pop r8
   140018d29:	rex
   140018d2a:	rex pop rax
   140018d2c:	pop    rdx
   140018d2d:	add    BYTE PTR [rdi],bh
   140018d2f:	rex.WRX
   140018d30:	gs js  0x140018da7
   140018d33:	rex
   140018d34:	rex.WRB push r13
   140018d36:	rex.WR push rsp
   140018d38:	rex.WB push r11
   140018d3a:	pop    rdx
   140018d3b:	rex
   140018d3c:	rex push rcx
   140018d3e:	rex.RB
   140018d3f:	rex.X
   140018d40:	push   r8
   140018d42:	rex.RB
   140018d43:	rex.X
   140018d44:	rex.RXB push r8
   140018d46:	rex.RB
   140018d47:	rex.X
   140018d48:	rex.RXB
   140018d49:	rex pop rdx
   140018d4b:	add    BYTE PTR [rdi],bh
   140018d4d:	rex.WRXB jo 0x140018db5
   140018d50:	outs   dx,BYTE PTR ds:[rsi]
   140018d51:	rex
   140018d52:	rex.WRB
   140018d53:	rex.X
   140018d54:	rex
   140018d55:	rex push rcx
   140018d57:	rex.RB
   140018d58:	rex.B
   140018d59:	rex.B
   140018d5a:	rex.W
   140018d5b:	rex.WXB push r8
   140018d5d:	rex.RB
   140018d5e:	rex.X
   140018d5f:	rex.RXB
   140018d60:	rex.WXB
   140018d61:	rex pop rdx
   140018d63:	add    BYTE PTR [rdi],bh
   140018d65:	rex.WRXB jo 0x140018dcd
   140018d68:	outs   dx,BYTE PTR ds:[rsi]
   140018d69:	rex
   140018d6a:	rex.WRB
   140018d6b:	rex.X
   140018d6c:	rex
   140018d6d:	rex push rcx
   140018d6f:	rex.RB
   140018d70:	rex.B
   140018d71:	rex.B
   140018d72:	rex.W push rax
   140018d74:	rex.RB
   140018d75:	rex.X
   140018d76:	rex.RXB
   140018d77:	rex.WXB
   140018d78:	rex pop rdx
   140018d7a:	add    BYTE PTR [rdi],bh
   140018d7c:	push   rax
   140018d7d:	gs jb  0x140018dcc
   140018d80:	outs   dx,DWORD PTR ds:[rsi]
   140018d81:	movsxd ebp,DWORD PTR [rbx+0x53]
   140018d84:	jo     0x140018def
   140018d86:	outs   dx,BYTE PTR ds:[rsi]
   140018d87:	rex (bad) 
   140018d89:	and    al,0x43
   140018d8b:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140018d8d:	movsxd ebp,DWORD PTR [rbx+0x42]
   140018d90:	(bad)  
   140018d91:	jae    0x140018df8
   140018d93:	and    al,0x30
   140018d96:	xor    BYTE PTR [rax+rsi*1],ah
   140018d99:	xor    BYTE PTR [rax+rsi*1],ah
   140018d9c:	xor    ah,BYTE PTR [rax+rsi*1]
   140018d9f:	xor    BYTE PTR [rax+rsi*1],ah
   140018da2:	xor    ah,BYTE PTR [rax+rsi*1]
   140018da5:	xor    DWORD PTR [rax+0x40],eax
   140018da8:	push   rbx
   140018da9:	rex.B (bad) 
   140018dab:	push   r15
   140018dad:	xor    al,0x4c
   140018daf:	rex.WRXB
   140018db0:	rex.XB
   140018db1:	rex.WXB pop r15
   140018db3:	push   rax
   140018db4:	rex.RB push r10
   140018db6:	rex.WR
   140018db7:	rex.WRXB
   140018db8:	rex.XB
   140018db9:	rex.WXB pop r15
   140018dbb:	push   rbx
   140018dbc:	push   rax
   140018dbd:	rex.WB
   140018dbe:	rex.WRX
   140018dbf:	rex
   140018dc0:	rex pop rax
   140018dc2:	pop    rdx
   140018dc3:	add    BYTE PTR [rdi],bh
   140018dc5:	push   rax
   140018dc6:	gs jb  0x140018e15
   140018dc9:	outs   dx,DWORD PTR ds:[rsi]
   140018dca:	movsxd ebp,DWORD PTR [rbx+0x53]
   140018dcd:	jo     0x140018e38
   140018dcf:	outs   dx,BYTE PTR ds:[rsi]
   140018dd0:	rex (bad) 
   140018dd2:	and    al,0x43
   140018dd4:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140018dd6:	movsxd ebp,DWORD PTR [rbx+0x42]
   140018dd9:	(bad)  
   140018dda:	jae    0x140018e41
   140018ddc:	and    al,0x30
   140018ddf:	xor    DWORD PTR [rax+rsi*1],esp
   140018de2:	xor    BYTE PTR [rax+rsi*1],ah
   140018de5:	xor    BYTE PTR [rax+rsi*1],ah
   140018de8:	xor    BYTE PTR [rax+rsi*1],ah
   140018deb:	xor    ah,BYTE PTR [rax+rsi*1]
   140018dee:	xor    DWORD PTR [rax+0x40],eax
   140018df1:	push   rbx
   140018df2:	rex.B (bad) 
   140018df4:	push   r15
   140018df6:	xor    al,0x4c
   140018df8:	rex.WRXB
   140018df9:	rex.XB
   140018dfa:	rex.WXB pop r15
   140018dfc:	push   rax
   140018dfd:	rex.RB push r10
   140018dff:	rex.WR
   140018e00:	rex.WRXB
   140018e01:	rex.XB
   140018e02:	rex.WXB pop r15
   140018e04:	push   rbx
   140018e05:	push   rax
   140018e06:	rex.WB
   140018e07:	rex.WRX
   140018e08:	rex
   140018e09:	rex pop rax
   140018e0b:	pop    rdx
   140018e0c:	add    BYTE PTR [rdi],bh
   140018e0e:	push   rax
   140018e0f:	gs jb  0x140018e5e
   140018e12:	outs   dx,DWORD PTR ds:[rsi]
   140018e13:	movsxd ebp,DWORD PTR [rbx+0x53]
   140018e16:	jo     0x140018e81
   140018e18:	outs   dx,BYTE PTR ds:[rsi]
   140018e19:	rex (bad) 
   140018e1b:	and    al,0x43
   140018e1d:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140018e1f:	movsxd ebp,DWORD PTR [rbx+0x42]
   140018e22:	(bad)  
   140018e23:	jae    0x140018e8a
   140018e25:	and    al,0x30
   140018e28:	xor    ah,BYTE PTR [rax+rsi*1]
   140018e2b:	xor    BYTE PTR [rax+rsi*1],ah
   140018e2e:	xor    BYTE PTR [rax+rsi*1],ah
   140018e31:	xor    BYTE PTR [rax+rsi*1],ah
   140018e34:	xor    BYTE PTR [rax+rsi*1],ah
   140018e37:	xor    BYTE PTR [rax+0x40],al
   140018e3a:	push   rbx
   140018e3b:	rex.B (bad) 
   140018e3d:	push   r15
   140018e3f:	xor    al,0x4c
   140018e41:	rex.WRXB
   140018e42:	rex.XB
   140018e43:	rex.WXB pop r15
   140018e45:	push   rax
   140018e46:	rex.RB push r10
   140018e48:	rex.WR
   140018e49:	rex.WRXB
   140018e4a:	rex.XB
   140018e4b:	rex.WXB pop r15
   140018e4d:	push   rbx
   140018e4e:	push   rax
   140018e4f:	rex.WB
   140018e50:	rex.WRX
   140018e51:	rex
   140018e52:	rex pop rax
   140018e54:	pop    rdx
   140018e55:	add    BYTE PTR [rdi],bh
   140018e57:	push   rax
   140018e58:	gs jb  0x140018ea7
   140018e5b:	outs   dx,DWORD PTR ds:[rsi]
   140018e5c:	movsxd ebp,DWORD PTR [rbx+0x53]
   140018e5f:	jo     0x140018eca
   140018e61:	outs   dx,BYTE PTR ds:[rsi]
   140018e62:	rex (bad) 
   140018e64:	and    al,0x43
   140018e66:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140018e68:	movsxd ebp,DWORD PTR [rbx+0x42]
   140018e6b:	(bad)  
   140018e6c:	jae    0x140018ed3
   140018e6e:	and    al,0x30
   140018e71:	xor    esp,DWORD PTR [rax+rsi*1]
   140018e74:	xor    BYTE PTR [rax+rsi*1],ah
   140018e77:	xor    BYTE PTR [rax+rsi*1],ah
   140018e7a:	xor    DWORD PTR [rax+rsi*1],esp
   140018e7d:	xor    ah,BYTE PTR [rax+rsi*1]
   140018e80:	xor    al,BYTE PTR [rax+0x40]
   140018e83:	push   rbx
   140018e84:	rex.B (bad) 
   140018e86:	push   r15
   140018e88:	xor    al,0x4c
   140018e8a:	rex.WRXB
   140018e8b:	rex.XB
   140018e8c:	rex.WXB pop r15
   140018e8e:	push   rax
   140018e8f:	rex.RB push r10
   140018e91:	rex.WR
   140018e92:	rex.WRXB
   140018e93:	rex.XB
   140018e94:	rex.WXB pop r15
   140018e96:	push   rbx
   140018e97:	push   rax
   140018e98:	rex.WB
   140018e99:	rex.WRX
   140018e9a:	rex
   140018e9b:	rex pop rax
   140018e9d:	pop    rdx
   140018e9e:	add    BYTE PTR [rdi],bh
   140018ea0:	push   rax
   140018ea1:	gs jb  0x140018ef0
   140018ea4:	outs   dx,DWORD PTR ds:[rsi]
   140018ea5:	movsxd ebp,DWORD PTR [rbx+0x53]
   140018ea8:	jo     0x140018f13
   140018eaa:	outs   dx,BYTE PTR ds:[rsi]
   140018eab:	rex (bad) 
   140018ead:	and    al,0x43
   140018eaf:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140018eb1:	movsxd ebp,DWORD PTR [rbx+0x42]
   140018eb4:	(bad)  
   140018eb5:	jae    0x140018f1c
   140018eb7:	and    al,0x30
   140018eba:	xor    al,0x24
   140018ebc:	xor    BYTE PTR [rcx],dh
   140018ebe:	and    al,0x30
   140018ec0:	xor    BYTE PTR [rax+rsi*1],ah
   140018ec3:	xor    DWORD PTR [rax+rsi*1],esp
   140018ec6:	xor    ah,BYTE PTR [rax+rsi*1]
   140018ec9:	xor    al,BYTE PTR [rax+0x40]
   140018ecc:	push   rbx
   140018ecd:	rex.B (bad) 
   140018ecf:	push   r15
   140018ed1:	xor    al,0x4c
   140018ed3:	rex.WRXB
   140018ed4:	rex.XB
   140018ed5:	rex.WXB pop r15
   140018ed7:	push   rax
   140018ed8:	rex.RB push r10
   140018eda:	rex.WR
   140018edb:	rex.WRXB
   140018edc:	rex.XB
   140018edd:	rex.WXB pop r15
   140018edf:	push   rbx
   140018ee0:	push   rax
   140018ee1:	rex.WB
   140018ee2:	rex.WRX
   140018ee3:	rex
   140018ee4:	rex pop rax
   140018ee6:	pop    rdx
   140018ee7:	add    BYTE PTR [rdi],bh
   140018ee9:	push   rax
   140018eea:	gs jb  0x140018f39
   140018eed:	outs   dx,DWORD PTR ds:[rsi]
   140018eee:	movsxd ebp,DWORD PTR [rbx+0x53]
   140018ef1:	jo     0x140018f5c
   140018ef3:	outs   dx,BYTE PTR ds:[rsi]
   140018ef4:	rex (bad) 
   140018ef6:	and    al,0x43
   140018ef8:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140018efa:	movsxd ebp,DWORD PTR [rbx+0x42]
   140018efd:	(bad)  
   140018efe:	jae    0x140018f65
   140018f00:	and    al,0x30
   140018f03:	xor    eax,0x24313024
   140018f08:	xor    BYTE PTR [rax],dh
   140018f0a:	and    al,0x30
   140018f0c:	xor    DWORD PTR [rax+rsi*1],esp
   140018f0f:	xor    ah,BYTE PTR [rax+rsi*1]
   140018f12:	xor    al,BYTE PTR [rax+0x40]
   140018f15:	push   rbx
   140018f16:	rex.B (bad) 
   140018f18:	push   r15
   140018f1a:	xor    al,0x4c
   140018f1c:	rex.WRXB
   140018f1d:	rex.XB
   140018f1e:	rex.WXB pop r15
   140018f20:	push   rax
   140018f21:	rex.RB push r10
   140018f23:	rex.WR
   140018f24:	rex.WRXB
   140018f25:	rex.XB
   140018f26:	rex.WXB pop r15
   140018f28:	push   rbx
   140018f29:	push   rax
   140018f2a:	rex.WB
   140018f2b:	rex.WRX
   140018f2c:	rex
   140018f2d:	rex pop rax
   140018f2f:	pop    rdx
   140018f30:	add    BYTE PTR [rdi],bh
   140018f32:	push   rax
   140018f33:	gs jb  0x140018f82
   140018f36:	outs   dx,DWORD PTR ds:[rsi]
   140018f37:	movsxd ebp,DWORD PTR [rbx+0x53]
   140018f3a:	jo     0x140018fa5
   140018f3c:	outs   dx,BYTE PTR ds:[rsi]
   140018f3d:	rex (bad) 
   140018f3f:	and    al,0x43
   140018f41:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140018f43:	movsxd ebp,DWORD PTR [rbx+0x42]
   140018f46:	(bad)  
   140018f47:	jae    0x140018fae
   140018f49:	and    al,0x30
   140018f4c:	ss and al,0x30
   140018f4f:	xor    DWORD PTR [rax+rsi*1],esp
   140018f52:	xor    DWORD PTR [rax+rsi*1],esp
   140018f55:	xor    BYTE PTR [rax+rsi*1],ah
   140018f58:	xor    ah,BYTE PTR [rax+rsi*1]
   140018f5b:	xor    DWORD PTR [rax+0x40],eax
   140018f5e:	push   rbx
   140018f5f:	rex.B (bad) 
   140018f61:	push   r15
   140018f63:	xor    al,0x4c
   140018f65:	rex.WRXB
   140018f66:	rex.XB
   140018f67:	rex.WXB pop r15
   140018f69:	push   rax
   140018f6a:	rex.RB push r10
   140018f6c:	rex.WR
   140018f6d:	rex.WRXB
   140018f6e:	rex.XB
   140018f6f:	rex.WXB pop r15
   140018f71:	push   rbx
   140018f72:	push   rax
   140018f73:	rex.WB
   140018f74:	rex.WRX
   140018f75:	rex
   140018f76:	rex pop rax
   140018f78:	pop    rdx
   140018f79:	add    BYTE PTR [rdi],bh
   140018f7b:	push   rax
   140018f7c:	gs jb  0x140018fcb
   140018f7f:	outs   dx,DWORD PTR ds:[rsi]
   140018f80:	movsxd ebp,DWORD PTR [rbx+0x53]
   140018f83:	jo     0x140018fee
   140018f85:	outs   dx,BYTE PTR ds:[rsi]
   140018f86:	rex (bad) 
   140018f88:	and    al,0x43
   140018f8a:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140018f8c:	movsxd ebp,DWORD PTR [rbx+0x42]
   140018f8f:	(bad)  
   140018f90:	jae    0x140018ff7
   140018f92:	and    al,0x30
   140018f95:	(bad)  
   140018f96:	and    al,0x30
   140018f98:	xor    DWORD PTR [rax+rsi*1],esp
   140018f9b:	xor    DWORD PTR [rax+rsi*1],esp
   140018f9e:	xor    BYTE PTR [rax+rsi*1],ah
   140018fa1:	xor    ah,BYTE PTR [rax+rsi*1]
   140018fa4:	xor    DWORD PTR [rax+0x40],eax
   140018fa7:	push   rbx
   140018fa8:	rex.B (bad) 
   140018faa:	push   r15
   140018fac:	xor    al,0x4c
   140018fae:	rex.WRXB
   140018faf:	rex.XB
   140018fb0:	rex.WXB pop r15
   140018fb2:	push   rax
   140018fb3:	rex.RB push r10
   140018fb5:	rex.WR
   140018fb6:	rex.WRXB
   140018fb7:	rex.XB
   140018fb8:	rex.WXB pop r15
   140018fba:	push   rbx
   140018fbb:	push   rax
   140018fbc:	rex.WB
   140018fbd:	rex.WRX
   140018fbe:	rex
   140018fbf:	rex pop rax
   140018fc1:	pop    rdx
   140018fc2:	add    BYTE PTR [rdi],bh
   140018fc4:	push   rax
   140018fc5:	gs jb  0x140019014
   140018fc8:	outs   dx,DWORD PTR ds:[rsi]
   140018fc9:	movsxd ebp,DWORD PTR [rbx+0x53]
   140018fcc:	jo     0x140019037
   140018fce:	outs   dx,BYTE PTR ds:[rsi]
   140018fcf:	rex (bad) 
   140018fd1:	and    al,0x43
   140018fd3:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140018fd5:	movsxd ebp,DWORD PTR [rbx+0x42]
   140018fd8:	(bad)  
   140018fd9:	jae    0x140019040
   140018fdb:	and    al,0x30
   140018fde:	cmp    BYTE PTR [rax+rsi*1],ah
   140018fe1:	xor    DWORD PTR [rax+rsi*1],esp
   140018fe4:	xor    BYTE PTR [rax+rsi*1],ah
   140018fe7:	xor    BYTE PTR [rax+rsi*1],ah
   140018fea:	xor    ah,BYTE PTR [rax+rsi*1]
   140018fed:	xor    DWORD PTR [rax+0x40],eax
   140018ff0:	push   rbx
   140018ff1:	rex.B (bad) 
   140018ff3:	push   r15
   140018ff5:	xor    al,0x4c
   140018ff7:	rex.WRXB
   140018ff8:	rex.XB
   140018ff9:	rex.WXB pop r15
   140018ffb:	push   rax
   140018ffc:	rex.RB push r10
   140018ffe:	rex.WR
   140018fff:	rex.WRXB
   140019000:	rex.XB
   140019001:	rex.WXB pop r15
   140019003:	push   rbx
   140019004:	push   rax
   140019005:	rex.WB
   140019006:	rex.WRX
   140019007:	rex
   140019008:	rex pop rax
   14001900a:	pop    rdx
   14001900b:	add    BYTE PTR [rdi],bh
   14001900d:	push   rax
   14001900e:	jb     0x140019079
   140019010:	jbe    0x140019073
   140019012:	je     0x140019079
   140019014:	push   rcx
   140019015:	jne    0x14001907c
   140019017:	jb     0x140019092
   140019019:	push   rbx
   14001901a:	je     0x14001908e
   14001901c:	rex push rbx
   14001901e:	push   rsp
   14001901f:	push   rdx
   140019020:	push   r13
   140019022:	rex
   140019023:	rex
   140019024:	rex.B
   140019025:	rex.RB
   140019026:	rex.B
   140019027:	push   r8
   140019029:	rex.RB
   14001902a:	rex.B
   14001902b:	rex.RXB
   14001902c:	rex.W
   14001902d:	rex pop rdx
   14001902f:	add    BYTE PTR [rdi],bh
   140019031:	push   rcx
   140019032:	jne    0x140019099
   140019034:	jb     0x1400190af
   140019036:	rex.B
   140019037:	fs ins DWORD PTR es:[rdi],dx
   140019039:	imul   ebp,DWORD PTR [rsi+0x42],0x40657361
   140019040:	rex.WRB
   140019041:	rex.X
   140019042:	rex
   140019043:	rex push rcx
   140019045:	rex.RB
   140019046:	rex.X
   140019047:	push   r8
   140019049:	rex.RB
   14001904a:	push   r13
   14001904c:	rex.WB
   14001904d:	rex.WRB push r11
   14001904f:	rex.B
   140019050:	fs ins DWORD PTR es:[rdi],dx
   140019052:	imul   ebp,DWORD PTR [rsi+0x42],0x57657361
   140019059:	rex
   14001905a:	rex pop rax
   14001905c:	pop    rdx
   14001905d:	add    BYTE PTR [rdi],bh
   14001905f:	push   rcx
   140019060:	jne    0x1400190c7
   140019062:	jb     0x1400190dd
   140019064:	rex.X jne 0x1400190cd
   140019067:	data16 gs jb 0x1400190ab
   14001906b:	push   rbx
   14001906c:	push   rsp
   14001906d:	push   rdx
   14001906e:	push   rbp
   14001906f:	rex
   140019070:	rex push rcx
   140019072:	rex.RB
   140019073:	rex.B
   140019074:	push   r8
   140019076:	rex.RB
   140019077:	push   r14
   140019079:	rex.X push rbp
   14001907b:	rex.RX
   14001907c:	rex.RX
   14001907d:	rex.RB push r10
   14001907f:	rex
   140019080:	rex pop rax
   140019082:	pop    rdx
   140019083:	add    BYTE PTR [rdi],bh
   140019085:	push   rcx
   140019086:	jne    0x1400190ed
   140019088:	jb     0x140019103
   14001908a:	rex.XB
   14001908b:	rex.X
   14001908c:	rex
   14001908d:	rex.WRB push r13
   14001908f:	rex.WR push rsp
   140019091:	rex.WB push r11
   140019093:	pop    rdx
   140019094:	rex
   140019095:	rex push rcx
   140019097:	rex.RB
   140019098:	rex.X
   140019099:	rex.B
   14001909a:	rex.WB pop r8
   14001909c:	pop    rdx
   14001909d:	add    BYTE PTR [rdi],bh
   14001909f:	push   rcx
   1400190a0:	jne    0x140019107
   1400190a2:	jb     0x14001911d
   1400190a4:	rex.XB
   1400190a5:	rex.X
   1400190a6:	rex push rbx
   1400190a8:	push   rsp
   1400190a9:	push   rdx
   1400190aa:	rex.B
   1400190ab:	rex
   1400190ac:	rex push rcx
   1400190ae:	rex.RB
   1400190af:	rex.X
   1400190b0:	rex.B
   1400190b1:	rex.WXB pop r8
   1400190b3:	pop    rdx
   1400190b4:	add    BYTE PTR [rdi],bh
   1400190b6:	push   rcx
   1400190b7:	jne    0x14001911e
   1400190b9:	jb     0x140019134
   1400190bb:	rex.XB
   1400190bc:	rex.X
   1400190bd:	rex push rbx
   1400190bf:	push   rsp
   1400190c0:	push   rdx
   1400190c1:	push   r13
   1400190c3:	rex
   1400190c4:	rex push rcx
   1400190c6:	rex.RB
   1400190c7:	rex.B
   1400190c8:	rex.B
   1400190c9:	rex.WB
   1400190ca:	rex.W
   1400190cb:	rex pop rdx
   1400190cd:	add    BYTE PTR [rdi],bh
   1400190cf:	push   rcx
   1400190d0:	jne    0x140019137
   1400190d2:	jb     0x14001914d
   1400190d4:	rex.XB
   1400190d5:	rex.X
   1400190d6:	rex push rbx
   1400190d8:	push   rsp
   1400190d9:	push   rdx
   1400190da:	push   rbp
   1400190db:	rex
   1400190dc:	rex push rcx
   1400190de:	rex.RB
   1400190df:	rex.X
   1400190e0:	rex.B
   1400190e1:	rex.WXB pop r8
   1400190e3:	pop    rdx
   1400190e4:	add    BYTE PTR [rdi],bh
   1400190e6:	push   rcx
   1400190e7:	jne    0x14001914e
   1400190e9:	jb     0x140019164
   1400190eb:	rex.XB
   1400190ec:	rex.X
   1400190ed:	rex.B
   1400190ee:	rex push rbx
   1400190f0:	push   rsp
   1400190f1:	push   rdx
   1400190f2:	push   r13
   1400190f4:	rex
   1400190f5:	rex push rcx
   1400190f7:	rex.RB
   1400190f8:	rex.B
   1400190f9:	rex.B
   1400190fa:	rex.WB pop r8
   1400190fc:	pop    rdx
   1400190fd:	add    BYTE PTR [rdi],bh
   1400190ff:	push   rcx
   140019100:	jne    0x140019167
   140019102:	jb     0x14001917d
   140019104:	rex.XB
   140019105:	rex.X push rdi
   140019107:	rex push rbx
   140019109:	push   rsp
   14001910a:	push   rdx
   14001910b:	push   r13
   14001910d:	rex
   14001910e:	rex push rcx
   140019110:	rex.RB
   140019111:	rex.B
   140019112:	rex.B
   140019113:	rex.WB pop r8
   140019115:	pop    rdx
   140019116:	add    BYTE PTR [rdi],bh
   140019118:	push   rcx
   140019119:	jne    0x140019180
   14001911b:	jb     0x140019196
   14001911d:	rex.XB
   14001911e:	rex.XB
   14001911f:	rex.W
   140019120:	rex
   140019121:	rex.WRB push r13
   140019123:	rex.WR push rsp
   140019125:	rex.WB push r11
   140019127:	pop    rdx
   140019128:	rex
   140019129:	rex push rcx
   14001912b:	rex.RB
   14001912c:	rex.X
   14001912d:	rex.B
   14001912e:	rex.WB pop r8
   140019130:	pop    rdx
   140019131:	add    BYTE PTR [rdi],bh
   140019133:	push   rcx
   140019134:	jne    0x14001919b
   140019136:	jb     0x1400191b1
   140019138:	rex.XB
   140019139:	rex.XB
   14001913a:	rex.W
   14001913b:	rex push rbx
   14001913d:	push   rsp
   14001913e:	push   rdx
   14001913f:	rex.B
   140019140:	rex
   140019141:	rex push rcx
   140019143:	rex.RB
   140019144:	rex.X
   140019145:	rex.B
   140019146:	rex.WXB pop r8
   140019148:	pop    rdx
   140019149:	add    BYTE PTR [rdi],bh
   14001914b:	push   rcx
   14001914c:	jne    0x1400191b3
   14001914e:	jb     0x1400191c9
   140019150:	rex.XB
   140019151:	rex.XB
   140019152:	rex.W
   140019153:	rex push rbx
   140019155:	push   rsp
   140019156:	push   rdx
   140019157:	push   r13
   140019159:	rex
   14001915a:	rex push rcx
   14001915c:	rex.RB
   14001915d:	rex.B
   14001915e:	rex.B
   14001915f:	rex.WB pop r8
   140019161:	pop    rdx
   140019162:	add    BYTE PTR [rdi],bh
   140019164:	push   rcx
   140019165:	jne    0x1400191cc
   140019167:	jb     0x1400191e2
   140019169:	rex.XB
   14001916a:	rex.XB
   14001916b:	rex.W
   14001916c:	rex push rbx
   14001916e:	push   rsp
   14001916f:	push   rdx
   140019170:	push   rbp
   140019171:	rex
   140019172:	rex push rcx
   140019174:	rex.RB
   140019175:	rex.X
   140019176:	rex.B
   140019177:	rex.WXB pop r8
   140019179:	pop    rdx
   14001917a:	add    BYTE PTR [rdi],bh
   14001917c:	push   rcx
   14001917d:	jne    0x1400191e4
   14001917f:	jb     0x1400191fa
   140019181:	rex.W (bad) 
   140019183:	outs   dx,BYTE PTR ds:[rsi]
   140019184:	fs ins BYTE PTR es:[rdi],dx
   140019186:	gs rex
   140019188:	rex.WRB
   140019189:	rex.X
   14001918a:	rex
   14001918b:	rex push rcx
   14001918d:	rex.RB
   14001918e:	rex.X
   14001918f:	rex.B
   140019190:	rex.WXB pop r8
   140019192:	pop    rdx
   140019193:	add    BYTE PTR [rdi],bh
   140019195:	push   rcx
   140019196:	jne    0x1400191fd
   140019198:	jb     0x140019213
   14001919a:	push   rax
   14001919b:	je     0x14001920f
   14001919d:	rex
   14001919e:	rex.X push rbp
   1400191a0:	rex.RX
   1400191a1:	rex.RX
   1400191a2:	rex.RB push r10
   1400191a4:	rex
   1400191a5:	rex push rcx
   1400191a7:	rex.RB
   1400191a8:	rex.X
   1400191a9:	push   r8
   1400191ab:	rex.RB
   1400191ac:	pop    r8
   1400191ae:	pop    rax
   1400191af:	pop    rdx
   1400191b0:	add    BYTE PTR [rdi],bh
   1400191b2:	push   rcx
   1400191b3:	jne    0x14001921a
   1400191b5:	jb     0x140019230
   1400191b7:	push   rbx
   1400191b8:	imul   edi,DWORD PTR [rdx+0x65],0x46554240
   1400191bf:	rex.RX
   1400191c0:	rex.RB push r10
   1400191c2:	rex
   1400191c3:	rex push rcx
   1400191c5:	rex.RB
   1400191c6:	rex.X
   1400191c7:	rex.B
   1400191c8:	rex.WXB pop r8
   1400191ca:	pop    rdx
   1400191cb:	add    BYTE PTR [rdi],bh
   1400191cd:	push   rcx
   1400191ce:	jne    0x140019235
   1400191d0:	jb     0x14001924b
   1400191d2:	push   rbx
   1400191d3:	imul   edi,DWORD PTR [rdx+0x65],0x52545340
   1400191da:	rex.B
   1400191db:	rex
   1400191dc:	rex push rcx
   1400191de:	rex.RB
   1400191df:	rex.X
   1400191e0:	rex.B
   1400191e1:	rex.WXB pop r8
   1400191e3:	pop    rdx
   1400191e4:	add    BYTE PTR [rdi],bh
   1400191e6:	push   rcx
   1400191e7:	jne    0x14001924e
   1400191e9:	jb     0x140019264
   1400191eb:	push   rbx
   1400191ec:	imul   edi,DWORD PTR [rdx+0x65],0x52545340
   1400191f3:	push   rbp
   1400191f4:	rex
   1400191f5:	rex push rcx
   1400191f7:	rex.RB
   1400191f8:	rex.X
   1400191f9:	rex.B
   1400191fa:	rex.WXB pop r8
   1400191fc:	pop    rdx
   1400191fd:	add    BYTE PTR [rdi],bh
   1400191ff:	push   rcx
   140019200:	jne    0x140019267
   140019202:	jb     0x14001927d
   140019204:	push   rbx
   140019205:	imul   edi,DWORD PTR [rdx+0x65],0x40484343
   14001920c:	push   rbx
   14001920d:	push   rsp
   14001920e:	push   rdx
   14001920f:	rex.B
   140019210:	rex
   140019211:	rex push rcx
   140019213:	rex.RB
   140019214:	rex.X
   140019215:	rex.B
   140019216:	rex.WXB pop r8
   140019218:	pop    rdx
   140019219:	add    BYTE PTR [rdi],bh
   14001921b:	push   rcx
   14001921c:	jne    0x140019283
   14001921e:	jb     0x140019299
   140019220:	push   rbx
   140019221:	imul   edi,DWORD PTR [rdx+0x65],0x40484343
   140019228:	push   rbx
   140019229:	push   rsp
   14001922a:	push   rdx
   14001922b:	push   rbp
   14001922c:	rex
   14001922d:	rex push rcx
   14001922f:	rex.RB
   140019230:	rex.X
   140019231:	rex.B
   140019232:	rex.WXB pop r8
   140019234:	pop    rdx
   140019235:	add    BYTE PTR [rdi],bh
   140019237:	push   rcx
   140019238:	jne    0x14001929f
   14001923a:	jb     0x1400192b5
   14001923c:	push   rbx
   14001923d:	je     0x1400192b1
   14001923f:	rex
   140019240:	rex.WRB push r13
   140019242:	rex.WR push rsp
   140019244:	rex.WB push r11
   140019246:	pop    rdx
   140019247:	rex
   140019248:	rex push rcx
   14001924a:	rex.RB
   14001924b:	rex.X
   14001924c:	push   r8
   14001924e:	rex.RB
   14001924f:	rex.B
   140019250:	rex.RXB pop r8
   140019252:	pop    rdx
   140019253:	add    BYTE PTR [rdi],bh
   140019255:	push   rcx
   140019256:	jne    0x1400192bd
   140019258:	jb     0x1400192d3
   14001925a:	push   rbx
   14001925b:	je     0x1400192cf
   14001925d:	rex push rbx
   14001925f:	push   rsp
   140019260:	push   rdx
   140019261:	rex.B
   140019262:	rex
   140019263:	rex push rcx
   140019265:	rex.RB
   140019266:	rex.B
   140019267:	push   r8
   140019269:	rex.RB
   14001926a:	rex.B
   14001926b:	rex.R pop rax
   14001926d:	pop    rdx
   14001926e:	add    BYTE PTR [rdi],bh
   140019270:	push   rcx
   140019271:	jne    0x1400192d8
   140019273:	jb     0x1400192ee
   140019275:	push   rbx
   140019276:	je     0x1400192ea
   140019278:	rex push rbx
   14001927a:	push   rsp
   14001927b:	push   rdx
   14001927c:	rex.B
   14001927d:	rex
   14001927e:	rex push rcx
   140019280:	rex.RB
   140019281:	rex.X
   140019282:	push   r8
   140019284:	rex.RB
   140019285:	rex.X
   140019286:	rex.R pop rax
   140019288:	pop    rdx
   140019289:	add    BYTE PTR [rdi],bh
   14001928b:	push   rcx
   14001928c:	jne    0x1400192f3
   14001928e:	jb     0x140019309
   140019290:	push   rbx
   140019291:	je     0x140019305
   140019293:	rex push rbx
   140019295:	push   rsp
   140019296:	push   rdx
   140019297:	push   r13
   140019299:	rex
   14001929a:	rex push rcx
   14001929c:	rex.RB
   14001929d:	rex.B
   14001929e:	push   r8
   1400192a0:	rex.RB
   1400192a1:	rex.B
   1400192a2:	rex.RXB
   1400192a3:	rex.W
   1400192a4:	rex pop rdx
   1400192a6:	add    BYTE PTR [rdi],bh
   1400192a8:	push   rcx
   1400192a9:	jne    0x140019310
   1400192ab:	jb     0x140019326
   1400192ad:	push   rbx
   1400192ae:	je     0x140019322
   1400192b0:	rex push rbx
   1400192b2:	push   rsp
   1400192b3:	push   rdx
   1400192b4:	push   rbp
   1400192b5:	rex
   1400192b6:	rex push rcx
   1400192b8:	rex.RB
   1400192b9:	rex.B
   1400192ba:	push   r8
   1400192bc:	rex.RB
   1400192bd:	rex.B
   1400192be:	rex.RXB pop r8
   1400192c0:	pop    rdx
   1400192c1:	add    BYTE PTR [rdi],bh
   1400192c3:	push   rcx
   1400192c4:	jne    0x14001932b
   1400192c6:	jb     0x140019341
   1400192c8:	push   rbx
   1400192c9:	je     0x14001933d
   1400192cb:	rex push rbx
   1400192cd:	push   rsp
   1400192ce:	push   rdx
   1400192cf:	push   rbp
   1400192d0:	rex
   1400192d1:	rex push rcx
   1400192d3:	rex.RB
   1400192d4:	rex.X
   1400192d5:	push   r8
   1400192d7:	rex.RB
   1400192d8:	rex.X
   1400192d9:	rex.RXB pop r8
   1400192db:	pop    rdx
   1400192dc:	add    BYTE PTR [rdi],bh
   1400192de:	push   rcx
   1400192df:	jne    0x140019346
   1400192e1:	jb     0x14001935c
   1400192e3:	push   rbx
   1400192e4:	je     0x140019358
   1400192e6:	rex.B
   1400192e7:	rex
   1400192e8:	rex.WRB push r13
   1400192ea:	rex.WR push rsp
   1400192ec:	rex.WB push r11
   1400192ee:	pop    rdx
   1400192ef:	rex
   1400192f0:	rex push rcx
   1400192f2:	rex.RB
   1400192f3:	rex.X
   1400192f4:	push   r8
   1400192f6:	rex.RB
   1400192f7:	rex.B
   1400192f8:	rex.RXB pop r8
   1400192fa:	pop    rdx
   1400192fb:	add    BYTE PTR [rdi],bh
   1400192fd:	push   rcx
   1400192fe:	jne    0x140019365
   140019300:	jb     0x14001937b
   140019302:	push   rbx
   140019303:	je     0x140019377
   140019305:	rex.B
   140019306:	rex push rbx
   140019308:	push   rsp
   140019309:	push   rdx
   14001930a:	push   r13
   14001930c:	rex
   14001930d:	rex push rcx
   14001930f:	rex.RB
   140019310:	rex.B
   140019311:	push   r8
   140019313:	rex.RB
   140019314:	rex.B
   140019315:	rex.R pop rax
   140019317:	pop    rdx
   140019318:	add    BYTE PTR [rdi],bh
   14001931a:	push   rcx
   14001931b:	jne    0x140019382
   14001931d:	jb     0x140019398
   14001931f:	push   rbx
   140019320:	je     0x140019394
   140019322:	push   rdi
   140019323:	rex push rbx
   140019325:	push   rsp
   140019326:	push   rdx
   140019327:	push   r13
   140019329:	rex
   14001932a:	rex push rcx
   14001932c:	rex.RB
   14001932d:	rex.B
   14001932e:	push   r8
   140019330:	rex.RB
   140019331:	rex.B
   140019332:	rex.RXB pop r8
   140019334:	pop    rdx
   140019335:	add    BYTE PTR [rdi],bh
   140019337:	push   rcx
   140019338:	jne    0x14001939f
   14001933a:	jb     0x1400193b5
   14001933c:	push   rbx
   14001933d:	je     0x1400193b1
   14001933f:	imul   ebp,DWORD PTR [rsi+0x67],0x6e756f43
   140019346:	je     0x140019388
   140019348:	rex.WRB push r13
   14001934a:	rex.WR push rsp
   14001934c:	rex.WB push r11
   14001934e:	pop    rdx
   14001934f:	rex
   140019350:	rex push rcx
   140019352:	rex.RB
   140019353:	rex.X
   140019354:	rex.B
   140019355:	rex.WXB pop r8
   140019357:	pop    rdx
   140019358:	add    BYTE PTR [rdi],bh
   14001935a:	push   rcx
   14001935b:	jne    0x1400193c2
   14001935d:	jne    0x1400193c4
   14001935f:	push   rsp
   140019360:	jns    0x1400193d2
   140019362:	gs rex (bad) 
   140019365:	and    al,0x43
   140019367:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140019369:	movsxd ebp,DWORD PTR [rbx+0x42]
   14001936c:	(bad)  
   14001936d:	jae    0x1400193d4
   14001936f:	and    al,0x30
   140019372:	xor    BYTE PTR [rax+rsi*1],ah
   140019375:	xor    BYTE PTR [rax+rsi*1],ah
   140019378:	xor    ah,BYTE PTR [rax+rsi*1]
   14001937b:	xor    BYTE PTR [rax+rsi*1],ah
   14001937e:	xor    ah,BYTE PTR [rax+rsi*1]
   140019381:	xor    DWORD PTR [rax+0x40],eax
   140019384:	push   rbx
   140019385:	rex.B (bad) 
   140019387:	push   r15
   140019389:	xor    al,0x4c
   14001938b:	rex.WRXB
   14001938c:	rex.XB
   14001938d:	rex.WXB pop r15
   14001938f:	push   rcx
   140019390:	push   rbp
   140019391:	rex.RB push r13
   140019393:	rex.RB pop r15
   140019395:	push   rsp
   140019396:	pop    rcx
   140019397:	push   rax
   140019398:	rex.RB
   140019399:	rex
   14001939a:	rex pop rax
   14001939c:	pop    rdx
   14001939d:	add    BYTE PTR [rdi],bh
   14001939f:	push   rcx
   1400193a0:	jne    0x140019407
   1400193a2:	jne    0x140019409
   1400193a4:	push   rsp
   1400193a5:	jns    0x140019417
   1400193a7:	gs rex (bad) 
   1400193aa:	and    al,0x43
   1400193ac:	rex.WR outs dx,DWORD PTR ds:[rsi]
   1400193ae:	movsxd ebp,DWORD PTR [rbx+0x42]
   1400193b1:	(bad)  
   1400193b2:	jae    0x140019419
   1400193b4:	and    al,0x30
   1400193b7:	xor    DWORD PTR [rax+rsi*1],esp
   1400193ba:	xor    BYTE PTR [rax+rsi*1],ah
   1400193bd:	xor    BYTE PTR [rax+rsi*1],ah
   1400193c0:	xor    BYTE PTR [rax+rsi*1],ah
   1400193c3:	xor    ah,BYTE PTR [rax+rsi*1]
   1400193c6:	xor    DWORD PTR [rax+0x40],eax
   1400193c9:	push   rbx
   1400193ca:	rex.B (bad) 
   1400193cc:	push   r15
   1400193ce:	xor    al,0x4c
   1400193d0:	rex.WRXB
   1400193d1:	rex.XB
   1400193d2:	rex.WXB pop r15
   1400193d4:	push   rcx
   1400193d5:	push   rbp
   1400193d6:	rex.RB push r13
   1400193d8:	rex.RB pop r15
   1400193da:	push   rsp
   1400193db:	pop    rcx
   1400193dc:	push   rax
   1400193dd:	rex.RB
   1400193de:	rex
   1400193df:	rex pop rax
   1400193e1:	pop    rdx
   1400193e2:	add    BYTE PTR [rdi],bh
   1400193e4:	push   rcx
   1400193e5:	jne    0x14001944c
   1400193e7:	jne    0x14001944e
   1400193e9:	push   rsp
   1400193ea:	jns    0x14001945c
   1400193ec:	gs rex (bad) 
   1400193ef:	and    al,0x43
   1400193f1:	rex.WR outs dx,DWORD PTR ds:[rsi]
   1400193f3:	movsxd ebp,DWORD PTR [rbx+0x42]
   1400193f6:	(bad)  
   1400193f7:	jae    0x14001945e
   1400193f9:	and    al,0x30
   1400193fc:	xor    ah,BYTE PTR [rax+rsi*1]
   1400193ff:	xor    BYTE PTR [rax+rsi*1],ah
   140019402:	xor    BYTE PTR [rax+rsi*1],ah
   140019405:	xor    BYTE PTR [rax+rsi*1],ah
   140019408:	xor    BYTE PTR [rax+rsi*1],ah
   14001940b:	xor    BYTE PTR [rax+0x40],al
   14001940e:	push   rbx
   14001940f:	rex.B (bad) 
   140019411:	push   r15
   140019413:	xor    al,0x4c
   140019415:	rex.WRXB
   140019416:	rex.XB
   140019417:	rex.WXB pop r15
   140019419:	push   rcx
   14001941a:	push   rbp
   14001941b:	rex.RB push r13
   14001941d:	rex.RB pop r15
   14001941f:	push   rsp
   140019420:	pop    rcx
   140019421:	push   rax
   140019422:	rex.RB
   140019423:	rex
   140019424:	rex pop rax
   140019426:	pop    rdx
   140019427:	add    BYTE PTR [rdi],bh
   140019429:	push   rcx
   14001942a:	jne    0x140019491
   14001942c:	jne    0x140019493
   14001942e:	push   rsp
   14001942f:	jns    0x1400194a1
   140019431:	gs rex (bad) 
   140019434:	and    al,0x43
   140019436:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140019438:	movsxd ebp,DWORD PTR [rbx+0x42]
   14001943b:	(bad)  
   14001943c:	jae    0x1400194a3
   14001943e:	and    al,0x30
   140019441:	xor    esp,DWORD PTR [rax+rsi*1]
   140019444:	xor    BYTE PTR [rax+rsi*1],ah
   140019447:	xor    BYTE PTR [rax+rsi*1],ah
   14001944a:	xor    DWORD PTR [rax+rsi*1],esp
   14001944d:	xor    ah,BYTE PTR [rax+rsi*1]
   140019450:	xor    al,BYTE PTR [rax+0x40]
   140019453:	push   rbx
   140019454:	rex.B (bad) 
   140019456:	push   r15
   140019458:	xor    al,0x4c
   14001945a:	rex.WRXB
   14001945b:	rex.XB
   14001945c:	rex.WXB pop r15
   14001945e:	push   rcx
   14001945f:	push   rbp
   140019460:	rex.RB push r13
   140019462:	rex.RB pop r15
   140019464:	push   rsp
   140019465:	pop    rcx
   140019466:	push   rax
   140019467:	rex.RB
   140019468:	rex
   140019469:	rex pop rax
   14001946b:	pop    rdx
   14001946c:	add    BYTE PTR [rdi],bh
   14001946e:	push   rcx
   14001946f:	jne    0x1400194d6
   140019471:	jne    0x1400194d8
   140019473:	push   rsp
   140019474:	jns    0x1400194e6
   140019476:	gs rex (bad) 
   140019479:	and    al,0x43
   14001947b:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14001947d:	movsxd ebp,DWORD PTR [rbx+0x42]
   140019480:	(bad)  
   140019481:	jae    0x1400194e8
   140019483:	and    al,0x30
   140019486:	xor    al,0x24
   140019488:	xor    BYTE PTR [rcx],dh
   14001948a:	and    al,0x30
   14001948c:	xor    BYTE PTR [rax+rsi*1],ah
   14001948f:	xor    DWORD PTR [rax+rsi*1],esp
   140019492:	xor    ah,BYTE PTR [rax+rsi*1]
   140019495:	xor    al,BYTE PTR [rax+0x40]
   140019498:	push   rbx
   140019499:	rex.B (bad) 
   14001949b:	push   r15
   14001949d:	xor    al,0x4c
   14001949f:	rex.WRXB
   1400194a0:	rex.XB
   1400194a1:	rex.WXB pop r15
   1400194a3:	push   rcx
   1400194a4:	push   rbp
   1400194a5:	rex.RB push r13
   1400194a7:	rex.RB pop r15
   1400194a9:	push   rsp
   1400194aa:	pop    rcx
   1400194ab:	push   rax
   1400194ac:	rex.RB
   1400194ad:	rex
   1400194ae:	rex pop rax
   1400194b0:	pop    rdx
   1400194b1:	add    BYTE PTR [rdi],bh
   1400194b3:	push   rcx
   1400194b4:	jne    0x14001951b
   1400194b6:	jne    0x14001951d
   1400194b8:	push   rsp
   1400194b9:	jns    0x14001952b
   1400194bb:	gs rex (bad) 
   1400194be:	and    al,0x43
   1400194c0:	rex.WR outs dx,DWORD PTR ds:[rsi]
   1400194c2:	movsxd ebp,DWORD PTR [rbx+0x42]
   1400194c5:	(bad)  
   1400194c6:	jae    0x14001952d
   1400194c8:	and    al,0x30
   1400194cb:	xor    eax,0x24313024
   1400194d0:	xor    BYTE PTR [rax],dh
   1400194d2:	and    al,0x30
   1400194d4:	xor    DWORD PTR [rax+rsi*1],esp
   1400194d7:	xor    ah,BYTE PTR [rax+rsi*1]
   1400194da:	xor    al,BYTE PTR [rax+0x40]
   1400194dd:	push   rbx
   1400194de:	rex.B (bad) 
   1400194e0:	push   r15
   1400194e2:	xor    al,0x4c
   1400194e4:	rex.WRXB
   1400194e5:	rex.XB
   1400194e6:	rex.WXB pop r15
   1400194e8:	push   rcx
   1400194e9:	push   rbp
   1400194ea:	rex.RB push r13
   1400194ec:	rex.RB pop r15
   1400194ee:	push   rsp
   1400194ef:	pop    rcx
   1400194f0:	push   rax
   1400194f1:	rex.RB
   1400194f2:	rex
   1400194f3:	rex pop rax
   1400194f5:	pop    rdx
   1400194f6:	add    BYTE PTR [rdi],bh
   1400194f8:	push   rcx
   1400194f9:	jne    0x140019560
   1400194fb:	jne    0x140019562
   1400194fd:	push   rsp
   1400194fe:	jns    0x140019570
   140019500:	gs rex (bad) 
   140019503:	and    al,0x43
   140019505:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140019507:	movsxd ebp,DWORD PTR [rbx+0x42]
   14001950a:	(bad)  
   14001950b:	jae    0x140019572
   14001950d:	and    al,0x30
   140019510:	ss and al,0x30
   140019513:	xor    DWORD PTR [rax+rsi*1],esp
   140019516:	xor    DWORD PTR [rax+rsi*1],esp
   140019519:	xor    BYTE PTR [rax+rsi*1],ah
   14001951c:	xor    ah,BYTE PTR [rax+rsi*1]
   14001951f:	xor    DWORD PTR [rax+0x40],eax
   140019522:	push   rbx
   140019523:	rex.B (bad) 
   140019525:	push   r15
   140019527:	xor    al,0x4c
   140019529:	rex.WRXB
   14001952a:	rex.XB
   14001952b:	rex.WXB pop r15
   14001952d:	push   rcx
   14001952e:	push   rbp
   14001952f:	rex.RB push r13
   140019531:	rex.RB pop r15
   140019533:	push   rsp
   140019534:	pop    rcx
   140019535:	push   rax
   140019536:	rex.RB
   140019537:	rex
   140019538:	rex pop rax
   14001953a:	pop    rdx
   14001953b:	add    BYTE PTR [rdi],bh
   14001953d:	push   rcx
   14001953e:	jne    0x1400195a5
   140019540:	jne    0x1400195a7
   140019542:	push   rsp
   140019543:	jns    0x1400195b5
   140019545:	gs rex (bad) 
   140019548:	and    al,0x43
   14001954a:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14001954c:	movsxd ebp,DWORD PTR [rbx+0x42]
   14001954f:	(bad)  
   140019550:	jae    0x1400195b7
   140019552:	and    al,0x30
   140019555:	(bad)  
   140019556:	and    al,0x30
   140019558:	xor    DWORD PTR [rax+rsi*1],esp
   14001955b:	xor    DWORD PTR [rax+rsi*1],esp
   14001955e:	xor    BYTE PTR [rax+rsi*1],ah
   140019561:	xor    ah,BYTE PTR [rax+rsi*1]
   140019564:	xor    DWORD PTR [rax+0x40],eax
   140019567:	push   rbx
   140019568:	rex.B (bad) 
   14001956a:	push   r15
   14001956c:	xor    al,0x4c
   14001956e:	rex.WRXB
   14001956f:	rex.XB
   140019570:	rex.WXB pop r15
   140019572:	push   rcx
   140019573:	push   rbp
   140019574:	rex.RB push r13
   140019576:	rex.RB pop r15
   140019578:	push   rsp
   140019579:	pop    rcx
   14001957a:	push   rax
   14001957b:	rex.RB
   14001957c:	rex
   14001957d:	rex pop rax
   14001957f:	pop    rdx
   140019580:	add    BYTE PTR [rdi],bh
   140019582:	push   rcx
   140019583:	jne    0x1400195ea
   140019585:	jne    0x1400195ec
   140019587:	push   rsp
   140019588:	jns    0x1400195fa
   14001958a:	gs rex (bad) 
   14001958d:	and    al,0x43
   14001958f:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140019591:	movsxd ebp,DWORD PTR [rbx+0x42]
   140019594:	(bad)  
   140019595:	jae    0x1400195fc
   140019597:	and    al,0x30
   14001959a:	cmp    BYTE PTR [rax+rsi*1],ah
   14001959d:	xor    DWORD PTR [rax+rsi*1],esp
   1400195a0:	xor    BYTE PTR [rax+rsi*1],ah
   1400195a3:	xor    BYTE PTR [rax+rsi*1],ah
   1400195a6:	xor    ah,BYTE PTR [rax+rsi*1]
   1400195a9:	xor    DWORD PTR [rax+0x40],eax
   1400195ac:	push   rbx
   1400195ad:	rex.B (bad) 
   1400195af:	push   r15
   1400195b1:	xor    al,0x4c
   1400195b3:	rex.WRXB
   1400195b4:	rex.XB
   1400195b5:	rex.WXB pop r15
   1400195b7:	push   rcx
   1400195b8:	push   rbp
   1400195b9:	rex.RB push r13
   1400195bb:	rex.RB pop r15
   1400195bd:	push   rsp
   1400195be:	pop    rcx
   1400195bf:	push   rax
   1400195c0:	rex.RB
   1400195c1:	rex
   1400195c2:	rex pop rax
   1400195c4:	pop    rdx
   1400195c5:	add    BYTE PTR [rdi],bh
   1400195c7:	push   rdx
   1400195c8:	gs (bad) 
   1400195ca:	rex.WR outs dx,DWORD PTR fs:[rsi]
   1400195cd:	movsxd ebp,DWORD PTR [rbx+0x40]
   1400195d0:	rex.XB
   1400195d1:	rex.XB jb 0x14001963d
   1400195d4:	je     0x140019629
   1400195d6:	movsxd eax,DWORD PTR gs:[rax+0x40]
   1400195da:	push   rcx
   1400195db:	rex.RB
   1400195dc:	rex.B
   1400195dd:	pop    r8
   1400195df:	pop    rax
   1400195e0:	pop    rdx
   1400195e1:	add    BYTE PTR [rdi],bh
   1400195e3:	push   rdx
   1400195e4:	gs (bad) 
   1400195e6:	rex.WR outs dx,DWORD PTR fs:[rsi]
   1400195e9:	movsxd ebp,DWORD PTR [rbx+0x40]
   1400195ec:	rex.XB
   1400195ed:	rex.RX (bad) 
   1400195ef:	imul   esp,DWORD PTR [rbp+0x4c],0x6f
   1400195f3:	movsxd ebp,DWORD PTR [rbx+0x40]
   1400195f6:	rex push rcx
   1400195f8:	rex.RB
   1400195f9:	rex.B
   1400195fa:	pop    r8
   1400195fc:	pop    rax
   1400195fd:	pop    rdx
   1400195fe:	add    BYTE PTR [rdi],bh
   140019600:	push   rdx
   140019601:	gs (bad) 
   140019603:	rex.WR outs dx,DWORD PTR fs:[rsi]
   140019606:	movsxd ebp,DWORD PTR [rbx+0x40]
   140019609:	rex.XB push r10
   14001960b:	gs (bad) 
   14001960d:	fs gs jb 0x140019668
   140019611:	jb     0x14001967c
   140019613:	je     0x14001967a
   140019615:	jb     0x140019663
   140019617:	outs   dx,DWORD PTR ds:[rsi]
   140019618:	movsxd ebp,DWORD PTR [rbx+0x32]
   14001961b:	rex
   14001961c:	rex push rcx
   14001961e:	rex.RB
   14001961f:	rex.B
   140019620:	pop    r8
   140019622:	pop    rax
   140019623:	pop    rdx
   140019624:	add    BYTE PTR [rdi],bh
   140019626:	push   rdx
   140019627:	gs (bad) 
   140019629:	rex.WR outs dx,DWORD PTR fs:[rsi]
   14001962c:	movsxd ebp,DWORD PTR [rbx+0x40]
   14001962f:	rex.XB push r10
   140019631:	gs (bad) 
   140019633:	fs gs jb 0x14001968e
   140019637:	jb     0x1400196a2
   140019639:	je     0x1400196a0
   14001963b:	jb     0x140019689
   14001963d:	outs   dx,DWORD PTR ds:[rsi]
   14001963e:	movsxd ebp,DWORD PTR [rbx+0x33]
   140019641:	rex
   140019642:	rex push rcx
   140019644:	rex.RB
   140019645:	rex.B
   140019646:	pop    r8
   140019648:	pop    rax
   140019649:	pop    rdx
   14001964a:	add    BYTE PTR [rdi],bh
   14001964c:	push   rdx
   14001964d:	gs (bad) 
   14001964f:	rex.WR outs dx,DWORD PTR fs:[rsi]
   140019652:	movsxd ebp,DWORD PTR [rbx+0x40]
   140019655:	rex.XB push r10
   140019657:	gs (bad) 
   140019659:	fs gs jb 0x1400196b4
   14001965d:	jb     0x1400196c8
   14001965f:	je     0x1400196c6
   140019661:	jb     0x1400196af
   140019663:	outs   dx,DWORD PTR ds:[rsi]
   140019664:	movsxd ebp,DWORD PTR [rbx+0x40]
   140019667:	rex push rcx
   140019669:	rex.RB
   14001966a:	rex.B
   14001966b:	pop    r8
   14001966d:	pop    rax
   14001966e:	pop    rdx
   14001966f:	add    BYTE PTR [rdi],bh
   140019671:	push   rdx
   140019672:	gs (bad) 
   140019674:	rex.WR outs dx,DWORD PTR fs:[rsi]
   140019677:	movsxd ebp,DWORD PTR [rbx+0x40]
   14001967a:	rex.XB push r10
   14001967c:	je     0x1400196ea
   14001967e:	push   rdx
   14001967f:	gs jae 0x1400196f1
   140019682:	jne    0x1400196f6
   140019684:	movsxd esp,DWORD PTR [rbp+0x40]
   140019687:	rex push rcx
   140019689:	rex.RB
   14001968a:	rex.B
   14001968b:	pop    r8
   14001968d:	pop    rax
   14001968e:	pop    rdx
   14001968f:	add    BYTE PTR [rdi],bh
   140019691:	push   rdx
   140019692:	gs (bad) 
   140019694:	rex.WR outs dx,DWORD PTR fs:[rsi]
   140019697:	movsxd ebp,DWORD PTR [rbx+0x40]
   14001969a:	rex.XB push r11
   14001969c:	push   0x4c657261
   1400196a1:	outs   dx,DWORD PTR ds:[rsi]
   1400196a2:	movsxd ebp,DWORD PTR [rbx+0x40]
   1400196a5:	rex push rcx
   1400196a7:	rex.RB
   1400196a8:	rex.B
   1400196a9:	pop    r8
   1400196ab:	pop    rax
   1400196ac:	pop    rdx
   1400196ad:	add    BYTE PTR [rdi],bh
   1400196af:	push   rdx
   1400196b0:	gs (bad) 
   1400196b2:	rex.WR outs dx,DWORD PTR fs:[rsi]
   1400196b5:	movsxd ebp,DWORD PTR [rbx+0x40]
   1400196b8:	rex.XB push r11
   1400196ba:	ins    DWORD PTR es:[rdi],dx
   1400196bb:	(bad)  
   1400196bc:	ins    BYTE PTR es:[rdi],dx
   1400196bd:	ins    BYTE PTR es:[rdi],dx
   1400196be:	push   rbx
   1400196bf:	jo     0x14001972a
   1400196c1:	outs   dx,BYTE PTR ds:[rsi]
   1400196c2:	rex.WR outs dx,DWORD PTR ds:[rsi]
   1400196c4:	movsxd ebp,DWORD PTR [rbx+0x40]
   1400196c7:	rex push rcx
   1400196c9:	rex.RB
   1400196ca:	rex.B
   1400196cb:	pop    r8
   1400196cd:	pop    rax
   1400196ce:	pop    rdx
   1400196cf:	add    BYTE PTR [rdi],bh
   1400196d1:	push   rdx
   1400196d2:	gs (bad) 
   1400196d4:	rex.WR outs dx,DWORD PTR fs:[rsi]
   1400196d7:	movsxd ebp,DWORD PTR [rbx+0x40]
   1400196da:	rex.XB push r11
   1400196dc:	jo     0x140019747
   1400196de:	outs   dx,BYTE PTR ds:[rsi]
   1400196df:	rex.WR outs dx,DWORD PTR ds:[rsi]
   1400196e1:	movsxd ebp,DWORD PTR [rbx+0x40]
   1400196e4:	rex push rcx
   1400196e6:	rex.RB
   1400196e7:	rex.B
   1400196e8:	pop    r8
   1400196ea:	pop    rax
   1400196eb:	pop    rdx
   1400196ec:	add    BYTE PTR [rdi],bh
   1400196ee:	push   rdx
   1400196ef:	gs (bad) 
   1400196f1:	fs rex.WRXB jb 0x14001974c
   1400196f5:	jb     0x140019760
   1400196f7:	je     0x14001975e
   1400196f9:	rex.WR outs dx,DWORD PTR ds:[rsi]
   1400196fb:	movsxd ebp,DWORD PTR [rbx+0x40]
   1400196fe:	rex.XB
   1400196ff:	rex.XB jb 0x14001976b
   140019702:	je     0x140019757
   140019704:	movsxd eax,DWORD PTR gs:[rax+0x40]
   140019708:	push   rcx
   140019709:	rex.RB
   14001970a:	rex.B
   14001970b:	pop    r15
   14001970d:	rex.WRX pop rax
   14001970f:	pop    rdx
   140019710:	add    BYTE PTR [rdi],bh
   140019712:	push   rdx
   140019713:	gs (bad) 
   140019715:	fs rex.WRXB jb 0x140019770
   140019719:	jb     0x140019784
   14001971b:	je     0x140019782
   14001971d:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14001971f:	movsxd ebp,DWORD PTR [rbx+0x40]
   140019722:	rex.XB
   140019723:	rex.RX (bad) 
   140019725:	imul   esp,DWORD PTR [rbp+0x4c],0x6f
   140019729:	movsxd ebp,DWORD PTR [rbx+0x40]
   14001972c:	rex push rcx
   14001972e:	rex.RB
   14001972f:	rex.B
   140019730:	pop    r15
   140019732:	rex.WRX pop rax
   140019734:	pop    rdx
   140019735:	add    BYTE PTR [rdi],bh
   140019737:	push   rdx
   140019738:	gs (bad) 
   14001973a:	fs rex.WRXB jb 0x140019795
   14001973e:	jb     0x1400197a9
   140019740:	je     0x1400197a7
   140019742:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140019744:	movsxd ebp,DWORD PTR [rbx+0x40]
   140019747:	rex.XB push r10
   140019749:	gs (bad) 
   14001974b:	fs gs jb 0x1400197a6
   14001974f:	jb     0x1400197ba
   140019751:	je     0x1400197b8
   140019753:	jb     0x1400197a1
   140019755:	outs   dx,DWORD PTR ds:[rsi]
   140019756:	movsxd ebp,DWORD PTR [rbx+0x33]
   140019759:	rex
   14001975a:	rex push rcx
   14001975c:	rex.RB
   14001975d:	rex.B
   14001975e:	pop    r15
   140019760:	rex.WRX pop rax
   140019762:	pop    rdx
   140019763:	add    BYTE PTR [rdi],bh
   140019765:	push   rdx
   140019766:	gs (bad) 
   140019768:	fs rex.WRXB jb 0x1400197c3
   14001976c:	jb     0x1400197d7
   14001976e:	je     0x1400197d5
   140019770:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140019772:	movsxd ebp,DWORD PTR [rbx+0x40]
   140019775:	rex.XB push r11
   140019777:	jo     0x1400197e2
   140019779:	outs   dx,BYTE PTR ds:[rsi]
   14001977a:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14001977c:	movsxd ebp,DWORD PTR [rbx+0x40]
   14001977f:	rex push rcx
   140019781:	rex.RB
   140019782:	rex.B
   140019783:	pop    r15
   140019785:	rex.WRX pop rax
   140019787:	pop    rdx
   140019788:	add    BYTE PTR [rdi],bh
   14001978a:	push   rdx
   14001978b:	gs (bad) 
   14001978d:	fs rex.WRXB jb 0x1400197e8
   140019791:	jb     0x1400197fc
   140019793:	je     0x1400197fa
   140019795:	push   rbp
   140019796:	outs   dx,BYTE PTR ds:[rsi]
   140019797:	ins    BYTE PTR es:[rdi],dx
   140019798:	outs   dx,DWORD PTR ds:[rsi]
   140019799:	movsxd ebp,DWORD PTR [rbx+0x40]
   14001979c:	rex.XB
   14001979d:	rex.XB jb 0x140019809
   1400197a0:	je     0x1400197f5
   1400197a2:	movsxd eax,DWORD PTR gs:[rax+0x40]
   1400197a6:	push   rcx
   1400197a7:	rex.RB
   1400197a8:	rex.B
   1400197a9:	pop    r8
   1400197ab:	pop    rdi
   1400197ac:	rex.WRX
   1400197ad:	rex pop rdx
   1400197af:	add    BYTE PTR [rdi],bh
   1400197b1:	push   rdx
   1400197b2:	gs (bad) 
   1400197b4:	fs rex.WRXB jb 0x14001980f
   1400197b8:	jb     0x140019823
   1400197ba:	je     0x140019821
   1400197bc:	push   rbp
   1400197bd:	outs   dx,BYTE PTR ds:[rsi]
   1400197be:	ins    BYTE PTR es:[rdi],dx
   1400197bf:	outs   dx,DWORD PTR ds:[rsi]
   1400197c0:	movsxd ebp,DWORD PTR [rbx+0x40]
   1400197c3:	rex.XB
   1400197c4:	rex.RX (bad) 
   1400197c6:	imul   esp,DWORD PTR [rbp+0x4c],0x6f
   1400197ca:	movsxd ebp,DWORD PTR [rbx+0x40]
   1400197cd:	rex push rcx
   1400197cf:	rex.RB
   1400197d0:	rex.B
   1400197d1:	pop    r8
   1400197d3:	pop    rdi
   1400197d4:	rex.WRX
   1400197d5:	rex pop rdx
   1400197d7:	add    BYTE PTR [rdi],bh
   1400197d9:	push   rdx
   1400197da:	gs (bad) 
   1400197dc:	fs rex.WRXB jb 0x140019837
   1400197e0:	jb     0x14001984b
   1400197e2:	je     0x140019849
   1400197e4:	push   rbp
   1400197e5:	outs   dx,BYTE PTR ds:[rsi]
   1400197e6:	ins    BYTE PTR es:[rdi],dx
   1400197e7:	outs   dx,DWORD PTR ds:[rsi]
   1400197e8:	movsxd ebp,DWORD PTR [rbx+0x40]
   1400197eb:	rex.XB push r10
   1400197ed:	gs (bad) 
   1400197ef:	fs gs jb 0x14001984a
   1400197f3:	jb     0x14001985e
   1400197f5:	je     0x14001985c
   1400197f7:	jb     0x140019845
   1400197f9:	outs   dx,DWORD PTR ds:[rsi]
   1400197fa:	movsxd ebp,DWORD PTR [rbx+0x33]
   1400197fd:	rex
   1400197fe:	rex push rcx
   140019800:	rex.RB
   140019801:	rex.B
   140019802:	pop    r8
   140019804:	pop    rdi
   140019805:	rex.WRX
   140019806:	rex pop rdx
   140019808:	add    BYTE PTR [rdi],bh
   14001980a:	push   rdx
   14001980b:	gs (bad) 
   14001980d:	fs rex.WRXB jb 0x140019868
   140019811:	jb     0x14001987c
   140019813:	je     0x14001987a
   140019815:	push   rbp
   140019816:	outs   dx,BYTE PTR ds:[rsi]
   140019817:	ins    BYTE PTR es:[rdi],dx
   140019818:	outs   dx,DWORD PTR ds:[rsi]
   140019819:	movsxd ebp,DWORD PTR [rbx+0x40]
   14001981c:	rex.XB push r11
   14001981e:	jo     0x140019889
   140019820:	outs   dx,BYTE PTR ds:[rsi]
   140019821:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140019823:	movsxd ebp,DWORD PTR [rbx+0x40]
   140019826:	rex push rcx
   140019828:	rex.RB
   140019829:	rex.B
   14001982a:	pop    r8
   14001982c:	pop    rdi
   14001982d:	rex.WRX
   14001982e:	rex pop rdx
   140019830:	add    BYTE PTR [rdi],bh
   140019832:	push   rdx
   140019833:	gs (bad) 
   140019835:	fs push rbp
   140019837:	outs   dx,BYTE PTR ds:[rsi]
   140019838:	ins    BYTE PTR es:[rdi],dx
   140019839:	outs   dx,DWORD PTR ds:[rsi]
   14001983a:	movsxd ebp,DWORD PTR [rbx+0x40]
   14001983d:	rex.XB
   14001983e:	rex.XB jb 0x1400198aa
   140019841:	je     0x140019896
   140019843:	movsxd eax,DWORD PTR gs:[rax+0x40]
   140019847:	push   rcx
   140019848:	rex.RB
   140019849:	rex.B
   14001984a:	pop    r8
   14001984c:	pop    rax
   14001984d:	pop    rdx
   14001984e:	add    BYTE PTR [rdi],bh
   140019850:	push   rdx
   140019851:	gs (bad) 
   140019853:	fs push rbp
   140019855:	outs   dx,BYTE PTR ds:[rsi]
   140019856:	ins    BYTE PTR es:[rdi],dx
   140019857:	outs   dx,DWORD PTR ds:[rsi]
   140019858:	movsxd ebp,DWORD PTR [rbx+0x40]
   14001985b:	rex.XB
   14001985c:	rex.RX (bad) 
   14001985e:	imul   esp,DWORD PTR [rbp+0x4c],0x6f
   140019862:	movsxd ebp,DWORD PTR [rbx+0x40]
   140019865:	rex push rcx
   140019867:	rex.RB
   140019868:	rex.B
   140019869:	pop    r8
   14001986b:	pop    rax
   14001986c:	pop    rdx
   14001986d:	add    BYTE PTR [rdi],bh
   14001986f:	push   rdx
   140019870:	gs (bad) 
   140019872:	fs push rbp
   140019874:	outs   dx,BYTE PTR ds:[rsi]
   140019875:	ins    BYTE PTR es:[rdi],dx
   140019876:	outs   dx,DWORD PTR ds:[rsi]
   140019877:	movsxd ebp,DWORD PTR [rbx+0x40]
   14001987a:	rex.XB push r10
   14001987c:	gs (bad) 
   14001987e:	fs gs jb 0x1400198d9
   140019882:	jb     0x1400198ed
   140019884:	je     0x1400198eb
   140019886:	jb     0x1400198d4
   140019888:	outs   dx,DWORD PTR ds:[rsi]
   140019889:	movsxd ebp,DWORD PTR [rbx+0x32]
   14001988c:	rex
   14001988d:	rex push rcx
   14001988f:	rex.RB
   140019890:	rex.B
   140019891:	pop    r8
   140019893:	pop    rax
   140019894:	pop    rdx
   140019895:	add    BYTE PTR [rdi],bh
   140019897:	push   rdx
   140019898:	gs (bad) 
   14001989a:	fs push rbp
   14001989c:	outs   dx,BYTE PTR ds:[rsi]
   14001989d:	ins    BYTE PTR es:[rdi],dx
   14001989e:	outs   dx,DWORD PTR ds:[rsi]
   14001989f:	movsxd ebp,DWORD PTR [rbx+0x40]
   1400198a2:	rex.XB push r10
   1400198a4:	gs (bad) 
   1400198a6:	fs gs jb 0x140019901
   1400198aa:	jb     0x140019915
   1400198ac:	je     0x140019913
   1400198ae:	jb     0x1400198fc
   1400198b0:	outs   dx,DWORD PTR ds:[rsi]
   1400198b1:	movsxd ebp,DWORD PTR [rbx+0x33]
   1400198b4:	rex
   1400198b5:	rex push rcx
   1400198b7:	rex.RB
   1400198b8:	rex.B
   1400198b9:	pop    r8
   1400198bb:	pop    rax
   1400198bc:	pop    rdx
   1400198bd:	add    BYTE PTR [rdi],bh
   1400198bf:	push   rdx
   1400198c0:	gs (bad) 
   1400198c2:	fs push rbp
   1400198c4:	outs   dx,BYTE PTR ds:[rsi]
   1400198c5:	ins    BYTE PTR es:[rdi],dx
   1400198c6:	outs   dx,DWORD PTR ds:[rsi]
   1400198c7:	movsxd ebp,DWORD PTR [rbx+0x40]
   1400198ca:	rex.XB push r10
   1400198cc:	gs (bad) 
   1400198ce:	fs gs jb 0x140019929
   1400198d2:	jb     0x14001993d
   1400198d4:	je     0x14001993b
   1400198d6:	jb     0x140019924
   1400198d8:	outs   dx,DWORD PTR ds:[rsi]
   1400198d9:	movsxd ebp,DWORD PTR [rbx+0x40]
   1400198dc:	rex push rcx
   1400198de:	rex.RB
   1400198df:	rex.B
   1400198e0:	pop    r8
   1400198e2:	pop    rax
   1400198e3:	pop    rdx
   1400198e4:	add    BYTE PTR [rdi],bh
   1400198e6:	push   rdx
   1400198e7:	gs (bad) 
   1400198e9:	fs push rbp
   1400198eb:	outs   dx,BYTE PTR ds:[rsi]
   1400198ec:	ins    BYTE PTR es:[rdi],dx
   1400198ed:	outs   dx,DWORD PTR ds:[rsi]
   1400198ee:	movsxd ebp,DWORD PTR [rbx+0x40]
   1400198f1:	rex.XB push r10
   1400198f3:	je     0x140019961
   1400198f5:	push   rdx
   1400198f6:	gs jae 0x140019968
   1400198f9:	jne    0x14001996d
   1400198fb:	movsxd esp,DWORD PTR [rbp+0x40]
   1400198fe:	rex push rcx
   140019900:	rex.RB
   140019901:	rex.B
   140019902:	pop    r8
   140019904:	pop    rax
   140019905:	pop    rdx
   140019906:	add    BYTE PTR [rdi],bh
   140019908:	push   rdx
   140019909:	gs (bad) 
   14001990b:	fs push rbp
   14001990d:	outs   dx,BYTE PTR ds:[rsi]
   14001990e:	ins    BYTE PTR es:[rdi],dx
   14001990f:	outs   dx,DWORD PTR ds:[rsi]
   140019910:	movsxd ebp,DWORD PTR [rbx+0x40]
   140019913:	rex.XB push r11
   140019915:	push   0x4c657261
   14001991a:	outs   dx,DWORD PTR ds:[rsi]
   14001991b:	movsxd ebp,DWORD PTR [rbx+0x40]
   14001991e:	rex push rcx
   140019920:	rex.RB
   140019921:	rex.B
   140019922:	pop    r8
   140019924:	pop    rax
   140019925:	pop    rdx
   140019926:	add    BYTE PTR [rdi],bh
   140019928:	push   rdx
   140019929:	gs (bad) 
   14001992b:	fs push rbp
   14001992d:	outs   dx,BYTE PTR ds:[rsi]
   14001992e:	ins    BYTE PTR es:[rdi],dx
   14001992f:	outs   dx,DWORD PTR ds:[rsi]
   140019930:	movsxd ebp,DWORD PTR [rbx+0x40]
   140019933:	rex.XB push r11
   140019935:	ins    DWORD PTR es:[rdi],dx
   140019936:	(bad)  
   140019937:	ins    BYTE PTR es:[rdi],dx
   140019938:	ins    BYTE PTR es:[rdi],dx
   140019939:	push   rbx
   14001993a:	jo     0x1400199a5
   14001993c:	outs   dx,BYTE PTR ds:[rsi]
   14001993d:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14001993f:	movsxd ebp,DWORD PTR [rbx+0x40]
   140019942:	rex push rcx
   140019944:	rex.RB
   140019945:	rex.B
   140019946:	pop    r8
   140019948:	pop    rax
   140019949:	pop    rdx
   14001994a:	add    BYTE PTR [rdi],bh
   14001994c:	push   rdx
   14001994d:	gs (bad) 
   14001994f:	fs push rbp
   140019951:	outs   dx,BYTE PTR ds:[rsi]
   140019952:	ins    BYTE PTR es:[rdi],dx
   140019953:	outs   dx,DWORD PTR ds:[rsi]
   140019954:	movsxd ebp,DWORD PTR [rbx+0x40]
   140019957:	rex.XB push r11
   140019959:	jo     0x1400199c4
   14001995b:	outs   dx,BYTE PTR ds:[rsi]
   14001995c:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14001995e:	movsxd ebp,DWORD PTR [rbx+0x40]
   140019961:	rex push rcx
   140019963:	rex.RB
   140019964:	rex.B
   140019965:	pop    r8
   140019967:	pop    rax
   140019968:	pop    rdx
   140019969:	add    BYTE PTR [rdi],bh
   14001996b:	push   rdx
   14001996c:	gs (bad) 
   14001996e:	ins    BYTE PTR es:[rdi],dx
   14001996f:	ins    BYTE PTR es:[rdi],dx
   140019970:	outs   dx,DWORD PTR ds:[rsi]
   140019971:	movsxd edx,DWORD PTR [rbx+0x74]
   140019974:	outs   dx,DWORD PTR ds:[rsi]
   140019975:	jb     0x1400199d8
   140019977:	addr32 gs rex
   14001997a:	rex.X push rbp
   14001997c:	rex.RX
   14001997d:	rex.RX
   14001997e:	rex.RB push r10
   140019980:	rex
   140019981:	rex
   140019982:	rex.B
   140019983:	rex.RB
   140019984:	rex.B
   140019985:	pop    r15
   140019987:	rex.WRX
   140019988:	rex.WXB
   140019989:	rex pop rdx
   14001998b:	add    BYTE PTR [rdi],bh
   14001998d:	push   rdx
   14001998e:	movsxd esp,DWORD PTR gs:[rcx+0x6c]
   140019992:	movsxd ecx,DWORD PTR [rbp+riz*2+0x6e]
   140019996:	rex
   140019997:	rex.WRB push r13
   140019999:	rex.WR push rsp
   14001999b:	rex.WB push r11
   14001999d:	pop    rdx
   14001999e:	rex
   14001999f:	rex push rcx
   1400199a1:	rex.RB
   1400199a2:	rex.B
   1400199a3:	pop    r8
   1400199a5:	pop    rax
   1400199a6:	pop    rdx
   1400199a7:	add    BYTE PTR [rdi],bh
   1400199a9:	push   rdx
   1400199aa:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   1400199ae:	jae    0x140019a19
   1400199b0:	outs   dx,DWORD PTR ds:[rsi]
   1400199b1:	outs   dx,BYTE PTR ds:[rsi]
   1400199b2:	rex (bad) 
   1400199b4:	and    al,0x43
   1400199b6:	rex.WR outs dx,DWORD PTR ds:[rsi]
   1400199b8:	movsxd ebp,DWORD PTR [rbx+0x42]
   1400199bb:	(bad)  
   1400199bc:	jae    0x140019a23
   1400199be:	and    al,0x30
   1400199c1:	xor    BYTE PTR [rax+rsi*1],ah
   1400199c4:	xor    BYTE PTR [rax+rsi*1],ah
   1400199c7:	xor    ah,BYTE PTR [rax+rsi*1]
   1400199ca:	xor    BYTE PTR [rax+rsi*1],ah
   1400199cd:	xor    ah,BYTE PTR [rax+rsi*1]
   1400199d0:	xor    DWORD PTR [rax+0x40],eax
   1400199d3:	push   rbx
   1400199d4:	rex.B (bad) 
   1400199d6:	push   r15
   1400199d8:	xor    al,0x4c
   1400199da:	rex.WRXB
   1400199db:	rex.XB
   1400199dc:	rex.WXB pop r15
   1400199de:	push   rdx
   1400199df:	rex.RB
   1400199e0:	rex.XB push r13
   1400199e2:	push   rdx
   1400199e3:	push   rbx
   1400199e4:	rex.WB
   1400199e5:	rex.WRXB
   1400199e6:	rex.WRX
   1400199e7:	rex
   1400199e8:	rex pop rax
   1400199ea:	pop    rdx
   1400199eb:	add    BYTE PTR [rdi],bh
   1400199ed:	push   rdx
   1400199ee:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   1400199f2:	jae    0x140019a5d
   1400199f4:	outs   dx,DWORD PTR ds:[rsi]
   1400199f5:	outs   dx,BYTE PTR ds:[rsi]
   1400199f6:	rex (bad) 
   1400199f8:	and    al,0x43
   1400199fa:	rex.WR outs dx,DWORD PTR ds:[rsi]
   1400199fc:	movsxd ebp,DWORD PTR [rbx+0x42]
   1400199ff:	(bad)  
   140019a00:	jae    0x140019a67
   140019a02:	and    al,0x30
   140019a05:	xor    DWORD PTR [rax+rsi*1],esp
   140019a08:	xor    BYTE PTR [rax+rsi*1],ah
   140019a0b:	xor    BYTE PTR [rax+rsi*1],ah
   140019a0e:	xor    BYTE PTR [rax+rsi*1],ah
   140019a11:	xor    ah,BYTE PTR [rax+rsi*1]
   140019a14:	xor    DWORD PTR [rax+0x40],eax
   140019a17:	push   rbx
   140019a18:	rex.B (bad) 
   140019a1a:	push   r15
   140019a1c:	xor    al,0x4c
   140019a1e:	rex.WRXB
   140019a1f:	rex.XB
   140019a20:	rex.WXB pop r15
   140019a22:	push   rdx
   140019a23:	rex.RB
   140019a24:	rex.XB push r13
   140019a26:	push   rdx
   140019a27:	push   rbx
   140019a28:	rex.WB
   140019a29:	rex.WRXB
   140019a2a:	rex.WRX
   140019a2b:	rex
   140019a2c:	rex pop rax
   140019a2e:	pop    rdx
   140019a2f:	add    BYTE PTR [rdi],bh
   140019a31:	push   rdx
   140019a32:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   140019a36:	jae    0x140019aa1
   140019a38:	outs   dx,DWORD PTR ds:[rsi]
   140019a39:	outs   dx,BYTE PTR ds:[rsi]
   140019a3a:	rex (bad) 
   140019a3c:	and    al,0x43
   140019a3e:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140019a40:	movsxd ebp,DWORD PTR [rbx+0x42]
   140019a43:	(bad)  
   140019a44:	jae    0x140019aab
   140019a46:	and    al,0x30
   140019a49:	xor    ah,BYTE PTR [rax+rsi*1]
   140019a4c:	xor    BYTE PTR [rax+rsi*1],ah
   140019a4f:	xor    BYTE PTR [rax+rsi*1],ah
   140019a52:	xor    BYTE PTR [rax+rsi*1],ah
   140019a55:	xor    BYTE PTR [rax+rsi*1],ah
   140019a58:	xor    BYTE PTR [rax+0x40],al
   140019a5b:	push   rbx
   140019a5c:	rex.B (bad) 
   140019a5e:	push   r15
   140019a60:	xor    al,0x4c
   140019a62:	rex.WRXB
   140019a63:	rex.XB
   140019a64:	rex.WXB pop r15
   140019a66:	push   rdx
   140019a67:	rex.RB
   140019a68:	rex.XB push r13
   140019a6a:	push   rdx
   140019a6b:	push   rbx
   140019a6c:	rex.WB
   140019a6d:	rex.WRXB
   140019a6e:	rex.WRX
   140019a6f:	rex
   140019a70:	rex pop rax
   140019a72:	pop    rdx
   140019a73:	add    BYTE PTR [rdi],bh
   140019a75:	push   rdx
   140019a76:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   140019a7a:	jae    0x140019ae5
   140019a7c:	outs   dx,DWORD PTR ds:[rsi]
   140019a7d:	outs   dx,BYTE PTR ds:[rsi]
   140019a7e:	rex (bad) 
   140019a80:	and    al,0x43
   140019a82:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140019a84:	movsxd ebp,DWORD PTR [rbx+0x42]
   140019a87:	(bad)  
   140019a88:	jae    0x140019aef
   140019a8a:	and    al,0x30
   140019a8d:	xor    esp,DWORD PTR [rax+rsi*1]
   140019a90:	xor    BYTE PTR [rax+rsi*1],ah
   140019a93:	xor    BYTE PTR [rax+rsi*1],ah
   140019a96:	xor    DWORD PTR [rax+rsi*1],esp
   140019a99:	xor    ah,BYTE PTR [rax+rsi*1]
   140019a9c:	xor    al,BYTE PTR [rax+0x40]
   140019a9f:	push   rbx
   140019aa0:	rex.B (bad) 
   140019aa2:	push   r15
   140019aa4:	xor    al,0x4c
   140019aa6:	rex.WRXB
   140019aa7:	rex.XB
   140019aa8:	rex.WXB pop r15
   140019aaa:	push   rdx
   140019aab:	rex.RB
   140019aac:	rex.XB push r13
   140019aae:	push   rdx
   140019aaf:	push   rbx
   140019ab0:	rex.WB
   140019ab1:	rex.WRXB
   140019ab2:	rex.WRX
   140019ab3:	rex
   140019ab4:	rex pop rax
   140019ab6:	pop    rdx
   140019ab7:	add    BYTE PTR [rdi],bh
   140019ab9:	push   rdx
   140019aba:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   140019abe:	jae    0x140019b29
   140019ac0:	outs   dx,DWORD PTR ds:[rsi]
   140019ac1:	outs   dx,BYTE PTR ds:[rsi]
   140019ac2:	rex (bad) 
   140019ac4:	and    al,0x43
   140019ac6:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140019ac8:	movsxd ebp,DWORD PTR [rbx+0x42]
   140019acb:	(bad)  
   140019acc:	jae    0x140019b33
   140019ace:	and    al,0x30
   140019ad1:	xor    al,0x24
   140019ad3:	xor    BYTE PTR [rcx],dh
   140019ad5:	and    al,0x30
   140019ad7:	xor    BYTE PTR [rax+rsi*1],ah
   140019ada:	xor    DWORD PTR [rax+rsi*1],esp
   140019add:	xor    ah,BYTE PTR [rax+rsi*1]
   140019ae0:	xor    al,BYTE PTR [rax+0x40]
   140019ae3:	push   rbx
   140019ae4:	rex.B (bad) 
   140019ae6:	push   r15
   140019ae8:	xor    al,0x4c
   140019aea:	rex.WRXB
   140019aeb:	rex.XB
   140019aec:	rex.WXB pop r15
   140019aee:	push   rdx
   140019aef:	rex.RB
   140019af0:	rex.XB push r13
   140019af2:	push   rdx
   140019af3:	push   rbx
   140019af4:	rex.WB
   140019af5:	rex.WRXB
   140019af6:	rex.WRX
   140019af7:	rex
   140019af8:	rex pop rax
   140019afa:	pop    rdx
   140019afb:	add    BYTE PTR [rdi],bh
   140019afd:	push   rdx
   140019afe:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   140019b02:	jae    0x140019b6d
   140019b04:	outs   dx,DWORD PTR ds:[rsi]
   140019b05:	outs   dx,BYTE PTR ds:[rsi]
   140019b06:	rex (bad) 
   140019b08:	and    al,0x43
   140019b0a:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140019b0c:	movsxd ebp,DWORD PTR [rbx+0x42]
   140019b0f:	(bad)  
   140019b10:	jae    0x140019b77
   140019b12:	and    al,0x30
   140019b15:	xor    eax,0x24313024
   140019b1a:	xor    BYTE PTR [rax],dh
   140019b1c:	and    al,0x30
   140019b1e:	xor    DWORD PTR [rax+rsi*1],esp
   140019b21:	xor    ah,BYTE PTR [rax+rsi*1]
   140019b24:	xor    al,BYTE PTR [rax+0x40]
   140019b27:	push   rbx
   140019b28:	rex.B (bad) 
   140019b2a:	push   r15
   140019b2c:	xor    al,0x4c
   140019b2e:	rex.WRXB
   140019b2f:	rex.XB
   140019b30:	rex.WXB pop r15
   140019b32:	push   rdx
   140019b33:	rex.RB
   140019b34:	rex.XB push r13
   140019b36:	push   rdx
   140019b37:	push   rbx
   140019b38:	rex.WB
   140019b39:	rex.WRXB
   140019b3a:	rex.WRX
   140019b3b:	rex
   140019b3c:	rex pop rax
   140019b3e:	pop    rdx
   140019b3f:	add    BYTE PTR [rdi],bh
   140019b41:	push   rdx
   140019b42:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   140019b46:	jae    0x140019bb1
   140019b48:	outs   dx,DWORD PTR ds:[rsi]
   140019b49:	outs   dx,BYTE PTR ds:[rsi]
   140019b4a:	rex (bad) 
   140019b4c:	and    al,0x43
   140019b4e:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140019b50:	movsxd ebp,DWORD PTR [rbx+0x42]
   140019b53:	(bad)  
   140019b54:	jae    0x140019bbb
   140019b56:	and    al,0x30
   140019b59:	ss and al,0x30
   140019b5c:	xor    DWORD PTR [rax+rsi*1],esp
   140019b5f:	xor    DWORD PTR [rax+rsi*1],esp
   140019b62:	xor    BYTE PTR [rax+rsi*1],ah
   140019b65:	xor    ah,BYTE PTR [rax+rsi*1]
   140019b68:	xor    DWORD PTR [rax+0x40],eax
   140019b6b:	push   rbx
   140019b6c:	rex.B (bad) 
   140019b6e:	push   r15
   140019b70:	xor    al,0x4c
   140019b72:	rex.WRXB
   140019b73:	rex.XB
   140019b74:	rex.WXB pop r15
   140019b76:	push   rdx
   140019b77:	rex.RB
   140019b78:	rex.XB push r13
   140019b7a:	push   rdx
   140019b7b:	push   rbx
   140019b7c:	rex.WB
   140019b7d:	rex.WRXB
   140019b7e:	rex.WRX
   140019b7f:	rex
   140019b80:	rex pop rax
   140019b82:	pop    rdx
   140019b83:	add    BYTE PTR [rdi],bh
   140019b85:	push   rdx
   140019b86:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   140019b8a:	jae    0x140019bf5
   140019b8c:	outs   dx,DWORD PTR ds:[rsi]
   140019b8d:	outs   dx,BYTE PTR ds:[rsi]
   140019b8e:	rex (bad) 
   140019b90:	and    al,0x43
   140019b92:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140019b94:	movsxd ebp,DWORD PTR [rbx+0x42]
   140019b97:	(bad)  
   140019b98:	jae    0x140019bff
   140019b9a:	and    al,0x30
   140019b9d:	(bad)  
   140019b9e:	and    al,0x30
   140019ba0:	xor    DWORD PTR [rax+rsi*1],esp
   140019ba3:	xor    DWORD PTR [rax+rsi*1],esp
   140019ba6:	xor    BYTE PTR [rax+rsi*1],ah
   140019ba9:	xor    ah,BYTE PTR [rax+rsi*1]
   140019bac:	xor    DWORD PTR [rax+0x40],eax
   140019baf:	push   rbx
   140019bb0:	rex.B (bad) 
   140019bb2:	push   r15
   140019bb4:	xor    al,0x4c
   140019bb6:	rex.WRXB
   140019bb7:	rex.XB
   140019bb8:	rex.WXB pop r15
   140019bba:	push   rdx
   140019bbb:	rex.RB
   140019bbc:	rex.XB push r13
   140019bbe:	push   rdx
   140019bbf:	push   rbx
   140019bc0:	rex.WB
   140019bc1:	rex.WRXB
   140019bc2:	rex.WRX
   140019bc3:	rex
   140019bc4:	rex pop rax
   140019bc6:	pop    rdx
   140019bc7:	add    BYTE PTR [rdi],bh
   140019bc9:	push   rdx
   140019bca:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   140019bce:	jae    0x140019c39
   140019bd0:	outs   dx,DWORD PTR ds:[rsi]
   140019bd1:	outs   dx,BYTE PTR ds:[rsi]
   140019bd2:	rex (bad) 
   140019bd4:	and    al,0x43
   140019bd6:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140019bd8:	movsxd ebp,DWORD PTR [rbx+0x42]
   140019bdb:	(bad)  
   140019bdc:	jae    0x140019c43
   140019bde:	and    al,0x30
   140019be1:	cmp    BYTE PTR [rax+rsi*1],ah
   140019be4:	xor    DWORD PTR [rax+rsi*1],esp
   140019be7:	xor    BYTE PTR [rax+rsi*1],ah
   140019bea:	xor    BYTE PTR [rax+rsi*1],ah
   140019bed:	xor    ah,BYTE PTR [rax+rsi*1]
   140019bf0:	xor    DWORD PTR [rax+0x40],eax
   140019bf3:	push   rbx
   140019bf4:	rex.B (bad) 
   140019bf6:	push   r15
   140019bf8:	xor    al,0x4c
   140019bfa:	rex.WRXB
   140019bfb:	rex.XB
   140019bfc:	rex.WXB pop r15
   140019bfe:	push   rdx
   140019bff:	rex.RB
   140019c00:	rex.XB push r13
   140019c02:	push   rdx
   140019c03:	push   rbx
   140019c04:	rex.WB
   140019c05:	rex.WRXB
   140019c06:	rex.WRX
   140019c07:	rex
   140019c08:	rex pop rax
   140019c0a:	pop    rdx
   140019c0b:	add    BYTE PTR [rdi],bh
   140019c0d:	push   rdx
   140019c0e:	gs ins BYTE PTR es:[rdi],dx
   140019c10:	gs (bad) 
   140019c12:	jae    0x140019c79
   140019c14:	rex.RB js 0x140019c7a
   140019c17:	ins    BYTE PTR es:[rdi],dx
   140019c18:	jne    0x140019c8d
   140019c1a:	imul   esi,DWORD PTR [rsi+0x65],0x6b636f4c
   140019c21:	rex
   140019c22:	rex.XB push r11
   140019c24:	push   0x6c657261
   140019c29:	outs   dx,DWORD PTR ds:[rsi]
   140019c2a:	movsxd ebp,DWORD PTR [rbx+0x40]
   140019c2d:	rex push rcx
   140019c2f:	rex.RB
   140019c30:	rex.B
   140019c31:	pop    r8
   140019c33:	pop    rax
   140019c34:	pop    rdx
   140019c35:	add    BYTE PTR [rdi],bh
   140019c37:	push   rdx
   140019c38:	gs ins BYTE PTR es:[rdi],dx
   140019c3a:	gs (bad) 
   140019c3c:	jae    0x140019ca3
   140019c3e:	push   rbx
   140019c3f:	push   0x4c657261
   140019c44:	outs   dx,DWORD PTR ds:[rsi]
   140019c45:	movsxd ebp,DWORD PTR [rbx+0x40]
   140019c48:	rex.XB push r11
   140019c4a:	push   0x6c657261
   140019c4f:	outs   dx,DWORD PTR ds:[rsi]
   140019c50:	movsxd ebp,DWORD PTR [rbx+0x40]
   140019c53:	rex push rcx
   140019c55:	rex.RB
   140019c56:	rex.B
   140019c57:	pop    r8
   140019c59:	pop    rax
   140019c5a:	pop    rdx
   140019c5b:	add    BYTE PTR [rdi],bh
   140019c5d:	push   rdx
   140019c5e:	gs jae 0x140019cc6
   140019c61:	je     0x140019ca3
   140019c63:	rex.WRB push r13
   140019c65:	rex.WR push rsp
   140019c67:	rex.WB push r11
   140019c69:	pop    rdx
   140019c6a:	rex
   140019c6b:	rex push rcx
   140019c6d:	rex.RB
   140019c6e:	rex.B
   140019c6f:	pop    r8
   140019c71:	pop    rax
   140019c72:	pop    rdx
   140019c73:	add    BYTE PTR [rdi],bh
   140019c75:	push   rdx
   140019c76:	gs jae 0x140019cde
   140019c79:	je     0x140019cbb
   140019c7b:	push   rbx
   140019c7c:	push   rsp
   140019c7d:	push   rdx
   140019c7e:	rex.B
   140019c7f:	rex
   140019c80:	rex push rcx
   140019c82:	rex.RB
   140019c83:	rex.B
   140019c84:	pop    r8
   140019c86:	pop    rax
   140019c87:	pop    rdx
   140019c88:	add    BYTE PTR [rdi],bh
   140019c8a:	push   rdx
   140019c8b:	gs jae 0x140019cf3
   140019c8e:	je     0x140019cd0
   140019c90:	push   rbx
   140019c91:	push   rsp
   140019c92:	push   rdx
   140019c93:	push   r13
   140019c95:	rex
   140019c96:	rex push rcx
   140019c98:	rex.RB
   140019c99:	rex.B
   140019c9a:	pop    r8
   140019c9c:	pop    rax
   140019c9d:	pop    rdx
   140019c9e:	add    BYTE PTR [rdi],bh
   140019ca0:	push   rdx
   140019ca1:	gs jae 0x140019d09
   140019ca4:	je     0x140019ce6
   140019ca6:	push   rbx
   140019ca7:	push   rsp
   140019ca8:	push   rdx
   140019ca9:	push   rbp
   140019caa:	rex
   140019cab:	rex push rcx
   140019cad:	rex.RB
   140019cae:	rex.B
   140019caf:	pop    r8
   140019cb1:	pop    rax
   140019cb2:	pop    rdx
   140019cb3:	add    BYTE PTR [rdi],bh
   140019cb5:	push   rdx
   140019cb6:	gs jae 0x140019d22
   140019cb9:	jp     0x140019d20
   140019cbb:	rex
   140019cbc:	rex.X push rbp
   140019cbe:	rex.RX
   140019cbf:	rex.RX
   140019cc0:	rex.RB push r10
   140019cc2:	rex
   140019cc3:	rex push rcx
   140019cc5:	rex.RB
   140019cc6:	rex.B
   140019cc7:	pop    r15
   140019cc9:	rex.WRX
   140019cca:	rex.WXB
   140019ccb:	rex pop rdx
   140019ccd:	add    BYTE PTR [rdi],bh
   140019ccf:	push   rdx
   140019cd0:	gs jae 0x140019d3c
   140019cd3:	jp     0x140019d3a
   140019cd5:	rex
   140019cd6:	rex.X push rbp
   140019cd8:	rex.RX
   140019cd9:	rex.RX
   140019cda:	rex.RB push r10
   140019cdc:	rex
   140019cdd:	rex push rcx
   140019cdf:	rex.RB
   140019ce0:	rex.B
   140019ce1:	pop    r15
   140019ce3:	rex.WRX
   140019ce4:	rex.WXB
   140019ce5:	rex.WXB
   140019ce6:	rex pop rdx
   140019ce8:	add    BYTE PTR [rdi],bh
   140019cea:	push   rdx
   140019ceb:	gs jae 0x140019d57
   140019cee:	jp     0x140019d55
   140019cf0:	rex push rbx
   140019cf2:	push   rsp
   140019cf3:	push   rdx
   140019cf4:	rex.B
   140019cf5:	rex
   140019cf6:	rex push rcx
   140019cf8:	rex.RB
   140019cf9:	rex.B
   140019cfa:	rex.B
   140019cfb:	rex.WX
   140019cfc:	rex.WXB
   140019cfd:	rex pop rdx
   140019cff:	add    BYTE PTR [rdi],bh
   140019d01:	push   rdx
   140019d02:	gs jae 0x140019d6e
   140019d05:	jp     0x140019d6c
   140019d07:	rex push rbx
   140019d09:	push   rsp
   140019d0a:	push   rdx
   140019d0b:	push   rbp
   140019d0c:	rex
   140019d0d:	rex push rcx
   140019d0f:	rex.RB
   140019d10:	rex.B
   140019d11:	rex.B
   140019d12:	rex.WX
   140019d13:	rex.WXB
   140019d14:	rex pop rdx
   140019d16:	add    BYTE PTR [rdi],bh
   140019d18:	push   rdx
   140019d19:	gs jae 0x140019d85
   140019d1c:	jp     0x140019d83
   140019d1e:	push   rdi
   140019d1f:	rex push rbx
   140019d21:	push   rsp
   140019d22:	push   rdx
   140019d23:	push   r13
   140019d25:	rex
   140019d26:	rex push rcx
   140019d28:	rex.RB
   140019d29:	rex.B
   140019d2a:	rex.B
   140019d2b:	rex.W
   140019d2c:	rex.WXB
   140019d2d:	rex pop rdx
   140019d2f:	add    BYTE PTR [rdi],bh
   140019d31:	push   rbx
   140019d32:	rex.B
   140019d33:	rex.RX
   140019d34:	rex.RB pop r15
   140019d36:	jae    0x140019da6
   140019d38:	ja     0x140019daa
   140019d3a:	jb     0x140019da5
   140019d3c:	outs   dx,BYTE PTR ds:[rsi]
   140019d3d:	je     0x140019da5
   140019d3f:	rex
   140019d40:	rex pop rcx
   140019d42:	rex.B
   140019d43:	rex.WX push rax
   140019d45:	rex.RB
   140019d46:	push   r14
   140019d48:	push   rbx
   140019d49:	push   rsp
   140019d4a:	push   rdx
   140019d4b:	push   rbp
   140019d4c:	rex
   140019d4d:	rex push rax
   140019d4f:	rex.RB
   140019d50:	rex.X
   140019d51:	rex.RXB pop r10
   140019d53:	pop    rdx
   140019d54:	add    BYTE PTR [rdi],bh
   140019d56:	push   rbx
   140019d57:	(bad)  
   140019d58:	rex.XB outs dx,WORD PTR gs:[rsi]
   140019d5c:	jo     0x140019dd7
   140019d5e:	rex push rbx
   140019d60:	push   rsp
   140019d61:	push   rdx
   140019d62:	push   r13
   140019d64:	rex
   140019d65:	rex push rcx
   140019d67:	rex.RB
   140019d68:	rex.B
   140019d69:	rex.B
   140019d6a:	rex.W push rax
   140019d6c:	rex.RB
   140019d6d:	rex.X
   140019d6e:	rex.R
   140019d6f:	rex pop rdx
   140019d71:	add    BYTE PTR [rdi],bh
   140019d73:	push   rbx
   140019d74:	(bad)  
   140019d75:	rex.XB outs dx,WORD PTR gs:[rsi]
   140019d79:	jo     0x140019df4
   140019d7b:	rex push rbx
   140019d7d:	push   rsp
   140019d7e:	push   rdx
   140019d7f:	push   r13
   140019d81:	rex
   140019d82:	rex push rcx
   140019d84:	rex.RB
   140019d85:	rex.B
   140019d86:	rex.B
   140019d87:	rex.W push rax
   140019d89:	rex.RB
   140019d8a:	rex.X
   140019d8b:	rex.RXB
   140019d8c:	rex pop rdx
   140019d8e:	add    BYTE PTR [rdi],bh
   140019d90:	push   rbx
   140019d91:	(bad)  
   140019d92:	jbe    0x140019df9
   140019d94:	rex
   140019d95:	rex.WRB
   140019d96:	rex.X
   140019d97:	rex
   140019d98:	rex push rcx
   140019d9a:	rex.RB
   140019d9b:	rex.B
   140019d9c:	rex.B
   140019d9d:	rex.W pop rax
   140019d9f:	pop    rdx
   140019da0:	add    BYTE PTR [rdi],bh
   140019da2:	push   rbx
   140019da3:	gs je  0x140019dea
   140019da6:	(bad)  
   140019da7:	je     0x140019e0a
   140019da9:	rex
   140019daa:	rex.WRB
   140019dab:	rex.X
   140019dac:	rex
   140019dad:	rex push rcx
   140019daf:	rex.RB
   140019db0:	rex.B
   140019db1:	rex.B
   140019db2:	rex.W push rax
   140019db4:	rex.RB
   140019db5:	rex.X
   140019db6:	rex.RXB
   140019db7:	rex.WXB
   140019db8:	rex.WXB
   140019db9:	rex.WXB push r8
   140019dbb:	rex.RB
   140019dbc:	pop    r8
   140019dbe:	rex.WXB
   140019dbf:	rex.WXB
   140019dc0:	rex pop rdx
   140019dc2:	add    BYTE PTR [rdi],bh
   140019dc4:	push   rbx
   140019dc5:	gs je  0x140019e0c
   140019dc8:	gs data16 (bad) 
   140019dcb:	jne    0x140019e39
   140019dcd:	je     0x140019e22
   140019dcf:	jo     0x140019e3a
   140019dd1:	outs   dx,BYTE PTR ds:[rsi]
   140019dd2:	rex.B
   140019dd3:	fs push 0x75
   140019dd6:	jae    0x140019e4c
   140019dd8:	ins    DWORD PTR es:[rdi],dx
   140019dd9:	outs   dx,BYTE PTR gs:[rsi]
   140019ddb:	je     0x140019e23
   140019ddd:	(bad)  
   140019dde:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   140019de2:	rex
   140019de3:	rex.XB
   140019de4:	rex.XB jb 0x140019e50
   140019de7:	je     0x140019e3c
   140019de9:	movsxd eax,DWORD PTR gs:[rax+0x40]
   140019ded:	push   rbx
   140019dee:	pop    r8
   140019df0:	rex.WRX
   140019df1:	rex pop rdx
   140019df3:	add    BYTE PTR [rdi],bh
   140019df5:	push   rbx
   140019df6:	gs je  0x140019e3d
   140019df9:	gs data16 (bad) 
   140019dfc:	jne    0x140019e6a
   140019dfe:	je     0x140019e53
   140019e00:	jo     0x140019e6b
   140019e02:	outs   dx,BYTE PTR ds:[rsi]
   140019e03:	rex.B
   140019e04:	fs push 0x75
   140019e07:	jae    0x140019e7d
   140019e09:	ins    DWORD PTR es:[rdi],dx
   140019e0a:	outs   dx,BYTE PTR gs:[rsi]
   140019e0c:	je     0x140019e54
   140019e0e:	(bad)  
   140019e0f:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   140019e13:	rex
   140019e14:	rex.XB
   140019e15:	rex.RX (bad) 
   140019e17:	imul   esp,DWORD PTR [rbp+0x4c],0x6f
   140019e1b:	movsxd ebp,DWORD PTR [rbx+0x40]
   140019e1e:	rex push rbx
   140019e20:	pop    r8
   140019e22:	rex.WRX
   140019e23:	rex pop rdx
   140019e25:	add    BYTE PTR [rdi],bh
   140019e27:	push   rbx
   140019e28:	gs je  0x140019e6f
   140019e2b:	gs data16 (bad) 
   140019e2e:	jne    0x140019e9c
   140019e30:	je     0x140019e85
   140019e32:	jo     0x140019e9d
   140019e34:	outs   dx,BYTE PTR ds:[rsi]
   140019e35:	rex.B
   140019e36:	fs push 0x75
   140019e39:	jae    0x140019eaf
   140019e3b:	ins    DWORD PTR es:[rdi],dx
   140019e3c:	outs   dx,BYTE PTR gs:[rsi]
   140019e3e:	je     0x140019e86
   140019e40:	(bad)  
   140019e41:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   140019e45:	rex
   140019e46:	rex.XB push r10
   140019e48:	gs (bad) 
   140019e4a:	fs gs jb 0x140019ea5
   140019e4e:	jb     0x140019eb9
   140019e50:	je     0x140019eb7
   140019e52:	jb     0x140019ea0
   140019e54:	outs   dx,DWORD PTR ds:[rsi]
   140019e55:	movsxd ebp,DWORD PTR [rbx+0x32]
   140019e58:	rex
   140019e59:	rex push rbx
   140019e5b:	pop    r8
   140019e5d:	rex.WRX
   140019e5e:	rex pop rdx
   140019e60:	add    BYTE PTR [rdi],bh
   140019e62:	push   rbx
   140019e63:	gs je  0x140019eaa
   140019e66:	gs data16 (bad) 
   140019e69:	jne    0x140019ed7
   140019e6b:	je     0x140019ec0
   140019e6d:	jo     0x140019ed8
   140019e6f:	outs   dx,BYTE PTR ds:[rsi]
   140019e70:	rex.B
   140019e71:	fs push 0x75
   140019e74:	jae    0x140019eea
   140019e76:	ins    DWORD PTR es:[rdi],dx
   140019e77:	outs   dx,BYTE PTR gs:[rsi]
   140019e79:	je     0x140019ec1
   140019e7b:	(bad)  
   140019e7c:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   140019e80:	rex
   140019e81:	rex.XB push r10
   140019e83:	gs (bad) 
   140019e85:	fs gs jb 0x140019ee0
   140019e89:	jb     0x140019ef4
   140019e8b:	je     0x140019ef2
   140019e8d:	jb     0x140019edb
   140019e8f:	outs   dx,DWORD PTR ds:[rsi]
   140019e90:	movsxd ebp,DWORD PTR [rbx+0x33]
   140019e93:	rex
   140019e94:	rex push rbx
   140019e96:	pop    r8
   140019e98:	rex.WRX
   140019e99:	rex pop rdx
   140019e9b:	add    BYTE PTR [rdi],bh
   140019e9d:	push   rbx
   140019e9e:	gs je  0x140019ee5
   140019ea1:	gs data16 (bad) 
   140019ea4:	jne    0x140019f12
   140019ea6:	je     0x140019efb
   140019ea8:	jo     0x140019f13
   140019eaa:	outs   dx,BYTE PTR ds:[rsi]
   140019eab:	rex.B
   140019eac:	fs push 0x75
   140019eaf:	jae    0x140019f25
   140019eb1:	ins    DWORD PTR es:[rdi],dx
   140019eb2:	outs   dx,BYTE PTR gs:[rsi]
   140019eb4:	je     0x140019efc
   140019eb6:	(bad)  
   140019eb7:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   140019ebb:	rex
   140019ebc:	rex.XB push r10
   140019ebe:	gs (bad) 
   140019ec0:	fs gs jb 0x140019f1b
   140019ec4:	jb     0x140019f2f
   140019ec6:	je     0x140019f2d
   140019ec8:	jb     0x140019f16
   140019eca:	outs   dx,DWORD PTR ds:[rsi]
   140019ecb:	movsxd ebp,DWORD PTR [rbx+0x40]
   140019ece:	rex push rbx
   140019ed0:	pop    r8
   140019ed2:	rex.WRX
   140019ed3:	rex pop rdx
   140019ed5:	add    BYTE PTR [rdi],bh
   140019ed7:	push   rbx
   140019ed8:	gs je  0x140019f1f
   140019edb:	gs data16 (bad) 
   140019ede:	jne    0x140019f4c
   140019ee0:	je     0x140019f35
   140019ee2:	jo     0x140019f4d
   140019ee4:	outs   dx,BYTE PTR ds:[rsi]
   140019ee5:	rex.B
   140019ee6:	fs push 0x75
   140019ee9:	jae    0x140019f5f
   140019eeb:	ins    DWORD PTR es:[rdi],dx
   140019eec:	outs   dx,BYTE PTR gs:[rsi]
   140019eee:	je     0x140019f36
   140019ef0:	(bad)  
   140019ef1:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   140019ef5:	rex
   140019ef6:	rex.XB push r10
   140019ef8:	je     0x140019f66
   140019efa:	push   rdx
   140019efb:	gs jae 0x140019f6d
   140019efe:	jne    0x140019f72
   140019f00:	movsxd esp,DWORD PTR [rbp+0x40]
   140019f03:	rex push rbx
   140019f05:	pop    r8
   140019f07:	rex.WRX
   140019f08:	rex pop rdx
   140019f0a:	add    BYTE PTR [rdi],bh
   140019f0c:	push   rbx
   140019f0d:	gs je  0x140019f54
   140019f10:	gs data16 (bad) 
   140019f13:	jne    0x140019f81
   140019f15:	je     0x140019f6a
   140019f17:	jo     0x140019f82
   140019f19:	outs   dx,BYTE PTR ds:[rsi]
   140019f1a:	rex.B
   140019f1b:	fs push 0x75
   140019f1e:	jae    0x140019f94
   140019f20:	ins    DWORD PTR es:[rdi],dx
   140019f21:	outs   dx,BYTE PTR gs:[rsi]
   140019f23:	je     0x140019f6b
   140019f25:	(bad)  
   140019f26:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   140019f2a:	rex
   140019f2b:	rex.XB push r11
   140019f2d:	push   0x4c657261
   140019f32:	outs   dx,DWORD PTR ds:[rsi]
   140019f33:	movsxd ebp,DWORD PTR [rbx+0x40]
   140019f36:	rex push rbx
   140019f38:	pop    r8
   140019f3a:	rex.WRX
   140019f3b:	rex pop rdx
   140019f3d:	add    BYTE PTR [rdi],bh
   140019f3f:	push   rbx
   140019f40:	gs je  0x140019f87
   140019f43:	gs data16 (bad) 
   140019f46:	jne    0x140019fb4
   140019f48:	je     0x140019f9d
   140019f4a:	jo     0x140019fb5
   140019f4c:	outs   dx,BYTE PTR ds:[rsi]
   140019f4d:	rex.B
   140019f4e:	fs push 0x75
   140019f51:	jae    0x140019fc7
   140019f53:	ins    DWORD PTR es:[rdi],dx
   140019f54:	outs   dx,BYTE PTR gs:[rsi]
   140019f56:	je     0x140019f9e
   140019f58:	(bad)  
   140019f59:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   140019f5d:	rex
   140019f5e:	rex.XB push r11
   140019f60:	ins    DWORD PTR es:[rdi],dx
   140019f61:	(bad)  
   140019f62:	ins    BYTE PTR es:[rdi],dx
   140019f63:	ins    BYTE PTR es:[rdi],dx
   140019f64:	push   rbx
   140019f65:	jo     0x140019fd0
   140019f67:	outs   dx,BYTE PTR ds:[rsi]
   140019f68:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140019f6a:	movsxd ebp,DWORD PTR [rbx+0x40]
   140019f6d:	rex push rbx
   140019f6f:	pop    r8
   140019f71:	rex.WRX
   140019f72:	rex pop rdx
   140019f74:	add    BYTE PTR [rdi],bh
   140019f76:	push   rbx
   140019f77:	gs je  0x140019fbe
   140019f7a:	gs data16 (bad) 
   140019f7d:	jne    0x140019feb
   140019f7f:	je     0x140019fd4
   140019f81:	jo     0x140019fec
   140019f83:	outs   dx,BYTE PTR ds:[rsi]
   140019f84:	rex.B
   140019f85:	fs push 0x75
   140019f88:	jae    0x140019ffe
   140019f8a:	ins    DWORD PTR es:[rdi],dx
   140019f8b:	outs   dx,BYTE PTR gs:[rsi]
   140019f8d:	je     0x140019fd5
   140019f8f:	(bad)  
   140019f90:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   140019f94:	rex
   140019f95:	rex.XB push r11
   140019f97:	jo     0x14001a002
   140019f99:	outs   dx,BYTE PTR ds:[rsi]
   140019f9a:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140019f9c:	movsxd ebp,DWORD PTR [rbx+0x40]
   140019f9f:	rex push rbx
   140019fa1:	pop    r8
   140019fa3:	rex.WRX
   140019fa4:	rex pop rdx
   140019fa6:	add    BYTE PTR [rdi],bh
   140019fa8:	push   rbx
   140019fa9:	gs je  0x140019ff0
   140019fac:	gs data16 (bad) 
   140019faf:	jne    0x14001a01d
   140019fb1:	je     0x14001a006
   140019fb3:	jo     0x14001a01e
   140019fb5:	outs   dx,BYTE PTR ds:[rsi]
   140019fb6:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140019fb8:	jne    0x14001a028
   140019fba:	je     0x140019ffc
   140019fbc:	rex.XB
   140019fbd:	rex.XB jb 0x14001a029
   140019fc0:	je     0x14001a015
   140019fc2:	movsxd eax,DWORD PTR gs:[rax+0x40]
   140019fc6:	push   rbx
   140019fc7:	pop    r8
   140019fc9:	rex.RXB
   140019fca:	rex pop rdx
   140019fcc:	add    BYTE PTR [rdi],bh
   140019fce:	push   rbx
   140019fcf:	gs je  0x14001a016
   140019fd2:	gs data16 (bad) 
   140019fd5:	jne    0x14001a043
   140019fd7:	je     0x14001a02c
   140019fd9:	jo     0x14001a044
   140019fdb:	outs   dx,BYTE PTR ds:[rsi]
   140019fdc:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140019fde:	jne    0x14001a04e
   140019fe0:	je     0x14001a022
   140019fe2:	rex.XB
   140019fe3:	rex.RX (bad) 
   140019fe5:	imul   esp,DWORD PTR [rbp+0x4c],0x6f
   140019fe9:	movsxd ebp,DWORD PTR [rbx+0x40]
   140019fec:	rex push rbx
   140019fee:	pop    r8
   140019ff0:	rex.RXB
   140019ff1:	rex pop rdx
   140019ff3:	add    BYTE PTR [rdi],bh
   140019ff5:	push   rbx
   140019ff6:	gs je  0x14001a03d
   140019ff9:	gs data16 (bad) 
   140019ffc:	jne    0x14001a06a
   140019ffe:	je     0x14001a053
   14001a000:	jo     0x14001a06b
   14001a002:	outs   dx,BYTE PTR ds:[rsi]
   14001a003:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14001a005:	jne    0x14001a075
   14001a007:	je     0x14001a049
   14001a009:	rex.XB push r10
   14001a00b:	gs (bad) 
   14001a00d:	fs gs jb 0x14001a068
   14001a011:	jb     0x14001a07c
   14001a013:	je     0x14001a07a
   14001a015:	jb     0x14001a063
   14001a017:	outs   dx,DWORD PTR ds:[rsi]
   14001a018:	movsxd ebp,DWORD PTR [rbx+0x32]
   14001a01b:	rex
   14001a01c:	rex push rbx
   14001a01e:	pop    r8
   14001a020:	rex.RXB
   14001a021:	rex pop rdx
   14001a023:	add    BYTE PTR [rdi],bh
   14001a025:	push   rbx
   14001a026:	gs je  0x14001a06d
   14001a029:	gs data16 (bad) 
   14001a02c:	jne    0x14001a09a
   14001a02e:	je     0x14001a083
   14001a030:	jo     0x14001a09b
   14001a032:	outs   dx,BYTE PTR ds:[rsi]
   14001a033:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14001a035:	jne    0x14001a0a5
   14001a037:	je     0x14001a079
   14001a039:	rex.XB push r10
   14001a03b:	gs (bad) 
   14001a03d:	fs gs jb 0x14001a098
   14001a041:	jb     0x14001a0ac
   14001a043:	je     0x14001a0aa
   14001a045:	jb     0x14001a093
   14001a047:	outs   dx,DWORD PTR ds:[rsi]
   14001a048:	movsxd ebp,DWORD PTR [rbx+0x33]
   14001a04b:	rex
   14001a04c:	rex push rbx
   14001a04e:	pop    r8
   14001a050:	rex.RXB
   14001a051:	rex pop rdx
   14001a053:	add    BYTE PTR [rdi],bh
   14001a055:	push   rbx
   14001a056:	gs je  0x14001a09d
   14001a059:	gs data16 (bad) 
   14001a05c:	jne    0x14001a0ca
   14001a05e:	je     0x14001a0b3
   14001a060:	jo     0x14001a0cb
   14001a062:	outs   dx,BYTE PTR ds:[rsi]
   14001a063:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14001a065:	jne    0x14001a0d5
   14001a067:	je     0x14001a0a9
   14001a069:	rex.XB push r10
   14001a06b:	gs (bad) 
   14001a06d:	fs gs jb 0x14001a0c8
   14001a071:	jb     0x14001a0dc
   14001a073:	je     0x14001a0da
   14001a075:	jb     0x14001a0c3
   14001a077:	outs   dx,DWORD PTR ds:[rsi]
   14001a078:	movsxd ebp,DWORD PTR [rbx+0x40]
   14001a07b:	rex push rbx
   14001a07d:	pop    r8
   14001a07f:	rex.RXB
   14001a080:	rex pop rdx
   14001a082:	add    BYTE PTR [rdi],bh
   14001a084:	push   rbx
   14001a085:	gs je  0x14001a0cc
   14001a088:	gs data16 (bad) 
   14001a08b:	jne    0x14001a0f9
   14001a08d:	je     0x14001a0e2
   14001a08f:	jo     0x14001a0fa
   14001a091:	outs   dx,BYTE PTR ds:[rsi]
   14001a092:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14001a094:	jne    0x14001a104
   14001a096:	je     0x14001a0d8
   14001a098:	rex.XB push r10
   14001a09a:	je     0x14001a108
   14001a09c:	push   rdx
   14001a09d:	gs jae 0x14001a10f
   14001a0a0:	jne    0x14001a114
   14001a0a2:	movsxd esp,DWORD PTR [rbp+0x40]
   14001a0a5:	rex push rbx
   14001a0a7:	pop    r8
   14001a0a9:	rex.RXB
   14001a0aa:	rex pop rdx
   14001a0ac:	add    BYTE PTR [rdi],bh
   14001a0ae:	push   rbx
   14001a0af:	gs je  0x14001a0f6
   14001a0b2:	gs data16 (bad) 
   14001a0b5:	jne    0x14001a123
   14001a0b7:	je     0x14001a10c
   14001a0b9:	jo     0x14001a124
   14001a0bb:	outs   dx,BYTE PTR ds:[rsi]
   14001a0bc:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14001a0be:	jne    0x14001a12e
   14001a0c0:	je     0x14001a102
   14001a0c2:	rex.XB push r11
   14001a0c4:	push   0x4c657261
   14001a0c9:	outs   dx,DWORD PTR ds:[rsi]
   14001a0ca:	movsxd ebp,DWORD PTR [rbx+0x40]
   14001a0cd:	rex push rbx
   14001a0cf:	pop    r8
   14001a0d1:	rex.RXB
   14001a0d2:	rex pop rdx
   14001a0d4:	add    BYTE PTR [rdi],bh
   14001a0d6:	push   rbx
   14001a0d7:	gs je  0x14001a11e
   14001a0da:	gs data16 (bad) 
   14001a0dd:	jne    0x14001a14b
   14001a0df:	je     0x14001a134
   14001a0e1:	jo     0x14001a14c
   14001a0e3:	outs   dx,BYTE PTR ds:[rsi]
   14001a0e4:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14001a0e6:	jne    0x14001a156
   14001a0e8:	je     0x14001a12a
   14001a0ea:	rex.XB push r11
   14001a0ec:	ins    DWORD PTR es:[rdi],dx
   14001a0ed:	(bad)  
   14001a0ee:	ins    BYTE PTR es:[rdi],dx
   14001a0ef:	ins    BYTE PTR es:[rdi],dx
   14001a0f0:	push   rbx
   14001a0f1:	jo     0x14001a15c
   14001a0f3:	outs   dx,BYTE PTR ds:[rsi]
   14001a0f4:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14001a0f6:	movsxd ebp,DWORD PTR [rbx+0x40]
   14001a0f9:	rex push rbx
   14001a0fb:	pop    r8
   14001a0fd:	rex.RXB
   14001a0fe:	rex pop rdx
   14001a100:	add    BYTE PTR [rdi],bh
   14001a102:	push   rbx
   14001a103:	gs je  0x14001a14a
   14001a106:	gs data16 (bad) 
   14001a109:	jne    0x14001a177
   14001a10b:	je     0x14001a160
   14001a10d:	jo     0x14001a178
   14001a10f:	outs   dx,BYTE PTR ds:[rsi]
   14001a110:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14001a112:	jne    0x14001a182
   14001a114:	je     0x14001a156
   14001a116:	rex.XB push r11
   14001a118:	jo     0x14001a183
   14001a11a:	outs   dx,BYTE PTR ds:[rsi]
   14001a11b:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14001a11d:	movsxd ebp,DWORD PTR [rbx+0x40]
   14001a120:	rex push rbx
   14001a122:	pop    r8
   14001a124:	rex.RXB
   14001a125:	rex pop rdx
   14001a127:	add    BYTE PTR [rdi],bh
   14001a129:	push   rbx
   14001a12a:	gs je  0x14001a171
   14001a12d:	ja     0x14001a19e
   14001a12f:	jb     0x14001a195
   14001a131:	rex
   14001a132:	rex.WRB
   14001a133:	rex.X
   14001a134:	rex
   14001a135:	rex push rcx
   14001a137:	rex.RB
   14001a138:	rex.B
   14001a139:	rex.B
   14001a13a:	rex.W push rax
   14001a13c:	rex.RB
   14001a13d:	rex.X
   14001a13e:	rex.RXB
   14001a13f:	rex.WXB
   14001a140:	rex.WXB
   14001a141:	rex.WXB
   14001a142:	rex.WXB
   14001a143:	rex pop rdx
   14001a145:	add    BYTE PTR [rdi],bh
   14001a147:	push   rbx
   14001a148:	gs je  0x14001a197
   14001a14b:	outs   dx,BYTE PTR gs:[rsi]
   14001a14d:	rex push rbx
   14001a14f:	push   rsp
   14001a150:	push   rdx
   14001a151:	rex.B
   14001a152:	rex
   14001a153:	rex push rcx
   14001a155:	rex.RB
   14001a156:	rex.B
   14001a157:	pop    r15
   14001a159:	rex.WRX
   14001a15a:	rex.WXB
   14001a15b:	rex pop rdx
   14001a15d:	add    BYTE PTR [rdi],bh
   14001a15f:	push   rbx
   14001a160:	gs je  0x14001a1af
   14001a163:	outs   dx,BYTE PTR gs:[rsi]
   14001a165:	rex push rbx
   14001a167:	push   rsp
   14001a168:	push   rdx
   14001a169:	push   r13
   14001a16b:	rex
   14001a16c:	rex push rcx
   14001a16e:	rex.RB
   14001a16f:	rex.B
   14001a170:	rex.B
   14001a171:	rex.W
   14001a172:	rex.WXB
   14001a173:	rex pop rdx
   14001a175:	add    BYTE PTR [rdi],bh
   14001a177:	push   rbx
   14001a178:	gs je  0x14001a1c7
   14001a17b:	outs   dx,BYTE PTR gs:[rsi]
   14001a17d:	rex push rbx
   14001a17f:	push   rsp
   14001a180:	push   rdx
   14001a181:	push   rbp
   14001a182:	rex
   14001a183:	rex push rcx
   14001a185:	rex.RB
   14001a186:	rex.B
   14001a187:	pop    r15
   14001a189:	rex.WRX
   14001a18a:	rex.WXB
   14001a18b:	rex pop rdx
   14001a18d:	add    BYTE PTR [rdi],bh
   14001a18f:	push   rbx
   14001a190:	gs je  0x14001a1e6
   14001a193:	jo     0x14001a1fe
   14001a195:	outs   dx,BYTE PTR ds:[rsi]
   14001a196:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14001a198:	jne    0x14001a208
   14001a19a:	je     0x14001a1dc
   14001a19c:	rex.XB
   14001a19d:	rex.XB jb 0x14001a209
   14001a1a0:	je     0x14001a1f5
   14001a1a2:	movsxd eax,DWORD PTR gs:[rax+0x40]
   14001a1a6:	push   rcx
   14001a1a7:	rex.RB
   14001a1a8:	rex.B
   14001a1a9:	pop    r15
   14001a1ab:	rex.WRX
   14001a1ac:	rex.RXB
   14001a1ad:	rex pop rdx
   14001a1af:	add    BYTE PTR [rdi],bh
   14001a1b1:	push   rbx
   14001a1b2:	gs je  0x14001a208
   14001a1b5:	jo     0x14001a220
   14001a1b7:	outs   dx,BYTE PTR ds:[rsi]
   14001a1b8:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14001a1ba:	jne    0x14001a22a
   14001a1bc:	je     0x14001a1fe
   14001a1be:	rex.XB
   14001a1bf:	rex.XB jb 0x14001a22b
   14001a1c2:	je     0x14001a217
   14001a1c4:	movsxd eax,DWORD PTR gs:[rax+0x40]
   14001a1c8:	push   rbx
   14001a1c9:	rex.B
   14001a1ca:	rex.WXB push r8
   14001a1cc:	rex.RB
   14001a1cd:	push   r13
   14001a1cf:	pop    rdi
   14001a1d0:	push   rdx
   14001a1d1:	push   rsp
   14001a1d2:	rex.WR pop rdi
   14001a1d4:	rex.XB push r10
   14001a1d6:	rex.WB push r12
   14001a1d8:	rex.WB
   14001a1d9:	rex.XB
   14001a1da:	rex.B
   14001a1db:	rex.WR pop rdi
   14001a1dd:	push   rbx
   14001a1de:	rex.RB
   14001a1df:	rex.XB push r12
   14001a1e1:	rex.WB
   14001a1e2:	rex.WRXB
   14001a1e3:	rex.WRX
   14001a1e4:	rex
   14001a1e5:	rex
   14001a1e6:	rex.WXB
   14001a1e7:	rex pop rdx
   14001a1e9:	add    BYTE PTR [rdi],bh
   14001a1eb:	push   rbx
   14001a1ec:	gs je  0x14001a242
   14001a1ef:	jo     0x14001a25a
   14001a1f1:	outs   dx,BYTE PTR ds:[rsi]
   14001a1f2:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14001a1f4:	jne    0x14001a264
   14001a1f6:	je     0x14001a238
   14001a1f8:	rex.XB
   14001a1f9:	rex.RX (bad) 
   14001a1fb:	imul   esp,DWORD PTR [rbp+0x4c],0x6f
   14001a1ff:	movsxd ebp,DWORD PTR [rbx+0x40]
   14001a202:	rex push rcx
   14001a204:	rex.RB
   14001a205:	rex.B
   14001a206:	pop    r15
   14001a208:	rex.WRX
   14001a209:	rex.RXB
   14001a20a:	rex pop rdx
   14001a20c:	add    BYTE PTR [rdi],bh
   14001a20e:	push   rbx
   14001a20f:	gs je  0x14001a265
   14001a212:	jo     0x14001a27d
   14001a214:	outs   dx,BYTE PTR ds:[rsi]
   14001a215:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14001a217:	jne    0x14001a287
   14001a219:	je     0x14001a25b
   14001a21b:	rex.XB push r10
   14001a21d:	gs (bad) 
   14001a21f:	fs gs jb 0x14001a27a
   14001a223:	jb     0x14001a28e
   14001a225:	je     0x14001a28c
   14001a227:	jb     0x14001a275
   14001a229:	outs   dx,DWORD PTR ds:[rsi]
   14001a22a:	movsxd ebp,DWORD PTR [rbx+0x32]
   14001a22d:	rex
   14001a22e:	rex push rcx
   14001a230:	rex.RB
   14001a231:	rex.B
   14001a232:	pop    r15
   14001a234:	rex.WRX
   14001a235:	rex.RXB
   14001a236:	rex pop rdx
   14001a238:	add    BYTE PTR [rdi],bh
   14001a23a:	push   rbx
   14001a23b:	gs je  0x14001a291
   14001a23e:	jo     0x14001a2a9
   14001a240:	outs   dx,BYTE PTR ds:[rsi]
   14001a241:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14001a243:	jne    0x14001a2b3
   14001a245:	je     0x14001a287
   14001a247:	rex.XB push r10
   14001a249:	gs (bad) 
   14001a24b:	fs gs jb 0x14001a2a6
   14001a24f:	jb     0x14001a2ba
   14001a251:	je     0x14001a2b8
   14001a253:	jb     0x14001a2a1
   14001a255:	outs   dx,DWORD PTR ds:[rsi]
   14001a256:	movsxd ebp,DWORD PTR [rbx+0x33]
   14001a259:	rex
   14001a25a:	rex push rcx
   14001a25c:	rex.RB
   14001a25d:	rex.B
   14001a25e:	pop    r15
   14001a260:	rex.WRX
   14001a261:	rex.RXB
   14001a262:	rex pop rdx
   14001a264:	add    BYTE PTR [rdi],bh
   14001a266:	push   rbx
   14001a267:	gs je  0x14001a2bd
   14001a26a:	jo     0x14001a2d5
   14001a26c:	outs   dx,BYTE PTR ds:[rsi]
   14001a26d:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14001a26f:	jne    0x14001a2df
   14001a271:	je     0x14001a2b3
   14001a273:	rex.XB push r10
   14001a275:	gs (bad) 
   14001a277:	fs gs jb 0x14001a2d2
   14001a27b:	jb     0x14001a2e6
   14001a27d:	je     0x14001a2e4
   14001a27f:	jb     0x14001a2cd
   14001a281:	outs   dx,DWORD PTR ds:[rsi]
   14001a282:	movsxd ebp,DWORD PTR [rbx+0x40]
   14001a285:	rex push rcx
   14001a287:	rex.RB
   14001a288:	rex.B
   14001a289:	pop    r15
   14001a28b:	rex.WRX
   14001a28c:	rex.RXB
   14001a28d:	rex pop rdx
   14001a28f:	add    BYTE PTR [rdi],bh
   14001a291:	push   rbx
   14001a292:	gs je  0x14001a2e8
   14001a295:	jo     0x14001a300
   14001a297:	outs   dx,BYTE PTR ds:[rsi]
   14001a298:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14001a29a:	jne    0x14001a30a
   14001a29c:	je     0x14001a2de
   14001a29e:	rex.XB push r10
   14001a2a0:	je     0x14001a30e
   14001a2a2:	push   rdx
   14001a2a3:	gs jae 0x14001a315
   14001a2a6:	jne    0x14001a31a
   14001a2a8:	movsxd esp,DWORD PTR [rbp+0x40]
   14001a2ab:	rex push rcx
   14001a2ad:	rex.RB
   14001a2ae:	rex.B
   14001a2af:	pop    r15
   14001a2b1:	rex.WRX
   14001a2b2:	rex.RXB
   14001a2b3:	rex pop rdx
   14001a2b5:	add    BYTE PTR [rdi],bh
   14001a2b7:	push   rbx
   14001a2b8:	gs je  0x14001a30e
   14001a2bb:	jo     0x14001a326
   14001a2bd:	outs   dx,BYTE PTR ds:[rsi]
   14001a2be:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14001a2c0:	jne    0x14001a330
   14001a2c2:	je     0x14001a304
   14001a2c4:	rex.XB push r11
   14001a2c6:	push   0x4c657261
   14001a2cb:	outs   dx,DWORD PTR ds:[rsi]
   14001a2cc:	movsxd ebp,DWORD PTR [rbx+0x40]
   14001a2cf:	rex push rcx
   14001a2d1:	rex.RB
   14001a2d2:	rex.B
   14001a2d3:	pop    r15
   14001a2d5:	rex.WRX
   14001a2d6:	rex.RXB
   14001a2d7:	rex pop rdx
   14001a2d9:	add    BYTE PTR [rdi],bh
   14001a2db:	push   rbx
   14001a2dc:	gs je  0x14001a332
   14001a2df:	jo     0x14001a34a
   14001a2e1:	outs   dx,BYTE PTR ds:[rsi]
   14001a2e2:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14001a2e4:	jne    0x14001a354
   14001a2e6:	je     0x14001a328
   14001a2e8:	rex.XB push r11
   14001a2ea:	ins    DWORD PTR es:[rdi],dx
   14001a2eb:	(bad)  
   14001a2ec:	ins    BYTE PTR es:[rdi],dx
   14001a2ed:	ins    BYTE PTR es:[rdi],dx
   14001a2ee:	push   rbx
   14001a2ef:	jo     0x14001a35a
   14001a2f1:	outs   dx,BYTE PTR ds:[rsi]
   14001a2f2:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14001a2f4:	movsxd ebp,DWORD PTR [rbx+0x40]
   14001a2f7:	rex push rcx
   14001a2f9:	rex.RB
   14001a2fa:	rex.B
   14001a2fb:	pop    r15
   14001a2fd:	rex.WRX
   14001a2fe:	rex.RXB
   14001a2ff:	rex pop rdx
   14001a301:	add    BYTE PTR [rdi],bh
   14001a303:	push   rbx
   14001a304:	gs je  0x14001a35a
   14001a307:	jo     0x14001a372
   14001a309:	outs   dx,BYTE PTR ds:[rsi]
   14001a30a:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14001a30c:	jne    0x14001a37c
   14001a30e:	je     0x14001a350
   14001a310:	rex.XB push r11
   14001a312:	jo     0x14001a37d
   14001a314:	outs   dx,BYTE PTR ds:[rsi]
   14001a315:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14001a317:	movsxd ebp,DWORD PTR [rbx+0x40]
   14001a31a:	rex push rcx
   14001a31c:	rex.RB
   14001a31d:	rex.B
   14001a31e:	pop    r15
   14001a320:	rex.WRX
   14001a321:	rex.RXB
   14001a322:	rex pop rdx
   14001a324:	add    BYTE PTR [rdi],bh
   14001a326:	push   rbx
   14001a327:	gs je  0x14001a37d
   14001a32a:	je     0x14001a39e
   14001a32c:	imul   ebp,DWORD PTR [rsi+0x67],0x40424d40
   14001a333:	rex push rcx
   14001a335:	rex.RB
   14001a336:	rex.B
   14001a337:	rex.B
   14001a338:	rex.W push rax
   14001a33a:	rex.RB
   14001a33b:	rex.X
   14001a33c:	rex.RXB
   14001a33d:	rex.WXB
   14001a33e:	rex.WXB xor BYTE PTR [r11+0x40],cl
   14001a342:	pop    rdx
   14001a343:	add    BYTE PTR [rdi],bh
   14001a345:	push   rbx
   14001a346:	gs je  0x14001a39f
   14001a349:	(bad)  
   14001a34a:	ins    BYTE PTR es:[rdi],dx
   14001a34b:	imul   esp,DWORD PTR [rax+rax*2+0x42],0x45464655
   14001a353:	push   rdx
   14001a354:	rex
   14001a355:	rex push rcx
   14001a357:	rex.RB
   14001a358:	rex.B
   14001a359:	pop    r8
   14001a35b:	pop    rdi
   14001a35c:	rex.WRX
   14001a35d:	rex pop rdx
   14001a35f:	add    BYTE PTR [rdi],bh
   14001a361:	push   rbx
   14001a362:	ins    BYTE PTR es:[rdi],dx
   14001a363:	gs gs jo 0x14001a3be
   14001a367:	(bad)  
   14001a368:	imul   esi,DWORD PTR [rcx+rbp*2+0x6e],0x726f4667
   14001a370:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14001a372:	movsxd ebp,DWORD PTR [rbx+0x40]
   14001a375:	rex.XB push r11
   14001a377:	push   0x6c657261
   14001a37c:	outs   dx,DWORD PTR ds:[rsi]
   14001a37d:	movsxd ebp,DWORD PTR [rbx+0x40]
   14001a380:	rex
   14001a381:	rex.B
   14001a382:	rex.RB
   14001a383:	rex.B
   14001a384:	rex.B
   14001a385:	rex.RB
   14001a386:	rex.W
   14001a387:	rex pop rdx
   14001a389:	add    BYTE PTR [rdi],bh
   14001a38b:	push   rbx
   14001a38c:	jns    0x14001a3fc
   14001a38e:	movsxd edx,DWORD PTR [rdi+0x69]
   14001a391:	je     0x14001a3fb
   14001a393:	rex.X jne 0x14001a3fc
   14001a396:	data16 gs jb 0x14001a3da
   14001a39a:	push   rbx
   14001a39b:	push   rsp
   14001a39c:	push   rdx
   14001a39d:	rex.B
   14001a39e:	rex
   14001a39f:	rex push rcx
   14001a3a1:	rex.RB
   14001a3a2:	rex.B
   14001a3a3:	pop    r8
   14001a3a5:	pop    rax
   14001a3a6:	pop    rdx
   14001a3a7:	add    BYTE PTR [rdi],bh
   14001a3a9:	push   rbx
   14001a3aa:	jns    0x14001a41a
   14001a3ac:	movsxd edx,DWORD PTR [rdi+0x69]
   14001a3af:	je     0x14001a419
   14001a3b1:	rex.X jne 0x14001a41a
   14001a3b4:	data16 gs jb 0x14001a3f8
   14001a3b8:	push   rbx
   14001a3b9:	push   rsp
   14001a3ba:	push   rdx
   14001a3bb:	push   rbp
   14001a3bc:	rex
   14001a3bd:	rex push rcx
   14001a3bf:	rex.RB
   14001a3c0:	rex.B
   14001a3c1:	pop    r8
   14001a3c3:	pop    rax
   14001a3c4:	pop    rdx
   14001a3c5:	add    BYTE PTR [rdi],bh
   14001a3c7:	push   rsp
   14001a3c8:	jb     0x14001a443
   14001a3ca:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14001a3cc:	outs   dx,BYTE PTR ds:[rsi]
   14001a3cd:	jbe    0x14001a434
   14001a3cf:	jb     0x14001a445
   14001a3d1:	push   rbx
   14001a3d2:	push   0x64657261
   14001a3d7:	push   rsp
   14001a3d8:	outs   dx,DWORD PTR ds:[rsi]
   14001a3d9:	rex.RB js 0x14001a43f
   14001a3dc:	ins    BYTE PTR es:[rdi],dx
   14001a3dd:	jne    0x14001a452
   14001a3df:	imul   esi,DWORD PTR [rsi+0x65],0x65524340
   14001a3e6:	(bad)  
   14001a3e7:	fs gs jb 0x14001a442
   14001a3eb:	jb     0x14001a456
   14001a3ed:	je     0x14001a454
   14001a3ef:	jb     0x14001a43d
   14001a3f1:	outs   dx,DWORD PTR ds:[rsi]
   14001a3f2:	movsxd ebp,DWORD PTR [rbx+0x33]
   14001a3f5:	rex
   14001a3f6:	rex push rcx
   14001a3f8:	rex.RB
   14001a3f9:	rex.B
   14001a3fa:	pop    r15
   14001a3fc:	rex.WRX pop rax
   14001a3fe:	pop    rdx
   14001a3ff:	add    BYTE PTR [rdi],bh
   14001a401:	push   rsp
   14001a402:	jb     0x14001a47d
   14001a404:	push   rdx
   14001a405:	gs (bad) 
   14001a407:	rex.WR outs dx,DWORD PTR fs:[rsi]
   14001a40a:	movsxd ebp,DWORD PTR [rbx+0x40]
   14001a40d:	rex.XB
   14001a40e:	rex.XB jb 0x14001a47a
   14001a411:	je     0x14001a466
   14001a413:	movsxd eax,DWORD PTR gs:[rax+0x40]
   14001a417:	push   rcx
   14001a418:	rex.RB
   14001a419:	rex.B
   14001a41a:	pop    r15
   14001a41c:	rex.WRX pop rax
   14001a41e:	pop    rdx
   14001a41f:	add    BYTE PTR [rdi],bh
   14001a421:	push   rsp
   14001a422:	jb     0x14001a49d
   14001a424:	push   rdx
   14001a425:	gs (bad) 
   14001a427:	rex.WR outs dx,DWORD PTR fs:[rsi]
   14001a42a:	movsxd ebp,DWORD PTR [rbx+0x40]
   14001a42d:	rex.XB
   14001a42e:	rex.RX (bad) 
   14001a430:	imul   esp,DWORD PTR [rbp+0x4c],0x6f
   14001a434:	movsxd ebp,DWORD PTR [rbx+0x40]
   14001a437:	rex push rcx
   14001a439:	rex.RB
   14001a43a:	rex.B
   14001a43b:	pop    r15
   14001a43d:	rex.WRX pop rax
   14001a43f:	pop    rdx
   14001a440:	add    BYTE PTR [rdi],bh
   14001a442:	push   rsp
   14001a443:	jb     0x14001a4be
   14001a445:	push   rdx
   14001a446:	gs (bad) 
   14001a448:	rex.WR outs dx,DWORD PTR fs:[rsi]
   14001a44b:	movsxd ebp,DWORD PTR [rbx+0x40]
   14001a44e:	rex.XB push r10
   14001a450:	gs (bad) 
   14001a452:	fs gs jb 0x14001a4ad
   14001a456:	jb     0x14001a4c1
   14001a458:	je     0x14001a4bf
   14001a45a:	jb     0x14001a4a8
   14001a45c:	outs   dx,DWORD PTR ds:[rsi]
   14001a45d:	movsxd ebp,DWORD PTR [rbx+0x32]
   14001a460:	rex
   14001a461:	rex push rcx
   14001a463:	rex.RB
   14001a464:	rex.B
   14001a465:	pop    r15
   14001a467:	rex.WRX pop rax
   14001a469:	pop    rdx
   14001a46a:	add    BYTE PTR [rdi],bh
   14001a46c:	push   rsp
   14001a46d:	jb     0x14001a4e8
   14001a46f:	push   rdx
   14001a470:	gs (bad) 
   14001a472:	rex.WR outs dx,DWORD PTR fs:[rsi]
   14001a475:	movsxd ebp,DWORD PTR [rbx+0x40]
   14001a478:	rex.XB push r10
   14001a47a:	gs (bad) 
   14001a47c:	fs gs jb 0x14001a4d7
   14001a480:	jb     0x14001a4eb
   14001a482:	je     0x14001a4e9
   14001a484:	jb     0x14001a4d2
   14001a486:	outs   dx,DWORD PTR ds:[rsi]
   14001a487:	movsxd ebp,DWORD PTR [rbx+0x33]
   14001a48a:	rex
   14001a48b:	rex push rcx
   14001a48d:	rex.RB
   14001a48e:	rex.B
   14001a48f:	pop    r15
   14001a491:	rex.WRX pop rax
   14001a493:	pop    rdx
   14001a494:	add    BYTE PTR [rdi],bh
   14001a496:	push   rsp
   14001a497:	jb     0x14001a512
   14001a499:	push   rdx
   14001a49a:	gs (bad) 
   14001a49c:	rex.WR outs dx,DWORD PTR fs:[rsi]
   14001a49f:	movsxd ebp,DWORD PTR [rbx+0x40]
   14001a4a2:	rex.XB push r10
   14001a4a4:	gs (bad) 
   14001a4a6:	fs gs jb 0x14001a501
   14001a4aa:	jb     0x14001a515
   14001a4ac:	je     0x14001a513
   14001a4ae:	jb     0x14001a4fc
   14001a4b0:	outs   dx,DWORD PTR ds:[rsi]
   14001a4b1:	movsxd ebp,DWORD PTR [rbx+0x40]
   14001a4b4:	rex push rcx
   14001a4b6:	rex.RB
   14001a4b7:	rex.B
   14001a4b8:	pop    r15
   14001a4ba:	rex.WRX pop rax
   14001a4bc:	pop    rdx
   14001a4bd:	add    BYTE PTR [rdi],bh
   14001a4bf:	push   rsp
   14001a4c0:	jb     0x14001a53b
   14001a4c2:	push   rdx
   14001a4c3:	gs (bad) 
   14001a4c5:	rex.WR outs dx,DWORD PTR fs:[rsi]
   14001a4c8:	movsxd ebp,DWORD PTR [rbx+0x40]
   14001a4cb:	rex.XB push r10
   14001a4cd:	je     0x14001a53b
   14001a4cf:	push   rdx
   14001a4d0:	gs jae 0x14001a542
   14001a4d3:	jne    0x14001a547
   14001a4d5:	movsxd esp,DWORD PTR [rbp+0x40]
   14001a4d8:	rex push rcx
   14001a4da:	rex.RB
   14001a4db:	rex.B
   14001a4dc:	pop    r15
   14001a4de:	rex.WRX pop rax
   14001a4e0:	pop    rdx
   14001a4e1:	add    BYTE PTR [rdi],bh
   14001a4e3:	push   rsp
   14001a4e4:	jb     0x14001a55f
   14001a4e6:	push   rdx
   14001a4e7:	gs (bad) 
   14001a4e9:	rex.WR outs dx,DWORD PTR fs:[rsi]
   14001a4ec:	movsxd ebp,DWORD PTR [rbx+0x40]
   14001a4ef:	rex.XB push r11
   14001a4f1:	push   0x4c657261
   14001a4f6:	outs   dx,DWORD PTR ds:[rsi]
   14001a4f7:	movsxd ebp,DWORD PTR [rbx+0x40]
   14001a4fa:	rex push rcx
   14001a4fc:	rex.RB
   14001a4fd:	rex.B
   14001a4fe:	pop    r15
   14001a500:	rex.WRX pop rax
   14001a502:	pop    rdx
   14001a503:	add    BYTE PTR [rdi],bh
   14001a505:	push   rsp
   14001a506:	jb     0x14001a581
   14001a508:	push   rdx
   14001a509:	gs (bad) 
   14001a50b:	rex.WR outs dx,DWORD PTR fs:[rsi]
   14001a50e:	movsxd ebp,DWORD PTR [rbx+0x40]
   14001a511:	rex.XB push r11
   14001a513:	ins    DWORD PTR es:[rdi],dx
   14001a514:	(bad)  
   14001a515:	ins    BYTE PTR es:[rdi],dx
   14001a516:	ins    BYTE PTR es:[rdi],dx
   14001a517:	push   rbx
   14001a518:	jo     0x14001a583
   14001a51a:	outs   dx,BYTE PTR ds:[rsi]
   14001a51b:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14001a51d:	movsxd ebp,DWORD PTR [rbx+0x40]
   14001a520:	rex push rcx
   14001a522:	rex.RB
   14001a523:	rex.B
   14001a524:	pop    r15
   14001a526:	rex.WRX pop rax
   14001a528:	pop    rdx
   14001a529:	add    BYTE PTR [rdi],bh
   14001a52b:	push   rsp
   14001a52c:	jb     0x14001a5a7
   14001a52e:	push   rdx
   14001a52f:	gs (bad) 
   14001a531:	rex.WR outs dx,DWORD PTR fs:[rsi]
   14001a534:	movsxd ebp,DWORD PTR [rbx+0x40]
   14001a537:	rex.XB push r11
   14001a539:	jo     0x14001a5a4
   14001a53b:	outs   dx,BYTE PTR ds:[rsi]
   14001a53c:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14001a53e:	movsxd ebp,DWORD PTR [rbx+0x40]
   14001a541:	rex push rcx
   14001a543:	rex.RB
   14001a544:	rex.B
   14001a545:	pop    r15
   14001a547:	rex.WRX pop rax
   14001a549:	pop    rdx
   14001a54a:	add    BYTE PTR [rdi],bh
   14001a54c:	push   rsp
   14001a54d:	jb     0x14001a5c8
   14001a54f:	push   rdx
   14001a550:	gs (bad) 
   14001a552:	fs rex.WRXB jb 0x14001a5ad
   14001a556:	jb     0x14001a5c1
   14001a558:	je     0x14001a5bf
   14001a55a:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14001a55c:	movsxd ebp,DWORD PTR [rbx+0x40]
   14001a55f:	rex.XB push r10
   14001a561:	gs (bad) 
   14001a563:	fs gs jb 0x14001a5be
   14001a567:	jb     0x14001a5d2
   14001a569:	je     0x14001a5d0
   14001a56b:	jb     0x14001a5b9
   14001a56d:	outs   dx,DWORD PTR ds:[rsi]
   14001a56e:	movsxd ebp,DWORD PTR [rbx+0x33]
   14001a571:	rex
   14001a572:	rex push rcx
   14001a574:	rex.RB
   14001a575:	rex.B
   14001a576:	pop    r15
   14001a578:	rex.WRX
   14001a579:	rex.B
   14001a57a:	rex.RB
   14001a57b:	pop    r15
   14001a57d:	rex.WRX
   14001a57e:	rex pop rdx
   14001a580:	add    BYTE PTR [rdi],bh
   14001a582:	push   rsp
   14001a583:	jb     0x14001a5fe
   14001a585:	push   rdi
   14001a586:	jb     0x14001a5f1
   14001a588:	je     0x14001a5ef
   14001a58a:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14001a58c:	movsxd ebp,DWORD PTR [rbx+0x40]
   14001a58f:	rex.XB
   14001a590:	rex.XB jb 0x14001a5fc
   14001a593:	je     0x14001a5e8
   14001a595:	movsxd eax,DWORD PTR gs:[rax+0x40]
   14001a599:	push   rcx
   14001a59a:	rex.RB
   14001a59b:	rex.B
   14001a59c:	pop    r15
   14001a59e:	rex.WRX pop rax
   14001a5a0:	pop    rdx
   14001a5a1:	add    BYTE PTR [rdi],bh
   14001a5a3:	push   rsp
   14001a5a4:	jb     0x14001a61f
   14001a5a6:	push   rdi
   14001a5a7:	jb     0x14001a612
   14001a5a9:	je     0x14001a610
   14001a5ab:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14001a5ad:	movsxd ebp,DWORD PTR [rbx+0x40]
   14001a5b0:	rex.XB
   14001a5b1:	rex.RX (bad) 
   14001a5b3:	imul   esp,DWORD PTR [rbp+0x4c],0x6f
   14001a5b7:	movsxd ebp,DWORD PTR [rbx+0x40]
   14001a5ba:	rex push rcx
   14001a5bc:	rex.RB
   14001a5bd:	rex.B
   14001a5be:	pop    r15
   14001a5c0:	rex.WRX pop rax
   14001a5c2:	pop    rdx
   14001a5c3:	add    BYTE PTR [rdi],bh
   14001a5c5:	push   rsp
   14001a5c6:	jb     0x14001a641
   14001a5c8:	push   rdi
   14001a5c9:	jb     0x14001a634
   14001a5cb:	je     0x14001a632
   14001a5cd:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14001a5cf:	movsxd ebp,DWORD PTR [rbx+0x40]
   14001a5d2:	rex.XB push r10
   14001a5d4:	gs (bad) 
   14001a5d6:	fs gs jb 0x14001a631
   14001a5da:	jb     0x14001a645
   14001a5dc:	je     0x14001a643
   14001a5de:	jb     0x14001a62c
   14001a5e0:	outs   dx,DWORD PTR ds:[rsi]
   14001a5e1:	movsxd ebp,DWORD PTR [rbx+0x32]
   14001a5e4:	rex
   14001a5e5:	rex push rcx
   14001a5e7:	rex.RB
   14001a5e8:	rex.B
   14001a5e9:	pop    r15
   14001a5eb:	rex.WRX pop rax
   14001a5ed:	pop    rdx
   14001a5ee:	add    BYTE PTR [rdi],bh
   14001a5f0:	push   rsp
   14001a5f1:	jb     0x14001a66c
   14001a5f3:	push   rdi
   14001a5f4:	jb     0x14001a65f
   14001a5f6:	je     0x14001a65d
   14001a5f8:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14001a5fa:	movsxd ebp,DWORD PTR [rbx+0x40]
   14001a5fd:	rex.XB push r10
   14001a5ff:	gs (bad) 
   14001a601:	fs gs jb 0x14001a65c
   14001a605:	jb     0x14001a670
   14001a607:	je     0x14001a66e
   14001a609:	jb     0x14001a657
   14001a60b:	outs   dx,DWORD PTR ds:[rsi]
   14001a60c:	movsxd ebp,DWORD PTR [rbx+0x33]
   14001a60f:	rex
   14001a610:	rex push rcx
   14001a612:	rex.RB
   14001a613:	rex.B
   14001a614:	pop    r15
   14001a616:	rex.WRX pop rax
   14001a618:	pop    rdx
   14001a619:	add    BYTE PTR [rdi],bh
   14001a61b:	push   rsp
   14001a61c:	jb     0x14001a697
   14001a61e:	push   rdi
   14001a61f:	jb     0x14001a68a
   14001a621:	je     0x14001a688
   14001a623:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14001a625:	movsxd ebp,DWORD PTR [rbx+0x40]
   14001a628:	rex.XB push r10
   14001a62a:	gs (bad) 
   14001a62c:	fs gs jb 0x14001a687
   14001a630:	jb     0x14001a69b
   14001a632:	je     0x14001a699
   14001a634:	jb     0x14001a682
   14001a636:	outs   dx,DWORD PTR ds:[rsi]
   14001a637:	movsxd ebp,DWORD PTR [rbx+0x40]
   14001a63a:	rex push rcx
   14001a63c:	rex.RB
   14001a63d:	rex.B
   14001a63e:	pop    r15
   14001a640:	rex.WRX pop rax
   14001a642:	pop    rdx
   14001a643:	add    BYTE PTR [rdi],bh
   14001a645:	push   rsp
   14001a646:	jb     0x14001a6c1
   14001a648:	push   rdi
   14001a649:	jb     0x14001a6b4
   14001a64b:	je     0x14001a6b2
   14001a64d:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14001a64f:	movsxd ebp,DWORD PTR [rbx+0x40]
   14001a652:	rex.XB push r10
   14001a654:	je     0x14001a6c2
   14001a656:	push   rdx
   14001a657:	gs jae 0x14001a6c9
   14001a65a:	jne    0x14001a6ce
   14001a65c:	movsxd esp,DWORD PTR [rbp+0x40]
   14001a65f:	rex push rcx
   14001a661:	rex.RB
   14001a662:	rex.B
   14001a663:	pop    r15
   14001a665:	rex.WRX pop rax
   14001a667:	pop    rdx
   14001a668:	add    BYTE PTR [rdi],bh
   14001a66a:	push   rsp
   14001a66b:	jb     0x14001a6e6
   14001a66d:	push   rdi
   14001a66e:	jb     0x14001a6d9
   14001a670:	je     0x14001a6d7
   14001a672:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14001a674:	movsxd ebp,DWORD PTR [rbx+0x40]
   14001a677:	rex.XB push r11
   14001a679:	push   0x4c657261
   14001a67e:	outs   dx,DWORD PTR ds:[rsi]
   14001a67f:	movsxd ebp,DWORD PTR [rbx+0x40]
   14001a682:	rex push rcx
   14001a684:	rex.RB
   14001a685:	rex.B
   14001a686:	pop    r15
   14001a688:	rex.WRX pop rax
   14001a68a:	pop    rdx
   14001a68b:	add    BYTE PTR [rdi],bh
   14001a68d:	push   rsp
   14001a68e:	jb     0x14001a709
   14001a690:	push   rdi
   14001a691:	jb     0x14001a6fc
   14001a693:	je     0x14001a6fa
   14001a695:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14001a697:	movsxd ebp,DWORD PTR [rbx+0x40]
   14001a69a:	rex.XB push r11
   14001a69c:	ins    DWORD PTR es:[rdi],dx
   14001a69d:	(bad)  
   14001a69e:	ins    BYTE PTR es:[rdi],dx
   14001a69f:	ins    BYTE PTR es:[rdi],dx
   14001a6a0:	push   rbx
   14001a6a1:	jo     0x14001a70c
   14001a6a3:	outs   dx,BYTE PTR ds:[rsi]
   14001a6a4:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14001a6a6:	movsxd ebp,DWORD PTR [rbx+0x40]
   14001a6a9:	rex push rcx
   14001a6ab:	rex.RB
   14001a6ac:	rex.B
   14001a6ad:	pop    r15
   14001a6af:	rex.WRX pop rax
   14001a6b1:	pop    rdx
   14001a6b2:	add    BYTE PTR [rdi],bh
   14001a6b4:	push   rsp
   14001a6b5:	jb     0x14001a730
   14001a6b7:	push   rdi
   14001a6b8:	jb     0x14001a723
   14001a6ba:	je     0x14001a721
   14001a6bc:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14001a6be:	movsxd ebp,DWORD PTR [rbx+0x40]
   14001a6c1:	rex.XB push r11
   14001a6c3:	jo     0x14001a72e
   14001a6c5:	outs   dx,BYTE PTR ds:[rsi]
   14001a6c6:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14001a6c8:	movsxd ebp,DWORD PTR [rbx+0x40]
   14001a6cb:	rex push rcx
   14001a6cd:	rex.RB
   14001a6ce:	rex.B
   14001a6cf:	pop    r15
   14001a6d1:	rex.WRX pop rax
   14001a6d3:	pop    rdx
   14001a6d4:	add    BYTE PTR [rdi],bh
   14001a6d6:	push   rbp
   14001a6d7:	outs   dx,BYTE PTR ds:[rsi]
   14001a6d8:	gs jae 0x14001a73e
   14001a6db:	(bad)  
   14001a6dc:	jo     0x14001a743
   14001a6de:	rex push rbx
   14001a6e0:	push   rsp
   14001a6e1:	push   rdx
   14001a6e2:	rex.B
   14001a6e3:	rex
   14001a6e4:	rex push rcx
   14001a6e6:	rex.RB
   14001a6e7:	rex.B
   14001a6e8:	rex.B
   14001a6e9:	rex.WX pop rax
   14001a6eb:	pop    rdx
   14001a6ec:	add    BYTE PTR [rdi],bh
   14001a6ee:	push   rbp
   14001a6ef:	outs   dx,BYTE PTR ds:[rsi]
   14001a6f0:	gs jae 0x14001a756
   14001a6f3:	(bad)  
   14001a6f4:	jo     0x14001a75b
   14001a6f6:	rex push rbx
   14001a6f8:	push   rsp
   14001a6f9:	push   rdx
   14001a6fa:	push   rbp
   14001a6fb:	rex
   14001a6fc:	rex push rcx
   14001a6fe:	rex.RB
   14001a6ff:	rex.B
   14001a700:	rex.B
   14001a701:	rex.WX pop rax
   14001a703:	pop    rdx
   14001a704:	add    BYTE PTR [rdi],bh
   14001a706:	push   rbp
   14001a707:	outs   dx,BYTE PTR ds:[rsi]
   14001a708:	gs jae 0x14001a76e
   14001a70b:	(bad)  
   14001a70c:	jo     0x14001a773
   14001a70e:	rex.WRXB outs dx,BYTE PTR ds:[rsi]
   14001a710:	ins    BYTE PTR es:[rdi],dx
   14001a711:	jns    0x14001a753
   14001a713:	push   rbx
   14001a714:	push   rsp
   14001a715:	push   rdx
   14001a716:	rex.B
   14001a717:	rex
   14001a718:	rex push rcx
   14001a71a:	rex.RB
   14001a71b:	rex.B
   14001a71c:	rex.B
   14001a71d:	rex.WX pop rax
   14001a71f:	pop    rdx
   14001a720:	add    BYTE PTR [rdi],bh
   14001a722:	push   rbp
   14001a723:	outs   dx,BYTE PTR ds:[rsi]
   14001a724:	gs jae 0x14001a78a
   14001a727:	(bad)  
   14001a728:	jo     0x14001a78f
   14001a72a:	rex.WRXB outs dx,BYTE PTR ds:[rsi]
   14001a72c:	ins    BYTE PTR es:[rdi],dx
   14001a72d:	jns    0x14001a76f
   14001a72f:	push   rbx
   14001a730:	push   rsp
   14001a731:	push   rdx
   14001a732:	push   rbp
   14001a733:	rex
   14001a734:	rex push rcx
   14001a736:	rex.RB
   14001a737:	rex.B
   14001a738:	rex.B
   14001a739:	rex.WX pop rax
   14001a73b:	pop    rdx
   14001a73c:	add    BYTE PTR [rdi],bh
   14001a73e:	push   rbp
   14001a73f:	outs   dx,BYTE PTR ds:[rsi]
   14001a740:	ins    BYTE PTR es:[rdi],dx
   14001a741:	outs   dx,DWORD PTR ds:[rsi]
   14001a742:	movsxd ebp,DWORD PTR [rbx+0x40]
   14001a745:	push   rsp
   14001a746:	push   rbx
   14001a747:	pop    rdi
   14001a748:	push   rdx
   14001a749:	rex.RB push r11
   14001a74b:	rex.WRXB push r13
   14001a74d:	push   rdx
   14001a74e:	rex.XB
   14001a74f:	rex.RB
   14001a750:	rex
   14001a751:	rex push rcx
   14001a753:	rex.RB
   14001a754:	rex.B
   14001a755:	pop    r8
   14001a757:	pop    rax
   14001a758:	pop    rdx
   14001a759:	add    BYTE PTR [rdi],bh
   14001a75b:	push   rbp
   14001a75c:	jo     0x14001a7c2
   14001a75e:	(bad)  
   14001a75f:	je     0x14001a7c6
   14001a761:	rex.WRB (bad) 
   14001a763:	js     0x14001a7b8
   14001a765:	jo     0x14001a7d0
   14001a767:	outs   dx,BYTE PTR ds:[rsi]
   14001a768:	jae    0x14001a7aa
   14001a76a:	rex.XB push r11
   14001a76c:	push   0x6c657261
   14001a771:	outs   dx,DWORD PTR ds:[rsi]
   14001a772:	movsxd ebp,DWORD PTR [rbx+0x40]
   14001a775:	rex push rcx
   14001a777:	rex.RB
   14001a778:	rex.B
   14001a779:	rex.B
   14001a77a:	rex.RB
   14001a77b:	rex.W
   14001a77c:	rex pop rdx
   14001a77e:	add    BYTE PTR [rdi],bh
   14001a780:	push   rbp
   14001a781:	jo     0x14001a7e7
   14001a783:	(bad)  
   14001a784:	je     0x14001a7eb
   14001a786:	rex.WRB (bad) 
   14001a788:	js     0x14001a7df
   14001a78a:	jae    0x14001a7f1
   14001a78c:	jb     0x14001a801
   14001a78e:	rex
   14001a78f:	rex.XB push r11
   14001a791:	push   0x6c657261
   14001a796:	outs   dx,DWORD PTR ds:[rsi]
   14001a797:	movsxd ebp,DWORD PTR [rbx+0x40]
   14001a79a:	rex push rcx
   14001a79c:	rex.RB
   14001a79d:	rex.B
   14001a79e:	rex.B
   14001a79f:	rex.RB
   14001a7a0:	rex.W
   14001a7a1:	rex pop rdx
   14001a7a3:	add    BYTE PTR [rdi],bh
   14001a7a5:	push   rsi
   14001a7a6:	gs jb  0x14001a812
   14001a7a9:	data16 jns 0x14001a7ff
   14001a7ac:	je     0x14001a80f
   14001a7ae:	je     0x14001a815
   14001a7b0:	rex
   14001a7b1:	rex.X push rbp
   14001a7b3:	rex.RX
   14001a7b4:	rex.RX
   14001a7b5:	rex.RB push r10
   14001a7b7:	rex
   14001a7b8:	rex
   14001a7b9:	rex.B
   14001a7ba:	rex.RB
   14001a7bb:	rex.X
   14001a7bc:	pop    r8
   14001a7be:	pop    rax
   14001a7bf:	pop    rdx
   14001a7c0:	add    BYTE PTR [rdi],bh
   14001a7c2:	push   rdi
   14001a7c3:	(bad)  
   14001a7c4:	imul   esi,DWORD PTR [rsi+rax*2+0x6f],0x63784572
   14001a7cc:	ins    BYTE PTR es:[rdi],dx
   14001a7cd:	jne    0x14001a842
   14001a7cf:	imul   esi,DWORD PTR [rsi+0x65],0x6b636f4c
   14001a7d6:	rex
   14001a7d7:	rex.XB push r11
   14001a7d9:	push   0x6c657261
   14001a7de:	outs   dx,DWORD PTR ds:[rsi]
   14001a7df:	movsxd ebp,DWORD PTR [rbx+0x40]
   14001a7e2:	rex
   14001a7e3:	rex.B
   14001a7e4:	rex.RB
   14001a7e5:	rex.B
   14001a7e6:	rex.B
   14001a7e7:	rex.RB
   14001a7e8:	rex.W
   14001a7e9:	rex pop rdx
   14001a7eb:	add    BYTE PTR [rdi],bh
   14001a7ed:	push   rdi
   14001a7ee:	(bad)  
   14001a7ef:	imul   esi,DWORD PTR [rsi+rax*2+0x6f],0x61685372
   14001a7f7:	jb     0x14001a85e
   14001a7f9:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14001a7fb:	movsxd ebp,DWORD PTR [rbx+0x40]
   14001a7fe:	rex.XB push r11
   14001a800:	push   0x6c657261
   14001a805:	outs   dx,DWORD PTR ds:[rsi]
   14001a806:	movsxd ebp,DWORD PTR [rbx+0x40]
   14001a809:	rex
   14001a80a:	rex.B
   14001a80b:	rex.RB
   14001a80c:	rex.B
   14001a80d:	rex.B
   14001a80e:	rex.RB
   14001a80f:	rex.W
   14001a810:	rex pop rdx
   14001a812:	add    BYTE PTR [rdi],bh
   14001a814:	push   rdi
   14001a815:	(bad)  
   14001a816:	imul   esi,DWORD PTR [rsp+rdx*2+0x79],0x3f406570
   14001a81e:	and    al,0x43
   14001a820:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14001a822:	movsxd ebp,DWORD PTR [rbx+0x42]
   14001a825:	(bad)  
   14001a826:	jae    0x14001a88d
   14001a828:	and    al,0x30
   14001a82b:	xor    BYTE PTR [rax+rsi*1],ah
   14001a82e:	xor    BYTE PTR [rax+rsi*1],ah
   14001a831:	xor    ah,BYTE PTR [rax+rsi*1]
   14001a834:	xor    BYTE PTR [rax+rsi*1],ah
   14001a837:	xor    ah,BYTE PTR [rax+rsi*1]
   14001a83a:	xor    DWORD PTR [rax+0x40],eax
   14001a83d:	push   rbx
   14001a83e:	rex.B (bad) 
   14001a840:	push   r15
   14001a842:	xor    al,0x4c
   14001a844:	rex.WRXB
   14001a845:	rex.XB
   14001a846:	rex.WXB pop r15
   14001a848:	push   rdi
   14001a849:	rex.B
   14001a84a:	rex.WB push r12
   14001a84c:	pop    rdi
   14001a84d:	push   rsp
   14001a84e:	pop    rcx
   14001a84f:	push   rax
   14001a850:	rex.RB
   14001a851:	rex
   14001a852:	rex pop rax
   14001a854:	pop    rdx
   14001a855:	add    BYTE PTR [rdi],bh
   14001a857:	push   rdi
   14001a858:	(bad)  
   14001a859:	imul   esi,DWORD PTR [rsp+rdx*2+0x79],0x3f406570
   14001a861:	and    al,0x43
   14001a863:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14001a865:	movsxd ebp,DWORD PTR [rbx+0x42]
   14001a868:	(bad)  
   14001a869:	jae    0x14001a8d0
   14001a86b:	and    al,0x30
   14001a86e:	xor    DWORD PTR [rax+rsi*1],esp
   14001a871:	xor    BYTE PTR [rax+rsi*1],ah
   14001a874:	xor    BYTE PTR [rax+rsi*1],ah
   14001a877:	xor    BYTE PTR [rax+rsi*1],ah
   14001a87a:	xor    ah,BYTE PTR [rax+rsi*1]
   14001a87d:	xor    DWORD PTR [rax+0x40],eax
   14001a880:	push   rbx
   14001a881:	rex.B (bad) 
   14001a883:	push   r15
   14001a885:	xor    al,0x4c
   14001a887:	rex.WRXB
   14001a888:	rex.XB
   14001a889:	rex.WXB pop r15
   14001a88b:	push   rdi
   14001a88c:	rex.B
   14001a88d:	rex.WB push r12
   14001a88f:	pop    rdi
   14001a890:	push   rsp
   14001a891:	pop    rcx
   14001a892:	push   rax
   14001a893:	rex.RB
   14001a894:	rex
   14001a895:	rex pop rax
   14001a897:	pop    rdx
   14001a898:	add    BYTE PTR [rdi],bh
   14001a89a:	push   rdi
   14001a89b:	(bad)  
   14001a89c:	imul   esi,DWORD PTR [rsp+rdx*2+0x79],0x3f406570
   14001a8a4:	and    al,0x43
   14001a8a6:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14001a8a8:	movsxd ebp,DWORD PTR [rbx+0x42]
   14001a8ab:	(bad)  
   14001a8ac:	jae    0x14001a913
   14001a8ae:	and    al,0x30
   14001a8b1:	xor    ah,BYTE PTR [rax+rsi*1]
   14001a8b4:	xor    BYTE PTR [rax+rsi*1],ah
   14001a8b7:	xor    BYTE PTR [rax+rsi*1],ah
   14001a8ba:	xor    BYTE PTR [rax+rsi*1],ah
   14001a8bd:	xor    BYTE PTR [rax+rsi*1],ah
   14001a8c0:	xor    BYTE PTR [rax+0x40],al
   14001a8c3:	push   rbx
   14001a8c4:	rex.B (bad) 
   14001a8c6:	push   r15
   14001a8c8:	xor    al,0x4c
   14001a8ca:	rex.WRXB
   14001a8cb:	rex.XB
   14001a8cc:	rex.WXB pop r15
   14001a8ce:	push   rdi
   14001a8cf:	rex.B
   14001a8d0:	rex.WB push r12
   14001a8d2:	pop    rdi
   14001a8d3:	push   rsp
   14001a8d4:	pop    rcx
   14001a8d5:	push   rax
   14001a8d6:	rex.RB
   14001a8d7:	rex
   14001a8d8:	rex pop rax
   14001a8da:	pop    rdx
   14001a8db:	add    BYTE PTR [rdi],bh
   14001a8dd:	push   rdi
   14001a8de:	(bad)  
   14001a8df:	imul   esi,DWORD PTR [rsp+rdx*2+0x79],0x3f406570
   14001a8e7:	and    al,0x43
   14001a8e9:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14001a8eb:	movsxd ebp,DWORD PTR [rbx+0x42]
   14001a8ee:	(bad)  
   14001a8ef:	jae    0x14001a956
   14001a8f1:	and    al,0x30
   14001a8f4:	xor    esp,DWORD PTR [rax+rsi*1]
   14001a8f7:	xor    BYTE PTR [rax+rsi*1],ah
   14001a8fa:	xor    BYTE PTR [rax+rsi*1],ah
   14001a8fd:	xor    DWORD PTR [rax+rsi*1],esp
   14001a900:	xor    ah,BYTE PTR [rax+rsi*1]
   14001a903:	xor    al,BYTE PTR [rax+0x40]
   14001a906:	push   rbx
   14001a907:	rex.B (bad) 
   14001a909:	push   r15
   14001a90b:	xor    al,0x4c
   14001a90d:	rex.WRXB
   14001a90e:	rex.XB
   14001a90f:	rex.WXB pop r15
   14001a911:	push   rdi
   14001a912:	rex.B
   14001a913:	rex.WB push r12
   14001a915:	pop    rdi
   14001a916:	push   rsp
   14001a917:	pop    rcx
   14001a918:	push   rax
   14001a919:	rex.RB
   14001a91a:	rex
   14001a91b:	rex pop rax
   14001a91d:	pop    rdx
   14001a91e:	add    BYTE PTR [rdi],bh
   14001a920:	push   rdi
   14001a921:	(bad)  
   14001a922:	imul   esi,DWORD PTR [rsp+rdx*2+0x79],0x3f406570
   14001a92a:	and    al,0x43
   14001a92c:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14001a92e:	movsxd ebp,DWORD PTR [rbx+0x42]
   14001a931:	(bad)  
   14001a932:	jae    0x14001a999
   14001a934:	and    al,0x30
   14001a937:	xor    al,0x24
   14001a939:	xor    BYTE PTR [rcx],dh
   14001a93b:	and    al,0x30
   14001a93d:	xor    BYTE PTR [rax+rsi*1],ah
   14001a940:	xor    DWORD PTR [rax+rsi*1],esp
   14001a943:	xor    ah,BYTE PTR [rax+rsi*1]
   14001a946:	xor    al,BYTE PTR [rax+0x40]
   14001a949:	push   rbx
   14001a94a:	rex.B (bad) 
   14001a94c:	push   r15
   14001a94e:	xor    al,0x4c
   14001a950:	rex.WRXB
   14001a951:	rex.XB
   14001a952:	rex.WXB pop r15
   14001a954:	push   rdi
   14001a955:	rex.B
   14001a956:	rex.WB push r12
   14001a958:	pop    rdi
   14001a959:	push   rsp
   14001a95a:	pop    rcx
   14001a95b:	push   rax
   14001a95c:	rex.RB
   14001a95d:	rex
   14001a95e:	rex pop rax
   14001a960:	pop    rdx
   14001a961:	add    BYTE PTR [rdi],bh
   14001a963:	push   rdi
   14001a964:	(bad)  
   14001a965:	imul   esi,DWORD PTR [rsp+rdx*2+0x79],0x3f406570
   14001a96d:	and    al,0x43
   14001a96f:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14001a971:	movsxd ebp,DWORD PTR [rbx+0x42]
   14001a974:	(bad)  
   14001a975:	jae    0x14001a9dc
   14001a977:	and    al,0x30
   14001a97a:	xor    eax,0x24313024
   14001a97f:	xor    BYTE PTR [rax],dh
   14001a981:	and    al,0x30
   14001a983:	xor    DWORD PTR [rax+rsi*1],esp
   14001a986:	xor    ah,BYTE PTR [rax+rsi*1]
   14001a989:	xor    al,BYTE PTR [rax+0x40]
   14001a98c:	push   rbx
   14001a98d:	rex.B (bad) 
   14001a98f:	push   r15
   14001a991:	xor    al,0x4c
   14001a993:	rex.WRXB
   14001a994:	rex.XB
   14001a995:	rex.WXB pop r15
   14001a997:	push   rdi
   14001a998:	rex.B
   14001a999:	rex.WB push r12
   14001a99b:	pop    rdi
   14001a99c:	push   rsp
   14001a99d:	pop    rcx
   14001a99e:	push   rax
   14001a99f:	rex.RB
   14001a9a0:	rex
   14001a9a1:	rex pop rax
   14001a9a3:	pop    rdx
   14001a9a4:	add    BYTE PTR [rdi],bh
   14001a9a6:	push   rdi
   14001a9a7:	(bad)  
   14001a9a8:	imul   esi,DWORD PTR [rsp+rdx*2+0x79],0x3f406570
   14001a9b0:	and    al,0x43
   14001a9b2:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14001a9b4:	movsxd ebp,DWORD PTR [rbx+0x42]
   14001a9b7:	(bad)  
   14001a9b8:	jae    0x14001aa1f
   14001a9ba:	and    al,0x30
   14001a9bd:	ss and al,0x30
   14001a9c0:	xor    DWORD PTR [rax+rsi*1],esp
   14001a9c3:	xor    DWORD PTR [rax+rsi*1],esp
   14001a9c6:	xor    BYTE PTR [rax+rsi*1],ah
   14001a9c9:	xor    ah,BYTE PTR [rax+rsi*1]
   14001a9cc:	xor    DWORD PTR [rax+0x40],eax
   14001a9cf:	push   rbx
   14001a9d0:	rex.B (bad) 
   14001a9d2:	push   r15
   14001a9d4:	xor    al,0x4c
   14001a9d6:	rex.WRXB
   14001a9d7:	rex.XB
   14001a9d8:	rex.WXB pop r15
   14001a9da:	push   rdi
   14001a9db:	rex.B
   14001a9dc:	rex.WB push r12
   14001a9de:	pop    rdi
   14001a9df:	push   rsp
   14001a9e0:	pop    rcx
   14001a9e1:	push   rax
   14001a9e2:	rex.RB
   14001a9e3:	rex
   14001a9e4:	rex pop rax
   14001a9e6:	pop    rdx
   14001a9e7:	add    BYTE PTR [rdi],bh
   14001a9e9:	push   rdi
   14001a9ea:	(bad)  
   14001a9eb:	imul   esi,DWORD PTR [rsp+rdx*2+0x79],0x3f406570
   14001a9f3:	and    al,0x43
   14001a9f5:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14001a9f7:	movsxd ebp,DWORD PTR [rbx+0x42]
   14001a9fa:	(bad)  
   14001a9fb:	jae    0x14001aa62
   14001a9fd:	and    al,0x30
   14001aa00:	(bad)  
   14001aa01:	and    al,0x30
   14001aa03:	xor    DWORD PTR [rax+rsi*1],esp
   14001aa06:	xor    DWORD PTR [rax+rsi*1],esp
   14001aa09:	xor    BYTE PTR [rax+rsi*1],ah
   14001aa0c:	xor    ah,BYTE PTR [rax+rsi*1]
   14001aa0f:	xor    DWORD PTR [rax+0x40],eax
   14001aa12:	push   rbx
   14001aa13:	rex.B (bad) 
   14001aa15:	push   r15
   14001aa17:	xor    al,0x4c
   14001aa19:	rex.WRXB
   14001aa1a:	rex.XB
   14001aa1b:	rex.WXB pop r15
   14001aa1d:	push   rdi
   14001aa1e:	rex.B
   14001aa1f:	rex.WB push r12
   14001aa21:	pop    rdi
   14001aa22:	push   rsp
   14001aa23:	pop    rcx
   14001aa24:	push   rax
   14001aa25:	rex.RB
   14001aa26:	rex
   14001aa27:	rex pop rax
   14001aa29:	pop    rdx
   14001aa2a:	add    BYTE PTR [rdi],bh
   14001aa2c:	push   rdi
   14001aa2d:	(bad)  
   14001aa2e:	imul   esi,DWORD PTR [rsp+rdx*2+0x79],0x3f406570
   14001aa36:	and    al,0x43
   14001aa38:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14001aa3a:	movsxd ebp,DWORD PTR [rbx+0x42]
   14001aa3d:	(bad)  
   14001aa3e:	jae    0x14001aaa5
   14001aa40:	and    al,0x30
   14001aa43:	cmp    BYTE PTR [rax+rsi*1],ah
   14001aa46:	xor    DWORD PTR [rax+rsi*1],esp
   14001aa49:	xor    BYTE PTR [rax+rsi*1],ah
   14001aa4c:	xor    BYTE PTR [rax+rsi*1],ah
   14001aa4f:	xor    ah,BYTE PTR [rax+rsi*1]
   14001aa52:	xor    DWORD PTR [rax+0x40],eax
   14001aa55:	push   rbx
   14001aa56:	rex.B (bad) 
   14001aa58:	push   r15
   14001aa5a:	xor    al,0x4c
   14001aa5c:	rex.WRXB
   14001aa5d:	rex.XB
   14001aa5e:	rex.WXB pop r15
   14001aa60:	push   rdi
   14001aa61:	rex.B
   14001aa62:	rex.WB push r12
   14001aa64:	pop    rdi
   14001aa65:	push   rsp
   14001aa66:	pop    rcx
   14001aa67:	push   rax
   14001aa68:	rex.RB
   14001aa69:	rex
   14001aa6a:	rex pop rax
   14001aa6c:	pop    rdx
   14001aa6d:	add    BYTE PTR [rdi],bh
   14001aa6f:	push   rdi
   14001aa70:	(bad)  
   14001aa71:	imul   esp,DWORD PTR [rbp+0x41],0x6c
   14001aa75:	ins    BYTE PTR es:[rdi],dx
   14001aa76:	push   rbx
   14001aa77:	ins    BYTE PTR es:[rdi],dx
   14001aa78:	gs gs jo 0x14001aae1
   14001aa7c:	jb     0x14001aaf1
   14001aa7e:	rex
   14001aa7f:	rex.XB push r11
   14001aa81:	push   0x6c657261
   14001aa86:	outs   dx,DWORD PTR ds:[rsi]
   14001aa87:	movsxd ebp,DWORD PTR [rbx+0x40]
   14001aa8a:	rex
   14001aa8b:	rex.B
   14001aa8c:	rex.RB
   14001aa8d:	rex.B
   14001aa8e:	pop    r8
   14001aa90:	pop    rax
   14001aa91:	pop    rdx
   14001aa92:	add    BYTE PTR [rdi],bh
   14001aa94:	push   rdi
   14001aa95:	jb     0x14001ab00
   14001aa97:	je     0x14001aafe
   14001aa99:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14001aa9b:	movsxd ebp,DWORD PTR [rbx+0x40]
   14001aa9e:	rex.XB
   14001aa9f:	rex.XB jb 0x14001ab0b
   14001aaa2:	je     0x14001aaf7
   14001aaa4:	movsxd eax,DWORD PTR gs:[rax+0x40]
   14001aaa8:	push   rcx
   14001aaa9:	rex.RB
   14001aaaa:	rex.B
   14001aaab:	pop    r8
   14001aaad:	pop    rax
   14001aaae:	pop    rdx
   14001aaaf:	add    BYTE PTR [rdi],bh
   14001aab1:	push   rdi
   14001aab2:	jb     0x14001ab1d
   14001aab4:	je     0x14001ab1b
   14001aab6:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14001aab8:	movsxd ebp,DWORD PTR [rbx+0x40]
   14001aabb:	rex.XB
   14001aabc:	rex.RX (bad) 
   14001aabe:	imul   esp,DWORD PTR [rbp+0x4c],0x6f
   14001aac2:	movsxd ebp,DWORD PTR [rbx+0x40]
   14001aac5:	rex push rcx
   14001aac7:	rex.RB
   14001aac8:	rex.B
   14001aac9:	pop    r8
   14001aacb:	pop    rax
   14001aacc:	pop    rdx
   14001aacd:	add    BYTE PTR [rdi],bh
   14001aacf:	push   rdi
   14001aad0:	jb     0x14001ab3b
   14001aad2:	je     0x14001ab39
   14001aad4:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14001aad6:	movsxd ebp,DWORD PTR [rbx+0x40]
   14001aad9:	rex.XB push r10
   14001aadb:	gs (bad) 
   14001aadd:	fs gs jb 0x14001ab38
   14001aae1:	jb     0x14001ab4c
   14001aae3:	je     0x14001ab4a
   14001aae5:	jb     0x14001ab33
   14001aae7:	outs   dx,DWORD PTR ds:[rsi]
   14001aae8:	movsxd ebp,DWORD PTR [rbx+0x32]
   14001aaeb:	rex
   14001aaec:	rex push rcx
   14001aaee:	rex.RB
   14001aaef:	rex.B
   14001aaf0:	pop    r8
   14001aaf2:	pop    rax
   14001aaf3:	pop    rdx
   14001aaf4:	add    BYTE PTR [rdi],bh
   14001aaf6:	push   rdi
   14001aaf7:	jb     0x14001ab62
   14001aaf9:	je     0x14001ab60
   14001aafb:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14001aafd:	movsxd ebp,DWORD PTR [rbx+0x40]
   14001ab00:	rex.XB push r10
   14001ab02:	gs (bad) 
   14001ab04:	fs gs jb 0x14001ab5f
   14001ab08:	jb     0x14001ab73
   14001ab0a:	je     0x14001ab71
   14001ab0c:	jb     0x14001ab5a
   14001ab0e:	outs   dx,DWORD PTR ds:[rsi]
   14001ab0f:	movsxd ebp,DWORD PTR [rbx+0x33]
   14001ab12:	rex
   14001ab13:	rex push rcx
   14001ab15:	rex.RB
   14001ab16:	rex.B
   14001ab17:	pop    r8
   14001ab19:	pop    rax
   14001ab1a:	pop    rdx
   14001ab1b:	add    BYTE PTR [rdi],bh
   14001ab1d:	push   rdi
   14001ab1e:	jb     0x14001ab89
   14001ab20:	je     0x14001ab87
   14001ab22:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14001ab24:	movsxd ebp,DWORD PTR [rbx+0x40]
   14001ab27:	rex.XB push r10
   14001ab29:	gs (bad) 
   14001ab2b:	fs gs jb 0x14001ab86
   14001ab2f:	jb     0x14001ab9a
   14001ab31:	je     0x14001ab98
   14001ab33:	jb     0x14001ab81
   14001ab35:	outs   dx,DWORD PTR ds:[rsi]
   14001ab36:	movsxd ebp,DWORD PTR [rbx+0x40]
   14001ab39:	rex push rcx
   14001ab3b:	rex.RB
   14001ab3c:	rex.B
   14001ab3d:	pop    r8
   14001ab3f:	pop    rax
   14001ab40:	pop    rdx
   14001ab41:	add    BYTE PTR [rdi],bh
   14001ab43:	push   rdi
   14001ab44:	jb     0x14001abaf
   14001ab46:	je     0x14001abad
   14001ab48:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14001ab4a:	movsxd ebp,DWORD PTR [rbx+0x40]
   14001ab4d:	rex.XB push r10
   14001ab4f:	je     0x14001abbd
   14001ab51:	push   rdx
   14001ab52:	gs jae 0x14001abc4
   14001ab55:	jne    0x14001abc9
   14001ab57:	movsxd esp,DWORD PTR [rbp+0x40]
   14001ab5a:	rex push rcx
   14001ab5c:	rex.RB
   14001ab5d:	rex.B
   14001ab5e:	pop    r8
   14001ab60:	pop    rax
   14001ab61:	pop    rdx
   14001ab62:	add    BYTE PTR [rdi],bh
   14001ab64:	push   rdi
   14001ab65:	jb     0x14001abd0
   14001ab67:	je     0x14001abce
   14001ab69:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14001ab6b:	movsxd ebp,DWORD PTR [rbx+0x40]
   14001ab6e:	rex.XB push r11
   14001ab70:	push   0x4c657261
   14001ab75:	outs   dx,DWORD PTR ds:[rsi]
   14001ab76:	movsxd ebp,DWORD PTR [rbx+0x40]
   14001ab79:	rex push rcx
   14001ab7b:	rex.RB
   14001ab7c:	rex.B
   14001ab7d:	pop    r8
   14001ab7f:	pop    rax
   14001ab80:	pop    rdx
   14001ab81:	add    BYTE PTR [rdi],bh
   14001ab83:	push   rdi
   14001ab84:	jb     0x14001abef
   14001ab86:	je     0x14001abed
   14001ab88:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14001ab8a:	movsxd ebp,DWORD PTR [rbx+0x40]
   14001ab8d:	rex.XB push r11
   14001ab8f:	ins    DWORD PTR es:[rdi],dx
   14001ab90:	(bad)  
   14001ab91:	ins    BYTE PTR es:[rdi],dx
   14001ab92:	ins    BYTE PTR es:[rdi],dx
   14001ab93:	push   rbx
   14001ab94:	jo     0x14001abff
   14001ab96:	outs   dx,BYTE PTR ds:[rsi]
   14001ab97:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14001ab99:	movsxd ebp,DWORD PTR [rbx+0x40]
   14001ab9c:	rex push rcx
   14001ab9e:	rex.RB
   14001ab9f:	rex.B
   14001aba0:	pop    r8
   14001aba2:	pop    rax
   14001aba3:	pop    rdx
   14001aba4:	add    BYTE PTR [rdi],bh
   14001aba6:	push   rdi
   14001aba7:	jb     0x14001ac12
   14001aba9:	je     0x14001ac10
   14001abab:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14001abad:	movsxd ebp,DWORD PTR [rbx+0x40]
   14001abb0:	rex.XB push r11
   14001abb2:	jo     0x14001ac1d
   14001abb4:	outs   dx,BYTE PTR ds:[rsi]
   14001abb5:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14001abb7:	movsxd ebp,DWORD PTR [rbx+0x40]
   14001abba:	rex push rcx
   14001abbc:	rex.RB
   14001abbd:	rex.B
   14001abbe:	pop    r8
   14001abc0:	pop    rax
   14001abc1:	pop    rdx
   14001abc2:	add    BYTE PTR [rdi],bh
   14001abc4:	push   rdi
   14001abc5:	jb     0x14001ac30
   14001abc7:	je     0x14001ac2e
   14001abc9:	push   rbp
   14001abca:	outs   dx,BYTE PTR ds:[rsi]
   14001abcb:	ins    BYTE PTR es:[rdi],dx
   14001abcc:	outs   dx,DWORD PTR ds:[rsi]
   14001abcd:	movsxd ebp,DWORD PTR [rbx+0x40]
   14001abd0:	rex.XB
   14001abd1:	rex.XB jb 0x14001ac3d
   14001abd4:	je     0x14001ac29
   14001abd6:	movsxd eax,DWORD PTR gs:[rax+0x40]
   14001abda:	push   rcx
   14001abdb:	rex.RB
   14001abdc:	rex.B
   14001abdd:	pop    r8
   14001abdf:	pop    rax
   14001abe0:	pop    rdx
   14001abe1:	add    BYTE PTR [rdi],bh
   14001abe3:	push   rdi
   14001abe4:	jb     0x14001ac4f
   14001abe6:	je     0x14001ac4d
   14001abe8:	push   rbp
   14001abe9:	outs   dx,BYTE PTR ds:[rsi]
   14001abea:	ins    BYTE PTR es:[rdi],dx
   14001abeb:	outs   dx,DWORD PTR ds:[rsi]
   14001abec:	movsxd ebp,DWORD PTR [rbx+0x40]
   14001abef:	rex.XB
   14001abf0:	rex.RX (bad) 
   14001abf2:	imul   esp,DWORD PTR [rbp+0x4c],0x6f
   14001abf6:	movsxd ebp,DWORD PTR [rbx+0x40]
   14001abf9:	rex push rcx
   14001abfb:	rex.RB
   14001abfc:	rex.B
   14001abfd:	pop    r8
   14001abff:	pop    rax
   14001ac00:	pop    rdx
   14001ac01:	add    BYTE PTR [rdi],bh
   14001ac03:	push   rdi
   14001ac04:	jb     0x14001ac6f
   14001ac06:	je     0x14001ac6d
   14001ac08:	push   rbp
   14001ac09:	outs   dx,BYTE PTR ds:[rsi]
   14001ac0a:	ins    BYTE PTR es:[rdi],dx
   14001ac0b:	outs   dx,DWORD PTR ds:[rsi]
   14001ac0c:	movsxd ebp,DWORD PTR [rbx+0x40]
   14001ac0f:	rex.XB push r10
   14001ac11:	gs (bad) 
   14001ac13:	fs gs jb 0x14001ac6e
   14001ac17:	jb     0x14001ac82
   14001ac19:	je     0x14001ac80
   14001ac1b:	jb     0x14001ac69
   14001ac1d:	outs   dx,DWORD PTR ds:[rsi]
   14001ac1e:	movsxd ebp,DWORD PTR [rbx+0x32]
   14001ac21:	rex
   14001ac22:	rex push rcx
   14001ac24:	rex.RB
   14001ac25:	rex.B
   14001ac26:	pop    r8
   14001ac28:	pop    rax
   14001ac29:	pop    rdx
   14001ac2a:	add    BYTE PTR [rdi],bh
   14001ac2c:	push   rdi
   14001ac2d:	jb     0x14001ac98
   14001ac2f:	je     0x14001ac96
   14001ac31:	push   rbp
   14001ac32:	outs   dx,BYTE PTR ds:[rsi]
   14001ac33:	ins    BYTE PTR es:[rdi],dx
   14001ac34:	outs   dx,DWORD PTR ds:[rsi]
   14001ac35:	movsxd ebp,DWORD PTR [rbx+0x40]
   14001ac38:	rex.XB push r10
   14001ac3a:	gs (bad) 
   14001ac3c:	fs gs jb 0x14001ac97
   14001ac40:	jb     0x14001acab
   14001ac42:	je     0x14001aca9
   14001ac44:	jb     0x14001ac92
   14001ac46:	outs   dx,DWORD PTR ds:[rsi]
   14001ac47:	movsxd ebp,DWORD PTR [rbx+0x33]
   14001ac4a:	rex
   14001ac4b:	rex push rcx
   14001ac4d:	rex.RB
   14001ac4e:	rex.B
   14001ac4f:	pop    r8
   14001ac51:	pop    rax
   14001ac52:	pop    rdx
   14001ac53:	add    BYTE PTR [rdi],bh
   14001ac55:	push   rdi
   14001ac56:	jb     0x14001acc1
   14001ac58:	je     0x14001acbf
   14001ac5a:	push   rbp
   14001ac5b:	outs   dx,BYTE PTR ds:[rsi]
   14001ac5c:	ins    BYTE PTR es:[rdi],dx
   14001ac5d:	outs   dx,DWORD PTR ds:[rsi]
   14001ac5e:	movsxd ebp,DWORD PTR [rbx+0x40]
   14001ac61:	rex.XB push r10
   14001ac63:	gs (bad) 
   14001ac65:	fs gs jb 0x14001acc0
   14001ac69:	jb     0x14001acd4
   14001ac6b:	je     0x14001acd2
   14001ac6d:	jb     0x14001acbb
   14001ac6f:	outs   dx,DWORD PTR ds:[rsi]
   14001ac70:	movsxd ebp,DWORD PTR [rbx+0x40]
   14001ac73:	rex push rcx
   14001ac75:	rex.RB
   14001ac76:	rex.B
   14001ac77:	pop    r8
   14001ac79:	pop    rax
   14001ac7a:	pop    rdx
   14001ac7b:	add    BYTE PTR [rdi],bh
   14001ac7d:	push   rdi
   14001ac7e:	jb     0x14001ace9
   14001ac80:	je     0x14001ace7
   14001ac82:	push   rbp
   14001ac83:	outs   dx,BYTE PTR ds:[rsi]
   14001ac84:	ins    BYTE PTR es:[rdi],dx
   14001ac85:	outs   dx,DWORD PTR ds:[rsi]
   14001ac86:	movsxd ebp,DWORD PTR [rbx+0x40]
   14001ac89:	rex.XB push r10
   14001ac8b:	je     0x14001acf9
   14001ac8d:	push   rdx
   14001ac8e:	gs jae 0x14001ad00
   14001ac91:	jne    0x14001ad05
   14001ac93:	movsxd esp,DWORD PTR [rbp+0x40]
   14001ac96:	rex push rcx
   14001ac98:	rex.RB
   14001ac99:	rex.B
   14001ac9a:	pop    r8
   14001ac9c:	pop    rax
   14001ac9d:	pop    rdx
   14001ac9e:	add    BYTE PTR [rdi],bh
   14001aca0:	push   rdi
   14001aca1:	jb     0x14001ad0c
   14001aca3:	je     0x14001ad0a
   14001aca5:	push   rbp
   14001aca6:	outs   dx,BYTE PTR ds:[rsi]
   14001aca7:	ins    BYTE PTR es:[rdi],dx
   14001aca8:	outs   dx,DWORD PTR ds:[rsi]
   14001aca9:	movsxd ebp,DWORD PTR [rbx+0x40]
   14001acac:	rex.XB push r11
   14001acae:	push   0x4c657261
   14001acb3:	outs   dx,DWORD PTR ds:[rsi]
   14001acb4:	movsxd ebp,DWORD PTR [rbx+0x40]
   14001acb7:	rex push rcx
   14001acb9:	rex.RB
   14001acba:	rex.B
   14001acbb:	pop    r8
   14001acbd:	pop    rax
   14001acbe:	pop    rdx
   14001acbf:	add    BYTE PTR [rdi],bh
   14001acc1:	push   rdi
   14001acc2:	jb     0x14001ad2d
   14001acc4:	je     0x14001ad2b
   14001acc6:	push   rbp
   14001acc7:	outs   dx,BYTE PTR ds:[rsi]
   14001acc8:	ins    BYTE PTR es:[rdi],dx
   14001acc9:	outs   dx,DWORD PTR ds:[rsi]
   14001acca:	movsxd ebp,DWORD PTR [rbx+0x40]
   14001accd:	rex.XB push r11
   14001accf:	ins    DWORD PTR es:[rdi],dx
   14001acd0:	(bad)  
   14001acd1:	ins    BYTE PTR es:[rdi],dx
   14001acd2:	ins    BYTE PTR es:[rdi],dx
   14001acd3:	push   rbx
   14001acd4:	jo     0x14001ad3f
   14001acd6:	outs   dx,BYTE PTR ds:[rsi]
   14001acd7:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14001acd9:	movsxd ebp,DWORD PTR [rbx+0x40]
   14001acdc:	rex push rcx
   14001acde:	rex.RB
   14001acdf:	rex.B
   14001ace0:	pop    r8
   14001ace2:	pop    rax
   14001ace3:	pop    rdx
   14001ace4:	add    BYTE PTR [rdi],bh
   14001ace6:	push   rdi
   14001ace7:	jb     0x14001ad52
   14001ace9:	je     0x14001ad50
   14001aceb:	push   rbp
   14001acec:	outs   dx,BYTE PTR ds:[rsi]
   14001aced:	ins    BYTE PTR es:[rdi],dx
   14001acee:	outs   dx,DWORD PTR ds:[rsi]
   14001acef:	movsxd ebp,DWORD PTR [rbx+0x40]
   14001acf2:	rex.XB push r11
   14001acf4:	jo     0x14001ad5f
   14001acf6:	outs   dx,BYTE PTR ds:[rsi]
   14001acf7:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14001acf9:	movsxd ebp,DWORD PTR [rbx+0x40]
   14001acfc:	rex push rcx
   14001acfe:	rex.RB
   14001acff:	rex.B
   14001ad00:	pop    r8
   14001ad02:	pop    rax
   14001ad03:	pop    rdx
   14001ad04:	add    BYTE PTR [rdi],bh
   14001ad06:	pop    rdi
   14001ad07:	rex.XB ins DWORD PTR es:[rdi],dx
   14001ad09:	jo     0x14001ad50
   14001ad0b:	js     0x14001ad70
   14001ad0d:	push   0x65524340
   14001ad12:	(bad)  
   14001ad13:	fs gs jb 0x14001ad6e
   14001ad17:	jb     0x14001ad82
   14001ad19:	je     0x14001ad80
   14001ad1b:	jb     0x14001ad69
   14001ad1d:	outs   dx,DWORD PTR ds:[rsi]
   14001ad1e:	movsxd ebp,DWORD PTR [rbx+0x32]
   14001ad21:	rex
   14001ad22:	rex
   14001ad23:	rex.B
   14001ad24:	rex.RB
   14001ad25:	rex.B
   14001ad26:	pop    r15
   14001ad28:	rex.WRX
   14001ad29:	rex.WX
   14001ad2a:	rex.WX
   14001ad2b:	rex pop rdx
   14001ad2d:	add    BYTE PTR [rdi],bh
   14001ad2f:	pop    rdi
   14001ad30:	rex.XB ins DWORD PTR es:[rdi],dx
   14001ad32:	jo     0x14001ad79
   14001ad34:	js     0x14001ad99
   14001ad36:	push   0x65524340
   14001ad3b:	(bad)  
   14001ad3c:	fs gs jb 0x14001ad97
   14001ad40:	jb     0x14001adab
   14001ad42:	je     0x14001ada9
   14001ad44:	jb     0x14001ad92
   14001ad46:	outs   dx,DWORD PTR ds:[rsi]
   14001ad47:	movsxd ebp,DWORD PTR [rbx+0x33]
   14001ad4a:	rex
   14001ad4b:	rex
   14001ad4c:	rex.B
   14001ad4d:	rex.RB
   14001ad4e:	rex.B
   14001ad4f:	pop    r15
   14001ad51:	rex.WRX
   14001ad52:	rex.WX
   14001ad53:	rex.WX
   14001ad54:	rex pop rdx
   14001ad56:	add    BYTE PTR [rdi],bh
   14001ad58:	pop    rdi
   14001ad59:	rex.XB ins DWORD PTR es:[rdi],dx
   14001ad5b:	jo     0x14001ada2
   14001ad5d:	js     0x14001adc2
   14001ad5f:	push   0x65524340
   14001ad64:	(bad)  
   14001ad65:	fs gs jb 0x14001adc0
   14001ad69:	jb     0x14001add4
   14001ad6b:	je     0x14001add2
   14001ad6d:	jb     0x14001adbb
   14001ad6f:	outs   dx,DWORD PTR ds:[rsi]
   14001ad70:	movsxd ebp,DWORD PTR [rbx+0x40]
   14001ad73:	rex
   14001ad74:	rex.B
   14001ad75:	rex.RB
   14001ad76:	rex.B
   14001ad77:	pop    r15
   14001ad79:	rex.WRX
   14001ad7a:	rex.WX
   14001ad7b:	rex.WX
   14001ad7c:	rex pop rdx
   14001ad7e:	add    BYTE PTR [rdi],bh
   14001ad80:	pop    rdi
   14001ad81:	rex.XB jne 0x14001adf6
   14001ad84:	jb     0x14001adeb
   14001ad86:	outs   dx,BYTE PTR ds:[rsi]
   14001ad87:	je     0x14001addd
   14001ad89:	push   0x64616572
   14001ad8e:	rex.WB
   14001ad8f:	fs rex
   14001ad91:	rex.XB push r10
   14001ad93:	gs (bad) 
   14001ad95:	fs gs jb 0x14001adf0
   14001ad99:	jb     0x14001ae04
   14001ad9b:	je     0x14001ae02
   14001ad9d:	jb     0x14001adeb
   14001ad9f:	outs   dx,DWORD PTR ds:[rsi]
   14001ada0:	movsxd ebp,DWORD PTR [rbx+0x33]
   14001ada3:	rex
   14001ada4:	rex
   14001ada5:	rex.XB
   14001ada6:	rex.B
   14001ada7:	rex.WX pop rax
   14001ada9:	pop    rdx
   14001adaa:	add    BYTE PTR [rdi],bh
   14001adac:	pop    rdi
   14001adad:	rex.XB jne 0x14001ae22
   14001adb0:	jb     0x14001ae17
   14001adb2:	outs   dx,BYTE PTR ds:[rsi]
   14001adb3:	je     0x14001ae09
   14001adb5:	push   0x64616572
   14001adba:	rex.WB
   14001adbb:	fs rex
   14001adbd:	rex.XB push r11
   14001adbf:	ins    DWORD PTR es:[rdi],dx
   14001adc0:	(bad)  
   14001adc1:	ins    BYTE PTR es:[rdi],dx
   14001adc2:	ins    BYTE PTR es:[rdi],dx
   14001adc3:	push   rbx
   14001adc4:	jo     0x14001ae2f
   14001adc6:	outs   dx,BYTE PTR ds:[rsi]
   14001adc7:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14001adc9:	movsxd ebp,DWORD PTR [rbx+0x40]
   14001adcc:	rex
   14001adcd:	rex.XB
   14001adce:	rex.B
   14001adcf:	rex.WX pop rax
   14001add1:	pop    rdx
   14001add2:	add    BYTE PTR [rdi],bh
   14001add4:	pop    rdi
   14001add5:	rex.XB jne 0x14001ae4a
   14001add8:	jb     0x14001ae3f
   14001adda:	outs   dx,BYTE PTR ds:[rsi]
   14001addb:	je     0x14001ae31
   14001addd:	push   0x64616572
   14001ade2:	rex.WB
   14001ade3:	fs rex
   14001ade5:	rex.XB push r11
   14001ade7:	jo     0x14001ae52
   14001ade9:	outs   dx,BYTE PTR ds:[rsi]
   14001adea:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14001adec:	movsxd ebp,DWORD PTR [rbx+0x40]
   14001adef:	rex
   14001adf0:	rex.XB
   14001adf1:	rex.B
   14001adf2:	rex.WX pop rax
   14001adf4:	pop    rdx
   14001adf5:	add    BYTE PTR [rdi],bh
   14001adf7:	pop    rdi
   14001adf8:	rex.WB jae 0x14001ae47
   14001adfb:	outs   dx,DWORD PTR ds:[rsi]
   14001adfc:	movsxd ebp,DWORD PTR [rbx+0x65]
   14001adff:	fs rex
   14001ae01:	rex.XB push r11
   14001ae03:	jo     0x14001ae6e
   14001ae05:	outs   dx,BYTE PTR ds:[rsi]
   14001ae06:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14001ae08:	movsxd ebp,DWORD PTR [rbx+0x40]
   14001ae0b:	rex
   14001ae0c:	rex.B
   14001ae0d:	rex.RB
   14001ae0e:	rex.X
   14001ae0f:	pop    r15
   14001ae11:	rex.WRX pop rax
   14001ae13:	pop    rdx
   14001ae14:	add    BYTE PTR [rdi],bh
   14001ae16:	pop    rdi
   14001ae17:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14001ae19:	movsxd ebp,DWORD PTR [rbx+0x40]
   14001ae1c:	rex.XB push r11
   14001ae1e:	jo     0x14001ae89
   14001ae20:	outs   dx,BYTE PTR ds:[rsi]
   14001ae21:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14001ae23:	movsxd ebp,DWORD PTR [rbx+0x40]
   14001ae26:	rex
   14001ae27:	rex.B
   14001ae28:	rex.RB
   14001ae29:	rex.B
   14001ae2a:	pop    r8
   14001ae2c:	pop    rax
   14001ae2d:	pop    rdx
   14001ae2e:	add    BYTE PTR [rdi],bh
   14001ae30:	pop    rdi
   14001ae31:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14001ae33:	movsxd ebp,DWORD PTR [rbx+0x53]
   14001ae36:	jo     0x14001aea1
   14001ae38:	outs   dx,BYTE PTR ds:[rsi]
   14001ae39:	rex
   14001ae3a:	rex.XB push r10
   14001ae3c:	gs (bad) 
   14001ae3e:	fs gs jb 0x14001ae99
   14001ae42:	jb     0x14001aead
   14001ae44:	je     0x14001aeab
   14001ae46:	jb     0x14001ae94
   14001ae48:	outs   dx,DWORD PTR ds:[rsi]
   14001ae49:	movsxd ebp,DWORD PTR [rbx+0x32]
   14001ae4c:	rex
   14001ae4d:	rex
   14001ae4e:	rex.B
   14001ae4f:	rex.RB
   14001ae50:	rex.B
   14001ae51:	pop    r8
   14001ae53:	pop    rdi
   14001ae54:	rex.WRX
   14001ae55:	rex pop rdx
   14001ae57:	add    BYTE PTR [rdi],bh
   14001ae59:	pop    rdi
   14001ae5a:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14001ae5c:	movsxd ebp,DWORD PTR [rbx+0x53]
   14001ae5f:	jo     0x14001aeca
   14001ae61:	outs   dx,BYTE PTR ds:[rsi]
   14001ae62:	rex
   14001ae63:	rex.XB push r10
   14001ae65:	gs (bad) 
   14001ae67:	fs gs jb 0x14001aec2
   14001ae6b:	jb     0x14001aed6
   14001ae6d:	je     0x14001aed4
   14001ae6f:	jb     0x14001aebd
   14001ae71:	outs   dx,DWORD PTR ds:[rsi]
   14001ae72:	movsxd ebp,DWORD PTR [rbx+0x33]
   14001ae75:	rex
   14001ae76:	rex
   14001ae77:	rex.B
   14001ae78:	rex.RB
   14001ae79:	rex.B
   14001ae7a:	pop    r8
   14001ae7c:	push   rdi
   14001ae7d:	xor    al,0x53
   14001ae7f:	push   rax
   14001ae80:	rex.WB
   14001ae81:	rex.WRX pop rdi
   14001ae83:	push   rsp
   14001ae84:	pop    rcx
   14001ae85:	push   rax
   14001ae86:	rex.RB
   14001ae87:	rex xor DWORD PTR [rax+0x40],eax
   14001ae8b:	pop    rdx
   14001ae8c:	add    BYTE PTR [rdi],bh
   14001ae8e:	pop    rdi
   14001ae8f:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14001ae91:	movsxd ebp,DWORD PTR [rbx+0x53]
   14001ae94:	jo     0x14001aeff
   14001ae96:	outs   dx,BYTE PTR ds:[rsi]
   14001ae97:	rex
   14001ae98:	rex.XB push r10
   14001ae9a:	gs (bad) 
   14001ae9c:	fs gs jb 0x14001aef7
   14001aea0:	jb     0x14001af0b
   14001aea2:	je     0x14001af09
   14001aea4:	jb     0x14001aef2
   14001aea6:	outs   dx,DWORD PTR ds:[rsi]
   14001aea7:	movsxd ebp,DWORD PTR [rbx+0x40]
   14001aeaa:	rex
   14001aeab:	rex.B
   14001aeac:	rex.RB
   14001aead:	rex.B
   14001aeae:	pop    r8
   14001aeb0:	pop    rdi
   14001aeb1:	rex.WRX
   14001aeb2:	rex pop rdx
   14001aeb4:	add    BYTE PTR [rdi],bh
   14001aeb6:	pop    rdi
   14001aeb7:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14001aeb9:	movsxd ebp,DWORD PTR [rbx+0x53]
   14001aebc:	jo     0x14001af27
   14001aebe:	outs   dx,BYTE PTR ds:[rsi]
   14001aebf:	rex
   14001aec0:	rex.XB push r11
   14001aec2:	ins    DWORD PTR es:[rdi],dx
   14001aec3:	(bad)  
   14001aec4:	ins    BYTE PTR es:[rdi],dx
   14001aec5:	ins    BYTE PTR es:[rdi],dx
   14001aec6:	push   rbx
   14001aec7:	jo     0x14001af32
   14001aec9:	outs   dx,BYTE PTR ds:[rsi]
   14001aeca:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14001aecc:	movsxd ebp,DWORD PTR [rbx+0x40]
   14001aecf:	rex
   14001aed0:	rex.B
   14001aed1:	rex.RB
   14001aed2:	rex.B
   14001aed3:	pop    r8
   14001aed5:	pop    rax
   14001aed6:	pop    rdx
   14001aed7:	add    BYTE PTR [rdi],bh
   14001aed9:	pop    rdi
   14001aeda:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14001aedc:	movsxd ebp,DWORD PTR [rbx+0x53]
   14001aedf:	jo     0x14001af4a
   14001aee1:	outs   dx,BYTE PTR ds:[rsi]
   14001aee2:	rex
   14001aee3:	rex.XB push r11
   14001aee5:	jo     0x14001af50
   14001aee7:	outs   dx,BYTE PTR ds:[rsi]
   14001aee8:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14001aeea:	movsxd ebp,DWORD PTR [rbx+0x40]
   14001aeed:	rex
   14001aeee:	rex.B
   14001aeef:	rex.RB
   14001aef0:	rex.B
   14001aef1:	pop    r8
   14001aef3:	pop    rax
   14001aef4:	pop    rdx
   14001aef5:	add    BYTE PTR [rdi],bh
   14001aef7:	pop    rdi
   14001aef8:	push   rdx
   14001aef9:	gs (bad) 
   14001aefb:	rex.WR outs dx,DWORD PTR fs:[rsi]
   14001aefe:	movsxd ebp,DWORD PTR [rbx+0x53]
   14001af01:	jo     0x14001af6c
   14001af03:	outs   dx,BYTE PTR ds:[rsi]
   14001af04:	rex
   14001af05:	rex.XB push r10
   14001af07:	gs (bad) 
   14001af09:	fs gs jb 0x14001af64
   14001af0d:	jb     0x14001af78
   14001af0f:	je     0x14001af76
   14001af11:	jb     0x14001af5f
   14001af13:	outs   dx,DWORD PTR ds:[rsi]
   14001af14:	movsxd ebp,DWORD PTR [rbx+0x32]
   14001af17:	rex
   14001af18:	rex
   14001af19:	rex.B
   14001af1a:	rex.RB
   14001af1b:	rex.B
   14001af1c:	pop    r8
   14001af1e:	pop    rax
   14001af1f:	pop    rdx
   14001af20:	add    BYTE PTR [rdi],bh
   14001af22:	pop    rdi
   14001af23:	push   rdx
   14001af24:	gs (bad) 
   14001af26:	rex.WR outs dx,DWORD PTR fs:[rsi]
   14001af29:	movsxd ebp,DWORD PTR [rbx+0x53]
   14001af2c:	jo     0x14001af97
   14001af2e:	outs   dx,BYTE PTR ds:[rsi]
   14001af2f:	rex
   14001af30:	rex.XB push r10
   14001af32:	gs (bad) 
   14001af34:	fs gs jb 0x14001af8f
   14001af38:	jb     0x14001afa3
   14001af3a:	je     0x14001afa1
   14001af3c:	jb     0x14001af8a
   14001af3e:	outs   dx,DWORD PTR ds:[rsi]
   14001af3f:	movsxd ebp,DWORD PTR [rbx+0x33]
   14001af42:	rex
   14001af43:	rex
   14001af44:	rex.B
   14001af45:	rex.RB
   14001af46:	rex.B
   14001af47:	pop    r8
   14001af49:	push   rdi
   14001af4a:	xor    al,0x53
   14001af4c:	push   rax
   14001af4d:	rex.WB
   14001af4e:	rex.WRX pop rdi
   14001af50:	push   rsp
   14001af51:	pop    rcx
   14001af52:	push   rax
   14001af53:	rex.RB
   14001af54:	rex xor DWORD PTR [rax+0x40],eax
   14001af58:	pop    rdx
   14001af59:	add    BYTE PTR [rdi],bh
   14001af5b:	pop    rdi
   14001af5c:	push   rdx
   14001af5d:	gs (bad) 
   14001af5f:	rex.WR outs dx,DWORD PTR fs:[rsi]
   14001af62:	movsxd ebp,DWORD PTR [rbx+0x53]
   14001af65:	jo     0x14001afd0
   14001af67:	outs   dx,BYTE PTR ds:[rsi]
   14001af68:	rex
   14001af69:	rex.XB push r10
   14001af6b:	gs (bad) 
   14001af6d:	fs gs jb 0x14001afc8
   14001af71:	jb     0x14001afdc
   14001af73:	je     0x14001afda
   14001af75:	jb     0x14001afc3
   14001af77:	outs   dx,DWORD PTR ds:[rsi]
   14001af78:	movsxd ebp,DWORD PTR [rbx+0x40]
   14001af7b:	rex
   14001af7c:	rex.B
   14001af7d:	rex.RB
   14001af7e:	rex.B
   14001af7f:	pop    r8
   14001af81:	pop    rax
   14001af82:	pop    rdx
   14001af83:	add    BYTE PTR [rdi],bh
   14001af85:	pop    rdi
   14001af86:	push   rsp
   14001af87:	jb     0x14001b002
   14001af89:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14001af8b:	movsxd ebp,DWORD PTR [rbx+0x40]
   14001af8e:	rex.XB push r11
   14001af90:	ins    DWORD PTR es:[rdi],dx
   14001af91:	(bad)  
   14001af92:	ins    BYTE PTR es:[rdi],dx
   14001af93:	ins    BYTE PTR es:[rdi],dx
   14001af94:	push   rbx
   14001af95:	jo     0x14001b000
   14001af97:	outs   dx,BYTE PTR ds:[rsi]
   14001af98:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14001af9a:	movsxd ebp,DWORD PTR [rbx+0x40]
   14001af9d:	rex
   14001af9e:	rex.B
   14001af9f:	rex.RB
   14001afa0:	rex.B
   14001afa1:	pop    r15
   14001afa3:	rex.WRX pop rax
   14001afa5:	pop    rdx
   14001afa6:	add    BYTE PTR [rdi],bh
   14001afa8:	pop    rdi
   14001afa9:	push   rsp
   14001afaa:	jb     0x14001b025
   14001afac:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14001afae:	movsxd ebp,DWORD PTR [rbx+0x40]
   14001afb1:	rex.XB push r11
   14001afb3:	jo     0x14001b01e
   14001afb5:	outs   dx,BYTE PTR ds:[rsi]
   14001afb6:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14001afb8:	movsxd ebp,DWORD PTR [rbx+0x40]
   14001afbb:	rex
   14001afbc:	rex.B
   14001afbd:	rex.RB
   14001afbe:	rex.B
   14001afbf:	pop    r15
   14001afc1:	rex.WRX pop rax
   14001afc3:	pop    rdx
   14001afc4:	add    BYTE PTR [rdi],bh
   14001afc6:	pop    rdi
   14001afc7:	push   rsp
   14001afc8:	jb     0x14001b043
   14001afca:	push   rdx
   14001afcb:	gs (bad) 
   14001afcd:	rex.WR outs dx,DWORD PTR fs:[rsi]
   14001afd0:	movsxd ebp,DWORD PTR [rbx+0x40]
   14001afd3:	rex.XB push r10
   14001afd5:	gs (bad) 
   14001afd7:	fs gs jb 0x14001b032
   14001afdb:	jb     0x14001b046
   14001afdd:	je     0x14001b044
   14001afdf:	jb     0x14001b02d
   14001afe1:	outs   dx,DWORD PTR ds:[rsi]
   14001afe2:	movsxd ebp,DWORD PTR [rbx+0x32]
   14001afe5:	rex
   14001afe6:	rex
   14001afe7:	rex.B
   14001afe8:	rex.RB
   14001afe9:	rex.B
   14001afea:	pop    r15
   14001afec:	rex.WRX pop rax
   14001afee:	pop    rdx
   14001afef:	add    BYTE PTR [rdi],bh
   14001aff1:	pop    rdi
   14001aff2:	push   rsp
   14001aff3:	jb     0x14001b06e
   14001aff5:	push   rdx
   14001aff6:	gs (bad) 
   14001aff8:	rex.WR outs dx,DWORD PTR fs:[rsi]
   14001affb:	movsxd ebp,DWORD PTR [rbx+0x40]
   14001affe:	rex.XB push r10
   14001b000:	gs (bad) 
   14001b002:	fs gs jb 0x14001b05d
   14001b006:	jb     0x14001b071
   14001b008:	je     0x14001b06f
   14001b00a:	jb     0x14001b058
   14001b00c:	outs   dx,DWORD PTR ds:[rsi]
   14001b00d:	movsxd ebp,DWORD PTR [rbx+0x33]
   14001b010:	rex
   14001b011:	rex
   14001b012:	rex.B
   14001b013:	rex.RB
   14001b014:	rex.B
   14001b015:	pop    r15
   14001b017:	rex.WRX pop rax
   14001b019:	pop    rdx
   14001b01a:	add    BYTE PTR [rdi],bh
   14001b01c:	pop    rdi
   14001b01d:	push   rsp
   14001b01e:	jb     0x14001b099
   14001b020:	push   rdx
   14001b021:	gs (bad) 
   14001b023:	rex.WR outs dx,DWORD PTR fs:[rsi]
   14001b026:	movsxd ebp,DWORD PTR [rbx+0x40]
   14001b029:	rex.XB push r10
   14001b02b:	gs (bad) 
   14001b02d:	fs gs jb 0x14001b088
   14001b031:	jb     0x14001b09c
   14001b033:	je     0x14001b09a
   14001b035:	jb     0x14001b083
   14001b037:	outs   dx,DWORD PTR ds:[rsi]
   14001b038:	movsxd ebp,DWORD PTR [rbx+0x40]
   14001b03b:	rex
   14001b03c:	rex.B
   14001b03d:	rex.RB
   14001b03e:	rex.B
   14001b03f:	pop    r15
   14001b041:	rex.WRX pop rax
   14001b043:	pop    rdx
   14001b044:	add    BYTE PTR [rdi],bh
   14001b046:	pop    rdi
   14001b047:	push   rsp
   14001b048:	jb     0x14001b0c3
   14001b04a:	push   rdx
   14001b04b:	gs (bad) 
   14001b04d:	rex.WR outs dx,DWORD PTR fs:[rsi]
   14001b050:	movsxd ebp,DWORD PTR [rbx+0x52]
   14001b053:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   14001b057:	jae    0x14001b0c2
   14001b059:	jbe    0x14001b0c0
   14001b05b:	rex
   14001b05c:	rex.XB push r10
   14001b05e:	gs (bad) 
   14001b060:	fs gs jb 0x14001b0bb
   14001b064:	jb     0x14001b0cf
   14001b066:	je     0x14001b0cd
   14001b068:	jb     0x14001b0b6
   14001b06a:	outs   dx,DWORD PTR ds:[rsi]
   14001b06b:	movsxd ebp,DWORD PTR [rbx+0x33]
   14001b06e:	rex
   14001b06f:	rex
   14001b070:	rex.B
   14001b071:	rex.RB
   14001b072:	rex.B
   14001b073:	pop    r15
   14001b075:	rex.WRX pop rax
   14001b077:	pop    rdx
   14001b078:	add    BYTE PTR [rdi],bh
   14001b07a:	pop    rdi
   14001b07b:	push   rsp
   14001b07c:	jb     0x14001b0f7
   14001b07e:	push   rdi
   14001b07f:	jb     0x14001b0ea
   14001b081:	je     0x14001b0e8
   14001b083:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14001b085:	movsxd ebp,DWORD PTR [rbx+0x32]
   14001b088:	rex
   14001b089:	rex.XB push r10
   14001b08b:	gs (bad) 
   14001b08d:	fs gs jb 0x14001b0e8
   14001b091:	jb     0x14001b0fc
   14001b093:	je     0x14001b0fa
   14001b095:	jb     0x14001b0e3
   14001b097:	outs   dx,DWORD PTR ds:[rsi]
   14001b098:	movsxd ebp,DWORD PTR [rbx+0x33]
   14001b09b:	rex
   14001b09c:	rex
   14001b09d:	rex.B
   14001b09e:	rex.RB
   14001b09f:	rex.B
   14001b0a0:	pop    r15
   14001b0a2:	rex.WRX pop rax
   14001b0a4:	pop    rdx
   14001b0a5:	add    BYTE PTR [rdi],bh
   14001b0a7:	pop    rdi
   14001b0a8:	push   rsp
   14001b0a9:	jb     0x14001b124
   14001b0ab:	push   rdi
   14001b0ac:	jb     0x14001b117
   14001b0ae:	je     0x14001b115
   14001b0b0:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14001b0b2:	movsxd ebp,DWORD PTR [rbx+0x40]
   14001b0b5:	rex.XB push r10
   14001b0b7:	gs (bad) 
   14001b0b9:	fs gs jb 0x14001b114
   14001b0bd:	jb     0x14001b128
   14001b0bf:	je     0x14001b126
   14001b0c1:	jb     0x14001b10f
   14001b0c3:	outs   dx,DWORD PTR ds:[rsi]
   14001b0c4:	movsxd ebp,DWORD PTR [rbx+0x32]
   14001b0c7:	rex
   14001b0c8:	rex
   14001b0c9:	rex.B
   14001b0ca:	rex.RB
   14001b0cb:	rex.B
   14001b0cc:	pop    r15
   14001b0ce:	rex.WRX
   14001b0cf:	rex.WX
   14001b0d0:	rex pop rdx
   14001b0d2:	add    BYTE PTR [rdi],bh
   14001b0d4:	pop    rdi
   14001b0d5:	push   rsp
   14001b0d6:	jb     0x14001b151
   14001b0d8:	push   rdi
   14001b0d9:	jb     0x14001b144
   14001b0db:	je     0x14001b142
   14001b0dd:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14001b0df:	movsxd ebp,DWORD PTR [rbx+0x40]
   14001b0e2:	rex.XB push r10
   14001b0e4:	gs (bad) 
   14001b0e6:	fs gs jb 0x14001b141
   14001b0ea:	jb     0x14001b155
   14001b0ec:	je     0x14001b153
   14001b0ee:	jb     0x14001b13c
   14001b0f0:	outs   dx,DWORD PTR ds:[rsi]
   14001b0f1:	movsxd ebp,DWORD PTR [rbx+0x33]
   14001b0f4:	rex
   14001b0f5:	rex
   14001b0f6:	rex.B
   14001b0f7:	rex.RB
   14001b0f8:	rex.B
   14001b0f9:	pop    r15
   14001b0fb:	rex.WRX
   14001b0fc:	rex.WX
   14001b0fd:	rex pop rdx
   14001b0ff:	add    BYTE PTR [rdi],bh
   14001b101:	pop    rdi
   14001b102:	push   rsp
   14001b103:	jb     0x14001b17e
   14001b105:	push   rdi
   14001b106:	jb     0x14001b171
   14001b108:	je     0x14001b16f
   14001b10a:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14001b10c:	movsxd ebp,DWORD PTR [rbx+0x40]
   14001b10f:	rex.XB push r10
   14001b111:	gs (bad) 
   14001b113:	fs gs jb 0x14001b16e
   14001b117:	jb     0x14001b182
   14001b119:	je     0x14001b180
   14001b11b:	jb     0x14001b169
   14001b11d:	outs   dx,DWORD PTR ds:[rsi]
   14001b11e:	movsxd ebp,DWORD PTR [rbx+0x40]
   14001b121:	rex
   14001b122:	rex.B
   14001b123:	rex.RB
   14001b124:	rex.B
   14001b125:	pop    r15
   14001b127:	rex.WRX pop rax
   14001b129:	pop    rdx
   14001b12a:	add    BYTE PTR [rdi],bh
   14001b12c:	pop    rdi
   14001b12d:	push   rbp
   14001b12e:	outs   dx,BYTE PTR ds:[rsi]
   14001b12f:	ins    BYTE PTR es:[rdi],dx
   14001b130:	outs   dx,DWORD PTR ds:[rsi]
   14001b131:	movsxd ebp,DWORD PTR [rbx+0x40]
   14001b134:	rex.XB push r11
   14001b136:	jo     0x14001b1a1
   14001b138:	outs   dx,BYTE PTR ds:[rsi]
   14001b139:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14001b13b:	movsxd ebp,DWORD PTR [rbx+0x40]
   14001b13e:	rex
   14001b13f:	rex.B
   14001b140:	rex.RB
   14001b141:	rex.B
   14001b142:	pop    r8
   14001b144:	pop    rax
   14001b145:	pop    rdx
   14001b146:	add    BYTE PTR [rdi],bh
   14001b148:	pop    rdi
   14001b149:	push   rdi
   14001b14a:	jb     0x14001b1b5
   14001b14c:	je     0x14001b1b3
   14001b14e:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14001b150:	movsxd ebp,DWORD PTR [rbx+0x53]
   14001b153:	jo     0x14001b1be
   14001b155:	outs   dx,BYTE PTR ds:[rsi]
   14001b156:	rex
   14001b157:	rex.XB push r10
   14001b159:	gs (bad) 
   14001b15b:	fs gs jb 0x14001b1b6
   14001b15f:	jb     0x14001b1ca
   14001b161:	je     0x14001b1c8
   14001b163:	jb     0x14001b1b1
   14001b165:	outs   dx,DWORD PTR ds:[rsi]
   14001b166:	movsxd ebp,DWORD PTR [rbx+0x32]
   14001b169:	rex
   14001b16a:	rex
   14001b16b:	rex.B
   14001b16c:	rex.RB
   14001b16d:	rex.B
   14001b16e:	pop    r8
   14001b170:	pop    rax
   14001b171:	pop    rdx
   14001b172:	add    BYTE PTR [rdi],bh
   14001b174:	pop    rdi
   14001b175:	push   rdi
   14001b176:	jb     0x14001b1e1
   14001b178:	je     0x14001b1df
   14001b17a:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14001b17c:	movsxd ebp,DWORD PTR [rbx+0x53]
   14001b17f:	jo     0x14001b1ea
   14001b181:	outs   dx,BYTE PTR ds:[rsi]
   14001b182:	rex
   14001b183:	rex.XB push r10
   14001b185:	gs (bad) 
   14001b187:	fs gs jb 0x14001b1e2
   14001b18b:	jb     0x14001b1f6
   14001b18d:	je     0x14001b1f4
   14001b18f:	jb     0x14001b1dd
   14001b191:	outs   dx,DWORD PTR ds:[rsi]
   14001b192:	movsxd ebp,DWORD PTR [rbx+0x33]
   14001b195:	rex
   14001b196:	rex
   14001b197:	rex.B
   14001b198:	rex.RB
   14001b199:	rex.B
   14001b19a:	pop    r8
   14001b19c:	pop    rax
   14001b19d:	pop    rdx
   14001b19e:	add    BYTE PTR [rdi],bh
   14001b1a0:	pop    rdi
   14001b1a1:	push   rdi
   14001b1a2:	jb     0x14001b20d
   14001b1a4:	je     0x14001b20b
   14001b1a6:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14001b1a8:	movsxd ebp,DWORD PTR [rbx+0x53]
   14001b1ab:	jo     0x14001b216
   14001b1ad:	outs   dx,BYTE PTR ds:[rsi]
   14001b1ae:	rex
   14001b1af:	rex.XB push r10
   14001b1b1:	gs (bad) 
   14001b1b3:	fs gs jb 0x14001b20e
   14001b1b7:	jb     0x14001b222
   14001b1b9:	je     0x14001b220
   14001b1bb:	jb     0x14001b209
   14001b1bd:	outs   dx,DWORD PTR ds:[rsi]
   14001b1be:	movsxd ebp,DWORD PTR [rbx+0x40]
   14001b1c1:	rex
   14001b1c2:	rex.B
   14001b1c3:	rex.RB
   14001b1c4:	rex.B
   14001b1c5:	pop    r8
   14001b1c7:	pop    rax
   14001b1c8:	pop    rdx
   14001b1c9:	add    BYTE PTR [rdi],bh
   14001b1cb:	jae    0x14001b23a
   14001b1cd:	pop    rdi
   14001b1ce:	fs (bad) 
   14001b1d0:	ins    BYTE PTR es:[rdi],dx
   14001b1d1:	rex.R
   14001b1d2:	data16 ins BYTE PTR es:[rdi],dx
   14001b1d4:	je     0x14001b229
   14001b1d6:	jo     0x14001b241
   14001b1d8:	outs   dx,BYTE PTR ds:[rsi]
   14001b1d9:	rex.B
   14001b1da:	fs push 0x46
   14001b1dd:	movsxd esi,DWORD PTR [rdx+rsi*2+0x40]
   14001b1e1:	rex.XB
   14001b1e2:	rex.XB jb 0x14001b24e
   14001b1e5:	je     0x14001b23a
   14001b1e7:	movsxd eax,DWORD PTR gs:[rax+0x40]
   14001b1eb:	xor    DWORD PTR [rsi+0x41],ecx
   14001b1ee:	add    BYTE PTR [rdi],bh
   14001b1f0:	jae    0x14001b25f
   14001b1f2:	pop    rdi
   14001b1f3:	fs (bad) 
   14001b1f5:	ins    BYTE PTR es:[rdi],dx
   14001b1f6:	rex.R
   14001b1f7:	data16 ins BYTE PTR es:[rdi],dx
   14001b1f9:	je     0x14001b24e
   14001b1fb:	jo     0x14001b266
   14001b1fd:	outs   dx,BYTE PTR ds:[rsi]
   14001b1fe:	rex.B
   14001b1ff:	fs push 0x46
   14001b202:	movsxd esi,DWORD PTR [rdx+rsi*2+0x40]
   14001b206:	rex.XB
   14001b207:	rex.RX (bad) 
   14001b209:	imul   esp,DWORD PTR [rbp+0x4c],0x6f
   14001b20d:	movsxd ebp,DWORD PTR [rbx+0x40]
   14001b210:	rex xor DWORD PTR [rsi+0x41],ecx
   14001b214:	add    BYTE PTR [rdi],bh
   14001b216:	jae    0x14001b285
   14001b218:	pop    rdi
   14001b219:	fs (bad) 
   14001b21b:	ins    BYTE PTR es:[rdi],dx
   14001b21c:	rex.R
   14001b21d:	data16 ins BYTE PTR es:[rdi],dx
   14001b21f:	je     0x14001b274
   14001b221:	jo     0x14001b28c
   14001b223:	outs   dx,BYTE PTR ds:[rsi]
   14001b224:	rex.B
   14001b225:	fs push 0x46
   14001b228:	movsxd esi,DWORD PTR [rdx+rsi*2+0x40]
   14001b22c:	rex.XB push r10
   14001b22e:	gs (bad) 
   14001b230:	fs gs jb 0x14001b28b
   14001b234:	jb     0x14001b29f
   14001b236:	je     0x14001b29d
   14001b238:	jb     0x14001b286
   14001b23a:	outs   dx,DWORD PTR ds:[rsi]
   14001b23b:	movsxd ebp,DWORD PTR [rbx+0x32]
   14001b23e:	rex
   14001b23f:	rex xor DWORD PTR [rsi+0x41],ecx
   14001b243:	add    BYTE PTR [rdi],bh
   14001b245:	jae    0x14001b2b4
   14001b247:	pop    rdi
   14001b248:	fs (bad) 
   14001b24a:	ins    BYTE PTR es:[rdi],dx
   14001b24b:	rex.R
   14001b24c:	data16 ins BYTE PTR es:[rdi],dx
   14001b24e:	je     0x14001b2a3
   14001b250:	jo     0x14001b2bb
   14001b252:	outs   dx,BYTE PTR ds:[rsi]
   14001b253:	rex.B
   14001b254:	fs push 0x46
   14001b257:	movsxd esi,DWORD PTR [rdx+rsi*2+0x40]
   14001b25b:	rex.XB push r10
   14001b25d:	gs (bad) 
   14001b25f:	fs gs jb 0x14001b2ba
   14001b263:	jb     0x14001b2ce
   14001b265:	je     0x14001b2cc
   14001b267:	jb     0x14001b2b5
   14001b269:	outs   dx,DWORD PTR ds:[rsi]
   14001b26a:	movsxd ebp,DWORD PTR [rbx+0x33]
   14001b26d:	rex
   14001b26e:	rex xor DWORD PTR [rsi+0x41],ecx
   14001b272:	add    BYTE PTR [rdi],bh
   14001b274:	jae    0x14001b2e3
   14001b276:	pop    rdi
   14001b277:	fs (bad) 
   14001b279:	ins    BYTE PTR es:[rdi],dx
   14001b27a:	rex.R
   14001b27b:	data16 ins BYTE PTR es:[rdi],dx
   14001b27d:	je     0x14001b2d2
   14001b27f:	jo     0x14001b2ea
   14001b281:	outs   dx,BYTE PTR ds:[rsi]
   14001b282:	rex.B
   14001b283:	fs push 0x46
   14001b286:	movsxd esi,DWORD PTR [rdx+rsi*2+0x40]
   14001b28a:	rex.XB push r10
   14001b28c:	gs (bad) 
   14001b28e:	fs gs jb 0x14001b2e9
   14001b292:	jb     0x14001b2fd
   14001b294:	je     0x14001b2fb
   14001b296:	jb     0x14001b2e4
   14001b298:	outs   dx,DWORD PTR ds:[rsi]
   14001b299:	movsxd ebp,DWORD PTR [rbx+0x40]
   14001b29c:	rex xor DWORD PTR [rsi+0x41],ecx
   14001b2a0:	add    BYTE PTR [rdi],bh
   14001b2a2:	jae    0x14001b311
   14001b2a4:	pop    rdi
   14001b2a5:	fs (bad) 
   14001b2a7:	ins    BYTE PTR es:[rdi],dx
   14001b2a8:	rex.R
   14001b2a9:	data16 ins BYTE PTR es:[rdi],dx
   14001b2ab:	je     0x14001b300
   14001b2ad:	jo     0x14001b318
   14001b2af:	outs   dx,BYTE PTR ds:[rsi]
   14001b2b0:	rex.B
   14001b2b1:	fs push 0x46
   14001b2b4:	movsxd esi,DWORD PTR [rdx+rsi*2+0x40]
   14001b2b8:	rex.XB push r10
   14001b2ba:	je     0x14001b328
   14001b2bc:	push   rdx
   14001b2bd:	gs jae 0x14001b32f
   14001b2c0:	jne    0x14001b334
   14001b2c2:	movsxd esp,DWORD PTR [rbp+0x40]
   14001b2c5:	rex xor DWORD PTR [rsi+0x41],ecx
   14001b2c9:	add    BYTE PTR [rdi],bh
   14001b2cb:	jae    0x14001b33a
   14001b2cd:	pop    rdi
   14001b2ce:	fs (bad) 
   14001b2d0:	ins    BYTE PTR es:[rdi],dx
   14001b2d1:	rex.R
   14001b2d2:	data16 ins BYTE PTR es:[rdi],dx
   14001b2d4:	je     0x14001b329
   14001b2d6:	jo     0x14001b341
   14001b2d8:	outs   dx,BYTE PTR ds:[rsi]
   14001b2d9:	rex.B
   14001b2da:	fs push 0x46
   14001b2dd:	movsxd esi,DWORD PTR [rdx+rsi*2+0x40]
   14001b2e1:	rex.XB push r11
   14001b2e3:	push   0x4c657261
   14001b2e8:	outs   dx,DWORD PTR ds:[rsi]
   14001b2e9:	movsxd ebp,DWORD PTR [rbx+0x40]
   14001b2ec:	rex xor DWORD PTR [rsi+0x41],ecx
   14001b2f0:	add    BYTE PTR [rdi],bh
   14001b2f2:	jae    0x14001b361
   14001b2f4:	pop    rdi
   14001b2f5:	fs (bad) 
   14001b2f7:	ins    BYTE PTR es:[rdi],dx
   14001b2f8:	rex.R
   14001b2f9:	data16 ins BYTE PTR es:[rdi],dx
   14001b2fb:	je     0x14001b350
   14001b2fd:	jo     0x14001b368
   14001b2ff:	outs   dx,BYTE PTR ds:[rsi]
   14001b300:	rex.B
   14001b301:	fs push 0x46
   14001b304:	movsxd esi,DWORD PTR [rdx+rsi*2+0x40]
   14001b308:	rex.XB push r11
   14001b30a:	ins    DWORD PTR es:[rdi],dx
   14001b30b:	(bad)  
   14001b30c:	ins    BYTE PTR es:[rdi],dx
   14001b30d:	ins    BYTE PTR es:[rdi],dx
   14001b30e:	push   rbx
   14001b30f:	jo     0x14001b37a
   14001b311:	outs   dx,BYTE PTR ds:[rsi]
   14001b312:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14001b314:	movsxd ebp,DWORD PTR [rbx+0x40]
   14001b317:	rex xor DWORD PTR [rsi+0x41],ecx
   14001b31b:	add    BYTE PTR [rdi],bh
   14001b31d:	jae    0x14001b38c
   14001b31f:	pop    rdi
   14001b320:	fs (bad) 
   14001b322:	ins    BYTE PTR es:[rdi],dx
   14001b323:	rex.R
   14001b324:	data16 ins BYTE PTR es:[rdi],dx
   14001b326:	je     0x14001b37b
   14001b328:	jo     0x14001b393
   14001b32a:	outs   dx,BYTE PTR ds:[rsi]
   14001b32b:	rex.B
   14001b32c:	fs push 0x46
   14001b32f:	movsxd esi,DWORD PTR [rdx+rsi*2+0x40]
   14001b333:	rex.XB push r11
   14001b335:	jo     0x14001b3a0
   14001b337:	outs   dx,BYTE PTR ds:[rsi]
   14001b338:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14001b33a:	movsxd ebp,DWORD PTR [rbx+0x40]
   14001b33d:	rex xor DWORD PTR [rsi+0x41],ecx
   14001b341:	add    BYTE PTR [rdi],bh
   14001b343:	jae    0x14001b3b2
   14001b345:	pop    rdi
   14001b346:	ja     0x14001b38c
   14001b348:	gs data16 (bad) 
   14001b34b:	jne    0x14001b3b9
   14001b34d:	je     0x14001b3a2
   14001b34f:	jo     0x14001b3ba
   14001b351:	outs   dx,BYTE PTR ds:[rsi]
   14001b352:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14001b354:	jne    0x14001b3c4
   14001b356:	je     0x14001b398
   14001b358:	rex.XB
   14001b359:	rex.XB jb 0x14001b3c5
   14001b35c:	je     0x14001b3b1
   14001b35e:	movsxd eax,DWORD PTR gs:[rax+0x40]
   14001b362:	xor    DWORD PTR [rdi+0x41],eax
   14001b365:	add    BYTE PTR [rdi],bh
   14001b367:	jae    0x14001b3d6
   14001b369:	pop    rdi
   14001b36a:	ja     0x14001b3b0
   14001b36c:	gs data16 (bad) 
   14001b36f:	jne    0x14001b3dd
   14001b371:	je     0x14001b3c6
   14001b373:	jo     0x14001b3de
   14001b375:	outs   dx,BYTE PTR ds:[rsi]
   14001b376:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14001b378:	jne    0x14001b3e8
   14001b37a:	je     0x14001b3bc
   14001b37c:	rex.XB
   14001b37d:	rex.RX (bad) 
   14001b37f:	imul   esp,DWORD PTR [rbp+0x4c],0x6f
   14001b383:	movsxd ebp,DWORD PTR [rbx+0x40]
   14001b386:	rex xor DWORD PTR [rdi+0x41],eax
   14001b38a:	add    BYTE PTR [rdi],bh
   14001b38c:	jae    0x14001b3fb
   14001b38e:	pop    rdi
   14001b38f:	ja     0x14001b3d5
   14001b391:	gs data16 (bad) 
   14001b394:	jne    0x14001b402
   14001b396:	je     0x14001b3eb
   14001b398:	jo     0x14001b403
   14001b39a:	outs   dx,BYTE PTR ds:[rsi]
   14001b39b:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14001b39d:	jne    0x14001b40d
   14001b39f:	je     0x14001b3e1
   14001b3a1:	rex.XB push r10
   14001b3a3:	gs (bad) 
   14001b3a5:	fs gs jb 0x14001b400
   14001b3a9:	jb     0x14001b414
   14001b3ab:	je     0x14001b412
   14001b3ad:	jb     0x14001b3fb
   14001b3af:	outs   dx,DWORD PTR ds:[rsi]
   14001b3b0:	movsxd ebp,DWORD PTR [rbx+0x32]
   14001b3b3:	rex
   14001b3b4:	rex xor DWORD PTR [rdi+0x41],eax
   14001b3b8:	add    BYTE PTR [rdi],bh
   14001b3ba:	jae    0x14001b429
   14001b3bc:	pop    rdi
   14001b3bd:	ja     0x14001b403
   14001b3bf:	gs data16 (bad) 
   14001b3c2:	jne    0x14001b430
   14001b3c4:	je     0x14001b419
   14001b3c6:	jo     0x14001b431
   14001b3c8:	outs   dx,BYTE PTR ds:[rsi]
   14001b3c9:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14001b3cb:	jne    0x14001b43b
   14001b3cd:	je     0x14001b40f
   14001b3cf:	rex.XB push r10
   14001b3d1:	gs (bad) 
   14001b3d3:	fs gs jb 0x14001b42e
   14001b3d7:	jb     0x14001b442
   14001b3d9:	je     0x14001b440
   14001b3db:	jb     0x14001b429
   14001b3dd:	outs   dx,DWORD PTR ds:[rsi]
   14001b3de:	movsxd ebp,DWORD PTR [rbx+0x33]
   14001b3e1:	rex
   14001b3e2:	rex xor DWORD PTR [rdi+0x41],eax
   14001b3e6:	add    BYTE PTR [rdi],bh
   14001b3e8:	jae    0x14001b457
   14001b3ea:	pop    rdi
   14001b3eb:	ja     0x14001b431
   14001b3ed:	gs data16 (bad) 
   14001b3f0:	jne    0x14001b45e
   14001b3f2:	je     0x14001b447
   14001b3f4:	jo     0x14001b45f
   14001b3f6:	outs   dx,BYTE PTR ds:[rsi]
   14001b3f7:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14001b3f9:	jne    0x14001b469
   14001b3fb:	je     0x14001b43d
   14001b3fd:	rex.XB push r10
   14001b3ff:	gs (bad) 
   14001b401:	fs gs jb 0x14001b45c
   14001b405:	jb     0x14001b470
   14001b407:	je     0x14001b46e
   14001b409:	jb     0x14001b457
   14001b40b:	outs   dx,DWORD PTR ds:[rsi]
   14001b40c:	movsxd ebp,DWORD PTR [rbx+0x40]
   14001b40f:	rex xor DWORD PTR [rdi+0x41],eax
   14001b413:	add    BYTE PTR [rdi],bh
   14001b415:	jae    0x14001b484
   14001b417:	pop    rdi
   14001b418:	ja     0x14001b45e
   14001b41a:	gs data16 (bad) 
   14001b41d:	jne    0x14001b48b
   14001b41f:	je     0x14001b474
   14001b421:	jo     0x14001b48c
   14001b423:	outs   dx,BYTE PTR ds:[rsi]
   14001b424:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14001b426:	jne    0x14001b496
   14001b428:	je     0x14001b46a
   14001b42a:	rex.XB push r10
   14001b42c:	je     0x14001b49a
   14001b42e:	push   rdx
   14001b42f:	gs jae 0x14001b4a1
   14001b432:	jne    0x14001b4a6
   14001b434:	movsxd esp,DWORD PTR [rbp+0x40]
   14001b437:	rex xor DWORD PTR [rdi+0x41],eax
   14001b43b:	add    BYTE PTR [rdi],bh
   14001b43d:	jae    0x14001b4ac
   14001b43f:	pop    rdi
   14001b440:	ja     0x14001b486
   14001b442:	gs data16 (bad) 
   14001b445:	jne    0x14001b4b3
   14001b447:	je     0x14001b49c
   14001b449:	jo     0x14001b4b4
   14001b44b:	outs   dx,BYTE PTR ds:[rsi]
   14001b44c:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14001b44e:	jne    0x14001b4be
   14001b450:	je     0x14001b492
   14001b452:	rex.XB push r11
   14001b454:	push   0x4c657261
   14001b459:	outs   dx,DWORD PTR ds:[rsi]
   14001b45a:	movsxd ebp,DWORD PTR [rbx+0x40]
   14001b45d:	rex xor DWORD PTR [rdi+0x41],eax
   14001b461:	add    BYTE PTR [rdi],bh
   14001b463:	jae    0x14001b4d2
   14001b465:	pop    rdi
   14001b466:	ja     0x14001b4ac
   14001b468:	gs data16 (bad) 
   14001b46b:	jne    0x14001b4d9
   14001b46d:	je     0x14001b4c2
   14001b46f:	jo     0x14001b4da
   14001b471:	outs   dx,BYTE PTR ds:[rsi]
   14001b472:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14001b474:	jne    0x14001b4e4
   14001b476:	je     0x14001b4b8
   14001b478:	rex.XB push r11
   14001b47a:	ins    DWORD PTR es:[rdi],dx
   14001b47b:	(bad)  
   14001b47c:	ins    BYTE PTR es:[rdi],dx
   14001b47d:	ins    BYTE PTR es:[rdi],dx
   14001b47e:	push   rbx
   14001b47f:	jo     0x14001b4ea
   14001b481:	outs   dx,BYTE PTR ds:[rsi]
   14001b482:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14001b484:	movsxd ebp,DWORD PTR [rbx+0x40]
   14001b487:	rex xor DWORD PTR [rdi+0x41],eax
   14001b48b:	add    BYTE PTR [rdi],bh
   14001b48d:	jae    0x14001b4fc
   14001b48f:	pop    rdi
   14001b490:	ja     0x14001b4d6
   14001b492:	gs data16 (bad) 
   14001b495:	jne    0x14001b503
   14001b497:	je     0x14001b4ec
   14001b499:	jo     0x14001b504
   14001b49b:	outs   dx,BYTE PTR ds:[rsi]
   14001b49c:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14001b49e:	jne    0x14001b50e
   14001b4a0:	je     0x14001b4e2
   14001b4a2:	rex.XB push r11
   14001b4a4:	jo     0x14001b50f
   14001b4a6:	outs   dx,BYTE PTR ds:[rsi]
   14001b4a7:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14001b4a9:	movsxd ebp,DWORD PTR [rbx+0x40]
   14001b4ac:	rex xor DWORD PTR [rdi+0x41],eax
   14001b4b0:	add    BYTE PTR [rax],al
   14001b4b2:	add    BYTE PTR [rax],al
   14001b4b4:	and    BYTE PTR [rdi+0x1],dh
   14001b4ba:	add    BYTE PTR [rax],al
   14001b4bc:	add    BYTE PTR [rax],al
   14001b4be:	add    BYTE PTR [rax],al
   14001b4c0:	cmp    bh,BYTE PTR [rdx+0x23900001]
   14001b4c6:	add    DWORD PTR [rax],eax
   14001b4c8:	mov    bpl,0x1
	...
   14001b4d3:	add    ah,dl
   14001b4d5:	mov    esp,0x21b00001
   14001b4da:	add    DWORD PTR [rax],eax
   14001b4dc:	test   al,0xb8
   14001b4de:	add    DWORD PTR [rax],eax
	...
   14001b4e8:	sbb    bh,BYTE PTR [rbp+0x25180001]
   14001b4ee:	add    DWORD PTR [rax],eax
   14001b4f0:	fdiv   DWORD PTR [rsi+0x1]
   14001b4f6:	add    BYTE PTR [rax],al
   14001b4f8:	add    BYTE PTR [rax],al
   14001b4fa:	add    BYTE PTR [rax],al
   14001b4fc:	and    al,0xbd
   14001b4fe:	add    DWORD PTR [rax],eax
   14001b500:	and    rax,QWORD PTR [rcx]
   14001b503:	add    BYTE PTR [rax],dl
   14001b505:	mov    bh,0x1
	...
   14001b50f:	add    BYTE PTR [rbp+rdi*4+0x1],cl
   14001b513:	add    BYTE PTR [rax+0x123],al
   14001b519:	mov    bh,0x1
	...
   14001b523:	add    BYTE PTR [rdx+0x700001bf],al
   14001b529:	and    eax,DWORD PTR [rcx]
	...
   14001b53f:	add    BYTE PTR [rsp+rdi*4],ah
   14001b542:	add    DWORD PTR [rax],eax
   14001b544:	add    BYTE PTR [rax],al
   14001b546:	add    BYTE PTR [rax],al
   14001b548:	(bad)  
   14001b549:	mov    edi,0x1
   14001b54e:	add    BYTE PTR [rax],al
   14001b550:	rex.RX mov edi,0x1
   14001b556:	add    BYTE PTR [rax],al
   14001b558:	sub    bh,BYTE PTR [rdi+0x1]
   14001b55e:	add    BYTE PTR [rax],al
   14001b560:	adc    al,0xbf
   14001b562:	add    DWORD PTR [rax],eax
   14001b564:	add    BYTE PTR [rax],al
   14001b566:	add    BYTE PTR [rax],al
   14001b568:	or     BYTE PTR [rdi+0x1],bh
   14001b56e:	add    BYTE PTR [rax],al
   14001b570:	cld    
   14001b571:	mov    esi,0x1
   14001b576:	add    BYTE PTR [rax],al
   14001b578:	(bad)  
   14001b579:	mov    esi,0x1
   14001b57e:	add    BYTE PTR [rax],al
   14001b580:	fdivr  QWORD PTR [rsi+0x1]
   14001b586:	add    BYTE PTR [rax],al
   14001b588:	enter  0x1be,0x0
   14001b58c:	add    BYTE PTR [rax],al
   14001b58e:	add    BYTE PTR [rax],al
   14001b590:	mov    dh,0xbe
   14001b592:	add    DWORD PTR [rax],eax
   14001b594:	add    BYTE PTR [rax],al
   14001b596:	add    BYTE PTR [rax],al
   14001b598:	movabs al,ds:0x8a000000000001be
   14001b5a1:	mov    esi,0x1
   14001b5a6:	add    BYTE PTR [rax],al
   14001b5a8:	jl     0x14001b568
   14001b5aa:	add    DWORD PTR [rax],eax
   14001b5ac:	add    BYTE PTR [rax],al
   14001b5ae:	add    BYTE PTR [rax],al
   14001b5b0:	push   0x1be
   14001b5b5:	add    BYTE PTR [rax],al
   14001b5b7:	add    BYTE PTR [rdx-0x42],dl
   14001b5ba:	add    DWORD PTR [rax],eax
   14001b5bc:	add    BYTE PTR [rax],al
   14001b5be:	add    BYTE PTR [rax],al
   14001b5c0:	cmp    al,0xbe
   14001b5c2:	add    DWORD PTR [rax],eax
   14001b5c4:	add    BYTE PTR [rax],al
   14001b5c6:	add    BYTE PTR [rax],al
   14001b5c8:	cs mov esi,0x1
   14001b5ce:	add    BYTE PTR [rax],al
   14001b5d0:	(bad)  
   14001b5d1:	mov    esi,0x1
   14001b5d6:	add    BYTE PTR [rax],al
   14001b5d8:	idiv   BYTE PTR [rbp+0x1]
   14001b5de:	add    BYTE PTR [rax],al
   14001b5e0:	sar    BYTE PTR [rcx+rax*1+0x0],0x0
   14001b5e8:	lods   al,BYTE PTR ds:[rsi]
   14001b5e9:	mov    esp,0x1
   14001b5ee:	add    BYTE PTR [rax],al
   14001b5f0:	nop
   14001b5f1:	mov    esp,0x1
   14001b5f6:	add    BYTE PTR [rax],al
   14001b5f8:	jl     0x14001b5b6
   14001b5fa:	add    DWORD PTR [rax],eax
   14001b5fc:	add    BYTE PTR [rax],al
   14001b5fe:	add    BYTE PTR [rax],al
   14001b600:	(bad)  
   14001b601:	mov    esp,0x1
   14001b606:	add    BYTE PTR [rax],al
   14001b608:	rex.WRX movabs rsp,0xbc3e000000000001
   14001b612:	add    DWORD PTR [rax],eax
   14001b614:	add    BYTE PTR [rax],al
   14001b616:	add    BYTE PTR [rax],al
   14001b618:	(bad)  
   14001b619:	mov    esp,0x1
   14001b61e:	add    BYTE PTR [rax],al
   14001b620:	hlt    
   14001b621:	mov    ebx,0x1
   14001b626:	add    BYTE PTR [rax],al
   14001b628:	loopne 0x14001b5e5
   14001b62a:	add    DWORD PTR [rax],eax
   14001b62c:	add    BYTE PTR [rax],al
   14001b62e:	add    BYTE PTR [rax],al
   14001b630:	ret    0x1bb
   14001b633:	add    BYTE PTR [rax],al
   14001b635:	add    BYTE PTR [rax],al
   14001b637:	add    BYTE PTR [rdx+0x1bb],bh
   14001b63d:	add    BYTE PTR [rax],al
   14001b63f:	add    BYTE PTR [rdx+0x1bb],ch
   14001b645:	add    BYTE PTR [rax],al
   14001b647:	add    BYTE PTR [rbx+rdi*4+0x1],bl
   14001b64e:	add    BYTE PTR [rax],al
   14001b650:	mov    bh,BYTE PTR [rbx+0x1]
   14001b656:	add    BYTE PTR [rax],al
   14001b658:	jp     0x14001b615
   14001b65a:	add    DWORD PTR [rax],eax
   14001b65c:	add    BYTE PTR [rax],al
   14001b65e:	add    BYTE PTR [rax],al
   14001b660:	pop    rdx
   14001b661:	mov    edx,0x1
   14001b666:	add    BYTE PTR [rax],al
   14001b668:	push   0xffffffffffffffba
   14001b66a:	add    DWORD PTR [rax],eax
   14001b66c:	add    BYTE PTR [rax],al
   14001b66e:	add    BYTE PTR [rax],al
   14001b670:	(bad)  
   14001b671:	mov    edx,0x1
   14001b676:	add    BYTE PTR [rax],al
   14001b678:	(bad)  
   14001b679:	mov    edx,0x1
   14001b67e:	add    BYTE PTR [rax],al
   14001b680:	mov    dh,0xba
   14001b682:	add    DWORD PTR [rax],eax
   14001b684:	add    BYTE PTR [rax],al
   14001b686:	add    BYTE PTR [rax],al
   14001b688:	int3   
   14001b689:	mov    edx,0x1
   14001b68e:	add    BYTE PTR [rax],al
   14001b690:	fdivr  QWORD PTR [rdx+0x1]
   14001b696:	add    BYTE PTR [rax],al
   14001b698:	hlt    
   14001b699:	mov    edx,0x1
   14001b69e:	add    BYTE PTR [rax],al
   14001b6a0:	(bad)  
   14001b6a1:	mov    ebx,0x1
   14001b6a6:	add    BYTE PTR [rax],al
   14001b6a8:	adc    bh,BYTE PTR [rbx+0x1]
   14001b6ae:	add    BYTE PTR [rax],al
   14001b6b0:	sub    BYTE PTR [rbx+0x1],bh
   14001b6b6:	add    BYTE PTR [rax],al
   14001b6b8:	ds mov ebx,0x1
   14001b6be:	add    BYTE PTR [rax],al
   14001b6c0:	push   rsp
   14001b6c1:	mov    ebx,0x1
   14001b6c6:	add    BYTE PTR [rax],al
   14001b6c8:	fs mov ebx,0x1
	...
   14001b6d6:	add    BYTE PTR [rax],al
   14001b6d8:	or     BYTE PTR [rax],al
   14001b6da:	add    BYTE PTR [rax],al
   14001b6dc:	add    BYTE PTR [rax],al
   14001b6de:	add    BYTE PTR [rax+0x6],al
   14001b6e4:	add    BYTE PTR [rax],al
   14001b6e6:	add    BYTE PTR [rax+0x9],al
   14001b6ec:	add    BYTE PTR [rax],al
   14001b6ee:	add    BYTE PTR [rax+0x2],al
   14001b6f4:	add    BYTE PTR [rax],al
   14001b6f6:	add    BYTE PTR [rax+0x0],al
   14001b6fc:	add    BYTE PTR [rax],al
   14001b6fe:	add    BYTE PTR [rax],al
   14001b700:	je     0x14001b6c1
   14001b702:	add    DWORD PTR [rax],eax
	...
   14001b710:	xor    bh,BYTE PTR [rbp+0x1]
	...
   14001b71e:	add    BYTE PTR [rax],al
   14001b720:	enter  0x1b8,0x0
   14001b724:	add    BYTE PTR [rax],al
   14001b726:	add    BYTE PTR [rax],al
   14001b728:	add    BYTE PTR [rdx+0x1],bh
   14001b72e:	add    BYTE PTR [rax],al
   14001b730:	in     al,dx
   14001b731:	mov    ecx,0x1
   14001b736:	add    BYTE PTR [rax],al
   14001b738:	loop   0x14001b6f3
   14001b73a:	add    DWORD PTR [rax],eax
   14001b73c:	add    BYTE PTR [rax],al
   14001b73e:	add    BYTE PTR [rax],al
   14001b740:	fidivr DWORD PTR [rcx+0x1]
   14001b746:	add    BYTE PTR [rax],al
   14001b748:	or     al,0xba
   14001b74a:	add    DWORD PTR [rax],eax
   14001b74c:	add    BYTE PTR [rax],al
   14001b74e:	add    BYTE PTR [rax],al
   14001b750:	sar    BYTE PTR [rcx+0x1],0x0
   14001b757:	add    BYTE PTR [rsi+0x1b9],ch
   14001b75d:	add    BYTE PTR [rax],al
   14001b75f:	add    BYTE PTR [rax+0x1b9],ah
   14001b765:	add    BYTE PTR [rax],al
   14001b767:	add    BYTE PTR [rsi+0x1bf],ch
   14001b76d:	add    BYTE PTR [rax],al
   14001b76f:	add    BYTE PTR [rdi+rdi*4+0x1],ah
   14001b776:	add    BYTE PTR [rax],al
   14001b778:	mov    ?,WORD PTR [rdi+0x1]
   14001b77e:	add    BYTE PTR [rax],al
   14001b780:	and    al,0xba
   14001b782:	add    DWORD PTR [rax],eax
   14001b784:	add    BYTE PTR [rax],al
   14001b786:	add    BYTE PTR [rax],al
   14001b788:	cs mov edx,0x1
   14001b78e:	add    BYTE PTR [rax],al
   14001b790:	rex.RX mov edx,0x1
   14001b796:	add    BYTE PTR [rax],al
   14001b798:	sar    BYTE PTR [rcx+0x1],cl
   14001b79e:	add    BYTE PTR [rax],al
   14001b7a0:	pop    rax
   14001b7a1:	mov    ebp,0x1
   14001b7a6:	add    BYTE PTR [rax],al
   14001b7a8:	mov    bp,0x1
   14001b7ac:	add    BYTE PTR [rax],al
   14001b7ae:	add    BYTE PTR [rax],al
   14001b7b0:	jb     0x14001b76f
   14001b7b2:	add    DWORD PTR [rax],eax
   14001b7b4:	add    BYTE PTR [rax],al
   14001b7b6:	add    BYTE PTR [rax],al
   14001b7b8:	jl     0x14001b777
   14001b7ba:	add    DWORD PTR [rax],eax
   14001b7bc:	add    BYTE PTR [rax],al
   14001b7be:	add    BYTE PTR [rax],al
   14001b7c0:	mov    BYTE PTR [rbp+0x1],bh
   14001b7c6:	add    BYTE PTR [rax],al
   14001b7c8:	xchg   edx,eax
   14001b7c9:	mov    ebp,0x1
   14001b7ce:	add    BYTE PTR [rax],al
   14001b7d0:	sahf   
   14001b7d1:	mov    ebp,0x1
   14001b7d6:	add    BYTE PTR [rax],al
   14001b7d8:	test   al,0xbd
   14001b7da:	add    DWORD PTR [rax],eax
   14001b7dc:	add    BYTE PTR [rax],al
   14001b7de:	add    BYTE PTR [rax],al
   14001b7e0:	mov    ah,0xbd
   14001b7e2:	add    DWORD PTR [rax],eax
   14001b7e4:	add    BYTE PTR [rax],al
   14001b7e6:	add    BYTE PTR [rax],al
   14001b7e8:	sar    BYTE PTR [rbp+0x1],0x0
   14001b7ef:	add    al,dl
   14001b7f1:	mov    ebp,0x1
   14001b7f6:	add    BYTE PTR [rax],al
   14001b7f8:	fidivr WORD PTR [rbp+0x1]
   14001b7fe:	add    BYTE PTR [rax],al
   14001b800:	xchg   edx,eax
   14001b801:	mov    ecx,0x1
   14001b806:	add    BYTE PTR [rax],al
   14001b808:	xchg   BYTE PTR [rcx+0x1],bh
   14001b80e:	add    BYTE PTR [rax],al
   14001b810:	jl     0x14001b7cb
   14001b812:	add    DWORD PTR [rax],eax
   14001b814:	add    BYTE PTR [rax],al
   14001b816:	add    BYTE PTR [rax],al
   14001b818:	je     0x14001b7d3
   14001b81a:	add    DWORD PTR [rax],eax
   14001b81c:	add    BYTE PTR [rax],al
   14001b81e:	add    BYTE PTR [rax],al
   14001b820:	push   0xffffffffffffffb9
   14001b822:	add    DWORD PTR [rax],eax
   14001b824:	add    BYTE PTR [rax],al
   14001b826:	add    BYTE PTR [rax],al
   14001b828:	(bad)  
   14001b829:	mov    ecx,0x1
   14001b82e:	add    BYTE PTR [rax],al
   14001b830:	pop    rax
   14001b831:	mov    ecx,0x1
   14001b836:	add    BYTE PTR [rax],al
   14001b838:	rex.WRX movabs rcx,0xb946000000000001
   14001b842:	add    DWORD PTR [rax],eax
   14001b844:	add    BYTE PTR [rax],al
   14001b846:	add    BYTE PTR [rax],al
   14001b848:	cmp    al,0xb9
   14001b84a:	add    DWORD PTR [rax],eax
   14001b84c:	add    BYTE PTR [rax],al
   14001b84e:	add    BYTE PTR [rax],al
   14001b850:	xor    bh,BYTE PTR [rcx+0x1]
   14001b856:	add    BYTE PTR [rax],al
   14001b858:	sub    bh,BYTE PTR [rcx+0x1]
   14001b85e:	add    BYTE PTR [rax],al
   14001b860:	sbb    al,0xb9
   14001b862:	add    DWORD PTR [rax],eax
   14001b864:	add    BYTE PTR [rax],al
   14001b866:	add    BYTE PTR [rax],al
   14001b868:	(bad)  
   14001b869:	mov    ecx,0x1
   14001b86e:	add    BYTE PTR [rax],al
   14001b870:	add    bh,BYTE PTR [rcx+0x1]
   14001b876:	add    BYTE PTR [rax],al
   14001b878:	hlt    
   14001b879:	mov    eax,0x1
   14001b87e:	add    BYTE PTR [rax],al
   14001b880:	(bad)  
   14001b881:	mov    eax,0x1
   14001b886:	add    BYTE PTR [rax],al
   14001b888:	fidivr WORD PTR [rax+0x1]
   14001b88e:	add    BYTE PTR [rax],al
   14001b890:	sar    BYTE PTR [rax+0x1],cl
   14001b896:	add    BYTE PTR [rax],al
   14001b898:	mov    eax,0x1bf
	...
   14001b8a5:	add    BYTE PTR [rax],al
   14001b8a7:	add    ah,dh
   14001b8a9:	mov    esp,0x1
   14001b8ae:	add    BYTE PTR [rax],al
   14001b8b0:	loop   0x14001b86e
   14001b8b2:	add    DWORD PTR [rax],eax
   14001b8b4:	add    BYTE PTR [rax],al
   14001b8b6:	add    BYTE PTR [rax],al
   14001b8b8:	(bad)  
   14001b8b9:	mov    ebp,0x1
	...
   14001b8c6:	add    BYTE PTR [rax],al
   14001b8c8:	(bad)  
   14001b8c9:	add    eax,0x6e736377
   14001b8ce:	ins    BYTE PTR es:[rdi],dx
   14001b8cf:	outs   dx,BYTE PTR gs:[rsi]
   14001b8d1:	add    BYTE PTR [rdx+0x63775f03],cl
   14001b8d7:	jae    0x14001b942
   14001b8d9:	movsxd ebp,DWORD PTR [rbp+0x70]
   14001b8dc:	add    BYTE PTR [rax],al
   14001b8de:	cli    
   14001b8df:	add    bl,BYTE PTR [rdi+0x73]
   14001b8e2:	je     0x14001b956
   14001b8e4:	imul   esp,DWORD PTR [rbx+0x6d],0xd0000070
   14001b8eb:	add    al,0x73
   14001b8ed:	je     0x14001b961
   14001b8ef:	outs   dx,BYTE PTR ds:[rsi]
   14001b8f0:	ins    BYTE PTR es:[rdi],dx
   14001b8f1:	outs   dx,BYTE PTR gs:[rsi]
   14001b8f3:	add    BYTE PTR [rcx+0x3],ch
   14001b8f6:	pop    rdi
   14001b8f7:	jbe    0x14001b96c
   14001b8f9:	outs   dx,BYTE PTR ds:[rsi]
   14001b8fa:	ja     0x14001b96c
   14001b8fc:	jb     0x14001b967
   14001b8fe:	outs   dx,BYTE PTR ds:[rsi]
   14001b8ff:	je     0x14001b967
   14001b901:	add    BYTE PTR [rbp+0x4],dl
   14001b904:	data16 ja 0x14001b977
   14001b907:	jb     0x14001b972
   14001b909:	outs   dx,BYTE PTR ds:[rsi]
   14001b90a:	je     0x14001b972
   14001b90c:	add    BYTE PTR [rax],al
   14001b90e:	(bad)  
   14001b90f:	add    ebx,DWORD PTR [rdi+0x77]
   14001b912:	jae    0x14001b979
   14001b914:	je     0x14001b982
   14001b916:	outs   dx,DWORD PTR ds:[rsi]
   14001b917:	movsxd esp,DWORD PTR [rcx+0x6c]
   14001b91a:	gs add ah,bl
   14001b91d:	add    al,0x73
   14001b91f:	ja     0x14001b991
   14001b921:	jb     0x14001b98c
   14001b923:	outs   dx,BYTE PTR ds:[rsi]
   14001b924:	je     0x14001b98c
   14001b926:	pop    rdi
   14001b927:	jae    0x14001b929
   14001b929:	add    BYTE PTR [rdx],ch
   14001b92b:	add    al,0x63
   14001b92d:	ins    BYTE PTR es:[rdi],dx
   14001b92e:	outs   dx,DWORD PTR ds:[rsi]
   14001b92f:	movsxd ebp,DWORD PTR [rbx+0x0]
   14001b932:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001b933:	add    ebx,DWORD PTR [rdi+0x77]
   14001b936:	movsxd esi,DWORD PTR [rbx+0x75]
   14001b939:	jo     0x14001b9ad
   14001b93b:	add    BYTE PTR [rax*1+0x73736377],dl
   14001b942:	je     0x14001b9b6
   14001b944:	add    BYTE PTR [rax],al
   14001b946:	(bad)  
   14001b947:	add    al,0x66
   14001b949:	outs   dx,DWORD PTR gs:[rsi]
   14001b94b:	data16 add BYTE PTR [rax],al
   14001b94e:	cmp    BYTE PTR [rsi+riz*2],al
   14001b951:	gs jb  0x14001b9c6
   14001b954:	outs   dx,DWORD PTR ds:[rsi]
   14001b955:	jb     0x14001b957
   14001b957:	add    BYTE PTR [rdi+0x4],dl
   14001b95a:	data16 ja 0x14001b9cf
   14001b95d:	imul   esi,DWORD PTR [rbp+riz*2+0x0],0x66044b00
   14001b965:	jb     0x14001b9cc
   14001b967:	(bad)  
   14001b968:	add    BYTE PTR fs:[rsi],dh
   14001b96b:	add    al,0x66
   14001b96d:	movsxd ebp,DWORD PTR [rdi+rbp*2+0x73]
   14001b971:	add    BYTE PTR gs:[rax],al
   14001b974:	rex.WR add al,0x66
   14001b977:	jb     0x14001b9de
   14001b979:	add    BYTE PTR gs:[rax],al
   14001b97c:	xchg   BYTE PTR [rbp*2+0x6f6c6c61],al
   14001b983:	movsxd eax,DWORD PTR [rax]
   14001b985:	add    BYTE PTR [rdi+0x61635f00],bh
   14001b98b:	ins    BYTE PTR es:[rdi],dx
   14001b98c:	ins    BYTE PTR es:[rdi],dx
   14001b98d:	outs   dx,BYTE PTR ds:[rsi]
   14001b98e:	gs ja  0x14001b9f9
   14001b991:	add    BYTE PTR [rbp+0x0],dl
   14001b994:	pop    rdi
   14001b995:	pop    rax
   14001b996:	movsxd esi,DWORD PTR [rax+0x74]
   14001b999:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0xae0072
   14001b9a2:	pop    rdi
   14001b9a3:	(bad)  
   14001b9a4:	ins    DWORD PTR es:[rdi],dx
   14001b9a5:	jae    0x14001ba0e
   14001b9a7:	pop    rdi
   14001b9a8:	gs js  0x14001ba14
   14001b9ab:	je     0x14001b9ad
   14001b9ad:	add    BYTE PTR [rbp+0x775f5f00],bl
   14001b9b3:	addr32 gs je 0x14001ba24
   14001b9b7:	(bad)  
   14001b9b8:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
   14001b9bf:	add    BYTE PTR [rsi+0x735f5f00],cl
   14001b9c5:	gs je  0x14001ba27
   14001b9c8:	(bad)  
   14001b9c9:	jo     0x14001ba3b
   14001b9cb:	pop    rdi
   14001b9cc:	je     0x14001ba47
   14001b9ce:	jo     0x14001ba35
   14001b9d0:	add    BYTE PTR [rax],al
   14001b9d2:	xor    al,BYTE PTR [riz*2+0x746978]
   14001b9d9:	add    BYTE PTR [rsi],cl
   14001b9db:	add    DWORD PTR [rdi+0x65],ebx
   14001b9de:	js     0x14001ba49
   14001b9e0:	je     0x14001b9e2
   14001b9e2:	rol    DWORD PTR [rax],0x5f
   14001b9e5:	movsxd esp,DWORD PTR [rbp+0x78]
   14001b9e8:	imul   esi,DWORD PTR [rax+rax*1+0x0],0x5f5f0090
   14001b9f0:	jae    0x14001ba57
   14001b9f2:	je     0x14001ba69
   14001b9f4:	jae    0x14001ba5b
   14001b9f6:	jb     0x14001ba65
   14001b9f8:	(bad)  
   14001b9f9:	je     0x14001ba63
   14001b9fb:	gs jb  0x14001ba70
   14001b9fe:	add    BYTE PTR [rax],al
   14001ba00:	jge    0x14001ba03
   14001ba02:	pop    rdi
   14001ba03:	imul   ebp,DWORD PTR [rsi+0x69],0x72657474
   14001ba0a:	ins    DWORD PTR es:[rdi],dx
   14001ba0b:	add    BYTE PTR [rdi+0x0],dl
   14001ba0e:	pop    rdi
   14001ba0f:	pop    rdi
   14001ba10:	rex.XB pop r15
   14001ba12:	jae    0x14001ba84
   14001ba14:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
   14001ba18:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
   14001ba1f:	ins    BYTE PTR es:[rdi],dx
   14001ba20:	gs jb  0x14001ba23
   14001ba23:	add    BYTE PTR [rdi],ah
   14001ba25:	add    DWORD PTR [rdi+0x66],ebx
   14001ba28:	ins    DWORD PTR es:[rdi],dx
   14001ba29:	outs   dx,DWORD PTR ds:[rsi]
   14001ba2a:	fs add BYTE PTR gs:[rax],al
   14001ba2e:	rol    BYTE PTR [rax],cl
   14001ba30:	pop    rdi
   14001ba31:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14001ba34:	ins    DWORD PTR es:[rdi],dx
   14001ba35:	outs   dx,DWORD PTR ds:[rsi]
   14001ba36:	fs add BYTE PTR gs:[rax],al
   14001ba3a:	ins    DWORD PTR es:[rdi],dx
   14001ba3b:	jae    0x14001bab3
   14001ba3d:	movsxd esi,DWORD PTR [rdx+0x74]
   14001ba40:	cs fs ins BYTE PTR es:[rdi],dx
   14001ba43:	ins    BYTE PTR es:[rdi],dx
   14001ba44:	add    BYTE PTR [rax],al
   14001ba46:	(bad)  
   14001ba47:	add    BYTE PTR [rdi],bh
   14001ba49:	je     0x14001bab0
   14001ba4b:	jb     0x14001baba
   14001ba4d:	imul   ebp,DWORD PTR [rsi+0x61],0x40406574
   14001ba54:	pop    rcx
   14001ba55:	pop    r8
   14001ba57:	pop    rax
   14001ba58:	pop    rdx
   14001ba59:	add    BYTE PTR [rsi],ch
   14001ba5b:	add    eax,0x4c746553
   14001ba60:	(bad)  
   14001ba61:	jae    0x14001bad7
   14001ba63:	rex.RB jb 0x14001bad8
   14001ba66:	outs   dx,DWORD PTR ds:[rsi]
   14001ba67:	jb     0x14001ba69
   14001ba69:	add    BYTE PTR [rcx],dh
   14001ba6b:	add    DWORD PTR [rbp+0x6e],eax
   14001ba6e:	je     0x14001bad5
   14001ba70:	jb     0x14001bab5
   14001ba72:	jb     0x14001badd
   14001ba74:	je     0x14001badf
   14001ba76:	movsxd esp,DWORD PTR [rcx+0x6c]
   14001ba79:	push   rbx
   14001ba7a:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14001ba7f:	outs   dx,BYTE PTR ds:[rsi]
   14001ba80:	add    BYTE PTR [rax],al
   14001ba82:	mov    bl,0x3
   14001ba84:	rex.WR
   14001ba85:	gs (bad) 
   14001ba87:	jbe    0x14001baee
   14001ba89:	rex.XB jb 0x14001baf5
   14001ba8c:	je     0x14001baf7
   14001ba8e:	movsxd esp,DWORD PTR [rcx+0x6c]
   14001ba91:	push   rbx
   14001ba92:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14001ba97:	outs   dx,BYTE PTR ds:[rsi]
   14001ba98:	add    BYTE PTR [rax],al
   14001ba9a:	pop    rsp
   14001ba9b:	add    ecx,DWORD PTR [rcx+0x6e]
   14001ba9e:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   14001baa6:	rex.XB jb 0x14001bb12
   14001baa9:	je     0x14001bb14
   14001baab:	movsxd esp,DWORD PTR [rcx+0x6c]
   14001baae:	push   rbx
   14001baaf:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14001bab4:	outs   dx,BYTE PTR ds:[rsi]
   14001bab5:	add    BYTE PTR [rip+0x74654702],bl        # 0x1b46701bd
   14001babb:	rex.XB jne 0x14001bb30
   14001babe:	jb     0x14001bb25
   14001bac0:	outs   dx,BYTE PTR ds:[rsi]
   14001bac1:	je     0x14001bb17
   14001bac3:	push   0x64616572
   14001bac8:	rex.WB
   14001bac9:	add    BYTE PTR fs:[rax],al
   14001bacc:	pop    rdi
   14001bacd:	add    al,BYTE PTR [rdi+0x65]
   14001bad0:	je     0x14001bb1e
   14001bad2:	(bad)  
   14001bad3:	jae    0x14001bb49
   14001bad5:	rex.RB jb 0x14001bb4a
   14001bad8:	outs   dx,DWORD PTR ds:[rsi]
   14001bad9:	jb     0x14001badb
   14001badb:	add    BYTE PTR [rip+0x6c654401],cl        # 0x1ac66fee2
   14001bae1:	gs je  0x14001bb49
   14001bae4:	rex.XB jb 0x14001bb50
   14001bae7:	je     0x14001bb52
   14001bae9:	movsxd esp,DWORD PTR [rcx+0x6c]
   14001baec:	push   rbx
   14001baed:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14001baf2:	outs   dx,BYTE PTR ds:[rsi]
   14001baf3:	add    BYTE PTR [rax+0x726f4601],ch
   14001baf9:	ins    DWORD PTR es:[rdi],dx
   14001bafa:	(bad)  
   14001bafb:	je     0x14001bb4a
   14001bafd:	gs jae 0x14001bb73
   14001bb00:	(bad)  
   14001bb01:	addr32 gs push rdi
   14001bb04:	add    BYTE PTR [rax],al
   14001bb06:	(bad)
   14001bb0a:	movsxd esp,DWORD PTR [rcx+0x6c]
   14001bb0d:	rex.RX jb 0x14001bb75
   14001bb10:	add    BYTE PTR gs:[rcx],al
   14001bb13:	add    al,BYTE PTR [rdi+0x65]
   14001bb16:	je     0x14001bb5b
   14001bb18:	outs   dx,DWORD PTR ds:[rsi]
   14001bb19:	outs   dx,BYTE PTR ds:[rsi]
   14001bb1a:	jae    0x14001bb8b
   14001bb1c:	ins    BYTE PTR es:[rdi],dx
   14001bb1d:	gs rex.WRXB jne 0x14001bb95
   14001bb21:	jo     0x14001bb98
   14001bb23:	je     0x14001bb68
   14001bb25:	push   rax
   14001bb26:	add    BYTE PTR [rax],al
   14001bb28:	pop    rsi
   14001bb29:	add    eax,0x54746553
   14001bb2e:	push   0x64616572
   14001bb33:	push   rbp
   14001bb34:	rex.WB
   14001bb35:	rex.WR (bad) 
   14001bb37:	outs   dx,BYTE PTR ds:[rsi]
   14001bb38:	addr32 jne 0x14001bb9c
   14001bb3b:	add    BYTE PTR gs:[ebx+eax*1+0x48],cl
   14001bb41:	gs (bad) 
   14001bb43:	jo     0x14001bb98
   14001bb45:	gs je  0x14001bb91
   14001bb48:	outs   dx,BYTE PTR ds:[rsi]
   14001bb49:	outs   dx,WORD PTR ds:[rsi]
   14001bb4b:	jb     0x14001bbba
   14001bb4d:	(bad)  
   14001bb4e:	je     0x14001bbb9
   14001bb50:	outs   dx,DWORD PTR ds:[rsi]
   14001bb51:	outs   dx,BYTE PTR ds:[rsi]
   14001bb52:	add    BYTE PTR [rax],al
   14001bb54:	mov    edx,0x616f4c03
   14001bb59:	imul   r12,QWORD PTR fs:[rdx+0x72],0x57797261
   14001bb62:	add    BYTE PTR [rax],al
   14001bb64:	jne    0x14001bb68
   14001bb66:	rex.RXB
   14001bb67:	gs je  0x14001bbb7
   14001bb6a:	outs   dx,DWORD PTR ds:[rsi]
   14001bb6b:	fs jne 0x14001bbda
   14001bb6e:	gs rex.W (bad) 
   14001bb71:	outs   dx,BYTE PTR ds:[rsi]
   14001bb72:	fs ins BYTE PTR es:[rdi],dx
   14001bb74:	gs rex.RB js 0x14001bbcf
   14001bb78:	add    BYTE PTR [rax],al
   14001bb7a:	sub    eax,0x636e4501
   14001bb7f:	outs   dx,DWORD PTR ds:[rsi]
   14001bb80:	fs gs push rax
   14001bb83:	outs   dx,DWORD PTR ds:[rsi]
   14001bb84:	imul   ebp,DWORD PTR [rsi+0x74],0xad007265
   14001bb8b:	add    al,BYTE PTR [rdi+0x65]
   14001bb8e:	je     0x14001bbe0
   14001bb90:	jb     0x14001bc01
   14001bb92:	movsxd eax,DWORD PTR [rcx+0x64]
   14001bb95:	fs jb  0x14001bbfd
   14001bb98:	jae    0x14001bc0d
   14001bb9a:	add    BYTE PTR [rax],al
   14001bb9c:	lods   al,BYTE PTR ds:[rsi]
   14001bb9d:	add    DWORD PTR [rsi+0x72],eax
   14001bba0:	gs imul r12,QWORD PTR gs:[rdx+0x72],0x797261
   14001bbaa:	(bad)  
   14001bbab:	add    DWORD PTR [rbp+riz*2+0x63],eax
   14001bbaf:	outs   dx,DWORD PTR ds:[rsi]
   14001bbb0:	fs gs push rax
   14001bbb3:	outs   dx,DWORD PTR ds:[rsi]
   14001bbb4:	imul   ebp,DWORD PTR [rsi+0x74],0x78007265
   14001bbbb:	add    eax,0x65656c53
   14001bbc0:	jo     0x14001bbc2
   14001bbc2:	imul   eax,DWORD PTR [rip+0x55746553],0x6e61686e        # 0x19576211f
   14001bbcc:	fs ins BYTE PTR es:[rdi],dx
   14001bbce:	gs fs rex.RB js 0x14001bc36
   14001bbd3:	gs jo  0x14001bc4a
   14001bbd6:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   14001bbdd:	gs jb  0x14001bbe0
   14001bbe0:	jbe    0x14001bbe4
   14001bbe2:	rex.RXB
   14001bbe3:	gs je  0x14001bc33
   14001bbe6:	outs   dx,DWORD PTR ds:[rsi]
   14001bbe7:	fs jne 0x14001bc56
   14001bbea:	gs rex.W (bad) 
   14001bbed:	outs   dx,BYTE PTR ds:[rsi]
   14001bbee:	fs ins BYTE PTR es:[rdi],dx
   14001bbf0:	gs push rdi
   14001bbf2:	add    BYTE PTR [rax],al
   14001bbf4:	rex.B add al,0x51
   14001bbf7:	jne    0x14001bc5e
   14001bbf9:	jb     0x14001bc74
   14001bbfb:	push   rax
   14001bbfc:	gs jb  0x14001bc65
   14001bbff:	outs   dx,DWORD PTR ds:[rsi]
   14001bc00:	jb     0x14001bc6f
   14001bc02:	(bad)  
   14001bc03:	outs   dx,BYTE PTR ds:[rsi]
   14001bc04:	movsxd esp,DWORD PTR [rbp+0x43]
   14001bc07:	outs   dx,DWORD PTR ds:[rsi]
   14001bc08:	jne    0x14001bc78
   14001bc0a:	je     0x14001bc71
   14001bc0c:	jb     0x14001bc0e
   14001bc0e:	sbb    DWORD PTR [rdx],eax
   14001bc10:	rex.RXB
   14001bc11:	gs je  0x14001bc57
   14001bc14:	jne    0x14001bc88
   14001bc16:	jb     0x14001bc7d
   14001bc18:	outs   dx,BYTE PTR ds:[rsi]
   14001bc19:	je     0x14001bc6b
   14001bc1b:	jb     0x14001bc8c
   14001bc1d:	movsxd esp,DWORD PTR [rbp+0x73]
   14001bc20:	jae    0x14001bc6b
   14001bc22:	fs add al,ch
   14001bc25:	add    al,BYTE PTR [rdi+0x65]
   14001bc28:	je     0x14001bc7d
   14001bc2a:	jns    0x14001bc9f
   14001bc2c:	je     0x14001bc93
   14001bc2e:	ins    DWORD PTR es:[rdi],dx
   14001bc2f:	push   rsp
   14001bc30:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
   14001bc37:	ins    BYTE PTR es:[rdi],dx
   14001bc38:	gs push rsp
   14001bc3a:	imul   ebp,DWORD PTR [rbp+0x65],0x47030500
   14001bc41:	gs je  0x14001bc98
   14001bc44:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
   14001bc4b:	je     0x14001bc4d
   14001bc4d:	add    dl,al
   14001bc4f:	add    al,0x52
   14001bc51:	je     0x14001bcbf
   14001bc53:	rex.XB (bad) 
   14001bc55:	jo     0x14001bccb
   14001bc57:	jne    0x14001bccb
   14001bc59:	rex.XB outs dx,DWORD PTR gs:[rsi]
   14001bc5c:	outs   dx,BYTE PTR ds:[rsi]
   14001bc5d:	je     0x14001bcc4
   14001bc5f:	js     0x14001bcd5
   14001bc61:	add    cl,cl
   14001bc63:	add    al,0x52
   14001bc65:	je     0x14001bcd3
   14001bc67:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14001bc69:	outs   dx,DWORD PTR ds:[rsi]
   14001bc6a:	imul   esi,DWORD PTR [rbp+0x70],0x46
   14001bc6e:	jne    0x14001bcde
   14001bc70:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   14001bc74:	outs   dx,BYTE PTR ds:[rsi]
   14001bc75:	rex.RB outs dx,BYTE PTR ds:[rsi]
   14001bc77:	je     0x14001bceb
   14001bc79:	jns    0x14001bc7b
   14001bc7b:	add    al,dl
   14001bc7d:	add    al,0x52
   14001bc7f:	je     0x14001bced
   14001bc81:	push   rsi
   14001bc82:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
   14001bc89:	outs   dx,BYTE PTR ds:[rsi]
   14001bc8a:	ja     0x14001bcf5
   14001bc8c:	outs   dx,BYTE PTR ds:[rsi]
   14001bc8d:	add    BYTE PTR fs:[rax],al
   14001bc90:	test   eax,0x686e5505
   14001bc95:	(bad)  
   14001bc96:	outs   dx,BYTE PTR ds:[rsi]
   14001bc97:	fs ins BYTE PTR es:[rdi],dx
   14001bc99:	gs fs rex.RB js 0x14001bd01
   14001bc9e:	gs jo  0x14001bd15
   14001bca1:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   14001bca8:	gs jb  0x14001bcab
   14001bcab:	add    BYTE PTR [rax],bl
   14001bcad:	add    al,BYTE PTR [rdi+0x65]
   14001bcb0:	je     0x14001bcf5
   14001bcb2:	jne    0x14001bd26
   14001bcb4:	jb     0x14001bd1b
   14001bcb6:	outs   dx,BYTE PTR ds:[rsi]
   14001bcb7:	je     0x14001bd09
   14001bcb9:	jb     0x14001bd2a
   14001bcbb:	movsxd esp,DWORD PTR [rbp+0x73]
   14001bcbe:	jae    0x14001bcc0
   14001bcc0:	xchg   DWORD PTR [rip+0x6d726554],eax        # 0x1ad74221a
   14001bcc6:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
   14001bccd:	outs   dx,DWORD PTR ds:[rsi]
   14001bcce:	movsxd esp,DWORD PTR [rbp+0x73]
   14001bcd1:	jae    0x14001bcd3
   14001bcd3:	add    BYTE PTR [rbx+0x45],cl
   14001bcd6:	push   rdx
   14001bcd7:	rex.WRX
   14001bcd8:	rex.RB
   14001bcd9:	xor    r14,QWORD PTR [rdx]
   14001bcdc:	cs fs ins BYTE PTR es:[rdi],dx
   14001bcdf:	ins    BYTE PTR es:[rdi],dx
   14001bce0:	add    BYTE PTR [rax],al
   14001bce2:	(bad)  
   14001bce3:	add    BYTE PTR [rbx+0x6f],al
   14001bce6:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14001bce8:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   14001bcf0:	rex.RB js 0x14001bcf3
   14001bcf3:	add    BYTE PTR [rax+0x556f4300],dl
   14001bcf9:	outs   dx,BYTE PTR ds:[rsi]
   14001bcfa:	imul   ebp,DWORD PTR [rsi+0x69],0x6c616974
   14001bd01:	imul   edi,DWORD PTR [rdx+0x65],0x2b0000
   14001bd08:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14001bd0a:	rex.XB jb 0x14001bd72
   14001bd0d:	(bad)  
   14001bd0e:	je     0x14001bd75
   14001bd10:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14001bd12:	jae    0x14001bd88
   14001bd14:	(bad)  
   14001bd15:	outs   dx,BYTE PTR ds:[rsi]
   14001bd16:	movsxd esp,DWORD PTR [rbp+0x0]
   14001bd19:	add    BYTE PTR [rdi+0x6c],ch
   14001bd1c:	xor    esi,DWORD PTR gs:[rdx]
   14001bd1f:	cs fs ins BYTE PTR es:[rdi],dx
   14001bd22:	ins    BYTE PTR es:[rdi],dx
   14001bd23:	add    BYTE PTR [rdi+0x4c],cl
   14001bd26:	rex.RB
   14001bd27:	push   r13
   14001bd29:	push   rsp
   14001bd2a:	xor    esi,DWORD PTR [rdx]
   14001bd2c:	cs fs ins BYTE PTR es:[rdi],dx
   14001bd2f:	ins    BYTE PTR es:[rdi],dx
   14001bd30:	add    BYTE PTR [rax],al
   14001bd32:	rex.WRB add r8b,BYTE PTR [r11+0x72]
   14001bd36:	gs (bad) 
   14001bd38:	je     0x14001bd9f
   14001bd3a:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14001bd3c:	ins    DWORD PTR es:[rdi],dx
   14001bd3d:	ins    DWORD PTR es:[rdi],dx
   14001bd3e:	(bad)  
   14001bd3f:	outs   dx,BYTE PTR ds:[rsi]
   14001bd40:	fs push rax
   14001bd42:	jb     0x14001bdb3
   14001bd44:	movsxd esp,DWORD PTR [rbp+0x73]
   14001bd47:	jae    0x14001bdb8
   14001bd49:	jb     0x14001bd4b
   14001bd4b:	add    BYTE PTR [rcx+0x70],ah
   14001bd4e:	jo     0x14001bdbf
   14001bd50:	(bad)  
   14001bd51:	push   0x2e
   14001bd53:	fs ins BYTE PTR es:[rdi],dx
   14001bd55:	ins    BYTE PTR es:[rdi],dx
   14001bd56:	add    BYTE PTR [rax],al
   14001bd58:	add    DWORD PTR [rax],0x6f695f5f
   14001bd5e:	(bad)  
   14001bd5f:	pop    rdi
   14001bd60:	data16 jne 0x14001bdd1
   14001bd63:	movsxd eax,DWORD PTR [rax]
   14001bd65:	add    BYTE PTR [rcx+0x72707304],bh
   14001bd6b:	imul   ebp,DWORD PTR [rsi+0x74],0x735f66
   14001bd72:	rol    DWORD PTR [rbx+rsi*2],0x74
   14001bd76:	jb     0x14001bddb
   14001bd78:	push   0x7b000072
   14001bd7d:	add    al,0x69
   14001bd7f:	jae    0x14001bdf9
   14001bd81:	imul   esp,DWORD PTR fs:[rdi+0x69],0x94000074
   14001bd89:	add    al,0x6d
   14001bd8b:	gs ins DWORD PTR es:[rdi],dx
   14001bd8d:	ins    DWORD PTR es:[rdi],dx
   14001bd8e:	outs   dx,DWORD PTR ds:[rsi]
   14001bd8f:	jbe    0x14001bdf6
   14001bd91:	add    al,al
   14001bd93:	add    al,0x73
   14001bd95:	je     0x14001be09
   14001bd97:	movsxd esp,DWORD PTR [rcx+0x74]
   14001bd9a:	pop    rdi
   14001bd9b:	jae    0x14001bd9d
   14001bd9d:	add    BYTE PTR [rcx],al
   14001bd9f:	add    eax,0x63736377
   14001bda4:	push   0x7a000072
   14001bda9:	add    al,0x69
   14001bdab:	jae    0x14001be24
   14001bdad:	js     0x14001be13
   14001bdaf:	imul   esp,DWORD PTR [rdi+0x69],0x46e0074
   14001bdb6:	imul   esi,DWORD PTR [rbx+0x77],0x756e6c61
   14001bdbd:	ins    DWORD PTR es:[rdi],dx
   14001bdbe:	add    BYTE PTR [rax],al
   14001bdc0:	imul   eax,DWORD PTR [rbx],0x5f
   14001bdc3:	jbe    0x14001be38
   14001bdc5:	outs   dx,BYTE PTR ds:[rsi]
   14001bdc6:	ja     0x14001be38
   14001bdc8:	jb     0x14001be33
   14001bdca:	outs   dx,BYTE PTR ds:[rsi]
   14001bdcb:	je     0x14001be33
   14001bdcd:	pop    rdi
   14001bdce:	jae    0x14001bdd0
   14001bdd0:	(bad)  
   14001bdd1:	add    ebx,DWORD PTR [rdi+0x76]
   14001bdd4:	jae    0x14001be39
   14001bdd6:	ja     0x14001be48
   14001bdd8:	jb     0x14001be43
   14001bdda:	outs   dx,BYTE PTR ds:[rsi]
   14001bddb:	je     0x14001be43
   14001bddd:	add    BYTE PTR [rdx],dl
   14001bddf:	add    BYTE PTR [rdi],bh
   14001bde1:	(bad)  
   14001bde2:	xor    DWORD PTR [rcx+rdi*2+0x70],esi
   14001bde6:	gs pop rdi
   14001bde8:	imul   ebp,DWORD PTR [rsi+0x66],0x5540406f
   14001bdef:	rex.RB
   14001bdf0:	rex.B
   14001bdf1:	rex.B
   14001bdf2:	rex pop rax
   14001bdf4:	pop    rdx
   14001bdf5:	add    BYTE PTR [rbp+0x3],bl
   14001bdf8:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14001bdfa:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   14001be02:	rex.XB jb 0x14001be6e
   14001be05:	je     0x14001be70
   14001be07:	movsxd esp,DWORD PTR [rcx+0x6c]
   14001be0a:	push   rbx
   14001be0b:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14001be10:	outs   dx,BYTE PTR ds:[rsi]
   14001be11:	rex.B outs dx,BYTE PTR ds:[rsi]
   14001be13:	fs push rbx
   14001be15:	jo     0x14001be80
   14001be17:	outs   dx,BYTE PTR ds:[rsi]
   14001be18:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14001be1a:	jne    0x14001be8a
   14001be1c:	je     0x14001be1e
   14001be1e:	loop   0x14001be22
   14001be20:	rex.RXB
   14001be21:	gs je  0x14001be77
   14001be24:	jns    0x14001be99
   14001be26:	je     0x14001be8d
   14001be28:	ins    DWORD PTR es:[rdi],dx
   14001be29:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14001be2b:	outs   dx,WORD PTR ds:[rsi]
   14001be2d:	add    BYTE PTR [rbx],al
   14001be2f:	add    DWORD PTR [rbp+riz*2+0x62],eax
   14001be33:	jne    0x14001be9c
   14001be35:	rex.X jb 0x14001be9d
   14001be38:	(bad)  
   14001be39:	imul   eax,DWORD PTR [rax],0x0
   14001be3c:	out    0x0,eax
   14001be3e:	rex.XB jb 0x14001bea6
   14001be41:	(bad)  
   14001be42:	je     0x14001bea9
   14001be44:	push   rbx
   14001be45:	gs ins DWORD PTR es:[rdi],dx
   14001be47:	(bad)  
   14001be48:	jo     0x14001beb2
   14001be4a:	outs   dx,DWORD PTR ds:[rsi]
   14001be4b:	jb     0x14001beb2
   14001be4d:	rex.RB js 0x14001bea7
   14001be50:	add    BYTE PTR [rax],al
   14001be52:	rol    DWORD PTR [rip+0x74696157],cl        # 0x1b46b1faf
   14001be58:	rex.RX outs dx,DWORD PTR ds:[rsi]
   14001be5a:	jb     0x14001beaf
   14001be5c:	imul   ebp,DWORD PTR [rsi+0x67],0x624f656c
   14001be63:	push   0x65
   14001be65:	movsxd esi,DWORD PTR [rax+rax*1-0x58]
   14001be69:	add    al,0x52
   14001be6b:	gs ins BYTE PTR es:[rdi],dx
   14001be6d:	gs (bad) 
   14001be6f:	jae    0x14001bed6
   14001be71:	push   rbx
   14001be72:	gs ins DWORD PTR es:[rdi],dx
   14001be74:	(bad)  
   14001be75:	jo     0x14001bedf
   14001be77:	outs   dx,DWORD PTR ds:[rsi]
   14001be78:	jb     0x14001bedf
   14001be7a:	add    BYTE PTR [rax],al
   14001be7c:	test   BYTE PTR [rax],al
   14001be7e:	rex.XB ins BYTE PTR es:[rdi],dx
   14001be80:	outs   dx,DWORD PTR ds:[rsi]
   14001be81:	jae    0x14001bee8
   14001be83:	rex.W (bad) 
   14001be85:	outs   dx,BYTE PTR ds:[rsi]
   14001be86:	fs ins BYTE PTR es:[rdi],dx
   14001be88:	add    BYTE PTR gs:[rsp+rax*1],cl
   14001be8c:	rex.WRXB jne 0x14001bf03
   14001be8f:	jo     0x14001bf06
   14001be91:	je     0x14001bed7
   14001be93:	gs (bad) 
   14001be95:	jne    0x14001befe
   14001be97:	push   rbx
   14001be98:	je     0x14001bf0c
   14001be9a:	imul   ebp,DWORD PTR [rsi+0x67],0xf7000041
   14001bea1:	add    eax,0x65646957
   14001bea6:	rex.XB push 0x6f547261
   14001beac:	rex.WRB jne 0x14001bf1b
   14001beaf:	je     0x14001bf1a
   14001beb1:	rex.X jns 0x14001bf28
   14001beb4:	add    BYTE PTR gs:[rdi+0x726f4601],ah
   14001bebb:	ins    DWORD PTR es:[rdi],dx
   14001bebc:	(bad)  
   14001bebd:	je     0x14001bf0c
   14001bebf:	gs jae 0x14001bf35
   14001bec2:	(bad)  
   14001bec3:	add    BYTE PTR gs:[r8d],al
   14001bec8:	jae    0x14001becc
   14001beca:	rex.RXB
   14001becb:	gs je  0x14001bf1b
   14001bece:	outs   dx,DWORD PTR ds:[rsi]
   14001becf:	fs jne 0x14001bf3e
   14001bed2:	gs rex.W (bad) 
   14001bed5:	outs   dx,BYTE PTR ds:[rsi]
   14001bed6:	fs ins BYTE PTR es:[rdi],dx
   14001bed8:	add    BYTE PTR gs:[r8],al
   14001bedc:	rex.WXB add rcx,QWORD PTR [r8+0x65]
   14001bee0:	(bad)  
   14001bee1:	jo     0x14001bf35
   14001bee3:	gs rex.B ins BYTE PTR es:[rdi],dx
   14001bee6:	ins    BYTE PTR es:[rdi],dx
   14001bee7:	outs   dx,DWORD PTR ds:[rsi]
   14001bee8:	movsxd eax,DWORD PTR [rax]
   14001beea:	mov    bl,0x2
   14001beec:	rex.RXB
   14001beed:	gs je  0x14001bf40
   14001bef0:	jb     0x14001bf61
   14001bef2:	movsxd esp,DWORD PTR [rbp+0x73]
   14001bef5:	jae    0x14001bf3f
   14001bef7:	gs (bad) 
   14001bef9:	jo     0x14001befb
   14001befb:	add    BYTE PTR [rbx+rax*1+0x48],al
   14001beff:	gs (bad) 
   14001bf01:	jo     0x14001bf44
   14001bf03:	ins    BYTE PTR es:[rdi],dx
   14001bf04:	ins    BYTE PTR es:[rdi],dx
   14001bf05:	outs   dx,DWORD PTR ds:[rsi]
   14001bf06:	movsxd eax,DWORD PTR [rax]
   14001bf08:	add    rcx,QWORD PTR [rax+0x65]
   14001bf0c:	(bad)  
   14001bf0d:	jo     0x14001bf55
   14001bf0f:	jb     0x14001bf76
   14001bf11:	add    BYTE PTR gs:[rax],al
   14001bf14:	jrcxz  0x14001bf19
   14001bf16:	rex.WRB jne 0x14001bf85
   14001bf19:	je     0x14001bf84
   14001bf1b:	rex.X jns 0x14001bf92
   14001bf1e:	gs push rsp
   14001bf20:	outs   dx,DWORD PTR ds:[rsi]
   14001bf21:	push   rdi
   14001bf22:	imul   esp,DWORD PTR [rbp+riz*2+0x43],0x726168
   14001bf2a:	movsxd eax,DWORD PTR [rcx]
   14001bf2c:	rex.RB js 0x14001bf9f
   14001bf2f:	(bad)  
   14001bf30:	outs   dx,BYTE PTR ds:[rsi]
   14001bf31:	rex.RB outs dx,BYTE PTR fs:[rsi]
   14001bf34:	jbe    0x14001bf9f
   14001bf36:	jb     0x14001bfa7
   14001bf38:	outs   dx,BYTE PTR ds:[rsi]
   14001bf39:	ins    DWORD PTR es:[rdi],dx
   14001bf3a:	outs   dx,BYTE PTR gs:[rsi]
   14001bf3c:	je     0x14001bf91
   14001bf3e:	je     0x14001bfb2
   14001bf40:	imul   ebp,DWORD PTR [rsi+0x67],0xdb005773
   14001bf47:	add    al,BYTE PTR [rdi+0x65]
   14001bf4a:	je     0x14001bf9f
   14001bf4c:	jns    0x14001bfc1
   14001bf4e:	je     0x14001bfb5
   14001bf50:	ins    DWORD PTR es:[rdi],dx
   14001bf51:	rex.R
   14001bf52:	gs data16 (bad) 
   14001bf55:	jne    0x14001bfc3
   14001bf57:	je     0x14001bfa5
   14001bf59:	(bad)  
   14001bf5a:	outs   dx,BYTE PTR ds:[rsi]
   14001bf5b:	addr32 rex.WB
   14001bf5d:	add    BYTE PTR [rax],r8b
   14001bf60:	jbe    0x14001bf65
   14001bf62:	rex.WB jae 0x14001bfa9
   14001bf65:	rex.X
   14001bf66:	rex.XB push r11
   14001bf68:	rex.WR
   14001bf69:	gs (bad) 
   14001bf6b:	fs rex.X jns 0x14001bfe3
   14001bf6f:	gs rex.RB js 0x14001bf73
   14001bf73:	add    BYTE PTR [rdi+0x2],al
   14001bf76:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14001bf78:	(bad)  
   14001bf79:	fs push rbx
   14001bf7b:	je     0x14001bfef
   14001bf7d:	imul   ebp,DWORD PTR [rsi+0x67],0x53550041
   14001bf84:	rex.RB push r10
   14001bf86:	xor    esi,DWORD PTR [rdx]
   14001bf88:	cs fs ins BYTE PTR es:[rdi],dx
   14001bf8b:	ins    BYTE PTR es:[rdi],dx
   14001bf8c:	add    BYTE PTR [rax],al
   14001bf8e:	rex.WXB add BYTE PTR [r15+0x43],bl
   14001bf92:	js     0x14001c00c
   14001bf94:	push   rsp
   14001bf95:	push   0x45776f72
   14001bf9a:	js     0x14001bfff
   14001bf9c:	gs jo  0x14001c013
   14001bf9f:	imul   ebp,DWORD PTR [rdi+0x6e],0x4920000
   14001bfa6:	ins    DWORD PTR es:[rdi],dx
   14001bfa7:	gs ins DWORD PTR es:[rdi],dx
   14001bfa9:	movsxd esi,DWORD PTR [rax+0x79]
   14001bfac:	add    BYTE PTR [rax],al
   14001bfae:	xchg   esi,eax
   14001bfaf:	add    al,0x6d
   14001bfb1:	gs ins DWORD PTR es:[rdi],dx
   14001bfb3:	jae    0x14001c01a
   14001bfb5:	je     0x14001bfb7
   14001bfb7:	add    BYTE PTR [rdx],al
   14001bfb9:	add    eax,0x63736377
   14001bfbe:	ins    DWORD PTR es:[rdi],dx
   14001bfbf:	jo     0x14001bfc1
	...

Disassembly of section .data:

000000014001c000 <.data>:
   14001c000:	adc    BYTE PTR [rax],ah
   14001c002:	add    DWORD PTR [rax+0x1],eax
	...
   14001c00d:	add    BYTE PTR [rax],al
   14001c00f:	add    BYTE PTR [rsi],ch
   14001c011:	push   rax
   14001c012:	rex.RB
   14001c013:	pop    r8
   14001c015:	add    BYTE PTR [rax],al
   14001c017:	add    BYTE PTR [rax],dl
   14001c019:	and    BYTE PTR [rcx],al
   14001c01b:	rex add DWORD PTR [rax],eax
	...
   14001c026:	add    BYTE PTR [rax],al
   14001c028:	cs push rax
   14001c02a:	rex.RB
   14001c02b:	rex.B
   14001c02c:	rex.RXB add BYTE PTR [r8],r8b
   14001c02f:	add    BYTE PTR [rcx],al
   14001c031:	add    BYTE PTR [rax],al
   14001c033:	add    BYTE PTR [rax],al
   14001c035:	add    BYTE PTR [rax],al
   14001c037:	add    BYTE PTR [rdx],dh
   14001c039:	movabs ds:0x5dcd00002b992ddf,al
   14001c042:	and    dl,dl
   14001c044:	data16 (bad) 
   14001c046:	(bad)  
   14001c047:	inc    DWORD PTR [rax]
	...
   14001c055:	add    al,ah
   14001c057:	(bad)  
   14001c058:	add    BYTE PTR [rax],al
   14001c05a:	add    BYTE PTR [rax],al
   14001c05c:	add    BYTE PTR [rax],al
   14001c05e:	loopne 0x14001c09f
   14001c060:	movabs al,ds:0xa000000fa000000f
   14001c069:	sldt   WORD PTR [rax]
   14001c06c:	movabs al,ds:0xa000000fa000000f
   14001c075:	sldt   WORD PTR [rax]
   14001c078:	add    BYTE PTR [rax],al
   14001c07a:	add    BYTE PTR [rax],al
   14001c07c:	add    BYTE PTR [rax],al
   14001c07e:	loopne 0x14001c0bf
   14001c080:	add    BYTE PTR [rax],al
   14001c082:	add    BYTE PTR [rax],al
   14001c084:	add    BYTE PTR [rax],al
   14001c086:	loopne 0x14001c0c7
   14001c088:	movabs al,ds:0xf
   14001c091:	add    BYTE PTR [rax],al
   14001c093:	add    BYTE PTR [rax],al
   14001c095:	add    al,ah
   14001c097:	(bad)  
   14001c098:	add    BYTE PTR [rax],al
   14001c09a:	add    BYTE PTR [rax],al
   14001c09c:	add    BYTE PTR [rax],al
   14001c09e:	loopne 0x14001c0df
   14001c0a0:	movabs al,ds:0xf
   14001c0a9:	add    BYTE PTR [rax],al
   14001c0ab:	add    BYTE PTR [rax],al
   14001c0ad:	add    al,ah
   14001c0af:	(bad)  
   14001c0b0:	add    BYTE PTR [rax],al
   14001c0b2:	add    BYTE PTR [rax],al
   14001c0b4:	add    BYTE PTR [rax],al
   14001c0b6:	loopne 0x14001c0f7
   14001c0b8:	add    BYTE PTR [rax],al
   14001c0ba:	add    BYTE PTR [rax],al
   14001c0bc:	add    BYTE PTR [rax],al
   14001c0be:	loopne 0x14001c0ff
   14001c0c0:	movabs al,ds:0xf
	...

Disassembly of section .pdata:

000000014001d000 <.pdata>:
   14001d000:	add    BYTE PTR [rax],dl
   14001d002:	add    BYTE PTR [rax],al
   14001d004:	sbb    BYTE PTR [rax],dl
   14001d006:	add    BYTE PTR [rax],al
   14001d008:	push   rax
   14001d009:	cmp    eax,0x10900001
   14001d00e:	add    BYTE PTR [rax],al
   14001d010:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001d011:	adc    BYTE PTR [rax],al
   14001d013:	add    BYTE PTR [rax+0x3d],dl
   14001d016:	add    DWORD PTR [rax],eax
   14001d018:	add    BYTE PTR [rdx],dl
   14001d01a:	add    BYTE PTR [rax],al
   14001d01c:	sub    edx,DWORD PTR [rdx]
   14001d01e:	add    BYTE PTR [rax],al
   14001d020:	push   rax
   14001d021:	cmp    eax,0x12400001
   14001d026:	add    BYTE PTR [rax],al
   14001d028:	jb     0x14001d03c
   14001d02a:	add    BYTE PTR [rax],al
   14001d02c:	pop    rax
   14001d02d:	cmp    eax,0x12d00001
   14001d032:	add    BYTE PTR [rax],al
   14001d034:	add    BYTE PTR [rbx],dl
   14001d036:	add    BYTE PTR [rax],al
   14001d038:	push   rax
   14001d039:	cmp    eax,0x13100001
   14001d03e:	add    BYTE PTR [rax],al
   14001d040:	adc    rax,QWORD PTR [rax]
   14001d043:	add    BYTE PTR [rax+0x3d],ah
   14001d046:	add    DWORD PTR [rax],eax
   14001d048:	push   rax
   14001d049:	adc    eax,DWORD PTR [rax]
   14001d04b:	add    BYTE PTR [rbx+0x13],bh
   14001d04e:	add    BYTE PTR [rax],al
   14001d050:	(bad)  
   14001d051:	cmp    eax,0x13900001
   14001d056:	add    BYTE PTR [rax],al
   14001d058:	mov    esi,0x60000013
   14001d05d:	cmp    eax,0x13d00001
   14001d062:	add    BYTE PTR [rax],al
   14001d064:	cli    
   14001d065:	adc    eax,DWORD PTR [rax]
   14001d067:	add    BYTE PTR [rax+0x3d],ch
   14001d06a:	add    DWORD PTR [rax],eax
   14001d06c:	add    BYTE PTR [rax+rax*1],dl
   14001d06f:	add    BYTE PTR [rdi],bl
   14001d071:	adc    al,0x0
   14001d073:	add    BYTE PTR [rax+0x3d],ah
   14001d076:	add    DWORD PTR [rax],eax
   14001d078:	xor    BYTE PTR [rax+rax*1],dl
   14001d07b:	add    BYTE PTR [rdi+0x14],cl
   14001d07e:	add    BYTE PTR [rax],al
   14001d080:	(bad)  
   14001d081:	cmp    eax,0x14600001
   14001d086:	add    BYTE PTR [rax],al
   14001d088:	lea    edx,[rax+rax*1]
   14001d08b:	add    BYTE PTR [rax+0x3d],ah
   14001d08e:	add    DWORD PTR [rax],eax
   14001d090:	movabs al,ds:0x60000014cd000014
   14001d099:	cmp    eax,0x14e00001
   14001d09e:	add    BYTE PTR [rax],al
   14001d0a0:	(bad)  
   14001d0a1:	adc    eax,0x3d600000
   14001d0a6:	add    DWORD PTR [rax],eax
   14001d0a8:	and    BYTE PTR [rip+0x15450000],dl        # 0x15546d0ae
   14001d0ae:	add    BYTE PTR [rax],al
   14001d0b0:	(bad)  
   14001d0b1:	cmp    eax,0x15500001
   14001d0b6:	add    BYTE PTR [rax],al
   14001d0b8:	jno    0x14001d0cf
   14001d0ba:	add    BYTE PTR [rax],al
   14001d0bc:	(bad)  
   14001d0bd:	cmp    eax,0x15800001
   14001d0c2:	add    BYTE PTR [rax],al
   14001d0c4:	test   eax,0x60000015
   14001d0c9:	cmp    eax,0x15b00001
   14001d0ce:	add    BYTE PTR [rax],al
   14001d0d0:	fst    DWORD PTR [rip+0x3d600000]        # 0x17d61d0d6
   14001d0d6:	add    DWORD PTR [rax],eax
   14001d0d8:	loopne 0x14001d0ef
   14001d0da:	add    BYTE PTR [rax],al
   14001d0dc:	sti    
   14001d0dd:	adc    eax,0x3d600000
   14001d0e2:	add    DWORD PTR [rax],eax
   14001d0e4:	adc    BYTE PTR [rsi],dl
   14001d0e6:	add    BYTE PTR [rax],al
   14001d0e8:	sub    edx,DWORD PTR [rsi]
   14001d0ea:	add    BYTE PTR [rax],al
   14001d0ec:	(bad)  
   14001d0ed:	cmp    eax,0x16500001
   14001d0f2:	add    BYTE PTR [rax],al
   14001d0f4:	jns    0x14001d10c
   14001d0f6:	add    BYTE PTR [rax],al
   14001d0f8:	pop    rax
   14001d0f9:	cmp    eax,0x17200001
   14001d0fe:	add    BYTE PTR [rax],al
   14001d100:	push   rcx
   14001d101:	(bad)  
   14001d102:	add    BYTE PTR [rax],al
   14001d104:	pop    rax
   14001d105:	cmp    eax,0x17600001
   14001d10a:	add    BYTE PTR [rax],al
   14001d10c:	xchg   ebp,eax
   14001d10d:	(bad)  
   14001d10e:	add    BYTE PTR [rax],al
   14001d110:	pop    rax
   14001d111:	cmp    eax,0x17d00001
   14001d116:	add    BYTE PTR [rax],al
   14001d118:	or     eax,0x50000018
   14001d11d:	cmp    eax,0x18600001
   14001d122:	add    BYTE PTR [rax],al
   14001d124:	popf   
   14001d125:	sbb    BYTE PTR [rax],al
   14001d127:	add    BYTE PTR [rax+0x3d],dl
   14001d12a:	add    DWORD PTR [rax],eax
   14001d12c:	push   rax
   14001d12d:	sbb    al,BYTE PTR [rax]
   14001d12f:	add    BYTE PTR [rdx+0x5800001a],bh
   14001d135:	cmp    eax,0x1ac00001
   14001d13a:	add    BYTE PTR [rax],al
   14001d13c:	fistp  WORD PTR [rdx]
   14001d13e:	add    BYTE PTR [rax],al
   14001d140:	pop    rax
   14001d141:	cmp    eax,0x1bb00001
   14001d146:	add    BYTE PTR [rax],al
   14001d148:	ins    BYTE PTR es:[rdi],dx
   14001d149:	sbb    al,0x0
   14001d14b:	add    BYTE PTR [rax+0x3d],dh
   14001d14e:	add    DWORD PTR [rax],eax
   14001d150:	movabs al,ds:0x8c00001ce000001c
   14001d159:	cmp    eax,0x1cf00001
   14001d15e:	add    BYTE PTR [rax],al
   14001d160:	rex sbb eax,0x3d940000
   14001d166:	add    DWORD PTR [rax],eax
   14001d168:	push   rax
   14001d169:	sbb    eax,0x1d850000
   14001d16e:	add    BYTE PTR [rax],al
   14001d170:	pushf  
   14001d171:	cmp    eax,0x1d900001
   14001d176:	add    BYTE PTR [rax],al
   14001d178:	rcr    BYTE PTR [rip+0x3d9c0000],0x1        # 0x17d9dd17f
   14001d17f:	add    al,dl
   14001d181:	sbb    eax,0x1e180000
   14001d186:	add    BYTE PTR [rax],al
   14001d188:	pushf  
   14001d189:	cmp    eax,0x1e500001
   14001d18e:	add    BYTE PTR [rax],al
   14001d190:	sbb    DWORD PTR [rsi],0x0
   14001d193:	add    BYTE PTR [rbp+rdi*1+0x1eb00001],ah
   14001d19a:	add    BYTE PTR [rax],al
   14001d19c:	out    0x1e,al
   14001d19e:	add    BYTE PTR [rax],al
   14001d1a0:	pop    rax
   14001d1a1:	cmp    eax,0x1ef00001
   14001d1a6:	add    BYTE PTR [rax],al
   14001d1a8:	sbb    bl,BYTE PTR [rdi]
   14001d1aa:	add    BYTE PTR [rax],al
   14001d1ac:	pop    rax
   14001d1ad:	cmp    eax,0x1f300001
   14001d1b2:	add    BYTE PTR [rax],al
   14001d1b4:	rex.WR (bad) 
   14001d1b6:	add    BYTE PTR [rax],al
   14001d1b8:	pop    rax
   14001d1b9:	cmp    eax,0x20300001
   14001d1be:	add    BYTE PTR [rax],al
   14001d1c0:	rex.X and BYTE PTR [rax],al
   14001d1c3:	add    BYTE PTR [rax+0x3d],dl
   14001d1c6:	add    DWORD PTR [rax],eax
   14001d1c8:	push   rax
   14001d1c9:	and    BYTE PTR [rax],al
   14001d1cb:	add    BYTE PTR [rcx-0x5bffffe0],cl
   14001d1d1:	cmp    eax,0x20900001
   14001d1d6:	add    BYTE PTR [rax],al
   14001d1d8:	(bad)  
   14001d1d9:	and    BYTE PTR [rax],al
   14001d1db:	add    BYTE PTR [rax+0x3d],bl
   14001d1de:	add    DWORD PTR [rax],eax
   14001d1e0:	lock and BYTE PTR [rax],al
   14001d1e3:	add    BYTE PTR [rdx],dl
   14001d1e5:	and    DWORD PTR [rax],eax
   14001d1e7:	add    BYTE PTR [rax+0x3d],bl
   14001d1ea:	add    DWORD PTR [rax],eax
   14001d1ec:	and    BYTE PTR [rcx],ah
   14001d1ee:	add    BYTE PTR [rax],al
   14001d1f0:	and    DWORD PTR [rcx],0x3da40000
   14001d1f6:	add    DWORD PTR [rax],eax
   14001d1f8:	nop
   14001d1f9:	and    DWORD PTR [rax],eax
   14001d1fb:	add    BYTE PTR [rax+0x50000021],ah
   14001d201:	cmp    eax,0x21b00001
   14001d206:	add    BYTE PTR [rax],al
   14001d208:	loopne 0x14001d22b
   14001d20a:	add    BYTE PTR [rax],al
   14001d20c:	pop    rax
   14001d20d:	cmp    eax,0x21f00001
   14001d212:	add    BYTE PTR [rax],al
   14001d214:	(bad)  
   14001d215:	and    al,BYTE PTR [rax]
   14001d217:	add    BYTE PTR [rax+0x3d],bl
   14001d21a:	add    DWORD PTR [rax],eax
   14001d21c:	and    BYTE PTR [rbx],0x0
   14001d21f:	add    BYTE PTR [rdi+0x58000023],ch
   14001d225:	cmp    eax,0x23e00001
   14001d22a:	add    BYTE PTR [rax],al
   14001d22c:	icebp  
   14001d22d:	and    eax,DWORD PTR [rax]
   14001d22f:	add    BYTE PTR [rax+0x3d],dl
   14001d232:	add    DWORD PTR [rax],eax
   14001d234:	add    BYTE PTR [rax+rax*1],ah
   14001d237:	add    BYTE PTR [rbx],bl
   14001d239:	and    al,0x0
   14001d23b:	add    BYTE PTR [rax+0x3d],dl
   14001d23e:	add    DWORD PTR [rax],eax
   14001d240:	and    al,0x0
   14001d243:	add    BYTE PTR [rbx+0x24],bl
   14001d246:	add    BYTE PTR [rax],al
   14001d248:	push   rax
   14001d249:	cmp    eax,0x25400001
   14001d24e:	add    BYTE PTR [rax],al
   14001d250:	push   rdi
   14001d251:	and    eax,0x3d580000
   14001d256:	add    DWORD PTR [rax],eax
   14001d258:	(bad)  
   14001d259:	and    eax,0x25960000
   14001d25e:	add    BYTE PTR [rax],al
   14001d260:	pop    rax
   14001d261:	cmp    eax,0x26500001
   14001d266:	add    BYTE PTR [rax],al
   14001d268:	jle    0x14001d290
   14001d26a:	add    BYTE PTR [rax],al
   14001d26c:	pop    rax
   14001d26d:	cmp    eax,0x26b00001
   14001d272:	add    BYTE PTR [rax],al
   14001d274:	(bad)
   14001d277:	add    BYTE PTR [rax+0x3d],dl
   14001d27a:	add    DWORD PTR [rax],eax
   14001d27c:	shl    BYTE PTR [rsi],1
   14001d27e:	add    BYTE PTR [rax],al
   14001d280:	in     eax,0x26
   14001d282:	add    BYTE PTR [rax],al
   14001d284:	push   rax
   14001d285:	cmp    eax,0x27f00001
   14001d28a:	add    BYTE PTR [rax],al
   14001d28c:	movaps xmm0,XMMWORD PTR [rax]
   14001d28f:	add    BYTE PTR [rax+0x3d],dl
   14001d292:	add    DWORD PTR [rax],eax
   14001d294:	and    BYTE PTR [rax],ch
   14001d296:	add    BYTE PTR [rax],al
   14001d298:	rex.XB sub BYTE PTR [r8],al
   14001d29b:	add    BYTE PTR [rax+0x3d],dl
   14001d29e:	add    DWORD PTR [rax],eax
   14001d2a0:	push   rax
   14001d2a1:	sub    BYTE PTR [rax],al
   14001d2a3:	add    BYTE PTR [rsi+0x28],dh
   14001d2a6:	add    BYTE PTR [rax],al
   14001d2a8:	push   rax
   14001d2a9:	cmp    eax,0x28800001
   14001d2ae:	add    BYTE PTR [rax],al
   14001d2b0:	pushf  
   14001d2b1:	sub    BYTE PTR [rax],al
   14001d2b3:	add    BYTE PTR [rax+0x3d],dl
   14001d2b6:	add    DWORD PTR [rax],eax
   14001d2b8:	mov    al,0x28
   14001d2ba:	add    BYTE PTR [rax],al
   14001d2bc:	leave  
   14001d2bd:	sub    BYTE PTR [rax],al
   14001d2bf:	add    BYTE PTR [rax+0x3d],dl
   14001d2c2:	add    DWORD PTR [rax],eax
   14001d2c4:	shr    BYTE PTR [rax],1
   14001d2c6:	add    BYTE PTR [rax],al
   14001d2c8:	repnz sub BYTE PTR [rax],al
   14001d2cb:	add    BYTE PTR [rax+0x3d],bl
   14001d2ce:	add    DWORD PTR [rax],eax
   14001d2d0:	add    BYTE PTR [rcx],ch
   14001d2d2:	add    BYTE PTR [rax],al
   14001d2d4:	and    BYTE PTR [rcx],ch
   14001d2d6:	add    BYTE PTR [rax],al
   14001d2d8:	push   rax
   14001d2d9:	cmp    eax,0x29300001
   14001d2de:	add    BYTE PTR [rax],al
   14001d2e0:	push   rbx
   14001d2e1:	sub    DWORD PTR [rax],eax
   14001d2e3:	add    BYTE PTR [rax+0x3d],dl
   14001d2e6:	add    DWORD PTR [rax],eax
   14001d2e8:	(bad)  
   14001d2e9:	sub    DWORD PTR [rax],eax
   14001d2eb:	add    BYTE PTR [rsi-0x5bffffd7],bl
   14001d2f1:	cmp    eax,0x29b00001
   14001d2f6:	add    BYTE PTR [rax],al
   14001d2f8:	repnz sub DWORD PTR [rax],eax
   14001d2fb:	add    BYTE PTR [rbp+rdi*1+0x2a000001],ah
   14001d302:	add    BYTE PTR [rax],al
   14001d304:	sbb    al,0x2a
   14001d306:	add    BYTE PTR [rax],al
   14001d308:	push   rax
   14001d309:	cmp    eax,0x2bc00001
   14001d30e:	add    BYTE PTR [rax],al
   14001d310:	in     eax,0x2b
   14001d312:	add    BYTE PTR [rax],al
   14001d314:	push   rax
   14001d315:	cmp    eax,0x2bf00001
   14001d31a:	add    BYTE PTR [rax],al
   14001d31c:	and    BYTE PTR [rax+rax*1],ch
   14001d31f:	add    BYTE PTR [rax+0x3d],dl
   14001d322:	add    DWORD PTR [rax],eax
   14001d324:	loopne 0x14001d352
   14001d326:	add    BYTE PTR [rax],al
   14001d328:	(bad)  
   14001d329:	sub    eax,0x3d500000
   14001d32e:	add    DWORD PTR [rax],eax
   14001d330:	jo     0x14001d360
   14001d332:	add    BYTE PTR [rax],al
   14001d334:	movabs al,ds:0xb000013d5000002e
   14001d33d:	add    BYTE PTR cs:[rax],al
   14001d340:	fsubr  QWORD PTR [rsi]
   14001d342:	add    BYTE PTR [rax],al
   14001d344:	push   rax
   14001d345:	cmp    eax,0x30600001
   14001d34a:	add    BYTE PTR [rax],al
   14001d34c:	mov    bl,0x30
   14001d34e:	add    BYTE PTR [rax],al
   14001d350:	push   rax
   14001d351:	cmp    eax,0x31c00001
   14001d356:	add    BYTE PTR [rax],al
   14001d358:	sub    DWORD PTR [rdx],esi
   14001d35a:	add    BYTE PTR [rax],al
   14001d35c:	pop    rax
   14001d35d:	cmp    eax,0x32300001
   14001d362:	add    BYTE PTR [rax],al
   14001d364:	(bad)  
   14001d366:	add    BYTE PTR [rax],al
   14001d368:	pop    rax
   14001d369:	cmp    eax,0x32a00001
   14001d36e:	add    BYTE PTR [rax],al
   14001d370:	adc    dh,BYTE PTR [rbx]
   14001d372:	add    BYTE PTR [rax],al
   14001d374:	pop    rax
   14001d375:	cmp    eax,0x33200001
   14001d37a:	add    BYTE PTR [rax],al
   14001d37c:	rex.WRXB xor r8,QWORD PTR [r8]
   14001d37f:	add    BYTE PTR [rax+0x3d],dl
   14001d382:	add    DWORD PTR [rax],eax
   14001d384:	(bad)  
   14001d385:	xor    eax,DWORD PTR [rax]
   14001d387:	add    BYTE PTR [rdx+0x58000033],bh
   14001d38d:	cmp    eax,0x33c00001
   14001d392:	add    BYTE PTR [rax],al
   14001d394:	and    esi,DWORD PTR [rax+rax*1]
   14001d397:	add    BYTE PTR [rbp+rdi*1+0x34300001],ah
   14001d39e:	add    BYTE PTR [rax],al
   14001d3a0:	xchg   edi,eax
   14001d3a1:	xor    al,0x0
   14001d3a3:	add    BYTE PTR [rax+0x3d],bl
   14001d3a6:	add    DWORD PTR [rax],eax
   14001d3a8:	nop
   14001d3a9:	xor    eax,0x35b20000
   14001d3ae:	add    BYTE PTR [rax],al
   14001d3b0:	pop    rax
   14001d3b1:	cmp    eax,0x35c00001
   14001d3b6:	add    BYTE PTR [rax],al
   14001d3b8:	out    0x35,eax
   14001d3ba:	add    BYTE PTR [rax],al
   14001d3bc:	pop    rax
   14001d3bd:	cmp    eax,0x35f00001
   14001d3c2:	add    BYTE PTR [rax],al
   14001d3c4:	push   rax
   14001d3c5:	add    BYTE PTR ss:[rax],al
   14001d3c8:	pop    rax
   14001d3c9:	cmp    eax,0x36600001
   14001d3ce:	add    BYTE PTR [rax],al
   14001d3d0:	xchg   esi,eax
   14001d3d1:	add    BYTE PTR ss:[rax],al
   14001d3d4:	pop    rax
   14001d3d5:	cmp    eax,0x38b00001
   14001d3da:	add    BYTE PTR [rax],al
   14001d3dc:	loopne 0x14001d416
   14001d3de:	add    BYTE PTR [rax],al
   14001d3e0:	pop    rax
   14001d3e1:	cmp    eax,0x38f00001
   14001d3e6:	add    BYTE PTR [rax],al
   14001d3e8:	and    DWORD PTR [rcx],edi
   14001d3ea:	add    BYTE PTR [rax],al
   14001d3ec:	pop    rax
   14001d3ed:	cmp    eax,0x39500001
   14001d3f2:	add    BYTE PTR [rax],al
   14001d3f4:	jle    0x14001d42f
   14001d3f6:	add    BYTE PTR [rax],al
   14001d3f8:	(bad)  
   14001d3f9:	cmp    eax,0x39900001
   14001d3fe:	add    BYTE PTR [rax],al
   14001d400:	mov    ch,0x39
   14001d402:	add    BYTE PTR [rax],al
   14001d404:	(bad)  
   14001d405:	cmp    eax,0x39c00001
   14001d40a:	add    BYTE PTR [rax],al
   14001d40c:	call   0x1a001d44a
   14001d411:	cmp    eax,0x39f00001
   14001d416:	add    BYTE PTR [rax],al
   14001d418:	(bad)  
   14001d419:	cmp    al,BYTE PTR [rax]
   14001d41b:	add    BYTE PTR [rax+0x3d],ah
   14001d41e:	add    DWORD PTR [rax],eax
   14001d420:	and    BYTE PTR [rdx],bh
   14001d422:	add    BYTE PTR [rax],al
   14001d424:	(bad)  
   14001d425:	cmp    al,BYTE PTR [rax]
   14001d427:	add    BYTE PTR [rax+0x3d],ah
   14001d42a:	add    DWORD PTR [rax],eax
   14001d42c:	cmp    al,BYTE PTR [rax]
   14001d42f:	add    BYTE PTR [rdi+0x3a],dl
   14001d432:	add    BYTE PTR [rax],al
   14001d434:	(bad)  
   14001d435:	cmp    eax,0x3a600001
   14001d43a:	add    BYTE PTR [rax],al
   14001d43c:	ja     0x14001d478
   14001d43e:	add    BYTE PTR [rax],al
   14001d440:	(bad)  
   14001d441:	cmp    eax,0x3a800001
   14001d446:	add    BYTE PTR [rax],al
   14001d448:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001d449:	cmp    al,BYTE PTR [rax]
   14001d44b:	add    BYTE PTR [rax+0x3d],ah
   14001d44e:	add    DWORD PTR [rax],eax
   14001d450:	mov    al,0x3a
   14001d452:	add    BYTE PTR [rax],al
   14001d454:	loopne 0x14001d490
   14001d456:	add    BYTE PTR [rax],al
   14001d458:	(bad)  
   14001d459:	cmp    eax,0x3af00001
   14001d45e:	add    BYTE PTR [rax],al
   14001d460:	(bad)  
   14001d461:	cmp    eax,DWORD PTR [rax]
   14001d463:	add    BYTE PTR [rax+0x3d],ah
   14001d466:	add    DWORD PTR [rax],eax
   14001d468:	and    BYTE PTR [rbx],bh
   14001d46a:	add    BYTE PTR [rax],al
   14001d46c:	cmp    eax,DWORD PTR ds:[rax]
   14001d46f:	add    BYTE PTR [rax+0x3d],ah
   14001d472:	add    DWORD PTR [rax],eax
   14001d474:	push   rax
   14001d475:	cmp    eax,DWORD PTR [rax]
   14001d477:	add    BYTE PTR [rdi+0x3b],bh
   14001d47a:	add    BYTE PTR [rax],al
   14001d47c:	(bad)  
   14001d47d:	cmp    eax,0x3b900001
   14001d482:	add    BYTE PTR [rax],al
   14001d484:	mov    cl,0x3b
   14001d486:	add    BYTE PTR [rax],al
   14001d488:	(bad)  
   14001d489:	cmp    eax,0x3bc00001
   14001d48e:	add    BYTE PTR [rax],al
   14001d490:	in     eax,0x3b
   14001d492:	add    BYTE PTR [rax],al
   14001d494:	(bad)  
   14001d495:	cmp    eax,0x3bf00001
   14001d49a:	add    BYTE PTR [rax],al
   14001d49c:	adc    DWORD PTR [rax+rax*1],edi
   14001d49f:	add    BYTE PTR [rax+0x3d],ah
   14001d4a2:	add    DWORD PTR [rax],eax
   14001d4a4:	and    BYTE PTR [rax+rax*1],bh
   14001d4a7:	add    BYTE PTR [rax+0x3c],ah
   14001d4aa:	add    BYTE PTR [rax],al
   14001d4ac:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001d4ad:	cmp    eax,0x3cc00001
   14001d4b2:	add    BYTE PTR [rax],al
   14001d4b4:	out    0x3c,al
   14001d4b6:	add    BYTE PTR [rax],al
   14001d4b8:	pop    rax
   14001d4b9:	cmp    eax,0x3cf00001
   14001d4be:	add    BYTE PTR [rax],al
   14001d4c0:	and    BYTE PTR [rip+0x3d600000],bh        # 0x17d61d4c6
   14001d4c6:	add    DWORD PTR [rax],eax
   14001d4c8:	mov    esp,0x9b00003d
   14001d4cd:	add    BYTE PTR ds:[rax],al
   14001d4d0:	mov    al,0x3d
   14001d4d2:	add    DWORD PTR [rax],eax
   14001d4d4:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001d4d5:	add    BYTE PTR ds:[rax],al
   14001d4d8:	out    0x3e,eax
   14001d4da:	add    BYTE PTR [rax],al
   14001d4dc:	push   rax
   14001d4dd:	cmp    eax,0x3ef00001
   14001d4e2:	add    BYTE PTR [rax],al
   14001d4e4:	(bad)  
   14001d4e5:	(bad)  
   14001d4e6:	add    BYTE PTR [rax],al
   14001d4e8:	sar    BYTE PTR [rip+0x3fd40001],0x0        # 0x17fd5d4f0
   14001d4ef:	add    BYTE PTR [rip+0xffffffffd8000042],dl        # 0x11801d537
   14001d4f5:	cmp    eax,0x421c0001
   14001d4fa:	add    BYTE PTR [rax],al
   14001d4fc:	(bad)  
   14001d4fd:	add    BYTE PTR [rax],r8b
   14001d500:	cld    
   14001d501:	cmp    eax,0x44dc0001
   14001d506:	add    BYTE PTR [rax],al
   14001d508:	and    DWORD PTR [rax+rax*1+0x0],ecx
   14001d50c:	and    BYTE PTR [rsi],bh
   14001d50e:	add    DWORD PTR [rax],eax
   14001d510:	sub    BYTE PTR [rax+rax*1+0x0],cl
   14001d514:	(bad)  
   14001d515:	push   rax
   14001d516:	add    BYTE PTR [rax],al
   14001d518:	rex.R
   14001d519:	add    DWORD PTR ds:[rax],eax
   14001d51c:	push   0xffffffffd9000050
   14001d521:	push   rdx
   14001d522:	add    BYTE PTR [rax],al
   14001d524:	push   0xffffffffe000013e
   14001d529:	push   rdx
   14001d52a:	add    BYTE PTR [rax],al
   14001d52c:	enter  0x69,0x0
   14001d530:	cmp    BYTE PTR [rsi],0x1
   14001d533:	add    al,dl
   14001d535:	imul   eax,DWORD PTR [rax],0x6b0b00
   14001d53b:	add    BYTE PTR [rsi+rdi*1+0x6b200001],ah
   14001d542:	add    BYTE PTR [rax],al
   14001d544:	rex.WRXB imul r8,QWORD PTR [r8],0x0
   14001d548:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001d549:	cmp    eax,0x6b580001
   14001d54e:	add    BYTE PTR [rax],al
   14001d550:	(bad)  
   14001d551:	imul   eax,DWORD PTR [rax],0x0
   14001d554:	pop    rax
   14001d555:	cmp    eax,0x6bd00001
   14001d55a:	add    BYTE PTR [rax],al
   14001d55c:	jmp    FWORD PTR [rbx+0x0]
   14001d55f:	add    BYTE PTR [rbp+rdi*1+0x6c100001],ah
   14001d566:	add    BYTE PTR [rax],al
   14001d568:	cmp    eax,0xa400006c
   14001d56d:	cmp    eax,0x6c700001
   14001d572:	add    BYTE PTR [rax],al
   14001d574:	shr    BYTE PTR [rax+rax*1+0x0],0xa4
   14001d579:	cmp    eax,0x6cd00001
   14001d57e:	add    BYTE PTR [rax],al
   14001d580:	add    BYTE PTR [rbp+0x0],ch
   14001d583:	add    BYTE PTR [rax+0x3d],bl
   14001d586:	add    DWORD PTR [rax],eax
   14001d588:	movabs al,ds:0xa400006df300006d
   14001d591:	cmp    eax,0x6dfc0001
   14001d596:	add    BYTE PTR [rax],al
   14001d598:	sti    
   14001d599:	outs   dx,BYTE PTR ds:[rsi]
   14001d59a:	add    BYTE PTR [rax],al
   14001d59c:	mov    eax,0x1000013e
   14001d5a1:	outs   dx,DWORD PTR ds:[rsi]
   14001d5a2:	add    BYTE PTR [rax],al
   14001d5a4:	push   rbx
   14001d5a5:	outs   dx,DWORD PTR ds:[rsi]
   14001d5a6:	add    BYTE PTR [rax],al
   14001d5a8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001d5a9:	cmp    eax,0x6f9c0001
   14001d5ae:	add    BYTE PTR [rax],al
   14001d5b0:	adc    esi,DWORD PTR [rax+0x0]
   14001d5b3:	add    al,bl
   14001d5b5:	add    DWORD PTR ds:[rax],eax
   14001d5b8:	sbb    al,0x70
   14001d5ba:	add    BYTE PTR [rax],al
   14001d5bc:	xor    al,BYTE PTR [rcx+0x3ee80000]
   14001d5c2:	add    DWORD PTR [rax],eax
   14001d5c4:	cmp    BYTE PTR [rcx-0x7d190000],al
   14001d5ca:	add    BYTE PTR [rax],al
   14001d5cc:	or     al,0x3f
   14001d5ce:	add    DWORD PTR [rax],eax
   14001d5d0:	lock (bad) 
   14001d5d2:	add    BYTE PTR [rax],al
   14001d5d4:	pop    rdx
   14001d5d5:	add    DWORD PTR [rax],0x0
   14001d5d8:	pop    rax
   14001d5d9:	cmp    eax,0x83600001
   14001d5de:	add    BYTE PTR [rax],al
   14001d5e0:	pop    QWORD PTR [rbx+0x3da40000]
   14001d5e6:	add    DWORD PTR [rax],eax
   14001d5e8:	movabs al,ds:0x5800008411000083
   14001d5f1:	cmp    eax,0x84400001
   14001d5f6:	add    BYTE PTR [rax],al
   14001d5f8:	mov    DWORD PTR [rax+rax*1+0x13da400],eax
   14001d5ff:	add    BYTE PTR [rax-0x3fffff7c],dl
   14001d605:	test   BYTE PTR [rax],al
   14001d607:	add    BYTE PTR [rax+0x3d],bl
   14001d60a:	add    DWORD PTR [rax],eax
   14001d60c:	rol    BYTE PTR [rax+rax*1+0x855500],1
   14001d613:	add    al,al
   14001d615:	cmp    eax,0x85600001
   14001d61a:	add    BYTE PTR [rax],al
   14001d61c:	int    0x85
   14001d61e:	add    BYTE PTR [rax],al
   14001d620:	and    al,0x3f
   14001d622:	add    DWORD PTR [rax],eax
   14001d624:	(bad)  
   14001d625:	test   DWORD PTR [rax],eax
   14001d627:	add    dh,bh
   14001d629:	xchg   BYTE PTR [rax],al
   14001d62b:	add    BYTE PTR [rsi+rdi*1-0x78fbffff],ah
   14001d632:	add    BYTE PTR [rax],al
   14001d634:	or     eax,0x3400008d
   14001d639:	(bad)  
   14001d63a:	add    DWORD PTR [rax],eax
   14001d63c:	adc    al,0x8d
   14001d63e:	add    BYTE PTR [rax],al
   14001d640:	ret    
   14001d641:	mov    es,WORD PTR [rax]
   14001d643:	add    BYTE PTR [rax+0x3f],bl
   14001d646:	add    DWORD PTR [rax],eax
   14001d648:	int3   
   14001d649:	mov    es,WORD PTR [rax]
   14001d64b:	add    BYTE PTR [rbp+0x70000091],ch
   14001d651:	(bad)  
   14001d652:	add    DWORD PTR [rax],eax
   14001d654:	mov    ah,0x91
   14001d656:	add    BYTE PTR [rax],al
   14001d658:	mov    dh,0x94
   14001d65a:	add    BYTE PTR [rax],al
   14001d65c:	xchg   esp,eax
   14001d65d:	(bad)  
   14001d65e:	add    DWORD PTR [rax],eax
   14001d660:	mov    esp,0xe7000094
   14001d665:	fwait
   14001d666:	add    BYTE PTR [rax],al
   14001d668:	mov    eax,0xf000013f
   14001d66d:	fwait
   14001d66e:	add    BYTE PTR [rax],al
   14001d670:	movabs eax,ds:0xa800013fd00000a2
   14001d679:	movabs ds:0x3fec0000a5a30000,al
   14001d682:	add    DWORD PTR [rax],eax
   14001d684:	lods   al,BYTE PTR ds:[rsi]
   14001d685:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001d686:	add    BYTE PTR [rax],al
   14001d688:	mov    bl,0xad
   14001d68a:	add    BYTE PTR [rax],al
   14001d68c:	add    al,0x40
   14001d68e:	add    DWORD PTR [rax],eax
   14001d690:	mov    esp,0x880000ad
   14001d695:	scas   al,BYTE PTR es:[rdi]
   14001d696:	add    BYTE PTR [rax],al
   14001d698:	sbb    al,0x40
   14001d69a:	add    DWORD PTR [rax],eax
   14001d69c:	nop
   14001d69d:	scas   al,BYTE PTR es:[rdi]
   14001d69e:	add    BYTE PTR [rax],al
   14001d6a0:	shr    DWORD PTR [rdi+0x402c0000],1
   14001d6a6:	add    DWORD PTR [rax],eax
   14001d6a8:	fsubr  DWORD PTR [rdi-0x4e2d0000]
   14001d6ae:	add    BYTE PTR [rax],al
   14001d6b0:	rex.W
   14001d6b1:	rex add DWORD PTR [rax],eax
   14001d6b4:	loopne 0x14001d667
   14001d6b6:	add    BYTE PTR [rax],al
   14001d6b8:	rex.WXB mov r10b,0x0
   14001d6bb:	add    BYTE PTR [rbp+rdi*1-0x4dabffff],ah
   14001d6c2:	add    BYTE PTR [rax],al
   14001d6c4:	cmp    DWORD PTR [rbx+0x3da40000],esi
   14001d6ca:	add    DWORD PTR [rax],eax
   14001d6cc:	mov    bl,0x0
   14001d6cf:	add    BYTE PTR [rcx],bl
   14001d6d1:	mov    ah,0x0
   14001d6d3:	add    BYTE PTR [rdi+rdi*1],ah
   14001d6d6:	add    DWORD PTR [rax],eax
   14001d6d8:	and    BYTE PTR [rax+rax*1+0xb56b00],dh
   14001d6df:	add    BYTE PTR [rax+0x40],ah
   14001d6e2:	add    DWORD PTR [rax],eax
   14001d6e4:	je     0x14001d69b
   14001d6e6:	add    BYTE PTR [rax],al
   14001d6e8:	rex.WRB mov r14b,0x0
   14001d6eb:	add    BYTE PTR [rdi+rdi*1],ah
   14001d6ee:	add    DWORD PTR [rax],eax
   14001d6f0:	push   rsp
   14001d6f1:	mov    dh,0x0
   14001d6f3:	add    BYTE PTR [rdi+rsi*4+0x0],ch
   14001d6f7:	add    BYTE PTR [rbp+rdi*1-0x488bffff],ah
   14001d6fe:	add    BYTE PTR [rax],al
   14001d700:	sti    
   14001d701:	mov    esp,0x40740000
   14001d706:	add    DWORD PTR [rax],eax
   14001d708:	add    al,0xbd
   14001d70a:	add    BYTE PTR [rax],al
   14001d70c:	rex rol DWORD PTR [rax],0x0
   14001d710:	xchg   esp,eax
   14001d711:	rex add DWORD PTR [rax],eax
   14001d714:	rol    QWORD PTR [rax],0x0
   14001d718:	mov    cl,0x0
   14001d71b:	add    BYTE PTR [rdi+rdi*1],ah
   14001d71e:	add    DWORD PTR [rax],eax
   14001d720:	int3   
   14001d721:	rol    DWORD PTR [rax],0x0
   14001d724:	cld    
   14001d725:	rol    DWORD PTR [rax],0x0
   14001d728:	push   rax
   14001d729:	cmp    eax,0xc2040001
   14001d72e:	add    BYTE PTR [rax],al
   14001d730:	(bad)  
   14001d731:	ret    0x0
   14001d734:	pop    rax
   14001d735:	cmp    eax,0xc2400001
   14001d73a:	add    BYTE PTR [rax],al
   14001d73c:	gs ret 
   14001d73e:	add    BYTE PTR [rax],al
   14001d740:	mov    ah,0x40
   14001d742:	add    DWORD PTR [rax],eax
   14001d744:	jo     0x14001d709
   14001d746:	add    BYTE PTR [rax],al
   14001d748:	mov    al,0xc4
   14001d74a:	add    BYTE PTR [rax],al
   14001d74c:	rol    BYTE PTR [rax+0x1],1
   14001d74f:	add    al,ah
   14001d751:	(bad)  
   14001d752:	add    BYTE PTR [rax],al
   14001d754:	(bad)
   14001d758:	call   0x19001d89d
   14001d75d:	mov    BYTE PTR [rax],0x0
   14001d760:	push   0xffffffffffffffc7
   14001d762:	add    BYTE PTR [rax],al
   14001d764:	call   0x10001d8a9
   14001d769:	mov    DWORD PTR [rax],0xc93000
   14001d76f:	add    BYTE PTR [rcx+rax*2],al
   14001d772:	add    DWORD PTR [rax],eax
   14001d774:	rex leave 
   14001d776:	add    BYTE PTR [rax],al
   14001d778:	add    ecx,edx
   14001d77a:	add    BYTE PTR [rax],al
   14001d77c:	and    BYTE PTR [rcx+0x1],al
   14001d77f:	add    BYTE PTR [rax],dl
   14001d781:	retf   0x0
   14001d784:	cmp    al,0xca
   14001d786:	add    BYTE PTR [rax],al
   14001d788:	push   rax
   14001d789:	cmp    eax,0xca700001
   14001d78e:	add    BYTE PTR [rax],al
   14001d790:	retf   0xca
   14001d793:	add    BYTE PTR [rbp+rdi*1-0x352fffff],ah
   14001d79a:	add    BYTE PTR [rax],al
   14001d79c:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001d79d:	retf   
   14001d79e:	add    BYTE PTR [rax],al
   14001d7a0:	sub    BYTE PTR [rcx+0x1],al
   14001d7a3:	add    BYTE PTR [rax-0x78ffff35],dh
   14001d7a9:	int3   
   14001d7aa:	add    BYTE PTR [rax],al
   14001d7ac:	sub    BYTE PTR [rcx+0x1],al
   14001d7af:	add    BYTE PTR [rax-0x25ffff34],dl
   14001d7b5:	int3   
   14001d7b6:	add    BYTE PTR [rax],al
   14001d7b8:	push   rax
   14001d7b9:	cmp    eax,0xcce00001
   14001d7be:	add    BYTE PTR [rax],al
   14001d7c0:	adc    eax,0x500000cd
   14001d7c5:	cmp    eax,0xcd1c0001
   14001d7ca:	add    BYTE PTR [rax],al
   14001d7cc:	in     eax,0xcd
   14001d7ce:	add    BYTE PTR [rax],al
   14001d7d0:	cmp    BYTE PTR [rcx+0x1],al
   14001d7d3:	add    ah,ch
   14001d7d5:	int    0x0
   14001d7d7:	add    BYTE PTR [rsi],dh
   14001d7d9:	iret   
   14001d7da:	add    BYTE PTR [rax],al
   14001d7dc:	rex.R
   14001d7dd:	add    DWORD PTR [r8],eax
   14001d7e0:	cmp    al,0xcf
   14001d7e2:	add    BYTE PTR [rax],al
   14001d7e4:	(bad)  
   14001d7e5:	rol    BYTE PTR [rax],1
   14001d7e7:	add    BYTE PTR [rax+0x41],ah
   14001d7ea:	add    DWORD PTR [rax],eax
   14001d7ec:	int3   
   14001d7ed:	rol    BYTE PTR [rax],1
   14001d7ef:	add    BYTE PTR [rdi-0x7fffff2f],al
   14001d7f5:	add    DWORD PTR [r8],eax
   14001d7f8:	nop
   14001d7f9:	rol    DWORD PTR [rax],1
   14001d7fb:	add    BYTE PTR [rbx+rdx*8+0x0],dl
   14001d7ff:	add    BYTE PTR [rcx+rax*2-0x2ca3ffff],cl
   14001d806:	add    BYTE PTR [rax],al
   14001d808:	(bad)
   14001d80b:	add    BYTE PTR [rax+0x3d],bl
   14001d80e:	add    DWORD PTR [rax],eax
   14001d810:	rcl    bl,1
   14001d812:	add    BYTE PTR [rax],al
   14001d814:	(bad)  
   14001d815:	(bad)  
   14001d816:	add    BYTE PTR [rax],al
   14001d818:	lods   al,BYTE PTR ds:[rsi]
   14001d819:	add    DWORD PTR [r8],eax
   14001d81c:	movabs al,ds:0xc40000d5c70000d4
   14001d825:	add    DWORD PTR [r8],eax
   14001d828:	rcl    ch,1
   14001d82a:	add    BYTE PTR [rax],al
   14001d82c:	icebp  
   14001d82d:	(bad)  
   14001d82e:	add    BYTE PTR [rax],al
   14001d830:	(bad)
   14001d834:	add    bh,dl
   14001d836:	add    BYTE PTR [rax],al
   14001d838:	(bad)  
   14001d839:	xlat   BYTE PTR ds:[rbx]
   14001d83a:	add    BYTE PTR [rax],al
   14001d83c:	lods   al,BYTE PTR ds:[rsi]
   14001d83d:	add    DWORD PTR [r8],eax
   14001d840:	lock xlat BYTE PTR ds:[rbx]
   14001d842:	add    BYTE PTR [rax],al
   14001d844:	push   rsp
   14001d845:	fadd   DWORD PTR [rax]
   14001d847:	add    ah,bl
   14001d849:	add    DWORD PTR [r8],eax
   14001d84c:	(bad)  
   14001d84d:	fadd   DWORD PTR [rax]
   14001d84f:	add    BYTE PTR [rbp+0x580000d8],cl
   14001d855:	cmp    eax,0xd8a00001
   14001d85a:	add    BYTE PTR [rax],al
   14001d85c:	(bad)
   14001d85f:	add    BYTE PTR [rax+0x3d],bl
   14001d862:	add    DWORD PTR [rax],eax
   14001d864:	rcr    al,1
   14001d866:	add    BYTE PTR [rax],al
   14001d868:	add    ebx,ecx
   14001d86a:	add    BYTE PTR [rax],al
   14001d86c:	pop    rax
   14001d86d:	cmp    eax,0xd9100001
   14001d872:	add    BYTE PTR [rax],al
   14001d874:	xchg   ebx,ebx
   14001d876:	add    BYTE PTR [rax],al
   14001d878:	call   0xd001d9be
   14001d87d:	fild   DWORD PTR [rax]
   14001d87f:	add    BYTE PTR [rcx-0x22],dl
   14001d882:	add    BYTE PTR [rax],al
   14001d884:	add    BYTE PTR [rdx+0x1],al
   14001d887:	add    BYTE PTR [rax-0x22],ah
   14001d88a:	add    BYTE PTR [rax],al
   14001d88c:	rex.WB fild WORD PTR [r8]
   14001d88f:	add    BYTE PTR [rdx+rax*2],ah
   14001d892:	add    DWORD PTR [rax],eax
   14001d894:	push   rax
   14001d895:	fild   WORD PTR [rax]
   14001d897:	add    ah,dl
   14001d899:	fild   WORD PTR [rax]
   14001d89b:	add    BYTE PTR [rdx+rax*2],bh
   14001d89e:	add    DWORD PTR [rax],eax
   14001d8a0:	loopne 0x14001d881
   14001d8a2:	add    BYTE PTR [rax],al
   14001d8a4:	xchg   ebp,eax
   14001d8a5:	loopne 0x14001d8a7
   14001d8a7:	add    BYTE PTR [rax+0x42],dl
   14001d8aa:	add    DWORD PTR [rax],eax
   14001d8ac:	movabs al,ds:0x240000e0fc0000e0
   14001d8b5:	(bad)  
   14001d8b6:	add    DWORD PTR [rax],eax
   14001d8b8:	adc    cl,ah
   14001d8ba:	add    BYTE PTR [rax],al
   14001d8bc:	jrcxz  0x14001d8a0
   14001d8be:	add    BYTE PTR [rax],al
   14001d8c0:	push   0xfffffffff0000142
   14001d8c5:	loop   0x14001d8c7
   14001d8c7:	add    BYTE PTR [riz*8+0x428c0000],cl
   14001d8ce:	add    DWORD PTR [rax],eax
   14001d8d0:	shl    ch,1
   14001d8d2:	add    BYTE PTR [rax],al
   14001d8d4:	sub    eax,0x240000e6
   14001d8d9:	(bad)  
   14001d8da:	add    DWORD PTR [rax],eax
   14001d8dc:	out    0x0,al
   14001d8df:	add    ch,bl
   14001d8e1:	out    0x0,al
   14001d8e3:	add    BYTE PTR [rax-0xffffebe],dh
   14001d8e9:	out    0x0,al
   14001d8eb:	add    cl,dl
   14001d8ed:	out    0x0,eax
   14001d8ef:	add    al,al
   14001d8f1:	cmp    eax,0xe7e00001
   14001d8f6:	add    BYTE PTR [rax],al
   14001d8f8:	enter  0xe8,0x0
   14001d8fc:	add    al,0x41
   14001d8fe:	add    DWORD PTR [rax],eax
   14001d900:	shr    al,1
   14001d902:	add    BYTE PTR [rax],al
   14001d904:	cmp    ecx,ebp
   14001d906:	add    BYTE PTR [rax],al
   14001d908:	and    al,0x3f
   14001d90a:	add    DWORD PTR [rax],eax
   14001d90c:	adc    dl,ch
   14001d90e:	add    BYTE PTR [rax],al
   14001d910:	rex.RB (bad) 
   14001d912:	add    BYTE PTR [rax],al
   14001d914:	push   rax
   14001d915:	cmp    eax,0xea500001
   14001d91a:	add    BYTE PTR [rax],al
   14001d91c:	in     eax,0xea
   14001d91e:	add    BYTE PTR [rax],al
   14001d920:	and    al,0x3f
   14001d922:	add    DWORD PTR [rax],eax
   14001d924:	lock (bad) 
   14001d926:	add    BYTE PTR [rax],al
   14001d928:	sbb    al,0xeb
   14001d92a:	add    BYTE PTR [rax],al
   14001d92c:	pop    rax
   14001d92d:	cmp    eax,0xeb300001
   14001d932:	add    BYTE PTR [rax],al
   14001d934:	push   rsp
   14001d935:	jmp    0x14001d937
   14001d937:	add    BYTE PTR [rax+0x3d],bl
   14001d93a:	add    DWORD PTR [rax],eax
   14001d93c:	(bad)  
   14001d93d:	jmp    0x14001d93f
   14001d93f:	add    BYTE PTR [rcx],ch
   14001d941:	in     al,dx
   14001d942:	add    BYTE PTR [rax],al
   14001d944:	add    al,0x41
   14001d946:	add    DWORD PTR [rax],eax
   14001d948:	xor    ah,ch
   14001d94a:	add    BYTE PTR [rax],al
   14001d94c:	fs in  eax,dx
   14001d94e:	add    BYTE PTR [rax],al
   14001d950:	vpshufb xmm14,xmm15,XMMWORD PTR [r8-0x13]
   14001d956:	add    BYTE PTR [rax],al
   14001d958:	shr    ebp,1
   14001d95a:	add    BYTE PTR [rax],al
   14001d95c:	and    al,0x3f
   14001d95e:	add    DWORD PTR [rax],eax
   14001d960:	loopne 0x14001d94f
   14001d962:	add    BYTE PTR [rax],al
   14001d964:	sbb    dh,ch
   14001d966:	add    BYTE PTR [rax],al
   14001d968:	pop    rax
   14001d969:	cmp    eax,0xee200001
   14001d96e:	add    BYTE PTR [rax],al
   14001d970:	test   eax,0xe80000f0
   14001d975:	rex add DWORD PTR [rax],eax
   14001d978:	mov    al,0xf0
   14001d97a:	add    BYTE PTR [rax],al
   14001d97c:	pop    rsi
   14001d97d:	repz add BYTE PTR [rax],al
   14001d980:	add    BYTE PTR [rdx+0x1],al
   14001d983:	add    BYTE PTR [rax-0xd],dh
   14001d986:	add    BYTE PTR [rax],al
   14001d988:	jne    0x14001d97e
   14001d98a:	add    BYTE PTR [rax],al
   14001d98c:	loopne 0x14001d9d0
   14001d98e:	add    DWORD PTR [rax],eax
   14001d990:	xor    ah,0x0
   14001d993:	add    BYTE PTR [rsi+rsi*8+0x42680000],dl
   14001d99a:	add    DWORD PTR [rax],eax
   14001d99c:	movabs al,ds:0xf00000f78a0000f6
   14001d9a5:	rex.X add DWORD PTR [rax],eax
   14001d9a8:	nop
   14001d9a9:	test   DWORD PTR [rax],0xf7b900
   14001d9af:	add    BYTE PTR [rax+0x3d],bl
   14001d9b2:	add    DWORD PTR [rax],eax
   14001d9b4:	shl    bh,0x0
   14001d9b7:	add    bl,dh
   14001d9b9:	test   DWORD PTR [rax],0x13d5800
   14001d9bf:	add    BYTE PTR [rax],al
   14001d9c1:	clc    
   14001d9c2:	add    BYTE PTR [rax],al
   14001d9c4:	gs clc 
   14001d9c6:	add    BYTE PTR [rax],al
   14001d9c8:	pushf  
   14001d9c9:	cmp    eax,0xf8700001
   14001d9ce:	add    BYTE PTR [rax],al
   14001d9d0:	xabort 0x0
   14001d9d3:	add    BYTE PTR [rax+0x3d],bl
   14001d9d6:	add    DWORD PTR [rax],eax
   14001d9d8:	sar    al,1
   14001d9da:	add    BYTE PTR [rax],al
   14001d9dc:	sbb    bh,cl
   14001d9de:	add    BYTE PTR [rax],al
   14001d9e0:	push   rax
   14001d9e1:	cmp    eax,0xf9200001
   14001d9e6:	add    BYTE PTR [rax],al
   14001d9e8:	sub    bh,dl
   14001d9ea:	add    BYTE PTR [rax],al
   14001d9ec:	cld    
   14001d9ed:	rex.X add DWORD PTR [rax],eax
   14001d9f0:	xor    dl,bh
   14001d9f2:	add    BYTE PTR [rax],al
   14001d9f4:	(bad)  
   14001d9f5:	cli    
   14001d9f6:	add    BYTE PTR [rax],al
   14001d9f8:	(bad)  
   14001d9f9:	cmp    eax,0xfa900001
   14001d9fe:	add    BYTE PTR [rax],al
   14001da00:	out    0xfa,al
   14001da02:	add    BYTE PTR [rax],al
   14001da04:	(bad)  
   14001da05:	cmp    eax,0xfaf00001
   14001da0a:	add    BYTE PTR [rax],al
   14001da0c:	ds sti 
   14001da0e:	add    BYTE PTR [rax],al
   14001da10:	push   rax
   14001da11:	cmp    eax,0xfb500001
   14001da16:	add    BYTE PTR [rax],al
   14001da18:	sahf   
   14001da19:	sti    
   14001da1a:	add    BYTE PTR [rax],al
   14001da1c:	push   rax
   14001da1d:	cmp    eax,0xfbb00001
   14001da22:	add    BYTE PTR [rax],al
   14001da24:	or     edi,esp
   14001da26:	add    BYTE PTR [rax],al
   14001da28:	(bad)  
   14001da29:	cmp    eax,0xfc200001
   14001da2e:	add    BYTE PTR [rax],al
   14001da30:	addr32 cld 
   14001da32:	add    BYTE PTR [rax],al
   14001da34:	push   rax
   14001da35:	cmp    eax,0xfc700001
   14001da3a:	add    BYTE PTR [rax],al
   14001da3c:	cli    
   14001da3d:	cld    
   14001da3e:	add    BYTE PTR [rax],al
   14001da40:	sbb    BYTE PTR [rbx+0x1],al
   14001da43:	add    BYTE PTR [rax],al
   14001da45:	std    
   14001da46:	add    BYTE PTR [rax],al
   14001da48:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001da49:	std    
   14001da4a:	add    BYTE PTR [rax],al
   14001da4c:	and    BYTE PTR [rbx+0x1],al
   14001da4f:	add    BYTE PTR [rax-0x63ffff03],dh
   14001da55:	inc    BYTE PTR [rax]
   14001da57:	add    BYTE PTR [rax+0x42],dl
   14001da5a:	add    DWORD PTR [rax],eax
   14001da5c:	mov    al,0xfe
   14001da5e:	add    BYTE PTR [rax],al
   14001da60:	(bad)  
   14001da61:	inc    DWORD PTR [rax]
   14001da63:	add    BYTE PTR [rax],ch
   14001da65:	rex.XB add DWORD PTR [r8],eax
   14001da68:	loopne 0x14001da69
   14001da6a:	add    BYTE PTR [rax],al
   14001da6c:	rex.WXB add QWORD PTR [r9],rax
   14001da6f:	add    BYTE PTR [rax+0x3d],dh
   14001da72:	add    DWORD PTR [rax],eax
   14001da74:	(bad)  
   14001da75:	add    DWORD PTR [rcx],eax
   14001da77:	add    BYTE PTR [rbx],bh
   14001da79:	add    al,BYTE PTR [rcx]
   14001da7b:	add    BYTE PTR [rax],bh
   14001da7d:	rex.XB add DWORD PTR [r8],eax
   14001da80:	movabs al,ds:0x58000102f8000102
   14001da89:	cmp    eax,0x3000001
   14001da8e:	add    DWORD PTR [rax],eax
   14001da90:	add    eax,DWORD PTR fs:[rcx]
   14001da93:	add    BYTE PTR [rax+0x3d],bl
   14001da96:	add    DWORD PTR [rax],eax
   14001da98:	jo     0x14001da9d
   14001da9a:	add    DWORD PTR [rax],eax
   14001da9c:	enter  0x103,0x0
   14001daa0:	pop    rax
   14001daa1:	cmp    eax,0x3d00001
   14001daa6:	add    DWORD PTR [rax],eax
   14001daa8:	rex.WRX add al,0x1
   14001daab:	add    BYTE PTR [rax+0x3d],bl
   14001daae:	add    DWORD PTR [rax],eax
   14001dab0:	jo     0x14001dab6
   14001dab2:	add    DWORD PTR [rax],eax
   14001dab4:	sahf   
   14001dab5:	add    al,0x1
   14001dab7:	add    BYTE PTR [rax+0x3d],bl
   14001daba:	add    DWORD PTR [rax],eax
   14001dabc:	push   rax
   14001dabd:	add    eax,0x5ed0001
   14001dac2:	add    DWORD PTR [rax],eax
   14001dac4:	push   rax
   14001dac5:	rex.XB add DWORD PTR [r8],eax
   14001dac8:	xor    BYTE PTR [rsi],al
   14001daca:	add    DWORD PTR [rax],eax
   14001dacc:	jo     0x14001dad4
   14001dace:	add    DWORD PTR [rax],eax
   14001dad0:	push   rax
   14001dad1:	cmp    eax,0x6800001
   14001dad6:	add    DWORD PTR [rax],eax
   14001dad8:	rol    DWORD PTR [rsi],0x1
   14001dadb:	add    BYTE PTR [rax+0x3d],dl
   14001dade:	add    DWORD PTR [rax],eax
   14001dae0:	rol    BYTE PTR [rsi],1
   14001dae2:	add    DWORD PTR [rax],eax
   14001dae4:	add    al,BYTE PTR [rdi]
   14001dae6:	add    DWORD PTR [rax],eax
   14001dae8:	push   rax
   14001dae9:	cmp    eax,0x7100001
   14001daee:	add    DWORD PTR [rax],eax
   14001daf0:	rex.X (bad) 
   14001daf2:	add    DWORD PTR [rax],eax
   14001daf4:	push   rax
   14001daf5:	cmp    eax,0x7500001
   14001dafa:	add    DWORD PTR [rax],eax
   14001dafc:	add    al,0x8
   14001dafe:	add    DWORD PTR [rax],eax
   14001db00:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001db01:	add    DWORD PTR ds:[rax],eax
   14001db04:	adc    BYTE PTR [rax],cl
   14001db06:	add    DWORD PTR [rax],eax
   14001db08:	push   rdx
   14001db09:	or     BYTE PTR [rcx],al
   14001db0b:	add    BYTE PTR [rax+0x3d],bl
   14001db0e:	add    DWORD PTR [rax],eax
   14001db10:	(bad)  
   14001db11:	or     BYTE PTR [rcx],al
   14001db13:	add    BYTE PTR [rbp+0x58000108],al
   14001db19:	cmp    eax,0x8900001
   14001db1e:	add    DWORD PTR [rax],eax
   14001db20:	mov    edx,0x58000108
   14001db25:	cmp    eax,0x8c00001
   14001db2a:	add    DWORD PTR [rax],eax
   14001db2c:	out    0x8,eax
   14001db2e:	add    DWORD PTR [rax],eax
   14001db30:	pop    rax
   14001db31:	cmp    eax,0x9200001
   14001db36:	add    DWORD PTR [rax],eax
   14001db38:	or     DWORD PTR ds:[rcx],eax
   14001db3b:	add    BYTE PTR [rax+0x3d],dl
   14001db3e:	add    DWORD PTR [rax],eax
   14001db40:	push   rax
   14001db41:	or     DWORD PTR [rcx],eax
   14001db43:	add    BYTE PTR [rbp+0x9],bh
   14001db46:	add    DWORD PTR [rax],eax
   14001db48:	pop    rax
   14001db49:	cmp    eax,0xb200001
   14001db4e:	add    DWORD PTR [rax],eax
   14001db50:	mov    ebp,0xa400010b
   14001db55:	add    DWORD PTR ds:[rax],eax
   14001db58:	ror    BYTE PTR [rbx],1
   14001db5a:	add    DWORD PTR [rax],eax
   14001db5c:	jl     0x14001db6a
   14001db5e:	add    DWORD PTR [rax],eax
   14001db60:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001db61:	add    DWORD PTR ds:[rax],eax
   14001db64:	nop
   14001db65:	or     al,0x1
   14001db67:	add    BYTE PTR [rsi],bl
   14001db69:	(bad)  
   14001db6a:	add    DWORD PTR [rax],eax
   14001db6c:	add    al,0x41
   14001db6e:	add    DWORD PTR [rax],eax
   14001db70:	xor    BYTE PTR [rsi],cl
   14001db72:	add    DWORD PTR [rax],eax
   14001db74:	push   rdi
   14001db75:	sgdt   [rax]
   14001db78:	add    al,0x41
   14001db7a:	add    DWORD PTR [rax],eax
   14001db7c:	(bad)  
   14001db7d:	sgdt   [rax]
   14001db80:	push   rdi
   14001db81:	adc    BYTE PTR [rcx],al
   14001db83:	add    BYTE PTR [rcx+rax*2+0x10800001],ch
   14001db8a:	add    DWORD PTR [rax],eax
   14001db8c:	(bad)  
   14001db8d:	adc    DWORD PTR [rcx],eax
   14001db8f:	add    BYTE PTR [rax+0x43],ah
   14001db92:	add    DWORD PTR [rax],eax
   14001db94:	and    BYTE PTR [rcx],dl
   14001db96:	add    DWORD PTR [rax],eax
   14001db98:	xlat   BYTE PTR ds:[rbx]
   14001db99:	adc    DWORD PTR [rcx],eax
   14001db9b:	add    BYTE PTR [rax+0x43],dh
   14001db9e:	add    DWORD PTR [rax],eax
   14001dba0:	loopne 0x14001dbb3
   14001dba2:	add    DWORD PTR [rax],eax
   14001dba4:	cwde   
   14001dba5:	adc    al,BYTE PTR [rcx]
   14001dba7:	add    BYTE PTR [rax+0x43],dh
   14001dbaa:	add    DWORD PTR [rax],eax
   14001dbac:	movabs al,ds:0x8c00011325000112
   14001dbb5:	rex.XB add DWORD PTR [r8],eax
   14001dbb8:	sub    al,0x13
   14001dbba:	add    DWORD PTR [rax],eax
   14001dbbc:	jo     0x14001dbd2
   14001dbbe:	add    DWORD PTR [rax],eax
   14001dbc0:	movabs al,ds:0xb100011478000143
   14001dbc9:	adc    al,0x1
   14001dbcb:	add    BYTE PTR [rbp+rdi*1+0x14d00001],ah
   14001dbd2:	add    DWORD PTR [rax],eax
   14001dbd4:	lahf   
   14001dbd5:	adc    eax,0x3d500001
   14001dbda:	add    DWORD PTR [rax],eax
   14001dbdc:	mov    al,0x15
   14001dbde:	add    DWORD PTR [rax],eax
   14001dbe0:	stc    
   14001dbe1:	adc    eax,0x3d600001
   14001dbe6:	add    DWORD PTR [rax],eax
   14001dbe8:	add    BYTE PTR [rsi],dl
   14001dbea:	add    DWORD PTR [rax],eax
   14001dbec:	mov    esi,0xb8000117
   14001dbf1:	rex.XB add DWORD PTR [r8],eax
   14001dbf4:	rcl    BYTE PTR [rdi],1
   14001dbf6:	add    DWORD PTR [rax],eax
   14001dbf8:	loop   0x14001dc11
   14001dbfa:	add    DWORD PTR [rax],eax
   14001dbfc:	push   rax
   14001dbfd:	cmp    eax,0x18000001
   14001dc02:	add    DWORD PTR [rax],eax
   14001dc04:	(bad)  
   14001dc05:	sbb    BYTE PTR [rcx],al
   14001dc07:	add    al,ch
   14001dc09:	rex.XB add DWORD PTR [r8],eax
   14001dc0c:	push   rax
   14001dc0d:	sbb    BYTE PTR [rcx],al
   14001dc0f:	add    BYTE PTR [rcx+0x50000118],cl
   14001dc15:	cmp    eax,0x18900001
   14001dc1a:	add    DWORD PTR [rax],eax
   14001dc1c:	test   al,0x18
   14001dc1e:	add    DWORD PTR [rax],eax
   14001dc20:	push   rax
   14001dc21:	cmp    eax,0x18bc0001
   14001dc26:	add    DWORD PTR [rax],eax
   14001dc28:	adc    BYTE PTR [rcx],bl
   14001dc2a:	add    DWORD PTR [rax],eax
   14001dc2c:	in     al,dx
   14001dc2d:	rex.XB add DWORD PTR [r8],eax
   14001dc30:	sbb    BYTE PTR [rcx],bl
   14001dc32:	add    DWORD PTR [rax],eax
   14001dc34:	pop    rbp
   14001dc35:	sbb    DWORD PTR [rcx],eax
   14001dc37:	add    BYTE PTR [rax+0x3d],bl
   14001dc3a:	add    DWORD PTR [rax],eax
   14001dc3c:	rcr    BYTE PTR [rcx],0x1
   14001dc3f:	add    BYTE PTR [rip+0xc00011a],cl        # 0x14c01dd5f
   14001dc45:	add    DWORD PTR [rax],r8d
   14001dc48:	push   rsp
   14001dc49:	sbb    al,BYTE PTR [rcx]
   14001dc4b:	add    BYTE PTR [rbx+rbx*1],ah
   14001dc4e:	add    DWORD PTR [rax],eax
   14001dc50:	cmp    BYTE PTR [rcx+rax*1+0x0],al
   14001dc54:	sbb    r8d,DWORD PTR [rcx]
   14001dc57:	add    BYTE PTR [rax+0x1b],bh
   14001dc5a:	add    DWORD PTR [rax],eax
   14001dc5c:	pop    rax
   14001dc5d:	cmp    eax,0x1b800001
   14001dc62:	add    DWORD PTR [rax],eax
   14001dc64:	icebp  
   14001dc65:	sbb    al,0x1
   14001dc67:	add    BYTE PTR [rsp+rax*2+0x1],al
   14001dc6b:	add    BYTE PTR [rax],cl
   14001dc6d:	sbb    eax,0x1d260001
   14001dc72:	add    DWORD PTR [rax],eax
   14001dc74:	pop    rax
   14001dc75:	cmp    eax,0x1d400001
   14001dc7a:	add    DWORD PTR [rax],eax
   14001dc7c:	jo     0x14001dc9b
   14001dc7e:	add    DWORD PTR [rax],eax
   14001dc80:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001dc81:	cmp    eax,0x1d840001
   14001dc86:	add    DWORD PTR [rax],eax
   14001dc88:	movabs eax,ds:0xa800013d5000011d
   14001dc91:	sbb    eax,0x1e030001
   14001dc96:	add    DWORD PTR [rax],eax
   14001dc98:	push   rsp
   14001dc99:	add    DWORD PTR [rax],r8d
   14001dc9c:	push   rax
   14001dc9d:	(bad)  
   14001dc9e:	add    DWORD PTR [rax],eax
   14001dca0:	push   rdx
   14001dca1:	(bad)  
   14001dca2:	add    DWORD PTR [rax],eax
   14001dca4:	push   rax
   14001dca5:	add    DWORD PTR [rax],r8d
   14001dca8:	jo     0x14001dcc8
   14001dcaa:	add    DWORD PTR [rax],eax
   14001dcac:	mov    ebp,0x6000011e
   14001dcb1:	add    DWORD PTR [rax],r8d
   14001dcb4:	(bad)  
   14001dcb5:	(bad)  
   14001dcb6:	add    DWORD PTR [rax],eax
   14001dcb8:	in     al,0x1e
   14001dcba:	add    DWORD PTR [rax],eax
   14001dcbc:	xor    BYTE PTR [rcx+rax*1+0x0],al
   14001dcc0:	lock (bad) 
   14001dcc2:	add    DWORD PTR [rax],eax
   14001dcc4:	adc    BYTE PTR [rdi],bl
   14001dcc6:	add    DWORD PTR [rax],eax
   14001dcc8:	xor    BYTE PTR [rcx+rax*1+0x0],al

Disassembly of section .rsrc:

000000014001e000 <.rsrc>:
	...
   14001e00c:	add    DWORD PTR [rax],eax
   14001e00e:	add    al,BYTE PTR [rax]
   14001e010:	call   0x16881e015
   14001e015:	add    BYTE PTR [rax],al
   14001e017:	adc    BYTE PTR [rax],0x0
   14001e01a:	add    BYTE PTR [rax],al
   14001e01c:	add    BYTE PTR [rax],al
   14001e01f:	sbb    BYTE PTR [rax],0x0
   14001e022:	add    BYTE PTR [rax],al
   14001e024:	pop    rax
   14001e025:	add    BYTE PTR [rax],al
   14001e027:	add    BYTE PTR [rax],0x0
	...
   14001e036:	add    DWORD PTR [rax],eax
   14001e038:	add    DWORD PTR [rax],eax
   14001e03a:	add    BYTE PTR [rax],al
   14001e03c:	jo     0x14001e03e
   14001e03e:	add    BYTE PTR [rax+0x0],al
	...
   14001e04c:	add    BYTE PTR [rax],al
   14001e04e:	add    DWORD PTR [rax],eax
   14001e050:	add    DWORD PTR [rax],eax
   14001e052:	add    BYTE PTR [rax],al
   14001e054:	mov    BYTE PTR [rax],al
   14001e056:	add    BYTE PTR [rax+0x0],al
	...
   14001e064:	add    BYTE PTR [rax],al
   14001e066:	add    DWORD PTR [rax],eax
   14001e068:	add    DWORD PTR [rax],eax
   14001e06a:	add    BYTE PTR [rax],al
   14001e06c:	movabs al,ds:0x800000
	...
   14001e07d:	add    BYTE PTR [rcx],al
   14001e07f:	add    BYTE PTR [rcx],cl
   14001e081:	add    al,0x0
   14001e083:	add    BYTE PTR [rax+0x0],bh
	...
   14001e095:	add    BYTE PTR [rcx],al
   14001e097:	add    BYTE PTR [rcx],cl
   14001e099:	add    al,0x0
   14001e09b:	add    al,cl
	...
   14001e0ad:	add    BYTE PTR [rcx],al
   14001e0af:	add    BYTE PTR [rcx],cl
   14001e0b1:	add    al,0x0
   14001e0b3:	add    al,bl
   14001e0b5:	add    BYTE PTR [rax],al
   14001e0b7:	add    BYTE PTR [rax],ah
   14001e0b9:	call   0x140c9e0bf
	...
   14001e0c6:	add    BYTE PTR [rax],al
   14001e0c8:	in     al,0x1
   14001e0cb:	add    al,ah
   14001e0cd:	add    eax,DWORD PTR [rax]
	...
   14001e0d7:	add    al,dh
   14001e0d9:	loopne 0x14001e0dc
   14001e0db:	add    BYTE PTR [rsi+0x3],cl
	...
   14001e0e6:	add    BYTE PTR [rax],al
   14001e0e8:	add    eax,DWORD PTR [rax]
   14001e0ea:	rex.WRB add BYTE PTR [r13+0x0],r10b
   14001e0ee:	rex.WB add BYTE PTR [r15+rdi*1],dil
   14001e0f2:	js     0x14001e161
   14001e0f4:	ins    BYTE PTR es:[rdi],dx
   14001e0f5:	and    BYTE PTR [rsi+0x65],dh
   14001e0f8:	jb     0x14001e16d
   14001e0fa:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   14001e101:	xor    BYTE PTR [rdx],ah
   14001e103:	and    BYTE PTR [rbp+0x6e],ah
   14001e106:	movsxd ebp,DWORD PTR [rdi+0x64]
   14001e109:	imul   ebp,DWORD PTR [rsi+0x67],0x5455223d
   14001e110:	rex.RX sub eax,0x73202238
   14001e116:	je     0x14001e179
   14001e118:	outs   dx,BYTE PTR ds:[rsi]
   14001e119:	fs (bad) 
   14001e11b:	ins    BYTE PTR es:[rdi],dx
   14001e11c:	outs   dx,DWORD PTR ds:[rsi]
   14001e11d:	outs   dx,BYTE PTR ds:[rsi]
   14001e11e:	gs cmp eax,0x73657922
   14001e124:	and    bh,BYTE PTR [rdi]
   14001e126:	ds or  eax,0x2d213c0a
   14001e12c:	sub    eax,0x706f4320
   14001e131:	jns    0x14001e1a5
   14001e133:	imul   esp,DWORD PTR [rdi+0x68],0x63282074
   14001e13a:	sub    DWORD PTR [rax],esp
   14001e13c:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   14001e144:	je     0x14001e166
   14001e146:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14001e148:	jb     0x14001e1ba
   14001e14a:	outs   dx,DWORD PTR ds:[rsi]
   14001e14b:	jb     0x14001e1ae
   14001e14d:	je     0x14001e1b8
   14001e14f:	outs   dx,DWORD PTR ds:[rsi]
   14001e150:	outs   dx,BYTE PTR ds:[rsi]
   14001e151:	and    BYTE PTR [rip+0xa0d3e2d],ch        # 0x14a0f1f84
   14001e157:	cmp    al,0x61
   14001e159:	jae    0x14001e1ce
   14001e15b:	gs ins DWORD PTR es:[rdi],dx
   14001e15d:	(bad)  
   14001e15e:	ins    BYTE PTR es:[rdi],dx
   14001e15f:	jns    0x14001e181
   14001e161:	js     0x14001e1d0
   14001e163:	ins    BYTE PTR es:[rdi],dx
   14001e164:	outs   dx,BYTE PTR ds:[rsi]
   14001e165:	jae    0x14001e1a4
   14001e167:	and    dh,BYTE PTR [rbp+0x72]
   14001e16a:	outs   dx,BYTE PTR ds:[rsi]
   14001e16b:	cmp    dh,BYTE PTR [rbx+0x63]
   14001e16e:	push   0x73616d65
   14001e173:	sub    eax,0x7263696d
   14001e178:	outs   dx,DWORD PTR ds:[rsi]
   14001e179:	jae    0x14001e1ea
   14001e17b:	data16 je 0x14001e1ab
   14001e17e:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14001e181:	cmp    ah,BYTE PTR [rcx+0x73]
   14001e184:	ins    DWORD PTR es:[rdi],dx
   14001e185:	cs jbe 0x14001e1b9
   14001e188:	and    ah,BYTE PTR [rax]
   14001e18a:	ins    DWORD PTR es:[rdi],dx
   14001e18b:	(bad)  
   14001e18c:	outs   dx,BYTE PTR ds:[rsi]
   14001e18d:	imul   esp,DWORD PTR [rsi+0x65],0x65567473
   14001e194:	jb     0x14001e209
   14001e196:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   14001e19d:	xor    BYTE PTR [rdx],ah
   14001e19f:	ds or  eax,0x73613c0a
   14001e1a5:	jae    0x14001e20c
   14001e1a7:	ins    DWORD PTR es:[rdi],dx
   14001e1a8:	(bad)  
   14001e1a9:	ins    BYTE PTR es:[rdi],dx
   14001e1aa:	jns    0x14001e1f5
   14001e1ac:	fs outs dx,BYTE PTR gs:[rsi]
   14001e1af:	je     0x14001e21a
   14001e1b1:	je     0x14001e22c
   14001e1b3:	or     eax,0x2020200a
   14001e1b8:	and    BYTE PTR [rsi+0x65],dh
   14001e1bb:	jb     0x14001e230
   14001e1bd:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e35223d
   14001e1c4:	xor    DWORD PTR [rsi],ebp
   14001e1c6:	xor    BYTE PTR [rsi],ch
   14001e1c8:	xor    BYTE PTR [rdx],ah
   14001e1ca:	or     eax,0x2020200a
   14001e1cf:	and    BYTE PTR [rax+0x72],dh
   14001e1d2:	outs   dx,DWORD PTR ds:[rsi]
   14001e1d3:	movsxd esp,DWORD PTR [rbp+0x73]
   14001e1d6:	jae    0x14001e247
   14001e1d8:	jb     0x14001e21b
   14001e1da:	jb     0x14001e23f
   14001e1dc:	push   0x63657469
   14001e1e1:	je     0x14001e258
   14001e1e3:	jb     0x14001e24a
   14001e1e5:	cmp    eax,0x646d6122
   14001e1ea:	ss xor al,0x22
   14001e1ed:	or     eax,0x2020200a
   14001e1f2:	and    BYTE PTR [rsi+0x61],ch
   14001e1f5:	ins    DWORD PTR es:[rdi],dx
   14001e1f6:	gs cmp eax,0x63694d22
   14001e1fc:	jb     0x14001e26d
   14001e1fe:	jae    0x14001e26f
   14001e200:	data16 je 0x14001e231
   14001e203:	push   rdi
   14001e204:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
   14001e20b:	rex.WB
   14001e20c:	rex.WB push r11
   14001e20e:	cs rex.B jo 0x14001e282
   14001e212:	rex.XB ins DWORD PTR es:[rdi],dx
   14001e214:	and    cl,BYTE PTR fs:[rip+0x2020200a]        # 0x160220225
   14001e21b:	and    BYTE PTR [rcx+rdi*2+0x70],dh
   14001e21f:	gs cmp eax,0x6e697722
   14001e225:	xor    esi,DWORD PTR [rdx]
   14001e227:	and    cl,BYTE PTR [rip+0xd3e2f0a]        # 0x14d401137
   14001e22d:	or     bh,BYTE PTR [rsp+riz*2]
   14001e230:	gs jae 0x14001e296
   14001e233:	jb     0x14001e29e
   14001e235:	jo     0x14001e2ab
   14001e237:	imul   ebp,DWORD PTR [rdi+0x6e],0x7070413e
   14001e23e:	ins    BYTE PTR es:[rdi],dx
   14001e23f:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   14001e246:	and    BYTE PTR [rbx+0x65],dl
   14001e249:	jb     0x14001e2c1
   14001e24b:	gs jb  0x14001e26e
   14001e24e:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14001e250:	ins    DWORD PTR es:[rdi],dx
   14001e251:	ins    DWORD PTR es:[rdi],dx
   14001e252:	(bad)  
   14001e253:	outs   dx,BYTE PTR ds:[rsi]
   14001e254:	and    BYTE PTR fs:[rcx+rbp*2+0x6e],cl
   14001e259:	and    BYTE PTR gs:[rcx+0x64],al
   14001e25d:	ins    DWORD PTR es:[rdi],dx
   14001e25e:	imul   ebp,DWORD PTR [rsi+0x20],0x6c6f6f54
   14001e265:	cmp    al,0x2f
   14001e267:	fs gs jae 0x14001e2ce
   14001e26b:	jb     0x14001e2d6
   14001e26d:	jo     0x14001e2e3
   14001e26f:	imul   ebp,DWORD PTR [rdi+0x6e],0xd0a0d3e
   14001e276:	or     bh,BYTE PTR [rsp+rsi*2]
   14001e279:	jb     0x14001e2f0
   14001e27b:	jae    0x14001e2f1
   14001e27d:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14001e27f:	outs   dx,WORD PTR ds:[rsi]
   14001e281:	and    BYTE PTR [rax+0x6d],bh
   14001e284:	ins    BYTE PTR es:[rdi],dx
   14001e285:	outs   dx,BYTE PTR ds:[rsi]
   14001e286:	jae    0x14001e2c5
   14001e288:	and    dh,BYTE PTR [rbp+0x72]
   14001e28b:	outs   dx,BYTE PTR ds:[rsi]
   14001e28c:	cmp    dh,BYTE PTR [rbx+0x63]
   14001e28f:	push   0x73616d65
   14001e294:	sub    eax,0x7263696d
   14001e299:	outs   dx,DWORD PTR ds:[rsi]
   14001e29a:	jae    0x14001e30b
   14001e29c:	data16 je 0x14001e2cc
   14001e29f:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14001e2a2:	cmp    ah,BYTE PTR [rcx+0x73]
   14001e2a5:	ins    DWORD PTR es:[rdi],dx
   14001e2a6:	cs jbe 0x14001e2dc
   14001e2a9:	and    bh,BYTE PTR [rsi]
   14001e2ab:	or     eax,0x2020200a
   14001e2b0:	and    BYTE PTR [rbx+rsi*2],bh
   14001e2b3:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   14001e2b7:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x20200a0d
   14001e2bf:	and    BYTE PTR [rax],ah
   14001e2c1:	and    BYTE PTR [rax],ah
   14001e2c3:	and    BYTE PTR [rax],ah
   14001e2c5:	cmp    al,0x72
   14001e2c7:	gs jno 0x14001e33f
   14001e2ca:	gs jae 0x14001e341
   14001e2cd:	gs fs push rax
   14001e2d0:	jb     0x14001e33b
   14001e2d2:	jbe    0x14001e33d
   14001e2d4:	ins    BYTE PTR es:[rdi],dx
   14001e2d5:	gs addr32 gs jae 0x14001e318
   14001e2da:	or     eax,0x2020200a
   14001e2df:	and    BYTE PTR [rax],ah
   14001e2e1:	and    BYTE PTR [rax],ah
   14001e2e3:	and    BYTE PTR [rax],ah
   14001e2e5:	and    BYTE PTR [rax],ah
   14001e2e7:	and    BYTE PTR [rdx+rsi*2],bh
   14001e2ea:	gs jno 0x14001e362
   14001e2ed:	gs jae 0x14001e364
   14001e2f0:	gs fs rex.RB js 0x14001e35a
   14001e2f5:	movsxd esi,DWORD PTR [rbp+0x74]
   14001e2f8:	imul   ebp,DWORD PTR [rdi+0x6e],0x6576654c
   14001e2ff:	ins    BYTE PTR es:[rdi],dx
   14001e300:	or     eax,0x2020200a
   14001e305:	and    BYTE PTR [rax],ah
   14001e307:	and    BYTE PTR [rax],ah
   14001e309:	and    BYTE PTR [rax],ah
   14001e30b:	and    BYTE PTR [rax],ah
   14001e30d:	and    BYTE PTR [rax],ah
   14001e30f:	and    BYTE PTR [rax],ah
   14001e311:	and    BYTE PTR [rbp+riz*2+0x76],ch
   14001e315:	gs ins BYTE PTR es:[rdi],dx
   14001e317:	cmp    eax,0x49736122
   14001e31c:	outs   dx,BYTE PTR ds:[rsi]
   14001e31d:	jbe    0x14001e38e
   14001e31f:	imul   esp,DWORD PTR [rbp+0x72],0x22
   14001e323:	or     eax,0x2020200a
   14001e328:	and    BYTE PTR [rax],ah
   14001e32a:	and    BYTE PTR [rax],ah
   14001e32c:	and    BYTE PTR [rax],ah
   14001e32e:	and    BYTE PTR [rax],ah
   14001e330:	and    BYTE PTR [rax],ah
   14001e332:	and    BYTE PTR [rax],ah
   14001e334:	and    BYTE PTR [rbp+0x69],dh
   14001e337:	movsxd esp,DWORD PTR [r11+0x65]
   14001e33b:	jae    0x14001e3b0
   14001e33d:	cmp    eax,0x6c616622
   14001e342:	jae    0x14001e3a9
   14001e344:	and    cl,BYTE PTR [rip+0x2020200a]        # 0x160220354
   14001e34a:	and    BYTE PTR [rax],ah
   14001e34c:	and    BYTE PTR [rax],ah
   14001e34e:	and    BYTE PTR [rax],ah
   14001e350:	and    BYTE PTR [rax],ah
   14001e352:	and    BYTE PTR [rdi],ch
   14001e354:	ds or  eax,0x2020200a
   14001e35a:	and    BYTE PTR [rax],ah
   14001e35c:	and    BYTE PTR [rax],ah
   14001e35e:	and    BYTE PTR [rdi+rbp*1],bh
   14001e361:	jb     0x14001e3c8
   14001e363:	jno    0x14001e3da
   14001e365:	gs jae 0x14001e3dc
   14001e368:	gs fs push rax
   14001e36b:	jb     0x14001e3d6
   14001e36d:	jbe    0x14001e3d8
   14001e36f:	ins    BYTE PTR es:[rdi],dx
   14001e370:	gs addr32 gs jae 0x14001e3b3
   14001e375:	or     eax,0x2020200a
   14001e37a:	and    BYTE PTR [rdi+rbp*1],bh
   14001e37d:	jae    0x14001e3e4
   14001e37f:	movsxd esi,DWORD PTR [rbp+0x72]
   14001e382:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x2f3c0a0d
   14001e38a:	je     0x14001e3fe
   14001e38c:	jne    0x14001e401
   14001e38e:	je     0x14001e3d9
   14001e390:	outs   dx,BYTE PTR ds:[rsi]
   14001e391:	outs   dx,WORD PTR ds:[rsi]
   14001e393:	ds or  eax,0x65643c0a
   14001e399:	jo     0x14001e400
   14001e39b:	outs   dx,BYTE PTR ds:[rsi]
   14001e39c:	fs outs dx,BYTE PTR gs:[rsi]
   14001e39f:	movsxd edi,DWORD PTR [rcx+0x3e]
   14001e3a2:	or     eax,0x2020200a
   14001e3a7:	and    BYTE PTR [rsp+riz*2],bh
   14001e3aa:	gs jo  0x14001e412
   14001e3ad:	outs   dx,BYTE PTR ds:[rsi]
   14001e3ae:	fs outs dx,BYTE PTR gs:[rsi]
   14001e3b1:	je     0x14001e3f4
   14001e3b3:	jae    0x14001e428
   14001e3b5:	gs ins DWORD PTR es:[rdi],dx
   14001e3b7:	(bad)  
   14001e3b8:	ins    BYTE PTR es:[rdi],dx
   14001e3b9:	jns    0x14001e3f9
   14001e3bb:	or     eax,0x2020200a
   14001e3c0:	and    BYTE PTR [rax],ah
   14001e3c2:	and    BYTE PTR [rax],ah
   14001e3c4:	and    BYTE PTR [rcx+riz*2],bh
   14001e3c7:	jae    0x14001e43c
   14001e3c9:	gs ins DWORD PTR es:[rdi],dx
   14001e3cb:	(bad)  
   14001e3cc:	ins    BYTE PTR es:[rdi],dx
   14001e3cd:	jns    0x14001e418
   14001e3cf:	fs outs dx,BYTE PTR gs:[rsi]
   14001e3d2:	je     0x14001e43d
   14001e3d4:	je     0x14001e44f
   14001e3d6:	and    BYTE PTR [rcx+rdi*2+0x70],dh
   14001e3da:	gs cmp eax,0x6e697727
   14001e3e0:	xor    esi,DWORD PTR [rdx]
   14001e3e2:	(bad)  
   14001e3e3:	and    BYTE PTR [rsi+0x61],ch
   14001e3e6:	ins    DWORD PTR es:[rdi],dx
   14001e3e7:	gs cmp eax,0x74616e27
   14001e3ed:	imul   esi,DWORD PTR [rsi+0x72],0x20273264
   14001e3f4:	jbe    0x14001e45b
   14001e3f6:	jb     0x14001e46b
   14001e3f8:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31273d
   14001e3ff:	xor    BYTE PTR [rsi],ch
   14001e401:	xor    BYTE PTR [rsi],ch
   14001e403:	xor    BYTE PTR [rdi],ah
   14001e405:	and    BYTE PTR [rdi],ch
   14001e407:	ds or  eax,0x2020200a
   14001e40d:	and    BYTE PTR [rdi+rbp*1],bh
   14001e410:	fs gs jo 0x14001e479
   14001e414:	outs   dx,BYTE PTR ds:[rsi]
   14001e415:	fs outs dx,BYTE PTR gs:[rsi]
   14001e418:	je     0x14001e45b
   14001e41a:	jae    0x14001e48f
   14001e41c:	gs ins DWORD PTR es:[rdi],dx
   14001e41e:	(bad)  
   14001e41f:	ins    BYTE PTR es:[rdi],dx
   14001e420:	jns    0x14001e460
   14001e422:	or     eax,0x642f3c0a
   14001e427:	gs jo  0x14001e48f
   14001e42a:	outs   dx,BYTE PTR ds:[rsi]
   14001e42b:	fs outs dx,BYTE PTR gs:[rsi]
   14001e42e:	movsxd edi,DWORD PTR [rcx+0x3e]
   14001e431:	or     eax,0x612f3c0a
   14001e436:	jae    0x14001e4ab
   14001e438:	gs ins DWORD PTR es:[rdi],dx
   14001e43a:	(bad)  
   14001e43b:	ins    BYTE PTR es:[rdi],dx
   14001e43c:	jns    0x14001e47c
   14001e43e:	add    BYTE PTR [rax],al
   14001e440:	fadd   DWORD PTR [rbx]
   14001e442:	xor    al,0x0
   14001e444:	add    BYTE PTR [rax],al
   14001e446:	push   rsi
   14001e447:	add    BYTE PTR [rbx+0x0],dl
   14001e44a:	pop    rdi
   14001e44b:	add    BYTE PTR [rsi+0x0],dl
   14001e44e:	add    BYTE PTR [r10+0x0],r10b
   14001e452:	push   rbx
   14001e453:	add    BYTE PTR [rcx+0x0],cl
   14001e456:	rex.WRXB add BYTE PTR [r14+0x0],r9b
   14001e45a:	pop    rdi
   14001e45b:	add    BYTE PTR [rcx+0x0],cl
   14001e45e:	rex.WRX add BYTE PTR [rsi+0x0],r8b
   14001e462:	rex.WRXB add BYTE PTR [r8],r8b
   14001e465:	add    BYTE PTR [rax],al
   14001e467:	add    BYTE PTR [rbp+0xfeef04],bh
   14001e46d:	add    BYTE PTR [rcx],al
   14001e46f:	add    BYTE PTR [rax],al
   14001e471:	add    BYTE PTR [rdx],cl
   14001e473:	add    al,ch
   14001e475:	add    edx,DWORD PTR [rsi]
   14001e477:	cmp    BYTE PTR [rax],al
   14001e479:	add    BYTE PTR [rdx],cl
   14001e47b:	add    al,ch
   14001e47d:	add    edx,DWORD PTR [rsi]
   14001e47f:	cmp    BYTE PTR [rdi],bh
   14001e481:	add    BYTE PTR [rax],al
   14001e483:	add    BYTE PTR [rax],cl
   14001e485:	add    BYTE PTR [rax],al
   14001e487:	add    BYTE PTR [rax+rax*1],al
   14001e48a:	add    al,0x0
   14001e48c:	add    al,BYTE PTR [rax]
	...
   14001e49a:	add    BYTE PTR [rax],al
   14001e49c:	cmp    BYTE PTR [rbx],al
   14001e49e:	add    BYTE PTR [rax],al
   14001e4a0:	add    DWORD PTR [rax],eax
   14001e4a2:	push   rbx
   14001e4a3:	add    BYTE PTR [rax+rax*1+0x72],dh
   14001e4a7:	add    BYTE PTR [rcx+0x0],ch
   14001e4aa:	outs   dx,BYTE PTR ds:[rsi]
   14001e4ab:	add    BYTE PTR [rdi+0x0],ah
   14001e4ae:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14001e4b2:	ins    BYTE PTR es:[rdi],dx
   14001e4b3:	add    BYTE PTR [rbp+0x0],ah
   14001e4b6:	rex.WB add BYTE PTR [r14+0x0],bpl
   14001e4ba:	data16 add BYTE PTR [rdi+0x0],ch
   14001e4be:	add    BYTE PTR [rax],al
   14001e4c0:	adc    al,0x3
   14001e4c2:	add    BYTE PTR [rax],al
   14001e4c4:	add    DWORD PTR [rax],eax
   14001e4c6:	xor    BYTE PTR [rax],al
   14001e4c8:	xor    BYTE PTR [rax],al
   14001e4ca:	xor    BYTE PTR [rax],al
   14001e4cc:	xor    BYTE PTR [rax],al
   14001e4ce:	xor    BYTE PTR [rax],al
   14001e4d0:	xor    al,0x0
   14001e4d2:	rex.X add BYTE PTR [rax],sil
   14001e4d5:	add    BYTE PTR [rax],al
   14001e4d7:	add    BYTE PTR [rax+rax*1+0x16],cl
   14001e4db:	add    BYTE PTR [rcx],al
   14001e4dd:	add    BYTE PTR [rbx+0x0],al
   14001e4e0:	outs   dx,DWORD PTR ds:[rsi]
   14001e4e1:	add    BYTE PTR [rbp+0x0],ch
   14001e4e4:	jo     0x14001e4e6
   14001e4e6:	(bad)  
   14001e4e7:	add    BYTE PTR [rsi+0x0],ch
   14001e4ea:	jns    0x14001e4ec
   14001e4ec:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   14001e4f0:	ins    DWORD PTR es:[rdi],dx
   14001e4f1:	add    BYTE PTR [rbp+0x0],ah
   14001e4f4:	add    BYTE PTR [rax],al
   14001e4f6:	add    BYTE PTR [rax],al
   14001e4f8:	rex.WRB add BYTE PTR [r9+0x0],r13b
   14001e4fc:	movsxd eax,DWORD PTR [rax]
   14001e4fe:	jb     0x14001e500
   14001e500:	outs   dx,DWORD PTR ds:[rsi]
   14001e501:	add    BYTE PTR [rbx+0x0],dh
   14001e504:	outs   dx,DWORD PTR ds:[rsi]
   14001e505:	add    BYTE PTR [rsi+0x0],ah
   14001e508:	je     0x14001e50a
   14001e50a:	and    BYTE PTR [rax],al
   14001e50c:	rex.XB add BYTE PTR [r15+0x0],bpl
   14001e510:	jb     0x14001e512
   14001e512:	jo     0x14001e514
   14001e514:	outs   dx,DWORD PTR ds:[rsi]
   14001e515:	add    BYTE PTR [rdx+0x0],dh
   14001e518:	(bad)  
   14001e519:	add    BYTE PTR [rax+rax*1+0x69],dh
   14001e51d:	add    BYTE PTR [rdi+0x0],ch
   14001e520:	outs   dx,BYTE PTR ds:[rsi]
   14001e521:	add    BYTE PTR [rax],al
   14001e523:	add    BYTE PTR [rsi+0x0],bh
   14001e526:	sub    eax,DWORD PTR [rax]
   14001e528:	add    DWORD PTR [rax],eax
   14001e52a:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14001e52e:	ins    BYTE PTR es:[rdi],dx
   14001e52f:	add    BYTE PTR [rbp+0x0],ah
   14001e532:	add    BYTE PTR [rbp+0x0],r12b
   14001e536:	jae    0x14001e538
   14001e538:	movsxd eax,DWORD PTR [rax]
   14001e53a:	jb     0x14001e53c
   14001e53c:	imul   eax,DWORD PTR [rax],0x740070
   14001e542:	imul   eax,DWORD PTR [rax],0x6e006f
   14001e548:	add    BYTE PTR [rax],al
   14001e54a:	add    BYTE PTR [rax],al
   14001e54c:	add    BYTE PTR [r8+0x0],sil
   14001e550:	jo     0x14001e552
   14001e552:	ins    BYTE PTR es:[rdi],dx
   14001e553:	add    BYTE PTR [rcx+0x0],ch
   14001e556:	movsxd eax,DWORD PTR [rax]
   14001e558:	(bad)  
   14001e559:	add    BYTE PTR [rax+rax*1+0x69],dh
   14001e55d:	add    BYTE PTR [rdi+0x0],ch
   14001e560:	outs   dx,BYTE PTR ds:[rsi]
   14001e561:	add    BYTE PTR [rax],ah
   14001e563:	add    BYTE PTR [rbx+0x0],dl
   14001e566:	add    BYTE PTR gs:[rdx+0x0],dh
   14001e56a:	jbe    0x14001e56c
   14001e56c:	add    BYTE PTR gs:[rdx+0x0],dh
   14001e570:	and    BYTE PTR [rax],al
   14001e572:	rex.XB add BYTE PTR [r15+0x0],bpl
   14001e576:	ins    DWORD PTR es:[rdi],dx
   14001e577:	add    BYTE PTR [rbp+0x0],ch
   14001e57a:	(bad)  
   14001e57b:	add    BYTE PTR [rsi+0x0],ch
   14001e57e:	add    BYTE PTR fs:[rax],ah
   14001e581:	add    BYTE PTR [rax+rax*1+0x69],cl
   14001e585:	add    BYTE PTR [rsi+0x0],ch
   14001e588:	add    BYTE PTR gs:[rax],ah
   14001e58b:	add    BYTE PTR [rcx+0x0],al
   14001e58e:	add    BYTE PTR fs:[rbp+0x0],ch
   14001e592:	imul   eax,DWORD PTR [rax],0x20006e
   14001e598:	push   rsp
   14001e599:	add    BYTE PTR [rdi+0x0],ch
   14001e59c:	outs   dx,DWORD PTR ds:[rsi]
   14001e59d:	add    BYTE PTR [rax+rax*1+0x0],ch
   14001e5a1:	add    BYTE PTR [rax],al
   14001e5a3:	add    BYTE PTR [rax+0x1003c00],bl
   14001e5a9:	add    BYTE PTR [rsi+0x0],al
   14001e5ac:	imul   eax,DWORD PTR [rax],0x65006c
   14001e5b2:	push   rsi
   14001e5b3:	add    BYTE PTR [rbp+0x0],ah
   14001e5b6:	jb     0x14001e5b8
   14001e5b8:	jae    0x14001e5ba
   14001e5ba:	imul   eax,DWORD PTR [rax],0x6e006f
   14001e5c0:	add    BYTE PTR [rax],al
   14001e5c2:	add    BYTE PTR [rax],al
   14001e5c4:	xor    DWORD PTR [rax],eax
   14001e5c6:	xor    BYTE PTR [rax],al
   14001e5c8:	add    BYTE PTR cs:[rax],dh
   14001e5cb:	add    BYTE PTR [rsi],ch
   14001e5cd:	add    BYTE PTR [rcx],dh
   14001e5cf:	add    BYTE PTR [rax+rax*1],dh
   14001e5d2:	xor    eax,DWORD PTR [rax]
   14001e5d4:	xor    eax,0x2e003800
   14001e5d9:	add    BYTE PTR [rcx],dh
   14001e5db:	add    BYTE PTR [rax],dh
   14001e5dd:	add    BYTE PTR [rax],dh
   14001e5df:	add    BYTE PTR [rax],dh
   14001e5e1:	add    BYTE PTR [rax],ah
   14001e5e3:	add    BYTE PTR [rax],ch
   14001e5e5:	add    BYTE PTR [rdx+0x0],dh
   14001e5e8:	jae    0x14001e5ea
   14001e5ea:	xor    DWORD PTR [rax],eax
   14001e5ec:	pop    rdi
   14001e5ed:	add    BYTE PTR [rbx+0x0],dh
   14001e5f0:	jb     0x14001e5f2
   14001e5f2:	jbe    0x14001e5f4
   14001e5f4:	movsxd eax,DWORD PTR [rax]
   14001e5f6:	outs   dx,DWORD PTR ds:[rsi]
   14001e5f7:	add    BYTE PTR [rbp+0x0],ch
   14001e5fa:	ins    DWORD PTR es:[rdi],dx
   14001e5fb:	add    BYTE PTR [rdi+0x0],ch
   14001e5fe:	outs   dx,BYTE PTR ds:[rsi]
   14001e5ff:	add    BYTE PTR [rdi+0x0],bl
   14001e602:	imul   eax,DWORD PTR [rax],0x730069
   14001e608:	pop    rdi
   14001e609:	add    BYTE PTR [rax+rax*1+0x65],ah
   14001e60d:	add    BYTE PTR [rsi+0x0],dh
   14001e610:	sub    BYTE PTR [rax],al
   14001e612:	outs   dx,BYTE PTR ds:[rsi]
   14001e613:	add    BYTE PTR [rcx+0x0],ch
   14001e616:	outs   dx,BYTE PTR ds:[rsi]
   14001e617:	add    BYTE PTR [rdi+0x0],ah
   14001e61a:	ins    BYTE PTR es:[rdi],dx
   14001e61b:	add    BYTE PTR [rcx+0x0],ch
   14001e61e:	sub    DWORD PTR [rax],eax
   14001e620:	add    BYTE PTR cs:[rcx],dh
   14001e623:	add    BYTE PTR [rsi],dh
   14001e625:	add    BYTE PTR [rax],dh
   14001e627:	add    BYTE PTR [rip+0x34003200],dh        # 0x17402182d
   14001e62d:	add    BYTE PTR [rip+0x34003100],ch        # 0x174021733
   14001e633:	add    BYTE PTR [rip+0x29003200],dh        # 0x169021839
   14001e639:	add    BYTE PTR [rax],al
   14001e63b:	add    BYTE PTR [rsi],dh
   14001e63d:	add    BYTE PTR [rbx],cl
   14001e63f:	add    BYTE PTR [rcx],al
   14001e641:	add    BYTE PTR [rcx+0x0],cl
   14001e644:	outs   dx,BYTE PTR ds:[rsi]
   14001e645:	add    BYTE PTR [rax+rax*1+0x65],dh
   14001e649:	add    BYTE PTR [rdx+0x0],dh
   14001e64c:	outs   dx,BYTE PTR ds:[rsi]
   14001e64d:	add    BYTE PTR [rcx+0x0],ah
   14001e650:	ins    BYTE PTR es:[rdi],dx
   14001e651:	add    BYTE PTR [rsi+0x0],cl
   14001e654:	(bad)  
   14001e655:	add    BYTE PTR [rbp+0x0],ch
   14001e658:	add    BYTE PTR gs:[rax],al
   14001e65b:	add    BYTE PTR [rcx+0x0],ah
   14001e65e:	jo     0x14001e660
   14001e660:	jo     0x14001e662
   14001e662:	movsxd eax,DWORD PTR [rax]
   14001e664:	ins    DWORD PTR es:[rdi],dx
   14001e665:	add    BYTE PTR [rax+rax*1+0x2e],ah
   14001e669:	add    BYTE PTR [rbp+0x0],ah
   14001e66c:	js     0x14001e66e
   14001e66e:	add    BYTE PTR gs:[rax],al
   14001e671:	add    BYTE PTR [rax],al
   14001e673:	add    BYTE PTR [rax+0x1002e00],al
   14001e679:	add    BYTE PTR [rax+rax*1+0x65],cl
   14001e67d:	add    BYTE PTR [rdi+0x0],ah
   14001e680:	(bad)  
   14001e681:	add    BYTE PTR [rax+rax*1+0x43],ch
   14001e685:	add    BYTE PTR [rdi+0x0],ch
   14001e688:	jo     0x14001e68a
   14001e68a:	jns    0x14001e68c
   14001e68c:	jb     0x14001e68e
   14001e68e:	imul   eax,DWORD PTR [rax],0x680067
   14001e694:	je     0x14001e696
   14001e696:	add    BYTE PTR [rax],al
   14001e698:	test   eax,0x4d002000
   14001e69d:	add    BYTE PTR [rcx+0x0],ch
   14001e6a0:	movsxd eax,DWORD PTR [rax]
   14001e6a2:	jb     0x14001e6a4
   14001e6a4:	outs   dx,DWORD PTR ds:[rsi]
   14001e6a5:	add    BYTE PTR [rbx+0x0],dh
   14001e6a8:	outs   dx,DWORD PTR ds:[rsi]
   14001e6a9:	add    BYTE PTR [rsi+0x0],ah
   14001e6ac:	je     0x14001e6ae
   14001e6ae:	and    BYTE PTR [rax],al
   14001e6b0:	rex.XB add BYTE PTR [r15+0x0],bpl
   14001e6b4:	jb     0x14001e6b6
   14001e6b6:	jo     0x14001e6b8
   14001e6b8:	outs   dx,DWORD PTR ds:[rsi]
   14001e6b9:	add    BYTE PTR [rdx+0x0],dh
   14001e6bc:	(bad)  
   14001e6bd:	add    BYTE PTR [rax+rax*1+0x69],dh
   14001e6c1:	add    BYTE PTR [rdi+0x0],ch
   14001e6c4:	outs   dx,BYTE PTR ds:[rsi]
   14001e6c5:	add    BYTE PTR [rsi],ch
   14001e6c7:	add    BYTE PTR [rax],ah
   14001e6c9:	add    BYTE PTR [rcx+0x0],al
   14001e6cc:	ins    BYTE PTR es:[rdi],dx
   14001e6cd:	add    BYTE PTR [rax+rax*1+0x20],ch
   14001e6d1:	add    BYTE PTR [rdx+0x0],dh
   14001e6d4:	imul   eax,DWORD PTR [rax],0x680067
   14001e6da:	je     0x14001e6dc
   14001e6dc:	jae    0x14001e6de
   14001e6de:	and    BYTE PTR [rax],al
   14001e6e0:	jb     0x14001e6e2
   14001e6e2:	add    BYTE PTR gs:[rbx+0x0],dh
   14001e6e6:	add    BYTE PTR gs:[rdx+0x0],dh
   14001e6ea:	jbe    0x14001e6ec
   14001e6ec:	add    BYTE PTR gs:[rax+rax*1+0x2e],ah
   14001e6f1:	add    BYTE PTR [rax],al
   14001e6f3:	add    BYTE PTR [rsi],bh
   14001e6f5:	add    BYTE PTR [rbx],cl
   14001e6f7:	add    BYTE PTR [rcx],al
   14001e6f9:	add    BYTE PTR [rdi+0x0],cl
   14001e6fc:	jb     0x14001e6fe
   14001e6fe:	imul   eax,DWORD PTR [rax],0x690067
   14001e704:	outs   dx,BYTE PTR ds:[rsi]
   14001e705:	add    BYTE PTR [rcx+0x0],ah
   14001e708:	ins    BYTE PTR es:[rdi],dx
   14001e709:	add    BYTE PTR [rsi+0x0],al
   14001e70c:	imul   eax,DWORD PTR [rax],0x65006c
   14001e712:	outs   dx,BYTE PTR ds:[rsi]
   14001e713:	add    BYTE PTR [rcx+0x0],ah
   14001e716:	ins    DWORD PTR es:[rdi],dx
   14001e717:	add    BYTE PTR [rbp+0x0],ah
   14001e71a:	add    BYTE PTR [rax],al
   14001e71c:	(bad)  
   14001e71d:	add    BYTE PTR [rax+0x0],dh
   14001e720:	jo     0x14001e722
   14001e722:	movsxd eax,DWORD PTR [rax]
   14001e724:	ins    DWORD PTR es:[rdi],dx
   14001e725:	add    BYTE PTR [rax+rax*1+0x2e],ah
   14001e729:	add    BYTE PTR [rbp+0x0],ah
   14001e72c:	js     0x14001e72e
   14001e72e:	add    BYTE PTR gs:[rax],al
   14001e731:	add    BYTE PTR [rax],al
   14001e733:	add    BYTE PTR [rax+rax*1+0x1e],bl
   14001e737:	add    BYTE PTR [rcx],al
   14001e739:	add    BYTE PTR [rax+0x0],dl
   14001e73c:	jb     0x14001e73e
   14001e73e:	outs   dx,DWORD PTR ds:[rsi]
   14001e73f:	add    BYTE PTR [rax+rax*1+0x75],ah
   14001e743:	add    BYTE PTR [rbx+0x0],ah
   14001e746:	je     0x14001e748
   14001e748:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   14001e74c:	ins    DWORD PTR es:[rdi],dx
   14001e74d:	add    BYTE PTR [rbp+0x0],ah
   14001e750:	add    BYTE PTR [rax],al
   14001e752:	add    BYTE PTR [rax],al
   14001e754:	rex.WB add BYTE PTR [r14+0x0],bpl
   14001e758:	je     0x14001e75a
   14001e75a:	add    BYTE PTR gs:[rdx+0x0],dh
   14001e75e:	outs   dx,BYTE PTR ds:[rsi]
   14001e75f:	add    BYTE PTR [rbp+0x0],ah
   14001e762:	je     0x14001e764
   14001e764:	and    BYTE PTR [rax],al
   14001e766:	rex.WB add BYTE PTR [r14+0x0],bpl
   14001e76a:	data16 add BYTE PTR [rdi+0x0],ch
   14001e76e:	jb     0x14001e770
   14001e770:	ins    DWORD PTR es:[rdi],dx
   14001e771:	add    BYTE PTR [rcx+0x0],ah
   14001e774:	je     0x14001e776
   14001e776:	imul   eax,DWORD PTR [rax],0x6e006f
   14001e77c:	and    BYTE PTR [rax],al
   14001e77e:	push   rbx
   14001e77f:	add    BYTE PTR [rbp+0x0],ah
   14001e782:	jb     0x14001e784
   14001e784:	jbe    0x14001e786
   14001e786:	imul   eax,DWORD PTR [rax],0x650063
   14001e78c:	jae    0x14001e78e
   14001e78e:	add    BYTE PTR [rax],al
   14001e790:	add    BYTE PTR [rax],r10b
   14001e793:	add    BYTE PTR [rcx],al
   14001e795:	add    BYTE PTR [rax+0x0],dl
   14001e798:	jb     0x14001e79a
   14001e79a:	outs   dx,DWORD PTR ds:[rsi]
   14001e79b:	add    BYTE PTR [rax+rax*1+0x75],ah
   14001e79f:	add    BYTE PTR [rbx+0x0],ah
   14001e7a2:	je     0x14001e7a4
   14001e7a4:	push   rsi
   14001e7a5:	add    BYTE PTR [rbp+0x0],ah
   14001e7a8:	jb     0x14001e7aa
   14001e7aa:	jae    0x14001e7ac
   14001e7ac:	imul   eax,DWORD PTR [rax],0x6e006f
   14001e7b2:	add    BYTE PTR [rax],al
   14001e7b4:	xor    DWORD PTR [rax],eax
   14001e7b6:	xor    BYTE PTR [rax],al
   14001e7b8:	add    BYTE PTR cs:[rax],dh
   14001e7bb:	add    BYTE PTR [rsi],ch
   14001e7bd:	add    BYTE PTR [rcx],dh
   14001e7bf:	add    BYTE PTR [rax+rax*1],dh
   14001e7c2:	xor    eax,DWORD PTR [rax]
   14001e7c4:	xor    eax,0x2e003800
   14001e7c9:	add    BYTE PTR [rcx],dh
   14001e7cb:	add    BYTE PTR [rax],dh
   14001e7cd:	add    BYTE PTR [rax],dh
   14001e7cf:	add    BYTE PTR [rax],dh
   14001e7d1:	add    BYTE PTR [rax],al
   14001e7d3:	add    BYTE PTR [rax+rax*1+0x0],al
   14001e7d7:	add    BYTE PTR [rcx],al
   14001e7d9:	add    BYTE PTR [rsi+0x0],dl
   14001e7dc:	(bad)  
   14001e7dd:	add    BYTE PTR [rdx+0x0],dh
   14001e7e0:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14001e7e4:	ins    BYTE PTR es:[rdi],dx
   14001e7e5:	add    BYTE PTR [rbp+0x0],ah
   14001e7e8:	rex.WB add BYTE PTR [r14+0x0],bpl
   14001e7ec:	data16 add BYTE PTR [rdi+0x0],ch
   14001e7f0:	add    BYTE PTR [rax],al
   14001e7f2:	add    BYTE PTR [rax],al
   14001e7f4:	and    al,0x0
   14001e7f6:	add    al,0x0
   14001e7f8:	add    BYTE PTR [rax],al
   14001e7fa:	push   rsp
   14001e7fb:	add    BYTE PTR [rdx+0x0],dh
   14001e7fe:	(bad)  
   14001e7ff:	add    BYTE PTR [rsi+0x0],ch
   14001e802:	jae    0x14001e804
   14001e804:	ins    BYTE PTR es:[rdi],dx
   14001e805:	add    BYTE PTR [rcx+0x0],ah
   14001e808:	je     0x14001e80a
   14001e80a:	imul   eax,DWORD PTR [rax],0x6e006f
   14001e810:	add    BYTE PTR [rax],al
   14001e812:	add    BYTE PTR [rax],al
   14001e814:	add    BYTE PTR [rax],al
   14001e816:	mov    al,0x4
	...
   14001e820:	int    0xfe
   14001e822:	int    0xfe
   14001e824:	enter  0x0,0x0
   14001e828:	add    BYTE PTR [rax],al
   14001e82a:	add    DWORD PTR [rax],eax
   14001e82c:	add    BYTE PTR [rax],al
   14001e82e:	add    BYTE PTR [rax],al
   14001e830:	adc    DWORD PTR [rax],eax
   14001e832:	add    BYTE PTR [rax],al
   14001e834:	add    BYTE PTR [rax],al
   14001e836:	add    BYTE PTR [rax],al
   14001e838:	add    al,BYTE PTR [rax]
   14001e83a:	add    BYTE PTR [rax],al
   14001e83c:	imul   edx,DWORD PTR [rcx+0x71bd135f],0x737c0540
   14001e846:	mov    cs,WORD PTR [rax-0x76]
   14001e849:	gs sahf 
   14001e84b:	in     al,dx
   14001e84c:	in     al,0x74
   14001e84e:	or     al,0xad
   14001e850:	pop    rdx
   14001e851:	in     al,dx
   14001e852:	scas   al,BYTE PTR es:[rdi]
   14001e853:	rex.RB pop r15
   14001e855:	and    al,0x67
   14001e857:	xchg   ebp,eax
   14001e858:	(bad)  
   14001e859:	loope  0x14001e875
   14001e85b:	hlt    
	...
   14001e874:	mov    BYTE PTR [rax],al
   14001e876:	add    BYTE PTR [rax],al
   14001e878:	(bad)  
   14001e879:	add    BYTE PTR [rax],al
   14001e87b:	add    BYTE PTR [rax+0x8000000],bl
   14001e881:	add    BYTE PTR [rax],al
   14001e883:	add    BYTE PTR [rax+0xe000000],ah
   14001e889:	add    BYTE PTR [rax],al
   14001e88b:	add    BYTE PTR [rax+0x4000000],dh
	...
   14001e899:	add    BYTE PTR [rax],al
   14001e89b:	add    BYTE PTR [rax+0xc000000],bh
   14001e8a1:	add    BYTE PTR [rax],al
   14001e8a3:	add    BYTE PTR [rax],al
   14001e8a5:	add    BYTE PTR [rax],al
   14001e8a7:	add    BYTE PTR [rbp+0x0],cl
   14001e8aa:	push   rbp
   14001e8ab:	add    BYTE PTR [rcx+0x0],cl
	...
   14001e8b6:	add    BYTE PTR [rax],al
   14001e8b8:	adc    BYTE PTR [rax],al
   14001e8ba:	add    BYTE PTR [rax],al
   14001e8bc:	sbb    BYTE PTR [rax],al
   14001e8be:	add    BYTE PTR [rax],al
   14001e8c0:	rex.WRB add BYTE PTR [r13+0x0],r10b
   14001e8c4:	rex.WB add BYTE PTR [r8],al
	...
   14001e8cf:	add    BYTE PTR [rax],dl
   14001e8d1:	add    BYTE PTR [rax],al
   14001e8d3:	add    BYTE PTR [rax],al
   14001e8d5:	add    BYTE PTR [rax],al
   14001e8d7:	add    BYTE PTR [rbp+0x0],ah
   14001e8da:	outs   dx,BYTE PTR ds:[rsi]
   14001e8db:	add    BYTE PTR [rip+0x53005500],ch        # 0x193023de1
   14001e8e1:	add    BYTE PTR [rax],al
   14001e8e3:	add    BYTE PTR [rax],al
   14001e8e5:	add    BYTE PTR [rax],al
	...

Disassembly of section .reloc:

000000014001f000 <.reloc>:
   14001f000:	add    BYTE PTR [rax],ah
   14001f002:	add    DWORD PTR [rax],eax
   14001f004:	pop    rax
   14001f005:	add    BYTE PTR [rax],al
   14001f007:	add    BYTE PTR [rax],al
   14001f009:	movabs al,ds:0xa020a018a010a008
   14001f012:	sub    BYTE PTR [rax-0x5fc75fd0],ah
   14001f018:	movabs al,ds:0xa060a058a050a048
   14001f022:	push   0x78a070a0
   14001f027:	movabs al,ds:0xa098a090a088a080
   14001f030:	movabs al,ds:0xc0a0b8a0b0a0a8a0
   14001f039:	movabs al,ds:0xa138a0d8a0d0a0c8
   14001f042:	push   rax
   14001f043:	movabs eax,ds:0xa540a538a160a158
   14001f04c:	push   rax
   14001f04d:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001f04e:	pop    rax
   14001f04f:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001f050:	(bad)  
   14001f051:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001f052:	push   0xffffffff88a580a5
   14001f057:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001f058:	add    al,al
   14001f05a:	add    DWORD PTR [rax],eax
   14001f05c:	or     al,0x0
   14001f05e:	add    BYTE PTR [rax],al
   14001f060:	.byte 0x0
   14001f061:	.byte 0xa0
   14001f062:	.byte 0x18
   14001f063:	.byte 0xa0
