
cf66de1f114f7c382804fbdddd4ae70aa07ecf1df324e95e78bb41139b50cf72.exe:     file format pei-x86-64


Disassembly of section .text:

0000000140001000 <.text>:
   140001000:	and    BYTE PTR [rax+0x1],cl
   140001003:	add    BYTE PTR [rax],al
   140001005:	add    BYTE PTR [rax],al
   140001007:	add    BYTE PTR [rdx],dl
   140001009:	add    QWORD PTR [rax],rax
   14000100c:	add    BYTE PTR [rax],al
   14000100e:	add    BYTE PTR [rax],al
   140001010:	xor    BYTE PTR [rax+0x1],cl
	...
   14000101f:	add    ah,cl
   140001021:	rex.RX add DWORD PTR [rax],r8d
   140001024:	add    BYTE PTR [rax],al
   140001026:	add    BYTE PTR [rax],al
   140001028:	loop   0x140001070
   14000102a:	add    DWORD PTR [rax],eax
   14000102c:	add    BYTE PTR [rax],al
   14000102e:	add    BYTE PTR [rax],al
   140001030:	clc    
   140001031:	rex.RX add DWORD PTR [rax],r8d
   140001034:	add    BYTE PTR [rax],al
   140001036:	add    BYTE PTR [rax],al
   140001038:	or     BYTE PTR [rdi+0x1],al
   14000103b:	add    BYTE PTR [rax],al
   14000103d:	add    BYTE PTR [rax],al
   14000103f:	add    BYTE PTR [rdx],bl
   140001041:	rex.RXB add DWORD PTR [r8],r8d
   140001044:	add    BYTE PTR [rax],al
   140001046:	add    BYTE PTR [rax],al
   140001048:	xor    BYTE PTR [rdi+0x1],al
   14000104b:	add    BYTE PTR [rax],al
   14000104d:	add    BYTE PTR [rax],al
   14000104f:	add    BYTE PTR [rax],bh
   140001051:	add    QWORD PTR [r8],r8
   140001054:	add    BYTE PTR [rax],al
   140001056:	add    BYTE PTR [rax],al
   140001058:	sub    BYTE PTR [rbp+0x1],cl
   14000105b:	add    BYTE PTR [rax],al
   14000105d:	add    BYTE PTR [rax],al
   14000105f:	add    BYTE PTR [rsi],dl
   140001061:	add    QWORD PTR [r8],r8
   140001064:	add    BYTE PTR [rax],al
   140001066:	add    BYTE PTR [rax],al
   140001068:	mov    esp,0x146
   14000106d:	add    BYTE PTR [rax],al
   14000106f:	add    ah,dh
   140001071:	add    QWORD PTR [rax],r8
   140001074:	add    BYTE PTR [rax],al
   140001076:	add    BYTE PTR [rax],al
   140001078:	in     al,0x4c
   14000107a:	add    DWORD PTR [rax],eax
   14000107c:	add    BYTE PTR [rax],al
   14000107e:	add    BYTE PTR [rax],al
   140001080:	(bad)  
   140001081:	add    QWORD PTR [rax],r8
   140001084:	add    BYTE PTR [rax],al
   140001086:	add    BYTE PTR [rax],al
   140001088:	(bad)  
   140001089:	add    QWORD PTR [rax],r8
   14000108c:	add    BYTE PTR [rax],al
   14000108e:	add    BYTE PTR [rax],al
   140001090:	scas   al,BYTE PTR es:[rdi]
   140001091:	add    QWORD PTR [rax],r8
   140001094:	add    BYTE PTR [rax],al
   140001096:	add    BYTE PTR [rax],al
   140001098:	sahf   
   140001099:	add    QWORD PTR [rax],r8
   14000109c:	add    BYTE PTR [rax],al
   14000109e:	add    BYTE PTR [rax],al
   1400010a0:	nop
   1400010a1:	add    QWORD PTR [rax],r8
   1400010a4:	add    BYTE PTR [rax],al
   1400010a6:	add    BYTE PTR [rax],al
   1400010a8:	jle    0x1400010f6
   1400010aa:	add    DWORD PTR [rax],eax
   1400010ac:	add    BYTE PTR [rax],al
   1400010ae:	add    BYTE PTR [rax],al
   1400010b0:	(bad)  
   1400010b1:	add    QWORD PTR [rax],r8
   1400010b4:	add    BYTE PTR [rax],al
   1400010b6:	add    BYTE PTR [rax],al
   1400010b8:	rex.R
   1400010b9:	add    QWORD PTR [rax],r8
   1400010bc:	add    BYTE PTR [rax],al
   1400010be:	add    BYTE PTR [rax],al
   1400010c0:	stos   BYTE PTR es:[rdi],al
   1400010c1:	rex.RX add DWORD PTR [rax],r8d
   1400010c4:	add    BYTE PTR [rax],al
   1400010c6:	add    BYTE PTR [rax],al
   1400010c8:	sahf   
   1400010c9:	rex.RX add DWORD PTR [rax],r8d
   1400010cc:	add    BYTE PTR [rax],al
   1400010ce:	add    BYTE PTR [rax],al
   1400010d0:	(bad)  
   1400010d1:	add    QWORD PTR [r8],r8
   1400010d4:	add    BYTE PTR [rax],al
   1400010d6:	add    BYTE PTR [rax],al
   1400010d8:	nop
   1400010d9:	rex.RX add DWORD PTR [rax],r8d
   1400010dc:	add    BYTE PTR [rax],al
   1400010de:	add    BYTE PTR [rax],al
   1400010e0:	push   rdx
   1400010e1:	add    QWORD PTR [rax],rax
   1400010e4:	add    BYTE PTR [rax],al
   1400010e6:	add    BYTE PTR [rax],al
   1400010e8:	add    QWORD PTR fs:[rax],rax
   1400010ec:	add    BYTE PTR [rax],al
   1400010ee:	add    BYTE PTR [rax],al
   1400010f0:	(bad)  
   1400010f1:	add    QWORD PTR [rax],rax
   1400010f4:	add    BYTE PTR [rax],al
   1400010f6:	add    BYTE PTR [rax],al
   1400010f8:	xchg   esi,eax
   1400010f9:	add    QWORD PTR [rax],rax
   1400010fc:	add    BYTE PTR [rax],al
   1400010fe:	add    BYTE PTR [rax],al
   140001100:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140001101:	add    QWORD PTR [rax],rax
   140001104:	add    BYTE PTR [rax],al
   140001106:	add    BYTE PTR [rax],al
   140001108:	mov    ah,0x48
   14000110a:	add    DWORD PTR [rax],eax
   14000110c:	add    BYTE PTR [rax],al
   14000110e:	add    BYTE PTR [rax],al
   140001110:	ror    BYTE PTR [rax+0x1],0x0
   140001114:	add    BYTE PTR [rax],al
   140001116:	add    BYTE PTR [rax],al
   140001118:	ror    BYTE PTR [rax+0x1],1
   14000111b:	add    BYTE PTR [rax],al
   14000111d:	add    BYTE PTR [rax],al
   14000111f:	add    dh,bl
   140001121:	add    QWORD PTR [rax],rax
   140001124:	add    BYTE PTR [rax],al
   140001126:	add    BYTE PTR [rax],al
   140001128:	clc    
   140001129:	add    QWORD PTR [rax],rax
   14000112c:	add    BYTE PTR [rax],al
   14000112e:	add    BYTE PTR [rax],al
   140001130:	adc    cl,BYTE PTR [rcx+0x1]
   140001133:	add    BYTE PTR [rax],al
   140001135:	add    BYTE PTR [rax],al
   140001137:	add    BYTE PTR [rcx+rcx*2],ah
   14000113a:	add    DWORD PTR [rax],eax
   14000113c:	add    BYTE PTR [rax],al
   14000113e:	add    BYTE PTR [rax],al
   140001140:	rex.WR
   140001141:	add    QWORD PTR [r8],rax
   140001144:	add    BYTE PTR [rax],al
   140001146:	add    BYTE PTR [rax],al
   140001148:	pop    rdx
   140001149:	add    QWORD PTR [r8],rax
   14000114c:	add    BYTE PTR [rax],al
   14000114e:	add    BYTE PTR [rax],al
   140001150:	ins    BYTE PTR es:[rdi],dx
   140001151:	add    QWORD PTR [r8],rax
   140001154:	add    BYTE PTR [rax],al
   140001156:	add    BYTE PTR [rax],al
   140001158:	test   BYTE PTR [rcx+0x1],cl
   14000115b:	add    BYTE PTR [rax],al
   14000115d:	add    BYTE PTR [rax],al
   14000115f:	add    BYTE PTR [rcx+rcx*2+0x1],dl
   140001166:	add    BYTE PTR [rax],al
   140001168:	movabs ds:0xb000000000000149,al
   140001171:	add    QWORD PTR [r8],rax
   140001174:	add    BYTE PTR [rax],al
   140001176:	add    BYTE PTR [rax],al
   140001178:	mov    edx,0x149
   14000117d:	add    BYTE PTR [rax],al
   14000117f:	add    dl,cl
   140001181:	add    QWORD PTR [r8],rax
   140001184:	add    BYTE PTR [rax],al
   140001186:	add    BYTE PTR [rax],al
   140001188:	loopne 0x1400011d3
   14000118a:	add    DWORD PTR [rax],eax
   14000118c:	add    BYTE PTR [rax],al
   14000118e:	add    BYTE PTR [rax],al
   140001190:	in     al,dx
   140001191:	add    QWORD PTR [r8],rax
   140001194:	add    BYTE PTR [rax],al
   140001196:	add    BYTE PTR [rax],al
   140001198:	cli    
   140001199:	add    QWORD PTR [r8],rax
   14000119c:	add    BYTE PTR [rax],al
   14000119e:	add    BYTE PTR [rax],al
   1400011a0:	or     BYTE PTR [rdx+0x1],cl
   1400011a3:	add    BYTE PTR [rax],al
   1400011a5:	add    BYTE PTR [rax],al
   1400011a7:	add    BYTE PTR [rdx],ah
   1400011a9:	rex.WX add QWORD PTR [rax],rax
   1400011ac:	add    BYTE PTR [rax],al
   1400011ae:	add    BYTE PTR [rax],al
   1400011b0:	xor    cl,BYTE PTR [rdx+0x1]
   1400011b3:	add    BYTE PTR [rax],al
   1400011b5:	add    BYTE PTR [rax],al
   1400011b7:	add    BYTE PTR [rax+0x4a],cl
   1400011ba:	add    DWORD PTR [rax],eax
   1400011bc:	add    BYTE PTR [rax],al
   1400011be:	add    BYTE PTR [rax],al
   1400011c0:	(bad)  
   1400011c1:	rex.WX add QWORD PTR [rax],rax
   1400011c4:	add    BYTE PTR [rax],al
   1400011c6:	add    BYTE PTR [rax],al
   1400011c8:	jbe    0x140001214
   1400011ca:	add    DWORD PTR [rax],eax
   1400011cc:	add    BYTE PTR [rax],al
   1400011ce:	add    BYTE PTR [rax],al
   1400011d0:	mov    cl,BYTE PTR [rdx+0x1]
   1400011d3:	add    BYTE PTR [rax],al
   1400011d5:	add    BYTE PTR [rax],al
   1400011d7:	add    BYTE PTR [rsi+0x14a],ah
   1400011dd:	add    BYTE PTR [rax],al
   1400011df:	add    BYTE PTR [rdx+0x14a],bh
   1400011e5:	add    BYTE PTR [rax],al
   1400011e7:	add    dh,cl
   1400011e9:	rex.WX add QWORD PTR [rax],rax
   1400011ec:	add    BYTE PTR [rax],al
   1400011ee:	add    BYTE PTR [rax],al
   1400011f0:	call   0x14000133f
   1400011f5:	add    BYTE PTR [rax],al
   1400011f7:	add    ah,bh
   1400011f9:	rex.WX add QWORD PTR [rax],rax
   1400011fc:	add    BYTE PTR [rax],al
   1400011fe:	add    BYTE PTR [rax],al
   140001200:	adc    al,0x4b
   140001202:	add    DWORD PTR [rax],eax
   140001204:	add    BYTE PTR [rax],al
   140001206:	add    BYTE PTR [rax],al
   140001208:	sub    al,0x4b
   14000120a:	add    DWORD PTR [rax],eax
   14000120c:	add    BYTE PTR [rax],al
   14000120e:	add    BYTE PTR [rax],al
   140001210:	rex.WXB add QWORD PTR ds:[r8],rax
   140001214:	add    BYTE PTR [rax],al
   140001216:	add    BYTE PTR [rax],al
   140001218:	rex.RX
   140001219:	rex.WXB add QWORD PTR [r8],rax
   14000121c:	add    BYTE PTR [rax],al
   14000121e:	add    BYTE PTR [rax],al
   140001220:	push   rdx
   140001221:	rex.WXB add QWORD PTR [r8],rax
   140001224:	add    BYTE PTR [rax],al
   140001226:	add    BYTE PTR [rax],al
   140001228:	pop    rsp
   140001229:	rex.WXB add QWORD PTR [r8],rax
   14000122c:	add    BYTE PTR [rax],al
   14000122e:	add    BYTE PTR [rax],al
   140001230:	push   0x14b
   140001235:	add    BYTE PTR [rax],al
   140001237:	add    BYTE PTR [rdx+0x4b],bh
   14000123a:	add    DWORD PTR [rax],eax
   14000123c:	add    BYTE PTR [rax],al
   14000123e:	add    BYTE PTR [rax],al
   140001240:	xchg   BYTE PTR [rbx+0x1],cl
   140001243:	add    BYTE PTR [rax],al
   140001245:	add    BYTE PTR [rax],al
   140001247:	add    BYTE PTR [rax+0x14b],bl
   14000124d:	add    BYTE PTR [rax],al
   14000124f:	add    BYTE PTR [rbx+rcx*2+0x1],ch
   140001256:	add    BYTE PTR [rax],al
   140001258:	ret    0x14b
   14000125b:	add    BYTE PTR [rax],al
   14000125d:	add    BYTE PTR [rax],al
   14000125f:	add    dh,cl
   140001261:	rex.WXB add QWORD PTR [r8],rax
   140001264:	add    BYTE PTR [rax],al
   140001266:	add    BYTE PTR [rax],al
   140001268:	fmul   QWORD PTR [rbx+0x1]
   14000126b:	add    BYTE PTR [rax],al
   14000126d:	add    BYTE PTR [rax],al
   14000126f:	add    ah,ch
   140001271:	rex.WXB add QWORD PTR [r8],rax
   140001274:	add    BYTE PTR [rax],al
   140001276:	add    BYTE PTR [rax],al
   140001278:	add    cl,BYTE PTR [rcx+rax*1+0x0]
   14000127c:	add    BYTE PTR [rax],al
   14000127e:	add    BYTE PTR [rax],al
   140001280:	adc    al,0x4c
   140001282:	add    DWORD PTR [rax],eax
   140001284:	add    BYTE PTR [rax],al
   140001286:	add    BYTE PTR [rax],al
   140001288:	add    QWORD PTR es:[rax],r8
   14000128c:	add    BYTE PTR [rax],al
   14000128e:	add    BYTE PTR [rax],al
   140001290:	add    QWORD PTR ss:[rax],r8
   140001294:	add    BYTE PTR [rax],al
   140001296:	add    BYTE PTR [rax],al
   140001298:	rex.W
   140001299:	add    QWORD PTR [r8],r8
	...
   1400012a8:	(bad)  
   1400012a9:	add    BYTE PTR [rax],al
   1400012ab:	add    BYTE PTR [rax],al
   1400012ad:	add    BYTE PTR [rax],al
   1400012af:	or     al,0x0
   1400012b2:	add    BYTE PTR [rax],al
   1400012b4:	add    BYTE PTR [rax],al
   1400012b6:	add    BYTE PTR [rax+0x6],al
   1400012bc:	add    BYTE PTR [rax],al
   1400012be:	add    BYTE PTR [rax+0x0],al
   1400012c4:	add    BYTE PTR [rax],al
   1400012c6:	add    BYTE PTR [rax],al
   1400012c8:	push   rax
   1400012c9:	rex.RXB add DWORD PTR [r8],r8d
   1400012cc:	add    BYTE PTR [rax],al
   1400012ce:	add    BYTE PTR [rax],al
   1400012d0:	pop    rsi
   1400012d1:	rex.RXB add DWORD PTR [r8],r8d
	...
   1400012e0:	enter  0x147,0x0
	...
   1400012f0:	js     0x140001339
   1400012f2:	add    DWORD PTR [rax],eax
   1400012f4:	add    BYTE PTR [rax],al
   1400012f6:	add    BYTE PTR [rax],al
   1400012f8:	sahf   
   1400012f9:	rex.RXB add DWORD PTR [r8],r8d
   1400012fc:	add    BYTE PTR [rax],al
   1400012fe:	add    BYTE PTR [rax],al
   140001300:	mov    WORD PTR [rdi+0x1],es
	...
   14000130f:	add    ah,ch
   140001311:	rex.RXB add DWORD PTR [r8],r8d
	...
   140001338:	and    dl,al
   14000133a:	add    BYTE PTR [rax+0x1],al
   14000133d:	add    BYTE PTR [rax],al
   14000133f:	add    BYTE PTR [rbx+rbx*8+0x0],al
   140001343:	rex add DWORD PTR [rax],eax
   140001346:	add    BYTE PTR [rax],al
   140001348:	mov    al,0x23
   14000134a:	add    DWORD PTR [rax+0x1],eax
   14000134d:	add    BYTE PTR [rax],al
   14000134f:	add    BYTE PTR [rdi+rbx*4+0x14000],ah
	...
   140001366:	add    BYTE PTR [rax],al
   140001368:	add    al,0x33
   14000136a:	add    DWORD PTR [rax+0x1],eax
   14000136d:	add    BYTE PTR [rax],al
   14000136f:	add    BYTE PTR [rax+0x1400124],bl
	...
   140001391:	add    BYTE PTR [rax],al
   140001393:	add    ch,dh
   140001395:	adc    al,0x52
   140001397:	push   rdi
   140001398:	add    BYTE PTR [rax],al
   14000139a:	add    BYTE PTR [rax],al
   14000139c:	add    al,BYTE PTR [rax]
   14000139e:	add    BYTE PTR [rax],al
   1400013a0:	sub    eax,DWORD PTR [rax]
   1400013a2:	add    BYTE PTR [rax],al
   1400013a4:	mov    r8b,BYTE PTR [rax]
   1400013a7:	add    BYTE PTR [rsi+rdi*2+0x0],al
   1400013ab:	add    BYTE PTR [rax],al
   1400013ad:	add    BYTE PTR [rax],al
   1400013af:	add    BYTE PTR [rbx+0x6f],al
   1400013b2:	jb     0x1400013f9
   1400013b4:	js     0x14000141f
   1400013b6:	je     0x140001408
   1400013b8:	jb     0x140001429
   1400013ba:	movsxd esp,DWORD PTR [rbp+0x73]
   1400013bd:	jae    0x1400013bf
   1400013bf:	add    BYTE PTR [rdx+0x0],dh
   1400013c2:	jne    0x1400013c4
   1400013c4:	outs   dx,BYTE PTR ds:[rsi]
   1400013c5:	add    BYTE PTR [rax+rax*1+0x69],dh
   1400013c9:	add    BYTE PTR [rbp+0x0],ch
   1400013cc:	add    BYTE PTR gs:[rax],ah
   1400013cf:	add    BYTE PTR [rbp+0x0],ah
   1400013d2:	jb     0x1400013d4
   1400013d4:	jb     0x1400013d6
   1400013d6:	outs   dx,DWORD PTR ds:[rsi]
   1400013d7:	add    BYTE PTR [rdx+0x0],dh
   1400013da:	and    BYTE PTR [rax],al
   1400013dc:	add    BYTE PTR [rax],al
   1400013de:	add    BYTE PTR [rax],al
   1400013e0:	or     eax,0xa00
   1400013e5:	add    BYTE PTR [rax],al
   1400013e7:	add    BYTE PTR [rax+rax*1+0x4c],dl
   1400013eb:	add    BYTE PTR [rdi+0x0],cl
   1400013ee:	push   rbx
   1400013ef:	add    BYTE PTR [rbx+0x0],dl
   1400013f2:	and    BYTE PTR [rax],al
   1400013f4:	add    BYTE PTR gs:[rdx+0x0],dh
   1400013f8:	jb     0x1400013fa
   1400013fa:	outs   dx,DWORD PTR ds:[rsi]
   1400013fb:	add    BYTE PTR [rdx+0x0],dh
   1400013fe:	or     eax,0xa00
   140001403:	add    BYTE PTR [rax],al
   140001405:	add    BYTE PTR [rax],al
   140001407:	add    BYTE PTR [rbx+0x0],dl
   14000140a:	rex.WB add BYTE PTR [r14+0x0],cl
   14000140e:	rex.RXB add BYTE PTR [r8],r12b
   140001411:	add    BYTE PTR [rbp+0x0],ah
   140001414:	jb     0x140001416
   140001416:	jb     0x140001418
   140001418:	outs   dx,DWORD PTR ds:[rsi]
   140001419:	add    BYTE PTR [rdx+0x0],dh
   14000141c:	or     eax,0xa00
   140001421:	add    BYTE PTR [rax],al
   140001423:	add    BYTE PTR [rax],al
   140001425:	add    BYTE PTR [rax],al
   140001427:	add    BYTE PTR [rax+rax*1+0x4f],al
   14000142b:	add    BYTE PTR [rbp+0x0],cl
   14000142e:	add    BYTE PTR [r9+0x0],cl
   140001432:	rex.WRX add BYTE PTR [rax],r12b
   140001435:	add    BYTE PTR [rbp+0x0],ah
   140001438:	jb     0x14000143a
   14000143a:	jb     0x14000143c
   14000143c:	outs   dx,DWORD PTR ds:[rsi]
   14000143d:	add    BYTE PTR [rdx+0x0],dh
   140001440:	or     eax,0xa00
	...
   14000144d:	add    BYTE PTR [rax],al
   14000144f:	add    BYTE PTR [rdx+0x0],dl
   140001452:	add    BYTE PTR ss:[rax],dh
   140001455:	add    BYTE PTR [rbx],dh
   140001457:	add    BYTE PTR [rbx],dh
   140001459:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d001e5f
   14000145f:	add    BYTE PTR [rax],ah
   140001461:	add    BYTE PTR [rcx+0x0],al
   140001464:	je     0x140001466
   140001466:	je     0x140001468
   140001468:	add    BYTE PTR gs:[rbp+0x0],ch
   14000146c:	jo     0x14000146e
   14000146e:	je     0x140001470
   140001470:	and    BYTE PTR [rax],al
   140001472:	je     0x140001474
   140001474:	outs   dx,DWORD PTR ds:[rsi]
   140001475:	add    BYTE PTR [rax],ah
   140001477:	add    BYTE PTR [rbp+0x0],dh
   14000147a:	jae    0x14000147c
   14000147c:	add    BYTE PTR gs:[rax],ah
   14000147f:	add    BYTE PTR [rbp+0x0],cl
   140001482:	push   rbx
   140001483:	add    BYTE PTR [rcx+0x0],cl
   140001486:	rex.WR add BYTE PTR [rax],r12b
   140001489:	add    BYTE PTR [rbx+0x0],ah
   14000148c:	outs   dx,DWORD PTR ds:[rsi]
   14000148d:	add    BYTE PTR [rax+rax*1+0x65],ah
   140001491:	add    BYTE PTR [rax],ah
   140001493:	add    BYTE PTR [rsi+0x0],ah
   140001496:	jb     0x140001498
   140001498:	outs   dx,DWORD PTR ds:[rsi]
   140001499:	add    BYTE PTR [rbp+0x0],ch
   14000149c:	and    BYTE PTR [rax],al
   14000149e:	je     0x1400014a0
   1400014a0:	push   0x73006900
   1400014a5:	add    BYTE PTR [rax],ah
   1400014a7:	add    BYTE PTR [rcx+0x0],ah
   1400014aa:	jae    0x1400014ac
   1400014ac:	jae    0x1400014ae
   1400014ae:	add    BYTE PTR gs:[rbp+0x0],ch
   1400014b2:	(bad)  
   1400014b3:	add    BYTE PTR [rax+rax*1+0x79],ch
   1400014b7:	add    BYTE PTR [rax],ah
   1400014b9:	add    BYTE PTR [rax+rax*1+0x75],ah
   1400014bd:	add    BYTE PTR [rdx+0x0],dh
   1400014c0:	imul   eax,DWORD PTR [rax],0x67006e
   1400014c6:	and    BYTE PTR [rax],al
   1400014c8:	outs   dx,BYTE PTR ds:[rsi]
   1400014c9:	add    BYTE PTR [rcx+0x0],ah
   1400014cc:	je     0x1400014ce
   1400014ce:	imul   eax,DWORD PTR [rax],0x650076
   1400014d4:	and    BYTE PTR [rax],al
   1400014d6:	movsxd eax,DWORD PTR [rax]
   1400014d8:	outs   dx,DWORD PTR ds:[rsi]
   1400014d9:	add    BYTE PTR [rax+rax*1+0x65],ah
   1400014dd:	add    BYTE PTR [rax],ah
   1400014df:	add    BYTE PTR [rcx+0x0],ch
   1400014e2:	outs   dx,BYTE PTR ds:[rsi]
   1400014e3:	add    BYTE PTR [rcx+0x0],ch
   1400014e6:	je     0x1400014e8
   1400014e8:	imul   eax,DWORD PTR [rax],0x6c0061
   1400014ee:	imul   eax,DWORD PTR [rax],0x61007a
   1400014f4:	je     0x1400014f6
   1400014f6:	imul   eax,DWORD PTR [rax],0x6e006f
   1400014fc:	or     al,BYTE PTR [rax]
   1400014fe:	push   rsp
   1400014ff:	add    BYTE PTR [rax+0x0],ch
   140001502:	imul   eax,DWORD PTR [rax],0x200073
   140001508:	imul   eax,DWORD PTR [rax],0x64006e
   14000150e:	imul   eax,DWORD PTR [rax],0x610063
   140001514:	je     0x140001516
   140001516:	add    BYTE PTR gs:[rbx+0x0],dh
   14000151a:	and    BYTE PTR [rax],al
   14000151c:	(bad)  
   14000151d:	add    BYTE PTR [rax],ah
   14000151f:	add    BYTE PTR [rdx+0x0],ah
   140001522:	jne    0x140001524
   140001524:	add    BYTE PTR [eax],ah
   140001527:	add    BYTE PTR [rcx+0x0],ch
   14000152a:	outs   dx,BYTE PTR ds:[rsi]
   14000152b:	add    BYTE PTR [rax],ah
   14000152d:	add    BYTE PTR [rcx+0x0],bh
   140001530:	outs   dx,DWORD PTR ds:[rsi]
   140001531:	add    BYTE PTR [rbp+0x0],dh
   140001534:	jb     0x140001536
   140001536:	and    BYTE PTR [rax],al
   140001538:	(bad)  
   140001539:	add    BYTE PTR [rax+0x0],dh
   14000153c:	jo     0x14000153e
   14000153e:	ins    BYTE PTR es:[rdi],dx
   14000153f:	add    BYTE PTR [rcx+0x0],ch
   140001542:	movsxd eax,DWORD PTR [rax]
   140001544:	(bad)  
   140001545:	add    BYTE PTR [rax+rax*1+0x69],dh
   140001549:	add    BYTE PTR [rdi+0x0],ch
   14000154c:	outs   dx,BYTE PTR ds:[rsi]
   14000154d:	add    BYTE PTR [rsi],ch
   14000154f:	add    BYTE PTR [rax],ah
   140001551:	add    BYTE PTR [rcx+0x0],cl
   140001554:	je     0x140001556
   140001556:	and    BYTE PTR [rax],al
   140001558:	imul   eax,DWORD PTR [rax],0x200073
   14000155e:	ins    DWORD PTR es:[rdi],dx
   14000155f:	add    BYTE PTR [rdi+0x0],ch
   140001562:	jae    0x140001564
   140001564:	je     0x140001566
   140001566:	and    BYTE PTR [rax],al
   140001568:	ins    BYTE PTR es:[rdi],dx
   140001569:	add    BYTE PTR [rcx+0x0],ch
   14000156c:	imul   eax,DWORD PTR [rax],0x65
   14000156f:	add    BYTE PTR [rax+rax*1+0x79],ch
   140001573:	add    BYTE PTR [rax],ah
   140001575:	add    BYTE PTR [rax+rax*1+0x68],dh
   140001579:	add    BYTE PTR [rbp+0x0],ah
   14000157c:	and    BYTE PTR [rax],al
   14000157e:	jb     0x140001580
   140001580:	add    BYTE PTR gs:[rbx+0x0],dh
   140001584:	jne    0x140001586
   140001586:	ins    BYTE PTR es:[rdi],dx
   140001587:	add    BYTE PTR [rax+rax*1+0x20],dh
   14000158b:	add    BYTE PTR [rdi+0x0],ch
   14000158e:	data16 add BYTE PTR [rax],ah
   140001591:	add    BYTE PTR [rbx+0x0],ah
   140001594:	(bad)  
   140001595:	add    BYTE PTR [rax+rax*1+0x6c],ch
   140001599:	add    BYTE PTR [rcx+0x0],ch
   14000159c:	outs   dx,BYTE PTR ds:[rsi]
   14000159d:	add    BYTE PTR [rdi+0x0],ah
   1400015a0:	and    BYTE PTR [rax],al
   1400015a2:	(bad)  
   1400015a3:	add    BYTE PTR [rsi+0x0],ch
   1400015a6:	and    BYTE PTR [rax],al
   1400015a8:	rex.WRB add BYTE PTR [r11+0x0],r10b
   1400015ac:	rex.WB add BYTE PTR [r8+rax*1+0x2d],cl
   1400015b1:	add    BYTE PTR [rbx+0x0],ah
   1400015b4:	outs   dx,DWORD PTR ds:[rsi]
   1400015b5:	add    BYTE PTR [rbp+0x0],ch
   1400015b8:	jo     0x1400015ba
   1400015ba:	imul   eax,DWORD PTR [rax],0x65006c
   1400015c0:	add    BYTE PTR fs:[rax],ah
   1400015c3:	add    BYTE PTR [rax],ch
   1400015c5:	add    BYTE PTR [rdi],ch
   1400015c7:	add    BYTE PTR [rbx+0x0],ah
   1400015ca:	ins    BYTE PTR es:[rdi],dx
   1400015cb:	add    BYTE PTR [rdx+0x0],dh
   1400015ce:	sub    DWORD PTR [rax],eax
   1400015d0:	and    BYTE PTR [rax],al
   1400015d2:	data16 add BYTE PTR [rbp+0x0],dh
   1400015d6:	outs   dx,BYTE PTR ds:[rsi]
   1400015d7:	add    BYTE PTR [rbx+0x0],ah
   1400015da:	je     0x1400015dc
   1400015dc:	imul   eax,DWORD PTR [rax],0x6e006f
   1400015e2:	and    BYTE PTR [rax],al
   1400015e4:	data16 add BYTE PTR [rdx+0x0],dh
   1400015e8:	outs   dx,DWORD PTR ds:[rsi]
   1400015e9:	add    BYTE PTR [rbp+0x0],ch
   1400015ec:	and    BYTE PTR [rax],al
   1400015ee:	(bad)  
   1400015ef:	add    BYTE PTR [rax],ah
   1400015f1:	add    BYTE PTR [rsi+0x0],ch
   1400015f4:	(bad)  
   1400015f5:	add    BYTE PTR [rax+rax*1+0x69],dh
   1400015f9:	add    BYTE PTR [rsi+0x0],dh
   1400015fc:	add    BYTE PTR gs:[rax],ah
   1400015ff:	add    BYTE PTR [rbx+0x0],ah
   140001602:	outs   dx,DWORD PTR ds:[rsi]
   140001603:	add    BYTE PTR [rsi+0x0],ch
   140001606:	jae    0x140001608
   140001608:	je     0x14000160a
   14000160a:	jb     0x14000160c
   14000160c:	jne    0x14000160e
   14000160e:	movsxd eax,DWORD PTR [rax]
   140001610:	je     0x140001612
   140001612:	outs   dx,DWORD PTR ds:[rsi]
   140001613:	add    BYTE PTR [rdx+0x0],dh
   140001616:	and    BYTE PTR [rax],al
   140001618:	outs   dx,DWORD PTR ds:[rsi]
   140001619:	add    BYTE PTR [rdx+0x0],dh
   14000161c:	and    BYTE PTR [rax],al
   14000161e:	data16 add BYTE PTR [rdx+0x0],dh
   140001622:	outs   dx,DWORD PTR ds:[rsi]
   140001623:	add    BYTE PTR [rbp+0x0],ch
   140001626:	and    BYTE PTR [rax],al
   140001628:	add    BYTE PTR [rax+rax*1+0x6c],r13b
   14000162d:	add    BYTE PTR [rbp+0x0],cl
   140001630:	(bad)  
   140001631:	add    BYTE PTR [rcx+0x0],ch
   140001634:	outs   dx,BYTE PTR ds:[rsi]
   140001635:	add    BYTE PTR [rsi],ch
   140001637:	add    BYTE PTR [rip+0xa00],cl        # 0x14000203d
   14000163d:	add    BYTE PTR [rax],al
   14000163f:	add    BYTE PTR [rdx+0x0],dl
   140001642:	add    BYTE PTR ss:[rax],dh
   140001645:	add    BYTE PTR [rbx],dh
   140001647:	add    BYTE PTR [rdx],dh
   140001649:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d00204f
   14000164f:	add    BYTE PTR [rax],ah
   140001651:	add    BYTE PTR [rsi+0x0],ch
   140001654:	outs   dx,DWORD PTR ds:[rsi]
   140001655:	add    BYTE PTR [rax+rax*1+0x20],dh
   140001659:	add    BYTE PTR [rbp+0x0],ah
   14000165c:	outs   dx,BYTE PTR ds:[rsi]
   14000165d:	add    BYTE PTR [rdi+0x0],ch
   140001660:	jne    0x140001662
   140001662:	add    BYTE PTR [eax+0x0],ch
   140001666:	and    BYTE PTR [rax],al
   140001668:	jae    0x14000166a
   14000166a:	jo     0x14000166c
   14000166c:	(bad)  
   14000166d:	add    BYTE PTR [rbx+0x0],ah
   140001670:	add    BYTE PTR gs:[rax],ah
   140001673:	add    BYTE PTR [rsi+0x0],ah
   140001676:	outs   dx,DWORD PTR ds:[rsi]
   140001677:	add    BYTE PTR [rdx+0x0],dh
   14000167a:	and    BYTE PTR [rax],al
   14000167c:	ins    BYTE PTR es:[rdi],dx
   14000167d:	add    BYTE PTR [rdi+0x0],ch
   140001680:	movsxd eax,DWORD PTR [rax]
   140001682:	(bad)  
   140001683:	add    BYTE PTR [rax+rax*1+0x65],ch
   140001687:	add    BYTE PTR [rax],ah
   140001689:	add    BYTE PTR [rcx+0x0],ch
   14000168c:	outs   dx,BYTE PTR ds:[rsi]
   14000168d:	add    BYTE PTR [rsi+0x0],ah
   140001690:	outs   dx,DWORD PTR ds:[rsi]
   140001691:	add    BYTE PTR [rdx+0x0],dh
   140001694:	ins    DWORD PTR es:[rdi],dx
   140001695:	add    BYTE PTR [rcx+0x0],ah
   140001698:	je     0x14000169a
   14000169a:	imul   eax,DWORD PTR [rax],0x6e006f
   1400016a0:	or     eax,0xa00
	...
   1400016ad:	add    BYTE PTR [rax],al
   1400016af:	add    BYTE PTR [rdx+0x0],dl
   1400016b2:	add    BYTE PTR ss:[rax],dh
   1400016b5:	add    BYTE PTR [rbx],dh
   1400016b7:	add    BYTE PTR [rcx],dh
   1400016b9:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d0020bf
   1400016bf:	add    BYTE PTR [rax],ah
   1400016c1:	add    BYTE PTR [rcx+0x0],al
   1400016c4:	je     0x1400016c6
   1400016c6:	je     0x1400016c8
   1400016c8:	add    BYTE PTR gs:[rbp+0x0],ch
   1400016cc:	jo     0x1400016ce
   1400016ce:	je     0x1400016d0
   1400016d0:	and    BYTE PTR [rax],al
   1400016d2:	je     0x1400016d4
   1400016d4:	outs   dx,DWORD PTR ds:[rsi]
   1400016d5:	add    BYTE PTR [rax],ah
   1400016d7:	add    BYTE PTR [rcx+0x0],ch
   1400016da:	outs   dx,BYTE PTR ds:[rsi]
   1400016db:	add    BYTE PTR [rcx+0x0],ch
   1400016de:	je     0x1400016e0
   1400016e0:	imul   eax,DWORD PTR [rax],0x6c0061
   1400016e6:	imul   eax,DWORD PTR [rax],0x65007a
   1400016ec:	and    BYTE PTR [rax],al
   1400016ee:	je     0x1400016f0
   1400016f0:	push   0x20006500
   1400016f5:	add    BYTE PTR [rbx+0x0],al
   1400016f8:	push   rdx
   1400016f9:	add    BYTE PTR [rax+rax*1+0x20],dl
   1400016fd:	add    BYTE PTR [rbp+0x0],ch
   140001700:	outs   dx,DWORD PTR ds:[rsi]
   140001701:	add    BYTE PTR [rdx+0x0],dh
   140001704:	add    BYTE PTR gs:[rax],ah
   140001707:	add    BYTE PTR [rax+rax*1+0x68],dh
   14000170b:	add    BYTE PTR [rcx+0x0],ah
   14000170e:	outs   dx,BYTE PTR ds:[rsi]
   14000170f:	add    BYTE PTR [rax],ah
   140001711:	add    BYTE PTR [rdi+0x0],ch
   140001714:	outs   dx,BYTE PTR ds:[rsi]
   140001715:	add    BYTE PTR [rbx+0x0],ah
   140001718:	add    BYTE PTR gs:[rsi],ch
   14000171b:	add    BYTE PTR [rdx],cl
   14000171d:	add    BYTE PTR [rax+rax*1+0x68],dl
   140001721:	add    BYTE PTR [rcx+0x0],ch
   140001724:	jae    0x140001726
   140001726:	and    BYTE PTR [rax],al
   140001728:	imul   eax,DWORD PTR [rax],0x64006e
   14000172e:	imul   eax,DWORD PTR [rax],0x610063
   140001734:	je     0x140001736
   140001736:	add    BYTE PTR gs:[rbx+0x0],dh
   14000173a:	and    BYTE PTR [rax],al
   14000173c:	(bad)  
   14000173d:	add    BYTE PTR [rax],ah
   14000173f:	add    BYTE PTR [rdx+0x0],ah
   140001742:	jne    0x140001744
   140001744:	add    BYTE PTR [eax],ah
   140001747:	add    BYTE PTR [rcx+0x0],ch
   14000174a:	outs   dx,BYTE PTR ds:[rsi]
   14000174b:	add    BYTE PTR [rax],ah
   14000174d:	add    BYTE PTR [rcx+0x0],bh
   140001750:	outs   dx,DWORD PTR ds:[rsi]
   140001751:	add    BYTE PTR [rbp+0x0],dh
   140001754:	jb     0x140001756
   140001756:	and    BYTE PTR [rax],al
   140001758:	(bad)  
   140001759:	add    BYTE PTR [rax+0x0],dh
   14000175c:	jo     0x14000175e
   14000175e:	ins    BYTE PTR es:[rdi],dx
   14000175f:	add    BYTE PTR [rcx+0x0],ch
   140001762:	movsxd eax,DWORD PTR [rax]
   140001764:	(bad)  
   140001765:	add    BYTE PTR [rax+rax*1+0x69],dh
   140001769:	add    BYTE PTR [rdi+0x0],ch
   14000176c:	outs   dx,BYTE PTR ds:[rsi]
   14000176d:	add    BYTE PTR [rsi],ch
   14000176f:	add    BYTE PTR [rip+0xa00],cl        # 0x140002175
   140001775:	add    BYTE PTR [rax],al
   140001777:	add    BYTE PTR [rdx+0x0],dl
   14000177a:	add    BYTE PTR ss:[rax],dh
   14000177d:	add    BYTE PTR [rbx],dh
   14000177f:	add    BYTE PTR [rax],dh
   140001781:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d002187
   140001787:	add    BYTE PTR [rax],ah
   140001789:	add    BYTE PTR [rbx+0x0],al
   14000178c:	push   rdx
   14000178d:	add    BYTE PTR [rax+rax*1+0x20],dl
   140001791:	add    BYTE PTR [rsi+0x0],ch
   140001794:	outs   dx,DWORD PTR ds:[rsi]
   140001795:	add    BYTE PTR [rax+rax*1+0x20],dh
   140001799:	add    BYTE PTR [rcx+0x0],ch
   14000179c:	outs   dx,BYTE PTR ds:[rsi]
   14000179d:	add    BYTE PTR [rcx+0x0],ch
   1400017a0:	je     0x1400017a2
   1400017a2:	imul   eax,DWORD PTR [rax],0x6c0061
   1400017a8:	imul   eax,DWORD PTR [rax],0x65007a
   1400017ae:	add    BYTE PTR fs:[rip+0xa00],cl        # 0x1400021b5
	...
   1400017bd:	add    BYTE PTR [rax],al
   1400017bf:	add    BYTE PTR [rdx+0x0],dl
   1400017c2:	add    BYTE PTR ss:[rax],dh
   1400017c5:	add    BYTE PTR [rdx],dh
   1400017c7:	add    BYTE PTR [rax],bh
   1400017c9:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d0021cf
   1400017cf:	add    BYTE PTR [rax],ah
   1400017d1:	add    BYTE PTR [rbp+0x0],dh
   1400017d4:	outs   dx,BYTE PTR ds:[rsi]
   1400017d5:	add    BYTE PTR [rcx+0x0],ah
   1400017d8:	(bad)  
   1400017d9:	add    BYTE PTR [rax+rax*1+0x65],ch
   1400017dd:	add    BYTE PTR [rax],ah
   1400017df:	add    BYTE PTR [rax+rax*1+0x6f],dh
   1400017e3:	add    BYTE PTR [rax],ah
   1400017e5:	add    BYTE PTR [rcx+0x0],ch
   1400017e8:	outs   dx,BYTE PTR ds:[rsi]
   1400017e9:	add    BYTE PTR [rcx+0x0],ch
   1400017ec:	je     0x1400017ee
   1400017ee:	imul   eax,DWORD PTR [rax],0x6c0061
   1400017f4:	imul   eax,DWORD PTR [rax],0x65007a
   1400017fa:	and    BYTE PTR [rax],al
   1400017fc:	push   0x61006500
   140001801:	add    BYTE PTR [rax+0x0],dh
   140001804:	or     eax,0xa00
   140001809:	add    BYTE PTR [rax],al
   14000180b:	add    BYTE PTR [rax],al
   14000180d:	add    BYTE PTR [rax],al
   14000180f:	add    BYTE PTR [rdx+0x0],dl
   140001812:	add    BYTE PTR ss:[rax],dh
   140001815:	add    BYTE PTR [rdx],dh
   140001817:	add    BYTE PTR [rdi],dh
   140001819:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d00221f
   14000181f:	add    BYTE PTR [rax],ah
   140001821:	add    BYTE PTR [rsi+0x0],ch
   140001824:	outs   dx,DWORD PTR ds:[rsi]
   140001825:	add    BYTE PTR [rax+rax*1+0x20],dh
   140001829:	add    BYTE PTR [rbp+0x0],ah
   14000182c:	outs   dx,BYTE PTR ds:[rsi]
   14000182d:	add    BYTE PTR [rdi+0x0],ch
   140001830:	jne    0x140001832
   140001832:	add    BYTE PTR [eax+0x0],ch
   140001836:	and    BYTE PTR [rax],al
   140001838:	jae    0x14000183a
   14000183a:	jo     0x14000183c
   14000183c:	(bad)  
   14000183d:	add    BYTE PTR [rbx+0x0],ah
   140001840:	add    BYTE PTR gs:[rax],ah
   140001843:	add    BYTE PTR [rsi+0x0],ah
   140001846:	outs   dx,DWORD PTR ds:[rsi]
   140001847:	add    BYTE PTR [rdx+0x0],dh
   14000184a:	and    BYTE PTR [rax],al
   14000184c:	ins    BYTE PTR es:[rdi],dx
   14000184d:	add    BYTE PTR [rdi+0x0],ch
   140001850:	ja     0x140001852
   140001852:	imul   eax,DWORD PTR [rax],0x20006f
   140001858:	imul   eax,DWORD PTR [rax],0x69006e
   14000185e:	je     0x140001860
   140001860:	imul   eax,DWORD PTR [rax],0x6c0061
   140001866:	imul   eax,DWORD PTR [rax],0x61007a
   14000186c:	je     0x14000186e
   14000186e:	imul   eax,DWORD PTR [rax],0x6e006f
   140001874:	or     eax,0xa00
   140001879:	add    BYTE PTR [rax],al
   14000187b:	add    BYTE PTR [rax],al
   14000187d:	add    BYTE PTR [rax],al
   14000187f:	add    BYTE PTR [rdx+0x0],dl
   140001882:	add    BYTE PTR ss:[rax],dh
   140001885:	add    BYTE PTR [rdx],dh
   140001887:	add    BYTE PTR [rsi],dh
   140001889:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d00228f
   14000188f:	add    BYTE PTR [rax],ah
   140001891:	add    BYTE PTR [rsi+0x0],ch
   140001894:	outs   dx,DWORD PTR ds:[rsi]
   140001895:	add    BYTE PTR [rax+rax*1+0x20],dh
   140001899:	add    BYTE PTR [rbp+0x0],ah
   14000189c:	outs   dx,BYTE PTR ds:[rsi]
   14000189d:	add    BYTE PTR [rdi+0x0],ch
   1400018a0:	jne    0x1400018a2
   1400018a2:	add    BYTE PTR [eax+0x0],ch
   1400018a6:	and    BYTE PTR [rax],al
   1400018a8:	jae    0x1400018aa
   1400018aa:	jo     0x1400018ac
   1400018ac:	(bad)  
   1400018ad:	add    BYTE PTR [rbx+0x0],ah
   1400018b0:	add    BYTE PTR gs:[rax],ah
   1400018b3:	add    BYTE PTR [rsi+0x0],ah
   1400018b6:	outs   dx,DWORD PTR ds:[rsi]
   1400018b7:	add    BYTE PTR [rdx+0x0],dh
   1400018ba:	and    BYTE PTR [rax],al
   1400018bc:	jae    0x1400018be
   1400018be:	je     0x1400018c0
   1400018c0:	add    BYTE PTR fs:[rcx+0x0],ch
   1400018c4:	outs   dx,DWORD PTR ds:[rsi]
   1400018c5:	add    BYTE PTR [rax],ah
   1400018c7:	add    BYTE PTR [rcx+0x0],ch
   1400018ca:	outs   dx,BYTE PTR ds:[rsi]
   1400018cb:	add    BYTE PTR [rcx+0x0],ch
   1400018ce:	je     0x1400018d0
   1400018d0:	imul   eax,DWORD PTR [rax],0x6c0061
   1400018d6:	imul   eax,DWORD PTR [rax],0x61007a
   1400018dc:	je     0x1400018de
   1400018de:	imul   eax,DWORD PTR [rax],0x6e006f
   1400018e4:	or     eax,0xa00
   1400018e9:	add    BYTE PTR [rax],al
   1400018eb:	add    BYTE PTR [rax],al
   1400018ed:	add    BYTE PTR [rax],al
   1400018ef:	add    BYTE PTR [rdx+0x0],dl
   1400018f2:	add    BYTE PTR ss:[rax],dh
   1400018f5:	add    BYTE PTR [rdx],dh
   1400018f7:	add    BYTE PTR [rip+0xa000d00],dh        # 0x14a0025fd
   1400018fd:	add    BYTE PTR [rip+0x70002000],ch        # 0x1b0003903
   140001903:	add    BYTE PTR [rbp+0x0],dh
   140001906:	jb     0x140001908
   140001908:	add    BYTE PTR gs:[rax],ah
   14000190b:	add    BYTE PTR [rsi+0x0],dh
   14000190e:	imul   eax,DWORD PTR [rax],0x740072
   140001914:	jne    0x140001916
   140001916:	(bad)  
   140001917:	add    BYTE PTR [rax+rax*1+0x20],ch
   14000191b:	add    BYTE PTR [rsi+0x0],ah
   14000191e:	jne    0x140001920
   140001920:	outs   dx,BYTE PTR ds:[rsi]
   140001921:	add    BYTE PTR [rbx+0x0],ah
   140001924:	je     0x140001926
   140001926:	imul   eax,DWORD PTR [rax],0x6e006f
   14000192c:	and    BYTE PTR [rax],al
   14000192e:	movsxd eax,DWORD PTR [rax]
   140001930:	(bad)  
   140001931:	add    BYTE PTR [rax+rax*1+0x6c],ch
   140001935:	add    BYTE PTR [rip+0xa00],cl        # 0x14000233b
   14000193b:	add    BYTE PTR [rax],al
   14000193d:	add    BYTE PTR [rax],al
   14000193f:	add    BYTE PTR [rdx+0x0],dl
   140001942:	add    BYTE PTR ss:[rax],dh
   140001945:	add    BYTE PTR [rdx],dh
   140001947:	add    BYTE PTR [rax+rax*1],dh
   14000194a:	or     eax,0x2d000a00
   14000194f:	add    BYTE PTR [rax],ah
   140001951:	add    BYTE PTR [rsi+0x0],ch
   140001954:	outs   dx,DWORD PTR ds:[rsi]
   140001955:	add    BYTE PTR [rax+rax*1+0x20],dh
   140001959:	add    BYTE PTR [rbp+0x0],ah
   14000195c:	outs   dx,BYTE PTR ds:[rsi]
   14000195d:	add    BYTE PTR [rdi+0x0],ch
   140001960:	jne    0x140001962
   140001962:	add    BYTE PTR [eax+0x0],ch
   140001966:	and    BYTE PTR [rax],al
   140001968:	jae    0x14000196a
   14000196a:	jo     0x14000196c
   14000196c:	(bad)  
   14000196d:	add    BYTE PTR [rbx+0x0],ah
   140001970:	add    BYTE PTR gs:[rax],ah
   140001973:	add    BYTE PTR [rsi+0x0],ah
   140001976:	outs   dx,DWORD PTR ds:[rsi]
   140001977:	add    BYTE PTR [rdx+0x0],dh
   14000197a:	and    BYTE PTR [rax],al
   14000197c:	pop    rdi
   14000197d:	add    BYTE PTR [rdi+0x0],ch
   140001980:	outs   dx,BYTE PTR ds:[rsi]
   140001981:	add    BYTE PTR [rbp+0x0],ah
   140001984:	js     0x140001986
   140001986:	imul   eax,DWORD PTR [rax],0x2f0074
   14000198c:	(bad)  
   14000198d:	add    BYTE PTR [rax+rax*1+0x65],dh
   140001991:	add    BYTE PTR [rax+0x0],bh
   140001994:	imul   eax,DWORD PTR [rax],0x200074
   14000199a:	je     0x14000199c
   14000199c:	(bad)  
   14000199d:	add    BYTE PTR [rdx+0x0],ah
   1400019a0:	ins    BYTE PTR es:[rdi],dx
   1400019a1:	add    BYTE PTR [rbp+0x0],ah
   1400019a4:	or     eax,0xa00
   1400019a9:	add    BYTE PTR [rax],al
   1400019ab:	add    BYTE PTR [rax],al
   1400019ad:	add    BYTE PTR [rax],al
   1400019af:	add    BYTE PTR [rdx+0x0],dl
   1400019b2:	add    BYTE PTR ss:[rax],dh
   1400019b5:	add    BYTE PTR [rcx],dh
   1400019b7:	add    BYTE PTR [rcx],bh
   1400019b9:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d0023bf
   1400019bf:	add    BYTE PTR [rax],ah
   1400019c1:	add    BYTE PTR [rbp+0x0],dh
   1400019c4:	outs   dx,BYTE PTR ds:[rsi]
   1400019c5:	add    BYTE PTR [rcx+0x0],ah
   1400019c8:	(bad)  
   1400019c9:	add    BYTE PTR [rax+rax*1+0x65],ch
   1400019cd:	add    BYTE PTR [rax],ah
   1400019cf:	add    BYTE PTR [rax+rax*1+0x6f],dh
   1400019d3:	add    BYTE PTR [rax],ah
   1400019d5:	add    BYTE PTR [rdi+0x0],ch
   1400019d8:	jo     0x1400019da
   1400019da:	add    BYTE PTR gs:[rsi+0x0],ch
   1400019de:	and    BYTE PTR [rax],al
   1400019e0:	movsxd eax,DWORD PTR [rax]
   1400019e2:	outs   dx,DWORD PTR ds:[rsi]
   1400019e3:	add    BYTE PTR [rsi+0x0],ch
   1400019e6:	jae    0x1400019e8
   1400019e8:	outs   dx,DWORD PTR ds:[rsi]
   1400019e9:	add    BYTE PTR [rax+rax*1+0x65],ch
   1400019ed:	add    BYTE PTR [rax],ah
   1400019ef:	add    BYTE PTR [rax+rax*1+0x65],ah
   1400019f3:	add    BYTE PTR [rsi+0x0],dh
   1400019f6:	imul   eax,DWORD PTR [rax],0x650063
   1400019fc:	or     eax,0xa00
	...
   140001a0d:	add    BYTE PTR [rax],al
   140001a0f:	add    BYTE PTR [rdx+0x0],dl
   140001a12:	add    BYTE PTR ss:[rax],dh
   140001a15:	add    BYTE PTR [rcx],dh
   140001a17:	add    BYTE PTR [rax],bh
   140001a19:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d00241f
   140001a1f:	add    BYTE PTR [rax],ah
   140001a21:	add    BYTE PTR [rbp+0x0],dh
   140001a24:	outs   dx,BYTE PTR ds:[rsi]
   140001a25:	add    BYTE PTR [rbp+0x0],ah
   140001a28:	js     0x140001a2a
   140001a2a:	jo     0x140001a2c
   140001a2c:	add    BYTE PTR gs:[rbx+0x0],ah
   140001a30:	je     0x140001a32
   140001a32:	add    BYTE PTR gs:[rax+rax*1+0x20],ah
   140001a37:	add    BYTE PTR [rax+0x0],ch
   140001a3a:	add    BYTE PTR gs:[rcx+0x0],ah
   140001a3e:	jo     0x140001a40
   140001a40:	and    BYTE PTR [rax],al
   140001a42:	add    BYTE PTR gs:[rdx+0x0],dh
   140001a46:	jb     0x140001a48
   140001a48:	outs   dx,DWORD PTR ds:[rsi]
   140001a49:	add    BYTE PTR [rdx+0x0],dh
   140001a4c:	or     eax,0xa00
	...
   140001a5d:	add    BYTE PTR [rax],al
   140001a5f:	add    BYTE PTR [rdx+0x0],dl
   140001a62:	add    BYTE PTR ss:[rax],dh
   140001a65:	add    BYTE PTR [rcx],dh
   140001a67:	add    BYTE PTR [rdi],dh
   140001a69:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d00246f
   140001a6f:	add    BYTE PTR [rax],ah
   140001a71:	add    BYTE PTR [rbp+0x0],dh
   140001a74:	outs   dx,BYTE PTR ds:[rsi]
   140001a75:	add    BYTE PTR [rbp+0x0],ah
   140001a78:	js     0x140001a7a
   140001a7a:	jo     0x140001a7c
   140001a7c:	add    BYTE PTR gs:[rbx+0x0],ah
   140001a80:	je     0x140001a82
   140001a82:	add    BYTE PTR gs:[rax+rax*1+0x20],ah
   140001a87:	add    BYTE PTR [rbp+0x0],ch
   140001a8a:	jne    0x140001a8c
   140001a8c:	ins    BYTE PTR es:[rdi],dx
   140001a8d:	add    BYTE PTR [rax+rax*1+0x69],dh
   140001a91:	add    BYTE PTR [rax+rax*1+0x68],dh
   140001a95:	add    BYTE PTR [rdx+0x0],dh
   140001a98:	add    BYTE PTR gs:[rcx+0x0],ah
   140001a9c:	add    BYTE PTR fs:[rax],ah
   140001a9f:	add    BYTE PTR [rax+rax*1+0x6f],ch
   140001aa3:	add    BYTE PTR [rbx+0x0],ah
   140001aa6:	imul   eax,DWORD PTR [rax],0x20
   140001aa9:	add    BYTE PTR [rbp+0x0],ah
   140001aac:	jb     0x140001aae
   140001aae:	jb     0x140001ab0
   140001ab0:	outs   dx,DWORD PTR ds:[rsi]
   140001ab1:	add    BYTE PTR [rdx+0x0],dh
   140001ab4:	or     eax,0xa00
   140001ab9:	add    BYTE PTR [rax],al
   140001abb:	add    BYTE PTR [rax],al
   140001abd:	add    BYTE PTR [rax],al
   140001abf:	add    BYTE PTR [rdx+0x0],dl
   140001ac2:	add    BYTE PTR ss:[rax],dh
   140001ac5:	add    BYTE PTR [rcx],dh
   140001ac7:	add    BYTE PTR [rsi],dh
   140001ac9:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d0024cf
   140001acf:	add    BYTE PTR [rax],ah
   140001ad1:	add    BYTE PTR [rsi+0x0],ch
   140001ad4:	outs   dx,DWORD PTR ds:[rsi]
   140001ad5:	add    BYTE PTR [rax+rax*1+0x20],dh
   140001ad9:	add    BYTE PTR [rbp+0x0],ah
   140001adc:	outs   dx,BYTE PTR ds:[rsi]
   140001add:	add    BYTE PTR [rdi+0x0],ch
   140001ae0:	jne    0x140001ae2
   140001ae2:	add    BYTE PTR [eax+0x0],ch
   140001ae6:	and    BYTE PTR [rax],al
   140001ae8:	jae    0x140001aea
   140001aea:	jo     0x140001aec
   140001aec:	(bad)  
   140001aed:	add    BYTE PTR [rbx+0x0],ah
   140001af0:	add    BYTE PTR gs:[rax],ah
   140001af3:	add    BYTE PTR [rsi+0x0],ah
   140001af6:	outs   dx,DWORD PTR ds:[rsi]
   140001af7:	add    BYTE PTR [rdx+0x0],dh
   140001afa:	and    BYTE PTR [rax],al
   140001afc:	je     0x140001afe
   140001afe:	push   0x65007200
   140001b03:	add    BYTE PTR [rcx+0x0],ah
   140001b06:	add    BYTE PTR fs:[rax],ah
   140001b09:	add    BYTE PTR [rax+rax*1+0x61],ah
   140001b0d:	add    BYTE PTR [rax+rax*1+0x61],dh
   140001b11:	add    BYTE PTR [rip+0xa00],cl        # 0x140002517
	...
   140001b1f:	add    BYTE PTR [rdx+0x0],dl
   140001b22:	add    BYTE PTR ss:[rax],dh
   140001b25:	add    BYTE PTR [rcx],dh
   140001b27:	add    BYTE PTR [rax],dh
   140001b29:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d00252f
   140001b2f:	add    BYTE PTR [rax],ah
   140001b31:	add    BYTE PTR [rcx+0x0],ah
   140001b34:	(bad)  
   140001b35:	add    BYTE PTR [rdi+0x0],ch
   140001b38:	jb     0x140001b3a
   140001b3a:	je     0x140001b3c
   140001b3c:	sub    BYTE PTR [rax],al
   140001b3e:	sub    DWORD PTR [rax],eax
   140001b40:	and    BYTE PTR [rax],al
   140001b42:	push   0x73006100
   140001b47:	add    BYTE PTR [rax],ah
   140001b49:	add    BYTE PTR [rdx+0x0],ah
   140001b4c:	add    BYTE PTR gs:[rbp+0x0],ah
   140001b50:	outs   dx,BYTE PTR ds:[rsi]
   140001b51:	add    BYTE PTR [rax],ah
   140001b53:	add    BYTE PTR [rbx+0x0],ah
   140001b56:	(bad)  
   140001b57:	add    BYTE PTR [rax+rax*1+0x6c],ch
   140001b5b:	add    BYTE PTR [rbp+0x0],ah
   140001b5e:	add    BYTE PTR fs:[rip+0xa00],cl        # 0x140002565
	...
   140001b6d:	add    BYTE PTR [rax],al
   140001b6f:	add    BYTE PTR [rdx+0x0],dl
   140001b72:	add    BYTE PTR ss:[rax],dh
   140001b75:	add    BYTE PTR [rax],dh
   140001b77:	add    BYTE PTR [rcx],bh
   140001b79:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d00257f
   140001b7f:	add    BYTE PTR [rax],ah
   140001b81:	add    BYTE PTR [rsi+0x0],ch
   140001b84:	outs   dx,DWORD PTR ds:[rsi]
   140001b85:	add    BYTE PTR [rax+rax*1+0x20],dh
   140001b89:	add    BYTE PTR [rbp+0x0],ah
   140001b8c:	outs   dx,BYTE PTR ds:[rsi]
   140001b8d:	add    BYTE PTR [rdi+0x0],ch
   140001b90:	jne    0x140001b92
   140001b92:	add    BYTE PTR [eax+0x0],ch
   140001b96:	and    BYTE PTR [rax],al
   140001b98:	jae    0x140001b9a
   140001b9a:	jo     0x140001b9c
   140001b9c:	(bad)  
   140001b9d:	add    BYTE PTR [rbx+0x0],ah
   140001ba0:	add    BYTE PTR gs:[rax],ah
   140001ba3:	add    BYTE PTR [rsi+0x0],ah
   140001ba6:	outs   dx,DWORD PTR ds:[rsi]
   140001ba7:	add    BYTE PTR [rdx+0x0],dh
   140001baa:	and    BYTE PTR [rax],al
   140001bac:	add    BYTE PTR gs:[rsi+0x0],ch
   140001bb0:	jbe    0x140001bb2
   140001bb2:	imul   eax,DWORD PTR [rax],0x6f0072
   140001bb8:	outs   dx,BYTE PTR ds:[rsi]
   140001bb9:	add    BYTE PTR [rbp+0x0],ch
   140001bbc:	add    BYTE PTR gs:[rsi+0x0],ch
   140001bc0:	je     0x140001bc2
   140001bc2:	or     eax,0xa00
	...
   140001bcf:	add    BYTE PTR [rdx+0x0],dl
   140001bd2:	add    BYTE PTR ss:[rax],dh
   140001bd5:	add    BYTE PTR [rax],dh
   140001bd7:	add    BYTE PTR [rax],bh
   140001bd9:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d0025df
   140001bdf:	add    BYTE PTR [rax],ah
   140001be1:	add    BYTE PTR [rsi+0x0],ch
   140001be4:	outs   dx,DWORD PTR ds:[rsi]
   140001be5:	add    BYTE PTR [rax+rax*1+0x20],dh
   140001be9:	add    BYTE PTR [rbp+0x0],ah
   140001bec:	outs   dx,BYTE PTR ds:[rsi]
   140001bed:	add    BYTE PTR [rdi+0x0],ch
   140001bf0:	jne    0x140001bf2
   140001bf2:	add    BYTE PTR [eax+0x0],ch
   140001bf6:	and    BYTE PTR [rax],al
   140001bf8:	jae    0x140001bfa
   140001bfa:	jo     0x140001bfc
   140001bfc:	(bad)  
   140001bfd:	add    BYTE PTR [rbx+0x0],ah
   140001c00:	add    BYTE PTR gs:[rax],ah
   140001c03:	add    BYTE PTR [rsi+0x0],ah
   140001c06:	outs   dx,DWORD PTR ds:[rsi]
   140001c07:	add    BYTE PTR [rdx+0x0],dh
   140001c0a:	and    BYTE PTR [rax],al
   140001c0c:	(bad)  
   140001c0d:	add    BYTE PTR [rdx+0x0],dh
   140001c10:	add    BYTE PTR [ebp+0x0],dh
   140001c14:	ins    DWORD PTR es:[rdi],dx
   140001c15:	add    BYTE PTR [rbp+0x0],ah
   140001c18:	outs   dx,BYTE PTR ds:[rsi]
   140001c19:	add    BYTE PTR [rax+rax*1+0x73],dh
   140001c1d:	add    BYTE PTR [rip+0xa00],cl        # 0x140002623
	...
   140001c2f:	add    BYTE PTR [rdx+0x0],dl
   140001c32:	add    BYTE PTR ss:[rax],dh
   140001c35:	add    BYTE PTR [rax],dh
   140001c37:	add    BYTE PTR [rdx],dh
   140001c39:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d00263f
   140001c3f:	add    BYTE PTR [rax],ah
   140001c41:	add    BYTE PTR [rsi+0x0],ah
   140001c44:	ins    BYTE PTR es:[rdi],dx
   140001c45:	add    BYTE PTR [rdi+0x0],ch
   140001c48:	(bad)  
   140001c49:	add    BYTE PTR [rax+rax*1+0x69],dh
   140001c4d:	add    BYTE PTR [rsi+0x0],ch
   140001c50:	add    BYTE PTR [eax],ah
   140001c53:	add    BYTE PTR [rax+0x0],dh
   140001c56:	outs   dx,DWORD PTR ds:[rsi]
   140001c57:	add    BYTE PTR [rcx+0x0],ch
   140001c5a:	outs   dx,BYTE PTR ds:[rsi]
   140001c5b:	add    BYTE PTR [rax+rax*1+0x20],dh
   140001c5f:	add    BYTE PTR [rbx+0x0],dh
   140001c62:	jne    0x140001c64
   140001c64:	jo     0x140001c66
   140001c66:	jo     0x140001c68
   140001c68:	outs   dx,DWORD PTR ds:[rsi]
   140001c69:	add    BYTE PTR [rdx+0x0],dh
   140001c6c:	je     0x140001c6e
   140001c6e:	and    BYTE PTR [rax],al
   140001c70:	outs   dx,BYTE PTR ds:[rsi]
   140001c71:	add    BYTE PTR [rdi+0x0],ch
   140001c74:	je     0x140001c76
   140001c76:	and    BYTE PTR [rax],al
   140001c78:	ins    BYTE PTR es:[rdi],dx
   140001c79:	add    BYTE PTR [rdi+0x0],ch
   140001c7c:	(bad)  
   140001c7d:	add    BYTE PTR [rax+rax*1+0x65],ah
   140001c81:	add    BYTE PTR [rax+rax*1+0xd],ah
   140001c85:	add    BYTE PTR [rdx],cl
	...
   140001c8f:	add    BYTE PTR [rdx],al
   140001c91:	add    BYTE PTR [rax],al
   140001c93:	add    BYTE PTR [rax],al
   140001c95:	add    BYTE PTR [rax],al
   140001c97:	add    BYTE PTR [rax],dh
   140001c99:	sbb    al,0x0
   140001c9b:	rex add DWORD PTR [rax],eax
   140001c9e:	add    BYTE PTR [rax],al
   140001ca0:	or     BYTE PTR [rax],al
   140001ca2:	add    BYTE PTR [rax],al
   140001ca4:	add    BYTE PTR [rax],al
   140001ca6:	add    BYTE PTR [rax],al
   140001ca8:	rcr    BYTE PTR [rbx],1
   140001caa:	add    BYTE PTR [rax+0x1],al
   140001cad:	add    BYTE PTR [rax],al
   140001caf:	add    BYTE PTR [rcx],cl
   140001cb1:	add    BYTE PTR [rax],al
   140001cb3:	add    BYTE PTR [rax],al
   140001cb5:	add    BYTE PTR [rax],al
   140001cb7:	add    BYTE PTR [rax+0x1b],dh
   140001cba:	add    BYTE PTR [rax+0x1],al
   140001cbd:	add    BYTE PTR [rax],al
   140001cbf:	add    BYTE PTR [rdx],cl
   140001cc1:	add    BYTE PTR [rax],al
   140001cc3:	add    BYTE PTR [rax],al
   140001cc5:	add    BYTE PTR [rax],al
   140001cc7:	add    BYTE PTR [rax],ah
   140001cc9:	sbb    eax,DWORD PTR [rax]
   140001ccb:	rex add DWORD PTR [rax],eax
   140001cce:	add    BYTE PTR [rax],al
   140001cd0:	adc    BYTE PTR [rax],al
   140001cd2:	add    BYTE PTR [rax],al
   140001cd4:	add    BYTE PTR [rax],al
   140001cd6:	add    BYTE PTR [rax],al
   140001cd8:	rcr    BYTE PTR [rdx],0x0
   140001cdb:	rex add DWORD PTR [rax],eax
   140001cde:	add    BYTE PTR [rax],al
   140001ce0:	adc    DWORD PTR [rax],eax
   140001ce2:	add    BYTE PTR [rax],al
   140001ce4:	add    BYTE PTR [rax],al
   140001ce6:	add    BYTE PTR [rax],al
   140001ce8:	(bad)  
   140001ce9:	sbb    al,BYTE PTR [rax]
   140001ceb:	rex add DWORD PTR [rax],eax
   140001cee:	add    BYTE PTR [rax],al
   140001cf0:	adc    al,BYTE PTR [rax]
   140001cf2:	add    BYTE PTR [rax],al
   140001cf4:	add    BYTE PTR [rax],al
   140001cf6:	add    BYTE PTR [rax],al
   140001cf8:	adc    BYTE PTR [rdx],bl
   140001cfa:	add    BYTE PTR [rax+0x1],al
   140001cfd:	add    BYTE PTR [rax],al
   140001cff:	add    BYTE PTR [rbx],dl
   140001d01:	add    BYTE PTR [rax],al
   140001d03:	add    BYTE PTR [rax],al
   140001d05:	add    BYTE PTR [rax],al
   140001d07:	add    BYTE PTR [rax+0x1400019],dh
   140001d0d:	add    BYTE PTR [rax],al
   140001d0f:	add    BYTE PTR [rax],bl
   140001d11:	add    BYTE PTR [rax],al
   140001d13:	add    BYTE PTR [rax],al
   140001d15:	add    BYTE PTR [rax],al
   140001d17:	add    BYTE PTR [rax+0x19],al
   140001d1a:	add    BYTE PTR [rax+0x1],al
   140001d1d:	add    BYTE PTR [rax],al
   140001d1f:	add    BYTE PTR [rcx],bl
   140001d21:	add    BYTE PTR [rax],al
   140001d23:	add    BYTE PTR [rax],al
   140001d25:	add    BYTE PTR [rax],al
   140001d27:	add    al,dh
   140001d29:	sbb    BYTE PTR [rax],al
   140001d2b:	rex add DWORD PTR [rax],eax
   140001d2e:	add    BYTE PTR [rax],al
   140001d30:	sbb    al,BYTE PTR [rax]
   140001d32:	add    BYTE PTR [rax],al
   140001d34:	add    BYTE PTR [rax],al
   140001d36:	add    BYTE PTR [rax],al
   140001d38:	sbb    BYTE PTR [rax],0x0
   140001d3b:	rex add DWORD PTR [rax],eax
   140001d3e:	add    BYTE PTR [rax],al
   140001d40:	sbb    eax,DWORD PTR [rax]
   140001d42:	add    BYTE PTR [rax],al
   140001d44:	add    BYTE PTR [rax],al
   140001d46:	add    BYTE PTR [rax],al
   140001d48:	adc    BYTE PTR [rax],bl
   140001d4a:	add    BYTE PTR [rax+0x1],al
   140001d4d:	add    BYTE PTR [rax],al
   140001d4f:	add    BYTE PTR [rax+rax*1],bl
   140001d52:	add    BYTE PTR [rax],al
   140001d54:	add    BYTE PTR [rax],al
   140001d56:	add    BYTE PTR [rax],al
   140001d58:	rcl    BYTE PTR [rdi],0x0
   140001d5b:	rex add DWORD PTR [rax],eax
   140001d5e:	add    BYTE PTR [rax],al
   140001d60:	(bad)  
   140001d61:	add    BYTE PTR [rax],al
   140001d63:	add    BYTE PTR [rax],al
   140001d65:	add    BYTE PTR [rax],al
   140001d67:	add    BYTE PTR [rax+0x17],bh
   140001d6a:	add    BYTE PTR [rax+0x1],al
   140001d6d:	add    BYTE PTR [rax],al
   140001d6f:	add    BYTE PTR [rdi],bl
   140001d71:	add    BYTE PTR [rax],al
   140001d73:	add    BYTE PTR [rax],al
   140001d75:	add    BYTE PTR [rax],al
   140001d77:	add    BYTE PTR [rax+0x1400016],dh
   140001d7d:	add    BYTE PTR [rax],al
   140001d7f:	add    BYTE PTR [rax],ah
   140001d81:	add    BYTE PTR [rax],al
   140001d83:	add    BYTE PTR [rax],al
   140001d85:	add    BYTE PTR [rax],al
   140001d87:	add    BYTE PTR [rax+0x16],al
   140001d8a:	add    BYTE PTR [rax+0x1],al
   140001d8d:	add    BYTE PTR [rax],al
   140001d8f:	add    BYTE PTR [rcx],ah
   140001d91:	add    BYTE PTR [rax],al
   140001d93:	add    BYTE PTR [rax],al
   140001d95:	add    BYTE PTR [rax],al
   140001d97:	add    BYTE PTR [rax+0x14],dl
   140001d9a:	add    BYTE PTR [rax+0x1],al
   140001d9d:	add    BYTE PTR [rax],al
   140001d9f:	add    BYTE PTR [rax+0x0],bh
   140001da2:	add    BYTE PTR [rax],al
   140001da4:	add    BYTE PTR [rax],al
   140001da6:	add    BYTE PTR [rax],al
   140001da8:	sub    BYTE PTR [rax+rax*1],dl
   140001dab:	rex add DWORD PTR [rax],eax
   140001dae:	add    BYTE PTR [rax],al
   140001db0:	jns    0x140001db2
   140001db2:	add    BYTE PTR [rax],al
   140001db4:	add    BYTE PTR [rax],al
   140001db6:	add    BYTE PTR [rax],al
   140001db8:	or     BYTE PTR [rax+rax*1],dl
   140001dbb:	rex add DWORD PTR [rax],eax
   140001dbe:	add    BYTE PTR [rax],al
   140001dc0:	jp     0x140001dc2
   140001dc2:	add    BYTE PTR [rax],al
   140001dc4:	add    BYTE PTR [rax],al
   140001dc6:	add    BYTE PTR [rax],al
   140001dc8:	call   0x141401de0
   140001dcd:	add    BYTE PTR [rax],al
   140001dcf:	add    ah,bh
   140001dd1:	add    BYTE PTR [rax],al
   140001dd3:	add    BYTE PTR [rax],al
   140001dd5:	add    BYTE PTR [rax],al
   140001dd7:	add    al,ah
   140001dd9:	adc    eax,DWORD PTR [rax]
   140001ddb:	rex add DWORD PTR [rax],eax
   140001dde:	add    BYTE PTR [rax],al
   140001de0:	inc    DWORD PTR [rax]
   140001de2:	add    BYTE PTR [rax],al
   140001de4:	add    BYTE PTR [rax],al
   140001de6:	add    BYTE PTR [rax],al
   140001de8:	rcl    BYTE PTR [rbx],0x0
   140001deb:	rex add DWORD PTR [rax],eax
   140001dee:	add    BYTE PTR [rax],al
   140001df0:	rex.WRB add BYTE PTR [r9+0x0],r13b
   140001df4:	movsxd eax,DWORD PTR [rax]
   140001df6:	jb     0x140001df8
   140001df8:	outs   dx,DWORD PTR ds:[rsi]
   140001df9:	add    BYTE PTR [rbx+0x0],dh
   140001dfc:	outs   dx,DWORD PTR ds:[rsi]
   140001dfd:	add    BYTE PTR [rsi+0x0],ah
   140001e00:	je     0x140001e02
   140001e02:	and    BYTE PTR [rax],al
   140001e04:	push   rsi
   140001e05:	add    BYTE PTR [rcx+0x0],ch
   140001e08:	jae    0x140001e0a
   140001e0a:	jne    0x140001e0c
   140001e0c:	(bad)  
   140001e0d:	add    BYTE PTR [rax+rax*1+0x20],ch
   140001e11:	add    BYTE PTR [rbx+0x0],al
   140001e14:	sub    eax,DWORD PTR [rax]
   140001e16:	sub    eax,DWORD PTR [rax]
   140001e18:	and    BYTE PTR [rax],al
   140001e1a:	push   rdx
   140001e1b:	add    BYTE PTR [rbp+0x0],dh
   140001e1e:	outs   dx,BYTE PTR ds:[rsi]
   140001e1f:	add    BYTE PTR [rax+rax*1+0x69],dh
   140001e23:	add    BYTE PTR [rbp+0x0],ch
   140001e26:	add    BYTE PTR gs:[rax],ah
   140001e29:	add    BYTE PTR [rax+rax*1+0x69],cl
   140001e2d:	add    BYTE PTR [rdx+0x0],ah
   140001e30:	jb     0x140001e32
   140001e32:	(bad)  
   140001e33:	add    BYTE PTR [rdx+0x0],dh
   140001e36:	jns    0x140001e38
   140001e38:	add    BYTE PTR [rax],al
   140001e3a:	add    BYTE PTR [rax],al
   140001e3c:	or     al,BYTE PTR [rax]
   140001e3e:	or     al,BYTE PTR [rax]
	...
   140001e48:	add    BYTE PTR cs:[rsi],ch
   140001e4b:	add    BYTE PTR [rsi],ch
   140001e4d:	add    BYTE PTR [rax],al
   140001e4f:	add    BYTE PTR [rax+rax*1],bh
   140001e52:	jo     0x140001e54
   140001e54:	jb     0x140001e56
   140001e56:	outs   dx,DWORD PTR ds:[rsi]
   140001e57:	add    BYTE PTR [rdi+0x0],ah
   140001e5a:	jb     0x140001e5c
   140001e5c:	(bad)  
   140001e5d:	add    BYTE PTR [rbp+0x0],ch
   140001e60:	and    BYTE PTR [rax],al
   140001e62:	outs   dx,BYTE PTR ds:[rsi]
   140001e63:	add    BYTE PTR [rcx+0x0],ah
   140001e66:	ins    DWORD PTR es:[rdi],dx
   140001e67:	add    BYTE PTR [rbp+0x0],ah
   140001e6a:	and    BYTE PTR [rax],al
   140001e6c:	jne    0x140001e6e
   140001e6e:	outs   dx,BYTE PTR ds:[rsi]
   140001e6f:	add    BYTE PTR [rbx+0x0],ch
   140001e72:	outs   dx,BYTE PTR ds:[rsi]
   140001e73:	add    BYTE PTR [rdi+0x0],ch
   140001e76:	ja     0x140001e78
   140001e78:	outs   dx,BYTE PTR ds:[rsi]
   140001e79:	add    BYTE PTR [rsi],bh
   140001e7b:	add    BYTE PTR [rax],al
   140001e7d:	add    BYTE PTR [rax],al
   140001e7f:	add    BYTE PTR [rdx+0x0],dl
   140001e82:	jne    0x140001e84
   140001e84:	outs   dx,BYTE PTR ds:[rsi]
   140001e85:	add    BYTE PTR [rax+rax*1+0x69],dh
   140001e89:	add    BYTE PTR [rbp+0x0],ch
   140001e8c:	add    BYTE PTR gs:[rax],ah
   140001e8f:	add    BYTE PTR [rbp+0x0],al
   140001e92:	jb     0x140001e94
   140001e94:	jb     0x140001e96
   140001e96:	outs   dx,DWORD PTR ds:[rsi]
   140001e97:	add    BYTE PTR [rdx+0x0],dh
   140001e9a:	and    DWORD PTR [rax],eax
   140001e9c:	or     al,BYTE PTR [rax]
   140001e9e:	or     al,BYTE PTR [rax]
   140001ea0:	push   rax
   140001ea1:	add    BYTE PTR [rdx+0x0],dh
   140001ea4:	outs   dx,DWORD PTR ds:[rsi]
   140001ea5:	add    BYTE PTR [rdi+0x0],ah
   140001ea8:	jb     0x140001eaa
   140001eaa:	(bad)  
   140001eab:	add    BYTE PTR [rbp+0x0],ch
   140001eae:	cmp    al,BYTE PTR [rax]
   140001eb0:	and    BYTE PTR [rax],al
	...
   140001ebe:	add    BYTE PTR [rax],al
   140001ec0:	add    eax,0xbc00000
	...
   140001ecd:	add    BYTE PTR [rax],al
   140001ecf:	add    BYTE PTR [rip+0x4c00000],bl        # 0x144c01ed5
	...
   140001edd:	add    BYTE PTR [rax],al
   140001edf:	add    BYTE PTR [rsi+0x4c00000],dl
	...
   140001eed:	add    BYTE PTR [rax],al
   140001eef:	add    BYTE PTR [rbp+0x8c00000],cl
	...
   140001efd:	add    BYTE PTR [rax],al
   140001eff:	add    BYTE PTR [rsi+0x8c00000],cl
	...
   140001f0d:	add    BYTE PTR [rax],al
   140001f0f:	add    BYTE PTR [rdi+0x8c00000],cl
	...
   140001f1d:	add    BYTE PTR [rax],al
   140001f1f:	add    BYTE PTR [rax+0x8c00000],dl
	...
   140001f2d:	add    BYTE PTR [rax],al
   140001f2f:	add    BYTE PTR [rcx+0x8c00000],dl
	...
   140001f3d:	add    BYTE PTR [rax],al
   140001f3f:	add    BYTE PTR [rdx+0x8c00000],dl
	...
   140001f4d:	add    BYTE PTR [rax],al
   140001f4f:	add    BYTE PTR [rbx+0x8c00000],dl
	...
   140001f5d:	add    BYTE PTR [rax],al
   140001f5f:	add    BYTE PTR [rdx+rax*1+0x8c000],dh
	...
   140001f6e:	add    BYTE PTR [rax],al
   140001f70:	mov    ch,0x2
   140001f72:	add    al,al
   140001f74:	or     BYTE PTR [rax],al
	...
   140001f7e:	add    BYTE PTR [rax],al
   140001f80:	add    eax,DWORD PTR [rax]
   140001f82:	add    BYTE PTR [rax],al
   140001f84:	or     DWORD PTR [rax],eax
   140001f86:	add    BYTE PTR [rax],al
   140001f88:	rol    BYTE PTR [rax],0x0
   140001f8b:	add    BYTE PTR [rax+rax*1],cl
   140001f8e:	add    BYTE PTR [rax],al
   140001f90:	add    BYTE PTR [rcx+rax*1+0x40],ch
   140001f94:	add    DWORD PTR [rax],eax
   140001f96:	add    BYTE PTR [rax],al
   140001f98:	movabs al,ds:0xb00000000140016c
   140001fa1:	mov    al,BYTE PTR [rax]
   140001fa3:	rex add DWORD PTR [rax],eax
   140001fa6:	add    BYTE PTR [rax],al
   140001fa8:	(bad)  
   140001fa9:	mov    ebx,0x14000
   140001fae:	add    BYTE PTR [rax],al
   140001fb0:	movabs al,ds:0x62000000014000dc
   140001fb9:	(bad)  
   140001fba:	and    BYTE PTR fs:[rcx+0x6c],ah
   140001fbe:	ins    BYTE PTR es:[rdi],dx
   140001fbf:	outs   dx,DWORD PTR ds:[rsi]
   140001fc0:	movsxd esp,DWORD PTR [rcx+0x74]
   140001fc3:	imul   ebp,DWORD PTR [rdi+0x6e],0x65470000
   140001fca:	je     0x14000201c
   140001fcc:	jb     0x14000203d
   140001fce:	movsxd esp,DWORD PTR [rbp+0x73]
   140001fd1:	jae    0x14000202a
   140001fd3:	imul   ebp,DWORD PTR [rsi+0x64],0x7453776f
   140001fda:	(bad)  
   140001fdb:	je     0x140002046
   140001fdd:	outs   dx,DWORD PTR ds:[rsi]
   140001fde:	outs   dx,BYTE PTR ds:[rsi]
   140001fdf:	add    BYTE PTR [rdi+0x65],al
   140001fe2:	je     0x140002039
   140001fe4:	jae    0x14000204b
   140001fe6:	jb     0x140002037
   140001fe8:	(bad)  
   140001fe9:	push   0x65
   140001feb:	movsxd esi,DWORD PTR [rcx+rcx*2+0x6e]
   140001fef:	outs   dx,WORD PTR ds:[rsi]
   140001ff1:	jb     0x140002060
   140001ff3:	(bad)  
   140001ff4:	je     0x14000205f
   140001ff6:	outs   dx,DWORD PTR ds:[rsi]
   140001ff7:	outs   dx,BYTE PTR ds:[rsi]
   140001ff8:	push   rdi
   140001ff9:	add    BYTE PTR [rax],al
   140001ffb:	add    BYTE PTR [rax],al
   140001ffd:	add    BYTE PTR [rax],al
   140001fff:	add    BYTE PTR [rdi+0x65],al
   140002002:	je     0x140002050
   140002004:	(bad)  
   140002005:	jae    0x14000207b
   140002007:	movsxd esi,DWORD PTR [r9+rbp*2+0x76]
   14000200c:	gs push rax
   14000200e:	outs   dx,DWORD PTR ds:[rsi]
   14000200f:	jo     0x140002086
   140002011:	jo     0x140002013
   140002013:	add    BYTE PTR [rax],al
   140002015:	add    BYTE PTR [rax],al
   140002017:	add    BYTE PTR [rdi+0x65],al
   14000201a:	je     0x14000205d
   14000201c:	movsxd esi,DWORD PTR [rcx+rbp*2+0x76]
   140002020:	gs push rdi
   140002022:	imul   ebp,DWORD PTR [rsi+0x64],0x4d00776f
   140002029:	gs jae 0x14000209f
   14000202c:	(bad)  
   14000202d:	rex.X outs dx,DWORD PTR gs:[esi]
   140002031:	js     0x14000208a
   140002033:	add    BYTE PTR [rax],al
   140002035:	add    BYTE PTR [rax],al
   140002037:	add    BYTE PTR [rbp+0x0],dl
   14000203a:	push   rbx
   14000203b:	add    BYTE PTR [rbp+0x0],al
   14000203e:	push   rdx
   14000203f:	add    BYTE PTR [rbx],dh
   140002041:	add    BYTE PTR [rdx],dh
   140002043:	add    BYTE PTR [rsi],ch
   140002045:	add    BYTE PTR [rax+rax*1+0x4c],al
   140002049:	add    BYTE PTR [rax+rax*1+0x0],cl
   14000204d:	add    BYTE PTR [rax],al
   14000204f:	add    BYTE PTR [rax+0x0],cl
   140002052:	rex.W add BYTE PTR [rdx],dil
   140002055:	add    BYTE PTR [rbp+0x0],ch
   140002058:	ins    DWORD PTR es:[rdi],dx
   140002059:	add    BYTE PTR [rdx],bh
   14000205b:	add    BYTE PTR [rbx+0x0],dh
   14000205e:	jae    0x140002060
	...
   140002068:	add    BYTE PTR fs:[rax+rax*1+0x64],ah
   14000206d:	add    BYTE PTR [rax+rax*1+0x2c],ah
   140002071:	add    BYTE PTR [rax],ah
   140002073:	add    BYTE PTR [rbp+0x0],cl
   140002076:	rex.WRB add BYTE PTR [r13+0x0],r9b
   14000207a:	rex.WRB add BYTE PTR [r8],r12b
   14000207d:	add    BYTE PTR [rax+rax*1+0x64],ah
   140002081:	add    BYTE PTR [rax+rax*1],ch
   140002084:	and    BYTE PTR [rax],al
   140002086:	jns    0x140002088
   140002088:	jns    0x14000208a
   14000208a:	jns    0x14000208c
   14000208c:	jns    0x14000208e
   14000208e:	add    BYTE PTR [rax],al
   140002090:	rex.WRB add BYTE PTR [r13+0x0],r9b
   140002094:	(bad)  
   140002095:	add    BYTE PTR [rax+rax*1+0x64],ah
   140002099:	add    BYTE PTR [rdi],ch
   14000209b:	add    BYTE PTR [rcx+0x0],bh
   14000209e:	jns    0x1400020a0
   1400020a0:	add    BYTE PTR [rax],al
   1400020a2:	add    BYTE PTR [rax],al
   1400020a4:	push   rax
   1400020a5:	add    BYTE PTR [rbp+0x0],cl
   1400020a8:	add    BYTE PTR [rax],al
   1400020aa:	add    BYTE PTR [rax],al
   1400020ac:	add    BYTE PTR [r13+0x0],cl
	...
   1400020b8:	add    BYTE PTR [rbp+0x0],r12b
   1400020bc:	movsxd eax,DWORD PTR [rax]
   1400020be:	add    BYTE PTR gs:[rbp+0x0],ch
   1400020c2:	(bad)  
   1400020c3:	add    BYTE PTR [rbp+0x0],ah
   1400020c6:	jb     0x1400020c8
	...
   1400020d0:	rex.WRX add BYTE PTR [rdi+0x0],r13b
   1400020d4:	jbe    0x1400020d6
   1400020d6:	add    BYTE PTR gs:[rbp+0x0],ch
   1400020da:	(bad)  
   1400020db:	add    BYTE PTR [rbp+0x0],ah
   1400020de:	jb     0x1400020e0
	...
   1400020e8:	rex.WRXB add BYTE PTR [r11+0x0],r12b
   1400020ec:	je     0x1400020ee
   1400020ee:	outs   dx,DWORD PTR ds:[rsi]
   1400020ef:	add    BYTE PTR [rdx+0x0],ah
   1400020f2:	add    BYTE PTR gs:[rdx+0x0],dh
   1400020f6:	add    BYTE PTR [rax],al
   1400020f8:	push   rbx
   1400020f9:	add    BYTE PTR [rbp+0x0],ah
   1400020fc:	jo     0x1400020fe
   1400020fe:	je     0x140002100
   140002100:	add    BYTE PTR gs:[rbp+0x0],ch
   140002104:	(bad)  
   140002105:	add    BYTE PTR [rbp+0x0],ah
   140002108:	jb     0x14000210a
   14000210a:	add    BYTE PTR [rax],al
   14000210c:	add    BYTE PTR [rax],al
   14000210e:	add    BYTE PTR [rax],al
   140002110:	add    BYTE PTR [r13+0x0],sil
   140002114:	add    BYTE PTR [ebp+0x0],dh
   140002118:	jae    0x14000211a
   14000211a:	je     0x14000211c
   14000211c:	add    BYTE PTR [rax],al
   14000211e:	add    BYTE PTR [rax],al
   140002120:	rex.WX add BYTE PTR [rbp+0x0],sil
   140002124:	ins    BYTE PTR es:[rdi],dx
   140002125:	add    BYTE PTR [rcx+0x0],bh
	...
   140002130:	rex.WX add BYTE PTR [rbp+0x0],sil
   140002134:	outs   dx,BYTE PTR ds:[rsi]
   140002135:	add    BYTE PTR [rbp+0x0],ah
	...
   140002140:	add    BYTE PTR [r8+0x0],sil
   140002144:	jb     0x140002146
   140002146:	imul   eax,DWORD PTR [rax],0x6c
   14000214c:	add    BYTE PTR [rax],al
   14000214e:	add    BYTE PTR [rax],al
   140002150:	rex.WRB add BYTE PTR [r9+0x0],r12b
   140002154:	jb     0x140002156
   140002156:	movsxd eax,DWORD PTR [rax]
   140002158:	push   0x0
   14000215d:	add    BYTE PTR [rax],al
   14000215f:	add    BYTE PTR [rsi+0x0],al
   140002162:	add    BYTE PTR gs:[rdx+0x0],ah
   140002166:	jb     0x140002168
   140002168:	jne    0x14000216a
   14000216a:	(bad)  
   14000216b:	add    BYTE PTR [rdx+0x0],dh
   14000216e:	jns    0x140002170
	...
   140002178:	rex.WX add BYTE PTR [rcx+0x0],spl
   14000217c:	outs   dx,BYTE PTR ds:[rsi]
   14000217d:	add    BYTE PTR [rbp+0x0],dh
   140002180:	(bad)  
   140002181:	add    BYTE PTR [rdx+0x0],dh
   140002184:	jns    0x140002186
   140002186:	add    BYTE PTR [rax],al
   140002188:	add    BYTE PTR [rbp+0x0],r12b
   14000218c:	movsxd eax,DWORD PTR [rax]
   14000218e:	add    BYTE PTR [rax],al
   140002190:	rex.WRX add BYTE PTR [rdi+0x0],r13b
   140002194:	jbe    0x140002196
   140002196:	add    BYTE PTR [rax],al
   140002198:	rex.WRXB add BYTE PTR [r11+0x0],r12b
   14000219c:	je     0x14000219e
   14000219e:	add    BYTE PTR [rax],al
   1400021a0:	push   rbx
   1400021a1:	add    BYTE PTR [rbp+0x0],ah
   1400021a4:	jo     0x1400021a6
   1400021a6:	add    BYTE PTR [rax],al
   1400021a8:	add    BYTE PTR [r13+0x0],sil
   1400021ac:	add    BYTE PTR [eax],al
   1400021af:	add    BYTE PTR [rdx+0x0],cl
   1400021b2:	jne    0x1400021b4
   1400021b4:	ins    BYTE PTR es:[rdi],dx
   1400021b5:	add    BYTE PTR [rax],al
   1400021b7:	add    BYTE PTR [rdx+0x0],cl
   1400021ba:	jne    0x1400021bc
   1400021bc:	outs   dx,BYTE PTR ds:[rsi]
   1400021bd:	add    BYTE PTR [rax],al
   1400021bf:	add    BYTE PTR [rbp+0x0],cl
   1400021c2:	(bad)  
   1400021c3:	add    BYTE PTR [rcx+0x0],bh
   1400021c6:	add    BYTE PTR [rax],al
   1400021c8:	add    BYTE PTR [r8+0x0],sil
   1400021cc:	jb     0x1400021ce
   1400021ce:	add    BYTE PTR [rax],al
   1400021d0:	rex.WRB add BYTE PTR [r9+0x0],r12b
   1400021d4:	jb     0x1400021d6
   1400021d6:	add    BYTE PTR [rax],al
   1400021d8:	rex.RX add BYTE PTR [rbp+0x0],r12b
   1400021dc:	(bad)  
   1400021dd:	add    BYTE PTR [rax],al
   1400021df:	add    BYTE PTR [rdx+0x0],cl
   1400021e2:	(bad)  
   1400021e3:	add    BYTE PTR [rsi+0x0],ch
   1400021e6:	add    BYTE PTR [rax],al
   1400021e8:	push   rbx
   1400021e9:	add    BYTE PTR [rcx+0x0],ah
   1400021ec:	je     0x1400021ee
   1400021ee:	jne    0x1400021f0
   1400021f0:	jb     0x1400021f2
   1400021f2:	add    BYTE PTR fs:[rcx+0x0],ah
   1400021f6:	jns    0x1400021f8
	...
   140002200:	rex.RX add BYTE PTR [rdx+0x0],r14b
   140002204:	imul   eax,DWORD PTR [rax],0x610064
   14000220a:	jns    0x14000220c
   14000220c:	add    BYTE PTR [rax],al
   14000220e:	add    BYTE PTR [rax],al
   140002210:	push   rsp
   140002211:	add    BYTE PTR [rax+0x0],ch
   140002214:	jne    0x140002216
   140002216:	jb     0x140002218
   140002218:	jae    0x14000221a
   14000221a:	add    BYTE PTR fs:[rcx+0x0],ah
   14000221e:	jns    0x140002220
	...
   140002228:	push   rdi
   140002229:	add    BYTE PTR [rbp+0x0],ah
   14000222c:	add    BYTE PTR fs:[rsi+0x0],ch
   140002230:	add    BYTE PTR gs:[rbx+0x0],dh
   140002234:	add    BYTE PTR fs:[rcx+0x0],ah
   140002238:	jns    0x14000223a
   14000223a:	add    BYTE PTR [rax],al
   14000223c:	add    BYTE PTR [rax],al
   14000223e:	add    BYTE PTR [rax],al
   140002240:	push   rsp
   140002241:	add    BYTE PTR [rbp+0x0],dh
   140002244:	add    BYTE PTR gs:[rbx+0x0],dh
   140002248:	add    BYTE PTR fs:[rcx+0x0],ah
   14000224c:	jns    0x14000224e
   14000224e:	add    BYTE PTR [rax],al
   140002250:	rex.WRB add BYTE PTR [r15+0x0],r13b
   140002254:	outs   dx,BYTE PTR ds:[rsi]
   140002255:	add    BYTE PTR [rax+rax*1+0x61],ah
   140002259:	add    BYTE PTR [rcx+0x0],bh
   14000225c:	add    BYTE PTR [rax],al
   14000225e:	add    BYTE PTR [rax],al
   140002260:	push   rbx
   140002261:	add    BYTE PTR [rbp+0x0],dh
   140002264:	outs   dx,BYTE PTR ds:[rsi]
   140002265:	add    BYTE PTR [rax+rax*1+0x61],ah
   140002269:	add    BYTE PTR [rcx+0x0],bh
   14000226c:	add    BYTE PTR [rax],al
   14000226e:	add    BYTE PTR [rax],al
   140002270:	push   rbx
   140002271:	add    BYTE PTR [rcx+0x0],ah
   140002274:	je     0x140002276
   140002276:	add    BYTE PTR [rax],al
   140002278:	rex.RX add BYTE PTR [rdx+0x0],r14b
   14000227c:	imul   eax,DWORD PTR [rax],0x540000
   140002282:	push   0x7500
   140002287:	add    BYTE PTR [rdi+0x0],dl
   14000228a:	add    BYTE PTR gs:[rax+rax*1+0x0],ah
   14000228f:	add    BYTE PTR [rax+rax*1+0x75],dl
   140002293:	add    BYTE PTR [rbp+0x0],ah
   140002296:	add    BYTE PTR [rax],al
   140002298:	rex.WRB add BYTE PTR [r15+0x0],r13b
   14000229c:	outs   dx,BYTE PTR ds:[rsi]
   14000229d:	add    BYTE PTR [rax],al
   14000229f:	add    BYTE PTR [rbx+0x0],dl
   1400022a2:	jne    0x1400022a4
   1400022a4:	outs   dx,BYTE PTR ds:[rsi]
   1400022a5:	add    BYTE PTR [rax],al
   1400022a7:	add    BYTE PTR [rax+0x48],cl
   1400022aa:	cmp    ch,BYTE PTR [rbp+0x6d]
   1400022ad:	cmp    dh,BYTE PTR [rbx+0x73]
	...
   1400022b8:	fs fs fs fs sub al,0x20
   1400022be:	rex.WRB
   1400022bf:	rex.WRB
   1400022c0:	rex.WRB
   1400022c1:	rex.WRB and BYTE PTR [r12+riz*2+0x2c],r12b
   1400022c6:	and    BYTE PTR [rcx+0x79],bh
   1400022c9:	jns    0x140002344
   1400022cb:	add    BYTE PTR [rax],al
   1400022cd:	add    BYTE PTR [rax],al
   1400022cf:	add    BYTE PTR [rbp+0x4d],cl
   1400022d2:	(bad)  
   1400022d3:	fs fs (bad) 
   1400022d6:	jns    0x140002351
   1400022d8:	add    BYTE PTR [rax],al
   1400022da:	add    BYTE PTR [rax],al
   1400022dc:	push   rax
   1400022dd:	rex.WRB add BYTE PTR [r8],r8b
   1400022e0:	rex.B
   1400022e1:	rex.WRB add BYTE PTR [r8],r8b
   1400022e4:	add    BYTE PTR [rax],al
   1400022e6:	add    BYTE PTR [rax],al
   1400022e8:	rex.R
   1400022e9:	movsxd esp,DWORD PTR gs:[rbp+0x6d]
   1400022ed:	(bad)  
   1400022ee:	gs jb  0x1400022f1
   1400022f1:	add    BYTE PTR [rax],al
   1400022f3:	add    BYTE PTR [rax],al
   1400022f5:	add    BYTE PTR [rax],al
   1400022f7:	add    BYTE PTR [rsi+0x6f],cl
   1400022fa:	jbe    0x140002361
   1400022fc:	ins    DWORD PTR es:[rdi],dx
   1400022fd:	(bad)  
   1400022fe:	gs jb  0x140002301
   140002301:	add    BYTE PTR [rax],al
   140002303:	add    BYTE PTR [rax],al
   140002305:	add    BYTE PTR [rax],al
   140002307:	add    BYTE PTR [rdi+0x63],cl
   14000230a:	je     0x14000237b
   14000230c:	(bad)  
   14000230d:	gs jb  0x140002310
   140002310:	push   rbx
   140002311:	gs jo  0x140002388
   140002314:	gs ins DWORD PTR es:[rdi],dx
   140002316:	(bad)  
   140002317:	gs jb  0x14000231a
   14000231a:	add    BYTE PTR [rax],al
   14000231c:	rex.B jne 0x140002386
   14000231f:	jne    0x140002394
   140002321:	je     0x140002323
   140002323:	add    BYTE PTR [rdx+0x75],cl
   140002326:	ins    BYTE PTR es:[rdi],dx
   140002327:	jns    0x140002329
   140002329:	add    BYTE PTR [rax],al
   14000232b:	add    BYTE PTR [rdx+0x75],cl
   14000232e:	outs   dx,BYTE PTR ds:[rsi]
   14000232f:	add    BYTE PTR gs:[rax],al
   140002332:	add    BYTE PTR [rax],al
   140002334:	rex.B jo 0x1400023a9
   140002337:	imul   ebp,DWORD PTR [rax+rax*1+0x0],0x72614d00
   14000233f:	movsxd ebp,DWORD PTR [rax+0x0]
   140002342:	add    BYTE PTR [rax],al
   140002344:	add    BYTE PTR [rax],al
   140002346:	add    BYTE PTR [rax],al
   140002348:	rex.RX
   140002349:	(bad)
   14000234f:	jns    0x140002351
   140002351:	add    BYTE PTR [rax],al
   140002353:	add    BYTE PTR [rax],al
   140002355:	add    BYTE PTR [rax],al
   140002357:	add    BYTE PTR [rdx+0x61],cl
   14000235a:	outs   dx,BYTE PTR ds:[rsi]
   14000235b:	jne    0x1400023be
   14000235d:	jb     0x1400023d8
   14000235f:	add    BYTE PTR [rbp+riz*2+0x63],al
   140002363:	add    BYTE PTR [rsi+0x6f],cl
   140002366:	jbe    0x140002368
   140002368:	movsxd r14,DWORD PTR [r8+r8*1+0x53]
   14000236d:	gs jo  0x140002370
   140002370:	rex.B jne 0x1400023da
   140002373:	add    BYTE PTR [rdx+0x75],cl
   140002376:	ins    BYTE PTR es:[rdi],dx
   140002377:	add    BYTE PTR [rdx+0x75],cl
   14000237a:	outs   dx,BYTE PTR ds:[rsi]
   14000237b:	add    BYTE PTR [rbp+0x61],cl
   14000237e:	jns    0x140002380
   140002380:	rex.B jo 0x1400023f5
   140002383:	add    BYTE PTR [rbp+0x61],cl
   140002386:	jb     0x140002388
   140002388:	rex.RX
   140002389:	gs (bad) 
   14000238b:	add    BYTE PTR [rdx+0x61],cl
   14000238e:	outs   dx,BYTE PTR ds:[rsi]
   14000238f:	add    BYTE PTR [rbx+0x61],dl
   140002392:	je     0x140002409
   140002394:	jb     0x1400023fa
   140002396:	(bad)  
   140002397:	jns    0x140002399
   140002399:	add    BYTE PTR [rax],al
   14000239b:	add    BYTE PTR [rsi+0x72],al
   14000239e:	imul   esp,DWORD PTR [rcx+riz*2+0x79],0x0
   1400023a6:	add    BYTE PTR [rax],al
   1400023a8:	push   rsp
   1400023a9:	push   0x64737275
   1400023ae:	(bad)  
   1400023af:	jns    0x1400023b1
   1400023b1:	add    BYTE PTR [rax],al
   1400023b3:	add    BYTE PTR [rax],al
   1400023b5:	add    BYTE PTR [rax],al
   1400023b7:	add    BYTE PTR [rdi+0x65],dl
   1400023ba:	outs   dx,BYTE PTR fs:[rsi]
   1400023bc:	gs jae 0x140002423
   1400023bf:	(bad)  
   1400023c0:	jns    0x1400023c2
   1400023c2:	add    BYTE PTR [rax],al
   1400023c4:	add    BYTE PTR [rax],al
   1400023c6:	add    BYTE PTR [rax],al
   1400023c8:	push   rsp
   1400023c9:	jne    0x140002430
   1400023cb:	jae    0x140002431
   1400023cd:	(bad)  
   1400023ce:	jns    0x1400023d0
   1400023d0:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   1400023d2:	outs   dx,BYTE PTR ds:[rsi]
   1400023d3:	fs (bad) 
   1400023d5:	jns    0x1400023d7
   1400023d7:	add    BYTE PTR [rbx+0x75],dl
   1400023da:	outs   dx,BYTE PTR ds:[rsi]
   1400023db:	fs (bad) 
   1400023dd:	jns    0x1400023df
   1400023df:	add    BYTE PTR [rbx+0x61],dl
   1400023e2:	je     0x1400023e4
   1400023e4:	rex.RX jb 0x140002450
   1400023e7:	add    BYTE PTR [rax+rbp*2+0x75],dl
   1400023eb:	add    BYTE PTR [rdi+0x65],dl
   1400023ee:	add    BYTE PTR fs:[rbp+rsi*2+0x65],dl
   1400023f3:	add    BYTE PTR [rbp+0x6f],cl
   1400023f6:	outs   dx,BYTE PTR ds:[rsi]
   1400023f7:	add    BYTE PTR [rbx+0x75],dl
   1400023fa:	outs   dx,BYTE PTR ds:[rsi]
   1400023fb:	add    BYTE PTR [rax],al
   1400023fd:	add    BYTE PTR [rax],al
   1400023ff:	add    BYTE PTR [rax+0x140008b],al
   140002405:	add    BYTE PTR [rax],al
   140002407:	add    BYTE PTR [rbp+rbx*8+0x14000],ch
   14000240e:	add    BYTE PTR [rax],al
   140002410:	movabs al,ds:0x55000000014000dc
   140002419:	outs   dx,BYTE PTR ds:[rsi]
   14000241a:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
   14000241e:	outs   dx,BYTE PTR ds:[rsi]
   14000241f:	and    BYTE PTR [rbp+0x78],ah
   140002422:	movsxd esp,DWORD PTR [rbp+0x70]
   140002425:	je     0x140002490
   140002427:	outs   dx,DWORD PTR ds:[rsi]
   140002428:	outs   dx,BYTE PTR ds:[rsi]
   140002429:	add    BYTE PTR [rax],al
   14000242b:	add    BYTE PTR [rax],al
   14000242d:	add    BYTE PTR [rax],al
   14000242f:	add    BYTE PTR [rax+0x140008b],ch
   140002435:	add    BYTE PTR [rax],al
   140002437:	add    BYTE PTR [rsi+rbx*8],bl
   14000243a:	add    BYTE PTR [rax+0x1],al
   14000243d:	add    BYTE PTR [rax],al
   14000243f:	add    BYTE PTR [rbx+0x73],ah
   140002442:	ins    DWORD PTR es:[rdi],dx
   140002443:	loopne 0x140002446
	...
   140002455:	add    BYTE PTR [rax],al
   140002457:	add    BYTE PTR [rax+rax*1],al
   14000245a:	add    BYTE PTR [rax],al
   14000245c:	add    BYTE PTR [rax],al
   14000245e:	add    BYTE PTR [rax],al
   140002460:	and    BYTE PTR [rip+0x1993],al        # 0x140003df9
	...
   14000257e:	add    BYTE PTR [rax],al
   140002580:	and    BYTE PTR [rax],al
   140002582:	and    BYTE PTR [rax],al
   140002584:	and    BYTE PTR [rax],al
   140002586:	and    BYTE PTR [rax],al
   140002588:	and    BYTE PTR [rax],al
   14000258a:	and    BYTE PTR [rax],al
   14000258c:	and    BYTE PTR [rax],al
   14000258e:	and    BYTE PTR [rax],al
   140002590:	and    BYTE PTR [rax],al
   140002592:	sub    BYTE PTR [rax],al
   140002594:	sub    BYTE PTR [rax],al
   140002596:	sub    BYTE PTR [rax],al
   140002598:	sub    BYTE PTR [rax],al
   14000259a:	sub    BYTE PTR [rax],al
   14000259c:	and    BYTE PTR [rax],al
   14000259e:	and    BYTE PTR [rax],al
   1400025a0:	and    BYTE PTR [rax],al
   1400025a2:	and    BYTE PTR [rax],al
   1400025a4:	and    BYTE PTR [rax],al
   1400025a6:	and    BYTE PTR [rax],al
   1400025a8:	and    BYTE PTR [rax],al
   1400025aa:	and    BYTE PTR [rax],al
   1400025ac:	and    BYTE PTR [rax],al
   1400025ae:	and    BYTE PTR [rax],al
   1400025b0:	and    BYTE PTR [rax],al
   1400025b2:	and    BYTE PTR [rax],al
   1400025b4:	and    BYTE PTR [rax],al
   1400025b6:	and    BYTE PTR [rax],al
   1400025b8:	and    BYTE PTR [rax],al
   1400025ba:	and    BYTE PTR [rax],al
   1400025bc:	and    BYTE PTR [rax],al
   1400025be:	and    BYTE PTR [rax],al
   1400025c0:	rex.W add BYTE PTR [rax],dl
   1400025c3:	add    BYTE PTR [rax],dl
   1400025c5:	add    BYTE PTR [rax],dl
   1400025c7:	add    BYTE PTR [rax],dl
   1400025c9:	add    BYTE PTR [rax],dl
   1400025cb:	add    BYTE PTR [rax],dl
   1400025cd:	add    BYTE PTR [rax],dl
   1400025cf:	add    BYTE PTR [rax],dl
   1400025d1:	add    BYTE PTR [rax],dl
   1400025d3:	add    BYTE PTR [rax],dl
   1400025d5:	add    BYTE PTR [rax],dl
   1400025d7:	add    BYTE PTR [rax],dl
   1400025d9:	add    BYTE PTR [rax],dl
   1400025db:	add    BYTE PTR [rax],dl
   1400025dd:	add    BYTE PTR [rax],dl
   1400025df:	add    BYTE PTR [rax+rax*1+0x840084],al
   1400025e6:	test   BYTE PTR [rax],al
   1400025e8:	test   BYTE PTR [rax],al
   1400025ea:	test   BYTE PTR [rax],al
   1400025ec:	test   BYTE PTR [rax],al
   1400025ee:	test   BYTE PTR [rax],al
   1400025f0:	test   BYTE PTR [rax],al
   1400025f2:	test   BYTE PTR [rax],al
   1400025f4:	adc    BYTE PTR [rax],al
   1400025f6:	adc    BYTE PTR [rax],al
   1400025f8:	adc    BYTE PTR [rax],al
   1400025fa:	adc    BYTE PTR [rax],al
   1400025fc:	adc    BYTE PTR [rax],al
   1400025fe:	adc    BYTE PTR [rax],al
   140002600:	adc    BYTE PTR [rax],al
   140002602:	add    DWORD PTR [rax],0x810081
   140002608:	add    DWORD PTR [rax],0x810081
   14000260e:	add    DWORD PTR [rax],eax
   140002610:	add    DWORD PTR [rax],eax
   140002612:	add    DWORD PTR [rax],eax
   140002614:	add    DWORD PTR [rax],eax
   140002616:	add    DWORD PTR [rax],eax
   140002618:	add    DWORD PTR [rax],eax
   14000261a:	add    DWORD PTR [rax],eax
   14000261c:	add    DWORD PTR [rax],eax
   14000261e:	add    DWORD PTR [rax],eax
   140002620:	add    DWORD PTR [rax],eax
   140002622:	add    DWORD PTR [rax],eax
   140002624:	add    DWORD PTR [rax],eax
   140002626:	add    DWORD PTR [rax],eax
   140002628:	add    DWORD PTR [rax],eax
   14000262a:	add    DWORD PTR [rax],eax
   14000262c:	add    DWORD PTR [rax],eax
   14000262e:	add    DWORD PTR [rax],eax
   140002630:	add    DWORD PTR [rax],eax
   140002632:	add    DWORD PTR [rax],eax
   140002634:	add    DWORD PTR [rax],eax
   140002636:	adc    BYTE PTR [rax],al
   140002638:	adc    BYTE PTR [rax],al
   14000263a:	adc    BYTE PTR [rax],al
   14000263c:	adc    BYTE PTR [rax],al
   14000263e:	adc    BYTE PTR [rax],al
   140002640:	adc    BYTE PTR [rax],al
   140002642:	(bad)  
   140002643:	add    BYTE PTR [rdx-0x7dff7e00],al
   140002649:	add    BYTE PTR [rdx+0x2008200],al
   14000264f:	add    BYTE PTR [rdx],al
   140002651:	add    BYTE PTR [rdx],al
   140002653:	add    BYTE PTR [rdx],al
   140002655:	add    BYTE PTR [rdx],al
   140002657:	add    BYTE PTR [rdx],al
   140002659:	add    BYTE PTR [rdx],al
   14000265b:	add    BYTE PTR [rdx],al
   14000265d:	add    BYTE PTR [rdx],al
   14000265f:	add    BYTE PTR [rdx],al
   140002661:	add    BYTE PTR [rdx],al
   140002663:	add    BYTE PTR [rdx],al
   140002665:	add    BYTE PTR [rdx],al
   140002667:	add    BYTE PTR [rdx],al
   140002669:	add    BYTE PTR [rdx],al
   14000266b:	add    BYTE PTR [rdx],al
   14000266d:	add    BYTE PTR [rdx],al
   14000266f:	add    BYTE PTR [rdx],al
   140002671:	add    BYTE PTR [rdx],al
   140002673:	add    BYTE PTR [rdx],al
   140002675:	add    BYTE PTR [rax],dl
   140002677:	add    BYTE PTR [rax],dl
   140002679:	add    BYTE PTR [rax],dl
   14000267b:	add    BYTE PTR [rax],dl
   14000267d:	add    BYTE PTR [rax],ah
	...
   14000277f:	add    BYTE PTR [rax],al
   140002781:	add    BYTE PTR [rax],ah
   140002783:	add    BYTE PTR [rax],ah
   140002785:	add    BYTE PTR [rax],ah
   140002787:	add    BYTE PTR [rax],ah
   140002789:	add    BYTE PTR [rax],ah
   14000278b:	add    BYTE PTR [rax],ah
   14000278d:	add    BYTE PTR [rax],ah
   14000278f:	add    BYTE PTR [rax],ah
   140002791:	add    BYTE PTR [rax],ah
   140002793:	add    BYTE PTR [rax+0x0],ch
   140002796:	sub    BYTE PTR [rax],al
   140002798:	sub    BYTE PTR [rax],al
   14000279a:	sub    BYTE PTR [rax],al
   14000279c:	sub    BYTE PTR [rax],al
   14000279e:	and    BYTE PTR [rax],al
   1400027a0:	and    BYTE PTR [rax],al
   1400027a2:	and    BYTE PTR [rax],al
   1400027a4:	and    BYTE PTR [rax],al
   1400027a6:	and    BYTE PTR [rax],al
   1400027a8:	and    BYTE PTR [rax],al
   1400027aa:	and    BYTE PTR [rax],al
   1400027ac:	and    BYTE PTR [rax],al
   1400027ae:	and    BYTE PTR [rax],al
   1400027b0:	and    BYTE PTR [rax],al
   1400027b2:	and    BYTE PTR [rax],al
   1400027b4:	and    BYTE PTR [rax],al
   1400027b6:	and    BYTE PTR [rax],al
   1400027b8:	and    BYTE PTR [rax],al
   1400027ba:	and    BYTE PTR [rax],al
   1400027bc:	and    BYTE PTR [rax],al
   1400027be:	and    BYTE PTR [rax],al
   1400027c0:	and    BYTE PTR [rax],al
   1400027c2:	rex.W add BYTE PTR [rax],dl
   1400027c5:	add    BYTE PTR [rax],dl
   1400027c7:	add    BYTE PTR [rax],dl
   1400027c9:	add    BYTE PTR [rax],dl
   1400027cb:	add    BYTE PTR [rax],dl
   1400027cd:	add    BYTE PTR [rax],dl
   1400027cf:	add    BYTE PTR [rax],dl
   1400027d1:	add    BYTE PTR [rax],dl
   1400027d3:	add    BYTE PTR [rax],dl
   1400027d5:	add    BYTE PTR [rax],dl
   1400027d7:	add    BYTE PTR [rax],dl
   1400027d9:	add    BYTE PTR [rax],dl
   1400027db:	add    BYTE PTR [rax],dl
   1400027dd:	add    BYTE PTR [rax],dl
   1400027df:	add    BYTE PTR [rax],dl
   1400027e1:	add    BYTE PTR [rax+rax*1+0x840084],al
   1400027e8:	test   BYTE PTR [rax],al
   1400027ea:	test   BYTE PTR [rax],al
   1400027ec:	test   BYTE PTR [rax],al
   1400027ee:	test   BYTE PTR [rax],al
   1400027f0:	test   BYTE PTR [rax],al
   1400027f2:	test   BYTE PTR [rax],al
   1400027f4:	test   BYTE PTR [rax],al
   1400027f6:	adc    BYTE PTR [rax],al
   1400027f8:	adc    BYTE PTR [rax],al
   1400027fa:	adc    BYTE PTR [rax],al
   1400027fc:	adc    BYTE PTR [rax],al
   1400027fe:	adc    BYTE PTR [rax],al
   140002800:	adc    BYTE PTR [rax],al
   140002802:	adc    BYTE PTR [rax],al
   140002804:	add    DWORD PTR [rcx],0x1810181
   14000280a:	add    DWORD PTR [rcx],0x1810181
   140002810:	add    DWORD PTR [rcx],eax
   140002812:	add    DWORD PTR [rcx],eax
   140002814:	add    DWORD PTR [rcx],eax
   140002816:	add    DWORD PTR [rcx],eax
   140002818:	add    DWORD PTR [rcx],eax
   14000281a:	add    DWORD PTR [rcx],eax
   14000281c:	add    DWORD PTR [rcx],eax
   14000281e:	add    DWORD PTR [rcx],eax
   140002820:	add    DWORD PTR [rcx],eax
   140002822:	add    DWORD PTR [rcx],eax
   140002824:	add    DWORD PTR [rcx],eax
   140002826:	add    DWORD PTR [rcx],eax
   140002828:	add    DWORD PTR [rcx],eax
   14000282a:	add    DWORD PTR [rcx],eax
   14000282c:	add    DWORD PTR [rcx],eax
   14000282e:	add    DWORD PTR [rcx],eax
   140002830:	add    DWORD PTR [rcx],eax
   140002832:	add    DWORD PTR [rcx],eax
   140002834:	add    DWORD PTR [rcx],eax
   140002836:	add    DWORD PTR [rcx],eax
   140002838:	adc    BYTE PTR [rax],al
   14000283a:	adc    BYTE PTR [rax],al
   14000283c:	adc    BYTE PTR [rax],al
   14000283e:	adc    BYTE PTR [rax],al
   140002840:	adc    BYTE PTR [rax],al
   140002842:	adc    BYTE PTR [rax],al
   140002844:	(bad)  
   140002845:	add    DWORD PTR [rdx-0x7dfe7dff],eax
   14000284b:	add    DWORD PTR [rdx+0x2018201],eax
   140002851:	add    DWORD PTR [rdx],eax
   140002853:	add    DWORD PTR [rdx],eax
   140002855:	add    DWORD PTR [rdx],eax
   140002857:	add    DWORD PTR [rdx],eax
   140002859:	add    DWORD PTR [rdx],eax
   14000285b:	add    DWORD PTR [rdx],eax
   14000285d:	add    DWORD PTR [rdx],eax
   14000285f:	add    DWORD PTR [rdx],eax
   140002861:	add    DWORD PTR [rdx],eax
   140002863:	add    DWORD PTR [rdx],eax
   140002865:	add    DWORD PTR [rdx],eax
   140002867:	add    DWORD PTR [rdx],eax
   140002869:	add    DWORD PTR [rdx],eax
   14000286b:	add    DWORD PTR [rdx],eax
   14000286d:	add    DWORD PTR [rdx],eax
   14000286f:	add    DWORD PTR [rdx],eax
   140002871:	add    DWORD PTR [rdx],eax
   140002873:	add    DWORD PTR [rdx],eax
   140002875:	add    DWORD PTR [rdx],eax
   140002877:	add    DWORD PTR [rax],edx
   140002879:	add    BYTE PTR [rax],dl
   14000287b:	add    BYTE PTR [rax],dl
   14000287d:	add    BYTE PTR [rax],dl
   14000287f:	add    BYTE PTR [rax],ah
   140002881:	add    BYTE PTR [rax],ah
   140002883:	add    BYTE PTR [rax],ah
   140002885:	add    BYTE PTR [rax],ah
   140002887:	add    BYTE PTR [rax],ah
   140002889:	add    BYTE PTR [rax],ah
   14000288b:	add    BYTE PTR [rax],ah
   14000288d:	add    BYTE PTR [rax],ah
   14000288f:	add    BYTE PTR [rax],ah
   140002891:	add    BYTE PTR [rax],ah
   140002893:	add    BYTE PTR [rax],ah
   140002895:	add    BYTE PTR [rax],ah
   140002897:	add    BYTE PTR [rax],ah
   140002899:	add    BYTE PTR [rax],ah
   14000289b:	add    BYTE PTR [rax],ah
   14000289d:	add    BYTE PTR [rax],ah
   14000289f:	add    BYTE PTR [rax],ah
   1400028a1:	add    BYTE PTR [rax],ah
   1400028a3:	add    BYTE PTR [rax],ah
   1400028a5:	add    BYTE PTR [rax],ah
   1400028a7:	add    BYTE PTR [rax],ah
   1400028a9:	add    BYTE PTR [rax],ah
   1400028ab:	add    BYTE PTR [rax],ah
   1400028ad:	add    BYTE PTR [rax],ah
   1400028af:	add    BYTE PTR [rax],ah
   1400028b1:	add    BYTE PTR [rax],ah
   1400028b3:	add    BYTE PTR [rax],ah
   1400028b5:	add    BYTE PTR [rax],ah
   1400028b7:	add    BYTE PTR [rax],ah
   1400028b9:	add    BYTE PTR [rax],ah
   1400028bb:	add    BYTE PTR [rax],ah
   1400028bd:	add    BYTE PTR [rax],ah
   1400028bf:	add    BYTE PTR [rax],ah
   1400028c1:	add    BYTE PTR [rax+0x0],cl
   1400028c4:	adc    BYTE PTR [rax],al
   1400028c6:	adc    BYTE PTR [rax],al
   1400028c8:	adc    BYTE PTR [rax],al
   1400028ca:	adc    BYTE PTR [rax],al
   1400028cc:	adc    BYTE PTR [rax],al
   1400028ce:	adc    BYTE PTR [rax],al
   1400028d0:	adc    BYTE PTR [rax],al
   1400028d2:	adc    BYTE PTR [rax],al
   1400028d4:	adc    BYTE PTR [rax],al
   1400028d6:	adc    BYTE PTR [rax],al
   1400028d8:	adc    BYTE PTR [rax],al
   1400028da:	adc    BYTE PTR [rax],al
   1400028dc:	adc    BYTE PTR [rax],al
   1400028de:	adc    BYTE PTR [rax],al
   1400028e0:	adc    BYTE PTR [rax],al
   1400028e2:	adc    BYTE PTR [rax],al
   1400028e4:	adc    BYTE PTR [rax],al
   1400028e6:	adc    al,0x0
   1400028e8:	adc    al,0x0
   1400028ea:	adc    BYTE PTR [rax],al
   1400028ec:	adc    BYTE PTR [rax],al
   1400028ee:	adc    BYTE PTR [rax],al
   1400028f0:	adc    BYTE PTR [rax],al
   1400028f2:	adc    BYTE PTR [rax],al
   1400028f4:	adc    al,0x0
   1400028f6:	adc    BYTE PTR [rax],al
   1400028f8:	adc    BYTE PTR [rax],al
   1400028fa:	adc    BYTE PTR [rax],al
   1400028fc:	adc    BYTE PTR [rax],al
   1400028fe:	adc    BYTE PTR [rax],al
   140002900:	adc    BYTE PTR [rax],al
   140002902:	add    DWORD PTR [rcx],eax
   140002904:	add    DWORD PTR [rcx],eax
   140002906:	add    DWORD PTR [rcx],eax
   140002908:	add    DWORD PTR [rcx],eax
   14000290a:	add    DWORD PTR [rcx],eax
   14000290c:	add    DWORD PTR [rcx],eax
   14000290e:	add    DWORD PTR [rcx],eax
   140002910:	add    DWORD PTR [rcx],eax
   140002912:	add    DWORD PTR [rcx],eax
   140002914:	add    DWORD PTR [rcx],eax
   140002916:	add    DWORD PTR [rcx],eax
   140002918:	add    DWORD PTR [rcx],eax
   14000291a:	add    DWORD PTR [rcx],eax
   14000291c:	add    DWORD PTR [rcx],eax
   14000291e:	add    DWORD PTR [rcx],eax
   140002920:	add    DWORD PTR [rcx],eax
   140002922:	add    DWORD PTR [rcx],eax
   140002924:	add    DWORD PTR [rcx],eax
   140002926:	add    DWORD PTR [rcx],eax
   140002928:	add    DWORD PTR [rcx],eax
   14000292a:	add    DWORD PTR [rcx],eax
   14000292c:	add    DWORD PTR [rcx],eax
   14000292e:	add    DWORD PTR [rcx],eax
   140002930:	adc    BYTE PTR [rax],al
   140002932:	add    DWORD PTR [rcx],eax
   140002934:	add    DWORD PTR [rcx],eax
   140002936:	add    DWORD PTR [rcx],eax
   140002938:	add    DWORD PTR [rcx],eax
   14000293a:	add    DWORD PTR [rcx],eax
   14000293c:	add    DWORD PTR [rcx],eax
   14000293e:	add    DWORD PTR [rcx],eax
   140002940:	add    al,BYTE PTR [rcx]
   140002942:	add    al,BYTE PTR [rcx]
   140002944:	add    al,BYTE PTR [rcx]
   140002946:	add    al,BYTE PTR [rcx]
   140002948:	add    al,BYTE PTR [rcx]
   14000294a:	add    al,BYTE PTR [rcx]
   14000294c:	add    al,BYTE PTR [rcx]
   14000294e:	add    al,BYTE PTR [rcx]
   140002950:	add    al,BYTE PTR [rcx]
   140002952:	add    al,BYTE PTR [rcx]
   140002954:	add    al,BYTE PTR [rcx]
   140002956:	add    al,BYTE PTR [rcx]
   140002958:	add    al,BYTE PTR [rcx]
   14000295a:	add    al,BYTE PTR [rcx]
   14000295c:	add    al,BYTE PTR [rcx]
   14000295e:	add    al,BYTE PTR [rcx]
   140002960:	add    al,BYTE PTR [rcx]
   140002962:	add    al,BYTE PTR [rcx]
   140002964:	add    al,BYTE PTR [rcx]
   140002966:	add    al,BYTE PTR [rcx]
   140002968:	add    al,BYTE PTR [rcx]
   14000296a:	add    al,BYTE PTR [rcx]
   14000296c:	add    al,BYTE PTR [rcx]
   14000296e:	add    al,BYTE PTR [rcx]
   140002970:	adc    BYTE PTR [rax],al
   140002972:	add    al,BYTE PTR [rcx]
   140002974:	add    al,BYTE PTR [rcx]
   140002976:	add    al,BYTE PTR [rcx]
   140002978:	add    al,BYTE PTR [rcx]
   14000297a:	add    al,BYTE PTR [rcx]
   14000297c:	add    al,BYTE PTR [rcx]
   14000297e:	add    al,BYTE PTR [rcx]
   140002980:	add    al,BYTE PTR [rcx]
   140002982:	add    DWORD PTR [rcx],eax
	...
   140002990:	add    BYTE PTR [rcx-0x7a7b7c7e],0x86
   140002997:	xchg   DWORD PTR [rax-0x73747577],ecx
   14000299d:	lea    ecx,[rsi-0x6d6e6f71]
   1400029a3:	xchg   ebx,eax
   1400029a4:	xchg   esp,eax
   1400029a5:	xchg   ebp,eax
   1400029a6:	xchg   esi,eax
   1400029a7:	xchg   edi,eax
   1400029a8:	cwde   
   1400029a9:	cdq    
   1400029aa:	(bad)  
   1400029ab:	fwait
   1400029ac:	pushf  
   1400029ad:	popf   
   1400029ae:	sahf   
   1400029af:	lahf   
   1400029b0:	movabs al,ds:0xa8a7a6a5a4a3a2a1
   1400029b9:	test   eax,0xadacabaa
   1400029be:	scas   al,BYTE PTR es:[rdi]
   1400029bf:	scas   eax,DWORD PTR es:[rdi]
   1400029c0:	mov    al,0xb1
   1400029c2:	mov    dl,0xb3
   1400029c4:	mov    ah,0xb5
   1400029c6:	mov    dh,0xb7
   1400029c8:	mov    eax,0xbcbbbab9
   1400029cd:	mov    ebp,0xc1c0bfbe
   1400029d2:	ret    0xc4c3
   1400029d5:	(bad)
   1400029d8:	enter  0xcac9,0xcb
   1400029dc:	int3   
   1400029dd:	int    0xce
   1400029df:	iret   
   1400029e0:	rcl    cl,1
   1400029e2:	rcl    bl,cl
   1400029e4:	(bad)  
   1400029e5:	(bad)  
   1400029e6:	(bad)  
   1400029e7:	xlat   BYTE PTR ds:[rbx]
   1400029e8:	fcomp  st(1)
   1400029ea:	fcmovu st,st(3)
   1400029ec:	(bad)  
   1400029ee:	(bad)  
   1400029f0:	loopne 0x1400029d3
   1400029f2:	loop   0x1400029d7
   1400029f4:	in     al,0xe5
   1400029f6:	out    0xe7,al
   1400029f8:	call   0x12cec14e6
   1400029fd:	in     eax,dx
   1400029fe:	out    dx,al
   1400029ff:	out    dx,eax
   140002a00:	lock icebp 
   140002a02:	repnz repz hlt 
   140002a05:	cmc    
   140002a06:	div    bh
   140002a08:	clc    
   140002a09:	stc    
   140002a0a:	cli    
   140002a0b:	sti    
   140002a0c:	cld    
   140002a0d:	std    
   140002a0e:	(bad)  
   140002a0f:	inc    DWORD PTR [rax]
   140002a11:	add    DWORD PTR [rdx],eax
   140002a13:	add    eax,DWORD PTR [rax*1+0x9080706]
   140002a1a:	or     cl,BYTE PTR [rbx]
   140002a1c:	or     al,0xd
   140002a1e:	(bad)  
   140002a1f:	movups xmm2,XMMWORD PTR [rcx]
   140002a22:	adc    dl,BYTE PTR [rbx]
   140002a24:	adc    al,0x15
   140002a26:	(bad)  
   140002a27:	(bad)  
   140002a28:	sbb    BYTE PTR [rcx],bl
   140002a2a:	sbb    bl,BYTE PTR [rbx]
   140002a2c:	sbb    al,0x1d
   140002a2e:	(bad)  
   140002a2f:	(bad)  
   140002a30:	and    BYTE PTR [rcx],ah
   140002a32:	and    ah,BYTE PTR [rbx]
   140002a34:	and    al,0x25
   140002a36:	es (bad) 
   140002a38:	sub    BYTE PTR [rcx],ch
   140002a3a:	sub    ch,BYTE PTR [rbx]
   140002a3c:	sub    al,0x2d
   140002a3e:	cs (bad) 
   140002a40:	xor    BYTE PTR [rcx],dh
   140002a42:	xor    dh,BYTE PTR [rbx]
   140002a44:	xor    al,0x35
   140002a46:	ss (bad) 
   140002a48:	cmp    BYTE PTR [rcx],bh
   140002a4a:	cmp    bh,BYTE PTR [rbx]
   140002a4c:	cmp    al,0x3d
   140002a4e:	ds (bad) 
   140002a50:	rex (bad) 
   140002a52:	(bad)
   140002a57:	addr32 push 0x6c6b6a69
   140002a5d:	ins    DWORD PTR es:[rdi],dx
   140002a5e:	outs   dx,BYTE PTR ds:[rsi]
   140002a5f:	outs   dx,DWORD PTR ds:[rsi]
   140002a60:	jo     0x140002ad3
   140002a62:	jb     0x140002ad7
   140002a64:	je     0x140002adb
   140002a66:	jbe    0x140002adf
   140002a68:	js     0x140002ae3
   140002a6a:	jp     0x140002ac7
   140002a6c:	pop    rsp
   140002a6d:	pop    rbp
   140002a6e:	pop    rsi
   140002a6f:	pop    rdi
   140002a70:	(bad)  
   140002a71:	(bad)  
   140002a72:	(bad)
   140002a77:	addr32 push 0x6c6b6a69
   140002a7d:	ins    DWORD PTR es:[rdi],dx
   140002a7e:	outs   dx,BYTE PTR ds:[rsi]
   140002a7f:	outs   dx,DWORD PTR ds:[rsi]
   140002a80:	jo     0x140002af3
   140002a82:	jb     0x140002af7
   140002a84:	je     0x140002afb
   140002a86:	jbe    0x140002aff
   140002a88:	js     0x140002b03
   140002a8a:	jp     0x140002b07
   140002a8c:	jl     0x140002b0b
   140002a8e:	jle    0x140002b0f
   140002a90:	add    BYTE PTR [rcx-0x7a7b7c7e],0x86
   140002a97:	xchg   DWORD PTR [rax-0x73747577],ecx
   140002a9d:	lea    ecx,[rsi-0x6d6e6f71]
   140002aa3:	xchg   ebx,eax
   140002aa4:	xchg   esp,eax
   140002aa5:	xchg   ebp,eax
   140002aa6:	xchg   esi,eax
   140002aa7:	xchg   edi,eax
   140002aa8:	cwde   
   140002aa9:	cdq    
   140002aaa:	(bad)  
   140002aab:	fwait
   140002aac:	pushf  
   140002aad:	popf   
   140002aae:	sahf   
   140002aaf:	lahf   
   140002ab0:	movabs al,ds:0xa8a7a6a5a4a3a2a1
   140002ab9:	test   eax,0xadacabaa
   140002abe:	scas   al,BYTE PTR es:[rdi]
   140002abf:	scas   eax,DWORD PTR es:[rdi]
   140002ac0:	mov    al,0xb1
   140002ac2:	mov    dl,0xb3
   140002ac4:	mov    ah,0xb5
   140002ac6:	mov    dh,0xb7
   140002ac8:	mov    eax,0xbcbbbab9
   140002acd:	mov    ebp,0xc1c0bfbe
   140002ad2:	ret    0xc4c3
   140002ad5:	(bad)
   140002ad8:	enter  0xcac9,0xcb
   140002adc:	int3   
   140002add:	int    0xce
   140002adf:	iret   
   140002ae0:	rcl    cl,1
   140002ae2:	rcl    bl,cl
   140002ae4:	(bad)  
   140002ae5:	(bad)  
   140002ae6:	(bad)  
   140002ae7:	xlat   BYTE PTR ds:[rbx]
   140002ae8:	fcomp  st(1)
   140002aea:	fcmovu st,st(3)
   140002aec:	(bad)  
   140002aee:	(bad)  
   140002af0:	loopne 0x140002ad3
   140002af2:	loop   0x140002ad7
   140002af4:	in     al,0xe5
   140002af6:	out    0xe7,al
   140002af8:	call   0x12cec15e6
   140002afd:	in     eax,dx
   140002afe:	out    dx,al
   140002aff:	out    dx,eax
   140002b00:	lock icebp 
   140002b02:	repnz repz hlt 
   140002b05:	cmc    
   140002b06:	div    bh
   140002b08:	clc    
   140002b09:	stc    
   140002b0a:	cli    
   140002b0b:	sti    
   140002b0c:	cld    
   140002b0d:	std    
   140002b0e:	(bad)  
   140002b0f:	inc    DWORD PTR [rax-0x7b7c7d7f]
   140002b15:	test   DWORD PTR [rsi-0x75767779],eax
   140002b1b:	mov    ecx,DWORD PTR [rbp+rcx*4-0x6e6f7072]
   140002b22:	xchg   edx,eax
   140002b23:	xchg   ebx,eax
   140002b24:	xchg   esp,eax
   140002b25:	xchg   ebp,eax
   140002b26:	xchg   esi,eax
   140002b27:	xchg   edi,eax
   140002b28:	cwde   
   140002b29:	cdq    
   140002b2a:	(bad)  
   140002b2b:	fwait
   140002b2c:	pushf  
   140002b2d:	popf   
   140002b2e:	sahf   
   140002b2f:	lahf   
   140002b30:	movabs al,ds:0xa8a7a6a5a4a3a2a1
   140002b39:	test   eax,0xadacabaa
   140002b3e:	scas   al,BYTE PTR es:[rdi]
   140002b3f:	scas   eax,DWORD PTR es:[rdi]
   140002b40:	mov    al,0xb1
   140002b42:	mov    dl,0xb3
   140002b44:	mov    ah,0xb5
   140002b46:	mov    dh,0xb7
   140002b48:	mov    eax,0xbcbbbab9
   140002b4d:	mov    ebp,0xc1c0bfbe
   140002b52:	ret    0xc4c3
   140002b55:	(bad)
   140002b58:	enter  0xcac9,0xcb
   140002b5c:	int3   
   140002b5d:	int    0xce
   140002b5f:	iret   
   140002b60:	rcl    cl,1
   140002b62:	rcl    bl,cl
   140002b64:	(bad)  
   140002b65:	(bad)  
   140002b66:	(bad)  
   140002b67:	xlat   BYTE PTR ds:[rbx]
   140002b68:	fcomp  st(1)
   140002b6a:	fcmovu st,st(3)
   140002b6c:	(bad)  
   140002b6e:	(bad)  
   140002b70:	loopne 0x140002b53
   140002b72:	loop   0x140002b57
   140002b74:	in     al,0xe5
   140002b76:	out    0xe7,al
   140002b78:	call   0x12cec1666
   140002b7d:	in     eax,dx
   140002b7e:	out    dx,al
   140002b7f:	out    dx,eax
   140002b80:	lock icebp 
   140002b82:	repnz repz hlt 
   140002b85:	cmc    
   140002b86:	div    bh
   140002b88:	clc    
   140002b89:	stc    
   140002b8a:	cli    
   140002b8b:	sti    
   140002b8c:	cld    
   140002b8d:	std    
   140002b8e:	(bad)  
   140002b8f:	inc    DWORD PTR [rax]
   140002b91:	add    DWORD PTR [rdx],eax
   140002b93:	add    eax,DWORD PTR [rax*1+0x9080706]
   140002b9a:	or     cl,BYTE PTR [rbx]
   140002b9c:	or     al,0xd
   140002b9e:	(bad)  
   140002b9f:	movups xmm2,XMMWORD PTR [rcx]
   140002ba2:	adc    dl,BYTE PTR [rbx]
   140002ba4:	adc    al,0x15
   140002ba6:	(bad)  
   140002ba7:	(bad)  
   140002ba8:	sbb    BYTE PTR [rcx],bl
   140002baa:	sbb    bl,BYTE PTR [rbx]
   140002bac:	sbb    al,0x1d
   140002bae:	(bad)  
   140002baf:	(bad)  
   140002bb0:	and    BYTE PTR [rcx],ah
   140002bb2:	and    ah,BYTE PTR [rbx]
   140002bb4:	and    al,0x25
   140002bb6:	es (bad) 
   140002bb8:	sub    BYTE PTR [rcx],ch
   140002bba:	sub    ch,BYTE PTR [rbx]
   140002bbc:	sub    al,0x2d
   140002bbe:	cs (bad) 
   140002bc0:	xor    BYTE PTR [rcx],dh
   140002bc2:	xor    dh,BYTE PTR [rbx]
   140002bc4:	xor    al,0x35
   140002bc6:	ss (bad) 
   140002bc8:	cmp    BYTE PTR [rcx],bh
   140002bca:	cmp    bh,BYTE PTR [rbx]
   140002bcc:	cmp    al,0x3d
   140002bce:	ds (bad) 
   140002bd0:	rex
   140002bd1:	rex.B
   140002bd2:	rex.X
   140002bd3:	rex.XB
   140002bd4:	rex.R
   140002bd5:	rex.RB
   140002bd6:	rex.RX
   140002bd7:	rex.RXB
   140002bd8:	rex.W
   140002bd9:	rex.WB
   140002bda:	rex.WX
   140002bdb:	rex.WXB
   140002bdc:	rex.WR
   140002bdd:	rex.WRB
   140002bde:	rex.WRX
   140002bdf:	rex.WRXB push r8
   140002be1:	push   rcx
   140002be2:	push   rdx
   140002be3:	push   rbx
   140002be4:	push   rsp
   140002be5:	push   rbp
   140002be6:	push   rsi
   140002be7:	push   rdi
   140002be8:	pop    rax
   140002be9:	pop    rcx
   140002bea:	pop    rdx
   140002beb:	pop    rbx
   140002bec:	pop    rsp
   140002bed:	pop    rbp
   140002bee:	pop    rsi
   140002bef:	pop    rdi
   140002bf0:	(bad)  
   140002bf1:	rex.B
   140002bf2:	rex.X
   140002bf3:	rex.XB
   140002bf4:	rex.R
   140002bf5:	rex.RB
   140002bf6:	rex.RX
   140002bf7:	rex.RXB
   140002bf8:	rex.W
   140002bf9:	rex.WB
   140002bfa:	rex.WX
   140002bfb:	rex.WXB
   140002bfc:	rex.WR
   140002bfd:	rex.WRB
   140002bfe:	rex.WRX
   140002bff:	rex.WRXB push r8
   140002c01:	push   rcx
   140002c02:	push   rdx
   140002c03:	push   rbx
   140002c04:	push   rsp
   140002c05:	push   rbp
   140002c06:	push   rsi
   140002c07:	push   rdi
   140002c08:	pop    rax
   140002c09:	pop    rcx
   140002c0a:	pop    rdx
   140002c0b:	jnp    0x140002c89
   140002c0d:	jge    0x140002c8d
   140002c0f:	jg     0x140002b91
   140002c11:	add    DWORD PTR [rdx-0x797a7b7d],0x8a898887
   140002c1b:	mov    ecx,DWORD PTR [rbp+rcx*4-0x6e6f7072]
   140002c22:	xchg   edx,eax
   140002c23:	xchg   ebx,eax
   140002c24:	xchg   esp,eax
   140002c25:	xchg   ebp,eax
   140002c26:	xchg   esi,eax
   140002c27:	xchg   edi,eax
   140002c28:	cwde   
   140002c29:	cdq    
   140002c2a:	(bad)  
   140002c2b:	fwait
   140002c2c:	pushf  
   140002c2d:	popf   
   140002c2e:	sahf   
   140002c2f:	lahf   
   140002c30:	movabs al,ds:0xa8a7a6a5a4a3a2a1
   140002c39:	test   eax,0xadacabaa
   140002c3e:	scas   al,BYTE PTR es:[rdi]
   140002c3f:	scas   eax,DWORD PTR es:[rdi]
   140002c40:	mov    al,0xb1
   140002c42:	mov    dl,0xb3
   140002c44:	mov    ah,0xb5
   140002c46:	mov    dh,0xb7
   140002c48:	mov    eax,0xbcbbbab9
   140002c4d:	mov    ebp,0xc1c0bfbe
   140002c52:	ret    0xc4c3
   140002c55:	(bad)
   140002c58:	enter  0xcac9,0xcb
   140002c5c:	int3   
   140002c5d:	int    0xce
   140002c5f:	iret   
   140002c60:	rcl    cl,1
   140002c62:	rcl    bl,cl
   140002c64:	(bad)  
   140002c65:	(bad)  
   140002c66:	(bad)  
   140002c67:	xlat   BYTE PTR ds:[rbx]
   140002c68:	fcomp  st(1)
   140002c6a:	fcmovu st,st(3)
   140002c6c:	(bad)  
   140002c6e:	(bad)  
   140002c70:	loopne 0x140002c53
   140002c72:	loop   0x140002c57
   140002c74:	in     al,0xe5
   140002c76:	out    0xe7,al
   140002c78:	call   0x12cec1766
   140002c7d:	in     eax,dx
   140002c7e:	out    dx,al
   140002c7f:	out    dx,eax
   140002c80:	lock icebp 
   140002c82:	repnz repz hlt 
   140002c85:	cmc    
   140002c86:	div    bh
   140002c88:	clc    
   140002c89:	stc    
   140002c8a:	cli    
   140002c8b:	sti    
   140002c8c:	cld    
   140002c8d:	std    
   140002c8e:	(bad)  
   140002c8f:	jmp    QWORD PTR [rax]
   140002c91:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140002c93:	ins    DWORD PTR es:[rdi],dx
   140002c94:	jo     0x140002d02
   140002c96:	gs je  0x140002cfe
   140002c99:	and    BYTE PTR [rdi+0x62],cl
   140002c9c:	push   0x65
   140002c9e:	movsxd esi,DWORD PTR [rax+riz*1+0x4c]
   140002ca2:	outs   dx,DWORD PTR ds:[rsi]
   140002ca3:	movsxd esp,DWORD PTR [rcx+0x74]
   140002ca6:	outs   dx,DWORD PTR ds:[rsi]
   140002ca7:	jb     0x140002cd0
   140002ca9:	add    BYTE PTR [rax],al
   140002cab:	add    BYTE PTR [rax],al
   140002cad:	add    BYTE PTR [rax],al
   140002caf:	add    BYTE PTR [rax],ah
   140002cb1:	rex.XB ins BYTE PTR es:[rdi],dx
   140002cb3:	(bad)  
   140002cb4:	jae    0x140002d29
   140002cb6:	and    BYTE PTR [rax+0x69],cl
   140002cb9:	gs jb  0x140002d1d
   140002cbc:	jb     0x140002d21
   140002cbe:	push   0x65442079
   140002cc3:	jae    0x140002d28
   140002cc5:	jb     0x140002d30
   140002cc7:	jo     0x140002d3d
   140002cc9:	outs   dx,DWORD PTR ds:[rsi]
   140002cca:	jb     0x140002cf3
   140002ccc:	add    BYTE PTR [rax],al
   140002cce:	add    BYTE PTR [rax],al
   140002cd0:	and    BYTE PTR [rdx+0x61],al
   140002cd3:	jae    0x140002d3a
   140002cd5:	and    BYTE PTR [rbx+0x6c],al
   140002cd8:	(bad)  
   140002cd9:	jae    0x140002d4e
   140002cdb:	and    BYTE PTR [rcx+0x72],al
   140002cde:	jb     0x140002d41
   140002ce0:	jns    0x140002d09
   140002ce2:	add    BYTE PTR [rax],al
   140002ce4:	add    BYTE PTR [rax],al
   140002ce6:	add    BYTE PTR [rax],al
   140002ce8:	and    BYTE PTR [rdx+0x61],al
   140002ceb:	jae    0x140002d52
   140002ced:	and    BYTE PTR [rbx+0x6c],al
   140002cf0:	(bad)  
   140002cf1:	jae    0x140002d66
   140002cf3:	and    BYTE PTR [rbp+riz*2+0x73],al
   140002cf7:	movsxd esi,DWORD PTR [rdx+0x69]
   140002cfa:	jo     0x140002d70
   140002cfc:	outs   dx,DWORD PTR ds:[rsi]
   140002cfd:	jb     0x140002d1f
   140002cff:	(bad)  
   140002d00:	je     0x140002d22
   140002d02:	sub    BYTE PTR [rax],al
   140002d04:	add    BYTE PTR [rax],al
   140002d06:	add    BYTE PTR [rax],al
   140002d08:	and    BYTE PTR [rcx+rdi*2+0x70],dl
   140002d0c:	and    BYTE PTR gs:[rbp+riz*2+0x73],al
   140002d11:	movsxd esi,DWORD PTR [rdx+0x69]
   140002d14:	jo     0x140002d8a
   140002d16:	outs   dx,DWORD PTR ds:[rsi]
   140002d17:	jb     0x140002d40
   140002d19:	add    BYTE PTR [rax],al
   140002d1b:	add    BYTE PTR [rax],al
   140002d1d:	add    BYTE PTR [rax],al
   140002d1f:	add    BYTE PTR [rax+0x6c],ah
   140002d22:	outs   dx,DWORD PTR ds:[rsi]
   140002d23:	movsxd esp,DWORD PTR [rcx+0x6c]
   140002d26:	and    BYTE PTR [rbx+0x74],dh
   140002d29:	(bad)  
   140002d2a:	je     0x140002d95
   140002d2c:	movsxd esp,DWORD PTR [rax]
   140002d2e:	je     0x140002d98
   140002d30:	jb     0x140002d97
   140002d32:	(bad)  
   140002d33:	and    BYTE PTR fs:[rdi+0x75],ah
   140002d37:	(bad)  
   140002d38:	jb     0x140002d9e
   140002d3a:	(bad)  
   140002d3b:	add    BYTE PTR [rax],al
   140002d3d:	add    BYTE PTR [rax],al
   140002d3f:	add    BYTE PTR [rax+0x6d],ah
   140002d42:	(bad)  
   140002d43:	outs   dx,BYTE PTR ds:[rsi]
   140002d44:	(bad)  
   140002d45:	gs and BYTE PTR fs:[esi+0x65],dh
   140002d4b:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   140002d4f:	and    BYTE PTR [rbx+0x6f],ah
   140002d52:	jo     0x140002dcd
   140002d54:	and    BYTE PTR [rbx+0x6f],ah
   140002d57:	outs   dx,BYTE PTR ds:[rsi]
   140002d58:	jae    0x140002dce
   140002d5a:	jb     0x140002dd1
   140002d5c:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   140002d60:	and    BYTE PTR [rcx+0x74],ch
   140002d63:	gs jb  0x140002dc7
   140002d66:	je     0x140002dd7
   140002d68:	jb     0x140002d91
   140002d6a:	add    BYTE PTR [rax],al
   140002d6c:	add    BYTE PTR [rax],al
   140002d6e:	add    BYTE PTR [rax],al
   140002d70:	(bad)  
   140002d71:	jbe    0x140002dd8
   140002d73:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   140002d77:	and    BYTE PTR [rsi+0x62],dh
   140002d7a:	(bad)  
   140002d7b:	jae    0x140002de2
   140002d7d:	and    BYTE PTR [rbx+0x6f],ah
   140002d80:	jo     0x140002dfb
   140002d82:	and    BYTE PTR [rbx+0x6f],ah
   140002d85:	outs   dx,BYTE PTR ds:[rsi]
   140002d86:	jae    0x140002dfc
   140002d88:	jb     0x140002dff
   140002d8a:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   140002d8e:	and    BYTE PTR [rcx+0x74],ch
   140002d91:	gs jb  0x140002df5
   140002d94:	je     0x140002e05
   140002d96:	jb     0x140002dbf
	...
   140002da0:	(bad)  
   140002da1:	jbe    0x140002e08
   140002da3:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   140002da7:	and    BYTE PTR [rbx+0x6f],ah
   140002daa:	jo     0x140002e25
   140002dac:	and    BYTE PTR [rbx+0x6f],ah
   140002daf:	outs   dx,BYTE PTR ds:[rsi]
   140002db0:	jae    0x140002e26
   140002db2:	jb     0x140002e29
   140002db4:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   140002db8:	and    BYTE PTR [rcx+0x74],ch
   140002dbb:	gs jb  0x140002e1f
   140002dbe:	je     0x140002e2f
   140002dc0:	jb     0x140002de9
   140002dc2:	add    BYTE PTR [rax],al
   140002dc4:	add    BYTE PTR [rax],al
   140002dc6:	add    BYTE PTR [rax],al
   140002dc8:	(bad)  
   140002dc9:	fs jns 0x140002e3a
   140002dcc:	(bad)  
   140002dcd:	ins    DWORD PTR es:[rdi],dx
   140002dce:	imul   esp,DWORD PTR [rbx+0x20],0x78657461
   140002dd5:	imul   esi,DWORD PTR [rax+riz*1+0x64],0x72747365
   140002ddd:	jne    0x140002e42
   140002ddf:	je     0x140002e50
   140002de1:	jb     0x140002e03
   140002de3:	outs   dx,WORD PTR ds:[rsi]
   140002de5:	jb     0x140002e07
   140002de7:	(bad)  
	...
   140002df0:	(bad)  
   140002df1:	fs jns 0x140002e62
   140002df4:	(bad)  
   140002df5:	ins    DWORD PTR es:[rdi],dx
   140002df6:	imul   esp,DWORD PTR [rbx+0x20],0x74696e69
   140002dfd:	imul   esp,DWORD PTR [rcx+0x6c],0x72657a69
   140002e04:	and    BYTE PTR [rsi+0x6f],ah
   140002e07:	jb     0x140002e29
   140002e09:	(bad)  
   140002e0a:	add    BYTE PTR [rax],al
   140002e0c:	add    BYTE PTR [rax],al
   140002e0e:	add    BYTE PTR [rax],al
   140002e10:	(bad)  
   140002e11:	gs push 0x63657620
   140002e17:	je     0x140002e88
   140002e19:	jb     0x140002e3b
   140002e1b:	jbe    0x140002e7f
   140002e1d:	(bad)  
   140002e1e:	jae    0x140002e85
   140002e20:	and    BYTE PTR [rbx+0x6f],ah
   140002e23:	jo     0x140002e9e
   140002e25:	and    BYTE PTR [rbx+0x6f],ah
   140002e28:	outs   dx,BYTE PTR ds:[rsi]
   140002e29:	jae    0x140002e9f
   140002e2b:	jb     0x140002ea2
   140002e2d:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   140002e31:	and    BYTE PTR [rcx+0x74],ch
   140002e34:	gs jb  0x140002e98
   140002e37:	je     0x140002ea8
   140002e39:	jb     0x140002e62
   140002e3b:	add    BYTE PTR [rax],al
   140002e3d:	add    BYTE PTR [rax],al
   140002e3f:	add    BYTE PTR [rax+0x65],ah
   140002e42:	push   0x63657620
   140002e47:	je     0x140002eb8
   140002e49:	jb     0x140002e6b
   140002e4b:	movsxd ebp,DWORD PTR [rdi+0x70]
   140002e4e:	jns    0x140002e70
   140002e50:	movsxd ebp,DWORD PTR [rdi+0x6e]
   140002e53:	jae    0x140002ec9
   140002e55:	jb     0x140002ecc
   140002e57:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   140002e5b:	and    BYTE PTR [rcx+0x74],ch
   140002e5e:	gs jb  0x140002ec2
   140002e61:	je     0x140002ed2
   140002e63:	jb     0x140002e8c
   140002e65:	add    BYTE PTR [rax],al
   140002e67:	add    BYTE PTR [rax+0x6d],ah
   140002e6a:	(bad)  
   140002e6b:	outs   dx,BYTE PTR ds:[rsi]
   140002e6c:	(bad)  
   140002e6d:	gs and BYTE PTR fs:[esi+0x65],dh
   140002e73:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   140002e77:	and    BYTE PTR [rbp+riz*2+0x73],ah
   140002e7b:	je     0x140002eef
   140002e7d:	jne    0x140002ee2
   140002e7f:	je     0x140002ef0
   140002e81:	jb     0x140002ea3
   140002e83:	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x726f7461
   140002e8b:	(bad)  
   140002e8c:	add    BYTE PTR [rax],al
   140002e8e:	add    BYTE PTR [rax],al
   140002e90:	(bad)  
   140002e91:	ins    DWORD PTR es:[rdi],dx
   140002e92:	(bad)  
   140002e93:	outs   dx,BYTE PTR ds:[rsi]
   140002e94:	(bad)  
   140002e95:	gs and BYTE PTR fs:[esi+0x65],dh
   140002e9b:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   140002e9f:	and    BYTE PTR [rbx+0x6f],ah
   140002ea2:	outs   dx,BYTE PTR ds:[rsi]
   140002ea3:	jae    0x140002f19
   140002ea5:	jb     0x140002f1c
   140002ea7:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   140002eab:	and    BYTE PTR [rcx+0x74],ch
   140002eae:	gs jb  0x140002f12
   140002eb1:	je     0x140002f22
   140002eb3:	jb     0x140002edc
   140002eb5:	add    BYTE PTR [rax],al
   140002eb7:	add    BYTE PTR [rax+0x70],ah
   140002eba:	ins    BYTE PTR es:[rdi],dx
   140002ebb:	(bad)  
   140002ebc:	movsxd esp,DWORD PTR [rbp+0x6d]
   140002ebf:	outs   dx,BYTE PTR gs:[rsi]
   140002ec1:	je     0x140002ee3
   140002ec3:	fs gs ins BYTE PTR es:[rdi],dx
   140002ec6:	gs je  0x140002f2e
   140002ec9:	pop    rbx
   140002eca:	pop    rbp
   140002ecb:	and    BYTE PTR [rbx+0x6c],ah
   140002ece:	outs   dx,DWORD PTR ds:[rsi]
   140002ecf:	jae    0x140002f46
   140002ed1:	jb     0x140002f38
   140002ed3:	(bad)  
   140002ed4:	add    BYTE PTR [rax],al
   140002ed6:	add    BYTE PTR [rax],al
   140002ed8:	(bad)  
   140002ed9:	jo     0x140002f47
   140002edb:	(bad)  
   140002edc:	movsxd esp,DWORD PTR [rbp+0x6d]
   140002edf:	outs   dx,BYTE PTR gs:[rsi]
   140002ee1:	je     0x140002f03
   140002ee3:	fs gs ins BYTE PTR es:[rdi],dx
   140002ee6:	gs je  0x140002f4e
   140002ee9:	and    BYTE PTR [rbx+0x6c],ah
   140002eec:	outs   dx,DWORD PTR ds:[rsi]
   140002eed:	jae    0x140002f64
   140002eef:	jb     0x140002f56
   140002ef1:	(bad)  
   140002ef2:	add    BYTE PTR [rax],al
   140002ef4:	add    BYTE PTR [rax],al
   140002ef6:	add    BYTE PTR [rax],al
   140002ef8:	(bad)  
   140002ef9:	outs   dx,DWORD PTR ds:[rsi]
   140002efa:	ins    DWORD PTR es:[rdi],dx
   140002efb:	outs   dx,BYTE PTR ds:[rsi]
   140002efc:	imul   esp,DWORD PTR [rax],0x6c6c6163
   140002f02:	jae    0x140002f6d
   140002f04:	addr32 (bad) 
   140002f06:	add    BYTE PTR [rax],al
   140002f08:	and    BYTE PTR [rbp+riz*2+0x6c],ah
   140002f0c:	gs je  0x140002f74
   140002f0f:	pop    rbx
   140002f10:	pop    rbp
   140002f11:	add    BYTE PTR [rax],al
   140002f13:	add    BYTE PTR [rax],ah
   140002f15:	outs   dx,BYTE PTR ds:[rsi]
   140002f16:	gs ja  0x140002f74
   140002f19:	pop    rbp
   140002f1a:	add    BYTE PTR [rax],al
   140002f1c:	add    BYTE PTR [rax],al
   140002f1e:	add    BYTE PTR [rax],al
   140002f20:	(bad)  
   140002f21:	ins    BYTE PTR es:[rdi],dx
   140002f22:	outs   dx,DWORD PTR ds:[rsi]
   140002f23:	movsxd esp,DWORD PTR [rcx+0x6c]
   140002f26:	and    BYTE PTR [rsi+0x66],dh
   140002f29:	je     0x140002f8c
   140002f2b:	(bad)  
   140002f2c:	ins    BYTE PTR es:[rdi],dx
   140002f2d:	and    BYTE PTR gs:[rbx+0x6f],ah
   140002f31:	outs   dx,BYTE PTR ds:[rsi]
   140002f32:	jae    0x140002fa8
   140002f34:	jb     0x140002fab
   140002f36:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   140002f3a:	and    BYTE PTR [rbx+0x6c],ah
   140002f3d:	outs   dx,DWORD PTR ds:[rsi]
   140002f3e:	jae    0x140002fb5
   140002f40:	jb     0x140002fa7
   140002f42:	(bad)  
   140002f43:	add    BYTE PTR [rax],al
   140002f45:	add    BYTE PTR [rax],al
   140002f47:	add    BYTE PTR [rax+0x6c],ah
   140002f4a:	outs   dx,DWORD PTR ds:[rsi]
   140002f4b:	movsxd esp,DWORD PTR [rcx+0x6c]
   140002f4e:	and    BYTE PTR [rsi+0x66],dh
   140002f51:	je     0x140002fb4
   140002f53:	(bad)  
   140002f54:	ins    BYTE PTR es:[rdi],dx
   140002f55:	gs (bad) 
   140002f57:	add    BYTE PTR [rax+0x52],ah
   140002f5a:	push   rsp
   140002f5b:	push   rsp
   140002f5c:	rex.WB add BYTE PTR [r8],al
   140002f5f:	add    BYTE PTR [rax+0x45],ah
   140002f62:	rex.W add BYTE PTR [rax],al
   140002f65:	add    BYTE PTR [rax],al
   140002f67:	add    BYTE PTR [rax+0x75],ah
   140002f6a:	fs je  0x140002f8d
   140002f6d:	jb     0x140002fd4
   140002f6f:	je     0x140002fe6
   140002f71:	jb     0x140002fe1
   140002f73:	imul   ebp,DWORD PTR [rsi+0x67],0x63600027
   140002f7a:	outs   dx,DWORD PTR ds:[rsi]
   140002f7b:	jo     0x140002ff6
   140002f7d:	and    BYTE PTR [rbx+0x6f],ah
   140002f80:	outs   dx,BYTE PTR ds:[rsi]
   140002f81:	jae    0x140002ff7
   140002f83:	jb     0x140002ffa
   140002f85:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   140002f89:	and    BYTE PTR [rbx+0x6c],ah
   140002f8c:	outs   dx,DWORD PTR ds:[rsi]
   140002f8d:	jae    0x140003004
   140002f8f:	jb     0x140002ff6
   140002f91:	(bad)  
   140002f92:	add    BYTE PTR [rax],al
   140002f94:	add    BYTE PTR [rax],al
   140002f96:	add    BYTE PTR [rax],al
   140002f98:	(bad)  
   140002f99:	gs push 0x63657620
   140002f9f:	je     0x140003010
   140002fa1:	jb     0x140002fc3
   140002fa3:	jbe    0x140003007
   140002fa5:	(bad)  
   140002fa6:	jae    0x14000300d
   140002fa8:	and    BYTE PTR [rbx+0x6f],ah
   140002fab:	outs   dx,BYTE PTR ds:[rsi]
   140002fac:	jae    0x140003022
   140002fae:	jb     0x140003025
   140002fb0:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   140002fb4:	and    BYTE PTR [rcx+0x74],ch
   140002fb7:	gs jb  0x14000301b
   140002fba:	je     0x14000302b
   140002fbc:	jb     0x140002fe5
   140002fbe:	add    BYTE PTR [rax],al
   140002fc0:	(bad)  
   140002fc1:	gs push 0x63657620
   140002fc7:	je     0x140003038
   140002fc9:	jb     0x140002feb
   140002fcb:	fs gs jae 0x140003043
   140002fcf:	jb     0x140003046
   140002fd1:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   140002fd5:	and    BYTE PTR [rcx+0x74],ch
   140002fd8:	gs jb  0x14000303c
   140002fdb:	je     0x14000304c
   140002fdd:	jb     0x140003006
   140002fdf:	add    BYTE PTR [rax+0x65],ah
   140002fe2:	push   0x63657620
   140002fe7:	je     0x140003058
   140002fe9:	jb     0x14000300b
   140002feb:	movsxd ebp,DWORD PTR [rdi+0x6e]
   140002fee:	jae    0x140003064
   140002ff0:	jb     0x140003067
   140002ff2:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   140002ff6:	and    BYTE PTR [rcx+0x74],ch
   140002ff9:	gs jb  0x14000305d
   140002ffc:	je     0x14000306d
   140002ffe:	jb     0x140003027
	...
   140003008:	(bad)  
   140003009:	jbe    0x140003074
   14000300b:	jb     0x140003081
   14000300d:	jne    0x140003070
   14000300f:	ins    BYTE PTR es:[rdi],dx
   140003010:	and    BYTE PTR [rcx+rbp*2+0x73],ah
   140003014:	jo     0x140003082
   140003016:	(bad)  
   140003017:	movsxd esp,DWORD PTR [rbp+0x6d]
   14000301a:	outs   dx,BYTE PTR gs:[rsi]
   14000301c:	je     0x14000303e
   14000301e:	ins    DWORD PTR es:[rdi],dx
   14000301f:	(bad)  
   140003020:	jo     0x140003049
   140003022:	add    BYTE PTR [rax],al
   140003024:	add    BYTE PTR [rax],al
   140003026:	add    BYTE PTR [rax],al
   140003028:	(bad)  
   140003029:	jbe    0x140003090
   14000302b:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   14000302f:	and    BYTE PTR [rsi+0x62],dh
   140003032:	(bad)  
   140003033:	jae    0x14000309a
   140003035:	and    BYTE PTR [rbx+0x6f],ah
   140003038:	outs   dx,BYTE PTR ds:[rsi]
   140003039:	jae    0x1400030af
   14000303b:	jb     0x1400030b2
   14000303d:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   140003041:	and    BYTE PTR [rcx+0x74],ch
   140003044:	gs jb  0x1400030a8
   140003047:	je     0x1400030b8
   140003049:	jb     0x140003072
   14000304b:	add    BYTE PTR [rax],al
   14000304d:	add    BYTE PTR [rax],al
   14000304f:	add    BYTE PTR [rax+0x76],ah
   140003052:	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
   140003057:	and    BYTE PTR [rbp+riz*2+0x73],ah
   14000305b:	je     0x1400030cf
   14000305d:	jne    0x1400030c2
   14000305f:	je     0x1400030d0
   140003061:	jb     0x140003083
   140003063:	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x726f7461
   14000306b:	(bad)  
   14000306c:	add    BYTE PTR [rax],al
   14000306e:	add    BYTE PTR [rax],al
   140003070:	(bad)  
   140003071:	jbe    0x1400030d8
   140003073:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   140003077:	and    BYTE PTR [rbx+0x6f],ah
   14000307a:	outs   dx,BYTE PTR ds:[rsi]
   14000307b:	jae    0x1400030f1
   14000307d:	jb     0x1400030f4
   14000307f:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   140003083:	and    BYTE PTR [rcx+0x74],ch
   140003086:	gs jb  0x1400030ea
   140003089:	je     0x1400030fa
   14000308b:	jb     0x1400030b4
   14000308d:	add    BYTE PTR [rax],al
   14000308f:	add    BYTE PTR [rax+0x73],ah
   140003092:	movsxd esp,DWORD PTR [rcx+0x6c]
   140003095:	(bad)  
   140003096:	jb     0x1400030b8
   140003098:	fs gs ins BYTE PTR es:[rdi],dx
   14000309b:	gs je  0x140003107
   14000309e:	outs   dx,BYTE PTR ds:[rsi]
   14000309f:	and    BYTE PTR [ebp+eiz*2+0x73],ah
   1400030a4:	je     0x140003118
   1400030a6:	jne    0x14000310b
   1400030a8:	je     0x140003119
   1400030aa:	jb     0x1400030d3
   1400030ac:	add    BYTE PTR [rax],al
   1400030ae:	add    BYTE PTR [rax],al
   1400030b0:	(bad)  
   1400030b1:	fs gs data16 (bad) 
   1400030b5:	jne    0x140003123
   1400030b7:	je     0x1400030d9
   1400030b9:	movsxd ebp,DWORD PTR [rdi+0x6e]
   1400030bc:	jae    0x140003132
   1400030be:	jb     0x140003135
   1400030c0:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   1400030c4:	and    BYTE PTR [rbx+0x6c],ah
   1400030c7:	outs   dx,DWORD PTR ds:[rsi]
   1400030c8:	jae    0x14000313f
   1400030ca:	jb     0x140003131
   1400030cc:	(bad)  
   1400030cd:	add    BYTE PTR [rax],al
   1400030cf:	add    BYTE PTR [rax+0x76],ah
   1400030d2:	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
   1400030d7:	and    BYTE PTR [rbp+riz*2+0x6c],ah
   1400030db:	gs je  0x140003147
   1400030de:	outs   dx,BYTE PTR ds:[rsi]
   1400030df:	and    BYTE PTR [ebp+eiz*2+0x73],ah
   1400030e4:	je     0x140003158
   1400030e6:	jne    0x14000314b
   1400030e8:	je     0x140003159
   1400030ea:	jb     0x140003113
   1400030ec:	add    BYTE PTR [rax],al
   1400030ee:	add    BYTE PTR [rax],al
   1400030f0:	(bad)  
   1400030f1:	jbe    0x140003155
   1400030f3:	(bad)  
   1400030f4:	jae    0x14000315b
   1400030f6:	and    BYTE PTR [rbp+riz*2+0x73],ah
   1400030fa:	je     0x14000316e
   1400030fc:	jne    0x140003161
   1400030fe:	je     0x14000316f
   140003100:	jb     0x140003129
   140003102:	add    BYTE PTR [rax],al
   140003104:	add    BYTE PTR [rax],al
   140003106:	add    BYTE PTR [rax],al
   140003108:	(bad)  
   140003109:	jae    0x14000317f
   14000310b:	jb     0x140003176
   14000310d:	outs   dx,BYTE PTR ds:[rsi]
   14000310e:	addr32 (bad) 
	...
   140003118:	(bad)  
   140003119:	ins    BYTE PTR es:[rdi],dx
   14000311a:	outs   dx,DWORD PTR ds:[rsi]
   14000311b:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000311e:	and    BYTE PTR [rbx+0x74],dh
   140003121:	(bad)  
   140003122:	je     0x14000318d
   140003124:	movsxd esp,DWORD PTR [rax]
   140003126:	addr32 jne 0x14000318a
   140003129:	jb     0x14000318f
   14000312b:	(bad)  
   14000312c:	add    BYTE PTR [rax],al
   14000312e:	add    BYTE PTR [rax],al
   140003130:	(bad)  
   140003131:	je     0x1400031ac
   140003133:	jo     0x14000319a
   140003135:	outs   dx,DWORD PTR ds:[rsi]
   140003136:	data16 (bad) 
	...
   140003140:	(bad)  
   140003141:	jbe    0x1400031a6
   140003143:	(bad)  
   140003144:	ins    BYTE PTR es:[rdi],dx
   140003145:	ins    BYTE PTR es:[rdi],dx
   140003146:	(bad)  
   140003147:	add    BYTE PTR [rax+0x76],ah
   14000314a:	(bad)  
   14000314b:	je     0x1400031ae
   14000314d:	(bad)  
   14000314e:	ins    BYTE PTR es:[rdi],dx
   14000314f:	gs (bad) 
   140003151:	add    BYTE PTR [rax],al
   140003153:	add    BYTE PTR [rax],al
   140003155:	add    BYTE PTR [rax],al
   140003157:	add    BYTE PTR [rax+0x76],ah
   14000315a:	data16 je 0x1400031be
   14000315d:	(bad)  
   14000315e:	ins    BYTE PTR es:[rdi],dx
   14000315f:	gs (bad) 
   140003161:	add    BYTE PTR [rax],al
   140003163:	add    BYTE PTR [rsi+0x3d],bl
   140003166:	add    BYTE PTR [rax],al
   140003168:	jl     0x1400031a7
   14000316a:	add    BYTE PTR [rax],al
   14000316c:	es cmp eax,0x3c3c0000
   140003172:	cmp    eax,0x3d3e3e00
   140003177:	add    BYTE PTR [rip+0x2f00003d],ah        # 0x16f0031ba
   14000317d:	cmp    eax,0x3d2d0000
   140003182:	add    BYTE PTR [rax],al
   140003184:	sub    edi,DWORD PTR [rip+0x3d2a0000]        # 0x17d2a318a
   14000318a:	add    BYTE PTR [rax],al
   14000318c:	jl     0x14000320a
   14000318e:	add    BYTE PTR [rax],al
   140003190:	es add BYTE PTR es:[rax],al
   140003194:	jl     0x140003196
   140003196:	add    BYTE PTR [rax],al
   140003198:	pop    rsi
   140003199:	add    BYTE PTR [rax],al
   14000319b:	add    BYTE PTR [rsi+0x0],bh
   14000319e:	add    BYTE PTR [rax],al
   1400031a0:	sub    BYTE PTR [rcx],ch
   1400031a2:	add    BYTE PTR [rax],al
   1400031a4:	sub    al,0x0
   1400031a6:	add    BYTE PTR [rax],al
   1400031a8:	ds cmp eax,0x3e0000
   1400031ae:	add    BYTE PTR [rax],al
   1400031b0:	cmp    al,0x3d
   1400031b2:	add    BYTE PTR [rax],al
   1400031b4:	cmp    al,0x0
   1400031b6:	add    BYTE PTR [rax],al
   1400031b8:	and    eax,0x2f000000
   1400031bd:	add    BYTE PTR [rax],al
   1400031bf:	add    BYTE PTR [rip+0x26002a3e],ch        # 0x166005c03
   1400031c5:	add    BYTE PTR [rax],al
   1400031c7:	add    BYTE PTR [rbx],ch
   1400031c9:	add    BYTE PTR [rax],al
   1400031cb:	add    BYTE PTR [rip+0x2d000000],ch        # 0x16d0031d1
   1400031d1:	sub    eax,0x2b2b0000
   1400031d6:	add    BYTE PTR [rax],al
   1400031d8:	sub    al,BYTE PTR [rax]
   1400031da:	add    BYTE PTR [rax],al
   1400031dc:	sub    eax,0x6f00003e
   1400031e1:	jo     0x140003248
   1400031e3:	jb     0x140003246
   1400031e5:	je     0x140003256
   1400031e7:	jb     0x1400031e9
   1400031e9:	add    BYTE PTR [rax],al
   1400031eb:	add    BYTE PTR [rbx+0x5d],bl
   1400031ee:	add    BYTE PTR [rax],al
   1400031f0:	and    DWORD PTR [rip+0x3d3d0000],edi        # 0x17d3d31f6
   1400031f6:	add    BYTE PTR [rax],al
   1400031f8:	and    DWORD PTR [rax],eax
   1400031fa:	add    BYTE PTR [rax],al
   1400031fc:	cmp    al,0x3c
   1400031fe:	add    BYTE PTR [rax],al
   140003200:	ds add BYTE PTR ds:[rax],al
   140003204:	cmp    eax,0x20000000
   140003209:	fs gs ins BYTE PTR es:[rdi],dx
   14000320c:	gs je  0x140003274
   14000320f:	add    BYTE PTR [rax],ah
   140003211:	outs   dx,BYTE PTR ds:[rsi]
   140003212:	gs ja  0x140003215
   140003215:	add    BYTE PTR [rax],al
   140003217:	add    BYTE PTR [rdi+0x5f],bl
   14000321a:	jne    0x14000328a
   14000321c:	(bad)  
   14000321d:	ins    BYTE PTR es:[rdi],dx
   14000321e:	imul   esp,DWORD PTR [rdi+0x6e],0x6465
   140003225:	add    BYTE PTR [rax],al
   140003227:	add    BYTE PTR [rdi+0x5f],bl
   14000322a:	jb     0x140003291
   14000322c:	jae    0x1400032a2
   14000322e:	jb     0x140003299
   140003230:	movsxd esi,DWORD PTR [rax+rax*1+0x0]
   140003234:	add    BYTE PTR [rax],al
   140003236:	add    BYTE PTR [rax],al
   140003238:	pop    rdi
   140003239:	pop    rdi
   14000323a:	jo     0x1400032b0
   14000323c:	jb     0x140003274
   14000323e:	xor    al,0x0
   140003240:	pop    rdi
   140003241:	pop    rdi
   140003242:	gs (bad) 
   140003244:	(bad)  
   140003245:	imul   eax,DWORD PTR [rax],0x635f5f00
   14000324b:	ins    BYTE PTR es:[rdi],dx
   14000324c:	jb     0x1400032b1
   14000324e:	(bad)  
   14000324f:	ins    BYTE PTR es:[rdi],dx
   140003250:	ins    BYTE PTR es:[rdi],dx
   140003251:	add    BYTE PTR [rax],al
   140003253:	add    BYTE PTR [rax],al
   140003255:	add    BYTE PTR [rax],al
   140003257:	add    BYTE PTR [rdi+0x5f],bl
   14000325a:	data16 (bad) 
   14000325c:	jae    0x1400032d2
   14000325e:	movsxd esp,DWORD PTR [rcx+0x6c]
   140003261:	ins    BYTE PTR es:[rdi],dx
   140003262:	add    BYTE PTR [rax],al
   140003264:	add    BYTE PTR [rax],al
   140003266:	add    BYTE PTR [rax],al
   140003268:	pop    rdi
   140003269:	pop    rdi
   14000326a:	je     0x1400032d4
   14000326c:	imul   esi,DWORD PTR [rbx+0x63],0x6c6c61
   140003273:	add    BYTE PTR [rax],al
   140003275:	add    BYTE PTR [rax],al
   140003277:	add    BYTE PTR [rdi+0x5f],bl
   14000327a:	jae    0x1400032f0
   14000327c:	movsxd esp,DWORD PTR fs:[rcx+0x6c]
   140003280:	ins    BYTE PTR es:[rdi],dx
   140003281:	add    BYTE PTR [rax],al
   140003283:	add    BYTE PTR [rax],al
   140003285:	add    BYTE PTR [rax],al
   140003287:	add    BYTE PTR [rdi+0x5f],bl
   14000328a:	jo     0x1400032ed
   14000328c:	jae    0x1400032f1
   14000328e:	(bad)  
   14000328f:	ins    BYTE PTR es:[rdi],dx
	...
   140003298:	pop    rdi
   140003299:	pop    rdi
   14000329a:	movsxd esp,DWORD PTR [rbp+riz*2+0x63]
   14000329e:	ins    BYTE PTR es:[rdi],dx
   14000329f:	add    BYTE PTR [rdi+0x5f],bl
   1400032a2:	(bad)  
   1400032a4:	jae    0x14000330b
   1400032a6:	sub    BYTE PTR fs:[rax],al
   1400032a9:	add    BYTE PTR [rax],al
   1400032ab:	add    BYTE PTR [rax],al
   1400032ad:	add    BYTE PTR [rax],al
   1400032af:	add    BYTE PTR [rax+0x1400032],ah
   1400032b5:	add    BYTE PTR [rax],al
   1400032b7:	add    BYTE PTR [rax+0x1400032],bl
   1400032bd:	add    BYTE PTR [rax],al
   1400032bf:	add    BYTE PTR [rax+0x1400032],cl
   1400032c5:	add    BYTE PTR [rax],al
   1400032c7:	add    BYTE PTR [rax+0x32],bh
   1400032ca:	add    BYTE PTR [rax+0x1],al
   1400032cd:	add    BYTE PTR [rax],al
   1400032cf:	add    BYTE PTR [rax+0x32],ch
   1400032d2:	add    BYTE PTR [rax+0x1],al
   1400032d5:	add    BYTE PTR [rax],al
   1400032d7:	add    BYTE PTR [rax+0x32],bl
   1400032da:	add    BYTE PTR [rax+0x1],al
   1400032dd:	add    BYTE PTR [rax],al
   1400032df:	add    BYTE PTR [rax+0x32],cl
   1400032e2:	add    BYTE PTR [rax+0x1],al
   1400032e5:	add    BYTE PTR [rax],al
   1400032e7:	add    BYTE PTR [rax+0x32],al
   1400032ea:	add    BYTE PTR [rax+0x1],al
   1400032ed:	add    BYTE PTR [rax],al
   1400032ef:	add    BYTE PTR [rax],bh
   1400032f1:	xor    al,BYTE PTR [rax]
   1400032f3:	rex add DWORD PTR [rax],eax
   1400032f6:	add    BYTE PTR [rax],al
   1400032f8:	sub    BYTE PTR [rdx],dh
   1400032fa:	add    BYTE PTR [rax+0x1],al
   1400032fd:	add    BYTE PTR [rax],al
   1400032ff:	add    BYTE PTR [rax],bl
   140003301:	xor    al,BYTE PTR [rax]
   140003303:	rex add DWORD PTR [rax],eax
   140003306:	add    BYTE PTR [rax],al
   140003308:	adc    eax,0x1400032
   14000330d:	add    BYTE PTR [rax],al
   14000330f:	add    BYTE PTR [rax],dl
   140003311:	xor    al,BYTE PTR [rax]
   140003313:	rex add DWORD PTR [rax],eax
   140003316:	add    BYTE PTR [rax],al
   140003318:	or     BYTE PTR [rdx],dh
   14000331a:	add    BYTE PTR [rax+0x1],al
   14000331d:	add    BYTE PTR [rax],al
   14000331f:	add    BYTE PTR [rdx+rsi*1],al
   140003322:	add    BYTE PTR [rax+0x1],al
   140003325:	add    BYTE PTR [rax],al
   140003327:	add    BYTE PTR [rax],al
   140003329:	xor    al,BYTE PTR [rax]
   14000332b:	rex add DWORD PTR [rax],eax
   14000332e:	add    BYTE PTR [rax],al
   140003330:	cld    
   140003331:	xor    DWORD PTR [rax],eax
   140003333:	rex add DWORD PTR [rax],eax
   140003336:	add    BYTE PTR [rax],al
   140003338:	clc    
   140003339:	xor    DWORD PTR [rax],eax
   14000333b:	rex add DWORD PTR [rax],eax
   14000333e:	add    BYTE PTR [rax],al
   140003340:	hlt    
   140003341:	xor    DWORD PTR [rax],eax
   140003343:	rex add DWORD PTR [rax],eax
   140003346:	add    BYTE PTR [rax],al
   140003348:	lock xor DWORD PTR [rax],eax
   14000334b:	rex add DWORD PTR [rax],eax
   14000334e:	add    BYTE PTR [rax],al
   140003350:	in     al,dx
   140003351:	xor    DWORD PTR [rax],eax
   140003353:	rex add DWORD PTR [rax],eax
   140003356:	add    BYTE PTR [rax],al
   140003358:	loopne 0x14000338b
   14000335a:	add    BYTE PTR [rax+0x1],al
   14000335d:	add    BYTE PTR [rax],al
   14000335f:	add    ah,bl
   140003361:	xor    DWORD PTR [rax],eax
   140003363:	rex add DWORD PTR [rax],eax
   140003366:	add    BYTE PTR [rax],al
   140003368:	fdiv   DWORD PTR [rcx]
   14000336a:	add    BYTE PTR [rax+0x1],al
   14000336d:	add    BYTE PTR [rax],al
   14000336f:	add    ah,dl
   140003371:	xor    DWORD PTR [rax],eax
   140003373:	rex add DWORD PTR [rax],eax
   140003376:	add    BYTE PTR [rax],al
   140003378:	shl    BYTE PTR [rcx],1
   14000337a:	add    BYTE PTR [rax+0x1],al
   14000337d:	add    BYTE PTR [rax],al
   14000337f:	add    ah,cl
   140003381:	xor    DWORD PTR [rax],eax
   140003383:	rex add DWORD PTR [rax],eax
   140003386:	add    BYTE PTR [rax],al
   140003388:	enter  0x31,0x40
   14000338c:	add    DWORD PTR [rax],eax
   14000338e:	add    BYTE PTR [rax],al
   140003390:	(bad)  
   140003391:	xor    DWORD PTR [rax],eax
   140003393:	rex add DWORD PTR [rax],eax
   140003396:	add    BYTE PTR [rax],al
   140003398:	shl    BYTE PTR [rcx],0x0
   14000339b:	rex add DWORD PTR [rax],eax
   14000339e:	add    BYTE PTR [rax],al
   1400033a0:	mov    esp,0x1400031
   1400033a5:	add    BYTE PTR [rax],al
   1400033a7:	add    BYTE PTR [rax+0x1400031],bh
   1400033ad:	add    BYTE PTR [rax],al
   1400033af:	add    BYTE PTR [rcx+rsi*1+0x14000],dh
   1400033b6:	add    BYTE PTR [rax],al
   1400033b8:	mov    al,0x31
   1400033ba:	add    BYTE PTR [rax+0x1],al
   1400033bd:	add    BYTE PTR [rax],al
   1400033bf:	add    BYTE PTR [rcx+rsi*1+0x14000],ch
   1400033c6:	add    BYTE PTR [rax],al
   1400033c8:	test   al,0x31
   1400033ca:	add    BYTE PTR [rax+0x1],al
   1400033cd:	add    BYTE PTR [rax],al
   1400033cf:	add    BYTE PTR [rcx+rsi*1+0x14000],ah
   1400033d6:	add    BYTE PTR [rax],al
   1400033d8:	movabs al,ds:0x9c00000001400031
   1400033e1:	xor    DWORD PTR [rax],eax
   1400033e3:	rex add DWORD PTR [rax],eax
   1400033e6:	add    BYTE PTR [rax],al
   1400033e8:	cwde   
   1400033e9:	xor    DWORD PTR [rax],eax
   1400033eb:	rex add DWORD PTR [rax],eax
   1400033ee:	add    BYTE PTR [rax],al
   1400033f0:	xchg   esp,eax
   1400033f1:	xor    DWORD PTR [rax],eax
   1400033f3:	rex add DWORD PTR [rax],eax
   1400033f6:	add    BYTE PTR [rax],al
   1400033f8:	nop
   1400033f9:	xor    DWORD PTR [rax],eax
   1400033fb:	rex add DWORD PTR [rax],eax
   1400033fe:	add    BYTE PTR [rax],al
   140003400:	mov    WORD PTR [rcx],?
   140003402:	add    BYTE PTR [rax+0x1],al
   140003405:	add    BYTE PTR [rax],al
   140003407:	add    BYTE PTR [rax+0x1400031],cl
   14000340d:	add    BYTE PTR [rax],al
   14000340f:	add    BYTE PTR [rcx+rsi*1+0x14000],al
   140003416:	add    BYTE PTR [rax],al
   140003418:	xor    BYTE PTR [rcx],0x0
   14000341b:	rex add DWORD PTR [rax],eax
   14000341e:	add    BYTE PTR [rax],al
   140003420:	jl     0x140003453
   140003422:	add    BYTE PTR [rax+0x1],al
   140003425:	add    BYTE PTR [rax],al
   140003427:	add    BYTE PTR [rax+0x31],bh
   14000342a:	add    BYTE PTR [rax+0x1],al
   14000342d:	add    BYTE PTR [rax],al
   14000342f:	add    BYTE PTR [rcx+rsi*1+0x0],dh
   140003433:	rex add DWORD PTR [rax],eax
   140003436:	add    BYTE PTR [rax],al
   140003438:	jo     0x14000346b
   14000343a:	add    BYTE PTR [rax+0x1],al
   14000343d:	add    BYTE PTR [rax],al
   14000343f:	add    BYTE PTR [rcx+rsi*1+0x0],ch
   140003443:	rex add DWORD PTR [rax],eax
   140003446:	add    BYTE PTR [rax],al
   140003448:	push   0x1400031
   14000344d:	add    BYTE PTR [rax],al
   14000344f:	add    BYTE PTR [rcx+rsi*1+0x0],ah
   140003453:	rex add DWORD PTR [rax],eax
   140003456:	add    BYTE PTR [rax],al
   140003458:	pop    rax
   140003459:	xor    DWORD PTR [rax],eax
   14000345b:	rex add DWORD PTR [rax],eax
   14000345e:	add    BYTE PTR [rax],al
   140003460:	xor    QWORD PTR [rax],rax
   140003463:	rex add DWORD PTR [rax],eax
   140003466:	add    BYTE PTR [rax],al
   140003468:	rex xor DWORD PTR [rax],eax
   14000346b:	rex add DWORD PTR [rax],eax
   14000346e:	add    BYTE PTR [rax],al
   140003470:	xor    BYTE PTR [rcx],dh
   140003472:	add    BYTE PTR [rax+0x1],al
   140003475:	add    BYTE PTR [rax],al
   140003477:	add    BYTE PTR [rax],bl
   140003479:	xor    DWORD PTR [rax],eax
   14000347b:	rex add DWORD PTR [rax],eax
   14000347e:	add    BYTE PTR [rax],al
   140003480:	or     BYTE PTR [rcx],dh
   140003482:	add    BYTE PTR [rax+0x1],al
   140003485:	add    BYTE PTR [rax],al
   140003487:	add    al,dh
   140003489:	xor    BYTE PTR [rax],al
   14000348b:	rex add DWORD PTR [rax],eax
   14000348e:	add    BYTE PTR [rax],al
   140003490:	shl    BYTE PTR [rax],1
   140003492:	add    BYTE PTR [rax+0x1],al
   140003495:	add    BYTE PTR [rax],al
   140003497:	add    BYTE PTR [rax+0x1400030],dh
   14000349d:	add    BYTE PTR [rax],al
   14000349f:	add    BYTE PTR [rax+0x1400030],dl
   1400034a5:	add    BYTE PTR [rax],al
   1400034a7:	add    BYTE PTR [rax+0x30],dh
   1400034aa:	add    BYTE PTR [rax+0x1],al
   1400034ad:	add    BYTE PTR [rax],al
   1400034af:	add    BYTE PTR [rax+0x30],dl
   1400034b2:	add    BYTE PTR [rax+0x1],al
   1400034b5:	add    BYTE PTR [rax],al
   1400034b7:	add    BYTE PTR [rax],ch
   1400034b9:	xor    BYTE PTR [rax],al
   1400034bb:	rex add DWORD PTR [rax],eax
   1400034be:	add    BYTE PTR [rax],al
   1400034c0:	or     BYTE PTR [rax],dh
   1400034c2:	add    BYTE PTR [rax+0x1],al
   1400034c5:	add    BYTE PTR [rax],al
   1400034c7:	add    al,ah
   1400034c9:	(bad)  
   1400034ca:	add    BYTE PTR [rax+0x1],al
   1400034cd:	add    BYTE PTR [rax],al
   1400034cf:	add    al,al
   1400034d1:	(bad)  
   1400034d2:	add    BYTE PTR [rax+0x1],al
   1400034d5:	add    BYTE PTR [rax],al
   1400034d7:	add    BYTE PTR [rax+0x140002f],bl
   1400034dd:	add    BYTE PTR [rax],al
   1400034df:	add    BYTE PTR [rax+0x2f],bh
   1400034e2:	add    BYTE PTR [rax+0x1],al
   1400034e5:	add    BYTE PTR [rax],al
   1400034e7:	add    BYTE PTR [rax+0x2f],ch
   1400034ea:	add    BYTE PTR [rax+0x1],al
   1400034ed:	add    BYTE PTR [rax],al
   1400034ef:	add    BYTE PTR [rax+0x2f],ah
   1400034f2:	add    BYTE PTR [rax+0x1],al
   1400034f5:	add    BYTE PTR [rax],al
   1400034f7:	add    BYTE PTR [rax+0x2f],bl
   1400034fa:	add    BYTE PTR [rax+0x1],al
   1400034fd:	add    BYTE PTR [rax],al
   1400034ff:	add    BYTE PTR [rax+0x2f],cl
   140003502:	add    BYTE PTR [rax+0x1],al
   140003505:	add    BYTE PTR [rax],al
   140003507:	add    BYTE PTR [rax],ah
   140003509:	(bad)  
   14000350a:	add    BYTE PTR [rax+0x1],al
   14000350d:	add    BYTE PTR [rax],al
   14000350f:	add    BYTE PTR [rdi+rbp*1],dl
   140003512:	add    BYTE PTR [rax+0x1],al
   140003515:	add    BYTE PTR [rax],al
   140003517:	add    BYTE PTR [rax],cl
   140003519:	(bad)  
   14000351a:	add    BYTE PTR [rax+0x1],al
   14000351d:	add    BYTE PTR [rax],al
   14000351f:	add    al,bh
   140003521:	add    BYTE PTR cs:[rax+0x1],al
   140003525:	add    BYTE PTR [rax],al
   140003527:	add    al,bl
   140003529:	add    BYTE PTR cs:[rax+0x1],al
   14000352d:	add    BYTE PTR [rax],al
   14000352f:	add    BYTE PTR [rax+0x140002e],bh
   140003535:	add    BYTE PTR [rax],al
   140003537:	add    BYTE PTR [rax+0x140002e],dl
   14000353d:	add    BYTE PTR [rax],al
   14000353f:	add    BYTE PTR [rax+0x2e],ch
   140003542:	add    BYTE PTR [rax+0x1],al
   140003545:	add    BYTE PTR [rax],al
   140003547:	add    BYTE PTR [rax+0x2e],al
   14000354a:	add    BYTE PTR [rax+0x1],al
   14000354d:	add    BYTE PTR [rax],al
   14000354f:	add    BYTE PTR [rax],dl
   140003551:	add    BYTE PTR cs:[rax+0x1],al
   140003555:	add    BYTE PTR [rax],al
   140003557:	add    al,dh
   140003559:	sub    eax,0x14000
   14000355e:	add    BYTE PTR [rax],al
   140003560:	enter  0x2d,0x40
   140003564:	add    DWORD PTR [rax],eax
   140003566:	add    BYTE PTR [rax],al
   140003568:	movabs al,ds:0x700000000140002d
   140003571:	sub    eax,0x14000
   140003576:	add    BYTE PTR [rax],al
   140003578:	rex sub eax,0x14000
   14000357e:	add    BYTE PTR [rax],al
   140003580:	and    BYTE PTR [rip+0x14000],ch        # 0x140017586
   140003586:	add    BYTE PTR [rax],al
   140003588:	adc    eax,0x1400032
   14000358d:	add    BYTE PTR [rax],al
   14000358f:	add    BYTE PTR [rax],cl
   140003591:	sub    eax,0x14000
   140003596:	add    BYTE PTR [rax],al
   140003598:	call   0x1414035c9
   14000359d:	add    BYTE PTR [rax],al
   14000359f:	add    al,dl
   1400035a1:	sub    al,0x0
   1400035a3:	rex add DWORD PTR [rax],eax
   1400035a6:	add    BYTE PTR [rax],al
   1400035a8:	mov    al,0x2c
   1400035aa:	add    BYTE PTR [rax+0x1],al
   1400035ad:	add    BYTE PTR [rax],al
   1400035af:	add    BYTE PTR [rax+0x140002c],dl
	...
   1400035bd:	add    BYTE PTR [rax],al
   1400035bf:	add    BYTE PTR [rcx],al
   1400035c1:	add    al,BYTE PTR [rbx]
   1400035c3:	add    al,0x5
   1400035c5:	(bad)  
   1400035c6:	(bad)  
   1400035c7:	or     BYTE PTR [rcx],cl
   1400035c9:	or     cl,BYTE PTR [rbx]
   1400035cb:	or     al,0xd
   1400035cd:	(bad)  
   1400035ce:	movups xmm2,XMMWORD PTR [rcx]
   1400035d1:	adc    dl,BYTE PTR [rbx]
   1400035d3:	adc    al,0x15
   1400035d5:	(bad)  
   1400035d6:	(bad)  
   1400035d7:	sbb    BYTE PTR [rcx],bl
   1400035d9:	sbb    bl,BYTE PTR [rbx]
   1400035db:	sbb    al,0x1d
   1400035dd:	(bad)  
   1400035de:	(bad)  
   1400035df:	and    BYTE PTR [rcx],ah
   1400035e1:	and    ah,BYTE PTR [rbx]
   1400035e3:	and    al,0x25
   1400035e5:	es (bad) 
   1400035e7:	sub    BYTE PTR [rcx],ch
   1400035e9:	sub    ch,BYTE PTR [rbx]
   1400035eb:	sub    al,0x2d
   1400035ed:	cs (bad) 
   1400035ef:	xor    BYTE PTR [rcx],dh
   1400035f1:	xor    dh,BYTE PTR [rbx]
   1400035f3:	xor    al,0x35
   1400035f5:	ss (bad) 
   1400035f7:	cmp    BYTE PTR [rcx],bh
   1400035f9:	cmp    bh,BYTE PTR [rbx]
   1400035fb:	cmp    al,0x3d
   1400035fd:	ds (bad) 
   1400035ff:	rex
   140003600:	rex.B
   140003601:	rex.X
   140003602:	rex.XB
   140003603:	rex.R
   140003604:	rex.RB
   140003605:	rex.RX
   140003606:	rex.RXB
   140003607:	rex.W
   140003608:	rex.WB
   140003609:	rex.WX
   14000360a:	rex.WXB
   14000360b:	rex.WR
   14000360c:	rex.WRB
   14000360d:	rex.WRX
   14000360e:	rex.WRXB push r8
   140003610:	push   rcx
   140003611:	push   rdx
   140003612:	push   rbx
   140003613:	push   rsp
   140003614:	push   rbp
   140003615:	push   rsi
   140003616:	push   rdi
   140003617:	pop    rax
   140003618:	pop    rcx
   140003619:	pop    rdx
   14000361a:	pop    rbx
   14000361b:	pop    rsp
   14000361c:	pop    rbp
   14000361d:	pop    rsi
   14000361e:	pop    rdi
   14000361f:	(bad)  
   140003620:	(bad)  
   140003621:	(bad)
   140003626:	addr32 push 0x6c6b6a69
   14000362c:	ins    DWORD PTR es:[rdi],dx
   14000362d:	outs   dx,BYTE PTR ds:[rsi]
   14000362e:	outs   dx,DWORD PTR ds:[rsi]
   14000362f:	jo     0x1400036a2
   140003631:	jb     0x1400036a6
   140003633:	je     0x1400036aa
   140003635:	jbe    0x1400036ae
   140003637:	js     0x1400036b2
   140003639:	jp     0x1400036b6
   14000363b:	jl     0x1400036ba
   14000363d:	jle    0x1400036be
   14000363f:	add    BYTE PTR [rdx+0x0],bh
   140003642:	push   0x43002d00
   140003647:	add    BYTE PTR [rax+0x0],cl
   14000364a:	push   rbx
   14000364b:	add    BYTE PTR [rax],al
   14000364d:	add    BYTE PTR [rax],al
   14000364f:	add    BYTE PTR [rdx+0x0],bh
   140003652:	push   0x48002d00
   140003657:	add    BYTE PTR [rcx+0x0],ah
   14000365a:	outs   dx,BYTE PTR ds:[rsi]
   14000365b:	add    BYTE PTR [rbx+0x0],dh
   14000365e:	add    BYTE PTR [rax],al
   140003660:	jp     0x140003662
   140003662:	push   0x43002d00
   140003667:	add    BYTE PTR [rax+0x0],cl
   14000366a:	push   rsp
   14000366b:	add    BYTE PTR [rax],al
   14000366d:	add    BYTE PTR [rax],al
   14000366f:	add    BYTE PTR [rdx+0x0],bh
   140003672:	push   0x48002d00
   140003677:	add    BYTE PTR [rcx+0x0],ah
   14000367a:	outs   dx,BYTE PTR ds:[rsi]
   14000367b:	add    BYTE PTR [rax+rax*1+0x0],dh
   14000367f:	add    BYTE PTR [rdx+0x0],ah
   140003682:	jae    0x140003684
   140003684:	sub    eax,0x41004200
   140003689:	add    BYTE PTR [rip+0x61004c00],ch        # 0x1a100828f
   14000368f:	add    BYTE PTR [rax+rax*1+0x6e],dh
   140003693:	add    BYTE PTR [rax],al
   140003695:	add    BYTE PTR [rax],al
   140003697:	add    BYTE PTR [rdx+0x0],ah
   14000369a:	jae    0x14000369c
   14000369c:	sub    eax,0x61004c00
   1400036a1:	add    BYTE PTR [rax+rax*1+0x6e],dh
   1400036a5:	add    BYTE PTR [rip+0x41004200],ch        # 0x1810078ab
   1400036ab:	add    BYTE PTR [rax],al
   1400036ad:	add    BYTE PTR [rax],al
   1400036af:	add    BYTE PTR [rdx+0x0],ah
   1400036b2:	jae    0x1400036b4
   1400036b4:	sub    eax,0x41004200
   1400036b9:	add    BYTE PTR [rip+0x79004300],ch        # 0x1b90079bf
   1400036bf:	add    BYTE PTR [rdx+0x0],dh
   1400036c2:	ins    BYTE PTR es:[rdi],dx
   1400036c3:	add    BYTE PTR [rax],al
   1400036c5:	add    BYTE PTR [rax],al
   1400036c7:	add    BYTE PTR [rdx+0x0],ah
   1400036ca:	jae    0x1400036cc
   1400036cc:	sub    eax,0x79004300
   1400036d1:	add    BYTE PTR [rdx+0x0],dh
   1400036d4:	ins    BYTE PTR es:[rdi],dx
   1400036d5:	add    BYTE PTR [rip+0x41004200],ch        # 0x1810078db
   1400036db:	add    BYTE PTR [rax],al
   1400036dd:	add    BYTE PTR [rax],al
   1400036df:	add    BYTE PTR [rcx+0x0],ch
   1400036e2:	jne    0x1400036e4
   1400036e4:	sub    eax,0x41004300
   1400036e9:	add    BYTE PTR [rip+0x61004c00],ch        # 0x1a10082ef
   1400036ef:	add    BYTE PTR [rax+rax*1+0x6e],dh
   1400036f3:	add    BYTE PTR [rax],al
   1400036f5:	add    BYTE PTR [rax],al
   1400036f7:	add    BYTE PTR [rcx+0x0],ch
   1400036fa:	jne    0x1400036fc
   1400036fc:	sub    eax,0x61004c00
   140003701:	add    BYTE PTR [rax+rax*1+0x6e],dh
   140003705:	add    BYTE PTR [rip+0x41004300],ch        # 0x181007a0b
	...
   140003717:	add    BYTE PTR [rbx+0x0],dh
   14000371a:	jb     0x14000371c
   14000371c:	sub    eax,0x41004200
   140003721:	add    BYTE PTR [rip+0x79004300],ch        # 0x1b9007a27
   140003727:	add    BYTE PTR [rdx+0x0],dh
   14000372a:	ins    BYTE PTR es:[rdi],dx
   14000372b:	add    BYTE PTR [rax],al
   14000372d:	add    BYTE PTR [rax],al
   14000372f:	add    BYTE PTR [rbx+0x0],dh
   140003732:	jb     0x140003734
   140003734:	sub    eax,0x79004300
   140003739:	add    BYTE PTR [rdx+0x0],dh
   14000373c:	ins    BYTE PTR es:[rdi],dx
   14000373d:	add    BYTE PTR [rip+0x41004200],ch        # 0x181007943
   140003743:	add    BYTE PTR [rax],al
   140003745:	add    BYTE PTR [rax],al
   140003747:	add    BYTE PTR [rbx+0x0],dh
   14000374a:	jb     0x14000374c
   14000374c:	sub    eax,0x41004200
   140003751:	add    BYTE PTR [rip+0x61004c00],ch        # 0x1a1008357
   140003757:	add    BYTE PTR [rax+rax*1+0x6e],dh
   14000375b:	add    BYTE PTR [rax],al
   14000375d:	add    BYTE PTR [rax],al
   14000375f:	add    BYTE PTR [rbx+0x0],dh
   140003762:	jb     0x140003764
   140003764:	sub    eax,0x61004c00
   140003769:	add    BYTE PTR [rax+rax*1+0x6e],dh
   14000376d:	add    BYTE PTR [rip+0x41004200],ch        # 0x181007973
   140003773:	add    BYTE PTR [rax],al
   140003775:	add    BYTE PTR [rax],al
   140003777:	add    BYTE PTR [rbx+0x0],dh
   14000377a:	jb     0x14000377c
   14000377c:	sub    eax,0x50005300
   140003781:	add    BYTE PTR [rip+0x79004300],ch        # 0x1b9007a87
   140003787:	add    BYTE PTR [rdx+0x0],dh
   14000378a:	ins    BYTE PTR es:[rdi],dx
   14000378b:	add    BYTE PTR [rax],al
   14000378d:	add    BYTE PTR [rax],al
   14000378f:	add    BYTE PTR [rbx+0x0],dh
   140003792:	jb     0x140003794
   140003794:	sub    eax,0x79004300
   140003799:	add    BYTE PTR [rdx+0x0],dh
   14000379c:	ins    BYTE PTR es:[rdi],dx
   14000379d:	add    BYTE PTR [rip+0x53004300],ch        # 0x193007aa3
   1400037a3:	add    BYTE PTR [rax],al
   1400037a5:	add    BYTE PTR [rax],al
   1400037a7:	add    BYTE PTR [rbx+0x0],dh
   1400037aa:	jb     0x1400037ac
   1400037ac:	sub    eax,0x50005300
   1400037b1:	add    BYTE PTR [rip+0x61004c00],ch        # 0x1a10083b7
   1400037b7:	add    BYTE PTR [rax+rax*1+0x6e],dh
   1400037bb:	add    BYTE PTR [rax],al
   1400037bd:	add    BYTE PTR [rax],al
   1400037bf:	add    BYTE PTR [rbx+0x0],dh
   1400037c2:	jb     0x1400037c4
   1400037c4:	sub    eax,0x61004c00
   1400037c9:	add    BYTE PTR [rax+rax*1+0x6e],dh
   1400037cd:	add    BYTE PTR [rip+0x53004300],ch        # 0x193007ad3
   1400037d3:	add    BYTE PTR [rax],al
   1400037d5:	add    BYTE PTR [rax],al
   1400037d7:	add    BYTE PTR [rcx+0x0],cl
   1400037da:	push   rbx
   1400037db:	add    BYTE PTR [rax],al
   1400037dd:	add    BYTE PTR [rax],al
   1400037df:	add    BYTE PTR [rbp+0x0],al
   1400037e2:	push   rbp
   1400037e3:	add    BYTE PTR [rax],al
   1400037e5:	add    BYTE PTR [rax],al
   1400037e7:	add    BYTE PTR [rax+0x0],cl
   1400037ea:	add    BYTE PTR [r8],r8b
   1400037ed:	add    BYTE PTR [rax],al
   1400037ef:	add    BYTE PTR [rcx+0x0],al
   1400037f2:	push   rdx
   1400037f3:	add    BYTE PTR [rax],al
   1400037f5:	add    BYTE PTR [rax],al
   1400037f7:	add    BYTE PTR [rbx+0x0],dl
   1400037fa:	rex.WR add BYTE PTR [rax],r8b
   1400037fd:	add    BYTE PTR [rax],al
   1400037ff:	add    BYTE PTR [rbx+0x0],dl
   140003802:	rex.WXB add BYTE PTR [r8],al
   140003805:	add    BYTE PTR [rax],al
   140003807:	add    BYTE PTR [rax+rax*1+0x52],dl
   14000380b:	add    BYTE PTR [rax],al
   14000380d:	add    BYTE PTR [rax],al
   14000380f:	add    BYTE PTR [rax+0x0],dl
   140003812:	push   rsp
   140003813:	add    BYTE PTR [rax],al
   140003815:	add    BYTE PTR [rax],al
   140003817:	add    BYTE PTR [rbx+0x0],al
   14000381a:	push   rbx
   14000381b:	add    BYTE PTR [rax],al
   14000381d:	add    BYTE PTR [rax],al
   14000381f:	add    BYTE PTR [rdx+0x0],dl
   140003822:	push   rbp
   140003823:	add    BYTE PTR [rax],al
   140003825:	add    BYTE PTR [rax],al
   140003827:	add    BYTE PTR [rax+0x0],dl
   14000382a:	rex.WR add BYTE PTR [rax],r8b
   14000382d:	add    BYTE PTR [rax],al
   14000382f:	add    BYTE PTR [rbp+0x0],al
   140003832:	rex.WR add BYTE PTR [rax],r8b
   140003835:	add    BYTE PTR [rax],al
   140003837:	add    BYTE PTR [rsi+0x0],cl
   14000383a:	rex.WRXB add BYTE PTR [r8],r8b
   14000383d:	add    BYTE PTR [rax],al
   14000383f:	add    BYTE PTR [rax+0x0],cl
   140003842:	push   rbp
   140003843:	add    BYTE PTR [rax],al
   140003845:	add    BYTE PTR [rax],al
   140003847:	add    BYTE PTR [rsi+0x0],al
   14000384a:	rex.WB add BYTE PTR [r8],al
   14000384d:	add    BYTE PTR [rax],al
   14000384f:	add    BYTE PTR [rax+rax*1+0x41],al
   140003853:	add    BYTE PTR [rax],al
   140003855:	add    BYTE PTR [rax],al
   140003857:	add    BYTE PTR [rbx+0x0],dl
   14000385a:	push   rsi
   14000385b:	add    BYTE PTR [rax],al
   14000385d:	add    BYTE PTR [rax],al
   14000385f:	add    BYTE PTR [rsi+0x0],cl
   140003862:	rex.WR add BYTE PTR [rax],r8b
   140003865:	add    BYTE PTR [rax],al
   140003867:	add    BYTE PTR [rcx+0x0],cl
   14000386a:	push   rsp
   14000386b:	add    BYTE PTR [rax],al
   14000386d:	add    BYTE PTR [rax],al
   14000386f:	add    BYTE PTR [rdx+0x0],al
   140003872:	push   rdx
   140003873:	add    BYTE PTR [rax],al
   140003875:	add    BYTE PTR [rax],al
   140003877:	add    BYTE PTR [rbp+0x0],al
   14000387a:	push   rbx
   14000387b:	add    BYTE PTR [rax],al
   14000387d:	add    BYTE PTR [rax],al
   14000387f:	add    BYTE PTR [rsi+0x0],al
   140003882:	push   rdx
   140003883:	add    BYTE PTR [rax],al
   140003885:	add    BYTE PTR [rax],al
   140003887:	add    BYTE PTR [rbx+0x0],al
   14000388a:	rex.WRX add BYTE PTR [rax],r8b
   14000388d:	add    BYTE PTR [rax],al
   14000388f:	add    BYTE PTR [rax+rax*1+0x57],dl
   140003893:	add    BYTE PTR [rax],al
   140003895:	add    BYTE PTR [rax],al
   140003897:	add    BYTE PTR [rbx+0x0],cl
   14000389a:	rex.WRXB add BYTE PTR [r8],r8b
   14000389d:	add    BYTE PTR [rax],al
   14000389f:	add    BYTE PTR [rdx+0x0],cl
   1400038a2:	add    BYTE PTR [r8],al
   1400038a5:	add    BYTE PTR [rax],al
   1400038a7:	add    BYTE PTR [rax+rax*1+0x45],al
   1400038ab:	add    BYTE PTR [rax],al
   1400038ad:	add    BYTE PTR [rax],al
   1400038af:	add    BYTE PTR [rbp+0x0],al
   1400038b2:	rex.WRX add BYTE PTR [rax],r8b
	...
   1400038bd:	add    BYTE PTR [rax],al
   1400038bf:	add    BYTE PTR [rax+0x1400038],dh
   1400038c5:	add    BYTE PTR [rax],al
   1400038c7:	add    BYTE PTR [rcx],cl
   1400038c9:	add    al,0x0
   1400038cb:	add    BYTE PTR [rax],al
   1400038cd:	add    BYTE PTR [rax],al
   1400038cf:	add    BYTE PTR [rax+0x1400038],ch
   1400038d5:	add    BYTE PTR [rax],al
   1400038d7:	add    BYTE PTR [rdi],al
   1400038d9:	add    al,0x0
   1400038db:	add    BYTE PTR [rax],al
   1400038dd:	add    BYTE PTR [rax],al
   1400038df:	add    BYTE PTR [rax+0x1400038],ah
   1400038e5:	add    BYTE PTR [rax],al
   1400038e7:	add    BYTE PTR [rcx],dl
   1400038e9:	add    al,0x0
   1400038eb:	add    BYTE PTR [rax],al
   1400038ed:	add    BYTE PTR [rax],al
   1400038ef:	add    BYTE PTR [rax+0x1400038],bl
   1400038f5:	add    BYTE PTR [rax],al
   1400038f7:	add    BYTE PTR [rdx],dl
   1400038f9:	add    al,0x0
   1400038fb:	add    BYTE PTR [rax],al
   1400038fd:	add    BYTE PTR [rax],al
   1400038ff:	add    BYTE PTR [rax+0x1400038],dl
   140003905:	add    BYTE PTR [rax],al
   140003907:	add    BYTE PTR [rsp+rax*1],al
   14000390a:	add    BYTE PTR [rax],al
   14000390c:	add    BYTE PTR [rax],al
   14000390e:	add    BYTE PTR [rax],al
   140003910:	mov    BYTE PTR [rax],bh
   140003912:	add    BYTE PTR [rax+0x1],al
   140003915:	add    BYTE PTR [rax],al
   140003917:	add    BYTE PTR [rax+rcx*1],al
   14000391a:	add    BYTE PTR [rax],al
   14000391c:	add    BYTE PTR [rax],al
   14000391e:	add    BYTE PTR [rax],al
   140003920:	cmp    BYTE PTR [rax],0x0
   140003923:	rex add DWORD PTR [rax],eax
   140003926:	add    BYTE PTR [rax],al
   140003928:	or     al,0x4
   14000392a:	add    BYTE PTR [rax],al
   14000392c:	add    BYTE PTR [rax],al
   14000392e:	add    BYTE PTR [rax],al
   140003930:	js     0x14000396a
   140003932:	add    BYTE PTR [rax+0x1],al
   140003935:	add    BYTE PTR [rax],al
   140003937:	add    BYTE PTR [rdx],cl
   140003939:	or     al,0x0
   14000393b:	add    BYTE PTR [rax],al
   14000393d:	add    BYTE PTR [rax],al
   14000393f:	add    BYTE PTR [rax+0x38],dh
   140003942:	add    BYTE PTR [rax+0x1],al
   140003945:	add    BYTE PTR [rax],al
   140003947:	add    BYTE PTR [rsi],dl
   140003949:	add    al,0x0
   14000394b:	add    BYTE PTR [rax],al
   14000394d:	add    BYTE PTR [rax],al
   14000394f:	add    BYTE PTR [rax+0x38],ch
   140003952:	add    BYTE PTR [rax+0x1],al
   140003955:	add    BYTE PTR [rax],al
   140003957:	add    BYTE PTR [rax],dl
   140003959:	add    al,0x0
   14000395b:	add    BYTE PTR [rax],al
   14000395d:	add    BYTE PTR [rax],al
   14000395f:	add    BYTE PTR [rax+0x38],ah
   140003962:	add    BYTE PTR [rax+0x1],al
   140003965:	add    BYTE PTR [rax],al
   140003967:	add    BYTE PTR [rbx],dl
   140003969:	add    al,0x0
   14000396b:	add    BYTE PTR [rax],al
   14000396d:	add    BYTE PTR [rax],al
   14000396f:	add    BYTE PTR [rax+0x38],bl
   140003972:	add    BYTE PTR [rax+0x1],al
   140003975:	add    BYTE PTR [rax],al
   140003977:	add    BYTE PTR [rip+0x4],bl        # 0x140003981
   14000397d:	add    BYTE PTR [rax],al
   14000397f:	add    BYTE PTR [rax+0x38],dl
   140003982:	add    BYTE PTR [rax+0x1],al
   140003985:	add    BYTE PTR [rax],al
   140003987:	add    BYTE PTR [rsi],al
   140003989:	add    al,0x0
   14000398b:	add    BYTE PTR [rax],al
   14000398d:	add    BYTE PTR [rax],al
   14000398f:	add    BYTE PTR [rax+0x38],cl
   140003992:	add    BYTE PTR [rax+0x1],al
   140003995:	add    BYTE PTR [rax],al
   140003997:	add    BYTE PTR [rbx],cl
   140003999:	add    al,0x0
   14000399b:	add    BYTE PTR [rax],al
   14000399d:	add    BYTE PTR [rax],al
   14000399f:	add    BYTE PTR [rax+0x38],al
   1400039a2:	add    BYTE PTR [rax+0x1],al
   1400039a5:	add    BYTE PTR [rax],al
   1400039a7:	add    BYTE PTR [rsi],cl
   1400039a9:	add    al,0x0
   1400039ab:	add    BYTE PTR [rax],al
   1400039ad:	add    BYTE PTR [rax],al
   1400039af:	add    BYTE PTR [rax],bh
   1400039b1:	cmp    BYTE PTR [rax],al
   1400039b3:	rex add DWORD PTR [rax],eax
   1400039b6:	add    BYTE PTR [rax],al
   1400039b8:	adc    al,0x4
   1400039ba:	add    BYTE PTR [rax],al
   1400039bc:	add    BYTE PTR [rax],al
   1400039be:	add    BYTE PTR [rax],al
   1400039c0:	xor    BYTE PTR [rax],bh
   1400039c2:	add    BYTE PTR [rax+0x1],al
   1400039c5:	add    BYTE PTR [rax],al
   1400039c7:	add    BYTE PTR [rax],cl
   1400039c9:	add    al,0x0
   1400039cb:	add    BYTE PTR [rax],al
   1400039cd:	add    BYTE PTR [rax],al
   1400039cf:	add    BYTE PTR [rax],ch
   1400039d1:	cmp    BYTE PTR [rax],al
   1400039d3:	rex add DWORD PTR [rax],eax
   1400039d6:	add    BYTE PTR [rax],al
   1400039d8:	adc    eax,0x4
   1400039dd:	add    BYTE PTR [rax],al
   1400039df:	add    BYTE PTR [rax],ah
   1400039e1:	cmp    BYTE PTR [rax],al
   1400039e3:	rex add DWORD PTR [rax],eax
   1400039e6:	add    BYTE PTR [rax],al
   1400039e8:	sbb    DWORD PTR [rax+rax*1],eax
   1400039eb:	add    BYTE PTR [rax],al
   1400039ed:	add    BYTE PTR [rax],al
   1400039ef:	add    BYTE PTR [rax],bl
   1400039f1:	cmp    BYTE PTR [rax],al
   1400039f3:	rex add DWORD PTR [rax],eax
   1400039f6:	add    BYTE PTR [rax],al
   1400039f8:	add    eax,0x4
   1400039fd:	add    BYTE PTR [rax],al
   1400039ff:	add    BYTE PTR [rax],dl
   140003a01:	cmp    BYTE PTR [rax],al
   140003a03:	rex add DWORD PTR [rax],eax
   140003a06:	add    BYTE PTR [rax],al
   140003a08:	(bad)  
   140003a09:	or     BYTE PTR [rax],al
   140003a0b:	add    BYTE PTR [rax],al
   140003a0d:	add    BYTE PTR [rax],al
   140003a0f:	add    BYTE PTR [rax],cl
   140003a11:	cmp    BYTE PTR [rax],al
   140003a13:	rex add DWORD PTR [rax],eax
   140003a16:	add    BYTE PTR [rax],al
   140003a18:	(bad)  
   140003a19:	add    al,0x0
   140003a1b:	add    BYTE PTR [rax],al
   140003a1d:	add    BYTE PTR [rax],al
   140003a1f:	add    BYTE PTR [rax],al
   140003a21:	cmp    BYTE PTR [rax],al
   140003a23:	rex add DWORD PTR [rax],eax
   140003a26:	add    BYTE PTR [rax],al
   140003a28:	sbb    eax,DWORD PTR [rax+rax*1]
   140003a2b:	add    BYTE PTR [rax],al
   140003a2d:	add    BYTE PTR [rax],al
   140003a2f:	add    al,bh
   140003a31:	(bad)  
   140003a32:	add    BYTE PTR [rax+0x1],al
   140003a35:	add    BYTE PTR [rax],al
   140003a37:	add    BYTE PTR [rsp+rax*1],ah
   140003a3a:	add    BYTE PTR [rax],al
   140003a3c:	add    BYTE PTR [rax],al
   140003a3e:	add    BYTE PTR [rax],al
   140003a40:	lock (bad) 
   140003a42:	add    BYTE PTR [rax+0x1],al
   140003a45:	add    BYTE PTR [rax],al
   140003a47:	add    BYTE PTR [rcx],al
   140003a49:	add    al,0x0
   140003a4b:	add    BYTE PTR [rax],al
   140003a4d:	add    BYTE PTR [rax],al
   140003a4f:	add    al,ch
   140003a51:	(bad)  
   140003a52:	add    BYTE PTR [rax+0x1],al
   140003a55:	add    BYTE PTR [rax],al
   140003a57:	add    BYTE PTR [rip+0x4],cl        # 0x140003a61
   140003a5d:	add    BYTE PTR [rax],al
   140003a5f:	add    al,ah
   140003a61:	(bad)  
   140003a62:	add    BYTE PTR [rax+0x1],al
   140003a65:	add    BYTE PTR [rax],al
   140003a67:	add    BYTE PTR [rip+0x4],ch        # 0x140003a71
   140003a6d:	add    BYTE PTR [rax],al
   140003a6f:	add    al,bl
   140003a71:	(bad)  
   140003a72:	add    BYTE PTR [rax+0x1],al
   140003a75:	add    BYTE PTR [rax],al
   140003a77:	add    BYTE PTR [rdi],cl
   140003a79:	add    al,0x0
   140003a7b:	add    BYTE PTR [rax],al
   140003a7d:	add    BYTE PTR [rax],al
   140003a7f:	add    al,al
   140003a81:	(bad)  
   140003a82:	add    BYTE PTR [rax+0x1],al
   140003a85:	add    BYTE PTR [rax],al
   140003a87:	add    BYTE PTR [rax+0x1400037],ch
   140003a8d:	add    BYTE PTR [rax],al
   140003a8f:	add    BYTE PTR [rax+0x1400037],dl
   140003a95:	add    BYTE PTR [rax],al
   140003a97:	add    BYTE PTR [rax+0x37],bh
   140003a9a:	add    BYTE PTR [rax+0x1],al
   140003a9d:	add    BYTE PTR [rax],al
   140003a9f:	add    BYTE PTR [rax+0x37],ah
   140003aa2:	add    BYTE PTR [rax+0x1],al
   140003aa5:	add    BYTE PTR [rax],al
   140003aa7:	add    BYTE PTR [rax+0x37],cl
   140003aaa:	add    BYTE PTR [rax+0x1],al
   140003aad:	add    BYTE PTR [rax],al
   140003aaf:	add    BYTE PTR [rax],dh
   140003ab1:	(bad)  
   140003ab2:	add    BYTE PTR [rax+0x1],al
   140003ab5:	add    BYTE PTR [rax],al
   140003ab7:	add    BYTE PTR [rax],bl
   140003ab9:	(bad)  
   140003aba:	add    BYTE PTR [rax+0x1],al
   140003abd:	add    BYTE PTR [rax],al
   140003abf:	add    BYTE PTR [rax],dl
   140003ac1:	(bad)  
   140003ac2:	add    BYTE PTR [rax+0x1],al
   140003ac5:	add    BYTE PTR [rax],al
   140003ac7:	add    BYTE PTR [rax],dl
   140003ac9:	(bad)  
   140003aca:	add    BYTE PTR [rax+0x1],al
   140003acd:	add    BYTE PTR [rax],al
   140003acf:	add    al,bh
   140003ad1:	add    BYTE PTR ss:[rax+0x1],al
   140003ad5:	add    BYTE PTR [rax],al
   140003ad7:	add    al,ah
   140003ad9:	add    BYTE PTR ss:[rax+0x1],al
   140003add:	add    BYTE PTR [rax],al
   140003adf:	add    BYTE PTR [rax],dl
   140003ae1:	(bad)  
   140003ae2:	add    BYTE PTR [rax+0x1],al
   140003ae5:	add    BYTE PTR [rax],al
   140003ae7:	add    BYTE PTR [rax],dl
   140003ae9:	(bad)  
   140003aea:	add    BYTE PTR [rax+0x1],al
   140003aed:	add    BYTE PTR [rax],al
   140003aef:	add    al,cl
   140003af1:	add    BYTE PTR ss:[rax+0x1],al
   140003af5:	add    BYTE PTR [rax],al
   140003af7:	add    BYTE PTR [rax+0x1400036],dh
   140003afd:	add    BYTE PTR [rax],al
   140003aff:	add    BYTE PTR [rax+0x1400036],bl
   140003b05:	add    BYTE PTR [rax],al
   140003b07:	add    BYTE PTR [rax+0x1400036],al
   140003b0d:	add    BYTE PTR [rax],al
   140003b0f:	add    BYTE PTR [rax],dl
   140003b11:	(bad)  
   140003b12:	add    BYTE PTR [rax+0x1],al
   140003b15:	add    BYTE PTR [rax],al
   140003b17:	add    BYTE PTR [rax],dl
   140003b19:	(bad)  
   140003b1a:	add    BYTE PTR [rax+0x1],al
   140003b1d:	add    BYTE PTR [rax],al
   140003b1f:	add    BYTE PTR [rax+0x36],dh
   140003b22:	add    BYTE PTR [rax+0x1],al
   140003b25:	add    BYTE PTR [rax],al
   140003b27:	add    BYTE PTR [rax+0x36],ah
   140003b2a:	add    BYTE PTR [rax+0x1],al
   140003b2d:	add    BYTE PTR [rax],al
   140003b2f:	add    BYTE PTR [rax+0x36],dl
   140003b32:	add    BYTE PTR [rax+0x1],al
   140003b35:	add    BYTE PTR [rax],al
   140003b37:	add    BYTE PTR [rax+0x36],al
   140003b3a:	add    BYTE PTR [rax+0x1],al
   140003b3d:	add    BYTE PTR [rax],al
   140003b3f:	add    BYTE PTR [rax],dl
   140003b41:	(bad)  
   140003b42:	add    BYTE PTR [rax+0x1],al
   140003b45:	add    BYTE PTR [rax],al
   140003b47:	add    BYTE PTR [rax],dl
   140003b49:	(bad)  
   140003b4a:	add    BYTE PTR [rax+0x1],al
	...
   140003b55:	add    BYTE PTR [rax],al
   140003b57:	add    al,dh
   140003b59:	cmp    al,BYTE PTR [rax]
   140003b5b:	rex add DWORD PTR [rax],eax
	...
   140003b8e:	add    BYTE PTR [rax],al
   140003b90:	sar    BYTE PTR [rdx],1
   140003b92:	add    BYTE PTR [rax+0x1],al
	...
   140003bdd:	add    BYTE PTR [rax],al
   140003bdf:	add    BYTE PTR [rax+0x140003a],al
	...
   140003c15:	add    BYTE PTR [rax],al
   140003c17:	add    BYTE PTR [rax],ah
   140003c19:	cmp    eax,DWORD PTR [rax]
   140003c1b:	rex add DWORD PTR [rax],eax
   140003c1e:	add    BYTE PTR [rax],al
   140003c20:	push   rbx
   140003c21:	add    BYTE PTR [rdi+0x0],ch
   140003c24:	data16 add BYTE PTR [rax+rax*1+0x77],dh
   140003c29:	add    BYTE PTR [rcx+0x0],ah
   140003c2c:	jb     0x140003c2e
   140003c2e:	add    BYTE PTR gs:[rax+rax*1+0x4d],bl
   140003c33:	add    BYTE PTR [rcx+0x0],ch
   140003c36:	movsxd eax,DWORD PTR [rax]
   140003c38:	jb     0x140003c3a
   140003c3a:	outs   dx,DWORD PTR ds:[rsi]
   140003c3b:	add    BYTE PTR [rbx+0x0],dh
   140003c3e:	outs   dx,DWORD PTR ds:[rsi]
   140003c3f:	add    BYTE PTR [rsi+0x0],ah
   140003c42:	je     0x140003c44
   140003c44:	pop    rsp
   140003c45:	add    BYTE PTR [rcx+0x0],al
   140003c48:	movsxd eax,DWORD PTR [rax]
   140003c4a:	je     0x140003c4c
   140003c4c:	imul   eax,DWORD PTR [rax],0x650076
   140003c52:	and    BYTE PTR [rax],al
   140003c54:	push   rbx
   140003c55:	add    BYTE PTR [rbp+0x0],ah
   140003c58:	je     0x140003c5a
   140003c5a:	jne    0x140003c5c
   140003c5c:	jo     0x140003c5e
   140003c5e:	pop    rsp
   140003c5f:	add    BYTE PTR [rcx+0x0],cl
   140003c62:	outs   dx,BYTE PTR ds:[rsi]
   140003c63:	add    BYTE PTR [rbx+0x0],dh
   140003c66:	je     0x140003c68
   140003c68:	(bad)  
   140003c69:	add    BYTE PTR [rax+rax*1+0x6c],ch
   140003c6d:	add    BYTE PTR [rbp+0x0],ah
   140003c70:	add    BYTE PTR fs:[rax],ah
   140003c73:	add    BYTE PTR [rbx+0x0],al
   140003c76:	outs   dx,DWORD PTR ds:[rsi]
   140003c77:	add    BYTE PTR [rbp+0x0],ch
   140003c7a:	jo     0x140003c7c
   140003c7c:	outs   dx,DWORD PTR ds:[rsi]
   140003c7d:	add    BYTE PTR [rsi+0x0],ch
   140003c80:	add    BYTE PTR gs:[rsi+0x0],ch
   140003c84:	je     0x140003c86
   140003c86:	jae    0x140003c88
   140003c88:	pop    rsp
   140003c89:	add    BYTE PTR [rbx+0x0],bh
   140003c8c:	cmp    BYTE PTR [rax],al
   140003c8e:	cmp    DWORD PTR [rax],eax
   140003c90:	cmp    BYTE PTR [rax],al
   140003c92:	xor    al,BYTE PTR [rax]
   140003c94:	xor    BYTE PTR [rax],al
   140003c96:	xor    al,BYTE PTR [rax]
   140003c98:	xor    BYTE PTR [rax],al
   140003c9a:	xor    BYTE PTR [rax],al
   140003c9c:	sub    eax,0x43004500
   140003ca1:	add    BYTE PTR [rdx+0x0],al
   140003ca4:	add    BYTE PTR [rip+0x31003100],r13b        # 0x171006dab
   140003cab:	add    BYTE PTR [rbx+0x0],al
   140003cae:	rex.RX add BYTE PTR [rip+0x42003800],r13b        # 0x1820074b5
   140003cb5:	add    BYTE PTR [rax],bh
   140003cb7:	add    BYTE PTR [rip+0x30002d00],dh        # 0x1700069bd
   140003cbd:	add    BYTE PTR [rax],dh
   140003cbf:	add    BYTE PTR [rcx+0x0],al
   140003cc2:	add    BYTE PTR [r8],sil
   140003cc5:	add    BYTE PTR [rax],dh
   140003cc7:	add    BYTE PTR [rip+0x34004200],dh        # 0x174007ecd
   140003ccd:	add    BYTE PTR [rbx],dh
   140003ccf:	add    BYTE PTR [rax],bh
   140003cd1:	add    BYTE PTR [rbx],dh
   140003cd3:	add    BYTE PTR [rbp+0x0],bh
   140003cd6:	add    BYTE PTR [rax],al
   140003cd8:	rex.WR add BYTE PTR [rdi+0x0],r13b
   140003cdc:	movsxd eax,DWORD PTR [rax]
   140003cde:	(bad)  
   140003cdf:	add    BYTE PTR [rax+rax*1+0x65],ch
   140003ce3:	add    BYTE PTR [rax],al
   140003ce5:	add    BYTE PTR [rax],al
   140003ce7:	add    BYTE PTR [rbp+0x0],cl
   140003cea:	push   rbp
   140003ceb:	add    BYTE PTR [rcx+0x0],cl
   140003cee:	add    BYTE PTR [rax],al
   140003cf0:	and    eax,0x5c007300
   140003cf5:	add    BYTE PTR [rip+0x5c007300],ah        # 0x19c00affb
   140003cfb:	add    BYTE PTR [rip+0x2e007300],ah        # 0x16e00b001
   140003d01:	add    BYTE PTR [rbp+0x0],ch
   140003d04:	jne    0x140003d06
   140003d06:	imul   eax,DWORD PTR [rax],0x0
   140003d0c:	add    BYTE PTR [rax],al
   140003d0e:	add    BYTE PTR [rax],al
   140003d10:	and    eax,0x5c007300
   140003d15:	add    BYTE PTR [rip+0x2e007300],ah        # 0x16e00b01b
   140003d1b:	add    BYTE PTR [rbp+0x0],ch
   140003d1e:	jne    0x140003d20
   140003d20:	imul   eax,DWORD PTR [rax],0x0
   140003d26:	add    BYTE PTR [rax],al
   140003d28:	add    BYTE PTR cs:[rax+rax*1+0x25],bl
   140003d2d:	add    BYTE PTR [rbx+0x0],dh
   140003d30:	pop    rsp
   140003d31:	add    BYTE PTR [rip+0x2e007300],ah        # 0x16e00b037
   140003d37:	add    BYTE PTR [rbp+0x0],ch
   140003d3a:	jne    0x140003d3c
   140003d3c:	imul   eax,DWORD PTR [rax],0x2e0000
   140003d42:	pop    rsp
   140003d43:	add    BYTE PTR [rip+0x2e007300],ah        # 0x16e00b049
   140003d49:	add    BYTE PTR [rbp+0x0],ch
   140003d4c:	jne    0x140003d4e
   140003d4e:	imul   eax,DWORD PTR [rax],0x0
   140003d54:	lock push rbx
   140003d56:	movsxd esi,DWORD PTR [rax+0x0]
   140003d59:	add    BYTE PTR [rax],al
   140003d5b:	add    BYTE PTR [rax],al
   140003d5d:	add    BYTE PTR [rax],al
   140003d5f:	add    BYTE PTR [rbp+0x0],cl
   140003d62:	push   rbp
   140003d63:	add    BYTE PTR [rcx+0x0],cl
   140003d66:	pop    rsp
   140003d67:	add    BYTE PTR [rip+0x34003000],ah        # 0x174006d6d
   140003d6d:	add    BYTE PTR [rax+0x0],ch
   140003d70:	js     0x140003d72
   140003d72:	add    BYTE PTR [rax],al
   140003d74:	add    BYTE PTR [rax],al
   140003d76:	add    BYTE PTR [rax],al
   140003d78:	rex.WRB add BYTE PTR [r13+0x0],r10b
   140003d7c:	rex.WB add BYTE PTR [r8+rax*1+0x30],bl
   140003d81:	add    BYTE PTR [rax+rax*1],dh
   140003d84:	xor    BYTE PTR [rax],al
   140003d86:	cmp    DWORD PTR [rax],eax
	...
   140003d90:	and    eax,0x5c007300
   140003d95:	add    BYTE PTR [rip+0x7300],ah        # 0x14000b09b
   140003d9b:	add    BYTE PTR [rax],al
   140003d9d:	add    BYTE PTR [rax],al
   140003d9f:	add    BYTE PTR [rax+0x0],ch
   140003da2:	(bad)  
   140003da3:	add    BYTE PTR [rip+0x61004c00],ch        # 0x1a10089a9
   140003da9:	add    BYTE PTR [rax+rax*1+0x6e],dh
   140003dad:	add    BYTE PTR [rax],al
   140003daf:	add    BYTE PTR [rax+rax*1+0x7a],dh
   140003db3:	add    BYTE PTR [rbp+0x0],ch
   140003db6:	sub    eax,0x61004c00
   140003dbb:	add    BYTE PTR [rax+rax*1+0x6e],dh
	...
   140003dc7:	add    BYTE PTR [rcx+0x0],ch
   140003dca:	jne    0x140003dcc
   140003dcc:	sub    eax,0x61004c00
   140003dd1:	add    BYTE PTR [rax+rax*1+0x6e],dh
   140003dd5:	add    BYTE PTR [rax],al
   140003dd7:	add    BYTE PTR [rbp+0x0],ch
   140003dda:	outs   dx,BYTE PTR ds:[rsi]
   140003ddb:	add    BYTE PTR [rip+0x6f004d00],ch        # 0x1af008ae1
   140003de1:	add    BYTE PTR [rsi+0x0],ch
   140003de4:	add    BYTE PTR [eax],al
   140003de7:	add    BYTE PTR [rbp+0x0],dh
   140003dea:	jp     0x140003dec
   140003dec:	sub    eax,0x61004c00
   140003df1:	add    BYTE PTR [rax+rax*1+0x6e],dh
   140003df5:	add    BYTE PTR [rax],al
   140003df7:	add    BYTE PTR [rbx+0x0],dh
   140003dfa:	ins    DWORD PTR es:[rdi],dx
   140003dfb:	add    BYTE PTR [rdx+0x0],ch
   140003dfe:	add    BYTE PTR [rax],al
   140003e00:	add    BYTE PTR fs:[rbx+0x0],dh
   140003e04:	(bad)  
   140003e05:	add    BYTE PTR [rax],al
   140003e07:	add    BYTE PTR [rax+rax*1+0x67],dh
   140003e0b:	add    BYTE PTR [rip+0x79004300],ch        # 0x1b9008111
   140003e11:	add    BYTE PTR [rdx+0x0],dh
   140003e14:	ins    BYTE PTR es:[rdi],dx
   140003e15:	add    BYTE PTR [rax],al
   140003e17:	add    BYTE PTR [rbx+0x0],dh
   140003e1a:	jb     0x140003e1c
   140003e1c:	add    BYTE PTR [rax],al
   140003e1e:	add    BYTE PTR [rax],al
   140003e20:	outs   dx,BYTE PTR ds:[rsi]
   140003e21:	add    BYTE PTR [rdx+0x0],ah
   140003e24:	add    BYTE PTR [rax],al
   140003e26:	add    BYTE PTR [rax],al
   140003e28:	imul   eax,DWORD PTR [rax],0x2d0075
   140003e2e:	rex.XB add BYTE PTR [r9+0x0],spl
   140003e32:	outs   dx,BYTE PTR ds:[rsi]
   140003e33:	add    BYTE PTR [rbx+0x0],dh
   140003e36:	add    BYTE PTR [rax],al
   140003e38:	ins    DWORD PTR es:[rdi],dx
   140003e39:	add    BYTE PTR [rsi+0x0],ch
   140003e3c:	sub    eax,0x79004300
   140003e41:	add    BYTE PTR [rdx+0x0],dh
   140003e44:	ins    BYTE PTR es:[rdi],dx
   140003e45:	add    BYTE PTR [rax],al
   140003e47:	add    BYTE PTR [rbp+0x0],dh
   140003e4a:	jp     0x140003e4c
   140003e4c:	sub    eax,0x79004300
   140003e51:	add    BYTE PTR [rdx+0x0],dh
   140003e54:	ins    BYTE PTR es:[rdi],dx
   140003e55:	add    BYTE PTR [rax],al
   140003e57:	add    BYTE PTR [rbx+0x0],dh
   140003e5a:	ins    DWORD PTR es:[rdi],dx
   140003e5b:	add    BYTE PTR [rcx+0x0],ah
   140003e5e:	add    BYTE PTR [rax],al
   140003e60:	(bad)  
   140003e61:	add    BYTE PTR [rdx+0x0],bh
   140003e64:	sub    eax,0x61004c00
   140003e69:	add    BYTE PTR [rax+rax*1+0x6e],dh
   140003e6d:	add    BYTE PTR [rax],al
   140003e6f:	add    BYTE PTR [rdx+0x0],ah
   140003e72:	jae    0x140003e74
   140003e74:	add    BYTE PTR [rax],al
   140003e76:	add    BYTE PTR [rax],al
   140003e78:	outs   dx,BYTE PTR ds:[rsi]
   140003e79:	add    BYTE PTR [rsi+0x0],ch
   140003e7c:	add    BYTE PTR [rax],al
   140003e7e:	add    BYTE PTR [rax],al
   140003e80:	jp     0x140003e82
   140003e82:	push   0x0
   140003e87:	add    BYTE PTR [rbx+0x0],dh
   140003e8a:	ins    DWORD PTR es:[rdi],dx
   140003e8b:	add    BYTE PTR [rbx+0x0],dh
   140003e8e:	add    BYTE PTR [rax],al
   140003e90:	(bad)  
   140003e91:	add    BYTE PTR [rdx+0x0],bh
   140003e94:	sub    eax,0x79004300
   140003e99:	add    BYTE PTR [rdx+0x0],dh
   140003e9c:	ins    BYTE PTR es:[rdi],dx
   140003e9d:	add    BYTE PTR [rax],al
   140003e9f:	add    BYTE PTR [rbx+0x0],dh
   140003ea2:	ins    DWORD PTR es:[rdi],dx
   140003ea3:	add    BYTE PTR [rsi+0x0],ch
   140003ea6:	add    BYTE PTR [rax],al
   140003ea8:	jae    0x140003eaa
   140003eaa:	jb     0x140003eac
   140003eac:	sub    eax,0x61004c00
   140003eb1:	add    BYTE PTR [rax+rax*1+0x6e],dh
   140003eb5:	add    BYTE PTR [rax],al
   140003eb7:	add    BYTE PTR [rbx+0x0],dh
   140003eba:	jb     0x140003ebc
   140003ebc:	sub    eax,0x79004300
   140003ec1:	add    BYTE PTR [rdx+0x0],dh
   140003ec4:	ins    BYTE PTR es:[rdi],dx
   140003ec5:	add    BYTE PTR [rax],al
   140003ec7:	add    BYTE PTR [rdx+0x0],ah
   140003eca:	jae    0x140003ecc
   140003ecc:	sub    eax,0x61004c00
   140003ed1:	add    BYTE PTR [rax+rax*1+0x6e],dh
   140003ed5:	add    BYTE PTR [rax],al
   140003ed7:	add    BYTE PTR [rdx+0x0],ah
   140003eda:	jae    0x140003edc
   140003edc:	sub    eax,0x79004300
   140003ee1:	add    BYTE PTR [rdx+0x0],dh
   140003ee4:	ins    BYTE PTR es:[rdi],dx
   140003ee5:	add    BYTE PTR [rax],al
   140003ee7:	add    BYTE PTR [rbp+0x0],ah
   140003eea:	jae    0x140003eec
   140003eec:	sub    eax,0x53005500
   140003ef1:	add    BYTE PTR [rax],al
   140003ef3:	add    BYTE PTR [rax],al
   140003ef5:	add    BYTE PTR [rax],al
   140003ef7:	add    BYTE PTR [rbp+0x0],ah
   140003efa:	jae    0x140003efc
   140003efc:	sub    eax,0x52005000
   140003f01:	add    BYTE PTR [rax],al
   140003f03:	add    BYTE PTR [rax],al
   140003f05:	add    BYTE PTR [rax],al
   140003f07:	add    BYTE PTR [rbp+0x0],ah
   140003f0a:	jae    0x140003f0c
   140003f0c:	sub    eax,0x49004e00
   140003f11:	add    BYTE PTR [rax],al
   140003f13:	add    BYTE PTR [rax],al
   140003f15:	add    BYTE PTR [rax],al
   140003f17:	add    BYTE PTR [rbp+0x0],ah
   140003f1a:	jae    0x140003f1c
   140003f1c:	sub    eax,0x4e004800
   140003f21:	add    BYTE PTR [rax],al
   140003f23:	add    BYTE PTR [rax],al
   140003f25:	add    BYTE PTR [rax],al
   140003f27:	add    BYTE PTR [rbp+0x0],ah
   140003f2a:	outs   dx,BYTE PTR ds:[rsi]
   140003f2b:	add    BYTE PTR [rip+0x47005300],ch        # 0x187009231
   140003f31:	add    BYTE PTR [rax],al
   140003f33:	add    BYTE PTR [rax],al
   140003f35:	add    BYTE PTR [rax],al
   140003f37:	add    BYTE PTR [rbp+0x0],ah
   140003f3a:	jae    0x140003f3c
   140003f3c:	sub    eax,0x56005300
   140003f41:	add    BYTE PTR [rax],al
   140003f43:	add    BYTE PTR [rax],al
   140003f45:	add    BYTE PTR [rax],al
   140003f47:	add    BYTE PTR [rbp+0x0],ah
   140003f4a:	outs   dx,BYTE PTR ds:[rsi]
   140003f4b:	add    BYTE PTR [rip+0x59004d00],ch        # 0x199008c51
   140003f51:	add    BYTE PTR [rax],al
   140003f53:	add    BYTE PTR [rax],al
   140003f55:	add    BYTE PTR [rax],al
   140003f57:	add    BYTE PTR [rbp+0x0],ah
   140003f5a:	jae    0x140003f5c
   140003f5c:	sub    eax,0x4f004200
   140003f61:	add    BYTE PTR [rax],al
   140003f63:	add    BYTE PTR [rax],al
   140003f65:	add    BYTE PTR [rax],al
   140003f67:	add    BYTE PTR [rbp+0x0],ah
   140003f6a:	outs   dx,BYTE PTR ds:[rsi]
   140003f6b:	add    BYTE PTR [rip+0x4e004900],ch        # 0x18e008871
   140003f71:	add    BYTE PTR [rax],al
   140003f73:	add    BYTE PTR [rax],al
   140003f75:	add    BYTE PTR [rax],al
   140003f77:	add    BYTE PTR [rcx+0x0],ah
   140003f7a:	jb     0x140003f7c
   140003f7c:	sub    eax,0x41005100
   140003f81:	add    BYTE PTR [rax],al
   140003f83:	add    BYTE PTR [rax],al
   140003f85:	add    BYTE PTR [rax],al
   140003f87:	add    BYTE PTR [rbp+0x0],ah
   140003f8a:	jae    0x140003f8c
   140003f8c:	sub    eax,0x59005000
   140003f91:	add    BYTE PTR [rax],al
   140003f93:	add    BYTE PTR [rax],al
   140003f95:	add    BYTE PTR [rax],al
   140003f97:	add    BYTE PTR [rcx+0x0],ah
   140003f9a:	jb     0x140003f9c
   140003f9c:	sub    eax,0x48004200
   140003fa1:	add    BYTE PTR [rax],al
   140003fa3:	add    BYTE PTR [rax],al
   140003fa5:	add    BYTE PTR [rax],al
   140003fa7:	add    BYTE PTR [rbp+0x0],ah
   140003faa:	jae    0x140003fac
   140003fac:	sub    eax,0x59005500
   140003fb1:	add    BYTE PTR [rax],al
   140003fb3:	add    BYTE PTR [rax],al
   140003fb5:	add    BYTE PTR [rax],al
   140003fb7:	add    BYTE PTR [rcx+0x0],ah
   140003fba:	jb     0x140003fbc
   140003fbc:	sub    eax,0x45004100
   140003fc1:	add    BYTE PTR [rax],al
   140003fc3:	add    BYTE PTR [rax],al
   140003fc5:	add    BYTE PTR [rax],al
   140003fc7:	add    BYTE PTR [rbp+0x0],ah
   140003fca:	jae    0x140003fcc
   140003fcc:	sub    eax,0x4c004300
   140003fd1:	add    BYTE PTR [rax],al
   140003fd3:	add    BYTE PTR [rax],al
   140003fd5:	add    BYTE PTR [rax],al
   140003fd7:	add    BYTE PTR [rbp+0x0],ah
   140003fda:	outs   dx,BYTE PTR ds:[rsi]
   140003fdb:	add    BYTE PTR [rip+0x48005000],ch        # 0x188008fe1
   140003fe1:	add    BYTE PTR [rax],al
   140003fe3:	add    BYTE PTR [rax],al
   140003fe5:	add    BYTE PTR [rax],al
   140003fe7:	add    BYTE PTR [rcx+0x0],ah
   140003fea:	jb     0x140003fec
   140003fec:	sub    eax,0x57004b00
   140003ff1:	add    BYTE PTR [rax],al
   140003ff3:	add    BYTE PTR [rax],al
   140003ff5:	add    BYTE PTR [rax],al
   140003ff7:	add    BYTE PTR [rbx+0x0],dh
   140003ffa:	jb     0x140003ffc
   140003ffc:	sub    eax,0x79004300
   140004001:	add    BYTE PTR [rdx+0x0],dh
   140004004:	ins    BYTE PTR es:[rdi],dx
   140004005:	add    BYTE PTR [rip+0x45004d00],ch        # 0x185008d0b
   14000400b:	add    BYTE PTR [rax],al
   14000400d:	add    BYTE PTR [rax],al
   14000400f:	add    BYTE PTR [rbp+0x0],ah
   140004012:	jae    0x140004014
   140004014:	sub    eax,0x43004500
   140004019:	add    BYTE PTR [rax],al
   14000401b:	add    BYTE PTR [rax],al
   14000401d:	add    BYTE PTR [rax],al
   14000401f:	add    BYTE PTR [rbp+0x0],ah
   140004022:	outs   dx,BYTE PTR ds:[rsi]
   140004023:	add    BYTE PTR [rip+0x57005a00],ch        # 0x197009a29
   140004029:	add    BYTE PTR [rax],al
   14000402b:	add    BYTE PTR [rax],al
   14000402d:	add    BYTE PTR [rax],al
   14000402f:	add    BYTE PTR [rcx+0x0],ah
   140004032:	jb     0x140004034
   140004034:	sub    eax,0x42004c00
   140004039:	add    BYTE PTR [rax],al
   14000403b:	add    BYTE PTR [rax],al
   14000403d:	add    BYTE PTR [rax],al
   14000403f:	add    BYTE PTR [rbx+0x0],dh
   140004042:	jb     0x140004044
   140004044:	sub    eax,0x61004c00
   140004049:	add    BYTE PTR [rax+rax*1+0x6e],dh
   14000404d:	add    BYTE PTR [rip+0x45004d00],ch        # 0x185008d53
   140004053:	add    BYTE PTR [rax],al
   140004055:	add    BYTE PTR [rax],al
   140004057:	add    BYTE PTR [rbp+0x0],ah
   14000405a:	jae    0x14000405c
   14000405c:	sub    eax,0x52004100
   140004061:	add    BYTE PTR [rax],al
   140004063:	add    BYTE PTR [rax],al
   140004065:	add    BYTE PTR [rax],al
   140004067:	add    BYTE PTR [rbp+0x0],ah
   14000406a:	outs   dx,BYTE PTR ds:[rsi]
   14000406b:	add    BYTE PTR [rip+0x54005400],ch        # 0x194009471
   140004071:	add    BYTE PTR [rax],al
   140004073:	add    BYTE PTR [rax],al
   140004075:	add    BYTE PTR [rax],al
   140004077:	add    BYTE PTR [rcx+0x0],ah
   14000407a:	jb     0x14000407c
   14000407c:	sub    eax,0x4f004a00
   140004081:	add    BYTE PTR [rax],al
   140004083:	add    BYTE PTR [rax],al
   140004085:	add    BYTE PTR [rax],al
   140004087:	add    BYTE PTR [rbx+0x0],dh
   14000408a:	jb     0x14000408c
   14000408c:	sub    eax,0x79004300
   140004091:	add    BYTE PTR [rdx+0x0],dh
   140004094:	ins    BYTE PTR es:[rdi],dx
   140004095:	add    BYTE PTR [rip+0x53005200],ch        # 0x19300929b
   14000409b:	add    BYTE PTR [rax],al
   14000409d:	add    BYTE PTR [rax],al
   14000409f:	add    BYTE PTR [rbp+0x0],ah
   1400040a2:	jae    0x1400040a4
   1400040a4:	sub    eax,0x45005000
   1400040a9:	add    BYTE PTR [rax],al
   1400040ab:	add    BYTE PTR [rax],al
   1400040ad:	add    BYTE PTR [rax],al
   1400040af:	add    BYTE PTR [rbp+0x0],ah
   1400040b2:	outs   dx,BYTE PTR ds:[rsi]
   1400040b3:	add    BYTE PTR [rip+0x5a004200],ch        # 0x19a0082b9
   1400040b9:	add    BYTE PTR [rax],al
   1400040bb:	add    BYTE PTR [rax],al
   1400040bd:	add    BYTE PTR [rax],al
   1400040bf:	add    BYTE PTR [rcx+0x0],ah
   1400040c2:	jb     0x1400040c4
   1400040c4:	sub    eax,0x59005300
   1400040c9:	add    BYTE PTR [rax],al
   1400040cb:	add    BYTE PTR [rax],al
   1400040cd:	add    BYTE PTR [rax],al
   1400040cf:	add    BYTE PTR [rbx+0x0],dh
   1400040d2:	ins    DWORD PTR es:[rdi],dx
   1400040d3:	add    BYTE PTR [rsi+0x0],ch
   1400040d6:	sub    eax,0x49004600
   1400040db:	add    BYTE PTR [rax],al
   1400040dd:	add    BYTE PTR [rax],al
   1400040df:	add    BYTE PTR [rbx+0x0],dh
   1400040e2:	jb     0x1400040e4
   1400040e4:	sub    eax,0x61004c00
   1400040e9:	add    BYTE PTR [rax+rax*1+0x6e],dh
   1400040ed:	add    BYTE PTR [rip+0x53005200],ch        # 0x1930092f3
   1400040f3:	add    BYTE PTR [rax],al
   1400040f5:	add    BYTE PTR [rax],al
   1400040f7:	add    BYTE PTR [rbp+0x0],ah
   1400040fa:	jae    0x1400040fc
   1400040fc:	sub    eax,0x4f004300
   140004101:	add    BYTE PTR [rax],al
   140004103:	add    BYTE PTR [rax],al
   140004105:	add    BYTE PTR [rax],al
   140004107:	add    BYTE PTR [rbp+0x0],ah
   14000410a:	outs   dx,BYTE PTR ds:[rsi]
   14000410b:	add    BYTE PTR [rip+0x32003000],ch        # 0x172007111
   140004111:	add    BYTE PTR [rcx],bh
   140004113:	add    BYTE PTR [rax],al
   140004115:	add    BYTE PTR [rax],al
   140004117:	add    BYTE PTR [rcx+0x0],ah
   14000411a:	jb     0x14000411c
   14000411c:	sub    eax,0x45005900
   140004121:	add    BYTE PTR [rax],al
   140004123:	add    BYTE PTR [rax],al
   140004125:	add    BYTE PTR [rax],al
   140004127:	add    BYTE PTR [rbx+0x0],dh
   14000412a:	ins    DWORD PTR es:[rdi],dx
   14000412b:	add    BYTE PTR [rbx+0x0],dh
   14000412e:	sub    eax,0x49004600
   140004133:	add    BYTE PTR [rax],al
   140004135:	add    BYTE PTR [rax],al
   140004137:	add    BYTE PTR [rbp+0x0],ah
   14000413a:	jae    0x14000413c
   14000413c:	sub    eax,0x45005600
   140004141:	add    BYTE PTR [rax],al
   140004143:	add    BYTE PTR [rax],al
   140004145:	add    BYTE PTR [rax],al
   140004147:	add    BYTE PTR [rbp+0x0],ah
   14000414a:	outs   dx,BYTE PTR ds:[rsi]
   14000414b:	add    BYTE PTR [rip+0x4d004a00],ch        # 0x18d008b51
   140004151:	add    BYTE PTR [rax],al
   140004153:	add    BYTE PTR [rax],al
   140004155:	add    BYTE PTR [rax],al
   140004157:	add    BYTE PTR [rcx+0x0],ah
   14000415a:	jb     0x14000415c
   14000415c:	sub    eax,0x4d004f00
   140004161:	add    BYTE PTR [rax],al
   140004163:	add    BYTE PTR [rax],al
   140004165:	add    BYTE PTR [rax],al
   140004167:	add    BYTE PTR [rbx+0x0],dh
   14000416a:	ins    DWORD PTR es:[rdi],dx
   14000416b:	add    BYTE PTR [rcx+0x0],ah
   14000416e:	sub    eax,0x45005300
   140004173:	add    BYTE PTR [rax],al
   140004175:	add    BYTE PTR [rax],al
   140004177:	add    BYTE PTR [rbp+0x0],ah
   14000417a:	jae    0x14000417c
   14000417c:	sub    eax,0x4f004400
   140004181:	add    BYTE PTR [rax],al
   140004183:	add    BYTE PTR [rax],al
   140004185:	add    BYTE PTR [rax],al
   140004187:	add    BYTE PTR [rbp+0x0],ah
   14000418a:	outs   dx,BYTE PTR ds:[rsi]
   14000418b:	add    BYTE PTR [rip+0x41005a00],ch        # 0x181009b91
   140004191:	add    BYTE PTR [rax],al
   140004193:	add    BYTE PTR [rax],al
   140004195:	add    BYTE PTR [rax],al
   140004197:	add    BYTE PTR [rcx+0x0],ah
   14000419a:	jb     0x14000419c
   14000419c:	sub    eax,0x4e005400
   1400041a1:	add    BYTE PTR [rax],al
   1400041a3:	add    BYTE PTR [rax],al
   1400041a5:	add    BYTE PTR [rax],al
   1400041a7:	add    BYTE PTR [rbx+0x0],dh
   1400041aa:	ins    DWORD PTR es:[rdi],dx
   1400041ab:	add    BYTE PTR [rcx+0x0],ah
   1400041ae:	sub    eax,0x4f004e00
   1400041b3:	add    BYTE PTR [rax],al
   1400041b5:	add    BYTE PTR [rax],al
   1400041b7:	add    BYTE PTR [rsi+0x0],ah
   1400041ba:	jb     0x1400041bc
   1400041bc:	sub    eax,0x43004d00
   1400041c1:	add    BYTE PTR [rax],al
   1400041c3:	add    BYTE PTR [rax],al
   1400041c5:	add    BYTE PTR [rax],al
   1400041c7:	add    BYTE PTR [rbp+0x0],ah
   1400041ca:	jae    0x1400041cc
   1400041cc:	sub    eax,0x41005000
   1400041d1:	add    BYTE PTR [rax],al
   1400041d3:	add    BYTE PTR [rax],al
   1400041d5:	add    BYTE PTR [rax],al
   1400041d7:	add    BYTE PTR [rbp+0x0],ah
   1400041da:	outs   dx,BYTE PTR ds:[rsi]
   1400041db:	add    BYTE PTR [rip+0x45004900],ch        # 0x185008ae1
   1400041e1:	add    BYTE PTR [rax],al
   1400041e3:	add    BYTE PTR [rax],al
   1400041e5:	add    BYTE PTR [rax],al
   1400041e7:	add    BYTE PTR [rcx+0x0],ah
   1400041ea:	jb     0x1400041ec
   1400041ec:	sub    eax,0x41004d00
   1400041f1:	add    BYTE PTR [rax],al
   1400041f3:	add    BYTE PTR [rax],al
   1400041f5:	add    BYTE PTR [rax],al
   1400041f7:	add    BYTE PTR [rbx+0x0],dh
   1400041fa:	ins    DWORD PTR es:[rdi],dx
   1400041fb:	add    BYTE PTR [rdx+0x0],ch
   1400041fe:	sub    eax,0x45005300
   140004203:	add    BYTE PTR [rax],al
   140004205:	add    BYTE PTR [rax],al
   140004207:	add    BYTE PTR [rsi+0x0],ah
   14000420a:	jb     0x14000420c
   14000420c:	sub    eax,0x55004c00
   140004211:	add    BYTE PTR [rax],al
   140004213:	add    BYTE PTR [rax],al
   140004215:	add    BYTE PTR [rax],al
   140004217:	add    BYTE PTR [rbp+0x0],ah
   14000421a:	jae    0x14000421c
   14000421c:	sub    eax,0x52004300
   140004221:	add    BYTE PTR [rax],al
   140004223:	add    BYTE PTR [rax],al
   140004225:	add    BYTE PTR [rax],al
   140004227:	add    BYTE PTR [rbp+0x0],ah
   14000422a:	outs   dx,BYTE PTR ds:[rsi]
   14000422b:	add    BYTE PTR [rip+0x5a004e00],ch        # 0x19a009031
   140004231:	add    BYTE PTR [rax],al
   140004233:	add    BYTE PTR [rax],al
   140004235:	add    BYTE PTR [rax],al
   140004237:	add    BYTE PTR [rax+rax*1+0x65],ah
   14000423b:	add    BYTE PTR [rip+0x49004c00],ch        # 0x189008e41
   140004241:	add    BYTE PTR [rax],al
   140004243:	add    BYTE PTR [rax],al
   140004245:	add    BYTE PTR [rax],al
   140004247:	add    BYTE PTR [rdx+0x0],bh
   14000424a:	push   0x4d002d00
   14000424f:	add    BYTE PTR [rdi+0x0],cl
   140004252:	add    BYTE PTR [rax],al
   140004254:	add    BYTE PTR [rax],al
   140004256:	add    BYTE PTR [rax],al
   140004258:	(bad)  
   140004259:	add    BYTE PTR [rdx+0x0],dh
   14000425c:	sub    eax,0x5a004400
   140004261:	add    BYTE PTR [rax],al
   140004263:	add    BYTE PTR [rax],al
   140004265:	add    BYTE PTR [rax],al
   140004267:	add    BYTE PTR [rbx+0x0],dh
   14000426a:	ins    DWORD PTR es:[rdi],dx
   14000426b:	add    BYTE PTR [rdx+0x0],ch
   14000426e:	sub    eax,0x4f004e00
   140004273:	add    BYTE PTR [rax],al
   140004275:	add    BYTE PTR [rax],al
   140004277:	add    BYTE PTR [rax+0x0],ch
   14000427a:	jb     0x14000427c
   14000427c:	sub    eax,0x41004200
   140004281:	add    BYTE PTR [rax],al
   140004283:	add    BYTE PTR [rax],al
   140004285:	add    BYTE PTR [rax],al
   140004287:	add    BYTE PTR [rsi+0x0],ah
   14000428a:	jb     0x14000428c
   14000428c:	sub    eax,0x48004300
   140004291:	add    BYTE PTR [rax],al
   140004293:	add    BYTE PTR [rax],al
   140004295:	add    BYTE PTR [rax],al
   140004297:	add    BYTE PTR [rbp+0x0],ah
   14000429a:	jae    0x14000429c
   14000429c:	sub    eax,0x54004700
   1400042a1:	add    BYTE PTR [rax],al
   1400042a3:	add    BYTE PTR [rax],al
   1400042a5:	add    BYTE PTR [rax],al
   1400042a7:	add    BYTE PTR [rbp+0x0],ah
   1400042aa:	outs   dx,BYTE PTR ds:[rsi]
   1400042ab:	add    BYTE PTR [rip+0x41004300],ch        # 0x1810085b1
   1400042b1:	add    BYTE PTR [rax],al
   1400042b3:	add    BYTE PTR [rax],al
   1400042b5:	add    BYTE PTR [rax],al
   1400042b7:	add    BYTE PTR [rax+rax*1+0x65],ah
   1400042bb:	add    BYTE PTR [rip+0x55004c00],ch        # 0x195008ec1
   1400042c1:	add    BYTE PTR [rax],al
   1400042c3:	add    BYTE PTR [rax],al
   1400042c5:	add    BYTE PTR [rax],al
   1400042c7:	add    BYTE PTR [rdx+0x0],bh
   1400042ca:	push   0x53002d00
   1400042cf:	add    BYTE PTR [rdi+0x0],al
   1400042d2:	add    BYTE PTR [rax],al
   1400042d4:	add    BYTE PTR [rax],al
   1400042d6:	add    BYTE PTR [rax],al
   1400042d8:	(bad)  
   1400042d9:	add    BYTE PTR [rdx+0x0],dh
   1400042dc:	sub    eax,0x59004c00
   1400042e1:	add    BYTE PTR [rax],al
   1400042e3:	add    BYTE PTR [rax],al
   1400042e5:	add    BYTE PTR [rax],al
   1400042e7:	add    BYTE PTR [rcx+0x0],dh
   1400042ea:	jne    0x1400042ec
   1400042ec:	jp     0x1400042ee
   1400042ee:	sub    eax,0x45005000
   1400042f3:	add    BYTE PTR [rax],al
   1400042f5:	add    BYTE PTR [rax],al
   1400042f7:	add    BYTE PTR [rbx+0x0],dh
   1400042fa:	add    BYTE PTR gs:[rip+0x49004600],ch        # 0x189008901
   140004301:	add    BYTE PTR [rax],al
   140004303:	add    BYTE PTR [rax],al
   140004305:	add    BYTE PTR [rax],al
   140004307:	add    BYTE PTR [rsi+0x0],ah
   14000430a:	jb     0x14000430c
   14000430c:	sub    eax,0x41004300
   140004311:	add    BYTE PTR [rax],al
   140004313:	add    BYTE PTR [rax],al
   140004315:	add    BYTE PTR [rax],al
   140004317:	add    BYTE PTR [rbp+0x0],ah
   14000431a:	jae    0x14000431c
   14000431c:	sub    eax,0x53004500
   140004321:	add    BYTE PTR [rax],al
   140004323:	add    BYTE PTR [rax],al
   140004325:	add    BYTE PTR [rax],al
   140004327:	add    BYTE PTR [rbp+0x0],ah
   14000432a:	outs   dx,BYTE PTR ds:[rsi]
   14000432b:	add    BYTE PTR [rip+0x55004100],ch        # 0x195008431
   140004331:	add    BYTE PTR [rax],al
   140004333:	add    BYTE PTR [rax],al
   140004335:	add    BYTE PTR [rax],al
   140004337:	add    BYTE PTR [rax+rax*1+0x65],ah
   14000433b:	add    BYTE PTR [rip+0x54004100],ch        # 0x194008441
   140004341:	add    BYTE PTR [rax],al
   140004343:	add    BYTE PTR [rax],al
   140004345:	add    BYTE PTR [rax],al
   140004347:	add    BYTE PTR [rdx+0x0],bh
   14000434a:	push   0x48002d00
   14000434f:	add    BYTE PTR [rbx+0x0],cl
   140004352:	add    BYTE PTR [rax],al
   140004354:	add    BYTE PTR [rax],al
   140004356:	add    BYTE PTR [rax],al
   140004358:	(bad)  
   140004359:	add    BYTE PTR [rdx+0x0],dh
   14000435c:	sub    eax,0x47004500
   140004361:	add    BYTE PTR [rax],al
   140004363:	add    BYTE PTR [rax],al
   140004365:	add    BYTE PTR [rax],al
   140004367:	add    BYTE PTR [rcx+0x0],dh
   14000436a:	jo     0x14000436c
   14000436c:	jae    0x14000436e
   14000436e:	sub    eax,0x6c007000
   140004373:	add    BYTE PTR [rdi+0x0],ch
   140004376:	movsxd eax,DWORD PTR [rax]
   140004378:	ins    DWORD PTR es:[rdi],dx
   140004379:	add    BYTE PTR [rax],al
   14000437b:	add    BYTE PTR [rax],al
   14000437d:	add    BYTE PTR [rax],al
   14000437f:	add    BYTE PTR [rcx+0x0],dh
   140004382:	jne    0x140004384
   140004384:	jp     0x140004386
   140004386:	sub    eax,0x43004500
   14000438b:	add    BYTE PTR [rax],al
   14000438d:	add    BYTE PTR [rax],al
   14000438f:	add    BYTE PTR [rax+rax*1+0x7a],dh
   140004393:	add    BYTE PTR [rbp+0x0],ch
   140004396:	sub    eax,0x61004c00
   14000439b:	add    BYTE PTR [rax+rax*1+0x6e],dh
   14000439f:	add    BYTE PTR [rip+0x5a004400],ch        # 0x19a0087a5
   1400043a5:	add    BYTE PTR [rax],al
   1400043a7:	add    BYTE PTR [rbp+0x0],ch
   1400043aa:	outs   dx,BYTE PTR ds:[rsi]
   1400043ab:	add    BYTE PTR [rip+0x6f004d00],ch        # 0x1af0090b1
   1400043b1:	add    BYTE PTR [rsi+0x0],ch
   1400043b4:	add    BYTE PTR [eip+0x4e004300],ch        # 0x18e0086bb
   1400043bb:	add    BYTE PTR [rax],al
   1400043bd:	add    BYTE PTR [rax],al
   1400043bf:	add    BYTE PTR [rdx+0x0],ah
   1400043c2:	outs   dx,BYTE PTR ds:[rsi]
   1400043c3:	add    BYTE PTR [rip+0x44004200],ch        # 0x1840085c9
   1400043c9:	add    BYTE PTR [rax],al
   1400043cb:	add    BYTE PTR [rax],al
   1400043cd:	add    BYTE PTR [rax],al
   1400043cf:	add    BYTE PTR [rbp+0x0],dh
   1400043d2:	jp     0x1400043d4
   1400043d4:	sub    eax,0x79004300
   1400043d9:	add    BYTE PTR [rdx+0x0],dh
   1400043dc:	ins    BYTE PTR es:[rdi],dx
   1400043dd:	add    BYTE PTR [rip+0x5a005500],ch        # 0x19a0098e3
   1400043e3:	add    BYTE PTR [rax],al
   1400043e5:	add    BYTE PTR [rax],al
   1400043e7:	add    BYTE PTR [rbp+0x0],ch
   1400043ea:	jae    0x1400043ec
   1400043ec:	sub    eax,0x4e004200
   1400043f1:	add    BYTE PTR [rax],al
   1400043f3:	add    BYTE PTR [rax],al
   1400043f5:	add    BYTE PTR [rax],al
   1400043f7:	add    BYTE PTR [rdi+0x0],ah
   1400043fa:	(bad)  
   1400043fb:	add    BYTE PTR [rip+0x45004900],ch        # 0x185008d01
   140004401:	add    BYTE PTR [rax],al
   140004403:	add    BYTE PTR [rax],al
   140004405:	add    BYTE PTR [rax],al
   140004407:	add    BYTE PTR [rbx+0x0],dh
   14000440a:	add    BYTE PTR gs:[rip+0x45005300],ch        # 0x185009711
   140004411:	add    BYTE PTR [rax],al
   140004413:	add    BYTE PTR [rax],al
   140004415:	add    BYTE PTR [rax],al
   140004417:	add    BYTE PTR [rax+rax*1+0x73],ah
   14000441b:	add    BYTE PTR [rdx+0x0],ah
   14000441e:	sub    eax,0x45004400
   140004423:	add    BYTE PTR [rax],al
   140004425:	add    BYTE PTR [rax],al
   140004427:	add    BYTE PTR [rcx+0x0],ah
   14000442a:	jp     0x14000442c
   14000442c:	sub    eax,0x79004300
   140004431:	add    BYTE PTR [rdx+0x0],dh
   140004434:	ins    BYTE PTR es:[rdi],dx
   140004435:	add    BYTE PTR [rip+0x5a004100],ch        # 0x19a00853b
   14000443b:	add    BYTE PTR [rax],al
   14000443d:	add    BYTE PTR [rax],al
   14000443f:	add    BYTE PTR [rbx+0x0],dh
   140004442:	jbe    0x140004444
   140004444:	sub    eax,0x49004600
   140004449:	add    BYTE PTR [rax],al
   14000444b:	add    BYTE PTR [rax],al
   14000444d:	add    BYTE PTR [rax],al
   14000444f:	add    BYTE PTR [rax+0x0],dh
   140004452:	je     0x140004454
   140004454:	sub    eax,0x54005000
   140004459:	add    BYTE PTR [rax],al
   14000445b:	add    BYTE PTR [rax],al
   14000445d:	add    BYTE PTR [rax],al
   14000445f:	add    BYTE PTR [rsi+0x0],ch
   140004462:	outs   dx,BYTE PTR ds:[rsi]
   140004463:	add    BYTE PTR [rip+0x4f004e00],ch        # 0x18f009269
   140004469:	add    BYTE PTR [rax],al
   14000446b:	add    BYTE PTR [rax],al
   14000446d:	add    BYTE PTR [rax],al
   14000446f:	add    BYTE PTR [rsi+0x0],ch
   140004472:	ins    BYTE PTR es:[rdi],dx
   140004473:	add    BYTE PTR [rip+0x45004200],ch        # 0x185008679
   140004479:	add    BYTE PTR [rax],al
   14000447b:	add    BYTE PTR [rax],al
   14000447d:	add    BYTE PTR [rax],al
   14000447f:	add    BYTE PTR [rcx+0x0],ch
   140004482:	je     0x140004484
   140004484:	sub    eax,0x48004300
   140004489:	add    BYTE PTR [rax],al
   14000448b:	add    BYTE PTR [rax],al
   14000448d:	add    BYTE PTR [rax],al
   14000448f:	add    BYTE PTR [rsi+0x0],ah
   140004492:	jb     0x140004494
   140004494:	sub    eax,0x45004200
   140004499:	add    BYTE PTR [rax],al
   14000449b:	add    BYTE PTR [rax],al
   14000449d:	add    BYTE PTR [rax],al
   14000449f:	add    BYTE PTR [rbp+0x0],ah
   1400044a2:	jae    0x1400044a4
   1400044a4:	sub    eax,0x58004d00
   1400044a9:	add    BYTE PTR [rax],al
   1400044ab:	add    BYTE PTR [rax],al
   1400044ad:	add    BYTE PTR [rax],al
   1400044af:	add    BYTE PTR [rbp+0x0],ah
   1400044b2:	outs   dx,BYTE PTR ds:[rsi]
   1400044b3:	add    BYTE PTR [rip+0x42004700],ch        # 0x182008bb9
   1400044b9:	add    BYTE PTR [rax],al
   1400044bb:	add    BYTE PTR [rax],al
   1400044bd:	add    BYTE PTR [rax],al
   1400044bf:	add    BYTE PTR [rax+rax*1+0x65],ah
   1400044c3:	add    BYTE PTR [rip+0x48004300],ch        # 0x1880087c9
   1400044c9:	add    BYTE PTR [rax],al
   1400044cb:	add    BYTE PTR [rax],al
   1400044cd:	add    BYTE PTR [rax],al
   1400044cf:	add    BYTE PTR [rdx+0x0],bh
   1400044d2:	push   0x43002d00
   1400044d7:	add    BYTE PTR [rsi+0x0],cl
   1400044da:	add    BYTE PTR [rax],al
   1400044dc:	add    BYTE PTR [rax],al
   1400044de:	add    BYTE PTR [rax],al
   1400044e0:	(bad)  
   1400044e1:	add    BYTE PTR [rdx+0x0],dh
   1400044e4:	sub    eax,0x51004900
   1400044e9:	add    BYTE PTR [rax],al
   1400044eb:	add    BYTE PTR [rax],al
   1400044ed:	add    BYTE PTR [rax],al
   1400044ef:	add    BYTE PTR [rcx+0x0],dh
   1400044f2:	jo     0x1400044f4
   1400044f4:	jae    0x1400044f6
   1400044f6:	sub    eax,0x6c007000
   1400044fb:	add    BYTE PTR [rdi+0x0],ch
   1400044fe:	movsxd eax,DWORD PTR [rax]
   140004500:	(bad)  
   140004501:	add    BYTE PTR [rax],al
   140004503:	add    BYTE PTR [rax],al
   140004505:	add    BYTE PTR [rax],al
   140004507:	add    BYTE PTR [rcx+0x0],dh
   14000450a:	jo     0x14000450c
   14000450c:	jae    0x14000450e
   14000450e:	sub    eax,0x6c007000
   140004513:	add    BYTE PTR [rdi+0x0],ch
   140004516:	movsxd eax,DWORD PTR [rax]
	...
   140004520:	add    BYTE PTR [eax+eax*1+0x2d],ah
   140004525:	add    BYTE PTR [rdi+0x0],al
   140004528:	rex.X add BYTE PTR [rax],al
   14000452b:	add    BYTE PTR [rax],al
   14000452d:	add    BYTE PTR [rax],al
   14000452f:	add    BYTE PTR [rax+0x0],dh
   140004532:	jb     0x140004534
   140004534:	jae    0x140004536
   140004536:	sub    eax,0x46004100
   14000453b:	add    BYTE PTR [rax],al
   14000453d:	add    BYTE PTR [rax],al
   14000453f:	add    BYTE PTR [rdi+0x0],dh
   140004542:	outs   dx,DWORD PTR ds:[rsi]
   140004543:	add    BYTE PTR [rip+0x4e005300],ch        # 0x18e009849
   140004549:	add    BYTE PTR [rax],al
   14000454b:	add    BYTE PTR [rax],al
   14000454d:	add    BYTE PTR [rax],al
   14000454f:	add    BYTE PTR [rdx+0x0],dh
   140004552:	ja     0x140004554
   140004554:	sub    eax,0x57005200
   140004559:	add    BYTE PTR [rax],al
   14000455b:	add    BYTE PTR [rax],al
   14000455d:	add    BYTE PTR [rax],al
   14000455f:	add    BYTE PTR [rcx+0x0],dh
   140004562:	jne    0x140004564
   140004564:	je     0x140004566
   140004566:	sub    eax,0x54004700
   14000456b:	add    BYTE PTR [rax],al
   14000456d:	add    BYTE PTR [rax],al
   14000456f:	add    BYTE PTR [rbx+0x0],dh
   140004572:	(bad)  
   140004573:	add    BYTE PTR [rax+0x0],ch
   140004576:	sub    eax,0x55005200
   14000457b:	add    BYTE PTR [rax],al
   14000457d:	add    BYTE PTR [rax],al
   14000457f:	add    BYTE PTR [rdi+0x0],ah
   140004582:	jae    0x140004584
   140004584:	ja     0x140004586
   140004586:	sub    eax,0x52004600
   14000458b:	add    BYTE PTR [rax],al
   14000458d:	add    BYTE PTR [rax],al
   14000458f:	add    BYTE PTR [rbx+0x0],ah
   140004592:	outs   dx,DWORD PTR ds:[rsi]
   140004593:	add    BYTE PTR [rip+0x52004600],ch        # 0x192008b99
   140004599:	add    BYTE PTR [rax],al
   14000459b:	add    BYTE PTR [rax],al
   14000459d:	add    BYTE PTR [rax],al
   14000459f:	add    BYTE PTR [rdi+0x0],ch
   1400045a2:	movsxd eax,DWORD PTR [rax]
   1400045a4:	sub    eax,0x52004600
   1400045a9:	add    BYTE PTR [rax],al
   1400045ab:	add    BYTE PTR [rax],al
   1400045ad:	add    BYTE PTR [rax],al
   1400045af:	add    BYTE PTR [rbp+0x0],ch
   1400045b2:	imul   eax,DWORD PTR [rax],0x4e002d
   1400045b8:	pop    rdx
   1400045b9:	add    BYTE PTR [rax],al
   1400045bb:	add    BYTE PTR [rax],al
   1400045bd:	add    BYTE PTR [rax],al
   1400045bf:	add    BYTE PTR [rbp+0x0],dh
   1400045c2:	add    BYTE PTR [eip+0x4e004300],ch        # 0x18e0088c9
   1400045c9:	add    BYTE PTR [rax],al
   1400045cb:	add    BYTE PTR [rax],al
   1400045cd:	add    BYTE PTR [rax],al
   1400045cf:	add    BYTE PTR [rdx+0x0],ah
   1400045d2:	jb     0x1400045d4
   1400045d4:	sub    eax,0x52004600
   1400045d9:	add    BYTE PTR [rax],al
   1400045db:	add    BYTE PTR [rax],al
   1400045dd:	add    BYTE PTR [rax],al
   1400045df:	add    BYTE PTR [rbp+0x0],ch
   1400045e2:	outs   dx,DWORD PTR ds:[rsi]
   1400045e3:	add    BYTE PTR [rax+0x0],ch
   1400045e6:	sub    eax,0x41004300
   1400045eb:	add    BYTE PTR [rax],al
   1400045ed:	add    BYTE PTR [rax],al
   1400045ef:	add    BYTE PTR [rcx+0x0],ah
   1400045f2:	jb     0x1400045f4
   1400045f4:	outs   dx,BYTE PTR ds:[rsi]
   1400045f5:	add    BYTE PTR [rip+0x4c004300],ch        # 0x18c0088fb
   1400045fb:	add    BYTE PTR [rax],al
   1400045fd:	add    BYTE PTR [rax],al
   1400045ff:	add    BYTE PTR [rcx+0x0],ch
   140004602:	imul   eax,DWORD PTR [rax],0x43002d
   140004608:	rex.WRX add BYTE PTR [rax],r8b
   14000460b:	add    BYTE PTR [rax],al
   14000460d:	add    BYTE PTR [rax],al
   14000460f:	add    BYTE PTR [rcx+0x0],ch
   140004612:	add    BYTE PTR [eip+0x47004e00],ch        # 0x187009419
   140004619:	add    BYTE PTR [rax],al
   14000461b:	add    BYTE PTR [rax],al
   14000461d:	add    BYTE PTR [rax],al
   14000461f:	add    BYTE PTR [rbx+0x0],ch
   140004622:	ins    BYTE PTR es:[rdi],dx
   140004623:	add    BYTE PTR [rip+0x4c004700],ch        # 0x18c008d29
   140004629:	add    BYTE PTR [rax],al
   14000462b:	add    BYTE PTR [rax],al
   14000462d:	add    BYTE PTR [rax],al
   14000462f:	add    BYTE PTR [rax+rax*1+0x62],ch
   140004633:	add    BYTE PTR [rip+0x55004c00],ch        # 0x195009239
   140004639:	add    BYTE PTR [rax],al
   14000463b:	add    BYTE PTR [rax],al
   14000463d:	add    BYTE PTR [rax],al
   14000463f:	add    BYTE PTR [rdx+0x0],ah
   140004642:	(bad)  
   140004643:	add    BYTE PTR [rip+0x55005200],ch        # 0x195009849
   140004649:	add    BYTE PTR [rax],al
   14000464b:	add    BYTE PTR [rax],al
   14000464d:	add    BYTE PTR [rax],al
   14000464f:	add    BYTE PTR [rsi+0x0],ch
   140004652:	jae    0x140004654
   140004654:	outs   dx,DWORD PTR ds:[rsi]
   140004655:	add    BYTE PTR [rip+0x41005a00],ch        # 0x18100a05b
   14000465b:	add    BYTE PTR [rax],al
   14000465d:	add    BYTE PTR [rax],al
   14000465f:	add    BYTE PTR [rcx+0x0],dh
   140004662:	jne    0x140004664
   140004664:	jp     0x140004666
   140004666:	sub    eax,0x4f004200
   14000466b:	add    BYTE PTR [rax],al
   14000466d:	add    BYTE PTR [rax],al
   14000466f:	add    BYTE PTR [rcx+0x0],bh
   140004672:	outs   dx,DWORD PTR ds:[rsi]
   140004673:	add    BYTE PTR [rip+0x47004e00],ch        # 0x187009479
   140004679:	add    BYTE PTR [rax],al
   14000467b:	add    BYTE PTR [rax],al
   14000467d:	add    BYTE PTR [rax],al
   14000467f:	add    BYTE PTR [rax+0x0],ch
   140004682:	(bad)  
   140004683:	add    BYTE PTR [rip+0x61004c00],ch        # 0x1a1009289
   140004689:	add    BYTE PTR [rax+rax*1+0x6e],dh
   14000468d:	add    BYTE PTR [rip+0x47004e00],ch        # 0x187009493
   140004693:	add    BYTE PTR [rax],al
   140004695:	add    BYTE PTR [rax],al
   140004697:	add    BYTE PTR [rax+rax*1+0x76],ah
   14000469b:	add    BYTE PTR [rip+0x56004d00],ch        # 0x1960093a1
   1400046a1:	add    BYTE PTR [rax],al
   1400046a3:	add    BYTE PTR [rax],al
   1400046a5:	add    BYTE PTR [rax],al
   1400046a7:	add    BYTE PTR [rsi+0x0],ah
   1400046aa:	imul   eax,DWORD PTR [rax],0x2d006c
   1400046b0:	push   rax
   1400046b1:	add    BYTE PTR [rax+0x0],cl
   1400046b4:	add    BYTE PTR [rax],al
   1400046b6:	add    BYTE PTR [rax],al
   1400046b8:	jo     0x1400046ba
   1400046ba:	jae    0x1400046bc
   1400046bc:	sub    eax,0x46004100
   1400046c1:	add    BYTE PTR [rax],al
   1400046c3:	add    BYTE PTR [rax],al
   1400046c5:	add    BYTE PTR [rax],al
   1400046c7:	add    BYTE PTR [rsi+0x0],ah
   1400046ca:	jns    0x1400046cc
   1400046cc:	sub    eax,0x4c004e00
   1400046d1:	add    BYTE PTR [rax],al
   1400046d3:	add    BYTE PTR [rax],al
   1400046d5:	add    BYTE PTR [rax],al
   1400046d7:	add    BYTE PTR [rsi+0x0],ch
   1400046da:	add    BYTE PTR gs:[rip+0x50004e00],ch        # 0x1900094e1
   1400046e1:	add    BYTE PTR [rax],al
   1400046e3:	add    BYTE PTR [rax],al
   1400046e5:	add    BYTE PTR [rax],al
   1400046e7:	add    BYTE PTR [rcx+0x0],ah
   1400046ea:	ins    DWORD PTR es:[rdi],dx
   1400046eb:	add    BYTE PTR [rip+0x54004500],ch        # 0x194008bf1
   1400046f1:	add    BYTE PTR [rax],al
   1400046f3:	add    BYTE PTR [rax],al
   1400046f5:	add    BYTE PTR [rax],al
   1400046f7:	add    BYTE PTR [rcx+0x0],ch
   1400046fa:	jne    0x1400046fc
   1400046fc:	sub    eax,0x61004300
   140004701:	add    BYTE PTR [rsi+0x0],ch
   140004704:	jae    0x140004706
   140004706:	sub    eax,0x41004300
   14000470b:	add    BYTE PTR [rax],al
   14000470d:	add    BYTE PTR [rax],al
   14000470f:	add    BYTE PTR [rbx+0x0],dh
   140004712:	imul   eax,DWORD PTR [rax],0x4c002d
   140004718:	rex.WXB add BYTE PTR [r8],al
   14000471b:	add    BYTE PTR [rax],al
   14000471d:	add    BYTE PTR [rax],al
   14000471f:	add    BYTE PTR [rbx+0x0],dh
   140004722:	jns    0x140004724
   140004724:	jb     0x140004726
   140004726:	sub    eax,0x59005300
   14000472b:	add    BYTE PTR [rax],al
   14000472d:	add    BYTE PTR [rax],al
   14000472f:	add    BYTE PTR [rbx+0x0],ch
   140004732:	outs   dx,DWORD PTR ds:[rsi]
   140004733:	add    BYTE PTR [rbx+0x0],ch
   140004736:	sub    eax,0x4e004900
   14000473b:	add    BYTE PTR [rax],al
   14000473d:	add    BYTE PTR [rax],al
   14000473f:	add    BYTE PTR [rdi+0x0],ah
   140004742:	ins    BYTE PTR es:[rdi],dx
   140004743:	add    BYTE PTR [rip+0x53004500],ch        # 0x193008c49
   140004749:	add    BYTE PTR [rax],al
   14000474b:	add    BYTE PTR [rax],al
   14000474d:	add    BYTE PTR [rax],al
   14000474f:	add    BYTE PTR [rax+rax*1+0x6f],ch
   140004753:	add    BYTE PTR [rip+0x41004c00],ch        # 0x181009359
   140004759:	add    BYTE PTR [rax],al
   14000475b:	add    BYTE PTR [rax],al
   14000475d:	add    BYTE PTR [rax],al
   14000475f:	add    BYTE PTR [rbx+0x0],ch
   140004762:	ins    DWORD PTR es:[rdi],dx
   140004763:	add    BYTE PTR [rip+0x48004b00],ch        # 0x188009269
   140004769:	add    BYTE PTR [rax],al
   14000476b:	add    BYTE PTR [rax],al
   14000476d:	add    BYTE PTR [rax],al
   14000476f:	add    BYTE PTR [rbx+0x0],ah
   140004772:	jns    0x140004774
   140004774:	sub    eax,0x42004700
   140004779:	add    BYTE PTR [rax],al
   14000477b:	add    BYTE PTR [rax],al
   14000477d:	add    BYTE PTR [rax],al
   14000477f:	add    BYTE PTR [rdx+0x0],ah
   140004782:	outs   dx,DWORD PTR ds:[rsi]
   140004783:	add    BYTE PTR [rip+0x4e004300],ch        # 0x18e008a89
   140004789:	add    BYTE PTR [rax],al
   14000478b:	add    BYTE PTR [rax],al
   14000478d:	add    BYTE PTR [rax],al
   14000478f:	add    BYTE PTR [rbp+0x0],ch
   140004792:	outs   dx,BYTE PTR ds:[rsi]
   140004793:	add    BYTE PTR [rip+0x4e004d00],ch        # 0x18e009499
   140004799:	add    BYTE PTR [rax],al
   14000479b:	add    BYTE PTR [rax],al
   14000479d:	add    BYTE PTR [rax],al
   14000479f:	add    BYTE PTR [rbx+0x0],dh
   1400047a2:	(bad)  
   1400047a3:	add    BYTE PTR [rip+0x4e004900],ch        # 0x18e0090a9
   1400047a9:	add    BYTE PTR [rax],al
   1400047ab:	add    BYTE PTR [rax],al
   1400047ad:	add    BYTE PTR [rax],al
   1400047af:	add    BYTE PTR [rbp+0x0],ch
   1400047b2:	jb     0x1400047b4
   1400047b4:	sub    eax,0x4e004900
   1400047b9:	add    BYTE PTR [rax],al
   1400047bb:	add    BYTE PTR [rax],al
   1400047bd:	add    BYTE PTR [rax],al
   1400047bf:	add    BYTE PTR [rcx+0x0],ah
   1400047c2:	jae    0x1400047c4
   1400047c4:	sub    eax,0x4e004900
   1400047c9:	add    BYTE PTR [rax],al
   1400047cb:	add    BYTE PTR [rax],al
   1400047cd:	add    BYTE PTR [rax],al
   1400047cf:	add    BYTE PTR [rbp+0x0],ch
   1400047d2:	ins    BYTE PTR es:[rdi],dx
   1400047d3:	add    BYTE PTR [rip+0x4e004900],ch        # 0x18e0090d9
   1400047d9:	add    BYTE PTR [rax],al
   1400047db:	add    BYTE PTR [rax],al
   1400047dd:	add    BYTE PTR [rax],al
   1400047df:	add    BYTE PTR [rbx+0x0],ch
   1400047e2:	outs   dx,BYTE PTR ds:[rsi]
   1400047e3:	add    BYTE PTR [rip+0x4e004900],ch        # 0x18e0090e9
   1400047e9:	add    BYTE PTR [rax],al
   1400047eb:	add    BYTE PTR [rax],al
   1400047ed:	add    BYTE PTR [rax],al
   1400047ef:	add    BYTE PTR [rax+rax*1+0x65],dh
   1400047f3:	add    BYTE PTR [rip+0x4e004900],ch        # 0x18e0090f9
   1400047f9:	add    BYTE PTR [rax],al
   1400047fb:	add    BYTE PTR [rax],al
   1400047fd:	add    BYTE PTR [rax],al
   1400047ff:	add    BYTE PTR [rax+rax*1+0x61],dh
   140004803:	add    BYTE PTR [rip+0x4e004900],ch        # 0x18e009109
   140004809:	add    BYTE PTR [rax],al
   14000480b:	add    BYTE PTR [rax],al
   14000480d:	add    BYTE PTR [rax],al
   14000480f:	add    BYTE PTR [rdi+0x0],ch
   140004812:	jb     0x140004814
   140004814:	sub    eax,0x4e004900
   140004819:	add    BYTE PTR [rax],al
   14000481b:	add    BYTE PTR [rax],al
   14000481d:	add    BYTE PTR [rax],al
   14000481f:	add    BYTE PTR [rdi+0x0],ah
   140004822:	jne    0x140004824
   140004824:	sub    eax,0x4e004900
   140004829:	add    BYTE PTR [rax],al
   14000482b:	add    BYTE PTR [rax],al
   14000482d:	add    BYTE PTR [rax],al
   14000482f:	add    BYTE PTR [rax+0x0],dh
   140004832:	(bad)  
   140004833:	add    BYTE PTR [rip+0x4e004900],ch        # 0x18e009139
   140004839:	add    BYTE PTR [rax],al
   14000483b:	add    BYTE PTR [rax],al
   14000483d:	add    BYTE PTR [rax],al
   14000483f:	add    BYTE PTR [rdx+0x0],ah
   140004842:	outs   dx,BYTE PTR ds:[rsi]
   140004843:	add    BYTE PTR [rip+0x4e004900],ch        # 0x18e009149
   140004849:	add    BYTE PTR [rax],al
   14000484b:	add    BYTE PTR [rax],al
   14000484d:	add    BYTE PTR [rax],al
   14000484f:	add    BYTE PTR [rax+rax*1+0x74],dh
   140004853:	add    BYTE PTR [rip+0x55005200],ch        # 0x195009a59
   140004859:	add    BYTE PTR [rax],al
   14000485b:	add    BYTE PTR [rax],al
   14000485d:	add    BYTE PTR [rax],al
   14000485f:	add    BYTE PTR [rbp+0x0],dh
   140004862:	jp     0x140004864
   140004864:	sub    eax,0x61004c00
   140004869:	add    BYTE PTR [rax+rax*1+0x6e],dh
   14000486d:	add    BYTE PTR [rip+0x5a005500],ch        # 0x19a009d73
   140004873:	add    BYTE PTR [rax],al
   140004875:	add    BYTE PTR [rax],al
   140004877:	add    BYTE PTR [rax+rax*1+0x6b],dh
   14000487b:	add    BYTE PTR [rip+0x4d005400],ch        # 0x18d009c81
   140004881:	add    BYTE PTR [rax],al
   140004883:	add    BYTE PTR [rax],al
   140004885:	add    BYTE PTR [rax],al
   140004887:	add    BYTE PTR [rbx+0x0],dh
   14000488a:	ja     0x14000488c
   14000488c:	sub    eax,0x45004b00
   140004891:	add    BYTE PTR [rax],al
   140004893:	add    BYTE PTR [rax],al
   140004895:	add    BYTE PTR [rax],al
   140004897:	add    BYTE PTR [rbx+0x0],ch
   14000489a:	jns    0x14000489c
   14000489c:	sub    eax,0x47004b00
   1400048a1:	add    BYTE PTR [rax],al
   1400048a3:	add    BYTE PTR [rax],al
   1400048a5:	add    BYTE PTR [rax],al
   1400048a7:	add    BYTE PTR [rbx+0x0],ch
   1400048aa:	imul   eax,DWORD PTR [rax],0x2d
   1400048ad:	add    BYTE PTR [rbx+0x0],cl
   1400048b0:	pop    rdx
   1400048b1:	add    BYTE PTR [rax],al
   1400048b3:	add    BYTE PTR [rax],al
   1400048b5:	add    BYTE PTR [rax],al
   1400048b7:	add    BYTE PTR [rbp+0x0],ch
   1400048ba:	jae    0x1400048bc
   1400048bc:	sub    eax,0x59004d00
   1400048c1:	add    BYTE PTR [rax],al
   1400048c3:	add    BYTE PTR [rax],al
   1400048c5:	add    BYTE PTR [rax],al
   1400048c7:	add    BYTE PTR [rbx+0x0],dh
   1400048ca:	add    BYTE PTR gs:[rip+0x4f004e00],ch        # 0x18f0096d1
   1400048d1:	add    BYTE PTR [rax],al
   1400048d3:	add    BYTE PTR [rax],al
   1400048d5:	add    BYTE PTR [rax],al
   1400048d7:	add    BYTE PTR [rbp+0x0],ch
   1400048da:	je     0x1400048dc
   1400048dc:	sub    eax,0x54004d00
   1400048e1:	add    BYTE PTR [rax],al
   1400048e3:	add    BYTE PTR [rax],al
   1400048e5:	add    BYTE PTR [rax],al
   1400048e7:	add    BYTE PTR [rax+0x0],ch
   1400048ea:	imul   eax,DWORD PTR [rax],0x49002d
   1400048f0:	rex.WRX add BYTE PTR [rax],r8b
   1400048f3:	add    BYTE PTR [rax],al
   1400048f5:	add    BYTE PTR [rax],al
   1400048f7:	add    BYTE PTR [rsi+0x0],ah
   1400048fa:	outs   dx,DWORD PTR ds:[rsi]
   1400048fb:	add    BYTE PTR [rip+0x4f004600],ch        # 0x18f008f01
   140004901:	add    BYTE PTR [rax],al
   140004903:	add    BYTE PTR [rax],al
   140004905:	add    BYTE PTR [rax],al
   140004907:	add    BYTE PTR [rbx+0x0],ch
   14000490a:	(bad)  
   14000490b:	add    BYTE PTR [rip+0x45004700],ch        # 0x185009011
   140004911:	add    BYTE PTR [rax],al
   140004913:	add    BYTE PTR [rax],al
   140004915:	add    BYTE PTR [rax],al
   140004917:	add    BYTE PTR [rcx+0x0],ah
   14000491a:	data16 add BYTE PTR [rip+0x41005a00],ch        # 0x18100a321
   140004921:	add    BYTE PTR [rax],al
   140004923:	add    BYTE PTR [rax],al
   140004925:	add    BYTE PTR [rax],al
   140004927:	add    BYTE PTR [rdx+0x0],bh
   14000492a:	jne    0x14000492c
   14000492c:	sub    eax,0x41005a00
   140004931:	add    BYTE PTR [rax],al
   140004933:	add    BYTE PTR [rax],al
   140004935:	add    BYTE PTR [rax],al
   140004937:	add    BYTE PTR [rax+0x0],bh
   14000493a:	push   0x5a002d00
   14000493f:	add    BYTE PTR [rcx+0x0],al
   140004942:	add    BYTE PTR [rax],al
   140004944:	add    BYTE PTR [rax],al
   140004946:	add    BYTE PTR [rax],al
   140004948:	je     0x14000494a
   14000494a:	outs   dx,BYTE PTR ds:[rsi]
   14000494b:	add    BYTE PTR [rip+0x41005a00],ch        # 0x18100a351
   140004951:	add    BYTE PTR [rax],al
   140004953:	add    BYTE PTR [rax],al
   140004955:	add    BYTE PTR [rax],al
   140004957:	add    BYTE PTR [rbp+0x0],ch
   14000495a:	imul   eax,DWORD PTR [rax],0x2d
   14000495d:	add    BYTE PTR [rbp+0x0],cl
   140004960:	rex.WXB add BYTE PTR [r8],al
   140004963:	add    BYTE PTR [rax],al
   140004965:	add    BYTE PTR [rax],al
   140004967:	add    BYTE PTR [rax+0x0],ch
   14000496a:	jae    0x14000496c
   14000496c:	(bad)  
   14000496d:	add    BYTE PTR [rip+0x45004400],ch        # 0x185008d73
   140004973:	add    BYTE PTR [rax],al
   140004975:	add    BYTE PTR [rax],al
   140004977:	add    BYTE PTR [rbp+0x0],ah
   14000497a:	jne    0x14000497c
   14000497c:	sub    eax,0x53004500
   140004981:	add    BYTE PTR [rax],al
   140004983:	add    BYTE PTR [rax],al
   140004985:	add    BYTE PTR [rax],al
   140004987:	add    BYTE PTR [rcx+0x0],ah
   14000498a:	jp     0x14000498c
   14000498c:	sub    eax,0x61004c00
   140004991:	add    BYTE PTR [rax+rax*1+0x6e],dh
   140004995:	add    BYTE PTR [rip+0x5a004100],ch        # 0x19a008a9b
   14000499b:	add    BYTE PTR [rax],al
   14000499d:	add    BYTE PTR [rax],al
   14000499f:	add    BYTE PTR [rax+0x0],ch
   1400049a2:	jns    0x1400049a4
   1400049a4:	sub    eax,0x4d004100
   1400049a9:	add    BYTE PTR [rax],al
   1400049ab:	add    BYTE PTR [rax],al
   1400049ad:	add    BYTE PTR [rax],al
   1400049af:	add    BYTE PTR [rsi+0x0],dh
   1400049b2:	imul   eax,DWORD PTR [rax],0x56002d
   1400049b8:	rex.WRX add BYTE PTR [rax],r8b
   1400049bb:	add    BYTE PTR [rax],al
   1400049bd:	add    BYTE PTR [rax],al
   1400049bf:	add    BYTE PTR [rsi+0x0],ah
   1400049c2:	(bad)  
   1400049c3:	add    BYTE PTR [rip+0x52004900],ch        # 0x1920092c9
   1400049c9:	add    BYTE PTR [rax],al
   1400049cb:	add    BYTE PTR [rax],al
   1400049cd:	add    BYTE PTR [rax],al
   1400049cf:	add    BYTE PTR [rax+rax*1+0x67],dh
   1400049d3:	add    BYTE PTR [rip+0x79004300],ch        # 0x1b9008cd9
   1400049d9:	add    BYTE PTR [rdx+0x0],dh
   1400049dc:	ins    BYTE PTR es:[rdi],dx
   1400049dd:	add    BYTE PTR [rip+0x4a005400],ch        # 0x18a009de3
   1400049e3:	add    BYTE PTR [rax],al
   1400049e5:	add    BYTE PTR [rax],al
   1400049e7:	add    BYTE PTR [rax+rax*1+0x74],ch
   1400049eb:	add    BYTE PTR [rip+0x54004c00],ch        # 0x1940095f1
   1400049f1:	add    BYTE PTR [rax],al
   1400049f3:	add    BYTE PTR [rax],al
   1400049f5:	add    BYTE PTR [rax],al
   1400049f7:	add    BYTE PTR [rax+rax*1+0x76],ch
   1400049fb:	add    BYTE PTR [rip+0x56004c00],ch        # 0x196009601
   140004a01:	add    BYTE PTR [rax],al
   140004a03:	add    BYTE PTR [rax],al
   140004a05:	add    BYTE PTR [rax],al
   140004a07:	add    BYTE PTR [rbp+0x0],ah
   140004a0a:	je     0x140004a0c
   140004a0c:	sub    eax,0x45004500
   140004a11:	add    BYTE PTR [rax],al
   140004a13:	add    BYTE PTR [rax],al
   140004a15:	add    BYTE PTR [rax],al
   140004a17:	add    BYTE PTR [rbx+0x0],dh
   140004a1a:	ins    BYTE PTR es:[rdi],dx
   140004a1b:	add    BYTE PTR [rip+0x49005300],ch        # 0x189009d21
   140004a21:	add    BYTE PTR [rax],al
   140004a23:	add    BYTE PTR [rax],al
   140004a25:	add    BYTE PTR [rax],al
   140004a27:	add    BYTE PTR [rdx+0x0],ah
   140004a2a:	add    BYTE PTR gs:[rip+0x59004200],ch        # 0x199008c31
   140004a31:	add    BYTE PTR [rax],al
   140004a33:	add    BYTE PTR [rax],al
   140004a35:	add    BYTE PTR [rax],al
   140004a37:	add    BYTE PTR [rbp+0x0],dh
   140004a3a:	imul   eax,DWORD PTR [rax],0x2d
   140004a3d:	add    BYTE PTR [rbp+0x0],dl
   140004a40:	add    BYTE PTR [r8],al
   140004a43:	add    BYTE PTR [rax],al
   140004a45:	add    BYTE PTR [rax],al
   140004a47:	add    BYTE PTR [rcx+0x0],ch
   140004a4a:	add    BYTE PTR fs:[rip+0x44004900],ch        # 0x184009351
   140004a51:	add    BYTE PTR [rax],al
   140004a53:	add    BYTE PTR [rax],al
   140004a55:	add    BYTE PTR [rax],al
   140004a57:	add    BYTE PTR [rbp+0x0],dh
   140004a5a:	jb     0x140004a5c
   140004a5c:	sub    eax,0x4b005000
   140004a61:	add    BYTE PTR [rax],al
   140004a63:	add    BYTE PTR [rax],al
   140004a65:	add    BYTE PTR [rax],al
   140004a67:	add    BYTE PTR [rax+rax*1+0x72],dh
   140004a6b:	add    BYTE PTR [rip+0x52005400],ch        # 0x192009e71
   140004a71:	add    BYTE PTR [rax],al
   140004a73:	add    BYTE PTR [rax],al
   140004a75:	add    BYTE PTR [rax],al
   140004a77:	add    BYTE PTR [rax+rax*1+0x68],dh
   140004a7b:	add    BYTE PTR [rip+0x48005400],ch        # 0x188009e81
   140004a81:	add    BYTE PTR [rax],al
   140004a83:	add    BYTE PTR [rax],al
   140004a85:	add    BYTE PTR [rax],al
   140004a87:	add    BYTE PTR [rbx+0x0],dh
   140004a8a:	jbe    0x140004a8c
   140004a8c:	sub    eax,0x45005300
   140004a91:	add    BYTE PTR [rax],al
   140004a93:	add    BYTE PTR [rax],al
   140004a95:	add    BYTE PTR [rax],al
   140004a97:	add    BYTE PTR [rbx+0x0],dh
   140004a9a:	jno    0x140004a9c
   140004a9c:	sub    eax,0x4c004100
   140004aa1:	add    BYTE PTR [rax],al
   140004aa3:	add    BYTE PTR [rax],al
   140004aa5:	add    BYTE PTR [rax],al
   140004aa7:	add    BYTE PTR [rbx+0x0],dh
   140004aaa:	imul   eax,DWORD PTR [rax],0x2d
   140004aad:	add    BYTE PTR [rbx+0x0],dl
   140004ab0:	rex.WXB add BYTE PTR [r8],al
   140004ab3:	add    BYTE PTR [rax],al
   140004ab5:	add    BYTE PTR [rax],al
   140004ab7:	add    BYTE PTR [rax+0x0],ch
   140004aba:	jb     0x140004abc
   140004abc:	sub    eax,0x52004800
   140004ac1:	add    BYTE PTR [rax],al
   140004ac3:	add    BYTE PTR [rax],al
   140004ac5:	add    BYTE PTR [rax],al
   140004ac7:	add    BYTE PTR [rdx+0x0],dh
   140004aca:	jne    0x140004acc
   140004acc:	sub    eax,0x55005200
   140004ad1:	add    BYTE PTR [rax],al
   140004ad3:	add    BYTE PTR [rax],al
   140004ad5:	add    BYTE PTR [rax],al
   140004ad7:	add    BYTE PTR [rdx+0x0],dh
   140004ada:	outs   dx,DWORD PTR ds:[rsi]
   140004adb:	add    BYTE PTR [rip+0x4f005200],ch        # 0x18f009ce1
   140004ae1:	add    BYTE PTR [rax],al
   140004ae3:	add    BYTE PTR [rax],al
   140004ae5:	add    BYTE PTR [rax],al
   140004ae7:	add    BYTE PTR [rdx+0x0],dh
   140004aea:	ins    DWORD PTR es:[rdi],dx
   140004aeb:	add    BYTE PTR [rip+0x48004300],ch        # 0x188008df1
   140004af1:	add    BYTE PTR [rax],al
   140004af3:	add    BYTE PTR [rax],al
   140004af5:	add    BYTE PTR [rax],al
   140004af7:	add    BYTE PTR [rax+0x0],dh
   140004afa:	je     0x140004afc
   140004afc:	sub    eax,0x52004200
   140004b01:	add    BYTE PTR [rax],al
   140004b03:	add    BYTE PTR [rax],al
   140004b05:	add    BYTE PTR [rax],al
   140004b07:	add    BYTE PTR [rax+0x0],dh
   140004b0a:	ins    BYTE PTR es:[rdi],dx
   140004b0b:	add    BYTE PTR [rip+0x4c005000],ch        # 0x18c009b11
   140004b11:	add    BYTE PTR [rax],al
   140004b13:	add    BYTE PTR [rax],al
   140004b15:	add    BYTE PTR [rax],al
   140004b17:	add    BYTE PTR [rsi+0x0],ch
   140004b1a:	(bad)  
   140004b1b:	add    BYTE PTR [rip+0x4f004e00],ch        # 0x18f009921
   140004b21:	add    BYTE PTR [rax],al
   140004b23:	add    BYTE PTR [rax],al
   140004b25:	add    BYTE PTR [rax],al
   140004b27:	add    BYTE PTR [rsi+0x0],ch
   140004b2a:	ins    BYTE PTR es:[rdi],dx
   140004b2b:	add    BYTE PTR [rip+0x4c004e00],ch        # 0x18c009931
   140004b31:	add    BYTE PTR [rax],al
   140004b33:	add    BYTE PTR [rax],al
   140004b35:	add    BYTE PTR [rax],al
   140004b37:	add    BYTE PTR [rbx+0x0],ch
   140004b3a:	outs   dx,DWORD PTR ds:[rsi]
   140004b3b:	add    BYTE PTR [rip+0x52004b00],ch        # 0x192009641
   140004b41:	add    BYTE PTR [rax],al
   140004b43:	add    BYTE PTR [rax],al
   140004b45:	add    BYTE PTR [rax],al
   140004b47:	add    BYTE PTR [rdx+0x0],ch
   140004b4a:	(bad)  
   140004b4b:	add    BYTE PTR [rip+0x50004a00],ch        # 0x190009551
   140004b51:	add    BYTE PTR [rax],al
   140004b53:	add    BYTE PTR [rax],al
   140004b55:	add    BYTE PTR [rax],al
   140004b57:	add    BYTE PTR [rcx+0x0],ch
   140004b5a:	je     0x140004b5c
   140004b5c:	sub    eax,0x54004900
   140004b61:	add    BYTE PTR [rax],al
   140004b63:	add    BYTE PTR [rax],al
   140004b65:	add    BYTE PTR [rax],al
   140004b67:	add    BYTE PTR [rcx+0x0],ch
   140004b6a:	jae    0x140004b6c
   140004b6c:	sub    eax,0x53004900
   140004b71:	add    BYTE PTR [rax],al
   140004b73:	add    BYTE PTR [rax],al
   140004b75:	add    BYTE PTR [rax],al
   140004b77:	add    BYTE PTR [rax+0x0],ch
   140004b7a:	jne    0x140004b7c
   140004b7c:	sub    eax,0x55004800
   140004b81:	add    BYTE PTR [rax],al
   140004b83:	add    BYTE PTR [rax],al
   140004b85:	add    BYTE PTR [rax],al
   140004b87:	add    BYTE PTR [rax+0x0],ch
   140004b8a:	add    BYTE PTR gs:[rip+0x4c004900],ch        # 0x18c009491
   140004b91:	add    BYTE PTR [rax],al
   140004b93:	add    BYTE PTR [rax],al
   140004b95:	add    BYTE PTR [rax],al
   140004b97:	add    BYTE PTR [rsi+0x0],ah
   140004b9a:	jb     0x140004b9c
   140004b9c:	sub    eax,0x52004600
   140004ba1:	add    BYTE PTR [rax],al
   140004ba3:	add    BYTE PTR [rax],al
   140004ba5:	add    BYTE PTR [rax],al
   140004ba7:	add    BYTE PTR [rsi+0x0],ah
   140004baa:	imul   eax,DWORD PTR [rax],0x46002d
   140004bb0:	rex.WB add BYTE PTR [r8],al
   140004bb3:	add    BYTE PTR [rax],al
   140004bb5:	add    BYTE PTR [rax],al
   140004bb7:	add    BYTE PTR [rbp+0x0],ah
   140004bba:	jae    0x140004bbc
   140004bbc:	sub    eax,0x53004500
   140004bc1:	add    BYTE PTR [rdi+0x0],bl
   140004bc4:	je     0x140004bc6
   140004bc6:	jb     0x140004bc8
   140004bc8:	(bad)  
   140004bc9:	add    BYTE PTR [rax+rax*1+0x6e],ah
   140004bcd:	add    BYTE PTR [rax+rax*1+0x0],ch
   140004bd1:	add    BYTE PTR [rax],al
   140004bd3:	add    BYTE PTR [rax],al
   140004bd5:	add    BYTE PTR [rax],al
   140004bd7:	add    BYTE PTR [rbp+0x0],ah
   140004bda:	outs   dx,BYTE PTR ds:[rsi]
   140004bdb:	add    BYTE PTR [rip+0x53005500],ch        # 0x19300a0e1
   140004be1:	add    BYTE PTR [rax],al
   140004be3:	add    BYTE PTR [rax],al
   140004be5:	add    BYTE PTR [rax],al
   140004be7:	add    BYTE PTR [rbp+0x0],ah
   140004bea:	ins    BYTE PTR es:[rdi],dx
   140004beb:	add    BYTE PTR [rip+0x52004700],ch        # 0x1920092f1
   140004bf1:	add    BYTE PTR [rax],al
   140004bf3:	add    BYTE PTR [rax],al
   140004bf5:	add    BYTE PTR [rax],al
   140004bf7:	add    BYTE PTR [rax+rax*1+0x65],ah
   140004bfb:	add    BYTE PTR [rip+0x45004400],ch        # 0x185009001
   140004c01:	add    BYTE PTR [rax],al
   140004c03:	add    BYTE PTR [rax],al
   140004c05:	add    BYTE PTR [rax],al
   140004c07:	add    BYTE PTR [rax+rax*1+0x61],ah
   140004c0b:	add    BYTE PTR [rip+0x4b004400],ch        # 0x18b009011
   140004c11:	add    BYTE PTR [rax],al
   140004c13:	add    BYTE PTR [rax],al
   140004c15:	add    BYTE PTR [rax],al
   140004c17:	add    BYTE PTR [rbx+0x0],ah
   140004c1a:	jae    0x140004c1c
   140004c1c:	sub    eax,0x5a004300
   140004c21:	add    BYTE PTR [rax],al
   140004c23:	add    BYTE PTR [rax],al
   140004c25:	add    BYTE PTR [rax],al
   140004c27:	add    BYTE PTR [rdx+0x0],bh
   140004c2a:	push   0x54002d00
   140004c2f:	add    BYTE PTR [rdi+0x0],dl
   140004c32:	add    BYTE PTR [rax],al
   140004c34:	add    BYTE PTR [rax],al
   140004c36:	add    BYTE PTR [rax],al
   140004c38:	movsxd eax,DWORD PTR [rax]
   140004c3a:	(bad)  
   140004c3b:	add    BYTE PTR [rip+0x53004500],ch        # 0x193009141
   140004c41:	add    BYTE PTR [rax],al
   140004c43:	add    BYTE PTR [rax],al
   140004c45:	add    BYTE PTR [rax],al
   140004c47:	add    BYTE PTR [rdx+0x0],ah
   140004c4a:	add    BYTE PTR [eip+0x47004200],ch        # 0x187008e51
   140004c51:	add    BYTE PTR [rax],al
   140004c53:	add    BYTE PTR [rax],al
   140004c55:	add    BYTE PTR [rax],al
   140004c57:	add    BYTE PTR [rcx+0x0],ah
   140004c5a:	jb     0x140004c5c
   140004c5c:	sub    eax,0x41005300
   140004c61:	add    BYTE PTR [rax],al
   140004c63:	add    BYTE PTR [rdi+0x0],ah
   140004c66:	add    BYTE PTR fs:[rax],al
   140004c69:	add    BYTE PTR [rax],al
   140004c6b:	add    BYTE PTR [rax],al
   140004c6d:	add    BYTE PTR [rax],al
   140004c6f:	add    BYTE PTR [rax+0x0],dh
   140004c72:	jb     0x140004c74
   140004c74:	jae    0x140004c76
   140004c76:	add    BYTE PTR [rax],al
   140004c78:	ja     0x140004c7a
   140004c7a:	outs   dx,DWORD PTR ds:[rsi]
   140004c7b:	add    BYTE PTR [rax],al
   140004c7d:	add    BYTE PTR [rax],al
   140004c7f:	add    BYTE PTR [rdx+0x0],dh
   140004c82:	ja     0x140004c84
   140004c84:	add    BYTE PTR [rax],al
   140004c86:	add    BYTE PTR [rax],al
   140004c88:	jno    0x140004c8a
   140004c8a:	jne    0x140004c8c
   140004c8c:	je     0x140004c8e
   140004c8e:	add    BYTE PTR [rax],al
   140004c90:	jae    0x140004c92
   140004c92:	(bad)  
   140004c93:	add    BYTE PTR [rax+0x0],ch
   140004c96:	add    BYTE PTR [rax],al
   140004c98:	add    BYTE PTR [ebx+0x0],dh
   140004c9c:	ja     0x140004c9e
   140004c9e:	add    BYTE PTR [rax],al
   140004ca0:	movsxd eax,DWORD PTR [rax]
   140004ca2:	outs   dx,DWORD PTR ds:[rsi]
   140004ca3:	add    BYTE PTR [rax],al
   140004ca5:	add    BYTE PTR [rax],al
   140004ca7:	add    BYTE PTR [rdi+0x0],ch
   140004caa:	movsxd eax,DWORD PTR [rax]
   140004cac:	add    BYTE PTR [rax],al
   140004cae:	add    BYTE PTR [rax],al
   140004cb0:	ins    DWORD PTR es:[rdi],dx
   140004cb1:	add    BYTE PTR [rcx+0x0],ch
   140004cb4:	add    BYTE PTR [rax],al
   140004cb6:	add    BYTE PTR [rax],al
   140004cb8:	jne    0x140004cba
   140004cba:	add    BYTE PTR [eax],al
   140004cbd:	add    BYTE PTR [rax],al
   140004cbf:	add    BYTE PTR [rdx+0x0],ah
   140004cc2:	jb     0x140004cc4
   140004cc4:	add    BYTE PTR [rax],al
   140004cc6:	add    BYTE PTR [rax],al
   140004cc8:	ins    DWORD PTR es:[rdi],dx
   140004cc9:	add    BYTE PTR [rdi+0x0],ch
   140004ccc:	push   0x61000000
   140004cd1:	add    BYTE PTR [rdx+0x0],dh
   140004cd4:	outs   dx,BYTE PTR ds:[rsi]
   140004cd5:	add    BYTE PTR [rax],al
   140004cd7:	add    BYTE PTR [rcx+0x0],ch
   140004cda:	imul   eax,DWORD PTR [rax],0x0
   140004ce0:	imul   eax,DWORD PTR [rax],0x67
   140004ce6:	add    BYTE PTR [rax],al
   140004ce8:	imul   eax,DWORD PTR [rax],0x6c
   140004ceb:	add    BYTE PTR [rax],al
   140004ced:	add    BYTE PTR [rax],al
   140004cef:	add    BYTE PTR [rax+rax*1+0x62],ch
   140004cf3:	add    BYTE PTR [rax],al
   140004cf5:	add    BYTE PTR [rax],al
   140004cf7:	add    BYTE PTR [rdx+0x0],ah
   140004cfa:	(bad)  
   140004cfb:	add    BYTE PTR [rax],al
   140004cfd:	add    BYTE PTR [rax],al
   140004cff:	add    BYTE PTR [rsi+0x0],ch
   140004d02:	jae    0x140004d04
   140004d04:	outs   dx,DWORD PTR ds:[rsi]
   140004d05:	add    BYTE PTR [rax],al
   140004d07:	add    BYTE PTR [rcx+0x0],dh
   140004d0a:	jne    0x140004d0c
   140004d0c:	jp     0x140004d0e
   140004d0e:	add    BYTE PTR [rax],al
   140004d10:	jns    0x140004d12
   140004d12:	outs   dx,DWORD PTR ds:[rsi]
   140004d13:	add    BYTE PTR [rax],al
   140004d15:	add    BYTE PTR [rax],al
   140004d17:	add    BYTE PTR [rax+0x0],ch
   140004d1a:	(bad)  
   140004d1b:	add    BYTE PTR [rax],al
   140004d1d:	add    BYTE PTR [rax],al
   140004d1f:	add    BYTE PTR [rax+rax*1+0x76],ah
   140004d23:	add    BYTE PTR [rax],al
   140004d25:	add    BYTE PTR [rax],al
   140004d27:	add    BYTE PTR [rsi+0x0],ah
   140004d2a:	imul   eax,DWORD PTR [rax],0x6c
   140004d30:	jo     0x140004d32
   140004d32:	jae    0x140004d34
   140004d34:	add    BYTE PTR [rax],al
   140004d36:	add    BYTE PTR [rax],al
   140004d38:	data16 add BYTE PTR [rcx+0x0],bh
   140004d3c:	add    BYTE PTR [rax],al
   140004d3e:	add    BYTE PTR [rax],al
   140004d40:	outs   dx,BYTE PTR ds:[rsi]
   140004d41:	add    BYTE PTR [rbp+0x0],ah
   140004d44:	add    BYTE PTR [rax],al
   140004d46:	add    BYTE PTR [rax],al
   140004d48:	je     0x140004d4a
   140004d4a:	jp     0x140004d4c
   140004d4c:	ins    DWORD PTR es:[rdi],dx
   140004d4d:	add    BYTE PTR [rax],al
   140004d4f:	add    BYTE PTR [rcx+0x0],ah
   140004d52:	ins    DWORD PTR es:[rdi],dx
   140004d53:	add    BYTE PTR [rax],al
   140004d55:	add    BYTE PTR [rax],al
   140004d57:	add    BYTE PTR [rcx+0x0],ch
   140004d5a:	jne    0x140004d5c
   140004d5c:	add    BYTE PTR [rax],al
   140004d5e:	add    BYTE PTR [rax],al
   140004d60:	jae    0x140004d62
   140004d62:	imul   eax,DWORD PTR [rax],0x0
   140004d68:	jae    0x140004d6a
   140004d6a:	jns    0x140004d6c
   140004d6c:	jb     0x140004d6e
   140004d6e:	add    BYTE PTR [rax],al
   140004d70:	imul   eax,DWORD PTR [rax],0x6f
   140004d73:	add    BYTE PTR [rbx+0x0],ch
   140004d76:	add    BYTE PTR [rax],al
   140004d78:	add    BYTE PTR [eax+eax*1+0x0],ch
   140004d7d:	add    BYTE PTR [rax],al
   140004d7f:	add    BYTE PTR [rax+rax*1+0x6f],ch
   140004d83:	add    BYTE PTR [rax],al
   140004d85:	add    BYTE PTR [rax],al
   140004d87:	add    BYTE PTR [rbx+0x0],ch
   140004d8a:	ins    DWORD PTR es:[rdi],dx
   140004d8b:	add    BYTE PTR [rax],al
   140004d8d:	add    BYTE PTR [rax],al
   140004d8f:	add    BYTE PTR [rbx+0x0],ah
   140004d92:	jns    0x140004d94
   140004d94:	add    BYTE PTR [rax],al
   140004d96:	add    BYTE PTR [rax],al
   140004d98:	(bad)  
   140004d99:	add    BYTE PTR [rdi+0x0],ch
   140004d9c:	add    BYTE PTR [rax],al
   140004d9e:	add    BYTE PTR [rax],al
   140004da0:	ins    DWORD PTR es:[rdi],dx
   140004da1:	add    BYTE PTR [rsi+0x0],ch
   140004da4:	add    BYTE PTR [rax],al
   140004da6:	add    BYTE PTR [rax],al
   140004da8:	jae    0x140004daa
   140004daa:	(bad)  
   140004dab:	add    BYTE PTR [rax],al
   140004dad:	add    BYTE PTR [rax],al
   140004daf:	add    BYTE PTR [rbp+0x0],ch
   140004db2:	jb     0x140004db4
   140004db4:	add    BYTE PTR [rax],al
   140004db6:	add    BYTE PTR [rax],al
   140004db8:	(bad)  
   140004db9:	add    BYTE PTR [rbx+0x0],dh
   140004dbc:	add    BYTE PTR [rax],al
   140004dbe:	add    BYTE PTR [rax],al
   140004dc0:	ins    DWORD PTR es:[rdi],dx
   140004dc1:	add    BYTE PTR [rax+rax*1+0x0],ch
   140004dc5:	add    BYTE PTR [rax],al
   140004dc7:	add    BYTE PTR [rbx+0x0],ch
   140004dca:	outs   dx,BYTE PTR ds:[rsi]
   140004dcb:	add    BYTE PTR [rax],al
   140004dcd:	add    BYTE PTR [rax],al
   140004dcf:	add    BYTE PTR [rax+rax*1+0x65],dh
   140004dd3:	add    BYTE PTR [rax],al
   140004dd5:	add    BYTE PTR [rax],al
   140004dd7:	add    BYTE PTR [rax+rax*1+0x61],dh
   140004ddb:	add    BYTE PTR [rax],al
   140004ddd:	add    BYTE PTR [rax],al
   140004ddf:	add    BYTE PTR [rdi+0x0],ch
   140004de2:	jb     0x140004de4
   140004de4:	add    BYTE PTR [rax],al
   140004de6:	add    BYTE PTR [rax],al
   140004de8:	add    BYTE PTR [ebp+0x0],dh
   140004dec:	add    BYTE PTR [rax],al
   140004dee:	add    BYTE PTR [rax],al
   140004df0:	jo     0x140004df2
   140004df2:	(bad)  
   140004df3:	add    BYTE PTR [rax],al
   140004df5:	add    BYTE PTR [rax],al
   140004df7:	add    BYTE PTR [rdx+0x0],ah
   140004dfa:	outs   dx,BYTE PTR ds:[rsi]
   140004dfb:	add    BYTE PTR [rax],al
   140004dfd:	add    BYTE PTR [rax],al
   140004dff:	add    BYTE PTR [rax+rax*1+0x74],dh
   140004e03:	add    BYTE PTR [rax],al
   140004e05:	add    BYTE PTR [rax],al
   140004e07:	add    BYTE PTR [rbp+0x0],dh
   140004e0a:	jp     0x140004e0c
   140004e0c:	add    BYTE PTR [rax],al
   140004e0e:	add    BYTE PTR [rax],al
   140004e10:	je     0x140004e12
   140004e12:	imul   eax,DWORD PTR [rax],0x0
   140004e15:	add    BYTE PTR [rax],al
   140004e17:	add    BYTE PTR [rbx+0x0],dh
   140004e1a:	ja     0x140004e1c
   140004e1c:	add    BYTE PTR [rax],al
   140004e1e:	add    BYTE PTR [rax],al
   140004e20:	imul   eax,DWORD PTR [rax],0x79
   140004e23:	add    BYTE PTR [rax],al
   140004e25:	add    BYTE PTR [rax],al
   140004e27:	add    BYTE PTR [rbx+0x0],ch
   140004e2a:	imul   eax,DWORD PTR [rax],0x0
   140004e2d:	add    BYTE PTR [rax],al
   140004e2f:	add    BYTE PTR [rbp+0x0],ch
   140004e32:	jae    0x140004e34
   140004e34:	add    BYTE PTR [rax],al
   140004e36:	add    BYTE PTR [rax],al
   140004e38:	add    BYTE PTR [ecx+0x0],ah
   140004e3c:	add    BYTE PTR [rax],al
   140004e3e:	add    BYTE PTR [rax],al
   140004e40:	jae    0x140004e42
   140004e42:	add    BYTE PTR gs:[rax],al
   140004e45:	add    BYTE PTR [rax],al
   140004e47:	add    BYTE PTR [rbp+0x0],ch
   140004e4a:	je     0x140004e4c
   140004e4c:	add    BYTE PTR [rax],al
   140004e4e:	add    BYTE PTR [rax],al
   140004e50:	push   0x6900
   140004e55:	add    BYTE PTR [rax],al
   140004e57:	add    BYTE PTR [rsi+0x0],ah
   140004e5a:	outs   dx,DWORD PTR ds:[rsi]
   140004e5b:	add    BYTE PTR [rax],al
   140004e5d:	add    BYTE PTR [rax],al
   140004e5f:	add    BYTE PTR [rbx+0x0],ch
   140004e62:	(bad)  
   140004e63:	add    BYTE PTR [rax],al
   140004e65:	add    BYTE PTR [rax],al
   140004e67:	add    BYTE PTR [rcx+0x0],ah
   140004e6a:	data16 add BYTE PTR [rax],al
   140004e6d:	add    BYTE PTR [rax],al
   140004e6f:	add    BYTE PTR [rdx+0x0],bh
   140004e72:	jne    0x140004e74
   140004e74:	add    BYTE PTR [rax],al
   140004e76:	add    BYTE PTR [rax],al
   140004e78:	js     0x140004e7a
   140004e7a:	push   0x0
   140004e7f:	add    BYTE PTR [rax+rax*1+0x6e],dh
   140004e83:	add    BYTE PTR [rax],al
   140004e85:	add    BYTE PTR [rax],al
   140004e87:	add    BYTE PTR [rbp+0x0],ch
   140004e8a:	imul   eax,DWORD PTR [rax],0x0
   140004e8d:	add    BYTE PTR [rax],al
   140004e8f:	add    BYTE PTR [rax+0x0],ch
   140004e92:	jae    0x140004e94
   140004e94:	(bad)  
   140004e95:	add    BYTE PTR [rax],al
   140004e97:	add    BYTE PTR [rbp+0x0],ah
   140004e9a:	jne    0x140004e9c
   140004e9c:	add    BYTE PTR [rax],al
   140004e9e:	add    BYTE PTR [rax],al
   140004ea0:	(bad)  
   140004ea1:	add    BYTE PTR [rdx+0x0],bh
   140004ea4:	add    BYTE PTR [rax],al
   140004ea6:	add    BYTE PTR [rax],al
   140004ea8:	push   0x7900
   140004ead:	add    BYTE PTR [rax],al
   140004eaf:	add    BYTE PTR [rsi+0x0],dh
   140004eb2:	imul   eax,DWORD PTR [rax],0x0
   140004eb8:	data16 add BYTE PTR [rcx+0x0],ah
   140004ebc:	add    BYTE PTR [rax],al
   140004ebe:	add    BYTE PTR [rax],al
   140004ec0:	je     0x140004ec2
   140004ec2:	add    BYTE PTR [eax],al
   140004ec5:	add    BYTE PTR [rax],al
   140004ec7:	add    BYTE PTR [rax+rax*1+0x74],ch
   140004ecb:	add    BYTE PTR [rax],al
   140004ecd:	add    BYTE PTR [rax],al
   140004ecf:	add    BYTE PTR [rax+rax*1+0x76],ch
   140004ed3:	add    BYTE PTR [rax],al
   140004ed5:	add    BYTE PTR [rax],al
   140004ed7:	add    BYTE PTR [rbp+0x0],ah
   140004eda:	je     0x140004edc
   140004edc:	add    BYTE PTR [rax],al
   140004ede:	add    BYTE PTR [rax],al
   140004ee0:	jae    0x140004ee2
   140004ee2:	ins    BYTE PTR es:[rdi],dx
   140004ee3:	add    BYTE PTR [rax],al
   140004ee5:	add    BYTE PTR [rax],al
   140004ee7:	add    BYTE PTR [rdx+0x0],ah
   140004eea:	add    BYTE PTR gs:[rax],al
   140004eed:	add    BYTE PTR [rax],al
   140004eef:	add    BYTE PTR [rbp+0x0],dh
   140004ef2:	imul   eax,DWORD PTR [rax],0x0
   140004ef5:	add    BYTE PTR [rax],al
   140004ef7:	add    BYTE PTR [rcx+0x0],ch
   140004efa:	add    BYTE PTR fs:[rax],al
   140004efd:	add    BYTE PTR [rax],al
   140004eff:	add    BYTE PTR [rbp+0x0],dh
   140004f02:	jb     0x140004f04
   140004f04:	add    BYTE PTR [rax],al
   140004f06:	add    BYTE PTR [rax],al
   140004f08:	je     0x140004f0a
   140004f0a:	jb     0x140004f0c
   140004f0c:	add    BYTE PTR [rax],al
   140004f0e:	add    BYTE PTR [rax],al
   140004f10:	je     0x140004f12
   140004f12:	push   0x0
   140004f17:	add    BYTE PTR [rbx+0x0],dh
   140004f1a:	jbe    0x140004f1c
   140004f1c:	add    BYTE PTR [rax],al
   140004f1e:	add    BYTE PTR [rax],al
   140004f20:	jae    0x140004f22
   140004f22:	jno    0x140004f24
   140004f24:	add    BYTE PTR [rax],al
   140004f26:	add    BYTE PTR [rax],al
   140004f28:	jae    0x140004f2a
   140004f2a:	imul   eax,DWORD PTR [rax],0x0
   140004f2d:	add    BYTE PTR [rax],al
   140004f2f:	add    BYTE PTR [rax+0x0],ch
   140004f32:	jb     0x140004f34
   140004f34:	add    BYTE PTR [rax],al
   140004f36:	add    BYTE PTR [rax],al
   140004f38:	jb     0x140004f3a
   140004f3a:	jne    0x140004f3c
   140004f3c:	add    BYTE PTR [rax],al
   140004f3e:	add    BYTE PTR [rax],al
   140004f40:	jb     0x140004f42
   140004f42:	outs   dx,DWORD PTR ds:[rsi]
   140004f43:	add    BYTE PTR [rax],al
   140004f45:	add    BYTE PTR [rax],al
   140004f47:	add    BYTE PTR [rdx+0x0],dh
   140004f4a:	ins    DWORD PTR es:[rdi],dx
   140004f4b:	add    BYTE PTR [rax],al
   140004f4d:	add    BYTE PTR [rax],al
   140004f4f:	add    BYTE PTR [rax+0x0],dh
   140004f52:	je     0x140004f54
   140004f54:	add    BYTE PTR [rax],al
   140004f56:	add    BYTE PTR [rax],al
   140004f58:	jo     0x140004f5a
   140004f5a:	ins    BYTE PTR es:[rdi],dx
   140004f5b:	add    BYTE PTR [rax],al
   140004f5d:	add    BYTE PTR [rax],al
   140004f5f:	add    BYTE PTR [rsi+0x0],ch
   140004f62:	outs   dx,DWORD PTR ds:[rsi]
   140004f63:	add    BYTE PTR [rax],al
   140004f65:	add    BYTE PTR [rax],al
   140004f67:	add    BYTE PTR [rsi+0x0],ch
   140004f6a:	ins    BYTE PTR es:[rdi],dx
   140004f6b:	add    BYTE PTR [rax],al
   140004f6d:	add    BYTE PTR [rax],al
   140004f6f:	add    BYTE PTR [rbx+0x0],ch
   140004f72:	outs   dx,DWORD PTR ds:[rsi]
   140004f73:	add    BYTE PTR [rax],al
   140004f75:	add    BYTE PTR [rax],al
   140004f77:	add    BYTE PTR [rdx+0x0],ch
   140004f7a:	(bad)  
   140004f7b:	add    BYTE PTR [rax],al
   140004f7d:	add    BYTE PTR [rax],al
   140004f7f:	add    BYTE PTR [rcx+0x0],ch
   140004f82:	je     0x140004f84
   140004f84:	add    BYTE PTR [rax],al
   140004f86:	add    BYTE PTR [rax],al
   140004f88:	imul   eax,DWORD PTR [rax],0x73
   140004f8e:	add    BYTE PTR [rax],al
   140004f90:	push   0x7500
   140004f95:	add    BYTE PTR [rax],al
   140004f97:	add    BYTE PTR [rax+0x0],ch
   140004f9a:	add    BYTE PTR gs:[rax],al
   140004f9d:	add    BYTE PTR [rax],al
   140004f9f:	add    BYTE PTR [rsi+0x0],ah
   140004fa2:	jb     0x140004fa4
   140004fa4:	add    BYTE PTR [rax],al
   140004fa6:	add    BYTE PTR [rax],al
   140004fa8:	data16 add BYTE PTR [rcx+0x0],ch
   140004fac:	add    BYTE PTR [rax],al
   140004fae:	add    BYTE PTR [rax],al
   140004fb0:	add    BYTE PTR gs:[rbx+0x0],dh
   140004fb4:	add    BYTE PTR [rax],al
   140004fb6:	add    BYTE PTR [rax],al
   140004fb8:	add    BYTE PTR gs:[rsi+0x0],ch
   140004fbc:	add    BYTE PTR [rax],al
   140004fbe:	add    BYTE PTR [rax],al
   140004fc0:	add    BYTE PTR gs:[rax+rax*1+0x0],ch
   140004fc5:	add    BYTE PTR [rax],al
   140004fc7:	add    BYTE PTR [rax+rax*1+0x65],ah
   140004fcb:	add    BYTE PTR [rax],al
   140004fcd:	add    BYTE PTR [rax],al
   140004fcf:	add    BYTE PTR [rax+rax*1+0x61],ah
   140004fd3:	add    BYTE PTR [rax],al
   140004fd5:	add    BYTE PTR [rax],al
   140004fd7:	add    BYTE PTR [rbx+0x0],ah
   140004fda:	jae    0x140004fdc
   140004fdc:	add    BYTE PTR [rax],al
   140004fde:	add    BYTE PTR [rax],al
   140004fe0:	movsxd eax,DWORD PTR [rax]
   140004fe2:	(bad)  
   140004fe3:	add    BYTE PTR [rax],al
   140004fe5:	add    BYTE PTR [rax],al
   140004fe7:	add    BYTE PTR [rdx+0x0],ah
   140004fea:	add    BYTE PTR [eax],al
   140004fed:	add    BYTE PTR [rax],al
   140004fef:	add    BYTE PTR [rcx+0x0],ah
   140004ff2:	jb     0x140004ff4
	...
   140005000:	add    DWORD PTR [rax],eax
   140005002:	add    BYTE PTR [rax],al
   140005004:	add    BYTE PTR [rax],al
   140005006:	add    BYTE PTR [rax],al
   140005008:	lock rex.WRXB add BYTE PTR [r8+0x1],r8b
   14000500d:	add    BYTE PTR [rax],al
   14000500f:	add    BYTE PTR [rax+0x0],ch
   140005012:	add    BYTE PTR [rax],al
   140005014:	add    BYTE PTR [rax],al
   140005016:	add    BYTE PTR [rax],al
   140005018:	add    al,BYTE PTR [rax]
   14000501a:	add    BYTE PTR [rax],al
   14000501c:	add    BYTE PTR [rax],al
   14000501e:	add    BYTE PTR [rax],al
   140005020:	call   0x141405074
   140005025:	add    BYTE PTR [rax],al
   140005027:	add    BYTE PTR [rax+0x0],ch
   14000502a:	add    BYTE PTR [rax],al
   14000502c:	add    BYTE PTR [rax],al
   14000502e:	add    BYTE PTR [rax],al
   140005030:	add    eax,DWORD PTR [rax]
   140005032:	add    BYTE PTR [rax],al
   140005034:	add    BYTE PTR [rax],al
   140005036:	add    BYTE PTR [rax],al
   140005038:	loopne 0x140005089
   14000503a:	add    BYTE PTR [rax+0x1],al
   14000503d:	add    BYTE PTR [rax],al
   14000503f:	add    BYTE PTR [rax+0x0],ch
   140005042:	add    BYTE PTR [rax],al
   140005044:	add    BYTE PTR [rax],al
   140005046:	add    BYTE PTR [rax],al
   140005048:	add    al,0x0
   14000504a:	add    BYTE PTR [rax],al
   14000504c:	add    BYTE PTR [rax],al
   14000504e:	add    BYTE PTR [rax],al
   140005050:	push   rax
   140005051:	add    BYTE PTR ss:[rax+0x1],al
   140005055:	add    BYTE PTR [rax],al
   140005057:	add    BYTE PTR [rcx+0x1],dl
   14000505a:	add    BYTE PTR [rax],al
   14000505c:	add    BYTE PTR [rax],al
   14000505e:	add    BYTE PTR [rax],al
   140005060:	add    eax,0x0
   140005065:	add    BYTE PTR [rax],al
   140005067:	add    al,bl
   140005069:	rex.WRXB add BYTE PTR [r8+0x1],r8b
   14000506d:	add    BYTE PTR [rax],al
   14000506f:	add    BYTE PTR [rax+0x0],ch
   140005072:	add    BYTE PTR [rax],al
   140005074:	add    BYTE PTR [rax],al
   140005076:	add    BYTE PTR [rax],al
   140005078:	(bad)  
   140005079:	add    BYTE PTR [rax],al
   14000507b:	add    BYTE PTR [rax],al
   14000507d:	add    BYTE PTR [rax],al
   14000507f:	add    al,dl
   140005081:	rex.WRXB add BYTE PTR [r8+0x1],r8b
   140005085:	add    BYTE PTR [rax],al
   140005087:	add    BYTE PTR [rax+0x0],ch
   14000508a:	add    BYTE PTR [rax],al
   14000508c:	add    BYTE PTR [rax],al
   14000508e:	add    BYTE PTR [rax],al
   140005090:	(bad)  
   140005091:	add    BYTE PTR [rax],al
   140005093:	add    BYTE PTR [rax],al
   140005095:	add    BYTE PTR [rax],al
   140005097:	add    al,cl
   140005099:	rex.WRXB add BYTE PTR [r8+0x1],r8b
   14000509d:	add    BYTE PTR [rax],al
   14000509f:	add    BYTE PTR [rax+0x0],ch
   1400050a2:	add    BYTE PTR [rax],al
   1400050a4:	add    BYTE PTR [rax],al
   1400050a6:	add    BYTE PTR [rax],al
   1400050a8:	or     BYTE PTR [rax],al
   1400050aa:	add    BYTE PTR [rax],al
   1400050ac:	add    BYTE PTR [rax],al
   1400050ae:	add    BYTE PTR [rax],al
   1400050b0:	ror    BYTE PTR [rdi+0x0],0x40
   1400050b4:	add    DWORD PTR [rax],eax
   1400050b6:	add    BYTE PTR [rax],al
   1400050b8:	push   0x0
   1400050bd:	add    BYTE PTR [rax],al
   1400050bf:	add    BYTE PTR [rcx],cl
   1400050c1:	add    BYTE PTR [rax],al
   1400050c3:	add    BYTE PTR [rax],al
   1400050c5:	add    BYTE PTR [rax],al
   1400050c7:	add    BYTE PTR [rax+0x140004f],bh
   1400050cd:	add    BYTE PTR [rax],al
   1400050cf:	add    BYTE PTR [rax+0x0],ch
   1400050d2:	add    BYTE PTR [rax],al
   1400050d4:	add    BYTE PTR [rax],al
   1400050d6:	add    BYTE PTR [rax],al
   1400050d8:	or     al,BYTE PTR [rax]
   1400050da:	add    BYTE PTR [rax],al
   1400050dc:	add    BYTE PTR [rax],al
   1400050de:	add    BYTE PTR [rax],al
   1400050e0:	mov    al,0x4f
   1400050e2:	add    BYTE PTR [rax+0x1],al
   1400050e5:	add    BYTE PTR [rax],al
   1400050e7:	add    BYTE PTR [rax+0x0],ch
   1400050ea:	add    BYTE PTR [rax],al
   1400050ec:	add    BYTE PTR [rax],al
   1400050ee:	add    BYTE PTR [rax],al
   1400050f0:	or     eax,DWORD PTR [rax]
   1400050f2:	add    BYTE PTR [rax],al
   1400050f4:	add    BYTE PTR [rax],al
   1400050f6:	add    BYTE PTR [rax],al
   1400050f8:	test   al,0x4f
   1400050fa:	add    BYTE PTR [rax+0x1],al
   1400050fd:	add    BYTE PTR [rax],al
   1400050ff:	add    BYTE PTR [rax+0x0],ch
   140005102:	add    BYTE PTR [rax],al
   140005104:	add    BYTE PTR [rax],al
   140005106:	add    BYTE PTR [rax],al
   140005108:	or     al,0x0
   14000510a:	add    BYTE PTR [rax],al
   14000510c:	add    BYTE PTR [rax],al
   14000510e:	add    BYTE PTR [rax],al
   140005110:	movabs al,ds:0x680000000140004f
   140005119:	add    BYTE PTR [rax],al
   14000511b:	add    BYTE PTR [rax],al
   14000511d:	add    BYTE PTR [rax],al
   14000511f:	add    BYTE PTR [rip+0x0],cl        # 0x140005125
   140005125:	add    BYTE PTR [rax],al
   140005127:	add    BYTE PTR [rax+0x140004f],bl
   14000512d:	add    BYTE PTR [rax],al
   14000512f:	add    BYTE PTR [rax+0x0],ch
   140005132:	add    BYTE PTR [rax],al
   140005134:	add    BYTE PTR [rax],al
   140005136:	add    BYTE PTR [rax],al
   140005138:	(bad)  
   140005139:	add    BYTE PTR [rax],al
   14000513b:	add    BYTE PTR [rax],al
   14000513d:	add    BYTE PTR [rax],al
   14000513f:	add    BYTE PTR [rax+0x140004f],dl
   140005145:	add    BYTE PTR [rax],al
   140005147:	add    BYTE PTR [rax+0x0],ch
   14000514a:	add    BYTE PTR [rax],al
   14000514c:	add    BYTE PTR [rax],al
   14000514e:	add    BYTE PTR [rax],al
   140005150:	sldt   WORD PTR [rax]
   140005153:	add    BYTE PTR [rax],al
   140005155:	add    BYTE PTR [rax],al
   140005157:	add    BYTE PTR [rax+0x140004f],cl
   14000515d:	add    BYTE PTR [rax],al
   14000515f:	add    BYTE PTR [rax+0x0],ch
   140005162:	add    BYTE PTR [rax],al
   140005164:	add    BYTE PTR [rax],al
   140005166:	add    BYTE PTR [rax],al
   140005168:	adc    BYTE PTR [rax],al
   14000516a:	add    BYTE PTR [rax],al
   14000516c:	add    BYTE PTR [rax],al
   14000516e:	add    BYTE PTR [rax],al
   140005170:	or     BYTE PTR [rdi+0x0],0x40
   140005174:	add    DWORD PTR [rax],eax
   140005176:	add    BYTE PTR [rax],al
   140005178:	push   0x0
   14000517d:	add    BYTE PTR [rax],al
   14000517f:	add    BYTE PTR [rcx],dl
   140005181:	add    BYTE PTR [rax],al
   140005183:	add    BYTE PTR [rax],al
   140005185:	add    BYTE PTR [rax],al
   140005187:	add    BYTE PTR [rax+0x4f],bh
   14000518a:	add    BYTE PTR [rax+0x1],al
   14000518d:	add    BYTE PTR [rax],al
   14000518f:	add    BYTE PTR [rax+0x0],ch
   140005192:	add    BYTE PTR [rax],al
   140005194:	add    BYTE PTR [rax],al
   140005196:	add    BYTE PTR [rax],al
   140005198:	adc    al,BYTE PTR [rax]
   14000519a:	add    BYTE PTR [rax],al
   14000519c:	add    BYTE PTR [rax],al
   14000519e:	add    BYTE PTR [rax],al
   1400051a0:	jo     0x1400051f1
   1400051a2:	add    BYTE PTR [rax+0x1],al
   1400051a5:	add    BYTE PTR [rax],al
   1400051a7:	add    BYTE PTR [rax+0x0],ch
   1400051aa:	add    BYTE PTR [rax],al
   1400051ac:	add    BYTE PTR [rax],al
   1400051ae:	add    BYTE PTR [rax],al
   1400051b0:	adc    eax,DWORD PTR [rax]
   1400051b2:	add    BYTE PTR [rax],al
   1400051b4:	add    BYTE PTR [rax],al
   1400051b6:	add    BYTE PTR [rax],al
   1400051b8:	push   0x140004f
   1400051bd:	add    BYTE PTR [rax],al
   1400051bf:	add    BYTE PTR [rax+0x0],ch
   1400051c2:	add    BYTE PTR [rax],al
   1400051c4:	add    BYTE PTR [rax],al
   1400051c6:	add    BYTE PTR [rax],al
   1400051c8:	adc    al,0x0
   1400051ca:	add    BYTE PTR [rax],al
   1400051cc:	add    BYTE PTR [rax],al
   1400051ce:	add    BYTE PTR [rax],al
   1400051d0:	(bad)  
   1400051d1:	rex.WRXB add BYTE PTR [r8+0x1],r8b
   1400051d5:	add    BYTE PTR [rax],al
   1400051d7:	add    BYTE PTR [rax+0x0],ch
   1400051da:	add    BYTE PTR [rax],al
   1400051dc:	add    BYTE PTR [rax],al
   1400051de:	add    BYTE PTR [rax],al
   1400051e0:	adc    eax,0x0
   1400051e5:	add    BYTE PTR [rax],al
   1400051e7:	add    BYTE PTR [rax+0x4f],bl
   1400051ea:	add    BYTE PTR [rax+0x1],al
   1400051ed:	add    BYTE PTR [rax],al
   1400051ef:	add    BYTE PTR [rax+0x0],ch
   1400051f2:	add    BYTE PTR [rax],al
   1400051f4:	add    BYTE PTR [rax],al
   1400051f6:	add    BYTE PTR [rax],al
   1400051f8:	(bad)  
   1400051f9:	add    BYTE PTR [rax],al
   1400051fb:	add    BYTE PTR [rax],al
   1400051fd:	add    BYTE PTR [rax],al
   1400051ff:	add    BYTE PTR [rax+0x4f],dl
   140005202:	add    BYTE PTR [rax+0x1],al
   140005205:	add    BYTE PTR [rax],al
   140005207:	add    BYTE PTR [rax+0x0],ch
   14000520a:	add    BYTE PTR [rax],al
   14000520c:	add    BYTE PTR [rax],al
   14000520e:	add    BYTE PTR [rax],al
   140005210:	(bad)  
   140005211:	add    BYTE PTR [rax],al
   140005213:	add    BYTE PTR [rax],al
   140005215:	add    BYTE PTR [rax],al
   140005217:	add    BYTE PTR [rax+0x4f],cl
   14000521a:	add    BYTE PTR [rax+0x1],al
   14000521d:	add    BYTE PTR [rax],al
   14000521f:	add    BYTE PTR [rax+0x0],ch
   140005222:	add    BYTE PTR [rax],al
   140005224:	add    BYTE PTR [rax],al
   140005226:	add    BYTE PTR [rax],al
   140005228:	sbb    BYTE PTR [rax],al
   14000522a:	add    BYTE PTR [rax],al
   14000522c:	add    BYTE PTR [rax],al
   14000522e:	add    BYTE PTR [rax],al
   140005230:	rex
   140005231:	rex.WRXB add BYTE PTR [r8+0x1],r8b
   140005235:	add    BYTE PTR [rax],al
   140005237:	add    BYTE PTR [rax+0x0],ch
   14000523a:	add    BYTE PTR [rax],al
   14000523c:	add    BYTE PTR [rax],al
   14000523e:	add    BYTE PTR [rax],al
   140005240:	sbb    DWORD PTR [rax],eax
   140005242:	add    BYTE PTR [rax],al
   140005244:	add    BYTE PTR [rax],al
   140005246:	add    BYTE PTR [rax],al
   140005248:	cmp    BYTE PTR [rdi+0x0],cl
   14000524b:	rex add DWORD PTR [rax],eax
   14000524e:	add    BYTE PTR [rax],al
   140005250:	push   0x0
   140005255:	add    BYTE PTR [rax],al
   140005257:	add    BYTE PTR [rdx],bl
   140005259:	add    BYTE PTR [rax],al
   14000525b:	add    BYTE PTR [rax],al
   14000525d:	add    BYTE PTR [rax],al
   14000525f:	add    BYTE PTR [rax],dh
   140005261:	rex.WRXB add BYTE PTR [r8+0x1],r8b
   140005265:	add    BYTE PTR [rax],al
   140005267:	add    BYTE PTR [rax+0x0],ch
   14000526a:	add    BYTE PTR [rax],al
   14000526c:	add    BYTE PTR [rax],al
   14000526e:	add    BYTE PTR [rax],al
   140005270:	sbb    eax,DWORD PTR [rax]
   140005272:	add    BYTE PTR [rax],al
   140005274:	add    BYTE PTR [rax],al
   140005276:	add    BYTE PTR [rax],al
   140005278:	sub    BYTE PTR [rdi+0x0],cl
   14000527b:	rex add DWORD PTR [rax],eax
   14000527e:	add    BYTE PTR [rax],al
   140005280:	push   0x0
   140005285:	add    BYTE PTR [rax],al
   140005287:	add    BYTE PTR [rax+rax*1],bl
   14000528a:	add    BYTE PTR [rax],al
   14000528c:	add    BYTE PTR [rax],al
   14000528e:	add    BYTE PTR [rax],al
   140005290:	and    BYTE PTR [rdi+0x0],cl
   140005293:	rex add DWORD PTR [rax],eax
   140005296:	add    BYTE PTR [rax],al
   140005298:	push   0x0
   14000529d:	add    BYTE PTR [rax],al
   14000529f:	add    BYTE PTR [rip+0x0],bl        # 0x1400052a5
   1400052a5:	add    BYTE PTR [rax],al
   1400052a7:	add    BYTE PTR [rax],bl
   1400052a9:	rex.WRXB add BYTE PTR [r8+0x1],r8b
   1400052ad:	add    BYTE PTR [rax],al
   1400052af:	add    BYTE PTR [rax+0x0],ch
   1400052b2:	add    BYTE PTR [rax],al
   1400052b4:	add    BYTE PTR [rax],al
   1400052b6:	add    BYTE PTR [rax],al
   1400052b8:	(bad)  
   1400052b9:	add    BYTE PTR [rax],al
   1400052bb:	add    BYTE PTR [rax],al
   1400052bd:	add    BYTE PTR [rax],al
   1400052bf:	add    BYTE PTR [rax],dl
   1400052c1:	rex.WRXB add BYTE PTR [r8+0x1],r8b
   1400052c5:	add    BYTE PTR [rax],al
   1400052c7:	add    BYTE PTR [rax+0x0],ch
   1400052ca:	add    BYTE PTR [rax],al
   1400052cc:	add    BYTE PTR [rax],al
   1400052ce:	add    BYTE PTR [rax],al
   1400052d0:	(bad)  
   1400052d1:	add    BYTE PTR [rax],al
   1400052d3:	add    BYTE PTR [rax],al
   1400052d5:	add    BYTE PTR [rax],al
   1400052d7:	add    BYTE PTR [rax],cl
   1400052d9:	rex.WRXB add BYTE PTR [r8+0x1],r8b
   1400052dd:	add    BYTE PTR [rax],al
   1400052df:	add    BYTE PTR [rax+0x0],ch
   1400052e2:	add    BYTE PTR [rax],al
   1400052e4:	add    BYTE PTR [rax],al
   1400052e6:	add    BYTE PTR [rax],al
   1400052e8:	and    BYTE PTR [rax],al
   1400052ea:	add    BYTE PTR [rax],al
   1400052ec:	add    BYTE PTR [rax],al
   1400052ee:	add    BYTE PTR [rax],al
   1400052f0:	add    BYTE PTR [rdi+0x0],cl
   1400052f3:	rex add DWORD PTR [rax],eax
   1400052f6:	add    BYTE PTR [rax],al
   1400052f8:	push   0x0
   1400052fd:	add    BYTE PTR [rax],al
   1400052ff:	add    BYTE PTR [rcx],ah
   140005301:	add    BYTE PTR [rax],al
   140005303:	add    BYTE PTR [rax],al
   140005305:	add    BYTE PTR [rax],al
   140005307:	add    al,bh
   140005309:	rex.WRX add BYTE PTR [rax+0x1],r8b
   14000530d:	add    BYTE PTR [rax],al
   14000530f:	add    BYTE PTR [rax+0x0],ch
   140005312:	add    BYTE PTR [rax],al
   140005314:	add    BYTE PTR [rax],al
   140005316:	add    BYTE PTR [rax],al
   140005318:	and    al,BYTE PTR [rax]
   14000531a:	add    BYTE PTR [rax],al
   14000531c:	add    BYTE PTR [rax],al
   14000531e:	add    BYTE PTR [rax],al
   140005320:	lock rex.WRX add BYTE PTR [rax+0x1],r8b
   140005325:	add    BYTE PTR [rax],al
   140005327:	add    BYTE PTR [rax+0x0],ch
   14000532a:	add    BYTE PTR [rax],al
   14000532c:	add    BYTE PTR [rax],al
   14000532e:	add    BYTE PTR [rax],al
   140005330:	and    eax,DWORD PTR [rax]
   140005332:	add    BYTE PTR [rax],al
   140005334:	add    BYTE PTR [rax],al
   140005336:	add    BYTE PTR [rax],al
   140005338:	call   0x14140538b
   14000533d:	add    BYTE PTR [rax],al
   14000533f:	add    BYTE PTR [rax+0x0],ch
   140005342:	add    BYTE PTR [rax],al
   140005344:	add    BYTE PTR [rax],al
   140005346:	add    BYTE PTR [rax],al
   140005348:	and    al,0x0
   14000534a:	add    BYTE PTR [rax],al
   14000534c:	add    BYTE PTR [rax],al
   14000534e:	add    BYTE PTR [rax],al
   140005350:	loopne 0x1400053a0
   140005352:	add    BYTE PTR [rax+0x1],al
   140005355:	add    BYTE PTR [rax],al
   140005357:	add    BYTE PTR [rax+0x0],ch
   14000535a:	add    BYTE PTR [rax],al
   14000535c:	add    BYTE PTR [rax],al
   14000535e:	add    BYTE PTR [rax],al
   140005360:	and    eax,0x0
   140005365:	add    BYTE PTR [rax],al
   140005367:	add    al,bl
   140005369:	rex.WRX add BYTE PTR [rax+0x1],r8b
   14000536d:	add    BYTE PTR [rax],al
   14000536f:	add    BYTE PTR [rax+0x0],ch
   140005372:	add    BYTE PTR [rax],al
   140005374:	add    BYTE PTR [rax],al
   140005376:	add    BYTE PTR [rax],al
   140005378:	add    BYTE PTR es:[rax],al
   14000537b:	add    BYTE PTR [rax],al
   14000537d:	add    BYTE PTR [rax],al
   14000537f:	add    al,dl
   140005381:	rex.WRX add BYTE PTR [rax+0x1],r8b
   140005385:	add    BYTE PTR [rax],al
   140005387:	add    BYTE PTR [rax+0x0],ch
   14000538a:	add    BYTE PTR [rax],al
   14000538c:	add    BYTE PTR [rax],al
   14000538e:	add    BYTE PTR [rax],al
   140005390:	(bad)  
   140005391:	add    BYTE PTR [rax],al
   140005393:	add    BYTE PTR [rax],al
   140005395:	add    BYTE PTR [rax],al
   140005397:	add    al,cl
   140005399:	rex.WRX add BYTE PTR [rax+0x1],r8b
   14000539d:	add    BYTE PTR [rax],al
   14000539f:	add    BYTE PTR [rax+0x0],ch
   1400053a2:	add    BYTE PTR [rax],al
   1400053a4:	add    BYTE PTR [rax],al
   1400053a6:	add    BYTE PTR [rax],al
   1400053a8:	sub    BYTE PTR [rax],al
   1400053aa:	add    BYTE PTR [rax],al
   1400053ac:	add    BYTE PTR [rax],al
   1400053ae:	add    BYTE PTR [rax],al
   1400053b0:	ror    BYTE PTR [rsi+0x0],0x40
   1400053b4:	add    DWORD PTR [rax],eax
   1400053b6:	add    BYTE PTR [rax],al
   1400053b8:	push   0x0
   1400053bd:	add    BYTE PTR [rax],al
   1400053bf:	add    BYTE PTR [rcx],ch
   1400053c1:	add    BYTE PTR [rax],al
   1400053c3:	add    BYTE PTR [rax],al
   1400053c5:	add    BYTE PTR [rax],al
   1400053c7:	add    BYTE PTR [rax+0x140004e],bh
   1400053cd:	add    BYTE PTR [rax],al
   1400053cf:	add    BYTE PTR [rax+0x0],ch
   1400053d2:	add    BYTE PTR [rax],al
   1400053d4:	add    BYTE PTR [rax],al
   1400053d6:	add    BYTE PTR [rax],al
   1400053d8:	sub    al,BYTE PTR [rax]
   1400053da:	add    BYTE PTR [rax],al
   1400053dc:	add    BYTE PTR [rax],al
   1400053de:	add    BYTE PTR [rax],al
   1400053e0:	mov    al,0x4e
   1400053e2:	add    BYTE PTR [rax+0x1],al
   1400053e5:	add    BYTE PTR [rax],al
   1400053e7:	add    BYTE PTR [rax+0x0],ch
   1400053ea:	add    BYTE PTR [rax],al
   1400053ec:	add    BYTE PTR [rax],al
   1400053ee:	add    BYTE PTR [rax],al
   1400053f0:	sub    eax,DWORD PTR [rax]
   1400053f2:	add    BYTE PTR [rax],al
   1400053f4:	add    BYTE PTR [rax],al
   1400053f6:	add    BYTE PTR [rax],al
   1400053f8:	test   al,0x4e
   1400053fa:	add    BYTE PTR [rax+0x1],al
   1400053fd:	add    BYTE PTR [rax],al
   1400053ff:	add    BYTE PTR [rax+0x0],ch
   140005402:	add    BYTE PTR [rax],al
   140005404:	add    BYTE PTR [rax],al
   140005406:	add    BYTE PTR [rax],al
   140005408:	sub    al,0x0
   14000540a:	add    BYTE PTR [rax],al
   14000540c:	add    BYTE PTR [rax],al
   14000540e:	add    BYTE PTR [rax],al
   140005410:	movabs al,ds:0x680000000140004e
   140005419:	add    BYTE PTR [rax],al
   14000541b:	add    BYTE PTR [rax],al
   14000541d:	add    BYTE PTR [rax],al
   14000541f:	add    BYTE PTR [rip+0x0],ch        # 0x140005425
   140005425:	add    BYTE PTR [rax],al
   140005427:	add    BYTE PTR [rax+0x140004e],bl
   14000542d:	add    BYTE PTR [rax],al
   14000542f:	add    BYTE PTR [rax+0x0],ch
   140005432:	add    BYTE PTR [rax],al
   140005434:	add    BYTE PTR [rax],al
   140005436:	add    BYTE PTR [rax],al
   140005438:	add    BYTE PTR cs:[rax],al
   14000543b:	add    BYTE PTR [rax],al
   14000543d:	add    BYTE PTR [rax],al
   14000543f:	add    BYTE PTR [rax+0x140004e],dl
   140005445:	add    BYTE PTR [rax],al
   140005447:	add    BYTE PTR [rax+0x0],ch
   14000544a:	add    BYTE PTR [rax],al
   14000544c:	add    BYTE PTR [rax],al
   14000544e:	add    BYTE PTR [rax],al
   140005450:	(bad)  
   140005451:	add    BYTE PTR [rax],al
   140005453:	add    BYTE PTR [rax],al
   140005455:	add    BYTE PTR [rax],al
   140005457:	add    BYTE PTR [rax+0x140004e],cl
   14000545d:	add    BYTE PTR [rax],al
   14000545f:	add    BYTE PTR [rax+0x0],ch
   140005462:	add    BYTE PTR [rax],al
   140005464:	add    BYTE PTR [rax],al
   140005466:	add    BYTE PTR [rax],al
   140005468:	xor    al,BYTE PTR [rax]
   14000546a:	add    BYTE PTR [rax],al
   14000546c:	add    BYTE PTR [rax],al
   14000546e:	add    BYTE PTR [rax],al
   140005470:	or     BYTE PTR [rsi+0x0],0x40
   140005474:	add    DWORD PTR [rax],eax
   140005476:	add    BYTE PTR [rax],al
   140005478:	push   0x0
   14000547d:	add    BYTE PTR [rax],al
   14000547f:	add    BYTE PTR [rax+rax*1],dh
   140005482:	add    BYTE PTR [rax],al
   140005484:	add    BYTE PTR [rax],al
   140005486:	add    BYTE PTR [rax],al
   140005488:	js     0x1400054d8
   14000548a:	add    BYTE PTR [rax+0x1],al
   14000548d:	add    BYTE PTR [rax],al
   14000548f:	add    BYTE PTR [rax+0x0],ch
   140005492:	add    BYTE PTR [rax],al
   140005494:	add    BYTE PTR [rax],al
   140005496:	add    BYTE PTR [rax],al
   140005498:	xor    eax,0x0
   14000549d:	add    BYTE PTR [rax],al
   14000549f:	add    BYTE PTR [rax+0x4e],dh
   1400054a2:	add    BYTE PTR [rax+0x1],al
   1400054a5:	add    BYTE PTR [rax],al
   1400054a7:	add    BYTE PTR [rax+0x0],ch
   1400054aa:	add    BYTE PTR [rax],al
   1400054ac:	add    BYTE PTR [rax],al
   1400054ae:	add    BYTE PTR [rax],al
   1400054b0:	add    BYTE PTR ss:[rax],al
   1400054b3:	add    BYTE PTR [rax],al
   1400054b5:	add    BYTE PTR [rax],al
   1400054b7:	add    BYTE PTR [rax+0x4e],ch
   1400054ba:	add    BYTE PTR [rax+0x1],al
   1400054bd:	add    BYTE PTR [rax],al
   1400054bf:	add    BYTE PTR [rax+0x0],ch
   1400054c2:	add    BYTE PTR [rax],al
   1400054c4:	add    BYTE PTR [rax],al
   1400054c6:	add    BYTE PTR [rax],al
   1400054c8:	(bad)  
   1400054c9:	add    BYTE PTR [rax],al
   1400054cb:	add    BYTE PTR [rax],al
   1400054cd:	add    BYTE PTR [rax],al
   1400054cf:	add    BYTE PTR [rax+0x4e],ah
   1400054d2:	add    BYTE PTR [rax+0x1],al
   1400054d5:	add    BYTE PTR [rax],al
   1400054d7:	add    BYTE PTR [rax+0x0],ch
   1400054da:	add    BYTE PTR [rax],al
   1400054dc:	add    BYTE PTR [rax],al
   1400054de:	add    BYTE PTR [rax],al
   1400054e0:	cmp    BYTE PTR [rax],al
   1400054e2:	add    BYTE PTR [rax],al
   1400054e4:	add    BYTE PTR [rax],al
   1400054e6:	add    BYTE PTR [rax],al
   1400054e8:	pop    rax
   1400054e9:	rex.WRX add BYTE PTR [rax+0x1],r8b
   1400054ed:	add    BYTE PTR [rax],al
   1400054ef:	add    BYTE PTR [rax+0x0],ch
   1400054f2:	add    BYTE PTR [rax],al
   1400054f4:	add    BYTE PTR [rax],al
   1400054f6:	add    BYTE PTR [rax],al
   1400054f8:	cmp    DWORD PTR [rax],eax
   1400054fa:	add    BYTE PTR [rax],al
   1400054fc:	add    BYTE PTR [rax],al
   1400054fe:	add    BYTE PTR [rax],al
   140005500:	push   rax
   140005501:	rex.WRX add BYTE PTR [rax+0x1],r8b
   140005505:	add    BYTE PTR [rax],al
   140005507:	add    BYTE PTR [rax+0x0],ch
   14000550a:	add    BYTE PTR [rax],al
   14000550c:	add    BYTE PTR [rax],al
   14000550e:	add    BYTE PTR [rax],al
   140005510:	cmp    al,BYTE PTR [rax]
   140005512:	add    BYTE PTR [rax],al
   140005514:	add    BYTE PTR [rax],al
   140005516:	add    BYTE PTR [rax],al
   140005518:	rex.W
   140005519:	rex.WRX add BYTE PTR [rax+0x1],r8b
   14000551d:	add    BYTE PTR [rax],al
   14000551f:	add    BYTE PTR [rax+0x0],ch
   140005522:	add    BYTE PTR [rax],al
   140005524:	add    BYTE PTR [rax],al
   140005526:	add    BYTE PTR [rax],al
   140005528:	cmp    eax,DWORD PTR [rax]
   14000552a:	add    BYTE PTR [rax],al
   14000552c:	add    BYTE PTR [rax],al
   14000552e:	add    BYTE PTR [rax],al
   140005530:	rex
   140005531:	rex.WRX add BYTE PTR [rax+0x1],r8b
   140005535:	add    BYTE PTR [rax],al
   140005537:	add    BYTE PTR [rax+0x0],ch
   14000553a:	add    BYTE PTR [rax],al
   14000553c:	add    BYTE PTR [rax],al
   14000553e:	add    BYTE PTR [rax],al
   140005540:	cmp    al,0x0
   140005542:	add    BYTE PTR [rax],al
   140005544:	add    BYTE PTR [rax],al
   140005546:	add    BYTE PTR [rax],al
   140005548:	cmp    BYTE PTR [rsi+0x0],cl
   14000554b:	rex add DWORD PTR [rax],eax
   14000554e:	add    BYTE PTR [rax],al
   140005550:	push   0x0
   140005555:	add    BYTE PTR [rax],al
   140005557:	add    BYTE PTR [rsi],bh
   140005559:	add    BYTE PTR [rax],al
   14000555b:	add    BYTE PTR [rax],al
   14000555d:	add    BYTE PTR [rax],al
   14000555f:	add    BYTE PTR [rax],dh
   140005561:	rex.WRX add BYTE PTR [rax+0x1],r8b
   140005565:	add    BYTE PTR [rax],al
   140005567:	add    BYTE PTR [rax+0x0],ch
   14000556a:	add    BYTE PTR [rax],al
   14000556c:	add    BYTE PTR [rax],al
   14000556e:	add    BYTE PTR [rax],al
   140005570:	(bad)  
   140005571:	add    BYTE PTR [rax],al
   140005573:	add    BYTE PTR [rax],al
   140005575:	add    BYTE PTR [rax],al
   140005577:	add    BYTE PTR [rax],ch
   140005579:	rex.WRX add BYTE PTR [rax+0x1],r8b
   14000557d:	add    BYTE PTR [rax],al
   14000557f:	add    BYTE PTR [rax+0x0],ch
   140005582:	add    BYTE PTR [rax],al
   140005584:	add    BYTE PTR [rax],al
   140005586:	add    BYTE PTR [rax],al
   140005588:	add    BYTE PTR [rax],al
   14000558b:	add    BYTE PTR [rax],al
   14000558d:	add    BYTE PTR [rax],al
   14000558f:	add    BYTE PTR [rax],ah
   140005591:	rex.WRX add BYTE PTR [rax+0x1],r8b
   140005595:	add    BYTE PTR [rax],al
   140005597:	add    BYTE PTR [rax+0x0],ch
   14000559a:	add    BYTE PTR [rax],al
   14000559c:	add    BYTE PTR [rax],al
   14000559e:	add    BYTE PTR [rax],al
   1400055a0:	add    BYTE PTR [r8],al
   1400055a3:	add    BYTE PTR [rax],al
   1400055a5:	add    BYTE PTR [rax],al
   1400055a7:	add    BYTE PTR [rax],bl
   1400055a9:	rex.WRX add BYTE PTR [rax+0x1],r8b
   1400055ad:	add    BYTE PTR [rax],al
   1400055af:	add    BYTE PTR [rax+0x0],ch
   1400055b2:	add    BYTE PTR [rax],al
   1400055b4:	add    BYTE PTR [rax],al
   1400055b6:	add    BYTE PTR [rax],al
   1400055b8:	rex.X add BYTE PTR [rax],al
   1400055bb:	add    BYTE PTR [rax],al
   1400055bd:	add    BYTE PTR [rax],al
   1400055bf:	add    BYTE PTR [rax],dl
   1400055c1:	rex.WRX add BYTE PTR [rax+0x1],r8b
   1400055c5:	add    BYTE PTR [rax],al
   1400055c7:	add    BYTE PTR [rax+0x0],ch
   1400055ca:	add    BYTE PTR [rax],al
   1400055cc:	add    BYTE PTR [rax],al
   1400055ce:	add    BYTE PTR [rax],al
   1400055d0:	rex.XB add BYTE PTR [r8],al
   1400055d3:	add    BYTE PTR [rax],al
   1400055d5:	add    BYTE PTR [rax],al
   1400055d7:	add    BYTE PTR [rax],cl
   1400055d9:	rex.WRX add BYTE PTR [rax+0x1],r8b
   1400055dd:	add    BYTE PTR [rax],al
   1400055df:	add    BYTE PTR [rax+0x0],ch
   1400055e2:	add    BYTE PTR [rax],al
   1400055e4:	add    BYTE PTR [rax],al
   1400055e6:	add    BYTE PTR [rax],al
   1400055e8:	add    BYTE PTR [rax],r8b
   1400055eb:	add    BYTE PTR [rax],al
   1400055ed:	add    BYTE PTR [rax],al
   1400055ef:	add    BYTE PTR [rax],al
   1400055f1:	rex.WRX add BYTE PTR [rax+0x1],r8b
   1400055f5:	add    BYTE PTR [rax],al
   1400055f7:	add    BYTE PTR [rax+0x0],ch
   1400055fa:	add    BYTE PTR [rax],al
   1400055fc:	add    BYTE PTR [rax],al
   1400055fe:	add    BYTE PTR [rax],al
   140005600:	add    BYTE PTR [r8],r8b
   140005603:	add    BYTE PTR [rax],al
   140005605:	add    BYTE PTR [rax],al
   140005607:	add    al,bh
   140005609:	rex.WRB add BYTE PTR [r8+0x1],r8b
   14000560d:	add    BYTE PTR [rax],al
   14000560f:	add    BYTE PTR [rax+0x0],ch
   140005612:	add    BYTE PTR [rax],al
   140005614:	add    BYTE PTR [rax],al
   140005616:	add    BYTE PTR [rax],al
   140005618:	rex.RX add BYTE PTR [rax],r8b
   14000561b:	add    BYTE PTR [rax],al
   14000561d:	add    BYTE PTR [rax],al
   14000561f:	add    al,dh
   140005621:	rex.WRB add BYTE PTR [r8+0x1],r8b
   140005625:	add    BYTE PTR [rax],al
   140005627:	add    BYTE PTR [rax+0x0],ch
   14000562a:	add    BYTE PTR [rax],al
   14000562c:	add    BYTE PTR [rax],al
   14000562e:	add    BYTE PTR [rax],al
   140005630:	rex.RXB add BYTE PTR [r8],r8b
   140005633:	add    BYTE PTR [rax],al
   140005635:	add    BYTE PTR [rax],al
   140005637:	add    al,ch
   140005639:	rex.WRB add BYTE PTR [r8+0x1],r8b
   14000563d:	add    BYTE PTR [rax],al
   14000563f:	add    BYTE PTR [rax+0x0],ch
   140005642:	add    BYTE PTR [rax],al
   140005644:	add    BYTE PTR [rax],al
   140005646:	add    BYTE PTR [rax],al
   140005648:	rex.W add BYTE PTR [rax],al
   14000564b:	add    BYTE PTR [rax],al
   14000564d:	add    BYTE PTR [rax],al
   14000564f:	add    al,ah
   140005651:	rex.WRB add BYTE PTR [r8+0x1],r8b
   140005655:	add    BYTE PTR [rax],al
   140005657:	add    BYTE PTR [rax+0x0],ch
   14000565a:	add    BYTE PTR [rax],al
   14000565c:	add    BYTE PTR [rax],al
   14000565e:	add    BYTE PTR [rax],al
   140005660:	rex.WB add BYTE PTR [r8],al
   140005663:	add    BYTE PTR [rax],al
   140005665:	add    BYTE PTR [rax],al
   140005667:	add    al,bl
   140005669:	rex.WRB add BYTE PTR [r8+0x1],r8b
   14000566d:	add    BYTE PTR [rax],al
   14000566f:	add    BYTE PTR [rax+0x0],ch
   140005672:	add    BYTE PTR [rax],al
   140005674:	add    BYTE PTR [rax],al
   140005676:	add    BYTE PTR [rax],al
   140005678:	rex.WX add BYTE PTR [rax],al
   14000567b:	add    BYTE PTR [rax],al
   14000567d:	add    BYTE PTR [rax],al
   14000567f:	add    al,dl
   140005681:	rex.WRB add BYTE PTR [r8+0x1],r8b
   140005685:	add    BYTE PTR [rax],al
   140005687:	add    BYTE PTR [rax+0x0],ch
   14000568a:	add    BYTE PTR [rax],al
   14000568c:	add    BYTE PTR [rax],al
   14000568e:	add    BYTE PTR [rax],al
   140005690:	rex.WXB add BYTE PTR [r8],al
   140005693:	add    BYTE PTR [rax],al
   140005695:	add    BYTE PTR [rax],al
   140005697:	add    al,cl
   140005699:	rex.WRB add BYTE PTR [r8+0x1],r8b
   14000569d:	add    BYTE PTR [rax],al
   14000569f:	add    BYTE PTR [rax+0x0],ch
   1400056a2:	add    BYTE PTR [rax],al
   1400056a4:	add    BYTE PTR [rax],al
   1400056a6:	add    BYTE PTR [rax],al
   1400056a8:	rex.WR add BYTE PTR [rax],r8b
   1400056ab:	add    BYTE PTR [rax],al
   1400056ad:	add    BYTE PTR [rax],al
   1400056af:	add    al,al
   1400056b1:	rex.WRB add BYTE PTR [r8+0x1],r8b
   1400056b5:	add    BYTE PTR [rax],al
   1400056b7:	add    BYTE PTR [rax+0x0],ch
   1400056ba:	add    BYTE PTR [rax],al
   1400056bc:	add    BYTE PTR [rax],al
   1400056be:	add    BYTE PTR [rax],al
   1400056c0:	rex.WRB add BYTE PTR [r8],r8b
   1400056c3:	add    BYTE PTR [rax],al
   1400056c5:	add    BYTE PTR [rax],al
   1400056c7:	add    BYTE PTR [rax+0x140004d],bh
   1400056cd:	add    BYTE PTR [rax],al
   1400056cf:	add    BYTE PTR [rax+0x0],ch
   1400056d2:	add    BYTE PTR [rax],al
   1400056d4:	add    BYTE PTR [rax],al
   1400056d6:	add    BYTE PTR [rax],al
   1400056d8:	rex.WRX add BYTE PTR [rax],r8b
   1400056db:	add    BYTE PTR [rax],al
   1400056dd:	add    BYTE PTR [rax],al
   1400056df:	add    BYTE PTR [rax+0x140004d],dh
   1400056e5:	add    BYTE PTR [rax],al
   1400056e7:	add    BYTE PTR [rax+0x0],ch
   1400056ea:	add    BYTE PTR [rax],al
   1400056ec:	add    BYTE PTR [rax],al
   1400056ee:	add    BYTE PTR [rax],al
   1400056f0:	rex.WRXB add BYTE PTR [r8],r8b
   1400056f3:	add    BYTE PTR [rax],al
   1400056f5:	add    BYTE PTR [rax],al
   1400056f7:	add    BYTE PTR [rax+0x140004d],ch
   1400056fd:	add    BYTE PTR [rax],al
   1400056ff:	add    BYTE PTR [rax+0x0],ch
   140005702:	add    BYTE PTR [rax],al
   140005704:	add    BYTE PTR [rax],al
   140005706:	add    BYTE PTR [rax],al
   140005708:	push   rax
   140005709:	add    BYTE PTR [rax],al
   14000570b:	add    BYTE PTR [rax],al
   14000570d:	add    BYTE PTR [rax],al
   14000570f:	add    BYTE PTR [rax+0x140004d],ah
   140005715:	add    BYTE PTR [rax],al
   140005717:	add    BYTE PTR [rax+0x0],ch
   14000571a:	add    BYTE PTR [rax],al
   14000571c:	add    BYTE PTR [rax],al
   14000571e:	add    BYTE PTR [rax],al
   140005720:	push   rcx
   140005721:	add    BYTE PTR [rax],al
   140005723:	add    BYTE PTR [rax],al
   140005725:	add    BYTE PTR [rax],al
   140005727:	add    BYTE PTR [rax+0x140004d],bl
   14000572d:	add    BYTE PTR [rax],al
   14000572f:	add    BYTE PTR [rax+0x0],ch
   140005732:	add    BYTE PTR [rax],al
   140005734:	add    BYTE PTR [rax],al
   140005736:	add    BYTE PTR [rax],al
   140005738:	push   rdx
   140005739:	add    BYTE PTR [rax],al
   14000573b:	add    BYTE PTR [rax],al
   14000573d:	add    BYTE PTR [rax],al
   14000573f:	add    BYTE PTR [rax+0x140004d],dl
   140005745:	add    BYTE PTR [rax],al
   140005747:	add    BYTE PTR [rax+0x0],ch
   14000574a:	add    BYTE PTR [rax],al
   14000574c:	add    BYTE PTR [rax],al
   14000574e:	add    BYTE PTR [rax],al
   140005750:	push   rbx
   140005751:	add    BYTE PTR [rax],al
   140005753:	add    BYTE PTR [rax],al
   140005755:	add    BYTE PTR [rax],al
   140005757:	add    BYTE PTR [rax+0x140004d],cl
   14000575d:	add    BYTE PTR [rax],al
   14000575f:	add    BYTE PTR [rax+0x0],ch
   140005762:	add    BYTE PTR [rax],al
   140005764:	add    BYTE PTR [rax],al
   140005766:	add    BYTE PTR [rax],al
   140005768:	push   rsp
   140005769:	add    BYTE PTR [rax],al
   14000576b:	add    BYTE PTR [rax],al
   14000576d:	add    BYTE PTR [rax],al
   14000576f:	add    BYTE PTR [rax+0x140004d],al
   140005775:	add    BYTE PTR [rax],al
   140005777:	add    BYTE PTR [rax+0x0],ch
   14000577a:	add    BYTE PTR [rax],al
   14000577c:	add    BYTE PTR [rax],al
   14000577e:	add    BYTE PTR [rax],al
   140005780:	push   rsi
   140005781:	add    BYTE PTR [rax],al
   140005783:	add    BYTE PTR [rax],al
   140005785:	add    BYTE PTR [rax],al
   140005787:	add    BYTE PTR [rax+0x4d],bh
   14000578a:	add    BYTE PTR [rax+0x1],al
   14000578d:	add    BYTE PTR [rax],al
   14000578f:	add    BYTE PTR [rax+0x0],ch
   140005792:	add    BYTE PTR [rax],al
   140005794:	add    BYTE PTR [rax],al
   140005796:	add    BYTE PTR [rax],al
   140005798:	push   rdi
   140005799:	add    BYTE PTR [rax],al
   14000579b:	add    BYTE PTR [rax],al
   14000579d:	add    BYTE PTR [rax],al
   14000579f:	add    BYTE PTR [rax+0x4d],dh
   1400057a2:	add    BYTE PTR [rax+0x1],al
   1400057a5:	add    BYTE PTR [rax],al
   1400057a7:	add    BYTE PTR [rax+0x0],ch
   1400057aa:	add    BYTE PTR [rax],al
   1400057ac:	add    BYTE PTR [rax],al
   1400057ae:	add    BYTE PTR [rax],al
   1400057b0:	pop    rdx
   1400057b1:	add    BYTE PTR [rax],al
   1400057b3:	add    BYTE PTR [rax],al
   1400057b5:	add    BYTE PTR [rax],al
   1400057b7:	add    BYTE PTR [rax+0x4d],ch
   1400057ba:	add    BYTE PTR [rax+0x1],al
   1400057bd:	add    BYTE PTR [rax],al
   1400057bf:	add    BYTE PTR [rax+0x0],ch
   1400057c2:	add    BYTE PTR [rax],al
   1400057c4:	add    BYTE PTR [rax],al
   1400057c6:	add    BYTE PTR [rax],al
   1400057c8:	pop    rbx
   1400057c9:	add    BYTE PTR [rax],al
   1400057cb:	add    BYTE PTR [rax],al
   1400057cd:	add    BYTE PTR [rax],al
   1400057cf:	add    BYTE PTR [rax+0x4d],ah
   1400057d2:	add    BYTE PTR [rax+0x1],al
   1400057d5:	add    BYTE PTR [rax],al
   1400057d7:	add    BYTE PTR [rax+0x0],ch
   1400057da:	add    BYTE PTR [rax],al
   1400057dc:	add    BYTE PTR [rax],al
   1400057de:	add    BYTE PTR [rax],al
   1400057e0:	pop    rbp
   1400057e1:	add    BYTE PTR [rax],al
   1400057e3:	add    BYTE PTR [rax],al
   1400057e5:	add    BYTE PTR [rax],al
   1400057e7:	add    BYTE PTR [rax+0x4d],bl
   1400057ea:	add    BYTE PTR [rax+0x1],al
   1400057ed:	add    BYTE PTR [rax],al
   1400057ef:	add    BYTE PTR [rax+0x0],ch
   1400057f2:	add    BYTE PTR [rax],al
   1400057f4:	add    BYTE PTR [rax],al
   1400057f6:	add    BYTE PTR [rax],al
   1400057f8:	pop    rsi
   1400057f9:	add    BYTE PTR [rax],al
   1400057fb:	add    BYTE PTR [rax],al
   1400057fd:	add    BYTE PTR [rax],al
   1400057ff:	add    BYTE PTR [rax+0x4d],dl
   140005802:	add    BYTE PTR [rax+0x1],al
   140005805:	add    BYTE PTR [rax],al
   140005807:	add    BYTE PTR [rax+0x0],ch
   14000580a:	add    BYTE PTR [rax],al
   14000580c:	add    BYTE PTR [rax],al
   14000580e:	add    BYTE PTR [rax],al
   140005810:	pop    rdi
   140005811:	add    BYTE PTR [rax],al
   140005813:	add    BYTE PTR [rax],al
   140005815:	add    BYTE PTR [rax],al
   140005817:	add    BYTE PTR [rax+0x4d],cl
   14000581a:	add    BYTE PTR [rax+0x1],al
   14000581d:	add    BYTE PTR [rax],al
   14000581f:	add    BYTE PTR [rax+0x0],ch
   140005822:	add    BYTE PTR [rax],al
   140005824:	add    BYTE PTR [rax],al
   140005826:	add    BYTE PTR [rax],al
   140005828:	(bad)  
   140005829:	add    BYTE PTR [rax],al
   14000582b:	add    BYTE PTR [rax],al
   14000582d:	add    BYTE PTR [rax],al
   14000582f:	add    BYTE PTR [rax+0x4d],al
   140005832:	add    BYTE PTR [rax+0x1],al
   140005835:	add    BYTE PTR [rax],al
   140005837:	add    BYTE PTR [rax+0x0],ch
   14000583a:	add    BYTE PTR [rax],al
   14000583c:	add    BYTE PTR [rax],al
   14000583e:	add    BYTE PTR [rax],al
   140005840:	(bad)  
   140005841:	add    BYTE PTR [rax],al
   140005843:	add    BYTE PTR [rax],al
   140005845:	add    BYTE PTR [rax],al
   140005847:	add    BYTE PTR [rax],bh
   140005849:	rex.WRB add BYTE PTR [r8+0x1],r8b
   14000584d:	add    BYTE PTR [rax],al
   14000584f:	add    BYTE PTR [rax+0x0],ch
   140005852:	add    BYTE PTR [rax],al
   140005854:	add    BYTE PTR [rax],al
   140005856:	add    BYTE PTR [rax],al
   140005858:	movsxd eax,DWORD PTR [rax]
   14000585a:	add    BYTE PTR [rax],al
   14000585c:	add    BYTE PTR [rax],al
   14000585e:	add    BYTE PTR [rax],al
   140005860:	xor    BYTE PTR [rbp+0x0],cl
   140005863:	rex add DWORD PTR [rax],eax
   140005866:	add    BYTE PTR [rax],al
   140005868:	push   0x0
   14000586d:	add    BYTE PTR [rax],al
   14000586f:	add    BYTE PTR [rax+rax*1+0x0],ah
   140005873:	add    BYTE PTR [rax],al
   140005875:	add    BYTE PTR [rax],al
   140005877:	add    BYTE PTR [rax],ch
   140005879:	rex.WRB add BYTE PTR [r8+0x1],r8b
   14000587d:	add    BYTE PTR [rax],al
   14000587f:	add    BYTE PTR [rax+0x0],ch
   140005882:	add    BYTE PTR [rax],al
   140005884:	add    BYTE PTR [rax],al
   140005886:	add    BYTE PTR [rax],al
   140005888:	add    BYTE PTR gs:[rax],al
   14000588b:	add    BYTE PTR [rax],al
   14000588d:	add    BYTE PTR [rax],al
   14000588f:	add    BYTE PTR [rax],ah
   140005891:	rex.WRB add BYTE PTR [r8+0x1],r8b
   140005895:	add    BYTE PTR [rax],al
   140005897:	add    BYTE PTR [rax+0x0],ch
   14000589a:	add    BYTE PTR [rax],al
   14000589c:	add    BYTE PTR [rax],al
   14000589e:	add    BYTE PTR [rax],al
   1400058a0:	push   0x0
   1400058a5:	add    BYTE PTR [rax],al
   1400058a7:	add    BYTE PTR [rax],bl
   1400058a9:	rex.WRB add BYTE PTR [r8+0x1],r8b
   1400058ad:	add    BYTE PTR [rax],al
   1400058af:	add    BYTE PTR [rax+0x0],ch
   1400058b2:	add    BYTE PTR [rax],al
   1400058b4:	add    BYTE PTR [rax],al
   1400058b6:	add    BYTE PTR [rax],al
   1400058b8:	push   0x0
   1400058ba:	add    BYTE PTR [rax],al
   1400058bc:	add    BYTE PTR [rax],al
   1400058be:	add    BYTE PTR [rax],al
   1400058c0:	adc    BYTE PTR [rbp+0x0],cl
   1400058c3:	rex add DWORD PTR [rax],eax
   1400058c6:	add    BYTE PTR [rax],al
   1400058c8:	push   0x0
   1400058cd:	add    BYTE PTR [rax],al
   1400058cf:	add    BYTE PTR [rbx+0x0],ch
   1400058d2:	add    BYTE PTR [rax],al
   1400058d4:	add    BYTE PTR [rax],al
   1400058d6:	add    BYTE PTR [rax],al
   1400058d8:	or     BYTE PTR [rbp+0x0],cl
   1400058db:	rex add DWORD PTR [rax],eax
   1400058de:	add    BYTE PTR [rax],al
   1400058e0:	push   0x0
   1400058e5:	add    BYTE PTR [rax],al
   1400058e7:	add    BYTE PTR [rax+rax*1+0x0],ch
   1400058eb:	add    BYTE PTR [rax],al
   1400058ed:	add    BYTE PTR [rax],al
   1400058ef:	add    BYTE PTR [rax],al
   1400058f1:	rex.WRB add BYTE PTR [r8+0x1],r8b
   1400058f5:	add    BYTE PTR [rax],al
   1400058f7:	add    BYTE PTR [rax+0x0],ch
   1400058fa:	add    BYTE PTR [rax],al
   1400058fc:	add    BYTE PTR [rax],al
   1400058fe:	add    BYTE PTR [rax],al
   140005900:	ins    DWORD PTR es:[rdi],dx
   140005901:	add    BYTE PTR [rax],al
   140005903:	add    BYTE PTR [rax],al
   140005905:	add    BYTE PTR [rax],al
   140005907:	add    al,bh
   140005909:	rex.WR add BYTE PTR [rax+0x1],r8b
   14000590d:	add    BYTE PTR [rax],al
   14000590f:	add    BYTE PTR [rax+0x0],ch
   140005912:	add    BYTE PTR [rax],al
   140005914:	add    BYTE PTR [rax],al
   140005916:	add    BYTE PTR [rax],al
   140005918:	outs   dx,BYTE PTR ds:[rsi]
   140005919:	add    BYTE PTR [rax],al
   14000591b:	add    BYTE PTR [rax],al
   14000591d:	add    BYTE PTR [rax],al
   14000591f:	add    al,dh
   140005921:	rex.WR add BYTE PTR [rax+0x1],r8b
   140005925:	add    BYTE PTR [rax],al
   140005927:	add    BYTE PTR [rax+0x0],ch
   14000592a:	add    BYTE PTR [rax],al
   14000592c:	add    BYTE PTR [rax],al
   14000592e:	add    BYTE PTR [rax],al
   140005930:	outs   dx,DWORD PTR ds:[rsi]
   140005931:	add    BYTE PTR [rax],al
   140005933:	add    BYTE PTR [rax],al
   140005935:	add    BYTE PTR [rax],al
   140005937:	add    al,ch
   140005939:	rex.WR add BYTE PTR [rax+0x1],r8b
   14000593d:	add    BYTE PTR [rax],al
   14000593f:	add    BYTE PTR [rax+0x0],ch
   140005942:	add    BYTE PTR [rax],al
   140005944:	add    BYTE PTR [rax],al
   140005946:	add    BYTE PTR [rax],al
   140005948:	jo     0x14000594a
   14000594a:	add    BYTE PTR [rax],al
   14000594c:	add    BYTE PTR [rax],al
   14000594e:	add    BYTE PTR [rax],al
   140005950:	loopne 0x14000599e
   140005952:	add    BYTE PTR [rax+0x1],al
   140005955:	add    BYTE PTR [rax],al
   140005957:	add    BYTE PTR [rax+0x0],ch
   14000595a:	add    BYTE PTR [rax],al
   14000595c:	add    BYTE PTR [rax],al
   14000595e:	add    BYTE PTR [rax],al
   140005960:	js     0x140005962
   140005962:	add    BYTE PTR [rax],al
   140005964:	add    BYTE PTR [rax],al
   140005966:	add    BYTE PTR [rax],al
   140005968:	fmul   DWORD PTR [rax+rax*1+0x40]
   14000596c:	add    DWORD PTR [rax],eax
   14000596e:	add    BYTE PTR [rax],al
   140005970:	push   0x0
   140005975:	add    BYTE PTR [rax],al
   140005977:	add    BYTE PTR [rdx+0x0],bh
   14000597a:	add    BYTE PTR [rax],al
   14000597c:	add    BYTE PTR [rax],al
   14000597e:	add    BYTE PTR [rax],al
   140005980:	ror    BYTE PTR [rax+rax*1+0x40],1
   140005984:	add    DWORD PTR [rax],eax
   140005986:	add    BYTE PTR [rax],al
   140005988:	push   0x0
   14000598d:	add    BYTE PTR [rax],al
   14000598f:	add    BYTE PTR [rax+rax*1+0x0],bh
   140005993:	add    BYTE PTR [rax],al
   140005995:	add    BYTE PTR [rax],al
   140005997:	add    al,cl
   140005999:	rex.WR add BYTE PTR [rax+0x1],r8b
   14000599d:	add    BYTE PTR [rax],al
   14000599f:	add    BYTE PTR [rax+0x0],ch
   1400059a2:	add    BYTE PTR [rax],al
   1400059a4:	add    BYTE PTR [rax],al
   1400059a6:	add    BYTE PTR [rax],al
   1400059a8:	jle    0x1400059aa
   1400059aa:	add    BYTE PTR [rax],al
   1400059ac:	add    BYTE PTR [rax],al
   1400059ae:	add    BYTE PTR [rax],al
   1400059b0:	ror    BYTE PTR [rax+rax*1+0x40],0x1
   1400059b5:	add    BYTE PTR [rax],al
   1400059b7:	add    BYTE PTR [rax+0x0],ch
   1400059ba:	add    BYTE PTR [rax],al
   1400059bc:	add    BYTE PTR [rax],al
   1400059be:	add    BYTE PTR [rax],al
   1400059c0:	jg     0x1400059c2
   1400059c2:	add    BYTE PTR [rax],al
   1400059c4:	add    BYTE PTR [rax],al
   1400059c6:	add    BYTE PTR [rax],al
   1400059c8:	mov    al,BYTE PTR [rax]
   1400059cb:	rex add DWORD PTR [rax],eax
   1400059ce:	add    BYTE PTR [rax],al
   1400059d0:	push   0x0
   1400059d5:	add    BYTE PTR [rax],al
   1400059d7:	add    BYTE PTR [rax+0x0],al
   1400059dd:	add    BYTE PTR [rax],al
   1400059df:	add    BYTE PTR [rax+0x140004c],bh
   1400059e5:	add    BYTE PTR [rax],al
   1400059e7:	add    BYTE PTR [rax+0x0],ch
   1400059ea:	add    BYTE PTR [rax],al
   1400059ec:	add    BYTE PTR [rax],al
   1400059ee:	add    BYTE PTR [rax],al
   1400059f0:	add    DWORD PTR [rax],0x0
   1400059f6:	add    BYTE PTR [rax],al
   1400059f8:	mov    al,0x4c
   1400059fa:	add    BYTE PTR [rax+0x1],al
   1400059fd:	add    BYTE PTR [rax],al
   1400059ff:	add    BYTE PTR [rax+0x0],ch
   140005a02:	add    BYTE PTR [rax],al
   140005a04:	add    BYTE PTR [rax],al
   140005a06:	add    BYTE PTR [rax],al
   140005a08:	(bad)  
   140005a09:	add    BYTE PTR [rax],al
   140005a0b:	add    BYTE PTR [rax],al
   140005a0d:	add    BYTE PTR [rax],al
   140005a0f:	add    BYTE PTR [rax+0x140004c],ch
   140005a15:	add    BYTE PTR [rax],al
   140005a17:	add    BYTE PTR [rax+0x0],ch
   140005a1a:	add    BYTE PTR [rax],al
   140005a1c:	add    BYTE PTR [rax],al
   140005a1e:	add    BYTE PTR [rax],al
   140005a20:	add    DWORD PTR [rax],0x0
   140005a23:	add    BYTE PTR [rax],al
   140005a25:	add    BYTE PTR [rax],al
   140005a27:	add    BYTE PTR [rax+0x140004c],ah
   140005a2d:	add    BYTE PTR [rax],al
   140005a2f:	add    BYTE PTR [rax+0x0],ch
   140005a32:	add    BYTE PTR [rax],al
   140005a34:	add    BYTE PTR [rax],al
   140005a36:	add    BYTE PTR [rax],al
   140005a38:	test   BYTE PTR [rax],al
   140005a3a:	add    BYTE PTR [rax],al
   140005a3c:	add    BYTE PTR [rax],al
   140005a3e:	add    BYTE PTR [rax],al
   140005a40:	cwde   
   140005a41:	rex.WR add BYTE PTR [rax+0x1],r8b
   140005a45:	add    BYTE PTR [rax],al
   140005a47:	add    BYTE PTR [rax+0x0],ch
   140005a4a:	add    BYTE PTR [rax],al
   140005a4c:	add    BYTE PTR [rax],al
   140005a4e:	add    BYTE PTR [rax],al
   140005a50:	test   DWORD PTR [rax],eax
   140005a52:	add    BYTE PTR [rax],al
   140005a54:	add    BYTE PTR [rax],al
   140005a56:	add    BYTE PTR [rax],al
   140005a58:	nop
   140005a59:	rex.WR add BYTE PTR [rax+0x1],r8b
   140005a5d:	add    BYTE PTR [rax],al
   140005a5f:	add    BYTE PTR [rax+0x0],ch
   140005a62:	add    BYTE PTR [rax],al
   140005a64:	add    BYTE PTR [rax],al
   140005a66:	add    BYTE PTR [rax],al
   140005a68:	xchg   BYTE PTR [rax],al
   140005a6a:	add    BYTE PTR [rax],al
   140005a6c:	add    BYTE PTR [rax],al
   140005a6e:	add    BYTE PTR [rax],al
   140005a70:	mov    BYTE PTR [rax+rax*1+0x40],cl
   140005a74:	add    DWORD PTR [rax],eax
   140005a76:	add    BYTE PTR [rax],al
   140005a78:	push   0x0
   140005a7d:	add    BYTE PTR [rax],al
   140005a7f:	add    BYTE PTR [rdi+0x0],al
   140005a85:	add    BYTE PTR [rax],al
   140005a87:	add    BYTE PTR [rax+0x140004c],al
   140005a8d:	add    BYTE PTR [rax],al
   140005a8f:	add    BYTE PTR [rax+0x0],ch
   140005a92:	add    BYTE PTR [rax],al
   140005a94:	add    BYTE PTR [rax],al
   140005a96:	add    BYTE PTR [rax],al
   140005a98:	mov    BYTE PTR [rax],al
   140005a9a:	add    BYTE PTR [rax],al
   140005a9c:	add    BYTE PTR [rax],al
   140005a9e:	add    BYTE PTR [rax],al
   140005aa0:	js     0x140005aee
   140005aa2:	add    BYTE PTR [rax+0x1],al
   140005aa5:	add    BYTE PTR [rax],al
   140005aa7:	add    BYTE PTR [rax+0x0],ch
   140005aaa:	add    BYTE PTR [rax],al
   140005aac:	add    BYTE PTR [rax],al
   140005aae:	add    BYTE PTR [rax],al
   140005ab0:	mov    WORD PTR [rax],es
   140005ab2:	add    BYTE PTR [rax],al
   140005ab4:	add    BYTE PTR [rax],al
   140005ab6:	add    BYTE PTR [rax],al
   140005ab8:	jo     0x140005b06
   140005aba:	add    BYTE PTR [rax+0x1],al
   140005abd:	add    BYTE PTR [rax],al
   140005abf:	add    BYTE PTR [rax+0x0],ch
   140005ac2:	add    BYTE PTR [rax],al
   140005ac4:	add    BYTE PTR [rax],al
   140005ac6:	add    BYTE PTR [rax],al
   140005ac8:	xchg   ecx,eax
   140005ac9:	add    BYTE PTR [rax],al
   140005acb:	add    BYTE PTR [rax],al
   140005acd:	add    BYTE PTR [rax],al
   140005acf:	add    BYTE PTR [rsp+rcx*2+0x0],ah
   140005ad3:	rex add DWORD PTR [rax],eax
   140005ad6:	add    BYTE PTR [rax],al
   140005ad8:	push   0x0
   140005add:	add    BYTE PTR [rax],al
   140005adf:	add    BYTE PTR [rcx],al
   140005ae1:	add    al,0x0
   140005ae3:	add    BYTE PTR [rax],al
   140005ae5:	add    BYTE PTR [rax],al
   140005ae7:	add    BYTE PTR [rax+0x4c],bl
   140005aea:	add    BYTE PTR [rax+0x1],al
	...
   140005af5:	add    BYTE PTR [rax],al
   140005af7:	add    BYTE PTR [rdx],al
   140005af9:	add    al,0x0
   140005afb:	add    BYTE PTR [rax],al
   140005afd:	add    BYTE PTR [rax],al
   140005aff:	add    BYTE PTR [rax+0x4c],cl
   140005b02:	add    BYTE PTR [rax+0x1],al
   140005b05:	add    BYTE PTR [rax],al
   140005b07:	add    BYTE PTR [rcx],al
   140005b09:	add    BYTE PTR [rax],al
   140005b0b:	add    BYTE PTR [rax],al
   140005b0d:	add    BYTE PTR [rax],al
   140005b0f:	add    BYTE PTR [rbx],al
   140005b11:	add    al,0x0
   140005b13:	add    BYTE PTR [rax],al
   140005b15:	add    BYTE PTR [rax],al
   140005b17:	add    BYTE PTR [rax],bh
   140005b19:	rex.WR add BYTE PTR [rax+0x1],r8b
   140005b1d:	add    BYTE PTR [rax],al
   140005b1f:	add    BYTE PTR [rdx],al
   140005b21:	add    BYTE PTR [rax],al
   140005b23:	add    BYTE PTR [rax],al
   140005b25:	add    BYTE PTR [rax],al
   140005b27:	add    BYTE PTR [rsp+rax*1],al
   140005b2a:	add    BYTE PTR [rax],al
   140005b2c:	add    BYTE PTR [rax],al
   140005b2e:	add    BYTE PTR [rax],al
   140005b30:	sub    BYTE PTR [rax+rax*1+0x40],cl
   140005b34:	add    DWORD PTR [rax],eax
   140005b36:	add    BYTE PTR [rax],al
   140005b38:	pop    rcx
   140005b39:	add    DWORD PTR [rax],eax
   140005b3b:	add    BYTE PTR [rax],al
   140005b3d:	add    BYTE PTR [rax],al
   140005b3f:	add    BYTE PTR [rip+0x4],al        # 0x140005b49
   140005b45:	add    BYTE PTR [rax],al
   140005b47:	add    BYTE PTR [rax],bl
   140005b49:	rex.WR add BYTE PTR [rax+0x1],r8b
   140005b4d:	add    BYTE PTR [rax],al
   140005b4f:	add    BYTE PTR [rax+rax*1],al
   140005b52:	add    BYTE PTR [rax],al
   140005b54:	add    BYTE PTR [rax],al
   140005b56:	add    BYTE PTR [rax],al
   140005b58:	(bad)  
   140005b59:	add    al,0x0
   140005b5b:	add    BYTE PTR [rax],al
   140005b5d:	add    BYTE PTR [rax],al
   140005b5f:	add    BYTE PTR [rax],cl
   140005b61:	rex.WR add BYTE PTR [rax+0x1],r8b
   140005b65:	add    BYTE PTR [rax],al
   140005b67:	add    BYTE PTR [rip+0x0],al        # 0x140005b6d
   140005b6d:	add    BYTE PTR [rax],al
   140005b6f:	add    BYTE PTR [rdi],al
   140005b71:	add    al,0x0
   140005b73:	add    BYTE PTR [rax],al
   140005b75:	add    BYTE PTR [rax],al
   140005b77:	add    al,bh
   140005b79:	rex.WXB add BYTE PTR [r8+0x1],al
   140005b7d:	add    BYTE PTR [rax],al
   140005b7f:	add    BYTE PTR [rsi],al
   140005b81:	add    BYTE PTR [rax],al
   140005b83:	add    BYTE PTR [rax],al
   140005b85:	add    BYTE PTR [rax],al
   140005b87:	add    BYTE PTR [rax],cl
   140005b89:	add    al,0x0
   140005b8b:	add    BYTE PTR [rax],al
   140005b8d:	add    BYTE PTR [rax],al
   140005b8f:	add    al,ch
   140005b91:	rex.WXB add BYTE PTR [r8+0x1],al
   140005b95:	add    BYTE PTR [rax],al
   140005b97:	add    BYTE PTR [rdi],al
   140005b99:	add    BYTE PTR [rax],al
   140005b9b:	add    BYTE PTR [rax],al
   140005b9d:	add    BYTE PTR [rax],al
   140005b9f:	add    BYTE PTR [rcx],cl
   140005ba1:	add    al,0x0
   140005ba3:	add    BYTE PTR [rax],al
   140005ba5:	add    BYTE PTR [rax],al
   140005ba7:	add    al,bl
   140005ba9:	rex.WXB add BYTE PTR [r8+0x1],al
   140005bad:	add    BYTE PTR [rax],al
   140005baf:	add    BYTE PTR [rax],cl
   140005bb1:	add    BYTE PTR [rax],al
   140005bb3:	add    BYTE PTR [rax],al
   140005bb5:	add    BYTE PTR [rax],al
   140005bb7:	add    BYTE PTR [rdx],cl
   140005bb9:	add    al,0x0
   140005bbb:	add    BYTE PTR [rax],al
   140005bbd:	add    BYTE PTR [rax],al
   140005bbf:	add    BYTE PTR [rax+0x140004b],bh
   140005bc5:	add    BYTE PTR [rax],al
   140005bc7:	add    BYTE PTR [rcx],cl
   140005bc9:	add    BYTE PTR [rax],al
   140005bcb:	add    BYTE PTR [rax],al
   140005bcd:	add    BYTE PTR [rax],al
   140005bcf:	add    BYTE PTR [rbx],cl
   140005bd1:	add    al,0x0
   140005bd3:	add    BYTE PTR [rax],al
   140005bd5:	add    BYTE PTR [rax],al
   140005bd7:	add    BYTE PTR [rax+0x140004b],ch
   140005bdd:	add    BYTE PTR [rax],al
   140005bdf:	add    BYTE PTR [rdx],cl
   140005be1:	add    BYTE PTR [rax],al
   140005be3:	add    BYTE PTR [rax],al
   140005be5:	add    BYTE PTR [rax],al
   140005be7:	add    BYTE PTR [rsp+rax*1],cl
   140005bea:	add    BYTE PTR [rax],al
   140005bec:	add    BYTE PTR [rax],al
   140005bee:	add    BYTE PTR [rax],al
   140005bf0:	cwde   
   140005bf1:	rex.WXB add BYTE PTR [r8+0x1],al
   140005bf5:	add    BYTE PTR [rax],al
   140005bf7:	add    BYTE PTR [rbx],cl
   140005bf9:	add    BYTE PTR [rax],al
   140005bfb:	add    BYTE PTR [rax],al
   140005bfd:	add    BYTE PTR [rax],al
   140005bff:	add    BYTE PTR [rip+0x4],cl        # 0x140005c09
   140005c05:	add    BYTE PTR [rax],al
   140005c07:	add    BYTE PTR [rax+0x140004b],cl
   140005c0d:	add    BYTE PTR [rax],al
   140005c0f:	add    BYTE PTR [rax+rax*1],cl
   140005c12:	add    BYTE PTR [rax],al
   140005c14:	add    BYTE PTR [rax],al
   140005c16:	add    BYTE PTR [rax],al
   140005c18:	(bad)  
   140005c19:	add    al,0x0
   140005c1b:	add    BYTE PTR [rax],al
   140005c1d:	add    BYTE PTR [rax],al
   140005c1f:	add    BYTE PTR [rax+0x4b],bh
   140005c22:	add    BYTE PTR [rax+0x1],al
   140005c25:	add    BYTE PTR [rax],al
   140005c27:	add    BYTE PTR [rip+0x0],cl        # 0x140005c2d
   140005c2d:	add    BYTE PTR [rax],al
   140005c2f:	add    BYTE PTR [rdi],cl
   140005c31:	add    al,0x0
   140005c33:	add    BYTE PTR [rax],al
   140005c35:	add    BYTE PTR [rax],al
   140005c37:	add    BYTE PTR [rax+0x4b],ch
   140005c3a:	add    BYTE PTR [rax+0x1],al
   140005c3d:	add    BYTE PTR [rax],al
   140005c3f:	add    BYTE PTR [rsi],cl
   140005c41:	add    BYTE PTR [rax],al
   140005c43:	add    BYTE PTR [rax],al
   140005c45:	add    BYTE PTR [rax],al
   140005c47:	add    BYTE PTR [rax],dl
   140005c49:	add    al,0x0
   140005c4b:	add    BYTE PTR [rax],al
   140005c4d:	add    BYTE PTR [rax],al
   140005c4f:	add    BYTE PTR [rax+0x4b],bl
   140005c52:	add    BYTE PTR [rax+0x1],al
   140005c55:	add    BYTE PTR [rax],al
   140005c57:	add    BYTE PTR [rdi],cl
   140005c59:	add    BYTE PTR [rax],al
   140005c5b:	add    BYTE PTR [rax],al
   140005c5d:	add    BYTE PTR [rax],al
   140005c5f:	add    BYTE PTR [rcx],dl
   140005c61:	add    al,0x0
   140005c63:	add    BYTE PTR [rax],al
   140005c65:	add    BYTE PTR [rax],al
   140005c67:	add    BYTE PTR [rax+0x4b],cl
   140005c6a:	add    BYTE PTR [rax+0x1],al
   140005c6d:	add    BYTE PTR [rax],al
   140005c6f:	add    BYTE PTR [rax],dl
   140005c71:	add    BYTE PTR [rax],al
   140005c73:	add    BYTE PTR [rax],al
   140005c75:	add    BYTE PTR [rax],al
   140005c77:	add    BYTE PTR [rdx],dl
   140005c79:	add    al,0x0
   140005c7b:	add    BYTE PTR [rax],al
   140005c7d:	add    BYTE PTR [rax],al
   140005c7f:	add    BYTE PTR [rax],bh
   140005c81:	rex.WXB add BYTE PTR [r8+0x1],al
   140005c85:	add    BYTE PTR [rax],al
   140005c87:	add    BYTE PTR [rcx],dl
   140005c89:	add    BYTE PTR [rax],al
   140005c8b:	add    BYTE PTR [rax],al
   140005c8d:	add    BYTE PTR [rax],al
   140005c8f:	add    BYTE PTR [rbx],dl
   140005c91:	add    al,0x0
   140005c93:	add    BYTE PTR [rax],al
   140005c95:	add    BYTE PTR [rax],al
   140005c97:	add    BYTE PTR [rax],ch
   140005c99:	rex.WXB add BYTE PTR [r8+0x1],al
   140005c9d:	add    BYTE PTR [rax],al
   140005c9f:	add    BYTE PTR [rdx],dl
   140005ca1:	add    BYTE PTR [rax],al
   140005ca3:	add    BYTE PTR [rax],al
   140005ca5:	add    BYTE PTR [rax],al
   140005ca7:	add    BYTE PTR [rsp+rax*1],dl
   140005caa:	add    BYTE PTR [rax],al
   140005cac:	add    BYTE PTR [rax],al
   140005cae:	add    BYTE PTR [rax],al
   140005cb0:	sbb    BYTE PTR [rbx+0x0],cl
   140005cb3:	rex add DWORD PTR [rax],eax
   140005cb6:	add    BYTE PTR [rax],al
   140005cb8:	pop    rdx
   140005cb9:	add    DWORD PTR [rax],eax
   140005cbb:	add    BYTE PTR [rax],al
   140005cbd:	add    BYTE PTR [rax],al
   140005cbf:	add    BYTE PTR [rip+0x4],dl        # 0x140005cc9
   140005cc5:	add    BYTE PTR [rax],al
   140005cc7:	add    BYTE PTR [rax],cl
   140005cc9:	rex.WXB add BYTE PTR [r8+0x1],al
   140005ccd:	add    BYTE PTR [rax],al
   140005ccf:	add    BYTE PTR [rax+rax*1],dl
   140005cd2:	add    BYTE PTR [rax],al
   140005cd4:	add    BYTE PTR [rax],al
   140005cd6:	add    BYTE PTR [rax],al
   140005cd8:	(bad)  
   140005cd9:	add    al,0x0
   140005cdb:	add    BYTE PTR [rax],al
   140005cdd:	add    BYTE PTR [rax],al
   140005cdf:	add    al,bh
   140005ce1:	rex.WX add BYTE PTR [rax+0x1],al
   140005ce5:	add    BYTE PTR [rax],al
   140005ce7:	add    BYTE PTR [rip+0x0],dl        # 0x140005ced
   140005ced:	add    BYTE PTR [rax],al
   140005cef:	add    BYTE PTR [rdi],dl
   140005cf1:	add    al,0x0
   140005cf3:	add    BYTE PTR [rax],al
   140005cf5:	add    BYTE PTR [rax],al
   140005cf7:	add    al,ch
   140005cf9:	rex.WX add BYTE PTR [rax+0x1],al
   140005cfd:	add    BYTE PTR [rax],al
   140005cff:	add    BYTE PTR [rsi],dl
   140005d01:	add    BYTE PTR [rax],al
   140005d03:	add    BYTE PTR [rax],al
   140005d05:	add    BYTE PTR [rax],al
   140005d07:	add    BYTE PTR [rax],bl
   140005d09:	add    al,0x0
   140005d0b:	add    BYTE PTR [rax],al
   140005d0d:	add    BYTE PTR [rax],al
   140005d0f:	add    al,bl
   140005d11:	rex.WX add BYTE PTR [rax+0x1],al
   140005d15:	add    BYTE PTR [rax],al
   140005d17:	add    BYTE PTR [rdi],dl
   140005d19:	add    BYTE PTR [rax],al
   140005d1b:	add    BYTE PTR [rax],al
   140005d1d:	add    BYTE PTR [rax],al
   140005d1f:	add    BYTE PTR [rcx],bl
   140005d21:	add    al,0x0
   140005d23:	add    BYTE PTR [rax],al
   140005d25:	add    BYTE PTR [rax],al
   140005d27:	add    al,cl
   140005d29:	rex.WX add BYTE PTR [rax+0x1],al
   140005d2d:	add    BYTE PTR [rax],al
   140005d2f:	add    BYTE PTR [rax],bl
   140005d31:	add    BYTE PTR [rax],al
   140005d33:	add    BYTE PTR [rax],al
   140005d35:	add    BYTE PTR [rax],al
   140005d37:	add    BYTE PTR [rdx],bl
   140005d39:	add    al,0x0
   140005d3b:	add    BYTE PTR [rax],al
   140005d3d:	add    BYTE PTR [rax],al
   140005d3f:	add    BYTE PTR [rax+0x140004a],bh
   140005d45:	add    BYTE PTR [rax],al
   140005d47:	add    BYTE PTR [rcx],bl
   140005d49:	add    BYTE PTR [rax],al
   140005d4b:	add    BYTE PTR [rax],al
   140005d4d:	add    BYTE PTR [rax],al
   140005d4f:	add    BYTE PTR [rbx],bl
   140005d51:	add    al,0x0
   140005d53:	add    BYTE PTR [rax],al
   140005d55:	add    BYTE PTR [rax],al
   140005d57:	add    BYTE PTR [rax+0x140004a],ch
   140005d5d:	add    BYTE PTR [rax],al
   140005d5f:	add    BYTE PTR [rdx],bl
   140005d61:	add    BYTE PTR [rax],al
   140005d63:	add    BYTE PTR [rax],al
   140005d65:	add    BYTE PTR [rax],al
   140005d67:	add    BYTE PTR [rsp+rax*1],bl
   140005d6a:	add    BYTE PTR [rax],al
   140005d6c:	add    BYTE PTR [rax],al
   140005d6e:	add    BYTE PTR [rax],al
   140005d70:	cwde   
   140005d71:	rex.WX add BYTE PTR [rax+0x1],al
   140005d75:	add    BYTE PTR [rax],al
   140005d77:	add    BYTE PTR [rbx],bl
   140005d79:	add    BYTE PTR [rax],al
   140005d7b:	add    BYTE PTR [rax],al
   140005d7d:	add    BYTE PTR [rax],al
   140005d7f:	add    BYTE PTR [rip+0x4],bl        # 0x140005d89
   140005d85:	add    BYTE PTR [rax],al
   140005d87:	add    BYTE PTR [rax+0x140004a],cl
   140005d8d:	add    BYTE PTR [rax],al
   140005d8f:	add    BYTE PTR [rax+rax*1],bl
   140005d92:	add    BYTE PTR [rax],al
   140005d94:	add    BYTE PTR [rax],al
   140005d96:	add    BYTE PTR [rax],al
   140005d98:	(bad)  
   140005d99:	add    al,0x0
   140005d9b:	add    BYTE PTR [rax],al
   140005d9d:	add    BYTE PTR [rax],al
   140005d9f:	add    BYTE PTR [rax+0x4a],bh
   140005da2:	add    BYTE PTR [rax+0x1],al
   140005da5:	add    BYTE PTR [rax],al
   140005da7:	add    BYTE PTR [rip+0x0],bl        # 0x140005dad
   140005dad:	add    BYTE PTR [rax],al
   140005daf:	add    BYTE PTR [rdi],bl
   140005db1:	add    al,0x0
   140005db3:	add    BYTE PTR [rax],al
   140005db5:	add    BYTE PTR [rax],al
   140005db7:	add    BYTE PTR [rax+0x4a],ch
   140005dba:	add    BYTE PTR [rax+0x1],al
   140005dbd:	add    BYTE PTR [rax],al
   140005dbf:	add    BYTE PTR [rsi],bl
   140005dc1:	add    BYTE PTR [rax],al
   140005dc3:	add    BYTE PTR [rax],al
   140005dc5:	add    BYTE PTR [rax],al
   140005dc7:	add    BYTE PTR [rax],ah
   140005dc9:	add    al,0x0
   140005dcb:	add    BYTE PTR [rax],al
   140005dcd:	add    BYTE PTR [rax],al
   140005dcf:	add    BYTE PTR [rax+0x4a],bl
   140005dd2:	add    BYTE PTR [rax+0x1],al
   140005dd5:	add    BYTE PTR [rax],al
   140005dd7:	add    BYTE PTR [rdi],bl
   140005dd9:	add    BYTE PTR [rax],al
   140005ddb:	add    BYTE PTR [rax],al
   140005ddd:	add    BYTE PTR [rax],al
   140005ddf:	add    BYTE PTR [rcx],ah
   140005de1:	add    al,0x0
   140005de3:	add    BYTE PTR [rax],al
   140005de5:	add    BYTE PTR [rax],al
   140005de7:	add    BYTE PTR [rax+0x4a],cl
   140005dea:	add    BYTE PTR [rax+0x1],al
   140005ded:	add    BYTE PTR [rax],al
   140005def:	add    BYTE PTR [rax],ah
   140005df1:	add    BYTE PTR [rax],al
   140005df3:	add    BYTE PTR [rax],al
   140005df5:	add    BYTE PTR [rax],al
   140005df7:	add    BYTE PTR [rdx],ah
   140005df9:	add    al,0x0
   140005dfb:	add    BYTE PTR [rax],al
   140005dfd:	add    BYTE PTR [rax],al
   140005dff:	add    BYTE PTR [rax],bh
   140005e01:	rex.WX add BYTE PTR [rax+0x1],al
   140005e05:	add    BYTE PTR [rax],al
   140005e07:	add    BYTE PTR [rcx],ah
   140005e09:	add    BYTE PTR [rax],al
   140005e0b:	add    BYTE PTR [rax],al
   140005e0d:	add    BYTE PTR [rax],al
   140005e0f:	add    BYTE PTR [rbx],ah
   140005e11:	add    al,0x0
   140005e13:	add    BYTE PTR [rax],al
   140005e15:	add    BYTE PTR [rax],al
   140005e17:	add    BYTE PTR [rax],ch
   140005e19:	rex.WX add BYTE PTR [rax+0x1],al
   140005e1d:	add    BYTE PTR [rax],al
   140005e1f:	add    BYTE PTR [rdx],ah
   140005e21:	add    BYTE PTR [rax],al
   140005e23:	add    BYTE PTR [rax],al
   140005e25:	add    BYTE PTR [rax],al
   140005e27:	add    BYTE PTR [rsp+rax*1],ah
   140005e2a:	add    BYTE PTR [rax],al
   140005e2c:	add    BYTE PTR [rax],al
   140005e2e:	add    BYTE PTR [rax],al
   140005e30:	sbb    BYTE PTR [rdx+0x0],cl
   140005e33:	rex add DWORD PTR [rax],eax
   140005e36:	add    BYTE PTR [rax],al
   140005e38:	and    eax,DWORD PTR [rax]
   140005e3a:	add    BYTE PTR [rax],al
   140005e3c:	add    BYTE PTR [rax],al
   140005e3e:	add    BYTE PTR [rax],al
   140005e40:	and    eax,0x4
   140005e45:	add    BYTE PTR [rax],al
   140005e47:	add    BYTE PTR [rax],cl
   140005e49:	rex.WX add BYTE PTR [rax+0x1],al
   140005e4d:	add    BYTE PTR [rax],al
   140005e4f:	add    BYTE PTR [rax+rax*1],ah
   140005e52:	add    BYTE PTR [rax],al
   140005e54:	add    BYTE PTR [rax],al
   140005e56:	add    BYTE PTR [rax],al
   140005e58:	es add al,0x0
   140005e5b:	add    BYTE PTR [rax],al
   140005e5d:	add    BYTE PTR [rax],al
   140005e5f:	add    al,bh
   140005e61:	rex.WB add BYTE PTR [r8+0x1],al
   140005e65:	add    BYTE PTR [rax],al
   140005e67:	add    BYTE PTR [rip+0x0],ah        # 0x140005e6d
   140005e6d:	add    BYTE PTR [rax],al
   140005e6f:	add    BYTE PTR [rdi],ah
   140005e71:	add    al,0x0
   140005e73:	add    BYTE PTR [rax],al
   140005e75:	add    BYTE PTR [rax],al
   140005e77:	add    al,ch
   140005e79:	rex.WB add BYTE PTR [r8+0x1],al
   140005e7d:	add    BYTE PTR [rax],al
   140005e7f:	add    BYTE PTR [rsi],ah
   140005e81:	add    BYTE PTR [rax],al
   140005e83:	add    BYTE PTR [rax],al
   140005e85:	add    BYTE PTR [rax],al
   140005e87:	add    BYTE PTR [rax],ch
   140005e89:	add    al,0x0
   140005e8b:	add    BYTE PTR [rax],al
   140005e8d:	add    BYTE PTR [rax],al
   140005e8f:	add    al,dl
   140005e91:	rex.WB add BYTE PTR [r8+0x1],al
   140005e95:	add    BYTE PTR [rax],al
   140005e97:	add    BYTE PTR [rcx+rax*1+0x0],bl
   140005e9b:	add    BYTE PTR [rax],al
   140005e9d:	add    BYTE PTR [rax],al
   140005e9f:	add    BYTE PTR [rcx],ch
   140005ea1:	add    al,0x0
   140005ea3:	add    BYTE PTR [rax],al
   140005ea5:	add    BYTE PTR [rax],al
   140005ea7:	add    al,al
   140005ea9:	rex.WB add BYTE PTR [r8+0x1],al
   140005ead:	add    BYTE PTR [rax],al
   140005eaf:	add    BYTE PTR [rax],ch
   140005eb1:	add    BYTE PTR [rax],al
   140005eb3:	add    BYTE PTR [rax],al
   140005eb5:	add    BYTE PTR [rax],al
   140005eb7:	add    BYTE PTR [rdx],ch
   140005eb9:	add    al,0x0
   140005ebb:	add    BYTE PTR [rax],al
   140005ebd:	add    BYTE PTR [rax],al
   140005ebf:	add    BYTE PTR [rax+0x1400049],dh
   140005ec5:	add    BYTE PTR [rax],al
   140005ec7:	add    BYTE PTR [rcx],ch
   140005ec9:	add    BYTE PTR [rax],al
   140005ecb:	add    BYTE PTR [rax],al
   140005ecd:	add    BYTE PTR [rax],al
   140005ecf:	add    BYTE PTR [rbx],ch
   140005ed1:	add    al,0x0
   140005ed3:	add    BYTE PTR [rax],al
   140005ed5:	add    BYTE PTR [rax],al
   140005ed7:	add    BYTE PTR [rax+0x1400049],ah
   140005edd:	add    BYTE PTR [rax],al
   140005edf:	add    BYTE PTR [rdx],ch
   140005ee1:	add    BYTE PTR [rax],al
   140005ee3:	add    BYTE PTR [rax],al
   140005ee5:	add    BYTE PTR [rax],al
   140005ee7:	add    BYTE PTR [rsp+rax*1],ch
   140005eea:	add    BYTE PTR [rax],al
   140005eec:	add    BYTE PTR [rax],al
   140005eee:	add    BYTE PTR [rax],al
   140005ef0:	mov    BYTE PTR [rcx+0x0],cl
   140005ef3:	rex add DWORD PTR [rax],eax
   140005ef6:	add    BYTE PTR [rax],al
   140005ef8:	push   rsp
   140005ef9:	add    DWORD PTR [rax],eax
   140005efb:	add    BYTE PTR [rax],al
   140005efd:	add    BYTE PTR [rax],al
   140005eff:	add    BYTE PTR [rip+0x4],ch        # 0x140005f09
   140005f05:	add    BYTE PTR [rax],al
   140005f07:	add    BYTE PTR [rax+0x49],bh
   140005f0a:	add    BYTE PTR [rax+0x1],al
   140005f0d:	add    BYTE PTR [rax],al
   140005f0f:	add    BYTE PTR [rax+rax*1],ch
   140005f12:	add    BYTE PTR [rax],al
   140005f14:	add    BYTE PTR [rax],al
   140005f16:	add    BYTE PTR [rax],al
   140005f18:	cs add al,0x0
   140005f1b:	add    BYTE PTR [rax],al
   140005f1d:	add    BYTE PTR [rax],al
   140005f1f:	add    BYTE PTR [rax+0x49],ch
   140005f22:	add    BYTE PTR [rax+0x1],al
   140005f25:	add    BYTE PTR [rax],al
   140005f27:	add    BYTE PTR [rip+0x0],ch        # 0x140005f2d
   140005f2d:	add    BYTE PTR [rax],al
   140005f2f:	add    BYTE PTR [rdi],ch
   140005f31:	add    al,0x0
   140005f33:	add    BYTE PTR [rax],al
   140005f35:	add    BYTE PTR [rax],al
   140005f37:	add    BYTE PTR [rax+0x49],bl
   140005f3a:	add    BYTE PTR [rax+0x1],al
   140005f3d:	add    BYTE PTR [rax],al
   140005f3f:	add    BYTE PTR [rsi],ch
   140005f41:	add    BYTE PTR [rax],al
   140005f43:	add    BYTE PTR [rax],al
   140005f45:	add    BYTE PTR [rax],al
   140005f47:	add    BYTE PTR [rdx],dh
   140005f49:	add    al,0x0
   140005f4b:	add    BYTE PTR [rax],al
   140005f4d:	add    BYTE PTR [rax],al
   140005f4f:	add    BYTE PTR [rax+0x49],cl
   140005f52:	add    BYTE PTR [rax+0x1],al
   140005f55:	add    BYTE PTR [rax],al
   140005f57:	add    BYTE PTR [rdi],ch
   140005f59:	add    BYTE PTR [rax],al
   140005f5b:	add    BYTE PTR [rax],al
   140005f5d:	add    BYTE PTR [rax],al
   140005f5f:	add    BYTE PTR [rsp+rax*1],dh
   140005f62:	add    BYTE PTR [rax],al
   140005f64:	add    BYTE PTR [rax],al
   140005f66:	add    BYTE PTR [rax],al
   140005f68:	cmp    BYTE PTR [rcx+0x0],cl
   140005f6b:	rex add DWORD PTR [rax],eax
   140005f6e:	add    BYTE PTR [rax],al
   140005f70:	xor    BYTE PTR [rax],al
   140005f72:	add    BYTE PTR [rax],al
   140005f74:	add    BYTE PTR [rax],al
   140005f76:	add    BYTE PTR [rax],al
   140005f78:	xor    eax,0x4
   140005f7d:	add    BYTE PTR [rax],al
   140005f7f:	add    BYTE PTR [rax],ch
   140005f81:	rex.WB add BYTE PTR [r8+0x1],al
   140005f85:	add    BYTE PTR [rax],al
   140005f87:	add    BYTE PTR [rcx],dh
   140005f89:	add    BYTE PTR [rax],al
   140005f8b:	add    BYTE PTR [rax],al
   140005f8d:	add    BYTE PTR [rax],al
   140005f8f:	add    BYTE PTR [rsi],dh
   140005f91:	add    al,0x0
   140005f93:	add    BYTE PTR [rax],al
   140005f95:	add    BYTE PTR [rax],al
   140005f97:	add    BYTE PTR [rax],bl
   140005f99:	rex.WB add BYTE PTR [r8+0x1],al
   140005f9d:	add    BYTE PTR [rax],al
   140005f9f:	add    BYTE PTR [rdx],dh
   140005fa1:	add    BYTE PTR [rax],al
   140005fa3:	add    BYTE PTR [rax],al
   140005fa5:	add    BYTE PTR [rax],al
   140005fa7:	add    BYTE PTR [rdi],dh
   140005fa9:	add    al,0x0
   140005fab:	add    BYTE PTR [rax],al
   140005fad:	add    BYTE PTR [rax],al
   140005faf:	add    BYTE PTR [rax],cl
   140005fb1:	rex.WB add BYTE PTR [r8+0x1],al
   140005fb5:	add    BYTE PTR [rax],al
   140005fb7:	add    BYTE PTR [rbx],dh
   140005fb9:	add    BYTE PTR [rax],al
   140005fbb:	add    BYTE PTR [rax],al
   140005fbd:	add    BYTE PTR [rax],al
   140005fbf:	add    BYTE PTR [rax],bh
   140005fc1:	add    al,0x0
   140005fc3:	add    BYTE PTR [rax],al
   140005fc5:	add    BYTE PTR [rax],al
   140005fc7:	add    al,bh
   140005fc9:	rex.W add BYTE PTR [rax+0x1],al
   140005fcd:	add    BYTE PTR [rax],al
   140005fcf:	add    BYTE PTR [rax+rax*1],dh
   140005fd2:	add    BYTE PTR [rax],al
   140005fd4:	add    BYTE PTR [rax],al
   140005fd6:	add    BYTE PTR [rax],al
   140005fd8:	cmp    DWORD PTR [rax+rax*1],eax
   140005fdb:	add    BYTE PTR [rax],al
   140005fdd:	add    BYTE PTR [rax],al
   140005fdf:	add    al,ch
   140005fe1:	rex.W add BYTE PTR [rax+0x1],al
   140005fe5:	add    BYTE PTR [rax],al
   140005fe7:	add    BYTE PTR [rip+0x0],dh        # 0x140005fed
   140005fed:	add    BYTE PTR [rax],al
   140005fef:	add    BYTE PTR [rdx],bh
   140005ff1:	add    al,0x0
   140005ff3:	add    BYTE PTR [rax],al
   140005ff5:	add    BYTE PTR [rax],al
   140005ff7:	add    al,bl
   140005ff9:	rex.W add BYTE PTR [rax+0x1],al
   140005ffd:	add    BYTE PTR [rax],al
   140005fff:	add    BYTE PTR [rsi],dh
   140006001:	add    BYTE PTR [rax],al
   140006003:	add    BYTE PTR [rax],al
   140006005:	add    BYTE PTR [rax],al
   140006007:	add    BYTE PTR [rbx],bh
   140006009:	add    al,0x0
   14000600b:	add    BYTE PTR [rax],al
   14000600d:	add    BYTE PTR [rax],al
   14000600f:	add    al,cl
   140006011:	rex.W add BYTE PTR [rax+0x1],al
   140006015:	add    BYTE PTR [rax],al
   140006017:	add    BYTE PTR [rdi],dh
   140006019:	add    BYTE PTR [rax],al
   14000601b:	add    BYTE PTR [rax],al
   14000601d:	add    BYTE PTR [rax],al
   14000601f:	add    BYTE PTR [rsi],bh
   140006021:	add    al,0x0
   140006023:	add    BYTE PTR [rax],al
   140006025:	add    BYTE PTR [rax],al
   140006027:	add    BYTE PTR [rax+0x1400048],bh
   14000602d:	add    BYTE PTR [rax],al
   14000602f:	add    BYTE PTR [rcx],bh
   140006031:	add    BYTE PTR [rax],al
   140006033:	add    BYTE PTR [rax],al
   140006035:	add    BYTE PTR [rax],al
   140006037:	add    BYTE PTR [rdi],bh
   140006039:	add    al,0x0
   14000603b:	add    BYTE PTR [rax],al
   14000603d:	add    BYTE PTR [rax],al
   14000603f:	add    BYTE PTR [rax+0x1400048],ch
   140006045:	add    BYTE PTR [rax],al
   140006047:	add    BYTE PTR [rdx],bh
   140006049:	add    BYTE PTR [rax],al
   14000604b:	add    BYTE PTR [rax],al
   14000604d:	add    BYTE PTR [rax],al
   14000604f:	add    BYTE PTR [rax+0x4],al
   140006052:	add    BYTE PTR [rax],al
   140006054:	add    BYTE PTR [rax],al
   140006056:	add    BYTE PTR [rax],al
   140006058:	cwde   
   140006059:	rex.W add BYTE PTR [rax+0x1],al
   14000605d:	add    BYTE PTR [rax],al
   14000605f:	add    BYTE PTR [rbx],bh
   140006061:	add    BYTE PTR [rax],al
   140006063:	add    BYTE PTR [rax],al
   140006065:	add    BYTE PTR [rax],al
   140006067:	add    BYTE PTR [rcx+0x4],al
   14000606a:	add    BYTE PTR [rax],al
   14000606c:	add    BYTE PTR [rax],al
   14000606e:	add    BYTE PTR [rax],al
   140006070:	mov    BYTE PTR [rax+0x0],cl
   140006073:	rex add DWORD PTR [rax],eax
   140006076:	add    BYTE PTR [rax],al
   140006078:	cmp    al,0x0
   14000607a:	add    BYTE PTR [rax],al
   14000607c:	add    BYTE PTR [rax],al
   14000607e:	add    BYTE PTR [rax],al
   140006080:	rex.X add al,0x0
   140006083:	add    BYTE PTR [rax],al
   140006085:	add    BYTE PTR [rax],al
   140006087:	add    BYTE PTR [rax+0x48],bh
   14000608a:	add    BYTE PTR [rax+0x1],al
   14000608d:	add    BYTE PTR [rax],al
   14000608f:	add    BYTE PTR [rip+0x0],bh        # 0x140006095
   140006095:	add    BYTE PTR [rax],al
   140006097:	add    BYTE PTR [rbx+0x4],al
   14000609a:	add    BYTE PTR [rax],al
   14000609c:	add    BYTE PTR [rax],al
   14000609e:	add    BYTE PTR [rax],al
   1400060a0:	(bad)  
   1400060a1:	rex.W add BYTE PTR [rax+0x1],al
   1400060a5:	add    BYTE PTR [rax],al
   1400060a7:	add    BYTE PTR [rdi+0x1],bl
   1400060aa:	add    BYTE PTR [rax],al
   1400060ac:	add    BYTE PTR [rax],al
   1400060ae:	add    BYTE PTR [rax],al
   1400060b0:	rex.R add al,0x0
   1400060b3:	add    BYTE PTR [rax],al
   1400060b5:	add    BYTE PTR [rax],al
   1400060b7:	add    BYTE PTR [rax+0x48],dl
   1400060ba:	add    BYTE PTR [rax+0x1],al
   1400060bd:	add    BYTE PTR [rax],al
   1400060bf:	add    BYTE PTR [rdi],bh
   1400060c1:	add    BYTE PTR [rax],al
   1400060c3:	add    BYTE PTR [rax],al
   1400060c5:	add    BYTE PTR [rax],al
   1400060c7:	add    BYTE PTR [rbp+0x4],al
   1400060ca:	add    BYTE PTR [rax],al
   1400060cc:	add    BYTE PTR [rax],al
   1400060ce:	add    BYTE PTR [rax],al
   1400060d0:	rex
   1400060d1:	rex.W add BYTE PTR [rax+0x1],al
   1400060d5:	add    BYTE PTR [rax],al
   1400060d7:	add    BYTE PTR [rax+0x0],al
   1400060da:	add    BYTE PTR [rax],al
   1400060dc:	add    BYTE PTR [rax],al
   1400060de:	add    BYTE PTR [rax],al
   1400060e0:	rex.RX add al,0x0
   1400060e3:	add    BYTE PTR [rax],al
   1400060e5:	add    BYTE PTR [rax],al
   1400060e7:	add    BYTE PTR [rax],dh
   1400060e9:	rex.W add BYTE PTR [rax+0x1],al
   1400060ed:	add    BYTE PTR [rax],al
   1400060ef:	add    BYTE PTR [rcx+0x0],al
   1400060f2:	add    BYTE PTR [rax],al
   1400060f4:	add    BYTE PTR [rax],al
   1400060f6:	add    BYTE PTR [rax],al
   1400060f8:	rex.RXB add al,0x0
   1400060fb:	add    BYTE PTR [rax],al
   1400060fd:	add    BYTE PTR [rax],al
   1400060ff:	add    BYTE PTR [rax],ah
   140006101:	rex.W add BYTE PTR [rax+0x1],al
   140006105:	add    BYTE PTR [rax],al
   140006107:	add    BYTE PTR [rdx+0x0],al
   14000610a:	add    BYTE PTR [rax],al
   14000610c:	add    BYTE PTR [rax],al
   14000610e:	add    BYTE PTR [rax],al
   140006110:	rex.W add al,0x0
   140006113:	add    BYTE PTR [rax],al
   140006115:	add    BYTE PTR [rax],al
   140006117:	add    BYTE PTR [rax],dl
   140006119:	rex.W add BYTE PTR [rax+0x1],al
   14000611d:	add    BYTE PTR [rax],al
   14000611f:	add    BYTE PTR [rbx+0x0],al
   140006122:	add    BYTE PTR [rax],al
   140006124:	add    BYTE PTR [rax],al
   140006126:	add    BYTE PTR [rax],al
   140006128:	rex.WB add al,0x0
   14000612b:	add    BYTE PTR [rax],al
   14000612d:	add    BYTE PTR [rax],al
   14000612f:	add    BYTE PTR [rax],al
   140006131:	rex.W add BYTE PTR [rax+0x1],al
   140006135:	add    BYTE PTR [rax],al
   140006137:	add    BYTE PTR [rax+rax*1+0x0],al
   14000613b:	add    BYTE PTR [rax],al
   14000613d:	add    BYTE PTR [rax],al
   14000613f:	add    BYTE PTR [rdx+0x4],cl
   140006142:	add    BYTE PTR [rax],al
   140006144:	add    BYTE PTR [rax],al
   140006146:	add    BYTE PTR [rax],al
   140006148:	lock rex.RXB add BYTE PTR [r8+0x1],r8b
   14000614d:	add    BYTE PTR [rax],al
   14000614f:	add    BYTE PTR [rbp+0x0],al
   140006152:	add    BYTE PTR [rax],al
   140006154:	add    BYTE PTR [rax],al
   140006156:	add    BYTE PTR [rax],al
   140006158:	rex.WXB add al,0x0
   14000615b:	add    BYTE PTR [rax],al
   14000615d:	add    BYTE PTR [rax],al
   14000615f:	add    al,ah
   140006161:	rex.RXB add BYTE PTR [r8+0x1],r8b
   140006165:	add    BYTE PTR [rax],al
   140006167:	add    BYTE PTR [rsi+0x0],al
   14000616a:	add    BYTE PTR [rax],al
   14000616c:	add    BYTE PTR [rax],al
   14000616e:	add    BYTE PTR [rax],al
   140006170:	rex.WR add al,0x0
   140006173:	add    BYTE PTR [rax],al
   140006175:	add    BYTE PTR [rax],al
   140006177:	add    al,dl
   140006179:	rex.RXB add BYTE PTR [r8+0x1],r8b
   14000617d:	add    BYTE PTR [rax],al
   14000617f:	add    BYTE PTR [rdi+0x0],al
   140006182:	add    BYTE PTR [rax],al
   140006184:	add    BYTE PTR [rax],al
   140006186:	add    BYTE PTR [rax],al
   140006188:	rex.WRB add al,0x0
   14000618b:	add    BYTE PTR [rax],al
   14000618d:	add    BYTE PTR [rax],al
   14000618f:	add    al,al
   140006191:	rex.RXB add BYTE PTR [r8+0x1],r8b
   140006195:	add    BYTE PTR [rax],al
   140006197:	add    BYTE PTR [rax+0x0],cl
   14000619a:	add    BYTE PTR [rax],al
   14000619c:	add    BYTE PTR [rax],al
   14000619e:	add    BYTE PTR [rax],al
   1400061a0:	rex.WRX add al,0x0
   1400061a3:	add    BYTE PTR [rax],al
   1400061a5:	add    BYTE PTR [rax],al
   1400061a7:	add    BYTE PTR [rax+0x1400047],dh
   1400061ad:	add    BYTE PTR [rax],al
   1400061af:	add    BYTE PTR [rcx+0x0],cl
   1400061b2:	add    BYTE PTR [rax],al
   1400061b4:	add    BYTE PTR [rax],al
   1400061b6:	add    BYTE PTR [rax],al
   1400061b8:	rex.WRXB add al,0x0
   1400061bb:	add    BYTE PTR [rax],al
   1400061bd:	add    BYTE PTR [rax],al
   1400061bf:	add    BYTE PTR [rax+0x1400047],ah
   1400061c5:	add    BYTE PTR [rax],al
   1400061c7:	add    BYTE PTR [rdx+0x0],cl
   1400061ca:	add    BYTE PTR [rax],al
   1400061cc:	add    BYTE PTR [rax],al
   1400061ce:	add    BYTE PTR [rax],al
   1400061d0:	push   rax
   1400061d1:	add    al,0x0
   1400061d3:	add    BYTE PTR [rax],al
   1400061d5:	add    BYTE PTR [rax],al
   1400061d7:	add    BYTE PTR [rax+0x1400047],dl
   1400061dd:	add    BYTE PTR [rax],al
   1400061df:	add    BYTE PTR [rdi+0x1],dl
   1400061e2:	add    BYTE PTR [rax],al
   1400061e4:	add    BYTE PTR [rax],al
   1400061e6:	add    BYTE PTR [rax],al
   1400061e8:	push   rcx
   1400061e9:	add    al,0x0
   1400061eb:	add    BYTE PTR [rax],al
   1400061ed:	add    BYTE PTR [rax],al
   1400061ef:	add    BYTE PTR [rax+0x1400047],al
   1400061f5:	add    BYTE PTR [rax],al
   1400061f7:	add    BYTE PTR [rax+rax*1+0x0],cl
   1400061fb:	add    BYTE PTR [rax],al
   1400061fd:	add    BYTE PTR [rax],al
   1400061ff:	add    BYTE PTR [rdx+0x4],dl
   140006202:	add    BYTE PTR [rax],al
   140006204:	add    BYTE PTR [rax],al
   140006206:	add    BYTE PTR [rax],al
   140006208:	jo     0x140006251
   14000620a:	add    BYTE PTR [rax+0x1],al
   14000620d:	add    BYTE PTR [rax],al
   14000620f:	add    BYTE PTR [rbp+0x0],cl
   140006212:	add    BYTE PTR [rax],al
   140006214:	add    BYTE PTR [rax],al
   140006216:	add    BYTE PTR [rax],al
   140006218:	push   rbx
   140006219:	add    al,0x0
   14000621b:	add    BYTE PTR [rax],al
   14000621d:	add    BYTE PTR [rax],al
   14000621f:	add    BYTE PTR [rax+0x47],ah
   140006222:	add    BYTE PTR [rax+0x1],al
   140006225:	add    BYTE PTR [rax],al
   140006227:	add    BYTE PTR [rsi+0x0],cl
   14000622a:	add    BYTE PTR [rax],al
   14000622c:	add    BYTE PTR [rax],al
   14000622e:	add    BYTE PTR [rax],al
   140006230:	push   rsp
   140006231:	add    al,0x0
   140006233:	add    BYTE PTR [rax],al
   140006235:	add    BYTE PTR [rax],al
   140006237:	add    BYTE PTR [rax+0x47],dl
   14000623a:	add    BYTE PTR [rax+0x1],al
   14000623d:	add    BYTE PTR [rax],al
   14000623f:	add    BYTE PTR [rdi+0x0],cl
   140006242:	add    BYTE PTR [rax],al
   140006244:	add    BYTE PTR [rax],al
   140006246:	add    BYTE PTR [rax],al
   140006248:	push   rsi
   140006249:	add    al,0x0
   14000624b:	add    BYTE PTR [rax],al
   14000624d:	add    BYTE PTR [rax],al
   14000624f:	add    BYTE PTR [rax+0x47],al
   140006252:	add    BYTE PTR [rax+0x1],al
   140006255:	add    BYTE PTR [rax],al
   140006257:	add    BYTE PTR [rax+0x0],dl
   14000625a:	add    BYTE PTR [rax],al
   14000625c:	add    BYTE PTR [rax],al
   14000625e:	add    BYTE PTR [rax],al
   140006260:	push   rdi
   140006261:	add    al,0x0
   140006263:	add    BYTE PTR [rax],al
   140006265:	add    BYTE PTR [rax],al
   140006267:	add    BYTE PTR [rax],dh
   140006269:	rex.RXB add BYTE PTR [r8+0x1],r8b
   14000626d:	add    BYTE PTR [rax],al
   14000626f:	add    BYTE PTR [rcx+0x0],dl
   140006272:	add    BYTE PTR [rax],al
   140006274:	add    BYTE PTR [rax],al
   140006276:	add    BYTE PTR [rax],al
   140006278:	pop    rdx
   140006279:	add    al,0x0
   14000627b:	add    BYTE PTR [rax],al
   14000627d:	add    BYTE PTR [rax],al
   14000627f:	add    BYTE PTR [rax],ah
   140006281:	rex.RXB add BYTE PTR [r8+0x1],r8b
   140006285:	add    BYTE PTR [rax],al
   140006287:	add    BYTE PTR [rdx+0x0],dl
   14000628a:	add    BYTE PTR [rax],al
   14000628c:	add    BYTE PTR [rax],al
   14000628e:	add    BYTE PTR [rax],al
   140006290:	pop    rbx
   140006291:	add    al,0x0
   140006293:	add    BYTE PTR [rax],al
   140006295:	add    BYTE PTR [rax],al
   140006297:	add    BYTE PTR [rax],dl
   140006299:	rex.RXB add BYTE PTR [r8+0x1],r8b
   14000629d:	add    BYTE PTR [rax],al
   14000629f:	add    BYTE PTR [rbx+0x0],dl
   1400062a2:	add    BYTE PTR [rax],al
   1400062a4:	add    BYTE PTR [rax],al
   1400062a6:	add    BYTE PTR [rax],al
   1400062a8:	pop    rbp
   1400062a9:	add    al,0x0
   1400062ab:	add    BYTE PTR [rax],al
   1400062ad:	add    BYTE PTR [rax],al
   1400062af:	add    al,bh
   1400062b1:	rex.RX add BYTE PTR [rax+0x1],r8b
   1400062b5:	add    BYTE PTR [rax],al
   1400062b7:	add    BYTE PTR [rax+0x1],bl
   1400062ba:	add    BYTE PTR [rax],al
   1400062bc:	add    BYTE PTR [rax],al
   1400062be:	add    BYTE PTR [rax],al
   1400062c0:	pop    rsi
   1400062c1:	add    al,0x0
   1400062c3:	add    BYTE PTR [rax],al
   1400062c5:	add    BYTE PTR [rax],al
   1400062c7:	add    al,ch
   1400062c9:	rex.RX add BYTE PTR [rax+0x1],r8b
   1400062cd:	add    BYTE PTR [rax],al
   1400062cf:	add    BYTE PTR [rbp+0x0],dl
   1400062d2:	add    BYTE PTR [rax],al
   1400062d4:	add    BYTE PTR [rax],al
   1400062d6:	add    BYTE PTR [rax],al
   1400062d8:	(bad)  
   1400062d9:	add    al,0x0
   1400062db:	add    BYTE PTR [rax],al
   1400062dd:	add    BYTE PTR [rax],al
   1400062df:	add    al,bl
   1400062e1:	rex.RX add BYTE PTR [rax+0x1],r8b
   1400062e5:	add    BYTE PTR [rax],al
   1400062e7:	add    BYTE PTR [rdi+0x0],dl
   1400062ea:	add    BYTE PTR [rax],al
   1400062ec:	add    BYTE PTR [rax],al
   1400062ee:	add    BYTE PTR [rax],al
   1400062f0:	(bad)  
   1400062f1:	add    al,0x0
   1400062f3:	add    BYTE PTR [rax],al
   1400062f5:	add    BYTE PTR [rax],al
   1400062f7:	add    al,cl
   1400062f9:	rex.RX add BYTE PTR [rax+0x1],r8b
   1400062fd:	add    BYTE PTR [rax],al
   1400062ff:	add    BYTE PTR [rax+0x0],bl
   140006302:	add    BYTE PTR [rax],al
   140006304:	add    BYTE PTR [rax],al
   140006306:	add    BYTE PTR [rax],al
   140006308:	movsxd eax,DWORD PTR [rax+rax*1]
   14000630b:	add    BYTE PTR [rax],al
   14000630d:	add    BYTE PTR [rax],al
   14000630f:	add    BYTE PTR [rax+0x1400046],bh
   140006315:	add    BYTE PTR [rax],al
   140006317:	add    BYTE PTR [rcx+0x0],bl
   14000631a:	add    BYTE PTR [rax],al
   14000631c:	add    BYTE PTR [rax],al
   14000631e:	add    BYTE PTR [rax],al
   140006320:	fs add al,0x0
   140006323:	add    BYTE PTR [rax],al
   140006325:	add    BYTE PTR [rax],al
   140006327:	add    BYTE PTR [rax+0x1400046],ch
   14000632d:	add    BYTE PTR [rax],al
   14000632f:	add    BYTE PTR [rdx+0x0],bl
   140006332:	add    BYTE PTR [rax],al
   140006334:	add    BYTE PTR [rax],al
   140006336:	add    BYTE PTR [rax],al
   140006338:	gs add al,0x0
   14000633b:	add    BYTE PTR [rax],al
   14000633d:	add    BYTE PTR [rax],al
   14000633f:	add    BYTE PTR [rax+0x1400046],bl
   140006345:	add    BYTE PTR [rax],al
   140006347:	add    BYTE PTR [rbx+0x0],bl
   14000634a:	add    BYTE PTR [rax],al
   14000634c:	add    BYTE PTR [rax],al
   14000634e:	add    BYTE PTR [rax],al
   140006350:	push   0x4
   140006355:	add    BYTE PTR [rax],al
   140006357:	add    BYTE PTR [rax+0x1400046],al
   14000635d:	add    BYTE PTR [rax],al
   14000635f:	add    BYTE PTR [rbx+0x1],ah
   140006362:	add    BYTE PTR [rax],al
   140006364:	add    BYTE PTR [rax],al
   140006366:	add    BYTE PTR [rax],al
   140006368:	push   0x4
   14000636a:	add    BYTE PTR [rax],al
   14000636c:	add    BYTE PTR [rax],al
   14000636e:	add    BYTE PTR [rax],al
   140006370:	jo     0x1400063b8
   140006372:	add    BYTE PTR [rax+0x1],al
   140006375:	add    BYTE PTR [rax],al
   140006377:	add    BYTE PTR [rbp+0x0],bl
   14000637a:	add    BYTE PTR [rax],al
   14000637c:	add    BYTE PTR [rax],al
   14000637e:	add    BYTE PTR [rax],al
   140006380:	imul   eax,DWORD PTR [rax+rax*1],0x0
   140006384:	add    BYTE PTR [rax],al
   140006386:	add    BYTE PTR [rax],al
   140006388:	(bad)  
   140006389:	rex.RX add BYTE PTR [rax+0x1],r8b
   14000638d:	add    BYTE PTR [rax],al
   14000638f:	add    BYTE PTR [rsi+0x0],bl
   140006392:	add    BYTE PTR [rax],al
   140006394:	add    BYTE PTR [rax],al
   140006396:	add    BYTE PTR [rax],al
   140006398:	ins    BYTE PTR es:[rdi],dx
   140006399:	add    al,0x0
   14000639b:	add    BYTE PTR [rax],al
   14000639d:	add    BYTE PTR [rax],al
   14000639f:	add    BYTE PTR [rax+0x46],dl
   1400063a2:	add    BYTE PTR [rax+0x1],al
   1400063a5:	add    BYTE PTR [rax],al
   1400063a7:	add    BYTE PTR [rdi+0x0],bl
   1400063aa:	add    BYTE PTR [rax],al
   1400063ac:	add    BYTE PTR [rax],al
   1400063ae:	add    BYTE PTR [rax],al
   1400063b0:	ins    DWORD PTR es:[rdi],dx
   1400063b1:	add    al,0x0
   1400063b3:	add    BYTE PTR [rax],al
   1400063b5:	add    BYTE PTR [rax],al
   1400063b7:	add    BYTE PTR [rax+0x46],al
   1400063ba:	add    BYTE PTR [rax+0x1],al
   1400063bd:	add    BYTE PTR [rax],al
   1400063bf:	add    BYTE PTR [rax+0x0],ah
   1400063c2:	add    BYTE PTR [rax],al
   1400063c4:	add    BYTE PTR [rax],al
   1400063c6:	add    BYTE PTR [rax],al
   1400063c8:	outs   dx,BYTE PTR ds:[rsi]
   1400063c9:	add    al,0x0
   1400063cb:	add    BYTE PTR [rax],al
   1400063cd:	add    BYTE PTR [rax],al
   1400063cf:	add    BYTE PTR [rax],dh
   1400063d1:	rex.RX add BYTE PTR [rax+0x1],r8b
   1400063d5:	add    BYTE PTR [rax],al
   1400063d7:	add    BYTE PTR [rcx+0x0],ah
   1400063da:	add    BYTE PTR [rax],al
   1400063dc:	add    BYTE PTR [rax],al
   1400063de:	add    BYTE PTR [rax],al
   1400063e0:	outs   dx,DWORD PTR ds:[rsi]
   1400063e1:	add    al,0x0
   1400063e3:	add    BYTE PTR [rax],al
   1400063e5:	add    BYTE PTR [rax],al
   1400063e7:	add    BYTE PTR [rax],ah
   1400063e9:	rex.RX add BYTE PTR [rax+0x1],r8b
   1400063ed:	add    BYTE PTR [rax],al
   1400063ef:	add    BYTE PTR [rdx+0x0],ah
   1400063f2:	add    BYTE PTR [rax],al
   1400063f4:	add    BYTE PTR [rax],al
   1400063f6:	add    BYTE PTR [rax],al
   1400063f8:	jo     0x1400063fe
   1400063fa:	add    BYTE PTR [rax],al
   1400063fc:	add    BYTE PTR [rax],al
   1400063fe:	add    BYTE PTR [rax],al
   140006400:	adc    BYTE PTR [rsi+0x0],al
   140006403:	rex add DWORD PTR [rax],eax
   140006406:	add    BYTE PTR [rax],al
   140006408:	movsxd eax,DWORD PTR [rax]
   14000640a:	add    BYTE PTR [rax],al
   14000640c:	add    BYTE PTR [rax],al
   14000640e:	add    BYTE PTR [rax],al
   140006410:	js     0x140006416
   140006412:	add    BYTE PTR [rax],al
   140006414:	add    BYTE PTR [rax],al
   140006416:	add    BYTE PTR [rax],al
   140006418:	add    BYTE PTR [rsi+0x0],al
   14000641b:	rex add DWORD PTR [rax],eax
   14000641e:	add    BYTE PTR [rax],al
   140006420:	add    BYTE PTR fs:[rax],al
   140006423:	add    BYTE PTR [rax],al
   140006425:	add    BYTE PTR [rax],al
   140006427:	add    BYTE PTR [rdx+0x4],bh
   14000642a:	add    BYTE PTR [rax],al
   14000642c:	add    BYTE PTR [rax],al
   14000642e:	add    BYTE PTR [rax],al
   140006430:	lock add BYTE PTR [r8+0x1],r8b
   140006435:	add    BYTE PTR [rax],al
   140006437:	add    BYTE PTR [rbp+0x0],ah
   14000643a:	add    BYTE PTR [rax],al
   14000643c:	add    BYTE PTR [rax],al
   14000643e:	add    BYTE PTR [rax],al
   140006440:	jl     0x140006446
   140006442:	add    BYTE PTR [rax],al
   140006444:	add    BYTE PTR [rax],al
   140006446:	add    BYTE PTR [rax],al
   140006448:	loopne 0x14000648f
   14000644a:	add    BYTE PTR [rax+0x1],al
   14000644d:	add    BYTE PTR [rax],al
   14000644f:	add    BYTE PTR [rsi+0x0],ah
   140006452:	add    BYTE PTR [rax],al
   140006454:	add    BYTE PTR [rax],al
   140006456:	add    BYTE PTR [rax],al
   140006458:	jle    0x14000645e
   14000645a:	add    BYTE PTR [rax],al
   14000645c:	add    BYTE PTR [rax],al
   14000645e:	add    BYTE PTR [rax],al
   140006460:	rol    BYTE PTR [rbp+0x0],1
   140006463:	rex add DWORD PTR [rax],eax
   140006466:	add    BYTE PTR [rax],al
   140006468:	add    BYTE PTR [eax],al
   14000646b:	add    BYTE PTR [rax],al
   14000646d:	add    BYTE PTR [rax],al
   14000646f:	add    BYTE PTR [rax+0x4],al
   140006475:	add    BYTE PTR [rax],al
   140006477:	add    al,al
   140006479:	add    BYTE PTR [r8+0x1],r8b
   14000647d:	add    BYTE PTR [rax],al
   14000647f:	add    BYTE PTR [rcx+0x0],ch
   140006482:	add    BYTE PTR [rax],al
   140006484:	add    BYTE PTR [rax],al
   140006486:	add    BYTE PTR [rax],al
   140006488:	add    DWORD PTR [rax+rax*1],0x0
   14000648f:	add    BYTE PTR [rax+0x1400045],dh
   140006495:	add    BYTE PTR [rax],al
   140006497:	add    BYTE PTR [rdx+0x0],ch
   14000649a:	add    BYTE PTR [rax],al
   14000649c:	add    BYTE PTR [rax],al
   14000649e:	add    BYTE PTR [rax],al
   1400064a0:	(bad)  
   1400064a1:	add    al,0x0
   1400064a3:	add    BYTE PTR [rax],al
   1400064a5:	add    BYTE PTR [rax],al
   1400064a7:	add    BYTE PTR [rax+0x1400045],ah
   1400064ad:	add    BYTE PTR [rax],al
   1400064af:	add    BYTE PTR [rbx+0x0],ch
   1400064b2:	add    BYTE PTR [rax],al
   1400064b4:	add    BYTE PTR [rax],al
   1400064b6:	add    BYTE PTR [rax],al
   1400064b8:	add    DWORD PTR [rax+rax*1],0x0
   1400064bc:	add    BYTE PTR [rax],al
   1400064be:	add    BYTE PTR [rax],al
   1400064c0:	nop
   1400064c1:	add    BYTE PTR [r8+0x1],r8b
   1400064c5:	add    BYTE PTR [rax],al
   1400064c7:	add    BYTE PTR [rax+rax*1+0x0],ch
   1400064cb:	add    BYTE PTR [rax],al
   1400064cd:	add    BYTE PTR [rax],al
   1400064cf:	add    BYTE PTR [rsp+rax*1+0x0],al
   1400064d6:	add    BYTE PTR [rax],al
   1400064d8:	add    BYTE PTR [rbp+0x0],0x40
   1400064dc:	add    DWORD PTR [rax],eax
   1400064de:	add    BYTE PTR [rax],al
   1400064e0:	ins    DWORD PTR es:[rdi],dx
   1400064e1:	add    BYTE PTR [rax],al
   1400064e3:	add    BYTE PTR [rax],al
   1400064e5:	add    BYTE PTR [rax],al
   1400064e7:	add    BYTE PTR [rbp+0x4],al
   1400064ed:	add    BYTE PTR [rax],al
   1400064ef:	add    BYTE PTR [rax+0x45],dh
   1400064f2:	add    BYTE PTR [rax+0x1],al
   1400064f5:	add    BYTE PTR [rax],al
   1400064f7:	add    BYTE PTR [rsi+0x0],ch
   1400064fa:	add    BYTE PTR [rax],al
   1400064fc:	add    BYTE PTR [rax],al
   1400064fe:	add    BYTE PTR [rax],al
   140006500:	xchg   BYTE PTR [rax+rax*1],al
   140006503:	add    BYTE PTR [rax],al
   140006505:	add    BYTE PTR [rax],al
   140006507:	add    BYTE PTR [rax+0x45],ah
   14000650a:	add    BYTE PTR [rax+0x1],al
   14000650d:	add    BYTE PTR [rax],al
   14000650f:	add    BYTE PTR [rdi+0x0],ch
   140006512:	add    BYTE PTR [rax],al
   140006514:	add    BYTE PTR [rax],al
   140006516:	add    BYTE PTR [rax],al
   140006518:	xchg   DWORD PTR [rax+rax*1],eax
   14000651b:	add    BYTE PTR [rax],al
   14000651d:	add    BYTE PTR [rax],al
   14000651f:	add    BYTE PTR [rax+0x45],dl
   140006522:	add    BYTE PTR [rax+0x1],al
   140006525:	add    BYTE PTR [rax],al
   140006527:	add    BYTE PTR [rax+0x0],dh
   14000652a:	add    BYTE PTR [rax],al
   14000652c:	add    BYTE PTR [rax],al
   14000652e:	add    BYTE PTR [rax],al
   140006530:	mov    BYTE PTR [rax+rax*1],al
   140006533:	add    BYTE PTR [rax],al
   140006535:	add    BYTE PTR [rax],al
   140006537:	add    BYTE PTR [rax+0x45],al
   14000653a:	add    BYTE PTR [rax+0x1],al
   14000653d:	add    BYTE PTR [rax],al
   14000653f:	add    BYTE PTR [rcx+0x0],dh
   140006542:	add    BYTE PTR [rax],al
   140006544:	add    BYTE PTR [rax],al
   140006546:	add    BYTE PTR [rax],al
   140006548:	mov    WORD PTR [rax+rax*1],es
   14000654b:	add    BYTE PTR [rax],al
   14000654d:	add    BYTE PTR [rax],al
   14000654f:	add    BYTE PTR [rax],dh
   140006551:	add    BYTE PTR [r8+0x1],r8b
   140006555:	add    BYTE PTR [rax],al
   140006557:	add    BYTE PTR [rdx+0x0],dh
   14000655a:	add    BYTE PTR [rax],al
   14000655c:	add    BYTE PTR [rax],al
   14000655e:	add    BYTE PTR [rax],al
   140006560:	xchg   ecx,eax
   140006561:	add    al,0x0
   140006563:	add    BYTE PTR [rax],al
   140006565:	add    BYTE PTR [rax],al
   140006567:	add    BYTE PTR [rax],ah
   140006569:	add    BYTE PTR [r8+0x1],r8b
   14000656d:	add    BYTE PTR [rax],al
   14000656f:	add    BYTE PTR [rbx+0x0],dh
   140006572:	add    BYTE PTR [rax],al
   140006574:	add    BYTE PTR [rax],al
   140006576:	add    BYTE PTR [rax],al
   140006578:	add    DWORD PTR [rip+0x0],eax        # 0x14000657e
   14000657e:	add    BYTE PTR [rax],al
   140006580:	or     BYTE PTR [rbp+0x0],al
   140006583:	rex add DWORD PTR [rax],eax
   140006586:	add    BYTE PTR [rax],al
   140006588:	or     BYTE PTR [rax],al
   14000658a:	add    BYTE PTR [rax],al
   14000658c:	add    BYTE PTR [rax],al
   14000658e:	add    BYTE PTR [rax],al
   140006590:	inc    BYTE PTR [rip+0x0]        # 0x140006596
   140006596:	add    BYTE PTR [rax],al
   140006598:	lock add BYTE PTR [rax+0x1],r8b
   14000659d:	add    BYTE PTR [rax],al
   14000659f:	add    BYTE PTR [rax],dl
   1400065a1:	add    BYTE PTR [rax],al
   1400065a3:	add    BYTE PTR [rax],al
   1400065a5:	add    BYTE PTR [rax],al
   1400065a7:	add    BYTE PTR [rcx],al
   1400065a9:	or     BYTE PTR [rax],al
   1400065ab:	add    BYTE PTR [rax],al
   1400065ad:	add    BYTE PTR [rax],al
   1400065af:	add    al,ah
   1400065b1:	add    BYTE PTR [rax+0x1],r8b
	...
   1400065bd:	add    BYTE PTR [rax],al
   1400065bf:	add    BYTE PTR [rax+rcx*1],al
   1400065c2:	add    BYTE PTR [rax],al
   1400065c4:	add    BYTE PTR [rax],al
   1400065c6:	add    BYTE PTR [rax],al
   1400065c8:	rol    BYTE PTR [rax+rax*1+0x40],1
   1400065cc:	add    DWORD PTR [rax],eax
   1400065ce:	add    BYTE PTR [rax],al
   1400065d0:	add    eax,DWORD PTR [rax]
   1400065d2:	add    BYTE PTR [rax],al
   1400065d4:	add    BYTE PTR [rax],al
   1400065d6:	add    BYTE PTR [rax],al
   1400065d8:	(bad)  
   1400065d9:	or     BYTE PTR [rax],al
   1400065db:	add    BYTE PTR [rax],al
   1400065dd:	add    BYTE PTR [rax],al
   1400065df:	add    al,al
   1400065e1:	add    BYTE PTR [rax+0x1],r8b
   1400065e5:	add    BYTE PTR [rax],al
   1400065e7:	add    BYTE PTR [rsi],al
   1400065e9:	add    BYTE PTR [rax],al
   1400065eb:	add    BYTE PTR [rax],al
   1400065ed:	add    BYTE PTR [rax],al
   1400065ef:	add    BYTE PTR [rcx],cl
   1400065f1:	or     BYTE PTR [rax],al
   1400065f3:	add    BYTE PTR [rax],al
   1400065f5:	add    BYTE PTR [rax],al
   1400065f7:	add    BYTE PTR [rax+0x1400044],dh
   1400065fd:	add    BYTE PTR [rax],al
   1400065ff:	add    BYTE PTR [rax],cl
   140006601:	add    BYTE PTR [rax],al
   140006603:	add    BYTE PTR [rax],al
   140006605:	add    BYTE PTR [rax],al
   140006607:	add    BYTE PTR [rdx],cl
   140006609:	or     BYTE PTR [rax],al
   14000660b:	add    BYTE PTR [rax],al
   14000660d:	add    BYTE PTR [rax],al
   14000660f:	add    BYTE PTR [rax+0x1400044],ah
   140006615:	add    BYTE PTR [rax],al
   140006617:	add    BYTE PTR [rcx],cl
   140006619:	add    BYTE PTR [rax],al
   14000661b:	add    BYTE PTR [rax],al
   14000661d:	add    BYTE PTR [rax],al
   14000661f:	add    BYTE PTR [rax+rcx*1],cl
   140006622:	add    BYTE PTR [rax],al
   140006624:	add    BYTE PTR [rax],al
   140006626:	add    BYTE PTR [rax],al
   140006628:	nop
   140006629:	add    BYTE PTR [rax+0x1],r8b
   14000662d:	add    BYTE PTR [rax],al
   14000662f:	add    BYTE PTR [rbx],cl
   140006631:	add    BYTE PTR [rax],al
   140006633:	add    BYTE PTR [rax],al
   140006635:	add    BYTE PTR [rax],al
   140006637:	add    BYTE PTR [rax],dl
   140006639:	or     BYTE PTR [rax],al
   14000663b:	add    BYTE PTR [rax],al
   14000663d:	add    BYTE PTR [rax],al
   14000663f:	add    BYTE PTR [rax+0x1400044],al
   140006645:	add    BYTE PTR [rax],al
   140006647:	add    BYTE PTR [rdi],cl
   140006649:	add    BYTE PTR [rax],al
   14000664b:	add    BYTE PTR [rax],al
   14000664d:	add    BYTE PTR [rax],al
   14000664f:	add    BYTE PTR [rbx],dl
   140006651:	or     BYTE PTR [rax],al
   140006653:	add    BYTE PTR [rax],al
   140006655:	add    BYTE PTR [rax],al
   140006657:	add    BYTE PTR [rax+0x44],dh
   14000665a:	add    BYTE PTR [rax+0x1],al
   14000665d:	add    BYTE PTR [rax],al
   14000665f:	add    BYTE PTR [rdx],dl
   140006661:	add    BYTE PTR [rax],al
   140006663:	add    BYTE PTR [rax],al
   140006665:	add    BYTE PTR [rax],al
   140006667:	add    BYTE PTR [rax+rcx*1],dl
   14000666a:	add    BYTE PTR [rax],al
   14000666c:	add    BYTE PTR [rax],al
   14000666e:	add    BYTE PTR [rax],al
   140006670:	(bad)  
   140006671:	add    BYTE PTR [rax+0x1],r8b
   140006675:	add    BYTE PTR [rax],al
   140006677:	add    BYTE PTR [rdx+0x1],dl
   14000667a:	add    BYTE PTR [rax],al
   14000667c:	add    BYTE PTR [rax],al
   14000667e:	add    BYTE PTR [rax],al
   140006680:	(bad)  
   140006681:	or     BYTE PTR [rax],al
   140006683:	add    BYTE PTR [rax],al
   140006685:	add    BYTE PTR [rax],al
   140006687:	add    BYTE PTR [rax+0x44],dl
   14000668a:	add    BYTE PTR [rax+0x1],al
   14000668d:	add    BYTE PTR [rax],al
   14000668f:	add    BYTE PTR [rip+0x0],dl        # 0x140006695
   140006695:	add    BYTE PTR [rax],al
   140006697:	add    BYTE PTR [rdx],bl
   140006699:	or     BYTE PTR [rax],al
   14000669b:	add    BYTE PTR [rax],al
   14000669d:	add    BYTE PTR [rax],al
   14000669f:	add    al,al
   1400066a1:	(bad)  
   1400066a2:	add    BYTE PTR [rax+0x1],al
   1400066a5:	add    BYTE PTR [rax],al
   1400066a7:	add    BYTE PTR [rbp+0x1],cl
   1400066aa:	add    BYTE PTR [rax],al
   1400066ac:	add    BYTE PTR [rax],al
   1400066ae:	add    BYTE PTR [rax],al
   1400066b0:	sbb    eax,0x8
   1400066b5:	add    BYTE PTR [rax],al
   1400066b7:	add    BYTE PTR [rax+0x44],al
   1400066ba:	add    BYTE PTR [rax+0x1],al
   1400066bd:	add    BYTE PTR [rax],al
   1400066bf:	add    BYTE PTR [rax+rax*1],bl
   1400066c2:	add    BYTE PTR [rax],al
   1400066c4:	add    BYTE PTR [rax],al
   1400066c6:	add    BYTE PTR [rax],al
   1400066c8:	sub    al,0x8
   1400066ca:	add    BYTE PTR [rax],al
   1400066cc:	add    BYTE PTR [rax],al
   1400066ce:	add    BYTE PTR [rax],al
   1400066d0:	sub    BYTE PTR [rax+rax*1+0x40],al
   1400066d4:	add    DWORD PTR [rax],eax
   1400066d6:	add    BYTE PTR [rax],al
   1400066d8:	rex.WRXB add QWORD PTR [r8],r8
   1400066db:	add    BYTE PTR [rax],al
   1400066dd:	add    BYTE PTR [rax],al
   1400066df:	add    BYTE PTR [rsi],ch
   1400066e1:	or     BYTE PTR [rax],al
   1400066e3:	add    BYTE PTR [rax],al
   1400066e5:	add    BYTE PTR [rax],al
   1400066e7:	add    BYTE PTR [rax],bl
   1400066e9:	add    BYTE PTR [rax+0x1],r8b
   1400066ed:	add    BYTE PTR [rax],al
   1400066ef:	add    BYTE PTR [rbp+0x1],bl
   1400066f2:	add    BYTE PTR [rax],al
   1400066f4:	add    BYTE PTR [rax],al
   1400066f6:	add    BYTE PTR [rax],al
   1400066f8:	cmp    ecx,DWORD PTR [rax]
   1400066fa:	add    BYTE PTR [rax],al
   1400066fc:	add    BYTE PTR [rax],al
   1400066fe:	add    BYTE PTR [rax],al
   140006700:	or     BYTE PTR [rax+rax*1+0x40],al
   140006704:	add    DWORD PTR [rax],eax
   140006706:	add    BYTE PTR [rax],al
   140006708:	(bad)  
   140006709:	add    BYTE PTR [rax],al
   14000670b:	add    BYTE PTR [rax],al
   14000670d:	add    BYTE PTR [rax],al
   14000670f:	add    BYTE PTR [rax+rcx*1],bh
   140006712:	add    BYTE PTR [rax],al
   140006714:	add    BYTE PTR [rax],al
   140006716:	add    BYTE PTR [rax],al
   140006718:	clc    
   140006719:	rex.XB add BYTE PTR [r8+0x1],al
   14000671d:	add    BYTE PTR [rax],al
   14000671f:	add    BYTE PTR [rax],bh
   140006721:	add    BYTE PTR [rax],al
   140006723:	add    BYTE PTR [rax],al
   140006725:	add    BYTE PTR [rax],al
   140006727:	add    BYTE PTR [rsi],bh
   140006729:	or     BYTE PTR [rax],al
   14000672b:	add    BYTE PTR [rax],al
   14000672d:	add    BYTE PTR [rax],al
   14000672f:	add    al,ch
   140006731:	rex.XB add BYTE PTR [r8+0x1],al
   140006735:	add    BYTE PTR [rax],al
   140006737:	add    BYTE PTR [rcx],bh
   140006739:	add    BYTE PTR [rax],al
   14000673b:	add    BYTE PTR [rax],al
   14000673d:	add    BYTE PTR [rax],al
   14000673f:	add    BYTE PTR [rbx+0x8],al
   140006742:	add    BYTE PTR [rax],al
   140006744:	add    BYTE PTR [rax],al
   140006746:	add    BYTE PTR [rax],al
   140006748:	rol    BYTE PTR [rbx+0x0],1
   14000674b:	rex add DWORD PTR [rax],eax
   14000674e:	add    BYTE PTR [rax],al
   140006750:	push   rsi
   140006751:	add    DWORD PTR [rax],eax
   140006753:	add    BYTE PTR [rax],al
   140006755:	add    BYTE PTR [rax],al
   140006757:	add    BYTE PTR [rbp+0x8],al
   14000675a:	add    BYTE PTR [rax],al
   14000675c:	add    BYTE PTR [rax],al
   14000675e:	add    BYTE PTR [rax],al
   140006760:	rol    BYTE PTR [rbx+0x0],0x40
   140006764:	add    DWORD PTR [rax],eax
   140006766:	add    BYTE PTR [rax],al
   140006768:	add    BYTE PTR [rax],al
   14000676b:	add    BYTE PTR [rax],al
   14000676d:	add    BYTE PTR [rax],al
   14000676f:	add    BYTE PTR [rax+0x8],dl
   140006772:	add    BYTE PTR [rax],al
   140006774:	add    BYTE PTR [rax],al
   140006776:	add    BYTE PTR [rax],al
   140006778:	test   al,0x43
   14000677a:	add    BYTE PTR [rax+0x1],al
   14000677d:	add    BYTE PTR [rax],al
   14000677f:	add    BYTE PTR [rax+0x1],ah
   140006782:	add    BYTE PTR [rax],al
   140006784:	add    BYTE PTR [rax],al
   140006786:	add    BYTE PTR [rax],al
   140006788:	pop    rbp
   140006789:	or     BYTE PTR [rax],al
   14000678b:	add    BYTE PTR [rax],al
   14000678d:	add    BYTE PTR [rax],al
   14000678f:	add    al,bh
   140006791:	add    BYTE PTR ss:[rax+0x1],al
   140006795:	add    BYTE PTR [rax],al
   140006797:	add    BYTE PTR [rcx+0x1],ah
   14000679a:	add    BYTE PTR [rax],al
   14000679c:	add    BYTE PTR [rax],al
   14000679e:	add    BYTE PTR [rax],al
   1400067a0:	pop    rdi
   1400067a1:	or     BYTE PTR [rax],al
   1400067a3:	add    BYTE PTR [rax],al
   1400067a5:	add    BYTE PTR [rax],al
   1400067a7:	add    BYTE PTR [rax+0x1400043],dl
   1400067ad:	add    BYTE PTR [rax],al
   1400067af:	add    BYTE PTR [rdx+0x1],ah
   1400067b2:	add    BYTE PTR [rax],al
   1400067b4:	add    BYTE PTR [rax],al
   1400067b6:	add    BYTE PTR [rax],al
   1400067b8:	imul   ecx,DWORD PTR [rax],0x0
   1400067bb:	add    BYTE PTR [rax],al
   1400067bd:	add    BYTE PTR [rax],al
   1400067bf:	add    BYTE PTR [rax+0x1400043],al
   1400067c5:	add    BYTE PTR [rax],al
   1400067c7:	add    BYTE PTR [rsi+0x0],bl
   1400067ca:	add    BYTE PTR [rax],al
   1400067cc:	add    BYTE PTR [rax],al
   1400067ce:	add    BYTE PTR [rax],al
   1400067d0:	dec    DWORD PTR [rcx]
   1400067d2:	add    BYTE PTR [rax],al
   1400067d4:	add    BYTE PTR [rax],al
   1400067d6:	add    BYTE PTR [rax],al
   1400067d8:	push   0x1400043
	...
   1400067e5:	add    BYTE PTR [rax],al
   1400067e7:	add    BYTE PTR [rcx],al
   1400067e9:	or     al,0x0
   1400067eb:	add    BYTE PTR [rax],al
   1400067ed:	add    BYTE PTR [rax],al
   1400067ef:	add    BYTE PTR [rax+0x43],bl
   1400067f2:	add    BYTE PTR [rax+0x1],al
	...
   1400067fd:	add    BYTE PTR [rax],al
   1400067ff:	add    BYTE PTR [rsp+rcx*1],al
   140006802:	add    BYTE PTR [rax],al
   140006804:	add    BYTE PTR [rax],al
   140006806:	add    BYTE PTR [rax],al
   140006808:	rex.W
   140006809:	rex.XB add BYTE PTR [r8+0x1],al
   14000680d:	add    BYTE PTR [rax],al
   14000680f:	add    BYTE PTR [rcx+0x1],bl
   140006812:	add    BYTE PTR [rax],al
   140006814:	add    BYTE PTR [rax],al
   140006816:	add    BYTE PTR [rax],al
   140006818:	(bad)  
   140006819:	or     al,0x0
   14000681b:	add    BYTE PTR [rax],al
   14000681d:	add    BYTE PTR [rax],al
   14000681f:	add    BYTE PTR [rax],bh
   140006821:	rex.XB add BYTE PTR [r8+0x1],al
   140006825:	add    BYTE PTR [rax],al
   140006827:	add    BYTE PTR [rsi],al
   140006829:	add    BYTE PTR [rax],al
   14000682b:	add    BYTE PTR [rax],al
   14000682d:	add    BYTE PTR [rax],al
   14000682f:	add    BYTE PTR [rcx],cl
   140006831:	or     al,0x0
   140006833:	add    BYTE PTR [rax],al
   140006835:	add    BYTE PTR [rax],al
   140006837:	add    BYTE PTR [rax],ch
   140006839:	rex.XB add BYTE PTR [r8+0x1],al
   14000683d:	add    BYTE PTR [rax],al
   14000683f:	add    BYTE PTR [rax],cl
   140006841:	add    BYTE PTR [rax],al
   140006843:	add    BYTE PTR [rax],al
   140006845:	add    BYTE PTR [rax],al
   140006847:	add    BYTE PTR [rdx],cl
   140006849:	or     al,0x0
   14000684b:	add    BYTE PTR [rax],al
   14000684d:	add    BYTE PTR [rax],al
   14000684f:	add    BYTE PTR [rax],bl
   140006851:	rex.XB add BYTE PTR [r8+0x1],al
   140006855:	add    BYTE PTR [rax],al
   140006857:	add    BYTE PTR [rcx],cl
   140006859:	add    BYTE PTR [rax],al
   14000685b:	add    BYTE PTR [rax],al
   14000685d:	add    BYTE PTR [rax],al
   14000685f:	add    BYTE PTR [rsp+rcx*1],cl
   140006862:	add    BYTE PTR [rax],al
   140006864:	add    BYTE PTR [rax],al
   140006866:	add    BYTE PTR [rax],al
   140006868:	or     BYTE PTR [rbx+0x0],al
   14000686b:	rex add DWORD PTR [rax],eax
   14000686e:	add    BYTE PTR [rax],al
   140006870:	or     eax,DWORD PTR [rax]
   140006872:	add    BYTE PTR [rax],al
   140006874:	add    BYTE PTR [rax],al
   140006876:	add    BYTE PTR [rax],al
   140006878:	sbb    cl,BYTE PTR [rax+rax*1]
   14000687b:	add    BYTE PTR [rax],al
   14000687d:	add    BYTE PTR [rax],al
   14000687f:	add    BYTE PTR [rax+0x1400037],dl
   140006885:	add    BYTE PTR [rax],al
   140006887:	add    BYTE PTR [rcx+rax*1+0x0],cl
   14000688b:	add    BYTE PTR [rax],al
   14000688d:	add    BYTE PTR [rax],al
   14000688f:	add    BYTE PTR [rbx],bh
   140006891:	or     al,0x0
   140006893:	add    BYTE PTR [rax],al
   140006895:	add    BYTE PTR [rax],al
   140006897:	add    al,bh
   140006899:	rex.X add BYTE PTR [rax+0x1],al
   14000689d:	add    BYTE PTR [rax],al
   14000689f:	add    BYTE PTR [rdi],dh
   1400068a1:	add    BYTE PTR [rax],al
   1400068a3:	add    BYTE PTR [rax],al
   1400068a5:	add    BYTE PTR [rax],al
   1400068a7:	add    BYTE PTR [rbx+0xc],ch
   1400068aa:	add    BYTE PTR [rax],al
   1400068ac:	add    BYTE PTR [rax],al
   1400068ae:	add    BYTE PTR [rax],al
   1400068b0:	call   0x1414068f7
   1400068b5:	add    BYTE PTR [rax],al
   1400068b7:	add    BYTE PTR [rsi+0x0],bl
   1400068ba:	add    BYTE PTR [rax],al
   1400068bc:	add    BYTE PTR [rax],al
   1400068be:	add    BYTE PTR [rax],al
   1400068c0:	add    DWORD PTR [rax],edx
   1400068c2:	add    BYTE PTR [rax],al
   1400068c4:	add    BYTE PTR [rax],al
   1400068c6:	add    BYTE PTR [rax],al
   1400068c8:	fadd   DWORD PTR [rdx+0x0]
   1400068cb:	rex add DWORD PTR [rax],eax
	...
   1400068d6:	add    BYTE PTR [rax],al
   1400068d8:	add    al,0x10
   1400068da:	add    BYTE PTR [rax],al
   1400068dc:	add    BYTE PTR [rax],al
   1400068de:	add    BYTE PTR [rax],al
   1400068e0:	enter  0x42,0x40
   1400068e4:	add    DWORD PTR [rax],eax
   1400068e6:	add    BYTE PTR [rax],al
   1400068e8:	add    eax,DWORD PTR [rax]
   1400068ea:	add    BYTE PTR [rax],al
   1400068ec:	add    BYTE PTR [rax],al
   1400068ee:	add    BYTE PTR [rax],al
   1400068f0:	(bad)  
   1400068f1:	adc    BYTE PTR [rax],al
   1400068f3:	add    BYTE PTR [rax],al
   1400068f5:	add    BYTE PTR [rax],al
   1400068f7:	add    BYTE PTR [rax+0x1400042],bh
   1400068fd:	add    BYTE PTR [rax],al
   1400068ff:	add    BYTE PTR [rsi],al
   140006901:	add    BYTE PTR [rax],al
   140006903:	add    BYTE PTR [rax],al
   140006905:	add    BYTE PTR [rax],al
   140006907:	add    BYTE PTR [rcx],cl
   140006909:	adc    BYTE PTR [rax],al
   14000690b:	add    BYTE PTR [rax],al
   14000690d:	add    BYTE PTR [rax],al
   14000690f:	add    BYTE PTR [rax+0x1400042],ch
   140006915:	add    BYTE PTR [rax],al
   140006917:	add    BYTE PTR [rax],cl
   140006919:	add    BYTE PTR [rax],al
   14000691b:	add    BYTE PTR [rax],al
   14000691d:	add    BYTE PTR [rax],al
   14000691f:	add    BYTE PTR [rdx],cl
   140006921:	adc    BYTE PTR [rax],al
   140006923:	add    BYTE PTR [rax],al
   140006925:	add    BYTE PTR [rax],al
   140006927:	add    BYTE PTR [rax+0x1400042],bl
   14000692d:	add    BYTE PTR [rax],al
   14000692f:	add    BYTE PTR [rcx],cl
   140006931:	add    BYTE PTR [rax],al
   140006933:	add    BYTE PTR [rax],al
   140006935:	add    BYTE PTR [rax],al
   140006937:	add    BYTE PTR [rax+rdx*1],cl
   14000693a:	add    BYTE PTR [rax],al
   14000693c:	add    BYTE PTR [rax],al
   14000693e:	add    BYTE PTR [rax],al
   140006940:	mov    BYTE PTR [rdx+0x0],al
   140006943:	rex add DWORD PTR [rax],eax
   140006946:	add    BYTE PTR [rax],al
   140006948:	or     eax,DWORD PTR [rax]
   14000694a:	add    BYTE PTR [rax],al
   14000694c:	add    BYTE PTR [rax],al
   14000694e:	add    BYTE PTR [rax],al
   140006950:	sbb    dl,BYTE PTR [rax]
   140006952:	add    BYTE PTR [rax],al
   140006954:	add    BYTE PTR [rax],al
   140006956:	add    BYTE PTR [rax],al
   140006958:	js     0x14000699c
   14000695a:	add    BYTE PTR [rax+0x1],al
   14000695d:	add    BYTE PTR [rax],al
   14000695f:	add    BYTE PTR [rcx],bl
   140006961:	add    BYTE PTR [rax],al
   140006963:	add    BYTE PTR [rax],al
   140006965:	add    BYTE PTR [rax],al
   140006967:	add    BYTE PTR [rbx],bh
   140006969:	adc    BYTE PTR [rax],al
   14000696b:	add    BYTE PTR [rax],al
   14000696d:	add    BYTE PTR [rax],al
   14000696f:	add    BYTE PTR [rax+0x42],ch
   140006972:	add    BYTE PTR [rax+0x1],al
   140006975:	add    BYTE PTR [rax],al
   140006977:	add    BYTE PTR [rsi+0x1],bl
   14000697a:	add    BYTE PTR [rax],al
   14000697c:	add    BYTE PTR [rax],al
   14000697e:	add    BYTE PTR [rax],al
   140006980:	add    DWORD PTR [rax+rax*1],edx
   140006983:	add    BYTE PTR [rax],al
   140006985:	add    BYTE PTR [rax],al
   140006987:	add    BYTE PTR [rax+0x42],bl
   14000698a:	add    BYTE PTR [rax+0x1],al
	...
   140006995:	add    BYTE PTR [rax],al
   140006997:	add    BYTE PTR [rsp+rdx*1],al
   14000699a:	add    BYTE PTR [rax],al
   14000699c:	add    BYTE PTR [rax],al
   14000699e:	add    BYTE PTR [rax],al
   1400069a0:	rex.W
   1400069a1:	rex.X add BYTE PTR [rax+0x1],al
   1400069a5:	add    BYTE PTR [rax],al
   1400069a7:	add    BYTE PTR [rcx+0x1],bl
   1400069aa:	add    BYTE PTR [rax],al
   1400069ac:	add    BYTE PTR [rax],al
   1400069ae:	add    BYTE PTR [rax],al
   1400069b0:	(bad)  
   1400069b1:	adc    al,0x0
   1400069b3:	add    BYTE PTR [rax],al
   1400069b5:	add    BYTE PTR [rax],al
   1400069b7:	add    BYTE PTR [rax],bh
   1400069b9:	rex.X add BYTE PTR [rax+0x1],al
   1400069bd:	add    BYTE PTR [rax],al
   1400069bf:	add    BYTE PTR [rsi],al
   1400069c1:	add    BYTE PTR [rax],al
   1400069c3:	add    BYTE PTR [rax],al
   1400069c5:	add    BYTE PTR [rax],al
   1400069c7:	add    BYTE PTR [rcx],cl
   1400069c9:	adc    al,0x0
   1400069cb:	add    BYTE PTR [rax],al
   1400069cd:	add    BYTE PTR [rax],al
   1400069cf:	add    BYTE PTR [rax],ch
   1400069d1:	rex.X add BYTE PTR [rax+0x1],al
   1400069d5:	add    BYTE PTR [rax],al
   1400069d7:	add    BYTE PTR [rax],cl
   1400069d9:	add    BYTE PTR [rax],al
   1400069db:	add    BYTE PTR [rax],al
   1400069dd:	add    BYTE PTR [rax],al
   1400069df:	add    BYTE PTR [rdx],cl
   1400069e1:	adc    al,0x0
   1400069e3:	add    BYTE PTR [rax],al
   1400069e5:	add    BYTE PTR [rax],al
   1400069e7:	add    BYTE PTR [rax],bl
   1400069e9:	rex.X add BYTE PTR [rax+0x1],al
   1400069ed:	add    BYTE PTR [rax],al
   1400069ef:	add    BYTE PTR [rcx],cl
   1400069f1:	add    BYTE PTR [rax],al
   1400069f3:	add    BYTE PTR [rax],al
   1400069f5:	add    BYTE PTR [rax],al
   1400069f7:	add    BYTE PTR [rsp+rdx*1],cl
   1400069fa:	add    BYTE PTR [rax],al
   1400069fc:	add    BYTE PTR [rax],al
   1400069fe:	add    BYTE PTR [rax],al
   140006a00:	or     BYTE PTR [rdx+0x0],al
   140006a03:	rex add DWORD PTR [rax],eax
   140006a06:	add    BYTE PTR [rax],al
   140006a08:	or     eax,DWORD PTR [rax]
   140006a0a:	add    BYTE PTR [rax],al
   140006a0c:	add    BYTE PTR [rax],al
   140006a0e:	add    BYTE PTR [rax],al
   140006a10:	sbb    dl,BYTE PTR [rax+rax*1]
   140006a13:	add    BYTE PTR [rax],al
   140006a15:	add    BYTE PTR [rax],al
   140006a17:	add    BYTE PTR [rax+0x1400036],bl
   140006a1d:	add    BYTE PTR [rax],al
   140006a1f:	add    BYTE PTR [rbx+0x1],cl
   140006a22:	add    BYTE PTR [rax],al
   140006a24:	add    BYTE PTR [rax],al
   140006a26:	add    BYTE PTR [rax],al
   140006a28:	cmp    edx,DWORD PTR [rax+rax*1]
   140006a2b:	add    BYTE PTR [rax],al
   140006a2d:	add    BYTE PTR [rax],al
   140006a2f:	add    al,bh
   140006a31:	add    BYTE PTR [r8+0x1],al
   140006a35:	add    BYTE PTR [rax],al
   140006a37:	add    BYTE PTR [rsi+0x1],bl
   140006a3a:	add    BYTE PTR [rax],al
   140006a3c:	add    BYTE PTR [rax],al
   140006a3e:	add    BYTE PTR [rax],al
   140006a40:	add    DWORD PTR [rax],ebx
   140006a42:	add    BYTE PTR [rax],al
   140006a44:	add    BYTE PTR [rax],al
   140006a46:	add    BYTE PTR [rax],al
   140006a48:	call   0x141406a8e
	...
   140006a55:	add    BYTE PTR [rax],al
   140006a57:	add    BYTE PTR [rcx],cl
   140006a59:	sbb    BYTE PTR [rax],al
   140006a5b:	add    BYTE PTR [rax],al
   140006a5d:	add    BYTE PTR [rax],al
   140006a5f:	add    al,bl
   140006a61:	add    BYTE PTR [r8+0x1],al
   140006a65:	add    BYTE PTR [rax],al
   140006a67:	add    BYTE PTR [rax],cl
   140006a69:	add    BYTE PTR [rax],al
   140006a6b:	add    BYTE PTR [rax],al
   140006a6d:	add    BYTE PTR [rax],al
   140006a6f:	add    BYTE PTR [rdx],cl
   140006a71:	sbb    BYTE PTR [rax],al
   140006a73:	add    BYTE PTR [rax],al
   140006a75:	add    BYTE PTR [rax],al
   140006a77:	add    al,cl
   140006a79:	add    BYTE PTR [r8+0x1],al
   140006a7d:	add    BYTE PTR [rax],al
   140006a7f:	add    BYTE PTR [rcx],cl
   140006a81:	add    BYTE PTR [rax],al
   140006a83:	add    BYTE PTR [rax],al
   140006a85:	add    BYTE PTR [rax],al
   140006a87:	add    BYTE PTR [rax+rbx*1],cl
   140006a8a:	add    BYTE PTR [rax],al
   140006a8c:	add    BYTE PTR [rax],al
   140006a8e:	add    BYTE PTR [rax],al
   140006a90:	mov    eax,0x1400041
   140006a95:	add    BYTE PTR [rax],al
   140006a97:	add    BYTE PTR [rbx],cl
   140006a99:	add    BYTE PTR [rax],al
   140006a9b:	add    BYTE PTR [rax],al
   140006a9d:	add    BYTE PTR [rax],al
   140006a9f:	add    BYTE PTR [rdx],bl
   140006aa1:	sbb    BYTE PTR [rax],al
   140006aa3:	add    BYTE PTR [rax],al
   140006aa5:	add    BYTE PTR [rax],al
   140006aa7:	add    BYTE PTR [rax+0x37],ah
   140006aaa:	add    BYTE PTR [rax+0x1],al
   140006aad:	add    BYTE PTR [rax],al
   140006aaf:	add    BYTE PTR [rbp+0x1],cl
   140006ab2:	add    BYTE PTR [rax],al
   140006ab4:	add    BYTE PTR [rax],al
   140006ab6:	add    BYTE PTR [rax],al
   140006ab8:	cmp    ebx,DWORD PTR [rax]
   140006aba:	add    BYTE PTR [rax],al
   140006abc:	add    BYTE PTR [rax],al
   140006abe:	add    BYTE PTR [rax],al
   140006ac0:	test   al,0x41
   140006ac2:	add    BYTE PTR [rax+0x1],al
   140006ac5:	add    BYTE PTR [rax],al
   140006ac7:	add    BYTE PTR [rbp+0x1],dl
   140006aca:	add    BYTE PTR [rax],al
   140006acc:	add    BYTE PTR [rax],al
   140006ace:	add    BYTE PTR [rax],al
   140006ad0:	add    DWORD PTR [rax+rax*1],ebx
   140006ad3:	add    BYTE PTR [rax],al
   140006ad5:	add    BYTE PTR [rax],al
   140006ad7:	add    BYTE PTR [rax+0x1400041],bl
	...
   140006ae5:	add    BYTE PTR [rax],al
   140006ae7:	add    BYTE PTR [rcx],cl
   140006ae9:	sbb    al,0x0
   140006aeb:	add    BYTE PTR [rax],al
   140006aed:	add    BYTE PTR [rax],al
   140006aef:	add    BYTE PTR [rax+0x1400041],cl
   140006af5:	add    BYTE PTR [rax],al
   140006af7:	add    BYTE PTR [rax],cl
   140006af9:	add    BYTE PTR [rax],al
   140006afb:	add    BYTE PTR [rax],al
   140006afd:	add    BYTE PTR [rax],al
   140006aff:	add    BYTE PTR [rdx],cl
   140006b01:	sbb    al,0x0
   140006b03:	add    BYTE PTR [rax],al
   140006b05:	add    BYTE PTR [rax],al
   140006b07:	add    BYTE PTR [rax+0x41],bh
   140006b0a:	add    BYTE PTR [rax+0x1],al
   140006b0d:	add    BYTE PTR [rax],al
   140006b0f:	add    BYTE PTR [rcx],cl
   140006b11:	add    BYTE PTR [rax],al
   140006b13:	add    BYTE PTR [rax],al
   140006b15:	add    BYTE PTR [rax],al
   140006b17:	add    BYTE PTR [rdx],bl
   140006b19:	sbb    al,0x0
   140006b1b:	add    BYTE PTR [rax],al
   140006b1d:	add    BYTE PTR [rax],al
   140006b1f:	add    BYTE PTR [rax],dh
   140006b21:	(bad)  
   140006b22:	add    BYTE PTR [rax+0x1],al
   140006b25:	add    BYTE PTR [rax],al
   140006b27:	add    BYTE PTR [rcx+rax*1+0x0],cl
   140006b2b:	add    BYTE PTR [rax],al
   140006b2d:	add    BYTE PTR [rax],al
   140006b2f:	add    BYTE PTR [rbx],bh
   140006b31:	sbb    al,0x0
   140006b33:	add    BYTE PTR [rax],al
   140006b35:	add    BYTE PTR [rax],al
   140006b37:	add    BYTE PTR [rax+0x41],ch
   140006b3a:	add    BYTE PTR [rax+0x1],al
   140006b3d:	add    BYTE PTR [rax],al
   140006b3f:	add    BYTE PTR [rbp+0x1],dl
   140006b42:	add    BYTE PTR [rax],al
   140006b44:	add    BYTE PTR [rax],al
   140006b46:	add    BYTE PTR [rax],al
   140006b48:	add    DWORD PTR [rax],esp
   140006b4a:	add    BYTE PTR [rax],al
   140006b4c:	add    BYTE PTR [rax],al
   140006b4e:	add    BYTE PTR [rax],al
   140006b50:	pop    rax
   140006b51:	add    BYTE PTR [r8+0x1],al
	...
   140006b5d:	add    BYTE PTR [rax],al
   140006b5f:	add    BYTE PTR [rcx],cl
   140006b61:	and    BYTE PTR [rax],al
   140006b63:	add    BYTE PTR [rax],al
   140006b65:	add    BYTE PTR [rax],al
   140006b67:	add    BYTE PTR [rax+0x41],cl
   140006b6a:	add    BYTE PTR [rax+0x1],al
   140006b6d:	add    BYTE PTR [rax],al
   140006b6f:	add    BYTE PTR [rax],cl
   140006b71:	add    BYTE PTR [rax],al
   140006b73:	add    BYTE PTR [rax],al
   140006b75:	add    BYTE PTR [rax],al
   140006b77:	add    BYTE PTR [rdx],cl
   140006b79:	and    BYTE PTR [rax],al
   140006b7b:	add    BYTE PTR [rax],al
   140006b7d:	add    BYTE PTR [rax],al
   140006b7f:	add    BYTE PTR [rax],bh
   140006b81:	add    BYTE PTR [r8+0x1],al
   140006b85:	add    BYTE PTR [rax],al
   140006b87:	add    BYTE PTR [rcx],cl
   140006b89:	add    BYTE PTR [rax],al
   140006b8b:	add    BYTE PTR [rax],al
   140006b8d:	add    BYTE PTR [rax],al
   140006b8f:	add    BYTE PTR [rdx],bl
   140006b91:	and    BYTE PTR [rax],al
   140006b93:	add    BYTE PTR [rax],al
   140006b95:	add    BYTE PTR [rax],al
   140006b97:	add    al,cl
   140006b99:	add    BYTE PTR ss:[rax+0x1],al
   140006b9d:	add    BYTE PTR [rax],al
   140006b9f:	add    BYTE PTR [rdx+0x1],cl
   140006ba2:	add    BYTE PTR [rax],al
   140006ba4:	add    BYTE PTR [rax],al
   140006ba6:	add    BYTE PTR [rax],al
   140006ba8:	cmp    esp,DWORD PTR [rax]
   140006baa:	add    BYTE PTR [rax],al
   140006bac:	add    BYTE PTR [rax],al
   140006bae:	add    BYTE PTR [rax],al
   140006bb0:	sub    BYTE PTR [rcx+0x0],al
   140006bb3:	rex add DWORD PTR [rax],eax
   140006bb6:	add    BYTE PTR [rax],al
   140006bb8:	push   rax
   140006bb9:	add    DWORD PTR [rax],eax
   140006bbb:	add    BYTE PTR [rax],al
   140006bbd:	add    BYTE PTR [rax],al
   140006bbf:	add    BYTE PTR [rcx],al
   140006bc1:	and    al,0x0
   140006bc3:	add    BYTE PTR [rax],al
   140006bc5:	add    BYTE PTR [rax],al
   140006bc7:	add    BYTE PTR [rax],bl
   140006bc9:	add    BYTE PTR [r8+0x1],al
	...
   140006bd5:	add    BYTE PTR [rax],al
   140006bd7:	add    BYTE PTR [rcx],cl
   140006bd9:	and    al,0x0
   140006bdb:	add    BYTE PTR [rax],al
   140006bdd:	add    BYTE PTR [rax],al
   140006bdf:	add    BYTE PTR [rax],cl
   140006be1:	add    BYTE PTR [r8+0x1],al
   140006be5:	add    BYTE PTR [rax],al
   140006be7:	add    BYTE PTR [rax],cl
   140006be9:	add    BYTE PTR [rax],al
   140006beb:	add    BYTE PTR [rax],al
   140006bed:	add    BYTE PTR [rax],al
   140006bef:	add    BYTE PTR [rdx],cl
   140006bf1:	and    al,0x0
   140006bf3:	add    BYTE PTR [rax],al
   140006bf5:	add    BYTE PTR [rax],al
   140006bf7:	add    al,bh
   140006bf9:	add    BYTE PTR [rax+0x1],al
   140006bfd:	add    BYTE PTR [rax],al
   140006bff:	add    BYTE PTR [rcx],cl
   140006c01:	add    BYTE PTR [rax],al
   140006c03:	add    BYTE PTR [rax],al
   140006c05:	add    BYTE PTR [rax],al
   140006c07:	add    BYTE PTR [rdx],bl
   140006c09:	and    al,0x0
   140006c0b:	add    BYTE PTR [rax],al
   140006c0d:	add    BYTE PTR [rax],al
   140006c0f:	add    al,ah
   140006c11:	add    BYTE PTR [rax+0x1],al
   140006c15:	add    BYTE PTR [rax],al
   140006c17:	add    BYTE PTR [rbp+0x1],cl
   140006c1a:	add    BYTE PTR [rax],al
   140006c1c:	add    BYTE PTR [rax],al
   140006c1e:	add    BYTE PTR [rax],al
   140006c20:	cmp    esp,DWORD PTR [rax+rax*1]
   140006c23:	add    BYTE PTR [rax],al
   140006c25:	add    BYTE PTR [rax],al
   140006c27:	add    al,dl
   140006c29:	add    BYTE PTR [rax+0x1],al
   140006c2d:	add    BYTE PTR [rax],al
   140006c2f:	add    BYTE PTR [rsi+0x1],cl
   140006c32:	add    BYTE PTR [rax],al
   140006c34:	add    BYTE PTR [rax],al
   140006c36:	add    BYTE PTR [rax],al
   140006c38:	add    DWORD PTR [rax],ebp
   140006c3a:	add    BYTE PTR [rax],al
   140006c3c:	add    BYTE PTR [rax],al
   140006c3e:	add    BYTE PTR [rax],al
   140006c40:	rol    BYTE PTR [rax+0x0],0x40
   140006c44:	add    DWORD PTR [rax],eax
	...
   140006c4e:	add    BYTE PTR [rax],al
   140006c50:	or     DWORD PTR [rax],ebp
   140006c52:	add    BYTE PTR [rax],al
   140006c54:	add    BYTE PTR [rax],al
   140006c56:	add    BYTE PTR [rax],al
   140006c58:	mov    al,0x40
   140006c5a:	add    BYTE PTR [rax+0x1],al
   140006c5d:	add    BYTE PTR [rax],al
   140006c5f:	add    BYTE PTR [rax],cl
   140006c61:	add    BYTE PTR [rax],al
   140006c63:	add    BYTE PTR [rax],al
   140006c65:	add    BYTE PTR [rax],al
   140006c67:	add    BYTE PTR [rdx],cl
   140006c69:	sub    BYTE PTR [rax],al
   140006c6b:	add    BYTE PTR [rax],al
   140006c6d:	add    BYTE PTR [rax],al
   140006c6f:	add    BYTE PTR [rax+0x1400040],ah
   140006c75:	add    BYTE PTR [rax],al
   140006c77:	add    BYTE PTR [rcx],cl
   140006c79:	add    BYTE PTR [rax],al
   140006c7b:	add    BYTE PTR [rax],al
   140006c7d:	add    BYTE PTR [rax],al
   140006c7f:	add    BYTE PTR [rdx],bl
   140006c81:	sub    BYTE PTR [rax],al
   140006c83:	add    BYTE PTR [rax],al
   140006c85:	add    BYTE PTR [rax],al
   140006c87:	add    BYTE PTR [rax+0x1400040],cl
   140006c8d:	add    BYTE PTR [rax],al
   140006c8f:	add    BYTE PTR [rcx+rax*1+0x0],cl
   140006c93:	add    BYTE PTR [rax],al
   140006c95:	add    BYTE PTR [rax],al
   140006c97:	add    BYTE PTR [rcx],al
   140006c99:	sub    al,0x0
   140006c9b:	add    BYTE PTR [rax],al
   140006c9d:	add    BYTE PTR [rax],al
   140006c9f:	add    BYTE PTR [rax+0x40],bh
   140006ca2:	add    BYTE PTR [rax+0x1],al
	...
   140006cad:	add    BYTE PTR [rax],al
   140006caf:	add    BYTE PTR [rcx],cl
   140006cb1:	sub    al,0x0
   140006cb3:	add    BYTE PTR [rax],al
   140006cb5:	add    BYTE PTR [rax],al
   140006cb7:	add    BYTE PTR [rax+0x40],ch
   140006cba:	add    BYTE PTR [rax+0x1],al
   140006cbd:	add    BYTE PTR [rax],al
   140006cbf:	add    BYTE PTR [rax],cl
   140006cc1:	add    BYTE PTR [rax],al
   140006cc3:	add    BYTE PTR [rax],al
   140006cc5:	add    BYTE PTR [rax],al
   140006cc7:	add    BYTE PTR [rdx],cl
   140006cc9:	sub    al,0x0
   140006ccb:	add    BYTE PTR [rax],al
   140006ccd:	add    BYTE PTR [rax],al
   140006ccf:	add    BYTE PTR [rax+0x40],bl
   140006cd2:	add    BYTE PTR [rax+0x1],al
   140006cd5:	add    BYTE PTR [rax],al
   140006cd7:	add    BYTE PTR [rcx],cl
   140006cd9:	add    BYTE PTR [rax],al
   140006cdb:	add    BYTE PTR [rax],al
   140006cdd:	add    BYTE PTR [rax],al
   140006cdf:	add    BYTE PTR [rdx],bl
   140006ce1:	sub    al,0x0
   140006ce3:	add    BYTE PTR [rax],al
   140006ce5:	add    BYTE PTR [rax],al
   140006ce7:	add    BYTE PTR [rax+0x40],al
   140006cea:	add    BYTE PTR [rax+0x1],al
   140006ced:	add    BYTE PTR [rax],al
   140006cef:	add    BYTE PTR [rbp+0x1],cl
   140006cf2:	add    BYTE PTR [rax],al
   140006cf4:	add    BYTE PTR [rax],al
   140006cf6:	add    BYTE PTR [rax],al
   140006cf8:	add    DWORD PTR [rax],esi
   140006cfa:	add    BYTE PTR [rax],al
   140006cfc:	add    BYTE PTR [rax],al
   140006cfe:	add    BYTE PTR [rax],al
   140006d00:	xor    BYTE PTR [rax+0x0],al
   140006d03:	rex add DWORD PTR [rax],eax
	...
   140006d0e:	add    BYTE PTR [rax],al
   140006d10:	or     DWORD PTR [rax],esi
   140006d12:	add    BYTE PTR [rax],al
   140006d14:	add    BYTE PTR [rax],al
   140006d16:	add    BYTE PTR [rax],al
   140006d18:	and    BYTE PTR [rax+0x0],al
   140006d1b:	rex add DWORD PTR [rax],eax
   140006d1e:	add    BYTE PTR [rax],al
   140006d20:	or     BYTE PTR [rax],al
   140006d22:	add    BYTE PTR [rax],al
   140006d24:	add    BYTE PTR [rax],al
   140006d26:	add    BYTE PTR [rax],al
   140006d28:	or     dh,BYTE PTR [rax]
   140006d2a:	add    BYTE PTR [rax],al
   140006d2c:	add    BYTE PTR [rax],al
   140006d2e:	add    BYTE PTR [rax],al
   140006d30:	adc    BYTE PTR [rax+0x0],al
   140006d33:	rex add DWORD PTR [rax],eax
   140006d36:	add    BYTE PTR [rax],al
   140006d38:	or     DWORD PTR [rax],eax
   140006d3a:	add    BYTE PTR [rax],al
   140006d3c:	add    BYTE PTR [rax],al
   140006d3e:	add    BYTE PTR [rax],al
   140006d40:	sbb    dh,BYTE PTR [rax]
   140006d42:	add    BYTE PTR [rax],al
   140006d44:	add    BYTE PTR [rax],al
   140006d46:	add    BYTE PTR [rax],al
   140006d48:	clc    
   140006d49:	(bad)  
   140006d4a:	add    BYTE PTR [rax+0x1],al
   140006d4d:	add    BYTE PTR [rax],al
   140006d4f:	add    BYTE PTR [rcx+rax*1+0x0],cl
   140006d53:	add    BYTE PTR [rax],al
   140006d55:	add    BYTE PTR [rax],al
   140006d57:	add    BYTE PTR [rcx],al
   140006d59:	xor    al,0x0
   140006d5b:	add    BYTE PTR [rax],al
   140006d5d:	add    BYTE PTR [rax],al
   140006d5f:	add    al,ch
   140006d61:	(bad)  
   140006d62:	add    BYTE PTR [rax+0x1],al
	...
   140006d6d:	add    BYTE PTR [rax],al
   140006d6f:	add    BYTE PTR [rcx],cl
   140006d71:	xor    al,0x0
   140006d73:	add    BYTE PTR [rax],al
   140006d75:	add    BYTE PTR [rax],al
   140006d77:	add    al,bl
   140006d79:	(bad)  
   140006d7a:	add    BYTE PTR [rax+0x1],al
   140006d7d:	add    BYTE PTR [rax],al
   140006d7f:	add    BYTE PTR [rax],cl
   140006d81:	add    BYTE PTR [rax],al
   140006d83:	add    BYTE PTR [rax],al
   140006d85:	add    BYTE PTR [rax],al
   140006d87:	add    BYTE PTR [rdx],cl
   140006d89:	xor    al,0x0
   140006d8b:	add    BYTE PTR [rax],al
   140006d8d:	add    BYTE PTR [rax],al
   140006d8f:	add    al,cl
   140006d91:	(bad)  
   140006d92:	add    BYTE PTR [rax+0x1],al
   140006d95:	add    BYTE PTR [rax],al
   140006d97:	add    BYTE PTR [rcx],cl
   140006d99:	add    BYTE PTR [rax],al
   140006d9b:	add    BYTE PTR [rax],al
   140006d9d:	add    BYTE PTR [rax],al
   140006d9f:	add    BYTE PTR [rcx],al
   140006da1:	cmp    BYTE PTR [rax],al
   140006da3:	add    BYTE PTR [rax],al
   140006da5:	add    BYTE PTR [rax],al
   140006da7:	add    BYTE PTR [rax+0x140003f],bh
	...
   140006db5:	add    BYTE PTR [rax],al
   140006db7:	add    BYTE PTR [rdx],cl
   140006db9:	cmp    BYTE PTR [rax],al
   140006dbb:	add    BYTE PTR [rax],al
   140006dbd:	add    BYTE PTR [rax],al
   140006dbf:	add    BYTE PTR [rax+0x140003f],ch
   140006dc5:	add    BYTE PTR [rax],al
   140006dc7:	add    BYTE PTR [rcx],cl
   140006dc9:	add    BYTE PTR [rax],al
   140006dcb:	add    BYTE PTR [rax],al
   140006dcd:	add    BYTE PTR [rax],al
   140006dcf:	add    BYTE PTR [rcx],al
   140006dd1:	cmp    al,0x0
   140006dd3:	add    BYTE PTR [rax],al
   140006dd5:	add    BYTE PTR [rax],al
   140006dd7:	add    BYTE PTR [rax+0x140003f],bl
	...
   140006de5:	add    BYTE PTR [rax],al
   140006de7:	add    BYTE PTR [rdx],cl
   140006de9:	cmp    al,0x0
   140006deb:	add    BYTE PTR [rax],al
   140006ded:	add    BYTE PTR [rax],al
   140006def:	add    BYTE PTR [rax+0x140003f],cl
   140006df5:	add    BYTE PTR [rax],al
   140006df7:	add    BYTE PTR [rcx],cl
   140006df9:	add    BYTE PTR [rax],al
   140006dfb:	add    BYTE PTR [rax],al
   140006dfd:	add    BYTE PTR [rax],al
   140006dff:	add    BYTE PTR [rcx],al
   140006e01:	add    BYTE PTR [rax],al
   140006e04:	add    BYTE PTR [rax],al
   140006e06:	add    BYTE PTR [rax],al
   140006e08:	js     0x140006e49
   140006e0a:	add    BYTE PTR [rax+0x1],al
	...
   140006e15:	add    BYTE PTR [rax],al
   140006e17:	add    BYTE PTR [rcx],cl
   140006e19:	add    BYTE PTR [rax],al
   140006e1c:	add    BYTE PTR [rax],al
   140006e1e:	add    BYTE PTR [rax],al
   140006e20:	push   0x140003f
   140006e25:	add    BYTE PTR [rax],al
   140006e27:	add    BYTE PTR [rax],cl
   140006e29:	add    BYTE PTR [rax],al
   140006e2b:	add    BYTE PTR [rax],al
   140006e2d:	add    BYTE PTR [rax],al
   140006e2f:	add    BYTE PTR [rdx],cl
   140006e31:	add    BYTE PTR [rax],al
   140006e34:	add    BYTE PTR [rax],al
   140006e36:	add    BYTE PTR [rax],al
   140006e38:	pop    rax
   140006e39:	(bad)  
   140006e3a:	add    BYTE PTR [rax+0x1],al
   140006e3d:	add    BYTE PTR [rax],al
   140006e3f:	add    BYTE PTR [rcx],cl
   140006e41:	add    BYTE PTR [rax],al
   140006e43:	add    BYTE PTR [rax],al
   140006e45:	add    BYTE PTR [rax],al
   140006e47:	add    BYTE PTR [rcx],cl
   140006e49:	add    BYTE PTR [rax],r8b
   140006e4c:	add    BYTE PTR [rax],al
   140006e4e:	add    BYTE PTR [rax],al
   140006e50:	rex.W (bad) 
   140006e52:	add    BYTE PTR [rax+0x1],al
   140006e55:	add    BYTE PTR [rax],al
   140006e57:	add    BYTE PTR [rax],cl
   140006e59:	add    BYTE PTR [rax],al
   140006e5b:	add    BYTE PTR [rax],al
   140006e5d:	add    BYTE PTR [rax],al
   140006e5f:	add    BYTE PTR [rdx],cl
   140006e61:	add    BYTE PTR [rax],r8b
   140006e64:	add    BYTE PTR [rax],al
   140006e66:	add    BYTE PTR [rax],al
   140006e68:	cmp    BYTE PTR [rdi],bh
   140006e6a:	add    BYTE PTR [rax+0x1],al
   140006e6d:	add    BYTE PTR [rax],al
   140006e6f:	add    BYTE PTR [rcx],cl
   140006e71:	add    BYTE PTR [rax],al
   140006e73:	add    BYTE PTR [rax],al
   140006e75:	add    BYTE PTR [rax],al
   140006e77:	add    BYTE PTR [rcx],cl
   140006e79:	rex.W add BYTE PTR [rax],al
   140006e7c:	add    BYTE PTR [rax],al
   140006e7e:	add    BYTE PTR [rax],al
   140006e80:	sub    BYTE PTR [rdi],bh
   140006e82:	add    BYTE PTR [rax+0x1],al
   140006e85:	add    BYTE PTR [rax],al
   140006e87:	add    BYTE PTR [rax],cl
   140006e89:	add    BYTE PTR [rax],al
   140006e8b:	add    BYTE PTR [rax],al
   140006e8d:	add    BYTE PTR [rax],al
   140006e8f:	add    BYTE PTR [rdx],cl
   140006e91:	rex.W add BYTE PTR [rax],al
   140006e94:	add    BYTE PTR [rax],al
   140006e96:	add    BYTE PTR [rax],al
   140006e98:	sbb    BYTE PTR [rdi],bh
   140006e9a:	add    BYTE PTR [rax+0x1],al
   140006e9d:	add    BYTE PTR [rax],al
   140006e9f:	add    BYTE PTR [rcx],cl
   140006ea1:	add    BYTE PTR [rax],al
   140006ea3:	add    BYTE PTR [rax],al
   140006ea5:	add    BYTE PTR [rax],al
   140006ea7:	add    BYTE PTR [rdx],cl
   140006ea9:	rex.WR add BYTE PTR [rax],r8b
   140006eac:	add    BYTE PTR [rax],al
   140006eae:	add    BYTE PTR [rax],al
   140006eb0:	or     BYTE PTR [rdi],bh
   140006eb2:	add    BYTE PTR [rax+0x1],al
   140006eb5:	add    BYTE PTR [rax],al
   140006eb7:	add    BYTE PTR [rcx],cl
   140006eb9:	add    BYTE PTR [rax],al
   140006ebb:	add    BYTE PTR [rax],al
   140006ebd:	add    BYTE PTR [rax],al
   140006ebf:	add    BYTE PTR [rdx],cl
   140006ec1:	push   rax
   140006ec2:	add    BYTE PTR [rax],al
   140006ec4:	add    BYTE PTR [rax],al
   140006ec6:	add    BYTE PTR [rax],al
   140006ec8:	clc    
   140006ec9:	add    BYTE PTR ds:[rax+0x1],al
   140006ecd:	add    BYTE PTR [rax],al
   140006ecf:	add    BYTE PTR [rcx],cl
   140006ed1:	add    BYTE PTR [rax],al
   140006ed3:	add    BYTE PTR [rax],al
   140006ed5:	add    BYTE PTR [rax],al
   140006ed7:	add    BYTE PTR [rdx],cl
   140006ed9:	push   rsp
   140006eda:	add    BYTE PTR [rax],al
   140006edc:	add    BYTE PTR [rax],al
   140006ede:	add    BYTE PTR [rax],al
   140006ee0:	call   0x141406f23
   140006ee5:	add    BYTE PTR [rax],al
   140006ee7:	add    BYTE PTR [rcx],cl
   140006ee9:	add    BYTE PTR [rax],al
   140006eeb:	add    BYTE PTR [rax],al
   140006eed:	add    BYTE PTR [rax],al
   140006eef:	add    BYTE PTR [rdx],bl
   140006ef1:	add    BYTE PTR fs:[rax],al
   140006ef4:	add    BYTE PTR [rax],al
   140006ef6:	add    BYTE PTR [rax],al
   140006ef8:	fdivr  DWORD PTR [rsi]
   140006efa:	add    BYTE PTR [rax+0x1],al
   140006efd:	add    BYTE PTR [rax],al
   140006eff:	add    BYTE PTR [rbx+0x1],dl
   140006f02:	add    BYTE PTR [rax],al
   140006f04:	add    BYTE PTR [rax],al
   140006f06:	add    BYTE PTR [rax],al
   140006f08:	sbb    ch,BYTE PTR [rax+0x0]
   140006f0b:	add    BYTE PTR [rax],al
   140006f0d:	add    BYTE PTR [rax],al
   140006f0f:	add    al,cl
   140006f11:	add    BYTE PTR ds:[rax+0x1],al
   140006f15:	add    BYTE PTR [rax],al
   140006f17:	add    BYTE PTR [rbx+0x1],dl
   140006f1a:	add    BYTE PTR [rax],al
   140006f1c:	add    BYTE PTR [rax],al
   140006f1e:	add    BYTE PTR [rax],al
   140006f20:	sbb    ch,BYTE PTR [rax+rax*1+0x0]
   140006f24:	add    BYTE PTR [rax],al
   140006f26:	add    BYTE PTR [rax],al
   140006f28:	mov    eax,0x140003e
   140006f2d:	add    BYTE PTR [rax],al
   140006f2f:	add    BYTE PTR [rbx+0x1],bl
   140006f32:	add    BYTE PTR [rax],al
   140006f34:	add    BYTE PTR [rax],al
   140006f36:	add    BYTE PTR [rax],al
   140006f38:	sbb    dh,BYTE PTR [rax+0x0]
   140006f3b:	add    BYTE PTR [rax],al
   140006f3d:	add    BYTE PTR [rax],al
   140006f3f:	add    BYTE PTR [rax+0x140003e],ch
   140006f45:	add    BYTE PTR [rax],al
   140006f47:	add    BYTE PTR [rbx+0x1],bl
   140006f4a:	add    BYTE PTR [rax],al
   140006f4c:	add    BYTE PTR [rax],al
   140006f4e:	add    BYTE PTR [rax],al
   140006f50:	cmp    esi,DWORD PTR [rax+0x0]
   140006f53:	add    BYTE PTR [rax],al
   140006f55:	add    BYTE PTR [rax],al
   140006f57:	add    BYTE PTR [rax+0x140003e],ah
   140006f5d:	add    BYTE PTR [rax],al
   140006f5f:	add    BYTE PTR [rdi],dh
   140006f61:	add    BYTE PTR [rax],al
   140006f63:	add    BYTE PTR [rax],al
   140006f65:	add    BYTE PTR [rax],al
   140006f67:	add    BYTE PTR [rsp+rsi*2],ch
   140006f6a:	add    BYTE PTR [rax],al
   140006f6c:	add    BYTE PTR [rax],al
   140006f6e:	add    BYTE PTR [rax],al
   140006f70:	nop
   140006f71:	add    BYTE PTR ds:[rax+0x1],al
   140006f75:	add    BYTE PTR [rax],al
   140006f77:	add    BYTE PTR [rbx],ch
   140006f79:	add    BYTE PTR [rax],al
   140006f7b:	add    BYTE PTR [rax],al
   140006f7d:	add    BYTE PTR [rax],al
   140006f7f:	add    BYTE PTR [rbx],bh
   140006f81:	je     0x140006f83
   140006f83:	add    BYTE PTR [rax],al
   140006f85:	add    BYTE PTR [rax],al
   140006f87:	add    BYTE PTR [rax+0x140003e],cl
   140006f8d:	add    BYTE PTR [rax],al
   140006f8f:	add    BYTE PTR [rdi],dh
   140006f91:	add    BYTE PTR [rax],al
   140006f93:	add    BYTE PTR [rax],al
   140006f95:	add    BYTE PTR [rax],al
   140006f97:	add    BYTE PTR [rax+rdi*2],al
   140006f9a:	add    BYTE PTR [rax],al
   140006f9c:	add    BYTE PTR [rax],al
   140006f9e:	add    BYTE PTR [rax],al
   140006fa0:	cmp    BYTE PTR [rsi],0x0
   140006fa3:	rex add DWORD PTR [rax],eax
   140006fa6:	add    BYTE PTR [rax],al
   140006fa8:	push   0x0
   140006fad:	add    BYTE PTR [rax],al
   140006faf:	add    BYTE PTR [rax+rdi*2],dl
   140006fb2:	add    BYTE PTR [rax],al
   140006fb4:	add    BYTE PTR [rax],al
   140006fb6:	add    BYTE PTR [rax],al
   140006fb8:	js     0x140006ff8
   140006fba:	add    BYTE PTR [rax+0x1],al
   140006fbd:	add    BYTE PTR [rax],al
   140006fbf:	add    BYTE PTR [rbx],dl
   140006fc1:	add    BYTE PTR [rax],al
   140006fc3:	add    BYTE PTR [rax],al
   140006fc5:	add    BYTE PTR [rax],al
   140006fc7:	add    BYTE PTR [rdx],bl
   140006fc9:	js     0x140006fcb
   140006fcb:	add    BYTE PTR [rax],al
   140006fcd:	add    BYTE PTR [rax],al
   140006fcf:	add    BYTE PTR [rax+0x3e],dh
   140006fd2:	add    BYTE PTR [rax+0x1],al
   140006fd5:	add    BYTE PTR [rax],al
   140006fd7:	add    BYTE PTR [rax+0x0],ch
   140006fda:	add    BYTE PTR [rax],al
   140006fdc:	add    BYTE PTR [rax],al
   140006fde:	add    BYTE PTR [rax],al
   140006fe0:	sub    al,0x78
   140006fe2:	add    BYTE PTR [rax],al
   140006fe4:	add    BYTE PTR [rax],al
   140006fe6:	add    BYTE PTR [rax],al
   140006fe8:	(bad)  
   140006fe9:	add    BYTE PTR ds:[rax+0x1],al
   140006fed:	add    BYTE PTR [rax],al
   140006fef:	add    BYTE PTR [rbx],ch
   140006ff1:	add    BYTE PTR [rax],al
   140006ff3:	add    BYTE PTR [rax],al
   140006ff5:	add    BYTE PTR [rax],al
   140006ff7:	add    BYTE PTR [rbx],bh
   140006ff9:	js     0x140006ffb
   140006ffb:	add    BYTE PTR [rax],al
   140006ffd:	add    BYTE PTR [rax],al
   140006fff:	add    BYTE PTR [rax+0x3e],bl
   140007002:	add    BYTE PTR [rax+0x1],al
   140007005:	add    BYTE PTR [rax],al
   140007007:	add    BYTE PTR [rdi],dh
   140007009:	add    BYTE PTR [rax],al
   14000700b:	add    BYTE PTR [rax],al
   14000700d:	add    BYTE PTR [rax],al
   14000700f:	add    BYTE PTR [rbx+0x78],al
   140007012:	add    BYTE PTR [rax],al
   140007014:	add    BYTE PTR [rax],al
   140007016:	add    BYTE PTR [rax],al
   140007018:	rex.W
   140007019:	add    BYTE PTR ds:[rax+0x1],al
   14000701d:	add    BYTE PTR [rax],al
   14000701f:	add    BYTE PTR [rsi],bh
   140007021:	add    BYTE PTR [rax],al
   140007023:	add    BYTE PTR [rax],al
   140007025:	add    BYTE PTR [rax],al
   140007027:	add    BYTE PTR [rax+0x78],dl
   14000702a:	add    BYTE PTR [rax],al
   14000702c:	add    BYTE PTR [rax],al
   14000702e:	add    BYTE PTR [rax],al
   140007030:	cmp    BYTE PTR [rsi],bh
   140007032:	add    BYTE PTR [rax+0x1],al
   140007035:	add    BYTE PTR [rax],al
   140007037:	add    BYTE PTR [rbx+0x0],cl
   14000703a:	add    BYTE PTR [rax],al
   14000703c:	add    BYTE PTR [rax],al
   14000703e:	add    BYTE PTR [rax],al
   140007040:	pop    rbp
   140007041:	js     0x140007043
   140007043:	add    BYTE PTR [rax],al
   140007045:	add    BYTE PTR [rax],al
   140007047:	add    BYTE PTR [rax],ch
   140007049:	add    BYTE PTR ds:[rax+0x1],al
   14000704d:	add    BYTE PTR [rax],al
   14000704f:	add    BYTE PTR [rax+rax*1+0x0],dl
   140007053:	add    BYTE PTR [rax],al
   140007055:	add    BYTE PTR [rax],al
   140007057:	add    BYTE PTR [rsp+rdi*2],al
   14000705a:	add    BYTE PTR [rax],al
   14000705c:	add    BYTE PTR [rax],al
   14000705e:	add    BYTE PTR [rax],al
   140007060:	jo     0x140007098
   140007062:	add    BYTE PTR [rax+0x1],al
   140007065:	add    BYTE PTR [rax],al
   140007067:	add    BYTE PTR [rcx+0x1],dl
   14000706a:	add    BYTE PTR [rax],al
   14000706c:	add    BYTE PTR [rax],al
   14000706e:	add    BYTE PTR [rax],al
   140007070:	adc    al,0x7c
   140007072:	add    BYTE PTR [rax],al
   140007074:	add    BYTE PTR [rax],al
   140007076:	add    BYTE PTR [rax],al
   140007078:	and    BYTE PTR [rsi],bh
   14000707a:	add    BYTE PTR [rax+0x1],al
   14000707d:	add    BYTE PTR [rax],al
   14000707f:	add    BYTE PTR [rbx],dl
   140007081:	add    BYTE PTR [rax],al
   140007083:	add    BYTE PTR [rax],al
   140007085:	add    BYTE PTR [rax],al
   140007087:	add    BYTE PTR [rdx],bl
   140007089:	jl     0x14000708b
   14000708b:	add    BYTE PTR [rax],al
   14000708d:	add    BYTE PTR [rax],al
   14000708f:	add    BYTE PTR [rax],bl
   140007091:	add    BYTE PTR ds:[rax+0x1],al
   140007095:	add    BYTE PTR [rax],al
   140007097:	add    BYTE PTR [rax+0x0],ch
   14000709a:	add    BYTE PTR [rax],al
   14000709c:	add    BYTE PTR [rax],al
   14000709e:	add    BYTE PTR [rax],al
   1400070a0:	sub    BYTE PTR [rax+rax*1+0x0],bh
   1400070a4:	add    BYTE PTR [rax],al
   1400070a6:	add    BYTE PTR [rax],al
   1400070a8:	or     BYTE PTR [rsi],bh
   1400070aa:	add    BYTE PTR [rax+0x1],al
   1400070ad:	add    BYTE PTR [rax],al
   1400070af:	add    BYTE PTR [rdi],ah
   1400070b1:	add    BYTE PTR [rax],al
   1400070b3:	add    BYTE PTR [rax],al
   1400070b5:	add    BYTE PTR [rax],al
   1400070b7:	add    BYTE PTR [rsi],ch
   1400070b9:	jl     0x1400070bb
   1400070bb:	add    BYTE PTR [rax],al
   1400070bd:	add    BYTE PTR [rax],al
   1400070bf:	add    BYTE PTR [rax],al
   1400070c1:	add    BYTE PTR ds:[rax+0x1],al
   1400070c5:	add    BYTE PTR [rax],al
   1400070c7:	add    BYTE PTR [rip+0x0],ch        # 0x1400070cd
   1400070cd:	add    BYTE PTR [rax],al
   1400070cf:	add    BYTE PTR [rbx],bh
   1400070d1:	jl     0x1400070d3
   1400070d3:	add    BYTE PTR [rax],al
   1400070d5:	add    BYTE PTR [rax],al
   1400070d7:	add    al,bh
   1400070d9:	cmp    eax,0x14000
   1400070de:	add    BYTE PTR [rax],al
   1400070e0:	(bad)  
   1400070e1:	add    BYTE PTR [rax],al
   1400070e3:	add    BYTE PTR [rax],al
   1400070e5:	add    BYTE PTR [rax],al
   1400070e7:	add    BYTE PTR [rbx+0x7c],al
   1400070ea:	add    BYTE PTR [rax],al
   1400070ec:	add    BYTE PTR [rax],al
   1400070ee:	add    BYTE PTR [rax],al
   1400070f0:	call   0x141407132
   1400070f5:	add    BYTE PTR [rax],al
   1400070f7:	add    BYTE PTR [rsi],bh
   1400070f9:	add    BYTE PTR [rax],al
   1400070fb:	add    BYTE PTR [rax],al
   1400070fd:	add    BYTE PTR [rax],al
   1400070ff:	add    BYTE PTR [rax+0x7c],dl
   140007102:	add    BYTE PTR [rax],al
   140007104:	add    BYTE PTR [rax],al
   140007106:	add    BYTE PTR [rax],al
   140007108:	fdivr  DWORD PTR [rip+0x14000]        # 0x14001b10e
   14000710e:	add    BYTE PTR [rax],al
   140007110:	rex.WXB add BYTE PTR [r8],al
   140007113:	add    BYTE PTR [rax],al
   140007115:	add    BYTE PTR [rax],al
   140007117:	add    BYTE PTR [rbp+0x7c],bl
   14000711a:	add    BYTE PTR [rax],al
   14000711c:	add    BYTE PTR [rax],al
   14000711e:	add    BYTE PTR [rax],al
   140007120:	enter  0x3d,0x40
   140007124:	add    DWORD PTR [rax],eax
   140007126:	add    BYTE PTR [rax],al
   140007128:	push   rsp
   140007129:	add    BYTE PTR [rax],al
   14000712b:	add    BYTE PTR [rax],al
   14000712d:	add    BYTE PTR [rax],al
   14000712f:	add    BYTE PTR [rdi+0x7c],bl
   140007132:	add    BYTE PTR [rax],al
   140007134:	add    BYTE PTR [rax],al
   140007136:	add    BYTE PTR [rax],al
   140007138:	mov    al,0x3d
   14000713a:	add    BYTE PTR [rax+0x1],al
   14000713d:	add    BYTE PTR [rax],al
   14000713f:	add    BYTE PTR [rsi+0x0],dl
   140007142:	add    BYTE PTR [rax],al
   140007144:	add    BYTE PTR [rax],al
   140007146:	add    BYTE PTR [rax],al
   140007148:	push   0x7c
   14000714d:	add    BYTE PTR [rax],al
   14000714f:	add    BYTE PTR [rax+0x140003d],ah
   140007155:	add    BYTE PTR [rax],al
   140007157:	add    BYTE PTR [rax+rax*1+0x0],bl
   14000715b:	add    BYTE PTR [rax],al
   14000715d:	add    BYTE PTR [rax],al
   14000715f:	add    BYTE PTR [rax-0x76],al
   140007162:	add    BYTE PTR [rax+0x1],al
   140007165:	add    BYTE PTR [rax],al
   140007167:	add    BYTE PTR [rax+0x0],ch
   14000716a:	add    BYTE PTR [rax],al
   14000716c:	add    BYTE PTR [rax],al
   14000716e:	add    BYTE PTR [rax],al
   140007170:	push   0x140004e
   140007175:	add    BYTE PTR [rax],al
   140007177:	add    BYTE PTR [rdx],dh
   140007179:	add    BYTE PTR [rax],al
   14000717b:	add    BYTE PTR [rax],al
   14000717d:	add    BYTE PTR [rax],al
   14000717f:	add    BYTE PTR [rax],bl
   140007181:	rex.WB add BYTE PTR [r8+0x1],al
   140007185:	add    BYTE PTR [rax],al
   140007187:	add    BYTE PTR [rsi+0x0],ah
   14000718d:	add    BYTE PTR [rax],al
   14000718f:	add    BYTE PTR [rax+0x4d],dl
   140007192:	add    BYTE PTR [rax+0x1],al
   140007195:	add    BYTE PTR [rax],al
   140007197:	add    BYTE PTR [rbp+0x0],dl
   14000719a:	add    BYTE PTR [rax],al
   14000719c:	add    BYTE PTR [rax],al
   14000719e:	add    BYTE PTR [rax],al
   1400071a0:	call   0x1414071eb
   1400071a5:	add    BYTE PTR [rax],al
   1400071a7:	add    al,cl
   1400071a9:	add    BYTE PTR [rax],al
   1400071ab:	add    BYTE PTR [rax],al
   1400071ad:	add    BYTE PTR [rax],al
   1400071af:	add    BYTE PTR [rax+0x140003f],bh
   1400071b5:	add    BYTE PTR [rax],al
   1400071b7:	add    BYTE PTR [rcx+rax*1],bh
   1400071ba:	add    BYTE PTR [rax],al
   1400071bc:	add    BYTE PTR [rax],al
   1400071be:	add    BYTE PTR [rax],al
   1400071c0:	cwde   
   1400071c1:	(bad)  
   1400071c2:	add    BYTE PTR [rax+0x1],al
   1400071c5:	add    BYTE PTR [rax],al
   1400071c7:	add    BYTE PTR [rsi],bh
   1400071c9:	add    DWORD PTR [rax],eax
   1400071cb:	add    BYTE PTR [rax],al
   1400071cd:	add    BYTE PTR [rax],al
   1400071cf:	add    BYTE PTR [rax+0x42],bl
   1400071d2:	add    BYTE PTR [rax+0x1],al
   1400071d5:	add    BYTE PTR [rax],al
   1400071d7:	add    BYTE PTR [rax],dl
   1400071d9:	add    DWORD PTR [rax],eax
   1400071db:	add    BYTE PTR [rax],al
   1400071dd:	add    BYTE PTR [rax],al
   1400071df:	add    BYTE PTR [rax+0x43],bl
   1400071e2:	add    BYTE PTR [rax+0x1],al
   1400071e5:	add    BYTE PTR [rax],al
   1400071e7:	add    bh,bh
   1400071e9:	add    BYTE PTR [rax],al
   1400071eb:	add    BYTE PTR [rax],al
   1400071ed:	add    BYTE PTR [rax],al
   1400071ef:	add    al,ah
   1400071f1:	add    BYTE PTR [rax+0x1],r8b
   1400071f5:	add    BYTE PTR [rax],al
   1400071f7:	add    bh,ah
   1400071f9:	add    BYTE PTR [rax],al
   1400071fb:	add    BYTE PTR [rax],al
   1400071fd:	add    BYTE PTR [rax],al
   1400071ff:	add    BYTE PTR [rax+0x40],bh
   140007202:	add    BYTE PTR [rax+0x1],al
   140007205:	add    BYTE PTR [rax],al
   140007207:	add    BYTE PTR [rcx],dh
   140007209:	add    DWORD PTR [rax],eax
   14000720b:	add    BYTE PTR [rax],al
   14000720d:	add    BYTE PTR [rax],al
   14000720f:	add    al,ch
   140007211:	(bad)  
   140007212:	add    BYTE PTR [rax+0x1],al
   140007215:	add    BYTE PTR [rax],al
   140007217:	add    BYTE PTR [rcx],bh
   140007219:	add    DWORD PTR [rax],eax
   14000721b:	add    BYTE PTR [rax],al
   14000721d:	add    BYTE PTR [rax],al
   14000721f:	add    BYTE PTR [rax],dh
   140007221:	add    BYTE PTR [rax+0x1],al
   140007225:	add    BYTE PTR [rax],al
   140007227:	add    BYTE PTR [rip+0x1],dh        # 0x14000722e
   14000722d:	add    BYTE PTR [rax],al
   14000722f:	add    al,bl
   140007231:	rex.X add BYTE PTR [rax+0x1],al
   140007235:	add    BYTE PTR [rax],al
   140007237:	add    BYTE PTR [rax],cl
   140007239:	add    DWORD PTR [rax],eax
   14000723b:	add    BYTE PTR [rax],al
   14000723d:	add    BYTE PTR [rax],al
   14000723f:	add    al,ch
   140007241:	add    BYTE PTR [r8+0x1],al
   140007245:	add    BYTE PTR [rax],al
   140007247:	add    BYTE PTR [rax],bl
   140007249:	add    DWORD PTR [rax],eax
   14000724b:	add    BYTE PTR [rax],al
   14000724d:	add    BYTE PTR [rax],al
   14000724f:	add    BYTE PTR [rax+0x41],bl
   140007252:	add    BYTE PTR [rax+0x1],al
   140007255:	add    BYTE PTR [rax],al
   140007257:	add    BYTE PTR [rbx],ah
   140007259:	add    DWORD PTR [rax],eax
   14000725b:	add    BYTE PTR [rax],al
   14000725d:	add    BYTE PTR [rax],al
   14000725f:	add    BYTE PTR [rax+0x3f],bh
   140007262:	add    BYTE PTR [rax+0x1],al
   140007265:	add    BYTE PTR [rax],al
   140007267:	add    BYTE PTR [rax+0x1],al
   14000726a:	add    BYTE PTR [rax],al
   14000726c:	add    BYTE PTR [rax],al
   14000726e:	add    BYTE PTR [rax],al
   140007270:	pop    rax
   140007271:	rex.WR add BYTE PTR [rax+0x1],r8b
   140007275:	add    BYTE PTR [rax],al
   140007277:	add    BYTE PTR [rax+rax*1+0x0],dh
   14000727b:	add    BYTE PTR [rax],al
   14000727d:	add    BYTE PTR [rax],al
   14000727f:	add    al,al
   140007281:	add    BYTE PTR [rax+0x1],al
   140007285:	add    BYTE PTR [rax],al
   140007287:	add    BYTE PTR [rip+0x1],ch        # 0x14000728e
   14000728d:	add    BYTE PTR [rax],al
   14000728f:	add    BYTE PTR [rax+0x1400041],bl
   140007295:	add    BYTE PTR [rax],al
   140007297:	add    BYTE PTR [rsi],bl
   140007299:	add    DWORD PTR [rax],eax
   14000729b:	add    BYTE PTR [rax],al
   14000729d:	add    BYTE PTR [rax],al
   14000729f:	add    BYTE PTR [rax],bl
   1400072a1:	add    BYTE PTR [r8+0x1],al
   1400072a5:	add    BYTE PTR [rax],al
   1400072a7:	add    BYTE PTR [rax],ch
   1400072a9:	add    DWORD PTR [rax],eax
   1400072ab:	add    BYTE PTR [rax],al
   1400072ad:	add    BYTE PTR [rax],al
   1400072af:	add    al,dl
   1400072b1:	rex.WR add BYTE PTR [rax+0x1],r8b
   1400072b5:	add    BYTE PTR [rax],al
   1400072b7:	add    BYTE PTR [rbp+0x0],ah
   1400072ba:	add    BYTE PTR [rax],al
   1400072bc:	add    BYTE PTR [rax],al
   1400072be:	add    BYTE PTR [rax],al
   1400072c0:	lock add BYTE PTR [r8+0x1],r8b
   1400072c5:	add    BYTE PTR [rax],al
   1400072c7:	add    bh,dl
   1400072c9:	add    BYTE PTR [rax],al
   1400072cb:	add    BYTE PTR [rax],al
   1400072cd:	add    BYTE PTR [rax],al
   1400072cf:	add    BYTE PTR [rax+0x140004d],bh
   1400072d5:	add    BYTE PTR [rax],al
   1400072d7:	add    BYTE PTR [rax+0x0],cl
   1400072da:	add    BYTE PTR [rax],al
   1400072dc:	add    BYTE PTR [rax],al
   1400072de:	add    BYTE PTR [rax],al
   1400072e0:	rol    BYTE PTR [rdi+0x0],0x40
   1400072e4:	add    DWORD PTR [rax],eax
   1400072e6:	add    BYTE PTR [rax],al
   1400072e8:	mov    ebx,0x0
   1400072ed:	add    BYTE PTR [rax],al
   1400072ef:	add    BYTE PTR [rax+0x140004e],ah
   1400072f5:	add    BYTE PTR [rax],al
   1400072f7:	add    BYTE PTR [rbx],ch
   1400072f9:	add    BYTE PTR [rax],al
   1400072fb:	add    BYTE PTR [rax],al
   1400072fd:	add    BYTE PTR [rax],al
   1400072ff:	add    BYTE PTR [rax+0x140003e],dl
   140007305:	add    BYTE PTR [rax],al
   140007307:	add    BYTE PTR [rdi+0x1],cl
   14000730a:	add    BYTE PTR [rax],al
   14000730c:	add    BYTE PTR [rax],al
   14000730e:	add    BYTE PTR [rax],al
   140007310:	sub    BYTE PTR [rax+rax*1+0x40],al
   140007314:	add    DWORD PTR [rax],eax
   140007316:	add    BYTE PTR [rax],al
   140007318:	repz add BYTE PTR [rax],al
   14000731b:	add    BYTE PTR [rax],al
   14000731d:	add    BYTE PTR [rax],al
   14000731f:	add    BYTE PTR [rax+0x3e],ah
   140007322:	add    BYTE PTR [rax+0x1],al
   140007325:	add    BYTE PTR [rax],al
   140007327:	add    BYTE PTR [rcx+rax*1+0x0],dl
   14000732b:	add    BYTE PTR [rax],al
   14000732d:	add    BYTE PTR [rax],al
   14000732f:	add    BYTE PTR [rax+0x1400049],cl
   140007335:	add    BYTE PTR [rax],al
   140007337:	add    BYTE PTR [rdi+0x0],bl
   14000733d:	add    BYTE PTR [rax],al
   14000733f:	add    al,bh
   140007341:	rex.WR add BYTE PTR [rax+0x1],r8b
   140007345:	add    BYTE PTR [rax],al
   140007347:	add    BYTE PTR [rax+0x0],ah
   14000734a:	add    BYTE PTR [rax],al
   14000734c:	add    BYTE PTR [rax],al
   14000734e:	add    BYTE PTR [rax],al
   140007350:	rex
   140007351:	rex.RX add BYTE PTR [rax+0x1],r8b
   140007355:	add    BYTE PTR [rax],al
   140007357:	add    dl,dl
   140007359:	add    BYTE PTR [rax],al
   14000735b:	add    BYTE PTR [rax],al
   14000735d:	add    BYTE PTR [rax],al
   14000735f:	add    al,ch
   140007361:	rex.WRX add BYTE PTR [rax+0x1],r8b
   140007365:	add    BYTE PTR [rax],al
   140007367:	add    BYTE PTR [rdx],ah
   140007369:	add    BYTE PTR [rax],al
   14000736b:	add    BYTE PTR [rax],al
   14000736d:	add    BYTE PTR [rax],al
   14000736f:	add    BYTE PTR [rax],ch
   140007371:	rex.WX add BYTE PTR [rax+0x1],al
   140007375:	add    BYTE PTR [rax],al
   140007377:	add    BYTE PTR [rsi+0x0],dl
   14000737d:	add    BYTE PTR [rax],al
   14000737f:	add    al,ch
   140007381:	rex.WRXB add BYTE PTR [r8+0x1],r8b
   140007385:	add    BYTE PTR [rax],al
   140007387:	add    BYTE PTR [rcx],al
   140007389:	add    BYTE PTR [rax],al
   14000738b:	add    BYTE PTR [rax],al
   14000738d:	add    BYTE PTR [rax],al
   14000738f:	add    BYTE PTR [rax+0x4c],cl
   140007392:	add    BYTE PTR [rax+0x1],al
   140007395:	add    BYTE PTR [rax],al
   140007397:	add    BYTE PTR [rbp+0x0],dh
   14000739a:	add    BYTE PTR [rax],al
   14000739c:	add    BYTE PTR [rax],al
   14000739e:	add    BYTE PTR [rax],al
   1400073a0:	clc    
   1400073a1:	rex.WRB add BYTE PTR [r8+0x1],r8b
   1400073a5:	add    BYTE PTR [rax],al
   1400073a7:	add    BYTE PTR [rax+0x0],al
   1400073aa:	add    BYTE PTR [rax],al
   1400073ac:	add    BYTE PTR [rax],al
   1400073ae:	add    BYTE PTR [rax],al
   1400073b0:	rol    BYTE PTR [rbx+0x0],0x40
   1400073b4:	add    DWORD PTR [rax],eax
   1400073b6:	add    BYTE PTR [rax],al
   1400073b8:	stc    
   1400073b9:	add    BYTE PTR [rax],al
   1400073bb:	add    BYTE PTR [rax],al
   1400073bd:	add    BYTE PTR [rax],al
   1400073bf:	add    BYTE PTR [rax+0x48],al
   1400073c2:	add    BYTE PTR [rax+0x1],al
   1400073c5:	add    BYTE PTR [rax],al
   1400073c7:	add    BYTE PTR [rbx+0x0],dh
   1400073cd:	add    BYTE PTR [rax],al
   1400073cf:	add    BYTE PTR [rax+0x140004d],bl
   1400073d5:	add    BYTE PTR [rax],al
   1400073d7:	add    BYTE PTR [rax+rax*1+0x0],cl
   1400073db:	add    BYTE PTR [rax],al
   1400073dd:	add    BYTE PTR [rax],al
   1400073df:	add    BYTE PTR [rax+0x1400047],al
   1400073e5:	add    BYTE PTR [rax],al
   1400073e7:	add    BYTE PTR [rdi+0x0],bh
   1400073ed:	add    BYTE PTR [rax],al
   1400073ef:	add    al,al
   1400073f1:	rex.WR add BYTE PTR [rax+0x1],r8b
   1400073f5:	add    BYTE PTR [rax],al
   1400073f7:	add    BYTE PTR [rdi+0x0],ah
   1400073fa:	add    BYTE PTR [rax],al
   1400073fc:	add    BYTE PTR [rax],al
   1400073fe:	add    BYTE PTR [rax],al
   140007400:	rol    BYTE PTR [rbp+0x0],1
   140007403:	rex add DWORD PTR [rax],eax
   140007406:	add    BYTE PTR [rax],al
   140007408:	fld    DWORD PTR [rax]
   14000740a:	add    BYTE PTR [rax],al
   14000740c:	add    BYTE PTR [rax],al
   14000740e:	add    BYTE PTR [rax],al
   140007410:	jo     0x140007450
   140007412:	add    BYTE PTR [rax+0x1],al
   140007415:	add    BYTE PTR [rax],al
   140007417:	add    BYTE PTR [rbx+0x1],dl
   14000741a:	add    BYTE PTR [rax],al
   14000741c:	add    BYTE PTR [rax],al
   14000741e:	add    BYTE PTR [rax],al
   140007420:	fdivr  DWORD PTR [rsi]
   140007422:	add    BYTE PTR [rax+0x1],al
   140007425:	add    BYTE PTR [rax],al
   140007427:	add    BYTE PTR [rdx+0x1],cl
   14000742a:	add    BYTE PTR [rax],al
   14000742c:	add    BYTE PTR [rax],al
   14000742e:	add    BYTE PTR [rax],al
   140007430:	enter  0x36,0x40
   140007434:	add    DWORD PTR [rax],eax
   140007436:	add    BYTE PTR [rax],al
   140007438:	add    DWORD PTR es:[rax],eax
   14000743b:	add    BYTE PTR [rax],al
   14000743d:	add    BYTE PTR [rax],al
   14000743f:	add    al,cl
   140007441:	add    BYTE PTR ds:[rax+0x1],al
   140007445:	add    BYTE PTR [rax],al
   140007447:	add    BYTE PTR [rbx+0x1],cl
   14000744a:	add    BYTE PTR [rax],al
   14000744c:	add    BYTE PTR [rax],al
   14000744e:	add    BYTE PTR [rax],al
   140007450:	cwde   
   140007451:	add    BYTE PTR ss:[rax+0x1],al
   140007455:	add    BYTE PTR [rax],al
   140007457:	add    BYTE PTR [rsi],dl
   140007459:	add    DWORD PTR [rax],eax
   14000745b:	add    BYTE PTR [rax],al
   14000745d:	add    BYTE PTR [rax],al
   14000745f:	add    al,ah
   140007461:	rex.WRXB add BYTE PTR [r8+0x1],r8b
   140007465:	add    BYTE PTR [rax],al
   140007467:	add    BYTE PTR [rdx],al
   140007469:	add    BYTE PTR [rax],al
   14000746b:	add    BYTE PTR [rax],al
   14000746d:	add    BYTE PTR [rax],al
   14000746f:	add    BYTE PTR [rax],bh
   140007471:	rex.WR add BYTE PTR [rax+0x1],r8b
   140007475:	add    BYTE PTR [rax],al
   140007477:	add    BYTE PTR [rsi+0x0],dh
   14000747a:	add    BYTE PTR [rax],al
   14000747c:	add    BYTE PTR [rax],al
   14000747e:	add    BYTE PTR [rax],al
   140007480:	movabs al,ds:0x6c0000000140004c
   140007489:	add    BYTE PTR [rax],al
   14000748b:	add    BYTE PTR [rax],al
   14000748d:	add    BYTE PTR [rax],al
   14000748f:	add    BYTE PTR [rax+0x1400045],dl
   140007495:	add    BYTE PTR [rax],al
   140007497:	add    ch,bl
   140007499:	add    BYTE PTR [rax],al
   14000749b:	add    BYTE PTR [rax],al
   14000749d:	add    BYTE PTR [rax],al
   14000749f:	add    al,bl
   1400074a1:	rex.WRXB add BYTE PTR [r8+0x1],r8b
   1400074a5:	add    BYTE PTR [rax],al
   1400074a7:	add    BYTE PTR [rax+rax*1],al
   1400074aa:	add    BYTE PTR [rax],al
   1400074ac:	add    BYTE PTR [rax],al
   1400074ae:	add    BYTE PTR [rax],al
   1400074b0:	sbb    BYTE PTR [rax+rax*1+0x40],cl
   1400074b4:	add    DWORD PTR [rax],eax
   1400074b6:	add    BYTE PTR [rax],al
   1400074b8:	js     0x1400074ba
   1400074ba:	add    BYTE PTR [rax],al
   1400074bc:	add    BYTE PTR [rax],al
   1400074be:	add    BYTE PTR [rax],al
   1400074c0:	nop
   1400074c1:	rex.WRB add BYTE PTR [r8+0x1],r8b
   1400074c5:	add    BYTE PTR [rax],al
   1400074c7:	add    BYTE PTR [rbp+0x0],cl
   1400074ca:	add    BYTE PTR [rax],al
   1400074cc:	add    BYTE PTR [rax],al
   1400074ce:	add    BYTE PTR [rax],al
   1400074d0:	jo     0x140007519
   1400074d2:	add    BYTE PTR [rax+0x1],al
   1400074d5:	add    BYTE PTR [rax],al
   1400074d7:	add    al,al
   1400074d9:	add    BYTE PTR [rax],al
   1400074db:	add    BYTE PTR [rax],al
   1400074dd:	add    BYTE PTR [rax],al
   1400074df:	add    al,dl
   1400074e1:	rex.WRXB add BYTE PTR [r8+0x1],r8b
   1400074e5:	add    BYTE PTR [rax],al
   1400074e7:	add    BYTE PTR [rip+0x0],al        # 0x1400074ed
   1400074ed:	add    BYTE PTR [rax],al
   1400074ef:	add    BYTE PTR [rax],cl
   1400074f1:	rex.WR add BYTE PTR [rax+0x1],r8b
   1400074f5:	add    BYTE PTR [rax],al
   1400074f7:	add    BYTE PTR [rcx+0x0],bh
   1400074fa:	add    BYTE PTR [rax],al
   1400074fc:	add    BYTE PTR [rax],al
   1400074fe:	add    BYTE PTR [rax],al
   140007500:	enter  0x4f,0x40
   140007504:	add    DWORD PTR [rax],eax
   140007506:	add    BYTE PTR [rax],al
   140007508:	(bad)  
   140007509:	add    BYTE PTR [rax],al
   14000750b:	add    BYTE PTR [rax],al
   14000750d:	add    BYTE PTR [rax],al
   14000750f:	add    BYTE PTR [rax],bh
   140007511:	rex.XB add BYTE PTR [r8+0x1],al
   140007515:	add    BYTE PTR [rax],al
   140007517:	add    BYTE PTR [rcx],al
   140007519:	add    DWORD PTR [rax],eax
   14000751b:	add    BYTE PTR [rax],al
   14000751d:	add    BYTE PTR [rax],al
   14000751f:	add    al,al
   140007521:	add    BYTE PTR [rax+0x1],r8b
   140007525:	add    BYTE PTR [rax],al
   140007527:	add    cl,ch
   140007529:	add    BYTE PTR [rax],al
   14000752b:	add    BYTE PTR [rax],al
   14000752d:	add    BYTE PTR [rax],al
   14000752f:	add    al,bh
   140007531:	rex.WXB add BYTE PTR [r8+0x1],al
   140007535:	add    BYTE PTR [rax],al
   140007537:	add    BYTE PTR [rdx+0x0],bh
   14000753a:	add    BYTE PTR [rax],al
   14000753c:	add    BYTE PTR [rax],al
   14000753e:	add    BYTE PTR [rax],al
   140007540:	cmp    BYTE PTR [rdx+0x0],al
   140007543:	rex add DWORD PTR [rax],eax
   140007546:	add    BYTE PTR [rax],al
   140007548:	adc    al,BYTE PTR [rcx]
   14000754a:	add    BYTE PTR [rax],al
   14000754c:	add    BYTE PTR [rax],al
   14000754e:	add    BYTE PTR [rax],al
   140007550:	mov    eax,0x1400042
   140007555:	add    BYTE PTR [rax],al
   140007557:	add    BYTE PTR [rdx],cl
   140007559:	add    DWORD PTR [rax],eax
   14000755b:	add    BYTE PTR [rax],al
   14000755d:	add    BYTE PTR [rax],al
   14000755f:	add    BYTE PTR [rax],al
   140007561:	add    BYTE PTR ds:[rax+0x1],al
   140007565:	add    BYTE PTR [rax],al
   140007567:	add    BYTE PTR [rbp+0x1],bl
   14000756a:	add    BYTE PTR [rax],al
   14000756c:	add    BYTE PTR [rax],al
   14000756e:	add    BYTE PTR [rax],al
   140007570:	sbb    BYTE PTR [rax+rax*1+0x40],al
   140007574:	add    DWORD PTR [rax],eax
   140007576:	add    BYTE PTR [rax],al
   140007578:	hlt    
   140007579:	add    BYTE PTR [rax],al
   14000757b:	add    BYTE PTR [rax],al
   14000757d:	add    BYTE PTR [rax],al
   14000757f:	add    BYTE PTR [rax],ah
   140007581:	rex.WRB add BYTE PTR [r8+0x1],r8b
   140007585:	add    BYTE PTR [rax],al
   140007587:	add    BYTE PTR [rbx+0x0],bl
   14000758a:	add    BYTE PTR [rax],al
   14000758c:	add    BYTE PTR [rax],al
   14000758e:	add    BYTE PTR [rax],al
   140007590:	cwde   
   140007591:	rex.RX add BYTE PTR [rax+0x1],r8b
   140007595:	add    BYTE PTR [rax],al
   140007597:	add    ch,cl
   140007599:	add    BYTE PTR [rax],al
   14000759b:	add    BYTE PTR [rax],al
   14000759d:	add    BYTE PTR [rax],al
   14000759f:	add    al,al
   1400075a1:	rex.WRXB add BYTE PTR [r8+0x1],r8b
   1400075a5:	add    BYTE PTR [rax],al
   1400075a7:	add    BYTE PTR [rdi],al
   1400075a9:	add    BYTE PTR [rax],al
   1400075ab:	add    BYTE PTR [rax],al
   1400075ad:	add    BYTE PTR [rax],al
   1400075af:	add    al,ch
   1400075b1:	rex.WXB add BYTE PTR [r8+0x1],al
   1400075b5:	add    BYTE PTR [rax],al
   1400075b7:	add    BYTE PTR [rbx+0x0],bh
   1400075ba:	add    BYTE PTR [rax],al
   1400075bc:	add    BYTE PTR [rax],al
   1400075be:	add    BYTE PTR [rax],al
   1400075c0:	mov    eax,0x140004f
   1400075c5:	add    BYTE PTR [rax],al
   1400075c7:	add    BYTE PTR [rax],cl
   1400075c9:	add    BYTE PTR [rax],al
   1400075cb:	add    BYTE PTR [rax],al
   1400075cd:	add    BYTE PTR [rax],al
   1400075cf:	add    BYTE PTR [rax],cl
   1400075d1:	add    BYTE PTR [r8+0x1],al
   1400075d5:	add    BYTE PTR [rax],al
   1400075d7:	add    BYTE PTR [rcx],ch
   1400075d9:	add    DWORD PTR [rax],eax
   1400075db:	add    BYTE PTR [rax],al
   1400075dd:	add    BYTE PTR [rax],al
   1400075df:	add    BYTE PTR [rax],ch
   1400075e1:	rex.XB add BYTE PTR [r8+0x1],al
   1400075e5:	add    BYTE PTR [rax],al
   1400075e7:	add    BYTE PTR [rdx],al
   1400075e9:	add    DWORD PTR [rax],eax
   1400075eb:	add    BYTE PTR [rax],al
   1400075ed:	add    BYTE PTR [rax],al
   1400075ef:	add    BYTE PTR [rax+0x1400040],dh
   1400075f5:	add    BYTE PTR [rax],al
   1400075f7:	add    BYTE PTR [rsi],ch
   1400075f9:	add    DWORD PTR [rax],eax
   1400075fb:	add    BYTE PTR [rax],al
   1400075fd:	add    BYTE PTR [rax],al
   1400075ff:	add    BYTE PTR [rax+0x1400042],ch
   140007605:	add    BYTE PTR [rax],al
   140007607:	add    BYTE PTR [rbx],cl
   140007609:	add    DWORD PTR [rax],eax
   14000760b:	add    BYTE PTR [rax],al
   14000760d:	add    BYTE PTR [rax],al
   14000760f:	add    BYTE PTR [rax+0x1400044],dh
   140007615:	add    BYTE PTR [rax],al
   140007617:	add    dl,ch
   140007619:	add    BYTE PTR [rax],al
   14000761b:	add    BYTE PTR [rax],al
   14000761d:	add    BYTE PTR [rax],al
   14000761f:	add    al,bl
   140007621:	add    BYTE PTR [r8+0x1],al
   140007625:	add    BYTE PTR [rax],al
   140007627:	add    BYTE PTR [rcx],bl
   140007629:	add    DWORD PTR [rax],eax
   14000762b:	add    BYTE PTR [rax],al
   14000762d:	add    BYTE PTR [rax],al
   14000762f:	add    BYTE PTR [rax+0x3f],ch
   140007632:	add    BYTE PTR [rax+0x1],al
   140007635:	add    BYTE PTR [rax],al
   140007637:	add    BYTE PTR [rcx+0x1],al
   14000763a:	add    BYTE PTR [rax],al
   14000763c:	add    BYTE PTR [rax],al
   14000763e:	add    BYTE PTR [rax],al
   140007640:	rex.W
   140007641:	add    BYTE PTR [r8+0x1],al
   140007645:	add    BYTE PTR [rax],al
   140007647:	add    BYTE PTR [rcx+rax*1],ah
   14000764a:	add    BYTE PTR [rax],al
   14000764c:	add    BYTE PTR [rax],al
   14000764e:	add    BYTE PTR [rax],al
   140007650:	rex.W (bad) 
   140007652:	add    BYTE PTR [rax+0x1],al
   140007655:	add    BYTE PTR [rax],al
   140007657:	add    BYTE PTR [rbx+0x1],al
   14000765a:	add    BYTE PTR [rax],al
   14000765c:	add    BYTE PTR [rax],al
   14000765e:	add    BYTE PTR [rax],al
   140007660:	sub    BYTE PTR [rdx+0x0],al
   140007663:	rex add DWORD PTR [rax],eax
   140007666:	add    BYTE PTR [rax],al
   140007668:	adc    eax,DWORD PTR [rcx]
   14000766a:	add    BYTE PTR [rax],al
   14000766c:	add    BYTE PTR [rax],al
   14000766e:	add    BYTE PTR [rax],al
   140007670:	fdivr  DWORD PTR [rdi]
   140007672:	add    BYTE PTR [rax+0x1],al
   140007675:	add    BYTE PTR [rax],al
   140007677:	add    BYTE PTR [rdx],bh
   140007679:	add    DWORD PTR [rax],eax
   14000767b:	add    BYTE PTR [rax],al
   14000767d:	add    BYTE PTR [rax],al
   14000767f:	add    BYTE PTR [rax],ch
   140007681:	(bad)  
   140007682:	add    BYTE PTR [rax+0x1],al
   140007685:	add    BYTE PTR [rax],al
   140007687:	add    BYTE PTR [rbp+0x1],al
   14000768a:	add    BYTE PTR [rax],al
   14000768c:	add    BYTE PTR [rax],al
   14000768e:	add    BYTE PTR [rax],al
   140007690:	push   0x1400040
   140007695:	add    BYTE PTR [rax],al
   140007697:	add    BYTE PTR [rdx],dh
   140007699:	add    DWORD PTR [rax],eax
   14000769b:	add    BYTE PTR [rax],al
   14000769d:	add    BYTE PTR [rax],al
   14000769f:	add    al,bl
   1400076a1:	rex.WXB add BYTE PTR [r8+0x1],al
   1400076a5:	add    BYTE PTR [rax],al
   1400076a7:	add    BYTE PTR [rax+rax*1+0x0],bh
   1400076ab:	add    BYTE PTR [rax],al
   1400076ad:	add    BYTE PTR [rax],al
   1400076af:	add    BYTE PTR [rax+0x1400041],cl
   1400076b5:	add    BYTE PTR [rax],al
   1400076b7:	add    BYTE PTR [rdi],bl
   1400076b9:	add    DWORD PTR [rax],eax
   1400076bb:	add    BYTE PTR [rax],al
   1400076bd:	add    BYTE PTR [rax],al
   1400076bf:	add    BYTE PTR [rax],ah
   1400076c1:	add    BYTE PTR [rax+0x1],al
   1400076c5:	add    BYTE PTR [rax],al
   1400076c7:	add    BYTE PTR [rsi],dh
   1400076c9:	add    DWORD PTR [rax],eax
   1400076cb:	add    BYTE PTR [rax],al
   1400076cd:	add    BYTE PTR [rax],al
   1400076cf:	add    BYTE PTR [rax+0x140004f],dh
   1400076d5:	add    BYTE PTR [rax],al
   1400076d7:	add    BYTE PTR [rcx],cl
   1400076d9:	add    BYTE PTR [rax],al
   1400076db:	add    BYTE PTR [rax],al
   1400076dd:	add    BYTE PTR [rax],al
   1400076df:	add    BYTE PTR [rax+0x40],bl
   1400076e2:	add    BYTE PTR [rax+0x1],al
   1400076e5:	add    BYTE PTR [rax],al
   1400076e7:	add    BYTE PTR [rbx],dh
   1400076e9:	add    DWORD PTR [rax],eax
   1400076eb:	add    BYTE PTR [rax],al
   1400076ed:	add    BYTE PTR [rax],al
   1400076ef:	add    BYTE PTR [rax+0x3f],bl
   1400076f2:	add    BYTE PTR [rax+0x1],al
   1400076f5:	add    BYTE PTR [rax],al
   1400076f7:	add    BYTE PTR [rdx+0x1],al
   1400076fa:	add    BYTE PTR [rax],al
   1400076fc:	add    BYTE PTR [rax],al
   1400076fe:	add    BYTE PTR [rax],al
   140007700:	enter  0x3f,0x40
   140007704:	add    DWORD PTR [rax],eax
   140007706:	add    BYTE PTR [rax],al
   140007708:	cmp    eax,DWORD PTR [rcx]
   14000770a:	add    BYTE PTR [rax],al
   14000770c:	add    BYTE PTR [rax],al
   14000770e:	add    BYTE PTR [rax],al
   140007710:	clc    
   140007711:	add    BYTE PTR [rax+0x1],al
   140007715:	add    BYTE PTR [rax],al
   140007717:	add    BYTE PTR [rdx],ch
   140007719:	add    DWORD PTR [rax],eax
   14000771b:	add    BYTE PTR [rax],al
   14000771d:	add    BYTE PTR [rax],al
   14000771f:	add    BYTE PTR [rax],bl
   140007721:	rex.X add BYTE PTR [rax+0x1],al
   140007725:	add    BYTE PTR [rax],al
   140007727:	add    BYTE PTR [rcx+rax*1],dl
   14000772a:	add    BYTE PTR [rax],al
   14000772c:	add    BYTE PTR [rax],al
   14000772e:	add    BYTE PTR [rax],al
   140007730:	js     0x140007773
   140007732:	add    BYTE PTR [rax+0x1],al
   140007735:	add    BYTE PTR [rax],al
   140007737:	add    BYTE PTR [rax],ah
   140007739:	add    DWORD PTR [rax],eax
   14000773b:	add    BYTE PTR [rax],al
   14000773d:	add    BYTE PTR [rax],al
   14000773f:	add    BYTE PTR [rax],dl
   140007741:	add    BYTE PTR [rax+0x1],al
   140007745:	add    BYTE PTR [rax],al
   140007747:	add    BYTE PTR [rdi],dh
   140007749:	add    DWORD PTR [rax],eax
   14000774b:	add    BYTE PTR [rax],al
   14000774d:	add    BYTE PTR [rax],al
   14000774f:	add    BYTE PTR [rax],bl
   140007751:	rex.XB add BYTE PTR [r8+0x1],al
   140007755:	add    BYTE PTR [rax],al
   140007757:	add    BYTE PTR [rbx],al
   140007759:	add    DWORD PTR [rax],eax
   14000775b:	add    BYTE PTR [rax],al
   14000775d:	add    BYTE PTR [rax],al
   14000775f:	add    BYTE PTR [rax+0x140004b],bh
   140007765:	add    BYTE PTR [rax],al
   140007767:	add    BYTE PTR [rbp+0x0],bh
   14000776a:	add    BYTE PTR [rax],al
   14000776c:	add    BYTE PTR [rax],al
   14000776e:	add    BYTE PTR [rax],al
   140007770:	cwde   
   140007771:	rex.X add BYTE PTR [rax+0x1],al
   140007775:	add    BYTE PTR [rax],al
   140007777:	add    BYTE PTR [rcx+rax*1],cl
   14000777a:	add    BYTE PTR [rax],al
   14000777c:	add    BYTE PTR [rax],al
   14000777e:	add    BYTE PTR [rax],al
   140007780:	sbb    BYTE PTR [rdi],bh
   140007782:	add    BYTE PTR [rax+0x1],al
   140007785:	add    BYTE PTR [rax],al
   140007787:	add    BYTE PTR [rsi+0x1],al
   14000778a:	add    BYTE PTR [rax],al
   14000778c:	add    BYTE PTR [rax],al
   14000778e:	add    BYTE PTR [rax],al
   140007790:	movabs al,ds:0xeb00000001400044
   140007799:	add    BYTE PTR [rax],al
   14000779b:	add    BYTE PTR [rax],al
   14000779d:	add    BYTE PTR [rax],al
   14000779f:	add    BYTE PTR [rax],cl
   1400077a1:	(bad)  
   1400077a2:	add    BYTE PTR [rax+0x1],al
   1400077a5:	add    BYTE PTR [rax],al
   1400077a7:	add    BYTE PTR [rdi+0x1],al
   1400077aa:	add    BYTE PTR [rax],al
   1400077ac:	add    BYTE PTR [rax],al
   1400077ae:	add    BYTE PTR [rax],al
   1400077b0:	enter  0x41,0x40
   1400077b4:	add    DWORD PTR [rax],eax
   1400077b6:	add    BYTE PTR [rax],al
   1400077b8:	sbb    al,BYTE PTR [rcx]
   1400077ba:	add    BYTE PTR [rax],al
   1400077bc:	add    BYTE PTR [rax],al
   1400077be:	add    BYTE PTR [rax],al
   1400077c0:	movabs al,ds:0x2f00000001400040
   1400077c9:	add    DWORD PTR [rax],eax
   1400077cb:	add    BYTE PTR [rax],al
   1400077cd:	add    BYTE PTR [rax],al
   1400077cf:	add    al,bh
   1400077d1:	add    BYTE PTR ds:[rax+0x1],al
   1400077d5:	add    BYTE PTR [rax],al
   1400077d7:	add    BYTE PTR [rax+0x1],cl
   1400077da:	add    BYTE PTR [rax],al
   1400077dc:	add    BYTE PTR [rax],al
   1400077de:	add    BYTE PTR [rax],al
   1400077e0:	mov    BYTE PTR [rdi],bh
   1400077e2:	add    BYTE PTR [rax+0x1],al
   1400077e5:	add    BYTE PTR [rax],al
   1400077e7:	add    BYTE PTR [rdi],bh
   1400077e9:	add    DWORD PTR [rax],eax
   1400077eb:	add    BYTE PTR [rax],al
   1400077ed:	add    BYTE PTR [rax],al
   1400077ef:	add    BYTE PTR [rax],bh
   1400077f1:	(bad)  
   1400077f2:	add    BYTE PTR [rax+0x1],al
   1400077f5:	add    BYTE PTR [rax],al
   1400077f7:	add    BYTE PTR [rcx+rax*1+0x0],al
   1400077fb:	add    BYTE PTR [rax],al
   1400077fd:	add    BYTE PTR [rax],al
   1400077ff:	add    al,ch
   140007801:	add    BYTE PTR ds:[rax+0x1],al
   140007805:	add    BYTE PTR [rax],al
   140007807:	add    BYTE PTR [rcx+0x1],cl
   14000780a:	add    BYTE PTR [rax],al
   14000780c:	add    BYTE PTR [rax],al
   14000780e:	add    BYTE PTR [rax],al
   140007810:	test   al,0x3f
   140007812:	add    BYTE PTR [rax+0x1],al
   140007815:	add    BYTE PTR [rax],al
   140007817:	add    BYTE PTR [rip+0x1],bh        # 0x14000781e
   14000781d:	add    BYTE PTR [rax],al
   14000781f:	add    BYTE PTR [rax],bh
   140007821:	add    BYTE PTR [r8+0x1],al
   140007825:	add    BYTE PTR [rax],al
   140007827:	add    BYTE PTR [rip+0x1],ah        # 0x14000782e
   14000782d:	add    BYTE PTR [rax],al
   14000782f:	add    al,bl
   140007831:	rex.WRX add BYTE PTR [rax+0x1],r8b
   140007835:	add    BYTE PTR [rax],al
   140007837:	add    BYTE PTR [rax+rax*1],ah
   14000783a:	add    BYTE PTR [rax],al
   14000783c:	add    BYTE PTR [rax],al
   14000783e:	add    BYTE PTR [rax],al
   140007840:	or     BYTE PTR [rdx+0x0],cl
   140007843:	rex add DWORD PTR [rax],eax
   140007846:	add    BYTE PTR [rax],al
   140007848:	cwde   
   140007849:	add    BYTE PTR [rax],al
   14000784b:	add    BYTE PTR [rax],al
   14000784d:	add    BYTE PTR [rax],al
   14000784f:	add    BYTE PTR [rax+0x140004e],bl
   140007855:	add    BYTE PTR [rax],al
   140007857:	add    BYTE PTR [rax+rax*1],ch
   14000785a:	add    BYTE PTR [rax],al
   14000785c:	add    BYTE PTR [rax],al
   14000785e:	add    BYTE PTR [rax],al
   140007860:	js     0x1400078ab
   140007862:	add    BYTE PTR [rax+0x1],al
   140007865:	add    BYTE PTR [rax],al
   140007867:	add    BYTE PTR [rax+0x0],ah
   14000786d:	add    BYTE PTR [rax],al
   14000786f:	add    BYTE PTR [rax+0x140004e],bh
   140007875:	add    BYTE PTR [rax],al
   140007877:	add    BYTE PTR [rax],ch
   140007879:	add    BYTE PTR [rax],al
   14000787b:	add    BYTE PTR [rax],al
   14000787d:	add    BYTE PTR [rax],al
   14000787f:	add    al,al
   140007881:	rex.WB add BYTE PTR [r8+0x1],al
   140007885:	add    BYTE PTR [rax],al
   140007887:	add    BYTE PTR [rax+rax*1+0x0],bl
   14000788e:	add    BYTE PTR [rax],al
   140007890:	test   al,0x4f
   140007892:	add    BYTE PTR [rax+0x1],al
   140007895:	add    BYTE PTR [rax],al
   140007897:	add    BYTE PTR [rdx],cl
   140007899:	add    BYTE PTR [rax],al
   14000789b:	add    BYTE PTR [rax],al
   14000789d:	add    BYTE PTR [rax],al
   14000789f:	add    BYTE PTR [rax+0x140004b],ch
   1400078a5:	add    BYTE PTR [rax],al
   1400078a7:	add    BYTE PTR [rsi+0x0],bh
   1400078aa:	add    BYTE PTR [rax],al
   1400078ac:	add    BYTE PTR [rax],al
   1400078ae:	add    BYTE PTR [rax],al
   1400078b0:	sub    BYTE PTR [rbp+0x0],cl
   1400078b3:	rex add DWORD PTR [rax],eax
   1400078b6:	add    BYTE PTR [rax],al
   1400078b8:	pop    rdx
   1400078b9:	add    BYTE PTR [rax],al
   1400078bb:	add    BYTE PTR [rax],al
   1400078bd:	add    BYTE PTR [rax],al
   1400078bf:	add    BYTE PTR [rax+0x1400046],ch
   1400078c5:	add    BYTE PTR [rax],al
   1400078c7:	add    ah,cl
   1400078c9:	add    BYTE PTR [rax],al
   1400078cb:	add    BYTE PTR [rax],al
   1400078cd:	add    BYTE PTR [rax],al
   1400078cf:	add    BYTE PTR [rax+0x4e],bl
   1400078d2:	add    BYTE PTR [rax+0x1],al
   1400078d5:	add    BYTE PTR [rax],al
   1400078d7:	add    BYTE PTR [rax+rax*1],dh
   1400078da:	add    BYTE PTR [rax],al
   1400078dc:	add    BYTE PTR [rax],al
   1400078de:	add    BYTE PTR [rax],al
   1400078e0:	clc    
   1400078e1:	rex.W add BYTE PTR [rax+0x1],al
   1400078e5:	add    BYTE PTR [rax],al
   1400078e7:	add    BYTE PTR [rax+0x0],ch
   1400078ed:	add    BYTE PTR [rax],al
   1400078ef:	add    BYTE PTR [rax+0x140004f],ah
   1400078f5:	add    BYTE PTR [rax],al
   1400078f7:	add    BYTE PTR [rbx],cl
   1400078f9:	add    BYTE PTR [rax],al
   1400078fb:	add    BYTE PTR [rax],al
   1400078fd:	add    BYTE PTR [rax],al
   1400078ff:	add    BYTE PTR [rax+0x1400044],dl
   140007905:	add    BYTE PTR [rax],al
   140007907:	add    ah,ch
   140007909:	add    BYTE PTR [rax],al
   14000790b:	add    BYTE PTR [rax],al
   14000790d:	add    BYTE PTR [rax],al
   14000790f:	add    BYTE PTR [rax],cl
   140007911:	rex.XB add BYTE PTR [r8+0x1],al
   140007915:	add    BYTE PTR [rax],al
   140007917:	add    BYTE PTR [rcx+rax*1],al
   14000791a:	add    BYTE PTR [rax],al
   14000791c:	add    BYTE PTR [rax],al
   14000791e:	add    BYTE PTR [rax],al
   140007920:	mov    BYTE PTR [rdx+0x0],al
   140007923:	rex add DWORD PTR [rax],eax
   140007926:	add    BYTE PTR [rax],al
   140007928:	or     eax,0x1
   14000792d:	add    BYTE PTR [rax],al
   14000792f:	add    BYTE PTR [rax+0x140004b],bl
   140007935:	add    BYTE PTR [rax],al
   140007937:	add    BYTE PTR [rdi+0x0],bh
   14000793a:	add    BYTE PTR [rax],al
   14000793c:	add    BYTE PTR [rax],al
   14000793e:	add    BYTE PTR [rax],al
   140007940:	or     BYTE PTR [rdx+0x0],al
   140007943:	rex add DWORD PTR [rax],eax
   140007946:	add    BYTE PTR [rax],al
   140007948:	adc    eax,0x1
   14000794d:	add    BYTE PTR [rax],al
   14000794f:	add    BYTE PTR [rax+0x1400041],bh
   140007955:	add    BYTE PTR [rax],al
   140007957:	add    BYTE PTR [rbx],bl
   140007959:	add    DWORD PTR [rax],eax
   14000795b:	add    BYTE PTR [rax],al
   14000795d:	add    BYTE PTR [rax],al
   14000795f:	add    BYTE PTR [rax],bh
   140007961:	rex.WRB add BYTE PTR [r8+0x1],r8b
   140007965:	add    BYTE PTR [rax],al
   140007967:	add    BYTE PTR [rax+0x0],bl
   14000796a:	add    BYTE PTR [rax],al
   14000796c:	add    BYTE PTR [rax],al
   14000796e:	add    BYTE PTR [rax],al
   140007970:	enter  0x46,0x40
   140007974:	add    DWORD PTR [rax],eax
   140007976:	add    BYTE PTR [rax],al
   140007978:	retf   0x0
   14000797b:	add    BYTE PTR [rax],al
   14000797d:	add    BYTE PTR [rax],al
   14000797f:	add    BYTE PTR [rax],bh
   140007981:	rex.WRX add BYTE PTR [rax+0x1],r8b
   140007985:	add    BYTE PTR [rax],al
   140007987:	add    BYTE PTR [rax],bh
   140007989:	add    BYTE PTR [rax],al
   14000798b:	add    BYTE PTR [rax],al
   14000798d:	add    BYTE PTR [rax],al
   14000798f:	add    al,bh
   140007991:	rex.XB add BYTE PTR [r8+0x1],al
   140007995:	add    BYTE PTR [rax],al
   140007997:	add    dh,dh
   140007999:	add    BYTE PTR [rax],al
   14000799b:	add    BYTE PTR [rax],al
   14000799d:	add    BYTE PTR [rax],al
   14000799f:	add    BYTE PTR [rsp+rcx*2+0x0],ah
   1400079a3:	rex add DWORD PTR [rax],eax
   1400079a6:	add    BYTE PTR [rax],al
   1400079a8:	jae    0x1400079aa
   1400079aa:	add    BYTE PTR [rax],al
   1400079ac:	add    BYTE PTR [rax],al
   1400079ae:	add    BYTE PTR [rax],al
   1400079b0:	and    BYTE PTR [rbp+0x0],al
   1400079b3:	rex add DWORD PTR [rax],eax
   1400079b6:	add    BYTE PTR [rax],al
   1400079b8:	in     al,0x0
   1400079ba:	add    BYTE PTR [rax],al
   1400079bc:	add    BYTE PTR [rax],al
   1400079be:	add    BYTE PTR [rax],al
   1400079c0:	js     0x140007a0f
   1400079c2:	add    BYTE PTR [rax+0x1],al
   1400079c5:	add    BYTE PTR [rax],al
   1400079c7:	add    BYTE PTR [rax+0x0],dl
   1400079ca:	add    BYTE PTR [rax],al
   1400079cc:	add    BYTE PTR [rax],al
   1400079ce:	add    BYTE PTR [rax],al
   1400079d0:	rex
   1400079d1:	rex.RXB add BYTE PTR [r8+0x1],r8b
   1400079d5:	add    BYTE PTR [rax],al
   1400079d7:	add    bl,al
   1400079d9:	add    BYTE PTR [rax],al
   1400079db:	add    BYTE PTR [rax],al
   1400079dd:	add    BYTE PTR [rax],al
   1400079df:	add    BYTE PTR [rax+0x140004c],bl
   1400079e5:	add    BYTE PTR [rax],al
   1400079e7:	add    BYTE PTR [rbp+0x0],ch
   1400079ea:	add    BYTE PTR [rax],al
   1400079ec:	add    BYTE PTR [rax],al
   1400079ee:	add    BYTE PTR [rax],al
   1400079f0:	add    BYTE PTR [rbp+0x0],0x40
   1400079f4:	add    DWORD PTR [rax],eax
   1400079f6:	add    BYTE PTR [rax],al
   1400079f8:	fiadd  WORD PTR [rax]
   1400079fa:	add    BYTE PTR [rax],al
   1400079fc:	add    BYTE PTR [rax],al
   1400079fe:	add    BYTE PTR [rax],al
   140007a00:	call   0x141407a52
   140007a05:	add    BYTE PTR [rax],al
   140007a07:	add    BYTE PTR [rdx+0x0],al
   140007a0a:	add    BYTE PTR [rax],al
   140007a0c:	add    BYTE PTR [rax],al
   140007a0e:	add    BYTE PTR [rax],al
   140007a10:	and    BYTE PTR [rax+0x0],cl
   140007a13:	rex add DWORD PTR [rax],eax
   140007a16:	add    BYTE PTR [rax],al
   140007a18:	mov    ch,0x0
   140007a1a:	add    BYTE PTR [rax],al
   140007a1c:	add    BYTE PTR [rax],al
   140007a1e:	add    BYTE PTR [rax],al
   140007a20:	sbb    BYTE PTR [rbp+0x0],cl
   140007a23:	rex add DWORD PTR [rax],eax
   140007a26:	add    BYTE PTR [rax],al
   140007a28:	pop    rsp
   140007a29:	add    BYTE PTR [rax],al
   140007a2b:	add    BYTE PTR [rax],al
   140007a2d:	add    BYTE PTR [rax],al
   140007a2f:	add    BYTE PTR [rax+0x140003d],ah
   140007a35:	add    BYTE PTR [rax],al
   140007a37:	add    BYTE PTR [rbx+0x1],ah
   140007a3a:	add    BYTE PTR [rax],al
   140007a3c:	add    BYTE PTR [rax],al
   140007a3e:	add    BYTE PTR [rax],al
   140007a40:	add    BYTE PTR [rsi+0x0],0x40
   140007a44:	add    DWORD PTR [rax],eax
   140007a46:	add    BYTE PTR [rax],al
   140007a48:	(bad)  
   140007a49:	add    BYTE PTR [rax],al
   140007a4b:	add    BYTE PTR [rax],al
   140007a4d:	add    BYTE PTR [rax],al
   140007a4f:	add    BYTE PTR [rax+0x140004f],bl
   140007a55:	add    BYTE PTR [rax],al
   140007a57:	add    BYTE PTR [rax+rax*1],cl
   140007a5a:	add    BYTE PTR [rax],al
   140007a5c:	add    BYTE PTR [rax],al
   140007a5e:	add    BYTE PTR [rax],al
   140007a60:	mov    BYTE PTR [rbx+0x0],cl
   140007a63:	rex add DWORD PTR [rax],eax
   140007a66:	add    BYTE PTR [rax],al
   140007a68:	add    BYTE PTR [rax],0x0
   140007a6b:	add    BYTE PTR [rax],al
   140007a6d:	add    BYTE PTR [rax],al
   140007a6f:	add    BYTE PTR [rax+0x4e],dl
   140007a72:	add    BYTE PTR [rax+0x1],al
   140007a75:	add    BYTE PTR [rax],al
   140007a77:	add    BYTE PTR [rip+0x0],dh        # 0x140007a7d
   140007a7d:	add    BYTE PTR [rax],al
   140007a7f:	add    al,ch
   140007a81:	rex.W add BYTE PTR [rax+0x1],al
   140007a85:	add    BYTE PTR [rax],al
   140007a87:	add    BYTE PTR [rcx+0x0],ch
   140007a8d:	add    BYTE PTR [rax],al
   140007a8f:	add    BYTE PTR [rax],dh
   140007a91:	rex.WRXB add BYTE PTR [r8+0x1],r8b
   140007a95:	add    BYTE PTR [rax],al
   140007a97:	add    BYTE PTR [rcx],bl
   140007a99:	add    BYTE PTR [rax],al
   140007a9b:	add    BYTE PTR [rax],al
   140007a9d:	add    BYTE PTR [rax],al
   140007a9f:	add    BYTE PTR [rax+0x42],bh
   140007aa2:	add    BYTE PTR [rax+0x1],al
   140007aa5:	add    BYTE PTR [rax],al
   140007aa7:	add    BYTE PTR [rsi],cl
   140007aa9:	add    DWORD PTR [rax],eax
   140007aab:	add    BYTE PTR [rax],al
   140007aad:	add    BYTE PTR [rax],al
   140007aaf:	add    BYTE PTR [rax+0x140004a],bh
   140007ab5:	add    BYTE PTR [rax],al
   140007ab7:	add    BYTE PTR [rbp+0x0],cl
   140007abd:	add    BYTE PTR [rax],al
   140007abf:	add    BYTE PTR [rax+0x140004e],dl
   140007ac5:	add    BYTE PTR [rax],al
   140007ac7:	add    BYTE PTR [rip+0x0],ch        # 0x140007acd
   140007acd:	add    BYTE PTR [rax],al
   140007acf:	add    BYTE PTR [rax+0x49],ch
   140007ad2:	add    BYTE PTR [rax+0x1],al
   140007ad5:	add    BYTE PTR [rax],al
   140007ad7:	add    BYTE PTR [rcx+0x0],ah
   140007add:	add    BYTE PTR [rax],al
   140007adf:	add    BYTE PTR [rax+0x140004f],dl
   140007ae5:	add    BYTE PTR [rax],al
   140007ae7:	add    BYTE PTR [rip+0x0],cl        # 0x140007aed
   140007aed:	add    BYTE PTR [rax],al
   140007aef:	add    BYTE PTR [rax+0x4b],bh
   140007af2:	add    BYTE PTR [rax+0x1],al
   140007af5:	add    BYTE PTR [rax],al
   140007af7:	add    BYTE PTR [rcx+0x0],al
   140007afd:	add    BYTE PTR [rax],al
   140007aff:	add    BYTE PTR [rax+0x140004e],ch
   140007b05:	add    BYTE PTR [rax],al
   140007b07:	add    BYTE PTR [rdx],ch
   140007b09:	add    BYTE PTR [rax],al
   140007b0b:	add    BYTE PTR [rax],al
   140007b0d:	add    BYTE PTR [rax],al
   140007b0f:	add    BYTE PTR [rax+0x1400049],ah
   140007b15:	add    BYTE PTR [rax],al
   140007b17:	add    BYTE PTR [rsi+0x0],bl
   140007b1d:	add    BYTE PTR [rax],al
   140007b1f:	add    al,bh
   140007b21:	rex.WRX add BYTE PTR [rax+0x1],r8b
   140007b25:	add    BYTE PTR [rax],al
   140007b27:	add    BYTE PTR [rax],ah
   140007b29:	add    BYTE PTR [rax],al
   140007b2b:	add    BYTE PTR [rax],al
   140007b2d:	add    BYTE PTR [rax],al
   140007b2f:	add    BYTE PTR [rax+0x4a],cl
   140007b32:	add    BYTE PTR [rax+0x1],al
   140007b35:	add    BYTE PTR [rax],al
   140007b37:	add    BYTE PTR [rax+rax*1+0x0],dl
   140007b3e:	add    BYTE PTR [rax],al
   140007b40:	loopne 0x140007b8e
   140007b42:	add    BYTE PTR [rax+0x1],al
   140007b45:	add    BYTE PTR [rax],al
   140007b47:	add    BYTE PTR [rbx+0x0],ah
   140007b4a:	add    BYTE PTR [rax],al
   140007b4c:	add    BYTE PTR [rax],al
   140007b4e:	add    BYTE PTR [rax],al
   140007b50:	adc    BYTE PTR [rsi+0x0],al
   140007b53:	rex add DWORD PTR [rax],eax
   140007b56:	add    BYTE PTR [rax],al
   140007b58:	(bad)  
   140007b59:	add    BYTE PTR [rax],al
   140007b5b:	add    BYTE PTR [rax],al
   140007b5d:	add    BYTE PTR [rax],al
   140007b5f:	add    al,bl
   140007b61:	rex.WR add BYTE PTR [rax+0x1],r8b
   140007b65:	add    BYTE PTR [rax],al
   140007b67:	add    BYTE PTR [rax+rax*1+0x0],ah
   140007b6b:	add    BYTE PTR [rax],al
   140007b6d:	add    BYTE PTR [rax],al
   140007b6f:	add    BYTE PTR [rax],al
   140007b71:	rex.RX add BYTE PTR [rax+0x1],r8b
   140007b75:	add    BYTE PTR [rax],al
   140007b77:	add    dh,dl
   140007b79:	add    BYTE PTR [rax],al
   140007b7b:	add    BYTE PTR [rax],al
   140007b7d:	add    BYTE PTR [rax],al
   140007b7f:	add    BYTE PTR [rax+0x140004f],cl
   140007b85:	add    BYTE PTR [rax],al
   140007b87:	add    BYTE PTR [rsi],cl
   140007b89:	add    BYTE PTR [rax],al
   140007b8b:	add    BYTE PTR [rax],al
   140007b8d:	add    BYTE PTR [rax],al
   140007b8f:	add    BYTE PTR [rax+0x4b],ch
   140007b92:	add    BYTE PTR [rax+0x1],al
   140007b95:	add    BYTE PTR [rax],al
   140007b97:	add    BYTE PTR [rdx+0x0],al
   140007b9d:	add    BYTE PTR [rax],al
   140007b9f:	add    BYTE PTR [rax+0x140004f],al
   140007ba5:	add    BYTE PTR [rax],al
   140007ba7:	add    BYTE PTR [rdi],cl
   140007ba9:	add    BYTE PTR [rax],al
   140007bab:	add    BYTE PTR [rax],al
   140007bad:	add    BYTE PTR [rax],al
   140007baf:	add    BYTE PTR [rax+0x1400044],al
   140007bb5:	add    BYTE PTR [rax],al
   140007bb7:	add    ch,ch
   140007bb9:	add    BYTE PTR [rax],al
   140007bbb:	add    BYTE PTR [rax],al
   140007bbd:	add    BYTE PTR [rax],al
   140007bbf:	add    BYTE PTR [rax+0x4b],bl
   140007bc2:	add    BYTE PTR [rax+0x1],al
   140007bc5:	add    BYTE PTR [rax],al
   140007bc7:	add    BYTE PTR [rbx+0x0],al
   140007bcd:	add    BYTE PTR [rax],al
   140007bcf:	add    BYTE PTR [rax+0x4d],bl
   140007bd2:	add    BYTE PTR [rax+0x1],al
   140007bd5:	add    BYTE PTR [rax],al
   140007bd7:	add    BYTE PTR [rax+rax*1+0x0],dl
   140007bdb:	add    BYTE PTR [rax],al
   140007bdd:	add    BYTE PTR [rax],al
   140007bdf:	add    BYTE PTR [rax],ch
   140007be1:	add    BYTE PTR ds:[rax+0x1],al
   140007be5:	add    BYTE PTR [rax],al
   140007be7:	add    BYTE PTR [rax+0x1],bl
   140007bea:	add    BYTE PTR [rax],al
   140007bec:	add    BYTE PTR [rax],al
   140007bee:	add    BYTE PTR [rax],al
   140007bf0:	clc    
   140007bf1:	rex.RX add BYTE PTR [rax+0x1],r8b
   140007bf5:	add    BYTE PTR [rax],al
   140007bf7:	add    bh,al
   140007bf9:	add    BYTE PTR [rax],al
   140007bfb:	add    BYTE PTR [rax],al
   140007bfd:	add    BYTE PTR [rax],al
   140007bff:	add    al,cl
   140007c01:	cmp    eax,0x14000
   140007c06:	add    BYTE PTR [rax],al
   140007c08:	(bad)  
   140007c09:	add    DWORD PTR [rax],eax
   140007c0b:	add    BYTE PTR [rax],al
   140007c0d:	add    BYTE PTR [rax],al
   140007c0f:	add    al,bh
   140007c11:	add    BYTE PTR ss:[rax+0x1],al
   140007c15:	add    BYTE PTR [rax],al
   140007c17:	add    bl,bh
   140007c19:	add    BYTE PTR [rax],al
   140007c1b:	add    BYTE PTR [rax],al
   140007c1d:	add    BYTE PTR [rax],al
   140007c1f:	add    BYTE PTR [rax+0x4f],bh
   140007c22:	add    BYTE PTR [rax+0x1],al
   140007c25:	add    BYTE PTR [rax],al
   140007c27:	add    BYTE PTR [rax],dl
   140007c29:	add    BYTE PTR [rax],al
   140007c2b:	add    BYTE PTR [rax],al
   140007c2d:	add    BYTE PTR [rax],al
   140007c2f:	add    BYTE PTR [rax+0x4b],cl
   140007c32:	add    BYTE PTR [rax+0x1],al
   140007c35:	add    BYTE PTR [rax],al
   140007c37:	add    BYTE PTR [rax+rax*1+0x0],al
   140007c3e:	add    BYTE PTR [rax],al
   140007c40:	(bad)  
   140007c41:	rex.WRX add BYTE PTR [rax+0x1],r8b
   140007c45:	add    BYTE PTR [rax],al
   140007c47:	add    BYTE PTR [rbx],dh
   140007c49:	add    BYTE PTR [rax],al
   140007c4b:	add    BYTE PTR [rax],al
   140007c4d:	add    BYTE PTR [rax],al
   140007c4f:	add    BYTE PTR [rax],cl
   140007c51:	rex.WB add BYTE PTR [r8+0x1],al
   140007c55:	add    BYTE PTR [rax],al
   140007c57:	add    BYTE PTR [rdi+0x0],ah
   140007c5d:	add    BYTE PTR [rax],al
   140007c5f:	add    BYTE PTR [rax],ch
   140007c61:	rex.WRX add BYTE PTR [rax+0x1],r8b
   140007c65:	add    BYTE PTR [rax],al
   140007c67:	add    BYTE PTR [rdx],bh
   140007c69:	add    BYTE PTR [rax],al
   140007c6b:	add    BYTE PTR [rax],al
   140007c6d:	add    BYTE PTR [rax],al
   140007c6f:	add    BYTE PTR [rax+0x1400048],ch
   140007c75:	add    BYTE PTR [rax],al
   140007c77:	add    BYTE PTR [rbp+0x0],ch
   140007c7d:	add    BYTE PTR [rax],al
   140007c7f:	add    al,ch
   140007c81:	rex.WR add BYTE PTR [rax+0x1],r8b
   140007c85:	add    BYTE PTR [rax],al
   140007c87:	add    BYTE PTR [rdx+0x0],ah
   140007c8a:	add    BYTE PTR [rax],al
   140007c8c:	add    BYTE PTR [rax],al
   140007c8e:	add    BYTE PTR [rax],al
   140007c90:	and    BYTE PTR [rsi+0x0],al
   140007c93:	rex add DWORD PTR [rax],eax
   140007c96:	add    BYTE PTR [rax],al
   140007c98:	(bad)  
   140007c99:	add    BYTE PTR [rax],al
   140007c9b:	add    BYTE PTR [rax],al
   140007c9d:	add    BYTE PTR [rax],al
   140007c9f:	add    BYTE PTR [rax+0x140004d],cl
   140007ca5:	add    BYTE PTR [rax],al
   140007ca7:	add    BYTE PTR [rsi+0x0],cl
   140007caa:	add    BYTE PTR [rax],al
   140007cac:	add    BYTE PTR [rax],al
   140007cae:	add    BYTE PTR [rax],al
   140007cb0:	(bad)  
   140007cb1:	rex.RXB add BYTE PTR [r8+0x1],r8b
   140007cb5:	add    BYTE PTR [rax],al
   140007cb7:	add    cl,al
   140007cb9:	add    BYTE PTR [rax],al
   140007cbb:	add    BYTE PTR [rax],al
   140007cbd:	add    BYTE PTR [rax],al
   140007cbf:	add    al,cl
   140007cc1:	rex.WRB add BYTE PTR [r8+0x1],r8b
   140007cc5:	add    BYTE PTR [rax],al
   140007cc7:	add    BYTE PTR [rsi+0x0],al
   140007cca:	add    BYTE PTR [rax],al
   140007ccc:	add    BYTE PTR [rax],al
   140007cce:	add    BYTE PTR [rax],al
   140007cd0:	loopne 0x140007d19
   140007cd2:	add    BYTE PTR [rax+0x1],al
   140007cd5:	add    BYTE PTR [rax],al
   140007cd7:	add    BYTE PTR [rcx+0x0],bh
   140007cdd:	add    BYTE PTR [rax],al
   140007cdf:	add    BYTE PTR [rax+0x4f],dh
   140007ce2:	add    BYTE PTR [rax+0x1],al
   140007ce5:	add    BYTE PTR [rax],al
   140007ce7:	add    BYTE PTR [rcx],dl
   140007ce9:	add    BYTE PTR [rax],al
   140007ceb:	add    BYTE PTR [rax],al
   140007ced:	add    BYTE PTR [rax],al
   140007cef:	add    BYTE PTR [rax],bh
   140007cf1:	rex.WXB add BYTE PTR [r8+0x1],al
   140007cf5:	add    BYTE PTR [rax],al
   140007cf7:	add    BYTE PTR [rbp+0x0],al
   140007cfd:	add    BYTE PTR [rax],al
   140007cff:	add    BYTE PTR [rax+0x4d],dh
   140007d02:	add    BYTE PTR [rax+0x1],al
   140007d05:	add    BYTE PTR [rax],al
   140007d07:	add    BYTE PTR [rcx+0x0],dl
   140007d0a:	add    BYTE PTR [rax],al
   140007d0c:	add    BYTE PTR [rax],al
   140007d0e:	add    BYTE PTR [rax],al
   140007d10:	xor    BYTE PTR [rdi+0x0],al
   140007d13:	rex add DWORD PTR [rax],eax
   140007d16:	add    BYTE PTR [rax],al
   140007d18:	(bad)  
   140007d19:	add    BYTE PTR [rax],al
   140007d1b:	add    BYTE PTR [rax],al
   140007d1d:	add    BYTE PTR [rax],al
   140007d1f:	add    BYTE PTR [rax],ah
   140007d21:	rex.WRX add BYTE PTR [rax+0x1],r8b
   140007d25:	add    BYTE PTR [rax],al
   140007d27:	add    BYTE PTR [rbx],bh
   140007d29:	add    BYTE PTR [rax],al
   140007d2b:	add    BYTE PTR [rax],al
   140007d2d:	add    BYTE PTR [rax],al
   140007d2f:	add    BYTE PTR [rax+0x1400048],bl
   140007d35:	add    BYTE PTR [rax],al
   140007d37:	add    BYTE PTR [rsi+0x0],ch
   140007d3d:	add    BYTE PTR [rax],al
   140007d3f:	add    al,dh
   140007d41:	rex.WR add BYTE PTR [rax+0x1],r8b
   140007d45:	add    BYTE PTR [rax],al
   140007d47:	add    BYTE PTR [rcx+0x0],ah
   140007d4a:	add    BYTE PTR [rax],al
   140007d4c:	add    BYTE PTR [rax],al
   140007d4e:	add    BYTE PTR [rax],al
   140007d50:	xor    BYTE PTR [rsi+0x0],al
   140007d53:	rex add DWORD PTR [rax],eax
   140007d56:	add    BYTE PTR [rax],al
   140007d58:	rol    DWORD PTR [rax],cl
   140007d5a:	add    BYTE PTR [rax],al
   140007d5c:	add    BYTE PTR [rax],al
   140007d5e:	add    BYTE PTR [rax],al
   140007d60:	or     BYTE PTR [rbp+0x0],0x40
   140007d64:	add    DWORD PTR [rax],eax
   140007d66:	add    BYTE PTR [rax],al
   140007d68:	rex.WRXB add BYTE PTR [r8],r8b
   140007d6b:	add    BYTE PTR [rax],al
   140007d6d:	add    BYTE PTR [rax],al
   140007d6f:	add    BYTE PTR [rax+0x47],dl
   140007d72:	add    BYTE PTR [rax+0x1],al
   140007d75:	add    BYTE PTR [rax],al
   140007d77:	add    dl,al
   140007d79:	add    BYTE PTR [rax],al
   140007d7b:	add    BYTE PTR [rax],al
   140007d7d:	add    BYTE PTR [rax],al
   140007d7f:	add    al,cl
   140007d81:	rex.WRX add BYTE PTR [rax+0x1],r8b
   140007d85:	add    BYTE PTR [rax],al
   140007d87:	add    BYTE PTR [rsi],ah
   140007d89:	add    BYTE PTR [rax],al
   140007d8b:	add    BYTE PTR [rax],al
   140007d8d:	add    BYTE PTR [rax],al
   140007d8f:	add    al,ch
   140007d91:	rex.WB add BYTE PTR [r8+0x1],al
   140007d95:	add    BYTE PTR [rax],al
   140007d97:	add    BYTE PTR [rdx+0x0],bl
   140007d9d:	add    BYTE PTR [rax],al
   140007d9f:	add    al,dl
   140007da1:	rex.WRX add BYTE PTR [rax+0x1],r8b
   140007da5:	add    BYTE PTR [rax],al
   140007da7:	add    BYTE PTR [rip+0x0],ah        # 0x140007dad
   140007dad:	add    BYTE PTR [rax],al
   140007daf:	add    al,bh
   140007db1:	rex.WB add BYTE PTR [r8+0x1],al
   140007db5:	add    BYTE PTR [rax],al
   140007db7:	add    BYTE PTR [rcx+0x0],bl
   140007dbd:	add    BYTE PTR [rax],al
   140007dbf:	add    BYTE PTR [rax+0x140004c],dh
   140007dc5:	add    BYTE PTR [rax],al
   140007dc7:	add    BYTE PTR [rdx+0x0],ch
   140007dca:	add    BYTE PTR [rax],al
   140007dcc:	add    BYTE PTR [rax],al
   140007dce:	add    BYTE PTR [rax],al
   140007dd0:	mov    al,0x45
   140007dd2:	add    BYTE PTR [rax+0x1],al
   140007dd5:	add    BYTE PTR [rax],al
   140007dd7:	add    bl,bl
   140007dd9:	add    BYTE PTR [rax],al
   140007ddb:	add    BYTE PTR [rax],al
   140007ddd:	add    BYTE PTR [rax],al
   140007ddf:	add    BYTE PTR [rax+0x140004e],cl
   140007de5:	add    BYTE PTR [rax],al
   140007de7:	add    BYTE PTR [rsi],ch
   140007de9:	add    BYTE PTR [rax],al
   140007deb:	add    BYTE PTR [rax],al
   140007ded:	add    BYTE PTR [rax],al
   140007def:	add    BYTE PTR [rax+0x49],bl
   140007df2:	add    BYTE PTR [rax+0x1],al
   140007df5:	add    BYTE PTR [rax],al
   140007df7:	add    BYTE PTR [rdx+0x0],ah
   140007dfd:	add    BYTE PTR [rax],al
   140007dff:	add    al,al
   140007e01:	rex.WRB add BYTE PTR [r8+0x1],r8b
   140007e05:	add    BYTE PTR [rax],al
   140007e07:	add    BYTE PTR [rdi+0x0],al
   140007e0a:	add    BYTE PTR [rax],al
   140007e0c:	add    BYTE PTR [rax],al
   140007e0e:	add    BYTE PTR [rax],al
   140007e10:	rol    BYTE PTR [rdi+0x0],1
   140007e13:	rex add DWORD PTR [rax],eax
   140007e16:	add    BYTE PTR [rax],al
   140007e18:	mov    edx,0x0
   140007e1d:	add    BYTE PTR [rax],al
   140007e1f:	add    BYTE PTR [rax+0x140004d],ah
   140007e25:	add    BYTE PTR [rax],al
   140007e27:	add    BYTE PTR [rbx+0x0],cl
   140007e2a:	add    BYTE PTR [rax],al
   140007e2c:	add    BYTE PTR [rax],al
   140007e2e:	add    BYTE PTR [rax],al
   140007e30:	cmp    BYTE PTR [rsi],bh
   140007e32:	add    BYTE PTR [rax+0x1],al
   140007e35:	add    BYTE PTR [rax],al
   140007e37:	add    BYTE PTR [rdi+0x1],dl
   140007e3a:	add    BYTE PTR [rax],al
   140007e3c:	add    BYTE PTR [rax],al
   140007e3e:	add    BYTE PTR [rax],al
   140007e40:	nop
   140007e41:	rex.RXB add BYTE PTR [r8+0x1],r8b
   140007e45:	add    BYTE PTR [rax],al
   140007e47:	add    BYTE PTR [rsi+0x0],bh
   140007e4d:	add    BYTE PTR [rax],al
   140007e4f:	add    al,bl
   140007e51:	cmp    eax,0x14000
   140007e56:	add    BYTE PTR [rax],al
   140007e58:	(bad)  
   140007e59:	add    DWORD PTR [rax],eax
   140007e5b:	add    BYTE PTR [rax],al
   140007e5d:	add    BYTE PTR [rax],al
   140007e5f:	add    BYTE PTR [rax+0x1400043],ch
   140007e65:	add    BYTE PTR [rax],al
   140007e67:	add    dl,bh
   140007e69:	add    BYTE PTR [rax],al
   140007e6b:	add    BYTE PTR [rax],al
   140007e6d:	add    BYTE PTR [rax],al
   140007e6f:	add    al,cl
   140007e71:	rex.WR add BYTE PTR [rax+0x1],r8b
   140007e75:	add    BYTE PTR [rax],al
   140007e77:	add    BYTE PTR [rsi+0x0],ah
   140007e7a:	add    BYTE PTR [rax],al
   140007e7c:	add    BYTE PTR [rax],al
   140007e7e:	add    BYTE PTR [rax],al
   140007e80:	loopne 0x140007ec7
   140007e82:	add    BYTE PTR [rax+0x1],al
   140007e85:	add    BYTE PTR [rax],al
   140007e87:	add    al,bl
   140007e89:	add    BYTE PTR [rax],al
   140007e8b:	add    BYTE PTR [rax],al
   140007e8d:	add    BYTE PTR [rax],al
   140007e8f:	add    BYTE PTR [rax+0x140004d],dh
   140007e95:	add    BYTE PTR [rax],al
   140007e97:	add    BYTE PTR [rcx+0x0],cl
   140007e9a:	add    BYTE PTR [rax],al
   140007e9c:	add    BYTE PTR [rax],al
   140007e9e:	add    BYTE PTR [rax],al
   140007ea0:	mov    al,0x47
   140007ea2:	add    BYTE PTR [rax+0x1],al
   140007ea5:	add    BYTE PTR [rax],al
   140007ea7:	add    BYTE PTR [rax+rax*1+0x0],bh
   140007eae:	add    BYTE PTR [rax],al
   140007eb0:	xor    BYTE PTR [rsi+0x0],cl
   140007eb3:	rex add DWORD PTR [rax],eax
   140007eb6:	add    BYTE PTR [rax],al
   140007eb8:	cmp    DWORD PTR [rax],eax
   140007eba:	add    BYTE PTR [rax],al
   140007ebc:	add    BYTE PTR [rax],al
   140007ebe:	add    BYTE PTR [rax],al
   140007ec0:	call   0x141407f08
   140007ec5:	add    BYTE PTR [rax],al
   140007ec7:	add    bh,dh
   140007ec9:	add    BYTE PTR [rax],al
   140007ecb:	add    BYTE PTR [rax],al
   140007ecd:	add    BYTE PTR [rax],al
   140007ecf:	add    BYTE PTR [rax+0x1400048],bh
   140007ed5:	add    BYTE PTR [rax],al
   140007ed7:	add    BYTE PTR [rax+rax*1+0x0],ch
   140007ede:	add    BYTE PTR [rax],al
   140007ee0:	rex.W
   140007ee1:	rex.WRX add BYTE PTR [rax+0x1],r8b
   140007ee5:	add    BYTE PTR [rax],al
   140007ee7:	add    BYTE PTR [rsi],dh
   140007ee9:	add    BYTE PTR [rax],al
   140007eeb:	add    BYTE PTR [rax],al
   140007eed:	add    BYTE PTR [rax],al
   140007eef:	add    al,bl
   140007ef1:	rex.W add BYTE PTR [rax+0x1],al
   140007ef5:	add    BYTE PTR [rax],al
   140007ef7:	add    BYTE PTR [rdx+0x0],ch
   140007efd:	add    BYTE PTR [rax],al
   140007eff:	add    BYTE PTR [rax],ah
   140007f01:	add    BYTE PTR ds:[rax+0x1],al
   140007f05:	add    BYTE PTR [rax],al
   140007f07:	add    BYTE PTR [rdx+0x1],bl
   140007f0a:	add    BYTE PTR [rax],al
   140007f0c:	add    BYTE PTR [rax],al
   140007f0e:	add    BYTE PTR [rax],al
   140007f10:	sbb    BYTE PTR [rbx+0x0],cl
   140007f13:	rex add DWORD PTR [rax],eax
   140007f16:	add    BYTE PTR [rax],al
   140007f18:	xchg   DWORD PTR [rax],eax
   140007f1a:	add    BYTE PTR [rax],al
   140007f1c:	add    BYTE PTR [rax],al
   140007f1e:	add    BYTE PTR [rax],al
   140007f20:	rex
   140007f21:	rex.WRB add BYTE PTR [r8+0x1],r8b
   140007f25:	add    BYTE PTR [rax],al
   140007f27:	add    BYTE PTR [rdi+0x0],dl
   140007f2a:	add    BYTE PTR [rax],al
   140007f2c:	add    BYTE PTR [rax],al
   140007f2e:	add    BYTE PTR [rax],al
   140007f30:	fadd   DWORD PTR [rsi+0x0]
   140007f33:	rex add DWORD PTR [rax],eax
   140007f36:	add    BYTE PTR [rax],al
   140007f38:	leave  
   140007f39:	add    BYTE PTR [rax],al
   140007f3b:	add    BYTE PTR [rax],al
   140007f3d:	add    BYTE PTR [rax],al
   140007f3f:	add    BYTE PTR [rax+0x4f],ch
   140007f42:	add    BYTE PTR [rax+0x1],al
   140007f45:	add    BYTE PTR [rax],al
   140007f47:	add    BYTE PTR [rdx],dl
   140007f49:	add    BYTE PTR [rax],al
   140007f4b:	add    BYTE PTR [rax],al
   140007f4d:	add    BYTE PTR [rax],al
   140007f4f:	add    BYTE PTR [rax+0x44],dh
   140007f52:	add    BYTE PTR [rax+0x1],al
   140007f55:	add    BYTE PTR [rax],al
   140007f57:	add    dh,ch
   140007f59:	add    BYTE PTR [rax],al
   140007f5b:	add    BYTE PTR [rax],al
   140007f5d:	add    BYTE PTR [rax],al
   140007f5f:	add    BYTE PTR [rax],ch
   140007f61:	rex.WXB add BYTE PTR [r8+0x1],al
   140007f65:	add    BYTE PTR [rax],al
   140007f67:	add    BYTE PTR [rsi+0x0],al
   140007f6d:	add    BYTE PTR [rax],al
   140007f6f:	add    BYTE PTR [rax+0x3e],bh
   140007f72:	add    BYTE PTR [rax+0x1],al
   140007f75:	add    BYTE PTR [rax],al
   140007f77:	add    BYTE PTR [rdx+0x1],dl
   140007f7a:	add    BYTE PTR [rax],al
   140007f7c:	add    BYTE PTR [rax],al
   140007f7e:	add    BYTE PTR [rax],al
   140007f80:	(bad)  
   140007f81:	add    BYTE PTR [rax+0x1],r8b
   140007f85:	add    BYTE PTR [rax],al
   140007f87:	add    bh,ch
   140007f89:	add    BYTE PTR [rax],al
   140007f8b:	add    BYTE PTR [rax],al
   140007f8d:	add    BYTE PTR [rax],al
   140007f8f:	add    BYTE PTR [rax+0x4f],ah
   140007f92:	add    BYTE PTR [rax+0x1],al
   140007f95:	add    BYTE PTR [rax],al
   140007f97:	add    BYTE PTR [rbx],dl
	...
   140007fa1:	rex.WRB add BYTE PTR [r8+0x1],r8b
   140007fa5:	add    BYTE PTR [rax],al
   140007fa7:	add    BYTE PTR [rdi+0x0],bl
   140007faa:	add    BYTE PTR [rax],al
   140007fac:	add    BYTE PTR [rax],al
   140007fae:	add    BYTE PTR [rax],al
   140007fb0:	push   rax
   140007fb1:	rex.RX add BYTE PTR [rax+0x1],r8b
   140007fb5:	add    BYTE PTR [rax],al
   140007fb7:	add    cl,dl
   140007fb9:	add    BYTE PTR [rax],al
   140007fbb:	add    BYTE PTR [rax],al
   140007fbd:	add    BYTE PTR [rax],al
   140007fbf:	add    BYTE PTR [rax+0x140004c],ch
   140007fc5:	add    BYTE PTR [rax],al
   140007fc7:	add    BYTE PTR [rbx+0x0],ch
   140007fca:	add    BYTE PTR [rax],al
   140007fcc:	add    BYTE PTR [rax],al
   140007fce:	add    BYTE PTR [rax],al
   140007fd0:	movabs al,ds:0xdc00000001400045
   140007fd9:	add    BYTE PTR [rax],al
   140007fdb:	add    BYTE PTR [rax],al
   140007fdd:	add    BYTE PTR [rax],al
   140007fdf:	add    al,ah
   140007fe1:	rex.WRB add BYTE PTR [r8+0x1],r8b
   140007fe5:	add    BYTE PTR [rax],al
   140007fe7:	add    BYTE PTR [rbx+0x0],al
   140007fea:	add    BYTE PTR [rax],al
   140007fec:	add    BYTE PTR [rax],al
   140007fee:	add    BYTE PTR [rax],al
   140007ff0:	adc    BYTE PTR [rax+0x0],cl
   140007ff3:	rex add DWORD PTR [rax],eax
   140007ff6:	add    BYTE PTR [rax],al
   140007ff8:	mov    dh,0x0
   140007ffa:	add    BYTE PTR [rax],al
   140007ffc:	add    BYTE PTR [rax],al
   140007ffe:	add    BYTE PTR [rax],al
   140008000:	lock rex.WRB add BYTE PTR [r8+0x1],r8b
   140008005:	add    BYTE PTR [rax],al
   140008007:	add    BYTE PTR [rcx+0x0],al
   14000800a:	add    BYTE PTR [rax],al
   14000800c:	add    BYTE PTR [rax],al
   14000800e:	add    BYTE PTR [rax],al
   140008010:	xor    BYTE PTR [rax+0x0],cl
   140008013:	rex add DWORD PTR [rax],eax
   140008016:	add    BYTE PTR [rax],al
   140008018:	mov    ah,0x0
   14000801a:	add    BYTE PTR [rax],al
   14000801c:	add    BYTE PTR [rax],al
   14000801e:	add    BYTE PTR [rax],al
   140008020:	pop    rax
   140008021:	rex.WRXB add BYTE PTR [r8+0x1],r8b
   140008025:	add    BYTE PTR [rax],al
   140008027:	add    BYTE PTR [rax+rax*1],dl
   14000802a:	add    BYTE PTR [rax],al
   14000802c:	add    BYTE PTR [rax],al
   14000802e:	add    BYTE PTR [rax],al
   140008030:	or     BYTE PTR [rbx+0x0],cl
   140008033:	rex add DWORD PTR [rax],eax
   140008036:	add    BYTE PTR [rax],al
   140008038:	mov    BYTE PTR [rax],al
   14000803a:	add    BYTE PTR [rax],al
   14000803c:	add    BYTE PTR [rax],al
   14000803e:	add    BYTE PTR [rax],al
   140008040:	jo     0x14000808e
   140008042:	add    BYTE PTR [rax+0x1],al
   140008045:	add    BYTE PTR [rax],al
   140008047:	add    BYTE PTR [rdx+0x0],dh
   14000804a:	add    BYTE PTR [rax],al
   14000804c:	add    BYTE PTR [rax],al
   14000804e:	add    BYTE PTR [rax],al
   140008050:	xor    BYTE PTR [rbp+0x0],al
   140008053:	rex add DWORD PTR [rax],eax
   140008056:	add    BYTE PTR [rax],al
   140008058:	jrcxz  0x14000805a
   14000805a:	add    BYTE PTR [rax],al
   14000805c:	add    BYTE PTR [rax],al
   14000805e:	add    BYTE PTR [rax],al
   140008060:	xor    BYTE PTR [rbp+0x0],cl
   140008063:	rex add DWORD PTR [rax],eax
   140008066:	add    BYTE PTR [rax],al
   140008068:	pop    rcx
   140008069:	add    BYTE PTR [rax],al
   14000806b:	add    BYTE PTR [rax],al
   14000806d:	add    BYTE PTR [rax],al
   14000806f:	add    BYTE PTR [rax+0x1400046],bh
   140008075:	add    BYTE PTR [rax],al
   140008077:	add    bl,cl
   140008079:	add    BYTE PTR [rax],al
   14000807b:	add    BYTE PTR [rax],al
   14000807d:	add    BYTE PTR [rax],al
   14000807f:	add    BYTE PTR [rax+0x4f],dl
   140008082:	add    BYTE PTR [rax+0x1],al
   140008085:	add    BYTE PTR [rax],al
   140008087:	add    BYTE PTR [rip+0x0],dl        # 0x14000808d
   14000808d:	add    BYTE PTR [rax],al
   14000808f:	add    al,bh
   140008091:	rex.WX add BYTE PTR [rax+0x1],al
   140008095:	add    BYTE PTR [rax],al
   140008097:	add    BYTE PTR [rcx+0x0],cl
   14000809d:	add    BYTE PTR [rax],al
   14000809f:	add    BYTE PTR [rax+0x44],dl
   1400080a2:	add    BYTE PTR [rax+0x1],al
   1400080a5:	add    BYTE PTR [rax],al
   1400080a7:	add    al,dh
   1400080a9:	add    BYTE PTR [rax],al
   1400080ab:	add    BYTE PTR [rax],al
   1400080ad:	add    BYTE PTR [rax],al
   1400080af:	add    BYTE PTR [rax],cl
   1400080b1:	add    BYTE PTR [r8+0x1],r8b
   1400080b5:	add    BYTE PTR [rax],al
   1400080b7:	add    ch,ah
   1400080b9:	add    BYTE PTR [rax],al
   1400080bb:	add    BYTE PTR [rax],al
   1400080bd:	add    BYTE PTR [rax],al
   1400080bf:	add    al,dh
   1400080c1:	add    BYTE PTR [rax+0x1],r8b
   1400080c5:	add    BYTE PTR [rax],al
   1400080c7:	add    dh,ah
   1400080c9:	add    BYTE PTR [rax],al
   1400080cb:	add    BYTE PTR [rax],al
   1400080cd:	add    BYTE PTR [rax],al
   1400080cf:	add    BYTE PTR [rax+0x43],ch
   1400080d2:	add    BYTE PTR [rax+0x1],al
   1400080d5:	add    BYTE PTR [rax],al
   1400080d7:	add    dh,bh
   1400080d9:	add    BYTE PTR [rax],al
   1400080db:	add    BYTE PTR [rax],al
   1400080dd:	add    BYTE PTR [rax],al
   1400080df:	add    BYTE PTR [rax+0x140004c],cl
   1400080e5:	add    BYTE PTR [rax],al
   1400080e7:	add    BYTE PTR [rdi+0x0],ch
   1400080ea:	add    BYTE PTR [rax],al
   1400080ec:	add    BYTE PTR [rax],al
   1400080ee:	add    BYTE PTR [rax],al
   1400080f0:	(bad)  
   1400080f1:	add    BYTE PTR [r8+0x1],r8b
   1400080f5:	add    BYTE PTR [rax],al
   1400080f7:	add    al,ah
   1400080f9:	add    BYTE PTR [rax],al
   1400080fb:	add    BYTE PTR [rax],al
   1400080fd:	add    BYTE PTR [rax],al
   1400080ff:	add    BYTE PTR [rax],cl
   140008101:	rex.WRB add BYTE PTR [r8+0x1],r8b
   140008105:	add    BYTE PTR [rax],al
   140008107:	add    BYTE PTR [rsi+0x0],bl
   14000810a:	add    BYTE PTR [rax],al
   14000810c:	add    BYTE PTR [rax],al
   14000810e:	add    BYTE PTR [rax],al
   140008110:	(bad)  
   140008111:	rex.RX add BYTE PTR [rax+0x1],r8b
   140008115:	add    BYTE PTR [rax],al
   140008117:	add    al,dl
   140008119:	add    BYTE PTR [rax],al
   14000811b:	add    BYTE PTR [rax],al
   14000811d:	add    BYTE PTR [rax],al
   14000811f:	add    BYTE PTR [rax+0x1400043],al
   140008125:	add    BYTE PTR [rax],al
   140008127:	add    ch,bh
   140008129:	add    BYTE PTR [rax],al
   14000812b:	add    BYTE PTR [rax],al
   14000812d:	add    BYTE PTR [rax],al
   14000812f:	add    al,ch
   140008131:	rex.X add BYTE PTR [rax+0x1],al
   140008135:	add    BYTE PTR [rax],al
   140008137:	add    BYTE PTR [rdi],al
   140008139:	add    DWORD PTR [rax],eax
   14000813b:	add    BYTE PTR [rax],al
   14000813d:	add    BYTE PTR [rax],al
   14000813f:	add    BYTE PTR [rax+0x4f],cl
   140008142:	add    BYTE PTR [rax+0x1],al
   140008145:	add    BYTE PTR [rax],al
   140008147:	add    BYTE PTR [rsi],dl
   140008149:	add    BYTE PTR [rax],al
   14000814b:	add    BYTE PTR [rax],al
   14000814d:	add    BYTE PTR [rax],al
   14000814f:	add    al,ch
   140008151:	rex.WX add BYTE PTR [rax+0x1],al
   140008155:	add    BYTE PTR [rax],al
   140008157:	add    BYTE PTR [rdx+0x0],cl
   14000815d:	add    BYTE PTR [rax],al
   14000815f:	add    BYTE PTR [rax+0x4f],al
   140008162:	add    BYTE PTR [rax+0x1],al
   140008165:	add    BYTE PTR [rax],al
   140008167:	add    BYTE PTR [rdi],dl
   140008169:	add    BYTE PTR [rax],al
   14000816b:	add    BYTE PTR [rax],al
   14000816d:	add    BYTE PTR [rax],al
   14000816f:	add    al,bl
   140008171:	rex.WX add BYTE PTR [rax+0x1],al
   140008175:	add    BYTE PTR [rax],al
   140008177:	add    BYTE PTR [rbx+0x0],cl
   14000817d:	add    BYTE PTR [rax],al
   14000817f:	add    BYTE PTR [rax],bh
   140008181:	rex.WRXB add BYTE PTR [r8+0x1],r8b
   140008185:	add    BYTE PTR [rax],al
   140008187:	add    BYTE PTR [rax],bl
   140008189:	add    BYTE PTR [rax],al
   14000818b:	add    BYTE PTR [rax],al
   14000818d:	add    BYTE PTR [rax],al
   14000818f:	add    al,cl
   140008191:	rex.WX add BYTE PTR [rax+0x1],al
   140008195:	add    BYTE PTR [rax],al
   140008197:	add    BYTE PTR [rax+rax*1+0x0],cl
   14000819e:	add    BYTE PTR [rax],al
   1400081a0:	or     BYTE PTR [rax+rax*1+0x40],0x1
   1400081a5:	add    BYTE PTR [rax],al
   1400081a7:	add    BYTE PTR [rax+0x0],dh
   1400081aa:	add    BYTE PTR [rax],al
   1400081ac:	add    BYTE PTR [rax],al
   1400081ae:	add    BYTE PTR [rax],al
   1400081b0:	push   rax
   1400081b1:	add    BYTE PTR [r8+0x1],r8b
   1400081b5:	add    BYTE PTR [rax],al
   1400081b7:	add    cl,ah
   1400081b9:	add    BYTE PTR [rax],al
   1400081bb:	add    BYTE PTR [rax],al
   1400081bd:	add    BYTE PTR [rax],al
   1400081bf:	add    BYTE PTR [rax+0x140004d],ch
   1400081c5:	add    BYTE PTR [rax],al
   1400081c7:	add    BYTE PTR [rdx+0x0],cl
   1400081ca:	add    BYTE PTR [rax],al
   1400081cc:	add    BYTE PTR [rax],al
   1400081ce:	add    BYTE PTR [rax],al
   1400081d0:	movabs al,ds:0xbd00000001400047
   1400081d9:	add    BYTE PTR [rax],al
   1400081db:	add    BYTE PTR [rax],al
   1400081dd:	add    BYTE PTR [rax],al
   1400081df:	add    BYTE PTR [rax+0x140004c],dl
   1400081e5:	add    BYTE PTR [rax],al
   1400081e7:	add    BYTE PTR [rsi+0x0],ch
   1400081ea:	add    BYTE PTR [rax],al
   1400081ec:	add    BYTE PTR [rax],al
   1400081ee:	add    BYTE PTR [rax],al
   1400081f0:	jo     0x140008237
   1400081f2:	add    BYTE PTR [rax+0x1],al
   1400081f5:	add    BYTE PTR [rax],al
   1400081f7:	add    bh,bl
   1400081f9:	add    BYTE PTR [rax],al
   1400081fb:	add    BYTE PTR [rax],al
   1400081fd:	add    BYTE PTR [rax],al
   1400081ff:	add    BYTE PTR [rax+0x4e],al
   140008202:	add    BYTE PTR [rax+0x1],al
   140008205:	add    BYTE PTR [rax],al
   140008207:	add    BYTE PTR [rdi],dh
   140008209:	add    BYTE PTR [rax],al
   14000820b:	add    BYTE PTR [rax],al
   14000820d:	add    BYTE PTR [rax],al
   14000820f:	add    al,bh
   140008211:	rex.X add BYTE PTR [rax+0x1],al
   140008215:	add    BYTE PTR [rax],al
   140008217:	add    BYTE PTR [rsi],al
   140008219:	add    DWORD PTR [rax],eax
   14000821b:	add    BYTE PTR [rax],al
   14000821d:	add    BYTE PTR [rax],al
   14000821f:	add    al,cl
   140008221:	rex.W add BYTE PTR [rax+0x1],al
   140008225:	add    BYTE PTR [rax],al
   140008227:	add    BYTE PTR [rbx+0x0],ch
   14000822d:	add    BYTE PTR [rax],al
   14000822f:	add    BYTE PTR [rax],cl
   140008231:	add    BYTE PTR [rax+0x1],r8b
   140008235:	add    BYTE PTR [rax],al
   140008237:	add    ch,dh
   140008239:	add    BYTE PTR [rax],al
   14000823b:	add    BYTE PTR [rax],al
   14000823d:	add    BYTE PTR [rax],al
   14000823f:	add    BYTE PTR [rax+0x4d],ah
   140008242:	add    BYTE PTR [rax+0x1],al
   140008245:	add    BYTE PTR [rax],al
   140008247:	add    BYTE PTR [rbx+0x0],dl
   14000824a:	add    BYTE PTR [rax],al
   14000824c:	add    BYTE PTR [rax],al
   14000824e:	add    BYTE PTR [rax],al
   140008250:	adc    BYTE PTR [rdi+0x0],al
   140008253:	rex add DWORD PTR [rax],eax
   140008256:	add    BYTE PTR [rax],al
   140008258:	mov    BYTE PTR [rax],0x0
   14000825b:	add    BYTE PTR [rax],al
   14000825d:	add    BYTE PTR [rax],al
   14000825f:	add    BYTE PTR [rax],ch
   140008261:	rex.WRXB add BYTE PTR [r8+0x1],r8b
   140008265:	add    BYTE PTR [rax],al
   140008267:	add    BYTE PTR [rdx],bl
   140008269:	add    BYTE PTR [rax],al
   14000826b:	add    BYTE PTR [rax],al
   14000826d:	add    BYTE PTR [rax],al
   14000826f:	add    BYTE PTR [rax+0x140004a],ch
   140008275:	add    BYTE PTR [rax],al
   140008277:	add    BYTE PTR [rsi+0x0],cl
   14000827d:	add    BYTE PTR [rax],al
   14000827f:	add    al,ah
   140008281:	rex.WRX add BYTE PTR [rax+0x1],r8b
   140008285:	add    BYTE PTR [rax],al
   140008287:	add    BYTE PTR [rbx],ah
   140008289:	add    BYTE PTR [rax],al
   14000828b:	add    BYTE PTR [rax],al
   14000828d:	add    BYTE PTR [rax],al
   14000828f:	add    BYTE PTR [rax],bl
   140008291:	rex.WX add BYTE PTR [rax+0x1],al
   140008295:	add    BYTE PTR [rax],al
   140008297:	add    BYTE PTR [rdi+0x0],dl
   14000829d:	add    BYTE PTR [rax],al
   14000829f:	add    BYTE PTR [rax+0x3e],bl
   1400082a2:	add    BYTE PTR [rax+0x1],al
   1400082a5:	add    BYTE PTR [rax],al
   1400082a7:	add    BYTE PTR [rbp+0x1],dl
   1400082aa:	add    BYTE PTR [rax],al
   1400082ac:	add    BYTE PTR [rax],al
   1400082ae:	add    BYTE PTR [rax],al
   1400082b0:	test   al,0x41
   1400082b2:	add    BYTE PTR [rax+0x1],al
   1400082b5:	add    BYTE PTR [rax],al
   1400082b7:	add    BYTE PTR [rip+0x1],bl        # 0x1400082be
   1400082bd:	add    BYTE PTR [rax],al
   1400082bf:	add    BYTE PTR [rax+0x41],ch
   1400082c2:	add    BYTE PTR [rax+0x1],al
   1400082c5:	add    BYTE PTR [rax],al
   1400082c7:	add    BYTE PTR [rdx],ah
   1400082c9:	add    DWORD PTR [rax],eax
   1400082cb:	add    BYTE PTR [rax],al
   1400082cd:	add    BYTE PTR [rax],al
   1400082cf:	add    al,bh
   1400082d1:	cmp    eax,0x14000
   1400082d6:	add    BYTE PTR [rax],al
   1400082d8:	pop    rsi
   1400082d9:	add    DWORD PTR [rax],eax
   1400082db:	add    BYTE PTR [rax],al
   1400082dd:	add    BYTE PTR [rax],al
   1400082df:	add    BYTE PTR [rax+0x42],ch
   1400082e2:	add    BYTE PTR [rax+0x1],al
   1400082e5:	add    BYTE PTR [rax],al
   1400082e7:	add    BYTE PTR [rdi],cl
   1400082e9:	add    DWORD PTR [rax],eax
   1400082eb:	add    BYTE PTR [rax],al
   1400082ed:	add    BYTE PTR [rax],al
   1400082ef:	add    al,bh
   1400082f1:	add    BYTE PTR [r8+0x1],al
   1400082f5:	add    BYTE PTR [rax],al
   1400082f7:	add    BYTE PTR [rdi],dl
   1400082f9:	add    DWORD PTR [rax],eax
   1400082fb:	add    BYTE PTR [rax],al
   1400082fd:	add    BYTE PTR [rax],al
   1400082ff:	add    BYTE PTR [rax+0x140003e],ah
   140008305:	add    BYTE PTR [rax],al
   140008307:	add    BYTE PTR [rsi+0x1],cl
   14000830a:	add    BYTE PTR [rax],al
   14000830c:	add    BYTE PTR [rax],al
   14000830e:	add    BYTE PTR [rax],al
   140008310:	rol    BYTE PTR [rax+0x0],1
   140008313:	rex add DWORD PTR [rax],eax
   140008316:	add    BYTE PTR [rax],al
   140008318:	sub    al,0x1
   14000831a:	add    BYTE PTR [rax],al
   14000831c:	add    BYTE PTR [rax],al
   14000831e:	add    BYTE PTR [rax],al
   140008320:	mov    BYTE PTR [rsi],bh
   140008322:	add    BYTE PTR [rax+0x1],al
   140008325:	add    BYTE PTR [rax],al
   140008327:	add    BYTE PTR [rax+0x1],dl
   14000832a:	add    BYTE PTR [rax],al
   14000832c:	add    BYTE PTR [rax],al
   14000832e:	add    BYTE PTR [rax],al
   140008330:	sub    BYTE PTR [rcx+0x0],al
   140008333:	rex add DWORD PTR [rax],eax
   140008336:	add    BYTE PTR [rax],al
   140008338:	(bad)  
   140008339:	add    DWORD PTR [rax],eax
   14000833b:	add    BYTE PTR [rax],al
   14000833d:	add    BYTE PTR [rax],al
   14000833f:	add    BYTE PTR [rax],ah
   140008341:	rex.WRXB add BYTE PTR [r8+0x1],r8b
   140008345:	add    BYTE PTR [rax],al
   140008347:	add    BYTE PTR [rbx],bl
   140008349:	add    BYTE PTR [rax],al
   14000834b:	add    BYTE PTR [rax],al
   14000834d:	add    BYTE PTR [rax],al
   14000834f:	add    BYTE PTR [rax+0x140004a],bl
   140008355:	add    BYTE PTR [rax],al
   140008357:	add    BYTE PTR [rdi+0x0],cl
   14000835d:	add    BYTE PTR [rax],al
   14000835f:	add    BYTE PTR [rax],bl
   140008361:	add    BYTE PTR ds:[rax+0x1],al
   140008365:	add    BYTE PTR [rax],al
   140008367:	add    BYTE PTR [rbx+0x1],bl
   14000836a:	add    BYTE PTR [rax],al
   14000836c:	add    BYTE PTR [rax],al
   14000836e:	add    BYTE PTR [rax],al
   140008370:	mov    eax,0x140003e
   140008375:	add    BYTE PTR [rax],al
   140008377:	add    BYTE PTR [rcx+rax*1+0x0],cl
   14000837b:	add    BYTE PTR [rax],al
   14000837d:	add    BYTE PTR [rax],al
   14000837f:	add    BYTE PTR [rax],dh
   140008381:	(bad)  
   140008382:	add    BYTE PTR [rax+0x1],al
   140008385:	add    BYTE PTR [rax],al
   140008387:	add    BYTE PTR [rcx],ah
   140008389:	add    DWORD PTR [rax],eax
   14000838b:	add    BYTE PTR [rax],al
   14000838d:	add    BYTE PTR [rax],al
   14000838f:	add    BYTE PTR [rax+0x1400037],dl
   140008395:	add    BYTE PTR [rax],al
   140008397:	add    BYTE PTR [rip+0x1],al        # 0x14000839e
   14000839d:	add    BYTE PTR [rax],al
   14000839f:	add    al,bh
   1400083a1:	(bad)  
   1400083a2:	add    BYTE PTR [rax+0x1],al
   1400083a5:	add    BYTE PTR [rax],al
   1400083a7:	add    BYTE PTR [rax],bh
   1400083a9:	add    DWORD PTR [rax],eax
   1400083ab:	add    BYTE PTR [rax],al
   1400083ad:	add    BYTE PTR [rax],al
   1400083af:	add    BYTE PTR [rax+0x1400040],cl
   1400083b5:	add    BYTE PTR [rax],al
   1400083b7:	add    BYTE PTR [rax],dh
   1400083b9:	add    DWORD PTR [rax],eax
   1400083bb:	add    BYTE PTR [rax],al
   1400083bd:	add    BYTE PTR [rax],al
   1400083bf:	add    BYTE PTR [rax+0x140003e],ch
   1400083c5:	add    BYTE PTR [rax],al
   1400083c7:	add    BYTE PTR [rbp+0x1],cl
   1400083ca:	add    BYTE PTR [rax],al
   1400083cc:	add    BYTE PTR [rax],al
   1400083ce:	add    BYTE PTR [rax],al
   1400083d0:	(bad)  
   1400083d1:	(bad)  
   1400083d2:	add    BYTE PTR [rax+0x1],al
   1400083d5:	add    BYTE PTR [rax],al
   1400083d7:	add    BYTE PTR [rcx+rax*1],bl
   1400083da:	add    BYTE PTR [rax],al
   1400083dc:	add    BYTE PTR [rax],al
   1400083de:	add    BYTE PTR [rax],al
   1400083e0:	shl    BYTE PTR [rdi],0x0
   1400083e3:	rex add DWORD PTR [rax],eax
   1400083e6:	add    BYTE PTR [rax],al
   1400083e8:	icebp  
   1400083e9:	add    BYTE PTR [rax],al
   1400083eb:	add    BYTE PTR [rax],al
   1400083ed:	add    BYTE PTR [rax],al
   1400083ef:	add    BYTE PTR [rax+0x40],al
   1400083f2:	add    BYTE PTR [rax+0x1],al
   1400083f5:	add    BYTE PTR [rax],al
   1400083f7:	add    BYTE PTR [rcx+rax*1],dh
   1400083fa:	add    BYTE PTR [rax],al
   1400083fc:	add    BYTE PTR [rax],al
   1400083fe:	add    BYTE PTR [rax],al
   140008400:	loopne 0x140008442
   140008402:	add    BYTE PTR [rax+0x1],al
   140008405:	add    BYTE PTR [rax],al
   140008407:	add    BYTE PTR [rbx],ch
   140008409:	add    DWORD PTR [rax],eax
   14000840b:	add    BYTE PTR [rax],al
   14000840d:	add    BYTE PTR [rax],al
   14000840f:	add    BYTE PTR [rax],bl
   140008411:	rex.WRXB add BYTE PTR [r8+0x1],r8b
   140008415:	add    BYTE PTR [rax],al
   140008417:	add    BYTE PTR [rax+rax*1],bl
   14000841a:	add    BYTE PTR [rax],al
   14000841c:	add    BYTE PTR [rax],al
   14000841e:	add    BYTE PTR [rax],al
   140008420:	rex
   140008421:	add    BYTE PTR [rax+0x1],r8b
   140008425:	add    BYTE PTR [rax],al
   140008427:	add    dl,dh
   140008429:	add    BYTE PTR [rax],al
   14000842b:	add    BYTE PTR [rax],al
   14000842d:	add    BYTE PTR [rax],al
   14000842f:	add    BYTE PTR [rax+0x140004a],cl
   140008435:	add    BYTE PTR [rax],al
   140008437:	add    BYTE PTR [rax+0x0],dl
   14000843d:	add    BYTE PTR [rax],al
   14000843f:	add    BYTE PTR [rax],bl
   140008441:	rex.WRX add BYTE PTR [rax+0x1],r8b
   140008445:	add    BYTE PTR [rax],al
   140008447:	add    BYTE PTR [rax+rax*1],bh
   14000844a:	add    BYTE PTR [rax],al
   14000844c:	add    BYTE PTR [rax],al
   14000844e:	add    BYTE PTR [rax],al
   140008450:	mov    BYTE PTR [rax+0x0],cl
   140008453:	rex add DWORD PTR [rax],eax
   140008456:	add    BYTE PTR [rax],al
   140008458:	scas   eax,DWORD PTR es:[rdi]
   140008459:	add    BYTE PTR [rax],al
   14000845b:	add    BYTE PTR [rax],al
   14000845d:	add    BYTE PTR [rax],al
   14000845f:	add    BYTE PTR [rax+0x4d],ch
   140008462:	add    BYTE PTR [rax+0x1],al
   140008465:	add    BYTE PTR [rax],al
   140008467:	add    BYTE PTR [rdx+0x0],dl
   14000846a:	add    BYTE PTR [rax],al
   14000846c:	add    BYTE PTR [rax],al
   14000846e:	add    BYTE PTR [rax],al
   140008470:	and    BYTE PTR [rdi+0x0],al
   140008473:	rex add DWORD PTR [rax],eax
   140008476:	add    BYTE PTR [rax],al
   140008478:	(bad)
   14000847b:	add    BYTE PTR [rax],al
   14000847d:	add    BYTE PTR [rax],al
   14000847f:	add    al,bl
   140008481:	rex.WRB add BYTE PTR [r8+0x1],r8b
   140008485:	add    BYTE PTR [rax],al
   140008487:	add    BYTE PTR [rax+rax*1+0x0],al
   14000848b:	add    BYTE PTR [rax],al
   14000848d:	add    BYTE PTR [rax],al
   14000848f:	add    BYTE PTR [rax],al
   140008491:	rex.W add BYTE PTR [rax+0x1],al
   140008495:	add    BYTE PTR [rax],al
   140008497:	add    BYTE PTR [rdi+0x0],dh
   14000849d:	add    BYTE PTR [rax],al
   14000849f:	add    al,dl
   1400084a1:	rex.WRB add BYTE PTR [r8+0x1],r8b
   1400084a5:	add    BYTE PTR [rax],al
   1400084a7:	add    BYTE PTR [rbp+0x0],al
   1400084aa:	add    BYTE PTR [rax],al
   1400084ac:	add    BYTE PTR [rax],al
   1400084ae:	add    BYTE PTR [rax],al
   1400084b0:	lock rex.RXB add BYTE PTR [r8+0x1],r8b
   1400084b5:	add    BYTE PTR [rax],al
   1400084b7:	add    BYTE PTR [rax+0x0],bh
   1400084bd:	add    BYTE PTR [rax],al
   1400084bf:	add    al,al
   1400084c1:	rex.WRX add BYTE PTR [rax+0x1],r8b
   1400084c5:	add    BYTE PTR [rax],al
   1400084c7:	add    BYTE PTR [rdi],ah
   1400084c9:	add    BYTE PTR [rax],al
   1400084cb:	add    BYTE PTR [rax],al
   1400084cd:	add    BYTE PTR [rax],al
   1400084cf:	add    BYTE PTR [rax],cl
   1400084d1:	add    BYTE PTR ds:[rax+0x1],al
   1400084d5:	add    BYTE PTR [rax],al
   1400084d7:	add    BYTE PTR [rcx+rax*1+0x0],bl
   1400084db:	add    BYTE PTR [rax],al
   1400084dd:	add    BYTE PTR [rax],al
   1400084df:	add    al,dl
   1400084e1:	rex.WB add BYTE PTR [r8+0x1],al
   1400084e5:	add    BYTE PTR [rax],al
   1400084e7:	add    BYTE PTR [rbx+0x0],bl
   1400084ed:	add    BYTE PTR [rax],al
   1400084ef:	add    BYTE PTR [rax],dl
   1400084f1:	rex.WRXB add BYTE PTR [r8+0x1],r8b
   1400084f5:	add    BYTE PTR [rax],al
   1400084f7:	add    BYTE PTR [rip+0x0],bl        # 0x1400084fd
   1400084fd:	add    BYTE PTR [rax],al
   1400084ff:	add    BYTE PTR [rax+0x4a],bh
   140008502:	add    BYTE PTR [rax+0x1],al
   140008505:	add    BYTE PTR [rax],al
   140008507:	add    BYTE PTR [rcx+0x0],dl
   14000850d:	add    BYTE PTR [rax],al
   14000850f:	add    BYTE PTR [rax],dl
   140008511:	rex.WRX add BYTE PTR [rax+0x1],r8b
   140008515:	add    BYTE PTR [rax],al
   140008517:	add    BYTE PTR [rip+0x0],bh        # 0x14000851d
   14000851d:	add    BYTE PTR [rax],al
   14000851f:	add    BYTE PTR [rax+0x48],bh
   140008522:	add    BYTE PTR [rax+0x1],al
   140008525:	add    BYTE PTR [rax],al
   140008527:	add    BYTE PTR [rax+0x0],dh
   14000852d:	add    BYTE PTR [rax],al
   14000852f:	add    BYTE PTR [rax+0x140004e],al
   140008535:	add    BYTE PTR [rax],al
   140008537:	add    BYTE PTR [rdi],ch
   140008539:	add    BYTE PTR [rax],al
   14000853b:	add    BYTE PTR [rax],al
   14000853d:	add    BYTE PTR [rax],al
   14000853f:	add    BYTE PTR [rax+0x49],cl
   140008542:	add    BYTE PTR [rax+0x1],al
   140008545:	add    BYTE PTR [rax],al
   140008547:	add    BYTE PTR [rbx+0x0],ah
   14000854d:	add    BYTE PTR [rax],al
   14000854f:	add    BYTE PTR [rax],cl
   140008551:	rex.WRXB add BYTE PTR [r8+0x1],r8b
   140008555:	add    BYTE PTR [rax],al
   140008557:	add    BYTE PTR [rsi],bl
   140008559:	add    BYTE PTR [rax],al
   14000855b:	add    BYTE PTR [rax],al
   14000855d:	add    BYTE PTR [rax],al
   14000855f:	add    BYTE PTR [rax+0x4a],ch
   140008562:	add    BYTE PTR [rax+0x1],al
   140008565:	add    BYTE PTR [rax],al
   140008567:	add    BYTE PTR [rdx+0x0],dl
   14000856d:	add    BYTE PTR [rax],al
   14000856f:	add    BYTE PTR [rax],al
   140008571:	rex.WRX add BYTE PTR [rax+0x1],r8b
   140008575:	add    BYTE PTR [rax],al
   140008577:	add    BYTE PTR [rdi],bh
   140008579:	add    BYTE PTR [rax],al
   14000857b:	add    BYTE PTR [rax],al
   14000857d:	add    BYTE PTR [rax],al
   14000857f:	add    BYTE PTR [rax+0x48],dl
   140008582:	add    BYTE PTR [rax+0x1],al
   140008585:	add    BYTE PTR [rax],al
   140008587:	add    BYTE PTR [rdx+0x0],dh
   14000858d:	add    BYTE PTR [rax],al
   14000858f:	add    BYTE PTR [rax+0x4d],cl
   140008592:	add    BYTE PTR [rax+0x1],al
   140008595:	add    BYTE PTR [rax],al
   140008597:	add    BYTE PTR [rsi+0x0],dl
   14000859a:	add    BYTE PTR [rax],al
   14000859c:	add    BYTE PTR [rax],al
   14000859e:	add    BYTE PTR [rax],al
   1400085a0:	mov    al,0x3d
   1400085a2:	add    BYTE PTR [rax+0x1],al
   1400085a5:	add    BYTE PTR [rax],al
   1400085a7:	add    BYTE PTR [rdx+0x1],ah
   1400085aa:	add    BYTE PTR [rax],al
   1400085ac:	add    BYTE PTR [rax],al
   1400085ae:	add    BYTE PTR [rax],al
   1400085b0:	nop
   1400085b1:	rex.XB add BYTE PTR [r8+0x1],al
   1400085b5:	add    BYTE PTR [rax],al
   1400085b7:	add    ah,bh
   1400085b9:	add    BYTE PTR [rax],al
   1400085bb:	add    BYTE PTR [rax],al
   1400085bd:	add    BYTE PTR [rax],al
   1400085bf:	add    BYTE PTR [rax+0x140004c],bh
   1400085c5:	add    BYTE PTR [rax],al
   1400085c7:	add    BYTE PTR [rcx+0x0],ch
   1400085ca:	add    BYTE PTR [rax],al
   1400085cc:	add    BYTE PTR [rax],al
   1400085ce:	add    BYTE PTR [rax],al
   1400085d0:	rol    BYTE PTR [rbp+0x0],0x40
   1400085d4:	add    DWORD PTR [rax],eax
   1400085d6:	add    BYTE PTR [rax],al
   1400085d8:	fiadd  DWORD PTR [rax]
   1400085da:	add    BYTE PTR [rax],al
   1400085dc:	add    BYTE PTR [rax],al
   1400085de:	add    BYTE PTR [rax],al
   1400085e0:	lock rex.WRX add BYTE PTR [rax+0x1],r8b
   1400085e5:	add    BYTE PTR [rax],al
   1400085e7:	add    BYTE PTR [rcx],ah
   1400085e9:	add    BYTE PTR [rax],al
   1400085eb:	add    BYTE PTR [rax],al
   1400085ed:	add    BYTE PTR [rax],al
   1400085ef:	add    BYTE PTR [rax],bh
   1400085f1:	rex.WX add BYTE PTR [rax+0x1],al
   1400085f5:	add    BYTE PTR [rax],al
   1400085f7:	add    BYTE PTR [rbp+0x0],dl
   1400085fd:	add    BYTE PTR [rax],al
   1400085ff:	add    BYTE PTR [rax],al
   140008601:	rex.WRXB add BYTE PTR [r8+0x1],r8b
   140008605:	add    BYTE PTR [rax],al
   140008607:	add    BYTE PTR [rdi],bl
   140008609:	add    BYTE PTR [rax],al
   14000860b:	add    BYTE PTR [rax],al
   14000860d:	add    BYTE PTR [rax],al
   14000860f:	add    BYTE PTR [rax+0x4a],bl
   140008612:	add    BYTE PTR [rax+0x1],al
   140008615:	add    BYTE PTR [rax],al
   140008617:	add    BYTE PTR [rbx+0x0],dl
   14000861d:	add    BYTE PTR [rax],al
   14000861f:	add    BYTE PTR [rax],cl
   140008621:	rex.WRX add BYTE PTR [rax+0x1],r8b
   140008625:	add    BYTE PTR [rax],al
   140008627:	add    BYTE PTR [rsi],bh
   140008629:	add    BYTE PTR [rax],al
   14000862b:	add    BYTE PTR [rax],al
   14000862d:	add    BYTE PTR [rax],al
   14000862f:	add    BYTE PTR [rax+0x3e],cl
   140008632:	add    BYTE PTR [rax+0x1],al
   140008635:	add    BYTE PTR [rax],al
   140008637:	add    BYTE PTR [rsi+0x1],dl
   14000863a:	add    BYTE PTR [rax],al
   14000863c:	add    BYTE PTR [rax],al
   14000863e:	add    BYTE PTR [rax],al
   140008640:	rol    BYTE PTR [rbx+0x0],1
   140008643:	rex add DWORD PTR [rax],eax
   140008646:	add    BYTE PTR [rax],al
   140008648:	clc    
   140008649:	add    BYTE PTR [rax],al
   14000864b:	add    BYTE PTR [rax],al
   14000864d:	add    BYTE PTR [rax],al
   14000864f:	add    al,ch
   140008651:	cmp    eax,0x14000
   140008656:	add    BYTE PTR [rax],al
   140008658:	pop    rdi
   140008659:	add    DWORD PTR [rax],eax
   14000865b:	add    BYTE PTR [rax],al
   14000865d:	add    BYTE PTR [rax],al
   14000865f:	add    BYTE PTR [rax+0x48],ah
   140008662:	add    BYTE PTR [rax+0x1],al
   140008665:	add    BYTE PTR [rax],al
   140008667:	add    BYTE PTR [rcx+0x0],dh
   14000866d:	add    BYTE PTR [rax],al
   14000866f:	add    BYTE PTR [rax+0x140004e],dh
   140008675:	add    BYTE PTR [rax],al
   140008677:	add    BYTE PTR [rcx],ch
   140008679:	add    BYTE PTR [rax],al
   14000867b:	add    BYTE PTR [rax],al
   14000867d:	add    BYTE PTR [rax],al
   14000867f:	add    BYTE PTR [rax+0x1400049],dh
   140008685:	add    BYTE PTR [rax],al
   140008687:	add    BYTE PTR [rbp+0x0],bl
   14000868d:	add    BYTE PTR [rax],al
   14000868f:	add    BYTE PTR [rax+0x4c],bh
   140008692:	add    BYTE PTR [rax+0x1],al
   140008695:	add    BYTE PTR [rax],al
   140008697:	add    BYTE PTR [rcx+0x0],dh
   14000869a:	add    BYTE PTR [rax],al
   14000869c:	add    BYTE PTR [rax],al
   14000869e:	add    BYTE PTR [rax],al
   1400086a0:	rex
   1400086a1:	add    BYTE PTR [r8+0x1],r8b
   1400086a5:	add    BYTE PTR [rax],al
   1400086a7:	add    dl,ah
   1400086a9:	add    BYTE PTR [rax],al
   1400086ab:	add    BYTE PTR [rax],al
   1400086ad:	add    BYTE PTR [rax],al
   1400086af:	add    BYTE PTR [rax+0x4e],bh
   1400086b2:	add    BYTE PTR [rax+0x1],al
   1400086b5:	add    BYTE PTR [rax],al
   1400086b7:	add    BYTE PTR [rax],dh
   1400086b9:	add    BYTE PTR [rax],al
   1400086bb:	add    BYTE PTR [rax],al
   1400086bd:	add    BYTE PTR [rax],al
   1400086bf:	add    BYTE PTR [rax],bh
   1400086c1:	rex.WB add BYTE PTR [r8+0x1],al
   1400086c5:	add    BYTE PTR [rax],al
   1400086c7:	add    BYTE PTR [rax+rax*1+0x0],ah
   1400086ce:	add    BYTE PTR [rax],al
   1400086d0:	adc    BYTE PTR [rbp+0x0],cl
   1400086d3:	rex add DWORD PTR [rax],eax
   1400086d6:	add    BYTE PTR [rax],al
   1400086d8:	pop    rbp
   1400086d9:	add    BYTE PTR [rax],al
   1400086db:	add    BYTE PTR [rax],al
   1400086dd:	add    BYTE PTR [rax],al
   1400086df:	add    BYTE PTR [rax+0x46],dh
   1400086e2:	add    BYTE PTR [rax+0x1],al
   1400086e5:	add    BYTE PTR [rax],al
   1400086e7:	add    bh,cl
   1400086e9:	add    BYTE PTR [rax],al
   1400086eb:	add    BYTE PTR [rax],al
   1400086ed:	add    BYTE PTR [rax],al
   1400086ef:	add    BYTE PTR [rax+0x140003e],al
   1400086f5:	add    BYTE PTR [rax],al
   1400086f7:	add    BYTE PTR [rcx+0x1],dl
   1400086fa:	add    BYTE PTR [rax],al
   1400086fc:	add    BYTE PTR [rax],al
   1400086fe:	add    BYTE PTR [rax],al
   140008700:	rol    BYTE PTR [rax+rax*1+0x40],1
   140008704:	add    DWORD PTR [rax],eax
   140008706:	add    BYTE PTR [rax],al
   140008708:	call   0x14000870d
   14000870d:	add    BYTE PTR [rax],al
   14000870f:	add    BYTE PTR [rax+0x36],dl
   140008712:	add    BYTE PTR [rax+0x1],al
   140008715:	add    BYTE PTR [rax],al
   140008717:	add    BYTE PTR [rbx],al
   140008719:	add    BYTE PTR [rax],al
   14000871b:	add    BYTE PTR [rax],al
   14000871d:	add    BYTE PTR [rax],al
   14000871f:	add    BYTE PTR [rax+0x36],dh
   140008722:	add    BYTE PTR [rax+0x1],al
   140008725:	add    BYTE PTR [rax],al
   140008727:	add    BYTE PTR [rcx+0x1],bl
   14000872a:	add    BYTE PTR [rax],al
   14000872c:	add    BYTE PTR [rax],al
   14000872e:	add    BYTE PTR [rax],al
   140008730:	rex.W
   140008731:	rex.XB add BYTE PTR [r8+0x1],al
   140008735:	add    BYTE PTR [rax],al
   140008737:	add    BYTE PTR [rax],al
   140008739:	add    DWORD PTR [rax],eax
   14000873b:	add    BYTE PTR [rax],al
   14000873d:	add    BYTE PTR [rax],al
   14000873f:	add    BYTE PTR [rax+0x42],cl
   140008742:	add    BYTE PTR [rax+0x1],al
   140008745:	add    BYTE PTR [rax],al
   140008747:	add    BYTE PTR [rcx],dl
   140008749:	add    DWORD PTR [rax],eax
   14000874b:	add    BYTE PTR [rax],al
   14000874d:	add    BYTE PTR [rax],al
   14000874f:	add    al,cl
   140008751:	rex.X add BYTE PTR [rax+0x1],al
   140008755:	add    BYTE PTR [rax],al
   140008757:	add    BYTE PTR [rcx],cl
   140008759:	add    DWORD PTR [rax],eax
   14000875b:	add    BYTE PTR [rax],al
   14000875d:	add    BYTE PTR [rax],al
   14000875f:	add    BYTE PTR [rax],ch
   140008761:	rex.WR add BYTE PTR [rax+0x1],r8b
   140008765:	add    BYTE PTR [rax],al
   140008767:	add    BYTE PTR [rdi+0x0],dh
   14000876a:	add    BYTE PTR [rax],al
   14000876c:	add    BYTE PTR [rax],al
   14000876e:	add    BYTE PTR [rax],al
   140008770:	jo     0x1400087c0
   140008772:	add    BYTE PTR [rax+0x1],al
   140008775:	add    BYTE PTR [rax],al
   140008777:	add    BYTE PTR [rcx],dh
   140008779:	add    BYTE PTR [rax],al
   14000877b:	add    BYTE PTR [rax],al
   14000877d:	add    BYTE PTR [rax],al
   14000877f:	add    BYTE PTR [rax],ch
   140008781:	rex.WB add BYTE PTR [r8+0x1],al
   140008785:	add    BYTE PTR [rax],al
   140008787:	add    BYTE PTR [rbp+0x0],ah
   14000878d:	add    BYTE PTR [rax],al
   14000878f:	add    BYTE PTR [rax],ch
   140008791:	add    BYTE PTR [rsi+0x0],ch
   140008794:	jne    0x140008796
   140008796:	ins    BYTE PTR es:[rdi],dx
   140008797:	add    BYTE PTR [rax+rax*1+0x29],ch
   14000879b:	add    BYTE PTR [rax],al
   14000879d:	add    BYTE PTR [rax],al
   14000879f:	add    BYTE PTR [rax],ch
   1400087a1:	outs   dx,BYTE PTR ds:[rsi]
   1400087a2:	jne    0x140008810
   1400087a4:	ins    BYTE PTR es:[rdi],dx
   1400087a5:	sub    DWORD PTR [rax],eax
	...
   1400087af:	add    BYTE PTR [rsi],al
   1400087b1:	add    BYTE PTR [rax],al
   1400087b3:	(bad)  
   1400087b4:	add    BYTE PTR [rcx],al
   1400087b6:	add    BYTE PTR [rax],al
   1400087b8:	adc    BYTE PTR [rax],al
   1400087ba:	add    eax,DWORD PTR [rsi]
   1400087bc:	add    BYTE PTR [rsi],al
   1400087be:	add    dl,BYTE PTR [rax]
   1400087c0:	add    al,0x45
   1400087c2:	rex.RB
   1400087c3:	rex.RB add eax,0x5050505
   1400087c9:	xor    eax,0x500030
   1400087ce:	add    BYTE PTR [rax],al
   1400087d0:	add    BYTE PTR [rax],ch
   1400087d2:	and    BYTE PTR [rax],bh
   1400087d4:	push   rax
   1400087d5:	pop    rax
   1400087d6:	(bad)  
   1400087d7:	or     BYTE PTR [rax],al
   1400087d9:	(bad)  
   1400087da:	xor    BYTE PTR [rax],dh
   1400087dc:	push   rdi
   1400087dd:	push   rax
   1400087de:	(bad)  
   1400087df:	add    BYTE PTR [rax],al
   1400087e1:	and    BYTE PTR [rax],ah
   1400087e3:	or     BYTE PTR [rax],al
   1400087e5:	add    BYTE PTR [rax],al
   1400087e7:	add    BYTE PTR [rax],cl
   1400087e9:	(bad)  
   1400087ea:	push   0x60606060
   1400087ef:	add    BYTE PTR [rax],al
   1400087f1:	js     0x140008863
   1400087f3:	js     0x14000886d
   1400087f5:	js     0x14000886f
   1400087f7:	or     BYTE PTR [rdi],al
   1400087f9:	or     BYTE PTR [rax],al
   1400087fb:	add    BYTE PTR [rdi],al
   1400087fd:	add    BYTE PTR [rax],cl
   1400087ff:	or     BYTE PTR [rax],cl
   140008801:	add    BYTE PTR [rax],al
   140008803:	or     BYTE PTR [rax],al
   140008805:	or     BYTE PTR [rax],al
   140008807:	(bad)  
   140008808:	or     BYTE PTR [rax],al
   14000880a:	add    BYTE PTR [rax],al
   14000880c:	add    BYTE PTR [rax],al
   14000880e:	add    BYTE PTR [rax],al
   140008810:	(bad)  
   140008811:	add    BYTE PTR [rax-0x7f7e7f7a],0x0
   140008818:	add    BYTE PTR [rax],dl
   14000881a:	add    eax,DWORD PTR [rsi-0x7f7d7980]
   140008820:	adc    al,0x5
   140008822:	add    eax,0x85454545
   140008827:	test   DWORD PTR [rbp+0x30000005],eax
   14000882d:	xor    BYTE PTR [rax+0x888050],al
   140008833:	or     BYTE PTR [rax],al
   140008835:	sub    BYTE PTR [rdi],ah
   140008837:	cmp    BYTE PTR [rax+0x57],dl
   14000883a:	add    BYTE PTR [rax],0x7
   14000883d:	add    BYTE PTR [rdi],dh
   14000883f:	xor    BYTE PTR [rax],dh
   140008841:	push   rax
   140008842:	push   rax
   140008843:	mov    BYTE PTR [rax],al
   140008845:	add    BYTE PTR [rax],al
   140008847:	and    BYTE PTR [rax],ch
   140008849:	or     BYTE PTR [rax+0x8080],0x0
   140008850:	(bad)  
   140008851:	push   0x68686860
   140008856:	or     BYTE PTR [rax],cl
   140008858:	(bad)  
   140008859:	js     0x1400088cb
   14000885b:	jo     0x1400088d4
   14000885d:	jo     0x1400088cf
   14000885f:	or     BYTE PTR [rax],cl
   140008861:	add    BYTE PTR [rax],al
   140008863:	or     BYTE PTR [rax],al
   140008865:	or     BYTE PTR [rax],al
   140008867:	(bad)  
   140008868:	or     BYTE PTR [rax],al
   14000886a:	add    BYTE PTR [rax],al
   14000886c:	add    BYTE PTR [rax],al
   14000886e:	add    BYTE PTR [rax],al
   140008870:	rex.XB add BYTE PTR [r15+0x0],cl
   140008874:	rex.WRX add BYTE PTR [rdi+0x0],r9b
   140008878:	push   rbp
   140008879:	add    BYTE PTR [rax+rax*1+0x24],dl
   14000887d:	add    BYTE PTR [rax],al
   14000887f:	add    BYTE PTR [rsi-0x60],ch
   140008882:	icebp  
   140008883:	nop
   140008884:	adc    dh,BYTE PTR [rdi+0x62]
   140008887:	rex.RXB xchg BYTE PTR [r13+0x6bba5e7a],r14b
   14000888e:	fild   DWORD PTR [rdx]
   140008890:	ins    BYTE PTR es:[rdi],dx
   140008891:	movabs al,ds:0xb5864762771290f1
   14000889a:	jp     0x1400088fa
   14000889c:	mov    edx,0x9e02db6b
   1400088a1:	(bad)  [rdx]
   1400088a3:	shl    DWORD PTR [rbx-0x7dbeda47],cl
   1400088a9:	(bad)  
   1400088aa:	movabs eax,ds:0x80188d1632f58448
   1400088b3:	xchg   edx,eax
   1400088b4:	mov    cs,WORD PTR [rsi]
   1400088b6:	addr32 rex.W mov bl,0xc
   1400088ba:	jg     0x140008864
   1400088bc:	cmp    BYTE PTR [rax+rbp*8+0x190695de],al
   1400088c3:	loop   0x140008877
   1400088c5:	ja     0x1400088f5
   1400088c7:	rex.WB mov ss,WORD PTR [r12+rax*8]
   1400088cb:	mov    bl,0xa7
   1400088cd:	std    
   1400088ce:	(bad)  
   1400088cf:	xchg   ebx,eax
   1400088d0:	(bad)  
   1400088d1:	(bad)  
   1400088d2:	mov    esp,0x611b472e
   1400088d7:	rex.WX mov cl,0x3a
   1400088da:	rex.WX add rsi,QWORD PTR [rax+0x1e]
   1400088de:	pop    rcx
   1400088df:	rex.WXB rcl r9b,cl
   1400088e2:	cmp    DWORD PTR [rbp+0x486aba2f],edi
   1400088e8:	mov    DWORD PTR [rax+0x46cbb0b4],esi
   1400088ee:	push   0x73006d91
   1400088f3:	add    BYTE PTR [rbx+0x0],ah
   1400088f6:	outs   dx,DWORD PTR ds:[rsi]
   1400088f7:	add    BYTE PTR [rdx+0x0],dh
   1400088fa:	add    BYTE PTR gs:[rbp+0x0],ah
   1400088fe:	add    BYTE PTR cs:[rax+rax*1+0x6c],ah
   140008903:	add    BYTE PTR [rax+rax*1+0x0],ch
   140008907:	add    BYTE PTR [rbx+0x4c],al
   14000890a:	push   rdx
   14000890b:	rex.XB jb 0x140008973
   14000890e:	(bad)  
   14000890f:	je     0x140008976
   140008911:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140008913:	jae    0x140008989
   140008915:	(bad)  
   140008916:	outs   dx,BYTE PTR ds:[rsi]
   140008917:	movsxd esp,DWORD PTR [rbp+0x0]
   14000891a:	add    BYTE PTR [rax],al
   14000891c:	add    BYTE PTR [rax],al
   14000891e:	add    BYTE PTR [rax],al
   140008920:	jbe    0x140008922
   140008922:	xor    al,0x0
   140008924:	add    BYTE PTR cs:[rax],dh
   140008927:	add    BYTE PTR [rsi],ch
   140008929:	add    BYTE PTR [rax],dh
   14000892b:	add    BYTE PTR [rax],al
   14000892d:	add    BYTE PTR [rax],al
   14000892f:	add    BYTE PTR [rdi+0x65],al
   140008932:	je     0x140008986
   140008934:	gs jno 0x1400089ac
   140008937:	gs jae 0x1400089ae
   14000893a:	gs fs push rdx
   14000893d:	jne    0x1400089ad
   14000893f:	je     0x1400089aa
   140008941:	ins    DWORD PTR es:[rdi],dx
   140008942:	rex.WB outs dx,BYTE PTR gs:[rsi]
   140008945:	outs   dx,WORD PTR ds:[rsi]
   140008947:	add    BYTE PTR [rcx+0x0],ch
   14000894a:	imul   eax,DWORD PTR [rax],0x650073
   140008950:	js     0x140008952
   140008952:	jo     0x140008954
   140008954:	jb     0x140008956
   140008956:	add    BYTE PTR gs:[rbx+0x0],dh
   14000895a:	jae    0x14000895c
   14000895c:	je     0x14000895e
   14000895e:	jb     0x140008960
   140008960:	(bad)  
   140008961:	add    BYTE PTR [rcx+0x0],bh
   140008964:	add    BYTE PTR cs:[rbp+0x0],ah
   140008968:	js     0x14000896a
   14000896a:	add    BYTE PTR gs:[rax],al
   14000896d:	add    BYTE PTR [rax],al
   14000896f:	add    BYTE PTR [rdx],bh
   140008971:	add    BYTE PTR [rax],ah
   140008973:	add    BYTE PTR [rax],al
   140008975:	add    BYTE PTR [rax],al
   140008977:	add    BYTE PTR [rsi],ch
   140008979:	add    BYTE PTR [rax],ah
   14000897b:	add    BYTE PTR [rax],al
   14000897d:	add    BYTE PTR [rax],al
   14000897f:	add    BYTE PTR [rax],ah
   140008981:	add    BYTE PTR [rax],al
   140008983:	add    BYTE PTR [rax],al
   140008985:	add    BYTE PTR [rax],al
   140008987:	add    BYTE PTR [rsi],ch
   140008989:	add    BYTE PTR [rbx+0x0],ah
   14000898c:	outs   dx,DWORD PTR ds:[rsi]
   14000898d:	add    BYTE PTR [rsi+0x0],ch
   140008990:	data16 add BYTE PTR [rcx+0x0],ch
   140008994:	add    BYTE PTR [eax],al
   140008997:	add    BYTE PTR [rax],dh
   140008999:	add    BYTE PTR [rax],al
   14000899b:	add    BYTE PTR [rax],al
   14000899d:	add    BYTE PTR [rax],al
   14000899f:	add    BYTE PTR [rbp+0x0],al
   1400089a2:	js     0x1400089a4
   1400089a4:	add    BYTE PTR gs:[rbx+0x0],ah
   1400089a8:	jne    0x1400089aa
   1400089aa:	je     0x1400089ac
   1400089ac:	add    BYTE PTR gs:[rax],al
   1400089af:	add    BYTE PTR [rbp+0x0],cl
   1400089b2:	imul   eax,DWORD PTR [rax],0x720063
   1400089b8:	outs   dx,DWORD PTR ds:[rsi]
   1400089b9:	add    BYTE PTR [rbx+0x0],dh
   1400089bc:	outs   dx,DWORD PTR ds:[rsi]
   1400089bd:	add    BYTE PTR [rsi+0x0],ah
   1400089c0:	je     0x1400089c2
   1400089c2:	add    BYTE PTR cs:[rcx+0x0],cl
   1400089c6:	imul   eax,DWORD PTR [rax],0x450073
   1400089cc:	js     0x1400089ce
   1400089ce:	jo     0x1400089d0
   1400089d0:	jb     0x1400089d2
   1400089d2:	add    BYTE PTR gs:[rbx+0x0],dh
   1400089d6:	jae    0x1400089d8
   1400089d8:	add    BYTE PTR cs:[rbx+0x0],dl
   1400089dc:	jns    0x1400089de
   1400089de:	jae    0x1400089e0
   1400089e0:	push   rsp
   1400089e1:	add    BYTE PTR [rdx+0x0],dh
   1400089e4:	(bad)  
   1400089e5:	add    BYTE PTR [rcx+0x0],bh
   1400089e8:	add    BYTE PTR cs:[rbx+0x0],dl
   1400089ec:	jns    0x1400089ee
   1400089ee:	jae    0x1400089f0
   1400089f0:	push   rsp
   1400089f1:	add    BYTE PTR [rdx+0x0],dh
   1400089f4:	(bad)  
   1400089f5:	add    BYTE PTR [rcx+0x0],bh
   1400089f8:	rex.W add BYTE PTR [rbp+0x0],spl
   1400089fc:	ins    BYTE PTR es:[rdi],dx
   1400089fd:	add    BYTE PTR [rax+0x0],dh
   140008a00:	add    BYTE PTR gs:[rdx+0x0],dh
   140008a04:	add    BYTE PTR [rax],al
   140008a06:	add    BYTE PTR [rax],al
   140008a08:	imul   eax,DWORD PTR [rax],0x730069
   140008a0e:	add    BYTE PTR gs:[rax+0x0],bh
   140008a12:	jo     0x140008a14
   140008a14:	jb     0x140008a16
   140008a16:	add    BYTE PTR gs:[rbx+0x0],dh
   140008a1a:	jae    0x140008a1c
   140008a1c:	je     0x140008a1e
   140008a1e:	jb     0x140008a20
   140008a20:	(bad)  
   140008a21:	add    BYTE PTR [rcx+0x0],bh
   140008a24:	add    BYTE PTR cs:[rax+rax*1+0x6c],ah
   140008a29:	add    BYTE PTR [rax+rax*1+0x0],ch
   140008a2d:	add    BYTE PTR [rax],al
   140008a2f:	add    BYTE PTR [rbx+0x5c],ah
   140008a32:	imul   esi,DWORD PTR [rbx+0x38bc42ef],0xffffffa0
   140008a39:	jle    0x140008a46
   140008a3b:	xor    al,0xc9
   140008a3d:	(bad)  
   140008a3e:	(bad)  
   140008a3f:	rex.WX add BYTE PTR [rax],al
   140008a42:	add    BYTE PTR [rax],al
   140008a44:	push   rdx
   140008a45:	push   rbx
   140008a46:	rex.R push rbx
   140008a48:	gs pop rdx
   140008a4a:	xchg   ebp,eax
   140008a4b:	rex.RX xchg BYTE PTR [rbx-0x3b5db707],r13b
   140008a52:	test   eax,0x50a97fbe
   140008a57:	mov    ch,0x1
   140008a59:	add    BYTE PTR [rax],al
   140008a5b:	add    BYTE PTR [rcx+0x69],ch
   140008a5e:	jae    0x140008ac5
   140008a60:	js     0x140008ad2
   140008a62:	jb     0x140008ac9
   140008a64:	jae    0x140008ad9
   140008a66:	je     0x140008ada
   140008a68:	(bad)  
   140008a69:	jns    0x140008a99
   140008a6b:	jo     0x140008ad1
   140008a6d:	(bad)  
	...
   140008aae:	add    BYTE PTR [rax],al
   140008ab0:	add    DWORD PTR [rax],eax
	...
   140008aba:	add    BYTE PTR [rax],al
   140008abc:	lock push rcx
   140008abe:	add    DWORD PTR [rax],eax
   140008ac0:	fmul   DWORD PTR [rdx-0x75500000]
	...
   140008ade:	add    BYTE PTR [rax],al
   140008ae0:	add    al,BYTE PTR [rax]
   140008ae2:	add    BYTE PTR [rax],al
   140008ae4:	lock mov al,BYTE PTR [rax]
	...
   140008aef:	add    BYTE PTR [rax],cl
   140008af1:	mov    eax,DWORD PTR [rax]
   140008af3:	add    BYTE PTR [rax],dh
   140008af5:	mov    eax,DWORD PTR [rax]
	...
   140008b07:	add    al,dh
   140008b09:	push   rcx
   140008b0a:	add    DWORD PTR [rax],eax
   140008b0c:	add    DWORD PTR [rax],eax
   140008b0e:	add    BYTE PTR [rax],al
   140008b10:	add    BYTE PTR [rax],al
   140008b12:	add    BYTE PTR [rax],al
   140008b14:	(bad)  
   140008b15:	(bad)  
   140008b16:	(bad)  
   140008b17:	inc    DWORD PTR [rax]
   140008b19:	add    BYTE PTR [rax],al
   140008b1b:	add    BYTE PTR [rax+0x0],al
   140008b1e:	add    BYTE PTR [rax],al
   140008b20:	fmul   DWORD PTR [rdx+0x0]
	...
   140008b2e:	add    BYTE PTR [rax],al
   140008b30:	sbb    BYTE PTR [rdx+0x1],dl
	...
   140008b3b:	add    bh,bh
   140008b3d:	(bad)  
   140008b3e:	(bad)  
   140008b3f:	inc    DWORD PTR [rax]
   140008b41:	add    BYTE PTR [rax],al
   140008b43:	add    BYTE PTR [rax+0x0],al
   140008b46:	add    BYTE PTR [rax],al
   140008b48:	pop    rax
   140008b49:	mov    eax,DWORD PTR [rax]
	...
   140008b5f:	add    BYTE PTR [rcx],al
   140008b61:	add    BYTE PTR [rax],al
   140008b63:	add    BYTE PTR [rax-0x75],dh
	...
   140008b6e:	add    BYTE PTR [rax],al
   140008b70:	xor    BYTE PTR [rbx+0x0],cl
	...
   140008b7e:	add    BYTE PTR [rax],al
   140008b80:	add    DWORD PTR [rax],eax
	...
   140008b8a:	add    BYTE PTR [rax],al
   140008b8c:	sbb    BYTE PTR [rdx+0x1],dl
   140008b8f:	add    BYTE PTR [rax-0x75],bl
   140008b92:	add    BYTE PTR [rax],al
   140008b94:	or     BYTE PTR [rbx+0x0],0x0
	...
   140008ba7:	add    BYTE PTR [rcx],al
	...
   140008bb1:	add    BYTE PTR [rax],al
   140008bb3:	add    BYTE PTR [rax+0x5e],al
   140008bb6:	add    DWORD PTR [rax],eax
   140008bb8:	ror    BYTE PTR [rbx-0x74580000],1
	...
   140008bd6:	add    BYTE PTR [rax],al
   140008bd8:	add    DWORD PTR [rax],eax
   140008bda:	add    BYTE PTR [rax],al
   140008bdc:	call   0x140008c6c
   140008be1:	add    BYTE PTR [rax],al
   140008be3:	add    BYTE PTR [rax],al
   140008be5:	add    BYTE PTR [rax],al
   140008be7:	add    al,bh
   140008be9:	mov    eax,DWORD PTR [rax]
	...
   140008bf7:	add    BYTE PTR [rax+0x5e],al
   140008bfa:	add    DWORD PTR [rax],eax
	...
   140008c04:	(bad)  
   140008c05:	(bad)  
   140008c06:	(bad)  
   140008c07:	inc    DWORD PTR [rax]
   140008c09:	add    BYTE PTR [rax],al
   140008c0b:	add    BYTE PTR [rax+0x0],al
   140008c0e:	add    BYTE PTR [rax],al
   140008c10:	ror    BYTE PTR [rbx+0x0],1
	...
   140008c46:	add    BYTE PTR [rax],al
   140008c48:	mov    QWORD PTR [rsp+0x8],rbx
   140008c4d:	mov    QWORD PTR [rsp+0x10],rbp
   140008c52:	mov    QWORD PTR [rsp+0x18],rsi
   140008c57:	push   rdi
   140008c58:	sub    rsp,0x20
   140008c5c:	mov    rax,QWORD PTR [rip+0xed0d]        # 0x140017970
   140008c63:	xor    ebx,ebx
   140008c65:	mov    rdi,r8
   140008c68:	mov    rsi,rdx
   140008c6b:	mov    rbp,rcx
   140008c6e:	test   rax,rax
   140008c71:	jne    0x140008ccf
   140008c73:	lea    rcx,[rip+0xfffffffffffffc76]        # 0x1400088f0
   140008c7a:	call   QWORD PTR [rip+0xffffffffffff83e8]        # 0x140001068
   140008c80:	mov    rcx,rax
   140008c83:	test   rax,rax
   140008c86:	jne    0x140008c9e
   140008c88:	call   QWORD PTR [rip+0xffffffffffff83a2]        # 0x140001030
   140008c8e:	movzx  ecx,ax
   140008c91:	or     ecx,0x80070000
   140008c97:	test   eax,eax
   140008c99:	cmovle ecx,eax
   140008c9c:	jmp    0x140008cd4
   140008c9e:	xor    eax,eax
   140008ca0:	lock cmpxchg QWORD PTR [rip+0xecc7],rcx        # 0x140017970
   140008ca9:	jne    0x140008cc2
   140008cab:	mov    rax,QWORD PTR [rip+0xecbe]        # 0x140017970
   140008cb2:	mov    BYTE PTR [rip+0xe88f],0x1        # 0x140017548
   140008cb9:	mov    QWORD PTR [rip+0xe880],rax        # 0x140017540
   140008cc0:	jmp    0x140008ccf
   140008cc2:	call   QWORD PTR [rip+0xffffffffffff8410]        # 0x1400010d8
   140008cc8:	mov    rax,QWORD PTR [rip+0xeca1]        # 0x140017970
   140008ccf:	mov    rbx,rax
   140008cd2:	xor    ecx,ecx
   140008cd4:	test   ecx,ecx
   140008cd6:	jns    0x140008cdc
   140008cd8:	mov    eax,ecx
   140008cda:	jmp    0x140008d16
   140008cdc:	lea    rdx,[rip+0xfffffffffffffc25]        # 0x140008908
   140008ce3:	mov    rcx,rbx
   140008ce6:	call   QWORD PTR [rip+0xffffffffffff834c]        # 0x140001038
   140008cec:	test   rax,rax
   140008cef:	jne    0x140008d0b
   140008cf1:	call   QWORD PTR [rip+0xffffffffffff8339]        # 0x140001030
   140008cf7:	mov    r11d,eax
   140008cfa:	movzx  eax,ax
   140008cfd:	or     eax,0x80070000
   140008d02:	test   r11d,r11d
   140008d05:	cmovle eax,r11d
   140008d09:	jmp    0x140008d16
   140008d0b:	mov    r8,rdi
   140008d0e:	mov    rdx,rsi
   140008d11:	mov    rcx,rbp
   140008d14:	call   rax
   140008d16:	mov    rbx,QWORD PTR [rsp+0x30]
   140008d1b:	mov    rbp,QWORD PTR [rsp+0x38]
   140008d20:	mov    rsi,QWORD PTR [rsp+0x40]
   140008d25:	add    rsp,0x20
   140008d29:	pop    rdi
   140008d2a:	ret    
   140008d2b:	int3   
   140008d2c:	int3   
   140008d2d:	int3   
   140008d2e:	int3   
   140008d2f:	int3   
   140008d30:	int3   
   140008d31:	int3   
   140008d32:	int3   
   140008d33:	int3   
   140008d34:	mov    QWORD PTR [rsp+0x10],rbx
   140008d39:	push   rdi
   140008d3a:	sub    rsp,0x20
   140008d3e:	mov    eax,DWORD PTR [rip+0xd5e4]        # 0x140016328
   140008d44:	xor    ebx,ebx
   140008d46:	cmp    eax,0xffffffff
   140008d49:	jne    0x140008dc0
   140008d4b:	cmp    QWORD PTR [rip+0xec26],rbx        # 0x140017978
   140008d52:	mov    edi,ebx
   140008d54:	jne    0x140008da8
   140008d56:	lea    r8,[rsp+0x30]
   140008d5b:	lea    rdx,[rip+0xfffffffffffffb3e]        # 0x1400088a0
   140008d62:	lea    rcx,[rip+0xfffffffffffffb47]        # 0x1400088b0
   140008d69:	mov    QWORD PTR [rsp+0x30],rbx
   140008d6e:	call   0x140008c48
   140008d73:	mov    edi,eax
   140008d75:	test   eax,eax
   140008d77:	js     0x140008da8
   140008d79:	mov    rcx,QWORD PTR [rsp+0x30]
   140008d7e:	xor    eax,eax
   140008d80:	lock cmpxchg QWORD PTR [rip+0xebef],rcx        # 0x140017978
   140008d89:	jne    0x140008da2
   140008d8b:	mov    rax,QWORD PTR [rip+0xebe6]        # 0x140017978
   140008d92:	mov    BYTE PTR [rip+0xe79f],0x1        # 0x140017538
   140008d99:	mov    QWORD PTR [rip+0xe790],rax        # 0x140017530
   140008da0:	jmp    0x140008da8
   140008da2:	mov    rdx,QWORD PTR [rcx]
   140008da5:	call   QWORD PTR [rdx+0x10]
   140008da8:	test   edi,edi
   140008daa:	mov    ecx,ebx
   140008dac:	setns  cl
   140008daf:	or     eax,0xffffffff
   140008db2:	lock cmpxchg DWORD PTR [rip+0xd56e],ecx        # 0x140016328
   140008dba:	mov    eax,DWORD PTR [rip+0xd568]        # 0x140016328
   140008dc0:	mov    rbx,QWORD PTR [rsp+0x38]
   140008dc5:	test   eax,eax
   140008dc7:	setne  al
   140008dca:	add    rsp,0x20
   140008dce:	pop    rdi
   140008dcf:	ret    
   140008dd0:	int3   
   140008dd1:	int3   
   140008dd2:	int3   
   140008dd3:	int3   
   140008dd4:	int3   
   140008dd5:	int3   
   140008dd6:	int3   
   140008dd7:	int3   
   140008dd8:	rex push rbp
   140008dda:	push   rbx
   140008ddb:	push   rsi
   140008ddc:	push   rdi
   140008ddd:	push   r12
   140008ddf:	push   r13
   140008de1:	push   r14
   140008de3:	push   r15
   140008de5:	lea    rbp,[rsp-0x5d8]
   140008ded:	sub    rsp,0x6d8
   140008df4:	mov    rax,QWORD PTR [rip+0xc275]        # 0x140015070
   140008dfb:	xor    rax,rsp
   140008dfe:	mov    QWORD PTR [rbp+0x5c0],rax
   140008e05:	mov    rax,QWORD PTR [rip+0xeb74]        # 0x140017980
   140008e0c:	xor    r15d,r15d
   140008e0f:	mov    r14,r9
   140008e12:	mov    r12,r8
   140008e15:	mov    rsi,rdx
   140008e18:	mov    r13,rcx
   140008e1b:	mov    edi,r15d
   140008e1e:	mov    ebx,r15d
   140008e21:	test   rax,rax
   140008e24:	jne    0x140008e7f
   140008e26:	lea    r8,[rsp+0x70]
   140008e2b:	lea    rdx,[rip+0xfffffffffffffa8e]        # 0x1400088c0
   140008e32:	lea    rcx,[rip+0xfffffffffffffa97]        # 0x1400088d0
   140008e39:	mov    QWORD PTR [rsp+0x70],r15
   140008e3e:	call   0x140008c48
   140008e43:	mov    ebx,eax
   140008e45:	test   eax,eax
   140008e47:	js     0x140008e82
   140008e49:	mov    rcx,QWORD PTR [rsp+0x70]
   140008e4e:	xor    eax,eax
   140008e50:	lock cmpxchg QWORD PTR [rip+0xeb27],rcx        # 0x140017980
   140008e59:	jne    0x140008e72
   140008e5b:	mov    rax,QWORD PTR [rip+0xeb1e]        # 0x140017980
   140008e62:	mov    BYTE PTR [rip+0xe6bf],0x1        # 0x140017528
   140008e69:	mov    QWORD PTR [rip+0xe6b0],rax        # 0x140017520
   140008e70:	jmp    0x140008e7f
   140008e72:	mov    rax,QWORD PTR [rcx]
   140008e75:	call   QWORD PTR [rax+0x10]
   140008e78:	mov    rax,QWORD PTR [rip+0xeb01]        # 0x140017980
   140008e7f:	mov    rdi,rax
   140008e82:	test   ebx,ebx
   140008e84:	js     0x140009156
   140008e8a:	mov    QWORD PTR [rsp+0x50],r13
   140008e8f:	lea    rcx,[rip+0xfffffffffffffa4a]        # 0x1400088e0
   140008e96:	xor    r8d,r8d
   140008e99:	mov    QWORD PTR [rsp+0x48],rcx
   140008e9e:	lea    rcx,[rsp+0x60]
   140008ea3:	mov    DWORD PTR [rsp+0x60],r15d
   140008ea8:	mov    rax,QWORD PTR [rdi]
   140008eab:	mov    QWORD PTR [rsp+0x40],rcx
   140008eb0:	mov    QWORD PTR [rsp+0x38],r14
   140008eb5:	mov    QWORD PTR [rsp+0x30],r12
   140008eba:	lea    edx,[r8+0x40]
   140008ebe:	mov    r9,rsi
   140008ec1:	mov    rcx,rdi
   140008ec4:	mov    QWORD PTR [rsp+0x28],r15
   140008ec9:	mov    QWORD PTR [rsp+0x20],r15
   140008ece:	call   QWORD PTR [rax+0x18]
   140008ed1:	mov    ebx,eax
   140008ed3:	test   eax,eax
   140008ed5:	je     0x14000913c
   140008edb:	test   rsi,rsi
   140008ede:	jne    0x140008f59
   140008ee0:	mov    edx,0x100
   140008ee5:	lea    r8,[rip+0xfffffffffffffa34]        # 0x140008920
   140008eec:	lea    rcx,[rbp-0x60]
   140008ef0:	mov    DWORD PTR [rsp+0x68],edx
   140008ef4:	mov    WORD PTR [rbp-0x60],r15w
   140008ef9:	call   0x140009ee8
   140008efe:	test   eax,eax
   140008f00:	je     0x140008f0c
   140008f02:	mov    eax,0x80004005
   140008f07:	jmp    0x140009158
   140008f0c:	mov    rax,QWORD PTR [rdi]
   140008f0f:	mov    QWORD PTR [rsp+0x50],r13
   140008f14:	lea    rcx,[rip+0xfffffffffffff9c5]        # 0x1400088e0
   140008f1b:	mov    QWORD PTR [rsp+0x48],rcx
   140008f20:	lea    rcx,[rsp+0x60]
   140008f25:	xor    r9d,r9d
   140008f28:	mov    QWORD PTR [rsp+0x40],rcx
   140008f2d:	mov    QWORD PTR [rsp+0x38],r14
   140008f32:	lea    rcx,[rsp+0x68]
   140008f37:	mov    QWORD PTR [rsp+0x30],r12
   140008f3c:	mov    QWORD PTR [rsp+0x28],rcx
   140008f41:	lea    rcx,[rbp-0x60]
   140008f45:	mov    QWORD PTR [rsp+0x20],rcx
   140008f4a:	lea    edx,[r9+0x48]
   140008f4e:	xor    r8d,r8d
   140008f51:	mov    rcx,rdi
   140008f54:	call   QWORD PTR [rax+0x18]
   140008f57:	mov    ebx,eax
   140008f59:	test   ebx,ebx
   140008f5b:	je     0x14000913c
   140008f61:	test   rsi,rsi
   140008f64:	jne    0x140009156
   140008f6a:	mov    rax,QWORD PTR [rip+0xe9ff]        # 0x140017970
   140008f71:	mov    rbx,r15
   140008f74:	mov    edi,0x80070000
   140008f79:	test   rax,rax
   140008f7c:	jne    0x140008fd6
   140008f7e:	lea    rcx,[rip+0xfffffffffffff96b]        # 0x1400088f0
   140008f85:	call   QWORD PTR [rip+0xffffffffffff80dd]        # 0x140001068
   140008f8b:	mov    rcx,rax
   140008f8e:	test   rax,rax
   140008f91:	jne    0x140008fa5
   140008f93:	call   QWORD PTR [rip+0xffffffffffff8097]        # 0x140001030
   140008f99:	movzx  ecx,ax
   140008f9c:	or     ecx,edi
   140008f9e:	test   eax,eax
   140008fa0:	cmovle ecx,eax
   140008fa3:	jmp    0x140008fdc
   140008fa5:	xor    eax,eax
   140008fa7:	lock cmpxchg QWORD PTR [rip+0xe9c0],rcx        # 0x140017970
   140008fb0:	jne    0x140008fc9
   140008fb2:	mov    rax,QWORD PTR [rip+0xe9b7]        # 0x140017970
   140008fb9:	mov    BYTE PTR [rip+0xe588],0x1        # 0x140017548
   140008fc0:	mov    QWORD PTR [rip+0xe579],rax        # 0x140017540
   140008fc7:	jmp    0x140008fd6
   140008fc9:	call   QWORD PTR [rip+0xffffffffffff8109]        # 0x1400010d8
   140008fcf:	mov    rax,QWORD PTR [rip+0xe99a]        # 0x140017970
   140008fd6:	mov    rbx,rax
   140008fd9:	mov    ecx,r15d
   140008fdc:	test   ecx,ecx
   140008fde:	jns    0x140008fe7
   140008fe0:	mov    eax,ecx
   140008fe2:	jmp    0x140009158
   140008fe7:	lea    rdx,[rip+0xfffffffffffff942]        # 0x140008930
   140008fee:	mov    rcx,rbx
   140008ff1:	call   QWORD PTR [rip+0xffffffffffff8041]        # 0x140001038
   140008ff7:	test   rax,rax
   140008ffa:	jne    0x140009012
   140008ffc:	call   QWORD PTR [rip+0xffffffffffff802e]        # 0x140001030
   140009002:	movzx  ecx,ax
   140009005:	or     ecx,edi
   140009007:	test   eax,eax
   140009009:	cmovle ecx,eax
   14000900c:	mov    rax,QWORD PTR [rbp-0x70]
   140009010:	jmp    0x140009015
   140009012:	mov    ecx,r15d
   140009015:	test   ecx,ecx
   140009017:	js     0x140008fe0
   140009019:	mov    edx,0x104
   14000901e:	lea    rcx,[rsp+0x64]
   140009023:	xor    r9d,r9d
   140009026:	mov    QWORD PTR [rsp+0x50],rcx
   14000902b:	mov    DWORD PTR [rsp+0x48],edx
   14000902f:	lea    rcx,[rbp+0x1a0]
   140009036:	mov    QWORD PTR [rsp+0x40],rcx
   14000903b:	lea    rcx,[rsp+0x6c]
   140009040:	mov    DWORD PTR [rsp+0x6c],edx
   140009044:	mov    QWORD PTR [rsp+0x38],rcx
   140009049:	mov    DWORD PTR [rsp+0x30],edx
   14000904d:	lea    rcx,[rbp+0x3b0]
   140009054:	mov    QWORD PTR [rsp+0x28],rcx
   140009059:	mov    DWORD PTR [rsp+0x64],edx
   14000905d:	xor    r8d,r8d
   140009060:	xor    ecx,ecx
   140009062:	xor    edx,edx
   140009064:	mov    DWORD PTR [rsp+0x20],0x41
   14000906c:	call   rax
   14000906e:	test   eax,eax
   140009070:	js     0x140009158
   140009076:	je     0x140009082
   140009078:	mov    eax,0x80131700
   14000907d:	jmp    0x140009158
   140009082:	mov    rax,QWORD PTR [rip+0xe8ef]        # 0x140017978
   140009089:	mov    rdi,r15
   14000908c:	mov    ebx,r15d
   14000908f:	test   rax,rax
   140009092:	jne    0x1400090ed
   140009094:	lea    r8,[rsp+0x78]
   140009099:	lea    rdx,[rip+0xfffffffffffff800]        # 0x1400088a0
   1400090a0:	lea    rcx,[rip+0xfffffffffffff809]        # 0x1400088b0
   1400090a7:	mov    QWORD PTR [rsp+0x78],r15
   1400090ac:	call   0x140008c48
   1400090b1:	mov    ebx,eax
   1400090b3:	test   eax,eax
   1400090b5:	js     0x1400090f0
   1400090b7:	mov    rcx,QWORD PTR [rsp+0x78]
   1400090bc:	xor    eax,eax
   1400090be:	lock cmpxchg QWORD PTR [rip+0xe8b1],rcx        # 0x140017978
   1400090c7:	jne    0x1400090e0
   1400090c9:	mov    rax,QWORD PTR [rip+0xe8a8]        # 0x140017978
   1400090d0:	mov    BYTE PTR [rip+0xe461],0x1        # 0x140017538
   1400090d7:	mov    QWORD PTR [rip+0xe452],rax        # 0x140017530
   1400090de:	jmp    0x1400090ed
   1400090e0:	mov    rax,QWORD PTR [rcx]
   1400090e3:	call   QWORD PTR [rax+0x10]
   1400090e6:	mov    rax,QWORD PTR [rip+0xe88b]        # 0x140017978
   1400090ed:	mov    rdi,rax
   1400090f0:	test   ebx,ebx
   1400090f2:	js     0x140009156
   1400090f4:	mov    rax,QWORD PTR [rdi]
   1400090f7:	lea    r8,[rip+0xfffffffffffff7e2]        # 0x1400088e0
   1400090fe:	lea    rdx,[rbp+0x1a0]
   140009105:	mov    r9,r13
   140009108:	mov    rcx,rdi
   14000910b:	call   QWORD PTR [rax+0x18]
   14000910e:	mov    ebx,eax
   140009110:	test   eax,eax
   140009112:	jne    0x140009078
   140009118:	test   r12,r12
   14000911b:	je     0x14000913c
   14000911d:	mov    r9d,DWORD PTR [rsp+0x64]
   140009122:	mov    edx,DWORD PTR [r14]
   140009125:	lea    r8,[rbp+0x1a0]
   14000912c:	mov    rcx,r12
   14000912f:	call   0x140009df8
   140009134:	mov    r11d,DWORD PTR [rsp+0x64]
   140009139:	mov    DWORD PTR [r14],r11d
   14000913c:	mov    eax,DWORD PTR [rsp+0x60]
   140009140:	and    al,0x3
   140009142:	cmp    al,0x1
   140009144:	jne    0x140009156
   140009146:	mov    rcx,QWORD PTR [r13+0x0]
   14000914a:	mov    rax,QWORD PTR [rcx]
   14000914d:	call   QWORD PTR [rax+0x68]
   140009150:	mov    ebx,eax
   140009152:	test   eax,eax
   140009154:	js     0x140009158
   140009156:	mov    eax,ebx
   140009158:	mov    rcx,QWORD PTR [rbp+0x5c0]
   14000915f:	xor    rcx,rsp
   140009162:	call   0x140009dd0
   140009167:	add    rsp,0x6d8
   14000916e:	pop    r15
   140009170:	pop    r14
   140009172:	pop    r13
   140009174:	pop    r12
   140009176:	pop    rdi
   140009177:	pop    rsi
   140009178:	pop    rbx
   140009179:	pop    rbp
   14000917a:	ret    
   14000917b:	int3   
   14000917c:	int3   
   14000917d:	int3   
   14000917e:	int3   
   14000917f:	int3   
   140009180:	int3   
   140009181:	int3   
   140009182:	int3   
   140009183:	int3   
   140009184:	mov    rax,rsp
   140009187:	mov    QWORD PTR [rax+0x8],rbx
   14000918b:	mov    QWORD PTR [rax+0x10],rbp
   14000918f:	mov    QWORD PTR [rax+0x18],rsi
   140009193:	mov    QWORD PTR [rax+0x20],rdi
   140009197:	push   r12
   140009199:	push   r13
   14000919b:	push   r14
   14000919d:	sub    rsp,0x20
   1400091a1:	xor    r13d,r13d
   1400091a4:	mov    r12,rdx
   1400091a7:	mov    rbp,rcx
   1400091aa:	cmp    DWORD PTR [rip+0xe7d7],r13d        # 0x140017988
   1400091b1:	mov    esi,r13d
   1400091b4:	mov    edi,r13d
   1400091b7:	lea    r14,[rip+0xe392]        # 0x140017550
   1400091be:	jne    0x140009251
   1400091c4:	lea    ebx,[r13+0x1]
   1400091c8:	mov    eax,ebx
   1400091ca:	xchg   DWORD PTR [rip+0xe348],eax        # 0x140017518
   1400091d0:	cmp    eax,ebx
   1400091d2:	jne    0x1400091e9
   1400091d4:	call   QWORD PTR [rip+0xffffffffffff7e6e]        # 0x140001048
   1400091da:	mov    r11d,ebx
   1400091dd:	xchg   DWORD PTR [rip+0xe334],r11d        # 0x140017518
   1400091e4:	cmp    r11d,ebx
   1400091e7:	je     0x1400091d4
   1400091e9:	cmp    DWORD PTR [rip+0xe798],r13d        # 0x140017988
   1400091f0:	jne    0x140009248
   1400091f2:	lea    r9,[rip+0xe35f]        # 0x140017558
   1400091f9:	lea    r8,[rip+0xe35c]        # 0x14001755c
   140009200:	mov    rdx,r12
   140009203:	mov    rcx,r14
   140009206:	mov    QWORD PTR [rip+0xe343],r13        # 0x140017550
   14000920d:	mov    DWORD PTR [rip+0xe341],0x200        # 0x140017558
   140009217:	mov    WORD PTR [rip+0xe33d],r13w        # 0x14001755c
   14000921f:	call   0x140008dd8
   140009224:	mov    edi,eax
   140009226:	test   eax,eax
   140009228:	jns    0x140009235
   14000922a:	mov    ecx,r13d
   14000922d:	xchg   DWORD PTR [rip+0xe2e5],ecx        # 0x140017518
   140009233:	jmp    0x140009254
   140009235:	mov    QWORD PTR [rip+0xe724],r14        # 0x140017960
   14000923c:	mov    BYTE PTR [rip+0xe726],bl        # 0x140017968
   140009242:	xchg   DWORD PTR [rip+0xe740],ebx        # 0x140017988
   140009248:	mov    eax,r13d
   14000924b:	xchg   DWORD PTR [rip+0xe2c7],eax        # 0x140017518
   140009251:	mov    rsi,r14
   140009254:	test   edi,edi
   140009256:	js     0x14000925f
   140009258:	mov    rax,QWORD PTR [rsi]
   14000925b:	mov    QWORD PTR [rbp+0x0],rax
   14000925f:	mov    rbx,QWORD PTR [rsp+0x40]
   140009264:	mov    rbp,QWORD PTR [rsp+0x48]
   140009269:	mov    rsi,QWORD PTR [rsp+0x50]
   14000926e:	mov    eax,edi
   140009270:	mov    rdi,QWORD PTR [rsp+0x58]
   140009275:	add    rsp,0x20
   140009279:	pop    r14
   14000927b:	pop    r13
   14000927d:	pop    r12
   14000927f:	ret    
   140009280:	int3   
   140009281:	int3   
   140009282:	int3   
   140009283:	int3   
   140009284:	int3   
   140009285:	int3   
   140009286:	int3   
   140009287:	int3   
   140009288:	mov    QWORD PTR [rsp+0x8],rbx
   14000928d:	push   rdi
   14000928e:	sub    rsp,0x20
   140009292:	mov    rax,QWORD PTR [rip+0xe6ff]        # 0x140017998
   140009299:	mov    rbx,rdx
   14000929c:	mov    edi,ecx
   14000929e:	test   rax,rax
   1400092a1:	jne    0x1400092bf
   1400092a3:	lea    edx,[rax+0x8]
   1400092a6:	lea    rcx,[rip+0xfffffffffffff69b]        # 0x140008948
   1400092ad:	mov    r8d,0x400
   1400092b3:	call   0x14000f960
   1400092b8:	mov    QWORD PTR [rip+0xe6d9],rax        # 0x140017998
   1400092bf:	mov    r9d,0x104
   1400092c5:	mov    r8,rbx
   1400092c8:	mov    edx,edi
   1400092ca:	mov    rcx,rax
   1400092cd:	call   QWORD PTR [rip+0xffffffffffff7ffd]        # 0x1400012d0
   1400092d3:	mov    rbx,QWORD PTR [rsp+0x30]
   1400092d8:	neg    eax
   1400092da:	sbb    eax,eax
   1400092dc:	not    eax
   1400092de:	and    eax,0x80004005
   1400092e3:	add    rsp,0x20
   1400092e7:	pop    rdi
   1400092e8:	ret    
   1400092e9:	int3   
   1400092ea:	int3   
   1400092eb:	int3   
   1400092ec:	int3   
   1400092ed:	int3   
   1400092ee:	int3   
   1400092ef:	int3   
   1400092f0:	rex push rbp
   1400092f2:	push   rbx
   1400092f3:	push   rsi
   1400092f4:	push   rdi
   1400092f5:	mov    rbp,rsp
   1400092f8:	sub    rsp,0x28
   1400092fc:	mov    rax,QWORD PTR [rcx+0x8]
   140009300:	xor    esi,esi
   140009302:	mov    rdi,rcx
   140009305:	mov    QWORD PTR [rbp+0x30],rsi
   140009309:	mov    QWORD PTR [rbp+0x38],rsi
   14000930d:	mov    QWORD PTR [rbp+0x28],rsi
   140009311:	mov    WORD PTR [rax],si
   140009314:	mov    DWORD PTR [rcx+0x10],esi
   140009317:	lea    rdx,[rbp+0x38]
   14000931b:	xor    ecx,ecx
   14000931d:	call   QWORD PTR [rip+0xffffffffffff7f8d]        # 0x1400012b0
   140009323:	mov    ebx,eax
   140009325:	test   eax,eax
   140009327:	js     0x1400093e9
   14000932d:	cmp    eax,0x1
   140009330:	jne    0x140009339
   140009332:	mov    ebx,esi
   140009334:	jmp    0x1400093e9
   140009339:	mov    rcx,QWORD PTR [rbp+0x38]
   14000933d:	lea    r8,[rbp+0x30]
   140009341:	lea    rdx,[rip+0xfffffffffffff6e8]        # 0x140008a30
   140009348:	mov    rax,QWORD PTR [rcx]
   14000934b:	call   QWORD PTR [rax]
   14000934d:	mov    rcx,QWORD PTR [rbp+0x30]
   140009351:	lea    rdx,[rbp+0x28]
   140009355:	test   rcx,rcx
   140009358:	jne    0x140009575
   14000935e:	mov    rcx,QWORD PTR [rbp+0x38]
   140009362:	mov    rax,QWORD PTR [rcx]
   140009365:	call   QWORD PTR [rax+0x20]
   140009368:	mov    ebx,eax
   14000936a:	test   eax,eax
   14000936c:	js     0x1400093e9
   14000936e:	mov    rdx,QWORD PTR [rbp+0x28]
   140009372:	test   rdx,rdx
   140009375:	je     0x1400093ad
   140009377:	cmp    WORD PTR [rdx],si
   14000937a:	je     0x1400093ad
   14000937c:	mov    rcx,rdi
   14000937f:	call   0x140009a5c
   140009384:	mov    ebx,eax
   140009386:	test   eax,eax
   140009388:	js     0x1400093e9
   14000938a:	lea    rdx,[rip+0xfffffffffffff5df]        # 0x140008970
   140009391:	mov    rcx,rdi
   140009394:	call   0x140009a5c
   140009399:	mov    ebx,eax
   14000939b:	test   eax,eax
   14000939d:	js     0x1400093e9
   14000939f:	mov    rcx,QWORD PTR [rbp+0x28]
   1400093a3:	call   QWORD PTR [rip+0xffffffffffff7f0f]        # 0x1400012b8
   1400093a9:	mov    QWORD PTR [rbp+0x28],rsi
   1400093ad:	mov    rcx,QWORD PTR [rbp+0x38]
   1400093b1:	lea    rdx,[rbp+0x28]
   1400093b5:	mov    rax,QWORD PTR [rcx]
   1400093b8:	call   QWORD PTR [rax+0x28]
   1400093bb:	mov    ebx,eax
   1400093bd:	test   eax,eax
   1400093bf:	js     0x1400093e9
   1400093c1:	mov    rcx,QWORD PTR [rbp+0x28]
   1400093c5:	test   rcx,rcx
   1400093c8:	je     0x1400093df
   1400093ca:	mov    rdx,rcx
   1400093cd:	mov    rcx,rdi
   1400093d0:	call   0x140009a5c
   1400093d5:	mov    ebx,eax
   1400093d7:	test   eax,eax
   1400093d9:	js     0x1400093e9
   1400093db:	mov    rcx,QWORD PTR [rbp+0x28]
   1400093df:	call   QWORD PTR [rip+0xffffffffffff7ed3]        # 0x1400012b8
   1400093e5:	mov    QWORD PTR [rbp+0x28],rsi
   1400093e9:	mov    rcx,QWORD PTR [rbp+0x28]
   1400093ed:	test   rcx,rcx
   1400093f0:	je     0x1400093fc
   1400093f2:	call   QWORD PTR [rip+0xffffffffffff7ec0]        # 0x1400012b8
   1400093f8:	mov    QWORD PTR [rbp+0x28],rsi
   1400093fc:	mov    rcx,QWORD PTR [rbp+0x30]
   140009400:	test   rcx,rcx
   140009403:	je     0x14000940f
   140009405:	mov    rax,QWORD PTR [rcx]
   140009408:	call   QWORD PTR [rax+0x10]
   14000940b:	mov    QWORD PTR [rbp+0x30],rsi
   14000940f:	mov    rcx,QWORD PTR [rbp+0x38]
   140009413:	test   rcx,rcx
   140009416:	je     0x14000941e
   140009418:	mov    rax,QWORD PTR [rcx]
   14000941b:	call   QWORD PTR [rax+0x10]
   14000941e:	mov    eax,ebx
   140009420:	add    rsp,0x28
   140009424:	pop    rdi
   140009425:	pop    rsi
   140009426:	pop    rbx
   140009427:	pop    rbp
   140009428:	ret    
   140009429:	mov    rcx,QWORD PTR [rbp+0x28]
   14000942d:	test   rcx,rcx
   140009430:	je     0x140009494
   140009432:	cmp    WORD PTR [rcx],si
   140009435:	je     0x140009494
   140009437:	call   QWORD PTR [rip+0xffffffffffff7e6b]        # 0x1400012a8
   14000943d:	mov    r8d,eax
   140009440:	test   eax,eax
   140009442:	je     0x140009460
   140009444:	mov    r9d,DWORD PTR [rdi+0x10]
   140009448:	mov    rdx,QWORD PTR [rbp+0x28]
   14000944c:	add    r8,r8
   14000944f:	add    r9d,r9d
   140009452:	mov    rcx,rdi
   140009455:	call   0x140009acc
   14000945a:	mov    ebx,eax
   14000945c:	test   eax,eax
   14000945e:	js     0x1400093e9
   140009460:	mov    r9d,DWORD PTR [rdi+0x10]
   140009464:	lea    rdx,[rip+0xfffffffffffff505]        # 0x140008970
   14000946b:	mov    r8d,0x4
   140009471:	add    r9d,r9d
   140009474:	mov    rcx,rdi
   140009477:	call   0x140009acc
   14000947c:	mov    ebx,eax
   14000947e:	test   eax,eax
   140009480:	js     0x1400093e9
   140009486:	mov    rcx,QWORD PTR [rbp+0x28]
   14000948a:	call   QWORD PTR [rip+0xffffffffffff7e28]        # 0x1400012b8
   140009490:	mov    QWORD PTR [rbp+0x28],rsi
   140009494:	mov    rcx,QWORD PTR [rbp+0x30]
   140009498:	lea    rdx,[rbp+0x28]
   14000949c:	mov    rax,QWORD PTR [rcx]
   14000949f:	call   QWORD PTR [rax+0x58]
   1400094a2:	mov    ebx,eax
   1400094a4:	test   eax,eax
   1400094a6:	js     0x1400093e9
   1400094ac:	mov    rcx,QWORD PTR [rbp+0x28]
   1400094b0:	call   QWORD PTR [rip+0xffffffffffff7df2]        # 0x1400012a8
   1400094b6:	mov    r8d,eax
   1400094b9:	test   eax,eax
   1400094bb:	je     0x1400094dd
   1400094bd:	mov    r9d,DWORD PTR [rdi+0x10]
   1400094c1:	mov    rdx,QWORD PTR [rbp+0x28]
   1400094c5:	add    r8,r8
   1400094c8:	add    r9d,r9d
   1400094cb:	mov    rcx,rdi
   1400094ce:	call   0x140009acc
   1400094d3:	mov    ebx,eax
   1400094d5:	test   eax,eax
   1400094d7:	js     0x1400093e9
   1400094dd:	mov    rcx,QWORD PTR [rbp+0x28]
   1400094e1:	call   QWORD PTR [rip+0xffffffffffff7dd1]        # 0x1400012b8
   1400094e7:	mov    rcx,QWORD PTR [rbp+0x30]
   1400094eb:	mov    QWORD PTR [rbp+0x28],rsi
   1400094ef:	mov    QWORD PTR [rbp+0x40],rsi
   1400094f3:	mov    rax,QWORD PTR [rcx]
   1400094f6:	lea    rdx,[rbp+0x40]
   1400094fa:	call   QWORD PTR [rax+0x98]
   140009500:	mov    rcx,QWORD PTR [rbp+0x30]
   140009504:	mov    ebx,eax
   140009506:	mov    rax,QWORD PTR [rcx]
   140009509:	call   QWORD PTR [rax+0x10]
   14000950c:	mov    QWORD PTR [rbp+0x30],rsi
   140009510:	test   ebx,ebx
   140009512:	js     0x1400093e9
   140009518:	mov    rax,QWORD PTR [rbp+0x40]
   14000951c:	mov    QWORD PTR [rbp+0x30],rax
   140009520:	test   rax,rax
   140009523:	je     0x1400093e9
   140009529:	mov    r9d,DWORD PTR [rdi+0x10]
   14000952d:	mov    rax,QWORD PTR [rdi+0x8]
   140009531:	lea    ecx,[r9-0x1]
   140009535:	add    r9d,r9d
   140009538:	cmp    WORD PTR [rax+rcx*2],0x2e
   14000953d:	mov    rcx,rdi
   140009540:	je     0x140009551
   140009542:	mov    r8d,0x4
   140009548:	lea    rdx,[rip+0xfffffffffffff429]        # 0x140008978
   14000954f:	jmp    0x14000955e
   140009551:	mov    r8d,0x2
   140009557:	lea    rdx,[rip+0xfffffffffffff422]        # 0x140008980
   14000955e:	call   0x140009acc
   140009563:	mov    ebx,eax
   140009565:	test   eax,eax
   140009567:	js     0x1400093e9
   14000956d:	mov    rcx,QWORD PTR [rbp+0x30]
   140009571:	lea    rdx,[rbp+0x28]
   140009575:	mov    rax,QWORD PTR [rcx]
   140009578:	call   QWORD PTR [rax+0x80]
   14000957e:	mov    ebx,eax
   140009580:	test   eax,eax
   140009582:	jns    0x140009429
   140009588:	jmp    0x1400093e9
   14000958d:	int3   
   14000958e:	int3   
   14000958f:	int3   
   140009590:	int3   
   140009591:	int3   
   140009592:	int3   
   140009593:	int3   
   140009594:	mov    rax,rsp
   140009597:	mov    QWORD PTR [rax+0x8],rbx
   14000959b:	mov    QWORD PTR [rax+0x18],rsi
   14000959f:	mov    QWORD PTR [rax+0x20],rdi
   1400095a3:	push   rbp
   1400095a4:	push   r12
   1400095a6:	push   r13
   1400095a8:	push   r14
   1400095aa:	push   r15
   1400095ac:	lea    rbp,[rax-0x5d8]
   1400095b3:	sub    rsp,0x6b0
   1400095ba:	mov    rax,QWORD PTR [rip+0xbaaf]        # 0x140015070
   1400095c1:	xor    rax,rsp
   1400095c4:	mov    QWORD PTR [rbp+0x5a0],rax
   1400095cb:	xor    r15d,r15d
   1400095ce:	mov    r14,rdx
   1400095d1:	lea    rax,[rsp+0x58]
   1400095d6:	mov    r13d,ecx
   1400095d9:	lea    edx,[r15+0x1]
   1400095dd:	xor    r9d,r9d
   1400095e0:	xor    r8d,r8d
   1400095e3:	xor    ecx,ecx
   1400095e5:	mov    r12d,r15d
   1400095e8:	mov    QWORD PTR [rsp+0x38],r15
   1400095ed:	mov    DWORD PTR [rsp+0x50],r15d
   1400095f2:	mov    BYTE PTR [rsp+0x5a],r15b
   1400095f7:	mov    DWORD PTR [rsp+0x5c],0x2
   1400095ff:	mov    QWORD PTR [rsp+0x60],rax
   140009604:	mov    DWORD PTR [rsp+0x68],r15d
   140009609:	mov    WORD PTR [rsp+0x58],r15w
   14000960f:	mov    edi,r15d
   140009612:	mov    QWORD PTR [rsp+0x40],r15
   140009617:	call   QWORD PTR [rip+0xffffffffffff7a23]        # 0x140001040
   14000961d:	lea    edx,[r15+0x2]
   140009621:	xor    ecx,ecx
   140009623:	call   QWORD PTR [rip+0xffffffffffff7ccf]        # 0x1400012f8
   140009629:	mov    ebx,eax
   14000962b:	test   eax,eax
   14000962d:	js     0x1400099bf
   140009633:	mov    ebx,0x104
   140009638:	lea    r12d,[r15+0x1]
   14000963c:	lea    esi,[rbx+0x14]
   14000963f:	test   rdi,rdi
   140009642:	je     0x14000964c
   140009644:	mov    rcx,rdi
   140009647:	call   0x140009edc
   14000964c:	mov    ecx,esi
   14000964e:	mov    eax,0x2
   140009653:	mul    rcx
   140009656:	mov    rcx,0xffffffffffffffff
   14000965d:	cmovo  rax,rcx
   140009661:	mov    rcx,rax
   140009664:	call   0x140009ed0
   140009669:	mov    rdi,rax
   14000966c:	test   rax,rax
   14000966f:	je     0x1400099ba
   140009675:	mov    r8d,ebx
   140009678:	mov    rdx,rax
   14000967b:	xor    ecx,ecx
   14000967d:	call   QWORD PTR [rip+0xffffffffffff79a5]        # 0x140001028
   140009683:	test   eax,eax
   140009685:	je     0x1400099a4
   14000968b:	cmp    eax,ebx
   14000968d:	jb     0x140009697
   14000968f:	add    ebx,0x104
   140009695:	jmp    0x14000963c
   140009697:	mov    eax,eax
   140009699:	mov    r9d,esi
   14000969c:	mov    ebx,r15d
   14000969f:	mov    edx,0x80070057
   1400096a4:	mov    WORD PTR [rdi+rax*2],r15w
   1400096a9:	test   esi,esi
   1400096ab:	je     0x1400096b6
   1400096ad:	cmp    r9,0x7fffffff
   1400096b4:	jbe    0x1400096b8
   1400096b6:	mov    ebx,edx
   1400096b8:	test   ebx,ebx
   1400096ba:	js     0x1400096e7
   1400096bc:	mov    rax,r9
   1400096bf:	mov    rcx,rdi
   1400096c2:	mov    ebx,r15d
   1400096c5:	test   esi,esi
   1400096c7:	je     0x1400096e5
   1400096c9:	cmp    WORD PTR [rcx],r15w
   1400096cd:	je     0x1400096d8
   1400096cf:	add    rcx,0x2
   1400096d3:	dec    rax
   1400096d6:	jne    0x1400096c9
   1400096d8:	test   rax,rax
   1400096db:	je     0x1400096e5
   1400096dd:	mov    rdx,r9
   1400096e0:	sub    rdx,rax
   1400096e3:	jmp    0x1400096ea
   1400096e5:	mov    ebx,edx
   1400096e7:	mov    rdx,r15
   1400096ea:	test   ebx,ebx
   1400096ec:	js     0x1400099bf
   1400096f2:	mov    r8,r9
   1400096f5:	lea    rcx,[rdi+rdx*2]
   1400096f9:	mov    ebx,r15d
   1400096fc:	sub    r8,rdx
   1400096ff:	je     0x14000973b
   140009701:	mov    rax,r8
   140009704:	sub    rax,r9
   140009707:	lea    r9,[rax+rdx*1+0x7fffffff]
   14000970f:	lea    rdx,[rip+0xfffffffffffff272]        # 0x140008988
   140009716:	sub    rdx,rcx
   140009719:	test   r9,r9
   14000971c:	je     0x140009736
   14000971e:	movzx  eax,WORD PTR [rdx+rcx*1]
   140009722:	test   ax,ax
   140009725:	je     0x140009736
   140009727:	mov    WORD PTR [rcx],ax
   14000972a:	dec    r9
   14000972d:	add    rcx,0x2
   140009731:	dec    r8
   140009734:	jne    0x140009719
   140009736:	test   r8,r8
   140009739:	jne    0x140009744
   14000973b:	sub    rcx,0x2
   14000973f:	mov    ebx,0x8007007a
   140009744:	mov    WORD PTR [rcx],r15w
   140009748:	test   ebx,ebx
   14000974a:	js     0x1400099bf
   140009750:	mov    rcx,rdi
   140009753:	call   QWORD PTR [rip+0xffffffffffff78c7]        # 0x140001020
   140009759:	mov    esi,0x10
   14000975e:	cmp    eax,0xffffffff
   140009761:	je     0x14000989d
   140009767:	lea    r8,[rsp+0x40]
   14000976c:	xor    r9d,r9d
   14000976f:	mov    rdx,rdi
   140009772:	xor    ecx,ecx
   140009774:	mov    QWORD PTR [rsp+0x20],r15
   140009779:	call   QWORD PTR [rip+0xffffffffffff7b91]        # 0x140001310
   14000977f:	mov    ebx,eax
   140009781:	test   eax,eax
   140009783:	js     0x1400099bf
   140009789:	mov    rbx,QWORD PTR [rsp+0x40]
   14000978e:	call   0x140008d34
   140009793:	test   al,al
   140009795:	je     0x140009808
   140009797:	lea    rcx,[rsp+0x48]
   14000979c:	mov    rdx,rbx
   14000979f:	mov    QWORD PTR [rsp+0x48],r15
   1400097a4:	call   0x140009184
   1400097a9:	test   eax,eax
   1400097ab:	js     0x140009833
   1400097b1:	mov    rbx,QWORD PTR [rsp+0x48]
   1400097b6:	lea    rdx,[rsp+0x30]
   1400097bb:	xor    r9d,r9d
   1400097be:	mov    rax,QWORD PTR [rbx]
   1400097c1:	xor    r8d,r8d
   1400097c4:	mov    rcx,rbx
   1400097c7:	mov    DWORD PTR [rsp+0x30],r15d
   1400097cc:	call   QWORD PTR [rax+0x60]
   1400097cf:	test   eax,eax
   1400097d1:	js     0x1400097ea
   1400097d3:	mov    edx,DWORD PTR [rsp+0x30]
   1400097d7:	mov    rax,QWORD PTR [rbx]
   1400097da:	xor    r8d,r8d
   1400097dd:	and    edx,0xfffffffe
   1400097e0:	mov    rcx,rbx
   1400097e3:	mov    DWORD PTR [rsp+0x30],edx
   1400097e7:	call   QWORD PTR [rax+0x58]
   1400097ea:	mov    rax,QWORD PTR [rbx]
   1400097ed:	lea    r9,[rsp+0x38]
   1400097f2:	lea    r8,[rip+0xfffffffffffff097]        # 0x140008890
   1400097f9:	lea    rdx,[rip+0xfffffffffffff080]        # 0x140008880
   140009800:	mov    rcx,rbx
   140009803:	call   QWORD PTR [rax+0x48]
   140009806:	jmp    0x140009833
   140009808:	lea    rdx,[rip+0xfffffffffffff081]        # 0x140008890
   14000980f:	lea    rax,[rsp+0x38]
   140009814:	lea    r9,[rip+0xfffffffffffff065]        # 0x140008880
   14000981b:	mov    QWORD PTR [rsp+0x28],rax
   140009820:	mov    QWORD PTR [rsp+0x20],rdx
   140009825:	xor    r8d,r8d
   140009828:	xor    edx,edx
   14000982a:	mov    rcx,rbx
   14000982d:	call   QWORD PTR [rip+0xffffffffffff7aad]        # 0x1400012e0
   140009833:	mov    ebx,eax
   140009835:	test   eax,eax
   140009837:	jns    0x140009886
   140009839:	lea    rdx,[rbp+0x180]
   140009840:	mov    ecx,0x65
   140009845:	mov    WORD PTR [rbp+0x180],r15w
   14000984d:	mov    WORD PTR [rsp+0x70],r15w
   140009853:	call   0x140009288
   140009858:	test   eax,eax
   14000985a:	js     0x140009886
   14000985c:	lea    rdx,[rsp+0x70]
   140009861:	mov    ecx,0x66
   140009866:	call   0x140009288
   14000986b:	test   eax,eax
   14000986d:	js     0x140009886
   14000986f:	lea    r8,[rsp+0x70]
   140009874:	lea    rdx,[rbp+0x180]
   14000987b:	mov    r9d,esi
   14000987e:	xor    ecx,ecx
   140009880:	call   QWORD PTR [rip+0xffffffffffff7a42]        # 0x1400012c8
   140009886:	mov    rcx,QWORD PTR [rsp+0x40]
   14000988b:	test   rcx,rcx
   14000988e:	je     0x140009900
   140009890:	mov    rax,QWORD PTR [rcx]
   140009893:	call   QWORD PTR [rax+0x10]
   140009896:	mov    QWORD PTR [rsp+0x40],r15
   14000989b:	jmp    0x140009900
   14000989d:	call   0x140008d34
   1400098a2:	xor    edx,edx
   1400098a4:	test   al,al
   1400098a6:	je     0x1400098dd
   1400098a8:	lea    rcx,[rsp+0x48]
   1400098ad:	mov    QWORD PTR [rsp+0x48],r15
   1400098b2:	call   0x140009184
   1400098b7:	mov    ebx,eax
   1400098b9:	test   eax,eax
   1400098bb:	js     0x140009900
   1400098bd:	mov    rcx,QWORD PTR [rsp+0x48]
   1400098c2:	lea    r9,[rsp+0x38]
   1400098c7:	lea    r8,[rip+0xffffffffffffefc2]        # 0x140008890
   1400098ce:	mov    rax,QWORD PTR [rcx]
   1400098d1:	lea    rdx,[rip+0xffffffffffffefa8]        # 0x140008880
   1400098d8:	call   QWORD PTR [rax+0x48]
   1400098db:	jmp    0x1400098fe
   1400098dd:	lea    rax,[rsp+0x38]
   1400098e2:	lea    r9,[rip+0xffffffffffffefa7]        # 0x140008890
   1400098e9:	lea    rcx,[rip+0xffffffffffffef90]        # 0x140008880
   1400098f0:	mov    r8d,r12d
   1400098f3:	mov    QWORD PTR [rsp+0x20],rax
   1400098f8:	call   QWORD PTR [rip+0xffffffffffff79f2]        # 0x1400012f0
   1400098fe:	mov    ebx,eax
   140009900:	test   ebx,ebx
   140009902:	js     0x1400099bf
   140009908:	mov    rcx,QWORD PTR [rsp+0x38]
   14000990d:	mov    rax,QWORD PTR [rcx]
   140009910:	call   QWORD PTR [rax+0x18]
   140009913:	mov    ebx,eax
   140009915:	test   eax,eax
   140009917:	js     0x1400099bf
   14000991d:	cmp    r13d,r12d
   140009920:	jle    0x140009928
   140009922:	mov    rdx,QWORD PTR [r14+0x8]
   140009926:	jmp    0x14000992f
   140009928:	lea    rdx,[rip+0xfffffffffffff069]        # 0x140008998
   14000992f:	mov    rcx,QWORD PTR [rsp+0x38]
   140009934:	lea    r8,[rsp+0x50]
   140009939:	lea    r9,[rip+0xfffffffffffff060]        # 0x1400089a0
   140009940:	mov    rax,QWORD PTR [rcx]
   140009943:	mov    QWORD PTR [rsp+0x28],r8
   140009948:	mov    QWORD PTR [rsp+0x20],rdx
   14000994d:	lea    r8,[rip+0xfffffffffffff05c]        # 0x1400089b0
   140009954:	lea    rdx,[rip+0xfffffffffffff0ad]        # 0x140008a08
   14000995b:	call   QWORD PTR [rax+0x58]
   14000995e:	mov    ebx,eax
   140009960:	test   eax,eax
   140009962:	jns    0x1400099bf
   140009964:	lea    rcx,[rsp+0x58]
   140009969:	call   0x1400092f0
   14000996e:	lea    rdx,[rbp+0x390]
   140009975:	mov    ecx,0x66
   14000997a:	mov    WORD PTR [rbp+0x390],r15w
   140009982:	call   0x140009288
   140009987:	test   eax,eax
   140009989:	js     0x1400099bf
   14000998b:	mov    rdx,QWORD PTR [rsp+0x60]
   140009990:	lea    r8,[rbp+0x390]
   140009997:	mov    r9d,esi
   14000999a:	xor    ecx,ecx
   14000999c:	call   QWORD PTR [rip+0xffffffffffff7926]        # 0x1400012c8
   1400099a2:	jmp    0x1400099bf
   1400099a4:	call   QWORD PTR [rip+0xffffffffffff7686]        # 0x140001030
   1400099aa:	movzx  ebx,ax
   1400099ad:	or     ebx,0x80070000
   1400099b3:	test   eax,eax
   1400099b5:	cmovle ebx,eax
   1400099b8:	jmp    0x1400099bf
   1400099ba:	mov    ebx,0x8007000e
   1400099bf:	mov    rcx,QWORD PTR [rip+0xdfd2]        # 0x140017998
   1400099c6:	test   rcx,rcx
   1400099c9:	je     0x1400099d7
   1400099cb:	call   0x14000f148
   1400099d0:	mov    QWORD PTR [rip+0xdfc1],r15        # 0x140017998
   1400099d7:	mov    rcx,QWORD PTR [rsp+0x40]
   1400099dc:	test   rcx,rcx
   1400099df:	je     0x1400099ec
   1400099e1:	mov    rax,QWORD PTR [rcx]
   1400099e4:	call   QWORD PTR [rax+0x10]
   1400099e7:	mov    QWORD PTR [rsp+0x40],r15
   1400099ec:	test   rdi,rdi
   1400099ef:	je     0x1400099f9
   1400099f1:	mov    rcx,rdi
   1400099f4:	call   0x140009edc
   1400099f9:	test   r12d,r12d
   1400099fc:	je     0x140009a04
   1400099fe:	call   QWORD PTR [rip+0xffffffffffff78fc]        # 0x140001300
   140009a04:	cmp    BYTE PTR [rsp+0x5a],r15b
   140009a09:	je     0x140009a21
   140009a0b:	call   QWORD PTR [rip+0xffffffffffff76af]        # 0x1400010c0
   140009a11:	mov    r8,QWORD PTR [rsp+0x60]
   140009a16:	xor    edx,edx
   140009a18:	mov    rcx,rax
   140009a1b:	call   QWORD PTR [rip+0xffffffffffff76a7]        # 0x1400010c8
   140009a21:	mov    eax,ebx
   140009a23:	mov    rcx,QWORD PTR [rbp+0x5a0]
   140009a2a:	xor    rcx,rsp
   140009a2d:	call   0x140009dd0
   140009a32:	lea    r11,[rsp+0x6b0]
   140009a3a:	mov    rbx,QWORD PTR [r11+0x30]
   140009a3e:	mov    rsi,QWORD PTR [r11+0x40]
   140009a42:	mov    rdi,QWORD PTR [r11+0x48]
   140009a46:	mov    rsp,r11
   140009a49:	pop    r15
   140009a4b:	pop    r14
   140009a4d:	pop    r13
   140009a4f:	pop    r12
   140009a51:	pop    rbp
   140009a52:	ret    
   140009a53:	int3   
   140009a54:	int3   
   140009a55:	int3   
   140009a56:	int3   
   140009a57:	int3   
   140009a58:	int3   
   140009a59:	int3   
   140009a5a:	int3   
   140009a5b:	int3   
   140009a5c:	sub    rsp,0x28
   140009a60:	xor    eax,eax
   140009a62:	test   rdx,rdx
   140009a65:	je     0x140009a94
   140009a67:	mov    r10d,0x7fffffff
   140009a6d:	mov    r11,rdx
   140009a70:	mov    r8d,eax
   140009a73:	mov    r9d,r10d
   140009a76:	cmp    WORD PTR [r11],ax
   140009a7a:	je     0x140009a85
   140009a7c:	add    r11,0x2
   140009a80:	dec    r9
   140009a83:	jne    0x140009a76
   140009a85:	test   r9,r9
   140009a88:	jne    0x140009a8f
   140009a8a:	mov    r10,rax
   140009a8d:	jmp    0x140009a99
   140009a8f:	sub    r10,r9
   140009a92:	jmp    0x140009a9f
   140009a94:	mov    r10,QWORD PTR [rsp+0x38]
   140009a99:	mov    r8d,0x80070057
   140009a9f:	test   r8d,r8d
   140009aa2:	jns    0x140009aac
   140009aa4:	mov    eax,r8d
   140009aa7:	add    rsp,0x28
   140009aab:	ret    
   140009aac:	test   r10,r10
   140009aaf:	je     0x140009ac1
   140009ab1:	mov    r9d,DWORD PTR [rcx+0x10]
   140009ab5:	lea    r8,[r10+r10*1]
   140009ab9:	add    r9d,r9d
   140009abc:	call   0x140009acc
   140009ac1:	add    rsp,0x28
   140009ac5:	ret    
   140009ac6:	int3   
   140009ac7:	int3   
   140009ac8:	int3   
   140009ac9:	int3   
   140009aca:	int3   
   140009acb:	int3   
   140009acc:	mov    QWORD PTR [rsp+0x8],rbx
   140009ad1:	mov    QWORD PTR [rsp+0x10],rbp
   140009ad6:	mov    QWORD PTR [rsp+0x18],rsi
   140009adb:	push   rdi
   140009adc:	push   r12
   140009ade:	push   r13
   140009ae0:	sub    rsp,0x20
   140009ae4:	mov    esi,r9d
   140009ae7:	mov    r12,rdx
   140009aea:	mov    eax,0xffffffff
   140009aef:	lea    rdx,[r8+rsi*1+0x2]
   140009af4:	mov    rdi,r8
   140009af7:	mov    rbx,rcx
   140009afa:	cmp    rdx,rax
   140009afd:	jbe    0x140009b06
   140009aff:	mov    eax,0x80070216
   140009b04:	jmp    0x140009b4b
   140009b06:	mov    eax,DWORD PTR [rcx+0x4]
   140009b09:	xor    r13d,r13d
   140009b0c:	cmp    rax,rdx
   140009b0f:	jae    0x140009b21
   140009b11:	call   0x140009b6c
   140009b16:	test   al,al
   140009b18:	jne    0x140009b21
   140009b1a:	mov    eax,0x8007000e
   140009b1f:	jmp    0x140009b4b
   140009b21:	mov    rcx,QWORD PTR [rbx+0x8]
   140009b25:	mov    r8,rdi
   140009b28:	mov    rdx,r12
   140009b2b:	add    rcx,rsi
   140009b2e:	call   0x14000cb80
   140009b33:	mov    rax,QWORD PTR [rbx+0x8]
   140009b37:	lea    r11d,[rdi+rsi*1]
   140009b3b:	shr    r11d,1
   140009b3e:	mov    ecx,r11d
   140009b41:	mov    DWORD PTR [rbx+0x10],ecx
   140009b44:	mov    WORD PTR [rax+r11*2],r13w
   140009b49:	xor    eax,eax
   140009b4b:	mov    rbx,QWORD PTR [rsp+0x40]
   140009b50:	mov    rbp,QWORD PTR [rsp+0x48]
   140009b55:	mov    rsi,QWORD PTR [rsp+0x50]
   140009b5a:	add    rsp,0x20
   140009b5e:	pop    r13
   140009b60:	pop    r12
   140009b62:	pop    rdi
   140009b63:	ret    
   140009b64:	int3   
   140009b65:	int3   
   140009b66:	int3   
   140009b67:	int3   
   140009b68:	int3   
   140009b69:	int3   
   140009b6a:	int3   
   140009b6b:	int3   
   140009b6c:	mov    QWORD PTR [rsp+0x8],rbx
   140009b71:	mov    QWORD PTR [rsp+0x10],rsi
   140009b76:	push   rdi
   140009b77:	sub    rsp,0x20
   140009b7b:	mov    eax,DWORD PTR [rcx+0x4]
   140009b7e:	mov    rdi,rdx
   140009b81:	mov    rbx,rcx
   140009b84:	cmp    rdx,rax
   140009b87:	jbe    0x140009c06
   140009b89:	mov    eax,0xffffffff
   140009b8e:	cmp    rdx,rax
   140009b91:	jbe    0x140009ba2
   140009b93:	mov    ecx,0x57
   140009b98:	call   QWORD PTR [rip+0xffffffffffff75da]        # 0x140001178
   140009b9e:	xor    al,al
   140009ba0:	jmp    0x140009c08
   140009ba2:	cmp    BYTE PTR [rcx+0x2],0x0
   140009ba6:	je     0x140009bc2
   140009ba8:	call   QWORD PTR [rip+0xffffffffffff7512]        # 0x1400010c0
   140009bae:	mov    r8,QWORD PTR [rbx+0x8]
   140009bb2:	mov    r9,rdi
   140009bb5:	mov    rcx,rax
   140009bb8:	xor    edx,edx
   140009bba:	call   QWORD PTR [rip+0xffffffffffff76a0]        # 0x140001260
   140009bc0:	jmp    0x140009bd6
   140009bc2:	call   QWORD PTR [rip+0xffffffffffff74f8]        # 0x1400010c0
   140009bc8:	mov    r8,rdi
   140009bcb:	xor    edx,edx
   140009bcd:	mov    rcx,rax
   140009bd0:	call   QWORD PTR [rip+0xffffffffffff7662]        # 0x140001238
   140009bd6:	mov    rsi,rax
   140009bd9:	test   rax,rax
   140009bdc:	jne    0x140009be3
   140009bde:	lea    ecx,[rax+0x8]
   140009be1:	jmp    0x140009b98
   140009be3:	cmp    BYTE PTR [rbx+0x2],0x0
   140009be7:	jne    0x140009bff
   140009be9:	mov    r9d,DWORD PTR [rbx+0x4]
   140009bed:	mov    r8,QWORD PTR [rbx+0x8]
   140009bf1:	mov    edx,edi
   140009bf3:	mov    rcx,rsi
   140009bf6:	call   0x1400109d0
   140009bfb:	mov    BYTE PTR [rbx+0x2],0x1
   140009bff:	mov    QWORD PTR [rbx+0x8],rsi
   140009c03:	mov    DWORD PTR [rbx+0x4],edi
   140009c06:	mov    al,0x1
   140009c08:	mov    rbx,QWORD PTR [rsp+0x30]
   140009c0d:	mov    rsi,QWORD PTR [rsp+0x38]
   140009c12:	add    rsp,0x20
   140009c16:	pop    rdi
   140009c17:	ret    
   140009c18:	int3   
   140009c19:	int3   
   140009c1a:	int3   
   140009c1b:	int3   
   140009c1c:	int3   
   140009c1d:	int3   
   140009c1e:	int3   
   140009c1f:	int3   
   140009c20:	mov    QWORD PTR [rsp+0x10],rbx
   140009c25:	push   rdi
   140009c26:	sub    rsp,0x30
   140009c2a:	mov    eax,0x5a4d
   140009c2f:	cmp    WORD PTR [rip+0xffffffffffff63ca],ax        # 0x140000000
   140009c36:	je     0x140009c3c
   140009c38:	xor    ebx,ebx
   140009c3a:	jmp    0x140009c74
   140009c3c:	movsxd rax,DWORD PTR [rip+0xffffffffffff63f9]        # 0x14000003c
   140009c43:	lea    rcx,[rip+0xffffffffffff63b6]        # 0x140000000
   140009c4a:	add    rax,rcx
   140009c4d:	cmp    DWORD PTR [rax],0x4550
   140009c53:	jne    0x140009c38
   140009c55:	mov    ecx,0x20b
   140009c5a:	cmp    WORD PTR [rax+0x18],cx
   140009c5e:	jne    0x140009c38
   140009c60:	xor    ebx,ebx
   140009c62:	cmp    DWORD PTR [rax+0x84],0xe
   140009c69:	jbe    0x140009c74
   140009c6b:	cmp    DWORD PTR [rax+0xf8],ebx
   140009c71:	setne  bl
   140009c74:	mov    DWORD PTR [rsp+0x40],ebx
   140009c78:	call   0x14000b5bc
   140009c7d:	test   eax,eax
   140009c7f:	jne    0x140009ca3
   140009c81:	cmp    DWORD PTR [rip+0xc6c8],0x2        # 0x140016350
   140009c88:	je     0x140009c8f
   140009c8a:	call   0x14000a668
   140009c8f:	mov    ecx,0x1c
   140009c94:	call   0x14000a404
   140009c99:	mov    ecx,0xff
   140009c9e:	call   0x14000a004
   140009ca3:	call   0x14000b534
   140009ca8:	test   eax,eax
   140009caa:	jne    0x140009cce
   140009cac:	cmp    DWORD PTR [rip+0xc69d],0x2        # 0x140016350
   140009cb3:	je     0x140009cba
   140009cb5:	call   0x14000a668
   140009cba:	mov    ecx,0x10
   140009cbf:	call   0x14000a404
   140009cc4:	mov    ecx,0xff
   140009cc9:	call   0x14000a004
   140009cce:	call   0x14000b1c8
   140009cd3:	nop
   140009cd4:	call   0x14000aef0
   140009cd9:	test   eax,eax
   140009cdb:	jns    0x140009ce7
   140009cdd:	mov    ecx,0x1b
   140009ce2:	call   0x14000a3a8
   140009ce7:	call   QWORD PTR [rip+0xffffffffffff73f3]        # 0x1400010e0
   140009ced:	mov    QWORD PTR [rip+0xef24],rax        # 0x140018c18
   140009cf4:	call   0x14000ae64
   140009cf9:	mov    QWORD PTR [rip+0xc648],rax        # 0x140016348
   140009d00:	call   0x14000ad6c
   140009d05:	test   eax,eax
   140009d07:	jns    0x140009d13
   140009d09:	mov    ecx,0x8
   140009d0e:	call   0x14000a3a8
   140009d13:	call   0x14000aa90
   140009d18:	test   eax,eax
   140009d1a:	jns    0x140009d26
   140009d1c:	mov    ecx,0x9
   140009d21:	call   0x14000a3a8
   140009d26:	mov    ecx,0x1
   140009d2b:	call   0x14000a108
   140009d30:	test   eax,eax
   140009d32:	je     0x140009d3b
   140009d34:	mov    ecx,eax
   140009d36:	call   0x14000a3a8
   140009d3b:	mov    r8,QWORD PTR [rip+0xc63e]        # 0x140016380
   140009d42:	mov    QWORD PTR [rip+0xc63f],r8        # 0x140016388
   140009d49:	mov    rdx,QWORD PTR [rip+0xc618]        # 0x140016368
   140009d50:	mov    ecx,DWORD PTR [rip+0xc606]        # 0x14001635c
   140009d56:	call   0x140009594
   140009d5b:	mov    edi,eax
   140009d5d:	mov    DWORD PTR [rsp+0x20],eax
   140009d61:	test   ebx,ebx
   140009d63:	jne    0x140009d6c
   140009d65:	mov    ecx,eax
   140009d67:	call   0x14000a358
   140009d6c:	call   0x14000a37c
   140009d71:	jmp    0x140009d8a
   140009d73:	mov    edi,eax
   140009d75:	cmp    DWORD PTR [rsp+0x40],0x0
   140009d7a:	jne    0x140009d84
   140009d7c:	mov    ecx,eax
   140009d7e:	call   0x14000a368
   140009d83:	int3   
   140009d84:	call   0x14000a390
   140009d89:	nop
   140009d8a:	mov    eax,edi
   140009d8c:	mov    rbx,QWORD PTR [rsp+0x48]
   140009d91:	add    rsp,0x30
   140009d95:	pop    rdi
   140009d96:	ret    
   140009d97:	int3   
   140009d98:	int3   
   140009d99:	int3   
   140009d9a:	int3   
   140009d9b:	int3   
   140009d9c:	int3   
   140009d9d:	int3   
   140009d9e:	int3   
   140009d9f:	int3   
   140009da0:	sub    rsp,0x28
   140009da4:	call   0x14000b618
   140009da9:	add    rsp,0x28
   140009dad:	jmp    0x140009c20
   140009db2:	int3   
   140009db3:	int3   
   140009db4:	int3   
   140009db5:	int3   
   140009db6:	int3   
   140009db7:	int3   
   140009db8:	int3   
   140009db9:	int3   
   140009dba:	int3   
   140009dbb:	int3   
   140009dbc:	int3   
   140009dbd:	int3   
   140009dbe:	int3   
   140009dbf:	int3   
   140009dc0:	int3   
   140009dc1:	int3   
   140009dc2:	int3   
   140009dc3:	int3   
   140009dc4:	int3   
   140009dc5:	int3   
   140009dc6:	data16 nop WORD PTR [rax+rax*1+0x0]
   140009dd0:	cmp    rcx,QWORD PTR [rip+0xb299]        # 0x140015070
   140009dd7:	jne    0x140009dea
   140009dd9:	rol    rcx,0x10
   140009ddd:	test   cx,0xffff
   140009de2:	jne    0x140009de6
   140009de4:	repz ret 
   140009de6:	ror    rcx,0x10
   140009dea:	jmp    0x14000b6d4
   140009def:	int3   
   140009df0:	int3   
   140009df1:	int3   
   140009df2:	int3   
   140009df3:	int3   
   140009df4:	int3   
   140009df5:	int3   
   140009df6:	int3   
   140009df7:	int3   
   140009df8:	rex push rbx
   140009dfa:	sub    rsp,0x20
   140009dfe:	xor    ebx,ebx
   140009e00:	mov    r10,r8
   140009e03:	test   r9,r9
   140009e06:	jne    0x140009e16
   140009e08:	test   rcx,rcx
   140009e0b:	jne    0x140009e1b
   140009e0d:	test   rdx,rdx
   140009e10:	jne    0x140009e32
   140009e12:	xor    eax,eax
   140009e14:	jmp    0x140009e45
   140009e16:	test   rcx,rcx
   140009e19:	je     0x140009e32
   140009e1b:	test   rdx,rdx
   140009e1e:	je     0x140009e32
   140009e20:	test   r9,r9
   140009e23:	jne    0x140009e2a
   140009e25:	mov    WORD PTR [rcx],bx
   140009e28:	jmp    0x140009e12
   140009e2a:	test   r8,r8
   140009e2d:	jne    0x140009e4b
   140009e2f:	mov    WORD PTR [rcx],bx
   140009e32:	call   0x14000baac
   140009e37:	mov    ebx,0x16
   140009e3c:	mov    DWORD PTR [rax],ebx
   140009e3e:	call   0x14000ba38
   140009e43:	mov    eax,ebx
   140009e45:	add    rsp,0x20
   140009e49:	pop    rbx
   140009e4a:	ret    
   140009e4b:	mov    r11,rcx
   140009e4e:	mov    r8,rdx
   140009e51:	cmp    r9,0xffffffffffffffff
   140009e55:	jne    0x140009e73
   140009e57:	sub    r11,r10
   140009e5a:	movzx  eax,WORD PTR [r10]
   140009e5e:	mov    WORD PTR [r11+r10*1],ax
   140009e63:	add    r10,0x2
   140009e67:	test   ax,ax
   140009e6a:	je     0x140009e9b
   140009e6c:	dec    r8
   140009e6f:	jne    0x140009e5a
   140009e71:	jmp    0x140009e9b
   140009e73:	sub    r10,rcx
   140009e76:	movzx  eax,WORD PTR [r10+r11*1]
   140009e7b:	mov    WORD PTR [r11],ax
   140009e7f:	add    r11,0x2
   140009e83:	test   ax,ax
   140009e86:	je     0x140009e92
   140009e88:	dec    r8
   140009e8b:	je     0x140009e92
   140009e8d:	dec    r9
   140009e90:	jne    0x140009e76
   140009e92:	test   r9,r9
   140009e95:	jne    0x140009e9b
   140009e97:	mov    WORD PTR [r11],bx
   140009e9b:	test   r8,r8
   140009e9e:	jne    0x140009e12
   140009ea4:	cmp    r9,0xffffffffffffffff
   140009ea8:	jne    0x140009eb5
   140009eaa:	mov    WORD PTR [rcx+rdx*2-0x2],bx
   140009eaf:	lea    eax,[r8+0x50]
   140009eb3:	jmp    0x140009e45
   140009eb5:	mov    WORD PTR [rcx],bx
   140009eb8:	call   0x14000baac
   140009ebd:	mov    ebx,0x22
   140009ec2:	jmp    0x140009e3c
   140009ec7:	int3   
   140009ec8:	int3   
   140009ec9:	int3   
   140009eca:	int3   
   140009ecb:	int3   
   140009ecc:	int3   
   140009ecd:	int3   
   140009ece:	int3   
   140009ecf:	int3   
   140009ed0:	jmp    0x14000bbc8
   140009ed5:	int3   
   140009ed6:	int3   
   140009ed7:	int3   
   140009ed8:	int3   
   140009ed9:	int3   
   140009eda:	int3   
   140009edb:	int3   
   140009edc:	jmp    0x14000bc74
   140009ee1:	int3   
   140009ee2:	int3   
   140009ee3:	int3   
   140009ee4:	int3   
   140009ee5:	int3   
   140009ee6:	int3   
   140009ee7:	int3   
   140009ee8:	rex push rbx
   140009eea:	sub    rsp,0x20
   140009eee:	xor    r10d,r10d
   140009ef1:	mov    r9,rcx
   140009ef4:	test   rcx,rcx
   140009ef7:	je     0x140009f07
   140009ef9:	test   rdx,rdx
   140009efc:	je     0x140009f07
   140009efe:	test   r8,r8
   140009f01:	jne    0x140009f20
   140009f03:	mov    WORD PTR [rcx],r10w
   140009f07:	call   0x14000baac
   140009f0c:	mov    ebx,0x16
   140009f11:	mov    DWORD PTR [rax],ebx
   140009f13:	call   0x14000ba38
   140009f18:	mov    eax,ebx
   140009f1a:	add    rsp,0x20
   140009f1e:	pop    rbx
   140009f1f:	ret    
   140009f20:	sub    rcx,r8
   140009f23:	movzx  eax,WORD PTR [r8]
   140009f27:	mov    WORD PTR [rcx+r8*1],ax
   140009f2c:	add    r8,0x2
   140009f30:	test   ax,ax
   140009f33:	je     0x140009f3a
   140009f35:	dec    rdx
   140009f38:	jne    0x140009f23
   140009f3a:	test   rdx,rdx
   140009f3d:	jne    0x140009f4f
   140009f3f:	mov    WORD PTR [r9],r10w
   140009f43:	call   0x14000baac
   140009f48:	mov    ebx,0x22
   140009f4d:	jmp    0x140009f11
   140009f4f:	xor    eax,eax
   140009f51:	jmp    0x140009f1a
   140009f53:	int3   
   140009f54:	int3   
   140009f55:	int3   
   140009f56:	int3   
   140009f57:	int3   
   140009f58:	int3   
   140009f59:	int3   
   140009f5a:	int3   
   140009f5b:	int3   
   140009f5c:	sub    rsp,0x28
   140009f60:	mov    rax,QWORD PTR [rcx]
   140009f63:	cmp    DWORD PTR [rax],0xe06d7363
   140009f69:	jne    0x140009f96
   140009f6b:	cmp    DWORD PTR [rax+0x18],0x4
   140009f6f:	jne    0x140009f96
   140009f71:	mov    eax,DWORD PTR [rax+0x20]
   140009f74:	cmp    eax,0x19930520
   140009f79:	je     0x140009f90
   140009f7b:	cmp    eax,0x19930521
   140009f80:	je     0x140009f90
   140009f82:	cmp    eax,0x19930522
   140009f87:	je     0x140009f90
   140009f89:	cmp    eax,0x1994000
   140009f8e:	jne    0x140009f96
   140009f90:	call   0x14000bc80
   140009f95:	int3   
   140009f96:	xor    eax,eax
   140009f98:	add    rsp,0x28
   140009f9c:	ret    
   140009f9d:	int3   
   140009f9e:	int3   
   140009f9f:	int3   
   140009fa0:	int3   
   140009fa1:	int3   
   140009fa2:	int3   
   140009fa3:	int3   
   140009fa4:	sub    rsp,0x28
   140009fa8:	lea    rcx,[rip+0xffffffffffffffad]        # 0x140009f5c
   140009faf:	call   QWORD PTR [rip+0xffffffffffff7133]        # 0x1400010e8
   140009fb5:	xor    eax,eax
   140009fb7:	add    rsp,0x28
   140009fbb:	ret    
   140009fbc:	int3   
   140009fbd:	int3   
   140009fbe:	int3   
   140009fbf:	int3   
   140009fc0:	int3   
   140009fc1:	int3   
   140009fc2:	int3   
   140009fc3:	int3   
   140009fc4:	rex push rbx
   140009fc6:	sub    rsp,0x20
   140009fca:	mov    ebx,ecx
   140009fcc:	lea    rcx,[rip+0xffffffffffffe91d]        # 0x1400088f0
   140009fd3:	call   QWORD PTR [rip+0xffffffffffff7117]        # 0x1400010f0
   140009fd9:	test   rax,rax
   140009fdc:	je     0x140009ff7
   140009fde:	lea    rdx,[rip+0xffffffffffff73cb]        # 0x1400013b0
   140009fe5:	mov    rcx,rax
   140009fe8:	call   QWORD PTR [rip+0xffffffffffff704a]        # 0x140001038
   140009fee:	test   rax,rax
   140009ff1:	je     0x140009ff7
   140009ff3:	mov    ecx,ebx
   140009ff5:	call   rax
   140009ff7:	add    rsp,0x20
   140009ffb:	pop    rbx
   140009ffc:	ret    
   140009ffd:	int3   
   140009ffe:	int3   
   140009fff:	int3   
   14000a000:	int3   
   14000a001:	int3   
   14000a002:	int3   
   14000a003:	int3   
   14000a004:	rex push rbx
   14000a006:	sub    rsp,0x20
   14000a00a:	mov    ebx,ecx
   14000a00c:	call   0x140009fc4
   14000a011:	mov    ecx,ebx
   14000a013:	call   QWORD PTR [rip+0xffffffffffff70df]        # 0x1400010f8
   14000a019:	int3   
   14000a01a:	int3   
   14000a01b:	int3   
   14000a01c:	int3   
   14000a01d:	int3   
   14000a01e:	int3   
   14000a01f:	int3   
   14000a020:	mov    ecx,0x8
   14000a025:	jmp    0x14000bef8
   14000a02a:	int3   
   14000a02b:	int3   
   14000a02c:	int3   
   14000a02d:	int3   
   14000a02e:	int3   
   14000a02f:	int3   
   14000a030:	mov    ecx,0x8
   14000a035:	jmp    0x14000bdec
   14000a03a:	int3   
   14000a03b:	int3   
   14000a03c:	int3   
   14000a03d:	int3   
   14000a03e:	int3   
   14000a03f:	int3   
   14000a040:	rex push rbx
   14000a042:	sub    rsp,0x20
   14000a046:	call   0x14000b248
   14000a04b:	mov    rcx,rax
   14000a04e:	mov    rbx,rax
   14000a051:	call   0x14000c1d4
   14000a056:	mov    rcx,rbx
   14000a059:	call   0x14000b824
   14000a05e:	mov    rcx,rbx
   14000a061:	call   0x14000c1c4
   14000a066:	mov    rcx,rbx
   14000a069:	call   0x14000c1b4
   14000a06e:	mov    rcx,rbx
   14000a071:	call   0x14000bf44
   14000a076:	mov    rcx,rbx
   14000a079:	add    rsp,0x20
   14000a07d:	pop    rbx
   14000a07e:	jmp    0x14000bcac
   14000a083:	int3   
   14000a084:	int3   
   14000a085:	int3   
   14000a086:	int3   
   14000a087:	int3   
   14000a088:	int3   
   14000a089:	int3   
   14000a08a:	int3   
   14000a08b:	int3   
   14000a08c:	cmp    rcx,rdx
   14000a08f:	jae    0x14000a0be
   14000a091:	mov    QWORD PTR [rsp+0x8],rbx
   14000a096:	push   rdi
   14000a097:	sub    rsp,0x20
   14000a09b:	mov    rdi,rdx
   14000a09e:	mov    rbx,rcx
   14000a0a1:	mov    rax,QWORD PTR [rbx]
   14000a0a4:	test   rax,rax
   14000a0a7:	je     0x14000a0ab
   14000a0a9:	call   rax
   14000a0ab:	add    rbx,0x8
   14000a0af:	cmp    rbx,rdi
   14000a0b2:	jb     0x14000a0a1
   14000a0b4:	mov    rbx,QWORD PTR [rsp+0x30]
   14000a0b9:	add    rsp,0x20
   14000a0bd:	pop    rdi
   14000a0be:	ret    
   14000a0bf:	int3   
   14000a0c0:	int3   
   14000a0c1:	int3   
   14000a0c2:	int3   
   14000a0c3:	int3   
   14000a0c4:	int3   
   14000a0c5:	int3   
   14000a0c6:	int3   
   14000a0c7:	int3   
   14000a0c8:	mov    QWORD PTR [rsp+0x8],rbx
   14000a0cd:	push   rdi
   14000a0ce:	sub    rsp,0x20
   14000a0d2:	xor    eax,eax
   14000a0d4:	mov    rdi,rdx
   14000a0d7:	mov    rbx,rcx
   14000a0da:	cmp    rcx,rdx
   14000a0dd:	jae    0x14000a0f6
   14000a0df:	test   eax,eax
   14000a0e1:	jne    0x14000a0f6
   14000a0e3:	mov    rcx,QWORD PTR [rbx]
   14000a0e6:	test   rcx,rcx
   14000a0e9:	je     0x14000a0ed
   14000a0eb:	call   rcx
   14000a0ed:	add    rbx,0x8
   14000a0f1:	cmp    rbx,rdi
   14000a0f4:	jb     0x14000a0df
   14000a0f6:	mov    rbx,QWORD PTR [rsp+0x30]
   14000a0fb:	add    rsp,0x20
   14000a0ff:	pop    rdi
   14000a100:	ret    
   14000a101:	int3   
   14000a102:	int3   
   14000a103:	int3   
   14000a104:	int3   
   14000a105:	int3   
   14000a106:	int3   
   14000a107:	int3   
   14000a108:	mov    QWORD PTR [rsp+0x8],rbx
   14000a10d:	push   rdi
   14000a10e:	sub    rsp,0x20
   14000a112:	cmp    QWORD PTR [rip+0xeaee],0x0        # 0x140018c08
   14000a11a:	mov    ebx,ecx
   14000a11c:	je     0x14000a136
   14000a11e:	lea    rcx,[rip+0xeae3]        # 0x140018c08
   14000a125:	call   0x14000c470
   14000a12a:	test   eax,eax
   14000a12c:	je     0x14000a136
   14000a12e:	mov    ecx,ebx
   14000a130:	call   QWORD PTR [rip+0xead2]        # 0x140018c08
   14000a136:	call   0x14000c39c
   14000a13b:	lea    rdx,[rip+0xffffffffffff7216]        # 0x140001358
   14000a142:	lea    rcx,[rip+0xffffffffffff71e7]        # 0x140001330
   14000a149:	call   0x14000a0c8
   14000a14e:	test   eax,eax
   14000a150:	jne    0x14000a1ac
   14000a152:	lea    rcx,[rip+0x10af]        # 0x14000b208
   14000a159:	call   0x14000c37c
   14000a15e:	lea    rbx,[rip+0xffffffffffff71bb]        # 0x140001320
   14000a165:	lea    rdi,[rip+0xffffffffffff71bc]        # 0x140001328
   14000a16c:	jmp    0x14000a17c
   14000a16e:	mov    rax,QWORD PTR [rbx]
   14000a171:	test   rax,rax
   14000a174:	je     0x14000a178
   14000a176:	call   rax
   14000a178:	add    rbx,0x8
   14000a17c:	cmp    rbx,rdi
   14000a17f:	jb     0x14000a16e
   14000a181:	cmp    QWORD PTR [rip+0xea87],0x0        # 0x140018c10
   14000a189:	je     0x14000a1aa
   14000a18b:	lea    rcx,[rip+0xea7e]        # 0x140018c10
   14000a192:	call   0x14000c470
   14000a197:	test   eax,eax
   14000a199:	je     0x14000a1aa
   14000a19b:	xor    r8d,r8d
   14000a19e:	xor    ecx,ecx
   14000a1a0:	lea    edx,[r8+0x2]
   14000a1a4:	call   QWORD PTR [rip+0xea66]        # 0x140018c10
   14000a1aa:	xor    eax,eax
   14000a1ac:	mov    rbx,QWORD PTR [rsp+0x30]
   14000a1b1:	add    rsp,0x20
   14000a1b5:	pop    rdi
   14000a1b6:	ret    
   14000a1b7:	int3   
   14000a1b8:	int3   
   14000a1b9:	int3   
   14000a1ba:	int3   
   14000a1bb:	int3   
   14000a1bc:	int3   
   14000a1bd:	int3   
   14000a1be:	int3   
   14000a1bf:	int3   
   14000a1c0:	mov    QWORD PTR [rsp+0x8],rbx
   14000a1c5:	mov    QWORD PTR [rsp+0x10],rsi
   14000a1ca:	mov    DWORD PTR [rsp+0x18],r8d
   14000a1cf:	push   rdi
   14000a1d0:	push   r12
   14000a1d2:	push   r13
   14000a1d4:	push   r14
   14000a1d6:	push   r15
   14000a1d8:	sub    rsp,0x40
   14000a1dc:	mov    r12d,r8d
   14000a1df:	mov    ebx,edx
   14000a1e1:	mov    r15d,ecx
   14000a1e4:	mov    ecx,0x8
   14000a1e9:	call   0x14000bef8
   14000a1ee:	nop
   14000a1ef:	cmp    DWORD PTR [rip+0xc1b2],0x1        # 0x1400163a8
   14000a1f6:	je     0x14000a2fd
   14000a1fc:	mov    DWORD PTR [rip+0xc19e],0x1        # 0x1400163a4
   14000a206:	mov    BYTE PTR [rip+0xc193],r12b        # 0x1400163a0
   14000a20d:	test   ebx,ebx
   14000a20f:	jne    0x14000a2e9
   14000a215:	mov    rcx,QWORD PTR [rip+0xe9dc]        # 0x140018bf8
   14000a21c:	call   QWORD PTR [rip+0xffffffffffff6ede]        # 0x140001100
   14000a222:	mov    rsi,rax
   14000a225:	mov    QWORD PTR [rsp+0x30],rax
   14000a22a:	test   rax,rax
   14000a22d:	je     0x14000a2d6
   14000a233:	mov    rcx,QWORD PTR [rip+0xe9b6]        # 0x140018bf0
   14000a23a:	call   QWORD PTR [rip+0xffffffffffff6ec0]        # 0x140001100
   14000a240:	mov    rdi,rax
   14000a243:	mov    QWORD PTR [rsp+0x20],rax
   14000a248:	mov    r14,rsi
   14000a24b:	mov    QWORD PTR [rsp+0x28],rsi
   14000a250:	mov    r13,rax
   14000a253:	mov    QWORD PTR [rsp+0x38],rax
   14000a258:	sub    rdi,0x8
   14000a25c:	mov    QWORD PTR [rsp+0x20],rdi
   14000a261:	cmp    rdi,rsi
   14000a264:	jb     0x14000a2d6
   14000a266:	call   0x14000b248
   14000a26b:	cmp    QWORD PTR [rdi],rax
   14000a26e:	jne    0x14000a272
   14000a270:	jmp    0x14000a258
   14000a272:	cmp    rdi,rsi
   14000a275:	jb     0x14000a2d6
   14000a277:	mov    rcx,QWORD PTR [rdi]
   14000a27a:	call   QWORD PTR [rip+0xffffffffffff6e80]        # 0x140001100
   14000a280:	mov    rbx,rax
   14000a283:	call   0x14000b248
   14000a288:	mov    QWORD PTR [rdi],rax
   14000a28b:	call   rbx
   14000a28d:	mov    rcx,QWORD PTR [rip+0xe964]        # 0x140018bf8
   14000a294:	call   QWORD PTR [rip+0xffffffffffff6e66]        # 0x140001100
   14000a29a:	mov    rbx,rax
   14000a29d:	mov    rcx,QWORD PTR [rip+0xe94c]        # 0x140018bf0
   14000a2a4:	call   QWORD PTR [rip+0xffffffffffff6e56]        # 0x140001100
   14000a2aa:	cmp    r14,rbx
   14000a2ad:	jne    0x14000a2b4
   14000a2af:	cmp    r13,rax
   14000a2b2:	je     0x14000a270
   14000a2b4:	mov    r14,rbx
   14000a2b7:	mov    QWORD PTR [rsp+0x28],rbx
   14000a2bc:	mov    rsi,rbx
   14000a2bf:	mov    QWORD PTR [rsp+0x30],rbx
   14000a2c4:	mov    r13,rax
   14000a2c7:	mov    QWORD PTR [rsp+0x38],rax
   14000a2cc:	mov    rdi,rax
   14000a2cf:	mov    QWORD PTR [rsp+0x20],rax
   14000a2d4:	jmp    0x14000a270
   14000a2d6:	lea    rdx,[rip+0xffffffffffff709b]        # 0x140001378
   14000a2dd:	lea    rcx,[rip+0xffffffffffff707c]        # 0x140001360
   14000a2e4:	call   0x14000a08c
   14000a2e9:	lea    rdx,[rip+0xffffffffffff7098]        # 0x140001388
   14000a2f0:	lea    rcx,[rip+0xffffffffffff7089]        # 0x140001380
   14000a2f7:	call   0x14000a08c
   14000a2fc:	nop
   14000a2fd:	test   r12d,r12d
   14000a300:	je     0x14000a311
   14000a302:	mov    ecx,0x8
   14000a307:	call   0x14000bdec
   14000a30c:	test   r12d,r12d
   14000a30f:	jne    0x14000a337
   14000a311:	mov    DWORD PTR [rip+0xc08d],0x1        # 0x1400163a8
   14000a31b:	mov    ecx,0x8
   14000a320:	call   0x14000bdec
   14000a325:	mov    ecx,r15d
   14000a328:	call   0x140009fc4
   14000a32d:	mov    ecx,r15d
   14000a330:	call   QWORD PTR [rip+0xffffffffffff6dc2]        # 0x1400010f8
   14000a336:	int3   
   14000a337:	mov    rbx,QWORD PTR [rsp+0x70]
   14000a33c:	mov    rsi,QWORD PTR [rsp+0x78]
   14000a341:	add    rsp,0x40
   14000a345:	pop    r15
   14000a347:	pop    r14
   14000a349:	pop    r13
   14000a34b:	pop    r12
   14000a34d:	pop    rdi
   14000a34e:	ret    
   14000a34f:	int3   
   14000a350:	int3   
   14000a351:	int3   
   14000a352:	int3   
   14000a353:	int3   
   14000a354:	int3   
   14000a355:	int3   
   14000a356:	int3   
   14000a357:	int3   
   14000a358:	xor    r8d,r8d
   14000a35b:	xor    edx,edx
   14000a35d:	jmp    0x14000a1c0
   14000a362:	int3   
   14000a363:	int3   
   14000a364:	int3   
   14000a365:	int3   
   14000a366:	int3   
   14000a367:	int3   
   14000a368:	xor    r8d,r8d
   14000a36b:	lea    edx,[r8+0x1]
   14000a36f:	jmp    0x14000a1c0
   14000a374:	int3   
   14000a375:	int3   
   14000a376:	int3   
   14000a377:	int3   
   14000a378:	int3   
   14000a379:	int3   
   14000a37a:	int3   
   14000a37b:	int3   
   14000a37c:	xor    edx,edx
   14000a37e:	xor    ecx,ecx
   14000a380:	lea    r8d,[rdx+0x1]
   14000a384:	jmp    0x14000a1c0
   14000a389:	int3   
   14000a38a:	int3   
   14000a38b:	int3   
   14000a38c:	int3   
   14000a38d:	int3   
   14000a38e:	int3   
   14000a38f:	int3   
   14000a390:	mov    edx,0x1
   14000a395:	xor    ecx,ecx
   14000a397:	mov    r8d,edx
   14000a39a:	jmp    0x14000a1c0
   14000a39f:	int3   
   14000a3a0:	int3   
   14000a3a1:	int3   
   14000a3a2:	int3   
   14000a3a3:	int3   
   14000a3a4:	int3   
   14000a3a5:	int3   
   14000a3a6:	int3   
   14000a3a7:	int3   
   14000a3a8:	rex push rbx
   14000a3aa:	sub    rsp,0x20
   14000a3ae:	mov    ebx,ecx
   14000a3b0:	call   0x14000a668
   14000a3b5:	mov    ecx,ebx
   14000a3b7:	call   0x14000a404
   14000a3bc:	xor    r8d,r8d
   14000a3bf:	mov    ecx,0xff
   14000a3c4:	lea    edx,[r8+0x1]
   14000a3c8:	call   0x14000a1c0
   14000a3cd:	int3   
   14000a3ce:	int3   
   14000a3cf:	int3   
   14000a3d0:	int3   
   14000a3d1:	int3   
   14000a3d2:	int3   
   14000a3d3:	int3   
   14000a3d4:	lea    r8,[rip+0xffffffffffff78b5]        # 0x140001c90
   14000a3db:	xor    eax,eax
   14000a3dd:	mov    rdx,r8
   14000a3e0:	cmp    ecx,DWORD PTR [rdx]
   14000a3e2:	je     0x14000a3f2
   14000a3e4:	inc    eax
   14000a3e6:	add    rdx,0x10
   14000a3ea:	cmp    eax,0x16
   14000a3ed:	jb     0x14000a3e0
   14000a3ef:	xor    eax,eax
   14000a3f1:	ret    
   14000a3f2:	cdqe   
   14000a3f4:	add    rax,rax
   14000a3f7:	mov    rax,QWORD PTR [r8+rax*8+0x8]
   14000a3fc:	ret    
   14000a3fd:	int3   
   14000a3fe:	int3   
   14000a3ff:	int3   
   14000a400:	int3   
   14000a401:	int3   
   14000a402:	int3   
   14000a403:	int3   
   14000a404:	mov    QWORD PTR [rsp+0x10],rbx
   14000a409:	mov    QWORD PTR [rsp+0x18],rbp
   14000a40e:	mov    QWORD PTR [rsp+0x20],rsi
   14000a413:	push   rdi
   14000a414:	push   r12
   14000a416:	push   r13
   14000a418:	sub    rsp,0x250
   14000a41f:	mov    rax,QWORD PTR [rip+0xac4a]        # 0x140015070
   14000a426:	xor    rax,rsp
   14000a429:	mov    QWORD PTR [rsp+0x240],rax
   14000a431:	mov    edi,ecx
   14000a433:	call   0x14000a3d4
   14000a438:	xor    esi,esi
   14000a43a:	mov    rbx,rax
   14000a43d:	test   rax,rax
   14000a440:	je     0x14000a634
   14000a446:	lea    ecx,[rsi+0x3]
   14000a449:	call   0x14000c8cc
   14000a44e:	cmp    eax,0x1
   14000a451:	je     0x14000a5cc
   14000a457:	lea    ecx,[rsi+0x3]
   14000a45a:	call   0x14000c8cc
   14000a45f:	test   eax,eax
   14000a461:	jne    0x14000a470
   14000a463:	cmp    DWORD PTR [rip+0xab96],0x1        # 0x140015000
   14000a46a:	je     0x14000a5cc
   14000a470:	cmp    edi,0xfc
   14000a476:	je     0x14000a634
   14000a47c:	lea    rbp,[rip+0xbf2d]        # 0x1400163b0
   14000a483:	mov    r12d,0x314
   14000a489:	lea    r8,[rip+0xffffffffffff79f0]        # 0x140001e80
   14000a490:	mov    rcx,rbp
   14000a493:	mov    edx,r12d
   14000a496:	call   0x140009ee8
   14000a49b:	xor    ecx,ecx
   14000a49d:	test   eax,eax
   14000a49f:	jne    0x14000a5b9
   14000a4a5:	lea    r13,[rip+0xbf36]        # 0x1400163e2
   14000a4ac:	mov    r8d,0x104
   14000a4b2:	mov    WORD PTR [rip+0xc131],si        # 0x1400165ea
   14000a4b9:	mov    rdx,r13
   14000a4bc:	call   QWORD PTR [rip+0xffffffffffff6b66]        # 0x140001028
   14000a4c2:	lea    edi,[r12-0x19]
   14000a4c7:	test   eax,eax
   14000a4c9:	jne    0x14000a4f5
   14000a4cb:	lea    r8,[rip+0xffffffffffff797e]        # 0x140001e50
   14000a4d2:	mov    edx,edi
   14000a4d4:	mov    rcx,r13
   14000a4d7:	call   0x140009ee8
   14000a4dc:	test   eax,eax
   14000a4de:	je     0x14000a4f5
   14000a4e0:	xor    r9d,r9d
   14000a4e3:	xor    r8d,r8d
   14000a4e6:	xor    edx,edx
   14000a4e8:	xor    ecx,ecx
   14000a4ea:	mov    QWORD PTR [rsp+0x20],rsi
   14000a4ef:	call   0x14000b988
   14000a4f4:	int3   
   14000a4f5:	mov    rcx,r13
   14000a4f8:	call   0x14000c8ac
   14000a4fd:	inc    rax
   14000a500:	cmp    rax,0x3c
   14000a504:	jbe    0x14000a54d
   14000a506:	mov    rcx,r13
   14000a509:	call   0x14000c8ac
   14000a50e:	lea    r8,[rip+0xffffffffffff7933]        # 0x140001e48
   14000a515:	mov    r9d,0x3
   14000a51b:	lea    rcx,[rbp+rax*2-0x44]
   14000a520:	mov    rax,rcx
   14000a523:	sub    rax,r13
   14000a526:	sar    rax,1
   14000a529:	sub    rdi,rax
   14000a52c:	mov    rdx,rdi
   14000a52f:	call   0x140009df8
   14000a534:	test   eax,eax
   14000a536:	je     0x14000a54d
   14000a538:	xor    r9d,r9d
   14000a53b:	xor    r8d,r8d
   14000a53e:	xor    edx,edx
   14000a540:	xor    ecx,ecx
   14000a542:	mov    QWORD PTR [rsp+0x20],rsi
   14000a547:	call   0x14000b988
   14000a54c:	int3   
   14000a54d:	lea    r8,[rip+0xffffffffffff78e8]        # 0x140001e3c
   14000a554:	mov    rdx,r12
   14000a557:	mov    rcx,rbp
   14000a55a:	call   0x14000c820
   14000a55f:	test   eax,eax
   14000a561:	jne    0x14000a5a4
   14000a563:	mov    r8,rbx
   14000a566:	mov    rdx,r12
   14000a569:	mov    rcx,rbp
   14000a56c:	call   0x14000c820
   14000a571:	test   eax,eax
   14000a573:	jne    0x14000a58f
   14000a575:	lea    rdx,[rip+0xffffffffffff7874]        # 0x140001df0
   14000a57c:	mov    r8d,0x12010
   14000a582:	mov    rcx,rbp
   14000a585:	call   0x14000c610
   14000a58a:	jmp    0x14000a634
   14000a58f:	xor    r9d,r9d
   14000a592:	xor    r8d,r8d
   14000a595:	xor    edx,edx
   14000a597:	xor    ecx,ecx
   14000a599:	mov    QWORD PTR [rsp+0x20],rsi
   14000a59e:	call   0x14000b988
   14000a5a3:	int3   
   14000a5a4:	xor    r9d,r9d
   14000a5a7:	xor    r8d,r8d
   14000a5aa:	xor    edx,edx
   14000a5ac:	xor    ecx,ecx
   14000a5ae:	mov    QWORD PTR [rsp+0x20],rsi
   14000a5b3:	call   0x14000b988
   14000a5b8:	int3   
   14000a5b9:	xor    r9d,r9d
   14000a5bc:	xor    r8d,r8d
   14000a5bf:	xor    edx,edx
   14000a5c1:	mov    QWORD PTR [rsp+0x20],rsi
   14000a5c6:	call   0x14000b988
   14000a5cb:	int3   
   14000a5cc:	mov    ecx,0xfffffff4
   14000a5d1:	call   QWORD PTR [rip+0xffffffffffff6b39]        # 0x140001110
   14000a5d7:	mov    rdi,rax
   14000a5da:	test   rax,rax
   14000a5dd:	je     0x14000a634
   14000a5df:	cmp    rax,0xffffffffffffffff
   14000a5e3:	je     0x14000a634
   14000a5e5:	mov    edx,esi
   14000a5e7:	lea    r8,[rsp+0x40]
   14000a5ec:	mov    cl,BYTE PTR [rbx]
   14000a5ee:	mov    BYTE PTR [r8],cl
   14000a5f1:	cmp    WORD PTR [rbx],si
   14000a5f4:	je     0x14000a607
   14000a5f6:	inc    edx
   14000a5f8:	inc    r8
   14000a5fb:	add    rbx,0x2
   14000a5ff:	cmp    edx,0x1f4
   14000a605:	jb     0x14000a5ec
   14000a607:	lea    rcx,[rsp+0x40]
   14000a60c:	mov    BYTE PTR [rsp+0x233],sil
   14000a614:	call   0x14000c560
   14000a619:	lea    r9,[rsp+0x30]
   14000a61e:	lea    rdx,[rsp+0x40]
   14000a623:	mov    rcx,rdi
   14000a626:	mov    r8,rax
   14000a629:	mov    QWORD PTR [rsp+0x20],rsi
   14000a62e:	call   QWORD PTR [rip+0xffffffffffff6ad4]        # 0x140001108
   14000a634:	mov    rcx,QWORD PTR [rsp+0x240]
   14000a63c:	xor    rcx,rsp
   14000a63f:	call   0x140009dd0
   14000a644:	lea    r11,[rsp+0x250]
   14000a64c:	mov    rbx,QWORD PTR [r11+0x28]
   14000a650:	mov    rbp,QWORD PTR [r11+0x30]
   14000a654:	mov    rsi,QWORD PTR [r11+0x38]
   14000a658:	mov    rsp,r11
   14000a65b:	pop    r13
   14000a65d:	pop    r12
   14000a65f:	pop    rdi
   14000a660:	ret    
   14000a661:	int3   
   14000a662:	int3   
   14000a663:	int3   
   14000a664:	int3   
   14000a665:	int3   
   14000a666:	int3   
   14000a667:	int3   
   14000a668:	sub    rsp,0x28
   14000a66c:	mov    ecx,0x3
   14000a671:	call   0x14000c8cc
   14000a676:	cmp    eax,0x1
   14000a679:	je     0x14000a692
   14000a67b:	mov    ecx,0x3
   14000a680:	call   0x14000c8cc
   14000a685:	test   eax,eax
   14000a687:	jne    0x14000a6a6
   14000a689:	cmp    DWORD PTR [rip+0xa970],0x1        # 0x140015000
   14000a690:	jne    0x14000a6a6
   14000a692:	mov    ecx,0xfc
   14000a697:	call   0x14000a404
   14000a69c:	mov    ecx,0xff
   14000a6a1:	call   0x14000a404
   14000a6a6:	add    rsp,0x28
   14000a6aa:	ret    
   14000a6ab:	int3   
   14000a6ac:	int3   
   14000a6ad:	int3   
   14000a6ae:	int3   
   14000a6af:	int3   
   14000a6b0:	int3   
   14000a6b1:	int3   
   14000a6b2:	int3   
   14000a6b3:	int3   
   14000a6b4:	mov    r11,rsp
   14000a6b7:	mov    QWORD PTR [r11+0x8],rbx
   14000a6bb:	mov    QWORD PTR [r11+0x18],rbp
   14000a6bf:	mov    QWORD PTR [r11+0x20],rsi
   14000a6c3:	mov    QWORD PTR [r11+0x10],rdx
   14000a6c7:	push   rdi
   14000a6c8:	push   r12
   14000a6ca:	push   r13
   14000a6cc:	push   r14
   14000a6ce:	push   r15
   14000a6d0:	sub    rsp,0x40
   14000a6d4:	mov    r15,QWORD PTR [r9+0x8]
   14000a6d8:	mov    r14,QWORD PTR [r9]
   14000a6db:	mov    eax,DWORD PTR [rcx+0x4]
   14000a6de:	mov    rdi,QWORD PTR [r9+0x38]
   14000a6e2:	sub    r14,r15
   14000a6e5:	mov    r12,r9
   14000a6e8:	mov    r13,rdx
   14000a6eb:	mov    rbp,rcx
   14000a6ee:	test   al,0x66
   14000a6f0:	jne    0x14000a7e3
   14000a6f6:	movsxd rsi,DWORD PTR [r9+0x48]
   14000a6fa:	mov    QWORD PTR [r11-0x38],rcx
   14000a6fe:	mov    QWORD PTR [r11-0x30],r8
   14000a702:	mov    rax,rsi
   14000a705:	cmp    esi,DWORD PTR [rdi]
   14000a707:	jae    0x14000a88e
   14000a70d:	add    rax,rax
   14000a710:	lea    rbx,[rdi+rax*8+0xc]
   14000a715:	mov    eax,DWORD PTR [rbx-0x8]
   14000a718:	cmp    r14,rax
   14000a71b:	jb     0x14000a7c9
   14000a721:	mov    eax,DWORD PTR [rbx-0x4]
   14000a724:	cmp    r14,rax
   14000a727:	jae    0x14000a7c9
   14000a72d:	cmp    DWORD PTR [rbx+0x4],0x0
   14000a731:	je     0x14000a7c9
   14000a737:	cmp    DWORD PTR [rbx],0x1
   14000a73a:	je     0x14000a755
   14000a73c:	mov    eax,DWORD PTR [rbx]
   14000a73e:	lea    rcx,[rsp+0x30]
   14000a743:	mov    rdx,r13
   14000a746:	add    rax,r15
   14000a749:	call   rax
   14000a74b:	test   eax,eax
   14000a74d:	js     0x14000a7dc
   14000a753:	jle    0x14000a7c9
   14000a755:	cmp    DWORD PTR [rbp+0x0],0xe06d7363
   14000a75c:	jne    0x14000a786
   14000a75e:	cmp    QWORD PTR [rip+0xe47a],0x0        # 0x140018be0
   14000a766:	je     0x14000a786
   14000a768:	lea    rcx,[rip+0xe471]        # 0x140018be0
   14000a76f:	call   0x14000c470
   14000a774:	test   eax,eax
   14000a776:	je     0x14000a786
   14000a778:	mov    edx,0x1
   14000a77d:	mov    rcx,rbp
   14000a780:	call   QWORD PTR [rip+0xe45a]        # 0x140018be0
   14000a786:	mov    ecx,DWORD PTR [rbx+0x4]
   14000a789:	mov    r8d,0x1
   14000a78f:	mov    rdx,r13
   14000a792:	add    rcx,r15
   14000a795:	call   0x14000c950
   14000a79a:	mov    rax,QWORD PTR [r12+0x40]
   14000a79f:	mov    edx,DWORD PTR [rbx+0x4]
   14000a7a2:	movsxd r9,DWORD PTR [rbp+0x0]
   14000a7a6:	mov    QWORD PTR [rsp+0x28],rax
   14000a7ab:	mov    rax,QWORD PTR [r12+0x28]
   14000a7b0:	add    rdx,r15
   14000a7b3:	mov    r8,rbp
   14000a7b6:	mov    rcx,r13
   14000a7b9:	mov    QWORD PTR [rsp+0x20],rax
   14000a7be:	call   QWORD PTR [rip+0xffffffffffff6954]        # 0x140001118
   14000a7c4:	call   0x14000c980
   14000a7c9:	inc    esi
   14000a7cb:	add    rbx,0x10
   14000a7cf:	cmp    esi,DWORD PTR [rdi]
   14000a7d1:	jae    0x14000a88e
   14000a7d7:	jmp    0x14000a715
   14000a7dc:	xor    eax,eax
   14000a7de:	jmp    0x14000a893
   14000a7e3:	mov    r8,QWORD PTR [r9+0x20]
   14000a7e7:	xor    ebp,ebp
   14000a7e9:	xor    r13d,r13d
   14000a7ec:	sub    r8,r15
   14000a7ef:	test   al,0x20
   14000a7f1:	je     0x14000a82e
   14000a7f3:	xor    edx,edx
   14000a7f5:	cmp    DWORD PTR [rdi],edx
   14000a7f7:	jbe    0x14000a82e
   14000a7f9:	lea    rcx,[rdi+0x8]
   14000a7fd:	mov    eax,DWORD PTR [rcx-0x4]
   14000a800:	cmp    r8,rax
   14000a803:	jb     0x14000a80c
   14000a805:	mov    eax,DWORD PTR [rcx]
   14000a807:	cmp    r8,rax
   14000a80a:	jbe    0x14000a818
   14000a80c:	inc    edx
   14000a80e:	add    rcx,0x10
   14000a812:	cmp    edx,DWORD PTR [rdi]
   14000a814:	jae    0x14000a82e
   14000a816:	jmp    0x14000a7fd
   14000a818:	mov    eax,edx
   14000a81a:	add    rax,rax
   14000a81d:	mov    ecx,DWORD PTR [rdi+rax*8+0x10]
   14000a821:	test   ecx,ecx
   14000a823:	jne    0x14000a82b
   14000a825:	mov    ebp,DWORD PTR [rdi+rax*8+0xc]
   14000a829:	jmp    0x14000a82e
   14000a82b:	mov    r13d,ecx
   14000a82e:	movsxd rsi,DWORD PTR [r9+0x48]
   14000a832:	mov    rbx,rsi
   14000a835:	cmp    esi,DWORD PTR [rdi]
   14000a837:	jae    0x14000a88e
   14000a839:	inc    rbx
   14000a83c:	shl    rbx,0x4
   14000a840:	add    rbx,rdi
   14000a843:	mov    eax,DWORD PTR [rbx-0xc]
   14000a846:	cmp    r14,rax
   14000a849:	jb     0x14000a884
   14000a84b:	mov    eax,DWORD PTR [rbx-0x8]
   14000a84e:	cmp    r14,rax
   14000a851:	jae    0x14000a884
   14000a853:	test   r13d,r13d
   14000a856:	je     0x14000a85d
   14000a858:	cmp    r13d,DWORD PTR [rbx]
   14000a85b:	je     0x14000a88e
   14000a85d:	test   ebp,ebp
   14000a85f:	je     0x14000a866
   14000a861:	cmp    ebp,DWORD PTR [rbx-0x4]
   14000a864:	je     0x14000a88e
   14000a866:	cmp    DWORD PTR [rbx],0x0
   14000a869:	jne    0x14000a884
   14000a86b:	mov    rdx,QWORD PTR [rsp+0x78]
   14000a870:	lea    eax,[rsi+0x1]
   14000a873:	mov    cl,0x1
   14000a875:	mov    DWORD PTR [r12+0x48],eax
   14000a87a:	mov    r8d,DWORD PTR [rbx-0x4]
   14000a87e:	add    r8,r15
   14000a881:	call   r8
   14000a884:	inc    esi
   14000a886:	add    rbx,0x10
   14000a88a:	cmp    esi,DWORD PTR [rdi]
   14000a88c:	jb     0x14000a843
   14000a88e:	mov    eax,0x1
   14000a893:	lea    r11,[rsp+0x40]
   14000a898:	mov    rbx,QWORD PTR [r11+0x30]
   14000a89c:	mov    rbp,QWORD PTR [r11+0x40]
   14000a8a0:	mov    rsi,QWORD PTR [r11+0x48]
   14000a8a4:	mov    rsp,r11
   14000a8a7:	pop    r15
   14000a8a9:	pop    r14
   14000a8ab:	pop    r13
   14000a8ad:	pop    r12
   14000a8af:	pop    rdi
   14000a8b0:	ret    
   14000a8b1:	int3   
   14000a8b2:	int3   
   14000a8b3:	int3   
   14000a8b4:	int3   
   14000a8b5:	int3   
   14000a8b6:	int3   
   14000a8b7:	int3   
   14000a8b8:	mov    QWORD PTR [rsp+0x8],rbx
   14000a8bd:	mov    QWORD PTR [rsp+0x10],rbp
   14000a8c2:	mov    QWORD PTR [rsp+0x18],rsi
   14000a8c7:	push   rdi
   14000a8c8:	sub    rsp,0x20
   14000a8cc:	mov    rsi,rdx
   14000a8cf:	mov    edi,ecx
   14000a8d1:	call   0x14000b340
   14000a8d6:	xor    r9d,r9d
   14000a8d9:	mov    rbx,rax
   14000a8dc:	test   rax,rax
   14000a8df:	je     0x14000aa71
   14000a8e5:	mov    rdx,QWORD PTR [rax+0xa0]
   14000a8ec:	mov    rcx,rdx
   14000a8ef:	cmp    DWORD PTR [rcx],edi
   14000a8f1:	je     0x14000a903
   14000a8f3:	lea    rax,[rdx+0xc0]
   14000a8fa:	add    rcx,0x10
   14000a8fe:	cmp    rcx,rax
   14000a901:	jb     0x14000a8ef
   14000a903:	lea    rax,[rdx+0xc0]
   14000a90a:	cmp    rcx,rax
   14000a90d:	jae    0x14000a913
   14000a90f:	cmp    DWORD PTR [rcx],edi
   14000a911:	je     0x14000a916
   14000a913:	mov    rcx,r9
   14000a916:	test   rcx,rcx
   14000a919:	je     0x14000aa71
   14000a91f:	mov    r8,QWORD PTR [rcx+0x8]
   14000a923:	test   r8,r8
   14000a926:	je     0x14000aa71
   14000a92c:	cmp    r8,0x5
   14000a930:	jne    0x14000a93f
   14000a932:	mov    QWORD PTR [rcx+0x8],r9
   14000a936:	lea    eax,[r8-0x4]
   14000a93a:	jmp    0x14000aa73
   14000a93f:	cmp    r8,0x1
   14000a943:	jne    0x14000a94d
   14000a945:	or     eax,0xffffffff
   14000a948:	jmp    0x14000aa73
   14000a94d:	mov    rbp,QWORD PTR [rbx+0xa8]
   14000a954:	mov    QWORD PTR [rbx+0xa8],rsi
   14000a95b:	cmp    DWORD PTR [rcx+0x4],0x8
   14000a95f:	jne    0x14000aa5b
   14000a965:	mov    edx,0x30
   14000a96a:	mov    rax,QWORD PTR [rbx+0xa0]
   14000a971:	add    rdx,0x10
   14000a975:	mov    QWORD PTR [rdx+rax*1-0x8],r9
   14000a97a:	cmp    rdx,0xc0
   14000a981:	jl     0x14000a96a
   14000a983:	cmp    DWORD PTR [rcx],0xc000008e
   14000a989:	mov    edi,DWORD PTR [rbx+0xb0]
   14000a98f:	jne    0x14000a9a0
   14000a991:	mov    DWORD PTR [rbx+0xb0],0x83
   14000a99b:	jmp    0x14000aa45
   14000a9a0:	cmp    DWORD PTR [rcx],0xc0000090
   14000a9a6:	jne    0x14000a9b7
   14000a9a8:	mov    DWORD PTR [rbx+0xb0],0x81
   14000a9b2:	jmp    0x14000aa45
   14000a9b7:	cmp    DWORD PTR [rcx],0xc0000091
   14000a9bd:	jne    0x14000a9cb
   14000a9bf:	mov    DWORD PTR [rbx+0xb0],0x84
   14000a9c9:	jmp    0x14000aa45
   14000a9cb:	cmp    DWORD PTR [rcx],0xc0000093
   14000a9d1:	jne    0x14000a9df
   14000a9d3:	mov    DWORD PTR [rbx+0xb0],0x85
   14000a9dd:	jmp    0x14000aa45
   14000a9df:	cmp    DWORD PTR [rcx],0xc000008d
   14000a9e5:	jne    0x14000a9f3
   14000a9e7:	mov    DWORD PTR [rbx+0xb0],0x82
   14000a9f1:	jmp    0x14000aa45
   14000a9f3:	cmp    DWORD PTR [rcx],0xc000008f
   14000a9f9:	jne    0x14000aa07
   14000a9fb:	mov    DWORD PTR [rbx+0xb0],0x86
   14000aa05:	jmp    0x14000aa45
   14000aa07:	cmp    DWORD PTR [rcx],0xc0000092
   14000aa0d:	jne    0x14000aa1b
   14000aa0f:	mov    DWORD PTR [rbx+0xb0],0x8a
   14000aa19:	jmp    0x14000aa45
   14000aa1b:	cmp    DWORD PTR [rcx],0xc00002b5
   14000aa21:	jne    0x14000aa2f
   14000aa23:	mov    DWORD PTR [rbx+0xb0],0x8d
   14000aa2d:	jmp    0x14000aa45
   14000aa2f:	cmp    DWORD PTR [rcx],0xc00002b4
   14000aa35:	mov    eax,edi
   14000aa37:	mov    edx,0x8e
   14000aa3c:	cmove  eax,edx
   14000aa3f:	mov    DWORD PTR [rbx+0xb0],eax
   14000aa45:	mov    edx,DWORD PTR [rbx+0xb0]
   14000aa4b:	mov    ecx,0x8
   14000aa50:	call   r8
   14000aa53:	mov    DWORD PTR [rbx+0xb0],edi
   14000aa59:	jmp    0x14000aa65
   14000aa5b:	mov    QWORD PTR [rcx+0x8],r9
   14000aa5f:	mov    ecx,DWORD PTR [rcx+0x4]
   14000aa62:	call   r8
   14000aa65:	mov    QWORD PTR [rbx+0xa8],rbp
   14000aa6c:	jmp    0x14000a945
   14000aa71:	xor    eax,eax
   14000aa73:	mov    rbx,QWORD PTR [rsp+0x30]
   14000aa78:	mov    rbp,QWORD PTR [rsp+0x38]
   14000aa7d:	mov    rsi,QWORD PTR [rsp+0x40]
   14000aa82:	add    rsp,0x20
   14000aa86:	pop    rdi
   14000aa87:	ret    
   14000aa88:	int3   
   14000aa89:	int3   
   14000aa8a:	int3   
   14000aa8b:	int3   
   14000aa8c:	int3   
   14000aa8d:	int3   
   14000aa8e:	int3   
   14000aa8f:	int3   
   14000aa90:	mov    rax,rsp
   14000aa93:	mov    QWORD PTR [rax+0x8],rbx
   14000aa97:	mov    QWORD PTR [rax+0x10],rbp
   14000aa9b:	mov    QWORD PTR [rax+0x18],rsi
   14000aa9f:	mov    QWORD PTR [rax+0x20],rdi
   14000aaa3:	push   r12
   14000aaa5:	sub    rsp,0x30
   14000aaa9:	mov    rbx,QWORD PTR [rip+0xb898]        # 0x140016348
   14000aab0:	xor    r12d,r12d
   14000aab3:	mov    edi,r12d
   14000aab6:	test   rbx,rbx
   14000aab9:	jne    0x14000aad8
   14000aabb:	or     eax,0xffffffff
   14000aabe:	jmp    0x14000ab7d
   14000aac3:	cmp    ax,0x3d
   14000aac7:	je     0x14000aacb
   14000aac9:	inc    edi
   14000aacb:	mov    rcx,rbx
   14000aace:	call   0x14000c8ac
   14000aad3:	lea    rbx,[rbx+rax*2+0x2]
   14000aad8:	movzx  eax,WORD PTR [rbx]
   14000aadb:	test   ax,ax
   14000aade:	jne    0x14000aac3
   14000aae0:	lea    eax,[rdi+0x1]
   14000aae3:	mov    edx,0x8
   14000aae8:	movsxd rcx,eax
   14000aaeb:	call   0x14000ca50
   14000aaf0:	mov    rdi,rax
   14000aaf3:	mov    QWORD PTR [rip+0xb886],rax        # 0x140016380
   14000aafa:	test   rax,rax
   14000aafd:	je     0x14000aabb
   14000aaff:	mov    rbx,QWORD PTR [rip+0xb842]        # 0x140016348
   14000ab06:	cmp    WORD PTR [rbx],r12w
   14000ab0a:	je     0x14000ab5f
   14000ab0c:	mov    rcx,rbx
   14000ab0f:	call   0x14000c8ac
   14000ab14:	cmp    WORD PTR [rbx],0x3d
   14000ab18:	lea    esi,[rax+0x1]
   14000ab1b:	je     0x14000ab4b
   14000ab1d:	movsxd rbp,esi
   14000ab20:	mov    edx,0x2
   14000ab25:	mov    rcx,rbp
   14000ab28:	call   0x14000ca50
   14000ab2d:	mov    QWORD PTR [rdi],rax
   14000ab30:	test   rax,rax
   14000ab33:	je     0x14000abad
   14000ab35:	mov    r8,rbx
   14000ab38:	mov    rdx,rbp
   14000ab3b:	mov    rcx,rax
   14000ab3e:	call   0x140009ee8
   14000ab43:	test   eax,eax
   14000ab45:	jne    0x14000ab98
   14000ab47:	add    rdi,0x8
   14000ab4b:	movsxd rax,esi
   14000ab4e:	lea    rbx,[rbx+rax*2]
   14000ab52:	cmp    WORD PTR [rbx],r12w
   14000ab56:	jne    0x14000ab0c
   14000ab58:	mov    rbx,QWORD PTR [rip+0xb7e9]        # 0x140016348
   14000ab5f:	mov    rcx,rbx
   14000ab62:	call   0x14000c988
   14000ab67:	mov    QWORD PTR [rip+0xb7da],r12        # 0x140016348
   14000ab6e:	mov    QWORD PTR [rdi],r12
   14000ab71:	mov    DWORD PTR [rip+0xe06d],0x1        # 0x140018be8
   14000ab7b:	xor    eax,eax
   14000ab7d:	mov    rbx,QWORD PTR [rsp+0x40]
   14000ab82:	mov    rbp,QWORD PTR [rsp+0x48]
   14000ab87:	mov    rsi,QWORD PTR [rsp+0x50]
   14000ab8c:	mov    rdi,QWORD PTR [rsp+0x58]
   14000ab91:	add    rsp,0x30
   14000ab95:	pop    r12
   14000ab97:	ret    
   14000ab98:	xor    r9d,r9d
   14000ab9b:	xor    r8d,r8d
   14000ab9e:	xor    edx,edx
   14000aba0:	xor    ecx,ecx
   14000aba2:	mov    QWORD PTR [rsp+0x20],r12
   14000aba7:	call   0x14000b988
   14000abac:	int3   
   14000abad:	mov    rcx,QWORD PTR [rip+0xb7cc]        # 0x140016380
   14000abb4:	call   0x14000c988
   14000abb9:	mov    QWORD PTR [rip+0xb7c0],r12        # 0x140016380
   14000abc0:	jmp    0x14000aabb
   14000abc5:	int3   
   14000abc6:	int3   
   14000abc7:	int3   
   14000abc8:	int3   
   14000abc9:	int3   
   14000abca:	int3   
   14000abcb:	int3   
   14000abcc:	mov    rax,rsp
   14000abcf:	mov    QWORD PTR [rax+0x8],rbx
   14000abd3:	mov    QWORD PTR [rax+0x10],rsi
   14000abd7:	mov    QWORD PTR [rax+0x18],rdi
   14000abdb:	mov    QWORD PTR [rax+0x20],r13
   14000abdf:	push   r14
   14000abe1:	mov    r11,QWORD PTR [rsp+0x30]
   14000abe6:	xor    esi,esi
   14000abe8:	mov    rbx,r9
   14000abeb:	mov    DWORD PTR [r11],esi
   14000abee:	mov    r10,rdx
   14000abf1:	mov    DWORD PTR [r9],0x1
   14000abf8:	test   rdx,rdx
   14000abfb:	je     0x14000ac04
   14000abfd:	mov    QWORD PTR [rdx],r8
   14000ac00:	add    r10,0x8
   14000ac04:	mov    edx,esi
   14000ac06:	mov    r14d,0x22
   14000ac0c:	cmp    WORD PTR [rcx],r14w
   14000ac10:	jne    0x14000ac25
   14000ac12:	test   edx,edx
   14000ac14:	mov    eax,esi
   14000ac16:	sete   al
   14000ac19:	add    rcx,0x2
   14000ac1d:	mov    edx,eax
   14000ac1f:	movzx  eax,r14w
   14000ac23:	jmp    0x14000ac44
   14000ac25:	inc    DWORD PTR [r11]
   14000ac28:	test   r8,r8
   14000ac2b:	je     0x14000ac38
   14000ac2d:	movzx  eax,WORD PTR [rcx]
   14000ac30:	mov    WORD PTR [r8],ax
   14000ac34:	add    r8,0x2
   14000ac38:	movzx  eax,WORD PTR [rcx]
   14000ac3b:	add    rcx,0x2
   14000ac3f:	test   ax,ax
   14000ac42:	je     0x14000ac60
   14000ac44:	test   edx,edx
   14000ac46:	jne    0x14000ac0c
   14000ac48:	cmp    ax,0x20
   14000ac4c:	je     0x14000ac54
   14000ac4e:	cmp    ax,0x9
   14000ac52:	jne    0x14000ac0c
   14000ac54:	test   r8,r8
   14000ac57:	je     0x14000ac64
   14000ac59:	mov    WORD PTR [r8-0x2],si
   14000ac5e:	jmp    0x14000ac64
   14000ac60:	sub    rcx,0x2
   14000ac64:	mov    edi,esi
   14000ac66:	mov    r13d,0x5c
   14000ac6c:	cmp    WORD PTR [rcx],si
   14000ac6f:	je     0x14000ad43
   14000ac75:	cmp    WORD PTR [rcx],0x20
   14000ac79:	je     0x14000ac81
   14000ac7b:	cmp    WORD PTR [rcx],0x9
   14000ac7f:	jne    0x14000ac87
   14000ac81:	add    rcx,0x2
   14000ac85:	jmp    0x14000ac75
   14000ac87:	cmp    WORD PTR [rcx],si
   14000ac8a:	je     0x14000ad43
   14000ac90:	test   r10,r10
   14000ac93:	je     0x14000ac9c
   14000ac95:	mov    QWORD PTR [r10],r8
   14000ac98:	add    r10,0x8
   14000ac9c:	inc    DWORD PTR [rbx]
   14000ac9e:	mov    r9d,0x1
   14000aca4:	mov    edx,esi
   14000aca6:	jmp    0x14000acae
   14000aca8:	add    rcx,0x2
   14000acac:	inc    edx
   14000acae:	cmp    WORD PTR [rcx],r13w
   14000acb2:	je     0x14000aca8
   14000acb4:	cmp    WORD PTR [rcx],r14w
   14000acb8:	jne    0x14000acf4
   14000acba:	test   r9b,dl
   14000acbd:	jne    0x14000acde
   14000acbf:	test   edi,edi
   14000acc1:	je     0x14000acd2
   14000acc3:	lea    rax,[rcx+0x2]
   14000acc7:	cmp    WORD PTR [rax],r14w
   14000accb:	jne    0x14000acd2
   14000accd:	mov    rcx,rax
   14000acd0:	jmp    0x14000acde
   14000acd2:	test   edi,edi
   14000acd4:	mov    eax,esi
   14000acd6:	mov    r9d,esi
   14000acd9:	sete   al
   14000acdc:	mov    edi,eax
   14000acde:	shr    edx,1
   14000ace0:	jmp    0x14000acf4
   14000ace2:	dec    edx
   14000ace4:	test   r8,r8
   14000ace7:	je     0x14000acf1
   14000ace9:	mov    WORD PTR [r8],r13w
   14000aced:	add    r8,0x2
   14000acf1:	inc    DWORD PTR [r11]
   14000acf4:	test   edx,edx
   14000acf6:	jne    0x14000ace2
   14000acf8:	movzx  eax,WORD PTR [rcx]
   14000acfb:	test   ax,ax
   14000acfe:	je     0x14000ad2e
   14000ad00:	test   edi,edi
   14000ad02:	jne    0x14000ad10
   14000ad04:	cmp    ax,0x20
   14000ad08:	je     0x14000ad2e
   14000ad0a:	cmp    ax,0x9
   14000ad0e:	je     0x14000ad2e
   14000ad10:	test   r9d,r9d
   14000ad13:	je     0x14000ad25
   14000ad15:	test   r8,r8
   14000ad18:	je     0x14000ad22
   14000ad1a:	mov    WORD PTR [r8],ax
   14000ad1e:	add    r8,0x2
   14000ad22:	inc    DWORD PTR [r11]
   14000ad25:	add    rcx,0x2
   14000ad29:	jmp    0x14000ac9e
   14000ad2e:	test   r8,r8
   14000ad31:	je     0x14000ad3b
   14000ad33:	mov    WORD PTR [r8],si
   14000ad37:	add    r8,0x2
   14000ad3b:	inc    DWORD PTR [r11]
   14000ad3e:	jmp    0x14000ac6c
   14000ad43:	test   r10,r10
   14000ad46:	je     0x14000ad4b
   14000ad48:	mov    QWORD PTR [r10],rsi
   14000ad4b:	inc    DWORD PTR [rbx]
   14000ad4d:	mov    rsi,QWORD PTR [rsp+0x18]
   14000ad52:	mov    rdi,QWORD PTR [rsp+0x20]
   14000ad57:	mov    rbx,QWORD PTR [rsp+0x10]
   14000ad5c:	mov    r13,QWORD PTR [rsp+0x28]
   14000ad61:	pop    r14
   14000ad63:	ret    
   14000ad64:	int3   
   14000ad65:	int3   
   14000ad66:	int3   
   14000ad67:	int3   
   14000ad68:	int3   
   14000ad69:	int3   
   14000ad6a:	int3   
   14000ad6b:	int3   
   14000ad6c:	mov    QWORD PTR [rsp+0x18],rbx
   14000ad71:	push   rbp
   14000ad72:	push   rsi
   14000ad73:	push   rdi
   14000ad74:	sub    rsp,0x30
   14000ad78:	lea    rdi,[rip+0xbc61]        # 0x1400169e0
   14000ad7f:	xor    ebp,ebp
   14000ad81:	mov    r8d,0x104
   14000ad87:	mov    rdx,rdi
   14000ad8a:	xor    ecx,ecx
   14000ad8c:	mov    WORD PTR [rip+0xbe55],bp        # 0x140016be8
   14000ad93:	call   QWORD PTR [rip+0xffffffffffff628f]        # 0x140001028
   14000ad99:	mov    rbx,QWORD PTR [rip+0xde78]        # 0x140018c18
   14000ada0:	mov    QWORD PTR [rip+0xb5f1],rdi        # 0x140016398
   14000ada7:	test   rbx,rbx
   14000adaa:	je     0x14000adb1
   14000adac:	cmp    WORD PTR [rbx],bp
   14000adaf:	jne    0x14000adb4
   14000adb1:	mov    rbx,rdi
   14000adb4:	lea    rax,[rsp+0x58]
   14000adb9:	lea    r9,[rsp+0x50]
   14000adbe:	xor    r8d,r8d
   14000adc1:	xor    edx,edx
   14000adc3:	mov    rcx,rbx
   14000adc6:	mov    QWORD PTR [rsp+0x20],rax
   14000adcb:	call   0x14000abcc
   14000add0:	movsxd rsi,DWORD PTR [rsp+0x50]
   14000add5:	movabs rax,0x1fffffffffffffff
   14000addf:	cmp    rsi,rax
   14000ade2:	jae    0x14000ae4c
   14000ade4:	movsxd rax,DWORD PTR [rsp+0x58]
   14000ade9:	movabs rcx,0x7fffffffffffffff
   14000adf3:	cmp    rax,rcx
   14000adf6:	jae    0x14000ae4c
   14000adf8:	lea    rcx,[rax+rsi*4]
   14000adfc:	add    rax,rax
   14000adff:	add    rcx,rcx
   14000ae02:	cmp    rcx,rax
   14000ae05:	jb     0x14000ae4c
   14000ae07:	call   0x14000c9cc
   14000ae0c:	mov    rdi,rax
   14000ae0f:	test   rax,rax
   14000ae12:	je     0x14000ae4c
   14000ae14:	lea    r8,[rax+rsi*8]
   14000ae18:	lea    rax,[rsp+0x58]
   14000ae1d:	lea    r9,[rsp+0x50]
   14000ae22:	mov    rdx,rdi
   14000ae25:	mov    rcx,rbx
   14000ae28:	mov    QWORD PTR [rsp+0x20],rax
   14000ae2d:	call   0x14000abcc
   14000ae32:	mov    r11d,DWORD PTR [rsp+0x50]
   14000ae37:	mov    QWORD PTR [rip+0xb52a],rdi        # 0x140016368
   14000ae3e:	dec    r11d
   14000ae41:	xor    eax,eax
   14000ae43:	mov    DWORD PTR [rip+0xb512],r11d        # 0x14001635c
   14000ae4a:	jmp    0x14000ae4f
   14000ae4c:	or     eax,0xffffffff
   14000ae4f:	mov    rbx,QWORD PTR [rsp+0x60]
   14000ae54:	add    rsp,0x30
   14000ae58:	pop    rdi
   14000ae59:	pop    rsi
   14000ae5a:	pop    rbp
   14000ae5b:	ret    
   14000ae5c:	int3   
   14000ae5d:	int3   
   14000ae5e:	int3   
   14000ae5f:	int3   
   14000ae60:	int3   
   14000ae61:	int3   
   14000ae62:	int3   
   14000ae63:	int3   
   14000ae64:	mov    QWORD PTR [rsp+0x8],rbx
   14000ae69:	mov    QWORD PTR [rsp+0x10],rbp
   14000ae6e:	mov    QWORD PTR [rsp+0x18],rsi
   14000ae73:	push   rdi
   14000ae74:	sub    rsp,0x20
   14000ae78:	call   QWORD PTR [rip+0xffffffffffff62aa]        # 0x140001128
   14000ae7e:	xor    ebx,ebx
   14000ae80:	mov    rdi,rax
   14000ae83:	test   rax,rax
   14000ae86:	je     0x14000aed4
   14000ae88:	cmp    WORD PTR [rdi],bx
   14000ae8b:	je     0x14000ae9f
   14000ae8d:	add    rax,0x2
   14000ae91:	cmp    WORD PTR [rax],bx
   14000ae94:	jne    0x14000ae8d
   14000ae96:	add    rax,0x2
   14000ae9a:	cmp    WORD PTR [rax],bx
   14000ae9d:	jne    0x14000ae8d
   14000ae9f:	sub    eax,edi
   14000aea1:	add    eax,0x2
   14000aea4:	movsxd rbp,eax
   14000aea7:	mov    rcx,rbp
   14000aeaa:	call   0x14000c9cc
   14000aeaf:	mov    rsi,rax
   14000aeb2:	test   rax,rax
   14000aeb5:	je     0x14000aec8
   14000aeb7:	mov    r8,rbp
   14000aeba:	mov    rdx,rdi
   14000aebd:	mov    rcx,rax
   14000aec0:	call   0x14000cb80
   14000aec5:	mov    rbx,rsi
   14000aec8:	mov    rcx,rdi
   14000aecb:	call   QWORD PTR [rip+0xffffffffffff624f]        # 0x140001120
   14000aed1:	mov    rax,rbx
   14000aed4:	mov    rbx,QWORD PTR [rsp+0x30]
   14000aed9:	mov    rbp,QWORD PTR [rsp+0x38]
   14000aede:	mov    rsi,QWORD PTR [rsp+0x40]
   14000aee3:	add    rsp,0x20
   14000aee7:	pop    rdi
   14000aee8:	ret    
   14000aee9:	int3   
   14000aeea:	int3   
   14000aeeb:	int3   
   14000aeec:	int3   
   14000aeed:	int3   
   14000aeee:	int3   
   14000aeef:	int3   
   14000aef0:	mov    QWORD PTR [rsp+0x8],rbx
   14000aef5:	mov    QWORD PTR [rsp+0x10],rbp
   14000aefa:	mov    QWORD PTR [rsp+0x18],rdi
   14000aeff:	push   r12
   14000af01:	push   r13
   14000af03:	push   r14
   14000af05:	sub    rsp,0x90
   14000af0c:	lea    rcx,[rsp+0x20]
   14000af11:	call   QWORD PTR [rip+0xffffffffffff6231]        # 0x140001148
   14000af17:	mov    edx,0x58
   14000af1c:	lea    ebp,[rdx-0x38]
   14000af1f:	mov    ecx,ebp
   14000af21:	call   0x14000ca50
   14000af26:	xor    r14d,r14d
   14000af29:	mov    rdx,rax
   14000af2c:	test   rax,rax
   14000af2f:	jne    0x14000af39
   14000af31:	or     eax,0xffffffff
   14000af34:	jmp    0x14000b1a4
   14000af39:	mov    QWORD PTR [rip+0xdaa0],rax        # 0x1400189e0
   14000af40:	add    rax,0xb00
   14000af46:	mov    ecx,ebp
   14000af48:	mov    DWORD PTR [rip+0xda7a],ecx        # 0x1400189c8
   14000af4e:	cmp    rdx,rax
   14000af51:	jae    0x14000af98
   14000af53:	add    rdx,0x9
   14000af57:	or     QWORD PTR [rdx-0x9],0xffffffffffffffff
   14000af5c:	mov    WORD PTR [rdx-0x1],0xa00
   14000af62:	mov    DWORD PTR [rdx+0x3],r14d
   14000af66:	mov    WORD PTR [rdx+0x2f],0xa00
   14000af6c:	mov    BYTE PTR [rdx+0x31],0xa
   14000af70:	mov    DWORD PTR [rdx+0x47],r14d
   14000af74:	mov    BYTE PTR [rdx+0x43],r14b
   14000af78:	mov    rax,QWORD PTR [rip+0xda61]        # 0x1400189e0
   14000af7f:	add    rdx,0x58
   14000af83:	lea    rcx,[rdx-0x9]
   14000af87:	add    rax,0xb00
   14000af8d:	cmp    rcx,rax
   14000af90:	jb     0x14000af57
   14000af92:	mov    ecx,DWORD PTR [rip+0xda30]        # 0x1400189c8
   14000af98:	cmp    WORD PTR [rsp+0x62],r14w
   14000af9e:	je     0x14000b0d8
   14000afa4:	mov    rax,QWORD PTR [rsp+0x68]
   14000afa9:	test   rax,rax
   14000afac:	je     0x14000b0d8
   14000afb2:	movsxd r12,DWORD PTR [rax]
   14000afb5:	mov    ebx,0x800
   14000afba:	lea    r13,[rax+0x4]
   14000afbe:	add    r12,r13
   14000afc1:	cmp    DWORD PTR [rax],ebx
   14000afc3:	cmovl  ebx,DWORD PTR [rax]
   14000afc6:	cmp    ecx,ebx
   14000afc8:	jge    0x14000b055
   14000afce:	lea    rdi,[rip+0xda13]        # 0x1400189e8
   14000afd5:	mov    edx,0x58
   14000afda:	mov    rcx,rbp
   14000afdd:	call   0x14000ca50
   14000afe2:	test   rax,rax
   14000afe5:	je     0x14000b04f
   14000afe7:	mov    edx,DWORD PTR [rip+0xd9db]        # 0x1400189c8
   14000afed:	lea    rcx,[rax+0xb00]
   14000aff4:	mov    QWORD PTR [rdi],rax
   14000aff7:	add    edx,ebp
   14000aff9:	mov    DWORD PTR [rip+0xd9c9],edx        # 0x1400189c8
   14000afff:	cmp    rax,rcx
   14000b002:	jae    0x14000b045
   14000b004:	lea    rdx,[rax+0x9]
   14000b008:	or     QWORD PTR [rdx-0x9],0xffffffffffffffff
   14000b00d:	and    BYTE PTR [rdx+0x2f],0x80
   14000b011:	mov    WORD PTR [rdx-0x1],0xa00
   14000b017:	mov    DWORD PTR [rdx+0x3],r14d
   14000b01b:	mov    WORD PTR [rdx+0x30],0xa0a
   14000b021:	mov    DWORD PTR [rdx+0x47],r14d
   14000b025:	mov    BYTE PTR [rdx+0x43],r14b
   14000b029:	mov    rax,QWORD PTR [rdi]
   14000b02c:	add    rdx,0x58
   14000b030:	lea    rcx,[rdx-0x9]
   14000b034:	add    rax,0xb00
   14000b03a:	cmp    rcx,rax
   14000b03d:	jb     0x14000b008
   14000b03f:	mov    edx,DWORD PTR [rip+0xd983]        # 0x1400189c8
   14000b045:	add    rdi,0x8
   14000b049:	cmp    edx,ebx
   14000b04b:	jl     0x14000afd5
   14000b04d:	jmp    0x14000b055
   14000b04f:	mov    ebx,DWORD PTR [rip+0xd973]        # 0x1400189c8
   14000b055:	mov    edi,r14d
   14000b058:	test   ebx,ebx
   14000b05a:	jle    0x14000b0d8
   14000b05c:	cmp    QWORD PTR [r12],0xffffffffffffffff
   14000b061:	je     0x14000b0cb
   14000b063:	cmp    QWORD PTR [r12],0xfffffffffffffffe
   14000b068:	je     0x14000b0cb
   14000b06a:	test   BYTE PTR [r13+0x0],0x1
   14000b06f:	je     0x14000b0cb
   14000b071:	test   BYTE PTR [r13+0x0],0x8
   14000b076:	jne    0x14000b086
   14000b078:	mov    rcx,QWORD PTR [r12]
   14000b07c:	call   QWORD PTR [rip+0xffffffffffff60be]        # 0x140001140
   14000b082:	test   eax,eax
   14000b084:	je     0x14000b0cb
   14000b086:	movsxd rbp,edi
   14000b089:	lea    rcx,[rip+0xd950]        # 0x1400189e0
   14000b090:	mov    edx,0xfa0
   14000b095:	mov    rax,rbp
   14000b098:	and    ebp,0x1f
   14000b09b:	sar    rax,0x5
   14000b09f:	imul   rbp,rbp,0x58
   14000b0a3:	add    rbp,QWORD PTR [rcx+rax*8]
   14000b0a7:	mov    rax,QWORD PTR [r12]
   14000b0ab:	mov    QWORD PTR [rbp+0x0],rax
   14000b0af:	mov    al,BYTE PTR [r13+0x0]
   14000b0b3:	lea    rcx,[rbp+0x10]
   14000b0b7:	mov    BYTE PTR [rbp+0x8],al
   14000b0ba:	call   QWORD PTR [rip+0xffffffffffff6078]        # 0x140001138
   14000b0c0:	test   eax,eax
   14000b0c2:	je     0x14000af31
   14000b0c8:	inc    DWORD PTR [rbp+0xc]
   14000b0cb:	inc    edi
   14000b0cd:	inc    r13
   14000b0d0:	add    r12,0x8
   14000b0d4:	cmp    edi,ebx
   14000b0d6:	jl     0x14000b05c
   14000b0d8:	mov    r12d,r14d
   14000b0db:	mov    rbx,r14
   14000b0de:	mov    rdi,QWORD PTR [rip+0xd8fb]        # 0x1400189e0
   14000b0e5:	cmp    QWORD PTR [rbx+rdi*1],0xffffffffffffffff
   14000b0ea:	je     0x14000b0fd
   14000b0ec:	cmp    QWORD PTR [rbx+rdi*1],0xfffffffffffffffe
   14000b0f1:	je     0x14000b0fd
   14000b0f3:	or     BYTE PTR [rbx+rdi*1+0x8],0x80
   14000b0f8:	jmp    0x14000b182
   14000b0fd:	lea    eax,[r12-0x1]
   14000b102:	mov    BYTE PTR [rbx+rdi*1+0x8],0x81
   14000b107:	neg    eax
   14000b109:	mov    eax,0xfffffff6
   14000b10e:	sbb    ecx,ecx
   14000b110:	add    ecx,0xfffffff5
   14000b113:	test   r12d,r12d
   14000b116:	cmove  ecx,eax
   14000b119:	call   QWORD PTR [rip+0xffffffffffff5ff1]        # 0x140001110
   14000b11f:	mov    rbp,rax
   14000b122:	cmp    rax,0xffffffffffffffff
   14000b126:	je     0x14000b175
   14000b128:	test   rax,rax
   14000b12b:	je     0x14000b175
   14000b12d:	mov    rcx,rax
   14000b130:	call   QWORD PTR [rip+0xffffffffffff600a]        # 0x140001140
   14000b136:	test   eax,eax
   14000b138:	je     0x14000b175
   14000b13a:	movzx  eax,al
   14000b13d:	mov    QWORD PTR [rbx+rdi*1],rbp
   14000b141:	cmp    eax,0x2
   14000b144:	jne    0x14000b14d
   14000b146:	or     BYTE PTR [rbx+rdi*1+0x8],0x40
   14000b14b:	jmp    0x14000b157
   14000b14d:	cmp    eax,0x3
   14000b150:	jne    0x14000b157
   14000b152:	or     BYTE PTR [rbx+rdi*1+0x8],0x8
   14000b157:	lea    rcx,[rbx+rdi*1+0x10]
   14000b15c:	mov    edx,0xfa0
   14000b161:	call   QWORD PTR [rip+0xffffffffffff5fd1]        # 0x140001138
   14000b167:	test   eax,eax
   14000b169:	je     0x14000af31
   14000b16f:	inc    DWORD PTR [rbx+rdi*1+0xc]
   14000b173:	jmp    0x14000b182
   14000b175:	or     BYTE PTR [rbx+rdi*1+0x8],0x40
   14000b17a:	mov    QWORD PTR [rbx+rdi*1],0xfffffffffffffffe
   14000b182:	add    rbx,0x58
   14000b186:	inc    r12d
   14000b189:	cmp    rbx,0x108
   14000b190:	jl     0x14000b0de
   14000b196:	mov    ecx,DWORD PTR [rip+0xd82c]        # 0x1400189c8
   14000b19c:	call   QWORD PTR [rip+0xffffffffffff5f8e]        # 0x140001130
   14000b1a2:	xor    eax,eax
   14000b1a4:	lea    r11,[rsp+0x90]
   14000b1ac:	mov    rbx,QWORD PTR [r11+0x20]
   14000b1b0:	mov    rbp,QWORD PTR [r11+0x28]
   14000b1b4:	mov    rdi,QWORD PTR [r11+0x30]
   14000b1b8:	mov    rsp,r11
   14000b1bb:	pop    r14
   14000b1bd:	pop    r13
   14000b1bf:	pop    r12
   14000b1c1:	ret    
   14000b1c2:	int3   
   14000b1c3:	int3   
   14000b1c4:	int3   
   14000b1c5:	int3   
   14000b1c6:	int3   
   14000b1c7:	int3   
   14000b1c8:	mov    QWORD PTR [rsp+0x8],rbx
   14000b1cd:	push   rdi
   14000b1ce:	sub    rsp,0x20
   14000b1d2:	lea    rbx,[rip+0xffffffffffffda4f]        # 0x140008c28
   14000b1d9:	lea    rdi,[rip+0xffffffffffffda48]        # 0x140008c28
   14000b1e0:	jmp    0x14000b1f0
   14000b1e2:	mov    rax,QWORD PTR [rbx]
   14000b1e5:	test   rax,rax
   14000b1e8:	je     0x14000b1ec
   14000b1ea:	call   rax
   14000b1ec:	add    rbx,0x8
   14000b1f0:	cmp    rbx,rdi
   14000b1f3:	jb     0x14000b1e2
   14000b1f5:	mov    rbx,QWORD PTR [rsp+0x30]
   14000b1fa:	add    rsp,0x20
   14000b1fe:	pop    rdi
   14000b1ff:	ret    
   14000b200:	int3   
   14000b201:	int3   
   14000b202:	int3   
   14000b203:	int3   
   14000b204:	int3   
   14000b205:	int3   
   14000b206:	int3   
   14000b207:	int3   
   14000b208:	mov    QWORD PTR [rsp+0x8],rbx
   14000b20d:	push   rdi
   14000b20e:	sub    rsp,0x20
   14000b212:	lea    rbx,[rip+0xffffffffffffda1f]        # 0x140008c38
   14000b219:	lea    rdi,[rip+0xffffffffffffda18]        # 0x140008c38
   14000b220:	jmp    0x14000b230
   14000b222:	mov    rax,QWORD PTR [rbx]
   14000b225:	test   rax,rax
   14000b228:	je     0x14000b22c
   14000b22a:	call   rax
   14000b22c:	add    rbx,0x8
   14000b230:	cmp    rbx,rdi
   14000b233:	jb     0x14000b222
   14000b235:	mov    rbx,QWORD PTR [rsp+0x30]
   14000b23a:	add    rsp,0x20
   14000b23e:	pop    rdi
   14000b23f:	ret    
   14000b240:	int3   
   14000b241:	int3   
   14000b242:	int3   
   14000b243:	int3   
   14000b244:	int3   
   14000b245:	int3   
   14000b246:	int3   
   14000b247:	int3   
   14000b248:	xor    ecx,ecx
   14000b24a:	rex.W jmp QWORD PTR [rip+0xffffffffffff5f07]        # 0x140001158
   14000b251:	int3   
   14000b252:	int3   
   14000b253:	int3   
   14000b254:	int3   
   14000b255:	int3   
   14000b256:	int3   
   14000b257:	int3   
   14000b258:	sub    rsp,0x28
   14000b25c:	mov    ecx,DWORD PTR [rip+0x9e06]        # 0x140015068
   14000b262:	cmp    ecx,0xffffffff
   14000b265:	je     0x14000b274
   14000b267:	call   QWORD PTR [rip+0xffffffffffff5f03]        # 0x140001170
   14000b26d:	or     DWORD PTR [rip+0x9df4],0xffffffff        # 0x140015068
   14000b274:	add    rsp,0x28
   14000b278:	jmp    0x14000bd5c
   14000b27d:	int3   
   14000b27e:	int3   
   14000b27f:	int3   
   14000b280:	int3   
   14000b281:	int3   
   14000b282:	int3   
   14000b283:	int3   
   14000b284:	mov    QWORD PTR [rsp+0x8],rbx
   14000b289:	push   rdi
   14000b28a:	sub    rsp,0x20
   14000b28e:	mov    rdi,rdx
   14000b291:	mov    rbx,rcx
   14000b294:	lea    rax,[rip+0xffffffffffff6c25]        # 0x140001ec0
   14000b29b:	mov    QWORD PTR [rcx+0xa0],rax
   14000b2a2:	and    DWORD PTR [rcx+0x10],0x0
   14000b2a6:	mov    DWORD PTR [rcx+0x1c],0x1
   14000b2ad:	mov    DWORD PTR [rcx+0xc8],0x1
   14000b2b7:	mov    BYTE PTR [rcx+0x174],0x43
   14000b2be:	mov    BYTE PTR [rcx+0x1f7],0x43
   14000b2c5:	lea    rax,[rip+0xa644]        # 0x140015910
   14000b2cc:	mov    QWORD PTR [rcx+0xb8],rax
   14000b2d3:	mov    ecx,0xd
   14000b2d8:	call   0x14000bef8
   14000b2dd:	nop
   14000b2de:	mov    rax,QWORD PTR [rbx+0xb8]
   14000b2e5:	lock inc DWORD PTR [rax]
   14000b2e8:	mov    ecx,0xd
   14000b2ed:	call   0x14000bdec
   14000b2f2:	mov    ecx,0xc
   14000b2f7:	call   0x14000bef8
   14000b2fc:	nop
   14000b2fd:	mov    QWORD PTR [rbx+0xc0],rdi
   14000b304:	test   rdi,rdi
   14000b307:	jne    0x14000b317
   14000b309:	mov    rax,QWORD PTR [rip+0xa5f0]        # 0x140015900
   14000b310:	mov    QWORD PTR [rbx+0xc0],rax
   14000b317:	mov    rcx,QWORD PTR [rbx+0xc0]
   14000b31e:	call   0x14000cebc
   14000b323:	nop
   14000b324:	mov    ecx,0xc
   14000b329:	call   0x14000bdec
   14000b32e:	mov    rbx,QWORD PTR [rsp+0x30]
   14000b333:	add    rsp,0x20
   14000b337:	pop    rdi
   14000b338:	ret    
   14000b339:	int3   
   14000b33a:	int3   
   14000b33b:	int3   
   14000b33c:	int3   
   14000b33d:	int3   
   14000b33e:	int3   
   14000b33f:	int3   
   14000b340:	mov    QWORD PTR [rsp+0x8],rbx
   14000b345:	push   rdi
   14000b346:	sub    rsp,0x20
   14000b34a:	call   QWORD PTR [rip+0xffffffffffff5ce0]        # 0x140001030
   14000b350:	mov    ecx,DWORD PTR [rip+0x9d12]        # 0x140015068
   14000b356:	mov    edi,eax
   14000b358:	call   QWORD PTR [rip+0xffffffffffff5e02]        # 0x140001160
   14000b35e:	mov    rbx,rax
   14000b361:	test   rax,rax
   14000b364:	jne    0x14000b3ae
   14000b366:	lea    ecx,[rax+0x1]
   14000b369:	mov    edx,0x2c8
   14000b36e:	call   0x14000ca50
   14000b373:	mov    rbx,rax
   14000b376:	test   rax,rax
   14000b379:	je     0x14000b3ae
   14000b37b:	mov    ecx,DWORD PTR [rip+0x9ce7]        # 0x140015068
   14000b381:	mov    rdx,rax
   14000b384:	call   QWORD PTR [rip+0xffffffffffff5dde]        # 0x140001168
   14000b38a:	mov    rcx,rbx
   14000b38d:	test   eax,eax
   14000b38f:	je     0x14000b3a7
   14000b391:	xor    edx,edx
   14000b393:	call   0x14000b284
   14000b398:	call   QWORD PTR [rip+0xffffffffffff5de2]        # 0x140001180
   14000b39e:	or     QWORD PTR [rbx+0x8],0xffffffffffffffff
   14000b3a3:	mov    DWORD PTR [rbx],eax
   14000b3a5:	jmp    0x14000b3ae
   14000b3a7:	call   0x14000c988
   14000b3ac:	xor    ebx,ebx
   14000b3ae:	mov    ecx,edi
   14000b3b0:	call   QWORD PTR [rip+0xffffffffffff5dc2]        # 0x140001178
   14000b3b6:	mov    rax,rbx
   14000b3b9:	mov    rbx,QWORD PTR [rsp+0x30]
   14000b3be:	add    rsp,0x20
   14000b3c2:	pop    rdi
   14000b3c3:	ret    
   14000b3c4:	int3   
   14000b3c5:	int3   
   14000b3c6:	int3   
   14000b3c7:	int3   
   14000b3c8:	int3   
   14000b3c9:	int3   
   14000b3ca:	int3   
   14000b3cb:	int3   
   14000b3cc:	rex push rbx
   14000b3ce:	sub    rsp,0x20
   14000b3d2:	call   0x14000b340
   14000b3d7:	mov    rbx,rax
   14000b3da:	test   rax,rax
   14000b3dd:	jne    0x14000b3e7
   14000b3df:	lea    ecx,[rax+0x10]
   14000b3e2:	call   0x14000a3a8
   14000b3e7:	mov    rax,rbx
   14000b3ea:	add    rsp,0x20
   14000b3ee:	pop    rbx
   14000b3ef:	ret    
   14000b3f0:	int3   
   14000b3f1:	int3   
   14000b3f2:	int3   
   14000b3f3:	int3   
   14000b3f4:	int3   
   14000b3f5:	int3   
   14000b3f6:	int3   
   14000b3f7:	int3   
   14000b3f8:	test   rcx,rcx
   14000b3fb:	je     0x14000b52a
   14000b401:	mov    QWORD PTR [rsp+0x10],rbx
   14000b406:	push   rdi
   14000b407:	sub    rsp,0x20
   14000b40b:	mov    rbx,rcx
   14000b40e:	mov    rcx,QWORD PTR [rcx+0x38]
   14000b412:	test   rcx,rcx
   14000b415:	je     0x14000b41c
   14000b417:	call   0x14000c988
   14000b41c:	mov    rcx,QWORD PTR [rbx+0x48]
   14000b420:	test   rcx,rcx
   14000b423:	je     0x14000b42a
   14000b425:	call   0x14000c988
   14000b42a:	mov    rcx,QWORD PTR [rbx+0x58]
   14000b42e:	test   rcx,rcx
   14000b431:	je     0x14000b438
   14000b433:	call   0x14000c988
   14000b438:	mov    rcx,QWORD PTR [rbx+0x68]
   14000b43c:	test   rcx,rcx
   14000b43f:	je     0x14000b446
   14000b441:	call   0x14000c988
   14000b446:	mov    rcx,QWORD PTR [rbx+0x70]
   14000b44a:	test   rcx,rcx
   14000b44d:	je     0x14000b454
   14000b44f:	call   0x14000c988
   14000b454:	mov    rcx,QWORD PTR [rbx+0x78]
   14000b458:	test   rcx,rcx
   14000b45b:	je     0x14000b462
   14000b45d:	call   0x14000c988
   14000b462:	mov    rcx,QWORD PTR [rbx+0x80]
   14000b469:	test   rcx,rcx
   14000b46c:	je     0x14000b473
   14000b46e:	call   0x14000c988
   14000b473:	mov    rcx,QWORD PTR [rbx+0xa0]
   14000b47a:	lea    rax,[rip+0xffffffffffff6a3f]        # 0x140001ec0
   14000b481:	cmp    rcx,rax
   14000b484:	je     0x14000b48b
   14000b486:	call   0x14000c988
   14000b48b:	mov    edi,0xd
   14000b490:	mov    ecx,edi
   14000b492:	call   0x14000bef8
   14000b497:	nop
   14000b498:	mov    rcx,QWORD PTR [rbx+0xb8]
   14000b49f:	mov    QWORD PTR [rsp+0x30],rcx
   14000b4a4:	test   rcx,rcx
   14000b4a7:	je     0x14000b4c5
   14000b4a9:	lock dec DWORD PTR [rcx]
   14000b4ac:	jne    0x14000b4c5
   14000b4ae:	lea    rax,[rip+0xa45b]        # 0x140015910
   14000b4b5:	mov    rcx,QWORD PTR [rsp+0x30]
   14000b4ba:	cmp    rcx,rax
   14000b4bd:	je     0x14000b4c5
   14000b4bf:	call   0x14000c988
   14000b4c4:	nop
   14000b4c5:	mov    ecx,edi
   14000b4c7:	call   0x14000bdec
   14000b4cc:	mov    ecx,0xc
   14000b4d1:	call   0x14000bef8
   14000b4d6:	nop
   14000b4d7:	mov    rdi,QWORD PTR [rbx+0xc0]
   14000b4de:	test   rdi,rdi
   14000b4e1:	je     0x14000b50e
   14000b4e3:	mov    rcx,rdi
   14000b4e6:	call   0x14000cf50
   14000b4eb:	cmp    rdi,QWORD PTR [rip+0xa40e]        # 0x140015900
   14000b4f2:	je     0x14000b50e
   14000b4f4:	lea    rax,[rip+0xa2a5]        # 0x1400157a0
   14000b4fb:	cmp    rdi,rax
   14000b4fe:	je     0x14000b50e
   14000b500:	cmp    DWORD PTR [rdi],0x0
   14000b503:	jne    0x14000b50e
   14000b505:	mov    rcx,rdi
   14000b508:	call   0x14000cffc
   14000b50d:	nop
   14000b50e:	mov    ecx,0xc
   14000b513:	call   0x14000bdec
   14000b518:	mov    rcx,rbx
   14000b51b:	call   0x14000c988
   14000b520:	mov    rbx,QWORD PTR [rsp+0x38]
   14000b525:	add    rsp,0x20
   14000b529:	pop    rdi
   14000b52a:	ret    
   14000b52b:	int3   
   14000b52c:	int3   
   14000b52d:	int3   
   14000b52e:	int3   
   14000b52f:	int3   
   14000b530:	int3   
   14000b531:	int3   
   14000b532:	int3   
   14000b533:	int3   
   14000b534:	rex push rbx
   14000b536:	sub    rsp,0x20
   14000b53a:	call   0x14000a040
   14000b53f:	call   0x14000bcd0
   14000b544:	test   eax,eax
   14000b546:	je     0x14000b5a8
   14000b548:	lea    rcx,[rip+0xfffffffffffffea9]        # 0x14000b3f8
   14000b54f:	call   QWORD PTR [rip+0xffffffffffff5c33]        # 0x140001188
   14000b555:	mov    DWORD PTR [rip+0x9b0d],eax        # 0x140015068
   14000b55b:	cmp    eax,0xffffffff
   14000b55e:	je     0x14000b5a8
   14000b560:	mov    edx,0x2c8
   14000b565:	mov    ecx,0x1
   14000b56a:	call   0x14000ca50
   14000b56f:	mov    rbx,rax
   14000b572:	test   rax,rax
   14000b575:	je     0x14000b5a8
   14000b577:	mov    ecx,DWORD PTR [rip+0x9aeb]        # 0x140015068
   14000b57d:	mov    rdx,rax
   14000b580:	call   QWORD PTR [rip+0xffffffffffff5be2]        # 0x140001168
   14000b586:	test   eax,eax
   14000b588:	je     0x14000b5a8
   14000b58a:	xor    edx,edx
   14000b58c:	mov    rcx,rbx
   14000b58f:	call   0x14000b284
   14000b594:	call   QWORD PTR [rip+0xffffffffffff5be6]        # 0x140001180
   14000b59a:	or     QWORD PTR [rbx+0x8],0xffffffffffffffff
   14000b59f:	mov    DWORD PTR [rbx],eax
   14000b5a1:	mov    eax,0x1
   14000b5a6:	jmp    0x14000b5af
   14000b5a8:	call   0x14000b258
   14000b5ad:	xor    eax,eax
   14000b5af:	add    rsp,0x20
   14000b5b3:	pop    rbx
   14000b5b4:	ret    
   14000b5b5:	int3   
   14000b5b6:	int3   
   14000b5b7:	int3   
   14000b5b8:	int3   
   14000b5b9:	int3   
   14000b5ba:	int3   
   14000b5bb:	int3   
   14000b5bc:	sub    rsp,0x28
   14000b5c0:	xor    r8d,r8d
   14000b5c3:	mov    edx,0x1000
   14000b5c8:	xor    ecx,ecx
   14000b5ca:	mov    DWORD PTR [rsp+0x30],0x2
   14000b5d2:	call   QWORD PTR [rip+0xffffffffffff5bc0]        # 0x140001198
   14000b5d8:	mov    QWORD PTR [rip+0xb611],rax        # 0x140016bf0
   14000b5df:	test   rax,rax
   14000b5e2:	je     0x14000b60d
   14000b5e4:	call   QWORD PTR [rip+0xffffffffffff5ba6]        # 0x140001190
   14000b5ea:	cmp    al,0x6
   14000b5ec:	jae    0x14000b608
   14000b5ee:	mov    rcx,QWORD PTR [rip+0xb5fb]        # 0x140016bf0
   14000b5f5:	lea    r8,[rsp+0x30]
   14000b5fa:	mov    r9d,0x4
   14000b600:	xor    edx,edx
   14000b602:	call   QWORD PTR [rip+0xffffffffffff5a38]        # 0x140001040
   14000b608:	mov    eax,0x1
   14000b60d:	add    rsp,0x28
   14000b611:	ret    
   14000b612:	int3   
   14000b613:	int3   
   14000b614:	int3   
   14000b615:	int3   
   14000b616:	int3   
   14000b617:	int3   
   14000b618:	mov    QWORD PTR [rsp+0x18],rbx
   14000b61d:	push   rdi
   14000b61e:	sub    rsp,0x20
   14000b622:	mov    rax,QWORD PTR [rip+0x9a47]        # 0x140015070
   14000b629:	and    QWORD PTR [rsp+0x30],0x0
   14000b62f:	movabs rdi,0x2b992ddfa232
   14000b639:	cmp    rax,rdi
   14000b63c:	je     0x14000b64a
   14000b63e:	not    rax
   14000b641:	mov    QWORD PTR [rip+0x9a30],rax        # 0x140015078
   14000b648:	jmp    0x14000b6c0
   14000b64a:	lea    rcx,[rsp+0x30]
   14000b64f:	call   QWORD PTR [rip+0xffffffffffff5b63]        # 0x1400011b8
   14000b655:	mov    rbx,QWORD PTR [rsp+0x30]
   14000b65a:	call   QWORD PTR [rip+0xffffffffffff5b50]        # 0x1400011b0
   14000b660:	mov    r11d,eax
   14000b663:	xor    rbx,r11
   14000b666:	call   QWORD PTR [rip+0xffffffffffff5b14]        # 0x140001180
   14000b66c:	mov    r11d,eax
   14000b66f:	xor    rbx,r11
   14000b672:	call   QWORD PTR [rip+0xffffffffffff5b30]        # 0x1400011a8
   14000b678:	lea    rcx,[rsp+0x38]
   14000b67d:	mov    r11d,eax
   14000b680:	xor    rbx,r11
   14000b683:	call   QWORD PTR [rip+0xffffffffffff5b17]        # 0x1400011a0
   14000b689:	mov    r11,QWORD PTR [rsp+0x38]
   14000b68e:	xor    r11,rbx
   14000b691:	movabs rax,0xffffffffffff
   14000b69b:	and    r11,rax
   14000b69e:	movabs rax,0x2b992ddfa233
   14000b6a8:	cmp    r11,rdi
   14000b6ab:	cmove  r11,rax
   14000b6af:	mov    QWORD PTR [rip+0x99ba],r11        # 0x140015070
   14000b6b6:	not    r11
   14000b6b9:	mov    QWORD PTR [rip+0x99b8],r11        # 0x140015078
   14000b6c0:	mov    rbx,QWORD PTR [rsp+0x40]
   14000b6c5:	add    rsp,0x20
   14000b6c9:	pop    rdi
   14000b6ca:	ret    
   14000b6cb:	int3   
   14000b6cc:	int3   
   14000b6cd:	int3   
   14000b6ce:	int3   
   14000b6cf:	int3   
   14000b6d0:	int3   
   14000b6d1:	int3   
   14000b6d2:	int3   
   14000b6d3:	int3   
   14000b6d4:	mov    QWORD PTR [rsp+0x8],rcx
   14000b6d9:	sub    rsp,0x88
   14000b6e0:	lea    rcx,[rip+0xb5b9]        # 0x140016ca0
   14000b6e7:	call   QWORD PTR [rip+0xffffffffffff5b03]        # 0x1400011f0
   14000b6ed:	mov    rax,QWORD PTR [rip+0xb6a4]        # 0x140016d98
   14000b6f4:	mov    QWORD PTR [rsp+0x58],rax
   14000b6f9:	xor    r8d,r8d
   14000b6fc:	lea    rdx,[rsp+0x60]
   14000b701:	mov    rcx,QWORD PTR [rsp+0x58]
   14000b706:	call   0x14001041a
   14000b70b:	mov    QWORD PTR [rsp+0x50],rax
   14000b710:	cmp    QWORD PTR [rsp+0x50],0x0
   14000b716:	je     0x14000b759
   14000b718:	mov    QWORD PTR [rsp+0x38],0x0
   14000b721:	lea    rax,[rsp+0x48]
   14000b726:	mov    QWORD PTR [rsp+0x30],rax
   14000b72b:	lea    rax,[rsp+0x40]
   14000b730:	mov    QWORD PTR [rsp+0x28],rax
   14000b735:	lea    rax,[rip+0xb564]        # 0x140016ca0
   14000b73c:	mov    QWORD PTR [rsp+0x20],rax
   14000b741:	mov    r9,QWORD PTR [rsp+0x50]
   14000b746:	mov    r8,QWORD PTR [rsp+0x58]
   14000b74b:	mov    rdx,QWORD PTR [rsp+0x60]
   14000b750:	xor    ecx,ecx
   14000b752:	call   0x14001040e
   14000b757:	jmp    0x14000b77b
   14000b759:	mov    rax,QWORD PTR [rsp+0x88]
   14000b761:	mov    QWORD PTR [rip+0xb630],rax        # 0x140016d98
   14000b768:	lea    rax,[rsp+0x88]
   14000b770:	add    rax,0x8
   14000b774:	mov    QWORD PTR [rip+0xb5bd],rax        # 0x140016d38
   14000b77b:	mov    rax,QWORD PTR [rip+0xb616]        # 0x140016d98
   14000b782:	mov    QWORD PTR [rip+0xb487],rax        # 0x140016c10
   14000b789:	mov    rax,QWORD PTR [rsp+0x90]
   14000b791:	mov    QWORD PTR [rip+0xb588],rax        # 0x140016d20
   14000b798:	mov    DWORD PTR [rip+0xb45e],0xc0000409        # 0x140016c00
   14000b7a2:	mov    DWORD PTR [rip+0xb458],0x1        # 0x140016c04
   14000b7ac:	mov    rax,QWORD PTR [rip+0x98bd]        # 0x140015070
   14000b7b3:	mov    QWORD PTR [rsp+0x68],rax
   14000b7b8:	mov    rax,QWORD PTR [rip+0x98b9]        # 0x140015078
   14000b7bf:	mov    QWORD PTR [rsp+0x70],rax
   14000b7c4:	call   QWORD PTR [rip+0xffffffffffff5a0e]        # 0x1400011d8
   14000b7ca:	mov    DWORD PTR [rip+0xb4c8],eax        # 0x140016c98
   14000b7d0:	mov    ecx,0x1
   14000b7d5:	call   0x14000db74
   14000b7da:	xor    ecx,ecx
   14000b7dc:	call   QWORD PTR [rip+0xffffffffffff5906]        # 0x1400010e8
   14000b7e2:	lea    rcx,[rip+0xffffffffffff67a7]        # 0x140001f90
   14000b7e9:	call   QWORD PTR [rip+0xffffffffffff59e1]        # 0x1400011d0
   14000b7ef:	cmp    DWORD PTR [rip+0xb4a2],0x0        # 0x140016c98
   14000b7f6:	jne    0x14000b802
   14000b7f8:	mov    ecx,0x1
   14000b7fd:	call   0x14000db74
   14000b802:	call   QWORD PTR [rip+0xffffffffffff59c0]        # 0x1400011c8
   14000b808:	mov    edx,0xc0000409
   14000b80d:	mov    rcx,rax
   14000b810:	call   QWORD PTR [rip+0xffffffffffff59aa]        # 0x1400011c0
   14000b816:	add    rsp,0x88
   14000b81d:	ret    
   14000b81e:	int3   
   14000b81f:	int3   
   14000b820:	int3   
   14000b821:	int3   
   14000b822:	int3   
   14000b823:	int3   
   14000b824:	mov    QWORD PTR [rip+0xb945],rcx        # 0x140017170
   14000b82b:	ret    
   14000b82c:	int3   
   14000b82d:	int3   
   14000b82e:	int3   
   14000b82f:	int3   
   14000b830:	int3   
   14000b831:	int3   
   14000b832:	int3   
   14000b833:	int3   
   14000b834:	mov    QWORD PTR [rsp+0x10],rbx
   14000b839:	mov    QWORD PTR [rsp+0x18],rsi
   14000b83e:	push   rbp
   14000b83f:	push   rdi
   14000b840:	push   r12
   14000b842:	lea    rbp,[rsp-0x4f0]
   14000b84a:	sub    rsp,0x5f0
   14000b851:	mov    rax,QWORD PTR [rip+0x9818]        # 0x140015070
   14000b858:	xor    rax,rsp
   14000b85b:	mov    QWORD PTR [rbp+0x4e0],rax
   14000b862:	mov    edi,r8d
   14000b865:	mov    esi,edx
   14000b867:	mov    ebx,ecx
   14000b869:	cmp    ecx,0xffffffff
   14000b86c:	je     0x14000b873
   14000b86e:	call   0x14000db74
   14000b873:	and    DWORD PTR [rsp+0x70],0x0
   14000b878:	lea    rcx,[rsp+0x74]
   14000b87d:	xor    edx,edx
   14000b87f:	mov    r8d,0x94
   14000b885:	call   0x14000db90
   14000b88a:	lea    r11,[rsp+0x70]
   14000b88f:	lea    rax,[rbp+0x10]
   14000b893:	lea    rcx,[rbp+0x10]
   14000b897:	mov    QWORD PTR [rsp+0x48],r11
   14000b89c:	mov    QWORD PTR [rsp+0x50],rax
   14000b8a1:	call   QWORD PTR [rip+0xffffffffffff5949]        # 0x1400011f0
   14000b8a7:	mov    r12,QWORD PTR [rbp+0x108]
   14000b8ae:	lea    rdx,[rsp+0x40]
   14000b8b3:	mov    rcx,r12
   14000b8b6:	xor    r8d,r8d
   14000b8b9:	call   0x14001041a
   14000b8be:	test   rax,rax
   14000b8c1:	je     0x14000b8fa
   14000b8c3:	and    QWORD PTR [rsp+0x38],0x0
   14000b8c9:	mov    rdx,QWORD PTR [rsp+0x40]
   14000b8ce:	lea    rcx,[rsp+0x60]
   14000b8d3:	mov    QWORD PTR [rsp+0x30],rcx
   14000b8d8:	lea    rcx,[rsp+0x58]
   14000b8dd:	mov    r9,rax
   14000b8e0:	mov    QWORD PTR [rsp+0x28],rcx
   14000b8e5:	lea    rcx,[rbp+0x10]
   14000b8e9:	mov    r8,r12
   14000b8ec:	mov    QWORD PTR [rsp+0x20],rcx
   14000b8f1:	xor    ecx,ecx
   14000b8f3:	call   0x14001040e
   14000b8f8:	jmp    0x14000b916
   14000b8fa:	mov    rax,QWORD PTR [rbp+0x508]
   14000b901:	mov    QWORD PTR [rbp+0x108],rax
   14000b908:	lea    rax,[rbp+0x508]
   14000b90f:	mov    QWORD PTR [rbp+0xa8],rax
   14000b916:	mov    rax,QWORD PTR [rbp+0x508]
   14000b91d:	mov    DWORD PTR [rsp+0x70],esi
   14000b921:	mov    DWORD PTR [rsp+0x74],edi
   14000b925:	mov    QWORD PTR [rbp-0x80],rax
   14000b929:	call   QWORD PTR [rip+0xffffffffffff58a9]        # 0x1400011d8
   14000b92f:	xor    ecx,ecx
   14000b931:	mov    edi,eax
   14000b933:	call   QWORD PTR [rip+0xffffffffffff57af]        # 0x1400010e8
   14000b939:	lea    rcx,[rsp+0x48]
   14000b93e:	call   QWORD PTR [rip+0xffffffffffff588c]        # 0x1400011d0
   14000b944:	test   eax,eax
   14000b946:	jne    0x14000b958
   14000b948:	test   edi,edi
   14000b94a:	jne    0x14000b958
   14000b94c:	cmp    ebx,0xffffffff
   14000b94f:	je     0x14000b958
   14000b951:	mov    ecx,ebx
   14000b953:	call   0x14000db74
   14000b958:	mov    rcx,QWORD PTR [rbp+0x4e0]
   14000b95f:	xor    rcx,rsp
   14000b962:	call   0x140009dd0
   14000b967:	lea    r11,[rsp+0x5f0]
   14000b96f:	mov    rbx,QWORD PTR [r11+0x28]
   14000b973:	mov    rsi,QWORD PTR [r11+0x30]
   14000b977:	mov    rsp,r11
   14000b97a:	pop    r12
   14000b97c:	pop    rdi
   14000b97d:	pop    rbp
   14000b97e:	ret    
   14000b97f:	int3   
   14000b980:	int3   
   14000b981:	int3   
   14000b982:	int3   
   14000b983:	int3   
   14000b984:	int3   
   14000b985:	int3   
   14000b986:	int3   
   14000b987:	int3   
   14000b988:	sub    rsp,0x28
   14000b98c:	mov    r8d,0x1
   14000b992:	mov    edx,0xc0000417
   14000b997:	lea    ecx,[r8+0x1]
   14000b99b:	call   0x14000b834
   14000b9a0:	call   QWORD PTR [rip+0xffffffffffff5822]        # 0x1400011c8
   14000b9a6:	mov    edx,0xc0000417
   14000b9ab:	mov    rcx,rax
   14000b9ae:	add    rsp,0x28
   14000b9b2:	rex.W jmp QWORD PTR [rip+0xffffffffffff5807]        # 0x1400011c0
   14000b9b9:	int3   
   14000b9ba:	int3   
   14000b9bb:	int3   
   14000b9bc:	int3   
   14000b9bd:	int3   
   14000b9be:	int3   
   14000b9bf:	int3   
   14000b9c0:	mov    QWORD PTR [rsp+0x8],rbx
   14000b9c5:	mov    QWORD PTR [rsp+0x10],rbp
   14000b9ca:	mov    QWORD PTR [rsp+0x18],rsi
   14000b9cf:	push   rdi
   14000b9d0:	sub    rsp,0x30
   14000b9d4:	mov    rbp,rcx
   14000b9d7:	mov    rcx,QWORD PTR [rip+0xb792]        # 0x140017170
   14000b9de:	mov    ebx,r9d
   14000b9e1:	mov    rdi,r8
   14000b9e4:	mov    rsi,rdx
   14000b9e7:	call   QWORD PTR [rip+0xffffffffffff5713]        # 0x140001100
   14000b9ed:	mov    r9d,ebx
   14000b9f0:	mov    r8,rdi
   14000b9f3:	mov    rdx,rsi
   14000b9f6:	mov    rcx,rbp
   14000b9f9:	test   rax,rax
   14000b9fc:	je     0x14000ba1f
   14000b9fe:	mov    r10,QWORD PTR [rsp+0x60]
   14000ba03:	mov    QWORD PTR [rsp+0x20],r10
   14000ba08:	call   rax
   14000ba0a:	mov    rbx,QWORD PTR [rsp+0x40]
   14000ba0f:	mov    rbp,QWORD PTR [rsp+0x48]
   14000ba14:	mov    rsi,QWORD PTR [rsp+0x50]
   14000ba19:	add    rsp,0x30
   14000ba1d:	pop    rdi
   14000ba1e:	ret    
   14000ba1f:	mov    rax,QWORD PTR [rsp+0x60]
   14000ba24:	mov    QWORD PTR [rsp+0x20],rax
   14000ba29:	call   0x14000b988
   14000ba2e:	int3   
   14000ba2f:	int3   
   14000ba30:	int3   
   14000ba31:	int3   
   14000ba32:	int3   
   14000ba33:	int3   
   14000ba34:	int3   
   14000ba35:	int3   
   14000ba36:	int3   
   14000ba37:	int3   
   14000ba38:	sub    rsp,0x38
   14000ba3c:	and    QWORD PTR [rsp+0x20],0x0
   14000ba42:	xor    r9d,r9d
   14000ba45:	xor    r8d,r8d
   14000ba48:	xor    edx,edx
   14000ba4a:	xor    ecx,ecx
   14000ba4c:	call   0x14000b9c0
   14000ba51:	add    rsp,0x38
   14000ba55:	ret    
   14000ba56:	int3   
   14000ba57:	int3   
   14000ba58:	int3   
   14000ba59:	int3   
   14000ba5a:	int3   
   14000ba5b:	int3   
   14000ba5c:	lea    r9,[rip+0x961d]        # 0x140015080
   14000ba63:	xor    eax,eax
   14000ba65:	mov    rdx,r9
   14000ba68:	lea    r8d,[rax+0x8]
   14000ba6c:	cmp    ecx,DWORD PTR [rdx]
   14000ba6e:	je     0x14000ba9b
   14000ba70:	inc    eax
   14000ba72:	add    rdx,r8
   14000ba75:	cmp    eax,0x2d
   14000ba78:	jb     0x14000ba6c
   14000ba7a:	lea    eax,[rcx-0x13]
   14000ba7d:	cmp    eax,0x11
   14000ba80:	ja     0x14000ba88
   14000ba82:	mov    eax,0xd
   14000ba87:	ret    
   14000ba88:	add    ecx,0xffffff44
   14000ba8e:	mov    eax,0x16
   14000ba93:	cmp    ecx,0xe
   14000ba96:	cmovbe eax,r8d
   14000ba9a:	ret    
   14000ba9b:	cdqe   
   14000ba9d:	mov    eax,DWORD PTR [r9+rax*8+0x4]
   14000baa2:	ret    
   14000baa3:	int3   
   14000baa4:	int3   
   14000baa5:	int3   
   14000baa6:	int3   
   14000baa7:	int3   
   14000baa8:	int3   
   14000baa9:	int3   
   14000baaa:	int3   
   14000baab:	int3   
   14000baac:	sub    rsp,0x28
   14000bab0:	call   0x14000b340
   14000bab5:	test   rax,rax
   14000bab8:	jne    0x14000bac3
   14000baba:	lea    rax,[rip+0x9727]        # 0x1400151e8
   14000bac1:	jmp    0x14000bac7
   14000bac3:	add    rax,0x10
   14000bac7:	add    rsp,0x28
   14000bacb:	ret    
   14000bacc:	int3   
   14000bacd:	int3   
   14000bace:	int3   
   14000bacf:	int3   
   14000bad0:	int3   
   14000bad1:	int3   
   14000bad2:	int3   
   14000bad3:	int3   
   14000bad4:	sub    rsp,0x28
   14000bad8:	call   0x14000b340
   14000badd:	test   rax,rax
   14000bae0:	jne    0x14000baeb
   14000bae2:	lea    rax,[rip+0x9703]        # 0x1400151ec
   14000bae9:	jmp    0x14000baef
   14000baeb:	add    rax,0x14
   14000baef:	add    rsp,0x28
   14000baf3:	ret    
   14000baf4:	int3   
   14000baf5:	int3   
   14000baf6:	int3   
   14000baf7:	int3   
   14000baf8:	int3   
   14000baf9:	int3   
   14000bafa:	int3   
   14000bafb:	int3   
   14000bafc:	rex push rbx
   14000bafe:	sub    rsp,0x20
   14000bb02:	mov    ebx,ecx
   14000bb04:	call   0x14000b340
   14000bb09:	test   rax,rax
   14000bb0c:	jne    0x14000bb17
   14000bb0e:	lea    rax,[rip+0x96d7]        # 0x1400151ec
   14000bb15:	jmp    0x14000bb1b
   14000bb17:	add    rax,0x14
   14000bb1b:	mov    DWORD PTR [rax],ebx
   14000bb1d:	call   0x14000b340
   14000bb22:	lea    r10,[rip+0x96bf]        # 0x1400151e8
   14000bb29:	test   rax,rax
   14000bb2c:	je     0x14000bb32
   14000bb2e:	lea    r10,[rax+0x10]
   14000bb32:	mov    ecx,ebx
   14000bb34:	call   0x14000ba5c
   14000bb39:	mov    DWORD PTR [r10],eax
   14000bb3c:	add    rsp,0x20
   14000bb40:	pop    rbx
   14000bb41:	ret    
   14000bb42:	int3   
   14000bb43:	int3   
   14000bb44:	int3   
   14000bb45:	int3   
   14000bb46:	int3   
   14000bb47:	int3   
   14000bb48:	lea    rax,[rip+0xffffffffffff6459]        # 0x140001fa8
   14000bb4f:	mov    QWORD PTR [rcx],rax
   14000bb52:	jmp    0x14000dd94
   14000bb57:	int3   
   14000bb58:	int3   
   14000bb59:	int3   
   14000bb5a:	int3   
   14000bb5b:	int3   
   14000bb5c:	int3   
   14000bb5d:	int3   
   14000bb5e:	int3   
   14000bb5f:	int3   
   14000bb60:	mov    QWORD PTR [rsp+0x8],rbx
   14000bb65:	push   rdi
   14000bb66:	sub    rsp,0x20
   14000bb6a:	lea    rax,[rip+0xffffffffffff6437]        # 0x140001fa8
   14000bb71:	mov    ebx,edx
   14000bb73:	mov    rdi,rcx
   14000bb76:	mov    QWORD PTR [rcx],rax
   14000bb79:	call   0x14000dd94
   14000bb7e:	test   bl,0x1
   14000bb81:	je     0x14000bb8b
   14000bb83:	mov    rcx,rdi
   14000bb86:	call   0x14000bc74
   14000bb8b:	mov    rax,rdi
   14000bb8e:	mov    rbx,QWORD PTR [rsp+0x30]
   14000bb93:	add    rsp,0x20
   14000bb97:	pop    rdi
   14000bb98:	ret    
   14000bb99:	int3   
   14000bb9a:	int3   
   14000bb9b:	int3   
   14000bb9c:	int3   
   14000bb9d:	int3   
   14000bb9e:	int3   
   14000bb9f:	int3   
   14000bba0:	rex push rbx
   14000bba2:	sub    rsp,0x20
   14000bba6:	mov    rbx,rcx
   14000bba9:	call   0x14000ddec
   14000bbae:	lea    r11,[rip+0xffffffffffff63f3]        # 0x140001fa8
   14000bbb5:	mov    QWORD PTR [rbx],r11
   14000bbb8:	mov    rax,rbx
   14000bbbb:	add    rsp,0x20
   14000bbbf:	pop    rbx
   14000bbc0:	ret    
   14000bbc1:	int3   
   14000bbc2:	int3   
   14000bbc3:	int3   
   14000bbc4:	int3   
   14000bbc5:	int3   
   14000bbc6:	int3   
   14000bbc7:	int3   
   14000bbc8:	rex push rbx
   14000bbca:	sub    rsp,0x40
   14000bbce:	mov    rbx,rcx
   14000bbd1:	jmp    0x14000bbe2
   14000bbd3:	mov    rcx,rbx
   14000bbd6:	call   0x14000c1e4
   14000bbdb:	test   eax,eax
   14000bbdd:	je     0x14000bbf2
   14000bbdf:	mov    rcx,rbx
   14000bbe2:	call   0x14000de5c
   14000bbe7:	test   rax,rax
   14000bbea:	je     0x14000bbd3
   14000bbec:	add    rsp,0x40
   14000bbf0:	pop    rbx
   14000bbf1:	ret    
   14000bbf2:	mov    eax,DWORD PTR [rip+0xb598]        # 0x140017190
   14000bbf8:	mov    r8d,0x1
   14000bbfe:	lea    rbx,[rip+0xffffffffffff63a3]        # 0x140001fa8
   14000bc05:	test   r8b,al
   14000bc08:	jne    0x14000bc43
   14000bc0a:	or     eax,r8d
   14000bc0d:	lea    rdx,[rsp+0x58]
   14000bc12:	lea    rcx,[rip+0xb55f]        # 0x140017178
   14000bc19:	mov    DWORD PTR [rip+0xb571],eax        # 0x140017190
   14000bc1f:	lea    rax,[rip+0xffffffffffff6392]        # 0x140001fb8
   14000bc26:	mov    QWORD PTR [rsp+0x58],rax
   14000bc2b:	call   0x14000dc80
   14000bc30:	lea    rcx,[rip+0x7d09]        # 0x140013940
   14000bc37:	mov    QWORD PTR [rip+0xb53a],rbx        # 0x140017178
   14000bc3e:	call   0x14000c37c
   14000bc43:	lea    rdx,[rip+0xb52e]        # 0x140017178
   14000bc4a:	lea    rcx,[rsp+0x20]
   14000bc4f:	call   0x14000ddec
   14000bc54:	lea    rdx,[rip+0x85ed]        # 0x140014248
   14000bc5b:	lea    rcx,[rsp+0x20]
   14000bc60:	mov    QWORD PTR [rsp+0x20],rbx
   14000bc65:	call   0x14000df18
   14000bc6a:	int3   
   14000bc6b:	int3   
   14000bc6c:	int3   
   14000bc6d:	int3   
   14000bc6e:	int3   
   14000bc6f:	int3   
   14000bc70:	int3   
   14000bc71:	int3   
   14000bc72:	int3   
   14000bc73:	int3   
   14000bc74:	jmp    0x14000c988
   14000bc79:	int3   
   14000bc7a:	int3   
   14000bc7b:	int3   
   14000bc7c:	int3   
   14000bc7d:	int3   
   14000bc7e:	int3   
   14000bc7f:	int3   
   14000bc80:	sub    rsp,0x28
   14000bc84:	call   0x14000b3cc
   14000bc89:	mov    rcx,QWORD PTR [rax+0xd0]
   14000bc90:	test   rcx,rcx
   14000bc93:	je     0x14000bc99
   14000bc95:	call   rcx
   14000bc97:	jmp    0x14000bc99
   14000bc99:	call   0x14000dfb4
   14000bc9e:	add    rsp,0x28
   14000bca2:	ret    
   14000bca3:	int3   
   14000bca4:	int3   
   14000bca5:	int3   
   14000bca6:	int3   
   14000bca7:	int3   
   14000bca8:	int3   
   14000bca9:	int3   
   14000bcaa:	int3   
   14000bcab:	int3   
   14000bcac:	sub    rsp,0x28
   14000bcb0:	lea    rcx,[rip+0xffffffffffffffc9]        # 0x14000bc80
   14000bcb7:	call   QWORD PTR [rip+0xffffffffffff549b]        # 0x140001158
   14000bcbd:	mov    QWORD PTR [rip+0xb4d4],rax        # 0x140017198
   14000bcc4:	add    rsp,0x28
   14000bcc8:	ret    
   14000bcc9:	int3   
   14000bcca:	int3   
   14000bccb:	int3   
   14000bccc:	int3   
   14000bccd:	int3   
   14000bcce:	int3   
   14000bccf:	int3   
   14000bcd0:	mov    QWORD PTR [rsp+0x8],rbx
   14000bcd5:	mov    QWORD PTR [rsp+0x10],rsi
   14000bcda:	mov    QWORD PTR [rsp+0x18],rdi
   14000bcdf:	push   r12
   14000bce1:	sub    rsp,0x20
   14000bce5:	lea    r12,[rip+0x9554]        # 0x140015240
   14000bcec:	xor    esi,esi
   14000bcee:	xor    ebx,ebx
   14000bcf0:	mov    rdi,r12
   14000bcf3:	cmp    DWORD PTR [rdi+0x8],0x1
   14000bcf7:	jne    0x14000bd1f
   14000bcf9:	movsxd rax,esi
   14000bcfc:	mov    edx,0xfa0
   14000bd01:	inc    esi
   14000bd03:	lea    rcx,[rax+rax*4]
   14000bd07:	lea    rax,[rip+0xb492]        # 0x1400171a0
   14000bd0e:	lea    rcx,[rax+rcx*8]
   14000bd12:	mov    QWORD PTR [rdi],rcx
   14000bd15:	call   QWORD PTR [rip+0xffffffffffff541d]        # 0x140001138
   14000bd1b:	test   eax,eax
   14000bd1d:	je     0x14000bd45
   14000bd1f:	inc    ebx
   14000bd21:	add    rdi,0x10
   14000bd25:	cmp    ebx,0x24
   14000bd28:	jl     0x14000bcf3
   14000bd2a:	mov    eax,0x1
   14000bd2f:	mov    rbx,QWORD PTR [rsp+0x30]
   14000bd34:	mov    rsi,QWORD PTR [rsp+0x38]
   14000bd39:	mov    rdi,QWORD PTR [rsp+0x40]
   14000bd3e:	add    rsp,0x20
   14000bd42:	pop    r12
   14000bd44:	ret    
   14000bd45:	movsxd rax,ebx
   14000bd48:	add    rax,rax
   14000bd4b:	and    QWORD PTR [r12+rax*8],0x0
   14000bd50:	xor    eax,eax
   14000bd52:	jmp    0x14000bd2f
   14000bd54:	int3   
   14000bd55:	int3   
   14000bd56:	int3   
   14000bd57:	int3   
   14000bd58:	int3   
   14000bd59:	int3   
   14000bd5a:	int3   
   14000bd5b:	int3   
   14000bd5c:	mov    QWORD PTR [rsp+0x8],rbx
   14000bd61:	mov    QWORD PTR [rsp+0x10],rbp
   14000bd66:	mov    QWORD PTR [rsp+0x18],rsi
   14000bd6b:	push   rdi
   14000bd6c:	sub    rsp,0x20
   14000bd70:	mov    edi,0x24
   14000bd75:	lea    rbx,[rip+0x94c4]        # 0x140015240
   14000bd7c:	mov    esi,edi
   14000bd7e:	mov    rbp,QWORD PTR [rbx]
   14000bd81:	test   rbp,rbp
   14000bd84:	je     0x14000bda1
   14000bd86:	cmp    DWORD PTR [rbx+0x8],0x1
   14000bd8a:	je     0x14000bda1
   14000bd8c:	mov    rcx,rbp
   14000bd8f:	call   QWORD PTR [rip+0xffffffffffff53bb]        # 0x140001150
   14000bd95:	mov    rcx,rbp
   14000bd98:	call   0x14000c988
   14000bd9d:	and    QWORD PTR [rbx],0x0
   14000bda1:	add    rbx,0x10
   14000bda5:	dec    rsi
   14000bda8:	jne    0x14000bd7e
   14000bdaa:	lea    rbx,[rip+0x9497]        # 0x140015248
   14000bdb1:	mov    rcx,QWORD PTR [rbx-0x8]
   14000bdb5:	test   rcx,rcx
   14000bdb8:	je     0x14000bdc5
   14000bdba:	cmp    DWORD PTR [rbx],0x1
   14000bdbd:	jne    0x14000bdc5
   14000bdbf:	call   QWORD PTR [rip+0xffffffffffff538b]        # 0x140001150
   14000bdc5:	add    rbx,0x10
   14000bdc9:	dec    rdi
   14000bdcc:	jne    0x14000bdb1
   14000bdce:	mov    rbx,QWORD PTR [rsp+0x30]
   14000bdd3:	mov    rbp,QWORD PTR [rsp+0x38]
   14000bdd8:	mov    rsi,QWORD PTR [rsp+0x40]
   14000bddd:	add    rsp,0x20
   14000bde1:	pop    rdi
   14000bde2:	ret    
   14000bde3:	int3   
   14000bde4:	int3   
   14000bde5:	int3   
   14000bde6:	int3   
   14000bde7:	int3   
   14000bde8:	int3   
   14000bde9:	int3   
   14000bdea:	int3   
   14000bdeb:	int3   
   14000bdec:	movsxd rcx,ecx
   14000bdef:	lea    rax,[rip+0x944a]        # 0x140015240
   14000bdf6:	add    rcx,rcx
   14000bdf9:	mov    rcx,QWORD PTR [rax+rcx*8]
   14000bdfd:	rex.W jmp QWORD PTR [rip+0xffffffffffff53f4]        # 0x1400011f8
   14000be04:	int3   
   14000be05:	int3   
   14000be06:	int3   
   14000be07:	int3   
   14000be08:	int3   
   14000be09:	int3   
   14000be0a:	int3   
   14000be0b:	int3   
   14000be0c:	mov    QWORD PTR [rsp+0x8],rbx
   14000be11:	mov    QWORD PTR [rsp+0x10],rsi
   14000be16:	mov    QWORD PTR [rsp+0x18],rdi
   14000be1b:	push   r13
   14000be1d:	sub    rsp,0x20
   14000be21:	movsxd rbx,ecx
   14000be24:	mov    esi,0x1
   14000be29:	cmp    QWORD PTR [rip+0xadbf],0x0        # 0x140016bf0
   14000be31:	jne    0x14000be4a
   14000be33:	call   0x14000a668
   14000be38:	lea    ecx,[rsi+0x1d]
   14000be3b:	call   0x14000a404
   14000be40:	mov    ecx,0xff
   14000be45:	call   0x14000a004
   14000be4a:	mov    rdi,rbx
   14000be4d:	add    rdi,rdi
   14000be50:	lea    r13,[rip+0x93e9]        # 0x140015240
   14000be57:	cmp    QWORD PTR [r13+rdi*8+0x0],0x0
   14000be5d:	je     0x14000be63
   14000be5f:	mov    eax,esi
   14000be61:	jmp    0x14000bedc
   14000be63:	mov    ecx,0x28
   14000be68:	call   0x14000c9cc
   14000be6d:	mov    rbx,rax
   14000be70:	test   rax,rax
   14000be73:	jne    0x14000be84
   14000be75:	call   0x14000baac
   14000be7a:	mov    DWORD PTR [rax],0xc
   14000be80:	xor    eax,eax
   14000be82:	jmp    0x14000bedc
   14000be84:	mov    ecx,0xa
   14000be89:	call   0x14000bef8
   14000be8e:	nop
   14000be8f:	mov    rcx,rbx
   14000be92:	cmp    QWORD PTR [r13+rdi*8+0x0],0x0
   14000be98:	jne    0x14000bec7
   14000be9a:	mov    edx,0xfa0
   14000be9f:	call   QWORD PTR [rip+0xffffffffffff5293]        # 0x140001138
   14000bea5:	test   eax,eax
   14000bea7:	jne    0x14000bec0
   14000bea9:	mov    rcx,rbx
   14000beac:	call   0x14000c988
   14000beb1:	call   0x14000baac
   14000beb6:	mov    DWORD PTR [rax],0xc
   14000bebc:	xor    esi,esi
   14000bebe:	jmp    0x14000becd
   14000bec0:	mov    QWORD PTR [r13+rdi*8+0x0],rbx
   14000bec5:	jmp    0x14000becd
   14000bec7:	call   0x14000c988
   14000becc:	nop
   14000becd:	mov    rcx,QWORD PTR [rip+0x940c]        # 0x1400152e0
   14000bed4:	call   QWORD PTR [rip+0xffffffffffff531e]        # 0x1400011f8
   14000beda:	jmp    0x14000be5f
   14000bedc:	mov    rbx,QWORD PTR [rsp+0x30]
   14000bee1:	mov    rsi,QWORD PTR [rsp+0x38]
   14000bee6:	mov    rdi,QWORD PTR [rsp+0x40]
   14000beeb:	add    rsp,0x20
   14000beef:	pop    r13
   14000bef1:	ret    
   14000bef2:	int3   
   14000bef3:	int3   
   14000bef4:	int3   
   14000bef5:	int3   
   14000bef6:	int3   
   14000bef7:	int3   
   14000bef8:	mov    QWORD PTR [rsp+0x8],rbx
   14000befd:	push   rdi
   14000befe:	sub    rsp,0x20
   14000bf02:	movsxd rbx,ecx
   14000bf05:	lea    rdi,[rip+0x9334]        # 0x140015240
   14000bf0c:	add    rbx,rbx
   14000bf0f:	cmp    QWORD PTR [rdi+rbx*8],0x0
   14000bf14:	jne    0x14000bf27
   14000bf16:	call   0x14000be0c
   14000bf1b:	test   eax,eax
   14000bf1d:	jne    0x14000bf27
   14000bf1f:	lea    ecx,[rax+0x11]
   14000bf22:	call   0x14000a3a8
   14000bf27:	mov    rcx,QWORD PTR [rdi+rbx*8]
   14000bf2b:	mov    rbx,QWORD PTR [rsp+0x30]
   14000bf30:	add    rsp,0x20
   14000bf34:	pop    rdi
   14000bf35:	rex.W jmp QWORD PTR [rip+0xffffffffffff52c4]        # 0x140001200
   14000bf3c:	int3   
   14000bf3d:	int3   
   14000bf3e:	int3   
   14000bf3f:	int3   
   14000bf40:	int3   
   14000bf41:	int3   
   14000bf42:	int3   
   14000bf43:	int3   
   14000bf44:	mov    QWORD PTR [rip+0xb485],rcx        # 0x1400173d0
   14000bf4b:	mov    QWORD PTR [rip+0xb486],rcx        # 0x1400173d8
   14000bf52:	mov    QWORD PTR [rip+0xb487],rcx        # 0x1400173e0
   14000bf59:	mov    QWORD PTR [rip+0xb488],rcx        # 0x1400173e8
   14000bf60:	ret    
   14000bf61:	int3   
   14000bf62:	int3   
   14000bf63:	int3   
   14000bf64:	int3   
   14000bf65:	int3   
   14000bf66:	int3   
   14000bf67:	int3   
   14000bf68:	mov    rcx,QWORD PTR [rip+0xb471]        # 0x1400173e0
   14000bf6f:	rex.W jmp QWORD PTR [rip+0xffffffffffff518a]        # 0x140001100
   14000bf76:	int3   
   14000bf77:	int3   
   14000bf78:	int3   
   14000bf79:	int3   
   14000bf7a:	int3   
   14000bf7b:	int3   
   14000bf7c:	mov    QWORD PTR [rsp+0x10],rbx
   14000bf81:	mov    QWORD PTR [rsp+0x18],rsi
   14000bf86:	push   rdi
   14000bf87:	push   r12
   14000bf89:	push   r13
   14000bf8b:	push   r14
   14000bf8d:	push   r15
   14000bf8f:	sub    rsp,0x30
   14000bf93:	mov    ebx,ecx
   14000bf95:	xor    edi,edi
   14000bf97:	mov    DWORD PTR [rsp+0x60],edi
   14000bf9b:	xor    esi,esi
   14000bf9d:	mov    edx,ecx
   14000bf9f:	sub    edx,0x2
   14000bfa2:	je     0x14000c06d
   14000bfa8:	sub    edx,0x2
   14000bfab:	je     0x14000c00f
   14000bfad:	sub    edx,0x2
   14000bfb0:	je     0x14000bfff
   14000bfb2:	sub    edx,0x2
   14000bfb5:	je     0x14000c00f
   14000bfb7:	sub    edx,0x3
   14000bfba:	je     0x14000c00f
   14000bfbc:	sub    edx,0x4
   14000bfbf:	je     0x14000bfef
   14000bfc1:	sub    edx,0x6
   14000bfc4:	je     0x14000bfdc
   14000bfc6:	dec    edx
   14000bfc8:	je     0x14000bfff
   14000bfca:	call   0x14000baac
   14000bfcf:	mov    DWORD PTR [rax],0x16
   14000bfd5:	call   0x14000ba38
   14000bfda:	jmp    0x14000c01c
   14000bfdc:	lea    r12,[rip+0xb3f5]        # 0x1400173d8
   14000bfe3:	mov    rcx,QWORD PTR [rip+0xb3ee]        # 0x1400173d8
   14000bfea:	jmp    0x14000c07b
   14000bfef:	lea    r12,[rip+0xb3f2]        # 0x1400173e8
   14000bff6:	mov    rcx,QWORD PTR [rip+0xb3eb]        # 0x1400173e8
   14000bffd:	jmp    0x14000c07b
   14000bfff:	lea    r12,[rip+0xb3da]        # 0x1400173e0
   14000c006:	mov    rcx,QWORD PTR [rip+0xb3d3]        # 0x1400173e0
   14000c00d:	jmp    0x14000c07b
   14000c00f:	call   0x14000b340
   14000c014:	mov    rsi,rax
   14000c017:	test   rax,rax
   14000c01a:	jne    0x14000c024
   14000c01c:	or     eax,0xffffffff
   14000c01f:	jmp    0x14000c196
   14000c024:	mov    rdx,QWORD PTR [rax+0xa0]
   14000c02b:	mov    rcx,rdx
   14000c02e:	movsxd r8,DWORD PTR [rip+0xffffffffffff5f57]        # 0x140001f8c
   14000c035:	cmp    DWORD PTR [rcx+0x4],ebx
   14000c038:	je     0x14000c04d
   14000c03a:	add    rcx,0x10
   14000c03e:	mov    rax,r8
   14000c041:	shl    rax,0x4
   14000c045:	add    rax,rdx
   14000c048:	cmp    rcx,rax
   14000c04b:	jb     0x14000c035
   14000c04d:	mov    rax,r8
   14000c050:	shl    rax,0x4
   14000c054:	add    rax,rdx
   14000c057:	cmp    rcx,rax
   14000c05a:	jae    0x14000c061
   14000c05c:	cmp    DWORD PTR [rcx+0x4],ebx
   14000c05f:	je     0x14000c063
   14000c061:	xor    ecx,ecx
   14000c063:	lea    r12,[rcx+0x8]
   14000c067:	mov    r13,QWORD PTR [r12]
   14000c06b:	jmp    0x14000c08d
   14000c06d:	lea    r12,[rip+0xb35c]        # 0x1400173d0
   14000c074:	mov    rcx,QWORD PTR [rip+0xb355]        # 0x1400173d0
   14000c07b:	mov    edi,0x1
   14000c080:	mov    DWORD PTR [rsp+0x60],edi
   14000c084:	call   QWORD PTR [rip+0xffffffffffff5076]        # 0x140001100
   14000c08a:	mov    r13,rax
   14000c08d:	cmp    r13,0x1
   14000c091:	jne    0x14000c09a
   14000c093:	xor    eax,eax
   14000c095:	jmp    0x14000c196
   14000c09a:	test   r13,r13
   14000c09d:	jne    0x14000c0a9
   14000c09f:	lea    ecx,[r13+0x3]
   14000c0a3:	call   0x14000a368
   14000c0a8:	int3   
   14000c0a9:	test   edi,edi
   14000c0ab:	je     0x14000c0b5
   14000c0ad:	xor    ecx,ecx
   14000c0af:	call   0x14000bef8
   14000c0b4:	nop
   14000c0b5:	cmp    ebx,0x8
   14000c0b8:	je     0x14000c0cb
   14000c0ba:	cmp    ebx,0xb
   14000c0bd:	je     0x14000c0cb
   14000c0bf:	cmp    ebx,0x4
   14000c0c2:	je     0x14000c0cb
   14000c0c4:	mov    r15,QWORD PTR [rsp+0x28]
   14000c0c9:	jmp    0x14000c0f7
   14000c0cb:	mov    r15,QWORD PTR [rsi+0xa8]
   14000c0d2:	mov    QWORD PTR [rsp+0x28],r15
   14000c0d7:	and    QWORD PTR [rsi+0xa8],0x0
   14000c0df:	cmp    ebx,0x8
   14000c0e2:	jne    0x14000c0f7
   14000c0e4:	mov    r14d,DWORD PTR [rsi+0xb0]
   14000c0eb:	mov    DWORD PTR [rsi+0xb0],0x8c
   14000c0f5:	jmp    0x14000c0fc
   14000c0f7:	mov    r14d,DWORD PTR [rsp+0x60]
   14000c0fc:	cmp    ebx,0x8
   14000c0ff:	jne    0x14000c13a
   14000c101:	mov    ecx,DWORD PTR [rip+0xffffffffffff5e79]        # 0x140001f80
   14000c107:	mov    edx,ecx
   14000c109:	mov    DWORD PTR [rsp+0x20],ecx
   14000c10d:	mov    eax,DWORD PTR [rip+0xffffffffffff5e71]        # 0x140001f84
   14000c113:	add    ecx,eax
   14000c115:	cmp    edx,ecx
   14000c117:	jge    0x14000c143
   14000c119:	movsxd rcx,edx
   14000c11c:	add    rcx,rcx
   14000c11f:	mov    rax,QWORD PTR [rsi+0xa0]
   14000c126:	and    QWORD PTR [rax+rcx*8+0x8],0x0
   14000c12c:	inc    edx
   14000c12e:	mov    DWORD PTR [rsp+0x20],edx
   14000c132:	mov    ecx,DWORD PTR [rip+0xffffffffffff5e48]        # 0x140001f80
   14000c138:	jmp    0x14000c10d
   14000c13a:	call   0x14000b248
   14000c13f:	mov    QWORD PTR [r12],rax
   14000c143:	test   edi,edi
   14000c145:	je     0x14000c14e
   14000c147:	xor    ecx,ecx
   14000c149:	call   0x14000bdec
   14000c14e:	mov    edi,0x8
   14000c153:	cmp    ebx,edi
   14000c155:	jne    0x14000c164
   14000c157:	mov    edx,DWORD PTR [rsi+0xb0]
   14000c15d:	mov    ecx,edi
   14000c15f:	call   r13
   14000c162:	jmp    0x14000c169
   14000c164:	mov    ecx,ebx
   14000c166:	call   r13
   14000c169:	cmp    ebx,edi
   14000c16b:	je     0x14000c17b
   14000c16d:	cmp    ebx,0xb
   14000c170:	je     0x14000c17b
   14000c172:	cmp    ebx,0x4
   14000c175:	jne    0x14000c093
   14000c17b:	mov    QWORD PTR [rsi+0xa8],r15
   14000c182:	cmp    ebx,edi
   14000c184:	jne    0x14000c093
   14000c18a:	mov    DWORD PTR [rsi+0xb0],r14d
   14000c191:	jmp    0x14000c093
   14000c196:	mov    rbx,QWORD PTR [rsp+0x68]
   14000c19b:	mov    rsi,QWORD PTR [rsp+0x70]
   14000c1a0:	add    rsp,0x30
   14000c1a4:	pop    r15
   14000c1a6:	pop    r14
   14000c1a8:	pop    r13
   14000c1aa:	pop    r12
   14000c1ac:	pop    rdi
   14000c1ad:	ret    
   14000c1ae:	int3   
   14000c1af:	int3   
   14000c1b0:	int3   
   14000c1b1:	int3   
   14000c1b2:	int3   
   14000c1b3:	int3   
   14000c1b4:	mov    QWORD PTR [rip+0xb23d],rcx        # 0x1400173f8
   14000c1bb:	ret    
   14000c1bc:	int3   
   14000c1bd:	int3   
   14000c1be:	int3   
   14000c1bf:	int3   
   14000c1c0:	int3   
   14000c1c1:	int3   
   14000c1c2:	int3   
   14000c1c3:	int3   
   14000c1c4:	mov    QWORD PTR [rip+0xb235],rcx        # 0x140017400
   14000c1cb:	ret    
   14000c1cc:	int3   
   14000c1cd:	int3   
   14000c1ce:	int3   
   14000c1cf:	int3   
   14000c1d0:	int3   
   14000c1d1:	int3   
   14000c1d2:	int3   
   14000c1d3:	int3   
   14000c1d4:	mov    QWORD PTR [rip+0xb22d],rcx        # 0x140017408
   14000c1db:	ret    
   14000c1dc:	int3   
   14000c1dd:	int3   
   14000c1de:	int3   
   14000c1df:	int3   
   14000c1e0:	int3   
   14000c1e1:	int3   
   14000c1e2:	int3   
   14000c1e3:	int3   
   14000c1e4:	rex push rbx
   14000c1e6:	sub    rsp,0x20
   14000c1ea:	mov    rbx,rcx
   14000c1ed:	mov    rcx,QWORD PTR [rip+0xb214]        # 0x140017408
   14000c1f4:	call   QWORD PTR [rip+0xffffffffffff4f06]        # 0x140001100
   14000c1fa:	test   rax,rax
   14000c1fd:	je     0x14000c20f
   14000c1ff:	mov    rcx,rbx
   14000c202:	call   rax
   14000c204:	test   eax,eax
   14000c206:	je     0x14000c20f
   14000c208:	mov    eax,0x1
   14000c20d:	jmp    0x14000c211
   14000c20f:	xor    eax,eax
   14000c211:	add    rsp,0x20
   14000c215:	pop    rbx
   14000c216:	ret    
   14000c217:	int3   
   14000c218:	int3   
   14000c219:	int3   
   14000c21a:	int3   
   14000c21b:	int3   
   14000c21c:	int3   
   14000c21d:	int3   
   14000c21e:	int3   
   14000c21f:	int3   
   14000c220:	rex push rbx
   14000c222:	sub    rsp,0x20
   14000c226:	mov    edx,0x8
   14000c22b:	lea    ecx,[rdx+0x18]
   14000c22e:	call   0x14000ca50
   14000c233:	mov    rcx,rax
   14000c236:	mov    rbx,rax
   14000c239:	call   QWORD PTR [rip+0xffffffffffff4f19]        # 0x140001158
   14000c23f:	mov    QWORD PTR [rip+0xc9b2],rax        # 0x140018bf8
   14000c246:	mov    QWORD PTR [rip+0xc9a3],rax        # 0x140018bf0
   14000c24d:	test   rbx,rbx
   14000c250:	jne    0x14000c257
   14000c252:	lea    eax,[rbx+0x18]
   14000c255:	jmp    0x14000c25d
   14000c257:	and    QWORD PTR [rbx],0x0
   14000c25b:	xor    eax,eax
   14000c25d:	add    rsp,0x20
   14000c261:	pop    rbx
   14000c262:	ret    
   14000c263:	int3   
   14000c264:	int3   
   14000c265:	int3   
   14000c266:	int3   
   14000c267:	int3   
   14000c268:	int3   
   14000c269:	int3   
   14000c26a:	int3   
   14000c26b:	int3   
   14000c26c:	mov    QWORD PTR [rsp+0x8],rbx
   14000c271:	mov    QWORD PTR [rsp+0x10],rsi
   14000c276:	mov    QWORD PTR [rsp+0x18],rdi
   14000c27b:	push   r12
   14000c27d:	push   r13
   14000c27f:	push   r14
   14000c281:	sub    rsp,0x20
   14000c285:	mov    r14,rcx
   14000c288:	call   0x14000a020
   14000c28d:	nop
   14000c28e:	mov    rcx,QWORD PTR [rip+0xc963]        # 0x140018bf8
   14000c295:	call   QWORD PTR [rip+0xffffffffffff4e65]        # 0x140001100
   14000c29b:	mov    r12,rax
   14000c29e:	mov    rcx,QWORD PTR [rip+0xc94b]        # 0x140018bf0
   14000c2a5:	call   QWORD PTR [rip+0xffffffffffff4e55]        # 0x140001100
   14000c2ab:	mov    rbx,rax
   14000c2ae:	cmp    rax,r12
   14000c2b1:	jb     0x14000c352
   14000c2b7:	mov    rdi,rax
   14000c2ba:	sub    rdi,r12
   14000c2bd:	lea    r13,[rdi+0x8]
   14000c2c1:	cmp    r13,0x8
   14000c2c5:	jb     0x14000c352
   14000c2cb:	mov    rcx,r12
   14000c2ce:	call   0x14000dffc
   14000c2d3:	mov    rsi,rax
   14000c2d6:	cmp    rax,r13
   14000c2d9:	jae    0x14000c330
   14000c2db:	mov    edx,0x1000
   14000c2e0:	cmp    rax,rdx
   14000c2e3:	cmovb  rdx,rax
   14000c2e7:	add    rdx,rax
   14000c2ea:	cmp    rdx,rax
   14000c2ed:	jb     0x14000c300
   14000c2ef:	mov    rcx,r12
   14000c2f2:	call   0x14000cadc
   14000c2f7:	xor    ebx,ebx
   14000c2f9:	test   rax,rax
   14000c2fc:	jne    0x14000c318
   14000c2fe:	jmp    0x14000c302
   14000c300:	xor    ebx,ebx
   14000c302:	lea    rdx,[rsi+0x20]
   14000c306:	cmp    rdx,rsi
   14000c309:	jb     0x14000c354
   14000c30b:	mov    rcx,r12
   14000c30e:	call   0x14000cadc
   14000c313:	test   rax,rax
   14000c316:	je     0x14000c354
   14000c318:	sar    rdi,0x3
   14000c31c:	lea    rbx,[rax+rdi*8]
   14000c320:	mov    rcx,rax
   14000c323:	call   QWORD PTR [rip+0xffffffffffff4e2f]        # 0x140001158
   14000c329:	mov    QWORD PTR [rip+0xc8c8],rax        # 0x140018bf8
   14000c330:	mov    rcx,r14
   14000c333:	call   QWORD PTR [rip+0xffffffffffff4e1f]        # 0x140001158
   14000c339:	mov    QWORD PTR [rbx],rax
   14000c33c:	lea    rcx,[rbx+0x8]
   14000c340:	call   QWORD PTR [rip+0xffffffffffff4e12]        # 0x140001158
   14000c346:	mov    QWORD PTR [rip+0xc8a3],rax        # 0x140018bf0
   14000c34d:	mov    rbx,r14
   14000c350:	jmp    0x14000c354
   14000c352:	xor    ebx,ebx
   14000c354:	call   0x14000a030
   14000c359:	mov    rax,rbx
   14000c35c:	mov    rbx,QWORD PTR [rsp+0x40]
   14000c361:	mov    rsi,QWORD PTR [rsp+0x48]
   14000c366:	mov    rdi,QWORD PTR [rsp+0x50]
   14000c36b:	add    rsp,0x20
   14000c36f:	pop    r14
   14000c371:	pop    r13
   14000c373:	pop    r12
   14000c375:	ret    
   14000c376:	int3   
   14000c377:	int3   
   14000c378:	int3   
   14000c379:	int3   
   14000c37a:	int3   
   14000c37b:	int3   
   14000c37c:	sub    rsp,0x28
   14000c380:	call   0x14000c26c
   14000c385:	neg    rax
   14000c388:	sbb    eax,eax
   14000c38a:	neg    eax
   14000c38c:	dec    eax
   14000c38e:	add    rsp,0x28
   14000c392:	ret    
   14000c393:	int3   
   14000c394:	int3   
   14000c395:	int3   
   14000c396:	int3   
   14000c397:	int3   
   14000c398:	int3   
   14000c399:	int3   
   14000c39a:	int3   
   14000c39b:	int3   
   14000c39c:	mov    QWORD PTR [rsp+0x8],rbx
   14000c3a1:	push   rdi
   14000c3a2:	sub    rsp,0x20
   14000c3a6:	lea    rbx,[rip+0x90d3]        # 0x140015480
   14000c3ad:	mov    edi,0xa
   14000c3b2:	mov    rcx,QWORD PTR [rbx]
   14000c3b5:	call   QWORD PTR [rip+0xffffffffffff4d9d]        # 0x140001158
   14000c3bb:	mov    QWORD PTR [rbx],rax
   14000c3be:	add    rbx,0x8
   14000c3c2:	dec    rdi
   14000c3c5:	jne    0x14000c3b2
   14000c3c7:	mov    rbx,QWORD PTR [rsp+0x30]
   14000c3cc:	add    rsp,0x20
   14000c3d0:	pop    rdi
   14000c3d1:	ret    
   14000c3d2:	int3   
   14000c3d3:	int3   
   14000c3d4:	int3   
   14000c3d5:	int3   
   14000c3d6:	int3   
   14000c3d7:	int3   
   14000c3d8:	int3   
   14000c3d9:	int3   
   14000c3da:	int3   
   14000c3db:	int3   
   14000c3dc:	int3   
   14000c3dd:	int3   
   14000c3de:	int3   
   14000c3df:	int3   
   14000c3e0:	mov    rax,rcx
   14000c3e3:	mov    ecx,0x5a4d
   14000c3e8:	cmp    WORD PTR [rax],cx
   14000c3eb:	je     0x14000c3f0
   14000c3ed:	xor    eax,eax
   14000c3ef:	ret    
   14000c3f0:	movsxd rcx,DWORD PTR [rax+0x3c]
   14000c3f4:	add    rcx,rax
   14000c3f7:	xor    eax,eax
   14000c3f9:	cmp    DWORD PTR [rcx],0x4550
   14000c3ff:	jne    0x14000c40d
   14000c401:	mov    edx,0x20b
   14000c406:	cmp    WORD PTR [rcx+0x18],dx
   14000c40a:	sete   al
   14000c40d:	repz ret 
   14000c40f:	int3   
   14000c410:	int3   
   14000c411:	int3   
   14000c412:	int3   
   14000c413:	int3   
   14000c414:	int3   
   14000c415:	int3   
   14000c416:	int3   
   14000c417:	int3   
   14000c418:	int3   
   14000c419:	int3   
   14000c41a:	int3   
   14000c41b:	int3   
   14000c41c:	int3   
   14000c41d:	int3   
   14000c41e:	int3   
   14000c41f:	int3   
   14000c420:	movsxd r8,DWORD PTR [rcx+0x3c]
   14000c424:	xor    r9d,r9d
   14000c427:	mov    r10,rdx
   14000c42a:	add    r8,rcx
   14000c42d:	movzx  eax,WORD PTR [r8+0x14]
   14000c432:	movzx  r11d,WORD PTR [r8+0x6]
   14000c437:	lea    rcx,[rax+r8*1+0x18]
   14000c43c:	test   r11d,r11d
   14000c43f:	je     0x14000c45f
   14000c441:	mov    edx,DWORD PTR [rcx+0xc]
   14000c444:	cmp    r10,rdx
   14000c447:	jb     0x14000c453
   14000c449:	mov    eax,DWORD PTR [rcx+0x8]
   14000c44c:	add    eax,edx
   14000c44e:	cmp    r10,rax
   14000c451:	jb     0x14000c462
   14000c453:	inc    r9d
   14000c456:	add    rcx,0x28
   14000c45a:	cmp    r9d,r11d
   14000c45d:	jb     0x14000c441
   14000c45f:	xor    eax,eax
   14000c461:	ret    
   14000c462:	mov    rax,rcx
   14000c465:	ret    
   14000c466:	int3   
   14000c467:	int3   
   14000c468:	int3   
   14000c469:	int3   
   14000c46a:	int3   
   14000c46b:	int3   
   14000c46c:	int3   
   14000c46d:	int3   
   14000c46e:	int3   
   14000c46f:	int3   
   14000c470:	sub    rsp,0x28
   14000c474:	mov    r8,rcx
   14000c477:	lea    r9,[rip+0xffffffffffff3b82]        # 0x140000000
   14000c47e:	mov    rcx,r9
   14000c481:	call   0x14000c3e0
   14000c486:	test   eax,eax
   14000c488:	je     0x14000c4ac
   14000c48a:	sub    r8,r9
   14000c48d:	mov    rdx,r8
   14000c490:	mov    rcx,r9
   14000c493:	call   0x14000c420
   14000c498:	test   rax,rax
   14000c49b:	je     0x14000c4ac
   14000c49d:	mov    eax,DWORD PTR [rax+0x24]
   14000c4a0:	shr    eax,0x1f
   14000c4a3:	not    eax
   14000c4a5:	and    eax,0x1
   14000c4a8:	jmp    0x14000c4ac
   14000c4aa:	xor    eax,eax
   14000c4ac:	add    rsp,0x28
   14000c4b0:	ret    
   14000c4b1:	int3   
   14000c4b2:	int3   
   14000c4b3:	int3   
   14000c4b4:	int3   
   14000c4b5:	int3   
   14000c4b6:	int3   
   14000c4b7:	int3   
   14000c4b8:	rex push rbx
   14000c4ba:	sub    rsp,0x20
   14000c4be:	mov    r11d,DWORD PTR [r8]
   14000c4c1:	mov    rbx,rdx
   14000c4c4:	mov    r9,rcx
   14000c4c7:	and    r11d,0xfffffff8
   14000c4cb:	test   BYTE PTR [r8],0x4
   14000c4cf:	mov    r10,rcx
   14000c4d2:	je     0x14000c4e7
   14000c4d4:	mov    eax,DWORD PTR [r8+0x8]
   14000c4d8:	movsxd r10,DWORD PTR [r8+0x4]
   14000c4dc:	neg    eax
   14000c4de:	add    r10,rcx
   14000c4e1:	movsxd rcx,eax
   14000c4e4:	and    r10,rcx
   14000c4e7:	movsxd rax,r11d
   14000c4ea:	mov    rdx,QWORD PTR [rax+r10*1]
   14000c4ee:	mov    rax,QWORD PTR [rbx+0x10]
   14000c4f2:	mov    ecx,DWORD PTR [rax+0x8]
   14000c4f5:	add    rcx,QWORD PTR [rbx+0x8]
   14000c4f9:	test   BYTE PTR [rcx+0x3],0xf
   14000c4fd:	je     0x14000c50b
   14000c4ff:	movzx  eax,BYTE PTR [rcx+0x3]
   14000c503:	and    eax,0xfffffff0
   14000c506:	cdqe   
   14000c508:	add    r9,rax
   14000c50b:	xor    r9,rdx
   14000c50e:	mov    rcx,r9
   14000c511:	add    rsp,0x20
   14000c515:	pop    rbx
   14000c516:	jmp    0x140009dd0
   14000c51b:	int3   
   14000c51c:	int3   
   14000c51d:	int3   
   14000c51e:	int3   
   14000c51f:	int3   
   14000c520:	int3   
   14000c521:	int3   
   14000c522:	int3   
   14000c523:	int3   
   14000c524:	sub    rsp,0x28
   14000c528:	mov    r8,QWORD PTR [r9+0x38]
   14000c52c:	mov    rcx,rdx
   14000c52f:	mov    rdx,r9
   14000c532:	call   0x14000c4b8
   14000c537:	mov    eax,0x1
   14000c53c:	add    rsp,0x28
   14000c540:	ret    
   14000c541:	int3   
   14000c542:	int3   
   14000c543:	int3   
   14000c544:	int3   
   14000c545:	int3   
   14000c546:	int3   
   14000c547:	int3   
   14000c548:	int3   
   14000c549:	int3   
   14000c54a:	int3   
   14000c54b:	int3   
   14000c54c:	int3   
   14000c54d:	int3   
   14000c54e:	int3   
   14000c54f:	int3   
   14000c550:	int3   
   14000c551:	int3   
   14000c552:	int3   
   14000c553:	int3   
   14000c554:	int3   
   14000c555:	int3   
   14000c556:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000c560:	mov    rax,rcx
   14000c563:	neg    rcx
   14000c566:	test   rax,0x7
   14000c56c:	je     0x14000c57d
   14000c56e:	xchg   ax,ax
   14000c570:	mov    dl,BYTE PTR [rax]
   14000c572:	inc    rax
   14000c575:	test   dl,dl
   14000c577:	je     0x14000c5d8
   14000c579:	test   al,0x7
   14000c57b:	jne    0x14000c570
   14000c57d:	movabs r8,0x7efefefefefefeff
   14000c587:	movabs r11,0x8101010101010100
   14000c591:	mov    rdx,QWORD PTR [rax]
   14000c594:	mov    r9,r8
   14000c597:	add    rax,0x8
   14000c59b:	add    r9,rdx
   14000c59e:	not    rdx
   14000c5a1:	xor    rdx,r9
   14000c5a4:	and    rdx,r11
   14000c5a7:	je     0x14000c591
   14000c5a9:	mov    rdx,QWORD PTR [rax-0x8]
   14000c5ad:	test   dl,dl
   14000c5af:	je     0x14000c602
   14000c5b1:	test   dh,dh
   14000c5b3:	je     0x14000c5fc
   14000c5b5:	shr    rdx,0x10
   14000c5b9:	test   dl,dl
   14000c5bb:	je     0x14000c5f6
   14000c5bd:	test   dh,dh
   14000c5bf:	je     0x14000c5f0
   14000c5c1:	shr    rdx,0x10
   14000c5c5:	test   dl,dl
   14000c5c7:	je     0x14000c5ea
   14000c5c9:	test   dh,dh
   14000c5cb:	je     0x14000c5e4
   14000c5cd:	shr    edx,0x10
   14000c5d0:	test   dl,dl
   14000c5d2:	je     0x14000c5de
   14000c5d4:	test   dh,dh
   14000c5d6:	jne    0x14000c591
   14000c5d8:	lea    rax,[rcx+rax*1-0x1]
   14000c5dd:	ret    
   14000c5de:	lea    rax,[rcx+rax*1-0x2]
   14000c5e3:	ret    
   14000c5e4:	lea    rax,[rcx+rax*1-0x3]
   14000c5e9:	ret    
   14000c5ea:	lea    rax,[rcx+rax*1-0x4]
   14000c5ef:	ret    
   14000c5f0:	lea    rax,[rcx+rax*1-0x5]
   14000c5f5:	ret    
   14000c5f6:	lea    rax,[rcx+rax*1-0x6]
   14000c5fb:	ret    
   14000c5fc:	lea    rax,[rcx+rax*1-0x7]
   14000c601:	ret    
   14000c602:	lea    rax,[rcx+rax*1-0x8]
   14000c607:	ret    
   14000c608:	int3   
   14000c609:	int3   
   14000c60a:	int3   
   14000c60b:	int3   
   14000c60c:	int3   
   14000c60d:	int3   
   14000c60e:	int3   
   14000c60f:	int3   
   14000c610:	rex push rbx
   14000c612:	push   rbp
   14000c613:	push   rsi
   14000c614:	push   rdi
   14000c615:	push   r12
   14000c617:	push   r13
   14000c619:	push   r14
   14000c61b:	sub    rsp,0x50
   14000c61f:	mov    rax,QWORD PTR [rip+0x8a4a]        # 0x140015070
   14000c626:	xor    rax,rsp
   14000c629:	mov    QWORD PTR [rsp+0x48],rax
   14000c62e:	mov    ebp,r8d
   14000c631:	mov    r14,rdx
   14000c634:	mov    r13,rcx
   14000c637:	call   0x14000b248
   14000c63c:	xor    ebx,ebx
   14000c63e:	cmp    QWORD PTR [rip+0xadcb],rbx        # 0x140017410
   14000c645:	mov    rdi,rax
   14000c648:	jne    0x14000c723
   14000c64e:	lea    rcx,[rip+0xffffffffffff59e3]        # 0x140002038
   14000c655:	call   QWORD PTR [rip+0xffffffffffff4a0d]        # 0x140001068
   14000c65b:	mov    rsi,rax
   14000c65e:	test   rax,rax
   14000c661:	je     0x14000c7fa
   14000c667:	lea    rdx,[rip+0xffffffffffff59ba]        # 0x140002028
   14000c66e:	mov    rcx,rax
   14000c671:	call   QWORD PTR [rip+0xffffffffffff49c1]        # 0x140001038
   14000c677:	test   rax,rax
   14000c67a:	je     0x14000c7fa
   14000c680:	mov    rcx,rax
   14000c683:	call   QWORD PTR [rip+0xffffffffffff4acf]        # 0x140001158
   14000c689:	lea    rdx,[rip+0xffffffffffff5988]        # 0x140002018
   14000c690:	mov    rcx,rsi
   14000c693:	mov    QWORD PTR [rip+0xad76],rax        # 0x140017410
   14000c69a:	call   QWORD PTR [rip+0xffffffffffff4998]        # 0x140001038
   14000c6a0:	mov    rcx,rax
   14000c6a3:	call   QWORD PTR [rip+0xffffffffffff4aaf]        # 0x140001158
   14000c6a9:	lea    rdx,[rip+0xffffffffffff5950]        # 0x140002000
   14000c6b0:	mov    rcx,rsi
   14000c6b3:	mov    QWORD PTR [rip+0xad5e],rax        # 0x140017418
   14000c6ba:	call   QWORD PTR [rip+0xffffffffffff4978]        # 0x140001038
   14000c6c0:	mov    rcx,rax
   14000c6c3:	call   QWORD PTR [rip+0xffffffffffff4a8f]        # 0x140001158
   14000c6c9:	lea    rdx,[rip+0xffffffffffff5910]        # 0x140001fe0
   14000c6d0:	mov    rcx,rsi
   14000c6d3:	mov    QWORD PTR [rip+0xad46],rax        # 0x140017420
   14000c6da:	call   QWORD PTR [rip+0xffffffffffff4958]        # 0x140001038
   14000c6e0:	mov    rcx,rax
   14000c6e3:	call   QWORD PTR [rip+0xffffffffffff4a6f]        # 0x140001158
   14000c6e9:	mov    r11,rax
   14000c6ec:	mov    QWORD PTR [rip+0xad3d],rax        # 0x140017430
   14000c6f3:	test   rax,rax
   14000c6f6:	je     0x14000c71a
   14000c6f8:	lea    rdx,[rip+0xffffffffffff58c9]        # 0x140001fc8
   14000c6ff:	mov    rcx,rsi
   14000c702:	call   QWORD PTR [rip+0xffffffffffff4930]        # 0x140001038
   14000c708:	mov    rcx,rax
   14000c70b:	call   QWORD PTR [rip+0xffffffffffff4a47]        # 0x140001158
   14000c711:	mov    QWORD PTR [rip+0xad10],rax        # 0x140017428
   14000c718:	jmp    0x14000c72a
   14000c71a:	mov    rax,QWORD PTR [rip+0xad07]        # 0x140017428
   14000c721:	jmp    0x14000c731
   14000c723:	mov    rax,QWORD PTR [rip+0xacfe]        # 0x140017428
   14000c72a:	mov    r11,QWORD PTR [rip+0xacff]        # 0x140017430
   14000c731:	cmp    rax,rdi
   14000c734:	je     0x14000c798
   14000c736:	cmp    r11,rdi
   14000c739:	je     0x14000c798
   14000c73b:	mov    rcx,rax
   14000c73e:	call   QWORD PTR [rip+0xffffffffffff49bc]        # 0x140001100
   14000c744:	mov    rcx,QWORD PTR [rip+0xace5]        # 0x140017430
   14000c74b:	mov    rsi,rax
   14000c74e:	call   QWORD PTR [rip+0xffffffffffff49ac]        # 0x140001100
   14000c754:	mov    r12,rax
   14000c757:	test   rsi,rsi
   14000c75a:	je     0x14000c798
   14000c75c:	test   rax,rax
   14000c75f:	je     0x14000c798
   14000c761:	call   rsi
   14000c763:	test   rax,rax
   14000c766:	je     0x14000c792
   14000c768:	lea    rcx,[rsp+0x30]
   14000c76d:	mov    r9d,0xc
   14000c773:	lea    r8,[rsp+0x38]
   14000c778:	mov    QWORD PTR [rsp+0x20],rcx
   14000c77d:	lea    edx,[r9-0xb]
   14000c781:	mov    rcx,rax
   14000c784:	call   r12
   14000c787:	test   eax,eax
   14000c789:	je     0x14000c792
   14000c78b:	test   BYTE PTR [rsp+0x40],0x1
   14000c790:	jne    0x14000c798
   14000c792:	bts    ebp,0x15
   14000c796:	jmp    0x14000c7d8
   14000c798:	mov    rcx,QWORD PTR [rip+0xac79]        # 0x140017418
   14000c79f:	cmp    rcx,rdi
   14000c7a2:	je     0x14000c7d8
   14000c7a4:	call   QWORD PTR [rip+0xffffffffffff4956]        # 0x140001100
   14000c7aa:	test   rax,rax
   14000c7ad:	je     0x14000c7d8
   14000c7af:	call   rax
   14000c7b1:	mov    rbx,rax
   14000c7b4:	test   rax,rax
   14000c7b7:	je     0x14000c7d8
   14000c7b9:	mov    rcx,QWORD PTR [rip+0xac60]        # 0x140017420
   14000c7c0:	cmp    rcx,rdi
   14000c7c3:	je     0x14000c7d8
   14000c7c5:	call   QWORD PTR [rip+0xffffffffffff4935]        # 0x140001100
   14000c7cb:	test   rax,rax
   14000c7ce:	je     0x14000c7d8
   14000c7d0:	mov    rcx,rbx
   14000c7d3:	call   rax
   14000c7d5:	mov    rbx,rax
   14000c7d8:	mov    rcx,QWORD PTR [rip+0xac31]        # 0x140017410
   14000c7df:	call   QWORD PTR [rip+0xffffffffffff491b]        # 0x140001100
   14000c7e5:	test   rax,rax
   14000c7e8:	je     0x14000c7fa
   14000c7ea:	mov    r9d,ebp
   14000c7ed:	mov    r8,r14
   14000c7f0:	mov    rdx,r13
   14000c7f3:	mov    rcx,rbx
   14000c7f6:	call   rax
   14000c7f8:	jmp    0x14000c7fc
   14000c7fa:	xor    eax,eax
   14000c7fc:	mov    rcx,QWORD PTR [rsp+0x48]
   14000c801:	xor    rcx,rsp
   14000c804:	call   0x140009dd0
   14000c809:	add    rsp,0x50
   14000c80d:	pop    r14
   14000c80f:	pop    r13
   14000c811:	pop    r12
   14000c813:	pop    rdi
   14000c814:	pop    rsi
   14000c815:	pop    rbp
   14000c816:	pop    rbx
   14000c817:	ret    
   14000c818:	int3   
   14000c819:	int3   
   14000c81a:	int3   
   14000c81b:	int3   
   14000c81c:	int3   
   14000c81d:	int3   
   14000c81e:	int3   
   14000c81f:	int3   
   14000c820:	rex push rbx
   14000c822:	sub    rsp,0x20
   14000c826:	xor    r10d,r10d
   14000c829:	mov    r9,rcx
   14000c82c:	test   rcx,rcx
   14000c82f:	je     0x14000c83f
   14000c831:	test   rdx,rdx
   14000c834:	je     0x14000c83f
   14000c836:	test   r8,r8
   14000c839:	jne    0x14000c858
   14000c83b:	mov    WORD PTR [rcx],r10w
   14000c83f:	call   0x14000baac
   14000c844:	mov    ebx,0x16
   14000c849:	mov    DWORD PTR [rax],ebx
   14000c84b:	call   0x14000ba38
   14000c850:	mov    eax,ebx
   14000c852:	add    rsp,0x20
   14000c856:	pop    rbx
   14000c857:	ret    
   14000c858:	cmp    WORD PTR [rcx],r10w
   14000c85c:	je     0x14000c867
   14000c85e:	add    rcx,0x2
   14000c862:	dec    rdx
   14000c865:	jne    0x14000c858
   14000c867:	test   rdx,rdx
   14000c86a:	jne    0x14000c872
   14000c86c:	mov    WORD PTR [r9],r10w
   14000c870:	jmp    0x14000c83f
   14000c872:	sub    rcx,r8
   14000c875:	movzx  eax,WORD PTR [r8]
   14000c879:	mov    WORD PTR [rcx+r8*1],ax
   14000c87e:	add    r8,0x2
   14000c882:	test   ax,ax
   14000c885:	je     0x14000c88c
   14000c887:	dec    rdx
   14000c88a:	jne    0x14000c875
   14000c88c:	test   rdx,rdx
   14000c88f:	jne    0x14000c8a1
   14000c891:	mov    WORD PTR [r9],r10w
   14000c895:	call   0x14000baac
   14000c89a:	mov    ebx,0x22
   14000c89f:	jmp    0x14000c849
   14000c8a1:	xor    eax,eax
   14000c8a3:	jmp    0x14000c852
   14000c8a5:	int3   
   14000c8a6:	int3   
   14000c8a7:	int3   
   14000c8a8:	int3   
   14000c8a9:	int3   
   14000c8aa:	int3   
   14000c8ab:	int3   
   14000c8ac:	mov    rax,rcx
   14000c8af:	movzx  edx,WORD PTR [rax]
   14000c8b2:	add    rax,0x2
   14000c8b6:	test   dx,dx
   14000c8b9:	jne    0x14000c8af
   14000c8bb:	sub    rax,rcx
   14000c8be:	sar    rax,1
   14000c8c1:	dec    rax
   14000c8c4:	ret    
   14000c8c5:	int3   
   14000c8c6:	int3   
   14000c8c7:	int3   
   14000c8c8:	int3   
   14000c8c9:	int3   
   14000c8ca:	int3   
   14000c8cb:	int3   
   14000c8cc:	sub    rsp,0x28
   14000c8d0:	test   ecx,ecx
   14000c8d2:	js     0x14000c8f4
   14000c8d4:	cmp    ecx,0x2
   14000c8d7:	jle    0x14000c8e6
   14000c8d9:	cmp    ecx,0x3
   14000c8dc:	jne    0x14000c8f4
   14000c8de:	mov    eax,DWORD PTR [rip+0x9a6c]        # 0x140016350
   14000c8e4:	jmp    0x14000c907
   14000c8e6:	mov    eax,DWORD PTR [rip+0x9a64]        # 0x140016350
   14000c8ec:	mov    DWORD PTR [rip+0x9a5e],ecx        # 0x140016350
   14000c8f2:	jmp    0x14000c907
   14000c8f4:	call   0x14000baac
   14000c8f9:	mov    DWORD PTR [rax],0x16
   14000c8ff:	call   0x14000ba38
   14000c904:	or     eax,0xffffffff
   14000c907:	add    rsp,0x28
   14000c90b:	ret    
   14000c90c:	int3   
   14000c90d:	int3   
   14000c90e:	int3   
   14000c90f:	int3   
   14000c910:	int3   
   14000c911:	int3   
   14000c912:	int3   
   14000c913:	int3   
   14000c914:	int3   
   14000c915:	int3   
   14000c916:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000c920:	sub    rsp,0x4d8
   14000c927:	xor    r8,r8
   14000c92a:	xor    r9,r9
   14000c92d:	mov    QWORD PTR [rsp+0x20],rsp
   14000c932:	mov    QWORD PTR [rsp+0x28],r8
   14000c937:	call   0x140010402
   14000c93c:	add    rsp,0x4d8
   14000c943:	ret    
   14000c944:	int3   
   14000c945:	int3   
   14000c946:	int3   
   14000c947:	int3   
   14000c948:	int3   
   14000c949:	int3   
   14000c94a:	nop    WORD PTR [rax+rax*1+0x0]
   14000c950:	mov    QWORD PTR [rsp+0x8],rcx
   14000c955:	mov    QWORD PTR [rsp+0x18],rdx
   14000c95a:	mov    DWORD PTR [rsp+0x10],r8d
   14000c95f:	mov    r9,0x19930520
   14000c966:	jmp    0x14000c970
   14000c968:	int3   
   14000c969:	int3   
   14000c96a:	int3   
   14000c96b:	int3   
   14000c96c:	int3   
   14000c96d:	int3   
   14000c96e:	xchg   ax,ax
   14000c970:	ret    
   14000c971:	int3   
   14000c972:	int3   
   14000c973:	int3   
   14000c974:	int3   
   14000c975:	int3   
   14000c976:	int3   
   14000c977:	nop    WORD PTR [rax+rax*1+0x0]
   14000c980:	ret    
   14000c981:	int3   
   14000c982:	int3   
   14000c983:	int3   
   14000c984:	int3   
   14000c985:	int3   
   14000c986:	int3   
   14000c987:	int3   
   14000c988:	test   rcx,rcx
   14000c98b:	je     0x14000c9c4
   14000c98d:	push   rbx
   14000c98e:	sub    rsp,0x20
   14000c992:	mov    r8,rcx
   14000c995:	mov    rcx,QWORD PTR [rip+0xa254]        # 0x140016bf0
   14000c99c:	xor    edx,edx
   14000c99e:	call   QWORD PTR [rip+0xffffffffffff4724]        # 0x1400010c8
   14000c9a4:	test   eax,eax
   14000c9a6:	jne    0x14000c9bf
   14000c9a8:	call   0x14000baac
   14000c9ad:	mov    rbx,rax
   14000c9b0:	call   QWORD PTR [rip+0xffffffffffff467a]        # 0x140001030
   14000c9b6:	mov    ecx,eax
   14000c9b8:	call   0x14000ba5c
   14000c9bd:	mov    DWORD PTR [rbx],eax
   14000c9bf:	add    rsp,0x20
   14000c9c3:	pop    rbx
   14000c9c4:	ret    
   14000c9c5:	int3   
   14000c9c6:	int3   
   14000c9c7:	int3   
   14000c9c8:	int3   
   14000c9c9:	int3   
   14000c9ca:	int3   
   14000c9cb:	int3   
   14000c9cc:	mov    rax,rsp
   14000c9cf:	mov    QWORD PTR [rax+0x8],rbx
   14000c9d3:	mov    QWORD PTR [rax+0x10],rbp
   14000c9d7:	mov    QWORD PTR [rax+0x18],rsi
   14000c9db:	mov    QWORD PTR [rax+0x20],rdi
   14000c9df:	push   r12
   14000c9e1:	sub    rsp,0x20
   14000c9e5:	mov    edi,DWORD PTR [rip+0xaa4d]        # 0x140017438
   14000c9eb:	xor    ebp,ebp
   14000c9ed:	mov    rsi,rcx
   14000c9f0:	or     r12d,0xffffffff
   14000c9f4:	mov    rcx,rsi
   14000c9f7:	call   0x14000de5c
   14000c9fc:	mov    rbx,rax
   14000c9ff:	test   rax,rax
   14000ca02:	jne    0x14000ca2c
   14000ca04:	test   edi,edi
   14000ca06:	je     0x14000ca2c
   14000ca08:	mov    ecx,ebp
   14000ca0a:	call   QWORD PTR [rip+0xffffffffffff4800]        # 0x140001210
   14000ca10:	mov    edi,DWORD PTR [rip+0xaa22]        # 0x140017438
   14000ca16:	lea    r11d,[rbp+0x3e8]
   14000ca1d:	cmp    r11d,edi
   14000ca20:	mov    ebp,r11d
   14000ca23:	cmova  ebp,r12d
   14000ca27:	cmp    ebp,r12d
   14000ca2a:	jne    0x14000c9f4
   14000ca2c:	mov    rbp,QWORD PTR [rsp+0x38]
   14000ca31:	mov    rsi,QWORD PTR [rsp+0x40]
   14000ca36:	mov    rdi,QWORD PTR [rsp+0x48]
   14000ca3b:	mov    rax,rbx
   14000ca3e:	mov    rbx,QWORD PTR [rsp+0x30]
   14000ca43:	add    rsp,0x20
   14000ca47:	pop    r12
   14000ca49:	ret    
   14000ca4a:	int3   
   14000ca4b:	int3   
   14000ca4c:	int3   
   14000ca4d:	int3   
   14000ca4e:	int3   
   14000ca4f:	int3   
   14000ca50:	mov    rax,rsp
   14000ca53:	mov    QWORD PTR [rax+0x8],rbx
   14000ca57:	mov    QWORD PTR [rax+0x10],rbp
   14000ca5b:	mov    QWORD PTR [rax+0x18],rsi
   14000ca5f:	mov    QWORD PTR [rax+0x20],rdi
   14000ca63:	push   r12
   14000ca65:	sub    rsp,0x20
   14000ca69:	xor    edi,edi
   14000ca6b:	mov    rsi,rdx
   14000ca6e:	mov    rbp,rcx
   14000ca71:	or     r12d,0xffffffff
   14000ca75:	xor    r8d,r8d
   14000ca78:	mov    rdx,rsi
   14000ca7b:	mov    rcx,rbp
   14000ca7e:	call   0x14000e04c
   14000ca83:	mov    rbx,rax
   14000ca86:	test   rax,rax
   14000ca89:	jne    0x14000cab5
   14000ca8b:	cmp    DWORD PTR [rip+0xa9a7],eax        # 0x140017438
   14000ca91:	jbe    0x14000cab5
   14000ca93:	mov    ecx,edi
   14000ca95:	call   QWORD PTR [rip+0xffffffffffff4775]        # 0x140001210
   14000ca9b:	lea    r11d,[rdi+0x3e8]
   14000caa2:	cmp    r11d,DWORD PTR [rip+0xa98f]        # 0x140017438
   14000caa9:	mov    edi,r11d
   14000caac:	cmova  edi,r12d
   14000cab0:	cmp    edi,r12d
   14000cab3:	jne    0x14000ca75
   14000cab5:	mov    rbp,QWORD PTR [rsp+0x38]
   14000caba:	mov    rsi,QWORD PTR [rsp+0x40]
   14000cabf:	mov    rdi,QWORD PTR [rsp+0x48]
   14000cac4:	mov    rax,rbx
   14000cac7:	mov    rbx,QWORD PTR [rsp+0x30]
   14000cacc:	add    rsp,0x20
   14000cad0:	pop    r12
   14000cad2:	ret    
   14000cad3:	int3   
   14000cad4:	int3   
   14000cad5:	int3   
   14000cad6:	int3   
   14000cad7:	int3   
   14000cad8:	int3   
   14000cad9:	int3   
   14000cada:	int3   
   14000cadb:	int3   
   14000cadc:	mov    rax,rsp
   14000cadf:	mov    QWORD PTR [rax+0x8],rbx
   14000cae3:	mov    QWORD PTR [rax+0x10],rbp
   14000cae7:	mov    QWORD PTR [rax+0x18],rsi
   14000caeb:	mov    QWORD PTR [rax+0x20],rdi
   14000caef:	push   r12
   14000caf1:	sub    rsp,0x20
   14000caf5:	xor    esi,esi
   14000caf7:	mov    rdi,rdx
   14000cafa:	mov    rbp,rcx
   14000cafd:	or     r12d,0xffffffff
   14000cb01:	mov    rdx,rdi
   14000cb04:	mov    rcx,rbp
   14000cb07:	call   0x14000e0ec
   14000cb0c:	mov    rbx,rax
   14000cb0f:	test   rax,rax
   14000cb12:	jne    0x14000cb43
   14000cb14:	test   rdi,rdi
   14000cb17:	je     0x14000cb43
   14000cb19:	cmp    DWORD PTR [rip+0xa919],eax        # 0x140017438
   14000cb1f:	jbe    0x14000cb43
   14000cb21:	mov    ecx,esi
   14000cb23:	call   QWORD PTR [rip+0xffffffffffff46e7]        # 0x140001210
   14000cb29:	lea    r11d,[rsi+0x3e8]
   14000cb30:	cmp    r11d,DWORD PTR [rip+0xa901]        # 0x140017438
   14000cb37:	mov    esi,r11d
   14000cb3a:	cmova  esi,r12d
   14000cb3e:	cmp    esi,r12d
   14000cb41:	jne    0x14000cb01
   14000cb43:	mov    rbp,QWORD PTR [rsp+0x38]
   14000cb48:	mov    rsi,QWORD PTR [rsp+0x40]
   14000cb4d:	mov    rdi,QWORD PTR [rsp+0x48]
   14000cb52:	mov    rax,rbx
   14000cb55:	mov    rbx,QWORD PTR [rsp+0x30]
   14000cb5a:	add    rsp,0x20
   14000cb5e:	pop    r12
   14000cb60:	ret    
   14000cb61:	int3   
   14000cb62:	int3   
   14000cb63:	int3   
   14000cb64:	int3   
   14000cb65:	int3   
   14000cb66:	int3   
   14000cb67:	int3   
   14000cb68:	int3   
   14000cb69:	int3   
   14000cb6a:	int3   
   14000cb6b:	int3   
   14000cb6c:	int3   
   14000cb6d:	int3   
   14000cb6e:	int3   
   14000cb6f:	int3   
   14000cb70:	int3   
   14000cb71:	int3   
   14000cb72:	int3   
   14000cb73:	int3   
   14000cb74:	int3   
   14000cb75:	int3   
   14000cb76:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000cb80:	mov    r11,rcx
   14000cb83:	sub    rdx,rcx
   14000cb86:	jb     0x14000cd2a
   14000cb8c:	cmp    r8,0x8
   14000cb90:	jb     0x14000cbf3
   14000cb92:	test   cl,0x7
   14000cb95:	je     0x14000cbcd
   14000cb97:	test   cl,0x1
   14000cb9a:	je     0x14000cba7
   14000cb9c:	mov    al,BYTE PTR [rdx+rcx*1]
   14000cb9f:	dec    r8
   14000cba2:	mov    BYTE PTR [rcx],al
   14000cba4:	inc    rcx
   14000cba7:	test   cl,0x2
   14000cbaa:	je     0x14000cbbb
   14000cbac:	mov    ax,WORD PTR [rdx+rcx*1]
   14000cbb0:	sub    r8,0x2
   14000cbb4:	mov    WORD PTR [rcx],ax
   14000cbb7:	add    rcx,0x2
   14000cbbb:	test   cl,0x4
   14000cbbe:	je     0x14000cbcd
   14000cbc0:	mov    eax,DWORD PTR [rdx+rcx*1]
   14000cbc3:	sub    r8,0x4
   14000cbc7:	mov    DWORD PTR [rcx],eax
   14000cbc9:	add    rcx,0x4
   14000cbcd:	mov    r9,r8
   14000cbd0:	shr    r9,0x5
   14000cbd4:	jne    0x14000cc27
   14000cbd6:	mov    r9,r8
   14000cbd9:	shr    r9,0x3
   14000cbdd:	je     0x14000cbf3
   14000cbdf:	mov    rax,QWORD PTR [rdx+rcx*1]
   14000cbe3:	mov    QWORD PTR [rcx],rax
   14000cbe6:	add    rcx,0x8
   14000cbea:	dec    r9
   14000cbed:	jne    0x14000cbdf
   14000cbef:	and    r8,0x7
   14000cbf3:	test   r8,r8
   14000cbf6:	jne    0x14000cc00
   14000cbf8:	mov    rax,r11
   14000cbfb:	ret    
   14000cbfc:	nop    DWORD PTR [rax+0x0]
   14000cc00:	mov    al,BYTE PTR [rdx+rcx*1]
   14000cc03:	mov    BYTE PTR [rcx],al
   14000cc05:	inc    rcx
   14000cc08:	dec    r8
   14000cc0b:	jne    0x14000cc00
   14000cc0d:	mov    rax,r11
   14000cc10:	ret    
   14000cc11:	data16 data16 data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14000cc20:	data16 data16 xchg ax,ax
   14000cc24:	data16 xchg ax,ax
   14000cc27:	cmp    r9,0x2000
   14000cc2e:	jae    0x14000cc72
   14000cc30:	mov    rax,QWORD PTR [rdx+rcx*1]
   14000cc34:	mov    r10,QWORD PTR [rdx+rcx*1+0x8]
   14000cc39:	add    rcx,0x20
   14000cc3d:	mov    QWORD PTR [rcx-0x20],rax
   14000cc41:	mov    QWORD PTR [rcx-0x18],r10
   14000cc45:	mov    rax,QWORD PTR [rdx+rcx*1-0x10]
   14000cc4a:	mov    r10,QWORD PTR [rdx+rcx*1-0x8]
   14000cc4f:	dec    r9
   14000cc52:	mov    QWORD PTR [rcx-0x10],rax
   14000cc56:	mov    QWORD PTR [rcx-0x8],r10
   14000cc5a:	jne    0x14000cc30
   14000cc5c:	and    r8,0x1f
   14000cc60:	jmp    0x14000cbd6
   14000cc65:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14000cc70:	xchg   ax,ax
   14000cc72:	cmp    rdx,0x1000
   14000cc79:	jb     0x14000cc30
   14000cc7b:	mov    eax,0x20
   14000cc80:	prefetchnta BYTE PTR [rdx+rcx*1]
   14000cc84:	prefetchnta BYTE PTR [rdx+rcx*1+0x40]
   14000cc89:	add    rcx,0x80
   14000cc90:	dec    eax
   14000cc92:	jne    0x14000cc80
   14000cc94:	sub    rcx,0x1000
   14000cc9b:	mov    eax,0x40
   14000cca0:	mov    r9,QWORD PTR [rdx+rcx*1]
   14000cca4:	mov    r10,QWORD PTR [rdx+rcx*1+0x8]
   14000cca9:	movnti QWORD PTR [rcx],r9
   14000ccad:	movnti QWORD PTR [rcx+0x8],r10
   14000ccb2:	mov    r9,QWORD PTR [rdx+rcx*1+0x10]
   14000ccb7:	mov    r10,QWORD PTR [rdx+rcx*1+0x18]
   14000ccbc:	movnti QWORD PTR [rcx+0x10],r9
   14000ccc1:	movnti QWORD PTR [rcx+0x18],r10
   14000ccc6:	mov    r9,QWORD PTR [rdx+rcx*1+0x20]
   14000cccb:	mov    r10,QWORD PTR [rdx+rcx*1+0x28]
   14000ccd0:	add    rcx,0x40
   14000ccd4:	movnti QWORD PTR [rcx-0x20],r9
   14000ccd9:	movnti QWORD PTR [rcx-0x18],r10
   14000ccde:	mov    r9,QWORD PTR [rdx+rcx*1-0x10]
   14000cce3:	mov    r10,QWORD PTR [rdx+rcx*1-0x8]
   14000cce8:	dec    eax
   14000ccea:	movnti QWORD PTR [rcx-0x10],r9
   14000ccef:	movnti QWORD PTR [rcx-0x8],r10
   14000ccf4:	jne    0x14000cca0
   14000ccf6:	sub    r8,0x1000
   14000ccfd:	cmp    r8,0x1000
   14000cd04:	jae    0x14000cc7b
   14000cd0a:	lock or BYTE PTR [rsp],0x0
   14000cd0f:	jmp    0x14000cbcd
   14000cd14:	data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14000cd20:	data16 data16 xchg ax,ax
   14000cd24:	data16 data16 xchg ax,ax
   14000cd28:	xchg   ax,ax
   14000cd2a:	add    rcx,r8
   14000cd2d:	cmp    r8,0x8
   14000cd31:	jb     0x14000cd94
   14000cd33:	test   cl,0x7
   14000cd36:	je     0x14000cd6e
   14000cd38:	test   cl,0x1
   14000cd3b:	je     0x14000cd48
   14000cd3d:	dec    rcx
   14000cd40:	mov    al,BYTE PTR [rdx+rcx*1]
   14000cd43:	dec    r8
   14000cd46:	mov    BYTE PTR [rcx],al
   14000cd48:	test   cl,0x2
   14000cd4b:	je     0x14000cd5c
   14000cd4d:	sub    rcx,0x2
   14000cd51:	mov    ax,WORD PTR [rdx+rcx*1]
   14000cd55:	sub    r8,0x2
   14000cd59:	mov    WORD PTR [rcx],ax
   14000cd5c:	test   cl,0x4
   14000cd5f:	je     0x14000cd6e
   14000cd61:	sub    rcx,0x4
   14000cd65:	mov    eax,DWORD PTR [rdx+rcx*1]
   14000cd68:	sub    r8,0x4
   14000cd6c:	mov    DWORD PTR [rcx],eax
   14000cd6e:	mov    r9,r8
   14000cd71:	shr    r9,0x5
   14000cd75:	jne    0x14000cdc7
   14000cd77:	mov    r9,r8
   14000cd7a:	shr    r9,0x3
   14000cd7e:	je     0x14000cd94
   14000cd80:	sub    rcx,0x8
   14000cd84:	mov    rax,QWORD PTR [rdx+rcx*1]
   14000cd88:	dec    r9
   14000cd8b:	mov    QWORD PTR [rcx],rax
   14000cd8e:	jne    0x14000cd80
   14000cd90:	and    r8,0x7
   14000cd94:	test   r8,r8
   14000cd97:	jne    0x14000cda0
   14000cd99:	mov    rax,r11
   14000cd9c:	ret    
   14000cd9d:	nop    DWORD PTR [rax]
   14000cda0:	dec    rcx
   14000cda3:	mov    al,BYTE PTR [rdx+rcx*1]
   14000cda6:	dec    r8
   14000cda9:	mov    BYTE PTR [rcx],al
   14000cdab:	jne    0x14000cda0
   14000cdad:	mov    rax,r11
   14000cdb0:	ret    
   14000cdb1:	data16 data16 data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14000cdc0:	data16 data16 xchg ax,ax
   14000cdc4:	data16 xchg ax,ax
   14000cdc7:	cmp    r9,0x2000
   14000cdce:	jae    0x14000ce12
   14000cdd0:	mov    rax,QWORD PTR [rdx+rcx*1-0x8]
   14000cdd5:	mov    r10,QWORD PTR [rdx+rcx*1-0x10]
   14000cdda:	sub    rcx,0x20
   14000cdde:	mov    QWORD PTR [rcx+0x18],rax
   14000cde2:	mov    QWORD PTR [rcx+0x10],r10
   14000cde6:	mov    rax,QWORD PTR [rdx+rcx*1+0x8]
   14000cdeb:	mov    r10,QWORD PTR [rdx+rcx*1]
   14000cdef:	dec    r9
   14000cdf2:	mov    QWORD PTR [rcx+0x8],rax
   14000cdf6:	mov    QWORD PTR [rcx],r10
   14000cdf9:	jne    0x14000cdd0
   14000cdfb:	and    r8,0x1f
   14000cdff:	jmp    0x14000cd77
   14000ce04:	data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14000ce10:	xchg   ax,ax
   14000ce12:	cmp    rdx,0xfffffffffffff000
   14000ce19:	ja     0x14000cdd0
   14000ce1b:	mov    eax,0x20
   14000ce20:	sub    rcx,0x80
   14000ce27:	prefetchnta BYTE PTR [rdx+rcx*1]
   14000ce2b:	prefetchnta BYTE PTR [rdx+rcx*1+0x40]
   14000ce30:	dec    eax
   14000ce32:	jne    0x14000ce20
   14000ce34:	add    rcx,0x1000
   14000ce3b:	mov    eax,0x40
   14000ce40:	mov    r9,QWORD PTR [rdx+rcx*1-0x8]
   14000ce45:	mov    r10,QWORD PTR [rdx+rcx*1-0x10]
   14000ce4a:	movnti QWORD PTR [rcx-0x8],r9
   14000ce4f:	movnti QWORD PTR [rcx-0x10],r10
   14000ce54:	mov    r9,QWORD PTR [rdx+rcx*1-0x18]
   14000ce59:	mov    r10,QWORD PTR [rdx+rcx*1-0x20]
   14000ce5e:	movnti QWORD PTR [rcx-0x18],r9
   14000ce63:	movnti QWORD PTR [rcx-0x20],r10
   14000ce68:	mov    r9,QWORD PTR [rdx+rcx*1-0x28]
   14000ce6d:	mov    r10,QWORD PTR [rdx+rcx*1-0x30]
   14000ce72:	sub    rcx,0x40
   14000ce76:	movnti QWORD PTR [rcx+0x18],r9
   14000ce7b:	movnti QWORD PTR [rcx+0x10],r10
   14000ce80:	mov    r9,QWORD PTR [rdx+rcx*1+0x8]
   14000ce85:	mov    r10,QWORD PTR [rdx+rcx*1]
   14000ce89:	dec    eax
   14000ce8b:	movnti QWORD PTR [rcx+0x8],r9
   14000ce90:	movnti QWORD PTR [rcx],r10
   14000ce94:	jne    0x14000ce40
   14000ce96:	sub    r8,0x1000
   14000ce9d:	cmp    r8,0x1000
   14000cea4:	jae    0x14000ce1b
   14000ceaa:	lock or BYTE PTR [rsp],0x0
   14000ceaf:	jmp    0x14000cd6e
   14000ceb4:	int3   
   14000ceb5:	int3   
   14000ceb6:	int3   
   14000ceb7:	int3   
   14000ceb8:	int3   
   14000ceb9:	int3   
   14000ceba:	int3   
   14000cebb:	int3   
   14000cebc:	lock inc DWORD PTR [rcx]
   14000cebf:	mov    rax,QWORD PTR [rcx+0x110]
   14000cec6:	test   rax,rax
   14000cec9:	je     0x14000cece
   14000cecb:	lock inc DWORD PTR [rax]
   14000cece:	mov    rax,QWORD PTR [rcx+0x120]
   14000ced5:	test   rax,rax
   14000ced8:	je     0x14000cedd
   14000ceda:	lock inc DWORD PTR [rax]
   14000cedd:	mov    rax,QWORD PTR [rcx+0x118]
   14000cee4:	test   rax,rax
   14000cee7:	je     0x14000ceec
   14000cee9:	lock inc DWORD PTR [rax]
   14000ceec:	mov    rax,QWORD PTR [rcx+0x130]
   14000cef3:	test   rax,rax
   14000cef6:	je     0x14000cefb
   14000cef8:	lock inc DWORD PTR [rax]
   14000cefb:	lea    rax,[rcx+0x58]
   14000ceff:	mov    r8d,0x6
   14000cf05:	lea    rdx,[rip+0x85c4]        # 0x1400154d0
   14000cf0c:	cmp    QWORD PTR [rax-0x10],rdx
   14000cf10:	je     0x14000cf1d
   14000cf12:	mov    rdx,QWORD PTR [rax]
   14000cf15:	test   rdx,rdx
   14000cf18:	je     0x14000cf1d
   14000cf1a:	lock inc DWORD PTR [rdx]
   14000cf1d:	cmp    QWORD PTR [rax-0x8],0x0
   14000cf22:	je     0x14000cf30
   14000cf24:	mov    rdx,QWORD PTR [rax+0x8]
   14000cf28:	test   rdx,rdx
   14000cf2b:	je     0x14000cf30
   14000cf2d:	lock inc DWORD PTR [rdx]
   14000cf30:	add    rax,0x20
   14000cf34:	dec    r8
   14000cf37:	jne    0x14000cf05
   14000cf39:	mov    rax,QWORD PTR [rcx+0x158]
   14000cf40:	lock inc DWORD PTR [rax+0x160]
   14000cf47:	ret    
   14000cf48:	int3   
   14000cf49:	int3   
   14000cf4a:	int3   
   14000cf4b:	int3   
   14000cf4c:	int3   
   14000cf4d:	int3   
   14000cf4e:	int3   
   14000cf4f:	int3   
   14000cf50:	test   rcx,rcx
   14000cf53:	je     0x14000cff0
   14000cf59:	or     r9d,0xffffffff
   14000cf5d:	lock add DWORD PTR [rcx],r9d
   14000cf61:	mov    rax,QWORD PTR [rcx+0x110]
   14000cf68:	test   rax,rax
   14000cf6b:	je     0x14000cf71
   14000cf6d:	lock add DWORD PTR [rax],r9d
   14000cf71:	mov    rax,QWORD PTR [rcx+0x120]
   14000cf78:	test   rax,rax
   14000cf7b:	je     0x14000cf81
   14000cf7d:	lock add DWORD PTR [rax],r9d
   14000cf81:	mov    rax,QWORD PTR [rcx+0x118]
   14000cf88:	test   rax,rax
   14000cf8b:	je     0x14000cf91
   14000cf8d:	lock add DWORD PTR [rax],r9d
   14000cf91:	mov    rax,QWORD PTR [rcx+0x130]
   14000cf98:	test   rax,rax
   14000cf9b:	je     0x14000cfa1
   14000cf9d:	lock add DWORD PTR [rax],r9d
   14000cfa1:	lea    rax,[rcx+0x58]
   14000cfa5:	mov    r8d,0x6
   14000cfab:	lea    rdx,[rip+0x851e]        # 0x1400154d0
   14000cfb2:	cmp    QWORD PTR [rax-0x10],rdx
   14000cfb6:	je     0x14000cfc4
   14000cfb8:	mov    rdx,QWORD PTR [rax]
   14000cfbb:	test   rdx,rdx
   14000cfbe:	je     0x14000cfc4
   14000cfc0:	lock add DWORD PTR [rdx],r9d
   14000cfc4:	cmp    QWORD PTR [rax-0x8],0x0
   14000cfc9:	je     0x14000cfd8
   14000cfcb:	mov    rdx,QWORD PTR [rax+0x8]
   14000cfcf:	test   rdx,rdx
   14000cfd2:	je     0x14000cfd8
   14000cfd4:	lock add DWORD PTR [rdx],r9d
   14000cfd8:	add    rax,0x20
   14000cfdc:	dec    r8
   14000cfdf:	jne    0x14000cfab
   14000cfe1:	mov    rax,QWORD PTR [rcx+0x158]
   14000cfe8:	lock add DWORD PTR [rax+0x160],r9d
   14000cff0:	mov    rax,rcx
   14000cff3:	ret    
   14000cff4:	int3   
   14000cff5:	int3   
   14000cff6:	int3   
   14000cff7:	int3   
   14000cff8:	int3   
   14000cff9:	int3   
   14000cffa:	int3   
   14000cffb:	int3   
   14000cffc:	mov    QWORD PTR [rsp+0x8],rbx
   14000d001:	mov    QWORD PTR [rsp+0x10],rsi
   14000d006:	push   rdi
   14000d007:	sub    rsp,0x20
   14000d00b:	mov    rax,QWORD PTR [rcx+0x128]
   14000d012:	mov    rbx,rcx
   14000d015:	test   rax,rax
   14000d018:	je     0x14000d093
   14000d01a:	lea    rcx,[rip+0x8e5f]        # 0x140015e80
   14000d021:	cmp    rax,rcx
   14000d024:	je     0x14000d093
   14000d026:	mov    rax,QWORD PTR [rbx+0x110]
   14000d02d:	test   rax,rax
   14000d030:	je     0x14000d093
   14000d032:	cmp    DWORD PTR [rax],0x0
   14000d035:	jne    0x14000d093
   14000d037:	mov    rcx,QWORD PTR [rbx+0x120]
   14000d03e:	test   rcx,rcx
   14000d041:	je     0x14000d059
   14000d043:	cmp    DWORD PTR [rcx],0x0
   14000d046:	jne    0x14000d059
   14000d048:	call   0x14000c988
   14000d04d:	mov    rcx,QWORD PTR [rbx+0x128]
   14000d054:	call   0x14000e630
   14000d059:	mov    rcx,QWORD PTR [rbx+0x118]
   14000d060:	test   rcx,rcx
   14000d063:	je     0x14000d07b
   14000d065:	cmp    DWORD PTR [rcx],0x0
   14000d068:	jne    0x14000d07b
   14000d06a:	call   0x14000c988
   14000d06f:	mov    rcx,QWORD PTR [rbx+0x128]
   14000d076:	call   0x14000e5bc
   14000d07b:	mov    rcx,QWORD PTR [rbx+0x110]
   14000d082:	call   0x14000c988
   14000d087:	mov    rcx,QWORD PTR [rbx+0x128]
   14000d08e:	call   0x14000c988
   14000d093:	mov    rax,QWORD PTR [rbx+0x130]
   14000d09a:	test   rax,rax
   14000d09d:	je     0x14000d0e6
   14000d09f:	cmp    DWORD PTR [rax],0x0
   14000d0a2:	jne    0x14000d0e6
   14000d0a4:	mov    rcx,QWORD PTR [rbx+0x138]
   14000d0ab:	sub    rcx,0xfe
   14000d0b2:	call   0x14000c988
   14000d0b7:	mov    rcx,QWORD PTR [rbx+0x148]
   14000d0be:	mov    edi,0x80
   14000d0c3:	sub    rcx,rdi
   14000d0c6:	call   0x14000c988
   14000d0cb:	mov    rcx,QWORD PTR [rbx+0x150]
   14000d0d2:	sub    rcx,rdi
   14000d0d5:	call   0x14000c988
   14000d0da:	mov    rcx,QWORD PTR [rbx+0x130]
   14000d0e1:	call   0x14000c988
   14000d0e6:	mov    rcx,QWORD PTR [rbx+0x158]
   14000d0ed:	lea    rax,[rip+0x83ec]        # 0x1400154e0
   14000d0f4:	cmp    rcx,rax
   14000d0f7:	je     0x14000d113
   14000d0f9:	cmp    DWORD PTR [rcx+0x160],0x0
   14000d100:	jne    0x14000d113
   14000d102:	call   0x14000e1c8
   14000d107:	mov    rcx,QWORD PTR [rbx+0x158]
   14000d10e:	call   0x14000c988
   14000d113:	lea    rdi,[rbx+0x58]
   14000d117:	mov    esi,0x6
   14000d11c:	lea    rax,[rip+0x83ad]        # 0x1400154d0
   14000d123:	cmp    QWORD PTR [rdi-0x10],rax
   14000d127:	je     0x14000d13b
   14000d129:	mov    rcx,QWORD PTR [rdi]
   14000d12c:	test   rcx,rcx
   14000d12f:	je     0x14000d13b
   14000d131:	cmp    DWORD PTR [rcx],0x0
   14000d134:	jne    0x14000d13b
   14000d136:	call   0x14000c988
   14000d13b:	cmp    QWORD PTR [rdi-0x8],0x0
   14000d140:	je     0x14000d155
   14000d142:	mov    rcx,QWORD PTR [rdi+0x8]
   14000d146:	test   rcx,rcx
   14000d149:	je     0x14000d155
   14000d14b:	cmp    DWORD PTR [rcx],0x0
   14000d14e:	jne    0x14000d155
   14000d150:	call   0x14000c988
   14000d155:	add    rdi,0x20
   14000d159:	dec    rsi
   14000d15c:	jne    0x14000d11c
   14000d15e:	mov    rcx,rbx
   14000d161:	mov    rbx,QWORD PTR [rsp+0x30]
   14000d166:	mov    rsi,QWORD PTR [rsp+0x38]
   14000d16b:	add    rsp,0x20
   14000d16f:	pop    rdi
   14000d170:	jmp    0x14000c988
   14000d175:	int3   
   14000d176:	int3   
   14000d177:	int3   
   14000d178:	int3   
   14000d179:	int3   
   14000d17a:	int3   
   14000d17b:	int3   
   14000d17c:	rex push rbx
   14000d17e:	sub    rsp,0x20
   14000d182:	mov    rbx,rdx
   14000d185:	test   rdx,rdx
   14000d188:	je     0x14000d1cb
   14000d18a:	test   rcx,rcx
   14000d18d:	je     0x14000d1cb
   14000d18f:	mov    r10,QWORD PTR [rcx]
   14000d192:	cmp    r10,rdx
   14000d195:	je     0x14000d1c6
   14000d197:	mov    QWORD PTR [rcx],rdx
   14000d19a:	mov    rcx,rdx
   14000d19d:	call   0x14000cebc
   14000d1a2:	test   r10,r10
   14000d1a5:	je     0x14000d1c6
   14000d1a7:	mov    rcx,r10
   14000d1aa:	call   0x14000cf50
   14000d1af:	cmp    DWORD PTR [r10],0x0
   14000d1b3:	jne    0x14000d1c6
   14000d1b5:	lea    rax,[rip+0x85e4]        # 0x1400157a0
   14000d1bc:	cmp    r10,rax
   14000d1bf:	je     0x14000d1c6
   14000d1c1:	call   0x14000cffc
   14000d1c6:	mov    rax,rbx
   14000d1c9:	jmp    0x14000d1cd
   14000d1cb:	xor    eax,eax
   14000d1cd:	add    rsp,0x20
   14000d1d1:	pop    rbx
   14000d1d2:	ret    
   14000d1d3:	int3   
   14000d1d4:	int3   
   14000d1d5:	int3   
   14000d1d6:	int3   
   14000d1d7:	int3   
   14000d1d8:	int3   
   14000d1d9:	int3   
   14000d1da:	int3   
   14000d1db:	int3   
   14000d1dc:	rex push rbx
   14000d1de:	sub    rsp,0x20
   14000d1e2:	call   0x14000b3cc
   14000d1e7:	mov    rbx,rax
   14000d1ea:	mov    ecx,DWORD PTR [rax+0xc8]
   14000d1f0:	test   DWORD PTR [rip+0x8d22],ecx        # 0x140015f18
   14000d1f6:	je     0x14000d210
   14000d1f8:	cmp    QWORD PTR [rax+0xc0],0x0
   14000d200:	je     0x14000d210
   14000d202:	call   0x14000b3cc
   14000d207:	mov    rbx,QWORD PTR [rax+0xc0]
   14000d20e:	jmp    0x14000d23b
   14000d210:	mov    ecx,0xc
   14000d215:	call   0x14000bef8
   14000d21a:	nop
   14000d21b:	lea    rcx,[rbx+0xc0]
   14000d222:	mov    rdx,QWORD PTR [rip+0x86d7]        # 0x140015900
   14000d229:	call   0x14000d17c
   14000d22e:	mov    rbx,rax
   14000d231:	mov    ecx,0xc
   14000d236:	call   0x14000bdec
   14000d23b:	test   rbx,rbx
   14000d23e:	jne    0x14000d248
   14000d240:	lea    ecx,[rbx+0x20]
   14000d243:	call   0x14000a3a8
   14000d248:	mov    rax,rbx
   14000d24b:	add    rsp,0x20
   14000d24f:	pop    rbx
   14000d250:	ret    
   14000d251:	int3   
   14000d252:	int3   
   14000d253:	int3   
   14000d254:	int3   
   14000d255:	int3   
   14000d256:	int3   
   14000d257:	int3   
   14000d258:	mov    QWORD PTR [rsp+0x8],rbx
   14000d25d:	mov    QWORD PTR [rsp+0x10],rbp
   14000d262:	mov    QWORD PTR [rsp+0x18],rsi
   14000d267:	push   rdi
   14000d268:	sub    rsp,0x20
   14000d26c:	lea    rbx,[rcx+0x1c]
   14000d270:	mov    rbp,rcx
   14000d273:	mov    esi,0x101
   14000d278:	mov    rcx,rbx
   14000d27b:	mov    r8d,esi
   14000d27e:	xor    edx,edx
   14000d280:	call   0x14000db90
   14000d285:	xor    r11d,r11d
   14000d288:	lea    rdi,[rbp+0x10]
   14000d28c:	lea    ecx,[r11+0x6]
   14000d290:	movzx  eax,r11w
   14000d294:	mov    DWORD PTR [rbp+0xc],r11d
   14000d298:	mov    QWORD PTR [rbp+0x4],r11
   14000d29c:	rep stos WORD PTR es:[rdi],ax
   14000d29f:	lea    rdi,[rip+0x866a]        # 0x140015910
   14000d2a6:	sub    rdi,rbp
   14000d2a9:	mov    al,BYTE PTR [rdi+rbx*1]
   14000d2ac:	mov    BYTE PTR [rbx],al
   14000d2ae:	inc    rbx
   14000d2b1:	dec    rsi
   14000d2b4:	jne    0x14000d2a9
   14000d2b6:	lea    rcx,[rbp+0x11d]
   14000d2bd:	mov    edx,0x100
   14000d2c2:	mov    al,BYTE PTR [rcx+rdi*1]
   14000d2c5:	mov    BYTE PTR [rcx],al
   14000d2c7:	inc    rcx
   14000d2ca:	dec    rdx
   14000d2cd:	jne    0x14000d2c2
   14000d2cf:	mov    rbx,QWORD PTR [rsp+0x30]
   14000d2d4:	mov    rbp,QWORD PTR [rsp+0x38]
   14000d2d9:	mov    rsi,QWORD PTR [rsp+0x40]
   14000d2de:	add    rsp,0x20
   14000d2e2:	pop    rdi
   14000d2e3:	ret    
   14000d2e4:	int3   
   14000d2e5:	int3   
   14000d2e6:	int3   
   14000d2e7:	int3   
   14000d2e8:	int3   
   14000d2e9:	int3   
   14000d2ea:	int3   
   14000d2eb:	int3   
   14000d2ec:	mov    rax,rsp
   14000d2ef:	mov    QWORD PTR [rax+0x10],rbx
   14000d2f3:	mov    QWORD PTR [rax+0x18],rsi
   14000d2f7:	mov    QWORD PTR [rax+0x20],rdi
   14000d2fb:	push   rbp
   14000d2fc:	lea    rbp,[rax-0x488]
   14000d303:	sub    rsp,0x580
   14000d30a:	mov    rax,QWORD PTR [rip+0x7d5f]        # 0x140015070
   14000d311:	xor    rax,rsp
   14000d314:	mov    QWORD PTR [rbp+0x470],rax
   14000d31b:	mov    rsi,rcx
   14000d31e:	mov    ecx,DWORD PTR [rcx+0x4]
   14000d321:	lea    rdx,[rsp+0x50]
   14000d326:	call   QWORD PTR [rip+0xffffffffffff3eec]        # 0x140001218
   14000d32c:	mov    ebx,0x100
   14000d331:	test   eax,eax
   14000d333:	je     0x14000d475
   14000d339:	xor    eax,eax
   14000d33b:	lea    rcx,[rsp+0x70]
   14000d340:	mov    BYTE PTR [rcx],al
   14000d342:	inc    eax
   14000d344:	inc    rcx
   14000d347:	cmp    eax,ebx
   14000d349:	jb     0x14000d340
   14000d34b:	mov    al,BYTE PTR [rsp+0x56]
   14000d34f:	mov    BYTE PTR [rsp+0x70],0x20
   14000d354:	lea    rdi,[rsp+0x56]
   14000d359:	jmp    0x14000d384
   14000d35b:	movzx  edx,BYTE PTR [rdi+0x1]
   14000d35f:	movzx  r8d,al
   14000d363:	cmp    r8d,edx
   14000d366:	ja     0x14000d37e
   14000d368:	sub    edx,r8d
   14000d36b:	mov    eax,r8d
   14000d36e:	lea    rcx,[rsp+r8*1+0x70]
   14000d373:	lea    r8d,[rdx+0x1]
   14000d377:	mov    dl,0x20
   14000d379:	call   0x14000db90
   14000d37e:	add    rdi,0x2
   14000d382:	mov    al,BYTE PTR [rdi]
   14000d384:	test   al,al
   14000d386:	jne    0x14000d35b
   14000d388:	mov    eax,DWORD PTR [rsi+0xc]
   14000d38b:	and    DWORD PTR [rsp+0x38],0x0
   14000d390:	lea    r8,[rsp+0x70]
   14000d395:	mov    DWORD PTR [rsp+0x30],eax
   14000d399:	mov    eax,DWORD PTR [rsi+0x4]
   14000d39c:	mov    r9d,ebx
   14000d39f:	mov    DWORD PTR [rsp+0x28],eax
   14000d3a3:	lea    rax,[rbp+0x270]
   14000d3aa:	mov    edx,0x1
   14000d3af:	xor    ecx,ecx
   14000d3b1:	mov    QWORD PTR [rsp+0x20],rax
   14000d3b6:	call   0x14000ec10
   14000d3bb:	and    DWORD PTR [rsp+0x40],0x0
   14000d3c0:	mov    eax,DWORD PTR [rsi+0x4]
   14000d3c3:	mov    edx,DWORD PTR [rsi+0xc]
   14000d3c6:	mov    DWORD PTR [rsp+0x38],eax
   14000d3ca:	lea    rax,[rbp+0x70]
   14000d3ce:	mov    DWORD PTR [rsp+0x30],ebx
   14000d3d2:	mov    QWORD PTR [rsp+0x28],rax
   14000d3d7:	lea    r9,[rsp+0x70]
   14000d3dc:	mov    r8d,ebx
   14000d3df:	xor    ecx,ecx
   14000d3e1:	mov    DWORD PTR [rsp+0x20],ebx
   14000d3e5:	call   0x14000ea10
   14000d3ea:	and    DWORD PTR [rsp+0x40],0x0
   14000d3ef:	mov    eax,DWORD PTR [rsi+0x4]
   14000d3f2:	mov    edx,DWORD PTR [rsi+0xc]
   14000d3f5:	mov    DWORD PTR [rsp+0x38],eax
   14000d3f9:	lea    rax,[rbp+0x170]
   14000d400:	mov    DWORD PTR [rsp+0x30],ebx
   14000d404:	mov    QWORD PTR [rsp+0x28],rax
   14000d409:	lea    r9,[rsp+0x70]
   14000d40e:	mov    r8d,0x200
   14000d414:	xor    ecx,ecx
   14000d416:	mov    DWORD PTR [rsp+0x20],ebx
   14000d41a:	call   0x14000ea10
   14000d41f:	lea    rdx,[rbp+0x70]
   14000d423:	lea    r8,[rbp+0x170]
   14000d42a:	sub    rdx,rsi
   14000d42d:	lea    r11,[rbp+0x270]
   14000d434:	lea    rcx,[rsi+0x1d]
   14000d438:	sub    r8,rsi
   14000d43b:	test   BYTE PTR [r11],0x1
   14000d43f:	je     0x14000d44a
   14000d441:	or     BYTE PTR [rcx],0x10
   14000d444:	mov    al,BYTE PTR [rdx+rcx*1-0x1d]
   14000d448:	jmp    0x14000d458
   14000d44a:	test   BYTE PTR [r11],0x2
   14000d44e:	je     0x14000d460
   14000d450:	or     BYTE PTR [rcx],0x20
   14000d453:	mov    al,BYTE PTR [r8+rcx*1-0x1d]
   14000d458:	mov    BYTE PTR [rcx+0x100],al
   14000d45e:	jmp    0x14000d467
   14000d460:	mov    BYTE PTR [rcx+0x100],0x0
   14000d467:	inc    rcx
   14000d46a:	add    r11,0x2
   14000d46e:	dec    rbx
   14000d471:	jne    0x14000d43b
   14000d473:	jmp    0x14000d4b4
   14000d475:	xor    edx,edx
   14000d477:	lea    rcx,[rsi+0x1d]
   14000d47b:	lea    r8d,[rdx-0x61]
   14000d47f:	lea    eax,[r8+0x20]
   14000d483:	cmp    eax,0x19
   14000d486:	ja     0x14000d490
   14000d488:	or     BYTE PTR [rcx],0x10
   14000d48b:	lea    eax,[rdx+0x20]
   14000d48e:	jmp    0x14000d49c
   14000d490:	cmp    r8d,0x19
   14000d494:	ja     0x14000d4a4
   14000d496:	or     BYTE PTR [rcx],0x20
   14000d499:	lea    eax,[rdx-0x20]
   14000d49c:	mov    BYTE PTR [rcx+0x100],al
   14000d4a2:	jmp    0x14000d4ab
   14000d4a4:	mov    BYTE PTR [rcx+0x100],0x0
   14000d4ab:	inc    edx
   14000d4ad:	inc    rcx
   14000d4b0:	cmp    edx,ebx
   14000d4b2:	jb     0x14000d47b
   14000d4b4:	mov    rcx,QWORD PTR [rbp+0x470]
   14000d4bb:	xor    rcx,rsp
   14000d4be:	call   0x140009dd0
   14000d4c3:	lea    r11,[rsp+0x580]
   14000d4cb:	mov    rbx,QWORD PTR [r11+0x18]
   14000d4cf:	mov    rsi,QWORD PTR [r11+0x20]
   14000d4d3:	mov    rdi,QWORD PTR [r11+0x28]
   14000d4d7:	mov    rsp,r11
   14000d4da:	pop    rbp
   14000d4db:	ret    
   14000d4dc:	int3   
   14000d4dd:	int3   
   14000d4de:	int3   
   14000d4df:	int3   
   14000d4e0:	int3   
   14000d4e1:	int3   
   14000d4e2:	int3   
   14000d4e3:	int3   
   14000d4e4:	mov    QWORD PTR [rsp+0x10],rbx
   14000d4e9:	push   rdi
   14000d4ea:	sub    rsp,0x20
   14000d4ee:	call   0x14000b3cc
   14000d4f3:	mov    rdi,rax
   14000d4f6:	mov    ecx,DWORD PTR [rax+0xc8]
   14000d4fc:	test   DWORD PTR [rip+0x8a16],ecx        # 0x140015f18
   14000d502:	je     0x14000d517
   14000d504:	cmp    QWORD PTR [rax+0xc0],0x0
   14000d50c:	je     0x14000d517
   14000d50e:	mov    rbx,QWORD PTR [rax+0xb8]
   14000d515:	jmp    0x14000d583
   14000d517:	mov    ecx,0xd
   14000d51c:	call   0x14000bef8
   14000d521:	nop
   14000d522:	mov    rbx,QWORD PTR [rdi+0xb8]
   14000d529:	mov    QWORD PTR [rsp+0x30],rbx
   14000d52e:	cmp    rbx,QWORD PTR [rip+0x880b]        # 0x140015d40
   14000d535:	je     0x14000d579
   14000d537:	test   rbx,rbx
   14000d53a:	je     0x14000d557
   14000d53c:	lock dec DWORD PTR [rbx]
   14000d53f:	jne    0x14000d557
   14000d541:	lea    rax,[rip+0x83c8]        # 0x140015910
   14000d548:	mov    rcx,QWORD PTR [rsp+0x30]
   14000d54d:	cmp    rcx,rax
   14000d550:	je     0x14000d557
   14000d552:	call   0x14000c988
   14000d557:	mov    rax,QWORD PTR [rip+0x87e2]        # 0x140015d40
   14000d55e:	mov    QWORD PTR [rdi+0xb8],rax
   14000d565:	mov    rax,QWORD PTR [rip+0x87d4]        # 0x140015d40
   14000d56c:	mov    QWORD PTR [rsp+0x30],rax
   14000d571:	lock inc DWORD PTR [rax]
   14000d574:	mov    rbx,QWORD PTR [rsp+0x30]
   14000d579:	mov    ecx,0xd
   14000d57e:	call   0x14000bdec
   14000d583:	test   rbx,rbx
   14000d586:	jne    0x14000d590
   14000d588:	lea    ecx,[rbx+0x20]
   14000d58b:	call   0x14000a3a8
   14000d590:	mov    rax,rbx
   14000d593:	mov    rbx,QWORD PTR [rsp+0x38]
   14000d598:	add    rsp,0x20
   14000d59c:	pop    rdi
   14000d59d:	ret    
   14000d59e:	int3   
   14000d59f:	int3   
   14000d5a0:	int3   
   14000d5a1:	int3   
   14000d5a2:	int3   
   14000d5a3:	int3   
   14000d5a4:	rex push rbx
   14000d5a6:	sub    rsp,0x20
   14000d5aa:	mov    rbx,rcx
   14000d5ad:	mov    BYTE PTR [rcx+0x18],0x0
   14000d5b1:	test   rdx,rdx
   14000d5b4:	jne    0x14000d635
   14000d5b6:	call   0x14000b3cc
   14000d5bb:	mov    QWORD PTR [rbx+0x10],rax
   14000d5bf:	mov    rdx,QWORD PTR [rax+0xc0]
   14000d5c6:	mov    QWORD PTR [rbx],rdx
   14000d5c9:	mov    rcx,QWORD PTR [rax+0xb8]
   14000d5d0:	mov    QWORD PTR [rbx+0x8],rcx
   14000d5d4:	cmp    rdx,QWORD PTR [rip+0x8325]        # 0x140015900
   14000d5db:	je     0x14000d5f3
   14000d5dd:	mov    eax,DWORD PTR [rax+0xc8]
   14000d5e3:	test   DWORD PTR [rip+0x892f],eax        # 0x140015f18
   14000d5e9:	jne    0x14000d5f3
   14000d5eb:	call   0x14000d1dc
   14000d5f0:	mov    QWORD PTR [rbx],rax
   14000d5f3:	mov    rax,QWORD PTR [rip+0x8746]        # 0x140015d40
   14000d5fa:	cmp    QWORD PTR [rbx+0x8],rax
   14000d5fe:	je     0x14000d61b
   14000d600:	mov    rax,QWORD PTR [rbx+0x10]
   14000d604:	mov    ecx,DWORD PTR [rax+0xc8]
   14000d60a:	test   DWORD PTR [rip+0x8908],ecx        # 0x140015f18
   14000d610:	jne    0x14000d61b
   14000d612:	call   0x14000d4e4
   14000d617:	mov    QWORD PTR [rbx+0x8],rax
   14000d61b:	mov    rax,QWORD PTR [rbx+0x10]
   14000d61f:	test   BYTE PTR [rax+0xc8],0x2
   14000d626:	jne    0x14000d63c
   14000d628:	or     DWORD PTR [rax+0xc8],0x2
   14000d62f:	mov    BYTE PTR [rbx+0x18],0x1
   14000d633:	jmp    0x14000d63c
   14000d635:	movups xmm0,XMMWORD PTR [rdx]
   14000d638:	movdqu XMMWORD PTR [rcx],xmm0
   14000d63c:	mov    rax,rbx
   14000d63f:	add    rsp,0x20
   14000d643:	pop    rbx
   14000d644:	ret    
   14000d645:	int3   
   14000d646:	int3   
   14000d647:	int3   
   14000d648:	int3   
   14000d649:	int3   
   14000d64a:	int3   
   14000d64b:	int3   
   14000d64c:	rex push rbx
   14000d64e:	sub    rsp,0x40
   14000d652:	mov    ebx,ecx
   14000d654:	lea    rcx,[rsp+0x20]
   14000d659:	xor    edx,edx
   14000d65b:	call   0x14000d5a4
   14000d660:	and    DWORD PTR [rip+0x9dd9],0x0        # 0x140017440
   14000d667:	cmp    ebx,0xfffffffe
   14000d66a:	jne    0x14000d691
   14000d66c:	mov    DWORD PTR [rip+0x9dca],0x1        # 0x140017440
   14000d676:	call   QWORD PTR [rip+0xffffffffffff3bac]        # 0x140001228
   14000d67c:	cmp    BYTE PTR [rsp+0x38],0x0
   14000d681:	je     0x14000d6d6
   14000d683:	mov    rcx,QWORD PTR [rsp+0x30]
   14000d688:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14000d68f:	jmp    0x14000d6d6
   14000d691:	cmp    ebx,0xfffffffd
   14000d694:	jne    0x14000d6a8
   14000d696:	mov    DWORD PTR [rip+0x9da0],0x1        # 0x140017440
   14000d6a0:	call   QWORD PTR [rip+0xffffffffffff3b7a]        # 0x140001220
   14000d6a6:	jmp    0x14000d67c
   14000d6a8:	cmp    ebx,0xfffffffc
   14000d6ab:	jne    0x14000d6c1
   14000d6ad:	mov    rax,QWORD PTR [rsp+0x20]
   14000d6b2:	mov    DWORD PTR [rip+0x9d84],0x1        # 0x140017440
   14000d6bc:	mov    eax,DWORD PTR [rax+0x4]
   14000d6bf:	jmp    0x14000d67c
   14000d6c1:	cmp    BYTE PTR [rsp+0x38],0x0
   14000d6c6:	je     0x14000d6d4
   14000d6c8:	mov    rax,QWORD PTR [rsp+0x30]
   14000d6cd:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14000d6d4:	mov    eax,ebx
   14000d6d6:	add    rsp,0x40
   14000d6da:	pop    rbx
   14000d6db:	ret    
   14000d6dc:	int3   
   14000d6dd:	int3   
   14000d6de:	int3   
   14000d6df:	int3   
   14000d6e0:	int3   
   14000d6e1:	int3   
   14000d6e2:	int3   
   14000d6e3:	int3   
   14000d6e4:	mov    QWORD PTR [rsp+0x18],rbx
   14000d6e9:	push   rbp
   14000d6ea:	push   rsi
   14000d6eb:	push   rdi
   14000d6ec:	push   r12
   14000d6ee:	push   r13
   14000d6f0:	sub    rsp,0x40
   14000d6f4:	mov    rax,QWORD PTR [rip+0x7975]        # 0x140015070
   14000d6fb:	xor    rax,rsp
   14000d6fe:	mov    QWORD PTR [rsp+0x38],rax
   14000d703:	mov    rsi,rdx
   14000d706:	call   0x14000d64c
   14000d70b:	xor    ebx,ebx
   14000d70d:	mov    edi,eax
   14000d70f:	test   eax,eax
   14000d711:	jne    0x14000d720
   14000d713:	mov    rcx,rsi
   14000d716:	call   0x14000d258
   14000d71b:	jmp    0x14000d936
   14000d720:	lea    r13,[rip+0x8629]        # 0x140015d50
   14000d727:	mov    ecx,ebx
   14000d729:	mov    rbp,rbx
   14000d72c:	mov    rax,r13
   14000d72f:	mov    r12d,0x1
   14000d735:	cmp    DWORD PTR [rax],edi
   14000d737:	je     0x14000d863
   14000d73d:	add    ecx,r12d
   14000d740:	add    rbp,r12
   14000d743:	add    rax,0x30
   14000d747:	cmp    ecx,0x5
   14000d74a:	jb     0x14000d735
   14000d74c:	cmp    edi,0xfde8
   14000d752:	je     0x14000d85b
   14000d758:	cmp    edi,0xfde9
   14000d75e:	je     0x14000d85b
   14000d764:	movzx  ecx,di
   14000d767:	call   QWORD PTR [rip+0xffffffffffff3ac3]        # 0x140001230
   14000d76d:	test   eax,eax
   14000d76f:	je     0x14000d85b
   14000d775:	lea    rdx,[rsp+0x20]
   14000d77a:	mov    ecx,edi
   14000d77c:	call   QWORD PTR [rip+0xffffffffffff3a96]        # 0x140001218
   14000d782:	test   eax,eax
   14000d784:	je     0x14000d84f
   14000d78a:	lea    rcx,[rsi+0x1c]
   14000d78e:	xor    edx,edx
   14000d790:	mov    r8d,0x101
   14000d796:	call   0x14000db90
   14000d79b:	mov    DWORD PTR [rsi+0x4],edi
   14000d79e:	mov    DWORD PTR [rsi+0xc],ebx
   14000d7a1:	cmp    DWORD PTR [rsp+0x20],r12d
   14000d7a6:	jbe    0x14000d838
   14000d7ac:	lea    rax,[rsp+0x26]
   14000d7b1:	cmp    BYTE PTR [rsp+0x26],bl
   14000d7b5:	je     0x14000d7e4
   14000d7b7:	cmp    BYTE PTR [rax+0x1],bl
   14000d7ba:	je     0x14000d7e4
   14000d7bc:	movzx  edi,BYTE PTR [rax]
   14000d7bf:	movzx  ecx,BYTE PTR [rax+0x1]
   14000d7c3:	cmp    edi,ecx
   14000d7c5:	ja     0x14000d7dc
   14000d7c7:	sub    ecx,edi
   14000d7c9:	lea    rdx,[rdi+rsi*1+0x1d]
   14000d7ce:	add    ecx,r12d
   14000d7d1:	or     BYTE PTR [rdx],0x4
   14000d7d4:	add    rdx,r12
   14000d7d7:	sub    rcx,r12
   14000d7da:	jne    0x14000d7d1
   14000d7dc:	add    rax,0x2
   14000d7e0:	cmp    BYTE PTR [rax],bl
   14000d7e2:	jne    0x14000d7b7
   14000d7e4:	lea    rax,[rsi+0x1e]
   14000d7e8:	mov    ecx,0xfe
   14000d7ed:	or     BYTE PTR [rax],0x8
   14000d7f0:	add    rax,r12
   14000d7f3:	sub    rcx,r12
   14000d7f6:	jne    0x14000d7ed
   14000d7f8:	mov    ecx,DWORD PTR [rsi+0x4]
   14000d7fb:	sub    ecx,0x3a4
   14000d801:	je     0x14000d82a
   14000d803:	sub    ecx,0x4
   14000d806:	je     0x14000d823
   14000d808:	sub    ecx,0xd
   14000d80b:	je     0x14000d81c
   14000d80d:	dec    ecx
   14000d80f:	je     0x14000d815
   14000d811:	mov    eax,ebx
   14000d813:	jmp    0x14000d82f
   14000d815:	mov    eax,0x404
   14000d81a:	jmp    0x14000d82f
   14000d81c:	mov    eax,0x412
   14000d821:	jmp    0x14000d82f
   14000d823:	mov    eax,0x804
   14000d828:	jmp    0x14000d82f
   14000d82a:	mov    eax,0x411
   14000d82f:	mov    DWORD PTR [rsi+0xc],eax
   14000d832:	mov    DWORD PTR [rsi+0x8],r12d
   14000d836:	jmp    0x14000d83b
   14000d838:	mov    DWORD PTR [rsi+0x8],ebx
   14000d83b:	lea    rdi,[rsi+0x10]
   14000d83f:	movzx  eax,bx
   14000d842:	mov    ecx,0x6
   14000d847:	rep stos WORD PTR es:[rdi],ax
   14000d84a:	jmp    0x14000d92e
   14000d84f:	cmp    DWORD PTR [rip+0x9beb],ebx        # 0x140017440
   14000d855:	jne    0x14000d713
   14000d85b:	or     eax,0xffffffff
   14000d85e:	jmp    0x14000d938
   14000d863:	lea    rcx,[rsi+0x1c]
   14000d867:	xor    edx,edx
   14000d869:	mov    r8d,0x101
   14000d86f:	call   0x14000db90
   14000d874:	lea    r10,[rbp+rbp*2+0x0]
   14000d879:	lea    r11,[rip+0x84c8]        # 0x140015d48
   14000d880:	shl    r10,0x4
   14000d884:	mov    ebp,0x4
   14000d889:	lea    r8,[r10+r13*1+0x10]
   14000d88e:	mov    rcx,r8
   14000d891:	cmp    BYTE PTR [r8],bl
   14000d894:	je     0x14000d8c7
   14000d896:	cmp    BYTE PTR [rcx+0x1],bl
   14000d899:	je     0x14000d8c7
   14000d89b:	movzx  edx,BYTE PTR [rcx]
   14000d89e:	movzx  eax,BYTE PTR [rcx+0x1]
   14000d8a2:	cmp    edx,eax
   14000d8a4:	ja     0x14000d8bf
   14000d8a6:	lea    r9,[rdx+rsi*1+0x1d]
   14000d8ab:	mov    al,BYTE PTR [r11]
   14000d8ae:	add    edx,r12d
   14000d8b1:	or     BYTE PTR [r9],al
   14000d8b4:	movzx  eax,BYTE PTR [rcx+0x1]
   14000d8b8:	add    r9,r12
   14000d8bb:	cmp    edx,eax
   14000d8bd:	jbe    0x14000d8ab
   14000d8bf:	add    rcx,0x2
   14000d8c3:	cmp    BYTE PTR [rcx],bl
   14000d8c5:	jne    0x14000d896
   14000d8c7:	add    r8,0x8
   14000d8cb:	add    r11,r12
   14000d8ce:	sub    rbp,r12
   14000d8d1:	jne    0x14000d88e
   14000d8d3:	mov    DWORD PTR [rsi+0x4],edi
   14000d8d6:	sub    edi,0x3a4
   14000d8dc:	mov    DWORD PTR [rsi+0x8],r12d
   14000d8e0:	je     0x14000d905
   14000d8e2:	sub    edi,0x4
   14000d8e5:	je     0x14000d8fe
   14000d8e7:	sub    edi,0xd
   14000d8ea:	je     0x14000d8f7
   14000d8ec:	dec    edi
   14000d8ee:	jne    0x14000d90a
   14000d8f0:	mov    ebx,0x404
   14000d8f5:	jmp    0x14000d90a
   14000d8f7:	mov    ebx,0x412
   14000d8fc:	jmp    0x14000d90a
   14000d8fe:	mov    ebx,0x804
   14000d903:	jmp    0x14000d90a
   14000d905:	mov    ebx,0x411
   14000d90a:	sub    r10,rsi
   14000d90d:	mov    DWORD PTR [rsi+0xc],ebx
   14000d910:	lea    rcx,[rsi+0x10]
   14000d914:	lea    rdi,[r10+r13*1-0xc]
   14000d919:	mov    edx,0x6
   14000d91e:	movzx  eax,WORD PTR [rdi+rcx*1]
   14000d922:	mov    WORD PTR [rcx],ax
   14000d925:	add    rcx,0x2
   14000d929:	sub    rdx,r12
   14000d92c:	jne    0x14000d91e
   14000d92e:	mov    rcx,rsi
   14000d931:	call   0x14000d2ec
   14000d936:	xor    eax,eax
   14000d938:	mov    rcx,QWORD PTR [rsp+0x38]
   14000d93d:	xor    rcx,rsp
   14000d940:	call   0x140009dd0
   14000d945:	mov    rbx,QWORD PTR [rsp+0x80]
   14000d94d:	add    rsp,0x40
   14000d951:	pop    r13
   14000d953:	pop    r12
   14000d955:	pop    rdi
   14000d956:	pop    rsi
   14000d957:	pop    rbp
   14000d958:	ret    
   14000d959:	int3   
   14000d95a:	int3   
   14000d95b:	int3   
   14000d95c:	int3   
   14000d95d:	int3   
   14000d95e:	int3   
   14000d95f:	int3   
   14000d960:	mov    rax,rsp
   14000d963:	mov    QWORD PTR [rax+0x8],rbx
   14000d967:	mov    QWORD PTR [rax+0x10],rsi
   14000d96b:	mov    QWORD PTR [rax+0x18],rdi
   14000d96f:	mov    QWORD PTR [rax+0x20],r12
   14000d973:	push   r13
   14000d975:	sub    rsp,0x30
   14000d979:	mov    edi,ecx
   14000d97b:	or     r13d,0xffffffff
   14000d97f:	call   0x14000b3cc
   14000d984:	mov    rsi,rax
   14000d987:	call   0x14000d4e4
   14000d98c:	mov    rbx,QWORD PTR [rsi+0xb8]
   14000d993:	mov    ecx,edi
   14000d995:	call   0x14000d64c
   14000d99a:	mov    r12d,eax
   14000d99d:	cmp    eax,DWORD PTR [rbx+0x4]
   14000d9a0:	je     0x14000db1b
   14000d9a6:	mov    ecx,0x220
   14000d9ab:	call   0x14000c9cc
   14000d9b0:	mov    rbx,rax
   14000d9b3:	xor    edi,edi
   14000d9b5:	test   rax,rax
   14000d9b8:	je     0x14000db20
   14000d9be:	mov    rdx,QWORD PTR [rsi+0xb8]
   14000d9c5:	mov    rcx,rax
   14000d9c8:	mov    r8d,0x220
   14000d9ce:	call   0x14000cb80
   14000d9d3:	mov    DWORD PTR [rbx],edi
   14000d9d5:	mov    rdx,rbx
   14000d9d8:	mov    ecx,r12d
   14000d9db:	call   0x14000d6e4
   14000d9e0:	mov    r13d,eax
   14000d9e3:	test   eax,eax
   14000d9e5:	jne    0x14000daf5
   14000d9eb:	mov    rcx,QWORD PTR [rsi+0xb8]
   14000d9f2:	lea    r12,[rip+0x7f17]        # 0x140015910
   14000d9f9:	lock dec DWORD PTR [rcx]
   14000d9fc:	jne    0x14000da0f
   14000d9fe:	mov    rcx,QWORD PTR [rsi+0xb8]
   14000da05:	cmp    rcx,r12
   14000da08:	je     0x14000da0f
   14000da0a:	call   0x14000c988
   14000da0f:	mov    QWORD PTR [rsi+0xb8],rbx
   14000da16:	lock inc DWORD PTR [rbx]
   14000da19:	test   BYTE PTR [rsi+0xc8],0x2
   14000da20:	jne    0x14000db20
   14000da26:	test   BYTE PTR [rip+0x84eb],0x1        # 0x140015f18
   14000da2d:	jne    0x14000db20
   14000da33:	mov    esi,0xd
   14000da38:	mov    ecx,esi
   14000da3a:	call   0x14000bef8
   14000da3f:	nop
   14000da40:	mov    eax,DWORD PTR [rbx+0x4]
   14000da43:	mov    DWORD PTR [rip+0x9a0b],eax        # 0x140017454
   14000da49:	mov    eax,DWORD PTR [rbx+0x8]
   14000da4c:	mov    DWORD PTR [rip+0x9a06],eax        # 0x140017458
   14000da52:	mov    eax,DWORD PTR [rbx+0xc]
   14000da55:	mov    DWORD PTR [rip+0x9a01],eax        # 0x14001745c
   14000da5b:	mov    edx,edi
   14000da5d:	lea    r8,[rip+0xffffffffffff259c]        # 0x140000000
   14000da64:	mov    DWORD PTR [rsp+0x20],edx
   14000da68:	cmp    edx,0x5
   14000da6b:	jge    0x14000da82
   14000da6d:	movsxd rcx,edx
   14000da70:	movzx  eax,WORD PTR [rbx+rcx*2+0x10]
   14000da75:	mov    WORD PTR [r8+rcx*2+0x17448],ax
   14000da7e:	inc    edx
   14000da80:	jmp    0x14000da64
   14000da82:	mov    edx,edi
   14000da84:	mov    DWORD PTR [rsp+0x20],edx
   14000da88:	cmp    edx,0x101
   14000da8e:	jge    0x14000daa3
   14000da90:	movsxd rcx,edx
   14000da93:	mov    al,BYTE PTR [rcx+rbx*1+0x1c]
   14000da97:	mov    BYTE PTR [rcx+r8*1+0x15b30],al
   14000da9f:	inc    edx
   14000daa1:	jmp    0x14000da84
   14000daa3:	mov    DWORD PTR [rsp+0x20],edi
   14000daa7:	cmp    edi,0x100
   14000daad:	jge    0x14000dac5
   14000daaf:	movsxd rcx,edi
   14000dab2:	mov    al,BYTE PTR [rcx+rbx*1+0x11d]
   14000dab9:	mov    BYTE PTR [rcx+r8*1+0x15c40],al
   14000dac1:	inc    edi
   14000dac3:	jmp    0x14000daa3
   14000dac5:	mov    rax,QWORD PTR [rip+0x8274]        # 0x140015d40
   14000dacc:	lock dec DWORD PTR [rax]
   14000dacf:	jne    0x14000dae2
   14000dad1:	mov    rcx,QWORD PTR [rip+0x8268]        # 0x140015d40
   14000dad8:	cmp    rcx,r12
   14000dadb:	je     0x14000dae2
   14000dadd:	call   0x14000c988
   14000dae2:	mov    QWORD PTR [rip+0x8257],rbx        # 0x140015d40
   14000dae9:	lock inc DWORD PTR [rbx]
   14000daec:	mov    ecx,esi
   14000daee:	call   0x14000bdec
   14000daf3:	jmp    0x14000db20
   14000daf5:	cmp    eax,0xffffffff
   14000daf8:	jne    0x14000db20
   14000dafa:	lea    r12,[rip+0x7e0f]        # 0x140015910
   14000db01:	cmp    rbx,r12
   14000db04:	je     0x14000db0e
   14000db06:	mov    rcx,rbx
   14000db09:	call   0x14000c988
   14000db0e:	call   0x14000baac
   14000db13:	mov    DWORD PTR [rax],0x16
   14000db19:	jmp    0x14000db20
   14000db1b:	xor    edi,edi
   14000db1d:	mov    r13d,edi
   14000db20:	mov    eax,r13d
   14000db23:	mov    rbx,QWORD PTR [rsp+0x40]
   14000db28:	mov    rsi,QWORD PTR [rsp+0x48]
   14000db2d:	mov    rdi,QWORD PTR [rsp+0x50]
   14000db32:	mov    r12,QWORD PTR [rsp+0x58]
   14000db37:	add    rsp,0x30
   14000db3b:	pop    r13
   14000db3d:	ret    
   14000db3e:	int3   
   14000db3f:	int3   
   14000db40:	int3   
   14000db41:	int3   
   14000db42:	int3   
   14000db43:	int3   
   14000db44:	sub    rsp,0x28
   14000db48:	cmp    DWORD PTR [rip+0xb0b1],0x0        # 0x140018c00
   14000db4f:	jne    0x14000db65
   14000db51:	mov    ecx,0xfffffffd
   14000db56:	call   0x14000d960
   14000db5b:	mov    DWORD PTR [rip+0xb09b],0x1        # 0x140018c00
   14000db65:	xor    eax,eax
   14000db67:	add    rsp,0x28
   14000db6b:	ret    
   14000db6c:	int3   
   14000db6d:	int3   
   14000db6e:	int3   
   14000db6f:	int3   
   14000db70:	int3   
   14000db71:	int3   
   14000db72:	int3   
   14000db73:	int3   
   14000db74:	and    DWORD PTR [rip+0xae49],0x0        # 0x1400189c4
   14000db7b:	ret    
   14000db7c:	int3   
   14000db7d:	int3   
   14000db7e:	int3   
   14000db7f:	int3   
   14000db80:	int3   
   14000db81:	int3   
   14000db82:	int3   
   14000db83:	int3   
   14000db84:	int3   
   14000db85:	int3   
   14000db86:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000db90:	mov    rax,rcx
   14000db93:	cmp    r8,0x8
   14000db97:	jb     0x14000dbec
   14000db99:	movzx  edx,dl
   14000db9c:	movabs r9,0x101010101010101
   14000dba6:	imul   rdx,r9
   14000dbaa:	cmp    r8,0x40
   14000dbae:	jb     0x14000dbce
   14000dbb0:	neg    rcx
   14000dbb3:	and    ecx,0x7
   14000dbb6:	je     0x14000dbbe
   14000dbb8:	sub    r8,rcx
   14000dbbb:	mov    QWORD PTR [rax],rdx
   14000dbbe:	add    rcx,rax
   14000dbc1:	mov    r9,r8
   14000dbc4:	and    r8,0x3f
   14000dbc8:	shr    r9,0x6
   14000dbcc:	jne    0x14000dc07
   14000dbce:	mov    r9,r8
   14000dbd1:	and    r8,0x7
   14000dbd5:	shr    r9,0x3
   14000dbd9:	je     0x14000dbec
   14000dbdb:	data16 data16 xchg ax,ax
   14000dbdf:	nop
   14000dbe0:	mov    QWORD PTR [rcx],rdx
   14000dbe3:	add    rcx,0x8
   14000dbe7:	dec    r9
   14000dbea:	jne    0x14000dbe0
   14000dbec:	test   r8,r8
   14000dbef:	je     0x14000dbfb
   14000dbf1:	mov    BYTE PTR [rcx],dl
   14000dbf3:	inc    rcx
   14000dbf6:	dec    r8
   14000dbf9:	jne    0x14000dbf1
   14000dbfb:	ret    
   14000dbfc:	nop    DWORD PTR [rax+0x0]
   14000dc00:	data16 data16 xchg ax,ax
   14000dc04:	data16 xchg ax,ax
   14000dc07:	cmp    r9,0x1c00
   14000dc0e:	jae    0x14000dc40
   14000dc10:	mov    QWORD PTR [rcx],rdx
   14000dc13:	mov    QWORD PTR [rcx+0x8],rdx
   14000dc17:	mov    QWORD PTR [rcx+0x10],rdx
   14000dc1b:	add    rcx,0x40
   14000dc1f:	mov    QWORD PTR [rcx-0x28],rdx
   14000dc23:	mov    QWORD PTR [rcx-0x20],rdx
   14000dc27:	dec    r9
   14000dc2a:	mov    QWORD PTR [rcx-0x18],rdx
   14000dc2e:	mov    QWORD PTR [rcx-0x10],rdx
   14000dc32:	mov    QWORD PTR [rcx-0x8],rdx
   14000dc36:	jne    0x14000dc10
   14000dc38:	jmp    0x14000dbce
   14000dc3a:	nop    WORD PTR [rax+rax*1+0x0]
   14000dc40:	movnti QWORD PTR [rcx],rdx
   14000dc44:	movnti QWORD PTR [rcx+0x8],rdx
   14000dc49:	movnti QWORD PTR [rcx+0x10],rdx
   14000dc4e:	add    rcx,0x40
   14000dc52:	movnti QWORD PTR [rcx-0x28],rdx
   14000dc57:	movnti QWORD PTR [rcx-0x20],rdx
   14000dc5c:	dec    r9
   14000dc5f:	movnti QWORD PTR [rcx-0x18],rdx
   14000dc64:	movnti QWORD PTR [rcx-0x10],rdx
   14000dc69:	movnti QWORD PTR [rcx-0x8],rdx
   14000dc6e:	jne    0x14000dc40
   14000dc70:	lock or BYTE PTR [rsp],0x0
   14000dc75:	jmp    0x14000dbce
   14000dc7a:	int3   
   14000dc7b:	int3   
   14000dc7c:	int3   
   14000dc7d:	int3   
   14000dc7e:	int3   
   14000dc7f:	int3   
   14000dc80:	lea    rax,[rip+0xffffffffffff4781]        # 0x140002408
   14000dc87:	mov    QWORD PTR [rcx],rax
   14000dc8a:	mov    rax,QWORD PTR [rdx]
   14000dc8d:	mov    BYTE PTR [rcx+0x10],0x0
   14000dc91:	mov    QWORD PTR [rcx+0x8],rax
   14000dc95:	mov    rax,rcx
   14000dc98:	ret    
   14000dc99:	int3   
   14000dc9a:	int3   
   14000dc9b:	int3   
   14000dc9c:	int3   
   14000dc9d:	int3   
   14000dc9e:	int3   
   14000dc9f:	int3   
   14000dca0:	cmp    QWORD PTR [rcx+0x8],0x0
   14000dca5:	lea    rax,[rip+0xffffffffffff476c]        # 0x140002418
   14000dcac:	cmovne rax,QWORD PTR [rcx+0x8]
   14000dcb1:	ret    
   14000dcb2:	int3   
   14000dcb3:	int3   
   14000dcb4:	int3   
   14000dcb5:	int3   
   14000dcb6:	int3   
   14000dcb7:	int3   
   14000dcb8:	test   rdx,rdx
   14000dcbb:	je     0x14000dd11
   14000dcbd:	mov    QWORD PTR [rsp+0x8],rbx
   14000dcc2:	mov    QWORD PTR [rsp+0x10],rsi
   14000dcc7:	push   rdi
   14000dcc8:	sub    rsp,0x20
   14000dccc:	mov    rdi,rcx
   14000dccf:	mov    rcx,rdx
   14000dcd2:	mov    rbx,rdx
   14000dcd5:	call   0x14000c560
   14000dcda:	mov    rsi,rax
   14000dcdd:	lea    rcx,[rax+0x1]
   14000dce1:	call   0x14000de5c
   14000dce6:	mov    QWORD PTR [rdi+0x8],rax
   14000dcea:	test   rax,rax
   14000dced:	je     0x14000dd02
   14000dcef:	lea    rdx,[rsi+0x1]
   14000dcf3:	mov    r8,rbx
   14000dcf6:	mov    rcx,rax
   14000dcf9:	call   0x14000ec94
   14000dcfe:	mov    BYTE PTR [rdi+0x10],0x1
   14000dd02:	mov    rbx,QWORD PTR [rsp+0x30]
   14000dd07:	mov    rsi,QWORD PTR [rsp+0x38]
   14000dd0c:	add    rsp,0x20
   14000dd10:	pop    rdi
   14000dd11:	ret    
   14000dd12:	int3   
   14000dd13:	int3   
   14000dd14:	int3   
   14000dd15:	int3   
   14000dd16:	int3   
   14000dd17:	int3   
   14000dd18:	rex push rbx
   14000dd1a:	sub    rsp,0x20
   14000dd1e:	cmp    BYTE PTR [rcx+0x10],0x0
   14000dd22:	mov    rbx,rcx
   14000dd25:	je     0x14000dd30
   14000dd27:	mov    rcx,QWORD PTR [rcx+0x8]
   14000dd2b:	call   0x14000c988
   14000dd30:	and    QWORD PTR [rbx+0x8],0x0
   14000dd35:	mov    BYTE PTR [rbx+0x10],0x0
   14000dd39:	add    rsp,0x20
   14000dd3d:	pop    rbx
   14000dd3e:	ret    
   14000dd3f:	int3   
   14000dd40:	int3   
   14000dd41:	int3   
   14000dd42:	int3   
   14000dd43:	int3   
   14000dd44:	int3   
   14000dd45:	int3   
   14000dd46:	int3   
   14000dd47:	int3   
   14000dd48:	mov    QWORD PTR [rsp+0x8],rbx
   14000dd4d:	push   rdi
   14000dd4e:	sub    rsp,0x20
   14000dd52:	mov    rdi,rdx
   14000dd55:	mov    rbx,rcx
   14000dd58:	cmp    rcx,rdx
   14000dd5b:	je     0x14000dd7e
   14000dd5d:	call   0x14000dd18
   14000dd62:	cmp    BYTE PTR [rdi+0x10],0x0
   14000dd66:	je     0x14000dd76
   14000dd68:	mov    rdx,QWORD PTR [rdi+0x8]
   14000dd6c:	mov    rcx,rbx
   14000dd6f:	call   0x14000dcb8
   14000dd74:	jmp    0x14000dd7e
   14000dd76:	mov    rax,QWORD PTR [rdi+0x8]
   14000dd7a:	mov    QWORD PTR [rbx+0x8],rax
   14000dd7e:	mov    rax,rbx
   14000dd81:	mov    rbx,QWORD PTR [rsp+0x30]
   14000dd86:	add    rsp,0x20
   14000dd8a:	pop    rdi
   14000dd8b:	ret    
   14000dd8c:	int3   
   14000dd8d:	int3   
   14000dd8e:	int3   
   14000dd8f:	int3   
   14000dd90:	int3   
   14000dd91:	int3   
   14000dd92:	int3   
   14000dd93:	int3   
   14000dd94:	lea    rax,[rip+0xffffffffffff466d]        # 0x140002408
   14000dd9b:	mov    QWORD PTR [rcx],rax
   14000dd9e:	jmp    0x14000dd18
   14000dda3:	int3   
   14000dda4:	int3   
   14000dda5:	int3   
   14000dda6:	int3   
   14000dda7:	int3   
   14000dda8:	int3   
   14000dda9:	int3   
   14000ddaa:	int3   
   14000ddab:	int3   
   14000ddac:	mov    QWORD PTR [rsp+0x8],rbx
   14000ddb1:	push   rdi
   14000ddb2:	sub    rsp,0x20
   14000ddb6:	lea    rax,[rip+0xffffffffffff464b]        # 0x140002408
   14000ddbd:	mov    ebx,edx
   14000ddbf:	mov    rdi,rcx
   14000ddc2:	mov    QWORD PTR [rcx],rax
   14000ddc5:	call   0x14000dd18
   14000ddca:	test   bl,0x1
   14000ddcd:	je     0x14000ddd7
   14000ddcf:	mov    rcx,rdi
   14000ddd2:	call   0x14000bc74
   14000ddd7:	mov    rax,rdi
   14000ddda:	mov    rbx,QWORD PTR [rsp+0x30]
   14000dddf:	add    rsp,0x20
   14000dde3:	pop    rdi
   14000dde4:	ret    
   14000dde5:	int3   
   14000dde6:	int3   
   14000dde7:	int3   
   14000dde8:	int3   
   14000dde9:	int3   
   14000ddea:	int3   
   14000ddeb:	int3   
   14000ddec:	rex push rbx
   14000ddee:	sub    rsp,0x20
   14000ddf2:	and    QWORD PTR [rcx+0x8],0x0
   14000ddf7:	lea    rax,[rip+0xffffffffffff460a]        # 0x140002408
   14000ddfe:	mov    rbx,rcx
   14000de01:	mov    QWORD PTR [rcx],rax
   14000de04:	mov    BYTE PTR [rcx+0x10],0x0
   14000de08:	call   0x14000dd48
   14000de0d:	mov    rax,rbx
   14000de10:	add    rsp,0x20
   14000de14:	pop    rbx
   14000de15:	ret    
   14000de16:	int3   
   14000de17:	int3   
   14000de18:	int3   
   14000de19:	int3   
   14000de1a:	int3   
   14000de1b:	int3   
   14000de1c:	mov    QWORD PTR [rsp+0x8],rbx
   14000de21:	push   rdi
   14000de22:	sub    rsp,0x20
   14000de26:	lea    rax,[rip+0xffffffffffff460b]        # 0x140002438
   14000de2d:	mov    ebx,edx
   14000de2f:	mov    rdi,rcx
   14000de32:	mov    QWORD PTR [rcx],rax
   14000de35:	call   0x14000ecfc
   14000de3a:	test   bl,0x1
   14000de3d:	je     0x14000de47
   14000de3f:	mov    rcx,rdi
   14000de42:	call   0x14000bc74
   14000de47:	mov    rax,rdi
   14000de4a:	mov    rbx,QWORD PTR [rsp+0x30]
   14000de4f:	add    rsp,0x20
   14000de53:	pop    rdi
   14000de54:	ret    
   14000de55:	int3   
   14000de56:	int3   
   14000de57:	int3   
   14000de58:	int3   
   14000de59:	int3   
   14000de5a:	int3   
   14000de5b:	int3   
   14000de5c:	mov    QWORD PTR [rsp+0x8],rbx
   14000de61:	mov    QWORD PTR [rsp+0x10],rsi
   14000de66:	push   rdi
   14000de67:	sub    rsp,0x20
   14000de6b:	mov    rbx,rcx
   14000de6e:	cmp    rcx,0xffffffffffffffe0
   14000de72:	ja     0x14000def0
   14000de74:	mov    edi,0x1
   14000de79:	test   rcx,rcx
   14000de7c:	cmovne rdi,rcx
   14000de80:	mov    rcx,QWORD PTR [rip+0x8d69]        # 0x140016bf0
   14000de87:	test   rcx,rcx
   14000de8a:	jne    0x14000deac
   14000de8c:	call   0x14000a668
   14000de91:	mov    ecx,0x1e
   14000de96:	call   0x14000a404
   14000de9b:	mov    ecx,0xff
   14000dea0:	call   0x14000a004
   14000dea5:	mov    rcx,QWORD PTR [rip+0x8d44]        # 0x140016bf0
   14000deac:	mov    r8,rdi
   14000deaf:	xor    edx,edx
   14000deb1:	call   QWORD PTR [rip+0xffffffffffff3381]        # 0x140001238
   14000deb7:	mov    rsi,rax
   14000deba:	test   rax,rax
   14000debd:	jne    0x14000deeb
   14000debf:	cmp    DWORD PTR [rip+0x95b3],eax        # 0x140017478
   14000dec5:	je     0x14000ded5
   14000dec7:	mov    rcx,rbx
   14000deca:	call   0x14000c1e4
   14000decf:	test   eax,eax
   14000ded1:	je     0x14000dee0
   14000ded3:	jmp    0x14000de80
   14000ded5:	call   0x14000baac
   14000deda:	mov    DWORD PTR [rax],0xc
   14000dee0:	call   0x14000baac
   14000dee5:	mov    DWORD PTR [rax],0xc
   14000deeb:	mov    rax,rsi
   14000deee:	jmp    0x14000df02
   14000def0:	call   0x14000c1e4
   14000def5:	call   0x14000baac
   14000defa:	mov    DWORD PTR [rax],0xc
   14000df00:	xor    eax,eax
   14000df02:	mov    rbx,QWORD PTR [rsp+0x30]
   14000df07:	mov    rsi,QWORD PTR [rsp+0x38]
   14000df0c:	add    rsp,0x20
   14000df10:	pop    rdi
   14000df11:	ret    
   14000df12:	int3   
   14000df13:	int3   
   14000df14:	int3   
   14000df15:	int3   
   14000df16:	int3   
   14000df17:	int3   
   14000df18:	mov    QWORD PTR [rsp+0x10],rbx
   14000df1d:	mov    QWORD PTR [rsp+0x18],rdi
   14000df22:	push   rbp
   14000df23:	mov    rbp,rsp
   14000df26:	sub    rsp,0x60
   14000df2a:	mov    rdi,rdx
   14000df2d:	mov    rbx,rcx
   14000df30:	lea    rcx,[rbp-0x40]
   14000df34:	lea    rdx,[rip+0xffffffffffff4505]        # 0x140002440
   14000df3b:	mov    r8d,0x40
   14000df41:	call   0x14000cb80
   14000df46:	lea    rdx,[rbp+0x10]
   14000df4a:	mov    rcx,rdi
   14000df4d:	mov    QWORD PTR [rbp-0x18],rbx
   14000df51:	mov    QWORD PTR [rbp-0x10],rdi
   14000df55:	call   0x140010426
   14000df5a:	mov    r11,rax
   14000df5d:	mov    QWORD PTR [rbp+0x10],rax
   14000df61:	mov    QWORD PTR [rbp-0x8],rax
   14000df65:	test   rdi,rdi
   14000df68:	je     0x14000df85
   14000df6a:	test   BYTE PTR [rdi],0x8
   14000df6d:	mov    ecx,0x1994000
   14000df72:	je     0x14000df79
   14000df74:	mov    DWORD PTR [rbp-0x20],ecx
   14000df77:	jmp    0x14000df85
   14000df79:	mov    eax,DWORD PTR [rbp-0x20]
   14000df7c:	test   r11,r11
   14000df7f:	cmove  eax,ecx
   14000df82:	mov    DWORD PTR [rbp-0x20],eax
   14000df85:	mov    r8d,DWORD PTR [rbp-0x28]
   14000df89:	mov    edx,DWORD PTR [rbp-0x3c]
   14000df8c:	mov    ecx,DWORD PTR [rbp-0x40]
   14000df8f:	lea    r9,[rbp-0x20]
   14000df93:	call   QWORD PTR [rip+0xffffffffffff32a7]        # 0x140001240
   14000df99:	lea    r11,[rsp+0x60]
   14000df9e:	mov    rbx,QWORD PTR [r11+0x18]
   14000dfa2:	mov    rdi,QWORD PTR [r11+0x20]
   14000dfa6:	mov    rsp,r11
   14000dfa9:	pop    rbp
   14000dfaa:	ret    
   14000dfab:	int3   
   14000dfac:	int3   
   14000dfad:	int3   
   14000dfae:	int3   
   14000dfaf:	int3   
   14000dfb0:	int3   
   14000dfb1:	int3   
   14000dfb2:	int3   
   14000dfb3:	int3   
   14000dfb4:	sub    rsp,0x28
   14000dfb8:	call   0x14000bf68
   14000dfbd:	test   rax,rax
   14000dfc0:	je     0x14000dfcc
   14000dfc2:	mov    ecx,0x16
   14000dfc7:	call   0x14000bf7c
   14000dfcc:	test   BYTE PTR [rip+0x7e8d],0x2        # 0x140015e60
   14000dfd3:	je     0x14000dfe9
   14000dfd5:	mov    r8d,0x1
   14000dfdb:	mov    edx,0x40000015
   14000dfe0:	lea    ecx,[r8+0x2]
   14000dfe4:	call   0x14000b834
   14000dfe9:	mov    ecx,0x3
   14000dfee:	call   0x14000a368
   14000dff3:	int3   
   14000dff4:	int3   
   14000dff5:	int3   
   14000dff6:	int3   
   14000dff7:	int3   
   14000dff8:	int3   
   14000dff9:	int3   
   14000dffa:	int3   
   14000dffb:	int3   
   14000dffc:	sub    rsp,0x28
   14000e000:	test   rcx,rcx
   14000e003:	jne    0x14000e01e
   14000e005:	call   0x14000baac
   14000e00a:	mov    DWORD PTR [rax],0x16
   14000e010:	call   0x14000ba38
   14000e015:	or     rax,0xffffffffffffffff
   14000e019:	add    rsp,0x28
   14000e01d:	ret    
   14000e01e:	mov    r8,rcx
   14000e021:	mov    rcx,QWORD PTR [rip+0x8bc8]        # 0x140016bf0
   14000e028:	xor    edx,edx
   14000e02a:	add    rsp,0x28
   14000e02e:	rex.W jmp QWORD PTR [rip+0xffffffffffff3223]        # 0x140001258
   14000e035:	int3   
   14000e036:	int3   
   14000e037:	int3   
   14000e038:	int3   
   14000e039:	int3   
   14000e03a:	int3   
   14000e03b:	int3   
   14000e03c:	mov    ecx,0x2
   14000e041:	jmp    0x14000a3a8
   14000e046:	int3   
   14000e047:	int3   
   14000e048:	int3   
   14000e049:	int3   
   14000e04a:	int3   
   14000e04b:	int3   
   14000e04c:	mov    QWORD PTR [rsp+0x8],rbx
   14000e051:	push   rdi
   14000e052:	sub    rsp,0x20
   14000e056:	mov    rbx,r8
   14000e059:	mov    rdi,rdx
   14000e05c:	test   rcx,rcx
   14000e05f:	je     0x14000e07e
   14000e061:	xor    edx,edx
   14000e063:	lea    rax,[rdx-0x20]
   14000e067:	div    rcx
   14000e06a:	cmp    rax,rdi
   14000e06d:	jae    0x14000e07e
   14000e06f:	call   0x14000baac
   14000e074:	mov    DWORD PTR [rax],0xc
   14000e07a:	xor    eax,eax
   14000e07c:	jmp    0x14000e0db
   14000e07e:	imul   rdi,rcx
   14000e082:	mov    eax,0x1
   14000e087:	test   rdi,rdi
   14000e08a:	cmove  rdi,rax
   14000e08e:	xor    eax,eax
   14000e090:	cmp    rdi,0xffffffffffffffe0
   14000e094:	ja     0x14000e0ae
   14000e096:	mov    rcx,QWORD PTR [rip+0x8b53]        # 0x140016bf0
   14000e09d:	lea    edx,[rax+0x8]
   14000e0a0:	mov    r8,rdi
   14000e0a3:	call   QWORD PTR [rip+0xffffffffffff318f]        # 0x140001238
   14000e0a9:	test   rax,rax
   14000e0ac:	jne    0x14000e0db
   14000e0ae:	cmp    DWORD PTR [rip+0x93c3],0x0        # 0x140017478
   14000e0b5:	je     0x14000e0d0
   14000e0b7:	mov    rcx,rdi
   14000e0ba:	call   0x14000c1e4
   14000e0bf:	test   eax,eax
   14000e0c1:	jne    0x14000e08e
   14000e0c3:	test   rbx,rbx
   14000e0c6:	je     0x14000e07a
   14000e0c8:	mov    DWORD PTR [rbx],0xc
   14000e0ce:	jmp    0x14000e07a
   14000e0d0:	test   rbx,rbx
   14000e0d3:	je     0x14000e0db
   14000e0d5:	mov    DWORD PTR [rbx],0xc
   14000e0db:	mov    rbx,QWORD PTR [rsp+0x30]
   14000e0e0:	add    rsp,0x20
   14000e0e4:	pop    rdi
   14000e0e5:	ret    
   14000e0e6:	int3   
   14000e0e7:	int3   
   14000e0e8:	int3   
   14000e0e9:	int3   
   14000e0ea:	int3   
   14000e0eb:	int3   
   14000e0ec:	mov    QWORD PTR [rsp+0x8],rbx
   14000e0f1:	mov    QWORD PTR [rsp+0x10],rsi
   14000e0f6:	push   rdi
   14000e0f7:	sub    rsp,0x20
   14000e0fb:	mov    rbx,rdx
   14000e0fe:	mov    rdi,rcx
   14000e101:	test   rcx,rcx
   14000e104:	jne    0x14000e110
   14000e106:	mov    rcx,rdx
   14000e109:	call   0x14000de5c
   14000e10e:	jmp    0x14000e17a
   14000e110:	test   rdx,rdx
   14000e113:	jne    0x14000e11c
   14000e115:	call   0x14000c988
   14000e11a:	jmp    0x14000e178
   14000e11c:	cmp    rdx,0xffffffffffffffe0
   14000e120:	ja     0x14000e165
   14000e122:	mov    rcx,QWORD PTR [rip+0x8ac7]        # 0x140016bf0
   14000e129:	mov    eax,0x1
   14000e12e:	test   rbx,rbx
   14000e131:	cmove  rbx,rax
   14000e135:	mov    r8,rdi
   14000e138:	xor    edx,edx
   14000e13a:	mov    r9,rbx
   14000e13d:	call   QWORD PTR [rip+0xffffffffffff311d]        # 0x140001260
   14000e143:	mov    rsi,rax
   14000e146:	test   rax,rax
   14000e149:	jne    0x14000e1ba
   14000e14b:	cmp    DWORD PTR [rip+0x9327],eax        # 0x140017478
   14000e151:	je     0x14000e1a3
   14000e153:	mov    rcx,rbx
   14000e156:	call   0x14000c1e4
   14000e15b:	test   eax,eax
   14000e15d:	je     0x14000e18a
   14000e15f:	cmp    rbx,0xffffffffffffffe0
   14000e163:	jbe    0x14000e122
   14000e165:	mov    rcx,rbx
   14000e168:	call   0x14000c1e4
   14000e16d:	call   0x14000baac
   14000e172:	mov    DWORD PTR [rax],0xc
   14000e178:	xor    eax,eax
   14000e17a:	mov    rbx,QWORD PTR [rsp+0x30]
   14000e17f:	mov    rsi,QWORD PTR [rsp+0x38]
   14000e184:	add    rsp,0x20
   14000e188:	pop    rdi
   14000e189:	ret    
   14000e18a:	call   0x14000baac
   14000e18f:	mov    rbx,rax
   14000e192:	call   QWORD PTR [rip+0xffffffffffff2e98]        # 0x140001030
   14000e198:	mov    ecx,eax
   14000e19a:	call   0x14000ba5c
   14000e19f:	mov    DWORD PTR [rbx],eax
   14000e1a1:	jmp    0x14000e178
   14000e1a3:	call   0x14000baac
   14000e1a8:	mov    rbx,rax
   14000e1ab:	call   QWORD PTR [rip+0xffffffffffff2e7f]        # 0x140001030
   14000e1b1:	mov    ecx,eax
   14000e1b3:	call   0x14000ba5c
   14000e1b8:	mov    DWORD PTR [rbx],eax
   14000e1ba:	mov    rax,rsi
   14000e1bd:	jmp    0x14000e17a
   14000e1bf:	int3   
   14000e1c0:	int3   
   14000e1c1:	int3   
   14000e1c2:	int3   
   14000e1c3:	int3   
   14000e1c4:	int3   
   14000e1c5:	int3   
   14000e1c6:	int3   
   14000e1c7:	int3   
   14000e1c8:	test   rcx,rcx
   14000e1cb:	je     0x14000e5b5
   14000e1d1:	push   rbx
   14000e1d2:	sub    rsp,0x20
   14000e1d6:	mov    rbx,rcx
   14000e1d9:	mov    rcx,QWORD PTR [rcx+0x8]
   14000e1dd:	call   0x14000c988
   14000e1e2:	mov    rcx,QWORD PTR [rbx+0x10]
   14000e1e6:	call   0x14000c988
   14000e1eb:	mov    rcx,QWORD PTR [rbx+0x18]
   14000e1ef:	call   0x14000c988
   14000e1f4:	mov    rcx,QWORD PTR [rbx+0x20]
   14000e1f8:	call   0x14000c988
   14000e1fd:	mov    rcx,QWORD PTR [rbx+0x28]
   14000e201:	call   0x14000c988
   14000e206:	mov    rcx,QWORD PTR [rbx+0x30]
   14000e20a:	call   0x14000c988
   14000e20f:	mov    rcx,QWORD PTR [rbx]
   14000e212:	call   0x14000c988
   14000e217:	mov    rcx,QWORD PTR [rbx+0x40]
   14000e21b:	call   0x14000c988
   14000e220:	mov    rcx,QWORD PTR [rbx+0x48]
   14000e224:	call   0x14000c988
   14000e229:	mov    rcx,QWORD PTR [rbx+0x50]
   14000e22d:	call   0x14000c988
   14000e232:	mov    rcx,QWORD PTR [rbx+0x58]
   14000e236:	call   0x14000c988
   14000e23b:	mov    rcx,QWORD PTR [rbx+0x60]
   14000e23f:	call   0x14000c988
   14000e244:	mov    rcx,QWORD PTR [rbx+0x68]
   14000e248:	call   0x14000c988
   14000e24d:	mov    rcx,QWORD PTR [rbx+0x38]
   14000e251:	call   0x14000c988
   14000e256:	mov    rcx,QWORD PTR [rbx+0x70]
   14000e25a:	call   0x14000c988
   14000e25f:	mov    rcx,QWORD PTR [rbx+0x78]
   14000e263:	call   0x14000c988
   14000e268:	mov    rcx,QWORD PTR [rbx+0x80]
   14000e26f:	call   0x14000c988
   14000e274:	mov    rcx,QWORD PTR [rbx+0x88]
   14000e27b:	call   0x14000c988
   14000e280:	mov    rcx,QWORD PTR [rbx+0x90]
   14000e287:	call   0x14000c988
   14000e28c:	mov    rcx,QWORD PTR [rbx+0x98]
   14000e293:	call   0x14000c988
   14000e298:	mov    rcx,QWORD PTR [rbx+0xa0]
   14000e29f:	call   0x14000c988
   14000e2a4:	mov    rcx,QWORD PTR [rbx+0xa8]
   14000e2ab:	call   0x14000c988
   14000e2b0:	mov    rcx,QWORD PTR [rbx+0xb0]
   14000e2b7:	call   0x14000c988
   14000e2bc:	mov    rcx,QWORD PTR [rbx+0xb8]
   14000e2c3:	call   0x14000c988
   14000e2c8:	mov    rcx,QWORD PTR [rbx+0xc0]
   14000e2cf:	call   0x14000c988
   14000e2d4:	mov    rcx,QWORD PTR [rbx+0xc8]
   14000e2db:	call   0x14000c988
   14000e2e0:	mov    rcx,QWORD PTR [rbx+0xd0]
   14000e2e7:	call   0x14000c988
   14000e2ec:	mov    rcx,QWORD PTR [rbx+0xd8]
   14000e2f3:	call   0x14000c988
   14000e2f8:	mov    rcx,QWORD PTR [rbx+0xe0]
   14000e2ff:	call   0x14000c988
   14000e304:	mov    rcx,QWORD PTR [rbx+0xe8]
   14000e30b:	call   0x14000c988
   14000e310:	mov    rcx,QWORD PTR [rbx+0xf0]
   14000e317:	call   0x14000c988
   14000e31c:	mov    rcx,QWORD PTR [rbx+0xf8]
   14000e323:	call   0x14000c988
   14000e328:	mov    rcx,QWORD PTR [rbx+0x100]
   14000e32f:	call   0x14000c988
   14000e334:	mov    rcx,QWORD PTR [rbx+0x108]
   14000e33b:	call   0x14000c988
   14000e340:	mov    rcx,QWORD PTR [rbx+0x110]
   14000e347:	call   0x14000c988
   14000e34c:	mov    rcx,QWORD PTR [rbx+0x118]
   14000e353:	call   0x14000c988
   14000e358:	mov    rcx,QWORD PTR [rbx+0x120]
   14000e35f:	call   0x14000c988
   14000e364:	mov    rcx,QWORD PTR [rbx+0x128]
   14000e36b:	call   0x14000c988
   14000e370:	mov    rcx,QWORD PTR [rbx+0x130]
   14000e377:	call   0x14000c988
   14000e37c:	mov    rcx,QWORD PTR [rbx+0x138]
   14000e383:	call   0x14000c988
   14000e388:	mov    rcx,QWORD PTR [rbx+0x140]
   14000e38f:	call   0x14000c988
   14000e394:	mov    rcx,QWORD PTR [rbx+0x148]
   14000e39b:	call   0x14000c988
   14000e3a0:	mov    rcx,QWORD PTR [rbx+0x150]
   14000e3a7:	call   0x14000c988
   14000e3ac:	mov    rcx,QWORD PTR [rbx+0x170]
   14000e3b3:	call   0x14000c988
   14000e3b8:	mov    rcx,QWORD PTR [rbx+0x178]
   14000e3bf:	call   0x14000c988
   14000e3c4:	mov    rcx,QWORD PTR [rbx+0x180]
   14000e3cb:	call   0x14000c988
   14000e3d0:	mov    rcx,QWORD PTR [rbx+0x188]
   14000e3d7:	call   0x14000c988
   14000e3dc:	mov    rcx,QWORD PTR [rbx+0x190]
   14000e3e3:	call   0x14000c988
   14000e3e8:	mov    rcx,QWORD PTR [rbx+0x198]
   14000e3ef:	call   0x14000c988
   14000e3f4:	mov    rcx,QWORD PTR [rbx+0x168]
   14000e3fb:	call   0x14000c988
   14000e400:	mov    rcx,QWORD PTR [rbx+0x1a8]
   14000e407:	call   0x14000c988
   14000e40c:	mov    rcx,QWORD PTR [rbx+0x1b0]
   14000e413:	call   0x14000c988
   14000e418:	mov    rcx,QWORD PTR [rbx+0x1b8]
   14000e41f:	call   0x14000c988
   14000e424:	mov    rcx,QWORD PTR [rbx+0x1c0]
   14000e42b:	call   0x14000c988
   14000e430:	mov    rcx,QWORD PTR [rbx+0x1c8]
   14000e437:	call   0x14000c988
   14000e43c:	mov    rcx,QWORD PTR [rbx+0x1d0]
   14000e443:	call   0x14000c988
   14000e448:	mov    rcx,QWORD PTR [rbx+0x1a0]
   14000e44f:	call   0x14000c988
   14000e454:	mov    rcx,QWORD PTR [rbx+0x1d8]
   14000e45b:	call   0x14000c988
   14000e460:	mov    rcx,QWORD PTR [rbx+0x1e0]
   14000e467:	call   0x14000c988
   14000e46c:	mov    rcx,QWORD PTR [rbx+0x1e8]
   14000e473:	call   0x14000c988
   14000e478:	mov    rcx,QWORD PTR [rbx+0x1f0]
   14000e47f:	call   0x14000c988
   14000e484:	mov    rcx,QWORD PTR [rbx+0x1f8]
   14000e48b:	call   0x14000c988
   14000e490:	mov    rcx,QWORD PTR [rbx+0x200]
   14000e497:	call   0x14000c988
   14000e49c:	mov    rcx,QWORD PTR [rbx+0x208]
   14000e4a3:	call   0x14000c988
   14000e4a8:	mov    rcx,QWORD PTR [rbx+0x210]
   14000e4af:	call   0x14000c988
   14000e4b4:	mov    rcx,QWORD PTR [rbx+0x218]
   14000e4bb:	call   0x14000c988
   14000e4c0:	mov    rcx,QWORD PTR [rbx+0x220]
   14000e4c7:	call   0x14000c988
   14000e4cc:	mov    rcx,QWORD PTR [rbx+0x228]
   14000e4d3:	call   0x14000c988
   14000e4d8:	mov    rcx,QWORD PTR [rbx+0x230]
   14000e4df:	call   0x14000c988
   14000e4e4:	mov    rcx,QWORD PTR [rbx+0x238]
   14000e4eb:	call   0x14000c988
   14000e4f0:	mov    rcx,QWORD PTR [rbx+0x240]
   14000e4f7:	call   0x14000c988
   14000e4fc:	mov    rcx,QWORD PTR [rbx+0x248]
   14000e503:	call   0x14000c988
   14000e508:	mov    rcx,QWORD PTR [rbx+0x250]
   14000e50f:	call   0x14000c988
   14000e514:	mov    rcx,QWORD PTR [rbx+0x258]
   14000e51b:	call   0x14000c988
   14000e520:	mov    rcx,QWORD PTR [rbx+0x260]
   14000e527:	call   0x14000c988
   14000e52c:	mov    rcx,QWORD PTR [rbx+0x268]
   14000e533:	call   0x14000c988
   14000e538:	mov    rcx,QWORD PTR [rbx+0x270]
   14000e53f:	call   0x14000c988
   14000e544:	mov    rcx,QWORD PTR [rbx+0x278]
   14000e54b:	call   0x14000c988
   14000e550:	mov    rcx,QWORD PTR [rbx+0x280]
   14000e557:	call   0x14000c988
   14000e55c:	mov    rcx,QWORD PTR [rbx+0x288]
   14000e563:	call   0x14000c988
   14000e568:	mov    rcx,QWORD PTR [rbx+0x290]
   14000e56f:	call   0x14000c988
   14000e574:	mov    rcx,QWORD PTR [rbx+0x298]
   14000e57b:	call   0x14000c988
   14000e580:	mov    rcx,QWORD PTR [rbx+0x2a0]
   14000e587:	call   0x14000c988
   14000e58c:	mov    rcx,QWORD PTR [rbx+0x2a8]
   14000e593:	call   0x14000c988
   14000e598:	mov    rcx,QWORD PTR [rbx+0x2b0]
   14000e59f:	call   0x14000c988
   14000e5a4:	mov    rcx,QWORD PTR [rbx+0x2b8]
   14000e5ab:	call   0x14000c988
   14000e5b0:	add    rsp,0x20
   14000e5b4:	pop    rbx
   14000e5b5:	ret    
   14000e5b6:	int3   
   14000e5b7:	int3   
   14000e5b8:	int3   
   14000e5b9:	int3   
   14000e5ba:	int3   
   14000e5bb:	int3   
   14000e5bc:	test   rcx,rcx
   14000e5bf:	je     0x14000e627
   14000e5c1:	push   rbx
   14000e5c2:	sub    rsp,0x20
   14000e5c6:	mov    rbx,rcx
   14000e5c9:	mov    rcx,QWORD PTR [rcx]
   14000e5cc:	cmp    rcx,QWORD PTR [rip+0x78ad]        # 0x140015e80
   14000e5d3:	je     0x14000e5da
   14000e5d5:	call   0x14000c988
   14000e5da:	mov    rcx,QWORD PTR [rbx+0x8]
   14000e5de:	cmp    rcx,QWORD PTR [rip+0x78a3]        # 0x140015e88
   14000e5e5:	je     0x14000e5ec
   14000e5e7:	call   0x14000c988
   14000e5ec:	mov    rcx,QWORD PTR [rbx+0x10]
   14000e5f0:	cmp    rcx,QWORD PTR [rip+0x7899]        # 0x140015e90
   14000e5f7:	je     0x14000e5fe
   14000e5f9:	call   0x14000c988
   14000e5fe:	mov    rcx,QWORD PTR [rbx+0x58]
   14000e602:	cmp    rcx,QWORD PTR [rip+0x78cf]        # 0x140015ed8
   14000e609:	je     0x14000e610
   14000e60b:	call   0x14000c988
   14000e610:	mov    rcx,QWORD PTR [rbx+0x60]
   14000e614:	cmp    rcx,QWORD PTR [rip+0x78c5]        # 0x140015ee0
   14000e61b:	je     0x14000e622
   14000e61d:	call   0x14000c988
   14000e622:	add    rsp,0x20
   14000e626:	pop    rbx
   14000e627:	ret    
   14000e628:	int3   
   14000e629:	int3   
   14000e62a:	int3   
   14000e62b:	int3   
   14000e62c:	int3   
   14000e62d:	int3   
   14000e62e:	int3   
   14000e62f:	int3   
   14000e630:	test   rcx,rcx
   14000e633:	je     0x14000e739
   14000e639:	push   rbx
   14000e63a:	sub    rsp,0x20
   14000e63e:	mov    rbx,rcx
   14000e641:	mov    rcx,QWORD PTR [rcx+0x18]
   14000e645:	cmp    rcx,QWORD PTR [rip+0x784c]        # 0x140015e98
   14000e64c:	je     0x14000e653
   14000e64e:	call   0x14000c988
   14000e653:	mov    rcx,QWORD PTR [rbx+0x20]
   14000e657:	cmp    rcx,QWORD PTR [rip+0x7842]        # 0x140015ea0
   14000e65e:	je     0x14000e665
   14000e660:	call   0x14000c988
   14000e665:	mov    rcx,QWORD PTR [rbx+0x28]
   14000e669:	cmp    rcx,QWORD PTR [rip+0x7838]        # 0x140015ea8
   14000e670:	je     0x14000e677
   14000e672:	call   0x14000c988
   14000e677:	mov    rcx,QWORD PTR [rbx+0x30]
   14000e67b:	cmp    rcx,QWORD PTR [rip+0x782e]        # 0x140015eb0
   14000e682:	je     0x14000e689
   14000e684:	call   0x14000c988
   14000e689:	mov    rcx,QWORD PTR [rbx+0x38]
   14000e68d:	cmp    rcx,QWORD PTR [rip+0x7824]        # 0x140015eb8
   14000e694:	je     0x14000e69b
   14000e696:	call   0x14000c988
   14000e69b:	mov    rcx,QWORD PTR [rbx+0x40]
   14000e69f:	cmp    rcx,QWORD PTR [rip+0x781a]        # 0x140015ec0
   14000e6a6:	je     0x14000e6ad
   14000e6a8:	call   0x14000c988
   14000e6ad:	mov    rcx,QWORD PTR [rbx+0x48]
   14000e6b1:	cmp    rcx,QWORD PTR [rip+0x7810]        # 0x140015ec8
   14000e6b8:	je     0x14000e6bf
   14000e6ba:	call   0x14000c988
   14000e6bf:	mov    rcx,QWORD PTR [rbx+0x68]
   14000e6c3:	cmp    rcx,QWORD PTR [rip+0x781e]        # 0x140015ee8
   14000e6ca:	je     0x14000e6d1
   14000e6cc:	call   0x14000c988
   14000e6d1:	mov    rcx,QWORD PTR [rbx+0x70]
   14000e6d5:	cmp    rcx,QWORD PTR [rip+0x7814]        # 0x140015ef0
   14000e6dc:	je     0x14000e6e3
   14000e6de:	call   0x14000c988
   14000e6e3:	mov    rcx,QWORD PTR [rbx+0x78]
   14000e6e7:	cmp    rcx,QWORD PTR [rip+0x780a]        # 0x140015ef8
   14000e6ee:	je     0x14000e6f5
   14000e6f0:	call   0x14000c988
   14000e6f5:	mov    rcx,QWORD PTR [rbx+0x80]
   14000e6fc:	cmp    rcx,QWORD PTR [rip+0x77fd]        # 0x140015f00
   14000e703:	je     0x14000e70a
   14000e705:	call   0x14000c988
   14000e70a:	mov    rcx,QWORD PTR [rbx+0x88]
   14000e711:	cmp    rcx,QWORD PTR [rip+0x77f0]        # 0x140015f08
   14000e718:	je     0x14000e71f
   14000e71a:	call   0x14000c988
   14000e71f:	mov    rcx,QWORD PTR [rbx+0x90]
   14000e726:	cmp    rcx,QWORD PTR [rip+0x77e3]        # 0x140015f10
   14000e72d:	je     0x14000e734
   14000e72f:	call   0x14000c988
   14000e734:	add    rsp,0x20
   14000e738:	pop    rbx
   14000e739:	ret    
   14000e73a:	int3   
   14000e73b:	int3   
   14000e73c:	int3   
   14000e73d:	int3   
   14000e73e:	int3   
   14000e73f:	int3   
   14000e740:	rex push rbp
   14000e742:	push   r12
   14000e744:	push   r13
   14000e746:	push   r14
   14000e748:	push   r15
   14000e74a:	sub    rsp,0x50
   14000e74e:	lea    rbp,[rsp+0x40]
   14000e753:	mov    QWORD PTR [rbp+0x40],rbx
   14000e757:	mov    QWORD PTR [rbp+0x48],rsi
   14000e75b:	mov    QWORD PTR [rbp+0x50],rdi
   14000e75f:	mov    rax,QWORD PTR [rip+0x690a]        # 0x140015070
   14000e766:	xor    rax,rbp
   14000e769:	mov    QWORD PTR [rbp+0x8],rax
   14000e76d:	mov    ebx,DWORD PTR [rbp+0x60]
   14000e770:	xor    edi,edi
   14000e772:	mov    r14,r9
   14000e775:	mov    r15d,r8d
   14000e778:	mov    DWORD PTR [rbp+0x0],edx
   14000e77b:	test   ebx,ebx
   14000e77d:	jle    0x14000e7a9
   14000e77f:	mov    r10d,ebx
   14000e782:	mov    rax,r9
   14000e785:	dec    r10d
   14000e788:	cmp    BYTE PTR [rax],dil
   14000e78b:	je     0x14000e799
   14000e78d:	inc    rax
   14000e790:	test   r10d,r10d
   14000e793:	jne    0x14000e785
   14000e795:	or     r10d,0xffffffff
   14000e799:	mov    eax,ebx
   14000e79b:	sub    eax,r10d
   14000e79e:	dec    eax
   14000e7a0:	cmp    eax,ebx
   14000e7a2:	lea    ebx,[rax+0x1]
   14000e7a5:	jl     0x14000e7a9
   14000e7a7:	mov    ebx,eax
   14000e7a9:	mov    r12d,DWORD PTR [rbp+0x78]
   14000e7ad:	mov    esi,edi
   14000e7af:	test   r12d,r12d
   14000e7b2:	jne    0x14000e7bb
   14000e7b4:	mov    rax,QWORD PTR [rcx]
   14000e7b7:	mov    r12d,DWORD PTR [rax+0x4]
   14000e7bb:	neg    DWORD PTR [rbp+0x80]
   14000e7c1:	mov    r9d,ebx
   14000e7c4:	mov    r8,r14
   14000e7c7:	sbb    edx,edx
   14000e7c9:	mov    ecx,r12d
   14000e7cc:	mov    DWORD PTR [rsp+0x28],edi
   14000e7d0:	and    edx,0x8
   14000e7d3:	mov    QWORD PTR [rsp+0x20],rdi
   14000e7d8:	inc    edx
   14000e7da:	call   QWORD PTR [rip+0xffffffffffff2a90]        # 0x140001270
   14000e7e0:	movsxd r13,eax
   14000e7e3:	test   eax,eax
   14000e7e5:	jne    0x14000e7ee
   14000e7e7:	xor    eax,eax
   14000e7e9:	jmp    0x14000e9e4
   14000e7ee:	movabs r8,0xffffffffffffff0
   14000e7f8:	test   eax,eax
   14000e7fa:	jle    0x14000e85a
   14000e7fc:	xor    edx,edx
   14000e7fe:	lea    rax,[rdx-0x20]
   14000e802:	div    r13
   14000e805:	cmp    rax,0x2
   14000e809:	jb     0x14000e85a
   14000e80b:	lea    rcx,[r13+r13*1+0x10]
   14000e810:	cmp    rcx,0x400
   14000e817:	ja     0x14000e843
   14000e819:	lea    rax,[rcx+0xf]
   14000e81d:	cmp    rax,rcx
   14000e820:	ja     0x14000e825
   14000e822:	mov    rax,r8
   14000e825:	and    rax,0xfffffffffffffff0
   14000e829:	call   0x14000ee40
   14000e82e:	sub    rsp,rax
   14000e831:	lea    rdi,[rsp+0x40]
   14000e836:	test   rdi,rdi
   14000e839:	je     0x14000e7e7
   14000e83b:	mov    DWORD PTR [rdi],0xcccc
   14000e841:	jmp    0x14000e856
   14000e843:	call   0x14000de5c
   14000e848:	mov    rdi,rax
   14000e84b:	test   rax,rax
   14000e84e:	je     0x14000e85a
   14000e850:	mov    DWORD PTR [rax],0xdddd
   14000e856:	add    rdi,0x10
   14000e85a:	test   rdi,rdi
   14000e85d:	je     0x14000e7e7
   14000e85f:	mov    r9d,ebx
   14000e862:	mov    r8,r14
   14000e865:	mov    edx,0x1
   14000e86a:	mov    ecx,r12d
   14000e86d:	mov    DWORD PTR [rsp+0x28],r13d
   14000e872:	mov    QWORD PTR [rsp+0x20],rdi
   14000e877:	call   QWORD PTR [rip+0xffffffffffff29f3]        # 0x140001270
   14000e87d:	test   eax,eax
   14000e87f:	je     0x14000e9d1
   14000e885:	mov    r14d,DWORD PTR [rbp+0x0]
   14000e889:	and    DWORD PTR [rsp+0x28],esi
   14000e88d:	and    QWORD PTR [rsp+0x20],rsi
   14000e892:	mov    ecx,r14d
   14000e895:	mov    r9d,r13d
   14000e898:	mov    r8,rdi
   14000e89b:	mov    edx,r15d
   14000e89e:	call   QWORD PTR [rip+0xffffffffffff29c4]        # 0x140001268
   14000e8a4:	movsxd rsi,eax
   14000e8a7:	test   eax,eax
   14000e8a9:	je     0x14000e9d1
   14000e8af:	mov    r8d,0x400
   14000e8b5:	test   r8d,r15d
   14000e8b8:	je     0x14000e8f1
   14000e8ba:	mov    ecx,DWORD PTR [rbp+0x70]
   14000e8bd:	test   ecx,ecx
   14000e8bf:	je     0x14000e9d1
   14000e8c5:	cmp    esi,ecx
   14000e8c7:	jg     0x14000e9d1
   14000e8cd:	mov    rax,QWORD PTR [rbp+0x68]
   14000e8d1:	mov    DWORD PTR [rsp+0x28],ecx
   14000e8d5:	mov    r9d,r13d
   14000e8d8:	mov    r8,rdi
   14000e8db:	mov    edx,r15d
   14000e8de:	mov    ecx,r14d
   14000e8e1:	mov    QWORD PTR [rsp+0x20],rax
   14000e8e6:	call   QWORD PTR [rip+0xffffffffffff297c]        # 0x140001268
   14000e8ec:	jmp    0x14000e9d1
   14000e8f1:	test   eax,eax
   14000e8f3:	jle    0x14000e95c
   14000e8f5:	xor    edx,edx
   14000e8f7:	lea    rax,[rdx-0x20]
   14000e8fb:	div    rsi
   14000e8fe:	cmp    rax,0x2
   14000e902:	jb     0x14000e95c
   14000e904:	lea    rcx,[rsi+rsi*1+0x10]
   14000e909:	cmp    rcx,r8
   14000e90c:	ja     0x14000e943
   14000e90e:	lea    rax,[rcx+0xf]
   14000e912:	cmp    rax,rcx
   14000e915:	ja     0x14000e921
   14000e917:	movabs rax,0xffffffffffffff0
   14000e921:	and    rax,0xfffffffffffffff0
   14000e925:	call   0x14000ee40
   14000e92a:	sub    rsp,rax
   14000e92d:	lea    rbx,[rsp+0x40]
   14000e932:	test   rbx,rbx
   14000e935:	je     0x14000e9d1
   14000e93b:	mov    DWORD PTR [rbx],0xcccc
   14000e941:	jmp    0x14000e956
   14000e943:	call   0x14000de5c
   14000e948:	mov    rbx,rax
   14000e94b:	test   rax,rax
   14000e94e:	je     0x14000e95e
   14000e950:	mov    DWORD PTR [rax],0xdddd
   14000e956:	add    rbx,0x10
   14000e95a:	jmp    0x14000e95e
   14000e95c:	xor    ebx,ebx
   14000e95e:	test   rbx,rbx
   14000e961:	je     0x14000e9d1
   14000e963:	mov    r9d,r13d
   14000e966:	mov    r8,rdi
   14000e969:	mov    edx,r15d
   14000e96c:	mov    ecx,r14d
   14000e96f:	mov    DWORD PTR [rsp+0x28],esi
   14000e973:	mov    QWORD PTR [rsp+0x20],rbx
   14000e978:	call   QWORD PTR [rip+0xffffffffffff28ea]        # 0x140001268
   14000e97e:	xor    ecx,ecx
   14000e980:	test   eax,eax
   14000e982:	je     0x14000e9c0
   14000e984:	mov    eax,DWORD PTR [rbp+0x70]
   14000e987:	xor    edx,edx
   14000e989:	mov    QWORD PTR [rsp+0x38],rcx
   14000e98e:	mov    r9d,esi
   14000e991:	mov    r8,rbx
   14000e994:	mov    QWORD PTR [rsp+0x30],rcx
   14000e999:	test   eax,eax
   14000e99b:	jne    0x14000e9a8
   14000e99d:	mov    DWORD PTR [rsp+0x28],ecx
   14000e9a1:	mov    QWORD PTR [rsp+0x20],rcx
   14000e9a6:	jmp    0x14000e9b5
   14000e9a8:	mov    DWORD PTR [rsp+0x28],eax
   14000e9ac:	mov    rax,QWORD PTR [rbp+0x68]
   14000e9b0:	mov    QWORD PTR [rsp+0x20],rax
   14000e9b5:	mov    ecx,r12d
   14000e9b8:	call   QWORD PTR [rip+0xffffffffffff2892]        # 0x140001250
   14000e9be:	mov    esi,eax
   14000e9c0:	lea    rcx,[rbx-0x10]
   14000e9c4:	cmp    DWORD PTR [rcx],0xdddd
   14000e9ca:	jne    0x14000e9d1
   14000e9cc:	call   0x14000c988
   14000e9d1:	lea    rcx,[rdi-0x10]
   14000e9d5:	cmp    DWORD PTR [rcx],0xdddd
   14000e9db:	jne    0x14000e9e2
   14000e9dd:	call   0x14000c988
   14000e9e2:	mov    eax,esi
   14000e9e4:	mov    rcx,QWORD PTR [rbp+0x8]
   14000e9e8:	xor    rcx,rbp
   14000e9eb:	call   0x140009dd0
   14000e9f0:	mov    rbx,QWORD PTR [rbp+0x40]
   14000e9f4:	mov    rsi,QWORD PTR [rbp+0x48]
   14000e9f8:	mov    rdi,QWORD PTR [rbp+0x50]
   14000e9fc:	lea    rsp,[rbp+0x10]
   14000ea00:	pop    r15
   14000ea02:	pop    r14
   14000ea04:	pop    r13
   14000ea06:	pop    r12
   14000ea08:	pop    rbp
   14000ea09:	ret    
   14000ea0a:	int3   
   14000ea0b:	int3   
   14000ea0c:	int3   
   14000ea0d:	int3   
   14000ea0e:	int3   
   14000ea0f:	int3   
   14000ea10:	mov    QWORD PTR [rsp+0x8],rbx
   14000ea15:	mov    QWORD PTR [rsp+0x10],rsi
   14000ea1a:	push   rdi
   14000ea1b:	sub    rsp,0x70
   14000ea1f:	mov    esi,edx
   14000ea21:	mov    rdx,rcx
   14000ea24:	lea    rcx,[rsp+0x50]
   14000ea29:	mov    rbx,r9
   14000ea2c:	mov    edi,r8d
   14000ea2f:	call   0x14000d5a4
   14000ea34:	mov    eax,DWORD PTR [rsp+0xb8]
   14000ea3b:	mov    r11d,DWORD PTR [rsp+0xc0]
   14000ea43:	lea    rcx,[rsp+0x50]
   14000ea48:	mov    DWORD PTR [rsp+0x40],r11d
   14000ea4d:	mov    DWORD PTR [rsp+0x38],eax
   14000ea51:	mov    eax,DWORD PTR [rsp+0xb0]
   14000ea58:	mov    DWORD PTR [rsp+0x30],eax
   14000ea5c:	mov    rax,QWORD PTR [rsp+0xa8]
   14000ea64:	mov    r9,rbx
   14000ea67:	mov    QWORD PTR [rsp+0x28],rax
   14000ea6c:	mov    eax,DWORD PTR [rsp+0xa0]
   14000ea73:	mov    r8d,edi
   14000ea76:	mov    edx,esi
   14000ea78:	mov    DWORD PTR [rsp+0x20],eax
   14000ea7c:	call   0x14000e740
   14000ea81:	cmp    BYTE PTR [rsp+0x68],0x0
   14000ea86:	je     0x14000ea94
   14000ea88:	mov    rcx,QWORD PTR [rsp+0x60]
   14000ea8d:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14000ea94:	lea    r11,[rsp+0x70]
   14000ea99:	mov    rbx,QWORD PTR [r11+0x10]
   14000ea9d:	mov    rsi,QWORD PTR [r11+0x18]
   14000eaa1:	mov    rsp,r11
   14000eaa4:	pop    rdi
   14000eaa5:	ret    
   14000eaa6:	int3   
   14000eaa7:	int3   
   14000eaa8:	int3   
   14000eaa9:	int3   
   14000eaaa:	int3   
   14000eaab:	int3   
   14000eaac:	rex push rbp
   14000eaae:	push   r12
   14000eab0:	push   r13
   14000eab2:	push   r14
   14000eab4:	push   r15
   14000eab6:	sub    rsp,0x40
   14000eaba:	lea    rbp,[rsp+0x30]
   14000eabf:	mov    QWORD PTR [rbp+0x40],rbx
   14000eac3:	mov    QWORD PTR [rbp+0x48],rsi
   14000eac7:	mov    QWORD PTR [rbp+0x50],rdi
   14000eacb:	mov    rax,QWORD PTR [rip+0x659e]        # 0x140015070
   14000ead2:	xor    rax,rbp
   14000ead5:	mov    QWORD PTR [rbp+0x0],rax
   14000ead9:	mov    esi,DWORD PTR [rbp+0x68]
   14000eadc:	xor    edi,edi
   14000eade:	mov    r13d,r9d
   14000eae1:	mov    r14,r8
   14000eae4:	mov    r15d,edx
   14000eae7:	test   esi,esi
   14000eae9:	jne    0x14000eaf1
   14000eaeb:	mov    rax,QWORD PTR [rcx]
   14000eaee:	mov    esi,DWORD PTR [rax+0x4]
   14000eaf1:	neg    DWORD PTR [rbp+0x70]
   14000eaf4:	mov    ecx,esi
   14000eaf6:	mov    DWORD PTR [rsp+0x28],edi
   14000eafa:	sbb    edx,edx
   14000eafc:	mov    QWORD PTR [rsp+0x20],rdi
   14000eb01:	and    edx,0x8
   14000eb04:	inc    edx
   14000eb06:	call   QWORD PTR [rip+0xffffffffffff2764]        # 0x140001270
   14000eb0c:	movsxd r12,eax
   14000eb0f:	test   eax,eax
   14000eb11:	jne    0x14000eb1a
   14000eb13:	xor    eax,eax
   14000eb15:	jmp    0x14000ebe4
   14000eb1a:	jle    0x14000eb83
   14000eb1c:	movabs rax,0x7ffffffffffffff0
   14000eb26:	cmp    r12,rax
   14000eb29:	ja     0x14000eb83
   14000eb2b:	lea    rcx,[r12+r12*1+0x10]
   14000eb30:	cmp    rcx,0x400
   14000eb37:	ja     0x14000eb6a
   14000eb39:	lea    rax,[rcx+0xf]
   14000eb3d:	cmp    rax,rcx
   14000eb40:	ja     0x14000eb4c
   14000eb42:	movabs rax,0xffffffffffffff0
   14000eb4c:	and    rax,0xfffffffffffffff0
   14000eb50:	call   0x14000ee40
   14000eb55:	sub    rsp,rax
   14000eb58:	lea    rbx,[rsp+0x30]
   14000eb5d:	test   rbx,rbx
   14000eb60:	je     0x14000eb13
   14000eb62:	mov    DWORD PTR [rbx],0xcccc
   14000eb68:	jmp    0x14000eb7d
   14000eb6a:	call   0x14000de5c
   14000eb6f:	mov    rbx,rax
   14000eb72:	test   rax,rax
   14000eb75:	je     0x14000eb86
   14000eb77:	mov    DWORD PTR [rax],0xdddd
   14000eb7d:	add    rbx,0x10
   14000eb81:	jmp    0x14000eb86
   14000eb83:	mov    rbx,rdi
   14000eb86:	test   rbx,rbx
   14000eb89:	je     0x14000eb13
   14000eb8b:	mov    r8,r12
   14000eb8e:	xor    edx,edx
   14000eb90:	mov    rcx,rbx
   14000eb93:	add    r8,r8
   14000eb96:	call   0x14000db90
   14000eb9b:	mov    r9d,r13d
   14000eb9e:	mov    r8,r14
   14000eba1:	mov    edx,0x1
   14000eba6:	mov    ecx,esi
   14000eba8:	mov    DWORD PTR [rsp+0x28],r12d
   14000ebad:	mov    QWORD PTR [rsp+0x20],rbx
   14000ebb2:	call   QWORD PTR [rip+0xffffffffffff26b8]        # 0x140001270
   14000ebb8:	test   eax,eax
   14000ebba:	je     0x14000ebd1
   14000ebbc:	mov    r9,QWORD PTR [rbp+0x60]
   14000ebc0:	mov    r8d,eax
   14000ebc3:	mov    rdx,rbx
   14000ebc6:	mov    ecx,r15d
   14000ebc9:	call   QWORD PTR [rip+0xffffffffffff26a9]        # 0x140001278
   14000ebcf:	mov    edi,eax
   14000ebd1:	lea    rcx,[rbx-0x10]
   14000ebd5:	cmp    DWORD PTR [rcx],0xdddd
   14000ebdb:	jne    0x14000ebe2
   14000ebdd:	call   0x14000c988
   14000ebe2:	mov    eax,edi
   14000ebe4:	mov    rcx,QWORD PTR [rbp+0x0]
   14000ebe8:	xor    rcx,rbp
   14000ebeb:	call   0x140009dd0
   14000ebf0:	mov    rbx,QWORD PTR [rbp+0x40]
   14000ebf4:	mov    rsi,QWORD PTR [rbp+0x48]
   14000ebf8:	mov    rdi,QWORD PTR [rbp+0x50]
   14000ebfc:	lea    rsp,[rbp+0x10]
   14000ec00:	pop    r15
   14000ec02:	pop    r14
   14000ec04:	pop    r13
   14000ec06:	pop    r12
   14000ec08:	pop    rbp
   14000ec09:	ret    
   14000ec0a:	int3   
   14000ec0b:	int3   
   14000ec0c:	int3   
   14000ec0d:	int3   
   14000ec0e:	int3   
   14000ec0f:	int3   
   14000ec10:	mov    QWORD PTR [rsp+0x8],rbx
   14000ec15:	mov    QWORD PTR [rsp+0x10],rsi
   14000ec1a:	push   rdi
   14000ec1b:	sub    rsp,0x60
   14000ec1f:	mov    esi,edx
   14000ec21:	mov    rdx,rcx
   14000ec24:	lea    rcx,[rsp+0x40]
   14000ec29:	mov    ebx,r9d
   14000ec2c:	mov    rdi,r8
   14000ec2f:	call   0x14000d5a4
   14000ec34:	mov    r11d,DWORD PTR [rsp+0xa8]
   14000ec3c:	mov    eax,DWORD PTR [rsp+0x98]
   14000ec43:	lea    rcx,[rsp+0x40]
   14000ec48:	mov    DWORD PTR [rsp+0x30],r11d
   14000ec4d:	mov    DWORD PTR [rsp+0x28],eax
   14000ec51:	mov    rax,QWORD PTR [rsp+0x90]
   14000ec59:	mov    r9d,ebx
   14000ec5c:	mov    r8,rdi
   14000ec5f:	mov    edx,esi
   14000ec61:	mov    QWORD PTR [rsp+0x20],rax
   14000ec66:	call   0x14000eaac
   14000ec6b:	cmp    BYTE PTR [rsp+0x58],0x0
   14000ec70:	je     0x14000ec7e
   14000ec72:	mov    rcx,QWORD PTR [rsp+0x50]
   14000ec77:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14000ec7e:	mov    rbx,QWORD PTR [rsp+0x70]
   14000ec83:	mov    rsi,QWORD PTR [rsp+0x78]
   14000ec88:	add    rsp,0x60
   14000ec8c:	pop    rdi
   14000ec8d:	ret    
   14000ec8e:	int3   
   14000ec8f:	int3   
   14000ec90:	int3   
   14000ec91:	int3   
   14000ec92:	int3   
   14000ec93:	int3   
   14000ec94:	rex push rbx
   14000ec96:	sub    rsp,0x20
   14000ec9a:	test   rcx,rcx
   14000ec9d:	je     0x14000ecac
   14000ec9f:	test   rdx,rdx
   14000eca2:	je     0x14000ecac
   14000eca4:	test   r8,r8
   14000eca7:	jne    0x14000ecc5
   14000eca9:	mov    BYTE PTR [rcx],r8b
   14000ecac:	call   0x14000baac
   14000ecb1:	mov    ebx,0x16
   14000ecb6:	mov    DWORD PTR [rax],ebx
   14000ecb8:	call   0x14000ba38
   14000ecbd:	mov    eax,ebx
   14000ecbf:	add    rsp,0x20
   14000ecc3:	pop    rbx
   14000ecc4:	ret    
   14000ecc5:	mov    r9,rcx
   14000ecc8:	sub    r9,r8
   14000eccb:	mov    al,BYTE PTR [r8]
   14000ecce:	mov    BYTE PTR [r9+r8*1],al
   14000ecd2:	inc    r8
   14000ecd5:	test   al,al
   14000ecd7:	je     0x14000ecde
   14000ecd9:	dec    rdx
   14000ecdc:	jne    0x14000eccb
   14000ecde:	test   rdx,rdx
   14000ece1:	jne    0x14000ecf1
   14000ece3:	mov    BYTE PTR [rcx],dl
   14000ece5:	call   0x14000baac
   14000ecea:	mov    ebx,0x22
   14000ecef:	jmp    0x14000ecb6
   14000ecf1:	xor    eax,eax
   14000ecf3:	jmp    0x14000ecbf
   14000ecf5:	int3   
   14000ecf6:	int3   
   14000ecf7:	int3   
   14000ecf8:	int3   
   14000ecf9:	int3   
   14000ecfa:	int3   
   14000ecfb:	int3   
   14000ecfc:	rex push rbx
   14000ecfe:	sub    rsp,0x30
   14000ed02:	mov    rbx,rcx
   14000ed05:	mov    ecx,0xe
   14000ed0a:	call   0x14000bef8
   14000ed0f:	nop
   14000ed10:	mov    rax,QWORD PTR [rbx+0x8]
   14000ed14:	test   rax,rax
   14000ed17:	je     0x14000ed58
   14000ed19:	mov    rcx,QWORD PTR [rip+0x8750]        # 0x140017470
   14000ed20:	lea    rdx,[rip+0x8741]        # 0x140017468
   14000ed27:	mov    QWORD PTR [rsp+0x20],rcx
   14000ed2c:	test   rcx,rcx
   14000ed2f:	je     0x14000ed4a
   14000ed31:	cmp    QWORD PTR [rcx],rax
   14000ed34:	jne    0x14000ed45
   14000ed36:	mov    rax,QWORD PTR [rcx+0x8]
   14000ed3a:	mov    QWORD PTR [rdx+0x8],rax
   14000ed3e:	call   0x14000c988
   14000ed43:	jmp    0x14000ed4a
   14000ed45:	mov    rdx,rcx
   14000ed48:	jmp    0x14000ed27
   14000ed4a:	mov    rcx,QWORD PTR [rbx+0x8]
   14000ed4e:	call   0x14000c988
   14000ed53:	and    QWORD PTR [rbx+0x8],0x0
   14000ed58:	mov    ecx,0xe
   14000ed5d:	call   0x14000bdec
   14000ed62:	add    rsp,0x30
   14000ed66:	pop    rbx
   14000ed67:	ret    
   14000ed68:	int3   
   14000ed69:	int3   
   14000ed6a:	int3   
   14000ed6b:	int3   
   14000ed6c:	int3   
   14000ed6d:	int3   
   14000ed6e:	int3   
   14000ed6f:	int3   
   14000ed70:	int3   
   14000ed71:	int3   
   14000ed72:	int3   
   14000ed73:	int3   
   14000ed74:	int3   
   14000ed75:	int3   
   14000ed76:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000ed80:	sub    rdx,rcx
   14000ed83:	mov    r9,rdx
   14000ed86:	test   cl,0x7
   14000ed89:	je     0x14000eda6
   14000ed8b:	mov    al,BYTE PTR [rcx]
   14000ed8d:	mov    dl,BYTE PTR [rcx+r9*1]
   14000ed91:	cmp    al,dl
   14000ed93:	jne    0x14000edeb
   14000ed95:	inc    rcx
   14000ed98:	test   al,al
   14000ed9a:	je     0x14000edf3
   14000ed9c:	test   rcx,0x7
   14000eda3:	jne    0x14000ed8b
   14000eda5:	nop
   14000eda6:	movabs r11,0x8101010101010100
   14000edb0:	lea    rdx,[rcx+r9*1]
   14000edb4:	and    dx,0xfff
   14000edb9:	cmp    dx,0xff8
   14000edbe:	ja     0x14000ed8b
   14000edc0:	mov    rax,QWORD PTR [rcx]
   14000edc3:	mov    rdx,QWORD PTR [rcx+r9*1]
   14000edc7:	cmp    rax,rdx
   14000edca:	jne    0x14000ed8b
   14000edcc:	movabs r10,0x7efefefefefefeff
   14000edd6:	add    r10,rdx
   14000edd9:	xor    rax,0xffffffffffffffff
   14000eddd:	add    rcx,0x8
   14000ede1:	xor    rax,r10
   14000ede4:	test   r11,rax
   14000ede7:	je     0x14000edb0
   14000ede9:	jmp    0x14000edfa
   14000edeb:	sbb    rax,rax
   14000edee:	sbb    rax,0xffffffffffffffff
   14000edf2:	ret    
   14000edf3:	xor    eax,eax
   14000edf5:	ret    
   14000edf6:	data16 data16 xchg ax,ax
   14000edfa:	test   dl,dl
   14000edfc:	je     0x14000ee25
   14000edfe:	test   dh,dh
   14000ee00:	je     0x14000ee25
   14000ee02:	shr    rdx,0x10
   14000ee06:	test   dl,dl
   14000ee08:	je     0x14000ee25
   14000ee0a:	test   dh,dh
   14000ee0c:	je     0x14000ee25
   14000ee0e:	shr    rdx,0x10
   14000ee12:	test   dl,dl
   14000ee14:	je     0x14000ee25
   14000ee16:	test   dh,dh
   14000ee18:	je     0x14000ee25
   14000ee1a:	shr    edx,0x10
   14000ee1d:	test   dl,dl
   14000ee1f:	je     0x14000ee25
   14000ee21:	test   dh,dh
   14000ee23:	jne    0x14000edb0
   14000ee25:	xor    eax,eax
   14000ee27:	ret    
   14000ee28:	sbb    rax,rax
   14000ee2b:	sbb    rax,0xffffffffffffffff
   14000ee2f:	ret    
   14000ee30:	int3   
   14000ee31:	int3   
   14000ee32:	int3   
   14000ee33:	int3   
   14000ee34:	int3   
   14000ee35:	int3   
   14000ee36:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000ee40:	sub    rsp,0x10
   14000ee44:	mov    QWORD PTR [rsp],r10
   14000ee48:	mov    QWORD PTR [rsp+0x8],r11
   14000ee4d:	xor    r11,r11
   14000ee50:	lea    r10,[rsp+0x18]
   14000ee55:	sub    r10,rax
   14000ee58:	cmovb  r10,r11
   14000ee5c:	mov    r11,QWORD PTR gs:0x10
   14000ee65:	cmp    r10,r11
   14000ee68:	jae    0x14000ee80
   14000ee6a:	and    r10w,0xf000
   14000ee70:	lea    r11,[r11-0x1000]
   14000ee77:	mov    BYTE PTR [r11],0x0
   14000ee7b:	cmp    r10,r11
   14000ee7e:	jne    0x14000ee70
   14000ee80:	mov    r10,QWORD PTR [rsp]
   14000ee84:	mov    r11,QWORD PTR [rsp+0x8]
   14000ee89:	add    rsp,0x10
   14000ee8d:	ret    
   14000ee8e:	int3   
   14000ee8f:	int3   
   14000ee90:	int3   
   14000ee91:	int3   
   14000ee92:	int3   
   14000ee93:	int3   
   14000ee94:	rex push rbx
   14000ee96:	sub    rsp,0x40
   14000ee9a:	mov    ebx,ecx
   14000ee9c:	lea    rcx,[rsp+0x20]
   14000eea1:	call   0x14000d5a4
   14000eea6:	mov    rax,QWORD PTR [rsp+0x20]
   14000eeab:	movzx  r11d,bl
   14000eeaf:	mov    rcx,QWORD PTR [rax+0x140]
   14000eeb6:	movzx  eax,WORD PTR [rcx+r11*2]
   14000eebb:	and    eax,0x8000
   14000eec0:	cmp    BYTE PTR [rsp+0x38],0x0
   14000eec5:	je     0x14000eed3
   14000eec7:	mov    rcx,QWORD PTR [rsp+0x30]
   14000eecc:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14000eed3:	add    rsp,0x40
   14000eed7:	pop    rbx
   14000eed8:	ret    
   14000eed9:	int3   
   14000eeda:	int3   
   14000eedb:	int3   
   14000eedc:	int3   
   14000eedd:	int3   
   14000eede:	int3   
   14000eedf:	int3   
   14000eee0:	rex push rbx
   14000eee2:	sub    rsp,0x40
   14000eee6:	mov    ebx,ecx
   14000eee8:	lea    rcx,[rsp+0x20]
   14000eeed:	xor    edx,edx
   14000eeef:	call   0x14000d5a4
   14000eef4:	mov    rax,QWORD PTR [rsp+0x20]
   14000eef9:	movzx  r11d,bl
   14000eefd:	mov    rcx,QWORD PTR [rax+0x140]
   14000ef04:	movzx  eax,WORD PTR [rcx+r11*2]
   14000ef09:	and    eax,0x8000
   14000ef0e:	cmp    BYTE PTR [rsp+0x38],0x0
   14000ef13:	je     0x14000ef21
   14000ef15:	mov    rcx,QWORD PTR [rsp+0x30]
   14000ef1a:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14000ef21:	add    rsp,0x40
   14000ef25:	pop    rbx
   14000ef26:	ret    
   14000ef27:	int3   
   14000ef28:	int3   
   14000ef29:	int3   
   14000ef2a:	int3   
   14000ef2b:	int3   
   14000ef2c:	int3   
   14000ef2d:	int3   
   14000ef2e:	int3   
   14000ef2f:	int3   
   14000ef30:	int3   
   14000ef31:	int3   
   14000ef32:	int3   
   14000ef33:	int3   
   14000ef34:	int3   
   14000ef35:	int3   
   14000ef36:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000ef40:	sub    rdx,rcx
   14000ef43:	cmp    r8,0x8
   14000ef47:	jb     0x14000ef6b
   14000ef49:	test   cl,0x7
   14000ef4c:	je     0x14000ef62
   14000ef4e:	xchg   ax,ax
   14000ef50:	mov    al,BYTE PTR [rcx]
   14000ef52:	cmp    al,BYTE PTR [rdx+rcx*1]
   14000ef55:	jne    0x14000ef83
   14000ef57:	inc    rcx
   14000ef5a:	dec    r8
   14000ef5d:	test   cl,0x7
   14000ef60:	jne    0x14000ef50
   14000ef62:	mov    r9,r8
   14000ef65:	shr    r9,0x3
   14000ef69:	jne    0x14000ef8a
   14000ef6b:	test   r8,r8
   14000ef6e:	je     0x14000ef7f
   14000ef70:	mov    al,BYTE PTR [rcx]
   14000ef72:	cmp    al,BYTE PTR [rdx+rcx*1]
   14000ef75:	jne    0x14000ef83
   14000ef77:	inc    rcx
   14000ef7a:	dec    r8
   14000ef7d:	jne    0x14000ef70
   14000ef7f:	xor    rax,rax
   14000ef82:	ret    
   14000ef83:	sbb    eax,eax
   14000ef85:	sbb    eax,0xffffffff
   14000ef88:	ret    
   14000ef89:	nop
   14000ef8a:	shr    r9,0x2
   14000ef8e:	je     0x14000efc7
   14000ef90:	mov    rax,QWORD PTR [rcx]
   14000ef93:	cmp    rax,QWORD PTR [rdx+rcx*1]
   14000ef97:	jne    0x14000eff4
   14000ef99:	mov    rax,QWORD PTR [rcx+0x8]
   14000ef9d:	cmp    rax,QWORD PTR [rdx+rcx*1+0x8]
   14000efa2:	jne    0x14000eff0
   14000efa4:	mov    rax,QWORD PTR [rcx+0x10]
   14000efa8:	cmp    rax,QWORD PTR [rdx+rcx*1+0x10]
   14000efad:	jne    0x14000efec
   14000efaf:	mov    rax,QWORD PTR [rcx+0x18]
   14000efb3:	cmp    rax,QWORD PTR [rdx+rcx*1+0x18]
   14000efb8:	jne    0x14000efe8
   14000efba:	add    rcx,0x20
   14000efbe:	dec    r9
   14000efc1:	jne    0x14000ef90
   14000efc3:	and    r8,0x1f
   14000efc7:	mov    r9,r8
   14000efca:	shr    r9,0x3
   14000efce:	je     0x14000ef6b
   14000efd0:	mov    rax,QWORD PTR [rcx]
   14000efd3:	cmp    rax,QWORD PTR [rdx+rcx*1]
   14000efd7:	jne    0x14000eff4
   14000efd9:	add    rcx,0x8
   14000efdd:	dec    r9
   14000efe0:	jne    0x14000efd0
   14000efe2:	and    r8,0x7
   14000efe6:	jmp    0x14000ef6b
   14000efe8:	add    rcx,0x8
   14000efec:	add    rcx,0x8
   14000eff0:	add    rcx,0x8
   14000eff4:	mov    rcx,QWORD PTR [rcx+rdx*1]
   14000eff8:	bswap  rax
   14000effb:	bswap  rcx
   14000effe:	cmp    rax,rcx
   14000f001:	sbb    eax,eax
   14000f003:	sbb    eax,0xffffffff
   14000f006:	ret    
   14000f007:	int3   
   14000f008:	int3   
   14000f009:	int3   
   14000f00a:	int3   
   14000f00b:	int3   
   14000f00c:	int3   
   14000f00d:	int3   
   14000f00e:	int3   
   14000f00f:	int3   
   14000f010:	int3   
   14000f011:	int3   
   14000f012:	int3   
   14000f013:	int3   
   14000f014:	int3   
   14000f015:	int3   
   14000f016:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000f020:	test   r8,r8
   14000f023:	je     0x14000f09a
   14000f025:	sub    rdx,rcx
   14000f028:	mov    r9,rdx
   14000f02b:	movabs r11,0x8101010101010100
   14000f035:	test   cl,0x7
   14000f038:	je     0x14000f059
   14000f03a:	mov    al,BYTE PTR [rcx]
   14000f03c:	mov    dl,BYTE PTR [rcx+r9*1]
   14000f040:	inc    rcx
   14000f043:	cmp    al,dl
   14000f045:	jne    0x14000f09e
   14000f047:	dec    r8
   14000f04a:	je     0x14000f09a
   14000f04c:	test   al,al
   14000f04e:	je     0x14000f09a
   14000f050:	test   rcx,0x7
   14000f057:	jne    0x14000f03a
   14000f059:	lea    rdx,[rcx+r9*1]
   14000f05d:	and    dx,0xfff
   14000f062:	cmp    dx,0xff8
   14000f067:	ja     0x14000f03a
   14000f069:	mov    rax,QWORD PTR [rcx]
   14000f06c:	mov    rdx,QWORD PTR [rcx+r9*1]
   14000f070:	cmp    rax,rdx
   14000f073:	jne    0x14000f03a
   14000f075:	add    rcx,0x8
   14000f079:	sub    r8,0x8
   14000f07d:	movabs r10,0x7efefefefefefeff
   14000f087:	jbe    0x14000f09a
   14000f089:	xor    rax,0xffffffffffffffff
   14000f08d:	add    r10,rdx
   14000f090:	xor    rax,r10
   14000f093:	test   r11,rax
   14000f096:	je     0x14000f059
   14000f098:	jmp    0x14000f0a6
   14000f09a:	xor    rax,rax
   14000f09d:	ret    
   14000f09e:	sbb    rax,rax
   14000f0a1:	sbb    rax,0xffffffffffffffff
   14000f0a5:	ret    
   14000f0a6:	test   dl,dl
   14000f0a8:	je     0x14000f0d1
   14000f0aa:	test   dh,dh
   14000f0ac:	je     0x14000f0d1
   14000f0ae:	shr    rdx,0x10
   14000f0b2:	test   dl,dl
   14000f0b4:	je     0x14000f0d1
   14000f0b6:	test   dh,dh
   14000f0b8:	je     0x14000f0d1
   14000f0ba:	shr    rdx,0x10
   14000f0be:	test   dl,dl
   14000f0c0:	je     0x14000f0d1
   14000f0c2:	test   dh,dh
   14000f0c4:	je     0x14000f0d1
   14000f0c6:	shr    edx,0x10
   14000f0c9:	test   dl,dl
   14000f0cb:	je     0x14000f0d1
   14000f0cd:	test   dh,dh
   14000f0cf:	jne    0x14000f059
   14000f0d1:	xor    rax,rax
   14000f0d4:	ret    
   14000f0d5:	int3   
   14000f0d6:	int3   
   14000f0d7:	int3   
   14000f0d8:	int3   
   14000f0d9:	int3   
   14000f0da:	int3   
   14000f0db:	int3   
   14000f0dc:	mov    WORD PTR [rsp+0x8],cx
   14000f0e1:	push   rbx
   14000f0e2:	sub    rsp,0x20
   14000f0e6:	mov    eax,0xffff
   14000f0eb:	movzx  ebx,dx
   14000f0ee:	cmp    cx,ax
   14000f0f1:	jne    0x14000f0f7
   14000f0f3:	xor    eax,eax
   14000f0f5:	jmp    0x14000f13c
   14000f0f7:	mov    eax,0x100
   14000f0fc:	cmp    cx,ax
   14000f0ff:	jae    0x14000f111
   14000f101:	mov    rax,QWORD PTR [rip+0x6e20]        # 0x140015f28
   14000f108:	movzx  ecx,cx
   14000f10b:	movzx  eax,WORD PTR [rax+rcx*2]
   14000f10f:	jmp    0x14000f137
   14000f111:	mov    ecx,0x1
   14000f116:	lea    r9,[rsp+0x40]
   14000f11b:	lea    rdx,[rsp+0x30]
   14000f120:	mov    r8d,ecx
   14000f123:	call   QWORD PTR [rip+0xffffffffffff214f]        # 0x140001278
   14000f129:	xor    ecx,ecx
   14000f12b:	test   eax,eax
   14000f12d:	je     0x14000f134
   14000f12f:	movzx  ecx,WORD PTR [rsp+0x40]
   14000f134:	movzx  eax,cx
   14000f137:	movzx  ecx,bx
   14000f13a:	and    eax,ecx
   14000f13c:	add    rsp,0x20
   14000f140:	pop    rbx
   14000f141:	ret    
   14000f142:	int3   
   14000f143:	int3   
   14000f144:	int3   
   14000f145:	int3   
   14000f146:	int3   
   14000f147:	int3   
   14000f148:	rex.W jmp QWORD PTR [rip+0xffffffffffff1f89]        # 0x1400010d8
   14000f14f:	int3   
   14000f150:	int3   
   14000f151:	int3   
   14000f152:	int3   
   14000f153:	int3   
   14000f154:	int3   
   14000f155:	int3   
   14000f156:	int3   
   14000f157:	int3   
   14000f158:	mov    QWORD PTR [rsp+0x8],rbx
   14000f15d:	mov    QWORD PTR [rsp+0x10],rbp
   14000f162:	mov    QWORD PTR [rsp+0x18],rsi
   14000f167:	push   rdi
   14000f168:	push   r12
   14000f16a:	push   r13
   14000f16c:	push   r14
   14000f16e:	push   r15
   14000f170:	sub    rsp,0x20
   14000f174:	xor    r13d,r13d
   14000f177:	mov    rsi,r8
   14000f17a:	mov    r12,rdx
   14000f17d:	mov    rbx,rcx
   14000f180:	cmp    rcx,r13
   14000f183:	je     0x14000f237
   14000f189:	cmp    rdx,r13
   14000f18c:	je     0x14000f237
   14000f192:	cmp    r8,r13
   14000f195:	je     0x14000f237
   14000f19b:	mov    ebp,r13d
   14000f19e:	lea    r14d,[r13+0x61]
   14000f1a2:	lea    r15d,[r13+0x41]
   14000f1a6:	movzx  eax,WORD PTR [rbx]
   14000f1a9:	sub    ax,r14w
   14000f1ad:	cmp    ax,0x19
   14000f1b1:	ja     0x14000f1bb
   14000f1b3:	movzx  eax,WORD PTR [rbx]
   14000f1b6:	sub    eax,r14d
   14000f1b9:	jmp    0x14000f1ce
   14000f1bb:	movzx  eax,WORD PTR [rbx]
   14000f1be:	sub    ax,r15w
   14000f1c2:	cmp    ax,0x19
   14000f1c6:	ja     0x14000f202
   14000f1c8:	movzx  eax,WORD PTR [rbx]
   14000f1cb:	sub    eax,r15d
   14000f1ce:	cmp    eax,0x1a
   14000f1d1:	jae    0x14000f202
   14000f1d3:	lea    rdi,[rip+0xffffffffffff4976]        # 0x140003b50
   14000f1da:	mov    rdi,QWORD PTR [rdi+rax*8]
   14000f1de:	cmp    rdi,r13
   14000f1e1:	je     0x14000f202
   14000f1e3:	jmp    0x14000f1f9
   14000f1e5:	mov    rdx,rax
   14000f1e8:	mov    rcx,rbx
   14000f1eb:	call   0x14001084c
   14000f1f0:	cmp    eax,r13d
   14000f1f3:	je     0x14000f20e
   14000f1f5:	add    rdi,0x10
   14000f1f9:	mov    rax,QWORD PTR [rdi]
   14000f1fc:	cmp    WORD PTR [rax],r13w
   14000f200:	jne    0x14000f1e5
   14000f202:	inc    ebp
   14000f204:	mov    rbx,r12
   14000f207:	cmp    ebp,0x2
   14000f20a:	jge    0x14000f237
   14000f20c:	jmp    0x14000f1a6
   14000f20e:	mov    rdx,QWORD PTR [rdi+0x8]
   14000f212:	or     rcx,0xffffffffffffffff
   14000f216:	xor    eax,eax
   14000f218:	mov    rdi,rdx
   14000f21b:	repnz scas ax,WORD PTR es:[rdi]
   14000f21e:	not    rcx
   14000f221:	dec    rcx
   14000f224:	cmp    rcx,0x55
   14000f228:	jae    0x14000f237
   14000f22a:	lea    r8,[rcx+rcx*1+0x2]
   14000f22f:	mov    rcx,rsi
   14000f232:	call   0x14000cb80
   14000f237:	mov    rbx,QWORD PTR [rsp+0x50]
   14000f23c:	mov    rbp,QWORD PTR [rsp+0x58]
   14000f241:	mov    rsi,QWORD PTR [rsp+0x60]
   14000f246:	add    rsp,0x20
   14000f24a:	pop    r15
   14000f24c:	pop    r14
   14000f24e:	pop    r13
   14000f250:	pop    r12
   14000f252:	pop    rdi
   14000f253:	ret    
   14000f254:	int3   
   14000f255:	int3   
   14000f256:	int3   
   14000f257:	int3   
   14000f258:	int3   
   14000f259:	int3   
   14000f25a:	int3   
   14000f25b:	int3   
   14000f25c:	mov    r11,rsp
   14000f25f:	mov    QWORD PTR [r11+0x8],rbx
   14000f263:	mov    QWORD PTR [r11+0x10],rbp
   14000f267:	mov    QWORD PTR [r11+0x18],rsi
   14000f26b:	push   rdi
   14000f26c:	sub    rsp,0x50
   14000f270:	mov    rax,QWORD PTR [rip+0x5df9]        # 0x140015070
   14000f277:	xor    rax,rsp
   14000f27a:	mov    QWORD PTR [rsp+0x48],rax
   14000f27f:	xor    esi,esi
   14000f281:	cmp    si,WORD PTR [rip+0x826c]        # 0x1400174f4
   14000f288:	jne    0x14000f33c
   14000f28e:	lea    rax,[r11-0x20]
   14000f292:	lea    r9d,[rsi+0x1]
   14000f296:	lea    rdx,[rip+0xffffffffffff4983]        # 0x140003c20
   14000f29d:	xor    r8d,r8d
   14000f2a0:	mov    rcx,0xffffffff80000002
   14000f2a7:	mov    DWORD PTR [rsp+0x30],0x6
   14000f2af:	mov    QWORD PTR [r11-0x38],rax
   14000f2b3:	call   QWORD PTR [rip+0xffffffffffff1d47]        # 0x140001000
   14000f2b9:	cmp    eax,esi
   14000f2bb:	jne    0x14000f33c
   14000f2bd:	mov    rcx,QWORD PTR [rsp+0x38]
   14000f2c2:	lea    rax,[rsp+0x30]
   14000f2c7:	lea    rdx,[rip+0xffffffffffff4a0a]        # 0x140003cd8
   14000f2ce:	mov    QWORD PTR [rsp+0x28],rax
   14000f2d3:	lea    rax,[rsp+0x40]
   14000f2d8:	xor    r9d,r9d
   14000f2db:	xor    r8d,r8d
   14000f2de:	mov    QWORD PTR [rsp+0x20],rax
   14000f2e3:	call   QWORD PTR [rip+0xffffffffffff1d27]        # 0x140001010
   14000f2e9:	mov    rcx,QWORD PTR [rsp+0x38]
   14000f2ee:	mov    ebx,eax
   14000f2f0:	call   QWORD PTR [rip+0xffffffffffff1d12]        # 0x140001008
   14000f2f6:	cmp    ebx,esi
   14000f2f8:	jne    0x14000f33c
   14000f2fa:	lea    rbp,[rip+0xffffffffffff45bf]        # 0x1400038c0
   14000f301:	mov    ebx,esi
   14000f303:	mov    rdi,rbp
   14000f306:	mov    rdx,QWORD PTR [rdi]
   14000f309:	lea    rcx,[rsp+0x40]
   14000f30e:	mov    r8d,0x3
   14000f314:	call   0x1400106a4
   14000f319:	cmp    eax,esi
   14000f31b:	je     0x14000f32a
   14000f31d:	inc    ebx
   14000f31f:	add    rdi,0x10
   14000f323:	cmp    ebx,0x1c
   14000f326:	jb     0x14000f306
   14000f328:	jmp    0x14000f33c
   14000f32a:	movsxd rax,ebx
   14000f32d:	add    rax,rax
   14000f330:	movzx  eax,WORD PTR [rbp+rax*8+0x8]
   14000f335:	mov    WORD PTR [rip+0x81b8],ax        # 0x1400174f4
   14000f33c:	mov    ax,WORD PTR [rip+0x81b1]        # 0x1400174f4
   14000f343:	mov    rcx,QWORD PTR [rsp+0x48]
   14000f348:	xor    rcx,rsp
   14000f34b:	call   0x140009dd0
   14000f350:	mov    rbx,QWORD PTR [rsp+0x60]
   14000f355:	mov    rbp,QWORD PTR [rsp+0x68]
   14000f35a:	mov    rsi,QWORD PTR [rsp+0x70]
   14000f35f:	add    rsp,0x50
   14000f363:	pop    rdi
   14000f364:	ret    
   14000f365:	int3   
   14000f366:	int3   
   14000f367:	int3   
   14000f368:	int3   
   14000f369:	int3   
   14000f36a:	int3   
   14000f36b:	int3   
   14000f36c:	mov    QWORD PTR [rsp+0x8],rbx
   14000f371:	push   rdi
   14000f372:	sub    rsp,0x70
   14000f376:	mov    rax,QWORD PTR [rip+0x5cf3]        # 0x140015070
   14000f37d:	xor    rax,rsp
   14000f380:	mov    QWORD PTR [rsp+0x60],rax
   14000f385:	mov    r9d,0x20
   14000f38b:	mov    edi,0x404
   14000f390:	lea    r8,[rsp+0x20]
   14000f395:	lea    edx,[r9-0x18]
   14000f399:	mov    ecx,edi
   14000f39b:	mov    ebx,0xc04
   14000f3a0:	call   QWORD PTR [rip+0xffffffffffff1e62]        # 0x140001208
   14000f3a6:	test   eax,eax
   14000f3a8:	je     0x14000f3c8
   14000f3aa:	lea    rdx,[rip+0xffffffffffff49a3]        # 0x140003d54
   14000f3b1:	lea    rcx,[rsp+0x20]
   14000f3b6:	mov    r8d,0x3
   14000f3bc:	call   0x140010554
   14000f3c1:	test   eax,eax
   14000f3c3:	je     0x14000f3c8
   14000f3c5:	mov    bx,di
   14000f3c8:	mov    ax,bx
   14000f3cb:	mov    rcx,QWORD PTR [rsp+0x60]
   14000f3d0:	xor    rcx,rsp
   14000f3d3:	call   0x140009dd0
   14000f3d8:	mov    rbx,QWORD PTR [rsp+0x80]
   14000f3e0:	add    rsp,0x70
   14000f3e4:	pop    rdi
   14000f3e5:	ret    
   14000f3e6:	int3   
   14000f3e7:	int3   
   14000f3e8:	int3   
   14000f3e9:	int3   
   14000f3ea:	int3   
   14000f3eb:	int3   
   14000f3ec:	sub    rsp,0x158
   14000f3f3:	mov    rax,QWORD PTR [rip+0x5c76]        # 0x140015070
   14000f3fa:	xor    rax,rsp
   14000f3fd:	mov    QWORD PTR [rsp+0x140],rax
   14000f405:	mov    eax,DWORD PTR [rip+0x80e5]        # 0x1400174f0
   14000f40b:	test   eax,eax
   14000f40d:	jne    0x14000f4f1
   14000f413:	lea    rcx,[rsp+0x20]
   14000f418:	xor    edx,edx
   14000f41a:	mov    r8d,0x11c
   14000f420:	call   0x14000db90
   14000f425:	lea    rcx,[rsp+0x20]
   14000f42a:	mov    DWORD PTR [rsp+0x20],0x11c
   14000f432:	call   QWORD PTR [rip+0xffffffffffff1c40]        # 0x140001078
   14000f438:	test   eax,eax
   14000f43a:	jne    0x14000f44f
   14000f43c:	lea    rcx,[rsp+0x20]
   14000f441:	mov    DWORD PTR [rsp+0x20],0x114
   14000f449:	call   QWORD PTR [rip+0xffffffffffff1c29]        # 0x140001078
   14000f44f:	mov    ecx,DWORD PTR [rsp+0x30]
   14000f453:	mov    edx,DWORD PTR [rsp+0x24]
   14000f457:	xor    eax,eax
   14000f459:	lea    r8d,[rax+0x1]
   14000f45d:	mov    DWORD PTR [rip+0x808d],eax        # 0x1400174f0
   14000f463:	sub    ecx,r8d
   14000f466:	je     0x14000f4d1
   14000f468:	cmp    ecx,r8d
   14000f46b:	jne    0x14000f4f1
   14000f471:	cmp    edx,0x5
   14000f474:	jne    0x14000f4bf
   14000f476:	mov    ecx,DWORD PTR [rsp+0x28]
   14000f47a:	test   ecx,ecx
   14000f47c:	je     0x14000f4b8
   14000f47e:	sub    ecx,r8d
   14000f481:	je     0x14000f4a3
   14000f483:	cmp    ecx,r8d
   14000f486:	je     0x14000f48d
   14000f488:	lea    eax,[rdx+0xf]
   14000f48b:	jmp    0x14000f4eb
   14000f48d:	cmp    WORD PTR [rsp+0x134],r8w
   14000f496:	mov    ecx,0x10
   14000f49b:	cmovae eax,ecx
   14000f49e:	or     eax,0x4
   14000f4a1:	jmp    0x14000f4eb
   14000f4a3:	mov    edx,0x8
   14000f4a8:	lea    ecx,[rdx-0x6]
   14000f4ab:	cmp    WORD PTR [rsp+0x134],cx
   14000f4b3:	cmovae eax,edx
   14000f4b6:	jmp    0x14000f49e
   14000f4b8:	mov    eax,0x4
   14000f4bd:	jmp    0x14000f4eb
   14000f4bf:	cmp    edx,0x4
   14000f4c2:	ja     0x14000f509
   14000f4c4:	mov    ecx,0x2
   14000f4c9:	mov    eax,ecx
   14000f4cb:	mov    DWORD PTR [rip+0x801f],ecx        # 0x1400174f0
   14000f4d1:	cmp    edx,0x4
   14000f4d4:	jne    0x14000f4f1
   14000f4d6:	mov    ecx,DWORD PTR [rsp+0x28]
   14000f4da:	test   ecx,ecx
   14000f4dc:	je     0x14000f4e8
   14000f4de:	cmp    ecx,0xa
   14000f4e1:	je     0x14000f4e8
   14000f4e3:	cmp    ecx,0x5a
   14000f4e6:	jne    0x14000f4f1
   14000f4e8:	mov    eax,r8d
   14000f4eb:	mov    DWORD PTR [rip+0x7fff],eax        # 0x1400174f0
   14000f4f1:	mov    rcx,QWORD PTR [rsp+0x140]
   14000f4f9:	xor    rcx,rsp
   14000f4fc:	call   0x140009dd0
   14000f501:	add    rsp,0x158
   14000f508:	ret    
   14000f509:	mov    eax,0x20
   14000f50e:	jmp    0x14000f4eb
   14000f510:	int3   
   14000f511:	int3   
   14000f512:	int3   
   14000f513:	int3   
   14000f514:	int3   
   14000f515:	int3   
   14000f516:	int3   
   14000f517:	int3   
   14000f518:	mov    QWORD PTR [rsp+0x8],rbx
   14000f51d:	mov    QWORD PTR [rsp+0x10],rsi
   14000f522:	push   rdi
   14000f523:	sub    rsp,0x40
   14000f527:	xor    ebx,ebx
   14000f529:	cmp    rcx,rbx
   14000f52c:	jne    0x14000f535
   14000f52e:	xor    eax,eax
   14000f530:	jmp    0x14000f5dc
   14000f535:	cmp    edx,ebx
   14000f537:	je     0x14000f5cb
   14000f53d:	xor    r9d,r9d
   14000f540:	mov    QWORD PTR [rsp+0x30],rbx
   14000f545:	mov    edx,0x80000000
   14000f54a:	lea    r8d,[r9+0x5]
   14000f54e:	mov    DWORD PTR [rsp+0x28],ebx
   14000f552:	mov    DWORD PTR [rsp+0x20],0x3
   14000f55a:	call   QWORD PTR [rip+0xffffffffffff1b20]        # 0x140001080
   14000f560:	mov    rdi,rax
   14000f563:	cmp    rax,0xffffffffffffffff
   14000f567:	je     0x14000f52e
   14000f569:	xor    r9d,r9d
   14000f56c:	xor    edx,edx
   14000f56e:	mov    rcx,rax
   14000f571:	lea    r8d,[r9+0x8]
   14000f575:	mov    QWORD PTR [rsp+0x28],rbx
   14000f57a:	mov    DWORD PTR [rsp+0x20],ebx
   14000f57e:	call   QWORD PTR [rip+0xffffffffffff1b0c]        # 0x140001090
   14000f584:	mov    rcx,rdi
   14000f587:	mov    rsi,rax
   14000f58a:	call   QWORD PTR [rip+0xffffffffffff1b10]        # 0x1400010a0
   14000f590:	cmp    rsi,rbx
   14000f593:	je     0x14000f52e
   14000f595:	xor    r9d,r9d
   14000f598:	xor    r8d,r8d
   14000f59b:	mov    rcx,rsi
   14000f59e:	lea    edx,[r9+0x1]
   14000f5a2:	mov    QWORD PTR [rsp+0x20],rbx
   14000f5a7:	call   QWORD PTR [rip+0xffffffffffff1aeb]        # 0x140001098
   14000f5ad:	mov    rcx,rsi
   14000f5b0:	mov    rdi,rax
   14000f5b3:	call   QWORD PTR [rip+0xffffffffffff1ae7]        # 0x1400010a0
   14000f5b9:	cmp    rdi,rbx
   14000f5bc:	je     0x14000f52e
   14000f5c2:	or     rdi,0x1
   14000f5c6:	mov    rax,rdi
   14000f5c9:	jmp    0x14000f5dc
   14000f5cb:	cmp    r8d,ebx
   14000f5ce:	setne  bl
   14000f5d1:	xor    edx,edx
   14000f5d3:	mov    r8d,ebx
   14000f5d6:	call   QWORD PTR [rip+0xffffffffffff1aac]        # 0x140001088
   14000f5dc:	mov    rbx,QWORD PTR [rsp+0x50]
   14000f5e1:	mov    rsi,QWORD PTR [rsp+0x58]
   14000f5e6:	add    rsp,0x40
   14000f5ea:	pop    rdi
   14000f5eb:	ret    
   14000f5ec:	int3   
   14000f5ed:	int3   
   14000f5ee:	int3   
   14000f5ef:	int3   
   14000f5f0:	int3   
   14000f5f1:	int3   
   14000f5f2:	int3   
   14000f5f3:	int3   
   14000f5f4:	mov    rax,rsp
   14000f5f7:	mov    QWORD PTR [rax+0x8],rbx
   14000f5fb:	mov    QWORD PTR [rax+0x10],rbp
   14000f5ff:	mov    QWORD PTR [rax+0x18],rsi
   14000f603:	mov    QWORD PTR [rax+0x20],rdi
   14000f607:	push   r12
   14000f609:	sub    rsp,0x20
   14000f60d:	mov    rax,r9
   14000f610:	mov    r9,QWORD PTR [rsp+0x50]
   14000f615:	lea    rbx,[rdx-0x1]
   14000f619:	mov    rdi,r8
   14000f61c:	xor    r12d,r12d
   14000f61f:	mov    rdx,rbx
   14000f622:	mov    r8,rax
   14000f625:	mov    rbp,rcx
   14000f628:	mov    esi,r12d
   14000f62b:	call   0x140010538
   14000f630:	cmp    eax,r12d
   14000f633:	jl     0x14000f643
   14000f635:	cdqe   
   14000f637:	cmp    rax,rbx
   14000f63a:	ja     0x14000f643
   14000f63c:	je     0x14000f648
   14000f63e:	mov    rbx,rax
   14000f641:	jmp    0x14000f64e
   14000f643:	mov    esi,0x8007007a
   14000f648:	mov    WORD PTR [rbp+rbx*2+0x0],r12w
   14000f64e:	cmp    rdi,r12
   14000f651:	je     0x14000f656
   14000f653:	mov    QWORD PTR [rdi],rbx
   14000f656:	mov    rbx,QWORD PTR [rsp+0x30]
   14000f65b:	mov    rbp,QWORD PTR [rsp+0x38]
   14000f660:	mov    rdi,QWORD PTR [rsp+0x48]
   14000f665:	mov    eax,esi
   14000f667:	mov    rsi,QWORD PTR [rsp+0x40]
   14000f66c:	add    rsp,0x20
   14000f670:	pop    r12
   14000f672:	ret    
   14000f673:	int3   
   14000f674:	int3   
   14000f675:	int3   
   14000f676:	int3   
   14000f677:	int3   
   14000f678:	int3   
   14000f679:	int3   
   14000f67a:	int3   
   14000f67b:	int3   
   14000f67c:	mov    QWORD PTR [rsp+0x18],r8
   14000f681:	mov    QWORD PTR [rsp+0x20],r9
   14000f686:	sub    rsp,0x38
   14000f68a:	xor    eax,eax
   14000f68c:	test   rdx,rdx
   14000f68f:	je     0x14000f69a
   14000f691:	cmp    rdx,0x7fffffff
   14000f698:	jbe    0x14000f69f
   14000f69a:	mov    eax,0x80070057
   14000f69f:	test   eax,eax
   14000f6a1:	js     0x14000f6b8
   14000f6a3:	lea    rax,[rsp+0x58]
   14000f6a8:	mov    r9,r8
   14000f6ab:	xor    r8d,r8d
   14000f6ae:	mov    QWORD PTR [rsp+0x20],rax
   14000f6b3:	call   0x14000f5f4
   14000f6b8:	add    rsp,0x38
   14000f6bc:	ret    
   14000f6bd:	int3   
   14000f6be:	int3   
   14000f6bf:	int3   
   14000f6c0:	int3   
   14000f6c1:	int3   
   14000f6c2:	int3   
   14000f6c3:	int3   
   14000f6c4:	mov    QWORD PTR [rsp+0x8],rbx
   14000f6c9:	mov    QWORD PTR [rsp+0x10],rbp
   14000f6ce:	mov    QWORD PTR [rsp+0x18],rsi
   14000f6d3:	push   rdi
   14000f6d4:	sub    rsp,0x20
   14000f6d8:	xor    ebp,ebp
   14000f6da:	mov    rsi,r9
   14000f6dd:	mov    rbx,r8
   14000f6e0:	mov    rdi,rdx
   14000f6e3:	cmp    rdx,rbp
   14000f6e6:	je     0x14000f72e
   14000f6e8:	cmp    rbx,rbp
   14000f6eb:	je     0x14000f72e
   14000f6ed:	lea    r9d,[rbp+0x2]
   14000f6f1:	lea    r8d,[rbp+0x55]
   14000f6f5:	call   0x140010328
   14000f6fa:	cmp    eax,ebp
   14000f6fc:	je     0x14000f72e
   14000f6fe:	lea    r9d,[rbp+0x2]
   14000f702:	lea    r8d,[rbp+0x55]
   14000f706:	mov    rdx,rbx
   14000f709:	mov    rcx,rdi
   14000f70c:	call   0x1400101a0
   14000f711:	cmp    rsi,rbp
   14000f714:	je     0x14000f727
   14000f716:	mov    r8,rsi
   14000f719:	mov    rdx,rbx
   14000f71c:	mov    rcx,rdi
   14000f71f:	mov    WORD PTR [rsi],bp
   14000f722:	call   0x14000f158
   14000f727:	mov    eax,0x1
   14000f72c:	jmp    0x14000f730
   14000f72e:	xor    eax,eax
   14000f730:	mov    rbx,QWORD PTR [rsp+0x30]
   14000f735:	mov    rbp,QWORD PTR [rsp+0x38]
   14000f73a:	mov    rsi,QWORD PTR [rsp+0x40]
   14000f73f:	add    rsp,0x20
   14000f743:	pop    rdi
   14000f744:	ret    
   14000f745:	int3   
   14000f746:	int3   
   14000f747:	int3   
   14000f748:	int3   
   14000f749:	int3   
   14000f74a:	int3   
   14000f74b:	int3   
   14000f74c:	rex push rbx
   14000f74e:	sub    rsp,0x20
   14000f752:	xor    r9d,r9d
   14000f755:	lea    rdx,[rip+0xffffffffffff458c]        # 0x140003ce8
   14000f75c:	mov    rbx,rcx
   14000f75f:	lea    r8d,[r9+0x1]
   14000f763:	call   QWORD PTR [rip+0xffffffffffff193f]        # 0x1400010a8
   14000f769:	test   rax,rax
   14000f76c:	je     0x14000f77a
   14000f76e:	mov    rdx,rax
   14000f771:	mov    rcx,rbx
   14000f774:	call   QWORD PTR [rip+0xffffffffffff1b0e]        # 0x140001288
   14000f77a:	add    rsp,0x20
   14000f77e:	pop    rbx
   14000f77f:	ret    
   14000f780:	int3   
   14000f781:	int3   
   14000f782:	int3   
   14000f783:	int3   
   14000f784:	int3   
   14000f785:	int3   
   14000f786:	int3   
   14000f787:	int3   
   14000f788:	mov    QWORD PTR [rsp+0x8],rbx
   14000f78d:	mov    QWORD PTR [rsp+0x10],rsi
   14000f792:	push   rdi
   14000f793:	sub    rsp,0x20
   14000f797:	xor    ebx,ebx
   14000f799:	mov    rdi,rdx
   14000f79c:	cmp    rcx,rbx
   14000f79f:	je     0x14000f802
   14000f7a1:	cmp    rdx,rbx
   14000f7a4:	je     0x14000f802
   14000f7a6:	call   0x14000f74c
   14000f7ab:	mov    rcx,rdi
   14000f7ae:	mov    rsi,rax
   14000f7b1:	call   0x14000f74c
   14000f7b6:	cmp    rsi,rbx
   14000f7b9:	je     0x14000f7f7
   14000f7bb:	cmp    rax,rbx
   14000f7be:	je     0x14000f7f7
   14000f7c0:	mov    ecx,0xfecdfecd
   14000f7c5:	cmp    DWORD PTR [rsi],ecx
   14000f7c7:	jne    0x14000f7f3
   14000f7c9:	cmp    DWORD PTR [rax],ecx
   14000f7cb:	jne    0x14000f7f3
   14000f7cd:	mov    rdx,QWORD PTR [rsi+0x1c]
   14000f7d1:	cmp    rdx,QWORD PTR [rax+0x1c]
   14000f7d5:	jne    0x14000f7e5
   14000f7d7:	mov    rdx,QWORD PTR [rsi+0x24]
   14000f7db:	cmp    rdx,QWORD PTR [rax+0x24]
   14000f7df:	jne    0x14000f7e5
   14000f7e1:	mov    eax,ebx
   14000f7e3:	jmp    0x14000f7ea
   14000f7e5:	sbb    eax,eax
   14000f7e7:	sbb    eax,0xffffffff
   14000f7ea:	cmp    eax,ebx
   14000f7ec:	jne    0x14000f7f3
   14000f7ee:	mov    ebx,0x1
   14000f7f3:	mov    eax,ebx
   14000f7f5:	jmp    0x14000f804
   14000f7f7:	mov    ecx,0xd
   14000f7fc:	call   QWORD PTR [rip+0xffffffffffff1976]        # 0x140001178
   14000f802:	xor    eax,eax
   14000f804:	mov    rbx,QWORD PTR [rsp+0x30]
   14000f809:	mov    rsi,QWORD PTR [rsp+0x38]
   14000f80e:	add    rsp,0x20
   14000f812:	pop    rdi
   14000f813:	ret    
   14000f814:	int3   
   14000f815:	int3   
   14000f816:	int3   
   14000f817:	int3   
   14000f818:	int3   
   14000f819:	int3   
   14000f81a:	int3   
   14000f81b:	int3   
   14000f81c:	mov    QWORD PTR [rsp+0x10],rdx
   14000f821:	mov    QWORD PTR [rsp+0x18],r8
   14000f826:	mov    QWORD PTR [rsp+0x20],r9
   14000f82b:	push   rbx
   14000f82c:	push   rdi
   14000f82d:	sub    rsp,0x258
   14000f834:	mov    rax,QWORD PTR [rip+0x5835]        # 0x140015070
   14000f83b:	xor    rax,rsp
   14000f83e:	mov    QWORD PTR [rsp+0x240],rax
   14000f846:	mov    rdi,rcx
   14000f849:	test   rcx,rcx
   14000f84c:	jne    0x14000f852
   14000f84e:	xor    eax,eax
   14000f850:	jmp    0x14000f8cd
   14000f852:	lea    rax,[rsp+0x280]
   14000f85a:	mov    r9,rdx
   14000f85d:	lea    rcx,[rsp+0x30]
   14000f862:	xor    r8d,r8d
   14000f865:	mov    edx,0x104
   14000f86a:	xor    ebx,ebx
   14000f86c:	mov    QWORD PTR [rsp+0x20],rax
   14000f871:	call   0x14000f5f4
   14000f876:	test   eax,eax
   14000f878:	js     0x14000f8ca
   14000f87a:	call   0x14000f3ec
   14000f87f:	mov    ebx,eax
   14000f881:	and    ebx,0x26
   14000f884:	call   0x14000f3ec
   14000f889:	lea    rcx,[rsp+0x30]
   14000f88e:	and    eax,0x38
   14000f891:	mov    r8d,ebx
   14000f894:	mov    edx,eax
   14000f896:	call   0x14000f518
   14000f89b:	mov    rbx,rax
   14000f89e:	test   rax,rax
   14000f8a1:	je     0x14000f8ca
   14000f8a3:	mov    rdx,rax
   14000f8a6:	mov    rcx,rdi
   14000f8a9:	call   0x14000f788
   14000f8ae:	test   eax,eax
   14000f8b0:	jne    0x14000f8ca
   14000f8b2:	mov    rcx,rbx
   14000f8b5:	test   bl,0x1
   14000f8b8:	je     0x14000f8c2
   14000f8ba:	call   QWORD PTR [rip+0xffffffffffff19c0]        # 0x140001280
   14000f8c0:	jmp    0x14000f8c8
   14000f8c2:	call   QWORD PTR [rip+0xffffffffffff1810]        # 0x1400010d8
   14000f8c8:	xor    ebx,ebx
   14000f8ca:	mov    rax,rbx
   14000f8cd:	mov    rcx,QWORD PTR [rsp+0x240]
   14000f8d5:	xor    rcx,rsp
   14000f8d8:	call   0x140009dd0
   14000f8dd:	add    rsp,0x258
   14000f8e4:	pop    rdi
   14000f8e5:	pop    rbx
   14000f8e6:	ret    
   14000f8e7:	int3   
   14000f8e8:	int3   
   14000f8e9:	int3   
   14000f8ea:	int3   
   14000f8eb:	int3   
   14000f8ec:	int3   
   14000f8ed:	int3   
   14000f8ee:	int3   
   14000f8ef:	int3   
   14000f8f0:	sub    rsp,0x38
   14000f8f4:	test   r9,r9
   14000f8f7:	je     0x14000f951
   14000f8f9:	test   rcx,rcx
   14000f8fc:	je     0x14000f951
   14000f8fe:	test   rdx,rdx
   14000f901:	je     0x14000f932
   14000f903:	test   r8,r8
   14000f906:	je     0x14000f921
   14000f908:	mov    QWORD PTR [rsp+0x20],r9
   14000f90d:	mov    r9,r8
   14000f910:	mov    r8,rdx
   14000f913:	lea    rdx,[rip+0xffffffffffff43d6]        # 0x140003cf0
   14000f91a:	call   0x14000f81c
   14000f91f:	jmp    0x14000f953
   14000f921:	mov    r8,rdx
   14000f924:	lea    rdx,[rip+0xffffffffffff43e5]        # 0x140003d10
   14000f92b:	call   0x14000f81c
   14000f930:	jmp    0x14000f953
   14000f932:	test   r8,r8
   14000f935:	je     0x14000f940
   14000f937:	lea    rdx,[rip+0xffffffffffff43ea]        # 0x140003d28
   14000f93e:	jmp    0x14000f92b
   14000f940:	lea    rdx,[rip+0xffffffffffff43f9]        # 0x140003d40
   14000f947:	mov    r8,r9
   14000f94a:	call   0x14000f81c
   14000f94f:	jmp    0x14000f953
   14000f951:	xor    eax,eax
   14000f953:	add    rsp,0x38
   14000f957:	ret    
   14000f958:	int3   
   14000f959:	int3   
   14000f95a:	int3   
   14000f95b:	int3   
   14000f95c:	int3   
   14000f95d:	int3   
   14000f95e:	int3   
   14000f95f:	int3   
   14000f960:	mov    QWORD PTR [rsp+0x10],rbx
   14000f965:	push   rbp
   14000f966:	push   rsi
   14000f967:	push   rdi
   14000f968:	push   r12
   14000f96a:	push   r13
   14000f96c:	push   r14
   14000f96e:	push   r15
   14000f970:	sub    rsp,0x480
   14000f977:	mov    rax,QWORD PTR [rip+0x56f2]        # 0x140015070
   14000f97e:	xor    rax,rsp
   14000f981:	mov    QWORD PTR [rsp+0x470],rax
   14000f989:	xor    ebx,ebx
   14000f98b:	movzx  r14d,r8w
   14000f98f:	mov    WORD PTR [rsp+0x38],r8w
   14000f995:	mov    r13d,edx
   14000f998:	mov    DWORD PTR [rsp+0x3c],edx
   14000f99c:	mov    r15,rcx
   14000f99f:	mov    QWORD PTR [rsp+0x40],rcx
   14000f9a4:	mov    QWORD PTR [rsp+0x30],rbx
   14000f9a9:	cmp    rcx,rbx
   14000f9ac:	je     0x1400100c4
   14000f9b2:	test   edx,0xffffffe3
   14000f9b8:	jne    0x1400100c4
   14000f9be:	cmp    r8w,bx
   14000f9c2:	jne    0x14000f9cd
   14000f9c4:	test   dl,0x10
   14000f9c7:	jne    0x1400100c4
   14000f9cd:	call   0x14000f3ec
   14000f9d2:	xor    edx,edx
   14000f9d4:	mov    rcx,r15
   14000f9d7:	movzx  r8d,al
   14000f9db:	mov    DWORD PTR [rip+0x7b17],eax        # 0x1400174f8
   14000f9e1:	mov    rdi,rbx
   14000f9e4:	and    r8d,0x20
   14000f9e8:	or     r8d,0x2
   14000f9ec:	call   QWORD PTR [rip+0xffffffffffff1696]        # 0x140001088
   14000f9f2:	mov    rsi,rax
   14000f9f5:	cmp    rax,rbx
   14000f9f8:	je     0x1400100c4
   14000f9fe:	test   BYTE PTR [rip+0x7af3],0x20        # 0x1400174f8
   14000fa05:	jne    0x1400100c6
   14000fa0b:	lea    rax,[rsp+0x30]
   14000fa10:	mov    r9d,0x104
   14000fa16:	xor    r8d,r8d
   14000fa19:	mov    QWORD PTR [rsp+0x28],rax
   14000fa1e:	lea    rax,[rsp+0x260]
   14000fa26:	mov    rdx,r15
   14000fa29:	xor    ecx,ecx
   14000fa2b:	mov    QWORD PTR [rsp+0x20],rax
   14000fa30:	call   QWORD PTR [rip+0xffffffffffff185a]        # 0x140001290
   14000fa36:	cmp    eax,ebx
   14000fa38:	je     0x1400100bb
   14000fa3e:	mov    rax,QWORD PTR [rsp+0x30]
   14000fa43:	cmp    rax,rbx
   14000fa46:	jne    0x14000fa5a
   14000fa48:	lea    rax,[rsp+0x260]
   14000fa50:	mov    rbp,rbx
   14000fa53:	mov    QWORD PTR [rsp+0x30],rax
   14000fa58:	jmp    0x14000fa66
   14000fa5a:	lea    rbp,[rsp+0x260]
   14000fa62:	mov    WORD PTR [rax-0x2],bx
   14000fa66:	xor    r9d,r9d
   14000fa69:	lea    rdx,[rip+0xffffffffffff4278]        # 0x140003ce8
   14000fa70:	mov    rcx,rsi
   14000fa73:	lea    r8d,[r9+0x1]
   14000fa77:	call   QWORD PTR [rip+0xffffffffffff162b]        # 0x1400010a8
   14000fa7d:	cmp    rax,rbx
   14000fa80:	je     0x140010020
   14000fa86:	cmp    r14w,bx
   14000fa8a:	jne    0x14000ff9c
   14000fa90:	mov    eax,DWORD PTR [rip+0x7a62]        # 0x1400174f8
   14000fa96:	test   al,0x4
   14000fa98:	je     0x14000fdc4
   14000fa9e:	call   QWORD PTR [rip+0xffffffffffff160c]        # 0x1400010b0
   14000faa4:	mov    r12w,ax
   14000faa8:	mov    eax,0x404
   14000faad:	cmp    r12w,ax
   14000fab1:	jne    0x14000fabc
   14000fab3:	call   0x14000f36c
   14000fab8:	mov    r12w,ax
   14000fabc:	and    r13d,0x8
   14000fac0:	lea    r14,[rip+0xffffffffffff4299]        # 0x140003d60
   14000fac7:	mov    r15d,0x55
   14000facd:	cmp    r13d,ebx
   14000fad0:	je     0x14000fb89
   14000fad6:	lea    r9,[rsp+0x1b0]
   14000fade:	lea    r8,[rsp+0x100]
   14000fae6:	lea    rdx,[rsp+0x50]
   14000faeb:	movzx  ecx,r12w
   14000faef:	call   0x14000f6c4
   14000faf4:	cmp    eax,ebx
   14000faf6:	je     0x14000ffff
   14000fafc:	mov    r9,QWORD PTR [rsp+0x30]
   14000fb01:	lea    r8,[rsp+0x50]
   14000fb06:	mov    rdx,rbp
   14000fb09:	mov    rcx,rsi
   14000fb0c:	call   0x14000f8f0
   14000fb11:	mov    rdi,rax
   14000fb14:	cmp    rax,rbx
   14000fb17:	jne    0x140010004
   14000fb1d:	mov    r9,QWORD PTR [rsp+0x30]
   14000fb22:	lea    r8,[rsp+0x100]
   14000fb2a:	mov    rdx,rbp
   14000fb2d:	mov    rcx,rsi
   14000fb30:	call   0x14000f8f0
   14000fb35:	mov    rdi,rax
   14000fb38:	cmp    rax,rbx
   14000fb3b:	jne    0x140010004
   14000fb41:	cmp    WORD PTR [rsp+0x1b0],bx
   14000fb49:	je     0x14000fb6f
   14000fb4b:	mov    r9,QWORD PTR [rsp+0x30]
   14000fb50:	lea    r8,[rsp+0x1b0]
   14000fb58:	mov    rdx,rbp
   14000fb5b:	mov    rcx,rsi
   14000fb5e:	call   0x14000f8f0
   14000fb63:	mov    rdi,rax
   14000fb66:	cmp    rax,rbx
   14000fb69:	jne    0x140010004
   14000fb6f:	mov    eax,0xc04
   14000fb74:	cmp    r12w,ax
   14000fb78:	jne    0x14000fd00
   14000fb7e:	mov    r12d,0x404
   14000fb84:	jmp    0x14000facd
   14000fb89:	lea    rcx,[rsp+0x50]
   14000fb8e:	movzx  r9d,r12w
   14000fb92:	mov    r8,r14
   14000fb95:	mov    rdx,r15
   14000fb98:	call   0x14000f67c
   14000fb9d:	mov    r9,QWORD PTR [rsp+0x30]
   14000fba2:	lea    r8,[rsp+0x50]
   14000fba7:	mov    rdx,rbp
   14000fbaa:	mov    rcx,rsi
   14000fbad:	call   0x14000f8f0
   14000fbb2:	mov    rdi,rax
   14000fbb5:	cmp    rax,rbx
   14000fbb8:	jne    0x140010004
   14000fbbe:	lea    r8,[rsp+0x100]
   14000fbc6:	lea    rdx,[rsp+0x50]
   14000fbcb:	xor    r9d,r9d
   14000fbce:	movzx  ecx,r12w
   14000fbd2:	call   0x14000f6c4
   14000fbd7:	cmp    eax,ebx
   14000fbd9:	je     0x14000fc27
   14000fbdb:	lea    rcx,[rsp+0x100]
   14000fbe3:	mov    edx,0x2
   14000fbe8:	call   0x14001029c
   14000fbed:	cmp    ax,bx
   14000fbf0:	je     0x14000fc27
   14000fbf2:	lea    rcx,[rsp+0x50]
   14000fbf7:	movzx  r9d,ax
   14000fbfb:	mov    r8,r14
   14000fbfe:	mov    rdx,r15
   14000fc01:	call   0x14000f67c
   14000fc06:	mov    r9,QWORD PTR [rsp+0x30]
   14000fc0b:	lea    r8,[rsp+0x50]
   14000fc10:	mov    rdx,rbp
   14000fc13:	mov    rcx,rsi
   14000fc16:	call   0x14000f8f0
   14000fc1b:	mov    rdi,rax
   14000fc1e:	cmp    rax,rbx
   14000fc21:	jne    0x140010004
   14000fc27:	mov    eax,0xc04
   14000fc2c:	cmp    r12w,ax
   14000fc30:	je     0x14000fb7e
   14000fc36:	call   QWORD PTR [rip+0xffffffffffff147c]        # 0x1400010b8
   14000fc3c:	movzx  r13d,ax
   14000fc40:	cmp    ax,r12w
   14000fc44:	je     0x14000fce8
   14000fc4a:	lea    rcx,[rsp+0x50]
   14000fc4f:	movzx  r9d,ax
   14000fc53:	mov    r8,r14
   14000fc56:	mov    rdx,r15
   14000fc59:	call   0x14000f67c
   14000fc5e:	mov    r9,QWORD PTR [rsp+0x30]
   14000fc63:	lea    r8,[rsp+0x50]
   14000fc68:	mov    rdx,rbp
   14000fc6b:	mov    rcx,rsi
   14000fc6e:	call   0x14000f8f0
   14000fc73:	mov    rdi,rax
   14000fc76:	cmp    rax,rbx
   14000fc79:	jne    0x140010004
   14000fc7f:	lea    r8,[rsp+0x100]
   14000fc87:	lea    rdx,[rsp+0x50]
   14000fc8c:	xor    r9d,r9d
   14000fc8f:	movzx  ecx,r13w
   14000fc93:	call   0x14000f6c4
   14000fc98:	cmp    eax,ebx
   14000fc9a:	je     0x14000fce8
   14000fc9c:	lea    rcx,[rsp+0x100]
   14000fca4:	mov    edx,0x2
   14000fca9:	call   0x14001029c
   14000fcae:	cmp    ax,bx
   14000fcb1:	je     0x14000fce8
   14000fcb3:	lea    rcx,[rsp+0x50]
   14000fcb8:	movzx  r9d,ax
   14000fcbc:	mov    r8,r14
   14000fcbf:	mov    rdx,r15
   14000fcc2:	call   0x14000f67c
   14000fcc7:	mov    r9,QWORD PTR [rsp+0x30]
   14000fccc:	lea    r8,[rsp+0x50]
   14000fcd1:	mov    rdx,rbp
   14000fcd4:	mov    rcx,rsi
   14000fcd7:	call   0x14000f8f0
   14000fcdc:	mov    rdi,rax
   14000fcdf:	cmp    rax,rbx
   14000fce2:	jne    0x140010004
   14000fce8:	mov    eax,0x409
   14000fced:	cmp    ax,r12w
   14000fcf1:	je     0x14000ff7f
   14000fcf7:	cmp    ax,r13w
   14000fcfb:	jmp    0x14000ff5a
   14000fd00:	call   QWORD PTR [rip+0xffffffffffff13b2]        # 0x1400010b8
   14000fd06:	movzx  r13d,ax
   14000fd0a:	cmp    ax,r12w
   14000fd0e:	je     0x14000fdac
   14000fd14:	lea    r9,[rsp+0x1b0]
   14000fd1c:	lea    r8,[rsp+0x100]
   14000fd24:	lea    rdx,[rsp+0x50]
   14000fd29:	movzx  ecx,ax
   14000fd2c:	call   0x14000f6c4
   14000fd31:	cmp    eax,ebx
   14000fd33:	je     0x140010015
   14000fd39:	mov    r9,QWORD PTR [rsp+0x30]
   14000fd3e:	lea    r8,[rsp+0x50]
   14000fd43:	mov    rdx,rbp
   14000fd46:	mov    rcx,rsi
   14000fd49:	call   0x14000f8f0
   14000fd4e:	mov    rdi,rax
   14000fd51:	cmp    rax,rbx
   14000fd54:	jne    0x140010004
   14000fd5a:	mov    r9,QWORD PTR [rsp+0x30]
   14000fd5f:	lea    r8,[rsp+0x100]
   14000fd67:	mov    rdx,rbp
   14000fd6a:	mov    rcx,rsi
   14000fd6d:	call   0x14000f8f0
   14000fd72:	mov    rdi,rax
   14000fd75:	cmp    rax,rbx
   14000fd78:	jne    0x140010004
   14000fd7e:	cmp    WORD PTR [rsp+0x1b0],bx
   14000fd86:	je     0x14000fdac
   14000fd88:	mov    r9,QWORD PTR [rsp+0x30]
   14000fd8d:	lea    r8,[rsp+0x1b0]
   14000fd95:	mov    rdx,rbp
   14000fd98:	mov    rcx,rsi
   14000fd9b:	call   0x14000f8f0
   14000fda0:	mov    rdi,rax
   14000fda3:	cmp    rax,rbx
   14000fda6:	jne    0x140010004
   14000fdac:	mov    eax,0x409
   14000fdb1:	cmp    ax,r12w
   14000fdb5:	je     0x14000ff7f
   14000fdbb:	cmp    ax,r13w
   14000fdbf:	jmp    0x14000fe80
   14000fdc4:	test   al,0x3
   14000fdc6:	je     0x140010020
   14000fdcc:	call   0x14000f25c
   14000fdd1:	movzx  r12d,ax
   14000fdd5:	test   r13b,0x8
   14000fdd9:	je     0x14000fea7
   14000fddf:	lea    r9,[rsp+0x1b0]
   14000fde7:	lea    r8,[rsp+0x100]
   14000fdef:	lea    rdx,[rsp+0x50]
   14000fdf4:	movzx  ecx,ax
   14000fdf7:	call   0x14000f6c4
   14000fdfc:	cmp    eax,ebx
   14000fdfe:	je     0x140010020
   14000fe04:	mov    r9,QWORD PTR [rsp+0x30]
   14000fe09:	lea    r8,[rsp+0x50]
   14000fe0e:	mov    rdx,rbp
   14000fe11:	mov    rcx,rsi
   14000fe14:	call   0x14000f8f0
   14000fe19:	mov    rdi,rax
   14000fe1c:	cmp    rax,rbx
   14000fe1f:	jne    0x140010004
   14000fe25:	mov    r9,QWORD PTR [rsp+0x30]
   14000fe2a:	lea    r8,[rsp+0x100]
   14000fe32:	mov    rdx,rbp
   14000fe35:	mov    rcx,rsi
   14000fe38:	call   0x14000f8f0
   14000fe3d:	mov    rdi,rax
   14000fe40:	cmp    rax,rbx
   14000fe43:	jne    0x140010004
   14000fe49:	cmp    WORD PTR [rsp+0x1b0],bx
   14000fe51:	je     0x14000fe77
   14000fe53:	mov    r9,QWORD PTR [rsp+0x30]
   14000fe58:	lea    r8,[rsp+0x1b0]
   14000fe60:	mov    rdx,rbp
   14000fe63:	mov    rcx,rsi
   14000fe66:	call   0x14000f8f0
   14000fe6b:	mov    rdi,rax
   14000fe6e:	cmp    rax,rbx
   14000fe71:	jne    0x140010004
   14000fe77:	mov    eax,0x409
   14000fe7c:	cmp    ax,r12w
   14000fe80:	je     0x14000ff7f
   14000fe86:	lea    r8,[rsp+0x100]
   14000fe8e:	lea    rdx,[rsp+0x50]
   14000fe93:	mov    ecx,eax
   14000fe95:	xor    r9d,r9d
   14000fe98:	call   0x14000f6c4
   14000fe9d:	lea    r8,[rsp+0x50]
   14000fea2:	jmp    0x14000ff63
   14000fea7:	lea    r14,[rip+0xffffffffffff3eb2]        # 0x140003d60
   14000feae:	mov    r15d,0x55
   14000feb4:	lea    rcx,[rsp+0x50]
   14000feb9:	mov    r8,r14
   14000febc:	movzx  r9d,r12w
   14000fec0:	mov    rdx,r15
   14000fec3:	call   0x14000f67c
   14000fec8:	mov    r9,QWORD PTR [rsp+0x30]
   14000fecd:	lea    r8,[rsp+0x50]
   14000fed2:	mov    rdx,rbp
   14000fed5:	mov    rcx,rsi
   14000fed8:	call   0x14000f8f0
   14000fedd:	mov    rdi,rax
   14000fee0:	cmp    rax,rbx
   14000fee3:	jne    0x140010004
   14000fee9:	lea    r8,[rsp+0x100]
   14000fef1:	lea    rdx,[rsp+0x50]
   14000fef6:	xor    r9d,r9d
   14000fef9:	movzx  ecx,r12w
   14000fefd:	call   0x14000f6c4
   14000ff02:	cmp    eax,ebx
   14000ff04:	je     0x14000ff51
   14000ff06:	lea    edx,[r15-0x53]
   14000ff0a:	lea    rcx,[rsp+0x100]
   14000ff12:	call   0x14001029c
   14000ff17:	cmp    ax,bx
   14000ff1a:	je     0x14000ff51
   14000ff1c:	lea    rcx,[rsp+0x50]
   14000ff21:	movzx  r9d,ax
   14000ff25:	mov    r8,r14
   14000ff28:	mov    rdx,r15
   14000ff2b:	call   0x14000f67c
   14000ff30:	mov    r9,QWORD PTR [rsp+0x30]
   14000ff35:	lea    r8,[rsp+0x50]
   14000ff3a:	mov    rdx,rbp
   14000ff3d:	mov    rcx,rsi
   14000ff40:	call   0x14000f8f0
   14000ff45:	mov    rdi,rax
   14000ff48:	cmp    rax,rbx
   14000ff4b:	jne    0x140010004
   14000ff51:	mov    eax,0x409
   14000ff56:	cmp    ax,r12w
   14000ff5a:	je     0x14000ff7f
   14000ff5c:	lea    r8,[rip+0xffffffffffff3e15]        # 0x140003d78
   14000ff63:	mov    r9,QWORD PTR [rsp+0x30]
   14000ff68:	mov    rdx,rbp
   14000ff6b:	mov    rcx,rsi
   14000ff6e:	call   0x14000f8f0
   14000ff73:	mov    rdi,rax
   14000ff76:	cmp    rax,rbx
   14000ff79:	jne    0x140010004
   14000ff7f:	mov    r9,QWORD PTR [rsp+0x30]
   14000ff84:	xor    r8d,r8d
   14000ff87:	mov    rdx,rbp
   14000ff8a:	mov    rcx,rsi
   14000ff8d:	call   0x14000f8f0
   14000ff92:	mov    rdi,rax
   14000ff95:	cmp    rax,rbx
   14000ff98:	jne    0x140010004
   14000ff9a:	jmp    0x14000ffff
   14000ff9c:	test   BYTE PTR [rip+0x7555],0x7        # 0x1400174f8
   14000ffa3:	je     0x140010020
   14000ffa5:	test   r13b,0x8
   14000ffa9:	je     0x14000ffca
   14000ffab:	lea    r8,[rsp+0x100]
   14000ffb3:	lea    rdx,[rsp+0x50]
   14000ffb8:	xor    r9d,r9d
   14000ffbb:	movzx  ecx,r14w
   14000ffbf:	call   0x14000f6c4
   14000ffc4:	cmp    eax,ebx
   14000ffc6:	je     0x140010020
   14000ffc8:	jmp    0x14000ffe7
   14000ffca:	movzx  r9d,r14w
   14000ffce:	lea    r14,[rip+0xffffffffffff3d8b]        # 0x140003d60
   14000ffd5:	lea    rcx,[rsp+0x50]
   14000ffda:	mov    r8,r14
   14000ffdd:	mov    edx,0x55
   14000ffe2:	call   0x14000f67c
   14000ffe7:	mov    r9,QWORD PTR [rsp+0x30]
   14000ffec:	lea    r8,[rsp+0x50]
   14000fff1:	mov    rdx,rbp
   14000fff4:	mov    rcx,rsi
   14000fff7:	call   0x14000f8f0
   14000fffc:	mov    rdi,rax
   14000ffff:	cmp    rdi,rbx
   140010002:	je     0x140010015
   140010004:	mov    rcx,rsi
   140010007:	call   QWORD PTR [rip+0xffffffffffff10cb]        # 0x1400010d8
   14001000d:	mov    rax,rdi
   140010010:	jmp    0x1400100c6
   140010015:	mov    r15,QWORD PTR [rsp+0x40]
   14001001a:	mov    r14w,WORD PTR [rsp+0x38]
   140010020:	test   BYTE PTR [rsp+0x3c],0x10
   140010025:	je     0x140010046
   140010027:	lea    rdx,[rip+0xffffffffffff3cba]        # 0x140003ce8
   14001002e:	movzx  r9d,r14w
   140010032:	mov    r8d,0x1
   140010038:	mov    rcx,rsi
   14001003b:	call   QWORD PTR [rip+0xffffffffffff1067]        # 0x1400010a8
   140010041:	cmp    rax,rbx
   140010044:	je     0x1400100bb
   140010046:	test   sil,0x1
   14001004a:	je     0x1400100b6
   14001004c:	mov    rcx,rsi
   14001004f:	call   QWORD PTR [rip+0xffffffffffff1083]        # 0x1400010d8
   140010055:	call   0x14000f3ec
   14001005a:	test   al,0x38
   14001005c:	je     0x14001009a
   14001005e:	mov    rax,QWORD PTR [rsp+0x30]
   140010063:	lea    r8,[rip+0xffffffffffff3d26]        # 0x140003d90
   14001006a:	lea    rcx,[rsp+0x260]
   140010072:	mov    r9,rbp
   140010075:	mov    edx,0x104
   14001007a:	mov    QWORD PTR [rsp+0x20],rax
   14001007f:	call   0x14000f67c
   140010084:	xor    r8d,r8d
   140010087:	lea    rcx,[rsp+0x260]
   14001008f:	lea    edx,[r8+0x1]
   140010093:	call   0x14000f518
   140010098:	jmp    0x1400100b3
   14001009a:	call   0x14000f3ec
   14001009f:	mov    rcx,r15
   1400100a2:	and    eax,0x26
   1400100a5:	setne  bl
   1400100a8:	xor    edx,edx
   1400100aa:	mov    r8d,ebx
   1400100ad:	call   QWORD PTR [rip+0xffffffffffff0fd5]        # 0x140001088
   1400100b3:	mov    rsi,rax
   1400100b6:	mov    rax,rsi
   1400100b9:	jmp    0x1400100c6
   1400100bb:	mov    rcx,rsi
   1400100be:	call   QWORD PTR [rip+0xffffffffffff1014]        # 0x1400010d8
   1400100c4:	xor    eax,eax
   1400100c6:	mov    rcx,QWORD PTR [rsp+0x470]
   1400100ce:	xor    rcx,rsp
   1400100d1:	call   0x140009dd0
   1400100d6:	mov    rbx,QWORD PTR [rsp+0x4c8]
   1400100de:	add    rsp,0x480
   1400100e5:	pop    r15
   1400100e7:	pop    r14
   1400100e9:	pop    r13
   1400100eb:	pop    r12
   1400100ed:	pop    rdi
   1400100ee:	pop    rsi
   1400100ef:	pop    rbp
   1400100f0:	ret    
   1400100f1:	int3   
   1400100f2:	int3   
   1400100f3:	int3   
   1400100f4:	int3   
   1400100f5:	int3   
   1400100f6:	int3   
   1400100f7:	int3   
   1400100f8:	mov    rdx,QWORD PTR [rdx]
   1400100fb:	jmp    0x14001084c
   140010100:	int3   
   140010101:	int3   
   140010102:	int3   
   140010103:	int3   
   140010104:	int3   
   140010105:	int3   
   140010106:	int3   
   140010107:	int3   
   140010108:	movzx  eax,WORD PTR [rdx]
   14001010b:	cmp    ax,WORD PTR [rcx]
   14001010e:	jne    0x140010113
   140010110:	xor    eax,eax
   140010112:	ret    
   140010113:	sbb    eax,eax
   140010115:	and    eax,0x2
   140010118:	dec    eax
   14001011a:	ret    
   14001011b:	int3   
   14001011c:	int3   
   14001011d:	int3   
   14001011e:	int3   
   14001011f:	int3   
   140010120:	int3   
   140010121:	int3   
   140010122:	int3   
   140010123:	int3   
   140010124:	xor    r11d,r11d
   140010127:	mov    eax,0x80070057
   14001012c:	mov    r10d,r11d
   14001012f:	cmp    rdx,r11
   140010132:	je     0x14001013d
   140010134:	cmp    rdx,0x7fffffff
   14001013b:	jbe    0x140010140
   14001013d:	mov    r10d,eax
   140010140:	cmp    r10d,r11d
   140010143:	jl     0x140010195
   140010145:	cmp    r9,0x7ffffffe
   14001014c:	jbe    0x140010153
   14001014e:	mov    r10d,eax
   140010151:	jmp    0x140010191
   140010153:	mov    r10d,r11d
   140010156:	cmp    rdx,r11
   140010159:	je     0x140010187
   14001015b:	sub    r9,rdx
   14001015e:	sub    r8,rcx
   140010161:	lea    rax,[r9+rdx*1]
   140010165:	cmp    rax,r11
   140010168:	je     0x140010182
   14001016a:	movzx  eax,WORD PTR [r8+rcx*1]
   14001016f:	cmp    ax,r11w
   140010173:	je     0x140010182
   140010175:	mov    WORD PTR [rcx],ax
   140010178:	add    rcx,0x2
   14001017c:	sub    rdx,0x1
   140010180:	jne    0x140010161
   140010182:	cmp    rdx,r11
   140010185:	jne    0x140010191
   140010187:	sub    rcx,0x2
   14001018b:	mov    r10d,0x8007007a
   140010191:	mov    WORD PTR [rcx],r11w
   140010195:	mov    eax,r10d
   140010198:	ret    
   140010199:	int3   
   14001019a:	int3   
   14001019b:	int3   
   14001019c:	int3   
   14001019d:	int3   
   14001019e:	int3   
   14001019f:	int3   
   1400101a0:	mov    QWORD PTR [rsp+0x8],rbx
   1400101a5:	mov    QWORD PTR [rsp+0x10],rsi
   1400101aa:	push   rdi
   1400101ab:	sub    rsp,0x30
   1400101af:	mov    edi,r9d
   1400101b2:	movsxd rbx,r8d
   1400101b5:	mov    rsi,rdx
   1400101b8:	test   rcx,rcx
   1400101bb:	je     0x140010277
   1400101c1:	test   r8d,r8d
   1400101c4:	jle    0x1400101d2
   1400101c6:	test   rdx,rdx
   1400101c9:	je     0x140010277
   1400101cf:	test   r8d,r8d
   1400101d2:	js     0x140010277
   1400101d8:	test   r9d,0xfffffffd
   1400101df:	jne    0x140010277
   1400101e5:	lea    rax,[rip+0xffffffffffffff0c]        # 0x1400100f8
   1400101ec:	lea    rdx,[rip+0xffffffffffff6f6d]        # 0x140007160
   1400101f3:	mov    r9d,0x10
   1400101f9:	mov    r8d,0x163
   1400101ff:	mov    QWORD PTR [rsp+0x20],rax
   140010204:	call   0x1400108d8
   140010209:	test   rax,rax
   14001020c:	je     0x140010277
   14001020e:	movsxd rax,DWORD PTR [rax+0x8]
   140010212:	lea    r8,[rip+0xffffffffffff4de7]        # 0x140005000
   140010219:	lea    rcx,[rax+rax*2]
   14001021d:	test   dil,0x2
   140010221:	jne    0x140010233
   140010223:	cmp    DWORD PTR [r8+rcx*8+0x10],0x68
   140010229:	jne    0x140010233
   14001022b:	cmp    WORD PTR [r8+rcx*8],0x7f
   140010231:	jne    0x140010277
   140010233:	movsxd rax,DWORD PTR [r8+rcx*8+0x10]
   140010238:	lea    rcx,[rax+rax*2]
   14001023c:	xor    eax,eax
   14001023e:	mov    r8,QWORD PTR [r8+rcx*8+0x8]
   140010243:	or     rcx,0xffffffffffffffff
   140010247:	mov    rdi,r8
   14001024a:	repnz scas ax,WORD PTR es:[rdi]
   14001024d:	not    rcx
   140010250:	lea    rdi,[rcx-0x1]
   140010254:	test   rsi,rsi
   140010257:	je     0x140010272
   140010259:	mov    r9,rcx
   14001025c:	mov    rdx,rbx
   14001025f:	mov    rcx,rsi
   140010262:	call   0x140010124
   140010267:	test   eax,eax
   140010269:	jns    0x140010272
   14001026b:	mov    ecx,0x7a
   140010270:	jmp    0x14001027c
   140010272:	lea    eax,[rdi+0x1]
   140010275:	jmp    0x140010284
   140010277:	mov    ecx,0x57
   14001027c:	call   QWORD PTR [rip+0xffffffffffff0ef6]        # 0x140001178
   140010282:	xor    eax,eax
   140010284:	mov    rbx,QWORD PTR [rsp+0x40]
   140010289:	mov    rsi,QWORD PTR [rsp+0x48]
   14001028e:	add    rsp,0x30
   140010292:	pop    rdi
   140010293:	ret    
   140010294:	int3   
   140010295:	int3   
   140010296:	int3   
   140010297:	int3   
   140010298:	int3   
   140010299:	int3   
   14001029a:	int3   
   14001029b:	int3   
   14001029c:	mov    QWORD PTR [rsp+0x8],rbx
   1400102a1:	push   rdi
   1400102a2:	sub    rsp,0x30
   1400102a6:	xor    edi,edi
   1400102a8:	mov    ebx,edx
   1400102aa:	cmp    rcx,rdi
   1400102ad:	je     0x140010306
   1400102af:	test   edx,0xfffffffd
   1400102b5:	jne    0x140010306
   1400102b7:	lea    rdx,[rip+0xfffffffffffffe3a]        # 0x1400100f8
   1400102be:	lea    r9d,[rdi+0x10]
   1400102c2:	mov    r8d,0x163
   1400102c8:	mov    QWORD PTR [rsp+0x20],rdx
   1400102cd:	lea    rdx,[rip+0xffffffffffff6e8c]        # 0x140007160
   1400102d4:	call   0x1400108d8
   1400102d9:	cmp    rax,rdi
   1400102dc:	je     0x140010306
   1400102de:	movsxd rax,DWORD PTR [rax+0x8]
   1400102e2:	lea    rcx,[rax+rax*2]
   1400102e6:	lea    rax,[rip+0xffffffffffff4d13]        # 0x140005000
   1400102ed:	test   bl,0x2
   1400102f0:	jne    0x140010300
   1400102f2:	cmp    DWORD PTR [rax+rcx*8+0x10],0x68
   1400102f7:	jne    0x140010300
   1400102f9:	cmp    WORD PTR [rax+rcx*8],0x7f
   1400102fe:	jne    0x140010306
   140010300:	mov    ax,WORD PTR [rax+rcx*8]
   140010304:	jmp    0x140010314
   140010306:	mov    ecx,0x57
   14001030b:	call   QWORD PTR [rip+0xffffffffffff0e67]        # 0x140001178
   140010311:	mov    ax,di
   140010314:	mov    rbx,QWORD PTR [rsp+0x40]
   140010319:	add    rsp,0x30
   14001031d:	pop    rdi
   14001031e:	ret    
   14001031f:	int3   
   140010320:	int3   
   140010321:	int3   
   140010322:	int3   
   140010323:	int3   
   140010324:	int3   
   140010325:	int3   
   140010326:	int3   
   140010327:	int3   
   140010328:	mov    QWORD PTR [rsp+0x10],rbx
   14001032d:	mov    QWORD PTR [rsp+0x18],rsi
   140010332:	mov    WORD PTR [rsp+0x8],cx
   140010337:	push   rdi
   140010338:	sub    rsp,0x30
   14001033c:	mov    edi,r9d
   14001033f:	movsxd rbx,r8d
   140010342:	mov    rsi,rdx
   140010345:	test   r8d,r8d
   140010348:	js     0x1400103df
   14001034e:	test   rdx,rdx
   140010351:	jne    0x14001035c
   140010353:	test   r8d,r8d
   140010356:	jne    0x1400103df
   14001035c:	test   r9d,0xfffffffd
   140010363:	jne    0x1400103df
   140010365:	lea    rax,[rip+0xfffffffffffffd9c]        # 0x140010108
   14001036c:	lea    rdx,[rip+0xffffffffffff4c8d]        # 0x140005000
   140010373:	lea    rcx,[rsp+0x40]
   140010378:	mov    r9d,0x18
   14001037e:	mov    r8d,0x164
   140010384:	mov    QWORD PTR [rsp+0x20],rax
   140010389:	call   0x1400108d8
   14001038e:	test   rax,rax
   140010391:	je     0x1400103df
   140010393:	test   dil,0x2
   140010397:	jne    0x1400103a5
   140010399:	cmp    DWORD PTR [rax+0x10],0x68
   14001039d:	jne    0x1400103a5
   14001039f:	cmp    WORD PTR [rax],0x7f
   1400103a3:	jne    0x1400103df
   1400103a5:	mov    r8,QWORD PTR [rax+0x8]
   1400103a9:	or     rcx,0xffffffffffffffff
   1400103ad:	xor    eax,eax
   1400103af:	mov    rdi,r8
   1400103b2:	repnz scas ax,WORD PTR es:[rdi]
   1400103b5:	not    rcx
   1400103b8:	lea    rdi,[rcx-0x1]
   1400103bc:	test   rsi,rsi
   1400103bf:	je     0x1400103da
   1400103c1:	mov    r9,rcx
   1400103c4:	mov    rdx,rbx
   1400103c7:	mov    rcx,rsi
   1400103ca:	call   0x140010124
   1400103cf:	test   eax,eax
   1400103d1:	jns    0x1400103da
   1400103d3:	mov    ecx,0x7a
   1400103d8:	jmp    0x1400103e4
   1400103da:	lea    eax,[rdi+0x1]
   1400103dd:	jmp    0x1400103ec
   1400103df:	mov    ecx,0x57
   1400103e4:	call   QWORD PTR [rip+0xffffffffffff0d8e]        # 0x140001178
   1400103ea:	xor    eax,eax
   1400103ec:	mov    rbx,QWORD PTR [rsp+0x48]
   1400103f1:	mov    rsi,QWORD PTR [rsp+0x50]
   1400103f6:	add    rsp,0x30
   1400103fa:	pop    rdi
   1400103fb:	ret    
   1400103fc:	int3   
   1400103fd:	int3   
   1400103fe:	int3   
   1400103ff:	int3   
   140010400:	int3   
   140010401:	int3   
   140010402:	jmp    QWORD PTR [rip+0xffffffffffff0d10]        # 0x140001118
   140010408:	int3   
   140010409:	int3   
   14001040a:	int3   
   14001040b:	int3   
   14001040c:	int3   
   14001040d:	int3   
   14001040e:	jmp    QWORD PTR [rip+0xffffffffffff0dcc]        # 0x1400011e0
   140010414:	int3   
   140010415:	int3   
   140010416:	int3   
   140010417:	int3   
   140010418:	int3   
   140010419:	int3   
   14001041a:	jmp    QWORD PTR [rip+0xffffffffffff0dc8]        # 0x1400011e8
   140010420:	int3   
   140010421:	int3   
   140010422:	int3   
   140010423:	int3   
   140010424:	int3   
   140010425:	int3   
   140010426:	jmp    QWORD PTR [rip+0xffffffffffff0e1c]        # 0x140001248
   14001042c:	int3   
   14001042d:	int3   
   14001042e:	int3   
   14001042f:	int3   
   140010430:	int3   
   140010431:	int3   
   140010432:	int3   
   140010433:	int3   
   140010434:	mov    rax,rsp
   140010437:	mov    QWORD PTR [rax+0x8],rbx
   14001043b:	mov    QWORD PTR [rax+0x10],rsi
   14001043f:	mov    QWORD PTR [rax+0x18],rdi
   140010443:	mov    QWORD PTR [rax+0x20],r12
   140010447:	push   rbp
   140010448:	mov    rbp,rsp
   14001044b:	sub    rsp,0x50
   14001044f:	and    QWORD PTR [rbp-0x30],0x0
   140010454:	mov    rdi,rdx
   140010457:	xor    edx,edx
   140010459:	mov    rsi,r8
   14001045c:	mov    rbx,rcx
   14001045f:	lea    r8d,[rdx+0x28]
   140010463:	lea    rcx,[rbp-0x28]
   140010467:	mov    r12,r9
   14001046a:	call   0x14000db90
   14001046f:	test   rsi,rsi
   140010472:	jne    0x14001048c
   140010474:	call   0x14000baac
   140010479:	mov    DWORD PTR [rax],0x16
   14001047f:	call   0x14000ba38
   140010484:	or     eax,0xffffffff
   140010487:	jmp    0x140010516
   14001048c:	test   rdi,rdi
   14001048f:	je     0x140010496
   140010491:	test   rbx,rbx
   140010494:	je     0x140010474
   140010496:	mov    DWORD PTR [rbp-0x18],0x42
   14001049d:	mov    QWORD PTR [rbp-0x20],rbx
   1400104a1:	mov    QWORD PTR [rbp-0x30],rbx
   1400104a5:	cmp    rdi,0x3fffffff
   1400104ac:	jbe    0x1400104b7
   1400104ae:	mov    DWORD PTR [rbp-0x28],0x7fffffff
   1400104b5:	jmp    0x1400104bd
   1400104b7:	lea    eax,[rdi+rdi*1]
   1400104ba:	mov    DWORD PTR [rbp-0x28],eax
   1400104bd:	mov    r9,QWORD PTR [rbp+0x30]
   1400104c1:	lea    rcx,[rbp-0x30]
   1400104c5:	mov    r8,r12
   1400104c8:	mov    rdx,rsi
   1400104cb:	call   0x140010d2c
   1400104d0:	mov    edi,eax
   1400104d2:	test   rbx,rbx
   1400104d5:	je     0x140010516
   1400104d7:	dec    DWORD PTR [rbp-0x28]
   1400104da:	js     0x1400104f0
   1400104dc:	mov    rax,QWORD PTR [rbp-0x30]
   1400104e0:	mov    BYTE PTR [rax],0x0
   1400104e3:	mov    rax,QWORD PTR [rbp-0x30]
   1400104e7:	inc    rax
   1400104ea:	mov    QWORD PTR [rbp-0x30],rax
   1400104ee:	jmp    0x1400104ff
   1400104f0:	lea    rdx,[rbp-0x30]
   1400104f4:	xor    ecx,ecx
   1400104f6:	call   0x140010a60
   1400104fb:	mov    rax,QWORD PTR [rbp-0x30]
   1400104ff:	dec    DWORD PTR [rbp-0x28]
   140010502:	js     0x140010509
   140010504:	mov    BYTE PTR [rax],0x0
   140010507:	jmp    0x140010514
   140010509:	lea    rdx,[rbp-0x30]
   14001050d:	xor    ecx,ecx
   14001050f:	call   0x140010a60
   140010514:	mov    eax,edi
   140010516:	mov    rbx,QWORD PTR [rsp+0x60]
   14001051b:	mov    rsi,QWORD PTR [rsp+0x68]
   140010520:	mov    rdi,QWORD PTR [rsp+0x70]
   140010525:	mov    r12,QWORD PTR [rsp+0x78]
   14001052a:	add    rsp,0x50
   14001052e:	pop    rbp
   14001052f:	ret    
   140010530:	int3   
   140010531:	int3   
   140010532:	int3   
   140010533:	int3   
   140010534:	int3   
   140010535:	int3   
   140010536:	int3   
   140010537:	int3   
   140010538:	sub    rsp,0x38
   14001053c:	mov    QWORD PTR [rsp+0x20],r9
   140010541:	xor    r9d,r9d
   140010544:	call   0x140010434
   140010549:	add    rsp,0x38
   14001054d:	ret    
   14001054e:	int3   
   14001054f:	int3   
   140010550:	int3   
   140010551:	int3   
   140010552:	int3   
   140010553:	int3   
   140010554:	test   r8,r8
   140010557:	jne    0x140010571
   140010559:	xor    eax,eax
   14001055b:	ret    
   14001055c:	movzx  eax,WORD PTR [rcx]
   14001055f:	test   ax,ax
   140010562:	je     0x140010576
   140010564:	cmp    ax,WORD PTR [rdx]
   140010567:	jne    0x140010576
   140010569:	add    rcx,0x2
   14001056d:	add    rdx,0x2
   140010571:	dec    r8
   140010574:	jne    0x14001055c
   140010576:	movzx  eax,WORD PTR [rcx]
   140010579:	movzx  ecx,WORD PTR [rdx]
   14001057c:	sub    eax,ecx
   14001057e:	ret    
   14001057f:	int3   
   140010580:	int3   
   140010581:	int3   
   140010582:	int3   
   140010583:	int3   
   140010584:	int3   
   140010585:	int3   
   140010586:	int3   
   140010587:	int3   
   140010588:	mov    rax,rsp
   14001058b:	mov    QWORD PTR [rax+0x8],rbx
   14001058f:	mov    QWORD PTR [rax+0x10],rbp
   140010593:	mov    QWORD PTR [rax+0x18],rsi
   140010597:	mov    QWORD PTR [rax+0x20],rdi
   14001059b:	push   r12
   14001059d:	sub    rsp,0x40
   1400105a1:	xor    r12d,r12d
   1400105a4:	mov    rbp,r8
   1400105a7:	mov    rdi,rdx
   1400105aa:	mov    rsi,rcx
   1400105ad:	mov    eax,r12d
   1400105b0:	test   r8,r8
   1400105b3:	je     0x140010683
   1400105b9:	test   rcx,rcx
   1400105bc:	jne    0x1400105d8
   1400105be:	call   0x14000baac
   1400105c3:	mov    DWORD PTR [rax],0x16
   1400105c9:	call   0x14000ba38
   1400105ce:	mov    eax,0x7fffffff
   1400105d3:	jmp    0x140010683
   1400105d8:	test   rdx,rdx
   1400105db:	je     0x1400105be
   1400105dd:	lea    rcx,[rsp+0x20]
   1400105e2:	mov    rdx,r9
   1400105e5:	call   0x14000d5a4
   1400105ea:	mov    r11,QWORD PTR [rsp+0x20]
   1400105ef:	cmp    DWORD PTR [r11+0x14],r12d
   1400105f3:	jne    0x140010634
   1400105f5:	sub    rsi,rdi
   1400105f8:	movzx  ebx,WORD PTR [rsi+rdi*1]
   1400105fc:	cmp    bx,0x41
   140010600:	jb     0x14001060c
   140010602:	cmp    bx,0x5a
   140010606:	ja     0x14001060c
   140010608:	add    bx,0x20
   14001060c:	movzx  eax,WORD PTR [rdi]
   14001060f:	cmp    ax,0x41
   140010613:	jb     0x14001061f
   140010615:	cmp    ax,0x5a
   140010619:	ja     0x14001061f
   14001061b:	add    ax,0x20
   14001061f:	add    rdi,0x2
   140010623:	dec    rbp
   140010626:	je     0x140010668
   140010628:	test   bx,bx
   14001062b:	je     0x140010668
   14001062d:	cmp    bx,ax
   140010630:	je     0x1400105f8
   140010632:	jmp    0x140010668
   140010634:	movzx  ecx,WORD PTR [rsi]
   140010637:	lea    rdx,[rsp+0x20]
   14001063c:	call   0x140011828
   140010641:	movzx  ecx,WORD PTR [rdi]
   140010644:	lea    rdx,[rsp+0x20]
   140010649:	movzx  ebx,ax
   14001064c:	call   0x140011828
   140010651:	add    rsi,0x2
   140010655:	add    rdi,0x2
   140010659:	dec    rbp
   14001065c:	je     0x140010668
   14001065e:	test   bx,bx
   140010661:	je     0x140010668
   140010663:	cmp    bx,ax
   140010666:	je     0x140010634
   140010668:	movzx  ecx,ax
   14001066b:	movzx  eax,bx
   14001066e:	sub    eax,ecx
   140010670:	cmp    BYTE PTR [rsp+0x38],r12b
   140010675:	je     0x140010683
   140010677:	mov    rcx,QWORD PTR [rsp+0x30]
   14001067c:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140010683:	mov    rbx,QWORD PTR [rsp+0x50]
   140010688:	mov    rbp,QWORD PTR [rsp+0x58]
   14001068d:	mov    rsi,QWORD PTR [rsp+0x60]
   140010692:	mov    rdi,QWORD PTR [rsp+0x68]
   140010697:	add    rsp,0x40
   14001069b:	pop    r12
   14001069d:	ret    
   14001069e:	int3   
   14001069f:	int3   
   1400106a0:	int3   
   1400106a1:	int3   
   1400106a2:	int3   
   1400106a3:	int3   
   1400106a4:	sub    rsp,0x28
   1400106a8:	xor    eax,eax
   1400106aa:	mov    r10,rdx
   1400106ad:	mov    r11,rcx
   1400106b0:	cmp    DWORD PTR [rip+0x6e36],eax        # 0x1400174ec
   1400106b6:	jne    0x14001072f
   1400106b8:	test   r8,r8
   1400106bb:	je     0x140010737
   1400106bd:	test   rcx,rcx
   1400106c0:	jne    0x1400106dc
   1400106c2:	call   0x14000baac
   1400106c7:	mov    DWORD PTR [rax],0x16
   1400106cd:	call   0x14000ba38
   1400106d2:	mov    eax,0x7fffffff
   1400106d7:	add    rsp,0x28
   1400106db:	ret    
   1400106dc:	test   rdx,rdx
   1400106df:	je     0x1400106c2
   1400106e1:	sub    r11,rdx
   1400106e4:	movzx  ecx,WORD PTR [r11+r10*1]
   1400106e9:	cmp    cx,0x41
   1400106ed:	jb     0x1400106f9
   1400106ef:	cmp    cx,0x5a
   1400106f3:	ja     0x1400106f9
   1400106f5:	add    cx,0x20
   1400106f9:	movzx  edx,WORD PTR [r10]
   1400106fd:	cmp    dx,0x41
   140010701:	jb     0x14001070d
   140010703:	cmp    dx,0x5a
   140010707:	ja     0x14001070d
   140010709:	add    dx,0x20
   14001070d:	add    r10,0x2
   140010711:	dec    r8
   140010714:	je     0x140010720
   140010716:	test   cx,cx
   140010719:	je     0x140010720
   14001071b:	cmp    cx,dx
   14001071e:	je     0x1400106e4
   140010720:	movzx  eax,dx
   140010723:	movzx  ecx,cx
   140010726:	sub    ecx,eax
   140010728:	mov    eax,ecx
   14001072a:	add    rsp,0x28
   14001072e:	ret    
   14001072f:	xor    r9d,r9d
   140010732:	call   0x140010588
   140010737:	add    rsp,0x28
   14001073b:	ret    
   14001073c:	int3   
   14001073d:	int3   
   14001073e:	int3   
   14001073f:	int3   
   140010740:	int3   
   140010741:	int3   
   140010742:	int3   
   140010743:	int3   
   140010744:	mov    rax,rsp
   140010747:	mov    QWORD PTR [rax+0x8],rbx
   14001074b:	mov    QWORD PTR [rax+0x10],rbp
   14001074f:	mov    QWORD PTR [rax+0x18],rsi
   140010753:	push   rdi
   140010754:	sub    rsp,0x40
   140010758:	mov    rsi,rcx
   14001075b:	mov    rdi,rdx
   14001075e:	lea    rcx,[rax-0x28]
   140010762:	mov    rdx,r8
   140010765:	call   0x14000d5a4
   14001076a:	xor    ebp,ebp
   14001076c:	test   rsi,rsi
   14001076f:	jne    0x14001079e
   140010771:	call   0x14000baac
   140010776:	mov    DWORD PTR [rax],0x16
   14001077c:	call   0x14000ba38
   140010781:	cmp    BYTE PTR [rsp+0x38],bpl
   140010786:	je     0x140010794
   140010788:	mov    rax,QWORD PTR [rsp+0x30]
   14001078d:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140010794:	mov    eax,0x7fffffff
   140010799:	jmp    0x140010831
   14001079e:	test   rdi,rdi
   1400107a1:	je     0x140010771
   1400107a3:	mov    rax,QWORD PTR [rsp+0x20]
   1400107a8:	cmp    DWORD PTR [rax+0x14],ebp
   1400107ab:	jne    0x1400107e7
   1400107ad:	sub    rsi,rdi
   1400107b0:	movzx  ebx,WORD PTR [rsi+rdi*1]
   1400107b4:	cmp    bx,0x41
   1400107b8:	jb     0x1400107c4
   1400107ba:	cmp    bx,0x5a
   1400107be:	ja     0x1400107c4
   1400107c0:	add    bx,0x20
   1400107c4:	movzx  eax,WORD PTR [rdi]
   1400107c7:	cmp    ax,0x41
   1400107cb:	jb     0x1400107d7
   1400107cd:	cmp    ax,0x5a
   1400107d1:	ja     0x1400107d7
   1400107d3:	add    ax,0x20
   1400107d7:	add    rdi,0x2
   1400107db:	test   bx,bx
   1400107de:	je     0x140010816
   1400107e0:	cmp    bx,ax
   1400107e3:	je     0x1400107b0
   1400107e5:	jmp    0x140010816
   1400107e7:	movzx  ecx,WORD PTR [rsi]
   1400107ea:	lea    rdx,[rsp+0x20]
   1400107ef:	call   0x140011828
   1400107f4:	movzx  ecx,WORD PTR [rdi]
   1400107f7:	lea    rdx,[rsp+0x20]
   1400107fc:	movzx  ebx,ax
   1400107ff:	add    rsi,0x2
   140010803:	call   0x140011828
   140010808:	add    rdi,0x2
   14001080c:	test   bx,bx
   14001080f:	je     0x140010816
   140010811:	cmp    bx,ax
   140010814:	je     0x1400107e7
   140010816:	movzx  ecx,ax
   140010819:	movzx  eax,bx
   14001081c:	sub    eax,ecx
   14001081e:	cmp    BYTE PTR [rsp+0x38],bpl
   140010823:	je     0x140010831
   140010825:	mov    rcx,QWORD PTR [rsp+0x30]
   14001082a:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140010831:	mov    rbx,QWORD PTR [rsp+0x50]
   140010836:	mov    rbp,QWORD PTR [rsp+0x58]
   14001083b:	mov    rsi,QWORD PTR [rsp+0x60]
   140010840:	add    rsp,0x40
   140010844:	pop    rdi
   140010845:	ret    
   140010846:	int3   
   140010847:	int3   
   140010848:	int3   
   140010849:	int3   
   14001084a:	int3   
   14001084b:	int3   
   14001084c:	sub    rsp,0x28
   140010850:	xor    r8d,r8d
   140010853:	mov    r9,rcx
   140010856:	cmp    DWORD PTR [rip+0x6c8f],r8d        # 0x1400174ec
   14001085d:	jne    0x1400108c9
   14001085f:	test   rcx,rcx
   140010862:	jne    0x14001087e
   140010864:	call   0x14000baac
   140010869:	mov    DWORD PTR [rax],0x16
   14001086f:	call   0x14000ba38
   140010874:	mov    eax,0x7fffffff
   140010879:	add    rsp,0x28
   14001087d:	ret    
   14001087e:	test   rdx,rdx
   140010881:	je     0x140010864
   140010883:	sub    r9,rdx
   140010886:	movzx  eax,WORD PTR [r9+rdx*1]
   14001088b:	cmp    ax,0x41
   14001088f:	jb     0x14001089b
   140010891:	cmp    ax,0x5a
   140010895:	ja     0x14001089b
   140010897:	add    ax,0x20
   14001089b:	movzx  ecx,WORD PTR [rdx]
   14001089e:	cmp    cx,0x41
   1400108a2:	jb     0x1400108ae
   1400108a4:	cmp    cx,0x5a
   1400108a8:	ja     0x1400108ae
   1400108aa:	add    cx,0x20
   1400108ae:	add    rdx,0x2
   1400108b2:	test   ax,ax
   1400108b5:	je     0x1400108bc
   1400108b7:	cmp    ax,cx
   1400108ba:	je     0x140010886
   1400108bc:	movzx  ecx,cx
   1400108bf:	movzx  eax,ax
   1400108c2:	sub    eax,ecx
   1400108c4:	add    rsp,0x28
   1400108c8:	ret    
   1400108c9:	add    rsp,0x28
   1400108cd:	jmp    0x140010744
   1400108d2:	int3   
   1400108d3:	int3   
   1400108d4:	int3   
   1400108d5:	int3   
   1400108d6:	int3   
   1400108d7:	int3   
   1400108d8:	mov    rax,rsp
   1400108db:	mov    QWORD PTR [rax+0x8],rbx
   1400108df:	mov    QWORD PTR [rax+0x10],rbp
   1400108e3:	mov    QWORD PTR [rax+0x18],rsi
   1400108e7:	mov    QWORD PTR [rax+0x20],rdi
   1400108eb:	push   r12
   1400108ed:	push   r13
   1400108ef:	push   r15
   1400108f1:	sub    rsp,0x20
   1400108f5:	lea    rdi,[r8-0x1]
   1400108f9:	xor    r12d,r12d
   1400108fc:	mov    r13,r9
   1400108ff:	mov    rsi,r8
   140010902:	mov    rbx,rdx
   140010905:	mov    r15,rcx
   140010908:	imul   rdi,r9
   14001090c:	add    rdi,rdx
   14001090f:	test   rdx,rdx
   140010912:	jne    0x14001094a
   140010914:	test   r8,r8
   140010917:	je     0x14001094a
   140010919:	call   0x14000baac
   14001091e:	mov    DWORD PTR [rax],0x16
   140010924:	call   0x14000ba38
   140010929:	xor    eax,eax
   14001092b:	mov    rbx,QWORD PTR [rsp+0x40]
   140010930:	mov    rbp,QWORD PTR [rsp+0x48]
   140010935:	mov    rsi,QWORD PTR [rsp+0x50]
   14001093a:	mov    rdi,QWORD PTR [rsp+0x58]
   14001093f:	add    rsp,0x20
   140010943:	pop    r15
   140010945:	pop    r13
   140010947:	pop    r12
   140010949:	ret    
   14001094a:	test   r9,r9
   14001094d:	je     0x140010919
   14001094f:	cmp    QWORD PTR [rsp+0x60],r12
   140010954:	je     0x140010919
   140010956:	cmp    rdx,rdi
   140010959:	ja     0x140010929
   14001095b:	mov    rbp,rsi
   14001095e:	shr    rbp,1
   140010961:	je     0x1400109a4
   140010963:	test   sil,0x1
   140010967:	lea    rsi,[rbp-0x1]
   14001096b:	mov    rcx,r15
   14001096e:	cmovne rsi,rbp
   140010972:	mov    r12,rsi
   140010975:	imul   r12,r13
   140010979:	add    r12,rbx
   14001097c:	mov    rdx,r12
   14001097f:	call   QWORD PTR [rsp+0x60]
   140010983:	test   eax,eax
   140010985:	je     0x14001099f
   140010987:	jns    0x140010991
   140010989:	mov    rdi,r12
   14001098c:	sub    rdi,r13
   14001098f:	jmp    0x140010998
   140010991:	lea    rbx,[r12+r13*1]
   140010995:	mov    rsi,rbp
   140010998:	cmp    rbx,rdi
   14001099b:	jbe    0x14001095b
   14001099d:	jmp    0x140010929
   14001099f:	mov    rax,r12
   1400109a2:	jmp    0x14001092b
   1400109a4:	xor    r12d,r12d
   1400109a7:	test   rsi,rsi
   1400109aa:	je     0x140010929
   1400109b0:	mov    rdx,rbx
   1400109b3:	mov    rcx,r15
   1400109b6:	call   QWORD PTR [rsp+0x60]
   1400109ba:	test   eax,eax
   1400109bc:	cmovne rbx,r12
   1400109c0:	mov    rax,rbx
   1400109c3:	jmp    0x14001092b
   1400109c8:	int3   
   1400109c9:	int3   
   1400109ca:	int3   
   1400109cb:	int3   
   1400109cc:	int3   
   1400109cd:	int3   
   1400109ce:	int3   
   1400109cf:	int3   
   1400109d0:	mov    QWORD PTR [rsp+0x8],rbx
   1400109d5:	mov    QWORD PTR [rsp+0x10],rsi
   1400109da:	push   rdi
   1400109db:	sub    rsp,0x20
   1400109df:	mov    rbx,r9
   1400109e2:	mov    rsi,r8
   1400109e5:	mov    rdi,rdx
   1400109e8:	test   r9,r9
   1400109eb:	jne    0x1400109f1
   1400109ed:	xor    eax,eax
   1400109ef:	jmp    0x140010a47
   1400109f1:	test   rcx,rcx
   1400109f4:	jne    0x140010a0b
   1400109f6:	call   0x14000baac
   1400109fb:	mov    ebx,0x16
   140010a00:	mov    DWORD PTR [rax],ebx
   140010a02:	call   0x14000ba38
   140010a07:	mov    eax,ebx
   140010a09:	jmp    0x140010a47
   140010a0b:	test   r8,r8
   140010a0e:	je     0x140010a22
   140010a10:	cmp    rdx,rbx
   140010a13:	jb     0x140010a22
   140010a15:	mov    r8,rbx
   140010a18:	mov    rdx,rsi
   140010a1b:	call   0x14000cb80
   140010a20:	jmp    0x1400109ed
   140010a22:	mov    r8,rdx
   140010a25:	xor    edx,edx
   140010a27:	call   0x14000db90
   140010a2c:	test   rsi,rsi
   140010a2f:	je     0x1400109f6
   140010a31:	cmp    rdi,rbx
   140010a34:	jae    0x140010a42
   140010a36:	call   0x14000baac
   140010a3b:	mov    ebx,0x22
   140010a40:	jmp    0x140010a00
   140010a42:	mov    eax,0x16
   140010a47:	mov    rbx,QWORD PTR [rsp+0x30]
   140010a4c:	mov    rsi,QWORD PTR [rsp+0x38]
   140010a51:	add    rsp,0x20
   140010a55:	pop    rdi
   140010a56:	ret    
   140010a57:	int3   
   140010a58:	int3   
   140010a59:	int3   
   140010a5a:	int3   
   140010a5b:	int3   
   140010a5c:	int3   
   140010a5d:	int3   
   140010a5e:	int3   
   140010a5f:	int3   
   140010a60:	mov    rax,rsp
   140010a63:	mov    QWORD PTR [rax+0x10],rbx
   140010a67:	mov    QWORD PTR [rax+0x18],rbp
   140010a6b:	mov    QWORD PTR [rax+0x20],rsi
   140010a6f:	mov    DWORD PTR [rax+0x8],ecx
   140010a72:	push   rdi
   140010a73:	sub    rsp,0x20
   140010a77:	mov    rcx,rdx
   140010a7a:	mov    rbx,rdx
   140010a7d:	call   0x1400125e4
   140010a82:	mov    ecx,DWORD PTR [rbx+0x18]
   140010a85:	movsxd rsi,eax
   140010a88:	test   cl,0x82
   140010a8b:	jne    0x140010aa4
   140010a8d:	call   0x14000baac
   140010a92:	mov    DWORD PTR [rax],0x9
   140010a98:	or     DWORD PTR [rbx+0x18],0x20
   140010a9c:	or     eax,0xffffffff
   140010a9f:	jmp    0x140010bd8
   140010aa4:	test   cl,0x40
   140010aa7:	je     0x140010ab6
   140010aa9:	call   0x14000baac
   140010aae:	mov    DWORD PTR [rax],0x22
   140010ab4:	jmp    0x140010a98
   140010ab6:	xor    edi,edi
   140010ab8:	test   cl,0x1
   140010abb:	je     0x140010ad6
   140010abd:	mov    DWORD PTR [rbx+0x8],edi
   140010ac0:	test   cl,0x10
   140010ac3:	je     0x140010b52
   140010ac9:	mov    rax,QWORD PTR [rbx+0x10]
   140010acd:	and    ecx,0xfffffffe
   140010ad0:	mov    QWORD PTR [rbx],rax
   140010ad3:	mov    DWORD PTR [rbx+0x18],ecx
   140010ad6:	mov    eax,DWORD PTR [rbx+0x18]
   140010ad9:	mov    DWORD PTR [rbx+0x8],edi
   140010adc:	and    eax,0xffffffef
   140010adf:	or     eax,0x2
   140010ae2:	mov    DWORD PTR [rbx+0x18],eax
   140010ae5:	test   eax,0x10c
   140010aea:	jne    0x140010b1b
   140010aec:	call   0x1400123a0
   140010af1:	add    rax,0x30
   140010af5:	cmp    rbx,rax
   140010af8:	je     0x140010b08
   140010afa:	call   0x1400123a0
   140010aff:	add    rax,0x60
   140010b03:	cmp    rbx,rax
   140010b06:	jne    0x140010b13
   140010b08:	mov    ecx,esi
   140010b0a:	call   0x140012338
   140010b0f:	test   eax,eax
   140010b11:	jne    0x140010b1b
   140010b13:	mov    rcx,rbx
   140010b16:	call   0x1400122dc
   140010b1b:	test   DWORD PTR [rbx+0x18],0x108
   140010b22:	je     0x140010bb5
   140010b28:	mov    ebp,DWORD PTR [rbx]
   140010b2a:	mov    rdx,QWORD PTR [rbx+0x10]
   140010b2e:	sub    ebp,DWORD PTR [rbx+0x10]
   140010b31:	lea    rax,[rdx+0x1]
   140010b35:	mov    QWORD PTR [rbx],rax
   140010b38:	mov    eax,DWORD PTR [rbx+0x24]
   140010b3b:	dec    eax
   140010b3d:	mov    DWORD PTR [rbx+0x8],eax
   140010b40:	test   ebp,ebp
   140010b42:	jle    0x140010b5d
   140010b44:	mov    r8d,ebp
   140010b47:	mov    ecx,esi
   140010b49:	call   0x1400121f4
   140010b4e:	mov    edi,eax
   140010b50:	jmp    0x140010ba9
   140010b52:	or     ecx,0x20
   140010b55:	mov    DWORD PTR [rbx+0x18],ecx
   140010b58:	jmp    0x140010a9c
   140010b5d:	cmp    esi,0xffffffff
   140010b60:	je     0x140010b85
   140010b62:	cmp    esi,0xfffffffe
   140010b65:	je     0x140010b85
   140010b67:	mov    rcx,rsi
   140010b6a:	mov    rax,rsi
   140010b6d:	lea    rdx,[rip+0x7e6c]        # 0x1400189e0
   140010b74:	and    ecx,0x1f
   140010b77:	sar    rax,0x5
   140010b7b:	imul   rcx,rcx,0x58
   140010b7f:	add    rcx,QWORD PTR [rdx+rax*8]
   140010b83:	jmp    0x140010b8c
   140010b85:	lea    rcx,[rip+0x4484]        # 0x140015010
   140010b8c:	test   BYTE PTR [rcx+0x8],0x20
   140010b90:	je     0x140010ba9
   140010b92:	xor    edx,edx
   140010b94:	mov    ecx,esi
   140010b96:	lea    r8d,[rdx+0x2]
   140010b9a:	call   0x1400119a0
   140010b9f:	cmp    rax,0xffffffffffffffff
   140010ba3:	je     0x140010a98
   140010ba9:	mov    rcx,QWORD PTR [rbx+0x10]
   140010bad:	mov    al,BYTE PTR [rsp+0x30]
   140010bb1:	mov    BYTE PTR [rcx],al
   140010bb3:	jmp    0x140010bcb
   140010bb5:	mov    ebp,0x1
   140010bba:	lea    rdx,[rsp+0x30]
   140010bbf:	mov    ecx,esi
   140010bc1:	mov    r8d,ebp
   140010bc4:	call   0x1400121f4
   140010bc9:	mov    edi,eax
   140010bcb:	cmp    edi,ebp
   140010bcd:	jne    0x140010a98
   140010bd3:	movzx  eax,BYTE PTR [rsp+0x30]
   140010bd8:	mov    rbx,QWORD PTR [rsp+0x38]
   140010bdd:	mov    rbp,QWORD PTR [rsp+0x40]
   140010be2:	mov    rsi,QWORD PTR [rsp+0x48]
   140010be7:	add    rsp,0x20
   140010beb:	pop    rdi
   140010bec:	ret    
   140010bed:	int3   
   140010bee:	int3   
   140010bef:	int3   
   140010bf0:	int3   
   140010bf1:	int3   
   140010bf2:	int3   
   140010bf3:	int3   
   140010bf4:	rex push rbx
   140010bf6:	sub    rsp,0x20
   140010bfa:	test   BYTE PTR [rdx+0x18],0x40
   140010bfe:	mov    rbx,r8
   140010c01:	je     0x140010c0f
   140010c03:	cmp    QWORD PTR [rdx+0x10],0x0
   140010c08:	jne    0x140010c0f
   140010c0a:	inc    DWORD PTR [r8]
   140010c0d:	jmp    0x140010c25
   140010c0f:	call   0x140012610
   140010c14:	mov    ecx,0xffff
   140010c19:	cmp    ax,cx
   140010c1c:	jne    0x140010c23
   140010c1e:	or     DWORD PTR [rbx],0xffffffff
   140010c21:	jmp    0x140010c25
   140010c23:	inc    DWORD PTR [rbx]
   140010c25:	add    rsp,0x20
   140010c29:	pop    rbx
   140010c2a:	ret    
   140010c2b:	int3   
   140010c2c:	int3   
   140010c2d:	int3   
   140010c2e:	int3   
   140010c2f:	int3   
   140010c30:	int3   
   140010c31:	int3   
   140010c32:	int3   
   140010c33:	int3   
   140010c34:	test   edx,edx
   140010c36:	jle    0x140010c84
   140010c38:	mov    QWORD PTR [rsp+0x8],rbx
   140010c3d:	mov    QWORD PTR [rsp+0x10],rbp
   140010c42:	mov    QWORD PTR [rsp+0x18],rsi
   140010c47:	push   rdi
   140010c48:	sub    rsp,0x20
   140010c4c:	mov    rdi,r9
   140010c4f:	mov    rsi,r8
   140010c52:	mov    ebx,edx
   140010c54:	movzx  ebp,cx
   140010c57:	mov    r8,rdi
   140010c5a:	mov    rdx,rsi
   140010c5d:	movzx  ecx,bp
   140010c60:	dec    ebx
   140010c62:	call   0x140010bf4
   140010c67:	cmp    DWORD PTR [rdi],0xffffffff
   140010c6a:	je     0x140010c70
   140010c6c:	test   ebx,ebx
   140010c6e:	jg     0x140010c57
   140010c70:	mov    rbx,QWORD PTR [rsp+0x30]
   140010c75:	mov    rbp,QWORD PTR [rsp+0x38]
   140010c7a:	mov    rsi,QWORD PTR [rsp+0x40]
   140010c7f:	add    rsp,0x20
   140010c83:	pop    rdi
   140010c84:	ret    
   140010c85:	int3   
   140010c86:	int3   
   140010c87:	int3   
   140010c88:	int3   
   140010c89:	int3   
   140010c8a:	int3   
   140010c8b:	int3   
   140010c8c:	mov    QWORD PTR [rsp+0x8],rbx
   140010c91:	mov    QWORD PTR [rsp+0x10],rbp
   140010c96:	mov    QWORD PTR [rsp+0x18],rsi
   140010c9b:	push   rdi
   140010c9c:	push   r12
   140010c9e:	push   r13
   140010ca0:	sub    rsp,0x20
   140010ca4:	test   BYTE PTR [r8+0x18],0x40
   140010ca9:	mov    rbx,QWORD PTR [rsp+0x60]
   140010cae:	mov    rdi,r9
   140010cb1:	mov    r12d,DWORD PTR [rbx]
   140010cb4:	mov    rbp,r8
   140010cb7:	mov    esi,edx
   140010cb9:	mov    r13,rcx
   140010cbc:	je     0x140010cca
   140010cbe:	cmp    QWORD PTR [r8+0x10],0x0
   140010cc3:	jne    0x140010cca
   140010cc5:	add    DWORD PTR [r9],edx
   140010cc8:	jmp    0x140010d0d
   140010cca:	and    DWORD PTR [rbx],0x0
   140010ccd:	test   edx,edx
   140010ccf:	jle    0x140010d0a
   140010cd1:	movzx  ecx,WORD PTR [r13+0x0]
   140010cd6:	mov    r8,rdi
   140010cd9:	mov    rdx,rbp
   140010cdc:	dec    esi
   140010cde:	call   0x140010bf4
   140010ce3:	add    r13,0x2
   140010ce7:	cmp    DWORD PTR [rdi],0xffffffff
   140010cea:	jne    0x140010d01
   140010cec:	cmp    DWORD PTR [rbx],0x2a
   140010cef:	jne    0x140010d05
   140010cf1:	mov    ecx,0x3f
   140010cf6:	mov    r8,rdi
   140010cf9:	mov    rdx,rbp
   140010cfc:	call   0x140010bf4
   140010d01:	test   esi,esi
   140010d03:	jg     0x140010cd1
   140010d05:	cmp    DWORD PTR [rbx],0x0
   140010d08:	jne    0x140010d0d
   140010d0a:	mov    DWORD PTR [rbx],r12d
   140010d0d:	mov    rbx,QWORD PTR [rsp+0x40]
   140010d12:	mov    rbp,QWORD PTR [rsp+0x48]
   140010d17:	mov    rsi,QWORD PTR [rsp+0x50]
   140010d1c:	add    rsp,0x20
   140010d20:	pop    r13
   140010d22:	pop    r12
   140010d24:	pop    rdi
   140010d25:	ret    
   140010d26:	int3   
   140010d27:	int3   
   140010d28:	int3   
   140010d29:	int3   
   140010d2a:	int3   
   140010d2b:	int3   
   140010d2c:	mov    QWORD PTR [rsp+0x18],rbx
   140010d31:	push   rbp
   140010d32:	push   rsi
   140010d33:	push   rdi
   140010d34:	push   r12
   140010d36:	push   r13
   140010d38:	push   r14
   140010d3a:	push   r15
   140010d3c:	lea    rbp,[rsp-0x3e0]
   140010d44:	sub    rsp,0x4e0
   140010d4b:	mov    rax,QWORD PTR [rip+0x431e]        # 0x140015070
   140010d52:	xor    rax,rsp
   140010d55:	mov    QWORD PTR [rbp+0x3d0],rax
   140010d5c:	xor    eax,eax
   140010d5e:	mov    rbx,rcx
   140010d61:	mov    QWORD PTR [rsp+0x78],rcx
   140010d66:	mov    QWORD PTR [rbp-0x80],rdx
   140010d6a:	lea    rcx,[rbp-0x70]
   140010d6e:	mov    rdx,r8
   140010d71:	mov    r14,r9
   140010d74:	mov    QWORD PTR [rsp+0x50],r9
   140010d79:	mov    DWORD PTR [rsp+0x74],eax
   140010d7d:	mov    r12d,eax
   140010d80:	mov    DWORD PTR [rsp+0x5c],eax
   140010d84:	mov    edi,eax
   140010d86:	mov    DWORD PTR [rsp+0x44],eax
   140010d8a:	mov    DWORD PTR [rsp+0x48],eax
   140010d8e:	mov    DWORD PTR [rsp+0x70],eax
   140010d92:	mov    DWORD PTR [rsp+0x58],eax
   140010d96:	call   0x14000d5a4
   140010d9b:	call   0x14000baac
   140010da0:	xor    r10d,r10d
   140010da3:	mov    QWORD PTR [rbp-0x48],rax
   140010da7:	test   rbx,rbx
   140010daa:	jne    0x140010dd8
   140010dac:	call   0x14000baac
   140010db1:	mov    DWORD PTR [rax],0x16
   140010db7:	call   0x14000ba38
   140010dbc:	xor    r11d,r11d
   140010dbf:	cmp    BYTE PTR [rbp-0x58],r11b
   140010dc3:	je     0x140010dd0
   140010dc5:	mov    rax,QWORD PTR [rbp-0x60]
   140010dc9:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140010dd0:	or     eax,0xffffffff
   140010dd3:	jmp    0x1400117f6
   140010dd8:	mov    r8,QWORD PTR [rbp-0x80]
   140010ddc:	test   r8,r8
   140010ddf:	je     0x140010dac
   140010de1:	movzx  r13d,WORD PTR [r8]
   140010de5:	mov    esi,r10d
   140010de8:	mov    DWORD PTR [rsp+0x40],r10d
   140010ded:	mov    r15d,r10d
   140010df0:	mov    edx,r10d
   140010df3:	mov    QWORD PTR [rbp-0x50],r10
   140010df7:	test   r13w,r13w
   140010dfb:	je     0x1400117e3
   140010e01:	mov    rbx,QWORD PTR [rbp-0x48]
   140010e05:	mov    ecx,0x58
   140010e0a:	mov    r9d,0x200
   140010e10:	lea    r11d,[rcx-0x38]
   140010e14:	add    r8,0x2
   140010e18:	mov    QWORD PTR [rbp-0x80],r8
   140010e1c:	test   esi,esi
   140010e1e:	js     0x1400117e3
   140010e24:	movzx  eax,r13w
   140010e28:	sub    ax,r11w
   140010e2c:	cmp    ax,cx
   140010e2f:	ja     0x140010e46
   140010e31:	lea    rcx,[rip+0xffffffffffff7978]        # 0x1400087b0
   140010e38:	movzx  eax,r13w
   140010e3c:	movsx  ecx,BYTE PTR [rax+rcx*1-0x20]
   140010e41:	and    ecx,0xf
   140010e44:	jmp    0x140010e49
   140010e46:	mov    ecx,r10d
   140010e49:	movsxd rax,edx
   140010e4c:	movsxd rcx,ecx
   140010e4f:	lea    rdx,[rax+rcx*8]
   140010e53:	lea    rax,[rip+0xffffffffffff7956]        # 0x1400087b0
   140010e5a:	movsx  edx,BYTE PTR [rdx+rax*1]
   140010e5e:	sar    edx,0x4
   140010e61:	mov    DWORD PTR [rsp+0x6c],edx
   140010e65:	mov    ecx,edx
   140010e67:	test   edx,edx
   140010e69:	je     0x14001168a
   140010e6f:	dec    ecx
   140010e71:	je     0x14001179a
   140010e77:	dec    ecx
   140010e79:	je     0x14001174d
   140010e7f:	dec    ecx
   140010e81:	je     0x140011702
   140010e87:	dec    ecx
   140010e89:	je     0x1400116f5
   140010e8f:	dec    ecx
   140010e91:	je     0x1400116b1
   140010e97:	dec    ecx
   140010e99:	je     0x140011597
   140010e9f:	dec    ecx
   140010ea1:	jne    0x1400117d0
   140010ea7:	movzx  eax,r13w
   140010eab:	mov    ecx,0x64
   140010eb0:	cmp    eax,ecx
   140010eb2:	jg     0x1400110c0
   140010eb8:	je     0x1400111e2
   140010ebe:	cmp    eax,0x41
   140010ec1:	je     0x14001108d
   140010ec7:	cmp    eax,0x43
   140010eca:	je     0x140011018
   140010ed0:	cmp    eax,0x45
   140010ed3:	je     0x14001108d
   140010ed9:	cmp    eax,0x47
   140010edc:	je     0x14001108d
   140010ee2:	cmp    eax,0x53
   140010ee5:	je     0x140010f73
   140010eeb:	cmp    eax,0x58
   140010eee:	je     0x140011162
   140010ef4:	cmp    eax,0x5a
   140010ef7:	je     0x140010f10
   140010ef9:	cmp    eax,0x61
   140010efc:	je     0x140011098
   140010f02:	cmp    eax,0x63
   140010f05:	je     0x140011024
   140010f0b:	jmp    0x140010fe0
   140010f10:	mov    rax,QWORD PTR [r14]
   140010f13:	add    r14,0x8
   140010f17:	mov    QWORD PTR [rsp+0x50],r14
   140010f1c:	test   rax,rax
   140010f1f:	je     0x140010f5c
   140010f21:	mov    rbx,QWORD PTR [rax+0x8]
   140010f25:	test   rbx,rbx
   140010f28:	je     0x140010f5c
   140010f2a:	mov    edi,0x2d
   140010f2f:	bt     r12d,0xb
   140010f34:	jae    0x140010f4e
   140010f36:	movsx  eax,WORD PTR [rax]
   140010f39:	mov    DWORD PTR [rsp+0x58],0x1
   140010f41:	cdq    
   140010f42:	sub    eax,edx
   140010f44:	sar    eax,1
   140010f46:	mov    r15d,eax
   140010f49:	jmp    0x140010fe5
   140010f4e:	movsx  r15d,WORD PTR [rax]
   140010f52:	mov    DWORD PTR [rsp+0x58],r10d
   140010f57:	jmp    0x140010fe5
   140010f5c:	mov    rbx,QWORD PTR [rip+0x53ad]        # 0x140016310
   140010f63:	mov    rcx,rbx
   140010f66:	call   0x14000c560
   140010f6b:	xor    r10d,r10d
   140010f6e:	mov    r15,rax
   140010f71:	jmp    0x140010fe0
   140010f73:	test   r12d,0x830
   140010f7a:	jne    0x140010f7f
   140010f7c:	or     r12d,r11d
   140010f7f:	cmp    DWORD PTR [rsp+0x44],0xffffffff
   140010f84:	mov    rbx,QWORD PTR [r14]
   140010f87:	mov    eax,0x7fffffff
   140010f8c:	cmove  edi,eax
   140010f8f:	add    r14,0x8
   140010f93:	mov    QWORD PTR [rsp+0x50],r14
   140010f98:	test   r11b,r12b
   140010f9b:	je     0x140011122
   140010fa1:	test   rbx,rbx
   140010fa4:	mov    r15d,r10d
   140010fa7:	cmove  rbx,QWORD PTR [rip+0x5361]        # 0x140016310
   140010faf:	mov    rsi,rbx
   140010fb2:	test   edi,edi
   140010fb4:	jle    0x140010fdc
   140010fb6:	cmp    BYTE PTR [rsi],r10b
   140010fb9:	je     0x140010fdc
   140010fbb:	movzx  ecx,BYTE PTR [rsi]
   140010fbe:	lea    rdx,[rbp-0x70]
   140010fc2:	call   0x14000ee94
   140010fc7:	xor    r10d,r10d
   140010fca:	test   eax,eax
   140010fcc:	je     0x140010fd1
   140010fce:	inc    rsi
   140010fd1:	inc    r15d
   140010fd4:	inc    rsi
   140010fd7:	cmp    r15d,edi
   140010fda:	jl     0x140010fb6
   140010fdc:	mov    esi,DWORD PTR [rsp+0x40]
   140010fe0:	mov    edi,0x2d
   140010fe5:	cmp    DWORD PTR [rsp+0x70],r10d
   140010fea:	jne    0x140011566
   140010ff0:	test   r12b,0x40
   140010ff4:	je     0x14001143f
   140010ffa:	bt     r12d,0x8
   140010fff:	jae    0x140011411
   140011005:	mov    WORD PTR [rsp+0x60],di
   14001100a:	mov    edi,0x1
   14001100f:	mov    DWORD PTR [rsp+0x48],edi
   140011013:	jmp    0x140011443
   140011018:	test   r12d,0x830
   14001101f:	jne    0x140011024
   140011021:	or     r12d,r11d
   140011024:	movzx  eax,WORD PTR [r14]
   140011028:	add    r14,0x8
   14001102c:	mov    DWORD PTR [rsp+0x58],0x1
   140011034:	mov    QWORD PTR [rsp+0x50],r14
   140011039:	mov    WORD PTR [rsp+0x64],ax
   14001103e:	test   r11b,r12b
   140011041:	je     0x14001107a
   140011043:	mov    BYTE PTR [rsp+0x68],al
   140011047:	mov    rax,QWORD PTR [rbp-0x70]
   14001104b:	mov    BYTE PTR [rsp+0x69],r10b
   140011050:	movsxd r8,DWORD PTR [rax+0x10c]
   140011057:	lea    r9,[rbp-0x70]
   14001105b:	lea    rdx,[rsp+0x68]
   140011060:	lea    rcx,[rbp-0x30]
   140011064:	call   0x140012838
   140011069:	xor    r10d,r10d
   14001106c:	test   eax,eax
   14001106e:	jns    0x14001107e
   140011070:	mov    DWORD PTR [rsp+0x70],0x1
   140011078:	jmp    0x14001107e
   14001107a:	mov    WORD PTR [rbp-0x30],ax
   14001107e:	lea    rbx,[rbp-0x30]
   140011082:	mov    r15d,0x1
   140011088:	jmp    0x140010fe0
   14001108d:	mov    DWORD PTR [rbp-0x78],0x1
   140011094:	add    r13w,r11w
   140011098:	mov    ecx,0x67
   14001109d:	or     r12d,0x40
   1400110a1:	lea    rbx,[rbp-0x30]
   1400110a5:	mov    esi,r9d
   1400110a8:	test   edi,edi
   1400110aa:	jns    0x140011302
   1400110b0:	mov    r15d,0x6
   1400110b6:	mov    DWORD PTR [rsp+0x44],r15d
   1400110bb:	jmp    0x140011355
   1400110c0:	cmp    eax,0x65
   1400110c3:	jl     0x140010fe0
   1400110c9:	mov    ecx,0x67
   1400110ce:	cmp    eax,ecx
   1400110d0:	jle    0x14001109d
   1400110d2:	mov    ecx,0x69
   1400110d7:	cmp    eax,ecx
   1400110d9:	je     0x1400111e2
   1400110df:	cmp    eax,0x6e
   1400110e2:	je     0x1400111a9
   1400110e8:	mov    ecx,0x6f
   1400110ed:	cmp    eax,ecx
   1400110ef:	je     0x140011193
   1400110f5:	cmp    eax,0x70
   1400110f8:	je     0x140011158
   1400110fa:	cmp    eax,0x73
   1400110fd:	je     0x140010f7f
   140011103:	mov    ecx,0x75
   140011108:	cmp    eax,ecx
   14001110a:	je     0x1400111e6
   140011110:	mov    ecx,0x78
   140011115:	cmp    eax,ecx
   140011117:	jne    0x140010fe0
   14001111d:	lea    eax,[rcx-0x51]
   140011120:	jmp    0x140011167
   140011122:	test   rbx,rbx
   140011125:	mov    DWORD PTR [rsp+0x58],0x1
   14001112d:	cmove  rbx,QWORD PTR [rip+0x51e3]        # 0x140016318
   140011135:	mov    rax,rbx
   140011138:	jmp    0x140011146
   14001113a:	dec    edi
   14001113c:	cmp    WORD PTR [rax],r10w
   140011140:	je     0x14001114a
   140011142:	add    rax,0x2
   140011146:	test   edi,edi
   140011148:	jne    0x14001113a
   14001114a:	sub    rax,rbx
   14001114d:	sar    rax,1
   140011150:	mov    r15d,eax
   140011153:	jmp    0x140010fe0
   140011158:	mov    edi,0x10
   14001115d:	bts    r12d,0xf
   140011162:	mov    eax,0x7
   140011167:	mov    DWORD PTR [rsp+0x74],eax
   14001116b:	mov    r9d,0x10
   140011171:	mov    r13d,0x200
   140011177:	test   r12b,r12b
   14001117a:	jns    0x1400111f2
   14001117c:	lea    ecx,[r9+0x20]
   140011180:	add    ax,0x51
   140011184:	lea    edx,[rcx-0x2e]
   140011187:	mov    WORD PTR [rsp+0x60],cx
   14001118c:	mov    WORD PTR [rsp+0x62],ax
   140011191:	jmp    0x1400111f6
   140011193:	mov    r9d,0x8
   140011199:	test   r12b,r12b
   14001119c:	jns    0x1400111ec
   14001119e:	mov    r13d,0x200
   1400111a4:	or     r12d,r13d
   1400111a7:	jmp    0x1400111f2
   1400111a9:	mov    rdi,QWORD PTR [r14]
   1400111ac:	add    r14,0x8
   1400111b0:	mov    QWORD PTR [rsp+0x50],r14
   1400111b5:	call   0x140012818
   1400111ba:	xor    r10d,r10d
   1400111bd:	test   eax,eax
   1400111bf:	je     0x140010dac
   1400111c5:	lea    r11d,[r10+0x20]
   1400111c9:	test   r11b,r12b
   1400111cc:	je     0x1400111d3
   1400111ce:	mov    WORD PTR [rdi],si
   1400111d1:	jmp    0x1400111d5
   1400111d3:	mov    DWORD PTR [rdi],esi
   1400111d5:	mov    DWORD PTR [rsp+0x70],0x1
   1400111dd:	jmp    0x14001156c
   1400111e2:	or     r12d,0x40
   1400111e6:	mov    r9d,0xa
   1400111ec:	mov    r13d,0x200
   1400111f2:	mov    edx,DWORD PTR [rsp+0x48]
   1400111f6:	mov    eax,0x8000
   1400111fb:	test   eax,r12d
   1400111fe:	je     0x140011209
   140011200:	mov    r8,QWORD PTR [r14]
   140011203:	add    r14,0x8
   140011207:	jmp    0x140011242
   140011209:	bt     r12d,0xc
   14001120e:	jb     0x140011200
   140011210:	add    r14,0x8
   140011214:	test   r11b,r12b
   140011217:	je     0x140011232
   140011219:	mov    QWORD PTR [rsp+0x50],r14
   14001121e:	test   r12b,0x40
   140011222:	je     0x14001122b
   140011224:	movsx  r8,WORD PTR [r14-0x8]
   140011229:	jmp    0x140011247
   14001122b:	movzx  r8d,WORD PTR [r14-0x8]
   140011230:	jmp    0x140011247
   140011232:	test   r12b,0x40
   140011236:	je     0x14001123e
   140011238:	movsxd r8,DWORD PTR [r14-0x8]
   14001123c:	jmp    0x140011242
   14001123e:	mov    r8d,DWORD PTR [r14-0x8]
   140011242:	mov    QWORD PTR [rsp+0x50],r14
   140011247:	test   r12b,0x40
   14001124b:	je     0x14001125a
   14001124d:	test   r8,r8
   140011250:	jns    0x14001125a
   140011252:	neg    r8
   140011255:	bts    r12d,0x8
   14001125a:	test   eax,r12d
   14001125d:	jne    0x140011269
   14001125f:	bt     r12d,0xc
   140011264:	jb     0x140011269
   140011266:	mov    r8d,r8d
   140011269:	test   edi,edi
   14001126b:	jns    0x140011274
   14001126d:	mov    edi,0x1
   140011272:	jmp    0x14001127f
   140011274:	and    r12d,0xfffffff7
   140011278:	cmp    edi,r13d
   14001127b:	cmovg  edi,r13d
   14001127f:	mov    esi,DWORD PTR [rsp+0x74]
   140011283:	mov    rax,r8
   140011286:	lea    rbx,[rbp+0x1cf]
   14001128d:	neg    rax
   140011290:	sbb    ecx,ecx
   140011292:	and    ecx,edx
   140011294:	mov    DWORD PTR [rsp+0x48],ecx
   140011298:	mov    ecx,edi
   14001129a:	dec    edi
   14001129c:	test   ecx,ecx
   14001129e:	jg     0x1400112a5
   1400112a0:	test   r8,r8
   1400112a3:	je     0x1400112c4
   1400112a5:	xor    edx,edx
   1400112a7:	mov    rax,r8
   1400112aa:	movsxd rcx,r9d
   1400112ad:	div    rcx
   1400112b0:	mov    r8,rax
   1400112b3:	lea    eax,[rdx+0x30]
   1400112b6:	cmp    eax,0x39
   1400112b9:	jle    0x1400112bd
   1400112bb:	add    eax,esi
   1400112bd:	mov    BYTE PTR [rbx],al
   1400112bf:	dec    rbx
   1400112c2:	jmp    0x140011298
   1400112c4:	mov    esi,DWORD PTR [rsp+0x40]
   1400112c8:	lea    rax,[rbp+0x1cf]
   1400112cf:	mov    DWORD PTR [rsp+0x44],edi
   1400112d3:	sub    eax,ebx
   1400112d5:	inc    rbx
   1400112d8:	mov    r15d,eax
   1400112db:	test   r13d,r12d
   1400112de:	je     0x140010fe0
   1400112e4:	test   eax,eax
   1400112e6:	mov    eax,0x30
   1400112eb:	je     0x1400112f5
   1400112ed:	cmp    BYTE PTR [rbx],al
   1400112ef:	je     0x140010fe0
   1400112f5:	dec    rbx
   1400112f8:	inc    r15d
   1400112fb:	mov    BYTE PTR [rbx],al
   1400112fd:	jmp    0x140010fe0
   140011302:	jne    0x140011315
   140011304:	cmp    r13w,cx
   140011308:	jne    0x14001134b
   14001130a:	mov    r15d,0x1
   140011310:	jmp    0x1400110b6
   140011315:	cmp    edi,r9d
   140011318:	mov    r15d,0xa3
   14001131e:	cmovg  edi,r9d
   140011322:	mov    DWORD PTR [rsp+0x44],edi
   140011326:	cmp    edi,r15d
   140011329:	jle    0x140011352
   14001132b:	add    edi,0x15d
   140011331:	movsxd rcx,edi
   140011334:	call   0x14000c9cc
   140011339:	mov    QWORD PTR [rbp-0x50],rax
   14001133d:	test   rax,rax
   140011340:	je     0x1400110b6
   140011346:	mov    rbx,rax
   140011349:	mov    esi,edi
   14001134b:	mov    r15d,DWORD PTR [rsp+0x44]
   140011350:	jmp    0x140011355
   140011352:	mov    r15d,edi
   140011355:	mov    rax,QWORD PTR [r14]
   140011358:	mov    rcx,QWORD PTR [rip+0x4151]        # 0x1400154b0
   14001135f:	add    r14,0x8
   140011363:	mov    QWORD PTR [rsp+0x50],r14
   140011368:	movsx  edi,r13b
   14001136c:	movsxd rsi,esi
   14001136f:	mov    QWORD PTR [rbp-0x40],rax
   140011373:	call   QWORD PTR [rip+0xfffffffffffefd87]        # 0x140001100
   140011379:	lea    rcx,[rbp-0x70]
   14001137d:	mov    QWORD PTR [rsp+0x30],rcx
   140011382:	mov    ecx,DWORD PTR [rbp-0x78]
   140011385:	mov    r9d,edi
   140011388:	mov    DWORD PTR [rsp+0x28],ecx
   14001138c:	lea    rcx,[rbp-0x40]
   140011390:	mov    r8,rsi
   140011393:	mov    rdx,rbx
   140011396:	mov    DWORD PTR [rsp+0x20],r15d
   14001139b:	call   rax
   14001139d:	mov    edi,r12d
   1400113a0:	and    edi,0x80
   1400113a6:	je     0x1400113c3
   1400113a8:	test   r15d,r15d
   1400113ab:	jne    0x1400113c3
   1400113ad:	mov    rcx,QWORD PTR [rip+0x4114]        # 0x1400154c8
   1400113b4:	call   QWORD PTR [rip+0xfffffffffffefd46]        # 0x140001100
   1400113ba:	lea    rdx,[rbp-0x70]
   1400113be:	mov    rcx,rbx
   1400113c1:	call   rax
   1400113c3:	mov    ecx,0x67
   1400113c8:	cmp    r13w,cx
   1400113cc:	jne    0x1400113e8
   1400113ce:	test   edi,edi
   1400113d0:	jne    0x1400113e8
   1400113d2:	mov    rcx,QWORD PTR [rip+0x40e7]        # 0x1400154c0
   1400113d9:	call   QWORD PTR [rip+0xfffffffffffefd21]        # 0x140001100
   1400113df:	lea    rdx,[rbp-0x70]
   1400113e3:	mov    rcx,rbx
   1400113e6:	call   rax
   1400113e8:	mov    edi,0x2d
   1400113ed:	cmp    BYTE PTR [rbx],dil
   1400113f0:	jne    0x1400113fa
   1400113f2:	bts    r12d,0x8
   1400113f7:	inc    rbx
   1400113fa:	mov    rcx,rbx
   1400113fd:	call   0x14000c560
   140011402:	mov    esi,DWORD PTR [rsp+0x40]
   140011406:	xor    r10d,r10d
   140011409:	mov    r15d,eax
   14001140c:	jmp    0x140010fe5
   140011411:	test   r12b,0x1
   140011415:	je     0x140011426
   140011417:	mov    eax,0x2b
   14001141c:	mov    WORD PTR [rsp+0x60],ax
   140011421:	jmp    0x14001100a
   140011426:	test   r12b,0x2
   14001142a:	je     0x14001143f
   14001142c:	mov    eax,0x20
   140011431:	mov    WORD PTR [rsp+0x60],ax
   140011436:	lea    edi,[rax-0x1f]
   140011439:	mov    DWORD PTR [rsp+0x48],edi
   14001143d:	jmp    0x140011448
   14001143f:	mov    edi,DWORD PTR [rsp+0x48]
   140011443:	mov    eax,0x20
   140011448:	mov    r14d,DWORD PTR [rsp+0x5c]
   14001144d:	mov    r13,QWORD PTR [rsp+0x78]
   140011452:	sub    r14d,r15d
   140011455:	sub    r14d,edi
   140011458:	test   r12b,0xc
   14001145c:	jne    0x140011470
   14001145e:	lea    r9,[rsp+0x40]
   140011463:	mov    ecx,eax
   140011465:	mov    r8,r13
   140011468:	mov    edx,r14d
   14001146b:	call   0x140010c34
   140011470:	mov    rsi,QWORD PTR [rbp-0x48]
   140011474:	lea    r9,[rsp+0x40]
   140011479:	lea    rcx,[rsp+0x60]
   14001147e:	mov    r8,r13
   140011481:	mov    edx,edi
   140011483:	mov    QWORD PTR [rsp+0x20],rsi
   140011488:	call   0x140010c8c
   14001148d:	test   r12b,0x8
   140011491:	je     0x1400114ae
   140011493:	test   r12b,0x4
   140011497:	jne    0x1400114ae
   140011499:	lea    r9,[rsp+0x40]
   14001149e:	mov    ecx,0x30
   1400114a3:	mov    r8,r13
   1400114a6:	mov    edx,r14d
   1400114a9:	call   0x140010c34
   1400114ae:	xor    eax,eax
   1400114b0:	cmp    DWORD PTR [rsp+0x58],eax
   1400114b4:	jne    0x14001151c
   1400114b6:	test   r15d,r15d
   1400114b9:	jle    0x14001151c
   1400114bb:	mov    rdi,rbx
   1400114be:	mov    esi,r15d
   1400114c1:	mov    rax,QWORD PTR [rbp-0x70]
   1400114c5:	lea    r9,[rbp-0x70]
   1400114c9:	lea    rcx,[rsp+0x64]
   1400114ce:	movsxd r8,DWORD PTR [rax+0x10c]
   1400114d5:	mov    rdx,rdi
   1400114d8:	dec    esi
   1400114da:	call   0x140012838
   1400114df:	xor    r10d,r10d
   1400114e2:	movsxd r13,eax
   1400114e5:	test   eax,eax
   1400114e7:	jle    0x14001150e
   1400114e9:	mov    rdx,QWORD PTR [rsp+0x78]
   1400114ee:	movzx  ecx,WORD PTR [rsp+0x64]
   1400114f3:	lea    r8,[rsp+0x40]
   1400114f8:	call   0x140010bf4
   1400114fd:	add    rdi,r13
   140011500:	xor    r10d,r10d
   140011503:	test   esi,esi
   140011505:	jg     0x1400114c1
   140011507:	mov    r13,QWORD PTR [rsp+0x78]
   14001150c:	jmp    0x140011537
   14001150e:	mov    r13,QWORD PTR [rsp+0x78]
   140011513:	or     esi,0xffffffff
   140011516:	mov    DWORD PTR [rsp+0x40],esi
   14001151a:	jmp    0x14001153b
   14001151c:	lea    r9,[rsp+0x40]
   140011521:	mov    r8,r13
   140011524:	mov    edx,r15d
   140011527:	mov    rcx,rbx
   14001152a:	mov    QWORD PTR [rsp+0x20],rsi
   14001152f:	call   0x140010c8c
   140011534:	xor    r10d,r10d
   140011537:	mov    esi,DWORD PTR [rsp+0x40]
   14001153b:	test   esi,esi
   14001153d:	js     0x140011561
   14001153f:	test   r12b,0x4
   140011543:	je     0x140011561
   140011545:	lea    r9,[rsp+0x40]
   14001154a:	mov    ecx,0x20
   14001154f:	mov    r8,r13
   140011552:	mov    edx,r14d
   140011555:	call   0x140010c34
   14001155a:	mov    esi,DWORD PTR [rsp+0x40]
   14001155e:	xor    r10d,r10d
   140011561:	mov    r14,QWORD PTR [rsp+0x50]
   140011566:	mov    r11d,0x20
   14001156c:	mov    rax,QWORD PTR [rbp-0x50]
   140011570:	test   rax,rax
   140011573:	je     0x1400117be
   140011579:	mov    rcx,rax
   14001157c:	call   0x14000c988
   140011581:	mov    edi,DWORD PTR [rsp+0x44]
   140011585:	xor    r10d,r10d
   140011588:	mov    QWORD PTR [rbp-0x50],r10
   14001158c:	mov    r11d,0x20
   140011592:	jmp    0x1400117c2
   140011597:	movzx  eax,r13w
   14001159b:	cmp    eax,0x49
   14001159e:	je     0x1400115f0
   1400115a0:	cmp    eax,0x68
   1400115a3:	je     0x1400115e8
   1400115a5:	mov    ecx,0x6c
   1400115aa:	cmp    eax,ecx
   1400115ac:	je     0x1400115c6
   1400115ae:	mov    ecx,0x58
   1400115b3:	cmp    eax,0x77
   1400115b6:	jne    0x1400117d5
   1400115bc:	bts    r12d,0xb
   1400115c1:	jmp    0x1400117d5
   1400115c6:	cmp    WORD PTR [r8],cx
   1400115ca:	mov    ecx,0x58
   1400115cf:	jne    0x1400115df
   1400115d1:	add    r8,0x2
   1400115d5:	bts    r12d,0xc
   1400115da:	jmp    0x1400117d5
   1400115df:	or     r12d,0x10
   1400115e3:	jmp    0x1400117d5
   1400115e8:	or     r12d,r11d
   1400115eb:	jmp    0x1400117d0
   1400115f0:	bts    r12d,0xf
   1400115f5:	cmp    WORD PTR [r8],0x36
   1400115fa:	jne    0x140011612
   1400115fc:	cmp    WORD PTR [r8+0x2],0x34
   140011602:	jne    0x140011612
   140011604:	add    r8,0x4
   140011608:	bts    r12d,0xf
   14001160d:	jmp    0x1400117d0
   140011612:	cmp    WORD PTR [r8],0x33
   140011617:	jne    0x14001162f
   140011619:	cmp    WORD PTR [r8+0x2],0x32
   14001161f:	jne    0x14001162f
   140011621:	add    r8,0x4
   140011625:	btr    r12d,0xf
   14001162a:	jmp    0x1400117d0
   14001162f:	mov    eax,0x64
   140011634:	cmp    WORD PTR [r8],ax
   140011638:	je     0x1400117d0
   14001163e:	mov    eax,0x69
   140011643:	cmp    WORD PTR [r8],ax
   140011647:	je     0x1400117d0
   14001164d:	mov    eax,0x6f
   140011652:	cmp    WORD PTR [r8],ax
   140011656:	je     0x1400117d0
   14001165c:	mov    eax,0x75
   140011661:	lea    ecx,[rax-0x1d]
   140011664:	cmp    WORD PTR [r8],ax
   140011668:	je     0x1400117d5
   14001166e:	lea    eax,[rcx+0x20]
   140011671:	cmp    WORD PTR [r8],ax
   140011675:	je     0x1400117d5
   14001167b:	cmp    WORD PTR [r8],cx
   14001167f:	je     0x1400117d5
   140011685:	mov    DWORD PTR [rsp+0x6c],r10d
   14001168a:	mov    rdx,QWORD PTR [rsp+0x78]
   14001168f:	lea    r8,[rsp+0x40]
   140011694:	movzx  ecx,r13w
   140011698:	mov    DWORD PTR [rsp+0x58],0x1
   1400116a0:	call   0x140010bf4
   1400116a5:	mov    esi,DWORD PTR [rsp+0x40]
   1400116a9:	xor    r10d,r10d
   1400116ac:	jmp    0x14001158c
   1400116b1:	cmp    r13w,0x2a
   1400116b6:	jne    0x1400116e1
   1400116b8:	mov    edi,DWORD PTR [r14]
   1400116bb:	add    r14,0x8
   1400116bf:	mov    ecx,0x58
   1400116c4:	mov    QWORD PTR [rsp+0x50],r14
   1400116c9:	mov    DWORD PTR [rsp+0x44],edi
   1400116cd:	test   edi,edi
   1400116cf:	jns    0x1400117d5
   1400116d5:	or     edi,0xffffffff
   1400116d8:	mov    DWORD PTR [rsp+0x44],edi
   1400116dc:	jmp    0x1400117d5
   1400116e1:	lea    ecx,[rdi+rdi*4]
   1400116e4:	movzx  eax,r13w
   1400116e8:	lea    edi,[rax+rcx*2-0x30]
   1400116ec:	mov    DWORD PTR [rsp+0x44],edi
   1400116f0:	jmp    0x1400117d0
   1400116f5:	mov    edi,r10d
   1400116f8:	mov    DWORD PTR [rsp+0x44],r10d
   1400116fd:	jmp    0x1400117d0
   140011702:	cmp    r13w,0x2a
   140011707:	jne    0x140011735
   140011709:	mov    eax,DWORD PTR [r14]
   14001170c:	add    r14,0x8
   140011710:	mov    ecx,0x58
   140011715:	mov    QWORD PTR [rsp+0x50],r14
   14001171a:	mov    DWORD PTR [rsp+0x5c],eax
   14001171e:	test   eax,eax
   140011720:	jns    0x1400117d5
   140011726:	or     r12d,0x4
   14001172a:	neg    eax
   14001172c:	mov    DWORD PTR [rsp+0x5c],eax
   140011730:	jmp    0x1400117d5
   140011735:	mov    eax,DWORD PTR [rsp+0x5c]
   140011739:	lea    ecx,[rax+rax*4]
   14001173c:	movzx  eax,r13w
   140011740:	lea    eax,[rax+rcx*2-0x30]
   140011744:	mov    DWORD PTR [rsp+0x5c],eax
   140011748:	jmp    0x1400117d0
   14001174d:	movzx  eax,r13w
   140011751:	cmp    eax,r11d
   140011754:	je     0x140011794
   140011756:	cmp    eax,0x23
   140011759:	je     0x14001178d
   14001175b:	mov    ecx,0x2b
   140011760:	cmp    eax,ecx
   140011762:	je     0x140011787
   140011764:	mov    ecx,0x2d
   140011769:	cmp    eax,ecx
   14001176b:	je     0x140011781
   14001176d:	mov    ecx,0x30
   140011772:	cmp    eax,ecx
   140011774:	mov    ecx,0x58
   140011779:	jne    0x1400117d5
   14001177b:	or     r12d,0x8
   14001177f:	jmp    0x1400117d5
   140011781:	or     r12d,0x4
   140011785:	jmp    0x1400117d0
   140011787:	or     r12d,0x1
   14001178b:	jmp    0x1400117d0
   14001178d:	bts    r12d,0x7
   140011792:	jmp    0x1400117d0
   140011794:	or     r12d,0x2
   140011798:	jmp    0x1400117d0
   14001179a:	or     edi,0xffffffff
   14001179d:	mov    DWORD PTR [rbp-0x78],r10d
   1400117a1:	mov    DWORD PTR [rsp+0x70],r10d
   1400117a6:	mov    DWORD PTR [rsp+0x5c],r10d
   1400117ab:	mov    DWORD PTR [rsp+0x48],r10d
   1400117b0:	mov    r12d,r10d
   1400117b3:	mov    DWORD PTR [rsp+0x44],edi
   1400117b7:	mov    DWORD PTR [rsp+0x58],r10d
   1400117bc:	jmp    0x1400117d0
   1400117be:	mov    edi,DWORD PTR [rsp+0x44]
   1400117c2:	mov    edx,DWORD PTR [rsp+0x6c]
   1400117c6:	mov    r8,QWORD PTR [rbp-0x80]
   1400117ca:	mov    r9d,0x200
   1400117d0:	mov    ecx,0x58
   1400117d5:	movzx  r13d,WORD PTR [r8]
   1400117d9:	test   r13w,r13w
   1400117dd:	jne    0x140010e14
   1400117e3:	cmp    BYTE PTR [rbp-0x58],r10b
   1400117e7:	je     0x1400117f4
   1400117e9:	mov    rcx,QWORD PTR [rbp-0x60]
   1400117ed:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   1400117f4:	mov    eax,esi
   1400117f6:	mov    rcx,QWORD PTR [rbp+0x3d0]
   1400117fd:	xor    rcx,rsp
   140011800:	call   0x140009dd0
   140011805:	mov    rbx,QWORD PTR [rsp+0x530]
   14001180d:	add    rsp,0x4e0
   140011814:	pop    r15
   140011816:	pop    r14
   140011818:	pop    r13
   14001181a:	pop    r12
   14001181c:	pop    rdi
   14001181d:	pop    rsi
   14001181e:	pop    rbp
   14001181f:	ret    
   140011820:	int3   
   140011821:	int3   
   140011822:	int3   
   140011823:	int3   
   140011824:	int3   
   140011825:	int3   
   140011826:	int3   
   140011827:	int3   
   140011828:	mov    QWORD PTR [rsp+0x10],rbx
   14001182d:	mov    WORD PTR [rsp+0x8],cx
   140011832:	push   rbp
   140011833:	mov    rbp,rsp
   140011836:	sub    rsp,0x50
   14001183a:	mov    eax,0xffff
   14001183f:	cmp    cx,ax
   140011842:	je     0x1400118f2
   140011848:	lea    rcx,[rbp-0x20]
   14001184c:	call   0x14000d5a4
   140011851:	mov    rbx,QWORD PTR [rbp-0x20]
   140011855:	cmp    DWORD PTR [rbx+0x14],0x0
   140011859:	jne    0x140011882
   14001185b:	movzx  edx,WORD PTR [rbp+0x10]
   14001185f:	lea    eax,[rdx-0x41]
   140011862:	cmp    ax,0x19
   140011866:	ja     0x14001186c
   140011868:	add    dx,0x20
   14001186c:	cmp    BYTE PTR [rbp-0x8],0x0
   140011870:	je     0x14001187d
   140011872:	mov    rcx,QWORD PTR [rbp-0x10]
   140011876:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14001187d:	movzx  eax,dx
   140011880:	jmp    0x1400118f2
   140011882:	movzx  ecx,WORD PTR [rbp+0x10]
   140011886:	mov    edx,0x100
   14001188b:	cmp    cx,dx
   14001188e:	jae    0x1400118b5
   140011890:	mov    edx,0x1
   140011895:	call   0x14000f0dc
   14001189a:	test   eax,eax
   14001189c:	jne    0x1400118a4
   14001189e:	movzx  eax,WORD PTR [rbp+0x10]
   1400118a2:	jmp    0x1400118e1
   1400118a4:	movzx  ecx,WORD PTR [rbp+0x10]
   1400118a8:	mov    rax,QWORD PTR [rbx+0x148]
   1400118af:	movzx  eax,BYTE PTR [rax+rcx*1]
   1400118b3:	jmp    0x1400118e1
   1400118b5:	mov    ecx,DWORD PTR [rbx+0x14]
   1400118b8:	lea    rax,[rbp+0x20]
   1400118bc:	mov    r9d,0x1
   1400118c2:	mov    DWORD PTR [rsp+0x28],r9d
   1400118c7:	lea    r8,[rbp+0x10]
   1400118cb:	mov    QWORD PTR [rsp+0x20],rax
   1400118d0:	call   0x1400129c4
   1400118d5:	test   eax,eax
   1400118d7:	movzx  eax,WORD PTR [rbp+0x10]
   1400118db:	je     0x1400118e1
   1400118dd:	movzx  eax,WORD PTR [rbp+0x20]
   1400118e1:	cmp    BYTE PTR [rbp-0x8],0x0
   1400118e5:	je     0x1400118f2
   1400118e7:	mov    rcx,QWORD PTR [rbp-0x10]
   1400118eb:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   1400118f2:	mov    rbx,QWORD PTR [rsp+0x68]
   1400118f7:	add    rsp,0x50
   1400118fb:	pop    rbp
   1400118fc:	ret    
   1400118fd:	int3   
   1400118fe:	int3   
   1400118ff:	int3   
   140011900:	int3   
   140011901:	int3   
   140011902:	int3   
   140011903:	int3   
   140011904:	mov    QWORD PTR [rsp+0x8],rbx
   140011909:	push   rdi
   14001190a:	sub    rsp,0x20
   14001190e:	movsxd rbx,ecx
   140011911:	mov    edi,r8d
   140011914:	mov    QWORD PTR [rsp+0x38],rdx
   140011919:	mov    ecx,ebx
   14001191b:	call   0x140012ad8
   140011920:	cmp    rax,0xffffffffffffffff
   140011924:	jne    0x140011937
   140011926:	call   0x14000baac
   14001192b:	mov    DWORD PTR [rax],0x9
   140011931:	or     rax,0xffffffffffffffff
   140011935:	jmp    0x14001198e
   140011937:	mov    edx,DWORD PTR [rsp+0x38]
   14001193b:	lea    r8,[rsp+0x3c]
   140011940:	mov    r9d,edi
   140011943:	mov    rcx,rax
   140011946:	call   QWORD PTR [rip+0xfffffffffffef724]        # 0x140001070
   14001194c:	mov    DWORD PTR [rsp+0x38],eax
   140011950:	cmp    eax,0xffffffff
   140011953:	jne    0x140011968
   140011955:	call   QWORD PTR [rip+0xfffffffffffef6d5]        # 0x140001030
   14001195b:	test   eax,eax
   14001195d:	je     0x140011968
   14001195f:	mov    ecx,eax
   140011961:	call   0x14000bafc
   140011966:	jmp    0x140011931
   140011968:	mov    rcx,rbx
   14001196b:	mov    rax,rbx
   14001196e:	lea    rdx,[rip+0x706b]        # 0x1400189e0
   140011975:	sar    rax,0x5
   140011979:	and    ecx,0x1f
   14001197c:	mov    rax,QWORD PTR [rdx+rax*8]
   140011980:	imul   rcx,rcx,0x58
   140011984:	and    BYTE PTR [rax+rcx*1+0x8],0xfd
   140011989:	mov    rax,QWORD PTR [rsp+0x38]
   14001198e:	mov    rbx,QWORD PTR [rsp+0x30]
   140011993:	add    rsp,0x20
   140011997:	pop    rdi
   140011998:	ret    
   140011999:	int3   
   14001199a:	int3   
   14001199b:	int3   
   14001199c:	int3   
   14001199d:	int3   
   14001199e:	int3   
   14001199f:	int3   
   1400119a0:	mov    QWORD PTR [rsp+0x10],rbx
   1400119a5:	mov    DWORD PTR [rsp+0x8],ecx
   1400119a9:	push   rsi
   1400119aa:	push   rdi
   1400119ab:	push   r12
   1400119ad:	push   r13
   1400119af:	push   r14
   1400119b1:	sub    rsp,0x20
   1400119b5:	mov    esi,r8d
   1400119b8:	mov    r12,rdx
   1400119bb:	movsxd rdi,ecx
   1400119be:	cmp    edi,0xfffffffe
   1400119c1:	jne    0x1400119db
   1400119c3:	call   0x14000bad4
   1400119c8:	and    DWORD PTR [rax],0x0
   1400119cb:	call   0x14000baac
   1400119d0:	mov    DWORD PTR [rax],0x9
   1400119d6:	jmp    0x140011a6d
   1400119db:	test   ecx,ecx
   1400119dd:	js     0x140011a55
   1400119df:	cmp    edi,DWORD PTR [rip+0x6fe3]        # 0x1400189c8
   1400119e5:	jae    0x140011a55
   1400119e7:	mov    rbx,rdi
   1400119ea:	mov    r13,rdi
   1400119ed:	sar    r13,0x5
   1400119f1:	lea    r14,[rip+0x6fe8]        # 0x1400189e0
   1400119f8:	and    ebx,0x1f
   1400119fb:	imul   rbx,rbx,0x58
   1400119ff:	mov    rax,QWORD PTR [r14+r13*8]
   140011a03:	movsx  ecx,BYTE PTR [rax+rbx*1+0x8]
   140011a08:	and    ecx,0x1
   140011a0b:	je     0x140011a55
   140011a0d:	mov    ecx,edi
   140011a0f:	call   0x140012b54
   140011a14:	nop
   140011a15:	mov    rax,QWORD PTR [r14+r13*8]
   140011a19:	test   BYTE PTR [rax+rbx*1+0x8],0x1
   140011a1e:	je     0x140011a32
   140011a20:	mov    r8d,esi
   140011a23:	mov    rdx,r12
   140011a26:	mov    ecx,edi
   140011a28:	call   0x140011904
   140011a2d:	mov    rbx,rax
   140011a30:	jmp    0x140011a49
   140011a32:	call   0x14000baac
   140011a37:	mov    DWORD PTR [rax],0x9
   140011a3d:	call   0x14000bad4
   140011a42:	and    DWORD PTR [rax],0x0
   140011a45:	or     rbx,0xffffffffffffffff
   140011a49:	mov    ecx,edi
   140011a4b:	call   0x140012c00
   140011a50:	mov    rax,rbx
   140011a53:	jmp    0x140011a71
   140011a55:	call   0x14000bad4
   140011a5a:	and    DWORD PTR [rax],0x0
   140011a5d:	call   0x14000baac
   140011a62:	mov    DWORD PTR [rax],0x9
   140011a68:	call   0x14000ba38
   140011a6d:	or     rax,0xffffffffffffffff
   140011a71:	mov    rbx,QWORD PTR [rsp+0x58]
   140011a76:	add    rsp,0x20
   140011a7a:	pop    r14
   140011a7c:	pop    r13
   140011a7e:	pop    r12
   140011a80:	pop    rdi
   140011a81:	pop    rsi
   140011a82:	ret    
   140011a83:	int3   
   140011a84:	int3   
   140011a85:	int3   
   140011a86:	int3   
   140011a87:	int3   
   140011a88:	int3   
   140011a89:	int3   
   140011a8a:	int3   
   140011a8b:	int3   
   140011a8c:	mov    QWORD PTR [rsp+0x20],rbx
   140011a91:	push   rbp
   140011a92:	push   rsi
   140011a93:	push   rdi
   140011a94:	push   r12
   140011a96:	push   r13
   140011a98:	push   r14
   140011a9a:	push   r15
   140011a9c:	lea    rbp,[rsp-0x1a30]
   140011aa4:	mov    eax,0x1b30
   140011aa9:	call   0x14000ee40
   140011aae:	sub    rsp,rax
   140011ab1:	mov    rax,QWORD PTR [rip+0x35b8]        # 0x140015070
   140011ab8:	xor    rax,rsp
   140011abb:	mov    QWORD PTR [rbp+0x1a20],rax
   140011ac2:	xor    edi,edi
   140011ac4:	mov    r14d,r8d
   140011ac7:	mov    r13,rdx
   140011aca:	and    DWORD PTR [rsp+0x44],edi
   140011ace:	movsxd rbx,ecx
   140011ad1:	test   r8d,r8d
   140011ad4:	jne    0x140011add
   140011ad6:	xor    eax,eax
   140011ad8:	jmp    0x1400121c2
   140011add:	test   rdx,rdx
   140011ae0:	jne    0x140011b01
   140011ae2:	call   0x14000bad4
   140011ae7:	and    DWORD PTR [rax],edi
   140011ae9:	call   0x14000baac
   140011aee:	mov    DWORD PTR [rax],0x16
   140011af4:	call   0x14000ba38
   140011af9:	or     eax,0xffffffff
   140011afc:	jmp    0x1400121c2
   140011b01:	mov    r15,rbx
   140011b04:	mov    r12,rbx
   140011b07:	lea    rax,[rip+0x6ed2]        # 0x1400189e0
   140011b0e:	sar    r12,0x5
   140011b12:	and    r15d,0x1f
   140011b16:	mov    rcx,QWORD PTR [rax+r12*8]
   140011b1a:	mov    QWORD PTR [rsp+0x50],r12
   140011b1f:	imul   r15,r15,0x58
   140011b23:	mov    sil,BYTE PTR [r15+rcx*1+0x38]
   140011b28:	mov    QWORD PTR [rsp+0x60],r15
   140011b2d:	add    sil,sil
   140011b30:	sar    sil,1
   140011b33:	cmp    sil,0x2
   140011b37:	je     0x140011b3f
   140011b39:	cmp    sil,0x1
   140011b3d:	jne    0x140011b48
   140011b3f:	mov    eax,r14d
   140011b42:	not    eax
   140011b44:	test   al,0x1
   140011b46:	je     0x140011ae2
   140011b48:	test   BYTE PTR [r15+rcx*1+0x8],0x20
   140011b4e:	je     0x140011b5d
   140011b50:	xor    edx,edx
   140011b52:	mov    ecx,ebx
   140011b54:	lea    r8d,[rdx+0x2]
   140011b58:	call   0x140011904
   140011b5d:	mov    ecx,ebx
   140011b5f:	call   0x140012338
   140011b64:	test   eax,eax
   140011b66:	je     0x140011e36
   140011b6c:	lea    rax,[rip+0x6e6d]        # 0x1400189e0
   140011b73:	mov    rax,QWORD PTR [rax+r12*8]
   140011b77:	test   BYTE PTR [r15+rax*1+0x8],0x80
   140011b7d:	je     0x140011e36
   140011b83:	call   0x14000b3cc
   140011b88:	xor    ebx,ebx
   140011b8a:	lea    rdx,[rsp+0x5c]
   140011b8f:	mov    rcx,QWORD PTR [rax+0xc0]
   140011b96:	lea    rax,[rip+0x6e43]        # 0x1400189e0
   140011b9d:	cmp    DWORD PTR [rcx+0x14],ebx
   140011ba0:	mov    rcx,QWORD PTR [rax+r12*8]
   140011ba4:	mov    rcx,QWORD PTR [r15+rcx*1]
   140011ba8:	sete   bl
   140011bab:	call   QWORD PTR [rip+0xfffffffffffef4af]        # 0x140001060
   140011bb1:	test   eax,eax
   140011bb3:	je     0x140011e36
   140011bb9:	test   ebx,ebx
   140011bbb:	je     0x140011bc6
   140011bbd:	test   sil,sil
   140011bc0:	je     0x140011e36
   140011bc6:	call   QWORD PTR [rip+0xfffffffffffef504]        # 0x1400010d0
   140011bcc:	and    DWORD PTR [rsp+0x58],edi
   140011bd0:	mov    rbx,r13
   140011bd3:	mov    DWORD PTR [rsp+0x5c],eax
   140011bd7:	test   r14d,r14d
   140011bda:	je     0x140011e2d
   140011be0:	test   sil,sil
   140011be3:	jne    0x140011d6d
   140011be9:	mov    cl,BYTE PTR [rbx]
   140011beb:	xor    eax,eax
   140011bed:	cmp    cl,0xa
   140011bf0:	sete   al
   140011bf3:	mov    DWORD PTR [rsp+0x4c],eax
   140011bf7:	lea    rax,[rip+0x6de2]        # 0x1400189e0
   140011bfe:	mov    rdx,QWORD PTR [rax+r12*8]
   140011c02:	cmp    DWORD PTR [r15+rdx*1+0x50],0x0
   140011c08:	je     0x140011c2a
   140011c0a:	mov    al,BYTE PTR [r15+rdx*1+0x4c]
   140011c0f:	mov    BYTE PTR [rsp+0x61],cl
   140011c13:	mov    r8d,0x2
   140011c19:	mov    BYTE PTR [rsp+0x60],al
   140011c1d:	and    DWORD PTR [r15+rdx*1+0x50],0x0
   140011c23:	lea    rdx,[rsp+0x60]
   140011c28:	jmp    0x140011c73
   140011c2a:	movsx  ecx,cl
   140011c2d:	call   0x14000eee0
   140011c32:	test   eax,eax
   140011c34:	je     0x140011c6a
   140011c36:	mov    rax,r14
   140011c39:	sub    rax,rbx
   140011c3c:	add    rax,r13
   140011c3f:	cmp    rax,0x1
   140011c43:	jle    0x140011df6
   140011c49:	lea    rcx,[rsp+0x40]
   140011c4e:	mov    r8d,0x2
   140011c54:	mov    rdx,rbx
   140011c57:	call   0x1400129b4
   140011c5c:	cmp    eax,0xffffffff
   140011c5f:	je     0x140011e17
   140011c65:	inc    rbx
   140011c68:	jmp    0x140011c86
   140011c6a:	mov    r8d,0x1
   140011c70:	mov    rdx,rbx
   140011c73:	lea    rcx,[rsp+0x40]
   140011c78:	call   0x1400129b4
   140011c7d:	cmp    eax,0xffffffff
   140011c80:	je     0x140011e17
   140011c86:	and    QWORD PTR [rsp+0x38],0x0
   140011c8c:	and    QWORD PTR [rsp+0x30],0x0
   140011c92:	mov    ecx,DWORD PTR [rsp+0x5c]
   140011c96:	lea    rax,[rsp+0x60]
   140011c9b:	lea    r8,[rsp+0x40]
   140011ca0:	mov    r9d,0x1
   140011ca6:	xor    edx,edx
   140011ca8:	mov    DWORD PTR [rsp+0x28],0x5
   140011cb0:	inc    rbx
   140011cb3:	mov    QWORD PTR [rsp+0x20],rax
   140011cb8:	call   QWORD PTR [rip+0xfffffffffffef592]        # 0x140001250
   140011cbe:	mov    r12d,eax
   140011cc1:	test   eax,eax
   140011cc3:	je     0x140011e17
   140011cc9:	mov    rcx,QWORD PTR [rsp+0x50]
   140011cce:	and    QWORD PTR [rsp+0x20],0x0
   140011cd4:	lea    rax,[rip+0x6d05]        # 0x1400189e0
   140011cdb:	mov    rcx,QWORD PTR [rax+rcx*8]
   140011cdf:	lea    r9,[rsp+0x58]
   140011ce4:	lea    rdx,[rsp+0x60]
   140011ce9:	mov    rcx,QWORD PTR [r15+rcx*1]
   140011ced:	mov    r8d,r12d
   140011cf0:	call   QWORD PTR [rip+0xfffffffffffef412]        # 0x140001108
   140011cf6:	test   eax,eax
   140011cf8:	je     0x140011e20
   140011cfe:	mov    edi,ebx
   140011d00:	sub    edi,r13d
   140011d03:	add    edi,DWORD PTR [rsp+0x44]
   140011d07:	cmp    DWORD PTR [rsp+0x58],r12d
   140011d0c:	jl     0x140011e17
   140011d12:	cmp    DWORD PTR [rsp+0x4c],0x0
   140011d17:	mov    r12,QWORD PTR [rsp+0x50]
   140011d1c:	je     0x140011de7
   140011d22:	and    QWORD PTR [rsp+0x20],0x0
   140011d28:	lea    rax,[rip+0x6cb1]        # 0x1400189e0
   140011d2f:	mov    BYTE PTR [rsp+0x60],0xd
   140011d34:	mov    rcx,QWORD PTR [rax+r12*8]
   140011d38:	lea    r9,[rsp+0x58]
   140011d3d:	lea    rdx,[rsp+0x60]
   140011d42:	mov    rcx,QWORD PTR [r15+rcx*1]
   140011d46:	mov    r8d,0x1
   140011d4c:	call   QWORD PTR [rip+0xfffffffffffef3b6]        # 0x140001108
   140011d52:	test   eax,eax
   140011d54:	je     0x140011e20
   140011d5a:	cmp    DWORD PTR [rsp+0x58],0x1
   140011d5f:	jl     0x140011e17
   140011d65:	inc    DWORD PTR [rsp+0x44]
   140011d69:	inc    edi
   140011d6b:	jmp    0x140011de7
   140011d6d:	cmp    sil,0x1
   140011d71:	je     0x140011d79
   140011d73:	cmp    sil,0x2
   140011d77:	jne    0x140011d97
   140011d79:	movzx  eax,WORD PTR [rbx]
   140011d7c:	xor    r12d,r12d
   140011d7f:	cmp    ax,0xa
   140011d83:	mov    WORD PTR [rsp+0x40],ax
   140011d88:	sete   r12b
   140011d8c:	add    rbx,0x2
   140011d90:	mov    DWORD PTR [rsp+0x4c],r12d
   140011d95:	jmp    0x140011d9c
   140011d97:	mov    r12d,DWORD PTR [rsp+0x4c]
   140011d9c:	cmp    sil,0x1
   140011da0:	je     0x140011da8
   140011da2:	cmp    sil,0x2
   140011da6:	jne    0x140011de2
   140011da8:	movzx  ecx,WORD PTR [rsp+0x40]
   140011dad:	call   0x140012c30
   140011db2:	cmp    ax,WORD PTR [rsp+0x40]
   140011db7:	jne    0x140011e20
   140011db9:	add    edi,0x2
   140011dbc:	test   r12d,r12d
   140011dbf:	je     0x140011de2
   140011dc1:	mov    r12d,0xd
   140011dc7:	mov    ecx,r12d
   140011dca:	mov    WORD PTR [rsp+0x40],r12w
   140011dd0:	call   0x140012c30
   140011dd5:	cmp    ax,WORD PTR [rsp+0x40]
   140011dda:	jne    0x140011e20
   140011ddc:	inc    edi
   140011dde:	inc    DWORD PTR [rsp+0x44]
   140011de2:	mov    r12,QWORD PTR [rsp+0x50]
   140011de7:	mov    eax,ebx
   140011de9:	sub    eax,r13d
   140011dec:	cmp    eax,r14d
   140011def:	jae    0x140011e17
   140011df1:	jmp    0x140011be0
   140011df6:	mov    al,BYTE PTR [rbx]
   140011df8:	lea    rdx,[rip+0x6be1]        # 0x1400189e0
   140011dff:	inc    edi
   140011e01:	mov    rcx,QWORD PTR [rdx+r12*8]
   140011e05:	mov    BYTE PTR [r15+rcx*1+0x4c],al
   140011e0a:	mov    rax,QWORD PTR [rdx+r12*8]
   140011e0e:	mov    DWORD PTR [r15+rax*1+0x50],0x1
   140011e17:	mov    ebx,DWORD PTR [rsp+0x4c]
   140011e1b:	jmp    0x140012119
   140011e20:	call   QWORD PTR [rip+0xfffffffffffef20a]        # 0x140001030
   140011e26:	mov    ebx,eax
   140011e28:	jmp    0x140012119
   140011e2d:	mov    ebx,DWORD PTR [rsp+0x4c]
   140011e31:	jmp    0x140012121
   140011e36:	lea    rax,[rip+0x6ba3]        # 0x1400189e0
   140011e3d:	mov    rcx,QWORD PTR [rax+r12*8]
   140011e41:	test   BYTE PTR [r15+rcx*1+0x8],0x80
   140011e47:	je     0x14001214b
   140011e4d:	xor    ebx,ebx
   140011e4f:	mov    r12,r13
   140011e52:	test   sil,sil
   140011e55:	jne    0x140011f26
   140011e5b:	test   r14d,r14d
   140011e5e:	je     0x140012181
   140011e64:	lea    edx,[rbx+0xd]
   140011e67:	mov    r15d,DWORD PTR [rsp+0x44]
   140011e6c:	lea    rsi,[rbp+0x620]
   140011e73:	xor    ecx,ecx
   140011e75:	mov    eax,r12d
   140011e78:	sub    eax,r13d
   140011e7b:	cmp    eax,r14d
   140011e7e:	jae    0x140011ea7
   140011e80:	mov    al,BYTE PTR [r12]
   140011e84:	inc    r12
   140011e87:	cmp    al,0xa
   140011e89:	jne    0x140011e96
   140011e8b:	mov    BYTE PTR [rsi],dl
   140011e8d:	inc    r15d
   140011e90:	inc    rsi
   140011e93:	inc    rcx
   140011e96:	inc    rcx
   140011e99:	mov    BYTE PTR [rsi],al
   140011e9b:	inc    rsi
   140011e9e:	cmp    rcx,0x13ff
   140011ea5:	jb     0x140011e75
   140011ea7:	and    QWORD PTR [rsp+0x20],rbx
   140011eac:	lea    rax,[rbp+0x620]
   140011eb3:	mov    r8d,esi
   140011eb6:	sub    r8d,eax
   140011eb9:	mov    rax,QWORD PTR [rsp+0x50]
   140011ebe:	lea    rcx,[rip+0x6b1b]        # 0x1400189e0
   140011ec5:	mov    rcx,QWORD PTR [rcx+rax*8]
   140011ec9:	mov    DWORD PTR [rsp+0x44],r15d
   140011ece:	mov    r15,QWORD PTR [rsp+0x60]
   140011ed3:	mov    rcx,QWORD PTR [r15+rcx*1]
   140011ed7:	lea    r9,[rsp+0x48]
   140011edc:	lea    rdx,[rbp+0x620]
   140011ee3:	call   QWORD PTR [rip+0xfffffffffffef21f]        # 0x140001108
   140011ee9:	test   eax,eax
   140011eeb:	je     0x140011e20
   140011ef1:	add    edi,DWORD PTR [rsp+0x48]
   140011ef5:	lea    rax,[rbp+0x620]
   140011efc:	sub    rsi,rax
   140011eff:	movsxd rax,DWORD PTR [rsp+0x48]
   140011f04:	cmp    rax,rsi
   140011f07:	jl     0x140012119
   140011f0d:	mov    eax,r12d
   140011f10:	mov    edx,0xd
   140011f15:	sub    eax,r13d
   140011f18:	cmp    eax,r14d
   140011f1b:	jb     0x140011e67
   140011f21:	jmp    0x140012119
   140011f26:	cmp    sil,0x2
   140011f2a:	jne    0x140012008
   140011f30:	test   r14d,r14d
   140011f33:	je     0x140012181
   140011f39:	mov    edx,0xd
   140011f3e:	mov    r15d,DWORD PTR [rsp+0x44]
   140011f43:	lea    rsi,[rbp+0x620]
   140011f4a:	xor    ecx,ecx
   140011f4c:	mov    eax,r12d
   140011f4f:	sub    eax,r13d
   140011f52:	cmp    eax,r14d
   140011f55:	jae    0x140011f89
   140011f57:	movzx  eax,WORD PTR [r12]
   140011f5c:	add    r12,0x2
   140011f60:	cmp    ax,0xa
   140011f64:	jne    0x140011f75
   140011f66:	mov    WORD PTR [rsi],dx
   140011f69:	add    r15d,0x2
   140011f6d:	add    rsi,0x2
   140011f71:	add    rcx,0x2
   140011f75:	add    rcx,0x2
   140011f79:	mov    WORD PTR [rsi],ax
   140011f7c:	add    rsi,0x2
   140011f80:	cmp    rcx,0x13fe
   140011f87:	jb     0x140011f4c
   140011f89:	and    QWORD PTR [rsp+0x20],rbx
   140011f8e:	lea    rax,[rbp+0x620]
   140011f95:	mov    r8d,esi
   140011f98:	sub    r8d,eax
   140011f9b:	mov    rax,QWORD PTR [rsp+0x50]
   140011fa0:	lea    rcx,[rip+0x6a39]        # 0x1400189e0
   140011fa7:	mov    rcx,QWORD PTR [rcx+rax*8]
   140011fab:	mov    DWORD PTR [rsp+0x44],r15d
   140011fb0:	mov    r15,QWORD PTR [rsp+0x60]
   140011fb5:	mov    rcx,QWORD PTR [r15+rcx*1]
   140011fb9:	lea    r9,[rsp+0x48]
   140011fbe:	lea    rdx,[rbp+0x620]
   140011fc5:	call   QWORD PTR [rip+0xfffffffffffef13d]        # 0x140001108
   140011fcb:	test   eax,eax
   140011fcd:	je     0x140011e20
   140011fd3:	add    edi,DWORD PTR [rsp+0x48]
   140011fd7:	lea    rax,[rbp+0x620]
   140011fde:	sub    rsi,rax
   140011fe1:	movsxd rax,DWORD PTR [rsp+0x48]
   140011fe6:	cmp    rax,rsi
   140011fe9:	jl     0x140012119
   140011fef:	mov    eax,r12d
   140011ff2:	mov    edx,0xd
   140011ff7:	sub    eax,r13d
   140011ffa:	cmp    eax,r14d
   140011ffd:	jb     0x140011f3e
   140012003:	jmp    0x140012119
   140012008:	test   r14d,r14d
   14001200b:	je     0x140012181
   140012011:	mov    r8d,0xd
   140012017:	lea    rcx,[rsp+0x70]
   14001201c:	xor    edx,edx
   14001201e:	mov    eax,r12d
   140012021:	sub    eax,r13d
   140012024:	cmp    eax,r14d
   140012027:	jae    0x140012058
   140012029:	movzx  eax,WORD PTR [r12]
   14001202e:	add    r12,0x2
   140012032:	cmp    ax,0xa
   140012036:	jne    0x140012044
   140012038:	mov    WORD PTR [rcx],r8w
   14001203c:	add    rcx,0x2
   140012040:	add    rdx,0x2
   140012044:	add    rdx,0x2
   140012048:	mov    WORD PTR [rcx],ax
   14001204b:	add    rcx,0x2
   14001204f:	cmp    rdx,0x6a8
   140012056:	jb     0x14001201e
   140012058:	and    QWORD PTR [rsp+0x38],0x0
   14001205e:	and    QWORD PTR [rsp+0x30],0x0
   140012064:	lea    rax,[rsp+0x70]
   140012069:	sub    ecx,eax
   14001206b:	lea    r8,[rsp+0x70]
   140012070:	mov    DWORD PTR [rsp+0x28],0xd55
   140012078:	mov    eax,ecx
   14001207a:	mov    ecx,0xfde9
   14001207f:	cdq    
   140012080:	sub    eax,edx
   140012082:	xor    edx,edx
   140012084:	sar    eax,1
   140012086:	mov    r9d,eax
   140012089:	lea    rax,[rbp+0x620]
   140012090:	mov    QWORD PTR [rsp+0x20],rax
   140012095:	call   QWORD PTR [rip+0xfffffffffffef1b5]        # 0x140001250
   14001209b:	mov    r15d,eax
   14001209e:	test   eax,eax
   1400120a0:	je     0x140012141
   1400120a6:	xor    esi,esi
   1400120a8:	mov    rax,QWORD PTR [rsp+0x50]
   1400120ad:	and    QWORD PTR [rsp+0x20],0x0
   1400120b3:	movsxd rcx,esi
   1400120b6:	lea    rdx,[rbp+rcx*1+0x620]
   1400120be:	mov    r8d,r15d
   1400120c1:	lea    rcx,[rip+0x6918]        # 0x1400189e0
   1400120c8:	mov    rcx,QWORD PTR [rcx+rax*8]
   1400120cc:	mov    rax,QWORD PTR [rsp+0x60]
   1400120d1:	lea    r9,[rsp+0x48]
   1400120d6:	mov    rcx,QWORD PTR [rax+rcx*1]
   1400120da:	sub    r8d,esi
   1400120dd:	call   QWORD PTR [rip+0xfffffffffffef025]        # 0x140001108
   1400120e3:	test   eax,eax
   1400120e5:	je     0x1400120f2
   1400120e7:	add    esi,DWORD PTR [rsp+0x48]
   1400120eb:	cmp    r15d,esi
   1400120ee:	jg     0x1400120a8
   1400120f0:	jmp    0x1400120fa
   1400120f2:	call   QWORD PTR [rip+0xfffffffffffeef38]        # 0x140001030
   1400120f8:	mov    ebx,eax
   1400120fa:	cmp    r15d,esi
   1400120fd:	jg     0x140012114
   1400120ff:	mov    edi,r12d
   140012102:	mov    r8d,0xd
   140012108:	sub    edi,r13d
   14001210b:	cmp    edi,r14d
   14001210e:	jb     0x140012017
   140012114:	mov    r15,QWORD PTR [rsp+0x60]
   140012119:	test   edi,edi
   14001211b:	jne    0x1400121bc
   140012121:	test   ebx,ebx
   140012123:	je     0x140012181
   140012125:	cmp    ebx,0x5
   140012128:	jne    0x140012175
   14001212a:	call   0x14000baac
   14001212f:	mov    DWORD PTR [rax],0x9
   140012135:	call   0x14000bad4
   14001213a:	mov    DWORD PTR [rax],ebx
   14001213c:	jmp    0x140011af9
   140012141:	call   QWORD PTR [rip+0xfffffffffffeeee9]        # 0x140001030
   140012147:	mov    ebx,eax
   140012149:	jmp    0x140012114
   14001214b:	mov    rcx,QWORD PTR [r15+rcx*1]
   14001214f:	and    QWORD PTR [rsp+0x20],rdi
   140012154:	lea    r9,[rsp+0x48]
   140012159:	mov    r8d,r14d
   14001215c:	mov    rdx,r13
   14001215f:	call   QWORD PTR [rip+0xfffffffffffeefa3]        # 0x140001108
   140012165:	test   eax,eax
   140012167:	je     0x140011e20
   14001216d:	mov    edi,DWORD PTR [rsp+0x48]
   140012171:	xor    ebx,ebx
   140012173:	jmp    0x140012119
   140012175:	mov    ecx,ebx
   140012177:	call   0x14000bafc
   14001217c:	jmp    0x140011af9
   140012181:	mov    rax,QWORD PTR [rsp+0x50]
   140012186:	lea    rcx,[rip+0x6853]        # 0x1400189e0
   14001218d:	mov    rax,QWORD PTR [rcx+rax*8]
   140012191:	test   BYTE PTR [r15+rax*1+0x8],0x40
   140012197:	je     0x1400121a4
   140012199:	cmp    BYTE PTR [r13+0x0],0x1a
   14001219e:	je     0x140011ad6
   1400121a4:	call   0x14000baac
   1400121a9:	mov    DWORD PTR [rax],0x1c
   1400121af:	call   0x14000bad4
   1400121b4:	and    DWORD PTR [rax],0x0
   1400121b7:	jmp    0x140011af9
   1400121bc:	sub    edi,DWORD PTR [rsp+0x44]
   1400121c0:	mov    eax,edi
   1400121c2:	mov    rcx,QWORD PTR [rbp+0x1a20]
   1400121c9:	xor    rcx,rsp
   1400121cc:	call   0x140009dd0
   1400121d1:	mov    rbx,QWORD PTR [rsp+0x1b88]
   1400121d9:	add    rsp,0x1b30
   1400121e0:	pop    r15
   1400121e2:	pop    r14
   1400121e4:	pop    r13
   1400121e6:	pop    r12
   1400121e8:	pop    rdi
   1400121e9:	pop    rsi
   1400121ea:	pop    rbp
   1400121eb:	ret    
   1400121ec:	int3   
   1400121ed:	int3   
   1400121ee:	int3   
   1400121ef:	int3   
   1400121f0:	int3   
   1400121f1:	int3   
   1400121f2:	int3   
   1400121f3:	int3   
   1400121f4:	mov    QWORD PTR [rsp+0x10],rbx
   1400121f9:	mov    DWORD PTR [rsp+0x8],ecx
   1400121fd:	push   rsi
   1400121fe:	push   rdi
   1400121ff:	push   r12
   140012201:	push   r13
   140012203:	push   r14
   140012205:	sub    rsp,0x20
   140012209:	mov    esi,r8d
   14001220c:	mov    r12,rdx
   14001220f:	movsxd rdi,ecx
   140012212:	cmp    edi,0xfffffffe
   140012215:	jne    0x14001222f
   140012217:	call   0x14000bad4
   14001221c:	and    DWORD PTR [rax],0x0
   14001221f:	call   0x14000baac
   140012224:	mov    DWORD PTR [rax],0x9
   14001222a:	jmp    0x1400122be
   14001222f:	test   ecx,ecx
   140012231:	js     0x1400122a6
   140012233:	cmp    edi,DWORD PTR [rip+0x678f]        # 0x1400189c8
   140012239:	jae    0x1400122a6
   14001223b:	mov    rbx,rdi
   14001223e:	mov    r13,rdi
   140012241:	sar    r13,0x5
   140012245:	lea    r14,[rip+0x6794]        # 0x1400189e0
   14001224c:	and    ebx,0x1f
   14001224f:	imul   rbx,rbx,0x58
   140012253:	mov    rax,QWORD PTR [r14+r13*8]
   140012257:	movsx  ecx,BYTE PTR [rax+rbx*1+0x8]
   14001225c:	and    ecx,0x1
   14001225f:	je     0x1400122a6
   140012261:	mov    ecx,edi
   140012263:	call   0x140012b54
   140012268:	nop
   140012269:	mov    rax,QWORD PTR [r14+r13*8]
   14001226d:	test   BYTE PTR [rax+rbx*1+0x8],0x1
   140012272:	je     0x140012285
   140012274:	mov    r8d,esi
   140012277:	mov    rdx,r12
   14001227a:	mov    ecx,edi
   14001227c:	call   0x140011a8c
   140012281:	mov    ebx,eax
   140012283:	jmp    0x14001229b
   140012285:	call   0x14000baac
   14001228a:	mov    DWORD PTR [rax],0x9
   140012290:	call   0x14000bad4
   140012295:	and    DWORD PTR [rax],0x0
   140012298:	or     ebx,0xffffffff
   14001229b:	mov    ecx,edi
   14001229d:	call   0x140012c00
   1400122a2:	mov    eax,ebx
   1400122a4:	jmp    0x1400122c1
   1400122a6:	call   0x14000bad4
   1400122ab:	and    DWORD PTR [rax],0x0
   1400122ae:	call   0x14000baac
   1400122b3:	mov    DWORD PTR [rax],0x9
   1400122b9:	call   0x14000ba38
   1400122be:	or     eax,0xffffffff
   1400122c1:	mov    rbx,QWORD PTR [rsp+0x58]
   1400122c6:	add    rsp,0x20
   1400122ca:	pop    r14
   1400122cc:	pop    r13
   1400122ce:	pop    r12
   1400122d0:	pop    rdi
   1400122d1:	pop    rsi
   1400122d2:	ret    
   1400122d3:	int3   
   1400122d4:	int3   
   1400122d5:	int3   
   1400122d6:	int3   
   1400122d7:	int3   
   1400122d8:	int3   
   1400122d9:	int3   
   1400122da:	int3   
   1400122db:	int3   
   1400122dc:	rex push rbx
   1400122de:	sub    rsp,0x20
   1400122e2:	inc    DWORD PTR [rip+0x5214]        # 0x1400174fc
   1400122e8:	mov    rbx,rcx
   1400122eb:	mov    ecx,0x1000
   1400122f0:	call   0x14000c9cc
   1400122f5:	mov    QWORD PTR [rbx+0x10],rax
   1400122f9:	test   rax,rax
   1400122fc:	je     0x14001230b
   1400122fe:	or     DWORD PTR [rbx+0x18],0x8
   140012302:	mov    DWORD PTR [rbx+0x24],0x1000
   140012309:	jmp    0x14001231e
   14001230b:	or     DWORD PTR [rbx+0x18],0x4
   14001230f:	lea    rax,[rbx+0x20]
   140012313:	mov    DWORD PTR [rbx+0x24],0x2
   14001231a:	mov    QWORD PTR [rbx+0x10],rax
   14001231e:	mov    rax,QWORD PTR [rbx+0x10]
   140012322:	and    DWORD PTR [rbx+0x8],0x0
   140012326:	mov    QWORD PTR [rbx],rax
   140012329:	add    rsp,0x20
   14001232d:	pop    rbx
   14001232e:	ret    
   14001232f:	int3   
   140012330:	int3   
   140012331:	int3   
   140012332:	int3   
   140012333:	int3   
   140012334:	int3   
   140012335:	int3   
   140012336:	int3   
   140012337:	int3   
   140012338:	sub    rsp,0x28
   14001233c:	cmp    ecx,0xfffffffe
   14001233f:	jne    0x14001234e
   140012341:	call   0x14000baac
   140012346:	mov    DWORD PTR [rax],0x9
   14001234c:	jmp    0x140012390
   14001234e:	test   ecx,ecx
   140012350:	js     0x140012380
   140012352:	cmp    ecx,DWORD PTR [rip+0x6670]        # 0x1400189c8
   140012358:	jae    0x140012380
   14001235a:	movsxd rcx,ecx
   14001235d:	lea    rdx,[rip+0x667c]        # 0x1400189e0
   140012364:	mov    rax,rcx
   140012367:	and    ecx,0x1f
   14001236a:	sar    rax,0x5
   14001236e:	imul   rcx,rcx,0x58
   140012372:	mov    rax,QWORD PTR [rdx+rax*8]
   140012376:	movsx  eax,BYTE PTR [rax+rcx*1+0x8]
   14001237b:	and    eax,0x40
   14001237e:	jmp    0x140012392
   140012380:	call   0x14000baac
   140012385:	mov    DWORD PTR [rax],0x9
   14001238b:	call   0x14000ba38
   140012390:	xor    eax,eax
   140012392:	add    rsp,0x28
   140012396:	ret    
   140012397:	int3   
   140012398:	int3   
   140012399:	int3   
   14001239a:	int3   
   14001239b:	int3   
   14001239c:	int3   
   14001239d:	int3   
   14001239e:	int3   
   14001239f:	int3   
   1400123a0:	lea    rax,[rip+0x3ba9]        # 0x140015f50
   1400123a7:	ret    
   1400123a8:	int3   
   1400123a9:	int3   
   1400123aa:	int3   
   1400123ab:	int3   
   1400123ac:	int3   
   1400123ad:	int3   
   1400123ae:	int3   
   1400123af:	int3   
   1400123b0:	rex push rbx
   1400123b2:	sub    rsp,0x20
   1400123b6:	mov    eax,DWORD PTR [rip+0x6604]        # 0x1400189c0
   1400123bc:	mov    ebx,0x14
   1400123c1:	test   eax,eax
   1400123c3:	jne    0x1400123cc
   1400123c5:	mov    eax,0x200
   1400123ca:	jmp    0x1400123d1
   1400123cc:	cmp    eax,ebx
   1400123ce:	cmovl  eax,ebx
   1400123d1:	movsxd rcx,eax
   1400123d4:	mov    edx,0x8
   1400123d9:	mov    DWORD PTR [rip+0x65e1],eax        # 0x1400189c0
   1400123df:	call   0x14000ca50
   1400123e4:	mov    QWORD PTR [rip+0x55b5],rax        # 0x1400179a0
   1400123eb:	test   rax,rax
   1400123ee:	jne    0x140012414
   1400123f0:	lea    edx,[rax+0x8]
   1400123f3:	mov    rcx,rbx
   1400123f6:	mov    DWORD PTR [rip+0x65c4],ebx        # 0x1400189c0
   1400123fc:	call   0x14000ca50
   140012401:	mov    QWORD PTR [rip+0x5598],rax        # 0x1400179a0
   140012408:	test   rax,rax
   14001240b:	jne    0x140012414
   14001240d:	mov    eax,0x1a
   140012412:	jmp    0x14001248a
   140012414:	xor    ecx,ecx
   140012416:	lea    rdx,[rip+0x3b33]        # 0x140015f50
   14001241d:	mov    QWORD PTR [rcx+rax*1],rdx
   140012421:	add    rdx,0x30
   140012425:	add    rcx,0x8
   140012429:	dec    rbx
   14001242c:	je     0x140012437
   14001242e:	mov    rax,QWORD PTR [rip+0x556b]        # 0x1400179a0
   140012435:	jmp    0x14001241d
   140012437:	xor    r8d,r8d
   14001243a:	lea    rdx,[rip+0x3b2b]        # 0x140015f6c
   140012441:	lea    r9d,[r8+0x3]
   140012445:	mov    rcx,r8
   140012448:	lea    r10,[rip+0x6591]        # 0x1400189e0
   14001244f:	mov    rax,r8
   140012452:	sar    rax,0x5
   140012456:	and    ecx,0x1f
   140012459:	mov    rax,QWORD PTR [r10+rax*8]
   14001245d:	imul   rcx,rcx,0x58
   140012461:	mov    r10,QWORD PTR [rcx+rax*1]
   140012465:	cmp    r10,0xffffffffffffffff
   140012469:	je     0x140012476
   14001246b:	cmp    r10,0xfffffffffffffffe
   14001246f:	je     0x140012476
   140012471:	test   r10,r10
   140012474:	jne    0x14001247c
   140012476:	mov    DWORD PTR [rdx],0xfffffffe
   14001247c:	inc    r8
   14001247f:	add    rdx,0x30
   140012483:	dec    r9
   140012486:	jne    0x140012445
   140012488:	xor    eax,eax
   14001248a:	add    rsp,0x20
   14001248e:	pop    rbx
   14001248f:	ret    
   140012490:	int3   
   140012491:	int3   
   140012492:	int3   
   140012493:	int3   
   140012494:	int3   
   140012495:	int3   
   140012496:	int3   
   140012497:	int3   
   140012498:	sub    rsp,0x28
   14001249c:	call   0x140012f08
   1400124a1:	cmp    BYTE PTR [rip+0x3ef8],0x0        # 0x1400163a0
   1400124a8:	je     0x1400124af
   1400124aa:	call   0x140012c90
   1400124af:	mov    rcx,QWORD PTR [rip+0x54ea]        # 0x1400179a0
   1400124b6:	add    rsp,0x28
   1400124ba:	jmp    0x14000c988
   1400124bf:	int3   
   1400124c0:	int3   
   1400124c1:	int3   
   1400124c2:	int3   
   1400124c3:	int3   
   1400124c4:	int3   
   1400124c5:	int3   
   1400124c6:	int3   
   1400124c7:	int3   
   1400124c8:	rex push rbx
   1400124ca:	sub    rsp,0x20
   1400124ce:	mov    rbx,rcx
   1400124d1:	lea    rcx,[rip+0x3a78]        # 0x140015f50
   1400124d8:	cmp    rbx,rcx
   1400124db:	jb     0x14001251b
   1400124dd:	lea    rax,[rip+0x3dfc]        # 0x1400162e0
   1400124e4:	cmp    rbx,rax
   1400124e7:	ja     0x14001251b
   1400124e9:	mov    rdx,rbx
   1400124ec:	movabs rax,0x2aaaaaaaaaaaaaab
   1400124f6:	sub    rdx,rcx
   1400124f9:	imul   rdx
   1400124fc:	sar    rdx,0x3
   140012500:	mov    rcx,rdx
   140012503:	shr    rcx,0x3f
   140012507:	lea    ecx,[rcx+rdx*1+0x10]
   14001250b:	call   0x14000bef8
   140012510:	bts    DWORD PTR [rbx+0x18],0xf
   140012515:	add    rsp,0x20
   140012519:	pop    rbx
   14001251a:	ret    
   14001251b:	lea    rcx,[rbx+0x30]
   14001251f:	add    rsp,0x20
   140012523:	pop    rbx
   140012524:	rex.W jmp QWORD PTR [rip+0xfffffffffffeecd5]        # 0x140001200
   14001252b:	int3   
   14001252c:	int3   
   14001252d:	int3   
   14001252e:	int3   
   14001252f:	int3   
   140012530:	int3   
   140012531:	int3   
   140012532:	int3   
   140012533:	int3   
   140012534:	rex push rbx
   140012536:	sub    rsp,0x20
   14001253a:	mov    rbx,rdx
   14001253d:	cmp    ecx,0x14
   140012540:	jge    0x140012555
   140012542:	add    ecx,0x10
   140012545:	call   0x14000bef8
   14001254a:	bts    DWORD PTR [rbx+0x18],0xf
   14001254f:	add    rsp,0x20
   140012553:	pop    rbx
   140012554:	ret    
   140012555:	lea    rcx,[rdx+0x30]
   140012559:	add    rsp,0x20
   14001255d:	pop    rbx
   14001255e:	rex.W jmp QWORD PTR [rip+0xfffffffffffeec9b]        # 0x140001200
   140012565:	int3   
   140012566:	int3   
   140012567:	int3   
   140012568:	int3   
   140012569:	int3   
   14001256a:	int3   
   14001256b:	int3   
   14001256c:	lea    rdx,[rip+0x39dd]        # 0x140015f50
   140012573:	cmp    rcx,rdx
   140012576:	jb     0x1400125ad
   140012578:	lea    rax,[rip+0x3d61]        # 0x1400162e0
   14001257f:	cmp    rcx,rax
   140012582:	ja     0x1400125ad
   140012584:	btr    DWORD PTR [rcx+0x18],0xf
   140012589:	sub    rcx,rdx
   14001258c:	movabs rax,0x2aaaaaaaaaaaaaab
   140012596:	imul   rcx
   140012599:	sar    rdx,0x3
   14001259d:	mov    rcx,rdx
   1400125a0:	shr    rcx,0x3f
   1400125a4:	lea    ecx,[rcx+rdx*1+0x10]
   1400125a8:	jmp    0x14000bdec
   1400125ad:	add    rcx,0x30
   1400125b1:	rex.W jmp QWORD PTR [rip+0xfffffffffffeec40]        # 0x1400011f8
   1400125b8:	int3   
   1400125b9:	int3   
   1400125ba:	int3   
   1400125bb:	int3   
   1400125bc:	int3   
   1400125bd:	int3   
   1400125be:	int3   
   1400125bf:	int3   
   1400125c0:	cmp    ecx,0x14
   1400125c3:	jge    0x1400125d2
   1400125c5:	btr    DWORD PTR [rdx+0x18],0xf
   1400125ca:	add    ecx,0x10
   1400125cd:	jmp    0x14000bdec
   1400125d2:	lea    rcx,[rdx+0x30]
   1400125d6:	rex.W jmp QWORD PTR [rip+0xfffffffffffeec1b]        # 0x1400011f8
   1400125dd:	int3   
   1400125de:	int3   
   1400125df:	int3   
   1400125e0:	int3   
   1400125e1:	int3   
   1400125e2:	int3   
   1400125e3:	int3   
   1400125e4:	sub    rsp,0x28
   1400125e8:	test   rcx,rcx
   1400125eb:	jne    0x140012602
   1400125ed:	call   0x14000baac
   1400125f2:	mov    DWORD PTR [rax],0x16
   1400125f8:	call   0x14000ba38
   1400125fd:	or     eax,0xffffffff
   140012600:	jmp    0x140012605
   140012602:	mov    eax,DWORD PTR [rcx+0x1c]
   140012605:	add    rsp,0x28
   140012609:	ret    
   14001260a:	int3   
   14001260b:	int3   
   14001260c:	int3   
   14001260d:	int3   
   14001260e:	int3   
   14001260f:	int3   
   140012610:	mov    QWORD PTR [rsp+0x18],rbx
   140012615:	mov    QWORD PTR [rsp+0x20],rbp
   14001261a:	push   rsi
   14001261b:	push   rdi
   14001261c:	push   r12
   14001261e:	sub    rsp,0x40
   140012622:	mov    rax,QWORD PTR [rip+0x2a47]        # 0x140015070
   140012629:	xor    rax,rsp
   14001262c:	mov    QWORD PTR [rsp+0x30],rax
   140012631:	test   BYTE PTR [rdx+0x18],0x40
   140012635:	mov    rdi,rdx
   140012638:	movzx  esi,cx
   14001263b:	jne    0x1400127c6
   140012641:	mov    rcx,rdx
   140012644:	call   0x1400125e4
   140012649:	lea    rbp,[rip+0x29c0]        # 0x140015010
   140012650:	lea    r12,[rip+0x6389]        # 0x1400189e0
   140012657:	cmp    eax,0xffffffff
   14001265a:	je     0x140012691
   14001265c:	mov    rcx,rdi
   14001265f:	call   0x1400125e4
   140012664:	cmp    eax,0xfffffffe
   140012667:	je     0x140012691
   140012669:	mov    rcx,rdi
   14001266c:	call   0x1400125e4
   140012671:	mov    rcx,rdi
   140012674:	movsxd rbx,eax
   140012677:	sar    rbx,0x5
   14001267b:	call   0x1400125e4
   140012680:	mov    r11d,eax
   140012683:	and    r11d,0x1f
   140012687:	imul   r11,r11,0x58
   14001268b:	add    r11,QWORD PTR [r12+rbx*8]
   14001268f:	jmp    0x140012694
   140012691:	mov    r11,rbp
   140012694:	mov    al,BYTE PTR [r11+0x38]
   140012698:	and    al,0x7f
   14001269a:	cmp    al,0x2
   14001269c:	je     0x1400127af
   1400126a2:	mov    rcx,rdi
   1400126a5:	call   0x1400125e4
   1400126aa:	cmp    eax,0xffffffff
   1400126ad:	je     0x1400126e4
   1400126af:	mov    rcx,rdi
   1400126b2:	call   0x1400125e4
   1400126b7:	cmp    eax,0xfffffffe
   1400126ba:	je     0x1400126e4
   1400126bc:	mov    rcx,rdi
   1400126bf:	call   0x1400125e4
   1400126c4:	mov    rcx,rdi
   1400126c7:	movsxd rbx,eax
   1400126ca:	sar    rbx,0x5
   1400126ce:	call   0x1400125e4
   1400126d3:	mov    r11d,eax
   1400126d6:	and    r11d,0x1f
   1400126da:	imul   r11,r11,0x58
   1400126de:	add    r11,QWORD PTR [r12+rbx*8]
   1400126e2:	jmp    0x1400126e7
   1400126e4:	mov    r11,rbp
   1400126e7:	mov    al,BYTE PTR [r11+0x38]
   1400126eb:	and    al,0x7f
   1400126ed:	cmp    al,0x1
   1400126ef:	je     0x1400127af
   1400126f5:	mov    rcx,rdi
   1400126f8:	call   0x1400125e4
   1400126fd:	cmp    eax,0xffffffff
   140012700:	je     0x140012733
   140012702:	mov    rcx,rdi
   140012705:	call   0x1400125e4
   14001270a:	cmp    eax,0xfffffffe
   14001270d:	je     0x140012733
   14001270f:	mov    rcx,rdi
   140012712:	call   0x1400125e4
   140012717:	mov    rcx,rdi
   14001271a:	movsxd rbx,eax
   14001271d:	sar    rbx,0x5
   140012721:	call   0x1400125e4
   140012726:	mov    ebp,eax
   140012728:	and    ebp,0x1f
   14001272b:	imul   rbp,rbp,0x58
   14001272f:	add    rbp,QWORD PTR [r12+rbx*8]
   140012733:	test   BYTE PTR [rbp+0x8],0x80
   140012737:	je     0x1400127c6
   14001273d:	lea    rdx,[rsp+0x24]
   140012742:	lea    rcx,[rsp+0x20]
   140012747:	movzx  r9d,si
   14001274b:	mov    r8d,0x5
   140012751:	call   0x14001327c
   140012756:	xor    ebx,ebx
   140012758:	test   eax,eax
   14001275a:	je     0x140012766
   14001275c:	mov    eax,0xffff
   140012761:	jmp    0x1400127ef
   140012766:	cmp    DWORD PTR [rsp+0x20],ebx
   14001276a:	jle    0x1400127aa
   14001276c:	lea    rbp,[rsp+0x24]
   140012771:	dec    DWORD PTR [rdi+0x8]
   140012774:	js     0x14001278c
   140012776:	mov    rcx,QWORD PTR [rdi]
   140012779:	mov    al,BYTE PTR [rbp+0x0]
   14001277c:	mov    BYTE PTR [rcx],al
   14001277e:	mov    rax,QWORD PTR [rdi]
   140012781:	movzx  ecx,BYTE PTR [rax]
   140012784:	inc    rax
   140012787:	mov    QWORD PTR [rdi],rax
   14001278a:	jmp    0x14001279a
   14001278c:	movsx  ecx,BYTE PTR [rbp+0x0]
   140012790:	mov    rdx,rdi
   140012793:	call   0x140010a60
   140012798:	mov    ecx,eax
   14001279a:	cmp    ecx,0xffffffff
   14001279d:	je     0x14001275c
   14001279f:	inc    ebx
   1400127a1:	inc    rbp
   1400127a4:	cmp    ebx,DWORD PTR [rsp+0x20]
   1400127a8:	jl     0x140012771
   1400127aa:	movzx  eax,si
   1400127ad:	jmp    0x1400127ef
   1400127af:	movsxd rcx,DWORD PTR [rdi+0x8]
   1400127b3:	add    rcx,0xfffffffffffffffe
   1400127b7:	mov    DWORD PTR [rdi+0x8],ecx
   1400127ba:	test   ecx,ecx
   1400127bc:	js     0x1400127e4
   1400127be:	mov    rcx,QWORD PTR [rdi]
   1400127c1:	mov    WORD PTR [rcx],si
   1400127c4:	jmp    0x1400127db
   1400127c6:	movsxd rax,DWORD PTR [rdi+0x8]
   1400127ca:	add    rax,0xfffffffffffffffe
   1400127ce:	mov    DWORD PTR [rdi+0x8],eax
   1400127d1:	test   eax,eax
   1400127d3:	js     0x1400127e4
   1400127d5:	mov    rax,QWORD PTR [rdi]
   1400127d8:	mov    WORD PTR [rax],si
   1400127db:	add    QWORD PTR [rdi],0x2
   1400127df:	movzx  eax,si
   1400127e2:	jmp    0x1400127ef
   1400127e4:	mov    rdx,rdi
   1400127e7:	movzx  ecx,si
   1400127ea:	call   0x140012f18
   1400127ef:	mov    rcx,QWORD PTR [rsp+0x30]
   1400127f4:	xor    rcx,rsp
   1400127f7:	call   0x140009dd0
   1400127fc:	mov    rbx,QWORD PTR [rsp+0x70]
   140012801:	mov    rbp,QWORD PTR [rsp+0x78]
   140012806:	add    rsp,0x40
   14001280a:	pop    r12
   14001280c:	pop    rdi
   14001280d:	pop    rsi
   14001280e:	ret    
   14001280f:	int3   
   140012810:	int3   
   140012811:	int3   
   140012812:	int3   
   140012813:	int3   
   140012814:	int3   
   140012815:	int3   
   140012816:	int3   
   140012817:	int3   
   140012818:	mov    rcx,QWORD PTR [rip+0x2851]        # 0x140015070
   14001281f:	xor    eax,eax
   140012821:	or     rcx,0x1
   140012825:	cmp    QWORD PTR [rip+0x4cd4],rcx        # 0x140017500
   14001282c:	sete   al
   14001282f:	ret    
   140012830:	int3   
   140012831:	int3   
   140012832:	int3   
   140012833:	int3   
   140012834:	int3   
   140012835:	int3   
   140012836:	int3   
   140012837:	int3   
   140012838:	mov    rax,rsp
   14001283b:	mov    QWORD PTR [rax+0x8],rbx
   14001283f:	mov    QWORD PTR [rax+0x10],rsi
   140012843:	mov    QWORD PTR [rax+0x18],rdi
   140012847:	mov    QWORD PTR [rax+0x20],r12
   14001284b:	push   rbp
   14001284c:	mov    rbp,rsp
   14001284f:	sub    rsp,0x50
   140012853:	xor    r12d,r12d
   140012856:	mov    rsi,r8
   140012859:	mov    rdi,rdx
   14001285c:	mov    rbx,rcx
   14001285f:	test   rdx,rdx
   140012862:	je     0x140012877
   140012864:	test   r8,r8
   140012867:	je     0x140012877
   140012869:	cmp    BYTE PTR [rdx],r12b
   14001286c:	jne    0x140012893
   14001286e:	test   rcx,rcx
   140012871:	je     0x140012877
   140012873:	mov    WORD PTR [rcx],r12w
   140012877:	xor    eax,eax
   140012879:	mov    rbx,QWORD PTR [rsp+0x60]
   14001287e:	mov    rsi,QWORD PTR [rsp+0x68]
   140012883:	mov    rdi,QWORD PTR [rsp+0x70]
   140012888:	mov    r12,QWORD PTR [rsp+0x78]
   14001288d:	add    rsp,0x50
   140012891:	pop    rbp
   140012892:	ret    
   140012893:	lea    rcx,[rbp-0x20]
   140012897:	mov    rdx,r9
   14001289a:	call   0x14000d5a4
   14001289f:	mov    r11,QWORD PTR [rbp-0x20]
   1400128a3:	cmp    DWORD PTR [r11+0x14],r12d
   1400128a7:	jne    0x1400128cc
   1400128a9:	test   rbx,rbx
   1400128ac:	je     0x1400128b4
   1400128ae:	movzx  eax,BYTE PTR [rdi]
   1400128b1:	mov    WORD PTR [rbx],ax
   1400128b4:	cmp    BYTE PTR [rbp-0x8],r12b
   1400128b8:	je     0x1400128c5
   1400128ba:	mov    rax,QWORD PTR [rbp-0x10]
   1400128be:	and    DWORD PTR [rax+0xc8],0xfffffffd
   1400128c5:	mov    eax,0x1
   1400128ca:	jmp    0x140012879
   1400128cc:	movzx  ecx,BYTE PTR [rdi]
   1400128cf:	lea    rdx,[rbp-0x20]
   1400128d3:	call   0x14000ee94
   1400128d8:	test   eax,eax
   1400128da:	je     0x140012977
   1400128e0:	mov    rcx,QWORD PTR [rbp-0x20]
   1400128e4:	mov    r9d,DWORD PTR [rcx+0x10c]
   1400128eb:	cmp    r9d,0x1
   1400128ef:	jle    0x140012921
   1400128f1:	cmp    esi,r9d
   1400128f4:	jl     0x140012921
   1400128f6:	mov    ecx,DWORD PTR [rcx+0x4]
   1400128f9:	mov    eax,r12d
   1400128fc:	test   rbx,rbx
   1400128ff:	setne  al
   140012902:	mov    r8,rdi
   140012905:	mov    edx,0x9
   14001290a:	mov    DWORD PTR [rsp+0x28],eax
   14001290e:	mov    QWORD PTR [rsp+0x20],rbx
   140012913:	call   QWORD PTR [rip+0xfffffffffffee957]        # 0x140001270
   140012919:	mov    rcx,QWORD PTR [rbp-0x20]
   14001291d:	test   eax,eax
   14001291f:	jne    0x140012933
   140012921:	movsxd rax,DWORD PTR [rcx+0x10c]
   140012928:	cmp    rsi,rax
   14001292b:	jb     0x140012953
   14001292d:	cmp    BYTE PTR [rdi+0x1],r12b
   140012931:	je     0x140012953
   140012933:	mov    eax,DWORD PTR [rcx+0x10c]
   140012939:	cmp    BYTE PTR [rbp-0x8],r12b
   14001293d:	je     0x140012879
   140012943:	mov    rcx,QWORD PTR [rbp-0x10]
   140012947:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14001294e:	jmp    0x140012879
   140012953:	call   0x14000baac
   140012958:	mov    DWORD PTR [rax],0x2a
   14001295e:	cmp    BYTE PTR [rbp-0x8],r12b
   140012962:	je     0x14001296f
   140012964:	mov    rax,QWORD PTR [rbp-0x10]
   140012968:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14001296f:	or     eax,0xffffffff
   140012972:	jmp    0x140012879
   140012977:	mov    eax,r12d
   14001297a:	mov    r9d,0x1
   140012980:	test   rbx,rbx
   140012983:	setne  al
   140012986:	lea    edx,[r9+0x8]
   14001298a:	mov    r8,rdi
   14001298d:	mov    DWORD PTR [rsp+0x28],eax
   140012991:	mov    rax,QWORD PTR [rbp-0x20]
   140012995:	mov    QWORD PTR [rsp+0x20],rbx
   14001299a:	mov    ecx,DWORD PTR [rax+0x4]
   14001299d:	call   QWORD PTR [rip+0xfffffffffffee8cd]        # 0x140001270
   1400129a3:	test   eax,eax
   1400129a5:	jne    0x1400128b4
   1400129ab:	jmp    0x140012953
   1400129ad:	int3   
   1400129ae:	int3   
   1400129af:	int3   
   1400129b0:	int3   
   1400129b1:	int3   
   1400129b2:	int3   
   1400129b3:	int3   
   1400129b4:	xor    r9d,r9d
   1400129b7:	jmp    0x140012838
   1400129bc:	int3   
   1400129bd:	int3   
   1400129be:	int3   
   1400129bf:	int3   
   1400129c0:	int3   
   1400129c1:	int3   
   1400129c2:	int3   
   1400129c3:	int3   
   1400129c4:	mov    QWORD PTR [rsp+0x8],rbx
   1400129c9:	mov    QWORD PTR [rsp+0x10],rsi
   1400129ce:	push   rdi
   1400129cf:	sub    rsp,0x30
   1400129d3:	movsxd rax,r9d
   1400129d6:	mov    rbx,r8
   1400129d9:	mov    edi,edx
   1400129db:	mov    esi,ecx
   1400129dd:	test   r9d,r9d
   1400129e0:	jle    0x1400129ed
   1400129e2:	mov    rdx,rax
   1400129e5:	mov    rcx,rbx
   1400129e8:	call   0x140013298
   1400129ed:	mov    r9d,DWORD PTR [rsp+0x68]
   1400129f2:	mov    rdx,QWORD PTR [rsp+0x60]
   1400129f7:	mov    r8,rbx
   1400129fa:	mov    DWORD PTR [rsp+0x28],r9d
   1400129ff:	mov    QWORD PTR [rsp+0x20],rdx
   140012a04:	mov    edx,edi
   140012a06:	mov    r9d,eax
   140012a09:	mov    ecx,esi
   140012a0b:	call   QWORD PTR [rip+0xfffffffffffee857]        # 0x140001268
   140012a11:	mov    rbx,QWORD PTR [rsp+0x40]
   140012a16:	mov    rsi,QWORD PTR [rsp+0x48]
   140012a1b:	add    rsp,0x30
   140012a1f:	pop    rdi
   140012a20:	ret    
   140012a21:	int3   
   140012a22:	int3   
   140012a23:	int3   
   140012a24:	int3   
   140012a25:	int3   
   140012a26:	int3   
   140012a27:	int3   
   140012a28:	mov    QWORD PTR [rsp+0x8],rbx
   140012a2d:	mov    QWORD PTR [rsp+0x10],rbp
   140012a32:	push   rdi
   140012a33:	sub    rsp,0x20
   140012a37:	test   ecx,ecx
   140012a39:	js     0x140012aac
   140012a3b:	cmp    ecx,DWORD PTR [rip+0x5f87]        # 0x1400189c8
   140012a41:	jae    0x140012aac
   140012a43:	movsxd rbx,ecx
   140012a46:	lea    rbp,[rip+0x5f93]        # 0x1400189e0
   140012a4d:	mov    rdi,rbx
   140012a50:	and    ebx,0x1f
   140012a53:	sar    rdi,0x5
   140012a57:	imul   rbx,rbx,0x58
   140012a5b:	mov    rax,QWORD PTR [rbp+rdi*8+0x0]
   140012a60:	test   BYTE PTR [rax+rbx*1+0x8],0x1
   140012a65:	je     0x140012aac
   140012a67:	cmp    QWORD PTR [rax+rbx*1],0xffffffffffffffff
   140012a6c:	je     0x140012aac
   140012a6e:	cmp    DWORD PTR [rip+0x258b],0x1        # 0x140015000
   140012a75:	jne    0x140012a9e
   140012a77:	test   ecx,ecx
   140012a79:	je     0x140012a91
   140012a7b:	dec    ecx
   140012a7d:	je     0x140012a8a
   140012a7f:	dec    ecx
   140012a81:	jne    0x140012a9e
   140012a83:	mov    ecx,0xfffffff4
   140012a88:	jmp    0x140012a96
   140012a8a:	mov    ecx,0xfffffff5
   140012a8f:	jmp    0x140012a96
   140012a91:	mov    ecx,0xfffffff6
   140012a96:	xor    edx,edx
   140012a98:	call   QWORD PTR [rip+0xfffffffffffee5ba]        # 0x140001058
   140012a9e:	mov    rax,QWORD PTR [rbp+rdi*8+0x0]
   140012aa3:	or     QWORD PTR [rbx+rax*1],0xffffffffffffffff
   140012aa8:	xor    eax,eax
   140012aaa:	jmp    0x140012ac2
   140012aac:	call   0x14000baac
   140012ab1:	mov    DWORD PTR [rax],0x9
   140012ab7:	call   0x14000bad4
   140012abc:	and    DWORD PTR [rax],0x0
   140012abf:	or     eax,0xffffffff
   140012ac2:	mov    rbx,QWORD PTR [rsp+0x30]
   140012ac7:	mov    rbp,QWORD PTR [rsp+0x38]
   140012acc:	add    rsp,0x20
   140012ad0:	pop    rdi
   140012ad1:	ret    
   140012ad2:	int3   
   140012ad3:	int3   
   140012ad4:	int3   
   140012ad5:	int3   
   140012ad6:	int3   
   140012ad7:	int3   
   140012ad8:	sub    rsp,0x28
   140012adc:	cmp    ecx,0xfffffffe
   140012adf:	jne    0x140012af6
   140012ae1:	call   0x14000bad4
   140012ae6:	and    DWORD PTR [rax],0x0
   140012ae9:	call   0x14000baac
   140012aee:	mov    DWORD PTR [rax],0x9
   140012af4:	jmp    0x140012b43
   140012af6:	test   ecx,ecx
   140012af8:	js     0x140012b2b
   140012afa:	cmp    ecx,DWORD PTR [rip+0x5ec8]        # 0x1400189c8
   140012b00:	jae    0x140012b2b
   140012b02:	movsxd rdx,ecx
   140012b05:	lea    rcx,[rip+0x5ed4]        # 0x1400189e0
   140012b0c:	mov    rax,rdx
   140012b0f:	and    edx,0x1f
   140012b12:	sar    rax,0x5
   140012b16:	imul   rdx,rdx,0x58
   140012b1a:	mov    rax,QWORD PTR [rcx+rax*8]
   140012b1e:	test   BYTE PTR [rax+rdx*1+0x8],0x1
   140012b23:	je     0x140012b2b
   140012b25:	mov    rax,QWORD PTR [rax+rdx*1]
   140012b29:	jmp    0x140012b47
   140012b2b:	call   0x14000bad4
   140012b30:	and    DWORD PTR [rax],0x0
   140012b33:	call   0x14000baac
   140012b38:	mov    DWORD PTR [rax],0x9
   140012b3e:	call   0x14000ba38
   140012b43:	or     rax,0xffffffffffffffff
   140012b47:	add    rsp,0x28
   140012b4b:	ret    
   140012b4c:	int3   
   140012b4d:	int3   
   140012b4e:	int3   
   140012b4f:	int3   
   140012b50:	int3   
   140012b51:	int3   
   140012b52:	int3   
   140012b53:	int3   
   140012b54:	mov    rax,rsp
   140012b57:	mov    QWORD PTR [rax+0x8],rbx
   140012b5b:	mov    QWORD PTR [rax+0x10],rsi
   140012b5f:	mov    QWORD PTR [rax+0x18],rdi
   140012b63:	mov    QWORD PTR [rax+0x20],r12
   140012b67:	push   r14
   140012b69:	sub    rsp,0x20
   140012b6d:	movsxd rbx,ecx
   140012b70:	mov    r12,rbx
   140012b73:	sar    r12,0x5
   140012b77:	lea    r14,[rip+0x5e62]        # 0x1400189e0
   140012b7e:	and    ebx,0x1f
   140012b81:	imul   rbx,rbx,0x58
   140012b85:	mov    rsi,QWORD PTR [r14+r12*8]
   140012b89:	mov    edi,0x1
   140012b8e:	cmp    DWORD PTR [rbx+rsi*1+0xc],0x0
   140012b93:	jne    0x140012bc9
   140012b95:	lea    ecx,[rdi+0x9]
   140012b98:	call   0x14000bef8
   140012b9d:	nop
   140012b9e:	cmp    DWORD PTR [rbx+rsi*1+0xc],0x0
   140012ba3:	jne    0x140012bbf
   140012ba5:	lea    rcx,[rbx+rsi*1+0x10]
   140012baa:	mov    edx,0xfa0
   140012baf:	call   QWORD PTR [rip+0xfffffffffffee583]        # 0x140001138
   140012bb5:	neg    eax
   140012bb7:	sbb    edx,edx
   140012bb9:	and    edi,edx
   140012bbb:	inc    DWORD PTR [rbx+rsi*1+0xc]
   140012bbf:	mov    ecx,0xa
   140012bc4:	call   0x14000bdec
   140012bc9:	test   edi,edi
   140012bcb:	je     0x140012bdc
   140012bcd:	mov    rcx,QWORD PTR [r14+r12*8]
   140012bd1:	lea    rcx,[rcx+rbx*1+0x10]
   140012bd6:	call   QWORD PTR [rip+0xfffffffffffee624]        # 0x140001200
   140012bdc:	mov    eax,edi
   140012bde:	mov    rbx,QWORD PTR [rsp+0x30]
   140012be3:	mov    rsi,QWORD PTR [rsp+0x38]
   140012be8:	mov    rdi,QWORD PTR [rsp+0x40]
   140012bed:	mov    r12,QWORD PTR [rsp+0x48]
   140012bf2:	add    rsp,0x20
   140012bf6:	pop    r14
   140012bf8:	ret    
   140012bf9:	int3   
   140012bfa:	int3   
   140012bfb:	int3   
   140012bfc:	int3   
   140012bfd:	int3   
   140012bfe:	int3   
   140012bff:	int3   
   140012c00:	movsxd rdx,ecx
   140012c03:	lea    rcx,[rip+0x5dd6]        # 0x1400189e0
   140012c0a:	mov    rax,rdx
   140012c0d:	and    edx,0x1f
   140012c10:	sar    rax,0x5
   140012c14:	imul   rdx,rdx,0x58
   140012c18:	mov    rax,QWORD PTR [rcx+rax*8]
   140012c1c:	lea    rcx,[rax+rdx*1+0x10]
   140012c21:	rex.W jmp QWORD PTR [rip+0xfffffffffffee5d0]        # 0x1400011f8
   140012c28:	int3   
   140012c29:	int3   
   140012c2a:	int3   
   140012c2b:	int3   
   140012c2c:	int3   
   140012c2d:	int3   
   140012c2e:	int3   
   140012c2f:	int3   
   140012c30:	mov    WORD PTR [rsp+0x8],cx
   140012c35:	sub    rsp,0x38
   140012c39:	mov    rcx,QWORD PTR [rip+0x36e0]        # 0x140016320
   140012c40:	cmp    rcx,0xfffffffffffffffe
   140012c44:	jne    0x140012c52
   140012c46:	call   0x1400132c0
   140012c4b:	mov    rcx,QWORD PTR [rip+0x36ce]        # 0x140016320
   140012c52:	cmp    rcx,0xffffffffffffffff
   140012c56:	jne    0x140012c5f
   140012c58:	mov    eax,0xffff
   140012c5d:	jmp    0x140012c84
   140012c5f:	and    QWORD PTR [rsp+0x20],0x0
   140012c65:	lea    r9,[rsp+0x48]
   140012c6a:	lea    rdx,[rsp+0x40]
   140012c6f:	mov    r8d,0x1
   140012c75:	call   QWORD PTR [rip+0xfffffffffffee3d5]        # 0x140001050
   140012c7b:	test   eax,eax
   140012c7d:	je     0x140012c58
   140012c7f:	movzx  eax,WORD PTR [rsp+0x40]
   140012c84:	add    rsp,0x38
   140012c88:	ret    
   140012c89:	int3   
   140012c8a:	int3   
   140012c8b:	int3   
   140012c8c:	int3   
   140012c8d:	int3   
   140012c8e:	int3   
   140012c8f:	int3   
   140012c90:	mov    QWORD PTR [rsp+0x8],rbx
   140012c95:	mov    QWORD PTR [rsp+0x10],rsi
   140012c9a:	push   rdi
   140012c9b:	sub    rsp,0x30
   140012c9f:	xor    edi,edi
   140012ca1:	lea    ecx,[rdi+0x1]
   140012ca4:	call   0x14000bef8
   140012ca9:	nop
   140012caa:	lea    ebx,[rdi+0x3]
   140012cad:	mov    DWORD PTR [rsp+0x20],ebx
   140012cb1:	cmp    ebx,DWORD PTR [rip+0x5d09]        # 0x1400189c0
   140012cb7:	jge    0x140012d1e
   140012cb9:	movsxd rsi,ebx
   140012cbc:	mov    rax,QWORD PTR [rip+0x4cdd]        # 0x1400179a0
   140012cc3:	cmp    QWORD PTR [rax+rsi*8],0x0
   140012cc8:	je     0x140012d1a
   140012cca:	mov    rcx,QWORD PTR [rax+rsi*8]
   140012cce:	test   BYTE PTR [rcx+0x18],0x83
   140012cd2:	je     0x140012ce4
   140012cd4:	call   0x1400133ac
   140012cd9:	cmp    eax,0xffffffff
   140012cdc:	je     0x140012ce4
   140012cde:	inc    edi
   140012ce0:	mov    DWORD PTR [rsp+0x24],edi
   140012ce4:	cmp    ebx,0x14
   140012ce7:	jl     0x140012d1a
   140012ce9:	mov    rax,QWORD PTR [rip+0x4cb0]        # 0x1400179a0
   140012cf0:	mov    rcx,QWORD PTR [rax+rsi*8]
   140012cf4:	add    rcx,0x30
   140012cf8:	call   QWORD PTR [rip+0xfffffffffffee452]        # 0x140001150
   140012cfe:	mov    rcx,QWORD PTR [rip+0x4c9b]        # 0x1400179a0
   140012d05:	mov    rcx,QWORD PTR [rcx+rsi*8]
   140012d09:	call   0x14000c988
   140012d0e:	mov    r11,QWORD PTR [rip+0x4c8b]        # 0x1400179a0
   140012d15:	and    QWORD PTR [r11+rsi*8],0x0
   140012d1a:	inc    ebx
   140012d1c:	jmp    0x140012cad
   140012d1e:	mov    ecx,0x1
   140012d23:	call   0x14000bdec
   140012d28:	mov    eax,edi
   140012d2a:	mov    rbx,QWORD PTR [rsp+0x40]
   140012d2f:	mov    rsi,QWORD PTR [rsp+0x48]
   140012d34:	add    rsp,0x30
   140012d38:	pop    rdi
   140012d39:	ret    
   140012d3a:	int3   
   140012d3b:	int3   
   140012d3c:	int3   
   140012d3d:	int3   
   140012d3e:	int3   
   140012d3f:	int3   
   140012d40:	mov    QWORD PTR [rsp+0x8],rbx
   140012d45:	mov    QWORD PTR [rsp+0x10],rsi
   140012d4a:	push   rdi
   140012d4b:	sub    rsp,0x20
   140012d4f:	mov    eax,DWORD PTR [rcx+0x18]
   140012d52:	xor    esi,esi
   140012d54:	mov    rbx,rcx
   140012d57:	and    al,0x3
   140012d59:	cmp    al,0x2
   140012d5b:	jne    0x140012d9c
   140012d5d:	test   DWORD PTR [rcx+0x18],0x108
   140012d64:	je     0x140012d9c
   140012d66:	mov    edi,DWORD PTR [rcx]
   140012d68:	sub    edi,DWORD PTR [rcx+0x10]
   140012d6b:	test   edi,edi
   140012d6d:	jle    0x140012d9c
   140012d6f:	call   0x1400125e4
   140012d74:	mov    rdx,QWORD PTR [rbx+0x10]
   140012d78:	mov    r8d,edi
   140012d7b:	mov    ecx,eax
   140012d7d:	call   0x1400121f4
   140012d82:	cmp    eax,edi
   140012d84:	jne    0x140012d95
   140012d86:	mov    eax,DWORD PTR [rbx+0x18]
   140012d89:	test   al,al
   140012d8b:	jns    0x140012d9c
   140012d8d:	and    eax,0xfffffffd
   140012d90:	mov    DWORD PTR [rbx+0x18],eax
   140012d93:	jmp    0x140012d9c
   140012d95:	or     DWORD PTR [rbx+0x18],0x20
   140012d99:	or     esi,0xffffffff
   140012d9c:	mov    rcx,QWORD PTR [rbx+0x10]
   140012da0:	and    DWORD PTR [rbx+0x8],0x0
   140012da4:	mov    eax,esi
   140012da6:	mov    rsi,QWORD PTR [rsp+0x38]
   140012dab:	mov    QWORD PTR [rbx],rcx
   140012dae:	mov    rbx,QWORD PTR [rsp+0x30]
   140012db3:	add    rsp,0x20
   140012db7:	pop    rdi
   140012db8:	ret    
   140012db9:	int3   
   140012dba:	int3   
   140012dbb:	int3   
   140012dbc:	int3   
   140012dbd:	int3   
   140012dbe:	int3   
   140012dbf:	int3   
   140012dc0:	rex push rbx
   140012dc2:	sub    rsp,0x20
   140012dc6:	mov    rbx,rcx
   140012dc9:	test   rcx,rcx
   140012dcc:	jne    0x140012dd8
   140012dce:	add    rsp,0x20
   140012dd2:	pop    rbx
   140012dd3:	jmp    0x140012e14
   140012dd8:	call   0x140012d40
   140012ddd:	test   eax,eax
   140012ddf:	je     0x140012de6
   140012de1:	or     eax,0xffffffff
   140012de4:	jmp    0x140012e06
   140012de6:	test   DWORD PTR [rbx+0x18],0x4000
   140012ded:	je     0x140012e04
   140012def:	mov    rcx,rbx
   140012df2:	call   0x1400125e4
   140012df7:	mov    ecx,eax
   140012df9:	call   0x140013418
   140012dfe:	neg    eax
   140012e00:	sbb    eax,eax
   140012e02:	jmp    0x140012e06
   140012e04:	xor    eax,eax
   140012e06:	add    rsp,0x20
   140012e0a:	pop    rbx
   140012e0b:	ret    
   140012e0c:	int3   
   140012e0d:	int3   
   140012e0e:	int3   
   140012e0f:	int3   
   140012e10:	int3   
   140012e11:	int3   
   140012e12:	int3   
   140012e13:	int3   
   140012e14:	mov    QWORD PTR [rsp+0x8],rbx
   140012e19:	mov    QWORD PTR [rsp+0x10],rsi
   140012e1e:	mov    QWORD PTR [rsp+0x18],rdi
   140012e23:	push   r12
   140012e25:	push   r13
   140012e27:	push   r15
   140012e29:	sub    rsp,0x30
   140012e2d:	mov    r13d,ecx
   140012e30:	xor    esi,esi
   140012e32:	xor    edi,edi
   140012e34:	lea    ecx,[rsi+0x1]
   140012e37:	call   0x14000bef8
   140012e3c:	nop
   140012e3d:	xor    ebx,ebx
   140012e3f:	or     r15d,0xffffffff
   140012e43:	mov    DWORD PTR [rsp+0x20],ebx
   140012e47:	cmp    ebx,DWORD PTR [rip+0x5b73]        # 0x1400189c0
   140012e4d:	jge    0x140012ed3
   140012e53:	movsxd r12,ebx
   140012e56:	mov    rax,QWORD PTR [rip+0x4b43]        # 0x1400179a0
   140012e5d:	cmp    QWORD PTR [rax+r12*8],0x0
   140012e62:	je     0x140012ecc
   140012e64:	mov    rdx,QWORD PTR [rax+r12*8]
   140012e68:	test   BYTE PTR [rdx+0x18],0x83
   140012e6c:	je     0x140012ecc
   140012e6e:	mov    ecx,ebx
   140012e70:	call   0x140012534
   140012e75:	nop
   140012e76:	mov    rax,QWORD PTR [rip+0x4b23]        # 0x1400179a0
   140012e7d:	mov    rcx,QWORD PTR [rax+r12*8]
   140012e81:	test   BYTE PTR [rcx+0x18],0x83
   140012e85:	je     0x140012eba
   140012e87:	cmp    r13d,0x1
   140012e8b:	jne    0x140012e9f
   140012e8d:	call   0x140012dc0
   140012e92:	cmp    eax,r15d
   140012e95:	je     0x140012eba
   140012e97:	inc    esi
   140012e99:	mov    DWORD PTR [rsp+0x24],esi
   140012e9d:	jmp    0x140012eba
   140012e9f:	test   r13d,r13d
   140012ea2:	jne    0x140012eba
   140012ea4:	test   BYTE PTR [rcx+0x18],0x2
   140012ea8:	je     0x140012eba
   140012eaa:	call   0x140012dc0
   140012eaf:	cmp    eax,r15d
   140012eb2:	cmove  edi,r15d
   140012eb6:	mov    DWORD PTR [rsp+0x28],edi
   140012eba:	mov    rdx,QWORD PTR [rip+0x4adf]        # 0x1400179a0
   140012ec1:	mov    rdx,QWORD PTR [rdx+r12*8]
   140012ec5:	mov    ecx,ebx
   140012ec7:	call   0x1400125c0
   140012ecc:	inc    ebx
   140012ece:	jmp    0x140012e43
   140012ed3:	mov    ecx,0x1
   140012ed8:	call   0x14000bdec
   140012edd:	cmp    r13d,0x1
   140012ee1:	cmove  edi,esi
   140012ee4:	mov    eax,edi
   140012ee6:	mov    rbx,QWORD PTR [rsp+0x50]
   140012eeb:	mov    rsi,QWORD PTR [rsp+0x58]
   140012ef0:	mov    rdi,QWORD PTR [rsp+0x60]
   140012ef5:	add    rsp,0x30
   140012ef9:	pop    r15
   140012efb:	pop    r13
   140012efd:	pop    r12
   140012eff:	ret    
   140012f00:	int3   
   140012f01:	int3   
   140012f02:	int3   
   140012f03:	int3   
   140012f04:	int3   
   140012f05:	int3   
   140012f06:	int3   
   140012f07:	int3   
   140012f08:	mov    ecx,0x1
   140012f0d:	jmp    0x140012e14
   140012f12:	int3   
   140012f13:	int3   
   140012f14:	int3   
   140012f15:	int3   
   140012f16:	int3   
   140012f17:	int3   
   140012f18:	mov    QWORD PTR [rsp+0x8],rbx
   140012f1d:	mov    QWORD PTR [rsp+0x18],rbp
   140012f22:	push   rsi
   140012f23:	push   rdi
   140012f24:	push   r12
   140012f26:	sub    rsp,0x20
   140012f2a:	mov    r12d,ecx
   140012f2d:	mov    rcx,rdx
   140012f30:	mov    rbx,rdx
   140012f33:	call   0x1400125e4
   140012f38:	mov    edx,DWORD PTR [rbx+0x18]
   140012f3b:	movsxd rsi,eax
   140012f3e:	test   dl,0x82
   140012f41:	jne    0x140012f5c
   140012f43:	call   0x14000baac
   140012f48:	mov    DWORD PTR [rax],0x9
   140012f4e:	or     DWORD PTR [rbx+0x18],0x20
   140012f52:	mov    eax,0xffff
   140012f57:	jmp    0x140013094
   140012f5c:	test   dl,0x40
   140012f5f:	je     0x140012f6e
   140012f61:	call   0x14000baac
   140012f66:	mov    DWORD PTR [rax],0x22
   140012f6c:	jmp    0x140012f4e
   140012f6e:	xor    edi,edi
   140012f70:	test   dl,0x1
   140012f73:	je     0x140012f8e
   140012f75:	mov    DWORD PTR [rbx+0x8],edi
   140012f78:	test   dl,0x10
   140012f7b:	je     0x14001300b
   140012f81:	mov    rax,QWORD PTR [rbx+0x10]
   140012f85:	and    edx,0xfffffffe
   140012f88:	mov    QWORD PTR [rbx],rax
   140012f8b:	mov    DWORD PTR [rbx+0x18],edx
   140012f8e:	mov    eax,DWORD PTR [rbx+0x18]
   140012f91:	mov    DWORD PTR [rbx+0x8],edi
   140012f94:	and    eax,0xffffffef
   140012f97:	or     eax,0x2
   140012f9a:	mov    DWORD PTR [rbx+0x18],eax
   140012f9d:	test   eax,0x10c
   140012fa2:	jne    0x140012fd3
   140012fa4:	call   0x1400123a0
   140012fa9:	add    rax,0x30
   140012fad:	cmp    rbx,rax
   140012fb0:	je     0x140012fc0
   140012fb2:	call   0x1400123a0
   140012fb7:	add    rax,0x60
   140012fbb:	cmp    rbx,rax
   140012fbe:	jne    0x140012fcb
   140012fc0:	mov    ecx,esi
   140012fc2:	call   0x140012338
   140012fc7:	test   eax,eax
   140012fc9:	jne    0x140012fd3
   140012fcb:	mov    rcx,rbx
   140012fce:	call   0x1400122dc
   140012fd3:	test   DWORD PTR [rbx+0x18],0x108
   140012fda:	je     0x14001306c
   140012fe0:	mov    ebp,DWORD PTR [rbx]
   140012fe2:	mov    rdx,QWORD PTR [rbx+0x10]
   140012fe6:	sub    ebp,DWORD PTR [rbx+0x10]
   140012fe9:	lea    rax,[rdx+0x2]
   140012fed:	mov    QWORD PTR [rbx],rax
   140012ff0:	mov    eax,DWORD PTR [rbx+0x24]
   140012ff3:	sub    eax,0x2
   140012ff6:	mov    DWORD PTR [rbx+0x8],eax
   140012ff9:	test   ebp,ebp
   140012ffb:	jle    0x140013016
   140012ffd:	mov    r8d,ebp
   140013000:	mov    ecx,esi
   140013002:	call   0x1400121f4
   140013007:	mov    edi,eax
   140013009:	jmp    0x140013062
   14001300b:	or     edx,0x20
   14001300e:	mov    DWORD PTR [rbx+0x18],edx
   140013011:	jmp    0x140012f52
   140013016:	cmp    esi,0xffffffff
   140013019:	je     0x14001303e
   14001301b:	cmp    esi,0xfffffffe
   14001301e:	je     0x14001303e
   140013020:	mov    rcx,rsi
   140013023:	mov    rax,rsi
   140013026:	lea    rdx,[rip+0x59b3]        # 0x1400189e0
   14001302d:	and    ecx,0x1f
   140013030:	sar    rax,0x5
   140013034:	imul   rcx,rcx,0x58
   140013038:	add    rcx,QWORD PTR [rdx+rax*8]
   14001303c:	jmp    0x140013045
   14001303e:	lea    rcx,[rip+0x1fcb]        # 0x140015010
   140013045:	test   BYTE PTR [rcx+0x8],0x20
   140013049:	je     0x140013062
   14001304b:	xor    edx,edx
   14001304d:	mov    ecx,esi
   14001304f:	lea    r8d,[rdx+0x2]
   140013053:	call   0x1400119a0
   140013058:	cmp    rax,0xffffffffffffffff
   14001305c:	je     0x140012f4e
   140013062:	mov    rax,QWORD PTR [rbx+0x10]
   140013066:	mov    WORD PTR [rax],r12w
   14001306a:	jmp    0x140013088
   14001306c:	mov    ebp,0x2
   140013071:	lea    rdx,[rsp+0x48]
   140013076:	mov    ecx,esi
   140013078:	mov    r8d,ebp
   14001307b:	mov    WORD PTR [rsp+0x48],r12w
   140013081:	call   0x1400121f4
   140013086:	mov    edi,eax
   140013088:	cmp    edi,ebp
   14001308a:	jne    0x140012f4e
   140013090:	movzx  eax,r12w
   140013094:	mov    rbx,QWORD PTR [rsp+0x40]
   140013099:	mov    rbp,QWORD PTR [rsp+0x50]
   14001309e:	add    rsp,0x20
   1400130a2:	pop    r12
   1400130a4:	pop    rdi
   1400130a5:	pop    rsi
   1400130a6:	ret    
   1400130a7:	int3   
   1400130a8:	int3   
   1400130a9:	int3   
   1400130aa:	int3   
   1400130ab:	int3   
   1400130ac:	int3   
   1400130ad:	int3   
   1400130ae:	int3   
   1400130af:	int3   
   1400130b0:	mov    QWORD PTR [rsp+0x8],rbx
   1400130b5:	mov    WORD PTR [rsp+0x20],r9w
   1400130bb:	push   rbp
   1400130bc:	push   rsi
   1400130bd:	push   rdi
   1400130be:	mov    rbp,rsp
   1400130c1:	sub    rsp,0x60
   1400130c5:	mov    rdi,r8
   1400130c8:	mov    rsi,rdx
   1400130cb:	mov    rbx,rcx
   1400130ce:	test   rdx,rdx
   1400130d1:	jne    0x1400130e6
   1400130d3:	test   r8,r8
   1400130d6:	je     0x1400130e6
   1400130d8:	test   rcx,rcx
   1400130db:	je     0x1400130df
   1400130dd:	and    DWORD PTR [rcx],edx
   1400130df:	xor    eax,eax
   1400130e1:	jmp    0x140013170
   1400130e6:	test   rcx,rcx
   1400130e9:	je     0x1400130ee
   1400130eb:	or     DWORD PTR [rcx],0xffffffff
   1400130ee:	cmp    r8,0x7fffffff
   1400130f5:	jbe    0x14001310c
   1400130f7:	call   0x14000baac
   1400130fc:	mov    ebx,0x16
   140013101:	mov    DWORD PTR [rax],ebx
   140013103:	call   0x14000ba38
   140013108:	mov    eax,ebx
   14001310a:	jmp    0x140013170
   14001310c:	mov    rdx,QWORD PTR [rbp+0x40]
   140013110:	lea    rcx,[rbp-0x20]
   140013114:	call   0x14000d5a4
   140013119:	mov    r11,QWORD PTR [rbp-0x20]
   14001311d:	cmp    DWORD PTR [r11+0x14],0x0
   140013122:	jne    0x1400131da
   140013128:	movzx  eax,WORD PTR [rbp+0x38]
   14001312c:	mov    ecx,0xff
   140013131:	cmp    ax,cx
   140013134:	jbe    0x140013180
   140013136:	test   rsi,rsi
   140013139:	je     0x14001314d
   14001313b:	test   rdi,rdi
   14001313e:	je     0x14001314d
   140013140:	mov    r8,rdi
   140013143:	xor    edx,edx
   140013145:	mov    rcx,rsi
   140013148:	call   0x14000db90
   14001314d:	call   0x14000baac
   140013152:	mov    DWORD PTR [rax],0x2a
   140013158:	call   0x14000baac
   14001315d:	cmp    BYTE PTR [rbp-0x8],0x0
   140013161:	mov    eax,DWORD PTR [rax]
   140013163:	je     0x140013170
   140013165:	mov    rcx,QWORD PTR [rbp-0x10]
   140013169:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140013170:	mov    rbx,QWORD PTR [rsp+0x80]
   140013178:	add    rsp,0x60
   14001317c:	pop    rdi
   14001317d:	pop    rsi
   14001317e:	pop    rbp
   14001317f:	ret    
   140013180:	test   rsi,rsi
   140013183:	je     0x1400131b5
   140013185:	test   rdi,rdi
   140013188:	jne    0x1400131b3
   14001318a:	call   0x14000baac
   14001318f:	lea    ebx,[rdi+0x22]
   140013192:	mov    DWORD PTR [rax],ebx
   140013194:	call   0x14000ba38
   140013199:	cmp    BYTE PTR [rbp-0x8],dil
   14001319d:	je     0x140013108
   1400131a3:	mov    rcx,QWORD PTR [rbp-0x10]
   1400131a7:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   1400131ae:	jmp    0x140013108
   1400131b3:	mov    BYTE PTR [rsi],al
   1400131b5:	test   rbx,rbx
   1400131b8:	je     0x1400131c0
   1400131ba:	mov    DWORD PTR [rbx],0x1
   1400131c0:	cmp    BYTE PTR [rbp-0x8],0x0
   1400131c4:	je     0x1400130df
   1400131ca:	mov    rax,QWORD PTR [rbp-0x10]
   1400131ce:	and    DWORD PTR [rax+0xc8],0xfffffffd
   1400131d5:	jmp    0x1400130df
   1400131da:	and    DWORD PTR [rbp+0x28],0x0
   1400131de:	mov    ecx,DWORD PTR [r11+0x4]
   1400131e2:	lea    rax,[rbp+0x28]
   1400131e6:	mov    QWORD PTR [rsp+0x38],rax
   1400131eb:	and    QWORD PTR [rsp+0x30],0x0
   1400131f1:	lea    r8,[rbp+0x38]
   1400131f5:	mov    r9d,0x1
   1400131fb:	xor    edx,edx
   1400131fd:	mov    DWORD PTR [rsp+0x28],edi
   140013201:	mov    QWORD PTR [rsp+0x20],rsi
   140013206:	call   QWORD PTR [rip+0xfffffffffffee044]        # 0x140001250
   14001320c:	test   eax,eax
   14001320e:	je     0x140013223
   140013210:	cmp    DWORD PTR [rbp+0x28],0x0
   140013214:	jne    0x14001314d
   14001321a:	test   rbx,rbx
   14001321d:	je     0x1400131c0
   14001321f:	mov    DWORD PTR [rbx],eax
   140013221:	jmp    0x1400131c0
   140013223:	call   QWORD PTR [rip+0xfffffffffffede07]        # 0x140001030
   140013229:	cmp    eax,0x7a
   14001322c:	jne    0x14001314d
   140013232:	test   rsi,rsi
   140013235:	je     0x140013249
   140013237:	test   rdi,rdi
   14001323a:	je     0x140013249
   14001323c:	mov    r8,rdi
   14001323f:	xor    edx,edx
   140013241:	mov    rcx,rsi
   140013244:	call   0x14000db90
   140013249:	call   0x14000baac
   14001324e:	mov    ebx,0x22
   140013253:	mov    DWORD PTR [rax],ebx
   140013255:	call   0x14000ba38
   14001325a:	cmp    BYTE PTR [rbp-0x8],0x0
   14001325e:	je     0x140013108
   140013264:	mov    rax,QWORD PTR [rbp-0x10]
   140013268:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14001326f:	jmp    0x140013108
   140013274:	int3   
   140013275:	int3   
   140013276:	int3   
   140013277:	int3   
   140013278:	int3   
   140013279:	int3   
   14001327a:	int3   
   14001327b:	int3   
   14001327c:	sub    rsp,0x38
   140013280:	and    QWORD PTR [rsp+0x20],0x0
   140013286:	call   0x1400130b0
   14001328b:	add    rsp,0x38
   14001328f:	ret    
   140013290:	int3   
   140013291:	int3   
   140013292:	int3   
   140013293:	int3   
   140013294:	int3   
   140013295:	int3   
   140013296:	int3   
   140013297:	int3   
   140013298:	xor    r8d,r8d
   14001329b:	mov    eax,r8d
   14001329e:	test   rdx,rdx
   1400132a1:	je     0x1400132b5
   1400132a3:	cmp    WORD PTR [rcx],r8w
   1400132a7:	je     0x1400132b5
   1400132a9:	inc    rax
   1400132ac:	add    rcx,0x2
   1400132b0:	cmp    rax,rdx
   1400132b3:	jb     0x1400132a3
   1400132b5:	repz ret 
   1400132b7:	int3   
   1400132b8:	int3   
   1400132b9:	int3   
   1400132ba:	int3   
   1400132bb:	int3   
   1400132bc:	int3   
   1400132bd:	int3   
   1400132be:	int3   
   1400132bf:	int3   
   1400132c0:	sub    rsp,0x48
   1400132c4:	and    QWORD PTR [rsp+0x30],0x0
   1400132ca:	and    DWORD PTR [rsp+0x28],0x0
   1400132cf:	mov    r8d,0x3
   1400132d5:	lea    rcx,[rip+0xffffffffffff5594]        # 0x140008870
   1400132dc:	xor    r9d,r9d
   1400132df:	mov    edx,0x40000000
   1400132e4:	mov    DWORD PTR [rsp+0x20],r8d
   1400132e9:	call   QWORD PTR [rip+0xfffffffffffedd91]        # 0x140001080
   1400132ef:	mov    QWORD PTR [rip+0x302a],rax        # 0x140016320
   1400132f6:	add    rsp,0x48
   1400132fa:	ret    
   1400132fb:	int3   
   1400132fc:	int3   
   1400132fd:	int3   
   1400132fe:	int3   
   1400132ff:	int3   
   140013300:	int3   
   140013301:	int3   
   140013302:	int3   
   140013303:	int3   
   140013304:	sub    rsp,0x28
   140013308:	mov    rcx,QWORD PTR [rip+0x3011]        # 0x140016320
   14001330f:	cmp    rcx,0xffffffffffffffff
   140013313:	je     0x140013321
   140013315:	cmp    rcx,0xfffffffffffffffe
   140013319:	je     0x140013321
   14001331b:	call   QWORD PTR [rip+0xfffffffffffedd7f]        # 0x1400010a0
   140013321:	add    rsp,0x28
   140013325:	ret    
   140013326:	int3   
   140013327:	int3   
   140013328:	int3   
   140013329:	int3   
   14001332a:	int3   
   14001332b:	int3   
   14001332c:	mov    QWORD PTR [rsp+0x8],rbx
   140013331:	push   rdi
   140013332:	sub    rsp,0x20
   140013336:	or     edi,0xffffffff
   140013339:	mov    rbx,rcx
   14001333c:	test   rcx,rcx
   14001333f:	jne    0x140013355
   140013341:	call   0x14000baac
   140013346:	mov    DWORD PTR [rax],0x16
   14001334c:	call   0x14000ba38
   140013351:	or     eax,edi
   140013353:	jmp    0x14001339b
   140013355:	test   BYTE PTR [rcx+0x18],0x83
   140013359:	je     0x140013395
   14001335b:	call   0x140012d40
   140013360:	mov    rcx,rbx
   140013363:	mov    edi,eax
   140013365:	call   0x140013688
   14001336a:	mov    rcx,rbx
   14001336d:	call   0x1400125e4
   140013372:	mov    ecx,eax
   140013374:	call   0x1400135bc
   140013379:	test   eax,eax
   14001337b:	jns    0x140013382
   14001337d:	or     edi,0xffffffff
   140013380:	jmp    0x140013395
   140013382:	mov    rcx,QWORD PTR [rbx+0x28]
   140013386:	test   rcx,rcx
   140013389:	je     0x140013395
   14001338b:	call   0x14000c988
   140013390:	and    QWORD PTR [rbx+0x28],0x0
   140013395:	and    DWORD PTR [rbx+0x18],0x0
   140013399:	mov    eax,edi
   14001339b:	mov    rbx,QWORD PTR [rsp+0x30]
   1400133a0:	add    rsp,0x20
   1400133a4:	pop    rdi
   1400133a5:	ret    
   1400133a6:	int3   
   1400133a7:	int3   
   1400133a8:	int3   
   1400133a9:	int3   
   1400133aa:	int3   
   1400133ab:	int3   
   1400133ac:	mov    QWORD PTR [rsp+0x10],rbx
   1400133b1:	mov    QWORD PTR [rsp+0x8],rcx
   1400133b6:	push   rdi
   1400133b7:	sub    rsp,0x20
   1400133bb:	mov    rbx,rcx
   1400133be:	or     edi,0xffffffff
   1400133c1:	xor    eax,eax
   1400133c3:	test   rcx,rcx
   1400133c6:	setne  al
   1400133c9:	test   eax,eax
   1400133cb:	jne    0x1400133e1
   1400133cd:	call   0x14000baac
   1400133d2:	mov    DWORD PTR [rax],0x16
   1400133d8:	call   0x14000ba38
   1400133dd:	mov    eax,edi
   1400133df:	jmp    0x140013407
   1400133e1:	test   BYTE PTR [rcx+0x18],0x40
   1400133e5:	je     0x1400133ed
   1400133e7:	and    DWORD PTR [rcx+0x18],0x0
   1400133eb:	jmp    0x1400133dd
   1400133ed:	call   0x1400124c8
   1400133f2:	nop
   1400133f3:	mov    rcx,rbx
   1400133f6:	call   0x14001332c
   1400133fb:	mov    edi,eax
   1400133fd:	mov    rcx,rbx
   140013400:	call   0x14001256c
   140013405:	jmp    0x1400133dd
   140013407:	mov    rbx,QWORD PTR [rsp+0x38]
   14001340c:	add    rsp,0x20
   140013410:	pop    rdi
   140013411:	ret    
   140013412:	int3   
   140013413:	int3   
   140013414:	int3   
   140013415:	int3   
   140013416:	int3   
   140013417:	int3   
   140013418:	mov    QWORD PTR [rsp+0x18],rbx
   14001341d:	mov    DWORD PTR [rsp+0x8],ecx
   140013421:	push   rsi
   140013422:	push   rdi
   140013423:	push   r12
   140013425:	sub    rsp,0x20
   140013429:	movsxd rdi,ecx
   14001342c:	cmp    edi,0xfffffffe
   14001342f:	jne    0x140013441
   140013431:	call   0x14000baac
   140013436:	mov    DWORD PTR [rax],0x9
   14001343c:	jmp    0x1400134de
   140013441:	test   ecx,ecx
   140013443:	js     0x1400134ce
   140013449:	cmp    edi,DWORD PTR [rip+0x5579]        # 0x1400189c8
   14001344f:	jae    0x1400134ce
   140013451:	mov    rbx,rdi
   140013454:	mov    rsi,rdi
   140013457:	sar    rsi,0x5
   14001345b:	lea    r12,[rip+0x557e]        # 0x1400189e0
   140013462:	and    ebx,0x1f
   140013465:	imul   rbx,rbx,0x58
   140013469:	mov    rax,QWORD PTR [r12+rsi*8]
   14001346d:	movsx  ecx,BYTE PTR [rax+rbx*1+0x8]
   140013472:	and    ecx,0x1
   140013475:	je     0x1400134ce
   140013477:	mov    ecx,edi
   140013479:	call   0x140012b54
   14001347e:	nop
   14001347f:	mov    rax,QWORD PTR [r12+rsi*8]
   140013483:	test   BYTE PTR [rax+rbx*1+0x8],0x1
   140013488:	je     0x1400134b5
   14001348a:	mov    ecx,edi
   14001348c:	call   0x140012ad8
   140013491:	mov    rcx,rax
   140013494:	call   QWORD PTR [rip+0xfffffffffffeddfe]        # 0x140001298
   14001349a:	test   eax,eax
   14001349c:	jne    0x1400134a8
   14001349e:	call   QWORD PTR [rip+0xfffffffffffedb8c]        # 0x140001030
   1400134a4:	mov    ebx,eax
   1400134a6:	jmp    0x1400134aa
   1400134a8:	xor    ebx,ebx
   1400134aa:	test   ebx,ebx
   1400134ac:	je     0x1400134c3
   1400134ae:	call   0x14000bad4
   1400134b3:	mov    DWORD PTR [rax],ebx
   1400134b5:	call   0x14000baac
   1400134ba:	mov    DWORD PTR [rax],0x9
   1400134c0:	or     ebx,0xffffffff
   1400134c3:	mov    ecx,edi
   1400134c5:	call   0x140012c00
   1400134ca:	mov    eax,ebx
   1400134cc:	jmp    0x1400134e1
   1400134ce:	call   0x14000baac
   1400134d3:	mov    DWORD PTR [rax],0x9
   1400134d9:	call   0x14000ba38
   1400134de:	or     eax,0xffffffff
   1400134e1:	mov    rbx,QWORD PTR [rsp+0x50]
   1400134e6:	add    rsp,0x20
   1400134ea:	pop    r12
   1400134ec:	pop    rdi
   1400134ed:	pop    rsi
   1400134ee:	ret    
   1400134ef:	int3   
   1400134f0:	int3   
   1400134f1:	int3   
   1400134f2:	int3   
   1400134f3:	int3   
   1400134f4:	int3   
   1400134f5:	int3   
   1400134f6:	int3   
   1400134f7:	int3   
   1400134f8:	mov    QWORD PTR [rsp+0x8],rbx
   1400134fd:	push   rdi
   1400134fe:	sub    rsp,0x20
   140013502:	movsxd rdi,ecx
   140013505:	mov    ecx,edi
   140013507:	call   0x140012ad8
   14001350c:	cmp    rax,0xffffffffffffffff
   140013510:	je     0x14001356b
   140013512:	mov    rax,QWORD PTR [rip+0x54c7]        # 0x1400189e0
   140013519:	mov    ecx,0x2
   14001351e:	cmp    edi,0x1
   140013521:	jne    0x14001352c
   140013523:	test   BYTE PTR [rax+0xb8],dil
   14001352a:	jne    0x140013536
   14001352c:	cmp    edi,ecx
   14001352e:	jne    0x14001354d
   140013530:	test   BYTE PTR [rax+0x60],0x1
   140013534:	je     0x14001354d
   140013536:	call   0x140012ad8
   14001353b:	mov    ecx,0x1
   140013540:	mov    rbx,rax
   140013543:	call   0x140012ad8
   140013548:	cmp    rax,rbx
   14001354b:	je     0x14001356b
   14001354d:	mov    ecx,edi
   14001354f:	call   0x140012ad8
   140013554:	mov    rcx,rax
   140013557:	call   QWORD PTR [rip+0xfffffffffffedb43]        # 0x1400010a0
   14001355d:	test   eax,eax
   14001355f:	jne    0x14001356b
   140013561:	call   QWORD PTR [rip+0xfffffffffffedac9]        # 0x140001030
   140013567:	mov    ebx,eax
   140013569:	jmp    0x14001356d
   14001356b:	xor    ebx,ebx
   14001356d:	mov    ecx,edi
   14001356f:	call   0x140012a28
   140013574:	mov    r11,rdi
   140013577:	mov    rcx,rdi
   14001357a:	sar    rcx,0x5
   14001357e:	and    r11d,0x1f
   140013582:	lea    rdx,[rip+0x5457]        # 0x1400189e0
   140013589:	mov    rcx,QWORD PTR [rdx+rcx*8]
   14001358d:	imul   r11,r11,0x58
   140013591:	mov    BYTE PTR [rcx+r11*1+0x8],0x0
   140013597:	test   ebx,ebx
   140013599:	je     0x1400135a7
   14001359b:	mov    ecx,ebx
   14001359d:	call   0x14000bafc
   1400135a2:	or     eax,0xffffffff
   1400135a5:	jmp    0x1400135a9
   1400135a7:	xor    eax,eax
   1400135a9:	mov    rbx,QWORD PTR [rsp+0x30]
   1400135ae:	add    rsp,0x20
   1400135b2:	pop    rdi
   1400135b3:	ret    
   1400135b4:	int3   
   1400135b5:	int3   
   1400135b6:	int3   
   1400135b7:	int3   
   1400135b8:	int3   
   1400135b9:	int3   
   1400135ba:	int3   
   1400135bb:	int3   
   1400135bc:	mov    QWORD PTR [rsp+0x18],rbx
   1400135c1:	mov    DWORD PTR [rsp+0x8],ecx
   1400135c5:	push   rsi
   1400135c6:	push   rdi
   1400135c7:	push   r12
   1400135c9:	sub    rsp,0x20
   1400135cd:	movsxd rbx,ecx
   1400135d0:	cmp    ebx,0xfffffffe
   1400135d3:	jne    0x1400135ed
   1400135d5:	call   0x14000bad4
   1400135da:	and    DWORD PTR [rax],0x0
   1400135dd:	call   0x14000baac
   1400135e2:	mov    DWORD PTR [rax],0x9
   1400135e8:	jmp    0x14001366e
   1400135ed:	test   ecx,ecx
   1400135ef:	js     0x140013656
   1400135f1:	cmp    ebx,DWORD PTR [rip+0x53d1]        # 0x1400189c8
   1400135f7:	jae    0x140013656
   1400135f9:	mov    rdi,rbx
   1400135fc:	mov    rsi,rbx
   1400135ff:	sar    rsi,0x5
   140013603:	lea    r12,[rip+0x53d6]        # 0x1400189e0
   14001360a:	and    edi,0x1f
   14001360d:	imul   rdi,rdi,0x58
   140013611:	mov    rax,QWORD PTR [r12+rsi*8]
   140013615:	movsx  ecx,BYTE PTR [rax+rdi*1+0x8]
   14001361a:	and    ecx,0x1
   14001361d:	je     0x140013656
   14001361f:	mov    ecx,ebx
   140013621:	call   0x140012b54
   140013626:	nop
   140013627:	mov    rax,QWORD PTR [r12+rsi*8]
   14001362b:	test   BYTE PTR [rax+rdi*1+0x8],0x1
   140013630:	je     0x14001363d
   140013632:	mov    ecx,ebx
   140013634:	call   0x1400134f8
   140013639:	mov    edi,eax
   14001363b:	jmp    0x14001364b
   14001363d:	call   0x14000baac
   140013642:	mov    DWORD PTR [rax],0x9
   140013648:	or     edi,0xffffffff
   14001364b:	mov    ecx,ebx
   14001364d:	call   0x140012c00
   140013652:	mov    eax,edi
   140013654:	jmp    0x140013671
   140013656:	call   0x14000bad4
   14001365b:	and    DWORD PTR [rax],0x0
   14001365e:	call   0x14000baac
   140013663:	mov    DWORD PTR [rax],0x9
   140013669:	call   0x14000ba38
   14001366e:	or     eax,0xffffffff
   140013671:	mov    rbx,QWORD PTR [rsp+0x50]
   140013676:	add    rsp,0x20
   14001367a:	pop    r12
   14001367c:	pop    rdi
   14001367d:	pop    rsi
   14001367e:	ret    
   14001367f:	int3   
   140013680:	int3   
   140013681:	int3   
   140013682:	int3   
   140013683:	int3   
   140013684:	int3   
   140013685:	int3   
   140013686:	int3   
   140013687:	int3   
   140013688:	rex push rbx
   14001368a:	sub    rsp,0x20
   14001368e:	test   BYTE PTR [rcx+0x18],0x83
   140013692:	mov    rbx,rcx
   140013695:	je     0x1400136b9
   140013697:	test   BYTE PTR [rcx+0x18],0x8
   14001369b:	je     0x1400136b9
   14001369d:	mov    rcx,QWORD PTR [rcx+0x10]
   1400136a1:	call   0x14000c988
   1400136a6:	and    DWORD PTR [rbx+0x18],0xfffffbf7
   1400136ad:	xor    eax,eax
   1400136af:	mov    QWORD PTR [rbx],rax
   1400136b2:	mov    QWORD PTR [rbx+0x10],rax
   1400136b6:	mov    DWORD PTR [rbx+0x8],eax
   1400136b9:	add    rsp,0x20
   1400136bd:	pop    rbx
   1400136be:	ret    
   1400136bf:	int3   
   1400136c0:	int3   
   1400136c1:	int3   
   1400136c2:	int3   
   1400136c3:	int3   
   1400136c4:	int3   
   1400136c5:	int3   
   1400136c6:	rex push rbp
   1400136c8:	sub    rsp,0x20
   1400136cc:	mov    rbp,rdx
   1400136cf:	mov    rax,QWORD PTR [rcx]
   1400136d2:	mov    rdx,rcx
   1400136d5:	mov    ecx,DWORD PTR [rax]
   1400136d7:	call   0x14000a8b8
   1400136dc:	nop
   1400136dd:	add    rsp,0x20
   1400136e1:	pop    rbp
   1400136e2:	ret    
   1400136e3:	int3   
   1400136e4:	int3   
   1400136e5:	int3   
   1400136e6:	int3   
   1400136e7:	int3   
   1400136e8:	int3   
   1400136e9:	int3   
   1400136ea:	rex push rbp
   1400136ec:	sub    rsp,0x20
   1400136f0:	mov    rbp,rdx
   1400136f3:	cmp    DWORD PTR [rbp+0x80],0x0
   1400136fa:	je     0x140013707
   1400136fc:	mov    ecx,0x8
   140013701:	call   0x14000bdec
   140013706:	nop
   140013707:	add    rsp,0x20
   14001370b:	pop    rbp
   14001370c:	ret    
   14001370d:	int3   
   14001370e:	int3   
   14001370f:	int3   
   140013710:	int3   
   140013711:	int3   
   140013712:	int3   
   140013713:	int3   
   140013714:	rex push rbp
   140013716:	sub    rsp,0x20
   14001371a:	mov    rbp,rdx
   14001371d:	mov    ecx,0xd
   140013722:	call   0x14000bdec
   140013727:	nop
   140013728:	add    rsp,0x20
   14001372c:	pop    rbp
   14001372d:	ret    
   14001372e:	int3   
   14001372f:	int3   
   140013730:	int3   
   140013731:	int3   
   140013732:	int3   
   140013733:	int3   
   140013734:	rex push rbp
   140013736:	sub    rsp,0x20
   14001373a:	mov    rbp,rdx
   14001373d:	mov    ecx,0xc
   140013742:	call   0x14000bdec
   140013747:	nop
   140013748:	add    rsp,0x20
   14001374c:	pop    rbp
   14001374d:	ret    
   14001374e:	int3   
   14001374f:	int3   
   140013750:	int3   
   140013751:	int3   
   140013752:	int3   
   140013753:	int3   
   140013754:	int3   
   140013755:	rex push rbp
   140013757:	sub    rsp,0x20
   14001375b:	mov    rbp,rdx
   14001375e:	mov    rcx,QWORD PTR [rip+0x1b7b]        # 0x1400152e0
   140013765:	call   QWORD PTR [rip+0xfffffffffffeda8d]        # 0x1400011f8
   14001376b:	nop
   14001376c:	add    rsp,0x20
   140013770:	pop    rbp
   140013771:	ret    
   140013772:	int3   
   140013773:	int3   
   140013774:	int3   
   140013775:	int3   
   140013776:	int3   
   140013777:	int3   
   140013778:	int3   
   140013779:	rex push rbp
   14001377b:	sub    rsp,0x20
   14001377f:	mov    rbp,rdx
   140013782:	cmp    DWORD PTR [rbp+0x60],0x0
   140013786:	je     0x140013790
   140013788:	xor    ecx,ecx
   14001378a:	call   0x14000bdec
   14001378f:	nop
   140013790:	add    rsp,0x20
   140013794:	pop    rbp
   140013795:	ret    
   140013796:	int3   
   140013797:	int3   
   140013798:	int3   
   140013799:	int3   
   14001379a:	int3   
   14001379b:	int3   
   14001379c:	int3   
   14001379d:	rex push rbp
   14001379f:	sub    rsp,0x20
   1400137a3:	mov    rbp,rdx
   1400137a6:	call   0x14000a030
   1400137ab:	nop
   1400137ac:	add    rsp,0x20
   1400137b0:	pop    rbp
   1400137b1:	ret    
   1400137b2:	int3   
   1400137b3:	int3   
   1400137b4:	int3   
   1400137b5:	int3   
   1400137b6:	int3   
   1400137b7:	int3   
   1400137b8:	int3   
   1400137b9:	int3   
   1400137ba:	int3   
   1400137bb:	int3   
   1400137bc:	int3   
   1400137bd:	int3   
   1400137be:	int3   
   1400137bf:	int3   
   1400137c0:	rex push rbp
   1400137c2:	sub    rsp,0x20
   1400137c6:	mov    rbp,rdx
   1400137c9:	mov    rax,QWORD PTR [rcx]
   1400137cc:	xor    ecx,ecx
   1400137ce:	cmp    DWORD PTR [rax],0xc0000005
   1400137d4:	sete   cl
   1400137d7:	mov    eax,ecx
   1400137d9:	mov    eax,ecx
   1400137db:	add    rsp,0x20
   1400137df:	pop    rbp
   1400137e0:	ret    
   1400137e1:	int3   
   1400137e2:	int3   
   1400137e3:	int3   
   1400137e4:	int3   
   1400137e5:	int3   
   1400137e6:	int3   
   1400137e7:	int3   
   1400137e8:	rex push rbp
   1400137ea:	sub    rsp,0x20
   1400137ee:	mov    rbp,rdx
   1400137f1:	mov    ecx,0xc
   1400137f6:	call   0x14000bdec
   1400137fb:	nop
   1400137fc:	add    rsp,0x20
   140013800:	pop    rbp
   140013801:	ret    
   140013802:	int3   
   140013803:	int3   
   140013804:	int3   
   140013805:	int3   
   140013806:	int3   
   140013807:	int3   
   140013808:	int3   
   140013809:	rex push rbp
   14001380b:	sub    rsp,0x20
   14001380f:	mov    rbp,rdx
   140013812:	mov    ecx,0xd
   140013817:	call   0x14000bdec
   14001381c:	nop
   14001381d:	add    rsp,0x20
   140013821:	pop    rbp
   140013822:	ret    
   140013823:	int3   
   140013824:	int3   
   140013825:	int3   
   140013826:	int3   
   140013827:	int3   
   140013828:	int3   
   140013829:	int3   
   14001382a:	rex push rbp
   14001382c:	sub    rsp,0x20
   140013830:	mov    rbp,rdx
   140013833:	mov    ecx,0xe
   140013838:	call   0x14000bdec
   14001383d:	nop
   14001383e:	add    rsp,0x20
   140013842:	pop    rbp
   140013843:	ret    
   140013844:	int3   
   140013845:	int3   
   140013846:	int3   
   140013847:	int3   
   140013848:	int3   
   140013849:	int3   
   14001384a:	int3   
   14001384b:	rex push rbp
   14001384d:	sub    rsp,0x20
   140013851:	mov    rbp,rdx
   140013854:	mov    ecx,DWORD PTR [rbp+0x50]
   140013857:	call   0x140012c00
   14001385c:	nop
   14001385d:	add    rsp,0x20
   140013861:	pop    rbp
   140013862:	ret    
   140013863:	int3   
   140013864:	int3   
   140013865:	int3   
   140013866:	int3   
   140013867:	int3   
   140013868:	int3   
   140013869:	int3   
   14001386a:	rex push rbp
   14001386c:	sub    rsp,0x20
   140013870:	mov    rbp,rdx
   140013873:	mov    ecx,0xa
   140013878:	call   0x14000bdec
   14001387d:	nop
   14001387e:	add    rsp,0x20
   140013882:	pop    rbp
   140013883:	ret    
   140013884:	int3   
   140013885:	int3   
   140013886:	int3   
   140013887:	int3   
   140013888:	int3   
   140013889:	int3   
   14001388a:	int3   
   14001388b:	rex push rbp
   14001388d:	sub    rsp,0x20
   140013891:	mov    rbp,rdx
   140013894:	mov    ecx,0x1
   140013899:	call   0x14000bdec
   14001389e:	nop
   14001389f:	add    rsp,0x20
   1400138a3:	pop    rbp
   1400138a4:	ret    
   1400138a5:	int3   
   1400138a6:	int3   
   1400138a7:	int3   
   1400138a8:	int3   
   1400138a9:	int3   
   1400138aa:	int3   
   1400138ab:	int3   
   1400138ac:	rex push rbp
   1400138ae:	sub    rsp,0x20
   1400138b2:	mov    rbp,rdx
   1400138b5:	movsxd rcx,DWORD PTR [rbp+0x20]
   1400138b9:	mov    rax,rcx
   1400138bc:	mov    rdx,QWORD PTR [rip+0x40dd]        # 0x1400179a0
   1400138c3:	mov    rdx,QWORD PTR [rdx+rcx*8]
   1400138c7:	call   0x1400125c0
   1400138cc:	nop
   1400138cd:	add    rsp,0x20
   1400138d1:	pop    rbp
   1400138d2:	ret    
   1400138d3:	int3   
   1400138d4:	int3   
   1400138d5:	int3   
   1400138d6:	int3   
   1400138d7:	int3   
   1400138d8:	int3   
   1400138d9:	int3   
   1400138da:	int3   
   1400138db:	int3   
   1400138dc:	rex push rbp
   1400138de:	sub    rsp,0x20
   1400138e2:	mov    rbp,rdx
   1400138e5:	mov    ecx,0x1
   1400138ea:	call   0x14000bdec
   1400138ef:	nop
   1400138f0:	add    rsp,0x20
   1400138f4:	pop    rbp
   1400138f5:	ret    
   1400138f6:	int3   
   1400138f7:	int3   
   1400138f8:	int3   
   1400138f9:	int3   
   1400138fa:	int3   
   1400138fb:	int3   
   1400138fc:	int3   
   1400138fd:	rex push rbp
   1400138ff:	sub    rsp,0x20
   140013903:	mov    rbp,rdx
   140013906:	mov    rcx,QWORD PTR [rbp+0x30]
   14001390a:	call   0x14001256c
   14001390f:	nop
   140013910:	add    rsp,0x20
   140013914:	pop    rbp
   140013915:	ret    
   140013916:	int3   
   140013917:	int3   
   140013918:	int3   
   140013919:	int3   
   14001391a:	int3   
   14001391b:	int3   
   14001391c:	int3   
   14001391d:	rex push rbp
   14001391f:	sub    rsp,0x20
   140013923:	mov    rbp,rdx
   140013926:	mov    ecx,DWORD PTR [rbp+0x40]
   140013929:	call   0x140012c00
   14001392e:	nop
   14001392f:	add    rsp,0x20
   140013933:	pop    rbp
   140013934:	ret    
   140013935:	int3   
   140013936:	int3   
   140013937:	int3   
   140013938:	int3   
   140013939:	int3   
   14001393a:	int3   
   14001393b:	int3   
   14001393c:	int3   
   14001393d:	int3   
   14001393e:	int3   
   14001393f:	int3   
   140013940:	lea    rax,[rip+0xfffffffffffee661]        # 0x140001fa8
   140013947:	lea    rcx,[rip+0x382a]        # 0x140017178
   14001394e:	mov    QWORD PTR [rip+0x3823],rax        # 0x140017178
   140013955:	jmp    0x14000dd94
   14001395a:	int3   
   14001395b:	int3   
   14001395c:	int3   
   14001395d:	int3   
   14001395e:	int3   
   14001395f:	int3   
   140013960:	or     DWORD PTR [rdx],ecx
   140013962:	add    al,0x0
   140013964:	or     dh,BYTE PTR [rcx+rcx*1]
   140013967:	add    BYTE PTR [rdx],cl
   140013969:	push   rdx
   14001396a:	(bad)  
   14001396b:	jo     0x140013921
   14001396d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001396e:	add    BYTE PTR [rax],al
   140013970:	add    DWORD PTR [rax],eax
   140013972:	add    BYTE PTR [rax],al
   140013974:	(bad)  
   140013975:	pushf  
   140013976:	add    BYTE PTR [rax],al
   140013978:	jae    0x140013917
   14001397a:	add    BYTE PTR [rax],al
   14001397c:	(bad)  
   14001397d:	add    DWORD PTR ss:[rax],eax
   140013980:	jae    0x14001391f
   140013982:	add    BYTE PTR [rax],al
   140013984:	add    BYTE PTR [rax],al
   140013986:	add    BYTE PTR [rax],al
   140013988:	add    DWORD PTR [rax],eax
   14001398a:	add    BYTE PTR [rax],al
   14001398c:	add    DWORD PTR [rdi],ecx
   14001398e:	add    al,0x0
   140013990:	sysenter 
   140013992:	(bad)  
   140013993:	add    BYTE PTR [rdi],cl
   140013995:	xor    cl,BYTE PTR [rbx]
   140013997:	jo     0x1400139aa
   140013999:	sbb    al,0xa
   14001399b:	add    BYTE PTR [rsp+riz*2],bl
   14001399e:	ltr    WORD PTR [rsp+rsi*1]
   1400139a2:	(bad)  
   1400139a3:	add    BYTE PTR [rdx+rsi*2],bl
   1400139a6:	sbb    al,dh
   1400139a8:	(bad)  
   1400139a9:	loopne 0x1400139bf
   1400139ab:	rcl    BYTE PTR [rdx],1
   1400139ad:	rcl    BYTE PTR [rax],0x70
   1400139b0:	mov    ah,0xa6
   1400139b2:	add    BYTE PTR [rax],al
   1400139b4:	add    DWORD PTR [rax],eax
   1400139b6:	add    BYTE PTR [rax],al
   1400139b8:	out    dx,eax
   1400139b9:	movabs eax,ds:0x36ea0000a2fd0000
   1400139c2:	add    DWORD PTR [rax],eax
   1400139c4:	add    BYTE PTR [rax],al
   1400139c6:	add    BYTE PTR [rax],al
   1400139c8:	sbb    DWORD PTR [rip+0x641b000b],ebp        # 0x1a41c39d9
   1400139ce:	push   rcx
   1400139cf:	add    BYTE PTR [rbx],bl
   1400139d1:	push   rsp
   1400139d2:	push   rax
   1400139d3:	add    BYTE PTR [rbx],bl
   1400139d5:	xor    al,0x4f
   1400139d7:	add    BYTE PTR [rbx],bl
   1400139d9:	add    DWORD PTR [rdx+0x0],ecx
   1400139dc:	adc    al,0xd0
   1400139de:	adc    al,al
   1400139e0:	adc    BYTE PTR [rax+0x0],dh
   1400139e3:	add    BYTE PTR [rax*8+0x2400000],ah
   1400139ea:	add    BYTE PTR [rax],al
   1400139ec:	add    DWORD PTR [rax],esp
   1400139ee:	or     al,0x0
   1400139f0:	and    BYTE PTR [rcx+rdx*1+0x0],ah
   1400139f4:	and    BYTE PTR [rax+rdx*1+0x0],dl
   1400139f8:	and    BYTE PTR [rsi+rcx*1],dh
   1400139fb:	add    BYTE PTR [rax],ah
   1400139fd:	jb     0x140013a1b
   1400139ff:	lock sbb ah,al
   140013a02:	sbb    al,dl
   140013a04:	(bad)  
   140013a05:	rcl    BYTE PTR [rax+rsi*2],0x1
   140013a09:	sbb    DWORD PTR [rdx],ecx
   140013a0b:	add    BYTE PTR [rcx],bl
   140013a0d:	je     0x140013a1a
   140013a0f:	add    BYTE PTR [rcx],bl
   140013a11:	or     al,BYTE PTR fs:[rax]
   140013a14:	sbb    DWORD PTR [rcx+rcx*1+0x0],edx
   140013a18:	sbb    DWORD PTR [rax+rcx*1],esi
   140013a1b:	add    BYTE PTR [rcx],bl
   140013a1d:	push   rdx
   140013a1e:	adc    eax,0x91501c0
   140013a23:	add    BYTE PTR [rip+0x150005d4],dl        # 0x155013ffd
   140013a29:	je     0x140013a2f
   140013a2b:	add    BYTE PTR [rip+0x15000364],dl        # 0x155013d95
   140013a31:	xor    al,0x2
   140013a33:	add    BYTE PTR [rip+0x10000e0],dl        # 0x141013b19
   140013a39:	or     al,0x6
   140013a3b:	add    BYTE PTR [rsp+rsi*1],cl
   140013a3e:	or     al,0x0
   140013a40:	or     al,0x52
   140013a42:	or     BYTE PTR [rax+0x7],dh
   140013a45:	(bad)  
   140013a46:	(bad)  
   140013a47:	push   rax
   140013a48:	add    DWORD PTR [rbx+rcx*1],ebx
   140013a4b:	add    BYTE PTR [rsp+rsi*2],bl
   140013a4e:	sbb    BYTE PTR [rax],al
   140013a50:	sbb    al,0x54
   140013a52:	(bad)  
   140013a53:	add    BYTE PTR [rsp+rsi*1],bl
   140013a56:	(bad)  
   140013a57:	add    BYTE PTR [rcx+rax*1],bl
   140013a5a:	adc    al,BYTE PTR [rax]
   140013a5c:	adc    eax,0x11d013e0
   140013a61:	rol    BYTE PTR [rax],0x0
   140013a64:	adc    DWORD PTR [rdx],ecx
   140013a66:	add    al,0x0
   140013a68:	or     dh,BYTE PTR [rsi+rax*1]
   140013a6b:	add    BYTE PTR [rdx],cl
   140013a6d:	xor    al,BYTE PTR [rsi]
   140013a6f:	jo     0x140013a25
   140013a71:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140013a72:	add    BYTE PTR [rax],al
   140013a74:	add    al,BYTE PTR [rax]
   140013a76:	add    BYTE PTR [rax],al
   140013a78:	fidiv  WORD PTR [rdx-0x4d180000]
   140013a7e:	add    BYTE PTR [rax],al
   140013a80:	adc    al,0x37
   140013a82:	add    DWORD PTR [rax],eax
   140013a84:	add    BYTE PTR [rax],al
   140013a86:	add    BYTE PTR [rax],al
   140013a88:	std    
   140013a89:	mov    dl,0x0
   140013a8b:	add    BYTE PTR [rbx+rsi*4],ah
   140013a8e:	add    BYTE PTR [rax],al
   140013a90:	xor    al,0x37
   140013a92:	add    DWORD PTR [rax],eax
   140013a94:	add    BYTE PTR [rax],al
   140013a96:	add    BYTE PTR [rax],al
   140013a98:	add    DWORD PTR [rsi],eax
   140013a9a:	add    al,BYTE PTR [rax]
   140013a9c:	(bad)  
   140013a9d:	xor    al,BYTE PTR [rdx]
   140013a9f:	push   rax
   140013aa0:	adc    DWORD PTR [rbx],edx
   140013aa2:	add    al,0x0
   140013aa4:	adc    esi,DWORD PTR [rdi+rax*1]
   140013aa7:	add    BYTE PTR [rbx],dl
   140013aa9:	xor    cl,BYTE PTR [rdi]
   140013aab:	jo     0x140013a61
   140013aad:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140013aae:	add    BYTE PTR [rax],al
   140013ab0:	add    al,BYTE PTR [rax]
   140013ab2:	add    BYTE PTR [rax],al
   140013ab4:	cwde   
   140013ab5:	mov    ah,0x0
   140013ab7:	add    ch,al
   140013ab9:	mov    ah,0x0
   140013abb:	add    BYTE PTR [rdi+rsi*1],dl
   140013abe:	add    DWORD PTR [rax],eax
   140013ac0:	add    BYTE PTR [rax],al
   140013ac2:	add    BYTE PTR [rax],al
   140013ac4:	xlat   BYTE PTR ds:[rbx]
   140013ac5:	mov    ah,0x0
   140013ac7:	add    BYTE PTR [rsi],cl
   140013ac9:	mov    ch,0x0
   140013acb:	add    BYTE PTR [rdi+rsi*1],dh
   140013ace:	add    DWORD PTR [rax],eax
   140013ad0:	add    BYTE PTR [rax],al
   140013ad2:	add    BYTE PTR [rax],al
   140013ad4:	add    DWORD PTR [rdx],ecx
   140013ad6:	add    al,0x0
   140013ad8:	or     dh,BYTE PTR [rax+rcx*1]
   140013adb:	add    BYTE PTR [rdx],cl
   140013add:	xor    al,BYTE PTR [rsi]
   140013adf:	jo     0x140013ae2
   140013ae1:	or     al,0x2
   140013ae3:	add    BYTE PTR [rcx+rax*1],cl
   140013ae6:	adc    DWORD PTR [rax],eax
   140013ae8:	sbb    DWORD PTR [rsi],ebp
   140013aea:	or     DWORD PTR [rax],eax
   140013aec:	sbb    eax,0x1d00c464
   140013af1:	xor    al,0xc3
   140013af3:	add    BYTE PTR [rip+0xe00be01],bl        # 0x14e01f8fa
   140013af9:	ror    BYTE PTR [rax+rsi*2],0xb
   140013afd:	push   rax
   140013afe:	add    BYTE PTR [rax],al
   140013b00:	and    al,0xc5
   140013b02:	add    BYTE PTR [rax],al
   140013b04:	loopne 0x140013b0b
   140013b06:	add    BYTE PTR [rax],al
   140013b08:	add    DWORD PTR [rax+rcx*1],edx
   140013b0b:	add    BYTE PTR [rsp+riz*2],dl
   140013b0e:	or     al,BYTE PTR [rax]
   140013b10:	adc    al,0x54
   140013b12:	or     DWORD PTR [rax],eax
   140013b14:	adc    al,0x34
   140013b16:	or     BYTE PTR [rax],al
   140013b18:	adc    al,0x52
   140013b1a:	adc    BYTE PTR [rax+0x1],dh
   140013b1d:	add    al,0x1
   140013b1f:	add    BYTE PTR [rdx+riz*2],al
   140013b22:	add    BYTE PTR [rax],al
   140013b24:	add    DWORD PTR [rsi],eax
   140013b26:	add    al,BYTE PTR [rax]
   140013b28:	(bad)  
   140013b29:	xor    al,BYTE PTR [rdx]
   140013b2b:	xor    BYTE PTR [rcx],cl
   140013b2d:	add    al,0x1
   140013b2f:	add    BYTE PTR [rdx+rax*2],al
   140013b32:	add    BYTE PTR [rax],al
   140013b34:	mov    ah,0xa6
   140013b36:	add    BYTE PTR [rax],al
   140013b38:	add    DWORD PTR [rax],eax
   140013b3a:	add    BYTE PTR [rax],al
   140013b3c:	xchg   ebp,eax
   140013b3d:	mov    esp,0xbc990000
   140013b42:	add    BYTE PTR [rax],al
   140013b44:	add    DWORD PTR [rax],eax
   140013b46:	add    BYTE PTR [rax],al
   140013b48:	cdq    
   140013b49:	mov    esp,0x15010000
   140013b4e:	or     BYTE PTR [rax],al
   140013b50:	adc    eax,0x15000874
   140013b55:	fs (bad) 
   140013b57:	add    BYTE PTR [rip+0x15000634],dl        # 0x155014191
   140013b5d:	xor    dl,BYTE PTR [rcx]
   140013b5f:	rcl    BYTE PTR [rcx],0x15
   140013b62:	or     BYTE PTR [rax],al
   140013b64:	adc    eax,0x15000874
   140013b69:	fs (bad) 
   140013b6b:	add    BYTE PTR [rip+0x15000634],dl        # 0x1550141a5
   140013b71:	xor    dl,BYTE PTR [rcx]
   140013b73:	shl    BYTE PTR [rsi+riz*4+0x10000],1
   140013b7a:	add    BYTE PTR [rax],al
   140013b7c:	(bad)  
   140013b7d:	mov    esi,0xbecd0000
   140013b82:	add    BYTE PTR [rax],al
   140013b84:	push   rbp
   140013b85:	(bad)  
   140013b86:	add    DWORD PTR [rax],eax
   140013b88:	add    BYTE PTR [rax],al
   140013b8a:	add    BYTE PTR [rax],al
   140013b8c:	adc    DWORD PTR [rdi],edx
   140013b8e:	or     al,BYTE PTR [rax]
   140013b90:	(bad)  
   140013b91:	fs (bad) 
   140013b93:	add    BYTE PTR [rdi],dl
   140013b95:	xor    al,0xd
   140013b97:	add    BYTE PTR [rdi],dl
   140013b99:	push   rdx
   140013b9a:	adc    esi,eax
   140013b9c:	adc    eax,esp
   140013b9e:	(bad)  
   140013ba0:	or     eax,0xb4700bc0
   140013ba5:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140013ba6:	add    BYTE PTR [rax],al
   140013ba8:	add    DWORD PTR [rax],eax
   140013baa:	add    BYTE PTR [rax],al
   140013bac:	mov    ch,0xc0
   140013bae:	add    BYTE PTR [rax],al
   140013bb0:	rex.XB rol DWORD PTR [r8],0x0
   140013bb4:	jns    0x140013bed
   140013bb6:	add    DWORD PTR [rax],eax
   140013bb8:	add    BYTE PTR [rax],al
   140013bba:	add    BYTE PTR [rax],al
   140013bbc:	adc    DWORD PTR [rcx],ebx
   140013bbe:	or     al,BYTE PTR [rax]
   140013bc0:	sbb    DWORD PTR [rdx+rcx*1+0x0],esi
   140013bc4:	sbb    DWORD PTR [rcx+rcx*1+0x0],esp
   140013bc8:	sbb    DWORD PTR [rax+rcx*1],esi
   140013bcb:	add    BYTE PTR [rcx],bl
   140013bcd:	xor    dl,BYTE PTR [rip+0x11d013e0]        # 0x151d14fb3
   140013bd3:	shl    BYTE PTR [rsi+riz*4+0x10000],0x0
   140013bdb:	add    BYTE PTR [rsi+0x540000c2],cl
   140013be1:	ret    
   140013be2:	add    BYTE PTR [rax],al
   140013be4:	popf   
   140013be5:	(bad)  
   140013be6:	add    DWORD PTR [rax],eax
   140013be8:	add    BYTE PTR [rax],al
   140013bea:	add    BYTE PTR [rax],al
   140013bec:	add    DWORD PTR [rcx+rax*1],eax
   140013bef:	add    BYTE PTR [rdx+rax*2],al
   140013bf2:	add    BYTE PTR [rax],al
   140013bf4:	add    DWORD PTR [rdx],ecx
   140013bf6:	add    al,0x0
   140013bf8:	or     dh,BYTE PTR [rsi+rax*1]
   140013bfb:	add    BYTE PTR [rdx],cl
   140013bfd:	xor    al,BYTE PTR [rsi]
   140013bff:	jo     0x140013c0a
   140013c01:	add    al,0x1
   140013c03:	add    BYTE PTR [rdx+rax*2],al
   140013c06:	add    BYTE PTR [rax],al
   140013c08:	mov    ah,0xa6
   140013c0a:	add    BYTE PTR [rax],al
   140013c0c:	add    DWORD PTR [rax],eax
   140013c0e:	add    BYTE PTR [rax],al
   140013c10:	ja     0x140013bd6
   140013c12:	add    BYTE PTR [rax],al
   140013c14:	stos   BYTE PTR es:[rdi],al
   140013c15:	(bad)  
   140013c16:	add    BYTE PTR [rax],al
   140013c18:	shl    BYTE PTR [rdi],0x1
   140013c1b:	add    BYTE PTR [rdx+0x10000c4],ch
   140013c21:	add    BYTE PTR [rax],al
   140013c23:	add    BYTE PTR [rcx],bl
   140013c25:	(bad)  
   140013c26:	or     BYTE PTR [rax],al
   140013c28:	setb   BYTE PTR [rbx]
   140013c2b:	loopne 0x140013c36
   140013c2d:	rol    BYTE PTR [rdi],1
   140013c2f:	rol    BYTE PTR [rip+0x3600470],0x50        # 0x1436140a6
   140013c36:	add    dh,BYTE PTR [rax]
   140013c38:	and    al,0xc5
   140013c3a:	add    BYTE PTR [rax],al
   140013c3c:	rex.W add BYTE PTR [rax],al
   140013c3f:	add    BYTE PTR [rcx],al
   140013c41:	(bad)  
   140013c42:	add    al,BYTE PTR [rax]
   140013c44:	(bad)  
   140013c45:	add    DWORD PTR [rbx+0x100],ebx
   140013c4b:	add    BYTE PTR [rcx],al
   140013c4d:	add    BYTE PTR [rax],al
   140013c4f:	add    BYTE PTR [rcx],al
   140013c51:	add    BYTE PTR [rax],al
   140013c53:	add    BYTE PTR [rcx],al
   140013c55:	or     al,BYTE PTR [rdx]
   140013c57:	add    BYTE PTR [rdx],cl
   140013c59:	xor    al,BYTE PTR [rsi]
   140013c5b:	xor    BYTE PTR [rcx],al
   140013c5d:	sbb    DWORD PTR [rdx],ecx
   140013c5f:	add    BYTE PTR [rcx],bl
   140013c61:	je     0x140013c6c
   140013c63:	add    BYTE PTR [rcx],bl
   140013c65:	or     BYTE PTR fs:[rax],al
   140013c68:	sbb    DWORD PTR [rdi+rax*1+0x0],edx
   140013c6c:	sbb    DWORD PTR [rsi+rax*1],esi
   140013c6f:	add    BYTE PTR [rcx],bl
   140013c71:	xor    dl,BYTE PTR [rip+0xc0]        # 0x140013d37
   140013c77:	add    BYTE PTR [rcx],al
   140013c79:	add    BYTE PTR [rax],al
   140013c7b:	add    BYTE PTR [rcx],dl
   140013c7d:	(bad)  
   140013c7e:	add    al,BYTE PTR [rax]
   140013c80:	(bad)  
   140013c81:	xor    al,BYTE PTR [rdx]
   140013c83:	xor    BYTE PTR [rsi+riz*4+0x10000],dh
   140013c8a:	add    BYTE PTR [rax],al
   140013c8c:	sbb    edx,edx
   140013c8e:	add    BYTE PTR [rax],al
   140013c90:	xor    edx,edx
   140013c92:	add    BYTE PTR [rax],al
   140013c94:	call   0x140013dd0
   140013c99:	add    BYTE PTR [rax],al
   140013c9b:	add    BYTE PTR [rcx],al
   140013c9d:	adc    al,0x8
   140013c9f:	add    BYTE PTR [rsp+riz*2],dl
   140013ca2:	or     BYTE PTR [rax],al
   140013ca4:	adc    al,0x54
   140013ca6:	(bad)  
   140013ca7:	add    BYTE PTR [rsp+rsi*1],dl
   140013caa:	(bad)  
   140013cab:	add    BYTE PTR [rdx+rsi*1],dl
   140013cae:	adc    BYTE PTR [rax+0x19],dh
   140013cb1:	(bad)  
   140013cb2:	or     DWORD PTR [rax],eax
   140013cb4:	(bad)  
   140013cb5:	je     0x140013c6c
   140013cb7:	add    BYTE PTR [rsi],bl
   140013cb9:	fs mov ah,0x0
   140013cbc:	(bad)  
   140013cbd:	xor    al,0xb3
   140013cbf:	add    BYTE PTR [rsi],bl
   140013cc1:	add    DWORD PTR [rax+0x501000],esi
   140013cc7:	add    BYTE PTR [rax*8+0x5700000],ah
   140013cce:	add    BYTE PTR [rax],al
   140013cd0:	adc    DWORD PTR [rdx],ecx
   140013cd2:	add    al,0x0
   140013cd4:	or     dh,BYTE PTR [rdi+rax*1]
   140013cd7:	add    BYTE PTR [rdx],cl
   140013cd9:	xor    al,BYTE PTR [rsi]
   140013cdb:	jo     0x140013c91
   140013cdd:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140013cde:	add    BYTE PTR [rax],al
   140013ce0:	add    DWORD PTR [rax],eax
   140013ce2:	add    BYTE PTR [rax],al
   140013ce4:	and    dl,ch
   140013ce6:	add    BYTE PTR [rax],al
   140013ce8:	jns    0x140013cbf
   140013cea:	add    BYTE PTR [rax],al
   140013cec:	or     DWORD PTR [rax],edi
   140013cee:	add    DWORD PTR [rax],eax
   140013cf0:	add    BYTE PTR [rax],al
   140013cf2:	add    BYTE PTR [rax],al
   140013cf4:	sbb    DWORD PTR [rdi],ebx
   140013cf6:	or     BYTE PTR [rax],al
   140013cf8:	adc    BYTE PTR [rax+rdx*1],dh
   140013cfb:	add    BYTE PTR [rax],dl
   140013cfd:	jb     0x140013d0b
   140013cff:	ror    BYTE PTR [rdx],1
   140013d01:	ror    BYTE PTR [rax],0x70
   140013d04:	(bad)  
   140013d05:	(bad)  
   140013d06:	(bad)  
   140013d07:	push   rax
   140013d08:	and    al,0xc5
   140013d0a:	add    BYTE PTR [rax],al
   140013d0c:	cmp    BYTE PTR [rax],al
   140013d0e:	add    BYTE PTR [rax],al
   140013d10:	adc    DWORD PTR [rcx],ebx
   140013d12:	or     al,BYTE PTR [rax]
   140013d14:	sbb    esp,eax
   140013d16:	or     eax,DWORD PTR [rax]
   140013d18:	sbb    DWORD PTR [rdx+rcx*1+0x0],esi
   140013d1c:	sbb    DWORD PTR [rcx+rcx*1+0x0],esp
   140013d20:	sbb    DWORD PTR [rax+rcx*1],esi
   140013d23:	add    BYTE PTR [rcx],bl
   140013d25:	push   rdx
   140013d26:	adc    eax,0xa6b4d0
   140013d2b:	add    BYTE PTR [rcx],al
   140013d2d:	add    BYTE PTR [rax],al
   140013d2f:	add    BYTE PTR [rax-0x26],al
   140013d32:	add    BYTE PTR [rax],al
   140013d34:	in     al,dx
   140013d35:	fiadd  DWORD PTR [rax]
   140013d37:	add    BYTE PTR [rcx],cl
   140013d39:	cmp    BYTE PTR [rcx],al
   140013d3b:	add    BYTE PTR [rax],al
   140013d3d:	add    BYTE PTR [rax],al
   140013d3f:	add    BYTE PTR [rcx],al
   140013d41:	add    BYTE PTR [rax],al
   140013d43:	add    BYTE PTR [rcx],al
   140013d45:	adc    al,0x6
   140013d47:	add    BYTE PTR [rsp+riz*2],dl
   140013d4a:	(bad)  
   140013d4b:	add    BYTE PTR [rsp+rsi*1],dl
   140013d4e:	(bad)  
   140013d4f:	add    BYTE PTR [rdx+rsi*1],dl
   140013d52:	adc    BYTE PTR [rax+0x1],dh
   140013d55:	adc    al,BYTE PTR [rsi]
   140013d57:	add    BYTE PTR [rdx],dl
   140013d59:	je     0x140013d6b
   140013d5b:	add    BYTE PTR [rdx],dl
   140013d5d:	xor    al,0xf
   140013d5f:	add    BYTE PTR [rdx],dl
   140013d61:	mov    dl,0xb
   140013d63:	push   rax
   140013d64:	add    DWORD PTR [rdi],ecx
   140013d66:	(bad)  
   140013d67:	add    BYTE PTR [rdi],cl
   140013d69:	fs (bad) 
   140013d6b:	add    BYTE PTR [rdi],cl
   140013d6d:	xor    al,0x6
   140013d6f:	add    BYTE PTR [rdi],cl
   140013d71:	xor    cl,BYTE PTR [rbx]
   140013d73:	jo     0x140013d76
   140013d75:	(bad)  
   140013d76:	add    al,BYTE PTR [rax]
   140013d78:	(bad)  
   140013d79:	xor    cl,BYTE PTR [rdx]
   140013d7b:	xor    BYTE PTR [rcx],bl
   140013d7d:	sub    eax,0x741f450d
   140013d82:	adc    al,BYTE PTR [rax]
   140013d84:	sbb    esp,DWORD PTR [rcx+rdx*1+0x0]
   140013d88:	(bad)  
   140013d89:	xor    al,0x10
   140013d8b:	add    BYTE PTR [rbx],dl
   140013d8d:	rex.XB (bad) 
   140013d8f:	xchg   edx,eax
   140013d90:	or     dh,al
   140013d92:	or     al,ah
   140013d94:	(bad)  
   140013d95:	rol    BYTE PTR [rax+rax*8],1
   140013d98:	add    dl,BYTE PTR [rax+0x0]
   140013d9b:	add    BYTE PTR [rax*8+0x480000],ah
   140013da2:	add    BYTE PTR [rax],al
   140013da4:	add    DWORD PTR [rdi],ecx
   140013da6:	(bad)  
   140013da7:	add    BYTE PTR [rdi],cl
   140013da9:	adc    DWORD PTR fs:[rax],eax
   140013dac:	sysenter 
   140013dae:	adc    BYTE PTR [rax],al
   140013db0:	psrld  mm1,QWORD PTR [rbx]
   140013db3:	jo     0x140013dce
   140013db5:	sub    eax,0x741f350d
   140013dba:	adc    BYTE PTR [rax],al
   140013dbc:	sbb    esp,DWORD PTR [rdi+rcx*1+0x0]
   140013dc0:	(bad)  
   140013dc1:	xor    al,0xe
   140013dc3:	add    BYTE PTR [rbx],dl
   140013dc5:	xor    ecx,DWORD PTR [rsi]
   140013dc7:	jb     0x140013dd3
   140013dc9:	lock or al,ah
   140013dcc:	(bad)  
   140013dcd:	rol    BYTE PTR [rax+rax*8],1
   140013dd0:	add    dl,BYTE PTR [rax+0x0]
   140013dd3:	add    BYTE PTR [rax*8+0x300000],ah
   140013dda:	add    BYTE PTR [rax],al
   140013ddc:	add    DWORD PTR [rdi],ecx
   140013dde:	(bad)  
   140013ddf:	add    BYTE PTR [rdi],cl
   140013de1:	str    WORD PTR fs:[rdi]
   140013de5:	xor    al,0xe
   140013de7:	add    BYTE PTR [rdi],cl
   140013de9:	mov    dl,0xb
   140013deb:	jo     0x140013dfe
   140013ded:	(bad)  
   140013dee:	add    al,BYTE PTR [rax]
   140013df0:	(bad)  
   140013df1:	push   rdx
   140013df2:	add    dh,BYTE PTR [rax]
   140013df4:	mov    ah,0xa6
   140013df6:	add    BYTE PTR [rax],al
   140013df8:	add    DWORD PTR [rax],eax
   140013dfa:	add    BYTE PTR [rax],al
   140013dfc:	adc    ch,ch
   140013dfe:	add    BYTE PTR [rax],al
   140013e00:	pop    rax
   140013e01:	in     eax,dx
   140013e02:	add    BYTE PTR [rax],al
   140013e04:	sub    bh,BYTE PTR [rax]
   140013e06:	add    DWORD PTR [rax],eax
	...
   140013e10:	add    DWORD PTR [rax],eax
   140013e12:	add    BYTE PTR [rax],al
   140013e14:	add    BYTE PTR [rax],al
   140013e16:	add    BYTE PTR [rax],al
   140013e18:	add    DWORD PTR [rcx+rax*1],eax
   140013e1b:	add    BYTE PTR [rdx+rdx*1],al
   140013e1e:	add    BYTE PTR [rax],al
   140013e20:	add    DWORD PTR [rsi],eax
   140013e22:	add    al,BYTE PTR [rax]
   140013e24:	(bad)  
   140013e25:	jb     0x140013e29
   140013e27:	xor    BYTE PTR [rcx],al
   140013e29:	add    BYTE PTR [rax],al
   140013e2b:	add    BYTE PTR [rax],al
   140013e2d:	add    BYTE PTR [rax],al
   140013e2f:	add    BYTE PTR [rcx],al
   140013e31:	add    BYTE PTR [rax],al
   140013e33:	add    BYTE PTR [rcx],al
   140013e35:	sbb    al,0xc
   140013e37:	add    BYTE PTR [rsp+riz*2],bl
   140013e3a:	or     al,0x0
   140013e3c:	sbb    al,0x54
   140013e3e:	or     eax,DWORD PTR [rax]
   140013e40:	sbb    al,0x34
   140013e42:	or     al,BYTE PTR [rax]
   140013e44:	sbb    al,0x32
   140013e46:	sbb    al,dh
   140013e48:	(bad)  
   140013e49:	loopne 0x140013e5f
   140013e4b:	rcl    BYTE PTR [rdx],1
   140013e4d:	rcl    BYTE PTR [rax],0x70
   140013e50:	sbb    DWORD PTR [rbx],esp
   140013e52:	or     BYTE PTR [rax],al
   140013e54:	adc    al,0x64
   140013e56:	(bad)  
   140013e57:	add    BYTE PTR [rsp+rdx*2],dl
   140013e5a:	or     eax,0xc341400
   140013e5f:	add    BYTE PTR [rdx+rdx*4],dl
   140013e62:	adc    BYTE PTR [rax+0x24],dh
   140013e65:	(bad)
   140013e68:	rex.W add BYTE PTR [rax],al
   140013e6b:	add    BYTE PTR [rcx],bl
   140013e6d:	sbb    DWORD PTR [rax+rax*1],eax
   140013e70:	or     dh,BYTE PTR [rax+rdx*1]
   140013e73:	add    BYTE PTR [rdx],cl
   140013e75:	rol    BYTE PTR [rsi],cl
   140013e77:	jo     0x140013e9d
   140013e79:	(bad)
   140013e7c:	(bad)  
   140013e7d:	add    BYTE PTR [rax],al
   140013e7f:	add    BYTE PTR [rcx],bl
   140013e81:	sbb    DWORD PTR [rdx],eax
   140013e83:	add    BYTE PTR [rdi],al
   140013e85:	add    DWORD PTR [rbx],ebp
   140013e87:	add    BYTE PTR [rax*8+0x1400000],ah
   140013e8e:	add    BYTE PTR [rax],al
   140013e90:	add    DWORD PTR [rdi],ecx
   140013e92:	(bad)  
   140013e93:	add    BYTE PTR [rdi],cl
   140013e95:	or     eax,DWORD PTR fs:[rax]
   140013e98:	sysenter 
   140013e9a:	or     al,BYTE PTR [rax]
   140013e9c:	(bad)  
   140013e9e:	or     esi,DWORD PTR [rax+0x1]
   140013ea1:	(bad)  
   140013ea2:	add    DWORD PTR [rax],eax
   140013ea4:	(bad)  
   140013ea5:	(bad)  
   140013ea6:	add    BYTE PTR [rax],al
   140013ea8:	sbb    DWORD PTR [rdx],ebp
   140013eaa:	add    al,0x0
   140013eac:	sbb    BYTE PTR [rcx],al
   140013eae:	rex.WXB add BYTE PTR [r9],dl
   140013eb1:	jo     0x140013ec3
   140013eb3:	xor    BYTE PTR [rax*8+0x2400000],ah
   140013eba:	add    BYTE PTR [rax],al
   140013ebc:	sbb    DWORD PTR [rcx],ebp
   140013ebe:	or     eax,DWORD PTR [rax]
   140013ec0:	(bad)  
   140013ec1:	xor    al,0x99
   140013ec3:	add    BYTE PTR [rdi],dl
   140013ec5:	add    DWORD PTR [rax+0xef01000],edx
   140013ecb:	loopne 0x140013ed9
   140013ecd:	ror    BYTE PTR [rdx],1
   140013ecf:	ror    BYTE PTR [rax],0x70
   140013ed2:	(bad)  
   140013ed3:	(bad)  
   140013ed4:	(bad)  
   140013ed5:	push   rax
   140013ed6:	add    BYTE PTR [rax],al
   140013ed8:	and    al,0xc5
   140013eda:	add    BYTE PTR [rax],al
   140013edc:	jo     0x140013ee2
   140013ede:	add    BYTE PTR [rax],al
   140013ee0:	add    DWORD PTR [rdx],ecx
   140013ee2:	add    al,0x0
   140013ee4:	or     dh,BYTE PTR [rax+rcx*1]
   140013ee7:	add    BYTE PTR [rdx],cl
   140013ee9:	push   rdx
   140013eea:	(bad)  
   140013eeb:	jo     0x140013eee
   140013eed:	adc    al,0x6
   140013eef:	add    BYTE PTR [rsp+riz*2],dl
   140013ef2:	or     al,BYTE PTR [rax]
   140013ef4:	adc    al,0x34
   140013ef6:	or     DWORD PTR [rax],eax
   140013ef8:	adc    al,0x52
   140013efa:	adc    BYTE PTR [rax+0x1],dh
   140013efd:	sbb    ecx,DWORD PTR [rdx]
   140013eff:	add    BYTE PTR [rbx],bl
   140013f01:	(bad)  
   140013f02:	ltr    WORD PTR [rbx]
   140013f05:	je     0x140013f15
   140013f07:	add    BYTE PTR [rbx],bl
   140013f09:	fs or  eax,0xc341b00
   140013f0f:	add    BYTE PTR [rbx],bl
   140013f11:	xchg   edx,eax
   140013f12:	adc    al,0x50
   140013f14:	add    DWORD PTR [rcx],ebx
   140013f16:	or     al,BYTE PTR [rax]
   140013f18:	sbb    DWORD PTR [rbp+rcx*1+0x0],esi
   140013f1c:	sbb    DWORD PTR [rsp+rcx*1+0x0],esp
   140013f20:	sbb    DWORD PTR [rbx+rcx*1+0x0],edx
   140013f24:	sbb    DWORD PTR [rdx+rcx*1],esi
   140013f27:	add    BYTE PTR [rcx],bl
   140013f29:	jb     0x140013f40
   140013f2b:	rol    BYTE PTR [rcx],0x14
   140013f2e:	or     BYTE PTR [rax],al
   140013f30:	adc    al,0x64
   140013f32:	or     al,0x0
   140013f34:	adc    al,0x54
   140013f36:	or     eax,DWORD PTR [rax]
   140013f38:	adc    al,0x34
   140013f3a:	or     al,BYTE PTR [rax]
   140013f3c:	adc    al,0x72
   140013f3e:	adc    BYTE PTR [rax+0x1],dh
   140013f41:	sbb    eax,0x741d000c
   140013f46:	or     eax,DWORD PTR [rax]
   140013f48:	sbb    eax,0x1d000a64
   140013f4d:	push   rsp
   140013f4e:	or     DWORD PTR [rax],eax
   140013f50:	sbb    eax,0x1d000834
   140013f55:	xor    bl,BYTE PTR [rcx]
   140013f57:	lock (bad) 
   140013f59:	rcl    BYTE PTR [rip+0x81701c0],1        # 0x14818411f
   140013f5f:	add    BYTE PTR [rdi],dl
   140013f61:	or     DWORD PTR fs:[rax],eax
   140013f64:	(bad)  
   140013f65:	push   rsp
   140013f66:	or     BYTE PTR [rax],al
   140013f68:	(bad)  
   140013f69:	xor    al,0x7
   140013f6b:	add    BYTE PTR [rdi],dl
   140013f6d:	xor    dl,BYTE PTR [rbx]
   140013f6f:	jo     0x140013f72
   140013f71:	sbb    BYTE PTR [rax],cl
   140013f73:	add    BYTE PTR [rax],bl
   140013f75:	or     BYTE PTR fs:[rax],al
   140013f78:	sbb    BYTE PTR [rdi+rax*1+0x0],dl
   140013f7c:	sbb    BYTE PTR [rsi+rax*1],dh
   140013f7f:	add    BYTE PTR [rax],bl
   140013f81:	xor    dl,BYTE PTR [rax+rsi*2]
   140013f84:	add    DWORD PTR [rax],ebx
   140013f86:	or     al,BYTE PTR [rax]
   140013f88:	sbb    BYTE PTR [rdx+rcx*1+0x0],ah
   140013f8c:	sbb    BYTE PTR [rcx+rcx*1+0x0],dl
   140013f90:	sbb    BYTE PTR [rax+rcx*1],dh
   140013f93:	add    BYTE PTR [rax],bl
   140013f95:	xor    dl,BYTE PTR [rax+rdx*8]
   140013f98:	adc    al,al
   140013f9a:	adc    BYTE PTR [rax+0x19],dh
   140013f9d:	xor    BYTE PTR [rbx],cl
   140013f9f:	add    BYTE PTR [rdi],bl
   140013fa1:	xor    al,0xa6
   140013fa3:	add    BYTE PTR [rdi],bl
   140013fa5:	add    DWORD PTR [rax+rax*1-0x1ff10ff0],ebx
   140013fac:	or     al,0xd0
   140013fae:	or     al,al
   140013fb0:	or     BYTE PTR [rax+0x7],dh
   140013fb3:	(bad)  
   140013fb4:	(bad)  
   140013fb5:	push   rax
   140013fb6:	add    BYTE PTR [rax],al
   140013fb8:	and    al,0xc5
   140013fba:	add    BYTE PTR [rax],al
   140013fbc:	rol    BYTE PTR [rax+rax*1],1
   140013fbf:	add    BYTE PTR [rcx],al
   140013fc1:	adc    al,BYTE PTR [rax+rax*1]
   140013fc4:	adc    dh,BYTE PTR [rcx*1+0xb921200]
   140013fcb:	push   rax
   140013fcc:	adc    DWORD PTR [rip+0x34150008],edx        # 0x174163fda
   140013fd2:	or     eax,DWORD PTR [rax]
   140013fd4:	adc    eax,0xfe01132
   140013fd9:	ror    BYTE PTR [rip+0xa700bc0],1        # 0x14a714b9f
   140013fdf:	(bad)  
   140013fe0:	mov    ah,0xa6
   140013fe2:	add    BYTE PTR [rax],al
   140013fe4:	add    DWORD PTR [rax],eax
   140013fe6:	add    BYTE PTR [rax],al
   140013fe8:	adc    eax,0x4900011a
   140013fed:	sbb    al,BYTE PTR [rcx]
   140013fef:	add    BYTE PTR [rbx+0x38],cl
   140013ff2:	add    DWORD PTR [rax],eax
   140013ff4:	add    BYTE PTR [rax],al
   140013ff6:	add    BYTE PTR [rax],al
   140013ff8:	sbb    DWORD PTR [rsi],esi
   140013ffa:	or     eax,DWORD PTR [rax]
   140013ffc:	and    eax,0x25037134
   140014001:	add    DWORD PTR [rsi+0x3],esp
   140014004:	adc    al,dh
   140014006:	(bad)  
   140014007:	loopne 0x140014015
   140014009:	ror    BYTE PTR [rdx],1
   14001400b:	ror    BYTE PTR [rax],0x70
   14001400e:	(bad)  
   14001400f:	(bad)  
   140014010:	(bad)  
   140014011:	push   rax
   140014012:	add    BYTE PTR [rax],al
   140014014:	and    al,0xc5
   140014016:	add    BYTE PTR [rax],al
   140014018:	and    BYTE PTR [rbx],bl
   14001401a:	add    BYTE PTR [rax],al
   14001401c:	adc    DWORD PTR [rip+0x34150008],edx        # 0x17416402a
   140014022:	or     eax,DWORD PTR [rax]
   140014024:	adc    eax,0xfe01132
   140014029:	ror    BYTE PTR [rip+0xa700bc0],1        # 0x14a714bef
   14001402f:	(bad)  
   140014030:	mov    ah,0xa6
   140014032:	add    BYTE PTR [rax],al
   140014034:	add    DWORD PTR [rax],eax
   140014036:	add    BYTE PTR [rax],al
   140014038:	imul   esp,DWORD PTR [rdx],0x229b0001
   14001403e:	add    DWORD PTR [rax],eax
   140014040:	rex.WXB cmp BYTE PTR [r9],al
   140014043:	add    BYTE PTR [rax],al
   140014045:	add    BYTE PTR [rax],al
   140014047:	add    BYTE PTR [rcx],bl
   140014049:	and    DWORD PTR [rax],ecx
   14001404b:	add    BYTE PTR [rdx],dl
   14001404d:	push   rsp
   14001404e:	lldt   WORD PTR [rdx]
   140014051:	xor    al,0xe
   140014053:	add    BYTE PTR [rdx],dl
   140014055:	jb     0x140014065
   140014057:	ror    BYTE PTR [rax+rsi*2],0xb
   14001405b:	(bad)  
   14001405c:	and    al,0xc5
   14001405e:	add    BYTE PTR [rax],al
   140014060:	xor    BYTE PTR [rax],al
   140014062:	add    BYTE PTR [rax],al
   140014064:	add    DWORD PTR [rdi],ecx
   140014066:	(bad)  
   140014067:	add    BYTE PTR [rdi],cl
   140014069:	or     DWORD PTR fs:[rax],eax
   14001406c:	sysenter 
   14001406e:	or     BYTE PTR [rax],al
   140014070:	rsqrtps xmm1,XMMWORD PTR [rbx]
   140014073:	jo     0x140014076
   140014075:	clts   
   140014077:	add    BYTE PTR [rdi],cl
   140014079:	push   rsp
   14001407a:	(bad)  
   14001407b:	add    BYTE PTR [rdi],cl
   14001407d:	xor    al,0x6
   14001407f:	add    BYTE PTR [rdi],cl
   140014081:	xor    cl,BYTE PTR [rbx]
   140014083:	jo     0x140014096
   140014085:	sbb    DWORD PTR [rdx],ecx
   140014087:	add    BYTE PTR [rcx],bl
   140014089:	(bad)  
   14001408a:	or     DWORD PTR [rax],eax
   14001408c:	sbb    DWORD PTR [rax+rcx*1+0x0],esi
   140014090:	sbb    DWORD PTR [rdi+rax*1+0x0],esp
   140014094:	sbb    DWORD PTR [rsi+rax*1],esi
   140014097:	add    BYTE PTR [rcx],bl
   140014099:	xor    dl,BYTE PTR [rip+0xa6b4e0]        # 0x140a7f57f
   14001409f:	add    BYTE PTR [rcx],al
   1400140a1:	add    BYTE PTR [rax],al
   1400140a3:	add    BYTE PTR [rsi-0x40fffed5],bl
   1400140a9:	sub    eax,DWORD PTR [rcx]
   1400140ab:	add    BYTE PTR [rdx+0x38],ch
   1400140ae:	add    DWORD PTR [rax],eax
   1400140b0:	add    BYTE PTR [rax],al
   1400140b2:	add    BYTE PTR [rax],al
   1400140b4:	add    DWORD PTR [rcx],ecx
   1400140b6:	add    DWORD PTR [rax],eax
   1400140b8:	or     DWORD PTR [rdx+0x0],esp
   1400140bb:	add    BYTE PTR [rcx],dl
   1400140bd:	clts   
   1400140bf:	add    BYTE PTR [rdi],cl
   1400140c1:	or     DWORD PTR fs:[rax],eax
   1400140c4:	sysenter 
   1400140c6:	or     BYTE PTR [rax],al
   1400140c8:	rsqrtps xmm1,XMMWORD PTR [rbx]
   1400140cb:	jo     0x140014081
   1400140cd:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400140ce:	add    BYTE PTR [rax],al
   1400140d0:	add    DWORD PTR [rax],eax
   1400140d2:	add    BYTE PTR [rax],al
   1400140d4:	stos   BYTE PTR es:[rdi],al
   1400140d5:	sub    al,0x1
   1400140d7:	add    BYTE PTR [rsi],bl
   1400140d9:	sub    eax,0x388b0001
   1400140de:	add    DWORD PTR [rax],eax
   1400140e0:	add    BYTE PTR [rax],al
   1400140e2:	add    BYTE PTR [rax],al
   1400140e4:	adc    DWORD PTR [rcx],ebx
   1400140e6:	or     al,BYTE PTR [rax]
   1400140e8:	sbb    DWORD PTR [rsp+rcx*1+0x0],esi
   1400140ec:	sbb    DWORD PTR [rbx+rcx*1+0x0],esp
   1400140f0:	sbb    DWORD PTR [rdx+rcx*1],esi
   1400140f3:	add    BYTE PTR [rcx],bl
   1400140f5:	push   rdx
   1400140f6:	adc    eax,0x11d013f0
   1400140fb:	shl    BYTE PTR [rsi+riz*4+0x20000],0x0
   140014103:	add    BYTE PTR [rsi+0x2e],dh
   140014106:	add    DWORD PTR [rax],eax
   140014108:	mov    edx,0xac00012e
   14001410d:	cmp    BYTE PTR [rcx],al
   14001410f:	add    BYTE PTR [rax],al
   140014111:	add    BYTE PTR [rax],al
   140014113:	add    BYTE PTR [rip+0xffffffffd300012e],bh        # 0x113014247
   140014119:	add    DWORD PTR cs:[rax],eax
   14001411c:	fdivr  QWORD PTR [rax]
   14001411e:	add    DWORD PTR [rax],eax
   140014120:	add    BYTE PTR [rax],al
   140014122:	add    BYTE PTR [rax],al
   140014124:	add    DWORD PTR [rdx],edx
   140014126:	or     BYTE PTR [rax],al
   140014128:	adc    dl,BYTE PTR [rdx+rcx*1+0x0]
   14001412c:	adc    dh,BYTE PTR [rax+rcx*1]
   14001412f:	add    BYTE PTR [rdx],dl
   140014131:	xor    cl,BYTE PTR [rsi]
   140014133:	ror    BYTE PTR [rax+rsi*2],0xb
   140014137:	(bad)  
   140014138:	add    DWORD PTR [rip+0x34150006],edx        # 0x174164144
   14001413e:	adc    BYTE PTR [rax],al
   140014140:	adc    eax,0xd700eb2
   140014145:	(bad)  
   140014146:	or     al,0x50
   140014148:	add    DWORD PTR [rcx+rax*1],eax
   14001414b:	add    BYTE PTR [rdx+rax*4],al
   14001414e:	add    BYTE PTR [rax],al
   140014150:	adc    DWORD PTR [rdi],ecx
   140014152:	add    al,0x0
   140014154:	sysenter 
   140014156:	(bad)  
   140014157:	add    BYTE PTR [rdi],cl
   140014159:	xor    cl,BYTE PTR [rbx]
   14001415b:	jo     0x140014111
   14001415d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001415e:	add    BYTE PTR [rax],al
   140014160:	add    DWORD PTR [rax],eax
   140014162:	add    BYTE PTR [rax],al
   140014164:	repz xor eax,DWORD PTR [rcx]
   140014167:	add    ch,bh
   140014169:	xor    eax,DWORD PTR [rcx]
   14001416b:	add    ch,bh
   14001416d:	cmp    BYTE PTR [rcx],al
   14001416f:	add    BYTE PTR [rax],al
   140014171:	add    BYTE PTR [rax],al
   140014173:	add    BYTE PTR [rcx],dl
   140014175:	adc    DWORD PTR [rsi],eax
   140014177:	add    BYTE PTR [rcx],dl
   140014179:	xor    al,0xa
   14001417b:	add    BYTE PTR [rcx],dl
   14001417d:	xor    cl,BYTE PTR [rip+0xa700bc0]        # 0x14a714d43
   140014183:	(bad)  
   140014184:	mov    ah,0xa6
   140014186:	add    BYTE PTR [rax],al
   140014188:	add    DWORD PTR [rax],eax
   14001418a:	add    BYTE PTR [rax],al
   14001418c:	jg     0x1400141c2
   14001418e:	add    DWORD PTR [rax],eax
   140014190:	ret    
   140014191:	xor    al,0x1
   140014193:	add    BYTE PTR [rip+0x139],bl        # 0x1400142d2
   140014199:	add    BYTE PTR [rax],al
   14001419b:	add    BYTE PTR [rcx],dl
   14001419d:	adc    DWORD PTR [rsi],eax
   14001419f:	add    BYTE PTR [rcx],dl
   1400141a1:	xor    al,0xa
   1400141a3:	add    BYTE PTR [rcx],dl
   1400141a5:	xor    cl,BYTE PTR [rip+0xa700bc0]        # 0x14a714d6b
   1400141ab:	(bad)  
   1400141ac:	mov    ah,0xa6
   1400141ae:	add    BYTE PTR [rax],al
   1400141b0:	add    DWORD PTR [rax],eax
   1400141b2:	add    BYTE PTR [rax],al
   1400141b4:	(bad)  
   1400141b5:	add    DWORD PTR ss:[rax],eax
   1400141b8:	rex.WXB
   1400141b9:	add    DWORD PTR ss:[rax],eax
   1400141bc:	sbb    eax,0x139
   1400141c1:	add    BYTE PTR [rax],al
   1400141c3:	add    BYTE PTR [rcx],al
   1400141c5:	or     al,0x5
   1400141c7:	add    BYTE PTR [rdx+rax*2],cl
   1400141ca:	add    eax,0x3600470
   1400141cf:	xor    BYTE PTR [rdx],al
   1400141d1:	push   rax
   1400141d2:	add    BYTE PTR [rax],al
   1400141d4:	sbb    DWORD PTR [rip+0x11c000a],ebp        # 0x1411d41e4
   1400141da:	fild   DWORD PTR [rax]
   1400141dc:	or     eax,0x9e00bf0
   1400141e1:	rol    BYTE PTR [rdi],1
   1400141e3:	rol    BYTE PTR [rip+0x3600470],0x30        # 0x14361465a
   1400141ea:	add    dl,BYTE PTR [rax+0x24]
   1400141ed:	(bad)
   1400141f0:	rol    BYTE PTR [rsi],0x0
   1400141f3:	add    BYTE PTR [rcx],al
   1400141f5:	or     al,BYTE PTR [rax+rax*1]
   1400141f8:	or     dh,BYTE PTR [rdi+rax*1]
   1400141fb:	add    BYTE PTR [rdx],cl
   1400141fd:	xor    al,BYTE PTR [rsi]
   1400141ff:	jo     0x140014202
   140014201:	sbb    eax,0x741d000c
   140014206:	or     eax,DWORD PTR [rax]
   140014208:	sbb    eax,0x1d000a64
   14001420d:	push   rsp
   14001420e:	or     DWORD PTR [rax],eax
   140014210:	sbb    eax,0x1d000834
   140014215:	xor    bl,BYTE PTR [rcx]
   140014217:	loopne 0x140014230
   140014219:	rcl    BYTE PTR [rip+0xd3719c0],1        # 0x14d385bdf
   14001421f:	add    BYTE PTR [rsi],ah
   140014221:	je     0x140014202
   140014223:	add    BYTE PTR [rsi],ah
   140014225:	fiadd  WORD PTR fs:[rax]
   140014228:	es xor al,0xdc
   14001422b:	add    BYTE PTR [rsi],ah
   14001422d:	add    esi,edx
   14001422f:	add    BYTE PTR [rax],bl
   140014231:	lock (bad) 
   140014233:	loopne 0x140014249
   140014235:	rcl    BYTE PTR [rdx],1
   140014237:	rcl    BYTE PTR [rax],0x50
   14001423a:	add    BYTE PTR [rax],al
   14001423c:	and    al,0xc5
   14001423e:	add    BYTE PTR [rax],al
   140014240:	movabs al,ds:0x6
   140014249:	add    BYTE PTR [rax],al
   14001424b:	add    BYTE PTR [rax-0x45],cl
   14001424e:	add    BYTE PTR [rax],al
   140014250:	add    BYTE PTR [rax],al
   140014252:	add    BYTE PTR [rax],al
   140014254:	push   0x142
	...
   140014265:	add    BYTE PTR [rax],al
   140014267:	add    BYTE PTR [rdx],al
   140014269:	add    BYTE PTR [rax],al
   14001426b:	add    BYTE PTR [rax-0x57fffebe],al
   140014271:	rex.X add DWORD PTR [rax],eax
	...
   140014284:	lock push rcx
   140014286:	add    DWORD PTR [rax],eax
   140014288:	add    BYTE PTR [rax],al
   14001428a:	add    BYTE PTR [rax],al
   14001428c:	(bad)  
   14001428d:	(bad)  
   14001428e:	(bad)  
   14001428f:	inc    DWORD PTR [rax]
   140014291:	add    BYTE PTR [rax],al
   140014293:	add    BYTE PTR [rax],bl
   140014295:	add    BYTE PTR [rax],al
   140014297:	add    BYTE PTR [rax+0xbb],ah
	...
   1400142a9:	add    BYTE PTR [rax],al
   1400142ab:	add    BYTE PTR [rax],bl
   1400142ad:	push   rdx
   1400142ae:	add    DWORD PTR [rax],eax
   1400142b0:	add    BYTE PTR [rax],al
   1400142b2:	add    BYTE PTR [rax],al
   1400142b4:	(bad)  
   1400142b5:	(bad)  
   1400142b6:	(bad)  
   1400142b7:	inc    DWORD PTR [rax]
   1400142b9:	add    BYTE PTR [rax],al
   1400142bb:	add    BYTE PTR [rax],bl
   1400142bd:	add    BYTE PTR [rax],al
   1400142bf:	add    ah,ch
   1400142c1:	fld    QWORD PTR [rax]
	...
   1400142cb:	add    BYTE PTR [rax+0x143],dl
   1400142d1:	add    BYTE PTR [rax],al
   1400142d3:	add    BYTE PTR [rax],al
   1400142d5:	add    BYTE PTR [rax],al
   1400142d7:	add    BYTE PTR [rdx+0x47],al
   1400142da:	add    DWORD PTR [rax],eax
   1400142dc:	and    BYTE PTR [rax],dl
   1400142de:	add    BYTE PTR [rax],al
   1400142e0:	cmp    BYTE PTR [rsi+0x1],al
	...
   1400142eb:	add    BYTE PTR [rdi+rax*2+0x1],ch
   1400142ef:	add    al,cl
   1400142f1:	adc    al,BYTE PTR [rax]
   1400142f3:	add    BYTE PTR [rax+0x46],ah
   1400142f6:	add    DWORD PTR [rax],eax
	...
   140014300:	mov    al,0x47
   140014302:	add    DWORD PTR [rax],eax
   140014304:	lock adc al,BYTE PTR [rax]
   140014307:	add    BYTE PTR [rax],bl
   140014309:	rex.RX add DWORD PTR [rax],r8d
	...
   140014314:	mov    edx,0xa8000147
   140014319:	adc    al,BYTE PTR [rax]
   14001431b:	add    BYTE PTR [rax+0x46],dl
   14001431e:	add    DWORD PTR [rax],eax
	...
   140014328:	loopne 0x140014371
   14001432a:	add    DWORD PTR [rax],eax
   14001432c:	loopne 0x140014340
   14001432e:	add    BYTE PTR [rax],al
   140014330:	add    BYTE PTR [rsi+0x1],0x0
	...
   14001433c:	(bad)  
   14001433d:	add    QWORD PTR [rax],rax
   140014340:	adc    BYTE PTR [rbx],dl
   140014342:	add    BYTE PTR [rax],al
   140014344:	jo     0x140014389
   140014346:	add    DWORD PTR [rax],eax
	...
   140014350:	rex.R
   140014351:	add    QWORD PTR [rax],rax
   140014354:	add    BYTE PTR [rax],dl
	...
   14001436e:	add    BYTE PTR [rax],al
   140014370:	and    BYTE PTR [rax+0x1],cl
   140014373:	add    BYTE PTR [rax],al
   140014375:	add    BYTE PTR [rax],al
   140014377:	add    BYTE PTR [rdx],dl
   140014379:	add    QWORD PTR [rax],rax
   14001437c:	add    BYTE PTR [rax],al
   14001437e:	add    BYTE PTR [rax],al
   140014380:	xor    BYTE PTR [rax+0x1],cl
	...
   14001438f:	add    ah,cl
   140014391:	rex.RX add DWORD PTR [rax],r8d
   140014394:	add    BYTE PTR [rax],al
   140014396:	add    BYTE PTR [rax],al
   140014398:	loop   0x1400143e0
   14001439a:	add    DWORD PTR [rax],eax
   14001439c:	add    BYTE PTR [rax],al
   14001439e:	add    BYTE PTR [rax],al
   1400143a0:	clc    
   1400143a1:	rex.RX add DWORD PTR [rax],r8d
   1400143a4:	add    BYTE PTR [rax],al
   1400143a6:	add    BYTE PTR [rax],al
   1400143a8:	or     BYTE PTR [rdi+0x1],al
   1400143ab:	add    BYTE PTR [rax],al
   1400143ad:	add    BYTE PTR [rax],al
   1400143af:	add    BYTE PTR [rdx],bl
   1400143b1:	rex.RXB add DWORD PTR [r8],r8d
   1400143b4:	add    BYTE PTR [rax],al
   1400143b6:	add    BYTE PTR [rax],al
   1400143b8:	xor    BYTE PTR [rdi+0x1],al
   1400143bb:	add    BYTE PTR [rax],al
   1400143bd:	add    BYTE PTR [rax],al
   1400143bf:	add    BYTE PTR [rax],bh
   1400143c1:	add    QWORD PTR [r8],r8
   1400143c4:	add    BYTE PTR [rax],al
   1400143c6:	add    BYTE PTR [rax],al
   1400143c8:	sub    BYTE PTR [rbp+0x1],cl
   1400143cb:	add    BYTE PTR [rax],al
   1400143cd:	add    BYTE PTR [rax],al
   1400143cf:	add    BYTE PTR [rsi],dl
   1400143d1:	add    QWORD PTR [r8],r8
   1400143d4:	add    BYTE PTR [rax],al
   1400143d6:	add    BYTE PTR [rax],al
   1400143d8:	mov    esp,0x146
   1400143dd:	add    BYTE PTR [rax],al
   1400143df:	add    ah,dh
   1400143e1:	add    QWORD PTR [rax],r8
   1400143e4:	add    BYTE PTR [rax],al
   1400143e6:	add    BYTE PTR [rax],al
   1400143e8:	in     al,0x4c
   1400143ea:	add    DWORD PTR [rax],eax
   1400143ec:	add    BYTE PTR [rax],al
   1400143ee:	add    BYTE PTR [rax],al
   1400143f0:	(bad)  
   1400143f1:	add    QWORD PTR [rax],r8
   1400143f4:	add    BYTE PTR [rax],al
   1400143f6:	add    BYTE PTR [rax],al
   1400143f8:	(bad)  
   1400143f9:	add    QWORD PTR [rax],r8
   1400143fc:	add    BYTE PTR [rax],al
   1400143fe:	add    BYTE PTR [rax],al
   140014400:	scas   al,BYTE PTR es:[rdi]
   140014401:	add    QWORD PTR [rax],r8
   140014404:	add    BYTE PTR [rax],al
   140014406:	add    BYTE PTR [rax],al
   140014408:	sahf   
   140014409:	add    QWORD PTR [rax],r8
   14001440c:	add    BYTE PTR [rax],al
   14001440e:	add    BYTE PTR [rax],al
   140014410:	nop
   140014411:	add    QWORD PTR [rax],r8
   140014414:	add    BYTE PTR [rax],al
   140014416:	add    BYTE PTR [rax],al
   140014418:	jle    0x140014466
   14001441a:	add    DWORD PTR [rax],eax
   14001441c:	add    BYTE PTR [rax],al
   14001441e:	add    BYTE PTR [rax],al
   140014420:	(bad)  
   140014421:	add    QWORD PTR [rax],r8
   140014424:	add    BYTE PTR [rax],al
   140014426:	add    BYTE PTR [rax],al
   140014428:	rex.R
   140014429:	add    QWORD PTR [rax],r8
   14001442c:	add    BYTE PTR [rax],al
   14001442e:	add    BYTE PTR [rax],al
   140014430:	stos   BYTE PTR es:[rdi],al
   140014431:	rex.RX add DWORD PTR [rax],r8d
   140014434:	add    BYTE PTR [rax],al
   140014436:	add    BYTE PTR [rax],al
   140014438:	sahf   
   140014439:	rex.RX add DWORD PTR [rax],r8d
   14001443c:	add    BYTE PTR [rax],al
   14001443e:	add    BYTE PTR [rax],al
   140014440:	(bad)  
   140014441:	add    QWORD PTR [r8],r8
   140014444:	add    BYTE PTR [rax],al
   140014446:	add    BYTE PTR [rax],al
   140014448:	nop
   140014449:	rex.RX add DWORD PTR [rax],r8d
   14001444c:	add    BYTE PTR [rax],al
   14001444e:	add    BYTE PTR [rax],al
   140014450:	push   rdx
   140014451:	add    QWORD PTR [rax],rax
   140014454:	add    BYTE PTR [rax],al
   140014456:	add    BYTE PTR [rax],al
   140014458:	add    QWORD PTR fs:[rax],rax
   14001445c:	add    BYTE PTR [rax],al
   14001445e:	add    BYTE PTR [rax],al
   140014460:	(bad)  
   140014461:	add    QWORD PTR [rax],rax
   140014464:	add    BYTE PTR [rax],al
   140014466:	add    BYTE PTR [rax],al
   140014468:	xchg   esi,eax
   140014469:	add    QWORD PTR [rax],rax
   14001446c:	add    BYTE PTR [rax],al
   14001446e:	add    BYTE PTR [rax],al
   140014470:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140014471:	add    QWORD PTR [rax],rax
   140014474:	add    BYTE PTR [rax],al
   140014476:	add    BYTE PTR [rax],al
   140014478:	mov    ah,0x48
   14001447a:	add    DWORD PTR [rax],eax
   14001447c:	add    BYTE PTR [rax],al
   14001447e:	add    BYTE PTR [rax],al
   140014480:	ror    BYTE PTR [rax+0x1],0x0
   140014484:	add    BYTE PTR [rax],al
   140014486:	add    BYTE PTR [rax],al
   140014488:	ror    BYTE PTR [rax+0x1],1
   14001448b:	add    BYTE PTR [rax],al
   14001448d:	add    BYTE PTR [rax],al
   14001448f:	add    dh,bl
   140014491:	add    QWORD PTR [rax],rax
   140014494:	add    BYTE PTR [rax],al
   140014496:	add    BYTE PTR [rax],al
   140014498:	clc    
   140014499:	add    QWORD PTR [rax],rax
   14001449c:	add    BYTE PTR [rax],al
   14001449e:	add    BYTE PTR [rax],al
   1400144a0:	adc    cl,BYTE PTR [rcx+0x1]
   1400144a3:	add    BYTE PTR [rax],al
   1400144a5:	add    BYTE PTR [rax],al
   1400144a7:	add    BYTE PTR [rcx+rcx*2],ah
   1400144aa:	add    DWORD PTR [rax],eax
   1400144ac:	add    BYTE PTR [rax],al
   1400144ae:	add    BYTE PTR [rax],al
   1400144b0:	rex.WR
   1400144b1:	add    QWORD PTR [r8],rax
   1400144b4:	add    BYTE PTR [rax],al
   1400144b6:	add    BYTE PTR [rax],al
   1400144b8:	pop    rdx
   1400144b9:	add    QWORD PTR [r8],rax
   1400144bc:	add    BYTE PTR [rax],al
   1400144be:	add    BYTE PTR [rax],al
   1400144c0:	ins    BYTE PTR es:[rdi],dx
   1400144c1:	add    QWORD PTR [r8],rax
   1400144c4:	add    BYTE PTR [rax],al
   1400144c6:	add    BYTE PTR [rax],al
   1400144c8:	test   BYTE PTR [rcx+0x1],cl
   1400144cb:	add    BYTE PTR [rax],al
   1400144cd:	add    BYTE PTR [rax],al
   1400144cf:	add    BYTE PTR [rcx+rcx*2+0x1],dl
   1400144d6:	add    BYTE PTR [rax],al
   1400144d8:	movabs ds:0xb000000000000149,al
   1400144e1:	add    QWORD PTR [r8],rax
   1400144e4:	add    BYTE PTR [rax],al
   1400144e6:	add    BYTE PTR [rax],al
   1400144e8:	mov    edx,0x149
   1400144ed:	add    BYTE PTR [rax],al
   1400144ef:	add    dl,cl
   1400144f1:	add    QWORD PTR [r8],rax
   1400144f4:	add    BYTE PTR [rax],al
   1400144f6:	add    BYTE PTR [rax],al
   1400144f8:	loopne 0x140014543
   1400144fa:	add    DWORD PTR [rax],eax
   1400144fc:	add    BYTE PTR [rax],al
   1400144fe:	add    BYTE PTR [rax],al
   140014500:	in     al,dx
   140014501:	add    QWORD PTR [r8],rax
   140014504:	add    BYTE PTR [rax],al
   140014506:	add    BYTE PTR [rax],al
   140014508:	cli    
   140014509:	add    QWORD PTR [r8],rax
   14001450c:	add    BYTE PTR [rax],al
   14001450e:	add    BYTE PTR [rax],al
   140014510:	or     BYTE PTR [rdx+0x1],cl
   140014513:	add    BYTE PTR [rax],al
   140014515:	add    BYTE PTR [rax],al
   140014517:	add    BYTE PTR [rdx],ah
   140014519:	rex.WX add QWORD PTR [rax],rax
   14001451c:	add    BYTE PTR [rax],al
   14001451e:	add    BYTE PTR [rax],al
   140014520:	xor    cl,BYTE PTR [rdx+0x1]
   140014523:	add    BYTE PTR [rax],al
   140014525:	add    BYTE PTR [rax],al
   140014527:	add    BYTE PTR [rax+0x4a],cl
   14001452a:	add    DWORD PTR [rax],eax
   14001452c:	add    BYTE PTR [rax],al
   14001452e:	add    BYTE PTR [rax],al
   140014530:	(bad)  
   140014531:	rex.WX add QWORD PTR [rax],rax
   140014534:	add    BYTE PTR [rax],al
   140014536:	add    BYTE PTR [rax],al
   140014538:	jbe    0x140014584
   14001453a:	add    DWORD PTR [rax],eax
   14001453c:	add    BYTE PTR [rax],al
   14001453e:	add    BYTE PTR [rax],al
   140014540:	mov    cl,BYTE PTR [rdx+0x1]
   140014543:	add    BYTE PTR [rax],al
   140014545:	add    BYTE PTR [rax],al
   140014547:	add    BYTE PTR [rsi+0x14a],ah
   14001454d:	add    BYTE PTR [rax],al
   14001454f:	add    BYTE PTR [rdx+0x14a],bh
   140014555:	add    BYTE PTR [rax],al
   140014557:	add    dh,cl
   140014559:	rex.WX add QWORD PTR [rax],rax
   14001455c:	add    BYTE PTR [rax],al
   14001455e:	add    BYTE PTR [rax],al
   140014560:	call   0x1400146af
   140014565:	add    BYTE PTR [rax],al
   140014567:	add    ah,bh
   140014569:	rex.WX add QWORD PTR [rax],rax
   14001456c:	add    BYTE PTR [rax],al
   14001456e:	add    BYTE PTR [rax],al
   140014570:	adc    al,0x4b
   140014572:	add    DWORD PTR [rax],eax
   140014574:	add    BYTE PTR [rax],al
   140014576:	add    BYTE PTR [rax],al
   140014578:	sub    al,0x4b
   14001457a:	add    DWORD PTR [rax],eax
   14001457c:	add    BYTE PTR [rax],al
   14001457e:	add    BYTE PTR [rax],al
   140014580:	rex.WXB add QWORD PTR ds:[r8],rax
   140014584:	add    BYTE PTR [rax],al
   140014586:	add    BYTE PTR [rax],al
   140014588:	rex.RX
   140014589:	rex.WXB add QWORD PTR [r8],rax
   14001458c:	add    BYTE PTR [rax],al
   14001458e:	add    BYTE PTR [rax],al
   140014590:	push   rdx
   140014591:	rex.WXB add QWORD PTR [r8],rax
   140014594:	add    BYTE PTR [rax],al
   140014596:	add    BYTE PTR [rax],al
   140014598:	pop    rsp
   140014599:	rex.WXB add QWORD PTR [r8],rax
   14001459c:	add    BYTE PTR [rax],al
   14001459e:	add    BYTE PTR [rax],al
   1400145a0:	push   0x14b
   1400145a5:	add    BYTE PTR [rax],al
   1400145a7:	add    BYTE PTR [rdx+0x4b],bh
   1400145aa:	add    DWORD PTR [rax],eax
   1400145ac:	add    BYTE PTR [rax],al
   1400145ae:	add    BYTE PTR [rax],al
   1400145b0:	xchg   BYTE PTR [rbx+0x1],cl
   1400145b3:	add    BYTE PTR [rax],al
   1400145b5:	add    BYTE PTR [rax],al
   1400145b7:	add    BYTE PTR [rax+0x14b],bl
   1400145bd:	add    BYTE PTR [rax],al
   1400145bf:	add    BYTE PTR [rbx+rcx*2+0x1],ch
   1400145c6:	add    BYTE PTR [rax],al
   1400145c8:	ret    0x14b
   1400145cb:	add    BYTE PTR [rax],al
   1400145cd:	add    BYTE PTR [rax],al
   1400145cf:	add    dh,cl
   1400145d1:	rex.WXB add QWORD PTR [r8],rax
   1400145d4:	add    BYTE PTR [rax],al
   1400145d6:	add    BYTE PTR [rax],al
   1400145d8:	fmul   QWORD PTR [rbx+0x1]
   1400145db:	add    BYTE PTR [rax],al
   1400145dd:	add    BYTE PTR [rax],al
   1400145df:	add    ah,ch
   1400145e1:	rex.WXB add QWORD PTR [r8],rax
   1400145e4:	add    BYTE PTR [rax],al
   1400145e6:	add    BYTE PTR [rax],al
   1400145e8:	add    cl,BYTE PTR [rcx+rax*1+0x0]
   1400145ec:	add    BYTE PTR [rax],al
   1400145ee:	add    BYTE PTR [rax],al
   1400145f0:	adc    al,0x4c
   1400145f2:	add    DWORD PTR [rax],eax
   1400145f4:	add    BYTE PTR [rax],al
   1400145f6:	add    BYTE PTR [rax],al
   1400145f8:	add    QWORD PTR es:[rax],r8
   1400145fc:	add    BYTE PTR [rax],al
   1400145fe:	add    BYTE PTR [rax],al
   140014600:	add    QWORD PTR ss:[rax],r8
   140014604:	add    BYTE PTR [rax],al
   140014606:	add    BYTE PTR [rax],al
   140014608:	rex.W
   140014609:	add    QWORD PTR [r8],r8
	...
   140014618:	(bad)  
   140014619:	add    BYTE PTR [rax],al
   14001461b:	add    BYTE PTR [rax],al
   14001461d:	add    BYTE PTR [rax],al
   14001461f:	or     al,0x0
   140014622:	add    BYTE PTR [rax],al
   140014624:	add    BYTE PTR [rax],al
   140014626:	add    BYTE PTR [rax+0x6],al
   14001462c:	add    BYTE PTR [rax],al
   14001462e:	add    BYTE PTR [rax+0x0],al
   140014634:	add    BYTE PTR [rax],al
   140014636:	add    BYTE PTR [rax],al
   140014638:	push   rax
   140014639:	rex.RXB add DWORD PTR [r8],r8d
   14001463c:	add    BYTE PTR [rax],al
   14001463e:	add    BYTE PTR [rax],al
   140014640:	pop    rsi
   140014641:	rex.RXB add DWORD PTR [r8],r8d
	...
   140014650:	enter  0x147,0x0
	...
   140014660:	js     0x1400146a9
   140014662:	add    DWORD PTR [rax],eax
   140014664:	add    BYTE PTR [rax],al
   140014666:	add    BYTE PTR [rax],al
   140014668:	sahf   
   140014669:	rex.RXB add DWORD PTR [r8],r8d
   14001466c:	add    BYTE PTR [rax],al
   14001466e:	add    BYTE PTR [rax],al
   140014670:	mov    WORD PTR [rdi+0x1],es
	...
   14001467f:	add    ah,ch
   140014681:	rex.RXB add DWORD PTR [r8],r8d
	...
   140014690:	push   0x65724601
   140014695:	imul   r12,QWORD PTR gs:[rdx+0x72],0x797261
   14001469e:	xlat   BYTE PTR ds:[rbx]
   14001469f:	add    cl,BYTE PTR [rax+0x65]
   1400146a2:	(bad)  
   1400146a3:	jo     0x1400146eb
   1400146a5:	jb     0x14001470c
   1400146a7:	add    BYTE PTR gs:[rax],al
   1400146aa:	push   rcx
   1400146ab:	add    al,BYTE PTR [rdi+0x65]
   1400146ae:	je     0x140014700
   1400146b0:	jb     0x140014721
   1400146b2:	movsxd esp,DWORD PTR [rbp+0x73]
   1400146b5:	jae    0x1400146ff
   1400146b7:	gs (bad) 
   1400146b9:	jo     0x1400146bb
   1400146bb:	add    BYTE PTR [rcx+0x3],al
   1400146be:	rex.WR outs dx,DWORD PTR ds:[rsi]
   1400146c0:	(bad)  
   1400146c1:	imul   r12,QWORD PTR fs:[rdx+0x72],0x57797261
   1400146ca:	add    BYTE PTR [rax],al
   1400146cc:	icebp  
   1400146cd:	add    DWORD PTR [rdi+0x65],eax
   1400146d0:	je     0x140014718
   1400146d2:	imul   ebp,DWORD PTR [rbp+riz*2+0x41],0x69727474
   1400146da:	(bad)  
   1400146db:	jne    0x140014751
   1400146dd:	gs jae 0x140014737
   1400146e0:	add    BYTE PTR [rax],al
   1400146e2:	sbb    al,BYTE PTR [rdx]
   1400146e4:	rex.RXB
   1400146e5:	gs je  0x140014735
   1400146e8:	outs   dx,DWORD PTR ds:[rsi]
   1400146e9:	fs jne 0x140014758
   1400146ec:	imul   r13d,DWORD PTR gs:[rbp+r12*2+0x4e],0x57656d61
   1400146f6:	add    BYTE PTR [rax],al
   1400146f8:	or     BYTE PTR [rdx],al
   1400146fa:	rex.RXB
   1400146fb:	gs je  0x14001474a
   1400146fe:	(bad)  
   1400146ff:	jae    0x140014775
   140014701:	rex.RB jb 0x140014776
   140014704:	outs   dx,DWORD PTR ds:[rsi]
   140014705:	jb     0x140014707
   140014707:	add    BYTE PTR [rdx+rax*1+0x47],cl
   14001470b:	gs je  0x14001475e
   14001470e:	jb     0x14001477f
   140014710:	movsxd eax,DWORD PTR [rcx+0x64]
   140014713:	fs jb  0x14001477b
   140014716:	jae    0x14001478b
   140014718:	add    BYTE PTR [rax],al
   14001471a:	fild   DWORD PTR [rdx]
   14001471c:	rex.W
   14001471d:	gs (bad) 
   14001471f:	jo     0x140014774
   140014721:	gs je  0x14001476d
   140014724:	outs   dx,BYTE PTR ds:[rsi]
   140014725:	outs   dx,WORD PTR ds:[rsi]
   140014727:	jb     0x140014796
   140014729:	(bad)  
   14001472a:	je     0x140014795
   14001472c:	outs   dx,DWORD PTR ds:[rsi]
   14001472d:	outs   dx,BYTE PTR ds:[rsi]
   14001472e:	add    BYTE PTR [rax],al
   140014730:	retf   0x5304
   140014733:	ja     0x14001479e
   140014735:	je     0x14001479a
   140014737:	push   0x68546f54
   14001473c:	jb     0x1400147a3
   14001473e:	(bad)  
   14001473f:	add    BYTE PTR fs:[rax],al
   140014742:	rex.WXB
   140014743:	rex.RB push r10
   140014745:	rex.WRX
   140014746:	rex.RB
   140014747:	xor    r14,QWORD PTR [rdx]
   14001474a:	cs fs ins BYTE PTR es:[rdi],dx
   14001474d:	ins    BYTE PTR es:[rdi],dx
   14001474e:	add    BYTE PTR [rax],al
   140014750:	sbb    DWORD PTR [rdx],eax
   140014752:	rex.WRB
   140014753:	gs jae 0x1400147c9
   140014756:	(bad)  
   140014757:	rex.X outs dx,DWORD PTR gs:[esi]
   14001475b:	js     0x1400147b4
   14001475d:	add    dh,bh
   14001475f:	add    DWORD PTR [rdi+rbp*2+0x61],ecx
   140014763:	fs push rbx
   140014765:	je     0x1400147d9
   140014767:	imul   ebp,DWORD PTR [rsi+0x67],0x53550057
   14001476e:	rex.RB push r10
   140014770:	xor    esi,DWORD PTR [rdx]
   140014772:	cs fs ins BYTE PTR es:[rdi],dx
   140014775:	ins    BYTE PTR es:[rdi],dx
   140014776:	add    BYTE PTR [rax],al
   140014778:	adc    al,0x0
   14001477a:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14001477c:	rex.XB jb 0x1400147e4
   14001477f:	(bad)  
   140014780:	je     0x1400147e7
   140014782:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140014784:	jae    0x1400147fa
   140014786:	(bad)  
   140014787:	outs   dx,BYTE PTR ds:[rsi]
   140014788:	movsxd esp,DWORD PTR [rbp+0x0]
   14001478b:	add    BYTE PTR [rax+0x0],dh
   14001478e:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140014790:	push   rbp
   140014791:	outs   dx,BYTE PTR ds:[rsi]
   140014792:	imul   ebp,DWORD PTR [rsi+0x69],0x6c616974
   140014799:	imul   edi,DWORD PTR [rdx+0x65],0x430000
   1400147a0:	rex.XB outs dx,DWORD PTR ds:[rsi]
   1400147a2:	rex.WB outs dx,BYTE PTR ds:[rsi]
   1400147a4:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   1400147ac:	rex.RB js 0x1400147af
   1400147af:	add    BYTE PTR [rdi+0x6c],ch
   1400147b2:	xor    esi,DWORD PTR gs:[rdx]
   1400147b5:	cs fs ins BYTE PTR es:[rdi],dx
   1400147b8:	ins    BYTE PTR es:[rdi],dx
   1400147b9:	add    BYTE PTR [rdi+0x4c],cl
   1400147bc:	rex.RB
   1400147bd:	push   r13
   1400147bf:	push   rsp
   1400147c0:	xor    esi,DWORD PTR [rdx]
   1400147c2:	cs fs ins BYTE PTR es:[rdi],dx
   1400147c5:	ins    BYTE PTR es:[rdi],dx
   1400147c6:	add    BYTE PTR [rax],al
   1400147c8:	or     al,0x0
   1400147ca:	rex.XB outs dx,DWORD PTR ds:[rsi]
   1400147cc:	jb     0x140014810
   1400147ce:	imul   ebp,DWORD PTR [rsi+0x64],0x75526f54
   1400147d5:	outs   dx,BYTE PTR ds:[rsi]
   1400147d6:	je     0x140014841
   1400147d8:	ins    DWORD PTR es:[rdi],dx
   1400147d9:	gs rex.X jns 0x140014820
   1400147dd:	data16 add BYTE PTR [ebp+0x73],ch
   1400147e2:	movsxd ebp,DWORD PTR [rdi+0x72]
   1400147e5:	gs gs cs fs ins BYTE PTR es:[rdi],dx
   1400147ea:	ins    BYTE PTR es:[rdi],dx
   1400147eb:	add    BYTE PTR [rbx+0x0],ch
   1400147ee:	push   rbp
   1400147ef:	push   rdx
   1400147f0:	rex.WR
   1400147f1:	rex.WRXB jo 0x140014859
   1400147f4:	outs   dx,BYTE PTR ds:[rsi]
   1400147f5:	rex.X ins BYTE PTR es:[rdi],dx
   1400147f7:	outs   dx,DWORD PTR ds:[rsi]
   1400147f8:	movsxd ebp,DWORD PTR [rbx+0x69]
   1400147fb:	outs   dx,BYTE PTR ds:[rsi]
   1400147fc:	addr32 push rbx
   1400147fe:	je     0x140014872
   140014800:	gs (bad) 
   140014802:	ins    DWORD PTR es:[rdi],dx
   140014803:	push   rdi
   140014804:	add    BYTE PTR [rax],al
   140014806:	jne    0x14001487a
   140014808:	ins    BYTE PTR es:[rdi],dx
   140014809:	ins    DWORD PTR es:[rdi],dx
   14001480a:	outs   dx,DWORD PTR ds:[rsi]
   14001480b:	outs   dx,BYTE PTR ds:[rsi]
   14001480c:	cs fs ins BYTE PTR es:[rdi],dx
   14001480f:	ins    BYTE PTR es:[rdi],dx
   140014810:	add    BYTE PTR [rax],al
   140014812:	xor    BYTE PTR [rdx],al
   140014814:	push   rdx
   140014815:	gs rex.XB ins BYTE PTR es:[edi],dx
   140014819:	outs   dx,DWORD PTR ds:[rsi]
   14001481a:	jae    0x140014881
   14001481c:	rex.WXB
   14001481d:	gs jns 0x140014820
   140014820:	(bad)  
   140014821:	add    dl,BYTE PTR [rdx+0x65]
   140014824:	addr32 rex.WRXB jo 0x14001488d
   140014828:	outs   dx,BYTE PTR ds:[rsi]
   140014829:	rex.WXB
   14001482a:	gs jns 0x140014872
   14001482d:	js     0x140014886
   14001482f:	add    BYTE PTR [rsi+0x2],ch
   140014832:	push   rdx
   140014833:	gs addr32 push rcx
   140014836:	jne    0x14001489d
   140014838:	jb     0x1400148b3
   14001483a:	push   rsi
   14001483b:	(bad)  
   14001483c:	ins    BYTE PTR es:[rdi],dx
   14001483d:	jne    0x1400148a4
   14001483f:	rex.RB js 0x140014899
   140014842:	add    BYTE PTR [rax],al
   140014844:	rex.B
   140014845:	rex.R push rsi
   140014847:	push   r8
   140014849:	xor    rsi,QWORD PTR [r10]
   14001484c:	cs fs ins BYTE PTR es:[rdi],dx
   14001484f:	ins    BYTE PTR es:[rdi],dx
   140014850:	add    BYTE PTR [rax],al
   140014852:	lea    eax,[rcx]
   140014854:	rex.RXB
   140014855:	gs je  0x14001489b
   140014858:	outs   dx,DWORD PTR ds:[rsi]
   140014859:	ins    DWORD PTR es:[rdi],dx
   14001485a:	ins    DWORD PTR es:[rdi],dx
   14001485b:	(bad)  
   14001485c:	outs   dx,BYTE PTR ds:[rsi]
   14001485d:	imul   r13,QWORD PTR fs:[rsi+0x65],0x4b30057
   140014866:	push   rbx
   140014867:	gs je  0x1400148bf
   14001486a:	outs   dx,BYTE PTR ds:[rsi]
   14001486b:	push   0x6c646e61
   140014870:	gs fs rex.RB js 0x1400148d8
   140014875:	gs jo  0x1400148ec
   140014878:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   14001487f:	gs jb  0x140014882
   140014882:	(bad)  
   140014883:	add    al,BYTE PTR [rdi+0x65]
   140014886:	je     0x1400148d5
   140014888:	outs   dx,DWORD PTR ds:[rsi]
   140014889:	fs jne 0x1400148f8
   14001488c:	gs rex.W (bad) 
   14001488f:	outs   dx,BYTE PTR ds:[rsi]
   140014890:	fs ins BYTE PTR es:[rdi],dx
   140014892:	gs push rdi
   140014894:	add    BYTE PTR [rax],al
   140014896:	(bad)  
   140014897:	add    DWORD PTR [rbp+0x78],eax
   14001489a:	imul   esi,DWORD PTR [rax+rdx*2+0x72],0x7365636f
   1400148a2:	jae    0x1400148a4
   1400148a4:	retf   
   1400148a5:	add    BYTE PTR [rbp+riz*2+0x63],al
   1400148a9:	outs   dx,DWORD PTR ds:[rsi]
   1400148aa:	fs gs push rax
   1400148ad:	outs   dx,DWORD PTR ds:[rsi]
   1400148ae:	imul   ebp,DWORD PTR [rsi+0x74],0x34007265
   1400148b5:	add    eax,0x74697257
   1400148ba:	imul   r13d,DWORD PTR gs:[rbp+r12*2+0x0],0x6547026b
   1400148c4:	je     0x140014919
   1400148c6:	je     0x14001492c
   1400148c8:	rex.W (bad) 
   1400148ca:	outs   dx,BYTE PTR ds:[rsi]
   1400148cb:	fs ins BYTE PTR es:[rdi],dx
   1400148cd:	add    BYTE PTR gs:[rax],al
   1400148d0:	and    eax,0x6c745204
   1400148d5:	push   rbp
   1400148d6:	outs   dx,BYTE PTR ds:[rsi]
   1400148d7:	ja     0x140014942
   1400148d9:	outs   dx,BYTE PTR ds:[rsi]
   1400148da:	fs rex.RB js 0x1400148de
   1400148de:	add    DWORD PTR [esi+0x72],eax
   1400148e2:	gs rex.RB outs dx,BYTE PTR gs:[rsi]
   1400148e6:	jbe    0x140014951
   1400148e8:	jb     0x140014959
   1400148ea:	outs   dx,BYTE PTR ds:[rsi]
   1400148eb:	ins    DWORD PTR es:[rdi],dx
   1400148ec:	outs   dx,BYTE PTR gs:[rsi]
   1400148ee:	je     0x140014943
   1400148f0:	je     0x140014964
   1400148f2:	imul   ebp,DWORD PTR [rsi+0x67],0xe1005773
   1400148f9:	add    DWORD PTR [rdi+0x65],eax
   1400148fc:	je     0x140014943
   1400148fe:	outs   dx,BYTE PTR ds:[rsi]
   1400148ff:	jbe    0x14001496a
   140014901:	jb     0x140014972
   140014903:	outs   dx,BYTE PTR ds:[rsi]
   140014904:	ins    DWORD PTR es:[rdi],dx
   140014905:	outs   dx,BYTE PTR gs:[rsi]
   140014907:	je     0x14001495c
   140014909:	je     0x14001497d
   14001490b:	imul   ebp,DWORD PTR [rsi+0x67],0x5773
   140014912:	jl     0x140014918
   140014914:	push   rbx
   140014915:	gs je  0x140014960
   140014918:	(bad)  
   140014919:	outs   dx,BYTE PTR ds:[rsi]
   14001491a:	fs ins BYTE PTR es:[rdi],dx
   14001491c:	rex.XB outs dx,DWORD PTR gs:[rsi]
   14001491f:	jne    0x14001498f
   140014921:	je     0x140014923
   140014923:	add    bl,ch
   140014925:	add    cl,BYTE PTR [rcx+0x6e]
   140014928:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   140014930:	rex.XB jb 0x14001499c
   140014933:	je     0x14001499e
   140014935:	movsxd esp,DWORD PTR [rcx+0x6c]
   140014938:	push   rbx
   140014939:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14001493e:	outs   dx,BYTE PTR ds:[rsi]
   14001493f:	rex.B outs dx,BYTE PTR ds:[rsi]
   140014941:	fs push rbx
   140014943:	jo     0x1400149ae
   140014945:	outs   dx,BYTE PTR ds:[rsi]
   140014946:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140014948:	jne    0x1400149b8
   14001494a:	je     0x14001494c
   14001494c:	cli    
   14001494d:	add    DWORD PTR [rdi+0x65],eax
   140014950:	je     0x140014998
   140014952:	imul   ebp,DWORD PTR [rbp+riz*2+0x54],0x657079
   14001495a:	push   0x2
   14001495c:	rex.RXB
   14001495d:	gs je  0x1400149b3
   140014960:	je     0x1400149c3
   140014962:	jb     0x1400149d8
   140014964:	jne    0x1400149d6
   140014966:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140014968:	outs   dx,WORD PTR ds:[rsi]
   14001496a:	push   rdi
   14001496b:	add    dl,dl
   14001496d:	add    BYTE PTR [rbp+riz*2+0x6c],al
   140014971:	gs je  0x1400149d9
   140014974:	rex.XB jb 0x1400149e0
   140014977:	je     0x1400149e2
   140014979:	movsxd esp,DWORD PTR [rcx+0x6c]
   14001497c:	push   rbx
   14001497d:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140014982:	outs   dx,BYTE PTR ds:[rsi]
   140014983:	add    dh,ch
   140014985:	add    BYTE PTR [rbp+0x6e],al
   140014988:	movsxd ebp,DWORD PTR [rdi+0x64]
   14001498b:	gs push rax
   14001498d:	outs   dx,DWORD PTR ds:[rsi]
   14001498e:	imul   ebp,DWORD PTR [rsi+0x74],0x5a007265
   140014995:	add    DWORD PTR [rsi+0x6c],eax
   140014998:	jae    0x1400149e1
   14001499a:	gs je  0x1400149f3
   14001499d:	(bad)  
   14001499e:	ins    BYTE PTR es:[rdi],dx
   14001499f:	jne    0x140014a06
   1400149a1:	add    BYTE PTR [rbx+0x1],bl
   1400149a4:	rex.RX ins BYTE PTR es:[rdi],dx
   1400149a6:	jae    0x1400149fb
   1400149a8:	gs je  0x140014a01
   1400149ab:	(bad)  
   1400149ac:	ins    BYTE PTR es:[rdi],dx
   1400149ad:	jne    0x140014a14
   1400149af:	add    BYTE PTR [rcx+0x1],bl
   1400149b2:	rex.RX ins BYTE PTR es:[rdi],dx
   1400149b4:	jae    0x1400149fc
   1400149b6:	jb     0x140014a1d
   1400149b8:	add    BYTE PTR gs:[rax+0x74655304],al
   1400149bf:	rex.WR (bad) 
   1400149c1:	jae    0x140014a37
   1400149c3:	rex.RB jb 0x140014a38
   1400149c6:	outs   dx,DWORD PTR ds:[rsi]
   1400149c7:	jb     0x1400149c9
   1400149c9:	add    bl,cl
   1400149cb:	add    DWORD PTR [rdi+0x65],eax
   1400149ce:	je     0x140014a13
   1400149d0:	jne    0x140014a44
   1400149d2:	jb     0x140014a39
   1400149d4:	outs   dx,BYTE PTR ds:[rsi]
   1400149d5:	je     0x140014a2b
   1400149d7:	push   0x64616572
   1400149dc:	rex.WB
   1400149dd:	add    BYTE PTR fs:[rax],al
   1400149e0:	pop    rax
   1400149e1:	add    DWORD PTR [rsi+0x6c],eax
   1400149e4:	jae    0x140014a27
   1400149e6:	ins    BYTE PTR es:[rdi],dx
   1400149e7:	ins    BYTE PTR es:[rdi],dx
   1400149e8:	outs   dx,DWORD PTR ds:[rsi]
   1400149e9:	movsxd eax,DWORD PTR [rax]
   1400149eb:	add    BYTE PTR [rdx+0x74654702],ch
   1400149f1:	push   rsi
   1400149f2:	gs jb  0x140014a68
   1400149f5:	imul   ebp,DWORD PTR [rdi+0x6e],0x2d50000
   1400149fc:	rex.W
   1400149fd:	gs (bad) 
   1400149ff:	jo     0x140014a44
   140014a01:	jb     0x140014a68
   140014a03:	(bad)  
   140014a04:	je     0x140014a6b
   140014a06:	add    BYTE PTR [rax],al
   140014a08:	test   eax,0x65755103
   140014a0d:	jb     0x140014a88
   140014a0f:	push   rax
   140014a10:	gs jb  0x140014a79
   140014a13:	outs   dx,DWORD PTR ds:[rsi]
   140014a14:	jb     0x140014a83
   140014a16:	(bad)  
   140014a17:	outs   dx,BYTE PTR ds:[rsi]
   140014a18:	movsxd esp,DWORD PTR [rbp+0x43]
   140014a1b:	outs   dx,DWORD PTR ds:[rsi]
   140014a1c:	jne    0x140014a8c
   140014a1e:	je     0x140014a85
   140014a20:	jb     0x140014a22
   140014a22:	(bad)  
   140014a23:	add    al,BYTE PTR [rdi+0x65]
   140014a26:	je     0x140014a7c
   140014a28:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
   140014a2f:	je     0x140014a31
   140014a31:	add    bh,al
   140014a33:	add    DWORD PTR [rdi+0x65],eax
   140014a36:	je     0x140014a7b
   140014a38:	jne    0x140014aac
   140014a3a:	jb     0x140014aa1
   140014a3c:	outs   dx,BYTE PTR ds:[rsi]
   140014a3d:	je     0x140014a8f
   140014a3f:	jb     0x140014ab0
   140014a41:	movsxd esp,DWORD PTR [rbp+0x73]
   140014a44:	jae    0x140014a8f
   140014a46:	add    BYTE PTR fs:[rax+0x74654702],al
   140014a4d:	push   rbx
   140014a4e:	jns    0x140014ac3
   140014a50:	je     0x140014ab7
   140014a52:	ins    DWORD PTR es:[rdi],dx
   140014a53:	push   rsp
   140014a54:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
   140014a5b:	ins    BYTE PTR es:[rdi],dx
   140014a5c:	gs push rsp
   140014a5e:	imul   ebp,DWORD PTR [rbp+0x65],0x5404ce00
   140014a65:	gs jb  0x140014ad5
   140014a68:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
   140014a6f:	outs   dx,DWORD PTR ds:[rsi]
   140014a70:	movsxd esp,DWORD PTR [rbp+0x73]
   140014a73:	jae    0x140014a75
   140014a75:	add    dh,al
   140014a77:	add    DWORD PTR [rdi+0x65],eax
   140014a7a:	je     0x140014abf
   140014a7c:	jne    0x140014af0
   140014a7e:	jb     0x140014ae5
   140014a80:	outs   dx,BYTE PTR ds:[rsi]
   140014a81:	je     0x140014ad3
   140014a83:	jb     0x140014af4
   140014a85:	movsxd esp,DWORD PTR [rbp+0x73]
   140014a88:	jae    0x140014a8a
   140014a8a:	loop   0x140014a90
   140014a8c:	push   rbp
   140014a8d:	outs   dx,BYTE PTR ds:[rsi]
   140014a8e:	push   0x6c646e61
   140014a93:	gs fs rex.RB js 0x140014afb
   140014a98:	gs jo  0x140014b0f
   140014a9b:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   140014aa2:	gs jb  0x140014aa5
   140014aa5:	add    BYTE PTR [rdx],al
   140014aa7:	add    ecx,DWORD PTR [rcx+0x73]
   140014aaa:	rex.R
   140014aab:	gs (bad) 
   140014aad:	jne    0x140014b16
   140014aaf:	addr32 gs jb 0x140014b03
   140014ab3:	jb     0x140014b1a
   140014ab5:	jae    0x140014b1c
   140014ab7:	outs   dx,BYTE PTR ds:[rsi]
   140014ab8:	je     0x140014aba
   140014aba:	es add al,0x52
   140014abd:	je     0x140014b2b
   140014abf:	push   rsi
   140014ac0:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
   140014ac7:	outs   dx,BYTE PTR ds:[rsi]
   140014ac8:	ja     0x140014b33
   140014aca:	outs   dx,BYTE PTR ds:[rsi]
   140014acb:	add    BYTE PTR fs:[rax],al
   140014ace:	(bad)  
   140014acf:	add    al,0x52
   140014ad1:	je     0x140014b3f
   140014ad3:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140014ad5:	outs   dx,DWORD PTR ds:[rsi]
   140014ad6:	imul   esi,DWORD PTR [rbp+0x70],0x46
   140014ada:	jne    0x140014b4a
   140014adc:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   140014ae0:	outs   dx,BYTE PTR ds:[rsi]
   140014ae1:	rex.RB outs dx,BYTE PTR ds:[rsi]
   140014ae3:	je     0x140014b57
   140014ae5:	jns    0x140014ae7
   140014ae7:	add    BYTE PTR [rax],bl
   140014ae9:	add    al,0x52
   140014aeb:	je     0x140014b59
   140014aed:	rex.XB (bad) 
   140014aef:	jo     0x140014b65
   140014af1:	jne    0x140014b65
   140014af3:	rex.XB outs dx,DWORD PTR gs:[rsi]
   140014af6:	outs   dx,BYTE PTR ds:[rsi]
   140014af7:	je     0x140014b5e
   140014af9:	js     0x140014b6f
   140014afb:	add    BYTE PTR [rbx],bh
   140014afd:	add    ecx,DWORD PTR [rbp+riz*2+0x61]
   140014b01:	jbe    0x140014b68
   140014b03:	rex.XB jb 0x140014b6f
   140014b06:	je     0x140014b71
   140014b08:	movsxd esp,DWORD PTR [rcx+0x6c]
   140014b0b:	push   rbx
   140014b0c:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140014b11:	outs   dx,BYTE PTR ds:[rsi]
   140014b12:	add    BYTE PTR [rax],al
   140014b14:	repnz add BYTE PTR [rbp+0x6e],al
   140014b18:	je     0x140014b7f
   140014b1a:	jb     0x140014b5f
   140014b1c:	jb     0x140014b87
   140014b1e:	je     0x140014b89
   140014b20:	movsxd esp,DWORD PTR [rcx+0x6c]
   140014b23:	push   rbx
   140014b24:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140014b29:	outs   dx,BYTE PTR ds:[rsi]
   140014b2a:	add    BYTE PTR [rax],al
   140014b2c:	or     al,0x2
   140014b2e:	rex.RXB
   140014b2f:	gs je  0x140014b7e
   140014b32:	outs   dx,DWORD PTR ds:[rsi]
   140014b33:	movsxd esp,DWORD PTR [rcx+0x6c]
   140014b36:	rex.WB outs dx,BYTE PTR gs:[rsi]
   140014b39:	outs   dx,WORD PTR ds:[rsi]
   140014b3b:	push   rdi
   140014b3c:	add    BYTE PTR [rax],al
   140014b3e:	rol    BYTE PTR [rbx+rdx*2],0x6c
   140014b42:	gs gs jo 0x140014b46
   140014b46:	js     0x140014b49
   140014b48:	rex.RXB
   140014b49:	gs je  0x140014b8f
   140014b4c:	push   rax
   140014b4d:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140014b4f:	outs   dx,WORD PTR ds:[rsi]
   140014b51:	add    BYTE PTR [rsi+0x1],ch
   140014b54:	rex.RXB
   140014b55:	gs je  0x140014b99
   140014b58:	rex.XB push r8
   140014b5a:	add    BYTE PTR [rax],al
   140014b5c:	add    al,BYTE PTR ds:[rdi+0x65]
   140014b60:	je     0x140014bb1
   140014b62:	rex.RB
   140014b63:	rex.WRB
   140014b64:	rex.XB push r8
   140014b66:	add    BYTE PTR [rax],al
   140014b68:	or     al,0x3
   140014b6a:	rex.WB jae 0x140014bc3
   140014b6d:	(bad)  
   140014b6e:	ins    BYTE PTR es:[rdi],dx
   140014b6f:	imul   esp,DWORD PTR [rbx+rax*2+0x6f],0x61506564
   140014b77:	addr32 gs add bl,dl
   140014b7b:	add    cl,BYTE PTR [rax+0x65]
   140014b7e:	(bad)  
   140014b7f:	jo     0x140014bc2
   140014b81:	ins    BYTE PTR es:[rdi],dx
   140014b82:	ins    BYTE PTR es:[rdi],dx
   140014b83:	outs   dx,DWORD PTR ds:[rsi]
   140014b84:	movsxd eax,DWORD PTR [rax]
   140014b86:	mov    ah,0x3
   140014b88:	push   rdx
   140014b89:	(bad)  
   140014b8a:	imul   esi,DWORD PTR [rbx+0x65],0x65637845
   140014b91:	jo     0x140014c07
   140014b93:	imul   ebp,DWORD PTR [rdi+0x6e],0x4210000
   140014b9a:	push   rdx
   140014b9b:	je     0x140014c09
   140014b9d:	push   rax
   140014b9e:	movsxd edx,DWORD PTR [rdi+rbp*2+0x46]
   140014ba2:	imul   ebp,DWORD PTR [rbp+riz*2+0x48],0x65646165
   140014baa:	jb     0x140014bac
   140014bac:	and    BYTE PTR [rip+0x65646957],al        # 0x1a565b509
   140014bb2:	rex.XB push 0x6f547261
   140014bb8:	rex.WRB jne 0x140014c27
   140014bbb:	je     0x140014c26
   140014bbd:	rex.X jns 0x140014c34
   140014bc0:	gs add ah,bl
   140014bc3:	add    cl,BYTE PTR [rax+0x65]
   140014bc6:	(bad)  
   140014bc7:	jo     0x140014c1c
   140014bc9:	imul   edi,DWORD PTR [rdx+0x65],0x2da0000
   140014bd0:	rex.W
   140014bd1:	gs (bad) 
   140014bd3:	jo     0x140014c27
   140014bd5:	gs rex.B ins BYTE PTR es:[rdi],dx
   140014bd8:	ins    BYTE PTR es:[rdi],dx
   140014bd9:	outs   dx,DWORD PTR ds:[rsi]
   140014bda:	movsxd eax,DWORD PTR [rax]
   140014bdc:	(bad)  
   140014bdd:	add    ecx,DWORD PTR [rbx+rax*2+0x4d]
   140014be1:	(bad)  
   140014be2:	jo     0x140014c37
   140014be4:	je     0x140014c58
   140014be6:	imul   ebp,DWORD PTR [rsi+0x67],0x69000057
   140014bed:	add    ecx,DWORD PTR [rbp+0x75]
   140014bf0:	ins    BYTE PTR es:[rdi],dx
   140014bf1:	je     0x140014c5c
   140014bf3:	rex.X jns 0x140014c6a
   140014bf6:	gs push rsp
   140014bf8:	outs   dx,DWORD PTR ds:[rsi]
   140014bf9:	push   rdi
   140014bfa:	imul   esp,DWORD PTR [rbp+riz*2+0x43],0x726168
   140014c02:	jo     0x140014c06
   140014c04:	rex.RXB
   140014c05:	gs je  0x140014c5b
   140014c08:	je     0x140014c7c
   140014c0a:	imul   ebp,DWORD PTR [rsi+0x67],0x65707954
   140014c11:	push   rdi
   140014c12:	add    BYTE PTR [rax],al
   140014c14:	in     eax,0x4
   140014c16:	push   rbp
   140014c17:	outs   dx,BYTE PTR ds:[rsi]
   140014c18:	ins    DWORD PTR es:[rdi],dx
   140014c19:	(bad)  
   140014c1a:	jo     0x140014c72
   140014c1c:	imul   esp,DWORD PTR [rbp+0x77],0x6946664f
   140014c23:	ins    BYTE PTR es:[rdi],dx
   140014c24:	add    BYTE PTR gs:[rbx+0x3],al
   140014c28:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140014c2a:	(bad)  
   140014c2b:	fs push rdx
   140014c2d:	gs jae 0x140014c9f
   140014c30:	jne    0x140014ca4
   140014c32:	movsxd esp,DWORD PTR [rbp+0x0]
   140014c35:	add    BYTE PTR [rbx],ch
   140014c37:	add    al,0x53
   140014c39:	gs (bad) 
   140014c3b:	jb     0x140014ca0
   140014c3d:	push   0x68746150
   140014c42:	push   rdi
   140014c43:	add    BYTE PTR [rbp+0x2],dh
   140014c46:	rex.RXB
   140014c47:	gs je  0x140014c9d
   140014c4a:	jns    0x140014cbf
   140014c4c:	je     0x140014cb3
   140014c4e:	ins    DWORD PTR es:[rdi],dx
   140014c4f:	rex.R
   140014c50:	gs data16 (bad) 
   140014c53:	jne    0x140014cc1
   140014c55:	je     0x140014cac
   140014c57:	rex.WB
   140014c58:	rex.WR (bad) 
   140014c5a:	outs   dx,BYTE PTR ds:[rsi]
   140014c5b:	addr32 jne 0x140014cbf
   140014c5e:	add    BYTE PTR gs:[eax],al
   140014c62:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140014c63:	add    al,BYTE PTR [rdi+0x65]
   140014c66:	je     0x140014cbd
   140014c68:	jae    0x140014ccf
   140014c6a:	jb     0x140014cb0
   140014c6c:	gs data16 (bad) 
   140014c6f:	jne    0x140014cdd
   140014c71:	je     0x140014cc8
   140014c73:	rex.WB
   140014c74:	rex.WR (bad) 
   140014c76:	outs   dx,BYTE PTR ds:[rsi]
   140014c77:	addr32 jne 0x140014cdb
   140014c7a:	add    BYTE PTR gs:[eax],al
   140014c7e:	push   rbx
   140014c7f:	add    DWORD PTR [rsi+0x69],eax
   140014c82:	outs   dx,BYTE PTR ds:[rsi]
   140014c83:	fs push rdx
   140014c85:	gs jae 0x140014cf7
   140014c88:	jne    0x140014cfc
   140014c8a:	movsxd esp,DWORD PTR [rbp+0x45]
   140014c8d:	js     0x140014ce6
   140014c8f:	add    BYTE PTR [rdx+0x0],dl
   140014c92:	rex.XB ins BYTE PTR es:[rdi],dx
   140014c94:	outs   dx,DWORD PTR ds:[rsi]
   140014c95:	jae    0x140014cfc
   140014c97:	rex.W (bad) 
   140014c99:	outs   dx,BYTE PTR ds:[rsi]
   140014c9a:	fs ins BYTE PTR es:[rdi],dx
   140014c9c:	add    BYTE PTR gs:[rcx+0x3],bl
   140014ca0:	rex.WRB (bad) 
   140014ca2:	jo     0x140014cfa
   140014ca4:	imul   esp,DWORD PTR [rbp+0x77],0x6946664f
   140014cab:	ins    BYTE PTR es:[rdi],dx
   140014cac:	add    BYTE PTR gs:[rax+rax*1+0x61657243],cl
   140014cb4:	je     0x140014d1b
   140014cb6:	imul   r13d,DWORD PTR [rbp+r12*2+0x4d],0x69707061
   140014cbf:	outs   dx,BYTE PTR ds:[rsi]
   140014cc0:	addr32 push rdi
   140014cc2:	add    BYTE PTR [rax],al
   140014cc4:	rex add ecx,DWORD PTR [rdi+rbp*2+0x61]
   140014cc9:	imul   r12,QWORD PTR fs:[rdx+0x72],0x45797261
   140014cd2:	js     0x140014d2b
   140014cd4:	add    BYTE PTR [rax],al
   140014cd6:	pop    QWORD PTR [rax]
   140014cd8:	rex.XB jb 0x140014d40
   140014cdb:	(bad)  
   140014cdc:	je     0x140014d43
   140014cde:	imul   r13d,DWORD PTR [rbp+r12*2+0x57],0x4702ac00
   140014ce7:	gs je  0x140014d40
   140014cea:	gs jb  0x140014d60
   140014ced:	imul   ebp,DWORD PTR [rdi+0x6e],0x577845
   140014cf4:	je     0x140014cfa
   140014cf6:	push   rbx
   140014cf7:	gs je  0x140014d40
   140014cfa:	imul   ebp,DWORD PTR [rbp+riz*2+0x50],0x746e696f
   140014d02:	gs jb  0x140014d05
   140014d05:	add    BYTE PTR [rax+0x74654701],ah
   140014d0b:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140014d0d:	outs   dx,BYTE PTR ds:[rsi]
   140014d0e:	jae    0x140014d7f
   140014d10:	ins    BYTE PTR es:[rdi],dx
   140014d11:	gs rex.XB push r8
   140014d14:	add    BYTE PTR [rax],al
   140014d16:	mov    dl,0x1
   140014d18:	rex.RXB
   140014d19:	gs je  0x140014d5f
   140014d1c:	outs   dx,DWORD PTR ds:[rsi]
   140014d1d:	outs   dx,BYTE PTR ds:[rsi]
   140014d1e:	jae    0x140014d8f
   140014d20:	ins    BYTE PTR es:[rdi],dx
   140014d21:	rex.WRB outs dx,DWORD PTR gs:[rsi]
   140014d24:	fs add BYTE PTR gs:[rax],al
   140014d28:	xchg   esp,eax
   140014d29:	add    al,0x53
   140014d2b:	gs je  0x140014d81
   140014d2e:	je     0x140014d94
   140014d30:	rex.W (bad) 
   140014d32:	outs   dx,BYTE PTR ds:[rsi]
   140014d33:	fs ins BYTE PTR es:[rdi],dx
   140014d35:	add    BYTE PTR gs:[rax],al
   140014d38:	xor    eax,DWORD PTR [rip+0x74697257]        # 0x1b46abf95
   140014d3e:	rex.XB outs dx,DWORD PTR gs:[rsi]
   140014d41:	outs   dx,BYTE PTR ds:[rsi]
   140014d42:	jae    0x140014db3
   140014d44:	ins    BYTE PTR es:[rdi],dx
   140014d45:	gs push rdi
   140014d47:	add    BYTE PTR [rbp+0x1],bl
   140014d4a:	rex.RX ins BYTE PTR es:[rdi],dx
   140014d4c:	jne    0x140014dc1
   140014d4e:	push   0x656c6946
   140014d53:	rex.X jne 0x140014dbc
   140014d56:	data16 gs jb 0x140014dcd
	...
