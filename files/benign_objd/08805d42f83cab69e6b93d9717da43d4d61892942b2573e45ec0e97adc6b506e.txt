
08805d42f83cab69e6b93d9717da43d4d61892942b2573e45ec0e97adc6b506e.exe:     file format pei-x86-64


Disassembly of section .text:

0000000000401000 <.text>:
  401000:	ret    
  401001:	nop    DWORD PTR [rax+rax*1+0x0]
  401006:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401010:	sub    rsp,0x28
  401014:	mov    rax,QWORD PTR [rip+0xd505]        # 0x40e520
  40101b:	xor    edx,edx
  40101d:	mov    DWORD PTR [rax],0x1
  401023:	mov    rax,QWORD PTR [rip+0xd506]        # 0x40e530
  40102a:	mov    DWORD PTR [rax],0x1
  401030:	mov    rax,QWORD PTR [rip+0xd509]        # 0x40e540
  401037:	mov    DWORD PTR [rax],0x1
  40103d:	mov    rax,QWORD PTR [rip+0xd4cc]        # 0x40e510
  401044:	mov    DWORD PTR [rax],0x1
  40104a:	mov    rax,QWORD PTR [rip+0xd34f]        # 0x40e3a0
  401051:	cmp    WORD PTR [rax],0x5a4d
  401056:	je     0x4010d0
  401058:	mov    rax,QWORD PTR [rip+0xd4a1]        # 0x40e500
  40105f:	mov    DWORD PTR [rip+0xffa3],edx        # 0x411008
  401065:	mov    eax,DWORD PTR [rax]
  401067:	test   eax,eax
  401069:	je     0x4010c2
  40106b:	mov    ecx,0x2
  401070:	call   0x40ac18
  401075:	mov    rcx,0xffffffffffffffff
  40107c:	call   0x404e30
  401081:	mov    rdx,QWORD PTR [rip+0xd3b8]        # 0x40e440
  401088:	mov    QWORD PTR [rdx],rax
  40108b:	mov    rdx,QWORD PTR [rip+0xd39e]        # 0x40e430
  401092:	mov    QWORD PTR [rdx],rax
  401095:	mov    rax,QWORD PTR [rip+0xd414]        # 0x40e4b0
  40109c:	mov    edx,DWORD PTR [rax]
  40109e:	mov    rax,QWORD PTR [rip+0xd33b]        # 0x40e3e0
  4010a5:	mov    rax,QWORD PTR [rax]
  4010a8:	mov    DWORD PTR [rax],edx
  4010aa:	call   0x404a10
  4010af:	mov    rax,QWORD PTR [rip+0xd29a]        # 0x40e350
  4010b6:	cmp    DWORD PTR [rax],0x1
  4010b9:	je     0x401120
  4010bb:	xor    eax,eax
  4010bd:	add    rsp,0x28
  4010c1:	ret    
  4010c2:	mov    ecx,0x1
  4010c7:	call   0x40ac18
  4010cc:	jmp    0x401075
  4010ce:	xchg   ax,ax
  4010d0:	movsxd rcx,DWORD PTR [rax+0x3c]
  4010d4:	add    rax,rcx
  4010d7:	cmp    DWORD PTR [rax],0x4550
  4010dd:	jne    0x401058
  4010e3:	movzx  ecx,WORD PTR [rax+0x18]
  4010e7:	cmp    cx,0x10b
  4010ec:	je     0x401133
  4010ee:	cmp    cx,0x20b
  4010f3:	jne    0x401058
  4010f9:	cmp    DWORD PTR [rax+0x84],0xe
  401100:	jbe    0x401058
  401106:	mov    ecx,DWORD PTR [rax+0xf8]
  40110c:	xor    edx,edx
  40110e:	test   ecx,ecx
  401110:	setne  dl
  401113:	jmp    0x401058
  401118:	nop    DWORD PTR [rax+rax*1+0x0]
  401120:	lea    rcx,[rip+0x3be9]        # 0x404d10
  401127:	call   0x404d00
  40112c:	xor    eax,eax
  40112e:	add    rsp,0x28
  401132:	ret    
  401133:	cmp    DWORD PTR [rax+0x74],0xe
  401137:	jbe    0x401058
  40113d:	mov    r8d,DWORD PTR [rax+0xe8]
  401144:	xor    edx,edx
  401146:	test   r8d,r8d
  401149:	setne  dl
  40114c:	jmp    0x401058
  401151:	nop    DWORD PTR [rax+rax*1+0x0]
  401156:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401160:	sub    rsp,0x38
  401164:	mov    rax,QWORD PTR [rip+0xd375]        # 0x40e4e0
  40116b:	lea    r8,[rip+0xfea6]        # 0x411018
  401172:	lea    rdx,[rip+0xfea7]        # 0x411020
  401179:	lea    rcx,[rip+0xfea8]        # 0x411028
  401180:	mov    eax,DWORD PTR [rax]
  401182:	mov    DWORD PTR [rip+0xfe78],eax        # 0x411000
  401188:	lea    rax,[rip+0xfe71]        # 0x411000
  40118f:	mov    QWORD PTR [rsp+0x20],rax
  401194:	mov    rax,QWORD PTR [rip+0xd305]        # 0x40e4a0
  40119b:	mov    r9d,DWORD PTR [rax]
  40119e:	call   0x40ac30
  4011a3:	mov    DWORD PTR [rip+0xfe67],eax        # 0x411010
  4011a9:	add    rsp,0x38
  4011ad:	ret    
  4011ae:	xchg   ax,ax
  4011b0:	push   r13
  4011b2:	push   r12
  4011b4:	push   rbp
  4011b5:	push   rdi
  4011b6:	push   rsi
  4011b7:	push   rbx
  4011b8:	sub    rsp,0x98
  4011bf:	mov    rbp,QWORD PTR [rip+0xd33a]        # 0x40e500
  4011c6:	xor    eax,eax
  4011c8:	mov    ecx,0xd
  4011cd:	lea    rdx,[rsp+0x20]
  4011d2:	mov    r9d,DWORD PTR [rbp+0x0]
  4011d6:	mov    rdi,rdx
  4011d9:	rep stos QWORD PTR es:[rdi],rax
  4011dc:	test   r9d,r9d
  4011df:	jne    0x401490
  4011e5:	mov    rax,QWORD PTR gs:0x30
  4011ee:	mov    rbx,QWORD PTR [rip+0xd21b]        # 0x40e410
  4011f5:	mov    rsi,QWORD PTR [rax+0x8]
  4011f9:	xor    edi,edi
  4011fb:	mov    r12,QWORD PTR [rip+0x1228e]        # 0x413490
  401202:	jmp    0x401215
  401204:	cmp    rsi,rax
  401207:	je     0x401430
  40120d:	mov    ecx,0x3e8
  401212:	call   r12
  401215:	mov    rax,rdi
  401218:	lock cmpxchg QWORD PTR [rbx],rsi
  40121d:	test   rax,rax
  401220:	jne    0x401204
  401222:	mov    rsi,QWORD PTR [rip+0xd1f7]        # 0x40e420
  401229:	xor    edi,edi
  40122b:	mov    eax,DWORD PTR [rsi]
  40122d:	cmp    eax,0x1
  401230:	je     0x401447
  401236:	mov    eax,DWORD PTR [rsi]
  401238:	test   eax,eax
  40123a:	je     0x4014a0
  401240:	mov    DWORD PTR [rip+0xfdba],0x1        # 0x411004
  40124a:	mov    eax,DWORD PTR [rsi]
  40124c:	cmp    eax,0x1
  40124f:	je     0x40145c
  401255:	test   edi,edi
  401257:	je     0x401480
  40125d:	mov    rax,QWORD PTR [rip+0xd12c]        # 0x40e390
  401264:	mov    rax,QWORD PTR [rax]
  401267:	test   rax,rax
  40126a:	je     0x401278
  40126c:	xor    r8d,r8d
  40126f:	mov    edx,0x2
  401274:	xor    ecx,ecx
  401276:	call   rax
  401278:	call   0x405020
  40127d:	lea    rcx,[rip+0x433c]        # 0x4055c0
  401284:	call   QWORD PTR [rip+0x121fe]        # 0x413488
  40128a:	mov    rdx,QWORD PTR [rip+0xd16f]        # 0x40e400
  401291:	mov    QWORD PTR [rdx],rax
  401294:	call   0x4054d0
  401299:	lea    rcx,[rip+0xfffffffffffffd60]        # 0x401000
  4012a0:	call   0x40ac60
  4012a5:	call   0x404e10
  4012aa:	mov    rax,QWORD PTR [rip+0xd0ef]        # 0x40e3a0
  4012b1:	mov    QWORD PTR [rip+0x112c0],rax        # 0x412578
  4012b8:	mov    rax,QWORD PTR [rip+0xd111]        # 0x40e3d0
  4012bf:	mov    rax,QWORD PTR [rax]
  4012c2:	mov    rax,QWORD PTR [rax]
  4012c5:	test   rax,rax
  4012c8:	je     0x401317
  4012ca:	xor    ecx,ecx
  4012cc:	jmp    0x4012e2
  4012ce:	xchg   ax,ax
  4012d0:	test   dl,dl
  4012d2:	je     0x401310
  4012d4:	and    ecx,0x1
  4012d7:	je     0x401304
  4012d9:	mov    ecx,0x1
  4012de:	add    rax,0x1
  4012e2:	movzx  edx,BYTE PTR [rax]
  4012e5:	cmp    dl,0x20
  4012e8:	jle    0x4012d0
  4012ea:	mov    r8d,ecx
  4012ed:	xor    r8d,0x1
  4012f1:	cmp    dl,0x22
  4012f4:	cmove  ecx,r8d
  4012f8:	jmp    0x4012de
  4012fa:	nop    WORD PTR [rax+rax*1+0x0]
  401300:	test   dl,dl
  401302:	je     0x401310
  401304:	add    rax,0x1
  401308:	movzx  edx,BYTE PTR [rax]
  40130b:	cmp    dl,0x20
  40130e:	jle    0x401300
  401310:	mov    QWORD PTR [rip+0x11259],rax        # 0x412570
  401317:	mov    r8d,DWORD PTR [rbp+0x0]
  40131b:	test   r8d,r8d
  40131e:	je     0x401336
  401320:	test   BYTE PTR [rsp+0x5c],0x1
  401325:	mov    eax,0xa
  40132a:	jne    0x401421
  401330:	mov    DWORD PTR [rip+0xacca],eax        # 0x40c000
  401336:	mov    r12d,DWORD PTR [rip+0xfceb]        # 0x411028
  40133d:	lea    r13d,[r12+0x1]
  401342:	movsxd r13,r13d
  401345:	shl    r13,0x3
  401349:	mov    rcx,r13
  40134c:	call   0x40ab40
  401351:	test   r12d,r12d
  401354:	mov    rbp,rax
  401357:	mov    rdi,QWORD PTR [rip+0xfcc2]        # 0x411020
  40135e:	jle    0x4014be
  401364:	xor    ebx,ebx
  401366:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401370:	mov    rcx,QWORD PTR [rdi+rbx*8]
  401374:	call   0x40aad8
  401379:	lea    rsi,[rax+0x1]
  40137d:	mov    rcx,rsi
  401380:	call   0x40ab40
  401385:	mov    QWORD PTR [rbp+rbx*8+0x0],rax
  40138a:	mov    rdx,QWORD PTR [rdi+rbx*8]
  40138e:	mov    rcx,rax
  401391:	mov    r8,rsi
  401394:	add    rbx,0x1
  401398:	call   0x40ab38
  40139d:	cmp    r12d,ebx
  4013a0:	jg     0x401370
  4013a2:	sub    r13,0x8
  4013a6:	mov    QWORD PTR [rbp+r13*1+0x0],0x0
  4013af:	mov    QWORD PTR [rip+0xfc6a],rbp        # 0x411020
  4013b6:	call   0x4049e0
  4013bb:	mov    rax,QWORD PTR [rip+0xcfee]        # 0x40e3b0
  4013c2:	mov    rdx,QWORD PTR [rip+0xfc4f]        # 0x411018
  4013c9:	mov    ecx,DWORD PTR [rip+0xfc59]        # 0x411028
  4013cf:	mov    rax,QWORD PTR [rax]
  4013d2:	mov    QWORD PTR [rax],rdx
  4013d5:	mov    r8,QWORD PTR [rip+0xfc3c]        # 0x411018
  4013dc:	mov    rdx,QWORD PTR [rip+0xfc3d]        # 0x411020
  4013e3:	call   0x40aeb0
  4013e8:	mov    ecx,DWORD PTR [rip+0xfc1a]        # 0x411008
  4013ee:	mov    DWORD PTR [rip+0xfc18],eax        # 0x41100c
  4013f4:	test   ecx,ecx
  4013f6:	je     0x4014c6
  4013fc:	mov    edx,DWORD PTR [rip+0xfc02]        # 0x411004
  401402:	test   edx,edx
  401404:	jne    0x401411
  401406:	call   0x40abf8
  40140b:	mov    eax,DWORD PTR [rip+0xfbfb]        # 0x41100c
  401411:	add    rsp,0x98
  401418:	pop    rbx
  401419:	pop    rsi
  40141a:	pop    rdi
  40141b:	pop    rbp
  40141c:	pop    r12
  40141e:	pop    r13
  401420:	ret    
  401421:	movzx  eax,WORD PTR [rsp+0x60]
  401426:	jmp    0x401330
  40142b:	nop    DWORD PTR [rax+rax*1+0x0]
  401430:	mov    rsi,QWORD PTR [rip+0xcfe9]        # 0x40e420
  401437:	mov    edi,0x1
  40143c:	mov    eax,DWORD PTR [rsi]
  40143e:	cmp    eax,0x1
  401441:	jne    0x401236
  401447:	mov    ecx,0x1f
  40144c:	call   0x40ac00
  401451:	mov    eax,DWORD PTR [rsi]
  401453:	cmp    eax,0x1
  401456:	jne    0x401255
  40145c:	mov    rdx,QWORD PTR [rip+0xd00d]        # 0x40e470
  401463:	mov    rcx,QWORD PTR [rip+0xcff6]        # 0x40e460
  40146a:	call   0x40abd0
  40146f:	test   edi,edi
  401471:	mov    DWORD PTR [rsi],0x2
  401477:	jne    0x40125d
  40147d:	nop    DWORD PTR [rax]
  401480:	xor    eax,eax
  401482:	xchg   QWORD PTR [rbx],rax
  401485:	jmp    0x40125d
  40148a:	nop    WORD PTR [rax+rax*1+0x0]
  401490:	mov    rcx,rdx
  401493:	call   QWORD PTR [rip+0x11f6f]        # 0x413408
  401499:	jmp    0x4011e5
  40149e:	xchg   ax,ax
  4014a0:	mov    rdx,QWORD PTR [rip+0xcfe9]        # 0x40e490
  4014a7:	mov    rcx,QWORD PTR [rip+0xcfd2]        # 0x40e480
  4014ae:	mov    DWORD PTR [rsi],0x1
  4014b4:	call   0x40abd0
  4014b9:	jmp    0x40124a
  4014be:	xor    r13d,r13d
  4014c1:	jmp    0x4013a6
  4014c6:	mov    ecx,eax
  4014c8:	call   0x40ab88
  4014cd:	nop
  4014ce:	xchg   ax,ax
  4014d0:	sub    rsp,0x28
  4014d4:	mov    rax,QWORD PTR [rip+0xd025]        # 0x40e500
  4014db:	mov    DWORD PTR [rax],0x1
  4014e1:	call   0x404a20
  4014e6:	call   0x4011b0
  4014eb:	nop
  4014ec:	nop
  4014ed:	add    rsp,0x28
  4014f1:	ret    
  4014f2:	nop    DWORD PTR [rax+0x0]
  4014f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401500:	sub    rsp,0x28
  401504:	mov    rax,QWORD PTR [rip+0xcff5]        # 0x40e500
  40150b:	mov    DWORD PTR [rax],0x0
  401511:	call   0x404a20
  401516:	call   0x4011b0
  40151b:	nop
  40151c:	nop
  40151d:	add    rsp,0x28
  401521:	ret    
  401522:	nop
  401523:	nop
  401524:	nop
  401525:	nop
  401526:	nop
  401527:	nop
  401528:	nop
  401529:	nop
  40152a:	nop
  40152b:	nop
  40152c:	nop
  40152d:	nop
  40152e:	nop
  40152f:	nop
  401530:	mov    BYTE PTR [rip+0xfb4a],cl        # 0x411080
  401536:	ret    
  401537:	nop    WORD PTR [rax+rax*1+0x0]
  401540:	push   r14
  401542:	push   r13
  401544:	push   r12
  401546:	push   rbp
  401547:	push   rdi
  401548:	push   rsi
  401549:	push   rbx
  40154a:	sub    rsp,0x60
  40154e:	mov    r14,rcx
  401551:	mov    rcx,rdx
  401554:	mov    r12,rdx
  401557:	mov    r13d,r8d
  40155a:	call   0x40aad8
  40155f:	cmp    BYTE PTR [rip+0xfb1a],0x0        # 0x411080
  401566:	mov    rbx,rax
  401569:	mov    eax,DWORD PTR [r14+0x8]
  40156d:	lea    esi,[rax+0x5]
  401570:	jne    0x4016b0
  401576:	lea    ecx,[rsi+rbx*1]
  401579:	movsxd rcx,ecx
  40157c:	call   0x403510
  401581:	mov    rbx,rax
  401584:	movzx  eax,BYTE PTR [r12]
  401589:	cmp    al,0x5c
  40158b:	je     0x401671
  401591:	cmp    al,0x2f
  401593:	je     0x401671
  401599:	test   al,al
  40159b:	jne    0x401665
  4015a1:	mov    rsi,QWORD PTR [r14]
  4015a4:	test   rsi,rsi
  4015a7:	je     0x401732
  4015ad:	lea    rbp,[rsp+0x20]
  4015b2:	mov    rdi,QWORD PTR [rip+0x120e7]        # 0x4136a0
  4015b9:	jmp    0x40160c
  4015bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4015c0:	mov    rcx,rbx
  4015c3:	call   0x40aad8
  4015c8:	add    rax,rbx
  4015cb:	mov    rdx,rbp
  4015ce:	mov    rcx,rbx
  4015d1:	mov    DWORD PTR [rax],0x6578652e
  4015d7:	mov    BYTE PTR [rax+0x4],0x0
  4015db:	call   rdi
  4015dd:	test   eax,eax
  4015df:	js     0x4015ff
  4015e1:	movzx  eax,WORD PTR [rsp+0x26]
  4015e6:	and    ax,0xf000
  4015ea:	cmp    ax,0x4000
  4015ee:	je     0x4015ff
  4015f0:	mov    edx,r13d
  4015f3:	mov    rcx,rbx
  4015f6:	call   0x40aa70
  4015fb:	test   eax,eax
  4015fd:	je     0x401650
  4015ff:	mov    rsi,QWORD PTR [rsi+0x8]
  401603:	test   rsi,rsi
  401606:	je     0x401714
  40160c:	mov    rdx,QWORD PTR [rsi]
  40160f:	mov    rcx,rbx
  401612:	call   0x403610
  401617:	mov    rdx,r12
  40161a:	mov    rcx,rax
  40161d:	call   0x40aae8
  401622:	mov    rdx,rbp
  401625:	mov    rcx,rbx
  401628:	call   rdi
  40162a:	test   eax,eax
  40162c:	js     0x4015c0
  40162e:	movzx  eax,WORD PTR [rsp+0x26]
  401633:	and    ax,0xf000
  401637:	cmp    ax,0x4000
  40163b:	je     0x4015c0
  40163d:	mov    edx,r13d
  401640:	mov    rcx,rbx
  401643:	call   0x40aa70
  401648:	test   eax,eax
  40164a:	jne    0x4015c0
  401650:	mov    rsi,rbx
  401653:	mov    rax,rsi
  401656:	add    rsp,0x60
  40165a:	pop    rbx
  40165b:	pop    rsi
  40165c:	pop    rdi
  40165d:	pop    rbp
  40165e:	pop    r12
  401660:	pop    r13
  401662:	pop    r14
  401664:	ret    
  401665:	cmp    BYTE PTR [r12+0x1],0x3a
  40166b:	jne    0x4015a1
  401671:	mov    edx,r13d
  401674:	mov    rcx,r12
  401677:	call   0x40aa70
  40167c:	test   eax,eax
  40167e:	mov    rdx,r12
  401681:	mov    rcx,rbx
  401684:	jne    0x4016d0
  401686:	call   0x40aae8
  40168b:	cmp    BYTE PTR [rip+0xf9ee],0x0        # 0x411080
  401692:	mov    rsi,rbx
  401695:	je     0x401653
  401697:	call   QWORD PTR [rip+0x11e63]        # 0x413500
  40169d:	lea    rdx,[rip+0xbbee]        # 0x40d292
  4016a4:	lea    rcx,[rax+0x60]
  4016a8:	call   0x40ae80
  4016ad:	jmp    0x401653
  4016af:	nop
  4016b0:	call   QWORD PTR [rip+0x11e4a]        # 0x413500
  4016b6:	lea    rdx,[rip+0xbbc3]        # 0x40d280
  4016bd:	lea    rcx,[rax+0x60]
  4016c1:	mov    r8,r12
  4016c4:	call   0x40ae80
  4016c9:	jmp    0x401576
  4016ce:	xchg   ax,ax
  4016d0:	call   0x403610
  4016d5:	mov    edx,r13d
  4016d8:	mov    DWORD PTR [rax],0x6578652e
  4016de:	mov    BYTE PTR [rax+0x4],0x0
  4016e2:	mov    rcx,rbx
  4016e5:	mov    rsi,rbx
  4016e8:	call   0x40aa70
  4016ed:	test   eax,eax
  4016ef:	je     0x401653
  4016f5:	cmp    BYTE PTR [rip+0xf984],0x0        # 0x411080
  4016fc:	je     0x401723
  4016fe:	call   QWORD PTR [rip+0x11dfc]        # 0x413500
  401704:	lea    rdx,[rip+0xbba5]        # 0x40d2b0
  40170b:	lea    rcx,[rax+0x60]
  40170f:	call   0x40ae80
  401714:	cmp    BYTE PTR [rip+0xf965],0x0        # 0x411080
  40171b:	je     0x401723
  40171d:	cmp    QWORD PTR [r14],0x0
  401721:	je     0x40173b
  401723:	mov    rcx,rbx
  401726:	xor    esi,esi
  401728:	call   0x40ab60
  40172d:	jmp    0x401653
  401732:	cmp    BYTE PTR [rip+0xf947],0x0        # 0x411080
  401739:	je     0x401723
  40173b:	call   QWORD PTR [rip+0x11dbf]        # 0x413500
  401741:	lea    rdx,[rip+0xbb98]        # 0x40d2e0
  401748:	lea    rcx,[rax+0x60]
  40174c:	call   0x40ae80
  401751:	jmp    0x401723
  401753:	nop    DWORD PTR [rax]
  401756:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401760:	push   rdi
  401761:	push   rsi
  401762:	push   rbx
  401763:	sub    rsp,0x20
  401767:	mov    r8,QWORD PTR [rcx]
  40176a:	mov    rsi,rcx
  40176d:	mov    rdi,rdx
  401770:	test   r8,r8
  401773:	jne    0x401783
  401775:	jmp    0x4017d0
  401777:	nop    WORD PTR [rax+rax*1+0x0]
  401780:	mov    r8,rax
  401783:	mov    rax,QWORD PTR [r8+0x8]
  401787:	test   rax,rax
  40178a:	jne    0x401780
  40178c:	lea    rbx,[r8+0x8]
  401790:	mov    rcx,rdi
  401793:	call   0x40aad8
  401798:	cmp    eax,DWORD PTR [rsi+0x8]
  40179b:	jle    0x4017a0
  40179d:	mov    DWORD PTR [rsi+0x8],eax
  4017a0:	mov    ecx,0x10
  4017a5:	call   0x403510
  4017aa:	mov    rcx,rdi
  4017ad:	mov    rsi,rax
  4017b0:	call   0x4035e0
  4017b5:	mov    QWORD PTR [rsi],rax
  4017b8:	mov    rax,QWORD PTR [rbx]
  4017bb:	mov    QWORD PTR [rsi+0x8],rax
  4017bf:	mov    QWORD PTR [rbx],rsi
  4017c2:	add    rsp,0x20
  4017c6:	pop    rbx
  4017c7:	pop    rsi
  4017c8:	pop    rdi
  4017c9:	ret    
  4017ca:	nop    WORD PTR [rax+rax*1+0x0]
  4017d0:	mov    rbx,rcx
  4017d3:	jmp    0x401790
  4017d5:	nop
  4017d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4017e0:	push   r13
  4017e2:	push   r12
  4017e4:	push   rbp
  4017e5:	push   rdi
  4017e6:	push   rsi
  4017e7:	push   rbx
  4017e8:	sub    rsp,0x28
  4017ec:	mov    rsi,rcx
  4017ef:	mov    r12,rdx
  4017f2:	call   0x40aad8
  4017f7:	lea    rcx,[rax+0x3]
  4017fb:	call   0x403510
  401800:	cmp    BYTE PTR [rip+0xf879],0x0        # 0x411080
  401807:	mov    rdi,rax
  40180a:	jne    0x4018f1
  401810:	mov    rbx,rsi
  401813:	mov    r13,QWORD PTR [rip+0x11ce6]        # 0x413500
  40181a:	jmp    0x40182d
  40181c:	nop    DWORD PTR [rax+0x0]
  401820:	cmp    r9b,0x3b
  401824:	lea    r10,[rbx+0x1]
  401828:	je     0x401836
  40182a:	mov    rbx,r10
  40182d:	movzx  r9d,BYTE PTR [rbx]
  401831:	test   r9b,r9b
  401834:	jne    0x401820
  401836:	mov    rbp,rbx
  401839:	mov    rdx,rsi
  40183c:	mov    rcx,rdi
  40183f:	sub    rbp,rsi
  401842:	mov    r8,rbp
  401845:	call   0x40aac8
  40184a:	cmp    rbx,rsi
  40184d:	je     0x4018e0
  401853:	movzx  eax,BYTE PTR [rbx-0x1]
  401857:	cmp    al,0x5c
  401859:	je     0x401890
  40185b:	cmp    al,0x2f
  40185d:	je     0x401890
  40185f:	mov    BYTE PTR [rdi+rbp*1],0x2f
  401863:	mov    BYTE PTR [rdi+rbp*1+0x1],0x0
  401868:	cmp    BYTE PTR [rip+0xf811],0x0        # 0x411080
  40186f:	jne    0x40189d
  401871:	mov    rdx,rdi
  401874:	mov    rcx,r12
  401877:	call   0x401760
  40187c:	cmp    BYTE PTR [rbx],0x0
  40187f:	je     0x4018c3
  401881:	lea    r10,[rbx+0x1]
  401885:	mov    rsi,r10
  401888:	jmp    0x40182a
  40188a:	nop    WORD PTR [rax+rax*1+0x0]
  401890:	cmp    BYTE PTR [rip+0xf7e9],0x0        # 0x411080
  401897:	mov    BYTE PTR [rdi+rbp*1],0x0
  40189b:	je     0x401871
  40189d:	call   r13
  4018a0:	lea    rdx,[rip+0xba96]        # 0x40d33d
  4018a7:	lea    rcx,[rax+0x60]
  4018ab:	mov    r8,rdi
  4018ae:	call   0x40ae80
  4018b3:	mov    rdx,rdi
  4018b6:	mov    rcx,r12
  4018b9:	call   0x401760
  4018be:	cmp    BYTE PTR [rbx],0x0
  4018c1:	jne    0x401881
  4018c3:	mov    rcx,rdi
  4018c6:	add    rsp,0x28
  4018ca:	pop    rbx
  4018cb:	pop    rsi
  4018cc:	pop    rdi
  4018cd:	pop    rbp
  4018ce:	pop    r12
  4018d0:	pop    r13
  4018d2:	jmp    0x40ab60
  4018d7:	nop    WORD PTR [rax+rax*1+0x0]
  4018e0:	mov    eax,0x2f2e
  4018e5:	mov    BYTE PTR [rdi+0x2],0x0
  4018e9:	mov    WORD PTR [rdi],ax
  4018ec:	jmp    0x401868
  4018f1:	call   QWORD PTR [rip+0x11c09]        # 0x413500
  4018f7:	lea    rdx,[rip+0xba0a]        # 0x40d308
  4018fe:	lea    rcx,[rax+0x60]
  401902:	mov    r9d,0x3b
  401908:	mov    r8,rsi
  40190b:	call   0x40ae80
  401910:	jmp    0x401810
  401915:	nop
  401916:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401920:	push   rbx
  401921:	sub    rsp,0x20
  401925:	mov    rbx,rdx
  401928:	call   0x40ab50
  40192d:	test   rax,rax
  401930:	je     0x401942
  401932:	mov    rdx,rbx
  401935:	mov    rcx,rax
  401938:	add    rsp,0x20
  40193c:	pop    rbx
  40193d:	jmp    0x4017e0
  401942:	add    rsp,0x20
  401946:	pop    rbx
  401947:	ret    
  401948:	nop
  401949:	nop
  40194a:	nop
  40194b:	nop
  40194c:	nop
  40194d:	nop
  40194e:	nop
  40194f:	nop
  401950:	push   rsi
  401951:	push   rbx
  401952:	sub    rsp,0x38
  401956:	xor    esi,esi
  401958:	lea    rbx,[rsp+0x58]
  40195d:	test   rcx,rcx
  401960:	mov    QWORD PTR [rsp+0x58],rdx
  401965:	mov    QWORD PTR [rsp+0x60],r8
  40196a:	mov    QWORD PTR [rsp+0x68],r9
  40196f:	mov    QWORD PTR [rsp+0x28],rbx
  401974:	je     0x401994
  401976:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401980:	add    rbx,0x8
  401984:	call   0x40aad8
  401989:	mov    rcx,QWORD PTR [rbx-0x8]
  40198d:	add    esi,eax
  40198f:	test   rcx,rcx
  401992:	jne    0x401980
  401994:	mov    eax,esi
  401996:	add    rsp,0x38
  40199a:	pop    rbx
  40199b:	pop    rsi
  40199c:	ret    
  40199d:	nop    DWORD PTR [rax]
  4019a0:	push   r12
  4019a2:	push   rbp
  4019a3:	push   rdi
  4019a4:	push   rsi
  4019a5:	push   rbx
  4019a6:	sub    rsp,0x30
  4019aa:	lea    rdi,[rsp+0x70]
  4019af:	test   rdx,rdx
  4019b2:	mov    r12,rcx
  4019b5:	mov    QWORD PTR [rsp+0x70],r8
  4019ba:	mov    QWORD PTR [rsp+0x78],r9
  4019bf:	mov    rsi,rdx
  4019c2:	mov    QWORD PTR [rsp+0x28],rdi
  4019c7:	mov    rbp,rcx
  4019ca:	je     0x4019f8
  4019cc:	nop    DWORD PTR [rax+0x0]
  4019d0:	mov    rcx,rsi
  4019d3:	add    rdi,0x8
  4019d7:	call   0x40aad8
  4019dc:	mov    ebx,eax
  4019de:	mov    rdx,rsi
  4019e1:	mov    rcx,rbp
  4019e4:	mov    r8,rbx
  4019e7:	add    rbp,rbx
  4019ea:	call   0x40ab38
  4019ef:	mov    rsi,QWORD PTR [rdi-0x8]
  4019f3:	test   rsi,rsi
  4019f6:	jne    0x4019d0
  4019f8:	mov    rax,r12
  4019fb:	mov    BYTE PTR [rbp+0x0],0x0
  4019ff:	add    rsp,0x30
  401a03:	pop    rbx
  401a04:	pop    rsi
  401a05:	pop    rdi
  401a06:	pop    rbp
  401a07:	pop    r12
  401a09:	ret    
  401a0a:	nop    WORD PTR [rax+rax*1+0x0]
  401a10:	push   rbp
  401a11:	push   rdi
  401a12:	push   rsi
  401a13:	push   rbx
  401a14:	sub    rsp,0x38
  401a18:	mov    rbp,QWORD PTR [rip+0x10b61]        # 0x412580
  401a1f:	lea    rdi,[rsp+0x68]
  401a24:	test   rcx,rcx
  401a27:	mov    QWORD PTR [rsp+0x68],rdx
  401a2c:	mov    QWORD PTR [rsp+0x70],r8
  401a31:	mov    QWORD PTR [rsp+0x78],r9
  401a36:	mov    rsi,rcx
  401a39:	mov    QWORD PTR [rsp+0x28],rdi
  401a3e:	je     0x401a68
  401a40:	mov    rcx,rsi
  401a43:	add    rdi,0x8
  401a47:	call   0x40aad8
  401a4c:	mov    ebx,eax
  401a4e:	mov    rdx,rsi
  401a51:	mov    rcx,rbp
  401a54:	mov    r8,rbx
  401a57:	add    rbp,rbx
  401a5a:	call   0x40ab38
  401a5f:	mov    rsi,QWORD PTR [rdi-0x8]
  401a63:	test   rsi,rsi
  401a66:	jne    0x401a40
  401a68:	mov    BYTE PTR [rbp+0x0],0x0
  401a6c:	mov    rax,QWORD PTR [rip+0x10b0d]        # 0x412580
  401a73:	add    rsp,0x38
  401a77:	pop    rbx
  401a78:	pop    rsi
  401a79:	pop    rdi
  401a7a:	pop    rbp
  401a7b:	ret    
  401a7c:	nop    DWORD PTR [rax+0x0]
  401a80:	push   r12
  401a82:	push   rbp
  401a83:	push   rdi
  401a84:	push   rsi
  401a85:	push   rbx
  401a86:	sub    rsp,0x30
  401a8a:	lea    rdi,[rsp+0x68]
  401a8f:	test   rcx,rcx
  401a92:	mov    QWORD PTR [rsp+0x68],rdx
  401a97:	mov    QWORD PTR [rsp+0x70],r8
  401a9c:	mov    QWORD PTR [rsp+0x78],r9
  401aa1:	mov    rsi,rcx
  401aa4:	mov    QWORD PTR [rsp+0x28],rdi
  401aa9:	mov    rbx,rdi
  401aac:	je     0x401b1a
  401aae:	xor    ebp,ebp
  401ab0:	add    rbx,0x8
  401ab4:	call   0x40aad8
  401ab9:	mov    rcx,QWORD PTR [rbx-0x8]
  401abd:	add    ebp,eax
  401abf:	test   rcx,rcx
  401ac2:	jne    0x401ab0
  401ac4:	lea    ecx,[rbp+0x1]
  401ac7:	call   0x403510
  401acc:	mov    QWORD PTR [rsp+0x28],rdi
  401ad1:	mov    r12,rax
  401ad4:	mov    rbp,rax
  401ad7:	nop    WORD PTR [rax+rax*1+0x0]
  401ae0:	mov    rcx,rsi
  401ae3:	add    rdi,0x8
  401ae7:	call   0x40aad8
  401aec:	mov    ebx,eax
  401aee:	mov    rdx,rsi
  401af1:	mov    rcx,rbp
  401af4:	mov    r8,rbx
  401af7:	add    rbp,rbx
  401afa:	call   0x40ab38
  401aff:	mov    rsi,QWORD PTR [rdi-0x8]
  401b03:	test   rsi,rsi
  401b06:	jne    0x401ae0
  401b08:	mov    rax,r12
  401b0b:	mov    BYTE PTR [rbp+0x0],0x0
  401b0f:	add    rsp,0x30
  401b13:	pop    rbx
  401b14:	pop    rsi
  401b15:	pop    rdi
  401b16:	pop    rbp
  401b17:	pop    r12
  401b19:	ret    
  401b1a:	mov    ecx,0x1
  401b1f:	call   0x403510
  401b24:	mov    QWORD PTR [rsp+0x28],rdi
  401b29:	mov    r12,rax
  401b2c:	mov    rbp,rax
  401b2f:	jmp    0x401b08
  401b31:	nop    DWORD PTR [rax+rax*1+0x0]
  401b36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401b40:	push   r13
  401b42:	push   r12
  401b44:	push   rbp
  401b45:	push   rdi
  401b46:	push   rsi
  401b47:	push   rbx
  401b48:	sub    rsp,0x38
  401b4c:	lea    rbp,[rsp+0x80]
  401b54:	test   rdx,rdx
  401b57:	mov    r12,rcx
  401b5a:	mov    QWORD PTR [rsp+0x80],r8
  401b62:	mov    QWORD PTR [rsp+0x88],r9
  401b6a:	mov    rsi,rdx
  401b6d:	mov    QWORD PTR [rsp+0x28],rbp
  401b72:	mov    rbx,rbp
  401b75:	je     0x401bf8
  401b7b:	mov    rcx,rdx
  401b7e:	xor    edi,edi
  401b80:	add    rbx,0x8
  401b84:	call   0x40aad8
  401b89:	mov    rcx,QWORD PTR [rbx-0x8]
  401b8d:	add    edi,eax
  401b8f:	test   rcx,rcx
  401b92:	jne    0x401b80
  401b94:	lea    ecx,[rdi+0x1]
  401b97:	call   0x403510
  401b9c:	mov    QWORD PTR [rsp+0x28],rbp
  401ba1:	mov    r13,rax
  401ba4:	mov    rdi,rax
  401ba7:	nop    WORD PTR [rax+rax*1+0x0]
  401bb0:	mov    rcx,rsi
  401bb3:	add    rbp,0x8
  401bb7:	call   0x40aad8
  401bbc:	mov    ebx,eax
  401bbe:	mov    rdx,rsi
  401bc1:	mov    rcx,rdi
  401bc4:	mov    r8,rbx
  401bc7:	add    rdi,rbx
  401bca:	call   0x40ab38
  401bcf:	mov    rsi,QWORD PTR [rbp-0x8]
  401bd3:	test   rsi,rsi
  401bd6:	jne    0x401bb0
  401bd8:	test   r12,r12
  401bdb:	mov    BYTE PTR [rdi],0x0
  401bde:	je     0x401be8
  401be0:	mov    rcx,r12
  401be3:	call   0x40ab60
  401be8:	mov    rax,r13
  401beb:	add    rsp,0x38
  401bef:	pop    rbx
  401bf0:	pop    rsi
  401bf1:	pop    rdi
  401bf2:	pop    rbp
  401bf3:	pop    r12
  401bf5:	pop    r13
  401bf7:	ret    
  401bf8:	mov    ecx,0x1
  401bfd:	call   0x403510
  401c02:	mov    QWORD PTR [rsp+0x28],rbp
  401c07:	mov    r13,rax
  401c0a:	mov    rdi,rax
  401c0d:	jmp    0x401bd8
  401c0f:	nop
  401c10:	push   rsi
  401c11:	push   rbx
  401c12:	sub    rsp,0x28
  401c16:	test   rcx,rcx
  401c19:	je     0x401c50
  401c1b:	mov    rsi,rcx
  401c1e:	mov    rcx,QWORD PTR [rcx]
  401c21:	lea    rbx,[rsi+0x8]
  401c25:	test   rcx,rcx
  401c28:	je     0x401c42
  401c2a:	nop    WORD PTR [rax+rax*1+0x0]
  401c30:	add    rbx,0x8
  401c34:	call   0x40ab60
  401c39:	mov    rcx,QWORD PTR [rbx-0x8]
  401c3d:	test   rcx,rcx
  401c40:	jne    0x401c30
  401c42:	mov    rcx,rsi
  401c45:	add    rsp,0x28
  401c49:	pop    rbx
  401c4a:	pop    rsi
  401c4b:	jmp    0x40ab60
  401c50:	add    rsp,0x28
  401c54:	pop    rbx
  401c55:	pop    rsi
  401c56:	ret    
  401c57:	nop    WORD PTR [rax+rax*1+0x0]
  401c60:	push   rsi
  401c61:	push   rbx
  401c62:	sub    rsp,0x28
  401c66:	movsxd rbx,edx
  401c69:	mov    rsi,rcx
  401c6c:	lea    eax,[rbx+0x1]
  401c6f:	movsxd rcx,eax
  401c72:	call   0x40ab40
  401c77:	mov    r8,rbx
  401c7a:	mov    rdx,rsi
  401c7d:	mov    rcx,rax
  401c80:	call   0x40ab38
  401c85:	mov    BYTE PTR [rax+rbx*1],0x0
  401c89:	add    rsp,0x28
  401c8d:	pop    rbx
  401c8e:	pop    rsi
  401c8f:	ret    
  401c90:	push   r13
  401c92:	push   r12
  401c94:	push   rbp
  401c95:	push   rdi
  401c96:	push   rsi
  401c97:	push   rbx
  401c98:	sub    rsp,0x28
  401c9c:	movzx  ebx,BYTE PTR [rcx+0x1]
  401ca0:	mov    rsi,rdx
  401ca3:	xor    edx,edx
  401ca5:	mov    rdi,rcx
  401ca8:	mov    r8,rcx
  401cab:	cmp    bl,0x3a
  401cae:	jne    0x401cc7
  401cb0:	jmp    0x401e00
  401cb5:	cmp    eax,0x5c
  401cb8:	je     0x401d90
  401cbe:	cmp    eax,0x2f
  401cc1:	je     0x401d90
  401cc7:	movsx  eax,BYTE PTR [r8]
  401ccb:	add    r8,0x1
  401ccf:	test   eax,eax
  401cd1:	jne    0x401cb5
  401cd3:	lea    ecx,[rdx+0x2]
  401cd6:	movsxd rcx,ecx
  401cd9:	shl    rcx,0x3
  401cdd:	call   0x40ab40
  401ce2:	test   rax,rax
  401ce5:	mov    rbp,rax
  401ce8:	je     0x401e7d
  401cee:	xor    r12d,r12d
  401cf1:	cmp    bl,0x3a
  401cf4:	je     0x401e20
  401cfa:	movsxd rax,r12d
  401cfd:	lea    r13,[rax*8+0x8]
  401d05:	mov    rdx,rdi
  401d08:	jmp    0x401d27
  401d0a:	nop    WORD PTR [rax+rax*1+0x0]
  401d10:	cmp    r8d,0x5c
  401d14:	mov    rdx,rbx
  401d17:	je     0x401db5
  401d1d:	cmp    r8d,0x2f
  401d21:	je     0x401db5
  401d27:	lea    rbx,[rdx+0x1]
  401d2b:	movsx  r8d,BYTE PTR [rbx-0x1]
  401d30:	test   r8d,r8d
  401d33:	jne    0x401d10
  401d35:	sub    rdx,rdi
  401d38:	movsxd rax,r12d
  401d3b:	test   rdx,rdx
  401d3e:	jle    0x401d54
  401d40:	lea    rbx,[rbp+rax*8+0x0]
  401d45:	mov    rcx,rdi
  401d48:	add    r12d,0x1
  401d4c:	call   0x401c60
  401d51:	mov    QWORD PTR [rbx],rax
  401d54:	movsxd rax,r12d
  401d57:	cmp    QWORD PTR [rbp+rax*8-0x8],0x0
  401d5d:	mov    QWORD PTR [rbp+rax*8+0x0],0x0
  401d66:	je     0x401e84
  401d6c:	test   rsi,rsi
  401d6f:	je     0x401e55
  401d75:	mov    DWORD PTR [rsi],r12d
  401d78:	mov    rax,rbp
  401d7b:	add    rsp,0x28
  401d7f:	pop    rbx
  401d80:	pop    rsi
  401d81:	pop    rdi
  401d82:	pop    rbp
  401d83:	pop    r12
  401d85:	pop    r13
  401d87:	ret    
  401d88:	nop    DWORD PTR [rax+rax*1+0x0]
  401d90:	movsx  eax,BYTE PTR [r8]
  401d94:	add    edx,0x1
  401d97:	cmp    al,0x5c
  401d99:	jne    0x401dac
  401d9b:	nop    DWORD PTR [rax+rax*1+0x0]
  401da0:	add    r8,0x1
  401da4:	movsx  eax,BYTE PTR [r8]
  401da8:	cmp    al,0x5c
  401daa:	je     0x401da0
  401dac:	cmp    al,0x2f
  401dae:	je     0x401da0
  401db0:	jmp    0x401ccb
  401db5:	movzx  eax,BYTE PTR [rbx]
  401db8:	cmp    al,0x5c
  401dba:	je     0x401dc0
  401dbc:	cmp    al,0x2f
  401dbe:	jne    0x401dd1
  401dc0:	add    rbx,0x1
  401dc4:	movzx  edx,BYTE PTR [rbx]
  401dc7:	cmp    dl,0x5c
  401dca:	je     0x401dc0
  401dcc:	cmp    dl,0x2f
  401dcf:	je     0x401dc0
  401dd1:	mov    rdx,rbx
  401dd4:	mov    rcx,rdi
  401dd7:	add    r12d,0x1
  401ddb:	sub    rdx,rdi
  401dde:	call   0x401c60
  401de3:	test   rax,rax
  401de6:	mov    QWORD PTR [rbp+r13*1-0x8],rax
  401deb:	lea    rdx,[r13+0x8]
  401def:	je     0x401e65
  401df1:	mov    r13,rdx
  401df4:	mov    rdi,rbx
  401df7:	jmp    0x401d05
  401dfc:	nop    DWORD PTR [rax+0x0]
  401e00:	movzx  eax,BYTE PTR [rcx+0x2]
  401e04:	cmp    al,0x5c
  401e06:	je     0x401e10
  401e08:	cmp    al,0x2f
  401e0a:	jne    0x401cc7
  401e10:	lea    r8,[rdi+0x3]
  401e14:	mov    edx,0x1
  401e19:	jmp    0x401cc7
  401e1e:	xchg   ax,ax
  401e20:	movzx  eax,BYTE PTR [rdi+0x2]
  401e24:	cmp    al,0x5c
  401e26:	je     0x401e30
  401e28:	cmp    al,0x2f
  401e2a:	jne    0x401cfa
  401e30:	mov    edx,0x3
  401e35:	mov    rcx,rdi
  401e38:	call   0x401c60
  401e3d:	test   rax,rax
  401e40:	mov    QWORD PTR [rbp+0x0],rax
  401e44:	je     0x401e93
  401e46:	add    rdi,0x3
  401e4a:	mov    r12d,0x1
  401e50:	jmp    0x401cfa
  401e55:	mov    rax,rbp
  401e58:	add    rsp,0x28
  401e5c:	pop    rbx
  401e5d:	pop    rsi
  401e5e:	pop    rdi
  401e5f:	pop    rbp
  401e60:	pop    r12
  401e62:	pop    r13
  401e64:	ret    
  401e65:	mov    QWORD PTR [rbp+r13*1+0x0],0x0
  401e6e:	mov    rcx,rbp
  401e71:	call   0x401c10
  401e76:	xor    eax,eax
  401e78:	jmp    0x401d7b
  401e7d:	xor    eax,eax
  401e7f:	jmp    0x401d7b
  401e84:	mov    rcx,rbp
  401e87:	call   0x401c10
  401e8c:	xor    eax,eax
  401e8e:	jmp    0x401d7b
  401e93:	mov    rcx,rbp
  401e96:	call   0x40ab60
  401e9b:	xor    eax,eax
  401e9d:	jmp    0x401d7b
  401ea2:	nop    DWORD PTR [rax+0x0]
  401ea6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401eb0:	push   rbp
  401eb1:	push   r15
  401eb3:	push   r14
  401eb5:	push   r13
  401eb7:	push   r12
  401eb9:	push   rdi
  401eba:	push   rsi
  401ebb:	push   rbx
  401ebc:	sub    rsp,0x88
  401ec3:	lea    rbp,[rsp+0x80]
  401ecb:	test   rdx,rdx
  401ece:	mov    rdi,rdx
  401ed1:	mov    rbx,rcx
  401ed4:	sete   dl
  401ed7:	test   r8,r8
  401eda:	mov    r13,r8
  401edd:	sete   al
  401ee0:	mov    r14d,r9d
  401ee3:	or     dl,al
  401ee5:	jne    0x4021c0
  401eeb:	test   rcx,rcx
  401eee:	je     0x4021c0
  401ef4:	call   0x4036f0
  401ef9:	cmp    rax,rbx
  401efc:	mov    r12,rax
  401eff:	je     0x4021d0
  401f05:	test   r14d,r14d
  401f08:	mov    rcx,rbx
  401f0b:	jne    0x402040
  401f11:	call   0x40aa98
  401f16:	mov    rbx,rax
  401f19:	test   rbx,rbx
  401f1c:	je     0x4021c0
  401f22:	lea    rdx,[rbp-0x48]
  401f26:	mov    rcx,rbx
  401f29:	call   0x401c90
  401f2e:	mov    rcx,rbx
  401f31:	mov    r12,rax
  401f34:	call   0x40ab60
  401f39:	test   r12,r12
  401f3c:	je     0x4021c0
  401f42:	lea    rdx,[rbp-0x44]
  401f46:	mov    rcx,rdi
  401f49:	call   0x401c90
  401f4e:	test   rax,rax
  401f51:	mov    rsi,rax
  401f54:	je     0x4021b0
  401f5a:	mov    eax,DWORD PTR [rbp-0x48]
  401f5d:	lea    r14d,[rax-0x1]
  401f61:	cmp    r14d,DWORD PTR [rbp-0x44]
  401f65:	mov    DWORD PTR [rbp-0x48],r14d
  401f69:	jne    0x401fa6
  401f6b:	test   r14d,r14d
  401f6e:	jle    0x4021b0
  401f74:	xor    ebx,ebx
  401f76:	xor    edi,edi
  401f78:	jmp    0x401f8c
  401f7a:	nop    WORD PTR [rax+rax*1+0x0]
  401f80:	add    edi,0x1
  401f83:	add    rbx,0x8
  401f87:	cmp    edi,r14d
  401f8a:	je     0x401f9d
  401f8c:	mov    rdx,QWORD PTR [rsi+rbx*1]
  401f90:	mov    rcx,QWORD PTR [r12+rbx*1]
  401f94:	call   0x40aaf0
  401f99:	test   eax,eax
  401f9b:	je     0x401f80
  401f9d:	cmp    r14d,edi
  401fa0:	je     0x4021b0
  401fa6:	lea    rdx,[rbp-0x40]
  401faa:	mov    rcx,r13
  401fad:	call   0x401c90
  401fb2:	test   rax,rax
  401fb5:	mov    rdi,rax
  401fb8:	je     0x4021b0
  401fbe:	mov    eax,DWORD PTR [rbp-0x44]
  401fc1:	mov    ebx,DWORD PTR [rbp-0x40]
  401fc4:	mov    r13d,eax
  401fc7:	cmp    ebx,eax
  401fc9:	mov    DWORD PTR [rbp-0x58],eax
  401fcc:	cmovle r13d,ebx
  401fd0:	mov    DWORD PTR [rbp-0x60],ebx
  401fd3:	test   r13d,r13d
  401fd6:	jle    0x402358
  401fdc:	xor    r15d,r15d
  401fdf:	jmp    0x401fee
  401fe1:	lea    ebx,[r15+0x1]
  401fe5:	add    r15,0x1
  401fe9:	cmp    r13d,r15d
  401fec:	jle    0x402050
  401fee:	mov    rdx,QWORD PTR [rdi+r15*8]
  401ff2:	mov    rcx,QWORD PTR [rsi+r15*8]
  401ff6:	mov    ebx,r15d
  401ff9:	call   0x40aaf0
  401ffe:	test   eax,eax
  402000:	je     0x401fe1
  402002:	xor    r13d,r13d
  402005:	test   r15d,r15d
  402008:	jne    0x402050
  40200a:	mov    rcx,r12
  40200d:	call   0x401c10
  402012:	mov    rcx,rsi
  402015:	call   0x401c10
  40201a:	mov    rcx,rdi
  40201d:	call   0x401c10
  402022:	mov    rax,r13
  402025:	lea    rsp,[rbp+0x8]
  402029:	pop    rbx
  40202a:	pop    rsi
  40202b:	pop    rdi
  40202c:	pop    r12
  40202e:	pop    r13
  402030:	pop    r14
  402032:	pop    r15
  402034:	pop    rbp
  402035:	ret    
  402036:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402040:	call   0x403700
  402045:	mov    rbx,rax
  402048:	jmp    0x401f19
  40204d:	nop    DWORD PTR [rax]
  402050:	mov    eax,DWORD PTR [rbp-0x48]
  402053:	test   eax,eax
  402055:	jle    0x402329
  40205b:	sub    eax,0x1
  40205e:	mov    r14,r12
  402061:	xor    r13d,r13d
  402064:	lea    r15,[r12+rax*8+0x8]
  402069:	nop    DWORD PTR [rax+0x0]
  402070:	mov    rcx,QWORD PTR [r14]
  402073:	add    r14,0x8
  402077:	call   0x40aad8
  40207c:	add    r13d,eax
  40207f:	cmp    r14,r15
  402082:	jne    0x402070
  402084:	mov    eax,DWORD PTR [rbp-0x58]
  402087:	mov    r14d,DWORD PTR [rbp-0x60]
  40208b:	sub    eax,ebx
  40208d:	lea    eax,[rax+rax*2]
  402090:	add    r13d,eax
  402093:	cmp    r14d,ebx
  402096:	jle    0x4020c4
  402098:	sub    r14d,0x1
  40209c:	movsxd rax,ebx
  40209f:	sub    r14d,ebx
  4020a2:	lea    r15,[rdi+rax*8]
  4020a6:	lea    rax,[rax+r14*1+0x1]
  4020ab:	lea    r14,[rdi+rax*8]
  4020af:	nop
  4020b0:	mov    rcx,QWORD PTR [r15]
  4020b3:	add    r15,0x8
  4020b7:	call   0x40aad8
  4020bc:	add    r13d,eax
  4020bf:	cmp    r15,r14
  4020c2:	jne    0x4020b0
  4020c4:	add    r13d,0x1
  4020c8:	movsxd rcx,r13d
  4020cb:	call   0x40ab40
  4020d0:	test   rax,rax
  4020d3:	mov    r13,rax
  4020d6:	je     0x40200a
  4020dc:	mov    BYTE PTR [rax],0x0
  4020df:	mov    eax,DWORD PTR [rbp-0x48]
  4020e2:	test   eax,eax
  4020e4:	jle    0x402105
  4020e6:	sub    eax,0x1
  4020e9:	mov    r14,r12
  4020ec:	lea    r15,[r12+rax*8+0x8]
  4020f1:	mov    rdx,QWORD PTR [r14]
  4020f4:	mov    rcx,r13
  4020f7:	add    r14,0x8
  4020fb:	call   0x40ab00
  402100:	cmp    r14,r15
  402103:	jne    0x4020f1
  402105:	mov    rax,r13
  402108:	mov    ecx,DWORD PTR [rax]
  40210a:	add    rax,0x4
  40210e:	lea    edx,[rcx-0x1010101]
  402114:	not    ecx
  402116:	and    edx,ecx
  402118:	and    edx,0x80808080
  40211e:	je     0x402108
  402120:	mov    ecx,edx
  402122:	shr    ecx,0x10
  402125:	test   edx,0x8080
  40212b:	cmove  edx,ecx
  40212e:	lea    rcx,[rax+0x2]
  402132:	cmove  rax,rcx
  402136:	add    dl,dl
  402138:	mov    edx,DWORD PTR [rbp-0x44]
  40213b:	sbb    rax,0x3
  40213f:	cmp    ebx,edx
  402141:	jge    0x402360
  402147:	sub    edx,0x1
  40214a:	sub    edx,ebx
  40214c:	lea    rdx,[rdx+rdx*2+0x3]
  402151:	add    rdx,rax
  402154:	mov    ecx,0x2e2e
  402159:	mov    BYTE PTR [rax+0x2],0x0
  40215d:	add    rax,0x3
  402161:	mov    WORD PTR [rax-0x3],cx
  402165:	cmp    rax,rdx
  402168:	mov    BYTE PTR [rax-0x1],0x2f
  40216c:	jne    0x402154
  40216e:	mov    eax,DWORD PTR [rbp-0x40]
  402171:	mov    BYTE PTR [rdx],0x0
  402174:	cmp    ebx,eax
  402176:	jge    0x40200a
  40217c:	sub    eax,0x1
  40217f:	movsxd rdx,ebx
  402182:	sub    eax,ebx
  402184:	lea    r14,[rdi+rdx*8]
  402188:	lea    rax,[rdx+rax*1+0x1]
  40218d:	lea    rbx,[rdi+rax*8]
  402191:	mov    rdx,QWORD PTR [r14]
  402194:	mov    rcx,r13
  402197:	add    r14,0x8
  40219b:	call   0x40ab00
  4021a0:	cmp    r14,rbx
  4021a3:	jne    0x402191
  4021a5:	jmp    0x40200a
  4021aa:	nop    WORD PTR [rax+rax*1+0x0]
  4021b0:	xor    r13d,r13d
  4021b3:	xor    edi,edi
  4021b5:	jmp    0x40200a
  4021ba:	nop    WORD PTR [rax+rax*1+0x0]
  4021c0:	xor    eax,eax
  4021c2:	jmp    0x402025
  4021c7:	nop    WORD PTR [rax+rax*1+0x0]
  4021d0:	lea    rcx,[rip+0xb189]        # 0x40d360
  4021d7:	call   0x40ab50
  4021dc:	test   rax,rax
  4021df:	je     0x401f05
  4021e5:	mov    rcx,rax
  4021e8:	mov    QWORD PTR [rbp-0x58],rax
  4021ec:	call   0x40aad8
  4021f1:	lea    rbx,[rax+0x1]
  4021f5:	mov    eax,0x2
  4021fa:	mov    rcx,r12
  4021fd:	cmp    rbx,0x1
  402201:	cmovbe rbx,rax
  402205:	call   0x40aad8
  40220a:	lea    rax,[rbx+rax*1+0x23]
  40220f:	and    rax,0xfffffffffffffff0
  402213:	call   0x405d90
  402218:	mov    rdx,QWORD PTR [rbp-0x58]
  40221c:	sub    rsp,rax
  40221f:	lea    rax,[rbp-0x40]
  402223:	lea    rsi,[rsp+0x20]
  402228:	mov    r15,rdx
  40222b:	mov    QWORD PTR [rbp-0x60],rax
  40222f:	mov    rbx,rsi
  402232:	jmp    0x402241
  402234:	cmp    r8b,0x3b
  402238:	lea    r10,[r15+0x1]
  40223c:	je     0x40224a
  40223e:	mov    r15,r10
  402241:	movzx  r8d,BYTE PTR [r15]
  402245:	test   r8b,r8b
  402248:	jne    0x402234
  40224a:	cmp    r15,rdx
  40224d:	je     0x402340
  402253:	mov    r10,r15
  402256:	mov    rcx,rsi
  402259:	sub    r10,rdx
  40225c:	mov    r8,r10
  40225f:	mov    QWORD PTR [rbp-0x58],r10
  402263:	call   0x40ab38
  402268:	movzx  eax,BYTE PTR [r15-0x1]
  40226d:	mov    r10,QWORD PTR [rbp-0x58]
  402271:	cmp    al,0x5c
  402273:	je     0x402331
  402279:	cmp    al,0x2f
  40227b:	je     0x402331
  402281:	mov    BYTE PTR [rsi+r10*1],0x2f
  402286:	mov    BYTE PTR [rsi+r10*1+0x1],0x0
  40228c:	mov    rdx,r12
  40228f:	mov    rcx,rsi
  402292:	call   0x40ab00
  402297:	xor    edx,edx
  402299:	mov    rcx,rsi
  40229c:	call   QWORD PTR [rip+0x11286]        # 0x413528
  4022a2:	test   eax,eax
  4022a4:	je     0x4022f4
  4022a6:	mov    rdx,rsi
  4022a9:	mov    ecx,DWORD PTR [rdx]
  4022ab:	add    rdx,0x4
  4022af:	lea    eax,[rcx-0x1010101]
  4022b5:	not    ecx
  4022b7:	and    eax,ecx
  4022b9:	and    eax,0x80808080
  4022be:	je     0x4022a9
  4022c0:	mov    ecx,eax
  4022c2:	shr    ecx,0x10
  4022c5:	test   eax,0x8080
  4022ca:	cmove  eax,ecx
  4022cd:	lea    rcx,[rdx+0x2]
  4022d1:	cmove  rdx,rcx
  4022d5:	add    al,al
  4022d7:	mov    rcx,rsi
  4022da:	sbb    rdx,0x3
  4022de:	mov    DWORD PTR [rdx],0x6578652e
  4022e4:	mov    BYTE PTR [rdx+0x4],0x0
  4022e8:	xor    edx,edx
  4022ea:	call   QWORD PTR [rip+0x11238]        # 0x413528
  4022f0:	test   eax,eax
  4022f2:	jne    0x402317
  4022f4:	mov    rdx,QWORD PTR [rbp-0x60]
  4022f8:	mov    rcx,rsi
  4022fb:	call   QWORD PTR [rip+0x1139f]        # 0x4136a0
  402301:	test   eax,eax
  402303:	js     0x402317
  402305:	movzx  eax,WORD PTR [rbp-0x3a]
  402309:	and    ax,0xf000
  40230d:	cmp    ax,0x8000
  402311:	je     0x401f05
  402317:	cmp    BYTE PTR [r15],0x0
  40231b:	je     0x402350
  40231d:	lea    r10,[r15+0x1]
  402321:	mov    rdx,r10
  402324:	jmp    0x40223e
  402329:	xor    r13d,r13d
  40232c:	jmp    0x402084
  402331:	mov    BYTE PTR [rsi+r10*1],0x0
  402336:	jmp    0x40228c
  40233b:	nop    DWORD PTR [rax+rax*1+0x0]
  402340:	mov    BYTE PTR [rsi],0x2e
  402343:	mov    BYTE PTR [rsi+0x1],0x2f
  402347:	mov    BYTE PTR [rsi+0x2],0x0
  40234b:	jmp    0x40228c
  402350:	mov    rbx,r12
  402353:	jmp    0x401f05
  402358:	xor    r13d,r13d
  40235b:	jmp    0x40200a
  402360:	mov    rdx,rax
  402363:	jmp    0x40216e
  402368:	nop    DWORD PTR [rax+rax*1+0x0]
  402370:	mov    r9d,0x1
  402376:	jmp    0x401eb0
  40237b:	nop    DWORD PTR [rax+rax*1+0x0]
  402380:	xor    r9d,r9d
  402383:	jmp    0x401eb0
  402388:	nop
  402389:	nop
  40238a:	nop
  40238b:	nop
  40238c:	nop
  40238d:	nop
  40238e:	nop
  40238f:	nop
  402390:	push   r12
  402392:	push   rbp
  402393:	push   rdi
  402394:	push   rsi
  402395:	push   rbx
  402396:	sub    rsp,0x40
  40239a:	mov    rdi,QWORD PTR [rsp+0xa8]
  4023a2:	mov    esi,ecx
  4023a4:	mov    rbp,rdx
  4023a7:	xor    ecx,ecx
  4023a9:	mov    rdx,r9
  4023ac:	mov    r12,r8
  4023af:	xor    r8d,r8d
  4023b2:	call   0x403130
  4023b7:	mov    rbx,rax
  4023ba:	mov    rax,QWORD PTR [rsp+0x98]
  4023c2:	mov    edx,esi
  4023c4:	mov    QWORD PTR [rsp+0x30],rdi
  4023c9:	mov    r9,r12
  4023cc:	mov    r8,rbp
  4023cf:	mov    rcx,rbx
  4023d2:	mov    QWORD PTR [rsp+0x28],rax
  4023d7:	mov    rax,QWORD PTR [rsp+0x90]
  4023df:	mov    QWORD PTR [rsp+0x20],rax
  4023e4:	call   0x403fd0
  4023e9:	test   rax,rax
  4023ec:	mov    rsi,rax
  4023ef:	je     0x402410
  4023f1:	mov    rcx,rbx
  4023f4:	call   0x4043b0
  4023f9:	mov    rax,rsi
  4023fc:	add    rsp,0x40
  402400:	pop    rbx
  402401:	pop    rsi
  402402:	pop    rdi
  402403:	pop    rbp
  402404:	pop    r12
  402406:	ret    
  402407:	nop    WORD PTR [rax+rax*1+0x0]
  402410:	mov    r8,QWORD PTR [rsp+0xa0]
  402418:	mov    edx,0x1
  40241d:	mov    rcx,rbx
  402420:	call   0x4042a0
  402425:	test   eax,eax
  402427:	jne    0x4023f1
  402429:	mov    DWORD PTR [rdi],0x0
  40242f:	lea    rsi,[rip+0xaf3a]        # 0x40d370
  402436:	jmp    0x4023f1
  402438:	nop
  402439:	nop
  40243a:	nop
  40243b:	nop
  40243c:	nop
  40243d:	nop
  40243e:	nop
  40243f:	nop
  402440:	push   rsi
  402441:	push   rbx
  402442:	sub    rsp,0x28
  402446:	mov    ebx,edx
  402448:	mov    esi,r8d
  40244b:	mov    ecx,edx
  40244d:	call   QWORD PTR [rip+0x11115]        # 0x413568
  402453:	cmp    rax,0xffffffffffffffff
  402457:	je     0x402490
  402459:	xor    r8d,r8d
  40245c:	mov    edx,0x1
  402461:	mov    rcx,rax
  402464:	call   QWORD PTR [rip+0x11016]        # 0x413480
  40246a:	test   eax,eax
  40246c:	je     0x402490
  40246e:	lea    rax,[rip+0xaf4b]        # 0x40d3c0
  402475:	lea    rdx,[rip+0xaf47]        # 0x40d3c3
  40247c:	test   esi,esi
  40247e:	mov    ecx,ebx
  402480:	cmovne rdx,rax
  402484:	add    rsp,0x28
  402488:	pop    rbx
  402489:	pop    rsi
  40248a:	jmp    0x40aa80
  40248f:	nop
  402490:	xor    eax,eax
  402492:	add    rsp,0x28
  402496:	pop    rbx
  402497:	pop    rsi
  402498:	ret    
  402499:	nop    DWORD PTR [rax+0x0]
  4024a0:	push   rsi
  4024a1:	push   rbx
  4024a2:	sub    rsp,0x28
  4024a6:	mov    ebx,edx
  4024a8:	mov    esi,r8d
  4024ab:	mov    ecx,edx
  4024ad:	call   QWORD PTR [rip+0x110b5]        # 0x413568
  4024b3:	cmp    rax,0xffffffffffffffff
  4024b7:	je     0x4024f0
  4024b9:	xor    r8d,r8d
  4024bc:	mov    edx,0x1
  4024c1:	mov    rcx,rax
  4024c4:	call   QWORD PTR [rip+0x10fb6]        # 0x413480
  4024ca:	test   eax,eax
  4024cc:	je     0x4024f0
  4024ce:	lea    rax,[rip+0xaef0]        # 0x40d3c5
  4024d5:	lea    rdx,[rip+0xaeec]        # 0x40d3c8
  4024dc:	test   esi,esi
  4024de:	mov    ecx,ebx
  4024e0:	cmovne rdx,rax
  4024e4:	add    rsp,0x28
  4024e8:	pop    rbx
  4024e9:	pop    rsi
  4024ea:	jmp    0x40aa80
  4024ef:	nop
  4024f0:	xor    eax,eax
  4024f2:	add    rsp,0x28
  4024f6:	pop    rbx
  4024f7:	pop    rsi
  4024f8:	ret    
  4024f9:	nop    DWORD PTR [rax+0x0]
  402500:	mov    rax,QWORD PTR [rip+0x11089]        # 0x413590
  402507:	cmp    r8d,0x1
  40250b:	mov    rcx,rdx
  40250e:	mov    edx,0x100
  402513:	sbb    r8d,r8d
  402516:	and    r8d,0xffffc000
  40251d:	add    r8d,0x8080
  402524:	rex.W jmp rax
  402527:	nop    WORD PTR [rax+rax*1+0x0]
  402530:	push   rsi
  402531:	push   rbx
  402532:	sub    rsp,0x38
  402536:	test   r9,r9
  402539:	mov    rbx,rdx
  40253c:	mov    rsi,r8
  40253f:	je     0x402550
  402541:	mov    QWORD PTR [r9],0x0
  402548:	mov    QWORD PTR [r9+0x8],0x0
  402550:	mov    edx,0xffffffff
  402555:	mov    rcx,rbx
  402558:	call   QWORD PTR [rip+0x10f62]        # 0x4134c0
  40255e:	test   eax,eax
  402560:	jne    0x4025a4
  402562:	lea    rdx,[rsp+0x2c]
  402567:	mov    rcx,rbx
  40256a:	call   QWORD PTR [rip+0x10e70]        # 0x4133e0
  402570:	mov    rcx,rbx
  402573:	call   QWORD PTR [rip+0x10e27]        # 0x4133a0
  402579:	mov    eax,DWORD PTR [rsp+0x2c]
  40257d:	cmp    eax,0x3
  402580:	je     0x402595
  402582:	shl    eax,0x8
  402585:	and    eax,0xffff
  40258a:	mov    DWORD PTR [rsi],eax
  40258c:	xor    eax,eax
  40258e:	add    rsp,0x38
  402592:	pop    rbx
  402593:	pop    rsi
  402594:	ret    
  402595:	xor    eax,eax
  402597:	mov    DWORD PTR [rsi],0x16
  40259d:	add    rsp,0x38
  4025a1:	pop    rbx
  4025a2:	pop    rsi
  4025a3:	ret    
  4025a4:	mov    rcx,rbx
  4025a7:	lea    rsi,[rip+0xae1c]        # 0x40d3ca
  4025ae:	call   QWORD PTR [rip+0x10dec]        # 0x4133a0
  4025b4:	mov    rax,QWORD PTR [rsp+0x80]
  4025bc:	mov    DWORD PTR [rax],0xa
  4025c2:	mov    rax,QWORD PTR [rsp+0x78]
  4025c7:	mov    QWORD PTR [rax],rsi
  4025ca:	mov    rax,0xffffffffffffffff
  4025d1:	jmp    0x40258e
  4025d3:	nop    DWORD PTR [rax]
  4025d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4025e0:	mov    rax,QWORD PTR [rip+0x10f61]        # 0x413548
  4025e7:	mov    ecx,edx
  4025e9:	rex.W jmp rax
  4025ec:	nop    DWORD PTR [rax+0x0]
  4025f0:	push   r12
  4025f2:	push   rbp
  4025f3:	push   rdi
  4025f4:	push   rsi
  4025f5:	push   rbx
  4025f6:	sub    rsp,0x20
  4025fa:	mov    rbp,QWORD PTR [rip+0x11087]        # 0x413688
  402601:	mov    rdi,QWORD PTR [rcx]
  402604:	mov    rsi,QWORD PTR [rdx]
  402607:	nop    WORD PTR [rax+rax*1+0x0]
  402610:	add    rdi,0x1
  402614:	movsx  ecx,BYTE PTR [rdi-0x1]
  402618:	add    rsi,0x1
  40261c:	call   rbp
  40261e:	movsx  ecx,BYTE PTR [rsi-0x1]
  402622:	mov    ebx,eax
  402624:	mov    r12d,eax
  402627:	call   rbp
  402629:	cmp    bl,0x3d
  40262c:	movzx  edx,al
  40262f:	je     0x402645
  402631:	cmp    al,0x3d
  402633:	je     0x402661
  402635:	cmp    bl,al
  402637:	sete   cl
  40263a:	test   bl,bl
  40263c:	setne  al
  40263f:	test   cl,al
  402641:	jne    0x402610
  402643:	jmp    0x40264c
  402645:	xor    r12d,r12d
  402648:	cmp    al,0x3d
  40264a:	je     0x402653
  40264c:	movzx  r12d,r12b
  402650:	sub    r12d,edx
  402653:	mov    eax,r12d
  402656:	add    rsp,0x20
  40265a:	pop    rbx
  40265b:	pop    rsi
  40265c:	pop    rdi
  40265d:	pop    rbp
  40265e:	pop    r12
  402660:	ret    
  402661:	xor    edx,edx
  402663:	jmp    0x40264c
  402665:	nop
  402666:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402670:	push   rbp
  402671:	push   r15
  402673:	push   r14
  402675:	push   r13
  402677:	push   r12
  402679:	push   rdi
  40267a:	push   rsi
  40267b:	push   rbx
  40267c:	sub    rsp,0x68
  402680:	lea    rbp,[rsp+0x80]
  402688:	test   r9,r9
  40268b:	mov    r12,rcx
  40268e:	mov    edi,edx
  402690:	mov    r13,r8
  402693:	mov    rsi,r9
  402696:	je     0x402bc2
  40269c:	cmp    QWORD PTR [r9],0x0
  4026a0:	je     0x402bc2
  4026a6:	mov    r15d,0x1
  4026ac:	jmp    0x4026b3
  4026ae:	xchg   ax,ax
  4026b0:	mov    r15,rax
  4026b3:	lea    rax,[r15+0x1]
  4026b7:	mov    r14d,r15d
  4026ba:	lea    r8,[r15*8+0x0]
  4026c2:	cmp    QWORD PTR [rsi+rax*8-0x8],0x0
  4026c8:	jne    0x4026b0
  4026ca:	lea    rax,[r8+0x1e]
  4026ce:	and    rax,0xfffffffffffffff0
  4026d2:	call   0x405d90
  4026d7:	sub    rsp,rax
  4026da:	mov    rdx,rsi
  4026dd:	lea    rbx,[rsp+0x50]
  4026e2:	mov    rcx,rbx
  4026e5:	call   0x40ab38
  4026ea:	lea    r9,[rip+0xfffffffffffffeff]        # 0x4025f0
  4026f1:	mov    rdx,r15
  4026f4:	mov    r8d,0x8
  4026fa:	mov    rcx,rbx
  4026fd:	mov    r15,rsi
  402700:	call   0x40ab28
  402705:	lea    eax,[r14-0x1]
  402709:	mov    r14d,0x1
  40270f:	lea    rax,[rax*8+0x8]
  402717:	lea    rsi,[rsi+rax*1]
  40271b:	mov    QWORD PTR [rbp-0x30],rax
  40271f:	nop
  402720:	mov    rcx,QWORD PTR [r15]
  402723:	add    r15,0x8
  402727:	call   0x40aad8
  40272c:	cmp    r15,rsi
  40272f:	lea    r14d,[r14+rax*1+0x1]
  402734:	jne    0x402720
  402736:	movsxd rcx,r14d
  402739:	call   0x403510
  40273e:	mov    r15,QWORD PTR [rbp-0x30]
  402742:	mov    QWORD PTR [rbp-0x28],rax
  402746:	mov    rcx,rax
  402749:	add    r15,rbx
  40274c:	nop    DWORD PTR [rax+0x0]
  402750:	mov    rdx,QWORD PTR [rbx]
  402753:	add    rbx,0x8
  402757:	call   0x403610
  40275c:	cmp    rbx,r15
  40275f:	lea    rcx,[rax+0x1]
  402763:	jne    0x402750
  402765:	mov    BYTE PTR [rcx],0x0
  402768:	mov    rcx,r12
  40276b:	call   0x40aad8
  402770:	mov    edx,0x2f
  402775:	mov    rcx,r12
  402778:	mov    rbx,rax
  40277b:	call   0x40aaf8
  402780:	test   rax,rax
  402783:	je     0x402bcf
  402789:	lea    r14,[rip+0xac4e]        # 0x40d3de
  402790:	mov    rax,r14
  402793:	xor    ecx,ecx
  402795:	movzx  edx,BYTE PTR [rax]
  402798:	test   dl,dl
  40279a:	je     0x4027e4
  40279c:	nop    DWORD PTR [rax+0x0]
  4027a0:	cmp    dl,0x3b
  4027a3:	mov    r8,rax
  4027a6:	jne    0x4027b6
  4027a8:	jmp    0x402988
  4027ad:	nop    DWORD PTR [rax]
  4027b0:	cmp    r9b,0x3b
  4027b4:	je     0x4027c3
  4027b6:	add    r8,0x1
  4027ba:	movzx  r9d,BYTE PTR [r8]
  4027be:	test   r9b,r9b
  4027c1:	jne    0x4027b0
  4027c3:	mov    rdi,r8
  4027c6:	sub    rdi,rax
  4027c9:	cmp    rcx,rdi
  4027cc:	cmovb  rcx,rdi
  4027d0:	cmp    r9b,0x3b
  4027d4:	je     0x402988
  4027da:	mov    rax,r8
  4027dd:	movzx  edx,BYTE PTR [rax]
  4027e0:	test   dl,dl
  4027e2:	jne    0x4027a0
  4027e4:	lea    rcx,[rcx+rbx*1+0x6]
  4027e9:	call   0x403510
  4027ee:	mov    rbx,rax
  4027f1:	movzx  eax,BYTE PTR [r14]
  4027f5:	mov    r15,QWORD PTR [rip+0x10bac]        # 0x4133a8
  4027fc:	test   al,al
  4027fe:	je     0x402bb0
  402804:	cmp    al,0x3b
  402806:	mov    rsi,r14
  402809:	jne    0x402814
  40280b:	jmp    0x402bb0
  402810:	cmp    al,0x3b
  402812:	je     0x40281f
  402814:	add    rsi,0x1
  402818:	movzx  eax,BYTE PTR [rsi]
  40281b:	test   al,al
  40281d:	jne    0x402810
  40281f:	mov    rdi,rsi
  402822:	mov    rcx,rbx
  402825:	mov    rdx,r14
  402828:	sub    rdi,r14
  40282b:	mov    r8,rdi
  40282e:	call   0x40ab38
  402833:	lea    r9,[rbx+rdi*1]
  402837:	cmp    rsi,r14
  40283a:	mov    rcx,r9
  40283d:	je     0x402847
  40283f:	add    rcx,0x1
  402843:	mov    BYTE PTR [r9],0x5c
  402847:	mov    rdx,r12
  40284a:	mov    r14,rbx
  40284d:	call   0x40aae8
  402852:	xor    eax,eax
  402854:	cmp    BYTE PTR [rsi],0x3b
  402857:	sete   al
  40285a:	add    rsi,rax
  40285d:	movzx  eax,BYTE PTR [rbx]
  402860:	test   al,al
  402862:	jne    0x40287c
  402864:	jmp    0x402890
  402866:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402870:	add    r14,0x1
  402874:	movzx  eax,BYTE PTR [r14]
  402878:	test   al,al
  40287a:	je     0x402890
  40287c:	cmp    al,0x2f
  40287e:	jne    0x402870
  402880:	mov    BYTE PTR [r14],0x5c
  402884:	add    r14,0x1
  402888:	movzx  eax,BYTE PTR [r14]
  40288c:	test   al,al
  40288e:	jne    0x40287c
  402890:	lea    rdi,[rip+0xab89]        # 0x40d420
  402897:	lea    rdx,[rip+0xab41]        # 0x40d3df
  40289e:	jmp    0x4028b0
  4028a0:	add    rdi,0x8
  4028a4:	mov    rdx,QWORD PTR [rdi]
  4028a7:	test   rdx,rdx
  4028aa:	je     0x402b98
  4028b0:	mov    rcx,rbx
  4028b3:	mov    BYTE PTR [r14],0x0
  4028b7:	call   0x40ab00
  4028bc:	xor    r9d,r9d
  4028bf:	mov    QWORD PTR [rsp+0x30],0x0
  4028c8:	mov    DWORD PTR [rsp+0x28],0x80
  4028d0:	mov    DWORD PTR [rsp+0x20],0x3
  4028d8:	mov    r8d,0x3
  4028de:	mov    edx,0x80000000
  4028e3:	mov    rcx,rbx
  4028e6:	call   r15
  4028e9:	cmp    rax,0xffffffffffffffff
  4028ed:	je     0x4028a0
  4028ef:	mov    rcx,rax
  4028f2:	mov    r12,QWORD PTR [rip+0x10aa7]        # 0x4133a0
  4028f9:	call   r12
  4028fc:	mov    r14,QWORD PTR [r13+0x0]
  402900:	test   r14,r14
  402903:	je     0x402c10
  402909:	lea    r15,[r13+0x8]
  40290d:	xor    ecx,ecx
  40290f:	nop
  402910:	movzx  edx,BYTE PTR [r14]
  402914:	test   dl,dl
  402916:	je     0x402bbb
  40291c:	lea    r8,[r14-0x1]
  402920:	mov    r11d,0xffffffff
  402926:	xor    r9d,r9d
  402929:	jmp    0x402948
  40292b:	nop    DWORD PTR [rax+rax*1+0x0]
  402930:	movzx  edx,BYTE PTR [r8+0x2]
  402935:	lea    rax,[r9+0x1]
  402939:	add    r11d,0x1
  40293d:	add    r8,0x1
  402941:	mov    r9,rax
  402944:	test   dl,dl
  402946:	je     0x4029a0
  402948:	cmp    dl,0x22
  40294b:	movsxd r10,r9d
  40294e:	jne    0x402930
  402950:	cmp    r11d,0xffffffff
  402954:	je     0x402982
  402956:	cmp    BYTE PTR [r8],0x5c
  40295a:	jne    0x402982
  40295c:	lea    rdx,[rcx+0x1]
  402960:	mov    ecx,r11d
  402963:	mov    rax,r8
  402966:	add    rcx,rdx
  402969:	jmp    0x40297d
  40296b:	nop    DWORD PTR [rax+rax*1+0x0]
  402970:	sub    rax,0x1
  402974:	cmp    BYTE PTR [rax],0x5c
  402977:	jne    0x402991
  402979:	add    rdx,0x1
  40297d:	cmp    rdx,rcx
  402980:	jne    0x402970
  402982:	add    rcx,0x1
  402986:	jmp    0x402930
  402988:	add    r8,0x1
  40298c:	jmp    0x4027da
  402991:	mov    rcx,rdx
  402994:	add    rcx,0x1
  402998:	jmp    0x402930
  40299a:	nop    WORD PTR [rax+rax*1+0x0]
  4029a0:	cmp    BYTE PTR [r14+r10*1],0x5c
  4029a5:	jne    0x4029d8
  4029a7:	lea    rdx,[rcx+0x1]
  4029ab:	lea    r8,[r14+r10*1-0x1]
  4029b0:	lea    rcx,[rdx+r10*1]
  4029b4:	jmp    0x4029d3
  4029b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4029c0:	sub    r8,0x1
  4029c4:	cmp    BYTE PTR [r8+0x1],0x5c
  4029c9:	jne    0x402b90
  4029cf:	add    rdx,0x1
  4029d3:	cmp    rdx,rcx
  4029d6:	jne    0x4029c0
  4029d8:	add    r15,0x8
  4029dc:	mov    r14,QWORD PTR [r15-0x8]
  4029e0:	lea    rcx,[rcx+rax*1+0x3]
  4029e5:	test   r14,r14
  4029e8:	jne    0x402910
  4029ee:	call   0x403510
  4029f3:	mov    r11,QWORD PTR [r13+0x0]
  4029f7:	test   r11,r11
  4029fa:	je     0x402c24
  402a00:	add    r13,0x8
  402a04:	mov    rcx,rax
  402a07:	nop    WORD PTR [rax+rax*1+0x0]
  402a10:	mov    BYTE PTR [rcx],0x22
  402a13:	movzx  r10d,BYTE PTR [r11]
  402a17:	lea    r8,[rcx+0x1]
  402a1b:	test   r10b,r10b
  402a1e:	je     0x402b82
  402a24:	lea    rcx,[r11-0x1]
  402a28:	mov    r14d,0xffffffff
  402a2e:	jmp    0x402a4d
  402a30:	movzx  r10d,BYTE PTR [rcx+0x1]
  402a35:	add    rcx,0x1
  402a39:	lea    r8,[r9+0x1]
  402a3d:	mov    r14d,edx
  402a40:	mov    BYTE PTR [r9],r10b
  402a43:	movzx  r10d,BYTE PTR [rcx+0x1]
  402a48:	test   r10b,r10b
  402a4b:	je     0x402aa0
  402a4d:	cmp    r10b,0x22
  402a51:	lea    edx,[r14+0x1]
  402a55:	mov    r9,r8
  402a58:	jne    0x402a30
  402a5a:	cmp    r14d,0xffffffff
  402a5e:	je     0x402a92
  402a60:	cmp    BYTE PTR [rcx],0x5c
  402a63:	jne    0x402a92
  402a65:	lea    r10,[r8+r14*1+0x1]
  402a6a:	mov    r9,rcx
  402a6d:	jmp    0x402a7a
  402a6f:	nop
  402a70:	sub    r9,0x1
  402a74:	cmp    BYTE PTR [r9],0x5c
  402a78:	jne    0x402a92
  402a7a:	add    r8,0x1
  402a7e:	mov    BYTE PTR [r8-0x1],0x5c
  402a83:	cmp    r8,r10
  402a86:	jne    0x402a70
  402a88:	lea    r9,[r10+0x1]
  402a8c:	mov    BYTE PTR [r10],0x5c
  402a90:	jmp    0x402a30
  402a92:	mov    r10,r8
  402a95:	lea    r9,[r10+0x1]
  402a99:	mov    BYTE PTR [r10],0x5c
  402a9d:	jmp    0x402a30
  402a9f:	nop
  402aa0:	cmp    edx,0xffffffff
  402aa3:	je     0x402b82
  402aa9:	movsxd rcx,edx
  402aac:	cmp    BYTE PTR [r11+rcx*1],0x5c
  402ab1:	jne    0x402b82
  402ab7:	mov    edx,edx
  402ab9:	lea    rcx,[r11+rcx*1-0x1]
  402abe:	lea    rdx,[r8+rdx*1+0x1]
  402ac3:	jmp    0x402ad3
  402ac5:	sub    rcx,0x1
  402ac9:	cmp    BYTE PTR [rcx+0x1],0x5c
  402acd:	jne    0x402b82
  402ad3:	add    r8,0x1
  402ad7:	mov    BYTE PTR [r8-0x1],0x5c
  402adc:	cmp    r8,rdx
  402adf:	jne    0x402ac5
  402ae1:	add    r13,0x8
  402ae5:	mov    r11,QWORD PTR [r13-0x8]
  402ae9:	mov    BYTE PTR [rdx],0x22
  402aec:	lea    rcx,[rdx+0x2]
  402af0:	mov    BYTE PTR [rdx+0x1],0x20
  402af4:	test   r11,r11
  402af7:	jne    0x402a10
  402afd:	mov    rsi,QWORD PTR [rbp+0x60]
  402b01:	mov    rdx,QWORD PTR [rbp+0x58]
  402b05:	xor    r9d,r9d
  402b08:	mov    BYTE PTR [rcx-0x1],0x0
  402b0c:	xor    r8d,r8d
  402b0f:	mov    QWORD PTR [rsp+0x38],0x0
  402b18:	mov    DWORD PTR [rsp+0x20],0x1
  402b20:	mov    rcx,rbx
  402b23:	mov    QWORD PTR [rsp+0x48],rsi
  402b28:	mov    QWORD PTR [rsp+0x40],rdx
  402b2d:	mov    rsi,QWORD PTR [rbp-0x28]
  402b31:	mov    edx,DWORD PTR [rbp+0x50]
  402b34:	mov    QWORD PTR [rsp+0x30],rsi
  402b39:	mov    DWORD PTR [rsp+0x28],edx
  402b3d:	mov    rdx,rax
  402b40:	call   QWORD PTR [rip+0x1086a]        # 0x4133b0
  402b46:	test   eax,eax
  402b48:	je     0x402c4a
  402b4e:	mov    rax,QWORD PTR [rbp+0x60]
  402b52:	mov    rcx,QWORD PTR [rax+0x8]
  402b56:	call   r12
  402b59:	mov    rcx,rbx
  402b5c:	call   0x40ab60
  402b61:	mov    rcx,QWORD PTR [rbp-0x28]
  402b65:	call   0x40ab60
  402b6a:	mov    rax,QWORD PTR [rbp+0x60]
  402b6e:	mov    rax,QWORD PTR [rax]
  402b71:	lea    rsp,[rbp-0x18]
  402b75:	pop    rbx
  402b76:	pop    rsi
  402b77:	pop    rdi
  402b78:	pop    r12
  402b7a:	pop    r13
  402b7c:	pop    r14
  402b7e:	pop    r15
  402b80:	pop    rbp
  402b81:	ret    
  402b82:	mov    rdx,r8
  402b85:	jmp    0x402ae1
  402b8a:	nop    WORD PTR [rax+rax*1+0x0]
  402b90:	mov    rcx,rdx
  402b93:	jmp    0x4029d8
  402b98:	movzx  edx,BYTE PTR [rsi]
  402b9b:	test   dl,dl
  402b9d:	je     0x402c2c
  402ba3:	mov    eax,edx
  402ba5:	mov    r14,rsi
  402ba8:	test   al,al
  402baa:	jne    0x402804
  402bb0:	mov    rsi,r14
  402bb3:	mov    rcx,rbx
  402bb6:	jmp    0x402847
  402bbb:	xor    eax,eax
  402bbd:	jmp    0x4029d8
  402bc2:	mov    QWORD PTR [rbp-0x28],0x0
  402bca:	jmp    0x402768
  402bcf:	mov    edx,0x5c
  402bd4:	mov    rcx,r12
  402bd7:	call   0x40aaf8
  402bdc:	test   rax,rax
  402bdf:	jne    0x402789
  402be5:	test   edi,edi
  402be7:	je     0x402789
  402bed:	lea    rcx,[rip+0xa7f0]        # 0x40d3e4
  402bf4:	call   0x40ab50
  402bf9:	test   rax,rax
  402bfc:	mov    r14,rax
  402bff:	jne    0x402790
  402c05:	jmp    0x402789
  402c0a:	nop    WORD PTR [rax+rax*1+0x0]
  402c10:	xor    ecx,ecx
  402c12:	call   0x403510
  402c17:	mov    r11,QWORD PTR [r13+0x0]
  402c1b:	test   r11,r11
  402c1e:	jne    0x402a00
  402c24:	mov    rcx,rax
  402c27:	jmp    0x402afd
  402c2c:	mov    rcx,rbx
  402c2f:	mov    QWORD PTR [rbp-0x30],rax
  402c33:	call   0x40ab60
  402c38:	mov    rcx,QWORD PTR [rbp-0x28]
  402c3c:	call   0x40ab60
  402c41:	mov    rax,QWORD PTR [rbp-0x30]
  402c45:	jmp    0x402b71
  402c4a:	mov    rcx,QWORD PTR [rbp-0x28]
  402c4e:	call   0x40ab60
  402c53:	mov    rcx,rbx
  402c56:	call   0x40ab60
  402c5b:	mov    rax,0xffffffffffffffff
  402c62:	jmp    0x402b71
  402c67:	nop    WORD PTR [rax+rax*1+0x0]
  402c70:	mov    rax,QWORD PTR [rip+0x10911]        # 0x413588
  402c77:	cmp    r8d,0x1
  402c7b:	mov    rcx,rdx
  402c7e:	mov    r8d,0x180
  402c84:	sbb    edx,edx
  402c86:	and    edx,0xffffc000
  402c8c:	add    edx,0x8301
  402c92:	rex.W jmp rax
  402c95:	nop
  402c96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402ca0:	mov    rax,QWORD PTR [rip+0x108e1]        # 0x413588
  402ca7:	cmp    r8d,0x1
  402cab:	mov    rcx,rdx
  402cae:	sbb    edx,edx
  402cb0:	and    edx,0xffffc000
  402cb6:	add    edx,0x8000
  402cbc:	rex.W jmp rax
  402cbf:	nop
  402cc0:	push   r15
  402cc2:	push   r14
  402cc4:	push   r13
  402cc6:	push   r12
  402cc8:	push   rbp
  402cc9:	push   rdi
  402cca:	push   rsi
  402ccb:	push   rbx
  402ccc:	sub    rsp,0x2a8
  402cd3:	mov    rbp,QWORD PTR [rip+0x10876]        # 0x413550
  402cda:	mov    ecx,DWORD PTR [rsp+0x318]
  402ce1:	mov    ebx,edx
  402ce3:	mov    esi,edx
  402ce5:	mov    QWORD PTR [rsp+0x300],r8
  402ced:	shr    ebx,0x3
  402cf0:	mov    QWORD PTR [rsp+0x308],r9
  402cf8:	xor    ebx,0x1
  402cfb:	and    ebx,0x1
  402cfe:	call   rbp
  402d00:	mov    ecx,DWORD PTR [rsp+0x320]
  402d07:	mov    DWORD PTR [rsp+0x40],eax
  402d0b:	call   rbp
  402d0d:	test   bl,bl
  402d0f:	mov    DWORD PTR [rsp+0x44],eax
  402d13:	jne    0x402f50
  402d19:	mov    rbp,QWORD PTR [rip+0x10848]        # 0x413568
  402d20:	mov    ecx,DWORD PTR [rsp+0x40]
  402d24:	call   rbp
  402d26:	mov    ecx,DWORD PTR [rsp+0x44]
  402d2a:	mov    r15,rax
  402d2d:	call   rbp
  402d2f:	mov    rbp,rax
  402d32:	mov    r14,rax
  402d35:	mov    DWORD PTR [rsp+0xf0],0x94
  402d40:	lea    rcx,[rsp+0xf0]
  402d48:	xor    r12d,r12d
  402d4b:	call   QWORD PTR [rip+0x106df]        # 0x413430
  402d51:	cmp    DWORD PTR [rsp+0x100],0x1
  402d59:	je     0x402da7
  402d5b:	xor    r9d,r9d
  402d5e:	mov    QWORD PTR [rsp+0x30],0x0
  402d67:	mov    DWORD PTR [rsp+0x28],0x80
  402d6f:	mov    DWORD PTR [rsp+0x20],0x3
  402d77:	mov    r8d,0x2
  402d7d:	mov    edx,0x40000000
  402d82:	lea    rcx,[rip+0xa660]        # 0x40d3e9
  402d89:	mov    r12d,0x8000000
  402d8f:	call   QWORD PTR [rip+0x10613]        # 0x4133a8
  402d95:	cmp    rax,0xffffffffffffffff
  402d99:	je     0x402da7
  402d9b:	xor    r12d,r12d
  402d9e:	mov    rcx,rax
  402da1:	call   QWORD PTR [rip+0x105f9]        # 0x4133a0
  402da7:	lea    r13,[rsp+0x80]
  402daf:	xor    eax,eax
  402db1:	mov    ecx,0xd
  402db6:	shr    esi,1
  402db8:	mov    r9,QWORD PTR [rsp+0x310]
  402dc0:	mov    r8,QWORD PTR [rsp+0x308]
  402dc8:	mov    rdi,r13
  402dcb:	mov    edx,esi
  402dcd:	rep stos QWORD PTR es:[rdi],rax
  402dd0:	mov    QWORD PTR [rsp+0xd0],r15
  402dd8:	mov    rcx,QWORD PTR [rsp+0x300]
  402de0:	lea    r15,[rsp+0x60]
  402de5:	and    edx,0x1
  402de8:	mov    QWORD PTR [rsp+0x28],r13
  402ded:	mov    DWORD PTR [rsp+0x20],r12d
  402df2:	mov    QWORD PTR [rsp+0x30],r15
  402df7:	mov    QWORD PTR [rsp+0xd8],r14
  402dff:	mov    QWORD PTR [rsp+0xe0],rbp
  402e07:	mov    DWORD PTR [rsp+0x80],0x68
  402e12:	mov    DWORD PTR [rsp+0xbc],0x100
  402e1d:	call   0x402670
  402e22:	cmp    rax,0xffffffffffffffff
  402e26:	mov    rbp,rax
  402e29:	mov    r14,QWORD PTR [rip+0x10718]        # 0x413548
  402e30:	je     0x402e90
  402e32:	mov    eax,DWORD PTR [rsp+0x318]
  402e39:	test   eax,eax
  402e3b:	jne    0x402f92
  402e41:	cmp    DWORD PTR [rsp+0x320],0x1
  402e49:	je     0x402e55
  402e4b:	mov    ecx,DWORD PTR [rsp+0x320]
  402e52:	call   r14
  402e55:	cmp    DWORD PTR [rsp+0x50],0x2
  402e5a:	je     0x402f20
  402e60:	test   bl,bl
  402e62:	je     0x402f20
  402e68:	mov    ecx,DWORD PTR [rsp+0x50]
  402e6c:	call   r14
  402e6f:	mov    ecx,DWORD PTR [rsp+0x40]
  402e73:	call   r14
  402e76:	mov    ecx,DWORD PTR [rsp+0x44]
  402e7a:	call   r14
  402e7d:	mov    ecx,DWORD PTR [rsp+0x328]
  402e84:	call   r14
  402e87:	jmp    0x402f36
  402e8c:	nop    DWORD PTR [rax+0x0]
  402e90:	mov    rax,QWORD PTR [rip+0x106c1]        # 0x413558
  402e97:	mov    QWORD PTR [rsp+0x58],rax
  402e9c:	call   rax
  402e9e:	mov    eax,DWORD PTR [rax]
  402ea0:	xor    edx,edx
  402ea2:	mov    rcx,QWORD PTR [rsp+0x300]
  402eaa:	mov    DWORD PTR [rsp+0x54],eax
  402eae:	call   QWORD PTR [rip+0x106d4]        # 0x413588
  402eb4:	test   eax,eax
  402eb6:	mov    esi,eax
  402eb8:	js     0x402ee9
  402eba:	lea    rax,[rsp+0x190]
  402ec2:	mov    r8d,0x108
  402ec8:	mov    ecx,esi
  402eca:	mov    rdx,rax
  402ecd:	mov    QWORD PTR [rsp+0x48],rax
  402ed2:	call   QWORD PTR [rip+0x106c0]        # 0x413598
  402ed8:	movsxd rdi,eax
  402edb:	mov    ecx,esi
  402edd:	call   r14
  402ee0:	cmp    edi,0x3
  402ee3:	jg     0x402fa1
  402ee9:	mov    rax,QWORD PTR [rsp+0x58]
  402eee:	call   rax
  402ef0:	mov    edi,DWORD PTR [rsp+0x54]
  402ef4:	mov    DWORD PTR [rax],edi
  402ef6:	mov    rax,QWORD PTR [rsp+0x340]
  402efe:	lea    rdi,[rip+0xa4ef]        # 0x40d3f4
  402f05:	mov    DWORD PTR [rax],0x2
  402f0b:	mov    rax,QWORD PTR [rsp+0x338]
  402f13:	mov    QWORD PTR [rax],rdi
  402f16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402f20:	mov    ecx,DWORD PTR [rsp+0x40]
  402f24:	call   r14
  402f27:	mov    ecx,DWORD PTR [rsp+0x44]
  402f2b:	call   r14
  402f2e:	test   bl,bl
  402f30:	jne    0x402e7d
  402f36:	mov    rax,rbp
  402f39:	add    rsp,0x2a8
  402f40:	pop    rbx
  402f41:	pop    rsi
  402f42:	pop    rdi
  402f43:	pop    rbp
  402f44:	pop    r12
  402f46:	pop    r13
  402f48:	pop    r14
  402f4a:	pop    r15
  402f4c:	ret    
  402f4d:	nop    DWORD PTR [rax]
  402f50:	mov    ecx,DWORD PTR [rsp+0x328]
  402f57:	call   rbp
  402f59:	mov    edi,eax
  402f5b:	mov    rbp,QWORD PTR [rip+0x10606]        # 0x413568
  402f62:	mov    ecx,DWORD PTR [rsp+0x40]
  402f66:	call   rbp
  402f68:	mov    ecx,DWORD PTR [rsp+0x44]
  402f6c:	mov    r15,rax
  402f6f:	call   rbp
  402f71:	mov    ecx,edi
  402f73:	mov    r14,rax
  402f76:	call   rbp
  402f78:	mov    rbp,rax
  402f7b:	mov    eax,DWORD PTR [rsp+0x328]
  402f82:	mov    DWORD PTR [rsp+0x328],edi
  402f89:	mov    DWORD PTR [rsp+0x50],eax
  402f8d:	jmp    0x402d35
  402f92:	mov    ecx,DWORD PTR [rsp+0x318]
  402f99:	call   r14
  402f9c:	jmp    0x402e41
  402fa1:	mov    rsi,QWORD PTR [rsp+0x48]
  402fa6:	mov    edx,0xa
  402fab:	mov    BYTE PTR [rsp+rdi*1+0x190],0x0
  402fb3:	mov    rcx,rsi
  402fb6:	call   0x40aaf8
  402fbb:	test   rax,rax
  402fbe:	je     0x402ee9
  402fc4:	lea    rdi,[rip+0xa426]        # 0x40d3f1
  402fcb:	mov    ecx,0x2
  402fd0:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  402fd2:	jne    0x402ee9
  402fd8:	nop    DWORD PTR [rax+rax*1+0x0]
  402fe0:	mov    BYTE PTR [rax],0x0
  402fe3:	sub    rax,0x1
  402fe7:	movzx  edx,BYTE PTR [rax]
  402fea:	mov    ecx,edx
  402fec:	and    ecx,0xfffffffb
  402fef:	cmp    cl,0x9
  402ff2:	je     0x402fe0
  402ff4:	cmp    dl,0x20
  402ff7:	je     0x402fe0
  402ff9:	movzx  eax,BYTE PTR [rsp+0x192]
  403001:	cmp    al,0x9
  403003:	je     0x4030f3
  403009:	cmp    al,0x20
  40300b:	mov    rdi,QWORD PTR [rsp+0x48]
  403010:	sete   al
  403013:	test   al,al
  403015:	lea    rsi,[rdi+0x2]
  403019:	jne    0x4030f3
  40301f:	mov    rax,rsi
  403022:	jmp    0x403027
  403024:	mov    BYTE PTR [rax],0x5c
  403027:	mov    edx,0x2f
  40302c:	mov    rcx,rax
  40302f:	call   0x40aaf8
  403034:	test   rax,rax
  403037:	jne    0x403024
  403039:	mov    rax,QWORD PTR [rsp+0x308]
  403041:	cmp    QWORD PTR [rax],0x0
  403045:	je     0x403111
  40304b:	nop    DWORD PTR [rax+rax*1+0x0]
  403050:	add    rax,0x8
  403054:	cmp    QWORD PTR [rax],0x0
  403058:	jne    0x403050
  40305a:	sub    rax,QWORD PTR [rsp+0x308]
  403062:	sar    rax,0x3
  403066:	lea    ecx,[rax+0x2]
  403069:	movsxd rcx,ecx
  40306c:	shl    rcx,0x3
  403070:	lea    r8,[rcx-0x8]
  403074:	mov    QWORD PTR [rsp+0x48],r8
  403079:	call   0x403510
  40307e:	mov    r8,QWORD PTR [rsp+0x48]
  403083:	mov    rdx,QWORD PTR [rsp+0x308]
  40308b:	lea    rcx,[rax+0x8]
  40308f:	mov    QWORD PTR [rax],rsi
  403092:	mov    rdi,rax
  403095:	call   0x40ab38
  40309a:	mov    rcx,rsi
  40309d:	mov    edx,0x5c
  4030a2:	call   0x40aac0
  4030a7:	mov    r9,QWORD PTR [rsp+0x310]
  4030af:	add    rax,0x1
  4030b3:	mov    r8,rdi
  4030b6:	mov    rcx,rax
  4030b9:	mov    edx,0x1
  4030be:	mov    QWORD PTR [rsp+0x30],r15
  4030c3:	cmove  rcx,rsi
  4030c7:	mov    QWORD PTR [rsp+0x28],r13
  4030cc:	mov    DWORD PTR [rsp+0x20],r12d
  4030d1:	call   0x402670
  4030d6:	mov    rcx,rdi
  4030d9:	mov    rsi,rax
  4030dc:	call   0x40ab60
  4030e1:	cmp    rsi,0xffffffffffffffff
  4030e5:	je     0x402ee9
  4030eb:	mov    rbp,rsi
  4030ee:	jmp    0x402e32
  4030f3:	mov    rsi,QWORD PTR [rsp+0x48]
  4030f8:	add    rsi,0x2
  4030fc:	add    rsi,0x1
  403100:	movzx  eax,BYTE PTR [rsi]
  403103:	cmp    al,0x9
  403105:	je     0x4030fc
  403107:	cmp    al,0x20
  403109:	jne    0x40301f
  40310f:	jmp    0x4030fc
  403111:	mov    r8d,0x8
  403117:	mov    ecx,0x10
  40311c:	jmp    0x403074
  403121:	nop    DWORD PTR [rax+rax*1+0x0]
  403126:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403130:	lea    r9,[rip+0xa349]        # 0x40d480
  403137:	jmp    0x403940
  40313c:	nop
  40313d:	nop
  40313e:	nop
  40313f:	nop
  403140:	push   rdi
  403141:	push   rsi
  403142:	push   rbx
  403143:	sub    rsp,0x20
  403147:	mov    edx,DWORD PTR [rip+0xdf9f]        # 0x4110ec
  40314d:	test   edx,edx
  40314f:	jne    0x40317d
  403151:	lea    rax,[rip+0xa468]        # 0x40d5c0
  403158:	nop    DWORD PTR [rax+rax*1+0x0]
  403160:	mov    ecx,DWORD PTR [rax]
  403162:	lea    r8d,[rcx+0x1]
  403166:	cmp    ecx,edx
  403168:	cmovge edx,r8d
  40316c:	add    rax,0x18
  403170:	cmp    QWORD PTR [rax+0x8],0x0
  403175:	jne    0x403160
  403177:	mov    DWORD PTR [rip+0xdf6f],edx        # 0x4110ec
  40317d:	cmp    QWORD PTR [rip+0xdf6b],0x0        # 0x4110f0
  403185:	je     0x403200
  403187:	cmp    QWORD PTR [rip+0xdf51],0x0        # 0x4110e0
  40318f:	je     0x4031a0
  403191:	add    rsp,0x20
  403195:	pop    rbx
  403196:	pop    rsi
  403197:	pop    rdi
  403198:	ret    
  403199:	nop    DWORD PTR [rax+0x0]
  4031a0:	mov    edi,DWORD PTR [rip+0xdf46]        # 0x4110ec
  4031a6:	lea    esi,[rdi*8+0x0]
  4031ad:	movsxd rsi,esi
  4031b0:	mov    rcx,rsi
  4031b3:	call   0x40ab40
  4031b8:	test   rax,rax
  4031bb:	mov    rbx,rax
  4031be:	mov    QWORD PTR [rip+0xdf1b],rax        # 0x4110e0
  4031c5:	je     0x403191
  4031c7:	xor    edx,edx
  4031c9:	mov    r8,rsi
  4031cc:	mov    rcx,rax
  4031cf:	call   0x40ab30
  4031d4:	lea    rdx,[rip+0xa3e5]        # 0x40d5c0
  4031db:	mov    DWORD PTR [rip+0xdf07],edi        # 0x4110e8
  4031e1:	movsxd r8,DWORD PTR [rdx]
  4031e4:	mov    r9,QWORD PTR [rdx+0x10]
  4031e8:	add    rdx,0x18
  4031ec:	cmp    QWORD PTR [rdx+0x8],0x0
  4031f1:	mov    QWORD PTR [rbx+r8*8],r9
  4031f5:	jne    0x4031e1
  4031f7:	jmp    0x403191
  4031f9:	nop    DWORD PTR [rax+0x0]
  403200:	mov    eax,DWORD PTR [rip+0xdee6]        # 0x4110ec
  403206:	lea    esi,[rax*8+0x0]
  40320d:	movsxd rsi,esi
  403210:	mov    rcx,rsi
  403213:	call   0x40ab40
  403218:	test   rax,rax
  40321b:	mov    rbx,rax
  40321e:	mov    QWORD PTR [rip+0xdecb],rax        # 0x4110f0
  403225:	je     0x403187
  40322b:	mov    r8,rsi
  40322e:	xor    edx,edx
  403230:	mov    rcx,rax
  403233:	call   0x40ab30
  403238:	lea    r8,[rip+0xa2c1]        # 0x40d500
  40323f:	lea    rdx,[rip+0xa37a]        # 0x40d5c0
  403246:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403250:	movsxd r9,DWORD PTR [rdx]
  403253:	add    rdx,0x18
  403257:	mov    QWORD PTR [rbx+r9*8],r8
  40325b:	mov    r8,QWORD PTR [rdx+0x8]
  40325f:	test   r8,r8
  403262:	jne    0x403250
  403264:	jmp    0x403187
  403269:	nop    DWORD PTR [rax+0x0]
  403270:	sub    rsp,0x28
  403274:	cmp    QWORD PTR [rip+0xde74],0x0        # 0x4110f0
  40327c:	je     0x4032a0
  40327e:	mov    eax,DWORD PTR [rip+0xde68]        # 0x4110ec
  403284:	cmp    DWORD PTR [rip+0xde5e],eax        # 0x4110e8
  40328a:	cmovge eax,DWORD PTR [rip+0xde57]        # 0x4110e8
  403291:	sub    eax,0x1
  403294:	add    rsp,0x28
  403298:	ret    
  403299:	nop    DWORD PTR [rax+0x0]
  4032a0:	call   0x403140
  4032a5:	jmp    0x40327e
  4032a7:	nop    WORD PTR [rax+rax*1+0x0]
  4032b0:	sub    rsp,0x38
  4032b4:	cmp    QWORD PTR [rip+0xde34],0x0        # 0x4110f0
  4032bc:	je     0x403320
  4032be:	test   ecx,ecx
  4032c0:	js     0x403312
  4032c2:	cmp    ecx,DWORD PTR [rip+0xde20]        # 0x4110e8
  4032c8:	jge    0x403312
  4032ca:	mov    rax,QWORD PTR [rip+0xde0f]        # 0x4110e0
  4032d1:	test   rax,rax
  4032d4:	je     0x4032f0
  4032d6:	movsxd rdx,ecx
  4032d9:	mov    rax,QWORD PTR [rax+rdx*8]
  4032dd:	test   rax,rax
  4032e0:	je     0x4032f0
  4032e2:	add    rsp,0x38
  4032e6:	ret    
  4032e7:	nop    WORD PTR [rax+rax*1+0x0]
  4032f0:	mov    r8d,ecx
  4032f3:	lea    rdx,[rip+0xa20d]        # 0x40d507
  4032fa:	lea    rcx,[rip+0xddbf]        # 0x4110c0
  403301:	call   0x40ab08
  403306:	lea    rax,[rip+0xddb3]        # 0x4110c0
  40330d:	add    rsp,0x38
  403311:	ret    
  403312:	xor    eax,eax
  403314:	add    rsp,0x38
  403318:	ret    
  403319:	nop    DWORD PTR [rax+0x0]
  403320:	mov    DWORD PTR [rsp+0x2c],ecx
  403324:	call   0x403140
  403329:	mov    ecx,DWORD PTR [rsp+0x2c]
  40332d:	jmp    0x4032be
  40332f:	nop
  403330:	sub    rsp,0x38
  403334:	cmp    QWORD PTR [rip+0xddb4],0x0        # 0x4110f0
  40333c:	je     0x4033a0
  40333e:	test   ecx,ecx
  403340:	js     0x403392
  403342:	cmp    ecx,DWORD PTR [rip+0xdda4]        # 0x4110ec
  403348:	jge    0x403392
  40334a:	mov    rax,QWORD PTR [rip+0xdd9f]        # 0x4110f0
  403351:	test   rax,rax
  403354:	je     0x403370
  403356:	movsxd rdx,ecx
  403359:	mov    rax,QWORD PTR [rax+rdx*8]
  40335d:	test   rax,rax
  403360:	je     0x403370
  403362:	add    rsp,0x38
  403366:	ret    
  403367:	nop    WORD PTR [rax+rax*1+0x0]
  403370:	mov    r8d,ecx
  403373:	lea    rdx,[rip+0xa18d]        # 0x40d507
  40337a:	lea    rcx,[rip+0xdd1f]        # 0x4110a0
  403381:	call   0x40ab08
  403386:	lea    rax,[rip+0xdd13]        # 0x4110a0
  40338d:	add    rsp,0x38
  403391:	ret    
  403392:	xor    eax,eax
  403394:	add    rsp,0x38
  403398:	ret    
  403399:	nop    DWORD PTR [rax+0x0]
  4033a0:	mov    DWORD PTR [rsp+0x2c],ecx
  4033a4:	call   0x403140
  4033a9:	mov    ecx,DWORD PTR [rsp+0x2c]
  4033ad:	jmp    0x40333e
  4033af:	nop
  4033b0:	push   rbp
  4033b1:	push   rdi
  4033b2:	push   rsi
  4033b3:	push   rbx
  4033b4:	sub    rsp,0x28
  4033b8:	test   rcx,rcx
  4033bb:	je     0x4033ff
  4033bd:	cmp    QWORD PTR [rip+0xdd2b],0x0        # 0x4110f0
  4033c5:	mov    rdi,rcx
  4033c8:	je     0x40340c
  4033ca:	mov    ebp,DWORD PTR [rip+0xdd1c]        # 0x4110ec
  4033d0:	cmp    ebp,0x0
  4033d3:	jle    0x4033ff
  4033d5:	mov    rsi,QWORD PTR [rip+0xdd14]        # 0x4110f0
  4033dc:	xor    ebx,ebx
  4033de:	xchg   ax,ax
  4033e0:	mov    rdx,QWORD PTR [rsi]
  4033e3:	test   rdx,rdx
  4033e6:	je     0x4033f4
  4033e8:	mov    rcx,rdi
  4033eb:	call   0x40aaf0
  4033f0:	test   eax,eax
  4033f2:	je     0x403401
  4033f4:	add    ebx,0x1
  4033f7:	add    rsi,0x8
  4033fb:	cmp    ebx,ebp
  4033fd:	jne    0x4033e0
  4033ff:	xor    ebx,ebx
  403401:	mov    eax,ebx
  403403:	add    rsp,0x28
  403407:	pop    rbx
  403408:	pop    rsi
  403409:	pop    rdi
  40340a:	pop    rbp
  40340b:	ret    
  40340c:	call   0x403140
  403411:	jmp    0x4033ca
  403413:	nop    DWORD PTR [rax]
  403416:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403420:	push   rsi
  403421:	push   rbx
  403422:	sub    rsp,0x38
  403426:	cmp    QWORD PTR [rip+0xdcc2],0x0        # 0x4110f0
  40342e:	mov    rbx,rdx
  403431:	je     0x403490
  403433:	test   ecx,ecx
  403435:	jle    0x40343f
  403437:	cmp    ecx,DWORD PTR [rip+0xdcab]        # 0x4110e8
  40343d:	jl     0x403460
  40343f:	call   QWORD PTR [rip+0x100bb]        # 0x413500
  403445:	lea    rdx,[rip+0xa0c5]        # 0x40d511
  40344c:	lea    rcx,[rax+0x60]
  403450:	mov    r8,rbx
  403453:	add    rsp,0x38
  403457:	pop    rbx
  403458:	pop    rsi
  403459:	jmp    0x40ab70
  40345e:	xchg   ax,ax
  403460:	mov    rax,QWORD PTR [rip+0xdc79]        # 0x4110e0
  403467:	movsxd rcx,ecx
  40346a:	mov    rsi,QWORD PTR [rax+rcx*8]
  40346e:	call   QWORD PTR [rip+0x1008c]        # 0x413500
  403474:	lea    rdx,[rip+0xa0aa]        # 0x40d525
  40347b:	lea    rcx,[rax+0x60]
  40347f:	mov    r8,rbx
  403482:	mov    r9,rsi
  403485:	add    rsp,0x38
  403489:	pop    rbx
  40348a:	pop    rsi
  40348b:	jmp    0x40ab70
  403490:	mov    DWORD PTR [rsp+0x2c],ecx
  403494:	call   0x403140
  403499:	mov    ecx,DWORD PTR [rsp+0x2c]
  40349d:	jmp    0x403433
  40349f:	nop
  4034a0:	mov    QWORD PTR [rip+0x8b69],rcx        # 0x40c010
  4034a7:	ret    
  4034a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4034b0:	push   rdi
  4034b1:	push   rsi
  4034b2:	push   rbx
  4034b3:	sub    rsp,0x30
  4034b7:	mov    rsi,QWORD PTR [rip+0x8b52]        # 0x40c010
  4034be:	lea    rax,[rip+0xa1bb]        # 0x40d680
  4034c5:	lea    rbx,[rip+0xa1b7]        # 0x40d683
  4034cc:	mov    rdi,rcx
  4034cf:	cmp    BYTE PTR [rsi],0x0
  4034d2:	cmovne rbx,rax
  4034d6:	call   QWORD PTR [rip+0x10024]        # 0x413500
  4034dc:	lea    rdx,[rip+0xa1a5]        # 0x40d688
  4034e3:	lea    rcx,[rax+0x60]
  4034e7:	mov    DWORD PTR [rsp+0x20],edi
  4034eb:	mov    r9,rbx
  4034ee:	mov    r8,rsi
  4034f1:	call   0x40ab70
  4034f6:	mov    ecx,0x1
  4034fb:	call   0x4044c0
  403500:	nop
  403501:	nop    DWORD PTR [rax+rax*1+0x0]
  403506:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403510:	push   rbx
  403511:	sub    rsp,0x20
  403515:	mov    eax,0x1
  40351a:	test   rcx,rcx
  40351d:	mov    rbx,rcx
  403520:	cmove  rbx,rax
  403524:	mov    rcx,rbx
  403527:	call   0x40ab40
  40352c:	test   rax,rax
  40352f:	je     0x403537
  403531:	add    rsp,0x20
  403535:	pop    rbx
  403536:	ret    
  403537:	mov    rcx,rbx
  40353a:	call   0x4034b0
  40353f:	nop
  403540:	push   rsi
  403541:	push   rbx
  403542:	sub    rsp,0x28
  403546:	test   rcx,rcx
  403549:	mov    rbx,rcx
  40354c:	mov    rsi,rdx
  40354f:	je     0x403570
  403551:	test   rdx,rdx
  403554:	je     0x403570
  403556:	mov    rdx,rsi
  403559:	mov    rcx,rbx
  40355c:	call   0x40ab90
  403561:	test   rax,rax
  403564:	je     0x40357c
  403566:	add    rsp,0x28
  40356a:	pop    rbx
  40356b:	pop    rsi
  40356c:	ret    
  40356d:	nop    DWORD PTR [rax]
  403570:	mov    esi,0x1
  403575:	mov    ebx,0x1
  40357a:	jmp    0x403556
  40357c:	mov    rcx,rsi
  40357f:	imul   rcx,rbx
  403583:	call   0x4034b0
  403588:	nop
  403589:	nop    DWORD PTR [rax+0x0]
  403590:	push   rbx
  403591:	sub    rsp,0x20
  403595:	mov    eax,0x1
  40359a:	test   rdx,rdx
  40359d:	mov    rbx,rdx
  4035a0:	cmove  rbx,rax
  4035a4:	test   rcx,rcx
  4035a7:	je     0x4035c0
  4035a9:	mov    rdx,rbx
  4035ac:	call   0x40ab20
  4035b1:	test   rax,rax
  4035b4:	je     0x4035ca
  4035b6:	add    rsp,0x20
  4035ba:	pop    rbx
  4035bb:	ret    
  4035bc:	nop    DWORD PTR [rax+0x0]
  4035c0:	mov    rcx,rbx
  4035c3:	call   0x40ab40
  4035c8:	jmp    0x4035b1
  4035ca:	mov    rcx,rbx
  4035cd:	call   0x4034b0
  4035d2:	nop
  4035d3:	nop
  4035d4:	nop
  4035d5:	nop
  4035d6:	nop
  4035d7:	nop
  4035d8:	nop
  4035d9:	nop
  4035da:	nop
  4035db:	nop
  4035dc:	nop
  4035dd:	nop
  4035de:	nop
  4035df:	nop
  4035e0:	push   rsi
  4035e1:	push   rbx
  4035e2:	sub    rsp,0x28
  4035e6:	mov    rsi,rcx
  4035e9:	call   0x40aad8
  4035ee:	lea    rbx,[rax+0x1]
  4035f2:	mov    rcx,rbx
  4035f5:	call   0x403510
  4035fa:	mov    r8,rbx
  4035fd:	mov    rdx,rsi
  403600:	mov    rcx,rax
  403603:	add    rsp,0x28
  403607:	pop    rbx
  403608:	pop    rsi
  403609:	jmp    0x40ab38
  40360e:	nop
  40360f:	nop
  403610:	push   rdi
  403611:	push   rsi
  403612:	push   rbx
  403613:	sub    rsp,0x20
  403617:	mov    rdi,rcx
  40361a:	mov    rcx,rdx
  40361d:	mov    rsi,rdx
  403620:	call   0x40aad8
  403625:	lea    r8,[rax+0x1]
  403629:	mov    rbx,rax
  40362c:	mov    rdx,rsi
  40362f:	mov    rcx,rdi
  403632:	call   0x40ab38
  403637:	add    rax,rbx
  40363a:	add    rsp,0x20
  40363e:	pop    rbx
  40363f:	pop    rsi
  403640:	pop    rdi
  403641:	ret    
  403642:	nop
  403643:	nop
  403644:	nop
  403645:	nop
  403646:	nop
  403647:	nop
  403648:	nop
  403649:	nop
  40364a:	nop
  40364b:	nop
  40364c:	nop
  40364d:	nop
  40364e:	nop
  40364f:	nop
  403650:	movzx  r8d,BYTE PTR [rcx]
  403654:	mov    rax,rcx
  403657:	test   r8b,r8b
  40365a:	je     0x403675
  40365c:	lea    rdx,[rcx+0x1]
  403660:	cmp    r8b,0x2f
  403664:	movzx  r8d,BYTE PTR [rdx]
  403668:	cmove  rax,rdx
  40366c:	add    rdx,0x1
  403670:	test   r8b,r8b
  403673:	jne    0x403660
  403675:	repz ret 
  403677:	nop    WORD PTR [rax+rax*1+0x0]
  403680:	movzx  r8d,BYTE PTR [rcx]
  403684:	mov    rax,rcx
  403687:	mov    rcx,QWORD PTR [rip+0xae62]        # 0x40e4f0
  40368e:	test   BYTE PTR [rcx+r8*2],0x88
  403693:	mov    rdx,r8
  403696:	je     0x40369e
  403698:	cmp    BYTE PTR [rax+0x1],0x3a
  40369c:	je     0x4036e0
  40369e:	test   dl,dl
  4036a0:	je     0x4036d5
  4036a2:	lea    r8,[rax+0x1]
  4036a6:	jmp    0x4036c1
  4036a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4036b0:	cmp    dl,0x2f
  4036b3:	je     0x4036c6
  4036b5:	movzx  edx,BYTE PTR [r8]
  4036b9:	add    r8,0x1
  4036bd:	test   dl,dl
  4036bf:	je     0x4036d5
  4036c1:	cmp    dl,0x5c
  4036c4:	jne    0x4036b0
  4036c6:	movzx  edx,BYTE PTR [r8]
  4036ca:	mov    rax,r8
  4036cd:	add    r8,0x1
  4036d1:	test   dl,dl
  4036d3:	jne    0x4036c1
  4036d5:	repz ret 
  4036d7:	nop    WORD PTR [rax+rax*1+0x0]
  4036e0:	movzx  edx,BYTE PTR [rax+0x2]
  4036e4:	add    rax,0x2
  4036e8:	jmp    0x40369e
  4036ea:	nop    WORD PTR [rax+rax*1+0x0]
  4036f0:	jmp    0x403680
  4036f2:	nop
  4036f3:	nop
  4036f4:	nop
  4036f5:	nop
  4036f6:	nop
  4036f7:	nop
  4036f8:	nop
  4036f9:	nop
  4036fa:	nop
  4036fb:	nop
  4036fc:	nop
  4036fd:	nop
  4036fe:	nop
  4036ff:	nop
  403700:	push   rsi
  403701:	push   rbx
  403702:	sub    rsp,0x148
  403709:	mov    edx,0x104
  40370e:	lea    rbx,[rsp+0x30]
  403713:	mov    rsi,rcx
  403716:	lea    r9,[rsp+0x28]
  40371b:	mov    r8,rbx
  40371e:	call   QWORD PTR [rip+0xfcc4]        # 0x4133e8
  403724:	lea    edx,[rax-0x1]
  403727:	cmp    edx,0x102
  40372d:	ja     0x403750
  40372f:	mov    edx,eax
  403731:	mov    rcx,rbx
  403734:	call   QWORD PTR [rip+0xffa6]        # 0x4136e0
  40373a:	mov    rcx,rbx
  40373d:	call   0x40aa98
  403742:	add    rsp,0x148
  403749:	pop    rbx
  40374a:	pop    rsi
  40374b:	ret    
  40374c:	nop    DWORD PTR [rax+0x0]
  403750:	mov    rcx,rsi
  403753:	add    rsp,0x148
  40375a:	pop    rbx
  40375b:	pop    rsi
  40375c:	jmp    0x40aa98
  403761:	nop
  403762:	nop
  403763:	nop
  403764:	nop
  403765:	nop
  403766:	nop
  403767:	nop
  403768:	nop
  403769:	nop
  40376a:	nop
  40376b:	nop
  40376c:	nop
  40376d:	nop
  40376e:	nop
  40376f:	nop
  403770:	push   r15
  403772:	push   r14
  403774:	push   r13
  403776:	push   r12
  403778:	push   rbp
  403779:	push   rdi
  40377a:	push   rsi
  40377b:	push   rbx
  40377c:	sub    rsp,0x48
  403780:	mov    r10d,DWORD PTR [rcx+0x30]
  403784:	cmp    DWORD PTR [rcx+0x50],r10d
  403788:	mov    eax,0x1
  40378d:	je     0x40383f
  403793:	mov    rbx,rcx
  403796:	mov    rcx,QWORD PTR [rcx+0x40]
  40379a:	mov    ebp,edx
  40379c:	movsxd rdx,r10d
  40379f:	mov    r13,r9
  4037a2:	mov    r12,r8
  4037a5:	shl    rdx,0x2
  4037a9:	call   0x403590
  4037ae:	test   BYTE PTR [rbx],0x1
  4037b1:	mov    QWORD PTR [rbx+0x40],rax
  4037b5:	jne    0x403850
  4037bb:	mov    edi,DWORD PTR [rbx+0x50]
  4037be:	cmp    edi,DWORD PTR [rbx+0x30]
  4037c1:	jge    0x40386a
  4037c7:	movsxd rsi,edi
  4037ca:	mov    r14d,0x1
  4037d0:	mov    r15,rsi
  4037d3:	shl    r15,0x4
  4037d7:	nop    WORD PTR [rax+rax*1+0x0]
  4037e0:	mov    r9,QWORD PTR [rbx+0x48]
  4037e4:	mov    rcx,QWORD PTR [rbx+0x40]
  4037e8:	mov    rax,QWORD PTR [rbx+0x80]
  4037ef:	lea    rdx,[r9+r15*1]
  4037f3:	test   r9,r9
  4037f6:	lea    r8,[rcx+rsi*4]
  4037fa:	mov    rax,QWORD PTR [rax+0x20]
  4037fe:	mov    rcx,rbx
  403801:	cmovne r9,rdx
  403805:	mov    rdx,QWORD PTR [rbx+0x38]
  403809:	mov    rdx,QWORD PTR [rdx+rsi*8]
  40380d:	mov    QWORD PTR [rsp+0x30],r13
  403812:	mov    QWORD PTR [rsp+0x28],r12
  403817:	mov    DWORD PTR [rsp+0x20],ebp
  40381b:	call   rax
  40381d:	test   rax,rax
  403820:	mov    eax,0x0
  403825:	cmovs  r14d,eax
  403829:	add    edi,0x1
  40382c:	add    rsi,0x1
  403830:	add    r15,0x10
  403834:	cmp    edi,DWORD PTR [rbx+0x30]
  403837:	jl     0x4037e0
  403839:	mov    DWORD PTR [rbx+0x50],edi
  40383c:	mov    eax,r14d
  40383f:	add    rsp,0x48
  403843:	pop    rbx
  403844:	pop    rsi
  403845:	pop    rdi
  403846:	pop    rbp
  403847:	pop    r12
  403849:	pop    r13
  40384b:	pop    r14
  40384d:	pop    r15
  40384f:	ret    
  403850:	movsxd rdx,DWORD PTR [rbx+0x30]
  403854:	mov    rcx,QWORD PTR [rbx+0x48]
  403858:	shl    rdx,0x4
  40385c:	call   0x403590
  403861:	mov    QWORD PTR [rbx+0x48],rax
  403865:	jmp    0x4037bb
  40386a:	mov    r14d,0x1
  403870:	jmp    0x403839
  403872:	nop    DWORD PTR [rax+0x0]
  403876:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403880:	push   rdi
  403881:	push   rsi
  403882:	push   rbx
  403883:	sub    rsp,0x20
  403887:	test   r8,r8
  40388a:	mov    rax,r8
  40388d:	je     0x4038b0
  40388f:	and    edx,0x4
  403892:	je     0x40390b
  403894:	mov    rcx,QWORD PTR [rcx]
  403897:	test   rcx,rcx
  40389a:	je     0x403913
  40389c:	xor    r8d,r8d
  40389f:	mov    rdx,rax
  4038a2:	add    rsp,0x20
  4038a6:	pop    rbx
  4038a7:	pop    rsi
  4038a8:	pop    rdi
  4038a9:	jmp    0x401a80
  4038ae:	xchg   ax,ax
  4038b0:	mov    rbx,QWORD PTR [rcx]
  4038b3:	xor    ecx,ecx
  4038b5:	test   rbx,rbx
  4038b8:	je     0x403916
  4038ba:	mov    rcx,rbx
  4038bd:	call   0x40aad8
  4038c2:	cmp    eax,0x5
  4038c5:	jle    0x4038de
  4038c7:	cdqe   
  4038c9:	lea    rdi,[rip+0x9df0]        # 0x40d6c0
  4038d0:	mov    ecx,0x7
  4038d5:	lea    rsi,[rbx+rax*1-0x6]
  4038da:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4038dc:	je     0x403922
  4038de:	lea    rdx,[rip+0x9ddb]        # 0x40d6c0
  4038e5:	mov    rcx,rbx
  4038e8:	xor    r8d,r8d
  4038eb:	call   0x401a80
  4038f0:	mov    rbx,rax
  4038f3:	xor    edx,edx
  4038f5:	mov    rcx,rbx
  4038f8:	call   0x4044e0
  4038fd:	test   eax,eax
  4038ff:	js     0x40392f
  403901:	mov    ecx,eax
  403903:	call   0x40aa78
  403908:	mov    rax,rbx
  40390b:	add    rsp,0x20
  40390f:	pop    rbx
  403910:	pop    rsi
  403911:	pop    rdi
  403912:	ret    
  403913:	mov    rcx,r8
  403916:	add    rsp,0x20
  40391a:	pop    rbx
  40391b:	pop    rsi
  40391c:	pop    rdi
  40391d:	jmp    0x404780
  403922:	mov    rcx,rbx
  403925:	call   0x4035e0
  40392a:	mov    rbx,rax
  40392d:	jmp    0x4038f3
  40392f:	mov    rcx,rbx
  403932:	call   0x40ab60
  403937:	xor    eax,eax
  403939:	jmp    0x40390b
  40393b:	nop    DWORD PTR [rax+rax*1+0x0]
  403940:	push   rbp
  403941:	push   rdi
  403942:	push   rsi
  403943:	push   rbx
  403944:	sub    rsp,0x28
  403948:	mov    ebp,ecx
  40394a:	mov    rdi,rdx
  40394d:	mov    rsi,r8
  403950:	mov    rbx,r9
  403953:	mov    ecx,0x90
  403958:	call   0x403510
  40395d:	mov    DWORD PTR [rax],ebp
  40395f:	mov    QWORD PTR [rax+0x8],rdi
  403963:	mov    QWORD PTR [rax+0x10],rsi
  403967:	mov    DWORD PTR [rax+0x18],0x0
  40396e:	mov    QWORD PTR [rax+0x20],0x0
  403976:	mov    DWORD PTR [rax+0x28],0x0
  40397d:	mov    DWORD PTR [rax+0x2c],0xffffffff
  403984:	mov    DWORD PTR [rax+0x30],0x0
  40398b:	mov    QWORD PTR [rax+0x38],0x0
  403993:	mov    QWORD PTR [rax+0x40],0x0
  40399b:	mov    QWORD PTR [rax+0x48],0x0
  4039a3:	mov    DWORD PTR [rax+0x50],0x0
  4039aa:	mov    QWORD PTR [rax+0x58],0x0
  4039b2:	mov    QWORD PTR [rax+0x60],0x0
  4039ba:	mov    QWORD PTR [rax+0x68],0x0
  4039c2:	mov    DWORD PTR [rax+0x70],0x0
  4039c9:	mov    QWORD PTR [rax+0x78],0x0
  4039d1:	mov    QWORD PTR [rax+0x80],rbx
  4039d8:	mov    QWORD PTR [rax+0x88],0x0
  4039e3:	add    rsp,0x28
  4039e7:	pop    rbx
  4039e8:	pop    rsi
  4039e9:	pop    rdi
  4039ea:	pop    rbp
  4039eb:	ret    
  4039ec:	nop    DWORD PTR [rax+0x0]
  4039f0:	push   r15
  4039f2:	push   r14
  4039f4:	push   r13
  4039f6:	push   r12
  4039f8:	push   rbp
  4039f9:	push   rdi
  4039fa:	push   rsi
  4039fb:	push   rbx
  4039fc:	sub    rsp,0x78
  403a00:	mov    rbx,rcx
  403a03:	mov    rcx,QWORD PTR [rcx+0x58]
  403a07:	mov    esi,edx
  403a09:	mov    r12,r8
  403a0c:	mov    r13,r9
  403a0f:	test   rcx,rcx
  403a12:	je     0x403a2a
  403a14:	call   0x40ab80
  403a19:	cmp    eax,0xffffffff
  403a1c:	je     0x403c70
  403a22:	mov    QWORD PTR [rbx+0x58],0x0
  403a2a:	cmp    QWORD PTR [rbx+0x20],0x0
  403a2f:	je     0x403a70
  403a31:	mov    r9,QWORD PTR [rsp+0xf8]
  403a39:	lea    r8,[rsp+0x68]
  403a3e:	xor    edx,edx
  403a40:	mov    rcx,rbx
  403a43:	call   0x403770
  403a48:	test   eax,eax
  403a4a:	jne    0x403b60
  403a50:	mov    rax,QWORD PTR [rsp+0x68]
  403a55:	add    rsp,0x78
  403a59:	pop    rbx
  403a5a:	pop    rsi
  403a5b:	pop    rdi
  403a5c:	pop    rbp
  403a5d:	pop    r12
  403a5f:	pop    r13
  403a61:	pop    r14
  403a63:	pop    r15
  403a65:	ret    
  403a66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403a70:	mov    edi,DWORD PTR [rbx+0x18]
  403a73:	test   edi,edi
  403a75:	js     0x403c50
  403a7b:	test   sil,0x1
  403a7f:	je     0x403ba2
  403a85:	xor    r14d,r14d
  403a88:	cmp    QWORD PTR [rsp+0xe8],0x0
  403a91:	je     0x403e60
  403a97:	test   sil,0x4
  403a9b:	mov    ebp,0xffffffff
  403aa0:	jne    0x403de5
  403aa6:	mov    DWORD PTR [rbx+0x18],0xffffffff
  403aad:	test   ebp,ebp
  403aaf:	js     0x403fbb
  403ab5:	test   r14d,r14d
  403ab8:	jne    0x403cb2
  403abe:	cmp    QWORD PTR [rsp+0xf0],0x0
  403ac7:	je     0x403d33
  403acd:	test   sil,0x40
  403ad1:	je     0x403c81
  403ad7:	mov    rax,QWORD PTR [rsp+0xf8]
  403adf:	xor    esi,esi
  403ae1:	mov    r15d,0xffffffff
  403ae7:	mov    DWORD PTR [rax],0x0
  403aed:	lea    rax,[rip+0x9c64]        # 0x40d758
  403af4:	mov    QWORD PTR [rsp+0x68],rax
  403af9:	xor    r14d,r14d
  403afc:	test   edi,edi
  403afe:	je     0x403b0f
  403b00:	mov    rax,QWORD PTR [rbx+0x80]
  403b07:	mov    edx,edi
  403b09:	mov    rcx,rbx
  403b0c:	call   QWORD PTR [rax+0x18]
  403b0f:	cmp    ebp,0x1
  403b12:	je     0x403b27
  403b14:	test   ebp,ebp
  403b16:	js     0x403b27
  403b18:	mov    rax,QWORD PTR [rbx+0x80]
  403b1f:	mov    edx,ebp
  403b21:	mov    rcx,rbx
  403b24:	call   QWORD PTR [rax+0x18]
  403b27:	test   sil,sil
  403b2a:	je     0x403b3c
  403b2c:	mov    rax,QWORD PTR [rbx+0x80]
  403b33:	mov    edx,r15d
  403b36:	mov    rcx,rbx
  403b39:	call   QWORD PTR [rax+0x18]
  403b3c:	test   r14d,r14d
  403b3f:	je     0x403a50
  403b45:	mov    rcx,QWORD PTR [rsp+0xe8]
  403b4d:	call   0x40ab60
  403b52:	jmp    0x403a50
  403b57:	nop    WORD PTR [rax+rax*1+0x0]
  403b60:	mov    rax,QWORD PTR [rbx+0x80]
  403b67:	mov    r8d,esi
  403b6a:	mov    rdx,QWORD PTR [rbx+0x20]
  403b6e:	shr    r8d,0x4
  403b72:	mov    rcx,rbx
  403b75:	and    r8d,0x1
  403b79:	call   QWORD PTR [rax]
  403b7b:	test   eax,eax
  403b7d:	mov    edi,eax
  403b7f:	js     0x403e70
  403b85:	mov    eax,DWORD PTR [rbx+0x28]
  403b88:	test   eax,eax
  403b8a:	jne    0x403dd0
  403b90:	test   sil,0x1
  403b94:	mov    QWORD PTR [rbx+0x20],0x0
  403b9c:	jne    0x403a85
  403ba2:	test   BYTE PTR [rbx],0x2
  403ba5:	jne    0x403cc4
  403bab:	mov    r8,QWORD PTR [rsp+0xe8]
  403bb3:	lea    rcx,[rbx+0x10]
  403bb7:	mov    edx,esi
  403bb9:	call   0x403880
  403bbe:	test   rax,rax
  403bc1:	mov    r15,rax
  403bc4:	je     0x403e93
  403bca:	cmp    rax,QWORD PTR [rsp+0xe8]
  403bd2:	je     0x403ef4
  403bd8:	test   BYTE PTR [rbx],0x4
  403bdb:	mov    eax,0x1
  403be0:	je     0x403cfc
  403be6:	mov    QWORD PTR [rbx+0x20],r15
  403bea:	mov    DWORD PTR [rbx+0x28],eax
  403bed:	xor    r14d,r14d
  403bf0:	mov    rax,QWORD PTR [rbx+0x80]
  403bf7:	mov    r8d,esi
  403bfa:	mov    rdx,r15
  403bfd:	shr    r8d,0x5
  403c01:	mov    rcx,rbx
  403c04:	and    r8d,0x1
  403c08:	call   QWORD PTR [rax+0x8]
  403c0b:	test   eax,eax
  403c0d:	mov    ebp,eax
  403c0f:	mov    QWORD PTR [rsp+0xe8],r15
  403c17:	jns    0x403ab5
  403c1d:	call   QWORD PTR [rip+0xf935]        # 0x413558
  403c23:	mov    rsi,QWORD PTR [rsp+0xf8]
  403c2b:	mov    eax,DWORD PTR [rax]
  403c2d:	test   edi,edi
  403c2f:	mov    DWORD PTR [rsi],eax
  403c31:	lea    rax,[rip+0x9b05]        # 0x40d73d
  403c38:	mov    QWORD PTR [rsp+0x68],rax
  403c3d:	je     0x403b3c
  403c43:	xor    esi,esi
  403c45:	mov    r15d,0xffffffff
  403c4b:	jmp    0x403b00
  403c50:	mov    rax,QWORD PTR [rsp+0xf8]
  403c58:	mov    DWORD PTR [rax],0x0
  403c5e:	lea    rax,[rip+0x9a92]        # 0x40d6f7
  403c65:	mov    QWORD PTR [rsp+0x68],rax
  403c6a:	jmp    0x403a50
  403c6f:	nop
  403c70:	lea    rax,[rip+0x9a50]        # 0x40d6c7
  403c77:	mov    QWORD PTR [rsp+0x68],rax
  403c7c:	jmp    0x403a50
  403c81:	cmp    DWORD PTR [rbx+0x2c],0xffffffff
  403c85:	je     0x403e10
  403c8b:	mov    rax,QWORD PTR [rsp+0xf8]
  403c93:	xor    esi,esi
  403c95:	mov    r15d,0xffffffff
  403c9b:	mov    DWORD PTR [rax],0x0
  403ca1:	lea    rax,[rip+0x9ae0]        # 0x40d788
  403ca8:	mov    QWORD PTR [rsp+0x68],rax
  403cad:	jmp    0x403af9
  403cb2:	mov    rcx,QWORD PTR [rsp+0xe8]
  403cba:	call   0x40ab60
  403cbf:	jmp    0x403abe
  403cc4:	mov    rax,QWORD PTR [rbx+0x80]
  403ccb:	mov    r8d,esi
  403cce:	lea    rdx,[rsp+0x60]
  403cd3:	shr    r8d,0x5
  403cd7:	mov    rcx,rbx
  403cda:	and    r8d,0x1
  403cde:	call   QWORD PTR [rax+0x28]
  403ce1:	test   eax,eax
  403ce3:	js     0x403ed4
  403ce9:	mov    eax,DWORD PTR [rsp+0x60]
  403ced:	mov    ebp,DWORD PTR [rsp+0x64]
  403cf1:	xor    r14d,r14d
  403cf4:	mov    DWORD PTR [rbx+0x18],eax
  403cf7:	jmp    0x403aad
  403cfc:	mov    eax,DWORD PTR [rbx+0x70]
  403cff:	mov    rcx,QWORD PTR [rbx+0x78]
  403d03:	add    eax,0x1
  403d06:	mov    DWORD PTR [rbx+0x70],eax
  403d09:	cdqe   
  403d0b:	lea    rdx,[rax*8+0x0]
  403d13:	call   0x403590
  403d18:	mov    QWORD PTR [rbx+0x78],rax
  403d1c:	mov    rax,r15
  403d1f:	movsxd rcx,DWORD PTR [rbx+0x70]
  403d23:	mov    rdx,QWORD PTR [rbx+0x78]
  403d27:	mov    QWORD PTR [rdx+rcx*8-0x8],rax
  403d2c:	xor    eax,eax
  403d2e:	jmp    0x403be6
  403d33:	cmp    DWORD PTR [rbx+0x2c],0xffffffff
  403d37:	jne    0x403c8b
  403d3d:	test   sil,0x40
  403d41:	mov    r15d,0x2
  403d47:	jne    0x403f60
  403d4d:	test   BYTE PTR [rbx],0x2
  403d50:	mov    eax,0xffffffff
  403d55:	je     0x403d5a
  403d57:	mov    eax,DWORD PTR [rbx+0x18]
  403d5a:	mov    rdx,QWORD PTR [rsp+0xf8]
  403d62:	mov    DWORD PTR [rsp+0x40],eax
  403d66:	mov    r9,r13
  403d69:	mov    rax,QWORD PTR [rsp+0xe0]
  403d71:	mov    r10,QWORD PTR [rbx+0x80]
  403d78:	mov    r8,r12
  403d7b:	mov    DWORD PTR [rsp+0x38],r15d
  403d80:	mov    DWORD PTR [rsp+0x30],ebp
  403d84:	mov    rcx,rbx
  403d87:	mov    QWORD PTR [rsp+0x50],rdx
  403d8c:	lea    rdx,[rsp+0x68]
  403d91:	mov    DWORD PTR [rsp+0x28],edi
  403d95:	mov    QWORD PTR [rsp+0x20],rax
  403d9a:	mov    QWORD PTR [rsp+0x48],rdx
  403d9f:	mov    edx,esi
  403da1:	call   QWORD PTR [r10+0x10]
  403da5:	test   rax,rax
  403da8:	mov    rsi,rax
  403dab:	jns    0x403f30
  403db1:	mov    esi,r15d
  403db4:	cmp    r15d,0x2
  403db8:	not    esi
  403dba:	setne  al
  403dbd:	shr    esi,0x1f
  403dc0:	and    esi,eax
  403dc2:	jmp    0x403af9
  403dc7:	nop    WORD PTR [rax+rax*1+0x0]
  403dd0:	mov    rcx,QWORD PTR [rbx+0x20]
  403dd4:	call   0x40ab60
  403dd9:	mov    DWORD PTR [rbx+0x28],0x0
  403de0:	jmp    0x403b90
  403de5:	mov    rcx,QWORD PTR [rbx+0x10]
  403de9:	mov    rdx,QWORD PTR [rsp+0xe8]
  403df1:	xor    r8d,r8d
  403df4:	mov    r14b,0x1
  403df7:	call   0x401a80
  403dfc:	mov    QWORD PTR [rsp+0xe8],rax
  403e04:	jmp    0x403aa6
  403e09:	nop    DWORD PTR [rax+0x0]
  403e10:	mov    rax,QWORD PTR [rbx+0x80]
  403e17:	mov    r8d,esi
  403e1a:	mov    rdx,QWORD PTR [rsp+0xf0]
  403e22:	shr    r8d,0x7
  403e26:	mov    rcx,rbx
  403e29:	and    r8d,0x1
  403e2d:	call   QWORD PTR [rax+0x8]
  403e30:	test   eax,eax
  403e32:	mov    r15d,eax
  403e35:	jns    0x403d4d
  403e3b:	call   QWORD PTR [rip+0xf717]        # 0x413558
  403e41:	mov    rsi,QWORD PTR [rsp+0xf8]
  403e49:	mov    eax,DWORD PTR [rax]
  403e4b:	mov    DWORD PTR [rsi],eax
  403e4d:	lea    rax,[rip+0x9966]        # 0x40d7ba
  403e54:	xor    esi,esi
  403e56:	mov    QWORD PTR [rsp+0x68],rax
  403e5b:	jmp    0x403af9
  403e60:	mov    ebp,0x1
  403e65:	jmp    0x403aa6
  403e6a:	nop    WORD PTR [rax+rax*1+0x0]
  403e70:	call   QWORD PTR [rip+0xf6e2]        # 0x413558
  403e76:	mov    rdi,QWORD PTR [rsp+0xf8]
  403e7e:	mov    eax,DWORD PTR [rax]
  403e80:	mov    DWORD PTR [rdi],eax
  403e82:	lea    rax,[rip+0x985a]        # 0x40d6e3
  403e89:	mov    QWORD PTR [rsp+0x68],rax
  403e8e:	jmp    0x403a50
  403e93:	mov    rax,QWORD PTR [rsp+0xf8]
  403e9b:	mov    QWORD PTR [rsp+0xe8],0x0
  403ea7:	mov    DWORD PTR [rax],0x0
  403ead:	lea    rax,[rip+0x9864]        # 0x40d718
  403eb4:	mov    QWORD PTR [rsp+0x68],rax
  403eb9:	test   edi,edi
  403ebb:	je     0x403a50
  403ec1:	mov    r15d,0xffffffff
  403ec7:	xor    esi,esi
  403ec9:	xor    r14d,r14d
  403ecc:	mov    ebp,r15d
  403ecf:	jmp    0x403b00
  403ed4:	call   QWORD PTR [rip+0xf67e]        # 0x413558
  403eda:	mov    rsi,QWORD PTR [rsp+0xf8]
  403ee2:	mov    eax,DWORD PTR [rax]
  403ee4:	mov    DWORD PTR [rsi],eax
  403ee6:	lea    rax,[rip+0x984b]        # 0x40d738
  403eed:	mov    QWORD PTR [rsp+0x68],rax
  403ef2:	jmp    0x403eb9
  403ef4:	test   BYTE PTR [rbx],0x4
  403ef7:	jne    0x403d2c
  403efd:	mov    eax,DWORD PTR [rbx+0x70]
  403f00:	mov    rcx,QWORD PTR [rbx+0x78]
  403f04:	add    eax,0x1
  403f07:	mov    DWORD PTR [rbx+0x70],eax
  403f0a:	cdqe   
  403f0c:	lea    rdx,[rax*8+0x0]
  403f14:	call   0x403590
  403f19:	mov    rcx,QWORD PTR [rsp+0xe8]
  403f21:	mov    QWORD PTR [rbx+0x78],rax
  403f25:	call   0x4035e0
  403f2a:	jmp    0x403d1f
  403f2f:	nop
  403f30:	mov    eax,DWORD PTR [rbx+0x30]
  403f33:	mov    rcx,QWORD PTR [rbx+0x38]
  403f37:	add    eax,0x1
  403f3a:	mov    DWORD PTR [rbx+0x30],eax
  403f3d:	cdqe   
  403f3f:	lea    rdx,[rax*8+0x0]
  403f47:	call   0x403590
  403f4c:	movsxd rdx,DWORD PTR [rbx+0x30]
  403f50:	mov    QWORD PTR [rbx+0x38],rax
  403f54:	mov    QWORD PTR [rax+rdx*8-0x8],rsi
  403f59:	xor    eax,eax
  403f5b:	jmp    0x403a55
  403f60:	mov    rax,QWORD PTR [rbx+0x80]
  403f67:	mov    r8d,esi
  403f6a:	lea    rdx,[rsp+0x60]
  403f6f:	shr    r8d,0x7
  403f73:	mov    rcx,rbx
  403f76:	and    r8d,0x1
  403f7a:	call   QWORD PTR [rax+0x28]
  403f7d:	test   eax,eax
  403f7f:	js     0x403f92
  403f81:	mov    eax,DWORD PTR [rsp+0x60]
  403f85:	mov    r15d,DWORD PTR [rsp+0x64]
  403f8a:	mov    DWORD PTR [rbx+0x2c],eax
  403f8d:	jmp    0x403d4d
  403f92:	call   QWORD PTR [rip+0xf5c0]        # 0x413558
  403f98:	mov    rsi,QWORD PTR [rsp+0xf8]
  403fa0:	mov    eax,DWORD PTR [rax]
  403fa2:	or     r15d,0xffffffff
  403fa6:	mov    DWORD PTR [rsi],eax
  403fa8:	lea    rax,[rip+0x9789]        # 0x40d738
  403faf:	xor    esi,esi
  403fb1:	mov    QWORD PTR [rsp+0x68],rax
  403fb6:	jmp    0x403af9
  403fbb:	mov    r15,QWORD PTR [rsp+0xe8]
  403fc3:	jmp    0x403bf0
  403fc8:	nop    DWORD PTR [rax+rax*1+0x0]
  403fd0:	sub    rsp,0x48
  403fd4:	mov    rax,QWORD PTR [rsp+0x80]
  403fdc:	mov    QWORD PTR [rsp+0x20],0x0
  403fe5:	mov    QWORD PTR [rsp+0x38],rax
  403fea:	mov    rax,QWORD PTR [rsp+0x78]
  403fef:	mov    QWORD PTR [rsp+0x30],rax
  403ff4:	mov    rax,QWORD PTR [rsp+0x70]
  403ff9:	mov    QWORD PTR [rsp+0x28],rax
  403ffe:	call   0x4039f0
  404003:	add    rsp,0x48
  404007:	ret    
  404008:	nop    DWORD PTR [rax+rax*1+0x0]
  404010:	push   rbp
  404011:	push   rdi
  404012:	push   rsi
  404013:	push   rbx
  404014:	sub    rsp,0x28
  404018:	mov    esi,edx
  40401a:	mov    edx,DWORD PTR [rcx+0x30]
  40401d:	mov    rbx,rcx
  404020:	mov    rdi,r8
  404023:	test   edx,edx
  404025:	jne    0x404035
  404027:	mov    eax,DWORD PTR [rcx+0x18]
  40402a:	test   eax,eax
  40402c:	jg     0x404035
  40402e:	cmp    QWORD PTR [rcx+0x20],0x0
  404033:	je     0x404050
  404035:	call   QWORD PTR [rip+0xf51d]        # 0x413558
  40403b:	mov    DWORD PTR [rax],0x16
  404041:	xor    eax,eax
  404043:	add    rsp,0x28
  404047:	pop    rbx
  404048:	pop    rsi
  404049:	pop    rdi
  40404a:	pop    rbp
  40404b:	ret    
  40404c:	nop    DWORD PTR [rax+0x0]
  404050:	lea    rcx,[rcx+0x10]
  404054:	mov    edx,esi
  404056:	call   0x403880
  40405b:	test   rax,rax
  40405e:	mov    rbp,rax
  404061:	je     0x4040a7
  404063:	lea    rax,[rip+0x9760]        # 0x40d7ca
  40406a:	lea    rdx,[rip+0x975c]        # 0x40d7cd
  404071:	and    esi,0x20
  404074:	mov    rcx,rbp
  404077:	cmovne rdx,rax
  40407b:	call   0x40ab78
  404080:	test   rax,rax
  404083:	mov    rdx,rax
  404086:	je     0x4040ab
  404088:	mov    QWORD PTR [rbx+0x58],rax
  40408c:	xor    eax,eax
  40408e:	cmp    rbp,rdi
  404091:	setne  al
  404094:	mov    QWORD PTR [rbx+0x20],rbp
  404098:	mov    DWORD PTR [rbx+0x28],eax
  40409b:	mov    rax,rdx
  40409e:	add    rsp,0x28
  4040a2:	pop    rbx
  4040a3:	pop    rsi
  4040a4:	pop    rdi
  4040a5:	pop    rbp
  4040a6:	ret    
  4040a7:	xor    eax,eax
  4040a9:	jmp    0x404043
  4040ab:	mov    rcx,rbp
  4040ae:	call   0x40ab60
  4040b3:	xor    eax,eax
  4040b5:	jmp    0x404043
  4040b7:	nop    WORD PTR [rax+rax*1+0x0]
  4040c0:	push   rdi
  4040c1:	push   rsi
  4040c2:	push   rbx
  4040c3:	sub    rsp,0x30
  4040c7:	mov    rbx,rcx
  4040ca:	mov    ecx,DWORD PTR [rcx+0x30]
  4040cd:	test   ecx,ecx
  4040cf:	jg     0x4040e4
  4040d1:	test   BYTE PTR [rbx],0x2
  4040d4:	je     0x4040e4
  4040d6:	mov    eax,DWORD PTR [rbx+0x18]
  4040d9:	test   eax,eax
  4040db:	jg     0x4040e4
  4040dd:	cmp    QWORD PTR [rbx+0x20],0x0
  4040e2:	je     0x404100
  4040e4:	call   QWORD PTR [rip+0xf46e]        # 0x413558
  4040ea:	mov    DWORD PTR [rax],0x16
  4040f0:	xor    eax,eax
  4040f2:	add    rsp,0x30
  4040f6:	pop    rbx
  4040f7:	pop    rsi
  4040f8:	pop    rdi
  4040f9:	ret    
  4040fa:	nop    WORD PTR [rax+rax*1+0x0]
  404100:	mov    rax,QWORD PTR [rbx+0x80]
  404107:	xor    esi,esi
  404109:	test   edx,edx
  40410b:	setne  sil
  40410f:	lea    rdx,[rsp+0x20]
  404114:	mov    rcx,rbx
  404117:	mov    r8d,esi
  40411a:	call   QWORD PTR [rax+0x28]
  40411d:	test   eax,eax
  40411f:	js     0x404150
  404121:	mov    rax,QWORD PTR [rbx+0x80]
  404128:	mov    r8d,esi
  40412b:	mov    edx,DWORD PTR [rsp+0x24]
  40412f:	mov    rcx,rbx
  404132:	call   QWORD PTR [rax+0x38]
  404135:	test   rax,rax
  404138:	je     0x404154
  40413a:	mov    edx,DWORD PTR [rsp+0x20]
  40413e:	mov    DWORD PTR [rbx+0x18],edx
  404141:	add    rsp,0x30
  404145:	pop    rbx
  404146:	pop    rsi
  404147:	pop    rdi
  404148:	ret    
  404149:	nop    DWORD PTR [rax+0x0]
  404150:	xor    eax,eax
  404152:	jmp    0x4040f2
  404154:	mov    rsi,QWORD PTR [rip+0xf3fd]        # 0x413558
  40415b:	call   rsi
  40415d:	mov    edi,DWORD PTR [rax]
  40415f:	mov    rax,QWORD PTR [rbx+0x80]
  404166:	mov    rcx,rbx
  404169:	mov    edx,DWORD PTR [rsp+0x20]
  40416d:	call   QWORD PTR [rax+0x18]
  404170:	mov    rax,QWORD PTR [rbx+0x80]
  404177:	mov    edx,DWORD PTR [rsp+0x24]
  40417b:	mov    rcx,rbx
  40417e:	call   QWORD PTR [rax+0x18]
  404181:	call   rsi
  404183:	mov    DWORD PTR [rax],edi
  404185:	xor    eax,eax
  404187:	jmp    0x4040f2
  40418c:	nop    DWORD PTR [rax+0x0]
  404190:	push   rsi
  404191:	push   rbx
  404192:	sub    rsp,0x38
  404196:	cmp    QWORD PTR [rcx+0x20],0x0
  40419b:	mov    rbx,rcx
  40419e:	mov    esi,edx
  4041a0:	je     0x4041f2
  4041a2:	lea    r9,[rsp+0x24]
  4041a7:	lea    r8,[rsp+0x28]
  4041ac:	xor    edx,edx
  4041ae:	call   0x403770
  4041b3:	test   eax,eax
  4041b5:	je     0x404240
  4041bb:	lea    rax,[rip+0x960d]        # 0x40d7cf
  4041c2:	lea    rdx,[rip+0x9609]        # 0x40d7d2
  4041c9:	mov    rcx,QWORD PTR [rbx+0x20]
  4041cd:	test   esi,esi
  4041cf:	cmovne rdx,rax
  4041d3:	call   0x40ab78
  4041d8:	mov    edx,DWORD PTR [rbx+0x28]
  4041db:	mov    QWORD PTR [rbx+0x60],rax
  4041df:	test   edx,edx
  4041e1:	jne    0x404220
  4041e3:	mov    QWORD PTR [rbx+0x20],0x0
  4041eb:	add    rsp,0x38
  4041ef:	pop    rbx
  4041f0:	pop    rsi
  4041f1:	ret    
  4041f2:	mov    edx,DWORD PTR [rcx+0x18]
  4041f5:	test   edx,edx
  4041f7:	jle    0x404250
  4041f9:	mov    rax,QWORD PTR [rcx+0x80]
  404200:	mov    r8d,esi
  404203:	call   QWORD PTR [rax+0x30]
  404206:	mov    QWORD PTR [rbx+0x60],rax
  40420a:	mov    DWORD PTR [rbx+0x18],0xffffffff
  404211:	add    rsp,0x38
  404215:	pop    rbx
  404216:	pop    rsi
  404217:	ret    
  404218:	nop    DWORD PTR [rax+rax*1+0x0]
  404220:	mov    rcx,QWORD PTR [rbx+0x20]
  404224:	call   0x40ab60
  404229:	mov    DWORD PTR [rbx+0x28],0x0
  404230:	mov    rax,QWORD PTR [rbx+0x60]
  404234:	jmp    0x4041e3
  404236:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404240:	call   QWORD PTR [rip+0xf312]        # 0x413558
  404246:	mov    edx,DWORD PTR [rsp+0x24]
  40424a:	mov    DWORD PTR [rax],edx
  40424c:	xor    eax,eax
  40424e:	jmp    0x4041eb
  404250:	xor    eax,eax
  404252:	jmp    0x4041eb
  404254:	xchg   ax,ax
  404256:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404260:	push   rbx
  404261:	sub    rsp,0x20
  404265:	mov    r8d,edx
  404268:	mov    edx,DWORD PTR [rcx+0x2c]
  40426b:	test   edx,edx
  40426d:	jle    0x404290
  40426f:	mov    rax,QWORD PTR [rcx+0x80]
  404276:	mov    rbx,rcx
  404279:	call   QWORD PTR [rax+0x30]
  40427c:	mov    DWORD PTR [rbx+0x2c],0xffffffff
  404283:	mov    QWORD PTR [rbx+0x68],rax
  404287:	add    rsp,0x20
  40428b:	pop    rbx
  40428c:	ret    
  40428d:	nop    DWORD PTR [rax]
  404290:	xor    eax,eax
  404292:	jmp    0x404287
  404294:	xchg   ax,ax
  404296:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4042a0:	push   rdi
  4042a1:	push   rsi
  4042a2:	push   rbx
  4042a3:	sub    rsp,0x30
  4042a7:	cmp    QWORD PTR [rcx+0x40],0x0
  4042ac:	mov    rsi,rcx
  4042af:	mov    ebx,edx
  4042b1:	mov    rdi,r8
  4042b4:	je     0x404300
  4042b6:	movsxd rax,DWORD PTR [rsi+0x30]
  4042ba:	cmp    eax,ebx
  4042bc:	jl     0x4042e0
  4042be:	mov    rdx,QWORD PTR [rsi+0x40]
  4042c2:	movsxd r8,ebx
  4042c5:	mov    rcx,rdi
  4042c8:	shl    r8,0x2
  4042cc:	call   0x40ab38
  4042d1:	mov    eax,0x1
  4042d6:	add    rsp,0x30
  4042da:	pop    rbx
  4042db:	pop    rsi
  4042dc:	pop    rdi
  4042dd:	ret    
  4042de:	xchg   ax,ax
  4042e0:	sub    ebx,eax
  4042e2:	lea    rcx,[rdi+rax*4]
  4042e6:	xor    edx,edx
  4042e8:	movsxd r8,ebx
  4042eb:	shl    r8,0x2
  4042ef:	call   0x40ab30
  4042f4:	mov    ebx,DWORD PTR [rsi+0x30]
  4042f7:	jmp    0x4042be
  4042f9:	nop    DWORD PTR [rax+0x0]
  404300:	lea    r9,[rsp+0x24]
  404305:	lea    r8,[rsp+0x28]
  40430a:	xor    edx,edx
  40430c:	call   0x403770
  404311:	test   eax,eax
  404313:	jne    0x4042b6
  404315:	jmp    0x4042d6
  404317:	nop    WORD PTR [rax+rax*1+0x0]
  404320:	push   rdi
  404321:	push   rsi
  404322:	push   rbx
  404323:	sub    rsp,0x30
  404327:	cmp    QWORD PTR [rcx+0x40],0x0
  40432c:	mov    rsi,rcx
  40432f:	mov    ebx,edx
  404331:	mov    rdi,r8
  404334:	je     0x404390
  404336:	mov    rdx,QWORD PTR [rsi+0x48]
  40433a:	test   rdx,rdx
  40433d:	je     0x404384
  40433f:	movsxd rax,DWORD PTR [rsi+0x30]
  404343:	cmp    eax,ebx
  404345:	jl     0x404363
  404347:	movsxd r8,ebx
  40434a:	mov    rcx,rdi
  40434d:	shl    r8,0x4
  404351:	call   0x40ab38
  404356:	mov    eax,0x1
  40435b:	add    rsp,0x30
  40435f:	pop    rbx
  404360:	pop    rsi
  404361:	pop    rdi
  404362:	ret    
  404363:	sub    ebx,eax
  404365:	shl    rax,0x4
  404369:	xor    edx,edx
  40436b:	movsxd r8,ebx
  40436e:	lea    rcx,[rdi+rax*1]
  404372:	shl    r8,0x4
  404376:	call   0x40ab30
  40437b:	mov    ebx,DWORD PTR [rsi+0x30]
  40437e:	mov    rdx,QWORD PTR [rsi+0x48]
  404382:	jmp    0x404347
  404384:	xor    eax,eax
  404386:	jmp    0x40435b
  404388:	nop    DWORD PTR [rax+rax*1+0x0]
  404390:	lea    r9,[rsp+0x24]
  404395:	lea    r8,[rsp+0x28]
  40439a:	xor    edx,edx
  40439c:	call   0x403770
  4043a1:	test   eax,eax
  4043a3:	jne    0x404336
  4043a5:	jmp    0x40435b
  4043a7:	nop    WORD PTR [rax+rax*1+0x0]
  4043b0:	push   rdi
  4043b1:	push   rsi
  4043b2:	push   rbx
  4043b3:	sub    rsp,0x30
  4043b7:	mov    edx,DWORD PTR [rcx+0x18]
  4043ba:	mov    rbx,rcx
  4043bd:	test   edx,edx
  4043bf:	jle    0x4043cb
  4043c1:	mov    rax,QWORD PTR [rcx+0x80]
  4043c8:	call   QWORD PTR [rax+0x18]
  4043cb:	mov    edx,DWORD PTR [rbx+0x2c]
  4043ce:	test   edx,edx
  4043d0:	jle    0x4043df
  4043d2:	mov    rax,QWORD PTR [rbx+0x80]
  4043d9:	mov    rcx,rbx
  4043dc:	call   QWORD PTR [rax+0x18]
  4043df:	mov    rcx,QWORD PTR [rbx+0x60]
  4043e3:	test   rcx,rcx
  4043e6:	je     0x4043ed
  4043e8:	call   0x40ab80
  4043ed:	mov    rcx,QWORD PTR [rbx+0x68]
  4043f1:	test   rcx,rcx
  4043f4:	je     0x4043fb
  4043f6:	call   0x40ab80
  4043fb:	cmp    QWORD PTR [rbx+0x40],0x0
  404400:	je     0x4044a1
  404406:	mov    edx,DWORD PTR [rbx+0x28]
  404409:	test   edx,edx
  40440b:	jne    0x404493
  404411:	mov    rcx,QWORD PTR [rbx+0x38]
  404415:	xor    esi,esi
  404417:	xor    edi,edi
  404419:	call   0x40ab60
  40441e:	mov    rcx,QWORD PTR [rbx+0x40]
  404422:	call   0x40ab60
  404427:	mov    rcx,QWORD PTR [rbx+0x48]
  40442b:	call   0x40ab60
  404430:	mov    eax,DWORD PTR [rbx+0x70]
  404433:	test   eax,eax
  404435:	jle    0x40446f
  404437:	nop    WORD PTR [rax+rax*1+0x0]
  404440:	mov    rax,QWORD PTR [rbx+0x78]
  404444:	add    edi,0x1
  404447:	mov    rcx,QWORD PTR [rax+rsi*1]
  40444b:	call   0x40ab18
  404450:	mov    rax,QWORD PTR [rbx+0x78]
  404454:	mov    rcx,QWORD PTR [rax+rsi*1]
  404458:	add    rsi,0x8
  40445c:	call   0x40ab60
  404461:	cmp    DWORD PTR [rbx+0x70],edi
  404464:	jg     0x404440
  404466:	mov    rcx,QWORD PTR [rbx+0x78]
  40446a:	call   0x40ab60
  40446f:	mov    rax,QWORD PTR [rbx+0x80]
  404476:	mov    rax,QWORD PTR [rax+0x40]
  40447a:	test   rax,rax
  40447d:	je     0x404484
  40447f:	mov    rcx,rbx
  404482:	call   rax
  404484:	mov    rcx,rbx
  404487:	add    rsp,0x30
  40448b:	pop    rbx
  40448c:	pop    rsi
  40448d:	pop    rdi
  40448e:	jmp    0x40ab60
  404493:	mov    rcx,QWORD PTR [rbx+0x20]
  404497:	call   0x40ab60
  40449c:	jmp    0x404411
  4044a1:	and    DWORD PTR [rbx],0xfffffffe
  4044a4:	lea    r9,[rsp+0x24]
  4044a9:	lea    r8,[rsp+0x28]
  4044ae:	mov    edx,0x1
  4044b3:	mov    rcx,rbx
  4044b6:	call   0x403770
  4044bb:	jmp    0x404406
  4044c0:	sub    rsp,0x38
  4044c4:	mov    rax,QWORD PTR [rip+0xe0bd]        # 0x412588
  4044cb:	test   rax,rax
  4044ce:	je     0x4044da
  4044d0:	mov    DWORD PTR [rsp+0x2c],ecx
  4044d4:	call   rax
  4044d6:	mov    ecx,DWORD PTR [rsp+0x2c]
  4044da:	call   0x40ab88
  4044df:	nop
  4044e0:	push   r13
  4044e2:	push   r12
  4044e4:	push   rbp
  4044e5:	push   rdi
  4044e6:	push   rsi
  4044e7:	push   rbx
  4044e8:	sub    rsp,0x38
  4044ec:	movsxd rbx,edx
  4044ef:	mov    rbp,rcx
  4044f2:	call   0x40aad8
  4044f7:	lea    edx,[rbx+0x5]
  4044fa:	cmp    edx,eax
  4044fc:	jge    0x4046e9
  404502:	sub    rax,rbx
  404505:	lea    rdi,[rip+0x96f4]        # 0x40dc00
  40450c:	mov    ecx,0x6
  404511:	lea    r13,[rbp+rax*1-0x6]
  404516:	mov    eax,0xffffffff
  40451b:	mov    rsi,r13
  40451e:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  404520:	seta   cl
  404523:	setb   dl
  404526:	cmp    cl,dl
  404528:	jne    0x4046c6
  40452e:	lea    rcx,[rsp+0x20]
  404533:	xor    edx,edx
  404535:	mov    edi,0x7fff
  40453a:	lea    rsi,[rip+0x96df]        # 0x40dc20
  404541:	call   0x405e70
  404546:	movsxd rcx,DWORD PTR [rsp+0x24]
  40454b:	movsxd rax,DWORD PTR [rsp+0x20]
  404550:	shl    rcx,0x10
  404554:	mov    rbx,rcx
  404557:	xor    rbx,rax
  40455a:	call   0x40aa88
  40455f:	cdqe   
  404561:	mov    r12,QWORD PTR [rip+0xeff0]        # 0x413558
  404568:	xor    rbx,rax
  40456b:	mov    rcx,rbx
  40456e:	add    rcx,QWORD PTR [rip+0xcb8b]        # 0x411100
  404575:	movabs rbx,0x8421084210842109
  40457f:	mov    QWORD PTR [rip+0xcb7a],rcx        # 0x411100
  404586:	jmp    0x4045c2
  404588:	nop    DWORD PTR [rax+rax*1+0x0]
  404590:	call   r12
  404593:	cmp    DWORD PTR [rax],0x11
  404596:	je     0x4045a4
  404598:	call   r12
  40459b:	cmp    DWORD PTR [rax],0x15
  40459e:	jne    0x4046d3
  4045a4:	mov    rax,QWORD PTR [rip+0xcb55]        # 0x411100
  4045ab:	sub    edi,0x1
  4045ae:	lea    rcx,[rax+0x1e61]
  4045b5:	mov    QWORD PTR [rip+0xcb44],rcx        # 0x411100
  4045bc:	je     0x4046d3
  4045c2:	mov    rdx,rcx
  4045c5:	shr    rdx,1
  4045c8:	mov    rax,rdx
  4045cb:	mul    rbx
  4045ce:	mov    r9,rdx
  4045d1:	shr    rdx,0x5
  4045d5:	shr    r9,0x4
  4045d9:	lea    rax,[rcx+r9*2]
  4045dd:	mov    r8,r9
  4045e0:	shl    r8,0x6
  4045e4:	sub    rax,r8
  4045e7:	movzx  eax,BYTE PTR [rsi+rax*1]
  4045eb:	mov    BYTE PTR [r13+0x0],al
  4045ef:	mov    rax,rdx
  4045f2:	mul    rbx
  4045f5:	mov    r8,rdx
  4045f8:	shr    rdx,0x5
  4045fc:	shr    r8,0x4
  404600:	lea    rax,[r9+r8*2]
  404604:	mov    rcx,r8
  404607:	shl    rcx,0x6
  40460b:	sub    rax,rcx
  40460e:	movzx  eax,BYTE PTR [rsi+rax*1]
  404612:	mov    BYTE PTR [r13+0x1],al
  404616:	mov    rax,rdx
  404619:	mul    rbx
  40461c:	mov    rcx,rdx
  40461f:	shr    rdx,0x5
  404623:	shr    rcx,0x4
  404627:	lea    rax,[r8+rcx*2]
  40462b:	mov    r9,rcx
  40462e:	shl    r9,0x6
  404632:	sub    rax,r9
  404635:	movzx  eax,BYTE PTR [rsi+rax*1]
  404639:	mov    BYTE PTR [r13+0x2],al
  40463d:	mov    rax,rdx
  404640:	mul    rbx
  404643:	mov    r8,rdx
  404646:	shr    rdx,0x5
  40464a:	shr    r8,0x4
  40464e:	lea    rax,[rcx+r8*2]
  404652:	mov    r9,r8
  404655:	shl    r9,0x6
  404659:	sub    rax,r9
  40465c:	movzx  eax,BYTE PTR [rsi+rax*1]
  404660:	mov    BYTE PTR [r13+0x3],al
  404664:	mov    rax,rdx
  404667:	mul    rbx
  40466a:	mov    rcx,rdx
  40466d:	shr    rdx,0x5
  404671:	shr    rcx,0x4
  404675:	lea    rax,[r8+rcx*2]
  404679:	mov    r9,rcx
  40467c:	shl    r9,0x6
  404680:	sub    rax,r9
  404683:	movzx  eax,BYTE PTR [rsi+rax*1]
  404687:	mov    BYTE PTR [r13+0x4],al
  40468b:	mov    rax,rdx
  40468e:	mul    rbx
  404691:	shr    rdx,0x4
  404695:	lea    rax,[rcx+rdx*2]
  404699:	mov    r8,rdx
  40469c:	mov    rcx,rbp
  40469f:	shl    r8,0x6
  4046a3:	mov    edx,0x8502
  4046a8:	sub    rax,r8
  4046ab:	mov    r8d,0x180
  4046b1:	movzx  eax,BYTE PTR [rsi+rax*1]
  4046b5:	mov    BYTE PTR [r13+0x5],al
  4046b9:	call   0x40aa90
  4046be:	test   eax,eax
  4046c0:	js     0x404590
  4046c6:	add    rsp,0x38
  4046ca:	pop    rbx
  4046cb:	pop    rsi
  4046cc:	pop    rdi
  4046cd:	pop    rbp
  4046ce:	pop    r12
  4046d0:	pop    r13
  4046d2:	ret    
  4046d3:	mov    eax,0xffffffff
  4046d8:	mov    BYTE PTR [rbp+0x0],0x0
  4046dc:	add    rsp,0x38
  4046e0:	pop    rbx
  4046e1:	pop    rsi
  4046e2:	pop    rdi
  4046e3:	pop    rbp
  4046e4:	pop    r12
  4046e6:	pop    r13
  4046e8:	ret    
  4046e9:	mov    eax,0xffffffff
  4046ee:	jmp    0x4046c6
  4046f0:	push   rsi
  4046f1:	push   rbx
  4046f2:	sub    rsp,0x28
  4046f6:	mov    rax,QWORD PTR [rip+0xca13]        # 0x411110
  4046fd:	test   rax,rax
  404700:	je     0x404710
  404702:	add    rsp,0x28
  404706:	pop    rbx
  404707:	pop    rsi
  404708:	ret    
  404709:	nop    DWORD PTR [rax+0x0]
  404710:	xor    edx,edx
  404712:	xor    ecx,ecx
  404714:	mov    rsi,QWORD PTR [rip+0xecfd]        # 0x413418
  40471b:	call   rsi
  40471d:	test   eax,eax
  40471f:	mov    ebx,eax
  404721:	jne    0x404745
  404723:	mov    rax,QWORD PTR [rip+0xc9e6]        # 0x411110
  40472a:	test   rax,rax
  40472d:	jne    0x404702
  40472f:	nop
  404730:	lea    rcx,[rip+0x9529]        # 0x40dc60
  404737:	call   0x4035e0
  40473c:	mov    QWORD PTR [rip+0xc9cd],rax        # 0x411110
  404743:	jmp    0x404702
  404745:	mov    ecx,eax
  404747:	call   0x403510
  40474c:	mov    ecx,ebx
  40474e:	mov    QWORD PTR [rip+0xc9bb],rax        # 0x411110
  404755:	mov    rdx,rax
  404758:	call   rsi
  40475a:	test   eax,eax
  40475c:	jne    0x404723
  40475e:	mov    rcx,QWORD PTR [rip+0xc9ab]        # 0x411110
  404765:	call   0x40ab60
  40476a:	mov    QWORD PTR [rip+0xc99b],0x0        # 0x411110
  404775:	jmp    0x404730
  404777:	nop    WORD PTR [rax+rax*1+0x0]
  404780:	push   r12
  404782:	push   rbp
  404783:	push   rdi
  404784:	push   rsi
  404785:	push   rbx
  404786:	sub    rsp,0x20
  40478a:	mov    rdi,rcx
  40478d:	call   0x4046f0
  404792:	test   rdi,rdi
  404795:	mov    rbp,rax
  404798:	je     0x404820
  40479e:	mov    rcx,rdi
  4047a1:	call   0x40aad8
  4047a6:	mov    r12d,eax
  4047a9:	movsxd rsi,eax
  4047ac:	mov    rcx,rbp
  4047af:	call   0x40aad8
  4047b4:	movsxd rbx,eax
  4047b7:	lea    rcx,[rbx+rsi*1+0x9]
  4047bc:	call   0x403510
  4047c1:	mov    rdx,rbp
  4047c4:	mov    rsi,rax
  4047c7:	mov    rcx,rax
  4047ca:	call   0x40aae8
  4047cf:	lea    rax,[rsi+rbx*1]
  4047d3:	movabs rdx,0x5858585858586363
  4047dd:	lea    rcx,[rsi+rbx*1+0x8]
  4047e2:	mov    QWORD PTR [rax],rdx
  4047e5:	mov    BYTE PTR [rax+0x8],0x0
  4047e9:	mov    rdx,rdi
  4047ec:	call   0x40aae8
  4047f1:	mov    edx,r12d
  4047f4:	mov    rcx,rsi
  4047f7:	call   0x4044e0
  4047fc:	cmp    eax,0xffffffff
  4047ff:	je     0x404831
  404801:	mov    ecx,eax
  404803:	call   0x40aa78
  404808:	test   eax,eax
  40480a:	jne    0x404862
  40480c:	mov    rax,rsi
  40480f:	add    rsp,0x20
  404813:	pop    rbx
  404814:	pop    rsi
  404815:	pop    rdi
  404816:	pop    rbp
  404817:	pop    r12
  404819:	ret    
  40481a:	nop    WORD PTR [rax+rax*1+0x0]
  404820:	xor    esi,esi
  404822:	xor    r12d,r12d
  404825:	lea    rdi,[rip+0x9437]        # 0x40dc63
  40482c:	jmp    0x4047ac
  404831:	call   QWORD PTR [rip+0xed21]        # 0x413558
  404837:	mov    ecx,DWORD PTR [rax]
  404839:	call   0x40aae0
  40483e:	mov    rbx,rax
  404841:	call   QWORD PTR [rip+0xecb9]        # 0x413500
  404847:	lea    rdx,[rip+0x941a]        # 0x40dc68
  40484e:	lea    rcx,[rax+0x60]
  404852:	mov    r9,rbx
  404855:	mov    r8,rbp
  404858:	call   0x40ab70
  40485d:	call   0x40ab98
  404862:	call   0x40ab98
  404867:	nop
  404868:	nop
  404869:	nop
  40486a:	nop
  40486b:	nop
  40486c:	nop
  40486d:	nop
  40486e:	nop
  40486f:	nop
  404870:	push   rbx
  404871:	sub    rsp,0x30
  404875:	mov    rbx,rcx
  404878:	mov    rcx,QWORD PTR [rip+0xdd11]        # 0x412590
  40487f:	call   0x404e20
  404884:	cmp    rax,0xffffffffffffffff
  404888:	mov    QWORD PTR [rsp+0x20],rax
  40488d:	je     0x404905
  40488f:	mov    ecx,0x8
  404894:	call   0x40abc8
  404899:	mov    rcx,QWORD PTR [rip+0xdcf0]        # 0x412590
  4048a0:	call   0x404e20
  4048a5:	mov    rcx,QWORD PTR [rip+0xdcec]        # 0x412598
  4048ac:	mov    QWORD PTR [rsp+0x20],rax
  4048b1:	call   0x404e20
  4048b6:	lea    rdx,[rsp+0x20]
  4048bb:	lea    r8,[rsp+0x28]
  4048c0:	mov    rcx,rbx
  4048c3:	mov    QWORD PTR [rsp+0x28],rax
  4048c8:	call   0x40ac38
  4048cd:	mov    rcx,QWORD PTR [rsp+0x20]
  4048d2:	mov    rbx,rax
  4048d5:	call   0x404e30
  4048da:	mov    rcx,QWORD PTR [rsp+0x28]
  4048df:	mov    QWORD PTR [rip+0xdcaa],rax        # 0x412590
  4048e6:	call   0x404e30
  4048eb:	mov    ecx,0x8
  4048f0:	mov    QWORD PTR [rip+0xdca1],rax        # 0x412598
  4048f7:	call   0x40aba0
  4048fc:	mov    rax,rbx
  4048ff:	add    rsp,0x30
  404903:	pop    rbx
  404904:	ret    
  404905:	mov    rax,QWORD PTR [rip+0x9ae4]        # 0x40e3f0
  40490c:	mov    rcx,rbx
  40490f:	call   QWORD PTR [rax]
  404911:	add    rsp,0x30
  404915:	pop    rbx
  404916:	ret    
  404917:	nop    WORD PTR [rax+rax*1+0x0]
  404920:	sub    rsp,0x28
  404924:	call   0x404870
  404929:	test   rax,rax
  40492c:	sete   al
  40492f:	movzx  eax,al
  404932:	neg    eax
  404934:	add    rsp,0x28
  404938:	ret    
  404939:	nop
  40493a:	nop
  40493b:	nop
  40493c:	nop
  40493d:	nop
  40493e:	nop
  40493f:	nop
  404940:	sub    rsp,0x28
  404944:	mov    rax,QWORD PTR [rip+0x76d5]        # 0x40c020
  40494b:	mov    rax,QWORD PTR [rax]
  40494e:	test   rax,rax
  404951:	je     0x404970
  404953:	call   rax
  404955:	mov    rax,QWORD PTR [rip+0x76c4]        # 0x40c020
  40495c:	lea    rdx,[rax+0x8]
  404960:	mov    rax,QWORD PTR [rax+0x8]
  404964:	mov    QWORD PTR [rip+0x76b5],rdx        # 0x40c020
  40496b:	test   rax,rax
  40496e:	jne    0x404953
  404970:	add    rsp,0x28
  404974:	ret    
  404975:	nop
  404976:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404980:	push   rsi
  404981:	push   rbx
  404982:	sub    rsp,0x28
  404986:	mov    rsi,QWORD PTR [rip+0x99d3]        # 0x40e360
  40498d:	mov    rax,QWORD PTR [rsi]
  404990:	cmp    eax,0xffffffff
  404993:	mov    ebx,eax
  404995:	je     0x4049c0
  404997:	test   ebx,ebx
  404999:	je     0x4049aa
  40499b:	nop    DWORD PTR [rax+rax*1+0x0]
  4049a0:	mov    eax,ebx
  4049a2:	call   QWORD PTR [rsi+rax*8]
  4049a5:	sub    ebx,0x1
  4049a8:	jne    0x4049a0
  4049aa:	lea    rcx,[rip+0xffffffffffffff8f]        # 0x404940
  4049b1:	add    rsp,0x28
  4049b5:	pop    rbx
  4049b6:	pop    rsi
  4049b7:	jmp    0x404920
  4049bc:	nop    DWORD PTR [rax+0x0]
  4049c0:	xor    ebx,ebx
  4049c2:	jmp    0x4049c6
  4049c4:	mov    ebx,eax
  4049c6:	lea    edx,[rbx+0x1]
  4049c9:	cmp    QWORD PTR [rsi+rdx*8],0x0
  4049ce:	mov    rax,rdx
  4049d1:	jne    0x4049c4
  4049d3:	jmp    0x404997
  4049d5:	nop
  4049d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4049e0:	mov    eax,DWORD PTR [rip+0xc73a]        # 0x411120
  4049e6:	test   eax,eax
  4049e8:	je     0x4049f0
  4049ea:	repz ret 
  4049ec:	nop    DWORD PTR [rax+0x0]
  4049f0:	mov    DWORD PTR [rip+0xc726],0x1        # 0x411120
  4049fa:	jmp    0x404980
  4049fc:	nop
  4049fd:	nop
  4049fe:	nop
  4049ff:	nop
  404a00:	mov    rax,QWORD PTR [rip+0xeb01]        # 0x413508
  404a07:	rex.W jmp rax
  404a0a:	nop
  404a0b:	nop
  404a0c:	nop
  404a0d:	nop
  404a0e:	nop
  404a0f:	nop
  404a10:	xor    eax,eax
  404a12:	ret    
  404a13:	nop
  404a14:	nop
  404a15:	nop
  404a16:	nop
  404a17:	nop
  404a18:	nop
  404a19:	nop
  404a1a:	nop
  404a1b:	nop
  404a1c:	nop
  404a1d:	nop
  404a1e:	nop
  404a1f:	nop
  404a20:	push   r12
  404a22:	push   rbp
  404a23:	push   rdi
  404a24:	push   rsi
  404a25:	push   rbx
  404a26:	sub    rsp,0x40
  404a2a:	mov    rbx,QWORD PTR [rip+0x768f]        # 0x40c0c0
  404a31:	movabs rax,0x2b992ddfa232
  404a3b:	mov    QWORD PTR [rsp+0x20],0x0
  404a44:	cmp    rbx,rax
  404a47:	je     0x404a60
  404a49:	not    rbx
  404a4c:	mov    QWORD PTR [rip+0x767d],rbx        # 0x40c0d0
  404a53:	add    rsp,0x40
  404a57:	pop    rbx
  404a58:	pop    rsi
  404a59:	pop    rdi
  404a5a:	pop    rbp
  404a5b:	pop    r12
  404a5d:	ret    
  404a5e:	xchg   ax,ax
  404a60:	lea    rcx,[rsp+0x20]
  404a65:	call   QWORD PTR [rip+0xe9a5]        # 0x413410
  404a6b:	mov    r12,QWORD PTR [rsp+0x20]
  404a70:	call   QWORD PTR [rip+0xe95a]        # 0x4133d0
  404a76:	mov    ebp,eax
  404a78:	call   QWORD PTR [rip+0xe95a]        # 0x4133d8
  404a7e:	mov    edi,eax
  404a80:	call   QWORD PTR [rip+0xe99a]        # 0x413420
  404a86:	lea    rcx,[rsp+0x30]
  404a8b:	mov    esi,eax
  404a8d:	call   QWORD PTR [rip+0xe9c5]        # 0x413458
  404a93:	xor    r12,QWORD PTR [rsp+0x30]
  404a98:	mov    edx,edi
  404a9a:	movabs rax,0xffffffffffff
  404aa4:	xor    rbp,r12
  404aa7:	mov    rdi,rbp
  404aaa:	xor    rdi,rdx
  404aad:	mov    edx,esi
  404aaf:	xor    rdi,rdx
  404ab2:	mov    rsi,rdi
  404ab5:	and    rsi,rax
  404ab8:	cmp    rsi,rbx
  404abb:	je     0x404ae0
  404abd:	mov    rax,rsi
  404ac0:	not    rax
  404ac3:	mov    QWORD PTR [rip+0x75f6],rsi        # 0x40c0c0
  404aca:	mov    QWORD PTR [rip+0x75ff],rax        # 0x40c0d0
  404ad1:	add    rsp,0x40
  404ad5:	pop    rbx
  404ad6:	pop    rsi
  404ad7:	pop    rdi
  404ad8:	pop    rbp
  404ad9:	pop    r12
  404adb:	ret    
  404adc:	nop    DWORD PTR [rax+0x0]
  404ae0:	movabs rax,0xffffd466d2205dcc
  404aea:	movabs rsi,0x2b992ddfa233
  404af4:	jmp    0x404ac3
  404af6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404b00:	push   rbp
  404b01:	push   rsi
  404b02:	push   rbx
  404b03:	mov    rbp,rsp
  404b06:	sub    rsp,0x70
  404b0a:	mov    rsi,rcx
  404b0d:	lea    rcx,[rip+0xc66c]        # 0x411180
  404b14:	call   QWORD PTR [rip+0xe94e]        # 0x413468
  404b1a:	mov    rbx,QWORD PTR [rip+0xc757]        # 0x411278
  404b21:	xor    r8d,r8d
  404b24:	lea    rdx,[rbp-0x28]
  404b28:	mov    rcx,rbx
  404b2b:	call   QWORD PTR [rip+0xe93f]        # 0x413470
  404b31:	test   rax,rax
  404b34:	mov    r9,rax
  404b37:	je     0x404be0
  404b3d:	lea    rax,[rbp-0x20]
  404b41:	mov    QWORD PTR [rsp+0x38],0x0
  404b4a:	mov    r8,rbx
  404b4d:	mov    rdx,QWORD PTR [rbp-0x28]
  404b51:	xor    ecx,ecx
  404b53:	mov    QWORD PTR [rsp+0x30],rax
  404b58:	lea    rax,[rbp-0x18]
  404b5c:	mov    QWORD PTR [rsp+0x28],rax
  404b61:	lea    rax,[rip+0xc618]        # 0x411180
  404b68:	mov    QWORD PTR [rsp+0x20],rax
  404b6d:	call   QWORD PTR [rip+0xe905]        # 0x413478
  404b73:	mov    rax,QWORD PTR [rip+0xc6fe]        # 0x411278
  404b7a:	xor    ecx,ecx
  404b7c:	mov    QWORD PTR [rip+0xc67d],rsi        # 0x411200
  404b83:	mov    DWORD PTR [rip+0xcaf3],0xc0000409        # 0x411680
  404b8d:	mov    DWORD PTR [rip+0xcaed],0x1        # 0x411684
  404b97:	mov    QWORD PTR [rip+0xcaf2],rax        # 0x411690
  404b9e:	mov    rax,QWORD PTR [rip+0x751b]        # 0x40c0c0
  404ba5:	mov    QWORD PTR [rbp-0x10],rax
  404ba9:	mov    rax,QWORD PTR [rip+0x7520]        # 0x40c0d0
  404bb0:	mov    QWORD PTR [rbp-0x8],rax
  404bb4:	call   QWORD PTR [rip+0xe8ce]        # 0x413488
  404bba:	lea    rcx,[rip+0x90cf]        # 0x40dc90
  404bc1:	call   QWORD PTR [rip+0xe8e1]        # 0x4134a8
  404bc7:	call   QWORD PTR [rip+0xe7fb]        # 0x4133c8
  404bcd:	mov    edx,0xc0000409
  404bd2:	mov    rcx,rax
  404bd5:	call   QWORD PTR [rip+0xe8bd]        # 0x413498
  404bdb:	call   0x40ab98
  404be0:	mov    rax,QWORD PTR [rbp+0x18]
  404be4:	mov    QWORD PTR [rip+0xc68d],rax        # 0x411278
  404beb:	lea    rax,[rbp+0x8]
  404bef:	mov    QWORD PTR [rip+0xc622],rax        # 0x411218
  404bf6:	jmp    0x404b73
  404bfb:	nop
  404bfc:	nop
  404bfd:	nop
  404bfe:	nop
  404bff:	nop
  404c00:	sub    rsp,0x28
  404c04:	test   edx,edx
  404c06:	je     0x404c20
  404c08:	cmp    edx,0x3
  404c0b:	je     0x404c20
  404c0d:	mov    eax,0x1
  404c12:	add    rsp,0x28
  404c16:	ret    
  404c17:	nop    WORD PTR [rax+rax*1+0x0]
  404c20:	call   0x405910
  404c25:	mov    eax,0x1
  404c2a:	add    rsp,0x28
  404c2e:	ret    
  404c2f:	nop
  404c30:	push   rsi
  404c31:	push   rbx
  404c32:	sub    rsp,0x28
  404c36:	mov    rax,QWORD PTR [rip+0x9703]        # 0x40e340
  404c3d:	cmp    DWORD PTR [rax],0x2
  404c40:	je     0x404c48
  404c42:	mov    DWORD PTR [rax],0x2
  404c48:	cmp    edx,0x2
  404c4b:	je     0x404c60
  404c4d:	cmp    edx,0x1
  404c50:	je     0x404c92
  404c52:	mov    eax,0x1
  404c57:	add    rsp,0x28
  404c5b:	pop    rbx
  404c5c:	pop    rsi
  404c5d:	ret    
  404c5e:	xchg   ax,ax
  404c60:	lea    rbx,[rip+0xf3f9]        # 0x414060
  404c67:	lea    rsi,[rip+0xf3f2]        # 0x414060
  404c6e:	cmp    rbx,rsi
  404c71:	je     0x404c52
  404c73:	mov    rax,QWORD PTR [rbx]
  404c76:	test   rax,rax
  404c79:	je     0x404c7d
  404c7b:	call   rax
  404c7d:	add    rbx,0x8
  404c81:	cmp    rbx,rsi
  404c84:	jne    0x404c73
  404c86:	mov    eax,0x1
  404c8b:	add    rsp,0x28
  404c8f:	pop    rbx
  404c90:	pop    rsi
  404c91:	ret    
  404c92:	call   0x405910
  404c97:	jmp    0x404c52
  404c99:	nop    DWORD PTR [rax+0x0]
  404ca0:	xor    eax,eax
  404ca2:	ret    
  404ca3:	nop
  404ca4:	nop
  404ca5:	nop
  404ca6:	nop
  404ca7:	nop
  404ca8:	nop
  404ca9:	nop
  404caa:	nop
  404cab:	nop
  404cac:	nop
  404cad:	nop
  404cae:	nop
  404caf:	nop
  404cb0:	sub    rsp,0x58
  404cb4:	mov    rax,QWORD PTR [rip+0xcaa5]        # 0x411760
  404cbb:	test   rax,rax
  404cbe:	je     0x404cec
  404cc0:	movsd  xmm0,QWORD PTR [rsp+0x80]
  404cc9:	mov    DWORD PTR [rsp+0x20],ecx
  404ccd:	lea    rcx,[rsp+0x20]
  404cd2:	mov    QWORD PTR [rsp+0x28],rdx
  404cd7:	movsd  QWORD PTR [rsp+0x30],xmm2
  404cdd:	movsd  QWORD PTR [rsp+0x38],xmm3
  404ce3:	movsd  QWORD PTR [rsp+0x40],xmm0
  404ce9:	call   rax
  404ceb:	nop
  404cec:	add    rsp,0x58
  404cf0:	ret    
  404cf1:	nop    DWORD PTR [rax+rax*1+0x0]
  404cf6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404d00:	mov    QWORD PTR [rip+0xca59],rcx        # 0x411760
  404d07:	jmp    0x40ac10
  404d0c:	nop    DWORD PTR [rax+0x0]
  404d10:	push   rsi
  404d11:	push   rbx
  404d12:	sub    rsp,0x78
  404d16:	movaps XMMWORD PTR [rsp+0x40],xmm6
  404d1b:	movaps XMMWORD PTR [rsp+0x50],xmm7
  404d20:	movaps XMMWORD PTR [rsp+0x60],xmm8
  404d26:	cmp    DWORD PTR [rcx],0x6
  404d29:	ja     0x404e00
  404d2f:	mov    edx,DWORD PTR [rcx]
  404d31:	lea    rax,[rip+0x909c]        # 0x40ddd4
  404d38:	movsxd rdx,DWORD PTR [rax+rdx*4]
  404d3c:	add    rax,rdx
  404d3f:	jmp    rax
  404d41:	lea    rbx,[rip+0x8f68]        # 0x40dcb0
  404d48:	nop    DWORD PTR [rax+rax*1+0x0]
  404d50:	movsd  xmm8,QWORD PTR [rcx+0x20]
  404d56:	mov    rsi,QWORD PTR [rcx+0x8]
  404d5a:	movsd  xmm7,QWORD PTR [rcx+0x18]
  404d5f:	movsd  xmm6,QWORD PTR [rcx+0x10]
  404d64:	call   0x40ac28
  404d69:	movsd  QWORD PTR [rsp+0x30],xmm8
  404d70:	lea    rcx,[rax+0x60]
  404d74:	lea    rdx,[rip+0x902d]        # 0x40dda8
  404d7b:	movsd  QWORD PTR [rsp+0x28],xmm7
  404d81:	mov    r9,rsi
  404d84:	mov    r8,rbx
  404d87:	movsd  QWORD PTR [rsp+0x20],xmm6
  404d8d:	call   0x40ab70
  404d92:	nop
  404d93:	movaps xmm6,XMMWORD PTR [rsp+0x40]
  404d98:	xor    eax,eax
  404d9a:	movaps xmm7,XMMWORD PTR [rsp+0x50]
  404d9f:	movaps xmm8,XMMWORD PTR [rsp+0x60]
  404da5:	add    rsp,0x78
  404da9:	pop    rbx
  404daa:	pop    rsi
  404dab:	ret    
  404dac:	nop    DWORD PTR [rax+0x0]
  404db0:	lea    rbx,[rip+0x8f18]        # 0x40dccf
  404db7:	jmp    0x404d50
  404db9:	nop    DWORD PTR [rax+0x0]
  404dc0:	lea    rbx,[rip+0x8f29]        # 0x40dcf0
  404dc7:	jmp    0x404d50
  404dc9:	nop    DWORD PTR [rax+0x0]
  404dd0:	lea    rbx,[rip+0x8f89]        # 0x40dd60
  404dd7:	jmp    0x404d50
  404ddc:	nop    DWORD PTR [rax+0x0]
  404de0:	lea    rbx,[rip+0x8f51]        # 0x40dd38
  404de7:	jmp    0x404d50
  404dec:	nop    DWORD PTR [rax+0x0]
  404df0:	lea    rbx,[rip+0x8f19]        # 0x40dd10
  404df7:	jmp    0x404d50
  404dfc:	nop    DWORD PTR [rax+0x0]
  404e00:	lea    rbx,[rip+0x8f8f]        # 0x40dd96
  404e07:	jmp    0x404d50
  404e0c:	nop
  404e0d:	nop
  404e0e:	nop
  404e0f:	nop
  404e10:	fninit 
  404e12:	ret    
  404e13:	nop
  404e14:	nop
  404e15:	nop
  404e16:	nop
  404e17:	nop
  404e18:	nop
  404e19:	nop
  404e1a:	nop
  404e1b:	nop
  404e1c:	nop
  404e1d:	nop
  404e1e:	nop
  404e1f:	nop
  404e20:	mov    rax,rcx
  404e23:	ret    
  404e24:	xchg   ax,ax
  404e26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404e30:	mov    rax,rcx
  404e33:	ret    
  404e34:	nop
  404e35:	nop
  404e36:	nop
  404e37:	nop
  404e38:	nop
  404e39:	nop
  404e3a:	nop
  404e3b:	nop
  404e3c:	nop
  404e3d:	nop
  404e3e:	nop
  404e3f:	nop
  404e40:	push   rsi
  404e41:	push   rbx
  404e42:	sub    rsp,0x38
  404e46:	lea    rax,[rsp+0x58]
  404e4b:	mov    rbx,rcx
  404e4e:	mov    QWORD PTR [rsp+0x58],rdx
  404e53:	mov    QWORD PTR [rsp+0x60],r8
  404e58:	mov    QWORD PTR [rsp+0x68],r9
  404e5d:	mov    QWORD PTR [rsp+0x28],rax
  404e62:	call   0x40ac28
  404e67:	lea    rcx,[rip+0x8f82]        # 0x40ddf0
  404e6e:	lea    r9,[rax+0x60]
  404e72:	mov    r8d,0x1b
  404e78:	mov    edx,0x1
  404e7d:	call   0x40ab58
  404e82:	mov    rsi,QWORD PTR [rsp+0x28]
  404e87:	call   0x40ac28
  404e8c:	lea    rcx,[rax+0x60]
  404e90:	mov    rdx,rbx
  404e93:	mov    r8,rsi
  404e96:	call   0x40aab0
  404e9b:	call   0x40ab98
  404ea0:	nop
  404ea1:	nop    DWORD PTR [rax+rax*1+0x0]
  404ea6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404eb0:	push   r13
  404eb2:	push   r12
  404eb4:	push   rbp
  404eb5:	push   rdi
  404eb6:	push   rsi
  404eb7:	push   rbx
  404eb8:	sub    rsp,0x58
  404ebc:	movsxd rbp,DWORD PTR [rip+0xc8c1]        # 0x411784
  404ec3:	mov    rbx,rcx
  404ec6:	mov    rsi,rdx
  404ec9:	mov    rdi,r8
  404ecc:	test   ebp,ebp
  404ece:	jle    0x404fca
  404ed4:	mov    rax,QWORD PTR [rip+0xc8ad]        # 0x411788
  404edb:	xor    r9d,r9d
  404ede:	add    rax,0x8
  404ee2:	mov    r10,QWORD PTR [rax]
  404ee5:	cmp    rbx,r10
  404ee8:	jb     0x404efe
  404eea:	mov    rdx,QWORD PTR [rax+0x8]
  404eee:	mov    r11d,DWORD PTR [rdx+0x8]
  404ef2:	add    r10,r11
  404ef5:	cmp    rbx,r10
  404ef8:	jb     0x404fb0
  404efe:	add    r9d,0x1
  404f02:	add    rax,0x18
  404f06:	cmp    r9d,ebp
  404f09:	jne    0x404ee2
  404f0b:	mov    rcx,rbx
  404f0e:	call   0x405b20
  404f13:	test   rax,rax
  404f16:	mov    r12,rax
  404f19:	je     0x405002
  404f1f:	lea    rbp,[rbp+rbp*2+0x0]
  404f24:	shl    rbp,0x3
  404f28:	mov    r13,rbp
  404f2b:	add    r13,QWORD PTR [rip+0xc856]        # 0x411788
  404f32:	mov    QWORD PTR [r13+0x10],rax
  404f36:	mov    DWORD PTR [r13+0x0],0x0
  404f3e:	call   0x405c40
  404f43:	mov    edx,DWORD PTR [r12+0xc]
  404f48:	mov    r8d,0x30
  404f4e:	add    rax,rdx
  404f51:	lea    rdx,[rsp+0x20]
  404f56:	mov    QWORD PTR [r13+0x8],rax
  404f5a:	mov    rax,QWORD PTR [rip+0xc827]        # 0x411788
  404f61:	mov    rcx,QWORD PTR [rax+rbp*1+0x8]
  404f66:	call   QWORD PTR [rip+0xe54c]        # 0x4134b8
  404f6c:	test   rax,rax
  404f6f:	je     0x404fe5
  404f71:	mov    eax,DWORD PTR [rsp+0x44]
  404f75:	lea    edx,[rax-0x4]
  404f78:	and    edx,0xfffffffb
  404f7b:	je     0x404fa9
  404f7d:	sub    eax,0x40
  404f80:	and    eax,0xffffffbf
  404f83:	je     0x404fa9
  404f85:	mov    r9,rbp
  404f88:	add    r9,QWORD PTR [rip+0xc7f9]        # 0x411788
  404f8f:	mov    r8d,0x40
  404f95:	mov    rdx,QWORD PTR [rsp+0x38]
  404f9a:	mov    rcx,QWORD PTR [rsp+0x20]
  404f9f:	call   QWORD PTR [rip+0xe50b]        # 0x4134b0
  404fa5:	test   eax,eax
  404fa7:	je     0x404fd1
  404fa9:	add    DWORD PTR [rip+0xc7d4],0x1        # 0x411784
  404fb0:	mov    r8,rdi
  404fb3:	mov    rdx,rsi
  404fb6:	mov    rcx,rbx
  404fb9:	add    rsp,0x58
  404fbd:	pop    rbx
  404fbe:	pop    rsi
  404fbf:	pop    rdi
  404fc0:	pop    rbp
  404fc1:	pop    r12
  404fc3:	pop    r13
  404fc5:	jmp    0x40ab38
  404fca:	xor    ebp,ebp
  404fcc:	jmp    0x404f0b
  404fd1:	call   QWORD PTR [rip+0xe419]        # 0x4133f0
  404fd7:	lea    rcx,[rip+0x8e8a]        # 0x40de68
  404fde:	mov    edx,eax
  404fe0:	call   0x404e40
  404fe5:	mov    rax,QWORD PTR [rip+0xc79c]        # 0x411788
  404fec:	mov    edx,DWORD PTR [r12+0x8]
  404ff1:	lea    rcx,[rip+0x8e38]        # 0x40de30
  404ff8:	mov    r8,QWORD PTR [rax+rbp*1+0x8]
  404ffd:	call   0x404e40
  405002:	lea    rcx,[rip+0x8e07]        # 0x40de10
  405009:	mov    rdx,rbx
  40500c:	call   0x404e40
  405011:	nop
  405012:	nop    DWORD PTR [rax+0x0]
  405016:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405020:	push   rbp
  405021:	push   r14
  405023:	push   r13
  405025:	push   r12
  405027:	push   rdi
  405028:	push   rsi
  405029:	push   rbx
  40502a:	mov    rbp,rsp
  40502d:	sub    rsp,0x60
  405031:	mov    ebx,DWORD PTR [rip+0xc749]        # 0x411780
  405037:	test   ebx,ebx
  405039:	je     0x405050
  40503b:	mov    rsp,rbp
  40503e:	pop    rbx
  40503f:	pop    rsi
  405040:	pop    rdi
  405041:	pop    r12
  405043:	pop    r13
  405045:	pop    r14
  405047:	pop    rbp
  405048:	ret    
  405049:	nop    DWORD PTR [rax+0x0]
  405050:	mov    DWORD PTR [rip+0xc726],0x1        # 0x411780
  40505a:	call   0x405b70
  40505f:	cdqe   
  405061:	lea    rax,[rax+rax*2]
  405065:	lea    rax,[rax*8+0x1e]
  40506d:	and    rax,0xfffffffffffffff0
  405071:	call   0x405d90
  405076:	mov    rsi,QWORD PTR [rip+0x92f3]        # 0x40e370
  40507d:	mov    rbx,QWORD PTR [rip+0x92fc]        # 0x40e380
  405084:	sub    rsp,rax
  405087:	mov    DWORD PTR [rip+0xc6f3],0x0        # 0x411784
  405091:	lea    rax,[rsp+0x20]
  405096:	mov    QWORD PTR [rip+0xc6eb],rax        # 0x411788
  40509d:	mov    rax,rsi
  4050a0:	sub    rax,rbx
  4050a3:	cmp    rax,0x7
  4050a7:	jle    0x40503b
  4050a9:	cmp    rax,0xb
  4050ad:	jle    0x4050d5
  4050af:	mov    r11d,DWORD PTR [rbx]
  4050b2:	test   r11d,r11d
  4050b5:	jne    0x405200
  4050bb:	mov    r10d,DWORD PTR [rbx+0x4]
  4050bf:	test   r10d,r10d
  4050c2:	jne    0x405200
  4050c8:	mov    r9d,DWORD PTR [rbx+0x8]
  4050cc:	test   r9d,r9d
  4050cf:	jne    0x4050ec
  4050d1:	add    rbx,0xc
  4050d5:	mov    r8d,DWORD PTR [rbx]
  4050d8:	test   r8d,r8d
  4050db:	jne    0x405200
  4050e1:	mov    ecx,DWORD PTR [rbx+0x4]
  4050e4:	test   ecx,ecx
  4050e6:	jne    0x405200
  4050ec:	mov    edx,DWORD PTR [rbx+0x8]
  4050ef:	cmp    edx,0x1
  4050f2:	jne    0x40530c
  4050f8:	add    rbx,0xc
  4050fc:	cmp    rbx,rsi
  4050ff:	jae    0x40503b
  405105:	mov    r12,QWORD PTR [rip+0x9294]        # 0x40e3a0
  40510c:	lea    r13,[rbp-0x30]
  405110:	movabs r14,0xffffffff00000000
  40511a:	mov    ecx,DWORD PTR [rbx+0x4]
  40511d:	mov    eax,DWORD PTR [rbx]
  40511f:	movzx  edx,BYTE PTR [rbx+0x8]
  405123:	add    rax,r12
  405126:	add    rcx,r12
  405129:	cmp    edx,0x10
  40512c:	mov    r8,QWORD PTR [rax]
  40512f:	je     0x405276
  405135:	jbe    0x40523d
  40513b:	cmp    edx,0x20
  40513e:	je     0x4052bf
  405144:	cmp    edx,0x40
  405147:	jne    0x4052ab
  40514d:	sub    r8,rax
  405150:	mov    rdx,r13
  405153:	mov    rdi,r13
  405156:	mov    rax,r8
  405159:	add    rax,QWORD PTR [rcx]
  40515c:	mov    r8d,0x8
  405162:	mov    QWORD PTR [rbp-0x30],rax
  405166:	call   0x404eb0
  40516b:	add    rbx,0xc
  40516f:	cmp    rbx,rsi
  405172:	jb     0x40511a
  405174:	mov    eax,DWORD PTR [rip+0xc60a]        # 0x411784
  40517a:	xor    ebx,ebx
  40517c:	xor    esi,esi
  40517e:	test   eax,eax
  405180:	jle    0x40503b
  405186:	mov    r14,QWORD PTR [rip+0xe32b]        # 0x4134b8
  40518d:	lea    r13,[rbp-0x34]
  405191:	mov    r12,QWORD PTR [rip+0xe318]        # 0x4134b0
  405198:	jmp    0x4051b3
  40519a:	nop    WORD PTR [rax+rax*1+0x0]
  4051a0:	add    esi,0x1
  4051a3:	add    rbx,0x18
  4051a7:	cmp    esi,DWORD PTR [rip+0xc5d7]        # 0x411784
  4051ad:	jge    0x40503b
  4051b3:	mov    rax,rbx
  4051b6:	add    rax,QWORD PTR [rip+0xc5cb]        # 0x411788
  4051bd:	mov    edx,DWORD PTR [rax]
  4051bf:	test   edx,edx
  4051c1:	je     0x4051a0
  4051c3:	mov    rcx,QWORD PTR [rax+0x8]
  4051c7:	mov    r8d,0x30
  4051cd:	mov    rdx,rdi
  4051d0:	call   r14
  4051d3:	test   rax,rax
  4051d6:	je     0x4052ee
  4051dc:	mov    rax,QWORD PTR [rip+0xc5a5]        # 0x411788
  4051e3:	mov    r9,r13
  4051e6:	mov    rdx,QWORD PTR [rbp-0x18]
  4051ea:	mov    rcx,QWORD PTR [rbp-0x30]
  4051ee:	mov    r8d,DWORD PTR [rax+rbx*1]
  4051f2:	call   r12
  4051f5:	jmp    0x4051a0
  4051f7:	nop    WORD PTR [rax+rax*1+0x0]
  405200:	cmp    rbx,rsi
  405203:	jae    0x40503b
  405209:	mov    r12,QWORD PTR [rip+0x9190]        # 0x40e3a0
  405210:	lea    rdi,[rbp-0x30]
  405214:	mov    ecx,DWORD PTR [rbx+0x4]
  405217:	mov    eax,DWORD PTR [rbx]
  405219:	mov    r8d,0x4
  40521f:	mov    rdx,rdi
  405222:	add    rbx,0x8
  405226:	add    rcx,r12
  405229:	add    eax,DWORD PTR [rcx]
  40522b:	mov    DWORD PTR [rbp-0x30],eax
  40522e:	call   0x404eb0
  405233:	cmp    rbx,rsi
  405236:	jb     0x405214
  405238:	jmp    0x405174
  40523d:	cmp    edx,0x8
  405240:	jne    0x4052ab
  405242:	movzx  edx,BYTE PTR [rcx]
  405245:	mov    rdi,r13
  405248:	mov    r10,rdx
  40524b:	or     r10,0xffffffffffffff00
  405252:	test   dl,dl
  405254:	cmovs  rdx,r10
  405258:	sub    rdx,rax
  40525b:	lea    rax,[r8+rdx*1]
  40525f:	mov    r8d,0x1
  405265:	mov    rdx,r13
  405268:	mov    QWORD PTR [rbp-0x30],rax
  40526c:	call   0x404eb0
  405271:	jmp    0x40516b
  405276:	movzx  edx,WORD PTR [rcx]
  405279:	mov    rdi,r13
  40527c:	mov    r10,rdx
  40527f:	or     r10,0xffffffffffff0000
  405286:	test   dx,dx
  405289:	cmovs  rdx,r10
  40528d:	sub    rdx,rax
  405290:	lea    rax,[r8+rdx*1]
  405294:	mov    r8d,0x2
  40529a:	mov    rdx,r13
  40529d:	mov    QWORD PTR [rbp-0x30],rax
  4052a1:	call   0x404eb0
  4052a6:	jmp    0x40516b
  4052ab:	lea    rcx,[rip+0x8c16]        # 0x40dec8
  4052b2:	mov    QWORD PTR [rbp-0x30],0x0
  4052ba:	call   0x404e40
  4052bf:	mov    edx,DWORD PTR [rcx]
  4052c1:	mov    rdi,r13
  4052c4:	mov    r10,rdx
  4052c7:	or     r10,r14
  4052ca:	test   edx,edx
  4052cc:	cmovs  rdx,r10
  4052d0:	sub    rdx,rax
  4052d3:	lea    rax,[r8+rdx*1]
  4052d7:	mov    r8d,0x4
  4052dd:	mov    rdx,r13
  4052e0:	mov    QWORD PTR [rbp-0x30],rax
  4052e4:	call   0x404eb0
  4052e9:	jmp    0x40516b
  4052ee:	add    rbx,QWORD PTR [rip+0xc493]        # 0x411788
  4052f5:	lea    rcx,[rip+0x8b34]        # 0x40de30
  4052fc:	mov    rax,QWORD PTR [rbx+0x10]
  405300:	mov    r8,QWORD PTR [rbx+0x8]
  405304:	mov    edx,DWORD PTR [rax+0x8]
  405307:	call   0x404e40
  40530c:	lea    rcx,[rip+0x8b7d]        # 0x40de90
  405313:	call   0x404e40
  405318:	nop
  405319:	nop
  40531a:	nop
  40531b:	nop
  40531c:	nop
  40531d:	nop
  40531e:	nop
  40531f:	nop
  405320:	sub    rsp,0x28
  405324:	mov    eax,DWORD PTR [rcx]
  405326:	cmp    eax,0xc0000091
  40532b:	ja     0x405390
  40532d:	cmp    eax,0xc000008d
  405332:	jae    0x4053af
  405334:	cmp    eax,0xc0000008
  405339:	je     0x405450
  40533f:	ja     0x405420
  405345:	cmp    eax,0x80000002
  40534a:	je     0x405450
  405350:	cmp    eax,0xc0000005
  405355:	jne    0x40542e
  40535b:	xor    edx,edx
  40535d:	mov    ecx,0xb
  405362:	call   0x40ab10
  405367:	cmp    rax,0x1
  40536b:	je     0x4054b0
  405371:	test   rax,rax
  405374:	je     0x405490
  40537a:	mov    ecx,0xb
  40537f:	call   rax
  405381:	xor    eax,eax
  405383:	add    rsp,0x28
  405387:	ret    
  405388:	nop    DWORD PTR [rax+rax*1+0x0]
  405390:	cmp    eax,0xc0000094
  405395:	je     0x405460
  40539b:	ja     0x4053e0
  40539d:	cmp    eax,0xc0000092
  4053a2:	je     0x405450
  4053a8:	cmp    eax,0xc0000093
  4053ad:	jne    0x40542e
  4053af:	xor    edx,edx
  4053b1:	mov    ecx,0x8
  4053b6:	call   0x40ab10
  4053bb:	cmp    rax,0x1
  4053bf:	mov    rdx,rax
  4053c2:	je     0x405438
  4053c4:	test   rdx,rdx
  4053c7:	mov    eax,0x1
  4053cc:	je     0x405383
  4053ce:	mov    ecx,0x8
  4053d3:	call   rdx
  4053d5:	xor    eax,eax
  4053d7:	add    rsp,0x28
  4053db:	ret    
  4053dc:	nop    DWORD PTR [rax+0x0]
  4053e0:	cmp    eax,0xc0000095
  4053e5:	je     0x405450
  4053e7:	cmp    eax,0xc0000096
  4053ec:	jne    0x40542e
  4053ee:	xor    edx,edx
  4053f0:	mov    ecx,0x4
  4053f5:	call   0x40ab10
  4053fa:	cmp    rax,0x1
  4053fe:	je     0x40549a
  405404:	test   rax,rax
  405407:	je     0x405490
  40540d:	mov    ecx,0x4
  405412:	call   rax
  405414:	xor    eax,eax
  405416:	jmp    0x405383
  40541b:	nop    DWORD PTR [rax+rax*1+0x0]
  405420:	cmp    eax,0xc000001d
  405425:	je     0x4053ee
  405427:	cmp    eax,0xc000008c
  40542c:	je     0x405450
  40542e:	mov    eax,0x1
  405433:	add    rsp,0x28
  405437:	ret    
  405438:	mov    edx,0x1
  40543d:	mov    ecx,0x8
  405442:	call   0x40ab10
  405447:	call   0x404e10
  40544c:	nop    DWORD PTR [rax+0x0]
  405450:	xor    eax,eax
  405452:	add    rsp,0x28
  405456:	ret    
  405457:	nop    WORD PTR [rax+rax*1+0x0]
  405460:	xor    edx,edx
  405462:	mov    ecx,0x8
  405467:	call   0x40ab10
  40546c:	cmp    rax,0x1
  405470:	mov    rdx,rax
  405473:	jne    0x4053c4
  405479:	mov    edx,0x1
  40547e:	mov    ecx,0x8
  405483:	call   0x40ab10
  405488:	xor    eax,eax
  40548a:	jmp    0x405383
  40548f:	nop
  405490:	mov    eax,0x4
  405495:	add    rsp,0x28
  405499:	ret    
  40549a:	mov    edx,0x1
  40549f:	mov    ecx,0x4
  4054a4:	call   0x40ab10
  4054a9:	xor    eax,eax
  4054ab:	jmp    0x405383
  4054b0:	mov    edx,0x1
  4054b5:	mov    ecx,0xb
  4054ba:	call   0x40ab10
  4054bf:	xor    eax,eax
  4054c1:	jmp    0x405383
  4054c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4054d0:	push   r12
  4054d2:	push   rbp
  4054d3:	push   rdi
  4054d4:	push   rsi
  4054d5:	push   rbx
  4054d6:	sub    rsp,0x20
  4054da:	call   0x405c40
  4054df:	mov    rbp,rax
  4054e2:	mov    eax,DWORD PTR [rip+0xc2e0]        # 0x4117c8
  4054e8:	test   eax,eax
  4054ea:	jne    0x405511
  4054ec:	test   rbp,rbp
  4054ef:	je     0x405511
  4054f1:	lea    rcx,[rip+0x8a08]        # 0x40df00
  4054f8:	mov    DWORD PTR [rip+0xc2c6],0x1        # 0x4117c8
  405502:	call   0x405a80
  405507:	test   rax,rax
  40550a:	je     0x405520
  40550c:	mov    eax,0x1
  405511:	add    rsp,0x20
  405515:	pop    rbx
  405516:	pop    rsi
  405517:	pop    rdi
  405518:	pop    rbp
  405519:	pop    r12
  40551b:	ret    
  40551c:	nop    DWORD PTR [rax+0x0]
  405520:	lea    rbx,[rip+0xc3d9]        # 0x411900
  405527:	mov    ecx,0x30
  40552c:	lea    rdx,[rip+0xc2cd]        # 0x411800
  405533:	lea    r12,[rip+0xfffffffffffffde6]        # 0x405320
  40553a:	xor    esi,esi
  40553c:	mov    rdi,rbx
  40553f:	rep stos QWORD PTR es:[rdi],rax
  405542:	mov    rdi,rdx
  405545:	sub    r12,rbp
  405548:	mov    cl,0x20
  40554a:	rep stos QWORD PTR es:[rdi],rax
  40554d:	mov    rdi,rdx
  405550:	jmp    0x405580
  405552:	mov    BYTE PTR [rdi],0x9
  405555:	mov    DWORD PTR [rdi+0x4],r12d
  405559:	add    rsi,0x1
  40555d:	mov    edx,DWORD PTR [rax+0xc]
  405560:	add    rbx,0xc
  405564:	mov    DWORD PTR [rbx-0xc],edx
  405567:	add    edx,DWORD PTR [rax+0x8]
  40556a:	mov    rax,rdi
  40556d:	sub    rax,rbp
  405570:	add    rdi,0x8
  405574:	mov    DWORD PTR [rbx-0x4],eax
  405577:	mov    DWORD PTR [rbx-0x8],edx
  40557a:	cmp    rsi,0x20
  40557e:	je     0x4055b5
  405580:	mov    rcx,rsi
  405583:	call   0x405bb0
  405588:	test   rax,rax
  40558b:	jne    0x405552
  40558d:	test   rsi,rsi
  405590:	je     0x40550c
  405596:	mov    edx,esi
  405598:	nop    DWORD PTR [rax+rax*1+0x0]
  4055a0:	mov    r8,rbp
  4055a3:	lea    rcx,[rip+0xc356]        # 0x411900
  4055aa:	call   QWORD PTR [rip+0xdeb0]        # 0x413460
  4055b0:	jmp    0x40550c
  4055b5:	mov    edx,0x20
  4055ba:	jmp    0x4055a0
  4055bc:	nop    DWORD PTR [rax+0x0]
  4055c0:	push   rbx
  4055c1:	sub    rsp,0x20
  4055c5:	mov    rdx,QWORD PTR [rcx]
  4055c8:	mov    eax,DWORD PTR [rdx]
  4055ca:	mov    r8d,eax
  4055cd:	and    r8d,0x20ffffff
  4055d4:	cmp    r8d,0x20474343
  4055db:	je     0x4056e0
  4055e1:	cmp    eax,0xc0000091
  4055e6:	mov    rbx,rcx
  4055e9:	ja     0x405670
  4055ef:	cmp    eax,0xc000008d
  4055f4:	jae    0x405687
  4055fa:	cmp    eax,0xc0000008
  4055ff:	je     0x405633
  405601:	ja     0x405640
  405603:	cmp    eax,0x80000002
  405608:	je     0x405633
  40560a:	cmp    eax,0xc0000005
  40560f:	jne    0x405652
  405611:	xor    edx,edx
  405613:	mov    ecx,0xb
  405618:	call   0x40ab10
  40561d:	cmp    rax,0x1
  405621:	je     0x405750
  405627:	test   rax,rax
  40562a:	je     0x405652
  40562c:	mov    ecx,0xb
  405631:	call   rax
  405633:	mov    eax,0xffffffff
  405638:	add    rsp,0x20
  40563c:	pop    rbx
  40563d:	ret    
  40563e:	xchg   ax,ax
  405640:	cmp    eax,0xc000001d
  405645:	je     0x405706
  40564b:	cmp    eax,0xc000008c
  405650:	je     0x405633
  405652:	mov    rax,QWORD PTR [rip+0xc167]        # 0x4117c0
  405659:	test   rax,rax
  40565c:	je     0x405638
  40565e:	mov    rcx,rbx
  405661:	add    rsp,0x20
  405665:	pop    rbx
  405666:	rex.W jmp rax
  405669:	nop    DWORD PTR [rax+0x0]
  405670:	cmp    eax,0xc0000094
  405675:	je     0x4056b2
  405677:	ja     0x4056f0
  405679:	cmp    eax,0xc0000092
  40567e:	je     0x405633
  405680:	cmp    eax,0xc0000093
  405685:	jne    0x405652
  405687:	xor    edx,edx
  405689:	mov    ecx,0x8
  40568e:	call   0x40ab10
  405693:	cmp    rax,0x1
  405697:	jne    0x4056c4
  405699:	mov    edx,0x1
  40569e:	mov    ecx,0x8
  4056a3:	call   0x40ab10
  4056a8:	call   0x404e10
  4056ad:	jmp    0x405633
  4056b2:	xor    edx,edx
  4056b4:	mov    ecx,0x8
  4056b9:	call   0x40ab10
  4056be:	cmp    rax,0x1
  4056c2:	je     0x405732
  4056c4:	test   rax,rax
  4056c7:	je     0x405652
  4056c9:	mov    ecx,0x8
  4056ce:	call   rax
  4056d0:	mov    eax,0xffffffff
  4056d5:	jmp    0x405638
  4056da:	nop    WORD PTR [rax+rax*1+0x0]
  4056e0:	test   BYTE PTR [rdx+0x4],0x1
  4056e4:	jne    0x4055e1
  4056ea:	jmp    0x405633
  4056ef:	nop
  4056f0:	cmp    eax,0xc0000095
  4056f5:	je     0x405633
  4056fb:	cmp    eax,0xc0000096
  405700:	jne    0x405652
  405706:	xor    edx,edx
  405708:	mov    ecx,0x4
  40570d:	call   0x40ab10
  405712:	cmp    rax,0x1
  405716:	je     0x405764
  405718:	test   rax,rax
  40571b:	je     0x405652
  405721:	mov    ecx,0x4
  405726:	call   rax
  405728:	mov    eax,0xffffffff
  40572d:	jmp    0x405638
  405732:	mov    edx,0x1
  405737:	mov    ecx,0x8
  40573c:	call   0x40ab10
  405741:	jmp    0x405633
  405746:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405750:	mov    edx,0x1
  405755:	mov    ecx,0xb
  40575a:	call   0x40ab10
  40575f:	jmp    0x405633
  405764:	mov    edx,0x1
  405769:	mov    ecx,0x4
  40576e:	call   0x40ab10
  405773:	jmp    0x405633
  405778:	nop
  405779:	nop
  40577a:	nop
  40577b:	nop
  40577c:	nop
  40577d:	nop
  40577e:	nop
  40577f:	nop
  405780:	push   rbp
  405781:	push   rdi
  405782:	push   rsi
  405783:	push   rbx
  405784:	sub    rsp,0x28
  405788:	lea    rcx,[rip+0xc311]        # 0x411aa0
  40578f:	call   QWORD PTR [rip+0xdc2b]        # 0x4133c0
  405795:	mov    rbx,QWORD PTR [rip+0xc2e4]        # 0x411a80
  40579c:	test   rbx,rbx
  40579f:	je     0x4057d4
  4057a1:	mov    rbp,QWORD PTR [rip+0xdcf8]        # 0x4134a0
  4057a8:	mov    rdi,QWORD PTR [rip+0xdc41]        # 0x4133f0
  4057af:	nop
  4057b0:	mov    ecx,DWORD PTR [rbx]
  4057b2:	call   rbp
  4057b4:	mov    rsi,rax
  4057b7:	call   rdi
  4057b9:	test   eax,eax
  4057bb:	jne    0x4057cb
  4057bd:	test   rsi,rsi
  4057c0:	je     0x4057cb
  4057c2:	mov    rax,QWORD PTR [rbx+0x8]
  4057c6:	mov    rcx,rsi
  4057c9:	call   rax
  4057cb:	mov    rbx,QWORD PTR [rbx+0x10]
  4057cf:	test   rbx,rbx
  4057d2:	jne    0x4057b0
  4057d4:	mov    rax,QWORD PTR [rip+0xdc6d]        # 0x413448
  4057db:	lea    rcx,[rip+0xc2be]        # 0x411aa0
  4057e2:	add    rsp,0x28
  4057e6:	pop    rbx
  4057e7:	pop    rsi
  4057e8:	pop    rdi
  4057e9:	pop    rbp
  4057ea:	rex.W jmp rax
  4057ed:	nop    DWORD PTR [rax]
  4057f0:	push   rdi
  4057f1:	push   rsi
  4057f2:	push   rbx
  4057f3:	sub    rsp,0x20
  4057f7:	mov    eax,DWORD PTR [rip+0xc28b]        # 0x411a88
  4057fd:	test   eax,eax
  4057ff:	jne    0x405810
  405801:	add    rsp,0x20
  405805:	pop    rbx
  405806:	pop    rsi
  405807:	pop    rdi
  405808:	ret    
  405809:	nop    DWORD PTR [rax+0x0]
  405810:	mov    rsi,rdx
  405813:	mov    edi,ecx
  405815:	mov    edx,0x18
  40581a:	mov    ecx,0x1
  40581f:	call   0x40ab90
  405824:	test   rax,rax
  405827:	mov    rbx,rax
  40582a:	je     0x405868
  40582c:	mov    DWORD PTR [rax],edi
  40582e:	mov    QWORD PTR [rax+0x8],rsi
  405832:	lea    rcx,[rip+0xc267]        # 0x411aa0
  405839:	call   QWORD PTR [rip+0xdb81]        # 0x4133c0
  40583f:	mov    rax,QWORD PTR [rip+0xc23a]        # 0x411a80
  405846:	lea    rcx,[rip+0xc253]        # 0x411aa0
  40584d:	mov    QWORD PTR [rip+0xc22c],rbx        # 0x411a80
  405854:	mov    QWORD PTR [rbx+0x10],rax
  405858:	call   QWORD PTR [rip+0xdbea]        # 0x413448
  40585e:	xor    eax,eax
  405860:	add    rsp,0x20
  405864:	pop    rbx
  405865:	pop    rsi
  405866:	pop    rdi
  405867:	ret    
  405868:	mov    eax,0xffffffff
  40586d:	jmp    0x405801
  40586f:	nop
  405870:	push   rbx
  405871:	sub    rsp,0x20
  405875:	mov    eax,DWORD PTR [rip+0xc20d]        # 0x411a88
  40587b:	test   eax,eax
  40587d:	jne    0x405890
  40587f:	xor    eax,eax
  405881:	add    rsp,0x20
  405885:	pop    rbx
  405886:	ret    
  405887:	nop    WORD PTR [rax+rax*1+0x0]
  405890:	mov    ebx,ecx
  405892:	lea    rcx,[rip+0xc207]        # 0x411aa0
  405899:	call   QWORD PTR [rip+0xdb21]        # 0x4133c0
  40589f:	mov    rdx,QWORD PTR [rip+0xc1da]        # 0x411a80
  4058a6:	test   rdx,rdx
  4058a9:	je     0x4058c7
  4058ab:	mov    eax,DWORD PTR [rdx]
  4058ad:	cmp    eax,ebx
  4058af:	jne    0x4058be
  4058b1:	jmp    0x4058ff
  4058b3:	mov    r8d,DWORD PTR [rax]
  4058b6:	cmp    r8d,ebx
  4058b9:	je     0x4058e0
  4058bb:	mov    rdx,rax
  4058be:	mov    rax,QWORD PTR [rdx+0x10]
  4058c2:	test   rax,rax
  4058c5:	jne    0x4058b3
  4058c7:	lea    rcx,[rip+0xc1d2]        # 0x411aa0
  4058ce:	call   QWORD PTR [rip+0xdb74]        # 0x413448
  4058d4:	xor    eax,eax
  4058d6:	add    rsp,0x20
  4058da:	pop    rbx
  4058db:	ret    
  4058dc:	nop    DWORD PTR [rax+0x0]
  4058e0:	mov    rcx,rax
  4058e3:	mov    rax,QWORD PTR [rax+0x10]
  4058e7:	mov    QWORD PTR [rdx+0x10],rax
  4058eb:	call   0x40ab60
  4058f0:	lea    rcx,[rip+0xc1a9]        # 0x411aa0
  4058f7:	call   QWORD PTR [rip+0xdb4b]        # 0x413448
  4058fd:	jmp    0x4058d4
  4058ff:	mov    rax,QWORD PTR [rdx+0x10]
  405903:	mov    rcx,rdx
  405906:	mov    QWORD PTR [rip+0xc173],rax        # 0x411a80
  40590d:	jmp    0x4058eb
  40590f:	nop
  405910:	push   rbx
  405911:	sub    rsp,0x20
  405915:	cmp    edx,0x1
  405918:	je     0x4059b0
  40591e:	jb     0x405950
  405920:	cmp    edx,0x2
  405923:	je     0x405940
  405925:	cmp    edx,0x3
  405928:	jne    0x405945
  40592a:	mov    eax,DWORD PTR [rip+0xc158]        # 0x411a88
  405930:	test   eax,eax
  405932:	je     0x405945
  405934:	call   0x405780
  405939:	jmp    0x405945
  40593b:	nop    DWORD PTR [rax+rax*1+0x0]
  405940:	call   0x404e10
  405945:	mov    eax,0x1
  40594a:	add    rsp,0x20
  40594e:	pop    rbx
  40594f:	ret    
  405950:	mov    eax,DWORD PTR [rip+0xc132]        # 0x411a88
  405956:	test   eax,eax
  405958:	jne    0x4059e0
  40595e:	mov    eax,DWORD PTR [rip+0xc124]        # 0x411a88
  405964:	cmp    eax,0x1
  405967:	jne    0x405945
  405969:	mov    rcx,QWORD PTR [rip+0xc110]        # 0x411a80
  405970:	test   rcx,rcx
  405973:	je     0x405986
  405975:	mov    rbx,QWORD PTR [rcx+0x10]
  405979:	call   0x40ab60
  40597e:	test   rbx,rbx
  405981:	mov    rcx,rbx
  405984:	jne    0x405975
  405986:	lea    rcx,[rip+0xc113]        # 0x411aa0
  40598d:	mov    QWORD PTR [rip+0xc0e8],0x0        # 0x411a80
  405998:	mov    DWORD PTR [rip+0xc0e6],0x0        # 0x411a88
  4059a2:	call   QWORD PTR [rip+0xda10]        # 0x4133b8
  4059a8:	jmp    0x405945
  4059aa:	nop    WORD PTR [rax+rax*1+0x0]
  4059b0:	mov    eax,DWORD PTR [rip+0xc0d2]        # 0x411a88
  4059b6:	test   eax,eax
  4059b8:	je     0x4059d0
  4059ba:	mov    eax,0x1
  4059bf:	mov    DWORD PTR [rip+0xc0bf],0x1        # 0x411a88
  4059c9:	add    rsp,0x20
  4059cd:	pop    rbx
  4059ce:	ret    
  4059cf:	nop
  4059d0:	lea    rcx,[rip+0xc0c9]        # 0x411aa0
  4059d7:	call   QWORD PTR [rip+0xda5b]        # 0x413438
  4059dd:	jmp    0x4059ba
  4059df:	nop
  4059e0:	call   0x405780
  4059e5:	jmp    0x40595e
  4059ea:	nop
  4059eb:	nop
  4059ec:	nop
  4059ed:	nop
  4059ee:	nop
  4059ef:	nop
  4059f0:	movsxd rax,DWORD PTR [rcx+0x3c]
  4059f4:	add    rcx,rax
  4059f7:	xor    eax,eax
  4059f9:	cmp    DWORD PTR [rcx],0x4550
  4059ff:	je     0x405a03
  405a01:	repz ret 
  405a03:	xor    eax,eax
  405a05:	cmp    WORD PTR [rcx+0x18],0x20b
  405a0b:	sete   al
  405a0e:	ret    
  405a0f:	nop
  405a10:	cmp    WORD PTR [rcx],0x5a4d
  405a15:	je     0x405a20
  405a17:	xor    eax,eax
  405a19:	ret    
  405a1a:	nop    WORD PTR [rax+rax*1+0x0]
  405a20:	jmp    0x4059f0
  405a22:	nop    DWORD PTR [rax+0x0]
  405a26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405a30:	movsxd rax,DWORD PTR [rcx+0x3c]
  405a34:	add    rcx,rax
  405a37:	movzx  eax,WORD PTR [rcx+0x14]
  405a3b:	lea    rax,[rcx+rax*1+0x18]
  405a40:	movzx  ecx,WORD PTR [rcx+0x6]
  405a44:	test   ecx,ecx
  405a46:	je     0x405a71
  405a48:	sub    ecx,0x1
  405a4b:	lea    rcx,[rcx+rcx*4]
  405a4f:	lea    r9,[rax+rcx*8+0x28]
  405a54:	mov    r8d,DWORD PTR [rax+0xc]
  405a58:	cmp    r8,rdx
  405a5b:	mov    rcx,r8
  405a5e:	ja     0x405a68
  405a60:	add    ecx,DWORD PTR [rax+0x8]
  405a63:	cmp    rdx,rcx
  405a66:	jb     0x405a73
  405a68:	add    rax,0x28
  405a6c:	cmp    rax,r9
  405a6f:	jne    0x405a54
  405a71:	xor    eax,eax
  405a73:	repz ret 
  405a75:	nop
  405a76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405a80:	push   rdi
  405a81:	push   rsi
  405a82:	push   rbx
  405a83:	sub    rsp,0x20
  405a87:	mov    rsi,rcx
  405a8a:	call   0x40aad8
  405a8f:	cmp    rax,0x8
  405a93:	ja     0x405ab0
  405a95:	mov    rbx,QWORD PTR [rip+0x8904]        # 0x40e3a0
  405a9c:	xor    edi,edi
  405a9e:	cmp    WORD PTR [rbx],0x5a4d
  405aa3:	je     0x405ac0
  405aa5:	mov    rax,rdi
  405aa8:	add    rsp,0x20
  405aac:	pop    rbx
  405aad:	pop    rsi
  405aae:	pop    rdi
  405aaf:	ret    
  405ab0:	xor    edi,edi
  405ab2:	mov    rax,rdi
  405ab5:	add    rsp,0x20
  405ab9:	pop    rbx
  405aba:	pop    rsi
  405abb:	pop    rdi
  405abc:	ret    
  405abd:	nop    DWORD PTR [rax]
  405ac0:	mov    rcx,rbx
  405ac3:	call   0x4059f0
  405ac8:	test   eax,eax
  405aca:	je     0x405aa5
  405acc:	movsxd rdx,DWORD PTR [rbx+0x3c]
  405ad0:	add    rdx,rbx
  405ad3:	movzx  eax,WORD PTR [rdx+0x14]
  405ad7:	lea    rbx,[rdx+rax*1+0x18]
  405adc:	movzx  eax,WORD PTR [rdx+0x6]
  405ae0:	test   eax,eax
  405ae2:	je     0x405aa5
  405ae4:	sub    eax,0x1
  405ae7:	lea    rax,[rax+rax*4]
  405aeb:	lea    rdi,[rbx+rax*8+0x28]
  405af0:	jmp    0x405afb
  405af2:	add    rbx,0x28
  405af6:	cmp    rbx,rdi
  405af9:	je     0x405ab0
  405afb:	mov    r8d,0x8
  405b01:	mov    rdx,rsi
  405b04:	mov    rcx,rbx
  405b07:	call   0x40aad0
  405b0c:	test   eax,eax
  405b0e:	jne    0x405af2
  405b10:	mov    rdi,rbx
  405b13:	mov    rax,rdi
  405b16:	add    rsp,0x20
  405b1a:	pop    rbx
  405b1b:	pop    rsi
  405b1c:	pop    rdi
  405b1d:	ret    
  405b1e:	xchg   ax,ax
  405b20:	push   rsi
  405b21:	push   rbx
  405b22:	sub    rsp,0x28
  405b26:	mov    rbx,QWORD PTR [rip+0x8873]        # 0x40e3a0
  405b2d:	cmp    WORD PTR [rbx],0x5a4d
  405b32:	je     0x405b40
  405b34:	xor    eax,eax
  405b36:	add    rsp,0x28
  405b3a:	pop    rbx
  405b3b:	pop    rsi
  405b3c:	ret    
  405b3d:	nop    DWORD PTR [rax]
  405b40:	mov    rsi,rcx
  405b43:	mov    rcx,rbx
  405b46:	call   0x4059f0
  405b4b:	test   eax,eax
  405b4d:	je     0x405b34
  405b4f:	sub    rsi,rbx
  405b52:	mov    rcx,rbx
  405b55:	mov    rdx,rsi
  405b58:	add    rsp,0x28
  405b5c:	pop    rbx
  405b5d:	pop    rsi
  405b5e:	jmp    0x405a30
  405b63:	nop    DWORD PTR [rax]
  405b66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405b70:	push   rbx
  405b71:	sub    rsp,0x20
  405b75:	mov    rbx,QWORD PTR [rip+0x8824]        # 0x40e3a0
  405b7c:	xor    eax,eax
  405b7e:	cmp    WORD PTR [rbx],0x5a4d
  405b83:	je     0x405b90
  405b85:	add    rsp,0x20
  405b89:	pop    rbx
  405b8a:	ret    
  405b8b:	nop    DWORD PTR [rax+rax*1+0x0]
  405b90:	mov    rcx,rbx
  405b93:	call   0x4059f0
  405b98:	test   eax,eax
  405b9a:	je     0x405b85
  405b9c:	movsxd rax,DWORD PTR [rbx+0x3c]
  405ba0:	movzx  eax,WORD PTR [rax+rbx*1+0x6]
  405ba5:	add    rsp,0x20
  405ba9:	pop    rbx
  405baa:	ret    
  405bab:	nop    DWORD PTR [rax+rax*1+0x0]
  405bb0:	push   rdi
  405bb1:	push   rsi
  405bb2:	push   rbx
  405bb3:	sub    rsp,0x20
  405bb7:	mov    rsi,QWORD PTR [rip+0x87e2]        # 0x40e3a0
  405bbe:	xor    edi,edi
  405bc0:	mov    rbx,rcx
  405bc3:	cmp    WORD PTR [rsi],0x5a4d
  405bc8:	je     0x405bd5
  405bca:	mov    rax,rdi
  405bcd:	add    rsp,0x20
  405bd1:	pop    rbx
  405bd2:	pop    rsi
  405bd3:	pop    rdi
  405bd4:	ret    
  405bd5:	mov    rcx,rsi
  405bd8:	call   0x4059f0
  405bdd:	test   eax,eax
  405bdf:	je     0x405bca
  405be1:	movsxd rax,DWORD PTR [rsi+0x3c]
  405be5:	add    rsi,rax
  405be8:	movzx  eax,WORD PTR [rsi+0x14]
  405bec:	lea    rdx,[rsi+rax*1+0x18]
  405bf1:	movzx  eax,WORD PTR [rsi+0x6]
  405bf5:	test   eax,eax
  405bf7:	je     0x405bca
  405bf9:	sub    eax,0x1
  405bfc:	lea    rax,[rax+rax*4]
  405c00:	lea    rax,[rdx+rax*8+0x28]
  405c05:	test   BYTE PTR [rdx+0x27],0x20
  405c09:	je     0x405c14
  405c0b:	test   rbx,rbx
  405c0e:	je     0x405c30
  405c10:	sub    rbx,0x1
  405c14:	add    rdx,0x28
  405c18:	cmp    rdx,rax
  405c1b:	jne    0x405c05
  405c1d:	xor    edi,edi
  405c1f:	mov    rax,rdi
  405c22:	add    rsp,0x20
  405c26:	pop    rbx
  405c27:	pop    rsi
  405c28:	pop    rdi
  405c29:	ret    
  405c2a:	nop    WORD PTR [rax+rax*1+0x0]
  405c30:	mov    rdi,rdx
  405c33:	mov    rax,rdi
  405c36:	add    rsp,0x20
  405c3a:	pop    rbx
  405c3b:	pop    rsi
  405c3c:	pop    rdi
  405c3d:	ret    
  405c3e:	xchg   ax,ax
  405c40:	push   rsi
  405c41:	push   rbx
  405c42:	sub    rsp,0x28
  405c46:	mov    rsi,QWORD PTR [rip+0x8753]        # 0x40e3a0
  405c4d:	xor    ebx,ebx
  405c4f:	cmp    WORD PTR [rsi],0x5a4d
  405c54:	je     0x405c60
  405c56:	mov    rax,rbx
  405c59:	add    rsp,0x28
  405c5d:	pop    rbx
  405c5e:	pop    rsi
  405c5f:	ret    
  405c60:	mov    rcx,rsi
  405c63:	call   0x4059f0
  405c68:	test   eax,eax
  405c6a:	cmovne rbx,rsi
  405c6e:	mov    rax,rbx
  405c71:	add    rsp,0x28
  405c75:	pop    rbx
  405c76:	pop    rsi
  405c77:	ret    
  405c78:	nop    DWORD PTR [rax+rax*1+0x0]
  405c80:	push   rsi
  405c81:	push   rbx
  405c82:	sub    rsp,0x28
  405c86:	mov    rbx,QWORD PTR [rip+0x8713]        # 0x40e3a0
  405c8d:	xor    eax,eax
  405c8f:	cmp    WORD PTR [rbx],0x5a4d
  405c94:	je     0x405ca0
  405c96:	add    rsp,0x28
  405c9a:	pop    rbx
  405c9b:	pop    rsi
  405c9c:	ret    
  405c9d:	nop    DWORD PTR [rax]
  405ca0:	mov    rsi,rcx
  405ca3:	mov    rcx,rbx
  405ca6:	call   0x4059f0
  405cab:	test   eax,eax
  405cad:	je     0x405c96
  405caf:	sub    rsi,rbx
  405cb2:	mov    rcx,rbx
  405cb5:	mov    rdx,rsi
  405cb8:	call   0x405a30
  405cbd:	test   rax,rax
  405cc0:	je     0x405cd1
  405cc2:	mov    eax,DWORD PTR [rax+0x24]
  405cc5:	not    eax
  405cc7:	shr    eax,0x1f
  405cca:	add    rsp,0x28
  405cce:	pop    rbx
  405ccf:	pop    rsi
  405cd0:	ret    
  405cd1:	xor    eax,eax
  405cd3:	jmp    0x405c96
  405cd5:	nop
  405cd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405ce0:	push   rbp
  405ce1:	push   rdi
  405ce2:	push   rsi
  405ce3:	push   rbx
  405ce4:	sub    rsp,0x28
  405ce8:	mov    rdi,QWORD PTR [rip+0x86b1]        # 0x40e3a0
  405cef:	xor    ebp,ebp
  405cf1:	mov    esi,ecx
  405cf3:	cmp    WORD PTR [rdi],0x5a4d
  405cf8:	je     0x405d10
  405cfa:	mov    rax,rbp
  405cfd:	add    rsp,0x28
  405d01:	pop    rbx
  405d02:	pop    rsi
  405d03:	pop    rdi
  405d04:	pop    rbp
  405d05:	ret    
  405d06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405d10:	mov    rcx,rdi
  405d13:	call   0x4059f0
  405d18:	test   eax,eax
  405d1a:	je     0x405cfa
  405d1c:	movsxd rax,DWORD PTR [rdi+0x3c]
  405d20:	mov    edx,DWORD PTR [rdi+rax*1+0x90]
  405d27:	test   edx,edx
  405d29:	je     0x405cfa
  405d2b:	mov    ebx,edx
  405d2d:	mov    rcx,rdi
  405d30:	mov    rdx,rbx
  405d33:	call   0x405a30
  405d38:	test   rax,rax
  405d3b:	je     0x405cfa
  405d3d:	add    rbx,rdi
  405d40:	mov    rdx,rbx
  405d43:	jne    0x405d57
  405d45:	jmp    0x405cfa
  405d47:	nop    WORD PTR [rax+rax*1+0x0]
  405d50:	sub    esi,0x1
  405d53:	add    rdx,0x14
  405d57:	mov    ecx,DWORD PTR [rdx+0x4]
  405d5a:	test   ecx,ecx
  405d5c:	jne    0x405d65
  405d5e:	mov    eax,DWORD PTR [rdx+0xc]
  405d61:	test   eax,eax
  405d63:	je     0x405d80
  405d65:	test   esi,esi
  405d67:	jg     0x405d50
  405d69:	mov    ebp,DWORD PTR [rdx+0xc]
  405d6c:	add    rbp,rdi
  405d6f:	mov    rax,rbp
  405d72:	add    rsp,0x28
  405d76:	pop    rbx
  405d77:	pop    rsi
  405d78:	pop    rdi
  405d79:	pop    rbp
  405d7a:	ret    
  405d7b:	nop    DWORD PTR [rax+rax*1+0x0]
  405d80:	xor    ebp,ebp
  405d82:	mov    rax,rbp
  405d85:	add    rsp,0x28
  405d89:	pop    rbx
  405d8a:	pop    rsi
  405d8b:	pop    rdi
  405d8c:	pop    rbp
  405d8d:	ret    
  405d8e:	nop
  405d8f:	nop
  405d90:	push   rcx
  405d91:	push   rax
  405d92:	cmp    rax,0x1000
  405d98:	lea    rcx,[rsp+0x18]
  405d9d:	jb     0x405db8
  405d9f:	sub    rcx,0x1000
  405da6:	or     QWORD PTR [rcx],0x0
  405daa:	sub    rax,0x1000
  405db0:	cmp    rax,0x1000
  405db6:	ja     0x405d9f
  405db8:	sub    rcx,rax
  405dbb:	or     QWORD PTR [rcx],0x0
  405dbf:	pop    rax
  405dc0:	pop    rcx
  405dc1:	ret    
  405dc2:	nop
  405dc3:	nop
  405dc4:	nop
  405dc5:	nop
  405dc6:	nop
  405dc7:	nop
  405dc8:	nop
  405dc9:	nop
  405dca:	nop
  405dcb:	nop
  405dcc:	nop
  405dcd:	nop
  405dce:	nop
  405dcf:	nop
  405dd0:	push   rsi
  405dd1:	push   rbx
  405dd2:	sub    rsp,0xe8
  405dd9:	test   rdx,rdx
  405ddc:	mov    rbx,rcx
  405ddf:	mov    rsi,rdx
  405de2:	je     0x405e06
  405de4:	lea    rcx,[rsp+0x30]
  405de9:	call   QWORD PTR [rip+0xd639]        # 0x413428
  405def:	cmp    eax,0xffffffff
  405df2:	je     0x405e60
  405df4:	mov    edx,DWORD PTR [rsp+0x30]
  405df8:	cmp    eax,0x2
  405dfb:	sete   al
  405dfe:	movzx  eax,al
  405e01:	mov    DWORD PTR [rsi],edx
  405e03:	mov    DWORD PTR [rsi+0x4],eax
  405e06:	test   rbx,rbx
  405e09:	je     0x405e4e
  405e0b:	lea    rcx,[rsp+0x20]
  405e10:	call   QWORD PTR [rip+0xd5fa]        # 0x413410
  405e16:	movabs r8,0xfe624e212ac18000
  405e20:	add    r8,QWORD PTR [rsp+0x20]
  405e25:	movabs rdx,0xd6bf94d5e57a42bd
  405e2f:	mov    rax,r8
  405e32:	mul    rdx
  405e35:	shr    rdx,0x17
  405e39:	mov    QWORD PTR [rbx],rdx
  405e3c:	imul   rdx,rdx,0x989680
  405e43:	sub    r8,rdx
  405e46:	imul   r8d,r8d,0x64
  405e4a:	mov    DWORD PTR [rbx+0x8],r8d
  405e4e:	xor    eax,eax
  405e50:	add    rsp,0xe8
  405e57:	pop    rbx
  405e58:	pop    rsi
  405e59:	ret    
  405e5a:	nop    WORD PTR [rax+rax*1+0x0]
  405e60:	mov    DWORD PTR [rsi],0x0
  405e66:	mov    DWORD PTR [rsi+0x4],0x0
  405e6d:	jmp    0x405e06
  405e6f:	nop
  405e70:	push   rbx
  405e71:	sub    rsp,0x30
  405e75:	mov    rbx,rcx
  405e78:	lea    rcx,[rsp+0x20]
  405e7d:	call   0x405dd0
  405e82:	test   eax,eax
  405e84:	mov    r9d,eax
  405e87:	jne    0x405eb5
  405e89:	mov    rax,QWORD PTR [rsp+0x20]
  405e8e:	mov    r8d,DWORD PTR [rsp+0x28]
  405e93:	mov    edx,0x10624dd3
  405e98:	mov    DWORD PTR [rbx],eax
  405e9a:	mov    eax,r8d
  405e9d:	sar    r8d,0x1f
  405ea1:	imul   edx
  405ea3:	sar    edx,0x6
  405ea6:	sub    edx,r8d
  405ea9:	mov    DWORD PTR [rbx+0x4],edx
  405eac:	mov    eax,r9d
  405eaf:	add    rsp,0x30
  405eb3:	pop    rbx
  405eb4:	ret    
  405eb5:	mov    r9d,0xffffffff
  405ebb:	jmp    0x405eac
  405ebd:	nop    DWORD PTR [rax]
  405ec0:	push   rbx
  405ec1:	sub    rsp,0x30
  405ec5:	mov    rbx,rcx
  405ec8:	lea    rcx,[rsp+0x20]
  405ecd:	call   0x405dd0
  405ed2:	test   eax,eax
  405ed4:	mov    r9d,eax
  405ed7:	jne    0x405f05
  405ed9:	mov    rax,QWORD PTR [rsp+0x20]
  405ede:	mov    r8d,DWORD PTR [rsp+0x28]
  405ee3:	mov    edx,0x10624dd3
  405ee8:	mov    DWORD PTR [rbx],eax
  405eea:	mov    eax,r8d
  405eed:	sar    r8d,0x1f
  405ef1:	imul   edx
  405ef3:	sar    edx,0x6
  405ef6:	sub    edx,r8d
  405ef9:	mov    DWORD PTR [rbx+0x4],edx
  405efc:	mov    eax,r9d
  405eff:	add    rsp,0x30
  405f03:	pop    rbx
  405f04:	ret    
  405f05:	mov    r9d,0xffffffff
  405f0b:	jmp    0x405efc
  405f0d:	nop
  405f0e:	nop
  405f0f:	nop
  405f10:	sub    rsp,0x38
  405f14:	mov    r9,rdx
  405f17:	mov    QWORD PTR [rsp+0x20],r8
  405f1c:	mov    rdx,rcx
  405f1f:	xor    r8d,r8d
  405f22:	mov    ecx,0x6000
  405f27:	call   0x407770
  405f2c:	add    rsp,0x38
  405f30:	ret    
  405f31:	nop
  405f32:	nop
  405f33:	nop
  405f34:	nop
  405f35:	nop
  405f36:	nop
  405f37:	nop
  405f38:	nop
  405f39:	nop
  405f3a:	nop
  405f3b:	nop
  405f3c:	nop
  405f3d:	nop
  405f3e:	nop
  405f3f:	nop
  405f40:	sub    rsp,0x58
  405f44:	mov    rax,QWORD PTR [rdx]
  405f47:	mov    r11,rdx
  405f4a:	mov    edx,DWORD PTR [rdx+0x8]
  405f4d:	mov    r10,rdx
  405f50:	and    r10w,0x7fff
  405f56:	jne    0x405f74
  405f58:	mov    rdx,rax
  405f5b:	shr    rdx,0x20
  405f5f:	or     eax,edx
  405f61:	jne    0x405fe0
  405f63:	mov    DWORD PTR [rsp+0x44],0x0
  405f6b:	movzx  eax,WORD PTR [r11+0x8]
  405f70:	xor    edx,edx
  405f72:	jmp    0x405f9b
  405f74:	cmp    r10w,0x7fff
  405f7a:	je     0x406000
  405f80:	movzx  eax,WORD PTR [r11+0x8]
  405f85:	mov    DWORD PTR [rsp+0x44],0x1
  405f8d:	mov    edx,eax
  405f8f:	and    edx,0x7fff
  405f95:	sub    edx,0x403e
  405f9b:	and    eax,0x8000
  405fa0:	mov    r10,QWORD PTR [rsp+0x80]
  405fa8:	mov    DWORD PTR [r10],eax
  405fab:	lea    rax,[rsp+0x48]
  405fb0:	mov    QWORD PTR [rsp+0x30],r9
  405fb5:	mov    DWORD PTR [rsp+0x20],ecx
  405fb9:	lea    r9,[rsp+0x44]
  405fbe:	lea    rcx,[rip+0x60ab]        # 0x40c070
  405fc5:	mov    DWORD PTR [rsp+0x28],r8d
  405fca:	mov    QWORD PTR [rsp+0x38],rax
  405fcf:	mov    r8,r11
  405fd2:	call   0x4083f0
  405fd7:	add    rsp,0x58
  405fdb:	ret    
  405fdc:	nop    DWORD PTR [rax+0x0]
  405fe0:	test   edx,edx
  405fe2:	js     0x405f80
  405fe4:	mov    DWORD PTR [rsp+0x44],0x2
  405fec:	movzx  eax,WORD PTR [r11+0x8]
  405ff1:	mov    edx,0xffffbfc3
  405ff6:	jmp    0x405f9b
  405ff8:	nop    DWORD PTR [rax+rax*1+0x0]
  406000:	mov    rdx,rax
  406003:	shr    rdx,0x20
  406007:	and    edx,0x7fffffff
  40600d:	or     edx,eax
  40600f:	jne    0x406025
  406011:	mov    DWORD PTR [rsp+0x44],0x3
  406019:	movzx  eax,WORD PTR [r11+0x8]
  40601e:	xor    edx,edx
  406020:	jmp    0x405f9b
  406025:	mov    DWORD PTR [rsp+0x44],0x4
  40602d:	xor    edx,edx
  40602f:	xor    eax,eax
  406031:	jmp    0x405fa0
  406036:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406040:	push   rbx
  406041:	sub    rsp,0x20
  406045:	mov    rbx,rdx
  406048:	mov    edx,DWORD PTR [rdx+0x8]
  40604b:	test   dh,0x40
  40604e:	jne    0x406058
  406050:	mov    eax,DWORD PTR [rbx+0x24]
  406053:	cmp    DWORD PTR [rbx+0x28],eax
  406056:	jle    0x40606a
  406058:	and    dh,0x20
  40605b:	jne    0x406080
  40605d:	movsxd rax,DWORD PTR [rbx+0x24]
  406061:	mov    rdx,QWORD PTR [rbx]
  406064:	mov    BYTE PTR [rdx+rax*1],cl
  406067:	mov    eax,DWORD PTR [rbx+0x24]
  40606a:	add    eax,0x1
  40606d:	mov    DWORD PTR [rbx+0x24],eax
  406070:	add    rsp,0x20
  406074:	pop    rbx
  406075:	ret    
  406076:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406080:	mov    rdx,QWORD PTR [rbx]
  406083:	call   0x40ab68
  406088:	mov    eax,DWORD PTR [rbx+0x24]
  40608b:	add    eax,0x1
  40608e:	mov    DWORD PTR [rbx+0x24],eax
  406091:	add    rsp,0x20
  406095:	pop    rbx
  406096:	ret    
  406097:	nop    WORD PTR [rax+rax*1+0x0]
  4060a0:	push   r14
  4060a2:	push   r13
  4060a4:	push   r12
  4060a6:	push   rbp
  4060a7:	push   rdi
  4060a8:	push   rsi
  4060a9:	push   rbx
  4060aa:	sub    rsp,0x40
  4060ae:	lea    r14,[rsp+0x2c]
  4060b3:	lea    r13,[rsp+0x30]
  4060b8:	mov    ebx,edx
  4060ba:	mov    rsi,r8
  4060bd:	xor    edx,edx
  4060bf:	mov    r12,rcx
  4060c2:	mov    r8,r14
  4060c5:	mov    rcx,r13
  4060c8:	call   0x40a8d0
  4060cd:	mov    ebp,DWORD PTR [rsi+0x10]
  4060d0:	cmp    ebp,ebx
  4060d2:	jge    0x406179
  4060d8:	test   ebp,ebp
  4060da:	js     0x406179
  4060e0:	mov    eax,DWORD PTR [rsi+0xc]
  4060e3:	cmp    ebp,eax
  4060e5:	jge    0x406186
  4060eb:	sub    eax,ebp
  4060ed:	test   eax,eax
  4060ef:	mov    DWORD PTR [rsi+0xc],eax
  4060f2:	jle    0x406100
  4060f4:	test   BYTE PTR [rsi+0x9],0x4
  4060f8:	je     0x406192
  4060fe:	xchg   ax,ax
  406100:	test   ebp,ebp
  406102:	jle    0x40615d
  406104:	add    r12,0x2
  406108:	movzx  edx,WORD PTR [r12-0x2]
  40610e:	mov    r8,r14
  406111:	mov    rcx,r13
  406114:	call   0x40a8d0
  406119:	test   eax,eax
  40611b:	jle    0x40615d
  40611d:	sub    eax,0x1
  406120:	mov    rbx,r13
  406123:	lea    rdi,[r13+rax*1+0x1]
  406128:	nop    DWORD PTR [rax+rax*1+0x0]
  406130:	add    rbx,0x1
  406134:	movsx  ecx,BYTE PTR [rbx-0x1]
  406138:	mov    rdx,rsi
  40613b:	call   0x406040
  406140:	cmp    rbx,rdi
  406143:	jne    0x406130
  406145:	sub    ebp,0x1
  406148:	jmp    0x406100
  40614a:	nop    WORD PTR [rax+rax*1+0x0]
  406150:	mov    rdx,rsi
  406153:	mov    ecx,0x20
  406158:	call   0x406040
  40615d:	mov    eax,DWORD PTR [rsi+0xc]
  406160:	lea    edx,[rax-0x1]
  406163:	test   eax,eax
  406165:	mov    DWORD PTR [rsi+0xc],edx
  406168:	jg     0x406150
  40616a:	add    rsp,0x40
  40616e:	pop    rbx
  40616f:	pop    rsi
  406170:	pop    rdi
  406171:	pop    rbp
  406172:	pop    r12
  406174:	pop    r13
  406176:	pop    r14
  406178:	ret    
  406179:	mov    eax,DWORD PTR [rsi+0xc]
  40617c:	mov    ebp,ebx
  40617e:	cmp    ebp,eax
  406180:	jl     0x4060eb
  406186:	mov    DWORD PTR [rsi+0xc],0xffffffff
  40618d:	jmp    0x406100
  406192:	sub    eax,0x1
  406195:	mov    DWORD PTR [rsi+0xc],eax
  406198:	nop    DWORD PTR [rax+rax*1+0x0]
  4061a0:	mov    rdx,rsi
  4061a3:	mov    ecx,0x20
  4061a8:	call   0x406040
  4061ad:	mov    eax,DWORD PTR [rsi+0xc]
  4061b0:	lea    edx,[rax-0x1]
  4061b3:	test   eax,eax
  4061b5:	mov    DWORD PTR [rsi+0xc],edx
  4061b8:	jne    0x4061a0
  4061ba:	jmp    0x406100
  4061bf:	nop
  4061c0:	push   rdi
  4061c1:	push   rsi
  4061c2:	push   rbx
  4061c3:	sub    rsp,0x20
  4061c7:	mov    edi,DWORD PTR [r8+0x10]
  4061cb:	mov    rsi,rcx
  4061ce:	mov    rbx,r8
  4061d1:	cmp    edi,edx
  4061d3:	jge    0x406250
  4061d5:	test   edi,edi
  4061d7:	js     0x406250
  4061d9:	mov    eax,DWORD PTR [rbx+0xc]
  4061dc:	cmp    edi,eax
  4061de:	jge    0x406259
  4061e0:	sub    eax,edi
  4061e2:	test   eax,eax
  4061e4:	mov    DWORD PTR [rbx+0xc],eax
  4061e7:	jle    0x4062b2
  4061ed:	test   BYTE PTR [rbx+0x9],0x4
  4061f1:	jne    0x406280
  4061f7:	sub    eax,0x1
  4061fa:	mov    DWORD PTR [rbx+0xc],eax
  4061fd:	nop    DWORD PTR [rax]
  406200:	mov    rdx,rbx
  406203:	mov    ecx,0x20
  406208:	call   0x406040
  40620d:	mov    eax,DWORD PTR [rbx+0xc]
  406210:	mov    edx,eax
  406212:	sub    eax,0x1
  406215:	test   edx,edx
  406217:	mov    DWORD PTR [rbx+0xc],eax
  40621a:	jne    0x406200
  40621c:	test   edi,edi
  40621e:	lea    edx,[rdi-0x1]
  406221:	je     0x4062a0
  406223:	lea    rdi,[rsi+rdx*1+0x1]
  406228:	nop    DWORD PTR [rax+rax*1+0x0]
  406230:	add    rsi,0x1
  406234:	movsx  ecx,BYTE PTR [rsi-0x1]
  406238:	mov    rdx,rbx
  40623b:	call   0x406040
  406240:	cmp    rsi,rdi
  406243:	jne    0x406230
  406245:	jmp    0x40629d
  406247:	nop    WORD PTR [rax+rax*1+0x0]
  406250:	mov    eax,DWORD PTR [rbx+0xc]
  406253:	mov    edi,edx
  406255:	cmp    edi,eax
  406257:	jl     0x4061e0
  406259:	test   edi,edi
  40625b:	mov    DWORD PTR [rbx+0xc],0xffffffff
  406262:	lea    edx,[rdi-0x1]
  406265:	jne    0x406223
  406267:	mov    DWORD PTR [rbx+0xc],0xfffffffe
  40626e:	add    rsp,0x20
  406272:	pop    rbx
  406273:	pop    rsi
  406274:	pop    rdi
  406275:	ret    
  406276:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406280:	test   edi,edi
  406282:	lea    edx,[rdi-0x1]
  406285:	jne    0x406223
  406287:	sub    eax,0x1
  40628a:	mov    DWORD PTR [rbx+0xc],eax
  40628d:	nop    DWORD PTR [rax]
  406290:	mov    rdx,rbx
  406293:	mov    ecx,0x20
  406298:	call   0x406040
  40629d:	mov    eax,DWORD PTR [rbx+0xc]
  4062a0:	lea    edx,[rax-0x1]
  4062a3:	test   eax,eax
  4062a5:	mov    DWORD PTR [rbx+0xc],edx
  4062a8:	jg     0x406290
  4062aa:	add    rsp,0x20
  4062ae:	pop    rbx
  4062af:	pop    rsi
  4062b0:	pop    rdi
  4062b1:	ret    
  4062b2:	test   edi,edi
  4062b4:	lea    edx,[rdi-0x1]
  4062b7:	jne    0x406223
  4062bd:	sub    eax,0x1
  4062c0:	mov    DWORD PTR [rbx+0xc],eax
  4062c3:	jmp    0x40626e
  4062c5:	nop
  4062c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4062d0:	sub    rsp,0x38
  4062d4:	test   ecx,ecx
  4062d6:	mov    DWORD PTR [r8+0x10],0xffffffff
  4062de:	je     0x406324
  4062e0:	lea    rcx,[rsp+0x20]
  4062e5:	mov    r11d,DWORD PTR [r8+0x8]
  4062e9:	mov    BYTE PTR [rsp+0x20],0x2d
  4062ee:	lea    r10,[rcx+0x1]
  4062f2:	and    r11d,0x20
  4062f6:	xor    r9d,r9d
  4062f9:	movzx  eax,BYTE PTR [rdx+r9*1]
  4062fe:	and    eax,0xffffffdf
  406301:	or     eax,r11d
  406304:	mov    BYTE PTR [r10+r9*1],al
  406308:	add    r9,0x1
  40630c:	cmp    r9,0x3
  406310:	jne    0x4062f9
  406312:	lea    rdx,[r10+0x3]
  406316:	sub    rdx,rcx
  406319:	call   0x4061c0
  40631e:	nop
  40631f:	add    rsp,0x38
  406323:	ret    
  406324:	mov    r11d,DWORD PTR [r8+0x8]
  406328:	test   r11d,0x100
  40632f:	je     0x406341
  406331:	lea    rcx,[rsp+0x20]
  406336:	mov    BYTE PTR [rsp+0x20],0x2b
  40633b:	lea    r10,[rcx+0x1]
  40633f:	jmp    0x4062f2
  406341:	test   r11b,0x40
  406345:	je     0x406360
  406347:	lea    rcx,[rsp+0x20]
  40634c:	mov    BYTE PTR [rsp+0x20],0x20
  406351:	lea    r10,[rcx+0x1]
  406355:	jmp    0x4062f2
  406357:	nop    WORD PTR [rax+rax*1+0x0]
  406360:	lea    rcx,[rsp+0x20]
  406365:	mov    r10,rcx
  406368:	jmp    0x4062f2
  40636a:	nop    WORD PTR [rax+rax*1+0x0]
  406370:	push   rbp
  406371:	push   r12
  406373:	push   rdi
  406374:	push   rsi
  406375:	push   rbx
  406376:	mov    rbp,rsp
  406379:	sub    rsp,0x30
  40637d:	cmp    DWORD PTR [rcx+0x14],0xfffffffd
  406381:	mov    rsi,rcx
  406384:	je     0x406420
  40638a:	movzx  edx,WORD PTR [rcx+0x18]
  40638e:	test   dx,dx
  406391:	je     0x4063f2
  406393:	movsxd rax,DWORD PTR [rsi+0x14]
  406397:	mov    r12,rsp
  40639a:	add    rax,0xf
  40639e:	and    rax,0xfffffffffffffff0
  4063a2:	call   0x405d90
  4063a7:	sub    rsp,rax
  4063aa:	lea    r8,[rbp-0x4]
  4063ae:	mov    DWORD PTR [rbp-0x4],0x0
  4063b5:	lea    rbx,[rsp+0x20]
  4063ba:	mov    rcx,rbx
  4063bd:	call   0x40a8d0
  4063c2:	test   eax,eax
  4063c4:	jle    0x406410
  4063c6:	sub    eax,0x1
  4063c9:	lea    rdi,[rbx+rax*1+0x1]
  4063ce:	xchg   ax,ax
  4063d0:	add    rbx,0x1
  4063d4:	movsx  ecx,BYTE PTR [rbx-0x1]
  4063d8:	mov    rdx,rsi
  4063db:	call   0x406040
  4063e0:	cmp    rbx,rdi
  4063e3:	jne    0x4063d0
  4063e5:	mov    rsp,r12
  4063e8:	mov    rsp,rbp
  4063eb:	pop    rbx
  4063ec:	pop    rsi
  4063ed:	pop    rdi
  4063ee:	pop    r12
  4063f0:	pop    rbp
  4063f1:	ret    
  4063f2:	mov    rdx,rsi
  4063f5:	mov    ecx,0x2e
  4063fa:	call   0x406040
  4063ff:	nop
  406400:	mov    rsp,rbp
  406403:	pop    rbx
  406404:	pop    rsi
  406405:	pop    rdi
  406406:	pop    r12
  406408:	pop    rbp
  406409:	ret    
  40640a:	nop    WORD PTR [rax+rax*1+0x0]
  406410:	mov    rdx,rsi
  406413:	mov    ecx,0x2e
  406418:	call   0x406040
  40641d:	jmp    0x4063e5
  40641f:	nop
  406420:	mov    DWORD PTR [rbp-0x4],0x0
  406427:	call   0x40ab48
  40642c:	mov    rdx,QWORD PTR [rax]
  40642f:	lea    rcx,[rbp-0x6]
  406433:	lea    r9,[rbp-0x4]
  406437:	mov    r8d,0x10
  40643d:	call   0x40a650
  406442:	test   eax,eax
  406444:	jle    0x406456
  406446:	movzx  edx,WORD PTR [rbp-0x6]
  40644a:	mov    WORD PTR [rsi+0x18],dx
  40644e:	mov    DWORD PTR [rsi+0x14],eax
  406451:	jmp    0x40638e
  406456:	movzx  edx,WORD PTR [rsi+0x18]
  40645a:	jmp    0x40644e
  40645c:	nop    DWORD PTR [rax+0x0]
  406460:	push   r12
  406462:	push   rbp
  406463:	push   rdi
  406464:	push   rsi
  406465:	push   rbx
  406466:	sub    rsp,0x20
  40646a:	mov    esi,r8d
  40646d:	mov    ebp,ecx
  40646f:	mov    rdi,rdx
  406472:	test   esi,esi
  406474:	mov    rbx,r9
  406477:	mov    r8d,DWORD PTR [r9+0xc]
  40647b:	jle    0x406652
  406481:	cmp    esi,r8d
  406484:	jg     0x4065c0
  40648a:	sub    r8d,esi
  40648d:	mov    DWORD PTR [r9+0xc],r8d
  406491:	test   r8d,r8d
  406494:	js     0x4065c0
  40649a:	mov    eax,DWORD PTR [rbx+0x10]
  40649d:	cmp    eax,r8d
  4064a0:	jge    0x4065c0
  4064a6:	sub    r8d,eax
  4064a9:	test   r8d,r8d
  4064ac:	mov    DWORD PTR [rbx+0xc],r8d
  4064b0:	jle    0x4065cd
  4064b6:	test   eax,eax
  4064b8:	jle    0x406705
  4064be:	sub    r8d,0x1
  4064c2:	test   esi,esi
  4064c4:	mov    DWORD PTR [rbx+0xc],r8d
  4064c8:	jle    0x4064d4
  4064ca:	test   BYTE PTR [rbx+0x9],0x10
  4064ce:	jne    0x4065df
  4064d4:	test   r8d,r8d
  4064d7:	jle    0x40651d
  4064d9:	test   ebp,ebp
  4064db:	jne    0x4064eb
  4064dd:	mov    eax,DWORD PTR [rbx+0x8]
  4064e0:	test   eax,0x1c0
  4064e5:	je     0x4066e5
  4064eb:	sub    r8d,0x1
  4064ef:	test   r8d,r8d
  4064f2:	mov    DWORD PTR [rbx+0xc],r8d
  4064f6:	jle    0x40651d
  4064f8:	test   DWORD PTR [rbx+0x8],0x600
  4064ff:	jne    0x40651d
  406501:	jmp    0x406510
  406503:	mov    rdx,rbx
  406506:	mov    ecx,0x20
  40650b:	call   0x406040
  406510:	mov    eax,DWORD PTR [rbx+0xc]
  406513:	lea    edx,[rax-0x1]
  406516:	test   eax,eax
  406518:	mov    DWORD PTR [rbx+0xc],edx
  40651b:	jg     0x406503
  40651d:	test   ebp,ebp
  40651f:	jne    0x406640
  406525:	mov    eax,DWORD PTR [rbx+0x8]
  406528:	test   ah,0x1
  40652b:	jne    0x406670
  406531:	test   al,0x40
  406533:	jne    0x4066f3
  406539:	mov    edx,DWORD PTR [rbx+0xc]
  40653c:	test   edx,edx
  40653e:	jle    0x406553
  406540:	mov    eax,DWORD PTR [rbx+0x8]
  406543:	and    eax,0x600
  406548:	cmp    eax,0x200
  40654d:	je     0x406682
  406553:	test   esi,esi
  406555:	jle    0x4066b2
  40655b:	lea    r12,[rbx+0x20]
  40655f:	mov    ebp,0x55555556
  406564:	movzx  eax,BYTE PTR [rdi]
  406567:	mov    ecx,0x30
  40656c:	test   al,al
  40656e:	je     0x406577
  406570:	add    rdi,0x1
  406574:	movsx  ecx,al
  406577:	mov    rdx,rbx
  40657a:	call   0x406040
  40657f:	sub    esi,0x1
  406582:	je     0x4067a0
  406588:	test   BYTE PTR [rbx+0x9],0x10
  40658c:	je     0x406564
  40658e:	cmp    WORD PTR [rbx+0x20],0x0
  406593:	je     0x406564
  406595:	mov    eax,esi
  406597:	imul   ebp
  406599:	mov    eax,esi
  40659b:	sar    eax,0x1f
  40659e:	sub    edx,eax
  4065a0:	lea    eax,[rdx+rdx*2]
  4065a3:	cmp    esi,eax
  4065a5:	jne    0x406564
  4065a7:	mov    r8,rbx
  4065aa:	mov    edx,0x1
  4065af:	mov    rcx,r12
  4065b2:	call   0x4060a0
  4065b7:	jmp    0x406564
  4065b9:	nop    DWORD PTR [rax+0x0]
  4065c0:	mov    DWORD PTR [rbx+0xc],0xffffffff
  4065c7:	mov    r8d,0xffffffff
  4065cd:	test   esi,esi
  4065cf:	jle    0x40651d
  4065d5:	test   BYTE PTR [rbx+0x9],0x10
  4065d9:	je     0x40651d
  4065df:	cmp    WORD PTR [rbx+0x20],0x0
  4065e4:	je     0x4064d4
  4065ea:	lea    ecx,[rsi+0x2]
  4065ed:	mov    edx,0x55555556
  4065f2:	mov    eax,ecx
  4065f4:	sar    ecx,0x1f
  4065f7:	imul   edx
  4065f9:	sub    edx,ecx
  4065fb:	cmp    edx,0x1
  4065fe:	jle    0x4064d4
  406604:	test   r8d,r8d
  406607:	jle    0x40651d
  40660d:	mov    eax,r8d
  406610:	sub    eax,edx
  406612:	add    eax,0x1
  406615:	jmp    0x406629
  406617:	nop    WORD PTR [rax+rax*1+0x0]
  406620:	test   r8d,r8d
  406623:	je     0x406794
  406629:	sub    r8d,0x1
  40662d:	cmp    r8d,eax
  406630:	jne    0x406620
  406632:	mov    DWORD PTR [rbx+0xc],r8d
  406636:	jmp    0x4064d4
  40663b:	nop    DWORD PTR [rax+rax*1+0x0]
  406640:	mov    rdx,rbx
  406643:	mov    ecx,0x2d
  406648:	call   0x406040
  40664d:	jmp    0x406539
  406652:	test   r8d,r8d
  406655:	jle    0x406491
  40665b:	sub    r8d,0x1
  40665f:	mov    DWORD PTR [r9+0xc],r8d
  406663:	jmp    0x40649a
  406668:	nop    DWORD PTR [rax+rax*1+0x0]
  406670:	mov    rdx,rbx
  406673:	mov    ecx,0x2b
  406678:	call   0x406040
  40667d:	jmp    0x406539
  406682:	sub    edx,0x1
  406685:	mov    DWORD PTR [rbx+0xc],edx
  406688:	nop    DWORD PTR [rax+rax*1+0x0]
  406690:	mov    rdx,rbx
  406693:	mov    ecx,0x30
  406698:	call   0x406040
  40669d:	mov    eax,DWORD PTR [rbx+0xc]
  4066a0:	lea    edx,[rax-0x1]
  4066a3:	test   eax,eax
  4066a5:	mov    DWORD PTR [rbx+0xc],edx
  4066a8:	jg     0x406690
  4066aa:	test   esi,esi
  4066ac:	jg     0x40655b
  4066b2:	mov    rdx,rbx
  4066b5:	mov    ecx,0x30
  4066ba:	call   0x406040
  4066bf:	mov    eax,DWORD PTR [rbx+0x10]
  4066c2:	test   eax,eax
  4066c4:	jg     0x406732
  4066c6:	test   BYTE PTR [rbx+0x9],0x8
  4066ca:	jne    0x406732
  4066cc:	test   esi,esi
  4066ce:	jne    0x406776
  4066d4:	sub    eax,0x1
  4066d7:	mov    DWORD PTR [rbx+0x10],eax
  4066da:	add    rsp,0x20
  4066de:	pop    rbx
  4066df:	pop    rsi
  4066e0:	pop    rdi
  4066e1:	pop    rbp
  4066e2:	pop    r12
  4066e4:	ret    
  4066e5:	test   ah,0x6
  4066e8:	je     0x406510
  4066ee:	jmp    0x406528
  4066f3:	mov    rdx,rbx
  4066f6:	mov    ecx,0x20
  4066fb:	call   0x406040
  406700:	jmp    0x406539
  406705:	mov    eax,DWORD PTR [rbx+0x8]
  406708:	test   ah,0x8
  40670b:	jne    0x4064be
  406711:	test   esi,esi
  406713:	jle    0x4064d9
  406719:	test   ah,0x10
  40671c:	je     0x4064d9
  406722:	cmp    WORD PTR [rbx+0x20],0x0
  406727:	jne    0x4065ea
  40672d:	jmp    0x4064d9
  406732:	mov    rcx,rbx
  406735:	call   0x406370
  40673a:	test   esi,esi
  40673c:	je     0x40675b
  40673e:	jmp    0x406773
  406740:	movzx  eax,BYTE PTR [rdi]
  406743:	mov    ecx,0x30
  406748:	test   al,al
  40674a:	je     0x406753
  40674c:	add    rdi,0x1
  406750:	movsx  ecx,al
  406753:	mov    rdx,rbx
  406756:	call   0x406040
  40675b:	mov    eax,DWORD PTR [rbx+0x10]
  40675e:	lea    edx,[rax-0x1]
  406761:	test   eax,eax
  406763:	mov    DWORD PTR [rbx+0x10],edx
  406766:	jg     0x406740
  406768:	add    rsp,0x20
  40676c:	pop    rbx
  40676d:	pop    rsi
  40676e:	pop    rdi
  40676f:	pop    rbp
  406770:	pop    r12
  406772:	ret    
  406773:	mov    eax,DWORD PTR [rbx+0x10]
  406776:	add    eax,esi
  406778:	mov    DWORD PTR [rbx+0x10],eax
  40677b:	nop    DWORD PTR [rax+rax*1+0x0]
  406780:	mov    rdx,rbx
  406783:	mov    ecx,0x30
  406788:	call   0x406040
  40678d:	add    esi,0x1
  406790:	jne    0x406780
  406792:	jmp    0x40675b
  406794:	mov    DWORD PTR [rbx+0xc],0x0
  40679b:	jmp    0x40651d
  4067a0:	mov    eax,DWORD PTR [rbx+0x10]
  4067a3:	test   eax,eax
  4067a5:	jle    0x4067b1
  4067a7:	mov    rcx,rbx
  4067aa:	call   0x406370
  4067af:	jmp    0x40675b
  4067b1:	test   BYTE PTR [rbx+0x9],0x8
  4067b5:	jne    0x4067a7
  4067b7:	jmp    0x4066d4
  4067bc:	nop    DWORD PTR [rax+0x0]
  4067c0:	push   rsi
  4067c1:	push   rbx
  4067c2:	sub    rsp,0x68
  4067c6:	mov    r8d,DWORD PTR [rdx+0x10]
  4067ca:	fld    TBYTE PTR [rcx]
  4067cc:	mov    rbx,rdx
  4067cf:	test   r8d,r8d
  4067d2:	js     0x406870
  4067d8:	lea    rdx,[rsp+0x30]
  4067dd:	lea    r9,[rsp+0x4c]
  4067e2:	mov    ecx,0x3
  4067e7:	fstp   TBYTE PTR [rsp+0x50]
  4067eb:	mov    rax,QWORD PTR [rsp+0x50]
  4067f0:	mov    QWORD PTR [rsp+0x30],rax
  4067f5:	mov    rax,QWORD PTR [rsp+0x58]
  4067fa:	mov    QWORD PTR [rsp+0x38],rax
  4067ff:	lea    rax,[rsp+0x48]
  406804:	mov    QWORD PTR [rsp+0x20],rax
  406809:	call   0x405f40
  40680e:	mov    r8d,DWORD PTR [rsp+0x4c]
  406813:	mov    rsi,rax
  406816:	cmp    r8d,0xffff8000
  40681d:	je     0x406882
  40681f:	mov    ecx,DWORD PTR [rsp+0x48]
  406823:	mov    rdx,rax
  406826:	mov    r9,rbx
  406829:	call   0x406460
  40682e:	mov    eax,DWORD PTR [rbx+0xc]
  406831:	lea    edx,[rax-0x1]
  406834:	test   eax,eax
  406836:	mov    DWORD PTR [rbx+0xc],edx
  406839:	jle    0x40685e
  40683b:	nop    DWORD PTR [rax+rax*1+0x0]
  406840:	mov    rdx,rbx
  406843:	mov    ecx,0x20
  406848:	call   0x406040
  40684d:	mov    r8d,DWORD PTR [rbx+0xc]
  406851:	lea    r9d,[r8-0x1]
  406855:	test   r8d,r8d
  406858:	mov    DWORD PTR [rbx+0xc],r9d
  40685c:	jg     0x406840
  40685e:	mov    rcx,rsi
  406861:	call   0x408250
  406866:	nop
  406867:	add    rsp,0x68
  40686b:	pop    rbx
  40686c:	pop    rsi
  40686d:	ret    
  40686e:	xchg   ax,ax
  406870:	mov    DWORD PTR [rdx+0x10],0x6
  406877:	mov    r8d,0x6
  40687d:	jmp    0x4067d8
  406882:	mov    ecx,DWORD PTR [rsp+0x48]
  406886:	mov    r8,rbx
  406889:	mov    rdx,rax
  40688c:	call   0x4062d0
  406891:	mov    rcx,rsi
  406894:	call   0x408250
  406899:	nop
  40689a:	add    rsp,0x68
  40689e:	pop    rbx
  40689f:	pop    rsi
  4068a0:	ret    
  4068a1:	nop    DWORD PTR [rax+rax*1+0x0]
  4068a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4068b0:	push   rbp
  4068b1:	push   r13
  4068b3:	push   r12
  4068b5:	push   rdi
  4068b6:	push   rsi
  4068b7:	push   rbx
  4068b8:	sub    rsp,0x28
  4068bc:	lea    rbp,[rsp+0x80]
  4068c4:	mov    ebx,DWORD PTR [rdx+0x10]
  4068c7:	mov    r11d,DWORD PTR [rdx+0x8]
  4068cb:	mov    r8d,0x0
  4068d1:	mov    rsi,rdx
  4068d4:	test   ebx,ebx
  4068d6:	cmovns r8d,ebx
  4068da:	add    r8d,0x17
  4068de:	test   r11d,0x1000
  4068e5:	je     0x4068f2
  4068e7:	cmp    WORD PTR [rdx+0x20],0x0
  4068ec:	jne    0x406ae2
  4068f2:	movsxd r13,DWORD PTR [rsi+0xc]
  4068f6:	movsxd rax,r8d
  4068f9:	cmp    r8d,r13d
  4068fc:	cmovl  rax,r13
  406900:	add    rax,0x1e
  406904:	and    rax,0xfffffffffffffff0
  406908:	call   0x405d90
  40690d:	sub    rsp,rax
  406910:	test   r11b,0x80
  406914:	lea    r12,[rsp+0x20]
  406919:	je     0x40692c
  40691b:	test   rcx,rcx
  40691e:	js     0x406b70
  406924:	and    r11b,0x7f
  406928:	mov    DWORD PTR [rsi+0x8],r11d
  40692c:	test   rcx,rcx
  40692f:	je     0x406b78
  406935:	mov    r10d,r11d
  406938:	mov    r8,r12
  40693b:	movabs r9,0xcccccccccccccccd
  406945:	and    r10d,0x1000
  40694c:	jmp    0x406983
  40694e:	xchg   ax,ax
  406950:	cmp    r12,rdi
  406953:	je     0x406980
  406955:	test   r10d,r10d
  406958:	je     0x406980
  40695a:	cmp    WORD PTR [rsi+0x20],0x0
  40695f:	je     0x406980
  406961:	mov    rax,rdi
  406964:	sub    rax,r12
  406967:	cqo    
  406969:	shr    rdx,0x3e
  40696d:	add    rax,rdx
  406970:	and    eax,0x3
  406973:	sub    rax,rdx
  406976:	cmp    rax,0x3
  40697a:	je     0x406ac0
  406980:	mov    r8,rdi
  406983:	mov    rax,rcx
  406986:	lea    rdi,[r8+0x1]
  40698a:	mul    r9
  40698d:	shr    rdx,0x3
  406991:	lea    rax,[rdx+rdx*4]
  406995:	add    rax,rax
  406998:	sub    rcx,rax
  40699b:	add    ecx,0x30
  40699e:	test   rdx,rdx
  4069a1:	mov    BYTE PTR [r8],cl
  4069a4:	mov    rcx,rdx
  4069a7:	jne    0x406950
  4069a9:	test   ebx,ebx
  4069ab:	jle    0x4069e5
  4069ad:	mov    rax,r12
  4069b0:	sub    rax,rdi
  4069b3:	add    eax,ebx
  4069b5:	test   eax,eax
  4069b7:	jle    0x4069e5
  4069b9:	sub    eax,0x1
  4069bc:	mov    rdx,rax
  4069bf:	lea    rcx,[rdi+rax*1+0x1]
  4069c4:	mov    rax,rdi
  4069c7:	nop    WORD PTR [rax+rax*1+0x0]
  4069d0:	add    rax,0x1
  4069d4:	mov    BYTE PTR [rax-0x1],0x30
  4069d8:	cmp    rax,rcx
  4069db:	jne    0x4069d0
  4069dd:	movsxd rax,edx
  4069e0:	lea    rdi,[rdi+rax*1+0x1]
  4069e5:	cmp    r12,rdi
  4069e8:	jne    0x4069f5
  4069ea:	test   ebx,ebx
  4069ec:	je     0x4069f5
  4069ee:	mov    BYTE PTR [rdi],0x30
  4069f1:	add    rdi,0x1
  4069f5:	test   r13d,r13d
  4069f8:	jle    0x406a5e
  4069fa:	mov    rax,r12
  4069fd:	sub    rax,rdi
  406a00:	add    r13d,eax
  406a03:	test   r13d,r13d
  406a06:	mov    DWORD PTR [rsi+0xc],r13d
  406a0a:	jle    0x406a5e
  406a0c:	test   r11d,0x1c0
  406a13:	je     0x406a1d
  406a15:	sub    r13d,0x1
  406a19:	mov    DWORD PTR [rsi+0xc],r13d
  406a1d:	test   ebx,ebx
  406a1f:	js     0x406b20
  406a25:	test   r11d,0x400
  406a2c:	jne    0x406a5e
  406a2e:	mov    eax,DWORD PTR [rsi+0xc]
  406a31:	lea    edx,[rax-0x1]
  406a34:	test   eax,eax
  406a36:	mov    DWORD PTR [rsi+0xc],edx
  406a39:	jle    0x406a5e
  406a3b:	nop    DWORD PTR [rax+rax*1+0x0]
  406a40:	mov    rdx,rsi
  406a43:	mov    ecx,0x20
  406a48:	call   0x406040
  406a4d:	mov    eax,DWORD PTR [rsi+0xc]
  406a50:	lea    edx,[rax-0x1]
  406a53:	test   eax,eax
  406a55:	mov    DWORD PTR [rsi+0xc],edx
  406a58:	jg     0x406a40
  406a5a:	mov    r11d,DWORD PTR [rsi+0x8]
  406a5e:	test   r11b,0x80
  406a62:	je     0x406ad0
  406a64:	lea    rbx,[rdi+0x1]
  406a68:	mov    BYTE PTR [rdi],0x2d
  406a6b:	cmp    r12,rbx
  406a6e:	jae    0x406a9e
  406a70:	sub    rbx,0x1
  406a74:	movsx  ecx,BYTE PTR [rbx]
  406a77:	mov    rdx,rsi
  406a7a:	call   0x406040
  406a7f:	cmp    rbx,r12
  406a82:	jne    0x406a70
  406a84:	mov    eax,DWORD PTR [rsi+0xc]
  406a87:	lea    edx,[rax-0x1]
  406a8a:	test   eax,eax
  406a8c:	mov    DWORD PTR [rsi+0xc],edx
  406a8f:	jle    0x406aab
  406a91:	mov    rdx,rsi
  406a94:	mov    ecx,0x20
  406a99:	call   0x406040
  406a9e:	mov    eax,DWORD PTR [rsi+0xc]
  406aa1:	lea    edx,[rax-0x1]
  406aa4:	test   eax,eax
  406aa6:	mov    DWORD PTR [rsi+0xc],edx
  406aa9:	jg     0x406a91
  406aab:	lea    rsp,[rbp-0x58]
  406aaf:	pop    rbx
  406ab0:	pop    rsi
  406ab1:	pop    rdi
  406ab2:	pop    r12
  406ab4:	pop    r13
  406ab6:	pop    rbp
  406ab7:	ret    
  406ab8:	nop    DWORD PTR [rax+rax*1+0x0]
  406ac0:	lea    rdi,[r8+0x2]
  406ac4:	mov    BYTE PTR [r8+0x1],0x2c
  406ac9:	jmp    0x406980
  406ace:	xchg   ax,ax
  406ad0:	test   r11d,0x100
  406ad7:	je     0x406b00
  406ad9:	lea    rbx,[rdi+0x1]
  406add:	mov    BYTE PTR [rdi],0x2b
  406ae0:	jmp    0x406a6b
  406ae2:	mov    eax,r8d
  406ae5:	mov    edx,0x55555556
  406aea:	imul   edx
  406aec:	mov    eax,r8d
  406aef:	sar    eax,0x1f
  406af2:	sub    edx,eax
  406af4:	add    r8d,edx
  406af7:	jmp    0x4068f2
  406afc:	nop    DWORD PTR [rax+0x0]
  406b00:	and    r11d,0x40
  406b04:	mov    rbx,rdi
  406b07:	je     0x406a6b
  406b0d:	add    rbx,0x1
  406b11:	mov    BYTE PTR [rdi],0x20
  406b14:	jmp    0x406a6b
  406b19:	nop    DWORD PTR [rax+0x0]
  406b20:	mov    eax,r11d
  406b23:	and    eax,0x600
  406b28:	cmp    eax,0x200
  406b2d:	jne    0x406a25
  406b33:	mov    eax,DWORD PTR [rsi+0xc]
  406b36:	lea    ecx,[rax-0x1]
  406b39:	test   eax,eax
  406b3b:	mov    DWORD PTR [rsi+0xc],ecx
  406b3e:	jle    0x406a5e
  406b44:	lea    rdx,[rdi+rcx*1+0x1]
  406b49:	mov    rax,rdi
  406b4c:	nop    DWORD PTR [rax+0x0]
  406b50:	add    rax,0x1
  406b54:	mov    BYTE PTR [rax-0x1],0x30
  406b58:	cmp    rax,rdx
  406b5b:	jne    0x406b50
  406b5d:	lea    rdi,[rdi+rcx*1+0x1]
  406b62:	mov    DWORD PTR [rsi+0xc],0xffffffff
  406b69:	jmp    0x406a5e
  406b6e:	xchg   ax,ax
  406b70:	neg    rcx
  406b73:	jmp    0x40692c
  406b78:	mov    rdi,r12
  406b7b:	jmp    0x4069a9
  406b80:	push   rdi
  406b81:	push   rsi
  406b82:	push   rbx
  406b83:	sub    rsp,0x20
  406b87:	mov    rsi,r9
  406b8a:	lea    r9d,[r8-0x1]
  406b8e:	mov    r8d,0x66666667
  406b94:	mov    r10,rdx
  406b97:	mov    eax,r9d
  406b9a:	movsxd rbx,r9d
  406b9d:	sar    r9d,0x1f
  406ba1:	imul   r8d
  406ba4:	sar    edx,0x2
  406ba7:	mov    r8d,edx
  406baa:	sub    r8d,r9d
  406bad:	mov    r9d,0x1
  406bb3:	je     0x406bdb
  406bb5:	mov    r11d,0x66666667
  406bbb:	nop    DWORD PTR [rax+rax*1+0x0]
  406bc0:	mov    eax,r8d
  406bc3:	sar    r8d,0x1f
  406bc7:	add    r9d,0x1
  406bcb:	imul   r11d
  406bce:	mov    eax,edx
  406bd0:	sar    eax,0x2
  406bd3:	sub    eax,r8d
  406bd6:	mov    r8d,eax
  406bd9:	jne    0x406bc0
  406bdb:	mov    edi,DWORD PTR [rsi+0x2c]
  406bde:	mov    eax,DWORD PTR [rsi+0xc]
  406be1:	cmp    r9d,edi
  406be4:	cmovge edi,r9d
  406be8:	lea    edx,[rdi+0x2]
  406beb:	cmp    eax,edx
  406bed:	jg     0x406c42
  406bef:	mov    DWORD PTR [rsi+0xc],0xffffffff
  406bf6:	mov    r9,rsi
  406bf9:	mov    rdx,r10
  406bfc:	mov    r8d,0x1
  406c02:	call   0x406460
  406c07:	mov    ecx,DWORD PTR [rsi+0x8]
  406c0a:	mov    eax,DWORD PTR [rsi+0x2c]
  406c0d:	mov    rdx,rsi
  406c10:	mov    DWORD PTR [rsi+0x10],eax
  406c13:	mov    eax,ecx
  406c15:	and    ecx,0x20
  406c18:	or     eax,0x1c0
  406c1d:	or     ecx,0x45
  406c20:	mov    DWORD PTR [rsi+0x8],eax
  406c23:	call   0x406040
  406c28:	lea    r9d,[rdi+0x1]
  406c2c:	add    DWORD PTR [rsi+0xc],r9d
  406c30:	mov    rdx,rsi
  406c33:	mov    rcx,rbx
  406c36:	add    rsp,0x20
  406c3a:	pop    rbx
  406c3b:	pop    rsi
  406c3c:	pop    rdi
  406c3d:	jmp    0x4068b0
  406c42:	sub    eax,edx
  406c44:	mov    DWORD PTR [rsi+0xc],eax
  406c47:	jmp    0x406bf6
  406c49:	nop    DWORD PTR [rax+0x0]
  406c50:	push   rsi
  406c51:	push   rbx
  406c52:	sub    rsp,0x68
  406c56:	mov    eax,DWORD PTR [rdx+0x10]
  406c59:	fld    TBYTE PTR [rcx]
  406c5b:	mov    rbx,rdx
  406c5e:	test   eax,eax
  406c60:	lea    r8d,[rax+0x1]
  406c64:	js     0x406cd0
  406c66:	lea    rdx,[rsp+0x30]
  406c6b:	lea    r9,[rsp+0x4c]
  406c70:	mov    ecx,0x2
  406c75:	fstp   TBYTE PTR [rsp+0x50]
  406c79:	mov    rax,QWORD PTR [rsp+0x50]
  406c7e:	mov    QWORD PTR [rsp+0x30],rax
  406c83:	mov    rax,QWORD PTR [rsp+0x58]
  406c88:	mov    QWORD PTR [rsp+0x38],rax
  406c8d:	lea    rax,[rsp+0x48]
  406c92:	mov    QWORD PTR [rsp+0x20],rax
  406c97:	call   0x405f40
  406c9c:	mov    r8d,DWORD PTR [rsp+0x4c]
  406ca1:	mov    rsi,rax
  406ca4:	cmp    r8d,0xffff8000
  406cab:	je     0x406ce0
  406cad:	mov    ecx,DWORD PTR [rsp+0x48]
  406cb1:	mov    r9,rbx
  406cb4:	mov    rdx,rax
  406cb7:	call   0x406b80
  406cbc:	mov    rcx,rsi
  406cbf:	call   0x408250
  406cc4:	nop
  406cc5:	add    rsp,0x68
  406cc9:	pop    rbx
  406cca:	pop    rsi
  406ccb:	ret    
  406ccc:	nop    DWORD PTR [rax+0x0]
  406cd0:	mov    DWORD PTR [rdx+0x10],0x6
  406cd7:	mov    r8d,0x7
  406cdd:	jmp    0x406c66
  406cdf:	nop
  406ce0:	mov    ecx,DWORD PTR [rsp+0x48]
  406ce4:	mov    r8,rbx
  406ce7:	mov    rdx,rax
  406cea:	call   0x4062d0
  406cef:	mov    rcx,rsi
  406cf2:	call   0x408250
  406cf7:	nop
  406cf8:	add    rsp,0x68
  406cfc:	pop    rbx
  406cfd:	pop    rsi
  406cfe:	ret    
  406cff:	nop
  406d00:	push   rsi
  406d01:	push   rbx
  406d02:	sub    rsp,0x78
  406d06:	mov    r8d,DWORD PTR [rdx+0x10]
  406d0a:	fld    TBYTE PTR [rcx]
  406d0c:	mov    rbx,rdx
  406d0f:	test   r8d,r8d
  406d12:	js     0x406e50
  406d18:	je     0x406e30
  406d1e:	lea    rdx,[rsp+0x40]
  406d23:	lea    r9,[rsp+0x5c]
  406d28:	mov    ecx,0x2
  406d2d:	fstp   TBYTE PTR [rsp+0x60]
  406d31:	mov    rax,QWORD PTR [rsp+0x60]
  406d36:	mov    QWORD PTR [rsp+0x40],rax
  406d3b:	mov    rax,QWORD PTR [rsp+0x68]
  406d40:	mov    QWORD PTR [rsp+0x48],rax
  406d45:	lea    rax,[rsp+0x58]
  406d4a:	mov    QWORD PTR [rsp+0x20],rax
  406d4f:	call   0x405f40
  406d54:	mov    r8d,DWORD PTR [rsp+0x5c]
  406d59:	mov    rsi,rax
  406d5c:	cmp    r8d,0xffff8000
  406d63:	je     0x406e70
  406d69:	cmp    r8d,0xfffffffd
  406d6d:	jl     0x406df0
  406d73:	mov    eax,DWORD PTR [rbx+0x10]
  406d76:	cmp    r8d,eax
  406d79:	jg     0x406df0
  406d7b:	test   BYTE PTR [rbx+0x9],0x8
  406d7f:	jne    0x406e62
  406d85:	mov    rcx,rsi
  406d88:	mov    DWORD PTR [rsp+0x3c],r8d
  406d8d:	call   0x40aad8
  406d92:	mov    r8d,DWORD PTR [rsp+0x3c]
  406d97:	sub    eax,r8d
  406d9a:	test   eax,eax
  406d9c:	mov    DWORD PTR [rbx+0x10],eax
  406d9f:	js     0x406e81
  406da5:	mov    ecx,DWORD PTR [rsp+0x58]
  406da9:	mov    rdx,rsi
  406dac:	mov    r9,rbx
  406daf:	call   0x406460
  406db4:	mov    eax,DWORD PTR [rbx+0xc]
  406db7:	lea    edx,[rax-0x1]
  406dba:	test   eax,eax
  406dbc:	mov    DWORD PTR [rbx+0xc],edx
  406dbf:	jle    0x406e1d
  406dc1:	mov    rdx,rbx
  406dc4:	mov    ecx,0x20
  406dc9:	call   0x406040
  406dce:	mov    r8d,DWORD PTR [rbx+0xc]
  406dd2:	lea    r9d,[r8-0x1]
  406dd6:	test   r8d,r8d
  406dd9:	mov    DWORD PTR [rbx+0xc],r9d
  406ddd:	jg     0x406dc1
  406ddf:	mov    rcx,rsi
  406de2:	call   0x408250
  406de7:	nop
  406de8:	add    rsp,0x78
  406dec:	pop    rbx
  406ded:	pop    rsi
  406dee:	ret    
  406def:	nop
  406df0:	test   BYTE PTR [rbx+0x9],0x8
  406df4:	jne    0x406e42
  406df6:	mov    rcx,rsi
  406df9:	mov    DWORD PTR [rsp+0x3c],r8d
  406dfe:	call   0x40aad8
  406e03:	mov    r8d,DWORD PTR [rsp+0x3c]
  406e08:	sub    eax,0x1
  406e0b:	mov    DWORD PTR [rbx+0x10],eax
  406e0e:	mov    ecx,DWORD PTR [rsp+0x58]
  406e12:	mov    r9,rbx
  406e15:	mov    rdx,rsi
  406e18:	call   0x406b80
  406e1d:	mov    rcx,rsi
  406e20:	call   0x408250
  406e25:	nop
  406e26:	add    rsp,0x78
  406e2a:	pop    rbx
  406e2b:	pop    rsi
  406e2c:	ret    
  406e2d:	nop    DWORD PTR [rax]
  406e30:	mov    DWORD PTR [rdx+0x10],0x1
  406e37:	mov    r8d,0x1
  406e3d:	jmp    0x406d1e
  406e42:	sub    DWORD PTR [rbx+0x10],0x1
  406e46:	jmp    0x406e0e
  406e48:	nop    DWORD PTR [rax+rax*1+0x0]
  406e50:	mov    DWORD PTR [rdx+0x10],0x6
  406e57:	mov    r8d,0x6
  406e5d:	jmp    0x406d1e
  406e62:	sub    eax,r8d
  406e65:	mov    DWORD PTR [rbx+0x10],eax
  406e68:	jmp    0x406da5
  406e6d:	nop    DWORD PTR [rax]
  406e70:	mov    ecx,DWORD PTR [rsp+0x58]
  406e74:	mov    r8,rbx
  406e77:	mov    rdx,rax
  406e7a:	call   0x4062d0
  406e7f:	jmp    0x406e1d
  406e81:	mov    edx,DWORD PTR [rbx+0xc]
  406e84:	test   edx,edx
  406e86:	jle    0x406da5
  406e8c:	add    eax,edx
  406e8e:	mov    DWORD PTR [rbx+0xc],eax
  406e91:	jmp    0x406da5
  406e96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406ea0:	push   rbp
  406ea1:	push   r14
  406ea3:	push   r13
  406ea5:	push   r12
  406ea7:	push   rdi
  406ea8:	push   rsi
  406ea9:	push   rbx
  406eaa:	mov    rbp,rsp
  406ead:	sub    rsp,0x20
  406eb1:	mov    r10d,0x12
  406eb7:	mov    eax,0x18
  406ebc:	cmp    ecx,0x6f
  406ebf:	mov    rbx,r8
  406ec2:	mov    r8d,DWORD PTR [r8+0x10]
  406ec6:	mov    r11d,ecx
  406ec9:	setne  cl
  406ecc:	mov    edi,DWORD PTR [rbx+0x8]
  406ecf:	movzx  ecx,cl
  406ed2:	cmovne eax,r10d
  406ed6:	mov    r10b,0x0
  406ed9:	add    ecx,0x3
  406edc:	test   r8d,r8d
  406edf:	mov    r9,rdx
  406ee2:	cmovns r10d,r8d
  406ee6:	add    r10d,eax
  406ee9:	test   edi,0x1000
  406eef:	je     0x406efc
  406ef1:	cmp    WORD PTR [rbx+0x20],0x0
  406ef6:	jne    0x4070c3
  406efc:	movsxd r12,DWORD PTR [rbx+0xc]
  406f00:	movsxd rax,r10d
  406f03:	cmp    r10d,r12d
  406f06:	cmovl  rax,r12
  406f0a:	add    rax,0x1e
  406f0e:	and    rax,0xfffffffffffffff0
  406f12:	call   0x405d90
  406f17:	xor    edx,edx
  406f19:	sub    rsp,rax
  406f1c:	cmp    r11d,0x6f
  406f20:	lea    rsi,[rsp+0x20]
  406f25:	setne  dl
  406f28:	test   r9,r9
  406f2b:	lea    edx,[rdx*8+0x7]
  406f32:	mov    r10,rsi
  406f35:	je     0x4071e2
  406f3b:	mov    r13d,r11d
  406f3e:	and    r13d,0x20
  406f42:	jmp    0x406f50
  406f44:	shr    r9,cl
  406f47:	mov    BYTE PTR [r10-0x1],r14b
  406f4b:	test   r9,r9
  406f4e:	je     0x406f75
  406f50:	mov    eax,edx
  406f52:	add    r10,0x1
  406f56:	and    eax,r9d
  406f59:	lea    r14d,[rax+0x30]
  406f5d:	cmp    r14b,0x39
  406f61:	jbe    0x406f44
  406f63:	add    eax,0x37
  406f66:	shr    r9,cl
  406f69:	or     eax,r13d
  406f6c:	test   r9,r9
  406f6f:	mov    BYTE PTR [r10-0x1],al
  406f73:	jne    0x406f50
  406f75:	cmp    rsi,r10
  406f78:	je     0x4071e2
  406f7e:	test   r8d,r8d
  406f81:	jle    0x407142
  406f87:	mov    rax,rsi
  406f8a:	sub    rax,r10
  406f8d:	add    eax,r8d
  406f90:	test   eax,eax
  406f92:	jle    0x407142
  406f98:	sub    eax,0x1
  406f9b:	mov    rdx,rax
  406f9e:	lea    rcx,[r10+rax*1+0x1]
  406fa3:	mov    rax,r10
  406fa6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406fb0:	add    rax,0x1
  406fb4:	mov    BYTE PTR [rax-0x1],0x30
  406fb8:	cmp    rax,rcx
  406fbb:	jne    0x406fb0
  406fbd:	movsxd rax,edx
  406fc0:	lea    r10,[r10+rax*1+0x1]
  406fc5:	cmp    rsi,r10
  406fc8:	jne    0x406fe0
  406fca:	test   r8d,r8d
  406fcd:	je     0x406fe0
  406fcf:	mov    BYTE PTR [r10],0x30
  406fd3:	add    r10,0x1
  406fd7:	nop    WORD PTR [rax+rax*1+0x0]
  406fe0:	mov    rax,r10
  406fe3:	sub    rax,rsi
  406fe6:	cmp    r12d,eax
  406fe9:	jle    0x407110
  406fef:	sub    r12d,eax
  406ff2:	test   r12d,r12d
  406ff5:	mov    DWORD PTR [rbx+0xc],r12d
  406ff9:	jle    0x407247
  406fff:	cmp    r11d,0x6f
  407003:	mov    edx,DWORD PTR [rbx+0x8]
  407006:	je     0x4071d0
  40700c:	test   dh,0x8
  40700f:	je     0x407190
  407015:	lea    r13d,[r12-0x2]
  40701a:	test   r13d,r13d
  40701d:	jle    0x407028
  40701f:	test   r8d,r8d
  407022:	js     0x4070dd
  407028:	test   r13d,r13d
  40702b:	mov    BYTE PTR [r10],r11b
  40702e:	lea    rdi,[r10+0x2]
  407032:	mov    BYTE PTR [r10+0x1],0x30
  407037:	jle    0x407138
  40703d:	and    dh,0x4
  407040:	jne    0x407163
  407046:	lea    r14d,[r13-0x1]
  40704a:	mov    r12d,r14d
  40704d:	nop    DWORD PTR [rax]
  407050:	sub    r12d,0x1
  407054:	mov    rdx,rbx
  407057:	mov    ecx,0x20
  40705c:	call   0x406040
  407061:	lea    eax,[r12+0x1]
  407066:	test   eax,eax
  407068:	jg     0x407050
  40706a:	test   r14d,r14d
  40706d:	lea    r13d,[r14-0x1]
  407071:	mov    r12d,0x0
  407077:	cmovns r12d,r14d
  40707b:	sub    r13d,r12d
  40707e:	cmp    rsi,rdi
  407081:	jb     0x407170
  407087:	nop    WORD PTR [rax+rax*1+0x0]
  407090:	test   r13d,r13d
  407093:	lea    esi,[r13-0x1]
  407097:	jle    0x4070b5
  407099:	nop    DWORD PTR [rax+0x0]
  4070a0:	mov    rdx,rbx
  4070a3:	mov    ecx,0x20
  4070a8:	sub    esi,0x1
  4070ab:	call   0x406040
  4070b0:	cmp    esi,0xffffffff
  4070b3:	jne    0x4070a0
  4070b5:	mov    rsp,rbp
  4070b8:	pop    rbx
  4070b9:	pop    rsi
  4070ba:	pop    rdi
  4070bb:	pop    r12
  4070bd:	pop    r13
  4070bf:	pop    r14
  4070c1:	pop    rbp
  4070c2:	ret    
  4070c3:	mov    eax,r10d
  4070c6:	mov    edx,0x55555556
  4070cb:	imul   edx
  4070cd:	mov    eax,r10d
  4070d0:	sar    eax,0x1f
  4070d3:	sub    edx,eax
  4070d5:	add    r10d,edx
  4070d8:	jmp    0x406efc
  4070dd:	mov    eax,edx
  4070df:	and    eax,0x600
  4070e4:	cmp    eax,0x200
  4070e9:	je     0x4071f0
  4070ef:	mov    r12d,r13d
  4070f2:	test   dh,0x8
  4070f5:	mov    r13d,r12d
  4070f8:	mov    rdi,r10
  4070fb:	je     0x40703d
  407101:	mov    r13d,r12d
  407104:	jmp    0x407028
  407109:	nop    DWORD PTR [rax+0x0]
  407110:	mov    DWORD PTR [rbx+0xc],0xffffffff
  407117:	mov    r13d,0xffffffff
  40711d:	cmp    r11d,0x6f
  407121:	je     0x407135
  407123:	mov    edx,DWORD PTR [rbx+0x8]
  407126:	mov    eax,edx
  407128:	and    eax,0x800
  40712d:	test   eax,eax
  40712f:	jne    0x407028
  407135:	mov    rdi,r10
  407138:	cmp    rsi,rdi
  40713b:	jb     0x407170
  40713d:	jmp    0x4070b5
  407142:	cmp    r11d,0x6f
  407146:	jne    0x406fc5
  40714c:	test   BYTE PTR [rbx+0x9],0x8
  407150:	je     0x406fc5
  407156:	mov    BYTE PTR [r10],0x30
  40715a:	add    r10,0x1
  40715e:	jmp    0x406fc5
  407163:	cmp    rsi,rdi
  407166:	jae    0x40724f
  40716c:	nop    DWORD PTR [rax+0x0]
  407170:	sub    rdi,0x1
  407174:	movsx  ecx,BYTE PTR [rdi]
  407177:	mov    rdx,rbx
  40717a:	call   0x406040
  40717f:	cmp    rsi,rdi
  407182:	jb     0x407170
  407184:	jmp    0x407090
  407189:	nop    DWORD PTR [rax+0x0]
  407190:	test   r8d,r8d
  407193:	jns    0x4070f2
  407199:	mov    eax,edx
  40719b:	and    eax,0x600
  4071a0:	cmp    eax,0x200
  4071a5:	je     0x40723e
  4071ab:	cmp    r11d,0x6f
  4071af:	jne    0x4070f2
  4071b5:	and    dh,0x4
  4071b8:	jne    0x4071da
  4071ba:	lea    r14d,[r12-0x1]
  4071bf:	mov    rdi,r10
  4071c2:	jmp    0x40704a
  4071c7:	nop    WORD PTR [rax+rax*1+0x0]
  4071d0:	test   r8d,r8d
  4071d3:	js     0x407199
  4071d5:	and    dh,0x4
  4071d8:	je     0x4071ba
  4071da:	mov    rdi,r10
  4071dd:	mov    r13d,r12d
  4071e0:	jmp    0x40717f
  4071e2:	and    edi,0xfffff7ff
  4071e8:	mov    DWORD PTR [rbx+0x8],edi
  4071eb:	jmp    0x406f7e
  4071f0:	lea    r8d,[r12-0x3]
  4071f5:	mov    r12d,r8d
  4071f8:	mov    eax,r12d
  4071fb:	lea    rcx,[r10+rax*1+0x1]
  407200:	mov    rax,r10
  407203:	add    rax,0x1
  407207:	mov    BYTE PTR [rax-0x1],0x30
  40720b:	cmp    rax,rcx
  40720e:	jne    0x407203
  407210:	movsxd rax,r8d
  407213:	cmp    r11d,0x6f
  407217:	lea    r10,[r10+rax*1+0x1]
  40721c:	je     0x407230
  40721e:	mov    eax,edx
  407220:	mov    r13d,0xffffffff
  407226:	and    eax,0x800
  40722b:	jmp    0x40712d
  407230:	mov    rdi,r10
  407233:	mov    r13d,0xffffffff
  407239:	jmp    0x407138
  40723e:	sub    r12d,0x1
  407242:	mov    r8d,r12d
  407245:	jmp    0x4071f8
  407247:	mov    r13d,r12d
  40724a:	jmp    0x40711d
  40724f:	lea    esi,[r13-0x1]
  407253:	jmp    0x4070a0
  407258:	nop    DWORD PTR [rax+rax*1+0x0]
  407260:	push   r13
  407262:	push   r12
  407264:	push   rbp
  407265:	push   rdi
  407266:	push   rsi
  407267:	push   rbx
  407268:	sub    rsp,0x68
  40726c:	mov    r9,QWORD PTR [rcx]
  40726f:	mov    r10d,DWORD PTR [rcx+0x8]
  407273:	mov    rbx,rdx
  407276:	mov    rax,r9
  407279:	mov    QWORD PTR [rsp+0x30],r9
  40727e:	mov    DWORD PTR [rsp+0x38],r10d
  407283:	shr    rax,0x20
  407287:	mov    r8,r10
  40728a:	and    eax,0x7fffffff
  40728f:	or     r9d,eax
  407292:	lea    eax,[r10+r10*1]
  407296:	mov    edx,r9d
  407299:	neg    edx
  40729b:	and    eax,0xfffe
  4072a0:	or     edx,r9d
  4072a3:	shr    edx,0x1f
  4072a6:	or     edx,eax
  4072a8:	mov    eax,0xfffe
  4072ad:	sub    eax,edx
  4072af:	sar    eax,0x10
  4072b2:	test   eax,eax
  4072b4:	jne    0x4076a0
  4072ba:	movzx  esi,WORD PTR [rsp+0x38]
  4072bf:	mov    ecx,esi
  4072c1:	and    ecx,0x8000
  4072c7:	je     0x4072d0
  4072c9:	or     DWORD PTR [rbx+0x8],0x80
  4072d0:	and    r8w,0x7fff
  4072d6:	cmp    r8w,0x7fff
  4072dc:	jne    0x407300
  4072de:	test   r9d,r9d
  4072e1:	jne    0x407300
  4072e3:	lea    rdx,[rip+0x6c2a]        # 0x40df14
  4072ea:	mov    r8,rbx
  4072ed:	call   0x4062d0
  4072f2:	jmp    0x407675
  4072f7:	nop    WORD PTR [rax+rax*1+0x0]
  407300:	and    si,0x7fff
  407305:	jne    0x407430
  40730b:	mov    rax,QWORD PTR [rsp+0x30]
  407310:	test   rax,rax
  407313:	jne    0x4076bf
  407319:	mov    r9d,DWORD PTR [rbx+0x10]
  40731d:	cmp    r9d,0xe
  407321:	jbe    0x40773c
  407327:	xor    esi,esi
  407329:	mov    r8d,DWORD PTR [rbx+0x8]
  40732d:	lea    rbp,[rsp+0x40]
  407332:	test   r9d,r9d
  407335:	jle    0x40774c
  40733b:	lea    rax,[rbp+0x1]
  40733f:	mov    BYTE PTR [rsp+0x40],0x2e
  407344:	mov    r10d,DWORD PTR [rbx+0xc]
  407348:	lea    rdi,[rax+0x1]
  40734c:	mov    BYTE PTR [rax],0x30
  40734f:	mov    r12d,0x2
  407355:	test   r10d,r10d
  407358:	jg     0x40755c
  40735e:	xchg   ax,ax
  407360:	test   r8b,0x80
  407364:	jne    0x407620
  40736a:	test   r8d,0x100
  407371:	jne    0x407710
  407377:	and    r8d,0x40
  40737b:	jne    0x407722
  407381:	mov    rdx,rbx
  407384:	mov    ecx,0x30
  407389:	call   0x406040
  40738e:	mov    ecx,DWORD PTR [rbx+0x8]
  407391:	mov    rdx,rbx
  407394:	and    ecx,0x20
  407397:	or     ecx,0x58
  40739a:	call   0x406040
  40739f:	mov    eax,DWORD PTR [rbx+0xc]
  4073a2:	test   eax,eax
  4073a4:	jle    0x4073cc
  4073a6:	test   BYTE PTR [rbx+0x9],0x2
  4073aa:	je     0x4073cc
  4073ac:	sub    eax,0x1
  4073af:	mov    DWORD PTR [rbx+0xc],eax
  4073b2:	mov    rdx,rbx
  4073b5:	mov    ecx,0x30
  4073ba:	call   0x406040
  4073bf:	mov    eax,DWORD PTR [rbx+0xc]
  4073c2:	lea    edx,[rax-0x1]
  4073c5:	test   eax,eax
  4073c7:	mov    DWORD PTR [rbx+0xc],edx
  4073ca:	jg     0x4073b2
  4073cc:	cmp    rdi,rbp
  4073cf:	lea    r13,[rsp+0x2e]
  4073d4:	ja     0x407409
  4073d6:	jmp    0x40763f
  4073db:	nop    DWORD PTR [rax+rax*1+0x0]
  4073e0:	movzx  eax,WORD PTR [rbx+0x20]
  4073e4:	test   ax,ax
  4073e7:	mov    WORD PTR [rsp+0x2e],ax
  4073ec:	je     0x407400
  4073ee:	mov    r8,rbx
  4073f1:	mov    edx,0x1
  4073f6:	mov    rcx,r13
  4073f9:	call   0x4060a0
  4073fe:	xchg   ax,ax
  407400:	cmp    rdi,rbp
  407403:	je     0x40763f
  407409:	sub    rdi,0x1
  40740d:	movsx  ecx,BYTE PTR [rdi]
  407410:	cmp    ecx,0x2e
  407413:	je     0x407682
  407419:	cmp    ecx,0x2c
  40741c:	je     0x4073e0
  40741e:	mov    rdx,rbx
  407421:	call   0x406040
  407426:	jmp    0x407400
  407428:	nop    DWORD PTR [rax+rax*1+0x0]
  407430:	mov    r9d,DWORD PTR [rbx+0x10]
  407434:	sub    si,0x3fff
  407439:	mov    rax,QWORD PTR [rsp+0x30]
  40743e:	cmp    r9d,0xe
  407442:	ja     0x4076ed
  407448:	test   rax,rax
  40744b:	js     0x407455
  40744d:	nop    DWORD PTR [rax]
  407450:	add    rax,rax
  407453:	jns    0x407450
  407455:	mov    ecx,0xe
  40745a:	mov    edx,0x4
  40745f:	shr    rax,1
  407462:	sub    ecx,r9d
  407465:	shl    ecx,0x2
  407468:	shl    rdx,cl
  40746b:	add    rax,rdx
  40746e:	js     0x407734
  407474:	add    rax,rax
  407477:	mov    ecx,0xf
  40747c:	sub    ecx,r9d
  40747f:	shl    ecx,0x2
  407482:	shr    rax,cl
  407485:	mov    r8d,DWORD PTR [rbx+0x8]
  407489:	lea    rbp,[rsp+0x40]
  40748e:	mov    rdi,rbp
  407491:	mov    r11d,r8d
  407494:	mov    r10d,r8d
  407497:	and    r11d,0x800
  40749e:	and    r10d,0x20
  4074a2:	jmp    0x4074d3
  4074a4:	mov    ecx,DWORD PTR [rbx+0x10]
  4074a7:	test   ecx,ecx
  4074a9:	jle    0x4074b1
  4074ab:	sub    ecx,0x1
  4074ae:	mov    DWORD PTR [rbx+0x10],ecx
  4074b1:	shr    rax,0x4
  4074b5:	mov    r9,rdi
  4074b8:	test   edx,edx
  4074ba:	je     0x407524
  4074bc:	cmp    edx,0x9
  4074bf:	lea    rdi,[r9+0x1]
  4074c3:	jle    0x407537
  4074c5:	add    edx,0x37
  4074c8:	or     edx,r10d
  4074cb:	mov    BYTE PTR [r9],dl
  4074ce:	test   rax,rax
  4074d1:	je     0x407540
  4074d3:	mov    edx,eax
  4074d5:	and    edx,0xf
  4074d8:	cmp    edx,eax
  4074da:	jne    0x4074a4
  4074dc:	cmp    rdi,rbp
  4074df:	ja     0x4074f2
  4074e1:	test   r11d,r11d
  4074e4:	jne    0x4074f2
  4074e6:	mov    r12d,DWORD PTR [rbx+0x10]
  4074ea:	mov    r9,rdi
  4074ed:	test   r12d,r12d
  4074f0:	jle    0x4074f9
  4074f2:	lea    r9,[rdi+0x1]
  4074f6:	mov    BYTE PTR [rdi],0x2e
  4074f9:	cmp    rax,0x1
  4074fd:	jbe    0x407709
  407503:	lea    ecx,[rsi-0x1]
  407506:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407510:	shr    rax,1
  407513:	mov    esi,ecx
  407515:	cmp    rax,0x1
  407519:	lea    ecx,[rsi-0x1]
  40751c:	jne    0x407510
  40751e:	xor    al,al
  407520:	test   edx,edx
  407522:	jne    0x4074bc
  407524:	cmp    r9,rbp
  407527:	ja     0x407533
  407529:	mov    ecx,DWORD PTR [rbx+0x10]
  40752c:	mov    rdi,r9
  40752f:	test   ecx,ecx
  407531:	js     0x4074ce
  407533:	lea    rdi,[r9+0x1]
  407537:	add    edx,0x30
  40753a:	jmp    0x4074cb
  40753c:	nop    DWORD PTR [rax+0x0]
  407540:	cmp    rdi,rbp
  407543:	je     0x407743
  407549:	mov    r10d,DWORD PTR [rbx+0xc]
  40754d:	mov    r12d,0x2
  407553:	test   r10d,r10d
  407556:	jle    0x407360
  40755c:	mov    edx,DWORD PTR [rbx+0x10]
  40755f:	mov    rax,rdi
  407562:	movsx  r11d,si
  407566:	sub    rax,rbp
  407569:	lea    ecx,[rdx+rax*1]
  40756c:	test   edx,edx
  40756e:	mov    edx,r8d
  407571:	cmovg  eax,ecx
  407574:	and    edx,0x1c0
  40757a:	mov    ecx,0x66666667
  40757f:	cmp    edx,0x1
  407582:	sbb    edx,edx
  407584:	lea    r9d,[rax+rdx*1+0x6]
  407589:	mov    eax,r11d
  40758c:	imul   ecx
  40758e:	mov    eax,r11d
  407591:	sar    eax,0x1f
  407594:	mov    ecx,edx
  407596:	sar    ecx,0x2
  407599:	sub    ecx,eax
  40759b:	je     0x4075c0
  40759d:	mov    r11d,0x66666667
  4075a3:	mov    eax,ecx
  4075a5:	sar    ecx,0x1f
  4075a8:	add    r9d,0x1
  4075ac:	imul   r11d
  4075af:	add    r12d,0x1
  4075b3:	sar    edx,0x2
  4075b6:	sub    edx,ecx
  4075b8:	mov    ecx,edx
  4075ba:	jne    0x4075a3
  4075bc:	movsx  r12d,r12w
  4075c0:	cmp    r10d,r9d
  4075c3:	jle    0x407690
  4075c9:	sub    r10d,r9d
  4075cc:	test   r8d,0x600
  4075d3:	jne    0x407700
  4075d9:	lea    eax,[r10-0x1]
  4075dd:	test   r10d,r10d
  4075e0:	mov    DWORD PTR [rbx+0xc],eax
  4075e3:	jle    0x407360
  4075e9:	nop    DWORD PTR [rax+0x0]
  4075f0:	mov    rdx,rbx
  4075f3:	mov    ecx,0x20
  4075f8:	call   0x406040
  4075fd:	mov    eax,DWORD PTR [rbx+0xc]
  407600:	lea    edx,[rax-0x1]
  407603:	test   eax,eax
  407605:	mov    DWORD PTR [rbx+0xc],edx
  407608:	jg     0x4075f0
  40760a:	mov    r8d,DWORD PTR [rbx+0x8]
  40760e:	test   r8b,0x80
  407612:	je     0x40736a
  407618:	nop    DWORD PTR [rax+rax*1+0x0]
  407620:	mov    rdx,rbx
  407623:	mov    ecx,0x2d
  407628:	call   0x406040
  40762d:	jmp    0x407381
  407632:	mov    rdx,rbx
  407635:	mov    ecx,0x30
  40763a:	call   0x406040
  40763f:	mov    eax,DWORD PTR [rbx+0x10]
  407642:	lea    edx,[rax-0x1]
  407645:	test   eax,eax
  407647:	mov    DWORD PTR [rbx+0x10],edx
  40764a:	jg     0x407632
  40764c:	mov    ecx,DWORD PTR [rbx+0x8]
  40764f:	mov    rdx,rbx
  407652:	and    ecx,0x20
  407655:	or     ecx,0x50
  407658:	call   0x406040
  40765d:	add    DWORD PTR [rbx+0xc],r12d
  407661:	or     DWORD PTR [rbx+0x8],0x1c0
  407668:	movsx  rcx,si
  40766c:	mov    rdx,rbx
  40766f:	call   0x4068b0
  407674:	nop
  407675:	add    rsp,0x68
  407679:	pop    rbx
  40767a:	pop    rsi
  40767b:	pop    rdi
  40767c:	pop    rbp
  40767d:	pop    r12
  40767f:	pop    r13
  407681:	ret    
  407682:	mov    rcx,rbx
  407685:	call   0x406370
  40768a:	jmp    0x407400
  40768f:	nop
  407690:	mov    DWORD PTR [rbx+0xc],0xffffffff
  407697:	jmp    0x407360
  40769c:	nop    DWORD PTR [rax+0x0]
  4076a0:	lea    rdx,[rip+0x6869]        # 0x40df10
  4076a7:	mov    r8,rbx
  4076aa:	xor    ecx,ecx
  4076ac:	call   0x4062d0
  4076b1:	nop
  4076b2:	add    rsp,0x68
  4076b6:	pop    rbx
  4076b7:	pop    rsi
  4076b8:	pop    rdi
  4076b9:	pop    rbp
  4076ba:	pop    r12
  4076bc:	pop    r13
  4076be:	ret    
  4076bf:	js     0x407761
  4076c5:	mov    edx,0xffffc001
  4076ca:	nop    WORD PTR [rax+rax*1+0x0]
  4076d0:	mov    esi,edx
  4076d2:	sub    edx,0x1
  4076d5:	add    rax,rax
  4076d8:	jns    0x4076d0
  4076da:	mov    r9d,DWORD PTR [rbx+0x10]
  4076de:	cmp    r9d,0xe
  4076e2:	jbe    0x407455
  4076e8:	jmp    0x407485
  4076ed:	test   rax,rax
  4076f0:	jne    0x407485
  4076f6:	jmp    0x407329
  4076fb:	nop    DWORD PTR [rax+rax*1+0x0]
  407700:	mov    DWORD PTR [rbx+0xc],r10d
  407704:	jmp    0x407360
  407709:	xor    eax,eax
  40770b:	jmp    0x4074b8
  407710:	mov    rdx,rbx
  407713:	mov    ecx,0x2b
  407718:	call   0x406040
  40771d:	jmp    0x407381
  407722:	mov    rdx,rbx
  407725:	mov    ecx,0x20
  40772a:	call   0x406040
  40772f:	jmp    0x407381
  407734:	add    esi,0x1
  407737:	jmp    0x407477
  40773c:	xor    eax,eax
  40773e:	jmp    0x407450
  407743:	mov    r9d,DWORD PTR [rbx+0x10]
  407747:	jmp    0x407332
  40774c:	test   r8d,0x800
  407753:	mov    rax,rbp
  407756:	je     0x407344
  40775c:	jmp    0x40733b
  407761:	mov    esi,0xffffc002
  407766:	jmp    0x4076da
  40776b:	nop    DWORD PTR [rax+rax*1+0x0]
  407770:	push   r15
  407772:	push   r14
  407774:	push   r13
  407776:	push   r12
  407778:	push   rbp
  407779:	push   rdi
  40777a:	push   rsi
  40777b:	push   rbx
  40777c:	sub    rsp,0xb8
  407783:	mov    r13,QWORD PTR [rsp+0x120]
  40778b:	mov    r15d,ecx
  40778e:	mov    rdi,rdx
  407791:	mov    esi,r8d
  407794:	mov    rbx,r9
  407797:	and    r15d,0x6000
  40779e:	call   0x40abe0
  4077a3:	mov    eax,DWORD PTR [rax]
  4077a5:	lea    rcx,[rip+0x6781]        # 0x40df2d
  4077ac:	xor    edx,edx
  4077ae:	mov    QWORD PTR [rsp+0x80],rdi
  4077b6:	mov    DWORD PTR [rsp+0x88],r15d
  4077be:	mov    DWORD PTR [rsp+0x8c],0xffffffff
  4077c9:	mov    DWORD PTR [rsp+0x90],0xffffffff
  4077d4:	mov    DWORD PTR [rsp+0x34],eax
  4077d8:	xor    eax,eax
  4077da:	mov    DWORD PTR [rsp+0x94],0xfffffffd
  4077e5:	mov    WORD PTR [rsp+0x98],ax
  4077ed:	mov    DWORD PTR [rsp+0x9c],0x0
  4077f8:	mov    WORD PTR [rsp+0xa0],dx
  407800:	mov    DWORD PTR [rsp+0xa4],0x0
  40780b:	mov    DWORD PTR [rsp+0xa8],esi
  407812:	call   0x40ab50
  407817:	test   rax,rax
  40781a:	je     0x40782c
  40781c:	movsx  edx,BYTE PTR [rax]
  40781f:	mov    eax,0x2
  407824:	sub    edx,0x30
  407827:	cmp    edx,0x2
  40782a:	jbe    0x407839
  40782c:	call   0x40ad30
  407831:	and    eax,0x1
  407834:	neg    eax
  407836:	add    eax,0x3
  407839:	lea    rdi,[rsp+0x70]
  40783e:	mov    DWORD PTR [rsp+0xac],eax
  407845:	movzx  eax,BYTE PTR [rbx]
  407848:	lea    rsi,[rsp+0x6e]
  40784d:	lea    r12,[rsp+0x80]
  407855:	lea    rbp,[rip+0x66e8]        # 0x40df44
  40785c:	mov    QWORD PTR [rsp+0x28],rdi
  407861:	lea    rdi,[rsp+0x50]
  407866:	mov    QWORD PTR [rsp+0x38],rsi
  40786b:	mov    QWORD PTR [rsp+0x20],rdi
  407870:	mov    edi,r15d
  407873:	or     edi,0x200
  407879:	mov    DWORD PTR [rsp+0x48],edi
  40787d:	nop    DWORD PTR [rax]
  407880:	movsx  ecx,al
  407883:	lea    rsi,[rbx+0x1]
  407887:	test   ecx,ecx
  407889:	je     0x40790a
  40788b:	cmp    ecx,0x25
  40788e:	jne    0x4078f0
  407890:	movzx  eax,BYTE PTR [rbx+0x1]
  407894:	xor    r10d,r10d
  407897:	xor    r14d,r14d
  40789a:	mov    DWORD PTR [rsp+0x88],r15d
  4078a2:	mov    DWORD PTR [rsp+0x90],0xffffffff
  4078ad:	mov    rdi,rsi
  4078b0:	mov    DWORD PTR [rsp+0x8c],0xffffffff
  4078bb:	lea    r11,[r12+0xc]
  4078c0:	test   al,al
  4078c2:	je     0x407a6b
  4078c8:	lea    edx,[rax-0x20]
  4078cb:	lea    rbx,[rdi+0x1]
  4078cf:	movsx  ecx,al
  4078d2:	cmp    dl,0x5a
  4078d5:	ja     0x407ee0
  4078db:	movzx  edx,dl
  4078de:	movsxd rdx,DWORD PTR [rbp+rdx*4+0x0]
  4078e3:	add    rdx,rbp
  4078e6:	jmp    rdx
  4078e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4078f0:	mov    rdx,r12
  4078f3:	call   0x406040
  4078f8:	movzx  eax,BYTE PTR [rbx+0x1]
  4078fc:	mov    rbx,rsi
  4078ff:	lea    rsi,[rbx+0x1]
  407903:	movsx  ecx,al
  407906:	test   ecx,ecx
  407908:	jne    0x40788b
  40790a:	mov    eax,DWORD PTR [rsp+0xa4]
  407911:	add    rsp,0xb8
  407918:	pop    rbx
  407919:	pop    rsi
  40791a:	pop    rdi
  40791b:	pop    rbp
  40791c:	pop    r12
  40791e:	pop    r13
  407920:	pop    r14
  407922:	pop    r15
  407924:	ret    
  407925:	sub    r10d,0x2
  407929:	mov    rax,r13
  40792c:	cmp    r10d,0x1
  407930:	jbe    0x407f23
  407936:	mov    rsi,QWORD PTR [rax]
  407939:	add    r13,0x8
  40793d:	test   rsi,rsi
  407940:	je     0x407a05
  407946:	mov    rcx,rsi
  407949:	call   0x40aad8
  40794e:	mov    edx,eax
  407950:	mov    r8,r12
  407953:	mov    rcx,rsi
  407956:	call   0x4061c0
  40795b:	nop    DWORD PTR [rax+rax*1+0x0]
  407960:	movzx  eax,BYTE PTR [rbx]
  407963:	jmp    0x407880
  407968:	nop    DWORD PTR [rax+rax*1+0x0]
  407970:	test   r14d,r14d
  407973:	jne    0x407983
  407975:	cmp    DWORD PTR [rsp+0x88],r15d
  40797d:	je     0x4080eb
  407983:	mov    rdx,QWORD PTR [r13+0x0]
  407987:	lea    rsi,[r13+0x8]
  40798b:	mov    r8,r12
  40798e:	mov    ecx,0x78
  407993:	mov    QWORD PTR [rsp+0x78],0x0
  40799c:	mov    r13,rsi
  40799f:	mov    QWORD PTR [rsp+0x70],rdx
  4079a4:	call   0x406ea0
  4079a9:	jmp    0x407960
  4079ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4079b0:	cmp    r10d,0x5
  4079b4:	mov    rax,QWORD PTR [r13+0x0]
  4079b8:	je     0x40802a
  4079be:	cmp    r10d,0x1
  4079c2:	je     0x4080b4
  4079c8:	cmp    r10d,0x2
  4079cc:	je     0x4079d8
  4079ce:	cmp    r10d,0x3
  4079d2:	je     0x40815c
  4079d8:	mov    edx,DWORD PTR [rsp+0xa4]
  4079df:	add    r13,0x8
  4079e3:	mov    DWORD PTR [rax],edx
  4079e5:	jmp    0x407960
  4079ea:	nop    WORD PTR [rax+rax*1+0x0]
  4079f0:	mov    ecx,DWORD PTR [rsp+0x34]
  4079f4:	call   0x40aae0
  4079f9:	test   rax,rax
  4079fc:	mov    rsi,rax
  4079ff:	jne    0x407946
  407a05:	mov    edx,0x6
  407a0a:	lea    rsi,[rip+0x6515]        # 0x40df26
  407a11:	jmp    0x407950
  407a16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407a20:	movzx  eax,BYTE PTR [rdi+0x1]
  407a24:	mov    r10d,0x2
  407a2a:	mov    r14d,0x4
  407a30:	cmp    al,0x6c
  407a32:	jne    0x407a60
  407a34:	lea    rbx,[rdi+0x2]
  407a38:	movzx  eax,BYTE PTR [rdi+0x2]
  407a3c:	mov    r10d,0x3
  407a42:	mov    r14d,0x4
  407a48:	jmp    0x407a60
  407a4a:	nop    WORD PTR [rax+rax*1+0x0]
  407a50:	movzx  eax,BYTE PTR [rdi+0x1]
  407a54:	mov    r10d,0x3
  407a5a:	mov    r14d,0x4
  407a60:	test   al,al
  407a62:	mov    rdi,rbx
  407a65:	jne    0x4078c8
  407a6b:	mov    rbx,rdi
  407a6e:	jmp    0x407880
  407a73:	mov    eax,DWORD PTR [rsp+0x88]
  407a7a:	mov    rdx,r13
  407a7d:	add    r13,0x8
  407a81:	or     eax,0x20
  407a84:	test   al,0x4
  407a86:	mov    DWORD PTR [rsp+0x88],eax
  407a8d:	je     0x407ceb
  407a93:	mov    rax,QWORD PTR [rdx]
  407a96:	mov    rcx,QWORD PTR [rsp+0x20]
  407a9b:	mov    rdx,r12
  407a9e:	fld    TBYTE PTR [rax]
  407aa0:	fstp   TBYTE PTR [rsp+0x50]
  407aa4:	call   0x406d00
  407aa9:	jmp    0x407960
  407aae:	xchg   ax,ax
  407ab0:	movzx  eax,BYTE PTR [rdi+0x1]
  407ab4:	mov    r10d,0x1
  407aba:	mov    r14d,0x4
  407ac0:	cmp    al,0x68
  407ac2:	jne    0x407a60
  407ac4:	lea    rbx,[rdi+0x2]
  407ac8:	movzx  eax,BYTE PTR [rdi+0x2]
  407acc:	mov    r10d,0x5
  407ad2:	mov    r14d,0x4
  407ad8:	jmp    0x407a60
  407ada:	nop    WORD PTR [rax+rax*1+0x0]
  407ae0:	mov    eax,DWORD PTR [rsp+0x88]
  407ae7:	mov    rdx,r13
  407aea:	add    r13,0x8
  407aee:	or     eax,0x20
  407af1:	test   al,0x4
  407af3:	mov    DWORD PTR [rsp+0x88],eax
  407afa:	je     0x407d19
  407b00:	mov    rax,QWORD PTR [rdx]
  407b03:	mov    rcx,QWORD PTR [rsp+0x20]
  407b08:	mov    rdx,r12
  407b0b:	fld    TBYTE PTR [rax]
  407b0d:	fstp   TBYTE PTR [rsp+0x50]
  407b11:	call   0x4067c0
  407b16:	jmp    0x407960
  407b1b:	nop    DWORD PTR [rax+rax*1+0x0]
  407b20:	mov    eax,DWORD PTR [rsp+0x88]
  407b27:	mov    rdx,r13
  407b2a:	add    r13,0x8
  407b2e:	or     eax,0x20
  407b31:	test   al,0x4
  407b33:	mov    DWORD PTR [rsp+0x88],eax
  407b3a:	je     0x407d47
  407b40:	mov    rax,QWORD PTR [rdx]
  407b43:	mov    rcx,QWORD PTR [rsp+0x20]
  407b48:	mov    rdx,r12
  407b4b:	fld    TBYTE PTR [rax]
  407b4d:	fstp   TBYTE PTR [rsp+0x50]
  407b51:	call   0x406c50
  407b56:	jmp    0x407960
  407b5b:	nop    DWORD PTR [rax+rax*1+0x0]
  407b60:	cmp    r10d,0x3
  407b64:	je     0x40803c
  407b6a:	cmp    r10d,0x2
  407b6e:	je     0x4080d9
  407b74:	mov    eax,DWORD PTR [r13+0x0]
  407b78:	cmp    r10d,0x1
  407b7c:	lea    rdx,[r13+0x8]
  407b80:	mov    QWORD PTR [rsp+0x70],rax
  407b85:	je     0x40811b
  407b8b:	cmp    r10d,0x5
  407b8f:	mov    r13,rdx
  407b92:	je     0x408170
  407b98:	cmp    ecx,0x75
  407b9b:	je     0x40807c
  407ba1:	mov    r8,r12
  407ba4:	mov    rdx,rax
  407ba7:	call   0x406ea0
  407bac:	jmp    0x407960
  407bb1:	sub    r10d,0x2
  407bb5:	mov    rax,r13
  407bb8:	mov    DWORD PTR [rsp+0x90],0xffffffff
  407bc3:	cmp    r10d,0x1
  407bc7:	jbe    0x407d6b
  407bcd:	mov    eax,DWORD PTR [rax]
  407bcf:	mov    rcx,QWORD PTR [rsp+0x28]
  407bd4:	mov    r8,r12
  407bd7:	mov    edx,0x1
  407bdc:	add    r13,0x8
  407be0:	mov    BYTE PTR [rsp+0x70],al
  407be4:	call   0x4061c0
  407be9:	jmp    0x407960
  407bee:	xchg   ax,ax
  407bf0:	mov    eax,DWORD PTR [rsp+0x88]
  407bf7:	mov    rdx,r13
  407bfa:	add    r13,0x8
  407bfe:	or     eax,0x20
  407c01:	test   al,0x4
  407c03:	mov    DWORD PTR [rsp+0x88],eax
  407c0a:	je     0x407da8
  407c10:	mov    rax,QWORD PTR [rdx]
  407c13:	mov    rcx,QWORD PTR [rsp+0x20]
  407c18:	mov    rdx,r12
  407c1b:	fld    TBYTE PTR [rax]
  407c1d:	fstp   TBYTE PTR [rsp+0x50]
  407c21:	call   0x407260
  407c26:	jmp    0x407960
  407c2b:	nop    DWORD PTR [rax+rax*1+0x0]
  407c30:	or     DWORD PTR [rsp+0x88],0x80
  407c3b:	cmp    r10d,0x3
  407c3f:	je     0x408018
  407c45:	cmp    r10d,0x2
  407c49:	je     0x4080c7
  407c4f:	movsxd rcx,DWORD PTR [r13+0x0]
  407c53:	cmp    r10d,0x1
  407c57:	lea    rax,[r13+0x8]
  407c5b:	mov    QWORD PTR [rsp+0x70],rcx
  407c60:	je     0x40812d
  407c66:	cmp    r10d,0x5
  407c6a:	mov    r13,rax
  407c6d:	je     0x40817f
  407c73:	mov    rax,rcx
  407c76:	mov    rdx,r12
  407c79:	sar    rax,0x3f
  407c7d:	mov    QWORD PTR [rsp+0x78],rax
  407c82:	call   0x4068b0
  407c87:	jmp    0x407960
  407c8c:	nop    DWORD PTR [rax+0x0]
  407c90:	or     DWORD PTR [rsp+0x88],0x4
  407c98:	movzx  eax,BYTE PTR [rdi+0x1]
  407c9c:	mov    r14d,0x4
  407ca2:	jmp    0x407a60
  407ca7:	nop    WORD PTR [rax+rax*1+0x0]
  407cb0:	movzx  eax,BYTE PTR [rdi+0x1]
  407cb4:	cmp    al,0x36
  407cb6:	je     0x407ff8
  407cbc:	cmp    al,0x33
  407cbe:	je     0x40808c
  407cc4:	mov    r10d,0x3
  407cca:	mov    r14d,0x4
  407cd0:	jmp    0x407a60
  407cd5:	mov    eax,DWORD PTR [rsp+0x88]
  407cdc:	mov    rdx,r13
  407cdf:	add    r13,0x8
  407ce3:	test   al,0x4
  407ce5:	jne    0x407a93
  407ceb:	mov    rcx,QWORD PTR [rsp+0x20]
  407cf0:	fld    QWORD PTR [rdx]
  407cf2:	mov    rdx,r12
  407cf5:	fstp   TBYTE PTR [rsp+0x50]
  407cf9:	call   0x406d00
  407cfe:	jmp    0x407960
  407d03:	mov    eax,DWORD PTR [rsp+0x88]
  407d0a:	mov    rdx,r13
  407d0d:	add    r13,0x8
  407d11:	test   al,0x4
  407d13:	jne    0x407b00
  407d19:	mov    rcx,QWORD PTR [rsp+0x20]
  407d1e:	fld    QWORD PTR [rdx]
  407d20:	mov    rdx,r12
  407d23:	fstp   TBYTE PTR [rsp+0x50]
  407d27:	call   0x4067c0
  407d2c:	jmp    0x407960
  407d31:	mov    eax,DWORD PTR [rsp+0x88]
  407d38:	mov    rdx,r13
  407d3b:	add    r13,0x8
  407d3f:	test   al,0x4
  407d41:	jne    0x407b40
  407d47:	mov    rcx,QWORD PTR [rsp+0x20]
  407d4c:	fld    QWORD PTR [rdx]
  407d4e:	mov    rdx,r12
  407d51:	fstp   TBYTE PTR [rsp+0x50]
  407d55:	call   0x406c50
  407d5a:	jmp    0x407960
  407d5f:	nop
  407d60:	mov    DWORD PTR [rsp+0x90],0xffffffff
  407d6b:	mov    eax,DWORD PTR [r13+0x0]
  407d6f:	mov    rcx,QWORD PTR [rsp+0x28]
  407d74:	lea    rsi,[r13+0x8]
  407d78:	mov    r8,r12
  407d7b:	mov    edx,0x1
  407d80:	mov    r13,rsi
  407d83:	mov    WORD PTR [rsp+0x70],ax
  407d88:	call   0x4060a0
  407d8d:	jmp    0x407960
  407d92:	mov    eax,DWORD PTR [rsp+0x88]
  407d99:	mov    rdx,r13
  407d9c:	add    r13,0x8
  407da0:	test   al,0x4
  407da2:	jne    0x407c10
  407da8:	mov    rcx,QWORD PTR [rsp+0x20]
  407dad:	fld    QWORD PTR [rdx]
  407daf:	mov    rdx,r12
  407db2:	fstp   TBYTE PTR [rsp+0x50]
  407db6:	call   0x407260
  407dbb:	jmp    0x407960
  407dc0:	test   r14d,r14d
  407dc3:	jne    0x407f60
  407dc9:	or     DWORD PTR [rsp+0x88],0x200
  407dd4:	movzx  eax,BYTE PTR [rdi+0x1]
  407dd8:	jmp    0x407a60
  407ddd:	nop    DWORD PTR [rax]
  407de0:	cmp    r14d,0x1
  407de4:	jbe    0x40804e
  407dea:	movzx  eax,BYTE PTR [rdi+0x1]
  407dee:	mov    r14d,0x4
  407df4:	jmp    0x407a60
  407df9:	nop    DWORD PTR [rax+0x0]
  407e00:	test   r14d,r14d
  407e03:	jne    0x407e89
  407e09:	or     DWORD PTR [rsp+0x88],0x400
  407e14:	movzx  eax,BYTE PTR [rdi+0x1]
  407e18:	jmp    0x407a60
  407e1d:	nop    DWORD PTR [rax]
  407e20:	test   r14d,r14d
  407e23:	jne    0x407e89
  407e25:	or     DWORD PTR [rsp+0x88],0x100
  407e30:	movzx  eax,BYTE PTR [rdi+0x1]
  407e34:	jmp    0x407a60
  407e39:	nop    DWORD PTR [rax+0x0]
  407e40:	test   r14d,r14d
  407e43:	jne    0x407e89
  407e45:	or     DWORD PTR [rsp+0x88],0x800
  407e50:	movzx  eax,BYTE PTR [rdi+0x1]
  407e54:	jmp    0x407a60
  407e59:	nop    DWORD PTR [rax+0x0]
  407e60:	test   r14d,r14d
  407e63:	jne    0x407e89
  407e65:	or     DWORD PTR [rsp+0x88],0x40
  407e6d:	movzx  eax,BYTE PTR [rdi+0x1]
  407e71:	jmp    0x407a60
  407e76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407e80:	test   r14d,r14d
  407e83:	je     0x407f92
  407e89:	movzx  eax,BYTE PTR [rdi+0x1]
  407e8d:	jmp    0x407a60
  407e92:	mov    rdx,r12
  407e95:	call   0x406040
  407e9a:	jmp    0x407960
  407e9f:	nop
  407ea0:	test   r11,r11
  407ea3:	je     0x407dea
  407ea9:	test   r14d,0xfffffffd
  407eb0:	jne    0x407f80
  407eb6:	mov    eax,DWORD PTR [r13+0x0]
  407eba:	lea    rdx,[r13+0x8]
  407ebe:	test   eax,eax
  407ec0:	mov    DWORD PTR [r11],eax
  407ec3:	js     0x408140
  407ec9:	movzx  eax,BYTE PTR [rdi+0x1]
  407ecd:	mov    r13,rdx
  407ed0:	xor    r11d,r11d
  407ed3:	jmp    0x407a60
  407ed8:	nop    DWORD PTR [rax+rax*1+0x0]
  407ee0:	sub    eax,0x30
  407ee3:	cmp    al,0x9
  407ee5:	ja     0x408106
  407eeb:	cmp    r14d,0x3
  407eef:	ja     0x408106
  407ef5:	test   r14d,r14d
  407ef8:	jne    0x407f6a
  407efa:	mov    r14d,0x1
  407f00:	test   r11,r11
  407f03:	je     0x407e89
  407f05:	mov    eax,DWORD PTR [r11]
  407f08:	test   eax,eax
  407f0a:	js     0x40806d
  407f10:	lea    eax,[rax+rax*4]
  407f13:	lea    eax,[rcx+rax*2-0x30]
  407f17:	mov    DWORD PTR [r11],eax
  407f1a:	movzx  eax,BYTE PTR [rdi+0x1]
  407f1e:	jmp    0x407a60
  407f23:	mov    rsi,QWORD PTR [r13+0x0]
  407f27:	lea    rax,[rip+0x5fea]        # 0x40df18
  407f2e:	lea    rdi,[r13+0x8]
  407f32:	mov    r13,rdi
  407f35:	test   rsi,rsi
  407f38:	cmove  rsi,rax
  407f3c:	mov    rcx,rsi
  407f3f:	call   0x40aaa8
  407f44:	mov    r8,r12
  407f47:	mov    edx,eax
  407f49:	mov    rcx,rsi
  407f4c:	call   0x4060a0
  407f51:	jmp    0x407960
  407f56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407f60:	cmp    r14d,0x3
  407f64:	ja     0x408106
  407f6a:	cmp    r14d,0x2
  407f6e:	mov    eax,0x3
  407f73:	cmove  r14d,eax
  407f77:	jmp    0x407f00
  407f79:	nop    DWORD PTR [rax+0x0]
  407f80:	movzx  eax,BYTE PTR [rdi+0x1]
  407f84:	xor    r11d,r11d
  407f87:	mov    r14d,0x4
  407f8d:	jmp    0x407a60
  407f92:	mov    DWORD PTR [rsp+0x4c],r10d
  407f97:	mov    QWORD PTR [rsp+0x40],r11
  407f9c:	or     DWORD PTR [rsp+0x88],0x1000
  407fa7:	mov    DWORD PTR [rsp+0x70],0x0
  407faf:	call   0x40ab48
  407fb4:	mov    r9,QWORD PTR [rsp+0x28]
  407fb9:	mov    rdx,QWORD PTR [rax+0x8]
  407fbd:	mov    r8d,0x10
  407fc3:	mov    rcx,QWORD PTR [rsp+0x38]
  407fc8:	call   0x40a650
  407fcd:	test   eax,eax
  407fcf:	mov    r11,QWORD PTR [rsp+0x40]
  407fd4:	mov    r10d,DWORD PTR [rsp+0x4c]
  407fd9:	jle    0x407fe8
  407fdb:	movzx  edx,WORD PTR [rsp+0x6e]
  407fe0:	mov    WORD PTR [rsp+0xa0],dx
  407fe8:	mov    DWORD PTR [rsp+0x9c],eax
  407fef:	movzx  eax,BYTE PTR [rdi+0x1]
  407ff3:	jmp    0x407a60
  407ff8:	cmp    BYTE PTR [rdi+0x2],0x34
  407ffc:	je     0x40818f
  408002:	mov    eax,0x36
  408007:	mov    r10d,0x3
  40800d:	mov    r14d,0x4
  408013:	jmp    0x407a60
  408018:	mov    rcx,QWORD PTR [r13+0x0]
  40801c:	add    r13,0x8
  408020:	mov    QWORD PTR [rsp+0x70],rcx
  408025:	jmp    0x407c73
  40802a:	mov    edx,DWORD PTR [rsp+0xa4]
  408031:	add    r13,0x8
  408035:	mov    BYTE PTR [rax],dl
  408037:	jmp    0x407960
  40803c:	mov    rax,QWORD PTR [r13+0x0]
  408040:	add    r13,0x8
  408044:	mov    QWORD PTR [rsp+0x70],rax
  408049:	jmp    0x407b98
  40804e:	mov    DWORD PTR [rsp+0x90],0x0
  408059:	movzx  eax,BYTE PTR [rdi+0x1]
  40805d:	lea    r11,[r12+0x10]
  408062:	mov    r14d,0x2
  408068:	jmp    0x407a60
  40806d:	sub    ecx,0x30
  408070:	movzx  eax,BYTE PTR [rdi+0x1]
  408074:	mov    DWORD PTR [r11],ecx
  408077:	jmp    0x407a60
  40807c:	mov    rdx,r12
  40807f:	mov    rcx,rax
  408082:	call   0x4068b0
  408087:	jmp    0x407960
  40808c:	cmp    BYTE PTR [rdi+0x2],0x32
  408090:	mov    eax,0x33
  408095:	jne    0x407cc4
  40809b:	lea    rbx,[rdi+0x3]
  40809f:	movzx  eax,BYTE PTR [rdi+0x3]
  4080a3:	mov    r10d,0x2
  4080a9:	mov    r14d,0x4
  4080af:	jmp    0x407a60
  4080b4:	mov    edx,DWORD PTR [rsp+0xa4]
  4080bb:	add    r13,0x8
  4080bf:	mov    WORD PTR [rax],dx
  4080c2:	jmp    0x407960
  4080c7:	movsxd rcx,DWORD PTR [r13+0x0]
  4080cb:	add    r13,0x8
  4080cf:	mov    QWORD PTR [rsp+0x70],rcx
  4080d4:	jmp    0x407c73
  4080d9:	mov    eax,DWORD PTR [r13+0x0]
  4080dd:	add    r13,0x8
  4080e1:	mov    QWORD PTR [rsp+0x70],rax
  4080e6:	jmp    0x407b98
  4080eb:	mov    eax,DWORD PTR [rsp+0x48]
  4080ef:	mov    DWORD PTR [rsp+0x90],0x10
  4080fa:	mov    DWORD PTR [rsp+0x88],eax
  408101:	jmp    0x407983
  408106:	mov    rdx,r12
  408109:	mov    ecx,0x25
  40810e:	mov    rbx,rsi
  408111:	call   0x406040
  408116:	jmp    0x407960
  40811b:	movzx  eax,WORD PTR [rsp+0x70]
  408120:	mov    r13,rdx
  408123:	mov    QWORD PTR [rsp+0x70],rax
  408128:	jmp    0x407b98
  40812d:	movsx  rcx,WORD PTR [rsp+0x70]
  408133:	mov    r13,rax
  408136:	mov    QWORD PTR [rsp+0x70],rcx
  40813b:	jmp    0x407c73
  408140:	test   r14d,r14d
  408143:	jne    0x4081a8
  408145:	or     DWORD PTR [rsp+0x88],0x400
  408150:	neg    DWORD PTR [rsp+0x8c]
  408157:	jmp    0x407ec9
  40815c:	movsxd rdx,DWORD PTR [rsp+0xa4]
  408164:	add    r13,0x8
  408168:	mov    QWORD PTR [rax],rdx
  40816b:	jmp    0x407960
  408170:	movzx  eax,BYTE PTR [rsp+0x70]
  408175:	mov    QWORD PTR [rsp+0x70],rax
  40817a:	jmp    0x407b98
  40817f:	movsx  rcx,BYTE PTR [rsp+0x70]
  408185:	mov    QWORD PTR [rsp+0x70],rcx
  40818a:	jmp    0x407c73
  40818f:	lea    rbx,[rdi+0x3]
  408193:	movzx  eax,BYTE PTR [rdi+0x3]
  408197:	mov    r10d,0x3
  40819d:	mov    r14d,0x4
  4081a3:	jmp    0x407a60
  4081a8:	mov    DWORD PTR [rsp+0x90],0xffffffff
  4081b3:	movzx  eax,BYTE PTR [rdi+0x1]
  4081b7:	mov    r13,rdx
  4081ba:	xor    r11d,r11d
  4081bd:	jmp    0x407a60
  4081c2:	nop
  4081c3:	nop
  4081c4:	nop
  4081c5:	nop
  4081c6:	nop
  4081c7:	nop
  4081c8:	nop
  4081c9:	nop
  4081ca:	nop
  4081cb:	nop
  4081cc:	nop
  4081cd:	nop
  4081ce:	nop
  4081cf:	nop
  4081d0:	push   rbx
  4081d1:	sub    rsp,0x20
  4081d5:	xor    ebx,ebx
  4081d7:	cmp    ecx,0x1b
  4081da:	jle    0x4081ed
  4081dc:	mov    eax,0x4
  4081e1:	add    eax,eax
  4081e3:	add    ebx,0x1
  4081e6:	lea    edx,[rax+0x17]
  4081e9:	cmp    edx,ecx
  4081eb:	jl     0x4081e1
  4081ed:	mov    ecx,ebx
  4081ef:	call   0x409ac0
  4081f4:	mov    DWORD PTR [rax],ebx
  4081f6:	add    rax,0x4
  4081fa:	add    rsp,0x20
  4081fe:	pop    rbx
  4081ff:	ret    
  408200:	push   rsi
  408201:	push   rbx
  408202:	sub    rsp,0x28
  408206:	mov    rbx,rcx
  408209:	mov    ecx,r8d
  40820c:	mov    rsi,rdx
  40820f:	call   0x4081d0
  408214:	movzx  ecx,BYTE PTR [rbx]
  408217:	lea    r8,[rbx+0x1]
  40821b:	test   cl,cl
  40821d:	mov    BYTE PTR [rax],cl
  40821f:	mov    rcx,rax
  408222:	je     0x408239
  408224:	add    r8,0x1
  408228:	movzx  r9d,BYTE PTR [r8-0x1]
  40822d:	add    rcx,0x1
  408231:	test   r9b,r9b
  408234:	mov    BYTE PTR [rcx],r9b
  408237:	jne    0x408224
  408239:	test   rsi,rsi
  40823c:	je     0x408241
  40823e:	mov    QWORD PTR [rsi],rcx
  408241:	add    rsp,0x28
  408245:	pop    rbx
  408246:	pop    rsi
  408247:	ret    
  408248:	nop    DWORD PTR [rax+rax*1+0x0]
  408250:	mov    edx,0x1
  408255:	mov    rax,rcx
  408258:	mov    ecx,DWORD PTR [rcx-0x4]
  40825b:	shl    edx,cl
  40825d:	mov    DWORD PTR [rax+0x4],ecx
  408260:	lea    rcx,[rax-0x4]
  408264:	mov    DWORD PTR [rax+0x8],edx
  408267:	jmp    0x409bd0
  40826c:	nop    DWORD PTR [rax+0x0]
  408270:	push   r15
  408272:	push   r14
  408274:	push   r13
  408276:	push   r12
  408278:	push   rbp
  408279:	push   rdi
  40827a:	push   rsi
  40827b:	push   rbx
  40827c:	sub    rsp,0x38
  408280:	xor    eax,eax
  408282:	mov    edi,DWORD PTR [rdx+0x14]
  408285:	cmp    edi,DWORD PTR [rcx+0x14]
  408288:	mov    r15,rdx
  40828b:	jg     0x4083d9
  408291:	sub    edi,0x1
  408294:	lea    rbx,[rdx+0x18]
  408298:	lea    r12,[rcx+0x18]
  40829c:	movsxd r13,edi
  40829f:	xor    edx,edx
  4082a1:	shl    r13,0x2
  4082a5:	lea    rbp,[rbx+r13*1]
  4082a9:	add    r13,r12
  4082ac:	mov    eax,DWORD PTR [rbp+0x0]
  4082af:	lea    r8d,[rax+0x1]
  4082b3:	mov    eax,DWORD PTR [r13+0x0]
  4082b7:	div    r8d
  4082ba:	test   eax,eax
  4082bc:	mov    r14d,eax
  4082bf:	mov    DWORD PTR [rsp+0x2c],eax
  4082c3:	je     0x408357
  4082c9:	mov    edx,eax
  4082cb:	mov    rsi,rbx
  4082ce:	mov    r11,r12
  4082d1:	xor    eax,eax
  4082d3:	xor    r10d,r10d
  4082d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4082e0:	add    rsi,0x4
  4082e4:	mov    r8d,DWORD PTR [rsi-0x4]
  4082e8:	mov    r9d,DWORD PTR [r11]
  4082eb:	add    r11,0x4
  4082ef:	imul   r8,rdx
  4082f3:	add    r8,rax
  4082f6:	mov    rax,r8
  4082f9:	mov    r8d,r8d
  4082fc:	sub    r9,r8
  4082ff:	shr    rax,0x20
  408303:	sub    r9,r10
  408306:	mov    r10,r9
  408309:	mov    DWORD PTR [r11-0x4],r9d
  40830d:	shr    r10,0x20
  408311:	and    r10d,0x1
  408315:	cmp    rbp,rsi
  408318:	jae    0x4082e0
  40831a:	mov    r11d,DWORD PTR [r13+0x0]
  40831e:	test   r11d,r11d
  408321:	jne    0x408357
  408323:	lea    rax,[r13-0x4]
  408327:	cmp    r12,rax
  40832a:	jae    0x408354
  40832c:	mov    r10d,DWORD PTR [r13-0x4]
  408330:	test   r10d,r10d
  408333:	je     0x408348
  408335:	jmp    0x408354
  408337:	nop    WORD PTR [rax+rax*1+0x0]
  408340:	mov    r9d,DWORD PTR [rax]
  408343:	test   r9d,r9d
  408346:	jne    0x408354
  408348:	sub    rax,0x4
  40834c:	sub    edi,0x1
  40834f:	cmp    r12,rax
  408352:	jb     0x408340
  408354:	mov    DWORD PTR [rcx+0x14],edi
  408357:	mov    rdx,r15
  40835a:	mov    rsi,rcx
  40835d:	call   0x40a0f0
  408362:	test   eax,eax
  408364:	js     0x4083d5
  408366:	lea    eax,[r14+0x1]
  40836a:	mov    rcx,r12
  40836d:	xor    edx,edx
  40836f:	mov    DWORD PTR [rsp+0x2c],eax
  408373:	add    rbx,0x4
  408377:	mov    eax,DWORD PTR [rcx]
  408379:	mov    r8d,DWORD PTR [rbx-0x4]
  40837d:	add    rcx,0x4
  408381:	sub    rax,r8
  408384:	sub    rax,rdx
  408387:	mov    rdx,rax
  40838a:	mov    DWORD PTR [rcx-0x4],eax
  40838d:	shr    rdx,0x20
  408391:	and    edx,0x1
  408394:	cmp    rbp,rbx
  408397:	jae    0x408373
  408399:	movsxd rax,edi
  40839c:	lea    rdx,[r12+rax*4]
  4083a0:	mov    r8d,DWORD PTR [rdx]
  4083a3:	test   r8d,r8d
  4083a6:	jne    0x4083d5
  4083a8:	lea    rax,[rdx-0x4]
  4083ac:	cmp    r12,rax
  4083af:	jae    0x4083d2
  4083b1:	mov    ecx,DWORD PTR [rdx-0x4]
  4083b4:	test   ecx,ecx
  4083b6:	je     0x4083c6
  4083b8:	jmp    0x4083d2
  4083ba:	nop    WORD PTR [rax+rax*1+0x0]
  4083c0:	mov    edx,DWORD PTR [rax]
  4083c2:	test   edx,edx
  4083c4:	jne    0x4083d2
  4083c6:	sub    rax,0x4
  4083ca:	sub    edi,0x1
  4083cd:	cmp    r12,rax
  4083d0:	jb     0x4083c0
  4083d2:	mov    DWORD PTR [rsi+0x14],edi
  4083d5:	mov    eax,DWORD PTR [rsp+0x2c]
  4083d9:	add    rsp,0x38
  4083dd:	pop    rbx
  4083de:	pop    rsi
  4083df:	pop    rdi
  4083e0:	pop    rbp
  4083e1:	pop    r12
  4083e3:	pop    r13
  4083e5:	pop    r14
  4083e7:	pop    r15
  4083e9:	ret    
  4083ea:	nop
  4083eb:	nop
  4083ec:	nop
  4083ed:	nop
  4083ee:	nop
  4083ef:	nop
  4083f0:	push   r15
  4083f2:	push   r14
  4083f4:	push   r13
  4083f6:	push   r12
  4083f8:	push   rbp
  4083f9:	push   rdi
  4083fa:	push   rsi
  4083fb:	push   rbx
  4083fc:	sub    rsp,0xb8
  408403:	movaps XMMWORD PTR [rsp+0xa0],xmm6
  40840b:	mov    r12d,DWORD PTR [r9]
  40840e:	mov    eax,r12d
  408411:	and    eax,0xffffffcf
  408414:	mov    DWORD PTR [r9],eax
  408417:	mov    eax,r12d
  40841a:	and    eax,0x7
  40841d:	cmp    eax,0x4
  408420:	ja     0x409853
  408426:	mov    r13d,edx
  408429:	lea    rdx,[rip+0x5c90]        # 0x40e0c0
  408430:	mov    QWORD PTR [rsp+0x28],r9
  408435:	mov    r15,r8
  408438:	mov    rbp,rcx
  40843b:	movsxd rax,DWORD PTR [rdx+rax*4]
  40843f:	add    rdx,rax
  408442:	jmp    rdx
  408444:	mov    edi,DWORD PTR [rcx]
  408446:	xor    ecx,ecx
  408448:	cmp    edi,0x20
  40844b:	jle    0x40845b
  40844d:	mov    eax,0x20
  408452:	add    eax,eax
  408454:	add    ecx,0x1
  408457:	cmp    edi,eax
  408459:	jg     0x408452
  40845b:	call   0x409ac0
  408460:	mov    rsi,rax
  408463:	lea    eax,[rdi-0x1]
  408466:	lea    r9,[rsi+0x18]
  40846a:	sar    eax,0x5
  40846d:	cdqe   
  40846f:	mov    rdx,r9
  408472:	lea    r11,[r15+rax*4]
  408476:	mov    rax,r15
  408479:	nop    DWORD PTR [rax+0x0]
  408480:	mov    ecx,DWORD PTR [rax]
  408482:	add    rax,0x4
  408486:	add    rdx,0x4
  40848a:	cmp    r11,rax
  40848d:	mov    DWORD PTR [rdx-0x4],ecx
  408490:	jae    0x408480
  408492:	sub    rdx,r9
  408495:	sar    rdx,0x2
  408499:	mov    r14d,edx
  40849c:	movsxd rdx,edx
  40849f:	lea    rax,[r9+rdx*4-0x4]
  4084a4:	jmp    0x4084bf
  4084a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4084b0:	sub    rax,0x4
  4084b4:	test   edx,edx
  4084b6:	mov    r14d,edx
  4084b9:	je     0x4089c0
  4084bf:	mov    r8d,DWORD PTR [rax]
  4084c2:	lea    edx,[r14-0x1]
  4084c6:	test   r8d,r8d
  4084c9:	je     0x4084b0
  4084cb:	movsxd rdx,edx
  4084ce:	mov    DWORD PTR [rsi+0x14],r14d
  4084d2:	shl    r14d,0x5
  4084d6:	bsr    eax,DWORD PTR [rsi+rdx*4+0x18]
  4084db:	xor    eax,0x1f
  4084de:	sub    r14d,eax
  4084e1:	mov    rcx,rsi
  4084e4:	call   0x409960
  4084e9:	test   eax,eax
  4084eb:	mov    DWORD PTR [rsp+0x9c],eax
  4084f2:	mov    r11d,r13d
  4084f5:	jne    0x4089d0
  4084fb:	mov    ecx,DWORD PTR [rsi+0x14]
  4084fe:	test   ecx,ecx
  408500:	jne    0x4085b0
  408506:	mov    rcx,rsi
  408509:	call   0x409bd0
  40850e:	mov    rax,QWORD PTR [rsp+0x130]
  408516:	mov    rdx,QWORD PTR [rsp+0x138]
  40851e:	lea    rcx,[rip+0x5b98]        # 0x40e0bd
  408525:	mov    r8d,0x1
  40852b:	mov    DWORD PTR [rax],0x1
  408531:	call   0x408200
  408536:	nop
  408537:	movaps xmm6,XMMWORD PTR [rsp+0xa0]
  40853f:	add    rsp,0xb8
  408546:	pop    rbx
  408547:	pop    rsi
  408548:	pop    rdi
  408549:	pop    rbp
  40854a:	pop    r12
  40854c:	pop    r13
  40854e:	pop    r14
  408550:	pop    r15
  408552:	ret    
  408553:	mov    rax,QWORD PTR [rsp+0x130]
  40855b:	mov    rdx,QWORD PTR [rsp+0x138]
  408563:	lea    rcx,[rip+0x5b4f]        # 0x40e0b9
  40856a:	mov    r8d,0x3
  408570:	mov    DWORD PTR [rax],0xffff8000
  408576:	call   0x408200
  40857b:	jmp    0x408537
  40857d:	nop    DWORD PTR [rax]
  408580:	mov    rax,QWORD PTR [rsp+0x130]
  408588:	mov    rdx,QWORD PTR [rsp+0x138]
  408590:	lea    rcx,[rip+0x5b19]        # 0x40e0b0
  408597:	mov    r8d,0x8
  40859d:	mov    DWORD PTR [rax],0xffff8000
  4085a3:	call   0x408200
  4085a8:	jmp    0x408537
  4085aa:	nop    WORD PTR [rax+rax*1+0x0]
  4085b0:	lea    rdx,[rsp+0x9c]
  4085b8:	mov    rcx,rsi
  4085bb:	mov    DWORD PTR [rsp+0x30],r11d
  4085c0:	call   0x40a280
  4085c5:	movq   rdx,xmm0
  4085ca:	movq   r9,xmm0
  4085cf:	mov    r11d,DWORD PTR [rsp+0x30]
  4085d4:	pxor   xmm0,xmm0
  4085d8:	shr    rdx,0x20
  4085dc:	mov    r9d,r9d
  4085df:	and    edx,0xfffff
  4085e5:	lea    ecx,[r11+r14*1-0x1]
  4085ea:	or     edx,0x3ff00000
  4085f0:	mov    rax,rdx
  4085f3:	cvtsi2sd xmm0,ecx
  4085f7:	shl    rax,0x20
  4085fb:	mov    ebx,ecx
  4085fd:	or     r9,rax
  408600:	sar    ebx,0x1f
  408603:	mov    QWORD PTR [rsp+0x30],r9
  408608:	mov    eax,ebx
  40860a:	movsd  xmm1,QWORD PTR [rsp+0x30]
  408610:	xor    eax,ecx
  408612:	sub    eax,ebx
  408614:	subsd  xmm1,QWORD PTR [rip+0x5abc]        # 0x40e0d8
  40861c:	sub    eax,0x435
  408621:	test   eax,eax
  408623:	mulsd  xmm0,QWORD PTR [rip+0x5ac5]        # 0x40e0f0
  40862b:	mulsd  xmm1,QWORD PTR [rip+0x5aad]        # 0x40e0e0
  408633:	addsd  xmm1,QWORD PTR [rip+0x5aad]        # 0x40e0e8
  40863b:	addsd  xmm1,xmm0
  40863f:	jle    0x408655
  408641:	pxor   xmm0,xmm0
  408645:	cvtsi2sd xmm0,eax
  408649:	mulsd  xmm0,QWORD PTR [rip+0x5aa7]        # 0x40e0f8
  408651:	addsd  xmm1,xmm0
  408655:	cvttsd2si eax,xmm1
  408659:	pxor   xmm6,xmm6
  40865d:	ucomisd xmm6,xmm1
  408661:	mov    DWORD PTR [rsp+0x30],eax
  408665:	ja     0x408ef3
  40866b:	mov    eax,ecx
  40866d:	mov    r9d,r9d
  408670:	mov    DWORD PTR [rsp+0x6c],0x1
  408678:	shl    eax,0x14
  40867b:	add    eax,edx
  40867d:	shl    rax,0x20
  408681:	or     r9,rax
  408684:	cmp    DWORD PTR [rsp+0x30],0x16
  408689:	mov    QWORD PTR [rsp+0x80],r9
  408691:	ja     0x4086c0
  408693:	movsxd rax,DWORD PTR [rsp+0x30]
  408698:	mov    rdx,QWORD PTR [rip+0x5db1]        # 0x40e450
  40869f:	movsd  xmm0,QWORD PTR [rdx+rax*8]
  4086a4:	ucomisd xmm0,QWORD PTR [rsp+0x80]
  4086ad:	jbe    0x408a10
  4086b3:	sub    DWORD PTR [rsp+0x30],0x1
  4086b8:	mov    DWORD PTR [rsp+0x6c],0x0
  4086c0:	mov    eax,r14d
  4086c3:	mov    DWORD PTR [rsp+0x50],0x0
  4086cb:	sub    eax,ecx
  4086cd:	sub    eax,0x1
  4086d0:	mov    DWORD PTR [rsp+0x40],eax
  4086d4:	js     0x408ee0
  4086da:	mov    eax,DWORD PTR [rsp+0x30]
  4086de:	test   eax,eax
  4086e0:	js     0x408ec0
  4086e6:	add    DWORD PTR [rsp+0x40],eax
  4086ea:	mov    DWORD PTR [rsp+0x88],eax
  4086f1:	mov    DWORD PTR [rsp+0x58],0x0
  4086f9:	cmp    DWORD PTR [rsp+0x120],0x9
  408701:	ja     0x4089f0
  408707:	cmp    DWORD PTR [rsp+0x120],0x5
  40870f:	jle    0x4089fb
  408715:	sub    DWORD PTR [rsp+0x120],0x4
  40871d:	xor    eax,eax
  40871f:	cmp    DWORD PTR [rsp+0x120],0x3
  408727:	je     0x4090b4
  40872d:	jle    0x408e13
  408733:	cmp    DWORD PTR [rsp+0x120],0x4
  40873b:	mov    DWORD PTR [rsp+0x60],0x1
  408743:	je     0x408a20
  408749:	cmp    DWORD PTR [rsp+0x120],0x5
  408751:	jne    0x408e29
  408757:	mov    ebx,DWORD PTR [rsp+0x30]
  40875b:	add    ebx,DWORD PTR [rsp+0x128]
  408762:	mov    DWORD PTR [rsp+0x8c],ebx
  408769:	add    ebx,0x1
  40876c:	test   ebx,ebx
  40876e:	mov    DWORD PTR [rsp+0x68],ebx
  408772:	mov    ecx,ebx
  408774:	jle    0x4092f0
  40877a:	cmp    ebx,0xe
  40877d:	mov    DWORD PTR [rsp+0x9c],ebx
  408784:	setbe  bl
  408787:	and    ebx,eax
  408789:	mov    QWORD PTR [rsp+0x78],r9
  40878e:	mov    DWORD PTR [rsp+0x70],r11d
  408793:	call   0x4081d0
  408798:	mov    QWORD PTR [rsp+0x48],rax
  40879d:	mov    eax,DWORD PTR [rbp+0xc]
  4087a0:	mov    r11d,DWORD PTR [rsp+0x70]
  4087a5:	mov    r9,QWORD PTR [rsp+0x78]
  4087aa:	sub    eax,0x1
  4087ad:	mov    DWORD PTR [rsp+0x38],eax
  4087b1:	je     0x4087d8
  4087b3:	mov    ecx,DWORD PTR [rsp+0x38]
  4087b7:	mov    eax,0x2
  4087bc:	test   ecx,ecx
  4087be:	cmovns eax,ecx
  4087c1:	and    r12d,0x8
  4087c5:	mov    DWORD PTR [rsp+0x38],eax
  4087c9:	je     0x4087d8
  4087cb:	mov    eax,0x3
  4087d0:	sub    eax,DWORD PTR [rsp+0x38]
  4087d4:	mov    DWORD PTR [rsp+0x38],eax
  4087d8:	test   bl,bl
  4087da:	je     0x408ad0
  4087e0:	mov    eax,DWORD PTR [rsp+0x38]
  4087e4:	or     eax,DWORD PTR [rsp+0x30]
  4087e8:	jne    0x408ad0
  4087ee:	mov    eax,DWORD PTR [rsp+0x6c]
  4087f2:	mov    DWORD PTR [rsp+0x9c],0x0
  4087fd:	movsd  xmm4,QWORD PTR [rsp+0x80]
  408806:	test   eax,eax
  408808:	je     0x40881c
  40880a:	movsd  xmm0,QWORD PTR [rip+0x58f6]        # 0x40e108
  408812:	ucomisd xmm0,xmm4
  408816:	ja     0x40964b
  40881c:	movapd xmm0,xmm4
  408820:	mov    r12d,DWORD PTR [rsp+0x68]
  408825:	addsd  xmm0,xmm4
  408829:	addsd  xmm0,QWORD PTR [rip+0x58ef]        # 0x40e120
  408831:	movq   rdx,xmm0
  408836:	movq   rax,xmm0
  40883b:	shr    rdx,0x20
  40883f:	mov    eax,eax
  408841:	sub    edx,0x3400000
  408847:	shl    rdx,0x20
  40884b:	or     rax,rdx
  40884e:	test   r12d,r12d
  408851:	je     0x408a87
  408857:	mov    r9d,DWORD PTR [rsp+0x68]
  40885c:	movapd xmm0,xmm4
  408860:	xor    ecx,ecx
  408862:	mov    ebx,DWORD PTR [rsp+0x60]
  408866:	lea    edx,[r9-0x1]
  40886a:	movsxd rdx,edx
  40886d:	test   ebx,ebx
  40886f:	je     0x409393
  408875:	mov    r10,QWORD PTR [rip+0x5bd4]        # 0x40e450
  40887c:	movsd  xmm1,QWORD PTR [rip+0x58bc]        # 0x40e140
  408884:	mov    QWORD PTR [rsp+0x38],rax
  408889:	cvttsd2si eax,xmm0
  40888d:	pxor   xmm2,xmm2
  408891:	mov    DWORD PTR [rsp+0x9c],0x0
  40889c:	divsd  xmm1,QWORD PTR [r10+rdx*8]
  4088a2:	mov    rdx,QWORD PTR [rsp+0x48]
  4088a7:	mov    rbx,rdx
  4088aa:	add    rbx,0x1
  4088ae:	cvtsi2sd xmm2,eax
  4088b2:	add    eax,0x30
  4088b5:	mov    BYTE PTR [rdx],al
  4088b7:	movsd  xmm5,QWORD PTR [rsp+0x38]
  4088bd:	subsd  xmm0,xmm2
  4088c1:	subsd  xmm1,xmm5
  4088c5:	ucomisd xmm1,xmm0
  4088c9:	ja     0x408964
  4088cf:	movsd  xmm5,QWORD PTR [rip+0x5831]        # 0x40e108
  4088d7:	movapd xmm2,xmm5
  4088db:	subsd  xmm2,xmm0
  4088df:	ucomisd xmm1,xmm2
  4088e3:	ja     0x409467
  4088e9:	mov    eax,DWORD PTR [rsp+0x9c]
  4088f0:	movsd  xmm3,QWORD PTR [rip+0x5818]        # 0x40e110
  4088f8:	add    eax,0x1
  4088fb:	cmp    r9d,eax
  4088fe:	mov    DWORD PTR [rsp+0x9c],eax
  408905:	jg     0x40893c
  408907:	jmp    0x408abe
  40890c:	nop    DWORD PTR [rax+0x0]
  408910:	movapd xmm2,xmm5
  408914:	subsd  xmm2,xmm0
  408918:	ucomisd xmm1,xmm2
  40891c:	ja     0x409467
  408922:	mov    eax,DWORD PTR [rsp+0x9c]
  408929:	add    eax,0x1
  40892c:	cmp    r9d,eax
  40892f:	mov    DWORD PTR [rsp+0x9c],eax
  408936:	jle    0x408abe
  40893c:	mulsd  xmm0,xmm3
  408940:	add    rbx,0x1
  408944:	pxor   xmm2,xmm2
  408948:	mulsd  xmm1,xmm3
  40894c:	cvttsd2si eax,xmm0
  408950:	cvtsi2sd xmm2,eax
  408954:	add    eax,0x30
  408957:	mov    BYTE PTR [rbx-0x1],al
  40895a:	subsd  xmm0,xmm2
  40895e:	ucomisd xmm1,xmm0
  408962:	jbe    0x408910
  408964:	ucomisd xmm0,xmm6
  408968:	lea    ebp,[rcx+0x1]
  40896b:	jp     0x408973
  40896d:	je     0x4092c7
  408973:	mov    r15d,0x10
  408979:	nop    DWORD PTR [rax+0x0]
  408980:	mov    rcx,rsi
  408983:	call   0x409bd0
  408988:	cmp    QWORD PTR [rsp+0x138],0x0
  408991:	mov    rax,QWORD PTR [rsp+0x130]
  408999:	mov    BYTE PTR [rbx],0x0
  40899c:	mov    DWORD PTR [rax],ebp
  40899e:	je     0x4089ab
  4089a0:	mov    rax,QWORD PTR [rsp+0x138]
  4089a8:	mov    QWORD PTR [rax],rbx
  4089ab:	mov    rax,QWORD PTR [rsp+0x28]
  4089b0:	or     DWORD PTR [rax],r15d
  4089b3:	mov    rax,QWORD PTR [rsp+0x48]
  4089b8:	jmp    0x408537
  4089bd:	nop    DWORD PTR [rax]
  4089c0:	mov    DWORD PTR [rsi+0x14],0x0
  4089c7:	jmp    0x4084e1
  4089cc:	nop    DWORD PTR [rax+0x0]
  4089d0:	mov    edx,eax
  4089d2:	mov    rcx,rsi
  4089d5:	call   0x409860
  4089da:	mov    eax,DWORD PTR [rsp+0x9c]
  4089e1:	lea    r11d,[r13+rax*1+0x0]
  4089e6:	sub    r14d,eax
  4089e9:	jmp    0x4084fb
  4089ee:	xchg   ax,ax
  4089f0:	mov    DWORD PTR [rsp+0x120],0x0
  4089fb:	add    ecx,0x3fe
  408a01:	cmp    ecx,0x7f7
  408a07:	setbe  al
  408a0a:	jmp    0x40871f
  408a0f:	nop
  408a10:	mov    DWORD PTR [rsp+0x6c],0x0
  408a18:	jmp    0x4086c0
  408a1d:	nop    DWORD PTR [rax]
  408a20:	mov    edx,DWORD PTR [rsp+0x128]
  408a27:	test   edx,edx
  408a29:	jle    0x4092db
  408a2f:	cmp    DWORD PTR [rsp+0x128],0xe
  408a37:	setbe  bl
  408a3a:	mov    ecx,DWORD PTR [rsp+0x128]
  408a41:	and    ebx,eax
  408a43:	mov    DWORD PTR [rsp+0x9c],ecx
  408a4a:	mov    DWORD PTR [rsp+0x8c],ecx
  408a51:	mov    DWORD PTR [rsp+0x68],ecx
  408a55:	jmp    0x408789
  408a5a:	movapd xmm0,xmm4
  408a5e:	addsd  xmm0,xmm4
  408a62:	addsd  xmm0,QWORD PTR [rip+0x56b6]        # 0x40e120
  408a6a:	movq   rdx,xmm0
  408a6f:	movq   rax,xmm0
  408a74:	shr    rdx,0x20
  408a78:	mov    eax,eax
  408a7a:	sub    edx,0x3400000
  408a80:	shl    rdx,0x20
  408a84:	or     rax,rdx
  408a87:	movapd xmm1,xmm4
  408a8b:	mov    QWORD PTR [rsp+0x38],rax
  408a90:	movsd  xmm0,QWORD PTR [rsp+0x38]
  408a96:	subsd  xmm1,QWORD PTR [rip+0x568a]        # 0x40e128
  408a9e:	ucomisd xmm1,xmm0
  408aa2:	ja     0x409384
  408aa8:	movsd  xmm2,QWORD PTR [rip+0x5680]        # 0x40e130
  408ab0:	xorpd  xmm0,xmm2
  408ab4:	ucomisd xmm0,xmm1
  408ab8:	ja     0x408e9d
  408abe:	movq   r9,xmm4
  408ac3:	mov    DWORD PTR [rsp+0x38],0x0
  408acb:	nop    DWORD PTR [rax+rax*1+0x0]
  408ad0:	test   r11d,r11d
  408ad3:	js     0x408b72
  408ad9:	movsxd rax,DWORD PTR [rsp+0x30]
  408ade:	cmp    eax,DWORD PTR [rbp+0x14]
  408ae1:	jg     0x408b72
  408ae7:	mov    ebx,DWORD PTR [rsp+0x68]
  408aeb:	mov    rdx,QWORD PTR [rip+0x595e]        # 0x40e450
  408af2:	test   ebx,ebx
  408af4:	movsd  xmm2,QWORD PTR [rdx+rax*8]
  408af9:	jg     0x409203
  408aff:	mov    eax,DWORD PTR [rsp+0x128]
  408b06:	shr    eax,0x1f
  408b09:	test   al,al
  408b0b:	je     0x409203
  408b11:	test   ebx,ebx
  408b13:	jne    0x408e9d
  408b19:	mulsd  xmm2,QWORD PTR [rip+0x5607]        # 0x40e128
  408b21:	mov    QWORD PTR [rsp+0x38],r9
  408b26:	movsd  xmm5,QWORD PTR [rsp+0x38]
  408b2c:	ucomisd xmm2,xmm5
  408b30:	jae    0x408e9d
  408b36:	mov    ebp,DWORD PTR [rsp+0x30]
  408b3a:	xor    r12d,r12d
  408b3d:	xor    edi,edi
  408b3f:	add    ebp,0x2
  408b42:	mov    rax,QWORD PTR [rsp+0x48]
  408b47:	mov    r15d,0x20
  408b4d:	lea    rbx,[rax+0x1]
  408b51:	mov    BYTE PTR [rax],0x31
  408b54:	mov    rcx,r12
  408b57:	call   0x409bd0
  408b5c:	test   rdi,rdi
  408b5f:	je     0x408980
  408b65:	mov    rcx,rdi
  408b68:	call   0x409bd0
  408b6d:	jmp    0x408980
  408b72:	mov    r9d,DWORD PTR [rsp+0x60]
  408b77:	test   r9d,r9d
  408b7a:	je     0x409080
  408b80:	mov    edx,DWORD PTR [rbp+0x4]
  408b83:	sub    edi,r14d
  408b86:	mov    ecx,r11d
  408b89:	lea    eax,[rdi+0x1]
  408b8c:	sub    ecx,edi
  408b8e:	cmp    ecx,edx
  408b90:	mov    DWORD PTR [rsp+0x9c],eax
  408b97:	jge    0x408bcc
  408b99:	mov    ebx,DWORD PTR [rsp+0x120]
  408ba0:	lea    ecx,[rbx-0x3]
  408ba3:	and    ecx,0xfffffffd
  408ba6:	je     0x408bcc
  408ba8:	mov    ebx,DWORD PTR [rsp+0x68]
  408bac:	sub    r11d,edx
  408baf:	lea    eax,[r11+0x1]
  408bb3:	test   ebx,ebx
  408bb5:	mov    DWORD PTR [rsp+0x9c],eax
  408bbc:	setg   cl
  408bbf:	cmp    ebx,eax
  408bc1:	setl   dl
  408bc4:	test   cl,dl
  408bc6:	je     0x40930f
  408bcc:	cmp    DWORD PTR [rsp+0x120],0x1
  408bd4:	jle    0x40930f
  408bda:	mov    ebx,DWORD PTR [rsp+0x58]
  408bde:	mov    eax,DWORD PTR [rsp+0x68]
  408be2:	mov    r12d,ebx
  408be5:	sub    eax,0x1
  408be8:	sub    r12d,eax
  408beb:	cmp    ebx,eax
  408bed:	jge    0x408c03
  408bef:	mov    edx,eax
  408bf1:	sub    edx,DWORD PTR [rsp+0x58]
  408bf5:	xor    r12d,r12d
  408bf8:	add    DWORD PTR [rsp+0x88],edx
  408bff:	mov    DWORD PTR [rsp+0x58],eax
  408c03:	mov    eax,DWORD PTR [rsp+0x68]
  408c07:	test   eax,eax
  408c09:	js     0x4095a2
  408c0f:	mov    ebx,DWORD PTR [rsp+0x50]
  408c13:	mov    DWORD PTR [rsp+0x9c],eax
  408c1a:	mov    ecx,0x1
  408c1f:	add    DWORD PTR [rsp+0x50],eax
  408c23:	add    DWORD PTR [rsp+0x40],eax
  408c27:	call   0x409d00
  408c2c:	mov    rdi,rax
  408c2f:	mov    ecx,DWORD PTR [rsp+0x40]
  408c33:	test   ecx,ecx
  408c35:	mov    eax,ecx
  408c37:	jle    0x408c55
  408c39:	test   ebx,ebx
  408c3b:	jle    0x408c55
  408c3d:	cmp    ecx,ebx
  408c3f:	cmovg  eax,ebx
  408c42:	sub    DWORD PTR [rsp+0x50],eax
  408c46:	sub    ecx,eax
  408c48:	mov    DWORD PTR [rsp+0x9c],eax
  408c4f:	sub    ebx,eax
  408c51:	mov    DWORD PTR [rsp+0x40],ecx
  408c55:	mov    r8d,DWORD PTR [rsp+0x58]
  408c5a:	test   r8d,r8d
  408c5d:	jle    0x408cab
  408c5f:	mov    ecx,DWORD PTR [rsp+0x60]
  408c63:	test   ecx,ecx
  408c65:	je     0x4090a0
  408c6b:	test   r12d,r12d
  408c6e:	jle    0x408c9e
  408c70:	mov    rcx,rdi
  408c73:	mov    edx,r12d
  408c76:	call   0x409e60
  408c7b:	mov    rdx,rsi
  408c7e:	mov    rcx,rax
  408c81:	mov    rdi,rax
  408c84:	call   0x409d30
  408c89:	mov    rcx,rsi
  408c8c:	mov    QWORD PTR [rsp+0x70],rax
  408c91:	call   0x409bd0
  408c96:	mov    rax,QWORD PTR [rsp+0x70]
  408c9b:	mov    rsi,rax
  408c9e:	mov    edx,DWORD PTR [rsp+0x58]
  408ca2:	sub    edx,r12d
  408ca5:	jne    0x4090a4
  408cab:	mov    ecx,0x1
  408cb0:	call   0x409d00
  408cb5:	mov    r12,rax
  408cb8:	mov    eax,DWORD PTR [rsp+0x88]
  408cbf:	test   eax,eax
  408cc1:	jle    0x408df0
  408cc7:	mov    rcx,r12
  408cca:	mov    edx,eax
  408ccc:	call   0x409e60
  408cd1:	cmp    DWORD PTR [rsp+0x120],0x1
  408cd9:	mov    r12,rax
  408cdc:	jg     0x408ce8
  408cde:	cmp    r14d,0x1
  408ce2:	je     0x408dac
  408ce8:	xor    ebp,ebp
  408cea:	mov    eax,DWORD PTR [r12+0x14]
  408cef:	sub    eax,0x1
  408cf2:	cdqe   
  408cf4:	bsr    eax,DWORD PTR [r12+rax*4+0x18]
  408cfa:	xor    eax,0x1f
  408cfd:	sub    eax,DWORD PTR [rsp+0x40]
  408d01:	mov    edx,DWORD PTR [rsp+0x50]
  408d05:	sub    eax,0x4
  408d08:	and    eax,0x1f
  408d0b:	add    edx,eax
  408d0d:	mov    r13d,eax
  408d10:	mov    DWORD PTR [rsp+0x9c],eax
  408d17:	test   edx,edx
  408d19:	mov    ecx,eax
  408d1b:	jle    0x408d2f
  408d1d:	mov    rcx,rsi
  408d20:	call   0x409fd0
  408d25:	mov    ecx,DWORD PTR [rsp+0x9c]
  408d2c:	mov    rsi,rax
  408d2f:	mov    edx,DWORD PTR [rsp+0x40]
  408d33:	add    edx,ecx
  408d35:	test   edx,edx
  408d37:	jle    0x408d44
  408d39:	mov    rcx,r12
  408d3c:	call   0x409fd0
  408d41:	mov    r12,rax
  408d44:	mov    eax,DWORD PTR [rsp+0x6c]
  408d48:	test   eax,eax
  408d4a:	jne    0x4090c1
  408d50:	mov    r14d,DWORD PTR [rsp+0x68]
  408d55:	test   r14d,r14d
  408d58:	jg     0x408f11
  408d5e:	cmp    DWORD PTR [rsp+0x120],0x2
  408d66:	jle    0x408f11
  408d6c:	mov    r11d,DWORD PTR [rsp+0x68]
  408d71:	test   r11d,r11d
  408d74:	jne    0x408ea2
  408d7a:	xor    r8d,r8d
  408d7d:	mov    rcx,r12
  408d80:	mov    edx,0x5
  408d85:	call   0x409c40
  408d8a:	mov    rcx,rsi
  408d8d:	mov    rdx,rax
  408d90:	mov    r12,rax
  408d93:	call   0x40a0f0
  408d98:	test   eax,eax
  408d9a:	jle    0x408ea2
  408da0:	mov    ebp,DWORD PTR [rsp+0x30]
  408da4:	add    ebp,0x2
  408da7:	jmp    0x408b42
  408dac:	mov    eax,DWORD PTR [rbp+0x4]
  408daf:	add    eax,0x1
  408db2:	cmp    r13d,eax
  408db5:	jle    0x408ce8
  408dbb:	add    DWORD PTR [rsp+0x50],0x1
  408dc0:	add    DWORD PTR [rsp+0x40],0x1
  408dc5:	mov    ebp,0x1
  408dca:	nop    WORD PTR [rax+rax*1+0x0]
  408dd0:	mov    edx,DWORD PTR [rsp+0x88]
  408dd7:	mov    eax,0x1f
  408ddc:	test   edx,edx
  408dde:	je     0x408cfd
  408de4:	jmp    0x408cea
  408de9:	nop    DWORD PTR [rax+0x0]
  408df0:	cmp    DWORD PTR [rsp+0x120],0x1
  408df8:	jg     0x408e00
  408dfa:	cmp    r14d,0x1
  408dfe:	je     0x408e04
  408e00:	xor    ebp,ebp
  408e02:	jmp    0x408dd0
  408e04:	mov    eax,DWORD PTR [rbp+0x4]
  408e07:	xor    ebp,ebp
  408e09:	add    eax,0x1
  408e0c:	cmp    r13d,eax
  408e0f:	jle    0x408dd0
  408e11:	jmp    0x408dbb
  408e13:	cmp    DWORD PTR [rsp+0x120],0x2
  408e1b:	mov    DWORD PTR [rsp+0x60],0x0
  408e23:	je     0x408a20
  408e29:	pxor   xmm0,xmm0
  408e2d:	mov    QWORD PTR [rsp+0x60],r9
  408e32:	mov    DWORD PTR [rsp+0x68],r11d
  408e37:	cvtsi2sd xmm0,edi
  408e3b:	mulsd  xmm0,QWORD PTR [rip+0x52bd]        # 0x40e100
  408e43:	cvttsd2si ecx,xmm0
  408e47:	add    ecx,0x3
  408e4a:	mov    DWORD PTR [rsp+0x9c],ecx
  408e51:	call   0x4081d0
  408e56:	mov    QWORD PTR [rsp+0x48],rax
  408e5b:	mov    eax,DWORD PTR [rbp+0xc]
  408e5e:	mov    r11d,DWORD PTR [rsp+0x68]
  408e63:	mov    r9,QWORD PTR [rsp+0x60]
  408e68:	sub    eax,0x1
  408e6b:	mov    DWORD PTR [rsp+0x38],eax
  408e6f:	jne    0x40931d
  408e75:	mov    eax,0xffffffff
  408e7a:	mov    DWORD PTR [rsp+0x60],0x1
  408e82:	mov    DWORD PTR [rsp+0x128],0x0
  408e8d:	mov    DWORD PTR [rsp+0x8c],eax
  408e94:	mov    DWORD PTR [rsp+0x68],eax
  408e98:	jmp    0x408ad0
  408e9d:	xor    r12d,r12d
  408ea0:	xor    edi,edi
  408ea2:	mov    ebp,DWORD PTR [rsp+0x128]
  408ea9:	mov    rbx,QWORD PTR [rsp+0x48]
  408eae:	mov    r15d,0x10
  408eb4:	neg    ebp
  408eb6:	jmp    0x408b54
  408ebb:	nop    DWORD PTR [rax+rax*1+0x0]
  408ec0:	mov    eax,DWORD PTR [rsp+0x30]
  408ec4:	sub    DWORD PTR [rsp+0x50],eax
  408ec8:	mov    DWORD PTR [rsp+0x88],0x0
  408ed3:	neg    eax
  408ed5:	mov    DWORD PTR [rsp+0x58],eax
  408ed9:	jmp    0x4086f9
  408ede:	xchg   ax,ax
  408ee0:	neg    eax
  408ee2:	mov    DWORD PTR [rsp+0x40],0x0
  408eea:	mov    DWORD PTR [rsp+0x50],eax
  408eee:	jmp    0x4086da
  408ef3:	pxor   xmm0,xmm0
  408ef7:	cvtsi2sd xmm0,eax
  408efb:	ucomisd xmm0,xmm1
  408eff:	jp     0x408f07
  408f01:	je     0x40866b
  408f07:	sub    DWORD PTR [rsp+0x30],0x1
  408f0c:	jmp    0x40866b
  408f11:	mov    r10d,DWORD PTR [rsp+0x60]
  408f16:	test   r10d,r10d
  408f19:	je     0x409120
  408f1f:	lea    edx,[rbx+r13*1]
  408f23:	test   edx,edx
  408f25:	jle    0x408f32
  408f27:	mov    rcx,rdi
  408f2a:	call   0x409fd0
  408f2f:	mov    rdi,rax
  408f32:	test   ebp,ebp
  408f34:	mov    r13,rdi
  408f37:	jne    0x4095d5
  408f3d:	mov    DWORD PTR [rsp+0x9c],0x1
  408f48:	mov    rbx,QWORD PTR [rsp+0x48]
  408f4d:	mov    QWORD PTR [rsp+0x40],r12
  408f52:	mov    QWORD PTR [rsp+0x50],r15
  408f57:	jmp    0x40901e
  408f5c:	nop    DWORD PTR [rax+0x0]
  408f60:	mov    rcx,r8
  408f63:	call   0x409bd0
  408f68:	mov    eax,r12d
  408f6b:	or     eax,DWORD PTR [rsp+0x120]
  408f72:	jne    0x408f8a
  408f74:	mov    ecx,DWORD PTR [rsp+0x38]
  408f78:	test   ecx,ecx
  408f7a:	jne    0x408f8a
  408f7c:	mov    rax,QWORD PTR [rsp+0x50]
  408f81:	test   BYTE PTR [rax],0x1
  408f84:	je     0x409745
  408f8a:	test   r14d,r14d
  408f8d:	js     0x4094a0
  408f93:	or     r14d,DWORD PTR [rsp+0x120]
  408f9b:	jne    0x408fab
  408f9d:	mov    rax,QWORD PTR [rsp+0x50]
  408fa2:	test   BYTE PTR [rax],0x1
  408fa5:	je     0x4094a0
  408fab:	test   r12d,r12d
  408fae:	jle    0x408fbb
  408fb0:	cmp    DWORD PTR [rsp+0x38],0x2
  408fb5:	jne    0x4096af
  408fbb:	add    rbx,0x1
  408fbf:	mov    BYTE PTR [rbx-0x1],bpl
  408fc3:	mov    eax,DWORD PTR [rsp+0x68]
  408fc7:	cmp    DWORD PTR [rsp+0x9c],eax
  408fce:	je     0x40963b
  408fd4:	xor    r8d,r8d
  408fd7:	mov    rcx,rsi
  408fda:	mov    edx,0xa
  408fdf:	call   0x409c40
  408fe4:	xor    r8d,r8d
  408fe7:	cmp    rdi,r13
  408fea:	mov    rsi,rax
  408fed:	mov    edx,0xa
  408ff2:	mov    rcx,rdi
  408ff5:	je     0x409090
  408ffb:	call   0x409c40
  409000:	mov    rcx,r13
  409003:	xor    r8d,r8d
  409006:	mov    edx,0xa
  40900b:	mov    rdi,rax
  40900e:	call   0x409c40
  409013:	mov    r13,rax
  409016:	add    DWORD PTR [rsp+0x9c],0x1
  40901e:	mov    r12,QWORD PTR [rsp+0x40]
  409023:	mov    rcx,rsi
  409026:	mov    rdx,r12
  409029:	call   0x408270
  40902e:	mov    rdx,rdi
  409031:	mov    rcx,rsi
  409034:	mov    r15d,eax
  409037:	lea    ebp,[rax+0x30]
  40903a:	call   0x40a0f0
  40903f:	mov    rcx,r12
  409042:	mov    rdx,r13
  409045:	mov    r14d,eax
  409048:	call   0x40a140
  40904d:	mov    r9d,DWORD PTR [rax+0x10]
  409051:	mov    r8,rax
  409054:	mov    r12d,0x1
  40905a:	test   r9d,r9d
  40905d:	jne    0x408f60
  409063:	mov    rdx,rax
  409066:	mov    rcx,rsi
  409069:	mov    QWORD PTR [rsp+0x58],rax
  40906e:	call   0x40a0f0
  409073:	mov    r8,QWORD PTR [rsp+0x58]
  409078:	mov    r12d,eax
  40907b:	jmp    0x408f60
  409080:	mov    r12d,DWORD PTR [rsp+0x58]
  409085:	mov    ebx,DWORD PTR [rsp+0x50]
  409089:	xor    edi,edi
  40908b:	jmp    0x408c2f
  409090:	call   0x409c40
  409095:	mov    rdi,rax
  409098:	mov    r13,rax
  40909b:	jmp    0x409016
  4090a0:	mov    edx,DWORD PTR [rsp+0x58]
  4090a4:	mov    rcx,rsi
  4090a7:	call   0x409e60
  4090ac:	mov    rsi,rax
  4090af:	jmp    0x408cab
  4090b4:	mov    DWORD PTR [rsp+0x60],0x0
  4090bc:	jmp    0x408757
  4090c1:	mov    rdx,r12
  4090c4:	mov    rcx,rsi
  4090c7:	call   0x40a0f0
  4090cc:	test   eax,eax
  4090ce:	jns    0x408d50
  4090d4:	xor    r8d,r8d
  4090d7:	mov    rcx,rsi
  4090da:	mov    edx,0xa
  4090df:	sub    DWORD PTR [rsp+0x30],0x1
  4090e4:	call   0x409c40
  4090e9:	mov    rsi,rax
  4090ec:	mov    eax,DWORD PTR [rsp+0x60]
  4090f0:	test   eax,eax
  4090f2:	jne    0x4097b8
  4090f8:	mov    eax,DWORD PTR [rsp+0x8c]
  4090ff:	test   eax,eax
  409101:	jg     0x409115
  409103:	cmp    DWORD PTR [rsp+0x120],0x2
  40910b:	mov    DWORD PTR [rsp+0x68],eax
  40910f:	jg     0x408d6c
  409115:	mov    eax,DWORD PTR [rsp+0x8c]
  40911c:	mov    DWORD PTR [rsp+0x68],eax
  409120:	mov    DWORD PTR [rsp+0x9c],0x1
  40912b:	mov    rbx,QWORD PTR [rsp+0x48]
  409130:	mov    r13d,DWORD PTR [rsp+0x68]
  409135:	jmp    0x40915b
  409137:	nop    WORD PTR [rax+rax*1+0x0]
  409140:	mov    rcx,rsi
  409143:	xor    r8d,r8d
  409146:	mov    edx,0xa
  40914b:	call   0x409c40
  409150:	add    DWORD PTR [rsp+0x9c],0x1
  409158:	mov    rsi,rax
  40915b:	mov    rdx,r12
  40915e:	mov    rcx,rsi
  409161:	add    rbx,0x1
  409165:	call   0x408270
  40916a:	lea    ebp,[rax+0x30]
  40916d:	mov    BYTE PTR [rbx-0x1],bpl
  409171:	cmp    DWORD PTR [rsp+0x9c],r13d
  409179:	jl     0x409140
  40917b:	xor    r14d,r14d
  40917e:	mov    eax,DWORD PTR [rsp+0x38]
  409182:	test   eax,eax
  409184:	je     0x40954c
  40918a:	cmp    eax,0x2
  40918d:	je     0x40957c
  409193:	cmp    DWORD PTR [rsi+0x14],0x1
  409197:	jle    0x409713
  40919d:	movzx  edx,BYTE PTR [rbx-0x1]
  4091a1:	mov    rcx,QWORD PTR [rsp+0x48]
  4091a6:	jmp    0x4091c0
  4091a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4091b0:	cmp    rax,rcx
  4091b3:	je     0x40936c
  4091b9:	movzx  edx,BYTE PTR [rax-0x1]
  4091bd:	mov    rbx,rax
  4091c0:	cmp    dl,0x39
  4091c3:	lea    rax,[rbx-0x1]
  4091c7:	je     0x4091b0
  4091c9:	add    edx,0x1
  4091cc:	mov    r15d,0x20
  4091d2:	mov    BYTE PTR [rax],dl
  4091d4:	mov    rcx,r12
  4091d7:	call   0x409bd0
  4091dc:	test   rdi,rdi
  4091df:	je     0x4092cf
  4091e5:	cmp    r14,rdi
  4091e8:	je     0x4091f7
  4091ea:	test   r14,r14
  4091ed:	je     0x4091f7
  4091ef:	mov    rcx,r14
  4091f2:	call   0x409bd0
  4091f7:	mov    ebp,DWORD PTR [rsp+0x30]
  4091fb:	add    ebp,0x1
  4091fe:	jmp    0x408b65
  409203:	mov    QWORD PTR [rsp+0x40],r9
  409208:	mov    rdi,QWORD PTR [rsp+0x48]
  40920d:	movsd  xmm0,QWORD PTR [rsp+0x40]
  409213:	mov    DWORD PTR [rsp+0x9c],0x1
  40921e:	movapd xmm1,xmm0
  409222:	mov    rbx,rdi
  409225:	add    rbx,0x1
  409229:	divsd  xmm1,xmm2
  40922d:	cvttsd2si eax,xmm1
  409231:	pxor   xmm1,xmm1
  409235:	cvtsi2sd xmm1,eax
  409239:	lea    edx,[rax+0x30]
  40923c:	mov    BYTE PTR [rdi],dl
  40923e:	mulsd  xmm1,xmm2
  409242:	subsd  xmm0,xmm1
  409246:	ucomisd xmm0,xmm6
  40924a:	jp     0x40924e
  40924c:	je     0x4092c0
  40924e:	mov    edx,DWORD PTR [rsp+0x9c]
  409255:	cmp    DWORD PTR [rsp+0x68],edx
  409259:	je     0x409347
  40925f:	movsd  xmm3,QWORD PTR [rip+0x4ea9]        # 0x40e110
  409267:	movapd xmm4,xmm6
  40926b:	mov    ecx,DWORD PTR [rsp+0x68]
  40926f:	jmp    0x409280
  409271:	mov    edx,DWORD PTR [rsp+0x9c]
  409278:	cmp    ecx,edx
  40927a:	je     0x409347
  409280:	mulsd  xmm0,xmm3
  409284:	add    edx,0x1
  409287:	add    rbx,0x1
  40928b:	mov    DWORD PTR [rsp+0x9c],edx
  409292:	movapd xmm1,xmm0
  409296:	divsd  xmm1,xmm2
  40929a:	cvttsd2si eax,xmm1
  40929e:	pxor   xmm1,xmm1
  4092a2:	cvtsi2sd xmm1,eax
  4092a6:	lea    edx,[rax+0x30]
  4092a9:	mov    BYTE PTR [rbx-0x1],dl
  4092ac:	mulsd  xmm1,xmm2
  4092b0:	subsd  xmm0,xmm1
  4092b4:	ucomisd xmm0,xmm6
  4092b8:	jp     0x409271
  4092ba:	ucomisd xmm0,xmm4
  4092be:	jne    0x409271
  4092c0:	mov    ebp,DWORD PTR [rsp+0x30]
  4092c4:	add    ebp,0x1
  4092c7:	xor    r15d,r15d
  4092ca:	jmp    0x408980
  4092cf:	mov    ebp,DWORD PTR [rsp+0x30]
  4092d3:	add    ebp,0x1
  4092d6:	jmp    0x408980
  4092db:	mov    ebx,0x1
  4092e0:	mov    DWORD PTR [rsp+0x128],0x1
  4092eb:	jmp    0x408a3a
  4092f0:	cmp    DWORD PTR [rsp+0x68],0xe
  4092f5:	mov    DWORD PTR [rsp+0x9c],0x1
  409300:	mov    ecx,0x1
  409305:	setbe  bl
  409308:	and    ebx,eax
  40930a:	jmp    0x408789
  40930f:	mov    r12d,DWORD PTR [rsp+0x58]
  409314:	mov    ebx,DWORD PTR [rsp+0x50]
  409318:	jmp    0x408c1a
  40931d:	mov    eax,0xffffffff
  409322:	xor    ebx,ebx
  409324:	mov    DWORD PTR [rsp+0x60],0x1
  40932c:	mov    DWORD PTR [rsp+0x8c],eax
  409333:	mov    DWORD PTR [rsp+0x68],eax
  409337:	mov    DWORD PTR [rsp+0x128],0x0
  409342:	jmp    0x4087b3
  409347:	mov    r10d,DWORD PTR [rsp+0x38]
  40934c:	test   r10d,r10d
  40934f:	je     0x40960e
  409355:	cmp    DWORD PTR [rsp+0x38],0x1
  40935a:	je     0x409701
  409360:	mov    ebp,DWORD PTR [rsp+0x30]
  409364:	add    ebp,0x1
  409367:	jmp    0x408973
  40936c:	mov    rax,QWORD PTR [rsp+0x48]
  409371:	add    DWORD PTR [rsp+0x30],0x1
  409376:	mov    r15d,0x20
  40937c:	mov    BYTE PTR [rax],0x31
  40937f:	jmp    0x4091d4
  409384:	mov    ebp,0x2
  409389:	xor    r12d,r12d
  40938c:	xor    edi,edi
  40938e:	jmp    0x408b42
  409393:	mov    r10,QWORD PTR [rip+0x50b6]        # 0x40e450
  40939a:	mov    QWORD PTR [rsp+0x38],rax
  40939f:	movsd  xmm3,QWORD PTR [rsp+0x38]
  4093a5:	mov    DWORD PTR [rsp+0x9c],0x1
  4093b0:	mov    rbx,QWORD PTR [rsp+0x48]
  4093b5:	movsd  xmm1,QWORD PTR [rip+0x4d53]        # 0x40e110
  4093bd:	mulsd  xmm3,QWORD PTR [r10+rdx*8]
  4093c3:	jmp    0x4093d3
  4093c5:	mulsd  xmm0,xmm1
  4093c9:	add    edx,0x1
  4093cc:	mov    DWORD PTR [rsp+0x9c],edx
  4093d3:	cvttsd2si eax,xmm0
  4093d7:	test   eax,eax
  4093d9:	je     0x4093e7
  4093db:	pxor   xmm2,xmm2
  4093df:	cvtsi2sd xmm2,eax
  4093e3:	subsd  xmm0,xmm2
  4093e7:	add    rbx,0x1
  4093eb:	add    eax,0x30
  4093ee:	mov    BYTE PTR [rbx-0x1],al
  4093f1:	mov    edx,DWORD PTR [rsp+0x9c]
  4093f8:	cmp    edx,r9d
  4093fb:	jne    0x4093c5
  4093fd:	movsd  xmm1,QWORD PTR [rip+0x4d3b]        # 0x40e140
  409405:	movapd xmm2,xmm3
  409409:	addsd  xmm2,xmm1
  40940d:	ucomisd xmm0,xmm2
  409411:	ja     0x409467
  409413:	subsd  xmm1,xmm3
  409417:	ucomisd xmm1,xmm0
  40941b:	jbe    0x408abe
  409421:	ucomisd xmm0,xmm6
  409425:	jp     0x4097ad
  40942b:	jne    0x4097ad
  409431:	xor    r15d,r15d
  409434:	jmp    0x409447
  409436:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409440:	movzx  eax,BYTE PTR [rbx-0x2]
  409444:	mov    rbx,rdx
  409447:	cmp    al,0x30
  409449:	lea    rdx,[rbx-0x1]
  40944d:	je     0x409440
  40944f:	lea    ebp,[rcx+0x1]
  409452:	jmp    0x408980
  409457:	test   al,0x1
  409459:	mov    ecx,DWORD PTR [rsp+0x30]
  40945d:	movzx  eax,BYTE PTR [rbx-0x1]
  409461:	je     0x4097ad
  409467:	mov    r8,QWORD PTR [rsp+0x48]
  40946c:	jmp    0x409480
  40946e:	xchg   ax,ax
  409470:	cmp    rdx,r8
  409473:	je     0x4095bc
  409479:	movzx  eax,BYTE PTR [rdx-0x1]
  40947d:	mov    rbx,rdx
  409480:	cmp    al,0x39
  409482:	lea    rdx,[rbx-0x1]
  409486:	je     0x409470
  409488:	mov    QWORD PTR [rsp+0x48],r8
  40948d:	add    eax,0x1
  409490:	mov    BYTE PTR [rdx],al
  409492:	lea    ebp,[rcx+0x1]
  409495:	mov    r15d,0x20
  40949b:	jmp    0x408980
  4094a0:	mov    edx,DWORD PTR [rsp+0x38]
  4094a4:	mov    eax,r12d
  4094a7:	mov    r14d,ebp
  4094aa:	mov    r12,QWORD PTR [rsp+0x40]
  4094af:	test   edx,edx
  4094b1:	je     0x4096e1
  4094b7:	cmp    DWORD PTR [rsi+0x14],0x1
  4094bb:	jle    0x4096d7
  4094c1:	cmp    DWORD PTR [rsp+0x38],0x2
  4094c6:	jne    0x409517
  4094c8:	jmp    0x4096f6
  4094cd:	nop    DWORD PTR [rax]
  4094d0:	add    rbx,0x1
  4094d4:	xor    r8d,r8d
  4094d7:	mov    rcx,r13
  4094da:	mov    BYTE PTR [rbx-0x1],r14b
  4094de:	mov    edx,0xa
  4094e3:	call   0x409c40
  4094e8:	cmp    rdi,r13
  4094eb:	mov    rcx,rsi
  4094ee:	mov    edx,0xa
  4094f3:	cmove  rdi,rax
  4094f7:	xor    r8d,r8d
  4094fa:	mov    rbp,rax
  4094fd:	call   0x409c40
  409502:	mov    rdx,r12
  409505:	mov    rcx,rax
  409508:	mov    rsi,rax
  40950b:	call   0x408270
  409510:	lea    r14d,[rax+0x30]
  409514:	mov    r13,rbp
  409517:	mov    rdx,r13
  40951a:	mov    rcx,r12
  40951d:	call   0x40a0f0
  409522:	test   eax,eax
  409524:	jg     0x4094d0
  409526:	cmp    r14d,0x39
  40952a:	je     0x409726
  409530:	add    r14d,0x1
  409534:	mov    r15d,0x20
  40953a:	mov    BYTE PTR [rbx],r14b
  40953d:	mov    r14,rdi
  409540:	add    rbx,0x1
  409544:	mov    rdi,r13
  409547:	jmp    0x4091d4
  40954c:	mov    rcx,rsi
  40954f:	mov    edx,0x1
  409554:	call   0x409fd0
  409559:	mov    rdx,r12
  40955c:	mov    rcx,rax
  40955f:	mov    rsi,rax
  409562:	call   0x40a0f0
  409567:	cmp    eax,0x0
  40956a:	jg     0x40919d
  409570:	jne    0x40957c
  409572:	and    bpl,0x1
  409576:	jne    0x40919d
  40957c:	cmp    DWORD PTR [rsi+0x14],0x1
  409580:	mov    r15d,0x10
  409586:	jg     0x409593
  409588:	jmp    0x40981d
  40958d:	nop    DWORD PTR [rax]
  409590:	mov    rbx,rax
  409593:	cmp    BYTE PTR [rbx-0x1],0x30
  409597:	lea    rax,[rbx-0x1]
  40959b:	je     0x409590
  40959d:	jmp    0x4091d4
  4095a2:	mov    ebx,DWORD PTR [rsp+0x50]
  4095a6:	mov    DWORD PTR [rsp+0x9c],0x0
  4095b1:	xor    eax,eax
  4095b3:	sub    ebx,DWORD PTR [rsp+0x68]
  4095b7:	jmp    0x408c1a
  4095bc:	mov    QWORD PTR [rsp+0x48],r8
  4095c1:	add    ecx,0x1
  4095c4:	mov    BYTE PTR [r8],0x30
  4095c8:	mov    rdx,r8
  4095cb:	mov    eax,0x31
  4095d0:	jmp    0x409490
  4095d5:	mov    ecx,DWORD PTR [rdi+0x8]
  4095d8:	call   0x409ac0
  4095dd:	lea    rcx,[rax+0x10]
  4095e1:	mov    rbx,rax
  4095e4:	movsxd rax,DWORD PTR [rdi+0x14]
  4095e8:	lea    rdx,[rdi+0x10]
  4095ec:	lea    r8,[rax*4+0x8]
  4095f4:	call   0x40ab38
  4095f9:	mov    edx,0x1
  4095fe:	mov    rcx,rbx
  409601:	call   0x409fd0
  409606:	mov    r13,rax
  409609:	jmp    0x408f3d
  40960e:	addsd  xmm0,xmm0
  409612:	ucomisd xmm0,xmm2
  409616:	ja     0x409701
  40961c:	ucomisd xmm2,xmm0
  409620:	jp     0x409628
  409622:	je     0x409457
  409628:	movzx  eax,BYTE PTR [rbx-0x1]
  40962c:	mov    ecx,DWORD PTR [rsp+0x30]
  409630:	mov    r15d,0x10
  409636:	jmp    0x409447
  40963b:	mov    r14,rdi
  40963e:	mov    r12,QWORD PTR [rsp+0x40]
  409643:	mov    rdi,r13
  409646:	jmp    0x40917e
  40964b:	mov    eax,DWORD PTR [rsp+0x68]
  40964f:	test   eax,eax
  409651:	je     0x408a5a
  409657:	mov    r9d,DWORD PTR [rsp+0x8c]
  40965f:	test   r9d,r9d
  409662:	jle    0x408abe
  409668:	movsd  xmm0,QWORD PTR [rip+0x4aa0]        # 0x40e110
  409670:	mov    ecx,0xffffffff
  409675:	movsd  xmm1,QWORD PTR [rip+0x4a9b]        # 0x40e118
  40967d:	mulsd  xmm0,xmm4
  409681:	mulsd  xmm1,xmm0
  409685:	addsd  xmm1,QWORD PTR [rip+0x4a93]        # 0x40e120
  40968d:	movq   rdx,xmm1
  409692:	movq   rax,xmm1
  409697:	shr    rdx,0x20
  40969b:	mov    eax,eax
  40969d:	sub    edx,0x3400000
  4096a3:	shl    rdx,0x20
  4096a7:	or     rax,rdx
  4096aa:	jmp    0x408862
  4096af:	cmp    ebp,0x39
  4096b2:	mov    r12,QWORD PTR [rsp+0x40]
  4096b7:	mov    rax,rbx
  4096ba:	je     0x409729
  4096bc:	add    ebp,0x1
  4096bf:	mov    r14,rdi
  4096c2:	add    rbx,0x1
  4096c6:	mov    BYTE PTR [rax],bpl
  4096c9:	mov    rdi,r13
  4096cc:	mov    r15d,0x20
  4096d2:	jmp    0x4091d4
  4096d7:	cmp    DWORD PTR [rsi+0x18],0x0
  4096db:	jne    0x4094c1
  4096e1:	test   eax,eax
  4096e3:	jg     0x409779
  4096e9:	xor    r15d,r15d
  4096ec:	cmp    DWORD PTR [rsi+0x14],0x1
  4096f0:	jle    0x4097f8
  4096f6:	mov    r15d,0x10
  4096fc:	jmp    0x40953a
  409701:	movzx  eax,BYTE PTR [rbx-0x1]
  409705:	mov    ecx,DWORD PTR [rsp+0x30]
  409709:	mov    r8,QWORD PTR [rsp+0x48]
  40970e:	jmp    0x409480
  409713:	mov    eax,DWORD PTR [rsi+0x18]
  409716:	test   eax,eax
  409718:	jne    0x40919d
  40971e:	xor    r15d,r15d
  409721:	jmp    0x409593
  409726:	mov    rax,rbx
  409729:	mov    r14,rdi
  40972c:	add    rbx,0x1
  409730:	mov    rdi,r13
  409733:	mov    BYTE PTR [rax],0x39
  409736:	mov    edx,0x39
  40973b:	mov    rcx,QWORD PTR [rsp+0x48]
  409740:	jmp    0x4091c0
  409745:	cmp    ebp,0x39
  409748:	mov    r12,QWORD PTR [rsp+0x40]
  40974d:	mov    rax,rbx
  409750:	je     0x409726
  409752:	test   r14d,r14d
  409755:	jle    0x409830
  40975b:	mov    ebp,r15d
  40975e:	mov    r15d,0x20
  409764:	add    ebp,0x31
  409767:	mov    r14,rdi
  40976a:	add    rbx,0x1
  40976e:	mov    BYTE PTR [rax],bpl
  409771:	mov    rdi,r13
  409774:	jmp    0x4091d4
  409779:	mov    rcx,rsi
  40977c:	mov    edx,0x1
  409781:	call   0x409fd0
  409786:	mov    rdx,r12
  409789:	mov    rcx,rax
  40978c:	mov    rsi,rax
  40978f:	call   0x40a0f0
  409794:	cmp    eax,0x0
  409797:	jle    0x40980a
  409799:	cmp    ebp,0x39
  40979c:	je     0x409726
  40979e:	lea    r14d,[rbp+0x1]
  4097a2:	mov    r15d,0x20
  4097a8:	jmp    0x4096ec
  4097ad:	mov    r15d,0x10
  4097b3:	jmp    0x409447
  4097b8:	xor    r8d,r8d
  4097bb:	mov    rcx,rdi
  4097be:	mov    edx,0xa
  4097c3:	call   0x409c40
  4097c8:	mov    rdi,rax
  4097cb:	mov    eax,DWORD PTR [rsp+0x8c]
  4097d2:	test   eax,eax
  4097d4:	jg     0x4097e8
  4097d6:	cmp    DWORD PTR [rsp+0x120],0x2
  4097de:	mov    DWORD PTR [rsp+0x68],eax
  4097e2:	jg     0x408d6c
  4097e8:	mov    eax,DWORD PTR [rsp+0x8c]
  4097ef:	mov    DWORD PTR [rsp+0x68],eax
  4097f3:	jmp    0x408f1f
  4097f8:	cmp    DWORD PTR [rsi+0x18],0x0
  4097fc:	mov    eax,0x10
  409801:	cmovne r15d,eax
  409805:	jmp    0x40953a
  40980a:	jne    0x409812
  40980c:	test   bpl,0x1
  409810:	jne    0x409799
  409812:	mov    r15d,0x20
  409818:	jmp    0x4096ec
  40981d:	cmp    DWORD PTR [rsi+0x18],0x1
  409821:	sbb    r15d,r15d
  409824:	not    r15d
  409827:	and    r15d,0x10
  40982b:	jmp    0x409593
  409830:	cmp    DWORD PTR [rsi+0x14],0x1
  409834:	mov    r15d,0x10
  40983a:	jg     0x409767
  409840:	cmp    DWORD PTR [rsi+0x18],0x1
  409844:	sbb    r15d,r15d
  409847:	not    r15d
  40984a:	and    r15d,0x10
  40984e:	jmp    0x409767
  409853:	xor    eax,eax
  409855:	jmp    0x408537
  40985a:	nop
  40985b:	nop
  40985c:	nop
  40985d:	nop
  40985e:	nop
  40985f:	nop
  409860:	push   rbp
  409861:	push   rdi
  409862:	push   rsi
  409863:	push   rbx
  409864:	mov    rsi,rcx
  409867:	lea    r10,[rcx+0x18]
  40986b:	movsxd rcx,DWORD PTR [rcx+0x14]
  40986f:	mov    eax,edx
  409871:	sar    eax,0x5
  409874:	cmp    eax,ecx
  409876:	jge    0x409900
  40987c:	cdqe   
  40987e:	and    edx,0x1f
  409881:	lea    rbx,[r10+rcx*4]
  409885:	lea    rdi,[r10+rax*4]
  409889:	je     0x409913
  40988f:	mov    r9d,DWORD PTR [rdi]
  409892:	lea    r8,[rdi+0x4]
  409896:	mov    ebp,0x20
  40989b:	mov    ecx,edx
  40989d:	sub    ebp,edx
  40989f:	shr    r9d,cl
  4098a2:	cmp    rbx,r8
  4098a5:	jbe    0x409958
  4098ab:	mov    r11,r10
  4098ae:	xchg   ax,ax
  4098b0:	mov    eax,DWORD PTR [r8]
  4098b3:	mov    ecx,ebp
  4098b5:	add    r11,0x4
  4098b9:	add    r8,0x4
  4098bd:	shl    eax,cl
  4098bf:	mov    ecx,edx
  4098c1:	or     eax,r9d
  4098c4:	mov    DWORD PTR [r11-0x4],eax
  4098c8:	mov    r9d,DWORD PTR [r8-0x4]
  4098cc:	shr    r9d,cl
  4098cf:	cmp    rbx,r8
  4098d2:	ja     0x4098b0
  4098d4:	sub    rbx,rdi
  4098d7:	lea    rax,[rbx-0x5]
  4098db:	shr    rax,0x2
  4098df:	lea    rax,[r10+rax*4+0x4]
  4098e4:	test   r9d,r9d
  4098e7:	mov    DWORD PTR [rax],r9d
  4098ea:	je     0x4098f0
  4098ec:	add    rax,0x4
  4098f0:	sub    rax,r10
  4098f3:	shr    rax,0x2
  4098f7:	jmp    0x40994c
  4098f9:	nop    DWORD PTR [rax+0x0]
  409900:	mov    DWORD PTR [rsi+0x14],0x0
  409907:	mov    DWORD PTR [rsi+0x18],0x0
  40990e:	pop    rbx
  40990f:	pop    rsi
  409910:	pop    rdi
  409911:	pop    rbp
  409912:	ret    
  409913:	cmp    rbx,rdi
  409916:	mov    rdx,r10
  409919:	mov    rax,rdi
  40991c:	jbe    0x409900
  40991e:	xchg   ax,ax
  409920:	add    rax,0x4
  409924:	mov    r8d,DWORD PTR [rax-0x4]
  409928:	add    rdx,0x4
  40992c:	cmp    rbx,rax
  40992f:	mov    DWORD PTR [rdx-0x4],r8d
  409933:	ja     0x409920
  409935:	not    rdi
  409938:	lea    rax,[rdi+rbx*1]
  40993c:	shr    rax,0x2
  409940:	lea    rax,[rax*4+0x4]
  409948:	shr    rax,0x2
  40994c:	test   eax,eax
  40994e:	mov    DWORD PTR [rsi+0x14],eax
  409951:	je     0x409907
  409953:	pop    rbx
  409954:	pop    rsi
  409955:	pop    rdi
  409956:	pop    rbp
  409957:	ret    
  409958:	mov    rax,r10
  40995b:	jmp    0x4098e4
  40995d:	nop    DWORD PTR [rax]
  409960:	movsxd rax,DWORD PTR [rcx+0x14]
  409964:	lea    rdx,[rcx+0x18]
  409968:	lea    r8,[rdx+rax*4]
  40996c:	cmp    rdx,r8
  40996f:	jae    0x40999b
  409971:	mov    ecx,DWORD PTR [rcx+0x18]
  409974:	xor    eax,eax
  409976:	test   ecx,ecx
  409978:	je     0x409986
  40997a:	jmp    0x409994
  40997c:	nop    DWORD PTR [rax+0x0]
  409980:	mov    ecx,DWORD PTR [rdx]
  409982:	test   ecx,ecx
  409984:	jne    0x409994
  409986:	add    rdx,0x4
  40998a:	add    eax,0x20
  40998d:	cmp    r8,rdx
  409990:	ja     0x409980
  409992:	repz ret 
  409994:	tzcnt  ecx,ecx
  409998:	add    eax,ecx
  40999a:	ret    
  40999b:	xor    eax,eax
  40999d:	ret    
  40999e:	nop
  40999f:	nop
  4099a0:	push   rsi
  4099a1:	push   rbx
  4099a2:	sub    rsp,0x28
  4099a6:	mov    eax,DWORD PTR [rip+0x8ae4]        # 0x412490
  4099ac:	movsxd rsi,ecx
  4099af:	cmp    eax,0x2
  4099b2:	je     0x409a1d
  4099b4:	test   eax,eax
  4099b6:	je     0x4099e2
  4099b8:	cmp    eax,0x1
  4099bb:	jne    0x4099db
  4099bd:	mov    rbx,QWORD PTR [rip+0x9acc]        # 0x413490
  4099c4:	mov    ecx,0x1
  4099c9:	call   rbx
  4099cb:	mov    eax,DWORD PTR [rip+0x8abf]        # 0x412490
  4099d1:	cmp    eax,0x1
  4099d4:	je     0x4099c4
  4099d6:	cmp    eax,0x2
  4099d9:	je     0x409a1d
  4099db:	add    rsp,0x28
  4099df:	pop    rbx
  4099e0:	pop    rsi
  4099e1:	ret    
  4099e2:	mov    al,0x1
  4099e4:	xchg   DWORD PTR [rip+0x8aa6],eax        # 0x412490
  4099ea:	test   eax,eax
  4099ec:	jne    0x409a40
  4099ee:	lea    rcx,[rip+0x8acb]        # 0x4124c0
  4099f5:	mov    rbx,QWORD PTR [rip+0x9a3c]        # 0x413438
  4099fc:	call   rbx
  4099fe:	lea    rcx,[rip+0x8ae3]        # 0x4124e8
  409a05:	call   rbx
  409a07:	lea    rcx,[rip+0x62]        # 0x409a70
  409a0e:	call   0x404920
  409a13:	mov    DWORD PTR [rip+0x8a73],0x2        # 0x412490
  409a1d:	lea    rdx,[rsi+rsi*4]
  409a21:	lea    rax,[rip+0x8a98]        # 0x4124c0
  409a28:	lea    rcx,[rax+rdx*8]
  409a2c:	mov    rax,QWORD PTR [rip+0x998d]        # 0x4133c0
  409a33:	add    rsp,0x28
  409a37:	pop    rbx
  409a38:	pop    rsi
  409a39:	rex.W jmp rax
  409a3c:	nop    DWORD PTR [rax+0x0]
  409a40:	cmp    eax,0x2
  409a43:	je     0x409a60
  409a45:	mov    eax,DWORD PTR [rip+0x8a45]        # 0x412490
  409a4b:	cmp    eax,0x1
  409a4e:	je     0x4099bd
  409a54:	jmp    0x4099d6
  409a56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409a60:	mov    DWORD PTR [rip+0x8a26],0x2        # 0x412490
  409a6a:	jmp    0x409a1d
  409a6c:	nop    DWORD PTR [rax+0x0]
  409a70:	push   rbx
  409a71:	sub    rsp,0x20
  409a75:	mov    eax,0x3
  409a7a:	xchg   DWORD PTR [rip+0x8a10],eax        # 0x412490
  409a80:	cmp    eax,0x2
  409a83:	je     0x409a90
  409a85:	add    rsp,0x20
  409a89:	pop    rbx
  409a8a:	ret    
  409a8b:	nop    DWORD PTR [rax+rax*1+0x0]
  409a90:	mov    rbx,QWORD PTR [rip+0x9921]        # 0x4133b8
  409a97:	lea    rcx,[rip+0x8a22]        # 0x4124c0
  409a9e:	call   rbx
  409aa0:	lea    rcx,[rip+0x8a41]        # 0x4124e8
  409aa7:	mov    rax,rbx
  409aaa:	add    rsp,0x20
  409aae:	pop    rbx
  409aaf:	rex.W jmp rax
  409ab2:	nop    DWORD PTR [rax+0x0]
  409ab6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409ac0:	push   rdi
  409ac1:	push   rsi
  409ac2:	push   rbx
  409ac3:	sub    rsp,0x20
  409ac7:	mov    ebx,ecx
  409ac9:	xor    ecx,ecx
  409acb:	call   0x4099a0
  409ad0:	cmp    ebx,0x9
  409ad3:	jg     0x409b10
  409ad5:	lea    rdx,[rip+0x8964]        # 0x412440
  409adc:	movsxd rcx,ebx
  409adf:	mov    rdi,QWORD PTR [rdx+rcx*8]
  409ae3:	test   rdi,rdi
  409ae6:	je     0x409b70
  409aec:	cmp    DWORD PTR [rip+0x899d],0x2        # 0x412490
  409af3:	mov    r8,QWORD PTR [rdi]
  409af6:	mov    QWORD PTR [rdx+rcx*8],r8
  409afa:	jne    0x409b56
  409afc:	lea    rcx,[rip+0x89bd]        # 0x4124c0
  409b03:	call   QWORD PTR [rip+0x993f]        # 0x413448
  409b09:	jmp    0x409b56
  409b0b:	nop    DWORD PTR [rax+rax*1+0x0]
  409b10:	mov    eax,0x1
  409b15:	mov    ecx,ebx
  409b17:	shl    eax,cl
  409b19:	mov    esi,eax
  409b1b:	lea    eax,[rax-0x1]
  409b1e:	cdqe   
  409b20:	lea    rdx,[rax*4+0x27]
  409b28:	shr    rdx,0x3
  409b2c:	mov    edx,edx
  409b2e:	lea    rcx,[rdx*8+0x0]
  409b36:	call   0x40ab40
  409b3b:	test   rax,rax
  409b3e:	mov    rdi,rax
  409b41:	je     0x409bca
  409b47:	cmp    DWORD PTR [rip+0x8942],0x2        # 0x412490
  409b4e:	mov    DWORD PTR [rdi+0x8],ebx
  409b51:	mov    DWORD PTR [rdi+0xc],esi
  409b54:	je     0x409afc
  409b56:	mov    DWORD PTR [rdi+0x14],0x0
  409b5d:	mov    DWORD PTR [rdi+0x10],0x0
  409b64:	mov    rax,rdi
  409b67:	add    rsp,0x20
  409b6b:	pop    rbx
  409b6c:	pop    rsi
  409b6d:	pop    rdi
  409b6e:	ret    
  409b6f:	nop
  409b70:	mov    ecx,ebx
  409b72:	mov    eax,0x1
  409b77:	mov    rdi,QWORD PTR [rip+0x2512]        # 0x40c090
  409b7e:	shl    eax,cl
  409b80:	lea    rcx,[rip+0x7fb9]        # 0x411b40
  409b87:	lea    edx,[rax-0x1]
  409b8a:	mov    esi,eax
  409b8c:	mov    rax,rdi
  409b8f:	movsxd rdx,edx
  409b92:	sub    rax,rcx
  409b95:	lea    rdx,[rdx*4+0x27]
  409b9d:	mov    rcx,rax
  409ba0:	sar    rcx,0x3
  409ba4:	shr    rdx,0x3
  409ba8:	mov    edx,edx
  409baa:	add    rcx,rdx
  409bad:	cmp    rcx,0x120
  409bb4:	ja     0x409b2e
  409bba:	lea    rdx,[rdi+rdx*8]
  409bbe:	mov    QWORD PTR [rip+0x24cb],rdx        # 0x40c090
  409bc5:	jmp    0x409b47
  409bca:	xor    eax,eax
  409bcc:	jmp    0x409b67
  409bce:	xchg   ax,ax
  409bd0:	push   rbx
  409bd1:	sub    rsp,0x20
  409bd5:	test   rcx,rcx
  409bd8:	je     0x409c09
  409bda:	cmp    DWORD PTR [rcx+0x8],0x9
  409bde:	jg     0x409c10
  409be0:	mov    rbx,rcx
  409be3:	xor    ecx,ecx
  409be5:	call   0x4099a0
  409bea:	movsxd rdx,DWORD PTR [rbx+0x8]
  409bee:	lea    rax,[rip+0x884b]        # 0x412440
  409bf5:	cmp    DWORD PTR [rip+0x8894],0x2        # 0x412490
  409bfc:	mov    rcx,QWORD PTR [rax+rdx*8]
  409c00:	mov    QWORD PTR [rax+rdx*8],rbx
  409c04:	mov    QWORD PTR [rbx],rcx
  409c07:	je     0x409c20
  409c09:	add    rsp,0x20
  409c0d:	pop    rbx
  409c0e:	ret    
  409c0f:	nop
  409c10:	add    rsp,0x20
  409c14:	pop    rbx
  409c15:	jmp    0x40ab60
  409c1a:	nop    WORD PTR [rax+rax*1+0x0]
  409c20:	mov    rax,QWORD PTR [rip+0x9821]        # 0x413448
  409c27:	lea    rcx,[rip+0x8892]        # 0x4124c0
  409c2e:	add    rsp,0x20
  409c32:	pop    rbx
  409c33:	rex.W jmp rax
  409c36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409c40:	push   rbp
  409c41:	push   rdi
  409c42:	push   rsi
  409c43:	push   rbx
  409c44:	sub    rsp,0x28
  409c48:	mov    esi,DWORD PTR [rcx+0x14]
  409c4b:	xor    r9d,r9d
  409c4e:	lea    r10,[rcx+0x18]
  409c52:	mov    rdi,rcx
  409c55:	movsxd rbx,r8d
  409c58:	movsxd rdx,edx
  409c5b:	nop    DWORD PTR [rax+rax*1+0x0]
  409c60:	mov    eax,DWORD PTR [r10+r9*4]
  409c64:	imul   rax,rdx
  409c68:	add    rax,rbx
  409c6b:	mov    rbx,rax
  409c6e:	mov    DWORD PTR [r10+r9*4],eax
  409c72:	add    r9,0x1
  409c76:	shr    rbx,0x20
  409c7a:	cmp    esi,r9d
  409c7d:	jg     0x409c60
  409c7f:	test   rbx,rbx
  409c82:	mov    rax,rdi
  409c85:	je     0x409c9c
  409c87:	cmp    esi,DWORD PTR [rdi+0xc]
  409c8a:	jge    0x409ca5
  409c8c:	movsxd rax,esi
  409c8f:	add    esi,0x1
  409c92:	mov    DWORD PTR [rdi+rax*4+0x18],ebx
  409c96:	mov    DWORD PTR [rdi+0x14],esi
  409c99:	mov    rax,rdi
  409c9c:	add    rsp,0x28
  409ca0:	pop    rbx
  409ca1:	pop    rsi
  409ca2:	pop    rdi
  409ca3:	pop    rbp
  409ca4:	ret    
  409ca5:	mov    eax,DWORD PTR [rdi+0x8]
  409ca8:	lea    ecx,[rax+0x1]
  409cab:	call   0x409ac0
  409cb0:	test   rax,rax
  409cb3:	mov    rbp,rax
  409cb6:	je     0x409cee
  409cb8:	lea    rcx,[rax+0x10]
  409cbc:	movsxd rax,DWORD PTR [rdi+0x14]
  409cc0:	lea    rdx,[rdi+0x10]
  409cc4:	lea    r8,[rax*4+0x8]
  409ccc:	call   0x40ab38
  409cd1:	mov    rcx,rdi
  409cd4:	mov    rdi,rbp
  409cd7:	call   0x409bd0
  409cdc:	movsxd rax,esi
  409cdf:	add    esi,0x1
  409ce2:	mov    DWORD PTR [rdi+rax*4+0x18],ebx
  409ce6:	mov    DWORD PTR [rdi+0x14],esi
  409ce9:	mov    rax,rdi
  409cec:	jmp    0x409c9c
  409cee:	xor    eax,eax
  409cf0:	jmp    0x409c9c
  409cf2:	nop    DWORD PTR [rax+0x0]
  409cf6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409d00:	push   rbx
  409d01:	sub    rsp,0x20
  409d05:	mov    ebx,ecx
  409d07:	mov    ecx,0x1
  409d0c:	call   0x409ac0
  409d11:	test   rax,rax
  409d14:	je     0x409d20
  409d16:	mov    DWORD PTR [rax+0x18],ebx
  409d19:	mov    DWORD PTR [rax+0x14],0x1
  409d20:	add    rsp,0x20
  409d24:	pop    rbx
  409d25:	ret    
  409d26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409d30:	push   r14
  409d32:	push   r13
  409d34:	push   r12
  409d36:	push   rbp
  409d37:	push   rdi
  409d38:	push   rsi
  409d39:	push   rbx
  409d3a:	sub    rsp,0x20
  409d3e:	movsxd r13,DWORD PTR [rcx+0x14]
  409d42:	movsxd rbx,DWORD PTR [rdx+0x14]
  409d46:	mov    r12,rcx
  409d49:	mov    r14,rdx
  409d4c:	cmp    r13d,ebx
  409d4f:	jl     0x409e51
  409d55:	mov    eax,ebx
  409d57:	movsxd rbx,r13d
  409d5a:	movsxd r13,eax
  409d5d:	xor    eax,eax
  409d5f:	lea    esi,[rbx+r13*1]
  409d63:	cmp    esi,DWORD PTR [r12+0xc]
  409d68:	setg   al
  409d6b:	add    eax,DWORD PTR [r12+0x8]
  409d70:	mov    ecx,eax
  409d72:	call   0x409ac0
  409d77:	test   rax,rax
  409d7a:	je     0x409e5c
  409d80:	lea    rdi,[rax+0x18]
  409d84:	movsxd rdx,esi
  409d87:	lea    rbp,[rdi+rdx*4]
  409d8b:	mov    r8,rdi
  409d8e:	cmp    rdi,rbp
  409d91:	jae    0x409da3
  409d93:	mov    DWORD PTR [r8],0x0
  409d9a:	add    r8,0x4
  409d9e:	cmp    rbp,r8
  409da1:	ja     0x409d93
  409da3:	lea    rdx,[r14+0x18]
  409da7:	add    r12,0x18
  409dab:	lea    rbx,[r12+rbx*4]
  409daf:	lea    r13,[rdx+r13*4]
  409db3:	cmp    rdx,r13
  409db6:	jae    0x409e19
  409db8:	nop    DWORD PTR [rax+rax*1+0x0]
  409dc0:	add    rdx,0x4
  409dc4:	mov    r11d,DWORD PTR [rdx-0x4]
  409dc8:	test   r11d,r11d
  409dcb:	je     0x409e10
  409dcd:	mov    r9,rdi
  409dd0:	mov    r8,r12
  409dd3:	xor    r10d,r10d
  409dd6:	jmp    0x409de3
  409dd8:	nop    DWORD PTR [rax+rax*1+0x0]
  409de0:	mov    r9,r14
  409de3:	add    r8,0x4
  409de7:	mov    ecx,DWORD PTR [r8-0x4]
  409deb:	mov    r14d,DWORD PTR [r9]
  409dee:	imul   rcx,r11
  409df2:	add    rcx,r14
  409df5:	lea    r14,[r9+0x4]
  409df9:	add    rcx,r10
  409dfc:	mov    r10,rcx
  409dff:	mov    DWORD PTR [r14-0x4],ecx
  409e03:	shr    r10,0x20
  409e07:	cmp    rbx,r8
  409e0a:	ja     0x409de0
  409e0c:	mov    DWORD PTR [r9+0x4],r10d
  409e10:	add    rdi,0x4
  409e14:	cmp    r13,rdx
  409e17:	ja     0x409dc0
  409e19:	test   esi,esi
  409e1b:	jle    0x409e3f
  409e1d:	mov    r8d,DWORD PTR [rbp-0x4]
  409e21:	lea    rdx,[rbp-0x4]
  409e25:	test   r8d,r8d
  409e28:	je     0x409e3a
  409e2a:	jmp    0x409e3f
  409e2c:	nop    DWORD PTR [rax+0x0]
  409e30:	sub    rdx,0x4
  409e34:	mov    ecx,DWORD PTR [rdx]
  409e36:	test   ecx,ecx
  409e38:	jne    0x409e3f
  409e3a:	sub    esi,0x1
  409e3d:	jne    0x409e30
  409e3f:	mov    DWORD PTR [rax+0x14],esi
  409e42:	add    rsp,0x20
  409e46:	pop    rbx
  409e47:	pop    rsi
  409e48:	pop    rdi
  409e49:	pop    rbp
  409e4a:	pop    r12
  409e4c:	pop    r13
  409e4e:	pop    r14
  409e50:	ret    
  409e51:	mov    r12,rdx
  409e54:	mov    r14,rcx
  409e57:	jmp    0x409d5d
  409e5c:	xor    eax,eax
  409e5e:	jmp    0x409e42
  409e60:	push   rbp
  409e61:	push   rdi
  409e62:	push   rsi
  409e63:	push   rbx
  409e64:	sub    rsp,0x28
  409e68:	mov    eax,edx
  409e6a:	mov    rbp,rcx
  409e6d:	mov    ebx,edx
  409e6f:	and    eax,0x3
  409e72:	jne    0x409f00
  409e78:	sar    ebx,0x2
  409e7b:	mov    rax,rbp
  409e7e:	test   ebx,ebx
  409e80:	je     0x409ecc
  409e82:	mov    rdi,QWORD PTR [rip+0x7c77]        # 0x411b00
  409e89:	test   rdi,rdi
  409e8c:	jne    0x409ea2
  409e8e:	jmp    0x409f4d
  409e93:	sar    ebx,1
  409e95:	je     0x409ec9
  409e97:	mov    rsi,QWORD PTR [rdi]
  409e9a:	test   rsi,rsi
  409e9d:	je     0x409ed5
  409e9f:	mov    rdi,rsi
  409ea2:	test   bl,0x1
  409ea5:	je     0x409e93
  409ea7:	mov    rdx,rdi
  409eaa:	mov    rcx,rbp
  409ead:	call   0x409d30
  409eb2:	test   rax,rax
  409eb5:	mov    rsi,rax
  409eb8:	je     0x409f23
  409eba:	mov    rcx,rbp
  409ebd:	mov    rbp,rsi
  409ec0:	call   0x409bd0
  409ec5:	sar    ebx,1
  409ec7:	jne    0x409e97
  409ec9:	mov    rax,rbp
  409ecc:	add    rsp,0x28
  409ed0:	pop    rbx
  409ed1:	pop    rsi
  409ed2:	pop    rdi
  409ed3:	pop    rbp
  409ed4:	ret    
  409ed5:	mov    ecx,0x1
  409eda:	call   0x4099a0
  409edf:	mov    rsi,QWORD PTR [rdi]
  409ee2:	test   rsi,rsi
  409ee5:	je     0x409f2e
  409ee7:	cmp    DWORD PTR [rip+0x85a2],0x2        # 0x412490
  409eee:	jne    0x409e9f
  409ef0:	lea    rcx,[rip+0x85f1]        # 0x4124e8
  409ef7:	call   QWORD PTR [rip+0x954b]        # 0x413448
  409efd:	jmp    0x409e9f
  409eff:	nop
  409f00:	sub    eax,0x1
  409f03:	lea    rdx,[rip+0x4276]        # 0x40e180
  409f0a:	xor    r8d,r8d
  409f0d:	cdqe   
  409f0f:	mov    edx,DWORD PTR [rdx+rax*4]
  409f12:	call   0x409c40
  409f17:	test   rax,rax
  409f1a:	mov    rbp,rax
  409f1d:	jne    0x409e78
  409f23:	xor    eax,eax
  409f25:	add    rsp,0x28
  409f29:	pop    rbx
  409f2a:	pop    rsi
  409f2b:	pop    rdi
  409f2c:	pop    rbp
  409f2d:	ret    
  409f2e:	mov    rdx,rdi
  409f31:	mov    rcx,rdi
  409f34:	call   0x409d30
  409f39:	test   rax,rax
  409f3c:	mov    rsi,rax
  409f3f:	mov    QWORD PTR [rdi],rax
  409f42:	je     0x409f23
  409f44:	mov    QWORD PTR [rax],0x0
  409f4b:	jmp    0x409ee7
  409f4d:	mov    ecx,0x1
  409f52:	call   0x4099a0
  409f57:	mov    rdi,QWORD PTR [rip+0x7ba2]        # 0x411b00
  409f5e:	test   rdi,rdi
  409f61:	je     0x409f82
  409f63:	cmp    DWORD PTR [rip+0x8526],0x2        # 0x412490
  409f6a:	jne    0x409ea2
  409f70:	lea    rcx,[rip+0x8571]        # 0x4124e8
  409f77:	call   QWORD PTR [rip+0x94cb]        # 0x413448
  409f7d:	jmp    0x409ea2
  409f82:	mov    ecx,0x1
  409f87:	call   0x409ac0
  409f8c:	test   rax,rax
  409f8f:	mov    rdi,rax
  409f92:	je     0x409fb2
  409f94:	mov    DWORD PTR [rax+0x18],0x271
  409f9b:	mov    DWORD PTR [rax+0x14],0x1
  409fa2:	mov    QWORD PTR [rip+0x7b57],rax        # 0x411b00
  409fa9:	mov    QWORD PTR [rax],0x0
  409fb0:	jmp    0x409f63
  409fb2:	mov    QWORD PTR [rip+0x7b43],0x0        # 0x411b00
  409fbd:	xor    eax,eax
  409fbf:	jmp    0x409f25
  409fc4:	xchg   ax,ax
  409fc6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409fd0:	push   r13
  409fd2:	push   r12
  409fd4:	push   rbp
  409fd5:	push   rdi
  409fd6:	push   rsi
  409fd7:	push   rbx
  409fd8:	sub    rsp,0x28
  409fdc:	mov    rdi,rcx
  409fdf:	mov    ebp,edx
  409fe1:	mov    esi,edx
  409fe3:	mov    r12d,DWORD PTR [rdi+0x14]
  409fe7:	sar    ebp,0x5
  409fea:	mov    eax,DWORD PTR [rdi+0xc]
  409fed:	mov    ecx,DWORD PTR [rcx+0x8]
  409ff0:	add    r12d,ebp
  409ff3:	lea    ebx,[r12+0x1]
  409ff8:	cmp    ebx,eax
  409ffa:	jle    0x40a009
  409ffc:	nop    DWORD PTR [rax+0x0]
  40a000:	add    eax,eax
  40a002:	add    ecx,0x1
  40a005:	cmp    ebx,eax
  40a007:	jg     0x40a000
  40a009:	call   0x409ac0
  40a00e:	test   rax,rax
  40a011:	mov    r13,rax
  40a014:	je     0x40a0df
  40a01a:	test   ebp,ebp
  40a01c:	lea    r8,[rax+0x18]
  40a020:	jle    0x40a0d7
  40a026:	lea    eax,[rbp-0x1]
  40a029:	lea    r9,[r8+rax*4+0x4]
  40a02e:	xchg   ax,ax
  40a030:	add    r8,0x4
  40a034:	mov    DWORD PTR [r8-0x4],0x0
  40a03c:	cmp    r8,r9
  40a03f:	jne    0x40a030
  40a041:	movsxd rax,DWORD PTR [rdi+0x14]
  40a045:	lea    r8,[rdi+0x18]
  40a049:	mov    edx,esi
  40a04b:	and    edx,0x1f
  40a04e:	lea    rbp,[r8+rax*4]
  40a052:	je     0x40a0c0
  40a054:	mov    eax,0x20
  40a059:	xor    r11d,r11d
  40a05c:	sub    eax,edx
  40a05e:	jmp    0x40a063
  40a060:	mov    r9,rsi
  40a063:	mov    r10d,DWORD PTR [r8]
  40a066:	mov    ecx,edx
  40a068:	lea    rsi,[r9+0x4]
  40a06c:	add    r8,0x4
  40a070:	shl    r10d,cl
  40a073:	mov    ecx,eax
  40a075:	or     r10d,r11d
  40a078:	mov    DWORD PTR [rsi-0x4],r10d
  40a07c:	mov    r11d,DWORD PTR [r8-0x4]
  40a080:	shr    r11d,cl
  40a083:	cmp    rbp,r8
  40a086:	ja     0x40a060
  40a088:	add    r12d,0x2
  40a08c:	test   r11d,r11d
  40a08f:	mov    DWORD PTR [r9+0x4],r11d
  40a093:	cmovne ebx,r12d
  40a097:	sub    ebx,0x1
  40a09a:	mov    rcx,rdi
  40a09d:	mov    DWORD PTR [r13+0x14],ebx
  40a0a1:	call   0x409bd0
  40a0a6:	mov    rax,r13
  40a0a9:	add    rsp,0x28
  40a0ad:	pop    rbx
  40a0ae:	pop    rsi
  40a0af:	pop    rdi
  40a0b0:	pop    rbp
  40a0b1:	pop    r12
  40a0b3:	pop    r13
  40a0b5:	ret    
  40a0b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a0c0:	add    r8,0x4
  40a0c4:	mov    edx,DWORD PTR [r8-0x4]
  40a0c8:	add    r9,0x4
  40a0cc:	cmp    rbp,r8
  40a0cf:	mov    DWORD PTR [r9-0x4],edx
  40a0d3:	ja     0x40a0c0
  40a0d5:	jmp    0x40a097
  40a0d7:	mov    r9,r8
  40a0da:	jmp    0x40a041
  40a0df:	xor    eax,eax
  40a0e1:	jmp    0x40a0a9
  40a0e3:	nop    DWORD PTR [rax]
  40a0e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a0f0:	movsxd r8,DWORD PTR [rdx+0x14]
  40a0f4:	mov    eax,DWORD PTR [rcx+0x14]
  40a0f7:	sub    eax,r8d
  40a0fa:	test   eax,eax
  40a0fc:	jne    0x40a132
  40a0fe:	shl    r8,0x2
  40a102:	add    rcx,0x18
  40a106:	lea    rax,[rcx+r8*1]
  40a10a:	lea    rdx,[rdx+r8*1+0x18]
  40a10f:	jmp    0x40a116
  40a111:	cmp    rcx,rax
  40a114:	jae    0x40a130
  40a116:	sub    rdx,0x4
  40a11a:	sub    rax,0x4
  40a11e:	mov    r9d,DWORD PTR [rdx]
  40a121:	cmp    DWORD PTR [rax],r9d
  40a124:	je     0x40a111
  40a126:	sbb    eax,eax
  40a128:	or     eax,0x1
  40a12b:	ret    
  40a12c:	nop    DWORD PTR [rax+0x0]
  40a130:	xor    eax,eax
  40a132:	repz ret 
  40a134:	xchg   ax,ax
  40a136:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a140:	push   rdi
  40a141:	push   rsi
  40a142:	push   rbx
  40a143:	sub    rsp,0x20
  40a147:	mov    rsi,rcx
  40a14a:	mov    rdi,rdx
  40a14d:	call   0x40a0f0
  40a152:	test   eax,eax
  40a154:	je     0x40a240
  40a15a:	mov    ebx,0x0
  40a15f:	js     0x40a262
  40a165:	mov    ecx,DWORD PTR [rsi+0x8]
  40a168:	call   0x409ac0
  40a16d:	test   rax,rax
  40a170:	je     0x40a272
  40a176:	movsxd rdx,DWORD PTR [rsi+0x14]
  40a17a:	lea    rcx,[rsi+0x18]
  40a17e:	mov    DWORD PTR [rax+0x10],ebx
  40a181:	lea    r10,[rdi+0x18]
  40a185:	xor    r9d,r9d
  40a188:	mov    rbx,rdx
  40a18b:	lea    rsi,[rcx+rdx*4]
  40a18f:	movsxd rdx,DWORD PTR [rdi+0x14]
  40a193:	lea    rdi,[r10+rdx*4]
  40a197:	lea    rdx,[rax+0x18]
  40a19b:	nop    DWORD PTR [rax+rax*1+0x0]
  40a1a0:	add    rcx,0x4
  40a1a4:	add    r10,0x4
  40a1a8:	mov    r11d,DWORD PTR [r10-0x4]
  40a1ac:	mov    r8d,DWORD PTR [rcx-0x4]
  40a1b0:	add    rdx,0x4
  40a1b4:	sub    r8,r11
  40a1b7:	sub    r8,r9
  40a1ba:	mov    r9,r8
  40a1bd:	mov    r11d,r8d
  40a1c0:	mov    DWORD PTR [rdx-0x4],r8d
  40a1c4:	shr    r9,0x20
  40a1c8:	and    r9d,0x1
  40a1cc:	cmp    rdi,r10
  40a1cf:	ja     0x40a1a0
  40a1d1:	cmp    rsi,rcx
  40a1d4:	mov    rdi,rdx
  40a1d7:	mov    r10,rcx
  40a1da:	jbe    0x40a216
  40a1dc:	nop    DWORD PTR [rax+0x0]
  40a1e0:	add    rcx,0x4
  40a1e4:	mov    r8d,DWORD PTR [rcx-0x4]
  40a1e8:	add    rdx,0x4
  40a1ec:	sub    r8,r9
  40a1ef:	mov    r9,r8
  40a1f2:	mov    r11d,r8d
  40a1f5:	mov    DWORD PTR [rdx-0x4],r8d
  40a1f9:	shr    r9,0x20
  40a1fd:	and    r9d,0x1
  40a201:	cmp    rsi,rcx
  40a204:	ja     0x40a1e0
  40a206:	not    r10
  40a209:	lea    rdx,[r10+rsi*1]
  40a20d:	shr    rdx,0x2
  40a211:	lea    rdx,[rdi+rdx*4+0x4]
  40a216:	sub    rdx,0x4
  40a21a:	test   r11d,r11d
  40a21d:	jne    0x40a22d
  40a21f:	nop
  40a220:	sub    rdx,0x4
  40a224:	mov    ecx,DWORD PTR [rdx]
  40a226:	sub    ebx,0x1
  40a229:	test   ecx,ecx
  40a22b:	je     0x40a220
  40a22d:	mov    DWORD PTR [rax+0x14],ebx
  40a230:	add    rsp,0x20
  40a234:	pop    rbx
  40a235:	pop    rsi
  40a236:	pop    rdi
  40a237:	ret    
  40a238:	nop    DWORD PTR [rax+rax*1+0x0]
  40a240:	xor    ecx,ecx
  40a242:	call   0x409ac0
  40a247:	test   rax,rax
  40a24a:	je     0x40a272
  40a24c:	mov    DWORD PTR [rax+0x14],0x1
  40a253:	mov    DWORD PTR [rax+0x18],0x0
  40a25a:	add    rsp,0x20
  40a25e:	pop    rbx
  40a25f:	pop    rsi
  40a260:	pop    rdi
  40a261:	ret    
  40a262:	mov    rax,rsi
  40a265:	mov    bl,0x1
  40a267:	mov    rsi,rdi
  40a26a:	mov    rdi,rax
  40a26d:	jmp    0x40a165
  40a272:	xor    eax,eax
  40a274:	jmp    0x40a230
  40a276:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a280:	push   rsi
  40a281:	push   rbx
  40a282:	sub    rsp,0x18
  40a286:	movsxd rax,DWORD PTR [rcx+0x14]
  40a28a:	lea    r10,[rcx+0x18]
  40a28e:	mov    ecx,0x20
  40a293:	lea    r9,[r10+rax*4]
  40a297:	mov    eax,DWORD PTR [r9-0x4]
  40a29b:	lea    rbx,[r9-0x4]
  40a29f:	bsr    r8d,eax
  40a2a3:	xor    r8d,0x1f
  40a2a7:	sub    ecx,r8d
  40a2aa:	cmp    r8d,0xa
  40a2ae:	mov    DWORD PTR [rdx],ecx
  40a2b0:	jg     0x40a300
  40a2b2:	mov    ecx,0xb
  40a2b7:	mov    r11d,eax
  40a2ba:	xor    esi,esi
  40a2bc:	sub    ecx,r8d
  40a2bf:	shr    r11d,cl
  40a2c2:	or     r11d,0x3ff00000
  40a2c9:	shl    r11,0x20
  40a2cd:	cmp    r10,rbx
  40a2d0:	jae    0x40a2d8
  40a2d2:	mov    esi,DWORD PTR [r9-0x8]
  40a2d6:	shr    esi,cl
  40a2d8:	lea    ecx,[r8+0x15]
  40a2dc:	shl    eax,cl
  40a2de:	mov    edx,eax
  40a2e0:	mov    eax,esi
  40a2e2:	or     eax,edx
  40a2e4:	or     rax,r11
  40a2e7:	mov    QWORD PTR [rsp+0x8],rax
  40a2ec:	movsd  xmm0,QWORD PTR [rsp+0x8]
  40a2f2:	add    rsp,0x18
  40a2f6:	pop    rbx
  40a2f7:	pop    rsi
  40a2f8:	ret    
  40a2f9:	nop    DWORD PTR [rax+0x0]
  40a300:	cmp    r10,rbx
  40a303:	jae    0x40a360
  40a305:	mov    r11d,r8d
  40a308:	lea    rsi,[r9-0x8]
  40a30c:	mov    edx,DWORD PTR [r9-0x8]
  40a310:	sub    r11d,0xb
  40a314:	je     0x40a382
  40a316:	mov    ebx,0x2b
  40a31b:	mov    ecx,r11d
  40a31e:	sub    ebx,r8d
  40a321:	shl    eax,cl
  40a323:	mov    r8d,edx
  40a326:	mov    ecx,ebx
  40a328:	shr    r8d,cl
  40a32b:	or     eax,r8d
  40a32e:	xor    r8d,r8d
  40a331:	or     eax,0x3ff00000
  40a336:	shl    rax,0x20
  40a33a:	cmp    r10,rsi
  40a33d:	jae    0x40a346
  40a33f:	mov    r8d,DWORD PTR [r9-0xc]
  40a343:	shr    r8d,cl
  40a346:	mov    ecx,r11d
  40a349:	shl    edx,cl
  40a34b:	or     r8d,edx
  40a34e:	movabs rdx,0xffffffff00000000
  40a358:	and    rax,rdx
  40a35b:	or     rax,r8
  40a35e:	jmp    0x40a2e7
  40a360:	mov    r11d,r8d
  40a363:	sub    r11d,0xb
  40a367:	je     0x40a380
  40a369:	mov    ecx,r11d
  40a36c:	xor    r8d,r8d
  40a36f:	xor    edx,edx
  40a371:	shl    eax,cl
  40a373:	or     eax,0x3ff00000
  40a378:	shl    rax,0x20
  40a37c:	jmp    0x40a346
  40a37e:	xchg   ax,ax
  40a380:	xor    edx,edx
  40a382:	or     eax,0x3ff00000
  40a387:	shl    rax,0x20
  40a38b:	or     rax,rdx
  40a38e:	jmp    0x40a2e7
  40a393:	nop    DWORD PTR [rax]
  40a396:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a3a0:	push   rdi
  40a3a1:	push   rsi
  40a3a2:	push   rbx
  40a3a3:	sub    rsp,0x20
  40a3a7:	mov    ecx,0x1
  40a3ac:	movq   rbx,xmm0
  40a3b1:	mov    rdi,rdx
  40a3b4:	mov    rsi,r8
  40a3b7:	call   0x409ac0
  40a3bc:	test   rax,rax
  40a3bf:	je     0x40a4a5
  40a3c5:	mov    r9,rbx
  40a3c8:	shr    r9,0x20
  40a3cc:	mov    r10d,r9d
  40a3cf:	and    r9d,0x7fffffff
  40a3d6:	and    r10d,0xfffff
  40a3dd:	shr    r9d,0x14
  40a3e1:	mov    edx,r10d
  40a3e4:	or     edx,0x100000
  40a3ea:	test   r9d,r9d
  40a3ed:	cmovne r10d,edx
  40a3f1:	test   ebx,ebx
  40a3f3:	jne    0x40a434
  40a3f5:	xor    ecx,ecx
  40a3f7:	mov    DWORD PTR [rax+0x14],0x1
  40a3fe:	mov    edx,0x1
  40a403:	tzcnt  ecx,r10d
  40a408:	shr    r10d,cl
  40a40b:	test   r9d,r9d
  40a40e:	lea    r11d,[rcx+0x20]
  40a412:	mov    DWORD PTR [rax+0x18],r10d
  40a416:	je     0x40a473
  40a418:	lea    edx,[r11+r9*1-0x433]
  40a420:	mov    DWORD PTR [rdi],edx
  40a422:	mov    edx,0x35
  40a427:	sub    edx,r11d
  40a42a:	mov    DWORD PTR [rsi],edx
  40a42c:	add    rsp,0x20
  40a430:	pop    rbx
  40a431:	pop    rsi
  40a432:	pop    rdi
  40a433:	ret    
  40a434:	xor    r11d,r11d
  40a437:	tzcnt  r11d,ebx
  40a43c:	mov    ecx,r11d
  40a43f:	shr    ebx,cl
  40a441:	test   r11d,r11d
  40a444:	je     0x40a4a0
  40a446:	mov    ecx,0x20
  40a44b:	mov    edx,r10d
  40a44e:	sub    ecx,r11d
  40a451:	shl    edx,cl
  40a453:	mov    ecx,r11d
  40a456:	or     ebx,edx
  40a458:	shr    r10d,cl
  40a45b:	mov    DWORD PTR [rax+0x18],ebx
  40a45e:	cmp    r10d,0x1
  40a462:	mov    DWORD PTR [rax+0x1c],r10d
  40a466:	sbb    edx,edx
  40a468:	add    edx,0x2
  40a46b:	test   r9d,r9d
  40a46e:	mov    DWORD PTR [rax+0x14],edx
  40a471:	jne    0x40a418
  40a473:	movsxd rcx,edx
  40a476:	shl    edx,0x5
  40a479:	sub    r11d,0x432
  40a480:	bsr    ecx,DWORD PTR [rax+rcx*4+0x14]
  40a485:	mov    DWORD PTR [rdi],r11d
  40a488:	xor    ecx,0x1f
  40a48b:	sub    edx,ecx
  40a48d:	mov    DWORD PTR [rsi],edx
  40a48f:	add    rsp,0x20
  40a493:	pop    rbx
  40a494:	pop    rsi
  40a495:	pop    rdi
  40a496:	ret    
  40a497:	nop    WORD PTR [rax+rax*1+0x0]
  40a4a0:	mov    DWORD PTR [rax+0x18],ebx
  40a4a3:	jmp    0x40a45e
  40a4a5:	xor    eax,eax
  40a4a7:	jmp    0x40a42c
  40a4a9:	nop    DWORD PTR [rax+0x0]
  40a4b0:	mov    rax,rcx
  40a4b3:	lea    rcx,[rdx+0x1]
  40a4b7:	movzx  edx,BYTE PTR [rdx]
  40a4ba:	test   dl,dl
  40a4bc:	mov    BYTE PTR [rax],dl
  40a4be:	je     0x40a4d2
  40a4c0:	add    rcx,0x1
  40a4c4:	movzx  edx,BYTE PTR [rcx-0x1]
  40a4c8:	add    rax,0x1
  40a4cc:	test   dl,dl
  40a4ce:	mov    BYTE PTR [rax],dl
  40a4d0:	jne    0x40a4c0
  40a4d2:	repz ret 
  40a4d4:	nop
  40a4d5:	nop
  40a4d6:	nop
  40a4d7:	nop
  40a4d8:	nop
  40a4d9:	nop
  40a4da:	nop
  40a4db:	nop
  40a4dc:	nop
  40a4dd:	nop
  40a4de:	nop
  40a4df:	nop
  40a4e0:	push   rbp
  40a4e1:	push   rdi
  40a4e2:	push   rsi
  40a4e3:	push   rbx
  40a4e4:	sub    rsp,0x48
  40a4e8:	test   rdx,rdx
  40a4eb:	je     0x40a613
  40a4f1:	test   r8,r8
  40a4f4:	je     0x40a620
  40a4fa:	mov    eax,DWORD PTR [r9]
  40a4fd:	mov    DWORD PTR [r9],0x0
  40a504:	mov    DWORD PTR [rsp+0x30],eax
  40a508:	movzx  eax,BYTE PTR [rdx]
  40a50b:	test   al,al
  40a50d:	je     0x40a5b0
  40a513:	cmp    DWORD PTR [rsp+0x98],0x1
  40a51b:	mov    rsi,r9
  40a51e:	mov    rdi,r8
  40a521:	mov    rbx,rdx
  40a524:	mov    rbp,rcx
  40a527:	jbe    0x40a590
  40a529:	cmp    BYTE PTR [rsp+0x30],0x0
  40a52e:	jne    0x40a5c0
  40a534:	movzx  edx,al
  40a537:	mov    ecx,DWORD PTR [rsp+0x90]
  40a53e:	call   QWORD PTR [rip+0x8efc]        # 0x413440
  40a544:	test   eax,eax
  40a546:	je     0x40a590
  40a548:	cmp    rdi,0x1
  40a54c:	jbe    0x40a63c
  40a552:	mov    DWORD PTR [rsp+0x28],0x1
  40a55a:	mov    QWORD PTR [rsp+0x20],rbp
  40a55f:	mov    r9d,0x2
  40a565:	mov    r8,rbx
  40a568:	mov    edx,0x8
  40a56d:	mov    ecx,DWORD PTR [rsp+0x90]
  40a574:	call   QWORD PTR [rip+0x8ed6]        # 0x413450
  40a57a:	test   eax,eax
  40a57c:	je     0x40a627
  40a582:	mov    eax,0x2
  40a587:	add    rsp,0x48
  40a58b:	pop    rbx
  40a58c:	pop    rsi
  40a58d:	pop    rdi
  40a58e:	pop    rbp
  40a58f:	ret    
  40a590:	mov    eax,DWORD PTR [rsp+0x90]
  40a597:	test   eax,eax
  40a599:	jne    0x40a5e0
  40a59b:	movzx  eax,BYTE PTR [rbx]
  40a59e:	mov    WORD PTR [rbp+0x0],ax
  40a5a2:	mov    eax,0x1
  40a5a7:	add    rsp,0x48
  40a5ab:	pop    rbx
  40a5ac:	pop    rsi
  40a5ad:	pop    rdi
  40a5ae:	pop    rbp
  40a5af:	ret    
  40a5b0:	xor    edx,edx
  40a5b2:	xor    eax,eax
  40a5b4:	mov    WORD PTR [rcx],dx
  40a5b7:	add    rsp,0x48
  40a5bb:	pop    rbx
  40a5bc:	pop    rsi
  40a5bd:	pop    rdi
  40a5be:	pop    rbp
  40a5bf:	ret    
  40a5c0:	mov    BYTE PTR [rsp+0x31],al
  40a5c4:	mov    DWORD PTR [rsp+0x28],0x1
  40a5cc:	mov    r9d,0x2
  40a5d2:	mov    QWORD PTR [rsp+0x20],rcx
  40a5d7:	lea    r8,[rsp+0x30]
  40a5dc:	jmp    0x40a568
  40a5de:	xchg   ax,ax
  40a5e0:	mov    DWORD PTR [rsp+0x28],0x1
  40a5e8:	mov    QWORD PTR [rsp+0x20],rbp
  40a5ed:	mov    r9d,0x1
  40a5f3:	mov    r8,rbx
  40a5f6:	mov    edx,0x8
  40a5fb:	mov    ecx,DWORD PTR [rsp+0x90]
  40a602:	call   QWORD PTR [rip+0x8e48]        # 0x413450
  40a608:	test   eax,eax
  40a60a:	je     0x40a627
  40a60c:	mov    eax,0x1
  40a611:	jmp    0x40a5b7
  40a613:	xor    eax,eax
  40a615:	add    rsp,0x48
  40a619:	pop    rbx
  40a61a:	pop    rsi
  40a61b:	pop    rdi
  40a61c:	pop    rbp
  40a61d:	ret    
  40a61e:	xchg   ax,ax
  40a620:	mov    eax,0xfffffffe
  40a625:	jmp    0x40a5b7
  40a627:	call   0x40abe0
  40a62c:	mov    DWORD PTR [rax],0x2a
  40a632:	mov    eax,0xffffffff
  40a637:	jmp    0x40a5b7
  40a63c:	movzx  eax,BYTE PTR [rbx]
  40a63f:	mov    BYTE PTR [rsi],al
  40a641:	mov    eax,0xfffffffe
  40a646:	jmp    0x40a5b7
  40a64b:	nop    DWORD PTR [rax+rax*1+0x0]
  40a650:	push   rbp
  40a651:	push   rdi
  40a652:	push   rsi
  40a653:	push   rbx
  40a654:	sub    rsp,0x58
  40a658:	xor    eax,eax
  40a65a:	mov    WORD PTR [rsp+0x4e],ax
  40a65f:	lea    rax,[rsp+0x4e]
  40a664:	test   rcx,rcx
  40a667:	mov    rbx,rcx
  40a66a:	mov    rsi,r9
  40a66d:	mov    rdi,rdx
  40a670:	cmove  rbx,rax
  40a674:	mov    rax,QWORD PTR [rip+0x3d45]        # 0x40e3c0
  40a67b:	mov    QWORD PTR [rsp+0x38],r8
  40a680:	mov    rax,QWORD PTR [rax]
  40a683:	mov    ebp,DWORD PTR [rax]
  40a685:	call   0x40ac40
  40a68a:	mov    r8,QWORD PTR [rsp+0x38]
  40a68f:	lea    r9,[rip+0x7eb2]        # 0x412548
  40a696:	test   rsi,rsi
  40a699:	mov    DWORD PTR [rsp+0x28],ebp
  40a69d:	mov    DWORD PTR [rsp+0x20],eax
  40a6a1:	mov    rdx,rdi
  40a6a4:	cmovne r9,rsi
  40a6a8:	mov    rcx,rbx
  40a6ab:	call   0x40a4e0
  40a6b0:	cdqe   
  40a6b2:	add    rsp,0x58
  40a6b6:	pop    rbx
  40a6b7:	pop    rsi
  40a6b8:	pop    rdi
  40a6b9:	pop    rbp
  40a6ba:	ret    
  40a6bb:	nop    DWORD PTR [rax+rax*1+0x0]
  40a6c0:	push   r15
  40a6c2:	push   r14
  40a6c4:	push   r13
  40a6c6:	push   r12
  40a6c8:	push   rbp
  40a6c9:	push   rdi
  40a6ca:	push   rsi
  40a6cb:	push   rbx
  40a6cc:	sub    rsp,0x48
  40a6d0:	lea    rax,[rip+0x7e6d]        # 0x412544
  40a6d7:	test   r9,r9
  40a6da:	mov    rdi,r9
  40a6dd:	mov    r13,rdx
  40a6e0:	cmove  rdi,rax
  40a6e4:	mov    r14,rcx
  40a6e7:	mov    rsi,r8
  40a6ea:	call   0x40ac40
  40a6ef:	mov    r12d,eax
  40a6f2:	mov    rax,QWORD PTR [rip+0x3cc7]        # 0x40e3c0
  40a6f9:	test   r13,r13
  40a6fc:	mov    rax,QWORD PTR [rax]
  40a6ff:	mov    ebp,DWORD PTR [rax]
  40a701:	je     0x40a785
  40a707:	mov    rdx,QWORD PTR [r13+0x0]
  40a70b:	test   rdx,rdx
  40a70e:	je     0x40a785
  40a710:	test   r14,r14
  40a713:	je     0x40a790
  40a715:	xor    ebx,ebx
  40a717:	test   rsi,rsi
  40a71a:	jne    0x40a73a
  40a71c:	jmp    0x40a785
  40a71e:	xchg   ax,ax
  40a720:	movsxd r10,eax
  40a723:	add    r14,0x2
  40a727:	mov    rdx,r10
  40a72a:	add    rdx,QWORD PTR [r13+0x0]
  40a72e:	add    rbx,r10
  40a731:	cmp    rsi,rbx
  40a734:	mov    QWORD PTR [r13+0x0],rdx
  40a738:	jbe    0x40a780
  40a73a:	mov    r8,rsi
  40a73d:	mov    DWORD PTR [rsp+0x28],ebp
  40a741:	mov    DWORD PTR [rsp+0x20],r12d
  40a746:	sub    r8,rbx
  40a749:	mov    r9,rdi
  40a74c:	mov    rcx,r14
  40a74f:	call   0x40a4e0
  40a754:	cmp    eax,0x0
  40a757:	jg     0x40a720
  40a759:	jne    0x40a780
  40a75b:	cmp    rbx,rsi
  40a75e:	jae    0x40a780
  40a760:	mov    QWORD PTR [r13+0x0],0x0
  40a768:	mov    rax,rbx
  40a76b:	add    rsp,0x48
  40a76f:	pop    rbx
  40a770:	pop    rsi
  40a771:	pop    rdi
  40a772:	pop    rbp
  40a773:	pop    r12
  40a775:	pop    r13
  40a777:	pop    r14
  40a779:	pop    r15
  40a77b:	ret    
  40a77c:	xor    ebx,ebx
  40a77e:	xchg   ax,ax
  40a780:	mov    rax,rbx
  40a783:	jmp    0x40a76b
  40a785:	xor    eax,eax
  40a787:	jmp    0x40a76b
  40a789:	nop    DWORD PTR [rax+0x0]
  40a790:	xor    eax,eax
  40a792:	test   rsi,rsi
  40a795:	mov    WORD PTR [rsp+0x3e],ax
  40a79a:	je     0x40a77c
  40a79c:	mov    r15d,ebp
  40a79f:	xor    ebx,ebx
  40a7a1:	lea    r14,[rsp+0x3e]
  40a7a6:	jmp    0x40a7c5
  40a7a8:	nop    DWORD PTR [rax+rax*1+0x0]
  40a7b0:	cdqe   
  40a7b2:	mov    rdx,rax
  40a7b5:	add    rdx,QWORD PTR [r13+0x0]
  40a7b9:	add    rbx,rax
  40a7bc:	cmp    rsi,rbx
  40a7bf:	mov    QWORD PTR [r13+0x0],rdx
  40a7c3:	jbe    0x40a780
  40a7c5:	mov    DWORD PTR [rsp+0x28],ebp
  40a7c9:	mov    DWORD PTR [rsp+0x20],r12d
  40a7ce:	mov    r9,rdi
  40a7d1:	mov    r8,r15
  40a7d4:	mov    rcx,r14
  40a7d7:	call   0x40a4e0
  40a7dc:	test   eax,eax
  40a7de:	jg     0x40a7b0
  40a7e0:	jmp    0x40a780
  40a7e2:	nop    DWORD PTR [rax+0x0]
  40a7e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a7f0:	push   rbp
  40a7f1:	push   rdi
  40a7f2:	push   rsi
  40a7f3:	push   rbx
  40a7f4:	sub    rsp,0x48
  40a7f8:	xor    eax,eax
  40a7fa:	mov    WORD PTR [rsp+0x3e],ax
  40a7ff:	mov    rax,QWORD PTR [rip+0x3bba]        # 0x40e3c0
  40a806:	mov    rbx,r8
  40a809:	mov    rsi,rcx
  40a80c:	mov    rdi,rdx
  40a80f:	mov    rax,QWORD PTR [rax]
  40a812:	mov    ebp,DWORD PTR [rax]
  40a814:	call   0x40ac40
  40a819:	lea    r9,[rip+0x7d20]        # 0x412540
  40a820:	test   rbx,rbx
  40a823:	lea    rcx,[rsp+0x3e]
  40a828:	mov    DWORD PTR [rsp+0x28],ebp
  40a82c:	mov    DWORD PTR [rsp+0x20],eax
  40a830:	mov    r8,rdi
  40a833:	cmovne r9,rbx
  40a837:	mov    rdx,rsi
  40a83a:	call   0x40a4e0
  40a83f:	cdqe   
  40a841:	add    rsp,0x48
  40a845:	pop    rbx
  40a846:	pop    rsi
  40a847:	pop    rdi
  40a848:	pop    rbp
  40a849:	ret    
  40a84a:	nop
  40a84b:	nop
  40a84c:	nop
  40a84d:	nop
  40a84e:	nop
  40a84f:	nop
  40a850:	sub    rsp,0x58
  40a854:	test   r8d,r8d
  40a857:	mov    eax,r8d
  40a85a:	mov    WORD PTR [rsp+0x68],dx
  40a85f:	jne    0x40a874
  40a861:	cmp    dx,0xff
  40a866:	ja     0x40a8ba
  40a868:	mov    BYTE PTR [rcx],dl
  40a86a:	mov    eax,0x1
  40a86f:	add    rsp,0x58
  40a873:	ret    
  40a874:	lea    rdx,[rsp+0x4c]
  40a879:	mov    DWORD PTR [rsp+0x28],r9d
  40a87e:	mov    QWORD PTR [rsp+0x20],rcx
  40a883:	mov    DWORD PTR [rsp+0x4c],0x0
  40a88b:	mov    QWORD PTR [rsp+0x30],0x0
  40a894:	mov    r9d,0x1
  40a89a:	mov    QWORD PTR [rsp+0x38],rdx
  40a89f:	lea    r8,[rsp+0x68]
  40a8a4:	xor    edx,edx
  40a8a6:	mov    ecx,eax
  40a8a8:	call   QWORD PTR [rip+0x8c1a]        # 0x4134c8
  40a8ae:	test   eax,eax
  40a8b0:	je     0x40a8ba
  40a8b2:	mov    edx,DWORD PTR [rsp+0x4c]
  40a8b6:	test   edx,edx
  40a8b8:	je     0x40a86f
  40a8ba:	call   0x40abe0
  40a8bf:	mov    DWORD PTR [rax],0x2a
  40a8c5:	mov    eax,0xffffffff
  40a8ca:	add    rsp,0x58
  40a8ce:	ret    
  40a8cf:	nop
  40a8d0:	push   rdi
  40a8d1:	push   rsi
  40a8d2:	push   rbx
  40a8d3:	sub    rsp,0x30
  40a8d7:	lea    rax,[rsp+0x20]
  40a8dc:	test   rcx,rcx
  40a8df:	mov    rbx,rcx
  40a8e2:	mov    esi,edx
  40a8e4:	cmove  rbx,rax
  40a8e8:	mov    rax,QWORD PTR [rip+0x3ad1]        # 0x40e3c0
  40a8ef:	mov    rax,QWORD PTR [rax]
  40a8f2:	mov    edi,DWORD PTR [rax]
  40a8f4:	call   0x40ac40
  40a8f9:	movzx  edx,si
  40a8fc:	mov    r8d,eax
  40a8ff:	mov    rcx,rbx
  40a902:	mov    r9d,edi
  40a905:	call   0x40a850
  40a90a:	cdqe   
  40a90c:	add    rsp,0x30
  40a910:	pop    rbx
  40a911:	pop    rsi
  40a912:	pop    rdi
  40a913:	ret    
  40a914:	xchg   ax,ax
  40a916:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a920:	push   r14
  40a922:	push   r13
  40a924:	push   r12
  40a926:	push   rbp
  40a927:	push   rdi
  40a928:	push   rsi
  40a929:	push   rbx
  40a92a:	sub    rsp,0x30
  40a92e:	mov    r13,rdx
  40a931:	mov    rbx,rcx
  40a934:	mov    rdi,r8
  40a937:	call   0x40ac40
  40a93c:	mov    ebp,eax
  40a93e:	mov    rax,QWORD PTR [rip+0x3a7b]        # 0x40e3c0
  40a945:	mov    r14,QWORD PTR [r13+0x0]
  40a949:	mov    rax,QWORD PTR [rax]
  40a94c:	test   r14,r14
  40a94f:	mov    r12d,DWORD PTR [rax]
  40a952:	je     0x40aa40
  40a958:	xor    esi,esi
  40a95a:	test   rbx,rbx
  40a95d:	je     0x40a9f0
  40a963:	test   rdi,rdi
  40a966:	jne    0x40a988
  40a968:	jmp    0x40a9b4
  40a96a:	nop    WORD PTR [rax+rax*1+0x0]
  40a970:	movsxd r10,eax
  40a973:	add    rbx,r10
  40a976:	add    rsi,r10
  40a979:	cmp    BYTE PTR [rbx-0x1],0x0
  40a97d:	je     0x40a9d0
  40a97f:	add    r14,0x2
  40a983:	cmp    rdi,rsi
  40a986:	jbe    0x40a9b4
  40a988:	movzx  edx,WORD PTR [r14]
  40a98c:	mov    r9d,r12d
  40a98f:	mov    r8d,ebp
  40a992:	mov    rcx,rbx
  40a995:	call   0x40a850
  40a99a:	test   eax,eax
  40a99c:	jg     0x40a970
  40a99e:	mov    rax,0xffffffffffffffff
  40a9a5:	add    rsp,0x30
  40a9a9:	pop    rbx
  40a9aa:	pop    rsi
  40a9ab:	pop    rdi
  40a9ac:	pop    rbp
  40a9ad:	pop    r12
  40a9af:	pop    r13
  40a9b1:	pop    r14
  40a9b3:	ret    
  40a9b4:	mov    rax,rsi
  40a9b7:	mov    QWORD PTR [r13+0x0],r14
  40a9bb:	add    rsp,0x30
  40a9bf:	pop    rbx
  40a9c0:	pop    rsi
  40a9c1:	pop    rdi
  40a9c2:	pop    rbp
  40a9c3:	pop    r12
  40a9c5:	pop    r13
  40a9c7:	pop    r14
  40a9c9:	ret    
  40a9ca:	nop    WORD PTR [rax+rax*1+0x0]
  40a9d0:	lea    rax,[rsi-0x1]
  40a9d4:	mov    QWORD PTR [r13+0x0],0x0
  40a9dc:	add    rsp,0x30
  40a9e0:	pop    rbx
  40a9e1:	pop    rsi
  40a9e2:	pop    rdi
  40a9e3:	pop    rbp
  40a9e4:	pop    r12
  40a9e6:	pop    r13
  40a9e8:	pop    r14
  40a9ea:	ret    
  40a9eb:	nop    DWORD PTR [rax+rax*1+0x0]
  40a9f0:	test   rdi,rdi
  40a9f3:	lea    rbx,[rsp+0x20]
  40a9f8:	jne    0x40aa1b
  40a9fa:	jmp    0x40aa51
  40a9fc:	nop    DWORD PTR [rax+0x0]
  40aa00:	movsxd rdx,eax
  40aa03:	sub    eax,0x1
  40aa06:	cdqe   
  40aa08:	add    rsi,rdx
  40aa0b:	cmp    BYTE PTR [rsp+rax*1+0x20],0x0
  40aa10:	je     0x40aa59
  40aa12:	add    r14,0x2
  40aa16:	cmp    rdi,rsi
  40aa19:	jbe    0x40aa51
  40aa1b:	movzx  edx,WORD PTR [r14]
  40aa1f:	mov    r9d,r12d
  40aa22:	mov    r8d,ebp
  40aa25:	mov    rcx,rbx
  40aa28:	call   0x40a850
  40aa2d:	test   eax,eax
  40aa2f:	jg     0x40aa00
  40aa31:	jmp    0x40a99e
  40aa36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40aa40:	xor    eax,eax
  40aa42:	add    rsp,0x30
  40aa46:	pop    rbx
  40aa47:	pop    rsi
  40aa48:	pop    rdi
  40aa49:	pop    rbp
  40aa4a:	pop    r12
  40aa4c:	pop    r13
  40aa4e:	pop    r14
  40aa50:	ret    
  40aa51:	mov    rax,rsi
  40aa54:	jmp    0x40a9a5
  40aa59:	lea    rax,[rsi-0x1]
  40aa5d:	jmp    0x40a9a5
  40aa62:	nop
  40aa63:	nop
  40aa64:	nop
  40aa65:	nop
  40aa66:	nop
  40aa67:	nop
  40aa68:	nop
  40aa69:	nop
  40aa6a:	nop
  40aa6b:	nop
  40aa6c:	nop
  40aa6d:	nop
  40aa6e:	nop
  40aa6f:	nop
  40aa70:	jmp    QWORD PTR [rip+0x8c5a]        # 0x4136d0
  40aa76:	nop
  40aa77:	nop
  40aa78:	jmp    QWORD PTR [rip+0x8c4a]        # 0x4136c8
  40aa7e:	nop
  40aa7f:	nop
  40aa80:	jmp    QWORD PTR [rip+0x8c3a]        # 0x4136c0
  40aa86:	nop
  40aa87:	nop
  40aa88:	jmp    QWORD PTR [rip+0x8c2a]        # 0x4136b8
  40aa8e:	nop
  40aa8f:	nop
  40aa90:	jmp    QWORD PTR [rip+0x8c1a]        # 0x4136b0
  40aa96:	nop
  40aa97:	nop
  40aa98:	jmp    QWORD PTR [rip+0x8c0a]        # 0x4136a8
  40aa9e:	nop
  40aa9f:	nop
  40aaa0:	jmp    QWORD PTR [rip+0x8bfa]        # 0x4136a0
  40aaa6:	nop
  40aaa7:	nop
  40aaa8:	jmp    QWORD PTR [rip+0x8bea]        # 0x413698
  40aaae:	nop
  40aaaf:	nop
  40aab0:	jmp    QWORD PTR [rip+0x8bda]        # 0x413690
  40aab6:	nop
  40aab7:	nop
  40aab8:	jmp    QWORD PTR [rip+0x8bca]        # 0x413688
  40aabe:	nop
  40aabf:	nop
  40aac0:	jmp    QWORD PTR [rip+0x8bba]        # 0x413680
  40aac6:	nop
  40aac7:	nop
  40aac8:	jmp    QWORD PTR [rip+0x8baa]        # 0x413678
  40aace:	nop
  40aacf:	nop
  40aad0:	jmp    QWORD PTR [rip+0x8b9a]        # 0x413670
  40aad6:	nop
  40aad7:	nop
  40aad8:	jmp    QWORD PTR [rip+0x8b8a]        # 0x413668
  40aade:	nop
  40aadf:	nop
  40aae0:	jmp    QWORD PTR [rip+0x8b7a]        # 0x413660
  40aae6:	nop
  40aae7:	nop
  40aae8:	jmp    QWORD PTR [rip+0x8b6a]        # 0x413658
  40aaee:	nop
  40aaef:	nop
  40aaf0:	jmp    QWORD PTR [rip+0x8b5a]        # 0x413650
  40aaf6:	nop
  40aaf7:	nop
  40aaf8:	jmp    QWORD PTR [rip+0x8b4a]        # 0x413648
  40aafe:	nop
  40aaff:	nop
  40ab00:	jmp    QWORD PTR [rip+0x8b3a]        # 0x413640
  40ab06:	nop
  40ab07:	nop
  40ab08:	jmp    QWORD PTR [rip+0x8b2a]        # 0x413638
  40ab0e:	nop
  40ab0f:	nop
  40ab10:	jmp    QWORD PTR [rip+0x8b1a]        # 0x413630
  40ab16:	nop
  40ab17:	nop
  40ab18:	jmp    QWORD PTR [rip+0x8b0a]        # 0x413628
  40ab1e:	nop
  40ab1f:	nop
  40ab20:	jmp    QWORD PTR [rip+0x8afa]        # 0x413620
  40ab26:	nop
  40ab27:	nop
  40ab28:	jmp    QWORD PTR [rip+0x8aea]        # 0x413618
  40ab2e:	nop
  40ab2f:	nop
  40ab30:	jmp    QWORD PTR [rip+0x8ada]        # 0x413610
  40ab36:	nop
  40ab37:	nop
  40ab38:	jmp    QWORD PTR [rip+0x8aca]        # 0x413608
  40ab3e:	nop
  40ab3f:	nop
  40ab40:	jmp    QWORD PTR [rip+0x8aba]        # 0x413600
  40ab46:	nop
  40ab47:	nop
  40ab48:	jmp    QWORD PTR [rip+0x8aaa]        # 0x4135f8
  40ab4e:	nop
  40ab4f:	nop
  40ab50:	jmp    QWORD PTR [rip+0x8a9a]        # 0x4135f0
  40ab56:	nop
  40ab57:	nop
  40ab58:	jmp    QWORD PTR [rip+0x8a8a]        # 0x4135e8
  40ab5e:	nop
  40ab5f:	nop
  40ab60:	jmp    QWORD PTR [rip+0x8a7a]        # 0x4135e0
  40ab66:	nop
  40ab67:	nop
  40ab68:	jmp    QWORD PTR [rip+0x8a6a]        # 0x4135d8
  40ab6e:	nop
  40ab6f:	nop
  40ab70:	jmp    QWORD PTR [rip+0x8a5a]        # 0x4135d0
  40ab76:	nop
  40ab77:	nop
  40ab78:	jmp    QWORD PTR [rip+0x8a4a]        # 0x4135c8
  40ab7e:	nop
  40ab7f:	nop
  40ab80:	jmp    QWORD PTR [rip+0x8a3a]        # 0x4135c0
  40ab86:	nop
  40ab87:	nop
  40ab88:	jmp    QWORD PTR [rip+0x8a2a]        # 0x4135b8
  40ab8e:	nop
  40ab8f:	nop
  40ab90:	jmp    QWORD PTR [rip+0x8a1a]        # 0x4135b0
  40ab96:	nop
  40ab97:	nop
  40ab98:	jmp    QWORD PTR [rip+0x8a0a]        # 0x4135a8
  40ab9e:	nop
  40ab9f:	nop
  40aba0:	jmp    QWORD PTR [rip+0x89fa]        # 0x4135a0
  40aba6:	nop
  40aba7:	nop
  40aba8:	jmp    QWORD PTR [rip+0x89ea]        # 0x413598
  40abae:	nop
  40abaf:	nop
  40abb0:	jmp    QWORD PTR [rip+0x89da]        # 0x413590
  40abb6:	nop
  40abb7:	nop
  40abb8:	jmp    QWORD PTR [rip+0x89ca]        # 0x413588
  40abbe:	nop
  40abbf:	nop
  40abc0:	jmp    QWORD PTR [rip+0x89ba]        # 0x413580
  40abc6:	nop
  40abc7:	nop
  40abc8:	jmp    QWORD PTR [rip+0x89aa]        # 0x413578
  40abce:	nop
  40abcf:	nop
  40abd0:	jmp    QWORD PTR [rip+0x899a]        # 0x413570
  40abd6:	nop
  40abd7:	nop
  40abd8:	jmp    QWORD PTR [rip+0x898a]        # 0x413568
  40abde:	nop
  40abdf:	nop
  40abe0:	jmp    QWORD PTR [rip+0x8972]        # 0x413558
  40abe6:	nop
  40abe7:	nop
  40abe8:	jmp    QWORD PTR [rip+0x8962]        # 0x413550
  40abee:	nop
  40abef:	nop
  40abf0:	jmp    QWORD PTR [rip+0x8952]        # 0x413548
  40abf6:	nop
  40abf7:	nop
  40abf8:	jmp    QWORD PTR [rip+0x8942]        # 0x413540
  40abfe:	nop
  40abff:	nop
  40ac00:	jmp    QWORD PTR [rip+0x8932]        # 0x413538
  40ac06:	nop
  40ac07:	nop
  40ac08:	jmp    QWORD PTR [rip+0x891a]        # 0x413528
  40ac0e:	nop
  40ac0f:	nop
  40ac10:	jmp    QWORD PTR [rip+0x890a]        # 0x413520
  40ac16:	nop
  40ac17:	nop
  40ac18:	jmp    QWORD PTR [rip+0x88fa]        # 0x413518
  40ac1e:	nop
  40ac1f:	nop
  40ac20:	jmp    QWORD PTR [rip+0x88e2]        # 0x413508
  40ac26:	nop
  40ac27:	nop
  40ac28:	jmp    QWORD PTR [rip+0x88d2]        # 0x413500
  40ac2e:	nop
  40ac2f:	nop
  40ac30:	jmp    QWORD PTR [rip+0x88ba]        # 0x4134f0
  40ac36:	nop
  40ac37:	nop
  40ac38:	jmp    QWORD PTR [rip+0x88aa]        # 0x4134e8
  40ac3e:	nop
  40ac3f:	nop
  40ac40:	jmp    QWORD PTR [rip+0x889a]        # 0x4134e0
  40ac46:	nop
  40ac47:	nop
  40ac48:	jmp    QWORD PTR [rip+0x888a]        # 0x4134d8
  40ac4e:	nop
  40ac4f:	nop
  40ac50:	mov    rax,QWORD PTR [rip+0x78f9]        # 0x412550
  40ac57:	ret    
  40ac58:	nop    DWORD PTR [rax+rax*1+0x0]
  40ac60:	mov    rax,rcx
  40ac63:	xchg   QWORD PTR [rip+0x78e6],rax        # 0x412550
  40ac6a:	ret    
  40ac6b:	nop
  40ac6c:	nop
  40ac6d:	nop
  40ac6e:	nop
  40ac6f:	nop
  40ac70:	mov    eax,DWORD PTR [rip+0x78ea]        # 0x412560
  40ac76:	ret    
  40ac77:	nop    WORD PTR [rax+rax*1+0x0]
  40ac80:	mov    eax,ecx
  40ac82:	xchg   DWORD PTR [rip+0x78d8],eax        # 0x412560
  40ac88:	ret    
  40ac89:	nop    DWORD PTR [rax+0x0]
  40ac90:	push   rbx
  40ac91:	sub    rsp,0x20
  40ac95:	mov    ebx,ecx
  40ac97:	lea    rcx,[rip+0x3662]        # 0x40e300
  40ac9e:	call   QWORD PTR [rip+0x8754]        # 0x4133f8
  40aca4:	lea    rdx,[rip+0x366b]        # 0x40e316
  40acab:	mov    rcx,rax
  40acae:	call   QWORD PTR [rip+0x874c]        # 0x413400
  40acb4:	lea    rdx,[rip+0xffffffffffffffc5]        # 0x40ac80
  40acbb:	test   rax,rax
  40acbe:	mov    ecx,ebx
  40acc0:	cmove  rax,rdx
  40acc4:	mov    QWORD PTR [rip+0x13ed],rax        # 0x40c0b8
  40accb:	add    rsp,0x20
  40accf:	pop    rbx
  40acd0:	rex.W jmp rax
  40acd3:	nop    DWORD PTR [rax]
  40acd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ace0:	sub    rsp,0x28
  40ace4:	lea    rcx,[rip+0x3615]        # 0x40e300
  40aceb:	call   QWORD PTR [rip+0x8707]        # 0x4133f8
  40acf1:	lea    rdx,[rip+0x3631]        # 0x40e329
  40acf8:	mov    rcx,rax
  40acfb:	call   QWORD PTR [rip+0x86ff]        # 0x413400
  40ad01:	lea    rdx,[rip+0xffffffffffffff68]        # 0x40ac70
  40ad08:	test   rax,rax
  40ad0b:	cmove  rax,rdx
  40ad0f:	mov    QWORD PTR [rip+0x139a],rax        # 0x40c0b0
  40ad16:	add    rsp,0x28
  40ad1a:	rex.W jmp rax
  40ad1d:	nop    DWORD PTR [rax]
  40ad20:	mov    rax,QWORD PTR [rip+0x1391]        # 0x40c0b8
  40ad27:	rex.W jmp rax
  40ad2a:	nop    WORD PTR [rax+rax*1+0x0]
  40ad30:	mov    rax,QWORD PTR [rip+0x1379]        # 0x40c0b0
  40ad37:	rex.W jmp rax
  40ad3a:	nop
  40ad3b:	nop
  40ad3c:	nop
  40ad3d:	nop
  40ad3e:	nop
  40ad3f:	nop
  40ad40:	jmp    QWORD PTR [rip+0x899a]        # 0x4136e0
  40ad46:	nop
  40ad47:	nop
  40ad48:	nop    DWORD PTR [rax+rax*1+0x0]
  40ad50:	jmp    QWORD PTR [rip+0x8772]        # 0x4134c8
  40ad56:	nop
  40ad57:	nop
  40ad58:	jmp    QWORD PTR [rip+0x8762]        # 0x4134c0
  40ad5e:	nop
  40ad5f:	nop
  40ad60:	jmp    QWORD PTR [rip+0x8752]        # 0x4134b8
  40ad66:	nop
  40ad67:	nop
  40ad68:	jmp    QWORD PTR [rip+0x8742]        # 0x4134b0
  40ad6e:	nop
  40ad6f:	nop
  40ad70:	jmp    QWORD PTR [rip+0x8732]        # 0x4134a8
  40ad76:	nop
  40ad77:	nop
  40ad78:	jmp    QWORD PTR [rip+0x8722]        # 0x4134a0
  40ad7e:	nop
  40ad7f:	nop
  40ad80:	jmp    QWORD PTR [rip+0x8712]        # 0x413498
  40ad86:	nop
  40ad87:	nop
  40ad88:	jmp    QWORD PTR [rip+0x8702]        # 0x413490
  40ad8e:	nop
  40ad8f:	nop
  40ad90:	jmp    QWORD PTR [rip+0x86f2]        # 0x413488
  40ad96:	nop
  40ad97:	nop
  40ad98:	jmp    QWORD PTR [rip+0x86e2]        # 0x413480
  40ad9e:	nop
  40ad9f:	nop
  40ada0:	jmp    QWORD PTR [rip+0x86d2]        # 0x413478
  40ada6:	nop
  40ada7:	nop
  40ada8:	jmp    QWORD PTR [rip+0x86c2]        # 0x413470
  40adae:	nop
  40adaf:	nop
  40adb0:	jmp    QWORD PTR [rip+0x86b2]        # 0x413468
  40adb6:	nop
  40adb7:	nop
  40adb8:	jmp    QWORD PTR [rip+0x86a2]        # 0x413460
  40adbe:	nop
  40adbf:	nop
  40adc0:	jmp    QWORD PTR [rip+0x8692]        # 0x413458
  40adc6:	nop
  40adc7:	nop
  40adc8:	jmp    QWORD PTR [rip+0x8682]        # 0x413450
  40adce:	nop
  40adcf:	nop
  40add0:	jmp    QWORD PTR [rip+0x8672]        # 0x413448
  40add6:	nop
  40add7:	nop
  40add8:	jmp    QWORD PTR [rip+0x8662]        # 0x413440
  40adde:	nop
  40addf:	nop
  40ade0:	jmp    QWORD PTR [rip+0x8652]        # 0x413438
  40ade6:	nop
  40ade7:	nop
  40ade8:	jmp    QWORD PTR [rip+0x8642]        # 0x413430
  40adee:	nop
  40adef:	nop
  40adf0:	jmp    QWORD PTR [rip+0x8632]        # 0x413428
  40adf6:	nop
  40adf7:	nop
  40adf8:	jmp    QWORD PTR [rip+0x8622]        # 0x413420
  40adfe:	nop
  40adff:	nop
  40ae00:	jmp    QWORD PTR [rip+0x8612]        # 0x413418
  40ae06:	nop
  40ae07:	nop
  40ae08:	jmp    QWORD PTR [rip+0x8602]        # 0x413410
  40ae0e:	nop
  40ae0f:	nop
  40ae10:	jmp    QWORD PTR [rip+0x85f2]        # 0x413408
  40ae16:	nop
  40ae17:	nop
  40ae18:	jmp    QWORD PTR [rip+0x85e2]        # 0x413400
  40ae1e:	nop
  40ae1f:	nop
  40ae20:	jmp    QWORD PTR [rip+0x85d2]        # 0x4133f8
  40ae26:	nop
  40ae27:	nop
  40ae28:	jmp    QWORD PTR [rip+0x85c2]        # 0x4133f0
  40ae2e:	nop
  40ae2f:	nop
  40ae30:	jmp    QWORD PTR [rip+0x85b2]        # 0x4133e8
  40ae36:	nop
  40ae37:	nop
  40ae38:	jmp    QWORD PTR [rip+0x85a2]        # 0x4133e0
  40ae3e:	nop
  40ae3f:	nop
  40ae40:	jmp    QWORD PTR [rip+0x8592]        # 0x4133d8
  40ae46:	nop
  40ae47:	nop
  40ae48:	jmp    QWORD PTR [rip+0x8582]        # 0x4133d0
  40ae4e:	nop
  40ae4f:	nop
  40ae50:	jmp    QWORD PTR [rip+0x8572]        # 0x4133c8
  40ae56:	nop
  40ae57:	nop
  40ae58:	jmp    QWORD PTR [rip+0x8562]        # 0x4133c0
  40ae5e:	nop
  40ae5f:	nop
  40ae60:	jmp    QWORD PTR [rip+0x8552]        # 0x4133b8
  40ae66:	nop
  40ae67:	nop
  40ae68:	jmp    QWORD PTR [rip+0x8542]        # 0x4133b0
  40ae6e:	nop
  40ae6f:	nop
  40ae70:	jmp    QWORD PTR [rip+0x8532]        # 0x4133a8
  40ae76:	nop
  40ae77:	nop
  40ae78:	jmp    QWORD PTR [rip+0x8522]        # 0x4133a0
  40ae7e:	nop
  40ae7f:	nop
  40ae80:	sub    rsp,0x38
  40ae84:	mov    QWORD PTR [rsp+0x50],r8
  40ae89:	lea    r8,[rsp+0x50]
  40ae8e:	mov    QWORD PTR [rsp+0x58],r9
  40ae93:	mov    QWORD PTR [rsp+0x28],r8
  40ae98:	call   0x405f10
  40ae9d:	add    rsp,0x38
  40aea1:	ret    
  40aea2:	nop
  40aea3:	nop
  40aea4:	nop
  40aea5:	nop
  40aea6:	nop
  40aea7:	nop
  40aea8:	nop
  40aea9:	nop
  40aeaa:	nop
  40aeab:	nop
  40aeac:	nop
  40aead:	nop
  40aeae:	nop
  40aeaf:	nop
  40aeb0:	push   r12
  40aeb2:	push   rbp
  40aeb3:	push   rdi
  40aeb4:	push   rsi
  40aeb5:	push   rbx
  40aeb6:	sub    rsp,0x50
  40aeba:	mov    rsi,rdx
  40aebd:	movsxd rdi,ecx
  40aec0:	call   0x4049e0
  40aec5:	lea    rcx,[rip+0x2143]        # 0x40d00f
  40aecc:	mov    rbx,QWORD PTR [rsi]
  40aecf:	call   0x40ab50
  40aed4:	test   rax,rax
  40aed7:	je     0x40aeee
  40aed9:	lea    rdx,[rip+0x213f]        # 0x40d01f
  40aee0:	xor    r8d,r8d
  40aee3:	mov    rcx,rax
  40aee6:	call   0x401a80
  40aeeb:	mov    rbx,rax
  40aeee:	lea    r8,[rip+0x230b]        # 0x40d200
  40aef5:	lea    rdx,[rip+0x2204]        # 0x40d100
  40aefc:	mov    rcx,rbx
  40aeff:	call   0x402370
  40af04:	lea    rdx,[rip+0x22f5]        # 0x40d200
  40af0b:	test   rax,rax
  40af0e:	lea    r8,[rip+0x226b]        # 0x40d180
  40af15:	mov    rcx,rbx
  40af18:	cmovne rdx,rax
  40af1c:	mov    QWORD PTR [rip+0x6155],rdx        # 0x411078
  40af23:	lea    rdx,[rip+0x21d6]        # 0x40d100
  40af2a:	call   0x402370
  40af2f:	lea    rdx,[rip+0x224a]        # 0x40d180
  40af36:	test   rax,rax
  40af39:	lea    r8,[rip+0x21b5]        # 0x40d0f5
  40af40:	lea    rcx,[rip+0x20f2]        # 0x40d039
  40af47:	cmove  rax,rdx
  40af4b:	lea    rdx,[rip+0x20d4]        # 0x40d026
  40af52:	xor    r9d,r9d
  40af55:	mov    QWORD PTR [rip+0x6114],rax        # 0x411070
  40af5c:	call   0x401a80
  40af61:	mov    rcx,QWORD PTR [rip+0x6110]        # 0x411078
  40af68:	mov    QWORD PTR [rip+0x60f9],rax        # 0x411068
  40af6f:	lea    r9,[rip+0x20d0]        # 0x40d046
  40af76:	mov    QWORD PTR [rsp+0x28],rax
  40af7b:	lea    rax,[rip+0x2173]        # 0x40d0f5
  40af82:	lea    rdx,[rip+0x209d]        # 0x40d026
  40af89:	mov    QWORD PTR [rsp+0x30],0x0
  40af92:	mov    r8,rax
  40af95:	mov    QWORD PTR [rsp+0x20],rax
  40af9a:	call   0x401a80
  40af9f:	lea    rdx,[rip+0x20a6]        # 0x40d04c
  40afa6:	xor    r8d,r8d
  40afa9:	mov    rcx,rax
  40afac:	mov    QWORD PTR [rip+0x60b5],rax        # 0x411068
  40afb3:	call   0x401a80
  40afb8:	lea    rdx,[rip+0x6091]        # 0x411050
  40afbf:	mov    rcx,rax
  40afc2:	call   0x4017e0
  40afc7:	lea    rax,[rip+0x2127]        # 0x40d0f5
  40afce:	mov    rcx,QWORD PTR [rip+0x609b]        # 0x411070
  40afd5:	lea    r9,[rip+0x206a]        # 0x40d046
  40afdc:	lea    rdx,[rip+0x2043]        # 0x40d026
  40afe3:	mov    QWORD PTR [rsp+0x28],0x0
  40afec:	mov    r8,rax
  40afef:	mov    QWORD PTR [rsp+0x20],rax
  40aff4:	call   0x401a80
  40aff9:	lea    rdx,[rip+0x6050]        # 0x411050
  40b000:	mov    rcx,rax
  40b003:	mov    QWORD PTR [rip+0x6066],rax        # 0x411070
  40b00a:	call   0x4017e0
  40b00f:	lea    rdx,[rip+0x601a]        # 0x411030
  40b016:	lea    rcx,[rip+0x2033]        # 0x40d050
  40b01d:	call   0x401920
  40b022:	lea    rdx,[rip+0x202c]        # 0x40d055
  40b029:	lea    rcx,[rip+0x6020]        # 0x411050
  40b030:	mov    r8d,0x4
  40b036:	call   0x401540
  40b03b:	test   rax,rax
  40b03e:	mov    r12,rax
  40b041:	je     0x40b240
  40b047:	lea    rdx,[rip+0x2038]        # 0x40d086
  40b04e:	lea    rcx,[rip+0x5ffb]        # 0x411050
  40b055:	mov    r8d,0x1
  40b05b:	call   0x401540
  40b060:	test   rax,rax
  40b063:	mov    rbp,rax
  40b066:	je     0x40b1e4
  40b06c:	lea    ecx,[rdi+0x4]
  40b06f:	mov    edx,0x8
  40b074:	movsxd rcx,ecx
  40b077:	call   0x403540
  40b07c:	mov    rdx,QWORD PTR [rsi+0x8]
  40b080:	mov    rbx,rax
  40b083:	mov    QWORD PTR [rax],rbp
  40b086:	lea    rax,[rip+0x2019]        # 0x40d0a6
  40b08d:	mov    QWORD PTR [rbx+0x10],r12
  40b091:	test   rdx,rdx
  40b094:	mov    QWORD PTR [rbx+0x8],rax
  40b098:	je     0x40b0b2
  40b09a:	cmp    BYTE PTR [rdx],0x2d
  40b09d:	je     0x40b0b2
  40b09f:	lea    rcx,[rip+0x2009]        # 0x40d0af
  40b0a6:	xor    r8d,r8d
  40b0a9:	call   0x401a80
  40b0ae:	mov    QWORD PTR [rsi+0x8],rax
  40b0b2:	cmp    edi,0x1
  40b0b5:	jle    0x40b236
  40b0bb:	lea    r11d,[rdi-0x2]
  40b0bf:	xor    r9d,r9d
  40b0c2:	add    r11,0x1
  40b0c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b0d0:	mov    r10,QWORD PTR [rsi+r9*8+0x8]
  40b0d5:	mov    QWORD PTR [rbx+r9*8+0x18],r10
  40b0da:	add    r9,0x1
  40b0de:	cmp    r9,r11
  40b0e1:	jne    0x40b0d0
  40b0e3:	lea    rcx,[rip+0x1fc7]        # 0x40d0b1
  40b0ea:	xor    r8d,r8d
  40b0ed:	mov    QWORD PTR [rbx+rdi*8+0x10],0x0
  40b0f6:	mov    rdx,rbp
  40b0f9:	call   0x401a80
  40b0fe:	mov    r9,rax
  40b101:	lea    rax,[rsp+0x4c]
  40b106:	mov    r8,rbx
  40b109:	mov    QWORD PTR [rsp+0x28],0x0
  40b112:	mov    QWORD PTR [rsp+0x20],0x0
  40b11b:	mov    rdx,rbp
  40b11e:	mov    QWORD PTR [rsp+0x38],rax
  40b123:	lea    rax,[rsp+0x48]
  40b128:	mov    ecx,0x3
  40b12d:	mov    QWORD PTR [rsp+0x30],rax
  40b132:	call   0x402390
  40b137:	test   rax,rax
  40b13a:	mov    rbx,rax
  40b13d:	je     0x40b16b
  40b13f:	call   QWORD PTR [rip+0x83bb]        # 0x413500
  40b145:	lea    rdx,[rip+0x1f6a]        # 0x40d0b6
  40b14c:	lea    rcx,[rax+0x60]
  40b150:	mov    r9,rbx
  40b153:	mov    r8,rbp
  40b156:	call   0x40ae80
  40b15b:	mov    eax,0x1
  40b160:	add    rsp,0x50
  40b164:	pop    rbx
  40b165:	pop    rsi
  40b166:	pop    rdi
  40b167:	pop    rbp
  40b168:	pop    r12
  40b16a:	ret    
  40b16b:	mov    edx,DWORD PTR [rsp+0x48]
  40b16f:	xor    eax,eax
  40b171:	test   edx,edx
  40b173:	je     0x40b160
  40b175:	movzx  ecx,dl
  40b178:	cmp    ecx,0x7f
  40b17b:	je     0x40b1d2
  40b17d:	test   ecx,ecx
  40b17f:	je     0x40b1d2
  40b181:	mov    esi,edx
  40b183:	lea    rax,[rip+0x1e76]        # 0x40d000
  40b18a:	lea    rbx,[rip+0x1e7d]        # 0x40d00e
  40b191:	and    esi,0x7f
  40b194:	and    dl,0x80
  40b197:	mov    ecx,esi
  40b199:	cmovne rbx,rax
  40b19d:	call   0x4032b0
  40b1a2:	mov    rdi,rax
  40b1a5:	call   QWORD PTR [rip+0x8355]        # 0x413500
  40b1ab:	lea    rdx,[rip+0x1f1e]        # 0x40d0d0
  40b1b2:	lea    rcx,[rax+0x60]
  40b1b6:	mov    QWORD PTR [rsp+0x28],rbx
  40b1bb:	mov    QWORD PTR [rsp+0x20],rdi
  40b1c0:	mov    r9d,esi
  40b1c3:	mov    r8,rbp
  40b1c6:	call   0x40ae80
  40b1cb:	mov    eax,0x1
  40b1d0:	jmp    0x40b160
  40b1d2:	mov    eax,0x1
  40b1d7:	test   ecx,ecx
  40b1d9:	movzx  edx,dh
  40b1dc:	cmove  eax,edx
  40b1df:	jmp    0x40b160
  40b1e4:	lea    rdx,[rip+0x1e9b]        # 0x40d086
  40b1eb:	lea    rcx,[rip+0x5e3e]        # 0x411030
  40b1f2:	mov    r8d,0x1
  40b1f8:	call   0x401540
  40b1fd:	test   rax,rax
  40b200:	mov    rbp,rax
  40b203:	jne    0x40b06c
  40b209:	mov    rbx,QWORD PTR [rsi]
  40b20c:	call   QWORD PTR [rip+0x82ee]        # 0x413500
  40b212:	lea    r9,[rip+0x1e6d]        # 0x40d086
  40b219:	lea    rcx,[rax+0x60]
  40b21d:	lea    rdx,[rip+0x1e65]        # 0x40d089
  40b224:	mov    r8,rbx
  40b227:	call   0x40ae80
  40b22c:	mov    ecx,0x1
  40b231:	call   0x40ab88
  40b236:	mov    edi,0x1
  40b23b:	jmp    0x40b0e3
  40b240:	mov    rbx,QWORD PTR [rsi]
  40b243:	call   QWORD PTR [rip+0x82b7]        # 0x413500
  40b249:	lea    r9,[rip+0x1e05]        # 0x40d055
  40b250:	lea    rcx,[rax+0x60]
  40b254:	lea    rdx,[rip+0x1e0e]        # 0x40d069
  40b25b:	mov    r8,rbx
  40b25e:	call   0x40ae80
  40b263:	mov    ecx,0x1
  40b268:	call   0x40ab88
  40b26d:	nop
  40b26e:	nop
  40b26f:	nop
  40b270:	(bad)  
  40b271:	(bad)  
  40b272:	(bad)  
  40b273:	(bad)  
  40b274:	(bad)  
  40b275:	(bad)  
  40b276:	(bad)  
  40b277:	inc    DWORD PTR [rax]
  40b279:	add    BYTE PTR [rax],al
  40b27b:	add    BYTE PTR [rax],al
  40b27d:	add    BYTE PTR [rax],al
  40b27f:	add    bh,bh
  40b281:	(bad)  
  40b282:	(bad)  
  40b283:	(bad)  
  40b284:	(bad)  
  40b285:	(bad)  
  40b286:	(bad)  
  40b287:	inc    DWORD PTR [rax]
  40b289:	add    BYTE PTR [rax],al
  40b28b:	add    BYTE PTR [rax],al
  40b28d:	add    BYTE PTR [rax],al
	...
