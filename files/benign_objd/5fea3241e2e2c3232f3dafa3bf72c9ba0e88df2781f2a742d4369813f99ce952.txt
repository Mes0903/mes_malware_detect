
5fea3241e2e2c3232f3dafa3bf72c9ba0e88df2781f2a742d4369813f99ce952.exe:     file format pei-x86-64


Disassembly of section .text:

0000000140001000 <.text>:
	...
   140001008:	rex push rdi
   14000100a:	sub    rsp,0x30
   14000100e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140001017:	mov    QWORD PTR [rsp+0x40],rbx
   14000101c:	mov    QWORD PTR [rsp+0x48],rsi
   140001021:	mov    rsi,rdx
   140001024:	mov    rdi,rcx
   140001027:	mov    ecx,0x18
   14000102c:	call   0x14000e1bc
   140001031:	mov    rbx,rax
   140001034:	mov    QWORD PTR [rsp+0x50],rax
   140001039:	test   rax,rax
   14000103c:	je     0x14000106b
   14000103e:	and    QWORD PTR [rax+0x8],0x0
   140001043:	mov    DWORD PTR [rax+0x10],0x1
   14000104a:	mov    rcx,rsi
   14000104d:	call   QWORD PTR [rip+0xf145]        # 0x140010198
   140001053:	mov    QWORD PTR [rbx],rax
   140001056:	test   rax,rax
   140001059:	jne    0x14000106d
   14000105b:	test   rsi,rsi
   14000105e:	je     0x14000106d
   140001060:	mov    ecx,0x8007000e
   140001065:	call   0x140007fe0
   14000106a:	int3   
   14000106b:	xor    ebx,ebx
   14000106d:	mov    QWORD PTR [rdi],rbx
   140001070:	test   rbx,rbx
   140001073:	jne    0x140001080
   140001075:	mov    ecx,0x8007000e
   14000107a:	call   0x140007fe0
   14000107f:	int3   
   140001080:	mov    rax,rdi
   140001083:	mov    rbx,QWORD PTR [rsp+0x40]
   140001088:	mov    rsi,QWORD PTR [rsp+0x48]
   14000108d:	add    rsp,0x30
   140001091:	pop    rdi
   140001092:	ret    
   140001093:	int3   
   140001094:	int3   
   140001095:	int3   
   140001096:	int3   
   140001097:	int3   
   140001098:	int3   
   140001099:	int3   
   14000109a:	int3   
   14000109b:	int3   
   14000109c:	mov    QWORD PTR [rsp+0x10],rbx
   1400010a1:	push   rdi
   1400010a2:	sub    rsp,0x20
   1400010a6:	mov    rbx,QWORD PTR [rcx]
   1400010a9:	mov    rdi,rcx
   1400010ac:	test   rbx,rbx
   1400010af:	je     0x1400010f4
   1400010b1:	or     eax,0xffffffff
   1400010b4:	lock xadd DWORD PTR [rbx+0x10],eax
   1400010b9:	cmp    eax,0x1
   1400010bc:	jne    0x1400010f0
   1400010be:	test   rbx,rbx
   1400010c1:	je     0x1400010f0
   1400010c3:	mov    rcx,QWORD PTR [rbx]
   1400010c6:	test   rcx,rcx
   1400010c9:	je     0x1400010d5
   1400010cb:	call   QWORD PTR [rip+0xf0df]        # 0x1400101b0
   1400010d1:	and    QWORD PTR [rbx],0x0
   1400010d5:	mov    rcx,QWORD PTR [rbx+0x8]
   1400010d9:	test   rcx,rcx
   1400010dc:	je     0x1400010e8
   1400010de:	call   0x14000e208
   1400010e3:	and    QWORD PTR [rbx+0x8],0x0
   1400010e8:	mov    rcx,rbx
   1400010eb:	call   0x14000e1fc
   1400010f0:	and    QWORD PTR [rdi],0x0
   1400010f4:	mov    rbx,QWORD PTR [rsp+0x38]
   1400010f9:	add    rsp,0x20
   1400010fd:	pop    rdi
   1400010fe:	ret    
   1400010ff:	int3   
   140001100:	int3   
   140001101:	int3   
   140001102:	int3   
   140001103:	int3   
   140001104:	int3   
   140001105:	int3   
   140001106:	int3   
   140001107:	int3   
   140001108:	mov    QWORD PTR [rsp+0x10],rbx
   14000110d:	mov    QWORD PTR [rsp+0x18],rsi
   140001112:	push   rdi
   140001113:	sub    rsp,0x20
   140001117:	mov    rax,QWORD PTR [rdx]
   14000111a:	mov    rsi,rdx
   14000111d:	mov    rdi,rcx
   140001120:	test   rax,rax
   140001123:	je     0x140001129
   140001125:	lock inc DWORD PTR [rax+0x10]
   140001129:	mov    rbx,QWORD PTR [rcx]
   14000112c:	test   rbx,rbx
   14000112f:	je     0x140001174
   140001131:	or     eax,0xffffffff
   140001134:	lock xadd DWORD PTR [rbx+0x10],eax
   140001139:	cmp    eax,0x1
   14000113c:	jne    0x140001170
   14000113e:	test   rbx,rbx
   140001141:	je     0x140001170
   140001143:	mov    rcx,QWORD PTR [rbx]
   140001146:	test   rcx,rcx
   140001149:	je     0x140001155
   14000114b:	call   QWORD PTR [rip+0xf05f]        # 0x1400101b0
   140001151:	and    QWORD PTR [rbx],0x0
   140001155:	mov    rcx,QWORD PTR [rbx+0x8]
   140001159:	test   rcx,rcx
   14000115c:	je     0x140001168
   14000115e:	call   0x14000e208
   140001163:	and    QWORD PTR [rbx+0x8],0x0
   140001168:	mov    rcx,rbx
   14000116b:	call   0x14000e1fc
   140001170:	and    QWORD PTR [rdi],0x0
   140001174:	mov    rax,QWORD PTR [rsi]
   140001177:	mov    rbx,QWORD PTR [rsp+0x38]
   14000117c:	mov    rsi,QWORD PTR [rsp+0x40]
   140001181:	mov    QWORD PTR [rdi],rax
   140001184:	mov    rax,rdi
   140001187:	add    rsp,0x20
   14000118b:	pop    rdi
   14000118c:	ret    
   14000118d:	int3   
   14000118e:	int3   
   14000118f:	int3   
   140001190:	int3   
   140001191:	int3   
   140001192:	int3   
   140001193:	int3   
   140001194:	rex push rdi
   140001196:	sub    rsp,0x30
   14000119a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400011a3:	mov    QWORD PTR [rsp+0x48],rbx
   1400011a8:	mov    QWORD PTR [rsp+0x50],rsi
   1400011ad:	mov    rsi,rdx
   1400011b0:	mov    rdi,rcx
   1400011b3:	mov    rbx,QWORD PTR [rcx]
   1400011b6:	test   rbx,rbx
   1400011b9:	je     0x1400011fe
   1400011bb:	or     eax,0xffffffff
   1400011be:	lock xadd DWORD PTR [rbx+0x10],eax
   1400011c3:	cmp    eax,0x1
   1400011c6:	jne    0x1400011fa
   1400011c8:	test   rbx,rbx
   1400011cb:	je     0x1400011fa
   1400011cd:	mov    rcx,QWORD PTR [rbx]
   1400011d0:	test   rcx,rcx
   1400011d3:	je     0x1400011df
   1400011d5:	call   QWORD PTR [rip+0xefd5]        # 0x1400101b0
   1400011db:	and    QWORD PTR [rbx],0x0
   1400011df:	mov    rcx,QWORD PTR [rbx+0x8]
   1400011e3:	test   rcx,rcx
   1400011e6:	je     0x1400011f2
   1400011e8:	call   0x14000e208
   1400011ed:	and    QWORD PTR [rbx+0x8],0x0
   1400011f2:	mov    rcx,rbx
   1400011f5:	call   0x14000e1fc
   1400011fa:	and    QWORD PTR [rdi],0x0
   1400011fe:	mov    ecx,0x18
   140001203:	call   0x14000e1bc
   140001208:	mov    rbx,rax
   14000120b:	mov    QWORD PTR [rsp+0x40],rax
   140001210:	test   rax,rax
   140001213:	je     0x140001242
   140001215:	and    QWORD PTR [rax+0x8],0x0
   14000121a:	mov    DWORD PTR [rax+0x10],0x1
   140001221:	mov    rcx,rsi
   140001224:	call   QWORD PTR [rip+0xef6e]        # 0x140010198
   14000122a:	mov    QWORD PTR [rbx],rax
   14000122d:	test   rax,rax
   140001230:	jne    0x140001244
   140001232:	test   rsi,rsi
   140001235:	je     0x140001244
   140001237:	mov    ecx,0x8007000e
   14000123c:	call   0x140007fe0
   140001241:	int3   
   140001242:	xor    ebx,ebx
   140001244:	mov    QWORD PTR [rdi],rbx
   140001247:	mov    rax,rdi
   14000124a:	mov    rbx,QWORD PTR [rsp+0x48]
   14000124f:	mov    rsi,QWORD PTR [rsp+0x50]
   140001254:	add    rsp,0x30
   140001258:	pop    rdi
   140001259:	ret    
   14000125a:	int3   
   14000125b:	int3   
   14000125c:	int3   
   14000125d:	int3   
   14000125e:	int3   
   14000125f:	int3   
   140001260:	rex push rdi
   140001262:	sub    rsp,0x30
   140001266:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000126f:	mov    QWORD PTR [rsp+0x48],rbx
   140001274:	mov    QWORD PTR [rsp+0x50],rsi
   140001279:	mov    rbx,rdx
   14000127c:	mov    rdi,rcx
   14000127f:	mov    ecx,0x18
   140001284:	call   0x14000e1bc
   140001289:	mov    QWORD PTR [rsp+0x40],rax
   14000128e:	test   rax,rax
   140001291:	je     0x1400012a6
   140001293:	mov    r8,rbx
   140001296:	mov    rdx,rdi
   140001299:	mov    rcx,rax
   14000129c:	call   0x1400013b8
   1400012a1:	mov    rsi,rax
   1400012a4:	jmp    0x1400012a8
   1400012a6:	xor    esi,esi
   1400012a8:	mov    rbx,QWORD PTR [rdi]
   1400012ab:	test   rbx,rbx
   1400012ae:	je     0x1400012f3
   1400012b0:	or     eax,0xffffffff
   1400012b3:	lock xadd DWORD PTR [rbx+0x10],eax
   1400012b8:	cmp    eax,0x1
   1400012bb:	jne    0x1400012ef
   1400012bd:	test   rbx,rbx
   1400012c0:	je     0x1400012ef
   1400012c2:	mov    rcx,QWORD PTR [rbx]
   1400012c5:	test   rcx,rcx
   1400012c8:	je     0x1400012d4
   1400012ca:	call   QWORD PTR [rip+0xeee0]        # 0x1400101b0
   1400012d0:	and    QWORD PTR [rbx],0x0
   1400012d4:	mov    rcx,QWORD PTR [rbx+0x8]
   1400012d8:	test   rcx,rcx
   1400012db:	je     0x1400012e7
   1400012dd:	call   0x14000e208
   1400012e2:	and    QWORD PTR [rbx+0x8],0x0
   1400012e7:	mov    rcx,rbx
   1400012ea:	call   0x14000e1fc
   1400012ef:	and    QWORD PTR [rdi],0x0
   1400012f3:	mov    QWORD PTR [rdi],rsi
   1400012f6:	mov    rax,rdi
   1400012f9:	mov    rbx,QWORD PTR [rsp+0x48]
   1400012fe:	mov    rsi,QWORD PTR [rsp+0x50]
   140001303:	add    rsp,0x30
   140001307:	pop    rdi
   140001308:	ret    
   140001309:	int3   
   14000130a:	int3   
   14000130b:	int3   
   14000130c:	int3   
   14000130d:	int3   
   14000130e:	int3   
   14000130f:	int3   
   140001310:	mov    QWORD PTR [rsp+0x10],rdx
   140001315:	push   rbx
   140001316:	sub    rsp,0x30
   14000131a:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   140001323:	mov    rbx,rdx
   140001326:	and    DWORD PTR [rsp+0x20],0x0
   14000132b:	mov    rax,QWORD PTR [rcx]
   14000132e:	mov    QWORD PTR [rdx],rax
   140001331:	test   rax,rax
   140001334:	je     0x14000133a
   140001336:	lock inc DWORD PTR [rax+0x10]
   14000133a:	mov    DWORD PTR [rsp+0x20],0x1
   140001342:	mov    rdx,r8
   140001345:	mov    rcx,rbx
   140001348:	call   0x140001260
   14000134d:	mov    rax,rbx
   140001350:	add    rsp,0x30
   140001354:	pop    rbx
   140001355:	ret    
   140001356:	int3   
   140001357:	int3   
   140001358:	int3   
   140001359:	int3   
   14000135a:	int3   
   14000135b:	int3   
   14000135c:	int3   
   14000135d:	int3   
   14000135e:	int3   
   14000135f:	int3   
   140001360:	mov    rax,rsp
   140001363:	mov    QWORD PTR [rax+0x8],rcx
   140001367:	push   rdi
   140001368:	sub    rsp,0x30
   14000136c:	mov    QWORD PTR [rax-0x10],0xfffffffffffffffe
   140001374:	mov    QWORD PTR [rax+0x10],rbx
   140001378:	mov    rbx,r8
   14000137b:	mov    rdi,rcx
   14000137e:	and    DWORD PTR [rax-0x18],0x0
   140001382:	lea    rdx,[rip+0xf2f7]        # 0x140010680
   140001389:	call   0x140001008
   14000138e:	mov    DWORD PTR [rsp+0x20],0x1
   140001396:	mov    rdx,rbx
   140001399:	mov    rcx,rdi
   14000139c:	call   0x140001260
   1400013a1:	mov    rax,rdi
   1400013a4:	mov    rbx,QWORD PTR [rsp+0x48]
   1400013a9:	add    rsp,0x30
   1400013ad:	pop    rdi
   1400013ae:	ret    
   1400013af:	int3   
   1400013b0:	int3   
   1400013b1:	int3   
   1400013b2:	int3   
   1400013b3:	int3   
   1400013b4:	int3   
   1400013b5:	int3   
   1400013b6:	int3   
   1400013b7:	int3   
   1400013b8:	mov    QWORD PTR [rsp+0x8],rbx
   1400013bd:	mov    QWORD PTR [rsp+0x10],rbp
   1400013c2:	mov    QWORD PTR [rsp+0x18],rsi
   1400013c7:	push   rdi
   1400013c8:	push   r14
   1400013ca:	push   r15
   1400013cc:	sub    rsp,0x20
   1400013d0:	and    QWORD PTR [rcx+0x8],0x0
   1400013d5:	mov    r14,rcx
   1400013d8:	mov    DWORD PTR [rcx+0x10],0x1
   1400013df:	mov    rbp,r8
   1400013e2:	mov    rcx,QWORD PTR [rdx]
   1400013e5:	mov    r15,rdx
   1400013e8:	test   rcx,rcx
   1400013eb:	je     0x1400013ff
   1400013ed:	mov    rcx,QWORD PTR [rcx]
   1400013f0:	test   rcx,rcx
   1400013f3:	je     0x1400013ff
   1400013f5:	call   QWORD PTR [rip+0xedad]        # 0x1400101a8
   1400013fb:	mov    ebx,eax
   1400013fd:	jmp    0x140001401
   1400013ff:	xor    ebx,ebx
   140001401:	mov    rax,QWORD PTR [rbp+0x0]
   140001405:	test   rax,rax
   140001408:	je     0x14000141c
   14000140a:	mov    rcx,QWORD PTR [rax]
   14000140d:	test   rcx,rcx
   140001410:	je     0x14000141c
   140001412:	call   QWORD PTR [rip+0xed90]        # 0x1400101a8
   140001418:	mov    esi,eax
   14000141a:	jmp    0x14000141e
   14000141c:	xor    esi,esi
   14000141e:	lea    edi,[rsi+rbx*1]
   140001421:	cmp    edi,ebx
   140001423:	jb     0x1400014c0
   140001429:	mov    eax,edi
   14000142b:	mov    ecx,0xffffffff
   140001430:	add    rax,rax
   140001433:	cmp    rax,rcx
   140001436:	ja     0x1400014c0
   14000143c:	mov    edx,eax
   14000143e:	xor    ecx,ecx
   140001440:	call   QWORD PTR [rip+0xed5a]        # 0x1400101a0
   140001446:	mov    QWORD PTR [r14],rax
   140001449:	mov    rcx,rax
   14000144c:	test   rax,rax
   14000144f:	jne    0x140001457
   140001451:	test   edi,edi
   140001453:	je     0x140001499
   140001455:	jmp    0x1400014b5
   140001457:	mov    rdx,QWORD PTR [r15]
   14000145a:	test   rdx,rdx
   14000145d:	je     0x140001462
   14000145f:	mov    rdx,QWORD PTR [rdx]
   140001462:	test   rdx,rdx
   140001465:	je     0x140001473
   140001467:	lea    r8d,[rbx+0x1]
   14000146b:	add    r8,r8
   14000146e:	call   0x14000ed46
   140001473:	mov    rdx,QWORD PTR [rbp+0x0]
   140001477:	test   rdx,rdx
   14000147a:	je     0x14000147f
   14000147c:	mov    rdx,QWORD PTR [rdx]
   14000147f:	test   rdx,rdx
   140001482:	je     0x140001499
   140001484:	mov    rax,QWORD PTR [r14]
   140001487:	lea    r8d,[rsi+0x1]
   14000148b:	mov    ecx,ebx
   14000148d:	add    r8,r8
   140001490:	lea    rcx,[rax+rcx*2]
   140001494:	call   0x14000ed46
   140001499:	mov    rbx,QWORD PTR [rsp+0x40]
   14000149e:	mov    rax,r14
   1400014a1:	mov    rbp,QWORD PTR [rsp+0x48]
   1400014a6:	mov    rsi,QWORD PTR [rsp+0x50]
   1400014ab:	add    rsp,0x20
   1400014af:	pop    r15
   1400014b1:	pop    r14
   1400014b3:	pop    rdi
   1400014b4:	ret    
   1400014b5:	mov    ecx,0x8007000e
   1400014ba:	call   0x140007fe0
   1400014bf:	int3   
   1400014c0:	mov    ecx,0x8007000e
   1400014c5:	call   0x140007fe0
   1400014ca:	int3   
   1400014cb:	int3   
   1400014cc:	int3   
   1400014cd:	int3   
   1400014ce:	int3   
   1400014cf:	int3   
   1400014d0:	int3   
   1400014d1:	int3   
   1400014d2:	int3   
   1400014d3:	int3   
   1400014d4:	sub    rsp,0x28
   1400014d8:	call   QWORD PTR [rip+0xecea]        # 0x1400101c8
   1400014de:	test   eax,eax
   1400014e0:	js     0x1400014e7
   1400014e2:	add    rsp,0x28
   1400014e6:	ret    
   1400014e7:	mov    ecx,eax
   1400014e9:	call   0x140007fe0
   1400014ee:	int3   
   1400014ef:	int3   
   1400014f0:	int3   
   1400014f1:	int3   
   1400014f2:	int3   
   1400014f3:	int3   
   1400014f4:	int3   
   1400014f5:	int3   
   1400014f6:	int3   
   1400014f7:	int3   
   1400014f8:	rex push rdi
   1400014fa:	sub    rsp,0x40
   1400014fe:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140001507:	mov    QWORD PTR [rsp+0x50],rbx
   14000150c:	mov    QWORD PTR [rsp+0x58],rsi
   140001511:	mov    rdi,rdx
   140001514:	mov    rbx,rcx
   140001517:	and    QWORD PTR [rcx],0x0
   14000151b:	mov    esi,0x8
   140001520:	cmp    WORD PTR [rdx],si
   140001523:	jne    0x140001530
   140001525:	mov    rdx,QWORD PTR [rdx+0x8]
   140001529:	call   0x140001194
   14000152e:	jmp    0x140001592
   140001530:	lea    rcx,[rsp+0x28]
   140001535:	call   QWORD PTR [rip+0xec7d]        # 0x1400101b8
   14000153b:	nop
   14000153c:	lea    rax,[rsp+0x28]
   140001541:	cmp    rax,rdi
   140001544:	jne    0x14000154d
   140001546:	cmp    si,WORD PTR [rsp+0x28]
   14000154b:	je     0x14000156d
   14000154d:	mov    r9d,esi
   140001550:	xor    r8d,r8d
   140001553:	mov    rdx,rdi
   140001556:	lea    rcx,[rsp+0x28]
   14000155b:	call   QWORD PTR [rip+0xec6f]        # 0x1400101d0
   140001561:	test   eax,eax
   140001563:	jns    0x14000156d
   140001565:	mov    ecx,eax
   140001567:	call   0x140007fe0
   14000156c:	int3   
   14000156d:	mov    rdx,QWORD PTR [rsp+0x30]
   140001572:	mov    rcx,rbx
   140001575:	call   0x140001194
   14000157a:	nop
   14000157b:	lea    rcx,[rsp+0x28]
   140001580:	call   QWORD PTR [rip+0xec42]        # 0x1400101c8
   140001586:	test   eax,eax
   140001588:	jns    0x140001592
   14000158a:	mov    ecx,eax
   14000158c:	call   0x140007fe0
   140001591:	int3   
   140001592:	mov    rax,rbx
   140001595:	mov    rbx,QWORD PTR [rsp+0x50]
   14000159a:	mov    rsi,QWORD PTR [rsp+0x58]
   14000159f:	add    rsp,0x40
   1400015a3:	pop    rdi
   1400015a4:	ret    
   1400015a5:	int3   
   1400015a6:	int3   
   1400015a7:	int3   
   1400015a8:	int3   
   1400015a9:	int3   
   1400015aa:	int3   
   1400015ab:	int3   
   1400015ac:	mov    r11,rsp
   1400015af:	push   rdi
   1400015b0:	push   r12
   1400015b2:	push   r13
   1400015b4:	push   r14
   1400015b6:	push   r15
   1400015b8:	sub    rsp,0x4f0
   1400015bf:	mov    QWORD PTR [r11-0x450],0xfffffffffffffffe
   1400015ca:	mov    QWORD PTR [r11+0x8],rbx
   1400015ce:	mov    QWORD PTR [r11+0x18],rsi
   1400015d2:	mov    rax,QWORD PTR [rip+0x13a2f]        # 0x140015008
   1400015d9:	xor    rax,rsp
   1400015dc:	mov    QWORD PTR [rsp+0x4e0],rax
   1400015e4:	mov    rdi,rdx
   1400015e7:	mov    ebx,ecx
   1400015e9:	xor    r13d,r13d
   1400015ec:	mov    DWORD PTR [r11-0x474],r13d
   1400015f3:	mov    DWORD PTR [r11-0x46c],r13d
   1400015fa:	mov    DWORD PTR [r11-0x470],r13d
   140001601:	mov    QWORD PTR [r11-0x480],r13
   140001608:	mov    QWORD PTR [r11-0x488],r13
   14000160f:	mov    DWORD PTR [r11-0x438],r13d
   140001616:	xor    edx,edx
   140001618:	mov    r8d,0x1f8
   14000161e:	lea    rcx,[r11-0x434]
   140001625:	call   0x14000ed52
   14000162a:	mov    DWORD PTR [rsp+0x2e0],r13d
   140001632:	xor    edx,edx
   140001634:	mov    r8d,0x1fa
   14000163a:	lea    rcx,[rsp+0x2e4]
   140001642:	call   0x14000ed52
   140001647:	lea    esi,[r13+0x1]
   14000164b:	mov    r12d,esi
   14000164e:	mov    DWORD PTR [rsp+0x88],esi
   140001655:	mov    DWORD PTR [rsp+0xa0],r13d
   14000165d:	mov    QWORD PTR [rsp+0x80],r13
   140001665:	mov    QWORD PTR [rsp+0xb8],r13
   14000166d:	mov    QWORD PTR [rsp+0x78],r13
   140001672:	mov    DWORD PTR [rsp+0xb0],r13d
   14000167a:	lea    r14,[rip+0xefab]        # 0x14001062c
   140001681:	mov    rdx,r14
   140001684:	lea    rcx,[rsp+0x60]
   140001689:	call   QWORD PTR [rip+0xed01]        # 0x140010390
   14000168f:	nop
   140001690:	mov    rdx,r14
   140001693:	lea    rcx,[rsp+0x68]
   140001698:	call   QWORD PTR [rip+0xecf2]        # 0x140010390
   14000169e:	nop
   14000169f:	mov    rdx,r14
   1400016a2:	lea    rcx,[rsp+0x70]
   1400016a7:	call   QWORD PTR [rip+0xece3]        # 0x140010390
   1400016ad:	nop
   1400016ae:	lea    r14,[rip+0xef7b]        # 0x140010630
   1400016b5:	mov    rdx,r14
   1400016b8:	mov    ecx,esi
   1400016ba:	call   QWORD PTR [rip+0xee28]        # 0x1400104e8
   1400016c0:	mov    rdx,r14
   1400016c3:	lea    ecx,[rsi+0x2]
   1400016c6:	call   QWORD PTR [rip+0xee1c]        # 0x1400104e8
   1400016cc:	mov    rdx,r14
   1400016cf:	lea    ecx,[rsi+0x3]
   1400016d2:	call   QWORD PTR [rip+0xee10]        # 0x1400104e8
   1400016d8:	mov    rdx,r14
   1400016db:	lea    ecx,[rsi+0x4]
   1400016de:	call   QWORD PTR [rip+0xee04]        # 0x1400104e8
   1400016e4:	call   QWORD PTR [rip+0xea76]        # 0x140010160
   1400016ea:	mov    r9d,eax
   1400016ed:	lea    r8,[rip+0xef4c]        # 0x140010640
   1400016f4:	lea    edx,[rsi+0x7]
   1400016f7:	lea    rcx,[rsp+0xd0]
   1400016ff:	call   QWORD PTR [rip+0xeddb]        # 0x1400104e0
   140001705:	lea    rdx,[rsp+0xd0]
   14000170d:	lea    r14d,[r13+0x2]
   140001711:	mov    ecx,r14d
   140001714:	call   QWORD PTR [rip+0xedce]        # 0x1400104e8
   14000171a:	lea    rax,[rsp+0xb0]
   140001722:	mov    QWORD PTR [rsp+0x50],rax
   140001727:	lea    rax,[rsp+0xa0]
   14000172f:	mov    QWORD PTR [rsp+0x48],rax
   140001734:	lea    rax,[rsp+0xa4]
   14000173c:	mov    QWORD PTR [rsp+0x40],rax
   140001741:	lea    rax,[rsp+0xa8]
   140001749:	mov    QWORD PTR [rsp+0x38],rax
   14000174e:	lea    rax,[rsp+0x2e0]
   140001756:	mov    QWORD PTR [rsp+0x30],rax
   14000175b:	lea    rax,[rsp+0xe0]
   140001763:	mov    QWORD PTR [rsp+0x28],rax
   140001768:	lea    rax,[rsp+0x98]
   140001770:	mov    QWORD PTR [rsp+0x20],rax
   140001775:	lea    r9,[rsp+0x90]
   14000177d:	lea    r8,[rsp+0xac]
   140001785:	mov    rdx,rdi
   140001788:	mov    ecx,ebx
   14000178a:	call   0x140004338
   14000178f:	test   eax,eax
   140001791:	jne    0x1400017b0
   140001793:	call   0x1400084e8
   140001798:	mov    rbx,rax
   14000179b:	mov    ecx,r14d
   14000179e:	call   0x14000ebd8
   1400017a3:	mov    rcx,rax
   1400017a6:	mov    rdx,rbx
   1400017a9:	call   0x14000999c
   1400017ae:	jmp    0x140001807
   1400017b0:	cmp    DWORD PTR [rsp+0xac],esi
   1400017b7:	jne    0x1400017e9
   1400017b9:	mov    edi,0x1f5
   1400017be:	mov    ecx,edi
   1400017c0:	call   0x140008af0
   1400017c5:	mov    rbx,rax
   1400017c8:	mov    ecx,esi
   1400017ca:	call   0x14000ebd8
   1400017cf:	mov    rcx,rax
   1400017d2:	mov    rdx,rbx
   1400017d5:	call   0x14000999c
   1400017da:	add    edi,esi
   1400017dc:	cmp    edi,0x20f
   1400017e2:	jbe    0x1400017be
   1400017e4:	mov    esi,r13d
   1400017e7:	jmp    0x140001807
   1400017e9:	lea    rcx,[rsp+0x80]
   1400017f1:	call   0x140005f60
   1400017f6:	test   eax,eax
   1400017f8:	jne    0x140001851
   1400017fa:	mov    rcx,QWORD PTR [rsp+0x90]
   140001802:	call   0x14000ae94
   140001807:	call   0x140008948
   14000180c:	lea    rcx,[rsp+0x98]
   140001814:	call   0x14000a31c
   140001819:	lea    rcx,[rsp+0x90]
   140001821:	call   0x14000a31c
   140001826:	nop
   140001827:	lea    rcx,[rsp+0x70]
   14000182c:	call   QWORD PTR [rip+0xeb86]        # 0x1400103b8
   140001832:	nop
   140001833:	lea    rcx,[rsp+0x68]
   140001838:	call   QWORD PTR [rip+0xeb7a]        # 0x1400103b8
   14000183e:	nop
   14000183f:	lea    rcx,[rsp+0x60]
   140001844:	call   QWORD PTR [rip+0xeb6e]        # 0x1400103b8
   14000184a:	mov    eax,esi
   14000184c:	jmp    0x140001c98
   140001851:	mov    rdx,QWORD PTR [rsp+0x98]
   140001859:	lea    rcx,[rsp+0x60]
   14000185e:	call   QWORD PTR [rip+0xeb74]        # 0x1400103d8
   140001864:	mov    rdx,QWORD PTR [rsp+0x90]
   14000186c:	lea    rcx,[rsp+0x70]
   140001871:	call   QWORD PTR [rip+0xeb61]        # 0x1400103d8
   140001877:	lea    rdx,[rsp+0xe0]
   14000187f:	lea    rcx,[rsp+0x68]
   140001884:	call   QWORD PTR [rip+0xeb4e]        # 0x1400103d8
   14000188a:	lea    rax,[rsp+0x88]
   140001892:	mov    QWORD PTR [rsp+0x40],rax
   140001897:	mov    eax,DWORD PTR [rsp+0xa4]
   14000189e:	mov    DWORD PTR [rsp+0x30],eax
   1400018a2:	lea    rax,[rsp+0x78]
   1400018a7:	mov    QWORD PTR [rsp+0x28],rax
   1400018ac:	lea    rax,[rsp+0x68]
   1400018b1:	mov    QWORD PTR [rsp+0x20],rax
   1400018b6:	lea    r9,[rsp+0x60]
   1400018bb:	lea    r8,[rsp+0x70]
   1400018c0:	lea    rdx,[rsp+0xb8]
   1400018c8:	mov    rcx,QWORD PTR [rsp+0x80]
   1400018d0:	call   0x14000737c
   1400018d5:	test   eax,eax
   1400018d7:	jne    0x14000196f
   1400018dd:	mov    rdi,QWORD PTR [rsp+0x80]
   1400018e5:	test   rdi,rdi
   1400018e8:	je     0x140001907
   1400018ea:	mov    rax,QWORD PTR [rdi]
   1400018ed:	mov    rbx,QWORD PTR [rax+0x10]
   1400018f1:	mov    rcx,rbx
   1400018f4:	call   QWORD PTR [rip+0xec8e]        # 0x140010588
   1400018fa:	mov    rcx,rdi
   1400018fd:	call   rbx
   1400018ff:	mov    QWORD PTR [rsp+0x80],r13
   140001907:	cmp    QWORD PTR [rsp+0x78],r13
   14000190c:	je     0x14000191a
   14000190e:	lea    rcx,[rsp+0x78]
   140001913:	call   0x140007b70
   140001918:	jmp    0x14000191f
   14000191a:	mov    QWORD PTR [rsp+0x78],r13
   14000191f:	lea    rcx,[rsp+0x98]
   140001927:	call   0x14000a31c
   14000192c:	lea    rcx,[rsp+0x90]
   140001934:	call   0x14000a31c
   140001939:	call   QWORD PTR [rip+0xe981]        # 0x1400102c0
   14000193f:	call   0x140008948
   140001944:	nop
   140001945:	lea    rcx,[rsp+0x70]
   14000194a:	call   QWORD PTR [rip+0xea68]        # 0x1400103b8
   140001950:	nop
   140001951:	lea    rcx,[rsp+0x68]
   140001956:	call   QWORD PTR [rip+0xea5c]        # 0x1400103b8
   14000195c:	nop
   14000195d:	lea    rcx,[rsp+0x60]
   140001962:	call   QWORD PTR [rip+0xea50]        # 0x1400103b8
   140001968:	mov    eax,esi
   14000196a:	jmp    0x140001c98
   14000196f:	lea    rcx,[rsp+0x98]
   140001977:	call   0x14000a31c
   14000197c:	lea    rcx,[rsp+0x90]
   140001984:	call   0x14000a31c
   140001989:	lea    rcx,[rsp+0x60]
   14000198e:	call   QWORD PTR [rip+0xea2c]        # 0x1400103c0
   140001994:	mov    edx,DWORD PTR [rax+0x4]
   140001997:	lea    rcx,[rsp+0x60]
   14000199c:	call   QWORD PTR [rip+0xea26]        # 0x1400103c8
   1400019a2:	mov    r15,rax
   1400019a5:	mov    QWORD PTR [rsp+0x98],rax
   1400019ad:	lea    rcx,[rsp+0x68]
   1400019b2:	call   QWORD PTR [rip+0xea08]        # 0x1400103c0
   1400019b8:	mov    edx,DWORD PTR [rax+0x4]
   1400019bb:	lea    rcx,[rsp+0x68]
   1400019c0:	call   QWORD PTR [rip+0xea02]        # 0x1400103c8
   1400019c6:	mov    QWORD PTR [rsp+0xc0],rax
   1400019ce:	lea    rcx,[rsp+0x68]
   1400019d3:	call   QWORD PTR [rip+0xe9e7]        # 0x1400103c0
   1400019d9:	mov    edx,DWORD PTR [rax+0x4]
   1400019dc:	lea    rcx,[rsp+0x70]
   1400019e1:	call   QWORD PTR [rip+0xe9e1]        # 0x1400103c8
   1400019e7:	mov    r14,rax
   1400019ea:	mov    QWORD PTR [rsp+0x90],rax
   1400019f2:	mov    rcx,rax
   1400019f5:	call   0x14000a660
   1400019fa:	cmp    eax,esi
   1400019fc:	jne    0x140001a32
   1400019fe:	test   r15,r15
   140001a01:	je     0x140001a32
   140001a03:	mov    rcx,r15
   140001a06:	call   QWORD PTR [rip+0xe73c]        # 0x140010148
   140001a0c:	test   eax,eax
   140001a0e:	je     0x140001a32
   140001a10:	mov    ecx,0x97
   140001a15:	call   0x140008af0
   140001a1a:	mov    rbx,rax
   140001a1d:	mov    ecx,0x2
   140001a22:	call   0x14000ebd8
   140001a27:	mov    rcx,rax
   140001a2a:	mov    rdx,rbx
   140001a2d:	call   0x14000999c
   140001a32:	cmp    DWORD PTR [rsp+0x88],r13d
   140001a3a:	jne    0x140001b23
   140001a40:	mov    rbx,r13
   140001a43:	mov    rdi,QWORD PTR [rsp+0x78]
   140001a48:	test   rdi,rdi
   140001a4b:	je     0x140001a65
   140001a4d:	mov    r13,QWORD PTR [rdi+0x20]
   140001a51:	lea    rcx,[rsp+0x60]
   140001a56:	call   QWORD PTR [rip+0xe964]        # 0x1400103c0
   140001a5c:	cmp    DWORD PTR [rax+0x4],ebx
   140001a5f:	cmovne rbx,QWORD PTR [rsp+0x60]
   140001a65:	mov    r8,r13
   140001a68:	mov    rdx,rbx
   140001a6b:	mov    rcx,QWORD PTR [rsp+0x70]
   140001a70:	call   0x14000acb8
   140001a75:	mov    ebx,eax
   140001a77:	xor    r13d,r13d
   140001a7a:	test   eax,eax
   140001a7c:	je     0x140001b1e
   140001a82:	call   QWORD PTR [rip+0xe6c8]        # 0x140010150
   140001a88:	cmp    eax,0x4c3
   140001a8d:	jne    0x140001aaa
   140001a8f:	lea    ecx,[r13+0x2]
   140001a93:	call   0x14000ebd8
   140001a98:	mov    rcx,rax
   140001a9b:	mov    edx,0x20004
   140001aa0:	call   0x14000888c
   140001aa5:	jmp    0x140001b4d
   140001aaa:	cmp    ebx,0x4b8
   140001ab0:	jne    0x140001b0f
   140001ab2:	mov    ecx,esi
   140001ab4:	call   0x14000ebd8
   140001ab9:	mov    edx,0x20001
   140001abe:	mov    rcx,rax
   140001ac1:	call   0x14000888c
   140001ac6:	test   rdi,rdi
   140001ac9:	je     0x140001ad5
   140001acb:	lea    rcx,[rsp+0x78]
   140001ad0:	call   0x140007b70
   140001ad5:	or     ebx,0xffffffff
   140001ad8:	mov    edx,ebx
   140001ada:	lea    rcx,[rsp+0x70]
   140001adf:	call   QWORD PTR [rip+0xe8cb]        # 0x1400103b0
   140001ae5:	mov    edx,ebx
   140001ae7:	lea    rcx,[rsp+0x60]
   140001aec:	call   QWORD PTR [rip+0xe8be]        # 0x1400103b0
   140001af2:	mov    edx,ebx
   140001af4:	lea    rcx,[rsp+0x68]
   140001af9:	call   QWORD PTR [rip+0xe8b1]        # 0x1400103b0
   140001aff:	call   QWORD PTR [rip+0xe7bb]        # 0x1400102c0
   140001b05:	call   0x140008948
   140001b0a:	jmp    0x140001827
   140001b0f:	mov    ecx,ebx
   140001b11:	call   QWORD PTR [rip+0xe641]        # 0x140010158
   140001b17:	call   0x1400086e0
   140001b1c:	jmp    0x140001ab2
   140001b1e:	mov    r12d,r13d
   140001b21:	jmp    0x140001b4d
   140001b23:	test   r14,r14
   140001b26:	jne    0x140001b2d
   140001b28:	mov    eax,r13d
   140001b2b:	jmp    0x140001b36
   140001b2d:	mov    rcx,r14
   140001b30:	call   QWORD PTR [rip+0xe612]        # 0x140010148
   140001b36:	mov    r8d,eax
   140001b39:	lea    rdx,[rip+0xeae8]        # 0x140010628
   140001b40:	mov    rcx,r14
   140001b43:	call   0x140009774
   140001b48:	mov    rdi,QWORD PTR [rsp+0x78]
   140001b4d:	mov    eax,DWORD PTR [rsp+0x88]
   140001b54:	mov    DWORD PTR [rsp+0x50],eax
   140001b58:	mov    eax,DWORD PTR [rsp+0xb0]
   140001b5f:	mov    DWORD PTR [rsp+0x48],eax
   140001b63:	mov    rax,QWORD PTR [rsp+0xb8]
   140001b6b:	mov    QWORD PTR [rsp+0x40],rax
   140001b70:	mov    QWORD PTR [rsp+0x38],rdi
   140001b75:	mov    rax,QWORD PTR [rsp+0x80]
   140001b7d:	mov    QWORD PTR [rsp+0x30],rax
   140001b82:	mov    eax,DWORD PTR [rsp+0xa0]
   140001b89:	mov    DWORD PTR [rsp+0x28],eax
   140001b8d:	mov    eax,DWORD PTR [rsp+0xa8]
   140001b94:	mov    DWORD PTR [rsp+0x20],eax
   140001b98:	lea    r9,[rsp+0x2e0]
   140001ba0:	mov    r8,QWORD PTR [rsp+0xc0]
   140001ba8:	mov    rdx,r15
   140001bab:	mov    rcx,r14
   140001bae:	call   0x140001ccc
   140001bb3:	cmp    eax,esi
   140001bb5:	jne    0x140001bcd
   140001bb7:	test   r12d,r12d
   140001bba:	jne    0x140001ac6
   140001bc0:	mov    rcx,r14
   140001bc3:	call   0x14000ae94
   140001bc8:	jmp    0x140001ac6
   140001bcd:	test   r12d,r12d
   140001bd0:	jne    0x140001bda
   140001bd2:	mov    rcx,r14
   140001bd5:	call   0x14000ae94
   140001bda:	or     ebx,0xffffffff
   140001bdd:	mov    edx,ebx
   140001bdf:	lea    rcx,[rsp+0x70]
   140001be4:	call   QWORD PTR [rip+0xe7c6]        # 0x1400103b0
   140001bea:	mov    edx,ebx
   140001bec:	lea    rcx,[rsp+0x60]
   140001bf1:	call   QWORD PTR [rip+0xe7b9]        # 0x1400103b0
   140001bf7:	mov    edx,ebx
   140001bf9:	lea    rcx,[rsp+0x68]
   140001bfe:	call   QWORD PTR [rip+0xe7ac]        # 0x1400103b0
   140001c04:	test   rdi,rdi
   140001c07:	je     0x140001c13
   140001c09:	lea    rcx,[rsp+0x78]
   140001c0e:	call   0x140007b70
   140001c13:	mov    rdi,QWORD PTR [rsp+0x80]
   140001c1b:	test   rdi,rdi
   140001c1e:	je     0x140001c3d
   140001c20:	mov    rax,QWORD PTR [rdi]
   140001c23:	mov    rbx,QWORD PTR [rax+0x10]
   140001c27:	mov    rcx,rbx
   140001c2a:	call   QWORD PTR [rip+0xe958]        # 0x140010588
   140001c30:	mov    rcx,rdi
   140001c33:	call   rbx
   140001c35:	mov    QWORD PTR [rsp+0x80],r13
   140001c3d:	call   QWORD PTR [rip+0xe67d]        # 0x1400102c0
   140001c43:	call   0x140008948
   140001c48:	nop
   140001c49:	lea    rcx,[rsp+0x70]
   140001c4e:	call   QWORD PTR [rip+0xe764]        # 0x1400103b8
   140001c54:	nop
   140001c55:	lea    rcx,[rsp+0x68]
   140001c5a:	call   QWORD PTR [rip+0xe758]        # 0x1400103b8
   140001c60:	nop
   140001c61:	lea    rcx,[rsp+0x60]
   140001c66:	call   QWORD PTR [rip+0xe74c]        # 0x1400103b8
   140001c6c:	xor    eax,eax
   140001c6e:	jmp    0x140001c98
   140001c70:	lea    rcx,[rsp+0x70]
   140001c75:	call   QWORD PTR [rip+0xe73d]        # 0x1400103b8
   140001c7b:	nop
   140001c7c:	lea    rcx,[rsp+0x68]
   140001c81:	call   QWORD PTR [rip+0xe731]        # 0x1400103b8
   140001c87:	nop
   140001c88:	lea    rcx,[rsp+0x60]
   140001c8d:	call   QWORD PTR [rip+0xe725]        # 0x1400103b8
   140001c93:	mov    eax,0x1
   140001c98:	mov    rcx,QWORD PTR [rsp+0x4e0]
   140001ca0:	xor    rcx,rsp
   140001ca3:	call   0x14000e560
   140001ca8:	lea    r11,[rsp+0x4f0]
   140001cb0:	mov    rbx,QWORD PTR [r11+0x30]
   140001cb4:	mov    rsi,QWORD PTR [r11+0x40]
   140001cb8:	mov    rsp,r11
   140001cbb:	pop    r15
   140001cbd:	pop    r14
   140001cbf:	pop    r13
   140001cc1:	pop    r12
   140001cc3:	pop    rdi
   140001cc4:	ret    
   140001cc5:	int3   
   140001cc6:	int3   
   140001cc7:	int3   
   140001cc8:	int3   
   140001cc9:	int3   
   140001cca:	int3   
   140001ccb:	int3   
   140001ccc:	mov    rax,rsp
   140001ccf:	mov    QWORD PTR [rax+0x20],r9
   140001cd3:	mov    QWORD PTR [rax+0x8],rcx
   140001cd7:	push   rdi
   140001cd8:	push   r12
   140001cda:	push   r13
   140001cdc:	push   r14
   140001cde:	push   r15
   140001ce0:	sub    rsp,0xc0
   140001ce7:	mov    QWORD PTR [rax-0x38],0xfffffffffffffffe
   140001cef:	mov    QWORD PTR [rax+0x10],rbx
   140001cf3:	mov    QWORD PTR [rax+0x18],rsi
   140001cf7:	mov    rsi,r8
   140001cfa:	mov    r15,rdx
   140001cfd:	mov    r14,rcx
   140001d00:	xor    r12d,r12d
   140001d03:	mov    ebx,r12d
   140001d06:	mov    QWORD PTR [rax-0x70],rbx
   140001d0a:	mov    edi,r12d
   140001d0d:	mov    QWORD PTR [rsp+0x60],r12
   140001d12:	mov    QWORD PTR [rax-0x78],r12
   140001d16:	mov    QWORD PTR [rax-0x68],r12
   140001d1a:	mov    QWORD PTR [rsp+0x50],r12
   140001d1f:	mov    QWORD PTR [rsp+0x58],r12
   140001d24:	lea    rdx,[rip+0xe93d]        # 0x140010668
   140001d2b:	lea    rcx,[rax-0x78]
   140001d2f:	call   0x140001194
   140001d34:	mov    rdx,r14
   140001d37:	lea    rcx,[rsp+0x80]
   140001d3f:	call   0x140001194
   140001d44:	nop
   140001d45:	mov    rcx,r14
   140001d48:	call   0x14000a660
   140001d4d:	test   eax,eax
   140001d4f:	jne    0x140001e8a
   140001d55:	lea    rdx,[rip+0xe90c]        # 0x140010668
   140001d5c:	lea    rcx,[rsp+0x90]
   140001d64:	call   0x140001008
   140001d69:	nop
   140001d6a:	lea    rdx,[rip+0xe8a7]        # 0x140010618
   140001d71:	lea    rcx,[rsp+0xa0]
   140001d79:	call   0x140001008
   140001d7e:	nop
   140001d7f:	mov    rdx,r14
   140001d82:	lea    rcx,[rsp+0x68]
   140001d87:	call   0x140001008
   140001d8c:	nop
   140001d8d:	mov    r8,rax
   140001d90:	lea    rcx,[rsp+0x88]
   140001d98:	call   0x140001360
   140001d9d:	nop
   140001d9e:	lea    r8,[rsp+0xa0]
   140001da6:	lea    rdx,[rsp+0xa8]
   140001dae:	mov    rcx,rax
   140001db1:	call   0x140001310
   140001db6:	nop
   140001db7:	lea    r8,[rsp+0x90]
   140001dbf:	lea    rdx,[rsp+0x98]
   140001dc7:	mov    rcx,rax
   140001dca:	call   0x140001310
   140001dcf:	nop
   140001dd0:	mov    rdx,rax
   140001dd3:	lea    rcx,[rsp+0x70]
   140001dd8:	call   0x140001108
   140001ddd:	nop
   140001dde:	lea    rcx,[rsp+0x98]
   140001de6:	call   0x14000109c
   140001deb:	nop
   140001dec:	lea    rcx,[rsp+0xa8]
   140001df4:	call   0x14000109c
   140001df9:	nop
   140001dfa:	lea    rcx,[rsp+0x88]
   140001e02:	call   0x14000109c
   140001e07:	nop
   140001e08:	lea    rcx,[rsp+0x68]
   140001e0d:	call   0x14000109c
   140001e12:	nop
   140001e13:	lea    rcx,[rsp+0xa0]
   140001e1b:	call   0x14000109c
   140001e20:	nop
   140001e21:	lea    rcx,[rsp+0x90]
   140001e29:	call   0x14000109c
   140001e2e:	test   r15,r15
   140001e31:	jne    0x140001e35
   140001e33:	jmp    0x140001e83
   140001e35:	mov    rcx,r15
   140001e38:	call   QWORD PTR [rip+0xe30a]        # 0x140010148
   140001e3e:	test   eax,eax
   140001e40:	je     0x140001e83
   140001e42:	mov    rdx,r15
   140001e45:	lea    rcx,[rsp+0x78]
   140001e4a:	call   0x140001194
   140001e4f:	test   rsi,rsi
   140001e52:	jne    0x140001e56
   140001e54:	jmp    0x140001e63
   140001e56:	mov    rcx,rsi
   140001e59:	call   QWORD PTR [rip+0xe2e9]        # 0x140010148
   140001e5f:	test   eax,eax
   140001e61:	jne    0x140001e6c
   140001e63:	lea    rdx,[rip+0xe7be]        # 0x140010628
   140001e6a:	jmp    0x140001e6f
   140001e6c:	mov    rdx,rsi
   140001e6f:	lea    rcx,[rsp+0x60]
   140001e74:	call   0x140001194
   140001e79:	mov    rdi,QWORD PTR [rsp+0x60]
   140001e7e:	mov    rbx,QWORD PTR [rsp+0x78]
   140001e83:	jmp    0x140001e8a
   140001e85:	jmp    0x140002530
   140001e8a:	mov    rdx,QWORD PTR [rsp+0x130]
   140001e92:	call   0x140005718
   140001e97:	mov    DWORD PTR [rsp+0xa0],eax
   140001e9e:	mov    r14d,0x1
   140001ea4:	cmp    eax,r14d
   140001ea7:	jne    0x140001f01
   140001ea9:	lea    ecx,[r14+0x6b]
   140001ead:	call   0x140008af0
   140001eb2:	mov    rbx,rax
   140001eb5:	mov    ecx,0x2
   140001eba:	call   0x14000ebd8
   140001ebf:	mov    rcx,rax
   140001ec2:	mov    rdx,rbx
   140001ec5:	call   0x14000999c
   140001eca:	nop
   140001ecb:	lea    rcx,[rsp+0x80]
   140001ed3:	call   0x14000109c
   140001ed8:	nop
   140001ed9:	lea    rcx,[rsp+0x70]
   140001ede:	call   0x14000109c
   140001ee3:	nop
   140001ee4:	lea    rcx,[rsp+0x60]
   140001ee9:	call   0x14000109c
   140001eee:	nop
   140001eef:	lea    rcx,[rsp+0x78]
   140001ef4:	call   0x14000109c
   140001ef9:	mov    eax,r14d
   140001efc:	jmp    0x140002563
   140001f01:	test   rdi,rdi
   140001f04:	je     0x140001f13
   140001f06:	mov    rax,QWORD PTR [rdi]
   140001f09:	mov    QWORD PTR [rsp+0x90],rax
   140001f11:	jmp    0x140001f1b
   140001f13:	mov    QWORD PTR [rsp+0x90],r12
   140001f1b:	test   rbx,rbx
   140001f1e:	je     0x140001f25
   140001f20:	mov    r13,QWORD PTR [rbx]
   140001f23:	jmp    0x140001f28
   140001f25:	mov    r13,r12
   140001f28:	mov    rdi,QWORD PTR [rsp+0x70]
   140001f2d:	test   rdi,rdi
   140001f30:	je     0x140001f3f
   140001f32:	mov    rax,QWORD PTR [rdi]
   140001f35:	mov    QWORD PTR [rsp+0x98],rax
   140001f3d:	jmp    0x140001f47
   140001f3f:	mov    QWORD PTR [rsp+0x98],r12
   140001f47:	mov    r12,QWORD PTR [rsp+0x120]
   140001f4f:	mov    rax,QWORD PTR [r12]
   140001f53:	mov    rsi,QWORD PTR [rax+0x18]
   140001f57:	mov    rcx,rsi
   140001f5a:	call   QWORD PTR [rip+0xe628]        # 0x140010588
   140001f60:	lea    rax,[rsp+0x50]
   140001f65:	mov    QWORD PTR [rsp+0x40],rax
   140001f6a:	xor    eax,eax
   140001f6c:	mov    QWORD PTR [rsp+0x38],rax
   140001f71:	mov    QWORD PTR [rsp+0x30],rax
   140001f76:	mov    DWORD PTR [rsp+0x28],eax
   140001f7a:	mov    QWORD PTR [rsp+0x20],rax
   140001f7f:	mov    r9,QWORD PTR [rsp+0x90]
   140001f87:	mov    r8,r13
   140001f8a:	mov    rdx,QWORD PTR [rsp+0x98]
   140001f92:	mov    rcx,r12
   140001f95:	call   rsi
   140001f97:	mov    esi,eax
   140001f99:	test   r15,r15
   140001f9c:	je     0x14000200f
   140001f9e:	mov    rcx,r15
   140001fa1:	call   QWORD PTR [rip+0xe1a1]        # 0x140010148
   140001fa7:	xor    r15d,r15d
   140001faa:	test   eax,eax
   140001fac:	je     0x14000200f
   140001fae:	cmp    esi,0x80070005
   140001fb4:	jne    0x14000200f
   140001fb6:	test   rbx,rbx
   140001fb9:	je     0x140001fc0
   140001fbb:	mov    rsi,QWORD PTR [rbx]
   140001fbe:	jmp    0x140001fc3
   140001fc0:	mov    rsi,r15
   140001fc3:	test   rdi,rdi
   140001fc6:	je     0x140001fcd
   140001fc8:	mov    rdi,QWORD PTR [rdi]
   140001fcb:	jmp    0x140001fd0
   140001fcd:	mov    rdi,r15
   140001fd0:	mov    rax,QWORD PTR [r12]
   140001fd4:	mov    rbx,QWORD PTR [rax+0x18]
   140001fd8:	mov    rcx,rbx
   140001fdb:	call   QWORD PTR [rip+0xe5a7]        # 0x140010588
   140001fe1:	lea    rax,[rsp+0x50]
   140001fe6:	mov    QWORD PTR [rsp+0x40],rax
   140001feb:	mov    QWORD PTR [rsp+0x38],r15
   140001ff0:	mov    QWORD PTR [rsp+0x30],r15
   140001ff5:	mov    DWORD PTR [rsp+0x28],r15d
   140001ffa:	mov    QWORD PTR [rsp+0x20],r15
   140001fff:	xor    r9d,r9d
   140002002:	mov    r8,rsi
   140002005:	mov    rdx,rdi
   140002008:	mov    rcx,r12
   14000200b:	call   rbx
   14000200d:	mov    esi,eax
   14000200f:	test   esi,esi
   140002011:	jne    0x140002526
   140002017:	mov    esi,DWORD PTR [rsp+0x140]
   14000201e:	mov    eax,esi
   140002020:	sub    eax,r14d
   140002023:	neg    eax
   140002025:	sbb    edx,edx
   140002027:	add    edx,0xa
   14000202a:	mov    rcx,QWORD PTR [rsp+0x50]
   14000202f:	test   rcx,rcx
   140002032:	jne    0x14000203b
   140002034:	mov    eax,0x80041008
   140002039:	jmp    0x140002051
   14000203b:	mov    r13,QWORD PTR [rsp+0x128]
   140002043:	mov    QWORD PTR [rsp+0x30],r13
   140002048:	call   0x1400077ec
   14000204d:	test   eax,eax
   14000204f:	jns    0x14000209a
   140002051:	mov    ecx,eax
   140002053:	call   0x140007e18
   140002058:	mov    ecx,r14d
   14000205b:	call   0x14000ebd8
   140002060:	mov    rcx,rax
   140002063:	mov    edx,0x20001
   140002068:	call   0x14000888c
   14000206d:	mov    rdi,QWORD PTR [rsp+0x50]
   140002072:	test   rdi,rdi
   140002075:	je     0x140001ecb
   14000207b:	mov    rax,QWORD PTR [rdi]
   14000207e:	mov    rbx,QWORD PTR [rax+0x10]
   140002082:	mov    rcx,rbx
   140002085:	call   QWORD PTR [rip+0xe4fd]        # 0x140010588
   14000208b:	mov    rcx,rdi
   14000208e:	call   rbx
   140002090:	mov    QWORD PTR [rsp+0x50],r15
   140002095:	jmp    0x140001ecb
   14000209a:	mov    r12d,DWORD PTR [rsp+0x138]
   1400020a2:	test   r12d,r12d
   1400020a5:	jne    0x140002107
   1400020a7:	lea    rdx,[rip+0xe5da]        # 0x140010688
   1400020ae:	lea    rcx,[rsp+0x68]
   1400020b3:	call   0x140001008
   1400020b8:	nop
   1400020b9:	mov    rcx,QWORD PTR [rax]
   1400020bc:	test   rcx,rcx
   1400020bf:	je     0x1400020c4
   1400020c1:	mov    r15,QWORD PTR [rcx]
   1400020c4:	mov    rdi,QWORD PTR [rsp+0x50]
   1400020c9:	mov    rax,QWORD PTR [rdi]
   1400020cc:	mov    rbx,QWORD PTR [rax+0x90]
   1400020d3:	mov    rcx,rbx
   1400020d6:	call   QWORD PTR [rip+0xe4ac]        # 0x140010588
   1400020dc:	lea    rax,[rsp+0x58]
   1400020e1:	mov    QWORD PTR [rsp+0x20],rax
   1400020e6:	xor    r9d,r9d
   1400020e9:	lea    r8d,[r9+0x30]
   1400020ed:	mov    rdx,r15
   1400020f0:	mov    rcx,rdi
   1400020f3:	call   rbx
   1400020f5:	mov    r15d,eax
   1400020f8:	lea    rcx,[rsp+0x68]
   1400020fd:	call   0x14000109c
   140002102:	jmp    0x140002216
   140002107:	lea    r8,[rip+0xe5a2]        # 0x1400106b0
   14000210e:	xor    edx,edx
   140002110:	xor    ecx,ecx
   140002112:	call   QWORD PTR [rip+0xdf88]        # 0x1400100a0
   140002118:	test   rax,rax
   14000211b:	je     0x140002176
   14000211d:	call   QWORD PTR [rip+0xe02d]        # 0x140010150
   140002123:	cmp    eax,0xb7
   140002128:	jne    0x140002176
   14000212a:	mov    ecx,0x1aa
   14000212f:	call   0x140008af0
   140002134:	mov    rbx,rax
   140002137:	mov    ecx,r14d
   14000213a:	call   0x14000ebd8
   14000213f:	mov    rcx,rax
   140002142:	mov    rdx,rbx
   140002145:	call   0x14000999c
   14000214a:	mov    rdi,QWORD PTR [rsp+0x50]
   14000214f:	test   rdi,rdi
   140002152:	je     0x14000216e
   140002154:	mov    rax,QWORD PTR [rdi]
   140002157:	mov    rbx,QWORD PTR [rax+0x10]
   14000215b:	mov    rcx,rbx
   14000215e:	call   QWORD PTR [rip+0xe424]        # 0x140010588
   140002164:	mov    rcx,rdi
   140002167:	call   rbx
   140002169:	mov    QWORD PTR [rsp+0x50],r15
   14000216e:	mov    r14d,r15d
   140002171:	jmp    0x140001ecb
   140002176:	lea    rdx,[rip+0xe573]        # 0x1400106f0
   14000217d:	lea    rcx,[rsp+0x88]
   140002185:	call   0x140001008
   14000218a:	mov    rbx,rax
   14000218d:	lea    rdx,[rip+0xe5dc]        # 0x140010770
   140002194:	lea    rcx,[rsp+0x68]
   140002199:	call   0x140001008
   14000219e:	nop
   14000219f:	mov    rcx,QWORD PTR [rbx]
   1400021a2:	test   rcx,rcx
   1400021a5:	je     0x1400021ac
   1400021a7:	mov    r13,QWORD PTR [rcx]
   1400021aa:	jmp    0x1400021af
   1400021ac:	mov    r13,r15
   1400021af:	mov    rax,QWORD PTR [rax]
   1400021b2:	test   rax,rax
   1400021b5:	je     0x1400021ba
   1400021b7:	mov    r15,QWORD PTR [rax]
   1400021ba:	mov    rdi,QWORD PTR [rsp+0x50]
   1400021bf:	mov    rax,QWORD PTR [rdi]
   1400021c2:	mov    rbx,QWORD PTR [rax+0xa0]
   1400021c9:	mov    rcx,rbx
   1400021cc:	call   QWORD PTR [rip+0xe3b6]        # 0x140010588
   1400021d2:	lea    rax,[rsp+0x58]
   1400021d7:	mov    QWORD PTR [rsp+0x28],rax
   1400021dc:	and    QWORD PTR [rsp+0x20],0x0
   1400021e2:	mov    r9d,0x30
   1400021e8:	mov    r8,r13
   1400021eb:	mov    rdx,r15
   1400021ee:	mov    rcx,rdi
   1400021f1:	call   rbx
   1400021f3:	mov    r15d,eax
   1400021f6:	lea    rcx,[rsp+0x68]
   1400021fb:	call   0x14000109c
   140002200:	nop
   140002201:	lea    rcx,[rsp+0x88]
   140002209:	call   0x14000109c
   14000220e:	mov    r13,QWORD PTR [rsp+0x128]
   140002216:	test   r15d,r15d
   140002219:	js     0x1400024d6
   14000221f:	sub    esi,r14d
   140002222:	neg    esi
   140002224:	sbb    edx,edx
   140002226:	add    edx,0xa
   140002229:	mov    rcx,QWORD PTR [rsp+0x58]
   14000222e:	xor    esi,esi
   140002230:	test   rcx,rcx
   140002233:	jne    0x14000223c
   140002235:	mov    eax,0x80041008
   14000223a:	jmp    0x14000224a
   14000223c:	mov    QWORD PTR [rsp+0x30],r13
   140002241:	call   0x1400077ec
   140002246:	test   eax,eax
   140002248:	jns    0x140002293
   14000224a:	mov    ecx,eax
   14000224c:	call   0x140007e18
   140002251:	mov    ecx,r14d
   140002254:	call   0x14000ebd8
   140002259:	mov    rcx,rax
   14000225c:	mov    edx,0x20001
   140002261:	call   0x14000888c
   140002266:	mov    rdi,QWORD PTR [rsp+0x58]
   14000226b:	test   rdi,rdi
   14000226e:	je     0x140001ecb
   140002274:	mov    rax,QWORD PTR [rdi]
   140002277:	mov    rbx,QWORD PTR [rax+0x10]
   14000227b:	mov    rcx,rbx
   14000227e:	call   QWORD PTR [rip+0xe304]        # 0x140010588
   140002284:	mov    rcx,rdi
   140002287:	call   rbx
   140002289:	mov    QWORD PTR [rsp+0x58],rsi
   14000228e:	jmp    0x140001ecb
   140002293:	lea    rax,[rsp+0x68]
   140002298:	mov    rdx,QWORD PTR [rsp+0xf0]
   1400022a0:	lea    rcx,[rsp+0x68]
   1400022a5:	mov    QWORD PTR [rsp+0x88],rax
   1400022ad:	call   QWORD PTR [rip+0xe0dd]        # 0x140010390
   1400022b3:	test   r12d,r12d
   1400022b6:	jne    0x1400022ed
   1400022b8:	mov    ecx,DWORD PTR [rsp+0x118]
   1400022bf:	mov    DWORD PTR [rsp+0x28],ecx
   1400022c3:	mov    ecx,DWORD PTR [rsp+0xa0]
   1400022ca:	mov    DWORD PTR [rsp+0x20],ecx
   1400022ce:	mov    r9d,DWORD PTR [rsp+0x110]
   1400022d6:	mov    r8,QWORD PTR [rsp+0x108]
   1400022de:	mov    rdx,QWORD PTR [rsp+0x58]
   1400022e3:	mov    rcx,rax
   1400022e6:	call   0x140002588
   1400022eb:	jmp    0x14000230a
   1400022ed:	mov    r9d,DWORD PTR [rsp+0x110]
   1400022f5:	mov    r8,QWORD PTR [rsp+0x108]
   1400022fd:	mov    rdx,QWORD PTR [rsp+0x58]
   140002302:	mov    rcx,rax
   140002305:	call   0x1400064fc
   14000230a:	sub    eax,0x1
   14000230d:	je     0x140002460
   140002313:	sub    eax,0x1
   140002316:	je     0x14000243c
   14000231c:	sub    eax,0x1
   14000231f:	je     0x1400023ec
   140002325:	sub    eax,0x1
   140002328:	je     0x1400023b5
   14000232e:	cmp    eax,0x4
   140002331:	je     0x140002485
   140002337:	mov    rdi,QWORD PTR [rsp+0x50]
   14000233c:	test   rdi,rdi
   14000233f:	je     0x14000235b
   140002341:	mov    rax,QWORD PTR [rdi]
   140002344:	mov    rbx,QWORD PTR [rax+0x10]
   140002348:	mov    rcx,rbx
   14000234b:	call   QWORD PTR [rip+0xe237]        # 0x140010588
   140002351:	mov    rcx,rdi
   140002354:	call   rbx
   140002356:	mov    QWORD PTR [rsp+0x50],rsi
   14000235b:	mov    rdi,QWORD PTR [rsp+0x58]
   140002360:	test   rdi,rdi
   140002363:	je     0x14000237f
   140002365:	mov    rax,QWORD PTR [rdi]
   140002368:	mov    rbx,QWORD PTR [rax+0x10]
   14000236c:	mov    rcx,rbx
   14000236f:	call   QWORD PTR [rip+0xe213]        # 0x140010588
   140002375:	mov    rcx,rdi
   140002378:	call   rbx
   14000237a:	mov    QWORD PTR [rsp+0x58],rsi
   14000237f:	lea    rcx,[rsp+0x80]
   140002387:	call   0x14000109c
   14000238c:	nop
   14000238d:	lea    rcx,[rsp+0x70]
   140002392:	call   0x14000109c
   140002397:	nop
   140002398:	lea    rcx,[rsp+0x60]
   14000239d:	call   0x14000109c
   1400023a2:	nop
   1400023a3:	lea    rcx,[rsp+0x78]
   1400023a8:	call   0x14000109c
   1400023ad:	mov    eax,r15d
   1400023b0:	jmp    0x140002563
   1400023b5:	mov    ecx,r14d
   1400023b8:	call   0x14000ebd8
   1400023bd:	mov    rcx,rax
   1400023c0:	lea    rdx,[rip+0xe3b1]        # 0x140010778
   1400023c7:	call   0x14000999c
   1400023cc:	mov    ecx,0xfb
   1400023d1:	call   0x140008af0
   1400023d6:	mov    rbx,rax
   1400023d9:	mov    ecx,r14d
   1400023dc:	call   0x14000ebd8
   1400023e1:	mov    rcx,rax
   1400023e4:	mov    rdx,rbx
   1400023e7:	call   0x14000999c
   1400023ec:	mov    rdi,QWORD PTR [rsp+0x58]
   1400023f1:	test   rdi,rdi
   1400023f4:	je     0x140002410
   1400023f6:	mov    rax,QWORD PTR [rdi]
   1400023f9:	mov    rbx,QWORD PTR [rax+0x10]
   1400023fd:	mov    rcx,rbx
   140002400:	call   QWORD PTR [rip+0xe182]        # 0x140010588
   140002406:	mov    rcx,rdi
   140002409:	call   rbx
   14000240b:	mov    QWORD PTR [rsp+0x58],rsi
   140002410:	mov    rdi,QWORD PTR [rsp+0x50]
   140002415:	test   rdi,rdi
   140002418:	je     0x140002434
   14000241a:	mov    rax,QWORD PTR [rdi]
   14000241d:	mov    rbx,QWORD PTR [rax+0x10]
   140002421:	mov    rcx,rbx
   140002424:	call   QWORD PTR [rip+0xe15e]        # 0x140010588
   14000242a:	mov    rcx,rdi
   14000242d:	call   rbx
   14000242f:	mov    QWORD PTR [rsp+0x50],rsi
   140002434:	mov    r14d,esi
   140002437:	jmp    0x140001ecb
   14000243c:	mov    ecx,0x69
   140002441:	call   0x140008af0
   140002446:	mov    rbx,rax
   140002449:	mov    ecx,0x2
   14000244e:	call   0x14000ebd8
   140002453:	mov    rcx,rax
   140002456:	mov    rdx,rbx
   140002459:	call   0x14000999c
   14000245e:	jmp    0x140002485
   140002460:	mov    ecx,0x8
   140002465:	call   QWORD PTR [rip+0xdced]        # 0x140010158
   14000246b:	call   0x1400086e0
   140002470:	mov    ecx,r14d
   140002473:	call   0x14000ebd8
   140002478:	mov    rcx,rax
   14000247b:	mov    edx,0x20001
   140002480:	call   0x14000888c
   140002485:	mov    rdi,QWORD PTR [rsp+0x58]
   14000248a:	test   rdi,rdi
   14000248d:	je     0x1400024a9
   14000248f:	mov    rax,QWORD PTR [rdi]
   140002492:	mov    rbx,QWORD PTR [rax+0x10]
   140002496:	mov    rcx,rbx
   140002499:	call   QWORD PTR [rip+0xe0e9]        # 0x140010588
   14000249f:	mov    rcx,rdi
   1400024a2:	call   rbx
   1400024a4:	mov    QWORD PTR [rsp+0x58],rsi
   1400024a9:	mov    rdi,QWORD PTR [rsp+0x50]
   1400024ae:	test   rdi,rdi
   1400024b1:	je     0x140001ecb
   1400024b7:	mov    rax,QWORD PTR [rdi]
   1400024ba:	mov    rbx,QWORD PTR [rax+0x10]
   1400024be:	mov    rcx,rbx
   1400024c1:	call   QWORD PTR [rip+0xe0c1]        # 0x140010588
   1400024c7:	mov    rcx,rdi
   1400024ca:	call   rbx
   1400024cc:	mov    QWORD PTR [rsp+0x50],rsi
   1400024d1:	jmp    0x140001ecb
   1400024d6:	mov    ecx,0x69
   1400024db:	call   0x140008af0
   1400024e0:	mov    rbx,rax
   1400024e3:	mov    ecx,0x2
   1400024e8:	call   0x14000ebd8
   1400024ed:	mov    rcx,rax
   1400024f0:	mov    rdx,rbx
   1400024f3:	call   0x14000999c
   1400024f8:	mov    rdi,QWORD PTR [rsp+0x50]
   1400024fd:	test   rdi,rdi
   140002500:	je     0x140001ecb
   140002506:	mov    rax,QWORD PTR [rdi]
   140002509:	mov    rbx,QWORD PTR [rax+0x10]
   14000250d:	mov    rcx,rbx
   140002510:	call   QWORD PTR [rip+0xe072]        # 0x140010588
   140002516:	mov    rcx,rdi
   140002519:	call   rbx
   14000251b:	and    QWORD PTR [rsp+0x50],0x0
   140002521:	jmp    0x140001ecb
   140002526:	mov    ecx,0x73
   14000252b:	jmp    0x140001ead
   140002530:	lea    rcx,[rsp+0x80]
   140002538:	call   0x14000109c
   14000253d:	nop
   14000253e:	lea    rcx,[rsp+0x70]
   140002543:	call   0x14000109c
   140002548:	nop
   140002549:	lea    rcx,[rsp+0x60]
   14000254e:	call   0x14000109c
   140002553:	nop
   140002554:	lea    rcx,[rsp+0x78]
   140002559:	call   0x14000109c
   14000255e:	mov    eax,0x1
   140002563:	lea    r11,[rsp+0xc0]
   14000256b:	mov    rbx,QWORD PTR [r11+0x38]
   14000256f:	mov    rsi,QWORD PTR [r11+0x40]
   140002573:	mov    rsp,r11
   140002576:	pop    r15
   140002578:	pop    r14
   14000257a:	pop    r13
   14000257c:	pop    r12
   14000257e:	pop    rdi
   14000257f:	ret    
   140002580:	int3   
   140002581:	int3   
   140002582:	int3   
   140002583:	int3   
   140002584:	int3   
   140002585:	int3   
   140002586:	int3   
   140002587:	int3   
   140002588:	mov    DWORD PTR [rsp+0x20],r9d
   14000258d:	push   rbx
   14000258e:	push   rsi
   14000258f:	push   rdi
   140002590:	push   r12
   140002592:	push   r13
   140002594:	push   r14
   140002596:	push   r15
   140002598:	mov    eax,0x35b0
   14000259d:	call   0x14000ed90
   1400025a2:	sub    rsp,rax
   1400025a5:	mov    QWORD PTR [rsp+0x170],0xfffffffffffffffe
   1400025b1:	mov    rax,QWORD PTR [rip+0x12a50]        # 0x140015008
   1400025b8:	xor    rax,rsp
   1400025bb:	mov    QWORD PTR [rsp+0x35a0],rax
   1400025c3:	mov    rbx,r8
   1400025c6:	mov    r13,rdx
   1400025c9:	mov    QWORD PTR [rsp+0x120],rdx
   1400025d1:	mov    rdi,rcx
   1400025d4:	mov    QWORD PTR [rsp+0xa8],rcx
   1400025dc:	mov    QWORD PTR [rsp+0x128],rcx
   1400025e4:	mov    QWORD PTR [rsp+0x138],rdx
   1400025ec:	mov    r14d,0x1
   1400025f2:	mov    DWORD PTR [rsp+0xf0],r14d
   1400025fa:	lea    rcx,[rsp+0xd8]
   140002602:	call   QWORD PTR [rip+0xdda0]        # 0x1400103a8
   140002608:	nop
   140002609:	xor    esi,esi
   14000260b:	mov    QWORD PTR [rsp+0x50],rsi
   140002610:	lea    rcx,[rsp+0xe0]
   140002618:	call   QWORD PTR [rip+0xdd8a]        # 0x1400103a8
   14000261e:	nop
   14000261f:	lea    rcx,[rsp+0xd0]
   140002627:	call   QWORD PTR [rip+0xdd7b]        # 0x1400103a8
   14000262d:	nop
   14000262e:	mov    QWORD PTR [rsp+0x48],rsi
   140002633:	mov    WORD PTR [rsp+0x33a0],si
   14000263b:	xor    edx,edx
   14000263d:	mov    r8d,0x1fc
   140002643:	lea    rcx,[rsp+0x33a2]
   14000264b:	call   0x14000ed52
   140002650:	mov    DWORD PTR [rsp+0x31a0],esi
   140002657:	mov    r12d,0x1fa
   14000265d:	mov    r8d,r12d
   140002660:	xor    edx,edx
   140002662:	lea    rcx,[rsp+0x31a4]
   14000266a:	call   0x14000ed52
   14000266f:	lea    r15d,[r14+0x1]
   140002673:	mov    DWORD PTR [rsp+0x104],esi
   14000267a:	mov    QWORD PTR [rsp+0x30],rsi
   14000267f:	mov    QWORD PTR [rsp+0xe8],rsi
   140002687:	mov    QWORD PTR [rsp+0x118],rsi
   14000268f:	mov    QWORD PTR [rsp+0xf8],rsi
   140002697:	mov    QWORD PTR [rsp+0x58],rsi
   14000269c:	mov    QWORD PTR [rsp+0x60],rsi
   1400026a1:	mov    QWORD PTR [rsp+0x110],rsi
   1400026a9:	mov    DWORD PTR [rsp+0x2fa0],esi
   1400026b0:	mov    r8d,r12d
   1400026b3:	xor    edx,edx
   1400026b5:	lea    rcx,[rsp+0x2fa4]
   1400026bd:	call   0x14000ed52
   1400026c2:	mov    DWORD PTR [rsp+0x2da0],esi
   1400026c9:	mov    r8d,r12d
   1400026cc:	xor    edx,edx
   1400026ce:	lea    rcx,[rsp+0x2da4]
   1400026d6:	call   0x14000ed52
   1400026db:	lea    rcx,[rsp+0xc0]
   1400026e3:	call   QWORD PTR [rip+0xdcbf]        # 0x1400103a8
   1400026e9:	nop
   1400026ea:	lea    rcx,[rsp+0x88]
   1400026f2:	call   QWORD PTR [rip+0xdcb0]        # 0x1400103a8
   1400026f8:	nop
   1400026f9:	lea    rcx,[rsp+0xa0]
   140002701:	call   QWORD PTR [rip+0xdca1]        # 0x1400103a8
   140002707:	nop
   140002708:	lea    rcx,[rsp+0x90]
   140002710:	call   QWORD PTR [rip+0xdc92]        # 0x1400103a8
   140002716:	nop
   140002717:	lea    rcx,[rsp+0x98]
   14000271f:	call   QWORD PTR [rip+0xdc83]        # 0x1400103a8
   140002725:	nop
   140002726:	lea    rcx,[rsp+0xb8]
   14000272e:	call   QWORD PTR [rip+0xdc74]        # 0x1400103a8
   140002734:	nop
   140002735:	lea    rcx,[rsp+0xc8]
   14000273d:	call   QWORD PTR [rip+0xdc65]        # 0x1400103a8
   140002743:	nop
   140002744:	lea    rcx,[rsp+0x78]
   140002749:	call   QWORD PTR [rip+0xdc59]        # 0x1400103a8
   14000274f:	nop
   140002750:	mov    DWORD PTR [rsp+0x100],esi
   140002757:	mov    QWORD PTR [rsp+0x80],rsi
   14000275f:	mov    QWORD PTR [rsp+0x70],rsi
   140002764:	mov    QWORD PTR [rsp+0x68],rsi
   140002769:	lea    ecx,[rsi+0x28]
   14000276c:	call   0x14000a3f8
   140002771:	mov    QWORD PTR [rsp+0x38],rax
   140002776:	test   rax,rax
   140002779:	jne    0x140002832
   14000277f:	lea    rcx,[rsp+0x78]
   140002784:	call   QWORD PTR [rip+0xdc2e]        # 0x1400103b8
   14000278a:	nop
   14000278b:	lea    rcx,[rsp+0xc8]
   140002793:	call   QWORD PTR [rip+0xdc1f]        # 0x1400103b8
   140002799:	nop
   14000279a:	lea    rcx,[rsp+0xb8]
   1400027a2:	call   QWORD PTR [rip+0xdc10]        # 0x1400103b8
   1400027a8:	nop
   1400027a9:	lea    rcx,[rsp+0x98]
   1400027b1:	call   QWORD PTR [rip+0xdc01]        # 0x1400103b8
   1400027b7:	nop
   1400027b8:	lea    rcx,[rsp+0x90]
   1400027c0:	call   QWORD PTR [rip+0xdbf2]        # 0x1400103b8
   1400027c6:	nop
   1400027c7:	lea    rcx,[rsp+0xa0]
   1400027cf:	call   QWORD PTR [rip+0xdbe3]        # 0x1400103b8
   1400027d5:	nop
   1400027d6:	lea    rcx,[rsp+0x88]
   1400027de:	call   QWORD PTR [rip+0xdbd4]        # 0x1400103b8
   1400027e4:	nop
   1400027e5:	lea    rcx,[rsp+0xc0]
   1400027ed:	call   QWORD PTR [rip+0xdbc5]        # 0x1400103b8
   1400027f3:	nop
   1400027f4:	lea    rcx,[rsp+0xd0]
   1400027fc:	call   QWORD PTR [rip+0xdbb6]        # 0x1400103b8
   140002802:	nop
   140002803:	lea    rcx,[rsp+0xe0]
   14000280b:	call   QWORD PTR [rip+0xdba7]        # 0x1400103b8
   140002811:	nop
   140002812:	lea    rcx,[rsp+0xd8]
   14000281a:	call   QWORD PTR [rip+0xdb98]        # 0x1400103b8
   140002820:	nop
   140002821:	mov    rcx,rdi
   140002824:	call   QWORD PTR [rip+0xdb8e]        # 0x1400103b8
   14000282a:	mov    eax,r14d
   14000282d:	jmp    0x140003d5f
   140002832:	lea    rdi,[rsp+0x180]
   14000283a:	xor    eax,eax
   14000283c:	mov    ecx,0x220
   140002841:	rep stos BYTE PTR es:[rdi],al
   140002843:	mov    ecx,0x12e
   140002848:	call   0x140008af0
   14000284d:	mov    rdx,rax
   140002850:	xor    r9d,r9d
   140002853:	mov    r8d,r14d
   140002856:	mov    rcx,rbx
   140002859:	call   0x14000990c
   14000285e:	test   eax,eax
   140002860:	jne    0x14000286c
   140002862:	mov    DWORD PTR [rsp+0xb0],r15d
   14000286a:	jmp    0x1400028c4
   14000286c:	mov    ecx,0x12d
   140002871:	call   0x140008af0
   140002876:	mov    rdx,rax
   140002879:	xor    r9d,r9d
   14000287c:	mov    r8d,r14d
   14000287f:	mov    rcx,rbx
   140002882:	call   0x14000990c
   140002887:	test   eax,eax
   140002889:	jne    0x140002895
   14000288b:	mov    DWORD PTR [rsp+0xb0],r14d
   140002893:	jmp    0x1400028c4
   140002895:	mov    ecx,0x12f
   14000289a:	call   0x140008af0
   14000289f:	mov    rdx,rax
   1400028a2:	xor    r9d,r9d
   1400028a5:	mov    r8d,r14d
   1400028a8:	mov    rcx,rbx
   1400028ab:	call   0x14000990c
   1400028b0:	mov    edi,r15d
   1400028b3:	mov    ebx,0x3
   1400028b8:	test   eax,eax
   1400028ba:	cmove  edi,ebx
   1400028bd:	mov    DWORD PTR [rsp+0xb0],edi
   1400028c4:	mov    r9d,DWORD PTR [rsp+0x3618]
   1400028cc:	lea    r8,[rsp+0x3a0]
   1400028d4:	call   0x1400049d0
   1400028d9:	mov    DWORD PTR [rsp+0x108],r14d
   1400028e1:	mov    rdi,QWORD PTR [rsp+0xa8]
   1400028e9:	mov    r12d,0x9
   1400028ef:	cmp    DWORD PTR [rsp+0xf0],r14d
   1400028f7:	jne    0x140003c16
   1400028fd:	call   0x14000b1a4
   140002902:	mov    r15,rax
   140002905:	mov    QWORD PTR [rsp+0x40],rax
   14000290a:	test   rax,rax
   14000290d:	jne    0x14000291e
   14000290f:	lea    rcx,[rsp+0x38]
   140002914:	call   0x14000a31c
   140002919:	jmp    0x14000277f
   14000291e:	mov    rax,QWORD PTR [r13+0x0]
   140002922:	mov    rdi,QWORD PTR [rax+0x20]
   140002926:	mov    rcx,rdi
   140002929:	call   QWORD PTR [rip+0xdc59]        # 0x140010588
   14000292f:	lea    rax,[rsp+0xf0]
   140002937:	mov    QWORD PTR [rsp+0x20],rax
   14000293c:	lea    r9,[rsp+0x30]
   140002941:	mov    r8d,r14d
   140002944:	or     edx,0xffffffff
   140002947:	mov    rcx,r13
   14000294a:	call   rdi
   14000294c:	test   eax,eax
   14000294e:	js     0x140003bee
   140002954:	cmp    DWORD PTR [rsp+0xf0],r14d
   14000295c:	jne    0x140003bee
   140002962:	lea    rcx,[rsp+0x140]
   14000296a:	call   QWORD PTR [rip+0xd848]        # 0x1400101b8
   140002970:	lea    rdx,[rip+0xde09]        # 0x140010780
   140002977:	lea    rcx,[rsp+0xc0]
   14000297f:	call   QWORD PTR [rip+0xda53]        # 0x1400103d8
   140002985:	lea    rdx,[rip+0xddf4]        # 0x140010780
   14000298c:	lea    rcx,[rsp+0x88]
   140002994:	call   QWORD PTR [rip+0xda3e]        # 0x1400103d8
   14000299a:	lea    rdx,[rip+0xdddf]        # 0x140010780
   1400029a1:	lea    rcx,[rsp+0xa0]
   1400029a9:	call   QWORD PTR [rip+0xda29]        # 0x1400103d8
   1400029af:	lea    rdx,[rip+0xddca]        # 0x140010780
   1400029b6:	lea    rcx,[rsp+0x90]
   1400029be:	call   QWORD PTR [rip+0xda14]        # 0x1400103d8
   1400029c4:	lea    rdx,[rip+0xddb5]        # 0x140010780
   1400029cb:	lea    rcx,[rsp+0x98]
   1400029d3:	call   QWORD PTR [rip+0xd9ff]        # 0x1400103d8
   1400029d9:	lea    rdx,[rip+0xdda0]        # 0x140010780
   1400029e0:	lea    rcx,[rsp+0xb8]
   1400029e8:	call   QWORD PTR [rip+0xd9ea]        # 0x1400103d8
   1400029ee:	lea    rdx,[rip+0xdd8b]        # 0x140010780
   1400029f5:	lea    rcx,[rsp+0xc8]
   1400029fd:	call   QWORD PTR [rip+0xd9d5]        # 0x1400103d8
   140002a03:	lea    rdx,[rip+0xdd76]        # 0x140010780
   140002a0a:	lea    rcx,[rsp+0x78]
   140002a0f:	call   QWORD PTR [rip+0xd9c3]        # 0x1400103d8
   140002a15:	nop
   140002a16:	lea    r8,[rsp+0xc0]
   140002a1e:	lea    rdx,[rip+0xdd63]        # 0x140010788
   140002a25:	mov    rcx,QWORD PTR [rsp+0x30]
   140002a2a:	call   0x140006008
   140002a2f:	test   eax,eax
   140002a31:	jns    0x140002a3a
   140002a33:	mov    ecx,eax
   140002a35:	call   0x140007fe0
   140002a3a:	lea    r8,[rsp+0x88]
   140002a42:	lea    rdx,[rip+0xdd4f]        # 0x140010798
   140002a49:	mov    rcx,QWORD PTR [rsp+0x30]
   140002a4e:	call   0x140006008
   140002a53:	test   eax,eax
   140002a55:	jns    0x140002a5e
   140002a57:	mov    ecx,eax
   140002a59:	call   0x140007fe0
   140002a5e:	lea    r8,[rsp+0xa0]
   140002a66:	lea    rdx,[rip+0xdd43]        # 0x1400107b0
   140002a6d:	mov    rcx,QWORD PTR [rsp+0x30]
   140002a72:	call   0x140006008
   140002a77:	test   eax,eax
   140002a79:	jns    0x140002a82
   140002a7b:	mov    ecx,eax
   140002a7d:	call   0x140007fe0
   140002a82:	lea    r8,[rsp+0x90]
   140002a8a:	lea    rdx,[rip+0xdd37]        # 0x1400107c8
   140002a91:	mov    rcx,QWORD PTR [rsp+0x30]
   140002a96:	call   0x140006008
   140002a9b:	test   eax,eax
   140002a9d:	jns    0x140002aa6
   140002a9f:	mov    ecx,eax
   140002aa1:	call   0x140007fe0
   140002aa6:	lea    r8,[rsp+0x98]
   140002aae:	lea    rdx,[rip+0xdd2b]        # 0x1400107e0
   140002ab5:	mov    rcx,QWORD PTR [rsp+0x30]
   140002aba:	call   0x140006008
   140002abf:	test   eax,eax
   140002ac1:	jns    0x140002aca
   140002ac3:	mov    ecx,eax
   140002ac5:	call   0x140007fe0
   140002aca:	lea    r8,[rsp+0xb8]
   140002ad2:	lea    rdx,[rip+0xdd1f]        # 0x1400107f8
   140002ad9:	mov    rcx,QWORD PTR [rsp+0x30]
   140002ade:	call   0x140006008
   140002ae3:	test   eax,eax
   140002ae5:	jns    0x140002aee
   140002ae7:	mov    ecx,eax
   140002ae9:	call   0x140007fe0
   140002aee:	lea    r8,[rsp+0xc8]
   140002af6:	lea    rdx,[rip+0xdd0b]        # 0x140010808
   140002afd:	mov    rcx,QWORD PTR [rsp+0x30]
   140002b02:	call   0x140006008
   140002b07:	test   eax,eax
   140002b09:	jns    0x140002b12
   140002b0b:	mov    ecx,eax
   140002b0d:	call   0x140007fe0
   140002b12:	lea    r8,[rsp+0xe0]
   140002b1a:	lea    rdx,[rip+0xdcf7]        # 0x140010818
   140002b21:	mov    rcx,QWORD PTR [rsp+0x30]
   140002b26:	call   0x140006008
   140002b2b:	test   eax,eax
   140002b2d:	jns    0x140002b36
   140002b2f:	mov    ecx,eax
   140002b31:	call   0x140007fe0
   140002b36:	lea    r8,[rsp+0xd0]
   140002b3e:	lea    rdx,[rip+0xdceb]        # 0x140010830
   140002b45:	mov    rcx,QWORD PTR [rsp+0x30]
   140002b4a:	call   0x140006008
   140002b4f:	test   eax,eax
   140002b51:	jns    0x140002b5a
   140002b53:	mov    ecx,eax
   140002b55:	call   0x140007fe0
   140002b5a:	lea    r8,[rsp+0x78]
   140002b5f:	lea    rdx,[rip+0xdce2]        # 0x140010848
   140002b66:	mov    rcx,QWORD PTR [rsp+0x30]
   140002b6b:	call   0x140006008
   140002b70:	test   eax,eax
   140002b72:	jns    0x140002b7c
   140002b74:	mov    ecx,eax
   140002b76:	call   0x140007fe0
   140002b7b:	nop
   140002b7c:	mov    rbx,QWORD PTR [rsp+0x30]
   140002b81:	mov    rax,QWORD PTR [rbx]
   140002b84:	mov    rdi,QWORD PTR [rax+0x20]
   140002b88:	mov    rcx,rdi
   140002b8b:	call   QWORD PTR [rip+0xd9f7]        # 0x140010588
   140002b91:	mov    QWORD PTR [rsp+0x28],rsi
   140002b96:	mov    QWORD PTR [rsp+0x20],rsi
   140002b9b:	lea    r9,[rsp+0x140]
   140002ba3:	xor    r8d,r8d
   140002ba6:	lea    rdx,[rip+0xdcb3]        # 0x140010860
   140002bad:	mov    rcx,rbx
   140002bb0:	call   rdi
   140002bb2:	test   eax,eax
   140002bb4:	jne    0x140003ac3
   140002bba:	cmp    WORD PTR [rsp+0x140],r14w
   140002bc3:	je     0x140003ac3
   140002bc9:	cmp    WORD PTR [rsp+0x140],si
   140002bd1:	je     0x140003ac3
   140002bd7:	lea    rcx,[rsp+0x158]
   140002bdf:	call   QWORD PTR [rip+0xd5d3]        # 0x1400101b8
   140002be5:	lea    rdx,[rsp+0x140]
   140002bed:	lea    rcx,[rsp+0x158]
   140002bf5:	call   QWORD PTR [rip+0xd5c5]        # 0x1400101c0
   140002bfb:	test   eax,eax
   140002bfd:	jns    0x140002c07
   140002bff:	mov    ecx,eax
   140002c01:	call   0x140007fe0
   140002c06:	nop
   140002c07:	lea    rdx,[rsp+0x158]
   140002c0f:	lea    rcx,[rsp+0x130]
   140002c17:	call   0x1400014f8
   140002c1c:	nop
   140002c1d:	mov    rcx,QWORD PTR [rax]
   140002c20:	test   rcx,rcx
   140002c23:	je     0x140002c2a
   140002c25:	mov    rdx,QWORD PTR [rcx]
   140002c28:	jmp    0x140002c2d
   140002c2a:	mov    rdx,rsi
   140002c2d:	lea    rcx,[rsp+0xd8]
   140002c35:	call   QWORD PTR [rip+0xd79d]        # 0x1400103d8
   140002c3b:	nop
   140002c3c:	lea    rcx,[rsp+0x130]
   140002c44:	call   0x14000109c
   140002c49:	nop
   140002c4a:	lea    rcx,[rsp+0x158]
   140002c52:	call   QWORD PTR [rip+0xd570]        # 0x1400101c8
   140002c58:	test   eax,eax
   140002c5a:	jns    0x140002c63
   140002c5c:	mov    ecx,eax
   140002c5e:	call   0x140007fe0
   140002c63:	mov    ecx,0x1fc
   140002c68:	call   0x14000a3f8
   140002c6d:	mov    rbx,rax
   140002c70:	mov    QWORD PTR [rsp+0x48],rax
   140002c75:	test   rax,rax
   140002c78:	jne    0x140002d81
   140002c7e:	mov    rbx,QWORD PTR [rsp+0x30]
   140002c83:	test   rbx,rbx
   140002c86:	je     0x140002ca2
   140002c88:	mov    rax,QWORD PTR [rbx]
   140002c8b:	mov    rdi,QWORD PTR [rax+0x10]
   140002c8f:	mov    rcx,rdi
   140002c92:	call   QWORD PTR [rip+0xd8f0]        # 0x140010588
   140002c98:	mov    rcx,rbx
   140002c9b:	call   rdi
   140002c9d:	mov    QWORD PTR [rsp+0x30],rsi
   140002ca2:	cmp    DWORD PTR [r15],r12d
   140002ca5:	jne    0x140002cac
   140002ca7:	mov    eax,r14d
   140002caa:	jmp    0x140002cae
   140002cac:	mov    eax,esi
   140002cae:	test   eax,eax
   140002cb0:	jne    0x140002cb4
   140002cb2:	jmp    0x140002cbe
   140002cb4:	lea    rcx,[rsp+0x40]
   140002cb9:	call   0x14000b23c
   140002cbe:	lea    rcx,[rsp+0x38]
   140002cc3:	call   0x14000a31c
   140002cc8:	nop
   140002cc9:	lea    rcx,[rsp+0x78]
   140002cce:	call   QWORD PTR [rip+0xd6e4]        # 0x1400103b8
   140002cd4:	nop
   140002cd5:	lea    rcx,[rsp+0xc8]
   140002cdd:	call   QWORD PTR [rip+0xd6d5]        # 0x1400103b8
   140002ce3:	nop
   140002ce4:	lea    rcx,[rsp+0xb8]
   140002cec:	call   QWORD PTR [rip+0xd6c6]        # 0x1400103b8
   140002cf2:	nop
   140002cf3:	lea    rcx,[rsp+0x98]
   140002cfb:	call   QWORD PTR [rip+0xd6b7]        # 0x1400103b8
   140002d01:	nop
   140002d02:	lea    rcx,[rsp+0x90]
   140002d0a:	call   QWORD PTR [rip+0xd6a8]        # 0x1400103b8
   140002d10:	nop
   140002d11:	lea    rcx,[rsp+0xa0]
   140002d19:	call   QWORD PTR [rip+0xd699]        # 0x1400103b8
   140002d1f:	nop
   140002d20:	lea    rcx,[rsp+0x88]
   140002d28:	call   QWORD PTR [rip+0xd68a]        # 0x1400103b8
   140002d2e:	nop
   140002d2f:	lea    rcx,[rsp+0xc0]
   140002d37:	call   QWORD PTR [rip+0xd67b]        # 0x1400103b8
   140002d3d:	nop
   140002d3e:	lea    rcx,[rsp+0xd0]
   140002d46:	call   QWORD PTR [rip+0xd66c]        # 0x1400103b8
   140002d4c:	nop
   140002d4d:	lea    rcx,[rsp+0xe0]
   140002d55:	call   QWORD PTR [rip+0xd65d]        # 0x1400103b8
   140002d5b:	nop
   140002d5c:	lea    rcx,[rsp+0xd8]
   140002d64:	call   QWORD PTR [rip+0xd64e]        # 0x1400103b8
   140002d6a:	nop
   140002d6b:	mov    rcx,QWORD PTR [rsp+0xa8]
   140002d73:	call   QWORD PTR [rip+0xd63f]        # 0x1400103b8
   140002d79:	mov    eax,r14d
   140002d7c:	jmp    0x140003d5f
   140002d81:	lea    rcx,[rsp+0xd8]
   140002d89:	call   QWORD PTR [rip+0xd631]        # 0x1400103c0
   140002d8f:	mov    ecx,DWORD PTR [rax+0x4]
   140002d92:	lea    r13d,[rcx+0x2]
   140002d96:	mov    r8d,r13d
   140002d99:	mov    rdx,QWORD PTR [rsp+0xd8]
   140002da1:	mov    rcx,rbx
   140002da4:	call   0x140009774
   140002da9:	mov    QWORD PTR [rsp+0x178],rbx
   140002db1:	lea    rdi,[rsp+0x180]
   140002db9:	xor    eax,eax
   140002dbb:	mov    ecx,0x220
   140002dc0:	rep stos BYTE PTR es:[rdi],al
   140002dc2:	mov    ecx,0x1fc
   140002dc7:	call   0x14000a3f8
   140002dcc:	mov    rdi,rax
   140002dcf:	mov    QWORD PTR [rsp+0x50],rax
   140002dd4:	test   rax,rax
   140002dd7:	jne    0x140002eea
   140002ddd:	mov    rbx,QWORD PTR [rsp+0x30]
   140002de2:	test   rbx,rbx
   140002de5:	je     0x140002e01
   140002de7:	mov    rax,QWORD PTR [rbx]
   140002dea:	mov    rdi,QWORD PTR [rax+0x10]
   140002dee:	mov    rcx,rdi
   140002df1:	call   QWORD PTR [rip+0xd791]        # 0x140010588
   140002df7:	mov    rcx,rbx
   140002dfa:	call   rdi
   140002dfc:	mov    QWORD PTR [rsp+0x30],rsi
   140002e01:	cmp    DWORD PTR [r15],r12d
   140002e04:	jne    0x140002e0b
   140002e06:	mov    eax,r14d
   140002e09:	jmp    0x140002e0d
   140002e0b:	mov    eax,esi
   140002e0d:	test   eax,eax
   140002e0f:	jne    0x140002e13
   140002e11:	jmp    0x140002e1d
   140002e13:	lea    rcx,[rsp+0x40]
   140002e18:	call   0x14000b23c
   140002e1d:	lea    rcx,[rsp+0x38]
   140002e22:	call   0x14000a31c
   140002e27:	lea    rcx,[rsp+0x48]
   140002e2c:	call   0x14000a31c
   140002e31:	nop
   140002e32:	lea    rcx,[rsp+0x78]
   140002e37:	call   QWORD PTR [rip+0xd57b]        # 0x1400103b8
   140002e3d:	nop
   140002e3e:	lea    rcx,[rsp+0xc8]
   140002e46:	call   QWORD PTR [rip+0xd56c]        # 0x1400103b8
   140002e4c:	nop
   140002e4d:	lea    rcx,[rsp+0xb8]
   140002e55:	call   QWORD PTR [rip+0xd55d]        # 0x1400103b8
   140002e5b:	nop
   140002e5c:	lea    rcx,[rsp+0x98]
   140002e64:	call   QWORD PTR [rip+0xd54e]        # 0x1400103b8
   140002e6a:	nop
   140002e6b:	lea    rcx,[rsp+0x90]
   140002e73:	call   QWORD PTR [rip+0xd53f]        # 0x1400103b8
   140002e79:	nop
   140002e7a:	lea    rcx,[rsp+0xa0]
   140002e82:	call   QWORD PTR [rip+0xd530]        # 0x1400103b8
   140002e88:	nop
   140002e89:	lea    rcx,[rsp+0x88]
   140002e91:	call   QWORD PTR [rip+0xd521]        # 0x1400103b8
   140002e97:	nop
   140002e98:	lea    rcx,[rsp+0xc0]
   140002ea0:	call   QWORD PTR [rip+0xd512]        # 0x1400103b8
   140002ea6:	nop
   140002ea7:	lea    rcx,[rsp+0xd0]
   140002eaf:	call   QWORD PTR [rip+0xd503]        # 0x1400103b8
   140002eb5:	nop
   140002eb6:	lea    rcx,[rsp+0xe0]
   140002ebe:	call   QWORD PTR [rip+0xd4f4]        # 0x1400103b8
   140002ec4:	nop
   140002ec5:	lea    rcx,[rsp+0xd8]
   140002ecd:	call   QWORD PTR [rip+0xd4e5]        # 0x1400103b8
   140002ed3:	nop
   140002ed4:	mov    rcx,QWORD PTR [rsp+0xa8]
   140002edc:	call   QWORD PTR [rip+0xd4d6]        # 0x1400103b8
   140002ee2:	mov    eax,r14d
   140002ee5:	jmp    0x140003d5f
   140002eea:	mov    r8d,r13d
   140002eed:	mov    rdx,QWORD PTR [rsp+0xa8]
   140002ef5:	mov    rdx,QWORD PTR [rdx]
   140002ef8:	mov    rcx,rax
   140002efb:	call   0x140009774
   140002f00:	mov    r8d,0xff
   140002f06:	mov    rdx,rbx
   140002f09:	lea    rcx,[rsp+0x33a0]
   140002f11:	call   0x140009774
   140002f16:	mov    r9d,DWORD PTR [rsp+0x3610]
   140002f1e:	lea    r8,[rsp+0x180]
   140002f26:	mov    rdx,rbx
   140002f29:	mov    rcx,rdi
   140002f2c:	call   0x140003d88
   140002f31:	cmp    eax,r14d
   140002f34:	jne    0x140002f7c
   140002f36:	cmp    DWORD PTR [r15],r12d
   140002f39:	jne    0x140002f40
   140002f3b:	mov    eax,r14d
   140002f3e:	jmp    0x140002f42
   140002f40:	mov    eax,esi
   140002f42:	test   eax,eax
   140002f44:	jne    0x140002f48
   140002f46:	jmp    0x140002f52
   140002f48:	lea    rcx,[rsp+0x40]
   140002f4d:	call   0x14000b23c
   140002f52:	lea    rcx,[rsp+0x50]
   140002f57:	call   0x14000a31c
   140002f5c:	lea    rcx,[rsp+0x48]
   140002f61:	call   0x14000a31c
   140002f66:	nop
   140002f67:	mov    rdi,QWORD PTR [rsp+0xa8]
   140002f6f:	mov    r13,QWORD PTR [rsp+0x120]
   140002f77:	jmp    0x1400028ef
   140002f7c:	mov    edx,0x10
   140002f81:	mov    rcx,r15
   140002f84:	call   0x14000b49c
   140002f89:	mov    r13d,eax
   140002f8c:	mov    r9,QWORD PTR [rsp+0x88]
   140002f94:	xor    r8d,r8d
   140002f97:	mov    edx,eax
   140002f99:	mov    rcx,r15
   140002f9c:	call   0x14000b9b4
   140002fa1:	mov    r9,QWORD PTR [rsp+0xc0]
   140002fa9:	mov    r8d,r14d
   140002fac:	mov    edx,r13d
   140002faf:	mov    rcx,r15
   140002fb2:	call   0x14000b9b4
   140002fb7:	mov    r9,QWORD PTR [rsp+0x90]
   140002fbf:	mov    r8d,0x2
   140002fc5:	mov    edx,r13d
   140002fc8:	mov    rcx,r15
   140002fcb:	call   0x14000b9b4
   140002fd0:	mov    r9,QWORD PTR [rsp+0x98]
   140002fd8:	mov    r8d,0x3
   140002fde:	mov    edx,r13d
   140002fe1:	mov    rcx,r15
   140002fe4:	call   0x14000b9b4
   140002fe9:	mov    rdx,QWORD PTR [rsp+0x78]
   140002fee:	test   rdx,rdx
   140002ff1:	jne    0x140002ff7
   140002ff3:	mov    eax,esi
   140002ff5:	jmp    0x140003005
   140002ff7:	mov    rcx,rdx
   140002ffa:	call   QWORD PTR [rip+0xd148]        # 0x140010148
   140003000:	mov    rdx,QWORD PTR [rsp+0x78]
   140003005:	lea    r8d,[rax+0x2]
   140003009:	mov    edi,0xff
   14000300e:	cmp    r8d,edi
   140003011:	cmova  r8d,edi
   140003015:	lea    rcx,[rsp+0x2fa0]
   14000301d:	call   0x140009774
   140003022:	mov    r8d,edi
   140003025:	lea    rdx,[rip+0xd84c]        # 0x140010878
   14000302c:	lea    rcx,[rsp+0x31a0]
   140003034:	call   0x140009774
   140003039:	lea    rax,[rsp+0x31a0]
   140003041:	or     rcx,0xffffffffffffffff
   140003045:	inc    rcx
   140003048:	cmp    WORD PTR [rax+rcx*2],si
   14000304c:	jne    0x140003045
   14000304e:	lea    rdx,[rsp+0x2fa0]
   140003056:	or     rax,0xffffffffffffffff
   14000305a:	inc    rax
   14000305d:	cmp    WORD PTR [rdx+rax*2],si
   140003061:	jne    0x14000305a
   140003063:	sub    eax,ecx
   140003065:	mov    ecx,eax
   140003067:	add    rcx,rcx
   14000306a:	cmp    rcx,0x1fe
   140003071:	jae    0x140003abd
   140003077:	mov    WORD PTR [rsp+rcx*1+0x2fa0],si
   14000307f:	lea    r9,[rsp+0x2fa0]
   140003087:	mov    r8d,0x4
   14000308d:	mov    edx,r13d
   140003090:	mov    rcx,r15
   140003093:	call   0x14000b9b4
   140003098:	mov    r9,QWORD PTR [rsp+0xa0]
   1400030a0:	mov    r8d,0x5
   1400030a6:	mov    edx,r13d
   1400030a9:	mov    rcx,r15
   1400030ac:	call   0x14000b9b4
   1400030b1:	mov    r9,QWORD PTR [rsp+0xc8]
   1400030b9:	mov    r8d,0x6
   1400030bf:	mov    edx,r13d
   1400030c2:	mov    rcx,r15
   1400030c5:	call   0x14000b9b4
   1400030ca:	mov    r9,QWORD PTR [rsp+0xb8]
   1400030d2:	mov    r8d,0x7
   1400030d8:	mov    edx,r13d
   1400030db:	mov    rcx,r15
   1400030de:	call   0x14000b9b4
   1400030e3:	mov    rcx,QWORD PTR [rsp+0xd0]
   1400030eb:	test   rcx,rcx
   1400030ee:	jne    0x1400030f4
   1400030f0:	mov    ebx,esi
   1400030f2:	jmp    0x1400030fc
   1400030f4:	call   QWORD PTR [rip+0xd04e]        # 0x140010148
   1400030fa:	mov    ebx,eax
   1400030fc:	mov    ecx,0x1fc
   140003101:	call   0x14000a3f8
   140003106:	mov    rdi,rax
   140003109:	mov    QWORD PTR [rsp+0x58],rax
   14000310e:	test   rax,rax
   140003111:	jne    0x140003220
   140003117:	mov    rbx,QWORD PTR [rsp+0x30]
   14000311c:	test   rbx,rbx
   14000311f:	je     0x14000313b
   140003121:	mov    rax,QWORD PTR [rbx]
   140003124:	mov    rdi,QWORD PTR [rax+0x10]
   140003128:	mov    rcx,rdi
   14000312b:	call   QWORD PTR [rip+0xd457]        # 0x140010588
   140003131:	mov    rcx,rbx
   140003134:	call   rdi
   140003136:	mov    QWORD PTR [rsp+0x30],rsi
   14000313b:	lea    rcx,[rsp+0x38]
   140003140:	call   0x14000a31c
   140003145:	lea    rcx,[rsp+0x50]
   14000314a:	call   0x14000a31c
   14000314f:	lea    rcx,[rsp+0x48]
   140003154:	call   0x14000a31c
   140003159:	cmp    DWORD PTR [r15],r12d
   14000315c:	jne    0x140003171
   14000315e:	mov    rcx,r15
   140003161:	call   0x14000b1d4
   140003166:	lea    rcx,[rsp+0x40]
   14000316b:	call   0x14000a31c
   140003170:	nop
   140003171:	lea    rcx,[rsp+0x78]
   140003176:	call   QWORD PTR [rip+0xd23c]        # 0x1400103b8
   14000317c:	nop
   14000317d:	lea    rcx,[rsp+0xc8]
   140003185:	call   QWORD PTR [rip+0xd22d]        # 0x1400103b8
   14000318b:	nop
   14000318c:	lea    rcx,[rsp+0xb8]
   140003194:	call   QWORD PTR [rip+0xd21e]        # 0x1400103b8
   14000319a:	nop
   14000319b:	lea    rcx,[rsp+0x98]
   1400031a3:	call   QWORD PTR [rip+0xd20f]        # 0x1400103b8
   1400031a9:	nop
   1400031aa:	lea    rcx,[rsp+0x90]
   1400031b2:	call   QWORD PTR [rip+0xd200]        # 0x1400103b8
   1400031b8:	nop
   1400031b9:	lea    rcx,[rsp+0xa0]
   1400031c1:	call   QWORD PTR [rip+0xd1f1]        # 0x1400103b8
   1400031c7:	nop
   1400031c8:	lea    rcx,[rsp+0x88]
   1400031d0:	call   QWORD PTR [rip+0xd1e2]        # 0x1400103b8
   1400031d6:	nop
   1400031d7:	lea    rcx,[rsp+0xc0]
   1400031df:	call   QWORD PTR [rip+0xd1d3]        # 0x1400103b8
   1400031e5:	nop
   1400031e6:	lea    rcx,[rsp+0xd0]
   1400031ee:	call   QWORD PTR [rip+0xd1c4]        # 0x1400103b8
   1400031f4:	nop
   1400031f5:	lea    rcx,[rsp+0xe0]
   1400031fd:	call   QWORD PTR [rip+0xd1b5]        # 0x1400103b8
   140003203:	nop
   140003204:	lea    rcx,[rsp+0xd8]
   14000320c:	call   QWORD PTR [rip+0xd1a6]        # 0x1400103b8
   140003212:	nop
   140003213:	mov    rcx,QWORD PTR [rsp+0xa8]
   14000321b:	jmp    0x140002824
   140003220:	lea    r8d,[rbx+0x2]
   140003224:	mov    rdx,QWORD PTR [rsp+0xd0]
   14000322c:	mov    rcx,rax
   14000322f:	call   0x140009774
   140003234:	movsxd rax,ebx
   140003237:	mov    WORD PTR [rdi+rax*2],si
   14000323b:	xor    r9d,r9d
   14000323e:	mov    r8d,r14d
   140003241:	lea    rdx,[rip+0xd640]        # 0x140010888
   140003248:	mov    rcx,rdi
   14000324b:	call   0x14000990c
   140003250:	mov    rcx,rdi
   140003253:	test   eax,eax
   140003255:	jne    0x140003265
   140003257:	call   0x14000a5a0
   14000325c:	lea    rdx,[rip+0xd62d]        # 0x140010890
   140003263:	jmp    0x140003271
   140003265:	call   0x14000a5a0
   14000326a:	lea    rdx,[rip+0xd62f]        # 0x1400108a0
   140003271:	movsxd r8,eax
   140003274:	shr    r8,1
   140003277:	mov    rcx,rdi
   14000327a:	call   0x140009774
   14000327f:	mov    r9,rdi
   140003282:	mov    r8d,0x8
   140003288:	mov    edx,r13d
   14000328b:	mov    rcx,r15
   14000328e:	call   0x14000b9b4
   140003293:	mov    rcx,QWORD PTR [rsp+0xe0]
   14000329b:	test   rcx,rcx
   14000329e:	jne    0x1400032a4
   1400032a0:	mov    ebx,esi
   1400032a2:	jmp    0x1400032ac
   1400032a4:	call   QWORD PTR [rip+0xce9e]        # 0x140010148
   1400032aa:	mov    ebx,eax
   1400032ac:	mov    ecx,0x1fc
   1400032b1:	call   0x14000a3f8
   1400032b6:	mov    rdi,rax
   1400032b9:	mov    QWORD PTR [rsp+0x60],rax
   1400032be:	test   rax,rax
   1400032c1:	jne    0x14000330f
   1400032c3:	mov    rbx,QWORD PTR [rsp+0x30]
   1400032c8:	test   rbx,rbx
   1400032cb:	je     0x1400032e7
   1400032cd:	mov    rax,QWORD PTR [rbx]
   1400032d0:	mov    rdi,QWORD PTR [rax+0x10]
   1400032d4:	mov    rcx,rdi
   1400032d7:	call   QWORD PTR [rip+0xd2ab]        # 0x140010588
   1400032dd:	mov    rcx,rbx
   1400032e0:	call   rdi
   1400032e2:	mov    QWORD PTR [rsp+0x30],rsi
   1400032e7:	lea    rcx,[rsp+0x38]
   1400032ec:	call   0x14000a31c
   1400032f1:	lea    rcx,[rsp+0x50]
   1400032f6:	call   0x14000a31c
   1400032fb:	lea    rcx,[rsp+0x48]
   140003300:	call   0x14000a31c
   140003305:	lea    rcx,[rsp+0x58]
   14000330a:	jmp    0x140003154
   14000330f:	lea    r8d,[rbx+0x2]
   140003313:	mov    rdx,QWORD PTR [rsp+0xe0]
   14000331b:	mov    rcx,rax
   14000331e:	call   0x140009774
   140003323:	movsxd rax,ebx
   140003326:	mov    WORD PTR [rdi+rax*2],si
   14000332a:	xor    r9d,r9d
   14000332d:	mov    r8d,r14d
   140003330:	lea    rdx,[rip+0xd551]        # 0x140010888
   140003337:	mov    rcx,rdi
   14000333a:	call   0x14000990c
   14000333f:	mov    rcx,rdi
   140003342:	test   eax,eax
   140003344:	jne    0x140003354
   140003346:	call   0x14000a5a0
   14000334b:	lea    rdx,[rip+0xd53e]        # 0x140010890
   140003352:	jmp    0x140003360
   140003354:	call   0x14000a5a0
   140003359:	lea    rdx,[rip+0xd540]        # 0x1400108a0
   140003360:	movsxd r8,eax
   140003363:	shr    r8,1
   140003366:	mov    rcx,rdi
   140003369:	call   0x140009774
   14000336e:	mov    r9,rdi
   140003371:	mov    r8d,r12d
   140003374:	mov    edx,r13d
   140003377:	mov    rcx,r15
   14000337a:	call   0x14000b9b4
   14000337f:	lea    r9,[rsp+0x68]
   140003384:	lea    r8,[rsp+0x70]
   140003389:	lea    rdx,[rsp+0x80]
   140003391:	mov    rcx,QWORD PTR [rsp+0x38]
   140003396:	call   0x1400055e0
   14000339b:	test   eax,eax
   14000339d:	jne    0x14000343c
   1400033a3:	mov    rbx,QWORD PTR [rsp+0x30]
   1400033a8:	test   rbx,rbx
   1400033ab:	je     0x1400033c7
   1400033ad:	mov    rax,QWORD PTR [rbx]
   1400033b0:	mov    rdi,QWORD PTR [rax+0x10]
   1400033b4:	mov    rcx,rdi
   1400033b7:	call   QWORD PTR [rip+0xd1cb]        # 0x140010588
   1400033bd:	mov    rcx,rbx
   1400033c0:	call   rdi
   1400033c2:	mov    QWORD PTR [rsp+0x30],rsi
   1400033c7:	lea    rcx,[rsp+0x38]
   1400033cc:	call   0x14000a31c
   1400033d1:	lea    rcx,[rsp+0x50]
   1400033d6:	call   0x14000a31c
   1400033db:	lea    rcx,[rsp+0x48]
   1400033e0:	call   0x14000a31c
   1400033e5:	lea    rcx,[rsp+0x58]
   1400033ea:	call   0x14000a31c
   1400033ef:	lea    rcx,[rsp+0x60]
   1400033f4:	call   0x14000a31c
   1400033f9:	lea    rcx,[rsp+0x68]
   1400033fe:	call   0x14000a31c
   140003403:	lea    rcx,[rsp+0x70]
   140003408:	call   0x14000a31c
   14000340d:	lea    rcx,[rsp+0x80]
   140003415:	call   0x14000a31c
   14000341a:	cmp    DWORD PTR [r15],r12d
   14000341d:	jne    0x140003431
   14000341f:	mov    rcx,r15
   140003422:	call   0x14000b1d4
   140003427:	lea    rcx,[rsp+0x40]
   14000342c:	call   0x14000a31c
   140003431:	mov    r14d,0x2
   140003437:	jmp    0x140003171
   14000343c:	mov    ebx,0x1fc
   140003441:	mov    ecx,ebx
   140003443:	call   0x14000a3f8
   140003448:	mov    rdi,rax
   14000344b:	mov    QWORD PTR [rsp+0x110],rax
   140003453:	test   rax,rax
   140003456:	jne    0x1400034cf
   140003458:	mov    rbx,QWORD PTR [rsp+0x30]
   14000345d:	test   rbx,rbx
   140003460:	je     0x14000347c
   140003462:	mov    rax,QWORD PTR [rbx]
   140003465:	mov    rdi,QWORD PTR [rax+0x10]
   140003469:	mov    rcx,rdi
   14000346c:	call   QWORD PTR [rip+0xd116]        # 0x140010588
   140003472:	mov    rcx,rbx
   140003475:	call   rdi
   140003477:	mov    QWORD PTR [rsp+0x30],rsi
   14000347c:	lea    rcx,[rsp+0x38]
   140003481:	call   0x14000a31c
   140003486:	lea    rcx,[rsp+0x50]
   14000348b:	call   0x14000a31c
   140003490:	lea    rcx,[rsp+0x48]
   140003495:	call   0x14000a31c
   14000349a:	lea    rcx,[rsp+0x58]
   14000349f:	call   0x14000a31c
   1400034a4:	lea    rcx,[rsp+0x60]
   1400034a9:	call   0x14000a31c
   1400034ae:	lea    rcx,[rsp+0x68]
   1400034b3:	call   0x14000a31c
   1400034b8:	lea    rcx,[rsp+0x70]
   1400034bd:	call   0x14000a31c
   1400034c2:	lea    rcx,[rsp+0x80]
   1400034ca:	jmp    0x140003154
   1400034cf:	mov    r8d,0xa
   1400034d5:	lea    rdx,[rsp+0x2da0]
   1400034dd:	mov    ecx,DWORD PTR [rsp+0x18c]
   1400034e4:	call   QWORD PTR [rip+0xcfee]        # 0x1400104d8
   1400034ea:	mov    DWORD PTR [rsp+0x28],0xff
   1400034f2:	mov    QWORD PTR [rsp+0x20],rdi
   1400034f7:	mov    r9,QWORD PTR [rsp+0x38]
   1400034fc:	lea    r8,[rsp+0x2da0]
   140003504:	xor    edx,edx
   140003506:	mov    ecx,0x400
   14000350b:	call   QWORD PTR [rip+0xcaef]        # 0x140010000
   140003511:	test   eax,eax
   140003513:	jne    0x140003554
   140003515:	lea    rcx,[rsp+0x38]
   14000351a:	call   0x14000a31c
   14000351f:	lea    rcx,[rsp+0x50]
   140003524:	call   0x14000a31c
   140003529:	lea    rcx,[rsp+0x48]
   14000352e:	call   0x14000a31c
   140003533:	lea    rcx,[rsp+0x58]
   140003538:	call   0x14000a31c
   14000353d:	lea    rcx,[rsp+0x60]
   140003542:	call   0x14000a31c
   140003547:	lea    rcx,[rsp+0x110]
   14000354f:	jmp    0x1400033f4
   140003554:	mov    r9,rdi
   140003557:	mov    r8d,0xa
   14000355d:	mov    edx,r13d
   140003560:	mov    rcx,r15
   140003563:	call   0x14000b9b4
   140003568:	mov    ecx,ebx
   14000356a:	call   0x14000a3f8
   14000356f:	mov    rdi,rax
   140003572:	mov    QWORD PTR [rsp+0xe8],rax
   14000357a:	test   rax,rax
   14000357d:	jne    0x1400035e2
   14000357f:	mov    rbx,QWORD PTR [rsp+0x30]
   140003584:	test   rbx,rbx
   140003587:	je     0x1400035a3
   140003589:	mov    rax,QWORD PTR [rbx]
   14000358c:	mov    rdi,QWORD PTR [rax+0x10]
   140003590:	mov    rcx,rdi
   140003593:	call   QWORD PTR [rip+0xcfef]        # 0x140010588
   140003599:	mov    rcx,rbx
   14000359c:	call   rdi
   14000359e:	mov    QWORD PTR [rsp+0x30],rsi
   1400035a3:	lea    rcx,[rsp+0x38]
   1400035a8:	call   0x14000a31c
   1400035ad:	lea    rcx,[rsp+0x50]
   1400035b2:	call   0x14000a31c
   1400035b7:	lea    rcx,[rsp+0x48]
   1400035bc:	call   0x14000a31c
   1400035c1:	lea    rcx,[rsp+0x58]
   1400035c6:	call   0x14000a31c
   1400035cb:	lea    rcx,[rsp+0x60]
   1400035d0:	call   0x14000a31c
   1400035d5:	lea    rcx,[rsp+0x110]
   1400035dd:	jmp    0x1400034a9
   1400035e2:	mov    r8d,0xa
   1400035e8:	lea    rdx,[rsp+0x2da0]
   1400035f0:	mov    ecx,DWORD PTR [rsp+0x180]
   1400035f7:	call   QWORD PTR [rip+0xcedb]        # 0x1400104d8
   1400035fd:	mov    DWORD PTR [rsp+0x28],0xff
   140003605:	mov    QWORD PTR [rsp+0x20],rdi
   14000360a:	mov    r9,QWORD PTR [rsp+0x38]
   14000360f:	lea    r8,[rsp+0x2da0]
   140003617:	xor    edx,edx
   140003619:	mov    ecx,0x400
   14000361e:	call   QWORD PTR [rip+0xc9dc]        # 0x140010000
   140003624:	test   eax,eax
   140003626:	jne    0x14000368b
   140003628:	mov    rbx,QWORD PTR [rsp+0x30]
   14000362d:	test   rbx,rbx
   140003630:	je     0x14000364c
   140003632:	mov    rax,QWORD PTR [rbx]
   140003635:	mov    rdi,QWORD PTR [rax+0x10]
   140003639:	mov    rcx,rdi
   14000363c:	call   QWORD PTR [rip+0xcf46]        # 0x140010588
   140003642:	mov    rcx,rbx
   140003645:	call   rdi
   140003647:	mov    QWORD PTR [rsp+0x30],rsi
   14000364c:	lea    rcx,[rsp+0x38]
   140003651:	call   0x14000a31c
   140003656:	lea    rcx,[rsp+0x50]
   14000365b:	call   0x14000a31c
   140003660:	lea    rcx,[rsp+0x48]
   140003665:	call   0x14000a31c
   14000366a:	lea    rcx,[rsp+0x58]
   14000366f:	call   0x14000a31c
   140003674:	lea    rcx,[rsp+0x60]
   140003679:	call   0x14000a31c
   14000367e:	lea    rcx,[rsp+0xe8]
   140003686:	jmp    0x1400033f4
   14000368b:	mov    r9,rdi
   14000368e:	mov    r8d,0xb
   140003694:	mov    edx,r13d
   140003697:	mov    rcx,r15
   14000369a:	call   0x14000b9b4
   14000369f:	mov    ecx,ebx
   1400036a1:	call   0x14000a3f8
   1400036a6:	mov    rdi,rax
   1400036a9:	mov    QWORD PTR [rsp+0xf8],rax
   1400036b1:	test   rax,rax
   1400036b4:	jne    0x140003719
   1400036b6:	mov    rbx,QWORD PTR [rsp+0x30]
   1400036bb:	test   rbx,rbx
   1400036be:	je     0x1400036da
   1400036c0:	mov    rax,QWORD PTR [rbx]
   1400036c3:	mov    rdi,QWORD PTR [rax+0x10]
   1400036c7:	mov    rcx,rdi
   1400036ca:	call   QWORD PTR [rip+0xceb8]        # 0x140010588
   1400036d0:	mov    rcx,rbx
   1400036d3:	call   rdi
   1400036d5:	mov    QWORD PTR [rsp+0x30],rsi
   1400036da:	lea    rcx,[rsp+0x38]
   1400036df:	call   0x14000a31c
   1400036e4:	lea    rcx,[rsp+0x50]
   1400036e9:	call   0x14000a31c
   1400036ee:	lea    rcx,[rsp+0x48]
   1400036f3:	call   0x14000a31c
   1400036f8:	lea    rcx,[rsp+0x58]
   1400036fd:	call   0x14000a31c
   140003702:	lea    rcx,[rsp+0x60]
   140003707:	call   0x14000a31c
   14000370c:	lea    rcx,[rsp+0xe8]
   140003714:	jmp    0x1400034a9
   140003719:	mov    r8d,0xa
   14000371f:	lea    rdx,[rsp+0x2da0]
   140003727:	mov    ecx,DWORD PTR [rsp+0x188]
   14000372e:	call   QWORD PTR [rip+0xcda4]        # 0x1400104d8
   140003734:	mov    DWORD PTR [rsp+0x28],0xff
   14000373c:	mov    QWORD PTR [rsp+0x20],rdi
   140003741:	mov    r9,QWORD PTR [rsp+0x38]
   140003746:	lea    r8,[rsp+0x2da0]
   14000374e:	xor    edx,edx
   140003750:	mov    ecx,0x400
   140003755:	call   QWORD PTR [rip+0xc8a5]        # 0x140010000
   14000375b:	test   eax,eax
   14000375d:	jne    0x1400037cf
   14000375f:	mov    rbx,QWORD PTR [rsp+0x30]
   140003764:	test   rbx,rbx
   140003767:	je     0x140003783
   140003769:	mov    rax,QWORD PTR [rbx]
   14000376c:	mov    rdi,QWORD PTR [rax+0x10]
   140003770:	mov    rcx,rdi
   140003773:	call   QWORD PTR [rip+0xce0f]        # 0x140010588
   140003779:	mov    rcx,rbx
   14000377c:	call   rdi
   14000377e:	mov    QWORD PTR [rsp+0x30],rsi
   140003783:	lea    rcx,[rsp+0x38]
   140003788:	call   0x14000a31c
   14000378d:	lea    rcx,[rsp+0x50]
   140003792:	call   0x14000a31c
   140003797:	lea    rcx,[rsp+0x48]
   14000379c:	call   0x14000a31c
   1400037a1:	lea    rcx,[rsp+0x58]
   1400037a6:	call   0x14000a31c
   1400037ab:	lea    rcx,[rsp+0x60]
   1400037b0:	call   0x14000a31c
   1400037b5:	lea    rcx,[rsp+0xe8]
   1400037bd:	call   0x14000a31c
   1400037c2:	lea    rcx,[rsp+0xf8]
   1400037ca:	jmp    0x1400033f4
   1400037cf:	mov    r9,rdi
   1400037d2:	mov    r8d,0xc
   1400037d8:	mov    edx,r13d
   1400037db:	mov    rcx,r15
   1400037de:	call   0x14000b9b4
   1400037e3:	lea    r9,[rsp+0x1a0]
   1400037eb:	mov    r8d,0xd
   1400037f1:	mov    edx,r13d
   1400037f4:	mov    rcx,r15
   1400037f7:	call   0x14000b9b4
   1400037fc:	lea    r9,[rsp+0x33a0]
   140003804:	mov    r8d,0xe
   14000380a:	mov    edx,r13d
   14000380d:	mov    rcx,r15
   140003810:	call   0x14000b9b4
   140003815:	mov    ecx,ebx
   140003817:	call   0x14000a3f8
   14000381c:	mov    rdi,rax
   14000381f:	mov    QWORD PTR [rsp+0x118],rax
   140003827:	test   rax,rax
   14000382a:	jne    0x14000389c
   14000382c:	mov    rbx,QWORD PTR [rsp+0x30]
   140003831:	test   rbx,rbx
   140003834:	je     0x140003850
   140003836:	mov    rax,QWORD PTR [rbx]
   140003839:	mov    rdi,QWORD PTR [rax+0x10]
   14000383d:	mov    rcx,rdi
   140003840:	call   QWORD PTR [rip+0xcd42]        # 0x140010588
   140003846:	mov    rcx,rbx
   140003849:	call   rdi
   14000384b:	mov    QWORD PTR [rsp+0x30],rsi
   140003850:	lea    rcx,[rsp+0x38]
   140003855:	call   0x14000a31c
   14000385a:	lea    rcx,[rsp+0x50]
   14000385f:	call   0x14000a31c
   140003864:	lea    rcx,[rsp+0x48]
   140003869:	call   0x14000a31c
   14000386e:	lea    rcx,[rsp+0x58]
   140003873:	call   0x14000a31c
   140003878:	lea    rcx,[rsp+0x60]
   14000387d:	call   0x14000a31c
   140003882:	lea    rcx,[rsp+0xe8]
   14000388a:	call   0x14000a31c
   14000388f:	lea    rcx,[rsp+0xf8]
   140003897:	jmp    0x1400034a9
   14000389c:	mov    r8d,0xa
   1400038a2:	lea    rdx,[rsp+0x2da0]
   1400038aa:	mov    ecx,DWORD PTR [rsp+0x190]
   1400038b1:	call   QWORD PTR [rip+0xcc21]        # 0x1400104d8
   1400038b7:	mov    DWORD PTR [rsp+0x28],0xff
   1400038bf:	mov    QWORD PTR [rsp+0x20],rdi
   1400038c4:	mov    r9,QWORD PTR [rsp+0x38]
   1400038c9:	lea    r8,[rsp+0x2da0]
   1400038d1:	xor    edx,edx
   1400038d3:	mov    ecx,0x400
   1400038d8:	call   QWORD PTR [rip+0xc722]        # 0x140010000
   1400038de:	test   eax,eax
   1400038e0:	jne    0x14000395f
   1400038e2:	mov    rbx,QWORD PTR [rsp+0x30]
   1400038e7:	test   rbx,rbx
   1400038ea:	je     0x140003906
   1400038ec:	mov    rax,QWORD PTR [rbx]
   1400038ef:	mov    rdi,QWORD PTR [rax+0x10]
   1400038f3:	mov    rcx,rdi
   1400038f6:	call   QWORD PTR [rip+0xcc8c]        # 0x140010588
   1400038fc:	mov    rcx,rbx
   1400038ff:	call   rdi
   140003901:	mov    QWORD PTR [rsp+0x30],rsi
   140003906:	lea    rcx,[rsp+0x38]
   14000390b:	call   0x14000a31c
   140003910:	lea    rcx,[rsp+0x50]
   140003915:	call   0x14000a31c
   14000391a:	lea    rcx,[rsp+0x48]
   14000391f:	call   0x14000a31c
   140003924:	lea    rcx,[rsp+0x58]
   140003929:	call   0x14000a31c
   14000392e:	lea    rcx,[rsp+0x60]
   140003933:	call   0x14000a31c
   140003938:	lea    rcx,[rsp+0xe8]
   140003940:	call   0x14000a31c
   140003945:	lea    rcx,[rsp+0xf8]
   14000394d:	call   0x14000a31c
   140003952:	lea    rcx,[rsp+0x118]
   14000395a:	jmp    0x1400033f4
   14000395f:	mov    r9,rdi
   140003962:	mov    r8d,0xf
   140003968:	mov    edx,r13d
   14000396b:	mov    rcx,r15
   14000396e:	call   0x14000b9b4
   140003973:	mov    edi,DWORD PTR [rsp+0xb0]
   14000397a:	cmp    DWORD PTR [rsp+0x100],r14d
   140003982:	jne    0x1400039a4
   140003984:	mov    eax,edi
   140003986:	and    al,0xf
   140003988:	cmp    al,r14b
   14000398b:	jne    0x1400039a4
   14000398d:	mov    ecx,r14d
   140003990:	call   0x14000ebd8
   140003995:	mov    rcx,rax
   140003998:	lea    rdx,[rip+0xcdd9]        # 0x140010778
   14000399f:	call   0x14000999c
   1400039a4:	cmp    DWORD PTR [rsp+0x108],r14d
   1400039ac:	jne    0x1400039d5
   1400039ae:	mov    eax,edi
   1400039b0:	and    eax,0xf
   1400039b3:	cmp    al,0x3
   1400039b5:	je     0x1400039d5
   1400039b7:	mov    ecx,r14d
   1400039ba:	call   0x14000ebd8
   1400039bf:	mov    rcx,rax
   1400039c2:	lea    rdx,[rip+0xcdaf]        # 0x140010778
   1400039c9:	call   0x14000999c
   1400039ce:	mov    DWORD PTR [rsp+0x108],esi
   1400039d5:	mov    r8d,edi
   1400039d8:	mov    r9,r15
   1400039db:	lea    rdx,[rsp+0x3a0]
   1400039e3:	mov    ecx,0x10
   1400039e8:	cmp    DWORD PTR [rsp+0x3608],esi
   1400039ef:	je     0x1400039f6
   1400039f1:	bts    r8d,0xc
   1400039f6:	call   0x14000cd98
   1400039fb:	mov    DWORD PTR [rsp+0x3608],r14d
   140003a03:	mov    DWORD PTR [rsp+0x100],r14d
   140003a0b:	mov    DWORD PTR [rsp+0x104],r14d
   140003a13:	lea    rcx,[rsp+0x48]
   140003a18:	call   0x14000a31c
   140003a1d:	lea    rcx,[rsp+0x50]
   140003a22:	call   0x14000a31c
   140003a27:	lea    rcx,[rsp+0x58]
   140003a2c:	call   0x14000a31c
   140003a31:	lea    rcx,[rsp+0x60]
   140003a36:	call   0x14000a31c
   140003a3b:	lea    rcx,[rsp+0x110]
   140003a43:	call   0x14000a31c
   140003a48:	lea    rcx,[rsp+0xf8]
   140003a50:	call   0x14000a31c
   140003a55:	lea    rcx,[rsp+0x118]
   140003a5d:	call   0x14000a31c
   140003a62:	lea    rcx,[rsp+0xe8]
   140003a6a:	call   0x14000a31c
   140003a6f:	lea    rcx,[rsp+0x68]
   140003a74:	call   0x14000a31c
   140003a79:	lea    rcx,[rsp+0x70]
   140003a7e:	call   0x14000a31c
   140003a83:	lea    rcx,[rsp+0x80]
   140003a8b:	call   0x14000a31c
   140003a90:	mov    rbx,QWORD PTR [rsp+0x30]
   140003a95:	test   rbx,rbx
   140003a98:	je     0x140003be6
   140003a9e:	mov    rax,QWORD PTR [rbx]
   140003aa1:	mov    rdi,QWORD PTR [rax+0x10]
   140003aa5:	mov    rcx,rdi
   140003aa8:	call   QWORD PTR [rip+0xcada]        # 0x140010588
   140003aae:	mov    rcx,rbx
   140003ab1:	call   rdi
   140003ab3:	mov    QWORD PTR [rsp+0x30],rsi
   140003ab8:	jmp    0x140003be6
   140003abd:	call   0x14000e788
   140003ac2:	nop
   140003ac3:	cmp    DWORD PTR [r15],r12d
   140003ac6:	jne    0x140003acd
   140003ac8:	mov    eax,r14d
   140003acb:	jmp    0x140003acf
   140003acd:	mov    eax,esi
   140003acf:	test   eax,eax
   140003ad1:	jne    0x140003ad5
   140003ad3:	jmp    0x140003adf
   140003ad5:	lea    rcx,[rsp+0x40]
   140003ada:	call   0x14000b23c
   140003adf:	lea    rcx,[rsp+0x50]
   140003ae4:	call   0x14000a31c
   140003ae9:	lea    rcx,[rsp+0x48]
   140003aee:	call   0x14000a31c
   140003af3:	nop
   140003af4:	mov    rdi,QWORD PTR [rsp+0xa8]
   140003afc:	jmp    0x1400028ef
   140003b01:	xor    esi,esi
   140003b03:	lea    r14d,[rsi+0x1]
   140003b07:	mov    rdi,QWORD PTR [rsp+0x128]
   140003b0f:	mov    QWORD PTR [rsp+0xa8],rdi
   140003b17:	mov    r13,QWORD PTR [rsp+0x138]
   140003b1f:	mov    QWORD PTR [rsp+0x120],r13
   140003b27:	jmp    0x1400028e9
   140003b2c:	lea    rcx,[rsp+0x78]
   140003b31:	call   QWORD PTR [rip+0xc881]        # 0x1400103b8
   140003b37:	nop
   140003b38:	lea    rcx,[rsp+0xc8]
   140003b40:	call   QWORD PTR [rip+0xc872]        # 0x1400103b8
   140003b46:	nop
   140003b47:	lea    rcx,[rsp+0xb8]
   140003b4f:	call   QWORD PTR [rip+0xc863]        # 0x1400103b8
   140003b55:	nop
   140003b56:	lea    rcx,[rsp+0x98]
   140003b5e:	call   QWORD PTR [rip+0xc854]        # 0x1400103b8
   140003b64:	nop
   140003b65:	lea    rcx,[rsp+0x90]
   140003b6d:	call   QWORD PTR [rip+0xc845]        # 0x1400103b8
   140003b73:	nop
   140003b74:	lea    rcx,[rsp+0xa0]
   140003b7c:	call   QWORD PTR [rip+0xc836]        # 0x1400103b8
   140003b82:	nop
   140003b83:	lea    rcx,[rsp+0x88]
   140003b8b:	call   QWORD PTR [rip+0xc827]        # 0x1400103b8
   140003b91:	nop
   140003b92:	lea    rcx,[rsp+0xc0]
   140003b9a:	call   QWORD PTR [rip+0xc818]        # 0x1400103b8
   140003ba0:	nop
   140003ba1:	lea    rcx,[rsp+0xd0]
   140003ba9:	call   QWORD PTR [rip+0xc809]        # 0x1400103b8
   140003baf:	nop
   140003bb0:	lea    rcx,[rsp+0xe0]
   140003bb8:	call   QWORD PTR [rip+0xc7fa]        # 0x1400103b8
   140003bbe:	nop
   140003bbf:	lea    rcx,[rsp+0xd8]
   140003bc7:	call   QWORD PTR [rip+0xc7eb]        # 0x1400103b8
   140003bcd:	nop
   140003bce:	mov    rcx,QWORD PTR [rsp+0x128]
   140003bd6:	call   QWORD PTR [rip+0xc7dc]        # 0x1400103b8
   140003bdc:	mov    eax,0x1
   140003be1:	jmp    0x140003d5f
   140003be6:	mov    r13,QWORD PTR [rsp+0x120]
   140003bee:	cmp    DWORD PTR [r15],r12d
   140003bf1:	mov    rdi,QWORD PTR [rsp+0xa8]
   140003bf9:	jne    0x1400028ef
   140003bff:	mov    rcx,r15
   140003c02:	call   0x14000b1d4
   140003c07:	lea    rcx,[rsp+0x40]
   140003c0c:	call   0x14000a31c
   140003c11:	jmp    0x1400028ef
   140003c16:	lea    rcx,[rsp+0x38]
   140003c1b:	call   0x14000a31c
   140003c20:	lea    rcx,[rsp+0x48]
   140003c25:	call   0x14000a31c
   140003c2a:	lea    rcx,[rsp+0x50]
   140003c2f:	call   0x14000a31c
   140003c34:	lea    rcx,[rsp+0x58]
   140003c39:	call   0x14000a31c
   140003c3e:	lea    rcx,[rsp+0x60]
   140003c43:	call   0x14000a31c
   140003c48:	lea    rcx,[rsp+0x110]
   140003c50:	call   0x14000a31c
   140003c55:	lea    rcx,[rsp+0xf8]
   140003c5d:	call   0x14000a31c
   140003c62:	lea    rcx,[rsp+0x118]
   140003c6a:	call   0x14000a31c
   140003c6f:	lea    rcx,[rsp+0xe8]
   140003c77:	call   0x14000a31c
   140003c7c:	lea    rcx,[rsp+0x68]
   140003c81:	call   0x14000a31c
   140003c86:	lea    rcx,[rsp+0x70]
   140003c8b:	call   0x14000a31c
   140003c90:	lea    rcx,[rsp+0x80]
   140003c98:	call   0x14000a31c
   140003c9d:	cmp    DWORD PTR [rsp+0x104],r14d
   140003ca5:	jne    0x140003caf
   140003ca7:	mov    r14d,esi
   140003caa:	jmp    0x140003171
   140003caf:	lea    rcx,[rsp+0x78]
   140003cb4:	call   QWORD PTR [rip+0xc6fe]        # 0x1400103b8
   140003cba:	nop
   140003cbb:	lea    rcx,[rsp+0xc8]
   140003cc3:	call   QWORD PTR [rip+0xc6ef]        # 0x1400103b8
   140003cc9:	nop
   140003cca:	lea    rcx,[rsp+0xb8]
   140003cd2:	call   QWORD PTR [rip+0xc6e0]        # 0x1400103b8
   140003cd8:	nop
   140003cd9:	lea    rcx,[rsp+0x98]
   140003ce1:	call   QWORD PTR [rip+0xc6d1]        # 0x1400103b8
   140003ce7:	nop
   140003ce8:	lea    rcx,[rsp+0x90]
   140003cf0:	call   QWORD PTR [rip+0xc6c2]        # 0x1400103b8
   140003cf6:	nop
   140003cf7:	lea    rcx,[rsp+0xa0]
   140003cff:	call   QWORD PTR [rip+0xc6b3]        # 0x1400103b8
   140003d05:	nop
   140003d06:	lea    rcx,[rsp+0x88]
   140003d0e:	call   QWORD PTR [rip+0xc6a4]        # 0x1400103b8
   140003d14:	nop
   140003d15:	lea    rcx,[rsp+0xc0]
   140003d1d:	call   QWORD PTR [rip+0xc695]        # 0x1400103b8
   140003d23:	nop
   140003d24:	lea    rcx,[rsp+0xd0]
   140003d2c:	call   QWORD PTR [rip+0xc686]        # 0x1400103b8
   140003d32:	nop
   140003d33:	lea    rcx,[rsp+0xe0]
   140003d3b:	call   QWORD PTR [rip+0xc677]        # 0x1400103b8
   140003d41:	nop
   140003d42:	lea    rcx,[rsp+0xd8]
   140003d4a:	call   QWORD PTR [rip+0xc668]        # 0x1400103b8
   140003d50:	nop
   140003d51:	mov    rcx,rdi
   140003d54:	call   QWORD PTR [rip+0xc65e]        # 0x1400103b8
   140003d5a:	mov    eax,0x4
   140003d5f:	mov    rcx,QWORD PTR [rsp+0x35a0]
   140003d67:	xor    rcx,rsp
   140003d6a:	call   0x14000e560
   140003d6f:	add    rsp,0x35b0
   140003d76:	pop    r15
   140003d78:	pop    r14
   140003d7a:	pop    r13
   140003d7c:	pop    r12
   140003d7e:	pop    rdi
   140003d7f:	pop    rsi
   140003d80:	pop    rbx
   140003d81:	ret    
   140003d82:	int3   
   140003d83:	int3   
   140003d84:	int3   
   140003d85:	int3   
   140003d86:	int3   
   140003d87:	int3   
   140003d88:	mov    QWORD PTR [rsp+0x8],rbx
   140003d8d:	push   rbp
   140003d8e:	push   rsi
   140003d8f:	push   rdi
   140003d90:	push   r12
   140003d92:	push   r13
   140003d94:	push   r14
   140003d96:	push   r15
   140003d98:	lea    rbp,[rsp-0x4c0]
   140003da0:	sub    rsp,0x5c0
   140003da7:	mov    rax,QWORD PTR [rip+0x1125a]        # 0x140015008
   140003dae:	xor    rax,rsp
   140003db1:	mov    QWORD PTR [rbp+0x4b0],rax
   140003db8:	mov    rsi,r8
   140003dbb:	mov    DWORD PTR [rsp+0x40],r9d
   140003dc0:	mov    rbx,rdx
   140003dc3:	mov    r14,rcx
   140003dc6:	xor    r13d,r13d
   140003dc9:	lea    rcx,[rbp+0x4]
   140003dcd:	xor    edx,edx
   140003dcf:	mov    DWORD PTR [rbp+0x0],r13d
   140003dd3:	mov    r8d,0x1fa
   140003dd9:	call   0x14000ed52
   140003dde:	mov    r12d,0xff
   140003de4:	lea    rdx,[rip+0xc895]        # 0x140010680
   140003deb:	mov    r8d,r12d
   140003dee:	lea    rcx,[rbp+0x0]
   140003df2:	call   0x140009774
   140003df7:	xor    edx,edx
   140003df9:	mov    WORD PTR [rbp+0x2b0],r13w
   140003e01:	mov    r8d,0x1fc
   140003e07:	lea    rcx,[rbp+0x2b2]
   140003e0e:	call   0x14000ed52
   140003e13:	mov    r8d,r12d
   140003e16:	lea    rcx,[rbp+0x2b0]
   140003e1d:	mov    rdx,rbx
   140003e20:	call   0x140009774
   140003e25:	lea    rdx,[rip+0xca80]        # 0x1400108ac
   140003e2c:	lea    rcx,[rbp+0x2b0]
   140003e33:	call   QWORD PTR [rip+0xc697]        # 0x1400104d0
   140003e39:	mov    r15,rax
   140003e3c:	or     rcx,0xffffffffffffffff
   140003e40:	inc    rcx
   140003e43:	cmp    WORD PTR [r14+rcx*2],r13w
   140003e48:	jne    0x140003e40
   140003e4a:	mov    edi,0x1
   140003e4f:	test   rcx,rcx
   140003e52:	je     0x140003ed2
   140003e54:	xor    r9d,r9d
   140003e57:	lea    rdx,[rip+0xca4e]        # 0x1400108ac
   140003e5e:	mov    r8d,edi
   140003e61:	mov    rcx,rbx
   140003e64:	call   0x140009154
   140003e69:	cmp    eax,0xffffffff
   140003e6c:	je     0x140004306
   140003e72:	cdqe   
   140003e74:	lea    rbx,[rbx+rax*2]
   140003e78:	test   rbx,rbx
   140003e7b:	je     0x140004306
   140003e81:	lea    edx,[rdi+0x23]
   140003e84:	mov    r8d,edi
   140003e87:	mov    rcx,rbx
   140003e8a:	call   QWORD PTR [rip+0xc638]        # 0x1400104c8
   140003e90:	mov    r8d,r12d
   140003e93:	lea    rcx,[rbp+0x0]
   140003e97:	mov    rdx,r14
   140003e9a:	call   0x140009818
   140003e9f:	mov    r8d,r12d
   140003ea2:	lea    rdx,[rip+0xc76f]        # 0x140010618
   140003ea9:	lea    rcx,[rbp+0x0]
   140003ead:	call   0x140009818
   140003eb2:	mov    r8d,r12d
   140003eb5:	lea    rcx,[rbp+0x0]
   140003eb9:	mov    rdx,r15
   140003ebc:	call   0x140009818
   140003ec1:	mov    r8d,r12d
   140003ec4:	lea    rcx,[rbp+0x0]
   140003ec8:	mov    rdx,rbx
   140003ecb:	call   0x140009818
   140003ed0:	jmp    0x140003ee1
   140003ed2:	mov    r8d,r12d
   140003ed5:	lea    rcx,[rbp+0x0]
   140003ed9:	mov    rdx,rbx
   140003edc:	call   0x140009774
   140003ee1:	lea    rcx,[rip+0xca90]        # 0x140010978
   140003ee8:	call   QWORD PTR [rip+0xc152]        # 0x140010040
   140003eee:	test   rax,rax
   140003ef1:	jne    0x140003ef8
   140003ef3:	mov    ebx,r13d
   140003ef6:	jmp    0x140003f6d
   140003ef8:	lea    rdx,[rip+0xca99]        # 0x140010998
   140003eff:	mov    rcx,rax
   140003f02:	call   QWORD PTR [rip+0xc140]        # 0x140010048
   140003f08:	mov    r14,rax
   140003f0b:	test   rax,rax
   140003f0e:	je     0x140003ef3
   140003f10:	call   QWORD PTR [rip+0xc13a]        # 0x140010050
   140003f16:	mov    rcx,r14
   140003f19:	mov    rbx,rax
   140003f1c:	call   QWORD PTR [rip+0xc666]        # 0x140010588
   140003f22:	lea    rdx,[rsp+0x48]
   140003f27:	mov    rcx,rbx
   140003f2a:	call   r14
   140003f2d:	test   eax,eax
   140003f2f:	je     0x140003ef3
   140003f31:	cmp    DWORD PTR [rsp+0x48],r13d
   140003f36:	je     0x140003ef3
   140003f38:	mov    rcx,QWORD PTR gs:0x30
   140003f41:	lea    rdx,[rbp+0x0]
   140003f45:	mov    ebx,edi
   140003f47:	movsxd rax,DWORD PTR [rcx+0x180c]
   140003f4e:	test   eax,eax
   140003f50:	jns    0x140003f55
   140003f52:	add    rcx,rax
   140003f55:	cmp    ecx,DWORD PTR [rcx+0x18]
   140003f58:	jne    0x140003f62
   140003f5a:	mov    DWORD PTR [rcx+0xe30],edx
   140003f60:	jmp    0x140003f6d
   140003f62:	lea    rax,[rbp+0x0]
   140003f66:	mov    QWORD PTR [rcx+0x14c0],rax
   140003f6d:	mov    QWORD PTR [rsp+0x30],r13
   140003f72:	lea    rcx,[rbp+0x0]
   140003f76:	mov    DWORD PTR [rsp+0x28],r13d
   140003f7b:	xor    r9d,r9d
   140003f7e:	mov    r8d,edi
   140003f81:	mov    DWORD PTR [rsp+0x20],0x3
   140003f89:	mov    edx,0x80000000
   140003f8e:	call   QWORD PTR [rip+0xc074]        # 0x140010008
   140003f94:	mov    QWORD PTR [rsp+0x58],rax
   140003f99:	mov    r12,rax
   140003f9c:	cmp    rax,0xffffffffffffffff
   140003fa0:	je     0x140004306
   140003fa6:	test   ebx,ebx
   140003fa8:	je     0x140003fd6
   140003faa:	mov    rcx,QWORD PTR gs:0x30
   140003fb3:	movsxd rax,DWORD PTR [rcx+0x180c]
   140003fba:	test   eax,eax
   140003fbc:	jns    0x140003fc1
   140003fbe:	add    rcx,rax
   140003fc1:	cmp    ecx,DWORD PTR [rcx+0x18]
   140003fc4:	jne    0x140003fcf
   140003fc6:	mov    DWORD PTR [rcx+0xe30],r13d
   140003fcd:	jmp    0x140003fd6
   140003fcf:	mov    QWORD PTR [rcx+0x14c0],r13
   140003fd6:	xor    r9d,r9d
   140003fd9:	mov    QWORD PTR [rsp+0x28],r13
   140003fde:	xor    edx,edx
   140003fe0:	mov    DWORD PTR [rsp+0x20],r13d
   140003fe5:	mov    rcx,r12
   140003fe8:	lea    r8d,[r9+0x2]
   140003fec:	call   QWORD PTR [rip+0xc01e]        # 0x140010010
   140003ff2:	mov    QWORD PTR [rsp+0x60],rax
   140003ff7:	mov    r14,rax
   140003ffa:	test   rax,rax
   140003ffd:	je     0x1400042fd
   140004003:	xor    r9d,r9d
   140004006:	mov    QWORD PTR [rsp+0x20],r13
   14000400b:	xor    r8d,r8d
   14000400e:	mov    rcx,rax
   140004011:	lea    edx,[r9+0x4]
   140004015:	call   QWORD PTR [rip+0xc005]        # 0x140010020
   14000401b:	mov    QWORD PTR [rsp+0x48],rax
   140004020:	mov    r13,rax
   140004023:	test   rax,rax
   140004026:	je     0x1400042f4
   14000402c:	mov    eax,0x5a4d
   140004031:	cmp    WORD PTR [r13+0x0],ax
   140004036:	jne    0x1400042eb
   14000403c:	movsxd r15,DWORD PTR [r13+0x3c]
   140004040:	add    r15,r13
   140004043:	cmp    DWORD PTR [r15],0x4550
   14000404a:	jne    0x1400042eb
   140004050:	cmp    DWORD PTR [rsp+0x40],0x2
   140004055:	lea    rbx,[r15+0x108]
   14000405c:	movzx  eax,WORD PTR [r15+0x6]
   140004061:	je     0x14000406a
   140004063:	lea    rbx,[r15+0xf8]
   14000406a:	mov    ecx,DWORD PTR [r15+0x38]
   14000406e:	test   eax,eax
   140004070:	je     0x14000416e
   140004076:	lea    r12d,[rcx-0x1]
   14000407a:	mov    QWORD PTR [rsp+0x40],rax
   14000407f:	not    r12d
   140004082:	mov    r13d,ecx
   140004085:	mov    eax,DWORD PTR [rbx+0x8]
   140004088:	test   eax,eax
   14000408a:	jne    0x14000408f
   14000408c:	mov    eax,DWORD PTR [rbx+0x10]
   14000408f:	lea    r14d,[r13-0x1]
   140004093:	mov    r8d,0x4
   140004099:	add    r14d,eax
   14000409c:	lea    rdx,[rip+0xc80d]        # 0x1400108b0
   1400040a3:	mov    rcx,rbx
   1400040a6:	and    r14d,r12d
   1400040a9:	call   QWORD PTR [rip+0xc411]        # 0x1400104c0
   1400040af:	test   eax,eax
   1400040b1:	jne    0x1400040bc
   1400040b3:	add    DWORD PTR [rsi+0xc],r14d
   1400040b7:	jmp    0x140004150
   1400040bc:	lea    rdx,[rip+0xc7f5]        # 0x1400108b8
   1400040c3:	mov    rcx,rbx
   1400040c6:	call   QWORD PTR [rip+0xc3ec]        # 0x1400104b8
   1400040cc:	test   eax,eax
   1400040ce:	jne    0x1400040d6
   1400040d0:	add    DWORD PTR [rsi+0x10],r14d
   1400040d4:	jmp    0x140004150
   1400040d6:	lea    rdx,[rip+0xc7e3]        # 0x1400108c0
   1400040dd:	mov    rcx,rbx
   1400040e0:	call   QWORD PTR [rip+0xc3d2]        # 0x1400104b8
   1400040e6:	test   eax,eax
   1400040e8:	jne    0x1400040f0
   1400040ea:	mov    DWORD PTR [rsi+0x8],r14d
   1400040ee:	jmp    0x140004150
   1400040f0:	lea    rdx,[rip+0xc7d1]        # 0x1400108c8
   1400040f7:	mov    rcx,rbx
   1400040fa:	call   QWORD PTR [rip+0xc3b8]        # 0x1400104b8
   140004100:	test   eax,eax
   140004102:	jne    0x14000410a
   140004104:	mov    DWORD PTR [rsi+0x18],r14d
   140004108:	jmp    0x140004150
   14000410a:	lea    rdx,[rip+0xc7bf]        # 0x1400108d0
   140004111:	mov    rcx,rbx
   140004114:	call   QWORD PTR [rip+0xc39e]        # 0x1400104b8
   14000411a:	test   eax,eax
   14000411c:	jne    0x140004124
   14000411e:	mov    DWORD PTR [rsi+0x14],r14d
   140004122:	jmp    0x140004150
   140004124:	lea    rdx,[rip+0xc7ad]        # 0x1400108d8
   14000412b:	mov    rcx,rbx
   14000412e:	call   QWORD PTR [rip+0xc384]        # 0x1400104b8
   140004134:	test   eax,eax
   140004136:	jne    0x14000413e
   140004138:	mov    DWORD PTR [rsi+0x1c],r14d
   14000413c:	jmp    0x140004150
   14000413e:	test   DWORD PTR [rbx+0x24],0x20000000
   140004145:	je     0x14000414c
   140004147:	add    DWORD PTR [rsi],r14d
   14000414a:	jmp    0x140004150
   14000414c:	add    DWORD PTR [rsi+0x4],r14d
   140004150:	add    rbx,0x28
   140004154:	sub    QWORD PTR [rsp+0x40],rdi
   140004159:	jne    0x140004085
   14000415f:	mov    r12,QWORD PTR [rsp+0x58]
   140004164:	mov    r13,QWORD PTR [rsp+0x48]
   140004169:	mov    r14,QWORD PTR [rsp+0x60]
   14000416e:	mov    eax,DWORD PTR [r15+0x8]
   140004172:	lea    rcx,[rsp+0x50]
   140004177:	mov    QWORD PTR [rsp+0x50],rax
   14000417c:	call   QWORD PTR [rip+0xc32e]        # 0x1400104b0
   140004182:	xor    ebx,ebx
   140004184:	mov    rdx,rax
   140004187:	test   rax,rax
   14000418a:	je     0x1400042e9
   140004190:	movzx  ecx,WORD PTR [rdx+0x14]
   140004194:	mov    eax,0x76c
   140004199:	add    cx,ax
   14000419c:	mov    WORD PTR [rsp+0x76],bx
   1400041a1:	movzx  eax,WORD PTR [rdx+0x8]
   1400041a5:	mov    WORD PTR [rsp+0x68],cx
   1400041aa:	movzx  ecx,WORD PTR [rdx+0x10]
   1400041ae:	add    cx,di
   1400041b1:	mov    WORD PTR [rsp+0x70],ax
   1400041b6:	movzx  eax,WORD PTR [rdx+0x4]
   1400041ba:	mov    WORD PTR [rsp+0x6a],cx
   1400041bf:	movzx  ecx,WORD PTR [rdx+0x18]
   1400041c3:	mov    WORD PTR [rsp+0x6c],cx
   1400041c8:	movzx  ecx,WORD PTR [rdx+0xc]
   1400041cc:	mov    WORD PTR [rsp+0x72],ax
   1400041d1:	movzx  eax,WORD PTR [rdx]
   1400041d4:	lea    edx,[rbx+0x55]
   1400041d7:	mov    WORD PTR [rsp+0x6e],cx
   1400041dc:	lea    rcx,[rbp+0x200]
   1400041e3:	mov    WORD PTR [rsp+0x74],ax
   1400041e8:	call   QWORD PTR [rip+0xbe72]        # 0x140010060
   1400041ee:	test   eax,eax
   1400041f0:	jle    0x140004208
   1400041f2:	xor    edx,edx
   1400041f4:	lea    rcx,[rbp+0x200]
   1400041fb:	call   QWORD PTR [rip+0xbe67]        # 0x140010068
   140004201:	mov    r10d,eax
   140004204:	test   eax,eax
   140004206:	jne    0x140004211
   140004208:	call   QWORD PTR [rip+0xbe62]        # 0x140010070
   14000420e:	mov    r10d,eax
   140004211:	mov    eax,0x3ff
   140004216:	movzx  ecx,r10w
   14000421a:	and    cx,ax
   14000421d:	mov    r15d,ebx
   140004220:	cmp    cx,0x39
   140004224:	ja     0x140004236
   140004226:	movabs rdx,0x200020040002002
   140004230:	bt     rdx,rcx
   140004234:	jb     0x14000423c
   140004236:	cmp    cx,0x49
   14000423a:	jne    0x140004245
   14000423c:	mov    r15d,edi
   14000423f:	mov    r10d,0x409
   140004245:	lea    rax,[rip+0xc694]        # 0x1400108e0
   14000424c:	mov    DWORD PTR [rsp+0x28],0x40
   140004254:	cmp    r15d,edi
   140004257:	lea    r8,[rsp+0x68]
   14000425c:	mov    r9,rbx
   14000425f:	mov    ecx,r10d
   140004262:	cmove  r9,rax
   140004266:	lea    rax,[rbp-0x80]
   14000426a:	xor    edx,edx
   14000426c:	mov    QWORD PTR [rsp+0x20],rax
   140004271:	call   QWORD PTR [rip+0xbdb9]        # 0x140010030
   140004277:	lea    rbx,[rsi+0x20]
   14000427b:	mov    r8d,0xff
   140004281:	mov    rcx,rbx
   140004284:	lea    rdx,[rbp-0x80]
   140004288:	call   0x140009774
   14000428d:	xor    r9d,r9d
   140004290:	mov    DWORD PTR [rsp+0x28],0x40
   140004298:	lea    rax,[rip+0xc659]        # 0x1400108f8
   14000429f:	cmp    r15d,edi
   1400042a2:	lea    r8,[rsp+0x68]
   1400042a7:	mov    ecx,0x400
   1400042ac:	cmove  r9,rax
   1400042b0:	lea    rax,[rbp-0x80]
   1400042b4:	xor    edx,edx
   1400042b6:	mov    QWORD PTR [rsp+0x20],rax
   1400042bb:	call   QWORD PTR [rip+0xbd77]        # 0x140010038
   1400042c1:	mov    edi,0xfe
   1400042c6:	lea    rdx,[rip+0xc63f]        # 0x14001090c
   1400042cd:	mov    r8d,edi
   1400042d0:	mov    rcx,rbx
   1400042d3:	call   0x140009818
   1400042d8:	mov    r8d,edi
   1400042db:	lea    rdx,[rbp-0x80]
   1400042df:	mov    rcx,rbx
   1400042e2:	call   0x140009818
   1400042e7:	xor    ebx,ebx
   1400042e9:	mov    edi,ebx
   1400042eb:	mov    rcx,r13
   1400042ee:	call   QWORD PTR [rip+0xbd34]        # 0x140010028
   1400042f4:	mov    rcx,r14
   1400042f7:	call   QWORD PTR [rip+0xbd1b]        # 0x140010018
   1400042fd:	mov    rcx,r12
   140004300:	call   QWORD PTR [rip+0xbd12]        # 0x140010018
   140004306:	mov    eax,edi
   140004308:	mov    rcx,QWORD PTR [rbp+0x4b0]
   14000430f:	xor    rcx,rsp
   140004312:	call   0x14000e560
   140004317:	mov    rbx,QWORD PTR [rsp+0x600]
   14000431f:	add    rsp,0x5c0
   140004326:	pop    r15
   140004328:	pop    r14
   14000432a:	pop    r13
   14000432c:	pop    r12
   14000432e:	pop    rdi
   14000432f:	pop    rsi
   140004330:	pop    rbp
   140004331:	ret    
   140004332:	int3   
   140004333:	int3   
   140004334:	int3   
   140004335:	int3   
   140004336:	int3   
   140004337:	int3   
   140004338:	mov    QWORD PTR [rsp+0x8],rbx
   14000433d:	push   rbp
   14000433e:	push   rsi
   14000433f:	push   rdi
   140004340:	push   r12
   140004342:	push   r13
   140004344:	push   r14
   140004346:	push   r15
   140004348:	lea    rbp,[rsp-0x300]
   140004350:	sub    rsp,0x400
   140004357:	mov    rax,QWORD PTR [rip+0x10caa]        # 0x140015008
   14000435e:	xor    rax,rsp
   140004361:	mov    QWORD PTR [rbp+0x2f0],rax
   140004368:	mov    rsi,QWORD PTR [rbp+0x368]
   14000436f:	xor    eax,eax
   140004371:	mov    rbx,QWORD PTR [rbp+0x360]
   140004378:	mov    rdi,r9
   14000437b:	mov    r14,QWORD PTR [rbp+0x380]
   140004382:	mov    r15,r8
   140004385:	mov    r13,rdx
   140004388:	mov    r12d,ecx
   14000438b:	test   rsi,rsi
   14000438e:	je     0x1400043a7
   140004390:	mov    r8d,0xfe
   140004396:	lea    rdx,[rip+0xc573]        # 0x140010910
   14000439d:	mov    rcx,rsi
   1400043a0:	call   0x140009774
   1400043a5:	xor    eax,eax
   1400043a7:	mov    QWORD PTR [rsp+0x78],rax
   1400043ac:	lea    rdx,[rip+0xc565]        # 0x140010918
   1400043b3:	mov    QWORD PTR [rbp-0x80],rax
   1400043b7:	lea    rcx,[rsp+0x30]
   1400043bc:	mov    DWORD PTR [rsp+0x70],eax
   1400043c0:	xorps  xmm0,xmm0
   1400043c3:	mov    QWORD PTR [rsp+0x58],rax
   1400043c8:	mov    r8d,0x8
   1400043ce:	mov    DWORD PTR [rbp-0x78],eax
   1400043d1:	mov    QWORD PTR [rbp-0x60],rax
   1400043d5:	mov    QWORD PTR [rsp+0x60],rax
   1400043da:	lea    rax,[rip+0xc533]        # 0x140010914
   1400043e1:	mov    QWORD PTR [rsp+0x50],rax
   1400043e6:	mov    DWORD PTR [rsp+0x38],0xa
   1400043ee:	mov    QWORD PTR [rsp+0x48],0x1
   1400043f7:	mov    QWORD PTR [rsp+0x40],0x20000
   140004400:	mov    QWORD PTR [rsp+0x68],r15
   140004405:	movdqa XMMWORD PTR [rbp-0x70],xmm0
   14000440a:	call   0x1400096ec
   14000440f:	xor    eax,eax
   140004411:	mov    QWORD PTR [rbp-0x48],0x120c0
   140004419:	mov    ecx,0x1
   14000441e:	mov    QWORD PTR [rbp-0x20],rax
   140004422:	mov    QWORD PTR [rbp-0x10],rax
   140004426:	lea    rdx,[rip+0xc4eb]        # 0x140010918
   14000442d:	mov    QWORD PTR [rbp-0x8],rax
   140004431:	xorps  xmm0,xmm0
   140004434:	mov    DWORD PTR [rbp-0x18],eax
   140004437:	mov    DWORD PTR [rbp+0x0],eax
   14000443a:	lea    r8d,[rcx+0x7]
   14000443e:	mov    QWORD PTR [rbp+0x8],rax
   140004442:	mov    QWORD PTR [rbp-0x28],rax
   140004446:	mov    QWORD PTR [rbp-0x30],rax
   14000444a:	lea    rax,[rip+0xc4cf]        # 0x140010920
   140004451:	mov    QWORD PTR [rbp-0x40],rcx
   140004455:	mov    DWORD PTR [rbp-0x50],ecx
   140004458:	lea    rcx,[rbp-0x58]
   14000445c:	movdqa XMMWORD PTR [rbp+0x10],xmm0
   140004461:	mov    QWORD PTR [rbp-0x38],rax
   140004465:	call   0x1400096ec
   14000446a:	xor    eax,eax
   14000446c:	mov    QWORD PTR [rbp+0x30],0x120c0
   140004474:	mov    ecx,0x1
   140004479:	mov    QWORD PTR [rbp+0x58],rax
   14000447d:	mov    QWORD PTR [rbp+0x68],rax
   140004481:	lea    rdx,[rip+0xc490]        # 0x140010918
   140004488:	mov    QWORD PTR [rbp+0x70],rax
   14000448c:	xorps  xmm0,xmm0
   14000448f:	mov    DWORD PTR [rbp+0x60],eax
   140004492:	mov    QWORD PTR [rbp+0x48],rax
   140004496:	lea    r8d,[rcx+0x7]
   14000449a:	mov    DWORD PTR [rbp+0x78],eax
   14000449d:	mov    QWORD PTR [rbp+0x90],rax
   1400044a4:	mov    QWORD PTR [rbp+0x50],rax
   1400044a8:	lea    rax,[rip+0xc475]        # 0x140010924
   1400044af:	mov    QWORD PTR [rbp+0x38],rcx
   1400044b3:	mov    DWORD PTR [rbp+0x28],ecx
   1400044b6:	lea    rcx,[rbp+0x20]
   1400044ba:	movdqa XMMWORD PTR [rbp+0x80],xmm0
   1400044c2:	mov    QWORD PTR [rbp+0x40],rax
   1400044c6:	call   0x1400096ec
   1400044cb:	xor    eax,eax
   1400044cd:	mov    QWORD PTR [rbp+0xa8],0x10
   1400044d8:	mov    ecx,0x1
   1400044dd:	mov    QWORD PTR [rbp+0xe0],rax
   1400044e4:	mov    QWORD PTR [rbp+0xe8],rax
   1400044eb:	lea    rdx,[rip+0xc426]        # 0x140010918
   1400044f2:	mov    DWORD PTR [rbp+0xf0],eax
   1400044f8:	xorps  xmm0,xmm0
   1400044fb:	mov    QWORD PTR [rbp+0xf8],rax
   140004502:	mov    QWORD PTR [rbp+0xc8],rax
   140004509:	lea    r8d,[rcx+0x7]
   14000450d:	mov    QWORD PTR [rbp+0xc0],rax
   140004514:	lea    rax,[rip+0xc40d]        # 0x140010928
   14000451b:	mov    QWORD PTR [rbp+0xb0],rcx
   140004522:	mov    DWORD PTR [rbp+0xa0],ecx
   140004528:	lea    rcx,[rbp+0x98]
   14000452f:	mov    QWORD PTR [rbp+0xd0],rsi
   140004536:	mov    DWORD PTR [rbp+0xd8],0xfe
   140004540:	movdqa XMMWORD PTR [rbp+0x100],xmm0
   140004548:	mov    QWORD PTR [rbp+0xb8],rax
   14000454f:	call   0x1400096ec
   140004554:	mov    rax,QWORD PTR [rbp+0x370]
   14000455b:	xor    ecx,ecx
   14000455d:	mov    edx,0x1
   140004562:	mov    QWORD PTR [rbp+0x148],rax
   140004569:	lea    rax,[rip+0xc3c0]        # 0x140010930
   140004570:	mov    QWORD PTR [rbp+0x128],rdx
   140004577:	mov    QWORD PTR [rbp+0x140],rax
   14000457e:	xorps  xmm0,xmm0
   140004581:	lea    rax,[rip+0xc3c8]        # 0x140010950
   140004588:	mov    QWORD PTR [rbp+0x158],rcx
   14000458f:	mov    QWORD PTR [rbp+0x160],rcx
   140004596:	lea    r8d,[rdx+0x7]
   14000459a:	mov    DWORD PTR [rbp+0x118],edx
   1400045a0:	lea    rdx,[rip+0xc371]        # 0x140010918
   1400045a7:	mov    DWORD PTR [rbp+0x168],ecx
   1400045ad:	mov    QWORD PTR [rbp+0x180],rcx
   1400045b4:	mov    QWORD PTR [rbp+0x138],rcx
   1400045bb:	lea    rcx,[rbp+0x110]
   1400045c2:	mov    QWORD PTR [rbp+0x130],rax
   1400045c9:	mov    QWORD PTR [rbp+0x120],0x2002
   1400045d4:	mov    DWORD PTR [rbp+0x150],0xfe
   1400045de:	movdqa XMMWORD PTR [rbp+0x170],xmm0
   1400045e6:	call   0x1400096ec
   1400045eb:	mov    rax,QWORD PTR [rbp+0x378]
   1400045f2:	lea    rdx,[rip+0xc31f]        # 0x140010918
   1400045f9:	xor    ecx,ecx
   1400045fb:	mov    QWORD PTR [rbp+0x1c0],rax
   140004602:	lea    rax,[rip+0xc023]        # 0x14001062c
   140004609:	mov    QWORD PTR [rbp+0x198],rcx
   140004610:	mov    QWORD PTR [rbp+0x1b8],rax
   140004617:	xorps  xmm0,xmm0
   14000461a:	lea    rax,[rip+0xc337]        # 0x140010958
   140004621:	mov    QWORD PTR [rbp+0x1d0],rcx
   140004628:	mov    QWORD PTR [rbp+0x1d8],rcx
   14000462f:	lea    r8d,[rcx+0x8]
   140004633:	mov    DWORD PTR [rbp+0x1c8],ecx
   140004639:	mov    DWORD PTR [rbp+0x1e0],ecx
   14000463f:	mov    QWORD PTR [rbp+0x1e8],rcx
   140004646:	mov    QWORD PTR [rbp+0x1b0],rcx
   14000464d:	lea    rcx,[rbp+0x188]
   140004654:	mov    QWORD PTR [rbp+0x1a8],rax
   14000465b:	mov    QWORD PTR [rbp+0x1a0],0x1
   140004666:	mov    DWORD PTR [rbp+0x190],0xa
   140004670:	movdqa XMMWORD PTR [rbp+0x1f0],xmm0
   140004678:	call   0x1400096ec
   14000467d:	mov    rax,QWORD PTR [rbp+0x388]
   140004684:	lea    rdx,[rip+0xc28d]        # 0x140010918
   14000468b:	xor    ecx,ecx
   14000468d:	mov    QWORD PTR [rbp+0x238],rax
   140004694:	lea    rax,[rip+0xbf91]        # 0x14001062c
   14000469b:	mov    QWORD PTR [rbp+0x210],rcx
   1400046a2:	mov    QWORD PTR [rbp+0x230],rax
   1400046a9:	xorps  xmm0,xmm0
   1400046ac:	lea    rax,[rip+0xc2ad]        # 0x140010960
   1400046b3:	mov    QWORD PTR [rbp+0x248],rcx
   1400046ba:	mov    QWORD PTR [rbp+0x250],rcx
   1400046c1:	lea    r8d,[rcx+0x8]
   1400046c5:	mov    DWORD PTR [rbp+0x240],ecx
   1400046cb:	mov    DWORD PTR [rbp+0x258],ecx
   1400046d1:	mov    QWORD PTR [rbp+0x270],rcx
   1400046d8:	mov    QWORD PTR [rbp+0x228],rcx
   1400046df:	lea    rcx,[rbp+0x200]
   1400046e6:	mov    QWORD PTR [rbp+0x220],rax
   1400046ed:	mov    QWORD PTR [rbp+0x218],0x1
   1400046f8:	mov    DWORD PTR [rbp+0x208],0xa
   140004702:	movdqa XMMWORD PTR [rbp+0x260],xmm0
   14000470a:	call   0x1400096ec
   14000470f:	mov    rax,QWORD PTR [rbp+0x390]
   140004716:	xor    ecx,ecx
   140004718:	mov    QWORD PTR [rbp+0x288],rcx
   14000471f:	xorps  xmm0,xmm0
   140004722:	mov    QWORD PTR [rbp+0x2b0],rax
   140004729:	mov    QWORD PTR [rbp+0x2c0],rcx
   140004730:	mov    QWORD PTR [rbp+0x2c8],rcx
   140004737:	mov    DWORD PTR [rbp+0x2b8],ecx
   14000473d:	mov    DWORD PTR [rbp+0x2d0],ecx
   140004743:	mov    QWORD PTR [rbp+0x2a0],rcx
   14000474a:	mov    QWORD PTR [rbp+0x2d8],rcx
   140004751:	mov    QWORD PTR [rbp+0x290],0x1
   14000475c:	mov    DWORD PTR [rbp+0x280],0xa
   140004766:	lea    rax,[rip+0xbebf]        # 0x14001062c
   14000476d:	movdqa XMMWORD PTR [rbp+0x2e0],xmm0
   140004775:	mov    QWORD PTR [rbp+0x2a8],rax
   14000477c:	lea    r8d,[rcx+0x8]
   140004780:	lea    rax,[rip+0xc1dd]        # 0x140010964
   140004787:	lea    rdx,[rip+0xc18a]        # 0x140010918
   14000478e:	mov    QWORD PTR [rbp+0x298],rax
   140004795:	lea    rcx,[rbp+0x278]
   14000479c:	call   0x1400096ec
   1400047a1:	lea    rax,[rsp+0x30]
   1400047a6:	mov    rdx,r13
   1400047a9:	mov    ecx,r12d
   1400047ac:	mov    QWORD PTR [rsp+0x20],rax
   1400047b1:	call   0x14000de2c
   1400047b6:	xor    r13d,r13d
   1400047b9:	test   eax,eax
   1400047bb:	jne    0x1400047e5
   1400047bd:	mov    ecx,0xca
   1400047c2:	call   0x140008af0
   1400047c7:	lea    ecx,[r13+0x2]
   1400047cb:	mov    rbx,rax
   1400047ce:	call   0x14000ebd8
   1400047d3:	mov    rcx,rax
   1400047d6:	mov    rdx,rbx
   1400047d9:	call   0x14000999c
   1400047de:	xor    eax,eax
   1400047e0:	jmp    0x14000499d
   1400047e5:	cmp    DWORD PTR [r15],0x1
   1400047e9:	jne    0x140004805
   1400047eb:	cmp    r12d,0x2
   1400047ef:	jle    0x140004805
   1400047f1:	mov    ecx,0x6b
   1400047f6:	call   0x140008af0
   1400047fb:	mov    rcx,rax
   1400047fe:	call   0x140008528
   140004803:	jmp    0x1400047de
   140004805:	mov    rax,QWORD PTR [rbp-0x20]
   140004809:	mov    ecx,DWORD PTR [rbp-0x3c]
   14000480c:	mov    QWORD PTR [rdi],rax
   14000480f:	mov    rax,QWORD PTR [rbp+0x58]
   140004813:	mov    QWORD PTR [rbx],rax
   140004816:	mov    eax,DWORD PTR [rbp+0x3c]
   140004819:	test   ecx,ecx
   14000481b:	jne    0x140004828
   14000481d:	test   eax,eax
   14000481f:	je     0x14000482c
   140004821:	mov    ecx,0x65
   140004826:	jmp    0x1400047f6
   140004828:	test   eax,eax
   14000482a:	jne    0x14000483c
   14000482c:	cmp    DWORD PTR [rbp+0xb4],r13d
   140004833:	je     0x14000483c
   140004835:	mov    ecx,0x66
   14000483a:	jmp    0x1400047f6
   14000483c:	test   ecx,ecx
   14000483e:	je     0x140004855
   140004840:	mov    rcx,QWORD PTR [rdi]
   140004843:	test   rcx,rcx
   140004846:	je     0x140004872
   140004848:	call   QWORD PTR [rip+0xb8fa]        # 0x140010148
   14000484e:	test   eax,eax
   140004850:	je     0x140004872
   140004852:	mov    eax,DWORD PTR [rbp+0x3c]
   140004855:	test   eax,eax
   140004857:	je     0x14000487c
   140004859:	mov    rcx,QWORD PTR [rbx]
   14000485c:	test   rcx,rcx
   14000485f:	je     0x14000486b
   140004861:	call   QWORD PTR [rip+0xb8e1]        # 0x140010148
   140004867:	test   eax,eax
   140004869:	jne    0x14000487c
   14000486b:	mov    ecx,0x78
   140004870:	jmp    0x1400047f6
   140004872:	mov    ecx,0x77
   140004877:	jmp    0x1400047f6
   14000487c:	cmp    DWORD PTR [rbp+0x12c],r13d
   140004883:	je     0x1400048bd
   140004885:	mov    ecx,0x12d
   14000488a:	call   0x140008af0
   14000488f:	mov    rcx,QWORD PTR [rbp+0x148]
   140004896:	xor    r9d,r9d
   140004899:	mov    rdx,rax
   14000489c:	lea    r15d,[r9+0x1]
   1400048a0:	mov    r8d,r15d
   1400048a3:	call   0x14000990c
   1400048a8:	test   eax,eax
   1400048aa:	jne    0x1400048c3
   1400048ac:	cmp    DWORD PTR [rbp+0x1a4],r13d
   1400048b3:	je     0x1400048c3
   1400048b5:	lea    ecx,[rax+0x76]
   1400048b8:	jmp    0x1400047f6
   1400048bd:	mov    r15d,0x1
   1400048c3:	cmp    DWORD PTR [rbp+0x294],r13d
   1400048ca:	je     0x1400048df
   1400048cc:	cmp    DWORD PTR [rbp+0x21c],r13d
   1400048d3:	je     0x1400048df
   1400048d5:	mov    ecx,0x74
   1400048da:	jmp    0x1400047f6
   1400048df:	mov    rcx,QWORD PTR [rdi]
   1400048e2:	lea    rdx,[rip+0xbd97]        # 0x140010680
   1400048e9:	mov    r8d,0x2
   1400048ef:	call   QWORD PTR [rip+0xb90b]        # 0x140010200
   1400048f5:	test   eax,eax
   1400048f7:	jne    0x14000492e
   1400048f9:	mov    rcx,QWORD PTR [rdi]
   1400048fc:	lea    r8d,[rax+0x3]
   140004900:	lea    rdx,[rip+0xc069]        # 0x140010970
   140004907:	call   QWORD PTR [rip+0xb8f3]        # 0x140010200
   14000490d:	test   eax,eax
   14000490f:	je     0x14000492e
   140004911:	mov    rcx,QWORD PTR [rdi]
   140004914:	lea    rbx,[rcx+0x4]
   140004918:	call   0x14000a5a0
   14000491d:	mov    rcx,QWORD PTR [rdi]
   140004920:	mov    rdx,rbx
   140004923:	movsxd r8,eax
   140004926:	shr    r8,1
   140004929:	call   0x140009774
   14000492e:	mov    rcx,QWORD PTR [rdi]
   140004931:	call   0x14000a660
   140004936:	test   eax,eax
   140004938:	jne    0x14000499a
   14000493a:	mov    eax,DWORD PTR [rbp+0xb4]
   140004940:	test   eax,eax
   140004942:	je     0x140004971
   140004944:	test   rsi,rsi
   140004947:	je     0x14000496d
   140004949:	xor    r9d,r9d
   14000494c:	lea    rdx,[rip+0xbfbd]        # 0x140010910
   140004953:	mov    r8d,r15d
   140004956:	mov    rcx,rsi
   140004959:	call   0x14000990c
   14000495e:	test   eax,eax
   140004960:	jne    0x140004967
   140004962:	mov    DWORD PTR [r14],r15d
   140004965:	jmp    0x14000499a
   140004967:	mov    eax,DWORD PTR [rbp+0xb4]
   14000496d:	test   eax,eax
   14000496f:	jne    0x14000499a
   140004971:	cmp    DWORD PTR [rbp-0x3c],r13d
   140004975:	jne    0x14000497d
   140004977:	cmp    DWORD PTR [rbp+0x3c],r13d
   14000497b:	je     0x14000499a
   14000497d:	mov    DWORD PTR [r14],r15d
   140004980:	test   rsi,rsi
   140004983:	je     0x14000499a
   140004985:	mov    r8d,0xfe
   14000498b:	lea    rdx,[rip+0xbc96]        # 0x140010628
   140004992:	mov    rcx,rsi
   140004995:	call   0x140009774
   14000499a:	mov    eax,r15d
   14000499d:	mov    rcx,QWORD PTR [rbp+0x2f0]
   1400049a4:	xor    rcx,rsp
   1400049a7:	call   0x14000e560
   1400049ac:	mov    rbx,QWORD PTR [rsp+0x440]
   1400049b4:	add    rsp,0x400
   1400049bb:	pop    r15
   1400049bd:	pop    r14
   1400049bf:	pop    r13
   1400049c1:	pop    r12
   1400049c3:	pop    rdi
   1400049c4:	pop    rsi
   1400049c5:	pop    rbp
   1400049c6:	ret    
   1400049c7:	int3   
   1400049c8:	int3   
   1400049c9:	int3   
   1400049ca:	int3   
   1400049cb:	int3   
   1400049cc:	int3   
   1400049cd:	int3   
   1400049ce:	int3   
   1400049cf:	int3   
   1400049d0:	mov    QWORD PTR [rsp+0x8],rbx
   1400049d5:	mov    QWORD PTR [rsp+0x10],rbp
   1400049da:	mov    QWORD PTR [rsp+0x18],rsi
   1400049df:	push   rdi
   1400049e0:	push   r12
   1400049e2:	push   r13
   1400049e4:	push   r14
   1400049e6:	push   r15
   1400049e8:	sub    rsp,0x20
   1400049ec:	mov    r12d,0x191
   1400049f2:	mov    ebp,r9d
   1400049f5:	mov    ecx,r12d
   1400049f8:	mov    rdi,r8
   1400049fb:	call   0x140008af0
   140004a00:	mov    rcx,rax
   140004a03:	call   0x140008d68
   140004a08:	lea    r15d,[r12-0x32]
   140004a0d:	movsxd rsi,eax
   140004a10:	mov    ecx,r15d
   140004a13:	call   0x140008af0
   140004a18:	or     rbx,0xffffffffffffffff
   140004a1c:	mov    rdx,rbx
   140004a1f:	xor    r14d,r14d
   140004a22:	inc    rdx
   140004a25:	cmp    WORD PTR [rax+rdx*2],r14w
   140004a2a:	jne    0x140004a22
   140004a2c:	cmp    rsi,rdx
   140004a2f:	jbe    0x140004a46
   140004a31:	mov    ecx,r12d
   140004a34:	call   0x140008af0
   140004a39:	mov    rcx,rax
   140004a3c:	call   0x140008d68
   140004a41:	movsxd rcx,eax
   140004a44:	jmp    0x140004a5b
   140004a46:	mov    ecx,r15d
   140004a49:	call   0x140008af0
   140004a4e:	mov    rcx,rbx
   140004a51:	inc    rcx
   140004a54:	cmp    WORD PTR [rax+rcx*2],r14w
   140004a59:	jne    0x140004a51
   140004a5b:	mov    DWORD PTR [rdi+0x200],ecx
   140004a61:	lea    rdx,[rip+0xbbc4]        # 0x14001062c
   140004a68:	mov    r13d,0x41
   140004a6e:	mov    DWORD PTR [rdi+0x204],0x1010
   140004a78:	mov    r8d,r13d
   140004a7b:	mov    QWORD PTR [rdi+0x290],r14
   140004a82:	lea    rcx,[rdi+0x208]
   140004a89:	mov    QWORD PTR [rdi+0x298],r14
   140004a90:	call   0x140009774
   140004a95:	mov    ecx,r15d
   140004a98:	call   0x140008af0
   140004a9d:	mov    rdx,rax
   140004aa0:	mov    r8d,0xfe
   140004aa6:	mov    rcx,rdi
   140004aa9:	call   0x140009774
   140004aae:	mov    r12d,0x192
   140004ab4:	mov    ecx,r12d
   140004ab7:	call   0x140008af0
   140004abc:	mov    rcx,rax
   140004abf:	call   0x140008d68
   140004ac4:	lea    r15d,[r12-0x32]
   140004ac9:	movsxd rsi,eax
   140004acc:	mov    ecx,r15d
   140004acf:	call   0x140008af0
   140004ad4:	mov    rdx,rbx
   140004ad7:	inc    rdx
   140004ada:	cmp    WORD PTR [rax+rdx*2],r14w
   140004adf:	jne    0x140004ad7
   140004ae1:	cmp    rsi,rdx
   140004ae4:	jbe    0x140004afb
   140004ae6:	mov    ecx,r12d
   140004ae9:	call   0x140008af0
   140004aee:	mov    rcx,rax
   140004af1:	call   0x140008d68
   140004af6:	movsxd rcx,eax
   140004af9:	jmp    0x140004b10
   140004afb:	mov    ecx,r15d
   140004afe:	call   0x140008af0
   140004b03:	mov    rcx,rbx
   140004b06:	inc    rcx
   140004b09:	cmp    WORD PTR [rax+rcx*2],r14w
   140004b0e:	jne    0x140004b06
   140004b10:	mov    DWORD PTR [rdi+0x4a0],ecx
   140004b16:	lea    rdx,[rip+0xbb0f]        # 0x14001062c
   140004b1d:	lea    rcx,[rdi+0x4a8]
   140004b24:	mov    DWORD PTR [rdi+0x4a4],0x10
   140004b2e:	mov    r8d,r13d
   140004b31:	mov    QWORD PTR [rdi+0x530],r14
   140004b38:	mov    QWORD PTR [rdi+0x538],r14
   140004b3f:	call   0x140009774
   140004b44:	mov    ecx,r15d
   140004b47:	call   0x140008af0
   140004b4c:	mov    rdx,rax
   140004b4f:	lea    rcx,[rdi+0x2a0]
   140004b56:	mov    r8d,0xfe
   140004b5c:	call   0x140009774
   140004b61:	mov    r15d,0x194
   140004b67:	mov    ecx,r15d
   140004b6a:	call   0x140008af0
   140004b6f:	mov    rcx,rax
   140004b72:	call   0x140008d68
   140004b77:	lea    r12d,[r15-0x32]
   140004b7b:	movsxd rsi,eax
   140004b7e:	mov    ecx,r12d
   140004b81:	call   0x140008af0
   140004b86:	mov    rdx,rbx
   140004b89:	inc    rdx
   140004b8c:	cmp    WORD PTR [rax+rdx*2],r14w
   140004b91:	jne    0x140004b89
   140004b93:	cmp    rsi,rdx
   140004b96:	jbe    0x140004bad
   140004b98:	mov    ecx,r15d
   140004b9b:	call   0x140008af0
   140004ba0:	mov    rcx,rax
   140004ba3:	call   0x140008d68
   140004ba8:	movsxd rcx,eax
   140004bab:	jmp    0x140004bc2
   140004bad:	mov    ecx,r12d
   140004bb0:	call   0x140008af0
   140004bb5:	mov    rcx,rbx
   140004bb8:	inc    rcx
   140004bbb:	cmp    WORD PTR [rax+rcx*2],r14w
   140004bc0:	jne    0x140004bb8
   140004bc2:	mov    DWORD PTR [rdi+0x740],ecx
   140004bc8:	lea    rdx,[rip+0xba5d]        # 0x14001062c
   140004bcf:	lea    rcx,[rdi+0x748]
   140004bd6:	mov    DWORD PTR [rdi+0x744],0x10
   140004be0:	mov    r8d,r13d
   140004be3:	mov    QWORD PTR [rdi+0x7d0],r14
   140004bea:	mov    QWORD PTR [rdi+0x7d8],r14
   140004bf1:	call   0x140009774
   140004bf6:	mov    ecx,r12d
   140004bf9:	call   0x140008af0
   140004bfe:	mov    rdx,rax
   140004c01:	lea    rcx,[rdi+0x540]
   140004c08:	mov    r8d,0xfe
   140004c0e:	call   0x140009774
   140004c13:	mov    r15d,0x195
   140004c19:	mov    ecx,r15d
   140004c1c:	call   0x140008af0
   140004c21:	mov    rcx,rax
   140004c24:	call   0x140008d68
   140004c29:	lea    r12d,[r15-0x32]
   140004c2d:	movsxd rsi,eax
   140004c30:	mov    ecx,r12d
   140004c33:	call   0x140008af0
   140004c38:	mov    rdx,rbx
   140004c3b:	inc    rdx
   140004c3e:	cmp    WORD PTR [rax+rdx*2],r14w
   140004c43:	jne    0x140004c3b
   140004c45:	cmp    rsi,rdx
   140004c48:	jbe    0x140004c5f
   140004c4a:	mov    ecx,r15d
   140004c4d:	call   0x140008af0
   140004c52:	mov    rcx,rax
   140004c55:	call   0x140008d68
   140004c5a:	movsxd rcx,eax
   140004c5d:	jmp    0x140004c74
   140004c5f:	mov    ecx,r12d
   140004c62:	call   0x140008af0
   140004c67:	mov    rcx,rbx
   140004c6a:	inc    rcx
   140004c6d:	cmp    WORD PTR [rax+rcx*2],r14w
   140004c72:	jne    0x140004c6a
   140004c74:	mov    eax,ebp
   140004c76:	mov    DWORD PTR [rdi+0x9e0],ecx
   140004c7c:	neg    eax
   140004c7e:	mov    QWORD PTR [rdi+0xa70],r14
   140004c85:	mov    r13d,0xfffff000
   140004c8b:	mov    QWORD PTR [rdi+0xa78],r14
   140004c92:	sbb    edx,edx
   140004c94:	lea    rcx,[rdi+0x9e8]
   140004c9b:	and    edx,r13d
   140004c9e:	mov    r8d,0x41
   140004ca4:	add    edx,0x1010
   140004caa:	mov    DWORD PTR [rdi+0x9e4],edx
   140004cb0:	lea    rdx,[rip+0xb975]        # 0x14001062c
   140004cb7:	call   0x140009774
   140004cbc:	mov    ecx,r12d
   140004cbf:	call   0x140008af0
   140004cc4:	mov    rdx,rax
   140004cc7:	lea    rcx,[rdi+0x7e0]
   140004cce:	mov    r8d,0xfe
   140004cd4:	call   0x140009774
   140004cd9:	mov    r15d,0x196
   140004cdf:	mov    ecx,r15d
   140004ce2:	call   0x140008af0
   140004ce7:	mov    rcx,rax
   140004cea:	call   0x140008d68
   140004cef:	lea    r12d,[r15-0x32]
   140004cf3:	movsxd rsi,eax
   140004cf6:	mov    ecx,r12d
   140004cf9:	call   0x140008af0
   140004cfe:	mov    rdx,rbx
   140004d01:	inc    rdx
   140004d04:	cmp    WORD PTR [rax+rdx*2],r14w
   140004d09:	jne    0x140004d01
   140004d0b:	cmp    rsi,rdx
   140004d0e:	jbe    0x140004d25
   140004d10:	mov    ecx,r15d
   140004d13:	call   0x140008af0
   140004d18:	mov    rcx,rax
   140004d1b:	call   0x140008d68
   140004d20:	movsxd rcx,eax
   140004d23:	jmp    0x140004d3a
   140004d25:	mov    ecx,r12d
   140004d28:	call   0x140008af0
   140004d2d:	mov    rcx,rbx
   140004d30:	inc    rcx
   140004d33:	cmp    WORD PTR [rax+rcx*2],r14w
   140004d38:	jne    0x140004d30
   140004d3a:	mov    DWORD PTR [rdi+0xc80],ecx
   140004d40:	lea    rdx,[rip+0xb8e5]        # 0x14001062c
   140004d47:	lea    rcx,[rdi+0xc88]
   140004d4e:	mov    DWORD PTR [rdi+0xc84],0x10
   140004d58:	mov    r8d,0x41
   140004d5e:	mov    QWORD PTR [rdi+0xd10],r14
   140004d65:	mov    QWORD PTR [rdi+0xd18],r14
   140004d6c:	call   0x140009774
   140004d71:	mov    ecx,r12d
   140004d74:	call   0x140008af0
   140004d79:	mov    rdx,rax
   140004d7c:	lea    rcx,[rdi+0xa80]
   140004d83:	mov    r8d,0xfe
   140004d89:	call   0x140009774
   140004d8e:	mov    r15d,0x197
   140004d94:	mov    ecx,r15d
   140004d97:	call   0x140008af0
   140004d9c:	mov    rcx,rax
   140004d9f:	call   0x140008d68
   140004da4:	lea    r12d,[r15-0x32]
   140004da8:	movsxd rsi,eax
   140004dab:	mov    ecx,r12d
   140004dae:	call   0x140008af0
   140004db3:	mov    rdx,rbx
   140004db6:	inc    rdx
   140004db9:	cmp    WORD PTR [rax+rdx*2],r14w
   140004dbe:	jne    0x140004db6
   140004dc0:	cmp    rsi,rdx
   140004dc3:	jbe    0x140004dda
   140004dc5:	mov    ecx,r15d
   140004dc8:	call   0x140008af0
   140004dcd:	mov    rcx,rax
   140004dd0:	call   0x140008d68
   140004dd5:	movsxd rcx,eax
   140004dd8:	jmp    0x140004def
   140004dda:	mov    ecx,r12d
   140004ddd:	call   0x140008af0
   140004de2:	mov    rcx,rbx
   140004de5:	inc    rcx
   140004de8:	cmp    WORD PTR [rax+rcx*2],r14w
   140004ded:	jne    0x140004de5
   140004def:	mov    eax,ebp
   140004df1:	mov    DWORD PTR [rdi+0xf20],ecx
   140004df7:	neg    eax
   140004df9:	mov    QWORD PTR [rdi+0xfb0],r14
   140004e00:	lea    rcx,[rdi+0xf28]
   140004e07:	mov    QWORD PTR [rdi+0xfb8],r14
   140004e0e:	sbb    edx,edx
   140004e10:	mov    r8d,0x41
   140004e16:	and    edx,r13d
   140004e19:	add    edx,0x1010
   140004e1f:	mov    DWORD PTR [rdi+0xf24],edx
   140004e25:	lea    rdx,[rip+0xb800]        # 0x14001062c
   140004e2c:	call   0x140009774
   140004e31:	mov    ecx,r12d
   140004e34:	call   0x140008af0
   140004e39:	mov    rdx,rax
   140004e3c:	lea    rcx,[rdi+0xd20]
   140004e43:	mov    r8d,0xfe
   140004e49:	call   0x140009774
   140004e4e:	mov    r15d,0x198
   140004e54:	mov    ecx,r15d
   140004e57:	call   0x140008af0
   140004e5c:	mov    rcx,rax
   140004e5f:	call   0x140008d68
   140004e64:	lea    r12d,[r15-0x32]
   140004e68:	movsxd rsi,eax
   140004e6b:	mov    ecx,r12d
   140004e6e:	call   0x140008af0
   140004e73:	mov    rdx,rbx
   140004e76:	inc    rdx
   140004e79:	cmp    WORD PTR [rax+rdx*2],r14w
   140004e7e:	jne    0x140004e76
   140004e80:	cmp    rsi,rdx
   140004e83:	jbe    0x140004e9a
   140004e85:	mov    ecx,r15d
   140004e88:	call   0x140008af0
   140004e8d:	mov    rcx,rax
   140004e90:	call   0x140008d68
   140004e95:	movsxd rcx,eax
   140004e98:	jmp    0x140004eaf
   140004e9a:	mov    ecx,r12d
   140004e9d:	call   0x140008af0
   140004ea2:	mov    rcx,rbx
   140004ea5:	inc    rcx
   140004ea8:	cmp    WORD PTR [rax+rcx*2],r14w
   140004ead:	jne    0x140004ea5
   140004eaf:	mov    eax,ebp
   140004eb1:	mov    DWORD PTR [rdi+0x11c0],ecx
   140004eb7:	neg    eax
   140004eb9:	mov    QWORD PTR [rdi+0x1250],r14
   140004ec0:	lea    rcx,[rdi+0x11c8]
   140004ec7:	mov    QWORD PTR [rdi+0x1258],r14
   140004ece:	sbb    edx,edx
   140004ed0:	mov    r8d,0x41
   140004ed6:	and    edx,r13d
   140004ed9:	add    edx,0x1010
   140004edf:	mov    DWORD PTR [rdi+0x11c4],edx
   140004ee5:	lea    rdx,[rip+0xb740]        # 0x14001062c
   140004eec:	call   0x140009774
   140004ef1:	mov    ecx,r12d
   140004ef4:	call   0x140008af0
   140004ef9:	mov    rdx,rax
   140004efc:	lea    rcx,[rdi+0xfc0]
   140004f03:	mov    r8d,0xfe
   140004f09:	call   0x140009774
   140004f0e:	mov    r15d,0x199
   140004f14:	mov    ecx,r15d
   140004f17:	call   0x140008af0
   140004f1c:	mov    rcx,rax
   140004f1f:	call   0x140008d68
   140004f24:	lea    r12d,[r15-0x32]
   140004f28:	movsxd rsi,eax
   140004f2b:	mov    ecx,r12d
   140004f2e:	call   0x140008af0
   140004f33:	mov    rdx,rbx
   140004f36:	inc    rdx
   140004f39:	cmp    WORD PTR [rax+rdx*2],r14w
   140004f3e:	jne    0x140004f36
   140004f40:	cmp    rsi,rdx
   140004f43:	jbe    0x140004f5a
   140004f45:	mov    ecx,r15d
   140004f48:	call   0x140008af0
   140004f4d:	mov    rcx,rax
   140004f50:	call   0x140008d68
   140004f55:	movsxd rcx,eax
   140004f58:	jmp    0x140004f6f
   140004f5a:	mov    ecx,r12d
   140004f5d:	call   0x140008af0
   140004f62:	mov    rcx,rbx
   140004f65:	inc    rcx
   140004f68:	cmp    WORD PTR [rax+rcx*2],r14w
   140004f6d:	jne    0x140004f65
   140004f6f:	mov    eax,ebp
   140004f71:	mov    DWORD PTR [rdi+0x1460],ecx
   140004f77:	neg    eax
   140004f79:	mov    QWORD PTR [rdi+0x14f0],r14
   140004f80:	lea    rcx,[rdi+0x1468]
   140004f87:	mov    QWORD PTR [rdi+0x14f8],r14
   140004f8e:	sbb    edx,edx
   140004f90:	mov    r8d,0x41
   140004f96:	and    edx,r13d
   140004f99:	add    edx,0x1010
   140004f9f:	mov    DWORD PTR [rdi+0x1464],edx
   140004fa5:	lea    rdx,[rip+0xb680]        # 0x14001062c
   140004fac:	call   0x140009774
   140004fb1:	mov    ecx,r12d
   140004fb4:	call   0x140008af0
   140004fb9:	mov    rdx,rax
   140004fbc:	lea    rcx,[rdi+0x1260]
   140004fc3:	mov    r8d,0xfe
   140004fc9:	call   0x140009774
   140004fce:	mov    r15d,0x19a
   140004fd4:	mov    ecx,r15d
   140004fd7:	call   0x140008af0
   140004fdc:	mov    rcx,rax
   140004fdf:	call   0x140008d68
   140004fe4:	lea    r12d,[r15-0x32]
   140004fe8:	movsxd rsi,eax
   140004feb:	mov    ecx,r12d
   140004fee:	call   0x140008af0
   140004ff3:	mov    rdx,rbx
   140004ff6:	inc    rdx
   140004ff9:	cmp    WORD PTR [rax+rdx*2],r14w
   140004ffe:	jne    0x140004ff6
   140005000:	cmp    rsi,rdx
   140005003:	jbe    0x14000501a
   140005005:	mov    ecx,r15d
   140005008:	call   0x140008af0
   14000500d:	mov    rcx,rax
   140005010:	call   0x140008d68
   140005015:	movsxd rcx,eax
   140005018:	jmp    0x14000502f
   14000501a:	mov    ecx,r12d
   14000501d:	call   0x140008af0
   140005022:	mov    rcx,rbx
   140005025:	inc    rcx
   140005028:	cmp    WORD PTR [rax+rcx*2],r14w
   14000502d:	jne    0x140005025
   14000502f:	mov    eax,ebp
   140005031:	mov    DWORD PTR [rdi+0x1700],ecx
   140005037:	neg    eax
   140005039:	mov    QWORD PTR [rdi+0x1790],r14
   140005040:	lea    rcx,[rdi+0x1708]
   140005047:	mov    QWORD PTR [rdi+0x1798],r14
   14000504e:	sbb    edx,edx
   140005050:	mov    r8d,0x41
   140005056:	and    edx,r13d
   140005059:	add    edx,0x1010
   14000505f:	mov    DWORD PTR [rdi+0x1704],edx
   140005065:	lea    rdx,[rip+0xb5c0]        # 0x14001062c
   14000506c:	call   0x140009774
   140005071:	mov    ecx,r12d
   140005074:	call   0x140008af0
   140005079:	mov    rdx,rax
   14000507c:	lea    rcx,[rdi+0x1500]
   140005083:	mov    r8d,0xfe
   140005089:	call   0x140009774
   14000508e:	mov    r15d,0x19b
   140005094:	mov    ecx,r15d
   140005097:	call   0x140008af0
   14000509c:	mov    rcx,rax
   14000509f:	call   0x140008d68
   1400050a4:	lea    r12d,[r15-0x32]
   1400050a8:	movsxd rsi,eax
   1400050ab:	mov    ecx,r12d
   1400050ae:	call   0x140008af0
   1400050b3:	mov    rdx,rbx
   1400050b6:	inc    rdx
   1400050b9:	cmp    WORD PTR [rax+rdx*2],r14w
   1400050be:	jne    0x1400050b6
   1400050c0:	cmp    rsi,rdx
   1400050c3:	jbe    0x1400050da
   1400050c5:	mov    ecx,r15d
   1400050c8:	call   0x140008af0
   1400050cd:	mov    rcx,rax
   1400050d0:	call   0x140008d68
   1400050d5:	movsxd rcx,eax
   1400050d8:	jmp    0x1400050ef
   1400050da:	mov    ecx,r12d
   1400050dd:	call   0x140008af0
   1400050e2:	mov    rcx,rbx
   1400050e5:	inc    rcx
   1400050e8:	cmp    WORD PTR [rax+rcx*2],r14w
   1400050ed:	jne    0x1400050e5
   1400050ef:	mov    eax,ebp
   1400050f1:	mov    DWORD PTR [rdi+0x19a0],ecx
   1400050f7:	neg    eax
   1400050f9:	mov    QWORD PTR [rdi+0x1a30],r14
   140005100:	lea    rcx,[rdi+0x19a8]
   140005107:	mov    QWORD PTR [rdi+0x1a38],r14
   14000510e:	sbb    edx,edx
   140005110:	mov    r8d,0x41
   140005116:	and    edx,r13d
   140005119:	add    edx,0x1010
   14000511f:	mov    DWORD PTR [rdi+0x19a4],edx
   140005125:	lea    rdx,[rip+0xb500]        # 0x14001062c
   14000512c:	call   0x140009774
   140005131:	mov    ecx,r12d
   140005134:	call   0x140008af0
   140005139:	mov    rdx,rax
   14000513c:	lea    rcx,[rdi+0x17a0]
   140005143:	mov    r8d,0xfe
   140005149:	call   0x140009774
   14000514e:	mov    r15d,0x19d
   140005154:	mov    ecx,r15d
   140005157:	call   0x140008af0
   14000515c:	mov    rcx,rax
   14000515f:	call   0x140008d68
   140005164:	lea    r12d,[r15-0x32]
   140005168:	movsxd rsi,eax
   14000516b:	mov    ecx,r12d
   14000516e:	call   0x140008af0
   140005173:	mov    rdx,rbx
   140005176:	inc    rdx
   140005179:	cmp    WORD PTR [rax+rdx*2],r14w
   14000517e:	jne    0x140005176
   140005180:	cmp    rsi,rdx
   140005183:	jbe    0x14000519a
   140005185:	mov    ecx,r15d
   140005188:	call   0x140008af0
   14000518d:	mov    rcx,rax
   140005190:	call   0x140008d68
   140005195:	movsxd rcx,eax
   140005198:	jmp    0x1400051af
   14000519a:	mov    ecx,r12d
   14000519d:	call   0x140008af0
   1400051a2:	mov    rcx,rbx
   1400051a5:	inc    rcx
   1400051a8:	cmp    WORD PTR [rax+rcx*2],r14w
   1400051ad:	jne    0x1400051a5
   1400051af:	mov    eax,ebp
   1400051b1:	mov    DWORD PTR [rdi+0x1c40],ecx
   1400051b7:	neg    eax
   1400051b9:	mov    QWORD PTR [rdi+0x1cd0],r14
   1400051c0:	lea    rcx,[rdi+0x1c48]
   1400051c7:	mov    QWORD PTR [rdi+0x1cd8],r14
   1400051ce:	sbb    edx,edx
   1400051d0:	mov    r8d,0x41
   1400051d6:	and    edx,r13d
   1400051d9:	add    edx,0x1010
   1400051df:	mov    DWORD PTR [rdi+0x1c44],edx
   1400051e5:	lea    rdx,[rip+0xb440]        # 0x14001062c
   1400051ec:	call   0x140009774
   1400051f1:	mov    ecx,r12d
   1400051f4:	call   0x140008af0
   1400051f9:	mov    rdx,rax
   1400051fc:	lea    rcx,[rdi+0x1a40]
   140005203:	mov    r8d,0xfe
   140005209:	call   0x140009774
   14000520e:	mov    r15d,0x19f
   140005214:	mov    ecx,r15d
   140005217:	call   0x140008af0
   14000521c:	mov    rcx,rax
   14000521f:	call   0x140008d68
   140005224:	lea    r12d,[r15-0x32]
   140005228:	movsxd rsi,eax
   14000522b:	mov    ecx,r12d
   14000522e:	call   0x140008af0
   140005233:	mov    rdx,rbx
   140005236:	inc    rdx
   140005239:	cmp    WORD PTR [rax+rdx*2],r14w
   14000523e:	jne    0x140005236
   140005240:	cmp    rsi,rdx
   140005243:	jbe    0x14000525a
   140005245:	mov    ecx,r15d
   140005248:	call   0x140008af0
   14000524d:	mov    rcx,rax
   140005250:	call   0x140008d68
   140005255:	movsxd rcx,eax
   140005258:	jmp    0x14000526f
   14000525a:	mov    ecx,r12d
   14000525d:	call   0x140008af0
   140005262:	mov    rcx,rbx
   140005265:	inc    rcx
   140005268:	cmp    WORD PTR [rax+rcx*2],r14w
   14000526d:	jne    0x140005265
   14000526f:	mov    eax,ebp
   140005271:	mov    DWORD PTR [rdi+0x1ee0],ecx
   140005277:	neg    eax
   140005279:	mov    QWORD PTR [rdi+0x1f70],r14
   140005280:	lea    rcx,[rdi+0x1ee8]
   140005287:	mov    QWORD PTR [rdi+0x1f78],r14
   14000528e:	sbb    edx,edx
   140005290:	mov    r8d,0x41
   140005296:	and    edx,r13d
   140005299:	add    edx,0x1010
   14000529f:	mov    DWORD PTR [rdi+0x1ee4],edx
   1400052a5:	lea    rdx,[rip+0xb380]        # 0x14001062c
   1400052ac:	call   0x140009774
   1400052b1:	mov    ecx,r12d
   1400052b4:	call   0x140008af0
   1400052b9:	mov    rdx,rax
   1400052bc:	lea    rcx,[rdi+0x1ce0]
   1400052c3:	mov    r8d,0xfe
   1400052c9:	call   0x140009774
   1400052ce:	mov    r15d,0x1a1
   1400052d4:	mov    ecx,r15d
   1400052d7:	call   0x140008af0
   1400052dc:	mov    rcx,rax
   1400052df:	call   0x140008d68
   1400052e4:	lea    r12d,[r15-0x32]
   1400052e8:	movsxd rsi,eax
   1400052eb:	mov    ecx,r12d
   1400052ee:	call   0x140008af0
   1400052f3:	mov    rdx,rbx
   1400052f6:	inc    rdx
   1400052f9:	cmp    WORD PTR [rax+rdx*2],r14w
   1400052fe:	jne    0x1400052f6
   140005300:	cmp    rsi,rdx
   140005303:	jbe    0x14000531a
   140005305:	mov    ecx,r15d
   140005308:	call   0x140008af0
   14000530d:	mov    rcx,rax
   140005310:	call   0x140008d68
   140005315:	movsxd rcx,eax
   140005318:	jmp    0x14000532f
   14000531a:	mov    ecx,r12d
   14000531d:	call   0x140008af0
   140005322:	mov    rcx,rbx
   140005325:	inc    rcx
   140005328:	cmp    WORD PTR [rax+rcx*2],r14w
   14000532d:	jne    0x140005325
   14000532f:	mov    eax,ebp
   140005331:	mov    DWORD PTR [rdi+0x2180],ecx
   140005337:	neg    eax
   140005339:	mov    QWORD PTR [rdi+0x2210],r14
   140005340:	lea    rcx,[rdi+0x2188]
   140005347:	mov    QWORD PTR [rdi+0x2218],r14
   14000534e:	sbb    edx,edx
   140005350:	mov    r8d,0x41
   140005356:	and    edx,r13d
   140005359:	add    edx,0x1010
   14000535f:	mov    DWORD PTR [rdi+0x2184],edx
   140005365:	lea    rdx,[rip+0xb2c0]        # 0x14001062c
   14000536c:	call   0x140009774
   140005371:	mov    ecx,r12d
   140005374:	call   0x140008af0
   140005379:	mov    rdx,rax
   14000537c:	lea    rcx,[rdi+0x1f80]
   140005383:	mov    r8d,0xfe
   140005389:	call   0x140009774
   14000538e:	mov    r15d,0x1a2
   140005394:	mov    ecx,r15d
   140005397:	call   0x140008af0
   14000539c:	mov    rcx,rax
   14000539f:	call   0x140008d68
   1400053a4:	lea    r12d,[r15-0x32]
   1400053a8:	movsxd rsi,eax
   1400053ab:	mov    ecx,r12d
   1400053ae:	call   0x140008af0
   1400053b3:	mov    rdx,rbx
   1400053b6:	inc    rdx
   1400053b9:	cmp    WORD PTR [rax+rdx*2],r14w
   1400053be:	jne    0x1400053b6
   1400053c0:	cmp    rsi,rdx
   1400053c3:	jbe    0x1400053da
   1400053c5:	mov    ecx,r15d
   1400053c8:	call   0x140008af0
   1400053cd:	mov    rcx,rax
   1400053d0:	call   0x140008d68
   1400053d5:	movsxd rcx,eax
   1400053d8:	jmp    0x1400053ef
   1400053da:	mov    ecx,r12d
   1400053dd:	call   0x140008af0
   1400053e2:	mov    rcx,rbx
   1400053e5:	inc    rcx
   1400053e8:	cmp    WORD PTR [rax+rcx*2],r14w
   1400053ed:	jne    0x1400053e5
   1400053ef:	mov    DWORD PTR [rdi+0x2420],ecx
   1400053f5:	lea    rdx,[rip+0xb230]        # 0x14001062c
   1400053fc:	lea    rcx,[rdi+0x2428]
   140005403:	mov    DWORD PTR [rdi+0x2424],0x10
   14000540d:	mov    r8d,0x41
   140005413:	mov    QWORD PTR [rdi+0x24b0],r14
   14000541a:	mov    QWORD PTR [rdi+0x24b8],r14
   140005421:	call   0x140009774
   140005426:	mov    ecx,r12d
   140005429:	call   0x140008af0
   14000542e:	mov    rdx,rax
   140005431:	lea    rcx,[rdi+0x2220]
   140005438:	mov    r8d,0xfe
   14000543e:	call   0x140009774
   140005443:	mov    r15d,0x1a3
   140005449:	mov    ecx,r15d
   14000544c:	call   0x140008af0
   140005451:	mov    rcx,rax
   140005454:	call   0x140008d68
   140005459:	lea    r12d,[r15-0x30]
   14000545d:	movsxd rsi,eax
   140005460:	mov    ecx,r12d
   140005463:	call   0x140008af0
   140005468:	mov    rdx,rbx
   14000546b:	inc    rdx
   14000546e:	cmp    WORD PTR [rax+rdx*2],r14w
   140005473:	jne    0x14000546b
   140005475:	cmp    rsi,rdx
   140005478:	jbe    0x14000548f
   14000547a:	mov    ecx,r15d
   14000547d:	call   0x140008af0
   140005482:	mov    rcx,rax
   140005485:	call   0x140008d68
   14000548a:	movsxd rcx,eax
   14000548d:	jmp    0x1400054a4
   14000548f:	mov    ecx,r12d
   140005492:	call   0x140008af0
   140005497:	mov    rcx,rbx
   14000549a:	inc    rcx
   14000549d:	cmp    WORD PTR [rax+rcx*2],r14w
   1400054a2:	jne    0x14000549a
   1400054a4:	mov    eax,ebp
   1400054a6:	mov    DWORD PTR [rdi+0x26c0],ecx
   1400054ac:	neg    eax
   1400054ae:	mov    QWORD PTR [rdi+0x2750],r14
   1400054b5:	lea    rcx,[rdi+0x26c8]
   1400054bc:	mov    QWORD PTR [rdi+0x2758],r14
   1400054c3:	sbb    edx,edx
   1400054c5:	mov    r8d,0x41
   1400054cb:	and    edx,r13d
   1400054ce:	add    edx,0x1010
   1400054d4:	mov    DWORD PTR [rdi+0x26c4],edx
   1400054da:	lea    rdx,[rip+0xb14b]        # 0x14001062c
   1400054e1:	call   0x140009774
   1400054e6:	mov    ecx,r12d
   1400054e9:	call   0x140008af0
   1400054ee:	mov    rdx,rax
   1400054f1:	lea    rcx,[rdi+0x24c0]
   1400054f8:	mov    r8d,0xfe
   1400054fe:	call   0x140009774
   140005503:	mov    r12d,0x1a4
   140005509:	mov    ecx,r12d
   14000550c:	call   0x140008af0
   140005511:	mov    rcx,rax
   140005514:	call   0x140008d68
   140005519:	lea    r15d,[r12-0x33]
   14000551e:	movsxd rsi,eax
   140005521:	mov    ecx,r15d
   140005524:	call   0x140008af0
   140005529:	mov    rdx,rbx
   14000552c:	inc    rdx
   14000552f:	cmp    WORD PTR [rax+rdx*2],r14w
   140005534:	jne    0x14000552c
   140005536:	cmp    rsi,rdx
   140005539:	jbe    0x140005550
   14000553b:	mov    ecx,r12d
   14000553e:	call   0x140008af0
   140005543:	mov    rcx,rax
   140005546:	call   0x140008d68
   14000554b:	movsxd rbx,eax
   14000554e:	jmp    0x140005562
   140005550:	mov    ecx,r15d
   140005553:	call   0x140008af0
   140005558:	inc    rbx
   14000555b:	cmp    WORD PTR [rax+rbx*2],r14w
   140005560:	jne    0x140005558
   140005562:	neg    ebp
   140005564:	mov    DWORD PTR [rdi+0x2960],ebx
   14000556a:	lea    rcx,[rdi+0x2968]
   140005571:	mov    QWORD PTR [rdi+0x29f0],r14
   140005578:	sbb    eax,eax
   14000557a:	mov    QWORD PTR [rdi+0x29f8],r14
   140005581:	and    eax,r13d
   140005584:	lea    rdx,[rip+0xb0a1]        # 0x14001062c
   14000558b:	add    eax,0x1010
   140005590:	mov    r8d,0x41
   140005596:	mov    DWORD PTR [rdi+0x2964],eax
   14000559c:	call   0x140009774
   1400055a1:	mov    ecx,r15d
   1400055a4:	call   0x140008af0
   1400055a9:	mov    rdx,rax
   1400055ac:	lea    rcx,[rdi+0x2760]
   1400055b3:	mov    r8d,0xfe
   1400055b9:	mov    rbx,QWORD PTR [rsp+0x50]
   1400055be:	mov    rbp,QWORD PTR [rsp+0x58]
   1400055c3:	mov    rsi,QWORD PTR [rsp+0x60]
   1400055c8:	add    rsp,0x20
   1400055cc:	pop    r15
   1400055ce:	pop    r14
   1400055d0:	pop    r13
   1400055d2:	pop    r12
   1400055d4:	pop    rdi
   1400055d5:	jmp    0x140009774
   1400055da:	int3   
   1400055db:	int3   
   1400055dc:	int3   
   1400055dd:	int3   
   1400055de:	int3   
   1400055df:	int3   
   1400055e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400055e5:	mov    QWORD PTR [rsp+0x10],rsi
   1400055ea:	mov    QWORD PTR [rsp+0x18],rdi
   1400055ef:	push   r14
   1400055f1:	sub    rsp,0x20
   1400055f5:	mov    rbx,rcx
   1400055f8:	mov    rsi,r9
   1400055fb:	mov    ecx,0x10
   140005600:	mov    r14,r8
   140005603:	mov    rdi,rdx
   140005606:	call   0x1400056a4
   14000560b:	test   eax,eax
   14000560d:	jne    0x140005613
   14000560f:	xor    eax,eax
   140005611:	jmp    0x140005687
   140005613:	mov    rdx,r14
   140005616:	mov    ecx,0xe
   14000561b:	call   0x1400056a4
   140005620:	test   eax,eax
   140005622:	je     0x14000560f
   140005624:	mov    rdx,rsi
   140005627:	mov    ecx,0xf
   14000562c:	call   0x1400056a4
   140005631:	test   eax,eax
   140005633:	je     0x14000560f
   140005635:	test   rbx,rbx
   140005638:	je     0x140005682
   14000563a:	and    DWORD PTR [rbx+0x4],0x0
   14000563e:	lea    rdx,[rip+0xb363]        # 0x1400109a8
   140005645:	and    DWORD PTR [rbx+0x20],0x0
   140005649:	xor    r9d,r9d
   14000564c:	and    DWORD PTR [rbx],0x0
   14000564f:	mov    rcx,QWORD PTR [rdi]
   140005652:	lea    r8d,[r9+0x1]
   140005656:	call   0x14000990c
   14000565b:	test   eax,eax
   14000565d:	jne    0x140005668
   14000565f:	mov    DWORD PTR [rbx+0x8],0x20
   140005666:	jmp    0x140005674
   140005668:	mov    rcx,QWORD PTR [rdi]
   14000566b:	call   QWORD PTR [rip+0xae37]        # 0x1400104a8
   140005671:	mov    DWORD PTR [rbx+0x8],eax
   140005674:	mov    rcx,QWORD PTR [r14]
   140005677:	mov    QWORD PTR [rbx+0x10],rcx
   14000567b:	mov    rcx,QWORD PTR [rsi]
   14000567e:	mov    QWORD PTR [rbx+0x18],rcx
   140005682:	mov    eax,0x1
   140005687:	mov    rbx,QWORD PTR [rsp+0x30]
   14000568c:	mov    rsi,QWORD PTR [rsp+0x38]
   140005691:	mov    rdi,QWORD PTR [rsp+0x40]
   140005696:	add    rsp,0x20
   14000569a:	pop    r14
   14000569c:	ret    
   14000569d:	int3   
   14000569e:	int3   
   14000569f:	int3   
   1400056a0:	int3   
   1400056a1:	int3   
   1400056a2:	int3   
   1400056a3:	int3   
   1400056a4:	mov    QWORD PTR [rsp+0x8],rbx
   1400056a9:	mov    QWORD PTR [rsp+0x10],rsi
   1400056ae:	push   rdi
   1400056af:	sub    rsp,0x20
   1400056b3:	mov    rsi,rdx
   1400056b6:	mov    edi,ecx
   1400056b8:	mov    edx,ecx
   1400056ba:	xor    r9d,r9d
   1400056bd:	mov    ecx,0x400
   1400056c2:	xor    r8d,r8d
   1400056c5:	call   QWORD PTR [rip+0xa98d]        # 0x140010058
   1400056cb:	mov    ebx,eax
   1400056cd:	test   eax,eax
   1400056cf:	je     0x1400056ff
   1400056d1:	lea    ecx,[rax*2+0x2]
   1400056d8:	call   0x14000a3f8
   1400056dd:	mov    QWORD PTR [rsi],rax
   1400056e0:	test   rax,rax
   1400056e3:	je     0x1400056ff
   1400056e5:	mov    r9d,ebx
   1400056e8:	mov    r8,rax
   1400056eb:	mov    edx,edi
   1400056ed:	mov    ecx,0x400
   1400056f2:	call   QWORD PTR [rip+0xa960]        # 0x140010058
   1400056f8:	mov    eax,0x1
   1400056fd:	jmp    0x140005701
   1400056ff:	xor    eax,eax
   140005701:	mov    rbx,QWORD PTR [rsp+0x30]
   140005706:	mov    rsi,QWORD PTR [rsp+0x38]
   14000570b:	add    rsp,0x20
   14000570f:	pop    rdi
   140005710:	ret    
   140005711:	int3   
   140005712:	int3   
   140005713:	int3   
   140005714:	int3   
   140005715:	int3   
   140005716:	int3   
   140005717:	int3   
   140005718:	mov    rax,rsp
   14000571b:	mov    QWORD PTR [rax+0x10],rdx
   14000571f:	mov    QWORD PTR [rax+0x8],rcx
   140005723:	push   rbx
   140005724:	push   rsi
   140005725:	push   rdi
   140005726:	push   r14
   140005728:	push   r15
   14000572a:	sub    rsp,0x110
   140005731:	mov    QWORD PTR [rax-0x40],0xfffffffffffffffe
   140005739:	mov    r14,rdx
   14000573c:	xor    esi,esi
   14000573e:	mov    QWORD PTR [rsp+0x60],rsi
   140005743:	mov    QWORD PTR [rax+0x20],rsi
   140005747:	mov    QWORD PTR [rax-0x50],rsi
   14000574b:	mov    QWORD PTR [rax+0x8],rsi
   14000574f:	lea    rcx,[rax+0x18]
   140005753:	call   QWORD PTR [rip+0xac4f]        # 0x1400103a8
   140005759:	nop
   14000575a:	lea    rcx,[rsp+0x88]
   140005762:	call   QWORD PTR [rip+0xaa50]        # 0x1400101b8
   140005768:	lea    rcx,[rsp+0xa0]
   140005770:	call   QWORD PTR [rip+0xaa42]        # 0x1400101b8
   140005776:	lea    rcx,[rsp+0x70]
   14000577b:	call   QWORD PTR [rip+0xaa37]        # 0x1400101b8
   140005781:	lea    rcx,[rsp+0xd0]
   140005789:	call   QWORD PTR [rip+0xaa29]        # 0x1400101b8
   14000578f:	lea    rcx,[rsp+0xb8]
   140005797:	call   QWORD PTR [rip+0xaa1b]        # 0x1400101b8
   14000579d:	nop
   14000579e:	lea    rdx,[rip+0xb213]        # 0x1400109b8
   1400057a5:	lea    rcx,[rsp+0x68]
   1400057aa:	call   0x140001008
   1400057af:	nop
   1400057b0:	mov    rcx,QWORD PTR [rax]
   1400057b3:	test   rcx,rcx
   1400057b6:	je     0x1400057bd
   1400057b8:	mov    rdi,QWORD PTR [rcx]
   1400057bb:	jmp    0x1400057c0
   1400057bd:	mov    rdi,rsi
   1400057c0:	mov    rax,QWORD PTR [r14]
   1400057c3:	mov    rbx,QWORD PTR [rax+0x30]
   1400057c7:	mov    rcx,rbx
   1400057ca:	call   QWORD PTR [rip+0xadb8]        # 0x140010588
   1400057d0:	mov    QWORD PTR [rsp+0x28],rsi
   1400057d5:	lea    rax,[rsp+0x158]
   1400057dd:	mov    QWORD PTR [rsp+0x20],rax
   1400057e2:	xor    r9d,r9d
   1400057e5:	xor    r8d,r8d
   1400057e8:	mov    rdx,rdi
   1400057eb:	mov    rcx,r14
   1400057ee:	call   rbx
   1400057f0:	mov    ebx,eax
   1400057f2:	lea    rcx,[rsp+0x68]
   1400057f7:	call   0x14000109c
   1400057fc:	test   ebx,ebx
   1400057fe:	jns    0x140005807
   140005800:	mov    ecx,ebx
   140005802:	call   0x140007fe0
   140005807:	je     0x140005884
   140005809:	mov    QWORD PTR [rsp+0x50],rsi
   14000580e:	lea    rax,[rsp+0xd0]
   140005816:	mov    QWORD PTR [rsp+0x48],rax
   14000581b:	lea    rax,[rsp+0xb8]
   140005823:	mov    QWORD PTR [rsp+0x40],rax
   140005828:	lea    rax,[rsp+0x70]
   14000582d:	mov    QWORD PTR [rsp+0x38],rax
   140005832:	lea    rax,[rsp+0xa0]
   14000583a:	mov    QWORD PTR [rsp+0x30],rax
   14000583f:	lea    rax,[rsp+0x88]
   140005847:	mov    QWORD PTR [rsp+0x28],rax
   14000584c:	mov    QWORD PTR [rsp+0x20],r14
   140005851:	mov    r9,QWORD PTR [rsp+0x140]
   140005859:	mov    rdx,QWORD PTR [rsp+0x158]
   140005861:	mov    rcx,QWORD PTR [rsp+0x60]
   140005866:	call   0x1400060fc
   14000586b:	nop
   14000586c:	lea    rcx,[rsp+0x150]
   140005874:	call   QWORD PTR [rip+0xab3e]        # 0x1400103b8
   14000587a:	mov    eax,0x1
   14000587f:	jmp    0x140005f4b
   140005884:	lea    rdx,[rip+0xb145]        # 0x1400109d0
   14000588b:	lea    rcx,[rsp+0x68]
   140005890:	call   0x140001008
   140005895:	nop
   140005896:	mov    rcx,QWORD PTR [rax]
   140005899:	test   rcx,rcx
   14000589c:	je     0x1400058a3
   14000589e:	mov    r15,QWORD PTR [rcx]
   1400058a1:	jmp    0x1400058a6
   1400058a3:	mov    r15,rsi
   1400058a6:	mov    rdi,QWORD PTR [rsp+0x158]
   1400058ae:	mov    rax,QWORD PTR [rdi]
   1400058b1:	mov    rbx,QWORD PTR [rax+0x98]
   1400058b8:	mov    rcx,rbx
   1400058bb:	call   QWORD PTR [rip+0xacc7]        # 0x140010588
   1400058c1:	mov    QWORD PTR [rsp+0x20],rsi
   1400058c6:	lea    r9,[rsp+0x60]
   1400058cb:	xor    r8d,r8d
   1400058ce:	mov    rdx,r15
   1400058d1:	mov    rcx,rdi
   1400058d4:	call   rbx
   1400058d6:	mov    ebx,eax
   1400058d8:	lea    rcx,[rsp+0x68]
   1400058dd:	call   0x14000109c
   1400058e2:	test   ebx,ebx
   1400058e4:	jns    0x1400058ed
   1400058e6:	mov    ecx,ebx
   1400058e8:	call   0x140007fe0
   1400058ed:	je     0x14000596a
   1400058ef:	mov    QWORD PTR [rsp+0x50],rsi
   1400058f4:	lea    rax,[rsp+0xd0]
   1400058fc:	mov    QWORD PTR [rsp+0x48],rax
   140005901:	lea    rax,[rsp+0xb8]
   140005909:	mov    QWORD PTR [rsp+0x40],rax
   14000590e:	lea    rax,[rsp+0x70]
   140005913:	mov    QWORD PTR [rsp+0x38],rax
   140005918:	lea    rax,[rsp+0xa0]
   140005920:	mov    QWORD PTR [rsp+0x30],rax
   140005925:	lea    rax,[rsp+0x88]
   14000592d:	mov    QWORD PTR [rsp+0x28],rax
   140005932:	mov    QWORD PTR [rsp+0x20],r14
   140005937:	mov    r9,QWORD PTR [rsp+0x140]
   14000593f:	mov    rdx,QWORD PTR [rsp+0x158]
   140005947:	mov    rcx,QWORD PTR [rsp+0x60]
   14000594c:	call   0x1400060fc
   140005951:	nop
   140005952:	lea    rcx,[rsp+0x150]
   14000595a:	call   QWORD PTR [rip+0xaa58]        # 0x1400103b8
   140005960:	mov    eax,0x1
   140005965:	jmp    0x140005f4b
   14000596a:	mov    rdi,QWORD PTR [rsp+0x60]
   14000596f:	mov    rax,QWORD PTR [rdi]
   140005972:	mov    rbx,QWORD PTR [rax+0x78]
   140005976:	mov    rcx,rbx
   140005979:	call   QWORD PTR [rip+0xac09]        # 0x140010588
   14000597f:	lea    r8,[rsp+0x140]
   140005987:	xor    edx,edx
   140005989:	mov    rcx,rdi
   14000598c:	call   rbx
   14000598e:	test   eax,eax
   140005990:	jns    0x140005999
   140005992:	mov    ecx,eax
   140005994:	call   0x140007fe0
   140005999:	je     0x140005a16
   14000599b:	mov    QWORD PTR [rsp+0x50],rsi
   1400059a0:	lea    rax,[rsp+0xd0]
   1400059a8:	mov    QWORD PTR [rsp+0x48],rax
   1400059ad:	lea    rax,[rsp+0xb8]
   1400059b5:	mov    QWORD PTR [rsp+0x40],rax
   1400059ba:	lea    rax,[rsp+0x70]
   1400059bf:	mov    QWORD PTR [rsp+0x38],rax
   1400059c4:	lea    rax,[rsp+0xa0]
   1400059cc:	mov    QWORD PTR [rsp+0x30],rax
   1400059d1:	lea    rax,[rsp+0x88]
   1400059d9:	mov    QWORD PTR [rsp+0x28],rax
   1400059de:	mov    QWORD PTR [rsp+0x20],r14
   1400059e3:	mov    r9,QWORD PTR [rsp+0x140]
   1400059eb:	mov    rdx,QWORD PTR [rsp+0x158]
   1400059f3:	mov    rcx,QWORD PTR [rsp+0x60]
   1400059f8:	call   0x1400060fc
   1400059fd:	nop
   1400059fe:	lea    rcx,[rsp+0x150]
   140005a06:	call   QWORD PTR [rip+0xa9ac]        # 0x1400103b8
   140005a0c:	mov    eax,0x1
   140005a11:	jmp    0x140005f4b
   140005a16:	mov    r15d,0x8
   140005a1c:	mov    WORD PTR [rsp+0x88],r15w
   140005a25:	lea    rcx,[rip+0xafc4]        # 0x1400109f0
   140005a2c:	call   QWORD PTR [rip+0xa766]        # 0x140010198
   140005a32:	mov    QWORD PTR [rsp+0x90],rax
   140005a3a:	mov    rdi,QWORD PTR [rsp+0x140]
   140005a42:	mov    rax,QWORD PTR [rdi]
   140005a45:	mov    rbx,QWORD PTR [rax+0x28]
   140005a49:	mov    rcx,rbx
   140005a4c:	call   QWORD PTR [rip+0xab36]        # 0x140010588
   140005a52:	mov    DWORD PTR [rsp+0x20],esi
   140005a56:	lea    r9,[rsp+0x88]
   140005a5e:	xor    r8d,r8d
   140005a61:	lea    rdx,[rip+0xafe8]        # 0x140010a50
   140005a68:	mov    rcx,rdi
   140005a6b:	call   rbx
   140005a6d:	test   eax,eax
   140005a6f:	jns    0x140005a78
   140005a71:	mov    ecx,eax
   140005a73:	call   0x140007fe0
   140005a78:	mov    WORD PTR [rsp+0xa0],r15w
   140005a81:	lea    rcx,[rip+0xafe0]        # 0x140010a68
   140005a88:	call   QWORD PTR [rip+0xa70a]        # 0x140010198
   140005a8e:	mov    QWORD PTR [rsp+0xa8],rax
   140005a96:	mov    rdi,QWORD PTR [rsp+0x140]
   140005a9e:	mov    rax,QWORD PTR [rdi]
   140005aa1:	mov    rbx,QWORD PTR [rax+0x28]
   140005aa5:	mov    rcx,rbx
   140005aa8:	call   QWORD PTR [rip+0xaada]        # 0x140010588
   140005aae:	mov    DWORD PTR [rsp+0x20],esi
   140005ab2:	lea    r9,[rsp+0xa0]
   140005aba:	xor    r8d,r8d
   140005abd:	lea    rdx,[rip+0xafbc]        # 0x140010a80
   140005ac4:	mov    rcx,rdi
   140005ac7:	call   rbx
   140005ac9:	test   eax,eax
   140005acb:	jns    0x140005ad4
   140005acd:	mov    ecx,eax
   140005acf:	call   0x140007fe0
   140005ad4:	mov    eax,0x3
   140005ad9:	mov    WORD PTR [rsp+0x70],ax
   140005ade:	mov    DWORD PTR [rsp+0x78],0x80000002
   140005ae6:	mov    rdi,QWORD PTR [rsp+0x140]
   140005aee:	mov    rax,QWORD PTR [rdi]
   140005af1:	mov    rbx,QWORD PTR [rax+0x28]
   140005af5:	mov    rcx,rbx
   140005af8:	call   QWORD PTR [rip+0xaa8a]        # 0x140010588
   140005afe:	mov    DWORD PTR [rsp+0x20],esi
   140005b02:	lea    r9,[rsp+0x70]
   140005b07:	xor    r8d,r8d
   140005b0a:	lea    rdx,[rip+0xaf87]        # 0x140010a98
   140005b11:	mov    rcx,rdi
   140005b14:	call   rbx
   140005b16:	test   eax,eax
   140005b18:	jns    0x140005b21
   140005b1a:	mov    ecx,eax
   140005b1c:	call   0x140007fe0
   140005b21:	lea    rdx,[rip+0xaea8]        # 0x1400109d0
   140005b28:	lea    rcx,[rsp+0xf0]
   140005b30:	call   0x140001008
   140005b35:	mov    rbx,rax
   140005b38:	lea    rdx,[rip+0xae79]        # 0x1400109b8
   140005b3f:	lea    rcx,[rsp+0x68]
   140005b44:	call   0x140001008
   140005b49:	nop
   140005b4a:	mov    r15,QWORD PTR [rbx]
   140005b4d:	test   r15,r15
   140005b50:	je     0x140005b57
   140005b52:	mov    r15,QWORD PTR [r15]
   140005b55:	jmp    0x140005b5a
   140005b57:	mov    r15,rsi
   140005b5a:	mov    rax,QWORD PTR [rax]
   140005b5d:	test   rax,rax
   140005b60:	je     0x140005b67
   140005b62:	mov    rdi,QWORD PTR [rax]
   140005b65:	jmp    0x140005b6a
   140005b67:	mov    rdi,rsi
   140005b6a:	mov    rax,QWORD PTR [r14]
   140005b6d:	mov    rbx,QWORD PTR [rax+0xc0]
   140005b74:	mov    rcx,rbx
   140005b77:	call   QWORD PTR [rip+0xaa0b]        # 0x140010588
   140005b7d:	mov    QWORD PTR [rsp+0x38],rsi
   140005b82:	lea    rax,[rsp+0xe8]
   140005b8a:	mov    QWORD PTR [rsp+0x30],rax
   140005b8f:	mov    rax,QWORD PTR [rsp+0x140]
   140005b97:	mov    QWORD PTR [rsp+0x28],rax
   140005b9c:	mov    QWORD PTR [rsp+0x20],rsi
   140005ba1:	xor    r9d,r9d
   140005ba4:	mov    r8,r15
   140005ba7:	mov    rdx,rdi
   140005baa:	mov    rcx,r14
   140005bad:	call   rbx
   140005baf:	mov    ebx,eax
   140005bb1:	lea    rcx,[rsp+0x68]
   140005bb6:	call   0x14000109c
   140005bbb:	nop
   140005bbc:	lea    rcx,[rsp+0xf0]
   140005bc4:	call   0x14000109c
   140005bc9:	test   ebx,ebx
   140005bcb:	jns    0x140005bd4
   140005bcd:	mov    ecx,ebx
   140005bcf:	call   0x140007fe0
   140005bd4:	mov    rdi,QWORD PTR [rsp+0xe8]
   140005bdc:	test   rdi,rdi
   140005bdf:	jne    0x140005c5c
   140005be1:	mov    QWORD PTR [rsp+0x50],rsi
   140005be6:	lea    rax,[rsp+0xd0]
   140005bee:	mov    QWORD PTR [rsp+0x48],rax
   140005bf3:	lea    rax,[rsp+0xb8]
   140005bfb:	mov    QWORD PTR [rsp+0x40],rax
   140005c00:	lea    rax,[rsp+0x70]
   140005c05:	mov    QWORD PTR [rsp+0x38],rax
   140005c0a:	lea    rax,[rsp+0xa0]
   140005c12:	mov    QWORD PTR [rsp+0x30],rax
   140005c17:	lea    rax,[rsp+0x88]
   140005c1f:	mov    QWORD PTR [rsp+0x28],rax
   140005c24:	mov    QWORD PTR [rsp+0x20],r14
   140005c29:	mov    r9,QWORD PTR [rsp+0x140]
   140005c31:	mov    rdx,QWORD PTR [rsp+0x158]
   140005c39:	mov    rcx,QWORD PTR [rsp+0x60]
   140005c3e:	call   0x1400060fc
   140005c43:	nop
   140005c44:	lea    rcx,[rsp+0x150]
   140005c4c:	call   QWORD PTR [rip+0xa766]        # 0x1400103b8
   140005c52:	mov    eax,0x1
   140005c57:	jmp    0x140005f4b
   140005c5c:	mov    rax,QWORD PTR [rdi]
   140005c5f:	mov    rbx,QWORD PTR [rax+0x20]
   140005c63:	mov    rcx,rbx
   140005c66:	call   QWORD PTR [rip+0xa91c]        # 0x140010588
   140005c6c:	mov    QWORD PTR [rsp+0x28],rsi
   140005c71:	mov    QWORD PTR [rsp+0x20],rsi
   140005c76:	lea    r9,[rsp+0xb8]
   140005c7e:	xor    r8d,r8d
   140005c81:	lea    rdx,[rip+0xae20]        # 0x140010aa8
   140005c88:	mov    rcx,rdi
   140005c8b:	call   rbx
   140005c8d:	test   eax,eax
   140005c8f:	jns    0x140005c98
   140005c91:	mov    ecx,eax
   140005c93:	call   0x140007fe0
   140005c98:	cmp    DWORD PTR [rsp+0xc0],esi
   140005c9f:	je     0x140005d1c
   140005ca1:	mov    QWORD PTR [rsp+0x50],rsi
   140005ca6:	lea    rax,[rsp+0xd0]
   140005cae:	mov    QWORD PTR [rsp+0x48],rax
   140005cb3:	lea    rax,[rsp+0xb8]
   140005cbb:	mov    QWORD PTR [rsp+0x40],rax
   140005cc0:	lea    rax,[rsp+0x70]
   140005cc5:	mov    QWORD PTR [rsp+0x38],rax
   140005cca:	lea    rax,[rsp+0xa0]
   140005cd2:	mov    QWORD PTR [rsp+0x30],rax
   140005cd7:	lea    rax,[rsp+0x88]
   140005cdf:	mov    QWORD PTR [rsp+0x28],rax
   140005ce4:	mov    QWORD PTR [rsp+0x20],r14
   140005ce9:	mov    r9,QWORD PTR [rsp+0x140]
   140005cf1:	mov    rdx,QWORD PTR [rsp+0x158]
   140005cf9:	mov    rcx,QWORD PTR [rsp+0x60]
   140005cfe:	call   0x1400060fc
   140005d03:	nop
   140005d04:	lea    rcx,[rsp+0x150]
   140005d0c:	call   QWORD PTR [rip+0xa6a6]        # 0x1400103b8
   140005d12:	mov    eax,0x1
   140005d17:	jmp    0x140005f4b
   140005d1c:	mov    rdi,QWORD PTR [rsp+0xe8]
   140005d24:	mov    rax,QWORD PTR [rdi]
   140005d27:	mov    rbx,QWORD PTR [rax+0x20]
   140005d2b:	mov    rcx,rbx
   140005d2e:	call   QWORD PTR [rip+0xa854]        # 0x140010588
   140005d34:	mov    QWORD PTR [rsp+0x28],rsi
   140005d39:	mov    QWORD PTR [rsp+0x20],rsi
   140005d3e:	lea    r9,[rsp+0xd0]
   140005d46:	xor    r8d,r8d
   140005d49:	lea    rdx,[rip+0xad70]        # 0x140010ac0
   140005d50:	mov    rcx,rdi
   140005d53:	call   rbx
   140005d55:	test   eax,eax
   140005d57:	jns    0x140005d60
   140005d59:	mov    ecx,eax
   140005d5b:	call   0x140007fe0
   140005d60:	je     0x140005ddd
   140005d62:	mov    QWORD PTR [rsp+0x50],rsi
   140005d67:	lea    rax,[rsp+0xd0]
   140005d6f:	mov    QWORD PTR [rsp+0x48],rax
   140005d74:	lea    rax,[rsp+0xb8]
   140005d7c:	mov    QWORD PTR [rsp+0x40],rax
   140005d81:	lea    rax,[rsp+0x70]
   140005d86:	mov    QWORD PTR [rsp+0x38],rax
   140005d8b:	lea    rax,[rsp+0xa0]
   140005d93:	mov    QWORD PTR [rsp+0x30],rax
   140005d98:	lea    rax,[rsp+0x88]
   140005da0:	mov    QWORD PTR [rsp+0x28],rax
   140005da5:	mov    QWORD PTR [rsp+0x20],r14
   140005daa:	mov    r9,QWORD PTR [rsp+0x140]
   140005db2:	mov    rdx,QWORD PTR [rsp+0x158]
   140005dba:	mov    rcx,QWORD PTR [rsp+0x60]
   140005dbf:	call   0x1400060fc
   140005dc4:	nop
   140005dc5:	lea    rcx,[rsp+0x150]
   140005dcd:	call   QWORD PTR [rip+0xa5e5]        # 0x1400103b8
   140005dd3:	mov    eax,0x1
   140005dd8:	jmp    0x140005f4b
   140005ddd:	mov    rdx,QWORD PTR [rsp+0xd8]
   140005de5:	lea    rcx,[rsp+0x150]
   140005ded:	call   QWORD PTR [rip+0xa5e5]        # 0x1400103d8
   140005df3:	mov    ecx,0x1fc
   140005df8:	call   0x14000a3f8
   140005dfd:	mov    rdi,rax
   140005e00:	test   rax,rax
   140005e03:	jne    0x140005e6c
   140005e05:	mov    QWORD PTR [rsp+0x50],rsi
   140005e0a:	lea    rax,[rsp+0xd0]
   140005e12:	mov    QWORD PTR [rsp+0x48],rax
   140005e17:	lea    rax,[rsp+0xb8]
   140005e1f:	mov    QWORD PTR [rsp+0x40],rax
   140005e24:	lea    rax,[rsp+0x70]
   140005e29:	mov    QWORD PTR [rsp+0x38],rax
   140005e2e:	lea    rax,[rsp+0xa0]
   140005e36:	mov    QWORD PTR [rsp+0x30],rax
   140005e3b:	lea    rax,[rsp+0x88]
   140005e43:	mov    QWORD PTR [rsp+0x28],rax
   140005e48:	mov    QWORD PTR [rsp+0x20],r14
   140005e4d:	mov    r9,QWORD PTR [rsp+0x140]
   140005e55:	mov    rdx,QWORD PTR [rsp+0x158]
   140005e5d:	mov    rcx,QWORD PTR [rsp+0x60]
   140005e62:	call   0x1400060fc
   140005e67:	jmp    0x140005f38
   140005e6c:	mov    rdx,QWORD PTR [rsp+0x150]
   140005e74:	test   rdx,rdx
   140005e77:	jne    0x140005e7d
   140005e79:	mov    eax,esi
   140005e7b:	jmp    0x140005e8e
   140005e7d:	mov    rcx,rdx
   140005e80:	call   QWORD PTR [rip+0xa2c2]        # 0x140010148
   140005e86:	mov    rdx,QWORD PTR [rsp+0x150]
   140005e8e:	lea    r8d,[rax+0x2]
   140005e92:	mov    rcx,rdi
   140005e95:	call   0x140009774
   140005e9a:	xor    r9d,r9d
   140005e9d:	lea    r8d,[r9+0x1]
   140005ea1:	lea    rdx,[rip+0xac28]        # 0x140010ad0
   140005ea8:	mov    rcx,rdi
   140005eab:	call   0x140009154
   140005eb0:	cmp    eax,0xffffffff
   140005eb3:	je     0x140005ebb
   140005eb5:	cdqe   
   140005eb7:	lea    rsi,[rdi+rax*2]
   140005ebb:	neg    rsi
   140005ebe:	sbb    ebx,ebx
   140005ec0:	neg    ebx
   140005ec2:	mov    QWORD PTR [rsp+0x50],rdi
   140005ec7:	lea    rax,[rsp+0xd0]
   140005ecf:	mov    QWORD PTR [rsp+0x48],rax
   140005ed4:	lea    rax,[rsp+0xb8]
   140005edc:	mov    QWORD PTR [rsp+0x40],rax
   140005ee1:	lea    rax,[rsp+0x70]
   140005ee6:	mov    QWORD PTR [rsp+0x38],rax
   140005eeb:	lea    rax,[rsp+0xa0]
   140005ef3:	mov    QWORD PTR [rsp+0x30],rax
   140005ef8:	lea    rax,[rsp+0x88]
   140005f00:	mov    QWORD PTR [rsp+0x28],rax
   140005f05:	mov    QWORD PTR [rsp+0x20],r14
   140005f0a:	mov    r9,QWORD PTR [rsp+0x140]
   140005f12:	mov    rdx,QWORD PTR [rsp+0x158]
   140005f1a:	mov    rcx,QWORD PTR [rsp+0x60]
   140005f1f:	call   0x1400060fc
   140005f24:	nop
   140005f25:	lea    rcx,[rsp+0x150]
   140005f2d:	call   QWORD PTR [rip+0xa485]        # 0x1400103b8
   140005f33:	lea    eax,[rbx+0x2]
   140005f36:	jmp    0x140005f4b
   140005f38:	lea    rcx,[rsp+0x150]
   140005f40:	call   QWORD PTR [rip+0xa472]        # 0x1400103b8
   140005f46:	mov    eax,0x1
   140005f4b:	add    rsp,0x110
   140005f52:	pop    r15
   140005f54:	pop    r14
   140005f56:	pop    rdi
   140005f57:	pop    rsi
   140005f58:	pop    rbx
   140005f59:	ret    
   140005f5a:	int3   
   140005f5b:	int3   
   140005f5c:	int3   
   140005f5d:	int3   
   140005f5e:	int3   
   140005f5f:	int3   
   140005f60:	rex push rbx
   140005f62:	sub    rsp,0x60
   140005f66:	mov    QWORD PTR [rsp+0x50],0xfffffffffffffffe
   140005f6f:	mov    rbx,rcx
   140005f72:	mov    edx,0x2
   140005f77:	xor    ecx,ecx
   140005f79:	call   QWORD PTR [rip+0xa339]        # 0x1400102b8
   140005f7f:	test   eax,eax
   140005f81:	jns    0x140005f8a
   140005f83:	mov    ecx,eax
   140005f85:	call   0x140007fe0
   140005f8a:	and    QWORD PTR [rsp+0x40],0x0
   140005f90:	and    DWORD PTR [rsp+0x38],0x0
   140005f95:	and    QWORD PTR [rsp+0x30],0x0
   140005f9b:	mov    DWORD PTR [rsp+0x28],0x3
   140005fa3:	mov    DWORD PTR [rsp+0x20],0x1
   140005fab:	xor    r9d,r9d
   140005fae:	xor    r8d,r8d
   140005fb1:	or     edx,0xffffffff
   140005fb4:	xor    ecx,ecx
   140005fb6:	call   QWORD PTR [rip+0xa2ec]        # 0x1400102a8
   140005fbc:	test   eax,eax
   140005fbe:	jns    0x140005fc7
   140005fc0:	mov    ecx,eax
   140005fc2:	call   0x140007fe0
   140005fc7:	mov    QWORD PTR [rsp+0x20],rbx
   140005fcc:	lea    r9,[rip+0xaded]        # 0x140010dc0
   140005fd3:	xor    edx,edx
   140005fd5:	lea    r8d,[rdx+0x1]
   140005fd9:	lea    rcx,[rip+0xadd0]        # 0x140010db0
   140005fe0:	call   QWORD PTR [rip+0xa2ba]        # 0x1400102a0
   140005fe6:	test   eax,eax
   140005fe8:	jns    0x140005ff2
   140005fea:	mov    ecx,eax
   140005fec:	call   0x140007fe0
   140005ff1:	nop
   140005ff2:	mov    eax,0x1
   140005ff7:	jmp    0x140005ffb
   140005ff9:	xor    eax,eax
   140005ffb:	add    rsp,0x60
   140005fff:	pop    rbx
   140006000:	ret    
   140006001:	int3   
   140006002:	int3   
   140006003:	int3   
   140006004:	int3   
   140006005:	int3   
   140006006:	int3   
   140006007:	int3   
   140006008:	mov    rax,rsp
   14000600b:	push   rbp
   14000600c:	push   rdi
   14000600d:	push   r14
   14000600f:	mov    rbp,rsp
   140006012:	sub    rsp,0x70
   140006016:	mov    QWORD PTR [rbp-0x40],0xfffffffffffffffe
   14000601e:	mov    QWORD PTR [rax+0x10],rbx
   140006022:	mov    QWORD PTR [rax+0x18],rsi
   140006026:	mov    r14,r8
   140006029:	mov    rdi,rdx
   14000602c:	mov    rsi,rcx
   14000602f:	lea    rcx,[rbp-0x38]
   140006033:	call   QWORD PTR [rip+0xa17f]        # 0x1400101b8
   140006039:	mov    rax,QWORD PTR [rsi]
   14000603c:	mov    rbx,QWORD PTR [rax+0x20]
   140006040:	mov    rcx,rbx
   140006043:	call   QWORD PTR [rip+0xa53f]        # 0x140010588
   140006049:	and    QWORD PTR [rsp+0x28],0x0
   14000604f:	and    QWORD PTR [rsp+0x20],0x0
   140006055:	lea    r9,[rbp-0x38]
   140006059:	xor    r8d,r8d
   14000605c:	mov    rdx,rdi
   14000605f:	mov    rcx,rsi
   140006062:	call   rbx
   140006064:	test   eax,eax
   140006066:	jne    0x1400060d6
   140006068:	cmp    WORD PTR [rbp-0x38],0x2
   14000606d:	jb     0x1400060d6
   14000606f:	lea    rcx,[rbp-0x20]
   140006073:	call   QWORD PTR [rip+0xa13f]        # 0x1400101b8
   140006079:	lea    rdx,[rbp-0x38]
   14000607d:	lea    rcx,[rbp-0x20]
   140006081:	call   QWORD PTR [rip+0xa139]        # 0x1400101c0
   140006087:	test   eax,eax
   140006089:	jns    0x140006093
   14000608b:	mov    ecx,eax
   14000608d:	call   0x140007fe0
   140006092:	nop
   140006093:	lea    rdx,[rbp-0x20]
   140006097:	lea    rcx,[rbp+0x20]
   14000609b:	call   0x1400014f8
   1400060a0:	nop
   1400060a1:	mov    rdx,QWORD PTR [rax]
   1400060a4:	test   rdx,rdx
   1400060a7:	je     0x1400060ac
   1400060a9:	mov    rdx,QWORD PTR [rdx]
   1400060ac:	mov    rcx,r14
   1400060af:	call   QWORD PTR [rip+0xa323]        # 0x1400103d8
   1400060b5:	nop
   1400060b6:	lea    rcx,[rbp+0x20]
   1400060ba:	call   0x14000109c
   1400060bf:	nop
   1400060c0:	lea    rcx,[rbp-0x20]
   1400060c4:	call   QWORD PTR [rip+0xa0fe]        # 0x1400101c8
   1400060ca:	test   eax,eax
   1400060cc:	jns    0x1400060d6
   1400060ce:	mov    ecx,eax
   1400060d0:	call   0x140007fe0
   1400060d5:	int3   
   1400060d6:	lea    rcx,[rbp-0x38]
   1400060da:	call   QWORD PTR [rip+0xa0e8]        # 0x1400101c8
   1400060e0:	lea    r11,[rsp+0x70]
   1400060e5:	mov    rbx,QWORD PTR [r11+0x28]
   1400060e9:	mov    rsi,QWORD PTR [r11+0x30]
   1400060ed:	mov    rsp,r11
   1400060f0:	pop    r14
   1400060f2:	pop    rdi
   1400060f3:	pop    rbp
   1400060f4:	ret    
   1400060f5:	int3   
   1400060f6:	int3   
   1400060f7:	int3   
   1400060f8:	int3   
   1400060f9:	int3   
   1400060fa:	int3   
   1400060fb:	int3   
   1400060fc:	mov    QWORD PTR [rsp+0x8],rbx
   140006101:	mov    QWORD PTR [rsp+0x10],rsi
   140006106:	mov    QWORD PTR [rsp+0x18],rdi
   14000610b:	push   r14
   14000610d:	sub    rsp,0x20
   140006111:	mov    r14,r9
   140006114:	mov    rdi,rdx
   140006117:	mov    rsi,rcx
   14000611a:	test   r9,r9
   14000611d:	je     0x140006134
   14000611f:	mov    rax,QWORD PTR [r9]
   140006122:	mov    rbx,QWORD PTR [rax+0x10]
   140006126:	mov    rcx,rbx
   140006129:	call   QWORD PTR [rip+0xa459]        # 0x140010588
   14000612f:	mov    rcx,r14
   140006132:	call   rbx
   140006134:	test   rsi,rsi
   140006137:	je     0x14000614e
   140006139:	mov    rax,QWORD PTR [rsi]
   14000613c:	mov    rbx,QWORD PTR [rax+0x10]
   140006140:	mov    rcx,rbx
   140006143:	call   QWORD PTR [rip+0xa43f]        # 0x140010588
   140006149:	mov    rcx,rsi
   14000614c:	call   rbx
   14000614e:	test   rdi,rdi
   140006151:	je     0x140006168
   140006153:	mov    rax,QWORD PTR [rdi]
   140006156:	mov    rbx,QWORD PTR [rax+0x10]
   14000615a:	mov    rcx,rbx
   14000615d:	call   QWORD PTR [rip+0xa425]        # 0x140010588
   140006163:	mov    rcx,rdi
   140006166:	call   rbx
   140006168:	mov    rdi,QWORD PTR [rsp+0x50]
   14000616d:	test   rdi,rdi
   140006170:	je     0x140006187
   140006172:	mov    rax,QWORD PTR [rdi]
   140006175:	mov    rbx,QWORD PTR [rax+0x10]
   140006179:	mov    rcx,rbx
   14000617c:	call   QWORD PTR [rip+0xa406]        # 0x140010588
   140006182:	mov    rcx,rdi
   140006185:	call   rbx
   140006187:	lea    rcx,[rsp+0x80]
   14000618f:	call   0x14000a31c
   140006194:	mov    rcx,QWORD PTR [rsp+0x58]
   140006199:	call   QWORD PTR [rip+0xa029]        # 0x1400101c8
   14000619f:	test   eax,eax
   1400061a1:	jne    0x1400061db
   1400061a3:	mov    rcx,QWORD PTR [rsp+0x60]
   1400061a8:	call   QWORD PTR [rip+0xa01a]        # 0x1400101c8
   1400061ae:	test   eax,eax
   1400061b0:	jne    0x1400061db
   1400061b2:	mov    rcx,QWORD PTR [rsp+0x68]
   1400061b7:	call   QWORD PTR [rip+0xa00b]        # 0x1400101c8
   1400061bd:	test   eax,eax
   1400061bf:	jne    0x1400061db
   1400061c1:	mov    rcx,QWORD PTR [rsp+0x78]
   1400061c6:	call   QWORD PTR [rip+0x9ffc]        # 0x1400101c8
   1400061cc:	test   eax,eax
   1400061ce:	jne    0x1400061db
   1400061d0:	mov    rcx,QWORD PTR [rsp+0x70]
   1400061d5:	call   QWORD PTR [rip+0x9fed]        # 0x1400101c8
   1400061db:	mov    rbx,QWORD PTR [rsp+0x30]
   1400061e0:	mov    rsi,QWORD PTR [rsp+0x38]
   1400061e5:	mov    rdi,QWORD PTR [rsp+0x40]
   1400061ea:	add    rsp,0x20
   1400061ee:	pop    r14
   1400061f0:	ret    
   1400061f1:	int3   
   1400061f2:	int3   
   1400061f3:	int3   
   1400061f4:	int3   
   1400061f5:	int3   
   1400061f6:	int3   
   1400061f7:	int3   
   1400061f8:	mov    QWORD PTR [rsp+0x8],rbx
   1400061fd:	mov    QWORD PTR [rsp+0x10],rbp
   140006202:	mov    QWORD PTR [rsp+0x18],rsi
   140006207:	push   rdi
   140006208:	push   r14
   14000620a:	push   r15
   14000620c:	sub    rsp,0x20
   140006210:	mov    r15d,0x1a6
   140006216:	mov    rdi,r8
   140006219:	mov    ecx,r15d
   14000621c:	call   0x140008af0
   140006221:	mov    rcx,rax
   140006224:	call   0x140008d68
   140006229:	lea    r14d,[r15-0x32]
   14000622d:	movsxd rsi,eax
   140006230:	mov    ecx,r14d
   140006233:	call   0x140008af0
   140006238:	or     rbx,0xffffffffffffffff
   14000623c:	mov    rdx,rbx
   14000623f:	xor    ebp,ebp
   140006241:	inc    rdx
   140006244:	cmp    WORD PTR [rax+rdx*2],bp
   140006248:	jne    0x140006241
   14000624a:	cmp    rsi,rdx
   14000624d:	jbe    0x140006264
   14000624f:	mov    ecx,r15d
   140006252:	call   0x140008af0
   140006257:	mov    rcx,rax
   14000625a:	call   0x140008d68
   14000625f:	movsxd rcx,eax
   140006262:	jmp    0x140006278
   140006264:	mov    ecx,r14d
   140006267:	call   0x140008af0
   14000626c:	mov    rcx,rbx
   14000626f:	inc    rcx
   140006272:	cmp    WORD PTR [rax+rcx*2],bp
   140006276:	jne    0x14000626f
   140006278:	mov    DWORD PTR [rdi+0x200],ecx
   14000627e:	lea    rdx,[rip+0xa3a7]        # 0x14001062c
   140006285:	lea    rcx,[rdi+0x208]
   14000628c:	mov    DWORD PTR [rdi+0x204],0x10
   140006296:	mov    r8d,0x41
   14000629c:	mov    QWORD PTR [rdi+0x290],rbp
   1400062a3:	mov    QWORD PTR [rdi+0x298],rbp
   1400062aa:	call   0x140009774
   1400062af:	mov    ecx,r14d
   1400062b2:	call   0x140008af0
   1400062b7:	mov    rdx,rax
   1400062ba:	mov    r8d,0x100
   1400062c0:	mov    rcx,rdi
   1400062c3:	call   0x140009774
   1400062c8:	mov    r14d,0x1a7
   1400062ce:	mov    ecx,r14d
   1400062d1:	call   0x140008af0
   1400062d6:	mov    rcx,rax
   1400062d9:	call   0x140008d68
   1400062de:	lea    r15d,[r14-0x32]
   1400062e2:	movsxd rsi,eax
   1400062e5:	mov    ecx,r15d
   1400062e8:	call   0x140008af0
   1400062ed:	mov    rdx,rbx
   1400062f0:	inc    rdx
   1400062f3:	cmp    WORD PTR [rax+rdx*2],bp
   1400062f7:	jne    0x1400062f0
   1400062f9:	cmp    rsi,rdx
   1400062fc:	jbe    0x140006313
   1400062fe:	mov    ecx,r14d
   140006301:	call   0x140008af0
   140006306:	mov    rcx,rax
   140006309:	call   0x140008d68
   14000630e:	movsxd rcx,eax
   140006311:	jmp    0x140006327
   140006313:	mov    ecx,r15d
   140006316:	call   0x140008af0
   14000631b:	mov    rcx,rbx
   14000631e:	inc    rcx
   140006321:	cmp    WORD PTR [rax+rcx*2],bp
   140006325:	jne    0x14000631e
   140006327:	mov    DWORD PTR [rdi+0x4a0],ecx
   14000632d:	lea    rdx,[rip+0xa2f8]        # 0x14001062c
   140006334:	lea    rcx,[rdi+0x4a8]
   14000633b:	mov    DWORD PTR [rdi+0x4a4],0x10
   140006345:	mov    r8d,0x41
   14000634b:	mov    QWORD PTR [rdi+0x530],rbp
   140006352:	mov    QWORD PTR [rdi+0x538],rbp
   140006359:	call   0x140009774
   14000635e:	mov    ecx,r15d
   140006361:	call   0x140008af0
   140006366:	mov    rdx,rax
   140006369:	lea    rcx,[rdi+0x2a0]
   140006370:	mov    r8d,0x100
   140006376:	call   0x140009774
   14000637b:	mov    r14d,0x1a8
   140006381:	mov    ecx,r14d
   140006384:	call   0x140008af0
   140006389:	mov    rcx,rax
   14000638c:	call   0x140008d68
   140006391:	lea    r15d,[r14-0x32]
   140006395:	movsxd rsi,eax
   140006398:	mov    ecx,r15d
   14000639b:	call   0x140008af0
   1400063a0:	mov    rdx,rbx
   1400063a3:	inc    rdx
   1400063a6:	cmp    WORD PTR [rax+rdx*2],bp
   1400063aa:	jne    0x1400063a3
   1400063ac:	cmp    rsi,rdx
   1400063af:	jbe    0x1400063c6
   1400063b1:	mov    ecx,r14d
   1400063b4:	call   0x140008af0
   1400063b9:	mov    rcx,rax
   1400063bc:	call   0x140008d68
   1400063c1:	movsxd rcx,eax
   1400063c4:	jmp    0x1400063da
   1400063c6:	mov    ecx,r15d
   1400063c9:	call   0x140008af0
   1400063ce:	mov    rcx,rbx
   1400063d1:	inc    rcx
   1400063d4:	cmp    WORD PTR [rax+rcx*2],bp
   1400063d8:	jne    0x1400063d1
   1400063da:	mov    DWORD PTR [rdi+0x740],ecx
   1400063e0:	lea    rdx,[rip+0xa245]        # 0x14001062c
   1400063e7:	lea    rcx,[rdi+0x748]
   1400063ee:	mov    DWORD PTR [rdi+0x744],0x10
   1400063f8:	mov    r8d,0x41
   1400063fe:	mov    QWORD PTR [rdi+0x7d0],rbp
   140006405:	mov    QWORD PTR [rdi+0x7d8],rbp
   14000640c:	call   0x140009774
   140006411:	mov    ecx,r15d
   140006414:	call   0x140008af0
   140006419:	mov    rdx,rax
   14000641c:	lea    rcx,[rdi+0x540]
   140006423:	mov    r8d,0x100
   140006429:	call   0x140009774
   14000642e:	mov    r15d,0x1a9
   140006434:	mov    ecx,r15d
   140006437:	call   0x140008af0
   14000643c:	mov    rcx,rax
   14000643f:	call   0x140008d68
   140006444:	lea    r14d,[r15-0x32]
   140006448:	movsxd rsi,eax
   14000644b:	mov    ecx,r14d
   14000644e:	call   0x140008af0
   140006453:	mov    rdx,rbx
   140006456:	inc    rdx
   140006459:	cmp    WORD PTR [rax+rdx*2],bp
   14000645d:	jne    0x140006456
   14000645f:	cmp    rsi,rdx
   140006462:	jbe    0x140006479
   140006464:	mov    ecx,r15d
   140006467:	call   0x140008af0
   14000646c:	mov    rcx,rax
   14000646f:	call   0x140008d68
   140006474:	movsxd rbx,eax
   140006477:	jmp    0x14000648a
   140006479:	mov    ecx,r14d
   14000647c:	call   0x140008af0
   140006481:	inc    rbx
   140006484:	cmp    WORD PTR [rax+rbx*2],bp
   140006488:	jne    0x140006481
   14000648a:	lea    rcx,[rdi+0x9e8]
   140006491:	mov    DWORD PTR [rdi+0x9e0],ebx
   140006497:	mov    r8d,0x41
   14000649d:	mov    DWORD PTR [rdi+0x9e4],0x10
   1400064a7:	lea    rdx,[rip+0xa17e]        # 0x14001062c
   1400064ae:	mov    QWORD PTR [rdi+0xa70],rbp
   1400064b5:	mov    QWORD PTR [rdi+0xa78],rbp
   1400064bc:	call   0x140009774
   1400064c1:	mov    ecx,r14d
   1400064c4:	call   0x140008af0
   1400064c9:	mov    rdx,rax
   1400064cc:	lea    rcx,[rdi+0x7e0]
   1400064d3:	mov    r8d,0x100
   1400064d9:	mov    rbx,QWORD PTR [rsp+0x40]
   1400064de:	mov    rbp,QWORD PTR [rsp+0x48]
   1400064e3:	mov    rsi,QWORD PTR [rsp+0x50]
   1400064e8:	add    rsp,0x20
   1400064ec:	pop    r15
   1400064ee:	pop    r14
   1400064f0:	pop    rdi
   1400064f1:	jmp    0x140009774
   1400064f6:	int3   
   1400064f7:	int3   
   1400064f8:	int3   
   1400064f9:	int3   
   1400064fa:	int3   
   1400064fb:	int3   
   1400064fc:	rex push rbx
   1400064fe:	push   rsi
   1400064ff:	push   rdi
   140006500:	push   r12
   140006502:	push   r13
   140006504:	push   r14
   140006506:	push   r15
   140006508:	sub    rsp,0xba0
   14000650f:	mov    QWORD PTR [rsp+0xb0],0xfffffffffffffffe
   14000651b:	mov    rax,QWORD PTR [rip+0xeae6]        # 0x140015008
   140006522:	xor    rax,rsp
   140006525:	mov    QWORD PTR [rsp+0xb90],rax
   14000652d:	mov    r12d,r9d
   140006530:	mov    rbx,r8
   140006533:	mov    QWORD PTR [rsp+0xa8],rdx
   14000653b:	mov    rdi,rcx
   14000653e:	mov    QWORD PTR [rsp+0x68],rcx
   140006543:	mov    QWORD PTR [rsp+0xa0],rcx
   14000654b:	mov    esi,0x1
   140006550:	mov    DWORD PTR [rsp+0x58],esi
   140006554:	xor    r13d,r13d
   140006557:	mov    DWORD PTR [rsp+0x5c],r13d
   14000655c:	lea    rcx,[rsp+0x48]
   140006561:	call   QWORD PTR [rip+0x9e41]        # 0x1400103a8
   140006567:	nop
   140006568:	lea    rcx,[rsp+0x40]
   14000656d:	call   QWORD PTR [rip+0x9e35]        # 0x1400103a8
   140006573:	nop
   140006574:	lea    rcx,[rsp+0x50]
   140006579:	call   QWORD PTR [rip+0x9e29]        # 0x1400103a8
   14000657f:	nop
   140006580:	lea    rcx,[rsp+0x38]
   140006585:	call   QWORD PTR [rip+0x9e1d]        # 0x1400103a8
   14000658b:	nop
   14000658c:	mov    DWORD PTR [rsp+0x60],r13d
   140006591:	lea    r15d,[rsi+0x1]
   140006595:	call   0x14000b1a4
   14000659a:	mov    r14,rax
   14000659d:	mov    QWORD PTR [rsp+0x78],rax
   1400065a2:	test   rax,rax
   1400065a5:	jne    0x1400065e7
   1400065a7:	lea    rcx,[rsp+0x38]
   1400065ac:	call   QWORD PTR [rip+0x9e06]        # 0x1400103b8
   1400065b2:	nop
   1400065b3:	lea    rcx,[rsp+0x50]
   1400065b8:	call   QWORD PTR [rip+0x9dfa]        # 0x1400103b8
   1400065be:	nop
   1400065bf:	lea    rcx,[rsp+0x40]
   1400065c4:	call   QWORD PTR [rip+0x9dee]        # 0x1400103b8
   1400065ca:	nop
   1400065cb:	lea    rcx,[rsp+0x48]
   1400065d0:	call   QWORD PTR [rip+0x9de2]        # 0x1400103b8
   1400065d6:	nop
   1400065d7:	mov    rcx,rdi
   1400065da:	call   QWORD PTR [rip+0x9dd8]        # 0x1400103b8
   1400065e0:	mov    eax,esi
   1400065e2:	jmp    0x140006b90
   1400065e7:	mov    ecx,0x12e
   1400065ec:	call   0x140008af0
   1400065f1:	mov    rdx,rax
   1400065f4:	xor    r9d,r9d
   1400065f7:	mov    r8d,esi
   1400065fa:	mov    rcx,rbx
   1400065fd:	call   0x14000990c
   140006602:	test   eax,eax
   140006604:	je     0x140006650
   140006606:	mov    ecx,0x12d
   14000660b:	call   0x140008af0
   140006610:	mov    rdx,rax
   140006613:	xor    r9d,r9d
   140006616:	mov    r8d,esi
   140006619:	mov    rcx,rbx
   14000661c:	call   0x14000990c
   140006621:	test   eax,eax
   140006623:	jne    0x14000662a
   140006625:	mov    r15d,esi
   140006628:	jmp    0x140006650
   14000662a:	mov    ecx,0x12f
   14000662f:	call   0x140008af0
   140006634:	mov    rdx,rax
   140006637:	xor    r9d,r9d
   14000663a:	mov    r8d,esi
   14000663d:	mov    rcx,rbx
   140006640:	call   0x14000990c
   140006645:	mov    ebx,0x3
   14000664a:	test   eax,eax
   14000664c:	cmove  r15d,ebx
   140006650:	lea    r8,[rsp+0x110]
   140006658:	call   0x1400061f8
   14000665d:	cmp    r12d,esi
   140006660:	jne    0x140006667
   140006662:	bts    r15d,0xc
   140006667:	xor    edx,edx
   140006669:	lea    r8d,[rdx+0x50]
   14000666d:	lea    rcx,[rsp+0xc0]
   140006675:	call   0x14000ed52
   14000667a:	mov    r12d,0xa
   140006680:	mov    DWORD PTR [rsp+0x30],r13d
   140006685:	cmp    DWORD PTR [rsp+0x58],r13d
   14000668a:	jbe    0x140006a94
   140006690:	lea    rdi,[rsp+0xc0]
   140006698:	mov    r13,r12
   14000669b:	mov    r12,QWORD PTR [rdi]
   14000669e:	test   r12,r12
   1400066a1:	je     0x1400066bd
   1400066a3:	mov    rax,QWORD PTR [r12]
   1400066a7:	mov    rbx,QWORD PTR [rax+0x10]
   1400066ab:	mov    rcx,rbx
   1400066ae:	call   QWORD PTR [rip+0x9ed4]        # 0x140010588
   1400066b4:	mov    rcx,r12
   1400066b7:	call   rbx
   1400066b9:	and    QWORD PTR [rdi],0x0
   1400066bd:	add    rdi,0x8
   1400066c1:	sub    r13,rsi
   1400066c4:	jne    0x14000669b
   1400066c6:	lea    r12,[rip+0xa0b3]        # 0x140010780
   1400066cd:	mov    rdx,r12
   1400066d0:	lea    rcx,[rsp+0x48]
   1400066d5:	call   QWORD PTR [rip+0x9cfd]        # 0x1400103d8
   1400066db:	mov    rdx,r12
   1400066de:	lea    rcx,[rsp+0x40]
   1400066e3:	call   QWORD PTR [rip+0x9cef]        # 0x1400103d8
   1400066e9:	mov    rdx,r12
   1400066ec:	lea    rcx,[rsp+0x38]
   1400066f1:	call   QWORD PTR [rip+0x9ce1]        # 0x1400103d8
   1400066f7:	mov    rdx,r12
   1400066fa:	lea    rcx,[rsp+0x50]
   1400066ff:	call   QWORD PTR [rip+0x9cd3]        # 0x1400103d8
   140006705:	mov    rdi,QWORD PTR [rsp+0xa8]
   14000670d:	mov    rax,QWORD PTR [rdi]
   140006710:	mov    rbx,QWORD PTR [rax+0x20]
   140006714:	mov    rcx,rbx
   140006717:	call   QWORD PTR [rip+0x9e6b]        # 0x140010588
   14000671d:	lea    rax,[rsp+0x58]
   140006722:	mov    QWORD PTR [rsp+0x20],rax
   140006727:	lea    r9,[rsp+0xc0]
   14000672f:	lea    r8d,[r13+0xa]
   140006733:	or     edx,0xffffffff
   140006736:	mov    rcx,rdi
   140006739:	call   rbx
   14000673b:	add    DWORD PTR [rsp+0x5c],esi
   14000673f:	xor    edi,edi
   140006741:	test   eax,eax
   140006743:	js     0x140006a24
   140006749:	mov    r13d,edi
   14000674c:	mov    DWORD PTR [rsp+0x64],edi
   140006750:	mov    ebx,DWORD PTR [rsp+0x30]
   140006754:	cmp    r13d,DWORD PTR [rsp+0x58]
   140006759:	jae    0x1400069d7
   14000675f:	mov    edx,0x10
   140006764:	mov    rcx,r14
   140006767:	call   0x14000b49c
   14000676c:	mov    DWORD PTR [rsp+0x80],eax
   140006773:	mov    r12d,r13d
   140006776:	lea    r8,[rsp+0x48]
   14000677b:	lea    rdx,[rip+0xa356]        # 0x140010ad8
   140006782:	mov    rcx,QWORD PTR [rsp+r12*8+0xc0]
   14000678a:	call   0x140006008
   14000678f:	test   eax,eax
   140006791:	jns    0x14000679a
   140006793:	mov    ecx,eax
   140006795:	call   0x140007fe0
   14000679a:	lea    r8,[rsp+0x40]
   14000679f:	lea    rdx,[rip+0xa34a]        # 0x140010af0
   1400067a6:	mov    rcx,QWORD PTR [rsp+r12*8+0xc0]
   1400067ae:	call   0x140006008
   1400067b3:	test   eax,eax
   1400067b5:	jns    0x1400067be
   1400067b7:	mov    ecx,eax
   1400067b9:	call   0x140007fe0
   1400067be:	mov    rdi,QWORD PTR [rsp+r12*8+0xc0]
   1400067c6:	lea    rcx,[rsp+0x88]
   1400067ce:	call   QWORD PTR [rip+0x99e4]        # 0x1400101b8
   1400067d4:	mov    rax,QWORD PTR [rdi]
   1400067d7:	mov    rbx,QWORD PTR [rax+0x20]
   1400067db:	mov    rcx,rbx
   1400067de:	call   QWORD PTR [rip+0x9da4]        # 0x140010588
   1400067e4:	and    QWORD PTR [rsp+0x28],0x0
   1400067ea:	and    QWORD PTR [rsp+0x20],0x0
   1400067f0:	lea    r9,[rsp+0x88]
   1400067f8:	xor    r8d,r8d
   1400067fb:	lea    rdx,[rip+0xa2fe]        # 0x140010b00
   140006802:	mov    rcx,rdi
   140006805:	call   rbx
   140006807:	xor    ebx,ebx
   140006809:	test   eax,eax
   14000680b:	je     0x14000681d
   14000680d:	lea    rcx,[rsp+0x88]
   140006815:	call   QWORD PTR [rip+0x99ad]        # 0x1400101c8
   14000681b:	jmp    0x140006879
   14000681d:	movzx  eax,WORD PTR [rsp+0x88]
   140006825:	cmp    ax,si
   140006828:	je     0x140006861
   14000682a:	test   ax,ax
   14000682d:	je     0x140006869
   14000682f:	cmp    ax,0xb
   140006833:	jne    0x14000684d
   140006835:	mov    eax,ebx
   140006837:	or     ecx,0xffffffff
   14000683a:	cmp    WORD PTR [rsp+0x90],cx
   140006842:	sete   al
   140006845:	mov    DWORD PTR [rsp+0x60],eax
   140006849:	mov    DWORD PTR [rsp+0x70],eax
   14000684d:	lea    rcx,[rsp+0x88]
   140006855:	call   QWORD PTR [rip+0x996d]        # 0x1400101c8
   14000685b:	test   eax,eax
   14000685d:	je     0x140006884
   14000685f:	jmp    0x140006879
   140006861:	mov    DWORD PTR [rsp+0x60],ebx
   140006865:	mov    DWORD PTR [rsp+0x70],ebx
   140006869:	lea    rcx,[rsp+0x88]
   140006871:	call   QWORD PTR [rip+0x9951]        # 0x1400101c8
   140006877:	mov    eax,esi
   140006879:	test   eax,eax
   14000687b:	jns    0x140006884
   14000687d:	mov    ecx,eax
   14000687f:	call   0x140007fe0
   140006884:	lea    r8,[rsp+0x50]
   140006889:	lea    rdx,[rip+0xa288]        # 0x140010b18
   140006890:	mov    rcx,QWORD PTR [rsp+r12*8+0xc0]
   140006898:	call   0x140006008
   14000689d:	test   eax,eax
   14000689f:	jns    0x1400068a9
   1400068a1:	mov    ecx,eax
   1400068a3:	call   0x140007fe0
   1400068a8:	nop
   1400068a9:	mov    rdi,QWORD PTR [rsp+r12*8+0xc0]
   1400068b1:	test   rdi,rdi
   1400068b4:	je     0x1400068d5
   1400068b6:	mov    rax,QWORD PTR [rdi]
   1400068b9:	mov    rbx,QWORD PTR [rax+0x10]
   1400068bd:	mov    rcx,rbx
   1400068c0:	call   QWORD PTR [rip+0x9cc2]        # 0x140010588
   1400068c6:	mov    rcx,rdi
   1400068c9:	call   rbx
   1400068cb:	xor    ebx,ebx
   1400068cd:	mov    QWORD PTR [rsp+r12*8+0xc0],rbx
   1400068d5:	lea    rcx,[rsp+0x38]
   1400068da:	cmp    DWORD PTR [rsp+0x60],ebx
   1400068de:	lea    rdx,[rip+0x9fbb]        # 0x1400108a0
   1400068e5:	jne    0x1400068ee
   1400068e7:	lea    rdx,[rip+0x9fa2]        # 0x140010890
   1400068ee:	call   QWORD PTR [rip+0x9ae4]        # 0x1400103d8
   1400068f4:	mov    r9,QWORD PTR [rsp+0x48]
   1400068f9:	xor    r8d,r8d
   1400068fc:	mov    edi,DWORD PTR [rsp+0x80]
   140006903:	mov    edx,edi
   140006905:	mov    rcx,r14
   140006908:	call   0x14000b9b4
   14000690d:	mov    r9,QWORD PTR [rsp+0x40]
   140006912:	mov    r8d,esi
   140006915:	mov    edx,edi
   140006917:	mov    rcx,r14
   14000691a:	call   0x14000b9b4
   14000691f:	mov    r9,QWORD PTR [rsp+0x38]
   140006924:	mov    r8d,0x2
   14000692a:	mov    edx,edi
   14000692c:	mov    rcx,r14
   14000692f:	call   0x14000b9b4
   140006934:	mov    r9,QWORD PTR [rsp+0x50]
   140006939:	mov    ebx,0x3
   14000693e:	mov    r8d,ebx
   140006941:	mov    edx,edi
   140006943:	mov    rcx,r14
   140006946:	call   0x14000b9b4
   14000694b:	mov    eax,DWORD PTR [rsp+0x30]
   14000694f:	test   eax,eax
   140006951:	jne    0x140006973
   140006953:	mov    eax,r15d
   140006956:	and    eax,0xf
   140006959:	cmp    al,bl
   14000695b:	je     0x140006973
   14000695d:	mov    ecx,esi
   14000695f:	call   0x14000ebd8
   140006964:	mov    rcx,rax
   140006967:	lea    rdx,[rip+0x9e0a]        # 0x140010778
   14000696e:	call   0x14000999c
   140006973:	mov    ebx,esi
   140006975:	mov    DWORD PTR [rsp+0x30],ebx
   140006979:	lea    r12,[rip+0x9e00]        # 0x140010780
   140006980:	mov    rdx,r12
   140006983:	lea    rcx,[rsp+0x48]
   140006988:	call   QWORD PTR [rip+0x9a4a]        # 0x1400103d8
   14000698e:	mov    rdx,r12
   140006991:	lea    rcx,[rsp+0x40]
   140006996:	call   QWORD PTR [rip+0x9a3c]        # 0x1400103d8
   14000699c:	mov    rdx,r12
   14000699f:	lea    rcx,[rsp+0x38]
   1400069a4:	call   QWORD PTR [rip+0x9a2e]        # 0x1400103d8
   1400069aa:	mov    rdx,r12
   1400069ad:	lea    rcx,[rsp+0x50]
   1400069b2:	call   QWORD PTR [rip+0x9a20]        # 0x1400103d8
   1400069b8:	add    r13d,esi
   1400069bb:	mov    DWORD PTR [rsp+0x64],r13d
   1400069c0:	jmp    0x140006754
   1400069c5:	mov    esi,0x1
   1400069ca:	mov    rbx,QWORD PTR [rsp+0xa0]
   1400069d2:	jmp    0x140006afd
   1400069d7:	cmp    ebx,esi
   1400069d9:	mov    r12d,0xa
   1400069df:	lea    r13d,[r12-0xa]
   1400069e4:	jne    0x140006685
   1400069ea:	mov    r9,r14
   1400069ed:	mov    r8d,r15d
   1400069f0:	lea    rdx,[rsp+0x110]
   1400069f8:	lea    ecx,[r12-0x6]
   1400069fd:	call   0x14000cd98
   140006a02:	mov    rcx,r14
   140006a05:	call   0x14000b1d4
   140006a0a:	bts    r15d,0xc
   140006a0f:	mov    eax,r15d
   140006a12:	or     eax,esi
   140006a14:	cmp    eax,0x1001
   140006a19:	jne    0x140006685
   140006a1f:	jmp    0x140006680
   140006a24:	cmp    eax,0x80041010
   140006a29:	jne    0x140006a74
   140006a2b:	mov    ecx,0x212
   140006a30:	call   0x140008af0
   140006a35:	mov    rbx,rax
   140006a38:	mov    ecx,0x2
   140006a3d:	call   0x14000ebd8
   140006a42:	mov    rcx,rax
   140006a45:	mov    rdx,rbx
   140006a48:	call   0x14000999c
   140006a4d:	test   r14,r14
   140006a50:	je     0x140006af3
   140006a56:	cmp    DWORD PTR [r14],0x9
   140006a5a:	jne    0x140006af3
   140006a60:	mov    rcx,r14
   140006a63:	call   0x14000b1d4
   140006a68:	lea    rcx,[rsp+0x78]
   140006a6d:	call   0x14000a31c
   140006a72:	jmp    0x140006af3
   140006a74:	mov    ecx,eax
   140006a76:	call   0x140007e18
   140006a7b:	mov    ecx,0x2
   140006a80:	call   0x14000ebd8
   140006a85:	mov    rcx,rax
   140006a88:	mov    edx,0x20001
   140006a8d:	call   0x14000888c
   140006a92:	jmp    0x140006a4d
   140006a94:	mov    eax,DWORD PTR [rsp+0x5c]
   140006a98:	test   eax,eax
   140006a9a:	jne    0x140006b35
   140006aa0:	mov    ecx,0x212
   140006aa5:	call   0x140008af0
   140006aaa:	mov    rbx,rax
   140006aad:	mov    ecx,0x2
   140006ab2:	call   0x14000ebd8
   140006ab7:	mov    rcx,rax
   140006aba:	mov    rdx,rbx
   140006abd:	call   0x14000999c
   140006ac2:	lea    rdi,[rsp+0xc0]
   140006aca:	mov    r14,QWORD PTR [rdi]
   140006acd:	test   r14,r14
   140006ad0:	je     0x140006aea
   140006ad2:	mov    rax,QWORD PTR [r14]
   140006ad5:	mov    rbx,QWORD PTR [rax+0x10]
   140006ad9:	mov    rcx,rbx
   140006adc:	call   QWORD PTR [rip+0x9aa6]        # 0x140010588
   140006ae2:	mov    rcx,r14
   140006ae5:	call   rbx
   140006ae7:	mov    QWORD PTR [rdi],r13
   140006aea:	add    rdi,0x8
   140006aee:	sub    r12,rsi
   140006af1:	jne    0x140006aca
   140006af3:	mov    esi,0x8
   140006af8:	mov    rbx,QWORD PTR [rsp+0x68]
   140006afd:	lea    rcx,[rsp+0x38]
   140006b02:	call   QWORD PTR [rip+0x98b0]        # 0x1400103b8
   140006b08:	nop
   140006b09:	lea    rcx,[rsp+0x50]
   140006b0e:	call   QWORD PTR [rip+0x98a4]        # 0x1400103b8
   140006b14:	nop
   140006b15:	lea    rcx,[rsp+0x40]
   140006b1a:	call   QWORD PTR [rip+0x9898]        # 0x1400103b8
   140006b20:	nop
   140006b21:	lea    rcx,[rsp+0x48]
   140006b26:	call   QWORD PTR [rip+0x988c]        # 0x1400103b8
   140006b2c:	nop
   140006b2d:	mov    rcx,rbx
   140006b30:	jmp    0x1400065da
   140006b35:	test   r14,r14
   140006b38:	je     0x140006b53
   140006b3a:	cmp    DWORD PTR [r14],0x9
   140006b3e:	jne    0x140006b53
   140006b40:	mov    rcx,r14
   140006b43:	call   0x14000b1d4
   140006b48:	lea    rcx,[rsp+0x78]
   140006b4d:	call   0x14000a31c
   140006b52:	nop
   140006b53:	lea    rcx,[rsp+0x38]
   140006b58:	call   QWORD PTR [rip+0x985a]        # 0x1400103b8
   140006b5e:	nop
   140006b5f:	lea    rcx,[rsp+0x50]
   140006b64:	call   QWORD PTR [rip+0x984e]        # 0x1400103b8
   140006b6a:	nop
   140006b6b:	lea    rcx,[rsp+0x40]
   140006b70:	call   QWORD PTR [rip+0x9842]        # 0x1400103b8
   140006b76:	nop
   140006b77:	lea    rcx,[rsp+0x48]
   140006b7c:	call   QWORD PTR [rip+0x9836]        # 0x1400103b8
   140006b82:	nop
   140006b83:	mov    rcx,QWORD PTR [rsp+0x68]
   140006b88:	call   QWORD PTR [rip+0x982a]        # 0x1400103b8
   140006b8e:	xor    eax,eax
   140006b90:	mov    rcx,QWORD PTR [rsp+0xb90]
   140006b98:	xor    rcx,rsp
   140006b9b:	call   0x14000e560
   140006ba0:	add    rsp,0xba0
   140006ba7:	pop    r15
   140006ba9:	pop    r14
   140006bab:	pop    r13
   140006bad:	pop    r12
   140006baf:	pop    rdi
   140006bb0:	pop    rsi
   140006bb1:	pop    rbx
   140006bb2:	ret    
   140006bb3:	int3   
   140006bb4:	int3   
   140006bb5:	int3   
   140006bb6:	int3   
   140006bb7:	int3   
   140006bb8:	int3   
   140006bb9:	int3   
   140006bba:	int3   
   140006bbb:	int3   
   140006bbc:	mov    rax,rsp
   140006bbf:	mov    QWORD PTR [rax+0x8],rbx
   140006bc3:	mov    QWORD PTR [rax+0x10],rsi
   140006bc7:	push   rdi
   140006bc8:	sub    rsp,0x40
   140006bcc:	lea    rbx,[rcx+0x18]
   140006bd0:	xor    esi,esi
   140006bd2:	mov    rdi,rcx
   140006bd5:	cmp    QWORD PTR [rbx],rsi
   140006bd8:	jne    0x140006c8a
   140006bde:	mov    r8d,DWORD PTR [rcx+0x8]
   140006be2:	mov    r9d,0x400
   140006be8:	mov    QWORD PTR [rax-0x18],rsi
   140006bec:	mov    ecx,0x1100
   140006bf1:	mov    DWORD PTR [rax-0x20],esi
   140006bf4:	xor    edx,edx
   140006bf6:	mov    QWORD PTR [rax-0x28],rbx
   140006bfa:	call   QWORD PTR [rip+0x9478]        # 0x140010078
   140006c00:	mov    r8,QWORD PTR [rbx]
   140006c03:	mov    ecx,eax
   140006c05:	test   r8,r8
   140006c08:	je     0x140006c31
   140006c0a:	cmp    eax,0x1
   140006c0d:	jbe    0x140006c8a
   140006c0f:	dec    eax
   140006c11:	cmp    WORD PTR [r8+rax*2],0xa
   140006c17:	jne    0x140006c8a
   140006c19:	mov    WORD PTR [r8+rax*2],si
   140006c1e:	add    ecx,0xfffffffe
   140006c21:	mov    rax,QWORD PTR [rbx]
   140006c24:	cmp    WORD PTR [rax+rcx*2],0xd
   140006c29:	jne    0x140006c8a
   140006c2b:	mov    WORD PTR [rax+rcx*2],si
   140006c2f:	jmp    0x140006c8a
   140006c31:	mov    edx,0x40
   140006c36:	xor    ecx,ecx
   140006c38:	call   QWORD PTR [rip+0x9442]        # 0x140010080
   140006c3e:	mov    QWORD PTR [rbx],rax
   140006c41:	mov    rcx,rax
   140006c44:	test   rax,rax
   140006c47:	je     0x140006c8a
   140006c49:	mov    r8d,DWORD PTR [rdi+0x8]
   140006c4d:	lea    eax,[r8+0x7ffbfe00]
   140006c54:	cmp    eax,0xfdff
   140006c59:	ja     0x140006c69
   140006c5b:	mov    edx,0x200
   140006c60:	movzx  eax,r8w
   140006c64:	sub    ax,dx
   140006c67:	jmp    0x140006c6b
   140006c69:	mov    eax,esi
   140006c6b:	test   ax,ax
   140006c6e:	je     0x140006c7d
   140006c70:	movzx  r8d,ax
   140006c74:	lea    rdx,[rip+0x9ebd]        # 0x140010b38
   140006c7b:	jmp    0x140006c84
   140006c7d:	lea    rdx,[rip+0x9edc]        # 0x140010b60
   140006c84:	call   QWORD PTR [rip+0x95a6]        # 0x140010230
   140006c8a:	mov    rax,QWORD PTR [rbx]
   140006c8d:	mov    rbx,QWORD PTR [rsp+0x50]
   140006c92:	mov    rsi,QWORD PTR [rsp+0x58]
   140006c97:	add    rsp,0x40
   140006c9b:	pop    rdi
   140006c9c:	ret    
   140006c9d:	int3   
   140006c9e:	int3   
   140006c9f:	int3   
   140006ca0:	int3   
   140006ca1:	int3   
   140006ca2:	int3   
   140006ca3:	int3   
   140006ca4:	mov    QWORD PTR [rsp+0x18],r8
   140006ca9:	mov    QWORD PTR [rsp+0x20],r9
   140006cae:	push   rbx
   140006caf:	push   rbp
   140006cb0:	push   rsi
   140006cb1:	push   rdi
   140006cb2:	sub    rsp,0x28
   140006cb6:	xor    ebp,ebp
   140006cb8:	lea    rax,[rdx-0x1]
   140006cbc:	cmp    rax,0x7ffffffe
   140006cc2:	mov    rsi,rcx
   140006cc5:	mov    edi,ebp
   140006cc7:	mov    ecx,0x80070057
   140006ccc:	cmova  edi,ecx
   140006ccf:	test   edi,edi
   140006cd1:	js     0x140006d08
   140006cd3:	lea    rbx,[rdx-0x1]
   140006cd7:	mov    rcx,rsi
   140006cda:	mov    rdx,rbx
   140006cdd:	lea    r9,[rsp+0x68]
   140006ce2:	mov    edi,ebp
   140006ce4:	call   QWORD PTR [rip+0x97ae]        # 0x140010498
   140006cea:	test   eax,eax
   140006cec:	js     0x140006cfd
   140006cee:	cdqe   
   140006cf0:	cmp    rax,rbx
   140006cf3:	ja     0x140006cfd
   140006cf5:	jne    0x140006d10
   140006cf7:	mov    WORD PTR [rsi+rbx*2],bp
   140006cfb:	jmp    0x140006d10
   140006cfd:	mov    WORD PTR [rsi+rbx*2],bp
   140006d01:	mov    edi,0x8007007a
   140006d06:	jmp    0x140006d10
   140006d08:	test   rdx,rdx
   140006d0b:	je     0x140006d10
   140006d0d:	mov    WORD PTR [rsi],bp
   140006d10:	mov    eax,edi
   140006d12:	add    rsp,0x28
   140006d16:	pop    rdi
   140006d17:	pop    rsi
   140006d18:	pop    rbp
   140006d19:	pop    rbx
   140006d1a:	ret    
   140006d1b:	int3   
   140006d1c:	int3   
   140006d1d:	int3   
   140006d1e:	int3   
   140006d1f:	int3   
   140006d20:	int3   
   140006d21:	int3   
   140006d22:	int3   
   140006d23:	int3   
   140006d24:	rex push rbp
   140006d26:	mov    rbp,rsp
   140006d29:	sub    rsp,0x30
   140006d2d:	mov    QWORD PTR [rbp-0x10],0xfffffffffffffffe
   140006d35:	mov    QWORD PTR [rsp+0x48],rbx
   140006d3a:	mov    QWORD PTR [rsp+0x58],rdi
   140006d3f:	mov    rdi,rdx
   140006d42:	mov    rbx,rcx
   140006d45:	lea    rcx,[rbp+0x10]
   140006d49:	call   QWORD PTR [rip+0x9659]        # 0x1400103a8
   140006d4f:	nop
   140006d50:	test   rbx,rbx
   140006d53:	je     0x140006dfb
   140006d59:	and    DWORD PTR [rdi],0x0
   140006d5c:	mov    rdx,rbx
   140006d5f:	lea    rcx,[rbp+0x10]
   140006d63:	call   QWORD PTR [rip+0x966f]        # 0x1400103d8
   140006d69:	mov    rcx,QWORD PTR [rbp+0x10]
   140006d6d:	call   0x14000a5f8
   140006d72:	mov    ebx,0x1
   140006d77:	cmp    eax,ebx
   140006d79:	jne    0x140006db6
   140006d7b:	lea    r8d,[rbx+0x1]
   140006d7f:	lea    rdx,[rbp+0x20]
   140006d83:	lea    rcx,[rbp+0x10]
   140006d87:	call   QWORD PTR [rip+0x95eb]        # 0x140010378
   140006d8d:	nop
   140006d8e:	mov    rdx,rax
   140006d91:	lea    rcx,[rbp+0x10]
   140006d95:	call   QWORD PTR [rip+0x9645]        # 0x1400103e0
   140006d9b:	nop
   140006d9c:	lea    rcx,[rbp+0x20]
   140006da0:	call   QWORD PTR [rip+0x9612]        # 0x1400103b8
   140006da6:	lea    rcx,[rbp+0x10]
   140006daa:	call   QWORD PTR [rip+0x9610]        # 0x1400103c0
   140006db0:	cmp    DWORD PTR [rax+0x4],0x0
   140006db4:	je     0x140006dfb
   140006db6:	mov    edx,0x5c
   140006dbb:	lea    rcx,[rbp+0x10]
   140006dbf:	call   QWORD PTR [rip+0x95bb]        # 0x140010380
   140006dc5:	cmp    eax,0xffffffff
   140006dc8:	jne    0x140006dfb
   140006dca:	mov    DWORD PTR [rdi],ebx
   140006dcc:	lea    rdx,[rip+0x9db9]        # 0x140010b8c
   140006dd3:	mov    rcx,QWORD PTR [rbp+0x10]
   140006dd7:	call   QWORD PTR [rip+0x96c3]        # 0x1400104a0
   140006ddd:	test   eax,eax
   140006ddf:	je     0x140006dfd
   140006de1:	mov    rcx,QWORD PTR [rbp+0x10]
   140006de5:	call   0x14000a83c
   140006dea:	test   eax,eax
   140006dec:	je     0x140006dfb
   140006dee:	mov    rcx,QWORD PTR [rbp+0x10]
   140006df2:	call   0x14000a660
   140006df7:	mov    DWORD PTR [rdi],eax
   140006df9:	jmp    0x140006dfd
   140006dfb:	xor    ebx,ebx
   140006dfd:	lea    rcx,[rbp+0x10]
   140006e01:	call   QWORD PTR [rip+0x95b1]        # 0x1400103b8
   140006e07:	mov    eax,ebx
   140006e09:	mov    rbx,QWORD PTR [rsp+0x48]
   140006e0e:	mov    rdi,QWORD PTR [rsp+0x58]
   140006e13:	add    rsp,0x30
   140006e17:	pop    rbp
   140006e18:	ret    
   140006e19:	int3   
   140006e1a:	int3   
   140006e1b:	int3   
   140006e1c:	int3   
   140006e1d:	int3   
   140006e1e:	int3   
   140006e1f:	int3   
   140006e20:	mov    rax,rsp
   140006e23:	mov    QWORD PTR [rax+0x20],r9
   140006e27:	mov    QWORD PTR [rax+0x10],rdx
   140006e2b:	mov    QWORD PTR [rax+0x8],rcx
   140006e2f:	push   rbx
   140006e30:	push   rsi
   140006e31:	push   rdi
   140006e32:	push   r12
   140006e34:	push   r13
   140006e36:	push   r14
   140006e38:	push   r15
   140006e3a:	sub    rsp,0xb0
   140006e41:	mov    QWORD PTR [rax-0x48],0xfffffffffffffffe
   140006e49:	mov    r15,r9
   140006e4c:	mov    rsi,r8
   140006e4f:	mov    r12,rcx
   140006e52:	xor    r14d,r14d
   140006e55:	mov    DWORD PTR [rax-0x80],r14d
   140006e59:	mov    DWORD PTR [rax+0x38],r14d
   140006e5d:	mov    QWORD PTR [rax-0x60],r14
   140006e61:	mov    QWORD PTR [rax+0x40],r14
   140006e65:	mov    edi,r14d
   140006e68:	mov    QWORD PTR [rax-0x78],r14
   140006e6c:	mov    ebx,r14d
   140006e6f:	mov    QWORD PTR [rsp+0x60],rbx
   140006e74:	mov    rax,QWORD PTR [rsp+0x138]
   140006e7c:	test   rax,rax
   140006e7f:	je     0x140006e84
   140006e81:	mov    DWORD PTR [rax],r14d
   140006e84:	mov    r13,QWORD PTR [rsp+0x130]
   140006e8c:	test   r13,r13
   140006e8f:	je     0x140006e95
   140006e91:	mov    DWORD PTR [r13+0x0],r14d
   140006e95:	xor    ecx,ecx
   140006e97:	call   QWORD PTR [rip+0x92bb]        # 0x140010158
   140006e9d:	mov    DWORD PTR [rsp+0x68],r14d
   140006ea2:	test   r12,r12
   140006ea5:	jne    0x140006eec
   140006ea7:	test   r13,r13
   140006eaa:	je     0x140006eb4
   140006eac:	mov    DWORD PTR [r13+0x0],0x80041008
   140006eb4:	lea    rcx,[rsp+0x60]
   140006eb9:	call   0x14000109c
   140006ebe:	nop
   140006ebf:	lea    rcx,[rsp+0x70]
   140006ec4:	call   0x14000109c
   140006ec9:	nop
   140006eca:	lea    rcx,[rsp+0x128]
   140006ed2:	call   0x14000109c
   140006ed7:	nop
   140006ed8:	lea    rcx,[rsp+0x88]
   140006ee0:	call   0x14000109c
   140006ee5:	xor    eax,eax
   140006ee7:	jmp    0x140007360
   140006eec:	lea    rdx,[rsp+0x120]
   140006ef4:	mov    rcx,rsi
   140006ef7:	call   0x140006d24
   140006efc:	test   eax,eax
   140006efe:	jne    0x140006f08
   140006f00:	lea    ecx,[rax+0x35]
   140006f03:	call   0x140007fe0
   140006f08:	mov    rcx,r15
   140006f0b:	call   0x140007bc8
   140006f10:	test   eax,eax
   140006f12:	jne    0x140006f1e
   140006f14:	mov    ecx,0x525
   140006f19:	call   0x140007fe0
   140006f1e:	lea    rdx,[rip+0x9723]        # 0x140010648
   140006f25:	lea    rcx,[rsp+0x128]
   140006f2d:	call   0x140001194
   140006f32:	mov    r12d,DWORD PTR [rsp+0x120]
   140006f3a:	test   rsi,rsi
   140006f3d:	je     0x1400070f1
   140006f43:	test   r12d,r12d
   140006f46:	jne    0x1400070f1
   140006f4c:	mov    rdx,rsi
   140006f4f:	lea    rcx,[rsp+0x88]
   140006f57:	call   0x140001194
   140006f5c:	mov    rcx,rsi
   140006f5f:	call   0x14000a5f8
   140006f64:	lea    r15d,[r12+0x1]
   140006f69:	lea    rdx,[rip+0x96d8]        # 0x140010648
   140006f70:	cmp    eax,r15d
   140006f73:	jne    0x140007003
   140006f79:	lea    rcx,[rsp+0x58]
   140006f7e:	call   0x140001008
   140006f83:	nop
   140006f84:	lea    rdx,[rip+0x968d]        # 0x140010618
   140006f8b:	lea    rcx,[rsp+0x50]
   140006f90:	call   0x140001008
   140006f95:	nop
   140006f96:	lea    r8,[rsp+0x50]
   140006f9b:	lea    rdx,[rsp+0x98]
   140006fa3:	lea    rcx,[rsp+0x88]
   140006fab:	call   0x140001310
   140006fb0:	nop
   140006fb1:	lea    r8,[rsp+0x58]
   140006fb6:	lea    rdx,[rsp+0x78]
   140006fbb:	mov    rcx,rax
   140006fbe:	call   0x140001310
   140006fc3:	nop
   140006fc4:	mov    rdx,rax
   140006fc7:	lea    rcx,[rsp+0x128]
   140006fcf:	call   0x140001108
   140006fd4:	nop
   140006fd5:	lea    rcx,[rsp+0x78]
   140006fda:	call   0x14000109c
   140006fdf:	nop
   140006fe0:	lea    rcx,[rsp+0x98]
   140006fe8:	call   0x14000109c
   140006fed:	nop
   140006fee:	lea    rcx,[rsp+0x50]
   140006ff3:	call   0x14000109c
   140006ff8:	nop
   140006ff9:	lea    rcx,[rsp+0x58]
   140006ffe:	jmp    0x1400070a7
   140007003:	lea    rcx,[rsp+0x50]
   140007008:	call   0x140001008
   14000700d:	nop
   14000700e:	lea    rdx,[rip+0x9603]        # 0x140010618
   140007015:	lea    rcx,[rsp+0x58]
   14000701a:	call   0x140001008
   14000701f:	nop
   140007020:	lea    r8,[rsp+0x88]
   140007028:	lea    rcx,[rsp+0x90]
   140007030:	call   0x140001360
   140007035:	nop
   140007036:	lea    r8,[rsp+0x58]
   14000703b:	lea    rdx,[rsp+0x78]
   140007040:	mov    rcx,rax
   140007043:	call   0x140001310
   140007048:	nop
   140007049:	lea    r8,[rsp+0x50]
   14000704e:	lea    rdx,[rsp+0x98]
   140007056:	mov    rcx,rax
   140007059:	call   0x140001310
   14000705e:	nop
   14000705f:	mov    rdx,rax
   140007062:	lea    rcx,[rsp+0x128]
   14000706a:	call   0x140001108
   14000706f:	nop
   140007070:	lea    rcx,[rsp+0x98]
   140007078:	call   0x14000109c
   14000707d:	nop
   14000707e:	lea    rcx,[rsp+0x78]
   140007083:	call   0x14000109c
   140007088:	nop
   140007089:	lea    rcx,[rsp+0x90]
   140007091:	call   0x14000109c
   140007096:	nop
   140007097:	lea    rcx,[rsp+0x58]
   14000709c:	call   0x14000109c
   1400070a1:	nop
   1400070a2:	lea    rcx,[rsp+0x50]
   1400070a7:	call   0x14000109c
   1400070ac:	mov    rsi,QWORD PTR [rsp+0x108]
   1400070b4:	test   rsi,rsi
   1400070b7:	je     0x1400070f7
   1400070b9:	mov    rcx,rsi
   1400070bc:	call   QWORD PTR [rip+0x9086]        # 0x140010148
   1400070c2:	test   eax,eax
   1400070c4:	je     0x1400070f7
   1400070c6:	mov    rdx,rsi
   1400070c9:	lea    rcx,[rsp+0x70]
   1400070ce:	call   0x140001194
   1400070d3:	mov    rdx,QWORD PTR [rsp+0x110]
   1400070db:	lea    rcx,[rsp+0x60]
   1400070e0:	call   0x140001194
   1400070e5:	mov    rdi,QWORD PTR [rsp+0x70]
   1400070ea:	mov    rbx,QWORD PTR [rsp+0x60]
   1400070ef:	jmp    0x1400070f7
   1400070f1:	mov    r15d,0x1
   1400070f7:	mov    rax,QWORD PTR [rsp+0xf8]
   1400070ff:	mov    rax,QWORD PTR [rax]
   140007102:	mov    QWORD PTR [rsp+0x90],rax
   14000710a:	test   rax,rax
   14000710d:	je     0x140007134
   14000710f:	mov    rax,QWORD PTR [rax]
   140007112:	mov    rsi,QWORD PTR [rax+0x10]
   140007116:	mov    rcx,rsi
   140007119:	call   QWORD PTR [rip+0x9469]        # 0x140010588
   14000711f:	mov    rcx,QWORD PTR [rsp+0x90]
   140007127:	call   rsi
   140007129:	mov    rax,QWORD PTR [rsp+0xf8]
   140007131:	mov    QWORD PTR [rax],r14
   140007134:	test   rbx,rbx
   140007137:	je     0x140007143
   140007139:	mov    rax,QWORD PTR [rbx]
   14000713c:	mov    QWORD PTR [rsp+0x58],rax
   140007141:	jmp    0x140007148
   140007143:	mov    QWORD PTR [rsp+0x58],r14
   140007148:	test   rdi,rdi
   14000714b:	je     0x140007157
   14000714d:	mov    rcx,QWORD PTR [rdi]
   140007150:	mov    QWORD PTR [rsp+0x50],rcx
   140007155:	jmp    0x14000715c
   140007157:	mov    QWORD PTR [rsp+0x50],r14
   14000715c:	mov    rax,QWORD PTR [rsp+0x128]
   140007164:	test   rax,rax
   140007167:	je     0x140007173
   140007169:	mov    rax,QWORD PTR [rax]
   14000716c:	mov    QWORD PTR [rsp+0x78],rax
   140007171:	jmp    0x140007178
   140007173:	mov    QWORD PTR [rsp+0x78],r14
   140007178:	mov    rax,QWORD PTR [rsp+0xf0]
   140007180:	mov    rax,QWORD PTR [rax]
   140007183:	mov    rsi,QWORD PTR [rax+0x18]
   140007187:	mov    rcx,rsi
   14000718a:	call   QWORD PTR [rip+0x93f8]        # 0x140010588
   140007190:	mov    rax,QWORD PTR [rsp+0xf8]
   140007198:	mov    QWORD PTR [rsp+0x40],rax
   14000719d:	mov    QWORD PTR [rsp+0x38],r14
   1400071a2:	mov    QWORD PTR [rsp+0x30],r14
   1400071a7:	mov    DWORD PTR [rsp+0x28],r14d
   1400071ac:	mov    QWORD PTR [rsp+0x20],r14
   1400071b1:	mov    r9,QWORD PTR [rsp+0x58]
   1400071b6:	mov    r8,QWORD PTR [rsp+0x50]
   1400071bb:	mov    rdx,QWORD PTR [rsp+0x78]
   1400071c0:	mov    rcx,QWORD PTR [rsp+0xf0]
   1400071c8:	call   rsi
   1400071ca:	mov    DWORD PTR [rsp+0x80],eax
   1400071d1:	test   eax,eax
   1400071d3:	jns    0x1400072b1
   1400071d9:	cmp    eax,0x80070005
   1400071de:	je     0x1400072aa
   1400071e4:	cmp    eax,0x80041064
   1400071e9:	jne    0x14000728e
   1400071ef:	mov    r12d,r15d
   1400071f2:	mov    DWORD PTR [rsp+0x120],r15d
   1400071fa:	xor    edx,edx
   1400071fc:	lea    rcx,[rsp+0x70]
   140007201:	call   0x140001194
   140007206:	xor    edx,edx
   140007208:	lea    rcx,[rsp+0x60]
   14000720d:	call   0x140001194
   140007212:	lea    rdx,[rip+0x942f]        # 0x140010648
   140007219:	lea    rcx,[rsp+0x128]
   140007221:	call   0x140001194
   140007226:	mov    rax,QWORD PTR [rsp+0x128]
   14000722e:	test   rax,rax
   140007231:	je     0x140007238
   140007233:	mov    rsi,QWORD PTR [rax]
   140007236:	jmp    0x14000723b
   140007238:	mov    rsi,r14
   14000723b:	mov    rdi,QWORD PTR [rsp+0xf0]
   140007243:	mov    rax,QWORD PTR [rdi]
   140007246:	mov    rbx,QWORD PTR [rax+0x18]
   14000724a:	mov    rcx,rbx
   14000724d:	call   QWORD PTR [rip+0x9335]        # 0x140010588
   140007253:	mov    rax,QWORD PTR [rsp+0xf8]
   14000725b:	mov    QWORD PTR [rsp+0x40],rax
   140007260:	mov    QWORD PTR [rsp+0x38],r14
   140007265:	mov    QWORD PTR [rsp+0x30],r14
   14000726a:	mov    DWORD PTR [rsp+0x28],r14d
   14000726f:	mov    QWORD PTR [rsp+0x20],r14
   140007274:	xor    r9d,r9d
   140007277:	xor    r8d,r8d
   14000727a:	mov    rdx,rsi
   14000727d:	mov    rcx,rdi
   140007280:	call   rbx
   140007282:	mov    DWORD PTR [rsp+0x80],eax
   140007289:	mov    rdi,QWORD PTR [rsp+0x70]
   14000728e:	test   eax,eax
   140007290:	js     0x1400072aa
   140007292:	lea    rdx,[rip+0x938f]        # 0x140010628
   140007299:	lea    rcx,[rsp+0x60]
   14000729e:	call   0x140001194
   1400072a3:	mov    rbx,QWORD PTR [rsp+0x60]
   1400072a8:	jmp    0x1400072b1
   1400072aa:	mov    ecx,eax
   1400072ac:	call   0x140007fe0
   1400072b1:	test   rbx,rbx
   1400072b4:	je     0x1400072bb
   1400072b6:	mov    r9,QWORD PTR [rbx]
   1400072b9:	jmp    0x1400072be
   1400072bb:	mov    r9,r14
   1400072be:	test   rdi,rdi
   1400072c1:	je     0x1400072c8
   1400072c3:	mov    r8,QWORD PTR [rdi]
   1400072c6:	jmp    0x1400072cb
   1400072c8:	mov    r8,r14
   1400072cb:	mov    DWORD PTR [rsp+0x28],r12d
   1400072d0:	mov    rax,QWORD PTR [rsp+0x118]
   1400072d8:	mov    QWORD PTR [rsp+0x20],rax
   1400072dd:	mov    rax,QWORD PTR [rsp+0xf8]
   1400072e5:	mov    rcx,QWORD PTR [rax]
   1400072e8:	call   0x140007c6c
   1400072ed:	mov    DWORD PTR [rsp+0x80],eax
   1400072f4:	test   eax,eax
   1400072f6:	jns    0x1400072ff
   1400072f8:	mov    ecx,eax
   1400072fa:	call   0x140007fe0
   1400072ff:	mov    DWORD PTR [rsp+0x68],r15d
   140007304:	test   r13,r13
   140007307:	je     0x14000730d
   140007309:	mov    DWORD PTR [r13+0x0],r14d
   14000730d:	jmp    0x14000731c
   14000730f:	mov    r15d,DWORD PTR [rsp+0x68]
   140007314:	mov    r12d,DWORD PTR [rsp+0x120]
   14000731c:	mov    rax,QWORD PTR [rsp+0x138]
   140007324:	test   rax,rax
   140007327:	je     0x14000732c
   140007329:	mov    DWORD PTR [rax],r12d
   14000732c:	lea    rcx,[rsp+0x60]
   140007331:	call   0x14000109c
   140007336:	nop
   140007337:	lea    rcx,[rsp+0x70]
   14000733c:	call   0x14000109c
   140007341:	nop
   140007342:	lea    rcx,[rsp+0x128]
   14000734a:	call   0x14000109c
   14000734f:	nop
   140007350:	lea    rcx,[rsp+0x88]
   140007358:	call   0x14000109c
   14000735d:	mov    eax,r15d
   140007360:	add    rsp,0xb0
   140007367:	pop    r15
   140007369:	pop    r14
   14000736b:	pop    r13
   14000736d:	pop    r12
   14000736f:	pop    rdi
   140007370:	pop    rsi
   140007371:	pop    rbx
   140007372:	ret    
   140007373:	int3   
   140007374:	int3   
   140007375:	int3   
   140007376:	int3   
   140007377:	int3   
   140007378:	int3   
   140007379:	int3   
   14000737a:	int3   
   14000737b:	int3   
   14000737c:	rex push rbx
   14000737e:	push   rdi
   14000737f:	push   r12
   140007381:	push   r13
   140007383:	push   r14
   140007385:	push   r15
   140007387:	sub    rsp,0x4b8
   14000738e:	mov    QWORD PTR [rsp+0x98],0xfffffffffffffffe
   14000739a:	mov    rax,QWORD PTR [rip+0xdc67]        # 0x140015008
   1400073a1:	xor    rax,rsp
   1400073a4:	mov    QWORD PTR [rsp+0x4a0],rax
   1400073ac:	mov    r15,r9
   1400073af:	mov    r13,r8
   1400073b2:	mov    QWORD PTR [rsp+0x60],rdx
   1400073b7:	mov    r14,rcx
   1400073ba:	mov    QWORD PTR [rsp+0x88],rcx
   1400073c2:	mov    r12,QWORD PTR [rsp+0x510]
   1400073ca:	mov    rax,QWORD PTR [rsp+0x518]
   1400073d2:	mov    QWORD PTR [rsp+0x70],rax
   1400073d7:	mov    rax,QWORD PTR [rsp+0x530]
   1400073df:	mov    QWORD PTR [rsp+0x68],rax
   1400073e4:	and    DWORD PTR [rsp+0x50],0x0
   1400073e9:	and    DWORD PTR [rsp+0x7c],0x0
   1400073ee:	lea    rdx,[rip+0x9237]        # 0x14001062c
   1400073f5:	lea    rcx,[rsp+0x58]
   1400073fa:	call   QWORD PTR [rip+0x8f90]        # 0x140010390
   140007400:	nop
   140007401:	and    DWORD PTR [rsp+0xa0],0x0
   140007409:	xor    edx,edx
   14000740b:	mov    r8d,0x1fa
   140007411:	lea    rcx,[rsp+0xa4]
   140007419:	call   0x14000ed52
   14000741e:	xor    ecx,ecx
   140007420:	call   QWORD PTR [rip+0x8d32]        # 0x140010158
   140007426:	mov    edi,DWORD PTR [rsp+0x520]
   14000742d:	mov    ebx,0x1
   140007432:	cmp    edi,ebx
   140007434:	jne    0x14000744e
   140007436:	lea    rdx,[rip+0x94d3]        # 0x140010910
   14000743d:	mov    rcx,r12
   140007440:	call   QWORD PTR [rip+0x8f2a]        # 0x140010370
   140007446:	test   eax,eax
   140007448:	je     0x14000753e
   14000744e:	mov    rcx,r15
   140007451:	call   QWORD PTR [rip+0x8f69]        # 0x1400103c0
   140007457:	cmp    DWORD PTR [rax+0x4],0x0
   14000745b:	jne    0x140007486
   14000745d:	mov    rax,QWORD PTR [rsp+0x68]
   140007462:	mov    QWORD PTR [rsp+0x48],rax
   140007467:	lea    rax,[rsp+0x50]
   14000746c:	mov    QWORD PTR [rsp+0x40],rax
   140007471:	mov    rax,QWORD PTR [rsp+0x70]
   140007476:	mov    QWORD PTR [rsp+0x28],rax
   14000747b:	and    QWORD PTR [rsp+0x20],0x0
   140007481:	xor    r9d,r9d
   140007484:	jmp    0x1400074b6
   140007486:	xor    eax,eax
   140007488:	test   edi,edi
   14000748a:	jne    0x140007490
   14000748c:	mov    rax,QWORD PTR [r12]
   140007490:	mov    rcx,QWORD PTR [rsp+0x68]
   140007495:	mov    QWORD PTR [rsp+0x48],rcx
   14000749a:	lea    rcx,[rsp+0x50]
   14000749f:	mov    QWORD PTR [rsp+0x40],rcx
   1400074a4:	mov    rcx,QWORD PTR [rsp+0x70]
   1400074a9:	mov    QWORD PTR [rsp+0x28],rcx
   1400074ae:	mov    QWORD PTR [rsp+0x20],rax
   1400074b3:	mov    r9,QWORD PTR [r15]
   1400074b6:	mov    r8,QWORD PTR [r13+0x0]
   1400074ba:	mov    rdx,QWORD PTR [rsp+0x60]
   1400074bf:	mov    rcx,r14
   1400074c2:	call   0x140006e20
   1400074c7:	cmp    eax,ebx
   1400074c9:	je     0x140007761
   1400074cf:	mov    ecx,DWORD PTR [rsp+0x50]
   1400074d3:	cmp    ecx,0x80040154
   1400074d9:	je     0x140007770
   1400074df:	cmp    ecx,0x80041064
   1400074e5:	je     0x14000753a
   1400074e7:	cmp    ecx,0x80070005
   1400074ed:	je     0x14000753a
   1400074ef:	call   0x140007e18
   1400074f4:	mov    ecx,0xca
   1400074f9:	call   0x140008af0
   1400074fe:	mov    r14d,0x2
   140007504:	mov    rbx,rax
   140007507:	mov    ecx,r14d
   14000750a:	call   0x14000ebd8
   14000750f:	mov    rdx,rbx
   140007512:	mov    rcx,rax
   140007515:	call   0x14000999c
   14000751a:	call   0x1400084e8
   14000751f:	mov    rbx,rax
   140007522:	mov    ecx,r14d
   140007525:	call   0x14000ebd8
   14000752a:	mov    rdx,rbx
   14000752d:	mov    rcx,rax
   140007530:	call   0x14000999c
   140007535:	jmp    0x14000775f
   14000753a:	test   edi,edi
   14000753c:	je     0x1400074ef
   14000753e:	mov    rcx,r15
   140007541:	call   QWORD PTR [rip+0x8e79]        # 0x1400103c0
   140007547:	cmp    DWORD PTR [rax+0x4],0x0
   14000754b:	jne    0x140007640
   140007551:	mov    ebx,0xfe
   140007556:	mov    edx,ebx
   140007558:	mov    rcx,r15
   14000755b:	call   QWORD PTR [rip+0x8e27]        # 0x140010388
   140007561:	mov    rdi,rax
   140007564:	mov    QWORD PTR [rsp+0x90],rax
   14000756c:	mov    DWORD PTR [rsp+0x78],ebx
   140007570:	lea    r8,[rsp+0x78]
   140007575:	lea    rdx,[rsp+0x2a0]
   14000757d:	mov    r14d,0x2
   140007583:	mov    ecx,r14d
   140007586:	call   QWORD PTR [rip+0x8c84]        # 0x140010210
   14000758c:	test   al,al
   14000758e:	jne    0x1400075ca
   140007590:	call   0x1400086e0
   140007595:	mov    ecx,0xca
   14000759a:	call   0x140008af0
   14000759f:	mov    rbx,rax
   1400075a2:	mov    ecx,r14d
   1400075a5:	call   0x14000ebd8
   1400075aa:	mov    rcx,rax
   1400075ad:	mov    rdx,rbx
   1400075b0:	call   0x14000999c
   1400075b5:	mov    ecx,r14d
   1400075b8:	call   0x14000ebd8
   1400075bd:	mov    rcx,rax
   1400075c0:	call   0x14000884c
   1400075c5:	jmp    0x14000775f
   1400075ca:	mov    r8d,ebx
   1400075cd:	lea    rdx,[rsp+0x2a0]
   1400075d5:	mov    rcx,rdi
   1400075d8:	call   0x140009774
   1400075dd:	mov    edx,0x5c
   1400075e2:	mov    rcx,rdi
   1400075e5:	call   QWORD PTR [rip+0x8ea5]        # 0x140010490
   1400075eb:	test   rax,rax
   1400075ee:	jne    0x14000762d
   1400075f0:	lea    rax,[rsp+0x2a0]
   1400075f8:	mov    QWORD PTR [rsp+0x20],rax
   1400075fd:	mov    r9,QWORD PTR [r13+0x0]
   140007601:	lea    r8,[rip+0x9588]        # 0x140010b90
   140007608:	mov    edx,0xff
   14000760d:	lea    rcx,[rsp+0xa0]
   140007615:	call   0x140006ca4
   14000761a:	mov    r8d,ebx
   14000761d:	lea    rdx,[rsp+0xa0]
   140007625:	mov    rcx,rdi
   140007628:	call   0x140009774
   14000762d:	or     edx,0xffffffff
   140007630:	mov    rcx,r15
   140007633:	call   QWORD PTR [rip+0x8d77]        # 0x1400103b0
   140007639:	jmp    0x14000764b
   14000763b:	jmp    0x14000775f
   140007640:	mov    ebx,0xfe
   140007645:	mov    r14d,0x2
   14000764b:	mov    edx,ebx
   14000764d:	mov    rcx,r12
   140007650:	call   QWORD PTR [rip+0x8d32]        # 0x140010388
   140007656:	mov    QWORD PTR [rsp+0x80],rax
   14000765e:	mov    ecx,0xcc
   140007663:	call   0x140008af0
   140007668:	mov    rdx,rax
   14000766b:	mov    r8,QWORD PTR [r15]
   14000766e:	lea    rcx,[rsp+0x58]
   140007673:	call   QWORD PTR [rip+0x8d57]        # 0x1400103d0
   140007679:	lea    rcx,[rsp+0x58]
   14000767e:	call   QWORD PTR [rip+0x8d3c]        # 0x1400103c0
   140007684:	mov    ebx,DWORD PTR [rax+0x4]
   140007687:	mov    rdi,QWORD PTR [rsp+0x58]
   14000768c:	mov    ecx,0xfffffff4
   140007691:	call   QWORD PTR [rip+0x89f9]        # 0x140010090
   140007697:	mov    rcx,rax
   14000769a:	and    QWORD PTR [rsp+0x20],0x0
   1400076a0:	lea    r9,[rsp+0x7c]
   1400076a5:	mov    r8d,ebx
   1400076a8:	mov    rdx,rdi
   1400076ab:	call   QWORD PTR [rip+0x89d7]        # 0x140010088
   1400076b1:	mov    rcx,QWORD PTR [rsp+0x80]
   1400076b9:	call   0x14000a004
   1400076be:	or     edx,0xffffffff
   1400076c1:	mov    rcx,r12
   1400076c4:	call   QWORD PTR [rip+0x8ce6]        # 0x1400103b0
   1400076ca:	mov    rax,QWORD PTR [r12]
   1400076ce:	mov    rcx,QWORD PTR [rsp+0x68]
   1400076d3:	mov    QWORD PTR [rsp+0x48],rcx
   1400076d8:	lea    rcx,[rsp+0x50]
   1400076dd:	mov    QWORD PTR [rsp+0x40],rcx
   1400076e2:	mov    rcx,QWORD PTR [rsp+0x70]
   1400076e7:	mov    QWORD PTR [rsp+0x28],rcx
   1400076ec:	mov    QWORD PTR [rsp+0x20],rax
   1400076f1:	mov    r9,QWORD PTR [r15]
   1400076f4:	mov    r8,QWORD PTR [r13+0x0]
   1400076f8:	mov    rdx,QWORD PTR [rsp+0x60]
   1400076fd:	mov    rcx,QWORD PTR [rsp+0x88]
   140007705:	call   0x140006e20
   14000770a:	mov    ebx,eax
   14000770c:	test   eax,eax
   14000770e:	jne    0x140007761
   140007710:	mov    ecx,DWORD PTR [rsp+0x50]
   140007714:	cmp    ecx,0x80040154
   14000771a:	jne    0x14000774b
   14000771c:	mov    ecx,0xca
   140007721:	call   0x140008af0
   140007726:	mov    rbx,rax
   140007729:	mov    ecx,r14d
   14000772c:	call   0x14000ebd8
   140007731:	mov    rcx,rax
   140007734:	mov    rdx,rbx
   140007737:	call   0x14000999c
   14000773c:	mov    ecx,0x1580
   140007741:	call   0x140008af0
   140007746:	jmp    0x14000751f
   14000774b:	call   0x140007e18
   140007750:	mov    ecx,0xca
   140007755:	call   0x140008af0
   14000775a:	jmp    0x140007504
   14000775f:	xor    ebx,ebx
   140007761:	lea    rcx,[rsp+0x58]
   140007766:	call   QWORD PTR [rip+0x8c4c]        # 0x1400103b8
   14000776c:	mov    eax,ebx
   14000776e:	jmp    0x1400077c4
   140007770:	mov    ecx,0xca
   140007775:	call   0x140008af0
   14000777a:	mov    rbx,rax
   14000777d:	mov    r14d,0x2
   140007783:	mov    ecx,r14d
   140007786:	call   0x14000ebd8
   14000778b:	mov    rcx,rax
   14000778e:	mov    rdx,rbx
   140007791:	call   0x14000999c
   140007796:	mov    ecx,0x1580
   14000779b:	call   0x140008af0
   1400077a0:	mov    rbx,rax
   1400077a3:	mov    ecx,r14d
   1400077a6:	call   0x14000ebd8
   1400077ab:	mov    rcx,rax
   1400077ae:	mov    rdx,rbx
   1400077b1:	call   0x14000999c
   1400077b6:	nop
   1400077b7:	lea    rcx,[rsp+0x58]
   1400077bc:	call   QWORD PTR [rip+0x8bf6]        # 0x1400103b8
   1400077c2:	xor    eax,eax
   1400077c4:	mov    rcx,QWORD PTR [rsp+0x4a0]
   1400077cc:	xor    rcx,rsp
   1400077cf:	call   0x14000e560
   1400077d4:	add    rsp,0x4b8
   1400077db:	pop    r15
   1400077dd:	pop    r14
   1400077df:	pop    r13
   1400077e1:	pop    r12
   1400077e3:	pop    rdi
   1400077e4:	pop    rbx
   1400077e5:	ret    
   1400077e6:	int3   
   1400077e7:	int3   
   1400077e8:	int3   
   1400077e9:	int3   
   1400077ea:	int3   
   1400077eb:	int3   
   1400077ec:	mov    QWORD PTR [rsp+0x10],rbx
   1400077f1:	mov    QWORD PTR [rsp+0x18],rsi
   1400077f6:	mov    QWORD PTR [rsp+0x20],r9
   1400077fb:	push   rbp
   1400077fc:	push   rdi
   1400077fd:	push   r12
   1400077ff:	push   r14
   140007801:	push   r15
   140007803:	mov    rbp,rsp
   140007806:	sub    rsp,0x50
   14000780a:	xor    r12d,r12d
   14000780d:	mov    r15d,edx
   140007810:	mov    QWORD PTR [rbp+0x30],r12
   140007814:	mov    rsi,rcx
   140007817:	mov    QWORD PTR [rbp+0x48],r12
   14000781b:	test   rcx,rcx
   14000781e:	jne    0x14000782a
   140007820:	mov    eax,0x80041008
   140007825:	jmp    0x1400079c9
   14000782a:	mov    rax,QWORD PTR [rcx]
   14000782d:	mov    rbx,QWORD PTR [rax]
   140007830:	mov    rcx,rbx
   140007833:	call   QWORD PTR [rip+0x8d4f]        # 0x140010588
   140007839:	lea    r8,[rbp+0x30]
   14000783d:	mov    rcx,rsi
   140007840:	lea    rdx,[rip+0x9559]        # 0x140010da0
   140007847:	call   rbx
   140007849:	test   eax,eax
   14000784b:	jne    0x1400079c9
   140007851:	mov    rax,QWORD PTR [rsi]
   140007854:	mov    rbx,QWORD PTR [rax]
   140007857:	mov    rcx,rbx
   14000785a:	call   QWORD PTR [rip+0x8d28]        # 0x140010588
   140007860:	lea    r8,[rbp+0x48]
   140007864:	mov    rcx,rsi
   140007867:	lea    rdx,[rip+0x9522]        # 0x140010d90
   14000786e:	call   rbx
   140007870:	mov    r14d,eax
   140007873:	test   eax,eax
   140007875:	je     0x14000789d
   140007877:	mov    rdi,QWORD PTR [rbp+0x30]
   14000787b:	test   rdi,rdi
   14000787e:	je     0x140007895
   140007880:	mov    rdx,QWORD PTR [rdi]
   140007883:	mov    rbx,QWORD PTR [rdx+0x10]
   140007887:	mov    rcx,rbx
   14000788a:	call   QWORD PTR [rip+0x8cf8]        # 0x140010588
   140007890:	mov    rcx,rdi
   140007893:	call   rbx
   140007895:	mov    eax,r14d
   140007898:	jmp    0x1400079c9
   14000789d:	mov    rdi,QWORD PTR [rbp+0x48]
   1400078a1:	mov    rax,QWORD PTR [rdi]
   1400078a4:	mov    rbx,QWORD PTR [rax+0x20]
   1400078a8:	mov    rcx,rbx
   1400078ab:	call   QWORD PTR [rip+0x8cd7]        # 0x140010588
   1400078b1:	mov    r14,QWORD PTR [rbp+0x60]
   1400078b5:	xor    r9d,r9d
   1400078b8:	mov    DWORD PTR [rsp+0x40],r12d
   1400078bd:	mov    r8d,r15d
   1400078c0:	mov    QWORD PTR [rsp+0x38],r14
   1400078c5:	mov    rdx,rsi
   1400078c8:	mov    DWORD PTR [rsp+0x30],0x3
   1400078d0:	mov    rcx,rdi
   1400078d3:	mov    DWORD PTR [rsp+0x28],0x6
   1400078db:	mov    QWORD PTR [rsp+0x20],r12
   1400078e0:	call   rbx
   1400078e2:	mov    rsi,QWORD PTR [rbp+0x48]
   1400078e6:	mov    edi,eax
   1400078e8:	test   rsi,rsi
   1400078eb:	je     0x140007906
   1400078ed:	mov    rdx,QWORD PTR [rsi]
   1400078f0:	mov    rbx,QWORD PTR [rdx+0x10]
   1400078f4:	mov    rcx,rbx
   1400078f7:	call   QWORD PTR [rip+0x8c8b]        # 0x140010588
   1400078fd:	mov    rcx,rsi
   140007900:	call   rbx
   140007902:	mov    QWORD PTR [rbp+0x48],r12
   140007906:	test   r14,r14
   140007909:	je     0x1400079a9
   14000790f:	mov    rdi,QWORD PTR [rbp+0x30]
   140007913:	mov    rax,QWORD PTR [rdi]
   140007916:	mov    rbx,QWORD PTR [rax]
   140007919:	mov    rcx,rbx
   14000791c:	call   QWORD PTR [rip+0x8c66]        # 0x140010588
   140007922:	lea    r8,[rbp+0x48]
   140007926:	mov    rcx,rdi
   140007929:	lea    rdx,[rip+0x9460]        # 0x140010d90
   140007930:	call   rbx
   140007932:	mov    edi,eax
   140007934:	test   eax,eax
   140007936:	jne    0x1400079a0
   140007938:	mov    rdi,QWORD PTR [rbp+0x48]
   14000793c:	mov    rax,QWORD PTR [rdi]
   14000793f:	mov    rbx,QWORD PTR [rax+0x20]
   140007943:	mov    rcx,rbx
   140007946:	call   QWORD PTR [rip+0x8c3c]        # 0x140010588
   14000794c:	mov    rdx,QWORD PTR [rbp+0x30]
   140007950:	xor    r9d,r9d
   140007953:	mov    DWORD PTR [rsp+0x40],r12d
   140007958:	mov    r8d,r15d
   14000795b:	mov    QWORD PTR [rsp+0x38],r14
   140007960:	mov    rcx,rdi
   140007963:	mov    DWORD PTR [rsp+0x30],0x3
   14000796b:	mov    DWORD PTR [rsp+0x28],0x6
   140007973:	mov    QWORD PTR [rsp+0x20],r12
   140007978:	call   rbx
   14000797a:	mov    rsi,QWORD PTR [rbp+0x48]
   14000797e:	mov    edi,eax
   140007980:	test   rsi,rsi
   140007983:	je     0x1400079a9
   140007985:	mov    rax,QWORD PTR [rsi]
   140007988:	mov    rbx,QWORD PTR [rax+0x10]
   14000798c:	mov    rcx,rbx
   14000798f:	call   QWORD PTR [rip+0x8bf3]        # 0x140010588
   140007995:	mov    rcx,rsi
   140007998:	call   rbx
   14000799a:	mov    QWORD PTR [rbp+0x48],r12
   14000799e:	jmp    0x1400079a9
   1400079a0:	cmp    eax,0x80004002
   1400079a5:	cmove  edi,r12d
   1400079a9:	mov    rsi,QWORD PTR [rbp+0x30]
   1400079ad:	test   rsi,rsi
   1400079b0:	je     0x1400079c7
   1400079b2:	mov    rax,QWORD PTR [rsi]
   1400079b5:	mov    rbx,QWORD PTR [rax+0x10]
   1400079b9:	mov    rcx,rbx
   1400079bc:	call   QWORD PTR [rip+0x8bc6]        # 0x140010588
   1400079c2:	mov    rcx,rsi
   1400079c5:	call   rbx
   1400079c7:	mov    eax,edi
   1400079c9:	lea    r11,[rsp+0x50]
   1400079ce:	mov    rbx,QWORD PTR [r11+0x38]
   1400079d2:	mov    rsi,QWORD PTR [r11+0x40]
   1400079d6:	mov    rsp,r11
   1400079d9:	pop    r15
   1400079db:	pop    r14
   1400079dd:	pop    r12
   1400079df:	pop    rdi
   1400079e0:	pop    rbp
   1400079e1:	ret    
   1400079e2:	int3   
   1400079e3:	int3   
   1400079e4:	int3   
   1400079e5:	int3   
   1400079e6:	int3   
   1400079e7:	int3   
   1400079e8:	mov    QWORD PTR [rsp+0x8],rbx
   1400079ed:	mov    QWORD PTR [rsp+0x10],rbp
   1400079f2:	mov    QWORD PTR [rsp+0x18],rsi
   1400079f7:	push   rdi
   1400079f8:	push   r12
   1400079fa:	push   r13
   1400079fc:	push   r14
   1400079fe:	push   r15
   140007a00:	sub    rsp,0x20
   140007a04:	mov    r12,r9
   140007a07:	mov    r14,r8
   140007a0a:	mov    r15,rdx
   140007a0d:	mov    rsi,rcx
   140007a10:	test   r9,r9
   140007a13:	jne    0x140007a1f
   140007a15:	mov    eax,0x80041008
   140007a1a:	jmp    0x140007b3c
   140007a1f:	mov    ebp,0x30
   140007a24:	mov    ecx,ebp
   140007a26:	call   QWORD PTR [rip+0x886c]        # 0x140010298
   140007a2c:	mov    QWORD PTR [rsp+0x68],rax
   140007a31:	mov    rbx,rax
   140007a34:	test   rax,rax
   140007a37:	jne    0x140007a43
   140007a39:	mov    eax,0x80041006
   140007a3e:	jmp    0x140007b3c
   140007a43:	mov    rdi,rax
   140007a46:	mov    rcx,rbp
   140007a49:	xor    eax,eax
   140007a4b:	mov    r13d,0xffffffff
   140007a51:	rep stos BYTE PTR es:[rdi],al
   140007a53:	test   rsi,rsi
   140007a56:	je     0x140007aa1
   140007a58:	mov    rcx,rsi
   140007a5b:	call   QWORD PTR [rip+0x86e7]        # 0x140010148
   140007a61:	mov    edi,eax
   140007a63:	lea    ebp,[rax+0x1]
   140007a66:	cmp    ebp,eax
   140007a68:	jb     0x140007b59
   140007a6e:	mov    ecx,ebp
   140007a70:	add    rcx,rcx
   140007a73:	cmp    rcx,r13
   140007a76:	ja     0x140007b59
   140007a7c:	mov    ecx,ecx
   140007a7e:	call   QWORD PTR [rip+0x8814]        # 0x140010298
   140007a84:	mov    QWORD PTR [rbx],rax
   140007a87:	test   rax,rax
   140007a8a:	je     0x140007b59
   140007a90:	mov    r8d,ebp
   140007a93:	mov    DWORD PTR [rbx+0x8],edi
   140007a96:	mov    rdx,rsi
   140007a99:	mov    rcx,rax
   140007a9c:	call   0x140009774
   140007aa1:	test   r14,r14
   140007aa4:	je     0x140007aec
   140007aa6:	mov    rcx,r14
   140007aa9:	call   QWORD PTR [rip+0x8699]        # 0x140010148
   140007aaf:	mov    edi,eax
   140007ab1:	lea    esi,[rax+0x1]
   140007ab4:	cmp    esi,eax
   140007ab6:	jb     0x140007b59
   140007abc:	mov    ecx,esi
   140007abe:	add    rcx,rcx
   140007ac1:	cmp    rcx,r13
   140007ac4:	ja     0x140007b59
   140007aca:	mov    ecx,ecx
   140007acc:	call   QWORD PTR [rip+0x87c6]        # 0x140010298
   140007ad2:	mov    QWORD PTR [rbx+0x10],rax
   140007ad6:	test   rax,rax
   140007ad9:	je     0x140007b59
   140007adb:	mov    r8d,esi
   140007ade:	mov    DWORD PTR [rbx+0x18],edi
   140007ae1:	mov    rdx,r14
   140007ae4:	mov    rcx,rax
   140007ae7:	call   0x140009774
   140007aec:	test   r15,r15
   140007aef:	je     0x140007b2f
   140007af1:	mov    rcx,r15
   140007af4:	call   QWORD PTR [rip+0x864e]        # 0x140010148
   140007afa:	mov    edi,eax
   140007afc:	lea    esi,[rax+0x1]
   140007aff:	cmp    esi,eax
   140007b01:	jb     0x140007b59
   140007b03:	mov    ecx,esi
   140007b05:	add    rcx,rcx
   140007b08:	cmp    rcx,r13
   140007b0b:	ja     0x140007b59
   140007b0d:	mov    ecx,ecx
   140007b0f:	call   QWORD PTR [rip+0x8783]        # 0x140010298
   140007b15:	mov    QWORD PTR [rbx+0x20],rax
   140007b19:	test   rax,rax
   140007b1c:	je     0x140007b59
   140007b1e:	mov    r8d,esi
   140007b21:	mov    DWORD PTR [rbx+0x28],edi
   140007b24:	mov    rdx,r15
   140007b27:	mov    rcx,rax
   140007b2a:	call   0x140009774
   140007b2f:	mov    DWORD PTR [rbx+0x2c],0x2
   140007b36:	xor    eax,eax
   140007b38:	mov    QWORD PTR [r12],rbx
   140007b3c:	mov    rbx,QWORD PTR [rsp+0x50]
   140007b41:	mov    rbp,QWORD PTR [rsp+0x58]
   140007b46:	mov    rsi,QWORD PTR [rsp+0x60]
   140007b4b:	add    rsp,0x20
   140007b4f:	pop    r15
   140007b51:	pop    r14
   140007b53:	pop    r13
   140007b55:	pop    r12
   140007b57:	pop    rdi
   140007b58:	ret    
   140007b59:	lea    rcx,[rsp+0x68]
   140007b5e:	call   0x140007b70
   140007b63:	jmp    0x140007a39
   140007b68:	int3   
   140007b69:	int3   
   140007b6a:	int3   
   140007b6b:	int3   
   140007b6c:	int3   
   140007b6d:	int3   
   140007b6e:	int3   
   140007b6f:	int3   
   140007b70:	rex push rbx
   140007b72:	sub    rsp,0x20
   140007b76:	mov    rax,QWORD PTR [rcx]
   140007b79:	mov    rbx,rcx
   140007b7c:	mov    rcx,QWORD PTR [rax]
   140007b7f:	test   rcx,rcx
   140007b82:	je     0x140007b8a
   140007b84:	call   QWORD PTR [rip+0x8726]        # 0x1400102b0
   140007b8a:	mov    rax,QWORD PTR [rbx]
   140007b8d:	mov    rcx,QWORD PTR [rax+0x20]
   140007b91:	test   rcx,rcx
   140007b94:	je     0x140007b9c
   140007b96:	call   QWORD PTR [rip+0x8714]        # 0x1400102b0
   140007b9c:	mov    rax,QWORD PTR [rbx]
   140007b9f:	mov    rcx,QWORD PTR [rax+0x10]
   140007ba3:	test   rcx,rcx
   140007ba6:	je     0x140007bae
   140007ba8:	call   QWORD PTR [rip+0x8702]        # 0x1400102b0
   140007bae:	mov    rcx,QWORD PTR [rbx]
   140007bb1:	call   QWORD PTR [rip+0x86f9]        # 0x1400102b0
   140007bb7:	and    QWORD PTR [rbx],0x0
   140007bbb:	add    rsp,0x20
   140007bbf:	pop    rbx
   140007bc0:	ret    
   140007bc1:	int3   
   140007bc2:	int3   
   140007bc3:	int3   
   140007bc4:	int3   
   140007bc5:	int3   
   140007bc6:	int3   
   140007bc7:	int3   
   140007bc8:	rex push rbx
   140007bca:	sub    rsp,0x30
   140007bce:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140007bd7:	mov    rbx,rcx
   140007bda:	lea    rcx,[rsp+0x48]
   140007bdf:	call   QWORD PTR [rip+0x87c3]        # 0x1400103a8
   140007be5:	nop
   140007be6:	mov    rdx,rbx
   140007be9:	lea    rcx,[rsp+0x48]
   140007bee:	call   QWORD PTR [rip+0x87e4]        # 0x1400103d8
   140007bf4:	lea    rdx,[rip+0x8a1d]        # 0x140010618
   140007bfb:	mov    rcx,QWORD PTR [rsp+0x48]
   140007c00:	call   QWORD PTR [rip+0x889a]        # 0x1400104a0
   140007c06:	test   eax,eax
   140007c08:	jne    0x140007c19
   140007c0a:	lea    rcx,[rsp+0x48]
   140007c0f:	call   QWORD PTR [rip+0x87a3]        # 0x1400103b8
   140007c15:	xor    eax,eax
   140007c17:	jmp    0x140007c5e
   140007c19:	lea    rdx,[rip+0x8f80]        # 0x140010ba0
   140007c20:	lea    rcx,[rsp+0x48]
   140007c25:	call   QWORD PTR [rip+0x876d]        # 0x140010398
   140007c2b:	cmp    eax,0xffffffff
   140007c2e:	je     0x140007c3f
   140007c30:	lea    rcx,[rsp+0x48]
   140007c35:	call   QWORD PTR [rip+0x877d]        # 0x1400103b8
   140007c3b:	xor    eax,eax
   140007c3d:	jmp    0x140007c5e
   140007c3f:	lea    rcx,[rsp+0x48]
   140007c44:	call   QWORD PTR [rip+0x876e]        # 0x1400103b8
   140007c4a:	mov    eax,0x1
   140007c4f:	jmp    0x140007c5e
   140007c51:	lea    rcx,[rsp+0x48]
   140007c56:	call   QWORD PTR [rip+0x875c]        # 0x1400103b8
   140007c5c:	xor    eax,eax
   140007c5e:	add    rsp,0x30
   140007c62:	pop    rbx
   140007c63:	ret    
   140007c64:	int3   
   140007c65:	int3   
   140007c66:	int3   
   140007c67:	int3   
   140007c68:	int3   
   140007c69:	int3   
   140007c6a:	int3   
   140007c6b:	int3   
   140007c6c:	mov    rax,rsp
   140007c6f:	mov    QWORD PTR [rax+0x10],rdx
   140007c73:	push   rbp
   140007c74:	push   rdi
   140007c75:	push   r12
   140007c77:	push   r14
   140007c79:	push   r15
   140007c7b:	mov    rbp,rsp
   140007c7e:	sub    rsp,0x50
   140007c82:	mov    QWORD PTR [rbp-0x8],0xfffffffffffffffe
   140007c8a:	mov    QWORD PTR [rax+0x18],rbx
   140007c8e:	mov    QWORD PTR [rax+0x20],rsi
   140007c92:	mov    r12,r9
   140007c95:	mov    rbx,r8
   140007c98:	mov    r14,rcx
   140007c9b:	lea    rcx,[rbp+0x38]
   140007c9f:	call   QWORD PTR [rip+0x8703]        # 0x1400103a8
   140007ca5:	nop
   140007ca6:	lea    rcx,[rbp+0x30]
   140007caa:	call   QWORD PTR [rip+0x86f8]        # 0x1400103a8
   140007cb0:	nop
   140007cb1:	xor    r15d,r15d
   140007cb4:	test   r14,r14
   140007cb7:	jne    0x140007cc3
   140007cb9:	mov    ebx,0x80041008
   140007cbe:	jmp    0x140007de0
   140007cc3:	mov    rdi,QWORD PTR [rbp+0x50]
   140007cc7:	mov    rcx,QWORD PTR [rdi]
   140007cca:	mov    eax,DWORD PTR [rbp+0x58]
   140007ccd:	dec    eax
   140007ccf:	test   rcx,rcx
   140007cd2:	je     0x140007ce5
   140007cd4:	neg    eax
   140007cd6:	sbb    edx,edx
   140007cd8:	add    edx,0xa
   140007cdb:	mov    QWORD PTR [rsp+0x30],rcx
   140007ce0:	jmp    0x140007dd6
   140007ce5:	neg    eax
   140007ce7:	sbb    esi,esi
   140007ce9:	test   rbx,rbx
   140007cec:	jne    0x140007cfd
   140007cee:	test   r12,r12
   140007cf1:	jne    0x140007cfd
   140007cf3:	and    QWORD PTR [rsp+0x30],r15
   140007cf8:	jmp    0x140007dd3
   140007cfd:	lea    rdx,[rip+0x8924]        # 0x140010628
   140007d04:	lea    rcx,[rbp+0x30]
   140007d08:	call   QWORD PTR [rip+0x86ca]        # 0x1400103d8
   140007d0e:	mov    rdx,rbx
   140007d11:	lea    rcx,[rbp+0x38]
   140007d15:	call   QWORD PTR [rip+0x86bd]        # 0x1400103d8
   140007d1b:	mov    edx,0x5c
   140007d20:	lea    rcx,[rbp+0x38]
   140007d24:	call   QWORD PTR [rip+0x8656]        # 0x140010380
   140007d2a:	mov    ebx,eax
   140007d2c:	cmp    eax,0xffffffff
   140007d2f:	je     0x140007d86
   140007d31:	mov    r8d,eax
   140007d34:	lea    rdx,[rbp-0x10]
   140007d38:	lea    rcx,[rbp+0x38]
   140007d3c:	call   QWORD PTR [rip+0x865e]        # 0x1400103a0
   140007d42:	nop
   140007d43:	mov    rdx,rax
   140007d46:	lea    rcx,[rbp+0x30]
   140007d4a:	call   QWORD PTR [rip+0x8690]        # 0x1400103e0
   140007d50:	nop
   140007d51:	lea    rcx,[rbp-0x10]
   140007d55:	call   QWORD PTR [rip+0x865d]        # 0x1400103b8
   140007d5b:	lea    r8d,[rbx+0x1]
   140007d5f:	lea    rdx,[rbp-0x10]
   140007d63:	lea    rcx,[rbp+0x38]
   140007d67:	call   QWORD PTR [rip+0x860b]        # 0x140010378
   140007d6d:	nop
   140007d6e:	mov    rdx,rax
   140007d71:	lea    rcx,[rbp+0x38]
   140007d75:	call   QWORD PTR [rip+0x8665]        # 0x1400103e0
   140007d7b:	nop
   140007d7c:	lea    rcx,[rbp-0x10]
   140007d80:	call   QWORD PTR [rip+0x8632]        # 0x1400103b8
   140007d86:	lea    rcx,[rbp+0x30]
   140007d8a:	call   QWORD PTR [rip+0x8630]        # 0x1400103c0
   140007d90:	xor    ebx,ebx
   140007d92:	cmp    DWORD PTR [rax+0x4],ebx
   140007d95:	cmovne rbx,QWORD PTR [rbp+0x30]
   140007d9a:	lea    rcx,[rbp+0x38]
   140007d9e:	call   QWORD PTR [rip+0x861c]        # 0x1400103c0
   140007da4:	cmp    DWORD PTR [rax+0x4],0x0
   140007da8:	je     0x140007dae
   140007daa:	mov    r15,QWORD PTR [rbp+0x38]
   140007dae:	cmp    QWORD PTR [rdi],0x0
   140007db2:	jne    0x140007dcb
   140007db4:	mov    r9,rdi
   140007db7:	mov    r8,rbx
   140007dba:	mov    rdx,r12
   140007dbd:	mov    rcx,r15
   140007dc0:	call   0x1400079e8
   140007dc5:	mov    ebx,eax
   140007dc7:	test   eax,eax
   140007dc9:	jne    0x140007de0
   140007dcb:	mov    rax,QWORD PTR [rdi]
   140007dce:	mov    QWORD PTR [rsp+0x30],rax
   140007dd3:	lea    edx,[rsi+0xa]
   140007dd6:	mov    rcx,r14
   140007dd9:	call   0x1400077ec
   140007dde:	mov    ebx,eax
   140007de0:	lea    rcx,[rbp+0x30]
   140007de4:	call   QWORD PTR [rip+0x85ce]        # 0x1400103b8
   140007dea:	nop
   140007deb:	lea    rcx,[rbp+0x38]
   140007def:	call   QWORD PTR [rip+0x85c3]        # 0x1400103b8
   140007df5:	mov    eax,ebx
   140007df7:	lea    r11,[rsp+0x50]
   140007dfc:	mov    rbx,QWORD PTR [r11+0x40]
   140007e00:	mov    rsi,QWORD PTR [r11+0x48]
   140007e04:	mov    rsp,r11
   140007e07:	pop    r15
   140007e09:	pop    r14
   140007e0b:	pop    r12
   140007e0d:	pop    rdi
   140007e0e:	pop    rbp
   140007e0f:	ret    
   140007e10:	int3   
   140007e11:	int3   
   140007e12:	int3   
   140007e13:	int3   
   140007e14:	int3   
   140007e15:	int3   
   140007e16:	int3   
   140007e17:	int3   
   140007e18:	mov    rax,rsp
   140007e1b:	push   rbx
   140007e1c:	push   rsi
   140007e1d:	push   rdi
   140007e1e:	push   r14
   140007e20:	push   r15
   140007e22:	sub    rsp,0x50
   140007e26:	mov    QWORD PTR [rax-0x38],0xfffffffffffffffe
   140007e2e:	mov    r15d,ecx
   140007e31:	xor    r14d,r14d
   140007e34:	mov    QWORD PTR [rax+0x18],r14
   140007e38:	mov    ebx,r14d
   140007e3b:	mov    QWORD PTR [rax+0x10],rbx
   140007e3f:	mov    eax,0x52e
   140007e44:	cmp    ecx,0x80070005
   140007e4a:	cmove  r15d,eax
   140007e4e:	cmp    r15d,0x80040154
   140007e55:	jne    0x140007ebb
   140007e57:	mov    ecx,0x1580
   140007e5c:	call   0x140008af0
   140007e61:	mov    rdx,rax
   140007e64:	lea    rcx,[rsp+0x98]
   140007e6c:	call   0x140001008
   140007e71:	nop
   140007e72:	mov    rdx,rax
   140007e75:	lea    rcx,[rsp+0x88]
   140007e7d:	call   0x140001108
   140007e82:	nop
   140007e83:	lea    rcx,[rsp+0x98]
   140007e8b:	call   0x14000109c
   140007e90:	mov    rax,QWORD PTR [rsp+0x88]
   140007e98:	test   rax,rax
   140007e9b:	je     0x140007ea0
   140007e9d:	mov    r14,QWORD PTR [rax]
   140007ea0:	mov    rcx,r14
   140007ea3:	call   0x140008528
   140007ea8:	nop
   140007ea9:	lea    rcx,[rsp+0x88]
   140007eb1:	call   0x14000109c
   140007eb6:	jmp    0x140007fce
   140007ebb:	lea    rax,[rsp+0x90]
   140007ec3:	mov    QWORD PTR [rsp+0x20],rax
   140007ec8:	lea    r9,[rip+0x8f11]        # 0x140010de0
   140007ecf:	xor    edx,edx
   140007ed1:	lea    r8d,[rdx+0x1]
   140007ed5:	lea    rcx,[rip+0x8ef4]        # 0x140010dd0
   140007edc:	call   QWORD PTR [rip+0x83be]        # 0x1400102a0
   140007ee2:	test   eax,eax
   140007ee4:	js     0x140007fb8
   140007eea:	mov    QWORD PTR [rsp+0x98],r14
   140007ef2:	mov    rsi,QWORD PTR [rsp+0x90]
   140007efa:	mov    rax,QWORD PTR [rsi]
   140007efd:	mov    rdi,QWORD PTR [rax+0x18]
   140007f01:	mov    rcx,rdi
   140007f04:	call   QWORD PTR [rip+0x867e]        # 0x140010588
   140007f0a:	lea    rax,[rsp+0x98]
   140007f12:	mov    QWORD PTR [rsp+0x20],rax
   140007f17:	xor    r9d,r9d
   140007f1a:	xor    r8d,r8d
   140007f1d:	mov    edx,r15d
   140007f20:	mov    rcx,rsi
   140007f23:	call   rdi
   140007f25:	mov    edi,eax
   140007f27:	mov    rdx,QWORD PTR [rsp+0x98]
   140007f2f:	test   rdx,rdx
   140007f32:	je     0x140007f70
   140007f34:	lea    rcx,[rsp+0x30]
   140007f39:	call   0x140001008
   140007f3e:	nop
   140007f3f:	mov    rdx,rax
   140007f42:	lea    rcx,[rsp+0x88]
   140007f4a:	call   0x140001108
   140007f4f:	nop
   140007f50:	lea    rcx,[rsp+0x30]
   140007f55:	call   0x14000109c
   140007f5a:	mov    rcx,QWORD PTR [rsp+0x98]
   140007f62:	call   QWORD PTR [rip+0x8248]        # 0x1400101b0
   140007f68:	mov    rbx,QWORD PTR [rsp+0x88]
   140007f70:	test   edi,edi
   140007f72:	jns    0x140007f7c
   140007f74:	mov    ecx,r15d
   140007f77:	call   0x140007fe0
   140007f7c:	mov    rsi,QWORD PTR [rsp+0x90]
   140007f84:	test   rsi,rsi
   140007f87:	je     0x140007fa6
   140007f89:	mov    rax,QWORD PTR [rsi]
   140007f8c:	mov    rdi,QWORD PTR [rax+0x10]
   140007f90:	mov    rcx,rdi
   140007f93:	call   QWORD PTR [rip+0x85ef]        # 0x140010588
   140007f99:	mov    rcx,rsi
   140007f9c:	call   rdi
   140007f9e:	mov    QWORD PTR [rsp+0x90],r14
   140007fa6:	test   rbx,rbx
   140007fa9:	je     0x140007fae
   140007fab:	mov    r14,QWORD PTR [rbx]
   140007fae:	mov    rcx,r14
   140007fb1:	call   0x140008528
   140007fb6:	jmp    0x140007fc1
   140007fb8:	mov    ecx,r15d
   140007fbb:	call   0x140007fe0
   140007fc0:	nop
   140007fc1:	lea    rcx,[rsp+0x88]
   140007fc9:	call   0x14000109c
   140007fce:	add    rsp,0x50
   140007fd2:	pop    r15
   140007fd4:	pop    r14
   140007fd6:	pop    rdi
   140007fd7:	pop    rsi
   140007fd8:	pop    rbx
   140007fd9:	ret    
   140007fda:	int3   
   140007fdb:	int3   
   140007fdc:	int3   
   140007fdd:	int3   
   140007fde:	int3   
   140007fdf:	int3   
   140007fe0:	sub    rsp,0x28
   140007fe4:	call   0x140008164
   140007fe9:	int3   
   140007fea:	int3   
   140007feb:	int3   
   140007fec:	int3   
   140007fed:	int3   
   140007fee:	int3   
   140007fef:	int3   
   140007ff0:	and    QWORD PTR [rcx+0x10],0x0
   140007ff5:	lea    rax,[rip+0x8624]        # 0x140010620
   140007ffc:	and    QWORD PTR [rcx+0x18],0x0
   140008001:	mov    QWORD PTR [rcx],rax
   140008004:	mov    rax,rcx
   140008007:	mov    DWORD PTR [rcx+0x8],edx
   14000800a:	ret    
   14000800b:	int3   
   14000800c:	int3   
   14000800d:	int3   
   14000800e:	int3   
   14000800f:	int3   
   140008010:	int3   
   140008011:	int3   
   140008012:	int3   
   140008013:	int3   
   140008014:	int3   
   140008015:	int3   
   140008016:	int3   
   140008017:	int3   
   140008018:	int3   
   140008019:	int3   
   14000801a:	int3   
   14000801b:	int3   
   14000801c:	int3   
   14000801d:	int3   
   14000801e:	int3   
   14000801f:	int3   
   140008020:	mov    QWORD PTR [rsp+0x8],rbx
   140008025:	mov    QWORD PTR [rsp+0x10],rbp
   14000802a:	mov    QWORD PTR [rsp+0x18],rsi
   14000802f:	push   rdi
   140008030:	sub    rsp,0x20
   140008034:	mov    rsi,QWORD PTR [rcx+0x10]
   140008038:	lea    rax,[rip+0x85e1]        # 0x140010620
   14000803f:	mov    QWORD PTR [rcx],rax
   140008042:	mov    ebp,edx
   140008044:	mov    rdi,rcx
   140008047:	test   rsi,rsi
   14000804a:	je     0x140008061
   14000804c:	mov    rax,QWORD PTR [rsi]
   14000804f:	mov    rbx,QWORD PTR [rax+0x10]
   140008053:	mov    rcx,rbx
   140008056:	call   QWORD PTR [rip+0x852c]        # 0x140010588
   14000805c:	mov    rcx,rsi
   14000805f:	call   rbx
   140008061:	mov    rcx,QWORD PTR [rdi+0x18]
   140008065:	test   rcx,rcx
   140008068:	je     0x140008070
   14000806a:	call   QWORD PTR [rip+0x8278]        # 0x1400102e8
   140008070:	test   bpl,0x1
   140008074:	je     0x14000807e
   140008076:	mov    rcx,rdi
   140008079:	call   0x14000e1fc
   14000807e:	mov    rbx,QWORD PTR [rsp+0x30]
   140008083:	mov    rax,rdi
   140008086:	mov    rbp,QWORD PTR [rsp+0x38]
   14000808b:	mov    rsi,QWORD PTR [rsp+0x40]
   140008090:	add    rsp,0x20
   140008094:	pop    rdi
   140008095:	ret    
   140008096:	int3   
   140008097:	int3   
   140008098:	int3   
   140008099:	int3   
   14000809a:	int3   
   14000809b:	int3   
   14000809c:	mov    QWORD PTR [rsp+0x8],rbx
   1400080a1:	mov    QWORD PTR [rsp+0x10],rsi
   1400080a6:	push   rdi
   1400080a7:	sub    rsp,0x20
   1400080ab:	lea    rax,[rip+0x856e]        # 0x140010620
   1400080b2:	mov    rdi,rcx
   1400080b5:	mov    QWORD PTR [rcx],rax
   1400080b8:	mov    eax,DWORD PTR [rdx+0x8]
   1400080bb:	mov    DWORD PTR [rcx+0x8],eax
   1400080be:	mov    rax,QWORD PTR [rdx+0x10]
   1400080c2:	and    QWORD PTR [rcx+0x18],0x0
   1400080c7:	mov    rsi,rax
   1400080ca:	mov    QWORD PTR [rcx+0x10],rax
   1400080ce:	test   rax,rax
   1400080d1:	je     0x1400080e8
   1400080d3:	mov    rax,QWORD PTR [rax]
   1400080d6:	mov    rbx,QWORD PTR [rax+0x8]
   1400080da:	mov    rcx,rbx
   1400080dd:	call   QWORD PTR [rip+0x84a5]        # 0x140010588
   1400080e3:	mov    rcx,rsi
   1400080e6:	call   rbx
   1400080e8:	mov    rbx,QWORD PTR [rsp+0x30]
   1400080ed:	mov    rax,rdi
   1400080f0:	mov    rsi,QWORD PTR [rsp+0x38]
   1400080f5:	add    rsp,0x20
   1400080f9:	pop    rdi
   1400080fa:	ret    
   1400080fb:	int3   
   1400080fc:	int3   
   1400080fd:	int3   
   1400080fe:	int3   
   1400080ff:	int3   
   140008100:	int3   
   140008101:	int3   
   140008102:	int3   
   140008103:	int3   
   140008104:	mov    QWORD PTR [rsp+0x8],rbx
   140008109:	mov    QWORD PTR [rsp+0x10],rsi
   14000810e:	push   rdi
   14000810f:	sub    rsp,0x20
   140008113:	mov    rsi,QWORD PTR [rcx+0x10]
   140008117:	lea    rax,[rip+0x8502]        # 0x140010620
   14000811e:	mov    QWORD PTR [rcx],rax
   140008121:	mov    rdi,rcx
   140008124:	test   rsi,rsi
   140008127:	je     0x14000813e
   140008129:	mov    rax,QWORD PTR [rsi]
   14000812c:	mov    rbx,QWORD PTR [rax+0x10]
   140008130:	mov    rcx,rbx
   140008133:	call   QWORD PTR [rip+0x844f]        # 0x140010588
   140008139:	mov    rcx,rsi
   14000813c:	call   rbx
   14000813e:	mov    rcx,QWORD PTR [rdi+0x18]
   140008142:	test   rcx,rcx
   140008145:	je     0x14000814d
   140008147:	call   QWORD PTR [rip+0x819b]        # 0x1400102e8
   14000814d:	mov    rbx,QWORD PTR [rsp+0x30]
   140008152:	mov    rsi,QWORD PTR [rsp+0x38]
   140008157:	add    rsp,0x20
   14000815b:	pop    rdi
   14000815c:	ret    
   14000815d:	int3   
   14000815e:	int3   
   14000815f:	int3   
   140008160:	int3   
   140008161:	int3   
   140008162:	int3   
   140008163:	int3   
   140008164:	sub    rsp,0x48
   140008168:	mov    edx,ecx
   14000816a:	lea    rcx,[rsp+0x20]
   14000816f:	call   0x140007ff0
   140008174:	lea    rdx,[rip+0xab9d]        # 0x140012d18
   14000817b:	lea    rcx,[rsp+0x20]
   140008180:	call   0x14000ec08
   140008185:	int3   
   140008186:	int3   
   140008187:	int3   
   140008188:	int3   
   140008189:	int3   
   14000818a:	int3   
   14000818b:	int3   
   14000818c:	rex push rbx
   14000818e:	sub    rsp,0x20
   140008192:	cmp    DWORD PTR [rip+0xd5ab],0x1        # 0x140015744
   140008199:	jne    0x1400081ce
   14000819b:	mov    rcx,QWORD PTR [rip+0xd596]        # 0x140015738
   1400081a2:	test   rcx,rcx
   1400081a5:	je     0x1400081b6
   1400081a7:	cmp    DWORD PTR [rcx],0x9
   1400081aa:	jne    0x1400081b6
   1400081ac:	mov    eax,0x1
   1400081b1:	jmp    0x14000826f
   1400081b6:	call   QWORD PTR [rip+0x7f94]        # 0x140010150
   1400081bc:	test   eax,eax
   1400081be:	jne    0x14000826d
   1400081c4:	mov    ecx,0x42b
   1400081c9:	jmp    0x140008267
   1400081ce:	xor    ebx,ebx
   1400081d0:	cmp    QWORD PTR [rip+0xd561],rbx        # 0x140015738
   1400081d7:	jne    0x1400081b6
   1400081d9:	call   0x14000b1a4
   1400081de:	mov    QWORD PTR [rip+0xd553],rax        # 0x140015738
   1400081e5:	test   rax,rax
   1400081e8:	je     0x14000825a
   1400081ea:	cmp    DWORD PTR [rax],0x9
   1400081ed:	jne    0x14000825a
   1400081ef:	lea    rdx,[rip+0x8a06]        # 0x140010bfc
   1400081f6:	mov    rcx,rax
   1400081f9:	call   0x14000b260
   1400081fe:	test   eax,eax
   140008200:	jne    0x14000825a
   140008202:	mov    rcx,QWORD PTR [rip+0xd52f]        # 0x140015738
   140008209:	lea    edx,[rbx+0x3]
   14000820c:	call   0x14000b49c
   140008211:	cmp    eax,0x1
   140008214:	jne    0x14000825a
   140008216:	mov    rcx,QWORD PTR [rip+0xd51b]        # 0x140015738
   14000821d:	lea    edx,[rbx+0x3]
   140008220:	call   0x14000b49c
   140008225:	cmp    eax,0x2
   140008228:	jne    0x14000825a
   14000822a:	mov    rcx,QWORD PTR [rip+0xd507]        # 0x140015738
   140008231:	lea    edx,[rbx+0x3]
   140008234:	call   0x14000b49c
   140008239:	cmp    eax,0x3
   14000823c:	jne    0x14000825a
   14000823e:	xor    ecx,ecx
   140008240:	mov    DWORD PTR [rip+0xd4fa],0x1        # 0x140015744
   14000824a:	call   QWORD PTR [rip+0x7ef0]        # 0x140010140
   140008250:	test   ax,ax
   140008253:	setne  bl
   140008256:	mov    eax,ebx
   140008258:	jmp    0x14000826f
   14000825a:	call   QWORD PTR [rip+0x7ef0]        # 0x140010150
   140008260:	test   eax,eax
   140008262:	jne    0x14000826d
   140008264:	lea    ecx,[rax+0x8]
   140008267:	call   QWORD PTR [rip+0x7eeb]        # 0x140010158
   14000826d:	xor    eax,eax
   14000826f:	add    rsp,0x20
   140008273:	pop    rbx
   140008274:	ret    
   140008275:	int3   
   140008276:	int3   
   140008277:	int3   
   140008278:	int3   
   140008279:	int3   
   14000827a:	int3   
   14000827b:	int3   
   14000827c:	rex push rbx
   14000827e:	sub    rsp,0x20
   140008282:	cmp    DWORD PTR [rip+0xd4bb],0x0        # 0x140015744
   140008289:	mov    ebx,ecx
   14000828b:	je     0x1400082d7
   14000828d:	mov    edx,0x3
   140008292:	call   0x14000b614
   140008297:	cmp    eax,ebx
   140008299:	jbe    0x1400082d7
   14000829b:	mov    r8d,ebx
   14000829e:	call   0x14000b9f4
   1400082a3:	test   eax,eax
   1400082a5:	je     0x1400082d7
   1400082a7:	mov    r8d,ebx
   1400082aa:	call   0x14000b844
   1400082af:	mov    rbx,rax
   1400082b2:	test   rax,rax
   1400082b5:	je     0x1400082d7
   1400082b7:	mov    r8d,0x7
   1400082bd:	lea    rdx,[rip+0x8930]        # 0x140010bf4
   1400082c4:	mov    rcx,rax
   1400082c7:	call   QWORD PTR [rip+0x822b]        # 0x1400104f8
   1400082cd:	test   eax,eax
   1400082cf:	jne    0x1400082d7
   1400082d1:	mov    rax,QWORD PTR [rbx+0x10]
   1400082d5:	jmp    0x1400082d9
   1400082d7:	xor    eax,eax
   1400082d9:	add    rsp,0x20
   1400082dd:	pop    rbx
   1400082de:	ret    
   1400082df:	int3   
   1400082e0:	int3   
   1400082e1:	int3   
   1400082e2:	int3   
   1400082e3:	int3   
   1400082e4:	int3   
   1400082e5:	int3   
   1400082e6:	int3   
   1400082e7:	int3   
   1400082e8:	mov    QWORD PTR [rsp+0x8],rbx
   1400082ed:	mov    QWORD PTR [rsp+0x18],rbp
   1400082f2:	push   rsi
   1400082f3:	push   rdi
   1400082f4:	push   r14
   1400082f6:	sub    rsp,0x20
   1400082fa:	mov    r14d,r9d
   1400082fd:	mov    edi,r8d
   140008300:	mov    rbp,rdx
   140008303:	mov    esi,ecx
   140008305:	test   rdx,rdx
   140008308:	jne    0x140008316
   14000830a:	test   r8d,r8d
   14000830d:	jne    0x140008316
   14000830f:	xor    eax,eax
   140008311:	jmp    0x1400084cd
   140008316:	call   0x14000818c
   14000831b:	test   eax,eax
   14000831d:	je     0x14000830f
   14000831f:	mov    edx,0x3
   140008324:	call   0x14000b614
   140008329:	mov    r10d,eax
   14000832c:	cmp    eax,esi
   14000832e:	ja     0x140008355
   140008330:	mov    rcx,QWORD PTR [rip+0xd401]        # 0x140015738
   140008337:	call   0x14000b65c
   14000833c:	test   rax,rax
   14000833f:	je     0x14000830f
   140008341:	mov    edx,esi
   140008343:	mov    rcx,rax
   140008346:	sub    edx,r10d
   140008349:	inc    edx
   14000834b:	call   0x14000b54c
   140008350:	cmp    eax,0xffffffff
   140008353:	je     0x14000830f
   140008355:	mov    r8d,esi
   140008358:	call   0x14000b9f4
   14000835d:	test   eax,eax
   14000835f:	je     0x1400083fc
   140008365:	mov    r8d,esi
   140008368:	call   0x14000b844
   14000836d:	mov    rbx,rax
   140008370:	test   rax,rax
   140008373:	je     0x14000830f
   140008375:	mov    r8d,0x7
   14000837b:	lea    rdx,[rip+0x8872]        # 0x140010bf4
   140008382:	mov    rcx,rbx
   140008385:	call   QWORD PTR [rip+0x816d]        # 0x1400104f8
   14000838b:	test   eax,eax
   14000838d:	jne    0x14000830f
   14000838f:	test   rbp,rbp
   140008392:	je     0x1400083a0
   140008394:	mov    rcx,rbp
   140008397:	call   QWORD PTR [rip+0x7dab]        # 0x140010148
   14000839d:	lea    edi,[rax+0x1]
   1400083a0:	mov    ecx,DWORD PTR [rbx+0x8]
   1400083a3:	cmp    edi,ecx
   1400083a5:	ja     0x1400083b6
   1400083a7:	cmp    edi,0x100
   1400083ad:	jbe    0x1400083d6
   1400083af:	lea    eax,[rdi+rdi*1]
   1400083b2:	cmp    eax,ecx
   1400083b4:	jae    0x1400083d6
   1400083b6:	test   ecx,ecx
   1400083b8:	jne    0x1400084a3
   1400083be:	lea    ecx,[rdi+rdi*1]
   1400083c1:	call   0x14000a3f8
   1400083c6:	mov    QWORD PTR [rbx+0x10],rax
   1400083ca:	test   rax,rax
   1400083cd:	je     0x14000830f
   1400083d3:	mov    DWORD PTR [rbx+0x8],edi
   1400083d6:	mov    rcx,QWORD PTR [rbx+0x10]
   1400083da:	test   rcx,rcx
   1400083dd:	je     0x14000830f
   1400083e3:	test   rbp,rbp
   1400083e6:	je     0x1400084b6
   1400083ec:	mov    r8d,edi
   1400083ef:	mov    rdx,rbp
   1400083f2:	call   0x140009774
   1400083f7:	jmp    0x1400084c9
   1400083fc:	mov    ecx,0x18
   140008401:	call   0x14000a3f8
   140008406:	mov    QWORD PTR [rsp+0x48],rax
   14000840b:	mov    rbx,rax
   14000840e:	test   rax,rax
   140008411:	je     0x14000830f
   140008417:	and    DWORD PTR [rax+0x8],0x0
   14000841b:	lea    rdx,[rip+0x87d2]        # 0x140010bf4
   140008422:	and    QWORD PTR [rax+0x10],0x0
   140008427:	mov    r8d,0x7
   14000842d:	mov    rcx,rax
   140008430:	call   0x1400096ec
   140008435:	mov    rcx,QWORD PTR [rip+0xd2fc]        # 0x140015738
   14000843c:	xor    r8d,r8d
   14000843f:	lea    edx,[r8+0x3]
   140008443:	call   0x14000af68
   140008448:	test   rax,rax
   14000844b:	je     0x14000848a
   14000844d:	cmp    DWORD PTR [rax+0x4],0x80000
   140008454:	jne    0x14000848a
   140008456:	mov    rcx,QWORD PTR [rax+0x10]
   14000845a:	xor    r8d,r8d
   14000845d:	mov    edx,esi
   14000845f:	call   0x14000af68
   140008464:	test   rax,rax
   140008467:	je     0x14000848a
   140008469:	test   DWORD PTR [rax+0x4],0xfffeffff
   140008470:	jne    0x14000848a
   140008472:	cmp    DWORD PTR [rax+0x4],0x0
   140008476:	jne    0x14000847f
   140008478:	mov    DWORD PTR [rax+0x4],0x10000
   14000847f:	mov    QWORD PTR [rax+0x10],rbx
   140008483:	mov    eax,0x1
   140008488:	jmp    0x14000848c
   14000848a:	xor    eax,eax
   14000848c:	test   eax,eax
   14000848e:	jne    0x140008375
   140008494:	lea    rcx,[rsp+0x48]
   140008499:	call   0x14000a31c
   14000849e:	jmp    0x14000830f
   1400084a3:	lea    edx,[rdi+rdi*1]
   1400084a6:	lea    rcx,[rbx+0x10]
   1400084aa:	call   0x14000a498
   1400084af:	test   eax,eax
   1400084b1:	jmp    0x1400083cd
   1400084b6:	cmp    r14d,0x1
   1400084ba:	jne    0x1400084c9
   1400084bc:	mov    r8d,edi
   1400084bf:	xor    edx,edx
   1400084c1:	add    r8,r8
   1400084c4:	call   0x14000ed52
   1400084c9:	mov    rax,QWORD PTR [rbx+0x10]
   1400084cd:	mov    rbx,QWORD PTR [rsp+0x40]
   1400084d2:	mov    rbp,QWORD PTR [rsp+0x50]
   1400084d7:	add    rsp,0x20
   1400084db:	pop    r14
   1400084dd:	pop    rdi
   1400084de:	pop    rsi
   1400084df:	ret    
   1400084e0:	int3   
   1400084e1:	int3   
   1400084e2:	int3   
   1400084e3:	int3   
   1400084e4:	int3   
   1400084e5:	int3   
   1400084e6:	int3   
   1400084e7:	int3   
   1400084e8:	mov    rcx,QWORD PTR [rip+0xd249]        # 0x140015738
   1400084ef:	xor    eax,eax
   1400084f1:	test   rcx,rcx
   1400084f4:	je     0x140008517
   1400084f6:	cmp    DWORD PTR [rcx],0x9
   1400084f9:	jne    0x140008517
   1400084fb:	cmp    DWORD PTR [rcx+0x4],eax
   1400084fe:	jbe    0x14000851e
   140008500:	mov    rdx,QWORD PTR [rcx+0x8]
   140008504:	test   rdx,rdx
   140008507:	je     0x14000851e
   140008509:	cmp    DWORD PTR [rdx+0x4],0x20000
   140008510:	jne    0x14000851e
   140008512:	mov    rax,QWORD PTR [rdx+0x10]
   140008516:	ret    
   140008517:	lea    rax,[rip+0x86de]        # 0x140010bfc
   14000851e:	ret    
   14000851f:	int3   
   140008520:	int3   
   140008521:	int3   
   140008522:	int3   
   140008523:	int3   
   140008524:	int3   
   140008525:	int3   
   140008526:	int3   
   140008527:	int3   
   140008528:	mov    QWORD PTR [rsp+0x8],rbx
   14000852d:	push   rdi
   14000852e:	sub    rsp,0x20
   140008532:	mov    rbx,rcx
   140008535:	call   QWORD PTR [rip+0x7c15]        # 0x140010150
   14000853b:	mov    edi,eax
   14000853d:	test   rbx,rbx
   140008540:	jne    0x140008559
   140008542:	call   QWORD PTR [rip+0x7c08]        # 0x140010150
   140008548:	test   eax,eax
   14000854a:	jne    0x140008555
   14000854c:	lea    ecx,[rbx+0x57]
   14000854f:	call   QWORD PTR [rip+0x7c03]        # 0x140010158
   140008555:	xor    eax,eax
   140008557:	jmp    0x140008593
   140008559:	call   0x14000818c
   14000855e:	test   eax,eax
   140008560:	je     0x140008555
   140008562:	mov    rcx,QWORD PTR [rip+0xd1cf]        # 0x140015738
   140008569:	mov    r8,rbx
   14000856c:	xor    edx,edx
   14000856e:	call   0x14000b8e0
   140008573:	test   eax,eax
   140008575:	jne    0x140008586
   140008577:	call   QWORD PTR [rip+0x7bd3]        # 0x140010150
   14000857d:	test   eax,eax
   14000857f:	jne    0x140008555
   140008581:	lea    ecx,[rax+0x8]
   140008584:	jmp    0x14000854f
   140008586:	mov    ecx,edi
   140008588:	call   QWORD PTR [rip+0x7bca]        # 0x140010158
   14000858e:	mov    eax,0x1
   140008593:	mov    rbx,QWORD PTR [rsp+0x30]
   140008598:	add    rsp,0x20
   14000859c:	pop    rdi
   14000859d:	ret    
   14000859e:	int3   
   14000859f:	int3   
   1400085a0:	int3   
   1400085a1:	int3   
   1400085a2:	int3   
   1400085a3:	int3   
   1400085a4:	mov    QWORD PTR [rsp+0x10],rdx
   1400085a9:	mov    QWORD PTR [rsp+0x18],r8
   1400085ae:	mov    QWORD PTR [rsp+0x20],r9
   1400085b3:	push   rbx
   1400085b4:	push   rbp
   1400085b5:	push   rsi
   1400085b6:	push   rdi
   1400085b7:	push   r12
   1400085b9:	push   r14
   1400085bb:	sub    rsp,0x38
   1400085bf:	xor    r14d,r14d
   1400085c2:	mov    ebp,r14d
   1400085c5:	test   rdx,rdx
   1400085c8:	jne    0x1400085e0
   1400085ca:	call   QWORD PTR [rip+0x7b80]        # 0x140010150
   1400085d0:	test   eax,eax
   1400085d2:	jne    0x1400086c8
   1400085d8:	lea    ecx,[rax+0x57]
   1400085db:	jmp    0x1400086c2
   1400085e0:	test   ecx,ecx
   1400085e2:	jne    0x1400085f6
   1400085e4:	mov    rcx,rdx
   1400085e7:	call   0x140008528
   1400085ec:	mov    eax,0x1
   1400085f1:	jmp    0x1400086ca
   1400085f6:	lea    r12,[rsp+0x80]
   1400085fe:	test   r12,r12
   140008601:	je     0x1400086b3
   140008607:	xor    edx,edx
   140008609:	add    ebp,0x100
   14000860f:	mov    r9d,0x1
   140008615:	mov    r8d,ebp
   140008618:	lea    ecx,[rdx+0x5]
   14000861b:	call   0x1400082e8
   140008620:	mov    rdi,rax
   140008623:	test   rax,rax
   140008626:	je     0x1400086a4
   140008628:	lea    rcx,[rbp-0x1]
   14000862c:	mov    ebx,r14d
   14000862f:	cmp    rcx,0x7ffffffe
   140008636:	mov    edx,0x80070057
   14000863b:	cmova  ebx,edx
   14000863e:	test   ebx,ebx
   140008640:	js     0x14000867d
   140008642:	mov    r8,QWORD PTR [rsp+0x78]
   140008647:	lea    rsi,[rbp-0x1]
   14000864b:	mov    rdx,rsi
   14000864e:	mov    r9,r12
   140008651:	mov    rcx,rax
   140008654:	mov    ebx,r14d
   140008657:	call   QWORD PTR [rip+0x7e3b]        # 0x140010498
   14000865d:	test   eax,eax
   14000865f:	js     0x140008671
   140008661:	cdqe   
   140008663:	cmp    rax,rsi
   140008666:	ja     0x140008671
   140008668:	jne    0x140008685
   14000866a:	mov    WORD PTR [rdi+rsi*2],r14w
   14000866f:	jmp    0x140008685
   140008671:	mov    WORD PTR [rdi+rsi*2],r14w
   140008676:	mov    ebx,0x8007007a
   14000867b:	jmp    0x140008685
   14000867d:	test   ebp,ebp
   14000867f:	je     0x140008685
   140008681:	mov    WORD PTR [rax],r14w
   140008685:	cmp    ebx,0x8007007a
   14000868b:	je     0x1400085f6
   140008691:	test   ebx,ebx
   140008693:	jns    0x14000869a
   140008695:	movzx  ecx,bx
   140008698:	jmp    0x1400086c2
   14000869a:	mov    rcx,rdi
   14000869d:	call   0x140008528
   1400086a2:	jmp    0x1400086ca
   1400086a4:	call   QWORD PTR [rip+0x7aa6]        # 0x140010150
   1400086aa:	test   eax,eax
   1400086ac:	jne    0x1400086c8
   1400086ae:	lea    ecx,[rax+0x8]
   1400086b1:	jmp    0x1400086c2
   1400086b3:	call   QWORD PTR [rip+0x7a97]        # 0x140010150
   1400086b9:	test   eax,eax
   1400086bb:	jne    0x1400086c8
   1400086bd:	mov    ecx,0x42b
   1400086c2:	call   QWORD PTR [rip+0x7a90]        # 0x140010158
   1400086c8:	xor    eax,eax
   1400086ca:	add    rsp,0x38
   1400086ce:	pop    r14
   1400086d0:	pop    r12
   1400086d2:	pop    rdi
   1400086d3:	pop    rsi
   1400086d4:	pop    rbp
   1400086d5:	pop    rbx
   1400086d6:	ret    
   1400086d7:	int3   
   1400086d8:	int3   
   1400086d9:	int3   
   1400086da:	int3   
   1400086db:	int3   
   1400086dc:	int3   
   1400086dd:	int3   
   1400086de:	int3   
   1400086df:	int3   
   1400086e0:	rex push rbx
   1400086e2:	sub    rsp,0x40
   1400086e6:	xor    ebx,ebx
   1400086e8:	mov    QWORD PTR [rsp+0x50],rbx
   1400086ed:	call   0x14000818c
   1400086f2:	test   eax,eax
   1400086f4:	je     0x14000877b
   1400086fa:	call   QWORD PTR [rip+0x7a50]        # 0x140010150
   140008700:	mov    QWORD PTR [rsp+0x30],rbx
   140008705:	xor    r9d,r9d
   140008708:	mov    r8d,eax
   14000870b:	mov    DWORD PTR [rsp+0x28],ebx
   14000870f:	lea    rax,[rsp+0x50]
   140008714:	xor    edx,edx
   140008716:	mov    ecx,0x1300
   14000871b:	mov    QWORD PTR [rsp+0x20],rax
   140008720:	call   QWORD PTR [rip+0x7952]        # 0x140010078
   140008726:	mov    rcx,QWORD PTR [rsp+0x50]
   14000872b:	test   eax,eax
   14000872d:	je     0x14000874a
   14000872f:	test   rcx,rcx
   140008732:	je     0x140008768
   140008734:	call   0x140008528
   140008739:	mov    rcx,QWORD PTR [rsp+0x50]
   14000873e:	mov    ebx,eax
   140008740:	call   QWORD PTR [rip+0x7ba2]        # 0x1400102e8
   140008746:	mov    eax,ebx
   140008748:	jmp    0x14000877d
   14000874a:	test   rcx,rcx
   14000874d:	je     0x140008768
   14000874f:	call   QWORD PTR [rip+0x7b93]        # 0x1400102e8
   140008755:	call   QWORD PTR [rip+0x79f5]        # 0x140010150
   14000875b:	test   eax,eax
   14000875d:	jne    0x140008768
   14000875f:	lea    ecx,[rax+0x8]
   140008762:	call   QWORD PTR [rip+0x79f0]        # 0x140010158
   140008768:	call   QWORD PTR [rip+0x79e2]        # 0x140010150
   14000876e:	test   eax,eax
   140008770:	jne    0x14000877b
   140008772:	lea    ecx,[rax+0x8]
   140008775:	call   QWORD PTR [rip+0x79dd]        # 0x140010158
   14000877b:	xor    eax,eax
   14000877d:	add    rsp,0x40
   140008781:	pop    rbx
   140008782:	ret    
   140008783:	int3   
   140008784:	int3   
   140008785:	int3   
   140008786:	int3   
   140008787:	int3   
   140008788:	int3   
   140008789:	int3   
   14000878a:	int3   
   14000878b:	int3   
   14000878c:	mov    QWORD PTR [rsp+0x10],rbx
   140008791:	mov    QWORD PTR [rsp+0x18],rsi
   140008796:	push   rdi
   140008797:	sub    rsp,0x30
   14000879b:	and    DWORD PTR [rsp+0x40],0x0
   1400087a0:	mov    ebx,0x100
   1400087a5:	mov    r8d,ebx
   1400087a8:	mov    r9d,0x1
   1400087ae:	xor    edx,edx
   1400087b0:	xor    ecx,ecx
   1400087b2:	call   0x1400082e8
   1400087b7:	mov    rdi,rax
   1400087ba:	test   rax,rax
   1400087bd:	jne    0x1400087c6
   1400087bf:	mov    eax,0x8
   1400087c4:	jmp    0x140008833
   1400087c6:	mov    r9d,0x1
   1400087cc:	mov    r8d,ebx
   1400087cf:	mov    ecx,r9d
   1400087d2:	xor    edx,edx
   1400087d4:	call   0x1400082e8
   1400087d9:	mov    rsi,rax
   1400087dc:	test   rax,rax
   1400087df:	je     0x1400087bf
   1400087e1:	mov    rcx,rax
   1400087e4:	call   0x14000a5a0
   1400087e9:	movsxd rbx,eax
   1400087ec:	mov    rcx,rdi
   1400087ef:	shr    rbx,1
   1400087f2:	dec    ebx
   1400087f4:	call   0x14000a5a0
   1400087f9:	movsxd r8,eax
   1400087fc:	lea    rcx,[rsp+0x40]
   140008801:	shr    r8,1
   140008804:	mov    r9,rsi
   140008807:	dec    r8d
   14000880a:	mov    DWORD PTR [rsp+0x20],ebx
   14000880e:	mov    rdx,rdi
   140008811:	call   QWORD PTR [rip+0x7961]        # 0x140010178
   140008817:	test   eax,eax
   140008819:	jne    0x140008833
   14000881b:	mov    rcx,rdi
   14000881e:	call   0x140008528
   140008823:	mov    ecx,DWORD PTR [rsp+0x40]
   140008827:	test   eax,eax
   140008829:	mov    edx,0x8
   14000882e:	cmove  ecx,edx
   140008831:	mov    eax,ecx
   140008833:	mov    rbx,QWORD PTR [rsp+0x48]
   140008838:	mov    rsi,QWORD PTR [rsp+0x50]
   14000883d:	add    rsp,0x30
   140008841:	pop    rdi
   140008842:	ret    
   140008843:	int3   
   140008844:	int3   
   140008845:	int3   
   140008846:	int3   
   140008847:	int3   
   140008848:	int3   
   140008849:	int3   
   14000884a:	int3   
   14000884b:	int3   
   14000884c:	mov    QWORD PTR [rsp+0x8],rbx
   140008851:	push   rdi
   140008852:	sub    rsp,0x20
   140008856:	mov    rdi,rcx
   140008859:	call   0x1400086e0
   14000885e:	xor    ebx,ebx
   140008860:	test   eax,eax
   140008862:	je     0x14000887b
   140008864:	call   0x1400084e8
   140008869:	mov    rdx,rax
   14000886c:	mov    rcx,rdi
   14000886f:	call   0x14000999c
   140008874:	test   eax,eax
   140008876:	setne  bl
   140008879:	mov    eax,ebx
   14000887b:	mov    rbx,QWORD PTR [rsp+0x30]
   140008880:	add    rsp,0x20
   140008884:	pop    rdi
   140008885:	ret    
   140008886:	int3   
   140008887:	int3   
   140008888:	int3   
   140008889:	int3   
   14000888a:	int3   
   14000888b:	int3   
   14000888c:	mov    QWORD PTR [rsp+0x8],rbx
   140008891:	mov    QWORD PTR [rsp+0x10],rsi
   140008896:	push   rdi
   140008897:	sub    rsp,0x30
   14000889b:	mov    ebx,edx
   14000889d:	mov    rdi,rcx
   1400088a0:	test   rcx,rcx
   1400088a3:	je     0x14000891d
   1400088a5:	test   edx,0xf0000
   1400088ab:	je     0x14000891d
   1400088ad:	bt     edx,0x10
   1400088b1:	jae    0x1400088b8
   1400088b3:	call   0x1400086e0
   1400088b8:	mov    esi,0x1
   1400088bd:	test   sil,bl
   1400088c0:	je     0x1400088c9
   1400088c2:	mov    ecx,0x1389
   1400088c7:	jmp    0x1400088eb
   1400088c9:	test   bl,0x4
   1400088cc:	je     0x1400088d5
   1400088ce:	mov    ecx,0x138a
   1400088d3:	jmp    0x1400088eb
   1400088d5:	test   bl,0x2
   1400088d8:	je     0x1400088e1
   1400088da:	mov    ecx,0x138c
   1400088df:	jmp    0x1400088eb
   1400088e1:	test   bl,0x8
   1400088e4:	je     0x140008909
   1400088e6:	mov    ecx,0x138b
   1400088eb:	call   0x140008af0
   1400088f0:	lea    r9,[rip+0x82c9]        # 0x140010bc0
   1400088f7:	mov    QWORD PTR [rsp+0x20],rax
   1400088fc:	mov    r8d,esi
   1400088ff:	mov    edx,esi
   140008901:	mov    rcx,rdi
   140008904:	call   0x140009ce0
   140008909:	call   0x1400084e8
   14000890e:	mov    rdx,rax
   140008911:	mov    rcx,rdi
   140008914:	call   0x14000999c
   140008919:	mov    eax,esi
   14000891b:	jmp    0x140008932
   14000891d:	call   QWORD PTR [rip+0x782d]        # 0x140010150
   140008923:	test   eax,eax
   140008925:	jne    0x140008930
   140008927:	lea    ecx,[rax+0x57]
   14000892a:	call   QWORD PTR [rip+0x7828]        # 0x140010158
   140008930:	xor    eax,eax
   140008932:	mov    rbx,QWORD PTR [rsp+0x40]
   140008937:	mov    rsi,QWORD PTR [rsp+0x48]
   14000893c:	add    rsp,0x30
   140008940:	pop    rdi
   140008941:	ret    
   140008942:	int3   
   140008943:	int3   
   140008944:	int3   
   140008945:	int3   
   140008946:	int3   
   140008947:	int3   
   140008948:	mov    QWORD PTR [rsp+0x10],rbx
   14000894d:	push   rdi
   14000894e:	sub    rsp,0x20
   140008952:	mov    rax,QWORD PTR [rip+0xcddf]        # 0x140015738
   140008959:	test   rax,rax
   14000895c:	je     0x140008a08
   140008962:	cmp    DWORD PTR [rax],0x9
   140008965:	jne    0x140008a08
   14000896b:	mov    edx,0x3
   140008970:	call   0x14000b614
   140008975:	test   eax,eax
   140008977:	je     0x1400089e6
   140008979:	lea    ebx,[rax-0x1]
   14000897c:	mov    edi,eax
   14000897e:	mov    r8d,ebx
   140008981:	call   0x14000b9f4
   140008986:	cmp    eax,0x10000
   14000898b:	jne    0x1400089de
   14000898d:	mov    r8d,ebx
   140008990:	call   0x14000b844
   140008995:	mov    QWORD PTR [rsp+0x30],rax
   14000899a:	test   rax,rax
   14000899d:	je     0x1400089de
   14000899f:	lea    rcx,[rax+0x10]
   1400089a3:	call   0x14000a31c
   1400089a8:	lea    rcx,[rsp+0x30]
   1400089ad:	call   0x14000a31c
   1400089b2:	mov    rcx,QWORD PTR [rip+0xcd7f]        # 0x140015738
   1400089b9:	xor    r8d,r8d
   1400089bc:	lea    edx,[r8+0x3]
   1400089c0:	call   0x14000af68
   1400089c5:	test   rax,rax
   1400089c8:	je     0x1400089de
   1400089ca:	cmp    DWORD PTR [rax+0x4],0x80000
   1400089d1:	jne    0x1400089de
   1400089d3:	mov    rcx,QWORD PTR [rax+0x10]
   1400089d7:	mov    edx,ebx
   1400089d9:	call   0x14000b5a8
   1400089de:	dec    ebx
   1400089e0:	sub    rdi,0x1
   1400089e4:	jne    0x14000897e
   1400089e6:	mov    rcx,QWORD PTR [rip+0xcd4b]        # 0x140015738
   1400089ed:	test   rcx,rcx
   1400089f0:	je     0x140008a08
   1400089f2:	cmp    DWORD PTR [rcx],0x9
   1400089f5:	jne    0x140008a08
   1400089f7:	call   0x14000b1d4
   1400089fc:	lea    rcx,[rip+0xcd35]        # 0x140015738
   140008a03:	call   0x14000a31c
   140008a08:	cmp    DWORD PTR [rip+0xcd31],0x1        # 0x140015740
   140008a0f:	jne    0x140008a17
   140008a11:	call   QWORD PTR [rip+0x7851]        # 0x140010268
   140008a17:	mov    eax,0x1
   140008a1c:	mov    rbx,QWORD PTR [rsp+0x38]
   140008a21:	add    rsp,0x20
   140008a25:	pop    rdi
   140008a26:	ret    
   140008a27:	int3   
   140008a28:	int3   
   140008a29:	int3   
   140008a2a:	int3   
   140008a2b:	int3   
   140008a2c:	int3   
   140008a2d:	int3   
   140008a2e:	int3   
   140008a2f:	int3   
   140008a30:	sub    rsp,0x158
   140008a37:	mov    rax,QWORD PTR [rip+0xc5ca]        # 0x140015008
   140008a3e:	xor    rax,rsp
   140008a41:	mov    QWORD PTR [rsp+0x140],rax
   140008a49:	xor    edx,edx
   140008a4b:	lea    rcx,[rsp+0x20]
   140008a50:	mov    r8d,0x11c
   140008a56:	call   0x14000ed52
   140008a5b:	movzx  eax,WORD PTR [rip+0xccd2]        # 0x140015734
   140008a62:	mov    r8b,0x3
   140008a65:	mov    edx,0x2
   140008a6a:	mov    WORD PTR [rsp+0x134],ax
   140008a72:	xor    ecx,ecx
   140008a74:	mov    DWORD PTR [rsp+0x20],0x11c
   140008a7c:	mov    DWORD PTR [rsp+0x24],0x5
   140008a84:	mov    DWORD PTR [rsp+0x28],0x1
   140008a8c:	call   QWORD PTR [rip+0x7ad6]        # 0x140010568
   140008a92:	mov    r8b,0x3
   140008a95:	mov    edx,0x1
   140008a9a:	mov    rcx,rax
   140008a9d:	call   QWORD PTR [rip+0x7ac5]        # 0x140010568
   140008aa3:	mov    r8b,0x3
   140008aa6:	mov    edx,0x20
   140008aab:	mov    rcx,rax
   140008aae:	call   QWORD PTR [rip+0x7ab4]        # 0x140010568
   140008ab4:	mov    edx,0x3
   140008ab9:	lea    rcx,[rsp+0x20]
   140008abe:	mov    r8,rax
   140008ac1:	call   QWORD PTR [rip+0x7a99]        # 0x140010560
   140008ac7:	xor    ecx,ecx
   140008ac9:	test   eax,eax
   140008acb:	setns  cl
   140008ace:	mov    eax,ecx
   140008ad0:	mov    rcx,QWORD PTR [rsp+0x140]
   140008ad8:	xor    rcx,rsp
   140008adb:	call   0x14000e560
   140008ae0:	add    rsp,0x158
   140008ae7:	ret    
   140008ae8:	int3   
   140008ae9:	int3   
   140008aea:	int3   
   140008aeb:	int3   
   140008aec:	int3   
   140008aed:	int3   
   140008aee:	int3   
   140008aef:	int3   
   140008af0:	mov    r8d,DWORD PTR [rip+0xcc39]        # 0x140015730
   140008af7:	mov    eax,0xcccccccd
   140008afc:	inc    r8d
   140008aff:	mul    r8d
   140008b02:	mov    DWORD PTR [rip+0xcc27],r8d        # 0x140015730
   140008b09:	shr    edx,0x3
   140008b0c:	lea    eax,[rdx+rdx*4]
   140008b0f:	mov    edx,ecx
   140008b11:	add    eax,eax
   140008b13:	sub    r8d,eax
   140008b16:	add    r8d,0x4
   140008b1a:	jmp    0x140008b28
   140008b1f:	int3   
   140008b20:	int3   
   140008b21:	int3   
   140008b22:	int3   
   140008b23:	int3   
   140008b24:	int3   
   140008b25:	int3   
   140008b26:	int3   
   140008b27:	int3   
   140008b28:	mov    rax,rsp
   140008b2b:	mov    QWORD PTR [rax+0x10],rbx
   140008b2f:	mov    QWORD PTR [rax+0x18],rbp
   140008b33:	mov    QWORD PTR [rax+0x8],rcx
   140008b37:	push   rsi
   140008b38:	push   rdi
   140008b39:	push   r15
   140008b3b:	sub    rsp,0x40
   140008b3f:	and    QWORD PTR [rax+0x8],0x0
   140008b44:	mov    edi,r8d
   140008b47:	mov    ebp,edx
   140008b49:	test   edx,edx
   140008b4b:	jne    0x140008b63
   140008b4d:	call   QWORD PTR [rip+0x75fd]        # 0x140010150
   140008b53:	test   eax,eax
   140008b55:	jne    0x140008c8d
   140008b5b:	lea    ecx,[rbp+0x57]
   140008b5e:	jmp    0x140008c87
   140008b63:	call   0x14000818c
   140008b68:	test   eax,eax
   140008b6a:	je     0x140008c8d
   140008b70:	mov    r15d,0x1
   140008b76:	mov    edx,r15d
   140008b79:	call   0x14000b614
   140008b7e:	mov    r10d,eax
   140008b81:	cmp    eax,edi
   140008b83:	ja     0x140008bb3
   140008b85:	mov    rcx,QWORD PTR [rip+0xcbac]        # 0x140015738
   140008b8c:	call   0x14000b65c
   140008b91:	test   rax,rax
   140008b94:	je     0x140008c7a
   140008b9a:	mov    edx,edi
   140008b9c:	mov    rcx,rax
   140008b9f:	sub    edx,r10d
   140008ba2:	add    edx,r15d
   140008ba5:	call   0x14000b54c
   140008baa:	cmp    eax,0xffffffff
   140008bad:	je     0x140008c7a
   140008bb3:	mov    ebx,0x80
   140008bb8:	xor    edx,edx
   140008bba:	add    ebx,ebx
   140008bbc:	mov    r9d,r15d
   140008bbf:	mov    r8d,ebx
   140008bc2:	lea    ecx,[rdx+0x4]
   140008bc5:	call   0x1400082e8
   140008bca:	mov    rsi,rax
   140008bcd:	test   rax,rax
   140008bd0:	je     0x140008c7a
   140008bd6:	mov    r9d,ebx
   140008bd9:	mov    r8,rax
   140008bdc:	mov    edx,ebp
   140008bde:	xor    ecx,ecx
   140008be0:	call   QWORD PTR [rip+0x763a]        # 0x140010220
   140008be6:	mov    ecx,eax
   140008be8:	test   eax,eax
   140008bea:	jne    0x140008c30
   140008bec:	call   QWORD PTR [rip+0x755e]        # 0x140010150
   140008bf2:	cmp    eax,0x716
   140008bf7:	jne    0x140008c8d
   140008bfd:	and    QWORD PTR [rsp+0x30],0x0
   140008c03:	lea    rax,[rsp+0x60]
   140008c08:	and    DWORD PTR [rsp+0x28],0x0
   140008c0d:	xor    r9d,r9d
   140008c10:	mov    r8d,ebp
   140008c13:	mov    QWORD PTR [rsp+0x20],rax
   140008c18:	xor    edx,edx
   140008c1a:	mov    ecx,0xb00
   140008c1f:	call   QWORD PTR [rip+0x7453]        # 0x140010078
   140008c25:	mov    ecx,eax
   140008c27:	test   eax,eax
   140008c29:	je     0x140008c8d
   140008c2b:	mov    rsi,QWORD PTR [rsp+0x60]
   140008c30:	lea    eax,[rbx-0x1]
   140008c33:	cmp    ecx,eax
   140008c35:	jae    0x140008bb8
   140008c37:	mov    rcx,QWORD PTR [rip+0xcafa]        # 0x140015738
   140008c3e:	mov    r9,rsi
   140008c41:	mov    r8d,edi
   140008c44:	mov    edx,r15d
   140008c47:	call   0x14000b9b4
   140008c4c:	test   eax,eax
   140008c4e:	je     0x140008c7a
   140008c50:	mov    rcx,QWORD PTR [rsp+0x60]
   140008c55:	test   rcx,rcx
   140008c58:	je     0x140008c66
   140008c5a:	call   QWORD PTR [rip+0x7688]        # 0x1400102e8
   140008c60:	and    QWORD PTR [rsp+0x60],0x0
   140008c66:	mov    rcx,QWORD PTR [rip+0xcacb]        # 0x140015738
   140008c6d:	mov    r8d,edi
   140008c70:	mov    edx,r15d
   140008c73:	call   0x14000b88c
   140008c78:	jmp    0x140008c94
   140008c7a:	call   QWORD PTR [rip+0x74d0]        # 0x140010150
   140008c80:	test   eax,eax
   140008c82:	jne    0x140008c8d
   140008c84:	lea    ecx,[rax+0x8]
   140008c87:	call   QWORD PTR [rip+0x74cb]        # 0x140010158
   140008c8d:	lea    rax,[rip+0x7f68]        # 0x140010bfc
   140008c94:	mov    rbx,QWORD PTR [rsp+0x68]
   140008c99:	mov    rbp,QWORD PTR [rsp+0x70]
   140008c9e:	add    rsp,0x40
   140008ca2:	pop    r15
   140008ca4:	pop    rdi
   140008ca5:	pop    rsi
   140008ca6:	ret    
   140008ca7:	int3   
   140008ca8:	int3   
   140008ca9:	int3   
   140008caa:	int3   
   140008cab:	int3   
   140008cac:	int3   
   140008cad:	int3   
   140008cae:	int3   
   140008caf:	int3   
   140008cb0:	rex push rbx
   140008cb2:	sub    rsp,0x30
   140008cb6:	and    QWORD PTR [rsp+0x40],0x0
   140008cbc:	mov    rbx,rcx
   140008cbf:	movaps XMMWORD PTR [rsp+0x20],xmm6
   140008cc4:	test   rcx,rcx
   140008cc7:	je     0x140008d41
   140008cc9:	call   QWORD PTR [rip+0x7479]        # 0x140010148
   140008ccf:	test   eax,eax
   140008cd1:	je     0x140008d41
   140008cd3:	call   0x14000818c
   140008cd8:	test   eax,eax
   140008cda:	je     0x140008d54
   140008cdc:	xor    r9d,r9d
   140008cdf:	xor    r8d,r8d
   140008ce2:	mov    rdx,rbx
   140008ce5:	xor    ecx,ecx
   140008ce7:	call   0x1400082e8
   140008cec:	mov    rbx,rax
   140008cef:	test   rax,rax
   140008cf2:	jne    0x140008d03
   140008cf4:	call   QWORD PTR [rip+0x7456]        # 0x140010150
   140008cfa:	test   eax,eax
   140008cfc:	jne    0x140008d54
   140008cfe:	lea    ecx,[rbx+0x8]
   140008d01:	jmp    0x140008d4e
   140008d03:	call   QWORD PTR [rip+0x77f7]        # 0x140010500
   140008d09:	lea    rdx,[rsp+0x40]
   140008d0e:	mov    rcx,rbx
   140008d11:	and    DWORD PTR [rax],0x0
   140008d14:	call   QWORD PTR [rip+0x77ee]        # 0x140010508
   140008d1a:	movaps xmm6,xmm0
   140008d1d:	call   QWORD PTR [rip+0x77dd]        # 0x140010500
   140008d23:	cmp    DWORD PTR [rax],0x22
   140008d26:	je     0x140008d41
   140008d28:	mov    rcx,QWORD PTR [rsp+0x40]
   140008d2d:	test   rcx,rcx
   140008d30:	je     0x140008d3c
   140008d32:	call   QWORD PTR [rip+0x7410]        # 0x140010148
   140008d38:	test   eax,eax
   140008d3a:	jne    0x140008d41
   140008d3c:	movaps xmm0,xmm6
   140008d3f:	jmp    0x140008d57
   140008d41:	call   QWORD PTR [rip+0x7409]        # 0x140010150
   140008d47:	test   eax,eax
   140008d49:	jne    0x140008d54
   140008d4b:	lea    ecx,[rax+0x57]
   140008d4e:	call   QWORD PTR [rip+0x7404]        # 0x140010158
   140008d54:	xorps  xmm0,xmm0
   140008d57:	movaps xmm6,XMMWORD PTR [rsp+0x20]
   140008d5c:	add    rsp,0x30
   140008d60:	pop    rbx
   140008d61:	ret    
   140008d62:	int3   
   140008d63:	int3   
   140008d64:	int3   
   140008d65:	int3   
   140008d66:	int3   
   140008d67:	int3   
   140008d68:	rex push rbx
   140008d6a:	sub    rsp,0x20
   140008d6e:	and    QWORD PTR [rsp+0x40],0x0
   140008d74:	mov    rbx,rcx
   140008d77:	test   rcx,rcx
   140008d7a:	je     0x140008e1b
   140008d80:	call   0x14000818c
   140008d85:	test   eax,eax
   140008d87:	je     0x140008e2e
   140008d8d:	xor    r9d,r9d
   140008d90:	xor    r8d,r8d
   140008d93:	mov    rdx,rbx
   140008d96:	xor    ecx,ecx
   140008d98:	call   0x1400082e8
   140008d9d:	mov    rbx,rax
   140008da0:	test   rax,rax
   140008da3:	jne    0x140008db4
   140008da5:	call   QWORD PTR [rip+0x73a5]        # 0x140010150
   140008dab:	test   eax,eax
   140008dad:	jne    0x140008e2e
   140008daf:	lea    ecx,[rbx+0x8]
   140008db2:	jmp    0x140008e28
   140008db4:	xor    edx,edx
   140008db6:	mov    rcx,rax
   140008db9:	call   0x140009260
   140008dbe:	mov    rcx,rbx
   140008dc1:	call   QWORD PTR [rip+0x7381]        # 0x140010148
   140008dc7:	test   eax,eax
   140008dc9:	je     0x140008e1b
   140008dcb:	call   QWORD PTR [rip+0x772f]        # 0x140010500
   140008dd1:	mov    r8d,0xa
   140008dd7:	lea    rdx,[rsp+0x40]
   140008ddc:	mov    rcx,rbx
   140008ddf:	and    DWORD PTR [rax],0x0
   140008de2:	cmp    WORD PTR [rbx],0x2d
   140008de6:	jne    0x140008df0
   140008de8:	call   QWORD PTR [rip+0x7722]        # 0x140010510
   140008dee:	jmp    0x140008df6
   140008df0:	call   QWORD PTR [rip+0x7722]        # 0x140010518
   140008df6:	mov    ebx,eax
   140008df8:	call   QWORD PTR [rip+0x7702]        # 0x140010500
   140008dfe:	cmp    DWORD PTR [rax],0x22
   140008e01:	je     0x140008e1b
   140008e03:	mov    rcx,QWORD PTR [rsp+0x40]
   140008e08:	test   rcx,rcx
   140008e0b:	je     0x140008e17
   140008e0d:	call   QWORD PTR [rip+0x7335]        # 0x140010148
   140008e13:	test   eax,eax
   140008e15:	jne    0x140008e1b
   140008e17:	mov    eax,ebx
   140008e19:	jmp    0x140008e30
   140008e1b:	call   QWORD PTR [rip+0x732f]        # 0x140010150
   140008e21:	test   eax,eax
   140008e23:	jne    0x140008e2e
   140008e25:	lea    ecx,[rax+0x57]
   140008e28:	call   QWORD PTR [rip+0x732a]        # 0x140010158
   140008e2e:	xor    eax,eax
   140008e30:	add    rsp,0x20
   140008e34:	pop    rbx
   140008e35:	ret    
   140008e36:	int3   
   140008e37:	int3   
   140008e38:	int3   
   140008e39:	int3   
   140008e3a:	int3   
   140008e3b:	int3   
   140008e3c:	mov    QWORD PTR [rsp+0x8],rbx
   140008e41:	push   rdi
   140008e42:	sub    rsp,0x20
   140008e46:	and    QWORD PTR [rsp+0x48],0x0
   140008e4c:	mov    edi,r8d
   140008e4f:	test   rcx,rcx
   140008e52:	je     0x140008ef4
   140008e58:	mov    rdx,rcx
   140008e5b:	xor    r9d,r9d
   140008e5e:	xor    ecx,ecx
   140008e60:	xor    r8d,r8d
   140008e63:	call   0x1400082e8
   140008e68:	mov    rbx,rax
   140008e6b:	test   rax,rax
   140008e6e:	jne    0x140008e83
   140008e70:	call   QWORD PTR [rip+0x72da]        # 0x140010150
   140008e76:	test   eax,eax
   140008e78:	jne    0x140008f07
   140008e7e:	lea    ecx,[rbx+0x8]
   140008e81:	jmp    0x140008f01
   140008e83:	xor    edx,edx
   140008e85:	mov    rcx,rax
   140008e88:	call   0x140009260
   140008e8d:	mov    rcx,rbx
   140008e90:	call   QWORD PTR [rip+0x72b2]        # 0x140010148
   140008e96:	test   eax,eax
   140008e98:	je     0x140008f07
   140008e9a:	test   edi,edi
   140008e9c:	jne    0x140008ea4
   140008e9e:	cmp    WORD PTR [rbx],0x2d
   140008ea2:	je     0x140008f07
   140008ea4:	call   QWORD PTR [rip+0x7656]        # 0x140010500
   140008eaa:	mov    r8d,0xa
   140008eb0:	lea    rdx,[rsp+0x48]
   140008eb5:	mov    rcx,rbx
   140008eb8:	and    DWORD PTR [rax],0x0
   140008ebb:	cmp    edi,0x1
   140008ebe:	jne    0x140008ec8
   140008ec0:	call   QWORD PTR [rip+0x764a]        # 0x140010510
   140008ec6:	jmp    0x140008ece
   140008ec8:	call   QWORD PTR [rip+0x764a]        # 0x140010518
   140008ece:	call   QWORD PTR [rip+0x762c]        # 0x140010500
   140008ed4:	cmp    DWORD PTR [rax],0x22
   140008ed7:	je     0x140008f07
   140008ed9:	mov    rcx,QWORD PTR [rsp+0x48]
   140008ede:	test   rcx,rcx
   140008ee1:	je     0x140008eed
   140008ee3:	call   QWORD PTR [rip+0x725f]        # 0x140010148
   140008ee9:	test   eax,eax
   140008eeb:	jne    0x140008f07
   140008eed:	mov    eax,0x1
   140008ef2:	jmp    0x140008f09
   140008ef4:	call   QWORD PTR [rip+0x7256]        # 0x140010150
   140008efa:	test   eax,eax
   140008efc:	jne    0x140008f07
   140008efe:	lea    ecx,[rax+0x57]
   140008f01:	call   QWORD PTR [rip+0x7251]        # 0x140010158
   140008f07:	xor    eax,eax
   140008f09:	mov    rbx,QWORD PTR [rsp+0x30]
   140008f0e:	add    rsp,0x20
   140008f12:	pop    rdi
   140008f13:	ret    
   140008f14:	int3   
   140008f15:	int3   
   140008f16:	int3   
   140008f17:	int3   
   140008f18:	int3   
   140008f19:	int3   
   140008f1a:	int3   
   140008f1b:	int3   
   140008f1c:	mov    QWORD PTR [rsp+0x8],rbx
   140008f21:	push   rdi
   140008f22:	sub    rsp,0x20
   140008f26:	movzx  edi,dx
   140008f29:	mov    rbx,rcx
   140008f2c:	test   rcx,rcx
   140008f2f:	jne    0x140008f40
   140008f31:	call   QWORD PTR [rip+0x7219]        # 0x140010150
   140008f37:	test   eax,eax
   140008f39:	jne    0x140008f6f
   140008f3b:	lea    ecx,[rbx+0x57]
   140008f3e:	jmp    0x140008f69
   140008f40:	call   QWORD PTR [rip+0x7202]        # 0x140010148
   140008f46:	cmp    eax,0x1
   140008f49:	jb     0x140008f64
   140008f4b:	movzx  edx,di
   140008f4e:	mov    rcx,rbx
   140008f51:	call   QWORD PTR [rip+0x7289]        # 0x1400101e0
   140008f57:	test   rax,rax
   140008f5a:	je     0x140008f64
   140008f5c:	sub    rax,rbx
   140008f5f:	sar    rax,1
   140008f62:	jmp    0x140008f72
   140008f64:	mov    ecx,0x490
   140008f69:	call   QWORD PTR [rip+0x71e9]        # 0x140010158
   140008f6f:	or     eax,0xffffffff
   140008f72:	mov    rbx,QWORD PTR [rsp+0x30]
   140008f77:	add    rsp,0x20
   140008f7b:	pop    rdi
   140008f7c:	ret    
   140008f7d:	int3   
   140008f7e:	int3   
   140008f7f:	int3   
   140008f80:	int3   
   140008f81:	int3   
   140008f82:	int3   
   140008f83:	int3   
   140008f84:	mov    QWORD PTR [rsp+0x8],rbx
   140008f89:	mov    QWORD PTR [rsp+0x10],rbp
   140008f8e:	mov    QWORD PTR [rsp+0x18],rsi
   140008f93:	push   rdi
   140008f94:	push   r12
   140008f96:	push   r13
   140008f98:	push   r14
   140008f9a:	push   r15
   140008f9c:	sub    rsp,0x20
   140008fa0:	xor    ebx,ebx
   140008fa2:	mov    r15d,r8d
   140008fa5:	mov    rdi,rdx
   140008fa8:	mov    rsi,rcx
   140008fab:	test   rcx,rcx
   140008fae:	je     0x140009072
   140008fb4:	test   rdx,rdx
   140008fb7:	je     0x140009072
   140008fbd:	mov    rcx,rdx
   140008fc0:	call   QWORD PTR [rip+0x7182]        # 0x140010148
   140008fc6:	lea    r14d,[rbx+0x1]
   140008fca:	xor    edx,edx
   140008fcc:	mov    r9d,r14d
   140008fcf:	xor    ecx,ecx
   140008fd1:	lea    r12d,[rax+0x4]
   140008fd5:	mov    r8d,r12d
   140008fd8:	call   0x1400082e8
   140008fdd:	mov    rbp,rax
   140008fe0:	test   rax,rax
   140008fe3:	jne    0x140008ffb
   140008fe5:	call   QWORD PTR [rip+0x7165]        # 0x140010150
   140008feb:	test   eax,eax
   140008fed:	jne    0x140009085
   140008ff3:	lea    ecx,[rax+0x8]
   140008ff6:	jmp    0x14000907f
   140008ffb:	mov    rcx,rsi
   140008ffe:	call   QWORD PTR [rip+0x7144]        # 0x140010148
   140009004:	mov    r9d,r14d
   140009007:	xor    edx,edx
   140009009:	mov    ecx,r14d
   14000900c:	lea    r13d,[rax+0x4]
   140009010:	mov    r8d,r13d
   140009013:	call   0x1400082e8
   140009018:	mov    r14,rax
   14000901b:	test   rax,rax
   14000901e:	je     0x140008fe5
   140009020:	mov    edx,r12d
   140009023:	lea    r8,[rip+0x7b9e]        # 0x140010bc8
   14000902a:	mov    r9,rdi
   14000902d:	mov    rcx,rbp
   140009030:	call   0x140006ca4
   140009035:	test   eax,eax
   140009037:	jns    0x14000903e
   140009039:	movzx  ecx,ax
   14000903c:	jmp    0x14000907f
   14000903e:	mov    edx,r13d
   140009041:	lea    r8,[rip+0x7b80]        # 0x140010bc8
   140009048:	mov    r9,rsi
   14000904b:	mov    rcx,r14
   14000904e:	call   0x140006ca4
   140009053:	test   eax,eax
   140009055:	js     0x140009039
   140009057:	xor    r9d,r9d
   14000905a:	mov    r8d,r15d
   14000905d:	mov    rdx,r14
   140009060:	mov    rcx,rbp
   140009063:	call   0x140009154
   140009068:	cmp    eax,0xffffffff
   14000906b:	setne  bl
   14000906e:	mov    eax,ebx
   140009070:	jmp    0x140009087
   140009072:	call   QWORD PTR [rip+0x70d8]        # 0x140010150
   140009078:	test   eax,eax
   14000907a:	jne    0x140009085
   14000907c:	lea    ecx,[rax+0x57]
   14000907f:	call   QWORD PTR [rip+0x70d3]        # 0x140010158
   140009085:	xor    eax,eax
   140009087:	mov    rbx,QWORD PTR [rsp+0x50]
   14000908c:	mov    rbp,QWORD PTR [rsp+0x58]
   140009091:	mov    rsi,QWORD PTR [rsp+0x60]
   140009096:	add    rsp,0x20
   14000909a:	pop    r15
   14000909c:	pop    r14
   14000909e:	pop    r13
   1400090a0:	pop    r12
   1400090a2:	pop    rdi
   1400090a3:	ret    
   1400090a4:	int3   
   1400090a5:	int3   
   1400090a6:	int3   
   1400090a7:	int3   
   1400090a8:	int3   
   1400090a9:	int3   
   1400090aa:	int3   
   1400090ab:	int3   
   1400090ac:	mov    QWORD PTR [rsp+0x8],rbx
   1400090b1:	mov    QWORD PTR [rsp+0x10],rbp
   1400090b6:	mov    QWORD PTR [rsp+0x18],rsi
   1400090bb:	push   rdi
   1400090bc:	sub    rsp,0x20
   1400090c0:	xor    ebx,ebx
   1400090c2:	mov    rdi,rdx
   1400090c5:	mov    rbp,rcx
   1400090c8:	test   rcx,rcx
   1400090cb:	je     0x140009120
   1400090cd:	test   rdx,rdx
   1400090d0:	je     0x140009120
   1400090d2:	mov    rcx,rdx
   1400090d5:	call   QWORD PTR [rip+0x706d]        # 0x140010148
   1400090db:	mov    esi,eax
   1400090dd:	test   eax,eax
   1400090df:	je     0x140009119
   1400090e1:	mov    rcx,rbp
   1400090e4:	call   QWORD PTR [rip+0x705e]        # 0x140010148
   1400090ea:	test   eax,eax
   1400090ec:	je     0x140009119
   1400090ee:	mov    rcx,rbp
   1400090f1:	call   QWORD PTR [rip+0x7051]        # 0x140010148
   1400090f7:	test   eax,eax
   1400090f9:	je     0x140009119
   1400090fb:	test   esi,esi
   1400090fd:	je     0x140009119
   1400090ff:	movzx  edx,WORD PTR [rdi]
   140009102:	mov    rcx,rbp
   140009105:	call   0x140008f1c
   14000910a:	cmp    eax,0xffffffff
   14000910d:	jne    0x140009136
   14000910f:	inc    ebx
   140009111:	add    rdi,0x2
   140009115:	cmp    ebx,esi
   140009117:	jb     0x1400090ff
   140009119:	mov    ecx,0x490
   14000911e:	jmp    0x14000912d
   140009120:	call   QWORD PTR [rip+0x702a]        # 0x140010150
   140009126:	test   eax,eax
   140009128:	jne    0x140009133
   14000912a:	lea    ecx,[rax+0x57]
   14000912d:	call   QWORD PTR [rip+0x7025]        # 0x140010158
   140009133:	or     eax,0xffffffff
   140009136:	mov    rbx,QWORD PTR [rsp+0x30]
   14000913b:	mov    rbp,QWORD PTR [rsp+0x38]
   140009140:	mov    rsi,QWORD PTR [rsp+0x40]
   140009145:	add    rsp,0x20
   140009149:	pop    rdi
   14000914a:	ret    
   14000914b:	int3   
   14000914c:	int3   
   14000914d:	int3   
   14000914e:	int3   
   14000914f:	int3   
   140009150:	int3   
   140009151:	int3   
   140009152:	int3   
   140009153:	int3   
   140009154:	mov    rax,rsp
   140009157:	mov    QWORD PTR [rax+0x8],rbx
   14000915b:	mov    QWORD PTR [rax+0x10],rbp
   14000915f:	mov    QWORD PTR [rax+0x18],rsi
   140009163:	mov    QWORD PTR [rax+0x20],rdi
   140009167:	push   r14
   140009169:	sub    rsp,0x20
   14000916d:	mov    esi,r9d
   140009170:	mov    r14d,r8d
   140009173:	mov    rbp,rdx
   140009176:	mov    rdi,rcx
   140009179:	test   rcx,rcx
   14000917c:	je     0x1400091d5
   14000917e:	test   rdx,rdx
   140009181:	je     0x1400091d5
   140009183:	call   QWORD PTR [rip+0x6fbf]        # 0x140010148
   140009189:	mov    rcx,rbp
   14000918c:	mov    ebx,eax
   14000918e:	call   QWORD PTR [rip+0x6fb4]        # 0x140010148
   140009194:	test   eax,eax
   140009196:	je     0x1400091c6
   140009198:	test   ebx,ebx
   14000919a:	je     0x1400091c6
   14000919c:	cmp    esi,ebx
   14000919e:	jae    0x1400091c6
   1400091a0:	sub    ebx,esi
   1400091a2:	cmp    ebx,eax
   1400091a4:	jb     0x1400091c6
   1400091a6:	lea    rcx,[rdi+rsi*2]
   1400091aa:	mov    rdx,rbp
   1400091ad:	cmp    r14d,0x1
   1400091b1:	jne    0x1400091bb
   1400091b3:	call   QWORD PTR [rip+0x7037]        # 0x1400101f0
   1400091b9:	jmp    0x1400091c1
   1400091bb:	call   QWORD PTR [rip+0x7037]        # 0x1400101f8
   1400091c1:	test   rax,rax
   1400091c4:	jne    0x1400091cd
   1400091c6:	mov    ecx,0x490
   1400091cb:	jmp    0x1400091e2
   1400091cd:	sub    rax,rdi
   1400091d0:	sar    rax,1
   1400091d3:	jmp    0x1400091eb
   1400091d5:	call   QWORD PTR [rip+0x6f75]        # 0x140010150
   1400091db:	test   eax,eax
   1400091dd:	jne    0x1400091e8
   1400091df:	lea    ecx,[rax+0x57]
   1400091e2:	call   QWORD PTR [rip+0x6f70]        # 0x140010158
   1400091e8:	or     eax,0xffffffff
   1400091eb:	mov    rbx,QWORD PTR [rsp+0x30]
   1400091f0:	mov    rbp,QWORD PTR [rsp+0x38]
   1400091f5:	mov    rsi,QWORD PTR [rsp+0x40]
   1400091fa:	mov    rdi,QWORD PTR [rsp+0x48]
   1400091ff:	add    rsp,0x20
   140009203:	pop    r14
   140009205:	ret    
   140009206:	int3   
   140009207:	int3   
   140009208:	int3   
   140009209:	int3   
   14000920a:	int3   
   14000920b:	int3   
   14000920c:	rex push rbx
   14000920e:	sub    rsp,0x40
   140009212:	mov    rbx,rcx
   140009215:	test   rcx,rcx
   140009218:	je     0x140009251
   14000921a:	call   QWORD PTR [rip+0x6f28]        # 0x140010148
   140009220:	test   eax,eax
   140009222:	je     0x140009251
   140009224:	and    QWORD PTR [rsp+0x38],0x0
   14000922a:	xor    edx,edx
   14000922c:	and    QWORD PTR [rsp+0x30],0x0
   140009232:	or     r9d,0xffffffff
   140009236:	and    DWORD PTR [rsp+0x28],0x0
   14000923b:	mov    r8,rbx
   14000923e:	and    QWORD PTR [rsp+0x20],0x0
   140009244:	lea    ecx,[rdx+0x1]
   140009247:	call   QWORD PTR [rip+0x6eeb]        # 0x140010138
   14000924d:	dec    eax
   14000924f:	jmp    0x140009253
   140009251:	xor    eax,eax
   140009253:	add    rsp,0x40
   140009257:	pop    rbx
   140009258:	ret    
   140009259:	int3   
   14000925a:	int3   
   14000925b:	int3   
   14000925c:	int3   
   14000925d:	int3   
   14000925e:	int3   
   14000925f:	int3   
   140009260:	mov    QWORD PTR [rsp+0x18],rbx
   140009265:	push   rbp
   140009266:	push   rsi
   140009267:	push   rdi
   140009268:	push   r14
   14000926a:	push   r15
   14000926c:	sub    rsp,0x30
   140009270:	mov    rax,QWORD PTR [rip+0xbd91]        # 0x140015008
   140009277:	xor    rax,rsp
   14000927a:	mov    QWORD PTR [rsp+0x28],rax
   14000927f:	mov    eax,DWORD PTR [rip+0x794f]        # 0x140010bd4
   140009285:	xor    r15d,r15d
   140009288:	mov    DWORD PTR [rsp+0x20],eax
   14000928c:	mov    rbp,rdx
   14000928f:	movzx  eax,WORD PTR [rip+0x7942]        # 0x140010bd8
   140009296:	mov    rdi,rcx
   140009299:	mov    WORD PTR [rsp+0x24],ax
   14000929e:	mov    esi,r15d
   1400092a1:	test   rcx,rcx
   1400092a4:	je     0x140009353
   1400092aa:	call   QWORD PTR [rip+0x6e98]        # 0x140010148
   1400092b0:	test   eax,eax
   1400092b2:	je     0x140009353
   1400092b8:	test   rbp,rbp
   1400092bb:	je     0x1400092ca
   1400092bd:	mov    rcx,rbp
   1400092c0:	call   QWORD PTR [rip+0x6e82]        # 0x140010148
   1400092c6:	test   eax,eax
   1400092c8:	jne    0x1400092cf
   1400092ca:	lea    rbp,[rsp+0x20]
   1400092cf:	mov    rbx,rdi
   1400092d2:	cmp    WORD PTR [rdi],r15w
   1400092d6:	je     0x1400092f3
   1400092d8:	movzx  edx,WORD PTR [rbx]
   1400092db:	mov    rcx,rbp
   1400092de:	call   QWORD PTR [rip+0x6f04]        # 0x1400101e8
   1400092e4:	test   rax,rax
   1400092e7:	je     0x1400092f3
   1400092e9:	add    rbx,0x2
   1400092ed:	cmp    WORD PTR [rbx],r15w
   1400092f1:	jne    0x1400092d8
   1400092f3:	movzx  eax,WORD PTR [rbx]
   1400092f6:	mov    r14,rbx
   1400092f9:	test   ax,ax
   1400092fc:	je     0x140009331
   1400092fe:	movzx  edx,ax
   140009301:	mov    rcx,rbp
   140009304:	call   QWORD PTR [rip+0x6ede]        # 0x1400101e8
   14000930a:	test   rax,rax
   14000930d:	je     0x140009319
   14000930f:	test   rsi,rsi
   140009312:	jne    0x14000931c
   140009314:	mov    rsi,rbx
   140009317:	jmp    0x14000931c
   140009319:	mov    rsi,r15
   14000931c:	add    rbx,0x2
   140009320:	movzx  eax,WORD PTR [rbx]
   140009323:	test   ax,ax
   140009326:	jne    0x1400092fe
   140009328:	test   rsi,rsi
   14000932b:	je     0x140009331
   14000932d:	mov    WORD PTR [rsi],r15w
   140009331:	cmp    r14,rdi
   140009334:	jbe    0x14000934e
   140009336:	mov    rcx,r14
   140009339:	call   QWORD PTR [rip+0x6e09]        # 0x140010148
   14000933f:	mov    rdx,r14
   140009342:	mov    rcx,rdi
   140009345:	lea    r8d,[rax+0x1]
   140009349:	call   0x140009774
   14000934e:	mov    rax,rdi
   140009351:	jmp    0x14000935a
   140009353:	lea    rax,[rip+0x78a2]        # 0x140010bfc
   14000935a:	mov    rcx,QWORD PTR [rsp+0x28]
   14000935f:	xor    rcx,rsp
   140009362:	call   0x14000e560
   140009367:	mov    rbx,QWORD PTR [rsp+0x70]
   14000936c:	add    rsp,0x30
   140009370:	pop    r15
   140009372:	pop    r14
   140009374:	pop    rdi
   140009375:	pop    rsi
   140009376:	pop    rbp
   140009377:	ret    
   140009378:	int3   
   140009379:	int3   
   14000937a:	int3   
   14000937b:	int3   
   14000937c:	int3   
   14000937d:	int3   
   14000937e:	int3   
   14000937f:	int3   
   140009380:	mov    QWORD PTR [rsp+0x18],rbx
   140009385:	push   rbp
   140009386:	push   rsi
   140009387:	push   rdi
   140009388:	push   r12
   14000938a:	push   r13
   14000938c:	push   r14
   14000938e:	push   r15
   140009390:	sub    rsp,0x30
   140009394:	mov    rax,QWORD PTR [rip+0xbc6d]        # 0x140015008
   14000939b:	xor    rax,rsp
   14000939e:	mov    QWORD PTR [rsp+0x28],rax
   1400093a3:	xor    ebx,ebx
   1400093a5:	xor    eax,eax
   1400093a7:	mov    DWORD PTR [rsp+0x20],ebx
   1400093ab:	mov    r13d,r8d
   1400093ae:	mov    WORD PTR [rsp+0x24],ax
   1400093b3:	mov    edi,edx
   1400093b5:	mov    r14,rcx
   1400093b8:	test   rcx,rcx
   1400093bb:	jne    0x1400093dc
   1400093bd:	call   QWORD PTR [rip+0x6d8d]        # 0x140010150
   1400093c3:	test   eax,eax
   1400093c5:	jne    0x1400093d0
   1400093c7:	lea    ecx,[rbx+0x57]
   1400093ca:	call   QWORD PTR [rip+0x6d88]        # 0x140010158
   1400093d0:	lea    rax,[rip+0x7825]        # 0x140010bfc
   1400093d7:	jmp    0x140009500
   1400093dc:	call   0x14000920c
   1400093e1:	cmp    eax,edi
   1400093e3:	mov    esi,edi
   1400093e5:	mov    r9d,0x1
   1400093eb:	mov    r12d,eax
   1400093ee:	cmova  esi,eax
   1400093f1:	xor    edx,edx
   1400093f3:	add    esi,0xa
   1400093f6:	xor    ecx,ecx
   1400093f8:	mov    r8d,esi
   1400093fb:	call   0x1400082e8
   140009400:	mov    rbp,rax
   140009403:	test   rax,rax
   140009406:	jne    0x140009417
   140009408:	call   QWORD PTR [rip+0x6d42]        # 0x140010150
   14000940e:	test   eax,eax
   140009410:	jne    0x1400093d0
   140009412:	lea    ecx,[rax+0x8]
   140009415:	jmp    0x1400093ca
   140009417:	cmp    r12d,edi
   14000941a:	jae    0x140009480
   14000941c:	mov    r9d,0x1
   140009422:	mov    r8d,esi
   140009425:	mov    ecx,r9d
   140009428:	xor    edx,edx
   14000942a:	call   0x1400082e8
   14000942f:	mov    r15,rax
   140009432:	test   rax,rax
   140009435:	je     0x140009408
   140009437:	mov    r8d,edi
   14000943a:	lea    rdx,[rip+0x74cb]        # 0x14001090c
   140009441:	sub    r8d,r12d
   140009444:	mov    r9d,esi
   140009447:	mov    rcx,rax
   14000944a:	call   0x14000952c
   14000944f:	mov    r8d,esi
   140009452:	mov    rcx,rbp
   140009455:	cmp    r13d,0x1
   140009459:	jne    0x140009468
   14000945b:	mov    rdx,r15
   14000945e:	call   0x140009774
   140009463:	mov    rdx,r14
   140009466:	jmp    0x140009473
   140009468:	mov    rdx,r14
   14000946b:	call   0x140009774
   140009470:	mov    rdx,r15
   140009473:	mov    r8d,esi
   140009476:	mov    rcx,rbp
   140009479:	call   0x140009818
   14000947e:	jmp    0x1400094ee
   140009480:	mov    r12d,ebx
   140009483:	test   edi,edi
   140009485:	je     0x1400094ee
   140009487:	mov    eax,r12d
   14000948a:	lea    rcx,[rsp+0x20]
   14000948f:	mov    r8d,0x2
   140009495:	lea    rdx,[r14+rax*2]
   140009499:	call   0x140009774
   14000949e:	lea    rcx,[rsp+0x20]
   1400094a3:	call   0x14000920c
   1400094a8:	lea    r15d,[rbx+rax*1]
   1400094ac:	cmp    r15d,edi
   1400094af:	ja     0x1400094cc
   1400094b1:	mov    r8d,esi
   1400094b4:	lea    rdx,[rsp+0x20]
   1400094b9:	mov    rcx,rbp
   1400094bc:	call   0x140009818
   1400094c1:	inc    r12d
   1400094c4:	mov    ebx,r15d
   1400094c7:	cmp    r15d,edi
   1400094ca:	jb     0x140009487
   1400094cc:	cmp    ebx,edi
   1400094ce:	jae    0x1400094ee
   1400094d0:	mov    eax,edi
   1400094d2:	sub    eax,ebx
   1400094d4:	mov    ebx,eax
   1400094d6:	mov    r8d,esi
   1400094d9:	lea    rdx,[rip+0x742c]        # 0x14001090c
   1400094e0:	mov    rcx,rbp
   1400094e3:	call   0x140009818
   1400094e8:	sub    rbx,0x1
   1400094ec:	jne    0x1400094d6
   1400094ee:	lea    r8d,[rdi+0x1]
   1400094f2:	mov    rdx,rbp
   1400094f5:	mov    rcx,r14
   1400094f8:	call   0x140009774
   1400094fd:	mov    rax,r14
   140009500:	mov    rcx,QWORD PTR [rsp+0x28]
   140009505:	xor    rcx,rsp
   140009508:	call   0x14000e560
   14000950d:	mov    rbx,QWORD PTR [rsp+0x80]
   140009515:	add    rsp,0x30
   140009519:	pop    r15
   14000951b:	pop    r14
   14000951d:	pop    r13
   14000951f:	pop    r12
   140009521:	pop    rdi
   140009522:	pop    rsi
   140009523:	pop    rbp
   140009524:	ret    
   140009525:	int3   
   140009526:	int3   
   140009527:	int3   
   140009528:	int3   
   140009529:	int3   
   14000952a:	int3   
   14000952b:	int3   
   14000952c:	mov    rax,rsp
   14000952f:	mov    QWORD PTR [rax+0x8],rbx
   140009533:	mov    QWORD PTR [rax+0x10],rbp
   140009537:	mov    QWORD PTR [rax+0x18],rsi
   14000953b:	mov    QWORD PTR [rax+0x20],rdi
   14000953f:	push   r14
   140009541:	sub    rsp,0x20
   140009545:	mov    r14d,r9d
   140009548:	mov    esi,r8d
   14000954b:	mov    rbp,rdx
   14000954e:	mov    rbx,rcx
   140009551:	test   rcx,rcx
   140009554:	je     0x14000958d
   140009556:	test   rdx,rdx
   140009559:	je     0x14000958d
   14000955b:	mov    r8d,r9d
   14000955e:	lea    rdx,[rip+0x7697]        # 0x140010bfc
   140009565:	call   0x140009774
   14000956a:	xor    edi,edi
   14000956c:	test   esi,esi
   14000956e:	je     0x140009588
   140009570:	mov    r8d,r14d
   140009573:	mov    rdx,rbp
   140009576:	mov    rcx,rbx
   140009579:	call   0x140009818
   14000957e:	test   eax,eax
   140009580:	je     0x140009588
   140009582:	inc    edi
   140009584:	cmp    edi,esi
   140009586:	jb     0x140009570
   140009588:	mov    rax,rbx
   14000958b:	jmp    0x1400095a7
   14000958d:	call   QWORD PTR [rip+0x6bbd]        # 0x140010150
   140009593:	test   eax,eax
   140009595:	jne    0x1400095a0
   140009597:	lea    ecx,[rax+0x57]
   14000959a:	call   QWORD PTR [rip+0x6bb8]        # 0x140010158
   1400095a0:	lea    rax,[rip+0x7655]        # 0x140010bfc
   1400095a7:	mov    rbx,QWORD PTR [rsp+0x30]
   1400095ac:	mov    rbp,QWORD PTR [rsp+0x38]
   1400095b1:	mov    rsi,QWORD PTR [rsp+0x40]
   1400095b6:	mov    rdi,QWORD PTR [rsp+0x48]
   1400095bb:	add    rsp,0x20
   1400095bf:	pop    r14
   1400095c1:	ret    
   1400095c2:	int3   
   1400095c3:	int3   
   1400095c4:	int3   
   1400095c5:	int3   
   1400095c6:	int3   
   1400095c7:	int3   
   1400095c8:	mov    QWORD PTR [rsp+0x8],rbx
   1400095cd:	mov    QWORD PTR [rsp+0x10],rsi
   1400095d2:	push   rdi
   1400095d3:	sub    rsp,0x20
   1400095d7:	xor    ebx,ebx
   1400095d9:	mov    rsi,rdx
   1400095dc:	mov    rdi,rcx
   1400095df:	cmp    rcx,0xffffffffffffffff
   1400095e3:	je     0x140009605
   1400095e5:	call   QWORD PTR [rip+0x6b45]        # 0x140010130
   1400095eb:	cmp    eax,0x2
   1400095ee:	jne    0x140009605
   1400095f0:	mov    rdx,rsi
   1400095f3:	mov    rcx,rdi
   1400095f6:	call   QWORD PTR [rip+0x6b2c]        # 0x140010128
   1400095fc:	test   eax,eax
   1400095fe:	je     0x140009605
   140009600:	mov    ebx,0x1
   140009605:	mov    rsi,QWORD PTR [rsp+0x38]
   14000960a:	mov    eax,ebx
   14000960c:	mov    rbx,QWORD PTR [rsp+0x30]
   140009611:	add    rsp,0x20
   140009615:	pop    rdi
   140009616:	ret    
   140009617:	int3   
   140009618:	int3   
   140009619:	int3   
   14000961a:	int3   
   14000961b:	int3   
   14000961c:	int3   
   14000961d:	int3   
   14000961e:	int3   
   14000961f:	int3   
   140009620:	mov    QWORD PTR [rsp+0x10],rbx
   140009625:	mov    QWORD PTR [rsp+0x18],rsi
   14000962a:	push   rdi
   14000962b:	sub    rsp,0x20
   14000962f:	xor    ebx,ebx
   140009631:	mov    DWORD PTR [rsp+0x30],ebx
   140009635:	test   rcx,rcx
   140009638:	jne    0x14000964d
   14000963a:	call   QWORD PTR [rip+0x6b10]        # 0x140010150
   140009640:	test   eax,eax
   140009642:	jne    0x1400096d1
   140009648:	lea    ecx,[rbx+0x57]
   14000964b:	jmp    0x1400096cb
   14000964d:	call   QWORD PTR [rip+0x6ecd]        # 0x140010520
   140009653:	mov    edi,eax
   140009655:	call   QWORD PTR [rip+0x6ea5]        # 0x140010500
   14000965b:	mov    ecx,edi
   14000965d:	mov    DWORD PTR [rax],ebx
   14000965f:	call   QWORD PTR [rip+0x6ec3]        # 0x140010528
   140009665:	mov    rsi,rax
   140009668:	cmp    rax,0xffffffffffffffff
   14000966c:	je     0x1400096c6
   14000966e:	call   QWORD PTR [rip+0x6e8c]        # 0x140010500
   140009674:	cmp    DWORD PTR [rax],0x9
   140009677:	je     0x1400096c6
   140009679:	mov    rcx,rsi
   14000967c:	call   QWORD PTR [rip+0x6aae]        # 0x140010130
   140009682:	cmp    eax,0x2
   140009685:	jne    0x1400096d1
   140009687:	test   edi,edi
   140009689:	je     0x1400096a3
   14000968b:	sub    edi,0x1
   14000968e:	je     0x14000969c
   140009690:	cmp    edi,0x1
   140009693:	jne    0x1400096c2
   140009695:	mov    ecx,0xfffffff4
   14000969a:	jmp    0x1400096a8
   14000969c:	mov    ecx,0xfffffff5
   1400096a1:	jmp    0x1400096a8
   1400096a3:	mov    ecx,0xfffffff6
   1400096a8:	call   QWORD PTR [rip+0x69e2]        # 0x140010090
   1400096ae:	test   rax,rax
   1400096b1:	je     0x1400096c2
   1400096b3:	lea    rdx,[rsp+0x30]
   1400096b8:	mov    rcx,rax
   1400096bb:	call   0x1400095c8
   1400096c0:	mov    ebx,eax
   1400096c2:	mov    eax,ebx
   1400096c4:	jmp    0x1400096d3
   1400096c6:	mov    ecx,0x6
   1400096cb:	call   QWORD PTR [rip+0x6a87]        # 0x140010158
   1400096d1:	xor    eax,eax
   1400096d3:	mov    rbx,QWORD PTR [rsp+0x38]
   1400096d8:	mov    rsi,QWORD PTR [rsp+0x40]
   1400096dd:	add    rsp,0x20
   1400096e1:	pop    rdi
   1400096e2:	ret    
   1400096e3:	int3   
   1400096e4:	int3   
   1400096e5:	int3   
   1400096e6:	int3   
   1400096e7:	int3   
   1400096e8:	int3   
   1400096e9:	int3   
   1400096ea:	int3   
   1400096eb:	int3   
   1400096ec:	sub    rsp,0x28
   1400096f0:	test   rcx,rcx
   1400096f3:	je     0x14000975f
   1400096f5:	test   rdx,rdx
   1400096f8:	je     0x14000975f
   1400096fa:	movsxd r9,r8d
   1400096fd:	mov    eax,0x80070057
   140009702:	xor    r8d,r8d
   140009705:	cmp    r9,0x7fffffff
   14000970c:	cmova  r8d,eax
   140009710:	test   r8d,r8d
   140009713:	js     0x14000974d
   140009715:	mov    r10d,0x7ffffffe
   14000971b:	xor    r8d,r8d
   14000971e:	sub    r10,r9
   140009721:	sub    rdx,rcx
   140009724:	lea    rax,[r10+r9*1]
   140009728:	test   rax,rax
   14000972b:	je     0x14000973f
   14000972d:	mov    al,BYTE PTR [rdx+rcx*1]
   140009730:	test   al,al
   140009732:	je     0x14000973f
   140009734:	mov    BYTE PTR [rcx],al
   140009736:	inc    rcx
   140009739:	sub    r9,0x1
   14000973d:	jne    0x140009724
   14000973f:	test   r9,r9
   140009742:	jne    0x14000974d
   140009744:	dec    rcx
   140009747:	mov    r8d,0x8007007a
   14000974d:	mov    BYTE PTR [rcx],0x0
   140009750:	test   r8d,r8d
   140009753:	jns    0x140009766
   140009755:	movzx  ecx,r8w
   140009759:	call   QWORD PTR [rip+0x69f9]        # 0x140010158
   14000975f:	xor    eax,eax
   140009761:	add    rsp,0x28
   140009765:	ret    
   140009766:	mov    eax,0x1
   14000976b:	jmp    0x140009761
   14000976d:	int3   
   14000976e:	int3   
   14000976f:	int3   
   140009770:	int3   
   140009771:	int3   
   140009772:	int3   
   140009773:	int3   
   140009774:	rex push rbx
   140009776:	sub    rsp,0x20
   14000977a:	xor    ebx,ebx
   14000977c:	mov    r9,rdx
   14000977f:	test   rcx,rcx
   140009782:	je     0x140009800
   140009784:	test   rdx,rdx
   140009787:	je     0x140009800
   140009789:	test   r8d,r8d
   14000978c:	jle    0x140009800
   14000978e:	movsxd r8,r8d
   140009791:	mov    r10d,0x7ffffffe
   140009797:	mov    edx,ebx
   140009799:	mov    r11d,0x80070057
   14000979f:	lea    rax,[r8-0x1]
   1400097a3:	cmp    rax,r10
   1400097a6:	cmova  edx,r11d
   1400097aa:	test   edx,edx
   1400097ac:	js     0x1400097eb
   1400097ae:	mov    edx,ebx
   1400097b0:	test   r8,r8
   1400097b3:	je     0x1400097e0
   1400097b5:	sub    r10,r8
   1400097b8:	sub    r9,rcx
   1400097bb:	lea    rax,[r10+r8*1]
   1400097bf:	test   rax,rax
   1400097c2:	je     0x1400097db
   1400097c4:	movzx  eax,WORD PTR [r9+rcx*1]
   1400097c9:	test   ax,ax
   1400097cc:	je     0x1400097db
   1400097ce:	mov    WORD PTR [rcx],ax
   1400097d1:	add    rcx,0x2
   1400097d5:	sub    r8,0x1
   1400097d9:	jne    0x1400097bb
   1400097db:	test   r8,r8
   1400097de:	jne    0x1400097f0
   1400097e0:	sub    rcx,0x2
   1400097e4:	mov    edx,0x8007007a
   1400097e9:	jmp    0x1400097f0
   1400097eb:	test   r8,r8
   1400097ee:	je     0x1400097f3
   1400097f0:	mov    WORD PTR [rcx],bx
   1400097f3:	test   edx,edx
   1400097f5:	jns    0x140009808
   1400097f7:	movzx  ecx,dx
   1400097fa:	call   QWORD PTR [rip+0x6958]        # 0x140010158
   140009800:	xor    eax,eax
   140009802:	add    rsp,0x20
   140009806:	pop    rbx
   140009807:	ret    
   140009808:	mov    eax,0x1
   14000980d:	jmp    0x140009802
   14000980f:	int3   
   140009810:	int3   
   140009811:	int3   
   140009812:	int3   
   140009813:	int3   
   140009814:	int3   
   140009815:	int3   
   140009816:	int3   
   140009817:	int3   
   140009818:	mov    QWORD PTR [rsp+0x8],rbx
   14000981d:	push   rdi
   14000981e:	sub    rsp,0x20
   140009822:	xor    edi,edi
   140009824:	mov    r11,rdx
   140009827:	mov    rbx,rcx
   14000982a:	test   rcx,rcx
   14000982d:	je     0x1400098f7
   140009833:	test   rdx,rdx
   140009836:	je     0x1400098f7
   14000983c:	test   r8d,r8d
   14000983f:	jle    0x1400098f7
   140009845:	movsxd r10,r8d
   140009848:	mov    edx,edi
   14000984a:	mov    r8d,0x80070057
   140009850:	lea    rax,[r10-0x1]
   140009854:	cmp    rax,0x7ffffffe
   14000985a:	cmova  edx,r8d
   14000985e:	test   edx,edx
   140009860:	js     0x14000988b
   140009862:	mov    rax,r10
   140009865:	mov    edx,edi
   140009867:	test   r10,r10
   14000986a:	je     0x140009888
   14000986c:	cmp    WORD PTR [rcx],di
   14000986f:	je     0x14000987b
   140009871:	add    rcx,0x2
   140009875:	sub    rax,0x1
   140009879:	jne    0x14000986c
   14000987b:	test   rax,rax
   14000987e:	je     0x140009888
   140009880:	mov    r9,r10
   140009883:	sub    r9,rax
   140009886:	jmp    0x14000988e
   140009888:	mov    edx,r8d
   14000988b:	mov    r9,rdi
   14000988e:	test   edx,edx
   140009890:	js     0x1400098ee
   140009892:	mov    r8,r10
   140009895:	lea    rcx,[rbx+r9*2]
   140009899:	mov    edx,edi
   14000989b:	sub    r8,r9
   14000989e:	je     0x1400098d7
   1400098a0:	mov    rax,r8
   1400098a3:	sub    rax,r10
   1400098a6:	lea    r10,[r9+0x7ffffffe]
   1400098ad:	add    r10,rax
   1400098b0:	sub    r11,rcx
   1400098b3:	test   r10,r10
   1400098b6:	je     0x1400098d2
   1400098b8:	movzx  eax,WORD PTR [r11+rcx*1]
   1400098bd:	test   ax,ax
   1400098c0:	je     0x1400098d2
   1400098c2:	mov    WORD PTR [rcx],ax
   1400098c5:	dec    r10
   1400098c8:	add    rcx,0x2
   1400098cc:	sub    r8,0x1
   1400098d0:	jne    0x1400098b3
   1400098d2:	test   r8,r8
   1400098d5:	jne    0x1400098e0
   1400098d7:	sub    rcx,0x2
   1400098db:	mov    edx,0x8007007a
   1400098e0:	mov    WORD PTR [rcx],di
   1400098e3:	test   edx,edx
   1400098e5:	js     0x1400098ee
   1400098e7:	mov    eax,0x1
   1400098ec:	jmp    0x1400098f9
   1400098ee:	movzx  ecx,dx
   1400098f1:	call   QWORD PTR [rip+0x6861]        # 0x140010158
   1400098f7:	xor    eax,eax
   1400098f9:	mov    rbx,QWORD PTR [rsp+0x30]
   1400098fe:	add    rsp,0x20
   140009902:	pop    rdi
   140009903:	ret    
   140009904:	int3   
   140009905:	int3   
   140009906:	int3   
   140009907:	int3   
   140009908:	int3   
   140009909:	int3   
   14000990a:	int3   
   14000990b:	int3   
   14000990c:	mov    QWORD PTR [rsp+0x8],rbx
   140009911:	mov    QWORD PTR [rsp+0x10],rbp
   140009916:	mov    QWORD PTR [rsp+0x18],rsi
   14000991b:	push   rdi
   14000991c:	sub    rsp,0x30
   140009920:	xor    ebx,ebx
   140009922:	mov    edi,r9d
   140009925:	mov    rsi,rdx
   140009928:	mov    rbp,rcx
   14000992b:	test   rcx,rcx
   14000992e:	je     0x140009969
   140009930:	test   rdx,rdx
   140009933:	je     0x140009969
   140009935:	or     eax,0xffffffff
   140009938:	test   r9d,r9d
   14000993b:	cmove  edi,eax
   14000993e:	cmp    r8d,0x1
   140009942:	sete   bl
   140009945:	call   QWORD PTR [rip+0x67c5]        # 0x140010110
   14000994b:	mov    DWORD PTR [rsp+0x28],edi
   14000994f:	mov    r9d,edi
   140009952:	mov    ecx,eax
   140009954:	mov    QWORD PTR [rsp+0x20],rsi
   140009959:	mov    r8,rbp
   14000995c:	mov    edx,ebx
   14000995e:	call   QWORD PTR [rip+0x67b4]        # 0x140010118
   140009964:	sub    eax,0x2
   140009967:	jmp    0x14000997e
   140009969:	call   QWORD PTR [rip+0x67e1]        # 0x140010150
   14000996f:	test   eax,eax
   140009971:	jne    0x14000997c
   140009973:	lea    ecx,[rax+0x57]
   140009976:	call   QWORD PTR [rip+0x67dc]        # 0x140010158
   14000997c:	xor    eax,eax
   14000997e:	mov    rbx,QWORD PTR [rsp+0x40]
   140009983:	mov    rbp,QWORD PTR [rsp+0x48]
   140009988:	mov    rsi,QWORD PTR [rsp+0x50]
   14000998d:	add    rsp,0x30
   140009991:	pop    rdi
   140009992:	ret    
   140009993:	int3   
   140009994:	int3   
   140009995:	int3   
   140009996:	int3   
   140009997:	int3   
   140009998:	int3   
   140009999:	int3   
   14000999a:	int3   
   14000999b:	int3   
   14000999c:	mov    rax,rsp
   14000999f:	mov    QWORD PTR [rax+0x10],rbx
   1400099a3:	mov    QWORD PTR [rax+0x18],rbp
   1400099a7:	mov    QWORD PTR [rax+0x20],rsi
   1400099ab:	push   rdi
   1400099ac:	push   r12
   1400099ae:	push   r13
   1400099b0:	push   r14
   1400099b2:	push   r15
   1400099b4:	sub    rsp,0x40
   1400099b8:	xor    r12d,r12d
   1400099bb:	mov    rsi,rdx
   1400099be:	mov    DWORD PTR [rax+0x8],r12d
   1400099c2:	mov    rdi,rcx
   1400099c5:	test   rcx,rcx
   1400099c8:	je     0x140009ca4
   1400099ce:	test   rdx,rdx
   1400099d1:	je     0x140009ca4
   1400099d7:	call   0x140009620
   1400099dc:	lea    r13d,[r12+0x1]
   1400099e1:	cmp    eax,r13d
   1400099e4:	jne    0x140009b0f
   1400099ea:	mov    ecx,r13d
   1400099ed:	call   0x14000ebd8
   1400099f2:	lea    r15d,[r12+0x2]
   1400099f7:	cmp    rdi,rax
   1400099fa:	jne    0x140009a03
   1400099fc:	mov    ecx,0xfffffff5
   140009a01:	jmp    0x140009a19
   140009a03:	mov    ecx,r15d
   140009a06:	call   0x14000ebd8
   140009a0b:	cmp    rdi,rax
   140009a0e:	jne    0x140009af7
   140009a14:	mov    ecx,0xfffffff4
   140009a19:	call   QWORD PTR [rip+0x6671]        # 0x140010090
   140009a1f:	mov    rcx,rsi
   140009a22:	mov    DWORD PTR [rsp+0x70],r12d
   140009a27:	mov    r14,rax
   140009a2a:	call   QWORD PTR [rip+0x6718]        # 0x140010148
   140009a30:	lea    r9,[rsp+0x70]
   140009a35:	mov    QWORD PTR [rsp+0x20],r12
   140009a3a:	mov    r8d,eax
   140009a3d:	mov    rdx,rsi
   140009a40:	mov    rcx,r14
   140009a43:	mov    ebx,eax
   140009a45:	call   QWORD PTR [rip+0x663d]        # 0x140010088
   140009a4b:	test   eax,eax
   140009a4d:	je     0x140009a55
   140009a4f:	cmp    ebx,DWORD PTR [rsp+0x70]
   140009a53:	je     0x140009ab1
   140009a55:	call   QWORD PTR [rip+0x66f5]        # 0x140010150
   140009a5b:	cmp    eax,0x8
   140009a5e:	jne    0x140009ad8
   140009a60:	mov    rcx,rsi
   140009a63:	call   QWORD PTR [rip+0x66df]        # 0x140010148
   140009a69:	mov    ebp,eax
   140009a6b:	mov    ebx,r12d
   140009a6e:	test   eax,eax
   140009a70:	je     0x140009ab1
   140009a72:	mov    eax,0x400
   140009a77:	mov    edi,ebp
   140009a79:	mov    QWORD PTR [rsp+0x20],r12
   140009a7e:	sub    edi,ebx
   140009a80:	lea    r9,[rsp+0x70]
   140009a85:	cmp    edi,eax
   140009a87:	mov    rcx,r14
   140009a8a:	cmova  edi,eax
   140009a8d:	mov    eax,ebx
   140009a8f:	mov    r8d,edi
   140009a92:	lea    rdx,[rsi+rax*2]
   140009a96:	call   QWORD PTR [rip+0x65ec]        # 0x140010088
   140009a9c:	test   eax,eax
   140009a9e:	je     0x140009ab9
   140009aa0:	cmp    edi,DWORD PTR [rsp+0x70]
   140009aa4:	jne    0x140009ab9
   140009aa6:	mov    eax,0x400
   140009aab:	add    ebx,eax
   140009aad:	cmp    ebx,ebp
   140009aaf:	jb     0x140009a77
   140009ab1:	mov    eax,r13d
   140009ab4:	jmp    0x140009cb9
   140009ab9:	mov    ecx,r15d
   140009abc:	call   0x14000ebd8
   140009ac1:	mov    rcx,rax
   140009ac4:	call   0x14000884c
   140009ac9:	call   0x140008948
   140009ace:	mov    ecx,r13d
   140009ad1:	call   QWORD PTR [rip+0x6629]        # 0x140010100
   140009ad7:	int3   
   140009ad8:	mov    ecx,r15d
   140009adb:	call   0x14000ebd8
   140009ae0:	mov    rcx,rax
   140009ae3:	call   0x14000884c
   140009ae8:	call   0x140008948
   140009aed:	mov    ecx,r13d
   140009af0:	call   QWORD PTR [rip+0x660a]        # 0x140010100
   140009af6:	int3   
   140009af7:	call   QWORD PTR [rip+0x6653]        # 0x140010150
   140009afd:	test   eax,eax
   140009aff:	jne    0x140009cb7
   140009b05:	mov    ecx,0x42b
   140009b0a:	jmp    0x140009cb1
   140009b0f:	mov    rcx,rsi
   140009b12:	call   QWORD PTR [rip+0x6630]        # 0x140010148
   140009b18:	xor    edx,edx
   140009b1a:	lea    rcx,[rip+0xbb0f]        # 0x140015630
   140009b21:	mov    r8d,0x100
   140009b27:	mov    r14d,eax
   140009b2a:	call   0x14000ed52
   140009b2f:	mov    ebp,r12d
   140009b32:	test   r14d,r14d
   140009b35:	je     0x140009ab1
   140009b3b:	mov    eax,0xff
   140009b40:	mov    DWORD PTR [rsp+0x70],r12d
   140009b45:	mov    ebx,r14d
   140009b48:	sub    ebx,ebp
   140009b4a:	cmp    ebx,eax
   140009b4c:	cmova  ebx,eax
   140009b4f:	mov    eax,ebp
   140009b51:	lea    r15,[rsi+rax*2]
   140009b55:	call   QWORD PTR [rip+0x6605]        # 0x140010160
   140009b5b:	mov    QWORD PTR [rsp+0x38],r12
   140009b60:	mov    r9d,ebx
   140009b63:	mov    QWORD PTR [rsp+0x30],r12
   140009b68:	mov    ecx,eax
   140009b6a:	mov    DWORD PTR [rsp+0x28],r12d
   140009b6f:	mov    r8,r15
   140009b72:	xor    edx,edx
   140009b74:	mov    QWORD PTR [rsp+0x20],r12
   140009b79:	call   QWORD PTR [rip+0x65b9]        # 0x140010138
   140009b7f:	mov    DWORD PTR [rsp+0x70],eax
   140009b83:	test   eax,eax
   140009b85:	je     0x140009c85
   140009b8b:	cmp    eax,0xff
   140009b90:	jbe    0x140009be1
   140009b92:	add    eax,0xffffff01
   140009b97:	cmp    eax,0x3
   140009b9a:	jbe    0x140009ba2
   140009b9c:	shr    eax,1
   140009b9e:	sub    ebx,eax
   140009ba0:	jmp    0x140009ba4
   140009ba2:	dec    ebx
   140009ba4:	mov    DWORD PTR [rsp+0x70],r12d
   140009ba9:	test   ebx,ebx
   140009bab:	jne    0x140009b55
   140009bad:	call   QWORD PTR [rip+0x659d]        # 0x140010150
   140009bb3:	test   eax,eax
   140009bb5:	jne    0x140009bc2
   140009bb7:	mov    ecx,0x42b
   140009bbc:	call   QWORD PTR [rip+0x6596]        # 0x140010158
   140009bc2:	mov    ecx,r13d
   140009bc5:	call   0x14000ebd8
   140009bca:	mov    rcx,rax
   140009bcd:	call   0x14000884c
   140009bd2:	call   0x140008948
   140009bd7:	mov    ecx,r13d
   140009bda:	call   QWORD PTR [rip+0x6520]        # 0x140010100
   140009be0:	int3   
   140009be1:	cmp    eax,ebx
   140009be3:	lea    rcx,[rip+0xba46]        # 0x140015630
   140009bea:	mov    r8d,0x100
   140009bf0:	cmovb  ebx,eax
   140009bf3:	xor    edx,edx
   140009bf5:	call   0x14000ed52
   140009bfa:	call   QWORD PTR [rip+0x6560]        # 0x140010160
   140009c00:	mov    QWORD PTR [rsp+0x38],r12
   140009c05:	mov    r9d,ebx
   140009c08:	mov    ecx,eax
   140009c0a:	mov    QWORD PTR [rsp+0x30],r12
   140009c0f:	lea    rax,[rip+0xba1a]        # 0x140015630
   140009c16:	mov    DWORD PTR [rsp+0x28],0xff
   140009c1e:	mov    r8,r15
   140009c21:	mov    QWORD PTR [rsp+0x20],rax
   140009c26:	xor    edx,edx
   140009c28:	call   QWORD PTR [rip+0x650a]        # 0x140010138
   140009c2e:	mov    DWORD PTR [rsp+0x70],eax
   140009c32:	test   eax,eax
   140009c34:	je     0x140009c66
   140009c36:	lea    r8,[rip+0xb9f3]        # 0x140015630
   140009c3d:	mov    rcx,rdi
   140009c40:	lea    rdx,[rip+0x6f95]        # 0x140010bdc
   140009c47:	add    ebp,ebx
   140009c49:	call   QWORD PTR [rip+0x68e1]        # 0x140010530
   140009c4f:	mov    rcx,rdi
   140009c52:	call   QWORD PTR [rip+0x68e0]        # 0x140010538
   140009c58:	cmp    r14d,ebp
   140009c5b:	jbe    0x140009ab1
   140009c61:	jmp    0x140009b3b
   140009c66:	mov    ecx,r13d
   140009c69:	call   0x14000ebd8
   140009c6e:	mov    rcx,rax
   140009c71:	call   0x14000884c
   140009c76:	call   0x140008948
   140009c7b:	mov    ecx,r13d
   140009c7e:	call   QWORD PTR [rip+0x647c]        # 0x140010100
   140009c84:	int3   
   140009c85:	mov    ecx,r13d
   140009c88:	call   0x14000ebd8
   140009c8d:	mov    rcx,rax
   140009c90:	call   0x14000884c
   140009c95:	call   0x140008948
   140009c9a:	mov    ecx,r13d
   140009c9d:	call   QWORD PTR [rip+0x645d]        # 0x140010100
   140009ca3:	int3   
   140009ca4:	call   QWORD PTR [rip+0x64a6]        # 0x140010150
   140009caa:	test   eax,eax
   140009cac:	jne    0x140009cb7
   140009cae:	lea    ecx,[rax+0x57]
   140009cb1:	call   QWORD PTR [rip+0x64a1]        # 0x140010158
   140009cb7:	xor    eax,eax
   140009cb9:	lea    r11,[rsp+0x40]
   140009cbe:	mov    rbx,QWORD PTR [r11+0x38]
   140009cc2:	mov    rbp,QWORD PTR [r11+0x40]
   140009cc6:	mov    rsi,QWORD PTR [r11+0x48]
   140009cca:	mov    rsp,r11
   140009ccd:	pop    r15
   140009ccf:	pop    r14
   140009cd1:	pop    r13
   140009cd3:	pop    r12
   140009cd5:	pop    rdi
   140009cd6:	ret    
   140009cd7:	int3   
   140009cd8:	int3   
   140009cd9:	int3   
   140009cda:	int3   
   140009cdb:	int3   
   140009cdc:	int3   
   140009cdd:	int3   
   140009cde:	int3   
   140009cdf:	int3   
   140009ce0:	mov    QWORD PTR [rsp+0x20],r9
   140009ce5:	push   rbx
   140009ce6:	push   rbp
   140009ce7:	push   rsi
   140009ce8:	push   rdi
   140009ce9:	push   r14
   140009ceb:	push   r15
   140009ced:	sub    rsp,0x58
   140009cf1:	xor    r15d,r15d
   140009cf4:	mov    r14,rcx
   140009cf7:	test   r9,r9
   140009cfa:	je     0x140009ebf
   140009d00:	test   rcx,rcx
   140009d03:	je     0x140009ebf
   140009d09:	test   edx,edx
   140009d0b:	jne    0x140009d1a
   140009d0d:	mov    rdx,r9
   140009d10:	call   0x14000999c
   140009d15:	jmp    0x140009ed4
   140009d1a:	test   r8d,r8d
   140009d1d:	jne    0x140009e0a
   140009d23:	or     ebx,0xffffffff
   140009d26:	mov    esi,r15d
   140009d29:	lea    rax,[rsp+0xb0]
   140009d31:	mov    QWORD PTR [rsp+0x40],rax
   140009d36:	test   rax,rax
   140009d39:	je     0x140009df2
   140009d3f:	mov    ecx,0x1000
   140009d44:	mov    eax,0x800
   140009d49:	cmp    ebx,0xffffffff
   140009d4c:	mov    r9d,0x1
   140009d52:	cmove  eax,ecx
   140009d55:	xor    edx,edx
   140009d57:	add    esi,eax
   140009d59:	mov    r8d,esi
   140009d5c:	lea    ecx,[rdx+0x3]
   140009d5f:	call   0x1400082e8
   140009d64:	mov    rdi,rax
   140009d67:	test   rax,rax
   140009d6a:	je     0x140009ddc
   140009d6c:	mov    rdx,QWORD PTR [rsp+0xa8]
   140009d74:	lea    ecx,[rsi-0x1]
   140009d77:	lea    rax,[rsp+0x40]
   140009d7c:	xor    r9d,r9d
   140009d7f:	mov    QWORD PTR [rsp+0x30],rax
   140009d84:	xor    r8d,r8d
   140009d87:	mov    DWORD PTR [rsp+0x28],ecx
   140009d8b:	mov    ecx,0x400
   140009d90:	mov    QWORD PTR [rsp+0x20],rdi
   140009d95:	call   QWORD PTR [rip+0x62dd]        # 0x140010078
   140009d9b:	mov    ebx,eax
   140009d9d:	test   eax,eax
   140009d9f:	jne    0x140009dba
   140009da1:	call   QWORD PTR [rip+0x63a9]        # 0x140010150
   140009da7:	test   eax,eax
   140009da9:	je     0x140009dd2
   140009dab:	call   QWORD PTR [rip+0x639f]        # 0x140010150
   140009db1:	cmp    eax,0x7a
   140009db4:	jne    0x140009ed2
   140009dba:	mov    QWORD PTR [rsp+0x40],r15
   140009dbf:	test   ebx,ebx
   140009dc1:	je     0x140009d29
   140009dc7:	mov    rdx,rdi
   140009dca:	mov    rcx,r14
   140009dcd:	jmp    0x140009d10
   140009dd2:	mov    eax,0x1
   140009dd7:	jmp    0x140009ed4
   140009ddc:	call   QWORD PTR [rip+0x636e]        # 0x140010150
   140009de2:	test   eax,eax
   140009de4:	jne    0x140009ed2
   140009dea:	lea    ecx,[rax+0x8]
   140009ded:	jmp    0x140009ecc
   140009df2:	call   QWORD PTR [rip+0x6358]        # 0x140010150
   140009df8:	test   eax,eax
   140009dfa:	jne    0x140009ed2
   140009e00:	mov    ecx,0x42b
   140009e05:	jmp    0x140009ecc
   140009e0a:	mov    ebp,r15d
   140009e0d:	lea    rax,[rsp+0xb0]
   140009e15:	mov    QWORD PTR [rsp+0x40],rax
   140009e1a:	test   rax,rax
   140009e1d:	je     0x140009df2
   140009e1f:	xor    edx,edx
   140009e21:	add    ebp,0x800
   140009e27:	mov    r9d,0x1
   140009e2d:	mov    r8d,ebp
   140009e30:	lea    ecx,[rdx+0x3]
   140009e33:	call   0x1400082e8
   140009e38:	mov    rdi,rax
   140009e3b:	test   rax,rax
   140009e3e:	je     0x140009ddc
   140009e40:	lea    rax,[rbp-0x1]
   140009e44:	mov    ebx,r15d
   140009e47:	cmp    rax,0x7ffffffe
   140009e4d:	mov    edx,0x80070057
   140009e52:	cmova  ebx,edx
   140009e55:	test   ebx,ebx
   140009e57:	js     0x140009e99
   140009e59:	mov    r9,QWORD PTR [rsp+0x40]
   140009e5e:	lea    rsi,[rbp-0x1]
   140009e62:	mov    r8,QWORD PTR [rsp+0xa8]
   140009e6a:	mov    rdx,rsi
   140009e6d:	mov    rcx,rdi
   140009e70:	mov    ebx,r15d
   140009e73:	call   QWORD PTR [rip+0x661f]        # 0x140010498
   140009e79:	test   eax,eax
   140009e7b:	js     0x140009e8d
   140009e7d:	cdqe   
   140009e7f:	cmp    rax,rsi
   140009e82:	ja     0x140009e8d
   140009e84:	jne    0x140009ea1
   140009e86:	mov    WORD PTR [rdi+rsi*2],r15w
   140009e8b:	jmp    0x140009ea1
   140009e8d:	mov    WORD PTR [rdi+rsi*2],r15w
   140009e92:	mov    ebx,0x8007007a
   140009e97:	jmp    0x140009ea1
   140009e99:	test   ebp,ebp
   140009e9b:	je     0x140009ea1
   140009e9d:	mov    WORD PTR [rdi],r15w
   140009ea1:	mov    QWORD PTR [rsp+0x40],r15
   140009ea6:	cmp    ebx,0x8007007a
   140009eac:	je     0x140009e0d
   140009eb2:	test   ebx,ebx
   140009eb4:	jns    0x140009dc7
   140009eba:	movzx  ecx,bx
   140009ebd:	jmp    0x140009ecc
   140009ebf:	call   QWORD PTR [rip+0x628b]        # 0x140010150
   140009ec5:	test   eax,eax
   140009ec7:	jne    0x140009ed2
   140009ec9:	lea    ecx,[rax+0x57]
   140009ecc:	call   QWORD PTR [rip+0x6286]        # 0x140010158
   140009ed2:	xor    eax,eax
   140009ed4:	add    rsp,0x58
   140009ed8:	pop    r15
   140009eda:	pop    r14
   140009edc:	pop    rdi
   140009edd:	pop    rsi
   140009ede:	pop    rbp
   140009edf:	pop    rbx
   140009ee0:	ret    
   140009ee1:	int3   
   140009ee2:	int3   
   140009ee3:	int3   
   140009ee4:	int3   
   140009ee5:	int3   
   140009ee6:	int3   
   140009ee7:	int3   
   140009ee8:	mov    QWORD PTR [rsp+0x8],rbx
   140009eed:	mov    QWORD PTR [rsp+0x10],rbp
   140009ef2:	mov    QWORD PTR [rsp+0x18],rsi
   140009ef7:	push   rdi
   140009ef8:	sub    rsp,0x30
   140009efc:	xor    ebx,ebx
   140009efe:	mov    rsi,r8
   140009f01:	mov    rdi,rdx
   140009f04:	mov    rbp,rcx
   140009f07:	test   rcx,rcx
   140009f0a:	je     0x140009fd3
   140009f10:	test   r8,r8
   140009f13:	je     0x140009fd3
   140009f19:	test   rdx,rdx
   140009f1c:	jne    0x140009f27
   140009f1e:	cmp    DWORD PTR [r8],ebx
   140009f21:	jne    0x140009fd3
   140009f27:	mov    eax,DWORD PTR [r8]
   140009f2a:	test   eax,eax
   140009f2c:	je     0x140009f3a
   140009f2e:	cmp    eax,0x1
   140009f31:	jbe    0x140009fb8
   140009f37:	lea    ebx,[rax-0x1]
   140009f3a:	test   rdx,rdx
   140009f3d:	je     0x140009f54
   140009f3f:	test   ebx,ebx
   140009f41:	je     0x140009f54
   140009f43:	lea    r8d,[rbx+0x1]
   140009f47:	xor    edx,edx
   140009f49:	add    r8,r8
   140009f4c:	mov    rcx,rdi
   140009f4f:	call   0x14000ed52
   140009f54:	or     eax,0xffffffff
   140009f57:	test   ebx,ebx
   140009f59:	je     0x140009f69
   140009f5b:	mov    rcx,rbp
   140009f5e:	call   QWORD PTR [rip+0x61bc]        # 0x140010120
   140009f64:	cmp    eax,ebx
   140009f66:	cmovg  eax,ebx
   140009f69:	xor    edx,edx
   140009f6b:	mov    DWORD PTR [rsp+0x28],ebx
   140009f6f:	mov    r9d,eax
   140009f72:	mov    QWORD PTR [rsp+0x20],rdi
   140009f77:	mov    r8,rbp
   140009f7a:	lea    ecx,[rdx+0x1]
   140009f7d:	call   QWORD PTR [rip+0x6175]        # 0x1400100f8
   140009f83:	test   eax,eax
   140009f85:	jne    0x140009fcf
   140009f87:	call   QWORD PTR [rip+0x61c3]        # 0x140010150
   140009f8d:	test   eax,eax
   140009f8f:	jne    0x140009f9c
   140009f91:	mov    ecx,0x42b
   140009f96:	call   QWORD PTR [rip+0x61bc]        # 0x140010158
   140009f9c:	test   rdi,rdi
   140009f9f:	je     0x140009fe6
   140009fa1:	test   ebx,ebx
   140009fa3:	je     0x140009fe6
   140009fa5:	lea    r8d,[rbx+0x1]
   140009fa9:	xor    edx,edx
   140009fab:	add    r8,r8
   140009fae:	mov    rcx,rdi
   140009fb1:	call   0x14000ed52
   140009fb6:	jmp    0x140009fe6
   140009fb8:	mov    r8,rax
   140009fbb:	xor    edx,edx
   140009fbd:	add    r8,r8
   140009fc0:	mov    rcx,rdi
   140009fc3:	call   0x14000ed52
   140009fc8:	mov    eax,0x1
   140009fcd:	jmp    0x140009fe8
   140009fcf:	mov    DWORD PTR [rsi],eax
   140009fd1:	jmp    0x140009fc8
   140009fd3:	call   QWORD PTR [rip+0x6177]        # 0x140010150
   140009fd9:	test   eax,eax
   140009fdb:	jne    0x140009fe6
   140009fdd:	lea    ecx,[rax+0x57]
   140009fe0:	call   QWORD PTR [rip+0x6172]        # 0x140010158
   140009fe6:	xor    eax,eax
   140009fe8:	mov    rbx,QWORD PTR [rsp+0x40]
   140009fed:	mov    rbp,QWORD PTR [rsp+0x48]
   140009ff2:	mov    rsi,QWORD PTR [rsp+0x50]
   140009ff7:	add    rsp,0x30
   140009ffb:	pop    rdi
   140009ffc:	ret    
   140009ffd:	int3   
   140009ffe:	int3   
   140009fff:	int3   
   14000a000:	int3   
   14000a001:	int3   
   14000a002:	int3   
   14000a003:	int3   
   14000a004:	mov    QWORD PTR [rsp+0x10],rbx
   14000a009:	mov    QWORD PTR [rsp+0x18],rsi
   14000a00e:	mov    QWORD PTR [rsp+0x20],rdi
   14000a013:	push   rbp
   14000a014:	push   r12
   14000a016:	push   r13
   14000a018:	push   r14
   14000a01a:	push   r15
   14000a01c:	mov    rbp,rsp
   14000a01f:	sub    rsp,0x80
   14000a026:	mov    rax,QWORD PTR [rip+0xafdb]        # 0x140015008
   14000a02d:	xor    rax,rsp
   14000a030:	mov    QWORD PTR [rbp-0x10],rax
   14000a034:	xor    r15d,r15d
   14000a037:	xor    eax,eax
   14000a039:	mov    DWORD PTR [rbp-0x48],r15d
   14000a03d:	mov    r14,rcx
   14000a040:	mov    DWORD PTR [rbp-0x4c],r15d
   14000a044:	mov    edi,r15d
   14000a047:	mov    DWORD PTR [rbp-0x40],r15d
   14000a04b:	mov    WORD PTR [rbp-0x20],r15w
   14000a050:	mov    QWORD PTR [rbp-0x1e],rax
   14000a054:	mov    DWORD PTR [rbp-0x38],r15d
   14000a058:	mov    QWORD PTR [rbp-0x34],rax
   14000a05c:	mov    QWORD PTR [rbp-0x2c],rax
   14000a060:	test   rcx,rcx
   14000a063:	jne    0x14000a081
   14000a065:	call   QWORD PTR [rip+0x60e5]        # 0x140010150
   14000a06b:	test   eax,eax
   14000a06d:	jne    0x14000a2e4
   14000a073:	lea    ecx,[rax+0x57]
   14000a076:	call   QWORD PTR [rip+0x60dc]        # 0x140010158
   14000a07c:	jmp    0x14000a2e4
   14000a081:	mov    ecx,0xfffffff6
   14000a086:	call   QWORD PTR [rip+0x6004]        # 0x140010090
   14000a08c:	mov    rbx,rax
   14000a08f:	test   rax,rax
   14000a092:	je     0x14000a2e4
   14000a098:	lea    rdx,[rbp-0x40]
   14000a09c:	mov    rcx,rax
   14000a09f:	call   0x1400095c8
   14000a0a4:	test   eax,eax
   14000a0a6:	mov    esi,r15d
   14000a0a9:	mov    r12d,0x1
   14000a0af:	sete   sil
   14000a0b3:	test   esi,esi
   14000a0b5:	jne    0x14000a0cb
   14000a0b7:	mov    edx,r12d
   14000a0ba:	mov    rcx,rbx
   14000a0bd:	call   QWORD PTR [rip+0x602d]        # 0x1400100f0
   14000a0c3:	test   eax,eax
   14000a0c5:	je     0x14000a2e4
   14000a0cb:	xor    eax,eax
   14000a0cd:	movsxd rsi,esi
   14000a0d0:	mov    QWORD PTR [rbp-0x20],rax
   14000a0d4:	mov    WORD PTR [rbp-0x18],ax
   14000a0d8:	mov    QWORD PTR [rbp-0x38],rax
   14000a0dc:	lea    r13d,[rax+0xa]
   14000a0e0:	mov    QWORD PTR [rbp-0x30],rax
   14000a0e4:	mov    DWORD PTR [rbp-0x28],eax
   14000a0e7:	mov    QWORD PTR [rsp+0x20],r15
   14000a0ec:	lea    r9,[rbp-0x48]
   14000a0f0:	mov    r8d,r12d
   14000a0f3:	mov    rcx,rbx
   14000a0f6:	cmp    rsi,r12
   14000a0f9:	jne    0x14000a13c
   14000a0fb:	lea    rdx,[rbp-0x50]
   14000a0ff:	call   QWORD PTR [rip+0x5fe3]        # 0x1400100e8
   14000a105:	test   eax,eax
   14000a107:	je     0x14000a2e4
   14000a10d:	cmp    DWORD PTR [rbp-0x48],r15d
   14000a111:	je     0x14000a286
   14000a117:	mov    al,BYTE PTR [rbp-0x50]
   14000a11a:	lea    r8,[rbp-0x48]
   14000a11e:	lea    rdx,[rbp-0x38]
   14000a122:	mov    BYTE PTR [rbp-0x20],al
   14000a125:	lea    rcx,[rbp-0x20]
   14000a129:	mov    DWORD PTR [rbp-0x48],r13d
   14000a12d:	call   0x140009ee8
   14000a132:	movzx  ecx,WORD PTR [rbp-0x38]
   14000a136:	mov    WORD PTR [rbp-0x44],cx
   14000a13a:	jmp    0x14000a152
   14000a13c:	lea    rdx,[rbp-0x44]
   14000a140:	call   QWORD PTR [rip+0x5f9a]        # 0x1400100e0
   14000a146:	test   eax,eax
   14000a148:	je     0x14000a2d8
   14000a14e:	movzx  ecx,WORD PTR [rbp-0x44]
   14000a152:	cmp    cx,0xd
   14000a156:	je     0x14000a286
   14000a15c:	mov    eax,0x8
   14000a161:	cmp    cx,ax
   14000a164:	jne    0x14000a22a
   14000a16a:	test   edi,edi
   14000a16c:	je     0x14000a0e7
   14000a172:	mov    r9d,eax
   14000a175:	lea    r8,[rip+0x6a64]        # 0x140010be0
   14000a17c:	mov    rdx,r13
   14000a17f:	lea    rcx,[rbp-0x38]
   14000a183:	call   0x140006ca4
   14000a188:	mov    ecx,0xfffffff5
   14000a18d:	call   QWORD PTR [rip+0x5efd]        # 0x140010090
   14000a193:	lea    r9,[rbp-0x4c]
   14000a197:	mov    QWORD PTR [rsp+0x20],r15
   14000a19c:	mov    rcx,rax
   14000a19f:	lea    rdx,[rbp-0x38]
   14000a1a3:	mov    r8d,r12d
   14000a1a6:	call   QWORD PTR [rip+0x5edc]        # 0x140010088
   14000a1ac:	xor    r9d,r9d
   14000a1af:	lea    r8,[rip+0x6a2a]        # 0x140010be0
   14000a1b6:	mov    rdx,r13
   14000a1b9:	lea    rcx,[rbp-0x38]
   14000a1bd:	call   0x140006ca4
   14000a1c2:	mov    ecx,0xfffffff5
   14000a1c7:	call   QWORD PTR [rip+0x5ec3]        # 0x140010090
   14000a1cd:	lea    r9,[rbp-0x4c]
   14000a1d1:	mov    QWORD PTR [rsp+0x20],r15
   14000a1d6:	mov    rcx,rax
   14000a1d9:	lea    rdx,[rbp-0x38]
   14000a1dd:	mov    r8d,r12d
   14000a1e0:	call   QWORD PTR [rip+0x5ea2]        # 0x140010088
   14000a1e6:	mov    r9d,0x8
   14000a1ec:	lea    r8,[rip+0x69ed]        # 0x140010be0
   14000a1f3:	mov    rdx,r13
   14000a1f6:	lea    rcx,[rbp-0x38]
   14000a1fa:	call   0x140006ca4
   14000a1ff:	mov    ecx,0xfffffff5
   14000a204:	call   QWORD PTR [rip+0x5e86]        # 0x140010090
   14000a20a:	lea    r9,[rbp-0x4c]
   14000a20e:	mov    QWORD PTR [rsp+0x20],r15
   14000a213:	mov    rcx,rax
   14000a216:	lea    rdx,[rbp-0x38]
   14000a21a:	mov    r8d,r12d
   14000a21d:	call   QWORD PTR [rip+0x5e65]        # 0x140010088
   14000a223:	dec    edi
   14000a225:	jmp    0x14000a0e7
   14000a22a:	cmp    edi,0xfd
   14000a230:	jne    0x14000a246
   14000a232:	mov    ecx,0xfffffff5
   14000a237:	call   QWORD PTR [rip+0x5e53]        # 0x140010090
   14000a23d:	lea    rdx,[rip+0x69a4]        # 0x140010be8
   14000a244:	jmp    0x14000a26c
   14000a246:	cmp    cx,r13w
   14000a24a:	je     0x14000a0e7
   14000a250:	mov    eax,edi
   14000a252:	add    edi,r12d
   14000a255:	mov    WORD PTR [r14+rax*2],cx
   14000a25a:	mov    ecx,0xfffffff5
   14000a25f:	call   QWORD PTR [rip+0x5e2b]        # 0x140010090
   14000a265:	lea    rdx,[rip+0x66a4]        # 0x140010910
   14000a26c:	mov    r8d,r12d
   14000a26f:	mov    QWORD PTR [rsp+0x20],r15
   14000a274:	lea    r9,[rbp-0x4c]
   14000a278:	mov    rcx,rax
   14000a27b:	call   QWORD PTR [rip+0x5e07]        # 0x140010088
   14000a281:	jmp    0x14000a0e7
   14000a286:	mov    edx,DWORD PTR [rbp-0x40]
   14000a289:	mov    rcx,rbx
   14000a28c:	mov    eax,edi
   14000a28e:	mov    WORD PTR [r14+rax*2],r15w
   14000a293:	call   QWORD PTR [rip+0x5e57]        # 0x1400100f0
   14000a299:	mov    r8d,r13d
   14000a29c:	lea    rdx,[rip+0x6949]        # 0x140010bec
   14000a2a3:	lea    rcx,[rbp-0x38]
   14000a2a7:	call   0x140009774
   14000a2ac:	mov    ecx,0xfffffff5
   14000a2b1:	call   QWORD PTR [rip+0x5dd9]        # 0x140010090
   14000a2b7:	lea    r9,[rbp-0x4c]
   14000a2bb:	mov    QWORD PTR [rsp+0x20],r15
   14000a2c0:	mov    rcx,rax
   14000a2c3:	lea    rdx,[rbp-0x38]
   14000a2c7:	mov    r8d,0x2
   14000a2cd:	call   QWORD PTR [rip+0x5db5]        # 0x140010088
   14000a2d3:	mov    eax,r12d
   14000a2d6:	jmp    0x14000a2e6
   14000a2d8:	mov    edx,DWORD PTR [rbp-0x40]
   14000a2db:	mov    rcx,rbx
   14000a2de:	call   QWORD PTR [rip+0x5e0c]        # 0x1400100f0
   14000a2e4:	xor    eax,eax
   14000a2e6:	mov    rcx,QWORD PTR [rbp-0x10]
   14000a2ea:	xor    rcx,rsp
   14000a2ed:	call   0x14000e560
   14000a2f2:	lea    r11,[rsp+0x80]
   14000a2fa:	mov    rbx,QWORD PTR [r11+0x38]
   14000a2fe:	mov    rsi,QWORD PTR [r11+0x40]
   14000a302:	mov    rdi,QWORD PTR [r11+0x48]
   14000a306:	mov    rsp,r11
   14000a309:	pop    r15
   14000a30b:	pop    r14
   14000a30d:	pop    r13
   14000a30f:	pop    r12
   14000a311:	pop    rbp
   14000a312:	ret    
   14000a313:	int3   
   14000a314:	int3   
   14000a315:	int3   
   14000a316:	int3   
   14000a317:	int3   
   14000a318:	int3   
   14000a319:	int3   
   14000a31a:	int3   
   14000a31b:	int3   
   14000a31c:	mov    QWORD PTR [rsp+0x8],rbx
   14000a321:	push   rdi
   14000a322:	sub    rsp,0x20
   14000a326:	mov    rbx,rcx
   14000a329:	test   rcx,rcx
   14000a32c:	jne    0x14000a345
   14000a32e:	call   QWORD PTR [rip+0x5e1c]        # 0x140010150
   14000a334:	test   eax,eax
   14000a336:	jne    0x14000a341
   14000a338:	lea    ecx,[rbx+0x57]
   14000a33b:	call   QWORD PTR [rip+0x5e17]        # 0x140010158
   14000a341:	xor    eax,eax
   14000a343:	jmp    0x14000a393
   14000a345:	cmp    QWORD PTR [rcx],0x0
   14000a349:	jne    0x14000a352
   14000a34b:	mov    eax,0x1
   14000a350:	jmp    0x14000a393
   14000a352:	call   QWORD PTR [rip+0x5d80]        # 0x1400100d8
   14000a358:	mov    rdi,rax
   14000a35b:	test   rax,rax
   14000a35e:	je     0x14000a341
   14000a360:	mov    rcx,QWORD PTR [rbx]
   14000a363:	call   0x14000a5a0
   14000a368:	cmp    eax,0xffffffff
   14000a36b:	jne    0x14000a374
   14000a36d:	mov    ecx,0x80004003
   14000a372:	jmp    0x14000a33b
   14000a374:	mov    rcx,QWORD PTR [rbx]
   14000a377:	xor    edx,edx
   14000a379:	movsxd r8,eax
   14000a37c:	call   0x14000ed52
   14000a381:	mov    r8,QWORD PTR [rbx]
   14000a384:	xor    edx,edx
   14000a386:	mov    rcx,rdi
   14000a389:	call   QWORD PTR [rip+0x5d41]        # 0x1400100d0
   14000a38f:	and    QWORD PTR [rbx],0x0
   14000a393:	mov    rbx,QWORD PTR [rsp+0x30]
   14000a398:	add    rsp,0x20
   14000a39c:	pop    rdi
   14000a39d:	ret    
   14000a39e:	int3   
   14000a39f:	int3   
   14000a3a0:	int3   
   14000a3a1:	int3   
   14000a3a2:	int3   
   14000a3a3:	int3   
   14000a3a4:	rex push rbx
   14000a3a6:	sub    rsp,0x20
   14000a3aa:	mov    rbx,rcx
   14000a3ad:	test   rcx,rcx
   14000a3b0:	jne    0x14000a3c1
   14000a3b2:	call   QWORD PTR [rip+0x5d98]        # 0x140010150
   14000a3b8:	test   eax,eax
   14000a3ba:	jne    0x14000a3e7
   14000a3bc:	lea    ecx,[rbx+0x57]
   14000a3bf:	jmp    0x14000a3e1
   14000a3c1:	call   QWORD PTR [rip+0x5d11]        # 0x1400100d8
   14000a3c7:	test   rax,rax
   14000a3ca:	je     0x14000a3e7
   14000a3cc:	mov    r8,rbx
   14000a3cf:	xor    edx,edx
   14000a3d1:	mov    rcx,rax
   14000a3d4:	call   QWORD PTR [rip+0x5cee]        # 0x1400100c8
   14000a3da:	test   eax,eax
   14000a3dc:	jne    0x14000a3e9
   14000a3de:	lea    ecx,[rax+0x6]
   14000a3e1:	call   QWORD PTR [rip+0x5d71]        # 0x140010158
   14000a3e7:	xor    eax,eax
   14000a3e9:	add    rsp,0x20
   14000a3ed:	pop    rbx
   14000a3ee:	ret    
   14000a3ef:	int3   
   14000a3f0:	int3   
   14000a3f1:	int3   
   14000a3f2:	int3   
   14000a3f3:	int3   
   14000a3f4:	int3   
   14000a3f5:	int3   
   14000a3f6:	int3   
   14000a3f7:	int3   
   14000a3f8:	rex push rbx
   14000a3fa:	sub    rsp,0x30
   14000a3fe:	mov    ebx,ecx
   14000a400:	test   ecx,ecx
   14000a402:	jne    0x14000a41b
   14000a404:	call   QWORD PTR [rip+0x5d46]        # 0x140010150
   14000a40a:	test   eax,eax
   14000a40c:	jne    0x14000a417
   14000a40e:	lea    ecx,[rax+0x57]
   14000a411:	call   QWORD PTR [rip+0x5d41]        # 0x140010158
   14000a417:	xor    eax,eax
   14000a419:	jmp    0x14000a48c
   14000a41b:	call   QWORD PTR [rip+0x5cb7]        # 0x1400100d8
   14000a421:	test   rax,rax
   14000a424:	je     0x14000a417
   14000a426:	mov    r8,rbx
   14000a429:	mov    edx,0xc
   14000a42e:	mov    rcx,rax
   14000a431:	call   QWORD PTR [rip+0x5c89]        # 0x1400100c0
   14000a437:	mov    QWORD PTR [rsp+0x20],rax
   14000a43c:	jmp    0x14000a48c
   14000a43e:	cmp    eax,0xc0000017
   14000a443:	jne    0x14000a45c
   14000a445:	call   QWORD PTR [rip+0x5d05]        # 0x140010150
   14000a44b:	test   eax,eax
   14000a44d:	jne    0x14000a458
   14000a44f:	lea    ecx,[rax+0x8]
   14000a452:	call   QWORD PTR [rip+0x5d00]        # 0x140010158
   14000a458:	xor    eax,eax
   14000a45a:	jmp    0x14000a48c
   14000a45c:	cmp    eax,0xc0000005
   14000a461:	jne    0x14000a477
   14000a463:	mov    ecx,0x570
   14000a468:	call   QWORD PTR [rip+0x5cea]        # 0x140010158
   14000a46e:	call   0x1400086e0
   14000a473:	xor    eax,eax
   14000a475:	jmp    0x14000a48c
   14000a477:	call   QWORD PTR [rip+0x5cd3]        # 0x140010150
   14000a47d:	test   eax,eax
   14000a47f:	jne    0x14000a48a
   14000a481:	lea    ecx,[rax+0x8]
   14000a484:	call   QWORD PTR [rip+0x5cce]        # 0x140010158
   14000a48a:	xor    eax,eax
   14000a48c:	add    rsp,0x30
   14000a490:	pop    rbx
   14000a491:	ret    
   14000a492:	int3   
   14000a493:	int3   
   14000a494:	int3   
   14000a495:	int3   
   14000a496:	int3   
   14000a497:	int3   
   14000a498:	mov    QWORD PTR [rsp+0x8],rbx
   14000a49d:	push   rdi
   14000a49e:	sub    rsp,0x20
   14000a4a2:	mov    edi,edx
   14000a4a4:	mov    rbx,rcx
   14000a4a7:	test   rcx,rcx
   14000a4aa:	je     0x14000a578
   14000a4b0:	mov    rcx,QWORD PTR [rcx]
   14000a4b3:	test   rcx,rcx
   14000a4b6:	je     0x14000a578
   14000a4bc:	test   edx,edx
   14000a4be:	jne    0x14000a4cd
   14000a4c0:	mov    rcx,rbx
   14000a4c3:	call   0x14000a31c
   14000a4c8:	jmp    0x14000a58d
   14000a4cd:	call   0x14000a3a4
   14000a4d2:	test   eax,eax
   14000a4d4:	jne    0x14000a4df
   14000a4d6:	and    QWORD PTR [rbx],0x0
   14000a4da:	jmp    0x14000a58b
   14000a4df:	call   QWORD PTR [rip+0x5bf3]        # 0x1400100d8
   14000a4e5:	test   rax,rax
   14000a4e8:	je     0x14000a58b
   14000a4ee:	mov    r9,rdi
   14000a4f1:	mov    r8,QWORD PTR [rbx]
   14000a4f4:	mov    edx,0xc
   14000a4f9:	mov    rcx,rax
   14000a4fc:	call   QWORD PTR [rip+0x5bb6]        # 0x1400100b8
   14000a502:	test   rax,rax
   14000a505:	jne    0x14000a51e
   14000a507:	call   QWORD PTR [rip+0x5c43]        # 0x140010150
   14000a50d:	test   eax,eax
   14000a50f:	jne    0x14000a51a
   14000a511:	lea    ecx,[rax+0x8]
   14000a514:	call   QWORD PTR [rip+0x5c3e]        # 0x140010158
   14000a51a:	xor    eax,eax
   14000a51c:	jmp    0x14000a58d
   14000a51e:	mov    QWORD PTR [rbx],rax
   14000a521:	mov    eax,0x1
   14000a526:	jmp    0x14000a58d
   14000a528:	cmp    eax,0xc0000017
   14000a52d:	jne    0x14000a546
   14000a52f:	call   QWORD PTR [rip+0x5c1b]        # 0x140010150
   14000a535:	test   eax,eax
   14000a537:	jne    0x14000a542
   14000a539:	lea    ecx,[rax+0x8]
   14000a53c:	call   QWORD PTR [rip+0x5c16]        # 0x140010158
   14000a542:	xor    eax,eax
   14000a544:	jmp    0x14000a58d
   14000a546:	cmp    eax,0xc0000005
   14000a54b:	jne    0x14000a561
   14000a54d:	mov    ecx,0x570
   14000a552:	call   QWORD PTR [rip+0x5c00]        # 0x140010158
   14000a558:	call   0x1400086e0
   14000a55d:	xor    eax,eax
   14000a55f:	jmp    0x14000a58d
   14000a561:	call   QWORD PTR [rip+0x5be9]        # 0x140010150
   14000a567:	test   eax,eax
   14000a569:	jne    0x14000a574
   14000a56b:	lea    ecx,[rax+0x8]
   14000a56e:	call   QWORD PTR [rip+0x5be4]        # 0x140010158
   14000a574:	xor    eax,eax
   14000a576:	jmp    0x14000a58d
   14000a578:	call   QWORD PTR [rip+0x5bd2]        # 0x140010150
   14000a57e:	test   eax,eax
   14000a580:	jne    0x14000a58b
   14000a582:	lea    ecx,[rax+0x57]
   14000a585:	call   QWORD PTR [rip+0x5bcd]        # 0x140010158
   14000a58b:	xor    eax,eax
   14000a58d:	mov    rbx,QWORD PTR [rsp+0x30]
   14000a592:	add    rsp,0x20
   14000a596:	pop    rdi
   14000a597:	ret    
   14000a598:	int3   
   14000a599:	int3   
   14000a59a:	int3   
   14000a59b:	int3   
   14000a59c:	int3   
   14000a59d:	int3   
   14000a59e:	int3   
   14000a59f:	int3   
   14000a5a0:	rex push rbx
   14000a5a2:	sub    rsp,0x20
   14000a5a6:	mov    rbx,rcx
   14000a5a9:	test   rcx,rcx
   14000a5ac:	jne    0x14000a5ca
   14000a5ae:	call   QWORD PTR [rip+0x5b9c]        # 0x140010150
   14000a5b4:	test   eax,eax
   14000a5b6:	jne    0x14000a5c1
   14000a5b8:	lea    ecx,[rbx+0x57]
   14000a5bb:	call   QWORD PTR [rip+0x5b97]        # 0x140010158
   14000a5c1:	or     eax,0xffffffff
   14000a5c4:	add    rsp,0x20
   14000a5c8:	pop    rbx
   14000a5c9:	ret    
   14000a5ca:	call   0x14000a3a4
   14000a5cf:	test   eax,eax
   14000a5d1:	je     0x14000a5c1
   14000a5d3:	call   QWORD PTR [rip+0x5aff]        # 0x1400100d8
   14000a5d9:	test   rax,rax
   14000a5dc:	je     0x14000a5c1
   14000a5de:	mov    r8,rbx
   14000a5e1:	xor    edx,edx
   14000a5e3:	mov    rcx,rax
   14000a5e6:	add    rsp,0x20
   14000a5ea:	pop    rbx
   14000a5eb:	rex.W jmp QWORD PTR [rip+0x5abe]        # 0x1400100b0
   14000a5f2:	int3   
   14000a5f3:	int3   
   14000a5f4:	int3   
   14000a5f5:	int3   
   14000a5f6:	int3   
   14000a5f7:	int3   
   14000a5f8:	mov    QWORD PTR [rsp+0x8],rbx
   14000a5fd:	push   rdi
   14000a5fe:	sub    rsp,0x20
   14000a602:	xor    ebx,ebx
   14000a604:	mov    rdi,rcx
   14000a607:	test   rcx,rcx
   14000a60a:	jne    0x14000a623
   14000a60c:	call   QWORD PTR [rip+0x5b3e]        # 0x140010150
   14000a612:	test   eax,eax
   14000a614:	jne    0x14000a61f
   14000a616:	lea    ecx,[rdi+0x57]
   14000a619:	call   QWORD PTR [rip+0x5b39]        # 0x140010158
   14000a61f:	xor    eax,eax
   14000a621:	jmp    0x14000a64e
   14000a623:	call   QWORD PTR [rip+0x5b1f]        # 0x140010148
   14000a629:	mov    r9d,0x2
   14000a62f:	cmp    eax,r9d
   14000a632:	jbe    0x14000a61f
   14000a634:	lea    r8d,[r9-0x1]
   14000a638:	mov    rcx,rdi
   14000a63b:	lea    rdx,[rip+0x603e]        # 0x140010680
   14000a642:	call   0x14000990c
   14000a647:	test   eax,eax
   14000a649:	sete   bl
   14000a64c:	mov    eax,ebx
   14000a64e:	mov    rbx,QWORD PTR [rsp+0x30]
   14000a653:	add    rsp,0x20
   14000a657:	pop    rdi
   14000a658:	ret    
   14000a659:	int3   
   14000a65a:	int3   
   14000a65b:	int3   
   14000a65c:	int3   
   14000a65d:	int3   
   14000a65e:	int3   
   14000a65f:	int3   
   14000a660:	mov    QWORD PTR [rsp+0x10],rbx
   14000a665:	mov    QWORD PTR [rsp+0x18],rsi
   14000a66a:	mov    QWORD PTR [rsp+0x20],rdi
   14000a66f:	push   rbp
   14000a670:	push   r14
   14000a672:	push   r15
   14000a674:	mov    rbp,rsp
   14000a677:	sub    rsp,0x20
   14000a67b:	mov    rsi,rcx
   14000a67e:	xor    ebx,ebx
   14000a680:	xor    ecx,ecx
   14000a682:	mov    DWORD PTR [rbp+0x20],ebx
   14000a685:	call   QWORD PTR [rip+0x5acd]        # 0x140010158
   14000a68b:	test   rsi,rsi
   14000a68e:	je     0x14000a815
   14000a694:	mov    rcx,rsi
   14000a697:	call   QWORD PTR [rip+0x5aab]        # 0x140010148
   14000a69d:	test   eax,eax
   14000a69f:	je     0x14000a815
   14000a6a5:	lea    r14d,[rbx+0x4]
   14000a6a9:	xor    edx,edx
   14000a6ab:	mov    ecx,r14d
   14000a6ae:	lea    r8,[rbp+0x20]
   14000a6b2:	call   QWORD PTR [rip+0x59f0]        # 0x1400100a8
   14000a6b8:	call   QWORD PTR [rip+0x5a92]        # 0x140010150
   14000a6be:	cmp    eax,0xea
   14000a6c3:	je     0x14000a6cc
   14000a6c5:	xor    eax,eax
   14000a6c7:	jmp    0x14000a81a
   14000a6cc:	mov    r8d,DWORD PTR [rbp+0x20]
   14000a6d0:	mov    edi,0x1
   14000a6d5:	mov    r9d,edi
   14000a6d8:	xor    edx,edx
   14000a6da:	lea    ecx,[rdi+0xd]
   14000a6dd:	call   0x1400082e8
   14000a6e2:	mov    r15,rax
   14000a6e5:	test   rax,rax
   14000a6e8:	jne    0x14000a6ff
   14000a6ea:	call   QWORD PTR [rip+0x5a60]        # 0x140010150
   14000a6f0:	test   eax,eax
   14000a6f2:	jne    0x14000a6c5
   14000a6f4:	lea    ecx,[rdi+0x7]
   14000a6f7:	call   QWORD PTR [rip+0x5a5b]        # 0x140010158
   14000a6fd:	jmp    0x14000a6c5
   14000a6ff:	lea    r8,[rbp+0x20]
   14000a703:	mov    rdx,rax
   14000a706:	mov    ecx,r14d
   14000a709:	call   QWORD PTR [rip+0x5999]        # 0x1400100a8
   14000a70f:	test   eax,eax
   14000a711:	je     0x14000a6c5
   14000a713:	xor    r9d,r9d
   14000a716:	mov    r8d,edi
   14000a719:	mov    rdx,rsi
   14000a71c:	mov    rcx,r15
   14000a71f:	call   0x14000990c
   14000a724:	test   eax,eax
   14000a726:	jne    0x14000a72f
   14000a728:	mov    eax,edi
   14000a72a:	jmp    0x14000a81a
   14000a72f:	mov    rcx,rsi
   14000a732:	call   0x14000a93c
   14000a737:	xor    edx,edx
   14000a739:	mov    DWORD PTR [rbp+0x20],ebx
   14000a73c:	lea    r8,[rbp+0x20]
   14000a740:	cmp    eax,edi
   14000a742:	jne    0x14000a7bb
   14000a744:	mov    rcx,rsi
   14000a747:	call   0x14000aa18
   14000a74c:	test   eax,eax
   14000a74e:	je     0x14000a6c5
   14000a754:	mov    r8d,DWORD PTR [rbp+0x20]
   14000a758:	xor    edx,edx
   14000a75a:	mov    r9d,edi
   14000a75d:	lea    ecx,[rdx+0xf]
   14000a760:	call   0x1400082e8
   14000a765:	mov    r14,rax
   14000a768:	test   rax,rax
   14000a76b:	je     0x14000a6c5
   14000a771:	lea    r8,[rbp+0x20]
   14000a775:	mov    rdx,rax
   14000a778:	mov    rcx,rsi
   14000a77b:	call   0x14000aa18
   14000a780:	test   eax,eax
   14000a782:	je     0x14000a6c5
   14000a788:	xor    r9d,r9d
   14000a78b:	mov    r8d,edi
   14000a78e:	mov    rdx,r14
   14000a791:	mov    rcx,r15
   14000a794:	call   0x14000990c
   14000a799:	test   eax,eax
   14000a79b:	je     0x14000a728
   14000a79d:	lea    rdx,[rip+0x645c]        # 0x140010c00
   14000a7a4:	mov    r8d,edi
   14000a7a7:	xor    r9d,r9d
   14000a7aa:	mov    rcx,r14
   14000a7ad:	call   0x14000990c
   14000a7b2:	test   eax,eax
   14000a7b4:	sete   bl
   14000a7b7:	mov    eax,ebx
   14000a7b9:	jmp    0x14000a81a
   14000a7bb:	mov    r15d,0x7
   14000a7c1:	mov    ecx,r15d
   14000a7c4:	call   QWORD PTR [rip+0x58de]        # 0x1400100a8
   14000a7ca:	call   QWORD PTR [rip+0x5980]        # 0x140010150
   14000a7d0:	cmp    eax,0xea
   14000a7d5:	jne    0x14000a6c5
   14000a7db:	mov    r8d,DWORD PTR [rbp+0x20]
   14000a7df:	xor    edx,edx
   14000a7e1:	mov    r9d,edi
   14000a7e4:	lea    ecx,[rdx+0xe]
   14000a7e7:	call   0x1400082e8
   14000a7ec:	mov    r14,rax
   14000a7ef:	test   rax,rax
   14000a7f2:	je     0x14000a6c5
   14000a7f8:	lea    r8,[rbp+0x20]
   14000a7fc:	mov    rdx,rax
   14000a7ff:	mov    ecx,r15d
   14000a802:	call   QWORD PTR [rip+0x58a0]        # 0x1400100a8
   14000a808:	test   eax,eax
   14000a80a:	je     0x14000a6c5
   14000a810:	mov    rdx,rsi
   14000a813:	jmp    0x14000a7a4
   14000a815:	mov    eax,0x1
   14000a81a:	mov    rbx,QWORD PTR [rsp+0x48]
   14000a81f:	mov    rsi,QWORD PTR [rsp+0x50]
   14000a824:	mov    rdi,QWORD PTR [rsp+0x58]
   14000a829:	add    rsp,0x20
   14000a82d:	pop    r15
   14000a82f:	pop    r14
   14000a831:	pop    rbp
   14000a832:	ret    
   14000a833:	int3   
   14000a834:	int3   
   14000a835:	int3   
   14000a836:	int3   
   14000a837:	int3   
   14000a838:	int3   
   14000a839:	int3   
   14000a83a:	int3   
   14000a83b:	int3   
   14000a83c:	mov    QWORD PTR [rsp+0x10],rbx
   14000a841:	push   rdi
   14000a842:	sub    rsp,0x70
   14000a846:	mov    rax,QWORD PTR [rip+0xa7bb]        # 0x140015008
   14000a84d:	xor    rax,rsp
   14000a850:	mov    QWORD PTR [rsp+0x60],rax
   14000a855:	movups xmm0,XMMWORD PTR [rip+0x63bc]        # 0x140010c18
   14000a85c:	xor    ebx,ebx
   14000a85e:	mov    rdi,rcx
   14000a861:	movups xmm1,XMMWORD PTR [rip+0x63c0]        # 0x140010c28
   14000a868:	movups XMMWORD PTR [rsp+0x28],xmm0
   14000a86d:	movups xmm0,XMMWORD PTR [rip+0x63c4]        # 0x140010c38
   14000a874:	movups XMMWORD PTR [rsp+0x38],xmm1
   14000a879:	movsd  xmm1,QWORD PTR [rip+0x63c7]        # 0x140010c48
   14000a881:	movsd  QWORD PTR [rsp+0x58],xmm1
   14000a887:	movups XMMWORD PTR [rsp+0x48],xmm0
   14000a88c:	test   rcx,rcx
   14000a88f:	je     0x14000a916
   14000a895:	call   QWORD PTR [rip+0x58ad]        # 0x140010148
   14000a89b:	test   eax,eax
   14000a89d:	je     0x14000a916
   14000a89f:	mov    rcx,rdi
   14000a8a2:	call   0x14000a93c
   14000a8a7:	mov    rcx,rdi
   14000a8aa:	cmp    eax,0x1
   14000a8ad:	jne    0x14000a8fa
   14000a8af:	lea    r8,[rsp+0x20]
   14000a8b4:	mov    DWORD PTR [rsp+0x20],ebx
   14000a8b8:	xor    edx,edx
   14000a8ba:	call   0x14000aa18
   14000a8bf:	test   eax,eax
   14000a8c1:	jne    0x14000a8c7
   14000a8c3:	xor    eax,eax
   14000a8c5:	jmp    0x14000a91b
   14000a8c7:	mov    r8d,DWORD PTR [rsp+0x20]
   14000a8cc:	xor    edx,edx
   14000a8ce:	mov    r9d,0x1
   14000a8d4:	lea    ecx,[rdx+0xf]
   14000a8d7:	call   0x1400082e8
   14000a8dc:	test   rax,rax
   14000a8df:	je     0x14000a8c3
   14000a8e1:	lea    r8,[rsp+0x20]
   14000a8e6:	mov    rdx,rax
   14000a8e9:	mov    rcx,rdi
   14000a8ec:	call   0x14000aa18
   14000a8f1:	test   eax,eax
   14000a8f3:	setne  bl
   14000a8f6:	mov    eax,ebx
   14000a8f8:	jmp    0x14000a91b
   14000a8fa:	lea    rdx,[rsp+0x28]
   14000a8ff:	call   0x1400090ac
   14000a904:	cmp    eax,0xffffffff
   14000a907:	je     0x14000a916
   14000a909:	mov    ecx,0x35
   14000a90e:	call   QWORD PTR [rip+0x5844]        # 0x140010158
   14000a914:	jmp    0x14000a8c3
   14000a916:	mov    eax,0x1
   14000a91b:	mov    rcx,QWORD PTR [rsp+0x60]
   14000a920:	xor    rcx,rsp
   14000a923:	call   0x14000e560
   14000a928:	mov    rbx,QWORD PTR [rsp+0x88]
   14000a930:	add    rsp,0x70
   14000a934:	pop    rdi
   14000a935:	ret    
   14000a936:	int3   
   14000a937:	int3   
   14000a938:	int3   
   14000a939:	int3   
   14000a93a:	int3   
   14000a93b:	int3   
   14000a93c:	mov    QWORD PTR [rsp+0x10],rbx
   14000a941:	push   rdi
   14000a942:	sub    rsp,0x40
   14000a946:	mov    rax,QWORD PTR [rip+0xa6bb]        # 0x140015008
   14000a94d:	xor    rax,rsp
   14000a950:	mov    QWORD PTR [rsp+0x30],rax
   14000a955:	xor    ebx,ebx
   14000a957:	mov    rdi,rcx
   14000a95a:	test   rcx,rcx
   14000a95d:	je     0x14000a9eb
   14000a963:	call   QWORD PTR [rip+0x57df]        # 0x140010148
   14000a969:	test   eax,eax
   14000a96b:	je     0x14000a9eb
   14000a96d:	xor    r9d,r9d
   14000a970:	lea    ecx,[rbx+0x10]
   14000a973:	xor    r8d,r8d
   14000a976:	mov    rdx,rdi
   14000a979:	call   0x1400082e8
   14000a97e:	test   rax,rax
   14000a981:	jne    0x14000a992
   14000a983:	call   QWORD PTR [rip+0x57c7]        # 0x140010150
   14000a989:	test   eax,eax
   14000a98b:	jne    0x14000a9f6
   14000a98d:	lea    ecx,[rbx+0x8]
   14000a990:	jmp    0x14000a9f0
   14000a992:	lea    rdx,[rip+0x61f3]        # 0x140010b8c
   14000a999:	mov    rcx,rax
   14000a99c:	call   QWORD PTR [rip+0x5b2e]        # 0x1400104d0
   14000a9a2:	mov    rdi,rax
   14000a9a5:	test   rax,rax
   14000a9a8:	je     0x14000a9eb
   14000a9aa:	xor    r8d,r8d
   14000a9ad:	mov    rcx,rdi
   14000a9b0:	call   0x140008e3c
   14000a9b5:	test   eax,eax
   14000a9b7:	je     0x14000a9f6
   14000a9b9:	mov    rcx,rdi
   14000a9bc:	call   0x140008d68
   14000a9c1:	cmp    eax,0xff
   14000a9c6:	ja     0x14000a9f6
   14000a9c8:	lea    rdx,[rip+0x61bd]        # 0x140010b8c
   14000a9cf:	xor    ecx,ecx
   14000a9d1:	inc    ebx
   14000a9d3:	call   QWORD PTR [rip+0x5af7]        # 0x1400104d0
   14000a9d9:	mov    rdi,rax
   14000a9dc:	test   rax,rax
   14000a9df:	jne    0x14000a9aa
   14000a9e1:	cmp    ebx,0x4
   14000a9e4:	jne    0x14000a9eb
   14000a9e6:	lea    eax,[rdi+0x1]
   14000a9e9:	jmp    0x14000a9f8
   14000a9eb:	mov    ecx,0x254f
   14000a9f0:	call   QWORD PTR [rip+0x5762]        # 0x140010158
   14000a9f6:	xor    eax,eax
   14000a9f8:	mov    rcx,QWORD PTR [rsp+0x30]
   14000a9fd:	xor    rcx,rsp
   14000aa00:	call   0x14000e560
   14000aa05:	mov    rbx,QWORD PTR [rsp+0x58]
   14000aa0a:	add    rsp,0x40
   14000aa0e:	pop    rdi
   14000aa0f:	ret    
   14000aa10:	int3   
   14000aa11:	int3   
   14000aa12:	int3   
   14000aa13:	int3   
   14000aa14:	int3   
   14000aa15:	int3   
   14000aa16:	int3   
   14000aa17:	int3   
   14000aa18:	rex push rbp
   14000aa1a:	push   rbx
   14000aa1b:	push   rsi
   14000aa1c:	push   rdi
   14000aa1d:	push   r14
   14000aa1f:	lea    rbp,[rsp-0x980]
   14000aa27:	sub    rsp,0xa80
   14000aa2e:	mov    rax,QWORD PTR [rip+0xa5d3]        # 0x140015008
   14000aa35:	xor    rax,rsp
   14000aa38:	mov    QWORD PTR [rbp+0x970],rax
   14000aa3f:	xor    ebx,ebx
   14000aa41:	mov    rsi,r8
   14000aa44:	mov    r14,rdx
   14000aa47:	mov    QWORD PTR [rsp+0x40],rbx
   14000aa4c:	mov    rdi,rcx
   14000aa4f:	mov    DWORD PTR [rsp+0x48],ebx
   14000aa53:	xor    edx,edx
   14000aa55:	lea    rcx,[rsp+0x4c]
   14000aa5a:	lea    r8d,[rbx+0x2c]
   14000aa5e:	call   0x14000ed52
   14000aa63:	mov    WORD PTR [rbp+0x962],bx
   14000aa6a:	test   rdi,rdi
   14000aa6d:	je     0x14000ab9a
   14000aa73:	test   rsi,rsi
   14000aa76:	je     0x14000ab9a
   14000aa7c:	cmp    DWORD PTR [rsi],ebx
   14000aa7e:	je     0x14000aa92
   14000aa80:	cmp    DWORD PTR [rsi],0x2
   14000aa83:	jb     0x14000ab9a
   14000aa89:	test   r14,r14
   14000aa8c:	je     0x14000ab9a
   14000aa92:	cmp    DWORD PTR [rip+0xaca8],ebx        # 0x140015740
   14000aa98:	jne    0x14000aac4
   14000aa9a:	mov    ecx,0x202
   14000aa9f:	lea    rdx,[rbp-0x80]
   14000aaa3:	call   QWORD PTR [rip+0x57c7]        # 0x140010270
   14000aaa9:	test   eax,eax
   14000aaab:	je     0x14000aaba
   14000aaad:	call   QWORD PTR [rip+0x57c5]        # 0x140010278
   14000aab3:	mov    ecx,eax
   14000aab5:	jmp    0x14000aba7
   14000aaba:	mov    DWORD PTR [rip+0xac7c],0x1        # 0x140015740
   14000aac4:	lea    r9,[rsp+0x40]
   14000aac9:	xor    edx,edx
   14000aacb:	lea    r8,[rsp+0x48]
   14000aad0:	mov    rcx,rdi
   14000aad3:	call   QWORD PTR [rip+0x57a7]        # 0x140010280
   14000aad9:	test   eax,eax
   14000aadb:	jne    0x14000abad
   14000aae1:	mov    rdi,QWORD PTR [rsp+0x40]
   14000aae6:	jmp    0x14000ab3d
   14000aae8:	mov    WORD PTR [rbp+0x160],bx
   14000aaef:	lea    rax,[rbp+0x120]
   14000aaf6:	mov    edx,DWORD PTR [rdi+0x10]
   14000aaf9:	lea    r8,[rbp+0x160]
   14000ab00:	mov    rcx,QWORD PTR [rdi+0x20]
   14000ab04:	mov    r9d,0x401
   14000ab0a:	mov    DWORD PTR [rsp+0x30],0x4
   14000ab12:	mov    DWORD PTR [rsp+0x28],0x20
   14000ab1a:	mov    QWORD PTR [rsp+0x20],rax
   14000ab1f:	call   QWORD PTR [rip+0x573b]        # 0x140010260
   14000ab25:	test   eax,eax
   14000ab27:	je     0x14000ab44
   14000ab29:	cmp    eax,0x2afc
   14000ab2e:	jne    0x14000ab39
   14000ab30:	cmp    WORD PTR [rbp+0x160],bx
   14000ab37:	jne    0x14000ab44
   14000ab39:	mov    rdi,QWORD PTR [rdi+0x28]
   14000ab3d:	test   rdi,rdi
   14000ab40:	jne    0x14000aae8
   14000ab42:	jmp    0x14000ab8b
   14000ab44:	lea    rdx,[rip+0x6041]        # 0x140010b8c
   14000ab4b:	lea    rcx,[rbp+0x160]
   14000ab52:	call   QWORD PTR [rip+0x5978]        # 0x1400104d0
   14000ab58:	mov    rdi,rax
   14000ab5b:	test   rax,rax
   14000ab5e:	je     0x14000ab6b
   14000ab60:	mov    rcx,rax
   14000ab63:	call   QWORD PTR [rip+0x55df]        # 0x140010148
   14000ab69:	mov    ebx,eax
   14000ab6b:	lea    eax,[rbx+0x1]
   14000ab6e:	cmp    DWORD PTR [rsi],eax
   14000ab70:	jae    0x14000ab7b
   14000ab72:	mov    DWORD PTR [rsi],eax
   14000ab74:	mov    ebx,0x1
   14000ab79:	jmp    0x14000ab8b
   14000ab7b:	mov    r8d,DWORD PTR [rsi]
   14000ab7e:	mov    rdx,rdi
   14000ab81:	mov    rcx,r14
   14000ab84:	call   0x140009774
   14000ab89:	mov    ebx,eax
   14000ab8b:	mov    rcx,QWORD PTR [rsp+0x40]
   14000ab90:	call   QWORD PTR [rip+0x56f2]        # 0x140010288
   14000ab96:	mov    eax,ebx
   14000ab98:	jmp    0x14000abaf
   14000ab9a:	call   QWORD PTR [rip+0x55b0]        # 0x140010150
   14000aba0:	test   eax,eax
   14000aba2:	jne    0x14000abad
   14000aba4:	lea    ecx,[rax+0x57]
   14000aba7:	call   QWORD PTR [rip+0x55ab]        # 0x140010158
   14000abad:	xor    eax,eax
   14000abaf:	mov    rcx,QWORD PTR [rbp+0x970]
   14000abb6:	xor    rcx,rsp
   14000abb9:	call   0x14000e560
   14000abbe:	add    rsp,0xa80
   14000abc5:	pop    r14
   14000abc7:	pop    rdi
   14000abc8:	pop    rsi
   14000abc9:	pop    rbx
   14000abca:	pop    rbp
   14000abcb:	ret    
   14000abcc:	int3   
   14000abcd:	int3   
   14000abce:	int3   
   14000abcf:	int3   
   14000abd0:	int3   
   14000abd1:	int3   
   14000abd2:	int3   
   14000abd3:	int3   
   14000abd4:	mov    QWORD PTR [rsp+0x10],rbx
   14000abd9:	push   rdi
   14000abda:	sub    rsp,0x20
   14000abde:	xor    ebx,ebx
   14000abe0:	mov    rdi,rcx
   14000abe3:	mov    QWORD PTR [rsp+0x30],rbx
   14000abe8:	test   rcx,rcx
   14000abeb:	je     0x14000ac31
   14000abed:	call   QWORD PTR [rip+0x5555]        # 0x140010148
   14000abf3:	test   eax,eax
   14000abf5:	je     0x14000ac31
   14000abf7:	mov    rcx,rdi
   14000abfa:	call   0x14000a5f8
   14000abff:	test   eax,eax
   14000ac01:	jne    0x14000ac3e
   14000ac03:	mov    r8,rdi
   14000ac06:	lea    rdx,[rip+0x6043]        # 0x140010c50
   14000ac0d:	lea    ecx,[rbx+0x1]
   14000ac10:	call   0x1400085a4
   14000ac15:	test   eax,eax
   14000ac17:	jne    0x14000ac48
   14000ac19:	call   QWORD PTR [rip+0x5531]        # 0x140010150
   14000ac1f:	test   eax,eax
   14000ac21:	jne    0x14000ac2c
   14000ac23:	lea    ecx,[rax+0x8]
   14000ac26:	call   QWORD PTR [rip+0x552c]        # 0x140010158
   14000ac2c:	call   0x1400086e0
   14000ac31:	xor    eax,eax
   14000ac33:	mov    rbx,QWORD PTR [rsp+0x38]
   14000ac38:	add    rsp,0x20
   14000ac3c:	pop    rdi
   14000ac3d:	ret    
   14000ac3e:	mov    rcx,rdi
   14000ac41:	call   0x140008528
   14000ac46:	jmp    0x14000ac15
   14000ac48:	call   0x1400084e8
   14000ac4d:	mov    ecx,0xd
   14000ac52:	test   rax,rax
   14000ac55:	jne    0x14000ac5e
   14000ac57:	call   0x14000827c
   14000ac5c:	jmp    0x14000ac6c
   14000ac5e:	xor    r9d,r9d
   14000ac61:	xor    r8d,r8d
   14000ac64:	mov    rdx,rax
   14000ac67:	call   0x1400082e8
   14000ac6c:	test   rax,rax
   14000ac6f:	je     0x14000ac19
   14000ac71:	lea    r8,[rsp+0x30]
   14000ac76:	mov    edx,0x65
   14000ac7b:	mov    rcx,rax
   14000ac7e:	call   QWORD PTR [rip+0x58f4]        # 0x140010578
   14000ac84:	test   eax,eax
   14000ac86:	jne    0x14000ac31
   14000ac88:	mov    rcx,QWORD PTR [rsp+0x30]
   14000ac8d:	test   DWORD PTR [rcx+0x18],0x1000
   14000ac94:	je     0x14000aca5
   14000ac96:	mov    eax,DWORD PTR [rcx+0x10]
   14000ac99:	and    eax,0xf
   14000ac9c:	imul   ebx,eax,0x3e8
   14000aca2:	add    ebx,DWORD PTR [rcx+0x14]
   14000aca5:	call   QWORD PTR [rip+0x58a5]        # 0x140010550
   14000acab:	mov    eax,ebx
   14000acad:	jmp    0x14000ac33
   14000acaf:	int3   
   14000acb0:	int3   
   14000acb1:	int3   
   14000acb2:	int3   
   14000acb3:	int3   
   14000acb4:	int3   
   14000acb5:	int3   
   14000acb6:	int3   
   14000acb7:	int3   
   14000acb8:	mov    QWORD PTR [rsp+0x8],rbx
   14000acbd:	mov    QWORD PTR [rsp+0x10],rbp
   14000acc2:	mov    QWORD PTR [rsp+0x18],rsi
   14000acc7:	push   rdi
   14000acc8:	sub    rsp,0x50
   14000accc:	mov    rbp,r8
   14000accf:	mov    rsi,rdx
   14000acd2:	mov    rbx,rcx
   14000acd5:	test   rcx,rcx
   14000acd8:	je     0x14000ae42
   14000acde:	call   0x14000a660
   14000ace3:	cmp    eax,0x1
   14000ace6:	je     0x14000ae42
   14000acec:	mov    rcx,rbx
   14000acef:	call   0x14000a5f8
   14000acf4:	cmp    eax,0x1
   14000acf7:	jne    0x14000acfd
   14000acf9:	add    rbx,0x4
   14000acfd:	mov    rcx,rbx
   14000ad00:	call   0x14000a83c
   14000ad05:	test   eax,eax
   14000ad07:	jne    0x14000ad19
   14000ad09:	call   0x1400086e0
   14000ad0e:	call   QWORD PTR [rip+0x543c]        # 0x140010150
   14000ad14:	jmp    0x14000ae79
   14000ad19:	lea    rcx,[rip+0x5f40]        # 0x140010c60
   14000ad20:	call   QWORD PTR [rip+0x5422]        # 0x140010148
   14000ad26:	mov    r8,rbx
   14000ad29:	test   eax,eax
   14000ad2b:	je     0x14000ad47
   14000ad2d:	lea    r9,[rip+0x5f2c]        # 0x140010c60
   14000ad34:	mov    ecx,0x2
   14000ad39:	lea    rdx,[rip+0x5f30]        # 0x140010c70
   14000ad40:	call   0x1400085a4
   14000ad45:	jmp    0x14000ad58
   14000ad47:	lea    rdx,[rip+0x5f02]        # 0x140010c50
   14000ad4e:	mov    ecx,0x1
   14000ad53:	call   0x1400085a4
   14000ad58:	test   eax,eax
   14000ad5a:	jne    0x14000ad7d
   14000ad5c:	call   QWORD PTR [rip+0x53ee]        # 0x140010150
   14000ad62:	mov    ebx,0x8
   14000ad67:	test   eax,eax
   14000ad69:	jne    0x14000ad73
   14000ad6b:	mov    ecx,ebx
   14000ad6d:	call   QWORD PTR [rip+0x53e5]        # 0x140010158
   14000ad73:	call   0x1400086e0
   14000ad78:	jmp    0x14000ae73
   14000ad7d:	call   0x1400084e8
   14000ad82:	mov    ecx,0x12
   14000ad87:	test   rax,rax
   14000ad8a:	jne    0x14000ad93
   14000ad8c:	call   0x14000827c
   14000ad91:	jmp    0x14000ada1
   14000ad93:	xor    r9d,r9d
   14000ad96:	xor    r8d,r8d
   14000ad99:	mov    rdx,rax
   14000ad9c:	call   0x1400082e8
   14000ada1:	mov    rdi,rax
   14000ada4:	test   rax,rax
   14000ada7:	je     0x14000ad5c
   14000ada9:	xor    edx,edx
   14000adab:	lea    rcx,[rsp+0x20]
   14000adb0:	lea    r8d,[rdx+0x30]
   14000adb4:	call   0x14000ed52
   14000adb9:	and    DWORD PTR [rsp+0x24],0x0
   14000adbe:	lea    rcx,[rsp+0x20]
   14000adc3:	and    QWORD PTR [rsp+0x48],0x0
   14000adc9:	xor    r9d,r9d
   14000adcc:	and    QWORD PTR [rsp+0x30],0x0
   14000add2:	mov    r8,rsi
   14000add5:	mov    rdx,rbp
   14000add8:	mov    QWORD PTR [rsp+0x38],rdi
   14000addd:	call   QWORD PTR [rip+0x53a5]        # 0x140010188
   14000ade3:	mov    edi,eax
   14000ade5:	test   eax,eax
   14000ade7:	je     0x14000ae06
   14000ade9:	cmp    eax,0x4b8
   14000adee:	je     0x14000adff
   14000adf0:	mov    ecx,eax
   14000adf2:	call   QWORD PTR [rip+0x5360]        # 0x140010158
   14000adf8:	call   0x1400086e0
   14000adfd:	jmp    0x14000ae3e
   14000adff:	call   0x14000878c
   14000ae04:	jmp    0x14000ae3e
   14000ae06:	xor    ecx,ecx
   14000ae08:	xor    edi,edi
   14000ae0a:	call   QWORD PTR [rip+0x5348]        # 0x140010158
   14000ae10:	mov    rcx,rbx
   14000ae13:	call   0x14000abd4
   14000ae18:	cmp    eax,0x1388
   14000ae1d:	jae    0x14000ae3e
   14000ae1f:	mov    rcx,rbx
   14000ae22:	call   0x14000ae94
   14000ae27:	mov    ecx,0x1580
   14000ae2c:	call   0x140008af0
   14000ae31:	mov    rcx,rax
   14000ae34:	call   0x140008528
   14000ae39:	mov    edi,0x4b8
   14000ae3e:	mov    eax,edi
   14000ae40:	jmp    0x14000ae79
   14000ae42:	test   rsi,rsi
   14000ae45:	je     0x14000ae77
   14000ae47:	mov    rcx,rsi
   14000ae4a:	call   QWORD PTR [rip+0x52f8]        # 0x140010148
   14000ae50:	test   eax,eax
   14000ae52:	je     0x14000ae77
   14000ae54:	mov    ecx,0x157e
   14000ae59:	call   0x140008af0
   14000ae5e:	mov    rcx,rax
   14000ae61:	call   0x140008528
   14000ae66:	mov    ebx,0xa0010001
   14000ae6b:	mov    ecx,ebx
   14000ae6d:	call   QWORD PTR [rip+0x52e5]        # 0x140010158
   14000ae73:	mov    eax,ebx
   14000ae75:	jmp    0x14000ae79
   14000ae77:	xor    eax,eax
   14000ae79:	mov    rbx,QWORD PTR [rsp+0x60]
   14000ae7e:	mov    rbp,QWORD PTR [rsp+0x68]
   14000ae83:	mov    rsi,QWORD PTR [rsp+0x70]
   14000ae88:	add    rsp,0x50
   14000ae8c:	pop    rdi
   14000ae8d:	ret    
   14000ae8e:	int3   
   14000ae8f:	int3   
   14000ae90:	int3   
   14000ae91:	int3   
   14000ae92:	int3   
   14000ae93:	int3   
   14000ae94:	rex push rbx
   14000ae96:	sub    rsp,0x20
   14000ae9a:	mov    rbx,rcx
   14000ae9d:	test   rcx,rcx
   14000aea0:	je     0x14000af56
   14000aea6:	call   QWORD PTR [rip+0x529c]        # 0x140010148
   14000aeac:	test   eax,eax
   14000aeae:	je     0x14000af56
   14000aeb4:	mov    rcx,rbx
   14000aeb7:	call   0x14000a5f8
   14000aebc:	cmp    eax,0x1
   14000aebf:	jne    0x14000aec5
   14000aec1:	add    rbx,0x4
   14000aec5:	lea    r9,[rip+0x5d94]        # 0x140010c60
   14000aecc:	mov    r8,rbx
   14000aecf:	lea    rdx,[rip+0x5d9a]        # 0x140010c70
   14000aed6:	mov    ecx,0x2
   14000aedb:	call   0x1400085a4
   14000aee0:	test   eax,eax
   14000aee2:	jne    0x14000aefd
   14000aee4:	call   QWORD PTR [rip+0x5266]        # 0x140010150
   14000aeea:	mov    ebx,0x8
   14000aeef:	test   eax,eax
   14000aef1:	jne    0x14000af58
   14000aef3:	mov    ecx,ebx
   14000aef5:	call   QWORD PTR [rip+0x525d]        # 0x140010158
   14000aefb:	jmp    0x14000af58
   14000aefd:	call   0x1400084e8
   14000af02:	mov    ecx,0x12
   14000af07:	test   rax,rax
   14000af0a:	jne    0x14000af13
   14000af0c:	call   0x14000827c
   14000af11:	jmp    0x14000af21
   14000af13:	xor    r9d,r9d
   14000af16:	xor    r8d,r8d
   14000af19:	mov    rdx,rax
   14000af1c:	call   0x1400082e8
   14000af21:	test   rax,rax
   14000af24:	je     0x14000aee4
   14000af26:	xor    edx,edx
   14000af28:	mov    rcx,rax
   14000af2b:	lea    r8d,[rdx+0x1]
   14000af2f:	call   QWORD PTR [rip+0x524b]        # 0x140010180
   14000af35:	mov    ebx,eax
   14000af37:	test   eax,eax
   14000af39:	je     0x14000af50
   14000af3b:	cmp    eax,0x4b8
   14000af40:	je     0x14000af49
   14000af42:	call   0x1400086e0
   14000af47:	jmp    0x14000af58
   14000af49:	call   0x14000878c
   14000af4e:	jmp    0x14000af58
   14000af50:	xor    ebx,ebx
   14000af52:	xor    ecx,ecx
   14000af54:	jmp    0x14000aef5
   14000af56:	xor    ebx,ebx
   14000af58:	mov    eax,ebx
   14000af5a:	add    rsp,0x20
   14000af5e:	pop    rbx
   14000af5f:	ret    
   14000af60:	int3   
   14000af61:	int3   
   14000af62:	int3   
   14000af63:	int3   
   14000af64:	int3   
   14000af65:	int3   
   14000af66:	int3   
   14000af67:	int3   
   14000af68:	mov    r9,r8
   14000af6b:	test   rcx,rcx
   14000af6e:	je     0x14000af9e
   14000af70:	cmp    DWORD PTR [rcx],0x9
   14000af73:	jne    0x14000af9e
   14000af75:	cmp    DWORD PTR [rcx+0x4],edx
   14000af78:	jbe    0x14000af9e
   14000af7a:	mov    rax,QWORD PTR [rcx+0x8]
   14000af7e:	xor    r8d,r8d
   14000af81:	cmp    edx,0x1
   14000af84:	jb     0x14000af95
   14000af86:	mov    ecx,edx
   14000af88:	mov    r8,rax
   14000af8b:	mov    rax,QWORD PTR [rax+0x18]
   14000af8f:	sub    rcx,0x1
   14000af93:	jne    0x14000af88
   14000af95:	test   r9,r9
   14000af98:	je     0x14000afa0
   14000af9a:	mov    QWORD PTR [r9],r8
   14000af9d:	ret    
   14000af9e:	xor    eax,eax
   14000afa0:	ret    
   14000afa1:	int3   
   14000afa2:	int3   
   14000afa3:	int3   
   14000afa4:	int3   
   14000afa5:	int3   
   14000afa6:	int3   
   14000afa7:	int3   
   14000afa8:	mov    QWORD PTR [rsp+0x8],rbx
   14000afad:	mov    QWORD PTR [rsp+0x10],rbp
   14000afb2:	mov    QWORD PTR [rsp+0x18],rsi
   14000afb7:	push   rdi
   14000afb8:	sub    rsp,0x20
   14000afbc:	mov    rdi,r9
   14000afbf:	mov    esi,r8d
   14000afc2:	mov    ebp,edx
   14000afc4:	mov    rbx,rcx
   14000afc7:	test   rcx,rcx
   14000afca:	je     0x14000b025
   14000afcc:	cmp    DWORD PTR [rcx],0x9
   14000afcf:	jne    0x14000b025
   14000afd1:	cmp    DWORD PTR [rcx+0x4],0xffffffff
   14000afd5:	je     0x14000b025
   14000afd7:	mov    ecx,0x20
   14000afdc:	call   0x14000a3f8
   14000afe1:	mov    rcx,rax
   14000afe4:	test   rax,rax
   14000afe7:	je     0x14000b025
   14000afe9:	and    QWORD PTR [rax+0x18],0x0
   14000afee:	mov    DWORD PTR [rax+0x4],ebp
   14000aff1:	mov    DWORD PTR [rax+0x8],esi
   14000aff4:	mov    QWORD PTR [rax+0x10],rdi
   14000aff8:	mov    DWORD PTR [rax],0x63
   14000affe:	inc    DWORD PTR [rbx+0x4]
   14000b001:	cmp    QWORD PTR [rbx+0x8],0x0
   14000b006:	jne    0x14000b012
   14000b008:	mov    QWORD PTR [rbx+0x10],rax
   14000b00c:	mov    QWORD PTR [rbx+0x8],rax
   14000b010:	jmp    0x14000b01e
   14000b012:	mov    rax,QWORD PTR [rbx+0x10]
   14000b016:	mov    QWORD PTR [rax+0x18],rcx
   14000b01a:	mov    QWORD PTR [rbx+0x10],rcx
   14000b01e:	mov    eax,DWORD PTR [rbx+0x4]
   14000b021:	dec    eax
   14000b023:	jmp    0x14000b028
   14000b025:	or     eax,0xffffffff
   14000b028:	mov    rbx,QWORD PTR [rsp+0x30]
   14000b02d:	mov    rbp,QWORD PTR [rsp+0x38]
   14000b032:	mov    rsi,QWORD PTR [rsp+0x40]
   14000b037:	add    rsp,0x20
   14000b03b:	pop    rdi
   14000b03c:	ret    
   14000b03d:	int3   
   14000b03e:	int3   
   14000b03f:	int3   
   14000b040:	int3   
   14000b041:	int3   
   14000b042:	int3   
   14000b043:	int3   
   14000b044:	test   rcx,rcx
   14000b047:	je     0x14000b0bd
   14000b049:	push   rbx
   14000b04a:	sub    rsp,0x20
   14000b04e:	mov    edx,DWORD PTR [rcx+0x4]
   14000b051:	cmp    edx,0x70000
   14000b057:	ja     0x14000b06e
   14000b059:	add    edx,0xfffe0000
   14000b05f:	cmp    edx,0x50000
   14000b065:	ja     0x14000b0b8
   14000b067:	test   dx,dx
   14000b06a:	je     0x14000b08b
   14000b06c:	jmp    0x14000b0b8
   14000b06e:	cmp    edx,0x80000
   14000b074:	je     0x14000b096
   14000b076:	lea    eax,[rdx-0x90000]
   14000b07c:	test   eax,0xfffcffff
   14000b081:	jne    0x14000b0b8
   14000b083:	cmp    edx,0xc0000
   14000b089:	je     0x14000b0b8
   14000b08b:	add    rcx,0x10
   14000b08f:	call   0x14000a31c
   14000b094:	jmp    0x14000b0b8
   14000b096:	lea    rbx,[rcx+0x10]
   14000b09a:	mov    rcx,QWORD PTR [rbx]
   14000b09d:	test   rcx,rcx
   14000b0a0:	je     0x14000b0b4
   14000b0a2:	cmp    DWORD PTR [rcx],0x9
   14000b0a5:	jne    0x14000b0b4
   14000b0a7:	call   0x14000b1d4
   14000b0ac:	mov    rcx,rbx
   14000b0af:	call   0x14000a31c
   14000b0b4:	and    QWORD PTR [rbx],0x0
   14000b0b8:	add    rsp,0x20
   14000b0bc:	pop    rbx
   14000b0bd:	ret    
   14000b0be:	int3   
   14000b0bf:	int3   
   14000b0c0:	int3   
   14000b0c1:	int3   
   14000b0c2:	int3   
   14000b0c3:	int3   
   14000b0c4:	mov    QWORD PTR [rsp+0x8],rbx
   14000b0c9:	mov    QWORD PTR [rsp+0x10],rbp
   14000b0ce:	mov    QWORD PTR [rsp+0x18],rsi
   14000b0d3:	push   rdi
   14000b0d4:	push   r14
   14000b0d6:	push   r15
   14000b0d8:	sub    rsp,0x20
   14000b0dc:	mov    r15d,r9d
   14000b0df:	mov    r14,r8
   14000b0e2:	mov    esi,edx
   14000b0e4:	mov    rbp,rcx
   14000b0e7:	test   rcx,rcx
   14000b0ea:	je     0x14000b17c
   14000b0f0:	cmp    DWORD PTR [rcx],0x9
   14000b0f3:	jne    0x14000b17c
   14000b0f9:	mov    rdi,QWORD PTR [rcx+0x8]
   14000b0fd:	xor    ebx,ebx
   14000b0ff:	cmp    DWORD PTR [rcx+0x4],ebx
   14000b102:	jbe    0x14000b17c
   14000b104:	cmp    DWORD PTR [rdi+0x4],esi
   14000b107:	jne    0x14000b171
   14000b109:	cmp    esi,0x20000
   14000b10f:	je     0x14000b15b
   14000b111:	cmp    esi,0x30000
   14000b117:	je     0x14000b150
   14000b119:	cmp    esi,0x40000
   14000b11f:	je     0x14000b150
   14000b121:	cmp    esi,0x60000
   14000b127:	je     0x14000b142
   14000b129:	cmp    esi,0x70000
   14000b12f:	jne    0x14000b171
   14000b131:	mov    rax,QWORD PTR [rdi+0x10]
   14000b135:	movsd  xmm0,QWORD PTR [rax]
   14000b139:	ucomisd xmm0,QWORD PTR [r14]
   14000b13e:	jp     0x14000b171
   14000b140:	jmp    0x14000b16f
   14000b142:	mov    rax,QWORD PTR [rdi+0x10]
   14000b146:	movss  xmm0,DWORD PTR [rax]
   14000b14a:	ucomiss xmm0,DWORD PTR [r14]
   14000b14e:	jmp    0x14000b13e
   14000b150:	mov    rcx,QWORD PTR [rdi+0x10]
   14000b154:	mov    eax,DWORD PTR [r14]
   14000b157:	cmp    DWORD PTR [rcx],eax
   14000b159:	jmp    0x14000b16f
   14000b15b:	mov    rcx,QWORD PTR [rdi+0x10]
   14000b15f:	xor    r9d,r9d
   14000b162:	mov    r8d,r15d
   14000b165:	mov    rdx,r14
   14000b168:	call   0x14000990c
   14000b16d:	test   eax,eax
   14000b16f:	je     0x14000b198
   14000b171:	mov    rdi,QWORD PTR [rdi+0x18]
   14000b175:	inc    ebx
   14000b177:	cmp    ebx,DWORD PTR [rbp+0x4]
   14000b17a:	jb     0x14000b104
   14000b17c:	or     eax,0xffffffff
   14000b17f:	mov    rbx,QWORD PTR [rsp+0x40]
   14000b184:	mov    rbp,QWORD PTR [rsp+0x48]
   14000b189:	mov    rsi,QWORD PTR [rsp+0x50]
   14000b18e:	add    rsp,0x20
   14000b192:	pop    r15
   14000b194:	pop    r14
   14000b196:	pop    rdi
   14000b197:	ret    
   14000b198:	mov    eax,ebx
   14000b19a:	jmp    0x14000b17f
   14000b19c:	int3   
   14000b19d:	int3   
   14000b19e:	int3   
   14000b19f:	int3   
   14000b1a0:	int3   
   14000b1a1:	int3   
   14000b1a2:	int3   
   14000b1a3:	int3   
   14000b1a4:	sub    rsp,0x28
   14000b1a8:	mov    ecx,0x18
   14000b1ad:	call   0x14000a3f8
   14000b1b2:	xor    ecx,ecx
   14000b1b4:	test   rax,rax
   14000b1b7:	je     0x14000b1c8
   14000b1b9:	mov    QWORD PTR [rax],0x9
   14000b1c0:	mov    QWORD PTR [rax+0x8],rcx
   14000b1c4:	mov    QWORD PTR [rax+0x10],rcx
   14000b1c8:	add    rsp,0x28
   14000b1cc:	ret    
   14000b1cd:	int3   
   14000b1ce:	int3   
   14000b1cf:	int3   
   14000b1d0:	int3   
   14000b1d1:	int3   
   14000b1d2:	int3   
   14000b1d3:	int3   
   14000b1d4:	test   rcx,rcx
   14000b1d7:	je     0x14000b234
   14000b1d9:	mov    QWORD PTR [rsp+0x10],rbx
   14000b1de:	push   rdi
   14000b1df:	sub    rsp,0x20
   14000b1e3:	cmp    DWORD PTR [rcx],0x9
   14000b1e6:	mov    rdi,rcx
   14000b1e9:	jne    0x14000b22a
   14000b1eb:	mov    rax,QWORD PTR [rcx+0x8]
   14000b1ef:	mov    QWORD PTR [rsp+0x30],rax
   14000b1f4:	test   rax,rax
   14000b1f7:	je     0x14000b21c
   14000b1f9:	mov    rbx,QWORD PTR [rax+0x18]
   14000b1fd:	mov    rcx,rax
   14000b200:	call   0x14000b044
   14000b205:	lea    rcx,[rsp+0x30]
   14000b20a:	call   0x14000a31c
   14000b20f:	mov    QWORD PTR [rsp+0x30],rbx
   14000b214:	mov    rax,rbx
   14000b217:	test   rbx,rbx
   14000b21a:	jne    0x14000b1f9
   14000b21c:	and    DWORD PTR [rdi+0x4],0x0
   14000b220:	and    QWORD PTR [rdi+0x8],0x0
   14000b225:	and    QWORD PTR [rdi+0x10],0x0
   14000b22a:	mov    rbx,QWORD PTR [rsp+0x38]
   14000b22f:	add    rsp,0x20
   14000b233:	pop    rdi
   14000b234:	ret    
   14000b235:	int3   
   14000b236:	int3   
   14000b237:	int3   
   14000b238:	int3   
   14000b239:	int3   
   14000b23a:	int3   
   14000b23b:	int3   
   14000b23c:	rex push rbx
   14000b23e:	sub    rsp,0x20
   14000b242:	mov    rbx,rcx
   14000b245:	mov    rcx,QWORD PTR [rcx]
   14000b248:	call   0x14000b1d4
   14000b24d:	mov    rcx,rbx
   14000b250:	add    rsp,0x20
   14000b254:	pop    rbx
   14000b255:	jmp    0x14000a31c
   14000b25a:	int3   
   14000b25b:	int3   
   14000b25c:	int3   
   14000b25d:	int3   
   14000b25e:	int3   
   14000b25f:	int3   
   14000b260:	mov    QWORD PTR [rsp+0x10],rbx
   14000b265:	mov    QWORD PTR [rsp+0x18],rbp
   14000b26a:	push   rsi
   14000b26b:	push   rdi
   14000b26c:	push   r14
   14000b26e:	sub    rsp,0x20
   14000b272:	mov    rbp,rdx
   14000b275:	mov    rbx,rcx
   14000b278:	test   rcx,rcx
   14000b27b:	je     0x14000b2d7
   14000b27d:	cmp    DWORD PTR [rcx],0x9
   14000b280:	jne    0x14000b2d7
   14000b282:	mov    rcx,rdx
   14000b285:	call   QWORD PTR [rip+0x4ebd]        # 0x140010148
   14000b28b:	lea    edi,[rax+0x1]
   14000b28e:	lea    r14d,[rdi+rdi*1]
   14000b292:	mov    ecx,r14d
   14000b295:	call   0x14000a3f8
   14000b29a:	mov    QWORD PTR [rsp+0x40],rax
   14000b29f:	mov    rsi,rax
   14000b2a2:	test   rax,rax
   14000b2a5:	je     0x14000b2d7
   14000b2a7:	mov    r8d,edi
   14000b2aa:	mov    rdx,rbp
   14000b2ad:	mov    rcx,rax
   14000b2b0:	call   0x140009774
   14000b2b5:	mov    r9,rsi
   14000b2b8:	mov    r8d,r14d
   14000b2bb:	mov    edx,0x20000
   14000b2c0:	mov    rcx,rbx
   14000b2c3:	call   0x14000afa8
   14000b2c8:	cmp    eax,0xffffffff
   14000b2cb:	jne    0x14000b2da
   14000b2cd:	lea    rcx,[rsp+0x40]
   14000b2d2:	call   0x14000a31c
   14000b2d7:	or     eax,0xffffffff
   14000b2da:	mov    rbx,QWORD PTR [rsp+0x48]
   14000b2df:	mov    rbp,QWORD PTR [rsp+0x50]
   14000b2e4:	add    rsp,0x20
   14000b2e8:	pop    r14
   14000b2ea:	pop    rdi
   14000b2eb:	pop    rsi
   14000b2ec:	ret    
   14000b2ed:	int3   
   14000b2ee:	int3   
   14000b2ef:	int3   
   14000b2f0:	int3   
   14000b2f1:	int3   
   14000b2f2:	int3   
   14000b2f3:	int3   
   14000b2f4:	mov    QWORD PTR [rsp+0x10],rbx
   14000b2f9:	push   rdi
   14000b2fa:	sub    rsp,0x20
   14000b2fe:	mov    edi,edx
   14000b300:	mov    rbx,rcx
   14000b303:	test   rcx,rcx
   14000b306:	je     0x14000b348
   14000b308:	cmp    DWORD PTR [rcx],0x9
   14000b30b:	jne    0x14000b348
   14000b30d:	mov    ecx,0x4
   14000b312:	call   0x14000a3f8
   14000b317:	mov    QWORD PTR [rsp+0x30],rax
   14000b31c:	test   rax,rax
   14000b31f:	je     0x14000b348
   14000b321:	mov    r9,rax
   14000b324:	mov    DWORD PTR [rax],edi
   14000b326:	mov    edx,0x30000
   14000b32b:	mov    r8d,0x4
   14000b331:	mov    rcx,rbx
   14000b334:	call   0x14000afa8
   14000b339:	cmp    eax,0xffffffff
   14000b33c:	jne    0x14000b34b
   14000b33e:	lea    rcx,[rsp+0x30]
   14000b343:	call   0x14000a31c
   14000b348:	or     eax,0xffffffff
   14000b34b:	mov    rbx,QWORD PTR [rsp+0x38]
   14000b350:	add    rsp,0x20
   14000b354:	pop    rdi
   14000b355:	ret    
   14000b356:	int3   
   14000b357:	int3   
   14000b358:	int3   
   14000b359:	int3   
   14000b35a:	int3   
   14000b35b:	int3   
   14000b35c:	mov    QWORD PTR [rsp+0x10],rbx
   14000b361:	push   rdi
   14000b362:	sub    rsp,0x20
   14000b366:	mov    edi,edx
   14000b368:	mov    rbx,rcx
   14000b36b:	test   rcx,rcx
   14000b36e:	je     0x14000b3b0
   14000b370:	cmp    DWORD PTR [rcx],0x9
   14000b373:	jne    0x14000b3b0
   14000b375:	mov    ecx,0x4
   14000b37a:	call   0x14000a3f8
   14000b37f:	mov    QWORD PTR [rsp+0x30],rax
   14000b384:	test   rax,rax
   14000b387:	je     0x14000b3b0
   14000b389:	mov    r9,rax
   14000b38c:	mov    DWORD PTR [rax],edi
   14000b38e:	mov    edx,0x40000
   14000b393:	mov    r8d,0x4
   14000b399:	mov    rcx,rbx
   14000b39c:	call   0x14000afa8
   14000b3a1:	cmp    eax,0xffffffff
   14000b3a4:	jne    0x14000b3b3
   14000b3a6:	lea    rcx,[rsp+0x30]
   14000b3ab:	call   0x14000a31c
   14000b3b0:	or     eax,0xffffffff
   14000b3b3:	mov    rbx,QWORD PTR [rsp+0x38]
   14000b3b8:	add    rsp,0x20
   14000b3bc:	pop    rdi
   14000b3bd:	ret    
   14000b3be:	int3   
   14000b3bf:	int3   
   14000b3c0:	int3   
   14000b3c1:	int3   
   14000b3c2:	int3   
   14000b3c3:	int3   
   14000b3c4:	rex push rbx
   14000b3c6:	sub    rsp,0x30
   14000b3ca:	movaps XMMWORD PTR [rsp+0x20],xmm6
   14000b3cf:	movaps xmm6,xmm1
   14000b3d2:	mov    rbx,rcx
   14000b3d5:	test   rcx,rcx
   14000b3d8:	je     0x14000b41c
   14000b3da:	cmp    DWORD PTR [rcx],0x9
   14000b3dd:	jne    0x14000b41c
   14000b3df:	mov    ecx,0x4
   14000b3e4:	call   0x14000a3f8
   14000b3e9:	mov    QWORD PTR [rsp+0x40],rax
   14000b3ee:	test   rax,rax
   14000b3f1:	je     0x14000b41c
   14000b3f3:	mov    r9,rax
   14000b3f6:	movss  DWORD PTR [rax],xmm6
   14000b3fa:	mov    edx,0x60000
   14000b3ff:	mov    r8d,0x4
   14000b405:	mov    rcx,rbx
   14000b408:	call   0x14000afa8
   14000b40d:	cmp    eax,0xffffffff
   14000b410:	jne    0x14000b41f
   14000b412:	lea    rcx,[rsp+0x40]
   14000b417:	call   0x14000a31c
   14000b41c:	or     eax,0xffffffff
   14000b41f:	movaps xmm6,XMMWORD PTR [rsp+0x20]
   14000b424:	add    rsp,0x30
   14000b428:	pop    rbx
   14000b429:	ret    
   14000b42a:	int3   
   14000b42b:	int3   
   14000b42c:	int3   
   14000b42d:	int3   
   14000b42e:	int3   
   14000b42f:	int3   
   14000b430:	rex push rbx
   14000b432:	sub    rsp,0x30
   14000b436:	movaps XMMWORD PTR [rsp+0x20],xmm6
   14000b43b:	movaps xmm6,xmm1
   14000b43e:	mov    rbx,rcx
   14000b441:	test   rcx,rcx
   14000b444:	je     0x14000b488
   14000b446:	cmp    DWORD PTR [rcx],0x9
   14000b449:	jne    0x14000b488
   14000b44b:	mov    ecx,0x8
   14000b450:	call   0x14000a3f8
   14000b455:	mov    QWORD PTR [rsp+0x40],rax
   14000b45a:	test   rax,rax
   14000b45d:	je     0x14000b488
   14000b45f:	mov    r9,rax
   14000b462:	movsd  QWORD PTR [rax],xmm6
   14000b466:	mov    edx,0x70000
   14000b46b:	mov    r8d,0x8
   14000b471:	mov    rcx,rbx
   14000b474:	call   0x14000afa8
   14000b479:	cmp    eax,0xffffffff
   14000b47c:	jne    0x14000b48b
   14000b47e:	lea    rcx,[rsp+0x40]
   14000b483:	call   0x14000a31c
   14000b488:	or     eax,0xffffffff
   14000b48b:	movaps xmm6,XMMWORD PTR [rsp+0x20]
   14000b490:	add    rsp,0x30
   14000b494:	pop    rbx
   14000b495:	ret    
   14000b496:	int3   
   14000b497:	int3   
   14000b498:	int3   
   14000b499:	int3   
   14000b49a:	int3   
   14000b49b:	int3   
   14000b49c:	mov    QWORD PTR [rsp+0x10],rbx
   14000b4a1:	mov    QWORD PTR [rsp+0x18],rbp
   14000b4a6:	mov    QWORD PTR [rsp+0x20],rsi
   14000b4ab:	push   rdi
   14000b4ac:	sub    rsp,0x20
   14000b4b0:	xor    edi,edi
   14000b4b2:	mov    esi,edx
   14000b4b4:	mov    rbp,rcx
   14000b4b7:	test   rcx,rcx
   14000b4ba:	je     0x14000b52d
   14000b4bc:	cmp    DWORD PTR [rcx],0x9
   14000b4bf:	jne    0x14000b52d
   14000b4c1:	call   0x14000b1a4
   14000b4c6:	mov    QWORD PTR [rsp+0x30],rax
   14000b4cb:	mov    rbx,rax
   14000b4ce:	test   rax,rax
   14000b4d1:	je     0x14000b52d
   14000b4d3:	cmp    DWORD PTR [rax],0x9
   14000b4d6:	jne    0x14000b52d
   14000b4d8:	test   esi,esi
   14000b4da:	je     0x14000b4f7
   14000b4dc:	xor    r9d,r9d
   14000b4df:	xor    r8d,r8d
   14000b4e2:	xor    edx,edx
   14000b4e4:	mov    rcx,rbx
   14000b4e7:	call   0x14000afa8
   14000b4ec:	cmp    eax,0xffffffff
   14000b4ef:	je     0x14000b4f7
   14000b4f1:	inc    edi
   14000b4f3:	cmp    edi,esi
   14000b4f5:	jb     0x14000b4dc
   14000b4f7:	cmp    edi,esi
   14000b4f9:	jne    0x14000b516
   14000b4fb:	mov    r9,rbx
   14000b4fe:	mov    edx,0x80000
   14000b503:	mov    r8d,0x8
   14000b509:	mov    rcx,rbp
   14000b50c:	call   0x14000afa8
   14000b511:	cmp    eax,0xffffffff
   14000b514:	jne    0x14000b530
   14000b516:	cmp    DWORD PTR [rbx],0x9
   14000b519:	jne    0x14000b52d
   14000b51b:	mov    rcx,rbx
   14000b51e:	call   0x14000b1d4
   14000b523:	lea    rcx,[rsp+0x30]
   14000b528:	call   0x14000a31c
   14000b52d:	or     eax,0xffffffff
   14000b530:	mov    rbx,QWORD PTR [rsp+0x38]
   14000b535:	mov    rbp,QWORD PTR [rsp+0x40]
   14000b53a:	mov    rsi,QWORD PTR [rsp+0x48]
   14000b53f:	add    rsp,0x20
   14000b543:	pop    rdi
   14000b544:	ret    
   14000b545:	int3   
   14000b546:	int3   
   14000b547:	int3   
   14000b548:	int3   
   14000b549:	int3   
   14000b54a:	int3   
   14000b54b:	int3   
   14000b54c:	mov    QWORD PTR [rsp+0x8],rbx
   14000b551:	mov    QWORD PTR [rsp+0x10],rsi
   14000b556:	push   rdi
   14000b557:	sub    rsp,0x20
   14000b55b:	xor    ebx,ebx
   14000b55d:	mov    esi,edx
   14000b55f:	mov    rdi,rcx
   14000b562:	test   rcx,rcx
   14000b565:	je     0x14000b58f
   14000b567:	cmp    DWORD PTR [rcx],0x9
   14000b56a:	jne    0x14000b58f
   14000b56c:	test   edx,edx
   14000b56e:	je     0x14000b58b
   14000b570:	xor    r9d,r9d
   14000b573:	xor    r8d,r8d
   14000b576:	xor    edx,edx
   14000b578:	mov    rcx,rdi
   14000b57b:	call   0x14000afa8
   14000b580:	cmp    eax,0xffffffff
   14000b583:	je     0x14000b58b
   14000b585:	inc    ebx
   14000b587:	cmp    ebx,esi
   14000b589:	jb     0x14000b570
   14000b58b:	mov    eax,ebx
   14000b58d:	jmp    0x14000b592
   14000b58f:	or     eax,0xffffffff
   14000b592:	mov    rbx,QWORD PTR [rsp+0x30]
   14000b597:	mov    rsi,QWORD PTR [rsp+0x38]
   14000b59c:	add    rsp,0x20
   14000b5a0:	pop    rdi
   14000b5a1:	ret    
   14000b5a2:	int3   
   14000b5a3:	int3   
   14000b5a4:	int3   
   14000b5a5:	int3   
   14000b5a6:	int3   
   14000b5a7:	int3   
   14000b5a8:	sub    rsp,0x28
   14000b5ac:	and    QWORD PTR [rsp+0x30],0x0
   14000b5b2:	lea    r8,[rsp+0x30]
   14000b5b7:	mov    r10,rcx
   14000b5ba:	call   0x14000af68
   14000b5bf:	mov    QWORD PTR [rsp+0x40],rax
   14000b5c4:	mov    rcx,rax
   14000b5c7:	test   rax,rax
   14000b5ca:	je     0x14000b606
   14000b5cc:	mov    rdx,QWORD PTR [rsp+0x30]
   14000b5d1:	mov    rax,QWORD PTR [rax+0x18]
   14000b5d5:	test   rdx,rdx
   14000b5d8:	je     0x14000b5e0
   14000b5da:	mov    QWORD PTR [rdx+0x18],rax
   14000b5de:	jmp    0x14000b5e4
   14000b5e0:	mov    QWORD PTR [r10+0x8],rax
   14000b5e4:	cmp    rcx,QWORD PTR [r10+0x10]
   14000b5e8:	jne    0x14000b5ee
   14000b5ea:	mov    QWORD PTR [r10+0x10],rdx
   14000b5ee:	dec    DWORD PTR [r10+0x4]
   14000b5f2:	call   0x14000b044
   14000b5f7:	lea    rcx,[rsp+0x40]
   14000b5fc:	call   0x14000a31c
   14000b601:	mov    eax,0x1
   14000b606:	add    rsp,0x28
   14000b60a:	ret    
   14000b60b:	int3   
   14000b60c:	int3   
   14000b60d:	int3   
   14000b60e:	int3   
   14000b60f:	int3   
   14000b610:	int3   
   14000b611:	int3   
   14000b612:	int3   
   14000b613:	int3   
   14000b614:	sub    rsp,0x28
   14000b618:	mov    rcx,QWORD PTR [rip+0xa119]        # 0x140015738
   14000b61f:	xor    r8d,r8d
   14000b622:	call   0x14000af68
   14000b627:	xor    ecx,ecx
   14000b629:	test   rax,rax
   14000b62c:	je     0x14000b64c
   14000b62e:	cmp    DWORD PTR [rax+0x4],0x80000
   14000b635:	jne    0x14000b64c
   14000b637:	mov    rax,QWORD PTR [rax+0x10]
   14000b63b:	test   rax,rax
   14000b63e:	je     0x14000b648
   14000b640:	cmp    DWORD PTR [rax],0x9
   14000b643:	jne    0x14000b648
   14000b645:	mov    ecx,DWORD PTR [rax+0x4]
   14000b648:	mov    eax,ecx
   14000b64a:	jmp    0x14000b64e
   14000b64c:	xor    eax,eax
   14000b64e:	add    rsp,0x28
   14000b652:	ret    
   14000b653:	int3   
   14000b654:	int3   
   14000b655:	int3   
   14000b656:	int3   
   14000b657:	int3   
   14000b658:	int3   
   14000b659:	int3   
   14000b65a:	int3   
   14000b65b:	int3   
   14000b65c:	sub    rsp,0x28
   14000b660:	xor    r8d,r8d
   14000b663:	call   0x14000af68
   14000b668:	test   rax,rax
   14000b66b:	jne    0x14000b671
   14000b66d:	xor    eax,eax
   14000b66f:	jmp    0x14000b687
   14000b671:	cmp    DWORD PTR [rax+0x4],0x10000
   14000b678:	je     0x14000b683
   14000b67a:	cmp    DWORD PTR [rax+0x4],0x80000
   14000b681:	jne    0x14000b66d
   14000b683:	mov    rax,QWORD PTR [rax+0x10]
   14000b687:	add    rsp,0x28
   14000b68b:	ret    
   14000b68c:	int3   
   14000b68d:	int3   
   14000b68e:	int3   
   14000b68f:	int3   
   14000b690:	int3   
   14000b691:	int3   
   14000b692:	int3   
   14000b693:	int3   
   14000b694:	rex push rbx
   14000b696:	sub    rsp,0x20
   14000b69a:	mov    rbx,rcx
   14000b69d:	mov    eax,r8d
   14000b6a0:	xor    ecx,ecx
   14000b6a2:	mov    r9,rdx
   14000b6a5:	mov    QWORD PTR [rsp+0x30],rcx
   14000b6aa:	xor    r8d,r8d
   14000b6ad:	mov    edx,eax
   14000b6af:	mov    QWORD PTR [rbx],rcx
   14000b6b2:	mov    QWORD PTR [rbx+0x8],rcx
   14000b6b6:	mov    rcx,r9
   14000b6b9:	call   0x14000af68
   14000b6be:	mov    rdx,rax
   14000b6c1:	test   rax,rax
   14000b6c4:	je     0x14000b701
   14000b6c6:	mov    ecx,DWORD PTR [rax+0x4]
   14000b6c9:	lea    eax,[rcx-0xa0000]
   14000b6cf:	test   eax,0xfffeffff
   14000b6d4:	jne    0x14000b701
   14000b6d6:	mov    rax,QWORD PTR [rdx+0x10]
   14000b6da:	cmp    ecx,0xa0000
   14000b6e0:	jne    0x14000b6eb
   14000b6e2:	movups xmm0,XMMWORD PTR [rax]
   14000b6e5:	movdqu XMMWORD PTR [rbx],xmm0
   14000b6e9:	jmp    0x14000b701
   14000b6eb:	mov    rcx,QWORD PTR [rax]
   14000b6ee:	mov    rdx,rbx
   14000b6f1:	mov    QWORD PTR [rsp+0x30],rcx
   14000b6f6:	lea    rcx,[rsp+0x30]
   14000b6fb:	call   QWORD PTR [rip+0x4a67]        # 0x140010168
   14000b701:	mov    rax,rbx
   14000b704:	add    rsp,0x20
   14000b708:	pop    rbx
   14000b709:	ret    
   14000b70a:	int3   
   14000b70b:	int3   
   14000b70c:	int3   
   14000b70d:	int3   
   14000b70e:	int3   
   14000b70f:	int3   
   14000b710:	rex push rbx
   14000b712:	push   rbp
   14000b713:	push   rsi
   14000b714:	push   rdi
   14000b715:	sub    rsp,0x238
   14000b71c:	mov    rax,QWORD PTR [rip+0x98e5]        # 0x140015008
   14000b723:	xor    rax,rsp
   14000b726:	mov    QWORD PTR [rsp+0x220],rax
   14000b72e:	and    DWORD PTR [rsp+0x20],0x0
   14000b733:	mov    rdi,r8
   14000b736:	mov    ebp,edx
   14000b738:	mov    rbx,rcx
   14000b73b:	xor    edx,edx
   14000b73d:	lea    rcx,[rsp+0x24]
   14000b742:	mov    r8d,0x1fa
   14000b748:	mov    esi,r9d
   14000b74b:	call   0x14000ed52
   14000b750:	test   esi,esi
   14000b752:	jne    0x14000b75b
   14000b754:	xor    eax,eax
   14000b756:	jmp    0x14000b81f
   14000b75b:	xor    r8d,r8d
   14000b75e:	mov    edx,ebp
   14000b760:	mov    rcx,rbx
   14000b763:	call   0x14000af68
   14000b768:	mov    rbx,rax
   14000b76b:	test   rax,rax
   14000b76e:	je     0x14000b754
   14000b770:	mov    r8d,esi
   14000b773:	lea    rdx,[rip+0x4eb2]        # 0x14001062c
   14000b77a:	mov    rcx,rdi
   14000b77d:	call   0x140009774
   14000b782:	mov    eax,DWORD PTR [rbx+0x4]
   14000b785:	cmp    eax,0x20000
   14000b78a:	je     0x14000b807
   14000b78c:	cmp    eax,0x30000
   14000b791:	je     0x14000b7fe
   14000b793:	cmp    eax,0x40000
   14000b798:	je     0x14000b7df
   14000b79a:	cmp    eax,0x60000
   14000b79f:	je     0x14000b7d2
   14000b7a1:	cmp    eax,0x70000
   14000b7a6:	jne    0x14000b816
   14000b7a8:	mov    rax,QWORD PTR [rbx+0x10]
   14000b7ac:	movsd  xmm3,QWORD PTR [rax]
   14000b7b0:	movq   r9,xmm3
   14000b7b5:	lea    r8,[rip+0x54d4]        # 0x140010c90
   14000b7bc:	mov    edx,0xfe
   14000b7c1:	lea    rcx,[rsp+0x20]
   14000b7c6:	call   0x140006ca4
   14000b7cb:	lea    rdx,[rsp+0x20]
   14000b7d0:	jmp    0x14000b80b
   14000b7d2:	mov    rax,QWORD PTR [rbx+0x10]
   14000b7d6:	movss  xmm3,DWORD PTR [rax]
   14000b7da:	cvtps2pd xmm3,xmm3
   14000b7dd:	jmp    0x14000b7b0
   14000b7df:	lea    r8,[rip+0x54a2]        # 0x140010c88
   14000b7e6:	mov    rax,QWORD PTR [rbx+0x10]
   14000b7ea:	lea    rcx,[rsp+0x20]
   14000b7ef:	mov    edx,0xfe
   14000b7f4:	mov    r9d,DWORD PTR [rax]
   14000b7f7:	call   0x140006ca4
   14000b7fc:	jmp    0x14000b7cb
   14000b7fe:	lea    r8,[rip+0x547b]        # 0x140010c80
   14000b805:	jmp    0x14000b7e6
   14000b807:	mov    rdx,QWORD PTR [rbx+0x10]
   14000b80b:	mov    r8d,esi
   14000b80e:	mov    rcx,rdi
   14000b811:	call   0x140009774
   14000b816:	mov    rcx,rdi
   14000b819:	call   QWORD PTR [rip+0x4929]        # 0x140010148
   14000b81f:	mov    rcx,QWORD PTR [rsp+0x220]
   14000b827:	xor    rcx,rsp
   14000b82a:	call   0x14000e560
   14000b82f:	add    rsp,0x238
   14000b836:	pop    rdi
   14000b837:	pop    rsi
   14000b838:	pop    rbp
   14000b839:	pop    rbx
   14000b83a:	ret    
   14000b83b:	int3   
   14000b83c:	int3   
   14000b83d:	int3   
   14000b83e:	int3   
   14000b83f:	int3   
   14000b840:	int3   
   14000b841:	int3   
   14000b842:	int3   
   14000b843:	int3   
   14000b844:	sub    rsp,0x28
   14000b848:	mov    rcx,QWORD PTR [rip+0x9ee9]        # 0x140015738
   14000b84f:	mov    r10d,r8d
   14000b852:	xor    r8d,r8d
   14000b855:	lea    edx,[r8+0x3]
   14000b859:	call   0x14000af68
   14000b85e:	test   rax,rax
   14000b861:	je     0x14000b87c
   14000b863:	cmp    DWORD PTR [rax+0x4],0x80000
   14000b86a:	jne    0x14000b87c
   14000b86c:	mov    rcx,QWORD PTR [rax+0x10]
   14000b870:	mov    edx,r10d
   14000b873:	add    rsp,0x28
   14000b877:	jmp    0x14000b65c
   14000b87c:	xor    eax,eax
   14000b87e:	add    rsp,0x28
   14000b882:	ret    
   14000b883:	int3   
   14000b884:	int3   
   14000b885:	int3   
   14000b886:	int3   
   14000b887:	int3   
   14000b888:	int3   
   14000b889:	int3   
   14000b88a:	int3   
   14000b88b:	int3   
   14000b88c:	sub    rsp,0x28
   14000b890:	mov    r11d,r8d
   14000b893:	xor    r8d,r8d
   14000b896:	call   0x14000af68
   14000b89b:	xor    r10d,r10d
   14000b89e:	test   rax,rax
   14000b8a1:	je     0x14000b8d2
   14000b8a3:	cmp    DWORD PTR [rax+0x4],0x80000
   14000b8aa:	jne    0x14000b8d2
   14000b8ac:	mov    rcx,QWORD PTR [rax+0x10]
   14000b8b0:	xor    r8d,r8d
   14000b8b3:	mov    edx,r11d
   14000b8b6:	call   0x14000af68
   14000b8bb:	test   rax,rax
   14000b8be:	je     0x14000b8cd
   14000b8c0:	cmp    DWORD PTR [rax+0x4],0x20000
   14000b8c7:	jne    0x14000b8cd
   14000b8c9:	mov    r10,QWORD PTR [rax+0x10]
   14000b8cd:	mov    rax,r10
   14000b8d0:	jmp    0x14000b8d4
   14000b8d2:	xor    eax,eax
   14000b8d4:	add    rsp,0x28
   14000b8d8:	ret    
   14000b8d9:	int3   
   14000b8da:	int3   
   14000b8db:	int3   
   14000b8dc:	int3   
   14000b8dd:	int3   
   14000b8de:	int3   
   14000b8df:	int3   
   14000b8e0:	mov    rax,rsp
   14000b8e3:	mov    QWORD PTR [rax+0x8],rbx
   14000b8e7:	mov    QWORD PTR [rax+0x10],rbp
   14000b8eb:	mov    QWORD PTR [rax+0x18],rsi
   14000b8ef:	mov    QWORD PTR [rax+0x20],rdi
   14000b8f3:	push   r14
   14000b8f5:	sub    rsp,0x20
   14000b8f9:	mov    r14,r8
   14000b8fc:	xor    r8d,r8d
   14000b8ff:	call   0x14000af68
   14000b904:	mov    rdi,rax
   14000b907:	test   rax,rax
   14000b90a:	jne    0x14000b913
   14000b90c:	xor    eax,eax
   14000b90e:	jmp    0x14000b993
   14000b913:	test   DWORD PTR [rax+0x4],0xfffdffff
   14000b91a:	jne    0x14000b90c
   14000b91c:	mov    rcx,r14
   14000b91f:	call   QWORD PTR [rip+0x4823]        # 0x140010148
   14000b925:	cmp    DWORD PTR [rdi+0x4],0x0
   14000b929:	lea    esi,[rax+0x1]
   14000b92c:	jne    0x14000b94d
   14000b92e:	lea    ebx,[rsi+rsi*1]
   14000b931:	mov    ecx,ebx
   14000b933:	call   0x14000a3f8
   14000b938:	mov    QWORD PTR [rdi+0x10],rax
   14000b93c:	test   rax,rax
   14000b93f:	je     0x14000b90c
   14000b941:	mov    DWORD PTR [rdi+0x4],0x20000
   14000b948:	mov    DWORD PTR [rdi+0x8],ebx
   14000b94b:	jmp    0x14000b97f
   14000b94d:	mov    eax,DWORD PTR [rdi+0x8]
   14000b950:	mov    ecx,esi
   14000b952:	add    rcx,rcx
   14000b955:	cmp    rax,rcx
   14000b958:	jae    0x14000b97f
   14000b95a:	lea    rbx,[rdi+0x10]
   14000b95e:	mov    rcx,rbx
   14000b961:	call   0x14000a31c
   14000b966:	and    QWORD PTR [rbx],0x0
   14000b96a:	lea    ebp,[rsi+rsi*1]
   14000b96d:	mov    ecx,ebp
   14000b96f:	call   0x14000a3f8
   14000b974:	mov    QWORD PTR [rbx],rax
   14000b977:	test   rax,rax
   14000b97a:	je     0x14000b90c
   14000b97c:	mov    DWORD PTR [rdi+0x8],ebp
   14000b97f:	mov    rcx,QWORD PTR [rdi+0x10]
   14000b983:	mov    r8d,esi
   14000b986:	mov    rdx,r14
   14000b989:	call   0x140009774
   14000b98e:	mov    eax,0x1
   14000b993:	mov    rbx,QWORD PTR [rsp+0x30]
   14000b998:	mov    rbp,QWORD PTR [rsp+0x38]
   14000b99d:	mov    rsi,QWORD PTR [rsp+0x40]
   14000b9a2:	mov    rdi,QWORD PTR [rsp+0x48]
   14000b9a7:	add    rsp,0x20
   14000b9ab:	pop    r14
   14000b9ad:	ret    
   14000b9ae:	int3   
   14000b9af:	int3   
   14000b9b0:	int3   
   14000b9b1:	int3   
   14000b9b2:	int3   
   14000b9b3:	int3   
   14000b9b4:	sub    rsp,0x28
   14000b9b8:	mov    r11d,r8d
   14000b9bb:	mov    r10,r9
   14000b9be:	xor    r8d,r8d
   14000b9c1:	call   0x14000af68
   14000b9c6:	test   rax,rax
   14000b9c9:	je     0x14000b9e7
   14000b9cb:	cmp    DWORD PTR [rax+0x4],0x80000
   14000b9d2:	jne    0x14000b9e7
   14000b9d4:	mov    rcx,QWORD PTR [rax+0x10]
   14000b9d8:	mov    r8,r10
   14000b9db:	mov    edx,r11d
   14000b9de:	add    rsp,0x28
   14000b9e2:	jmp    0x14000b8e0
   14000b9e7:	xor    eax,eax
   14000b9e9:	add    rsp,0x28
   14000b9ed:	ret    
   14000b9ee:	int3   
   14000b9ef:	int3   
   14000b9f0:	int3   
   14000b9f1:	int3   
   14000b9f2:	int3   
   14000b9f3:	int3   
   14000b9f4:	sub    rsp,0x28
   14000b9f8:	mov    rcx,QWORD PTR [rip+0x9d39]        # 0x140015738
   14000b9ff:	mov    r11d,r8d
   14000ba02:	xor    r8d,r8d
   14000ba05:	lea    edx,[r8+0x3]
   14000ba09:	call   0x14000af68
   14000ba0e:	xor    r10d,r10d
   14000ba11:	test   rax,rax
   14000ba14:	je     0x14000ba3c
   14000ba16:	cmp    DWORD PTR [rax+0x4],0x80000
   14000ba1d:	jne    0x14000ba3c
   14000ba1f:	mov    rcx,QWORD PTR [rax+0x10]
   14000ba23:	xor    r8d,r8d
   14000ba26:	mov    edx,r11d
   14000ba29:	call   0x14000af68
   14000ba2e:	test   rax,rax
   14000ba31:	je     0x14000ba37
   14000ba33:	mov    r10d,DWORD PTR [rax+0x4]
   14000ba37:	mov    eax,r10d
   14000ba3a:	jmp    0x14000ba3e
   14000ba3c:	xor    eax,eax
   14000ba3e:	add    rsp,0x28
   14000ba42:	ret    
   14000ba43:	int3   
   14000ba44:	int3   
   14000ba45:	int3   
   14000ba46:	int3   
   14000ba47:	int3   
   14000ba48:	int3   
   14000ba49:	int3   
   14000ba4a:	int3   
   14000ba4b:	int3   
   14000ba4c:	mov    QWORD PTR [rsp+0x8],rbx
   14000ba51:	mov    QWORD PTR [rsp+0x10],rbp
   14000ba56:	mov    QWORD PTR [rsp+0x18],rsi
   14000ba5b:	push   rdi
   14000ba5c:	push   r12
   14000ba5e:	push   r13
   14000ba60:	push   r14
   14000ba62:	push   r15
   14000ba64:	sub    rsp,0x30
   14000ba68:	mov    r14,rcx
   14000ba6b:	mov    r12,r9
   14000ba6e:	mov    ecx,0x16
   14000ba73:	mov    r13,r8
   14000ba76:	mov    r15d,edx
   14000ba79:	call   0x14000827c
   14000ba7e:	xor    edi,edi
   14000ba80:	mov    rsi,rax
   14000ba83:	test   rax,rax
   14000ba86:	je     0x14000bb96
   14000ba8c:	test   r13,r13
   14000ba8f:	je     0x14000bb96
   14000ba95:	mov    rcx,rax
   14000ba98:	call   0x14000a5a0
   14000ba9d:	movsxd r8,eax
   14000baa0:	lea    rdx,[rip+0x4b85]        # 0x14001062c
   14000baa7:	shr    r8,1
   14000baaa:	mov    rcx,rsi
   14000baad:	call   0x140009774
   14000bab2:	test   r14,r14
   14000bab5:	je     0x14000bac3
   14000bab7:	cmp    DWORD PTR [r14],0x9
   14000babb:	jne    0x14000bac3
   14000babd:	mov    ebp,DWORD PTR [r14+0x4]
   14000bac1:	jmp    0x14000bac5
   14000bac3:	mov    ebp,edi
   14000bac5:	xor    edx,edx
   14000bac7:	lea    r8d,[r15+0x5]
   14000bacb:	mov    r9d,0x1
   14000bad1:	lea    ecx,[rdx+0x13]
   14000bad4:	call   0x1400082e8
   14000bad9:	xor    edx,edx
   14000badb:	mov    QWORD PTR [rsp+0x20],rax
   14000bae0:	mov    r9d,0x1
   14000bae6:	lea    r8d,[r15+0x5]
   14000baea:	lea    ecx,[rdx+0x14]
   14000baed:	call   0x1400082e8
   14000baf2:	mov    QWORD PTR [rsp+0x28],rax
   14000baf7:	cmp    QWORD PTR [rsp+0x20],rdi
   14000bafc:	je     0x14000bb96
   14000bb02:	test   rax,rax
   14000bb05:	je     0x14000bb96
   14000bb0b:	mov    rcx,r12
   14000bb0e:	call   0x14000920c
   14000bb13:	mov    ebx,eax
   14000bb15:	test   ebp,ebp
   14000bb17:	je     0x14000bb96
   14000bb19:	mov    r8,QWORD PTR [rsp+0x28]
   14000bb1e:	mov    r9d,r15d
   14000bb21:	mov    edx,edi
   14000bb23:	mov    rcx,r14
   14000bb26:	call   0x14000b710
   14000bb2b:	mov    rcx,QWORD PTR [rsp+0x20]
   14000bb30:	call   0x14000a5a0
   14000bb35:	mov    r9,QWORD PTR [rsp+0x28]
   14000bb3a:	mov    r8,r13
   14000bb3d:	mov    rcx,QWORD PTR [rsp+0x20]
   14000bb42:	movsxd rdx,eax
   14000bb45:	shr    rdx,1
   14000bb48:	dec    rdx
   14000bb4b:	call   0x140006ca4
   14000bb50:	mov    rcx,rsi
   14000bb53:	call   0x14000a5a0
   14000bb58:	mov    rdx,QWORD PTR [rsp+0x20]
   14000bb5d:	mov    rcx,rsi
   14000bb60:	movsxd r8,eax
   14000bb63:	shr    r8,1
   14000bb66:	call   0x140009818
   14000bb6b:	inc    edi
   14000bb6d:	cmp    edi,ebp
   14000bb6f:	jae    0x14000bb96
   14000bb71:	cmp    r15d,ebx
   14000bb74:	jb     0x14000bb96
   14000bb76:	mov    rcx,rsi
   14000bb79:	call   0x14000a5a0
   14000bb7e:	movsxd r8,eax
   14000bb81:	mov    rdx,r12
   14000bb84:	shr    r8,1
   14000bb87:	mov    rcx,rsi
   14000bb8a:	call   0x140009818
   14000bb8f:	sub    r15d,ebx
   14000bb92:	cmp    edi,ebp
   14000bb94:	jb     0x14000bb19
   14000bb96:	mov    rbx,QWORD PTR [rsp+0x60]
   14000bb9b:	mov    rbp,QWORD PTR [rsp+0x68]
   14000bba0:	mov    rsi,QWORD PTR [rsp+0x70]
   14000bba5:	add    rsp,0x30
   14000bba9:	pop    r15
   14000bbab:	pop    r14
   14000bbad:	pop    r13
   14000bbaf:	pop    r12
   14000bbb1:	pop    rdi
   14000bbb2:	ret    
   14000bbb3:	int3   
   14000bbb4:	int3   
   14000bbb5:	int3   
   14000bbb6:	int3   
   14000bbb7:	int3   
   14000bbb8:	int3   
   14000bbb9:	int3   
   14000bbba:	int3   
   14000bbbb:	int3   
   14000bbbc:	rex push rbp
   14000bbbe:	push   rbx
   14000bbbf:	push   rsi
   14000bbc0:	push   rdi
   14000bbc1:	push   r12
   14000bbc3:	push   r13
   14000bbc5:	push   r14
   14000bbc7:	push   r15
   14000bbc9:	lea    rbp,[rsp-0x1f]
   14000bbce:	sub    rsp,0x88
   14000bbd5:	movaps XMMWORD PTR [rsp+0x70],xmm6
   14000bbda:	mov    rax,QWORD PTR [rip+0x9427]        # 0x140015008
   14000bbe1:	xor    rax,rsp
   14000bbe4:	mov    QWORD PTR [rbp-0x1],rax
   14000bbe8:	mov    eax,DWORD PTR [rip+0x50aa]        # 0x140010c98
   14000bbee:	mov    rsi,rcx
   14000bbf1:	mov    DWORD PTR [rbp-0x11],eax
   14000bbf4:	mov    ecx,0x16
   14000bbf9:	movzx  eax,WORD PTR [rip+0x509c]        # 0x140010c9c
   14000bc00:	mov    r13,r9
   14000bc03:	mov    WORD PTR [rbp-0xd],ax
   14000bc07:	mov    r15,r8
   14000bc0a:	mov    eax,DWORD PTR [rip+0x5090]        # 0x140010ca0
   14000bc10:	mov    r14d,edx
   14000bc13:	mov    DWORD PTR [rbp-0x9],eax
   14000bc16:	movzx  eax,WORD PTR [rip+0x5087]        # 0x140010ca4
   14000bc1d:	mov    WORD PTR [rbp-0x5],ax
   14000bc21:	mov    eax,DWORD PTR [rip+0x5069]        # 0x140010c90
   14000bc27:	mov    DWORD PTR [rbp-0x19],eax
   14000bc2a:	movzx  eax,WORD PTR [rip+0x5063]        # 0x140010c94
   14000bc31:	mov    WORD PTR [rbp-0x15],ax
   14000bc35:	call   0x14000827c
   14000bc3a:	mov    rdi,rax
   14000bc3d:	test   rsi,rsi
   14000bc40:	je     0x14000bf69
   14000bc46:	test   rax,rax
   14000bc49:	je     0x14000bf69
   14000bc4f:	xor    eax,eax
   14000bc51:	mov    rcx,rdi
   14000bc54:	mov    QWORD PTR [rbp-0x29],rax
   14000bc58:	mov    QWORD PTR [rbp-0x21],rax
   14000bc5c:	call   0x14000a5a0
   14000bc61:	movsxd r8,eax
   14000bc64:	lea    rdx,[rip+0x49c1]        # 0x14001062c
   14000bc6b:	shr    r8,1
   14000bc6e:	mov    rcx,rdi
   14000bc71:	call   0x140009774
   14000bc76:	mov    ecx,DWORD PTR [rsi+0x204]
   14000bc7c:	mov    eax,ecx
   14000bc7e:	and    eax,0xff0
   14000bc83:	sub    eax,0x10
   14000bc86:	je     0x14000beab
   14000bc8c:	sub    eax,0x10
   14000bc8f:	je     0x14000be31
   14000bc95:	sub    eax,0x10
   14000bc98:	je     0x14000bdbc
   14000bc9e:	sub    eax,0x10
   14000bca1:	je     0x14000bd71
   14000bca7:	sub    eax,0x20
   14000bcaa:	je     0x14000bd0e
   14000bcac:	cmp    eax,0x20
   14000bcaf:	je     0x14000bcd3
   14000bcb1:	mov    rcx,rdi
   14000bcb4:	call   0x14000a5a0
   14000bcb9:	movsxd r8,eax
   14000bcbc:	lea    rdx,[rip+0x4969]        # 0x14001062c
   14000bcc3:	shr    r8,1
   14000bcc6:	mov    rcx,rdi
   14000bcc9:	call   0x140009774
   14000bcce:	jmp    0x14000bf2a
   14000bcd3:	mov    r12,QWORD PTR [rsi+0x290]
   14000bcda:	test   r12,r12
   14000bcdd:	je     0x14000bf69
   14000bce3:	mov    rbx,QWORD PTR [rsi+0x298]
   14000bcea:	mov    rcx,r12
   14000bced:	test   rbx,rbx
   14000bcf0:	cmove  rbx,rsi
   14000bcf4:	call   QWORD PTR [rip+0x488e]        # 0x140010588
   14000bcfa:	mov    r9,rdi
   14000bcfd:	mov    r8,rbx
   14000bd00:	mov    rdx,r15
   14000bd03:	mov    ecx,r14d
   14000bd06:	call   r12
   14000bd09:	jmp    0x14000bf2a
   14000bd0e:	mov    r8d,r14d
   14000bd11:	lea    rcx,[rbp-0x39]
   14000bd15:	mov    rdx,r15
   14000bd18:	call   0x14000b694
   14000bd1d:	mov    DWORD PTR [rsp+0x28],0xfe
   14000bd25:	lea    r8,[rbp-0x29]
   14000bd29:	xor    r9d,r9d
   14000bd2c:	mov    QWORD PTR [rsp+0x20],rdi
   14000bd31:	mov    edx,0x80000000
   14000bd36:	mov    ecx,0x400
   14000bd3b:	movups xmm0,XMMWORD PTR [rax]
   14000bd3e:	movdqu XMMWORD PTR [rbp-0x29],xmm0
   14000bd43:	call   QWORD PTR [rip+0x42ef]        # 0x140010038
   14000bd49:	test   eax,eax
   14000bd4b:	jne    0x14000bf2a
   14000bd51:	call   0x1400086e0
   14000bd56:	mov    rcx,rdi
   14000bd59:	call   0x14000a5a0
   14000bd5e:	movsxd r8,eax
   14000bd61:	shr    r8,1
   14000bd64:	call   0x1400084e8
   14000bd69:	mov    rdx,rax
   14000bd6c:	jmp    0x14000bcc6
   14000bd71:	lea    rbx,[rsi+0x208]
   14000bd78:	bt     ecx,0xd
   14000bd7c:	jb     0x14000bd82
   14000bd7e:	lea    rbx,[rbp-0x19]
   14000bd82:	bt     ecx,0xe
   14000bd86:	mov    edx,r14d
   14000bd89:	mov    rcx,r15
   14000bd8c:	jb     0x14000bec8
   14000bd92:	xor    r8d,r8d
   14000bd95:	call   0x14000af68
   14000bd9a:	test   rax,rax
   14000bd9d:	jne    0x14000bda9
   14000bd9f:	movsd  xmm6,QWORD PTR [rip+0x5051]        # 0x140010df8
   14000bda7:	jmp    0x14000be08
   14000bda9:	cmp    DWORD PTR [rax+0x4],0x70000
   14000bdb0:	jne    0x14000bd9f
   14000bdb2:	mov    rax,QWORD PTR [rax+0x10]
   14000bdb6:	movsd  xmm6,QWORD PTR [rax]
   14000bdba:	jmp    0x14000be08
   14000bdbc:	lea    rbx,[rsi+0x208]
   14000bdc3:	bt     ecx,0xd
   14000bdc7:	jb     0x14000bdcd
   14000bdc9:	lea    rbx,[rbp-0x19]
   14000bdcd:	bt     ecx,0xe
   14000bdd1:	mov    edx,r14d
   14000bdd4:	mov    rcx,r15
   14000bdd7:	jb     0x14000bec8
   14000bddd:	xor    r8d,r8d
   14000bde0:	call   0x14000af68
   14000bde5:	test   rax,rax
   14000bde8:	jne    0x14000bdf4
   14000bdea:	movss  xmm0,DWORD PTR [rip+0x4ffe]        # 0x140010df0
   14000bdf2:	jmp    0x14000be05
   14000bdf4:	cmp    DWORD PTR [rax+0x4],0x60000
   14000bdfb:	jne    0x14000bdea
   14000bdfd:	mov    rax,QWORD PTR [rax+0x10]
   14000be01:	movss  xmm0,DWORD PTR [rax]
   14000be05:	cvtps2pd xmm6,xmm0
   14000be08:	mov    rcx,rdi
   14000be0b:	call   0x14000a5a0
   14000be10:	movsxd rdx,eax
   14000be13:	movaps xmm3,xmm6
   14000be16:	shr    rdx,1
   14000be19:	mov    r8,rbx
   14000be1c:	movq   r9,xmm3
   14000be21:	dec    rdx
   14000be24:	mov    rcx,rdi
   14000be27:	call   0x140006ca4
   14000be2c:	jmp    0x14000bf2a
   14000be31:	lea    r12,[rsi+0x208]
   14000be38:	bt     ecx,0xd
   14000be3c:	jb     0x14000be42
   14000be3e:	lea    r12,[rbp-0x9]
   14000be42:	bt     ecx,0xe
   14000be46:	mov    edx,r14d
   14000be49:	mov    rcx,r15
   14000be4c:	jae    0x14000be61
   14000be4e:	call   0x14000b65c
   14000be53:	test   rax,rax
   14000be56:	je     0x14000bf69
   14000be5c:	mov    r8,r12
   14000be5f:	jmp    0x14000bed9
   14000be61:	xor    r8d,r8d
   14000be64:	call   0x14000af68
   14000be69:	mov    rdx,rax
   14000be6c:	test   rax,rax
   14000be6f:	jne    0x14000be75
   14000be71:	xor    ebx,ebx
   14000be73:	jmp    0x14000be8a
   14000be75:	mov    eax,DWORD PTR [rax+0x4]
   14000be78:	sub    eax,0x30000
   14000be7d:	test   eax,0xfffeffff
   14000be82:	jne    0x14000be71
   14000be84:	mov    rax,QWORD PTR [rdx+0x10]
   14000be88:	mov    ebx,DWORD PTR [rax]
   14000be8a:	mov    rcx,rdi
   14000be8d:	call   0x14000a5a0
   14000be92:	movsxd rdx,eax
   14000be95:	mov    r9d,ebx
   14000be98:	shr    rdx,1
   14000be9b:	mov    r8,r12
   14000be9e:	dec    rdx
   14000bea1:	mov    rcx,rdi
   14000bea4:	call   0x140006ca4
   14000bea9:	jmp    0x14000bf2a
   14000beab:	lea    rbx,[rsi+0x208]
   14000beb2:	bt     ecx,0xd
   14000beb6:	jb     0x14000bebc
   14000beb8:	lea    rbx,[rbp-0x11]
   14000bebc:	bt     ecx,0xe
   14000bec0:	mov    edx,r14d
   14000bec3:	mov    rcx,r15
   14000bec6:	jae    0x14000beec
   14000bec8:	call   0x14000b65c
   14000becd:	test   rax,rax
   14000bed0:	je     0x14000bf69
   14000bed6:	mov    r8,rbx
   14000bed9:	mov    edx,DWORD PTR [rsi+0x200]
   14000bedf:	mov    r9,r13
   14000bee2:	mov    rcx,rax
   14000bee5:	call   0x14000ba4c
   14000beea:	jmp    0x14000bf2a
   14000beec:	xor    r8d,r8d
   14000beef:	call   0x14000af68
   14000bef4:	test   rax,rax
   14000bef7:	je     0x14000bf69
   14000bef9:	cmp    DWORD PTR [rax+0x4],0x20000
   14000bf00:	jne    0x14000bf69
   14000bf02:	mov    r14,QWORD PTR [rax+0x10]
   14000bf06:	test   r14,r14
   14000bf09:	je     0x14000bf69
   14000bf0b:	mov    rcx,rdi
   14000bf0e:	call   0x14000a5a0
   14000bf13:	movsxd rdx,eax
   14000bf16:	mov    r9,r14
   14000bf19:	shr    rdx,1
   14000bf1c:	mov    r8,rbx
   14000bf1f:	dec    rdx
   14000bf22:	mov    rcx,rdi
   14000bf25:	call   0x140006ca4
   14000bf2a:	mov    rcx,rdi
   14000bf2d:	call   QWORD PTR [rip+0x4215]        # 0x140010148
   14000bf33:	test   eax,eax
   14000bf35:	jne    0x14000bf69
   14000bf37:	test   DWORD PTR [rsi+0x204],0x100000
   14000bf41:	je     0x14000bf69
   14000bf43:	mov    rcx,rdi
   14000bf46:	call   0x14000a5a0
   14000bf4b:	movsxd rbx,eax
   14000bf4e:	mov    ecx,0x138d
   14000bf53:	shr    rbx,1
   14000bf56:	call   0x140008af0
   14000bf5b:	mov    rdx,rax
   14000bf5e:	mov    r8d,ebx
   14000bf61:	mov    rcx,rdi
   14000bf64:	call   0x140009774
   14000bf69:	mov    rcx,QWORD PTR [rbp-0x1]
   14000bf6d:	xor    rcx,rsp
   14000bf70:	call   0x14000e560
   14000bf75:	movaps xmm6,XMMWORD PTR [rsp+0x70]
   14000bf7a:	add    rsp,0x88
   14000bf81:	pop    r15
   14000bf83:	pop    r14
   14000bf85:	pop    r13
   14000bf87:	pop    r12
   14000bf89:	pop    rdi
   14000bf8a:	pop    rsi
   14000bf8b:	pop    rbx
   14000bf8c:	pop    rbp
   14000bf8d:	ret    
   14000bf8e:	int3   
   14000bf8f:	int3   
   14000bf90:	int3   
   14000bf91:	int3   
   14000bf92:	int3   
   14000bf93:	int3   
   14000bf94:	test   rdx,rdx
   14000bf97:	je     0x14000c173
   14000bf9d:	mov    rax,rsp
   14000bfa0:	mov    QWORD PTR [rax+0x10],rbx
   14000bfa4:	mov    QWORD PTR [rax+0x18],rbp
   14000bfa8:	mov    QWORD PTR [rax+0x20],rsi
   14000bfac:	mov    QWORD PTR [rax+0x8],rcx
   14000bfb0:	push   rdi
   14000bfb1:	push   r12
   14000bfb3:	push   r13
   14000bfb5:	push   r14
   14000bfb7:	push   r15
   14000bfb9:	sub    rsp,0x20
   14000bfbd:	mov    ebp,r9d
   14000bfc0:	mov    r14,r8
   14000bfc3:	mov    rdi,rdx
   14000bfc6:	mov    rax,rcx
   14000bfc9:	test   r9d,r9d
   14000bfcc:	je     0x14000c157
   14000bfd2:	test   rax,rax
   14000bfd5:	je     0x14000c157
   14000bfdb:	mov    rcx,rdx
   14000bfde:	call   0x14000920c
   14000bfe3:	cmp    eax,ebp
   14000bfe5:	mov    r15d,eax
   14000bfe8:	cmovb  r15d,ebp
   14000bfec:	xor    edx,edx
   14000bfee:	lea    ecx,[rdx+0x15]
   14000bff1:	lea    r9d,[rdx+0x1]
   14000bff5:	lea    r8d,[r15+0x5]
   14000bff9:	call   0x1400082e8
   14000bffe:	mov    r12,rax
   14000c001:	test   rax,rax
   14000c004:	jne    0x14000c032
   14000c006:	call   QWORD PTR [rip+0x4144]        # 0x140010150
   14000c00c:	test   eax,eax
   14000c00e:	jne    0x14000c019
   14000c010:	lea    ecx,[rax+0x8]
   14000c013:	call   QWORD PTR [rip+0x413f]        # 0x140010158
   14000c019:	call   0x1400086e0
   14000c01e:	mov    rcx,rdi
   14000c021:	call   0x14000a5a0
   14000c026:	lea    rdx,[rip+0x45ff]        # 0x14001062c
   14000c02d:	jmp    0x14000c149
   14000c032:	xor    r13d,r13d
   14000c035:	test   r14,r14
   14000c038:	je     0x14000c045
   14000c03a:	mov    rcx,r14
   14000c03d:	call   0x14000920c
   14000c042:	mov    r13d,eax
   14000c045:	xor    esi,esi
   14000c047:	test   r14,r14
   14000c04a:	je     0x14000c10c
   14000c050:	mov    r9d,esi
   14000c053:	mov    r8d,0x1
   14000c059:	mov    rdx,r14
   14000c05c:	mov    rcx,rdi
   14000c05f:	call   0x140009154
   14000c064:	cmp    eax,0xffffffff
   14000c067:	je     0x14000c10c
   14000c06d:	cdqe   
   14000c06f:	lea    rcx,[rdi+rax*2]
   14000c073:	test   rcx,rcx
   14000c076:	je     0x14000c10c
   14000c07c:	call   0x14000920c
   14000c081:	mov    ebx,r13d
   14000c084:	mov    rcx,rdi
   14000c087:	sub    ebx,eax
   14000c089:	call   0x14000920c
   14000c08e:	add    eax,ebx
   14000c090:	cmp    eax,ebp
   14000c092:	jae    0x14000c098
   14000c094:	mov    esi,eax
   14000c096:	jmp    0x14000c047
   14000c098:	test   esi,esi
   14000c09a:	je     0x14000c0a0
   14000c09c:	cmp    eax,ebp
   14000c09e:	jne    0x14000c0a2
   14000c0a0:	mov    esi,ebp
   14000c0a2:	lea    eax,[rsi+0x1]
   14000c0a5:	mov    rdx,rdi
   14000c0a8:	cmp    r15d,eax
   14000c0ab:	mov    rcx,r12
   14000c0ae:	cmova  r15d,eax
   14000c0b2:	mov    r8d,r15d
   14000c0b5:	call   0x140009774
   14000c0ba:	xor    r8d,r8d
   14000c0bd:	mov    edx,ebp
   14000c0bf:	mov    rcx,r12
   14000c0c2:	call   0x140009380
   14000c0c7:	mov    rcx,QWORD PTR [rsp+0x50]
   14000c0cc:	mov    rdx,r12
   14000c0cf:	call   0x14000999c
   14000c0d4:	mov    rcx,r12
   14000c0d7:	call   0x14000a5a0
   14000c0dc:	movsxd r8,eax
   14000c0df:	mov    rdx,rdi
   14000c0e2:	shr    r8,1
   14000c0e5:	mov    rcx,r12
   14000c0e8:	call   0x140009774
   14000c0ed:	mov    rcx,rdi
   14000c0f0:	call   0x14000920c
   14000c0f5:	mov    rcx,rdi
   14000c0f8:	cmp    eax,esi
   14000c0fa:	jle    0x14000c13d
   14000c0fc:	call   0x14000a5a0
   14000c101:	movsxd r8,eax
   14000c104:	mov    eax,esi
   14000c106:	lea    rdx,[r12+rax*2]
   14000c10a:	jmp    0x14000c14c
   14000c10c:	test   esi,esi
   14000c10e:	je     0x14000c0a0
   14000c110:	mov    rcx,rdi
   14000c113:	call   0x14000920c
   14000c118:	sub    eax,esi
   14000c11a:	cmp    eax,ebp
   14000c11c:	ja     0x14000c0a0
   14000c11e:	mov    rcx,rdi
   14000c121:	call   0x14000920c
   14000c126:	cmp    eax,ebp
   14000c128:	jg     0x14000c0a2
   14000c12e:	mov    rcx,rdi
   14000c131:	call   0x14000920c
   14000c136:	mov    esi,eax
   14000c138:	jmp    0x14000c0a2
   14000c13d:	call   0x14000a5a0
   14000c142:	lea    rdx,[rip+0x44df]        # 0x140010628
   14000c149:	movsxd r8,eax
   14000c14c:	shr    r8,1
   14000c14f:	mov    rcx,rdi
   14000c152:	call   0x140009774
   14000c157:	mov    rbx,QWORD PTR [rsp+0x58]
   14000c15c:	mov    rbp,QWORD PTR [rsp+0x60]
   14000c161:	mov    rsi,QWORD PTR [rsp+0x68]
   14000c166:	add    rsp,0x20
   14000c16a:	pop    r15
   14000c16c:	pop    r14
   14000c16e:	pop    r13
   14000c170:	pop    r12
   14000c172:	pop    rdi
   14000c173:	ret    
   14000c174:	int3   
   14000c175:	int3   
   14000c176:	int3   
   14000c177:	int3   
   14000c178:	int3   
   14000c179:	int3   
   14000c17a:	int3   
   14000c17b:	int3   
   14000c17c:	mov    QWORD PTR [rsp+0x20],rbx
   14000c181:	mov    QWORD PTR [rsp+0x18],r8
   14000c186:	mov    DWORD PTR [rsp+0x10],edx
   14000c18a:	push   rbp
   14000c18b:	push   rsi
   14000c18c:	push   rdi
   14000c18d:	push   r12
   14000c18f:	push   r13
   14000c191:	push   r14
   14000c193:	push   r15
   14000c195:	sub    rsp,0x50
   14000c199:	mov    r12d,edx
   14000c19c:	mov    ebx,r9d
   14000c19f:	mov    rsi,r8
   14000c1a2:	mov    rdi,rcx
   14000c1a5:	test   rcx,rcx
   14000c1a8:	je     0x14000c7d8
   14000c1ae:	test   r8,r8
   14000c1b1:	je     0x14000c7d8
   14000c1b7:	xor    edx,edx
   14000c1b9:	mov    r13d,0x1
   14000c1bf:	mov    ebp,0x1000
   14000c1c4:	mov    r9d,r13d
   14000c1c7:	mov    r8d,ebp
   14000c1ca:	lea    ecx,[rdx+0x16]
   14000c1cd:	call   0x1400082e8
   14000c1d2:	mov    r14,rax
   14000c1d5:	call   0x14000b1a4
   14000c1da:	mov    QWORD PTR [rsp+0x48],rax
   14000c1df:	mov    r15,rax
   14000c1e2:	test   rax,rax
   14000c1e5:	je     0x14000c7c9
   14000c1eb:	test   r14,r14
   14000c1ee:	je     0x14000c7c9
   14000c1f4:	test   ebp,ebx
   14000c1f6:	jne    0x14000c345
   14000c1fc:	xor    edx,edx
   14000c1fe:	xor    ebp,ebp
   14000c200:	test   r12d,r12d
   14000c203:	je     0x14000c2c0
   14000c209:	mov    r13,QWORD PTR [rsp+0xa0]
   14000c211:	lea    r15d,[rdx+0x1]
   14000c215:	add    rsi,0x204
   14000c21c:	mov    ecx,DWORD PTR [rsi]
   14000c21e:	bt     ecx,0xc
   14000c222:	jb     0x14000c29a
   14000c224:	xor    ebx,ebx
   14000c226:	bt     ecx,0x10
   14000c22a:	jae    0x14000c231
   14000c22c:	mov    ebx,r15d
   14000c22f:	jmp    0x14000c248
   14000c231:	and    ecx,0xff0
   14000c237:	lea    eax,[rcx-0x20]
   14000c23a:	test   eax,0xffffffcf
   14000c23f:	jne    0x14000c248
   14000c241:	cmp    ecx,0x50
   14000c244:	cmovne ebx,r15d
   14000c248:	cmp    edx,r15d
   14000c24b:	jne    0x14000c25c
   14000c24d:	lea    rdx,[rip+0x46b8]        # 0x14001090c
   14000c254:	mov    rcx,rdi
   14000c257:	call   0x14000999c
   14000c25c:	mov    rcx,r14
   14000c25f:	call   0x14000a5a0
   14000c264:	movsxd r8,eax
   14000c267:	mov    rcx,r14
   14000c26a:	mov    eax,ebp
   14000c26c:	imul   rdx,rax,0x2a0
   14000c273:	shr    r8,1
   14000c276:	add    rdx,r13
   14000c279:	call   0x140009774
   14000c27e:	mov    edx,DWORD PTR [rsi-0x4]
   14000c281:	mov    r8d,ebx
   14000c284:	mov    rcx,r14
   14000c287:	call   0x140009380
   14000c28c:	mov    rdx,r14
   14000c28f:	mov    rcx,rdi
   14000c292:	call   0x14000999c
   14000c297:	mov    edx,r15d
   14000c29a:	add    ebp,r15d
   14000c29d:	add    rsi,0x2a0
   14000c2a4:	cmp    ebp,r12d
   14000c2a7:	jb     0x14000c21c
   14000c2ad:	mov    r15,QWORD PTR [rsp+0x48]
   14000c2b2:	mov    r13d,0x1
   14000c2b8:	mov    rsi,QWORD PTR [rsp+0xa0]
   14000c2c0:	lea    rdx,[rip+0x44b1]        # 0x140010778
   14000c2c7:	mov    rcx,rdi
   14000c2ca:	call   0x14000999c
   14000c2cf:	xor    eax,eax
   14000c2d1:	test   r12d,r12d
   14000c2d4:	je     0x14000c32e
   14000c2d6:	lea    rbx,[rsi+0x200]
   14000c2dd:	mov    ebp,0x1000
   14000c2e2:	mov    rsi,r12
   14000c2e5:	test   DWORD PTR [rbx+0x4],ebp
   14000c2e8:	jne    0x14000c322
   14000c2ea:	cmp    eax,r13d
   14000c2ed:	jne    0x14000c2fe
   14000c2ef:	lea    rdx,[rip+0x4616]        # 0x14001090c
   14000c2f6:	mov    rcx,rdi
   14000c2f9:	call   0x14000999c
   14000c2fe:	mov    r8d,DWORD PTR [rbx]
   14000c301:	lea    rdx,[rip+0x49a0]        # 0x140010ca8
   14000c308:	mov    rcx,r14
   14000c30b:	lea    r9d,[r8+0x1]
   14000c30f:	call   0x14000952c
   14000c314:	mov    rdx,r14
   14000c317:	mov    rcx,rdi
   14000c31a:	call   0x14000999c
   14000c31f:	mov    eax,r13d
   14000c322:	add    rbx,0x2a0
   14000c329:	sub    rsi,r13
   14000c32c:	jne    0x14000c2e5
   14000c32e:	lea    rdx,[rip+0x4443]        # 0x140010778
   14000c335:	mov    rcx,rdi
   14000c338:	call   0x14000999c
   14000c33d:	mov    rsi,QWORD PTR [rsp+0xa0]
   14000c345:	mov    rbx,QWORD PTR [rsp+0xb0]
   14000c34d:	test   rbx,rbx
   14000c350:	je     0x14000c7af
   14000c356:	cmp    DWORD PTR [rbx],0x9
   14000c359:	jne    0x14000c7af
   14000c35f:	mov    eax,DWORD PTR [rbx+0x4]
   14000c362:	xor    ebp,ebp
   14000c364:	mov    DWORD PTR [rsp+0x40],eax
   14000c368:	mov    DWORD PTR [rsp+0x90],ebp
   14000c36f:	test   eax,eax
   14000c371:	je     0x14000c7af
   14000c377:	mov    rcx,r14
   14000c37a:	call   0x14000a5a0
   14000c37f:	movsxd r8,eax
   14000c382:	lea    rdx,[rip+0x42a3]        # 0x14001062c
   14000c389:	shr    r8,1
   14000c38c:	mov    rcx,r14
   14000c38f:	call   0x140009774
   14000c394:	mov    edx,ebp
   14000c396:	mov    rcx,rbx
   14000c399:	call   0x14000b65c
   14000c39e:	mov    QWORD PTR [rsp+0x38],rax
   14000c3a3:	test   rax,rax
   14000c3a6:	je     0x14000c78b
   14000c3ac:	mov    eax,DWORD PTR [rsp+0x98]
   14000c3b3:	xor    r13d,r13d
   14000c3b6:	xor    r12d,r12d
   14000c3b9:	test   eax,eax
   14000c3bb:	je     0x14000c587
   14000c3c1:	add    rsi,0x200
   14000c3c8:	lea    ecx,[r13+0x1]
   14000c3cc:	xor    ebp,ebp
   14000c3ce:	xor    ebx,ebx
   14000c3d0:	test   DWORD PTR [rsi+0x4],0x1000
   14000c3d7:	jne    0x14000c56d
   14000c3dd:	test   DWORD PTR [rsi+0x4],0x88000
   14000c3e4:	je     0x14000c3fb
   14000c3e6:	lea    ebx,[rbp+0x1]
   14000c3e9:	mov    rcx,r14
   14000c3ec:	mov    ebp,DWORD PTR [rsi]
   14000c3ee:	call   0x14000a5a0
   14000c3f3:	movsxd rcx,eax
   14000c3f6:	shr    rcx,1
   14000c3f9:	mov    DWORD PTR [rsi],ecx
   14000c3fb:	mov    r8,QWORD PTR [rsp+0x38]
   14000c400:	lea    r9,[rip+0x48a5]        # 0x140010cac
   14000c407:	mov    eax,r12d
   14000c40a:	mov    edx,r12d
   14000c40d:	imul   rcx,rax,0x2a0
   14000c414:	add    rcx,QWORD PTR [rsp+0xa0]
   14000c41c:	call   0x14000bbbc
   14000c421:	xor    r8d,r8d
   14000c424:	test   ebx,ebx
   14000c426:	jne    0x14000c45d
   14000c428:	mov    ecx,DWORD PTR [rsi+0x4]
   14000c42b:	bt     ecx,0x10
   14000c42f:	jae    0x14000c437
   14000c431:	lea    r8d,[rbx+0x1]
   14000c435:	jmp    0x14000c453
   14000c437:	and    ecx,0xff0
   14000c43d:	lea    eax,[rcx-0x20]
   14000c440:	test   eax,0xffffffcf
   14000c445:	jne    0x14000c453
   14000c447:	cmp    ecx,0x50
   14000c44a:	mov    eax,0x1
   14000c44f:	cmovne r8d,eax
   14000c453:	mov    edx,DWORD PTR [rsi]
   14000c455:	mov    rcx,r14
   14000c458:	call   0x140009380
   14000c45d:	mov    eax,0x1
   14000c462:	cmp    ebx,eax
   14000c464:	jne    0x14000c468
   14000c466:	mov    DWORD PTR [rsi],ebp
   14000c468:	cmp    r13d,eax
   14000c46b:	jne    0x14000c47c
   14000c46d:	lea    rdx,[rip+0x4498]        # 0x14001090c
   14000c474:	mov    rcx,rdi
   14000c477:	call   0x14000999c
   14000c47c:	test   DWORD PTR [rsi+0x4],0x8000
   14000c483:	mov    rdx,r14
   14000c486:	mov    rcx,rdi
   14000c489:	je     0x14000c558
   14000c48f:	mov    r9d,DWORD PTR [rsi]
   14000c492:	lea    r8,[rip+0x4813]        # 0x140010cac
   14000c499:	call   0x14000bf94
   14000c49e:	mov    rcx,r14
   14000c4a1:	call   0x14000920c
   14000c4a6:	test   eax,eax
   14000c4a8:	je     0x14000c55d
   14000c4ae:	mov    edx,0x3
   14000c4b3:	mov    rcx,r15
   14000c4b6:	call   0x14000b49c
   14000c4bb:	mov    ebp,eax
   14000c4bd:	cmp    eax,0xffffffff
   14000c4c0:	je     0x14000c55d
   14000c4c6:	xor    r8d,r8d
   14000c4c9:	mov    edx,eax
   14000c4cb:	mov    rcx,r15
   14000c4ce:	call   0x14000af68
   14000c4d3:	test   rax,rax
   14000c4d6:	je     0x14000c52c
   14000c4d8:	cmp    DWORD PTR [rax+0x4],0x80000
   14000c4df:	jne    0x14000c52c
   14000c4e1:	mov    rcx,QWORD PTR [rax+0x10]
   14000c4e5:	xor    r8d,r8d
   14000c4e8:	xor    edx,edx
   14000c4ea:	call   0x14000af68
   14000c4ef:	mov    rbx,rax
   14000c4f2:	test   rax,rax
   14000c4f5:	je     0x14000c52c
   14000c4f7:	test   DWORD PTR [rax+0x4],0xfffbffff
   14000c4fe:	jne    0x14000c52c
   14000c500:	cmp    DWORD PTR [rax+0x4],edx
   14000c503:	jne    0x14000c525
   14000c505:	lea    r13d,[rdx+0x4]
   14000c509:	mov    ecx,r13d
   14000c50c:	call   0x14000a3f8
   14000c511:	mov    QWORD PTR [rbx+0x10],rax
   14000c515:	test   rax,rax
   14000c518:	je     0x14000c52c
   14000c51a:	mov    DWORD PTR [rbx+0x4],0x40000
   14000c521:	mov    DWORD PTR [rbx+0x8],r13d
   14000c525:	mov    rax,QWORD PTR [rbx+0x10]
   14000c529:	mov    DWORD PTR [rax],r12d
   14000c52c:	mov    r9,r14
   14000c52f:	mov    r8d,0x2
   14000c535:	mov    edx,ebp
   14000c537:	mov    rcx,r15
   14000c53a:	call   0x14000b9b4
   14000c53f:	lea    r9,[rip+0x4766]        # 0x140010cac
   14000c546:	mov    r8d,0x1
   14000c54c:	mov    edx,ebp
   14000c54e:	mov    rcx,r15
   14000c551:	call   0x14000b9b4
   14000c556:	jmp    0x14000c55d
   14000c558:	call   0x14000999c
   14000c55d:	mov    eax,DWORD PTR [rsp+0x98]
   14000c564:	mov    r13d,0x1
   14000c56a:	mov    ecx,r13d
   14000c56d:	add    r12d,ecx
   14000c570:	add    rsi,0x2a0
   14000c577:	cmp    r12d,eax
   14000c57a:	jb     0x14000c3cc
   14000c580:	mov    ebp,DWORD PTR [rsp+0x90]
   14000c587:	lea    rdx,[rip+0x41ea]        # 0x140010778
   14000c58e:	mov    rcx,rdi
   14000c591:	call   0x14000999c
   14000c596:	cmp    DWORD PTR [r15],0x9
   14000c59a:	jne    0x14000c785
   14000c5a0:	mov    r12d,DWORD PTR [r15+0x4]
   14000c5a4:	test   r12d,r12d
   14000c5a7:	je     0x14000c785
   14000c5ad:	xor    r11d,r11d
   14000c5b0:	or     r10d,0xffffffff
   14000c5b4:	xor    ebx,ebx
   14000c5b6:	mov    DWORD PTR [rsp+0x30],r11d
   14000c5bb:	test   r12d,r12d
   14000c5be:	je     0x14000c766
   14000c5c4:	lea    ebp,[rbx+0x1]
   14000c5c7:	xor    r8d,r8d
   14000c5ca:	mov    edx,ebx
   14000c5cc:	mov    rcx,r15
   14000c5cf:	call   0x14000af68
   14000c5d4:	test   rax,rax
   14000c5d7:	je     0x14000c60f
   14000c5d9:	cmp    DWORD PTR [rax+0x4],0x80000
   14000c5e0:	jne    0x14000c60f
   14000c5e2:	mov    rcx,QWORD PTR [rax+0x10]
   14000c5e6:	xor    r8d,r8d
   14000c5e9:	xor    edx,edx
   14000c5eb:	call   0x14000af68
   14000c5f0:	mov    rdx,rax
   14000c5f3:	test   rax,rax
   14000c5f6:	je     0x14000c60f
   14000c5f8:	mov    eax,DWORD PTR [rax+0x4]
   14000c5fb:	sub    eax,0x30000
   14000c600:	test   eax,0xfffeffff
   14000c605:	jne    0x14000c60f
   14000c607:	mov    rax,QWORD PTR [rdx+0x10]
   14000c60b:	mov    esi,DWORD PTR [rax]
   14000c60d:	jmp    0x14000c611
   14000c60f:	xor    esi,esi
   14000c611:	lea    edx,[r10+0x1]
   14000c615:	cmp    edx,esi
   14000c617:	jae    0x14000c69f
   14000c61d:	mov    rbp,QWORD PTR [rsp+0xa0]
   14000c625:	mov    r13d,esi
   14000c628:	mov    eax,edx
   14000c62a:	add    rbp,0x200
   14000c631:	imul   rcx,rax,0x2a0
   14000c638:	mov    eax,0x1
   14000c63d:	add    rbp,rcx
   14000c640:	sub    r13d,edx
   14000c643:	test   DWORD PTR [rbp+0x4],0x1000
   14000c64a:	jne    0x14000c68a
   14000c64c:	cmp    r11d,eax
   14000c64f:	jne    0x14000c660
   14000c651:	lea    rdx,[rip+0x42b4]        # 0x14001090c
   14000c658:	mov    rcx,rdi
   14000c65b:	call   0x14000999c
   14000c660:	mov    r8d,DWORD PTR [rbp+0x0]
   14000c664:	lea    rdx,[rip+0x42a1]        # 0x14001090c
   14000c66b:	mov    rcx,r14
   14000c66e:	lea    r9d,[r8+0x1]
   14000c672:	call   0x14000952c
   14000c677:	mov    rdx,r14
   14000c67a:	mov    rcx,rdi
   14000c67d:	call   0x14000999c
   14000c682:	mov    eax,0x1
   14000c687:	mov    r11d,eax
   14000c68a:	add    rbp,0x2a0
   14000c691:	sub    r13,rax
   14000c694:	jne    0x14000c643
   14000c696:	mov    DWORD PTR [rsp+0x30],r11d
   14000c69b:	lea    ebp,[r13+0x1]
   14000c69f:	cmp    r11d,ebp
   14000c6a2:	jne    0x14000c6b3
   14000c6a4:	lea    rdx,[rip+0x4261]        # 0x14001090c
   14000c6ab:	mov    rcx,rdi
   14000c6ae:	call   0x14000999c
   14000c6b3:	mov    r8d,0x2
   14000c6b9:	mov    edx,ebx
   14000c6bb:	mov    rcx,r15
   14000c6be:	call   0x14000b88c
   14000c6c3:	mov    r8d,ebp
   14000c6c6:	mov    edx,ebx
   14000c6c8:	mov    rcx,r15
   14000c6cb:	mov    r13,rax
   14000c6ce:	call   0x14000b88c
   14000c6d3:	mov    rbp,rax
   14000c6d6:	test   r13,r13
   14000c6d9:	je     0x14000c74e
   14000c6db:	test   rax,rax
   14000c6de:	je     0x14000c74e
   14000c6e0:	mov    rcx,r14
   14000c6e3:	call   0x14000a5a0
   14000c6e8:	movsxd r8,eax
   14000c6eb:	mov    rdx,r13
   14000c6ee:	shr    r8,1
   14000c6f1:	mov    rcx,r14
   14000c6f4:	call   0x140009774
   14000c6f9:	mov    eax,esi
   14000c6fb:	mov    r8,rbp
   14000c6fe:	imul   rcx,rax,0x2a0
   14000c705:	mov    rax,QWORD PTR [rsp+0xa0]
   14000c70d:	mov    rdx,r14
   14000c710:	mov    r9d,DWORD PTR [rcx+rax*1+0x200]
   14000c718:	mov    rcx,rdi
   14000c71b:	call   0x14000bf94
   14000c720:	mov    rcx,r14
   14000c723:	call   0x14000920c
   14000c728:	mov    edx,ebx
   14000c72a:	mov    rcx,r15
   14000c72d:	test   eax,eax
   14000c72f:	jne    0x14000c740
   14000c731:	call   0x14000b5a8
   14000c736:	or     eax,0xffffffff
   14000c739:	add    ebx,eax
   14000c73b:	add    r12d,eax
   14000c73e:	jmp    0x14000c74e
   14000c740:	mov    r9,r14
   14000c743:	mov    r8d,0x2
   14000c749:	call   0x14000b9b4
   14000c74e:	mov    r11d,DWORD PTR [rsp+0x30]
   14000c753:	mov    ebp,0x1
   14000c758:	add    ebx,ebp
   14000c75a:	mov    r10d,esi
   14000c75d:	cmp    ebx,r12d
   14000c760:	jb     0x14000c5c7
   14000c766:	lea    rdx,[rip+0x400b]        # 0x140010778
   14000c76d:	mov    rcx,rdi
   14000c770:	call   0x14000999c
   14000c775:	test   r12d,r12d
   14000c778:	jne    0x14000c5ad
   14000c77e:	mov    ebp,DWORD PTR [rsp+0x90]
   14000c785:	mov    r13d,0x1
   14000c78b:	mov    rsi,QWORD PTR [rsp+0xa0]
   14000c793:	add    ebp,r13d
   14000c796:	mov    rbx,QWORD PTR [rsp+0xb0]
   14000c79e:	mov    DWORD PTR [rsp+0x90],ebp
   14000c7a5:	cmp    ebp,DWORD PTR [rsp+0x40]
   14000c7a9:	jb     0x14000c377
   14000c7af:	cmp    DWORD PTR [r15],0x9
   14000c7b3:	jne    0x14000c7f0
   14000c7b5:	mov    rcx,r15
   14000c7b8:	call   0x14000b1d4
   14000c7bd:	lea    rcx,[rsp+0x48]
   14000c7c2:	call   0x14000a31c
   14000c7c7:	jmp    0x14000c7f0
   14000c7c9:	call   QWORD PTR [rip+0x3981]        # 0x140010150
   14000c7cf:	test   eax,eax
   14000c7d1:	jne    0x14000c7eb
   14000c7d3:	lea    ecx,[rax+0x8]
   14000c7d6:	jmp    0x14000c7e5
   14000c7d8:	call   QWORD PTR [rip+0x3972]        # 0x140010150
   14000c7de:	test   eax,eax
   14000c7e0:	jne    0x14000c7eb
   14000c7e2:	lea    ecx,[rax+0x57]
   14000c7e5:	call   QWORD PTR [rip+0x396d]        # 0x140010158
   14000c7eb:	call   0x1400086e0
   14000c7f0:	mov    rbx,QWORD PTR [rsp+0xa8]
   14000c7f8:	add    rsp,0x50
   14000c7fc:	pop    r15
   14000c7fe:	pop    r14
   14000c800:	pop    r13
   14000c802:	pop    r12
   14000c804:	pop    rdi
   14000c805:	pop    rsi
   14000c806:	pop    rbp
   14000c807:	ret    
   14000c808:	int3   
   14000c809:	int3   
   14000c80a:	int3   
   14000c80b:	int3   
   14000c80c:	int3   
   14000c80d:	int3   
   14000c80e:	int3   
   14000c80f:	int3   
   14000c810:	mov    QWORD PTR [rsp+0x10],rbx
   14000c815:	push   rbp
   14000c816:	push   rsi
   14000c817:	push   rdi
   14000c818:	push   r12
   14000c81a:	push   r13
   14000c81c:	push   r14
   14000c81e:	push   r15
   14000c820:	sub    rsp,0xe0
   14000c827:	mov    rax,QWORD PTR [rip+0x87da]        # 0x140015008
   14000c82e:	xor    rax,rsp
   14000c831:	mov    QWORD PTR [rsp+0xd0],rax
   14000c839:	mov    r15,QWORD PTR [rsp+0x140]
   14000c841:	mov    rbx,r8
   14000c844:	and    DWORD PTR [rsp+0x50],0x0
   14000c849:	mov    rbp,rcx
   14000c84c:	mov    r12d,edx
   14000c84f:	lea    rcx,[rsp+0x54]
   14000c854:	xor    edx,edx
   14000c856:	mov    QWORD PTR [rsp+0x30],rbx
   14000c85b:	mov    QWORD PTR [rsp+0x38],r15
   14000c860:	lea    r8d,[rdx+0x7c]
   14000c864:	call   0x14000ed52
   14000c869:	test   rbp,rbp
   14000c86c:	je     0x14000cab5
   14000c872:	test   rbx,rbx
   14000c875:	je     0x14000cab5
   14000c87b:	xor    edx,edx
   14000c87d:	mov    r8d,0x1000
   14000c883:	lea    ecx,[rdx+0x16]
   14000c886:	lea    r9d,[rdx+0x1]
   14000c88a:	call   0x1400082e8
   14000c88f:	mov    r13,rax
   14000c892:	test   rax,rax
   14000c895:	jne    0x14000c8ad
   14000c897:	call   QWORD PTR [rip+0x38b3]        # 0x140010150
   14000c89d:	test   eax,eax
   14000c89f:	jne    0x14000cac8
   14000c8a5:	lea    ecx,[rax+0x8]
   14000c8a8:	jmp    0x14000cac2
   14000c8ad:	xor    r14d,r14d
   14000c8b0:	test   r12d,r12d
   14000c8b3:	je     0x14000c8d9
   14000c8b5:	mov    rdi,r12
   14000c8b8:	mov    rcx,rbx
   14000c8bb:	call   0x14000920c
   14000c8c0:	cmp    r14d,eax
   14000c8c3:	cmovb  r14d,eax
   14000c8c7:	add    rbx,0x2a0
   14000c8ce:	sub    rdi,0x1
   14000c8d2:	jne    0x14000c8b8
   14000c8d4:	mov    rbx,QWORD PTR [rsp+0x30]
   14000c8d9:	test   r15,r15
   14000c8dc:	je     0x14000cacd
   14000c8e2:	cmp    DWORD PTR [r15],0x9
   14000c8e6:	jne    0x14000cacd
   14000c8ec:	mov    edi,DWORD PTR [r15+0x4]
   14000c8f0:	xor    esi,esi
   14000c8f2:	mov    DWORD PTR [rsp+0x28],edi
   14000c8f6:	mov    DWORD PTR [rsp+0x20],esi
   14000c8fa:	test   edi,edi
   14000c8fc:	je     0x14000cacd
   14000c902:	mov    edx,esi
   14000c904:	mov    rcx,r15
   14000c907:	call   0x14000b65c
   14000c90c:	mov    QWORD PTR [rsp+0x40],rax
   14000c911:	test   rax,rax
   14000c914:	je     0x14000caa5
   14000c91a:	and    DWORD PTR [rsp+0x24],0x0
   14000c91f:	test   r12d,r12d
   14000c922:	je     0x14000ca8f
   14000c928:	mov    r15d,DWORD PTR [rsp+0x24]
   14000c92d:	lea    rsi,[rbx+0x200]
   14000c934:	mov    rcx,r13
   14000c937:	call   0x14000a5a0
   14000c93c:	movsxd r8,eax
   14000c93f:	lea    rdx,[rip+0x3ce6]        # 0x14001062c
   14000c946:	shr    r8,1
   14000c949:	mov    rcx,r13
   14000c94c:	call   0x140009774
   14000c951:	test   DWORD PTR [rsi+0x4],0x1000
   14000c958:	jne    0x14000ca6f
   14000c95e:	mov    eax,r15d
   14000c961:	mov    rcx,r13
   14000c964:	imul   rdi,rax,0x2a0
   14000c96b:	add    rdi,rbx
   14000c96e:	call   0x14000a5a0
   14000c973:	movsxd rdx,eax
   14000c976:	lea    r8,[rip+0x433b]        # 0x140010cb8
   14000c97d:	shr    rdx,1
   14000c980:	mov    r9,rdi
   14000c983:	dec    rdx
   14000c986:	mov    rcx,r13
   14000c989:	call   0x140006ca4
   14000c98e:	lea    edx,[r14+0x2]
   14000c992:	xor    r8d,r8d
   14000c995:	mov    rcx,r13
   14000c998:	call   0x140009380
   14000c99d:	mov    rdx,r13
   14000c9a0:	mov    rcx,rbp
   14000c9a3:	call   0x14000999c
   14000c9a8:	mov    ebx,DWORD PTR [rsi]
   14000c9aa:	mov    rcx,r13
   14000c9ad:	call   0x14000a5a0
   14000c9b2:	mov    r8,QWORD PTR [rsp+0x40]
   14000c9b7:	lea    r9,[rip+0x3dba]        # 0x140010778
   14000c9be:	movsxd rdx,eax
   14000c9c1:	mov    rcx,rdi
   14000c9c4:	shr    rdx,1
   14000c9c7:	mov    DWORD PTR [rsi],edx
   14000c9c9:	mov    edx,r15d
   14000c9cc:	call   0x14000bbbc
   14000c9d1:	lea    rdx,[rip+0x3da0]        # 0x140010778
   14000c9d8:	mov    DWORD PTR [rsi],ebx
   14000c9da:	mov    rcx,r13
   14000c9dd:	call   QWORD PTR [rip+0x3aed]        # 0x1400104d0
   14000c9e3:	mov    rbx,rax
   14000c9e6:	test   rax,rax
   14000c9e9:	je     0x14000ca5b
   14000c9eb:	mov    rdx,rbx
   14000c9ee:	mov    rcx,rbp
   14000c9f1:	call   0x14000999c
   14000c9f6:	lea    rdx,[rip+0x3d7b]        # 0x140010778
   14000c9fd:	xor    ecx,ecx
   14000c9ff:	call   QWORD PTR [rip+0x3acb]        # 0x1400104d0
   14000ca05:	mov    rbx,rax
   14000ca08:	test   rax,rax
   14000ca0b:	je     0x14000ca5b
   14000ca0d:	mov    rcx,r13
   14000ca10:	call   0x14000a5a0
   14000ca15:	movsxd r8,eax
   14000ca18:	lea    rdx,[rip+0x3eed]        # 0x14001090c
   14000ca1f:	shr    r8,1
   14000ca22:	lea    rcx,[rsp+0x50]
   14000ca27:	call   0x140009774
   14000ca2c:	xor    r8d,r8d
   14000ca2f:	lea    edx,[r14+0x2]
   14000ca33:	lea    rcx,[rsp+0x50]
   14000ca38:	call   0x140009380
   14000ca3d:	lea    rdx,[rip+0x3d34]        # 0x140010778
   14000ca44:	mov    rcx,rbp
   14000ca47:	call   0x14000999c
   14000ca4c:	lea    rdx,[rsp+0x50]
   14000ca51:	mov    rcx,rbp
   14000ca54:	call   0x14000999c
   14000ca59:	jmp    0x14000c9eb
   14000ca5b:	lea    rdx,[rip+0x3d16]        # 0x140010778
   14000ca62:	mov    rcx,rbp
   14000ca65:	call   0x14000999c
   14000ca6a:	mov    rbx,QWORD PTR [rsp+0x30]
   14000ca6f:	inc    r15d
   14000ca72:	add    rsi,0x2a0
   14000ca79:	cmp    r15d,r12d
   14000ca7c:	jb     0x14000c934
   14000ca82:	mov    esi,DWORD PTR [rsp+0x20]
   14000ca86:	mov    r15,QWORD PTR [rsp+0x38]
   14000ca8b:	mov    edi,DWORD PTR [rsp+0x28]
   14000ca8f:	lea    eax,[rsi+0x1]
   14000ca92:	cmp    eax,edi
   14000ca94:	jae    0x14000caa5
   14000ca96:	lea    rdx,[rip+0x3cdb]        # 0x140010778
   14000ca9d:	mov    rcx,rbp
   14000caa0:	call   0x14000999c
   14000caa5:	inc    esi
   14000caa7:	mov    DWORD PTR [rsp+0x20],esi
   14000caab:	cmp    esi,edi
   14000caad:	jb     0x14000c902
   14000cab3:	jmp    0x14000cacd
   14000cab5:	call   QWORD PTR [rip+0x3695]        # 0x140010150
   14000cabb:	test   eax,eax
   14000cabd:	jne    0x14000cac8
   14000cabf:	lea    ecx,[rax+0x57]
   14000cac2:	call   QWORD PTR [rip+0x3690]        # 0x140010158
   14000cac8:	call   0x1400086e0
   14000cacd:	mov    rcx,QWORD PTR [rsp+0xd0]
   14000cad5:	xor    rcx,rsp
   14000cad8:	call   0x14000e560
   14000cadd:	mov    rbx,QWORD PTR [rsp+0x128]
   14000cae5:	add    rsp,0xe0
   14000caec:	pop    r15
   14000caee:	pop    r14
   14000caf0:	pop    r13
   14000caf2:	pop    r12
   14000caf4:	pop    rdi
   14000caf5:	pop    rsi
   14000caf6:	pop    rbp
   14000caf7:	ret    
   14000caf8:	int3   
   14000caf9:	int3   
   14000cafa:	int3   
   14000cafb:	int3   
   14000cafc:	int3   
   14000cafd:	int3   
   14000cafe:	int3   
   14000caff:	int3   
   14000cb00:	mov    QWORD PTR [rsp+0x10],rbx
   14000cb05:	mov    QWORD PTR [rsp+0x18],rbp
   14000cb0a:	mov    QWORD PTR [rsp+0x20],rsi
   14000cb0f:	push   rdi
   14000cb10:	push   r12
   14000cb12:	push   r13
   14000cb14:	push   r14
   14000cb16:	push   r15
   14000cb18:	sub    rsp,0x40
   14000cb1c:	mov    esi,r9d
   14000cb1f:	mov    r13,r8
   14000cb22:	mov    r12d,edx
   14000cb25:	mov    rdi,rcx
   14000cb28:	test   rcx,rcx
   14000cb2b:	je     0x14000cd5a
   14000cb31:	test   r8,r8
   14000cb34:	je     0x14000cd5a
   14000cb3a:	xor    edx,edx
   14000cb3c:	mov    r14d,0x1000
   14000cb42:	mov    r9d,0x1
   14000cb48:	mov    r8d,r14d
   14000cb4b:	lea    ecx,[rdx+0x16]
   14000cb4e:	call   0x1400082e8
   14000cb53:	mov    QWORD PTR [rsp+0x28],rax
   14000cb58:	mov    rbx,rax
   14000cb5b:	test   rax,rax
   14000cb5e:	jne    0x14000cb76
   14000cb60:	call   QWORD PTR [rip+0x35ea]        # 0x140010150
   14000cb66:	test   eax,eax
   14000cb68:	jne    0x14000cd6d
   14000cb6e:	lea    ecx,[rbx+0x8]
   14000cb71:	jmp    0x14000cd67
   14000cb76:	test   r14d,esi
   14000cb79:	jne    0x14000cc0c
   14000cb7f:	xor    eax,eax
   14000cb81:	xor    esi,esi
   14000cb83:	test   r12d,r12d
   14000cb86:	je     0x14000cbfd
   14000cb88:	lea    rbp,[r13+0x204]
   14000cb8f:	test   DWORD PTR [rbp+0x0],r14d
   14000cb93:	jne    0x14000cbef
   14000cb95:	cmp    eax,0x1
   14000cb98:	jne    0x14000cba9
   14000cb9a:	lea    rdx,[rip+0x411f]        # 0x140010cc0
   14000cba1:	mov    rcx,rdi
   14000cba4:	call   0x14000999c
   14000cba9:	mov    rcx,QWORD PTR [rsp+0x28]
   14000cbae:	mov    eax,esi
   14000cbb0:	imul   rbx,rax,0x2a0
   14000cbb7:	add    rbx,r13
   14000cbba:	call   0x14000a5a0
   14000cbbf:	movsxd rdx,eax
   14000cbc2:	lea    r8,[rip+0x40ff]        # 0x140010cc8
   14000cbc9:	mov    r9,rbx
   14000cbcc:	shr    rdx,1
   14000cbcf:	mov    rbx,QWORD PTR [rsp+0x28]
   14000cbd4:	dec    rdx
   14000cbd7:	mov    rcx,rbx
   14000cbda:	call   0x140006ca4
   14000cbdf:	mov    rdx,rbx
   14000cbe2:	mov    rcx,rdi
   14000cbe5:	call   0x14000999c
   14000cbea:	mov    eax,0x1
   14000cbef:	inc    esi
   14000cbf1:	add    rbp,0x2a0
   14000cbf8:	cmp    esi,r12d
   14000cbfb:	jb     0x14000cb8f
   14000cbfd:	lea    rdx,[rip+0x3b74]        # 0x140010778
   14000cc04:	mov    rcx,rdi
   14000cc07:	call   0x14000999c
   14000cc0c:	mov    rsi,QWORD PTR [rsp+0x90]
   14000cc14:	test   rsi,rsi
   14000cc17:	je     0x14000cd72
   14000cc1d:	cmp    DWORD PTR [rsi],0x9
   14000cc20:	jne    0x14000cd72
   14000cc26:	mov    r14d,DWORD PTR [rsi+0x4]
   14000cc2a:	xor    ebp,ebp
   14000cc2c:	mov    DWORD PTR [rsp+0x24],r14d
   14000cc31:	mov    DWORD PTR [rsp+0x70],ebp
   14000cc35:	test   r14d,r14d
   14000cc38:	je     0x14000cd72
   14000cc3e:	mov    edx,ebp
   14000cc40:	mov    rcx,rsi
   14000cc43:	call   0x14000b65c
   14000cc48:	test   rax,rax
   14000cc4b:	je     0x14000cd49
   14000cc51:	and    DWORD PTR [rsp+0x20],0x0
   14000cc56:	xor    r15d,r15d
   14000cc59:	test   r12d,r12d
   14000cc5c:	je     0x14000cd3a
   14000cc62:	mov    esi,DWORD PTR [rsp+0x20]
   14000cc66:	lea    r14,[r13+0x200]
   14000cc6d:	mov    rbp,rax
   14000cc70:	mov    rcx,rbx
   14000cc73:	call   0x14000a5a0
   14000cc78:	movsxd r8,eax
   14000cc7b:	lea    rdx,[rip+0x39aa]        # 0x14001062c
   14000cc82:	shr    r8,1
   14000cc85:	mov    rcx,rbx
   14000cc88:	call   0x140009774
   14000cc8d:	test   DWORD PTR [r14+0x4],0x1000
   14000cc95:	jne    0x14000cd16
   14000cc97:	mov    rcx,QWORD PTR [rsp+0x28]
   14000cc9c:	mov    ebx,DWORD PTR [r14]
   14000cc9f:	call   0x14000a5a0
   14000cca4:	movsxd rcx,eax
   14000cca7:	lea    r9,[rip+0x4012]        # 0x140010cc0
   14000ccae:	shr    rcx,1
   14000ccb1:	mov    r8,rbp
   14000ccb4:	mov    DWORD PTR [r14],ecx
   14000ccb7:	mov    edx,r15d
   14000ccba:	mov    eax,r15d
   14000ccbd:	imul   rcx,rax,0x2a0
   14000ccc4:	add    rcx,r13
   14000ccc7:	call   0x14000bbbc
   14000cccc:	mov    DWORD PTR [r14],ebx
   14000cccf:	cmp    esi,0x1
   14000ccd2:	jne    0x14000cce3
   14000ccd4:	lea    rdx,[rip+0x3fe5]        # 0x140010cc0
   14000ccdb:	mov    rcx,rdi
   14000ccde:	call   0x14000999c
   14000cce3:	lea    rdx,[rip+0x3fea]        # 0x140010cd4
   14000ccea:	mov    rcx,rdi
   14000cced:	call   0x14000999c
   14000ccf2:	mov    rbx,QWORD PTR [rsp+0x28]
   14000ccf7:	mov    rcx,rdi
   14000ccfa:	mov    rdx,rbx
   14000ccfd:	call   0x14000999c
   14000cd02:	lea    rdx,[rip+0x3fcb]        # 0x140010cd4
   14000cd09:	mov    rcx,rdi
   14000cd0c:	call   0x14000999c
   14000cd11:	mov    esi,0x1
   14000cd16:	inc    r15d
   14000cd19:	add    r14,0x2a0
   14000cd20:	cmp    r15d,r12d
   14000cd23:	jb     0x14000cc70
   14000cd29:	mov    rsi,QWORD PTR [rsp+0x90]
   14000cd31:	mov    ebp,DWORD PTR [rsp+0x70]
   14000cd35:	mov    r14d,DWORD PTR [rsp+0x24]
   14000cd3a:	lea    rdx,[rip+0x3a37]        # 0x140010778
   14000cd41:	mov    rcx,rdi
   14000cd44:	call   0x14000999c
   14000cd49:	inc    ebp
   14000cd4b:	mov    DWORD PTR [rsp+0x70],ebp
   14000cd4f:	cmp    ebp,r14d
   14000cd52:	jb     0x14000cc3e
   14000cd58:	jmp    0x14000cd72
   14000cd5a:	call   QWORD PTR [rip+0x33f0]        # 0x140010150
   14000cd60:	test   eax,eax
   14000cd62:	jne    0x14000cd6d
   14000cd64:	lea    ecx,[rax+0x57]
   14000cd67:	call   QWORD PTR [rip+0x33eb]        # 0x140010158
   14000cd6d:	call   0x1400086e0
   14000cd72:	lea    r11,[rsp+0x40]
   14000cd77:	mov    rbx,QWORD PTR [r11+0x38]
   14000cd7b:	mov    rbp,QWORD PTR [r11+0x40]
   14000cd7f:	mov    rsi,QWORD PTR [r11+0x48]
   14000cd83:	mov    rsp,r11
   14000cd86:	pop    r15
   14000cd88:	pop    r14
   14000cd8a:	pop    r13
   14000cd8c:	pop    r12
   14000cd8e:	pop    rdi
   14000cd8f:	ret    
   14000cd90:	int3   
   14000cd91:	int3   
   14000cd92:	int3   
   14000cd93:	int3   
   14000cd94:	int3   
   14000cd95:	int3   
   14000cd96:	int3   
   14000cd97:	int3   
   14000cd98:	mov    rax,rsp
   14000cd9b:	mov    QWORD PTR [rax+0x8],rbx
   14000cd9f:	mov    QWORD PTR [rax+0x10],rbp
   14000cda3:	mov    QWORD PTR [rax+0x18],rsi
   14000cda7:	mov    QWORD PTR [rax+0x20],rdi
   14000cdab:	push   r14
   14000cdad:	sub    rsp,0x30
   14000cdb1:	mov    r14d,ecx
   14000cdb4:	mov    rsi,r9
   14000cdb7:	mov    ecx,0x1
   14000cdbc:	mov    ebp,r8d
   14000cdbf:	mov    rdi,rdx
   14000cdc2:	call   0x14000ebd8
   14000cdc7:	mov    rbx,rax
   14000cdca:	test   rax,rax
   14000cdcd:	je     0x14000ce39
   14000cdcf:	test   rdi,rdi
   14000cdd2:	je     0x14000ce39
   14000cdd4:	mov    r9d,ebp
   14000cdd7:	and    r9d,0xf
   14000cddb:	sub    r9d,0x1
   14000cddf:	je     0x14000ce1d
   14000cde1:	sub    r9d,0x1
   14000cde5:	je     0x14000ce05
   14000cde7:	cmp    r9d,0x1
   14000cdeb:	jne    0x14000ce30
   14000cded:	mov    r9d,ebp
   14000cdf0:	mov    QWORD PTR [rsp+0x20],rsi
   14000cdf5:	mov    r8,rdi
   14000cdf8:	mov    edx,r14d
   14000cdfb:	mov    rcx,rax
   14000cdfe:	call   0x14000cb00
   14000ce03:	jmp    0x14000ce30
   14000ce05:	mov    r9d,ebp
   14000ce08:	mov    QWORD PTR [rsp+0x20],rsi
   14000ce0d:	mov    r8,rdi
   14000ce10:	mov    edx,r14d
   14000ce13:	mov    rcx,rax
   14000ce16:	call   0x14000c17c
   14000ce1b:	jmp    0x14000ce30
   14000ce1d:	mov    r8,rdi
   14000ce20:	mov    QWORD PTR [rsp+0x20],rsi
   14000ce25:	mov    edx,r14d
   14000ce28:	mov    rcx,rax
   14000ce2b:	call   0x14000c810
   14000ce30:	mov    rcx,rbx
   14000ce33:	call   QWORD PTR [rip+0x36ff]        # 0x140010538
   14000ce39:	mov    rbx,QWORD PTR [rsp+0x40]
   14000ce3e:	mov    rbp,QWORD PTR [rsp+0x48]
   14000ce43:	mov    rsi,QWORD PTR [rsp+0x50]
   14000ce48:	mov    rdi,QWORD PTR [rsp+0x58]
   14000ce4d:	add    rsp,0x30
   14000ce51:	pop    r14
   14000ce53:	ret    
   14000ce54:	int3   
   14000ce55:	int3   
   14000ce56:	int3   
   14000ce57:	int3   
   14000ce58:	int3   
   14000ce59:	int3   
   14000ce5a:	int3   
   14000ce5b:	int3   
   14000ce5c:	mov    QWORD PTR [rsp+0x8],rbx
   14000ce61:	push   rbp
   14000ce62:	push   rsi
   14000ce63:	push   rdi
   14000ce64:	push   r12
   14000ce66:	push   r13
   14000ce68:	push   r14
   14000ce6a:	push   r15
   14000ce6c:	mov    rbp,rsp
   14000ce6f:	sub    rsp,0x50
   14000ce73:	xor    r15d,r15d
   14000ce76:	mov    rsi,rcx
   14000ce79:	xor    ecx,ecx
   14000ce7b:	mov    DWORD PTR [rbp+0x58],r15d
   14000ce7f:	mov    DWORD PTR [rbp+0x48],r15d
   14000ce83:	mov    DWORD PTR [rbp+0x50],r15d
   14000ce87:	mov    QWORD PTR [rbp-0x20],r15
   14000ce8b:	mov    QWORD PTR [rbp-0x10],r15
   14000ce8f:	call   QWORD PTR [rip+0x32c3]        # 0x140010158
   14000ce95:	mov    ebx,0x104
   14000ce9a:	lea    r12d,[r15+0x1]
   14000ce9e:	mov    edx,ebx
   14000cea0:	lea    r13d,[r15+0x7]
   14000cea4:	mov    eax,r15d
   14000cea7:	neg    eax
   14000cea9:	mov    r9d,r12d
   14000ceac:	mov    ecx,r13d
   14000ceaf:	sbb    eax,eax
   14000ceb1:	and    eax,ebx
   14000ceb3:	add    edx,eax
   14000ceb5:	mov    DWORD PTR [rbp+0x48],edx
   14000ceb8:	mov    r8d,edx
   14000cebb:	xor    edx,edx
   14000cebd:	call   0x1400082e8
   14000cec2:	mov    rdi,rax
   14000cec5:	test   rax,rax
   14000cec8:	je     0x14000d0ce
   14000cece:	mov    r8d,DWORD PTR [rbp+0x48]
   14000ced2:	mov    rdx,rax
   14000ced5:	xor    ecx,ecx
   14000ced7:	call   QWORD PTR [rip+0x31bb]        # 0x140010098
   14000cedd:	test   eax,eax
   14000cedf:	je     0x14000d0e1
   14000cee5:	mov    edx,DWORD PTR [rbp+0x48]
   14000cee8:	lea    ecx,[rdx-0x1]
   14000ceeb:	cmp    eax,ecx
   14000ceed:	jae    0x14000cea7
   14000ceef:	lea    r8,[rbp+0x58]
   14000cef3:	mov    rdx,rdi
   14000cef6:	mov    ecx,r12d
   14000cef9:	call   QWORD PTR [rip+0x3351]        # 0x140010250
   14000ceff:	mov    DWORD PTR [rbp+0x48],eax
   14000cf02:	test   eax,eax
   14000cf04:	jne    0x14000cf2a
   14000cf06:	call   QWORD PTR [rip+0x3244]        # 0x140010150
   14000cf0c:	test   eax,eax
   14000cf0e:	jne    0x14000d0e1
   14000cf14:	call   QWORD PTR [rip+0x3236]        # 0x140010150
   14000cf1a:	test   eax,eax
   14000cf1c:	jne    0x14000d0e1
   14000cf22:	lea    ecx,[rax+0x57]
   14000cf25:	jmp    0x14000d0db
   14000cf2a:	add    eax,0xa
   14000cf2d:	mov    ecx,eax
   14000cf2f:	mov    DWORD PTR [rbp+0x48],eax
   14000cf32:	call   0x14000a3f8
   14000cf37:	mov    QWORD PTR [rbp-0x18],rax
   14000cf3b:	mov    rbx,rax
   14000cf3e:	test   rax,rax
   14000cf41:	je     0x14000d0e1
   14000cf47:	mov    r9d,DWORD PTR [rbp+0x48]
   14000cf4b:	xor    r8d,r8d
   14000cf4e:	mov    rdx,rdi
   14000cf51:	mov    QWORD PTR [rsp+0x20],rax
   14000cf56:	lea    ecx,[r8+0x3]
   14000cf5a:	call   QWORD PTR [rip+0x32e0]        # 0x140010240
   14000cf60:	test   eax,eax
   14000cf62:	jne    0x14000cf72
   14000cf64:	lea    rcx,[rbp-0x18]
   14000cf68:	call   0x14000a31c
   14000cf6d:	jmp    0x14000d0e1
   14000cf72:	lea    r9,[rbp+0x50]
   14000cf76:	mov    rcx,rbx
   14000cf79:	lea    r8,[rbp-0x10]
   14000cf7d:	lea    rdx,[rip+0x3d54]        # 0x140010cd8
   14000cf84:	call   QWORD PTR [rip+0x32be]        # 0x140010248
   14000cf8a:	test   eax,eax
   14000cf8c:	je     0x14000cf64
   14000cf8e:	xor    edx,edx
   14000cf90:	mov    r9d,r12d
   14000cf93:	mov    ecx,r13d
   14000cf96:	lea    r8d,[rdx+0x40]
   14000cf9a:	call   0x1400082e8
   14000cf9f:	test   DWORD PTR [rbp+0x50],0xfffffffc
   14000cfa6:	mov    r14,rax
   14000cfa9:	mov    QWORD PTR [rbp-0x20],r15
   14000cfad:	mov    edi,r15d
   14000cfb0:	jbe    0x14000cf64
   14000cfb2:	mov    rdx,QWORD PTR [rbp-0x10]
   14000cfb6:	mov    r8d,edi
   14000cfb9:	movzx  ecx,WORD PTR [rdx+r8*4+0x2]
   14000cfbf:	movzx  r9d,WORD PTR [rdx+r8*4]
   14000cfc4:	lea    r8,[rip+0x3d45]        # 0x140010d10
   14000cfcb:	mov    DWORD PTR [rsp+0x20],ecx
   14000cfcf:	mov    edx,0x40
   14000cfd4:	mov    rcx,r14
   14000cfd7:	call   0x140006ca4
   14000cfdc:	lea    r9,[rbp+0x48]
   14000cfe0:	mov    rdx,r14
   14000cfe3:	lea    r8,[rbp-0x20]
   14000cfe7:	mov    rcx,rbx
   14000cfea:	call   QWORD PTR [rip+0x3258]        # 0x140010248
   14000cff0:	test   eax,eax
   14000cff2:	jne    0x14000d00a
   14000cff4:	mov    eax,DWORD PTR [rbp+0x50]
   14000cff7:	add    edi,r12d
   14000cffa:	shr    eax,0x2
   14000cffd:	mov    rcx,r15
   14000d000:	mov    QWORD PTR [rbp-0x20],rcx
   14000d004:	cmp    edi,eax
   14000d006:	jb     0x14000cfb2
   14000d008:	jmp    0x14000d00e
   14000d00a:	mov    rcx,QWORD PTR [rbp-0x20]
   14000d00e:	test   rcx,rcx
   14000d011:	je     0x14000cf64
   14000d017:	call   QWORD PTR [rip+0x312b]        # 0x140010148
   14000d01d:	cmp    eax,0x4
   14000d020:	ja     0x14000d043
   14000d022:	lea    rcx,[rbp-0x18]
   14000d026:	call   0x14000a31c
   14000d02b:	call   QWORD PTR [rip+0x311f]        # 0x140010150
   14000d031:	test   eax,eax
   14000d033:	jne    0x14000d0e1
   14000d039:	mov    ecx,0x42b
   14000d03e:	jmp    0x14000d0db
   14000d043:	mov    rcx,QWORD PTR [rbp-0x20]
   14000d047:	lea    rdx,[rip+0x3d12]        # 0x140010d60
   14000d04e:	xor    r9d,r9d
   14000d051:	mov    r8d,r12d
   14000d054:	call   0x140009154
   14000d059:	cmp    eax,0xffffffff
   14000d05c:	je     0x14000d087
   14000d05e:	mov    rcx,QWORD PTR [rbp-0x20]
   14000d062:	call   QWORD PTR [rip+0x30e0]        # 0x140010148
   14000d068:	lea    rcx,[rip+0x3cf1]        # 0x140010d60
   14000d06f:	movsxd rbx,eax
   14000d072:	call   QWORD PTR [rip+0x30d0]        # 0x140010148
   14000d078:	movsxd rcx,eax
   14000d07b:	mov    rax,QWORD PTR [rbp-0x20]
   14000d07f:	sub    rbx,rcx
   14000d082:	mov    WORD PTR [rax+rbx*2],r15w
   14000d087:	test   rsi,rsi
   14000d08a:	je     0x14000d118
   14000d090:	mov    rcx,QWORD PTR [rbp-0x20]
   14000d094:	call   QWORD PTR [rip+0x30ae]        # 0x140010148
   14000d09a:	mov    rcx,rsi
   14000d09d:	mov    ebx,eax
   14000d09f:	call   QWORD PTR [rip+0x30a3]        # 0x140010148
   14000d0a5:	mov    r9d,r12d
   14000d0a8:	xor    edx,edx
   14000d0aa:	mov    ecx,r13d
   14000d0ad:	lea    r8d,[rax+0xb]
   14000d0b1:	add    r8d,ebx
   14000d0b4:	mov    DWORD PTR [rbp+0x48],r8d
   14000d0b8:	call   0x1400082e8
   14000d0bd:	mov    rbx,rax
   14000d0c0:	test   rax,rax
   14000d0c3:	jne    0x14000d0fb
   14000d0c5:	lea    rcx,[rbp-0x18]
   14000d0c9:	call   0x14000a31c
   14000d0ce:	call   QWORD PTR [rip+0x307c]        # 0x140010150
   14000d0d4:	test   eax,eax
   14000d0d6:	jne    0x14000d0e1
   14000d0d8:	lea    ecx,[rax+0x8]
   14000d0db:	call   QWORD PTR [rip+0x3077]        # 0x140010158
   14000d0e1:	xor    eax,eax
   14000d0e3:	mov    rbx,QWORD PTR [rsp+0x90]
   14000d0eb:	add    rsp,0x50
   14000d0ef:	pop    r15
   14000d0f1:	pop    r14
   14000d0f3:	pop    r13
   14000d0f5:	pop    r12
   14000d0f7:	pop    rdi
   14000d0f8:	pop    rsi
   14000d0f9:	pop    rbp
   14000d0fa:	ret    
   14000d0fb:	mov    edx,DWORD PTR [rbp+0x48]
   14000d0fe:	lea    r8,[rip+0x3c6b]        # 0x140010d70
   14000d105:	mov    r9,QWORD PTR [rbp-0x20]
   14000d109:	mov    rcx,rax
   14000d10c:	mov    QWORD PTR [rsp+0x20],rsi
   14000d111:	call   0x140006ca4
   14000d116:	jmp    0x14000d13e
   14000d118:	mov    rdx,QWORD PTR [rbp-0x20]
   14000d11c:	mov    ecx,r13d
   14000d11f:	test   rdx,rdx
   14000d122:	jne    0x14000d12b
   14000d124:	call   0x14000827c
   14000d129:	jmp    0x14000d136
   14000d12b:	xor    r9d,r9d
   14000d12e:	xor    r8d,r8d
   14000d131:	call   0x1400082e8
   14000d136:	mov    rbx,rax
   14000d139:	test   rax,rax
   14000d13c:	je     0x14000d0c5
   14000d13e:	mov    rcx,rbx
   14000d141:	mov    QWORD PTR [rbp-0x20],rbx
   14000d145:	call   QWORD PTR [rip+0x30dd]        # 0x140010228
   14000d14b:	mov    edi,0x50
   14000d150:	mov    r9d,r12d
   14000d153:	mov    r8d,edi
   14000d156:	xor    edx,edx
   14000d158:	lea    ecx,[rdi-0x45]
   14000d15b:	call   0x1400082e8
   14000d160:	mov    rbx,rax
   14000d163:	test   rax,rax
   14000d166:	je     0x14000d0c5
   14000d16c:	mov    ecx,0x15ed
   14000d171:	call   0x140008af0
   14000d176:	mov    r9,QWORD PTR [rbp-0x20]
   14000d17a:	mov    r8,rax
   14000d17d:	mov    edx,edi
   14000d17f:	mov    rcx,rbx
   14000d182:	call   0x140006ca4
   14000d187:	lea    rcx,[rbp-0x18]
   14000d18b:	call   0x14000a31c
   14000d190:	mov    rax,rbx
   14000d193:	jmp    0x14000d0e3
   14000d198:	int3   
   14000d199:	int3   
   14000d19a:	int3   
   14000d19b:	int3   
   14000d19c:	int3   
   14000d19d:	int3   
   14000d19e:	int3   
   14000d19f:	int3   
   14000d1a0:	mov    QWORD PTR [rsp+0x8],rbx
   14000d1a5:	mov    QWORD PTR [rsp+0x10],rsi
   14000d1aa:	push   rdi
   14000d1ab:	sub    rsp,0x20
   14000d1af:	mov    rdi,rcx
   14000d1b2:	xor    ecx,ecx
   14000d1b4:	call   QWORD PTR [rip+0x2f9e]        # 0x140010158
   14000d1ba:	test   rdi,rdi
   14000d1bd:	je     0x14000d236
   14000d1bf:	mov    edx,0x7c
   14000d1c4:	mov    rcx,rdi
   14000d1c7:	call   0x140008f1c
   14000d1cc:	mov    ebx,eax
   14000d1ce:	cmp    eax,0xffffffff
   14000d1d1:	jne    0x14000d1e6
   14000d1d3:	xor    ecx,ecx
   14000d1d5:	call   QWORD PTR [rip+0x2f7d]        # 0x140010158
   14000d1db:	mov    rcx,rdi
   14000d1de:	call   QWORD PTR [rip+0x2f64]        # 0x140010148
   14000d1e4:	mov    ebx,eax
   14000d1e6:	xor    edx,edx
   14000d1e8:	lea    r8d,[rbx+0x5]
   14000d1ec:	lea    ecx,[rdx+0xc]
   14000d1ef:	lea    r9d,[rdx+0x1]
   14000d1f3:	call   0x1400082e8
   14000d1f8:	mov    rsi,rax
   14000d1fb:	test   rax,rax
   14000d1fe:	jne    0x14000d20f
   14000d200:	call   QWORD PTR [rip+0x2f4a]        # 0x140010150
   14000d206:	test   eax,eax
   14000d208:	jne    0x14000d249
   14000d20a:	lea    ecx,[rsi+0x8]
   14000d20d:	jmp    0x14000d243
   14000d20f:	lea    r8d,[rbx+0x1]
   14000d213:	mov    rcx,rax
   14000d216:	lea    rdx,[rip+0x33ff]        # 0x14001061c
   14000d21d:	call   0x140009774
   14000d222:	lea    r8d,[rbx+0x2]
   14000d226:	mov    rdx,rdi
   14000d229:	mov    rcx,rsi
   14000d22c:	call   0x140009818
   14000d231:	mov    rax,rsi
   14000d234:	jmp    0x14000d24b
   14000d236:	call   QWORD PTR [rip+0x2f14]        # 0x140010150
   14000d23c:	test   eax,eax
   14000d23e:	jne    0x14000d249
   14000d240:	lea    ecx,[rax+0x57]
   14000d243:	call   QWORD PTR [rip+0x2f0f]        # 0x140010158
   14000d249:	xor    eax,eax
   14000d24b:	mov    rbx,QWORD PTR [rsp+0x30]
   14000d250:	mov    rsi,QWORD PTR [rsp+0x38]
   14000d255:	add    rsp,0x20
   14000d259:	pop    rdi
   14000d25a:	ret    
   14000d25b:	int3   
   14000d25c:	int3   
   14000d25d:	int3   
   14000d25e:	int3   
   14000d25f:	int3   
   14000d260:	int3   
   14000d261:	int3   
   14000d262:	int3   
   14000d263:	int3   
   14000d264:	mov    QWORD PTR [rsp+0x8],rbx
   14000d269:	mov    QWORD PTR [rsp+0x10],rbp
   14000d26e:	mov    QWORD PTR [rsp+0x18],rsi
   14000d273:	push   rdi
   14000d274:	push   r12
   14000d276:	push   r13
   14000d278:	push   r14
   14000d27a:	push   r15
   14000d27c:	sub    rsp,0x30
   14000d280:	mov    r14,rcx
   14000d283:	xor    r13d,r13d
   14000d286:	xor    ecx,ecx
   14000d288:	mov    r12d,r13d
   14000d28b:	mov    rbx,r8
   14000d28e:	call   QWORD PTR [rip+0x2ec4]        # 0x140010158
   14000d294:	test   rbx,rbx
   14000d297:	jne    0x14000d2af
   14000d299:	call   QWORD PTR [rip+0x2eb1]        # 0x140010150
   14000d29f:	test   eax,eax
   14000d2a1:	jne    0x14000d529
   14000d2a7:	lea    ecx,[rax+0x57]
   14000d2aa:	jmp    0x14000d523
   14000d2af:	test   r14,r14
   14000d2b2:	je     0x14000d299
   14000d2b4:	or     DWORD PTR [r14],0xffffffff
   14000d2b8:	mov    r15d,r13d
   14000d2bb:	add    rbx,0x58
   14000d2bf:	lea    rbp,[rbx-0x58]
   14000d2c3:	test   rbp,rbp
   14000d2c6:	je     0x14000d514
   14000d2cc:	call   QWORD PTR [rip+0x2e3e]        # 0x140010110
   14000d2d2:	or     DWORD PTR [rsp+0x28],0xffffffff
   14000d2d7:	or     r9d,0xffffffff
   14000d2db:	mov    ecx,eax
   14000d2dd:	mov    r8,rbp
   14000d2e0:	lea    rax,[rip+0x3a99]        # 0x140010d80
   14000d2e7:	mov    QWORD PTR [rsp+0x20],rax
   14000d2ec:	lea    edx,[r9+0x2]
   14000d2f0:	call   QWORD PTR [rip+0x2e12]        # 0x140010108
   14000d2f6:	add    eax,0xfffffffe
   14000d2f9:	jne    0x14000d299
   14000d2fb:	mov    rdi,QWORD PTR [rbx-0x48]
   14000d2ff:	cmp    DWORD PTR [rbx],r13d
   14000d302:	jne    0x14000d299
   14000d304:	cmp    QWORD PTR [rbx+0x8],r13
   14000d308:	jne    0x14000d299
   14000d30a:	cmp    QWORD PTR [rbx+0x10],r13
   14000d30e:	jne    0x14000d299
   14000d310:	cmp    QWORD PTR [rbx+0x18],r13
   14000d314:	jne    0x14000d299
   14000d316:	mov    rsi,rdi
   14000d319:	and    esi,0x40000
   14000d31f:	jne    0x14000d33c
   14000d321:	mov    rcx,QWORD PTR [rbx-0x38]
   14000d325:	test   rcx,rcx
   14000d328:	je     0x14000d299
   14000d32e:	call   QWORD PTR [rip+0x2e14]        # 0x140010148
   14000d334:	test   eax,eax
   14000d336:	je     0x14000d299
   14000d33c:	mov    rax,rdi
   14000d33f:	and    eax,0x20000
   14000d344:	je     0x14000d350
   14000d346:	cmp    DWORD PTR [rbx-0x50],0xa
   14000d34a:	jne    0x14000d299
   14000d350:	test   rax,rax
   14000d353:	je     0x14000d365
   14000d355:	cmp    r12d,0x1
   14000d359:	je     0x14000d299
   14000d35f:	mov    r12d,0x1
   14000d365:	test   rsi,rsi
   14000d368:	je     0x14000d377
   14000d36a:	cmp    DWORD PTR [r14],0xffffffff
   14000d36e:	jne    0x14000d299
   14000d374:	mov    DWORD PTR [r14],r15d
   14000d377:	mov    ecx,0x60000
   14000d37c:	mov    rax,rdi
   14000d37f:	and    rax,rcx
   14000d382:	cmp    rax,rcx
   14000d385:	je     0x14000d299
   14000d38b:	mov    eax,DWORD PTR [rbx-0x50]
   14000d38e:	cmp    eax,0x1
   14000d391:	je     0x14000d458
   14000d397:	jbe    0x14000d299
   14000d39d:	cmp    eax,0x3
   14000d3a0:	jbe    0x14000d3fb
   14000d3a2:	cmp    eax,0x6
   14000d3a5:	jbe    0x14000d50d
   14000d3ab:	cmp    eax,0x8
   14000d3ae:	jbe    0x14000d3fb
   14000d3b0:	cmp    eax,0x9
   14000d3b3:	je     0x14000d3de
   14000d3b5:	cmp    eax,0xa
   14000d3b8:	jne    0x14000d299
   14000d3be:	test   dil,0xf
   14000d3c2:	jne    0x14000d299
   14000d3c8:	test   rdi,0xfff0
   14000d3cf:	jne    0x14000d299
   14000d3d5:	test   rdi,0xffffffffffedffff
   14000d3dc:	jmp    0x14000d44d
   14000d3de:	cmp    QWORD PTR [rbx-0x10],r13
   14000d3e2:	je     0x14000d299
   14000d3e8:	cmp    QWORD PTR [rbx-0x8],r13
   14000d3ec:	jne    0x14000d4f1
   14000d3f2:	mov    QWORD PTR [rbx-0x8],rbp
   14000d3f6:	jmp    0x14000d4f1
   14000d3fb:	test   dil,0x2
   14000d3ff:	jne    0x14000d50d
   14000d405:	test   rdi,0x10040
   14000d40c:	jne    0x14000d299
   14000d412:	test   dil,dil
   14000d415:	js     0x14000d299
   14000d41b:	mov    rax,QWORD PTR [rbx-0x20]
   14000d41f:	test   rax,rax
   14000d422:	je     0x14000d299
   14000d428:	test   dil,0x1
   14000d42c:	je     0x14000d43f
   14000d42e:	mov    rax,QWORD PTR [rax]
   14000d431:	test   rax,rax
   14000d434:	je     0x14000d299
   14000d43a:	cmp    DWORD PTR [rax],0x9
   14000d43d:	jmp    0x14000d44d
   14000d43f:	cmp    DWORD PTR [rbx-0x40],0x1
   14000d443:	ja     0x14000d299
   14000d449:	test   dil,0x20
   14000d44d:	jne    0x14000d299
   14000d453:	jmp    0x14000d4f1
   14000d458:	mov    r8,rdi
   14000d45b:	and    r8d,0x10000
   14000d462:	je     0x14000d48f
   14000d464:	mov    rax,rdi
   14000d467:	and    eax,0x1
   14000d46a:	jne    0x14000d299
   14000d470:	cmp    QWORD PTR [rbx-0x20],r13
   14000d474:	jne    0x14000d299
   14000d47a:	test   r13b,r13b
   14000d47d:	jne    0x14000d299
   14000d483:	cmp    DWORD PTR [rbx-0x18],0x1
   14000d487:	je     0x14000d299
   14000d48d:	jmp    0x14000d4b9
   14000d48f:	mov    rcx,QWORD PTR [rbx-0x20]
   14000d493:	test   rcx,rcx
   14000d496:	je     0x14000d299
   14000d49c:	mov    rax,rdi
   14000d49f:	and    eax,0x1
   14000d4a2:	je     0x14000d4b9
   14000d4a4:	mov    rdx,QWORD PTR [rcx]
   14000d4a7:	test   rdx,rdx
   14000d4aa:	je     0x14000d299
   14000d4b0:	cmp    DWORD PTR [rdx],0x9
   14000d4b3:	jne    0x14000d299
   14000d4b9:	test   dil,0x2
   14000d4bd:	je     0x14000d4c9
   14000d4bf:	cmp    QWORD PTR [rbx-0x28],r13
   14000d4c3:	je     0x14000d299
   14000d4c9:	test   rax,rax
   14000d4cc:	jne    0x14000d4f1
   14000d4ce:	cmp    DWORD PTR [rbx-0x40],0x1
   14000d4d2:	jne    0x14000d299
   14000d4d8:	test   dil,0x20
   14000d4dc:	jne    0x14000d299
   14000d4e2:	test   r8,r8
   14000d4e5:	jne    0x14000d4f1
   14000d4e7:	cmp    DWORD PTR [rbx-0x18],0x2
   14000d4eb:	jb     0x14000d299
   14000d4f1:	mov    DWORD PTR [rbx-0x3c],r13d
   14000d4f5:	inc    r15d
   14000d4f8:	add    rbx,0x78
   14000d4fc:	cmp    r15d,0x8
   14000d500:	jb     0x14000d2bf
   14000d506:	mov    eax,0x1
   14000d50b:	jmp    0x14000d52b
   14000d50d:	mov    ecx,0x78
   14000d512:	jmp    0x14000d523
   14000d514:	call   QWORD PTR [rip+0x2c36]        # 0x140010150
   14000d51a:	test   eax,eax
   14000d51c:	jne    0x14000d529
   14000d51e:	mov    ecx,0x42b
   14000d523:	call   QWORD PTR [rip+0x2c2f]        # 0x140010158
   14000d529:	xor    eax,eax
   14000d52b:	mov    rbx,QWORD PTR [rsp+0x60]
   14000d530:	mov    rbp,QWORD PTR [rsp+0x68]
   14000d535:	mov    rsi,QWORD PTR [rsp+0x70]
   14000d53a:	add    rsp,0x30
   14000d53e:	pop    r15
   14000d540:	pop    r14
   14000d542:	pop    r13
   14000d544:	pop    r12
   14000d546:	pop    rdi
   14000d547:	ret    
   14000d548:	int3   
   14000d549:	int3   
   14000d54a:	int3   
   14000d54b:	int3   
   14000d54c:	int3   
   14000d54d:	int3   
   14000d54e:	int3   
   14000d54f:	int3   
   14000d550:	mov    QWORD PTR [rsp+0x8],rbx
   14000d555:	push   rbp
   14000d556:	push   rsi
   14000d557:	push   rdi
   14000d558:	push   r12
   14000d55a:	push   r13
   14000d55c:	push   r14
   14000d55e:	push   r15
   14000d560:	sub    rsp,0x60
   14000d564:	and    DWORD PTR [rsp+0xb8],0x0
   14000d56c:	mov    rdi,rcx
   14000d56f:	and    DWORD PTR [rsp+0xb0],0x0
   14000d577:	xor    ecx,ecx
   14000d579:	movaps XMMWORD PTR [rsp+0x50],xmm6
   14000d57e:	mov    r15,r8
   14000d581:	movaps XMMWORD PTR [rsp+0x40],xmm7
   14000d586:	mov    rsi,rdx
   14000d589:	xorps  xmm7,xmm7
   14000d58c:	xorps  xmm6,xmm6
   14000d58f:	call   QWORD PTR [rip+0x2bc3]        # 0x140010158
   14000d595:	test   r15,r15
   14000d598:	je     0x14000d644
   14000d59e:	mov    rbp,QWORD PTR [r15+0x10]
   14000d5a2:	mov    r14,QWORD PTR [r15+0x8]
   14000d5a6:	test   rbp,rbp
   14000d5a9:	je     0x14000d644
   14000d5af:	test   r14,r14
   14000d5b2:	je     0x14000d644
   14000d5b8:	mov    rcx,QWORD PTR [rbp+0x30]
   14000d5bc:	mov    eax,DWORD PTR [rbp+0x8]
   14000d5bf:	mov    rbx,QWORD PTR [rbp+0x38]
   14000d5c3:	mov    r13,QWORD PTR [rbp+0x10]
   14000d5c7:	mov    r12d,DWORD PTR [rbp+0x40]
   14000d5cb:	mov    QWORD PTR [rsp+0x30],rcx
   14000d5d0:	cmp    eax,0xa
   14000d5d3:	je     0x14000d638
   14000d5d5:	test   rsi,rsi
   14000d5d8:	jne    0x14000d638
   14000d5da:	test   r13b,0x10
   14000d5de:	jne    0x14000d638
   14000d5e0:	test   rdi,rdi
   14000d5e3:	je     0x14000d611
   14000d5e5:	mov    rcx,rdi
   14000d5e8:	call   QWORD PTR [rip+0x2b5a]        # 0x140010148
   14000d5ee:	test   eax,eax
   14000d5f0:	je     0x14000d611
   14000d5f2:	mov    ecx,0x15eb
   14000d5f7:	call   0x140008af0
   14000d5fc:	mov    r8,rdi
   14000d5ff:	mov    r9,r14
   14000d602:	mov    rdx,rax
   14000d605:	mov    ecx,0x2
   14000d60a:	call   0x1400085a4
   14000d60f:	jmp    0x14000d62b
   14000d611:	call   QWORD PTR [rip+0x2b39]        # 0x140010150
   14000d617:	test   eax,eax
   14000d619:	jne    0x14000d626
   14000d61b:	mov    ecx,0x42b
   14000d620:	call   QWORD PTR [rip+0x2b32]        # 0x140010158
   14000d626:	call   0x1400086e0
   14000d62b:	mov    ecx,0x800401e4
   14000d630:	call   QWORD PTR [rip+0x2b22]        # 0x140010158
   14000d636:	jmp    0x14000d65c
   14000d638:	test   rdi,rdi
   14000d63b:	jne    0x14000d680
   14000d63d:	bt     r13,0x12
   14000d642:	jb     0x14000d68c
   14000d644:	call   QWORD PTR [rip+0x2b06]        # 0x140010150
   14000d64a:	test   eax,eax
   14000d64c:	jne    0x14000d657
   14000d64e:	lea    ecx,[rax+0x57]
   14000d651:	call   QWORD PTR [rip+0x2b01]        # 0x140010158
   14000d657:	call   0x1400086e0
   14000d65c:	xor    eax,eax
   14000d65e:	mov    rbx,QWORD PTR [rsp+0xa0]
   14000d666:	movaps xmm6,XMMWORD PTR [rsp+0x50]
   14000d66b:	movaps xmm7,XMMWORD PTR [rsp+0x40]
   14000d670:	add    rsp,0x60
   14000d674:	pop    r15
   14000d676:	pop    r14
   14000d678:	pop    r13
   14000d67a:	pop    r12
   14000d67c:	pop    rdi
   14000d67d:	pop    rsi
   14000d67e:	pop    rbp
   14000d67f:	ret    
   14000d680:	cmp    QWORD PTR [rbp+0x28],0x0
   14000d685:	je     0x14000d690
   14000d687:	cmp    eax,0x9
   14000d68a:	je     0x14000d690
   14000d68c:	mov    rdi,QWORD PTR [rbp+0x28]
   14000d690:	cmp    eax,0x1
   14000d693:	je     0x14000d959
   14000d699:	jbe    0x14000d644
   14000d69b:	cmp    eax,0x3
   14000d69e:	jbe    0x14000d845
   14000d6a4:	cmp    eax,0x6
   14000d6a7:	jbe    0x14000d9af
   14000d6ad:	cmp    eax,0x8
   14000d6b0:	jbe    0x14000d711
   14000d6b2:	cmp    eax,0x9
   14000d6b5:	je     0x14000d6f0
   14000d6b7:	cmp    eax,0xa
   14000d6ba:	jne    0x14000d644
   14000d6bc:	test   rsi,rsi
   14000d6bf:	je     0x14000d6e5
   14000d6c1:	test   rdi,rdi
   14000d6c4:	je     0x14000d611
   14000d6ca:	mov    rcx,rdi
   14000d6cd:	call   QWORD PTR [rip+0x2a75]        # 0x140010148
   14000d6d3:	test   eax,eax
   14000d6d5:	je     0x14000d611
   14000d6db:	mov    ecx,0x15f3
   14000d6e0:	jmp    0x14000d5f7
   14000d6e5:	mov    DWORD PTR [rbx],0x1
   14000d6eb:	jmp    0x14000d9af
   14000d6f0:	mov    rbx,QWORD PTR [rbp+0x48]
   14000d6f4:	mov    rcx,rbx
   14000d6f7:	call   QWORD PTR [rip+0x2e8b]        # 0x140010588
   14000d6fd:	mov    r8,QWORD PTR [rbp+0x50]
   14000d701:	mov    r9,r15
   14000d704:	mov    rdx,rsi
   14000d707:	mov    rcx,rdi
   14000d70a:	call   rbx
   14000d70c:	jmp    0x14000d65e
   14000d711:	test   rsi,rsi
   14000d714:	je     0x14000d9af
   14000d71a:	mov    rcx,rsi
   14000d71d:	call   0x140008cb0
   14000d722:	call   QWORD PTR [rip+0x2a28]        # 0x140010150
   14000d728:	test   eax,eax
   14000d72a:	je     0x14000d778
   14000d72c:	test   r13b,0x10
   14000d730:	je     0x14000d73d
   14000d732:	cmp    DWORD PTR [r15+0x4],0xffffffff
   14000d737:	jne    0x14000d926
   14000d73d:	test   rdi,rdi
   14000d740:	je     0x14000d759
   14000d742:	mov    rcx,rdi
   14000d745:	call   QWORD PTR [rip+0x29fd]        # 0x140010148
   14000d74b:	test   eax,eax
   14000d74d:	je     0x14000d759
   14000d74f:	mov    ecx,0x15e3
   14000d754:	jmp    0x14000d5f7
   14000d759:	mov    ecx,0x15f1
   14000d75e:	call   0x140008af0
   14000d763:	mov    rdx,rax
   14000d766:	mov    r8,r14
   14000d769:	mov    ecx,0x1
   14000d76e:	call   0x1400085a4
   14000d773:	jmp    0x14000d62b
   14000d778:	cmp    DWORD PTR [rbp+0x8],0x7
   14000d77c:	mov    rcx,rsi
   14000d77f:	jne    0x14000d78f
   14000d781:	call   0x140008cb0
   14000d786:	xorps  xmm7,xmm7
   14000d789:	cvtsd2ss xmm7,xmm0
   14000d78d:	jmp    0x14000d797
   14000d78f:	call   0x140008cb0
   14000d794:	movaps xmm6,xmm0
   14000d797:	test   r13b,0x1
   14000d79b:	je     0x14000d82d
   14000d7a1:	mov    eax,DWORD PTR [rbp+0x10]
   14000d7a4:	bt     rax,0xe
   14000d7a9:	jae    0x14000d7f3
   14000d7ab:	mov    rcx,QWORD PTR [rbx]
   14000d7ae:	xor    r9d,r9d
   14000d7b1:	cmp    DWORD PTR [rbp+0x8],0x7
   14000d7b5:	jne    0x14000d7cf
   14000d7b7:	movss  DWORD PTR [rsp+0xb0],xmm7
   14000d7c0:	lea    r8,[rsp+0xb0]
   14000d7c8:	mov    edx,0x60000
   14000d7cd:	jmp    0x14000d7e5
   14000d7cf:	movsd  QWORD PTR [rsp+0xb0],xmm6
   14000d7d8:	lea    r8,[rsp+0xb0]
   14000d7e0:	mov    edx,0x70000
   14000d7e5:	call   0x14000b0c4
   14000d7ea:	cmp    eax,0xffffffff
   14000d7ed:	jne    0x14000d9af
   14000d7f3:	cmp    DWORD PTR [rbp+0x8],0x7
   14000d7f7:	mov    rcx,QWORD PTR [rbx]
   14000d7fa:	jne    0x14000d806
   14000d7fc:	movaps xmm1,xmm7
   14000d7ff:	call   0x14000b3c4
   14000d804:	jmp    0x14000d80e
   14000d806:	movaps xmm1,xmm6
   14000d809:	call   0x14000b430
   14000d80e:	cmp    eax,0xffffffff
   14000d811:	jne    0x14000d9af
   14000d817:	call   QWORD PTR [rip+0x2933]        # 0x140010150
   14000d81d:	test   eax,eax
   14000d81f:	jne    0x14000d657
   14000d825:	lea    ecx,[rax+0x8]
   14000d828:	jmp    0x14000d651
   14000d82d:	cmp    DWORD PTR [rbp+0x8],0x7
   14000d831:	jne    0x14000d83c
   14000d833:	movss  DWORD PTR [rbx],xmm7
   14000d837:	jmp    0x14000d9af
   14000d83c:	movsd  QWORD PTR [rbx],xmm6
   14000d840:	jmp    0x14000d9af
   14000d845:	xor    r12d,r12d
   14000d848:	cmp    eax,0x2
   14000d84b:	sete   r12b
   14000d84f:	test   rsi,rsi
   14000d852:	je     0x14000d9af
   14000d858:	mov    rcx,rsi
   14000d85b:	call   QWORD PTR [rip+0x28e7]        # 0x140010148
   14000d861:	test   eax,eax
   14000d863:	je     0x14000d919
   14000d869:	mov    r8d,r12d
   14000d86c:	mov    rcx,rsi
   14000d86f:	call   0x140008e3c
   14000d874:	test   eax,eax
   14000d876:	je     0x14000d919
   14000d87c:	mov    rcx,rsi
   14000d87f:	call   0x140008d68
   14000d884:	cmp    r12d,0x1
   14000d888:	jne    0x14000d895
   14000d88a:	mov    edi,DWORD PTR [rsp+0xb0]
   14000d891:	mov    esi,eax
   14000d893:	jmp    0x14000d89e
   14000d895:	mov    esi,DWORD PTR [rsp+0xb8]
   14000d89c:	mov    edi,eax
   14000d89e:	test   r13b,0x1
   14000d8a2:	je     0x14000d90b
   14000d8a4:	mov    ecx,DWORD PTR [rbp+0x10]
   14000d8a7:	bt     rcx,0xe
   14000d8ac:	jae    0x14000d8ea
   14000d8ae:	mov    rcx,QWORD PTR [rbx]
   14000d8b1:	lea    r8,[rsp+0xb0]
   14000d8b9:	xor    r9d,r9d
   14000d8bc:	cmp    r12d,0x1
   14000d8c0:	jne    0x14000d8d0
   14000d8c2:	mov    DWORD PTR [rsp+0xb0],esi
   14000d8c9:	mov    edx,0x30000
   14000d8ce:	jmp    0x14000d8dc
   14000d8d0:	mov    DWORD PTR [rsp+0xb0],edi
   14000d8d7:	mov    edx,0x40000
   14000d8dc:	call   0x14000b0c4
   14000d8e1:	cmp    eax,0xffffffff
   14000d8e4:	jne    0x14000d9af
   14000d8ea:	mov    rcx,QWORD PTR [rbx]
   14000d8ed:	cmp    r12d,0x1
   14000d8f1:	jne    0x14000d8ff
   14000d8f3:	mov    edx,esi
   14000d8f5:	call   0x14000b2f4
   14000d8fa:	jmp    0x14000d80e
   14000d8ff:	mov    edx,edi
   14000d901:	call   0x14000b35c
   14000d906:	jmp    0x14000d80e
   14000d90b:	cmp    r12d,0x1
   14000d90f:	cmove  edi,esi
   14000d912:	mov    DWORD PTR [rbx],edi
   14000d914:	jmp    0x14000d9af
   14000d919:	test   r13b,0x10
   14000d91d:	je     0x14000d933
   14000d91f:	cmp    DWORD PTR [r15+0x4],0xffffffff
   14000d924:	je     0x14000d933
   14000d926:	mov    eax,0x1
   14000d92b:	mov    DWORD PTR [r15],eax
   14000d92e:	jmp    0x14000d65e
   14000d933:	test   rdi,rdi
   14000d936:	je     0x14000d94f
   14000d938:	mov    rcx,rdi
   14000d93b:	call   QWORD PTR [rip+0x2807]        # 0x140010148
   14000d941:	test   eax,eax
   14000d943:	je     0x14000d94f
   14000d945:	mov    ecx,0x15e2
   14000d94a:	jmp    0x14000d5f7
   14000d94f:	mov    ecx,0x15f0
   14000d954:	jmp    0x14000d75e
   14000d959:	test   rsi,rsi
   14000d95c:	je     0x14000d9a4
   14000d95e:	test   r13b,0x42
   14000d962:	je     0x14000d9a4
   14000d964:	xor    r9d,r9d
   14000d967:	xor    r8d,r8d
   14000d96a:	mov    rdx,rsi
   14000d96d:	lea    ecx,[r9+0xa]
   14000d971:	call   0x1400082e8
   14000d976:	test   rax,rax
   14000d979:	je     0x14000d817
   14000d97f:	lea    rdx,[rip+0x324e]        # 0x140010bd4
   14000d986:	mov    rcx,rax
   14000d989:	call   0x140009260
   14000d98e:	mov    rsi,rax
   14000d991:	call   QWORD PTR [rip+0x27b9]        # 0x140010150
   14000d997:	test   eax,eax
   14000d999:	jne    0x14000d657
   14000d99f:	mov    rcx,QWORD PTR [rsp+0x30]
   14000d9a4:	test   r13b,0x2
   14000d9a8:	je     0x14000da19
   14000d9aa:	test   rsi,rsi
   14000d9ad:	jne    0x14000d9b9
   14000d9af:	mov    eax,0x1
   14000d9b4:	jmp    0x14000d65e
   14000d9b9:	mov    rdx,rcx
   14000d9bc:	mov    r8d,0x1
   14000d9c2:	mov    rcx,rsi
   14000d9c5:	call   0x140008f84
   14000d9ca:	test   eax,eax
   14000d9cc:	jne    0x14000da19
   14000d9ce:	test   rdi,rdi
   14000d9d1:	je     0x14000da07
   14000d9d3:	mov    rcx,rdi
   14000d9d6:	call   QWORD PTR [rip+0x276c]        # 0x140010148
   14000d9dc:	test   eax,eax
   14000d9de:	je     0x14000da07
   14000d9e0:	mov    ecx,0x15e1
   14000d9e5:	call   0x140008af0
   14000d9ea:	mov    rdx,rax
   14000d9ed:	mov    QWORD PTR [rsp+0x20],r14
   14000d9f2:	mov    r9,rdi
   14000d9f5:	mov    r8,rsi
   14000d9f8:	mov    ecx,0x3
   14000d9fd:	call   0x1400085a4
   14000da02:	jmp    0x14000d62b
   14000da07:	mov    ecx,0x15ec
   14000da0c:	call   0x140008af0
   14000da11:	mov    r8,rsi
   14000da14:	jmp    0x14000d5ff
   14000da19:	test   rsi,rsi
   14000da1c:	je     0x14000d9af
   14000da1e:	test   r13b,r13b
   14000da21:	jns    0x14000da56
   14000da23:	mov    rcx,rsi
   14000da26:	call   QWORD PTR [rip+0x271c]        # 0x140010148
   14000da2c:	test   eax,eax
   14000da2e:	jne    0x14000da56
   14000da30:	test   rdi,rdi
   14000da33:	je     0x14000da4c
   14000da35:	mov    rcx,rdi
   14000da38:	call   QWORD PTR [rip+0x270a]        # 0x140010148
   14000da3e:	test   eax,eax
   14000da40:	je     0x14000da4c
   14000da42:	mov    ecx,0x15ee
   14000da47:	jmp    0x14000d5f7
   14000da4c:	mov    ecx,0x15ef
   14000da51:	jmp    0x14000d75e
   14000da56:	test   r13b,0x1
   14000da5a:	je     0x14000da95
   14000da5c:	mov    eax,DWORD PTR [rbp+0x10]
   14000da5f:	bt     rax,0xe
   14000da64:	jae    0x14000da85
   14000da66:	mov    rcx,QWORD PTR [rbx]
   14000da69:	mov    r9d,0x1
   14000da6f:	mov    r8,rsi
   14000da72:	mov    edx,0x20000
   14000da77:	call   0x14000b0c4
   14000da7c:	cmp    eax,0xffffffff
   14000da7f:	jne    0x14000d9af
   14000da85:	mov    rcx,QWORD PTR [rbx]
   14000da88:	mov    rdx,rsi
   14000da8b:	call   0x14000b260
   14000da90:	jmp    0x14000d80e
   14000da95:	test   r12d,r12d
   14000da98:	je     0x14000daff
   14000da9a:	mov    rcx,rsi
   14000da9d:	call   QWORD PTR [rip+0x26a5]        # 0x140010148
   14000daa3:	cmp    eax,r12d
   14000daa6:	jl     0x14000daff
   14000daa8:	test   rdi,rdi
   14000daab:	je     0x14000dade
   14000daad:	mov    rcx,rdi
   14000dab0:	call   QWORD PTR [rip+0x2692]        # 0x140010148
   14000dab6:	test   eax,eax
   14000dab8:	je     0x14000dade
   14000daba:	mov    ecx,0x15f4
   14000dabf:	call   0x140008af0
   14000dac4:	mov    rdx,rax
   14000dac7:	lea    r9d,[r12-0x1]
   14000dacc:	mov    r8,rdi
   14000dacf:	mov    ecx,0x2
   14000dad4:	call   0x1400085a4
   14000dad9:	jmp    0x14000d62b
   14000dade:	mov    ecx,0x15f2
   14000dae3:	call   0x140008af0
   14000dae8:	mov    rdx,rax
   14000daeb:	lea    r8d,[r12-0x1]
   14000daf0:	mov    ecx,0x1
   14000daf5:	call   0x1400085a4
   14000dafa:	jmp    0x14000d62b
   14000daff:	bt     r13,0x10
   14000db04:	jae    0x14000db2c
   14000db06:	mov    rcx,rsi
   14000db09:	call   QWORD PTR [rip+0x2639]        # 0x140010148
   14000db0f:	lea    r12d,[rax+0x1]
   14000db13:	lea    ecx,[r12+r12*1]
   14000db17:	call   0x14000a3f8
   14000db1c:	mov    rbx,rax
   14000db1f:	test   rax,rax
   14000db22:	je     0x14000d817
   14000db28:	mov    QWORD PTR [rbp+0x38],rax
   14000db2c:	mov    r8d,r12d
   14000db2f:	mov    rdx,rsi
   14000db32:	mov    rcx,rbx
   14000db35:	call   0x140009774
   14000db3a:	jmp    0x14000d9af
   14000db3f:	int3   
   14000db40:	int3   
   14000db41:	int3   
   14000db42:	int3   
   14000db43:	int3   
   14000db44:	int3   
   14000db45:	int3   
   14000db46:	int3   
   14000db47:	int3   
   14000db48:	mov    QWORD PTR [rsp+0x8],rbx
   14000db4d:	mov    QWORD PTR [rsp+0x10],rsi
   14000db52:	mov    QWORD PTR [rsp+0x18],rdi
   14000db57:	push   r14
   14000db59:	sub    rsp,0x20
   14000db5d:	xor    ecx,ecx
   14000db5f:	mov    r14,r8
   14000db62:	mov    rbx,rdx
   14000db65:	call   QWORD PTR [rip+0x25ed]        # 0x140010158
   14000db6b:	test   rbx,rbx
   14000db6e:	je     0x14000dc1d
   14000db74:	test   r14,r14
   14000db77:	je     0x14000dc1d
   14000db7d:	xor    ecx,ecx
   14000db7f:	call   QWORD PTR [rip+0x25d3]        # 0x140010158
   14000db85:	mov    rcx,r14
   14000db88:	call   QWORD PTR [rip+0x25ba]        # 0x140010148
   14000db8e:	cmp    eax,0x1
   14000db91:	jle    0x14000dbf4
   14000db93:	movzx  edx,WORD PTR [r14]
   14000db97:	lea    rcx,[rip+0x31ea]        # 0x140010d88
   14000db9e:	call   0x140008f1c
   14000dba3:	cmp    eax,0xffffffff
   14000dba6:	je     0x14000dbf4
   14000dba8:	xor    edi,edi
   14000dbaa:	add    rbx,0x20
   14000dbae:	lea    rax,[rbx-0x20]
   14000dbb2:	test   rax,rax
   14000dbb5:	je     0x14000dbff
   14000dbb7:	mov    esi,DWORD PTR [rbx-0x10]
   14000dbba:	mov    rcx,QWORD PTR [rbx]
   14000dbbd:	shr    rsi,0x14
   14000dbc1:	not    esi
   14000dbc3:	and    esi,0x1
   14000dbc6:	test   rcx,rcx
   14000dbc9:	je     0x14000dbe9
   14000dbcb:	call   QWORD PTR [rip+0x2577]        # 0x140010148
   14000dbd1:	test   eax,eax
   14000dbd3:	jle    0x14000dbe9
   14000dbd5:	mov    rdx,QWORD PTR [rbx]
   14000dbd8:	lea    rcx,[r14+0x2]
   14000dbdc:	mov    r8d,esi
   14000dbdf:	call   0x140008f84
   14000dbe4:	cmp    eax,0x1
   14000dbe7:	je     0x14000dbfb
   14000dbe9:	inc    edi
   14000dbeb:	add    rbx,0x78
   14000dbef:	cmp    edi,0x8
   14000dbf2:	jb     0x14000dbae
   14000dbf4:	mov    ecx,0x490
   14000dbf9:	jmp    0x14000dc2a
   14000dbfb:	mov    eax,edi
   14000dbfd:	jmp    0x14000dc33
   14000dbff:	call   QWORD PTR [rip+0x254b]        # 0x140010150
   14000dc05:	test   eax,eax
   14000dc07:	jne    0x14000dc14
   14000dc09:	mov    ecx,0x42b
   14000dc0e:	call   QWORD PTR [rip+0x2544]        # 0x140010158
   14000dc14:	call   0x1400086e0
   14000dc19:	xor    eax,eax
   14000dc1b:	jmp    0x14000dc33
   14000dc1d:	call   QWORD PTR [rip+0x252d]        # 0x140010150
   14000dc23:	test   eax,eax
   14000dc25:	jne    0x14000dc30
   14000dc27:	lea    ecx,[rax+0x57]
   14000dc2a:	call   QWORD PTR [rip+0x2528]        # 0x140010158
   14000dc30:	or     eax,0xffffffff
   14000dc33:	mov    rbx,QWORD PTR [rsp+0x30]
   14000dc38:	mov    rsi,QWORD PTR [rsp+0x38]
   14000dc3d:	mov    rdi,QWORD PTR [rsp+0x40]
   14000dc42:	add    rsp,0x20
   14000dc46:	pop    r14
   14000dc48:	ret    
   14000dc49:	int3   
   14000dc4a:	int3   
   14000dc4b:	int3   
   14000dc4c:	int3   
   14000dc4d:	int3   
   14000dc4e:	int3   
   14000dc4f:	int3   
   14000dc50:	mov    rax,rsp
   14000dc53:	mov    QWORD PTR [rax+0x8],rbp
   14000dc57:	mov    QWORD PTR [rax+0x10],rsi
   14000dc5b:	mov    QWORD PTR [rax+0x18],rdi
   14000dc5f:	mov    QWORD PTR [rax+0x20],r14
   14000dc63:	push   r15
   14000dc65:	sub    rsp,0x20
   14000dc69:	xor    ecx,ecx
   14000dc6b:	mov    rdi,r9
   14000dc6e:	mov    rsi,r8
   14000dc71:	mov    r15,rdx
   14000dc74:	call   QWORD PTR [rip+0x24de]        # 0x140010158
   14000dc7a:	test   r15,r15
   14000dc7d:	je     0x14000dd43
   14000dc83:	test   rsi,rsi
   14000dc86:	je     0x14000dd43
   14000dc8c:	test   rdi,rdi
   14000dc8f:	je     0x14000dd43
   14000dc95:	and    QWORD PTR [rdi],0x0
   14000dc99:	mov    edx,0x3a
   14000dc9e:	and    QWORD PTR [rdi+0x8],0x0
   14000dca3:	mov    rcx,rsi
   14000dca6:	call   0x140008f1c
   14000dcab:	movsxd rbp,eax
   14000dcae:	cmp    ebp,0xffffffff
   14000dcb1:	je     0x14000dd56
   14000dcb7:	mov    rcx,rsi
   14000dcba:	call   QWORD PTR [rip+0x2488]        # 0x140010148
   14000dcc0:	xor    edx,edx
   14000dcc2:	lea    r8d,[rbp+0x5]
   14000dcc6:	mov    r14d,eax
   14000dcc9:	sub    r14d,ebp
   14000dccc:	dec    r14d
   14000dccf:	lea    ecx,[rdx+0x8]
   14000dcd2:	lea    r9d,[rdx+0x1]
   14000dcd6:	call   0x1400082e8
   14000dcdb:	mov    QWORD PTR [rdi],rax
   14000dcde:	test   rax,rax
   14000dce1:	jne    0x14000dcf2
   14000dce3:	call   QWORD PTR [rip+0x2467]        # 0x140010150
   14000dce9:	test   eax,eax
   14000dceb:	jne    0x14000dd56
   14000dced:	lea    ecx,[rax+0x8]
   14000dcf0:	jmp    0x14000dd50
   14000dcf2:	xor    edx,edx
   14000dcf4:	lea    r8d,[r14+0x5]
   14000dcf8:	lea    ecx,[rdx+0x9]
   14000dcfb:	lea    r9d,[rdx+0x1]
   14000dcff:	call   0x1400082e8
   14000dd04:	mov    QWORD PTR [rdi+0x8],rax
   14000dd08:	test   rax,rax
   14000dd0b:	je     0x14000dce3
   14000dd0d:	mov    rcx,QWORD PTR [rdi]
   14000dd10:	lea    r8d,[rbp+0x1]
   14000dd14:	mov    rdx,rsi
   14000dd17:	call   0x140009774
   14000dd1c:	test   r14d,r14d
   14000dd1f:	je     0x14000dd36
   14000dd21:	mov    rcx,QWORD PTR [rdi+0x8]
   14000dd25:	lea    rdx,[rsi+0x2]
   14000dd29:	lea    rdx,[rdx+rbp*2]
   14000dd2d:	lea    r8d,[r14+0x1]
   14000dd31:	call   0x140009774
   14000dd36:	mov    r8,QWORD PTR [rdi]
   14000dd39:	mov    rdx,r15
   14000dd3c:	call   0x14000db48
   14000dd41:	jmp    0x14000dd59
   14000dd43:	call   QWORD PTR [rip+0x2407]        # 0x140010150
   14000dd49:	test   eax,eax
   14000dd4b:	jne    0x14000dd56
   14000dd4d:	lea    ecx,[rax+0x57]
   14000dd50:	call   QWORD PTR [rip+0x2402]        # 0x140010158
   14000dd56:	or     eax,0xffffffff
   14000dd59:	mov    rbp,QWORD PTR [rsp+0x30]
   14000dd5e:	mov    rsi,QWORD PTR [rsp+0x38]
   14000dd63:	mov    rdi,QWORD PTR [rsp+0x40]
   14000dd68:	mov    r14,QWORD PTR [rsp+0x48]
   14000dd6d:	add    rsp,0x20
   14000dd71:	pop    r15
   14000dd73:	ret    
   14000dd74:	int3   
   14000dd75:	int3   
   14000dd76:	int3   
   14000dd77:	int3   
   14000dd78:	int3   
   14000dd79:	int3   
   14000dd7a:	int3   
   14000dd7b:	int3   
   14000dd7c:	mov    QWORD PTR [rsp+0x8],rbx
   14000dd81:	mov    QWORD PTR [rsp+0x10],rbp
   14000dd86:	mov    QWORD PTR [rsp+0x18],rsi
   14000dd8b:	push   rdi
   14000dd8c:	sub    rsp,0x20
   14000dd90:	mov    rbx,rdx
   14000dd93:	test   rdx,rdx
   14000dd96:	je     0x14000de0c
   14000dd98:	call   QWORD PTR [rip+0x23b2]        # 0x140010150
   14000dd9e:	mov    ebp,eax
   14000dda0:	call   0x1400084e8
   14000dda5:	mov    ecx,0x7
   14000ddaa:	test   rax,rax
   14000ddad:	jne    0x14000ddb6
   14000ddaf:	call   0x14000827c
   14000ddb4:	jmp    0x14000ddc4
   14000ddb6:	xor    r9d,r9d
   14000ddb9:	xor    r8d,r8d
   14000ddbc:	mov    rdx,rax
   14000ddbf:	call   0x1400082e8
   14000ddc4:	mov    rdi,rax
   14000ddc7:	test   rax,rax
   14000ddca:	je     0x14000de0c
   14000ddcc:	add    rbx,0x38
   14000ddd0:	mov    esi,0x8
   14000ddd5:	cmp    QWORD PTR [rbx],0x0
   14000ddd9:	je     0x14000dded
   14000dddb:	mov    eax,DWORD PTR [rbx-0x28]
   14000ddde:	bt     rax,0x10
   14000dde3:	jae    0x14000dded
   14000dde5:	mov    rcx,rbx
   14000dde8:	call   0x14000a31c
   14000dded:	add    rbx,0x78
   14000ddf1:	sub    rsi,0x1
   14000ddf5:	jne    0x14000ddd5
   14000ddf7:	mov    rcx,rdi
   14000ddfa:	call   0x140008528
   14000ddff:	mov    ecx,ebp
   14000de01:	call   QWORD PTR [rip+0x2351]        # 0x140010158
   14000de07:	lea    eax,[rsi+0x1]
   14000de0a:	jmp    0x14000de0e
   14000de0c:	xor    eax,eax
   14000de0e:	mov    rbx,QWORD PTR [rsp+0x30]
   14000de13:	mov    rbp,QWORD PTR [rsp+0x38]
   14000de18:	mov    rsi,QWORD PTR [rsp+0x40]
   14000de1d:	add    rsp,0x20
   14000de21:	pop    rdi
   14000de22:	ret    
   14000de23:	int3   
   14000de24:	int3   
   14000de25:	int3   
   14000de26:	int3   
   14000de27:	int3   
   14000de28:	int3   
   14000de29:	int3   
   14000de2a:	int3   
   14000de2b:	int3   
   14000de2c:	mov    DWORD PTR [rsp+0x20],r9d
   14000de31:	mov    DWORD PTR [rsp+0x18],r8d
   14000de36:	mov    QWORD PTR [rsp+0x10],rdx
   14000de3b:	push   rbp
   14000de3c:	push   rbx
   14000de3d:	push   rsi
   14000de3e:	push   rdi
   14000de3f:	push   r12
   14000de41:	push   r13
   14000de43:	push   r14
   14000de45:	push   r15
   14000de47:	mov    rbp,rsp
   14000de4a:	sub    rsp,0x68
   14000de4e:	and    DWORD PTR [rbp+0x60],0x0
   14000de52:	mov    r13d,ecx
   14000de55:	xor    ecx,ecx
   14000de57:	mov    rsi,rdx
   14000de5a:	call   QWORD PTR [rip+0x22f8]        # 0x140010158
   14000de60:	test   r13d,r13d
   14000de63:	je     0x14000e191
   14000de69:	test   rsi,rsi
   14000de6c:	je     0x14000e191
   14000de72:	mov    rbx,QWORD PTR [rbp+0x68]
   14000de76:	test   rbx,rbx
   14000de79:	je     0x14000e191
   14000de7f:	call   0x140008a30
   14000de84:	test   eax,eax
   14000de86:	jne    0x14000deaa
   14000de88:	mov    ecx,0x157f
   14000de8d:	call   0x140008af0
   14000de92:	mov    rcx,rax
   14000de95:	call   0x140008528
   14000de9a:	mov    ecx,0x47e
   14000de9f:	call   QWORD PTR [rip+0x22b3]        # 0x140010158
   14000dea5:	jmp    0x14000e1a1
   14000deaa:	call   0x14000818c
   14000deaf:	test   eax,eax
   14000deb1:	je     0x14000e19c
   14000deb7:	xor    ecx,ecx
   14000deb9:	call   0x14000ce5c
   14000debe:	mov    r15,rax
   14000dec1:	test   rax,rax
   14000dec4:	je     0x14000e19c
   14000deca:	mov    r8,rbx
   14000decd:	lea    rcx,[rbp+0x60]
   14000ded1:	call   0x14000d264
   14000ded6:	test   eax,eax
   14000ded8:	je     0x14000e19c
   14000dede:	and    DWORD PTR [rbp+0x58],0x0
   14000dee2:	mov    r12d,0x1
   14000dee8:	mov    edx,r12d
   14000deeb:	mov    DWORD PTR [rbp+0x48],edx
   14000deee:	cmp    r13d,r12d
   14000def1:	jbe    0x14000e0ae
   14000def7:	mov    eax,edx
   14000def9:	mov    r12d,0x2
   14000deff:	mov    rdi,QWORD PTR [rsi+rax*8]
   14000df03:	lea    eax,[rdx+0x1]
   14000df06:	cmp    eax,r13d
   14000df09:	jae    0x14000df11
   14000df0b:	mov    r14,QWORD PTR [rsi+rax*8]
   14000df0f:	jmp    0x14000df14
   14000df11:	xor    r14d,r14d
   14000df14:	mov    r8,rdi
   14000df17:	mov    rdx,rbx
   14000df1a:	call   0x14000db48
   14000df1f:	cmp    eax,0xffffffff
   14000df22:	jne    0x14000df59
   14000df24:	lea    r9,[rbp-0x38]
   14000df28:	mov    r8,rdi
   14000df2b:	mov    rdx,rbx
   14000df2e:	call   0x14000dc50
   14000df33:	cmp    eax,0xffffffff
   14000df36:	jne    0x14000df4b
   14000df38:	mov    eax,DWORD PTR [rbp+0x60]
   14000df3b:	cmp    eax,0xffffffff
   14000df3e:	je     0x14000e026
   14000df44:	mov    r14,rdi
   14000df47:	xor    edi,edi
   14000df49:	jmp    0x14000df53
   14000df4b:	mov    rdi,QWORD PTR [rbp-0x38]
   14000df4f:	mov    r14,QWORD PTR [rbp-0x30]
   14000df53:	mov    r12d,0x1
   14000df59:	cdqe   
   14000df5b:	imul   rsi,rax,0x78
   14000df5f:	add    rsi,rbx
   14000df62:	je     0x14000e0e4
   14000df68:	test   r14,r14
   14000df6b:	je     0x14000dfb3
   14000df6d:	cmp    r12d,0x2
   14000df71:	jne    0x14000dfb3
   14000df73:	mov    ecx,DWORD PTR [rsi+0x8]
   14000df76:	lea    eax,[rcx-0x7]
   14000df79:	cmp    eax,r12d
   14000df7c:	jbe    0x14000df86
   14000df7e:	lea    eax,[rcx-0x1]
   14000df81:	cmp    eax,r12d
   14000df84:	ja     0x14000dfaa
   14000df86:	mov    r8,r14
   14000df89:	mov    rdx,rbx
   14000df8c:	call   0x14000db48
   14000df91:	cmp    eax,0xffffffff
   14000df94:	jne    0x14000dfaa
   14000df96:	lea    r9,[rbp-0x38]
   14000df9a:	mov    r8,r14
   14000df9d:	mov    rdx,rbx
   14000dfa0:	call   0x14000dc50
   14000dfa5:	cmp    eax,0xffffffff
   14000dfa8:	je     0x14000dfb3
   14000dfaa:	mov    r12d,0x1
   14000dfb0:	xor    r14d,r14d
   14000dfb3:	mov    eax,DWORD PTR [rbp+0x60]
   14000dfb6:	lea    r8,[rbp-0x28]
   14000dfba:	mov    rdx,r14
   14000dfbd:	mov    DWORD PTR [rbp-0x24],eax
   14000dfc0:	mov    rcx,rdi
   14000dfc3:	mov    QWORD PTR [rbp-0x18],rsi
   14000dfc7:	mov    DWORD PTR [rbp-0x28],r12d
   14000dfcb:	mov    QWORD PTR [rbp-0x20],r15
   14000dfcf:	call   0x14000d550
   14000dfd4:	mov    r8d,DWORD PTR [rbp-0x28]
   14000dfd8:	test   eax,eax
   14000dfda:	je     0x14000e124
   14000dfe0:	mov    eax,DWORD PTR [rsi+0x18]
   14000dfe3:	test   eax,eax
   14000dfe5:	je     0x14000dfec
   14000dfe7:	cmp    eax,DWORD PTR [rsi+0x1c]
   14000dfea:	je     0x14000e053
   14000dfec:	mov    eax,DWORD PTR [rsi+0x10]
   14000dfef:	mov    r12d,0x1
   14000dff5:	add    DWORD PTR [rsi+0x1c],r12d
   14000dff9:	and    eax,0x20000
   14000dffe:	mov    ecx,DWORD PTR [rbp+0x58]
   14000e001:	test   rax,rax
   14000e004:	mov    edx,DWORD PTR [rbp+0x48]
   14000e007:	cmovne ecx,r12d
   14000e00b:	add    edx,r8d
   14000e00e:	mov    DWORD PTR [rbp+0x58],ecx
   14000e011:	mov    DWORD PTR [rbp+0x48],edx
   14000e014:	cmp    edx,r13d
   14000e017:	jae    0x14000e0aa
   14000e01d:	mov    rsi,QWORD PTR [rbp+0x50]
   14000e021:	jmp    0x14000def7
   14000e026:	mov    ecx,0x15e7
   14000e02b:	call   0x140008af0
   14000e030:	mov    ecx,r12d
   14000e033:	mov    r9,r15
   14000e036:	mov    r8,rdi
   14000e039:	mov    rdx,rax
   14000e03c:	call   0x1400085a4
   14000e041:	mov    rdx,rbx
   14000e044:	call   0x14000dd7c
   14000e049:	mov    ecx,0x800401e4
   14000e04e:	jmp    0x14000de9f
   14000e053:	test   rdi,rdi
   14000e056:	je     0x14000e08a
   14000e058:	mov    rcx,rdi
   14000e05b:	call   QWORD PTR [rip+0x20e7]        # 0x140010148
   14000e061:	test   eax,eax
   14000e063:	je     0x14000e08a
   14000e065:	mov    ecx,0x15e5
   14000e06a:	call   0x140008af0
   14000e06f:	mov    r9d,DWORD PTR [rsi+0x18]
   14000e073:	mov    rdx,rax
   14000e076:	mov    r8,rdi
   14000e079:	mov    QWORD PTR [rsp+0x20],r15
   14000e07e:	mov    ecx,0x3
   14000e083:	call   0x1400085a4
   14000e088:	jmp    0x14000e041
   14000e08a:	mov    ecx,0x15ea
   14000e08f:	call   0x140008af0
   14000e094:	mov    r8d,DWORD PTR [rsi+0x18]
   14000e098:	mov    rdx,rax
   14000e09b:	mov    r9,r15
   14000e09e:	mov    ecx,0x2
   14000e0a3:	call   0x1400085a4
   14000e0a8:	jmp    0x14000e041
   14000e0aa:	test   ecx,ecx
   14000e0ac:	jne    0x14000e0d4
   14000e0ae:	xor    edx,edx
   14000e0b0:	mov    rcx,rbx
   14000e0b3:	test   rcx,rcx
   14000e0b6:	je     0x14000e10a
   14000e0b8:	mov    eax,DWORD PTR [rcx+0x10]
   14000e0bb:	bt     rax,0x13
   14000e0c0:	jae    0x14000e0c8
   14000e0c2:	cmp    DWORD PTR [rcx+0x1c],0x0
   14000e0c6:	je     0x14000e0fc
   14000e0c8:	add    edx,r12d
   14000e0cb:	add    rcx,0x78
   14000e0cf:	cmp    edx,0x8
   14000e0d2:	jb     0x14000e0b3
   14000e0d4:	xor    ecx,ecx
   14000e0d6:	call   QWORD PTR [rip+0x207c]        # 0x140010158
   14000e0dc:	mov    eax,r12d
   14000e0df:	jmp    0x14000e1a3
   14000e0e4:	call   QWORD PTR [rip+0x2066]        # 0x140010150
   14000e0ea:	test   eax,eax
   14000e0ec:	jne    0x14000e19c
   14000e0f2:	mov    ecx,0x42b
   14000e0f7:	jmp    0x14000e196
   14000e0fc:	cmp    QWORD PTR [rcx+0x20],0x0
   14000e101:	jne    0x14000e158
   14000e103:	bt     rax,0x12
   14000e108:	jb     0x14000e12e
   14000e10a:	call   QWORD PTR [rip+0x2040]        # 0x140010150
   14000e110:	test   eax,eax
   14000e112:	jne    0x14000e11f
   14000e114:	mov    ecx,0x42b
   14000e119:	call   QWORD PTR [rip+0x2039]        # 0x140010158
   14000e11f:	call   0x1400086e0
   14000e124:	mov    rdx,rbx
   14000e127:	call   0x14000dd7c
   14000e12c:	jmp    0x14000e1a1
   14000e12e:	mov    rdi,QWORD PTR [rcx+0x28]
   14000e132:	test   rdi,rdi
   14000e135:	je     0x14000e174
   14000e137:	mov    rcx,rdi
   14000e13a:	call   QWORD PTR [rip+0x2008]        # 0x140010148
   14000e140:	test   eax,eax
   14000e142:	je     0x14000e174
   14000e144:	mov    ecx,0x15e4
   14000e149:	call   0x140008af0
   14000e14e:	mov    ecx,0x2
   14000e153:	jmp    0x14000e033
   14000e158:	mov    rdi,QWORD PTR [rcx+0x28]
   14000e15c:	test   rdi,rdi
   14000e15f:	jne    0x14000e137
   14000e161:	mov    rcx,QWORD PTR [rcx+0x20]
   14000e165:	call   0x14000d1a0
   14000e16a:	mov    rdi,rax
   14000e16d:	test   rax,rax
   14000e170:	jne    0x14000e137
   14000e172:	jmp    0x14000e11f
   14000e174:	mov    ecx,0x15e8
   14000e179:	call   0x140008af0
   14000e17e:	mov    rdx,rax
   14000e181:	mov    r8,r15
   14000e184:	mov    ecx,r12d
   14000e187:	call   0x1400085a4
   14000e18c:	jmp    0x14000e041
   14000e191:	mov    ecx,0x57
   14000e196:	call   QWORD PTR [rip+0x1fbc]        # 0x140010158
   14000e19c:	call   0x1400086e0
   14000e1a1:	xor    eax,eax
   14000e1a3:	add    rsp,0x68
   14000e1a7:	pop    r15
   14000e1a9:	pop    r14
   14000e1ab:	pop    r13
   14000e1ad:	pop    r12
   14000e1af:	pop    rdi
   14000e1b0:	pop    rsi
   14000e1b1:	pop    rbx
   14000e1b2:	pop    rbp
   14000e1b3:	ret    
   14000e1b4:	int3   
   14000e1b5:	int3   
   14000e1b6:	int3   
   14000e1b7:	int3   
   14000e1b8:	int3   
   14000e1b9:	int3   
   14000e1ba:	int3   
   14000e1bb:	int3   
   14000e1bc:	mov    QWORD PTR [rsp+0x8],rbx
   14000e1c1:	push   rdi
   14000e1c2:	sub    rsp,0x20
   14000e1c6:	mov    rdi,rcx
   14000e1c9:	jmp    0x14000e1da
   14000e1cb:	mov    rcx,rdi
   14000e1ce:	call   0x14000e892
   14000e1d3:	test   eax,eax
   14000e1d5:	je     0x14000e1e7
   14000e1d7:	mov    rcx,rdi
   14000e1da:	call   0x14000e886
   14000e1df:	mov    rbx,rax
   14000e1e2:	test   rax,rax
   14000e1e5:	je     0x14000e1cb
   14000e1e7:	mov    rax,rbx
   14000e1ea:	mov    rbx,QWORD PTR [rsp+0x30]
   14000e1ef:	add    rsp,0x20
   14000e1f3:	pop    rdi
   14000e1f4:	ret    
   14000e1f5:	int3   
   14000e1f6:	int3   
   14000e1f7:	int3   
   14000e1f8:	int3   
   14000e1f9:	int3   
   14000e1fa:	int3   
   14000e1fb:	int3   
   14000e1fc:	jmp    0x14000e89e
   14000e201:	int3   
   14000e202:	int3   
   14000e203:	int3   
   14000e204:	int3   
   14000e205:	int3   
   14000e206:	int3   
   14000e207:	int3   
   14000e208:	jmp    0x14000e1fc
   14000e20d:	int3   
   14000e20e:	int3   
   14000e20f:	int3   
   14000e210:	int3   
   14000e211:	int3   
   14000e212:	int3   
   14000e213:	int3   
   14000e214:	int3   
   14000e215:	int3   
   14000e216:	int3   
   14000e217:	int3   
   14000e218:	int3   
   14000e219:	int3   
   14000e21a:	int3   
   14000e21b:	int3   
   14000e21c:	int3   
   14000e21d:	int3   
   14000e21e:	int3   
   14000e21f:	int3   
   14000e220:	sub    rsp,0x28
   14000e224:	mov    eax,0x5a4d
   14000e229:	cmp    WORD PTR [rip+0xffffffffffff1dd0],ax        # 0x140000000
   14000e230:	je     0x14000e236
   14000e232:	xor    eax,eax
   14000e234:	jmp    0x14000e285
   14000e236:	movsxd rcx,DWORD PTR [rip+0xffffffffffff1dff]        # 0x14000003c
   14000e23d:	lea    rax,[rip+0xffffffffffff1dbc]        # 0x140000000
   14000e244:	add    rcx,rax
   14000e247:	cmp    DWORD PTR [rcx],0x4550
   14000e24d:	jne    0x14000e232
   14000e24f:	movzx  eax,WORD PTR [rcx+0x18]
   14000e253:	cmp    eax,0x10b
   14000e258:	je     0x14000e274
   14000e25a:	cmp    eax,0x20b
   14000e25f:	jne    0x14000e232
   14000e261:	xor    eax,eax
   14000e263:	cmp    DWORD PTR [rcx+0x84],0xe
   14000e26a:	jbe    0x14000e285
   14000e26c:	cmp    DWORD PTR [rcx+0xf8],eax
   14000e272:	jmp    0x14000e282
   14000e274:	xor    eax,eax
   14000e276:	cmp    DWORD PTR [rcx+0x74],0xe
   14000e27a:	jbe    0x14000e285
   14000e27c:	cmp    DWORD PTR [rcx+0xe8],eax
   14000e282:	setne  al
   14000e285:	mov    ecx,0x1
   14000e28a:	mov    DWORD PTR [rip+0x6e00],eax        # 0x140015090
   14000e290:	call   0x14000e978
   14000e295:	mov    ecx,eax
   14000e297:	call   QWORD PTR [rip+0x21bb]        # 0x140010458
   14000e29d:	mov    rcx,QWORD PTR [rip+0x2154]        # 0x1400103f8
   14000e2a4:	or     rax,0xffffffffffffffff
   14000e2a8:	mov    QWORD PTR [rip+0x7499],rax        # 0x140015748
   14000e2af:	mov    QWORD PTR [rip+0x749a],rax        # 0x140015750
   14000e2b6:	mov    eax,DWORD PTR [rip+0x7360]        # 0x14001561c
   14000e2bc:	mov    DWORD PTR [rcx],eax
   14000e2be:	mov    rcx,QWORD PTR [rip+0x2153]        # 0x140010418
   14000e2c5:	mov    eax,DWORD PTR [rip+0x7345]        # 0x140015610
   14000e2cb:	mov    DWORD PTR [rcx],eax
   14000e2cd:	call   0x14000e9d0
   14000e2d2:	cmp    DWORD PTR [rip+0x6d27],0x0        # 0x140015000
   14000e2d9:	jne    0x14000e2e8
   14000e2db:	lea    rcx,[rip+0x6ee]        # 0x14000e9d0
   14000e2e2:	call   QWORD PTR [rip+0x2150]        # 0x140010438
   14000e2e8:	xor    eax,eax
   14000e2ea:	add    rsp,0x28
   14000e2ee:	ret    
   14000e2ef:	int3   
   14000e2f0:	int3   
   14000e2f1:	int3   
   14000e2f2:	int3   
   14000e2f3:	int3   
   14000e2f4:	int3   
   14000e2f5:	int3   
   14000e2f6:	int3   
   14000e2f7:	int3   
   14000e2f8:	int3   
   14000e2f9:	int3   
   14000e2fa:	int3   
   14000e2fb:	int3   
   14000e2fc:	int3   
   14000e2fd:	int3   
   14000e2fe:	int3   
   14000e2ff:	int3   
   14000e300:	sub    rsp,0x38
   14000e304:	mov    eax,DWORD PTR [rip+0x730e]        # 0x140015618
   14000e30a:	lea    r8,[rip+0x6d77]        # 0x140015088
   14000e311:	mov    r9d,DWORD PTR [rip+0x72fc]        # 0x140015614
   14000e318:	lea    rdx,[rip+0x6d61]        # 0x140015080
   14000e31f:	mov    DWORD PTR [rip+0x6d6f],eax        # 0x140015094
   14000e325:	lea    rcx,[rip+0x6d4c]        # 0x140015078
   14000e32c:	lea    rax,[rip+0x6d61]        # 0x140015094
   14000e333:	mov    QWORD PTR [rsp+0x20],rax
   14000e338:	call   QWORD PTR [rip+0x2122]        # 0x140010460
   14000e33e:	mov    DWORD PTR [rip+0x6d38],eax        # 0x14001507c
   14000e344:	add    rsp,0x38
   14000e348:	ret    
   14000e349:	int3   
   14000e34a:	int3   
   14000e34b:	int3   
   14000e34c:	int3   
   14000e34d:	int3   
   14000e34e:	int3   
   14000e34f:	int3   
   14000e350:	mov    rax,rsp
   14000e353:	mov    QWORD PTR [rax+0x8],rbx
   14000e357:	mov    QWORD PTR [rax+0x10],rsi
   14000e35b:	mov    QWORD PTR [rax+0x18],rdi
   14000e35f:	mov    QWORD PTR [rax+0x20],r12
   14000e363:	push   r14
   14000e365:	sub    rsp,0x30
   14000e369:	mov    rax,QWORD PTR gs:0x30
   14000e372:	mov    rbx,QWORD PTR [rax+0x8]
   14000e376:	xor    r14d,r14d
   14000e379:	xor    eax,eax
   14000e37b:	lock cmpxchg QWORD PTR [rip+0x73d4],rbx        # 0x140015758
   14000e384:	je     0x14000e3a2
   14000e386:	cmp    rax,rbx
   14000e389:	jne    0x14000e395
   14000e38b:	mov    ebx,0x1
   14000e390:	mov    r14d,ebx
   14000e393:	jmp    0x14000e3a7
   14000e395:	mov    ecx,0x3e8
   14000e39a:	call   QWORD PTR [rip+0x1fa8]        # 0x140010348
   14000e3a0:	jmp    0x14000e379
   14000e3a2:	mov    ebx,0x1
   14000e3a7:	mov    eax,DWORD PTR [rip+0x73b3]        # 0x140015760
   14000e3ad:	cmp    eax,ebx
   14000e3af:	jne    0x14000e3bd
   14000e3b1:	mov    ecx,0x1f
   14000e3b6:	call   0x14000e9c4
   14000e3bb:	jmp    0x14000e426
   14000e3bd:	mov    eax,DWORD PTR [rip+0x739d]        # 0x140015760
   14000e3c3:	test   eax,eax
   14000e3c5:	jne    0x14000e420
   14000e3c7:	mov    DWORD PTR [rip+0x7393],ebx        # 0x140015760
   14000e3cd:	lea    r12,[rip+0x21f4]        # 0x1400105c8
   14000e3d4:	lea    rdi,[rip+0x21d5]        # 0x1400105b0
   14000e3db:	mov    QWORD PTR [rsp+0x28],rdi
   14000e3e0:	mov    DWORD PTR [rsp+0x20],eax
   14000e3e4:	cmp    rdi,r12
   14000e3e7:	jae    0x14000e412
   14000e3e9:	test   eax,eax
   14000e3eb:	jne    0x14000e416
   14000e3ed:	mov    rsi,QWORD PTR [rdi]
   14000e3f0:	test   rsi,rsi
   14000e3f3:	je     0x14000e407
   14000e3f5:	mov    rcx,rsi
   14000e3f8:	mov    rax,QWORD PTR [rip+0x2189]        # 0x140010588
   14000e3ff:	call   rax
   14000e401:	call   rsi
   14000e403:	mov    DWORD PTR [rsp+0x20],eax
   14000e407:	add    rdi,0x8
   14000e40b:	mov    QWORD PTR [rsp+0x28],rdi
   14000e410:	jmp    0x14000e3e4
   14000e412:	test   eax,eax
   14000e414:	je     0x14000e426
   14000e416:	mov    eax,0xff
   14000e41b:	jmp    0x14000e507
   14000e420:	mov    DWORD PTR [rip+0x6c4e],ebx        # 0x140015074
   14000e426:	mov    eax,DWORD PTR [rip+0x7334]        # 0x140015760
   14000e42c:	cmp    eax,ebx
   14000e42e:	jne    0x14000e44d
   14000e430:	lea    rdx,[rip+0x2171]        # 0x1400105a8
   14000e437:	lea    rcx,[rip+0x215a]        # 0x140010598
   14000e43e:	call   0x14000eb9a
   14000e443:	mov    DWORD PTR [rip+0x7313],0x2        # 0x140015760
   14000e44d:	test   r14d,r14d
   14000e450:	jne    0x14000e45b
   14000e452:	xor    eax,eax
   14000e454:	xchg   QWORD PTR [rip+0x72fd],rax        # 0x140015758
   14000e45b:	cmp    QWORD PTR [rip+0x7305],0x0        # 0x140015768
   14000e463:	je     0x14000e493
   14000e465:	lea    rcx,[rip+0x72fc]        # 0x140015768
   14000e46c:	call   0x14000ea30
   14000e471:	test   eax,eax
   14000e473:	je     0x14000e493
   14000e475:	mov    rbx,QWORD PTR [rip+0x72ec]        # 0x140015768
   14000e47c:	mov    rcx,rbx
   14000e47f:	mov    rax,QWORD PTR [rip+0x2102]        # 0x140010588
   14000e486:	call   rax
   14000e488:	xor    r8d,r8d
   14000e48b:	lea    edx,[r8+0x2]
   14000e48f:	xor    ecx,ecx
   14000e491:	call   rbx
   14000e493:	mov    r8,QWORD PTR [rip+0x6bee]        # 0x140015088
   14000e49a:	mov    rdx,QWORD PTR [rip+0x6bdf]        # 0x140015080
   14000e4a1:	mov    ecx,DWORD PTR [rip+0x6bd1]        # 0x140015078
   14000e4a7:	call   0x1400015ac
   14000e4ac:	mov    DWORD PTR [rip+0x6bbe],eax        # 0x140015070
   14000e4b2:	cmp    DWORD PTR [rip+0x6bd7],0x0        # 0x140015090
   14000e4b9:	jne    0x14000e4c3
   14000e4bb:	mov    ecx,eax
   14000e4bd:	call   QWORD PTR [rip+0x1f8d]        # 0x140010450
   14000e4c3:	cmp    DWORD PTR [rip+0x6baa],0x0        # 0x140015074
   14000e4ca:	jne    0x14000e4d8
   14000e4cc:	call   QWORD PTR [rip+0x1f6e]        # 0x140010440
   14000e4d2:	mov    eax,DWORD PTR [rip+0x6b98]        # 0x140015070
   14000e4d8:	jmp    0x14000e507
   14000e4da:	mov    DWORD PTR [rip+0x6b90],eax        # 0x140015070
   14000e4e0:	cmp    DWORD PTR [rip+0x6ba9],0x0        # 0x140015090
   14000e4e7:	jne    0x14000e4f2
   14000e4e9:	mov    ecx,eax
   14000e4eb:	call   QWORD PTR [rip+0x1f57]        # 0x140010448
   14000e4f1:	int3   
   14000e4f2:	cmp    DWORD PTR [rip+0x6b7b],0x0        # 0x140015074
   14000e4f9:	jne    0x14000e507
   14000e4fb:	call   QWORD PTR [rip+0x1f3f]        # 0x140010440
   14000e501:	mov    eax,DWORD PTR [rip+0x6b69]        # 0x140015070
   14000e507:	mov    rbx,QWORD PTR [rsp+0x40]
   14000e50c:	mov    rsi,QWORD PTR [rsp+0x48]
   14000e511:	mov    rdi,QWORD PTR [rsp+0x50]
   14000e516:	mov    r12,QWORD PTR [rsp+0x58]
   14000e51b:	add    rsp,0x30
   14000e51f:	pop    r14
   14000e521:	ret    
   14000e522:	int3   
   14000e523:	int3   
   14000e524:	int3   
   14000e525:	int3   
   14000e526:	int3   
   14000e527:	int3   
   14000e528:	int3   
   14000e529:	int3   
   14000e52a:	int3   
   14000e52b:	int3   
   14000e52c:	int3   
   14000e52d:	int3   
   14000e52e:	int3   
   14000e52f:	int3   
   14000e530:	sub    rsp,0x28
   14000e534:	call   0x14000eac4
   14000e539:	add    rsp,0x28
   14000e53d:	jmp    0x14000e350
   14000e542:	int3   
   14000e543:	int3   
   14000e544:	int3   
   14000e545:	int3   
   14000e546:	int3   
   14000e547:	int3   
   14000e548:	int3   
   14000e549:	int3   
   14000e54a:	int3   
   14000e54b:	int3   
   14000e54c:	int3   
   14000e54d:	int3   
   14000e54e:	int3   
   14000e54f:	int3   
   14000e550:	int3   
   14000e551:	int3   
   14000e552:	int3   
   14000e553:	int3   
   14000e554:	int3   
   14000e555:	int3   
   14000e556:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000e560:	cmp    rcx,QWORD PTR [rip+0x6aa1]        # 0x140015008
   14000e567:	jne    0x14000e579
   14000e569:	rol    rcx,0x10
   14000e56d:	test   cx,0xffff
   14000e572:	jne    0x14000e575
   14000e574:	ret    
   14000e575:	ror    rcx,0x10
   14000e579:	jmp    0x14000e610
   14000e57e:	int3   
   14000e57f:	int3   
   14000e580:	int3   
   14000e581:	int3   
   14000e582:	int3   
   14000e583:	int3   
   14000e584:	int3   
   14000e585:	int3   
   14000e586:	int3   
   14000e587:	int3   
   14000e588:	int3   
   14000e589:	int3   
   14000e58a:	int3   
   14000e58b:	int3   
   14000e58c:	int3   
   14000e58d:	int3   
   14000e58e:	int3   
   14000e58f:	int3   
   14000e590:	mov    QWORD PTR [rsp+0x8],rbx
   14000e595:	push   rdi
   14000e596:	sub    rsp,0x20
   14000e59a:	mov    ebx,edx
   14000e59c:	mov    rdi,rcx
   14000e59f:	call   QWORD PTR [rip+0x1e6b]        # 0x140010410
   14000e5a5:	test   bl,0x1
   14000e5a8:	je     0x14000e5b2
   14000e5aa:	mov    rcx,rdi
   14000e5ad:	call   0x14000e1fc
   14000e5b2:	mov    rax,rdi
   14000e5b5:	mov    rbx,QWORD PTR [rsp+0x30]
   14000e5ba:	add    rsp,0x20
   14000e5be:	pop    rdi
   14000e5bf:	ret    
   14000e5c0:	int3   
   14000e5c1:	int3   
   14000e5c2:	int3   
   14000e5c3:	int3   
   14000e5c4:	int3   
   14000e5c5:	int3   
   14000e5c6:	int3   
   14000e5c7:	int3   
   14000e5c8:	rex push rbx
   14000e5ca:	sub    rsp,0x20
   14000e5ce:	mov    rbx,rcx
   14000e5d1:	xor    ecx,ecx
   14000e5d3:	call   QWORD PTR [rip+0x1cff]        # 0x1400102d8
   14000e5d9:	mov    rcx,rbx
   14000e5dc:	call   QWORD PTR [rip+0x1cee]        # 0x1400102d0
   14000e5e2:	call   QWORD PTR [rip+0x1a68]        # 0x140010050
   14000e5e8:	mov    rcx,rax
   14000e5eb:	mov    edx,0xc0000409
   14000e5f0:	add    rsp,0x20
   14000e5f4:	pop    rbx
   14000e5f5:	rex.W jmp QWORD PTR [rip+0x1d04]        # 0x140010300
   14000e5fc:	int3   
   14000e5fd:	int3   
   14000e5fe:	int3   
   14000e5ff:	int3   
   14000e600:	int3   
   14000e601:	int3   
   14000e602:	int3   
   14000e603:	int3   
   14000e604:	int3   
   14000e605:	int3   
   14000e606:	int3   
   14000e607:	int3   
   14000e608:	int3   
   14000e609:	int3   
   14000e60a:	int3   
   14000e60b:	int3   
   14000e60c:	int3   
   14000e60d:	int3   
   14000e60e:	int3   
   14000e60f:	int3   
   14000e610:	mov    QWORD PTR [rsp+0x8],rcx
   14000e615:	sub    rsp,0x88
   14000e61c:	lea    rcx,[rip+0x6b1d]        # 0x140015140
   14000e623:	call   QWORD PTR [rip+0x1d07]        # 0x140010330
   14000e629:	mov    rax,QWORD PTR [rip+0x6c08]        # 0x140015238
   14000e630:	mov    QWORD PTR [rsp+0x48],rax
   14000e635:	xor    r8d,r8d
   14000e638:	lea    rdx,[rsp+0x50]
   14000e63d:	mov    rcx,QWORD PTR [rsp+0x48]
   14000e642:	call   QWORD PTR [rip+0x1cf0]        # 0x140010338
   14000e648:	mov    QWORD PTR [rsp+0x40],rax
   14000e64d:	cmp    QWORD PTR [rsp+0x40],0x0
   14000e653:	je     0x14000e697
   14000e655:	mov    QWORD PTR [rsp+0x38],0x0
   14000e65e:	lea    rax,[rsp+0x58]
   14000e663:	mov    QWORD PTR [rsp+0x30],rax
   14000e668:	lea    rax,[rsp+0x60]
   14000e66d:	mov    QWORD PTR [rsp+0x28],rax
   14000e672:	lea    rax,[rip+0x6ac7]        # 0x140015140
   14000e679:	mov    QWORD PTR [rsp+0x20],rax
   14000e67e:	mov    r9,QWORD PTR [rsp+0x40]
   14000e683:	mov    r8,QWORD PTR [rsp+0x48]
   14000e688:	mov    rdx,QWORD PTR [rsp+0x50]
   14000e68d:	xor    ecx,ecx
   14000e68f:	call   QWORD PTR [rip+0x1c93]        # 0x140010328
   14000e695:	jmp    0x14000e6ba
   14000e697:	mov    rax,QWORD PTR [rip+0x6b3a]        # 0x1400151d8
   14000e69e:	mov    rax,QWORD PTR [rax]
   14000e6a1:	mov    QWORD PTR [rip+0x6b90],rax        # 0x140015238
   14000e6a8:	mov    rax,QWORD PTR [rip+0x6b29]        # 0x1400151d8
   14000e6af:	add    rax,0x8
   14000e6b3:	mov    QWORD PTR [rip+0x6b1e],rax        # 0x1400151d8
   14000e6ba:	mov    rax,QWORD PTR [rip+0x6b77]        # 0x140015238
   14000e6c1:	mov    QWORD PTR [rip+0x69e8],rax        # 0x1400150b0
   14000e6c8:	mov    rax,QWORD PTR [rsp+0x90]
   14000e6d0:	mov    QWORD PTR [rip+0x6ae9],rax        # 0x1400151c0
   14000e6d7:	mov    DWORD PTR [rip+0x69bf],0xc0000409        # 0x1400150a0
   14000e6e1:	mov    DWORD PTR [rip+0x69b9],0x1        # 0x1400150a4
   14000e6eb:	mov    DWORD PTR [rip+0x69c3],0x3        # 0x1400150b8
   14000e6f5:	mov    eax,0x8
   14000e6fa:	imul   rax,rax,0x0
   14000e6fe:	lea    rcx,[rip+0x69bb]        # 0x1400150c0
   14000e705:	mov    QWORD PTR [rcx+rax*1],0x2
   14000e70d:	mov    eax,0x8
   14000e712:	imul   rax,rax,0x1
   14000e716:	lea    rcx,[rip+0x69a3]        # 0x1400150c0
   14000e71d:	mov    rdx,QWORD PTR [rip+0x68e4]        # 0x140015008
   14000e724:	mov    QWORD PTR [rcx+rax*1],rdx
   14000e728:	mov    eax,0x8
   14000e72d:	imul   rax,rax,0x2
   14000e731:	lea    rcx,[rip+0x6988]        # 0x1400150c0
   14000e738:	mov    rdx,QWORD PTR [rip+0x68d1]        # 0x140015010
   14000e73f:	mov    QWORD PTR [rcx+rax*1],rdx
   14000e743:	mov    eax,0x8
   14000e748:	imul   rax,rax,0x0
   14000e74c:	mov    rcx,QWORD PTR [rip+0x68b5]        # 0x140015008
   14000e753:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   14000e758:	mov    eax,0x8
   14000e75d:	imul   rax,rax,0x1
   14000e761:	mov    rcx,QWORD PTR [rip+0x68a8]        # 0x140015010
   14000e768:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   14000e76d:	lea    rcx,[rip+0x1e94]        # 0x140010608
   14000e774:	call   0x14000e5c8
   14000e779:	add    rsp,0x88
   14000e780:	ret    
   14000e781:	int3   
   14000e782:	int3   
   14000e783:	int3   
   14000e784:	int3   
   14000e785:	int3   
   14000e786:	int3   
   14000e787:	int3   
   14000e788:	sub    rsp,0x78
   14000e78c:	lea    rcx,[rip+0x69ad]        # 0x140015140
   14000e793:	call   QWORD PTR [rip+0x1b97]        # 0x140010330
   14000e799:	mov    rax,QWORD PTR [rip+0x6a98]        # 0x140015238
   14000e7a0:	mov    QWORD PTR [rsp+0x48],rax
   14000e7a5:	xor    r8d,r8d
   14000e7a8:	lea    rdx,[rsp+0x50]
   14000e7ad:	mov    rcx,QWORD PTR [rsp+0x48]
   14000e7b2:	call   QWORD PTR [rip+0x1b80]        # 0x140010338
   14000e7b8:	mov    QWORD PTR [rsp+0x40],rax
   14000e7bd:	cmp    QWORD PTR [rsp+0x40],0x0
   14000e7c3:	je     0x14000e807
   14000e7c5:	mov    QWORD PTR [rsp+0x38],0x0
   14000e7ce:	lea    rax,[rsp+0x58]
   14000e7d3:	mov    QWORD PTR [rsp+0x30],rax
   14000e7d8:	lea    rax,[rsp+0x60]
   14000e7dd:	mov    QWORD PTR [rsp+0x28],rax
   14000e7e2:	lea    rax,[rip+0x6957]        # 0x140015140
   14000e7e9:	mov    QWORD PTR [rsp+0x20],rax
   14000e7ee:	mov    r9,QWORD PTR [rsp+0x40]
   14000e7f3:	mov    r8,QWORD PTR [rsp+0x48]
   14000e7f8:	mov    rdx,QWORD PTR [rsp+0x50]
   14000e7fd:	xor    ecx,ecx
   14000e7ff:	call   QWORD PTR [rip+0x1b23]        # 0x140010328
   14000e805:	jmp    0x14000e82a
   14000e807:	mov    rax,QWORD PTR [rip+0x69ca]        # 0x1400151d8
   14000e80e:	mov    rax,QWORD PTR [rax]
   14000e811:	mov    QWORD PTR [rip+0x6a20],rax        # 0x140015238
   14000e818:	mov    rax,QWORD PTR [rip+0x69b9]        # 0x1400151d8
   14000e81f:	add    rax,0x8
   14000e823:	mov    QWORD PTR [rip+0x69ae],rax        # 0x1400151d8
   14000e82a:	mov    rax,QWORD PTR [rip+0x6a07]        # 0x140015238
   14000e831:	mov    QWORD PTR [rip+0x6878],rax        # 0x1400150b0
   14000e838:	mov    DWORD PTR [rip+0x685e],0xc0000409        # 0x1400150a0
   14000e842:	mov    DWORD PTR [rip+0x6858],0x1        # 0x1400150a4
   14000e84c:	mov    DWORD PTR [rip+0x6862],0x1        # 0x1400150b8
   14000e856:	mov    eax,0x8
   14000e85b:	imul   rax,rax,0x0
   14000e85f:	lea    rcx,[rip+0x685a]        # 0x1400150c0
   14000e866:	mov    QWORD PTR [rcx+rax*1],0x8
   14000e86e:	lea    rcx,[rip+0x1d93]        # 0x140010608
   14000e875:	call   0x14000e5c8
   14000e87a:	add    rsp,0x78
   14000e87e:	ret    
   14000e87f:	int3   
   14000e880:	int3   
   14000e881:	int3   
   14000e882:	int3   
   14000e883:	int3   
   14000e884:	int3   
   14000e885:	int3   
   14000e886:	jmp    QWORD PTR [rip+0x1bfc]        # 0x140010488
   14000e88c:	int3   
   14000e88d:	int3   
   14000e88e:	int3   
   14000e88f:	int3   
   14000e890:	int3   
   14000e891:	int3   
   14000e892:	jmp    QWORD PTR [rip+0x1be8]        # 0x140010480
   14000e898:	int3   
   14000e899:	int3   
   14000e89a:	int3   
   14000e89b:	int3   
   14000e89c:	int3   
   14000e89d:	int3   
   14000e89e:	jmp    QWORD PTR [rip+0x1bd4]        # 0x140010478
   14000e8a4:	int3   
   14000e8a5:	int3   
   14000e8a6:	int3   
   14000e8a7:	int3   
   14000e8a8:	int3   
   14000e8a9:	int3   
   14000e8aa:	int3   
   14000e8ab:	int3   
   14000e8ac:	int3   
   14000e8ad:	int3   
   14000e8ae:	int3   
   14000e8af:	int3   
   14000e8b0:	sub    rsp,0x28
   14000e8b4:	mov    rax,QWORD PTR [rcx]
   14000e8b7:	cmp    DWORD PTR [rax],0xe06d7363
   14000e8bd:	jne    0x14000e8e2
   14000e8bf:	cmp    DWORD PTR [rax+0x18],0x4
   14000e8c3:	jne    0x14000e8e2
   14000e8c5:	mov    ecx,DWORD PTR [rax+0x20]
   14000e8c8:	lea    eax,[rcx-0x19930520]
   14000e8ce:	cmp    eax,0x2
   14000e8d1:	jbe    0x14000e8db
   14000e8d3:	cmp    ecx,0x1994000
   14000e8d9:	jne    0x14000e8e2
   14000e8db:	call   QWORD PTR [rip+0x1b27]        # 0x140010408
   14000e8e1:	int3   
   14000e8e2:	xor    eax,eax
   14000e8e4:	add    rsp,0x28
   14000e8e8:	ret    
   14000e8e9:	int3   
   14000e8ea:	int3   
   14000e8eb:	int3   
   14000e8ec:	int3   
   14000e8ed:	int3   
   14000e8ee:	int3   
   14000e8ef:	int3   
   14000e8f0:	sub    rsp,0x28
   14000e8f4:	lea    rcx,[rip+0xffffffffffffffb5]        # 0x14000e8b0
   14000e8fb:	call   QWORD PTR [rip+0x19d7]        # 0x1400102d8
   14000e901:	xor    eax,eax
   14000e903:	add    rsp,0x28
   14000e907:	ret    
   14000e908:	int3   
   14000e909:	int3   
   14000e90a:	int3   
   14000e90b:	int3   
   14000e90c:	int3   
   14000e90d:	int3   
   14000e90e:	jmp    QWORD PTR [rip+0x1b5c]        # 0x140010470
   14000e914:	int3   
   14000e915:	int3   
   14000e916:	int3   
   14000e917:	int3   
   14000e918:	int3   
   14000e919:	int3   
   14000e91a:	int3   
   14000e91b:	int3   
   14000e91c:	sub    rsp,0x18
   14000e920:	xor    edx,edx
   14000e922:	lea    rax,[rcx-0x1]
   14000e926:	cmp    rax,0xfffffffffffffffd
   14000e92a:	ja     0x14000e968
   14000e92c:	mov    eax,0x5a4d
   14000e931:	cmp    WORD PTR [rcx],ax
   14000e934:	jne    0x14000e960
   14000e936:	cmp    DWORD PTR [rcx+0x3c],edx
   14000e939:	jl     0x14000e960
   14000e93b:	cmp    DWORD PTR [rcx+0x3c],0x10000000
   14000e942:	jae    0x14000e960
   14000e944:	movsxd rax,DWORD PTR [rcx+0x3c]
   14000e948:	add    rax,rcx
   14000e94b:	mov    QWORD PTR [rsp],rax
   14000e94f:	cmp    DWORD PTR [rax],0x4550
   14000e955:	cmovne rax,rdx
   14000e959:	mov    rdx,rax
   14000e95c:	mov    QWORD PTR [rsp],rax
   14000e960:	jmp    0x14000e968
   14000e962:	xor    edx,edx
   14000e964:	mov    QWORD PTR [rsp],rdx
   14000e968:	mov    rax,rdx
   14000e96b:	add    rsp,0x18
   14000e96f:	ret    
   14000e970:	int3   
   14000e971:	int3   
   14000e972:	int3   
   14000e973:	int3   
   14000e974:	int3   
   14000e975:	int3   
   14000e976:	int3   
   14000e977:	int3   
   14000e978:	rex push rbx
   14000e97a:	sub    rsp,0x20
   14000e97e:	mov    ebx,ecx
   14000e980:	xor    ecx,ecx
   14000e982:	call   QWORD PTR [rip+0x16b8]        # 0x140010040
   14000e988:	test   rax,rax
   14000e98b:	je     0x14000e9b5
   14000e98d:	mov    rcx,rax
   14000e990:	call   0x14000e91c
   14000e995:	test   rax,rax
   14000e998:	je     0x14000e9b5
   14000e99a:	mov    ecx,0x2
   14000e99f:	cmp    WORD PTR [rax+0x5c],cx
   14000e9a3:	jne    0x14000e9a9
   14000e9a5:	mov    eax,ecx
   14000e9a7:	jmp    0x14000e9b7
   14000e9a9:	cmp    WORD PTR [rax+0x5c],0x3
   14000e9ae:	mov    eax,0x1
   14000e9b3:	je     0x14000e9b7
   14000e9b5:	mov    eax,ebx
   14000e9b7:	add    rsp,0x20
   14000e9bb:	pop    rbx
   14000e9bc:	ret    
   14000e9bd:	int3   
   14000e9be:	int3   
   14000e9bf:	int3   
   14000e9c0:	int3   
   14000e9c1:	int3   
   14000e9c2:	int3   
   14000e9c3:	int3   
   14000e9c4:	jmp    QWORD PTR [rip+0x1a9e]        # 0x140010468
   14000e9ca:	int3   
   14000e9cb:	int3   
   14000e9cc:	int3   
   14000e9cd:	int3   
   14000e9ce:	int3   
   14000e9cf:	int3   
   14000e9d0:	xor    eax,eax
   14000e9d2:	ret    
   14000e9d3:	int3   
   14000e9d4:	int3   
   14000e9d5:	int3   
   14000e9d6:	int3   
   14000e9d7:	int3   
   14000e9d8:	int3   
   14000e9d9:	int3   
   14000e9da:	int3   
   14000e9db:	int3   
   14000e9dc:	int3   
   14000e9dd:	int3   
   14000e9de:	int3   
   14000e9df:	int3   
   14000e9e0:	movsxd r8,DWORD PTR [rcx+0x3c]
   14000e9e4:	xor    r9d,r9d
   14000e9e7:	add    r8,rcx
   14000e9ea:	mov    r10,rdx
   14000e9ed:	movzx  eax,WORD PTR [r8+0x14]
   14000e9f2:	movzx  r11d,WORD PTR [r8+0x6]
   14000e9f7:	add    rax,0x18
   14000e9fb:	add    rax,r8
   14000e9fe:	test   r11d,r11d
   14000ea01:	je     0x14000ea21
   14000ea03:	mov    edx,DWORD PTR [rax+0xc]
   14000ea06:	cmp    r10,rdx
   14000ea09:	jb     0x14000ea15
   14000ea0b:	mov    ecx,DWORD PTR [rax+0x8]
   14000ea0e:	add    ecx,edx
   14000ea10:	cmp    r10,rcx
   14000ea13:	jb     0x14000ea23
   14000ea15:	inc    r9d
   14000ea18:	add    rax,0x28
   14000ea1c:	cmp    r9d,r11d
   14000ea1f:	jb     0x14000ea03
   14000ea21:	xor    eax,eax
   14000ea23:	ret    
   14000ea24:	int3   
   14000ea25:	int3   
   14000ea26:	int3   
   14000ea27:	int3   
   14000ea28:	int3   
   14000ea29:	int3   
   14000ea2a:	int3   
   14000ea2b:	int3   
   14000ea2c:	int3   
   14000ea2d:	int3   
   14000ea2e:	int3   
   14000ea2f:	int3   
   14000ea30:	mov    QWORD PTR [rsp+0x8],rbx
   14000ea35:	push   rdi
   14000ea36:	sub    rsp,0x20
   14000ea3a:	mov    rbx,rcx
   14000ea3d:	lea    rdi,[rip+0xffffffffffff15bc]        # 0x140000000
   14000ea44:	mov    rcx,rdi
   14000ea47:	call   0x14000ea90
   14000ea4c:	test   eax,eax
   14000ea4e:	je     0x14000ea72
   14000ea50:	sub    rbx,rdi
   14000ea53:	mov    rdx,rbx
   14000ea56:	mov    rcx,rdi
   14000ea59:	call   0x14000e9e0
   14000ea5e:	test   rax,rax
   14000ea61:	je     0x14000ea72
   14000ea63:	mov    eax,DWORD PTR [rax+0x24]
   14000ea66:	shr    eax,0x1f
   14000ea69:	not    eax
   14000ea6b:	and    eax,0x1
   14000ea6e:	jmp    0x14000ea72
   14000ea70:	xor    eax,eax
   14000ea72:	mov    rbx,QWORD PTR [rsp+0x30]
   14000ea77:	add    rsp,0x20
   14000ea7b:	pop    rdi
   14000ea7c:	ret    
   14000ea7d:	int3   
   14000ea7e:	int3   
   14000ea7f:	int3   
   14000ea80:	int3   
   14000ea81:	int3   
   14000ea82:	int3   
   14000ea83:	int3   
   14000ea84:	int3   
   14000ea85:	int3   
   14000ea86:	int3   
   14000ea87:	int3   
   14000ea88:	int3   
   14000ea89:	int3   
   14000ea8a:	int3   
   14000ea8b:	int3   
   14000ea8c:	int3   
   14000ea8d:	int3   
   14000ea8e:	int3   
   14000ea8f:	int3   
   14000ea90:	mov    rax,rcx
   14000ea93:	mov    ecx,0x5a4d
   14000ea98:	cmp    WORD PTR [rax],cx
   14000ea9b:	je     0x14000eaa0
   14000ea9d:	xor    eax,eax
   14000ea9f:	ret    
   14000eaa0:	movsxd rcx,DWORD PTR [rax+0x3c]
   14000eaa4:	add    rcx,rax
   14000eaa7:	xor    eax,eax
   14000eaa9:	cmp    DWORD PTR [rcx],0x4550
   14000eaaf:	jne    0x14000eabd
   14000eab1:	mov    edx,0x20b
   14000eab6:	cmp    WORD PTR [rcx+0x18],dx
   14000eaba:	sete   al
   14000eabd:	ret    
   14000eabe:	int3   
   14000eabf:	int3   
   14000eac0:	int3   
   14000eac1:	int3   
   14000eac2:	int3   
   14000eac3:	int3   
   14000eac4:	mov    QWORD PTR [rsp+0x20],rbx
   14000eac9:	push   rbp
   14000eaca:	mov    rbp,rsp
   14000eacd:	sub    rsp,0x20
   14000ead1:	and    QWORD PTR [rbp+0x18],0x0
   14000ead6:	movabs rbx,0x2b992ddfa232
   14000eae0:	mov    rax,QWORD PTR [rip+0x6521]        # 0x140015008
   14000eae7:	cmp    rax,rbx
   14000eaea:	jne    0x14000eb7f
   14000eaf0:	lea    rcx,[rbp+0x18]
   14000eaf4:	call   QWORD PTR [rip+0x185e]        # 0x140010358
   14000eafa:	mov    rax,QWORD PTR [rbp+0x18]
   14000eafe:	mov    QWORD PTR [rbp+0x10],rax
   14000eb02:	call   QWORD PTR [rip+0x17f0]        # 0x1400102f8
   14000eb08:	mov    eax,eax
   14000eb0a:	xor    QWORD PTR [rbp+0x10],rax
   14000eb0e:	call   QWORD PTR [rip+0x17f4]        # 0x140010308
   14000eb14:	mov    eax,eax
   14000eb16:	xor    QWORD PTR [rbp+0x10],rax
   14000eb1a:	call   QWORD PTR [rip+0x1840]        # 0x140010360
   14000eb20:	mov    eax,eax
   14000eb22:	shl    rax,0x18
   14000eb26:	xor    QWORD PTR [rbp+0x10],rax
   14000eb2a:	call   QWORD PTR [rip+0x1830]        # 0x140010360
   14000eb30:	mov    eax,eax
   14000eb32:	lea    rcx,[rbp+0x10]
   14000eb36:	xor    rax,QWORD PTR [rbp+0x10]
   14000eb3a:	xor    rax,rcx
   14000eb3d:	lea    rcx,[rbp+0x20]
   14000eb41:	mov    QWORD PTR [rbp+0x10],rax
   14000eb45:	call   QWORD PTR [rip+0x17cd]        # 0x140010318
   14000eb4b:	mov    eax,DWORD PTR [rbp+0x20]
   14000eb4e:	movabs rcx,0xffffffffffff
   14000eb58:	shl    rax,0x20
   14000eb5c:	xor    rax,QWORD PTR [rbp+0x20]
   14000eb60:	xor    rax,QWORD PTR [rbp+0x10]
   14000eb64:	and    rax,rcx
   14000eb67:	movabs rcx,0x2b992ddfa233
   14000eb71:	cmp    rax,rbx
   14000eb74:	cmove  rax,rcx
   14000eb78:	mov    QWORD PTR [rip+0x6489],rax        # 0x140015008
   14000eb7f:	mov    rbx,QWORD PTR [rsp+0x48]
   14000eb84:	not    rax
   14000eb87:	mov    QWORD PTR [rip+0x6482],rax        # 0x140015010
   14000eb8e:	add    rsp,0x20
   14000eb92:	pop    rbp
   14000eb93:	ret    
   14000eb94:	int3   
   14000eb95:	int3   
   14000eb96:	int3   
   14000eb97:	int3   
   14000eb98:	int3   
   14000eb99:	int3   
   14000eb9a:	jmp    QWORD PTR [rip+0x1890]        # 0x140010430
   14000eba0:	int3   
   14000eba1:	int3   
   14000eba2:	int3   
   14000eba3:	int3   
   14000eba4:	int3   
   14000eba5:	int3   
   14000eba6:	jmp    QWORD PTR [rip+0x187c]        # 0x140010428
   14000ebac:	int3   
   14000ebad:	int3   
   14000ebae:	int3   
   14000ebaf:	int3   
   14000ebb0:	int3   
   14000ebb1:	int3   
   14000ebb2:	int3   
   14000ebb3:	int3   
   14000ebb4:	int3   
   14000ebb5:	int3   
   14000ebb6:	int3   
   14000ebb7:	int3   
   14000ebb8:	int3   
   14000ebb9:	int3   
   14000ebba:	int3   
   14000ebbb:	int3   
   14000ebbc:	int3   
   14000ebbd:	int3   
   14000ebbe:	int3   
   14000ebbf:	int3   
   14000ebc0:	ret    0x0
   14000ebc3:	int3   
   14000ebc4:	int3   
   14000ebc5:	int3   
   14000ebc6:	int3   
   14000ebc7:	int3   
   14000ebc8:	int3   
   14000ebc9:	int3   
   14000ebca:	int3   
   14000ebcb:	int3   
   14000ebcc:	int3   
   14000ebcd:	int3   
   14000ebce:	int3   
   14000ebcf:	int3   
   14000ebd0:	int3   
   14000ebd1:	int3   
   14000ebd2:	int3   
   14000ebd3:	int3   
   14000ebd4:	int3   
   14000ebd5:	int3   
   14000ebd6:	int3   
   14000ebd7:	int3   
   14000ebd8:	rex push rbx
   14000ebda:	sub    rsp,0x20
   14000ebde:	mov    ebx,ecx
   14000ebe0:	call   0x14000ebfc
   14000ebe5:	lea    rdx,[rbx+rbx*2]
   14000ebe9:	shl    rdx,0x4
   14000ebed:	add    rax,rdx
   14000ebf0:	add    rsp,0x20
   14000ebf4:	pop    rbx
   14000ebf5:	ret    
   14000ebf6:	int3   
   14000ebf7:	int3   
   14000ebf8:	int3   
   14000ebf9:	int3   
   14000ebfa:	int3   
   14000ebfb:	int3   
   14000ebfc:	jmp    QWORD PTR [rip+0x18ee]        # 0x1400104f0
   14000ec02:	int3   
   14000ec03:	int3   
   14000ec04:	int3   
   14000ec05:	int3   
   14000ec06:	int3   
   14000ec07:	int3   
   14000ec08:	jmp    QWORD PTR [rip+0x1932]        # 0x140010540
   14000ec0e:	int3   
   14000ec0f:	int3   
   14000ec10:	int3   
   14000ec11:	int3   
   14000ec12:	int3   
   14000ec13:	int3   
   14000ec14:	jmp    QWORD PTR [rip+0x17e6]        # 0x140010400
   14000ec1a:	int3   
   14000ec1b:	int3   
   14000ec1c:	int3   
   14000ec1d:	int3   
   14000ec1e:	int3   
   14000ec1f:	int3   
   14000ec20:	sub    rsp,0x28
   14000ec24:	mov    r8,QWORD PTR [r9+0x38]
   14000ec28:	mov    rcx,rdx
   14000ec2b:	mov    rdx,r9
   14000ec2e:	call   0x14000ec44
   14000ec33:	mov    eax,0x1
   14000ec38:	add    rsp,0x28
   14000ec3c:	ret    
   14000ec3d:	int3   
   14000ec3e:	int3   
   14000ec3f:	int3   
   14000ec40:	int3   
   14000ec41:	int3   
   14000ec42:	int3   
   14000ec43:	int3   
   14000ec44:	rex push rbx
   14000ec46:	sub    rsp,0x20
   14000ec4a:	mov    r11d,DWORD PTR [r8]
   14000ec4d:	mov    rbx,rdx
   14000ec50:	and    r11d,0xfffffff8
   14000ec54:	mov    r9,rcx
   14000ec57:	test   BYTE PTR [r8],0x4
   14000ec5b:	mov    r10,rcx
   14000ec5e:	je     0x14000ec73
   14000ec60:	mov    eax,DWORD PTR [r8+0x8]
   14000ec64:	movsxd r10,DWORD PTR [r8+0x4]
   14000ec68:	neg    eax
   14000ec6a:	add    r10,rcx
   14000ec6d:	movsxd rcx,eax
   14000ec70:	and    r10,rcx
   14000ec73:	movsxd rax,r11d
   14000ec76:	mov    rdx,QWORD PTR [rax+r10*1]
   14000ec7a:	mov    rax,QWORD PTR [rbx+0x10]
   14000ec7e:	mov    ecx,DWORD PTR [rax+0x8]
   14000ec81:	add    rcx,QWORD PTR [rbx+0x8]
   14000ec85:	test   BYTE PTR [rcx+0x3],0xf
   14000ec89:	je     0x14000ec97
   14000ec8b:	movzx  eax,BYTE PTR [rcx+0x3]
   14000ec8f:	and    eax,0xfffffff0
   14000ec92:	cdqe   
   14000ec94:	add    r9,rax
   14000ec97:	xor    r9,rdx
   14000ec9a:	mov    rcx,r9
   14000ec9d:	add    rsp,0x20
   14000eca1:	pop    rbx
   14000eca2:	jmp    0x14000e560
   14000eca7:	int3   
   14000eca8:	int3   
   14000eca9:	int3   
   14000ecaa:	int3   
   14000ecab:	int3   
   14000ecac:	int3   
   14000ecad:	int3   
   14000ecae:	int3   
   14000ecaf:	int3   
   14000ecb0:	mov    rax,rsp
   14000ecb3:	mov    QWORD PTR [rax+0x8],rbx
   14000ecb7:	mov    QWORD PTR [rax+0x10],rbp
   14000ecbb:	mov    QWORD PTR [rax+0x18],rsi
   14000ecbf:	mov    QWORD PTR [rax+0x20],rdi
   14000ecc3:	push   r14
   14000ecc5:	sub    rsp,0x20
   14000ecc9:	mov    rbx,QWORD PTR [r9+0x38]
   14000eccd:	mov    rsi,rdx
   14000ecd0:	mov    r14,r8
   14000ecd3:	mov    rbp,rcx
   14000ecd6:	mov    rdx,r9
   14000ecd9:	mov    rcx,rsi
   14000ecdc:	mov    rdi,r9
   14000ecdf:	lea    r8,[rbx+0x4]
   14000ece3:	call   0x14000ec44
   14000ece8:	mov    r11d,DWORD PTR [rbx+0x4]
   14000ecec:	mov    r8d,0x1
   14000ecf2:	mov    r10d,DWORD PTR [rbp+0x4]
   14000ecf6:	mov    eax,r11d
   14000ecf9:	and    eax,r8d
   14000ecfc:	and    r11d,0x2
   14000ed00:	and    r10b,0x66
   14000ed04:	cmove  r11d,eax
   14000ed08:	test   r11d,r11d
   14000ed0b:	je     0x14000ed21
   14000ed0d:	mov    r9,rdi
   14000ed10:	mov    r8,r14
   14000ed13:	mov    rdx,rsi
   14000ed16:	mov    rcx,rbp
   14000ed19:	call   0x14000ec14
   14000ed1e:	mov    r8d,eax
   14000ed21:	mov    rbx,QWORD PTR [rsp+0x30]
   14000ed26:	mov    eax,r8d
   14000ed29:	mov    rbp,QWORD PTR [rsp+0x38]
   14000ed2e:	mov    rsi,QWORD PTR [rsp+0x40]
   14000ed33:	mov    rdi,QWORD PTR [rsp+0x48]
   14000ed38:	add    rsp,0x20
   14000ed3c:	pop    r14
   14000ed3e:	ret    
   14000ed3f:	int3   
   14000ed40:	int3   
   14000ed41:	int3   
   14000ed42:	int3   
   14000ed43:	int3   
   14000ed44:	int3   
   14000ed45:	int3   
   14000ed46:	jmp    QWORD PTR [rip+0x16a4]        # 0x1400103f0
   14000ed4c:	int3   
   14000ed4d:	int3   
   14000ed4e:	int3   
   14000ed4f:	int3   
   14000ed50:	int3   
   14000ed51:	int3   
   14000ed52:	jmp    QWORD PTR [rip+0x16c8]        # 0x140010420
   14000ed58:	int3   
   14000ed59:	int3   
   14000ed5a:	int3   
   14000ed5b:	int3   
   14000ed5c:	int3   
   14000ed5d:	int3   
   14000ed5e:	int3   
   14000ed5f:	int3   
   14000ed60:	int3   
   14000ed61:	int3   
   14000ed62:	int3   
   14000ed63:	int3   
   14000ed64:	int3   
   14000ed65:	int3   
   14000ed66:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000ed70:	jmp    rax
   14000ed72:	int3   
   14000ed73:	int3   
   14000ed74:	int3   
   14000ed75:	int3   
   14000ed76:	int3   
   14000ed77:	int3   
   14000ed78:	int3   
   14000ed79:	int3   
   14000ed7a:	int3   
   14000ed7b:	int3   
   14000ed7c:	int3   
   14000ed7d:	int3   
   14000ed7e:	int3   
   14000ed7f:	int3   
   14000ed80:	int3   
   14000ed81:	int3   
   14000ed82:	int3   
   14000ed83:	int3   
   14000ed84:	int3   
   14000ed85:	int3   
   14000ed86:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000ed90:	sub    rsp,0x10
   14000ed94:	mov    QWORD PTR [rsp],r10
   14000ed98:	mov    QWORD PTR [rsp+0x8],r11
   14000ed9d:	xor    r11,r11
   14000eda0:	lea    r10,[rsp+0x18]
   14000eda5:	sub    r10,rax
   14000eda8:	cmovb  r10,r11
   14000edac:	mov    r11,QWORD PTR gs:0x10
   14000edb5:	cmp    r10,r11
   14000edb8:	jae    0x14000edcf
   14000edba:	and    r10w,0xf000
   14000edc0:	lea    r11,[r11-0x1000]
   14000edc7:	test   BYTE PTR [r11],r11b
   14000edca:	cmp    r10,r11
   14000edcd:	jne    0x14000edc0
   14000edcf:	mov    r10,QWORD PTR [rsp]
   14000edd3:	mov    r11,QWORD PTR [rsp+0x8]
   14000edd8:	add    rsp,0x10
   14000eddc:	ret    
   14000eddd:	int3   
   14000edde:	int3   
   14000eddf:	int3   
   14000ede0:	int3   
   14000ede1:	int3   
   14000ede2:	int3   
   14000ede3:	int3   
   14000ede4:	int3   
   14000ede5:	int3   
   14000ede6:	mov    rcx,QWORD PTR [rdx+0x50]
   14000eded:	jmp    0x14000e1fc
   14000edf2:	int3   
   14000edf3:	int3   
   14000edf4:	int3   
   14000edf5:	int3   
   14000edf6:	int3   
   14000edf7:	int3   
   14000edf8:	mov    rcx,QWORD PTR [rdx+0x40]
   14000edff:	jmp    0x14000e1fc
   14000ee04:	int3   
   14000ee05:	int3   
   14000ee06:	int3   
   14000ee07:	int3   
   14000ee08:	int3   
   14000ee09:	int3   
   14000ee0a:	rex push rbp
   14000ee0c:	sub    rsp,0x20
   14000ee10:	mov    rbp,rdx
   14000ee13:	mov    eax,DWORD PTR [rbp+0x20]
   14000ee16:	and    eax,0x1
   14000ee19:	test   eax,eax
   14000ee1b:	je     0x14000ee2a
   14000ee1d:	and    DWORD PTR [rbp+0x20],0xfffffffe
   14000ee21:	mov    rcx,QWORD PTR [rbp+0x48]
   14000ee25:	call   0x14000109c
   14000ee2a:	add    rsp,0x20
   14000ee2e:	pop    rbp
   14000ee2f:	ret    
   14000ee30:	int3   
   14000ee31:	int3   
   14000ee32:	int3   
   14000ee33:	int3   
   14000ee34:	int3   
   14000ee35:	int3   
   14000ee36:	rex push rbp
   14000ee38:	sub    rsp,0x20
   14000ee3c:	mov    rbp,rdx
   14000ee3f:	mov    eax,DWORD PTR [rbp+0x20]
   14000ee42:	and    eax,0x1
   14000ee45:	test   eax,eax
   14000ee47:	je     0x14000ee56
   14000ee49:	and    DWORD PTR [rbp+0x20],0xfffffffe
   14000ee4d:	mov    rcx,QWORD PTR [rbp+0x40]
   14000ee51:	call   0x14000109c
   14000ee56:	add    rsp,0x20
   14000ee5a:	pop    rbp
   14000ee5b:	ret    
   14000ee5c:	int3   
   14000ee5d:	int3   
   14000ee5e:	int3   
   14000ee5f:	int3   
   14000ee60:	int3   
   14000ee61:	int3   
   14000ee62:	lea    rcx,[rdx+0x28]
   14000ee69:	jmp    0x1400014d4
   14000ee6e:	int3   
   14000ee6f:	int3   
   14000ee70:	int3   
   14000ee71:	int3   
   14000ee72:	int3   
   14000ee73:	int3   
   14000ee74:	lea    rcx,[rdx+0x60]
   14000ee7b:	rex.W jmp QWORD PTR [rip+0x1536]        # 0x1400103b8
   14000ee82:	lea    rcx,[rdx+0x68]
   14000ee89:	rex.W jmp QWORD PTR [rip+0x1528]        # 0x1400103b8
   14000ee90:	lea    rcx,[rdx+0x70]
   14000ee97:	rex.W jmp QWORD PTR [rip+0x151a]        # 0x1400103b8
   14000ee9e:	mov    QWORD PTR [rsp+0x10],rdx
   14000eea3:	push   rbp
   14000eea4:	sub    rsp,0x60
   14000eea8:	mov    rbp,rdx
   14000eeab:	mov    ecx,0x8007000e
   14000eeb0:	call   QWORD PTR [rip+0x12a2]        # 0x140010158
   14000eeb6:	call   0x1400086e0
   14000eebb:	mov    ecx,0x1
   14000eec0:	call   0x14000ebd8
   14000eec5:	mov    rcx,rax
   14000eec8:	mov    edx,0x20001
   14000eecd:	call   0x14000888c
   14000eed2:	cmp    QWORD PTR [rbp+0x78],0x0
   14000eed7:	je     0x14000eee2
   14000eed9:	lea    rcx,[rbp+0x78]
   14000eedd:	call   0x140007b70
   14000eee2:	call   QWORD PTR [rip+0x13d8]        # 0x1400102c0
   14000eee8:	call   0x140008948
   14000eeed:	nop
   14000eeee:	lea    rax,[rip+0xffffffffffff2d7b]        # 0x140001c70
   14000eef5:	add    rsp,0x60
   14000eef9:	pop    rbp
   14000eefa:	ret    
   14000eefb:	int3   
   14000eefc:	int3   
   14000eefd:	int3   
   14000eefe:	int3   
   14000eeff:	int3   
   14000ef00:	int3   
   14000ef01:	int3   
   14000ef02:	lea    rcx,[rdx+0x78]
   14000ef09:	jmp    0x14000109c
   14000ef0e:	lea    rcx,[rdx+0x60]
   14000ef15:	jmp    0x14000109c
   14000ef1a:	lea    rcx,[rdx+0x70]
   14000ef21:	jmp    0x14000109c
   14000ef26:	lea    rcx,[rdx+0x80]
   14000ef2d:	jmp    0x14000109c
   14000ef32:	mov    QWORD PTR [rsp+0x10],rdx
   14000ef37:	push   rbx
   14000ef38:	push   rbp
   14000ef39:	sub    rsp,0x58
   14000ef3d:	mov    rbp,rdx
   14000ef40:	mov    ecx,0x6c
   14000ef45:	call   0x140008af0
   14000ef4a:	mov    rbx,rax
   14000ef4d:	mov    ecx,0x2
   14000ef52:	call   0x14000ebd8
   14000ef57:	mov    rcx,rax
   14000ef5a:	mov    rdx,rbx
   14000ef5d:	call   0x14000999c
   14000ef62:	nop
   14000ef63:	lea    rax,[rip+0xffffffffffff35c6]        # 0x140002530
   14000ef6a:	add    rsp,0x58
   14000ef6e:	pop    rbp
   14000ef6f:	pop    rbx
   14000ef70:	ret    
   14000ef71:	int3   
   14000ef72:	lea    rcx,[rdx+0x90]
   14000ef79:	jmp    0x14000109c
   14000ef7e:	lea    rcx,[rdx+0xa0]
   14000ef85:	jmp    0x14000109c
   14000ef8a:	lea    rcx,[rdx+0x68]
   14000ef91:	jmp    0x14000109c
   14000ef96:	lea    rcx,[rdx+0x88]
   14000ef9d:	jmp    0x14000109c
   14000efa2:	lea    rcx,[rdx+0xa8]
   14000efa9:	jmp    0x14000109c
   14000efae:	lea    rcx,[rdx+0x98]
   14000efb5:	jmp    0x14000109c
   14000efba:	mov    QWORD PTR [rsp+0x10],rdx
   14000efbf:	push   rbx
   14000efc0:	push   rbp
   14000efc1:	sub    rsp,0x58
   14000efc5:	mov    rbp,rdx
   14000efc8:	mov    ecx,0x6c
   14000efcd:	call   0x140008af0
   14000efd2:	mov    rbx,rax
   14000efd5:	mov    ecx,0x2
   14000efda:	call   0x14000ebd8
   14000efdf:	mov    rcx,rax
   14000efe2:	mov    rdx,rbx
   14000efe5:	call   0x14000999c
   14000efea:	nop
   14000efeb:	lea    rax,[rip+0xffffffffffff2e93]        # 0x140001e85
   14000eff2:	add    rsp,0x58
   14000eff6:	pop    rbp
   14000eff7:	pop    rbx
   14000eff8:	ret    
   14000eff9:	int3   
   14000effa:	lea    rcx,[rdx+0x68]
   14000f001:	jmp    0x14000109c
   14000f006:	lea    rcx,[rdx+0x88]
   14000f00d:	jmp    0x14000109c
   14000f012:	lea    rcx,[rdx+0x68]
   14000f019:	jmp    0x14000109c
   14000f01e:	mov    rcx,QWORD PTR [rdx+0x88]
   14000f025:	rex.W jmp QWORD PTR [rip+0x138c]        # 0x1400103b8
   14000f02c:	mov    rcx,QWORD PTR [rdx+0x88]
   14000f033:	rex.W jmp QWORD PTR [rip+0x137e]        # 0x1400103b8
   14000f03a:	int3   
   14000f03b:	int3   
   14000f03c:	int3   
   14000f03d:	int3   
   14000f03e:	int3   
   14000f03f:	int3   
   14000f040:	mov    rcx,QWORD PTR [rdx+0x128]
   14000f047:	rex.W jmp QWORD PTR [rip+0x136a]        # 0x1400103b8
   14000f04e:	lea    rcx,[rdx+0xd8]
   14000f055:	rex.W jmp QWORD PTR [rip+0x135c]        # 0x1400103b8
   14000f05c:	lea    rcx,[rdx+0xe0]
   14000f063:	rex.W jmp QWORD PTR [rip+0x134e]        # 0x1400103b8
   14000f06a:	lea    rcx,[rdx+0xd0]
   14000f071:	rex.W jmp QWORD PTR [rip+0x1340]        # 0x1400103b8
   14000f078:	lea    rcx,[rdx+0xc0]
   14000f07f:	rex.W jmp QWORD PTR [rip+0x1332]        # 0x1400103b8
   14000f086:	lea    rcx,[rdx+0x88]
   14000f08d:	rex.W jmp QWORD PTR [rip+0x1324]        # 0x1400103b8
   14000f094:	lea    rcx,[rdx+0xa0]
   14000f09b:	rex.W jmp QWORD PTR [rip+0x1316]        # 0x1400103b8
   14000f0a2:	lea    rcx,[rdx+0x90]
   14000f0a9:	rex.W jmp QWORD PTR [rip+0x1308]        # 0x1400103b8
   14000f0b0:	lea    rcx,[rdx+0x98]
   14000f0b7:	rex.W jmp QWORD PTR [rip+0x12fa]        # 0x1400103b8
   14000f0be:	lea    rcx,[rdx+0xb8]
   14000f0c5:	rex.W jmp QWORD PTR [rip+0x12ec]        # 0x1400103b8
   14000f0cc:	lea    rcx,[rdx+0xc8]
   14000f0d3:	rex.W jmp QWORD PTR [rip+0x12de]        # 0x1400103b8
   14000f0da:	lea    rcx,[rdx+0x78]
   14000f0e1:	rex.W jmp QWORD PTR [rip+0x12d0]        # 0x1400103b8
   14000f0e8:	mov    QWORD PTR [rsp+0x10],rdx
   14000f0ed:	push   rbx
   14000f0ee:	push   rbp
   14000f0ef:	push   rdi
   14000f0f0:	sub    rsp,0x30
   14000f0f4:	mov    rbp,rdx
   14000f0f7:	mov    ecx,0x75
   14000f0fc:	call   0x140008af0
   14000f101:	mov    rdi,rax
   14000f104:	mov    ecx,0x2
   14000f109:	call   0x14000ebd8
   14000f10e:	mov    rcx,rax
   14000f111:	mov    rdx,rdi
   14000f114:	call   0x14000999c
   14000f119:	mov    rbx,QWORD PTR [rbp+0x30]
   14000f11d:	test   rbx,rbx
   14000f120:	je     0x14000f13c
   14000f122:	mov    rax,QWORD PTR [rbx]
   14000f125:	mov    rdi,QWORD PTR [rax+0x10]
   14000f129:	mov    rcx,rdi
   14000f12c:	call   QWORD PTR [rip+0x1456]        # 0x140010588
   14000f132:	mov    rcx,rbx
   14000f135:	call   rdi
   14000f137:	and    QWORD PTR [rbp+0x30],0x0
   14000f13c:	mov    rcx,QWORD PTR [rbp+0x40]
   14000f140:	cmp    DWORD PTR [rcx],0x9
   14000f143:	jne    0x14000f153
   14000f145:	call   0x14000b1d4
   14000f14a:	lea    rcx,[rbp+0x40]
   14000f14e:	call   0x14000a31c
   14000f153:	lea    rcx,[rbp+0x38]
   14000f157:	call   0x14000a31c
   14000f15c:	nop
   14000f15d:	lea    rax,[rip+0xffffffffffff49c8]        # 0x140003b2c
   14000f164:	add    rsp,0x30
   14000f168:	pop    rdi
   14000f169:	pop    rbp
   14000f16a:	pop    rbx
   14000f16b:	ret    
   14000f16c:	int3   
   14000f16d:	lea    rcx,[rdx+0x158]
   14000f174:	jmp    0x1400014d4
   14000f179:	lea    rcx,[rdx+0x130]
   14000f180:	jmp    0x14000109c
   14000f185:	mov    QWORD PTR [rsp+0x10],rdx
   14000f18a:	push   rbp
   14000f18b:	sub    rsp,0x30
   14000f18f:	mov    rbp,rdx
   14000f192:	mov    rcx,QWORD PTR [rbp+0x40]
   14000f196:	test   rcx,rcx
   14000f199:	je     0x14000f1ae
   14000f19b:	cmp    DWORD PTR [rcx],0x9
   14000f19e:	jne    0x14000f1ae
   14000f1a0:	call   0x14000b1d4
   14000f1a5:	lea    rcx,[rbp+0x40]
   14000f1a9:	call   0x14000a31c
   14000f1ae:	lea    rcx,[rbp+0x50]
   14000f1b2:	call   0x14000a31c
   14000f1b7:	lea    rcx,[rbp+0x48]
   14000f1bb:	call   0x14000a31c
   14000f1c0:	nop
   14000f1c1:	lea    rax,[rip+0xffffffffffff4939]        # 0x140003b01
   14000f1c8:	add    rsp,0x30
   14000f1cc:	pop    rbp
   14000f1cd:	ret    
   14000f1ce:	int3   
   14000f1cf:	int3   
   14000f1d0:	int3   
   14000f1d1:	int3   
   14000f1d2:	int3   
   14000f1d3:	int3   
   14000f1d4:	int3   
   14000f1d5:	lea    rcx,[rdx+0x150]
   14000f1dc:	rex.W jmp QWORD PTR [rip+0x11d5]        # 0x1400103b8
   14000f1e3:	lea    rcx,[rdx+0x68]
   14000f1ea:	jmp    0x14000109c
   14000f1ef:	lea    rcx,[rdx+0x68]
   14000f1f6:	jmp    0x14000109c
   14000f1fb:	lea    rcx,[rdx+0xf0]
   14000f202:	jmp    0x14000109c
   14000f207:	lea    rcx,[rdx+0x68]
   14000f20e:	jmp    0x14000109c
   14000f213:	mov    QWORD PTR [rsp+0x10],rdx
   14000f218:	push   rbx
   14000f219:	push   rbp
   14000f21a:	sub    rsp,0x68
   14000f21e:	mov    rbp,rdx
   14000f221:	mov    ecx,0x75
   14000f226:	call   0x140008af0
   14000f22b:	mov    rbx,rax
   14000f22e:	mov    ecx,0x2
   14000f233:	call   0x14000ebd8
   14000f238:	mov    rcx,rax
   14000f23b:	mov    rdx,rbx
   14000f23e:	call   0x14000999c
   14000f243:	and    QWORD PTR [rsp+0x50],0x0
   14000f249:	lea    rax,[rbp+0xd0]
   14000f250:	mov    QWORD PTR [rsp+0x48],rax
   14000f255:	lea    rax,[rbp+0xb8]
   14000f25c:	mov    QWORD PTR [rsp+0x40],rax
   14000f261:	lea    rax,[rbp+0x70]
   14000f265:	mov    QWORD PTR [rsp+0x38],rax
   14000f26a:	lea    rax,[rbp+0xa0]
   14000f271:	mov    QWORD PTR [rsp+0x30],rax
   14000f276:	lea    rax,[rbp+0x88]
   14000f27d:	mov    QWORD PTR [rsp+0x28],rax
   14000f282:	mov    rax,QWORD PTR [rbp+0x148]
   14000f289:	mov    QWORD PTR [rsp+0x20],rax
   14000f28e:	mov    r9,QWORD PTR [rbp+0x140]
   14000f295:	mov    rdx,QWORD PTR [rbp+0x158]
   14000f29c:	mov    rcx,QWORD PTR [rbp+0x60]
   14000f2a0:	call   0x1400060fc
   14000f2a5:	nop
   14000f2a6:	lea    rax,[rip+0xffffffffffff6c8b]        # 0x140005f38
   14000f2ad:	add    rsp,0x68
   14000f2b1:	pop    rbp
   14000f2b2:	pop    rbx
   14000f2b3:	ret    
   14000f2b4:	int3   
   14000f2b5:	int3   
   14000f2b6:	int3   
   14000f2b7:	int3   
   14000f2b8:	int3   
   14000f2b9:	int3   
   14000f2ba:	int3   
   14000f2bb:	mov    QWORD PTR [rsp+0x10],rdx
   14000f2c0:	push   rbx
   14000f2c1:	push   rbp
   14000f2c2:	sub    rsp,0x58
   14000f2c6:	mov    rbp,rdx
   14000f2c9:	mov    rax,QWORD PTR [rbp+0x58]
   14000f2cd:	mov    ecx,DWORD PTR [rax+0x8]
   14000f2d0:	call   0x140007e18
   14000f2d5:	mov    ecx,0xca
   14000f2da:	call   0x140008af0
   14000f2df:	mov    rbx,rax
   14000f2e2:	mov    ecx,0x2
   14000f2e7:	call   0x14000ebd8
   14000f2ec:	mov    rcx,rax
   14000f2ef:	mov    rdx,rbx
   14000f2f2:	call   0x14000999c
   14000f2f7:	call   0x1400084e8
   14000f2fc:	mov    rbx,rax
   14000f2ff:	mov    ecx,0x2
   14000f304:	call   0x14000ebd8
   14000f309:	mov    rcx,rax
   14000f30c:	mov    rdx,rbx
   14000f30f:	call   0x14000999c
   14000f314:	nop
   14000f315:	lea    rax,[rip+0xffffffffffff6cdd]        # 0x140005ff9
   14000f31c:	add    rsp,0x58
   14000f320:	pop    rbp
   14000f321:	pop    rbx
   14000f322:	ret    
   14000f323:	int3   
   14000f324:	int3   
   14000f325:	int3   
   14000f326:	int3   
   14000f327:	int3   
   14000f328:	int3   
   14000f329:	int3   
   14000f32a:	lea    rcx,[rdx+0x50]
   14000f331:	jmp    0x1400014d4
   14000f336:	lea    rcx,[rdx+0x90]
   14000f33d:	jmp    0x14000109c
   14000f342:	int3   
   14000f343:	int3   
   14000f344:	int3   
   14000f345:	int3   
   14000f346:	int3   
   14000f347:	int3   
   14000f348:	mov    rcx,QWORD PTR [rdx+0xa0]
   14000f34f:	rex.W jmp QWORD PTR [rip+0x1062]        # 0x1400103b8
   14000f356:	lea    rcx,[rdx+0x48]
   14000f35d:	rex.W jmp QWORD PTR [rip+0x1054]        # 0x1400103b8
   14000f364:	lea    rcx,[rdx+0x40]
   14000f36b:	rex.W jmp QWORD PTR [rip+0x1046]        # 0x1400103b8
   14000f372:	lea    rcx,[rdx+0x50]
   14000f379:	rex.W jmp QWORD PTR [rip+0x1038]        # 0x1400103b8
   14000f380:	lea    rcx,[rdx+0x38]
   14000f387:	rex.W jmp QWORD PTR [rip+0x102a]        # 0x1400103b8
   14000f38e:	mov    QWORD PTR [rsp+0x10],rdx
   14000f393:	push   rbx
   14000f394:	push   rbp
   14000f395:	push   rsi
   14000f396:	push   rdi
   14000f397:	sub    rsp,0x38
   14000f39b:	mov    rbp,rdx
   14000f39e:	mov    ecx,0x75
   14000f3a3:	call   0x140008af0
   14000f3a8:	mov    rbx,rax
   14000f3ab:	mov    ecx,0x2
   14000f3b0:	call   0x14000ebd8
   14000f3b5:	mov    rcx,rax
   14000f3b8:	mov    rdx,rbx
   14000f3bb:	call   0x14000999c
   14000f3c0:	mov    esi,DWORD PTR [rbp+0x64]
   14000f3c3:	mov    rdi,QWORD PTR [rbp+rsi*8+0xc0]
   14000f3cb:	test   rdi,rdi
   14000f3ce:	je     0x14000f3ee
   14000f3d0:	mov    rax,QWORD PTR [rdi]
   14000f3d3:	mov    rbx,QWORD PTR [rax+0x10]
   14000f3d7:	mov    rcx,rbx
   14000f3da:	call   QWORD PTR [rip+0x11a8]        # 0x140010588
   14000f3e0:	mov    rcx,rdi
   14000f3e3:	call   rbx
   14000f3e5:	and    QWORD PTR [rbp+rsi*8+0xc0],0x0
   14000f3ee:	lea    rax,[rip+0xffffffffffff75d0]        # 0x1400069c5
   14000f3f5:	add    rsp,0x38
   14000f3f9:	pop    rdi
   14000f3fa:	pop    rsi
   14000f3fb:	pop    rbp
   14000f3fc:	pop    rbx
   14000f3fd:	ret    
   14000f3fe:	int3   
   14000f3ff:	int3   
   14000f400:	int3   
   14000f401:	int3   
   14000f402:	int3   
   14000f403:	int3   
   14000f404:	int3   
   14000f405:	lea    rcx,[rdx+0x40]
   14000f40c:	rex.W jmp QWORD PTR [rip+0xfa5]        # 0x1400103b8
   14000f413:	lea    rcx,[rdx+0x50]
   14000f41a:	rex.W jmp QWORD PTR [rip+0xf97]        # 0x1400103b8
   14000f421:	int3   
   14000f422:	int3   
   14000f423:	int3   
   14000f424:	int3   
   14000f425:	int3   
   14000f426:	int3   
   14000f427:	lea    rcx,[rdx+0x88]
   14000f42e:	jmp    0x14000109c
   14000f433:	lea    rcx,[rdx+0x128]
   14000f43a:	jmp    0x14000109c
   14000f43f:	lea    rcx,[rdx+0x70]
   14000f446:	jmp    0x14000109c
   14000f44b:	lea    rcx,[rdx+0x60]
   14000f452:	jmp    0x14000109c
   14000f457:	lea    rcx,[rdx+0x58]
   14000f45e:	jmp    0x14000109c
   14000f463:	lea    rcx,[rdx+0x50]
   14000f46a:	jmp    0x14000109c
   14000f46f:	lea    rcx,[rdx+0x98]
   14000f476:	jmp    0x14000109c
   14000f47b:	lea    rcx,[rdx+0x78]
   14000f482:	jmp    0x14000109c
   14000f487:	lea    rcx,[rdx+0x50]
   14000f48e:	jmp    0x14000109c
   14000f493:	lea    rcx,[rdx+0x58]
   14000f49a:	jmp    0x14000109c
   14000f49f:	lea    rcx,[rdx+0x90]
   14000f4a6:	jmp    0x14000109c
   14000f4ab:	lea    rcx,[rdx+0x78]
   14000f4b2:	jmp    0x14000109c
   14000f4b7:	lea    rcx,[rdx+0x98]
   14000f4be:	jmp    0x14000109c
   14000f4c3:	mov    QWORD PTR [rsp+0x10],rdx
   14000f4c8:	push   rbx
   14000f4c9:	push   rbp
   14000f4ca:	sub    rsp,0x58
   14000f4ce:	mov    rbp,rdx
   14000f4d1:	mov    rbx,QWORD PTR [rbp+0xa8]
   14000f4d8:	mov    ecx,DWORD PTR [rbx+0x8]
   14000f4db:	call   0x140007e18
   14000f4e0:	mov    rcx,QWORD PTR [rbp+0x130]
   14000f4e7:	test   rcx,rcx
   14000f4ea:	je     0x14000f4f1
   14000f4ec:	mov    eax,DWORD PTR [rbx+0x8]
   14000f4ef:	mov    DWORD PTR [rcx],eax
   14000f4f1:	lea    rax,[rip+0xffffffffffff7e17]        # 0x14000730f
   14000f4f8:	add    rsp,0x58
   14000f4fc:	pop    rbp
   14000f4fd:	pop    rbx
   14000f4fe:	ret    
   14000f4ff:	int3   
   14000f500:	int3   
   14000f501:	int3   
   14000f502:	int3   
   14000f503:	int3   
   14000f504:	int3   
   14000f505:	int3   
   14000f506:	lea    rcx,[rdx+0x58]
   14000f50d:	rex.W jmp QWORD PTR [rip+0xea4]        # 0x1400103b8
   14000f514:	mov    QWORD PTR [rsp+0x10],rdx
   14000f519:	push   rbx
   14000f51a:	push   rbp
   14000f51b:	sub    rsp,0x58
   14000f51f:	mov    rbp,rdx
   14000f522:	mov    ecx,0x8007000e
   14000f527:	call   QWORD PTR [rip+0xc2b]        # 0x140010158
   14000f52d:	call   0x1400086e0
   14000f532:	mov    ecx,0xca
   14000f537:	call   0x140008af0
   14000f53c:	mov    rbx,rax
   14000f53f:	mov    ecx,0x2
   14000f544:	call   0x14000ebd8
   14000f549:	mov    rcx,rax
   14000f54c:	mov    rdx,rbx
   14000f54f:	call   0x14000999c
   14000f554:	mov    ecx,0x2
   14000f559:	call   0x14000ebd8
   14000f55e:	mov    rcx,rax
   14000f561:	call   0x14000884c
   14000f566:	nop
   14000f567:	lea    rax,[rip+0xffffffffffff80cd]        # 0x14000763b
   14000f56e:	add    rsp,0x58
   14000f572:	pop    rbp
   14000f573:	pop    rbx
   14000f574:	ret    
   14000f575:	int3   
   14000f576:	mov    QWORD PTR [rsp+0x10],rdx
   14000f57b:	push   rbx
   14000f57c:	push   rbp
   14000f57d:	sub    rsp,0x58
   14000f581:	mov    rbp,rdx
   14000f584:	mov    ecx,0x8007000e
   14000f589:	call   QWORD PTR [rip+0xbc9]        # 0x140010158
   14000f58f:	call   0x1400086e0
   14000f594:	mov    ecx,0xca
   14000f599:	call   0x140008af0
   14000f59e:	mov    rbx,rax
   14000f5a1:	mov    ecx,0x2
   14000f5a6:	call   0x14000ebd8
   14000f5ab:	mov    rcx,rax
   14000f5ae:	mov    rdx,rbx
   14000f5b1:	call   0x14000999c
   14000f5b6:	mov    ecx,0x2
   14000f5bb:	call   0x14000ebd8
   14000f5c0:	mov    rcx,rax
   14000f5c3:	call   0x14000884c
   14000f5c8:	nop
   14000f5c9:	lea    rax,[rip+0xffffffffffff818f]        # 0x14000775f
   14000f5d0:	add    rsp,0x58
   14000f5d4:	pop    rbp
   14000f5d5:	pop    rbx
   14000f5d6:	ret    
   14000f5d7:	int3   
   14000f5d8:	int3   
   14000f5d9:	int3   
   14000f5da:	int3   
   14000f5db:	int3   
   14000f5dc:	int3   
   14000f5dd:	int3   
   14000f5de:	lea    rcx,[rdx+0x48]
   14000f5e5:	rex.W jmp QWORD PTR [rip+0xdcc]        # 0x1400103b8
   14000f5ec:	mov    QWORD PTR [rsp+0x10],rdx
   14000f5f1:	push   rbp
   14000f5f2:	sub    rsp,0x20
   14000f5f6:	mov    rbp,rdx
   14000f5f9:	mov    ecx,0x8007000e
   14000f5fe:	call   QWORD PTR [rip+0xb54]        # 0x140010158
   14000f604:	nop
   14000f605:	lea    rax,[rip+0xffffffffffff8645]        # 0x140007c51
   14000f60c:	add    rsp,0x20
   14000f610:	pop    rbp
   14000f611:	ret    
   14000f612:	int3   
   14000f613:	int3   
   14000f614:	int3   
   14000f615:	int3   
   14000f616:	int3   
   14000f617:	int3   
   14000f618:	int3   
   14000f619:	lea    rcx,[rdx+0x88]
   14000f620:	rex.W jmp QWORD PTR [rip+0xd91]        # 0x1400103b8
   14000f627:	lea    rcx,[rdx+0x80]
   14000f62e:	rex.W jmp QWORD PTR [rip+0xd83]        # 0x1400103b8
   14000f635:	lea    rcx,[rdx+0x40]
   14000f63c:	rex.W jmp QWORD PTR [rip+0xd75]        # 0x1400103b8
   14000f643:	lea    rcx,[rdx+0x40]
   14000f64a:	rex.W jmp QWORD PTR [rip+0xd67]        # 0x1400103b8
   14000f651:	int3   
   14000f652:	int3   
   14000f653:	int3   
   14000f654:	int3   
   14000f655:	int3   
   14000f656:	int3   
   14000f657:	lea    rcx,[rdx+0x88]
   14000f65e:	jmp    0x14000109c
   14000f663:	lea    rcx,[rdx+0x98]
   14000f66a:	jmp    0x14000109c
   14000f66f:	lea    rcx,[rdx+0x30]
   14000f676:	jmp    0x14000109c
   14000f67b:	mov    QWORD PTR [rsp+0x10],rdx
   14000f680:	push   rbx
   14000f681:	push   rbp
   14000f682:	push   rdi
   14000f683:	sub    rsp,0x30
   14000f687:	mov    rbp,rdx
   14000f68a:	mov    rdi,QWORD PTR [rbp+0x90]
   14000f691:	test   rdi,rdi
   14000f694:	je     0x14000f6b3
   14000f696:	mov    rax,QWORD PTR [rdi]
   14000f699:	mov    rbx,QWORD PTR [rax+0x10]
   14000f69d:	mov    rcx,rbx
   14000f6a0:	call   QWORD PTR [rip+0xee2]        # 0x140010588
   14000f6a6:	mov    rcx,rdi
   14000f6a9:	call   rbx
   14000f6ab:	and    QWORD PTR [rbp+0x90],0x0
   14000f6b3:	mov    rcx,QWORD PTR [rbp+0x38]
   14000f6b7:	call   0x140006bbc
   14000f6bc:	test   rax,rax
   14000f6bf:	jne    0x14000f6c3
   14000f6c1:	jmp    0x14000f6cc
   14000f6c3:	mov    rcx,rax
   14000f6c6:	call   QWORD PTR [rip+0xa7c]        # 0x140010148
   14000f6cc:	lea    edi,[rax+0x5]
   14000f6cf:	lea    ecx,[rdi+rdi*1]
   14000f6d2:	call   0x14000a3f8
   14000f6d7:	mov    rbx,rax
   14000f6da:	mov    QWORD PTR [rbp+0x98],rax
   14000f6e1:	test   rax,rax
   14000f6e4:	je     0x14000f725
   14000f6e6:	mov    rcx,QWORD PTR [rbp+0x38]
   14000f6ea:	call   0x140006bbc
   14000f6ef:	mov    rdx,rax
   14000f6f2:	mov    r8d,edi
   14000f6f5:	mov    rcx,rbx
   14000f6f8:	call   0x140009774
   14000f6fd:	mov    r8d,edi
   14000f700:	lea    rdx,[rip+0x1071]        # 0x140010778
   14000f707:	mov    rcx,rbx
   14000f70a:	call   0x140009818
   14000f70f:	mov    rcx,rbx
   14000f712:	call   0x140008528
   14000f717:	lea    rcx,[rbp+0x98]
   14000f71e:	call   0x14000a31c
   14000f723:	jmp    0x14000f736
   14000f725:	mov    ecx,0x8
   14000f72a:	call   QWORD PTR [rip+0xa28]        # 0x140010158
   14000f730:	call   0x1400086e0
   14000f735:	nop
   14000f736:	lea    rax,[rip+0xffffffffffff8884]        # 0x140007fc1
   14000f73d:	add    rsp,0x30
   14000f741:	pop    rdi
   14000f742:	pop    rbp
   14000f743:	pop    rbx
   14000f744:	ret    
   14000f745:	int3   
   14000f746:	mov    QWORD PTR [rsp+0x10],rdx
   14000f74b:	push   rbp
   14000f74c:	sub    rsp,0x30
   14000f750:	mov    rbp,rdx
   14000f753:	mov    ecx,0x8
   14000f758:	call   QWORD PTR [rip+0x9fa]        # 0x140010158
   14000f75e:	call   0x1400086e0
   14000f763:	nop
   14000f764:	lea    rax,[rip+0xffffffffffffffcb]        # 0x14000f736
   14000f76b:	add    rsp,0x30
   14000f76f:	pop    rbp
   14000f770:	ret    
   14000f771:	int3   
   14000f772:	int3   
   14000f773:	int3   
   14000f774:	int3   
   14000f775:	int3   
   14000f776:	int3   
   14000f777:	int3   
   14000f778:	rex push rbp
   14000f77a:	sub    rsp,0x20
   14000f77e:	mov    rbp,rdx
   14000f781:	mov    rax,QWORD PTR [rcx]
   14000f784:	mov    rdx,rcx
   14000f787:	mov    ecx,DWORD PTR [rax]
   14000f789:	call   0x14000e90e
   14000f78e:	nop
   14000f78f:	add    rsp,0x20
   14000f793:	pop    rbp
   14000f794:	ret    
   14000f795:	int3   
   14000f796:	int3   
   14000f797:	int3   
   14000f798:	int3   
   14000f799:	int3   
   14000f79a:	int3   
   14000f79b:	int3   
   14000f79c:	int3   
   14000f79d:	int3   
   14000f79e:	int3   
   14000f79f:	int3   
   14000f7a0:	rex push rbp
   14000f7a2:	sub    rsp,0x20
   14000f7a6:	mov    rbp,rdx
   14000f7a9:	mov    rax,QWORD PTR [rcx]
   14000f7ac:	xor    ecx,ecx
   14000f7ae:	cmp    DWORD PTR [rax],0xc0000005
   14000f7b4:	sete   cl
   14000f7b7:	mov    eax,ecx
   14000f7b9:	add    rsp,0x20
   14000f7bd:	pop    rbp
   14000f7be:	ret    
   14000f7bf:	int3   

Disassembly of section .rdata:

0000000140010000 <.rdata>:
   140010000:	mov    esi,0x134
   140010005:	add    BYTE PTR [rax],al
   140010007:	add    dl,dl
   140010009:	xor    al,0x1
   14001000b:	add    BYTE PTR [rax],al
   14001000d:	add    BYTE PTR [rax],al
   14001000f:	add    al,ah
   140010011:	xor    al,0x1
   140010013:	add    BYTE PTR [rax],al
   140010015:	add    BYTE PTR [rax],al
   140010017:	add    dh,dh
   140010019:	xor    al,0x1
   14001001b:	add    BYTE PTR [rax],al
   14001001d:	add    BYTE PTR [rax],al
   14001001f:	add    BYTE PTR [rsi*1+0x1],al
   140010026:	add    BYTE PTR [rax],al
   140010028:	adc    al,0x35
   14001002a:	add    DWORD PTR [rax],eax
   14001002c:	add    BYTE PTR [rax],al
   14001002e:	add    BYTE PTR [rax],al
   140010030:	es xor eax,0x1
   140010036:	add    BYTE PTR [rax],al
   140010038:	cmp    BYTE PTR [rip+0x1],dh        # 0x14001003f
   14001003e:	add    BYTE PTR [rax],al
   140010040:	rex.WX xor rax,0x1
   140010046:	add    BYTE PTR [rax],al
   140010048:	pop    rsi
   140010049:	xor    eax,0x1
   14001004e:	add    BYTE PTR [rax],al
   140010050:	jo     0x140010087
   140010052:	add    DWORD PTR [rax],eax
   140010054:	add    BYTE PTR [rax],al
   140010056:	add    BYTE PTR [rax],al
   140010058:	test   BYTE PTR [rip+0x1],dh        # 0x14001005f
   14001005e:	add    BYTE PTR [rax],al
   140010060:	xchg   esi,eax
   140010061:	xor    eax,0x1
   140010066:	add    BYTE PTR [rax],al
   140010068:	mov    dl,0x35
   14001006a:	add    DWORD PTR [rax],eax
   14001006c:	add    BYTE PTR [rax],al
   14001006e:	add    BYTE PTR [rax],al
   140010070:	(bad)  
   140010071:	xor    eax,0x1
   140010076:	add    BYTE PTR [rax],al
   140010078:	fdiv   QWORD PTR [rip+0x1]        # 0x14001007f
   14001007e:	add    BYTE PTR [rax],al
   140010080:	out    dx,al
   140010081:	xor    eax,0x1
   140010086:	add    BYTE PTR [rax],al
   140010088:	cld    
   140010089:	xor    eax,0x1
   14001008e:	add    BYTE PTR [rax],al
   140010090:	or     al,0x36
   140010092:	add    DWORD PTR [rax],eax
   140010094:	add    BYTE PTR [rax],al
   140010096:	add    BYTE PTR [rax],al
   140010098:	cmp    BYTE PTR [rdi],0x1
   14001009b:	add    BYTE PTR [rax],al
   14001009d:	add    BYTE PTR [rax],al
   14001009f:	add    BYTE PTR [rsi+0x134],ch
   1400100a5:	add    BYTE PTR [rax],al
   1400100a7:	add    BYTE PTR [rdx+0x3f],dl
   1400100aa:	add    DWORD PTR [rax],eax
   1400100ac:	add    BYTE PTR [rax],al
   1400100ae:	add    BYTE PTR [rax],al
   1400100b0:	rex.RX (bad) 
   1400100b2:	add    DWORD PTR [rax],eax
   1400100b4:	add    BYTE PTR [rax],al
   1400100b6:	add    BYTE PTR [rax],al
   1400100b8:	cmp    BYTE PTR [rdi],bh
   1400100ba:	add    DWORD PTR [rax],eax
   1400100bc:	add    BYTE PTR [rax],al
   1400100be:	add    BYTE PTR [rax],al
   1400100c0:	sub    al,0x3f
   1400100c2:	add    DWORD PTR [rax],eax
   1400100c4:	add    BYTE PTR [rax],al
   1400100c6:	add    BYTE PTR [rax],al
   1400100c8:	sbb    al,0x3f
   1400100ca:	add    DWORD PTR [rax],eax
   1400100cc:	add    BYTE PTR [rax],al
   1400100ce:	add    BYTE PTR [rax],al
   1400100d0:	adc    BYTE PTR [rdi],bh
   1400100d2:	add    DWORD PTR [rax],eax
   1400100d4:	add    BYTE PTR [rax],al
   1400100d6:	add    BYTE PTR [rax],al
   1400100d8:	(bad)  
   1400100d9:	add    DWORD PTR ds:[rax],eax
   1400100dc:	add    BYTE PTR [rax],al
   1400100de:	add    BYTE PTR [rax],al
   1400100e0:	out    dx,al
   1400100e1:	add    DWORD PTR ds:[rax],eax
   1400100e4:	add    BYTE PTR [rax],al
   1400100e6:	add    BYTE PTR [rax],al
   1400100e8:	loop   0x140010128
   1400100ea:	add    DWORD PTR [rax],eax
   1400100ec:	add    BYTE PTR [rax],al
   1400100ee:	add    BYTE PTR [rax],al
   1400100f0:	sar    BYTE PTR [rsi],1
   1400100f2:	add    DWORD PTR [rax],eax
   1400100f4:	add    BYTE PTR [rax],al
   1400100f6:	add    BYTE PTR [rax],al
   1400100f8:	mov    edx,0x13e
   1400100fd:	add    BYTE PTR [rax],al
   1400100ff:	add    BYTE PTR [rsi+rdi*1+0x1],ch
   140010106:	add    BYTE PTR [rax],al
   140010108:	(bad)  
   140010109:	add    DWORD PTR ds:[rax],eax
   14001010c:	add    BYTE PTR [rax],al
   14001010e:	add    BYTE PTR [rax],al
   140010110:	mov    BYTE PTR [rsi],bh
   140010112:	add    DWORD PTR [rax],eax
   140010114:	add    BYTE PTR [rax],al
   140010116:	add    BYTE PTR [rax],al
   140010118:	jbe    0x140010158
   14001011a:	add    DWORD PTR [rax],eax
   14001011c:	add    BYTE PTR [rax],al
   14001011e:	add    BYTE PTR [rax],al
   140010120:	push   0x3e
   140010122:	add    DWORD PTR [rax],eax
   140010124:	add    BYTE PTR [rax],al
   140010126:	add    BYTE PTR [rax],al
   140010128:	pop    rax
   140010129:	add    DWORD PTR ds:[rax],eax
   14001012c:	add    BYTE PTR [rax],al
   14001012e:	add    BYTE PTR [rax],al
   140010130:	rex.WX
   140010131:	add    DWORD PTR ds:[rax],eax
   140010134:	add    BYTE PTR [rax],al
   140010136:	add    BYTE PTR [rax],al
   140010138:	xor    al,0x3e
   14001013a:	add    DWORD PTR [rax],eax
   14001013c:	add    BYTE PTR [rax],al
   14001013e:	add    BYTE PTR [rax],al
   140010140:	(bad)  
   140010141:	add    DWORD PTR ds:[rax],eax
   140010144:	add    BYTE PTR [rax],al
   140010146:	add    BYTE PTR [rax],al
   140010148:	adc    bh,BYTE PTR [rsi]
   14001014a:	add    DWORD PTR [rax],eax
   14001014c:	add    BYTE PTR [rax],al
   14001014e:	add    BYTE PTR [rax],al
   140010150:	sahf   
   140010151:	xor    al,0x1
   140010153:	add    BYTE PTR [rax],al
   140010155:	add    BYTE PTR [rax],al
   140010157:	add    BYTE PTR [rsi+0x134],cl
   14001015d:	add    BYTE PTR [rax],al
   14001015f:	add    BYTE PTR [rax+0x34],bh
   140010162:	add    DWORD PTR [rax],eax
   140010164:	add    BYTE PTR [rax],al
   140010166:	add    BYTE PTR [rax],al
   140010168:	push   0x13f
	...
   140010175:	add    BYTE PTR [rax],al
   140010177:	add    ah,dh
   140010179:	cmp    al,BYTE PTR [rcx]
   14001017b:	add    BYTE PTR [rax],al
   14001017d:	add    BYTE PTR [rax],al
   14001017f:	add    BYTE PTR [rsi],bl
   140010181:	cmp    eax,DWORD PTR [rcx]
   140010183:	add    BYTE PTR [rax],al
   140010185:	add    BYTE PTR [rax],al
   140010187:	add    BYTE PTR [rax],cl
   140010189:	cmp    eax,DWORD PTR [rcx]
	...
   140010197:	add    BYTE PTR [rdx],al
   140010199:	add    BYTE PTR [rax],al
   14001019b:	add    BYTE PTR [rax],al
   14001019d:	add    BYTE PTR [rax],al
   14001019f:	adc    BYTE PTR [rsi+0x0],0x0
   1400101a6:	add    BYTE PTR [rax+0x7],al
   1400101ac:	add    BYTE PTR [rax],al
   1400101ae:	add    BYTE PTR [rax+0x6],al
   1400101b4:	add    BYTE PTR [rax],al
   1400101b6:	add    BYTE PTR [rax+0x8],al
   1400101bc:	add    BYTE PTR [rax],al
   1400101be:	add    BYTE PTR [rax+0xa],al
   1400101c4:	add    BYTE PTR [rax],al
   1400101c6:	add    BYTE PTR [rax+0x9],al
   1400101cc:	add    BYTE PTR [rax],al
   1400101ce:	add    BYTE PTR [rax+0xc],al
   1400101d4:	add    BYTE PTR [rax],al
   1400101d6:	add    BYTE PTR [rax+0x0],al
   1400101dc:	add    BYTE PTR [rax],al
   1400101de:	add    BYTE PTR [rax],al
   1400101e0:	rex.WR cmp rax,0x1
   1400101e6:	add    BYTE PTR [rax],al
   1400101e8:	pop    rax
   1400101e9:	cmp    eax,0x1
   1400101ee:	add    BYTE PTR [rax],al
   1400101f0:	(bad)  
   1400101f1:	cmp    eax,0x1
   1400101f6:	add    BYTE PTR [rax],al
   1400101f8:	outs   dx,BYTE PTR ds:[rsi]
   1400101f9:	cmp    eax,0x1
   1400101fe:	add    BYTE PTR [rax],al
   140010200:	rex cmp eax,0x1
	...
   14001020e:	add    BYTE PTR [rax],al
   140010210:	add    bh,BYTE PTR [rax]
   140010212:	add    DWORD PTR [rax],eax
	...
   140010220:	int3   
   140010221:	cmp    al,BYTE PTR [rcx]
   140010223:	add    BYTE PTR [rax],al
   140010225:	add    BYTE PTR [rax],al
   140010227:	add    dl,bl
   140010229:	cmp    al,BYTE PTR [rcx]
   14001022b:	add    BYTE PTR [rax],al
   14001022d:	add    BYTE PTR [rax],al
   14001022f:	add    al,al
   140010231:	cmp    al,BYTE PTR [rcx]
	...
   14001023f:	add    ah,bl
   140010241:	cmp    eax,0x1
   140010246:	add    BYTE PTR [rax],al
   140010248:	hlt    
   140010249:	cmp    eax,0x1
   14001024e:	add    BYTE PTR [rax],al
   140010250:	sar    BYTE PTR [rip+0x1],0x0        # 0x140010258
	...
   14001025f:	add    BYTE PTR [rbp+rdi*1+0x1],dl
   140010266:	add    BYTE PTR [rax],al
   140010268:	je     0x14001026a
   14001026a:	add    BYTE PTR [rax],al
   14001026c:	add    BYTE PTR [rax],al
   14001026e:	add    BYTE PTR [rax+0x73],al
   140010274:	add    BYTE PTR [rax],al
   140010276:	add    BYTE PTR [rax+0x6f],al
   14001027c:	add    BYTE PTR [rax],al
   14001027e:	add    BYTE PTR [rax+0x13d84],al
   140010284:	add    BYTE PTR [rax],al
   140010286:	add    BYTE PTR [rax],al
   140010288:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140010289:	cmp    eax,0x1
	...
   140010296:	add    BYTE PTR [rax],al
   140010298:	adc    al,0x38
   14001029a:	add    DWORD PTR [rax],eax
   14001029c:	add    BYTE PTR [rax],al
   14001029e:	add    BYTE PTR [rax],al
   1400102a0:	out    dx,al
   1400102a1:	(bad)  
   1400102a2:	add    DWORD PTR [rax],eax
   1400102a4:	add    BYTE PTR [rax],al
   1400102a6:	add    BYTE PTR [rax],al
   1400102a8:	(bad)  
   1400102a9:	(bad)  
   1400102aa:	add    DWORD PTR [rax],eax
   1400102ac:	add    BYTE PTR [rax],al
   1400102ae:	add    BYTE PTR [rax],al
   1400102b0:	cmp    BYTE PTR es:[rcx],al
   1400102b3:	add    BYTE PTR [rax],al
   1400102b5:	add    BYTE PTR [rax],al
   1400102b7:	add    ah,al
   1400102b9:	(bad)  
   1400102ba:	add    DWORD PTR [rax],eax
   1400102bc:	add    BYTE PTR [rax],al
   1400102be:	add    BYTE PTR [rax],al
   1400102c0:	mov    dl,0x37
   1400102c2:	add    DWORD PTR [rax],eax
	...
   1400102d0:	mov    WORD PTR [rax],?
   1400102d2:	add    DWORD PTR [rax],eax
   1400102d4:	add    BYTE PTR [rax],al
   1400102d6:	add    BYTE PTR [rax],al
   1400102d8:	test   al,0x38
   1400102da:	add    DWORD PTR [rax],eax
	...
   1400102e8:	cmp    BYTE PTR ss:[rcx],al
	...
   1400102f7:	add    ah,dh
   1400102f9:	cmp    BYTE PTR [rcx],al
   1400102fb:	add    BYTE PTR [rax],al
   1400102fd:	add    BYTE PTR [rax],al
   1400102ff:	add    dh,al
   140010301:	cmp    BYTE PTR [rcx],al
   140010303:	add    BYTE PTR [rax],al
   140010305:	add    BYTE PTR [rax],al
   140010307:	add    BYTE PTR [rdx],cl
   140010309:	cmp    DWORD PTR [rcx],eax
	...
   140010317:	add    dl,bl
   140010319:	cmp    BYTE PTR [rcx],al
	...
   140010327:	add    BYTE PTR [rax+0x38],bh
   14001032a:	add    DWORD PTR [rax],eax
   14001032c:	add    BYTE PTR [rax],al
   14001032e:	add    BYTE PTR [rax],al
   140010330:	rex.WX cmp BYTE PTR [rcx],al
   140010333:	add    BYTE PTR [rax],al
   140010335:	add    BYTE PTR [rax],al
   140010337:	add    BYTE PTR [rsi+0x38],bl
   14001033a:	add    DWORD PTR [rax],eax
	...
   140010348:	rex.X cmp BYTE PTR [rcx],al
	...
   140010357:	add    BYTE PTR [rax],ah
   140010359:	cmp    DWORD PTR [rcx],eax
   14001035b:	add    BYTE PTR [rax],al
   14001035d:	add    BYTE PTR [rax],al
   14001035f:	add    BYTE PTR [rdx],bh
   140010361:	cmp    DWORD PTR [rcx],eax
	...
   14001036f:	add    BYTE PTR [rsp+rdi*1+0x1],al
   140010373:	add    BYTE PTR [rax],al
   140010375:	add    BYTE PTR [rax],al
   140010377:	add    BYTE PTR [rsi+0x3c],ah
   14001037a:	add    DWORD PTR [rax],eax
   14001037c:	add    BYTE PTR [rax],al
   14001037e:	add    BYTE PTR [rax],al
   140010380:	test   BYTE PTR [rcx+rax*1],bh
   140010383:	add    BYTE PTR [rax],al
   140010385:	add    BYTE PTR [rax],al
   140010387:	add    BYTE PTR [rax+0x13c],ah
   14001038d:	add    BYTE PTR [rax],al
   14001038f:	add    BYTE PTR [rsi+0x13b],al
   140010395:	add    BYTE PTR [rax],al
   140010397:	add    ah,ch
   140010399:	cmp    al,0x1
   14001039b:	add    BYTE PTR [rax],al
   14001039d:	add    BYTE PTR [rax],al
   14001039f:	add    BYTE PTR [rax],dl
   1400103a1:	cmp    eax,0x1
   1400103a6:	add    BYTE PTR [rax],al
   1400103a8:	or     bh,BYTE PTR [rcx+rax*1]
   1400103ab:	add    BYTE PTR [rax],al
   1400103ad:	add    BYTE PTR [rax],al
   1400103af:	add    dh,ah
   1400103b1:	cmp    eax,DWORD PTR [rcx]
   1400103b3:	add    BYTE PTR [rax],al
   1400103b5:	add    BYTE PTR [rax],al
   1400103b7:	add    BYTE PTR [rsi+0x3b],ch
   1400103ba:	add    DWORD PTR [rax],eax
   1400103bc:	add    BYTE PTR [rax],al
   1400103be:	add    BYTE PTR [rax],al
   1400103c0:	rex cmp eax,DWORD PTR [rcx]
   1400103c3:	add    BYTE PTR [rax],al
   1400103c5:	add    BYTE PTR [rax],al
   1400103c7:	add    dl,al
   1400103c9:	cmp    eax,DWORD PTR [rcx]
   1400103cb:	add    BYTE PTR [rax],al
   1400103cd:	add    BYTE PTR [rax],al
   1400103cf:	add    ah,cl
   1400103d1:	cmp    al,0x1
   1400103d3:	add    BYTE PTR [rax],al
   1400103d5:	add    BYTE PTR [rax],al
   1400103d7:	add    BYTE PTR [rdx+0x13b],ah
   1400103dd:	add    BYTE PTR [rax],al
   1400103df:	add    BYTE PTR [rdx],ah
   1400103e1:	cmp    al,0x1
	...
   1400103ef:	add    BYTE PTR [rsi+0x40],dh
   1400103f2:	add    DWORD PTR [rax],eax
   1400103f4:	add    BYTE PTR [rax],al
   1400103f6:	add    BYTE PTR [rax],al
   1400103f8:	fs (bad) 
   1400103fa:	add    DWORD PTR [rax],eax
   1400103fc:	add    BYTE PTR [rax],al
   1400103fe:	add    BYTE PTR [rax],al
   140010400:	(bad)  
   140010401:	rex add DWORD PTR [rax],eax
   140010404:	add    BYTE PTR [rax],al
   140010406:	add    BYTE PTR [rax],al
   140010408:	sahf   
   140010409:	(bad)  
   14001040a:	add    DWORD PTR [rax],eax
   14001040c:	add    BYTE PTR [rax],al
   14001040e:	add    BYTE PTR [rax],al
   140010410:	jp     0x140010449
   140010412:	add    DWORD PTR [rax],eax
   140010414:	add    BYTE PTR [rax],al
   140010416:	add    BYTE PTR [rax],al
   140010418:	outs   dx,BYTE PTR ds:[rsi]
   140010419:	(bad)  
   14001041a:	add    DWORD PTR [rax],eax
   14001041c:	add    BYTE PTR [rax],al
   14001041e:	add    BYTE PTR [rax],al
   140010420:	add    BYTE PTR [rax+0x1],0x0
   140010424:	add    BYTE PTR [rax],al
   140010426:	add    BYTE PTR [rax],al
   140010428:	rex.WR (bad) 
   14001042a:	add    DWORD PTR [rax],eax
   14001042c:	add    BYTE PTR [rax],al
   14001042e:	add    BYTE PTR [rax],al
   140010430:	rex (bad) 
   140010432:	add    DWORD PTR [rax],eax
   140010434:	add    BYTE PTR [rax],al
   140010436:	add    BYTE PTR [rax],al
   140010438:	sub    al,0x37
   14001043a:	add    DWORD PTR [rax],eax
   14001043c:	add    BYTE PTR [rax],al
   14001043e:	add    BYTE PTR [rax],al
   140010440:	and    dh,BYTE PTR [rdi]
   140010442:	add    DWORD PTR [rax],eax
   140010444:	add    BYTE PTR [rax],al
   140010446:	add    BYTE PTR [rax],al
   140010448:	sbb    dh,BYTE PTR [rdi]
   14001044a:	add    DWORD PTR [rax],eax
   14001044c:	add    BYTE PTR [rax],al
   14001044e:	add    BYTE PTR [rax],al
   140010450:	adc    dh,BYTE PTR [rdi]
   140010452:	add    DWORD PTR [rax],eax
   140010454:	add    BYTE PTR [rax],al
   140010456:	add    BYTE PTR [rax],al
   140010458:	add    BYTE PTR [rdi],dh
   14001045a:	add    DWORD PTR [rax],eax
   14001045c:	add    BYTE PTR [rax],al
   14001045e:	add    BYTE PTR [rax],al
   140010460:	out    dx,al
   140010461:	add    DWORD PTR ss:[rax],eax
   140010464:	add    BYTE PTR [rax],al
   140010466:	add    BYTE PTR [rax],al
   140010468:	loopne 0x1400104a0
   14001046a:	add    DWORD PTR [rax],eax
   14001046c:	add    BYTE PTR [rax],al
   14001046e:	add    BYTE PTR [rax],al
   140010470:	shl    BYTE PTR [rsi],cl
   140010472:	add    DWORD PTR [rax],eax
   140010474:	add    BYTE PTR [rax],al
   140010476:	add    BYTE PTR [rax],al
   140010478:	retf   0x136
   14001047b:	add    BYTE PTR [rax],al
   14001047d:	add    BYTE PTR [rax],al
   14001047f:	add    BYTE PTR [rsi+0x136],bh
   140010485:	add    BYTE PTR [rax],al
   140010487:	add    BYTE PTR [rsi+rsi*1+0x1],dh
   14001048e:	add    BYTE PTR [rax],al
   140010490:	stos   BYTE PTR es:[rdi],al
   140010491:	add    DWORD PTR ss:[rax],eax
   140010494:	add    BYTE PTR [rax],al
   140010496:	add    BYTE PTR [rax],al
   140010498:	pushf  
   140010499:	add    DWORD PTR ss:[rax],eax
   14001049c:	add    BYTE PTR [rax],al
   14001049e:	add    BYTE PTR [rax],al
   1400104a0:	nop
   1400104a1:	add    DWORD PTR ss:[rax],eax
   1400104a4:	add    BYTE PTR [rax],al
   1400104a6:	add    BYTE PTR [rax],al
   1400104a8:	mov    BYTE PTR [rsi],dh
   1400104aa:	add    DWORD PTR [rax],eax
   1400104ac:	add    BYTE PTR [rax],al
   1400104ae:	add    BYTE PTR [rax],al
   1400104b0:	jl     0x1400104e8
   1400104b2:	add    DWORD PTR [rax],eax
   1400104b4:	add    BYTE PTR [rax],al
   1400104b6:	add    BYTE PTR [rax],al
   1400104b8:	jo     0x1400104f0
   1400104ba:	add    DWORD PTR [rax],eax
   1400104bc:	add    BYTE PTR [rax],al
   1400104be:	add    BYTE PTR [rax],al
   1400104c0:	fs add DWORD PTR ss:[rax],eax
   1400104c4:	add    BYTE PTR [rax],al
   1400104c6:	add    BYTE PTR [rax],al
   1400104c8:	pop    rax
   1400104c9:	add    DWORD PTR ss:[rax],eax
   1400104cc:	add    BYTE PTR [rax],al
   1400104ce:	add    BYTE PTR [rax],al
   1400104d0:	rex.WRX
   1400104d1:	add    DWORD PTR ss:[rax],eax
   1400104d4:	add    BYTE PTR [rax],al
   1400104d6:	add    BYTE PTR [rax],al
   1400104d8:	rex.RX
   1400104d9:	add    DWORD PTR ss:[rax],eax
   1400104dc:	add    BYTE PTR [rax],al
   1400104de:	add    BYTE PTR [rax],al
   1400104e0:	cmp    BYTE PTR [rsi],dh
   1400104e2:	add    DWORD PTR [rax],eax
   1400104e4:	add    BYTE PTR [rax],al
   1400104e6:	add    BYTE PTR [rax],al
   1400104e8:	sub    dh,BYTE PTR [rsi]
   1400104ea:	add    DWORD PTR [rax],eax
   1400104ec:	add    BYTE PTR [rax],al
   1400104ee:	add    BYTE PTR [rax],al
   1400104f0:	xchg   esi,eax
   1400104f1:	(bad)  
   1400104f2:	add    DWORD PTR [rax],eax
   1400104f4:	add    BYTE PTR [rax],al
   1400104f6:	add    BYTE PTR [rax],al
   1400104f8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400104f9:	(bad)  
   1400104fa:	add    DWORD PTR [rax],eax
   1400104fc:	add    BYTE PTR [rax],al
   1400104fe:	add    BYTE PTR [rax],al
   140010500:	mov    al,0x3f
   140010502:	add    DWORD PTR [rax],eax
   140010504:	add    BYTE PTR [rax],al
   140010506:	add    BYTE PTR [rax],al
   140010508:	mov    edx,0x13f
   14001050d:	add    BYTE PTR [rax],al
   14001050f:	add    ah,al
   140010511:	(bad)  
   140010512:	add    DWORD PTR [rax],eax
   140010514:	add    BYTE PTR [rax],al
   140010516:	add    BYTE PTR [rax],al
   140010518:	(bad)  
   140010519:	(bad)  
   14001051a:	add    DWORD PTR [rax],eax
   14001051c:	add    BYTE PTR [rax],al
   14001051e:	add    BYTE PTR [rax],al
   140010520:	fdivr  DWORD PTR [rdi]
   140010522:	add    DWORD PTR [rax],eax
   140010524:	add    BYTE PTR [rax],al
   140010526:	add    BYTE PTR [rax],al
   140010528:	loop   0x140010569
   14001052a:	add    DWORD PTR [rax],eax
   14001052c:	add    BYTE PTR [rax],al
   14001052e:	add    BYTE PTR [rax],al
   140010530:	hlt    
   140010531:	(bad)  
   140010532:	add    DWORD PTR [rax],eax
   140010534:	add    BYTE PTR [rax],al
   140010536:	add    BYTE PTR [rax],al
   140010538:	(bad)  
   140010539:	(bad)  
   14001053a:	add    DWORD PTR [rax],eax
   14001053c:	add    BYTE PTR [rax],al
   14001053e:	add    BYTE PTR [rax],al
   140010540:	rex.WX
   140010541:	rex add DWORD PTR [rax],eax
	...
   140010550:	sbb    al,0x40
   140010552:	add    DWORD PTR [rax],eax
	...
   140010560:	sahf   
   140010561:	cmp    al,BYTE PTR [rcx]
   140010563:	add    BYTE PTR [rax],al
   140010565:	add    BYTE PTR [rax],al
   140010567:	add    BYTE PTR [rax+0x13a],cl
	...
   140010575:	add    BYTE PTR [rax],al
   140010577:	add    BYTE PTR [rax],cl
   140010579:	rex add DWORD PTR [rax],eax
	...
   140010588:	shr    bl,0x0
   14001058b:	rex add DWORD PTR [rax],eax
   14001058e:	add    BYTE PTR [rax],al
   140010590:	jo     0x14001057f
   140010592:	add    BYTE PTR [rax+0x1],al
	...
   1400105a1:	jrcxz  0x1400105a3
   1400105a3:	rex add DWORD PTR [rax],eax
	...
   1400105b6:	add    BYTE PTR [rax],al
   1400105b8:	and    dl,ah
   1400105ba:	add    BYTE PTR [rax+0x1],al
   1400105bd:	add    BYTE PTR [rax],al
   1400105bf:	add    al,dh
   1400105c1:	call   0x1400245c6
	...
   1400105ce:	add    BYTE PTR [rax],al
   1400105d0:	and    BYTE PTR [rax-0x1de00000],al
   1400105d6:	add    BYTE PTR [rax],al
   1400105d8:	add    bl,ah
   1400105da:	add    BYTE PTR [rax],al
   1400105dc:	xor    ch,ah
   1400105de:	add    BYTE PTR [rax],al
   1400105e0:	nop
   1400105e1:	in     eax,0x0
   1400105e3:	add    BYTE PTR [rax],dl
   1400105e5:	out    0x0,al
   1400105e7:	add    BYTE PTR [rax-0xfffff18],dh
   1400105ed:	call   0x129d105f2
   1400105f2:	add    BYTE PTR [rax],al
   1400105f4:	shr    bl,0x0
	...
   1400105ff:	add    BYTE PTR [rax+0x14000e5],dl
   140010605:	add    BYTE PTR [rax],al
   140010607:	add    BYTE PTR [rax+0x1400150],ah
   14001060d:	add    BYTE PTR [rax],al
   14001060f:	add    BYTE PTR [rax+0x51],al
   140010612:	add    DWORD PTR [rax+0x1],eax
   140010615:	add    BYTE PTR [rax],al
   140010617:	add    BYTE PTR [rax+rax*1+0x0],bl
   14001061b:	add    BYTE PTR [rdi],ch
   14001061d:	add    BYTE PTR [rax],al
   14001061f:	add    BYTE PTR [rax],ah
   140010621:	add    BYTE PTR [rax],0x40
   140010624:	add    DWORD PTR [rax],eax
	...
   14001062e:	add    BYTE PTR [rax],al
   140010630:	add    BYTE PTR cs:[rdi+0x0],cl
   140010634:	rex.XB add BYTE PTR [r8+0x0],dl
	...
   140010640:	add    BYTE PTR cs:[rip+0x6400],ah        # 0x140016a47
   140010647:	add    BYTE PTR [rdx+0x0],dl
   14001064a:	rex.WRXB add BYTE PTR [r15+0x0],r9b
   14001064e:	push   rsp
   14001064f:	add    BYTE PTR [rax+rax*1+0x44],bl
   140010653:	add    BYTE PTR [rbp+0x0],al
   140010656:	rex.RX add BYTE PTR [rcx+0x0],r8b
   14001065a:	push   rbp
   14001065b:	add    BYTE PTR [rax+rax*1+0x54],cl
	...
   140010667:	add    BYTE PTR [rdx+0x0],dl
   14001066a:	rex.WRXB add BYTE PTR [r15+0x0],r9b
   14001066e:	push   rsp
   14001066f:	add    BYTE PTR [rax+rax*1+0x43],bl
   140010673:	add    BYTE PTR [rcx+0x0],cl
   140010676:	rex.WRB add BYTE PTR [r14+0x0],r10b
   14001067a:	xor    al,BYTE PTR [rax]
   14001067c:	add    BYTE PTR [rax],al
   14001067e:	add    BYTE PTR [rax],al
   140010680:	pop    rsp
   140010681:	add    BYTE PTR [rax+rax*1+0x0],bl
   140010685:	add    BYTE PTR [rax],al
   140010687:	add    BYTE PTR [rdi+0x0],dl
   14001068a:	imul   eax,DWORD PTR [rax],0x33006e
   140010690:	xor    al,BYTE PTR [rax]
   140010692:	pop    rdi
   140010693:	add    BYTE PTR [rbx+0x0],dl
   140010696:	jns    0x140010698
   140010698:	jae    0x14001069a
   14001069a:	je     0x14001069c
   14001069c:	add    BYTE PTR gs:[rbp+0x0],ch
   1400106a0:	add    BYTE PTR [rdx+0x0],r14b
   1400106a4:	imul   eax,DWORD PTR [rax],0x650076
   1400106aa:	jb     0x1400106ac
   1400106ac:	add    BYTE PTR [rax],al
   1400106ae:	add    BYTE PTR [rax],al
   1400106b0:	add    BYTE PTR [r8+r8*1+0x6f],r13b
   1400106b5:	add    BYTE PTR [rdx+0x0],ah
   1400106b8:	(bad)  
   1400106b9:	add    BYTE PTR [rax+rax*1+0x5c],ch
   1400106bd:	add    BYTE PTR [rbx+0x0],dl
   1400106c0:	imul   eax,DWORD PTR [rax],0x6e0067
   1400106c6:	add    BYTE PTR gs:[rax+rax*1+0x44],ah
   1400106cb:	add    BYTE PTR [rdx+0x0],dh
   1400106ce:	imul   eax,DWORD PTR [rax],0x650076
   1400106d4:	jb     0x1400106d6
   1400106d6:	jae    0x1400106d8
   1400106d8:	rex.WRB add BYTE PTR [r13+0x0],r14b
   1400106dc:	je     0x1400106de
   1400106de:	add    BYTE PTR gs:[rax+0x0],bh
	...
   1400106ee:	add    BYTE PTR [rax],al
   1400106f0:	jae    0x1400106f2
   1400106f2:	add    BYTE PTR gs:[rax+rax*1+0x65],ch
   1400106f7:	add    BYTE PTR [rbx+0x0],ah
   1400106fa:	je     0x1400106fc
   1400106fc:	and    BYTE PTR [rax],al
   1400106fe:	sub    al,BYTE PTR [rax]
   140010700:	and    BYTE PTR [rax],al
   140010702:	data16 add BYTE PTR [rdx+0x0],dh
   140010706:	outs   dx,DWORD PTR ds:[rsi]
   140010707:	add    BYTE PTR [rbp+0x0],ch
   14001070a:	and    BYTE PTR [rax],al
   14001070c:	push   rdi
   14001070d:	add    BYTE PTR [rcx+0x0],ch
   140010710:	outs   dx,BYTE PTR ds:[rsi]
   140010711:	add    BYTE PTR [rbx],dh
   140010713:	add    BYTE PTR [rdx],dh
   140010715:	add    BYTE PTR [rdi+0x0],bl
   140010718:	push   rax
   140010719:	add    BYTE PTR [rsi+0x0],ch
   14001071c:	jo     0x14001071e
   14001071e:	push   rbx
   14001071f:	add    BYTE PTR [rcx+0x0],ch
   140010722:	add    BYTE PTR [esi+0x0],ch
   140010726:	add    BYTE PTR gs:[rax+rax*1+0x44],ah
   14001072b:	add    BYTE PTR [rdx+0x0],dh
   14001072e:	imul   eax,DWORD PTR [rax],0x650076
   140010734:	jb     0x140010736
   140010736:	and    BYTE PTR [rax],al
   140010738:	ja     0x14001073a
   14001073a:	push   0x72006500
   14001073f:	add    BYTE PTR [rbp+0x0],ah
   140010742:	and    BYTE PTR [rax],al
   140010744:	add    BYTE PTR [rbp+0x0],r12b
   140010748:	jbe    0x14001074a
   14001074a:	imul   eax,DWORD PTR [rax],0x650063
   140010750:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   140010754:	ins    DWORD PTR es:[rdi],dx
   140010755:	add    BYTE PTR [rbp+0x0],ah
   140010758:	and    BYTE PTR [rax],al
   14001075a:	and    DWORD PTR [rax],eax
   14001075c:	cmp    eax,0x4e002000
   140010761:	add    BYTE PTR [rbp+0x0],dl
   140010764:	rex.WR add BYTE PTR [rax+rax*1+0x0],r9b
   140010769:	add    BYTE PTR [rax],al
   14001076b:	add    BYTE PTR [rax],al
   14001076d:	add    BYTE PTR [rax],al
   14001076f:	add    BYTE PTR [rdi+0x0],dl
   140010772:	push   rcx
   140010773:	add    BYTE PTR [rax+rax*1+0x0],cl
   140010777:	add    BYTE PTR [rdx],cl
   140010779:	add    BYTE PTR [rax],al
   14001077b:	add    BYTE PTR [rax],al
   14001077d:	add    BYTE PTR [rax],al
   14001077f:	add    BYTE PTR [rsi+0x0],cl
   140010782:	(bad)  
   140010783:	add    BYTE PTR [rcx+0x0],al
   140010786:	add    BYTE PTR [rax],al
   140010788:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   14001078c:	ins    DWORD PTR es:[rdi],dx
   14001078d:	add    BYTE PTR [rbp+0x0],ah
	...
   140010798:	push   rbx
   140010799:	add    BYTE PTR [rcx+0x0],bh
   14001079c:	jae    0x14001079e
   14001079e:	je     0x1400107a0
   1400107a0:	add    BYTE PTR gs:[rbp+0x0],ch
   1400107a4:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   1400107a8:	ins    DWORD PTR es:[rdi],dx
   1400107a9:	add    BYTE PTR [rbp+0x0],ah
   1400107ac:	add    BYTE PTR [rax],al
   1400107ae:	add    BYTE PTR [rax],al
   1400107b0:	push   rbx
   1400107b1:	add    BYTE PTR [rax+rax*1+0x61],dh
   1400107b5:	add    BYTE PTR [rdx+0x0],dh
   1400107b8:	je     0x1400107ba
   1400107ba:	rex.WRB add BYTE PTR [r15+0x0],r13b
   1400107be:	add    BYTE PTR fs:[rbp+0x0],ah
   1400107c2:	add    BYTE PTR [rax],al
   1400107c4:	add    BYTE PTR [rax],al
   1400107c6:	add    BYTE PTR [rax],al
   1400107c8:	add    BYTE PTR [rcx+0x0],r13b
   1400107cc:	jae    0x1400107ce
   1400107ce:	jo     0x1400107d0
   1400107d0:	ins    BYTE PTR es:[rdi],dx
   1400107d1:	add    BYTE PTR [rcx+0x0],ah
   1400107d4:	jns    0x1400107d6
   1400107d6:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   1400107da:	ins    DWORD PTR es:[rdi],dx
   1400107db:	add    BYTE PTR [rbp+0x0],ah
   1400107de:	add    BYTE PTR [rax],al
   1400107e0:	add    BYTE PTR [rbp+0x0],r12b
   1400107e4:	jae    0x1400107e6
   1400107e6:	movsxd eax,DWORD PTR [rax]
   1400107e8:	jb     0x1400107ea
   1400107ea:	imul   eax,DWORD PTR [rax],0x740070
   1400107f0:	imul   eax,DWORD PTR [rax],0x6e006f
   1400107f6:	add    BYTE PTR [rax],al
   1400107f8:	push   rbx
   1400107f9:	add    BYTE PTR [rax+rax*1+0x61],dh
   1400107fd:	add    BYTE PTR [rax+rax*1+0x75],dh
   140010801:	add    BYTE PTR [rbx+0x0],dh
   140010804:	add    BYTE PTR [rax],al
   140010806:	add    BYTE PTR [rax],al
   140010808:	push   rbx
   140010809:	add    BYTE PTR [rax+rax*1+0x61],dh
   14001080d:	add    BYTE PTR [rax+rax*1+0x65],dh
   140010811:	add    BYTE PTR [rax],al
   140010813:	add    BYTE PTR [rax],al
   140010815:	add    BYTE PTR [rax],al
   140010817:	add    BYTE PTR [rcx+0x0],al
   14001081a:	movsxd eax,DWORD PTR [rax]
   14001081c:	movsxd eax,DWORD PTR [rax]
   14001081e:	add    BYTE PTR gs:[rax+0x0],dh
   140010822:	je     0x140010824
   140010824:	push   rax
   140010825:	add    BYTE PTR [rcx+0x0],ah
   140010828:	jne    0x14001082a
   14001082a:	jae    0x14001082c
   14001082c:	add    BYTE PTR gs:[rax],al
   14001082f:	add    BYTE PTR [rcx+0x0],al
   140010832:	movsxd eax,DWORD PTR [rax]
   140010834:	movsxd eax,DWORD PTR [rax]
   140010836:	add    BYTE PTR gs:[rax+0x0],dh
   14001083a:	je     0x14001083c
   14001083c:	push   rbx
   14001083d:	add    BYTE PTR [rax+rax*1+0x6f],dh
   140010841:	add    BYTE PTR [rax+0x0],dh
   140010844:	add    BYTE PTR [rax],al
   140010846:	add    BYTE PTR [rax],al
   140010848:	push   rbx
   140010849:	add    BYTE PTR [rbp+0x0],ah
   14001084c:	jb     0x14001084e
   14001084e:	jbe    0x140010850
   140010850:	imul   eax,DWORD PTR [rax],0x650063
   140010856:	push   rsp
   140010857:	add    BYTE PTR [rcx+0x0],bh
   14001085a:	jo     0x14001085c
   14001085c:	add    BYTE PTR gs:[rax],al
   14001085f:	add    BYTE PTR [rax+0x0],dl
   140010862:	(bad)  
   140010863:	add    BYTE PTR [rax+rax*1+0x68],dh
   140010867:	add    BYTE PTR [rsi+0x0],cl
   14001086a:	(bad)  
   14001086b:	add    BYTE PTR [rbp+0x0],ch
   14001086e:	add    BYTE PTR gs:[rax],al
   140010871:	add    BYTE PTR [rax],al
   140010873:	add    BYTE PTR [rax],al
   140010875:	add    BYTE PTR [rax],al
   140010877:	add    BYTE PTR [rax+rax*1+0x72],al
   14001087b:	add    BYTE PTR [rcx+0x0],ch
   14001087e:	jbe    0x140010880
   140010880:	add    BYTE PTR gs:[rdx+0x0],dh
   140010884:	add    BYTE PTR [rax],al
   140010886:	add    BYTE PTR [rax],al
   140010888:	xor    BYTE PTR [rax],al
   14001088a:	add    BYTE PTR [rax],al
   14001088c:	add    BYTE PTR [rax],al
   14001088e:	add    BYTE PTR [rax],al
   140010890:	rex.RX add BYTE PTR [rcx+0x0],r8b
   140010894:	rex.WR add BYTE PTR [rbx+0x0],r10b
   140010898:	add    BYTE PTR [r8],r8b
   14001089b:	add    BYTE PTR [rax],al
   14001089d:	add    BYTE PTR [rax],al
   14001089f:	add    BYTE PTR [rax+rax*1+0x52],dl
   1400108a3:	add    BYTE PTR [rbp+0x0],dl
   1400108a6:	add    BYTE PTR [r8],r8b
   1400108a9:	add    BYTE PTR [rax],al
   1400108ab:	add    BYTE PTR [rdx],bh
   1400108ad:	add    BYTE PTR [rax],al
   1400108af:	add    BYTE PTR [rax+0x41],dl
   1400108b2:	rex.RXB
   1400108b3:	add    BYTE PTR [r8],r8b
   1400108b6:	add    BYTE PTR [rax],al
   1400108b8:	rex.WB
   1400108b9:	rex.WRX
   1400108ba:	rex.WB push r12
   1400108bc:	add    BYTE PTR [rax],al
   1400108be:	add    BYTE PTR [rax],al
   1400108c0:	cs (bad) 
   1400108c3:	jae    0x1400108c5
   1400108c5:	add    BYTE PTR [rax],al
   1400108c7:	add    BYTE PTR [rsi],ch
   1400108c9:	gs fs (bad) 
   1400108cc:	je     0x14001092f
   1400108ce:	add    BYTE PTR [rax],al
   1400108d0:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x2e000061
   1400108d9:	jb     0x14001094e
   1400108db:	jb     0x140010940
   1400108dd:	add    BYTE PTR [rax],al
   1400108df:	add    BYTE PTR [rbp+0x0],cl
   1400108e2:	rex.WRB add BYTE PTR [r15],r13b
   1400108e5:	add    BYTE PTR [rax+rax*1+0x64],ah
   1400108e9:	add    BYTE PTR [rdi],ch
   1400108eb:	add    BYTE PTR [rcx+0x0],bh
   1400108ee:	jns    0x1400108f0
   1400108f0:	jns    0x1400108f2
   1400108f2:	jns    0x1400108f4
   1400108f4:	add    BYTE PTR [rax],al
   1400108f6:	add    BYTE PTR [rax],al
   1400108f8:	rex.W add BYTE PTR [rax+0x0],cl
   1400108fc:	cmp    al,BYTE PTR [rax]
   1400108fe:	ins    DWORD PTR es:[rdi],dx
   1400108ff:	add    BYTE PTR [rbp+0x0],ch
   140010902:	cmp    al,BYTE PTR [rax]
   140010904:	jae    0x140010906
   140010906:	jae    0x140010908
   140010908:	add    BYTE PTR [rax],al
   14001090a:	add    BYTE PTR [rax],al
   14001090c:	and    BYTE PTR [rax],al
   14001090e:	add    BYTE PTR [rax],al
   140010910:	sub    al,BYTE PTR [rax]
   140010912:	add    BYTE PTR [rax],al
   140010914:	(bad)  
   140010915:	add    BYTE PTR [rax],al
   140010917:	add    BYTE PTR [rax+0x41],dl
   14001091a:	push   rdx
   14001091b:	push   rbx
   14001091c:	rex.RB push r10
   14001091e:	xor    al,BYTE PTR [rax]
   140010920:	jae    0x140010922
   140010922:	add    BYTE PTR [rax],al
   140010924:	jne    0x140010926
   140010926:	add    BYTE PTR [rax],al
   140010928:	jo     0x14001092a
   14001092a:	add    BYTE PTR [rax],al
   14001092c:	add    BYTE PTR [rax],al
   14001092e:	add    BYTE PTR [rax],al
   140010930:	rex.WR add BYTE PTR [rcx+0x0],r13b
   140010934:	jae    0x140010936
   140010936:	je     0x140010938
   140010938:	jl     0x14001093a
   14001093a:	push   rsp
   14001093b:	add    BYTE PTR [rcx+0x0],ah
   14001093e:	(bad)  
   14001093f:	add    BYTE PTR [rax+rax*1+0x65],ch
   140010943:	add    BYTE PTR [rax+rax*1+0x43],bh
   140010947:	add    BYTE PTR [rbx+0x0],dh
   14001094a:	jbe    0x14001094c
   14001094c:	add    BYTE PTR [rax],al
   14001094e:	add    BYTE PTR [rax],al
   140010950:	data16 add BYTE PTR [rdi+0x0],ch
   140010954:	add    BYTE PTR [rax],al
   140010956:	add    BYTE PTR [rax],al
   140010958:	outs   dx,BYTE PTR ds:[rsi]
   140010959:	add    BYTE PTR [rax+0x0],ch
   14001095c:	add    BYTE PTR [rax],al
   14001095e:	add    BYTE PTR [rax],al
   140010960:	jbe    0x140010962
   140010962:	add    BYTE PTR [rax],al
   140010964:	jae    0x140010966
   140010966:	imul   eax,DWORD PTR [rax],0x0
   14001096c:	add    BYTE PTR [rax],al
   14001096e:	add    BYTE PTR [rax],al
   140010970:	pop    rsp
   140010971:	add    BYTE PTR [rax+rax*1+0x5c],bl
   140010975:	add    BYTE PTR [rax],al
   140010977:	add    BYTE PTR [rbx+0x0],ch
   14001097a:	add    BYTE PTR gs:[rdx+0x0],dh
   14001097e:	outs   dx,BYTE PTR ds:[rsi]
   14001097f:	add    BYTE PTR [rbp+0x0],ah
   140010982:	ins    BYTE PTR es:[rdi],dx
   140010983:	add    BYTE PTR [rbx],dh
   140010985:	add    BYTE PTR [rdx],dh
   140010987:	add    BYTE PTR [rsi],ch
   140010989:	add    BYTE PTR [rax+rax*1+0x6c],ah
   14001098d:	add    BYTE PTR [rax+rax*1+0x0],ch
   140010991:	add    BYTE PTR [rax],al
   140010993:	add    BYTE PTR [rax],al
   140010995:	add    BYTE PTR [rax],al
   140010997:	add    BYTE PTR [rcx+0x73],cl
   14001099a:	push   rdi
   14001099b:	outs   dx,DWORD PTR ds:[rsi]
   14001099c:	ja     0x1400109d4
   14001099e:	xor    al,0x50
   1400109a0:	jb     0x140010a11
   1400109a2:	movsxd esp,DWORD PTR [rbp+0x73]
   1400109a5:	jae    0x1400109a7
   1400109a7:	add    BYTE PTR [rbx],dh
   1400109a9:	add    BYTE PTR [rbx],bh
   1400109ab:	add    BYTE PTR [rdx],dh
   1400109ad:	add    BYTE PTR [rbx],bh
   1400109af:	add    BYTE PTR [rax],dh
   1400109b1:	add    BYTE PTR [rax],al
   1400109b3:	add    BYTE PTR [rax],al
   1400109b5:	add    BYTE PTR [rax],al
   1400109b7:	add    BYTE PTR [rbx+0x0],dl
   1400109ba:	je     0x1400109bc
   1400109bc:	add    BYTE PTR fs:[rdx+0x0],dl
   1400109c0:	add    BYTE PTR gs:[rdi+0x0],ah
   1400109c4:	push   rax
   1400109c5:	add    BYTE PTR [rdx+0x0],dh
   1400109c8:	outs   dx,DWORD PTR ds:[rsi]
   1400109c9:	add    BYTE PTR [rsi+0x0],dh
   1400109cc:	add    BYTE PTR [rax],al
   1400109ce:	add    BYTE PTR [rax],al
   1400109d0:	rex.RXB add BYTE PTR [r13+0x0],r12b
   1400109d4:	je     0x1400109d6
   1400109d6:	push   rbx
   1400109d7:	add    BYTE PTR [rax+rax*1+0x72],dh
   1400109db:	add    BYTE PTR [rcx+0x0],ch
   1400109de:	outs   dx,BYTE PTR ds:[rsi]
   1400109df:	add    BYTE PTR [rdi+0x0],ah
   1400109e2:	push   rsi
   1400109e3:	add    BYTE PTR [rcx+0x0],ah
   1400109e6:	ins    BYTE PTR es:[rdi],dx
   1400109e7:	add    BYTE PTR [rbp+0x0],dh
   1400109ea:	add    BYTE PTR gs:[rax],al
   1400109ed:	add    BYTE PTR [rax],al
   1400109ef:	add    BYTE PTR [rax+0x0],cl
   1400109f2:	add    BYTE PTR [r10+0x0],dl
   1400109f6:	add    BYTE PTR [rdi+0x0],r10b
   1400109fa:	add    BYTE PTR [r10+0x0],dl
   1400109fe:	add    BYTE PTR [r8+rax*1+0x44],r11b
   140010a03:	add    BYTE PTR [rbp+0x0],al
   140010a06:	push   rbx
   140010a07:	add    BYTE PTR [rbx+0x0],al
   140010a0a:	push   rdx
   140010a0b:	add    BYTE PTR [rcx+0x0],cl
   140010a0e:	push   rax
   140010a0f:	add    BYTE PTR [rax+rax*1+0x49],dl
   140010a13:	add    BYTE PTR [rdi+0x0],cl
   140010a16:	rex.WRX add BYTE PTR [rax+r8*1+0x53],r11b
   140010a1b:	add    BYTE PTR [rcx+0x0],bl
   140010a1e:	push   rbx
   140010a1f:	add    BYTE PTR [rax+rax*1+0x45],dl
   140010a23:	add    BYTE PTR [rbp+0x0],cl
   140010a26:	pop    rsp
   140010a27:	add    BYTE PTR [rbx+0x0],al
   140010a2a:	add    BYTE PTR [r14+0x0],r9b
   140010a2e:	push   rsp
   140010a2f:	add    BYTE PTR [rdx+0x0],dl
   140010a32:	add    BYTE PTR [r8+rax*1+0x50],cl
   140010a37:	add    BYTE PTR [rdx+0x0],dl
   140010a3a:	rex.WRXB add BYTE PTR [r11+0x0],r8b
   140010a3e:	add    BYTE PTR [r11+0x0],r10b
   140010a42:	push   rbx
   140010a43:	add    BYTE PTR [rdi+0x0],cl
   140010a46:	push   rdx
   140010a47:	add    BYTE PTR [rax+rax*1+0x30],bl
   140010a4b:	add    BYTE PTR [rax],al
   140010a4d:	add    BYTE PTR [rax],al
   140010a4f:	add    BYTE PTR [rbx+0x0],dh
   140010a52:	push   rbx
   140010a53:	add    BYTE PTR [rbp+0x0],dh
   140010a56:	(bad)  
   140010a57:	add    BYTE PTR [rbx+0x0],cl
   140010a5a:	add    BYTE PTR gs:[rcx+0x0],bh
   140010a5e:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   140010a62:	ins    DWORD PTR es:[rdi],dx
   140010a63:	add    BYTE PTR [rbp+0x0],ah
   140010a66:	add    BYTE PTR [rax],al
   140010a68:	rex.WB add BYTE PTR [r8+rax*1+0x65],spl
   140010a6d:	add    BYTE PTR [rsi+0x0],ch
   140010a70:	je     0x140010a72
   140010a72:	imul   eax,DWORD PTR [rax],0x690066
   140010a78:	add    BYTE PTR gs:[rdx+0x0],dh
   140010a7c:	add    BYTE PTR [rax],al
   140010a7e:	add    BYTE PTR [rax],al
   140010a80:	jae    0x140010a82
   140010a82:	push   rsi
   140010a83:	add    BYTE PTR [rcx+0x0],ah
   140010a86:	ins    BYTE PTR es:[rdi],dx
   140010a87:	add    BYTE PTR [rbp+0x0],dh
   140010a8a:	add    BYTE PTR gs:[rsi+0x0],cl
   140010a8e:	(bad)  
   140010a8f:	add    BYTE PTR [rbp+0x0],ch
   140010a92:	add    BYTE PTR gs:[rax],al
   140010a95:	add    BYTE PTR [rax],al
   140010a97:	add    BYTE PTR [rax+0x0],ch
   140010a9a:	add    BYTE PTR [rbp+0x0],r12b
   140010a9e:	data16 add BYTE PTR [rbx+0x0],cl
   140010aa2:	add    BYTE PTR gs:[rcx+0x0],bh
   140010aa6:	add    BYTE PTR [rax],al
   140010aa8:	push   rdx
   140010aa9:	add    BYTE PTR [rbp+0x0],ah
   140010aac:	je     0x140010aae
   140010aae:	jne    0x140010ab0
   140010ab0:	jb     0x140010ab2
   140010ab2:	outs   dx,BYTE PTR ds:[rsi]
   140010ab3:	add    BYTE PTR [rsi+0x0],dl
   140010ab6:	(bad)  
   140010ab7:	add    BYTE PTR [rax+rax*1+0x75],ch
   140010abb:	add    BYTE PTR [rbp+0x0],ah
   140010abe:	add    BYTE PTR [rax],al
   140010ac0:	jae    0x140010ac2
   140010ac2:	push   rsi
   140010ac3:	add    BYTE PTR [rcx+0x0],ah
   140010ac6:	ins    BYTE PTR es:[rdi],dx
   140010ac7:	add    BYTE PTR [rbp+0x0],dh
   140010aca:	add    BYTE PTR gs:[rax],al
   140010acd:	add    BYTE PTR [rax],al
   140010acf:	add    BYTE PTR [rax+0x0],bh
   140010ad2:	cmp    BYTE PTR [rax],al
   140010ad4:	add    BYTE PTR ss:[rax],al
   140010ad7:	add    BYTE PTR [rax+rax*1+0x65],al
   140010adb:	add    BYTE PTR [rsi+0x0],dh
   140010ade:	imul   eax,DWORD PTR [rax],0x650063
   140010ae4:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   140010ae8:	ins    DWORD PTR es:[rdi],dx
   140010ae9:	add    BYTE PTR [rbp+0x0],ah
   140010aec:	add    BYTE PTR [rax],al
   140010aee:	add    BYTE PTR [rax],al
   140010af0:	rex.WB add BYTE PTR [r14+0x0],bpl
   140010af4:	data16 add BYTE PTR [rsi+0x0],cl
   140010af8:	(bad)  
   140010af9:	add    BYTE PTR [rbp+0x0],ch
   140010afc:	add    BYTE PTR gs:[rax],al
   140010aff:	add    BYTE PTR [rcx+0x0],cl
   140010b02:	jae    0x140010b04
   140010b04:	push   rbx
   140010b05:	add    BYTE PTR [rcx+0x0],ch
   140010b08:	add    BYTE PTR [esi+0x0],ch
   140010b0c:	add    BYTE PTR gs:[rax+rax*1+0x0],ah
   140010b11:	add    BYTE PTR [rax],al
   140010b13:	add    BYTE PTR [rax],al
   140010b15:	add    BYTE PTR [rax],al
   140010b17:	add    BYTE PTR [rbp+0x0],cl
   140010b1a:	(bad)  
   140010b1b:	add    BYTE PTR [rsi+0x0],ch
   140010b1e:	jne    0x140010b20
   140010b20:	data16 add BYTE PTR [rcx+0x0],ah
   140010b24:	movsxd eax,DWORD PTR [rax]
   140010b26:	je     0x140010b28
   140010b28:	jne    0x140010b2a
   140010b2a:	jb     0x140010b2c
   140010b2c:	add    BYTE PTR gs:[rdx+0x0],dh
	...
   140010b38:	rex.WB add BYTE PTR [r8+rax*1+0x69],al
   140010b3d:	add    BYTE PTR [rbx+0x0],dh
   140010b40:	jo     0x140010b42
   140010b42:	(bad)  
   140010b43:	add    BYTE PTR [rax+rax*1+0x63],dh
   140010b47:	add    BYTE PTR [rax+0x0],ch
   140010b4a:	and    BYTE PTR [rax],al
   140010b4c:	add    BYTE PTR gs:[rdx+0x0],dh
   140010b50:	jb     0x140010b52
   140010b52:	outs   dx,DWORD PTR ds:[rsi]
   140010b53:	add    BYTE PTR [rdx+0x0],dh
   140010b56:	and    BYTE PTR [rax],al
   140010b58:	and    eax,DWORD PTR [rax]
   140010b5a:	and    eax,0x6400
   140010b5f:	add    BYTE PTR [rbp+0x0],dl
   140010b62:	outs   dx,BYTE PTR ds:[rsi]
   140010b63:	add    BYTE PTR [rbx+0x0],ch
   140010b66:	outs   dx,BYTE PTR ds:[rsi]
   140010b67:	add    BYTE PTR [rdi+0x0],ch
   140010b6a:	ja     0x140010b6c
   140010b6c:	outs   dx,BYTE PTR ds:[rsi]
   140010b6d:	add    BYTE PTR [rax],ah
   140010b6f:	add    BYTE PTR [rbp+0x0],ah
   140010b72:	jb     0x140010b74
   140010b74:	jb     0x140010b76
   140010b76:	outs   dx,DWORD PTR ds:[rsi]
   140010b77:	add    BYTE PTR [rdx+0x0],dh
   140010b7a:	and    BYTE PTR [rax],al
   140010b7c:	xor    BYTE PTR [rax],al
   140010b7e:	js     0x140010b80
   140010b80:	and    eax,0x6c003000
   140010b85:	add    BYTE PTR [rax+0x0],bl
   140010b88:	add    BYTE PTR [rax],al
   140010b8a:	add    BYTE PTR [rax],al
   140010b8c:	add    BYTE PTR cs:[rax],al
   140010b8f:	add    BYTE PTR [rip+0x5c007300],ah        # 0x19c017e95
   140010b95:	add    BYTE PTR [rip+0x7300],ah        # 0x140017e9b
   140010b9b:	add    BYTE PTR [rax],al
   140010b9d:	add    BYTE PTR [rax],al
   140010b9f:	add    BYTE PTR [rdi],ch
   140010ba1:	add    BYTE PTR [rbx+0x0],bl
   140010ba4:	pop    rbp
   140010ba5:	add    BYTE PTR [rdx],bh
   140010ba7:	add    BYTE PTR [rax+rax*1+0x3c],bh
   140010bab:	add    BYTE PTR [rsi],bh
   140010bad:	add    BYTE PTR [rbx],ch
   140010baf:	add    BYTE PTR [rip+0x2c003b00],bh        # 0x16c0146b5
   140010bb5:	add    BYTE PTR [rdi],bh
   140010bb7:	add    BYTE PTR [rdx],ch
   140010bb9:	add    BYTE PTR [rax],al
   140010bbb:	add    BYTE PTR [rax],al
   140010bbd:	add    BYTE PTR [rax],al
   140010bbf:	add    BYTE PTR [rip+0x20007300],ah        # 0x160017ec5
   140010bc5:	add    BYTE PTR [rax],al
   140010bc7:	add    BYTE PTR [rax+rax*1+0x25],bh
   140010bcb:	add    BYTE PTR [rbx+0x0],dh
   140010bce:	jl     0x140010bd0
   140010bd0:	add    BYTE PTR [rax],al
   140010bd2:	add    BYTE PTR [rax],al
   140010bd4:	and    BYTE PTR [rax],al
   140010bd6:	or     DWORD PTR [rax],eax
   140010bd8:	add    BYTE PTR [rax],al
   140010bda:	add    BYTE PTR [rax],al
   140010bdc:	and    eax,0x25000073
   140010be1:	add    BYTE PTR [rbx+0x0],ah
   140010be4:	add    BYTE PTR [rax],al
   140010be6:	add    BYTE PTR [rax],al
   140010be8:	(bad)  
   140010be9:	add    BYTE PTR [rax],al
   140010beb:	add    BYTE PTR [rdx],cl
   140010bed:	add    BYTE PTR [rdx],cl
   140010bef:	add    BYTE PTR [rax],al
   140010bf1:	add    BYTE PTR [rax],al
   140010bf3:	add    BYTE PTR [rdx+0x55],al
   140010bf6:	rex.RX
   140010bf7:	rex.RX
   140010bf8:	rex.RB push r10
   140010bfa:	add    BYTE PTR [rax],al
   140010bfc:	add    BYTE PTR [rax],al
   140010bfe:	add    BYTE PTR [rax],al
   140010c00:	ins    BYTE PTR es:[rdi],dx
   140010c01:	add    BYTE PTR [rdi+0x0],ch
   140010c04:	movsxd eax,DWORD PTR [rax]
   140010c06:	(bad)  
   140010c07:	add    BYTE PTR [rax+rax*1+0x68],ch
   140010c0b:	add    BYTE PTR [rdi+0x0],ch
   140010c0e:	jae    0x140010c10
   140010c10:	je     0x140010c12
   140010c12:	add    BYTE PTR [rax],al
   140010c14:	add    BYTE PTR [rax],al
   140010c16:	add    BYTE PTR [rax],al
   140010c18:	and    BYTE PTR [rax],al
   140010c1a:	pop    rsp
   140010c1b:	add    BYTE PTR [rdi],ch
   140010c1d:	add    BYTE PTR [rbx+0x0],bl
   140010c20:	pop    rbp
   140010c21:	add    BYTE PTR [rdx],bh
   140010c23:	add    BYTE PTR [rax+rax*1+0x3c],bh
   140010c27:	add    BYTE PTR [rsi],bh
   140010c29:	add    BYTE PTR [rbx],ch
   140010c2b:	add    BYTE PTR [rip+0x2c003b00],bh        # 0x16c014731
   140010c31:	add    BYTE PTR [rdi],bh
   140010c33:	add    BYTE PTR [rax+rax*1],ah
   140010c36:	and    eax,DWORD PTR [rax]
   140010c38:	sub    BYTE PTR [rax],al
   140010c3a:	sub    DWORD PTR [rax],eax
   140010c3c:	and    DWORD PTR [rax],eax
   140010c3e:	add    BYTE PTR [rsi+0x0],bl
   140010c42:	and    al,BYTE PTR [rax]
   140010c44:	(bad)  
   140010c45:	add    BYTE PTR [rbx+0x0],bh
   140010c48:	jge    0x140010c4a
   140010c4a:	sub    al,BYTE PTR [rax]
   140010c4c:	and    eax,0x5c000000
   140010c51:	add    BYTE PTR [rax+rax*1+0x25],bl
   140010c55:	add    BYTE PTR [rbx+0x0],dh
	...
   140010c60:	rex.WB add BYTE PTR [r8+0x0],dl
   140010c64:	add    BYTE PTR [r8+r8*1],spl
	...
   140010c70:	pop    rsp
   140010c71:	add    BYTE PTR [rax+rax*1+0x25],bl
   140010c75:	add    BYTE PTR [rbx+0x0],dh
   140010c78:	pop    rsp
   140010c79:	add    BYTE PTR [rip+0x7300],ah        # 0x140017f7f
   140010c7f:	add    BYTE PTR [rip+0x64006c00],ah        # 0x1a4017885
   140010c85:	add    BYTE PTR [rax],al
   140010c87:	add    BYTE PTR [rip+0x75006c00],ah        # 0x1b501788d
   140010c8d:	add    BYTE PTR [rax],al
   140010c8f:	add    BYTE PTR [rip+0x6600],ah        # 0x140017295
   140010c95:	add    BYTE PTR [rax],al
   140010c97:	add    BYTE PTR [rip+0x7300],ah        # 0x140017f9d
   140010c9d:	add    BYTE PTR [rax],al
   140010c9f:	add    BYTE PTR [rip+0x6400],ah        # 0x1400170a5
   140010ca5:	add    BYTE PTR [rax],al
   140010ca7:	add    BYTE PTR [rip+0x2c000000],bh        # 0x16c010cad
   140010cad:	add    BYTE PTR [rax],ah
	...
   140010cb7:	add    BYTE PTR [rip+0x3a007300],ah        # 0x17a017fbd
   140010cbd:	add    BYTE PTR [rax],al
   140010cbf:	add    BYTE PTR [rax+rax*1],ch
   140010cc2:	add    BYTE PTR [rax],al
   140010cc4:	add    BYTE PTR [rax],al
   140010cc6:	add    BYTE PTR [rax],al
   140010cc8:	and    al,BYTE PTR [rax]
   140010cca:	and    eax,0x22007300
   140010ccf:	add    BYTE PTR [rax],al
   140010cd1:	add    BYTE PTR [rax],al
   140010cd3:	add    BYTE PTR [rdx],ah
   140010cd5:	add    BYTE PTR [rax],al
   140010cd7:	add    BYTE PTR [rax+rax*1+0x56],bl
   140010cdb:	add    BYTE PTR [rcx+0x0],ah
   140010cde:	jb     0x140010ce0
   140010ce0:	rex.RX add BYTE PTR [rcx+0x0],r13b
   140010ce4:	ins    BYTE PTR es:[rdi],dx
   140010ce5:	add    BYTE PTR [rbp+0x0],ah
   140010ce8:	rex.WB add BYTE PTR [r14+0x0],bpl
   140010cec:	data16 add BYTE PTR [rdi+0x0],ch
   140010cf0:	pop    rsp
   140010cf1:	add    BYTE PTR [rax+rax*1+0x72],dl
   140010cf5:	add    BYTE PTR [rcx+0x0],ah
   140010cf8:	outs   dx,BYTE PTR ds:[rsi]
   140010cf9:	add    BYTE PTR [rbx+0x0],dh
   140010cfc:	ins    BYTE PTR es:[rdi],dx
   140010cfd:	add    BYTE PTR [rcx+0x0],ah
   140010d00:	je     0x140010d02
   140010d02:	imul   eax,DWORD PTR [rax],0x6e006f
	...
   140010d10:	pop    rsp
   140010d11:	add    BYTE PTR [rbx+0x0],dl
   140010d14:	je     0x140010d16
   140010d16:	jb     0x140010d18
   140010d18:	imul   eax,DWORD PTR [rax],0x67006e
   140010d1e:	rex.RX add BYTE PTR [rcx+0x0],r13b
   140010d22:	ins    BYTE PTR es:[rdi],dx
   140010d23:	add    BYTE PTR [rbp+0x0],ah
   140010d26:	rex.WB add BYTE PTR [r14+0x0],bpl
   140010d2a:	data16 add BYTE PTR [rdi+0x0],ch
   140010d2e:	pop    rsp
   140010d2f:	add    BYTE PTR [rip+0x34003000],ah        # 0x174013d35
   140010d35:	add    BYTE PTR [rax+0x0],bh
   140010d38:	and    eax,0x34003000
   140010d3d:	add    BYTE PTR [rax+0x0],bh
   140010d40:	pop    rsp
   140010d41:	add    BYTE PTR [rcx+0x0],cl
   140010d44:	outs   dx,BYTE PTR ds:[rsi]
   140010d45:	add    BYTE PTR [rax+rax*1+0x65],dh
   140010d49:	add    BYTE PTR [rdx+0x0],dh
   140010d4c:	outs   dx,BYTE PTR ds:[rsi]
   140010d4d:	add    BYTE PTR [rcx+0x0],ah
   140010d50:	ins    BYTE PTR es:[rdi],dx
   140010d51:	add    BYTE PTR [rsi+0x0],cl
   140010d54:	(bad)  
   140010d55:	add    BYTE PTR [rbp+0x0],ch
   140010d58:	add    BYTE PTR gs:[rax],al
   140010d5b:	add    BYTE PTR [rax],al
   140010d5d:	add    BYTE PTR [rax],al
   140010d5f:	add    BYTE PTR [rsi],ch
   140010d61:	add    BYTE PTR [rbp+0x0],al
   140010d64:	pop    rax
   140010d65:	add    BYTE PTR [rbp+0x0],al
	...
   140010d70:	and    eax,0x20007300
   140010d75:	add    BYTE PTR [rip+0x7300],ah        # 0x14001807b
   140010d7b:	add    BYTE PTR [rax],al
   140010d7d:	add    BYTE PTR [rax],al
   140010d7f:	add    BYTE PTR [rax+0x41],dl
   140010d82:	push   rdx
   140010d83:	push   rbx
   140010d84:	rex.RB push r10
   140010d86:	xor    al,BYTE PTR [rax]
   140010d88:	sub    eax,0x2f00
   140010d8d:	add    BYTE PTR [rax],al
   140010d8f:	add    BYTE PTR [rip+0x1],bh        # 0x140010d96
   140010d95:	add    BYTE PTR [rax],al
   140010d97:	add    al,al
   140010d99:	add    BYTE PTR [rax],al
   140010d9b:	add    BYTE PTR [rax],al
   140010d9d:	add    BYTE PTR [rax],al
   140010d9f:	rex.RX add BYTE PTR [rax],r8b
   140010da2:	add    BYTE PTR [rax],al
   140010da4:	add    BYTE PTR [rax],al
   140010da6:	add    BYTE PTR [rax],al
   140010da8:	rol    BYTE PTR [rax],0x0
   140010dab:	add    BYTE PTR [rax],al
   140010dad:	add    BYTE PTR [rax],al
   140010daf:	rex.RX adc eax,r15d
   140010db2:	nop
   140010db3:	cmp    r11b,BYTE PTR [rip+0x1f8911d0]        # 0x15f8a1f8a
   140010dba:	add    BYTE PTR [rdx+0x242e4b00],ch
   140010dc0:	xchg   DWORD PTR [rsi+0x737fdc12],esp
   140010dc6:	iret   
   140010dc7:	adc    DWORD PTR [rax+0xaa004d],ecx
   140010dcd:	rex.WXB
   140010dce:	cs and al,0xbd
   140010dd1:	loope  0x140010d5a
   140010dd3:	jmp    0x140010e08
   140010dd5:	xor    dl,dl
   140010dd7:	adc    DWORD PTR [rsi+0x4fc000c9],ebp
   140010ddd:	mov    dh,0x88
   140010ddf:	and    BYTE PTR [rcx+riz*8+0x3233eb87],bh
   140010de6:	rcl    BYTE PTR [rcx],cl
   140010de8:	scas   al,BYTE PTR es:[rdi]
   140010de9:	leave  
   140010dea:	add    al,al
   140010dec:	rex.WRXB mov r14b,0x88
   140010def:	and    BYTE PTR [rax],al
   140010df1:	add    BYTE PTR [rax+0xbf],al
   140010df7:	add    BYTE PTR [rax],al
   140010df9:	add    BYTE PTR [rax],al
   140010dfb:	add    BYTE PTR [rax],al
   140010dfd:	add    al,dh
   140010dff:	mov    edi,0x19930522
   140010e04:	(bad)  
   140010e05:	add    BYTE PTR [rax],al
   140010e07:	add    ah,dh
   140010e09:	and    BYTE PTR [rcx],al
   140010e0b:	add    BYTE PTR [rcx],al
   140010e0d:	add    BYTE PTR [rax],al
   140010e0f:	add    BYTE PTR [rcx+riz*1],ch
   140010e12:	add    DWORD PTR [rax],eax
   140010e14:	sbb    al,0x0
   140010e16:	add    BYTE PTR [rax],al
   140010e18:	(bad)  
   140010e19:	and    DWORD PTR [rcx],eax
   140010e1b:	add    BYTE PTR [rax+0x0],dh
   140010e21:	add    BYTE PTR [rax],al
   140010e23:	add    BYTE PTR [rax],al
   140010e25:	add    BYTE PTR [rax],al
   140010e27:	add    BYTE PTR [rdx],ah
   140010e29:	add    eax,0x21993
   140010e2e:	add    BYTE PTR [rax],al
   140010e30:	cwde   
   140010e31:	and    BYTE PTR [rcx],al
	...
   140010e3b:	add    BYTE PTR [rip+0xffffffffa8000000],al        # 0xe8010e41
   140010e41:	and    BYTE PTR [rcx],al
   140010e43:	add    BYTE PTR [rax],dh
	...
   140010e4d:	add    BYTE PTR [rax],al
   140010e4f:	add    BYTE PTR [rdx],ah
   140010e51:	add    eax,0x21993
   140010e56:	add    BYTE PTR [rax],al
   140010e58:	cld    
   140010e59:	(bad)  
   140010e5a:	add    DWORD PTR [rax],eax
   140010e5c:	add    DWORD PTR [rax],eax
   140010e5e:	add    BYTE PTR [rax],al
   140010e60:	or     al,0x20
   140010e62:	add    DWORD PTR [rax],eax
   140010e64:	(bad)  
   140010e65:	add    BYTE PTR [rax],al
   140010e67:	add    BYTE PTR [rax],bh
   140010e69:	and    BYTE PTR [rcx],al
   140010e6b:	add    BYTE PTR [rax+0x0],dl
	...
   140010e76:	add    BYTE PTR [rax],al
   140010e78:	and    al,BYTE PTR [rip+0x71993]        # 0x140082811
   140010e7e:	add    BYTE PTR [rax],al
   140010e80:	cwde   
   140010e81:	(bad)  
   140010e82:	add    DWORD PTR [rax],eax
   140010e84:	add    DWORD PTR [rax],eax
   140010e86:	add    BYTE PTR [rax],al
   140010e88:	rcr    BYTE PTR [rsi],1
   140010e8a:	add    DWORD PTR [rax],eax
   140010e8c:	sbb    eax,DWORD PTR [rax]
   140010e8e:	add    BYTE PTR [rax],al
   140010e90:	add    BYTE PTR [rdi],bl
   140010e92:	add    DWORD PTR [rax],eax
   140010e94:	clc    
	...
   140010e9d:	add    BYTE PTR [rax],al
   140010e9f:	add    BYTE PTR [rdx],ah
   140010ea1:	add    eax,0x121993
   140010ea6:	add    BYTE PTR [rax],al
   140010ea8:	test   al,0x19
   140010eaa:	add    DWORD PTR [rax],eax
   140010eac:	add    al,BYTE PTR [rax]
   140010eae:	add    BYTE PTR [rax],al
   140010eb0:	cmp    BYTE PTR [rdx],bl
   140010eb2:	add    DWORD PTR [rax],eax
   140010eb4:	push   0xffffffff90000000
   140010eb9:	sbb    al,BYTE PTR [rcx]
   140010ebb:	add    BYTE PTR [rax+0x1],dh
	...
   140010ec6:	add    BYTE PTR [rax],al
   140010ec8:	and    al,BYTE PTR [rip+0x131993]        # 0x140142861
   140010ece:	add    BYTE PTR [rax],al
   140010ed0:	adc    al,0x17
   140010ed2:	add    DWORD PTR [rax],eax
   140010ed4:	add    al,BYTE PTR [rax]
   140010ed6:	add    BYTE PTR [rax],al
   140010ed8:	lods   al,BYTE PTR ds:[rsi]
   140010ed9:	(bad)  
   140010eda:	add    DWORD PTR [rax],eax
   140010edc:	add    BYTE PTR cs:[rax],al
   140010edf:	add    BYTE PTR [rax],al
   140010ee1:	sbb    BYTE PTR [rcx],al
   140010ee3:	add    BYTE PTR [rax+0x0],dh
   140010ee9:	add    BYTE PTR [rax],al
   140010eeb:	add    BYTE PTR [rax],al
   140010eed:	add    BYTE PTR [rax],al
   140010eef:	add    BYTE PTR [rdx],ah
   140010ef1:	add    eax,0x51993
   140010ef6:	add    BYTE PTR [rax],al
   140010ef8:	loopne 0x140010f0f
   140010efa:	add    DWORD PTR [rax],eax
   140010efc:	add    DWORD PTR [rax],eax
   140010efe:	add    BYTE PTR [rax],al
   140010f00:	or     BYTE PTR [rsi],dl
   140010f02:	add    DWORD PTR [rax],eax
   140010f04:	(bad)  
   140010f05:	add    BYTE PTR [rax],al
   140010f07:	add    BYTE PTR [rax],dh
   140010f09:	(bad)  
   140010f0a:	add    DWORD PTR [rax],eax
   140010f0c:	enter  0x0,0x0
	...
   140010f18:	and    al,BYTE PTR [rip+0x11993]        # 0x1400228b1
   140010f1e:	add    BYTE PTR [rax],al
   140010f20:	cwde   
   140010f21:	adc    eax,0x1
   140010f26:	add    BYTE PTR [rax],al
   140010f28:	add    BYTE PTR [rax],al
   140010f2a:	add    BYTE PTR [rax],al
   140010f2c:	add    eax,DWORD PTR [rax]
   140010f2e:	add    BYTE PTR [rax],al
   140010f30:	movabs al,ds:0x20000115
   140010f39:	add    BYTE PTR [rax],al
   140010f3b:	add    BYTE PTR [rax],al
   140010f3d:	add    BYTE PTR [rax],al
   140010f3f:	add    BYTE PTR [rdx],ah
   140010f41:	add    eax,0x11993
   140010f46:	add    BYTE PTR [rax],al
   140010f48:	rex.R adc eax,0x1
   140010f4e:	add    BYTE PTR [rax],al
   140010f50:	add    BYTE PTR [rax],al
   140010f52:	add    BYTE PTR [rax],al
   140010f54:	add    al,BYTE PTR [rax]
   140010f56:	add    BYTE PTR [rax],al
   140010f58:	push   rax
   140010f59:	adc    eax,0x280001
	...
   140010f66:	add    BYTE PTR [rax],al
   140010f68:	and    al,BYTE PTR [rip+0x11993]        # 0x140022901
   140010f6e:	add    BYTE PTR [rax],al
   140010f70:	adc    BYTE PTR [rip+0x1],dl        # 0x140010f77
   140010f76:	add    BYTE PTR [rax],al
   140010f78:	add    BYTE PTR [rax],al
   140010f7a:	add    BYTE PTR [rax],al
   140010f7c:	add    al,BYTE PTR [rax]
   140010f7e:	add    BYTE PTR [rax],al
   140010f80:	sbb    BYTE PTR [rip+0x280001],dl        # 0x140290f87
	...
   140010f8e:	add    BYTE PTR [rax],al
   140010f90:	and    al,BYTE PTR [rip+0x11993]        # 0x140022929
   140010f96:	add    BYTE PTR [rax],al
   140010f98:	lods   al,BYTE PTR ds:[rsi]
   140010f99:	adc    al,0x1
	...
   140010fa3:	add    BYTE PTR [rbx],al
   140010fa5:	add    BYTE PTR [rax],al
   140010fa7:	add    al,ch
   140010fa9:	adc    al,0x1
   140010fab:	add    BYTE PTR [rax],ah
	...
   140010fb5:	add    BYTE PTR [rax],al
   140010fb7:	add    BYTE PTR [rdx],ah
   140010fb9:	add    eax,0x11993
   140010fbe:	add    BYTE PTR [rax],al
   140010fc0:	lods   al,BYTE PTR ds:[rsi]
   140010fc1:	adc    al,0x1
	...
   140010fcb:	add    BYTE PTR [rbx],al
   140010fcd:	add    BYTE PTR [rax],al
   140010fcf:	add    BYTE PTR [rax+0x20000114],bh
	...
   140010fdd:	add    BYTE PTR [rax],al
   140010fdf:	add    BYTE PTR [rdx],ah
   140010fe1:	add    eax,0x11993
   140010fe6:	add    BYTE PTR [rax],al
   140010fe8:	pop    rax
   140010fe9:	adc    al,0x1
	...
   140010ff3:	add    BYTE PTR [rbx],al
   140010ff5:	add    BYTE PTR [rax],al
   140010ff7:	add    BYTE PTR [rax+0x14],ah
   140010ffa:	add    DWORD PTR [rax],eax
   140010ffc:	and    BYTE PTR [rax],al
	...
   140011006:	add    BYTE PTR [rax],al
   140011008:	and    al,BYTE PTR [rip+0x41993]        # 0x1400529a1
   14001100e:	add    BYTE PTR [rax],al
   140011010:	loopne 0x140011038
   140011012:	add    DWORD PTR [rax],eax
	...
   14001101c:	or     DWORD PTR [rax],eax
   14001101e:	add    BYTE PTR [rax],al
   140011020:	add    BYTE PTR [rdi],ah
   140011022:	add    DWORD PTR [rax],eax
   140011024:	rex.W add BYTE PTR [rax],al
	...
   14001102f:	add    BYTE PTR [rdx],ah
   140011031:	add    eax,0x31993
   140011036:	add    BYTE PTR [rax],al
   140011038:	and    al,0x26
   14001103a:	add    DWORD PTR [rax],eax
   14001103c:	add    DWORD PTR [rax],eax
   14001103e:	add    BYTE PTR [rax],al
   140011040:	cmp    al,0x26
   140011042:	add    DWORD PTR [rax],eax
   140011044:	or     BYTE PTR [rax],al
   140011046:	add    BYTE PTR [rax],al
   140011048:	jo     0x140011070
   14001104a:	add    DWORD PTR [rax],eax
   14001104c:	and    BYTE PTR [rax],al
	...
   140011056:	add    BYTE PTR [rax],al
   140011058:	and    al,BYTE PTR [rip+0x101993]        # 0x1401129f1
   14001105e:	add    BYTE PTR [rax],al
   140011060:	call   0x141011187
   140011065:	add    BYTE PTR [rax],al
   140011067:	add    BYTE PTR [rax+0x23],ch
   14001106a:	add    DWORD PTR [rax],eax
   14001106c:	and    eax,0x90000000
   140011071:	and    eax,DWORD PTR [rcx]
   140011073:	add    BYTE PTR [rax+0x0],ah
   140011079:	add    BYTE PTR [rax],al
   14001107b:	add    BYTE PTR [rax],al
   14001107d:	add    BYTE PTR [rax],al
   14001107f:	add    BYTE PTR [rdx],ah
   140011081:	add    eax,0x21993
   140011086:	add    BYTE PTR [rax],al
   140011088:	nop
   140011089:	and    al,BYTE PTR [rcx]
	...
   140011093:	add    BYTE PTR [rip+0xffffffffa0000000],al        # 0xe0011099
   140011099:	and    al,BYTE PTR [rcx]
   14001109b:	add    BYTE PTR [rax],ah
	...
   1400110a5:	add    BYTE PTR [rax],al
   1400110a7:	add    BYTE PTR [rdx],ah
   1400110a9:	add    eax,0x71993
   1400110ae:	add    BYTE PTR [rax],al
   1400110b0:	(bad)  
   1400110b1:	(bad)  
   1400110b2:	add    DWORD PTR [rax],eax
   1400110b4:	add    al,BYTE PTR [rax]
   1400110b6:	add    BYTE PTR [rax],al
   1400110b8:	cwde   
   1400110b9:	(bad)  
   1400110ba:	add    DWORD PTR [rax],eax
   1400110bc:	adc    DWORD PTR [rax],eax
   1400110be:	add    BYTE PTR [rax],al
   1400110c0:	lock (bad) 
   1400110c2:	add    DWORD PTR [rax],eax
   1400110c4:	add    BYTE PTR [rax],al
	...
   1400110cf:	add    BYTE PTR [rdx],ah
   1400110d1:	add    eax,0x51993
   1400110d6:	add    BYTE PTR [rax],al
   1400110d8:	in     al,dx
   1400110d9:	and    al,0x1
   1400110db:	add    BYTE PTR [rdx],al
   1400110dd:	add    BYTE PTR [rax],al
   1400110df:	add    BYTE PTR ds:0xe0001,dl
   1400110e6:	add    BYTE PTR [rax],al
   1400110e8:	jo     0x14001110f
   1400110ea:	add    DWORD PTR [rax],eax
   1400110ec:	cwde   
	...
   140011101:	add    BYTE PTR [rax],al
   140011103:	add    BYTE PTR [rcx+0x559f38],bl
   140011109:	add    BYTE PTR [rax],al
   14001110b:	add    BYTE PTR [rdx],al
   14001110d:	add    BYTE PTR [rax],al
   14001110f:	add    BYTE PTR [rbx],ah
   140011111:	add    BYTE PTR [rax],al
   140011113:	add    BYTE PTR [rax],al
   140011115:	adc    al,BYTE PTR [rcx]
   140011117:	add    BYTE PTR [rax],al
   140011119:	inc    BYTE PTR [rax]
   14001111b:	add    BYTE PTR [rax],al
   14001111d:	add    BYTE PTR [rax],al
   14001111f:	add    BYTE PTR [rcx+0x559f38],bl
   140011125:	add    BYTE PTR [rax],al
   140011127:	add    BYTE PTR [rip+0x4000000],cl        # 0x14401112d
   14001112d:	add    al,BYTE PTR [rax]
   14001112f:	add    BYTE PTR [rax],bh
   140011131:	adc    al,BYTE PTR [rcx]
   140011133:	add    BYTE PTR [rax],bh
   140011135:	inc    BYTE PTR [rax]
	...
   14001115f:	add    BYTE PTR [rax+0x0],ah
	...
   1400111b5:	add    BYTE PTR [rax],al
   1400111b7:	add    BYTE PTR [rax],cl
   1400111b9:	push   rax
   1400111ba:	add    DWORD PTR [rax+0x1],eax
	...
   1400111cd:	add    BYTE PTR [rax],al
   1400111cf:	add    BYTE PTR [rax+0x1400105],cl
   1400111d5:	add    BYTE PTR [rax],al
   1400111d7:	add    BYTE PTR [rax+0x1400105],dl
   1400111dd:	add    BYTE PTR [rax],al
   1400111df:	add    al,dl
   1400111e1:	add    eax,0x14001
   1400111e6:	add    BYTE PTR [rax],al
   1400111e8:	or     al,BYTE PTR [rax]
   1400111ea:	add    BYTE PTR [rax],al
   1400111ec:	add    BYTE PTR [rax],al
   1400111ee:	add    BYTE PTR [rax],al
   1400111f0:	add    BYTE PTR [rip+0x0],dh        # 0x1400111f6
	...
   1400111fe:	add    BYTE PTR [rax],al
   140011200:	push   rdx
   140011201:	push   rbx
   140011202:	rex.R push rbx
   140011204:	pushf  
   140011205:	adc    dl,BYTE PTR [rcx]
   140011207:	repz xchg edx,eax
   140011209:	(bad)  
   14001120a:	mov    ebx,0x7e90a545
   14001120f:	mov    bl,0x6f
   140011211:	lea    ebx,[rdi+0x1f3]
   140011217:	add    BYTE PTR [rdx+rsi*2+0x76],ah
   14001121b:	jno    0x14001128f
   14001121d:	jns    0x14001124d
   14001121f:	jo     0x140011285
   140011221:	(bad)  
	...
   140011236:	add    BYTE PTR [rax],al
   140011238:	rex.RXB
   140011239:	rex.XB push r12
   14001123b:	rex.WR add BYTE PTR [rax],r10b
   14001123e:	add    BYTE PTR [rax],al
   140011240:	pop    rax
   140011241:	fld    QWORD PTR [rax]
   140011243:	add    BYTE PTR [rsi],ch
   140011245:	je     0x1400112ac
   140011247:	js     0x1400112bd
   140011249:	and    al,0x6d
   14001124b:	outs   dx,BYTE PTR ds:[rsi]
   14001124c:	add    BYTE PTR [rax],al
   14001124e:	add    BYTE PTR [rax],al
   140011250:	(bad)  
   140011251:	in     eax,dx
   140011252:	add    BYTE PTR [rax],al
   140011254:	jge    0x140011256
   140011256:	add    BYTE PTR [rax],al
   140011258:	cs je  0x1400112c0
   14001125b:	js     0x1400112d1
   14001125d:	and    al,0x6d
   14001125f:	outs   dx,BYTE PTR ds:[rsi]
   140011260:	and    al,0x30
   140011262:	xor    BYTE PTR [rax],al
   140011264:	loopne 0x140011253
   140011266:	add    BYTE PTR [rax],al
   140011268:	loopne 0x140011273
   14001126a:	add    BYTE PTR [rax],al
   14001126c:	cs je  0x1400112d4
   14001126f:	js     0x1400112e5
   140011271:	and    al,0x78
   140011273:	add    BYTE PTR [rax],al
   140011275:	add    BYTE PTR [rcx],al
   140011277:	add    BYTE PTR [rax+0x2e000005],cl
   14001127d:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x352461
   140011285:	add    BYTE PTR [rax],al
   140011287:	add    BYTE PTR [rax+0x10000105],cl
   14001128d:	add    BYTE PTR [rax],al
   14001128f:	add    BYTE PTR [rsi],ch
   140011291:	xor    BYTE PTR [rax],dh
   140011293:	movsxd esp,DWORD PTR [rsi+0x67]
   140011296:	add    BYTE PTR [rax],al
   140011298:	cwde   
   140011299:	add    eax,0x80001
   14001129e:	add    BYTE PTR [rax],al
   1400112a0:	cs rex.XB push r10
   1400112a3:	push   rsp
   1400112a4:	and    al,0x58
   1400112a6:	rex.XB
   1400112a7:	add    BYTE PTR [r8],al
   1400112aa:	add    BYTE PTR [rax],al
   1400112ac:	movabs al,ds:0x2e00000008000105
   1400112b5:	rex.XB push r10
   1400112b7:	push   rsp
   1400112b8:	and    al,0x58
   1400112ba:	rex.XB
   1400112bb:	rex.B
   1400112bc:	add    BYTE PTR [r8],al
   1400112bf:	add    BYTE PTR [rax+0x8000105],ch
   1400112c5:	add    BYTE PTR [rax],al
   1400112c7:	add    BYTE PTR [rsi],ch
   1400112c9:	rex.XB push r10
   1400112cb:	push   rsp
   1400112cc:	and    al,0x58
   1400112ce:	rex.XB pop r10
   1400112d0:	add    BYTE PTR [rax],al
   1400112d2:	add    BYTE PTR [rax],al
   1400112d4:	mov    al,0x5
   1400112d6:	add    DWORD PTR [rax],eax
   1400112d8:	or     BYTE PTR [rax],al
   1400112da:	add    BYTE PTR [rax],al
   1400112dc:	cs rex.XB push r10
   1400112df:	push   rsp
   1400112e0:	and    al,0x58
   1400112e2:	rex.WB
   1400112e3:	add    BYTE PTR [r8],al
   1400112e6:	add    BYTE PTR [rax],al
   1400112e8:	mov    eax,0x8000105
   1400112ed:	add    BYTE PTR [rax],al
   1400112ef:	add    BYTE PTR [rsi],ch
   1400112f1:	rex.XB push r10
   1400112f3:	push   rsp
   1400112f4:	and    al,0x58
   1400112f6:	rex.WB
   1400112f7:	rex.B
   1400112f8:	add    BYTE PTR [r8],al
   1400112fb:	add    al,al
   1400112fd:	add    eax,0x80001
   140011302:	add    BYTE PTR [rax],al
   140011304:	cs rex.XB push r10
   140011307:	push   rsp
   140011308:	and    al,0x58
   14001130a:	rex.WB pop r9
   14001130c:	add    BYTE PTR [rax],al
   14001130e:	add    BYTE PTR [rax],al
   140011310:	enter  0x105,0x0
   140011314:	or     BYTE PTR [rax],al
   140011316:	add    BYTE PTR [rax],al
   140011318:	cs rex.XB push r10
   14001131b:	push   rsp
   14001131c:	and    al,0x58
   14001131e:	rex.WB pop r10
   140011320:	add    BYTE PTR [rax],al
   140011322:	add    BYTE PTR [rax],al
   140011324:	rol    BYTE PTR [rip+0x280001],1        # 0x14029132b
   14001132a:	add    BYTE PTR [rax],al
   14001132c:	imul   sp,WORD PTR cs:[ebx+esi*2+0x24],0x78
   140011335:	add    BYTE PTR [rax],al
   140011337:	add    BYTE PTR [rax],al
   140011339:	(bad)  
   14001133a:	add    DWORD PTR [rax],eax
   14001133c:	add    BYTE PTR [rax+rax*1],cl
   14001133f:	add    BYTE PTR [rsi],ch
   140011341:	jb     0x1400113a7
   140011343:	(bad)  
   140011344:	je     0x1400113a7
   140011346:	add    BYTE PTR [rax],al
   140011348:	add    BYTE PTR [rdx],dl
   14001134a:	add    DWORD PTR [rax],eax
   14001134c:	cmp    al,0x2
   14001134e:	add    BYTE PTR [rax],al
   140011350:	cs jb  0x1400113b7
   140011353:	(bad)  
   140011354:	je     0x1400113b7
   140011356:	and    al,0x7a
   140011358:	jp     0x1400113d4
   14001135a:	fs (bad) 
   14001135c:	add    BYTE PTR [eax],al
   14001135f:	add    BYTE PTR [rax+0x14],al
   140011362:	add    DWORD PTR [rax],eax
   140011364:	movabs al,ds:0x746164782e000018
   14001136d:	(bad)  
   14001136e:	add    BYTE PTR [rax],al
   140011370:	loopne 0x14001139e
   140011372:	add    DWORD PTR [rax],eax
   140011374:	push   rsp
   140011375:	add    BYTE PTR [rax],al
   140011377:	add    BYTE PTR [rsi],ch
   140011379:	js     0x1400113df
   14001137b:	(bad)  
   14001137c:	je     0x1400113df
   14001137e:	and    al,0x78
   140011380:	add    BYTE PTR [rax],al
   140011382:	add    BYTE PTR [rax],al
   140011384:	xor    al,0x2d
   140011386:	add    DWORD PTR [rax],eax
   140011388:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140011389:	add    DWORD PTR [rax],eax
   14001138b:	add    BYTE PTR [rsi],ch
   14001138d:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x322461
   140011395:	add    BYTE PTR [rax],al
   140011397:	add    al,bl
   140011399:	add    DWORD PTR cs:[rax],eax
   14001139c:	adc    al,0x0
   14001139e:	add    BYTE PTR [rax],al
   1400113a0:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x332461
   1400113a9:	add    BYTE PTR [rax],al
   1400113ab:	add    al,dh
   1400113ad:	add    DWORD PTR cs:[rax],eax
   1400113b0:	mov    BYTE PTR [rip+0x692e0000],al        # 0x1a92f13b6
   1400113b6:	fs (bad) 
   1400113b8:	je     0x14001141b
   1400113ba:	and    al,0x34
   1400113bc:	add    BYTE PTR [rax],al
   1400113be:	add    BYTE PTR [rax],al
   1400113c0:	js     0x1400113f6
   1400113c2:	add    DWORD PTR [rax],eax
   1400113c4:	adc    cl,BYTE PTR [rax+rax*1]
   1400113c7:	add    BYTE PTR [rsi],ch
   1400113c9:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x362461
   1400113d1:	add    BYTE PTR [rax],al
   1400113d3:	add    BYTE PTR [rax],al
   1400113d5:	push   rax
   1400113d6:	add    DWORD PTR [rax],eax
   1400113d8:	and    BYTE PTR [rax],al
   1400113da:	add    BYTE PTR [rax],al
   1400113dc:	cs fs (bad) 
   1400113df:	je     0x140011442
   1400113e1:	add    BYTE PTR [rax],al
   1400113e3:	add    BYTE PTR [rax],ah
   1400113e5:	push   rax
   1400113e6:	add    DWORD PTR [rax],eax
   1400113e8:	rex.WRX add BYTE PTR [rax],r8b
   1400113eb:	add    BYTE PTR [rsi],ch
   1400113ed:	fs (bad) 
   1400113ef:	je     0x140011452
   1400113f1:	and    al,0x72
   1400113f3:	add    BYTE PTR [rax+0x50],dh
   1400113f6:	add    DWORD PTR [rax],eax
   1400113f8:	add    al,0x7
   1400113fa:	add    BYTE PTR [rax],al
   1400113fc:	cs (bad) 
   1400113ff:	jae    0x140011401
   140011401:	add    BYTE PTR [rax],al
   140011403:	add    BYTE PTR [rax],al
   140011405:	(bad)  
   140011406:	add    DWORD PTR [rax],eax
   140011408:	mov    al,0x7
   14001140a:	add    BYTE PTR [rax],al
   14001140c:	cs jo  0x140011473
   14001140f:	(bad)  
   140011410:	je     0x140011473
   140011412:	add    BYTE PTR [rax],al
   140011414:	add    BYTE PTR [rax+0x1],dh
   140011417:	add    al,dh
   140011419:	add    BYTE PTR [rax],al
   14001141b:	add    BYTE PTR [rsi],ch
   14001141d:	jb     0x140011492
   14001141f:	jb     0x140011484
   140011421:	and    al,0x30
   140011423:	xor    DWORD PTR [rax],eax
   140011425:	add    BYTE PTR [rax],al
   140011427:	add    al,dh
   140011429:	jo     0x14001142c
   14001142b:	add    BYTE PTR [rax],dh
   14001142d:	(bad)  
   14001142e:	add    BYTE PTR [rax],al
   140011430:	cs jb  0x1400114a6
   140011433:	jb     0x140011498
   140011435:	and    al,0x30
   140011437:	xor    al,BYTE PTR [rax]
   140011439:	add    BYTE PTR [rax],al
   14001143b:	add    BYTE PTR [rax],al
   14001143d:	add    BYTE PTR [rax],al
   14001143f:	add    BYTE PTR [rcx],dl
   140011441:	sbb    DWORD PTR [rsi],eax
   140011443:	add    BYTE PTR [rcx],bl
   140011445:	or     DWORD PTR fs:[rax],eax
   140011448:	adc    al,0x34
   14001144a:	or     BYTE PTR [rax],al
   14001144c:	(bad)  
   14001144d:	push   rdx
   14001144e:	add    dh,BYTE PTR [rax+0x14]
   140011451:	in     al,dx
   140011452:	add    BYTE PTR [rax],al
   140011454:	loopne 0x140011465
   140011456:	add    DWORD PTR [rax],eax
   140011458:	(bad)  
   140011459:	(bad)  
   14001145a:	(bad)  
   14001145b:	jmp    rsi
   14001145d:	in     eax,dx
   14001145e:	add    BYTE PTR [rax],al
   140011460:	or     BYTE PTR [rax],dl
   140011462:	add    BYTE PTR [rax],al
   140011464:	(bad)  
   140011465:	(bad)  
   140011466:	(bad)  
   140011467:	(bad)  
   140011468:	cmp    DWORD PTR [rax],edx
   14001146a:	add    BYTE PTR [rax],al
   14001146c:	add    BYTE PTR [rax],al
   14001146e:	add    BYTE PTR [rax],al
   140011470:	ins    DWORD PTR es:[rdi],dx
   140011471:	adc    BYTE PTR [rax],al
   140011473:	add    bh,bh
   140011475:	(bad)  
   140011476:	(bad)  
   140011477:	inc    DWORD PTR [rcx]
   140011479:	or     al,BYTE PTR [rax+rax*1]
   14001147c:	or     dh,BYTE PTR [rdi+rax*1]
   14001147f:	add    BYTE PTR [rdx],cl
   140011481:	xor    al,BYTE PTR [rsi]
   140011483:	jo     0x140011486
   140011485:	clts   
   140011487:	add    BYTE PTR [rdi],cl
   140011489:	or     BYTE PTR fs:[rax],al
   14001148c:	sysenter 
   14001148e:	(bad)  
   14001148f:	add    BYTE PTR [rdi],cl
   140011491:	xor    cl,BYTE PTR [rbx]
   140011493:	jo     0x1400114a6
   140011495:	sbb    DWORD PTR [rsi],eax
   140011497:	add    BYTE PTR [rcx],bl
   140011499:	or     al,BYTE PTR fs:[rax]
   14001149c:	adc    al,0x34
   14001149e:	or     DWORD PTR [rax],eax
   1400114a0:	(bad)  
   1400114a1:	push   rdx
   1400114a2:	add    dh,BYTE PTR [rax+0x14]
   1400114a5:	in     al,dx
   1400114a6:	add    BYTE PTR [rax],al
   1400114a8:	mov    eax,0xff00010f
   1400114ad:	(bad)  
   1400114ae:	(bad)  
   1400114af:	(bad)  
   1400114b0:	clc    
   1400114b1:	in     eax,dx
   1400114b2:	add    BYTE PTR [rax],al
   1400114b4:	add    BYTE PTR [rax],al
   1400114b6:	add    BYTE PTR [rax],al
   1400114b8:	xchg   esp,eax
   1400114b9:	adc    DWORD PTR [rax],eax
   1400114bb:	add    bh,bh
   1400114bd:	(bad)  
   1400114be:	(bad)  
   1400114bf:	call   QWORD PTR [rax]
   1400114c1:	adc    al,BYTE PTR [rax]
   1400114c3:	add    BYTE PTR [rax],al
   1400114c5:	add    BYTE PTR [rax],al
   1400114c7:	add    BYTE PTR [rdx+rdx*1+0x0],al
   1400114cb:	add    bh,bh
   1400114cd:	(bad)  
   1400114ce:	(bad)  
   1400114cf:	call   QWORD PTR [rcx]
   1400114d1:	sbb    DWORD PTR [rsi],eax
   1400114d3:	add    BYTE PTR [rcx],bl
   1400114d5:	or     al,BYTE PTR fs:[rax]
   1400114d8:	adc    al,0x34
   1400114da:	or     DWORD PTR [rax],eax
   1400114dc:	(bad)  
   1400114dd:	push   rdx
   1400114de:	add    dh,BYTE PTR [rax+0x14]
   1400114e1:	in     al,dx
   1400114e2:	add    BYTE PTR [rax],al
   1400114e4:	nop
   1400114e5:	sgdt   [rax]
   1400114e8:	(bad)  
   1400114e9:	adc    al,BYTE PTR [rax]
   1400114eb:	add    bh,bh
   1400114ed:	(bad)  
   1400114ee:	(bad)  
   1400114ef:	dec    DWORD PTR [rsi+0x12]
   1400114f5:	add    BYTE PTR [rax],al
   1400114f7:	add    BYTE PTR [rax-0xffffee],ch
   1400114fd:	(bad)  
   1400114fe:	(bad)  
   1400114ff:	call   QWORD PTR [rcx]
   140011501:	adc    eax,DWORD PTR [rdx]
   140011503:	add    BYTE PTR [rdx],cl
   140011505:	push   rdx
   140011506:	(bad)  
   140011507:	xor    BYTE PTR [rsp+rbp*8],dl
   14001150a:	add    BYTE PTR [rax],al
   14001150c:	push   0xffffffffff00010f
   140011511:	(bad)  
   140011512:	(bad)  
   140011513:	dec    DWORD PTR [rdx]
   140011515:	out    dx,al
   140011516:	add    BYTE PTR [rax],al
   140011518:	adc    BYTE PTR [rbx],dl
   14001151a:	add    BYTE PTR [rax],al
   14001151c:	(bad)  
   14001151d:	(bad)  
   14001151e:	(bad)  
   14001151f:	jmp    QWORD PTR [rsi]
   140011521:	adc    eax,DWORD PTR [rax]
   140011523:	add    BYTE PTR [rax],al
   140011525:	add    BYTE PTR [rax],al
   140011527:	add    BYTE PTR [rcx],al
   140011529:	(bad)  
   14001152a:	add    al,BYTE PTR [rax]
   14001152c:	(bad)  
   14001152d:	xor    al,BYTE PTR [rdx]
   14001152f:	push   rax
   140011530:	adc    DWORD PTR [rax],ebx
   140011532:	add    al,0x0
   140011534:	sbb    BYTE PTR [rcx+rcx*1],dh
   140011537:	add    BYTE PTR [rdx+rdx*2],cl
   14001153a:	or     BYTE PTR [rax+0x14],dh
   14001153d:	in     al,dx
   14001153e:	add    BYTE PTR [rax],al
   140011540:	rex sgdt [rax]
   140011544:	(bad)  
   140011545:	(bad)  
   140011546:	(bad)  
   140011547:	push   QWORD PTR [rsi]
   140011549:	out    dx,al
   14001154a:	add    BYTE PTR [rax],al
   14001154c:	add    BYTE PTR [rax],al
   14001154e:	add    BYTE PTR [rax],al
   140011550:	(bad)  
   140011551:	adc    eax,DWORD PTR [rax]
   140011553:	add    bh,bh
   140011555:	(bad)  
   140011556:	(bad)  
   140011557:	(bad)  
   140011558:	jle    0x14001156d
   14001155a:	add    BYTE PTR [rax],al
   14001155c:	add    BYTE PTR [rax],al
   14001155e:	add    BYTE PTR [rax],al
   140011560:	add    DWORD PTR [rax],ebx
   140011562:	or     al,BYTE PTR [rax]
   140011564:	sbb    BYTE PTR [rdx+rcx*1+0x0],ah
   140011568:	sbb    BYTE PTR [rcx+rcx*1+0x0],dl
   14001156c:	sbb    BYTE PTR [rax+rcx*1],dh
   14001156f:	add    BYTE PTR [rax],bl
   140011571:	xor    dl,BYTE PTR [rax+rsi*8]
   140011574:	adc    ah,al
   140011576:	adc    BYTE PTR [rax+0x1],dh
   140011579:	add    al,0x1
   14001157b:	add    BYTE PTR [rdx+rax*2],al
   14001157e:	add    BYTE PTR [rax],al
   140011580:	adc    DWORD PTR [rcx],ebx
   140011582:	(bad)  
   140011583:	add    BYTE PTR [rcx],bl
   140011585:	or     eax,DWORD PTR fs:[rax]
   140011588:	adc    al,0x34
   14001158a:	or     al,BYTE PTR [rax]
   14001158c:	(bad)  
   14001158d:	jb     0x140011591
   14001158f:	jo     0x1400115a5
   140011591:	in     al,dx
   140011592:	add    BYTE PTR [rax],al
   140011594:	sbb    BYTE PTR [rdi],cl
   140011596:	add    DWORD PTR [rax],eax
   140011598:	(bad)  
   140011599:	(bad)  
   14001159a:	(bad)  
   14001159b:	jmp    QWORD PTR [rdx-0x12]
   14001159e:	add    BYTE PTR [rax],al
   1400115a0:	clc    
   1400115a1:	adc    al,0x0
   1400115a3:	add    bh,bh
   1400115a5:	(bad)  
   1400115a6:	(bad)  
   1400115a7:	(bad)  
   1400115a8:	cmp    al,0x15
   1400115aa:	add    BYTE PTR [rax],al
   1400115ac:	add    BYTE PTR [rax],al
   1400115ae:	add    BYTE PTR [rax],al
   1400115b0:	jnp    0x1400115c7
   1400115b2:	add    BYTE PTR [rax],al
   1400115b4:	(bad)  
   1400115b5:	(bad)  
   1400115b6:	(bad)  
   1400115b7:	call   FWORD PTR [rcx]
   1400115b9:	cmp    BYTE PTR [rbx],cl
   1400115bb:	add    BYTE PTR [rsi],ah
   1400115bd:	cmps   BYTE PTR fs:[rsi],BYTE PTR es:[rdi]
   1400115bf:	add    BYTE PTR [rdx],ah
   1400115c1:	xor    al,0xa4
   1400115c3:	add    BYTE PTR [rbx],dl
   1400115c5:	add    DWORD PTR [rsi+0xaf00c00],ebx
   1400115cb:	loopne 0x1400115d5
   1400115cd:	rol    BYTE PTR [rsi],1
   1400115cf:	rol    BYTE PTR [rax+rsi*2],0x0
   1400115d3:	add    BYTE PTR [rax-0xfffff14],dh
   1400115d9:	(bad)  
   1400115da:	add    DWORD PTR [rax],eax
   1400115dc:	jrcxz  0x1400115e2
   1400115de:	add    BYTE PTR [rax],al
   1400115e0:	(bad)  
   1400115e1:	(bad)  
   1400115e2:	(bad)  
   1400115e3:	push   QWORD PTR [rsi+rbp*8+0x0]
   1400115e7:	add    BYTE PTR [rax],al
   1400115e9:	add    BYTE PTR [rax],al
   1400115eb:	add    BYTE PTR [rdx+0x10000ee],al
   1400115f1:	add    BYTE PTR [rax],al
   1400115f3:	add    BYTE PTR [rax+0x20000ee],dl
   1400115f9:	add    BYTE PTR [rax],al
   1400115fb:	add    BYTE PTR [rax],al
   1400115fd:	add    BYTE PTR [rax],al
   1400115ff:	add    BYTE PTR [rdx],al
   140011601:	add    BYTE PTR [rax],al
   140011603:	add    BYTE PTR [rax],al
   140011605:	add    BYTE PTR [rax],al
   140011607:	add    BYTE PTR [rbx],al
   140011609:	add    BYTE PTR [rax],al
   14001160b:	add    BYTE PTR [rbx],al
   14001160d:	add    BYTE PTR [rax],al
   14001160f:	add    BYTE PTR [rax+rax*1],al
   140011612:	add    BYTE PTR [rax],al
   140011614:	add    DWORD PTR [rax],eax
   140011616:	add    BYTE PTR [rax],al
   140011618:	sbb    al,0x16
   14001161a:	add    DWORD PTR [rax],eax
   14001161c:	add    BYTE PTR [rax],al
   14001161e:	add    BYTE PTR [rax],al
   140011620:	rex.W push rax
   140011622:	add    DWORD PTR [rax],eax
   140011624:	add    BYTE PTR [rax],al
   140011626:	add    BYTE PTR [rax],al
   140011628:	sahf   
   140011629:	out    dx,al
   14001162a:	add    BYTE PTR [rax],al
   14001162c:	js     0x14001162e
   14001162e:	add    BYTE PTR [rax],al
   140011630:	lods   al,BYTE PTR ds:[rsi]
   140011631:	adc    eax,0xffff0000
   140011636:	(bad)  
   140011637:	call   QWORD PTR [rax+0x16]
   14001163d:	add    BYTE PTR [rax],al
   14001163f:	add    BYTE PTR [rdi+0x1000016],bl
   140011645:	add    BYTE PTR [rax],al
   140011647:	add    BYTE PTR [rsi+0x2000016],ch
   14001164d:	add    BYTE PTR [rax],al
   14001164f:	add    BYTE PTR [rdi],ah
   140011651:	sbb    BYTE PTR [rax],al
   140011653:	add    BYTE PTR [rcx],al
   140011655:	add    BYTE PTR [rax],al
   140011657:	add    BYTE PTR [rbx],dh
   140011659:	sbb    BYTE PTR [rax],al
   14001165b:	add    BYTE PTR [rax],al
   14001165d:	add    BYTE PTR [rax],al
   14001165f:	add    BYTE PTR [rdi],bh
   140011661:	sbb    BYTE PTR [rax],al
   140011663:	add    bh,bh
   140011665:	(bad)  
   140011666:	(bad)  
   140011667:	call   QWORD PTR [rcx+0x18]
   14001166a:	add    BYTE PTR [rax],al
   14001166c:	add    eax,DWORD PTR [rax]
   14001166e:	add    BYTE PTR [rax],al
   140011670:	sbb    DWORD PTR [r8],r8d
   140011673:	add    BYTE PTR [rcx],al
   140011675:	add    BYTE PTR [rax],al
   140011677:	add    BYTE PTR [rcx+0x19],dl
   14001167a:	add    BYTE PTR [rax],al
   14001167c:	add    BYTE PTR [rax],al
   14001167e:	add    BYTE PTR [rax],al
   140011680:	pop    rbp
   140011681:	sbb    DWORD PTR [rax],eax
   140011683:	add    bh,bh
   140011685:	(bad)  
   140011686:	(bad)  
   140011687:	jmp    FWORD PTR [rdi+0x19]
   14001168a:	add    BYTE PTR [rax],al
   14001168c:	add    eax,DWORD PTR [rax]
   14001168e:	add    BYTE PTR [rax],al
   140011690:	repnz sbb DWORD PTR [rax],eax
   140011693:	add    BYTE PTR [rdx],al
   140011695:	add    BYTE PTR [rax],al
   140011697:	add    BYTE PTR [rcx+0x1c],cl
   14001169a:	add    BYTE PTR [rax],al
   14001169c:	add    DWORD PTR [rax],eax
   14001169e:	add    BYTE PTR [rax],al
   1400116a0:	push   rbp
   1400116a1:	sbb    al,0x0
   1400116a3:	add    BYTE PTR [rax],al
   1400116a5:	add    BYTE PTR [rax],al
   1400116a7:	add    BYTE PTR [rcx+0x1c],ah
   1400116aa:	add    BYTE PTR [rax],al
   1400116ac:	(bad)  
   1400116ad:	(bad)  
   1400116ae:	(bad)  
   1400116af:	push   QWORD PTR [rax+0x1c]
   1400116b2:	add    BYTE PTR [rax],al
   1400116b4:	add    DWORD PTR [rax],eax
   1400116b6:	add    BYTE PTR [rax],al
   1400116b8:	jl     0x1400116d6
   1400116ba:	add    BYTE PTR [rax],al
   1400116bc:	add    BYTE PTR [rax],al
   1400116be:	add    BYTE PTR [rax],al
   1400116c0:	mov    BYTE PTR [rax+rax*1],bl
   1400116c3:	add    bh,bh
   1400116c5:	(bad)  
   1400116c6:	(bad)  
   1400116c7:	call   FWORD PTR [rsi+0xee]
   1400116cd:	add    BYTE PTR [rax],al
   1400116cf:	add    BYTE PTR [rbx+0x40000ee],ch
   1400116d5:	add    BYTE PTR [rax],al
   1400116d7:	add    dh,ch
   1400116d9:	out    dx,al
   1400116da:	add    BYTE PTR [rax],al
   1400116dc:	add    BYTE PTR [rax],al
   1400116de:	add    BYTE PTR [rax],al
   1400116e0:	sbb    DWORD PTR [rdx],ecx
   1400116e2:	add    al,BYTE PTR [rax]
   1400116e4:	or     dh,BYTE PTR [rdx-0x13ebaffa]
   1400116ea:	add    BYTE PTR [rax],al
   1400116ec:	lock (bad) 
   1400116ee:	add    DWORD PTR [rax],eax
   1400116f0:	sbb    DWORD PTR [rbx],ebp
   1400116f2:	or     eax,DWORD PTR [rax]
   1400116f4:	sub    esp,DWORD PTR [rax+riz*1+0x0]
   1400116f8:	(bad)  
   1400116f9:	xor    al,0x1f
   1400116fb:	add    BYTE PTR [rbx],bl
   1400116fd:	add    DWORD PTR [rax],ebx
   1400116ff:	add    BYTE PTR [rax+rsi*8],dl
   140011702:	adc    ah,al
   140011704:	adc    al,dl
   140011706:	(bad)  
   140011707:	ror    BYTE PTR [rax+rsi*2],0x0
   14001170b:	add    BYTE PTR [rsp+rbp*8],dl
   14001170e:	add    BYTE PTR [rax],al
   140011710:	enter  0x10e,0x0
   140011714:	(bad)  
   140011715:	(bad)  
   140011716:	(bad)  
   140011717:	inc    DWORD PTR [rdx]
   140011719:	out    dx,eax
   14001171a:	add    BYTE PTR [rax],al
   14001171c:	add    BYTE PTR [rax],al
   14001171e:	add    BYTE PTR [rax],al
   140011720:	(bad)  
   140011721:	out    dx,eax
   140011722:	add    BYTE PTR [rax],al
   140011724:	add    DWORD PTR [rax],eax
   140011726:	add    BYTE PTR [rax],al
   140011728:	sbb    ch,bh
   14001172a:	add    BYTE PTR [rax],al
   14001172c:	add    al,BYTE PTR [rax]
   14001172e:	add    BYTE PTR [rax],al
   140011730:	es out dx,eax
   140011732:	add    BYTE PTR [rax],al
   140011734:	add    eax,DWORD PTR [rax]
   140011736:	add    BYTE PTR [rax],al
   140011738:	add    BYTE PTR [rax],al
   14001173a:	add    BYTE PTR [rax],al
   14001173c:	add    eax,DWORD PTR [rax]
   14001173e:	add    BYTE PTR [rax],al
   140011740:	add    BYTE PTR [rax],al
   140011742:	add    BYTE PTR [rax],al
   140011744:	add    eax,DWORD PTR [rax]
   140011746:	add    BYTE PTR [rax],al
   140011748:	add    BYTE PTR [rax],al
   14001174a:	add    BYTE PTR [rax],al
   14001174c:	(bad)  
   14001174d:	add    BYTE PTR [rax],al
   14001174f:	add    BYTE PTR [rdx-0x11],dh
   140011752:	add    BYTE PTR [rax],al
   140011754:	(bad)  
   140011755:	add    BYTE PTR [rax],al
   140011757:	add    BYTE PTR [rsi-0x11],bh
   14001175a:	add    BYTE PTR [rax],al
   14001175c:	or     BYTE PTR [rax],al
   14001175e:	add    BYTE PTR [rax],al
   140011760:	mov    ch,bh
   140011762:	add    BYTE PTR [rax],al
   140011764:	or     DWORD PTR [rax],eax
   140011766:	add    BYTE PTR [rax],al
   140011768:	xchg   esi,eax
   140011769:	out    dx,eax
   14001176a:	add    BYTE PTR [rax],al
   14001176c:	or     al,BYTE PTR [rax]
   14001176e:	add    BYTE PTR [rax],al
   140011770:	movabs ds:0xae0000000b0000ef,al
   140011779:	out    dx,eax
   14001177a:	add    BYTE PTR [rax],al
   14001177c:	add    eax,DWORD PTR [rax]
   14001177e:	add    BYTE PTR [rax],al
   140011780:	add    BYTE PTR [rax],al
   140011782:	add    BYTE PTR [rax],al
   140011784:	add    eax,DWORD PTR [rax]
   140011786:	add    BYTE PTR [rax],al
   140011788:	cli    
   140011789:	out    dx,eax
   14001178a:	add    BYTE PTR [rax],al
   14001178c:	add    eax,DWORD PTR [rax]
   14001178e:	add    BYTE PTR [rax],al
   140011790:	(bad)  
   140011791:	lock add BYTE PTR [rax],al
   140011794:	sldt   WORD PTR [rax]
   140011797:	add    BYTE PTR [rdx],dl
   140011799:	lock add BYTE PTR [rax],al
   14001179c:	add    eax,DWORD PTR [rax]
   14001179e:	add    BYTE PTR [rax],al
   1400117a0:	(bad)  
   1400117a1:	lock add BYTE PTR [rax],al
   1400117a4:	add    eax,DWORD PTR [rax]
   1400117a6:	add    BYTE PTR [rax],al
   1400117a8:	sub    al,0xf0
   1400117aa:	add    BYTE PTR [rax],al
   1400117ac:	add    al,0x0
   1400117ae:	add    BYTE PTR [rax],al
   1400117b0:	add    al,0x0
   1400117b2:	add    BYTE PTR [rax],al
   1400117b4:	add    eax,0x1000000
   1400117b9:	add    BYTE PTR [rax],al
   1400117bb:	add    ah,dl
   1400117bd:	(bad)  
   1400117be:	add    DWORD PTR [rax],eax
   1400117c0:	(bad)  
   1400117c1:	add    BYTE PTR [rax],al
   1400117c3:	add    BYTE PTR [rax+rax*1],cl
   1400117c6:	add    BYTE PTR [rax],al
   1400117c8:	or     eax,0x1000000
   1400117cd:	add    BYTE PTR [rax],al
   1400117cf:	add    al,ch
   1400117d1:	(bad)  
   1400117d2:	add    DWORD PTR [rax],eax
	...
   1400117e0:	xor    ch,bh
   1400117e2:	add    BYTE PTR [rax],al
   1400117e4:	js     0x1400117e6
	...
   1400117f2:	add    BYTE PTR [rax],al
   1400117f4:	mov    edx,0x780000ef
   1400117f9:	add    BYTE PTR [rax],al
   1400117fb:	add    BYTE PTR [rax],al
   1400117fd:	add    BYTE PTR [rax],al
   1400117ff:	add    ah,cl
   140011801:	sbb    al,0x0
   140011803:	add    bh,bh
   140011805:	(bad)  
   140011806:	(bad)  
   140011807:	dec    DWORD PTR [rdx]
   140011809:	sbb    eax,0x0
   14001180e:	add    BYTE PTR [rax],al
   140011810:	adc    bl,BYTE PTR [rip+0x10000]        # 0x140021816
   140011816:	add    BYTE PTR [rax],al
   140011818:	(bad)  
   140011819:	sbb    eax,0x20000
   14001181e:	add    BYTE PTR [rax],al
   140011820:	sbb    bl,BYTE PTR [rip+0x30000]        # 0x140041826
   140011826:	add    BYTE PTR [rax],al
   140011828:	and    al,0x1d
   14001182a:	add    BYTE PTR [rax],al
   14001182c:	add    al,0x0
   14001182e:	add    BYTE PTR [rax],al
   140011830:	rex.RB sbb eax,0x30000
   140011836:	add    BYTE PTR [rax],al
   140011838:	push   rbp
   140011839:	sbb    eax,0x60000
   14001183e:	add    BYTE PTR [rax],al
   140011840:	push   0x1d
   140011842:	add    BYTE PTR [rax],al
   140011844:	(bad)  
   140011845:	add    BYTE PTR [rax],al
   140011847:	add    BYTE PTR [rdi+0x1d],bh
   14001184a:	add    BYTE PTR [rax],al
   14001184c:	or     BYTE PTR [rax],al
   14001184e:	add    BYTE PTR [rax],al
   140011850:	lea    ebx,[rip+0x90000]        # 0x1400a1856
   140011856:	add    BYTE PTR [rax],al
   140011858:	sahf   
   140011859:	sbb    eax,0xa0000
   14001185e:	add    BYTE PTR [rax],al
   140011860:	mov    bh,0x1d
   140011862:	add    BYTE PTR [rax],al
   140011864:	or     eax,DWORD PTR [rax]
   140011866:	add    BYTE PTR [rax],al
   140011868:	rcr    BYTE PTR [rip+0xc0000],1        # 0x1400d186e
   14001186e:	add    BYTE PTR [rax],al
   140011870:	ficomp WORD PTR [rip+0xb0000]        # 0x1400c1876
   140011876:	add    BYTE PTR [rax],al
   140011878:	in     al,dx
   140011879:	sbb    eax,0xa0000
   14001187e:	add    BYTE PTR [rax],al
   140011880:	cli    
   140011881:	sbb    eax,0x90000
   140011886:	add    BYTE PTR [rax],al
   140011888:	or     BYTE PTR [rsi],bl
   14001188a:	add    BYTE PTR [rax],al
   14001188c:	or     BYTE PTR [rax],al
   14001188e:	add    BYTE PTR [rax],al
   140011890:	adc    ebx,DWORD PTR [rsi]
   140011892:	add    BYTE PTR [rax],al
   140011894:	(bad)  
   140011895:	add    BYTE PTR [rax],al
   140011897:	add    BYTE PTR [rcx],ah
   140011899:	(bad)  
   14001189a:	add    BYTE PTR [rax],al
   14001189c:	(bad)  
   14001189d:	add    BYTE PTR [rax],al
   14001189f:	add    BYTE PTR [rbp+0x300001e],al
   1400118a5:	add    BYTE PTR [rax],al
   1400118a7:	add    bl,cl
   1400118a9:	(bad)  
   1400118aa:	add    BYTE PTR [rax],al
   1400118ac:	add    al,BYTE PTR [rax]
   1400118ae:	add    BYTE PTR [rax],al
   1400118b0:	fstp   DWORD PTR [rsi]
   1400118b2:	add    BYTE PTR [rax],al
   1400118b4:	add    DWORD PTR [rax],eax
   1400118b6:	add    BYTE PTR [rax],al
   1400118b8:	in     al,0x1e
   1400118ba:	add    BYTE PTR [rax],al
   1400118bc:	add    BYTE PTR [rax],al
   1400118be:	add    BYTE PTR [rax],al
   1400118c0:	out    dx,eax
   1400118c1:	(bad)  
   1400118c2:	add    BYTE PTR [rax],al
   1400118c4:	(bad)  
   1400118c5:	(bad)  
   1400118c6:	(bad)  
   1400118c7:	inc    DWORD PTR [rcx]
   1400118c9:	(bad)  
   1400118ca:	add    BYTE PTR [rax],al
   1400118cc:	add    eax,DWORD PTR [rax]
   1400118ce:	add    BYTE PTR [rax],al
   1400118d0:	mov    ecx,0xe000020
   1400118d5:	add    BYTE PTR [rax],al
   1400118d7:	add    al,bh
   1400118d9:	and    BYTE PTR [rax],al
   1400118db:	add    BYTE PTR [rbx],al
   1400118dd:	add    BYTE PTR [rax],al
   1400118df:	add    BYTE PTR [rbp+0xf000021],cl
   1400118e5:	add    BYTE PTR [rax],al
   1400118e7:	add    BYTE PTR [rdi+0x10000021],bl
   1400118ed:	add    BYTE PTR [rax],al
   1400118ef:	add    dh,dh
   1400118f1:	and    DWORD PTR [rax],eax
   1400118f3:	add    BYTE PTR [rdi],cl
   1400118f5:	add    BYTE PTR [rax],al
   1400118f7:	add    BYTE PTR [rcx],al
   1400118f9:	and    al,BYTE PTR [rax]
   1400118fb:	add    BYTE PTR [rbx],al
   1400118fd:	add    BYTE PTR [rax],al
   1400118ff:	add    BYTE PTR [rdi+0x23],bh
   140011902:	add    BYTE PTR [rax],al
   140011904:	add    al,BYTE PTR [rax]
   140011906:	add    BYTE PTR [rax],al
   140011908:	lea    esp,[rbx]
   14001190a:	add    BYTE PTR [rax],al
   14001190c:	add    DWORD PTR [rax],eax
   14001190e:	add    BYTE PTR [rax],al
   140011910:	cwde   
   140011911:	and    eax,DWORD PTR [rax]
   140011913:	add    BYTE PTR [rax],al
   140011915:	add    BYTE PTR [rax],al
   140011917:	add    BYTE PTR [rbx-0xffffdd],ah
   14001191d:	(bad)  
   14001191e:	(bad)  
   14001191f:	push   QWORD PTR [rbp+0x3000023]
   140011925:	add    BYTE PTR [rax],al
   140011927:	add    BYTE PTR [rax],dh
   140011929:	and    eax,0x20000
   14001192e:	add    BYTE PTR [rax],al
   140011930:	ds and eax,0x10000
   140011936:	add    BYTE PTR [rax],al
   140011938:	rex.WB and rax,0x0
   14001193e:	add    BYTE PTR [rax],al
   140011940:	push   rsp
   140011941:	and    eax,0xffff0000
   140011946:	(bad)  
   140011947:	push   QWORD PTR [rdx]
   140011949:	out    dx,eax
   14001194a:	add    BYTE PTR [rax],al
   14001194c:	add    BYTE PTR [rax],al
   14001194e:	add    BYTE PTR [rax],al
   140011950:	rex out dx,eax
   140011952:	add    BYTE PTR [rax],al
   140011954:	add    eax,0x63000000
   140011959:	out    dx,eax
   14001195a:	add    BYTE PTR [rax],al
   14001195c:	add    BYTE PTR [rax],al
   14001195e:	add    BYTE PTR [rax],al
   140011960:	enter  0xef,0x0
   140011964:	or     eax,0xeb000000
   140011969:	out    dx,eax
   14001196a:	add    BYTE PTR [rax],al
   14001196c:	add    BYTE PTR [rax],al
   14001196e:	add    BYTE PTR [rax],al
   140011970:	sbb    DWORD PTR [rbx],ecx
   140011972:	add    eax,DWORD PTR [rax]
   140011974:	or     esp,DWORD PTR [rdx+0x30065007]
   14001197a:	add    BYTE PTR [rax],al
   14001197c:	adc    al,0xec
   14001197e:	add    BYTE PTR [rax],al
   140011980:	enter  0x10e,0x0
   140011984:	sbb    DWORD PTR [rbx],edi
   140011986:	or     DWORD PTR [rax],eax
   140011988:	sbb    eax,0x1006b601
   14001198d:	lock (bad) 
   14001198f:	loopne 0x14001199d
   140011991:	ror    BYTE PTR [rdx],1
   140011993:	ror    BYTE PTR [rax],0x70
   140011996:	(bad)  
   140011997:	(bad)  
   140011998:	(bad)  
   140011999:	xor    BYTE PTR [rax],al
   14001199b:	add    BYTE PTR [rax-0x5fffff14],dh
   1400119a1:	(bad)  
   1400119a2:	add    DWORD PTR [rax],eax
   1400119a4:	movabs ds:0x40ffffffff000035,eax
   1400119ad:	lock add BYTE PTR [rax],al
   1400119b0:	add    BYTE PTR [rax],al
   1400119b2:	add    BYTE PTR [rax],al
   1400119b4:	rex.WRX
   1400119b5:	lock add BYTE PTR [rax],al
   1400119b8:	add    DWORD PTR [rax],eax
   1400119ba:	add    BYTE PTR [rax],al
   1400119bc:	pop    rsp
   1400119bd:	lock add BYTE PTR [rax],al
   1400119c0:	add    al,BYTE PTR [rax]
   1400119c2:	add    BYTE PTR [rax],al
   1400119c4:	push   0xfffffffffffffff0
   1400119c6:	add    BYTE PTR [rax],al
   1400119c8:	add    eax,DWORD PTR [rax]
   1400119ca:	add    BYTE PTR [rax],al
   1400119cc:	js     0x1400119be
   1400119ce:	add    BYTE PTR [rax],al
   1400119d0:	add    al,0x0
   1400119d2:	add    BYTE PTR [rax],al
   1400119d4:	xchg   al,dh
   1400119d6:	add    BYTE PTR [rax],al
   1400119d8:	add    eax,0x94000000
   1400119dd:	lock add BYTE PTR [rax],al
   1400119e0:	(bad)  
   1400119e1:	add    BYTE PTR [rax],al
   1400119e3:	add    BYTE PTR [rdx+0x70000f0],ah
   1400119e9:	add    BYTE PTR [rax],al
   1400119eb:	add    BYTE PTR [rax+0x80000f0],dh
   1400119f1:	add    BYTE PTR [rax],al
   1400119f3:	add    BYTE PTR [rsi+0x90000f0],bh
   1400119f9:	add    BYTE PTR [rax],al
   1400119fb:	add    ah,cl
   1400119fd:	lock add BYTE PTR [rax],al
   140011a00:	or     al,BYTE PTR [rax]
   140011a02:	add    BYTE PTR [rax],al
   140011a04:	(bad)  
   140011a06:	add    BYTE PTR [rax],al
   140011a08:	or     eax,DWORD PTR [rax]
   140011a0a:	add    BYTE PTR [rax],al
   140011a0c:	add    BYTE PTR [rax],al
   140011a0e:	add    BYTE PTR [rax],al
   140011a10:	or     eax,DWORD PTR [rax]
   140011a12:	add    BYTE PTR [rax],al
   140011a14:	add    BYTE PTR [rax],al
   140011a16:	add    BYTE PTR [rax],al
   140011a18:	or     eax,DWORD PTR [rax]
   140011a1a:	add    BYTE PTR [rax],al
   140011a1c:	add    BYTE PTR [rax],al
   140011a1e:	add    BYTE PTR [rax],al
   140011a20:	(bad)  
   140011a21:	add    BYTE PTR [rax],al
   140011a23:	add    BYTE PTR [rbp-0xf],ch
   140011a26:	add    BYTE PTR [rax],al
   140011a28:	sldt   WORD PTR [rax]
   140011a2b:	add    BYTE PTR [rcx-0xf],bh
   140011a2e:	add    BYTE PTR [rax],al
   140011a30:	or     eax,DWORD PTR [rax]
   140011a32:	add    BYTE PTR [rax],al
   140011a34:	add    BYTE PTR [rax],al
   140011a36:	add    BYTE PTR [rax],al
   140011a38:	or     al,0x0
   140011a3a:	add    BYTE PTR [rax],al
   140011a3c:	or     al,0x0
   140011a3e:	add    BYTE PTR [rax],al
   140011a40:	or     eax,0x1000000
   140011a45:	add    BYTE PTR [rax],al
   140011a47:	add    BYTE PTR [rax+0x1a],ah
   140011a4a:	add    DWORD PTR [rax],eax
   140011a4c:	(bad)  
   140011a4d:	add    BYTE PTR [rax],al
   140011a4f:	add    BYTE PTR [rax],dl
   140011a51:	add    BYTE PTR [rax],al
   140011a53:	add    BYTE PTR [rcx],dl
   140011a55:	add    BYTE PTR [rax],al
   140011a57:	add    BYTE PTR [rcx],al
   140011a59:	add    BYTE PTR [rax],al
   140011a5b:	add    BYTE PTR [rdx+rbx*1+0x1],dh
   140011a5f:	add    BYTE PTR [rax],al
   140011a61:	add    BYTE PTR [rax],al
   140011a63:	add    BYTE PTR [rax],ah
   140011a65:	push   rax
   140011a66:	add    DWORD PTR [rax],eax
   140011a68:	add    BYTE PTR [rax],al
   140011a6a:	add    BYTE PTR [rax],al
   140011a6c:	call   0x198011b61
	...
   140011a7d:	add    BYTE PTR [rax],al
   140011a7f:	add    BYTE PTR [rbp+0x480000f1],al
	...
   140011a8d:	add    BYTE PTR [rax],al
   140011a8f:	add    BYTE PTR [rax-0xffffdb],cl
   140011a95:	(bad)  
   140011a96:	(bad)  
   140011a97:	(bad)  
   140011a98:	in     al,dx
   140011a99:	and    eax,0x0
   140011a9e:	add    BYTE PTR [rax],al
   140011aa0:	or     DWORD PTR [rsi],esp
   140011aa2:	add    BYTE PTR [rax],al
   140011aa4:	add    DWORD PTR [rax],eax
   140011aa6:	add    BYTE PTR [rax],al
   140011aa8:	(bad)  
   140011aa9:	add    BYTE PTR es:[rax],al
   140011aac:	add    al,BYTE PTR [rax]
   140011aae:	add    BYTE PTR [rax],al
   140011ab0:	cs add BYTE PTR es:[rax],al
   140011ab4:	add    eax,DWORD PTR [rax]
   140011ab6:	add    BYTE PTR [rax],al
   140011ab8:	(bad)  
   140011ab9:	add    BYTE PTR es:[rax],al
   140011abc:	add    al,0x0
   140011abe:	add    BYTE PTR [rax],al
   140011ac0:	stc    
   140011ac1:	add    BYTE PTR es:[rax],al
   140011ac4:	add    eax,0x8000000
   140011ac9:	(bad)  
   140011aca:	add    BYTE PTR [rax],al
   140011acc:	(bad)  
   140011acd:	add    BYTE PTR [rax],al
   140011acf:	add    BYTE PTR [rdi],dl
   140011ad1:	(bad)  
   140011ad2:	add    BYTE PTR [rax],al
   140011ad4:	(bad)  
   140011ad5:	add    BYTE PTR [rax],al
   140011ad7:	add    BYTE PTR [rsi],ah
   140011ad9:	(bad)  
   140011ada:	add    BYTE PTR [rax],al
   140011adc:	or     BYTE PTR [rax],al
   140011ade:	add    BYTE PTR [rax],al
   140011ae0:	xor    eax,0x9000027
   140011ae5:	add    BYTE PTR [rax],al
   140011ae7:	add    BYTE PTR [rdi+riz*1+0x0],al
   140011aeb:	add    BYTE PTR [rdx],cl
   140011aed:	add    BYTE PTR [rax],al
   140011aef:	add    BYTE PTR [rax+0x27],dl
   140011af2:	add    BYTE PTR [rax],al
   140011af4:	or     eax,DWORD PTR [rax]
   140011af6:	add    BYTE PTR [rax],al
   140011af8:	jg     0x140011b21
   140011afa:	add    BYTE PTR [rax],al
   140011afc:	or     al,BYTE PTR [rax]
   140011afe:	add    BYTE PTR [rax],al
   140011b00:	mov    esp,DWORD PTR [rdi]
   140011b02:	add    BYTE PTR [rax],al
   140011b04:	or     DWORD PTR [rax],eax
   140011b06:	add    BYTE PTR [rax],al
   140011b08:	(bad)  
   140011b09:	(bad)  
   140011b0a:	add    BYTE PTR [rax],al
   140011b0c:	or     BYTE PTR [rax],al
   140011b0e:	add    BYTE PTR [rax],al
   140011b10:	test   eax,0x7000027
   140011b15:	add    BYTE PTR [rax],al
   140011b17:	add    BYTE PTR [rax+0x6000027],bh
   140011b1d:	add    BYTE PTR [rax],al
   140011b1f:	add    bh,al
   140011b21:	(bad)  
   140011b22:	add    BYTE PTR [rax],al
   140011b24:	add    eax,0xd6000000
   140011b29:	(bad)  
   140011b2a:	add    BYTE PTR [rax],al
   140011b2c:	add    al,0x0
   140011b2e:	add    BYTE PTR [rax],al
   140011b30:	in     eax,0x27
   140011b32:	add    BYTE PTR [rax],al
   140011b34:	add    eax,DWORD PTR [rax]
   140011b36:	add    BYTE PTR [rax],al
   140011b38:	hlt    
   140011b39:	(bad)  
   140011b3a:	add    BYTE PTR [rax],al
   140011b3c:	add    al,BYTE PTR [rax]
   140011b3e:	add    BYTE PTR [rax],al
   140011b40:	add    ebp,DWORD PTR [rax]
   140011b42:	add    BYTE PTR [rax],al
   140011b44:	add    DWORD PTR [rax],eax
   140011b46:	add    BYTE PTR [rax],al
   140011b48:	adc    ch,BYTE PTR [rax]
   140011b4a:	add    BYTE PTR [rax],al
   140011b4c:	add    BYTE PTR [rax],al
   140011b4e:	add    BYTE PTR [rax],al
   140011b50:	and    DWORD PTR [rax],ebp
   140011b52:	add    BYTE PTR [rax],al
   140011b54:	(bad)  
   140011b55:	(bad)  
   140011b56:	(bad)  
   140011b57:	push   QWORD PTR [rdx]
   140011b59:	sub    BYTE PTR [rax],al
   140011b5b:	add    BYTE PTR [rbx],cl
   140011b5d:	add    BYTE PTR [rax],al
   140011b5f:	add    BYTE PTR [rsi],dl
   140011b61:	sub    al,BYTE PTR [rax]
   140011b63:	add    BYTE PTR [rax+rax*1],cl
   140011b66:	add    BYTE PTR [rax],al
   140011b68:	jl     0x140011b95
   140011b6a:	add    BYTE PTR [rax],al
   140011b6c:	(bad)  
   140011b6d:	add    BYTE PTR [rax],al
   140011b6f:	add    BYTE PTR [rdi],al
   140011b71:	sub    al,0x0
   140011b73:	add    BYTE PTR [rdi],cl
   140011b75:	add    BYTE PTR [rax],al
   140011b77:	add    BYTE PTR [rip+0x1000002c],bl        # 0x150011ba9
   140011b7d:	add    BYTE PTR [rax],al
   140011b7f:	add    BYTE PTR [rsp+rbp*1],bh
   140011b82:	add    BYTE PTR [rax],al
   140011b84:	sldt   WORD PTR [rax]
   140011b87:	add    BYTE PTR [rdx+0x2c],cl
   140011b8a:	add    BYTE PTR [rax],al
   140011b8c:	(bad)  
   140011b8d:	add    BYTE PTR [rax],al
   140011b8f:	add    cl,cl
   140011b91:	sub    al,0x0
   140011b93:	add    BYTE PTR [rdx],cl
   140011b95:	add    BYTE PTR [rax],al
   140011b97:	add    ch,dl
   140011b99:	sub    al,0x0
   140011b9b:	add    BYTE PTR [rcx],cl
   140011b9d:	add    BYTE PTR [rax],al
   140011b9f:	add    ah,ah
   140011ba1:	sub    al,0x0
   140011ba3:	add    BYTE PTR [rax],cl
   140011ba5:	add    BYTE PTR [rax],al
   140011ba7:	add    bl,dh
   140011ba9:	sub    al,0x0
   140011bab:	add    BYTE PTR [rdi],al
   140011bad:	add    BYTE PTR [rax],al
   140011baf:	add    BYTE PTR [rdx],al
   140011bb1:	sub    eax,0x60000
   140011bb6:	add    BYTE PTR [rax],al
   140011bb8:	adc    DWORD PTR [rip+0x50000],ebp        # 0x140061bbe
   140011bbe:	add    BYTE PTR [rax],al
   140011bc0:	and    BYTE PTR [rip+0x40000],ch        # 0x140051bc6
   140011bc6:	add    BYTE PTR [rax],al
   140011bc8:	(bad)  
   140011bc9:	sub    eax,0x30000
   140011bce:	add    BYTE PTR [rax],al
   140011bd0:	ds sub eax,0x20000
   140011bd6:	add    BYTE PTR [rax],al
   140011bd8:	rex.WRB sub rax,0x10000
   140011bde:	add    BYTE PTR [rax],al
   140011be0:	pop    rsp
   140011be1:	sub    eax,0x0
   140011be6:	add    BYTE PTR [rax],al
   140011be8:	imul   ebp,DWORD PTR [rip+0xffffffffffff0000],0xffffffff        # 0x140001bef
   140011bef:	inc    DWORD PTR [rcx+0xe00002d]
   140011bf5:	add    BYTE PTR [rax],al
   140011bf7:	add    BYTE PTR [rdx],dh
   140011bf9:	add    BYTE PTR cs:[rax],al
   140011bfc:	or     al,BYTE PTR [rax]
   140011bfe:	add    BYTE PTR [rax],al
   140011c00:	ds add BYTE PTR cs:[rax],al
   140011c04:	or     DWORD PTR [rax],eax
   140011c06:	add    BYTE PTR [rax],al
   140011c08:	rex.WRB
   140011c09:	add    BYTE PTR cs:[rax],al
   140011c0c:	or     BYTE PTR [rax],al
   140011c0e:	add    BYTE PTR [rax],al
   140011c10:	pop    rsp
   140011c11:	add    BYTE PTR cs:[rax],al
   140011c14:	(bad)  
   140011c15:	add    BYTE PTR [rax],al
   140011c17:	add    BYTE PTR [rbx+0x2e],ch
   140011c1a:	add    BYTE PTR [rax],al
   140011c1c:	(bad)  
   140011c1d:	add    BYTE PTR [rax],al
   140011c1f:	add    BYTE PTR [rdx+0x2e],bh
   140011c22:	add    BYTE PTR [rax],al
   140011c24:	add    eax,0x89000000
   140011c29:	add    BYTE PTR cs:[rax],al
   140011c2c:	add    al,0x0
   140011c2e:	add    BYTE PTR [rax],al
   140011c30:	cwde   
   140011c31:	add    BYTE PTR cs:[rax],al
   140011c34:	add    eax,DWORD PTR [rax]
   140011c36:	add    BYTE PTR [rax],al
   140011c38:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140011c39:	add    BYTE PTR cs:[rax],al
   140011c3c:	add    al,BYTE PTR [rax]
   140011c3e:	add    BYTE PTR [rax],al
   140011c40:	mov    dh,0x2e
   140011c42:	add    BYTE PTR [rax],al
   140011c44:	add    DWORD PTR [rax],eax
   140011c46:	add    BYTE PTR [rax],al
   140011c48:	(bad)
   140011c4b:	add    BYTE PTR [rax],al
   140011c4d:	add    BYTE PTR [rax],al
   140011c4f:	add    ah,dl
   140011c51:	add    BYTE PTR cs:[rax],al
   140011c54:	(bad)  
   140011c55:	(bad)  
   140011c56:	(bad)  
   140011c57:	(bad)  
   140011c58:	(bad)  
   140011c59:	add    BYTE PTR cs:[rax],al
   140011c5c:	(bad)  
   140011c5d:	add    BYTE PTR [rax],al
   140011c5f:	add    BYTE PTR [rdi+0x2f],ah
   140011c62:	add    BYTE PTR [rax],al
   140011c64:	or     eax,DWORD PTR [rax]
   140011c66:	add    BYTE PTR [rax],al
   140011c68:	jno    0x140011c9b
   140011c6a:	add    BYTE PTR [rax],al
   140011c6c:	or     al,BYTE PTR [rax]
   140011c6e:	add    BYTE PTR [rax],al
   140011c70:	jge    0x140011ca3
   140011c72:	add    BYTE PTR [rax],al
   140011c74:	or     DWORD PTR [rax],eax
   140011c76:	add    BYTE PTR [rax],al
   140011c78:	mov    WORD PTR [rcx],?
   140011c7a:	add    BYTE PTR [rax],al
   140011c7c:	or     BYTE PTR [rax],al
   140011c7e:	add    BYTE PTR [rax],al
   140011c80:	fwait
   140011c81:	xor    DWORD PTR [rax],eax
   140011c83:	add    BYTE PTR [rdi],al
   140011c85:	add    BYTE PTR [rax],al
   140011c87:	add    BYTE PTR [rdx+0x6000031],ch
   140011c8d:	add    BYTE PTR [rax],al
   140011c8f:	add    BYTE PTR [rcx+0x5000031],bh
   140011c95:	add    BYTE PTR [rax],al
   140011c97:	add    al,cl
   140011c99:	xor    DWORD PTR [rax],eax
   140011c9b:	add    BYTE PTR [rax+rax*1],al
   140011c9e:	add    BYTE PTR [rax],al
   140011ca0:	xlat   BYTE PTR ds:[rbx]
   140011ca1:	xor    DWORD PTR [rax],eax
   140011ca3:	add    BYTE PTR [rbx],al
   140011ca5:	add    BYTE PTR [rax],al
   140011ca7:	add    dh,ah
   140011ca9:	xor    DWORD PTR [rax],eax
   140011cab:	add    BYTE PTR [rdx],al
   140011cad:	add    BYTE PTR [rax],al
   140011caf:	add    ch,dh
   140011cb1:	xor    DWORD PTR [rax],eax
   140011cb3:	add    BYTE PTR [rcx],al
   140011cb5:	add    BYTE PTR [rax],al
   140011cb7:	add    BYTE PTR [rdx+rsi*1],al
   140011cba:	add    BYTE PTR [rax],al
   140011cbc:	add    BYTE PTR [rax],al
   140011cbe:	add    BYTE PTR [rax],al
   140011cc0:	adc    esi,DWORD PTR [rdx]
   140011cc2:	add    BYTE PTR [rax],al
   140011cc4:	(bad)  
   140011cc5:	(bad)  
   140011cc6:	(bad)  
   140011cc7:	jmp    QWORD PTR [rax]
   140011cc9:	xor    al,BYTE PTR [rax]
   140011ccb:	add    BYTE PTR [rbx],cl
   140011ccd:	add    BYTE PTR [rax],al
   140011ccf:	add    bl,al
   140011cd1:	cmp    al,BYTE PTR [rax]
   140011cd3:	add    BYTE PTR [rsi],cl
   140011cd5:	add    BYTE PTR [rax],al
   140011cd7:	add    ah,dh
   140011cd9:	cmp    al,BYTE PTR [rax]
   140011cdb:	add    BYTE PTR [rbx],cl
   140011cdd:	add    BYTE PTR [rax],al
   140011cdf:	add    BYTE PTR [rbx+rdi*1],ch
   140011ce2:	add    BYTE PTR [rax],al
   140011ce4:	or     al,BYTE PTR [rax]
   140011ce6:	add    BYTE PTR [rax],al
   140011ce8:	cmp    BYTE PTR [rbx],bh
   140011cea:	add    BYTE PTR [rax],al
   140011cec:	or     DWORD PTR [rax],eax
   140011cee:	add    BYTE PTR [rax],al
   140011cf0:	rex.RXB cmp r8d,DWORD PTR [r8]
   140011cf3:	add    BYTE PTR [rax],cl
   140011cf5:	add    BYTE PTR [rax],al
   140011cf7:	add    BYTE PTR [rsi+0x3b],dl
   140011cfa:	add    BYTE PTR [rax],al
   140011cfc:	(bad)  
   140011cfd:	add    BYTE PTR [rax],al
   140011cff:	add    BYTE PTR [rbp+0x3b],ah
   140011d02:	add    BYTE PTR [rax],al
   140011d04:	(bad)  
   140011d05:	add    BYTE PTR [rax],al
   140011d07:	add    BYTE PTR [rbx+rdi*1+0x0],dh
   140011d0b:	add    BYTE PTR [rip+0xffffffff83000000],al        # 0xc3011d11
   140011d11:	cmp    eax,DWORD PTR [rax]
   140011d13:	add    BYTE PTR [rax+rax*1],al
   140011d16:	add    BYTE PTR [rax],al
   140011d18:	xchg   edx,eax
   140011d19:	cmp    eax,DWORD PTR [rax]
   140011d1b:	add    BYTE PTR [rbx],al
   140011d1d:	add    BYTE PTR [rax],al
   140011d1f:	add    BYTE PTR [rcx+0x200003b],ah
   140011d25:	add    BYTE PTR [rax],al
   140011d27:	add    BYTE PTR [rax+0x100003b],dh
   140011d2d:	add    BYTE PTR [rax],al
   140011d2f:	add    BYTE PTR [rdi+0x3b],bh
   140011d35:	add    BYTE PTR [rax],al
   140011d37:	add    dh,cl
   140011d39:	cmp    eax,DWORD PTR [rax]
   140011d3b:	add    bh,bh
   140011d3d:	(bad)  
   140011d3e:	(bad)  
   140011d3f:	jmp    rsi
   140011d41:	cmp    eax,DWORD PTR [rax]
   140011d43:	add    BYTE PTR [rbx],cl
   140011d45:	add    BYTE PTR [rax],al
   140011d47:	add    BYTE PTR [rdi+0xa00003c],ch
   140011d4d:	add    BYTE PTR [rax],al
   140011d4f:	add    BYTE PTR [rbx+0x900003c],bh
   140011d55:	add    BYTE PTR [rax],al
   140011d57:	add    dl,cl
   140011d59:	cmp    al,0x0
   140011d5b:	add    BYTE PTR [rax],cl
   140011d5d:	add    BYTE PTR [rax],al
   140011d5f:	add    cl,bl
   140011d61:	cmp    al,0x0
   140011d63:	add    BYTE PTR [rdi],al
   140011d65:	add    BYTE PTR [rax],al
   140011d67:	add    al,ch
   140011d69:	cmp    al,0x0
   140011d6b:	add    BYTE PTR [rsi],al
   140011d6d:	add    BYTE PTR [rax],al
   140011d6f:	add    bh,dh
   140011d71:	cmp    al,0x0
   140011d73:	add    BYTE PTR [rip+0x6000000],al        # 0x146011d79
   140011d79:	cmp    eax,0x40000
   140011d7e:	add    BYTE PTR [rax],al
   140011d80:	adc    eax,0x300003d
   140011d85:	add    BYTE PTR [rax],al
   140011d87:	add    BYTE PTR [rdi*1+0x20000],ah
   140011d8e:	add    BYTE PTR [rax],al
   140011d90:	xor    edi,DWORD PTR [rip+0x10000]        # 0x140021d96
   140011d96:	add    BYTE PTR [rax],al
   140011d98:	rex.X cmp eax,0x0
   140011d9e:	add    BYTE PTR [rax],al
   140011da0:	push   rcx
   140011da1:	cmp    eax,0xffff0000
   140011da6:	(bad)  
   140011da7:	(bad)  
   140011da8:	call   0x140011e9d
   140011dad:	add    BYTE PTR [rax],al
   140011daf:	add    bh,dh
   140011db1:	lock add BYTE PTR [rax],al
   140011db4:	or     eax,0x5d000000
   140011db9:	icebp  
   140011dba:	add    BYTE PTR [rax],al
   140011dbc:	add    BYTE PTR [rax],al
   140011dbe:	add    BYTE PTR [rax],al
   140011dc0:	xchg   edx,eax
   140011dc1:	icebp  
   140011dc2:	add    BYTE PTR [rax],al
   140011dc4:	adc    DWORD PTR [rax],eax
   140011dc6:	add    BYTE PTR [rax],al
   140011dc8:	shl    ecx,0x0
   140011dcb:	add    BYTE PTR [rax],al
   140011dcd:	add    BYTE PTR [rax],al
   140011dcf:	add    BYTE PTR [rcx],bl
   140011dd1:	or     al,0x4
   140011dd3:	add    BYTE PTR [rdx+rdx*2],cl
   140011dd6:	or     BYTE PTR [rax+0x7],dh
   140011dd9:	push   rax
   140011dda:	(bad)  
   140011ddb:	xor    BYTE PTR [rsp+rbp*8],dl
   140011dde:	add    BYTE PTR [rax],al
   140011de0:	movabs al,ds:0xa00020a1900010e
   140011de9:	push   rdx
   140011dea:	(bad)  
   140011deb:	push   rax
   140011dec:	adc    al,0xec
   140011dee:	add    BYTE PTR [rax],al
   140011df0:	movabs al,ds:0x1f000b301900010e
   140011df9:	xor    al,0xc0
   140011dfb:	add    BYTE PTR [rdi],bl
   140011dfd:	add    DWORD PTR [rax+0xef01000],edi
   140011e03:	loopne 0x140011e11
   140011e05:	ror    BYTE PTR [rdx],1
   140011e07:	ror    BYTE PTR [rax],0x70
   140011e0a:	(bad)  
   140011e0b:	(bad)  
   140011e0c:	(bad)  
   140011e0d:	push   rax
   140011e0e:	add    BYTE PTR [rax],al
   140011e10:	and    ah,ch
   140011e12:	add    BYTE PTR [rax],al
   140011e14:	mov    al,0x5
   140011e16:	add    BYTE PTR [rax],al
   140011e18:	sbb    DWORD PTR [rax],esi
   140011e1a:	or     eax,DWORD PTR [rax]
   140011e1c:	(bad)  
   140011e1d:	xor    al,0x88
   140011e1f:	add    BYTE PTR [rdi],bl
   140011e21:	add    DWORD PTR [rax+0xef01000],eax
   140011e27:	loopne 0x140011e35
   140011e29:	ror    BYTE PTR [rdx],1
   140011e2b:	ror    BYTE PTR [rax],0x70
   140011e2e:	(bad)  
   140011e2f:	(bad)  
   140011e30:	(bad)  
   140011e31:	push   rax
   140011e32:	add    BYTE PTR [rax],al
   140011e34:	and    ah,ch
   140011e36:	add    BYTE PTR [rax],al
   140011e38:	lock add eax,DWORD PTR [rax]
   140011e3b:	add    BYTE PTR [rcx],al
   140011e3d:	sbb    al,0xc
   140011e3f:	add    BYTE PTR [rsp+riz*2],bl
   140011e42:	or     al,0x0
   140011e44:	sbb    al,0x54
   140011e46:	or     eax,DWORD PTR [rax]
   140011e48:	sbb    al,0x34
   140011e4a:	or     al,BYTE PTR [rax]
   140011e4c:	sbb    al,0x32
   140011e4e:	sbb    al,dh
   140011e50:	(bad)  
   140011e51:	loopne 0x140011e67
   140011e53:	rcl    BYTE PTR [rdx],1
   140011e55:	rcl    BYTE PTR [rax],0x70
   140011e58:	add    DWORD PTR [rip+0x74150008],edx        # 0x1b4161e66
   140011e5e:	or     BYTE PTR [rax],al
   140011e60:	adc    eax,0x15000764
   140011e65:	xor    al,0x6
   140011e67:	add    BYTE PTR [rip+0x1e01132],dl        # 0x141e12f9f
   140011e6d:	clts   
   140011e6f:	add    BYTE PTR [rdi],cl
   140011e71:	fs (bad) 
   140011e73:	add    BYTE PTR [rdi],cl
   140011e75:	xor    al,0x6
   140011e77:	add    BYTE PTR [rdi],cl
   140011e79:	xor    cl,BYTE PTR [rbx]
   140011e7b:	jo     0x140011e96
   140011e7d:	and    DWORD PTR [rdi],eax
   140011e7f:	add    BYTE PTR [rcx],bl
   140011e81:	add    DWORD PTR [rdx],esp
   140011e83:	add    BYTE PTR [rdx],dl
   140011e85:	lock adc al,ah
   140011e88:	(bad)  
   140011e89:	jo     0x140011e98
   140011e8b:	(bad)  
   140011e8c:	or     al,0x30
   140011e8e:	add    BYTE PTR [rax],al
   140011e90:	adc    al,0xec
   140011e92:	add    BYTE PTR [rax],al
   140011e94:	js     0x140011ea4
   140011e96:	add    DWORD PTR [rax],eax
   140011e98:	(bad)  
   140011e99:	(bad)  
   140011e9a:	(bad)  
   140011e9b:	call   rbp
   140011e9d:	icebp  
	...
   140011ea6:	add    BYTE PTR [rax],al
   140011ea8:	add    DWORD PTR [rax],eax
   140011eaa:	add    BYTE PTR [rax],al
   140011eac:	jrcxz  0x140011e9f
   140011eae:	add    BYTE PTR [rax],al
   140011eb0:	add    DWORD PTR [rax],eax
   140011eb2:	add    BYTE PTR [rax],al
   140011eb4:	out    dx,eax
   140011eb5:	icebp  
   140011eb6:	add    BYTE PTR [rax],al
   140011eb8:	add    DWORD PTR [rax],eax
   140011eba:	add    BYTE PTR [rax],al
   140011ebc:	sti    
   140011ebd:	icebp  
   140011ebe:	add    BYTE PTR [rax],al
   140011ec0:	add    al,0x0
   140011ec2:	add    BYTE PTR [rax],al
   140011ec4:	(bad)  
   140011ec5:	repnz add BYTE PTR [rax],al
	...
   140011ed0:	add    DWORD PTR [rax],eax
   140011ed2:	add    BYTE PTR [rax],al
   140011ed4:	add    eax,0x6000000
   140011ed9:	add    BYTE PTR [rax],al
   140011edb:	add    BYTE PTR [rcx],al
   140011edd:	add    BYTE PTR [rax],al
   140011edf:	add    ah,ah
   140011ee1:	(bad)  
   140011ee2:	add    DWORD PTR [rax],eax
   140011ee4:	or     BYTE PTR [rax],al
   140011ee6:	add    BYTE PTR [rax],al
   140011ee8:	and    BYTE PTR [rax+0x1],dl
   140011eeb:	add    BYTE PTR [rax],al
   140011eed:	add    DWORD PTR [rax],eax
   140011eef:	add    BYTE PTR [rbx],dl
   140011ef1:	repnz add BYTE PTR [rax],al
   140011ef4:	mov    BYTE PTR [rax],al
	...
   140011efe:	add    BYTE PTR [rax],al
   140011f00:	sbb    BYTE PTR [rdi+0x0],dl
   140011f03:	add    bh,bh
   140011f05:	(bad)  
   140011f06:	(bad)  
   140011f07:	call   FWORD PTR [rdx+0x57]
   140011f0a:	add    BYTE PTR [rax],al
   140011f0c:	add    BYTE PTR [rax],al
   140011f0e:	add    BYTE PTR [rax],al
   140011f10:	sahf   
   140011f11:	push   rdi
   140011f12:	add    BYTE PTR [rax],al
   140011f14:	add    DWORD PTR [rax],eax
   140011f16:	add    BYTE PTR [rax],al
   140011f18:	mov    al,0x57
   140011f1a:	add    BYTE PTR [rax],al
   140011f1c:	add    al,BYTE PTR [rax]
   140011f1e:	add    BYTE PTR [rax],al
   140011f20:	repnz push rdi
   140011f22:	add    BYTE PTR [rax],al
   140011f24:	add    DWORD PTR [rax],eax
   140011f26:	add    BYTE PTR [rax],al
   140011f28:	ins    BYTE PTR es:[rdi],dx
   140011f29:	pop    rax
   140011f2a:	add    BYTE PTR [rax],al
   140011f2c:	(bad)  
   140011f2d:	(bad)  
   140011f2e:	(bad)  
   140011f2f:	inc    DWORD PTR [rax+rbx*2+0x10000]
   140011f36:	add    BYTE PTR [rax],al
   140011f38:	xchg   esi,eax
   140011f39:	pop    rax
   140011f3a:	add    BYTE PTR [rax],al
   140011f3c:	add    eax,DWORD PTR [rax]
   140011f3e:	add    BYTE PTR [rax],al
   140011f40:	fcomp  DWORD PTR [rax+0x0]
   140011f43:	add    BYTE PTR [rcx],al
   140011f45:	add    BYTE PTR [rax],al
   140011f47:	add    BYTE PTR [rdx+0x59],dl
   140011f4a:	add    BYTE PTR [rax],al
   140011f4c:	(bad)  
   140011f4d:	(bad)  
   140011f4e:	(bad)  
   140011f4f:	jmp    FWORD PTR [rdx+0x59]
   140011f52:	add    BYTE PTR [rax],al
   140011f54:	add    DWORD PTR [rax],eax
   140011f56:	add    BYTE PTR [rax],al
   140011f58:	(bad)  
   140011f59:	pop    rcx
   140011f5a:	add    BYTE PTR [rax],al
   140011f5c:	(bad)  
   140011f5d:	(bad)  
   140011f5e:	(bad)  
   140011f5f:	call   QWORD PTR [rsi]
   140011f61:	pop    rdx
   140011f62:	add    BYTE PTR [rax],al
   140011f64:	add    DWORD PTR [rax],eax
   140011f66:	add    BYTE PTR [rax],al
   140011f68:	cmp    BYTE PTR [rbx+0x0],bl
   140011f6b:	add    BYTE PTR [rax+rax*1],al
   140011f6e:	add    BYTE PTR [rax],al
   140011f70:	rex.WX pop rbx
   140011f72:	add    BYTE PTR [rax],al
   140011f74:	add    eax,0xb1000000
   140011f79:	pop    rbx
   140011f7a:	add    BYTE PTR [rax],al
   140011f7c:	add    al,0x0
   140011f7e:	add    BYTE PTR [rax],al
   140011f80:	mov    esp,0x100005b
   140011f85:	add    BYTE PTR [rax],al
   140011f87:	add    BYTE PTR [rsp+rbx*2+0x0],al
   140011f8b:	add    bh,bh
   140011f8d:	(bad)  
   140011f8e:	(bad)  
   140011f8f:	call   FWORD PTR [rsp+rbx*2+0x0]
   140011f93:	add    BYTE PTR [rcx],al
   140011f95:	add    BYTE PTR [rax],al
   140011f97:	add    BYTE PTR [rbx*2-0x10000],al
   140011f9e:	(bad)  
   140011f9f:	call   FWORD PTR [rbx*2+0x10000]
   140011fa6:	add    BYTE PTR [rax],al
   140011fa8:	(bad)
   140011fab:	add    bh,bh
   140011fad:	(bad)  
   140011fae:	(bad)  
   140011faf:	(bad)  
   140011fb0:	fstp   QWORD PTR [rbp+0x0]
   140011fb3:	add    BYTE PTR [rax],al
   140011fb5:	add    BYTE PTR [rax],al
   140011fb7:	add    BYTE PTR [rip+0xffffffffff00005f],ah        # 0x13f01201c
   140011fbd:	(bad)  
   140011fbe:	(bad)  
   140011fbf:	call   QWORD PTR [rbx]
   140011fc1:	repnz add BYTE PTR [rax],al
   140011fc4:	add    BYTE PTR [rax],al
   140011fc6:	add    BYTE PTR [rax],al
   140011fc8:	and    edx,esi
   140011fca:	add    BYTE PTR [rax],al
   140011fcc:	(bad)  
   140011fcd:	add    BYTE PTR [rax],al
   140011fcf:	add    BYTE PTR [rsi+0xf2],ah
   140011fd5:	add    BYTE PTR [rax],al
   140011fd7:	add    BYTE PTR [rcx],bl
   140011fd9:	or     eax,DWORD PTR [rbx]
   140011fdb:	add    BYTE PTR [rbx],cl
   140011fdd:	ret    0x5007
   140011fe0:	(bad)  
   140011fe1:	xor    BYTE PTR [rax],al
   140011fe3:	add    BYTE PTR [rsp+rbp*8],dl
   140011fe6:	add    BYTE PTR [rax],al
   140011fe8:	js     0x140011ff8
   140011fea:	add    DWORD PTR [rax],eax
   140011fec:	sbb    DWORD PTR [rdi],ecx
   140011fee:	add    al,BYTE PTR [rax]
   140011ff0:	(bad)  
   140011ff1:	mov    dl,0x2
   140011ff3:	xor    BYTE PTR [rsp+rbp*8],dl
   140011ff6:	add    BYTE PTR [rax],al
   140011ff8:	push   rax
   140011ff9:	(bad)  
   140011ffa:	add    DWORD PTR [rax],eax
   140011ffc:	(bad)  
   140011ffd:	(bad)  
   140011ffe:	(bad)  
   140011fff:	inc    DWORD PTR [rax]
   140012001:	add    BYTE PTR [rax],al
   140012003:	add    bh,bh
   140012005:	(bad)  
   140012006:	(bad)  
   140012007:	inc    DWORD PTR [rax]
	...
   140012011:	add    BYTE PTR [rax],al
   140012013:	add    BYTE PTR [rcx],al
   140012015:	add    BYTE PTR [rax],al
   140012017:	add    BYTE PTR [rcx],al
   140012019:	add    BYTE PTR [rax],al
   14001201b:	add    BYTE PTR [rax],ah
   14001201d:	and    BYTE PTR [rcx],al
   14001201f:	add    BYTE PTR [rax],cl
   140012021:	add    BYTE PTR [rax],al
   140012023:	add    BYTE PTR [rax],ah
   140012025:	push   rax
   140012026:	add    DWORD PTR [rax],eax
   140012028:	pop    rax
   140012029:	add    BYTE PTR [rax],al
   14001202b:	add    BYTE PTR [rbx+0x780000f2],bh
   140012031:	add    BYTE PTR [rax],al
   140012033:	add    BYTE PTR [rax],al
   140012035:	add    BYTE PTR [rax],al
   140012037:	add    BYTE PTR [rax+0x5f],ah
   14001203a:	add    BYTE PTR [rax],al
   14001203c:	(bad)  
   14001203d:	(bad)  
   14001203e:	(bad)  
   14001203f:	push   QWORD PTR [rdx+0x5f]
   140012042:	add    BYTE PTR [rax],al
   140012044:	add    BYTE PTR [rax],al
   140012046:	add    BYTE PTR [rax],al
   140012048:	repnz pop rdi
   14001204a:	add    BYTE PTR [rax],al
   14001204c:	(bad)  
   14001204d:	(bad)  
   14001204e:	(bad)  
   14001204f:	(bad)  
   140012050:	mov    ebx,0xf2
   140012055:	add    BYTE PTR [rax],al
   140012057:	add    cl,cl
   140012059:	repnz add BYTE PTR [rax],al
   14001205c:	add    DWORD PTR [rax],eax
   14001205e:	add    BYTE PTR [rax],al
   140012060:	adc    eax,0xf3
   140012065:	add    BYTE PTR [rax],al
   140012067:	add    BYTE PTR [rcx],bl
   140012069:	or     eax,DWORD PTR [rbx]
   14001206b:	add    BYTE PTR [rbx],cl
   14001206d:	movabs ds:0xec14000030065007,al
   140012076:	add    BYTE PTR [rax],al
   140012078:	push   rax
   140012079:	(bad)  
   14001207a:	add    DWORD PTR [rax],eax
   14001207c:	adc    DWORD PTR [rsi],ebx
   14001207e:	or     BYTE PTR [rax],al
   140012080:	(bad)  
   140012081:	fs adc al,0x0
   140012084:	sbb    dh,BYTE PTR [rbx+rdx*1]
   140012087:	add    BYTE PTR [rsi],cl
   140012089:	rol    BYTE PTR [rdi],cl
   14001208b:	loopne 0x140012092
   14001208d:	jo     0x140012093
   14001208f:	push   rax
   140012090:	adc    al,0xec
   140012092:	add    BYTE PTR [rax],al
   140012094:	sub    BYTE PTR [rsi],cl
   140012096:	add    DWORD PTR [rax],eax
   140012098:	(bad)  
   140012099:	(bad)  
   14001209a:	(bad)  
   14001209b:	jmp    FWORD PTR [rdx]
   14001209d:	repz add BYTE PTR [rax],al
   1400120a0:	add    BYTE PTR [rax],al
   1400120a2:	add    BYTE PTR [rax],al
   1400120a4:	repz add BYTE PTR ss:[rax],al
   1400120a8:	or     BYTE PTR [rax+0x0],ah
   1400120ab:	add    bh,bh
   1400120ad:	(bad)  
   1400120ae:	(bad)  
   1400120af:	call   QWORD PTR [rbx+0x60]
   1400120b5:	add    BYTE PTR [rax],al
   1400120b7:	add    BYTE PTR [rcx+0x1000060],ah
   1400120bd:	add    BYTE PTR [rax],al
   1400120bf:	add    BYTE PTR [rsi+0x60],dh
   1400120c5:	add    BYTE PTR [rax],al
   1400120c7:	add    al,al
   1400120c9:	(bad)  
   1400120ca:	add    BYTE PTR [rax],al
   1400120cc:	(bad)  
   1400120cd:	(bad)  
   1400120ce:	(bad)  
   1400120cf:	call   FWORD PTR [rcx]
   1400120d1:	xor    DWORD PTR [rcx],ecx
   1400120d3:	add    BYTE PTR [rbx],dl
   1400120d5:	add    DWORD PTR [rcx+rax*1+0xc],esi
   1400120d9:	lock or ah,al
   1400120dc:	or     al,dl
   1400120de:	(bad)  
   1400120df:	rol    BYTE PTR [rax+rsi*2],0x3
   1400120e3:	(bad)  
   1400120e4:	add    dh,BYTE PTR [rax]
   1400120e6:	add    BYTE PTR [rax],al
   1400120e8:	mov    al,0xec
   1400120ea:	add    BYTE PTR [rax],al
   1400120ec:	add    BYTE PTR [rsi],cl
   1400120ee:	add    DWORD PTR [rax],eax
   1400120f0:	xchg   ebx,eax
   1400120f1:	or     eax,DWORD PTR [rax]
   1400120f3:	add    bh,bh
   1400120f5:	(bad)  
   1400120f6:	(bad)  
   1400120f7:	dec    DWORD PTR [rax-0xd]
   1400120fa:	add    BYTE PTR [rax],al
   1400120fc:	add    BYTE PTR [rax],al
   1400120fe:	add    BYTE PTR [rax],al
   140012100:	push   rsi
   140012101:	repz add BYTE PTR [rax],al
   140012104:	add    DWORD PTR [rax],eax
   140012106:	add    BYTE PTR [rax],al
   140012108:	repz add BYTE PTR fs:[rax],al
   14001210c:	add    al,BYTE PTR [rax]
   14001210e:	add    BYTE PTR [rax],al
   140012110:	jb     0x140012105
   140012112:	add    BYTE PTR [rax],al
   140012114:	add    eax,DWORD PTR [rax]
   140012116:	add    BYTE PTR [rax],al
   140012118:	xor    bl,0x0
   14001211b:	add    BYTE PTR [rax+rax*1],al
   14001211e:	add    BYTE PTR [rax],al
   140012120:	add    BYTE PTR [rax],al
   140012122:	add    BYTE PTR [rax],al
   140012124:	add    al,0x0
   140012126:	add    BYTE PTR [rax],al
   140012128:	add    BYTE PTR [rax],al
   14001212a:	add    BYTE PTR [rax],al
   14001212c:	add    eax,0x5000000
   140012131:	add    BYTE PTR [rax],al
   140012133:	add    BYTE PTR [rsi],al
   140012135:	add    BYTE PTR [rax],al
   140012137:	add    BYTE PTR [rcx],al
   140012139:	add    BYTE PTR [rax],al
   14001213b:	add    BYTE PTR [rax+0x21],al
   14001213e:	add    DWORD PTR [rax],eax
   140012140:	add    BYTE PTR [rax],al
   140012142:	add    BYTE PTR [rax],al
   140012144:	and    BYTE PTR [rax+0x1],dl
   140012147:	add    BYTE PTR [rax],al
   140012149:	add    BYTE PTR [rax],al
   14001214b:	add    BYTE PTR [rsi+0x680000f3],cl
	...
   14001215d:	add    BYTE PTR [rax],al
   14001215f:	add    ah,bh
   140012161:	add    BYTE PTR fs:[rax],al
   140012164:	(bad)  
   140012165:	(bad)  
   140012166:	(bad)  
   140012167:	dec    DWORD PTR [rbx+0x65]
   14001216a:	add    BYTE PTR [rax],al
   14001216c:	add    BYTE PTR [rax],al
   14001216e:	add    BYTE PTR [rax],al
   140012170:	push   0x1000065
   140012175:	add    BYTE PTR [rax],al
   140012177:	add    BYTE PTR [rbp+riz*2+0x0],dh
   14001217b:	add    BYTE PTR [rdx],al
   14001217d:	add    BYTE PTR [rax],al
   14001217f:	add    BYTE PTR [rax+0x3000065],al
   140012185:	add    BYTE PTR [rax],al
   140012187:	add    BYTE PTR [rbp+riz*2+0x40000],cl
   14001218e:	add    BYTE PTR [rax],al
   140012190:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140012191:	add    BYTE PTR gs:[rax],al
   140012194:	add    eax,DWORD PTR [rax]
   140012196:	add    BYTE PTR [rax],al
   140012198:	mov    bl,0x65
   14001219a:	add    BYTE PTR [rax],al
   14001219c:	add    al,BYTE PTR [rax]
   14001219e:	add    BYTE PTR [rax],al
   1400121a0:	mov    edi,0x1000065
   1400121a5:	add    BYTE PTR [rax],al
   1400121a7:	add    bl,cl
   1400121a9:	add    BYTE PTR gs:[rax],al
   1400121ac:	add    BYTE PTR [rax],al
   1400121ae:	add    BYTE PTR [rax],al
   1400121b0:	xlat   BYTE PTR ds:[rbx]
   1400121b1:	add    BYTE PTR gs:[rax],al
   1400121b4:	(bad)  
   1400121b5:	(bad)  
   1400121b6:	(bad)  
   1400121b7:	jmp    rdi
   1400121b9:	add    BYTE PTR gs:[rax],al
   1400121bc:	add    al,0x0
   1400121be:	add    BYTE PTR [rax],al
   1400121c0:	jae    0x140012229
   1400121c2:	add    BYTE PTR [rax],al
   1400121c4:	add    eax,0xa9000000
   1400121c9:	push   0x40000
   1400121ce:	add    BYTE PTR [rax],al
   1400121d0:	std    
   1400121d1:	push   0x0
   1400121d3:	add    BYTE PTR [rbx],al
   1400121d5:	add    BYTE PTR [rax],al
   1400121d7:	add    BYTE PTR [rcx],cl
   1400121d9:	imul   eax,DWORD PTR [rax],0x0
   1400121dc:	add    al,BYTE PTR [rax]
   1400121de:	add    BYTE PTR [rax],al
   1400121e0:	adc    eax,0x100006b
   1400121e5:	add    BYTE PTR [rax],al
   1400121e7:	add    BYTE PTR [rcx],ah
   1400121e9:	imul   eax,DWORD PTR [rax],0x0
   1400121ec:	add    BYTE PTR [rax],al
   1400121ee:	add    BYTE PTR [rax],al
   1400121f0:	sub    eax,0xff00006b
   1400121f5:	(bad)  
   1400121f6:	(bad)  
   1400121f7:	push   QWORD PTR [rip+0x400006b]        # 0x144012268
   1400121fd:	add    BYTE PTR [rax],al
   1400121ff:	add    BYTE PTR [rbx+0x6b],dl
   140012202:	add    BYTE PTR [rax],al
   140012204:	add    eax,DWORD PTR [rax]
   140012206:	add    BYTE PTR [rax],al
   140012208:	pop    rdi
   140012209:	imul   eax,DWORD PTR [rax],0x0
   14001220c:	add    al,BYTE PTR [rax]
   14001220e:	add    BYTE PTR [rax],al
   140012210:	imul   ebp,DWORD PTR [rbx+0x0],0x0
   140012214:	add    DWORD PTR [rax],eax
   140012216:	add    BYTE PTR [rax],al
   140012218:	ja     0x140012285
   14001221a:	add    BYTE PTR [rax],al
   14001221c:	add    BYTE PTR [rax],al
   14001221e:	add    BYTE PTR [rax],al
   140012220:	sub    DWORD PTR [rbx+0x0],0x0
   140012224:	(bad)  
   140012225:	(bad)  
   140012226:	(bad)  
   140012227:	dec    DWORD PTR [rsi+0xf3]
   14001222d:	add    BYTE PTR [rax],al
   14001222f:	add    BYTE PTR [rsi+0x60000f3],bl
   140012235:	add    BYTE PTR [rax],al
   140012237:	add    dh,ch
   140012239:	repz add BYTE PTR [rax],al
   14001223c:	add    BYTE PTR [rax],al
   14001223e:	add    BYTE PTR [rax],al
   140012240:	sbb    DWORD PTR [rip+0x620d0005],ecx        # 0x1a20e224b
   140012246:	or     DWORD PTR [rax+0x8],esi
   140012249:	(bad)  
   14001224a:	(bad)  
   14001224b:	push   rax
   14001224c:	(bad)  
   14001224d:	xor    BYTE PTR [rax],al
   14001224f:	add    BYTE PTR [rsp+rbp*8],dl
   140012252:	add    BYTE PTR [rax],al
   140012254:	add    BYTE PTR [rsi],cl
   140012256:	add    DWORD PTR [rax],eax
   140012258:	add    DWORD PTR [rax],edx
   14001225a:	(bad)  
   14001225b:	add    BYTE PTR [rax],dl
   14001225d:	or     eax,DWORD PTR fs:[rax]
   140012260:	adc    BYTE PTR [rdx+rcx*1],dh
   140012263:	add    BYTE PTR [rax],dl
   140012265:	jb     0x140012273
   140012267:	jo     0x14001226a
   140012269:	adc    al,BYTE PTR [rip+0xe421200]        # 0x14e43346f
   14001226f:	jo     0x14001227e
   140012271:	(bad)  
   140012272:	or     al,0x50
   140012274:	or     esi,DWORD PTR [rax]
   140012276:	add    BYTE PTR [rax],al
   140012278:	adc    DWORD PTR [rbx],ebx
   14001227a:	(bad)  
   14001227b:	add    BYTE PTR [rbx],bl
   14001227d:	je     0x14001228a
   14001227f:	add    BYTE PTR [rsi],dl
   140012281:	xor    al,0x9
   140012283:	add    BYTE PTR [rcx],cl
   140012285:	push   rdx
   140012286:	add    dl,BYTE PTR [rax+0x14]
   140012289:	in     al,dx
   14001228a:	add    BYTE PTR [rax],al
   14001228c:	adc    BYTE PTR [rax],0x1
   14001228f:	add    bh,bh
   140012291:	(bad)  
   140012292:	(bad)  
   140012293:	inc    DWORD PTR [rip+0xf4]        # 0x14001238d
   140012299:	add    BYTE PTR [rax],al
   14001229b:	add    BYTE PTR [rbx],dl
   14001229d:	hlt    
   14001229e:	add    BYTE PTR [rax],al
   1400122a0:	and    al,0x6d
   1400122a2:	add    BYTE PTR [rax],al
   1400122a4:	(bad)  
   1400122a5:	(bad)  
   1400122a6:	(bad)  
   1400122a7:	call   QWORD PTR [rax+0x6d]
   1400122aa:	add    BYTE PTR [rax],al
   1400122ac:	add    BYTE PTR [rax],al
   1400122ae:	add    BYTE PTR [rax],al
   1400122b0:	mov    gs,WORD PTR [rbp+0x0]
   1400122b3:	add    BYTE PTR [rcx],al
   1400122b5:	add    BYTE PTR [rax],al
   1400122b7:	add    BYTE PTR [rbp+rbp*2+0x0],bl
   1400122be:	add    BYTE PTR [rax],al
   1400122c0:	std    
   1400122c1:	ins    DWORD PTR es:[rdi],dx
   1400122c2:	add    BYTE PTR [rax],al
   1400122c4:	(bad)  
   1400122c5:	(bad)  
   1400122c6:	(bad)  
   1400122c7:	call   FWORD PTR [rcx]
   1400122c9:	sub    DWORD PTR [rcx],ecx
   1400122cb:	add    BYTE PTR [rcx],ah
   1400122cd:	add    DWORD PTR [rsi],edx
   1400122cf:	add    BYTE PTR [rdx],bl
   1400122d1:	lock sbb al,ah
   1400122d4:	(bad)  
   1400122d5:	rcl    BYTE PTR [rax+rax*8],1
   1400122d8:	adc    dh,BYTE PTR [rax+0x11]
   1400122db:	(bad)  
   1400122dc:	adc    BYTE PTR [rax],dh
   1400122de:	add    BYTE PTR [rax],al
   1400122e0:	adc    al,0xec
   1400122e2:	add    BYTE PTR [rax],al
   1400122e4:	pop    rax
   1400122e5:	adc    BYTE PTR [rcx],al
   1400122e7:	add    bh,bh
   1400122e9:	(bad)  
   1400122ea:	(bad)  
   1400122eb:	jmp    QWORD PTR [rdi]
   1400122ed:	hlt    
   1400122ee:	add    BYTE PTR [rax],al
   1400122f0:	add    BYTE PTR [rax],al
   1400122f2:	add    BYTE PTR [rax],al
   1400122f4:	xor    esi,esp
   1400122f6:	add    BYTE PTR [rax],al
   1400122f8:	add    DWORD PTR [rax],eax
   1400122fa:	add    BYTE PTR [rax],al
   1400122fc:	(bad)  
   1400122fd:	hlt    
   1400122fe:	add    BYTE PTR [rax],al
   140012300:	add    al,BYTE PTR [rax]
   140012302:	add    BYTE PTR [rax],al
   140012304:	rex.WXB hlt 
   140012306:	add    BYTE PTR [rax],al
   140012308:	add    eax,DWORD PTR [rax]
   14001230a:	add    BYTE PTR [rax],al
   14001230c:	add    BYTE PTR [rax],al
   14001230e:	add    BYTE PTR [rax],al
   140012310:	add    al,0x0
   140012312:	add    BYTE PTR [rax],al
   140012314:	push   rdi
   140012315:	hlt    
   140012316:	add    BYTE PTR [rax],al
   140012318:	add    eax,0x63000000
   14001231d:	hlt    
   14001231e:	add    BYTE PTR [rax],al
   140012320:	(bad)  
   140012321:	add    BYTE PTR [rax],al
   140012323:	add    BYTE PTR [rdi-0xc],ch
   140012326:	add    BYTE PTR [rax],al
   140012328:	(bad)  
   140012329:	add    BYTE PTR [rax],al
   14001232b:	add    BYTE PTR [rbx-0xc],bh
   14001232e:	add    BYTE PTR [rax],al
   140012330:	add    al,0x0
   140012332:	add    BYTE PTR [rax],al
   140012334:	xchg   esp,esi
   140012336:	add    BYTE PTR [rax],al
   140012338:	or     DWORD PTR [rax],eax
   14001233a:	add    BYTE PTR [rax],al
   14001233c:	xchg   ebx,eax
   14001233d:	hlt    
   14001233e:	add    BYTE PTR [rax],al
   140012340:	or     al,BYTE PTR [rax]
   140012342:	add    BYTE PTR [rax],al
   140012344:	lahf   
   140012345:	hlt    
   140012346:	add    BYTE PTR [rax],al
   140012348:	or     eax,DWORD PTR [rax]
   14001234a:	add    BYTE PTR [rax],al
   14001234c:	stos   DWORD PTR es:[rdi],eax
   14001234d:	hlt    
   14001234e:	add    BYTE PTR [rax],al
   140012350:	or     al,0x0
   140012352:	add    BYTE PTR [rax],al
   140012354:	mov    bh,0xf4
   140012356:	add    BYTE PTR [rax],al
   140012358:	add    al,0x0
   14001235a:	add    BYTE PTR [rax],al
   14001235c:	add    BYTE PTR [rax],al
   14001235e:	add    BYTE PTR [rax],al
   140012360:	add    eax,DWORD PTR [rax]
   140012362:	add    BYTE PTR [rax],al
   140012364:	add    BYTE PTR [rax],al
   140012366:	add    BYTE PTR [rax],al
   140012368:	add    al,0x0
   14001236a:	add    BYTE PTR [rax],al
   14001236c:	(bad)  
   14001236d:	add    BYTE PTR [rax],al
   14001236f:	add    BYTE PTR [rdi],cl
   140012371:	add    BYTE PTR [rax],al
   140012373:	add    BYTE PTR [rcx],al
   140012375:	add    BYTE PTR [rax],al
   140012377:	add    BYTE PTR [rbx+riz*1+0x1],bh
   14001237b:	add    BYTE PTR [rax],cl
   14001237d:	add    BYTE PTR [rax],al
   14001237f:	add    BYTE PTR [rax],ah
   140012381:	push   rax
   140012382:	add    DWORD PTR [rax],eax
   140012384:	test   al,0x0
   140012386:	add    BYTE PTR [rax],al
   140012388:	ret    
   140012389:	hlt    
   14001238a:	add    BYTE PTR [rax],al
   14001238c:	js     0x14001238e
   14001238e:	add    BYTE PTR [rax],al
   140012390:	and    BYTE PTR [rsi+0x0],ch
   140012393:	add    bh,bh
   140012395:	(bad)  
   140012396:	(bad)  
   140012397:	jmp    QWORD PTR [rcx+0x6e]
   14001239a:	add    BYTE PTR [rax],al
   14001239c:	add    BYTE PTR [rax],al
   14001239e:	add    BYTE PTR [rax],al
   1400123a0:	outs   dx,BYTE PTR gs:[rsi]
   1400123a2:	add    BYTE PTR [rax],al
   1400123a4:	add    DWORD PTR [rax],eax
   1400123a6:	add    BYTE PTR [rax],al
   1400123a8:	ins    BYTE PTR es:[rdi],dx
   1400123a9:	outs   dx,BYTE PTR ds:[rsi]
   1400123aa:	add    BYTE PTR [rax],al
   1400123ac:	add    al,BYTE PTR [rax]
   1400123ae:	add    BYTE PTR [rax],al
   1400123b0:	je     0x140012420
   1400123b2:	add    BYTE PTR [rax],al
   1400123b4:	add    eax,DWORD PTR [rax]
   1400123b6:	add    BYTE PTR [rax],al
   1400123b8:	xchg   ebp,eax
   1400123b9:	outs   dx,BYTE PTR ds:[rsi]
   1400123ba:	add    BYTE PTR [rax],al
   1400123bc:	add    al,0x0
   1400123be:	add    BYTE PTR [rax],al
   1400123c0:	mov    ah,0x6e
   1400123c2:	add    BYTE PTR [rax],al
   1400123c4:	add    al,BYTE PTR [rax]
   1400123c6:	add    BYTE PTR [rax],al
   1400123c8:	mov    edi,0x100006e
   1400123cd:	add    BYTE PTR [rax],al
   1400123cf:	add    dl,cl
   1400123d1:	outs   dx,BYTE PTR ds:[rsi]
   1400123d2:	add    BYTE PTR [rax],al
   1400123d4:	add    BYTE PTR [rax],al
   1400123d6:	add    BYTE PTR [rax],al
   1400123d8:	fsubr  DWORD PTR [rsi+0x0]
   1400123db:	add    bh,bh
   1400123dd:	(bad)  
   1400123de:	(bad)  
   1400123df:	(bad)  
   1400123e0:	in     al,dx
   1400123e1:	outs   dx,BYTE PTR ds:[rsi]
   1400123e2:	add    BYTE PTR [rax],al
   1400123e4:	add    al,0x0
   1400123e6:	add    BYTE PTR [rax],al
   1400123e8:	test   BYTE PTR [rdi+0x0],ch
   1400123eb:	add    BYTE PTR [rip+0xffffffff96000000],al        # 0xd60123f1
   1400123f1:	outs   dx,DWORD PTR ds:[rsi]
   1400123f2:	add    BYTE PTR [rax],al
   1400123f4:	(bad)  
   1400123f5:	add    BYTE PTR [rax],al
   1400123f7:	add    BYTE PTR [rcx+0x700006f],dh
   1400123fd:	add    BYTE PTR [rax],al
   1400123ff:	add    ah,al
   140012401:	outs   dx,DWORD PTR ds:[rsi]
   140012402:	add    BYTE PTR [rax],al
   140012404:	or     BYTE PTR [rax],al
   140012406:	add    BYTE PTR [rax],al
   140012408:	(bad)  
   140012409:	outs   dx,DWORD PTR ds:[rsi]
   14001240a:	add    BYTE PTR [rax],al
   14001240c:	(bad)  
   14001240d:	add    BYTE PTR [rax],al
   14001240f:	add    al,ah
   140012411:	outs   dx,DWORD PTR ds:[rsi]
   140012412:	add    BYTE PTR [rax],al
   140012414:	(bad)  
   140012415:	add    BYTE PTR [rax],al
   140012417:	add    dh,ch
   140012419:	outs   dx,DWORD PTR ds:[rsi]
   14001241a:	add    BYTE PTR [rax],al
   14001241c:	add    eax,0xf9000000
   140012421:	outs   dx,DWORD PTR ds:[rsi]
   140012422:	add    BYTE PTR [rax],al
   140012424:	add    al,0x0
   140012426:	add    BYTE PTR [rax],al
   140012428:	(bad)  
   140012429:	jo     0x14001242b
   14001242b:	add    BYTE PTR [rcx],cl
   14001242d:	add    BYTE PTR [rax],al
   14001242f:	add    BYTE PTR [rax],ah
   140012431:	jo     0x140012433
   140012433:	add    BYTE PTR [rdx],cl
   140012435:	add    BYTE PTR [rax],al
   140012437:	add    BYTE PTR [rsi],dh
   140012439:	jo     0x14001243b
   14001243b:	add    BYTE PTR [rbx],cl
   14001243d:	add    BYTE PTR [rax],al
   14001243f:	add    BYTE PTR [rcx+0x70],cl
   140012442:	add    BYTE PTR [rax],al
   140012444:	or     al,0x0
   140012446:	add    BYTE PTR [rax],al
   140012448:	pop    rdi
   140012449:	jo     0x14001244b
   14001244b:	add    BYTE PTR [rip+0x70000000],cl        # 0x1b0012451
   140012451:	jo     0x140012453
   140012453:	add    BYTE PTR [rax+rax*1],cl
   140012456:	add    BYTE PTR [rax],al
   140012458:	jle    0x1400124ca
   14001245a:	add    BYTE PTR [rax],al
   14001245c:	or     eax,DWORD PTR [rax]
   14001245e:	add    BYTE PTR [rax],al
   140012460:	mov    DWORD PTR [rax+0x0],esi
   140012463:	add    BYTE PTR [rdx],cl
   140012465:	add    BYTE PTR [rax],al
   140012467:	add    BYTE PTR [rdi+0x9000070],dl
   14001246d:	add    BYTE PTR [rax],al
   14001246f:	add    BYTE PTR [rdx+0x4000070],ah
   140012475:	add    BYTE PTR [rax],al
   140012477:	add    BYTE PTR [rip+0x3000073],cl        # 0x1430124f0
   14001247d:	add    BYTE PTR [rax],al
   14001247f:	add    BYTE PTR [rbx+rsi*2],ch
   140012482:	add    BYTE PTR [rax],al
   140012484:	add    al,BYTE PTR [rax]
   140012486:	add    BYTE PTR [rax],al
   140012488:	(bad)  
   140012489:	jae    0x14001248b
   14001248b:	add    BYTE PTR [rcx],al
   14001248d:	add    BYTE PTR [rax],al
   14001248f:	add    BYTE PTR [rdx+0x73],al
   140012492:	add    BYTE PTR [rax],al
   140012494:	add    BYTE PTR [rax],al
   140012496:	add    BYTE PTR [rax],al
   140012498:	push   rax
   140012499:	jae    0x14001249b
   14001249b:	add    bh,bh
   14001249d:	(bad)  
   14001249e:	(bad)  
   14001249f:	inc    ebx
   1400124a1:	hlt    
   1400124a2:	add    BYTE PTR [rax],al
   1400124a4:	add    BYTE PTR [rax],al
   1400124a6:	add    BYTE PTR [rax],al
   1400124a8:	shl    esp,1
   1400124aa:	add    BYTE PTR [rax],al
   1400124ac:	sldt   WORD PTR [rax]
   1400124af:	add    cl,dh
   1400124b1:	hlt    
   1400124b2:	add    BYTE PTR [rax],al
   1400124b4:	add    BYTE PTR [rax],al
   1400124b6:	add    BYTE PTR [rax],al
   1400124b8:	sbb    DWORD PTR [rbx],ecx
   1400124ba:	add    eax,DWORD PTR [rax]
   1400124bc:	or     esp,DWORD PTR [rdx+0x30065007]
   1400124c2:	add    BYTE PTR [rax],al
   1400124c4:	adc    al,0xec
   1400124c6:	add    BYTE PTR [rax],al
   1400124c8:	pop    rax
   1400124c9:	adc    BYTE PTR [rcx],al
   1400124cb:	add    BYTE PTR [rcx],bl
   1400124cd:	xor    BYTE PTR [rax],cl
   1400124cf:	add    BYTE PTR [rdx],dl
   1400124d1:	add    DWORD PTR [rdi+0x9f00b00],edx
   1400124d7:	loopne 0x1400124e0
   1400124d9:	rol    BYTE PTR [rip+0x27003c0],1        # 0x14271289f
   1400124df:	xor    BYTE PTR [rax-0x2fffff14],dh
   1400124e5:	adc    BYTE PTR [rcx],al
   1400124e7:	add    BYTE PTR [rbx-0xfffffc],ah
   1400124ed:	(bad)  
   1400124ee:	(bad)  
   1400124ef:	inc    DWORD PTR [rsi]
   1400124f1:	cmc    
	...
   140012512:	add    BYTE PTR [rax],al
   140012514:	add    DWORD PTR [rax],eax
   140012516:	add    BYTE PTR [rax],al
   140012518:	add    DWORD PTR [rax],eax
   14001251a:	add    BYTE PTR [rax],al
   14001251c:	add    al,BYTE PTR [rax]
   14001251e:	add    BYTE PTR [rax],al
   140012520:	add    DWORD PTR [rax],eax
   140012522:	add    BYTE PTR [rax],al
   140012524:	cmp    al,0x25
   140012526:	add    DWORD PTR [rax],eax
   140012528:	add    eax,DWORD PTR [rax]
   14001252a:	add    BYTE PTR [rax],al
   14001252c:	add    eax,DWORD PTR [rax]
   14001252e:	add    BYTE PTR [rax],al
   140012530:	add    al,0x0
   140012532:	add    BYTE PTR [rax],al
   140012534:	add    DWORD PTR [rax],eax
   140012536:	add    BYTE PTR [rax],al
   140012538:	push   rax
   140012539:	and    eax,0x1
	...
   140012546:	add    BYTE PTR [rax],al
   140012548:	adc    al,0xf5
   14001254a:	add    BYTE PTR [rax],al
   14001254c:	js     0x14001254e
	...
   14001255a:	add    BYTE PTR [rax],al
   14001255c:	jbe    0x140012553
   14001255e:	add    BYTE PTR [rax],al
   140012560:	js     0x140012562
	...
   14001256e:	add    BYTE PTR [rax],al
   140012570:	jl     0x1400125e5
   140012572:	add    BYTE PTR [rax],al
   140012574:	(bad)  
   140012575:	(bad)  
   140012576:	(bad)  
   140012577:	inc    DWORD PTR [rcx]
   140012579:	je     0x14001257b
   14001257b:	add    BYTE PTR [rax],al
   14001257d:	add    BYTE PTR [rax],al
   14001257f:	add    BYTE PTR [rcx+0x75],dl
   140012582:	add    BYTE PTR [rax],al
   140012584:	add    DWORD PTR [rax],eax
   140012586:	add    BYTE PTR [rax],al
   140012588:	ins    BYTE PTR es:[rdi],dx
   140012589:	jne    0x14001258b
   14001258b:	add    BYTE PTR [rax],al
   14001258d:	add    BYTE PTR [rax],al
   14001258f:	add    BYTE PTR [rbx+0x76],cl
   140012592:	add    BYTE PTR [rax],al
   140012594:	add    eax,DWORD PTR [rax]
   140012596:	add    BYTE PTR [rax],al
   140012598:	pop    rsi
   140012599:	jbe    0x14001259b
   14001259b:	add    BYTE PTR [rax],al
   14001259d:	add    BYTE PTR [rax],al
   14001259f:	add    BYTE PTR [rcx+0x77],ah
   1400125a2:	add    BYTE PTR [rax],al
   1400125a4:	(bad)  
   1400125a5:	(bad)  
   1400125a6:	(bad)  
   1400125a7:	push   QWORD PTR [rax+0x77]
   1400125aa:	add    BYTE PTR [rax],al
   1400125ac:	add    BYTE PTR [rax],al
   1400125ae:	add    BYTE PTR [rax],al
   1400125b0:	mov    bh,0x77
   1400125b2:	add    BYTE PTR [rax],al
   1400125b4:	(bad)  
   1400125b5:	(bad)  
   1400125b6:	(bad)  
   1400125b7:	call   QWORD PTR [rsi*8+0x0]
   1400125be:	add    BYTE PTR [rax],al
   1400125c0:	and    dh,ch
   1400125c2:	add    BYTE PTR [rax],al
   1400125c4:	add    al,BYTE PTR [rax]
   1400125c6:	add    BYTE PTR [rax],al
   1400125c8:	addr32 cmc 
   1400125ca:	add    BYTE PTR [rax],al
   1400125cc:	add    BYTE PTR [rax],al
   1400125ce:	add    BYTE PTR [rax],al
   1400125d0:	test   ch,dh
   1400125d2:	add    BYTE PTR [rax],al
   1400125d4:	add    al,0x0
   1400125d6:	add    BYTE PTR [rax],al
   1400125d8:	leave  
   1400125d9:	cmc    
   1400125da:	add    BYTE PTR [rax],al
   1400125dc:	add    BYTE PTR [rax],al
   1400125de:	add    BYTE PTR [rax],al
   1400125e0:	sbb    DWORD PTR [rbx],ecx
   1400125e2:	add    eax,DWORD PTR [rax]
   1400125e4:	or     esp,DWORD PTR [rdx+0x30065007]
   1400125ea:	add    BYTE PTR [rax],al
   1400125ec:	adc    al,0xec
   1400125ee:	add    BYTE PTR [rax],al
   1400125f0:	rcl    BYTE PTR [rax],1
   1400125f2:	add    DWORD PTR [rax],eax
   1400125f4:	add    DWORD PTR [rsi],ebx
   1400125f6:	or     al,BYTE PTR [rax]
   1400125f8:	(bad)  
   1400125f9:	adc    al,BYTE PTR fs:[rax]
   1400125fc:	(bad)  
   1400125fd:	xor    al,0x11
   1400125ff:	add    BYTE PTR [rsi],bl
   140012601:	xchg   edx,eax
   140012602:	(bad)  
   140012603:	lock adc eax,0x11c013e0
   140012609:	jo     0x14001261b
   14001260b:	push   rax
   14001260c:	add    DWORD PTR [rsi],eax
   14001260e:	add    al,BYTE PTR [rax]
   140012610:	(bad)  
   140012611:	xor    al,BYTE PTR [rdx]
   140012613:	xor    BYTE PTR [rcx],bl
   140012615:	lar    eax,WORD PTR [rax]
   140012618:	(bad)  
   140012619:	push   rdx
   14001261a:	add    dh,BYTE PTR [rax]
   14001261c:	adc    al,0xec
   14001261e:	add    BYTE PTR [rax],al
   140012620:	xor    BYTE PTR [rax],dl
   140012622:	add    DWORD PTR [rax],eax
   140012624:	(bad)  
   140012625:	(bad)  
   140012626:	(bad)  
   140012627:	(bad)  
   140012628:	fdivrp st(5),st
	...
   14001263a:	add    BYTE PTR [rax],al
   14001263c:	add    DWORD PTR [rax],eax
   14001263e:	add    BYTE PTR [rax],al
   140012640:	add    DWORD PTR [rax],eax
   140012642:	add    BYTE PTR [rax],al
   140012644:	add    al,BYTE PTR [rax]
   140012646:	add    BYTE PTR [rax],al
   140012648:	add    DWORD PTR [rax],eax
   14001264a:	add    BYTE PTR [rax],al
   14001264c:	push   rax
   14001264d:	add    DWORD PTR es:[rax],eax
	...
   14001265c:	in     al,dx
   14001265d:	cmc    
   14001265e:	add    BYTE PTR [rax],al
   140012660:	cmp    BYTE PTR [rax],al
	...
   14001266e:	add    BYTE PTR [rax],al
   140012670:	enter  0x7b,0x0
   140012674:	(bad)  
   140012675:	(bad)  
   140012676:	(bad)  
   140012677:	jmp    rsi
   140012679:	jnp    0x14001267b
   14001267b:	add    BYTE PTR [rcx],al
   14001267d:	add    BYTE PTR [rax],al
   14001267f:	add    BYTE PTR [rdx],cl
   140012681:	jl     0x140012683
   140012683:	add    bh,bh
   140012685:	(bad)  
   140012686:	(bad)  
   140012687:	call   FWORD PTR [rcx]
   140012689:	jl     0x14001268b
   14001268b:	add    BYTE PTR [rcx],al
   14001268d:	add    BYTE PTR [rax],al
   14001268f:	add    BYTE PTR [rax],dh
   140012691:	jl     0x140012693
   140012693:	add    bh,bh
   140012695:	(bad)  
   140012696:	(bad)  
   140012697:	(bad)  
   140012698:	in     al,dx
   140012699:	cmc    
   14001269a:	add    BYTE PTR [rax],al
   14001269c:	add    BYTE PTR [rax],al
   14001269e:	add    BYTE PTR [rax],al
   1400126a0:	stc    
   1400126a1:	cmc    
   1400126a2:	add    BYTE PTR [rax],al
   1400126a4:	add    al,BYTE PTR [rax]
   1400126a6:	add    BYTE PTR [rax],al
   1400126a8:	add    eax,0xf6
   1400126ad:	add    BYTE PTR [rax],al
   1400126af:	add    BYTE PTR [rcx],bl
   1400126b1:	or     al,BYTE PTR [rdx]
   1400126b3:	add    BYTE PTR [rdx],cl
   1400126b5:	xor    al,BYTE PTR [rsi]
   1400126b7:	push   rax
   1400126b8:	adc    al,0xec
   1400126ba:	add    BYTE PTR [rax],al
   1400126bc:	xor    BYTE PTR [rax],dl
   1400126be:	add    DWORD PTR [rax],eax
   1400126c0:	adc    DWORD PTR [rsi],esp
   1400126c2:	or     al,BYTE PTR [rax]
   1400126c4:	es adc eax,DWORD PTR fs:[rax]
   1400126c8:	and    dh,BYTE PTR [rdx+rdx*1]
   1400126cb:	add    BYTE PTR [rsi],dl
   1400126cd:	xchg   edx,eax
   1400126ce:	(bad)  
   1400126d0:	or     eax,0x9c00be0
   1400126d5:	jo     0x1400126df
   1400126d7:	push   rax
   1400126d8:	adc    al,0xec
   1400126da:	add    BYTE PTR [rax],al
   1400126dc:	or     BYTE PTR [rax],dl
   1400126de:	add    DWORD PTR [rax],eax
   1400126e0:	(bad)  
   1400126e1:	(bad)  
   1400126e2:	(bad)  
   1400126e3:	call   FWORD PTR [rcx]
   1400126e5:	test   BYTE PTR [rax],0x0
   1400126e8:	add    BYTE PTR [rax],al
   1400126ea:	add    BYTE PTR [rax],al
   1400126ec:	(bad)  
   1400126ed:	test   BYTE PTR [rax],0x0
   1400126f0:	add    DWORD PTR [rax],eax
   1400126f2:	add    BYTE PTR [rax],al
   1400126f4:	xor    eax,0x10000f6
   1400126f9:	add    BYTE PTR [rax],al
   1400126fb:	add    BYTE PTR [rbx-0xa],al
   1400126fe:	add    BYTE PTR [rax],al
   140012700:	ins    BYTE PTR es:[rdi],dx
   140012701:	jl     0x140012703
   140012703:	add    bh,bh
   140012705:	(bad)  
   140012706:	(bad)  
   140012707:	jmp    QWORD PTR [rsi+0x7c]
   14001270d:	add    BYTE PTR [rax],al
   14001270f:	add    BYTE PTR [rcx+0x100007c],dh
   140012715:	add    BYTE PTR [rax],al
   140012717:	add    BYTE PTR [rbx+0x7d],al
   14001271a:	add    BYTE PTR [rax],al
   14001271c:	add    al,BYTE PTR [rax]
   14001271e:	add    BYTE PTR [rax],al
   140012720:	push   rcx
   140012721:	jge    0x140012723
   140012723:	add    BYTE PTR [rcx],al
   140012725:	add    BYTE PTR [rax],al
   140012727:	add    BYTE PTR [rsi+0x7d],ch
   14001272a:	add    BYTE PTR [rax],al
   14001272c:	add    eax,DWORD PTR [rax]
   14001272e:	add    BYTE PTR [rax],al
   140012730:	jl     0x1400127af
   140012732:	add    BYTE PTR [rax],al
   140012734:	add    DWORD PTR [rax],eax
   140012736:	add    BYTE PTR [rax],al
   140012738:	loopne 0x1400127b7
   14001273a:	add    BYTE PTR [rax],al
   14001273c:	add    BYTE PTR [rax],al
   14001273e:	add    BYTE PTR [rax],al
   140012740:	jmp    0x1400127bf
   140012742:	add    BYTE PTR [rax],al
   140012744:	(bad)  
   140012745:	(bad)  
   140012746:	(bad)  
   140012747:	call   FWORD PTR [rcx]
   140012749:	(bad)  
   14001274a:	(bad)  
   14001274b:	add    BYTE PTR [rsi],cl
   14001274d:	xchg   edx,eax
   14001274e:	or     dh,al
   140012750:	or     al,ah
   140012752:	(bad)  
   140012753:	jo     0x14001275a
   140012755:	(bad)  
   140012756:	add    al,0x30
   140012758:	adc    al,0xec
   14001275a:	add    BYTE PTR [rax],al
   14001275c:	test   al,0x10
   14001275e:	add    DWORD PTR [rax],eax
   140012760:	(bad)  
   140012761:	(bad)  
   140012762:	(bad)  
   140012763:	call   QWORD PTR [rdi-0xa]
	...
   14001276e:	add    BYTE PTR [rax],al
   140012770:	add    DWORD PTR [rax],eax
   140012772:	add    BYTE PTR [rax],al
   140012774:	movsxd esi,esi
   140012776:	add    BYTE PTR [rax],al
   140012778:	add    DWORD PTR [rax],eax
   14001277a:	add    BYTE PTR [rax],al
   14001277c:	outs   dx,DWORD PTR ds:[rsi]
   14001277d:	test   BYTE PTR [rax],0x0
	...
   140012788:	add    al,0x0
   14001278a:	add    BYTE PTR [rax],al
   14001278c:	add    BYTE PTR [rax],al
   14001278e:	add    BYTE PTR [rax],al
   140012790:	add    al,0x0
   140012792:	add    BYTE PTR [rax],al
   140012794:	add    BYTE PTR [rax],al
   140012796:	add    BYTE PTR [rax],al
   140012798:	add    DWORD PTR [rax],eax
   14001279a:	add    BYTE PTR [rax],al
   14001279c:	add    eax,DWORD PTR [rax]
   14001279e:	add    BYTE PTR [rax],al
   1400127a0:	(bad)  
   1400127a1:	add    BYTE PTR [rax],al
   1400127a3:	add    BYTE PTR [rcx],al
   1400127a5:	add    BYTE PTR [rax],al
   1400127a7:	add    al,al
   1400127a9:	(bad)  
   1400127aa:	add    DWORD PTR [rax],eax
   1400127ac:	add    eax,0x5000000
   1400127b1:	add    BYTE PTR [rax],al
   1400127b3:	add    BYTE PTR [rsi],al
   1400127b5:	add    BYTE PTR [rax],al
   1400127b7:	add    BYTE PTR [rcx],al
   1400127b9:	add    BYTE PTR [rax],al
   1400127bb:	add    ah,dl
   1400127bd:	(bad)  
   1400127be:	add    DWORD PTR [rax],eax
   1400127c0:	or     BYTE PTR [rax],al
   1400127c2:	add    BYTE PTR [rax],al
   1400127c4:	and    BYTE PTR [rax+0x1],dl
   1400127c7:	add    BYTE PTR [rax],bh
   1400127c9:	add    BYTE PTR [rax],al
   1400127cb:	add    BYTE PTR [rbx-0xa],bh
   1400127ce:	add    BYTE PTR [rax],al
   1400127d0:	pop    rax
	...
   1400127dd:	add    BYTE PTR [rax],al
   1400127df:	add    BYTE PTR [rsi-0x9],al
   1400127e2:	add    BYTE PTR [rax],al
   1400127e4:	rex.W add BYTE PTR [rax],al
	...
   1400127ef:	add    BYTE PTR [rax],bl
   1400127f1:	jle    0x1400127f3
   1400127f3:	add    bh,bh
   1400127f5:	(bad)  
   1400127f6:	(bad)  
   1400127f7:	(bad)  
   1400127f8:	(bad)  
   1400127f9:	jle    0x1400127fb
   1400127fb:	add    BYTE PTR [rcx],al
   1400127fd:	add    BYTE PTR [rax],al
   1400127ff:	add    BYTE PTR [rdx+0x7e],dh
   140012802:	add    BYTE PTR [rax],al
   140012804:	add    al,BYTE PTR [rax]
   140012806:	add    BYTE PTR [rax],al
   140012808:	cmp    DWORD PTR [rsi+0x0],0x0
   14001280c:	add    DWORD PTR [rax],eax
   14001280e:	add    BYTE PTR [rax],al
   140012810:	test   eax,0xff00007e
   140012815:	(bad)  
   140012816:	(bad)  
   140012817:	(bad)  
   140012818:	mov    ebx,0x100007e
   14001281d:	add    BYTE PTR [rax],al
   14001281f:	add    BYTE PTR [rdi],bh
   140012821:	jg     0x140012823
   140012823:	add    BYTE PTR [rbx],al
   140012825:	add    BYTE PTR [rax],al
   140012827:	add    BYTE PTR [rax+0x7f],dl
   14001282a:	add    BYTE PTR [rax],al
   14001282c:	add    DWORD PTR [rax],eax
   14001282e:	add    BYTE PTR [rax],al
   140012830:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140012831:	jg     0x140012833
   140012833:	add    BYTE PTR [rax],al
   140012835:	add    BYTE PTR [rax],al
   140012837:	add    BYTE PTR [rax+0x100007f],bh
   14001283d:	add    BYTE PTR [rax],al
   14001283f:	add    cl,al
   140012841:	jg     0x140012843
   140012843:	add    bh,bh
   140012845:	(bad)  
   140012846:	(bad)  
   140012847:	(bad)  
   140012848:	jnp    0x140012840
   14001284a:	add    BYTE PTR [rax],al
   14001284c:	add    BYTE PTR [rax],al
   14001284e:	add    BYTE PTR [rax],al
   140012850:	mov    dh,dh
   140012852:	add    BYTE PTR [rax],al
   140012854:	add    al,0x0
   140012856:	add    BYTE PTR [rax],al
   140012858:	mov    bl,0xf6
   14001285a:	add    BYTE PTR [rax],al
   14001285c:	add    eax,0x36000000
   140012861:	test   DWORD PTR [rax],0x0
   140012867:	add    BYTE PTR [rbx-0x9],dl
   14001286a:	add    BYTE PTR [rax],al
   14001286c:	(bad)  
   14001286d:	add    BYTE PTR [rax],al
   14001286f:	add    BYTE PTR [rdi+rsi*8+0x0],ah
   140012873:	add    BYTE PTR [rax],al
   140012875:	add    BYTE PTR [rax],al
   140012877:	add    BYTE PTR [rcx],bl
   140012879:	or     al,0x4
   14001287b:	add    BYTE PTR [rdx+rdx*2],cl
   14001287e:	or     BYTE PTR [rax+0x7],dh
   140012881:	push   rax
   140012882:	(bad)  
   140012883:	xor    BYTE PTR [rsp+rbp*8],dl
   140012886:	add    BYTE PTR [rax],al
   140012888:	test   al,0x10
   14001288a:	add    DWORD PTR [rax],eax
   14001288c:	sbb    DWORD PTR [rdx],ecx
   14001288e:	add    al,BYTE PTR [rax]
   140012890:	or     dl,BYTE PTR [rdx+0x6]
   140012893:	push   rax
   140012894:	adc    al,0xec
   140012896:	add    BYTE PTR [rax],al
   140012898:	test   al,0x10
   14001289a:	add    DWORD PTR [rax],eax
   14001289c:	add    DWORD PTR [rax+rcx*1],edx
   14001289f:	add    BYTE PTR [rsp+riz*2],dl
   1400128a2:	or     BYTE PTR [rax],al
   1400128a4:	adc    al,0x54
   1400128a6:	(bad)  
   1400128a7:	add    BYTE PTR [rsp+rsi*1],dl
   1400128aa:	(bad)  
   1400128ab:	add    BYTE PTR [rdx+rsi*1],dl
   1400128ae:	adc    BYTE PTR [rax+0x1],dh
   1400128b1:	add    al,0x1
   1400128b3:	add    BYTE PTR [rdx+rax*4],al
   1400128b6:	add    BYTE PTR [rax],al
   1400128b8:	add    DWORD PTR [rdx],edx
   1400128ba:	or     BYTE PTR [rax],al
   1400128bc:	adc    dl,BYTE PTR [rdx+rcx*1+0x0]
   1400128c0:	adc    dh,BYTE PTR [rax+rcx*1]
   1400128c3:	add    BYTE PTR [rdx],dl
   1400128c5:	xor    cl,BYTE PTR [rsi]
   1400128c7:	loopne 0x1400128d5
   1400128c9:	jo     0x1400128d6
   1400128cb:	(bad)  
   1400128cc:	add    DWORD PTR [rdx],ecx
   1400128ce:	add    al,0x0
   1400128d0:	or     dh,BYTE PTR [rsi+rax*1]
   1400128d3:	add    BYTE PTR [rdx],cl
   1400128d5:	xor    al,BYTE PTR [rsi]
   1400128d7:	jo     0x1400128da
   1400128d9:	sbb    eax,DWORD PTR [rdi]
   1400128db:	add    BYTE PTR [rbx],bl
   1400128dd:	(bad)  
   1400128de:	(bad)  
   1400128df:	loopne 0x1400128f6
   1400128e1:	rcl    BYTE PTR [rbx],0x70
   1400128e4:	adc    ah,BYTE PTR [rax+0x11]
   1400128e7:	push   rax
   1400128e8:	adc    BYTE PTR [rax],dh
   1400128ea:	add    BYTE PTR [rax],al
   1400128ec:	add    DWORD PTR [rsi],eax
   1400128ee:	add    al,BYTE PTR [rax]
   1400128f0:	(bad)  
   1400128f1:	jb     0x1400128f5
   1400128f3:	xor    BYTE PTR [rcx],al
   1400128f5:	clts   
   1400128f7:	add    BYTE PTR [rdi],cl
   1400128f9:	or     al,BYTE PTR fs:[rax]
   1400128fc:	sysenter 
   1400128fe:	or     DWORD PTR [rax],eax
   140012900:	rsqrtps xmm1,XMMWORD PTR [rbx]
   140012903:	jo     0x140012906
   140012905:	clts   
   140012907:	add    BYTE PTR [rdi],cl
   140012909:	or     DWORD PTR fs:[rax],eax
   14001290c:	sysenter 
   14001290e:	or     BYTE PTR [rax],al
   140012910:	rsqrtps xmm1,XMMWORD PTR [rbx]
   140012913:	jo     0x14001292e
   140012915:	sbb    DWORD PTR [rdx],eax
   140012917:	add    BYTE PTR [rdi],al
   140012919:	add    DWORD PTR [rbx],ebp
   14001291b:	add    BYTE PTR [rax],ah
   14001291d:	in     al,dx
   14001291e:	add    BYTE PTR [rax],al
   140012920:	rex add DWORD PTR [rax],eax
   140012923:	add    BYTE PTR [rcx],al
   140012925:	(bad)  
   140012926:	or     BYTE PTR [rax],al
   140012928:	(bad)  
   140012929:	push   rsp
   14001292a:	(bad)  
   14001292b:	add    BYTE PTR [rdi],dl
   14001292d:	xor    al,0xd
   14001292f:	add    BYTE PTR [rdi],dl
   140012931:	jb     0x140012946
   140012933:	lock adc DWORD PTR [rax+0x10],esi
   140012937:	(bad)  
   140012938:	add    DWORD PTR [rsp+rax*1],edx
   14001293b:	add    BYTE PTR [rax+rbp*2],dl
   14001293e:	add    al,BYTE PTR [rax]
   140012940:	(bad)  
   140012941:	push   rdx
   140012942:	add    dh,BYTE PTR [rax]
   140012944:	add    DWORD PTR [rcx],ebx
   140012946:	or     al,BYTE PTR [rax]
   140012948:	sbb    DWORD PTR [rcx+rcx*1+0x0],esi
   14001294c:	sbb    DWORD PTR [rax+rcx*1+0x0],esp
   140012950:	sbb    DWORD PTR [rdi+rax*1+0x0],edx
   140012954:	sbb    DWORD PTR [rsi+rax*1],esi
   140012957:	add    BYTE PTR [rcx],bl
   140012959:	xor    dl,BYTE PTR [rip+0x81f19e0]        # 0x14820433f
   14001295f:	add    BYTE PTR [rax],dl
   140012961:	xor    al,0xe
   140012963:	add    BYTE PTR [rax],dl
   140012965:	push   rdx
   140012966:	or     al,0xf0
   140012968:	or     ah,al
   14001296a:	or     BYTE PTR [rax+0x7],dh
   14001296d:	(bad)  
   14001296e:	(bad)  
   14001296f:	push   rax
   140012970:	and    ah,ch
   140012972:	add    BYTE PTR [rax],al
   140012974:	sub    BYTE PTR [rax],al
   140012976:	add    BYTE PTR [rax],al
   140012978:	sbb    DWORD PTR [rbx],esp
   14001297a:	or     al,BYTE PTR [rax]
   14001297c:	adc    al,0x34
   14001297e:	adc    BYTE PTR [rax],al
   140012980:	adc    al,0x52
   140012982:	adc    al,dh
   140012984:	(bad)  
   140012985:	loopne 0x140012993
   140012987:	ror    BYTE PTR [rdx],1
   140012989:	ror    BYTE PTR [rax],0x70
   14001298c:	(bad)  
   14001298d:	(bad)  
   14001298e:	(bad)  
   14001298f:	push   rax
   140012990:	and    ah,ch
   140012992:	add    BYTE PTR [rax],al
   140012994:	sub    BYTE PTR [rax],al
   140012996:	add    BYTE PTR [rax],al
   140012998:	add    DWORD PTR [rax+rcx*1],edx
   14001299b:	add    BYTE PTR [rsp+riz*2],dl
   14001299e:	or     al,BYTE PTR [rax]
   1400129a0:	adc    al,0x54
   1400129a2:	or     DWORD PTR [rax],eax
   1400129a4:	adc    al,0x34
   1400129a6:	or     BYTE PTR [rax],al
   1400129a8:	adc    al,0x52
   1400129aa:	adc    BYTE PTR [rax+0x1],dh
   1400129ad:	sbb    al,0xc
   1400129af:	add    BYTE PTR [rsp+riz*2],bl
   1400129b2:	adc    DWORD PTR [rax],eax
   1400129b4:	sbb    al,0x54
   1400129b6:	adc    BYTE PTR [rax],al
   1400129b8:	sbb    al,0x34
   1400129ba:	ltr    WORD PTR [rdx+rsi*2]
   1400129be:	sbb    al,dh
   1400129c0:	(bad)  
   1400129c1:	loopne 0x1400129d7
   1400129c3:	rcl    BYTE PTR [rdx],1
   1400129c5:	rcl    BYTE PTR [rax],0x70
   1400129c8:	add    DWORD PTR [rcx],edx
   1400129ca:	(bad)  
   1400129cb:	add    BYTE PTR [rcx],dl
   1400129cd:	movabs ds:0x60087009e00bf00d,al
   1400129d6:	(bad)  
   1400129d7:	push   rax
   1400129d8:	(bad)  
   1400129d9:	xor    BYTE PTR [rax],al
   1400129db:	add    BYTE PTR [rcx],bl
   1400129dd:	xor    BYTE PTR [rax+rax*1],cl
   1400129e0:	and    dh,BYTE PTR [rcx+rbx*1+0x0]
   1400129e4:	and    ah,BYTE PTR [rax+rbx*1+0x0]
   1400129e8:	and    dh,BYTE PTR [rdi+rdx*1]
   1400129eb:	add    BYTE PTR [rdx],ah
   1400129ed:	repnz sbb al,dh
   1400129f0:	(bad)  
   1400129f1:	loopne 0x140012a07
   1400129f3:	rcl    BYTE PTR [rdx],1
   1400129f5:	rcl    BYTE PTR [rax],0x50
   1400129f8:	and    ah,ch
   1400129fa:	add    BYTE PTR [rax],al
   1400129fc:	jo     0x1400129fe
   1400129fe:	add    BYTE PTR [rax],al
   140012a00:	or     DWORD PTR [rsi],eax
   140012a02:	add    al,BYTE PTR [rax]
   140012a04:	(bad)  
   140012a05:	push   rdx
   140012a06:	add    dh,BYTE PTR [rax]
   140012a08:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140012a09:	jmp    0x140012a0b
   140012a0b:	add    BYTE PTR [rcx],al
   140012a0d:	add    BYTE PTR [rax],al
   140012a0f:	add    BYTE PTR [rsi],ah
   140012a11:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140012a12:	add    BYTE PTR [rax],al
   140012a14:	cmp    al,0xa4
   140012a16:	add    BYTE PTR [rax],al
   140012a18:	add    DWORD PTR [rax],eax
   140012a1a:	add    BYTE PTR [rax],al
   140012a1c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140012a1e:	add    BYTE PTR [rax],al
   140012a20:	or     DWORD PTR [rdx],ecx
   140012a22:	add    al,0x0
   140012a24:	or     dh,BYTE PTR [rsi+rax*1]
   140012a27:	add    BYTE PTR [rdx],cl
   140012a29:	xor    al,BYTE PTR [rsi]
   140012a2b:	jo     0x1400129d3
   140012a2d:	jmp    0x140012a2f
   140012a2f:	add    BYTE PTR [rcx],al
   140012a31:	add    BYTE PTR [rax],al
   140012a33:	add    dh,ch
   140012a35:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140012a36:	add    BYTE PTR [rax],al
   140012a38:	and    DWORD PTR [rbp+0x10000],esp
   140012a3e:	add    BYTE PTR [rax],al
   140012a40:	sub    BYTE PTR [rbp+0x1b010000],ah
   140012a46:	or     al,BYTE PTR [rax]
   140012a48:	sbb    esi,DWORD PTR [rbx+rcx*1+0x0]
   140012a4c:	sbb    esp,DWORD PTR [rdx+rcx*1+0x0]
   140012a50:	sbb    esi,DWORD PTR [rcx+rcx*1]
   140012a53:	add    BYTE PTR [rbx],bl
   140012a55:	xor    dl,BYTE PTR [rax+rsi*8]
   140012a58:	adc    ah,al
   140012a5a:	adc    BYTE PTR [rax+0x19],dl
   140012a5d:	sbb    DWORD PTR [rax+rax*1],eax
   140012a60:	or     dh,BYTE PTR [rcx+rdx*1]
   140012a63:	add    BYTE PTR [rdx],cl
   140012a65:	rol    BYTE PTR [rsi],cl
   140012a67:	jo     0x140012a89
   140012a69:	in     al,dx
   140012a6a:	add    BYTE PTR [rax],al
   140012a6c:	(bad)  
   140012a6d:	add    BYTE PTR [rax],al
   140012a6f:	add    BYTE PTR [rcx],bl
   140012a71:	sbb    DWORD PTR [rax+rax*1],eax
   140012a74:	or     dh,BYTE PTR [rbx+rcx*1]
   140012a77:	add    BYTE PTR [rdx],cl
   140012a79:	jb     0x140012a81
   140012a7b:	jo     0x140012a9d
   140012a7d:	in     al,dx
   140012a7e:	add    BYTE PTR [rax],al
   140012a80:	xor    BYTE PTR [rax],al
   140012a82:	add    BYTE PTR [rax],al
   140012a84:	sbb    DWORD PTR [rdi],esp
   140012a86:	(bad)  
   140012a87:	add    BYTE PTR [rsi],dl
   140012a89:	add    DWORD PTR [rax+0x1],edx
   140012a8c:	(bad)  
   140012a8d:	loopne 0x140012a94
   140012a8f:	jo     0x140012a95
   140012a91:	(bad)  
   140012a92:	add    esi,DWORD PTR [rax]
   140012a94:	add    dl,BYTE PTR [rax+0x0]
   140012a97:	add    BYTE PTR [rax],ah
   140012a99:	in     al,dx
   140012a9a:	add    BYTE PTR [rax],al
   140012a9c:	jo     0x140012aa8
   140012a9e:	add    BYTE PTR [rax],al
   140012aa0:	add    DWORD PTR [rax+rcx*1],edx
   140012aa3:	add    BYTE PTR [rsp+riz*2],dl
   140012aa6:	(bad)  
   140012aa7:	add    BYTE PTR [rsp+rdx*2],dl
   140012aaa:	or     eax,0xc341400
   140012aaf:	add    BYTE PTR [rdx+rdx*4],dl
   140012ab2:	adc    BYTE PTR [rax+0x1],dh
   140012ab5:	or     al,BYTE PTR [rdx]
   140012ab7:	add    BYTE PTR [rdx],cl
   140012ab9:	xor    al,BYTE PTR [rsi]
   140012abb:	xor    BYTE PTR [rcx],al
   140012abd:	(bad)  
   140012abf:	add    BYTE PTR [rdi],cl
   140012ac1:	xor    al,0x7
   140012ac3:	add    BYTE PTR [rdi],cl
   140012ac5:	xor    cl,BYTE PTR [rbx]
   140012ac7:	jo     0x140012aca
   140012ac9:	adc    cl,BYTE PTR [rax]
   140012acb:	add    BYTE PTR [rdx],dl
   140012acd:	push   rsp
   140012ace:	or     al,BYTE PTR [rax]
   140012ad0:	adc    dh,BYTE PTR [rcx+rcx*1]
   140012ad3:	add    BYTE PTR [rdx],dl
   140012ad5:	xor    cl,BYTE PTR [rsi]
   140012ad7:	loopne 0x140012ae5
   140012ad9:	jo     0x140012ae6
   140012adb:	(bad)  
   140012adc:	add    DWORD PTR [rbx],ecx
   140012ade:	add    al,0x0
   140012ae0:	or     ebp,DWORD PTR [rax+0x2]
   140012ae3:	add    BYTE PTR [rsi],al
   140012ae5:	push   rdx
   140012ae6:	add    dh,BYTE PTR [rax]
   140012ae8:	add    DWORD PTR [rax+rcx*1],edx
   140012aeb:	add    BYTE PTR [rsp+riz*2],dl
   140012aee:	or     DWORD PTR [rax],eax
   140012af0:	adc    al,0x54
   140012af2:	or     BYTE PTR [rax],al
   140012af4:	adc    al,0x34
   140012af6:	(bad)  
   140012af7:	add    BYTE PTR [rdx+rsi*1],dl
   140012afa:	adc    BYTE PTR [rax+0x19],dh
   140012afd:	(bad)  
   140012afe:	(bad)  
   140012aff:	add    BYTE PTR [rcx+rax*1],cl
   140012b02:	rex.RXB add BYTE PTR [rip+0x3600470],r8b        # 0x143612f79
   140012b09:	push   rax
   140012b0a:	add    dh,BYTE PTR [rax]
   140012b0c:	and    ah,ch
   140012b0e:	add    BYTE PTR [rax],al
   140012b10:	and    BYTE PTR [rdx],al
   140012b12:	add    BYTE PTR [rax],al
   140012b14:	add    DWORD PTR [rsp+rcx*1],ebx
   140012b17:	add    BYTE PTR [rsp+riz*2],bl
   140012b1a:	(bad)  
   140012b1b:	add    BYTE PTR [rsp+rdx*2],bl
   140012b1e:	or     eax,0xc341c00
   140012b23:	add    BYTE PTR [rdx+rdx*2],bl
   140012b26:	sbb    al,dh
   140012b28:	(bad)  
   140012b29:	loopne 0x140012b3f
   140012b2b:	rcl    BYTE PTR [rdx],1
   140012b2d:	rcl    BYTE PTR [rax],0x70
   140012b30:	sbb    DWORD PTR [rsp+rcx*1],ebp
   140012b33:	add    BYTE PTR [rsi],bl
   140012b35:	push   0x1190007
   140012b3a:	adc    DWORD PTR [rax],eax
   140012b3c:	or     eax,0x9e00bf0
   140012b41:	rol    BYTE PTR [rdi],1
   140012b43:	rol    BYTE PTR [rip+0x3600470],0x30        # 0x143612fba
   140012b4a:	add    dl,BYTE PTR [rax+0x20]
   140012b4d:	in     al,dx
   140012b4e:	add    BYTE PTR [rax],al
   140012b50:	push   0x1000000
   140012b55:	sub    DWORD PTR [rax+rax*1],ecx
   140012b58:	sub    DWORD PTR [rbp+rcx*1+0x0],esp
   140012b5c:	sub    DWORD PTR [rsp+rcx*1+0x0],edx
   140012b60:	sub    DWORD PTR [rbx+rcx*1],esi
   140012b63:	add    BYTE PTR [rcx],ch
   140012b65:	xor    ah,BYTE PTR [rip+0x21e023f0]        # 0x161e14f5b
   140012b6b:	rcr    BYTE PTR [rdi],1
   140012b6d:	rcr    BYTE PTR [rip+0xa1d0170],0x0        # 0x14a1e2ce4
   140012b74:	sbb    eax,0x1d001534
   140012b79:	xchg   edx,eax
   140012b7a:	sbb    eax,esi
   140012b7c:	(bad)  
   140012b7d:	loopne 0x140012b94
   140012b7f:	rcl    BYTE PTR [rbx],1
   140012b81:	rcl    BYTE PTR [rcx],0x70
   140012b84:	adc    BYTE PTR [rax+0xf],ah
   140012b87:	push   rax
   140012b88:	sbb    DWORD PTR [rcx],ebp
   140012b8a:	or     eax,DWORD PTR [rax]
   140012b8c:	(bad)  
   140012b8d:	xor    al,0x25
   140012b8f:	add    BYTE PTR [rdi],dl
   140012b91:	add    DWORD PTR [rax+rax*1],ebx
   140012b94:	adc    al,dh
   140012b96:	(bad)  
   140012b97:	loopne 0x140012ba5
   140012b99:	ror    BYTE PTR [rdx],1
   140012b9b:	ror    BYTE PTR [rax],0x70
   140012b9e:	(bad)  
   140012b9f:	(bad)  
   140012ba0:	(bad)  
   140012ba1:	push   rax
   140012ba2:	add    BYTE PTR [rax],al
   140012ba4:	and    ah,ch
   140012ba6:	add    BYTE PTR [rax],al
   140012ba8:	rol    BYTE PTR [rax],1
   140012baa:	add    BYTE PTR [rax],al
   140012bac:	add    DWORD PTR [rcx],ebx
   140012bae:	or     al,BYTE PTR [rax]
   140012bb0:	sbb    DWORD PTR [rbx+rcx*1+0x0],esi
   140012bb4:	sbb    DWORD PTR [rdx+rcx*1+0x0],esp
   140012bb8:	sbb    DWORD PTR [rcx+rcx*1+0x0],edx
   140012bbc:	sbb    DWORD PTR [rax+rcx*1],esi
   140012bbf:	add    BYTE PTR [rcx],bl
   140012bc1:	push   rdx
   140012bc2:	adc    eax,0xa1701e0
   140012bc7:	add    BYTE PTR [rdi],dl
   140012bc9:	xor    al,0x12
   140012bcb:	add    BYTE PTR [rdi],dl
   140012bcd:	xchg   edx,eax
   140012bce:	adc    al,dh
   140012bd0:	(bad)  
   140012bd1:	loopne 0x140012bdf
   140012bd3:	ror    BYTE PTR [rdx],1
   140012bd5:	ror    BYTE PTR [rax],0x70
   140012bd8:	(bad)  
   140012bd9:	(bad)  
   140012bda:	(bad)  
   140012bdb:	push   rax
   140012bdc:	add    DWORD PTR [rsi],esi
   140012bde:	(bad)  
   140012bdf:	add    BYTE PTR [rsi],dh
   140012be1:	js     0x140012be7
   140012be3:	add    BYTE PTR [rsi],ch
   140012be5:	push   0x34140005
   140012bea:	adc    al,0x0
   140012bec:	adc    al,0xb2
   140012bee:	adc    al,dh
   140012bf0:	(bad)  
   140012bf1:	loopne 0x140012bff
   140012bf3:	ror    BYTE PTR [rdx],1
   140012bf5:	ror    BYTE PTR [rax],0x70
   140012bf8:	(bad)  
   140012bf9:	(bad)  
   140012bfa:	(bad)  
   140012bfb:	push   rax
   140012bfc:	add    DWORD PTR [rcx],ebx
   140012bfe:	or     al,BYTE PTR [rax]
   140012c00:	sbb    esp,esp
   140012c02:	or     DWORD PTR [rax],eax
   140012c04:	sbb    DWORD PTR [rax+rcx*1+0x0],esi
   140012c08:	sbb    DWORD PTR [rdi+rax*1+0x0],esp
   140012c0c:	sbb    DWORD PTR [rsi+rax*1+0x0],edx
   140012c10:	sbb    DWORD PTR [rdx],esi
   140012c12:	adc    eax,0x92201f0
   140012c17:	add    BYTE PTR [rdx],ah
   140012c19:	ret    0xf01b
   140012c1c:	sbb    eax,esp
   140012c1e:	(bad)  
   140012c1f:	rcl    BYTE PTR [rip+0x127013c0],1        # 0x152713fe5
   140012c25:	(bad)  
   140012c26:	adc    DWORD PTR [rax],esi
   140012c28:	adc    BYTE PTR [rax+0x0],dl
   140012c2b:	add    BYTE PTR [rcx],al
   140012c2d:	add    al,0x1
   140012c2f:	add    BYTE PTR [rdx+riz*2],al
   140012c32:	add    BYTE PTR [rax],al
   140012c34:	or     DWORD PTR [rcx],ebx
   140012c36:	or     al,BYTE PTR [rax]
   140012c38:	sbb    esp,eax
   140012c3a:	or     eax,DWORD PTR [rax]
   140012c3c:	sbb    DWORD PTR [rdx+rcx*1+0x0],esi
   140012c40:	sbb    DWORD PTR [rcx+rcx*1+0x0],esp
   140012c44:	sbb    DWORD PTR [rax+rcx*1],esi
   140012c47:	add    BYTE PTR [rcx],bl
   140012c49:	push   rdx
   140012c4a:	adc    eax,0xeba6e0
   140012c4f:	add    BYTE PTR [rcx],al
   140012c51:	add    BYTE PTR [rax],al
   140012c53:	add    BYTE PTR [rcx-0x1d],ch
   140012c56:	add    BYTE PTR [rax],al
   140012c58:	(bad)  
   140012c5a:	add    BYTE PTR [rax],al
   140012c5c:	js     0x140012c55
   140012c5e:	add    BYTE PTR [rax],al
   140012c60:	(bad)  
   140012c62:	add    BYTE PTR [rax],al
   140012c64:	add    BYTE PTR [rax],al
   140012c66:	add    BYTE PTR [rax],al
   140012c68:	add    DWORD PTR [rax],eax
   140012c6a:	add    BYTE PTR [rax],al
   140012c6c:	add    DWORD PTR [rcx+rax*1],eax
   140012c6f:	add    BYTE PTR [rdx+riz*8],al
   140012c72:	add    BYTE PTR [rax],al
   140012c74:	add    DWORD PTR [rdx+rax*1],ecx
   140012c77:	add    BYTE PTR [rcx+rax*1],cl
   140012c7a:	adc    DWORD PTR [rax],eax
   140012c7c:	or     DWORD PTR [rcx+rax*1],eax
   140012c7f:	add    BYTE PTR [rdx+riz*1],al
   140012c82:	add    BYTE PTR [rax],al
   140012c84:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140012c85:	jmp    0x140012c87
   140012c87:	add    BYTE PTR [rcx],al
   140012c89:	add    BYTE PTR [rax],al
   140012c8b:	add    BYTE PTR [rcx+rbp*8],ch
   140012c8e:	add    BYTE PTR [rax],al
   140012c90:	(bad)  
   140012c91:	jmp    0x140022c96
   140012c96:	add    BYTE PTR [rax],al
   140012c98:	(bad)  
   140012c99:	jmp    0x14a0a2c9e
   140012c9e:	add    al,0x0
   140012ca0:	or     dh,BYTE PTR [rsi+rax*1]
   140012ca3:	add    BYTE PTR [rdx],cl
   140012ca5:	xor    al,BYTE PTR [rsi]
   140012ca7:	jo     0x140012c4f
   140012ca9:	jmp    0x140012cab
   140012cab:	add    BYTE PTR [rcx],al
   140012cad:	add    BYTE PTR [rax],al
   140012caf:	add    BYTE PTR [rip+0x700000ea],bh        # 0x1b0012d9f
   140012cb5:	(bad)  
   140012cb6:	add    BYTE PTR [rax],al
   140012cb8:	movabs al,ds:0x10000ea700000f7
   140012cc1:	or     eax,0x340d0004
   140012cc6:	or     DWORD PTR [rax],eax
   140012cc8:	or     eax,0x500632
   140012ccd:	add    BYTE PTR [rax],al
   140012ccf:	add    BYTE PTR [rcx],al
   140012cd1:	add    BYTE PTR [rax],al
   140012cd3:	add    BYTE PTR [rax],al
   140012cd5:	add    BYTE PTR [rax],al
   140012cd7:	add    BYTE PTR [rcx],al
   140012cd9:	add    al,0x1
   140012cdb:	add    BYTE PTR [rdx+rdx*1],al
   140012cde:	add    BYTE PTR [rax],al
   140012ce0:	add    BYTE PTR [rax],al
   140012ce2:	add    BYTE PTR [rax],al
   140012ce4:	and    BYTE PTR [rax+0x1],dl
   140012ce7:	add    BYTE PTR [rax],al
   140012ce9:	add    BYTE PTR [rax],al
   140012ceb:	add    bh,bh
   140012ced:	(bad)  
   140012cee:	(bad)  
   140012cef:	inc    DWORD PTR [rax]
   140012cf1:	add    BYTE PTR [rax],al
   140012cf3:	add    BYTE PTR [rax],ah
   140012cf5:	add    BYTE PTR [rax],al
   140012cf7:	add    BYTE PTR [rax+rax*4+0x0],bl
	...
   140012d06:	add    BYTE PTR [rax],al
   140012d08:	add    DWORD PTR [rax],eax
   140012d0a:	add    BYTE PTR [rax],al
   140012d0c:	loopne 0x140012d3a
   140012d0e:	add    DWORD PTR [rax],eax
	...
   140012d1c:	add    al,0x81
   140012d1e:	add    BYTE PTR [rax],al
   140012d20:	add    BYTE PTR [rax],al
   140012d22:	add    BYTE PTR [rax],al
   140012d24:	or     BYTE PTR [rip+0x1],ch        # 0x140012d2b
	...
   140012d32:	add    BYTE PTR [rax],al
   140012d34:	lock add DWORD PTR cs:[rax],eax
	...
   140012d40:	sbb    al,0x36
   140012d42:	add    DWORD PTR [rax],eax
   140012d44:	add    BYTE PTR [rax],al
   140012d46:	add    DWORD PTR [rax],eax
   140012d48:	loopne 0x140012d7c
   140012d4a:	add    DWORD PTR [rax],eax
	...
   140012d54:	xchg   edx,eax
   140012d55:	(bad)  
   140012d56:	add    DWORD PTR [rax],eax
   140012d58:	lock add eax,DWORD PTR [rcx]
   140012d5b:	add    BYTE PTR [rax+0x130],cl
   140012d61:	add    BYTE PTR [rax],al
   140012d63:	add    BYTE PTR [rax],al
   140012d65:	add    BYTE PTR [rax],al
   140012d67:	add    BYTE PTR [rdx+0x39],cl
   140012d6a:	add    DWORD PTR [rax],eax
   140012d6c:	cwde   
   140012d6d:	add    DWORD PTR [rcx],eax
   140012d6f:	add    BYTE PTR [rax+0x131],cl
   140012d75:	add    BYTE PTR [rax],al
   140012d77:	add    BYTE PTR [rax],al
   140012d79:	add    BYTE PTR [rax],al
   140012d7b:	add    BYTE PTR [rax+0x39],bl
   140012d7e:	add    DWORD PTR [rax],eax
   140012d80:	cwde   
   140012d81:	add    al,BYTE PTR [rcx]
   140012d83:	add    BYTE PTR [rax],al
   140012d85:	xor    DWORD PTR [rcx],eax
	...
   140012d8f:	add    BYTE PTR [rax+0x39],bh
   140012d92:	add    DWORD PTR [rax],eax
   140012d94:	adc    BYTE PTR [rdx],al
   140012d96:	add    DWORD PTR [rax],eax
   140012d98:	fdiv   DWORD PTR [rcx]
   140012d9a:	add    DWORD PTR [rax],eax
	...
   140012da4:	test   BYTE PTR [rcx],bh
   140012da6:	add    DWORD PTR [rax],eax
   140012da8:	call   0x178012eaf
   140012dad:	xor    al,BYTE PTR [rcx]
	...
   140012db7:	add    BYTE PTR [rcx+rdi*1+0x3480001],ah
   140012dbe:	add    DWORD PTR [rax],eax
   140012dc0:	sbb    BYTE PTR [rdx],dh
   140012dc2:	add    DWORD PTR [rax],eax
	...
   140012dcc:	(bad)  
   140012dcd:	cmp    DWORD PTR [rcx],eax
   140012dcf:	add    BYTE PTR [rax],ch
   140012dd1:	add    eax,DWORD PTR [rcx]
   140012dd3:	add    al,al
   140012dd5:	xor    DWORD PTR [rcx],eax
	...
   140012ddf:	add    ah,ch
   140012de1:	cmp    DWORD PTR [rcx],eax
   140012de3:	add    al,dl
   140012de5:	add    al,BYTE PTR [rcx]
   140012de7:	add    al,ch
   140012de9:	xor    DWORD PTR [rcx],eax
	...
   140012df3:	add    BYTE PTR [rsi],dl
   140012df5:	cmp    al,BYTE PTR [rcx]
   140012df7:	add    al,bh
   140012df9:	add    al,BYTE PTR [rcx]
   140012dfb:	add    BYTE PTR [rax],cl
   140012dfd:	xor    al,BYTE PTR [rcx]
	...
   140012e07:	add    BYTE PTR [rax+0x3a],al
   140012e0a:	add    DWORD PTR [rax],eax
   140012e0c:	sbb    BYTE PTR [rbx],al
   140012e0e:	add    DWORD PTR [rax],eax
   140012e10:	rex.W xor al,BYTE PTR [rcx]
	...
   140012e1b:	add    BYTE PTR [rdx+rdi*1+0x1],ah
   140012e1f:	add    BYTE PTR [rax+0x3],bl
   140012e22:	add    DWORD PTR [rax],eax
   140012e24:	push   rax
   140012e25:	xor    al,0x1
	...
   140012e2f:	add    BYTE PTR [rsi+0x6000013a],dh
   140012e35:	add    eax,0x31100001
   140012e3a:	add    DWORD PTR [rax],eax
	...
   140012e44:	call   0x160012f83
   140012e49:	add    al,BYTE PTR [rcx]
   140012e4b:	add    BYTE PTR [rax+0x30],ch
   140012e4e:	add    DWORD PTR [rax],eax
	...
   140012e58:	cmp    BYTE PTR [rbx],bh
   140012e5a:	add    DWORD PTR [rax],eax
   140012e5c:	js     0x140012e5f
   140012e5e:	add    DWORD PTR [rax],eax
   140012e60:	(bad)  
   140012e61:	xor    al,BYTE PTR [rcx]
	...
   140012e6b:	add    BYTE PTR [rax],dh
   140012e6d:	cmp    eax,0x3700001
   140012e72:	add    DWORD PTR [rax],eax
   140012e74:	shl    BYTE PTR [rax],1
   140012e76:	add    DWORD PTR [rax],eax
	...
   140012e80:	js     0x140012ebf
   140012e82:	add    DWORD PTR [rax],eax
   140012e84:	loopne 0x140012e87
   140012e86:	add    DWORD PTR [rax],eax
   140012e88:	push   rax
   140012e89:	xor    DWORD PTR [rcx],eax
	...
   140012e93:	add    BYTE PTR [rbp+rdi*1+0x2600001],dh
   140012e9a:	add    DWORD PTR [rax],eax
   140012e9c:	xor    BYTE PTR [rcx],dh
   140012e9e:	add    DWORD PTR [rax],eax
	...
   140012ea8:	(bad)  
   140012ea9:	add    DWORD PTR ds:[rax],eax
   140012eac:	add    al,BYTE PTR [rcx]
   140012eaf:	add    BYTE PTR [rax+0x34],ch
   140012eb2:	add    DWORD PTR [rax],eax
	...
   140012ebc:	xor    BYTE PTR [rax+0x1],al
   140012ebf:	add    BYTE PTR [rax+0x5],bh
   140012ec2:	add    DWORD PTR [rax],eax
   140012ec4:	xor    al,0x1
	...
   140012ecf:	add    BYTE PTR [rax+rax*2],bh
   140012ed2:	add    DWORD PTR [rax],eax
   140012ed4:	push   rax
   140012ed5:	add    eax,0x1
	...
   140012eee:	add    BYTE PTR [rax],al
   140012ef0:	mov    esi,0x134
   140012ef5:	add    BYTE PTR [rax],al
   140012ef7:	add    dl,dl
   140012ef9:	xor    al,0x1
   140012efb:	add    BYTE PTR [rax],al
   140012efd:	add    BYTE PTR [rax],al
   140012eff:	add    al,ah
   140012f01:	xor    al,0x1
   140012f03:	add    BYTE PTR [rax],al
   140012f05:	add    BYTE PTR [rax],al
   140012f07:	add    dh,dh
   140012f09:	xor    al,0x1
   140012f0b:	add    BYTE PTR [rax],al
   140012f0d:	add    BYTE PTR [rax],al
   140012f0f:	add    BYTE PTR [rsi*1+0x1],al
   140012f16:	add    BYTE PTR [rax],al
   140012f18:	adc    al,0x35
   140012f1a:	add    DWORD PTR [rax],eax
   140012f1c:	add    BYTE PTR [rax],al
   140012f1e:	add    BYTE PTR [rax],al
   140012f20:	es xor eax,0x1
   140012f26:	add    BYTE PTR [rax],al
   140012f28:	cmp    BYTE PTR [rip+0x1],dh        # 0x140012f2f
   140012f2e:	add    BYTE PTR [rax],al
   140012f30:	rex.WX xor rax,0x1
   140012f36:	add    BYTE PTR [rax],al
   140012f38:	pop    rsi
   140012f39:	xor    eax,0x1
   140012f3e:	add    BYTE PTR [rax],al
   140012f40:	jo     0x140012f77
   140012f42:	add    DWORD PTR [rax],eax
   140012f44:	add    BYTE PTR [rax],al
   140012f46:	add    BYTE PTR [rax],al
   140012f48:	test   BYTE PTR [rip+0x1],dh        # 0x140012f4f
   140012f4e:	add    BYTE PTR [rax],al
   140012f50:	xchg   esi,eax
   140012f51:	xor    eax,0x1
   140012f56:	add    BYTE PTR [rax],al
   140012f58:	mov    dl,0x35
   140012f5a:	add    DWORD PTR [rax],eax
   140012f5c:	add    BYTE PTR [rax],al
   140012f5e:	add    BYTE PTR [rax],al
   140012f60:	(bad)  
   140012f61:	xor    eax,0x1
   140012f66:	add    BYTE PTR [rax],al
   140012f68:	fdiv   QWORD PTR [rip+0x1]        # 0x140012f6f
   140012f6e:	add    BYTE PTR [rax],al
   140012f70:	out    dx,al
   140012f71:	xor    eax,0x1
   140012f76:	add    BYTE PTR [rax],al
   140012f78:	cld    
   140012f79:	xor    eax,0x1
   140012f7e:	add    BYTE PTR [rax],al
   140012f80:	or     al,0x36
   140012f82:	add    DWORD PTR [rax],eax
   140012f84:	add    BYTE PTR [rax],al
   140012f86:	add    BYTE PTR [rax],al
   140012f88:	cmp    BYTE PTR [rdi],0x1
   140012f8b:	add    BYTE PTR [rax],al
   140012f8d:	add    BYTE PTR [rax],al
   140012f8f:	add    BYTE PTR [rsi+0x134],ch
   140012f95:	add    BYTE PTR [rax],al
   140012f97:	add    BYTE PTR [rdx+0x3f],dl
   140012f9a:	add    DWORD PTR [rax],eax
   140012f9c:	add    BYTE PTR [rax],al
   140012f9e:	add    BYTE PTR [rax],al
   140012fa0:	rex.RX (bad) 
   140012fa2:	add    DWORD PTR [rax],eax
   140012fa4:	add    BYTE PTR [rax],al
   140012fa6:	add    BYTE PTR [rax],al
   140012fa8:	cmp    BYTE PTR [rdi],bh
   140012faa:	add    DWORD PTR [rax],eax
   140012fac:	add    BYTE PTR [rax],al
   140012fae:	add    BYTE PTR [rax],al
   140012fb0:	sub    al,0x3f
   140012fb2:	add    DWORD PTR [rax],eax
   140012fb4:	add    BYTE PTR [rax],al
   140012fb6:	add    BYTE PTR [rax],al
   140012fb8:	sbb    al,0x3f
   140012fba:	add    DWORD PTR [rax],eax
   140012fbc:	add    BYTE PTR [rax],al
   140012fbe:	add    BYTE PTR [rax],al
   140012fc0:	adc    BYTE PTR [rdi],bh
   140012fc2:	add    DWORD PTR [rax],eax
   140012fc4:	add    BYTE PTR [rax],al
   140012fc6:	add    BYTE PTR [rax],al
   140012fc8:	(bad)  
   140012fc9:	add    DWORD PTR ds:[rax],eax
   140012fcc:	add    BYTE PTR [rax],al
   140012fce:	add    BYTE PTR [rax],al
   140012fd0:	out    dx,al
   140012fd1:	add    DWORD PTR ds:[rax],eax
   140012fd4:	add    BYTE PTR [rax],al
   140012fd6:	add    BYTE PTR [rax],al
   140012fd8:	loop   0x140013018
   140012fda:	add    DWORD PTR [rax],eax
   140012fdc:	add    BYTE PTR [rax],al
   140012fde:	add    BYTE PTR [rax],al
   140012fe0:	sar    BYTE PTR [rsi],1
   140012fe2:	add    DWORD PTR [rax],eax
   140012fe4:	add    BYTE PTR [rax],al
   140012fe6:	add    BYTE PTR [rax],al
   140012fe8:	mov    edx,0x13e
   140012fed:	add    BYTE PTR [rax],al
   140012fef:	add    BYTE PTR [rsi+rdi*1+0x1],ch
   140012ff6:	add    BYTE PTR [rax],al
   140012ff8:	(bad)  
   140012ff9:	add    DWORD PTR ds:[rax],eax
   140012ffc:	add    BYTE PTR [rax],al
   140012ffe:	add    BYTE PTR [rax],al
   140013000:	mov    BYTE PTR [rsi],bh
   140013002:	add    DWORD PTR [rax],eax
   140013004:	add    BYTE PTR [rax],al
   140013006:	add    BYTE PTR [rax],al
   140013008:	jbe    0x140013048
   14001300a:	add    DWORD PTR [rax],eax
   14001300c:	add    BYTE PTR [rax],al
   14001300e:	add    BYTE PTR [rax],al
   140013010:	push   0x3e
   140013012:	add    DWORD PTR [rax],eax
   140013014:	add    BYTE PTR [rax],al
   140013016:	add    BYTE PTR [rax],al
   140013018:	pop    rax
   140013019:	add    DWORD PTR ds:[rax],eax
   14001301c:	add    BYTE PTR [rax],al
   14001301e:	add    BYTE PTR [rax],al
   140013020:	rex.WX
   140013021:	add    DWORD PTR ds:[rax],eax
   140013024:	add    BYTE PTR [rax],al
   140013026:	add    BYTE PTR [rax],al
   140013028:	xor    al,0x3e
   14001302a:	add    DWORD PTR [rax],eax
   14001302c:	add    BYTE PTR [rax],al
   14001302e:	add    BYTE PTR [rax],al
   140013030:	(bad)  
   140013031:	add    DWORD PTR ds:[rax],eax
   140013034:	add    BYTE PTR [rax],al
   140013036:	add    BYTE PTR [rax],al
   140013038:	adc    bh,BYTE PTR [rsi]
   14001303a:	add    DWORD PTR [rax],eax
   14001303c:	add    BYTE PTR [rax],al
   14001303e:	add    BYTE PTR [rax],al
   140013040:	sahf   
   140013041:	xor    al,0x1
   140013043:	add    BYTE PTR [rax],al
   140013045:	add    BYTE PTR [rax],al
   140013047:	add    BYTE PTR [rsi+0x134],cl
   14001304d:	add    BYTE PTR [rax],al
   14001304f:	add    BYTE PTR [rax+0x34],bh
   140013052:	add    DWORD PTR [rax],eax
   140013054:	add    BYTE PTR [rax],al
   140013056:	add    BYTE PTR [rax],al
   140013058:	push   0x13f
	...
   140013065:	add    BYTE PTR [rax],al
   140013067:	add    ah,dh
   140013069:	cmp    al,BYTE PTR [rcx]
   14001306b:	add    BYTE PTR [rax],al
   14001306d:	add    BYTE PTR [rax],al
   14001306f:	add    BYTE PTR [rsi],bl
   140013071:	cmp    eax,DWORD PTR [rcx]
   140013073:	add    BYTE PTR [rax],al
   140013075:	add    BYTE PTR [rax],al
   140013077:	add    BYTE PTR [rax],cl
   140013079:	cmp    eax,DWORD PTR [rcx]
	...
   140013087:	add    BYTE PTR [rdx],al
   140013089:	add    BYTE PTR [rax],al
   14001308b:	add    BYTE PTR [rax],al
   14001308d:	add    BYTE PTR [rax],al
   14001308f:	adc    BYTE PTR [rsi+0x0],0x0
   140013096:	add    BYTE PTR [rax+0x7],al
   14001309c:	add    BYTE PTR [rax],al
   14001309e:	add    BYTE PTR [rax+0x6],al
   1400130a4:	add    BYTE PTR [rax],al
   1400130a6:	add    BYTE PTR [rax+0x8],al
   1400130ac:	add    BYTE PTR [rax],al
   1400130ae:	add    BYTE PTR [rax+0xa],al
   1400130b4:	add    BYTE PTR [rax],al
   1400130b6:	add    BYTE PTR [rax+0x9],al
   1400130bc:	add    BYTE PTR [rax],al
   1400130be:	add    BYTE PTR [rax+0xc],al
   1400130c4:	add    BYTE PTR [rax],al
   1400130c6:	add    BYTE PTR [rax+0x0],al
   1400130cc:	add    BYTE PTR [rax],al
   1400130ce:	add    BYTE PTR [rax],al
   1400130d0:	rex.WR cmp rax,0x1
   1400130d6:	add    BYTE PTR [rax],al
   1400130d8:	pop    rax
   1400130d9:	cmp    eax,0x1
   1400130de:	add    BYTE PTR [rax],al
   1400130e0:	(bad)  
   1400130e1:	cmp    eax,0x1
   1400130e6:	add    BYTE PTR [rax],al
   1400130e8:	outs   dx,BYTE PTR ds:[rsi]
   1400130e9:	cmp    eax,0x1
   1400130ee:	add    BYTE PTR [rax],al
   1400130f0:	rex cmp eax,0x1
	...
   1400130fe:	add    BYTE PTR [rax],al
   140013100:	add    bh,BYTE PTR [rax]
   140013102:	add    DWORD PTR [rax],eax
	...
   140013110:	int3   
   140013111:	cmp    al,BYTE PTR [rcx]
   140013113:	add    BYTE PTR [rax],al
   140013115:	add    BYTE PTR [rax],al
   140013117:	add    dl,bl
   140013119:	cmp    al,BYTE PTR [rcx]
   14001311b:	add    BYTE PTR [rax],al
   14001311d:	add    BYTE PTR [rax],al
   14001311f:	add    al,al
   140013121:	cmp    al,BYTE PTR [rcx]
	...
   14001312f:	add    ah,bl
   140013131:	cmp    eax,0x1
   140013136:	add    BYTE PTR [rax],al
   140013138:	hlt    
   140013139:	cmp    eax,0x1
   14001313e:	add    BYTE PTR [rax],al
   140013140:	sar    BYTE PTR [rip+0x1],0x0        # 0x140013148
	...
   14001314f:	add    BYTE PTR [rbp+rdi*1+0x1],dl
   140013156:	add    BYTE PTR [rax],al
   140013158:	je     0x14001315a
   14001315a:	add    BYTE PTR [rax],al
   14001315c:	add    BYTE PTR [rax],al
   14001315e:	add    BYTE PTR [rax+0x73],al
   140013164:	add    BYTE PTR [rax],al
   140013166:	add    BYTE PTR [rax+0x6f],al
   14001316c:	add    BYTE PTR [rax],al
   14001316e:	add    BYTE PTR [rax+0x13d84],al
   140013174:	add    BYTE PTR [rax],al
   140013176:	add    BYTE PTR [rax],al
   140013178:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140013179:	cmp    eax,0x1
	...
   140013186:	add    BYTE PTR [rax],al
   140013188:	adc    al,0x38
   14001318a:	add    DWORD PTR [rax],eax
   14001318c:	add    BYTE PTR [rax],al
   14001318e:	add    BYTE PTR [rax],al
   140013190:	out    dx,al
   140013191:	(bad)  
   140013192:	add    DWORD PTR [rax],eax
   140013194:	add    BYTE PTR [rax],al
   140013196:	add    BYTE PTR [rax],al
   140013198:	(bad)  
   140013199:	(bad)  
   14001319a:	add    DWORD PTR [rax],eax
   14001319c:	add    BYTE PTR [rax],al
   14001319e:	add    BYTE PTR [rax],al
   1400131a0:	cmp    BYTE PTR es:[rcx],al
   1400131a3:	add    BYTE PTR [rax],al
   1400131a5:	add    BYTE PTR [rax],al
   1400131a7:	add    ah,al
   1400131a9:	(bad)  
   1400131aa:	add    DWORD PTR [rax],eax
   1400131ac:	add    BYTE PTR [rax],al
   1400131ae:	add    BYTE PTR [rax],al
   1400131b0:	mov    dl,0x37
   1400131b2:	add    DWORD PTR [rax],eax
	...
   1400131c0:	mov    WORD PTR [rax],?
   1400131c2:	add    DWORD PTR [rax],eax
   1400131c4:	add    BYTE PTR [rax],al
   1400131c6:	add    BYTE PTR [rax],al
   1400131c8:	test   al,0x38
   1400131ca:	add    DWORD PTR [rax],eax
	...
   1400131d8:	cmp    BYTE PTR ss:[rcx],al
	...
   1400131e7:	add    ah,dh
   1400131e9:	cmp    BYTE PTR [rcx],al
   1400131eb:	add    BYTE PTR [rax],al
   1400131ed:	add    BYTE PTR [rax],al
   1400131ef:	add    dh,al
   1400131f1:	cmp    BYTE PTR [rcx],al
   1400131f3:	add    BYTE PTR [rax],al
   1400131f5:	add    BYTE PTR [rax],al
   1400131f7:	add    BYTE PTR [rdx],cl
   1400131f9:	cmp    DWORD PTR [rcx],eax
	...
   140013207:	add    dl,bl
   140013209:	cmp    BYTE PTR [rcx],al
	...
   140013217:	add    BYTE PTR [rax+0x38],bh
   14001321a:	add    DWORD PTR [rax],eax
   14001321c:	add    BYTE PTR [rax],al
   14001321e:	add    BYTE PTR [rax],al
   140013220:	rex.WX cmp BYTE PTR [rcx],al
   140013223:	add    BYTE PTR [rax],al
   140013225:	add    BYTE PTR [rax],al
   140013227:	add    BYTE PTR [rsi+0x38],bl
   14001322a:	add    DWORD PTR [rax],eax
	...
   140013238:	rex.X cmp BYTE PTR [rcx],al
	...
   140013247:	add    BYTE PTR [rax],ah
   140013249:	cmp    DWORD PTR [rcx],eax
   14001324b:	add    BYTE PTR [rax],al
   14001324d:	add    BYTE PTR [rax],al
   14001324f:	add    BYTE PTR [rdx],bh
   140013251:	cmp    DWORD PTR [rcx],eax
	...
   14001325f:	add    BYTE PTR [rsp+rdi*1+0x1],al
   140013263:	add    BYTE PTR [rax],al
   140013265:	add    BYTE PTR [rax],al
   140013267:	add    BYTE PTR [rsi+0x3c],ah
   14001326a:	add    DWORD PTR [rax],eax
   14001326c:	add    BYTE PTR [rax],al
   14001326e:	add    BYTE PTR [rax],al
   140013270:	test   BYTE PTR [rcx+rax*1],bh
   140013273:	add    BYTE PTR [rax],al
   140013275:	add    BYTE PTR [rax],al
   140013277:	add    BYTE PTR [rax+0x13c],ah
   14001327d:	add    BYTE PTR [rax],al
   14001327f:	add    BYTE PTR [rsi+0x13b],al
   140013285:	add    BYTE PTR [rax],al
   140013287:	add    ah,ch
   140013289:	cmp    al,0x1
   14001328b:	add    BYTE PTR [rax],al
   14001328d:	add    BYTE PTR [rax],al
   14001328f:	add    BYTE PTR [rax],dl
   140013291:	cmp    eax,0x1
   140013296:	add    BYTE PTR [rax],al
   140013298:	or     bh,BYTE PTR [rcx+rax*1]
   14001329b:	add    BYTE PTR [rax],al
   14001329d:	add    BYTE PTR [rax],al
   14001329f:	add    dh,ah
   1400132a1:	cmp    eax,DWORD PTR [rcx]
   1400132a3:	add    BYTE PTR [rax],al
   1400132a5:	add    BYTE PTR [rax],al
   1400132a7:	add    BYTE PTR [rsi+0x3b],ch
   1400132aa:	add    DWORD PTR [rax],eax
   1400132ac:	add    BYTE PTR [rax],al
   1400132ae:	add    BYTE PTR [rax],al
   1400132b0:	rex cmp eax,DWORD PTR [rcx]
   1400132b3:	add    BYTE PTR [rax],al
   1400132b5:	add    BYTE PTR [rax],al
   1400132b7:	add    dl,al
   1400132b9:	cmp    eax,DWORD PTR [rcx]
   1400132bb:	add    BYTE PTR [rax],al
   1400132bd:	add    BYTE PTR [rax],al
   1400132bf:	add    ah,cl
   1400132c1:	cmp    al,0x1
   1400132c3:	add    BYTE PTR [rax],al
   1400132c5:	add    BYTE PTR [rax],al
   1400132c7:	add    BYTE PTR [rdx+0x13b],ah
   1400132cd:	add    BYTE PTR [rax],al
   1400132cf:	add    BYTE PTR [rdx],ah
   1400132d1:	cmp    al,0x1
	...
   1400132df:	add    BYTE PTR [rsi+0x40],dh
   1400132e2:	add    DWORD PTR [rax],eax
   1400132e4:	add    BYTE PTR [rax],al
   1400132e6:	add    BYTE PTR [rax],al
   1400132e8:	fs (bad) 
   1400132ea:	add    DWORD PTR [rax],eax
   1400132ec:	add    BYTE PTR [rax],al
   1400132ee:	add    BYTE PTR [rax],al
   1400132f0:	(bad)  
   1400132f1:	rex add DWORD PTR [rax],eax
   1400132f4:	add    BYTE PTR [rax],al
   1400132f6:	add    BYTE PTR [rax],al
   1400132f8:	sahf   
   1400132f9:	(bad)  
   1400132fa:	add    DWORD PTR [rax],eax
   1400132fc:	add    BYTE PTR [rax],al
   1400132fe:	add    BYTE PTR [rax],al
   140013300:	jp     0x140013339
   140013302:	add    DWORD PTR [rax],eax
   140013304:	add    BYTE PTR [rax],al
   140013306:	add    BYTE PTR [rax],al
   140013308:	outs   dx,BYTE PTR ds:[rsi]
   140013309:	(bad)  
   14001330a:	add    DWORD PTR [rax],eax
   14001330c:	add    BYTE PTR [rax],al
   14001330e:	add    BYTE PTR [rax],al
   140013310:	add    BYTE PTR [rax+0x1],0x0
   140013314:	add    BYTE PTR [rax],al
   140013316:	add    BYTE PTR [rax],al
   140013318:	rex.WR (bad) 
   14001331a:	add    DWORD PTR [rax],eax
   14001331c:	add    BYTE PTR [rax],al
   14001331e:	add    BYTE PTR [rax],al
   140013320:	rex (bad) 
   140013322:	add    DWORD PTR [rax],eax
   140013324:	add    BYTE PTR [rax],al
   140013326:	add    BYTE PTR [rax],al
   140013328:	sub    al,0x37
   14001332a:	add    DWORD PTR [rax],eax
   14001332c:	add    BYTE PTR [rax],al
   14001332e:	add    BYTE PTR [rax],al
   140013330:	and    dh,BYTE PTR [rdi]
   140013332:	add    DWORD PTR [rax],eax
   140013334:	add    BYTE PTR [rax],al
   140013336:	add    BYTE PTR [rax],al
   140013338:	sbb    dh,BYTE PTR [rdi]
   14001333a:	add    DWORD PTR [rax],eax
   14001333c:	add    BYTE PTR [rax],al
   14001333e:	add    BYTE PTR [rax],al
   140013340:	adc    dh,BYTE PTR [rdi]
   140013342:	add    DWORD PTR [rax],eax
   140013344:	add    BYTE PTR [rax],al
   140013346:	add    BYTE PTR [rax],al
   140013348:	add    BYTE PTR [rdi],dh
   14001334a:	add    DWORD PTR [rax],eax
   14001334c:	add    BYTE PTR [rax],al
   14001334e:	add    BYTE PTR [rax],al
   140013350:	out    dx,al
   140013351:	add    DWORD PTR ss:[rax],eax
   140013354:	add    BYTE PTR [rax],al
   140013356:	add    BYTE PTR [rax],al
   140013358:	loopne 0x140013390
   14001335a:	add    DWORD PTR [rax],eax
   14001335c:	add    BYTE PTR [rax],al
   14001335e:	add    BYTE PTR [rax],al
   140013360:	shl    BYTE PTR [rsi],cl
   140013362:	add    DWORD PTR [rax],eax
   140013364:	add    BYTE PTR [rax],al
   140013366:	add    BYTE PTR [rax],al
   140013368:	retf   0x136
   14001336b:	add    BYTE PTR [rax],al
   14001336d:	add    BYTE PTR [rax],al
   14001336f:	add    BYTE PTR [rsi+0x136],bh
   140013375:	add    BYTE PTR [rax],al
   140013377:	add    BYTE PTR [rsi+rsi*1+0x1],dh
   14001337e:	add    BYTE PTR [rax],al
   140013380:	stos   BYTE PTR es:[rdi],al
   140013381:	add    DWORD PTR ss:[rax],eax
   140013384:	add    BYTE PTR [rax],al
   140013386:	add    BYTE PTR [rax],al
   140013388:	pushf  
   140013389:	add    DWORD PTR ss:[rax],eax
   14001338c:	add    BYTE PTR [rax],al
   14001338e:	add    BYTE PTR [rax],al
   140013390:	nop
   140013391:	add    DWORD PTR ss:[rax],eax
   140013394:	add    BYTE PTR [rax],al
   140013396:	add    BYTE PTR [rax],al
   140013398:	mov    BYTE PTR [rsi],dh
   14001339a:	add    DWORD PTR [rax],eax
   14001339c:	add    BYTE PTR [rax],al
   14001339e:	add    BYTE PTR [rax],al
   1400133a0:	jl     0x1400133d8
   1400133a2:	add    DWORD PTR [rax],eax
   1400133a4:	add    BYTE PTR [rax],al
   1400133a6:	add    BYTE PTR [rax],al
   1400133a8:	jo     0x1400133e0
   1400133aa:	add    DWORD PTR [rax],eax
   1400133ac:	add    BYTE PTR [rax],al
   1400133ae:	add    BYTE PTR [rax],al
   1400133b0:	fs add DWORD PTR ss:[rax],eax
   1400133b4:	add    BYTE PTR [rax],al
   1400133b6:	add    BYTE PTR [rax],al
   1400133b8:	pop    rax
   1400133b9:	add    DWORD PTR ss:[rax],eax
   1400133bc:	add    BYTE PTR [rax],al
   1400133be:	add    BYTE PTR [rax],al
   1400133c0:	rex.WRX
   1400133c1:	add    DWORD PTR ss:[rax],eax
   1400133c4:	add    BYTE PTR [rax],al
   1400133c6:	add    BYTE PTR [rax],al
   1400133c8:	rex.RX
   1400133c9:	add    DWORD PTR ss:[rax],eax
   1400133cc:	add    BYTE PTR [rax],al
   1400133ce:	add    BYTE PTR [rax],al
   1400133d0:	cmp    BYTE PTR [rsi],dh
   1400133d2:	add    DWORD PTR [rax],eax
   1400133d4:	add    BYTE PTR [rax],al
   1400133d6:	add    BYTE PTR [rax],al
   1400133d8:	sub    dh,BYTE PTR [rsi]
   1400133da:	add    DWORD PTR [rax],eax
   1400133dc:	add    BYTE PTR [rax],al
   1400133de:	add    BYTE PTR [rax],al
   1400133e0:	xchg   esi,eax
   1400133e1:	(bad)  
   1400133e2:	add    DWORD PTR [rax],eax
   1400133e4:	add    BYTE PTR [rax],al
   1400133e6:	add    BYTE PTR [rax],al
   1400133e8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400133e9:	(bad)  
   1400133ea:	add    DWORD PTR [rax],eax
   1400133ec:	add    BYTE PTR [rax],al
   1400133ee:	add    BYTE PTR [rax],al
   1400133f0:	mov    al,0x3f
   1400133f2:	add    DWORD PTR [rax],eax
   1400133f4:	add    BYTE PTR [rax],al
   1400133f6:	add    BYTE PTR [rax],al
   1400133f8:	mov    edx,0x13f
   1400133fd:	add    BYTE PTR [rax],al
   1400133ff:	add    ah,al
   140013401:	(bad)  
   140013402:	add    DWORD PTR [rax],eax
   140013404:	add    BYTE PTR [rax],al
   140013406:	add    BYTE PTR [rax],al
   140013408:	(bad)  
   140013409:	(bad)  
   14001340a:	add    DWORD PTR [rax],eax
   14001340c:	add    BYTE PTR [rax],al
   14001340e:	add    BYTE PTR [rax],al
   140013410:	fdivr  DWORD PTR [rdi]
   140013412:	add    DWORD PTR [rax],eax
   140013414:	add    BYTE PTR [rax],al
   140013416:	add    BYTE PTR [rax],al
   140013418:	loop   0x140013459
   14001341a:	add    DWORD PTR [rax],eax
   14001341c:	add    BYTE PTR [rax],al
   14001341e:	add    BYTE PTR [rax],al
   140013420:	hlt    
   140013421:	(bad)  
   140013422:	add    DWORD PTR [rax],eax
   140013424:	add    BYTE PTR [rax],al
   140013426:	add    BYTE PTR [rax],al
   140013428:	(bad)  
   140013429:	(bad)  
   14001342a:	add    DWORD PTR [rax],eax
   14001342c:	add    BYTE PTR [rax],al
   14001342e:	add    BYTE PTR [rax],al
   140013430:	rex.WX
   140013431:	rex add DWORD PTR [rax],eax
	...
   140013440:	sbb    al,0x40
   140013442:	add    DWORD PTR [rax],eax
	...
   140013450:	sahf   
   140013451:	cmp    al,BYTE PTR [rcx]
   140013453:	add    BYTE PTR [rax],al
   140013455:	add    BYTE PTR [rax],al
   140013457:	add    BYTE PTR [rax+0x13a],cl
	...
   140013465:	add    BYTE PTR [rax],al
   140013467:	add    BYTE PTR [rax],cl
   140013469:	rex add DWORD PTR [rax],eax
	...
   140013478:	stc    
   140013479:	add    DWORD PTR [rdi+0x65],eax
   14001347c:	je     0x1400134c1
   14001347e:	outs   dx,DWORD PTR ds:[rsi]
   14001347f:	outs   dx,BYTE PTR ds:[rsi]
   140013480:	jae    0x1400134f1
   140013482:	ins    BYTE PTR es:[rdi],dx
   140013483:	gs rex.WRXB jne 0x1400134fb
   140013487:	jo     0x1400134fe
   140013489:	je     0x1400134ce
   14001348b:	push   rax
   14001348c:	add    BYTE PTR [rax],al
   14001348e:	and    eax,DWORD PTR [rip+0x4c746553]        # 0x18c7599e7
   140013494:	(bad)  
   140013495:	jae    0x14001350b
   140013497:	rex.RB jb 0x14001350c
   14001349a:	outs   dx,DWORD PTR ds:[rsi]
   14001349b:	jb     0x14001349d
   14001349d:	add    BYTE PTR [rdi+0x2],dl
   1400134a0:	rex.RXB
   1400134a1:	gs je  0x1400134f0
   1400134a4:	(bad)  
   1400134a5:	jae    0x14001351b
   1400134a7:	rex.RB jb 0x14001351c
   1400134aa:	outs   dx,DWORD PTR ds:[rsi]
   1400134ab:	jb     0x1400134ad
   1400134ad:	add    bh,cl
   1400134af:	add    BYTE PTR [rbx+0x72],al
   1400134b2:	gs (bad) 
   1400134b4:	je     0x14001351b
   1400134b6:	rex.WRB jne 0x14001352d
   1400134b9:	gs js  0x140013513
   1400134bc:	add    BYTE PTR [rax],al
   1400134be:	mov    al,BYTE PTR [rdx]
   1400134c0:	rex.RXB
   1400134c1:	gs je  0x140013512
   1400134c4:	jne    0x140013533
   1400134c6:	(bad)  
   1400134c7:	gs jb  0x140013510
   1400134ca:	outs   dx,DWORD PTR ds:[rsi]
   1400134cb:	jb     0x14001353a
   1400134cd:	(bad)  
   1400134ce:	je     0x140013527
   1400134d0:	add    BYTE PTR [rax],al
   1400134d2:	rol    BYTE PTR [rax],0x43
   1400134d5:	jb     0x14001353c
   1400134d7:	(bad)  
   1400134d8:	je     0x14001353f
   1400134da:	imul   r13d,DWORD PTR [rbp+r12*2+0x57],0x4300bd00
   1400134e3:	jb     0x14001354a
   1400134e5:	(bad)  
   1400134e6:	je     0x14001354d
   1400134e8:	imul   r13d,DWORD PTR [rbp+r12*2+0x4d],0x69707061
   1400134f1:	outs   dx,BYTE PTR ds:[rsi]
   1400134f2:	addr32 push rdi
   1400134f4:	add    BYTE PTR [rax],al
   1400134f6:	jge    0x1400134f8
   1400134f8:	rex.XB ins BYTE PTR es:[rdi],dx
   1400134fa:	outs   dx,DWORD PTR ds:[rsi]
   1400134fb:	jae    0x140013562
   1400134fd:	rex.W (bad) 
   1400134ff:	outs   dx,BYTE PTR ds:[rsi]
   140013500:	fs ins BYTE PTR es:[rdi],dx
   140013502:	gs add bh,al
   140013505:	add    ecx,DWORD PTR [rbp+0x61]
   140013508:	jo     0x140013560
   14001350a:	imul   esp,DWORD PTR [rbp+0x77],0x6946664f
   140013511:	ins    BYTE PTR es:[rdi],dx
   140013512:	add    BYTE PTR gs:[rcx+0x6d6e5505],ah
   140013519:	(bad)  
   14001351a:	jo     0x140013572
   14001351c:	imul   esp,DWORD PTR [rbp+0x77],0x6946664f
   140013523:	ins    BYTE PTR es:[rdi],dx
   140013524:	add    BYTE PTR gs:[rbx],bl
   140013527:	add    al,BYTE PTR [rdi+0x65]
   14001352a:	je     0x140013570
   14001352c:	(bad)  
   14001352d:	je     0x140013594
   14001352f:	rex.RX outs dx,DWORD PTR ds:[rsi]
   140013531:	jb     0x1400135a0
   140013533:	(bad)  
   140013534:	je     0x14001358d
   140013536:	add    BYTE PTR [rax],al
   140013538:	add    al,BYTE PTR [rbx]
   14001353a:	rex.RXB
   14001353b:	gs je  0x140013592
   14001353e:	imul   ebp,DWORD PTR [rbp+0x65],0x6d726f46
   140013545:	(bad)  
   140013546:	je     0x14001359f
   140013548:	add    BYTE PTR [rax],al
   14001354a:	outs   dx,BYTE PTR ds:[rsi]
   14001354b:	add    al,BYTE PTR [rdi+0x65]
   14001354e:	je     0x14001359d
   140013550:	outs   dx,DWORD PTR ds:[rsi]
   140013551:	fs jne 0x1400135c0
   140013554:	gs rex.W (bad) 
   140013557:	outs   dx,BYTE PTR ds:[rsi]
   140013558:	fs ins BYTE PTR es:[rdi],dx
   14001355a:	gs push rdi
   14001355c:	add    BYTE PTR [rax],al
   14001355e:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001355f:	add    al,BYTE PTR [rdi+0x65]
   140013562:	je     0x1400135b4
   140013564:	jb     0x1400135d5
   140013566:	movsxd eax,DWORD PTR [rcx+0x64]
   140013569:	fs jb  0x1400135d1
   14001356c:	jae    0x1400135e1
   14001356e:	add    BYTE PTR [rax],al
   140013570:	adc    BYTE PTR [rdx],al
   140013572:	rex.RXB
   140013573:	gs je  0x1400135b9
   140013576:	jne    0x1400135ea
   140013578:	jb     0x1400135df
   14001357a:	outs   dx,BYTE PTR ds:[rsi]
   14001357b:	je     0x1400135cd
   14001357d:	jb     0x1400135ee
   14001357f:	movsxd esp,DWORD PTR [rbp+0x73]
   140013582:	jae    0x140013584
   140013584:	pop    rbx
   140013585:	add    al,BYTE PTR [rdi+0x65]
   140013588:	je     0x1400135d6
   14001358a:	outs   dx,DWORD PTR ds:[rsi]
   14001358b:	movsxd esp,DWORD PTR [rcx+0x6c]
   14001358e:	rex.WB outs dx,BYTE PTR gs:[rsi]
   140013591:	outs   dx,WORD PTR ds:[rsi]
   140013593:	push   rdi
   140013594:	add    BYTE PTR [rax],al
   140013596:	or     eax,DWORD PTR [rbx]
   140013598:	rex.RXB
   140013599:	gs je  0x1400135f1
   14001359c:	jae    0x140013603
   14001359e:	jb     0x1400135e4
   1400135a0:	gs data16 (bad) 
   1400135a3:	jne    0x140013611
   1400135a5:	je     0x1400135f3
   1400135a7:	outs   dx,DWORD PTR ds:[rsi]
   1400135a8:	movsxd esp,DWORD PTR [rcx+0x6c]
   1400135ab:	gs rex.WRX (bad) 
   1400135ae:	ins    DWORD PTR es:[rdi],dx
   1400135af:	add    BYTE PTR gs:[rax],al
   1400135b2:	rol    BYTE PTR [rbx],0x4c
   1400135b5:	outs   dx,DWORD PTR ds:[rsi]
   1400135b6:	movsxd esp,DWORD PTR [rcx+0x6c]
   1400135b9:	gs rex.WRX (bad) 
   1400135bc:	ins    DWORD PTR es:[rdi],dx
   1400135bd:	gs push rsp
   1400135bf:	outs   dx,DWORD PTR ds:[rsi]
   1400135c0:	rex.WR
   1400135c1:	rex.XB
   1400135c2:	rex.WB
   1400135c3:	add    BYTE PTR [rax],r8b
   1400135c6:	or     DWORD PTR [rbx],eax
   1400135c8:	rex.RXB
   1400135c9:	gs je  0x140013621
   1400135cc:	jae    0x140013633
   1400135ce:	jb     0x140013614
   1400135d0:	gs data16 (bad) 
   1400135d3:	jne    0x140013641
   1400135d5:	je     0x140013623
   1400135d7:	rex.XB
   1400135d8:	rex.WB
   1400135d9:	add    BYTE PTR [rax],r8b
   1400135dc:	movabs al,ds:0x4d74616d726f4601
   1400135e5:	gs jae 0x14001365b
   1400135e8:	(bad)  
   1400135e9:	addr32 gs push rdi
   1400135ec:	add    BYTE PTR [rax],al
   1400135ee:	mov    ch,0x3
   1400135f0:	rex.WR outs dx,DWORD PTR ds:[rsi]
   1400135f2:	movsxd esp,DWORD PTR [rcx+0x6c]
   1400135f5:	rex.B ins BYTE PTR es:[rdi],dx
   1400135f7:	ins    BYTE PTR es:[rdi],dx
   1400135f8:	outs   dx,DWORD PTR ds:[rsi]
   1400135f9:	movsxd eax,DWORD PTR [rax]
   1400135fb:	add    bh,bh
   1400135fd:	add    eax,0x74697257
   140013602:	rex.XB outs dx,DWORD PTR gs:[rsi]
   140013605:	outs   dx,BYTE PTR ds:[rsi]
   140013606:	jae    0x140013677
   140013608:	ins    BYTE PTR es:[rdi],dx
   140013609:	gs push rdi
   14001360b:	add    cl,cl
   14001360d:	add    al,BYTE PTR [rdi+0x65]
   140013610:	je     0x140013665
   140013612:	je     0x140013678
   140013614:	rex.W (bad) 
   140013616:	outs   dx,BYTE PTR ds:[rsi]
   140013617:	fs ins BYTE PTR es:[rdi],dx
   140013619:	add    BYTE PTR gs:[rax],al
   14001361c:	rex.WXB
   14001361d:	rex.RB push r10
   14001361f:	rex.WRX
   140013620:	rex.RB
   140013621:	xor    r14,QWORD PTR [rdx]
   140013624:	cs fs ins BYTE PTR es:[rdi],dx
   140013627:	ins    BYTE PTR es:[rdi],dx
   140013628:	add    BYTE PTR [rax],al
   14001362a:	(bad)  
   14001362b:	add    ebx,DWORD PTR [rdi+0x77]
   14001362e:	jae    0x140013695
   140013630:	je     0x14001369e
   140013632:	outs   dx,DWORD PTR ds:[rsi]
   140013633:	movsxd esp,DWORD PTR [rcx+0x6c]
   140013636:	gs add ah,bl
   140013639:	add    al,0x73
   14001363b:	ja     0x1400136ad
   14001363d:	jb     0x1400136a8
   14001363f:	outs   dx,BYTE PTR ds:[rsi]
   140013640:	je     0x1400136a8
   140013642:	pop    rdi
   140013643:	jae    0x140013645
   140013645:	add    dl,dh
   140013647:	add    DWORD PTR [rdi+0x6c],ebx
   14001364a:	je     0x1400136bb
   14001364c:	ja     0x14001364e
   14001364e:	(bad)  
   14001364f:	add    eax,0x74736377
   140013654:	outs   dx,DWORD PTR ds:[rsi]
   140013655:	imul   eax,DWORD PTR [rax],0x0
   140013658:	cwde   
   140013659:	add    ebx,DWORD PTR [rdi+0x77]
   14001365c:	movsxd esi,DWORD PTR [rbx+0x6e]
   14001365f:	jae    0x1400136c6
   140013661:	je     0x140013663
   140013663:	add    BYTE PTR [rbx+rax*1],al
   140013666:	pop    rdi
   140013667:	jae    0x1400136dd
   140013669:	jb     0x1400136d9
   14001366b:	imul   esp,DWORD PTR [rbx+0x6d],0x2fa0070
   140013672:	pop    rdi
   140013673:	jae    0x1400136e9
   140013675:	jb     0x1400136e0
   140013677:	movsxd ebp,DWORD PTR [rbp+0x70]
   14001367a:	add    BYTE PTR [rax],al
   14001367c:	add    BYTE PTR [rsp+rbp*2],0x6f
   140013680:	movsxd esp,DWORD PTR [rcx+0x6c]
   140013683:	je     0x1400136ee
   140013685:	ins    DWORD PTR es:[rdi],dx
   140013686:	add    BYTE PTR gs:[rip+0x74775f04],al        # 0x1b4789591
   14001368d:	outs   dx,DWORD PTR ds:[rsi]
   14001368e:	imul   eax,DWORD PTR [rax],0x775f038a
   140013694:	movsxd esi,DWORD PTR [rbx+0x69]
   140013697:	movsxd ebp,DWORD PTR [rbp+0x70]
   14001369a:	add    BYTE PTR [rax],al
   14001369c:	imul   eax,DWORD PTR [rbx],0x6e73765f
   1400136a2:	ja     0x140013714
   1400136a4:	jb     0x14001370f
   1400136a6:	outs   dx,BYTE PTR ds:[rsi]
   1400136a7:	je     0x14001370f
   1400136a9:	add    BYTE PTR [rcx],al
   1400136ab:	add    eax,0x63736377
   1400136b0:	push   0xffffffff86000072
   1400136b5:	add    al,0x6d
   1400136b7:	(bad)  
   1400136b8:	ins    BYTE PTR es:[rdi],dx
   1400136b9:	ins    BYTE PTR es:[rdi],dx
   1400136ba:	outs   dx,DWORD PTR ds:[rsi]
   1400136bb:	movsxd eax,DWORD PTR [rax]
   1400136bd:	add    BYTE PTR [rdi+0x61635f00],bh
   1400136c3:	ins    BYTE PTR es:[rdi],dx
   1400136c4:	ins    BYTE PTR es:[rdi],dx
   1400136c5:	outs   dx,BYTE PTR ds:[rsi]
   1400136c6:	gs ja  0x140013731
   1400136c9:	add    BYTE PTR [rsp+rax*1+0x66],cl
   1400136cd:	jb     0x140013734
   1400136cf:	add    BYTE PTR gs:[rax],al
   1400136d2:	push   rbp
   1400136d3:	add    BYTE PTR [rdi+0x58],bl
   1400136d6:	movsxd esi,DWORD PTR [rax+0x74]
   1400136d9:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0xae0072
   1400136e2:	pop    rdi
   1400136e3:	(bad)  
   1400136e4:	ins    DWORD PTR es:[rdi],dx
   1400136e5:	jae    0x14001374e
   1400136e7:	pop    rdi
   1400136e8:	gs js  0x140013754
   1400136eb:	je     0x1400136ed
   1400136ed:	add    BYTE PTR [rbp+0x775f5f00],bl
   1400136f3:	addr32 gs je 0x140013764
   1400136f7:	(bad)  
   1400136f8:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
   1400136ff:	add    BYTE PTR [rsi+0x735f5f00],cl
   140013705:	gs je  0x140013767
   140013708:	(bad)  
   140013709:	jo     0x14001377b
   14001370b:	pop    rdi
   14001370c:	je     0x140013787
   14001370e:	jo     0x140013775
   140013710:	add    BYTE PTR [rax],al
   140013712:	xor    al,BYTE PTR [riz*2+0x746978]
   140013719:	add    BYTE PTR [rsi],cl
   14001371b:	add    DWORD PTR [rdi+0x65],ebx
   14001371e:	js     0x140013789
   140013720:	je     0x140013722
   140013722:	rol    DWORD PTR [rax],0x5f
   140013725:	movsxd esp,DWORD PTR [rbp+0x78]
   140013728:	imul   esi,DWORD PTR [rax+rax*1+0x0],0x5f5f0090
   140013730:	jae    0x140013797
   140013732:	je     0x1400137a9
   140013734:	jae    0x14001379b
   140013736:	jb     0x1400137a5
   140013738:	(bad)  
   140013739:	je     0x1400137a3
   14001373b:	gs jb  0x1400137b0
   14001373e:	add    BYTE PTR [rax],al
   140013740:	jge    0x140013743
   140013742:	pop    rdi
   140013743:	imul   ebp,DWORD PTR [rsi+0x69],0x72657474
   14001374a:	ins    DWORD PTR es:[rdi],dx
   14001374b:	add    BYTE PTR [rdi+0x0],dl
   14001374e:	pop    rdi
   14001374f:	pop    rdi
   140013750:	rex.XB pop r15
   140013752:	jae    0x1400137c4
   140013754:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
   140013758:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
   14001375f:	ins    BYTE PTR es:[rdi],dx
   140013760:	gs jb  0x140013763
   140013763:	add    BYTE PTR [rdi],ah
   140013765:	add    DWORD PTR [rdi+0x66],ebx
   140013768:	ins    DWORD PTR es:[rdi],dx
   140013769:	outs   dx,DWORD PTR ds:[rsi]
   14001376a:	fs add BYTE PTR gs:[rax],al
   14001376e:	rol    BYTE PTR [rax],cl
   140013770:	pop    rdi
   140013771:	movsxd ebp,DWORD PTR [rdi+0x6d]
   140013774:	ins    DWORD PTR es:[rdi],dx
   140013775:	outs   dx,DWORD PTR ds:[rsi]
   140013776:	fs add BYTE PTR gs:[rax],al
   14001377a:	adc    al,BYTE PTR [rax]
   14001377c:	(bad)  
   14001377d:	(bad)  
   14001377e:	xor    DWORD PTR [rcx+rdi*2+0x70],esi
   140013782:	gs pop rdi
   140013784:	imul   ebp,DWORD PTR [rsi+0x66],0x5540406f
   14001378b:	rex.RB
   14001378c:	rex.B
   14001378d:	rex.B
   14001378e:	rex pop rax
   140013790:	pop    rdx
   140013791:	add    BYTE PTR [rbp+0x73],ch
   140013794:	jbe    0x1400137f9
   140013796:	jb     0x14001380c
   140013798:	cs fs ins BYTE PTR es:[rdi],dx
   14001379b:	ins    BYTE PTR es:[rdi],dx
   14001379c:	add    BYTE PTR [rax],al
   14001379e:	(bad)  
   14001379f:	add    BYTE PTR [rdi],bh
   1400137a1:	je     0x140013808
   1400137a3:	jb     0x140013812
   1400137a5:	imul   ebp,DWORD PTR [rsi+0x61],0x40406574
   1400137ac:	pop    rcx
   1400137ad:	pop    r8
   1400137af:	pop    rax
   1400137b0:	pop    rdx
   1400137b1:	add    BYTE PTR [rdx+0x0],al
   1400137b4:	rex.XB outs dx,DWORD PTR ds:[rsi]
   1400137b6:	push   rbp
   1400137b7:	outs   dx,BYTE PTR ds:[rsi]
   1400137b8:	imul   ebp,DWORD PTR [rsi+0x69],0x6c616974
   1400137bf:	imul   edi,DWORD PTR [rdx+0x65],0x260000
   1400137c6:	rex.XB outs dx,DWORD PTR ds:[rsi]
   1400137c8:	rex.WB outs dx,BYTE PTR ds:[rsi]
   1400137ca:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   1400137d2:	rex.RB js 0x1400137d5
   1400137d5:	add    BYTE PTR [rdi],ah
   1400137d7:	add    BYTE PTR [rbx+0x6f],al
   1400137da:	rex.WB outs dx,BYTE PTR ds:[rsi]
   1400137dc:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   1400137e4:	push   rbx
   1400137e5:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   1400137e9:	imul   esi,DWORD PTR [rcx+rdi*2+0x0],0x43000800
   1400137f1:	outs   dx,DWORD PTR ds:[rsi]
   1400137f2:	rex.XB jb 0x14001385a
   1400137f5:	(bad)  
   1400137f6:	je     0x14001385d
   1400137f8:	rex.WB outs dx,BYTE PTR ds:[rsi]
   1400137fa:	jae    0x140013870
   1400137fc:	(bad)  
   1400137fd:	outs   dx,BYTE PTR ds:[rsi]
   1400137fe:	movsxd esp,DWORD PTR [rbp+0x0]
   140013801:	add    BYTE PTR [rcx],bl
   140013803:	add    BYTE PTR [rdi+0x65],al
   140013806:	je     0x14001385d
   140013808:	jae    0x14001386f
   14001380a:	jb     0x14001385a
   14001380c:	(bad)  
   14001380d:	ins    DWORD PTR es:[rdi],dx
   14001380e:	gs rex.RB js 0x140013869
   140013812:	add    BYTE PTR [rax],al
   140013814:	add    BYTE PTR ds:[rbx+0x6f],al
   140013818:	push   rsp
   140013819:	(bad)  
   14001381a:	jae    0x140013887
   14001381c:	rex.WRB
   14001381d:	gs ins DWORD PTR es:[rdi],dx
   14001381f:	rex.B ins BYTE PTR es:[rdi],dx
   140013821:	ins    BYTE PTR es:[rdi],dx
   140013822:	outs   dx,DWORD PTR ds:[rsi]
   140013823:	movsxd eax,DWORD PTR [rax]
   140013825:	add    BYTE PTR [rdi],bh
   140013827:	add    BYTE PTR [rbx+0x6f],al
   14001382a:	push   rsp
   14001382b:	(bad)  
   14001382c:	jae    0x140013899
   14001382e:	rex.WRB
   14001382f:	gs ins DWORD PTR es:[rdi],dx
   140013831:	rex.RX jb 0x140013899
   140013834:	add    BYTE PTR gs:[rbx],al
   140013837:	add    BYTE PTR [rdi+rbp*2+0x63],cl
   14001383b:	(bad)  
   14001383c:	ins    BYTE PTR es:[rdi],dx
   14001383d:	rex.RX jb 0x1400138a5
   140013840:	add    BYTE PTR gs:[rip+0x656c5300],ch        # 0x1a56d8b47
   140013847:	gs jo  0x14001384a
   14001384a:	add    al,BYTE PTR [rax]
   14001384c:	push   rdx
   14001384d:	je     0x1400138bb
   14001384f:	rex.XB (bad) 
   140013851:	jo     0x1400138c7
   140013853:	jne    0x1400138c7
   140013855:	rex.XB outs dx,DWORD PTR gs:[rsi]
   140013858:	outs   dx,BYTE PTR ds:[rsi]
   140013859:	je     0x1400138c0
   14001385b:	js     0x1400138d1
   14001385d:	add    BYTE PTR [rcx],cl
   14001385f:	add    BYTE PTR [rdx+0x74],dl
   140013862:	ins    BYTE PTR es:[rdi],dx
   140013863:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140013865:	outs   dx,DWORD PTR ds:[rsi]
   140013866:	imul   esi,DWORD PTR [rbp+0x70],0x46
   14001386a:	jne    0x1400138da
   14001386c:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   140013870:	outs   dx,BYTE PTR ds:[rsi]
   140013871:	rex.RB outs dx,BYTE PTR ds:[rsi]
   140013873:	je     0x1400138e7
   140013875:	jns    0x140013877
   140013877:	add    BYTE PTR [rdi],cl
   140013879:	add    BYTE PTR [rdx+0x74],dl
   14001387c:	ins    BYTE PTR es:[rdi],dx
   14001387d:	push   rsi
   14001387e:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
   140013885:	outs   dx,BYTE PTR ds:[rsi]
   140013886:	ja     0x1400138f1
   140013888:	outs   dx,BYTE PTR ds:[rsi]
   140013889:	add    BYTE PTR fs:[rax],al
   14001388c:	adc    DWORD PTR [rax],eax
   14001388e:	push   rbp
   14001388f:	outs   dx,BYTE PTR ds:[rsi]
   140013890:	push   0x6c646e61
   140013895:	gs fs rex.RB js 0x1400138fd
   14001389a:	gs jo  0x140013911
   14001389d:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   1400138a4:	gs jb  0x1400138a7
   1400138a7:	add    BYTE PTR [rdi],cl
   1400138a9:	add    BYTE PTR [rbx+0x65],dl
   1400138ac:	je     0x140013903
   1400138ae:	outs   dx,BYTE PTR ds:[rsi]
   1400138af:	push   0x6c646e61
   1400138b4:	gs fs rex.RB js 0x14001391c
   1400138b9:	gs jo  0x140013930
   1400138bc:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   1400138c3:	gs jb  0x1400138c6
   1400138c6:	rex.WXB add BYTE PTR [r13+r12*2+0x72],dl
   1400138cb:	ins    DWORD PTR es:[rdi],dx
   1400138cc:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
   1400138d3:	outs   dx,DWORD PTR ds:[rsi]
   1400138d4:	movsxd esp,DWORD PTR [rbp+0x73]
   1400138d7:	jae    0x1400138d9
   1400138d9:	add    BYTE PTR [rax],al
   1400138db:	add    BYTE PTR [rcx+0x75],dl
   1400138de:	gs jb  0x14001395a
   1400138e1:	push   rax
   1400138e2:	gs jb  0x14001394b
   1400138e5:	outs   dx,DWORD PTR ds:[rsi]
   1400138e6:	jb     0x140013955
   1400138e8:	(bad)  
   1400138e9:	outs   dx,BYTE PTR ds:[rsi]
   1400138ea:	movsxd esp,DWORD PTR [rbp+0x43]
   1400138ed:	outs   dx,DWORD PTR ds:[rsi]
   1400138ee:	jne    0x14001395e
   1400138f0:	je     0x140013957
   1400138f2:	jb     0x1400138f4
   1400138f4:	or     eax,0x74654700
   1400138f9:	rex.XB jne 0x14001396e
   1400138fc:	jb     0x140013963
   1400138fe:	outs   dx,BYTE PTR ds:[rsi]
   1400138ff:	je     0x140013951
   140013901:	jb     0x140013972
   140013903:	movsxd esp,DWORD PTR [rbp+0x73]
   140013906:	jae    0x140013951
   140013908:	add    BYTE PTR fs:[rcx],dl
   14001390b:	add    BYTE PTR [rdi+0x65],al
   14001390e:	je     0x140013953
   140013910:	jne    0x140013984
   140013912:	jb     0x140013979
   140013914:	outs   dx,BYTE PTR ds:[rsi]
   140013915:	je     0x14001396b
   140013917:	push   0x64616572
   14001391c:	rex.WB
   14001391d:	add    BYTE PTR fs:[rax],al
   140013920:	adc    al,0x0
   140013922:	rex.RXB
   140013923:	gs je  0x140013979
   140013926:	jns    0x14001399b
   140013928:	je     0x14001398f
   14001392a:	ins    DWORD PTR es:[rdi],dx
   14001392b:	push   rsp
   14001392c:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
   140013933:	ins    BYTE PTR es:[rdi],dx
   140013934:	gs push rsp
   140013936:	imul   ebp,DWORD PTR [rbp+0x65],0x47001800
   14001393d:	gs je  0x140013994
   140013940:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
   140013947:	je     0x140013949
   140013949:	add    BYTE PTR [rdi+0x4c],cl
   14001394c:	rex.RB
   14001394d:	push   r13
   14001394f:	push   rsp
   140013950:	xor    esi,DWORD PTR [rdx]
   140013952:	cs fs ins BYTE PTR es:[rdi],dx
   140013955:	ins    BYTE PTR es:[rdi],dx
   140013956:	add    BYTE PTR [rax],al
   140013958:	(bad)  
   140013959:	jo     0x1400139c4
   14001395b:	sub    eax,0x772d736d
   140013960:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   140013967:	sub    eax,0x2d6d6f63
   14001396c:	ins    BYTE PTR es:[rdi],dx
   14001396d:	xor    DWORD PTR [rip+0x2e312d31],ebp        # 0x16e3266a4
   140013973:	fs ins BYTE PTR es:[rdi],dx
   140013975:	ins    BYTE PTR es:[rdi],dx
   140013976:	add    BYTE PTR [rax],al
   140013978:	push   rbx
   140013979:	jae    0x1400139eb
   14001397b:	imul   eax,DWORD PTR [rbx+0x6c],0x6c642e69
   140013982:	ins    BYTE PTR es:[rdi],dx
   140013983:	add    BYTE PTR [rcx+0x70],ah
   140013986:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72eacfd
   140013990:	outs   dx,DWORD PTR ds:[rsi]
   140013991:	jb     0x1400139f8
   140013993:	sub    eax,0x70616568
   140013998:	sub    eax,0x312d326c
   14001399d:	sub    eax,0x6c642e30
   1400139a2:	ins    BYTE PTR es:[rdi],dx
   1400139a3:	add    BYTE PTR [rcx+0x70],ah
   1400139a6:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72ead1d
   1400139b0:	outs   dx,DWORD PTR ds:[rsi]
   1400139b1:	jb     0x140013a18
   1400139b3:	sub    eax,0x636e7973
   1400139b8:	push   0x2d316c2d
   1400139bd:	xor    ch,BYTE PTR [rip+0x6c642e30]        # 0x1ac6567f3
   1400139c3:	ins    BYTE PTR es:[rdi],dx
   1400139c4:	add    BYTE PTR [rax],al
   1400139c6:	(bad)  
   1400139c7:	jo     0x140013a32
   1400139c9:	sub    eax,0x772d736d
   1400139ce:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   1400139d5:	sub    eax,0x736c7472
   1400139da:	jne    0x140013a4c
   1400139dc:	jo     0x140013a4d
   1400139de:	jb     0x140013a54
   1400139e0:	sub    eax,0x322d316c
   1400139e5:	sub    eax,0x6c642e30
   1400139ea:	ins    BYTE PTR es:[rdi],dx
   1400139eb:	add    BYTE PTR [rcx+0x70],ah
   1400139ee:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72ead65
   1400139f8:	outs   dx,DWORD PTR ds:[rsi]
   1400139f9:	jb     0x140013a60
   1400139fb:	sub    eax,0x6f727265
   140013a00:	jb     0x140013a6a
   140013a02:	(bad)  
   140013a03:	outs   dx,BYTE PTR ds:[rsi]
   140013a04:	fs ins BYTE PTR es:[rdi],dx
   140013a06:	imul   ebp,DWORD PTR [rsi+0x67],0x2d316c2d
   140013a0d:	xor    DWORD PTR [rip+0x6c642e31],ebp        # 0x1ac656844
   140013a13:	ins    BYTE PTR es:[rdi],dx
   140013a14:	add    BYTE PTR [rax],al
   140013a16:	(bad)  
   140013a17:	jo     0x140013a82
   140013a19:	sub    eax,0x772d736d
   140013a1e:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   140013a25:	sub    eax,0x636f7270
   140013a2a:	gs jae 0x140013aa0
   140013a2d:	je     0x140013a97
   140013a2f:	jb     0x140013a96
   140013a31:	(bad)  
   140013a32:	fs jae 0x140013a62
   140013a35:	ins    BYTE PTR es:[rdi],dx
   140013a36:	xor    DWORD PTR [rip+0x2e322d31],ebp        # 0x16e33676d
   140013a3c:	fs ins BYTE PTR es:[rdi],dx
   140013a3e:	ins    BYTE PTR es:[rdi],dx
   140013a3f:	add    BYTE PTR [rcx+0x70],ah
   140013a42:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72eadb9
   140013a4c:	outs   dx,DWORD PTR ds:[rsi]
   140013a4d:	jb     0x140013ab4
   140013a4f:	sub    eax,0x666f7270
   140013a54:	imul   ebp,DWORD PTR [rbp+riz*2+0x2d],0x312d316c
   140013a5c:	sub    eax,0x6c642e30
   140013a61:	ins    BYTE PTR es:[rdi],dx
   140013a62:	add    BYTE PTR [rax],al
   140013a64:	(bad)  
   140013a65:	jo     0x140013ad0
   140013a67:	sub    eax,0x772d736d
   140013a6c:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   140013a73:	sub    eax,0x69737973
   140013a78:	outs   dx,BYTE PTR ds:[rsi]
   140013a79:	outs   dx,WORD PTR ds:[rsi]
   140013a7b:	sub    eax,0x322d316c
   140013a80:	sub    eax,0x6c642e31
   140013a85:	ins    BYTE PTR es:[rdi],dx
   140013a86:	add    BYTE PTR [rax],al
   140013a88:	sbb    eax,0x72655606
   140013a8d:	push   rbx
   140013a8e:	gs je  0x140013ad4
   140013a91:	outs   dx,DWORD PTR ds:[rsi]
   140013a92:	outs   dx,BYTE PTR ds:[rsi]
   140013a93:	imul   esi,DWORD PTR fs:[rcx+rbp*2+0x6f],0x73614d6e
   140013a9c:	imul   eax,DWORD PTR [rax],0xffffff8a
   140013a9f:	add    eax,0x566c7452
   140013aa4:	gs jb  0x140013b10
   140013aa7:	data16 jns 0x140013b00
   140013aaa:	gs jb  0x140013b20
   140013aad:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f666e49
   140013ab4:	add    BYTE PTR [rax],al
   140013ab6:	outs   dx,BYTE PTR ds:[rsi]
   140013ab7:	je     0x140013b1d
   140013ab9:	ins    BYTE PTR es:[rdi],dx
   140013aba:	ins    BYTE PTR es:[rdi],dx
   140013abb:	cs fs ins BYTE PTR es:[rdi],dx
   140013abe:	ins    BYTE PTR es:[rdi],dx
   140013abf:	add    BYTE PTR [rdi+0x70737703],ah
   140013ac5:	jb     0x140013b30
   140013ac7:	outs   dx,BYTE PTR ds:[rsi]
   140013ac8:	je     0x140013b30
   140013aca:	push   rdi
   140013acb:	add    BYTE PTR [rbx+0x2],al
   140013ace:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140013ad0:	(bad)  
   140013ad1:	fs push rbx
   140013ad3:	je     0x140013b47
   140013ad5:	imul   ebp,DWORD PTR [rsi+0x67],0x3c0057
   140013adc:	rex.XB push 0x70557261
   140013ae2:	jo     0x140013b49
   140013ae4:	jb     0x140013b3d
   140013ae6:	add    BYTE PTR [rax],al
   140013ae8:	push   rbp
   140013ae9:	push   rbx
   140013aea:	rex.RB push r10
   140013aec:	xor    esi,DWORD PTR [rdx]
   140013aee:	cs fs ins BYTE PTR es:[rdi],dx
   140013af1:	ins    BYTE PTR es:[rdi],dx
   140013af2:	add    BYTE PTR [rax],al
   140013af4:	xor    BYTE PTR [rax],al
   140013af6:	push   rdi
   140013af7:	rex.WRX
   140013af8:	gs je  0x140013b42
   140013afb:	gs je  0x140013b4a
   140013afe:	(bad)  
   140013aff:	jae    0x140013b75
   140013b01:	rex.RB jb 0x140013b76
   140013b04:	outs   dx,DWORD PTR ds:[rsi]
   140013b05:	jb     0x140013b5e
   140013b07:	add    BYTE PTR [rip+0x654e5700],cl        # 0x1a54f920d
   140013b0d:	je     0x140013b50
   140013b0f:	fs rex.XB outs dx,DWORD PTR fs:[rsi]
   140013b13:	outs   dx,BYTE PTR ds:[rsi]
   140013b14:	outs   dx,BYTE PTR ds:[rsi]
   140013b15:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140013b1a:	outs   dx,BYTE PTR ds:[rsi]
   140013b1b:	xor    dl,BYTE PTR [rdi+0x0]
   140013b1e:	adc    eax,DWORD PTR [rax]
   140013b20:	push   rdi
   140013b21:	rex.WRX
   140013b22:	gs je  0x140013b68
   140013b25:	(bad)  
   140013b26:	outs   dx,BYTE PTR ds:[rsi]
   140013b27:	movsxd esp,DWORD PTR [rbp+0x6c]
   140013b2a:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140013b2c:	outs   dx,BYTE PTR ds:[rsi]
   140013b2d:	outs   dx,BYTE PTR ds:[rsi]
   140013b2e:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140013b33:	outs   dx,BYTE PTR ds:[rsi]
   140013b34:	xor    dl,BYTE PTR [rdi+0x0]
   140013b37:	add    BYTE PTR [rbp+0x50],cl
   140013b3a:	push   rdx
   140013b3b:	cs fs ins BYTE PTR es:[rdi],dx
   140013b3e:	ins    BYTE PTR es:[rdi],dx
   140013b3f:	add    BYTE PTR [rdi],dh
   140013b41:	add    DWORD PTR [rdi],edi
   140013b43:	rex.RXB
   140013b44:	gs je  0x140013b8b
   140013b47:	(bad)  
   140013b48:	je     0x140013bab
   140013b4a:	rex
   140013b4b:	rex.XB
   140013b4c:	rex.W push rbx
   140013b4e:	je     0x140013bc2
   140013b50:	imul   ebp,DWORD PTR [rsi+0x67],0x45494040
   140013b57:	rex.X
   140013b58:	push   r8
   140013b5a:	rex.RB
   140013b5b:	push   r13
   140013b5d:	rex.XB
   140013b5e:	rex.W push rbx
   140013b60:	je     0x140013bd4
   140013b62:	imul   ebp,DWORD PTR [rsi+0x67],0x61746144
   140013b69:	rex
   140013b6a:	rex pop rax
   140013b6c:	pop    rdx
   140013b6d:	add    BYTE PTR [rax],bh
   140013b6f:	add    BYTE PTR [rdi],bh
   140013b71:	(bad)  
   140013b72:	xor    DWORD PTR [rbx+0x48],eax
   140013b75:	push   rbx
   140013b76:	je     0x140013bea
   140013b78:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   140013b7f:	rex.B
   140013b80:	rex.B
   140013b81:	rex pop rax
   140013b83:	pop    rdx
   140013b84:	add    BYTE PTR [rax],al
   140013b86:	or     al,BYTE PTR [rax]
   140013b88:	(bad)  
   140013b89:	(bad)  
   140013b8a:	xor    BYTE PTR [rbx+0x48],al
   140013b8d:	push   rbx
   140013b8e:	je     0x140013c02
   140013b90:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   140013b97:	rex.B
   140013b98:	rex.B
   140013b99:	rex push rax
   140013b9b:	rex.RB
   140013b9c:	rex.X
   140013b9d:	rex.RXB
   140013b9e:	rex pop rdx
   140013ba0:	add    BYTE PTR [rax],al
   140013ba2:	push   rdx
   140013ba3:	add    BYTE PTR [rdi],bh
   140013ba5:	(bad)  
   140013ba6:	xor    al,0x43
   140013ba8:	rex.W push rbx
   140013baa:	je     0x140013c1e
   140013bac:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   140013bb3:	rex.B
   140013bb4:	rex.B
   140013bb5:	rex.B
   140013bb6:	rex.RB
   140013bb7:	rex.X push rsi
   140013bb9:	xor    BYTE PTR [rax+0x50],al
   140013bbc:	rex.RB
   140013bbd:	rex.X
   140013bbe:	rex.RXB
   140013bbf:	rex pop rdx
   140013bc1:	add    BYTE PTR [rdi],dl
   140013bc3:	add    DWORD PTR [rdi],edi
   140013bc5:	rex.RXB
   140013bc6:	gs je  0x140013c0b
   140013bc9:	jne    0x140013c31
   140013bcb:	data16 gs jb 0x140013c0f
   140013bcf:	rex.XB
   140013bd0:	rex.W push rbx
   140013bd2:	je     0x140013c46
   140013bd4:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   140013bdb:	rex.B
   140013bdc:	push   r8
   140013bde:	rex.RB
   140013bdf:	rex.B
   140013be0:	rex.RXB
   140013be1:	rex.W
   140013be2:	rex pop rdx
   140013be4:	add    BYTE PTR [rax],al
   140013be6:	fild   DWORD PTR [rcx]
   140013be8:	(bad)  
   140013be9:	push   rdx
   140013bea:	gs ins BYTE PTR es:[rdi],dx
   140013bec:	gs (bad) 
   140013bee:	jae    0x140013c55
   140013bf0:	rex.X jne 0x140013c59
   140013bf3:	data16 gs jb 0x140013c37
   140013bf7:	rex.XB
   140013bf8:	rex.W push rbx
   140013bfa:	je     0x140013c6e
   140013bfc:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   140013c03:	rex.B
   140013c04:	pop    r8
   140013c06:	rex.W
   140013c07:	rex pop rdx
   140013c09:	add    BYTE PTR [rax+rax*1],cl
   140013c0c:	(bad)  
   140013c0d:	(bad)  
   140013c0e:	xor    BYTE PTR [rbx+0x48],al
   140013c11:	push   rbx
   140013c12:	je     0x140013c86
   140013c14:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   140013c1b:	rex.B
   140013c1c:	rex.B
   140013c1d:	rex pop rax
   140013c1f:	pop    rdx
   140013c20:	add    BYTE PTR [rax],al
   140013c22:	rex.WR add BYTE PTR [rdi],r15b
   140013c25:	(bad)  
   140013c26:	xor    al,0x43
   140013c28:	rex.W push rbx
   140013c2a:	je     0x140013c9e
   140013c2c:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   140013c33:	rex.B
   140013c34:	rex.B
   140013c35:	rex.B
   140013c36:	rex.RB
   140013c37:	rex.X push rsi
   140013c39:	xor    BYTE PTR [rax+0x41],al
   140013c3c:	rex.RB
   140013c3d:	rex.X push rsi
   140013c3f:	xor    BYTE PTR [rax+0x40],al
   140013c42:	pop    rdx
   140013c43:	add    cl,al
   140013c45:	add    BYTE PTR [rdi],bh
   140013c47:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140013c49:	ins    DWORD PTR es:[rdi],dx
   140013c4a:	jo     0x140013cad
   140013c4c:	jb     0x140013cb3
   140013c4e:	rex
   140013c4f:	rex.XB
   140013c50:	rex.W push rbx
   140013c52:	je     0x140013cc6
   140013c54:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   140013c5b:	rex.X
   140013c5c:	rex.B
   140013c5d:	rex.W push rax
   140013c5f:	rex.RB
   140013c60:	rex.X
   140013c61:	rex.RXB
   140013c62:	rex pop rdx
   140013c64:	add    BYTE PTR [rax],al
   140013c66:	mov    eax,0x694d3f01
   140013c6b:	fs rex
   140013c6d:	rex.XB
   140013c6e:	rex.W push rbx
   140013c70:	je     0x140013ce4
   140013c72:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   140013c79:	rex.X
   140013c7a:	rex.B (bad) 
   140013c7c:	push   r14
   140013c7e:	xor    DWORD PTR [rax+0x48],eax
   140013c81:	rex pop rdx
   140013c83:	add    al,bh
   140013c85:	add    BYTE PTR [rdi],bh
   140013c87:	rex.RX imul r13d,DWORD PTR [rsi+0x64],0x53484340
   140013c8f:	je     0x140013d03
   140013c91:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   140013c98:	rex.X
   140013c99:	rex.B
   140013c9a:	rex.W
   140013c9b:	rex.RXB
   140013c9c:	rex pop rdx
   140013c9e:	add    BYTE PTR [rax],al
   140013ca0:	sbb    BYTE PTR [rcx],al
   140013ca2:	(bad)  
   140013ca3:	rex.RXB
   140013ca4:	gs je  0x140013ce9
   140013ca7:	jne    0x140013d0f
   140013ca9:	data16 gs jb 0x140013d00
   140013cad:	gs je  0x140013cfc
   140013cb0:	outs   dx,BYTE PTR gs:[rsi]
   140013cb2:	addr32 je 0x140013d1d
   140013cb5:	rex
   140013cb6:	rex.XB
   140013cb7:	rex.W push rbx
   140013cb9:	je     0x140013d2d
   140013cbb:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   140013cc2:	rex.B
   140013cc3:	push   r8
   140013cc5:	rex.RB
   140013cc6:	rex.B
   140013cc7:	rex.RXB
   140013cc8:	rex.W
   140013cc9:	rex pop rdx
   140013ccb:	add    dh,bh
   140013ccd:	add    BYTE PTR [rdi],bh
   140013ccf:	rex.RX outs dx,DWORD PTR ds:[rsi]
   140013cd1:	jb     0x140013d40
   140013cd3:	(bad)  
   140013cd4:	je     0x140013d16
   140013cd6:	rex.XB
   140013cd7:	rex.W push rbx
   140013cd9:	je     0x140013d4d
   140013cdb:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   140013ce2:	rex.B
   140013ce3:	pop    r8
   140013ce5:	push   rax
   140013ce6:	rex.RB
   140013ce7:	rex.X
   140013ce8:	rex.RXB pop r10
   140013cea:	pop    rdx
   140013ceb:	add    dl,bh
   140013ced:	add    BYTE PTR [rdi],bh
   140013cef:	rex.RX imul r13d,DWORD PTR [rsi+0x64],0x4f656e4f
   140013cf7:	data16 rex
   140013cf9:	rex.XB
   140013cfa:	rex.W push rbx
   140013cfc:	je     0x140013d70
   140013cfe:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   140013d05:	rex.X
   140013d06:	rex.B
   140013d07:	rex.W push rax
   140013d09:	rex.RB
   140013d0a:	rex.X
   140013d0b:	rex.RXB
   140013d0c:	rex pop rdx
   140013d0e:	add    BYTE PTR [rax],al
   140013d10:	test   al,0x1
   140013d12:	(bad)  
   140013d13:	rex.WR
   140013d14:	gs data16 je 0x140013d58
   140013d18:	rex.XB
   140013d19:	rex.W push rbx
   140013d1b:	je     0x140013d8f
   140013d1d:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   140013d24:	rex.X
   140013d25:	rex.B (bad) 
   140013d27:	push   r14
   140013d29:	xor    DWORD PTR [rax+0x48],eax
   140013d2c:	rex pop rdx
   140013d2e:	add    BYTE PTR [rax],al
   140013d30:	data16 jb 0x140013d94
   140013d33:	ins    DWORD PTR es:[rdi],dx
   140013d34:	gs fs jns 0x140013da6
   140013d38:	outs   dx,DWORD PTR ds:[rsi]
   140013d39:	jae    0x140013d69
   140013d3b:	fs ins BYTE PTR es:[rdi],dx
   140013d3d:	ins    BYTE PTR es:[rdi],dx
   140013d3e:	add    BYTE PTR [rax],al
   140013d40:	sub    al,0x1
   140013d42:	push   rbx
   140013d43:	je     0x140013db7
   140013d45:	rex.XB ins DWORD PTR es:[rdi],dx
   140013d47:	jo     0x140013d97
   140013d49:	push   rdi
   140013d4a:	add    BYTE PTR [rax],al
   140013d4c:	sbb    eax,DWORD PTR [rcx]
   140013d4e:	push   rbx
   140013d4f:	je     0x140013dc3
   140013d51:	rex.XB push 0x574972
   140013d57:	add    BYTE PTR [rsi],bl
   140013d59:	add    DWORD PTR [rbx+0x74],edx
   140013d5c:	jb     0x140013da1
   140013d5e:	push   0x4f005772
   140013d63:	add    DWORD PTR [rbx+0x74],edx
   140013d66:	jb     0x140013dbb
   140013d68:	je     0x140013ddc
   140013d6a:	rex.WB push r15
   140013d6c:	add    BYTE PTR [rax],al
   140013d6e:	push   rdx
   140013d6f:	add    DWORD PTR [rbx+0x74],edx
   140013d72:	jb     0x140013dc7
   140013d74:	je     0x140013de8
   140013d76:	push   rdi
   140013d77:	add    BYTE PTR [rbx+0x48],dl
   140013d7a:	rex.WR push rdi
   140013d7c:	push   r8
   140013d7e:	rex.WB
   140013d7f:	cs fs ins BYTE PTR es:[rdi],dx
   140013d82:	ins    BYTE PTR es:[rdi],dx
   140013d83:	add    BYTE PTR [rdi],al
   140013d85:	add    BYTE PTR [rdi+0x65],al
   140013d88:	je     0x140013dcb
   140013d8a:	fs fs jb 0x140013dd7
   140013d8e:	outs   dx,BYTE PTR ds:[rsi]
   140013d8f:	outs   dx,WORD PTR ds:[rsi]
   140013d91:	push   rdi
   140013d92:	add    BYTE PTR [rax],al
   140013d94:	or     DWORD PTR [rax],eax
   140013d96:	rex.RXB
   140013d97:	gs je  0x140013de8
   140013d9a:	(bad)  
   140013d9b:	ins    DWORD PTR es:[rdi],dx
   140013d9c:	rex.WB outs dx,BYTE PTR gs:[rsi]
   140013d9f:	outs   dx,WORD PTR ds:[rsi]
   140013da1:	push   rdi
   140013da2:	add    BYTE PTR [rax],al
   140013da4:	add    al,BYTE PTR [rax]
   140013da6:	rex.RX jb 0x140013e0e
   140013da9:	gs rex.B
   140013dab:	fs fs jb 0x140013df8
   140013daf:	outs   dx,BYTE PTR ds:[rsi]
   140013db0:	outs   dx,WORD PTR ds:[rsi]
   140013db2:	push   rdi
   140013db3:	add    BYTE PTR [rdi+0x53],dl
   140013db6:	xor    bl,BYTE PTR [rdi+0x33]
   140013db9:	xor    ch,BYTE PTR [rsi]
   140013dbb:	fs ins BYTE PTR es:[rdi],dx
   140013dbd:	ins    BYTE PTR es:[rdi],dx
   140013dbe:	add    BYTE PTR [rax],al
   140013dc0:	(bad)  
   140013dc1:	add    BYTE PTR [rdi+0x65],al
   140013dc4:	je     0x140013e0c
   140013dc6:	imul   ebp,DWORD PTR [rbp+riz*2+0x56],0x69737265
   140013dce:	outs   dx,DWORD PTR ds:[rsi]
   140013dcf:	outs   dx,BYTE PTR ds:[rsi]
   140013dd0:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140013dd2:	outs   dx,WORD PTR ds:[rsi]
   140013dd4:	push   rbx
   140013dd5:	imul   edi,DWORD PTR [rdx+0x65],0x577845
   140013ddc:	add    eax,DWORD PTR [rax]
   140013dde:	rex.RXB
   140013ddf:	gs je  0x140013e28
   140013de2:	imul   ebp,DWORD PTR [rbp+riz*2+0x56],0x69737265
   140013dea:	outs   dx,DWORD PTR ds:[rsi]
   140013deb:	outs   dx,BYTE PTR ds:[rsi]
   140013dec:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140013dee:	outs   dx,WORD PTR ds:[rsi]
   140013df0:	rex.RB js 0x140013e4a
   140013df3:	add    BYTE PTR [rax],dl
   140013df5:	add    BYTE PTR [rsi+0x65],dl
   140013df8:	jb     0x140013e4b
   140013dfa:	jne    0x140013e61
   140013dfc:	jb     0x140013e77
   140013dfe:	push   rsi
   140013dff:	(bad)  
   140013e00:	ins    BYTE PTR es:[rdi],dx
   140013e01:	jne    0x140013e68
   140013e03:	push   rdi
   140013e04:	add    BYTE PTR [rax],al
   140013e06:	push   rsi
   140013e07:	rex.RB push r10
   140013e09:	push   rbx
   140013e0a:	rex.WB
   140013e0b:	rex.WRXB
   140013e0c:	rex.WRX
   140013e0d:	cs fs ins BYTE PTR es:[rdi],dx
   140013e10:	ins    BYTE PTR es:[rdi],dx
   140013e11:	add    BYTE PTR [rsi],ch
   140013e13:	(bad)  
   140013e14:	ins    BYTE PTR es:[rdi],dx
   140013e15:	jae    0x140013e8b
   140013e17:	jb     0x140013e85
   140013e19:	outs   dx,BYTE PTR gs:[rsi]
   140013e1b:	push   rdi
   140013e1c:	add    BYTE PTR [rax],al
   140013e1e:	push   rbx
   140013e1f:	add    eax,0x54746553
   140013e24:	push   0x64616572
   140013e29:	push   rbp
   140013e2a:	rex.WB
   140013e2b:	rex.WR (bad) 
   140013e2d:	outs   dx,BYTE PTR ds:[rsi]
   140013e2e:	addr32 jne 0x140013e92
   140013e31:	addr32 gs add ah,ch
   140013e35:	add    eax,0x65646957
   140013e3a:	rex.XB push 0x6f547261
   140013e40:	rex.WRB jne 0x140013eaf
   140013e43:	je     0x140013eae
   140013e45:	rex.X jns 0x140013ebc
   140013e48:	add    BYTE PTR gs:[rsi+0x2],al
   140013e4c:	rex.RXB
   140013e4d:	gs je  0x140013e96
   140013e50:	imul   ebp,DWORD PTR [rbp+riz*2+0x54],0x657079
   140013e58:	cmc    
   140013e59:	add    DWORD PTR [rdi+0x65],eax
   140013e5c:	je     0x140013ea1
   140013e5e:	outs   dx,DWORD PTR ds:[rsi]
   140013e5f:	outs   dx,BYTE PTR ds:[rsi]
   140013e60:	jae    0x140013ed1
   140013e62:	ins    BYTE PTR es:[rdi],dx
   140013e63:	rex.WRB outs dx,DWORD PTR gs:[rsi]
   140013e66:	fs add BYTE PTR gs:[rax],al
   140013e6a:	sub    eax,0x74736c06
   140013e6f:	jb     0x140013edd
   140013e71:	outs   dx,BYTE PTR gs:[rsi]
   140013e73:	add    BYTE PTR [r8],al
   140013e76:	xchg   ecx,eax
   140013e77:	add    BYTE PTR [rbx+0x6f],al
   140013e7a:	ins    DWORD PTR es:[rdi],dx
   140013e7b:	jo     0x140013ede
   140013e7d:	jb     0x140013ee4
   140013e7f:	push   rbx
   140013e80:	je     0x140013ef4
   140013e82:	imul   ebp,DWORD PTR [rsi+0x67],0xf5000057
   140013e89:	add    al,BYTE PTR [rdi+0x65]
   140013e8c:	je     0x140013ee2
   140013e8e:	push   0x64616572
   140013e93:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140013e95:	movsxd esp,DWORD PTR [rcx+0x6c]
   140013e98:	add    BYTE PTR gs:[rsi+0x6d6f4300],cl
   140013e9f:	jo     0x140013f02
   140013ea1:	jb     0x140013f08
   140013ea3:	push   rbx
   140013ea4:	je     0x140013f18
   140013ea6:	imul   ebp,DWORD PTR [rsi+0x67],0x57000041
   140013ead:	add    DWORD PTR [rbp+0x78],eax
   140013eb0:	imul   esi,DWORD PTR [rax+rdx*2+0x72],0x7365636f
   140013eb8:	jae    0x140013eba
   140013eba:	fadd   DWORD PTR [rbx]
   140013ebc:	rex.WRB jne 0x140013f2b
   140013ebf:	je     0x140013f2a
   140013ec1:	rex.X jns 0x140013f38
   140013ec4:	gs push rsp
   140013ec6:	outs   dx,DWORD PTR ds:[rsi]
   140013ec7:	push   rdi
   140013ec8:	imul   esp,DWORD PTR [rbp+riz*2+0x43],0x726168
   140013ed0:	jmp    0x140013ed6
   140013ed2:	push   rbx
   140013ed3:	gs je  0x140013f19
   140013ed6:	outs   dx,DWORD PTR ds:[rsi]
   140013ed7:	outs   dx,BYTE PTR ds:[rsi]
   140013ed8:	jae    0x140013f49
   140013eda:	ins    BYTE PTR es:[rdi],dx
   140013edb:	rex.WRB outs dx,DWORD PTR gs:[rsi]
   140013ede:	fs add BYTE PTR gs:[rax],al
   140013ee2:	pop    rsp
   140013ee3:	add    al,0x52
   140013ee5:	gs (bad) 
   140013ee7:	imul   r13d,DWORD PTR fs:[rbp+r12*2+0x0],0x52045a00
   140013ef1:	gs (bad) 
   140013ef3:	rex.XB outs dx,DWORD PTR fs:[rsi]
   140013ef6:	outs   dx,BYTE PTR ds:[rsi]
   140013ef7:	jae    0x140013f68
   140013ef9:	ins    BYTE PTR es:[rdi],dx
   140013efa:	gs push rdi
   140013efc:	add    BYTE PTR [rax],al
   140013efe:	stos   DWORD PTR es:[rdi],eax
   140013eff:	add    al,BYTE PTR [rdi+0x65]
   140013f02:	je     0x140013f54
   140013f04:	jb     0x140013f75
   140013f06:	movsxd esp,DWORD PTR [rbp+0x73]
   140013f09:	jae    0x140013f53
   140013f0b:	gs (bad) 
   140013f0d:	jo     0x140013f0f
   140013f0f:	add    BYTE PTR [rax+0x3],al
   140013f12:	rex.W
   140013f13:	gs (bad) 
   140013f15:	jo     0x140013f5d
   140013f17:	jb     0x140013f7e
   140013f19:	add    BYTE PTR gs:[rax],al
   140013f1c:	add    rcx,QWORD PTR [rax+0x65]
   140013f20:	(bad)  
   140013f21:	jo     0x140013f79
   140013f23:	(bad)  
   140013f24:	ins    BYTE PTR es:[rdi],dx
   140013f25:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x3c000065
   140013f2d:	add    ecx,DWORD PTR [rax+0x65]
   140013f30:	(bad)  
   140013f31:	jo     0x140013f74
   140013f33:	ins    BYTE PTR es:[rdi],dx
   140013f34:	ins    BYTE PTR es:[rdi],dx
   140013f35:	outs   dx,DWORD PTR ds:[rsi]
   140013f36:	movsxd eax,DWORD PTR [rax]
   140013f38:	rex.XB add ecx,DWORD PTR [r8+0x65]
   140013f3c:	(bad)  
   140013f3d:	jo     0x140013f91
   140013f3f:	gs rex.B ins BYTE PTR es:[rdi],dx
   140013f42:	ins    BYTE PTR es:[rdi],dx
   140013f43:	outs   dx,DWORD PTR ds:[rsi]
   140013f44:	movsxd eax,DWORD PTR [rax]
   140013f46:	add    r9d,DWORD PTR [r8+0x65]
   140013f4a:	(bad)  
   140013f4b:	jo     0x140013fa0
   140013f4d:	imul   edi,DWORD PTR [rdx+0x65],0x1d70000
   140013f54:	rex.RXB
   140013f55:	gs je  0x140013f9b
   140013f58:	outs   dx,DWORD PTR ds:[rsi]
   140013f59:	ins    DWORD PTR es:[rdi],dx
   140013f5a:	jo     0x140013fd1
   140013f5c:	je     0x140013fc3
   140013f5e:	jb     0x140013fae
   140013f60:	(bad)  
   140013f61:	ins    DWORD PTR es:[rdi],dx
   140013f62:	gs rex.RB js 0x140013fbd
   140013f66:	add    BYTE PTR [rax],al
   140013f68:	movsxd eax,DWORD PTR [rcx]
   140013f6a:	imul   r13d,DWORD PTR [rbp+r12*2+0x54],0x54656d69
   140013f73:	outs   dx,DWORD PTR ds:[rsi]
   140013f74:	push   rbx
   140013f75:	jns    0x140013fea
   140013f77:	je     0x140013fde
   140013f79:	ins    DWORD PTR es:[rdi],dx
   140013f7a:	push   rsp
   140013f7b:	imul   ebp,DWORD PTR [rbp+0x65],0x26a0000
   140013f82:	rex.RXB
   140013f83:	gs je  0x140013fd3
   140013f86:	outs   dx,DWORD PTR ds:[rsi]
   140013f87:	fs jne 0x140013ff6
   140013f8a:	imul   r13d,DWORD PTR gs:[rbp+r12*2+0x4e],0x57656d61
   140013f94:	add    BYTE PTR [rax],al
   140013f96:	add    DWORD PTR [rax],0x6f695f5f
   140013f9c:	(bad)  
   140013f9d:	pop    rdi
   140013f9e:	data16 jne 0x14001400f
   140013fa1:	movsxd eax,DWORD PTR [rax]
   140013fa3:	add    BYTE PTR [rdx+0x656d5f02],al
   140013fa9:	ins    DWORD PTR es:[rdi],dx
   140013faa:	imul   esp,DWORD PTR [rbx+0x6d],0x5000070
   140013fb1:	add    DWORD PTR [rdi+0x65],ebx
   140013fb4:	jb     0x140014028
   140013fb6:	outs   dx,BYTE PTR ds:[rsi]
   140013fb7:	outs   dx,DWORD PTR ds:[rsi]
   140013fb8:	add    BYTE PTR [rax],al
   140013fba:	adc    eax,0x73637705
   140013fbf:	je     0x140014030
   140013fc1:	add    BYTE PTR fs:[rax],al
   140013fc4:	sbb    BYTE PTR [rip+0x74736377],al        # 0x1b474a341
   140013fca:	outs   dx,DWORD PTR ds:[rsi]
   140013fcb:	ins    BYTE PTR es:[rdi],dx
   140013fcc:	add    BYTE PTR [rax],al
   140013fce:	sbb    eax,DWORD PTR [rip+0x74736377]        # 0x1b474a34b
   140013fd4:	outs   dx,DWORD PTR ds:[rsi]
   140013fd5:	jne    0x140014043
   140013fd7:	add    BYTE PTR [rbx],bl
   140013fd9:	add    DWORD PTR [rdi+0x66],ebx
   140013fdc:	imul   ebp,DWORD PTR [rbp+riz*2+0x6e],0x155006f
   140013fe4:	pop    rdi
   140013fe5:	addr32 gs je 0x140014048
   140013fe9:	outs   dx,DWORD PTR ds:[rsi]
   140013fea:	jae    0x140014052
   140013fec:	push   0x6c646e61
   140013ff1:	add    BYTE PTR gs:[rax],al
   140013ff4:	rex.RB add al,0x66
   140013ff7:	jo     0x14001406b
   140013ff9:	imul   ebp,DWORD PTR [rsi+0x74],0x4390066
   140014000:	data16 data16 ins BYTE PTR es:[rdi],dx
   140014003:	jne    0x140014078
   140014005:	push   0x200000
   14001400a:	rex.WRX
   14001400b:	gs je  0x140014061
   14001400e:	gs jb  0x140014087
   140014011:	gs jb  0x14001405b
   140014014:	gs je  0x140014060
   140014017:	outs   dx,BYTE PTR ds:[rsi]
   140014018:	outs   dx,WORD PTR ds:[rsi]
   14001401a:	add    BYTE PTR [rax],al
   14001401c:	add    DWORD PTR [rax],eax
   14001401e:	rex.WRX
   14001401f:	gs je  0x140014063
   140014022:	jo     0x14001408d
   140014024:	rex.X jne 0x14001408d
   140014027:	data16 gs jb 0x140014071
   14001402b:	jb     0x140014092
   14001402d:	add    BYTE PTR gs:[rax],al
   140014030:	jae    0x1400140a4
   140014032:	jbe    0x140014097
   140014034:	ins    BYTE PTR es:[rdi],dx
   140014035:	imul   ebp,DWORD PTR [rsi],0x6c6c64
   14001403b:	add    BYTE PTR [rsi+0x65],ch
   14001403e:	je     0x1400140b5
   140014040:	je     0x1400140ab
   140014042:	ins    BYTE PTR es:[rdi],dx
   140014043:	jae    0x140014073
   140014045:	fs ins BYTE PTR es:[rdi],dx
   140014047:	ins    BYTE PTR es:[rdi],dx
   140014048:	add    BYTE PTR [rax],al
   14001404a:	rex.WXB add BYTE PTR [r15+0x43],bl
   14001404e:	js     0x1400140c8
   140014050:	push   rsp
   140014051:	push   0x45776f72
   140014056:	js     0x1400140bb
   140014058:	gs jo  0x1400140cf
   14001405b:	imul   ebp,DWORD PTR [rdi+0x6e],0x5b0000
   140014062:	pop    rdi
   140014063:	pop    rdi
   140014064:	rex.XB js 0x1400140df
   140014067:	rex.RX jb 0x1400140cb
   14001406a:	ins    DWORD PTR es:[rdi],dx
   14001406b:	gs rex.W (bad) 
   14001406e:	outs   dx,BYTE PTR ds:[rsi]
   14001406f:	fs ins BYTE PTR es:[rdi],dx
   140014071:	gs jb  0x1400140a7
   140014074:	add    BYTE PTR [rax],al
   140014076:	xchg   edx,eax
   140014077:	add    al,0x6d
   140014079:	gs ins DWORD PTR es:[rdi],dx
   14001407b:	movsxd esi,DWORD PTR [rax+0x79]
   14001407e:	add    BYTE PTR [rax],al
   140014080:	xchg   esi,eax
   140014081:	add    al,0x6d
   140014083:	gs ins DWORD PTR es:[rdi],dx
   140014085:	jae    0x1400140ec
   140014087:	je     0x140014089
	...

Disassembly of section .data:

0000000140015000 <.data>:
   140015000:	add    DWORD PTR [rax],eax
   140015002:	add    BYTE PTR [rax],al
   140015004:	add    BYTE PTR [rax],al
   140015006:	add    BYTE PTR [rax],al
   140015008:	xor    ah,BYTE PTR [rdx+0x2b992ddf]
   14001500e:	add    BYTE PTR [rax],al
   140015010:	int    0x5d
   140015012:	and    dl,dl
   140015014:	data16 (bad) 
   140015016:	(bad)  
   140015017:	inc    DWORD PTR [rax]
	...
   140015021:	(bad)  
   140015022:	add    DWORD PTR [rax+0x1],eax
	...
   14001502d:	add    BYTE PTR [rax],al
   14001502f:	add    BYTE PTR [rsi],ch
   140015031:	(bad)  
   140015032:	push   r14
   140015034:	pop    rdi
   140015035:	movsxd ebp,DWORD PTR [rdi+0x6d]
   140015038:	pop    rdi
   140015039:	gs jb  0x1400150ae
   14001503c:	outs   dx,DWORD PTR ds:[rsi]
   14001503d:	jb     0x14001507f
   14001503f:	add    BYTE PTR [rax],al
   140015042:	add    BYTE PTR [rax],al
   140015044:	add    BYTE PTR [rax],al
   140015046:	add    BYTE PTR [rax],al
   140015048:	add    BYTE PTR [rsi],al
   14001504a:	add    DWORD PTR [rax+0x1],eax
	...
   140015055:	add    BYTE PTR [rax],al
   140015057:	add    BYTE PTR [rsi],ch
   140015059:	(bad)  
   14001505a:	push   r14
   14001505c:	rex.XB
   14001505d:	rex.W
   14001505e:	gs (bad) 
   140015060:	jo     0x1400150c1
   140015062:	rex.RB js 0x1400150c8
   140015065:	gs jo  0x1400150dc
   140015068:	imul   ebp,DWORD PTR [rdi+0x6e],0x4040
	...

Disassembly of section .pdata:

0000000140016000 <.pdata>:
   140016000:	or     BYTE PTR [rax],dl
   140016002:	add    BYTE PTR [rax],al
   140016004:	xchg   ebx,eax
   140016005:	adc    BYTE PTR [rax],al
   140016007:	add    BYTE PTR [rax+0x14],al
   14001600a:	add    DWORD PTR [rax],eax
   14001600c:	pushf  
   14001600d:	adc    BYTE PTR [rax],al
   14001600f:	add    bh,bh
   140016011:	adc    BYTE PTR [rax],al
   140016013:	add    BYTE PTR [rax+0x14],bh
   140016016:	add    DWORD PTR [rax],eax
   140016018:	or     BYTE PTR [rcx],dl
   14001601a:	add    BYTE PTR [rax],al
   14001601c:	lea    edx,[rcx]
   14001601e:	add    BYTE PTR [rax],al
   140016020:	test   BYTE PTR [rcx+rax*1],dl
   140016023:	add    BYTE PTR [rcx+rdx*1+0x125a0000],dl
   14001602a:	add    BYTE PTR [rax],al
   14001602c:	xchg   esp,eax
   14001602d:	adc    al,0x1
   14001602f:	add    BYTE PTR [rax+0x12],ah
   140016032:	add    BYTE PTR [rax],al
   140016034:	or     DWORD PTR [rbx],edx
   140016036:	add    BYTE PTR [rax],al
   140016038:	rcl    BYTE PTR [rcx+rax*1],1
   14001603b:	add    BYTE PTR [rax],dl
   14001603d:	adc    eax,DWORD PTR [rax]
   14001603f:	add    BYTE PTR [rdi+0x13],dl
   140016042:	add    BYTE PTR [rax],al
   140016044:	add    BYTE PTR [rip+0x13600001],dl        # 0x15361604b
   14001604a:	add    BYTE PTR [rax],al
   14001604c:	mov    al,0x13
   14001604e:	add    BYTE PTR [rax],al
   140016050:	xor    BYTE PTR [rip+0x13b80001],dl        # 0x153b96057
   140016056:	add    BYTE PTR [rax],al
   140016058:	retf   
   140016059:	adc    al,0x0
   14001605b:	add    BYTE PTR [rax+0x15],ah
   14001605e:	add    DWORD PTR [rax],eax
   140016060:	(bad)  
   140016061:	adc    al,0x0
   140016063:	add    bh,ch
   140016065:	adc    al,0x0
   140016067:	add    BYTE PTR [rax+0x15],bh
   14001606a:	add    DWORD PTR [rax],eax
   14001606c:	clc    
   14001606d:	adc    al,0x0
   14001606f:	add    BYTE PTR [rbp-0x7fffffeb],ah
   140016075:	adc    eax,0x15ac0001
   14001607a:	add    BYTE PTR [rax],al
   14001607c:	(bad)
   14001607f:	add    BYTE PTR [rax-0x33fffeeb],bh
   140016085:	sbb    al,0x0
   140016087:	add    BYTE PTR [rax-0xfffffdb],al
   14001608d:	(bad)  
   14001608e:	add    DWORD PTR [rax],eax
   140016090:	mov    BYTE PTR [rip+0x3d820000],ah        # 0x17d836096
   140016096:	add    BYTE PTR [rax],al
   140016098:	test   BYTE PTR [rcx],bl
   14001609a:	add    DWORD PTR [rax],eax
   14001609c:	mov    BYTE PTR [rip+0x43320000],bh        # 0x1833360a2
   1400160a2:	add    BYTE PTR [rax],al
   1400160a4:	hlt    
   1400160a5:	sbb    eax,0x43380001
   1400160aa:	add    BYTE PTR [rax],al
   1400160ac:	(bad)  
   1400160ad:	rex.WB add BYTE PTR [r8],al
   1400160b0:	sbb    BYTE PTR [rsi],bl
   1400160b2:	add    DWORD PTR [rax],eax
   1400160b4:	ror    BYTE PTR [rcx+0x0],1
   1400160b7:	add    dl,bl
   1400160b9:	push   rbp
   1400160ba:	add    BYTE PTR [rax],al
   1400160bc:	cmp    al,0x1e
   1400160be:	add    DWORD PTR [rax],eax
   1400160c0:	loopne 0x140016117
   1400160c2:	add    BYTE PTR [rax],al
   1400160c4:	popf   
   1400160c5:	push   rsi
   1400160c6:	add    BYTE PTR [rax],al
   1400160c8:	pop    rax
   1400160c9:	(bad)  
   1400160ca:	add    DWORD PTR [rax],eax
   1400160cc:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400160cd:	push   rsi
   1400160ce:	add    BYTE PTR [rax],al
   1400160d0:	adc    DWORD PTR [rdi+0x0],edx
   1400160d3:	add    BYTE PTR [rsi+rbx*1+0x1],ch
   1400160d7:	add    BYTE PTR [rax],bl
   1400160d9:	push   rdi
   1400160da:	add    BYTE PTR [rax],al
   1400160dc:	pop    rdx
   1400160dd:	pop    rdi
   1400160de:	add    BYTE PTR [rax],al
   1400160e0:	jl     0x140016100
   1400160e2:	add    DWORD PTR [rax],eax
   1400160e4:	(bad)  
   1400160e5:	pop    rdi
   1400160e6:	add    BYTE PTR [rax],al
   1400160e8:	add    DWORD PTR [rax+0x0],esp
   1400160eb:	add    ah,ch
   1400160ed:	(bad)  
   1400160ee:	add    DWORD PTR [rax],eax
   1400160f0:	or     BYTE PTR [rax+0x0],ah
   1400160f3:	add    ch,dh
   1400160f5:	(bad)  
   1400160f6:	add    BYTE PTR [rax],al
   1400160f8:	jl     0x14001611a
   1400160fa:	add    DWORD PTR [rax],eax
   1400160fc:	cld    
   1400160fd:	(bad)  
   1400160fe:	add    BYTE PTR [rax],al
   140016100:	icebp  
   140016101:	(bad)  
   140016102:	add    BYTE PTR [rax],al
   140016104:	pop    rax
   140016105:	(bad)  
   140016106:	add    DWORD PTR [rax],eax
   140016108:	clc    
   140016109:	(bad)  
   14001610a:	add    BYTE PTR [rax],al
   14001610c:	mul    BYTE PTR [rax+rax*1+0x0]
   140016110:	(bad)  
   140016111:	adc    eax,0x64fc0001
   140016116:	add    BYTE PTR [rax],al
   140016118:	mov    bl,0x6b
   14001611a:	add    BYTE PTR [rax],al
   14001611c:	shl    BYTE PTR [rax],1
   14001611e:	add    DWORD PTR [rax],eax
   140016120:	mov    esp,0x9d00006b
   140016125:	ins    BYTE PTR es:[rdi],dx
   140016126:	add    BYTE PTR [rax],al
   140016128:	pop    rax
   140016129:	and    al,BYTE PTR [rcx]
   14001612b:	add    BYTE PTR [rsp+rbp*2+0x6d1b0000],ah
   140016132:	add    BYTE PTR [rax],al
   140016134:	push   0x24000122
   140016139:	ins    DWORD PTR es:[rdi],dx
   14001613a:	add    BYTE PTR [rax],al
   14001613c:	sbb    DWORD PTR [rsi+0x0],ebp
   14001613f:	add    BYTE PTR [rax+0x22],bh
   140016142:	add    DWORD PTR [rax],eax
   140016144:	and    BYTE PTR [rsi+0x0],ch
   140016147:	add    BYTE PTR [rbx+0x73],dh
   14001614a:	add    BYTE PTR [rax],al
   14001614c:	enter  0x122,0x0
   140016150:	jl     0x1400161c5
   140016152:	add    BYTE PTR [rax],al
   140016154:	out    0x77,al
   140016156:	add    BYTE PTR [rax],al
   140016158:	int3   
   140016159:	and    al,0x1
   14001615b:	add    ah,ch
   14001615d:	ja     0x14001615f
   14001615f:	add    dl,ah
   140016161:	jns    0x140016163
   140016163:	add    ah,dh
   140016165:	and    eax,0x79e80001
   14001616a:	add    BYTE PTR [rax],al
   14001616c:	push   0x3c00007b
   140016171:	(bad)  
   140016172:	add    DWORD PTR [rax],eax
   140016174:	jo     0x1400161f1
   140016176:	add    BYTE PTR [rax],al
   140016178:	sar    DWORD PTR [rbx+0x0],0x0
   14001617c:	or     al,0x26
   14001617e:	add    DWORD PTR [rax],eax
   140016180:	enter  0x7b,0x0
   140016184:	fs jl  0x140016187
   140016187:	add    BYTE PTR [rsi+riz*1],dl
   14001618a:	add    DWORD PTR [rax],eax
   14001618c:	ins    BYTE PTR es:[rdi],dx
   14001618d:	jl     0x14001618f
   14001618f:	add    BYTE PTR [rax],dl
   140016191:	jle    0x140016193
   140016193:	add    al,al
   140016195:	add    DWORD PTR es:[rax],eax
   140016198:	sbb    BYTE PTR [rsi+0x0],bh
   14001619b:	add    dl,bl
   14001619d:	jg     0x14001619f
   14001619f:	add    BYTE PTR [rax+0x27],cl
   1400161a2:	add    DWORD PTR [rax],eax
   1400161a4:	loopne 0x140016225
   1400161a6:	add    BYTE PTR [rax],al
   1400161a8:	(bad)  
   1400161a9:	jg     0x1400161ab
   1400161ab:	add    BYTE PTR [rax+0x15],bh
   1400161ae:	add    DWORD PTR [rax],eax
   1400161b0:	and    BYTE PTR [rax-0x7f6a0000],al
   1400161b6:	add    BYTE PTR [rax],al
   1400161b8:	pushf  
   1400161b9:	sub    BYTE PTR [rcx],al
   1400161bb:	add    BYTE PTR [rax+rax*4-0x7f050000],bl
   1400161c2:	add    BYTE PTR [rax],al
   1400161c4:	ins    BYTE PTR es:[rdi],dx
   1400161c5:	(bad)  
   1400161c6:	add    DWORD PTR [rax],eax
   1400161c8:	add    al,0x81
   1400161ca:	add    BYTE PTR [rax],al
   1400161cc:	pop    rbp
   1400161cd:	add    DWORD PTR [rax],0x11e6c00
   1400161d3:	add    BYTE PTR [rcx+rax*4+0x0],ah
   1400161d7:	add    BYTE PTR [rsi-0x4fffff7f],al
   1400161dd:	sub    BYTE PTR [rcx],al
   1400161df:	add    BYTE PTR [rcx+rax*4-0x7d8b0000],cl
   1400161e6:	add    BYTE PTR [rax],al
   1400161e8:	or     al,0x26
   1400161ea:	add    DWORD PTR [rax],eax
   1400161ec:	jl     0x140016170
   1400161ee:	add    BYTE PTR [rax],al
   1400161f0:	fild   WORD PTR [rdx+0x260c0000]
   1400161f6:	add    DWORD PTR [rax],eax
   1400161f8:	call   0x12001627f
   1400161fd:	test   BYTE PTR [rax],al
   1400161ff:	add    BYTE PTR [rax+0x28000128],bh
   140016205:	test   DWORD PTR [rax],eax
   140016207:	add    BYTE PTR [rsi-0x33ffff7b],bl
   14001620d:	sub    BYTE PTR [rcx],al
   14001620f:	add    BYTE PTR [rbp+rax*4-0x79290000],ah
   140016216:	add    BYTE PTR [rax],al
   140016218:	fsubr  DWORD PTR [rax]
   14001621a:	add    DWORD PTR [rax],eax
   14001621c:	loopne 0x1400161a4
   14001621e:	add    BYTE PTR [rax],al
   140016220:	add    DWORD PTR [rdi+0x28ec0000],0x1
   140016227:	add    BYTE PTR [rdi+rax*4-0x77bd0000],cl
   14001622e:	add    BYTE PTR [rax],al
   140016230:	hlt    
   140016231:	sub    BYTE PTR [rcx],al
   140016233:	add    BYTE PTR [rax+rcx*4+0x0],cl
   140016237:	add    BYTE PTR [rsi-0x33ffff78],al
   14001623d:	sub    BYTE PTR [rcx],al
   14001623f:	add    BYTE PTR [rax+rcx*4-0x76be0000],cl
   140016246:	add    BYTE PTR [rax],al
   140016248:	add    al,0x29
   14001624a:	add    DWORD PTR [rax],eax
   14001624c:	mov    QWORD PTR [rax],rax
   14001624f:	add    BYTE PTR [rdi],ah
   140016251:	mov    al,BYTE PTR [rax]
   140016253:	add    BYTE PTR [rax+0x14],bh
   140016256:	add    DWORD PTR [rax],eax
   140016258:	xor    BYTE PTR [rdx-0x75180000],cl
   14001625e:	add    BYTE PTR [rax],al
   140016260:	adc    al,0x29
   140016262:	add    DWORD PTR [rax],eax
   140016264:	sub    BYTE PTR [rbx-0x73590000],cl
   14001626a:	add    BYTE PTR [rax],al
   14001626c:	and    al,0x29
   14001626e:	add    DWORD PTR [rax],eax
   140016270:	mov    al,0x8c
   140016272:	add    BYTE PTR [rax],al
   140016274:	(bad)  
   140016275:	lea    eax,[rax]
   140016277:	add    BYTE PTR [rax],bh
   140016279:	sub    DWORD PTR [rcx],eax
   14001627b:	add    BYTE PTR [rax-0x73],ch
   14001627e:	add    BYTE PTR [rax],al
   140016280:	mov    es,WORD PTR ss:[rax]
   140016283:	add    BYTE PTR [rsi+riz*1],cl
   140016286:	add    DWORD PTR [rax],eax
   140016288:	cmp    al,0x8e
   14001628a:	add    BYTE PTR [rax],al
   14001628c:	adc    al,0x8f
   14001628e:	add    BYTE PTR [rax],al
   140016290:	int3   
   140016291:	sub    BYTE PTR [rcx],al
   140016293:	add    BYTE PTR [rdi+rcx*4],bl
   140016296:	add    BYTE PTR [rax],al
   140016298:	jge    0x140016229
   14001629a:	add    BYTE PTR [rax],al
   14001629c:	int3   
   14001629d:	sub    BYTE PTR [rcx],al
   14001629f:	add    BYTE PTR [rdi+rcx*4-0x6f5c0000],al
   1400162a6:	add    BYTE PTR [rax],al
   1400162a8:	cmp    al,0x1e
   1400162aa:	add    DWORD PTR [rax],eax
   1400162ac:	lods   al,BYTE PTR ds:[rsi]
   1400162ad:	nop
   1400162ae:	add    BYTE PTR [rax],al
   1400162b0:	rex.WXB xchg r9,rax
   1400162b2:	add    BYTE PTR [rax],al
   1400162b4:	pushf  
   1400162b5:	sub    BYTE PTR [rcx],al
   1400162b7:	add    BYTE PTR [rcx+rdx*4+0x0],dl
   1400162bb:	add    BYTE PTR [rsi],al
   1400162bd:	xchg   edx,eax
   1400162be:	add    BYTE PTR [rax],al
   1400162c0:	sub    DWORD PTR [rcx],r8d
   1400162c3:	add    BYTE PTR [rdx+rdx*4],cl
   1400162c6:	add    BYTE PTR [rax],al
   1400162c8:	pop    rcx
   1400162c9:	xchg   edx,eax
   1400162ca:	add    BYTE PTR [rax],al
   1400162cc:	in     al,dx
   1400162cd:	sub    BYTE PTR [rcx],al
   1400162cf:	add    BYTE PTR [rax-0x6e],ah
   1400162d2:	add    BYTE PTR [rax],al
   1400162d4:	js     0x140016269
   1400162d6:	add    BYTE PTR [rax],al
   1400162d8:	pop    rsp
   1400162d9:	sub    DWORD PTR [rcx],eax
   1400162db:	add    BYTE PTR [rax+0x25000093],al
   1400162e1:	xchg   ebp,eax
   1400162e2:	add    BYTE PTR [rax],al
   1400162e4:	js     0x14001630f
   1400162e6:	add    DWORD PTR [rax],eax
   1400162e8:	sub    al,0x95
   1400162ea:	add    BYTE PTR [rax],al
   1400162ec:	ret    0x95
   1400162ef:	add    BYTE PTR [rcx+rbp*1+0x1],al
   1400162f3:	add    al,cl
   1400162f5:	xchg   ebp,eax
   1400162f6:	add    BYTE PTR [rax],al
   1400162f8:	(bad)  
   1400162f9:	xchg   esi,eax
   1400162fa:	add    BYTE PTR [rax],al
   1400162fc:	ins    BYTE PTR es:[rdi],dx
   1400162fd:	(bad)  
   1400162fe:	add    DWORD PTR [rax],eax
   140016300:	and    BYTE PTR [rsi-0x691d0000],dl
   140016306:	add    BYTE PTR [rax],al
   140016308:	test   BYTE PTR [rcx+rax*1],dl
   14001630b:	add    ah,ch
   14001630d:	xchg   esi,eax
   14001630e:	add    BYTE PTR [rax],al
   140016310:	ins    DWORD PTR es:[rdi],dx
   140016311:	xchg   edi,eax
   140016312:	add    BYTE PTR [rax],al
   140016314:	js     0x14001632b
   140016316:	add    DWORD PTR [rax],eax
   140016318:	je     0x1400162b1
   14001631a:	add    BYTE PTR [rax],al
   14001631c:	sets   BYTE PTR [rax]
   14001631f:	add    BYTE PTR [rsi+riz*1],cl
   140016322:	add    DWORD PTR [rax],eax
   140016324:	sbb    BYTE PTR [rax-0x66fc0000],bl
   14001632a:	add    BYTE PTR [rax],al
   14001632c:	int3   
   14001632d:	sub    BYTE PTR [rcx],al
   14001632f:	add    BYTE PTR [rcx+rbx*4],cl
   140016332:	add    BYTE PTR [rax],al
   140016334:	xchg   ebx,eax
   140016335:	cdq    
   140016336:	add    BYTE PTR [rax],al
   140016338:	cwde   
   140016339:	sub    DWORD PTR [rcx],eax
   14001633b:	add    BYTE PTR [rcx+rbx*4-0x63290000],bl
   140016342:	add    BYTE PTR [rax],al
   140016344:	lods   al,BYTE PTR ds:[rsi]
   140016345:	sub    DWORD PTR [rcx],eax
   140016347:	add    al,ah
   140016349:	pushf  
   14001634a:	add    BYTE PTR [rax],al
   14001634c:	loope  0x1400162ec
   14001634e:	add    BYTE PTR [rax],al
   140016350:	enter  0x129,0x0
   140016354:	call   0x13d0163f7
   140016359:	lahf   
   14001635a:	add    BYTE PTR [rax],al
   14001635c:	cwde   
   14001635d:	sub    DWORD PTR [rcx],eax
   14001635f:	add    BYTE PTR [rax+riz*4],al
   140016362:	add    BYTE PTR [rax],al
   140016364:	adc    esp,DWORD PTR [rbx+0x29dc0000]
   14001636a:	add    DWORD PTR [rax],eax
   14001636c:	sbb    al,0xa3
   14001636e:	add    BYTE PTR [rax],al
   140016370:	sahf   
   140016371:	movabs ds:0xa3a4000128cc0000,eax
   14001637a:	add    BYTE PTR [rax],al
   14001637c:	out    dx,eax
   14001637d:	movabs ds:0xa3f80001260c0000,eax
   140016386:	add    BYTE PTR [rax],al
   140016388:	xchg   edx,eax
   140016389:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001638a:	add    BYTE PTR [rax],al
   14001638c:	add    BYTE PTR [rdx],ch
   14001638e:	add    DWORD PTR [rax],eax
   140016390:	cwde   
   140016391:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140016392:	add    BYTE PTR [rax],al
   140016394:	cwde   
   140016395:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140016396:	add    BYTE PTR [rax],al
   140016398:	and    BYTE PTR [rdx],ch
   14001639a:	add    DWORD PTR [rax],eax
   14001639c:	movabs al,ds:0xc0000a5f20000a5
   1400163a5:	add    DWORD PTR es:[rax],eax
   1400163a8:	clc    
   1400163a9:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400163aa:	add    BYTE PTR [rax],al
   1400163ac:	pop    rcx
   1400163ad:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400163ae:	add    BYTE PTR [rax],al
   1400163b0:	int3   
   1400163b1:	sub    BYTE PTR [rcx],al
   1400163b3:	add    BYTE PTR [rax-0x5a],ah
   1400163b6:	add    BYTE PTR [rax],al
   1400163b8:	xor    ebp,DWORD PTR [rax+0x2a440000]
   1400163be:	add    DWORD PTR [rax],eax
   1400163c0:	cmp    al,0xa8
   1400163c2:	add    BYTE PTR [rax],al
   1400163c4:	ss test eax,0x2a5c0000
   1400163ca:	add    DWORD PTR [rax],eax
   1400163cc:	cmp    al,0xa9
   1400163ce:	add    BYTE PTR [rax],al
   1400163d0:	adc    BYTE PTR [rdx+0x2a700000],ch
   1400163d6:	add    DWORD PTR [rax],eax
   1400163d8:	sbb    BYTE PTR [rdx-0x54340000],ch
   1400163de:	add    BYTE PTR [rax],al
   1400163e0:	test   BYTE PTR [rdx],ch
   1400163e2:	add    DWORD PTR [rax],eax
   1400163e4:	(bad)  
   1400163e5:	stos   DWORD PTR es:[rdi],eax
   1400163e6:	add    BYTE PTR [rax],al
   1400163e8:	scas   eax,DWORD PTR es:[rdi]
   1400163e9:	lods   al,BYTE PTR ds:[rsi]
   1400163ea:	add    BYTE PTR [rax],al
   1400163ec:	js     0x140016402
   1400163ee:	add    DWORD PTR [rax],eax
   1400163f0:	mov    eax,0x8e0000ac
   1400163f5:	scas   al,BYTE PTR es:[rdi]
   1400163f6:	add    BYTE PTR [rax],al
   1400163f8:	movabs al,ds:0x600000ae9400012a
   140016401:	scas   eax,DWORD PTR es:[rdi]
   140016402:	add    BYTE PTR [rax],al
   140016404:	or     al,0x26
   140016406:	add    DWORD PTR [rax],eax
   140016408:	test   al,0xaf
   14001640a:	add    BYTE PTR [rax],al
   14001640c:	cmp    eax,0x9c0000b0
   140016411:	sub    BYTE PTR [rcx],al
   140016413:	add    BYTE PTR [rax+rsi*4+0x0],al
   140016417:	add    BYTE PTR [rsi-0x4bffff50],bh
   14001641d:	sub    al,BYTE PTR [rcx]
   14001641f:	add    ah,al
   140016421:	mov    al,0x0
   140016423:	add    BYTE PTR [rcx+rsi*4+0x15600000],bl
   14001642a:	add    DWORD PTR [rax],eax
   14001642c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001642d:	mov    cl,0x0
   14001642f:	add    ch,cl
   140016431:	mov    cl,0x0
   140016433:	add    BYTE PTR [rax+0x15],bh
   140016436:	add    DWORD PTR [rax],eax
   140016438:	(bad)  
   140016439:	mov    cl,0x0
   14001643b:	add    BYTE PTR [rip+0xffffffffbc0000b2],dh        # 0xfc0164f3
   140016441:	sub    al,BYTE PTR [rcx]
   140016443:	add    BYTE PTR [rdx+rsi*4],bh
   140016446:	add    BYTE PTR [rax],al
   140016448:	pop    rdx
   140016449:	mov    dl,0x0
   14001644b:	add    BYTE PTR [rsi+riz*1],cl
   14001644e:	add    DWORD PTR [rax],eax
   140016450:	(bad)  
   140016451:	mov    dl,0x0
   140016453:	add    ch,ch
   140016455:	mov    dl,0x0
   140016457:	add    al,cl
   140016459:	sub    al,BYTE PTR [rcx]
   14001645b:	add    ah,dh
   14001645d:	mov    dl,0x0
   14001645f:	add    BYTE PTR [rsi-0x4d],dl
   140016462:	add    BYTE PTR [rax],al
   140016464:	js     0x14001647a
   140016466:	add    DWORD PTR [rax],eax
   140016468:	pop    rsp
   140016469:	mov    bl,0x0
   14001646b:	add    BYTE PTR [rsi+0x780000b3],bh
   140016471:	adc    al,0x1
   140016473:	add    ah,al
   140016475:	mov    bl,0x0
   140016477:	add    BYTE PTR [rdx],ch
   140016479:	mov    ah,0x0
   14001647b:	add    ah,bl
   14001647d:	sub    al,BYTE PTR [rcx]
   14001647f:	add    BYTE PTR [rax],dh
   140016481:	mov    ah,0x0
   140016483:	add    BYTE PTR [rsi-0x23ffff4c],dl
   140016489:	sub    al,BYTE PTR [rcx]
   14001648b:	add    BYTE PTR [rsp+rsi*4-0x4abb0000],bl
   140016492:	add    BYTE PTR [rax],al
   140016494:	call   0x18c0165c3
   140016499:	mov    ch,0x0
   14001649b:	add    BYTE PTR [rdx+0x6c0000b5],ah
   1400164a1:	(bad)  
   1400164a2:	add    DWORD PTR [rax],eax
   1400164a4:	test   al,0xb5
   1400164a6:	add    BYTE PTR [rax],al
   1400164a8:	or     esi,DWORD PTR [rsi+0x15780000]
   1400164ae:	add    DWORD PTR [rax],eax
   1400164b0:	adc    al,0xb6
   1400164b2:	add    BYTE PTR [rax],al
   1400164b4:	push   rbx
   1400164b5:	mov    dh,0x0
   1400164b7:	add    BYTE PTR [rax+0x15],bh
   1400164ba:	add    DWORD PTR [rax],eax
   1400164bc:	pop    rsp
   1400164bd:	mov    dh,0x0
   1400164bf:	add    BYTE PTR [rsi+rsi*4+0x15780000],cl
   1400164c6:	add    DWORD PTR [rax],eax
   1400164c8:	xchg   esp,eax
   1400164c9:	mov    dh,0x0
   1400164cb:	add    BYTE PTR [rdx],cl
   1400164cd:	mov    bh,0x0
   1400164cf:	add    BYTE PTR [rsi+riz*1],cl
   1400164d2:	add    DWORD PTR [rax],eax
   1400164d4:	adc    BYTE PTR [rdi-0x47c50000],dh
   1400164da:	add    BYTE PTR [rax],al
   1400164dc:	cld    
   1400164dd:	sub    al,BYTE PTR [rcx]
   1400164df:	add    BYTE PTR [rax+rdi*4+0x0],al
   1400164e3:	add    BYTE PTR [rbx+0x780000b8],al
   1400164e9:	adc    eax,0xb88c0001
   1400164ee:	add    BYTE PTR [rax],al
   1400164f0:	fnstcw WORD PTR [rax+0x15780000]
   1400164f6:	add    DWORD PTR [rax],eax
   1400164f8:	loopne 0x1400164b2
   1400164fa:	add    BYTE PTR [rax],al
   1400164fc:	scas   al,BYTE PTR es:[rdi]
   1400164fd:	mov    ecx,0x29440000
   140016502:	add    DWORD PTR [rax],eax
   140016504:	mov    ah,0xb9
   140016506:	add    BYTE PTR [rax],al
   140016508:	out    dx,al
   140016509:	mov    ecx,0x15780000
   14001650e:	add    DWORD PTR [rax],eax
   140016510:	hlt    
   140016511:	mov    ecx,0xba430000
   140016516:	add    BYTE PTR [rax],al
   140016518:	js     0x14001652f
   14001651a:	add    DWORD PTR [rax],eax
   14001651c:	rex.WR movabs rdx,0x2b140000bbb30000
   140016526:	add    DWORD PTR [rax],eax
   140016528:	mov    esp,0x8e0000bb
   14001652d:	mov    edi,0x2b300000
   140016532:	add    DWORD PTR [rax],eax
   140016534:	xchg   esp,eax
   140016535:	mov    edi,0xc1740000
   14001653a:	add    BYTE PTR [rax],al
   14001653c:	push   rsp
   14001653d:	sub    eax,DWORD PTR [rcx]
   14001653f:	add    BYTE PTR [rcx+rax*8+0x0],bh
   140016543:	add    BYTE PTR [rax],cl
   140016545:	enter  0x0,0x70
   140016549:	sub    eax,DWORD PTR [rcx]
   14001654b:	add    BYTE PTR [rax],dl
   14001654d:	enter  0x0,0xf8
   140016551:	retf   0x0
   140016554:	mov    BYTE PTR [rbx],ch
   140016556:	add    DWORD PTR [rax],eax
   140016558:	add    bl,cl
   14001655a:	add    BYTE PTR [rax],al
   14001655c:	nop
   14001655d:	int    0x0
   14001655f:	add    BYTE PTR [rcx+rbp*1-0x3267ffff],ch
   140016566:	add    BYTE PTR [rax],al
   140016568:	push   rsp
   140016569:	(bad)  
   14001656a:	add    BYTE PTR [rax],al
   14001656c:	lods   al,BYTE PTR ds:[rsi]
   14001656d:	sub    eax,DWORD PTR [rcx]
   14001656f:	add    BYTE PTR [rsi+rcx*8+0x0],bl
   140016573:	add    BYTE PTR [rax-0x3bffff2f],bl
   140016579:	sub    eax,DWORD PTR [rcx]
   14001657b:	add    BYTE PTR [rax+0x5b0000d1],ah
   140016581:	rol    BYTE PTR [rax],cl
   140016583:	add    BYTE PTR [rsi+rbx*1+0x1],ch
   140016587:	add    BYTE PTR [rdx+rdx*8+0x0],ah
   14001658b:	add    BYTE PTR [rax-0x2b],cl
   14001658e:	add    BYTE PTR [rax],al
   140016590:	adc    al,0x2b
   140016592:	add    DWORD PTR [rax],eax
   140016594:	push   rax
   140016595:	(bad)  
   140016596:	add    BYTE PTR [rax],al
   140016598:	(bad)  
   140016599:	fild   DWORD PTR [rax]
   14001659b:	add    ah,bl
   14001659d:	sub    eax,DWORD PTR [rcx]
   14001659f:	add    BYTE PTR [rax-0x25],cl
   1400165a2:	add    BYTE PTR [rax],al
   1400165a4:	rex.WB fadd QWORD PTR [r8]
   1400165a7:	add    BYTE PTR [rax+0x1e],bl
   1400165aa:	add    DWORD PTR [rax],eax
   1400165ac:	push   rax
   1400165ad:	fadd   QWORD PTR [rax]
   1400165af:	add    BYTE PTR [rbp+rbx*8+0x0],dh
   1400165b3:	add    ah,bh
   1400165b5:	sub    eax,DWORD PTR [rcx]
   1400165b7:	add    BYTE PTR [rbp+rbx*8+0x0],bh
   1400165bb:	add    BYTE PTR [rbx],ah
   1400165bd:	fiadd  WORD PTR [rax]
   1400165bf:	add    BYTE PTR [rax+rbp*1-0x21d3ffff],bl
   1400165c6:	add    BYTE PTR [rax],al
   1400165c8:	mov    ah,0xe1
   1400165ca:	add    BYTE PTR [rax],al
   1400165cc:	adc    al,0x2c
   1400165ce:	add    DWORD PTR [rax],eax
   1400165d0:	mov    esp,0xf50000e1
   1400165d5:	loope  0x1400165d7
   1400165d7:	add    ah,cl
   1400165d9:	sub    BYTE PTR [rcx],al
   1400165db:	add    BYTE PTR [rax],ah
   1400165dd:	loop   0x1400165df
   1400165df:	add    bh,ch
   1400165e1:	loop   0x1400165e3
   1400165e3:	add    BYTE PTR [rax+0x15],bh
   1400165e6:	add    DWORD PTR [rax],eax
   1400165e8:	add    bl,ah
   1400165ea:	add    BYTE PTR [rax],al
   1400165ec:	rex.WB jrcxz 0x1400165ef
   1400165ef:	add    BYTE PTR [rsp+rbp*1],ch
   1400165f2:	add    DWORD PTR [rax],eax
   1400165f4:	push   rax
   1400165f5:	jrcxz  0x1400165f7
   1400165f7:	add    BYTE PTR [rdx],ah
   1400165f9:	in     eax,0x0
   1400165fb:	add    BYTE PTR [rsp+rbp*1],dh
   1400165fe:	add    DWORD PTR [rax],eax
   140016600:	xor    ch,ah
   140016602:	add    BYTE PTR [rax],al
   140016604:	rex.X in eax,0x0
   140016607:	add    BYTE PTR [rax+0x15],bh
   14001660a:	add    DWORD PTR [rax],eax
   14001660c:	(bad)  
   14001660d:	in     eax,0x0
   14001660f:	add    BYTE PTR [rsi-0x1b],bh
   140016612:	add    BYTE PTR [rax],al
   140016614:	push   0xffffffff9000012c
   140016619:	in     eax,0x0
   14001661b:	add    al,al
   14001661d:	in     eax,0x0
   14001661f:	add    ah,cl
   140016621:	sub    BYTE PTR [rcx],al
   140016623:	add    al,cl
   140016625:	in     eax,0x0
   140016627:	add    ah,bh
   140016629:	in     eax,0x0
   14001662b:	add    BYTE PTR [rsi+riz*1],cl
   14001662e:	add    DWORD PTR [rax],eax
   140016630:	adc    dh,ah
   140016632:	add    BYTE PTR [rax],al
   140016634:	and    edi,0x2c740000
   14001663a:	add    DWORD PTR [rax],eax
   14001663c:	mov    bh,ah
   14001663e:	add    BYTE PTR [rax],al
   140016640:	jg     0x14001662a
   140016642:	add    BYTE PTR [rax],al
   140016644:	ins    BYTE PTR es:[rdi],dx
   140016645:	sub    al,0x1
   140016647:	add    BYTE PTR [rax-0x16ffff18],dh
   14001664d:	call   0x155796652
   140016652:	add    DWORD PTR [rax],eax
   140016654:	lock call 0x12909665a
   14001665a:	add    BYTE PTR [rax],al
   14001665c:	js     0x140016673
   14001665e:	add    DWORD PTR [rax],eax
   140016660:	sbb    al,0xe9
   140016662:	add    BYTE PTR [rax],al
   140016664:	jo     0x14001664f
   140016666:	add    BYTE PTR [rax],al
   140016668:	jl     0x140016696
   14001666a:	add    DWORD PTR [rax],eax
   14001666c:	js     0x140016657
   14001666e:	add    BYTE PTR [rax],al
   140016670:	mov    ebp,0xc0000e9
   140016675:	add    DWORD PTR es:[rax],eax
   140016678:	xor    dl,ch
   14001667a:	add    BYTE PTR [rax],al
   14001667c:	jge    0x140016668
   14001667e:	add    BYTE PTR [rax],al
   140016680:	pushf  
   140016681:	sub    al,0x1
   140016683:	add    ah,al
   140016685:	(bad)  
   140016686:	add    BYTE PTR [rax],al
   140016688:	xchg   esp,eax
   140016689:	jmp    0x14001668b
   14001668b:	add    al,al
   14001668d:	sub    al,0x1
   14001668f:	add    al,bl
   140016691:	jmp    0x140016693
   140016693:	add    dh,dh
   140016695:	jmp    0x140016697
   140016697:	add    BYTE PTR [rsi+riz*1],cl
   14001669a:	add    DWORD PTR [rax],eax
   14001669c:	and    ah,ch
   14001669e:	add    BYTE PTR [rax],al
   1400166a0:	cmp    eax,0x780000ec
   1400166a5:	adc    eax,0xec440001
   1400166aa:	add    BYTE PTR [rax],al
   1400166ac:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400166ad:	in     al,dx
   1400166ae:	add    BYTE PTR [rax],al
   1400166b0:	or     al,0x26
   1400166b2:	add    DWORD PTR [rax],eax
   1400166b4:	mov    al,0xec
   1400166b6:	add    BYTE PTR [rax],al
   1400166b8:	(bad)  
   1400166b9:	in     eax,dx
   1400166ba:	add    BYTE PTR [rax],al
   1400166bc:	sub    DWORD PTR [rcx],r8d
   1400166bf:	add    BYTE PTR [rax-0x13],dh
   1400166c2:	add    BYTE PTR [rax],al
   1400166c4:	jb     0x1400166b3
   1400166c6:	add    BYTE PTR [rax],al
   1400166c8:	shr    BYTE PTR [rcx+rax*1],1
   1400166cb:	add    BYTE PTR [rax-0x22ffff13],dl
   1400166d1:	in     eax,dx
   1400166d2:	add    BYTE PTR [rax],al
   1400166d4:	fsubr  DWORD PTR [rcx+rax*1]
   1400166d7:	add    BYTE PTR [rdx],cl
   1400166d9:	out    dx,al
   1400166da:	add    BYTE PTR [rax],al
   1400166dc:	xor    dh,ch
   1400166de:	add    BYTE PTR [rax],al
   1400166e0:	sub    BYTE PTR [rip+0xffffffffee360001],dl        # 0x12e3766e7
   1400166e6:	add    BYTE PTR [rax],al
   1400166e8:	pop    rsp
   1400166e9:	out    dx,al
   1400166ea:	add    BYTE PTR [rax],al
   1400166ec:	sub    BYTE PTR [rip+0xffffffffee9e0001],dl        # 0x12e9f66f3
   1400166f2:	add    BYTE PTR [rax],al
   1400166f4:	cld    
   1400166f5:	out    dx,al
   1400166f6:	add    BYTE PTR [rax],al
   1400166f8:	loopne 0x140016710
   1400166fa:	add    DWORD PTR [rax],eax
   1400166fc:	xor    ch,bh
   1400166fe:	add    BYTE PTR [rax],al
   140016700:	jb     0x1400166f1
   140016702:	add    BYTE PTR [rax],al
   140016704:	jo     0x14001671f
   140016706:	add    DWORD PTR [rax],eax
   140016708:	mov    edx,0xfa0000ef
   14001670d:	out    dx,eax
   14001670e:	add    BYTE PTR [rax],al
   140016710:	jo     0x14001672b
   140016712:	add    DWORD PTR [rax],eax
   140016714:	call   0x1ad016809
   140016719:	icebp  
   14001671a:	add    BYTE PTR [rax],al
   14001671c:	rcr    BYTE PTR [rip+0xfffffffff1850001],1        # 0x131866723
   140016722:	add    BYTE PTR [rax],al
   140016724:	iret   
   140016725:	icebp  
   140016726:	add    BYTE PTR [rax],al
   140016728:	in     al,0x1d
   14001672a:	add    DWORD PTR [rax],eax
   14001672c:	adc    esi,edx
   14001672e:	add    BYTE PTR [rax],al
   140016730:	mov    ch,0xf2
   140016732:	add    BYTE PTR [rax],al
   140016734:	fcomp  DWORD PTR [rdi]
   140016736:	add    DWORD PTR [rax],eax
   140016738:	mov    ebx,0x240000f2
   14001673d:	repz add BYTE PTR [rax],al
   140016740:	push   0xffffffff8e000120
   140016745:	repz add BYTE PTR [rax],al
   140016748:	push   rbx
   14001674a:	add    BYTE PTR [rax],al
   14001674c:	and    al,BYTE PTR [rcx]
   14001674f:	add    bl,al
   140016751:	hlt    
   140016752:	add    BYTE PTR [rax],al
   140016754:	add    ch,dh
   140016756:	add    BYTE PTR [rax],al
   140016758:	mov    eax,0x14000124
   14001675d:	cmc    
   14001675e:	add    BYTE PTR [rax],al
   140016760:	jbe    0x140016757
   140016762:	add    BYTE PTR [rax],al
   140016764:	loopne 0x14001678b
   140016766:	add    DWORD PTR [rax],eax
   140016768:	jbe    0x14001675f
   14001676a:	add    BYTE PTR [rax],al
   14001676c:	fdiv   st,st(5)
   14001676e:	add    BYTE PTR [rax],al
   140016770:	loopne 0x140016797
   140016772:	add    DWORD PTR [rax],eax
   140016774:	in     al,dx
   140016775:	cmc    
   140016776:	add    BYTE PTR [rax],al
   140016778:	adc    esi,esi
   14001677a:	add    BYTE PTR [rax],al
   14001677c:	mov    al,0x26
   14001677e:	add    DWORD PTR [rax],eax
   140016780:	jnp    0x140016778
   140016782:	add    BYTE PTR [rax],al
   140016784:	rex.RX test DWORD PTR [rax],0x1287800
   14001678b:	add    BYTE PTR [rsi-0x9],al
   14001678e:	add    BYTE PTR [rax],al
   140016790:	jb     0x140016789
   140016792:	add    BYTE PTR [rax],al
   140016794:	mov    WORD PTR [rax],gs
   140016796:	add    DWORD PTR [rax],eax
   140016798:	js     0x140016791
   14001679a:	add    BYTE PTR [rax],al
   14001679c:	xchg   esi,eax
   14001679d:	test   DWORD PTR [rax],0x1152800
   1400167a3:	add    BYTE PTR [rax-0x3fffff09],ah
   1400167a9:	test   DWORD PTR [rax],0x1152800
	...

Disassembly of section .rsrc:

0000000140017000 <.rsrc>:
	...
   14001700c:	add    DWORD PTR [rax],eax
   14001700e:	add    al,BYTE PTR [rax]
   140017010:	call   0x168817015
   140017015:	add    BYTE PTR [rax],al
   140017017:	adc    BYTE PTR [rax],0x0
   14001701a:	add    BYTE PTR [rax],al
   14001701c:	add    BYTE PTR [rax],al
   14001701f:	sbb    BYTE PTR [rax],0x0
   140017022:	add    BYTE PTR [rax],al
   140017024:	pop    rax
   140017025:	add    BYTE PTR [rax],al
   140017027:	add    BYTE PTR [rax],0x0
	...
   140017036:	add    DWORD PTR [rax],eax
   140017038:	add    DWORD PTR [rax],eax
   14001703a:	add    BYTE PTR [rax],al
   14001703c:	jo     0x14001703e
   14001703e:	add    BYTE PTR [rax+0x0],al
	...
   14001704c:	add    BYTE PTR [rax],al
   14001704e:	add    DWORD PTR [rax],eax
   140017050:	add    DWORD PTR [rax],eax
   140017052:	add    BYTE PTR [rax],al
   140017054:	mov    BYTE PTR [rax],al
   140017056:	add    BYTE PTR [rax+0x0],al
	...
   140017064:	add    BYTE PTR [rax],al
   140017066:	add    DWORD PTR [rax],eax
   140017068:	add    DWORD PTR [rax],eax
   14001706a:	add    BYTE PTR [rax],al
   14001706c:	movabs al,ds:0x800000
	...
   14001707d:	add    BYTE PTR [rcx],al
   14001707f:	add    BYTE PTR [rcx],cl
   140017081:	add    al,0x0
   140017083:	add    BYTE PTR [rax+0x0],bh
	...
   140017095:	add    BYTE PTR [rcx],al
   140017097:	add    BYTE PTR [rcx],cl
   140017099:	add    al,0x0
   14001709b:	add    al,cl
	...
   1400170ad:	add    BYTE PTR [rcx],al
   1400170af:	add    BYTE PTR [rcx],cl
   1400170b1:	add    al,0x0
   1400170b3:	add    al,bl
   1400170b5:	add    BYTE PTR [rax],al
   1400170b7:	add    BYTE PTR [rax+0x77],bl
   1400170ba:	add    DWORD PTR [rax],eax
   1400170bc:	enter  0x0,0x0
	...
   1400170c8:	test   al,0x73
   1400170ca:	add    DWORD PTR [rax],eax
   1400170cc:	lods   al,BYTE PTR ds:[rsi]
   1400170cd:	add    eax,DWORD PTR [rax]
	...
   1400170d7:	add    al,dh
   1400170d9:	jo     0x1400170dc
   1400170db:	add    BYTE PTR [rsi+0x2],dh
   1400170e1:	add    BYTE PTR [rax],al
   1400170e3:	add    BYTE PTR [rax],al
   1400170e5:	add    BYTE PTR [rax],al
   1400170e7:	add    BYTE PTR [rbx],al
   1400170e9:	add    BYTE PTR [rbp+0x0],cl
   1400170ec:	push   rbp
   1400170ed:	add    BYTE PTR [rcx+0x0],cl
   1400170f0:	cmp    al,0x3f
   1400170f2:	js     0x140017161
   1400170f4:	ins    BYTE PTR es:[rdi],dx
   1400170f5:	and    BYTE PTR [rsi+0x65],dh
   1400170f8:	jb     0x14001716d
   1400170fa:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   140017101:	xor    BYTE PTR [rdx],ah
   140017103:	and    BYTE PTR [rbp+0x6e],ah
   140017106:	movsxd ebp,DWORD PTR [rdi+0x64]
   140017109:	imul   ebp,DWORD PTR [rsi+0x67],0x5455223d
   140017110:	rex.RX sub eax,0x73202238
   140017116:	je     0x140017179
   140017118:	outs   dx,BYTE PTR ds:[rsi]
   140017119:	fs (bad) 
   14001711b:	ins    BYTE PTR es:[rdi],dx
   14001711c:	outs   dx,DWORD PTR ds:[rsi]
   14001711d:	outs   dx,BYTE PTR ds:[rsi]
   14001711e:	gs cmp eax,0x73657922
   140017124:	and    bh,BYTE PTR [rdi]
   140017126:	ds or  eax,0x2d213c0a
   14001712c:	sub    eax,0x706f4320
   140017131:	jns    0x1400171a5
   140017133:	imul   esp,DWORD PTR [rdi+0x68],0x63282074
   14001713a:	sub    DWORD PTR [rax],esp
   14001713c:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   140017144:	je     0x140017166
   140017146:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140017148:	jb     0x1400171ba
   14001714a:	outs   dx,DWORD PTR ds:[rsi]
   14001714b:	jb     0x1400171ae
   14001714d:	je     0x1400171b8
   14001714f:	outs   dx,DWORD PTR ds:[rsi]
   140017150:	outs   dx,BYTE PTR ds:[rsi]
   140017151:	and    BYTE PTR [rip+0xa0d3e2d],ch        # 0x14a0eaf84
   140017157:	cmp    al,0x61
   140017159:	jae    0x1400171ce
   14001715b:	gs ins DWORD PTR es:[rdi],dx
   14001715d:	(bad)  
   14001715e:	ins    BYTE PTR es:[rdi],dx
   14001715f:	jns    0x140017181
   140017161:	js     0x1400171d0
   140017163:	ins    BYTE PTR es:[rdi],dx
   140017164:	outs   dx,BYTE PTR ds:[rsi]
   140017165:	jae    0x1400171a4
   140017167:	and    dh,BYTE PTR [rbp+0x72]
   14001716a:	outs   dx,BYTE PTR ds:[rsi]
   14001716b:	cmp    dh,BYTE PTR [rbx+0x63]
   14001716e:	push   0x73616d65
   140017173:	sub    eax,0x7263696d
   140017178:	outs   dx,DWORD PTR ds:[rsi]
   140017179:	jae    0x1400171ea
   14001717b:	data16 je 0x1400171ab
   14001717e:	movsxd ebp,DWORD PTR [rdi+0x6d]
   140017181:	cmp    ah,BYTE PTR [rcx+0x73]
   140017184:	ins    DWORD PTR es:[rdi],dx
   140017185:	cs jbe 0x1400171b9
   140017188:	and    ah,BYTE PTR [rax]
   14001718a:	ins    DWORD PTR es:[rdi],dx
   14001718b:	(bad)  
   14001718c:	outs   dx,BYTE PTR ds:[rsi]
   14001718d:	imul   esp,DWORD PTR [rsi+0x65],0x65567473
   140017194:	jb     0x140017209
   140017196:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   14001719d:	xor    BYTE PTR [rdx],ah
   14001719f:	ds or  eax,0x73613c0a
   1400171a5:	jae    0x14001720c
   1400171a7:	ins    DWORD PTR es:[rdi],dx
   1400171a8:	(bad)  
   1400171a9:	ins    BYTE PTR es:[rdi],dx
   1400171aa:	jns    0x1400171f5
   1400171ac:	fs outs dx,BYTE PTR gs:[rsi]
   1400171af:	je     0x14001721a
   1400171b1:	je     0x14001722c
   1400171b3:	or     eax,0x2020200a
   1400171b8:	and    BYTE PTR [rsi+0x65],dh
   1400171bb:	jb     0x140017230
   1400171bd:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e35223d
   1400171c4:	xor    DWORD PTR [rsi],ebp
   1400171c6:	xor    BYTE PTR [rsi],ch
   1400171c8:	xor    BYTE PTR [rdx],ah
   1400171ca:	or     eax,0x2020200a
   1400171cf:	and    BYTE PTR [rax+0x72],dh
   1400171d2:	outs   dx,DWORD PTR ds:[rsi]
   1400171d3:	movsxd esp,DWORD PTR [rbp+0x73]
   1400171d6:	jae    0x140017247
   1400171d8:	jb     0x14001721b
   1400171da:	jb     0x14001723f
   1400171dc:	push   0x63657469
   1400171e1:	je     0x140017258
   1400171e3:	jb     0x14001724a
   1400171e5:	cmp    eax,0x646d6122
   1400171ea:	ss xor al,0x22
   1400171ed:	or     eax,0x2020200a
   1400171f2:	and    BYTE PTR [rsi+0x61],ch
   1400171f5:	ins    DWORD PTR es:[rdi],dx
   1400171f6:	gs cmp eax,0x63694d22
   1400171fc:	jb     0x14001726d
   1400171fe:	jae    0x14001726f
   140017200:	data16 je 0x140017231
   140017203:	push   rdi
   140017204:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
   14001720b:	imul   r13d,DWORD PTR [rbp+r12*2+0x73],0x65747379
   140017214:	ins    DWORD PTR es:[rdi],dx
   140017215:	cs rex.R jb 0x140017282
   140017219:	jbe    0x140017280
   14001721b:	jb     0x14001726e
   14001721d:	jne    0x140017284
   14001721f:	jb     0x14001729a
   140017221:	and    cl,BYTE PTR [rip+0x2020200a]        # 0x160219231
   140017227:	and    BYTE PTR [rcx+rdi*2+0x70],dh
   14001722b:	gs cmp eax,0x6e697722
   140017231:	xor    esi,DWORD PTR [rdx]
   140017233:	and    cl,BYTE PTR [rip+0xd3e2f0a]        # 0x14d3fa143
   140017239:	or     bh,BYTE PTR [rsp+riz*2]
   14001723c:	gs jae 0x1400172a2
   14001723f:	jb     0x1400172aa
   140017241:	jo     0x1400172b7
   140017243:	imul   ebp,DWORD PTR [rdi+0x6e],0x6575513e
   14001724a:	jb     0x1400172b5
   14001724c:	gs jae 0x14001726f
   14001724f:	je     0x1400172b9
   140017251:	and    BYTE PTR gs:[rdx+rsi*2+0x69],ah
   140017256:	jbe    0x1400172bd
   140017258:	jb     0x1400172cd
   14001725a:	and    BYTE PTR [rdi+0x6e],ch
   14001725d:	and    BYTE PTR [rcx+0x20],ah
   140017260:	jae    0x1400172db
   140017262:	jae    0x1400172d8
   140017264:	gs ins DWORD PTR es:[rdi],dx
   140017266:	cmp    al,0x2f
   140017268:	fs gs jae 0x1400172cf
   14001726c:	jb     0x1400172d7
   14001726e:	jo     0x1400172e4
   140017270:	imul   ebp,DWORD PTR [rdi+0x6e],0xd0a0d3e
   140017277:	or     bh,BYTE PTR [rsp+rsi*2]
   14001727a:	jb     0x1400172f1
   14001727c:	jae    0x1400172f2
   14001727e:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140017280:	outs   dx,WORD PTR ds:[rsi]
   140017282:	and    BYTE PTR [rax+0x6d],bh
   140017285:	ins    BYTE PTR es:[rdi],dx
   140017286:	outs   dx,BYTE PTR ds:[rsi]
   140017287:	jae    0x1400172c6
   140017289:	and    dh,BYTE PTR [rbp+0x72]
   14001728c:	outs   dx,BYTE PTR ds:[rsi]
   14001728d:	cmp    dh,BYTE PTR [rbx+0x63]
   140017290:	push   0x73616d65
   140017295:	sub    eax,0x7263696d
   14001729a:	outs   dx,DWORD PTR ds:[rsi]
   14001729b:	jae    0x14001730c
   14001729d:	data16 je 0x1400172cd
   1400172a0:	movsxd ebp,DWORD PTR [rdi+0x6d]
   1400172a3:	cmp    ah,BYTE PTR [rcx+0x73]
   1400172a6:	ins    DWORD PTR es:[rdi],dx
   1400172a7:	cs jbe 0x1400172dd
   1400172aa:	and    bh,BYTE PTR [rsi]
   1400172ac:	or     eax,0x2020200a
   1400172b1:	and    BYTE PTR [rbx+rsi*2],bh
   1400172b4:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   1400172b8:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x20200a0d
   1400172c0:	and    BYTE PTR [rax],ah
   1400172c2:	and    BYTE PTR [rax],ah
   1400172c4:	and    BYTE PTR [rax],ah
   1400172c6:	cmp    al,0x72
   1400172c8:	gs jno 0x140017340
   1400172cb:	gs jae 0x140017342
   1400172ce:	gs fs push rax
   1400172d1:	jb     0x14001733c
   1400172d3:	jbe    0x14001733e
   1400172d5:	ins    BYTE PTR es:[rdi],dx
   1400172d6:	gs addr32 gs jae 0x140017319
   1400172db:	or     eax,0x2020200a
   1400172e0:	and    BYTE PTR [rax],ah
   1400172e2:	and    BYTE PTR [rax],ah
   1400172e4:	and    BYTE PTR [rax],ah
   1400172e6:	and    BYTE PTR [rax],ah
   1400172e8:	and    BYTE PTR [rdx+rsi*2],bh
   1400172eb:	gs jno 0x140017363
   1400172ee:	gs jae 0x140017365
   1400172f1:	gs fs rex.RB js 0x14001735b
   1400172f6:	movsxd esi,DWORD PTR [rbp+0x74]
   1400172f9:	imul   ebp,DWORD PTR [rdi+0x6e],0x6576654c
   140017300:	ins    BYTE PTR es:[rdi],dx
   140017301:	or     eax,0x2020200a
   140017306:	and    BYTE PTR [rax],ah
   140017308:	and    BYTE PTR [rax],ah
   14001730a:	and    BYTE PTR [rax],ah
   14001730c:	and    BYTE PTR [rax],ah
   14001730e:	and    BYTE PTR [rax],ah
   140017310:	and    BYTE PTR [rax],ah
   140017312:	and    BYTE PTR [rbp+riz*2+0x76],ch
   140017316:	gs ins BYTE PTR es:[rdi],dx
   140017318:	cmp    eax,0x49736122
   14001731d:	outs   dx,BYTE PTR ds:[rsi]
   14001731e:	jbe    0x14001738f
   140017320:	imul   esp,DWORD PTR [rbp+0x72],0x22
   140017324:	or     eax,0x2020200a
   140017329:	and    BYTE PTR [rax],ah
   14001732b:	and    BYTE PTR [rax],ah
   14001732d:	and    BYTE PTR [rax],ah
   14001732f:	and    BYTE PTR [rax],ah
   140017331:	and    BYTE PTR [rax],ah
   140017333:	and    BYTE PTR [rax],ah
   140017335:	and    BYTE PTR [rbp+0x69],dh
   140017338:	movsxd esp,DWORD PTR [r11+0x65]
   14001733c:	jae    0x1400173b1
   14001733e:	cmp    eax,0x6c616622
   140017343:	jae    0x1400173aa
   140017345:	and    cl,BYTE PTR [rip+0x2020200a]        # 0x160219355
   14001734b:	and    BYTE PTR [rax],ah
   14001734d:	and    BYTE PTR [rax],ah
   14001734f:	and    BYTE PTR [rax],ah
   140017351:	and    BYTE PTR [rax],ah
   140017353:	and    BYTE PTR [rdi],ch
   140017355:	ds or  eax,0x2020200a
   14001735b:	and    BYTE PTR [rax],ah
   14001735d:	and    BYTE PTR [rax],ah
   14001735f:	and    BYTE PTR [rdi+rbp*1],bh
   140017362:	jb     0x1400173c9
   140017364:	jno    0x1400173db
   140017366:	gs jae 0x1400173dd
   140017369:	gs fs push rax
   14001736c:	jb     0x1400173d7
   14001736e:	jbe    0x1400173d9
   140017370:	ins    BYTE PTR es:[rdi],dx
   140017371:	gs addr32 gs jae 0x1400173b4
   140017376:	or     eax,0x2020200a
   14001737b:	and    BYTE PTR [rdi+rbp*1],bh
   14001737e:	jae    0x1400173e5
   140017380:	movsxd esi,DWORD PTR [rbp+0x72]
   140017383:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x2f3c0a0d
   14001738b:	je     0x1400173ff
   14001738d:	jne    0x140017402
   14001738f:	je     0x1400173da
   140017391:	outs   dx,BYTE PTR ds:[rsi]
   140017392:	outs   dx,WORD PTR ds:[rsi]
   140017394:	ds or  eax,0x612f3c0a
   14001739a:	jae    0x14001740f
   14001739c:	gs ins DWORD PTR es:[rdi],dx
   14001739e:	(bad)  
   14001739f:	ins    BYTE PTR es:[rdi],dx
   1400173a0:	jns    0x1400173e0
   1400173a2:	or     eax,0xa0d0a
   1400173a7:	add    BYTE PTR [rbx+rax*1+0x34],ch
   1400173ae:	push   rsi
   1400173af:	add    BYTE PTR [rbx+0x0],dl
   1400173b2:	pop    rdi
   1400173b3:	add    BYTE PTR [rsi+0x0],dl
   1400173b6:	add    BYTE PTR [r10+0x0],r10b
   1400173ba:	push   rbx
   1400173bb:	add    BYTE PTR [rcx+0x0],cl
   1400173be:	rex.WRXB add BYTE PTR [r14+0x0],r9b
   1400173c2:	pop    rdi
   1400173c3:	add    BYTE PTR [rcx+0x0],cl
   1400173c6:	rex.WRX add BYTE PTR [rsi+0x0],r8b
   1400173ca:	rex.WRXB add BYTE PTR [r8],r8b
   1400173cd:	add    BYTE PTR [rax],al
   1400173cf:	add    BYTE PTR [rbp+0xfeef04],bh
   1400173d5:	add    BYTE PTR [rcx],al
   1400173d7:	add    BYTE PTR [rax],al
   1400173d9:	add    BYTE PTR [rdx],cl
   1400173db:	add    BYTE PTR [rax],al
   1400173dd:	add    BYTE PTR [rax],bpl
   1400173e0:	add    BYTE PTR [rax],al
   1400173e2:	or     al,BYTE PTR [rax]
   1400173e4:	add    BYTE PTR [rax+0x0],al
   1400173e7:	sub    BYTE PTR [rdi],bh
   1400173e9:	add    BYTE PTR [rax],al
   1400173eb:	add    BYTE PTR [rax],al
   1400173ed:	add    BYTE PTR [rax],al
   1400173ef:	add    BYTE PTR [rax+rax*1],al
   1400173f2:	add    al,0x0
   1400173f4:	add    DWORD PTR [rax],eax
	...
   140017402:	add    BYTE PTR [rax],al
   140017404:	or     al,BYTE PTR [rbx]
   140017406:	add    BYTE PTR [rax],al
   140017408:	add    DWORD PTR [rax],eax
   14001740a:	push   rbx
   14001740b:	add    BYTE PTR [rax+rax*1+0x72],dh
   14001740f:	add    BYTE PTR [rcx+0x0],ch
   140017412:	outs   dx,BYTE PTR ds:[rsi]
   140017413:	add    BYTE PTR [rdi+0x0],ah
   140017416:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14001741a:	ins    BYTE PTR es:[rdi],dx
   14001741b:	add    BYTE PTR [rbp+0x0],ah
   14001741e:	rex.WB add BYTE PTR [r14+0x0],bpl
   140017422:	data16 add BYTE PTR [rdi+0x0],ch
   140017426:	add    BYTE PTR [rax],al
   140017428:	out    0x2,al
   14001742a:	add    BYTE PTR [rax],al
   14001742c:	add    DWORD PTR [rax],eax
   14001742e:	xor    BYTE PTR [rax],al
   140017430:	xor    al,0x0
   140017432:	xor    BYTE PTR [rax],al
   140017434:	cmp    DWORD PTR [rax],eax
   140017436:	xor    BYTE PTR [rax],al
   140017438:	xor    al,0x0
   14001743a:	rex.X add BYTE PTR [rax],sil
   14001743d:	add    BYTE PTR [rax],al
   14001743f:	add    BYTE PTR [rax+rax*1+0x16],cl
   140017443:	add    BYTE PTR [rcx],al
   140017445:	add    BYTE PTR [rbx+0x0],al
   140017448:	outs   dx,DWORD PTR ds:[rsi]
   140017449:	add    BYTE PTR [rbp+0x0],ch
   14001744c:	jo     0x14001744e
   14001744e:	(bad)  
   14001744f:	add    BYTE PTR [rsi+0x0],ch
   140017452:	jns    0x140017454
   140017454:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   140017458:	ins    DWORD PTR es:[rdi],dx
   140017459:	add    BYTE PTR [rbp+0x0],ah
   14001745c:	add    BYTE PTR [rax],al
   14001745e:	add    BYTE PTR [rax],al
   140017460:	rex.WRB add BYTE PTR [r9+0x0],r13b
   140017464:	movsxd eax,DWORD PTR [rax]
   140017466:	jb     0x140017468
   140017468:	outs   dx,DWORD PTR ds:[rsi]
   140017469:	add    BYTE PTR [rbx+0x0],dh
   14001746c:	outs   dx,DWORD PTR ds:[rsi]
   14001746d:	add    BYTE PTR [rsi+0x0],ah
   140017470:	je     0x140017472
   140017472:	and    BYTE PTR [rax],al
   140017474:	rex.XB add BYTE PTR [r15+0x0],bpl
   140017478:	jb     0x14001747a
   14001747a:	jo     0x14001747c
   14001747c:	outs   dx,DWORD PTR ds:[rsi]
   14001747d:	add    BYTE PTR [rdx+0x0],dh
   140017480:	(bad)  
   140017481:	add    BYTE PTR [rax+rax*1+0x69],dh
   140017485:	add    BYTE PTR [rdi+0x0],ch
   140017488:	outs   dx,BYTE PTR ds:[rsi]
   140017489:	add    BYTE PTR [rax],al
   14001748b:	add    BYTE PTR [rax+0x0],ch
   14001748e:	and    BYTE PTR [rax],al
   140017490:	add    DWORD PTR [rax],eax
   140017492:	rex.RX add BYTE PTR [rcx+0x0],r13b
   140017496:	ins    BYTE PTR es:[rdi],dx
   140017497:	add    BYTE PTR [rbp+0x0],ah
   14001749a:	add    BYTE PTR [rbp+0x0],r12b
   14001749e:	jae    0x1400174a0
   1400174a0:	movsxd eax,DWORD PTR [rax]
   1400174a2:	jb     0x1400174a4
   1400174a4:	imul   eax,DWORD PTR [rax],0x740070
   1400174aa:	imul   eax,DWORD PTR [rax],0x6e006f
   1400174b0:	add    BYTE PTR [rax],al
   1400174b2:	add    BYTE PTR [rax],al
   1400174b4:	push   rcx
   1400174b5:	add    BYTE PTR [rbp+0x0],dh
   1400174b8:	add    BYTE PTR gs:[rdx+0x0],dh
   1400174bc:	imul   eax,DWORD PTR [rax],0x730065
   1400174c2:	and    BYTE PTR [rax],al
   1400174c4:	je     0x1400174c6
   1400174c6:	push   0x20006500
   1400174cb:	add    BYTE PTR [rax+rax*1+0x72],ah
   1400174cf:	add    BYTE PTR [rcx+0x0],ch
   1400174d2:	jbe    0x1400174d4
   1400174d4:	add    BYTE PTR gs:[rdx+0x0],dh
   1400174d8:	jae    0x1400174da
   1400174da:	and    BYTE PTR [rax],al
   1400174dc:	outs   dx,DWORD PTR ds:[rsi]
   1400174dd:	add    BYTE PTR [rsi+0x0],ch
   1400174e0:	and    BYTE PTR [rax],al
   1400174e2:	(bad)  
   1400174e3:	add    BYTE PTR [rax],ah
   1400174e5:	add    BYTE PTR [rbx+0x0],dh
   1400174e8:	jns    0x1400174ea
   1400174ea:	jae    0x1400174ec
   1400174ec:	je     0x1400174ee
   1400174ee:	add    BYTE PTR gs:[rbp+0x0],ch
   1400174f2:	add    BYTE PTR [rax],al
   1400174f4:	data16 add BYTE PTR [rbx],ah
   1400174f7:	add    BYTE PTR [rcx],al
   1400174f9:	add    BYTE PTR [rsi+0x0],al
   1400174fc:	imul   eax,DWORD PTR [rax],0x65006c
   140017502:	push   rsi
   140017503:	add    BYTE PTR [rbp+0x0],ah
   140017506:	jb     0x140017508
   140017508:	jae    0x14001750a
   14001750a:	imul   eax,DWORD PTR [rax],0x6e006f
   140017510:	add    BYTE PTR [rax],al
   140017512:	add    BYTE PTR [rax],al
   140017514:	xor    DWORD PTR [rax],eax
   140017516:	xor    BYTE PTR [rax],al
   140017518:	add    BYTE PTR cs:[rax],dh
   14001751b:	add    BYTE PTR [rsi],ch
   14001751d:	add    BYTE PTR [rcx],dh
   14001751f:	add    BYTE PTR [rax],dh
   140017521:	add    BYTE PTR [rdx],dh
   140017523:	add    BYTE PTR [rax+rax*1],dh
   140017526:	xor    BYTE PTR [rax],al
   140017528:	add    BYTE PTR cs:[rcx],dh
   14001752b:	add    BYTE PTR [rsi],dh
   14001752d:	add    BYTE PTR [rbx],dh
   14001752f:	add    BYTE PTR [rax],bh
   140017531:	add    BYTE PTR [rax+rax*1],dh
   140017534:	and    BYTE PTR [rax],al
   140017536:	sub    BYTE PTR [rax],al
   140017538:	je     0x14001753a
   14001753a:	push   0x2e003100
   14001753f:	add    BYTE PTR [rcx],dh
   140017541:	add    BYTE PTR [rip+0x37003000],dh        # 0x17701a547
   140017547:	add    BYTE PTR [rax],dh
   140017549:	add    BYTE PTR [rcx],bh
   14001754b:	add    BYTE PTR [rip+0x37003100],ch        # 0x17701a651
   140017551:	add    BYTE PTR [rax],dh
   140017553:	add    BYTE PTR [rax],dh
   140017555:	add    BYTE PTR [rcx],ch
   140017557:	add    BYTE PTR [rax],al
   140017559:	add    BYTE PTR [rax],al
   14001755b:	add    BYTE PTR [rax+0x0],al
   14001755e:	adc    BYTE PTR [rax],al
   140017560:	add    DWORD PTR [rax],eax
   140017562:	rex.WB add BYTE PTR [r14+0x0],bpl
   140017566:	je     0x140017568
   140017568:	add    BYTE PTR gs:[rdx+0x0],dh
   14001756c:	outs   dx,BYTE PTR ds:[rsi]
   14001756d:	add    BYTE PTR [rcx+0x0],ah
   140017570:	ins    BYTE PTR es:[rdi],dx
   140017571:	add    BYTE PTR [rsi+0x0],cl
   140017574:	(bad)  
   140017575:	add    BYTE PTR [rbp+0x0],ch
   140017578:	add    BYTE PTR gs:[rax],al
   14001757b:	add    BYTE PTR [rax+rax*1+0x72],ah
   14001757f:	add    BYTE PTR [rcx+0x0],ch
   140017582:	jbe    0x140017584
   140017584:	add    BYTE PTR gs:[rdx+0x0],dh
   140017588:	jno    0x14001758a
   14001758a:	jne    0x14001758c
   14001758c:	add    BYTE PTR gs:[rdx+0x0],dh
   140017590:	jns    0x140017592
   140017592:	add    BYTE PTR cs:[rbp+0x0],ah
   140017596:	js     0x140017598
   140017598:	add    BYTE PTR gs:[rax],al
   14001759b:	add    BYTE PTR [rax+0x1002e00],al
   1400175a1:	add    BYTE PTR [rax+rax*1+0x65],cl
   1400175a5:	add    BYTE PTR [rdi+0x0],ah
   1400175a8:	(bad)  
   1400175a9:	add    BYTE PTR [rax+rax*1+0x43],ch
   1400175ad:	add    BYTE PTR [rdi+0x0],ch
   1400175b0:	jo     0x1400175b2
   1400175b2:	jns    0x1400175b4
   1400175b4:	jb     0x1400175b6
   1400175b6:	imul   eax,DWORD PTR [rax],0x680067
   1400175bc:	je     0x1400175be
   1400175be:	add    BYTE PTR [rax],al
   1400175c0:	test   eax,0x4d002000
   1400175c5:	add    BYTE PTR [rcx+0x0],ch
   1400175c8:	movsxd eax,DWORD PTR [rax]
   1400175ca:	jb     0x1400175cc
   1400175cc:	outs   dx,DWORD PTR ds:[rsi]
   1400175cd:	add    BYTE PTR [rbx+0x0],dh
   1400175d0:	outs   dx,DWORD PTR ds:[rsi]
   1400175d1:	add    BYTE PTR [rsi+0x0],ah
   1400175d4:	je     0x1400175d6
   1400175d6:	and    BYTE PTR [rax],al
   1400175d8:	rex.XB add BYTE PTR [r15+0x0],bpl
   1400175dc:	jb     0x1400175de
   1400175de:	jo     0x1400175e0
   1400175e0:	outs   dx,DWORD PTR ds:[rsi]
   1400175e1:	add    BYTE PTR [rdx+0x0],dh
   1400175e4:	(bad)  
   1400175e5:	add    BYTE PTR [rax+rax*1+0x69],dh
   1400175e9:	add    BYTE PTR [rdi+0x0],ch
   1400175ec:	outs   dx,BYTE PTR ds:[rsi]
   1400175ed:	add    BYTE PTR [rsi],ch
   1400175ef:	add    BYTE PTR [rax],ah
   1400175f1:	add    BYTE PTR [rcx+0x0],al
   1400175f4:	ins    BYTE PTR es:[rdi],dx
   1400175f5:	add    BYTE PTR [rax+rax*1+0x20],ch
   1400175f9:	add    BYTE PTR [rdx+0x0],dh
   1400175fc:	imul   eax,DWORD PTR [rax],0x680067
   140017602:	je     0x140017604
   140017604:	jae    0x140017606
   140017606:	and    BYTE PTR [rax],al
   140017608:	jb     0x14001760a
   14001760a:	add    BYTE PTR gs:[rbx+0x0],dh
   14001760e:	add    BYTE PTR gs:[rdx+0x0],dh
   140017612:	jbe    0x140017614
   140017614:	add    BYTE PTR gs:[rax+rax*1+0x2e],ah
   140017619:	add    BYTE PTR [rax],al
   14001761b:	add    BYTE PTR [rsi],bh
   14001761d:	add    BYTE PTR [rbx],cl
   14001761f:	add    BYTE PTR [rcx],al
   140017621:	add    BYTE PTR [rdi+0x0],cl
   140017624:	jb     0x140017626
   140017626:	imul   eax,DWORD PTR [rax],0x690067
   14001762c:	outs   dx,BYTE PTR ds:[rsi]
   14001762d:	add    BYTE PTR [rcx+0x0],ah
   140017630:	ins    BYTE PTR es:[rdi],dx
   140017631:	add    BYTE PTR [rsi+0x0],al
   140017634:	imul   eax,DWORD PTR [rax],0x65006c
   14001763a:	outs   dx,BYTE PTR ds:[rsi]
   14001763b:	add    BYTE PTR [rcx+0x0],ah
   14001763e:	ins    DWORD PTR es:[rdi],dx
   14001763f:	add    BYTE PTR [rbp+0x0],ah
   140017642:	add    BYTE PTR [rax],al
   140017644:	add    BYTE PTR fs:[rdx+0x0],dh
   140017648:	jbe    0x14001764a
   14001764a:	jno    0x14001764c
   14001764c:	jb     0x14001764e
   14001764e:	jns    0x140017650
   140017650:	add    BYTE PTR cs:[rbp+0x0],ah
   140017654:	js     0x140017656
   140017656:	add    BYTE PTR gs:[rax],al
   140017659:	add    BYTE PTR [rax],al
   14001765b:	add    BYTE PTR [rdx+0x0],ch
   14001765e:	and    eax,0x50000100
   140017663:	add    BYTE PTR [rdx+0x0],dh
   140017666:	outs   dx,DWORD PTR ds:[rsi]
   140017667:	add    BYTE PTR [rax+rax*1+0x75],ah
   14001766b:	add    BYTE PTR [rbx+0x0],ah
   14001766e:	je     0x140017670
   140017670:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   140017674:	ins    DWORD PTR es:[rdi],dx
   140017675:	add    BYTE PTR [rbp+0x0],ah
   140017678:	add    BYTE PTR [rax],al
   14001767a:	add    BYTE PTR [rax],al
   14001767c:	rex.WRB add BYTE PTR [r9+0x0],r13b
   140017680:	movsxd eax,DWORD PTR [rax]
   140017682:	jb     0x140017684
   140017684:	outs   dx,DWORD PTR ds:[rsi]
   140017685:	add    BYTE PTR [rbx+0x0],dh
   140017688:	outs   dx,DWORD PTR ds:[rsi]
   140017689:	add    BYTE PTR [rsi+0x0],ah
   14001768c:	je     0x14001768e
   14001768e:	scas   al,BYTE PTR es:[rdi]
   14001768f:	add    BYTE PTR [rax],ah
   140017691:	add    BYTE PTR [rdi+0x0],dl
   140017694:	imul   eax,DWORD PTR [rax],0x64006e
   14001769a:	outs   dx,DWORD PTR ds:[rsi]
   14001769b:	add    BYTE PTR [rdi+0x0],dh
   14001769e:	jae    0x1400176a0
   1400176a0:	scas   al,BYTE PTR es:[rdi]
   1400176a1:	add    BYTE PTR [rax],ah
   1400176a3:	add    BYTE PTR [rdi+0x0],cl
   1400176a6:	jo     0x1400176a8
   1400176a8:	add    BYTE PTR gs:[rdx+0x0],dh
   1400176ac:	(bad)  
   1400176ad:	add    BYTE PTR [rax+rax*1+0x69],dh
   1400176b1:	add    BYTE PTR [rsi+0x0],ch
   1400176b4:	add    BYTE PTR [eax],ah
   1400176b7:	add    BYTE PTR [rbx+0x0],dl
   1400176ba:	jns    0x1400176bc
   1400176bc:	jae    0x1400176be
   1400176be:	je     0x1400176c0
   1400176c0:	add    BYTE PTR gs:[rbp+0x0],ch
   1400176c4:	add    BYTE PTR [rax],al
   1400176c6:	add    BYTE PTR [rax],al
   1400176c8:	rex.RX add BYTE PTR [rcx],r10b
   1400176cb:	add    BYTE PTR [rcx],al
   1400176cd:	add    BYTE PTR [rax+0x0],dl
   1400176d0:	jb     0x1400176d2
   1400176d2:	outs   dx,DWORD PTR ds:[rsi]
   1400176d3:	add    BYTE PTR [rax+rax*1+0x75],ah
   1400176d7:	add    BYTE PTR [rbx+0x0],ah
   1400176da:	je     0x1400176dc
   1400176dc:	push   rsi
   1400176dd:	add    BYTE PTR [rbp+0x0],ah
   1400176e0:	jb     0x1400176e2
   1400176e2:	jae    0x1400176e4
   1400176e4:	imul   eax,DWORD PTR [rax],0x6e006f
   1400176ea:	add    BYTE PTR [rax],al
   1400176ec:	xor    DWORD PTR [rax],eax
   1400176ee:	xor    BYTE PTR [rax],al
   1400176f0:	add    BYTE PTR cs:[rax],dh
   1400176f3:	add    BYTE PTR [rsi],ch
   1400176f5:	add    BYTE PTR [rcx],dh
   1400176f7:	add    BYTE PTR [rax],dh
   1400176f9:	add    BYTE PTR [rdx],dh
   1400176fb:	add    BYTE PTR [rax+rax*1],dh
   1400176fe:	xor    BYTE PTR [rax],al
   140017700:	add    BYTE PTR cs:[rcx],dh
   140017703:	add    BYTE PTR [rsi],dh
   140017705:	add    BYTE PTR [rbx],dh
   140017707:	add    BYTE PTR [rax],bh
   140017709:	add    BYTE PTR [rax+rax*1],dh
   14001770c:	add    BYTE PTR [rax],al
   14001770e:	add    BYTE PTR [rax],al
   140017710:	add    BYTE PTR [rax],r8b
   140017713:	add    BYTE PTR [rcx],al
   140017715:	add    BYTE PTR [rsi+0x0],dl
   140017718:	(bad)  
   140017719:	add    BYTE PTR [rdx+0x0],dh
   14001771c:	rex.RX add BYTE PTR [rcx+0x0],r13b
   140017720:	ins    BYTE PTR es:[rdi],dx
   140017721:	add    BYTE PTR [rbp+0x0],ah
   140017724:	rex.WB add BYTE PTR [r14+0x0],bpl
   140017728:	data16 add BYTE PTR [rdi+0x0],ch
   14001772c:	add    BYTE PTR [rax],al
   14001772e:	add    BYTE PTR [rax],al
   140017730:	and    al,0x0
   140017732:	add    al,0x0
   140017734:	add    BYTE PTR [rax],al
   140017736:	push   rsp
   140017737:	add    BYTE PTR [rdx+0x0],dh
   14001773a:	(bad)  
   14001773b:	add    BYTE PTR [rsi+0x0],ch
   14001773e:	jae    0x140017740
   140017740:	ins    BYTE PTR es:[rdi],dx
   140017741:	add    BYTE PTR [rcx+0x0],ah
   140017744:	je     0x140017746
   140017746:	imul   eax,DWORD PTR [rax],0x6e006f
   14001774c:	add    BYTE PTR [rax],al
   14001774e:	add    BYTE PTR [rax],al
   140017750:	or     DWORD PTR [rax+rsi*4],eax
   140017753:	add    al,0x0
   140017755:	add    BYTE PTR [rax],al
   140017757:	add    ch,cl
   140017759:	dec    ch
   14001775b:	dec    al
   14001775d:	add    BYTE PTR [rax],al
   14001775f:	add    BYTE PTR [rax],al
   140017761:	add    BYTE PTR [rcx],al
   140017763:	add    BYTE PTR [rax],al
   140017765:	add    BYTE PTR [rax],al
   140017767:	add    BYTE PTR [rcx],dl
   140017769:	add    BYTE PTR [rax],al
   14001776b:	add    BYTE PTR [rax],al
   14001776d:	add    BYTE PTR [rax],al
   14001776f:	add    BYTE PTR [rdx],al
   140017771:	add    BYTE PTR [rax],al
   140017773:	add    al,cl
   140017775:	mov    bl,0x55
   140017777:	(bad)  
   140017778:	ret    
   140017779:	(bad)  
   14001777a:	rex.RXB call 0x110f91204
   140017780:	xor    DWORD PTR [rcx+rbx*2-0x5a2e9b26],esp
   140017787:	jrcxz  0x1400177ea
   140017789:	sub    DWORD PTR [rax-0x2],ecx
   14001778c:	iret   
   14001778d:	lods   al,BYTE PTR ds:[rsi]
   14001778e:	mov    bh,0x26
   140017790:	test   DWORD PTR [rsi+0x6bf7],0x0
	...
   1400177aa:	add    BYTE PTR [rax],al
   1400177ac:	mov    BYTE PTR [rax],al
   1400177ae:	add    BYTE PTR [rax],al
   1400177b0:	(bad)  
   1400177b1:	add    BYTE PTR [rax],al
   1400177b3:	add    BYTE PTR [rax+0x8000000],bl
   1400177b9:	add    BYTE PTR [rax],al
   1400177bb:	add    BYTE PTR [rax+0xe000000],ah
   1400177c1:	add    BYTE PTR [rax],al
   1400177c3:	add    BYTE PTR [rax+0x8000000],dh
	...
   1400177d1:	add    BYTE PTR [rax],al
   1400177d3:	add    BYTE PTR [rax+0xc000000],bh
   1400177d9:	add    BYTE PTR [rax],al
   1400177db:	add    BYTE PTR [rax],al
   1400177dd:	add    BYTE PTR [rax],al
   1400177df:	add    BYTE PTR [rbp+0x0],cl
   1400177e2:	push   rbp
   1400177e3:	add    BYTE PTR [rcx+0x0],cl
	...
   1400177ee:	add    BYTE PTR [rax],al
   1400177f0:	adc    BYTE PTR [rax],al
   1400177f2:	add    BYTE PTR [rax],al
   1400177f4:	sbb    BYTE PTR [rax],al
   1400177f6:	add    BYTE PTR [rax],al
   1400177f8:	rex.WRB add BYTE PTR [r13+0x0],r10b
   1400177fc:	rex.WB add BYTE PTR [r8],al
	...
   140017807:	add    BYTE PTR [rsi],al
   140017809:	add    BYTE PTR [rax],al
   14001780b:	add    BYTE PTR [rax],dl
   14001780d:	add    BYTE PTR [rax],al
   14001780f:	add    BYTE PTR [rbp+0x0],ah
   140017812:	outs   dx,BYTE PTR ds:[rsi]
   140017813:	add    BYTE PTR [rip+0x53005500],ch        # 0x19301cd19
   140017819:	add    BYTE PTR [rax],al
   14001781b:	add    BYTE PTR [rax],al
   14001781d:	add    BYTE PTR [rax],al
	...

Disassembly of section .reloc:

0000000140018000 <.reloc>:
   140018000:	add    BYTE PTR [rax],al
   140018002:	add    DWORD PTR [rax],eax
   140018004:	sbb    al,0x0
   140018006:	add    BYTE PTR [rax],al
   140018008:	mov    BYTE PTR [rbp-0x5a5f5a70],ah
   14001800e:	mov    eax,0xa5c0a5
   140018013:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140018014:	or     BYTE PTR [rsi-0x59df59f0],ah
   14001801a:	add    BYTE PTR [rax],al
   14001801c:	add    BYTE PTR [rax],dl
   14001801e:	add    DWORD PTR [rax],eax
   140018020:	adc    BYTE PTR [rax],al
   140018022:	add    BYTE PTR [rax],al
   140018024:	mov    eax,0xd8a1d0a1
   140018029:	movabs eax,ds:0xc00015000a1e0
   140018032:	add    BYTE PTR [rax],al
   140018034:	.byte 0x20
   140018035:	.byte 0xa0
   140018036:	rex.W
   140018037:	.byte 0xa0
